
2d5a77b261837ea4794495787fb0acd3466786700c1ed7a42b128de50c2ba5c7.exe:     file format pei-i386


Disassembly of section .text:

10001000 <.text>:
10001000:	mov    DWORD PTR [ecx],0x100655b8
10001006:	jmp    0x10041ed0
1000100b:	push   esi
1000100c:	mov    esi,ecx
1000100e:	mov    DWORD PTR [esi],0x100655b8
10001014:	call   0x10041ed0
10001019:	test   BYTE PTR [esp+0x8],0x1
1000101e:	je     0x10001027
10001020:	push   esi
10001021:	call   0x10041d92
10001026:	pop    ecx
10001027:	mov    eax,esi
10001029:	pop    esi
1000102a:	ret    0x4
1000102d:	push   ebp
1000102e:	mov    ebp,esp
10001030:	push   DWORD PTR [ebp+0x14]
10001033:	push   DWORD PTR [ebp+0x10]
10001036:	push   DWORD PTR [ebp+0xc]
10001039:	push   DWORD PTR [ebp+0x8]
1000103c:	call   0x100422c5
10001041:	mov    eax,DWORD PTR [ebp+0x8]
10001044:	add    esp,0x10
10001047:	pop    ebp
10001048:	ret    
10001049:	push   ebp
1000104a:	mov    ebp,esp
1000104c:	push   DWORD PTR [ebp+0x14]
1000104f:	push   DWORD PTR [ebp+0x10]
10001052:	push   DWORD PTR [ebp+0xc]
10001055:	push   DWORD PTR [ebp+0x8]
10001058:	call   0x10041da6
1000105d:	mov    eax,DWORD PTR [ebp+0x8]
10001060:	add    esp,0x10
10001063:	pop    ebp
10001064:	ret    
10001065:	push   0x4
10001067:	mov    eax,0x1005e6ab
1000106c:	call   0x10058845
10001071:	mov    esi,ecx
10001073:	mov    DWORD PTR [ebp-0x10],esi
10001076:	call   0x10041e01
1000107b:	and    DWORD PTR [ebp-0x4],0x0
1000107f:	push   DWORD PTR [ebp+0x8]
10001082:	lea    ecx,[esi+0xc]
10001085:	mov    DWORD PTR [esi],0x1006a770
1000108b:	call   0x100011b0
10001090:	mov    eax,esi
10001092:	call   0x1005891d
10001097:	ret    0x4
1000109a:	push   esi
1000109b:	mov    esi,ecx
1000109d:	push   0x0
1000109f:	push   0x1
100010a1:	lea    ecx,[esi+0xc]
100010a4:	mov    DWORD PTR [esi],0x1006a770
100010aa:	call   0x100012f9
100010af:	mov    ecx,esi
100010b1:	pop    esi
100010b2:	jmp    0x10041ed0
100010b7:	cmp    DWORD PTR [ecx+0x24],0x10
100010bb:	jb     0x100010c1
100010bd:	mov    eax,DWORD PTR [ecx+0x10]
100010c0:	ret    
100010c1:	lea    eax,[ecx+0x10]
100010c4:	ret    
100010c5:	push   esi
100010c6:	mov    esi,ecx
100010c8:	call   0x1000109a
100010cd:	test   BYTE PTR [esp+0x8],0x1
100010d2:	je     0x100010db
100010d4:	push   esi
100010d5:	call   0x10041d92
100010da:	pop    ecx
100010db:	mov    eax,esi
100010dd:	pop    esi
100010de:	ret    0x4
100010e1:	mov    DWORD PTR [ecx],0x1006a788
100010e7:	jmp    0x1000109a
100010ec:	push   esi
100010ed:	mov    esi,ecx
100010ef:	mov    DWORD PTR [esi],0x1006a788
100010f5:	call   0x1000109a
100010fa:	test   BYTE PTR [esp+0x8],0x1
100010ff:	je     0x10001108
10001101:	push   esi
10001102:	call   0x10041d92
10001107:	pop    ecx
10001108:	mov    eax,esi
1000110a:	pop    esi
1000110b:	ret    0x4
1000110e:	push   esi
1000110f:	push   DWORD PTR [esp+0x8]
10001113:	mov    esi,ecx
10001115:	call   0x10001126
1000111a:	mov    DWORD PTR [esi],0x1006a788
10001120:	mov    eax,esi
10001122:	pop    esi
10001123:	ret    0x4
10001126:	push   0x4
10001128:	mov    eax,0x1005e6ab
1000112d:	call   0x10058845
10001132:	mov    esi,ecx
10001134:	mov    DWORD PTR [ebp-0x10],esi
10001137:	mov    edi,DWORD PTR [ebp+0x8]
1000113a:	push   edi
1000113b:	call   0x10041e78
10001140:	and    DWORD PTR [ebp-0x4],0x0
10001144:	add    edi,0xc
10001147:	push   edi
10001148:	lea    ecx,[esi+0xc]
1000114b:	mov    DWORD PTR [esi],0x1006a770
10001151:	call   0x100011b0
10001156:	mov    eax,esi
10001158:	call   0x1005891d
1000115d:	ret    0x4
10001160:	push   0x28
10001162:	mov    eax,0x10061e49
10001167:	call   0x100588ae
1000116c:	mov    eax,DWORD PTR [ebp+0x8]
1000116f:	lea    edx,[ebp-0x34]
10001172:	push   edx
10001173:	push   eax
10001174:	call   0x100195fa
10001179:	and    DWORD PTR [ebp-0x4],0x0
1000117d:	lea    edi,[ebp-0x34]
10001180:	call   0x1001949f
10001185:	mov    bl,al
10001187:	neg    bl
10001189:	push   0x0
1000118b:	sbb    bl,bl
1000118d:	push   0x1
1000118f:	lea    ecx,[ebp-0x30]
10001192:	inc    bl
10001194:	call   0x100012f9
10001199:	mov    al,bl
1000119b:	call   0x10058931
100011a0:	ret    0x4
100011a3:	push   0x0
100011a5:	push   0x1
100011a7:	add    ecx,0x4
100011aa:	call   0x100012f9
100011af:	ret    
100011b0:	push   esi
100011b1:	mov    esi,ecx
100011b3:	push   0x0
100011b5:	mov    DWORD PTR [esi+0x18],0xf
100011bc:	call   0x10001425
100011c1:	push   0xffffffff
100011c3:	push   0x0
100011c5:	push   DWORD PTR [esp+0x10]
100011c9:	mov    ecx,esi
100011cb:	call   0x1000124a
100011d0:	mov    eax,esi
100011d2:	pop    esi
100011d3:	ret    0x4
100011d6:	push   esi
100011d7:	mov    esi,ecx
100011d9:	push   0x0
100011db:	mov    DWORD PTR [esi+0x18],0xf
100011e2:	call   0x10001425
100011e7:	push   DWORD PTR [esp+0x8]
100011eb:	mov    ecx,esi
100011ed:	call   0x100012dc
100011f2:	mov    eax,esi
100011f4:	pop    esi
100011f5:	ret    0x4
100011f8:	cmp    DWORD PTR [ecx+0x18],0x10
100011fc:	jb     0x10001202
100011fe:	mov    eax,DWORD PTR [ecx+0x4]
10001201:	ret    
10001202:	lea    eax,[ecx+0x4]
10001205:	ret    
10001206:	push   0x0
10001208:	mov    eax,0x1005f61a
1000120d:	call   0x10058845
10001212:	mov    esi,DWORD PTR [ebp+0x8]
10001215:	and    DWORD PTR [ebp-0x4],0x0
10001219:	push   DWORD PTR [esi+0x18]
1000121c:	call   DWORD PTR ds:0x10065070
10001222:	lea    eax,[esi+0xc]
10001225:	call   0x1000149f
1000122a:	or     DWORD PTR [ebp-0x4],0xffffffff
1000122e:	mov    eax,esi
10001230:	call   0x100014d4
10001235:	call   0x1005891d
1000123a:	ret    0x4
1000123d:	jmp    0x100014d4
10001242:	push   ecx
10001243:	call   0x1000149f
10001248:	pop    ecx
10001249:	ret    
1000124a:	push   ebp
1000124b:	mov    ebp,esp
1000124d:	mov    eax,DWORD PTR [ebp+0xc]
10001250:	push   ebx
10001251:	push   esi
10001252:	push   edi
10001253:	mov    edi,DWORD PTR [ebp+0x8]
10001256:	cmp    DWORD PTR [edi+0x14],eax
10001259:	mov    ebx,ecx
1000125b:	jae    0x10001262
1000125d:	call   0x10056049
10001262:	mov    esi,DWORD PTR [edi+0x14]
10001265:	mov    eax,DWORD PTR [ebp+0xc]
10001268:	sub    esi,eax
1000126a:	cmp    DWORD PTR [ebp+0x10],esi
1000126d:	jae    0x10001272
1000126f:	mov    esi,DWORD PTR [ebp+0x10]
10001272:	cmp    ebx,edi
10001274:	mov    ecx,ebx
10001276:	jne    0x10001290
10001278:	push   0xffffffff
1000127a:	add    esi,eax
1000127c:	push   esi
1000127d:	call   0x100013b6
10001282:	push   DWORD PTR [ebp+0xc]
10001285:	mov    ecx,ebx
10001287:	push   0x0
10001289:	call   0x100013b6
1000128e:	jmp    0x100012d3
10001290:	push   0x0
10001292:	push   esi
10001293:	call   0x10001441
10001298:	test   al,al
1000129a:	je     0x100012d3
1000129c:	cmp    DWORD PTR [edi+0x18],0x10
100012a0:	jb     0x100012a7
100012a2:	mov    edi,DWORD PTR [edi+0x4]
100012a5:	jmp    0x100012aa
100012a7:	add    edi,0x4
100012aa:	mov    ecx,DWORD PTR [ebx+0x18]
100012ad:	cmp    ecx,0x10
100012b0:	jb     0x100012b7
100012b2:	mov    eax,DWORD PTR [ebx+0x4]
100012b5:	jmp    0x100012ba
100012b7:	lea    eax,[ebx+0x4]
100012ba:	mov    edx,DWORD PTR [ebp+0xc]
100012bd:	push   esi
100012be:	add    edi,edx
100012c0:	push   edi
100012c1:	push   ecx
100012c2:	push   eax
100012c3:	call   0x1000102d
100012c8:	add    esp,0x10
100012cb:	push   esi
100012cc:	mov    ecx,ebx
100012ce:	call   0x10001425
100012d3:	pop    edi
100012d4:	pop    esi
100012d5:	mov    eax,ebx
100012d7:	pop    ebx
100012d8:	pop    ebp
100012d9:	ret    0xc
100012dc:	push   esi
100012dd:	push   DWORD PTR [esp+0x8]
100012e1:	mov    esi,ecx
100012e3:	call   0x10041f10
100012e8:	pop    ecx
100012e9:	push   eax
100012ea:	push   DWORD PTR [esp+0xc]
100012ee:	mov    ecx,esi
100012f0:	call   0x10001344
100012f5:	pop    esi
100012f6:	ret    0x4
100012f9:	cmp    BYTE PTR [esp+0x4],0x0
100012fe:	push   esi
100012ff:	mov    esi,ecx
10001301:	je     0x1000132e
10001303:	cmp    DWORD PTR [esi+0x18],0x10
10001307:	jb     0x1000132e
10001309:	cmp    DWORD PTR [esp+0xc],0x0
1000130e:	lea    eax,[esi+0x4]
10001311:	push   edi
10001312:	mov    edi,DWORD PTR [eax]
10001314:	jbe    0x10001326
10001316:	push   DWORD PTR [esp+0x10]
1000131a:	push   edi
1000131b:	push   0x10
1000131d:	push   eax
1000131e:	call   0x1000102d
10001323:	add    esp,0x10
10001326:	push   edi
10001327:	call   0x10041d92
1000132c:	pop    ecx
1000132d:	pop    edi
1000132e:	push   DWORD PTR [esp+0xc]
10001332:	mov    ecx,esi
10001334:	mov    DWORD PTR [esi+0x18],0xf
1000133b:	call   0x10001425
10001340:	pop    esi
10001341:	ret    0x8
10001344:	push   ebp
10001345:	mov    ebp,esp
10001347:	push   esi
10001348:	push   edi
10001349:	mov    edi,DWORD PTR [ebp+0x8]
1000134c:	push   edi
1000134d:	mov    esi,ecx
1000134f:	call   0x100015eb
10001354:	test   al,al
10001356:	je     0x10001376
10001358:	cmp    DWORD PTR [esi+0x18],0x10
1000135c:	jb     0x10001363
1000135e:	mov    eax,DWORD PTR [esi+0x4]
10001361:	jmp    0x10001366
10001363:	lea    eax,[esi+0x4]
10001366:	push   DWORD PTR [ebp+0xc]
10001369:	sub    edi,eax
1000136b:	push   edi
1000136c:	push   esi
1000136d:	mov    ecx,esi
1000136f:	call   0x1000124a
10001374:	jmp    0x100013b0
10001376:	push   0x0
10001378:	push   DWORD PTR [ebp+0xc]
1000137b:	mov    ecx,esi
1000137d:	call   0x10001441
10001382:	test   al,al
10001384:	je     0x100013ae
10001386:	mov    ecx,DWORD PTR [esi+0x18]
10001389:	cmp    ecx,0x10
1000138c:	jb     0x10001393
1000138e:	mov    eax,DWORD PTR [esi+0x4]
10001391:	jmp    0x10001396
10001393:	lea    eax,[esi+0x4]
10001396:	push   DWORD PTR [ebp+0xc]
10001399:	push   edi
1000139a:	push   ecx
1000139b:	push   eax
1000139c:	call   0x1000102d
100013a1:	add    esp,0x10
100013a4:	push   DWORD PTR [ebp+0xc]
100013a7:	mov    ecx,esi
100013a9:	call   0x10001425
100013ae:	mov    eax,esi
100013b0:	pop    edi
100013b1:	pop    esi
100013b2:	pop    ebp
100013b3:	ret    0x8
100013b6:	push   ebp
100013b7:	mov    ebp,esp
100013b9:	push   esi
100013ba:	push   edi
100013bb:	mov    edi,DWORD PTR [ebp+0x8]
100013be:	mov    esi,ecx
100013c0:	cmp    DWORD PTR [esi+0x14],edi
100013c3:	jae    0x100013ca
100013c5:	call   0x10056049
100013ca:	mov    eax,DWORD PTR [esi+0x14]
100013cd:	sub    eax,edi
100013cf:	cmp    eax,DWORD PTR [ebp+0xc]
100013d2:	jae    0x100013d7
100013d4:	mov    DWORD PTR [ebp+0xc],eax
100013d7:	cmp    DWORD PTR [ebp+0xc],0x0
100013db:	jbe    0x1000141d
100013dd:	mov    ecx,DWORD PTR [esi+0x18]
100013e0:	cmp    ecx,0x10
100013e3:	push   ebx
100013e4:	lea    edx,[esi+0x4]
100013e7:	jb     0x100013ed
100013e9:	mov    ebx,DWORD PTR [edx]
100013eb:	jmp    0x100013ef
100013ed:	mov    ebx,edx
100013ef:	cmp    ecx,0x10
100013f2:	jb     0x100013f6
100013f4:	mov    edx,DWORD PTR [edx]
100013f6:	sub    eax,DWORD PTR [ebp+0xc]
100013f9:	add    ebx,edi
100013fb:	add    ebx,DWORD PTR [ebp+0xc]
100013fe:	push   eax
100013ff:	push   ebx
10001400:	sub    ecx,edi
10001402:	push   ecx
10001403:	add    edx,edi
10001405:	push   edx
10001406:	call   0x10001049
1000140b:	mov    eax,DWORD PTR [esi+0x14]
1000140e:	sub    eax,DWORD PTR [ebp+0xc]
10001411:	add    esp,0x10
10001414:	push   eax
10001415:	mov    ecx,esi
10001417:	call   0x10001425
1000141c:	pop    ebx
1000141d:	pop    edi
1000141e:	mov    eax,esi
10001420:	pop    esi
10001421:	pop    ebp
10001422:	ret    0x8
10001425:	cmp    DWORD PTR [ecx+0x18],0x10
10001429:	mov    eax,DWORD PTR [esp+0x4]
1000142d:	mov    DWORD PTR [ecx+0x14],eax
10001430:	jb     0x10001437
10001432:	mov    ecx,DWORD PTR [ecx+0x4]
10001435:	jmp    0x1000143a
10001437:	add    ecx,0x4
1000143a:	mov    BYTE PTR [ecx+eax*1],0x0
1000143e:	ret    0x4
10001441:	push   esi
10001442:	push   edi
10001443:	mov    edi,DWORD PTR [esp+0xc]
10001447:	cmp    edi,0xfffffffe
1000144a:	mov    esi,ecx
1000144c:	jbe    0x10001453
1000144e:	call   0x1005600a
10001453:	cmp    DWORD PTR [esi+0x18],edi
10001456:	jae    0x10001465
10001458:	push   DWORD PTR [esi+0x14]
1000145b:	mov    ecx,esi
1000145d:	push   edi
1000145e:	call   0x10001509
10001463:	jmp    0x10001492
10001465:	cmp    BYTE PTR [esp+0x10],0x0
1000146a:	je     0x10001486
1000146c:	cmp    edi,0x10
1000146f:	jae    0x10001486
10001471:	mov    eax,DWORD PTR [esi+0x14]
10001474:	cmp    edi,eax
10001476:	jae    0x1000147a
10001478:	mov    eax,edi
1000147a:	push   eax
1000147b:	push   0x1
1000147d:	mov    ecx,esi
1000147f:	call   0x100012f9
10001484:	jmp    0x10001492
10001486:	test   edi,edi
10001488:	jne    0x10001492
1000148a:	push   edi
1000148b:	mov    ecx,esi
1000148d:	call   0x10001425
10001492:	xor    eax,eax
10001494:	cmp    eax,edi
10001496:	sbb    eax,eax
10001498:	pop    edi
10001499:	neg    eax
1000149b:	pop    esi
1000149c:	ret    0x8
1000149f:	push   ebp
100014a0:	mov    ebp,esp
100014a2:	and    esp,0xfffffff8
100014a5:	push   ecx
100014a6:	push   ecx
100014a7:	push   ebx
100014a8:	push   edi
100014a9:	mov    edi,eax
100014ab:	mov    eax,DWORD PTR [edi+0x4]
100014ae:	mov    ecx,DWORD PTR [eax]
100014b0:	push   eax
100014b1:	push   edi
100014b2:	push   ecx
100014b3:	push   edi
100014b4:	lea    ebx,[esp+0x18]
100014b8:	call   0x1000161f
100014bd:	push   DWORD PTR [edi+0x4]
100014c0:	call   0x10041d92
100014c5:	and    DWORD PTR [edi+0x4],0x0
100014c9:	and    DWORD PTR [edi+0x8],0x0
100014cd:	pop    ecx
100014ce:	pop    edi
100014cf:	pop    ebx
100014d0:	mov    esp,ebp
100014d2:	pop    ebp
100014d3:	ret    
100014d4:	push   ebp
100014d5:	mov    ebp,esp
100014d7:	and    esp,0xfffffff8
100014da:	push   ecx
100014db:	push   ecx
100014dc:	push   ebx
100014dd:	push   edi
100014de:	mov    edi,eax
100014e0:	mov    eax,DWORD PTR [edi+0x4]
100014e3:	mov    ecx,DWORD PTR [eax]
100014e5:	push   eax
100014e6:	push   edi
100014e7:	push   ecx
100014e8:	push   edi
100014e9:	lea    ebx,[esp+0x18]
100014ed:	call   0x100016cb
100014f2:	push   DWORD PTR [edi+0x4]
100014f5:	call   0x10041d92
100014fa:	and    DWORD PTR [edi+0x4],0x0
100014fe:	and    DWORD PTR [edi+0x8],0x0
10001502:	pop    ecx
10001503:	pop    edi
10001504:	pop    ebx
10001505:	mov    esp,ebp
10001507:	pop    ebp
10001508:	ret    
10001509:	push   0xc
1000150b:	mov    eax,0x1005e688
10001510:	call   0x10058878
10001515:	mov    edi,ecx
10001517:	mov    DWORD PTR [ebp-0x18],edi
1000151a:	mov    esi,DWORD PTR [ebp+0x8]
1000151d:	or     esi,0xf
10001520:	cmp    esi,0xfffffffe
10001523:	jbe    0x1000152a
10001525:	mov    esi,DWORD PTR [ebp+0x8]
10001528:	jmp    0x1000154f
1000152a:	xor    edx,edx
1000152c:	push   0x3
1000152e:	mov    eax,esi
10001530:	pop    ebx
10001531:	div    ebx
10001533:	mov    ecx,DWORD PTR [edi+0x18]
10001536:	mov    DWORD PTR [ebp-0x14],ecx
10001539:	shr    DWORD PTR [ebp-0x14],1
1000153c:	mov    edx,DWORD PTR [ebp-0x14]
1000153f:	cmp    eax,edx
10001541:	jae    0x1000154f
10001543:	push   0xfffffffe
10001545:	pop    eax
10001546:	sub    eax,edx
10001548:	cmp    ecx,eax
1000154a:	ja     0x1000154f
1000154c:	lea    esi,[edx+ecx*1]
1000154f:	and    DWORD PTR [ebp-0x4],0x0
10001553:	lea    eax,[esi+0x1]
10001556:	push   0x0
10001558:	push   eax
10001559:	call   0x10001ec7
1000155e:	pop    ecx
1000155f:	pop    ecx
10001560:	mov    ebx,eax
10001562:	jmp    0x1000158e
10001564:	mov    eax,DWORD PTR [ebp+0x8]
10001567:	mov    DWORD PTR [ebp-0x10],esp
1000156a:	mov    DWORD PTR [ebp+0x8],eax
1000156d:	inc    eax
1000156e:	push   0x0
10001570:	push   eax
10001571:	mov    BYTE PTR [ebp-0x4],0x2
10001575:	call   0x10001ec7
1000157a:	pop    ecx
1000157b:	mov    DWORD PTR [ebp-0x14],eax
1000157e:	pop    ecx
1000157f:	mov    eax,0x10001585
10001584:	ret    
10001585:	mov    edi,DWORD PTR [ebp-0x18]
10001588:	mov    esi,DWORD PTR [ebp+0x8]
1000158b:	mov    ebx,DWORD PTR [ebp-0x14]
1000158e:	cmp    DWORD PTR [ebp+0xc],0x0
10001592:	jbe    0x100015b3
10001594:	cmp    DWORD PTR [edi+0x18],0x10
10001598:	jb     0x1000159f
1000159a:	mov    eax,DWORD PTR [edi+0x4]
1000159d:	jmp    0x100015a2
1000159f:	lea    eax,[edi+0x4]
100015a2:	push   DWORD PTR [ebp+0xc]
100015a5:	push   eax
100015a6:	lea    eax,[esi+0x1]
100015a9:	push   eax
100015aa:	push   ebx
100015ab:	call   0x1000102d
100015b0:	add    esp,0x10
100015b3:	push   0x0
100015b5:	push   0x1
100015b7:	mov    ecx,edi
100015b9:	call   0x100012f9
100015be:	push   DWORD PTR [ebp+0xc]
100015c1:	mov    ecx,edi
100015c3:	mov    DWORD PTR [edi+0x4],ebx
100015c6:	mov    DWORD PTR [edi+0x18],esi
100015c9:	call   0x10001425
100015ce:	call   0x1005891d
100015d3:	ret    0x8
100015d6:	mov    ecx,DWORD PTR [ebp-0x18]
100015d9:	xor    esi,esi
100015db:	push   esi
100015dc:	push   0x1
100015de:	call   0x100012f9
100015e3:	push   esi
100015e4:	push   esi
100015e5:	call   0x10046704
100015ea:	int3   
100015eb:	push   esi
100015ec:	mov    esi,DWORD PTR [ecx+0x18]
100015ef:	cmp    esi,0x10
100015f2:	lea    eax,[ecx+0x4]
100015f5:	jb     0x100015fb
100015f7:	mov    edx,DWORD PTR [eax]
100015f9:	jmp    0x100015fd
100015fb:	mov    edx,eax
100015fd:	cmp    DWORD PTR [esp+0x8],edx
10001601:	jb     0x10001619
10001603:	cmp    esi,0x10
10001606:	jb     0x1000160a
10001608:	mov    eax,DWORD PTR [eax]
1000160a:	mov    ecx,DWORD PTR [ecx+0x14]
1000160d:	add    ecx,eax
1000160f:	cmp    ecx,DWORD PTR [esp+0x8]
10001613:	jbe    0x10001619
10001615:	mov    al,0x1
10001617:	jmp    0x1000161b
10001619:	xor    al,al
1000161b:	pop    esi
1000161c:	ret    0x4
1000161f:	push   ebp
10001620:	mov    ebp,esp
10001622:	mov    eax,DWORD PTR [edi+0x4]
10001625:	sub    esp,0x14
10001628:	cmp    DWORD PTR [ebp+0x8],0x0
1000162c:	push   esi
1000162d:	mov    esi,DWORD PTR [eax]
1000162f:	je     0x10001636
10001631:	cmp    DWORD PTR [ebp+0x8],edi
10001634:	je     0x1000163b
10001636:	call   0x100422b0
1000163b:	cmp    DWORD PTR [ebp+0xc],esi
1000163e:	jne    0x10001683
10001640:	cmp    DWORD PTR [ebp+0x10],0x0
10001644:	mov    esi,DWORD PTR [edi+0x4]
10001647:	je     0x1000164e
10001649:	cmp    DWORD PTR [ebp+0x10],edi
1000164c:	je     0x10001653
1000164e:	call   0x100422b0
10001653:	cmp    DWORD PTR [ebp+0x14],esi
10001656:	jne    0x10001683
10001658:	mov    eax,DWORD PTR [edi+0x4]
1000165b:	push   DWORD PTR [eax+0x4]
1000165e:	mov    ecx,edi
10001660:	call   0x10001ca5
10001665:	mov    eax,DWORD PTR [edi+0x4]
10001668:	mov    DWORD PTR [eax+0x4],eax
1000166b:	mov    eax,DWORD PTR [edi+0x4]
1000166e:	and    DWORD PTR [edi+0x8],0x0
10001672:	mov    DWORD PTR [eax],eax
10001674:	mov    eax,DWORD PTR [edi+0x4]
10001677:	mov    DWORD PTR [eax+0x8],eax
1000167a:	mov    eax,DWORD PTR [edi+0x4]
1000167d:	mov    eax,DWORD PTR [eax]
1000167f:	mov    DWORD PTR [ebx],edi
10001681:	jmp    0x100016c1
10001683:	mov    eax,DWORD PTR [ebp+0x8]
10001686:	test   eax,eax
10001688:	je     0x1000168f
1000168a:	cmp    eax,DWORD PTR [ebp+0x10]
1000168d:	je     0x10001694
1000168f:	call   0x100422b0
10001694:	mov    eax,DWORD PTR [ebp+0xc]
10001697:	cmp    eax,DWORD PTR [ebp+0x14]
1000169a:	mov    ecx,DWORD PTR [ebp+0x8]
1000169d:	je     0x100016bf
1000169f:	lea    esi,[ebp+0x8]
100016a2:	mov    DWORD PTR [ebp-0x8],ecx
100016a5:	mov    DWORD PTR [ebp-0x4],eax
100016a8:	call   0x10001e7a
100016ad:	push   DWORD PTR [ebp-0x4]
100016b0:	lea    eax,[ebp-0x10]
100016b3:	push   DWORD PTR [ebp-0x8]
100016b6:	push   eax
100016b7:	push   edi
100016b8:	call   0x10001777
100016bd:	jmp    0x10001683
100016bf:	mov    DWORD PTR [ebx],ecx
100016c1:	mov    DWORD PTR [ebx+0x4],eax
100016c4:	mov    eax,ebx
100016c6:	pop    esi
100016c7:	leave  
100016c8:	ret    0x10
100016cb:	push   ebp
100016cc:	mov    ebp,esp
100016ce:	mov    eax,DWORD PTR [edi+0x4]
100016d1:	sub    esp,0x14
100016d4:	cmp    DWORD PTR [ebp+0x8],0x0
100016d8:	push   esi
100016d9:	mov    esi,DWORD PTR [eax]
100016db:	je     0x100016e2
100016dd:	cmp    DWORD PTR [ebp+0x8],edi
100016e0:	je     0x100016e7
100016e2:	call   0x100422b0
100016e7:	cmp    DWORD PTR [ebp+0xc],esi
100016ea:	jne    0x1000172f
100016ec:	cmp    DWORD PTR [ebp+0x10],0x0
100016f0:	mov    esi,DWORD PTR [edi+0x4]
100016f3:	je     0x100016fa
100016f5:	cmp    DWORD PTR [ebp+0x10],edi
100016f8:	je     0x100016ff
100016fa:	call   0x100422b0
100016ff:	cmp    DWORD PTR [ebp+0x14],esi
10001702:	jne    0x1000172f
10001704:	mov    eax,DWORD PTR [edi+0x4]
10001707:	push   DWORD PTR [eax+0x4]
1000170a:	mov    ecx,edi
1000170c:	call   0x10001d59
10001711:	mov    eax,DWORD PTR [edi+0x4]
10001714:	mov    DWORD PTR [eax+0x4],eax
10001717:	mov    eax,DWORD PTR [edi+0x4]
1000171a:	and    DWORD PTR [edi+0x8],0x0
1000171e:	mov    DWORD PTR [eax],eax
10001720:	mov    eax,DWORD PTR [edi+0x4]
10001723:	mov    DWORD PTR [eax+0x8],eax
10001726:	mov    eax,DWORD PTR [edi+0x4]
10001729:	mov    eax,DWORD PTR [eax]
1000172b:	mov    DWORD PTR [ebx],edi
1000172d:	jmp    0x1000176d
1000172f:	mov    eax,DWORD PTR [ebp+0x8]
10001732:	test   eax,eax
10001734:	je     0x1000173b
10001736:	cmp    eax,DWORD PTR [ebp+0x10]
10001739:	je     0x10001740
1000173b:	call   0x100422b0
10001740:	mov    eax,DWORD PTR [ebp+0xc]
10001743:	cmp    eax,DWORD PTR [ebp+0x14]
10001746:	mov    ecx,DWORD PTR [ebp+0x8]
10001749:	je     0x1000176b
1000174b:	lea    esi,[ebp+0x8]
1000174e:	mov    DWORD PTR [ebp-0x8],ecx
10001751:	mov    DWORD PTR [ebp-0x4],eax
10001754:	call   0x10001e2d
10001759:	push   DWORD PTR [ebp-0x4]
1000175c:	lea    eax,[ebp-0x10]
1000175f:	push   DWORD PTR [ebp-0x8]
10001762:	push   eax
10001763:	push   edi
10001764:	call   0x10001a01
10001769:	jmp    0x1000172f
1000176b:	mov    DWORD PTR [ebx],ecx
1000176d:	mov    DWORD PTR [ebx+0x4],eax
10001770:	mov    eax,ebx
10001772:	pop    esi
10001773:	leave  
10001774:	ret    0x10
10001777:	push   0x44
10001779:	mov    eax,0x1005ef45
1000177e:	call   0x10058845
10001783:	mov    ebx,DWORD PTR [ebp+0x14]
10001786:	cmp    BYTE PTR [ebx+0x11],0x0
1000178a:	je     0x100017be
1000178c:	push   0x1006bafc
10001791:	lea    ecx,[ebp-0x28]
10001794:	call   0x100011d6
10001799:	and    DWORD PTR [ebp-0x4],0x0
1000179d:	lea    eax,[ebp-0x28]
100017a0:	push   eax
100017a1:	lea    ecx,[ebp-0x50]
100017a4:	call   0x10001065
100017a9:	push   0x10073880
100017ae:	lea    eax,[ebp-0x50]
100017b1:	push   eax
100017b2:	mov    DWORD PTR [ebp-0x50],0x1006a788
100017b9:	call   0x10046704
100017be:	lea    esi,[ebp+0x10]
100017c1:	call   0x10001e7a
100017c6:	mov    ecx,DWORD PTR [ebx]
100017c8:	cmp    BYTE PTR [ecx+0x11],0x0
100017cc:	je     0x100017d3
100017ce:	mov    edi,DWORD PTR [ebx+0x8]
100017d1:	jmp    0x100017ea
100017d3:	mov    eax,DWORD PTR [ebx+0x8]
100017d6:	cmp    BYTE PTR [eax+0x11],0x0
100017da:	je     0x100017e0
100017dc:	mov    edi,ecx
100017de:	jmp    0x100017ea
100017e0:	mov    eax,DWORD PTR [ebp+0x14]
100017e3:	cmp    eax,ebx
100017e5:	mov    edi,DWORD PTR [eax+0x8]
100017e8:	jne    0x10001860
100017ea:	cmp    BYTE PTR [edi+0x11],0x0
100017ee:	mov    esi,DWORD PTR [ebx+0x4]
100017f1:	jne    0x100017f6
100017f3:	mov    DWORD PTR [edi+0x4],esi
100017f6:	mov    ecx,DWORD PTR [ebp+0x8]
100017f9:	mov    eax,DWORD PTR [ecx+0x4]
100017fc:	cmp    DWORD PTR [eax+0x4],ebx
100017ff:	jne    0x10001806
10001801:	mov    DWORD PTR [eax+0x4],edi
10001804:	jmp    0x10001811
10001806:	cmp    DWORD PTR [esi],ebx
10001808:	jne    0x1000180e
1000180a:	mov    DWORD PTR [esi],edi
1000180c:	jmp    0x10001811
1000180e:	mov    DWORD PTR [esi+0x8],edi
10001811:	mov    edx,DWORD PTR [ecx+0x4]
10001814:	cmp    DWORD PTR [edx],ebx
10001816:	jne    0x10001834
10001818:	cmp    BYTE PTR [edi+0x11],0x0
1000181c:	je     0x10001822
1000181e:	mov    ecx,esi
10001820:	jmp    0x10001832
10001822:	mov    eax,DWORD PTR [edi]
10001824:	mov    ecx,edi
10001826:	jmp    0x1000182c
10001828:	mov    ecx,eax
1000182a:	mov    eax,DWORD PTR [ecx]
1000182c:	cmp    BYTE PTR [eax+0x11],0x0
10001830:	je     0x10001828
10001832:	mov    DWORD PTR [edx],ecx
10001834:	mov    eax,DWORD PTR [ebp+0x8]
10001837:	mov    edx,DWORD PTR [eax+0x4]
1000183a:	cmp    DWORD PTR [edx+0x8],ebx
1000183d:	jne    0x100018ba
1000183f:	cmp    BYTE PTR [edi+0x11],0x0
10001843:	je     0x10001849
10001845:	mov    ecx,esi
10001847:	jmp    0x1000185b
10001849:	mov    eax,DWORD PTR [edi+0x8]
1000184c:	mov    ecx,edi
1000184e:	jmp    0x10001855
10001850:	mov    ecx,eax
10001852:	mov    eax,DWORD PTR [ecx+0x8]
10001855:	cmp    BYTE PTR [eax+0x11],0x0
10001859:	je     0x10001850
1000185b:	mov    DWORD PTR [edx+0x8],ecx
1000185e:	jmp    0x100018ba
10001860:	mov    DWORD PTR [ecx+0x4],eax
10001863:	mov    ecx,DWORD PTR [ebx]
10001865:	mov    DWORD PTR [eax],ecx
10001867:	cmp    eax,DWORD PTR [ebx+0x8]
1000186a:	jne    0x10001870
1000186c:	mov    esi,eax
1000186e:	jmp    0x1000188a
10001870:	cmp    BYTE PTR [edi+0x11],0x0
10001874:	mov    esi,DWORD PTR [eax+0x4]
10001877:	jne    0x1000187c
10001879:	mov    DWORD PTR [edi+0x4],esi
1000187c:	mov    DWORD PTR [esi],edi
1000187e:	mov    ecx,DWORD PTR [ebx+0x8]
10001881:	mov    DWORD PTR [eax+0x8],ecx
10001884:	mov    ecx,DWORD PTR [ebx+0x8]
10001887:	mov    DWORD PTR [ecx+0x4],eax
1000188a:	mov    ecx,DWORD PTR [ebp+0x8]
1000188d:	mov    ecx,DWORD PTR [ecx+0x4]
10001890:	cmp    DWORD PTR [ecx+0x4],ebx
10001893:	jne    0x1000189a
10001895:	mov    DWORD PTR [ecx+0x4],eax
10001898:	jmp    0x100018a8
1000189a:	mov    ecx,DWORD PTR [ebx+0x4]
1000189d:	cmp    DWORD PTR [ecx],ebx
1000189f:	jne    0x100018a5
100018a1:	mov    DWORD PTR [ecx],eax
100018a3:	jmp    0x100018a8
100018a5:	mov    DWORD PTR [ecx+0x8],eax
100018a8:	mov    ecx,DWORD PTR [ebx+0x4]
100018ab:	mov    DWORD PTR [eax+0x4],ecx
100018ae:	mov    dl,BYTE PTR [ebx+0x10]
100018b1:	mov    cl,BYTE PTR [eax+0x10]
100018b4:	mov    BYTE PTR [eax+0x10],dl
100018b7:	mov    BYTE PTR [ebx+0x10],cl
100018ba:	cmp    BYTE PTR [ebx+0x10],0x1
100018be:	jne    0x100019d6
100018c4:	jmp    0x1000198a
100018c9:	cmp    BYTE PTR [edi+0x10],0x1
100018cd:	jne    0x100019d2
100018d3:	mov    ecx,DWORD PTR [esi]
100018d5:	cmp    edi,ecx
100018d7:	jne    0x10001950
100018d9:	mov    ecx,DWORD PTR [esi+0x8]
100018dc:	cmp    BYTE PTR [ecx+0x10],0x0
100018e0:	jne    0x100018f7
100018e2:	push   DWORD PTR [ebp+0x8]
100018e5:	mov    BYTE PTR [ecx+0x10],0x1
100018e9:	mov    ecx,esi
100018eb:	mov    BYTE PTR [esi+0x10],0x0
100018ef:	call   0x10001cd7
100018f4:	mov    ecx,DWORD PTR [esi+0x8]
100018f7:	cmp    BYTE PTR [ecx+0x11],0x0
100018fb:	jne    0x10001985
10001901:	mov    eax,DWORD PTR [ecx]
10001903:	cmp    BYTE PTR [eax+0x10],0x1
10001907:	jne    0x10001912
10001909:	mov    eax,DWORD PTR [ecx+0x8]
1000190c:	cmp    BYTE PTR [eax+0x10],0x1
10001910:	je     0x10001981
10001912:	mov    eax,DWORD PTR [ecx+0x8]
10001915:	cmp    BYTE PTR [eax+0x10],0x1
10001919:	jne    0x10001930
1000191b:	mov    eax,DWORD PTR [ecx]
1000191d:	push   DWORD PTR [ebp+0x8]
10001920:	mov    BYTE PTR [eax+0x10],0x1
10001924:	mov    BYTE PTR [ecx+0x10],0x0
10001928:	call   0x10001d17
1000192d:	mov    ecx,DWORD PTR [esi+0x8]
10001930:	mov    al,BYTE PTR [esi+0x10]
10001933:	push   DWORD PTR [ebp+0x8]
10001936:	mov    BYTE PTR [ecx+0x10],al
10001939:	mov    BYTE PTR [esi+0x10],0x1
1000193d:	mov    eax,DWORD PTR [ecx+0x8]
10001940:	mov    ecx,esi
10001942:	mov    BYTE PTR [eax+0x10],0x1
10001946:	call   0x10001cd7
1000194b:	jmp    0x100019d2
10001950:	cmp    BYTE PTR [ecx+0x10],0x0
10001954:	jne    0x1000196a
10001956:	push   DWORD PTR [ebp+0x8]
10001959:	mov    BYTE PTR [ecx+0x10],0x1
1000195d:	mov    ecx,esi
1000195f:	mov    BYTE PTR [esi+0x10],0x0
10001963:	call   0x10001d17
10001968:	mov    ecx,DWORD PTR [esi]
1000196a:	cmp    BYTE PTR [ecx+0x11],0x0
1000196e:	jne    0x10001985
10001970:	mov    eax,DWORD PTR [ecx+0x8]
10001973:	cmp    BYTE PTR [eax+0x10],0x1
10001977:	jne    0x1000199b
10001979:	mov    eax,DWORD PTR [ecx]
1000197b:	cmp    BYTE PTR [eax+0x10],0x1
1000197f:	jne    0x1000199b
10001981:	mov    BYTE PTR [ecx+0x10],0x0
10001985:	mov    edi,esi
10001987:	mov    esi,DWORD PTR [esi+0x4]
1000198a:	mov    eax,DWORD PTR [ebp+0x8]
1000198d:	mov    eax,DWORD PTR [eax+0x4]
10001990:	cmp    edi,DWORD PTR [eax+0x4]
10001993:	jne    0x100018c9
10001999:	jmp    0x100019d2
1000199b:	mov    eax,DWORD PTR [ecx]
1000199d:	cmp    BYTE PTR [eax+0x10],0x1
100019a1:	jne    0x100019b8
100019a3:	mov    eax,DWORD PTR [ecx+0x8]
100019a6:	push   DWORD PTR [ebp+0x8]
100019a9:	mov    BYTE PTR [eax+0x10],0x1
100019ad:	mov    BYTE PTR [ecx+0x10],0x0
100019b1:	call   0x10001cd7
100019b6:	mov    ecx,DWORD PTR [esi]
100019b8:	mov    al,BYTE PTR [esi+0x10]
100019bb:	push   DWORD PTR [ebp+0x8]
100019be:	mov    BYTE PTR [ecx+0x10],al
100019c1:	mov    BYTE PTR [esi+0x10],0x1
100019c5:	mov    eax,DWORD PTR [ecx]
100019c7:	mov    ecx,esi
100019c9:	mov    BYTE PTR [eax+0x10],0x1
100019cd:	call   0x10001d17
100019d2:	mov    BYTE PTR [edi+0x10],0x1
100019d6:	push   ebx
100019d7:	call   0x10041d92
100019dc:	pop    ecx
100019dd:	mov    ecx,DWORD PTR [ebp+0x8]
100019e0:	mov    eax,DWORD PTR [ecx+0x8]
100019e3:	test   eax,eax
100019e5:	jbe    0x100019eb
100019e7:	dec    eax
100019e8:	mov    DWORD PTR [ecx+0x8],eax
100019eb:	mov    ecx,DWORD PTR [ebp+0x10]
100019ee:	mov    eax,DWORD PTR [ebp+0xc]
100019f1:	mov    DWORD PTR [eax],ecx
100019f3:	mov    ecx,DWORD PTR [ebp+0x14]
100019f6:	mov    DWORD PTR [eax+0x4],ecx
100019f9:	call   0x1005891d
100019fe:	ret    0x10
10001a01:	push   0x44
10001a03:	mov    eax,0x1005ef45
10001a08:	call   0x10058845
10001a0d:	mov    edi,DWORD PTR [ebp+0x14]
10001a10:	cmp    BYTE PTR [edi+0x4d],0x0
10001a14:	je     0x10001a48
10001a16:	push   0x1006bafc
10001a1b:	lea    ecx,[ebp-0x28]
10001a1e:	call   0x100011d6
10001a23:	and    DWORD PTR [ebp-0x4],0x0
10001a27:	lea    eax,[ebp-0x28]
10001a2a:	push   eax
10001a2b:	lea    ecx,[ebp-0x50]
10001a2e:	call   0x10001065
10001a33:	push   0x10073880
10001a38:	lea    eax,[ebp-0x50]
10001a3b:	push   eax
10001a3c:	mov    DWORD PTR [ebp-0x50],0x1006a788
10001a43:	call   0x10046704
10001a48:	lea    esi,[ebp+0x10]
10001a4b:	call   0x10001e2d
10001a50:	mov    ecx,DWORD PTR [edi]
10001a52:	cmp    BYTE PTR [ecx+0x4d],0x0
10001a56:	je     0x10001a5d
10001a58:	mov    ebx,DWORD PTR [edi+0x8]
10001a5b:	jmp    0x10001a74
10001a5d:	mov    eax,DWORD PTR [edi+0x8]
10001a60:	cmp    BYTE PTR [eax+0x4d],0x0
10001a64:	je     0x10001a6a
10001a66:	mov    ebx,ecx
10001a68:	jmp    0x10001a74
10001a6a:	mov    eax,DWORD PTR [ebp+0x14]
10001a6d:	cmp    eax,edi
10001a6f:	mov    ebx,DWORD PTR [eax+0x8]
10001a72:	jne    0x10001aea
10001a74:	cmp    BYTE PTR [ebx+0x4d],0x0
10001a78:	mov    esi,DWORD PTR [edi+0x4]
10001a7b:	jne    0x10001a80
10001a7d:	mov    DWORD PTR [ebx+0x4],esi
10001a80:	mov    ecx,DWORD PTR [ebp+0x8]
10001a83:	mov    eax,DWORD PTR [ecx+0x4]
10001a86:	cmp    DWORD PTR [eax+0x4],edi
10001a89:	jne    0x10001a90
10001a8b:	mov    DWORD PTR [eax+0x4],ebx
10001a8e:	jmp    0x10001a9b
10001a90:	cmp    DWORD PTR [esi],edi
10001a92:	jne    0x10001a98
10001a94:	mov    DWORD PTR [esi],ebx
10001a96:	jmp    0x10001a9b
10001a98:	mov    DWORD PTR [esi+0x8],ebx
10001a9b:	mov    edx,DWORD PTR [ecx+0x4]
10001a9e:	cmp    DWORD PTR [edx],edi
10001aa0:	jne    0x10001abe
10001aa2:	cmp    BYTE PTR [ebx+0x4d],0x0
10001aa6:	je     0x10001aac
10001aa8:	mov    ecx,esi
10001aaa:	jmp    0x10001abc
10001aac:	mov    eax,DWORD PTR [ebx]
10001aae:	mov    ecx,ebx
10001ab0:	jmp    0x10001ab6
10001ab2:	mov    ecx,eax
10001ab4:	mov    eax,DWORD PTR [ecx]
10001ab6:	cmp    BYTE PTR [eax+0x4d],0x0
10001aba:	je     0x10001ab2
10001abc:	mov    DWORD PTR [edx],ecx
10001abe:	mov    eax,DWORD PTR [ebp+0x8]
10001ac1:	mov    edx,DWORD PTR [eax+0x4]
10001ac4:	cmp    DWORD PTR [edx+0x8],edi
10001ac7:	jne    0x10001b44
10001ac9:	cmp    BYTE PTR [ebx+0x4d],0x0
10001acd:	je     0x10001ad3
10001acf:	mov    ecx,esi
10001ad1:	jmp    0x10001ae5
10001ad3:	mov    eax,DWORD PTR [ebx+0x8]
10001ad6:	mov    ecx,ebx
10001ad8:	jmp    0x10001adf
10001ada:	mov    ecx,eax
10001adc:	mov    eax,DWORD PTR [ecx+0x8]
10001adf:	cmp    BYTE PTR [eax+0x4d],0x0
10001ae3:	je     0x10001ada
10001ae5:	mov    DWORD PTR [edx+0x8],ecx
10001ae8:	jmp    0x10001b44
10001aea:	mov    DWORD PTR [ecx+0x4],eax
10001aed:	mov    ecx,DWORD PTR [edi]
10001aef:	mov    DWORD PTR [eax],ecx
10001af1:	cmp    eax,DWORD PTR [edi+0x8]
10001af4:	jne    0x10001afa
10001af6:	mov    esi,eax
10001af8:	jmp    0x10001b14
10001afa:	cmp    BYTE PTR [ebx+0x4d],0x0
10001afe:	mov    esi,DWORD PTR [eax+0x4]
10001b01:	jne    0x10001b06
10001b03:	mov    DWORD PTR [ebx+0x4],esi
10001b06:	mov    DWORD PTR [esi],ebx
10001b08:	mov    ecx,DWORD PTR [edi+0x8]
10001b0b:	mov    DWORD PTR [eax+0x8],ecx
10001b0e:	mov    ecx,DWORD PTR [edi+0x8]
10001b11:	mov    DWORD PTR [ecx+0x4],eax
10001b14:	mov    ecx,DWORD PTR [ebp+0x8]
10001b17:	mov    ecx,DWORD PTR [ecx+0x4]
10001b1a:	cmp    DWORD PTR [ecx+0x4],edi
10001b1d:	jne    0x10001b24
10001b1f:	mov    DWORD PTR [ecx+0x4],eax
10001b22:	jmp    0x10001b32
10001b24:	mov    ecx,DWORD PTR [edi+0x4]
10001b27:	cmp    DWORD PTR [ecx],edi
10001b29:	jne    0x10001b2f
10001b2b:	mov    DWORD PTR [ecx],eax
10001b2d:	jmp    0x10001b32
10001b2f:	mov    DWORD PTR [ecx+0x8],eax
10001b32:	mov    ecx,DWORD PTR [edi+0x4]
10001b35:	mov    DWORD PTR [eax+0x4],ecx
10001b38:	mov    dl,BYTE PTR [edi+0x4c]
10001b3b:	mov    cl,BYTE PTR [eax+0x4c]
10001b3e:	mov    BYTE PTR [eax+0x4c],dl
10001b41:	mov    BYTE PTR [edi+0x4c],cl
10001b44:	cmp    BYTE PTR [edi+0x4c],0x1
10001b48:	jne    0x10001c60
10001b4e:	jmp    0x10001c14
10001b53:	cmp    BYTE PTR [ebx+0x4c],0x1
10001b57:	jne    0x10001c5c
10001b5d:	mov    ecx,DWORD PTR [esi]
10001b5f:	cmp    ebx,ecx
10001b61:	jne    0x10001bda
10001b63:	mov    ecx,DWORD PTR [esi+0x8]
10001b66:	cmp    BYTE PTR [ecx+0x4c],0x0
10001b6a:	jne    0x10001b81
10001b6c:	push   DWORD PTR [ebp+0x8]
10001b6f:	mov    BYTE PTR [ecx+0x4c],0x1
10001b73:	mov    ecx,esi
10001b75:	mov    BYTE PTR [esi+0x4c],0x0
10001b79:	call   0x10001dab
10001b7e:	mov    ecx,DWORD PTR [esi+0x8]
10001b81:	cmp    BYTE PTR [ecx+0x4d],0x0
10001b85:	jne    0x10001c0f
10001b8b:	mov    eax,DWORD PTR [ecx]
10001b8d:	cmp    BYTE PTR [eax+0x4c],0x1
10001b91:	jne    0x10001b9c
10001b93:	mov    eax,DWORD PTR [ecx+0x8]
10001b96:	cmp    BYTE PTR [eax+0x4c],0x1
10001b9a:	je     0x10001c0b
10001b9c:	mov    eax,DWORD PTR [ecx+0x8]
10001b9f:	cmp    BYTE PTR [eax+0x4c],0x1
10001ba3:	jne    0x10001bba
10001ba5:	mov    eax,DWORD PTR [ecx]
10001ba7:	push   DWORD PTR [ebp+0x8]
10001baa:	mov    BYTE PTR [eax+0x4c],0x1
10001bae:	mov    BYTE PTR [ecx+0x4c],0x0
10001bb2:	call   0x10001deb
10001bb7:	mov    ecx,DWORD PTR [esi+0x8]
10001bba:	mov    al,BYTE PTR [esi+0x4c]
10001bbd:	push   DWORD PTR [ebp+0x8]
10001bc0:	mov    BYTE PTR [ecx+0x4c],al
10001bc3:	mov    BYTE PTR [esi+0x4c],0x1
10001bc7:	mov    eax,DWORD PTR [ecx+0x8]
10001bca:	mov    ecx,esi
10001bcc:	mov    BYTE PTR [eax+0x4c],0x1
10001bd0:	call   0x10001dab
10001bd5:	jmp    0x10001c5c
10001bda:	cmp    BYTE PTR [ecx+0x4c],0x0
10001bde:	jne    0x10001bf4
10001be0:	push   DWORD PTR [ebp+0x8]
10001be3:	mov    BYTE PTR [ecx+0x4c],0x1
10001be7:	mov    ecx,esi
10001be9:	mov    BYTE PTR [esi+0x4c],0x0
10001bed:	call   0x10001deb
10001bf2:	mov    ecx,DWORD PTR [esi]
10001bf4:	cmp    BYTE PTR [ecx+0x4d],0x0
10001bf8:	jne    0x10001c0f
10001bfa:	mov    eax,DWORD PTR [ecx+0x8]
10001bfd:	cmp    BYTE PTR [eax+0x4c],0x1
10001c01:	jne    0x10001c25
10001c03:	mov    eax,DWORD PTR [ecx]
10001c05:	cmp    BYTE PTR [eax+0x4c],0x1
10001c09:	jne    0x10001c25
10001c0b:	mov    BYTE PTR [ecx+0x4c],0x0
10001c0f:	mov    ebx,esi
10001c11:	mov    esi,DWORD PTR [esi+0x4]
10001c14:	mov    eax,DWORD PTR [ebp+0x8]
10001c17:	mov    eax,DWORD PTR [eax+0x4]
10001c1a:	cmp    ebx,DWORD PTR [eax+0x4]
10001c1d:	jne    0x10001b53
10001c23:	jmp    0x10001c5c
10001c25:	mov    eax,DWORD PTR [ecx]
10001c27:	cmp    BYTE PTR [eax+0x4c],0x1
10001c2b:	jne    0x10001c42
10001c2d:	mov    eax,DWORD PTR [ecx+0x8]
10001c30:	push   DWORD PTR [ebp+0x8]
10001c33:	mov    BYTE PTR [eax+0x4c],0x1
10001c37:	mov    BYTE PTR [ecx+0x4c],0x0
10001c3b:	call   0x10001dab
10001c40:	mov    ecx,DWORD PTR [esi]
10001c42:	mov    al,BYTE PTR [esi+0x4c]
10001c45:	push   DWORD PTR [ebp+0x8]
10001c48:	mov    BYTE PTR [ecx+0x4c],al
10001c4b:	mov    BYTE PTR [esi+0x4c],0x1
10001c4f:	mov    eax,DWORD PTR [ecx]
10001c51:	mov    ecx,esi
10001c53:	mov    BYTE PTR [eax+0x4c],0x1
10001c57:	call   0x10001deb
10001c5c:	mov    BYTE PTR [ebx+0x4c],0x1
10001c60:	push   0x0
10001c62:	lea    esi,[edi+0xc]
10001c65:	push   0x1
10001c67:	lea    ecx,[esi+0x20]
10001c6a:	call   0x100012f9
10001c6f:	push   0x0
10001c71:	push   0x1
10001c73:	mov    ecx,esi
10001c75:	call   0x100012f9
10001c7a:	push   edi
10001c7b:	call   0x10041d92
10001c80:	pop    ecx
10001c81:	mov    ecx,DWORD PTR [ebp+0x8]
10001c84:	mov    eax,DWORD PTR [ecx+0x8]
10001c87:	test   eax,eax
10001c89:	jbe    0x10001c8f
10001c8b:	dec    eax
10001c8c:	mov    DWORD PTR [ecx+0x8],eax
10001c8f:	mov    ecx,DWORD PTR [ebp+0x10]
10001c92:	mov    eax,DWORD PTR [ebp+0xc]
10001c95:	mov    DWORD PTR [eax],ecx
10001c97:	mov    ecx,DWORD PTR [ebp+0x14]
10001c9a:	mov    DWORD PTR [eax+0x4],ecx
10001c9d:	call   0x1005891d
10001ca2:	ret    0x10
10001ca5:	push   ebx
10001ca6:	push   esi
10001ca7:	push   edi
10001ca8:	mov    edi,DWORD PTR [esp+0x10]
10001cac:	cmp    BYTE PTR [edi+0x11],0x0
10001cb0:	mov    ebx,ecx
10001cb2:	mov    esi,edi
10001cb4:	jne    0x10001cd1
10001cb6:	push   DWORD PTR [esi+0x8]
10001cb9:	mov    ecx,ebx
10001cbb:	call   0x10001ca5
10001cc0:	mov    esi,DWORD PTR [esi]
10001cc2:	push   edi
10001cc3:	call   0x10041d92
10001cc8:	cmp    BYTE PTR [esi+0x11],0x0
10001ccc:	pop    ecx
10001ccd:	mov    edi,esi
10001ccf:	je     0x10001cb6
10001cd1:	pop    edi
10001cd2:	pop    esi
10001cd3:	pop    ebx
10001cd4:	ret    0x4
10001cd7:	mov    eax,DWORD PTR [ecx+0x8]
10001cda:	mov    edx,DWORD PTR [eax]
10001cdc:	mov    DWORD PTR [ecx+0x8],edx
10001cdf:	mov    edx,DWORD PTR [eax]
10001ce1:	cmp    BYTE PTR [edx+0x11],0x0
10001ce5:	jne    0x10001cea
10001ce7:	mov    DWORD PTR [edx+0x4],ecx
10001cea:	mov    edx,DWORD PTR [ecx+0x4]
10001ced:	mov    DWORD PTR [eax+0x4],edx
10001cf0:	mov    edx,DWORD PTR [esp+0x4]
10001cf4:	mov    edx,DWORD PTR [edx+0x4]
10001cf7:	cmp    ecx,DWORD PTR [edx+0x4]
10001cfa:	jne    0x10001d01
10001cfc:	mov    DWORD PTR [edx+0x4],eax
10001cff:	jmp    0x10001d0f
10001d01:	mov    edx,DWORD PTR [ecx+0x4]
10001d04:	cmp    ecx,DWORD PTR [edx]
10001d06:	jne    0x10001d0c
10001d08:	mov    DWORD PTR [edx],eax
10001d0a:	jmp    0x10001d0f
10001d0c:	mov    DWORD PTR [edx+0x8],eax
10001d0f:	mov    DWORD PTR [eax],ecx
10001d11:	mov    DWORD PTR [ecx+0x4],eax
10001d14:	ret    0x4
10001d17:	mov    eax,DWORD PTR [ecx]
10001d19:	mov    edx,DWORD PTR [eax+0x8]
10001d1c:	mov    DWORD PTR [ecx],edx
10001d1e:	mov    edx,DWORD PTR [eax+0x8]
10001d21:	cmp    BYTE PTR [edx+0x11],0x0
10001d25:	jne    0x10001d2a
10001d27:	mov    DWORD PTR [edx+0x4],ecx
10001d2a:	mov    edx,DWORD PTR [ecx+0x4]
10001d2d:	mov    DWORD PTR [eax+0x4],edx
10001d30:	mov    edx,DWORD PTR [esp+0x4]
10001d34:	mov    edx,DWORD PTR [edx+0x4]
10001d37:	cmp    ecx,DWORD PTR [edx+0x4]
10001d3a:	jne    0x10001d41
10001d3c:	mov    DWORD PTR [edx+0x4],eax
10001d3f:	jmp    0x10001d50
10001d41:	mov    edx,DWORD PTR [ecx+0x4]
10001d44:	cmp    ecx,DWORD PTR [edx+0x8]
10001d47:	jne    0x10001d4e
10001d49:	mov    DWORD PTR [edx+0x8],eax
10001d4c:	jmp    0x10001d50
10001d4e:	mov    DWORD PTR [edx],eax
10001d50:	mov    DWORD PTR [eax+0x8],ecx
10001d53:	mov    DWORD PTR [ecx+0x4],eax
10001d56:	ret    0x4
10001d59:	push   ebp
10001d5a:	mov    ebp,esp
10001d5c:	push   ecx
10001d5d:	push   esi
10001d5e:	push   edi
10001d5f:	mov    edi,DWORD PTR [ebp+0x8]
10001d62:	cmp    BYTE PTR [edi+0x4d],0x0
10001d66:	mov    DWORD PTR [ebp-0x4],ecx
10001d69:	mov    esi,edi
10001d6b:	jne    0x10001da5
10001d6d:	push   ebx
10001d6e:	push   DWORD PTR [esi+0x8]
10001d71:	mov    ecx,DWORD PTR [ebp-0x4]
10001d74:	call   0x10001d59
10001d79:	mov    esi,DWORD PTR [esi]
10001d7b:	push   0x0
10001d7d:	lea    ebx,[edi+0xc]
10001d80:	push   0x1
10001d82:	lea    ecx,[ebx+0x20]
10001d85:	call   0x100012f9
10001d8a:	push   0x0
10001d8c:	push   0x1
10001d8e:	mov    ecx,ebx
10001d90:	call   0x100012f9
10001d95:	push   edi
10001d96:	call   0x10041d92
10001d9b:	cmp    BYTE PTR [esi+0x4d],0x0
10001d9f:	pop    ecx
10001da0:	mov    edi,esi
10001da2:	je     0x10001d6e
10001da4:	pop    ebx
10001da5:	pop    edi
10001da6:	pop    esi
10001da7:	leave  
10001da8:	ret    0x4
10001dab:	mov    eax,DWORD PTR [ecx+0x8]
10001dae:	mov    edx,DWORD PTR [eax]
10001db0:	mov    DWORD PTR [ecx+0x8],edx
10001db3:	mov    edx,DWORD PTR [eax]
10001db5:	cmp    BYTE PTR [edx+0x4d],0x0
10001db9:	jne    0x10001dbe
10001dbb:	mov    DWORD PTR [edx+0x4],ecx
10001dbe:	mov    edx,DWORD PTR [ecx+0x4]
10001dc1:	mov    DWORD PTR [eax+0x4],edx
10001dc4:	mov    edx,DWORD PTR [esp+0x4]
10001dc8:	mov    edx,DWORD PTR [edx+0x4]
10001dcb:	cmp    ecx,DWORD PTR [edx+0x4]
10001dce:	jne    0x10001dd5
10001dd0:	mov    DWORD PTR [edx+0x4],eax
10001dd3:	jmp    0x10001de3
10001dd5:	mov    edx,DWORD PTR [ecx+0x4]
10001dd8:	cmp    ecx,DWORD PTR [edx]
10001dda:	jne    0x10001de0
10001ddc:	mov    DWORD PTR [edx],eax
10001dde:	jmp    0x10001de3
10001de0:	mov    DWORD PTR [edx+0x8],eax
10001de3:	mov    DWORD PTR [eax],ecx
10001de5:	mov    DWORD PTR [ecx+0x4],eax
10001de8:	ret    0x4
10001deb:	mov    eax,DWORD PTR [ecx]
10001ded:	mov    edx,DWORD PTR [eax+0x8]
10001df0:	mov    DWORD PTR [ecx],edx
10001df2:	mov    edx,DWORD PTR [eax+0x8]
10001df5:	cmp    BYTE PTR [edx+0x4d],0x0
10001df9:	jne    0x10001dfe
10001dfb:	mov    DWORD PTR [edx+0x4],ecx
10001dfe:	mov    edx,DWORD PTR [ecx+0x4]
10001e01:	mov    DWORD PTR [eax+0x4],edx
10001e04:	mov    edx,DWORD PTR [esp+0x4]
10001e08:	mov    edx,DWORD PTR [edx+0x4]
10001e0b:	cmp    ecx,DWORD PTR [edx+0x4]
10001e0e:	jne    0x10001e15
10001e10:	mov    DWORD PTR [edx+0x4],eax
10001e13:	jmp    0x10001e24
10001e15:	mov    edx,DWORD PTR [ecx+0x4]
10001e18:	cmp    ecx,DWORD PTR [edx+0x8]
10001e1b:	jne    0x10001e22
10001e1d:	mov    DWORD PTR [edx+0x8],eax
10001e20:	jmp    0x10001e24
10001e22:	mov    DWORD PTR [edx],eax
10001e24:	mov    DWORD PTR [eax+0x8],ecx
10001e27:	mov    DWORD PTR [ecx+0x4],eax
10001e2a:	ret    0x4
10001e2d:	push   ebx
10001e2e:	xor    ebx,ebx
10001e30:	cmp    DWORD PTR [esi],ebx
10001e32:	jne    0x10001e39
10001e34:	call   0x100422b0
10001e39:	mov    eax,DWORD PTR [esi+0x4]
10001e3c:	cmp    BYTE PTR [eax+0x4d],bl
10001e3f:	je     0x10001e48
10001e41:	call   0x100422b0
10001e46:	jmp    0x10001e76
10001e48:	mov    ecx,DWORD PTR [eax+0x8]
10001e4b:	cmp    BYTE PTR [ecx+0x4d],bl
10001e4e:	jne    0x10001e6b
10001e50:	jmp    0x10001e54
10001e52:	mov    ecx,eax
10001e54:	mov    eax,DWORD PTR [ecx]
10001e56:	cmp    BYTE PTR [eax+0x4d],bl
10001e59:	je     0x10001e52
10001e5b:	mov    DWORD PTR [esi+0x4],ecx
10001e5e:	jmp    0x10001e76
10001e60:	mov    ecx,DWORD PTR [esi+0x4]
10001e63:	cmp    ecx,DWORD PTR [eax+0x8]
10001e66:	jne    0x10001e73
10001e68:	mov    DWORD PTR [esi+0x4],eax
10001e6b:	mov    eax,DWORD PTR [eax+0x4]
10001e6e:	cmp    BYTE PTR [eax+0x4d],bl
10001e71:	je     0x10001e60
10001e73:	mov    DWORD PTR [esi+0x4],eax
10001e76:	mov    eax,esi
10001e78:	pop    ebx
10001e79:	ret    
10001e7a:	push   ebx
10001e7b:	xor    ebx,ebx
10001e7d:	cmp    DWORD PTR [esi],ebx
10001e7f:	jne    0x10001e86
10001e81:	call   0x100422b0
10001e86:	mov    eax,DWORD PTR [esi+0x4]
10001e89:	cmp    BYTE PTR [eax+0x11],bl
10001e8c:	je     0x10001e95
10001e8e:	call   0x100422b0
10001e93:	jmp    0x10001ec3
10001e95:	mov    ecx,DWORD PTR [eax+0x8]
10001e98:	cmp    BYTE PTR [ecx+0x11],bl
10001e9b:	jne    0x10001eb8
10001e9d:	jmp    0x10001ea1
10001e9f:	mov    ecx,eax
10001ea1:	mov    eax,DWORD PTR [ecx]
10001ea3:	cmp    BYTE PTR [eax+0x11],bl
10001ea6:	je     0x10001e9f
10001ea8:	mov    DWORD PTR [esi+0x4],ecx
10001eab:	jmp    0x10001ec3
10001ead:	mov    ecx,DWORD PTR [esi+0x4]
10001eb0:	cmp    ecx,DWORD PTR [eax+0x8]
10001eb3:	jne    0x10001ec0
10001eb5:	mov    DWORD PTR [esi+0x4],eax
10001eb8:	mov    eax,DWORD PTR [eax+0x4]
10001ebb:	cmp    BYTE PTR [eax+0x11],bl
10001ebe:	je     0x10001ead
10001ec0:	mov    DWORD PTR [esi+0x4],eax
10001ec3:	mov    eax,esi
10001ec5:	pop    ebx
10001ec6:	ret    
10001ec7:	push   ebp
10001ec8:	mov    ebp,esp
10001eca:	mov    ecx,DWORD PTR [ebp+0x8]
10001ecd:	sub    esp,0xc
10001ed0:	test   ecx,ecx
10001ed2:	ja     0x10001edf
10001ed4:	xor    ecx,ecx
10001ed6:	push   ecx
10001ed7:	call   0x1004239e
10001edc:	pop    ecx
10001edd:	leave  
10001ede:	ret    
10001edf:	or     eax,0xffffffff
10001ee2:	xor    edx,edx
10001ee4:	div    ecx
10001ee6:	cmp    eax,0x1
10001ee9:	jae    0x10001ed6
10001eeb:	and    DWORD PTR [ebp+0x8],0x0
10001eef:	lea    eax,[ebp+0x8]
10001ef2:	push   eax
10001ef3:	lea    ecx,[ebp-0xc]
10001ef6:	call   0x10041e12
10001efb:	push   0x100738b8
10001f00:	lea    eax,[ebp-0xc]
10001f03:	push   eax
10001f04:	mov    DWORD PTR [ebp-0xc],0x100655b8
10001f0b:	call   0x10046704
10001f10:	int3   
10001f11:	push   esi
10001f12:	push   DWORD PTR [esp+0x8]
10001f16:	mov    esi,ecx
10001f18:	call   0x10041e78
10001f1d:	mov    DWORD PTR [esi],0x100655b8
10001f23:	mov    eax,esi
10001f25:	pop    esi
10001f26:	ret    0x4
10001f29:	push   0x0
10001f2b:	push   0x1
10001f2d:	lea    ecx,[esi+0x20]
10001f30:	call   0x100012f9
10001f35:	push   0x0
10001f37:	push   0x1
10001f39:	mov    ecx,esi
10001f3b:	call   0x100012f9
10001f40:	ret    
10001f41:	push   ebp
10001f42:	mov    ebp,esp
10001f44:	mov    eax,DWORD PTR [ebp+0x8]
10001f47:	mov    DWORD PTR [ebp+0x8],eax
10001f4a:	push   0x100738ec
10001f4f:	lea    eax,[ebp+0x8]
10001f52:	push   eax
10001f53:	call   0x10046704
10001f58:	int3   
10001f59:	mov    eax,DWORD PTR [esp+0x4]
10001f5d:	test   eax,eax
10001f5f:	je     0x10001f8d
10001f61:	cmp    eax,0xc
10001f64:	je     0x10001f86
10001f66:	cmp    eax,0x16
10001f69:	je     0x10001f7f
10001f6b:	cmp    eax,0x22
10001f6e:	je     0x10001f7f
10001f70:	cmp    eax,0x50
10001f73:	je     0x10001f8d
10001f75:	push   0x80004005
10001f7a:	call   0x10001f41
10001f7f:	push   0x80070057
10001f84:	jmp    0x10001f7a
10001f86:	push   0x8007000e
10001f8b:	jmp    0x10001f7a
10001f8d:	ret    
10001f8e:	push   esi
10001f8f:	push   DWORD PTR [esp+0xc]
10001f93:	mov    esi,eax
10001f95:	push   DWORD PTR [esp+0xc]
10001f99:	call   DWORD PTR ds:0x10065080
10001f9f:	test   eax,eax
10001fa1:	jne    0x10001fa5
10001fa3:	pop    esi
10001fa4:	ret    
10001fa5:	push   edi
10001fa6:	push   eax
10001fa7:	call   DWORD PTR ds:0x10065090
10001fad:	mov    edi,eax
10001faf:	test   edi,edi
10001fb1:	je     0x10001fda
10001fb3:	push   DWORD PTR [esp+0x10]
10001fb7:	push   DWORD PTR [esp+0x10]
10001fbb:	call   DWORD PTR ds:0x10065088
10001fc1:	add    eax,edi
10001fc3:	and    esi,0xf
10001fc6:	jbe    0x10001fd6
10001fc8:	cmp    edi,eax
10001fca:	jae    0x10001fda
10001fcc:	dec    esi
10001fcd:	movzx  ecx,WORD PTR [edi]
10001fd0:	lea    edi,[edi+ecx*2+0x2]
10001fd4:	jne    0x10001fc8
10001fd6:	cmp    edi,eax
10001fd8:	jb     0x10001fde
10001fda:	xor    eax,eax
10001fdc:	jmp    0x10001fe8
10001fde:	mov    ax,WORD PTR [edi]
10001fe1:	neg    ax
10001fe4:	sbb    eax,eax
10001fe6:	and    eax,edi
10001fe8:	pop    edi
10001fe9:	pop    esi
10001fea:	ret    
10001feb:	mov    eax,DWORD PTR [esp+0x8]
10001fef:	shr    eax,0x4
10001ff2:	inc    eax
10001ff3:	movzx  eax,ax
10001ff6:	push   0x6
10001ff8:	push   eax
10001ff9:	push   DWORD PTR [esp+0xc]
10001ffd:	call   DWORD PTR ds:0x1006507c
10002003:	test   eax,eax
10002005:	jne    0x10002008
10002007:	ret    
10002008:	push   eax
10002009:	push   DWORD PTR [esp+0x8]
1000200d:	mov    eax,DWORD PTR [esp+0x10]
10002011:	call   0x10001f8e
10002016:	pop    ecx
10002017:	pop    ecx
10002018:	ret    
10002019:	push   ebx
1000201a:	push   ebp
1000201b:	push   esi
1000201c:	push   edi
1000201d:	xor    edi,edi
1000201f:	mov    ebx,0x1007f9e0
10002024:	push   edi
10002025:	mov    ecx,ebx
10002027:	call   0x10055b4f
1000202c:	xor    ebp,ebp
1000202e:	inc    ebp
1000202f:	jmp    0x1000206b
10002031:	test   edi,edi
10002033:	jne    0x10002071
10002035:	mov    eax,DWORD PTR [esp+0x14]
10002039:	shr    eax,0x4
1000203c:	inc    eax
1000203d:	push   edi
1000203e:	movzx  eax,ax
10002041:	push   eax
10002042:	push   0x6
10002044:	push   esi
10002045:	call   DWORD PTR ds:0x10065078
1000204b:	test   eax,eax
1000204d:	je     0x10002062
1000204f:	push   eax
10002050:	mov    eax,DWORD PTR [esp+0x18]
10002054:	push   esi
10002055:	call   0x10001f8e
1000205a:	mov    edi,eax
1000205c:	test   edi,edi
1000205e:	pop    ecx
1000205f:	pop    ecx
10002060:	jne    0x10002078
10002062:	push   ebp
10002063:	mov    ecx,ebx
10002065:	call   0x10055b4f
1000206a:	inc    ebp
1000206b:	mov    esi,eax
1000206d:	test   esi,esi
1000206f:	jne    0x10002031
10002071:	xor    eax,eax
10002073:	pop    edi
10002074:	pop    esi
10002075:	pop    ebp
10002076:	pop    ebx
10002077:	ret    
10002078:	mov    eax,esi
1000207a:	jmp    0x10002073
1000207c:	ret    
1000207d:	lea    ecx,[eax+0xc]
10002080:	or     edx,0xffffffff
10002083:	lock xadd DWORD PTR [ecx],edx
10002087:	dec    edx
10002088:	test   edx,edx
1000208a:	jg     0x10002094
1000208c:	mov    ecx,DWORD PTR [eax]
1000208e:	mov    edx,DWORD PTR [ecx]
10002090:	push   eax
10002091:	call   DWORD PTR [edx+0x4]
10002094:	ret    
10002095:	mov    eax,DWORD PTR [eax]
10002097:	sub    eax,0x10
1000209a:	jmp    0x1000207d
1000209f:	mov    eax,DWORD PTR [esp+0x4]
100020a3:	push   esi
100020a4:	mov    esi,DWORD PTR [eax]
100020a6:	and    DWORD PTR [eax],0x0
100020a9:	mov    eax,DWORD PTR [edi]
100020ab:	cmp    esi,eax
100020ad:	je     0x100020b6
100020af:	push   eax
100020b0:	call   0x10041d92
100020b5:	pop    ecx
100020b6:	mov    DWORD PTR [edi],esi
100020b8:	mov    eax,edi
100020ba:	pop    esi
100020bb:	ret    0x4
100020be:	push   DWORD PTR [eax]
100020c0:	call   0x10041d92
100020c5:	pop    ecx
100020c6:	ret    
100020c7:	push   ebp
100020c8:	mov    ebp,esp
100020ca:	push   ebx
100020cb:	mov    ebx,DWORD PTR ds:0x1006508c
100020d1:	push   esi
100020d2:	xor    esi,esi
100020d4:	cmp    DWORD PTR [ebp+0xc],esi
100020d7:	push   edi
100020d8:	je     0x100020f0
100020da:	call   DWORD PTR ds:0x1007dfe4
100020e0:	push   esi
100020e1:	push   esi
100020e2:	push   0xffffffff
100020e4:	push   DWORD PTR [ebp+0xc]
100020e7:	push   esi
100020e8:	push   eax
100020e9:	call   ebx
100020eb:	mov    edi,eax
100020ed:	dec    edi
100020ee:	jmp    0x100020f2
100020f0:	xor    edi,edi
100020f2:	cmp    edi,esi
100020f4:	mov    esi,DWORD PTR [ebp+0x8]
100020f7:	jle    0x1000211c
100020f9:	push   edi
100020fa:	call   0x100021bb
100020ff:	push   edi
10002100:	push   eax
10002101:	push   0xffffffff
10002103:	push   DWORD PTR [ebp+0xc]
10002106:	push   0x0
10002108:	call   DWORD PTR ds:0x1007dfe4
1000210e:	push   eax
1000210f:	call   ebx
10002111:	mov    eax,edi
10002113:	mov    edx,esi
10002115:	call   0x10002246
1000211a:	jmp    0x10002121
1000211c:	call   0x1000217b
10002121:	mov    eax,DWORD PTR [ebp+0x8]
10002124:	pop    edi
10002125:	pop    esi
10002126:	pop    ebx
10002127:	pop    ebp
10002128:	ret    0x8
1000212b:	xor    al,al
1000212d:	cmp    DWORD PTR [esp+0x8],0x0
10002132:	je     0x1000215d
10002134:	test   DWORD PTR [esp+0x8],0xffff0000
1000213c:	jne    0x1000215d
1000213e:	push   esi
1000213f:	movzx  esi,WORD PTR [esp+0xc]
10002144:	push   esi
10002145:	call   0x10002019
1000214a:	test   eax,eax
1000214c:	pop    ecx
1000214d:	je     0x1000215a
1000214f:	push   esi
10002150:	push   eax
10002151:	push   DWORD PTR [esp+0x10]
10002155:	call   0x100021e1
1000215a:	mov    al,0x1
1000215c:	pop    esi
1000215d:	ret    0x8
10002160:	test   ecx,ecx
10002162:	jne    0x1000216e
10002164:	push   0x80004005
10002169:	call   0x10001f41
1000216e:	mov    eax,DWORD PTR [ecx]
10002170:	call   DWORD PTR [eax+0xc]
10002173:	add    eax,0x10
10002176:	mov    DWORD PTR [esi],eax
10002178:	mov    eax,esi
1000217a:	ret    
1000217b:	mov    ecx,DWORD PTR [esi]
1000217d:	lea    eax,[ecx-0x10]
10002180:	xor    edx,edx
10002182:	cmp    DWORD PTR [eax+0x4],edx
10002185:	push   edi
10002186:	mov    edi,DWORD PTR [eax]
10002188:	je     0x100021b9
1000218a:	cmp    DWORD PTR [eax+0xc],edx
1000218d:	jge    0x100021a8
1000218f:	cmp    DWORD PTR [ecx-0x8],edx
10002192:	jge    0x1000219e
10002194:	push   0x80070057
10002199:	call   0x10001f41
1000219e:	mov    DWORD PTR [ecx-0xc],edx
100021a1:	mov    eax,DWORD PTR [esi]
100021a3:	mov    WORD PTR [eax],dx
100021a6:	pop    edi
100021a7:	ret    
100021a8:	call   0x1000207d
100021ad:	mov    eax,DWORD PTR [edi]
100021af:	mov    ecx,edi
100021b1:	call   DWORD PTR [eax+0xc]
100021b4:	add    eax,0x10
100021b7:	mov    DWORD PTR [esi],eax
100021b9:	pop    edi
100021ba:	ret    
100021bb:	mov    eax,DWORD PTR [esi]
100021bd:	xor    ecx,ecx
100021bf:	sub    eax,0x10
100021c2:	inc    ecx
100021c3:	sub    ecx,DWORD PTR [eax+0xc]
100021c6:	mov    eax,DWORD PTR [eax+0x8]
100021c9:	sub    eax,DWORD PTR [esp+0x4]
100021cd:	or     ecx,eax
100021cf:	jge    0x100021dc
100021d1:	mov    eax,DWORD PTR [esp+0x4]
100021d5:	mov    ecx,esi
100021d7:	call   0x10002267
100021dc:	mov    eax,DWORD PTR [esi]
100021de:	ret    0x4
100021e1:	push   edi
100021e2:	push   DWORD PTR [esp+0x10]
100021e6:	push   DWORD PTR [esp+0x10]
100021ea:	call   0x10001feb
100021ef:	mov    edi,eax
100021f1:	test   edi,edi
100021f3:	pop    ecx
100021f4:	pop    ecx
100021f5:	je     0x10002242
100021f7:	push   ebx
100021f8:	movzx  ebx,WORD PTR [edi]
100021fb:	push   esi
100021fc:	mov    esi,DWORD PTR [esp+0x10]
10002200:	push   ebx
10002201:	call   0x100021bb
10002206:	mov    esi,eax
10002208:	movzx  eax,WORD PTR [edi]
1000220b:	add    edi,0x2
1000220e:	cmp    eax,0xffffffff
10002211:	jne    0x1000221b
10002213:	push   edi
10002214:	call   0x100425f3
10002219:	pop    ecx
1000221a:	inc    eax
1000221b:	add    eax,eax
1000221d:	push   eax
1000221e:	push   edi
1000221f:	lea    eax,[ebx+ebx*1]
10002222:	push   eax
10002223:	push   esi
10002224:	call   0x100422c5
10002229:	push   eax
1000222a:	call   0x10001f59
1000222f:	mov    edx,DWORD PTR [esp+0x24]
10002233:	add    esp,0x14
10002236:	mov    eax,ebx
10002238:	call   0x10002246
1000223d:	xor    eax,eax
1000223f:	pop    esi
10002240:	inc    eax
10002241:	pop    ebx
10002242:	pop    edi
10002243:	ret    0xc
10002246:	test   eax,eax
10002248:	jl     0x1000225c
1000224a:	mov    ecx,DWORD PTR [edx]
1000224c:	cmp    eax,DWORD PTR [ecx-0x8]
1000224f:	jg     0x1000225c
10002251:	mov    DWORD PTR [ecx-0xc],eax
10002254:	mov    ecx,DWORD PTR [edx]
10002256:	and    WORD PTR [ecx+eax*2],0x0
1000225b:	ret    
1000225c:	push   0x80070057
10002261:	call   0x10001f41
10002266:	int3   
10002267:	push   esi
10002268:	mov    esi,ecx
1000226a:	push   edi
1000226b:	mov    edi,eax
1000226d:	mov    eax,DWORD PTR [esi]
1000226f:	mov    ecx,DWORD PTR [eax-0xc]
10002272:	sub    eax,0x10
10002275:	cmp    ecx,edi
10002277:	jle    0x1000227b
10002279:	mov    edi,ecx
1000227b:	cmp    DWORD PTR [eax+0xc],0x1
1000227f:	jle    0x1000228a
10002281:	push   edi
10002282:	push   esi
10002283:	call   0x100022b0
10002288:	jmp    0x100022ad
1000228a:	mov    eax,DWORD PTR [eax+0x8]
1000228d:	cmp    eax,edi
1000228f:	jge    0x100022ad
10002291:	mov    edx,eax
10002293:	mov    eax,0x400
10002298:	cmp    edx,eax
1000229a:	jle    0x100022a0
1000229c:	add    edx,eax
1000229e:	jmp    0x100022a2
100022a0:	add    edx,edx
100022a2:	cmp    edx,edi
100022a4:	jge    0x100022a8
100022a6:	mov    edx,edi
100022a8:	call   0x10002316
100022ad:	pop    edi
100022ae:	pop    esi
100022af:	ret    
100022b0:	push   ebp
100022b1:	mov    ebp,esp
100022b3:	push   ecx
100022b4:	mov    eax,DWORD PTR [ebp+0x8]
100022b7:	push   ebx
100022b8:	push   esi
100022b9:	mov    esi,DWORD PTR [eax]
100022bb:	mov    ebx,DWORD PTR [esi-0xc]
100022be:	sub    esi,0x10
100022c1:	mov    ecx,DWORD PTR [esi]
100022c3:	mov    eax,DWORD PTR [ecx]
100022c5:	push   edi
100022c6:	mov    DWORD PTR [ebp-0x4],ebx
100022c9:	call   DWORD PTR [eax+0x10]
100022cc:	mov    edx,DWORD PTR [eax]
100022ce:	push   0x2
100022d0:	push   DWORD PTR [ebp+0xc]
100022d3:	mov    ecx,eax
100022d5:	call   DWORD PTR [edx]
100022d7:	mov    edi,eax
100022d9:	test   edi,edi
100022db:	jne    0x100022e2
100022dd:	call   0x1000235b
100022e2:	mov    eax,DWORD PTR [ebp+0xc]
100022e5:	cmp    ebx,eax
100022e7:	jge    0x100022eb
100022e9:	mov    eax,ebx
100022eb:	lea    ecx,[esi+0x10]
100022ee:	push   ecx
100022ef:	inc    eax
100022f0:	push   eax
100022f1:	lea    ebx,[edi+0x10]
100022f4:	push   ebx
100022f5:	call   0x10002340
100022fa:	mov    eax,DWORD PTR [ebp-0x4]
100022fd:	mov    DWORD PTR [edi+0x4],eax
10002300:	add    esp,0xc
10002303:	mov    eax,esi
10002305:	call   0x1000207d
1000230a:	mov    eax,DWORD PTR [ebp+0x8]
1000230d:	pop    edi
1000230e:	pop    esi
1000230f:	mov    DWORD PTR [eax],ebx
10002311:	pop    ebx
10002312:	leave  
10002313:	ret    0x8
10002316:	mov    eax,DWORD PTR [esi]
10002318:	sub    eax,0x10
1000231b:	cmp    DWORD PTR [eax+0x8],edx
1000231e:	mov    ecx,DWORD PTR [eax]
10002320:	jge    0x10002335
10002322:	test   edx,edx
10002324:	jle    0x10002335
10002326:	push   edi
10002327:	mov    edi,DWORD PTR [ecx]
10002329:	push   0x2
1000232b:	push   edx
1000232c:	push   eax
1000232d:	call   DWORD PTR [edi+0x8]
10002330:	test   eax,eax
10002332:	pop    edi
10002333:	jne    0x1000233a
10002335:	jmp    0x1000235b
1000233a:	add    eax,0x10
1000233d:	mov    DWORD PTR [esi],eax
1000233f:	ret    
10002340:	add    eax,eax
10002342:	push   eax
10002343:	push   DWORD PTR [esp+0x10]
10002347:	mov    eax,DWORD PTR [esp+0x10]
1000234b:	add    eax,eax
1000234d:	push   eax
1000234e:	push   DWORD PTR [esp+0x10]
10002352:	call   0x100422c5
10002357:	add    esp,0x10
1000235a:	ret    
1000235b:	push   0x8007000e
10002360:	call   0x10001f41
10002365:	int3   
10002366:	push   0x0
10002368:	mov    eax,0x1006121f
1000236d:	call   0x10058845
10002372:	mov    esi,DWORD PTR [ebp+0x8]
10002375:	mov    ecx,0x1007fa54
1000237a:	call   0x10002160
1000237f:	push   DWORD PTR [ebp+0xc]
10002382:	and    DWORD PTR [ebp-0x4],0x0
10002386:	push   esi
10002387:	call   0x1000212b
1000238c:	test   al,al
1000238e:	jne    0x10002399
10002390:	push   DWORD PTR [ebp+0xc]
10002393:	push   esi
10002394:	call   0x100023a3
10002399:	mov    eax,esi
1000239b:	call   0x1005891d
100023a0:	ret    0x8
100023a3:	push   ebp
100023a4:	mov    ebp,esp
100023a6:	xor    eax,eax
100023a8:	cmp    DWORD PTR [ebp+0xc],eax
100023ab:	je     0x100023b6
100023ad:	push   DWORD PTR [ebp+0xc]
100023b0:	call   0x100425f3
100023b5:	pop    ecx
100023b6:	push   ebx
100023b7:	push   DWORD PTR [ebp+0xc]
100023ba:	mov    ebx,eax
100023bc:	mov    eax,DWORD PTR [ebp+0x8]
100023bf:	call   0x100023cc
100023c4:	mov    eax,DWORD PTR [ebp+0x8]
100023c7:	pop    ebx
100023c8:	pop    ebp
100023c9:	ret    0x8
100023cc:	push   ebp
100023cd:	mov    ebp,esp
100023cf:	push   ecx
100023d0:	test   ebx,ebx
100023d2:	push   esi
100023d3:	mov    esi,eax
100023d5:	jne    0x100023de
100023d7:	call   0x1000217b
100023dc:	jmp    0x10002434
100023de:	push   edi
100023df:	mov    edi,DWORD PTR [ebp+0x8]
100023e2:	test   edi,edi
100023e4:	jne    0x100023f0
100023e6:	push   0x80070057
100023eb:	call   0x10001f41
100023f0:	mov    eax,DWORD PTR [esi]
100023f2:	mov    ecx,DWORD PTR [eax-0xc]
100023f5:	sub    edi,eax
100023f7:	push   ebx
100023f8:	mov    DWORD PTR [ebp-0x4],ecx
100023fb:	sar    edi,1
100023fd:	call   0x100021bb
10002402:	cmp    edi,DWORD PTR [ebp-0x4]
10002405:	ja     0x1000241b
10002407:	lea    ecx,[ebx+ebx*1]
1000240a:	push   ecx
1000240b:	lea    edx,[eax+edi*2]
1000240e:	push   edx
1000240f:	push   ecx
10002410:	push   eax
10002411:	call   0x10041da6
10002416:	add    esp,0x10
10002419:	jmp    0x1000242a
1000241b:	push   DWORD PTR [ebp+0x8]
1000241e:	push   ebx
1000241f:	push   eax
10002420:	mov    eax,ebx
10002422:	call   0x10002340
10002427:	add    esp,0xc
1000242a:	mov    eax,ebx
1000242c:	mov    edx,esi
1000242e:	call   0x10002246
10002433:	pop    edi
10002434:	pop    esi
10002435:	leave  
10002436:	ret    0x4
10002439:	push   0x4
1000243b:	mov    eax,0x1005f3f5
10002440:	call   0x10058845
10002445:	push   0xc
10002447:	call   0x1004239e
1000244c:	mov    esi,eax
1000244e:	pop    ecx
1000244f:	mov    DWORD PTR [ebp-0x10],esi
10002452:	and    DWORD PTR [ebp-0x4],0x0
10002456:	test   esi,esi
10002458:	je     0x10002471
1000245a:	push   DWORD PTR [ebp+0x8]
1000245d:	and    DWORD PTR [esi+0x4],0x0
10002461:	mov    DWORD PTR [esi+0x8],0x1
10002468:	call   0x1004f710
1000246d:	mov    DWORD PTR [esi],eax
1000246f:	jmp    0x10002473
10002471:	xor    esi,esi
10002473:	or     DWORD PTR [ebp-0x4],0xffffffff
10002477:	test   esi,esi
10002479:	mov    DWORD PTR [edi],esi
1000247b:	jne    0x10002487
1000247d:	push   0x8007000e
10002482:	call   0x1004fa00
10002487:	mov    eax,edi
10002489:	call   0x1005891d
1000248e:	ret    0x4
10002491:	push   0x4
10002493:	mov    eax,0x1005f3f5
10002498:	call   0x10058845
1000249d:	push   0xc
1000249f:	call   0x1004239e
100024a4:	mov    esi,eax
100024a6:	pop    ecx
100024a7:	mov    DWORD PTR [ebp-0x10],esi
100024aa:	and    DWORD PTR [ebp-0x4],0x0
100024ae:	test   esi,esi
100024b0:	je     0x100024bc
100024b2:	push   DWORD PTR [ebp+0x8]
100024b5:	call   0x100025ad
100024ba:	jmp    0x100024be
100024bc:	xor    eax,eax
100024be:	or     DWORD PTR [ebp-0x4],0xffffffff
100024c2:	test   eax,eax
100024c4:	mov    DWORD PTR [edi],eax
100024c6:	jne    0x100024d2
100024c8:	push   0x8007000e
100024cd:	call   0x1004fa00
100024d2:	mov    eax,edi
100024d4:	call   0x1005891d
100024d9:	ret    0x4
100024dc:	jmp    0x1000256d
100024e1:	push   0x8
100024e3:	mov    eax,0x1005e66d
100024e8:	call   0x10058845
100024ed:	and    DWORD PTR [ebp-0x4],0x0
100024f1:	and    DWORD PTR [ebp-0x10],0x0
100024f5:	push   DWORD PTR [ebp+0xc]
100024f8:	mov    edi,DWORD PTR [ebp+0x8]
100024fb:	call   0x10002491
10002500:	and    DWORD PTR [ebp-0x4],0x0
10002504:	xor    esi,esi
10002506:	inc    esi
10002507:	push   0xc
10002509:	mov    DWORD PTR [ebp-0x10],esi
1000250c:	call   0x1004239e
10002511:	mov    edi,eax
10002513:	pop    ecx
10002514:	mov    DWORD PTR [ebp-0x14],edi
10002517:	test   edi,edi
10002519:	mov    DWORD PTR [ebp-0x4],esi
1000251c:	je     0x1000252d
1000251e:	push   DWORD PTR [ebp+0x10]
10002521:	push   DWORD PTR [ebp+0x8]
10002524:	call   0x100025dd
10002529:	mov    esi,eax
1000252b:	jmp    0x1000252f
1000252d:	xor    esi,esi
1000252f:	test   esi,esi
10002531:	mov    BYTE PTR [ebp-0x4],0x0
10002535:	jne    0x10002543
10002537:	push   0x8007000e
1000253c:	call   0x1004fa00
10002541:	jmp    0x1000254d
10002543:	mov    edi,DWORD PTR [ebp+0x8]
10002546:	call   0x1000256d
1000254b:	mov    DWORD PTR [edi],esi
1000254d:	mov    eax,DWORD PTR [ebp+0x8]
10002550:	call   0x1005891d
10002555:	ret    
10002556:	mov    eax,DWORD PTR [eax]
10002558:	test   eax,eax
1000255a:	je     0x1000256a
1000255c:	mov    eax,DWORD PTR [eax]
1000255e:	test   eax,eax
10002560:	je     0x1000256a
10002562:	push   eax
10002563:	call   DWORD PTR ds:0x100652ac
10002569:	ret    
1000256a:	xor    eax,eax
1000256c:	ret    
1000256d:	push   esi
1000256e:	mov    esi,DWORD PTR [edi]
10002570:	test   esi,esi
10002572:	je     0x100025ab
10002574:	lea    eax,[esi+0x8]
10002577:	push   eax
10002578:	call   DWORD PTR ds:0x100650ac
1000257e:	test   eax,eax
10002580:	jne    0x100025a8
10002582:	test   esi,esi
10002584:	je     0x100025a8
10002586:	mov    eax,DWORD PTR [esi]
10002588:	test   eax,eax
1000258a:	je     0x10002593
1000258c:	push   eax
1000258d:	call   DWORD PTR ds:0x100652b4
10002593:	mov    eax,DWORD PTR [esi+0x4]
10002596:	test   eax,eax
10002598:	je     0x100025a1
1000259a:	push   eax
1000259b:	call   0x100422c0
100025a0:	pop    ecx
100025a1:	push   esi
100025a2:	call   0x10041d92
100025a7:	pop    ecx
100025a8:	and    DWORD PTR [edi],0x0
100025ab:	pop    esi
100025ac:	ret    
100025ad:	push   DWORD PTR [esp+0x4]
100025b1:	and    DWORD PTR [esi+0x4],0x0
100025b5:	mov    DWORD PTR [esi+0x8],0x1
100025bc:	call   DWORD PTR ds:0x100652b0
100025c2:	test   eax,eax
100025c4:	mov    DWORD PTR [esi],eax
100025c6:	jne    0x100025d8
100025c8:	cmp    DWORD PTR [esp+0x4],eax
100025cc:	je     0x100025d8
100025ce:	push   0x8007000e
100025d3:	call   0x1004fa00
100025d8:	mov    eax,esi
100025da:	ret    0x4
100025dd:	push   ebp
100025de:	mov    ebp,esp
100025e0:	push   ecx
100025e1:	mov    eax,DWORD PTR [ebp+0x8]
100025e4:	and    DWORD PTR [edi+0x4],0x0
100025e8:	push   ebx
100025e9:	push   esi
100025ea:	mov    DWORD PTR [edi+0x8],0x1
100025f1:	call   0x10002556
100025f6:	mov    ebx,eax
100025f8:	mov    eax,DWORD PTR [ebp+0xc]
100025fb:	call   0x10002556
10002600:	lea    esi,[eax+ebx*1]
10002603:	add    esi,esi
10002605:	push   esi
10002606:	push   0x0
10002608:	mov    DWORD PTR [ebp-0x4],eax
1000260b:	call   DWORD PTR ds:0x100652a8
10002611:	test   eax,eax
10002613:	mov    DWORD PTR [edi],eax
10002615:	jne    0x10002623
10002617:	push   0x8007000e
1000261c:	call   0x1004fa00
10002621:	jmp    0x10002674
10002623:	mov    ecx,DWORD PTR [ebp+0x8]
10002626:	mov    ecx,DWORD PTR [ecx]
10002628:	test   ecx,ecx
1000262a:	je     0x10002630
1000262c:	mov    ecx,DWORD PTR [ecx]
1000262e:	jmp    0x10002632
10002630:	xor    ecx,ecx
10002632:	test   ecx,ecx
10002634:	je     0x10002649
10002636:	lea    edx,[ebx+ebx*1+0x2]
1000263a:	push   edx
1000263b:	push   ecx
1000263c:	add    esi,0x2
1000263f:	push   esi
10002640:	push   eax
10002641:	call   0x100422c5
10002646:	add    esp,0x10
10002649:	mov    eax,DWORD PTR [ebp+0xc]
1000264c:	mov    eax,DWORD PTR [eax]
1000264e:	test   eax,eax
10002650:	je     0x10002656
10002652:	mov    ecx,DWORD PTR [eax]
10002654:	jmp    0x10002658
10002656:	xor    ecx,ecx
10002658:	test   ecx,ecx
1000265a:	je     0x10002674
1000265c:	mov    eax,DWORD PTR [ebp-0x4]
1000265f:	lea    eax,[eax+eax*1+0x2]
10002663:	push   eax
10002664:	push   ecx
10002665:	push   eax
10002666:	mov    eax,DWORD PTR [edi]
10002668:	lea    eax,[eax+ebx*2]
1000266b:	push   eax
1000266c:	call   0x100422c5
10002671:	add    esp,0x10
10002674:	pop    esi
10002675:	mov    eax,edi
10002677:	pop    ebx
10002678:	leave  
10002679:	ret    0x8
1000267c:	mov    DWORD PTR [ecx],0x1006a77c
10002682:	jmp    0x1000109a
10002687:	push   esi
10002688:	mov    esi,ecx
1000268a:	mov    DWORD PTR [esi],0x1006a77c
10002690:	call   0x1000109a
10002695:	test   BYTE PTR [esp+0x8],0x1
1000269a:	je     0x100026a3
1000269c:	push   esi
1000269d:	call   0x10041d92
100026a2:	pop    ecx
100026a3:	mov    eax,esi
100026a5:	pop    esi
100026a6:	ret    0x4
100026a9:	push   0x0
100026ab:	mov    eax,0x1005eb3d
100026b0:	call   0x10058845
100026b5:	mov    esi,DWORD PTR [ebp+0x8]
100026b8:	mov    ecx,esi
100026ba:	call   0x10041e01
100026bf:	and    DWORD PTR [ebp-0x4],0x0
100026c3:	push   DWORD PTR [ebp+0xc]
100026c6:	lea    ecx,[esi+0xc]
100026c9:	mov    DWORD PTR [esi],0x10072304
100026cf:	call   0x100011b0
100026d4:	mov    eax,esi
100026d6:	call   0x1005891d
100026db:	ret    0x8
100026de:	push   esi
100026df:	mov    esi,ecx
100026e1:	push   0x0
100026e3:	push   0x1
100026e5:	lea    ecx,[esi+0xc]
100026e8:	mov    DWORD PTR [esi],0x10072304
100026ee:	call   0x100012f9
100026f3:	mov    ecx,esi
100026f5:	pop    esi
100026f6:	jmp    0x10041ed0
100026fb:	push   esi
100026fc:	mov    esi,ecx
100026fe:	call   0x100026de
10002703:	test   BYTE PTR [esp+0x8],0x1
10002708:	je     0x10002711
1000270a:	push   esi
1000270b:	call   0x10041d92
10002710:	pop    ecx
10002711:	mov    eax,esi
10002713:	pop    esi
10002714:	ret    0x4
10002717:	push   0x4
10002719:	mov    eax,0x1005e6ab
1000271e:	call   0x10058845
10002723:	mov    esi,ecx
10002725:	mov    DWORD PTR [ebp-0x10],esi
10002728:	mov    edi,DWORD PTR [ebp+0x8]
1000272b:	push   edi
1000272c:	call   0x10041e78
10002731:	and    DWORD PTR [ebp-0x4],0x0
10002735:	add    edi,0xc
10002738:	push   edi
10002739:	lea    ecx,[esi+0xc]
1000273c:	mov    DWORD PTR [esi],0x10072304
10002742:	call   0x100011b0
10002747:	mov    eax,esi
10002749:	call   0x1005891d
1000274e:	ret    0x4
10002751:	push   0x0
10002753:	mov    eax,0x1005e9a0
10002758:	call   0x10058845
1000275d:	mov    esi,DWORD PTR [ebp+0x8]
10002760:	push   DWORD PTR [ebp+0xc]
10002763:	mov    ecx,esi
10002765:	call   0x100011b0
1000276a:	push   DWORD PTR [ebp+0x10]
1000276d:	and    DWORD PTR [ebp-0x4],0x0
10002771:	lea    ecx,[esi+0x1c]
10002774:	call   0x100011b0
10002779:	push   DWORD PTR [ebp+0x14]
1000277c:	lea    ecx,[esi+0x38]
1000277f:	mov    BYTE PTR [ebp-0x4],0x1
10002783:	call   0x100011b0
10002788:	push   DWORD PTR [ebp+0x18]
1000278b:	lea    ecx,[esi+0x54]
1000278e:	mov    BYTE PTR [ebp-0x4],0x2
10002792:	call   0x100011b0
10002797:	mov    eax,DWORD PTR [ebp+0x1c]
1000279a:	mov    DWORD PTR [esi+0x70],eax
1000279d:	mov    eax,DWORD PTR [edi]
1000279f:	mov    DWORD PTR [esi+0x80],eax
100027a5:	mov    eax,DWORD PTR [edi+0x4]
100027a8:	mov    DWORD PTR [esi+0x84],eax
100027ae:	mov    eax,DWORD PTR [ebx]
100027b0:	mov    DWORD PTR [esi+0x78],eax
100027b3:	mov    eax,DWORD PTR [ebx+0x4]
100027b6:	mov    DWORD PTR [esi+0x7c],eax
100027b9:	mov    eax,esi
100027bb:	call   0x1005891d
100027c0:	ret    0x18
100027c3:	push   0x4
100027c5:	mov    eax,0x1005eb1a
100027ca:	call   0x10058845
100027cf:	mov    esi,ecx
100027d1:	mov    DWORD PTR [ebp-0x10],esi
100027d4:	and    DWORD PTR [ebp-0x4],0x0
100027d8:	call   0x10003ba8
100027dd:	push   0xffffffff
100027df:	push   0x0
100027e1:	lea    eax,[ebp+0x8]
100027e4:	push   eax
100027e5:	mov    ecx,esi
100027e7:	mov    BYTE PTR [ebp-0x4],0x1
100027eb:	call   0x1000124a
100027f0:	mov    eax,DWORD PTR [ebp+0x24]
100027f3:	push   0x0
100027f5:	push   0x1
100027f7:	lea    ecx,[ebp+0x8]
100027fa:	mov    DWORD PTR [esi+0x1c],eax
100027fd:	call   0x100012f9
10002802:	mov    eax,esi
10002804:	call   0x1005891d
10002809:	ret    0x20
1000280c:	push   0x0
1000280e:	mov    eax,0x10060f15
10002813:	call   0x10058845
10002818:	mov    edi,DWORD PTR [ebp+0x8]
1000281b:	mov    esi,edi
1000281d:	call   0x10003ba8
10002822:	mov    esi,DWORD PTR [ebp+0x10]
10002825:	xor    eax,eax
10002827:	mov    DWORD PTR [ebp-0x4],eax
1000282a:	mov    DWORD PTR [edi+0x1c],eax
1000282d:	mov    DWORD PTR [edi+0x20],eax
10002830:	mov    DWORD PTR [edi+0x24],eax
10002833:	mov    eax,DWORD PTR [ebp+0xc]
10002836:	mov    ecx,edi
10002838:	call   0x10038d50
1000283d:	mov    eax,edi
1000283f:	call   0x1005891d
10002844:	ret    0xc
10002847:	push   0x8
10002849:	mov    eax,0x100611fc
1000284e:	call   0x10058845
10002853:	and    DWORD PTR [ebp-0x14],0x0
10002857:	push   0x4
10002859:	call   0x1004239e
1000285e:	pop    ecx
1000285f:	mov    DWORD PTR [ebp-0x14],eax
10002862:	and    DWORD PTR [ebp-0x4],0x0
10002866:	test   eax,eax
10002868:	je     0x10002877
1000286a:	push   DWORD PTR [ebp+0xc]
1000286d:	push   eax
1000286e:	call   0x100346c0
10002873:	mov    esi,eax
10002875:	jmp    0x10002879
10002877:	xor    esi,esi
10002879:	mov    edi,esi
1000287b:	mov    DWORD PTR [ebp-0x14],edi
1000287e:	push   0x4
10002880:	mov    DWORD PTR [ebp-0x4],0x1
10002887:	call   0x1004239e
1000288c:	test   eax,eax
1000288e:	pop    ecx
1000288f:	je     0x10002897
10002891:	xor    edi,edi
10002893:	mov    DWORD PTR [eax],esi
10002895:	jmp    0x10002899
10002897:	xor    eax,eax
10002899:	mov    esi,DWORD PTR [ebp+0x8]
1000289c:	and    DWORD PTR [ebp-0x10],0x0
100028a0:	mov    DWORD PTR [esi],eax
100028a2:	lea    eax,[ebp-0x10]
100028a5:	call   0x10003d3c
100028aa:	test   edi,edi
100028ac:	je     0x100028bd
100028ae:	push   DWORD PTR [edi]
100028b0:	call   DWORD PTR ds:0x10065070
100028b6:	push   edi
100028b7:	call   0x10041d92
100028bc:	pop    ecx
100028bd:	mov    eax,esi
100028bf:	call   0x1005891d
100028c4:	ret    
100028c5:	push   ebp
100028c6:	mov    ebp,esp
100028c8:	and    esp,0xfffffff8
100028cb:	push   ecx
100028cc:	push   ecx
100028cd:	push   esi
100028ce:	push   edi
100028cf:	call   0x1002f5b0
100028d4:	mov    edi,eax
100028d6:	mov    eax,DWORD PTR [ebp+0x8]
100028d9:	mov    eax,DWORD PTR [eax]
100028db:	push   0x1
100028dd:	push   eax
100028de:	lea    ecx,[esp+0x10]
100028e2:	mov    esi,edx
100028e4:	call   0x10035720
100028e9:	mov    ecx,DWORD PTR [eax]
100028eb:	mov    eax,DWORD PTR [eax+0x4]
100028ee:	add    ecx,0x9534e000
100028f4:	adc    eax,0x64
100028f7:	cmp    esi,eax
100028f9:	ja     0x10002906
100028fb:	jb     0x10002901
100028fd:	cmp    edi,ecx
100028ff:	jae    0x10002906
10002901:	xor    eax,eax
10002903:	inc    eax
10002904:	jmp    0x10002908
10002906:	xor    eax,eax
10002908:	pop    edi
10002909:	pop    esi
1000290a:	mov    esp,ebp
1000290c:	pop    ebp
1000290d:	ret    0x4
10002910:	xor    eax,eax
10002912:	push   eax
10002913:	push   eax
10002914:	push   eax
10002915:	push   0x10002923
1000291a:	push   eax
1000291b:	push   eax
1000291c:	call   DWORD PTR ds:0x10065098
10002922:	ret    
10002923:	push   ebp
10002924:	sub    esp,0x58
10002927:	lea    ebp,[esp-0x4]
1000292b:	mov    eax,ds:0x1007d030
10002930:	xor    eax,ebp
10002932:	mov    DWORD PTR [ebp+0x58],eax
10002935:	push   0x74
10002937:	mov    eax,0x1006357b
1000293c:	call   0x10058878
10002941:	lea    eax,[ebp+0x1b]
10002944:	push   eax
10002945:	call   0x100375f0
1000294a:	push   0x1
1000294c:	lea    eax,[ebp+0x1c]
1000294f:	xor    ebx,ebx
10002951:	mov    DWORD PTR [ebp-0x4],ebx
10002954:	push   eax
10002955:	mov    BYTE PTR [ebp-0x4],0x1
10002959:	call   0x100346c0
1000295e:	mov    BYTE PTR [ebp-0x4],0x2
10002962:	call   0x1002f5b0
10002967:	mov    edi,eax
10002969:	push   0x4
1000296b:	lea    eax,[ebp+0x1c]
1000296e:	push   eax
1000296f:	lea    ecx,[ebp+0x10]
10002972:	mov    esi,edx
10002974:	call   0x10035720
10002979:	mov    ecx,DWORD PTR [eax]
1000297b:	mov    eax,DWORD PTR [eax+0x4]
1000297e:	add    ecx,0x65a0bc00
10002984:	adc    eax,0x1
10002987:	cmp    esi,eax
10002989:	ja     0x100029c0
1000298b:	jb     0x10002991
1000298d:	cmp    edi,ecx
1000298f:	jae    0x100029c0
10002991:	push   DWORD PTR [ebp+0x1c]
10002994:	call   DWORD PTR ds:0x10065070
1000299a:	call   0x10037610
1000299f:	xor    eax,eax
100029a1:	mov    ecx,DWORD PTR [ebp-0xc]
100029a4:	mov    DWORD PTR fs:0x0,ecx
100029ab:	pop    ecx
100029ac:	pop    edi
100029ad:	pop    esi
100029ae:	pop    ebx
100029af:	mov    ecx,DWORD PTR [ebp+0x58]
100029b2:	xor    ecx,ebp
100029b4:	call   0x10041d97
100029b9:	add    ebp,0x5c
100029bc:	leave  
100029bd:	ret    0x4
100029c0:	call   0x1002f5b0
100029c5:	mov    DWORD PTR [ebp+0x10],eax
100029c8:	lea    eax,[ebp+0x10]
100029cb:	push   eax
100029cc:	lea    eax,[ebp+0x1c]
100029cf:	push   eax
100029d0:	push   0x4
100029d2:	pop    ecx
100029d3:	mov    DWORD PTR [ebp+0x14],edx
100029d6:	call   0x10035870
100029db:	push   DWORD PTR [ebp+0x1c]
100029de:	call   DWORD PTR ds:0x10065070
100029e4:	push   ebx
100029e5:	lea    ecx,[ebp+0x20]
100029e8:	mov    DWORD PTR [ebp+0x38],0xf
100029ef:	call   0x10001425
100029f4:	mov    BYTE PTR [ebp-0x4],0x3
100029f8:	cmp    BYTE PTR ds:0x1007fc1c,bl
100029fe:	jne    0x10002a29
10002a00:	lea    eax,[ebp+0x1c]
10002a03:	push   eax
10002a04:	call   0x10037b40
10002a09:	mov    eax,DWORD PTR [eax]
10002a0b:	cmp    DWORD PTR [eax-0xc],ebx
10002a0e:	pop    ecx
10002a0f:	setne  al
10002a12:	mov    ds:0x1007fc1d,al
10002a17:	mov    eax,DWORD PTR [ebp+0x1c]
10002a1a:	add    eax,0xfffffff0
10002a1d:	call   0x1000207d
10002a22:	mov    BYTE PTR ds:0x1007fc1c,0x1
10002a29:	cmp    BYTE PTR ds:0x1007fc1d,bl
10002a2f:	mov    esi,0x1006baf8
10002a34:	jne    0x10002a3b
10002a36:	mov    esi,0x1006bb1c
10002a3b:	push   0xfd5c55a
10002a40:	push   0x1006bb20
10002a45:	call   0x10003d63
10002a4a:	pop    ecx
10002a4b:	pop    ecx
10002a4c:	push   0x15db9cf4
10002a51:	push   eax
10002a52:	call   0x10003d63
10002a57:	pop    ecx
10002a58:	pop    ecx
10002a59:	push   0x1cd21e22
10002a5e:	push   eax
10002a5f:	call   0x10003d63
10002a64:	pop    ecx
10002a65:	pop    ecx
10002a66:	push   eax
10002a67:	push   0x3
10002a69:	push   0x1006bb54
10002a6e:	call   0x10003d75
10002a73:	add    esp,0xc
10002a76:	push   eax
10002a77:	lea    ecx,[ebp-0x48]
10002a7a:	call   0x100011d6
10002a7f:	push   esi
10002a80:	push   eax
10002a81:	lea    eax,[ebp-0x2c]
10002a84:	push   eax
10002a85:	mov    BYTE PTR [ebp-0x4],0x4
10002a89:	call   0x10005dcb
10002a8e:	add    esp,0xc
10002a91:	push   0xffffffff
10002a93:	push   ebx
10002a94:	push   eax
10002a95:	lea    ecx,[ebp+0x20]
10002a98:	mov    BYTE PTR [ebp-0x4],0x5
10002a9c:	call   0x1000124a
10002aa1:	push   ebx
10002aa2:	push   0x1
10002aa4:	lea    ecx,[ebp-0x2c]
10002aa7:	call   0x100012f9
10002aac:	push   ebx
10002aad:	push   0x1
10002aaf:	lea    ecx,[ebp-0x48]
10002ab2:	mov    BYTE PTR [ebp-0x4],0x3
10002ab6:	call   0x100012f9
10002abb:	lea    ecx,[ebp+0x3c]
10002abe:	call   0x10018131
10002ac3:	mov    BYTE PTR [ebp-0x4],0x6
10002ac7:	cmp    DWORD PTR [ebp+0x54],0x10
10002acb:	mov    eax,DWORD PTR [ebp+0x40]
10002ace:	jae    0x10002ad3
10002ad0:	lea    eax,[ebp+0x40]
10002ad3:	push   eax
10002ad4:	call   0x1000207c
10002ad9:	pop    ecx
10002ada:	push   DWORD PTR ds:0x1007fd6c
10002ae0:	lea    ecx,[ebp-0x2c]
10002ae3:	mov    DWORD PTR [ebp+0x1c],ebx
10002ae6:	call   0x100011d6
10002aeb:	push   0xffffffff
10002aed:	lea    eax,[ebp+0x1c]
10002af0:	push   eax
10002af1:	lea    eax,[ebp+0x20]
10002af4:	push   eax
10002af5:	lea    eax,[ebp+0x3c]
10002af8:	push   eax
10002af9:	lea    eax,[ebp+0x0]
10002afc:	push   eax
10002afd:	lea    edx,[ebp-0x2c]
10002b00:	mov    BYTE PTR [ebp-0x4],0x7
10002b04:	call   0x10030ab0
10002b09:	mov    ecx,DWORD PTR [eax]
10002b0b:	mov    edi,ecx
10002b0d:	add    esp,0x14
10002b10:	mov    DWORD PTR [eax],ebx
10002b12:	mov    DWORD PTR [ebp+0x14],edi
10002b15:	push   DWORD PTR [ebp+0x0]
10002b18:	call   0x10041d92
10002b1d:	pop    ecx
10002b1e:	xor    esi,esi
10002b20:	push   ebx
10002b21:	inc    esi
10002b22:	push   esi
10002b23:	lea    ecx,[ebp-0x2c]
10002b26:	mov    BYTE PTR [ebp-0x4],0x9
10002b2a:	call   0x100012f9
10002b2f:	cmp    edi,ebx
10002b31:	jne    0x10002b50
10002b33:	call   0x100180b0
10002b38:	push   ebx
10002b39:	call   0x10041d92
10002b3e:	pop    ecx
10002b3f:	push   ebx
10002b40:	push   esi
10002b41:	lea    ecx,[ebp+0x3c]
10002b44:	call   0x100012f9
10002b49:	push   ebx
10002b4a:	push   esi
10002b4b:	jmp    0x10002c1e
10002b50:	mov    eax,DWORD PTR [ebp+0x1c]
10002b53:	mov    DWORD PTR [ebp+0x8],eax
10002b56:	lea    eax,[ebp+0x4]
10002b59:	push   eax
10002b5a:	mov    DWORD PTR [ebp+0x4],ebx
10002b5d:	mov    DWORD PTR [ebp+0xc],edi
10002b60:	call   0x10037480
10002b65:	sub    eax,ebx
10002b67:	je     0x10002bdd
10002b69:	dec    eax
10002b6a:	je     0x10002bba
10002b6c:	dec    eax
10002b6d:	je     0x10002b9f
10002b6f:	dec    eax
10002b70:	je     0x10002b84
10002b72:	call   0x1000207c
10002b77:	push   0x5
10002b79:	call   0x10037620
10002b7e:	pop    ecx
10002b7f:	jmp    0x10002c09
10002b84:	lea    eax,[ebp+0x4]
10002b87:	push   eax
10002b88:	lea    esi,[ebp-0x48]
10002b8b:	call   0x10037140
10002b90:	push   eax
10002b91:	mov    BYTE PTR [ebp-0x4],0xd
10002b95:	call   0x100038cb
10002b9a:	pop    ecx
10002b9b:	mov    ecx,esi
10002b9d:	jmp    0x10002bd3
10002b9f:	lea    eax,[ebp+0x4]
10002ba2:	push   eax
10002ba3:	lea    esi,[ebp-0x64]
10002ba6:	call   0x10037140
10002bab:	push   eax
10002bac:	mov    BYTE PTR [ebp-0x4],0xc
10002bb0:	call   0x100036ac
10002bb5:	pop    ecx
10002bb6:	mov    ecx,esi
10002bb8:	jmp    0x10002bd3
10002bba:	lea    eax,[ebp+0x4]
10002bbd:	push   eax
10002bbe:	lea    esi,[ebp-0x80]
10002bc1:	call   0x10037140
10002bc6:	push   eax
10002bc7:	mov    BYTE PTR [ebp-0x4],0xb
10002bcb:	call   0x10003515
10002bd0:	pop    ecx
10002bd1:	mov    ecx,esi
10002bd3:	push   ebx
10002bd4:	push   0x1
10002bd6:	call   0x100012f9
10002bdb:	jmp    0x10002c09
10002bdd:	call   0x1000207c
10002be2:	lea    eax,[ebp+0x1c]
10002be5:	push   esi
10002be6:	push   eax
10002be7:	call   0x10002847
10002bec:	pop    ecx
10002bed:	pop    ecx
10002bee:	mov    BYTE PTR [ebp-0x4],0xa
10002bf2:	mov    esi,DWORD PTR [eax]
10002bf4:	lea    eax,[ebp+0x4]
10002bf7:	call   0x10002c4e
10002bfc:	lea    eax,[ebp+0x1c]
10002bff:	call   0x10003d3c
10002c04:	call   0x1000207c
10002c09:	push   edi
10002c0a:	call   0x10041d92
10002c0f:	pop    ecx
10002c10:	push   ebx
10002c11:	push   0x1
10002c13:	lea    ecx,[ebp+0x3c]
10002c16:	call   0x100012f9
10002c1b:	push   ebx
10002c1c:	push   0x1
10002c1e:	lea    ecx,[ebp+0x20]
10002c21:	call   0x100012f9
10002c26:	jmp    0x1000299a
10002c2b:	call   0x100180b0
10002c30:	mov    eax,0x10002c36
10002c35:	ret    
10002c36:	jmp    0x1000299a
10002c3b:	push   0x4
10002c3d:	call   0x10037620
10002c42:	pop    ecx
10002c43:	call   0x100180b0
10002c48:	mov    eax,0x1000299a
10002c4d:	ret    
10002c4e:	push   ebp
10002c4f:	mov    ebp,esp
10002c51:	and    esp,0xfffffff8
10002c54:	push   ecx
10002c55:	push   ecx
10002c56:	mov    ecx,DWORD PTR [esi]
10002c58:	push   ebx
10002c59:	push   edi
10002c5a:	mov    ebx,eax
10002c5c:	call   0x10034a10
10002c61:	and    DWORD PTR [esp+0x8],0x0
10002c66:	xor    eax,eax
10002c68:	lea    edi,[esp+0xc]
10002c6c:	stos   DWORD PTR es:[edi],eax
10002c6d:	lea    eax,[esp+0x8]
10002c71:	push   eax
10002c72:	push   DWORD PTR [esi]
10002c74:	xor    ecx,ecx
10002c76:	inc    ecx
10002c77:	call   0x10035870
10002c7c:	push   esi
10002c7d:	mov    ecx,ebx
10002c7f:	call   0x10002cf6
10002c84:	push   esi
10002c85:	mov    ecx,ebx
10002c87:	call   0x100031c7
10002c8c:	push   esi
10002c8d:	call   0x10002efc
10002c92:	call   0x10002ffb
10002c97:	push   esi
10002c98:	call   0x10003135
10002c9d:	push   ebx
10002c9e:	call   0x10037480
10002ca3:	push   ebx
10002ca4:	mov    edi,eax
10002ca6:	call   0x10037480
10002cab:	push   edi
10002cac:	push   DWORD PTR [esi]
10002cae:	mov    ecx,eax
10002cb0:	call   0x10035980
10002cb5:	push   ebx
10002cb6:	call   0x10037480
10002cbb:	push   ebx
10002cbc:	mov    edi,eax
10002cbe:	call   0x10037480
10002cc3:	push   edi
10002cc4:	push   DWORD PTR [esi]
10002cc6:	mov    ecx,eax
10002cc8:	call   0x10035bb0
10002ccd:	call   0x1002f5b0
10002cd2:	mov    DWORD PTR [esp+0x8],eax
10002cd6:	lea    eax,[esp+0x8]
10002cda:	push   eax
10002cdb:	push   DWORD PTR [esi]
10002cdd:	xor    ecx,ecx
10002cdf:	inc    ecx
10002ce0:	mov    DWORD PTR [esp+0x14],edx
10002ce4:	call   0x10035870
10002ce9:	mov    ecx,ebx
10002ceb:	call   0x10003487
10002cf0:	pop    edi
10002cf1:	pop    ebx
10002cf2:	mov    esp,ebp
10002cf4:	pop    ebp
10002cf5:	ret    
10002cf6:	push   0x140
10002cfb:	mov    eax,0x10061e19
10002d00:	call   0x100588ae
10002d05:	mov    eax,DWORD PTR [ebp+0x8]
10002d08:	mov    edi,ecx
10002d0a:	push   edi
10002d0b:	mov    DWORD PTR [ebp-0x9c],eax
10002d11:	mov    DWORD PTR [ebp-0x98],edi
10002d17:	call   0x10037480
10002d1c:	xor    ebx,ebx
10002d1e:	cmp    eax,ebx
10002d20:	je     0x10002ec4
10002d26:	mov    DWORD PTR [ebp-0x90],eax
10002d2c:	jmp    0x10002d36
10002d2e:	mov    edi,DWORD PTR [ebp-0x98]
10002d34:	xor    ebx,ebx
10002d36:	push   edi
10002d37:	lea    esi,[ebp-0xc0]
10002d3d:	call   0x10037140
10002d42:	push   eax
10002d43:	lea    esi,[ebp-0x30]
10002d46:	mov    DWORD PTR [ebp-0x4],ebx
10002d49:	call   0x1002f5e0
10002d4e:	pop    ecx
10002d4f:	push   ebx
10002d50:	push   0x1
10002d52:	lea    ecx,[ebp-0xc0]
10002d58:	mov    BYTE PTR [ebp-0x4],0x2
10002d5c:	call   0x100012f9
10002d61:	push   edi
10002d62:	lea    esi,[ebp-0x4c]
10002d65:	call   0x10037140
10002d6a:	push   edi
10002d6b:	lea    esi,[ebp-0x68]
10002d6e:	mov    BYTE PTR [ebp-0x4],0x3
10002d72:	call   0x10037140
10002d77:	push   edi
10002d78:	lea    esi,[ebp-0x84]
10002d7e:	mov    BYTE PTR [ebp-0x4],0x4
10002d82:	call   0x10037140
10002d87:	push   edi
10002d88:	mov    BYTE PTR [ebp-0x4],0x5
10002d8c:	call   0x10037480
10002d91:	push   edi
10002d92:	mov    DWORD PTR [ebp-0x94],eax
10002d98:	call   0x10037480
10002d9d:	push   ebx
10002d9e:	cdq    
10002d9f:	mov    esi,0x2710
10002da4:	push   esi
10002da5:	push   edx
10002da6:	push   eax
10002da7:	call   0x1004b7c0
10002dac:	push   edi
10002dad:	mov    DWORD PTR [ebp-0xa4],eax
10002db3:	mov    DWORD PTR [ebp-0xa0],edx
10002db9:	call   0x10037480
10002dbe:	push   ebx
10002dbf:	cdq    
10002dc0:	push   esi
10002dc1:	push   edx
10002dc2:	push   eax
10002dc3:	call   0x1004b7c0
10002dc8:	mov    DWORD PTR [ebp-0x8c],eax
10002dce:	mov    DWORD PTR [ebp-0x88],edx
10002dd4:	call   0x1002f5b0
10002dd9:	add    DWORD PTR [ebp-0x8c],eax
10002ddf:	mov    eax,DWORD PTR [ebp-0x94]
10002de5:	lea    ecx,[ebp-0x30]
10002de8:	adc    DWORD PTR [ebp-0x88],edx
10002dee:	shr    eax,0x2
10002df1:	test   al,0x1
10002df3:	lea    eax,[ebp-0xc0]
10002df9:	push   eax
10002dfa:	je     0x10002e08
10002dfc:	call   0x100306c0
10002e01:	pop    ecx
10002e02:	mov    BYTE PTR [ebp-0x4],0x6
10002e06:	jmp    0x10002e12
10002e08:	call   0x1002f720
10002e0d:	pop    ecx
10002e0e:	mov    BYTE PTR [ebp-0x4],0x7
10002e12:	push   0xffffffff
10002e14:	push   ebx
10002e15:	push   eax
10002e16:	lea    ecx,[ebp-0x30]
10002e19:	call   0x1000124a
10002e1e:	push   ebx
10002e1f:	push   0x1
10002e21:	lea    ecx,[ebp-0xc0]
10002e27:	mov    BYTE PTR [ebp-0x4],0x5
10002e2b:	call   0x100012f9
10002e30:	push   DWORD PTR [ebp-0x94]
10002e36:	lea    eax,[ebp-0x84]
10002e3c:	push   eax
10002e3d:	lea    eax,[ebp-0x68]
10002e40:	push   eax
10002e41:	lea    eax,[ebp-0x4c]
10002e44:	push   eax
10002e45:	lea    eax,[ebp-0x30]
10002e48:	push   eax
10002e49:	lea    eax,[ebp-0x14c]
10002e4f:	push   eax
10002e50:	lea    edi,[ebp-0x8c]
10002e56:	lea    ebx,[ebp-0xa4]
10002e5c:	call   0x10002751
10002e61:	mov    ecx,DWORD PTR [ebp-0x9c]
10002e67:	mov    BYTE PTR [ebp-0x4],0x8
10002e6b:	mov    edx,DWORD PTR [ecx]
10002e6d:	lea    ecx,[ebp-0x30]
10002e70:	push   ecx
10002e71:	push   edx
10002e72:	mov    ecx,eax
10002e74:	call   0x10034b00
10002e79:	lea    esi,[ebp-0x14c]
10002e7f:	call   0x10002ecc
10002e84:	xor    edi,edi
10002e86:	xor    esi,esi
10002e88:	push   edi
10002e89:	inc    esi
10002e8a:	push   esi
10002e8b:	lea    ecx,[ebp-0x84]
10002e91:	call   0x100012f9
10002e96:	push   edi
10002e97:	push   esi
10002e98:	lea    ecx,[ebp-0x68]
10002e9b:	call   0x100012f9
10002ea0:	push   edi
10002ea1:	push   esi
10002ea2:	lea    ecx,[ebp-0x4c]
10002ea5:	call   0x100012f9
10002eaa:	or     DWORD PTR [ebp-0x4],0xffffffff
10002eae:	push   edi
10002eaf:	push   esi
10002eb0:	lea    ecx,[ebp-0x30]
10002eb3:	call   0x100012f9
10002eb8:	dec    DWORD PTR [ebp-0x90]
10002ebe:	jne    0x10002d2e
10002ec4:	call   0x10058931
10002ec9:	ret    0x4
10002ecc:	push   0x0
10002ece:	push   0x1
10002ed0:	lea    ecx,[esi+0x54]
10002ed3:	call   0x100012f9
10002ed8:	push   0x0
10002eda:	push   0x1
10002edc:	lea    ecx,[esi+0x38]
10002edf:	call   0x100012f9
10002ee4:	push   0x0
10002ee6:	push   0x1
10002ee8:	lea    ecx,[esi+0x1c]
10002eeb:	call   0x100012f9
10002ef0:	push   0x0
10002ef2:	push   0x1
10002ef4:	mov    ecx,esi
10002ef6:	call   0x100012f9
10002efb:	ret    
10002efc:	push   0x50
10002efe:	mov    eax,0x10061da5
10002f03:	call   0x100588ae
10002f08:	mov    eax,DWORD PTR [ebp+0x8]
10002f0b:	mov    DWORD PTR [ebp-0x34],eax
10002f0e:	mov    eax,DWORD PTR [ebx]
10002f10:	push   0x4
10002f12:	pop    edi
10002f13:	mov    DWORD PTR [ebp-0x3c],ebx
10002f16:	mov    DWORD PTR [ebp-0x38],eax
10002f19:	and    DWORD PTR [ebp-0x4],0x0
10002f1d:	push   ebx
10002f1e:	call   0x10037480
10002f23:	test   eax,eax
10002f25:	je     0x10002fb7
10002f2b:	mov    DWORD PTR [ebp-0x30],eax
10002f2e:	push   ebx
10002f2f:	lea    esi,[ebp-0x2c]
10002f32:	call   0x10037140
10002f37:	mov    BYTE PTR [ebp-0x4],0x1
10002f3b:	mov    eax,DWORD PTR [ebp-0x18]
10002f3e:	push   ebx
10002f3f:	lea    esi,[ebp-0x58]
10002f42:	lea    edi,[edi+eax*1+0x1]
10002f46:	call   0x10037140
10002f4b:	push   0xffffffff
10002f4d:	push   0x0
10002f4f:	push   eax
10002f50:	lea    ecx,[ebp-0x2c]
10002f53:	mov    BYTE PTR [ebp-0x4],0x2
10002f57:	call   0x1000124a
10002f5c:	push   0x0
10002f5e:	push   0x1
10002f60:	mov    ecx,esi
10002f62:	mov    BYTE PTR [ebp-0x4],0x1
10002f66:	call   0x100012f9
10002f6b:	mov    eax,DWORD PTR [ebp-0x18]
10002f6e:	push   ebx
10002f6f:	lea    esi,[ebp-0x58]
10002f72:	lea    edi,[edi+eax*1+0x1]
10002f76:	call   0x10037140
10002f7b:	push   0xffffffff
10002f7d:	push   0x0
10002f7f:	push   eax
10002f80:	lea    ecx,[ebp-0x2c]
10002f83:	mov    BYTE PTR [ebp-0x4],0x3
10002f87:	call   0x1000124a
10002f8c:	push   0x0
10002f8e:	push   0x1
10002f90:	mov    ecx,esi
10002f92:	call   0x100012f9
10002f97:	mov    eax,DWORD PTR [ebp-0x18]
10002f9a:	push   0x0
10002f9c:	push   0x1
10002f9e:	lea    ecx,[ebp-0x2c]
10002fa1:	lea    edi,[edi+eax*1+0x1]
10002fa5:	mov    BYTE PTR [ebp-0x4],0x0
10002fa9:	call   0x100012f9
10002fae:	dec    DWORD PTR [ebp-0x30]
10002fb1:	jne    0x10002f2e
10002fb7:	or     DWORD PTR [ebp-0x4],0xffffffff
10002fbb:	mov    eax,DWORD PTR [ebp-0x38]
10002fbe:	push   edi
10002fbf:	mov    DWORD PTR [ebx],eax
10002fc1:	call   0x10042609
10002fc6:	pop    ecx
10002fc7:	mov    DWORD PTR [ebp-0x30],eax
10002fca:	push   eax
10002fcb:	mov    esi,ebx
10002fcd:	mov    DWORD PTR [ebp-0x4],0x4
10002fd4:	call   0x10037590
10002fd9:	push   DWORD PTR [ebp-0x30]
10002fdc:	mov    eax,DWORD PTR [ebp-0x34]
10002fdf:	push   0x1
10002fe1:	push   DWORD PTR [eax]
10002fe3:	mov    ecx,edi
10002fe5:	call   0x10036640
10002fea:	push   DWORD PTR [ebp-0x30]
10002fed:	call   0x10041d92
10002ff2:	pop    ecx
10002ff3:	call   0x10058931
10002ff8:	ret    0x4
10002ffb:	push   0x7c
10002ffd:	mov    eax,0x10062a44
10003002:	call   0x100588ae
10003007:	push   ebx
10003008:	call   0x10037480
1000300d:	xor    edi,edi
1000300f:	mov    esi,eax
10003011:	mov    DWORD PTR [ebp-0x54],esi
10003014:	mov    DWORD PTR [ebp-0x60],edi
10003017:	mov    DWORD PTR [ebp-0x5c],edi
1000301a:	mov    DWORD PTR [ebp-0x58],edi
1000301d:	lea    ecx,[ebp-0x30]
10003020:	mov    DWORD PTR [ebp-0x4],edi
10003023:	call   0x10018131
10003028:	cmp    esi,edi
1000302a:	mov    BYTE PTR [ebp-0x4],0x1
1000302e:	jle    0x100030b5
10003034:	mov    DWORD PTR [ebp-0x50],esi
10003037:	push   ebx
10003038:	lea    esi,[ebp-0x4c]
1000303b:	call   0x10037140
10003040:	push   ebx
10003041:	mov    BYTE PTR [ebp-0x4],0x2
10003045:	call   0x10037480
1000304a:	push   eax
1000304b:	sub    esp,0x1c
1000304e:	mov    eax,esi
10003050:	mov    ecx,esp
10003052:	mov    DWORD PTR [ebp-0x68],esp
10003055:	push   eax
10003056:	call   0x100011b0
1000305b:	lea    ecx,[ebp-0x88]
10003061:	call   0x100027c3
10003066:	push   eax
10003067:	lea    esi,[ebp-0x64]
1000306a:	mov    BYTE PTR [ebp-0x4],0x3
1000306e:	call   0x10003cdd
10003073:	push   edi
10003074:	push   0x1
10003076:	lea    ecx,[ebp-0x88]
1000307c:	mov    BYTE PTR [ebp-0x4],0x2
10003080:	call   0x100012f9
10003085:	lea    ecx,[ebp-0x30]
10003088:	lea    eax,[ebp-0x4c]
1000308b:	call   0x10005e11
10003090:	test   al,al
10003092:	je     0x100030a1
10003094:	push   0x1006bb18
10003099:	lea    ecx,[ebp-0x30]
1000309c:	call   0x100012dc
100030a1:	push   edi
100030a2:	push   0x1
100030a4:	lea    ecx,[ebp-0x4c]
100030a7:	mov    BYTE PTR [ebp-0x4],0x1
100030ab:	call   0x100012f9
100030b0:	dec    DWORD PTR [ebp-0x50]
100030b3:	jne    0x10003037
100030b5:	cmp    DWORD PTR [ebp-0x54],edi
100030b8:	je     0x100030fb
100030ba:	push   0x3e8
100030bf:	push   DWORD PTR ds:0x1007fea8
100030c5:	call   DWORD PTR ds:0x10065084
100030cb:	test   eax,eax
100030cd:	jne    0x100030fb
100030cf:	call   0x10018384
100030d4:	lea    eax,[ebp-0x64]
100030d7:	mov    ecx,0x1007fe98
100030dc:	call   0x10018873
100030e1:	movzx  eax,BYTE PTR ds:0x1007e69c
100030e8:	push   eax
100030e9:	call   0x10018680
100030ee:	pop    ecx
100030ef:	push   DWORD PTR ds:0x1007fea8
100030f5:	call   DWORD PTR ds:0x10065094
100030fb:	push   0x1006bb18
10003100:	lea    esi,[ebp-0x30]
10003103:	call   0x10005e33
10003108:	test   al,al
1000310a:	pop    ecx
1000310b:	jne    0x10003112
1000310d:	call   0x100180b0
10003112:	push   edi
10003113:	push   0x1
10003115:	lea    ecx,[ebp-0x30]
10003118:	call   0x100012f9
1000311d:	lea    esi,[ebp-0x64]
10003120:	call   0x1000424f
10003125:	call   0x10058931
1000312a:	ret    
1000312b:	push   0x0
1000312d:	push   0x1
1000312f:	call   0x100012f9
10003134:	ret    
10003135:	push   0x30
10003137:	mov    eax,0x10061d58
1000313c:	call   0x100588ae
10003141:	mov    eax,DWORD PTR [ebp+0x8]
10003144:	mov    DWORD PTR [ebp-0x34],eax
10003147:	mov    eax,DWORD PTR [ebx]
10003149:	push   0x4
1000314b:	pop    edi
1000314c:	mov    DWORD PTR [ebp-0x3c],ebx
1000314f:	mov    DWORD PTR [ebp-0x38],eax
10003152:	and    DWORD PTR [ebp-0x4],0x0
10003156:	push   ebx
10003157:	call   0x10037480
1000315c:	test   eax,eax
1000315e:	je     0x10003183
10003160:	mov    DWORD PTR [ebp-0x30],eax
10003163:	push   ebx
10003164:	lea    esi,[ebp-0x2c]
10003167:	call   0x10037140
1000316c:	mov    eax,DWORD PTR [ebp-0x18]
1000316f:	push   0x0
10003171:	push   0x1
10003173:	mov    ecx,esi
10003175:	lea    edi,[edi+eax*1+0x1]
10003179:	call   0x100012f9
1000317e:	dec    DWORD PTR [ebp-0x30]
10003181:	jne    0x10003163
10003183:	or     DWORD PTR [ebp-0x4],0xffffffff
10003187:	mov    eax,DWORD PTR [ebp-0x38]
1000318a:	push   edi
1000318b:	mov    DWORD PTR [ebx],eax
1000318d:	call   0x10042609
10003192:	pop    ecx
10003193:	mov    DWORD PTR [ebp-0x30],eax
10003196:	push   eax
10003197:	mov    esi,ebx
10003199:	mov    DWORD PTR [ebp-0x4],0x1
100031a0:	call   0x10037590
100031a5:	push   DWORD PTR [ebp-0x30]
100031a8:	mov    eax,DWORD PTR [ebp-0x34]
100031ab:	push   0x3
100031ad:	push   DWORD PTR [eax]
100031af:	mov    ecx,edi
100031b1:	call   0x10036640
100031b6:	push   DWORD PTR [ebp-0x30]
100031b9:	call   0x10041d92
100031be:	pop    ecx
100031bf:	call   0x10058931
100031c4:	ret    0x4
100031c7:	push   0x58
100031c9:	mov    eax,0x10061d23
100031ce:	call   0x100588ae
100031d3:	mov    eax,DWORD PTR [ebp+0x8]
100031d6:	mov    edi,ecx
100031d8:	push   edi
100031d9:	lea    esi,[ebp-0x2c]
100031dc:	mov    DWORD PTR [ebp-0x34],eax
100031df:	call   0x10037140
100031e4:	xor    ebx,ebx
100031e6:	push   edi
100031e7:	mov    DWORD PTR [ebp-0x4],ebx
100031ea:	call   0x10037480
100031ef:	mov    esi,eax
100031f1:	push   0x34
100031f3:	mov    DWORD PTR [ebp-0x38],esi
100031f6:	call   0x1004239e
100031fb:	pop    ecx
100031fc:	mov    DWORD PTR [ebp-0x30],eax
100031ff:	cmp    eax,ebx
10003201:	mov    BYTE PTR [ebp-0x4],0x1
10003205:	je     0x10003223
10003207:	lea    ecx,[ebp-0x44]
1000320a:	push   ecx
1000320b:	lea    ecx,[ebp-0x2c]
1000320e:	push   ecx
1000320f:	push   eax
10003210:	mov    DWORD PTR [ebp-0x44],ebx
10003213:	mov    DWORD PTR [ebp-0x40],ebx
10003216:	mov    DWORD PTR [ebp-0x3c],esi
10003219:	call   0x1000280c
1000321e:	mov    DWORD PTR [ebp-0x30],eax
10003221:	jmp    0x10003228
10003223:	mov    DWORD PTR [ebp-0x30],ebx
10003226:	mov    eax,ebx
10003228:	mov    DWORD PTR [ebp-0x48],eax
1000322b:	mov    BYTE PTR [ebp-0x4],0x2
1000322f:	mov    eax,DWORD PTR [eax+0x30]
10003232:	mov    edi,0x1006bb18
10003237:	push   edi
10003238:	mov    esi,eax
1000323a:	call   0x10005e33
1000323f:	test   al,al
10003241:	pop    ecx
10003242:	je     0x10003257
10003244:	mov    eax,DWORD PTR [ebp-0x34]
10003247:	push   DWORD PTR [ebp-0x38]
1000324a:	mov    eax,DWORD PTR [eax]
1000324c:	push   eax
1000324d:	lea    ecx,[ebp-0x2c]
10003250:	call   0x10035ef0
10003255:	jmp    0x1000327e
10003257:	push   edi
10003258:	lea    ecx,[ebp-0x64]
1000325b:	call   0x100011d6
10003260:	mov    eax,DWORD PTR [ebp-0x34]
10003263:	mov    BYTE PTR [ebp-0x4],0x3
10003267:	mov    eax,DWORD PTR [eax]
10003269:	push   ebx
1000326a:	push   eax
1000326b:	lea    ecx,[ebp-0x64]
1000326e:	call   0x10035ef0
10003273:	push   ebx
10003274:	push   0x1
10003276:	lea    ecx,[ebp-0x64]
10003279:	call   0x100012f9
1000327e:	mov    BYTE PTR [ebp-0x4],bl
10003281:	push   DWORD PTR [ebp-0x30]
10003284:	call   0x10038e30
10003289:	push   DWORD PTR [ebp-0x30]
1000328c:	call   0x10041d92
10003291:	pop    ecx
10003292:	push   ebx
10003293:	push   0x1
10003295:	lea    ecx,[ebp-0x2c]
10003298:	call   0x100012f9
1000329d:	call   0x10058931
100032a2:	ret    0x4
100032a5:	push   0x18
100032a7:	mov    eax,0x1005f5f7
100032ac:	call   0x10058845
100032b1:	mov    eax,ds:0x1007fa54
100032b6:	mov    ebx,0x1007fa54
100032bb:	mov    ecx,ebx
100032bd:	call   DWORD PTR [eax+0xc]
100032c0:	add    eax,0x10
100032c3:	mov    DWORD PTR [ebp-0x10],eax
100032c6:	and    DWORD PTR [ebp-0x4],0x0
100032ca:	mov    edi,0x104
100032cf:	push   edi
100032d0:	lea    esi,[ebp-0x10]
100032d3:	call   0x100021bb
100032d8:	push   eax
100032d9:	push   edi
100032da:	call   DWORD PTR ds:0x100650c0
100032e0:	test   eax,eax
100032e2:	je     0x10003411
100032e8:	cmp    eax,edi
100032ea:	ja     0x10003411
100032f0:	cmp    DWORD PTR [ebp-0x10],0x0
100032f4:	jne    0x100032fa
100032f6:	xor    eax,eax
100032f8:	jmp    0x10003303
100032fa:	push   DWORD PTR [ebp-0x10]
100032fd:	call   0x100425f3
10003302:	pop    ecx
10003303:	lea    edx,[ebp-0x10]
10003306:	call   0x10002246
1000330b:	mov    eax,ds:0x1007fa54
10003310:	mov    ecx,ebx
10003312:	call   DWORD PTR [eax+0xc]
10003315:	add    eax,0x10
10003318:	mov    DWORD PTR [ebp-0x14],eax
1000331b:	push   edi
1000331c:	lea    esi,[ebp-0x14]
1000331f:	mov    BYTE PTR [ebp-0x4],0x1
10003323:	call   0x100021bb
10003328:	mov    esi,DWORD PTR [ebp-0x10]
1000332b:	push   eax
1000332c:	xor    ebx,ebx
1000332e:	push   ebx
1000332f:	push   0x1006bb58
10003334:	push   esi
10003335:	call   DWORD PTR ds:0x1006509c
1000333b:	test   eax,eax
1000333d:	jne    0x10003352
1000333f:	mov    eax,DWORD PTR [ebp-0x14]
10003342:	add    eax,0xfffffff0
10003345:	call   0x1000207d
1000334a:	lea    eax,[esi-0x10]
1000334d:	jmp    0x10003417
10003352:	mov    esi,DWORD PTR [ebp-0x14]
10003355:	cmp    esi,ebx
10003357:	jne    0x1000335d
10003359:	xor    eax,eax
1000335b:	jmp    0x10003364
1000335d:	push   esi
1000335e:	call   0x100425f3
10003363:	pop    ecx
10003364:	lea    edx,[ebp-0x14]
10003367:	call   0x10002246
1000336c:	push   esi
1000336d:	call   DWORD PTR ds:0x100650c8
10003373:	push   ebx
10003374:	push   esi
10003375:	call   DWORD PTR ds:0x100650b0
1000337b:	push   0x1006bb5c
10003380:	lea    edi,[ebp-0x1c]
10003383:	call   0x10002439
10003388:	mov    eax,edi
1000338a:	push   eax
1000338b:	lea    eax,[ebp-0x20]
1000338e:	push   esi
1000338f:	push   eax
10003390:	mov    BYTE PTR [ebp-0x4],0x2
10003394:	call   0x100024e1
10003399:	add    esp,0xc
1000339c:	mov    BYTE PTR [ebp-0x4],0x3
100033a0:	mov    eax,DWORD PTR [eax]
100033a2:	cmp    eax,ebx
100033a4:	je     0x100033aa
100033a6:	mov    eax,DWORD PTR [eax]
100033a8:	jmp    0x100033ac
100033aa:	xor    eax,eax
100033ac:	mov    ecx,DWORD PTR [ebp+0x10]
100033af:	push   eax
100033b0:	lea    eax,[ebp-0x18]
100033b3:	push   eax
100033b4:	call   0x10003c20
100033b9:	pop    ecx
100033ba:	pop    ecx
100033bb:	lea    edi,[ebp-0x20]
100033be:	call   0x1000256d
100033c3:	lea    edi,[ebp-0x1c]
100033c6:	call   0x1000256d
100033cb:	push   ebx
100033cc:	push   0x80
100033d1:	push   0x2
100033d3:	push   ebx
100033d4:	push   ebx
100033d5:	push   0x40000000
100033da:	push   DWORD PTR [ebp-0x18]
100033dd:	call   DWORD PTR ds:0x100650bc
100033e3:	mov    edi,eax
100033e5:	mov    DWORD PTR [ebp-0x1c],edi
100033e8:	cmp    edi,0xffffffff
100033eb:	mov    BYTE PTR [ebp-0x4],0x7
100033ef:	jne    0x10003424
100033f1:	call   DWORD PTR ds:0x100650c4
100033f7:	push   edi
100033f8:	call   DWORD PTR ds:0x10065070
100033fe:	mov    eax,DWORD PTR [ebp-0x18]
10003401:	add    eax,0xfffffff0
10003404:	call   0x1000207d
10003409:	lea    eax,[esi-0x10]
1000340c:	call   0x1000207d
10003411:	mov    eax,DWORD PTR [ebp-0x10]
10003414:	add    eax,0xfffffff0
10003417:	call   0x1000207d
1000341c:	xor    al,al
1000341e:	call   0x1005891d
10003423:	ret    
10003424:	push   ebx
10003425:	lea    eax,[ebp-0x24]
10003428:	push   eax
10003429:	push   DWORD PTR [ebp+0xc]
1000342c:	push   DWORD PTR [ebp+0x8]
1000342f:	push   edi
10003430:	call   DWORD PTR ds:0x100650b4
10003436:	test   eax,eax
10003438:	jne    0x10003441
1000343a:	cmp    edi,ebx
1000343c:	je     0x100033fe
1000343e:	push   edi
1000343f:	jmp    0x100033f8
10003441:	mov    edi,DWORD PTR [ebp+0x18]
10003444:	lea    eax,[ebp-0x18]
10003447:	call   0x10003bdf
1000344c:	mov    edi,DWORD PTR [ebp+0x14]
1000344f:	lea    eax,[ebp-0x14]
10003452:	call   0x10003bdf
10003457:	cmp    DWORD PTR [ebp-0x1c],ebx
1000345a:	je     0x10003465
1000345c:	push   DWORD PTR [ebp-0x1c]
1000345f:	call   DWORD PTR ds:0x10065070
10003465:	mov    eax,DWORD PTR [ebp-0x18]
10003468:	add    eax,0xfffffff0
1000346b:	call   0x1000207d
10003470:	lea    eax,[esi-0x10]
10003473:	call   0x1000207d
10003478:	mov    eax,DWORD PTR [ebp-0x10]
1000347b:	add    eax,0xfffffff0
1000347e:	call   0x1000207d
10003483:	mov    al,0x1
10003485:	jmp    0x1000341e
10003487:	push   0x24
10003489:	mov    eax,0x100623ce
1000348e:	call   0x100588e4
10003493:	and    DWORD PTR [ebp-0x4],0x0
10003497:	mov    esi,ecx
10003499:	push   esi
1000349a:	call   0x10037480
1000349f:	lea    edi,[ebp-0x30]
100034a2:	mov    ebx,eax
100034a4:	call   0x10037270
100034a9:	mov    eax,ebx
100034ab:	dec    eax
100034ac:	mov    BYTE PTR [ebp-0x4],0x1
100034b0:	je     0x100034e6
100034b2:	dec    eax
100034b3:	je     0x100034cf
100034b5:	dec    eax
100034b6:	jne    0x100034fd
100034b8:	cmp    DWORD PTR [ebp-0x18],0x10
100034bc:	mov    eax,DWORD PTR [ebp-0x2c]
100034bf:	jae    0x100034c4
100034c1:	lea    eax,[ebp-0x2c]
100034c4:	push   DWORD PTR [ebp-0x1c]
100034c7:	push   eax
100034c8:	call   0x10003957
100034cd:	jmp    0x100034fb
100034cf:	cmp    DWORD PTR [ebp-0x18],0x10
100034d3:	mov    eax,DWORD PTR [ebp-0x2c]
100034d6:	jae    0x100034db
100034d8:	lea    eax,[ebp-0x2c]
100034db:	push   DWORD PTR [ebp-0x1c]
100034de:	push   eax
100034df:	call   0x10003738
100034e4:	jmp    0x100034fb
100034e6:	cmp    DWORD PTR [ebp-0x18],0x10
100034ea:	mov    eax,DWORD PTR [ebp-0x2c]
100034ed:	jae    0x100034f2
100034ef:	lea    eax,[ebp-0x2c]
100034f2:	push   DWORD PTR [ebp-0x1c]
100034f5:	push   eax
100034f6:	call   0x100035a1
100034fb:	pop    ecx
100034fc:	pop    ecx
100034fd:	push   0x0
100034ff:	push   0x1
10003501:	lea    ecx,[ebp-0x30]
10003504:	call   0x100012f9
10003509:	call   0x10058940
1000350e:	ret    
1000350f:	mov    eax,0x10003509
10003514:	ret    
10003515:	push   0x2c
10003517:	mov    eax,0x10063503
1000351c:	call   0x10058845
10003521:	call   0x1000207c
10003526:	xor    ebx,ebx
10003528:	mov    DWORD PTR [ebp-0x14],ebx
1000352b:	mov    DWORD PTR [ebp-0x10],ebx
1000352e:	lea    ecx,[ebp-0x38]
10003531:	mov    DWORD PTR [ebp-0x4],ebx
10003534:	call   0x10018131
10003539:	push   0xffffffff
1000353b:	lea    ecx,[ebp-0x14]
1000353e:	push   ecx
1000353f:	push   DWORD PTR [ebp+0x8]
10003542:	lea    esi,[ebp-0x18]
10003545:	push   eax
10003546:	mov    BYTE PTR [ebp-0x4],0x1
1000354a:	call   0x100309f0
1000354f:	add    esp,0x10
10003552:	push   eax
10003553:	lea    edi,[ebp-0x10]
10003556:	call   0x1000209f
1000355b:	push   DWORD PTR [ebp-0x18]
1000355e:	call   0x10041d92
10003563:	pop    ecx
10003564:	push   ebx
10003565:	push   0x1
10003567:	lea    ecx,[ebp-0x38]
1000356a:	mov    BYTE PTR [ebp-0x4],bl
1000356d:	call   0x100012f9
10003572:	cmp    DWORD PTR [ebp-0x10],ebx
10003575:	jne    0x10003585
10003577:	call   0x100180b0
1000357c:	push   ebx
1000357d:	call   0x10041d92
10003582:	pop    ecx
10003583:	jmp    0x1000359b
10003585:	push   DWORD PTR [ebp-0x14]
10003588:	push   DWORD PTR [ebp-0x10]
1000358b:	call   0x100035a1
10003590:	push   DWORD PTR [ebp-0x10]
10003593:	call   0x10041d92
10003598:	add    esp,0xc
1000359b:	call   0x1005891d
100035a0:	ret    
100035a1:	push   0xc
100035a3:	mov    eax,0x10061ce6
100035a8:	call   0x10058845
100035ad:	mov    eax,ds:0x1007fa54
100035b2:	mov    edi,0x1007fa54
100035b7:	mov    ecx,edi
100035b9:	call   DWORD PTR [eax+0xc]
100035bc:	add    eax,0x10
100035bf:	mov    DWORD PTR [ebp-0x18],eax
100035c2:	xor    esi,esi
100035c4:	mov    DWORD PTR [ebp-0x4],esi
100035c7:	mov    eax,ds:0x1007fa54
100035cc:	mov    ecx,edi
100035ce:	call   DWORD PTR [eax+0xc]
100035d1:	add    eax,0x10
100035d4:	mov    DWORD PTR [ebp-0x14],eax
100035d7:	push   0x36287042
100035dc:	push   0x1006bb60
100035e1:	mov    BYTE PTR [ebp-0x4],0x1
100035e5:	call   0x10003d63
100035ea:	push   0x672b1722
100035ef:	push   eax
100035f0:	call   0x10003d63
100035f5:	push   eax
100035f6:	push   0x9
100035f8:	push   0x1006bb9c
100035fd:	call   0x10003f5b
10003602:	add    esp,0x1c
10003605:	push   eax
10003606:	lea    eax,[ebp-0x10]
10003609:	push   eax
1000360a:	call   0x10002366
1000360f:	lea    eax,[ebp-0x14]
10003612:	push   eax
10003613:	lea    eax,[ebp-0x18]
10003616:	push   eax
10003617:	lea    eax,[ebp-0x10]
1000361a:	push   eax
1000361b:	push   DWORD PTR [ebp+0xc]
1000361e:	mov    BYTE PTR [ebp-0x4],0x2
10003622:	push   DWORD PTR [ebp+0x8]
10003625:	call   0x100032a5
1000362a:	mov    bl,al
1000362c:	add    esp,0x14
1000362f:	neg    bl
10003631:	mov    BYTE PTR [ebp-0x4],0x1
10003635:	mov    eax,DWORD PTR [ebp-0x10]
10003638:	sbb    bl,bl
1000363a:	add    eax,0xfffffff0
1000363d:	inc    bl
1000363f:	call   0x1000207d
10003644:	test   bl,bl
10003646:	je     0x1000364d
10003648:	call   0x1000207c
1000364d:	call   0x10003ad5
10003652:	call   0x1000207c
10003657:	push   0x1
10003659:	lea    eax,[ebp-0x10]
1000365c:	push   eax
1000365d:	call   0x100346c0
10003662:	mov    BYTE PTR [ebp-0x4],0x3
10003666:	call   DWORD PTR ds:0x1007dfe4
1000366c:	mov    edi,DWORD PTR [ebp-0x14]
1000366f:	lea    eax,[ebp-0x10]
10003672:	push   eax
10003673:	call   0x10036d10
10003678:	push   DWORD PTR [ebp-0x10]
1000367b:	call   DWORD PTR ds:0x10065070
10003681:	mov    ebx,DWORD PTR ds:0x100650a8
10003687:	push   0x4
10003689:	push   esi
1000368a:	push   edi
1000368b:	call   ebx
1000368d:	push   0x4
1000368f:	push   esi
10003690:	mov    esi,DWORD PTR [ebp-0x18]
10003693:	push   esi
10003694:	call   ebx
10003696:	lea    eax,[edi-0x10]
10003699:	call   0x1000207d
1000369e:	lea    eax,[esi-0x10]
100036a1:	call   0x1000207d
100036a6:	call   0x1005891d
100036ab:	ret    
100036ac:	push   0x2c
100036ae:	mov    eax,0x10063503
100036b3:	call   0x10058845
100036b8:	call   0x1000207c
100036bd:	xor    ebx,ebx
100036bf:	mov    DWORD PTR [ebp-0x14],ebx
100036c2:	mov    DWORD PTR [ebp-0x10],ebx
100036c5:	lea    ecx,[ebp-0x38]
100036c8:	mov    DWORD PTR [ebp-0x4],ebx
100036cb:	call   0x10018131
100036d0:	push   0xffffffff
100036d2:	lea    ecx,[ebp-0x14]
100036d5:	push   ecx
100036d6:	push   DWORD PTR [ebp+0x8]
100036d9:	lea    esi,[ebp-0x18]
100036dc:	push   eax
100036dd:	mov    BYTE PTR [ebp-0x4],0x1
100036e1:	call   0x100309f0
100036e6:	add    esp,0x10
100036e9:	push   eax
100036ea:	lea    edi,[ebp-0x10]
100036ed:	call   0x1000209f
100036f2:	push   DWORD PTR [ebp-0x18]
100036f5:	call   0x10041d92
100036fa:	pop    ecx
100036fb:	push   ebx
100036fc:	push   0x1
100036fe:	lea    ecx,[ebp-0x38]
10003701:	mov    BYTE PTR [ebp-0x4],bl
10003704:	call   0x100012f9
10003709:	cmp    DWORD PTR [ebp-0x10],ebx
1000370c:	jne    0x1000371c
1000370e:	call   0x100180b0
10003713:	push   ebx
10003714:	call   0x10041d92
10003719:	pop    ecx
1000371a:	jmp    0x10003732
1000371c:	push   DWORD PTR [ebp-0x14]
1000371f:	push   DWORD PTR [ebp-0x10]
10003722:	call   0x10003738
10003727:	push   DWORD PTR [ebp-0x10]
1000372a:	call   0x10041d92
1000372f:	add    esp,0xc
10003732:	call   0x1005891d
10003737:	ret    
10003738:	push   ebp
10003739:	mov    ebp,esp
1000373b:	and    esp,0xfffffff8
1000373e:	push   0xffffffff
10003740:	push   0x10061cab
10003745:	mov    eax,fs:0x0
1000374b:	push   eax
1000374c:	sub    esp,0x70
1000374f:	push   ebx
10003750:	push   esi
10003751:	push   edi
10003752:	mov    eax,ds:0x1007d030
10003757:	xor    eax,esp
10003759:	push   eax
1000375a:	lea    eax,[esp+0x80]
10003761:	mov    fs:0x0,eax
10003767:	push   0x1006bbb0
1000376c:	push   0xc
1000376e:	push   0x1006bbe8
10003773:	call   0x10003f5b
10003778:	add    esp,0xc
1000377b:	push   eax
1000377c:	lea    eax,[esp+0x18]
10003780:	push   eax
10003781:	call   0x10002366
10003786:	xor    ebx,ebx
10003788:	mov    DWORD PTR [esp+0x88],ebx
1000378f:	mov    eax,ds:0x1007fa54
10003794:	mov    esi,0x1007fa54
10003799:	mov    ecx,esi
1000379b:	call   DWORD PTR [eax+0xc]
1000379e:	add    eax,0x10
100037a1:	mov    DWORD PTR [esp+0x20],eax
100037a5:	mov    BYTE PTR [esp+0x88],0x1
100037ad:	mov    eax,ds:0x1007fa54
100037b2:	mov    ecx,esi
100037b4:	call   DWORD PTR [eax+0xc]
100037b7:	add    eax,0x10
100037ba:	mov    DWORD PTR [esp+0x1c],eax
100037be:	lea    eax,[esp+0x1c]
100037c2:	push   eax
100037c3:	lea    eax,[esp+0x24]
100037c7:	push   eax
100037c8:	lea    eax,[esp+0x1c]
100037cc:	push   eax
100037cd:	push   DWORD PTR [ebp+0xc]
100037d0:	mov    BYTE PTR [esp+0x98],0x2
100037d8:	push   DWORD PTR [ebp+0x8]
100037db:	call   0x100032a5
100037e0:	add    esp,0x14
100037e3:	test   al,al
100037e5:	jne    0x100037ec
100037e7:	call   0x1000207c
100037ec:	call   0x10003ad5
100037f1:	call   0x1000207c
100037f6:	push   0x1
100037f8:	lea    eax,[esp+0x1c]
100037fc:	push   eax
100037fd:	call   0x100346c0
10003802:	mov    BYTE PTR [esp+0x88],0x3
1000380a:	mov    ecx,DWORD PTR [esp+0x14]
1000380e:	lea    edx,[esp+0x18]
10003812:	call   0x10036ac0
10003817:	push   DWORD PTR [esp+0x18]
1000381b:	mov    esi,DWORD PTR ds:0x10065070
10003821:	call   esi
10003823:	push   0x40
10003825:	lea    eax,[esp+0x3c]
10003829:	push   ebx
1000382a:	push   eax
1000382b:	call   0x10044950
10003830:	xor    eax,eax
10003832:	mov    DWORD PTR [esp+0x30],ebx
10003836:	lea    edi,[esp+0x34]
1000383a:	stos   DWORD PTR es:[edi],eax
1000383b:	add    esp,0xc
1000383e:	stos   DWORD PTR es:[edi],eax
1000383f:	stos   DWORD PTR es:[edi],eax
10003840:	mov    edi,DWORD PTR [esp+0x1c]
10003844:	lea    eax,[esp+0x24]
10003848:	push   eax
10003849:	lea    eax,[esp+0x38]
1000384d:	push   eax
1000384e:	push   ebx
1000384f:	push   ebx
10003850:	push   ebx
10003851:	push   ebx
10003852:	push   ebx
10003853:	push   ebx
10003854:	push   ebx
10003855:	push   edi
10003856:	mov    DWORD PTR [esp+0x5c],0x44
1000385e:	call   DWORD PTR ds:0x100650a0
10003864:	test   eax,eax
10003866:	je     0x10003876
10003868:	push   DWORD PTR [esp+0x28]
1000386c:	call   esi
1000386e:	push   DWORD PTR [esp+0x24]
10003872:	call   esi
10003874:	jmp    0x10003883
10003876:	call   DWORD PTR ds:0x100650c4
1000387c:	push   eax
1000387d:	call   0x1000207c
10003882:	pop    ecx
10003883:	mov    esi,DWORD PTR ds:0x100650a8
10003889:	push   0x4
1000388b:	push   ebx
1000388c:	push   edi
1000388d:	call   esi
1000388f:	push   0x4
10003891:	push   ebx
10003892:	mov    ebx,DWORD PTR [esp+0x28]
10003896:	push   ebx
10003897:	call   esi
10003899:	lea    eax,[edi-0x10]
1000389c:	call   0x1000207d
100038a1:	lea    eax,[ebx-0x10]
100038a4:	call   0x1000207d
100038a9:	mov    eax,DWORD PTR [esp+0x14]
100038ad:	add    eax,0xfffffff0
100038b0:	call   0x1000207d
100038b5:	mov    ecx,DWORD PTR [esp+0x80]
100038bc:	mov    DWORD PTR fs:0x0,ecx
100038c3:	pop    ecx
100038c4:	pop    edi
100038c5:	pop    esi
100038c6:	pop    ebx
100038c7:	mov    esp,ebp
100038c9:	pop    ebp
100038ca:	ret    
100038cb:	push   0x2c
100038cd:	mov    eax,0x10063503
100038d2:	call   0x10058845
100038d7:	call   0x1000207c
100038dc:	xor    ebx,ebx
100038de:	mov    DWORD PTR [ebp-0x14],ebx
100038e1:	mov    DWORD PTR [ebp-0x10],ebx
100038e4:	lea    ecx,[ebp-0x38]
100038e7:	mov    DWORD PTR [ebp-0x4],ebx
100038ea:	call   0x10018131
100038ef:	push   0xffffffff
100038f1:	lea    ecx,[ebp-0x14]
100038f4:	push   ecx
100038f5:	push   DWORD PTR [ebp+0x8]
100038f8:	lea    esi,[ebp-0x18]
100038fb:	push   eax
100038fc:	mov    BYTE PTR [ebp-0x4],0x1
10003900:	call   0x100309f0
10003905:	add    esp,0x10
10003908:	push   eax
10003909:	lea    edi,[ebp-0x10]
1000390c:	call   0x1000209f
10003911:	push   DWORD PTR [ebp-0x18]
10003914:	call   0x10041d92
10003919:	pop    ecx
1000391a:	push   ebx
1000391b:	push   0x1
1000391d:	lea    ecx,[ebp-0x38]
10003920:	mov    BYTE PTR [ebp-0x4],bl
10003923:	call   0x100012f9
10003928:	cmp    DWORD PTR [ebp-0x10],ebx
1000392b:	jne    0x1000393b
1000392d:	call   0x100180b0
10003932:	push   ebx
10003933:	call   0x10041d92
10003938:	pop    ecx
10003939:	jmp    0x10003951
1000393b:	push   DWORD PTR [ebp-0x14]
1000393e:	push   DWORD PTR [ebp-0x10]
10003941:	call   0x10003957
10003946:	push   DWORD PTR [ebp-0x10]
10003949:	call   0x10041d92
1000394e:	add    esp,0xc
10003951:	call   0x1005891d
10003956:	ret    
10003957:	push   ebp
10003958:	mov    ebp,esp
1000395a:	and    esp,0xfffffff8
1000395d:	push   0xffffffff
1000395f:	push   0x10061c70
10003964:	mov    eax,fs:0x0
1000396a:	push   eax
1000396b:	sub    esp,0x10
1000396e:	push   ebx
1000396f:	push   esi
10003970:	push   edi
10003971:	mov    eax,ds:0x1007d030
10003976:	xor    eax,esp
10003978:	push   eax
10003979:	lea    eax,[esp+0x20]
1000397d:	mov    fs:0x0,eax
10003983:	mov    eax,ds:0x1007fa54
10003988:	mov    esi,0x1007fa54
1000398d:	mov    ecx,esi
1000398f:	call   DWORD PTR [eax+0xc]
10003992:	add    eax,0x10
10003995:	mov    DWORD PTR [esp+0x18],eax
10003999:	xor    edi,edi
1000399b:	mov    DWORD PTR [esp+0x28],edi
1000399f:	mov    eax,ds:0x1007fa54
100039a4:	mov    ecx,esi
100039a6:	call   DWORD PTR [eax+0xc]
100039a9:	add    eax,0x10
100039ac:	mov    DWORD PTR [esp+0x14],eax
100039b0:	push   0x18006728
100039b5:	push   0x1006bc04
100039ba:	mov    BYTE PTR [esp+0x30],0x1
100039bf:	call   0x10003d63
100039c4:	push   0x402e4ede
100039c9:	push   eax
100039ca:	call   0x10003d63
100039cf:	push   eax
100039d0:	push   0x8
100039d2:	push   0x1006bc30
100039d7:	call   0x10003f5b
100039dc:	add    esp,0x1c
100039df:	push   eax
100039e0:	lea    eax,[esp+0x14]
100039e4:	push   eax
100039e5:	call   0x10002366
100039ea:	lea    eax,[esp+0x14]
100039ee:	push   eax
100039ef:	lea    eax,[esp+0x1c]
100039f3:	push   eax
100039f4:	lea    eax,[esp+0x18]
100039f8:	push   eax
100039f9:	push   DWORD PTR [ebp+0xc]
100039fc:	mov    BYTE PTR [esp+0x38],0x2
10003a01:	push   DWORD PTR [ebp+0x8]
10003a04:	call   0x100032a5
10003a09:	mov    bl,al
10003a0b:	add    esp,0x14
10003a0e:	neg    bl
10003a10:	mov    BYTE PTR [esp+0x28],0x1
10003a15:	mov    eax,DWORD PTR [esp+0x10]
10003a19:	sbb    bl,bl
10003a1b:	add    eax,0xfffffff0
10003a1e:	inc    bl
10003a20:	call   0x1000207d
10003a25:	test   bl,bl
10003a27:	je     0x10003a2e
10003a29:	call   0x1000207c
10003a2e:	call   0x10003ad5
10003a33:	call   0x1000207c
10003a38:	push   0x1
10003a3a:	lea    eax,[esp+0x14]
10003a3e:	push   eax
10003a3f:	call   0x100346c0
10003a44:	push   0x7b680d96
10003a49:	push   0x35c6ac10
10003a4e:	push   0x27925fc
10003a53:	push   0x1006bc44
10003a58:	mov    BYTE PTR [esp+0x38],0x3
10003a5d:	call   0x10003d63
10003a62:	pop    ecx
10003a63:	pop    ecx
10003a64:	push   eax
10003a65:	call   0x10003d63
10003a6a:	pop    ecx
10003a6b:	pop    ecx
10003a6c:	push   eax
10003a6d:	call   0x10003d63
10003a72:	push   eax
10003a73:	push   0xb
10003a75:	push   0x1006bc80
10003a7a:	call   0x10003f5b
10003a7f:	mov    ebx,DWORD PTR [esp+0x28]
10003a83:	add    esp,0x14
10003a86:	push   eax
10003a87:	push   ebx
10003a88:	lea    eax,[esp+0x18]
10003a8c:	push   eax
10003a8d:	call   0x10036d90
10003a92:	push   DWORD PTR [esp+0x10]
10003a96:	call   DWORD PTR ds:0x10065070
10003a9c:	mov    esi,DWORD PTR ds:0x100650a8
10003aa2:	push   0x4
10003aa4:	push   edi
10003aa5:	push   ebx
10003aa6:	call   esi
10003aa8:	push   0x4
10003aaa:	push   edi
10003aab:	mov    edi,DWORD PTR [esp+0x20]
10003aaf:	push   edi
10003ab0:	call   esi
10003ab2:	lea    eax,[ebx-0x10]
10003ab5:	call   0x1000207d
10003aba:	lea    eax,[edi-0x10]
10003abd:	call   0x1000207d
10003ac2:	mov    ecx,DWORD PTR [esp+0x20]
10003ac6:	mov    DWORD PTR fs:0x0,ecx
10003acd:	pop    ecx
10003ace:	pop    edi
10003acf:	pop    esi
10003ad0:	pop    ebx
10003ad1:	mov    esp,ebp
10003ad3:	pop    ebp
10003ad4:	ret    
10003ad5:	push   ebp
10003ad6:	mov    ebp,esp
10003ad8:	and    esp,0xfffffff8
10003adb:	push   0xffffffff
10003add:	push   0x100611cf
10003ae2:	mov    eax,fs:0x0
10003ae8:	push   eax
10003ae9:	sub    esp,0x14
10003aec:	mov    eax,ds:0x1007d030
10003af1:	xor    eax,esp
10003af3:	push   eax
10003af4:	lea    eax,[esp+0x18]
10003af8:	mov    fs:0x0,eax
10003afe:	push   0x1
10003b00:	lea    eax,[esp+0xc]
10003b04:	push   eax
10003b05:	call   0x100346c0
10003b0a:	and    DWORD PTR [esp+0x20],0x0
10003b0f:	call   0x1002f5b0
10003b14:	add    eax,0x78c6c000
10003b19:	mov    DWORD PTR [esp+0xc],eax
10003b1d:	lea    eax,[esp+0xc]
10003b21:	push   eax
10003b22:	lea    eax,[esp+0xc]
10003b26:	push   eax
10003b27:	push   0x4
10003b29:	adc    edx,0x11ed1
10003b2f:	pop    ecx
10003b30:	mov    DWORD PTR [esp+0x18],edx
10003b34:	call   0x10035870
10003b39:	push   DWORD PTR [esp+0x8]
10003b3d:	call   DWORD PTR ds:0x10065070
10003b43:	mov    ecx,DWORD PTR [esp+0x18]
10003b47:	mov    DWORD PTR fs:0x0,ecx
10003b4e:	pop    ecx
10003b4f:	mov    esp,ebp
10003b51:	pop    ebp
10003b52:	ret    
10003b53:	push   0xc
10003b55:	mov    eax,0x100638ce
10003b5a:	call   0x10058878
10003b5f:	xor    ebx,ebx
10003b61:	lea    eax,[ebp-0x14]
10003b64:	push   ebx
10003b65:	push   eax
10003b66:	mov    DWORD PTR [ebp-0x4],ebx
10003b69:	call   0x10002847
10003b6e:	pop    ecx
10003b6f:	pop    ecx
10003b70:	mov    ecx,DWORD PTR [eax]
10003b72:	mov    esi,ecx
10003b74:	mov    DWORD PTR [eax],ebx
10003b76:	mov    DWORD PTR [ebp-0x18],esi
10003b79:	lea    eax,[ebp-0x14]
10003b7c:	mov    BYTE PTR [ebp-0x4],0x1
10003b80:	call   0x10003d3c
10003b85:	push   esi
10003b86:	call   0x100028c5
10003b8b:	cmp    al,bl
10003b8d:	jne    0x10003b94
10003b8f:	call   0x10002910
10003b94:	lea    eax,[ebp-0x18]
10003b97:	call   0x10003d3c
10003b9c:	call   0x1005891d
10003ba1:	ret    
10003ba2:	mov    eax,0x10003b9c
10003ba7:	ret    
10003ba8:	push   0x0
10003baa:	mov    ecx,esi
10003bac:	mov    DWORD PTR [esi+0x18],0xf
10003bb3:	call   0x10001425
10003bb8:	mov    eax,esi
10003bba:	ret    
10003bbb:	push   0x0
10003bbd:	mov    ecx,esi
10003bbf:	mov    DWORD PTR [esi+0x18],0xf
10003bc6:	call   0x10001425
10003bcb:	push   DWORD PTR [esp+0x8]
10003bcf:	mov    ecx,esi
10003bd1:	push   DWORD PTR [esp+0x8]
10003bd5:	call   0x10001344
10003bda:	mov    eax,esi
10003bdc:	ret    0x8
10003bdf:	mov    ecx,DWORD PTR [eax]
10003be1:	push   esi
10003be2:	mov    esi,DWORD PTR [edi]
10003be4:	lea    eax,[ecx-0x10]
10003be7:	sub    esi,0x10
10003bea:	cmp    eax,esi
10003bec:	je     0x10003c1c
10003bee:	cmp    DWORD PTR [esi+0xc],0x0
10003bf2:	push   ebx
10003bf3:	jl     0x10003c10
10003bf5:	mov    edx,DWORD PTR [eax]
10003bf7:	cmp    edx,DWORD PTR [esi]
10003bf9:	jne    0x10003c10
10003bfb:	call   0x1000475e
10003c00:	mov    ebx,eax
10003c02:	mov    eax,esi
10003c04:	call   0x1000207d
10003c09:	add    ebx,0x10
10003c0c:	mov    DWORD PTR [edi],ebx
10003c0e:	jmp    0x10003c1b
10003c10:	mov    ebx,DWORD PTR [ecx-0xc]
10003c13:	push   ecx
10003c14:	mov    eax,edi
10003c16:	call   0x100023cc
10003c1b:	pop    ebx
10003c1c:	mov    eax,edi
10003c1e:	pop    esi
10003c1f:	ret    
10003c20:	push   0xc
10003c22:	mov    eax,0x1005eaef
10003c27:	call   0x10058845
10003c2c:	mov    ebx,ecx
10003c2e:	xor    edi,edi
10003c30:	mov    DWORD PTR [ebp-0x4],edi
10003c33:	mov    eax,ebx
10003c35:	mov    DWORD PTR [ebp-0x10],edi
10003c38:	call   0x10004170
10003c3d:	mov    esi,DWORD PTR [ebp+0x8]
10003c40:	mov    ecx,eax
10003c42:	call   0x10002160
10003c47:	cmp    DWORD PTR [ebp+0xc],edi
10003c4a:	mov    DWORD PTR [ebp-0x4],edi
10003c4d:	mov    eax,DWORD PTR [ebx]
10003c4f:	mov    ebx,DWORD PTR [eax-0xc]
10003c52:	mov    DWORD PTR [ebp-0x10],0x1
10003c59:	mov    DWORD PTR [ebp-0x14],eax
10003c5c:	je     0x10003c69
10003c5e:	push   DWORD PTR [ebp+0xc]
10003c61:	call   0x100425f3
10003c66:	pop    ecx
10003c67:	mov    edi,eax
10003c69:	mov    esi,DWORD PTR [ebp+0x8]
10003c6c:	lea    eax,[edi+ebx*1]
10003c6f:	push   eax
10003c70:	mov    DWORD PTR [ebp-0x18],eax
10003c73:	call   0x100021bb
10003c78:	push   DWORD PTR [ebp+0xc]
10003c7b:	mov    esi,eax
10003c7d:	push   edi
10003c7e:	push   esi
10003c7f:	mov    eax,edi
10003c81:	call   0x10002340
10003c86:	push   DWORD PTR [ebp-0x14]
10003c89:	lea    eax,[esi+edi*2]
10003c8c:	push   ebx
10003c8d:	push   eax
10003c8e:	mov    eax,ebx
10003c90:	call   0x10002340
10003c95:	mov    eax,DWORD PTR [ebp-0x18]
10003c98:	mov    edx,DWORD PTR [ebp+0x8]
10003c9b:	add    esp,0x18
10003c9e:	call   0x10002246
10003ca3:	mov    eax,DWORD PTR [ebp+0x8]
10003ca6:	call   0x1005891d
10003cab:	ret    
10003cac:	mov    eax,DWORD PTR [esi]
10003cae:	test   eax,eax
10003cb0:	je     0x10003cb9
10003cb2:	push   eax
10003cb3:	call   0x100425f3
10003cb8:	pop    ecx
10003cb9:	mov    edx,esi
10003cbb:	jmp    0x10002246
10003cc0:	push   esi
10003cc1:	mov    esi,DWORD PTR [eax]
10003cc3:	test   esi,esi
10003cc5:	je     0x10003cd6
10003cc7:	push   DWORD PTR [esi]
10003cc9:	call   DWORD PTR ds:0x10065070
10003ccf:	push   esi
10003cd0:	call   0x10041d92
10003cd5:	pop    ecx
10003cd6:	pop    esi
10003cd7:	ret    
10003cd8:	jmp    0x1000424f
10003cdd:	push   ebp
10003cde:	mov    ebp,esp
10003ce0:	and    esp,0xfffffff8
10003ce3:	push   ecx
10003ce4:	push   ecx
10003ce5:	push   ebx
10003ce6:	mov    ebx,DWORD PTR [esi+0x4]
10003ce9:	test   ebx,ebx
10003ceb:	push   edi
10003cec:	jne    0x10003cf2
10003cee:	xor    edi,edi
10003cf0:	jmp    0x10003cfa
10003cf2:	mov    edi,DWORD PTR [esi+0xc]
10003cf5:	sub    edi,ebx
10003cf7:	sar    edi,0x5
10003cfa:	mov    eax,esi
10003cfc:	call   0x10004194
10003d01:	cmp    eax,edi
10003d03:	jae    0x10003d17
10003d05:	push   DWORD PTR [ebp+0x8]
10003d08:	push   0x1
10003d0a:	push   DWORD PTR [esi+0x8]
10003d0d:	call   0x10004274
10003d12:	mov    DWORD PTR [esi+0x8],eax
10003d15:	jmp    0x10003d34
10003d17:	mov    edi,DWORD PTR [esi+0x8]
10003d1a:	cmp    ebx,edi
10003d1c:	jbe    0x10003d23
10003d1e:	call   0x100422b0
10003d23:	push   edi
10003d24:	push   esi
10003d25:	push   DWORD PTR [ebp+0x8]
10003d28:	lea    eax,[esp+0x14]
10003d2c:	push   eax
10003d2d:	mov    eax,esi
10003d2f:	call   0x100041a7
10003d34:	pop    edi
10003d35:	pop    ebx
10003d36:	mov    esp,ebp
10003d38:	pop    ebp
10003d39:	ret    0x4
10003d3c:	push   esi
10003d3d:	mov    esi,DWORD PTR [eax]
10003d3f:	test   esi,esi
10003d41:	je     0x10003d61
10003d43:	push   edi
10003d44:	mov    edi,DWORD PTR [esi]
10003d46:	test   edi,edi
10003d48:	je     0x10003d59
10003d4a:	push   DWORD PTR [edi]
10003d4c:	call   DWORD PTR ds:0x10065070
10003d52:	push   edi
10003d53:	call   0x10041d92
10003d58:	pop    ecx
10003d59:	push   esi
10003d5a:	call   0x10041d92
10003d5f:	pop    ecx
10003d60:	pop    edi
10003d61:	pop    esi
10003d62:	ret    
10003d63:	jmp    0x10003d69
10003d65:	dec    DWORD PTR [esp+0x8]
10003d69:	test   BYTE PTR [esp+0x8],0x1
10003d6e:	jne    0x10003d65
10003d70:	mov    eax,DWORD PTR [esp+0x4]
10003d74:	ret    
10003d75:	push   ebp
10003d76:	mov    ebp,esp
10003d78:	and    esp,0xfffffff8
10003d7b:	push   0xffffffff
10003d7d:	push   0x100600bc
10003d82:	mov    eax,fs:0x0
10003d88:	push   eax
10003d89:	sub    esp,0x78
10003d8c:	mov    eax,ds:0x1007d030
10003d91:	xor    eax,esp
10003d93:	mov    DWORD PTR [esp+0x70],eax
10003d97:	push   ebx
10003d98:	push   esi
10003d99:	push   edi
10003d9a:	mov    eax,ds:0x1007d030
10003d9f:	xor    eax,esp
10003da1:	push   eax
10003da2:	lea    eax,[esp+0x88]
10003da9:	mov    fs:0x0,eax
10003daf:	push   DWORD PTR [ebp+0xc]
10003db2:	mov    eax,DWORD PTR [ebp+0x8]
10003db5:	push   eax
10003db6:	lea    esi,[esp+0x50]
10003dba:	call   0x10003bbb
10003dbf:	mov    eax,esi
10003dc1:	push   eax
10003dc2:	lea    eax,[esp+0x1c]
10003dc6:	xor    ebx,ebx
10003dc8:	push   eax
10003dc9:	mov    DWORD PTR [esp+0x98],ebx
10003dd0:	call   0x100042a4
10003dd5:	push   eax
10003dd6:	call   0x10004531
10003ddb:	call   0x100042a4
10003de0:	mov    ecx,DWORD PTR [eax+0x4]
10003de3:	lea    edi,[esp+0x10]
10003de7:	lea    esi,[esp+0x18]
10003deb:	mov    DWORD PTR [esp+0x14],ecx
10003def:	mov    DWORD PTR [esp+0x10],eax
10003df3:	call   0x100046f1
10003df8:	test   al,al
10003dfa:	je     0x10003e54
10003dfc:	sub    esp,0x1c
10003dff:	lea    eax,[esp+0x64]
10003e03:	mov    ecx,esp
10003e05:	mov    DWORD PTR [esp+0x2c],esp
10003e09:	push   eax
10003e0a:	call   0x100011b0
10003e0f:	lea    esi,[esp+0x80]
10003e16:	call   0x10004307
10003e1b:	add    esp,0x1c
10003e1e:	lea    eax,[esp+0x48]
10003e22:	push   eax
10003e23:	mov    BYTE PTR [esp+0x94],0x1
10003e2b:	call   0x100042a4
10003e30:	push   eax
10003e31:	call   0x1000445d
10003e36:	push   0xffffffff
10003e38:	push   ebx
10003e39:	mov    ecx,esi
10003e3b:	push   ecx
10003e3c:	mov    ecx,eax
10003e3e:	call   0x1000124a
10003e43:	push   ebx
10003e44:	push   0x1
10003e46:	mov    ecx,esi
10003e48:	mov    BYTE PTR [esp+0x98],bl
10003e4f:	call   0x100012f9
10003e54:	mov    eax,DWORD PTR [ebp+0x10]
10003e57:	movzx  eax,BYTE PTR [eax]
10003e5a:	cmp    eax,0x100
10003e5f:	jge    0x10003e85
10003e61:	lea    eax,[esp+0x48]
10003e65:	push   eax
10003e66:	lea    eax,[esp+0x14]
10003e6a:	push   eax
10003e6b:	call   0x100042a4
10003e70:	push   eax
10003e71:	call   0x10004531
10003e76:	mov    ecx,DWORD PTR [eax]
10003e78:	mov    ebx,DWORD PTR [eax+0x4]
10003e7b:	mov    DWORD PTR [esp+0x18],ecx
10003e7f:	mov    DWORD PTR [esp+0x1c],ebx
10003e83:	jmp    0x10003e89
10003e85:	mov    ebx,DWORD PTR [esp+0x1c]
10003e89:	call   0x100042a4
10003e8e:	mov    ecx,DWORD PTR [eax+0x4]
10003e91:	lea    edi,[esp+0x10]
10003e95:	lea    esi,[esp+0x18]
10003e99:	mov    DWORD PTR [esp+0x14],ecx
10003e9d:	mov    DWORD PTR [esp+0x10],eax
10003ea1:	call   0x100046f1
10003ea6:	test   al,al
10003ea8:	jne    0x10003eff
10003eaa:	mov    esi,DWORD PTR [esp+0x18]
10003eae:	test   esi,esi
10003eb0:	jne    0x10003eb7
10003eb2:	call   0x100422b0
10003eb7:	cmp    ebx,DWORD PTR [esi+0x4]
10003eba:	jne    0x10003ec1
10003ebc:	call   0x100422b0
10003ec1:	cmp    DWORD PTR [ebx+0x40],0x10
10003ec5:	jb     0x10003ecc
10003ec7:	mov    ebx,DWORD PTR [ebx+0x2c]
10003eca:	jmp    0x10003ecf
10003ecc:	add    ebx,0x2c
10003ecf:	push   0x0
10003ed1:	push   0x1
10003ed3:	lea    ecx,[esp+0x50]
10003ed7:	call   0x100012f9
10003edc:	mov    eax,ebx
10003ede:	mov    ecx,DWORD PTR [esp+0x88]
10003ee5:	mov    DWORD PTR fs:0x0,ecx
10003eec:	pop    ecx
10003eed:	pop    edi
10003eee:	pop    esi
10003eef:	pop    ebx
10003ef0:	mov    ecx,DWORD PTR [esp+0x70]
10003ef4:	xor    ecx,esp
10003ef6:	call   0x10041d97
10003efb:	mov    esp,ebp
10003efd:	pop    ebp
10003efe:	ret    
10003eff:	push   0x1006bc98
10003f04:	lea    ecx,[esp+0x68]
10003f08:	call   0x100011d6
10003f0d:	lea    eax,[esp+0x64]
10003f11:	push   eax
10003f12:	lea    eax,[esp+0x24]
10003f16:	push   eax
10003f17:	mov    BYTE PTR [esp+0x98],0x2
10003f1f:	call   0x100026a9
10003f24:	push   0x10073924
10003f29:	lea    eax,[esp+0x24]
10003f2d:	push   eax
10003f2e:	call   0x10046704
10003f33:	int3   
10003f34:	push   esi
10003f35:	mov    esi,DWORD PTR [eax]
10003f37:	test   esi,esi
10003f39:	je     0x10003f48
10003f3b:	push   esi
10003f3c:	call   0x10038e30
10003f41:	push   esi
10003f42:	call   0x10041d92
10003f47:	pop    ecx
10003f48:	pop    esi
10003f49:	ret    
10003f4a:	mov    eax,DWORD PTR [esi]
10003f4c:	test   eax,eax
10003f4e:	je     0x10003f57
10003f50:	push   eax
10003f51:	call   DWORD PTR ds:0x10065070
10003f57:	and    DWORD PTR [esi],0x0
10003f5a:	ret    
10003f5b:	push   ebp
10003f5c:	mov    ebp,esp
10003f5e:	and    esp,0xfffffff8
10003f61:	push   0xffffffff
10003f63:	push   0x1005f599
10003f68:	mov    eax,fs:0x0
10003f6e:	push   eax
10003f6f:	sub    esp,0x78
10003f72:	mov    eax,ds:0x1007d030
10003f77:	xor    eax,esp
10003f79:	mov    DWORD PTR [esp+0x70],eax
10003f7d:	push   ebx
10003f7e:	push   esi
10003f7f:	push   edi
10003f80:	mov    eax,ds:0x1007d030
10003f85:	xor    eax,esp
10003f87:	push   eax
10003f88:	lea    eax,[esp+0x88]
10003f8f:	mov    fs:0x0,eax
10003f95:	mov    eax,DWORD PTR [ebp+0x8]
10003f98:	xor    edi,edi
10003f9a:	push   eax
10003f9b:	mov    eax,DWORD PTR [ebp+0xc]
10003f9e:	lea    esi,[esp+0x4c]
10003fa2:	mov    DWORD PTR [esp+0x64],0x7
10003faa:	mov    DWORD PTR [esp+0x60],edi
10003fae:	mov    WORD PTR [esp+0x50],di
10003fb3:	call   0x10004acf
10003fb8:	mov    eax,esi
10003fba:	push   eax
10003fbb:	lea    eax,[esp+0x1c]
10003fbf:	push   eax
10003fc0:	mov    DWORD PTR [esp+0x98],edi
10003fc7:	call   0x1000437b
10003fcc:	push   eax
10003fcd:	call   0x1000468a
10003fd2:	call   0x1000437b
10003fd7:	mov    ecx,DWORD PTR [eax+0x4]
10003fda:	lea    edi,[esp+0x10]
10003fde:	lea    esi,[esp+0x18]
10003fe2:	mov    DWORD PTR [esp+0x14],ecx
10003fe6:	mov    DWORD PTR [esp+0x10],eax
10003fea:	call   0x100046f1
10003fef:	test   al,al
10003ff1:	je     0x10004048
10003ff3:	sub    esp,0x1c
10003ff6:	lea    eax,[esp+0x64]
10003ffa:	mov    esi,esp
10003ffc:	mov    DWORD PTR [esp+0x2c],esp
10004000:	call   0x10004598
10004005:	lea    edi,[esp+0x80]
1000400c:	call   0x100043de
10004011:	add    esp,0x1c
10004014:	lea    eax,[esp+0x48]
10004018:	push   eax
10004019:	mov    BYTE PTR [esp+0x94],0x1
10004021:	call   0x1000437b
10004026:	push   eax
10004027:	call   0x100045b7
1000402c:	push   0xffffffff
1000402e:	push   eax
1000402f:	xor    ebx,ebx
10004031:	mov    eax,edi
10004033:	call   0x10004a49
10004038:	push   0x1
1000403a:	mov    esi,edi
1000403c:	mov    BYTE PTR [esp+0x94],bl
10004043:	call   0x10004b54
10004048:	mov    eax,DWORD PTR [ebp+0x10]
1000404b:	movzx  eax,BYTE PTR [eax]
1000404e:	cmp    eax,0x100
10004053:	jge    0x10004079
10004055:	lea    eax,[esp+0x48]
10004059:	push   eax
1000405a:	lea    eax,[esp+0x14]
1000405e:	push   eax
1000405f:	call   0x1000437b
10004064:	push   eax
10004065:	call   0x1000468a
1000406a:	mov    ecx,DWORD PTR [eax]
1000406c:	mov    ebx,DWORD PTR [eax+0x4]
1000406f:	mov    DWORD PTR [esp+0x18],ecx
10004073:	mov    DWORD PTR [esp+0x1c],ebx
10004077:	jmp    0x1000407d
10004079:	mov    ebx,DWORD PTR [esp+0x1c]
1000407d:	call   0x1000437b
10004082:	mov    ecx,DWORD PTR [eax+0x4]
10004085:	lea    edi,[esp+0x10]
10004089:	lea    esi,[esp+0x18]
1000408d:	mov    DWORD PTR [esp+0x14],ecx
10004091:	mov    DWORD PTR [esp+0x10],eax
10004095:	call   0x100046f1
1000409a:	test   al,al
1000409c:	jne    0x100040f3
1000409e:	mov    esi,DWORD PTR [esp+0x18]
100040a2:	test   esi,esi
100040a4:	jne    0x100040ab
100040a6:	call   0x100422b0
100040ab:	cmp    ebx,DWORD PTR [esi+0x4]
100040ae:	jne    0x100040b5
100040b0:	call   0x100422b0
100040b5:	cmp    DWORD PTR [ebx+0x40],0x8
100040b9:	jb     0x100040c0
100040bb:	mov    edi,DWORD PTR [ebx+0x2c]
100040be:	jmp    0x100040c3
100040c0:	lea    edi,[ebx+0x2c]
100040c3:	push   0x1
100040c5:	xor    ebx,ebx
100040c7:	lea    esi,[esp+0x4c]
100040cb:	call   0x10004b54
100040d0:	mov    eax,edi
100040d2:	mov    ecx,DWORD PTR [esp+0x88]
100040d9:	mov    DWORD PTR fs:0x0,ecx
100040e0:	pop    ecx
100040e1:	pop    edi
100040e2:	pop    esi
100040e3:	pop    ebx
100040e4:	mov    ecx,DWORD PTR [esp+0x70]
100040e8:	xor    ecx,esp
100040ea:	call   0x10041d97
100040ef:	mov    esp,ebp
100040f1:	pop    ebp
100040f2:	ret    
100040f3:	push   0x1006bc98
100040f8:	lea    ecx,[esp+0x68]
100040fc:	call   0x100011d6
10004101:	lea    eax,[esp+0x64]
10004105:	push   eax
10004106:	lea    eax,[esp+0x24]
1000410a:	push   eax
1000410b:	mov    BYTE PTR [esp+0x98],0x2
10004113:	call   0x100026a9
10004118:	push   0x10073924
1000411d:	lea    eax,[esp+0x24]
10004121:	push   eax
10004122:	call   0x10046704
10004127:	int3   
10004128:	push   esi
10004129:	mov    esi,ecx
1000412b:	mov    ecx,DWORD PTR [eax+0x14]
1000412e:	cmp    ecx,esi
10004130:	jae    0x10004134
10004132:	mov    esi,ecx
10004134:	cmp    esi,edi
10004136:	mov    ecx,esi
10004138:	jb     0x1000413c
1000413a:	mov    ecx,edi
1000413c:	cmp    DWORD PTR [eax+0x18],0x10
10004140:	jb     0x10004147
10004142:	mov    eax,DWORD PTR [eax+0x4]
10004145:	jmp    0x1000414a
10004147:	add    eax,0x4
1000414a:	push   ecx
1000414b:	push   DWORD PTR [esp+0xc]
1000414f:	push   eax
10004150:	call   0x1004260e
10004155:	add    esp,0xc
10004158:	test   eax,eax
1000415a:	jne    0x1000416c
1000415c:	cmp    esi,edi
1000415e:	jae    0x10004165
10004160:	or     eax,0xffffffff
10004163:	jmp    0x1000416c
10004165:	xor    eax,eax
10004167:	cmp    esi,edi
10004169:	setne  al
1000416c:	pop    esi
1000416d:	ret    0x4
10004170:	mov    eax,DWORD PTR [eax]
10004172:	mov    ecx,DWORD PTR [eax-0x10]
10004175:	test   ecx,ecx
10004177:	je     0x10004180
10004179:	mov    eax,DWORD PTR [ecx]
1000417b:	call   DWORD PTR [eax+0x10]
1000417e:	jmp    0x10004182
10004180:	xor    eax,eax
10004182:	test   eax,eax
10004184:	jne    0x10004193
10004186:	mov    ecx,0x1007fa54
1000418b:	mov    eax,ds:0x1007fa54
10004190:	jmp    DWORD PTR [eax+0x10]
10004193:	ret    
10004194:	mov    ecx,DWORD PTR [eax+0x4]
10004197:	test   ecx,ecx
10004199:	jne    0x1000419e
1000419b:	xor    eax,eax
1000419d:	ret    
1000419e:	mov    eax,DWORD PTR [eax+0x8]
100041a1:	sub    eax,ecx
100041a3:	sar    eax,0x5
100041a6:	ret    
100041a7:	push   ebp
100041a8:	mov    ebp,esp
100041aa:	push   ecx
100041ab:	push   ebx
100041ac:	push   esi
100041ad:	push   edi
100041ae:	mov    esi,eax
100041b0:	call   0x10004194
100041b5:	test   eax,eax
100041b7:	jne    0x100041bd
100041b9:	xor    edi,edi
100041bb:	jmp    0x100041e2
100041bd:	mov    ebx,DWORD PTR [esi+0x4]
100041c0:	cmp    ebx,DWORD PTR [esi+0x8]
100041c3:	jbe    0x100041ca
100041c5:	call   0x100422b0
100041ca:	cmp    DWORD PTR [ebp+0x10],0x0
100041ce:	je     0x100041d5
100041d0:	cmp    DWORD PTR [ebp+0x10],esi
100041d3:	je     0x100041da
100041d5:	call   0x100422b0
100041da:	mov    edi,DWORD PTR [ebp+0x14]
100041dd:	sub    edi,ebx
100041df:	sar    edi,0x5
100041e2:	push   DWORD PTR [ebp+0x14]
100041e5:	mov    edx,DWORD PTR [ebp+0xc]
100041e8:	push   DWORD PTR [ebp+0x10]
100041eb:	mov    ecx,esi
100041ed:	call   0x1000a07b
100041f2:	mov    ebx,DWORD PTR [esi+0x4]
100041f5:	cmp    ebx,DWORD PTR [esi+0x8]
100041f8:	jbe    0x100041ff
100041fa:	call   0x100422b0
100041ff:	shl    edi,0x5
10004202:	add    edi,ebx
10004204:	cmp    edi,DWORD PTR [esi+0x8]
10004207:	mov    DWORD PTR [ebp+0x14],ebx
1000420a:	ja     0x10004211
1000420c:	cmp    edi,DWORD PTR [esi+0x4]
1000420f:	jae    0x10004216
10004211:	call   0x100422b0
10004216:	mov    eax,DWORD PTR [ebp+0x8]
10004219:	mov    DWORD PTR [eax+0x4],edi
1000421c:	pop    edi
1000421d:	mov    DWORD PTR [eax],esi
1000421f:	pop    esi
10004220:	pop    ebx
10004221:	pop    ecx
10004222:	pop    ebp
10004223:	ret    0x10
10004226:	push   esi
10004227:	mov    esi,eax
10004229:	cmp    esi,0x7ffffff
1000422f:	jbe    0x10004236
10004231:	jmp    0x1000d195
10004236:	mov    ecx,esi
10004238:	call   0x100047d3
1000423d:	shl    esi,0x5
10004240:	add    esi,eax
10004242:	mov    DWORD PTR [edi+0x4],eax
10004245:	mov    DWORD PTR [edi+0x8],eax
10004248:	mov    DWORD PTR [edi+0xc],esi
1000424b:	mov    al,0x1
1000424d:	pop    esi
1000424e:	ret    
1000424f:	mov    eax,DWORD PTR [esi+0x4]
10004252:	test   eax,eax
10004254:	je     0x10004267
10004256:	push   DWORD PTR [esi+0x8]
10004259:	call   0x100047b6
1000425e:	push   DWORD PTR [esi+0x4]
10004261:	call   0x10041d92
10004266:	pop    ecx
10004267:	and    DWORD PTR [esi+0x4],0x0
1000426b:	and    DWORD PTR [esi+0x8],0x0
1000426f:	and    DWORD PTR [esi+0xc],0x0
10004273:	ret    
10004274:	push   ebp
10004275:	mov    ebp,esp
10004277:	push   ecx
10004278:	push   edi
10004279:	xor    eax,eax
1000427b:	lea    edi,[ebp-0x4]
1000427e:	stos   BYTE PTR es:[edi],al
1000427f:	push   DWORD PTR [ebp-0x4]
10004282:	push   DWORD PTR [ebp+0xc]
10004285:	push   DWORD PTR [ebp+0x10]
10004288:	push   DWORD PTR [ebp+0xc]
1000428b:	push   DWORD PTR [ebp+0x8]
1000428e:	call   0x10006054
10004293:	mov    eax,DWORD PTR [ebp+0xc]
10004296:	add    esp,0x14
10004299:	shl    eax,0x5
1000429c:	add    eax,DWORD PTR [ebp+0x8]
1000429f:	pop    edi
100042a0:	leave  
100042a1:	ret    0xc
100042a4:	push   0x0
100042a6:	mov    eax,0x1005f566
100042ab:	call   0x10058845
100042b0:	test   BYTE PTR ds:0x1007fc18,0x1
100042b7:	jne    0x100042fc
100042b9:	or     DWORD PTR ds:0x1007fc18,0x1
100042c0:	and    DWORD PTR [esp+0x18],0x0
100042c5:	call   0x10005998
100042ca:	mov    ds:0x1007fc10,eax
100042cf:	mov    BYTE PTR [eax+0x45],0x1
100042d3:	mov    eax,ds:0x1007fc10
100042d8:	mov    DWORD PTR [eax+0x4],eax
100042db:	mov    eax,ds:0x1007fc10
100042e0:	mov    DWORD PTR [eax],eax
100042e2:	mov    eax,ds:0x1007fc10
100042e7:	mov    DWORD PTR [eax+0x8],eax
100042ea:	and    DWORD PTR ds:0x1007fc14,0x0
100042f1:	push   0x10064301
100042f6:	call   0x10042174
100042fb:	pop    ecx
100042fc:	mov    eax,0x1007fc0c
10004301:	call   0x1005891d
10004306:	ret    
10004307:	push   0x4
10004309:	mov    eax,0x1006281f
1000430e:	call   0x10058845
10004313:	and    DWORD PTR [ebp-0x10],0x0
10004317:	and    DWORD PTR [ebp-0x4],0x0
1000431b:	lea    eax,[ebp+0x8]
1000431e:	push   eax
1000431f:	mov    ecx,esi
10004321:	call   0x100011b0
10004326:	xor    ebx,ebx
10004328:	inc    ebx
10004329:	cmp    DWORD PTR [esi+0x14],ebx
1000432c:	jbe    0x10004351
1000432e:	mov    edi,ebx
10004330:	mov    eax,esi
10004332:	call   0x1000473e
10004337:	mov    DWORD PTR [ebp-0x10],eax
1000433a:	lea    edi,[ebx-0x1]
1000433d:	mov    eax,esi
1000433f:	call   0x1000473e
10004344:	mov    cl,BYTE PTR [eax]
10004346:	mov    eax,DWORD PTR [ebp-0x10]
10004349:	xor    BYTE PTR [eax],cl
1000434b:	inc    ebx
1000434c:	cmp    ebx,DWORD PTR [esi+0x14]
1000434f:	jb     0x1000432e
10004351:	push   0x0
10004353:	push   0x1
10004355:	lea    ecx,[ebp+0x8]
10004358:	call   0x100012f9
1000435d:	mov    eax,esi
1000435f:	call   0x1005891d
10004364:	ret    
10004365:	mov    eax,DWORD PTR [esi]
10004367:	test   eax,eax
10004369:	je     0x10004372
1000436b:	push   eax
1000436c:	call   DWORD PTR ds:0x10065070
10004372:	mov    eax,DWORD PTR [esp+0x4]
10004376:	mov    DWORD PTR [esi],eax
10004378:	ret    0x4
1000437b:	push   0x0
1000437d:	mov    eax,0x1005f53d
10004382:	call   0x10058845
10004387:	test   BYTE PTR ds:0x1007fbfc,0x1
1000438e:	jne    0x100043d3
10004390:	or     DWORD PTR ds:0x1007fbfc,0x1
10004397:	and    DWORD PTR [esp+0x18],0x0
1000439c:	call   0x10005998
100043a1:	mov    ds:0x1007fc04,eax
100043a6:	mov    BYTE PTR [eax+0x45],0x1
100043aa:	mov    eax,ds:0x1007fc04
100043af:	mov    DWORD PTR [eax+0x4],eax
100043b2:	mov    eax,ds:0x1007fc04
100043b7:	mov    DWORD PTR [eax],eax
100043b9:	mov    eax,ds:0x1007fc04
100043be:	mov    DWORD PTR [eax+0x8],eax
100043c1:	and    DWORD PTR ds:0x1007fc08,0x0
100043c8:	push   0x100642fc
100043cd:	call   0x10042174
100043d2:	pop    ecx
100043d3:	mov    eax,0x1007fc00
100043d8:	call   0x1005891d
100043dd:	ret    
100043de:	push   0x4
100043e0:	mov    eax,0x1005eabb
100043e5:	call   0x10058845
100043ea:	and    DWORD PTR [ebp-0x10],0x0
100043ee:	and    DWORD PTR [ebp-0x4],0x0
100043f2:	lea    eax,[ebp+0x8]
100043f5:	mov    esi,edi
100043f7:	call   0x10004598
100043fc:	mov    eax,DWORD PTR [edi+0x14]
100043ff:	xor    ebx,ebx
10004401:	inc    ebx
10004402:	cmp    ebx,eax
10004404:	jae    0x10004449
10004406:	jbe    0x1000440d
10004408:	call   0x100422b0
1000440d:	cmp    DWORD PTR [edi+0x18],0x8
10004411:	jb     0x10004418
10004413:	mov    esi,DWORD PTR [edi+0x4]
10004416:	jmp    0x1000441b
10004418:	lea    esi,[edi+0x4]
1000441b:	lea    eax,[ebx-0x1]
1000441e:	cmp    eax,DWORD PTR [edi+0x14]
10004421:	lea    esi,[esi+ebx*2]
10004424:	jbe    0x1000442b
10004426:	call   0x100422b0
1000442b:	cmp    DWORD PTR [edi+0x18],0x8
1000442f:	jb     0x10004436
10004431:	mov    eax,DWORD PTR [edi+0x4]
10004434:	jmp    0x10004439
10004436:	lea    eax,[edi+0x4]
10004439:	mov    ax,WORD PTR [eax+ebx*2-0x2]
1000443e:	xor    WORD PTR [esi],ax
10004441:	mov    eax,DWORD PTR [edi+0x14]
10004444:	inc    ebx
10004445:	cmp    ebx,eax
10004447:	jb     0x1000440d
10004449:	push   0x1
1000444b:	xor    ebx,ebx
1000444d:	lea    esi,[ebp+0x8]
10004450:	call   0x10004b54
10004455:	mov    eax,edi
10004457:	call   0x1005891d
1000445c:	ret    
1000445d:	push   0x64
1000445f:	mov    eax,0x1005f514
10004464:	call   0x10058845
10004469:	push   DWORD PTR [ebp+0xc]
1000446c:	mov    edi,DWORD PTR [ebp+0x8]
1000446f:	lea    ebx,[ebp-0x14]
10004472:	call   0x10004a0b
10004477:	mov    eax,DWORD PTR [edi+0x4]
1000447a:	mov    DWORD PTR [ebp-0x1c],edi
1000447d:	lea    edi,[ebp-0x1c]
10004480:	mov    esi,ebx
10004482:	mov    DWORD PTR [ebp-0x18],eax
10004485:	call   0x100046f1
1000448a:	mov    ebx,DWORD PTR [ebp-0x10]
1000448d:	xor    esi,esi
1000448f:	test   al,al
10004491:	jne    0x100044a2
10004493:	mov    eax,DWORD PTR [ebp+0xc]
10004496:	lea    ecx,[ebx+0xc]
10004499:	call   0x1000481d
1000449e:	test   al,al
100044a0:	je     0x10004510
100044a2:	push   esi
100044a3:	lea    ecx,[ebp-0x38]
100044a6:	mov    DWORD PTR [ebp-0x20],0xf
100044ad:	call   0x10001425
100044b2:	push   DWORD PTR [ebp+0xc]
100044b5:	lea    ecx,[ebp-0x70]
100044b8:	mov    DWORD PTR [ebp-0x4],esi
100044bb:	call   0x100011b0
100044c0:	lea    eax,[ebp-0x38]
100044c3:	push   eax
100044c4:	lea    ecx,[ebp-0x54]
100044c7:	mov    BYTE PTR [ebp-0x4],0x1
100044cb:	call   0x100011b0
100044d0:	push   ebx
100044d1:	mov    BYTE PTR [ebp-0x4],0x2
100044d5:	push   DWORD PTR [ebp-0x14]
100044d8:	lea    eax,[ebp-0x70]
100044db:	push   eax
100044dc:	lea    eax,[ebp-0x1c]
100044df:	push   eax
100044e0:	mov    eax,DWORD PTR [ebp+0x8]
100044e3:	call   0x10004888
100044e8:	mov    edi,DWORD PTR [eax]
100044ea:	mov    ebx,DWORD PTR [eax+0x4]
100044ed:	push   esi
100044ee:	push   0x1
100044f0:	lea    ecx,[ebp-0x54]
100044f3:	call   0x100012f9
100044f8:	push   esi
100044f9:	push   0x1
100044fb:	lea    ecx,[ebp-0x70]
100044fe:	call   0x100012f9
10004503:	push   esi
10004504:	push   0x1
10004506:	lea    ecx,[ebp-0x38]
10004509:	call   0x100012f9
1000450e:	jmp    0x10004513
10004510:	mov    edi,DWORD PTR [ebp-0x14]
10004513:	cmp    edi,esi
10004515:	jne    0x1000451c
10004517:	call   0x100422b0
1000451c:	cmp    ebx,DWORD PTR [edi+0x4]
1000451f:	jne    0x10004526
10004521:	call   0x100422b0
10004526:	lea    eax,[ebx+0x28]
10004529:	call   0x1005891d
1000452e:	ret    0x8
10004531:	push   ebp
10004532:	mov    ebp,esp
10004534:	sub    esp,0x18
10004537:	push   ebx
10004538:	push   esi
10004539:	push   edi
1000453a:	push   DWORD PTR [ebp+0x10]
1000453d:	mov    edi,DWORD PTR [ebp+0x8]
10004540:	lea    ebx,[ebp-0xc]
10004543:	call   0x10004a0b
10004548:	mov    eax,DWORD PTR [edi+0x4]
1000454b:	mov    DWORD PTR [ebp-0x14],edi
1000454e:	lea    edi,[ebp-0x14]
10004551:	mov    esi,ebx
10004553:	mov    DWORD PTR [ebp-0x10],eax
10004556:	call   0x100046f1
1000455b:	test   al,al
1000455d:	jne    0x10004575
1000455f:	mov    ecx,DWORD PTR [ebp-0x8]
10004562:	mov    eax,DWORD PTR [ebp+0x10]
10004565:	add    ecx,0xc
10004568:	call   0x1000481d
1000456d:	test   al,al
1000456f:	jne    0x10004575
10004571:	mov    ecx,ebx
10004573:	jmp    0x10004584
10004575:	mov    eax,DWORD PTR [ebp+0x8]
10004578:	mov    ecx,DWORD PTR [eax+0x4]
1000457b:	mov    DWORD PTR [ebp-0x10],ecx
1000457e:	mov    DWORD PTR [ebp-0x14],eax
10004581:	lea    ecx,[ebp-0x14]
10004584:	mov    edx,DWORD PTR [ecx]
10004586:	mov    eax,DWORD PTR [ebp+0xc]
10004589:	mov    ecx,DWORD PTR [ecx+0x4]
1000458c:	pop    edi
1000458d:	pop    esi
1000458e:	mov    DWORD PTR [eax],edx
10004590:	mov    DWORD PTR [eax+0x4],ecx
10004593:	pop    ebx
10004594:	leave  
10004595:	ret    0xc
10004598:	and    DWORD PTR [esi+0x14],0x0
1000459c:	push   ebx
1000459d:	push   0xffffffff
1000459f:	mov    DWORD PTR [esi+0x18],0x7
100045a6:	and    WORD PTR [esi+0x4],0x0
100045ab:	push   esi
100045ac:	xor    ebx,ebx
100045ae:	call   0x10004a49
100045b3:	mov    eax,esi
100045b5:	pop    ebx
100045b6:	ret    
100045b7:	push   0x64
100045b9:	mov    eax,0x1005f4e1
100045be:	call   0x10058845
100045c3:	push   DWORD PTR [ebp+0xc]
100045c6:	mov    edi,DWORD PTR [ebp+0x8]
100045c9:	lea    ebx,[ebp-0x14]
100045cc:	call   0x10004d5e
100045d1:	mov    eax,DWORD PTR [edi+0x4]
100045d4:	mov    DWORD PTR [ebp-0x1c],edi
100045d7:	lea    edi,[ebp-0x1c]
100045da:	mov    esi,ebx
100045dc:	mov    DWORD PTR [ebp-0x18],eax
100045df:	call   0x100046f1
100045e4:	test   al,al
100045e6:	mov    ebx,DWORD PTR [ebp-0x10]
100045e9:	jne    0x100045fa
100045eb:	mov    eax,DWORD PTR [ebp+0xc]
100045ee:	lea    ecx,[ebx+0xc]
100045f1:	call   0x10004d9c
100045f6:	test   al,al
100045f8:	je     0x10004669
100045fa:	xor    eax,eax
100045fc:	mov    DWORD PTR [ebp-0x20],0x7
10004603:	mov    DWORD PTR [ebp-0x24],eax
10004606:	mov    WORD PTR [ebp-0x34],ax
1000460a:	mov    DWORD PTR [ebp-0x4],eax
1000460d:	mov    eax,DWORD PTR [ebp+0xc]
10004610:	lea    esi,[ebp-0x70]
10004613:	call   0x10004598
10004618:	lea    eax,[ebp-0x38]
1000461b:	lea    esi,[ebp-0x54]
1000461e:	mov    BYTE PTR [ebp-0x4],0x1
10004622:	call   0x10004598
10004627:	push   ebx
10004628:	mov    BYTE PTR [ebp-0x4],0x2
1000462c:	push   DWORD PTR [ebp-0x14]
1000462f:	lea    eax,[ebp-0x70]
10004632:	push   eax
10004633:	lea    eax,[ebp-0x1c]
10004636:	push   eax
10004637:	mov    eax,DWORD PTR [ebp+0x8]
1000463a:	call   0x10004bdb
1000463f:	mov    edi,DWORD PTR [eax]
10004641:	mov    eax,DWORD PTR [eax+0x4]
10004644:	push   0x1
10004646:	xor    ebx,ebx
10004648:	mov    DWORD PTR [ebp-0x10],eax
1000464b:	call   0x10004b54
10004650:	push   0x1
10004652:	lea    esi,[ebp-0x70]
10004655:	call   0x10004b54
1000465a:	push   0x1
1000465c:	lea    esi,[ebp-0x38]
1000465f:	call   0x10004b54
10004664:	mov    ebx,DWORD PTR [ebp-0x10]
10004667:	jmp    0x1000466c
10004669:	mov    edi,DWORD PTR [ebp-0x14]
1000466c:	test   edi,edi
1000466e:	jne    0x10004675
10004670:	call   0x100422b0
10004675:	cmp    ebx,DWORD PTR [edi+0x4]
10004678:	jne    0x1000467f
1000467a:	call   0x100422b0
1000467f:	lea    eax,[ebx+0x28]
10004682:	call   0x1005891d
10004687:	ret    0x8
1000468a:	push   ebp
1000468b:	mov    ebp,esp
1000468d:	sub    esp,0x18
10004690:	push   ebx
10004691:	push   esi
10004692:	push   edi
10004693:	push   DWORD PTR [ebp+0x10]
10004696:	mov    edi,DWORD PTR [ebp+0x8]
10004699:	lea    ebx,[ebp-0xc]
1000469c:	call   0x10004d5e
100046a1:	mov    eax,DWORD PTR [edi+0x4]
100046a4:	mov    DWORD PTR [ebp-0x14],edi
100046a7:	lea    edi,[ebp-0x14]
100046aa:	mov    esi,ebx
100046ac:	mov    DWORD PTR [ebp-0x10],eax
100046af:	call   0x100046f1
100046b4:	test   al,al
100046b6:	jne    0x100046ce
100046b8:	mov    ecx,DWORD PTR [ebp-0x8]
100046bb:	mov    eax,DWORD PTR [ebp+0x10]
100046be:	add    ecx,0xc
100046c1:	call   0x10004d9c
100046c6:	test   al,al
100046c8:	jne    0x100046ce
100046ca:	mov    ecx,ebx
100046cc:	jmp    0x100046dd
100046ce:	mov    eax,DWORD PTR [ebp+0x8]
100046d1:	mov    ecx,DWORD PTR [eax+0x4]
100046d4:	mov    DWORD PTR [ebp-0x10],ecx
100046d7:	mov    DWORD PTR [ebp-0x14],eax
100046da:	lea    ecx,[ebp-0x14]
100046dd:	mov    edx,DWORD PTR [ecx]
100046df:	mov    eax,DWORD PTR [ebp+0xc]
100046e2:	mov    ecx,DWORD PTR [ecx+0x4]
100046e5:	pop    edi
100046e6:	pop    esi
100046e7:	mov    DWORD PTR [eax],edx
100046e9:	mov    DWORD PTR [eax+0x4],ecx
100046ec:	pop    ebx
100046ed:	leave  
100046ee:	ret    0xc
100046f1:	mov    eax,DWORD PTR [esi]
100046f3:	test   eax,eax
100046f5:	je     0x100046fb
100046f7:	cmp    eax,DWORD PTR [edi]
100046f9:	je     0x10004700
100046fb:	call   0x100422b0
10004700:	mov    eax,DWORD PTR [esi+0x4]
10004703:	sub    eax,DWORD PTR [edi+0x4]
10004706:	neg    eax
10004708:	sbb    eax,eax
1000470a:	inc    eax
1000470b:	ret    
1000470c:	push   0x0
1000470e:	push   0x1
10004710:	lea    ecx,[esi+0x1c]
10004713:	call   0x100012f9
10004718:	push   0x0
1000471a:	push   0x1
1000471c:	mov    ecx,esi
1000471e:	call   0x100012f9
10004723:	ret    
10004724:	push   ebx
10004725:	push   esi
10004726:	push   0x1
10004728:	lea    esi,[edi+0x1c]
1000472b:	xor    ebx,ebx
1000472d:	call   0x10004b54
10004732:	push   0x1
10004734:	mov    esi,edi
10004736:	call   0x10004b54
1000473b:	pop    esi
1000473c:	pop    ebx
1000473d:	ret    
1000473e:	push   esi
1000473f:	mov    esi,eax
10004741:	cmp    edi,DWORD PTR [esi+0x14]
10004744:	jbe    0x1000474b
10004746:	call   0x100422b0
1000474b:	cmp    DWORD PTR [esi+0x18],0x10
1000474f:	jb     0x10004756
10004751:	mov    esi,DWORD PTR [esi+0x4]
10004754:	jmp    0x10004759
10004756:	add    esi,0x4
10004759:	lea    eax,[esi+edi*1]
1000475c:	pop    esi
1000475d:	ret    
1000475e:	push   esi
1000475f:	mov    esi,eax
10004761:	mov    ecx,DWORD PTR [esi]
10004763:	mov    eax,DWORD PTR [ecx]
10004765:	push   edi
10004766:	call   DWORD PTR [eax+0x10]
10004769:	lea    edx,[esi+0xc]
1000476c:	cmp    DWORD PTR [edx],0x0
1000476f:	jl     0x10004780
10004771:	cmp    eax,DWORD PTR [esi]
10004773:	jne    0x10004780
10004775:	xor    eax,eax
10004777:	mov    edi,esi
10004779:	inc    eax
1000477a:	lock xadd DWORD PTR [edx],eax
1000477e:	jmp    0x100047b1
10004780:	mov    edx,DWORD PTR [eax]
10004782:	push   0x2
10004784:	push   DWORD PTR [esi+0x4]
10004787:	mov    ecx,eax
10004789:	call   DWORD PTR [edx]
1000478b:	mov    edi,eax
1000478d:	test   edi,edi
1000478f:	jne    0x10004796
10004791:	jmp    0x1000235b
10004796:	mov    eax,DWORD PTR [esi+0x4]
10004799:	mov    DWORD PTR [edi+0x4],eax
1000479c:	mov    eax,DWORD PTR [esi+0x4]
1000479f:	add    esi,0x10
100047a2:	inc    eax
100047a3:	push   esi
100047a4:	push   eax
100047a5:	lea    ecx,[edi+0x10]
100047a8:	push   ecx
100047a9:	call   0x10002340
100047ae:	add    esp,0xc
100047b1:	mov    eax,edi
100047b3:	pop    edi
100047b4:	pop    esi
100047b5:	ret    
100047b6:	push   esi
100047b7:	mov    esi,eax
100047b9:	jmp    0x100047c9
100047bb:	push   0x0
100047bd:	push   0x1
100047bf:	mov    ecx,esi
100047c1:	call   0x100012f9
100047c6:	add    esi,0x20
100047c9:	cmp    esi,DWORD PTR [esp+0x8]
100047cd:	jne    0x100047bb
100047cf:	pop    esi
100047d0:	ret    0x4
100047d3:	push   ebp
100047d4:	mov    ebp,esp
100047d6:	sub    esp,0x10
100047d9:	test   ecx,ecx
100047db:	ja     0x100047eb
100047dd:	xor    ecx,ecx
100047df:	shl    ecx,0x5
100047e2:	push   ecx
100047e3:	call   0x1004239e
100047e8:	pop    ecx
100047e9:	leave  
100047ea:	ret    
100047eb:	or     eax,0xffffffff
100047ee:	xor    edx,edx
100047f0:	div    ecx
100047f2:	cmp    eax,0x20
100047f5:	jae    0x100047df
100047f7:	and    DWORD PTR [ebp-0x4],0x0
100047fb:	lea    eax,[ebp-0x4]
100047fe:	push   eax
100047ff:	lea    ecx,[ebp-0x10]
10004802:	call   0x10041e12
10004807:	push   0x100738b8
1000480c:	lea    eax,[ebp-0x10]
1000480f:	push   eax
10004810:	mov    DWORD PTR [ebp-0x10],0x100655b8
10004817:	call   0x10046704
1000481c:	int3   
1000481d:	cmp    DWORD PTR [ecx+0x18],0x10
10004821:	push   edi
10004822:	mov    edi,DWORD PTR [ecx+0x14]
10004825:	jb     0x1000482c
10004827:	mov    ecx,DWORD PTR [ecx+0x4]
1000482a:	jmp    0x1000482f
1000482c:	add    ecx,0x4
1000482f:	push   ecx
10004830:	mov    ecx,DWORD PTR [eax+0x14]
10004833:	call   0x10004128
10004838:	xor    ecx,ecx
1000483a:	test   eax,eax
1000483c:	setl   cl
1000483f:	mov    al,cl
10004841:	pop    edi
10004842:	ret    
10004843:	push   ebp
10004844:	mov    ebp,esp
10004846:	and    esp,0xfffffff8
10004849:	mov    eax,ds:0x1007fc10
1000484e:	mov    edx,DWORD PTR [eax]
10004850:	sub    esp,0xc
10004853:	push   esi
10004854:	push   eax
10004855:	mov    ecx,0x1007fc0c
1000485a:	mov    esi,ecx
1000485c:	push   esi
1000485d:	push   edx
1000485e:	push   ecx
1000485f:	lea    eax,[esp+0x18]
10004863:	push   eax
10004864:	call   0x10005377
10004869:	push   DWORD PTR ds:0x1007fc10
1000486f:	call   0x10041d92
10004874:	and    DWORD PTR ds:0x1007fc10,0x0
1000487b:	and    DWORD PTR ds:0x1007fc14,0x0
10004882:	pop    ecx
10004883:	pop    esi
10004884:	mov    esp,ebp
10004886:	pop    ebp
10004887:	ret    
10004888:	push   ebp
10004889:	mov    ebp,esp
1000488b:	sub    esp,0x14
1000488e:	push   ebx
1000488f:	mov    ebx,eax
10004891:	xor    eax,eax
10004893:	cmp    DWORD PTR [ebx+0x8],eax
10004896:	push   esi
10004897:	push   edi
10004898:	mov    DWORD PTR [ebp-0x8],eax
1000489b:	mov    DWORD PTR [ebp-0x4],eax
1000489e:	jne    0x100048ba
100048a0:	mov    ecx,DWORD PTR [ebx+0x4]
100048a3:	push   DWORD PTR [ebp+0xc]
100048a6:	push   0x1
100048a8:	mov    esi,ebx
100048aa:	push   DWORD PTR [ebp+0x8]
100048ad:	call   0x10004e9b
100048b2:	mov    eax,DWORD PTR [ebp+0x8]
100048b5:	jmp    0x10004a04
100048ba:	mov    eax,DWORD PTR [ebx+0x4]
100048bd:	mov    eax,DWORD PTR [eax]
100048bf:	lea    edi,[ebp-0x10]
100048c2:	lea    esi,[ebp+0x10]
100048c5:	mov    DWORD PTR [ebp-0xc],eax
100048c8:	mov    DWORD PTR [ebp-0x10],ebx
100048cb:	call   0x100046f1
100048d0:	test   al,al
100048d2:	je     0x100048ee
100048d4:	mov    esi,DWORD PTR [ebp+0x14]
100048d7:	mov    eax,DWORD PTR [ebp+0xc]
100048da:	lea    ecx,[esi+0xc]
100048dd:	call   0x1000481d
100048e2:	test   al,al
100048e4:	je     0x100049e9
100048ea:	mov    ecx,esi
100048ec:	jmp    0x100048a3
100048ee:	mov    eax,DWORD PTR [ebx+0x4]
100048f1:	lea    edi,[ebp-0x10]
100048f4:	lea    esi,[ebp+0x10]
100048f7:	mov    DWORD PTR [ebp-0xc],eax
100048fa:	mov    DWORD PTR [ebp-0x10],ebx
100048fd:	call   0x100046f1
10004902:	test   al,al
10004904:	je     0x1000492f
10004906:	mov    eax,DWORD PTR [ebx+0x4]
10004909:	mov    eax,DWORD PTR [eax+0x8]
1000490c:	mov    ecx,DWORD PTR [ebp+0xc]
1000490f:	add    eax,0xc
10004912:	call   0x1000481d
10004917:	test   al,al
10004919:	je     0x100049e9
1000491f:	push   DWORD PTR [ebp+0xc]
10004922:	mov    eax,DWORD PTR [ebx+0x4]
10004925:	mov    ecx,DWORD PTR [eax+0x8]
10004928:	push   0x0
1000492a:	jmp    0x100048a8
1000492f:	mov    edi,DWORD PTR [ebp+0x14]
10004932:	mov    eax,DWORD PTR [ebp+0xc]
10004935:	lea    ecx,[edi+0xc]
10004938:	call   0x1000481d
1000493d:	test   al,al
1000493f:	je     0x10004985
10004941:	mov    eax,DWORD PTR [ebp+0x10]
10004944:	lea    esi,[ebp-0x8]
10004947:	mov    DWORD PTR [ebp-0x8],eax
1000494a:	mov    DWORD PTR [ebp-0x4],edi
1000494d:	call   0x10005316
10004952:	mov    eax,DWORD PTR [eax+0x4]
10004955:	mov    ecx,DWORD PTR [ebp+0xc]
10004958:	add    eax,0xc
1000495b:	call   0x1000481d
10004960:	test   al,al
10004962:	je     0x10004985
10004964:	mov    ecx,DWORD PTR [ebp-0x4]
10004967:	mov    eax,DWORD PTR [ecx+0x8]
1000496a:	cmp    BYTE PTR [eax+0x45],0x0
1000496e:	push   DWORD PTR [ebp+0xc]
10004971:	mov    esi,ebx
10004973:	je     0x1000497c
10004975:	push   0x0
10004977:	jmp    0x100048aa
1000497c:	push   0x1
1000497e:	mov    ecx,edi
10004980:	jmp    0x100048aa
10004985:	mov    ecx,DWORD PTR [ebp+0xc]
10004988:	lea    eax,[edi+0xc]
1000498b:	call   0x1000481d
10004990:	test   al,al
10004992:	je     0x100049e9
10004994:	mov    eax,DWORD PTR [ebp+0x10]
10004997:	mov    DWORD PTR [ebp-0x8],eax
1000499a:	mov    eax,DWORD PTR [ebx+0x4]
1000499d:	lea    esi,[ebp-0x8]
100049a0:	mov    DWORD PTR [ebp-0x4],edi
100049a3:	mov    DWORD PTR [ebp-0xc],eax
100049a6:	mov    DWORD PTR [ebp-0x10],ebx
100049a9:	call   0x10004fe6
100049ae:	lea    edi,[ebp-0x10]
100049b1:	mov    esi,eax
100049b3:	call   0x100046f1
100049b8:	test   al,al
100049ba:	jne    0x100049ce
100049bc:	mov    ecx,DWORD PTR [ebp-0x4]
100049bf:	mov    eax,DWORD PTR [ebp+0xc]
100049c2:	add    ecx,0xc
100049c5:	call   0x1000481d
100049ca:	test   al,al
100049cc:	je     0x100049e9
100049ce:	mov    ecx,DWORD PTR [ebp+0x14]
100049d1:	mov    eax,DWORD PTR [ecx+0x8]
100049d4:	cmp    BYTE PTR [eax+0x45],0x0
100049d8:	push   DWORD PTR [ebp+0xc]
100049db:	mov    esi,ebx
100049dd:	jne    0x10004975
100049df:	mov    ecx,DWORD PTR [ebp-0x4]
100049e2:	push   0x1
100049e4:	jmp    0x100048aa
100049e9:	push   DWORD PTR [ebp+0xc]
100049ec:	push   ebx
100049ed:	lea    ebx,[ebp-0x14]
100049f0:	call   0x10004dda
100049f5:	mov    edx,DWORD PTR [eax]
100049f7:	mov    ecx,DWORD PTR [ebp+0x8]
100049fa:	mov    DWORD PTR [ecx],edx
100049fc:	mov    eax,DWORD PTR [eax+0x4]
100049ff:	mov    DWORD PTR [ecx+0x4],eax
10004a02:	mov    eax,ecx
10004a04:	pop    edi
10004a05:	pop    esi
10004a06:	pop    ebx
10004a07:	leave  
10004a08:	ret    0x10
10004a0b:	push   ebp
10004a0c:	mov    ebp,esp
10004a0e:	push   ecx
10004a0f:	mov    eax,DWORD PTR [edi+0x4]
10004a12:	push   esi
10004a13:	mov    esi,DWORD PTR [eax+0x4]
10004a16:	mov    DWORD PTR [ebp-0x4],eax
10004a19:	jmp    0x10004a34
10004a1b:	mov    ecx,DWORD PTR [ebp+0x8]
10004a1e:	lea    eax,[esi+0xc]
10004a21:	call   0x1000481d
10004a26:	test   al,al
10004a28:	je     0x10004a2f
10004a2a:	mov    esi,DWORD PTR [esi+0x8]
10004a2d:	jmp    0x10004a34
10004a2f:	mov    DWORD PTR [ebp-0x4],esi
10004a32:	mov    esi,DWORD PTR [esi]
10004a34:	cmp    BYTE PTR [esi+0x45],0x0
10004a38:	je     0x10004a1b
10004a3a:	mov    eax,DWORD PTR [ebp-0x4]
10004a3d:	mov    DWORD PTR [ebx+0x4],eax
10004a40:	mov    DWORD PTR [ebx],edi
10004a42:	mov    eax,ebx
10004a44:	pop    esi
10004a45:	leave  
10004a46:	ret    0x4
10004a49:	push   ebp
10004a4a:	mov    ebp,esp
10004a4c:	push   esi
10004a4d:	mov    esi,eax
10004a4f:	cmp    DWORD PTR [esi+0x14],ebx
10004a52:	push   edi
10004a53:	jae    0x10004a5a
10004a55:	call   0x10056049
10004a5a:	mov    edi,DWORD PTR [esi+0x14]
10004a5d:	sub    edi,ebx
10004a5f:	cmp    DWORD PTR [ebp+0xc],edi
10004a62:	jae    0x10004a67
10004a64:	mov    edi,DWORD PTR [ebp+0xc]
10004a67:	mov    eax,DWORD PTR [ebp+0x8]
10004a6a:	cmp    eax,esi
10004a6c:	jne    0x10004a83
10004a6e:	push   0xffffffff
10004a70:	add    edi,ebx
10004a72:	mov    esi,eax
10004a74:	call   0x10005033
10004a79:	push   ebx
10004a7a:	xor    edi,edi
10004a7c:	call   0x10005033
10004a81:	jmp    0x10004ac6
10004a83:	call   0x100050c5
10004a88:	test   al,al
10004a8a:	je     0x10004ac6
10004a8c:	cmp    DWORD PTR [esi+0x18],0x8
10004a90:	jb     0x10004a97
10004a92:	mov    eax,DWORD PTR [esi+0x4]
10004a95:	jmp    0x10004a9a
10004a97:	lea    eax,[esi+0x4]
10004a9a:	mov    esi,DWORD PTR [ebp+0x8]
10004a9d:	mov    edx,DWORD PTR [esi+0x18]
10004aa0:	cmp    edx,0x8
10004aa3:	jb     0x10004aaa
10004aa5:	mov    ecx,DWORD PTR [esi+0x4]
10004aa8:	jmp    0x10004aad
10004aaa:	lea    ecx,[esi+0x4]
10004aad:	lea    eax,[eax+ebx*2]
10004ab0:	push   eax
10004ab1:	push   edx
10004ab2:	push   ecx
10004ab3:	mov    eax,edi
10004ab5:	call   0x10005e55
10004aba:	add    esp,0xc
10004abd:	mov    ecx,edi
10004abf:	mov    eax,esi
10004ac1:	call   0x100050ae
10004ac6:	mov    eax,DWORD PTR [ebp+0x8]
10004ac9:	pop    edi
10004aca:	pop    esi
10004acb:	pop    ebp
10004acc:	ret    0x8
10004acf:	mov    ecx,DWORD PTR [esi+0x18]
10004ad2:	cmp    ecx,0x8
10004ad5:	push   ebx
10004ad6:	push   edi
10004ad7:	mov    edi,eax
10004ad9:	lea    ebx,[esi+0x4]
10004adc:	jb     0x10004ae2
10004ade:	mov    eax,DWORD PTR [ebx]
10004ae0:	jmp    0x10004ae4
10004ae2:	mov    eax,ebx
10004ae4:	cmp    DWORD PTR [esp+0xc],eax
10004ae8:	jb     0x10004b1f
10004aea:	cmp    ecx,0x8
10004aed:	jb     0x10004af3
10004aef:	mov    eax,DWORD PTR [ebx]
10004af1:	jmp    0x10004af5
10004af3:	mov    eax,ebx
10004af5:	mov    edx,DWORD PTR [esi+0x14]
10004af8:	lea    eax,[eax+edx*2]
10004afb:	cmp    eax,DWORD PTR [esp+0xc]
10004aff:	jbe    0x10004b1f
10004b01:	cmp    ecx,0x8
10004b04:	jb     0x10004b0a
10004b06:	mov    eax,DWORD PTR [ebx]
10004b08:	jmp    0x10004b0c
10004b0a:	mov    eax,ebx
10004b0c:	mov    ebx,DWORD PTR [esp+0xc]
10004b10:	sub    ebx,eax
10004b12:	push   edi
10004b13:	sar    ebx,1
10004b15:	push   esi
10004b16:	mov    eax,esi
10004b18:	call   0x10004a49
10004b1d:	jmp    0x10004b4f
10004b1f:	mov    eax,esi
10004b21:	call   0x100050c5
10004b26:	test   al,al
10004b28:	je     0x10004b4d
10004b2a:	mov    eax,DWORD PTR [esi+0x18]
10004b2d:	cmp    eax,0x8
10004b30:	jb     0x10004b34
10004b32:	mov    ebx,DWORD PTR [ebx]
10004b34:	push   DWORD PTR [esp+0xc]
10004b38:	push   eax
10004b39:	push   ebx
10004b3a:	mov    eax,edi
10004b3c:	call   0x10005e55
10004b41:	add    esp,0xc
10004b44:	mov    ecx,edi
10004b46:	mov    eax,esi
10004b48:	call   0x100050ae
10004b4d:	mov    eax,esi
10004b4f:	pop    edi
10004b50:	pop    ebx
10004b51:	ret    0x4
10004b54:	cmp    BYTE PTR [esp+0x4],0x0
10004b59:	je     0x10004b83
10004b5b:	cmp    DWORD PTR [esi+0x18],0x8
10004b5f:	jb     0x10004b83
10004b61:	test   ebx,ebx
10004b63:	lea    eax,[esi+0x4]
10004b66:	push   edi
10004b67:	mov    edi,DWORD PTR [eax]
10004b69:	jbe    0x10004b7b
10004b6b:	lea    ecx,[ebx+ebx*1]
10004b6e:	push   ecx
10004b6f:	push   edi
10004b70:	push   0x10
10004b72:	push   eax
10004b73:	call   0x100422c5
10004b78:	add    esp,0x10
10004b7b:	push   edi
10004b7c:	call   0x10041d92
10004b81:	pop    ecx
10004b82:	pop    edi
10004b83:	mov    ecx,ebx
10004b85:	mov    eax,esi
10004b87:	mov    DWORD PTR [esi+0x18],0x7
10004b8e:	call   0x100050ae
10004b93:	ret    0x4
10004b96:	push   ebp
10004b97:	mov    ebp,esp
10004b99:	and    esp,0xfffffff8
10004b9c:	mov    eax,ds:0x1007fc04
10004ba1:	mov    edx,DWORD PTR [eax]
10004ba3:	sub    esp,0xc
10004ba6:	push   esi
10004ba7:	push   eax
10004ba8:	mov    ecx,0x1007fc00
10004bad:	mov    esi,ecx
10004baf:	push   esi
10004bb0:	push   edx
10004bb1:	push   ecx
10004bb2:	lea    eax,[esp+0x18]
10004bb6:	push   eax
10004bb7:	call   0x100055a2
10004bbc:	push   DWORD PTR ds:0x1007fc04
10004bc2:	call   0x10041d92
10004bc7:	and    DWORD PTR ds:0x1007fc04,0x0
10004bce:	and    DWORD PTR ds:0x1007fc08,0x0
10004bd5:	pop    ecx
10004bd6:	pop    esi
10004bd7:	mov    esp,ebp
10004bd9:	pop    ebp
10004bda:	ret    
10004bdb:	push   ebp
10004bdc:	mov    ebp,esp
10004bde:	sub    esp,0x14
10004be1:	push   ebx
10004be2:	mov    ebx,eax
10004be4:	xor    eax,eax
10004be6:	cmp    DWORD PTR [ebx+0x8],eax
10004be9:	push   esi
10004bea:	push   edi
10004beb:	mov    DWORD PTR [ebp-0x8],eax
10004bee:	mov    DWORD PTR [ebp-0x4],eax
10004bf1:	jne    0x10004c0d
10004bf3:	mov    ecx,DWORD PTR [ebx+0x4]
10004bf6:	push   DWORD PTR [ebp+0xc]
10004bf9:	push   0x1
10004bfb:	mov    esi,ebx
10004bfd:	push   DWORD PTR [ebp+0x8]
10004c00:	call   0x100051cb
10004c05:	mov    eax,DWORD PTR [ebp+0x8]
10004c08:	jmp    0x10004d57
10004c0d:	mov    eax,DWORD PTR [ebx+0x4]
10004c10:	mov    eax,DWORD PTR [eax]
10004c12:	lea    edi,[ebp-0x10]
10004c15:	lea    esi,[ebp+0x10]
10004c18:	mov    DWORD PTR [ebp-0xc],eax
10004c1b:	mov    DWORD PTR [ebp-0x10],ebx
10004c1e:	call   0x100046f1
10004c23:	test   al,al
10004c25:	je     0x10004c41
10004c27:	mov    esi,DWORD PTR [ebp+0x14]
10004c2a:	mov    eax,DWORD PTR [ebp+0xc]
10004c2d:	lea    ecx,[esi+0xc]
10004c30:	call   0x10004d9c
10004c35:	test   al,al
10004c37:	je     0x10004d3c
10004c3d:	mov    ecx,esi
10004c3f:	jmp    0x10004bf6
10004c41:	mov    eax,DWORD PTR [ebx+0x4]
10004c44:	lea    edi,[ebp-0x10]
10004c47:	lea    esi,[ebp+0x10]
10004c4a:	mov    DWORD PTR [ebp-0xc],eax
10004c4d:	mov    DWORD PTR [ebp-0x10],ebx
10004c50:	call   0x100046f1
10004c55:	test   al,al
10004c57:	je     0x10004c82
10004c59:	mov    eax,DWORD PTR [ebx+0x4]
10004c5c:	mov    eax,DWORD PTR [eax+0x8]
10004c5f:	mov    ecx,DWORD PTR [ebp+0xc]
10004c62:	add    eax,0xc
10004c65:	call   0x10004d9c
10004c6a:	test   al,al
10004c6c:	je     0x10004d3c
10004c72:	push   DWORD PTR [ebp+0xc]
10004c75:	mov    eax,DWORD PTR [ebx+0x4]
10004c78:	mov    ecx,DWORD PTR [eax+0x8]
10004c7b:	push   0x0
10004c7d:	jmp    0x10004bfb
10004c82:	mov    edi,DWORD PTR [ebp+0x14]
10004c85:	mov    eax,DWORD PTR [ebp+0xc]
10004c88:	lea    ecx,[edi+0xc]
10004c8b:	call   0x10004d9c
10004c90:	test   al,al
10004c92:	je     0x10004cd8
10004c94:	mov    eax,DWORD PTR [ebp+0x10]
10004c97:	lea    esi,[ebp-0x8]
10004c9a:	mov    DWORD PTR [ebp-0x8],eax
10004c9d:	mov    DWORD PTR [ebp-0x4],edi
10004ca0:	call   0x10005316
10004ca5:	mov    eax,DWORD PTR [eax+0x4]
10004ca8:	mov    ecx,DWORD PTR [ebp+0xc]
10004cab:	add    eax,0xc
10004cae:	call   0x10004d9c
10004cb3:	test   al,al
10004cb5:	je     0x10004cd8
10004cb7:	mov    ecx,DWORD PTR [ebp-0x4]
10004cba:	mov    eax,DWORD PTR [ecx+0x8]
10004cbd:	cmp    BYTE PTR [eax+0x45],0x0
10004cc1:	push   DWORD PTR [ebp+0xc]
10004cc4:	mov    esi,ebx
10004cc6:	je     0x10004ccf
10004cc8:	push   0x0
10004cca:	jmp    0x10004bfd
10004ccf:	push   0x1
10004cd1:	mov    ecx,edi
10004cd3:	jmp    0x10004bfd
10004cd8:	mov    ecx,DWORD PTR [ebp+0xc]
10004cdb:	lea    eax,[edi+0xc]
10004cde:	call   0x10004d9c
10004ce3:	test   al,al
10004ce5:	je     0x10004d3c
10004ce7:	mov    eax,DWORD PTR [ebp+0x10]
10004cea:	mov    DWORD PTR [ebp-0x8],eax
10004ced:	mov    eax,DWORD PTR [ebx+0x4]
10004cf0:	lea    esi,[ebp-0x8]
10004cf3:	mov    DWORD PTR [ebp-0x4],edi
10004cf6:	mov    DWORD PTR [ebp-0xc],eax
10004cf9:	mov    DWORD PTR [ebp-0x10],ebx
10004cfc:	call   0x10004fe6
10004d01:	lea    edi,[ebp-0x10]
10004d04:	mov    esi,eax
10004d06:	call   0x100046f1
10004d0b:	test   al,al
10004d0d:	jne    0x10004d21
10004d0f:	mov    ecx,DWORD PTR [ebp-0x4]
10004d12:	mov    eax,DWORD PTR [ebp+0xc]
10004d15:	add    ecx,0xc
10004d18:	call   0x10004d9c
10004d1d:	test   al,al
10004d1f:	je     0x10004d3c
10004d21:	mov    ecx,DWORD PTR [ebp+0x14]
10004d24:	mov    eax,DWORD PTR [ecx+0x8]
10004d27:	cmp    BYTE PTR [eax+0x45],0x0
10004d2b:	push   DWORD PTR [ebp+0xc]
10004d2e:	mov    esi,ebx
10004d30:	jne    0x10004cc8
10004d32:	mov    ecx,DWORD PTR [ebp-0x4]
10004d35:	push   0x1
10004d37:	jmp    0x10004bfd
10004d3c:	push   DWORD PTR [ebp+0xc]
10004d3f:	push   ebx
10004d40:	lea    ebx,[ebp-0x14]
10004d43:	call   0x1000510a
10004d48:	mov    edx,DWORD PTR [eax]
10004d4a:	mov    ecx,DWORD PTR [ebp+0x8]
10004d4d:	mov    DWORD PTR [ecx],edx
10004d4f:	mov    eax,DWORD PTR [eax+0x4]
10004d52:	mov    DWORD PTR [ecx+0x4],eax
10004d55:	mov    eax,ecx
10004d57:	pop    edi
10004d58:	pop    esi
10004d59:	pop    ebx
10004d5a:	leave  
10004d5b:	ret    0x10
10004d5e:	push   ebp
10004d5f:	mov    ebp,esp
10004d61:	push   ecx
10004d62:	mov    eax,DWORD PTR [edi+0x4]
10004d65:	push   esi
10004d66:	mov    esi,DWORD PTR [eax+0x4]
10004d69:	mov    DWORD PTR [ebp-0x4],eax
10004d6c:	jmp    0x10004d87
10004d6e:	mov    ecx,DWORD PTR [ebp+0x8]
10004d71:	lea    eax,[esi+0xc]
10004d74:	call   0x10004d9c
10004d79:	test   al,al
10004d7b:	je     0x10004d82
10004d7d:	mov    esi,DWORD PTR [esi+0x8]
10004d80:	jmp    0x10004d87
10004d82:	mov    DWORD PTR [ebp-0x4],esi
10004d85:	mov    esi,DWORD PTR [esi]
10004d87:	cmp    BYTE PTR [esi+0x45],0x0
10004d8b:	je     0x10004d6e
10004d8d:	mov    eax,DWORD PTR [ebp-0x4]
10004d90:	mov    DWORD PTR [ebx+0x4],eax
10004d93:	mov    DWORD PTR [ebx],edi
10004d95:	mov    eax,ebx
10004d97:	pop    esi
10004d98:	leave  
10004d99:	ret    0x4
10004d9c:	cmp    DWORD PTR [ecx+0x18],0x8
10004da0:	push   edi
10004da1:	mov    edi,DWORD PTR [ecx+0x14]
10004da4:	jb     0x10004dab
10004da6:	mov    ecx,DWORD PTR [ecx+0x4]
10004da9:	jmp    0x10004dae
10004dab:	add    ecx,0x4
10004dae:	push   ecx
10004daf:	mov    ecx,DWORD PTR [eax+0x14]
10004db2:	call   0x10005eb3
10004db7:	xor    ecx,ecx
10004db9:	test   eax,eax
10004dbb:	setl   cl
10004dbe:	mov    al,cl
10004dc0:	pop    edi
10004dc1:	ret    
10004dc2:	push   esi
10004dc3:	push   DWORD PTR [esp+0x8]
10004dc7:	mov    esi,ecx
10004dc9:	call   0x10001126
10004dce:	mov    DWORD PTR [esi],0x1006a77c
10004dd4:	mov    eax,esi
10004dd6:	pop    esi
10004dd7:	ret    0x4
10004dda:	push   ebp
10004ddb:	mov    ebp,esp
10004ddd:	sub    esp,0x18
10004de0:	push   esi
10004de1:	mov    esi,DWORD PTR [ebp+0x8]
10004de4:	mov    eax,DWORD PTR [esi+0x4]
10004de7:	push   edi
10004de8:	mov    edi,DWORD PTR [eax+0x4]
10004deb:	mov    DWORD PTR [ebp-0x4],eax
10004dee:	mov    al,0x1
10004df0:	mov    BYTE PTR [ebp-0x8],al
10004df3:	jmp    0x10004e11
10004df5:	mov    eax,DWORD PTR [ebp+0xc]
10004df8:	lea    ecx,[edi+0xc]
10004dfb:	mov    DWORD PTR [ebp-0x4],edi
10004dfe:	call   0x1000481d
10004e03:	test   al,al
10004e05:	mov    BYTE PTR [ebp-0x8],al
10004e08:	je     0x10004e0e
10004e0a:	mov    edi,DWORD PTR [edi]
10004e0c:	jmp    0x10004e11
10004e0e:	mov    edi,DWORD PTR [edi+0x8]
10004e11:	cmp    BYTE PTR [edi+0x45],0x0
10004e15:	je     0x10004df5
10004e17:	test   al,al
10004e19:	mov    edi,DWORD PTR [ebp-0x4]
10004e1c:	mov    DWORD PTR [ebp-0xc],edi
10004e1f:	mov    DWORD PTR [ebp-0x10],esi
10004e22:	je     0x10004e70
10004e24:	mov    eax,DWORD PTR [esi+0x4]
10004e27:	mov    eax,DWORD PTR [eax]
10004e29:	mov    DWORD PTR [ebp-0x18],esi
10004e2c:	lea    edi,[ebp-0x18]
10004e2f:	lea    esi,[ebp-0x10]
10004e32:	mov    DWORD PTR [ebp-0x14],eax
10004e35:	call   0x100046f1
10004e3a:	test   al,al
10004e3c:	je     0x10004e62
10004e3e:	push   DWORD PTR [ebp+0xc]
10004e41:	mov    esi,DWORD PTR [ebp+0x8]
10004e44:	push   0x1
10004e46:	mov    ecx,DWORD PTR [ebp-0x4]
10004e49:	lea    eax,[ebp-0x18]
10004e4c:	push   eax
10004e4d:	call   0x10004e9b
10004e52:	mov    ecx,DWORD PTR [eax]
10004e54:	mov    eax,DWORD PTR [eax+0x4]
10004e57:	mov    DWORD PTR [ebx],ecx
10004e59:	mov    DWORD PTR [ebx+0x4],eax
10004e5c:	mov    BYTE PTR [ebx+0x8],0x1
10004e60:	jmp    0x10004e93
10004e62:	lea    esi,[ebp-0x10]
10004e65:	call   0x10005316
10004e6a:	mov    edi,DWORD PTR [ebp-0xc]
10004e6d:	mov    esi,DWORD PTR [ebp+0x8]
10004e70:	mov    ecx,DWORD PTR [ebp+0xc]
10004e73:	lea    eax,[edi+0xc]
10004e76:	call   0x1000481d
10004e7b:	test   al,al
10004e7d:	je     0x10004e87
10004e7f:	push   DWORD PTR [ebp+0xc]
10004e82:	push   DWORD PTR [ebp-0x8]
10004e85:	jmp    0x10004e46
10004e87:	mov    eax,DWORD PTR [ebp-0x10]
10004e8a:	mov    DWORD PTR [ebx],eax
10004e8c:	mov    DWORD PTR [ebx+0x4],edi
10004e8f:	mov    BYTE PTR [ebx+0x8],0x0
10004e93:	pop    edi
10004e94:	mov    eax,ebx
10004e96:	pop    esi
10004e97:	leave  
10004e98:	ret    0x8
10004e9b:	push   0x48
10004e9d:	mov    eax,0x1005f147
10004ea2:	call   0x10058845
10004ea7:	mov    edi,ecx
10004ea9:	cmp    DWORD PTR [esi+0x8],0x4924923
10004eb0:	jb     0x10004ee4
10004eb2:	push   0x1006bcb4
10004eb7:	lea    ecx,[ebp-0x2c]
10004eba:	call   0x100011d6
10004ebf:	and    DWORD PTR [ebp-0x4],0x0
10004ec3:	lea    eax,[ebp-0x2c]
10004ec6:	push   eax
10004ec7:	lea    ecx,[ebp-0x54]
10004eca:	call   0x10001065
10004ecf:	push   0x10073960
10004ed4:	lea    eax,[ebp-0x54]
10004ed7:	push   eax
10004ed8:	mov    DWORD PTR [ebp-0x54],0x1006a77c
10004edf:	call   0x10046704
10004ee4:	push   DWORD PTR [ebp+0x10]
10004ee7:	mov    eax,DWORD PTR [esi+0x4]
10004eea:	push   eax
10004eeb:	push   edi
10004eec:	push   eax
10004eed:	call   0x10005473
10004ef2:	inc    DWORD PTR [esi+0x8]
10004ef5:	mov    ebx,eax
10004ef7:	mov    eax,DWORD PTR [esi+0x4]
10004efa:	cmp    edi,eax
10004efc:	jne    0x10004f0b
10004efe:	mov    DWORD PTR [eax+0x4],ebx
10004f01:	mov    eax,DWORD PTR [esi+0x4]
10004f04:	mov    DWORD PTR [eax],ebx
10004f06:	mov    eax,DWORD PTR [esi+0x4]
10004f09:	jmp    0x10004f29
10004f0b:	cmp    BYTE PTR [ebp+0xc],0x0
10004f0f:	je     0x10004f1e
10004f11:	mov    DWORD PTR [edi],ebx
10004f13:	mov    eax,DWORD PTR [esi+0x4]
10004f16:	cmp    edi,DWORD PTR [eax]
10004f18:	jne    0x10004f2c
10004f1a:	mov    DWORD PTR [eax],ebx
10004f1c:	jmp    0x10004f2c
10004f1e:	mov    DWORD PTR [edi+0x8],ebx
10004f21:	mov    eax,DWORD PTR [esi+0x4]
10004f24:	cmp    edi,DWORD PTR [eax+0x8]
10004f27:	jne    0x10004f2c
10004f29:	mov    DWORD PTR [eax+0x8],ebx
10004f2c:	mov    edi,ebx
10004f2e:	lea    eax,[ebx+0x4]
10004f31:	jmp    0x10004fc0
10004f36:	mov    ecx,DWORD PTR [eax]
10004f38:	mov    edx,DWORD PTR [ecx+0x4]
10004f3b:	cmp    ecx,DWORD PTR [edx]
10004f3d:	jne    0x10004f74
10004f3f:	mov    edx,DWORD PTR [edx+0x8]
10004f42:	cmp    BYTE PTR [edx+0x44],0x0
10004f46:	je     0x10004f7c
10004f48:	cmp    edi,DWORD PTR [ecx+0x8]
10004f4b:	jne    0x10004f55
10004f4d:	push   esi
10004f4e:	mov    edi,ecx
10004f50:	call   0x10005433
10004f55:	mov    eax,DWORD PTR [edi+0x4]
10004f58:	mov    BYTE PTR [eax+0x44],0x1
10004f5c:	mov    eax,DWORD PTR [edi+0x4]
10004f5f:	mov    eax,DWORD PTR [eax+0x4]
10004f62:	mov    BYTE PTR [eax+0x44],0x0
10004f66:	mov    eax,DWORD PTR [edi+0x4]
10004f69:	mov    ecx,DWORD PTR [eax+0x4]
10004f6c:	push   esi
10004f6d:	call   0x1000565e
10004f72:	jmp    0x10004fbd
10004f74:	mov    edx,DWORD PTR [edx]
10004f76:	cmp    BYTE PTR [edx+0x44],0x0
10004f7a:	jne    0x10004f94
10004f7c:	mov    BYTE PTR [ecx+0x44],0x1
10004f80:	mov    BYTE PTR [edx+0x44],0x1
10004f84:	mov    ecx,DWORD PTR [eax]
10004f86:	mov    ecx,DWORD PTR [ecx+0x4]
10004f89:	mov    BYTE PTR [ecx+0x44],0x0
10004f8d:	mov    eax,DWORD PTR [eax]
10004f8f:	mov    edi,DWORD PTR [eax+0x4]
10004f92:	jmp    0x10004fbd
10004f94:	cmp    edi,DWORD PTR [ecx]
10004f96:	jne    0x10004fa0
10004f98:	push   esi
10004f99:	mov    edi,ecx
10004f9b:	call   0x1000565e
10004fa0:	mov    eax,DWORD PTR [edi+0x4]
10004fa3:	mov    BYTE PTR [eax+0x44],0x1
10004fa7:	mov    eax,DWORD PTR [edi+0x4]
10004faa:	mov    eax,DWORD PTR [eax+0x4]
10004fad:	mov    BYTE PTR [eax+0x44],0x0
10004fb1:	mov    eax,DWORD PTR [edi+0x4]
10004fb4:	mov    ecx,DWORD PTR [eax+0x4]
10004fb7:	push   esi
10004fb8:	call   0x10005433
10004fbd:	lea    eax,[edi+0x4]
10004fc0:	mov    ecx,DWORD PTR [eax]
10004fc2:	cmp    BYTE PTR [ecx+0x44],0x0
10004fc6:	je     0x10004f36
10004fcc:	mov    eax,DWORD PTR [esi+0x4]
10004fcf:	mov    eax,DWORD PTR [eax+0x4]
10004fd2:	mov    BYTE PTR [eax+0x44],0x1
10004fd6:	mov    eax,DWORD PTR [ebp+0x8]
10004fd9:	mov    DWORD PTR [eax+0x4],ebx
10004fdc:	mov    DWORD PTR [eax],esi
10004fde:	call   0x1005891d
10004fe3:	ret    0xc
10004fe6:	push   ebx
10004fe7:	xor    ebx,ebx
10004fe9:	cmp    DWORD PTR [esi],ebx
10004feb:	jne    0x10004ff2
10004fed:	call   0x100422b0
10004ff2:	mov    eax,DWORD PTR [esi+0x4]
10004ff5:	cmp    BYTE PTR [eax+0x45],bl
10004ff8:	je     0x10005001
10004ffa:	call   0x100422b0
10004fff:	jmp    0x1000502f
10005001:	mov    ecx,DWORD PTR [eax+0x8]
10005004:	cmp    BYTE PTR [ecx+0x45],bl
10005007:	jne    0x10005024
10005009:	jmp    0x1000500d
1000500b:	mov    ecx,eax
1000500d:	mov    eax,DWORD PTR [ecx]
1000500f:	cmp    BYTE PTR [eax+0x45],bl
10005012:	je     0x1000500b
10005014:	mov    DWORD PTR [esi+0x4],ecx
10005017:	jmp    0x1000502f
10005019:	mov    ecx,DWORD PTR [esi+0x4]
1000501c:	cmp    ecx,DWORD PTR [eax+0x8]
1000501f:	jne    0x1000502c
10005021:	mov    DWORD PTR [esi+0x4],eax
10005024:	mov    eax,DWORD PTR [eax+0x4]
10005027:	cmp    BYTE PTR [eax+0x45],bl
1000502a:	je     0x10005019
1000502c:	mov    DWORD PTR [esi+0x4],eax
1000502f:	mov    eax,esi
10005031:	pop    ebx
10005032:	ret    
10005033:	push   ebp
10005034:	mov    ebp,esp
10005036:	push   ecx
10005037:	push   ecx
10005038:	cmp    DWORD PTR [esi+0x14],edi
1000503b:	jae    0x10005042
1000503d:	call   0x10056049
10005042:	mov    eax,DWORD PTR [esi+0x14]
10005045:	sub    eax,edi
10005047:	cmp    eax,DWORD PTR [ebp+0x8]
1000504a:	jae    0x1000504f
1000504c:	mov    DWORD PTR [ebp+0x8],eax
1000504f:	cmp    DWORD PTR [ebp+0x8],0x0
10005053:	jbe    0x100050a8
10005055:	mov    ecx,DWORD PTR [esi+0x18]
10005058:	cmp    ecx,0x8
1000505b:	push   ebx
1000505c:	lea    edx,[esi+0x4]
1000505f:	jb     0x10005068
10005061:	mov    ebx,DWORD PTR [edx]
10005063:	mov    DWORD PTR [ebp-0x4],ebx
10005066:	jmp    0x1000506b
10005068:	mov    DWORD PTR [ebp-0x4],edx
1000506b:	cmp    ecx,0x8
1000506e:	jb     0x10005072
10005070:	mov    edx,DWORD PTR [edx]
10005072:	mov    ebx,DWORD PTR [ebp+0x8]
10005075:	sub    eax,ebx
10005077:	add    eax,eax
10005079:	push   eax
1000507a:	mov    DWORD PTR [ebp-0x8],edx
1000507d:	mov    edx,DWORD PTR [ebp-0x4]
10005080:	lea    eax,[edi+ebx*1]
10005083:	lea    eax,[edx+eax*2]
10005086:	push   eax
10005087:	mov    eax,DWORD PTR [ebp-0x8]
1000508a:	sub    ecx,edi
1000508c:	add    ecx,ecx
1000508e:	push   ecx
1000508f:	lea    eax,[eax+edi*2]
10005092:	push   eax
10005093:	call   0x10041da6
10005098:	mov    ecx,DWORD PTR [esi+0x14]
1000509b:	add    esp,0x10
1000509e:	sub    ecx,ebx
100050a0:	mov    eax,esi
100050a2:	call   0x100050ae
100050a7:	pop    ebx
100050a8:	mov    eax,esi
100050aa:	leave  
100050ab:	ret    0x4
100050ae:	cmp    DWORD PTR [eax+0x18],0x8
100050b2:	mov    DWORD PTR [eax+0x14],ecx
100050b5:	jb     0x100050bc
100050b7:	mov    eax,DWORD PTR [eax+0x4]
100050ba:	jmp    0x100050bf
100050bc:	add    eax,0x4
100050bf:	and    WORD PTR [eax+ecx*2],0x0
100050c4:	ret    
100050c5:	cmp    edi,0x7ffffffe
100050cb:	push   esi
100050cc:	mov    esi,eax
100050ce:	jbe    0x100050d5
100050d0:	call   0x1005600a
100050d5:	mov    eax,DWORD PTR [esi+0x18]
100050d8:	cmp    eax,edi
100050da:	jae    0x100050e8
100050dc:	push   DWORD PTR [esi+0x14]
100050df:	push   edi
100050e0:	push   esi
100050e1:	call   0x100054c5
100050e6:	jmp    0x10005100
100050e8:	test   edi,edi
100050ea:	jne    0x10005100
100050ec:	and    DWORD PTR [esi+0x14],edi
100050ef:	cmp    eax,0x8
100050f2:	jb     0x100050f9
100050f4:	mov    esi,DWORD PTR [esi+0x4]
100050f7:	jmp    0x100050fc
100050f9:	add    esi,0x4
100050fc:	and    WORD PTR [esi],0x0
10005100:	xor    eax,eax
10005102:	cmp    eax,edi
10005104:	sbb    eax,eax
10005106:	neg    eax
10005108:	pop    esi
10005109:	ret    
1000510a:	push   ebp
1000510b:	mov    ebp,esp
1000510d:	sub    esp,0x18
10005110:	push   esi
10005111:	mov    esi,DWORD PTR [ebp+0x8]
10005114:	mov    eax,DWORD PTR [esi+0x4]
10005117:	push   edi
10005118:	mov    edi,DWORD PTR [eax+0x4]
1000511b:	mov    DWORD PTR [ebp-0x4],eax
1000511e:	mov    al,0x1
10005120:	mov    BYTE PTR [ebp-0x8],al
10005123:	jmp    0x10005141
10005125:	mov    eax,DWORD PTR [ebp+0xc]
10005128:	lea    ecx,[edi+0xc]
1000512b:	mov    DWORD PTR [ebp-0x4],edi
1000512e:	call   0x10004d9c
10005133:	test   al,al
10005135:	mov    BYTE PTR [ebp-0x8],al
10005138:	je     0x1000513e
1000513a:	mov    edi,DWORD PTR [edi]
1000513c:	jmp    0x10005141
1000513e:	mov    edi,DWORD PTR [edi+0x8]
10005141:	cmp    BYTE PTR [edi+0x45],0x0
10005145:	je     0x10005125
10005147:	test   al,al
10005149:	mov    edi,DWORD PTR [ebp-0x4]
1000514c:	mov    DWORD PTR [ebp-0xc],edi
1000514f:	mov    DWORD PTR [ebp-0x10],esi
10005152:	je     0x100051a0
10005154:	mov    eax,DWORD PTR [esi+0x4]
10005157:	mov    eax,DWORD PTR [eax]
10005159:	mov    DWORD PTR [ebp-0x18],esi
1000515c:	lea    edi,[ebp-0x18]
1000515f:	lea    esi,[ebp-0x10]
10005162:	mov    DWORD PTR [ebp-0x14],eax
10005165:	call   0x100046f1
1000516a:	test   al,al
1000516c:	je     0x10005192
1000516e:	push   DWORD PTR [ebp+0xc]
10005171:	mov    esi,DWORD PTR [ebp+0x8]
10005174:	push   0x1
10005176:	mov    ecx,DWORD PTR [ebp-0x4]
10005179:	lea    eax,[ebp-0x18]
1000517c:	push   eax
1000517d:	call   0x100051cb
10005182:	mov    ecx,DWORD PTR [eax]
10005184:	mov    eax,DWORD PTR [eax+0x4]
10005187:	mov    DWORD PTR [ebx],ecx
10005189:	mov    DWORD PTR [ebx+0x4],eax
1000518c:	mov    BYTE PTR [ebx+0x8],0x1
10005190:	jmp    0x100051c3
10005192:	lea    esi,[ebp-0x10]
10005195:	call   0x10005316
1000519a:	mov    edi,DWORD PTR [ebp-0xc]
1000519d:	mov    esi,DWORD PTR [ebp+0x8]
100051a0:	mov    ecx,DWORD PTR [ebp+0xc]
100051a3:	lea    eax,[edi+0xc]
100051a6:	call   0x10004d9c
100051ab:	test   al,al
100051ad:	je     0x100051b7
100051af:	push   DWORD PTR [ebp+0xc]
100051b2:	push   DWORD PTR [ebp-0x8]
100051b5:	jmp    0x10005176
100051b7:	mov    eax,DWORD PTR [ebp-0x10]
100051ba:	mov    DWORD PTR [ebx],eax
100051bc:	mov    DWORD PTR [ebx+0x4],edi
100051bf:	mov    BYTE PTR [ebx+0x8],0x0
100051c3:	pop    edi
100051c4:	mov    eax,ebx
100051c6:	pop    esi
100051c7:	leave  
100051c8:	ret    0x8
100051cb:	push   0x48
100051cd:	mov    eax,0x1005f147
100051d2:	call   0x10058845
100051d7:	mov    edi,ecx
100051d9:	cmp    DWORD PTR [esi+0x8],0x4924923
100051e0:	jb     0x10005214
100051e2:	push   0x1006bcb4
100051e7:	lea    ecx,[ebp-0x2c]
100051ea:	call   0x100011d6
100051ef:	and    DWORD PTR [ebp-0x4],0x0
100051f3:	lea    eax,[ebp-0x2c]
100051f6:	push   eax
100051f7:	lea    ecx,[ebp-0x54]
100051fa:	call   0x10001065
100051ff:	push   0x10073960
10005204:	lea    eax,[ebp-0x54]
10005207:	push   eax
10005208:	mov    DWORD PTR [ebp-0x54],0x1006a77c
1000520f:	call   0x10046704
10005214:	push   DWORD PTR [ebp+0x10]
10005217:	mov    eax,DWORD PTR [esi+0x4]
1000521a:	push   eax
1000521b:	push   edi
1000521c:	push   eax
1000521d:	call   0x100056a0
10005222:	inc    DWORD PTR [esi+0x8]
10005225:	mov    ebx,eax
10005227:	mov    eax,DWORD PTR [esi+0x4]
1000522a:	cmp    edi,eax
1000522c:	jne    0x1000523b
1000522e:	mov    DWORD PTR [eax+0x4],ebx
10005231:	mov    eax,DWORD PTR [esi+0x4]
10005234:	mov    DWORD PTR [eax],ebx
10005236:	mov    eax,DWORD PTR [esi+0x4]
10005239:	jmp    0x10005259
1000523b:	cmp    BYTE PTR [ebp+0xc],0x0
1000523f:	je     0x1000524e
10005241:	mov    DWORD PTR [edi],ebx
10005243:	mov    eax,DWORD PTR [esi+0x4]
10005246:	cmp    edi,DWORD PTR [eax]
10005248:	jne    0x1000525c
1000524a:	mov    DWORD PTR [eax],ebx
1000524c:	jmp    0x1000525c
1000524e:	mov    DWORD PTR [edi+0x8],ebx
10005251:	mov    eax,DWORD PTR [esi+0x4]
10005254:	cmp    edi,DWORD PTR [eax+0x8]
10005257:	jne    0x1000525c
10005259:	mov    DWORD PTR [eax+0x8],ebx
1000525c:	mov    edi,ebx
1000525e:	lea    eax,[ebx+0x4]
10005261:	jmp    0x100052f0
10005266:	mov    ecx,DWORD PTR [eax]
10005268:	mov    edx,DWORD PTR [ecx+0x4]
1000526b:	cmp    ecx,DWORD PTR [edx]
1000526d:	jne    0x100052a4
1000526f:	mov    edx,DWORD PTR [edx+0x8]
10005272:	cmp    BYTE PTR [edx+0x44],0x0
10005276:	je     0x100052ac
10005278:	cmp    edi,DWORD PTR [ecx+0x8]
1000527b:	jne    0x10005285
1000527d:	push   esi
1000527e:	mov    edi,ecx
10005280:	call   0x10005433
10005285:	mov    eax,DWORD PTR [edi+0x4]
10005288:	mov    BYTE PTR [eax+0x44],0x1
1000528c:	mov    eax,DWORD PTR [edi+0x4]
1000528f:	mov    eax,DWORD PTR [eax+0x4]
10005292:	mov    BYTE PTR [eax+0x44],0x0
10005296:	mov    eax,DWORD PTR [edi+0x4]
10005299:	mov    ecx,DWORD PTR [eax+0x4]
1000529c:	push   esi
1000529d:	call   0x1000565e
100052a2:	jmp    0x100052ed
100052a4:	mov    edx,DWORD PTR [edx]
100052a6:	cmp    BYTE PTR [edx+0x44],0x0
100052aa:	jne    0x100052c4
100052ac:	mov    BYTE PTR [ecx+0x44],0x1
100052b0:	mov    BYTE PTR [edx+0x44],0x1
100052b4:	mov    ecx,DWORD PTR [eax]
100052b6:	mov    ecx,DWORD PTR [ecx+0x4]
100052b9:	mov    BYTE PTR [ecx+0x44],0x0
100052bd:	mov    eax,DWORD PTR [eax]
100052bf:	mov    edi,DWORD PTR [eax+0x4]
100052c2:	jmp    0x100052ed
100052c4:	cmp    edi,DWORD PTR [ecx]
100052c6:	jne    0x100052d0
100052c8:	push   esi
100052c9:	mov    edi,ecx
100052cb:	call   0x1000565e
100052d0:	mov    eax,DWORD PTR [edi+0x4]
100052d3:	mov    BYTE PTR [eax+0x44],0x1
100052d7:	mov    eax,DWORD PTR [edi+0x4]
100052da:	mov    eax,DWORD PTR [eax+0x4]
100052dd:	mov    BYTE PTR [eax+0x44],0x0
100052e1:	mov    eax,DWORD PTR [edi+0x4]
100052e4:	mov    ecx,DWORD PTR [eax+0x4]
100052e7:	push   esi
100052e8:	call   0x10005433
100052ed:	lea    eax,[edi+0x4]
100052f0:	mov    ecx,DWORD PTR [eax]
100052f2:	cmp    BYTE PTR [ecx+0x44],0x0
100052f6:	je     0x10005266
100052fc:	mov    eax,DWORD PTR [esi+0x4]
100052ff:	mov    eax,DWORD PTR [eax+0x4]
10005302:	mov    BYTE PTR [eax+0x44],0x1
10005306:	mov    eax,DWORD PTR [ebp+0x8]
10005309:	mov    DWORD PTR [eax+0x4],ebx
1000530c:	mov    DWORD PTR [eax],esi
1000530e:	call   0x1005891d
10005313:	ret    0xc
10005316:	push   ebx
10005317:	xor    ebx,ebx
10005319:	cmp    DWORD PTR [esi],ebx
1000531b:	jne    0x10005322
1000531d:	call   0x100422b0
10005322:	mov    eax,DWORD PTR [esi+0x4]
10005325:	cmp    BYTE PTR [eax+0x45],bl
10005328:	je     0x10005337
1000532a:	mov    eax,DWORD PTR [eax+0x8]
1000532d:	mov    DWORD PTR [esi+0x4],eax
10005330:	cmp    BYTE PTR [eax+0x45],bl
10005333:	je     0x10005373
10005335:	jmp    0x10005369
10005337:	mov    ecx,DWORD PTR [eax]
10005339:	cmp    BYTE PTR [ecx+0x45],bl
1000533c:	jne    0x10005359
1000533e:	jmp    0x10005342
10005340:	mov    ecx,eax
10005342:	mov    eax,DWORD PTR [ecx+0x8]
10005345:	cmp    BYTE PTR [eax+0x45],bl
10005348:	je     0x10005340
1000534a:	mov    DWORD PTR [esi+0x4],ecx
1000534d:	jmp    0x10005373
1000534f:	mov    ecx,DWORD PTR [esi+0x4]
10005352:	cmp    ecx,DWORD PTR [eax]
10005354:	jne    0x10005361
10005356:	mov    DWORD PTR [esi+0x4],eax
10005359:	mov    eax,DWORD PTR [eax+0x4]
1000535c:	cmp    BYTE PTR [eax+0x45],bl
1000535f:	je     0x1000534f
10005361:	mov    ecx,DWORD PTR [esi+0x4]
10005364:	cmp    BYTE PTR [ecx+0x45],bl
10005367:	je     0x10005370
10005369:	call   0x100422b0
1000536e:	jmp    0x10005373
10005370:	mov    DWORD PTR [esi+0x4],eax
10005373:	mov    eax,esi
10005375:	pop    ebx
10005376:	ret    
10005377:	push   ebp
10005378:	mov    ebp,esp
1000537a:	sub    esp,0x10
1000537d:	mov    eax,ds:0x1007fc10
10005382:	mov    eax,DWORD PTR [eax]
10005384:	push   ebx
10005385:	push   esi
10005386:	push   edi
10005387:	mov    ebx,0x1007fc0c
1000538c:	lea    edi,[ebp-0xc]
1000538f:	lea    esi,[ebp+0xc]
10005392:	mov    DWORD PTR [ebp-0x8],eax
10005395:	mov    DWORD PTR [ebp-0xc],ebx
10005398:	call   0x100046f1
1000539d:	test   al,al
1000539f:	je     0x1000540f
100053a1:	mov    eax,ds:0x1007fc10
100053a6:	lea    edi,[ebp-0xc]
100053a9:	lea    esi,[ebp+0x14]
100053ac:	mov    DWORD PTR [ebp-0x8],eax
100053af:	mov    DWORD PTR [ebp-0xc],ebx
100053b2:	call   0x100046f1
100053b7:	test   al,al
100053b9:	je     0x1000540f
100053bb:	mov    eax,ds:0x1007fc10
100053c0:	push   DWORD PTR [eax+0x4]
100053c3:	mov    ecx,ebx
100053c5:	call   0x10005d3d
100053ca:	mov    eax,ds:0x1007fc10
100053cf:	mov    DWORD PTR [eax+0x4],eax
100053d2:	mov    eax,ds:0x1007fc10
100053d7:	and    DWORD PTR ds:0x1007fc14,0x0
100053de:	mov    DWORD PTR [eax],eax
100053e0:	mov    eax,ds:0x1007fc10
100053e5:	mov    DWORD PTR [eax+0x8],eax
100053e8:	mov    eax,ds:0x1007fc10
100053ed:	mov    ecx,DWORD PTR [eax]
100053ef:	mov    eax,DWORD PTR [ebp+0x8]
100053f2:	mov    DWORD PTR [eax],ebx
100053f4:	jmp    0x10005429
100053f6:	mov    edi,DWORD PTR [ebp+0xc]
100053f9:	mov    ebx,DWORD PTR [ebp+0x10]
100053fc:	lea    esi,[ebp+0xc]
100053ff:	call   0x10004fe6
10005404:	push   ebx
10005405:	push   edi
10005406:	lea    eax,[ebp-0xc]
10005409:	push   eax
1000540a:	call   0x100056f2
1000540f:	lea    edi,[ebp+0x14]
10005412:	lea    esi,[ebp+0xc]
10005415:	call   0x100046f1
1000541a:	test   al,al
1000541c:	je     0x100053f6
1000541e:	mov    ecx,DWORD PTR [ebp+0xc]
10005421:	mov    eax,DWORD PTR [ebp+0x8]
10005424:	mov    DWORD PTR [eax],ecx
10005426:	mov    ecx,DWORD PTR [ebp+0x10]
10005429:	pop    edi
1000542a:	pop    esi
1000542b:	mov    DWORD PTR [eax+0x4],ecx
1000542e:	pop    ebx
1000542f:	leave  
10005430:	ret    0x14
10005433:	mov    eax,DWORD PTR [ecx+0x8]
10005436:	mov    edx,DWORD PTR [eax]
10005438:	mov    DWORD PTR [ecx+0x8],edx
1000543b:	mov    edx,DWORD PTR [eax]
1000543d:	cmp    BYTE PTR [edx+0x45],0x0
10005441:	jne    0x10005446
10005443:	mov    DWORD PTR [edx+0x4],ecx
10005446:	mov    edx,DWORD PTR [ecx+0x4]
10005449:	mov    DWORD PTR [eax+0x4],edx
1000544c:	mov    edx,DWORD PTR [esp+0x4]
10005450:	mov    edx,DWORD PTR [edx+0x4]
10005453:	cmp    ecx,DWORD PTR [edx+0x4]
10005456:	jne    0x1000545d
10005458:	mov    DWORD PTR [edx+0x4],eax
1000545b:	jmp    0x1000546b
1000545d:	mov    edx,DWORD PTR [ecx+0x4]
10005460:	cmp    ecx,DWORD PTR [edx]
10005462:	jne    0x10005468
10005464:	mov    DWORD PTR [edx],eax
10005466:	jmp    0x1000546b
10005468:	mov    DWORD PTR [edx+0x8],eax
1000546b:	mov    DWORD PTR [eax],ecx
1000546d:	mov    DWORD PTR [ecx+0x4],eax
10005470:	ret    0x4
10005473:	push   0x8
10005475:	mov    eax,0x1005ea98
1000547a:	call   0x10058878
1000547f:	push   0x48
10005481:	call   0x1004239e
10005486:	mov    esi,eax
10005488:	pop    ecx
10005489:	mov    DWORD PTR [ebp-0x14],esi
1000548c:	test   esi,esi
1000548e:	mov    DWORD PTR [ebp-0x4],0x1
10005495:	je     0x100054a8
10005497:	push   DWORD PTR [ebp+0x10]
1000549a:	mov    ecx,DWORD PTR [ebp+0x14]
1000549d:	push   DWORD PTR [ebp+0xc]
100054a0:	push   DWORD PTR [ebp+0x8]
100054a3:	call   0x10005ca3
100054a8:	mov    eax,esi
100054aa:	call   0x1005891d
100054af:	ret    0x10
100054b2:	push   DWORD PTR [ebp-0x14]
100054b5:	call   0x10041d92
100054ba:	pop    ecx
100054bb:	push   0x0
100054bd:	push   0x0
100054bf:	call   0x10046704
100054c4:	int3   
100054c5:	push   0x8
100054c7:	mov    eax,0x1005ea78
100054cc:	call   0x10058878
100054d1:	mov    esi,DWORD PTR [ebp+0x8]
100054d4:	mov    edi,DWORD PTR [ebp+0xc]
100054d7:	or     edi,0x7
100054da:	cmp    edi,0x7ffffffe
100054e0:	jbe    0x100054e7
100054e2:	mov    edi,DWORD PTR [ebp+0xc]
100054e5:	jmp    0x1000550e
100054e7:	xor    edx,edx
100054e9:	push   0x3
100054eb:	mov    eax,edi
100054ed:	pop    ebx
100054ee:	div    ebx
100054f0:	mov    ecx,DWORD PTR [esi+0x18]
100054f3:	mov    DWORD PTR [ebp-0x14],ecx
100054f6:	shr    DWORD PTR [ebp-0x14],1
100054f9:	mov    edx,DWORD PTR [ebp-0x14]
100054fc:	cmp    eax,edx
100054fe:	jae    0x1000550e
10005500:	mov    eax,0x7ffffffe
10005505:	sub    eax,edx
10005507:	cmp    ecx,eax
10005509:	ja     0x1000550e
1000550b:	lea    edi,[edx+ecx*1]
1000550e:	and    DWORD PTR [ebp-0x4],0x0
10005512:	lea    ecx,[edi+0x1]
10005515:	call   0x100059c2
1000551a:	mov    DWORD PTR [ebp+0xc],eax
1000551d:	jmp    0x10005543
1000551f:	mov    eax,DWORD PTR [ebp+0xc]
10005522:	lea    ecx,[eax+0x1]
10005525:	mov    DWORD PTR [ebp-0x10],esp
10005528:	mov    DWORD PTR [ebp-0x14],eax
1000552b:	mov    BYTE PTR [ebp-0x4],0x2
1000552f:	call   0x100059c2
10005534:	mov    DWORD PTR [ebp+0xc],eax
10005537:	mov    eax,0x1000553d
1000553c:	ret    
1000553d:	mov    esi,DWORD PTR [ebp+0x8]
10005540:	mov    edi,DWORD PTR [ebp-0x14]
10005543:	cmp    DWORD PTR [ebp+0x10],0x0
10005547:	jbe    0x1000556a
10005549:	cmp    DWORD PTR [esi+0x18],0x8
1000554d:	jb     0x10005554
1000554f:	mov    eax,DWORD PTR [esi+0x4]
10005552:	jmp    0x10005557
10005554:	lea    eax,[esi+0x4]
10005557:	push   eax
10005558:	lea    eax,[edi+0x1]
1000555b:	push   eax
1000555c:	push   DWORD PTR [ebp+0xc]
1000555f:	mov    eax,DWORD PTR [ebp+0x10]
10005562:	call   0x10005e55
10005567:	add    esp,0xc
1000556a:	push   0x1
1000556c:	xor    ebx,ebx
1000556e:	call   0x10004b54
10005573:	mov    eax,DWORD PTR [ebp+0xc]
10005576:	mov    ecx,DWORD PTR [ebp+0x10]
10005579:	mov    DWORD PTR [esi+0x4],eax
1000557c:	mov    eax,esi
1000557e:	mov    DWORD PTR [esi+0x18],edi
10005581:	call   0x100050ae
10005586:	call   0x1005891d
1000558b:	ret    0xc
1000558e:	mov    esi,DWORD PTR [ebp+0x8]
10005591:	push   0x1
10005593:	xor    ebx,ebx
10005595:	call   0x10004b54
1000559a:	push   ebx
1000559b:	push   ebx
1000559c:	call   0x10046704
100055a1:	int3   
100055a2:	push   ebp
100055a3:	mov    ebp,esp
100055a5:	sub    esp,0x10
100055a8:	mov    eax,ds:0x1007fc04
100055ad:	mov    eax,DWORD PTR [eax]
100055af:	push   ebx
100055b0:	push   esi
100055b1:	push   edi
100055b2:	mov    ebx,0x1007fc00
100055b7:	lea    edi,[ebp-0xc]
100055ba:	lea    esi,[ebp+0xc]
100055bd:	mov    DWORD PTR [ebp-0x8],eax
100055c0:	mov    DWORD PTR [ebp-0xc],ebx
100055c3:	call   0x100046f1
100055c8:	test   al,al
100055ca:	je     0x1000563a
100055cc:	mov    eax,ds:0x1007fc04
100055d1:	lea    edi,[ebp-0xc]
100055d4:	lea    esi,[ebp+0x14]
100055d7:	mov    DWORD PTR [ebp-0x8],eax
100055da:	mov    DWORD PTR [ebp-0xc],ebx
100055dd:	call   0x100046f1
100055e2:	test   al,al
100055e4:	je     0x1000563a
100055e6:	mov    eax,ds:0x1007fc04
100055eb:	push   DWORD PTR [eax+0x4]
100055ee:	mov    ecx,ebx
100055f0:	call   0x10005d8f
100055f5:	mov    eax,ds:0x1007fc04
100055fa:	mov    DWORD PTR [eax+0x4],eax
100055fd:	mov    eax,ds:0x1007fc04
10005602:	and    DWORD PTR ds:0x1007fc08,0x0
10005609:	mov    DWORD PTR [eax],eax
1000560b:	mov    eax,ds:0x1007fc04
10005610:	mov    DWORD PTR [eax+0x8],eax
10005613:	mov    eax,ds:0x1007fc04
10005618:	mov    ecx,DWORD PTR [eax]
1000561a:	mov    eax,DWORD PTR [ebp+0x8]
1000561d:	mov    DWORD PTR [eax],ebx
1000561f:	jmp    0x10005654
10005621:	mov    edi,DWORD PTR [ebp+0xc]
10005624:	mov    ebx,DWORD PTR [ebp+0x10]
10005627:	lea    esi,[ebp+0xc]
1000562a:	call   0x10004fe6
1000562f:	push   ebx
10005630:	push   edi
10005631:	lea    eax,[ebp-0xc]
10005634:	push   eax
10005635:	call   0x10005a0c
1000563a:	lea    edi,[ebp+0x14]
1000563d:	lea    esi,[ebp+0xc]
10005640:	call   0x100046f1
10005645:	test   al,al
10005647:	je     0x10005621
10005649:	mov    ecx,DWORD PTR [ebp+0xc]
1000564c:	mov    eax,DWORD PTR [ebp+0x8]
1000564f:	mov    DWORD PTR [eax],ecx
10005651:	mov    ecx,DWORD PTR [ebp+0x10]
10005654:	pop    edi
10005655:	pop    esi
10005656:	mov    DWORD PTR [eax+0x4],ecx
10005659:	pop    ebx
1000565a:	leave  
1000565b:	ret    0x14
1000565e:	mov    eax,DWORD PTR [ecx]
10005660:	mov    edx,DWORD PTR [eax+0x8]
10005663:	mov    DWORD PTR [ecx],edx
10005665:	mov    edx,DWORD PTR [eax+0x8]
10005668:	cmp    BYTE PTR [edx+0x45],0x0
1000566c:	jne    0x10005671
1000566e:	mov    DWORD PTR [edx+0x4],ecx
10005671:	mov    edx,DWORD PTR [ecx+0x4]
10005674:	mov    DWORD PTR [eax+0x4],edx
10005677:	mov    edx,DWORD PTR [esp+0x4]
1000567b:	mov    edx,DWORD PTR [edx+0x4]
1000567e:	cmp    ecx,DWORD PTR [edx+0x4]
10005681:	jne    0x10005688
10005683:	mov    DWORD PTR [edx+0x4],eax
10005686:	jmp    0x10005697
10005688:	mov    edx,DWORD PTR [ecx+0x4]
1000568b:	cmp    ecx,DWORD PTR [edx+0x8]
1000568e:	jne    0x10005695
10005690:	mov    DWORD PTR [edx+0x8],eax
10005693:	jmp    0x10005697
10005695:	mov    DWORD PTR [edx],eax
10005697:	mov    DWORD PTR [eax+0x8],ecx
1000569a:	mov    DWORD PTR [ecx+0x4],eax
1000569d:	ret    0x4
100056a0:	push   0x8
100056a2:	mov    eax,0x1005f4ae
100056a7:	call   0x10058878
100056ac:	push   0x48
100056ae:	call   0x1004239e
100056b3:	mov    edi,eax
100056b5:	pop    ecx
100056b6:	mov    DWORD PTR [ebp-0x14],edi
100056b9:	test   edi,edi
100056bb:	mov    DWORD PTR [ebp-0x4],0x1
100056c2:	je     0x100056d5
100056c4:	push   DWORD PTR [ebp+0x10]
100056c7:	mov    ebx,DWORD PTR [ebp+0x14]
100056ca:	push   DWORD PTR [ebp+0xc]
100056cd:	push   DWORD PTR [ebp+0x8]
100056d0:	call   0x10005cf2
100056d5:	mov    eax,edi
100056d7:	call   0x1005891d
100056dc:	ret    0x10
100056df:	push   DWORD PTR [ebp-0x14]
100056e2:	call   0x10041d92
100056e7:	pop    ecx
100056e8:	push   0x0
100056ea:	push   0x0
100056ec:	call   0x10046704
100056f1:	int3   
100056f2:	push   0x48
100056f4:	mov    eax,0x1005f147
100056f9:	call   0x10058845
100056fe:	mov    edi,DWORD PTR [ebp+0x10]
10005701:	cmp    BYTE PTR [edi+0x45],0x0
10005705:	je     0x10005739
10005707:	push   0x1006bafc
1000570c:	lea    ecx,[ebp-0x2c]
1000570f:	call   0x100011d6
10005714:	and    DWORD PTR [ebp-0x4],0x0
10005718:	lea    eax,[ebp-0x2c]
1000571b:	push   eax
1000571c:	lea    ecx,[ebp-0x54]
1000571f:	call   0x10001065
10005724:	push   0x10073880
10005729:	lea    eax,[ebp-0x54]
1000572c:	push   eax
1000572d:	mov    DWORD PTR [ebp-0x54],0x1006a788
10005734:	call   0x10046704
10005739:	lea    esi,[ebp+0xc]
1000573c:	mov    DWORD PTR [ebp-0x10],edi
1000573f:	call   0x10004fe6
10005744:	mov    ecx,DWORD PTR [edi]
10005746:	cmp    BYTE PTR [ecx+0x45],0x0
1000574a:	je     0x10005751
1000574c:	mov    ebx,DWORD PTR [edi+0x8]
1000574f:	jmp    0x10005768
10005751:	mov    eax,DWORD PTR [edi+0x8]
10005754:	cmp    BYTE PTR [eax+0x45],0x0
10005758:	je     0x1000575e
1000575a:	mov    ebx,ecx
1000575c:	jmp    0x10005768
1000575e:	mov    eax,DWORD PTR [ebp+0x10]
10005761:	cmp    eax,edi
10005763:	mov    ebx,DWORD PTR [eax+0x8]
10005766:	jne    0x100057e0
10005768:	cmp    BYTE PTR [ebx+0x45],0x0
1000576c:	mov    esi,DWORD PTR [edi+0x4]
1000576f:	jne    0x10005774
10005771:	mov    DWORD PTR [ebx+0x4],esi
10005774:	mov    eax,ds:0x1007fc10
10005779:	cmp    DWORD PTR [eax+0x4],edi
1000577c:	jne    0x10005783
1000577e:	mov    DWORD PTR [eax+0x4],ebx
10005781:	jmp    0x1000578e
10005783:	cmp    DWORD PTR [esi],edi
10005785:	jne    0x1000578b
10005787:	mov    DWORD PTR [esi],ebx
10005789:	jmp    0x1000578e
1000578b:	mov    DWORD PTR [esi+0x8],ebx
1000578e:	mov    edx,DWORD PTR ds:0x1007fc10
10005794:	cmp    DWORD PTR [edx],edi
10005796:	jne    0x100057b4
10005798:	cmp    BYTE PTR [ebx+0x45],0x0
1000579c:	je     0x100057a2
1000579e:	mov    ecx,esi
100057a0:	jmp    0x100057b2
100057a2:	mov    eax,DWORD PTR [ebx]
100057a4:	mov    ecx,ebx
100057a6:	jmp    0x100057ac
100057a8:	mov    ecx,eax
100057aa:	mov    eax,DWORD PTR [ecx]
100057ac:	cmp    BYTE PTR [eax+0x45],0x0
100057b0:	je     0x100057a8
100057b2:	mov    DWORD PTR [edx],ecx
100057b4:	mov    edx,DWORD PTR ds:0x1007fc10
100057ba:	cmp    DWORD PTR [edx+0x8],edi
100057bd:	jne    0x1000583a
100057bf:	cmp    BYTE PTR [ebx+0x45],0x0
100057c3:	je     0x100057c9
100057c5:	mov    ecx,esi
100057c7:	jmp    0x100057db
100057c9:	mov    eax,DWORD PTR [ebx+0x8]
100057cc:	mov    ecx,ebx
100057ce:	jmp    0x100057d5
100057d0:	mov    ecx,eax
100057d2:	mov    eax,DWORD PTR [ecx+0x8]
100057d5:	cmp    BYTE PTR [eax+0x45],0x0
100057d9:	je     0x100057d0
100057db:	mov    DWORD PTR [edx+0x8],ecx
100057de:	jmp    0x1000583a
100057e0:	mov    DWORD PTR [ecx+0x4],eax
100057e3:	mov    ecx,DWORD PTR [edi]
100057e5:	mov    DWORD PTR [eax],ecx
100057e7:	cmp    eax,DWORD PTR [edi+0x8]
100057ea:	jne    0x100057f0
100057ec:	mov    esi,eax
100057ee:	jmp    0x1000580a
100057f0:	cmp    BYTE PTR [ebx+0x45],0x0
100057f4:	mov    esi,DWORD PTR [eax+0x4]
100057f7:	jne    0x100057fc
100057f9:	mov    DWORD PTR [ebx+0x4],esi
100057fc:	mov    DWORD PTR [esi],ebx
100057fe:	mov    ecx,DWORD PTR [edi+0x8]
10005801:	mov    DWORD PTR [eax+0x8],ecx
10005804:	mov    ecx,DWORD PTR [edi+0x8]
10005807:	mov    DWORD PTR [ecx+0x4],eax
1000580a:	mov    ecx,DWORD PTR ds:0x1007fc10
10005810:	cmp    DWORD PTR [ecx+0x4],edi
10005813:	jne    0x1000581a
10005815:	mov    DWORD PTR [ecx+0x4],eax
10005818:	jmp    0x10005828
1000581a:	mov    ecx,DWORD PTR [edi+0x4]
1000581d:	cmp    DWORD PTR [ecx],edi
1000581f:	jne    0x10005825
10005821:	mov    DWORD PTR [ecx],eax
10005823:	jmp    0x10005828
10005825:	mov    DWORD PTR [ecx+0x8],eax
10005828:	mov    ecx,DWORD PTR [edi+0x4]
1000582b:	mov    DWORD PTR [eax+0x4],ecx
1000582e:	mov    dl,BYTE PTR [edi+0x44]
10005831:	mov    cl,BYTE PTR [eax+0x44]
10005834:	mov    BYTE PTR [eax+0x44],dl
10005837:	mov    BYTE PTR [edi+0x44],cl
1000583a:	cmp    BYTE PTR [edi+0x44],0x1
1000583e:	jne    0x10005953
10005844:	mov    eax,ds:0x1007fc10
10005849:	cmp    ebx,DWORD PTR [eax+0x4]
1000584c:	je     0x1000594f
10005852:	mov    edi,0x1007fc0c
10005857:	cmp    BYTE PTR [ebx+0x44],0x1
1000585b:	jne    0x1000594c
10005861:	mov    ecx,DWORD PTR [esi]
10005863:	cmp    ebx,ecx
10005865:	jne    0x100058d1
10005867:	mov    ecx,DWORD PTR [esi+0x8]
1000586a:	cmp    BYTE PTR [ecx+0x44],0x0
1000586e:	jne    0x10005883
10005870:	mov    BYTE PTR [ecx+0x44],0x1
10005874:	push   edi
10005875:	mov    ecx,esi
10005877:	mov    BYTE PTR [esi+0x44],0x0
1000587b:	call   0x10005433
10005880:	mov    ecx,DWORD PTR [esi+0x8]
10005883:	cmp    BYTE PTR [ecx+0x45],0x0
10005887:	jne    0x10005904
10005889:	mov    eax,DWORD PTR [ecx]
1000588b:	cmp    BYTE PTR [eax+0x44],0x1
1000588f:	jne    0x1000589a
10005891:	mov    eax,DWORD PTR [ecx+0x8]
10005894:	cmp    BYTE PTR [eax+0x44],0x1
10005898:	je     0x10005900
1000589a:	mov    eax,DWORD PTR [ecx+0x8]
1000589d:	cmp    BYTE PTR [eax+0x44],0x1
100058a1:	jne    0x100058b6
100058a3:	mov    eax,DWORD PTR [ecx]
100058a5:	mov    BYTE PTR [eax+0x44],0x1
100058a9:	push   edi
100058aa:	mov    BYTE PTR [ecx+0x44],0x0
100058ae:	call   0x1000565e
100058b3:	mov    ecx,DWORD PTR [esi+0x8]
100058b6:	mov    al,BYTE PTR [esi+0x44]
100058b9:	mov    BYTE PTR [ecx+0x44],al
100058bc:	mov    BYTE PTR [esi+0x44],0x1
100058c0:	mov    eax,DWORD PTR [ecx+0x8]
100058c3:	push   edi
100058c4:	mov    ecx,esi
100058c6:	mov    BYTE PTR [eax+0x44],0x1
100058ca:	call   0x10005433
100058cf:	jmp    0x1000594c
100058d1:	cmp    BYTE PTR [ecx+0x44],0x0
100058d5:	jne    0x100058e9
100058d7:	mov    BYTE PTR [ecx+0x44],0x1
100058db:	push   edi
100058dc:	mov    ecx,esi
100058de:	mov    BYTE PTR [esi+0x44],0x0
100058e2:	call   0x1000565e
100058e7:	mov    ecx,DWORD PTR [esi]
100058e9:	cmp    BYTE PTR [ecx+0x45],0x0
100058ed:	jne    0x10005904
100058ef:	mov    eax,DWORD PTR [ecx+0x8]
100058f2:	cmp    BYTE PTR [eax+0x44],0x1
100058f6:	jne    0x10005919
100058f8:	mov    eax,DWORD PTR [ecx]
100058fa:	cmp    BYTE PTR [eax+0x44],0x1
100058fe:	jne    0x10005919
10005900:	mov    BYTE PTR [ecx+0x44],0x0
10005904:	mov    eax,ds:0x1007fc10
10005909:	mov    ebx,esi
1000590b:	cmp    ebx,DWORD PTR [eax+0x4]
1000590e:	mov    esi,DWORD PTR [esi+0x4]
10005911:	jne    0x10005857
10005917:	jmp    0x1000594c
10005919:	mov    eax,DWORD PTR [ecx]
1000591b:	cmp    BYTE PTR [eax+0x44],0x1
1000591f:	jne    0x10005934
10005921:	mov    eax,DWORD PTR [ecx+0x8]
10005924:	mov    BYTE PTR [eax+0x44],0x1
10005928:	push   edi
10005929:	mov    BYTE PTR [ecx+0x44],0x0
1000592d:	call   0x10005433
10005932:	mov    ecx,DWORD PTR [esi]
10005934:	mov    al,BYTE PTR [esi+0x44]
10005937:	mov    BYTE PTR [ecx+0x44],al
1000593a:	mov    BYTE PTR [esi+0x44],0x1
1000593e:	mov    eax,DWORD PTR [ecx]
10005940:	push   edi
10005941:	mov    ecx,esi
10005943:	mov    BYTE PTR [eax+0x44],0x1
10005947:	call   0x1000565e
1000594c:	mov    edi,DWORD PTR [ebp-0x10]
1000594f:	mov    BYTE PTR [ebx+0x44],0x1
10005953:	xor    ebx,ebx
10005955:	push   ebx
10005956:	lea    esi,[edi+0xc]
10005959:	push   0x1
1000595b:	lea    ecx,[esi+0x1c]
1000595e:	call   0x100012f9
10005963:	push   ebx
10005964:	push   0x1
10005966:	mov    ecx,esi
10005968:	call   0x100012f9
1000596d:	push   edi
1000596e:	call   0x10041d92
10005973:	cmp    DWORD PTR ds:0x1007fc14,ebx
10005979:	pop    ecx
1000597a:	jbe    0x10005982
1000597c:	dec    DWORD PTR ds:0x1007fc14
10005982:	mov    ecx,DWORD PTR [ebp+0xc]
10005985:	mov    eax,DWORD PTR [ebp+0x8]
10005988:	mov    DWORD PTR [eax],ecx
1000598a:	mov    ecx,DWORD PTR [ebp+0x10]
1000598d:	mov    DWORD PTR [eax+0x4],ecx
10005990:	call   0x1005891d
10005995:	ret    0xc
10005998:	push   0x48
1000599a:	call   0x1004239e
1000599f:	xor    edx,edx
100059a1:	cmp    eax,edx
100059a3:	pop    ecx
100059a4:	je     0x100059a8
100059a6:	mov    DWORD PTR [eax],edx
100059a8:	lea    ecx,[eax+0x4]
100059ab:	cmp    ecx,edx
100059ad:	je     0x100059b1
100059af:	mov    DWORD PTR [ecx],edx
100059b1:	lea    ecx,[eax+0x8]
100059b4:	cmp    ecx,edx
100059b6:	je     0x100059ba
100059b8:	mov    DWORD PTR [ecx],edx
100059ba:	mov    BYTE PTR [eax+0x44],0x1
100059be:	mov    BYTE PTR [eax+0x45],dl
100059c1:	ret    
100059c2:	push   ebp
100059c3:	mov    ebp,esp
100059c5:	sub    esp,0x10
100059c8:	test   ecx,ecx
100059ca:	ja     0x100059da
100059cc:	xor    ecx,ecx
100059ce:	lea    eax,[ecx+ecx*1]
100059d1:	push   eax
100059d2:	call   0x1004239e
100059d7:	pop    ecx
100059d8:	leave  
100059d9:	ret    
100059da:	or     eax,0xffffffff
100059dd:	xor    edx,edx
100059df:	div    ecx
100059e1:	cmp    eax,0x2
100059e4:	jae    0x100059ce
100059e6:	and    DWORD PTR [ebp-0x4],0x0
100059ea:	lea    eax,[ebp-0x4]
100059ed:	push   eax
100059ee:	lea    ecx,[ebp-0x10]
100059f1:	call   0x10041e12
100059f6:	push   0x100738b8
100059fb:	lea    eax,[ebp-0x10]
100059fe:	push   eax
100059ff:	mov    DWORD PTR [ebp-0x10],0x100655b8
10005a06:	call   0x10046704
10005a0b:	int3   
10005a0c:	push   0x48
10005a0e:	mov    eax,0x1005f147
10005a13:	call   0x10058845
10005a18:	mov    edi,DWORD PTR [ebp+0x10]
10005a1b:	cmp    BYTE PTR [edi+0x45],0x0
10005a1f:	je     0x10005a53
10005a21:	push   0x1006bafc
10005a26:	lea    ecx,[ebp-0x2c]
10005a29:	call   0x100011d6
10005a2e:	and    DWORD PTR [ebp-0x4],0x0
10005a32:	lea    eax,[ebp-0x2c]
10005a35:	push   eax
10005a36:	lea    ecx,[ebp-0x54]
10005a39:	call   0x10001065
10005a3e:	push   0x10073880
10005a43:	lea    eax,[ebp-0x54]
10005a46:	push   eax
10005a47:	mov    DWORD PTR [ebp-0x54],0x1006a788
10005a4e:	call   0x10046704
10005a53:	lea    esi,[ebp+0xc]
10005a56:	mov    DWORD PTR [ebp-0x10],edi
10005a59:	call   0x10004fe6
10005a5e:	mov    ecx,DWORD PTR [edi]
10005a60:	cmp    BYTE PTR [ecx+0x45],0x0
10005a64:	je     0x10005a6b
10005a66:	mov    ebx,DWORD PTR [edi+0x8]
10005a69:	jmp    0x10005a82
10005a6b:	mov    eax,DWORD PTR [edi+0x8]
10005a6e:	cmp    BYTE PTR [eax+0x45],0x0
10005a72:	je     0x10005a78
10005a74:	mov    ebx,ecx
10005a76:	jmp    0x10005a82
10005a78:	mov    eax,DWORD PTR [ebp+0x10]
10005a7b:	cmp    eax,edi
10005a7d:	mov    ebx,DWORD PTR [eax+0x8]
10005a80:	jne    0x10005afa
10005a82:	cmp    BYTE PTR [ebx+0x45],0x0
10005a86:	mov    esi,DWORD PTR [edi+0x4]
10005a89:	jne    0x10005a8e
10005a8b:	mov    DWORD PTR [ebx+0x4],esi
10005a8e:	mov    eax,ds:0x1007fc04
10005a93:	cmp    DWORD PTR [eax+0x4],edi
10005a96:	jne    0x10005a9d
10005a98:	mov    DWORD PTR [eax+0x4],ebx
10005a9b:	jmp    0x10005aa8
10005a9d:	cmp    DWORD PTR [esi],edi
10005a9f:	jne    0x10005aa5
10005aa1:	mov    DWORD PTR [esi],ebx
10005aa3:	jmp    0x10005aa8
10005aa5:	mov    DWORD PTR [esi+0x8],ebx
10005aa8:	mov    edx,DWORD PTR ds:0x1007fc04
10005aae:	cmp    DWORD PTR [edx],edi
10005ab0:	jne    0x10005ace
10005ab2:	cmp    BYTE PTR [ebx+0x45],0x0
10005ab6:	je     0x10005abc
10005ab8:	mov    ecx,esi
10005aba:	jmp    0x10005acc
10005abc:	mov    eax,DWORD PTR [ebx]
10005abe:	mov    ecx,ebx
10005ac0:	jmp    0x10005ac6
10005ac2:	mov    ecx,eax
10005ac4:	mov    eax,DWORD PTR [ecx]
10005ac6:	cmp    BYTE PTR [eax+0x45],0x0
10005aca:	je     0x10005ac2
10005acc:	mov    DWORD PTR [edx],ecx
10005ace:	mov    edx,DWORD PTR ds:0x1007fc04
10005ad4:	cmp    DWORD PTR [edx+0x8],edi
10005ad7:	jne    0x10005b54
10005ad9:	cmp    BYTE PTR [ebx+0x45],0x0
10005add:	je     0x10005ae3
10005adf:	mov    ecx,esi
10005ae1:	jmp    0x10005af5
10005ae3:	mov    eax,DWORD PTR [ebx+0x8]
10005ae6:	mov    ecx,ebx
10005ae8:	jmp    0x10005aef
10005aea:	mov    ecx,eax
10005aec:	mov    eax,DWORD PTR [ecx+0x8]
10005aef:	cmp    BYTE PTR [eax+0x45],0x0
10005af3:	je     0x10005aea
10005af5:	mov    DWORD PTR [edx+0x8],ecx
10005af8:	jmp    0x10005b54
10005afa:	mov    DWORD PTR [ecx+0x4],eax
10005afd:	mov    ecx,DWORD PTR [edi]
10005aff:	mov    DWORD PTR [eax],ecx
10005b01:	cmp    eax,DWORD PTR [edi+0x8]
10005b04:	jne    0x10005b0a
10005b06:	mov    esi,eax
10005b08:	jmp    0x10005b24
10005b0a:	cmp    BYTE PTR [ebx+0x45],0x0
10005b0e:	mov    esi,DWORD PTR [eax+0x4]
10005b11:	jne    0x10005b16
10005b13:	mov    DWORD PTR [ebx+0x4],esi
10005b16:	mov    DWORD PTR [esi],ebx
10005b18:	mov    ecx,DWORD PTR [edi+0x8]
10005b1b:	mov    DWORD PTR [eax+0x8],ecx
10005b1e:	mov    ecx,DWORD PTR [edi+0x8]
10005b21:	mov    DWORD PTR [ecx+0x4],eax
10005b24:	mov    ecx,DWORD PTR ds:0x1007fc04
10005b2a:	cmp    DWORD PTR [ecx+0x4],edi
10005b2d:	jne    0x10005b34
10005b2f:	mov    DWORD PTR [ecx+0x4],eax
10005b32:	jmp    0x10005b42
10005b34:	mov    ecx,DWORD PTR [edi+0x4]
10005b37:	cmp    DWORD PTR [ecx],edi
10005b39:	jne    0x10005b3f
10005b3b:	mov    DWORD PTR [ecx],eax
10005b3d:	jmp    0x10005b42
10005b3f:	mov    DWORD PTR [ecx+0x8],eax
10005b42:	mov    ecx,DWORD PTR [edi+0x4]
10005b45:	mov    DWORD PTR [eax+0x4],ecx
10005b48:	mov    dl,BYTE PTR [edi+0x44]
10005b4b:	mov    cl,BYTE PTR [eax+0x44]
10005b4e:	mov    BYTE PTR [eax+0x44],dl
10005b51:	mov    BYTE PTR [edi+0x44],cl
10005b54:	cmp    BYTE PTR [edi+0x44],0x1
10005b58:	jne    0x10005c6d
10005b5e:	mov    eax,ds:0x1007fc04
10005b63:	cmp    ebx,DWORD PTR [eax+0x4]
10005b66:	je     0x10005c69
10005b6c:	mov    edi,0x1007fc00
10005b71:	cmp    BYTE PTR [ebx+0x44],0x1
10005b75:	jne    0x10005c66
10005b7b:	mov    ecx,DWORD PTR [esi]
10005b7d:	cmp    ebx,ecx
10005b7f:	jne    0x10005beb
10005b81:	mov    ecx,DWORD PTR [esi+0x8]
10005b84:	cmp    BYTE PTR [ecx+0x44],0x0
10005b88:	jne    0x10005b9d
10005b8a:	mov    BYTE PTR [ecx+0x44],0x1
10005b8e:	push   edi
10005b8f:	mov    ecx,esi
10005b91:	mov    BYTE PTR [esi+0x44],0x0
10005b95:	call   0x10005433
10005b9a:	mov    ecx,DWORD PTR [esi+0x8]
10005b9d:	cmp    BYTE PTR [ecx+0x45],0x0
10005ba1:	jne    0x10005c1e
10005ba3:	mov    eax,DWORD PTR [ecx]
10005ba5:	cmp    BYTE PTR [eax+0x44],0x1
10005ba9:	jne    0x10005bb4
10005bab:	mov    eax,DWORD PTR [ecx+0x8]
10005bae:	cmp    BYTE PTR [eax+0x44],0x1
10005bb2:	je     0x10005c1a
10005bb4:	mov    eax,DWORD PTR [ecx+0x8]
10005bb7:	cmp    BYTE PTR [eax+0x44],0x1
10005bbb:	jne    0x10005bd0
10005bbd:	mov    eax,DWORD PTR [ecx]
10005bbf:	mov    BYTE PTR [eax+0x44],0x1
10005bc3:	push   edi
10005bc4:	mov    BYTE PTR [ecx+0x44],0x0
10005bc8:	call   0x1000565e
10005bcd:	mov    ecx,DWORD PTR [esi+0x8]
10005bd0:	mov    al,BYTE PTR [esi+0x44]
10005bd3:	mov    BYTE PTR [ecx+0x44],al
10005bd6:	mov    BYTE PTR [esi+0x44],0x1
10005bda:	mov    eax,DWORD PTR [ecx+0x8]
10005bdd:	push   edi
10005bde:	mov    ecx,esi
10005be0:	mov    BYTE PTR [eax+0x44],0x1
10005be4:	call   0x10005433
10005be9:	jmp    0x10005c66
10005beb:	cmp    BYTE PTR [ecx+0x44],0x0
10005bef:	jne    0x10005c03
10005bf1:	mov    BYTE PTR [ecx+0x44],0x1
10005bf5:	push   edi
10005bf6:	mov    ecx,esi
10005bf8:	mov    BYTE PTR [esi+0x44],0x0
10005bfc:	call   0x1000565e
10005c01:	mov    ecx,DWORD PTR [esi]
10005c03:	cmp    BYTE PTR [ecx+0x45],0x0
10005c07:	jne    0x10005c1e
10005c09:	mov    eax,DWORD PTR [ecx+0x8]
10005c0c:	cmp    BYTE PTR [eax+0x44],0x1
10005c10:	jne    0x10005c33
10005c12:	mov    eax,DWORD PTR [ecx]
10005c14:	cmp    BYTE PTR [eax+0x44],0x1
10005c18:	jne    0x10005c33
10005c1a:	mov    BYTE PTR [ecx+0x44],0x0
10005c1e:	mov    eax,ds:0x1007fc04
10005c23:	mov    ebx,esi
10005c25:	cmp    ebx,DWORD PTR [eax+0x4]
10005c28:	mov    esi,DWORD PTR [esi+0x4]
10005c2b:	jne    0x10005b71
10005c31:	jmp    0x10005c66
10005c33:	mov    eax,DWORD PTR [ecx]
10005c35:	cmp    BYTE PTR [eax+0x44],0x1
10005c39:	jne    0x10005c4e
10005c3b:	mov    eax,DWORD PTR [ecx+0x8]
10005c3e:	mov    BYTE PTR [eax+0x44],0x1
10005c42:	push   edi
10005c43:	mov    BYTE PTR [ecx+0x44],0x0
10005c47:	call   0x10005433
10005c4c:	mov    ecx,DWORD PTR [esi]
10005c4e:	mov    al,BYTE PTR [esi+0x44]
10005c51:	mov    BYTE PTR [ecx+0x44],al
10005c54:	mov    BYTE PTR [esi+0x44],0x1
10005c58:	mov    eax,DWORD PTR [ecx]
10005c5a:	push   edi
10005c5b:	mov    ecx,esi
10005c5d:	mov    BYTE PTR [eax+0x44],0x1
10005c61:	call   0x1000565e
10005c66:	mov    edi,DWORD PTR [ebp-0x10]
10005c69:	mov    BYTE PTR [ebx+0x44],0x1
10005c6d:	add    edi,0xc
10005c70:	call   0x10004724
10005c75:	push   DWORD PTR [ebp-0x10]
10005c78:	call   0x10041d92
10005c7d:	cmp    DWORD PTR ds:0x1007fc08,0x0
10005c84:	pop    ecx
10005c85:	jbe    0x10005c8d
10005c87:	dec    DWORD PTR ds:0x1007fc08
10005c8d:	mov    ecx,DWORD PTR [ebp+0xc]
10005c90:	mov    eax,DWORD PTR [ebp+0x8]
10005c93:	mov    DWORD PTR [eax],ecx
10005c95:	mov    ecx,DWORD PTR [ebp+0x10]
10005c98:	mov    DWORD PTR [eax+0x4],ecx
10005c9b:	call   0x1005891d
10005ca0:	ret    0xc
10005ca3:	push   0x0
10005ca5:	mov    eax,0x10060f15
10005caa:	call   0x10058845
10005caf:	mov    ebx,ecx
10005cb1:	mov    eax,DWORD PTR [ebp+0x8]
10005cb4:	mov    DWORD PTR [esi],eax
10005cb6:	mov    eax,DWORD PTR [ebp+0xc]
10005cb9:	mov    DWORD PTR [esi+0x4],eax
10005cbc:	mov    eax,DWORD PTR [ebp+0x10]
10005cbf:	lea    edi,[esi+0xc]
10005cc2:	push   ebx
10005cc3:	mov    ecx,edi
10005cc5:	mov    DWORD PTR [esi+0x8],eax
10005cc8:	mov    DWORD PTR [ebp+0x8],edi
10005ccb:	call   0x100011b0
10005cd0:	and    DWORD PTR [ebp-0x4],0x0
10005cd4:	add    ebx,0x1c
10005cd7:	push   ebx
10005cd8:	lea    ecx,[edi+0x1c]
10005cdb:	call   0x100011b0
10005ce0:	mov    BYTE PTR [esi+0x44],0x0
10005ce4:	mov    BYTE PTR [esi+0x45],0x0
10005ce8:	mov    eax,esi
10005cea:	call   0x1005891d
10005cef:	ret    0xc
10005cf2:	push   0x0
10005cf4:	mov    eax,0x1005f48e
10005cf9:	call   0x10058845
10005cfe:	mov    eax,DWORD PTR [ebp+0x8]
10005d01:	mov    DWORD PTR [edi],eax
10005d03:	mov    eax,DWORD PTR [ebp+0xc]
10005d06:	mov    DWORD PTR [edi+0x4],eax
10005d09:	mov    eax,DWORD PTR [ebp+0x10]
10005d0c:	mov    DWORD PTR [edi+0x8],eax
10005d0f:	lea    esi,[edi+0xc]
10005d12:	mov    eax,ebx
10005d14:	mov    DWORD PTR [ebp+0x8],esi
10005d17:	call   0x10004598
10005d1c:	and    DWORD PTR [ebp-0x4],0x0
10005d20:	lea    eax,[ebx+0x1c]
10005d23:	add    esi,0x1c
10005d26:	call   0x10004598
10005d2b:	mov    BYTE PTR [edi+0x44],0x0
10005d2f:	mov    BYTE PTR [edi+0x45],0x0
10005d33:	mov    eax,edi
10005d35:	call   0x1005891d
10005d3a:	ret    0xc
10005d3d:	push   ebp
10005d3e:	mov    ebp,esp
10005d40:	push   ecx
10005d41:	push   esi
10005d42:	push   edi
10005d43:	mov    edi,DWORD PTR [ebp+0x8]
10005d46:	cmp    BYTE PTR [edi+0x45],0x0
10005d4a:	mov    DWORD PTR [ebp-0x4],ecx
10005d4d:	mov    esi,edi
10005d4f:	jne    0x10005d89
10005d51:	push   ebx
10005d52:	push   DWORD PTR [esi+0x8]
10005d55:	mov    ecx,DWORD PTR [ebp-0x4]
10005d58:	call   0x10005d3d
10005d5d:	mov    esi,DWORD PTR [esi]
10005d5f:	push   0x0
10005d61:	lea    ebx,[edi+0xc]
10005d64:	push   0x1
10005d66:	lea    ecx,[ebx+0x1c]
10005d69:	call   0x100012f9
10005d6e:	push   0x0
10005d70:	push   0x1
10005d72:	mov    ecx,ebx
10005d74:	call   0x100012f9
10005d79:	push   edi
10005d7a:	call   0x10041d92
10005d7f:	cmp    BYTE PTR [esi+0x45],0x0
10005d83:	pop    ecx
10005d84:	mov    edi,esi
10005d86:	je     0x10005d52
10005d88:	pop    ebx
10005d89:	pop    edi
10005d8a:	pop    esi
10005d8b:	leave  
10005d8c:	ret    0x4
10005d8f:	push   ebx
10005d90:	mov    ebx,DWORD PTR [esp+0x8]
10005d94:	cmp    BYTE PTR [ebx+0x45],0x0
10005d98:	push   ebp
10005d99:	push   esi
10005d9a:	mov    ebp,ecx
10005d9c:	mov    esi,ebx
10005d9e:	jne    0x10005dc5
10005da0:	push   edi
10005da1:	push   DWORD PTR [esi+0x8]
10005da4:	mov    ecx,ebp
10005da6:	call   0x10005d8f
10005dab:	mov    esi,DWORD PTR [esi]
10005dad:	lea    edi,[ebx+0xc]
10005db0:	call   0x10004724
10005db5:	push   ebx
10005db6:	call   0x10041d92
10005dbb:	cmp    BYTE PTR [esi+0x45],0x0
10005dbf:	pop    ecx
10005dc0:	mov    ebx,esi
10005dc2:	je     0x10005da1
10005dc4:	pop    edi
10005dc5:	pop    esi
10005dc6:	pop    ebp
10005dc7:	pop    ebx
10005dc8:	ret    0x4
10005dcb:	push   0x20
10005dcd:	mov    eax,0x1005ffa8
10005dd2:	call   0x10058845
10005dd7:	push   DWORD PTR [ebp+0xc]
10005dda:	and    DWORD PTR [ebp-0x10],0x0
10005dde:	lea    ecx,[ebp-0x2c]
10005de1:	call   0x100011b0
10005de6:	push   DWORD PTR [ebp+0x10]
10005de9:	and    DWORD PTR [ebp-0x4],0x0
10005ded:	push   eax
10005dee:	call   0x10005e98
10005df3:	mov    ecx,DWORD PTR [ebp+0x8]
10005df6:	push   eax
10005df7:	call   0x100011b0
10005dfc:	push   0x0
10005dfe:	push   0x1
10005e00:	lea    ecx,[ebp-0x2c]
10005e03:	call   0x100012f9
10005e08:	mov    eax,DWORD PTR [ebp+0x8]
10005e0b:	call   0x1005891d
10005e10:	ret    
10005e11:	cmp    DWORD PTR [ecx+0x18],0x10
10005e15:	push   edi
10005e16:	mov    edi,DWORD PTR [ecx+0x14]
10005e19:	jb     0x10005e20
10005e1b:	mov    ecx,DWORD PTR [ecx+0x4]
10005e1e:	jmp    0x10005e23
10005e20:	add    ecx,0x4
10005e23:	push   ecx
10005e24:	mov    ecx,DWORD PTR [eax+0x14]
10005e27:	call   0x10004128
10005e2c:	neg    eax
10005e2e:	sbb    eax,eax
10005e30:	inc    eax
10005e31:	pop    edi
10005e32:	ret    
10005e33:	push   edi
10005e34:	push   DWORD PTR [esp+0x8]
10005e38:	call   0x10041f10
10005e3d:	pop    ecx
10005e3e:	push   DWORD PTR [esp+0x8]
10005e42:	mov    ecx,DWORD PTR [esi+0x14]
10005e45:	mov    edi,eax
10005e47:	mov    eax,esi
10005e49:	call   0x10004128
10005e4e:	neg    eax
10005e50:	sbb    eax,eax
10005e52:	inc    eax
10005e53:	pop    edi
10005e54:	ret    
10005e55:	add    eax,eax
10005e57:	push   eax
10005e58:	push   DWORD PTR [esp+0x10]
10005e5c:	mov    eax,DWORD PTR [esp+0x10]
10005e60:	add    eax,eax
10005e62:	push   eax
10005e63:	push   DWORD PTR [esp+0x10]
10005e67:	call   0x100422c5
10005e6c:	mov    eax,DWORD PTR [esp+0x14]
10005e70:	add    esp,0x10
10005e73:	ret    
10005e74:	push   ebp
10005e75:	mov    ebp,esp
10005e77:	push   ecx
10005e78:	push   edi
10005e79:	xor    eax,eax
10005e7b:	lea    edi,[ebp-0x4]
10005e7e:	stos   BYTE PTR es:[edi],al
10005e7f:	push   DWORD PTR [ebp-0x4]
10005e82:	push   DWORD PTR [ebp+0xc]
10005e85:	push   DWORD PTR [ebp+0xc]
10005e88:	push   DWORD PTR [ebp+0x8]
10005e8b:	call   0x100060d1
10005e90:	add    esp,0x10
10005e93:	pop    edi
10005e94:	leave  
10005e95:	ret    0x8
10005e98:	push   DWORD PTR [esp+0x8]
10005e9c:	call   0x10041f10
10005ea1:	pop    ecx
10005ea2:	push   eax
10005ea3:	push   DWORD PTR [esp+0xc]
10005ea7:	mov    eax,DWORD PTR [esp+0xc]
10005eab:	call   0x10005f16
10005eb0:	ret    0x8
10005eb3:	push   esi
10005eb4:	mov    esi,ecx
10005eb6:	mov    ecx,DWORD PTR [eax+0x14]
10005eb9:	cmp    ecx,esi
10005ebb:	jae    0x10005ebf
10005ebd:	mov    esi,ecx
10005ebf:	cmp    esi,edi
10005ec1:	mov    edx,esi
10005ec3:	jb     0x10005ec7
10005ec5:	mov    edx,edi
10005ec7:	cmp    DWORD PTR [eax+0x18],0x8
10005ecb:	jb     0x10005ed2
10005ecd:	mov    eax,DWORD PTR [eax+0x4]
10005ed0:	jmp    0x10005ed5
10005ed2:	add    eax,0x4
10005ed5:	test   edx,edx
10005ed7:	mov    ecx,DWORD PTR [esp+0x8]
10005edb:	push   ebx
10005edc:	jbe    0x10005eed
10005ede:	mov    bx,WORD PTR [eax]
10005ee1:	cmp    bx,WORD PTR [ecx]
10005ee4:	jne    0x10005efd
10005ee6:	inc    eax
10005ee7:	inc    eax
10005ee8:	inc    ecx
10005ee9:	inc    ecx
10005eea:	dec    edx
10005eeb:	jne    0x10005ede
10005eed:	xor    eax,eax
10005eef:	test   eax,eax
10005ef1:	pop    ebx
10005ef2:	jne    0x10005f12
10005ef4:	cmp    esi,edi
10005ef6:	jae    0x10005f0b
10005ef8:	or     eax,0xffffffff
10005efb:	jmp    0x10005f12
10005efd:	movzx  eax,WORD PTR [eax]
10005f00:	cmp    ax,WORD PTR [ecx]
10005f03:	sbb    eax,eax
10005f05:	and    eax,0xfffffffe
10005f08:	inc    eax
10005f09:	jmp    0x10005eef
10005f0b:	xor    eax,eax
10005f0d:	cmp    esi,edi
10005f0f:	setne  al
10005f12:	pop    esi
10005f13:	ret    0x4
10005f16:	push   ebx
10005f17:	mov    ebx,DWORD PTR [esp+0xc]
10005f1b:	push   esi
10005f1c:	push   edi
10005f1d:	mov    edi,DWORD PTR [esp+0x10]
10005f21:	mov    esi,eax
10005f23:	push   edi
10005f24:	mov    ecx,esi
10005f26:	call   0x100015eb
10005f2b:	test   al,al
10005f2d:	je     0x10005f4a
10005f2f:	cmp    DWORD PTR [esi+0x18],0x10
10005f33:	jb     0x10005f3a
10005f35:	mov    eax,DWORD PTR [esi+0x4]
10005f38:	jmp    0x10005f3d
10005f3a:	lea    eax,[esi+0x4]
10005f3d:	sub    edi,eax
10005f3f:	push   ebx
10005f40:	push   edi
10005f41:	mov    eax,esi
10005f43:	call   0x10005fb0
10005f48:	jmp    0x10005faa
10005f4a:	or     eax,0xffffffff
10005f4d:	sub    eax,DWORD PTR [esi+0x14]
10005f50:	cmp    eax,ebx
10005f52:	jbe    0x10005f5e
10005f54:	mov    eax,DWORD PTR [esi+0x14]
10005f57:	lea    ecx,[eax+ebx*1]
10005f5a:	cmp    ecx,eax
10005f5c:	jae    0x10005f63
10005f5e:	call   0x1005600a
10005f63:	test   ebx,ebx
10005f65:	jbe    0x10005fa8
10005f67:	mov    edi,DWORD PTR [esi+0x14]
10005f6a:	push   0x0
10005f6c:	add    edi,ebx
10005f6e:	push   edi
10005f6f:	mov    ecx,esi
10005f71:	call   0x10001441
10005f76:	test   al,al
10005f78:	je     0x10005fa8
10005f7a:	mov    eax,DWORD PTR [esi+0x18]
10005f7d:	cmp    eax,0x10
10005f80:	jb     0x10005f87
10005f82:	mov    edx,DWORD PTR [esi+0x4]
10005f85:	jmp    0x10005f8a
10005f87:	lea    edx,[esi+0x4]
10005f8a:	mov    ecx,DWORD PTR [esi+0x14]
10005f8d:	push   ebx
10005f8e:	push   DWORD PTR [esp+0x14]
10005f92:	sub    eax,ecx
10005f94:	push   eax
10005f95:	add    ecx,edx
10005f97:	push   ecx
10005f98:	call   0x1000102d
10005f9d:	add    esp,0x10
10005fa0:	push   edi
10005fa1:	mov    ecx,esi
10005fa3:	call   0x10001425
10005fa8:	mov    eax,esi
10005faa:	pop    edi
10005fab:	pop    esi
10005fac:	pop    ebx
10005fad:	ret    0x8
10005fb0:	push   ebp
10005fb1:	mov    ebp,esp
10005fb3:	push   ecx
10005fb4:	push   ebx
10005fb5:	mov    ebx,DWORD PTR [ebp+0xc]
10005fb8:	push   edi
10005fb9:	mov    edi,eax
10005fbb:	mov    eax,DWORD PTR [edi+0x14]
10005fbe:	cmp    eax,DWORD PTR [ebp+0x8]
10005fc1:	jae    0x10005fc8
10005fc3:	call   0x10056049
10005fc8:	mov    eax,DWORD PTR [edi+0x14]
10005fcb:	sub    eax,DWORD PTR [ebp+0x8]
10005fce:	cmp    eax,ebx
10005fd0:	jae    0x10005fd7
10005fd2:	mov    ebx,eax
10005fd4:	mov    DWORD PTR [ebp+0xc],ebx
10005fd7:	or     eax,0xffffffff
10005fda:	sub    eax,DWORD PTR [esi+0x14]
10005fdd:	cmp    eax,ebx
10005fdf:	jbe    0x10005feb
10005fe1:	mov    eax,DWORD PTR [esi+0x14]
10005fe4:	lea    ecx,[eax+ebx*1]
10005fe7:	cmp    ecx,eax
10005fe9:	jae    0x10005ff0
10005feb:	call   0x1005600a
10005ff0:	test   ebx,ebx
10005ff2:	jbe    0x1000604c
10005ff4:	mov    eax,DWORD PTR [esi+0x14]
10005ff7:	add    eax,ebx
10005ff9:	push   0x0
10005ffb:	push   eax
10005ffc:	mov    ecx,esi
10005ffe:	mov    DWORD PTR [ebp-0x4],eax
10006001:	call   0x10001441
10006006:	test   al,al
10006008:	je     0x1000604c
1000600a:	cmp    DWORD PTR [edi+0x18],0x10
1000600e:	jb     0x10006015
10006010:	mov    edi,DWORD PTR [edi+0x4]
10006013:	jmp    0x10006018
10006015:	add    edi,0x4
10006018:	mov    eax,DWORD PTR [esi+0x18]
1000601b:	cmp    eax,0x10
1000601e:	jb     0x10006025
10006020:	mov    edx,DWORD PTR [esi+0x4]
10006023:	jmp    0x10006028
10006025:	lea    edx,[esi+0x4]
10006028:	push   DWORD PTR [ebp+0xc]
1000602b:	mov    ecx,DWORD PTR [esi+0x14]
1000602e:	mov    ebx,DWORD PTR [ebp+0x8]
10006031:	add    edi,ebx
10006033:	sub    eax,ecx
10006035:	push   edi
10006036:	push   eax
10006037:	add    ecx,edx
10006039:	push   ecx
1000603a:	call   0x1000102d
1000603f:	add    esp,0x10
10006042:	push   DWORD PTR [ebp-0x4]
10006045:	mov    ecx,esi
10006047:	call   0x10001425
1000604c:	pop    edi
1000604d:	mov    eax,esi
1000604f:	pop    ebx
10006050:	leave  
10006051:	ret    0x8
10006054:	push   0x8
10006056:	mov    eax,0x1005f46b
1000605b:	call   0x10058878
10006060:	mov    esi,DWORD PTR [ebp+0x8]
10006063:	and    DWORD PTR [ebp-0x4],0x0
10006067:	mov    DWORD PTR [ebp-0x14],esi
1000606a:	cmp    DWORD PTR [ebp+0xc],0x0
1000606e:	jbe    0x100060a2
10006070:	mov    edi,DWORD PTR [ebp+0x10]
10006073:	call   0x100060a8
10006078:	dec    DWORD PTR [ebp+0xc]
1000607b:	add    esi,0x20
1000607e:	mov    DWORD PTR [ebp+0x8],esi
10006081:	jmp    0x1000606a
10006083:	mov    esi,DWORD PTR [ebp-0x14]
10006086:	jmp    0x10006094
10006088:	push   0x1
1000608a:	mov    ecx,esi
1000608c:	call   0x100012f9
10006091:	add    esi,0x20
10006094:	cmp    esi,DWORD PTR [ebp+0x8]
10006097:	push   0x0
10006099:	jne    0x10006088
1000609b:	push   0x0
1000609d:	call   0x10046704
100060a2:	call   0x1005891d
100060a7:	ret    
100060a8:	push   0x0
100060aa:	mov    eax,0x1005ea1f
100060af:	call   0x10058845
100060b4:	and    DWORD PTR [esp+0x18],0x0
100060b9:	test   esi,esi
100060bb:	je     0x100060cb
100060bd:	push   edi
100060be:	mov    ecx,esi
100060c0:	call   0x100011b0
100060c5:	mov    eax,DWORD PTR [edi+0x1c]
100060c8:	mov    DWORD PTR [esi+0x1c],eax
100060cb:	call   0x1005891d
100060d0:	ret    
100060d1:	push   0x8
100060d3:	mov    eax,0x10060089
100060d8:	call   0x10058878
100060dd:	mov    esi,DWORD PTR [ebp+0xc]
100060e0:	mov    edi,ecx
100060e2:	and    DWORD PTR [ebp-0x4],0x0
100060e6:	mov    DWORD PTR [ebp-0x14],esi
100060e9:	cmp    edi,DWORD PTR [ebp+0x8]
100060ec:	je     0x1000611d
100060ee:	call   0x100060a8
100060f3:	add    esi,0x20
100060f6:	mov    DWORD PTR [ebp+0xc],esi
100060f9:	add    edi,0x20
100060fc:	jmp    0x100060e9
100060fe:	mov    esi,DWORD PTR [ebp-0x14]
10006101:	jmp    0x1000610f
10006103:	push   0x1
10006105:	mov    ecx,esi
10006107:	call   0x100012f9
1000610c:	add    esi,0x20
1000610f:	cmp    esi,DWORD PTR [ebp+0xc]
10006112:	push   0x0
10006114:	jne    0x10006103
10006116:	push   0x0
10006118:	call   0x10046704
1000611d:	mov    eax,esi
1000611f:	call   0x1005891d
10006124:	ret    
10006125:	call   DWORD PTR ds:0x100650c4
1000612b:	test   eax,eax
1000612d:	jle    0x10006139
1000612f:	and    eax,0xffff
10006134:	or     eax,0x80070000
10006139:	ret    
1000613a:	push   ebp
1000613b:	mov    ebp,esp
1000613d:	push   0x0
1000613f:	push   DWORD PTR [ebp+0x1c]
10006142:	push   DWORD PTR [ebp+0x18]
10006145:	push   0x0
10006147:	push   DWORD PTR [ebp+0x14]
1000614a:	push   DWORD PTR [ebp+0x10]
1000614d:	push   DWORD PTR [ebp+0xc]
10006150:	call   DWORD PTR ds:0x100650bc
10006156:	cmp    eax,0xffffffff
10006159:	jne    0x10006162
1000615b:	call   0x10006125
10006160:	jmp    0x10006169
10006162:	mov    ecx,DWORD PTR [ebp+0x8]
10006165:	mov    DWORD PTR [ecx],eax
10006167:	xor    eax,eax
10006169:	pop    ebp
1000616a:	ret    0x18
1000616d:	mov    eax,DWORD PTR [esi]
1000616f:	test   eax,eax
10006171:	je     0x1000617d
10006173:	push   eax
10006174:	call   DWORD PTR ds:0x10065070
1000617a:	and    DWORD PTR [esi],0x0
1000617d:	ret    
1000617e:	push   DWORD PTR [ecx]
10006180:	call   DWORD PTR ds:0x100652b4
10006186:	ret    
10006187:	push   0x254
1000618c:	mov    eax,0x100629f9
10006191:	call   0x100588ae
10006196:	test   BYTE PTR ds:0x10080414,0x1
1000619d:	jne    0x10006504
100061a3:	or     DWORD PTR ds:0x10080414,0x1
100061aa:	and    DWORD PTR ds:0x10080408,0x0
100061b1:	push   0x10064306
100061b6:	call   0x10042174
100061bb:	pop    ecx
100061bc:	jmp    0x10006504
100061c1:	lea    eax,[ebp-0x218]
100061c7:	push   eax
100061c8:	mov    esi,0x100
100061cd:	push   esi
100061ce:	mov    BYTE PTR ds:0x1007fc1e,0x1
100061d5:	call   DWORD PTR ds:0x100650c0
100061db:	cmp    eax,esi
100061dd:	ja     0x100065a7
100061e3:	lea    eax,[ebp-0x218]
100061e9:	push   eax
100061ea:	lea    eax,[ebp-0x21c]
100061f0:	push   eax
100061f1:	call   0x10002366
100061f6:	xor    ebx,ebx
100061f8:	lea    eax,[ebp-0x21c]
100061fe:	mov    DWORD PTR [ebp-0x4],ebx
10006201:	call   0x100066b2
10006206:	lea    edi,[ebp-0x260]
1000620c:	call   0x10033340
10006211:	mov    BYTE PTR [ebp-0x4],0x1
10006215:	cmp    DWORD PTR [eax+0x18],0x10
10006219:	jb     0x10006220
1000621b:	mov    eax,DWORD PTR [eax+0x4]
1000621e:	jmp    0x10006223
10006220:	add    eax,0x4
10006223:	push   eax
10006224:	lea    eax,[ebp-0x21c]
1000622a:	push   eax
1000622b:	call   0x100065c0
10006230:	push   ebx
10006231:	push   0x1
10006233:	lea    ecx,[ebp-0x260]
10006239:	mov    BYTE PTR [ebp-0x4],0x0
1000623d:	call   0x100012f9
10006242:	push   0x79bcbf34
10006247:	push   0x1006bdc8
1000624c:	call   0x10003d63
10006251:	push   eax
10006252:	push   0x4
10006254:	push   0x1006bdfc
10006259:	call   0x10003d75
1000625e:	add    esp,0x14
10006261:	push   eax
10006262:	lea    eax,[ebp-0x21c]
10006268:	push   eax
10006269:	call   0x100065c0
1000626e:	mov    DWORD PTR [ebp-0x220],ebx
10006274:	push   ebx
10006275:	push   0x4
10006277:	push   0x7
10006279:	push   0xc0000000
1000627e:	lea    esi,[ebp-0x21c]
10006284:	mov    BYTE PTR [ebp-0x4],0x2
10006288:	call   0x10006608
1000628d:	push   eax
1000628e:	lea    eax,[ebp-0x220]
10006294:	push   eax
10006295:	call   0x1000613a
1000629a:	test   eax,eax
1000629c:	je     0x100063d9
100062a2:	call   DWORD PTR ds:0x100650c4
100062a8:	cmp    eax,0x20
100062ab:	jne    0x10006581
100062b1:	push   ebx
100062b2:	push   0x4
100062b4:	push   0x7
100062b6:	push   0x80000000
100062bb:	call   0x10006608
100062c0:	push   eax
100062c1:	lea    eax,[ebp-0x220]
100062c7:	push   eax
100062c8:	call   0x1000613a
100062cd:	test   eax,eax
100062cf:	jne    0x10006581
100062d5:	mov    eax,ds:0x1007fd14
100062da:	push   0xa
100062dc:	push   0x12c
100062e1:	push   eax
100062e2:	mov    ebx,eax
100062e4:	call   DWORD PTR ds:0x1006507c
100062ea:	test   eax,eax
100062ec:	je     0x10006516
100062f2:	lea    ecx,[ebp-0x234]
100062f8:	push   ecx
100062f9:	mov    edi,eax
100062fb:	call   0x10033400
10006300:	test   eax,eax
10006302:	pop    ecx
10006303:	je     0x10006516
10006309:	xor    edi,edi
1000630b:	push   edi
1000630c:	push   DWORD PTR ds:0x1007fd98
10006312:	lea    edx,[ebp-0x225]
10006318:	push   DWORD PTR [ebp-0x234]
1000631e:	lea    ecx,[ebp-0x224]
10006324:	push   eax
10006325:	lea    eax,[ebp-0x238]
1000632b:	push   eax
1000632c:	mov    DWORD PTR [ebp-0x224],edi
10006332:	call   0x10038630
10006337:	mov    ecx,DWORD PTR [eax]
10006339:	mov    esi,ecx
1000633b:	add    esp,0x14
1000633e:	mov    DWORD PTR [eax],edi
10006340:	mov    DWORD PTR [ebp-0x230],esi
10006346:	mov    BYTE PTR [ebp-0x4],0x3
1000634a:	push   DWORD PTR [ebp-0x238]
10006350:	call   0x10041d92
10006355:	mov    ebx,DWORD PTR [ebp-0x224]
1000635b:	cmp    ebx,edi
1000635d:	pop    ecx
1000635e:	je     0x10006543
10006364:	cmp    esi,edi
10006366:	je     0x10006543
1000636c:	lea    edi,[ebx+0x1]
1000636f:	push   edi
10006370:	call   0x10042609
10006375:	and    DWORD PTR [ebp-0x22c],0x0
1000637c:	pop    ecx
1000637d:	push   0x0
1000637f:	lea    ecx,[ebp-0x22c]
10006385:	push   ecx
10006386:	push   edi
10006387:	mov    edi,DWORD PTR [ebp-0x220]
1000638d:	push   eax
1000638e:	push   edi
1000638f:	mov    DWORD PTR [ebp-0x224],eax
10006395:	call   DWORD PTR ds:0x100650cc
1000639b:	test   eax,eax
1000639d:	jne    0x100063a4
1000639f:	call   0x10006125
100063a4:	cmp    DWORD PTR [ebp-0x22c],ebx
100063aa:	jne    0x10006524
100063b0:	push   ebx
100063b1:	push   esi
100063b2:	push   DWORD PTR [ebp-0x224]
100063b8:	call   0x1004260e
100063bd:	add    esp,0xc
100063c0:	test   eax,eax
100063c2:	jne    0x10006524
100063c8:	push   DWORD PTR [ebp-0x224]
100063ce:	call   0x10041d92
100063d3:	pop    ecx
100063d4:	jmp    0x100064c3
100063d9:	mov    eax,ds:0x1007fd14
100063de:	push   0xa
100063e0:	push   0x12c
100063e5:	push   eax
100063e6:	mov    ebx,eax
100063e8:	call   DWORD PTR ds:0x1006507c
100063ee:	test   eax,eax
100063f0:	je     0x10006516
100063f6:	lea    ecx,[ebp-0x240]
100063fc:	push   ecx
100063fd:	mov    edi,eax
100063ff:	call   0x10033400
10006404:	test   eax,eax
10006406:	pop    ecx
10006407:	je     0x10006516
1000640d:	xor    ebx,ebx
1000640f:	push   ebx
10006410:	push   DWORD PTR ds:0x1007fd98
10006416:	lea    edx,[ebp-0x226]
1000641c:	push   DWORD PTR [ebp-0x240]
10006422:	lea    ecx,[ebp-0x224]
10006428:	push   eax
10006429:	lea    eax,[ebp-0x23c]
1000642f:	push   eax
10006430:	mov    DWORD PTR [ebp-0x224],ebx
10006436:	call   0x10038630
1000643b:	mov    ecx,DWORD PTR [eax]
1000643d:	add    esp,0x14
10006440:	mov    DWORD PTR [eax],ebx
10006442:	push   DWORD PTR [ebp-0x23c]
10006448:	mov    esi,ecx
1000644a:	call   0x10041d92
1000644f:	cmp    DWORD PTR [ebp-0x224],ebx
10006455:	pop    ecx
10006456:	je     0x10006575
1000645c:	cmp    esi,ebx
1000645e:	je     0x10006575
10006464:	mov    edi,DWORD PTR [ebp-0x220]
1000646a:	push   ebx
1000646b:	lea    eax,[ebp-0x244]
10006471:	push   eax
10006472:	push   DWORD PTR [ebp-0x224]
10006478:	push   esi
10006479:	push   edi
1000647a:	call   DWORD PTR ds:0x100650b4
10006480:	cmp    eax,ebx
10006482:	jne    0x1000648b
10006484:	call   0x10006125
10006489:	jmp    0x1000648d
1000648b:	xor    eax,eax
1000648d:	cmp    eax,ebx
1000648f:	jl     0x10006557
10006495:	mov    eax,DWORD PTR [ebp-0x224]
1000649b:	cmp    DWORD PTR [ebp-0x244],eax
100064a1:	jne    0x1000656e
100064a7:	push   edi
100064a8:	call   DWORD PTR ds:0x100650d0
100064ae:	test   eax,eax
100064b0:	jne    0x100064b9
100064b2:	call   0x10006125
100064b7:	jmp    0x100064bb
100064b9:	xor    eax,eax
100064bb:	cmp    eax,ebx
100064bd:	jl     0x10006564
100064c3:	push   esi
100064c4:	call   0x10041d92
100064c9:	test   edi,edi
100064cb:	pop    ecx
100064cc:	mov    BYTE PTR [ebp-0x4],0x0
100064d0:	je     0x100064d9
100064d2:	push   edi
100064d3:	call   DWORD PTR ds:0x10065070
100064d9:	push   0x10080408
100064de:	push   0x2
100064e0:	lea    esi,[ebp-0x21c]
100064e6:	call   0x10006608
100064eb:	push   eax
100064ec:	call   DWORD PTR ds:0x100652a4
100064f2:	or     DWORD PTR [ebp-0x4],0xffffffff
100064f6:	mov    eax,DWORD PTR [ebp-0x21c]
100064fc:	add    eax,0xfffffff0
100064ff:	call   0x1000207d
10006504:	cmp    BYTE PTR ds:0x1007fc1e,0x0
1000650b:	je     0x100061c1
10006511:	jmp    0x100065a7
10006516:	call   0x1000207c
1000651b:	cmp    DWORD PTR [ebp-0x220],0x0
10006522:	jmp    0x10006587
10006524:	call   0x1000207c
10006529:	push   DWORD PTR [ebp-0x224]
1000652f:	call   0x10041d92
10006534:	pop    ecx
10006535:	push   esi
10006536:	call   0x10041d92
1000653b:	test   edi,edi
1000653d:	pop    ecx
1000653e:	je     0x10006595
10006540:	push   edi
10006541:	jmp    0x1000658f
10006543:	call   0x1000207c
10006548:	push   esi
10006549:	call   0x10041d92
1000654e:	cmp    DWORD PTR [ebp-0x220],edi
10006554:	pop    ecx
10006555:	jmp    0x10006587
10006557:	call   DWORD PTR ds:0x100650c4
1000655d:	push   eax
1000655e:	call   0x1000207c
10006563:	pop    ecx
10006564:	push   esi
10006565:	call   0x10041d92
1000656a:	cmp    edi,ebx
1000656c:	jmp    0x1000653d
1000656e:	call   0x1000207c
10006573:	jmp    0x10006564
10006575:	call   0x1000207c
1000657a:	push   esi
1000657b:	call   0x10041d92
10006580:	pop    ecx
10006581:	cmp    DWORD PTR [ebp-0x220],ebx
10006587:	je     0x10006595
10006589:	push   DWORD PTR [ebp-0x220]
1000658f:	call   DWORD PTR ds:0x10065070
10006595:	or     DWORD PTR [ebp-0x4],0xffffffff
10006599:	mov    eax,DWORD PTR [ebp-0x21c]
1000659f:	add    eax,0xfffffff0
100065a2:	call   0x1000207d
100065a7:	mov    eax,ds:0x10080408
100065ac:	test   eax,eax
100065ae:	mov    esi,eax
100065b0:	je     0x100065b8
100065b2:	mov    ecx,DWORD PTR [eax]
100065b4:	push   eax
100065b5:	call   DWORD PTR [ecx+0x4]
100065b8:	mov    eax,esi
100065ba:	call   0x10058931
100065bf:	ret    
100065c0:	push   0x4
100065c2:	mov    eax,0x100611ac
100065c7:	call   0x10058845
100065cc:	mov    eax,DWORD PTR [ebp+0x8]
100065cf:	call   0x10004170
100065d4:	push   DWORD PTR [ebp+0xc]
100065d7:	lea    ecx,[ebp-0x10]
100065da:	push   ecx
100065db:	mov    ecx,eax
100065dd:	call   0x1000661f
100065e2:	mov    ecx,DWORD PTR [ebp+0x8]
100065e5:	and    DWORD PTR [ebp-0x4],0x0
100065e9:	lea    eax,[ebp-0x10]
100065ec:	call   0x10006657
100065f1:	mov    esi,eax
100065f3:	mov    eax,DWORD PTR [ebp-0x10]
100065f6:	add    eax,0xfffffff0
100065f9:	call   0x1000207d
100065fe:	mov    eax,esi
10006600:	call   0x1005891d
10006605:	ret    0x8
10006608:	mov    eax,DWORD PTR [esi]
1000660a:	sub    eax,0x10
1000660d:	cmp    DWORD PTR [eax+0xc],0x1
10006611:	jle    0x1000661c
10006613:	push   DWORD PTR [eax+0x4]
10006616:	push   esi
10006617:	call   0x100022b0
1000661c:	mov    eax,DWORD PTR [esi]
1000661e:	ret    
1000661f:	push   0x0
10006621:	mov    eax,0x1006121f
10006626:	call   0x10058845
1000662b:	mov    esi,DWORD PTR [ebp+0x8]
1000662e:	call   0x10002160
10006633:	push   DWORD PTR [ebp+0xc]
10006636:	and    DWORD PTR [ebp-0x4],0x0
1000663a:	push   esi
1000663b:	call   0x1000212b
10006640:	test   al,al
10006642:	jne    0x1000664d
10006644:	push   DWORD PTR [ebp+0xc]
10006647:	push   esi
10006648:	call   0x100020c7
1000664d:	mov    eax,esi
1000664f:	call   0x1005891d
10006654:	ret    0x8
10006657:	push   ebp
10006658:	mov    ebp,esp
1000665a:	sub    esp,0xc
1000665d:	mov    eax,DWORD PTR [eax]
1000665f:	push   ebx
10006660:	push   esi
10006661:	push   edi
10006662:	mov    edi,eax
10006664:	mov    esi,ecx
10006666:	mov    ecx,DWORD PTR [eax-0xc]
10006669:	mov    eax,DWORD PTR [esi]
1000666b:	mov    ebx,DWORD PTR [eax-0xc]
1000666e:	mov    DWORD PTR [ebp-0x8],edi
10006671:	sub    edi,eax
10006673:	lea    eax,[ebx+ecx*1]
10006676:	push   eax
10006677:	mov    DWORD PTR [ebp-0x4],ecx
1000667a:	sar    edi,1
1000667c:	mov    DWORD PTR [ebp-0xc],eax
1000667f:	call   0x100021bb
10006684:	cmp    edi,ebx
10006686:	lea    edi,[eax+edi*2]
10006689:	jbe    0x1000668e
1000668b:	mov    edi,DWORD PTR [ebp-0x8]
1000668e:	push   edi
1000668f:	push   DWORD PTR [ebp-0x4]
10006692:	lea    eax,[eax+ebx*2]
10006695:	push   eax
10006696:	mov    eax,DWORD PTR [ebp-0x4]
10006699:	call   0x10002340
1000669e:	mov    eax,DWORD PTR [ebp-0xc]
100066a1:	add    esp,0xc
100066a4:	mov    edx,esi
100066a6:	call   0x10002246
100066ab:	pop    edi
100066ac:	mov    eax,esi
100066ae:	pop    esi
100066af:	pop    ebx
100066b0:	leave  
100066b1:	ret    
100066b2:	push   ebx
100066b3:	push   esi
100066b4:	mov    esi,eax
100066b6:	mov    eax,DWORD PTR [esi]
100066b8:	push   edi
100066b9:	mov    edi,DWORD PTR [eax-0xc]
100066bc:	lea    ebx,[edi+0x1]
100066bf:	push   ebx
100066c0:	call   0x100021bb
100066c5:	mov    WORD PTR [eax+edi*2],0x5c
100066cb:	pop    edi
100066cc:	mov    edx,esi
100066ce:	pop    esi
100066cf:	mov    eax,ebx
100066d1:	pop    ebx
100066d2:	jmp    0x10002246
100066d7:	push   0x14
100066d9:	push   0x100739e0
100066de:	call   0x1005e1fc
100066e3:	mov    BYTE PTR [ebp-0x1d],0x1
100066e7:	xor    ebx,ebx
100066e9:	mov    DWORD PTR [ebp-0x4],ebx
100066ec:	mov    DWORD PTR [ebp-0x24],ebx
100066ef:	push   0x2000
100066f4:	push   DWORD PTR [ebp+0x8]
100066f7:	lea    eax,[ebp-0x24]
100066fa:	push   eax
100066fb:	call   0x10007166
10006700:	add    esp,0xc
10006703:	cmp    eax,ebx
10006705:	jge    0x1000670c
10006707:	mov    BYTE PTR [ebp-0x1d],bl
1000670a:	jmp    0x10006739
1000670c:	mov    eax,DWORD PTR [ebp-0x24]
1000670f:	call   0x10049010
10006714:	mov    DWORD PTR [ebp-0x18],esp
10006717:	jmp    0x10006739
10006719:	mov    eax,DWORD PTR [ebp-0x14]
1000671c:	mov    eax,DWORD PTR [eax]
1000671e:	mov    eax,DWORD PTR [eax]
10006720:	xor    ecx,ecx
10006722:	cmp    eax,0xc00000fd
10006727:	sete   cl
1000672a:	mov    eax,ecx
1000672c:	ret    
1000672d:	mov    esp,DWORD PTR [ebp-0x18]
10006730:	mov    BYTE PTR [ebp-0x1d],0x0
10006734:	call   0x10043da0
10006739:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10006740:	mov    al,BYTE PTR [ebp-0x1d]
10006743:	lea    esp,[ebp-0x34]
10006746:	call   0x1005e244
1000674b:	ret    
1000674c:	xor    eax,eax
1000674e:	cmp    esi,eax
10006750:	je     0x10006779
10006752:	cmp    DWORD PTR [esp+0x4],eax
10006756:	je     0x10006779
10006758:	push   DWORD PTR [esp+0x8]
1000675c:	mov    WORD PTR [esi],ax
1000675f:	push   esi
10006760:	push   0xffffffff
10006762:	push   DWORD PTR [esp+0x10]
10006766:	push   eax
10006767:	push   DWORD PTR [esp+0x20]
1000676b:	call   DWORD PTR ds:0x1006508c
10006771:	neg    eax
10006773:	sbb    eax,eax
10006775:	and    eax,esi
10006777:	jmp    0x1000677b
10006779:	xor    eax,eax
1000677b:	ret    0xc
1000677e:	xor    eax,eax
10006780:	cmp    esi,eax
10006782:	je     0x100067ac
10006784:	cmp    DWORD PTR [esp+0x4],eax
10006788:	je     0x100067ac
1000678a:	push   eax
1000678b:	push   eax
1000678c:	push   DWORD PTR [esp+0x10]
10006790:	mov    BYTE PTR [esi],al
10006792:	push   esi
10006793:	push   0xffffffff
10006795:	push   DWORD PTR [esp+0x18]
10006799:	push   eax
1000679a:	push   DWORD PTR [esp+0x28]
1000679e:	call   DWORD PTR ds:0x100650dc
100067a4:	neg    eax
100067a6:	sbb    eax,eax
100067a8:	and    eax,esi
100067aa:	jmp    0x100067ae
100067ac:	xor    eax,eax
100067ae:	ret    0xc
100067b1:	mov    edx,DWORD PTR [ecx]
100067b3:	mov    eax,DWORD PTR [esp+0x4]
100067b7:	cmp    edx,DWORD PTR [eax]
100067b9:	jne    0x100067d8
100067bb:	mov    edx,DWORD PTR [ecx+0x4]
100067be:	cmp    edx,DWORD PTR [eax+0x4]
100067c1:	jne    0x100067d8
100067c3:	mov    edx,DWORD PTR [ecx+0x8]
100067c6:	cmp    edx,DWORD PTR [eax+0x8]
100067c9:	jne    0x100067d8
100067cb:	mov    ecx,DWORD PTR [ecx+0xc]
100067ce:	cmp    ecx,DWORD PTR [eax+0xc]
100067d1:	jne    0x100067d8
100067d3:	xor    eax,eax
100067d5:	inc    eax
100067d6:	jmp    0x100067da
100067d8:	xor    eax,eax
100067da:	ret    0x4
100067dd:	push   DWORD PTR [esp+0x4]
100067e1:	call   0x1004fc5f
100067e6:	pop    ecx
100067e7:	ret    0x4
100067ea:	push   ecx
100067eb:	call   0x1004fca2
100067f0:	pop    ecx
100067f1:	ret    
100067f2:	push   0x20
100067f4:	mov    eax,0x1005f446
100067f9:	call   0x100588ae
100067fe:	mov    eax,DWORD PTR [ebp+0x8]
10006801:	xor    edi,edi
10006803:	mov    DWORD PTR [ebp-0x18],eax
10006806:	mov    esi,ecx
10006808:	mov    DWORD PTR [ebp-0x1c],edi
1000680b:	call   DWORD PTR ds:0x1007dfe4
10006811:	mov    DWORD PTR [ebp-0x24],eax
10006814:	mov    DWORD PTR [ebp-0x14],edi
10006817:	push   edi
10006818:	lea    eax,[ebp-0x20]
1000681b:	push   eax
1000681c:	push   esi
1000681d:	mov    DWORD PTR [ebp-0x4],edi
10006820:	call   0x1004fc6b
10006825:	push   edi
10006826:	lea    eax,[ebp-0x28]
10006829:	push   eax
1000682a:	push   esi
1000682b:	call   0x1004fc6b
10006830:	mov    eax,DWORD PTR [ebp-0x20]
10006833:	add    esp,0x18
10006836:	cmp    eax,edi
10006838:	mov    DWORD PTR [ebp-0x1c],eax
1000683b:	je     0x10006863
1000683d:	push   eax
1000683e:	call   DWORD PTR ds:0x100650e0
10006844:	push   edi
10006845:	inc    eax
10006846:	cdq    
10006847:	push   0x2
10006849:	push   edx
1000684a:	push   eax
1000684b:	call   0x1004b7c0
10006850:	mov    ebx,eax
10006852:	add    eax,0x80000000
10006857:	adc    edx,edi
10006859:	mov    DWORD PTR [ebp-0x28],edx
1000685c:	jne    0x10006863
1000685e:	cmp    eax,0xffffffff
10006861:	jbe    0x10006867
10006863:	xor    eax,eax
10006865:	jmp    0x1000689c
10006867:	cmp    ebx,0x400
1000686d:	jg     0x10006885
1000686f:	push   ebx
10006870:	call   0x100066d7
10006875:	test   al,al
10006877:	pop    ecx
10006878:	je     0x10006885
1000687a:	mov    eax,ebx
1000687c:	call   0x10049010
10006881:	mov    eax,esp
10006883:	jmp    0x1000688e
10006885:	push   ebx
10006886:	lea    esi,[ebp-0x14]
10006889:	call   0x10007103
1000688e:	push   DWORD PTR [ebp-0x24]
10006891:	mov    esi,eax
10006893:	push   ebx
10006894:	push   DWORD PTR [ebp-0x1c]
10006897:	call   0x1000677e
1000689c:	mov    ecx,DWORD PTR [ebp-0x18]
1000689f:	push   eax
100068a0:	call   0x100011d6
100068a5:	cmp    DWORD PTR [ebp-0x14],edi
100068a8:	je     0x100068bd
100068aa:	mov    eax,DWORD PTR [ebp-0x14]
100068ad:	mov    esi,DWORD PTR [eax]
100068af:	push   eax
100068b0:	mov    DWORD PTR [ebp-0x14],esi
100068b3:	call   0x10042408
100068b8:	cmp    esi,edi
100068ba:	pop    ecx
100068bb:	jne    0x100068aa
100068bd:	mov    eax,DWORD PTR [ebp-0x18]
100068c0:	lea    esp,[ebp-0x3c]
100068c3:	call   0x10058931
100068c8:	ret    
100068c9:	push   0xc
100068cb:	mov    eax,0x1006006e
100068d0:	call   0x10058845
100068d5:	xor    edi,edi
100068d7:	mov    esi,ecx
100068d9:	mov    DWORD PTR [ebp-0x10],edi
100068dc:	call   DWORD PTR ds:0x1007dfe4
100068e2:	mov    DWORD PTR [ebp-0x18],edi
100068e5:	push   edi
100068e6:	lea    eax,[ebp-0x10]
100068e9:	push   eax
100068ea:	push   ebx
100068eb:	mov    DWORD PTR [ebp-0x4],edi
100068ee:	call   0x1004fcae
100068f3:	push   edi
100068f4:	lea    eax,[ebp-0x14]
100068f7:	push   eax
100068f8:	push   ebx
100068f9:	call   0x1004fcae
100068fe:	mov    ecx,DWORD PTR [ebp-0x14]
10006901:	add    eax,ecx
10006903:	sub    eax,DWORD PTR [ebp-0x10]
10006906:	add    esp,0x18
10006909:	push   eax
1000690a:	push   DWORD PTR [ebp-0x10]
1000690d:	call   0x10003bbb
10006912:	mov    eax,esi
10006914:	call   0x1005891d
10006919:	ret    
1000691a:	push   0x74
1000691c:	mov    eax,0x10061c28
10006921:	call   0x100588ae
10006926:	mov    eax,DWORD PTR [ebp+0xc]
10006929:	mov    esi,DWORD PTR [ebp+0x8]
1000692c:	push   eax
1000692d:	push   esi
1000692e:	mov    DWORD PTR [ebp-0x34],eax
10006931:	call   DWORD PTR ds:0x1007fc2c
10006937:	mov    ebx,eax
10006939:	mov    edi,0x80000000
1000693e:	test   edi,ebx
10006940:	mov    DWORD PTR [ebp-0x38],ebx
10006943:	jne    0x10006a59
10006949:	lea    eax,[ebp-0x48]
1000694c:	push   eax
1000694d:	call   0x1004fc4e
10006952:	pop    ecx
10006953:	and    DWORD PTR [ebp-0x4],0x0
10006957:	mov    eax,DWORD PTR [esi]
10006959:	lea    ecx,[ebp-0x48]
1000695c:	push   ecx
1000695d:	push   esi
1000695e:	call   DWORD PTR [eax+0xc4]
10006964:	test   edi,eax
10006966:	je     0x10006978
10006968:	lea    eax,[ebp-0x48]
1000696b:	push   eax
1000696c:	call   0x1004fc5f
10006971:	mov    eax,ebx
10006973:	jmp    0x10006a58
10006978:	lea    eax,[ebp-0x80]
1000697b:	push   eax
1000697c:	lea    ecx,[ebp-0x48]
1000697f:	call   0x100067f2
10006984:	pop    ecx
10006985:	lea    ecx,[ebp-0x30]
10006988:	push   ecx
10006989:	push   0x1007fec8
1000698e:	mov    ecx,eax
10006990:	mov    BYTE PTR [ebp-0x4],0x1
10006994:	call   0x100195fa
10006999:	push   0x0
1000699b:	push   0x1
1000699d:	lea    ecx,[ebp-0x80]
100069a0:	mov    BYTE PTR [ebp-0x4],0x3
100069a4:	call   0x100012f9
100069a9:	lea    edi,[ebp-0x30]
100069ac:	call   0x1001949f
100069b1:	test   al,al
100069b3:	jne    0x10006a40
100069b9:	call   DWORD PTR ds:0x1007dfe4
100069bf:	mov    ebx,eax
100069c1:	mov    eax,DWORD PTR [ebp-0x30]
100069c4:	dec    eax
100069c5:	je     0x100069de
100069c7:	dec    eax
100069c8:	jne    0x10006a40
100069ca:	push   0xffffffff
100069cc:	push   0x1006be04
100069d1:	push   DWORD PTR [ebp-0x34]
100069d4:	call   0x1004fc80
100069d9:	add    esp,0xc
100069dc:	jmp    0x10006a40
100069de:	lea    eax,[ebp-0x64]
100069e1:	push   eax
100069e2:	lea    eax,[ebp-0x30]
100069e5:	call   0x100194bf
100069ea:	cmp    DWORD PTR [eax+0x18],0x10
100069ee:	jb     0x100069f5
100069f0:	mov    esi,DWORD PTR [eax+0x4]
100069f3:	jmp    0x100069f8
100069f5:	lea    esi,[eax+0x4]
100069f8:	test   esi,esi
100069fa:	je     0x10006a0e
100069fc:	push   esi
100069fd:	call   DWORD PTR ds:0x100650d4
10006a03:	mov    edi,eax
10006a05:	inc    edi
10006a06:	cmp    edi,0x3fffffff
10006a0c:	jle    0x10006a12
10006a0e:	xor    eax,eax
10006a10:	jmp    0x10006a26
10006a12:	lea    eax,[edi+edi*1]
10006a15:	call   0x10049010
10006a1a:	mov    eax,esp
10006a1c:	push   ebx
10006a1d:	push   edi
10006a1e:	push   esi
10006a1f:	mov    esi,eax
10006a21:	call   0x1000674c
10006a26:	push   0xffffffff
10006a28:	push   eax
10006a29:	push   DWORD PTR [ebp-0x34]
10006a2c:	call   0x1004fc80
10006a31:	add    esp,0xc
10006a34:	push   0x0
10006a36:	push   0x1
10006a38:	lea    ecx,[ebp-0x64]
10006a3b:	call   0x100012f9
10006a40:	push   0x0
10006a42:	push   0x1
10006a44:	lea    ecx,[ebp-0x2c]
10006a47:	call   0x100012f9
10006a4c:	lea    eax,[ebp-0x48]
10006a4f:	push   eax
10006a50:	call   0x1004fc5f
10006a55:	mov    eax,DWORD PTR [ebp-0x38]
10006a58:	pop    ecx
10006a59:	lea    esp,[ebp-0x90]
10006a5f:	call   0x10058931
10006a64:	ret    0x8
10006a67:	push   0x30
10006a69:	mov    eax,0x100623a1
10006a6e:	call   0x100588ae
10006a73:	mov    esi,DWORD PTR [ebp+0x18]
10006a76:	mov    edx,DWORD PTR [ebp+0x14]
10006a79:	mov    ecx,DWORD PTR [ebp+0x10]
10006a7c:	mov    edi,DWORD PTR [ebp+0xc]
10006a7f:	mov    eax,DWORD PTR [ebp+0x8]
10006a82:	push   esi
10006a83:	push   edx
10006a84:	push   ecx
10006a85:	push   edi
10006a86:	push   eax
10006a87:	mov    DWORD PTR [ebp-0x3c],esi
10006a8a:	call   DWORD PTR ds:0x1007fc24
10006a90:	xor    ebx,ebx
10006a92:	push   ebx
10006a93:	mov    esi,0x1007fd74
10006a98:	push   esi
10006a99:	mov    DWORD PTR [ebp-0x38],eax
10006a9c:	call   DWORD PTR ds:0x100650e4
10006aa2:	test   eax,eax
10006aa4:	jne    0x10006b75
10006aaa:	lea    eax,[ebp-0x20]
10006aad:	push   eax
10006aae:	mov    ecx,edi
10006ab0:	mov    DWORD PTR [ebp-0x20],0x5d0fcdd0
10006ab7:	mov    WORD PTR [ebp-0x1c],0x4daa
10006abd:	mov    WORD PTR [ebp-0x1a],0x11d2
10006ac3:	mov    BYTE PTR [ebp-0x18],0xb3
10006ac7:	mov    BYTE PTR [ebp-0x17],0x28
10006acb:	mov    BYTE PTR [ebp-0x16],bl
10006ace:	mov    BYTE PTR [ebp-0x15],0x80
10006ad2:	mov    BYTE PTR [ebp-0x14],0x5f
10006ad6:	mov    BYTE PTR [ebp-0x13],0x8a
10006ada:	mov    BYTE PTR [ebp-0x12],0x38
10006ade:	mov    BYTE PTR [ebp-0x11],0x59
10006ae2:	mov    DWORD PTR [ebp-0x30],0xa6cf9084
10006ae9:	mov    WORD PTR [ebp-0x2c],0x15b3
10006aef:	mov    WORD PTR [ebp-0x2a],0x11d2
10006af5:	mov    BYTE PTR [ebp-0x28],0x93
10006af9:	mov    BYTE PTR [ebp-0x27],0x2e
10006afd:	mov    BYTE PTR [ebp-0x26],bl
10006b00:	mov    BYTE PTR [ebp-0x25],0x80
10006b04:	mov    BYTE PTR [ebp-0x24],0x5f
10006b08:	mov    BYTE PTR [ebp-0x23],0x8a
10006b0c:	mov    BYTE PTR [ebp-0x22],0xdd
10006b10:	mov    BYTE PTR [ebp-0x21],0x32
10006b14:	call   0x100067b1
10006b19:	test   eax,eax
10006b1b:	je     0x10006b75
10006b1d:	mov    eax,DWORD PTR [ebp-0x3c]
10006b20:	lea    edx,[ebp-0x34]
10006b23:	push   edx
10006b24:	mov    DWORD PTR [ebp-0x4],ebx
10006b27:	mov    eax,DWORD PTR [eax]
10006b29:	lea    edx,[ebp-0x30]
10006b2c:	push   edx
10006b2d:	mov    DWORD PTR [ebp-0x34],ebx
10006b30:	mov    ecx,DWORD PTR [eax]
10006b32:	push   eax
10006b33:	call   DWORD PTR [ecx]
10006b35:	test   eax,eax
10006b37:	js     0x10006b69
10006b39:	mov    eax,DWORD PTR [ebp-0x34]
10006b3c:	mov    eax,DWORD PTR [eax]
10006b3e:	push   0x1000691a
10006b43:	push   DWORD PTR [eax+0xbc]
10006b49:	call   0x100562e0
10006b4e:	push   ebx
10006b4f:	push   0x1
10006b51:	push   esi
10006b52:	mov    esi,DWORD PTR ds:0x100650d8
10006b58:	mov    ds:0x1007fc2c,eax
10006b5d:	call   esi
10006b5f:	push   ebx
10006b60:	push   0x1
10006b62:	push   0x1007fd80
10006b67:	call   esi
10006b69:	or     DWORD PTR [ebp-0x4],0xffffffff
10006b6d:	lea    ecx,[ebp-0x34]
10006b70:	call   0x1004fcd4
10006b75:	mov    eax,DWORD PTR [ebp-0x38]
10006b78:	call   0x10058931
10006b7d:	ret    0x14
10006b80:	push   0x4
10006b82:	mov    eax,0x100629b2
10006b87:	call   0x10058845
10006b8c:	push   0x0
10006b8e:	mov    esi,0x1007fd7c
10006b93:	push   esi
10006b94:	call   DWORD PTR ds:0x100650e4
10006b9a:	test   eax,eax
10006b9c:	jne    0x10006be6
10006b9e:	push   eax
10006b9f:	push   0x1
10006ba1:	push   esi
10006ba2:	call   DWORD PTR ds:0x100650d8
10006ba8:	and    DWORD PTR [ebp-0x10],0x0
10006bac:	and    DWORD PTR [ebp-0x4],0x0
10006bb0:	lea    ecx,[ebp-0x10]
10006bb3:	call   0x10007150
10006bb8:	push   eax
10006bb9:	call   0x1004fc2c
10006bbe:	test   eax,eax
10006bc0:	pop    ecx
10006bc1:	js     0x10006bda
10006bc3:	mov    eax,DWORD PTR [ebp-0x10]
10006bc6:	mov    eax,DWORD PTR [eax]
10006bc8:	push   0x10006a67
10006bcd:	push   DWORD PTR [eax+0x14]
10006bd0:	call   0x100562e0
10006bd5:	mov    ds:0x1007fc24,eax
10006bda:	or     DWORD PTR [ebp-0x4],0xffffffff
10006bde:	lea    ecx,[ebp-0x10]
10006be1:	call   0x1004fcd4
10006be6:	call   0x1005891d
10006beb:	ret    
10006bec:	push   esi
10006bed:	push   DWORD PTR [esp+0x10]
10006bf1:	push   DWORD PTR [esp+0x10]
10006bf5:	push   DWORD PTR [esp+0x10]
10006bf9:	call   DWORD PTR ds:0x1007fc30
10006bff:	mov    esi,eax
10006c01:	add    esp,0xc
10006c04:	test   esi,esi
10006c06:	js     0x10006c0f
10006c08:	call   0x10006b80
10006c0d:	mov    eax,esi
10006c0f:	pop    esi
10006c10:	ret    
10006c11:	push   0x78
10006c13:	mov    eax,0x1006117c
10006c18:	call   0x100588ae
10006c1d:	mov    eax,DWORD PTR [ebp+0x8]
10006c20:	mov    DWORD PTR [ebp-0x48],eax
10006c23:	lea    eax,[ebp-0x68]
10006c26:	xor    esi,esi
10006c28:	push   eax
10006c29:	mov    DWORD PTR [edi],esi
10006c2b:	call   0x1004fc91
10006c30:	push   0xffffffff
10006c32:	lea    eax,[ebp-0x68]
10006c35:	push   0x1006be08
10006c3a:	push   eax
10006c3b:	mov    DWORD PTR [ebp-0x4],esi
10006c3e:	call   0x1004fcc3
10006c43:	mov    eax,ds:0x1007fc58
10006c48:	mov    ecx,DWORD PTR [eax]
10006c4a:	add    esp,0x10
10006c4d:	lea    edx,[ebp-0x44]
10006c50:	push   edx
10006c51:	push   esi
10006c52:	push   esi
10006c53:	lea    edx,[ebp-0x68]
10006c56:	push   edx
10006c57:	push   eax
10006c58:	call   DWORD PTR [ecx+0x14]
10006c5b:	cmp    eax,esi
10006c5d:	je     0x10006c71
10006c5f:	lea    eax,[ebp-0x68]
10006c62:	push   eax
10006c63:	call   0x1004fca2
10006c68:	pop    ecx
10006c69:	xor    al,al
10006c6b:	call   0x10058931
10006c70:	ret    
10006c71:	lea    edx,[ebp-0x30]
10006c74:	push   edx
10006c75:	xor    ebx,ebx
10006c77:	push   esi
10006c78:	inc    ebx
10006c79:	mov    BYTE PTR [ebp-0x4],bl
10006c7c:	mov    eax,ds:0x1007fc54
10006c81:	push   DWORD PTR [ebp-0x44]
10006c84:	mov    DWORD PTR [ebp-0x30],esi
10006c87:	mov    ecx,DWORD PTR [eax]
10006c89:	push   eax
10006c8a:	call   DWORD PTR [ecx+0xc]
10006c8d:	cmp    eax,esi
10006c8f:	je     0x10006cad
10006c91:	xor    bl,bl
10006c93:	lea    ecx,[ebp-0x30]
10006c96:	mov    BYTE PTR [ebp-0x4],0x0
10006c9a:	call   0x1004fcd4
10006c9f:	lea    eax,[ebp-0x68]
10006ca2:	push   eax
10006ca3:	call   0x1004fca2
10006ca8:	pop    ecx
10006ca9:	mov    al,bl
10006cab:	jmp    0x10006c6b
10006cad:	cmp    DWORD PTR [ebp-0x30],esi
10006cb0:	je     0x10006c93
10006cb2:	lea    eax,[ebp-0x40]
10006cb5:	push   eax
10006cb6:	call   0x1004fc91
10006cbb:	pop    ecx
10006cbc:	push   esi
10006cbd:	lea    ecx,[ebp-0x2c]
10006cc0:	mov    DWORD PTR [ebp-0x14],0xf
10006cc7:	call   0x10001425
10006ccc:	mov    BYTE PTR [ebp-0x4],0x3
10006cd0:	mov    eax,DWORD PTR [ebp-0x30]
10006cd3:	mov    ecx,DWORD PTR [eax]
10006cd5:	lea    edx,[ebp-0x40]
10006cd8:	push   edx
10006cd9:	push   eax
10006cda:	call   DWORD PTR [ecx+0x14]
10006cdd:	cmp    eax,esi
10006cdf:	je     0x10006cf7
10006ce1:	push   esi
10006ce2:	push   ebx
10006ce3:	lea    ecx,[ebp-0x2c]
10006ce6:	call   0x100012f9
10006ceb:	lea    eax,[ebp-0x40]
10006cee:	push   eax
10006cef:	call   0x1004fca2
10006cf4:	pop    ecx
10006cf5:	jmp    0x10006c91
10006cf7:	lea    ebx,[ebp-0x40]
10006cfa:	lea    ecx,[ebp-0x84]
10006d00:	call   0x100068c9
10006d05:	push   0x1006be20
10006d0a:	mov    esi,eax
10006d0c:	mov    BYTE PTR [ebp-0x4],0x4
10006d10:	call   0x10005e33
10006d15:	mov    bl,al
10006d17:	neg    bl
10006d19:	pop    ecx
10006d1a:	sbb    bl,bl
10006d1c:	xor    esi,esi
10006d1e:	push   esi
10006d1f:	push   0x1
10006d21:	lea    ecx,[ebp-0x84]
10006d27:	inc    bl
10006d29:	call   0x100012f9
10006d2e:	test   bl,bl
10006d30:	je     0x10006d4e
10006d32:	push   esi
10006d33:	push   0x1
10006d35:	lea    ecx,[ebp-0x2c]
10006d38:	call   0x100012f9
10006d3d:	lea    eax,[ebp-0x40]
10006d40:	push   eax
10006d41:	call   0x1004fca2
10006d46:	pop    ecx
10006d47:	mov    bl,0x1
10006d49:	jmp    0x10006c93
10006d4e:	lea    eax,[ebp-0x58]
10006d51:	push   eax
10006d52:	call   0x1004fc91
10006d57:	pop    ecx
10006d58:	mov    BYTE PTR [ebp-0x4],0x5
10006d5c:	mov    eax,DWORD PTR [ebp-0x30]
10006d5f:	mov    ecx,DWORD PTR [eax]
10006d61:	lea    edx,[ebp-0x58]
10006d64:	push   edx
10006d65:	push   eax
10006d66:	call   DWORD PTR [ecx+0xc]
10006d69:	cmp    eax,esi
10006d6b:	je     0x10006d7f
10006d6d:	lea    eax,[ebp-0x58]
10006d70:	push   eax
10006d71:	call   0x1004fca2
10006d76:	pop    ecx
10006d77:	push   esi
10006d78:	push   0x1
10006d7a:	jmp    0x10006ce3
10006d7f:	lea    ebx,[ebp-0x58]
10006d82:	lea    ecx,[ebp-0x84]
10006d88:	call   0x100068c9
10006d8d:	mov    ecx,DWORD PTR [ebp-0x48]
10006d90:	push   0xffffffff
10006d92:	xor    ebx,ebx
10006d94:	push   ebx
10006d95:	push   eax
10006d96:	mov    BYTE PTR [ebp-0x4],0x6
10006d9a:	call   0x1000124a
10006d9f:	push   ebx
10006da0:	push   0x1
10006da2:	lea    ecx,[ebp-0x84]
10006da8:	mov    BYTE PTR [ebp-0x4],0x5
10006dac:	call   0x100012f9
10006db1:	mov    eax,DWORD PTR [ebp-0x30]
10006db4:	mov    ecx,DWORD PTR [eax]
10006db6:	push   edi
10006db7:	push   eax
10006db8:	call   DWORD PTR [ecx+0x10]
10006dbb:	cmp    eax,ebx
10006dbd:	lea    eax,[ebp-0x58]
10006dc0:	push   eax
10006dc1:	je     0x10006de3
10006dc3:	call   0x1004fca2
10006dc8:	pop    ecx
10006dc9:	push   ebx
10006dca:	push   0x1
10006dcc:	lea    ecx,[ebp-0x2c]
10006dcf:	call   0x100012f9
10006dd4:	lea    eax,[ebp-0x40]
10006dd7:	push   eax
10006dd8:	call   0x1004fca2
10006ddd:	pop    ecx
10006dde:	jmp    0x10006c93
10006de3:	call   0x1004fca2
10006de8:	pop    ecx
10006de9:	push   ebx
10006dea:	jmp    0x10006d33
10006def:	jmp    0x1004fcd4
10006df4:	push   ebp
10006df5:	mov    ebp,esp
10006df7:	sub    esp,0x1c
10006dfa:	mov    eax,ds:0x1007d030
10006dff:	xor    eax,ebp
10006e01:	mov    DWORD PTR [ebp-0x8],eax
10006e04:	mov    edx,DWORD PTR [ebp+0x14]
10006e07:	mov    ecx,DWORD PTR [ebp+0x10]
10006e0a:	mov    eax,DWORD PTR [ebp+0xc]
10006e0d:	push   esi
10006e0e:	mov    esi,DWORD PTR [ebp+0x8]
10006e11:	push   edi
10006e12:	push   DWORD PTR [ebp+0x18]
10006e15:	push   edx
10006e16:	push   ecx
10006e17:	push   eax
10006e18:	push   esi
10006e19:	call   DWORD PTR ds:0x1007fc20
10006e1f:	mov    edi,eax
10006e21:	add    esp,0x14
10006e24:	test   edi,edi
10006e26:	js     0x10006ec9
10006e2c:	mov    esi,DWORD PTR [esi]
10006e2e:	mov    eax,DWORD PTR [esi]
10006e30:	push   esi
10006e31:	call   DWORD PTR [eax+0x4]
10006e34:	mov    eax,DWORD PTR [esi]
10006e36:	push   0x1007fc54
10006e3b:	lea    ecx,[ebp-0x18]
10006e3e:	push   ecx
10006e3f:	push   0x1006be28
10006e44:	push   esi
10006e45:	mov    DWORD PTR [ebp-0x18],0xe38ab577
10006e4c:	mov    WORD PTR [ebp-0x14],0x786e
10006e52:	mov    WORD PTR [ebp-0x12],0x4a7f
10006e58:	mov    BYTE PTR [ebp-0x10],0x93
10006e5c:	mov    BYTE PTR [ebp-0xf],0x6b
10006e60:	mov    BYTE PTR [ebp-0xe],0x7a
10006e64:	mov    BYTE PTR [ebp-0xd],0xe4
10006e68:	mov    BYTE PTR [ebp-0xc],0xc7
10006e6c:	mov    BYTE PTR [ebp-0xb],0xd8
10006e70:	mov    BYTE PTR [ebp-0xa],0x77
10006e74:	mov    BYTE PTR [ebp-0x9],0xb2
10006e78:	call   DWORD PTR [eax+0x10]
10006e7b:	mov    eax,DWORD PTR [esi]
10006e7d:	push   0x1007fc58
10006e82:	lea    ecx,[ebp-0x18]
10006e85:	push   ecx
10006e86:	push   0x1006be58
10006e8b:	push   esi
10006e8c:	mov    DWORD PTR [ebp-0x18],0xbddeda3f
10006e93:	mov    WORD PTR [ebp-0x14],0x9020
10006e99:	mov    WORD PTR [ebp-0x12],0x4d12
10006e9f:	mov    BYTE PTR [ebp-0x10],0x8c
10006ea3:	mov    BYTE PTR [ebp-0xf],0x70
10006ea7:	mov    BYTE PTR [ebp-0xe],0x98
10006eab:	mov    BYTE PTR [ebp-0xd],0x4e
10006eaf:	mov    BYTE PTR [ebp-0xc],0xe9
10006eb3:	mov    BYTE PTR [ebp-0xb],0xf7
10006eb7:	mov    BYTE PTR [ebp-0xa],0x93
10006ebb:	mov    BYTE PTR [ebp-0x9],0x5e
10006ebf:	call   DWORD PTR [eax+0x10]
10006ec2:	call   0x10006b80
10006ec7:	mov    eax,edi
10006ec9:	mov    ecx,DWORD PTR [ebp-0x8]
10006ecc:	pop    edi
10006ecd:	xor    ecx,ebp
10006ecf:	pop    esi
10006ed0:	call   0x10041d97
10006ed5:	leave  
10006ed6:	ret    
10006ed7:	push   ebx
10006ed8:	push   esi
10006ed9:	push   edi
10006eda:	mov    edi,DWORD PTR [esp+0x10]
10006ede:	push   edi
10006edf:	call   DWORD PTR ds:0x1007fc28
10006ee5:	pop    ecx
10006ee6:	push   0x0
10006ee8:	mov    esi,0x1007fd7c
10006eed:	push   esi
10006eee:	mov    ebx,eax
10006ef0:	call   DWORD PTR ds:0x100650e4
10006ef6:	test   eax,eax
10006ef8:	jne    0x10006f1c
10006efa:	push   eax
10006efb:	push   0x1
10006efd:	push   esi
10006efe:	call   DWORD PTR ds:0x100650d8
10006f04:	mov    eax,DWORD PTR [edi]
10006f06:	mov    eax,DWORD PTR [eax]
10006f08:	add    eax,0x14
10006f0b:	push   0x10006a67
10006f10:	push   DWORD PTR [eax]
10006f12:	call   0x100562e0
10006f17:	mov    ds:0x1007fc24,eax
10006f1c:	pop    edi
10006f1d:	pop    esi
10006f1e:	mov    eax,ebx
10006f20:	pop    ebx
10006f21:	ret    
10006f22:	push   ebp
10006f23:	mov    ebp,esp
10006f25:	and    esp,0xfffffff8
10006f28:	push   ecx
10006f29:	push   esi
10006f2a:	push   0x0
10006f2c:	mov    esi,0x1007fd78
10006f31:	push   esi
10006f32:	call   DWORD PTR ds:0x100650e4
10006f38:	test   eax,eax
10006f3a:	jne    0x100070fe
10006f40:	push   eax
10006f41:	push   0x1
10006f43:	push   esi
10006f44:	call   DWORD PTR ds:0x100650d8
10006f4a:	push   0x0
10006f4c:	call   0x1004fb02
10006f51:	test   eax,eax
10006f53:	pop    ecx
10006f54:	js     0x100070fe
10006f5a:	push   0x1006be7c
10006f5f:	push   0xd
10006f61:	push   0x1006beb0
10006f66:	call   0x10003d75
10006f6b:	add    esp,0xc
10006f6e:	push   eax
10006f6f:	push   0x652b0f8e
10006f74:	push   0x62cdd0a6
10006f79:	push   0x720ee4a4
10006f7e:	push   0x1006bec0
10006f83:	call   0x10003d63
10006f88:	pop    ecx
10006f89:	pop    ecx
10006f8a:	push   eax
10006f8b:	call   0x10003d63
10006f90:	pop    ecx
10006f91:	pop    ecx
10006f92:	push   eax
10006f93:	call   0x10003d63
10006f98:	push   eax
10006f99:	push   0x9
10006f9b:	mov    esi,0x1006bee4
10006fa0:	push   esi
10006fa1:	call   0x10003d75
10006fa6:	add    esp,0x14
10006fa9:	push   eax
10006faa:	call   0x10056940
10006faf:	test   eax,eax
10006fb1:	je     0x10006fc3
10006fb3:	push   0x10006bec
10006fb8:	push   eax
10006fb9:	call   0x100562e0
10006fbe:	mov    ds:0x1007fc30,eax
10006fc3:	push   0x1006bef0
10006fc8:	push   0xd
10006fca:	push   0x1006bf18
10006fcf:	call   0x10003d75
10006fd4:	add    esp,0xc
10006fd7:	push   eax
10006fd8:	push   0x7f159970
10006fdd:	push   0x748f6fca
10006fe2:	push   0x604cdcb2
10006fe7:	push   0x2e1e5a
10006fec:	push   0x50c8d69c
10006ff1:	push   0x3cc4e64c
10006ff6:	push   0x1006bf28
10006ffb:	call   0x10003d63
10007000:	pop    ecx
10007001:	pop    ecx
10007002:	push   eax
10007003:	call   0x10003d63
10007008:	pop    ecx
10007009:	pop    ecx
1000700a:	push   eax
1000700b:	call   0x10003d63
10007010:	pop    ecx
10007011:	pop    ecx
10007012:	push   eax
10007013:	call   0x10003d63
10007018:	pop    ecx
10007019:	pop    ecx
1000701a:	push   eax
1000701b:	call   0x10003d63
10007020:	pop    ecx
10007021:	pop    ecx
10007022:	push   eax
10007023:	call   0x10003d63
10007028:	push   eax
10007029:	push   0x9
1000702b:	push   esi
1000702c:	call   0x10003d75
10007031:	add    esp,0x14
10007034:	push   eax
10007035:	call   0x10056940
1000703a:	test   eax,eax
1000703c:	je     0x1000704e
1000703e:	push   0x10006df4
10007043:	push   eax
10007044:	call   0x100562e0
10007049:	mov    ds:0x1007fc20,eax
1000704e:	push   0x2c371550
10007053:	push   0x195a333a
10007058:	push   0x478bc94
1000705d:	push   0x293146be
10007062:	push   0x62d503a4
10007067:	push   0x1006bf64
1000706c:	call   0x10003d63
10007071:	pop    ecx
10007072:	pop    ecx
10007073:	push   eax
10007074:	call   0x10003d63
10007079:	pop    ecx
1000707a:	pop    ecx
1000707b:	push   eax
1000707c:	call   0x10003d63
10007081:	pop    ecx
10007082:	pop    ecx
10007083:	push   eax
10007084:	call   0x10003d63
10007089:	pop    ecx
1000708a:	pop    ecx
1000708b:	push   eax
1000708c:	call   0x10003d63
10007091:	push   eax
10007092:	push   0x16
10007094:	push   0x1006bf8c
10007099:	call   0x10003d75
1000709e:	add    esp,0x14
100070a1:	push   eax
100070a2:	push   0x3c999980
100070a7:	push   0x149364b4
100070ac:	push   0x214ad3f2
100070b1:	push   0x1af924aa
100070b6:	push   0x1006bfa8
100070bb:	call   0x10003d63
100070c0:	pop    ecx
100070c1:	pop    ecx
100070c2:	push   eax
100070c3:	call   0x10003d63
100070c8:	pop    ecx
100070c9:	pop    ecx
100070ca:	push   eax
100070cb:	call   0x10003d63
100070d0:	pop    ecx
100070d1:	pop    ecx
100070d2:	push   eax
100070d3:	call   0x10003d63
100070d8:	push   eax
100070d9:	push   0x9
100070db:	push   esi
100070dc:	call   0x10003d75
100070e1:	add    esp,0x14
100070e4:	push   eax
100070e5:	call   0x10056940
100070ea:	test   eax,eax
100070ec:	je     0x100070fe
100070ee:	push   0x10006ed7
100070f3:	push   eax
100070f4:	call   0x100562e0
100070f9:	mov    ds:0x1007fc28,eax
100070fe:	pop    esi
100070ff:	mov    esp,ebp
10007101:	pop    ebp
10007102:	ret    
10007103:	push   ebp
10007104:	mov    ebp,esp
10007106:	push   0x8
10007108:	push   DWORD PTR [ebp+0x8]
1000710b:	lea    eax,[ebp+0x8]
1000710e:	push   eax
1000710f:	call   0x10007166
10007114:	add    esp,0xc
10007117:	test   eax,eax
10007119:	jge    0x10007121
1000711b:	push   eax
1000711c:	call   0x10001f41
10007121:	push   DWORD PTR [ebp+0x8]
10007124:	call   0x10043cdd
10007129:	test   eax,eax
1000712b:	pop    ecx
1000712c:	je     0x10007137
1000712e:	mov    ecx,DWORD PTR [esi]
10007130:	mov    DWORD PTR [eax],ecx
10007132:	mov    DWORD PTR [esi],eax
10007134:	add    eax,0x8
10007137:	pop    ebp
10007138:	ret    0x4
1000713b:	jmp    0x1000714a
1000713d:	mov    eax,DWORD PTR [esi]
1000713f:	mov    ecx,DWORD PTR [eax]
10007141:	push   eax
10007142:	mov    DWORD PTR [esi],ecx
10007144:	call   0x10042408
10007149:	pop    ecx
1000714a:	cmp    DWORD PTR [esi],0x0
1000714d:	jne    0x1000713d
1000714f:	ret    
10007150:	push   esi
10007151:	mov    esi,ecx
10007153:	mov    eax,DWORD PTR [esi]
10007155:	and    DWORD PTR [esi],0x0
10007158:	test   eax,eax
1000715a:	je     0x10007162
1000715c:	mov    ecx,DWORD PTR [eax]
1000715e:	push   eax
1000715f:	call   DWORD PTR [ecx+0x8]
10007162:	mov    eax,esi
10007164:	pop    esi
10007165:	ret    
10007166:	mov    eax,DWORD PTR [esp+0x8]
1000716a:	mov    ecx,DWORD PTR [esp+0xc]
1000716e:	or     edx,0xffffffff
10007171:	sub    edx,eax
10007173:	cmp    edx,ecx
10007175:	jae    0x1000717d
10007177:	mov    eax,0x80070057
1000717c:	ret    
1000717d:	add    eax,ecx
1000717f:	mov    ecx,DWORD PTR [esp+0x4]
10007183:	mov    DWORD PTR [ecx],eax
10007185:	xor    eax,eax
10007187:	ret    
10007188:	test   esi,esi
1000718a:	jne    0x1000718f
1000718c:	xor    eax,eax
1000718e:	ret    
1000718f:	test   edi,edi
10007191:	je     0x10007199
10007193:	mov    eax,DWORD PTR [edi]
10007195:	push   edi
10007196:	call   DWORD PTR [eax+0x4]
10007199:	mov    eax,DWORD PTR [esi]
1000719b:	test   eax,eax
1000719d:	je     0x100071a5
1000719f:	mov    ecx,DWORD PTR [eax]
100071a1:	push   eax
100071a2:	call   DWORD PTR [ecx+0x8]
100071a5:	mov    DWORD PTR [esi],edi
100071a7:	mov    eax,edi
100071a9:	ret    
100071aa:	cmp    DWORD PTR [eax+0x18],0x10
100071ae:	jb     0x100071b5
100071b0:	mov    eax,DWORD PTR [eax+0x4]
100071b3:	jmp    0x100071b8
100071b5:	add    eax,0x4
100071b8:	cmp    DWORD PTR [ecx+0x18],0x10
100071bc:	jb     0x100071c3
100071be:	mov    ecx,DWORD PTR [ecx+0x4]
100071c1:	jmp    0x100071c6
100071c3:	add    ecx,0x4
100071c6:	push   eax
100071c7:	push   ecx
100071c8:	call   0x100443bf
100071cd:	pop    ecx
100071ce:	pop    ecx
100071cf:	xor    ecx,ecx
100071d1:	test   eax,eax
100071d3:	setl   cl
100071d6:	mov    al,cl
100071d8:	ret    
100071d9:	push   0x0
100071db:	mov    eax,0x1005f423
100071e0:	call   0x10058845
100071e5:	mov    esi,DWORD PTR [ebp+0x8]
100071e8:	xor    ebx,ebx
100071ea:	mov    DWORD PTR [esi],ebx
100071ec:	mov    DWORD PTR [ebp-0x4],ebx
100071ef:	mov    DWORD PTR [esi+0x8],ebx
100071f2:	mov    DWORD PTR [esi+0xc],ebx
100071f5:	mov    DWORD PTR [esi+0x10],ebx
100071f8:	push   0x400
100071fd:	mov    BYTE PTR [ebp-0x4],0x1
10007201:	call   0x10042609
10007206:	mov    DWORD PTR [esi+0x14],eax
10007209:	pop    ecx
1000720a:	mov    DWORD PTR [esi+0x18],ebx
1000720d:	mov    DWORD PTR [esi+0x1c],0x400
10007214:	mov    DWORD PTR [esi+0x20],ebx
10007217:	mov    eax,esi
10007219:	call   0x1005891d
1000721e:	ret    0x4
10007221:	push   esi
10007222:	mov    esi,eax
10007224:	mov    eax,DWORD PTR [esi+0x18]
10007227:	add    eax,edi
10007229:	call   0x100073fe
1000722e:	mov    eax,DWORD PTR [esi+0x14]
10007231:	add    eax,DWORD PTR [esi+0x18]
10007234:	push   edi
10007235:	push   DWORD PTR [esp+0xc]
10007239:	push   eax
1000723a:	call   0x10043ed0
1000723f:	add    DWORD PTR [esi+0x18],edi
10007242:	add    esp,0xc
10007245:	pop    esi
10007246:	ret    0x4
10007249:	push   ebp
1000724a:	mov    ebp,esp
1000724c:	push   ecx
1000724d:	mov    ecx,DWORD PTR [edi+0x4]
10007250:	push   ebx
10007251:	mov    ebx,DWORD PTR [ebp+0xc]
10007254:	cmp    ebx,ecx
10007256:	push   esi
10007257:	mov    esi,eax
10007259:	jbe    0x10007267
1000725b:	mov    eax,DWORD PTR [esi+0x18]
1000725e:	sub    eax,ecx
10007260:	add    eax,ebx
10007262:	call   0x100073fe
10007267:	mov    ecx,DWORD PTR [edi+0x4]
1000726a:	mov    eax,DWORD PTR [edi]
1000726c:	mov    edx,DWORD PTR [esi+0x18]
1000726f:	sub    ebx,ecx
10007271:	add    ecx,eax
10007273:	mov    DWORD PTR [ebp-0x4],ecx
10007276:	sub    edx,DWORD PTR [ebp-0x4]
10007279:	mov    ecx,DWORD PTR [esi+0x14]
1000727c:	push   edx
1000727d:	mov    edx,DWORD PTR [ebp-0x4]
10007280:	add    edx,ecx
10007282:	add    ecx,eax
10007284:	add    ecx,DWORD PTR [ebp+0xc]
10007287:	push   edx
10007288:	push   ecx
10007289:	call   0x10044410
1000728e:	push   DWORD PTR [ebp+0xc]
10007291:	mov    eax,DWORD PTR [esi+0x14]
10007294:	add    eax,DWORD PTR [edi]
10007296:	push   DWORD PTR [ebp+0x8]
10007299:	push   eax
1000729a:	call   0x10044410
1000729f:	add    esp,0x18
100072a2:	push   ebx
100072a3:	push   DWORD PTR [edi]
100072a5:	mov    eax,esi
100072a7:	call   0x10007396
100072ac:	mov    eax,DWORD PTR [ebp+0xc]
100072af:	mov    DWORD PTR [edi+0x4],eax
100072b2:	add    DWORD PTR [esi+0x18],ebx
100072b5:	pop    esi
100072b6:	pop    ebx
100072b7:	leave  
100072b8:	ret    0x8
100072bb:	push   ebp
100072bc:	mov    ebp,esp
100072be:	sub    esp,0xc
100072c1:	push   esi
100072c2:	mov    esi,eax
100072c4:	mov    edx,DWORD PTR [esi+0x8]
100072c7:	add    esi,0x4
100072ca:	test   edx,edx
100072cc:	push   edi
100072cd:	jne    0x100072d3
100072cf:	xor    ecx,ecx
100072d1:	jmp    0x100072db
100072d3:	mov    ecx,DWORD PTR [esi+0x8]
100072d6:	sub    ecx,edx
100072d8:	sar    ecx,0x2
100072db:	test   edx,edx
100072dd:	je     0x100072fb
100072df:	mov    eax,DWORD PTR [esi+0xc]
100072e2:	sub    eax,edx
100072e4:	sar    eax,0x2
100072e7:	cmp    ecx,eax
100072e9:	jae    0x100072fb
100072eb:	mov    eax,DWORD PTR [esi+0x8]
100072ee:	mov    ecx,DWORD PTR [ebp+0x8]
100072f1:	mov    DWORD PTR [eax],ecx
100072f3:	add    eax,0x4
100072f6:	mov    DWORD PTR [esi+0x8],eax
100072f9:	jmp    0x10007318
100072fb:	mov    edi,DWORD PTR [esi+0x8]
100072fe:	cmp    edx,edi
10007300:	jbe    0x10007307
10007302:	call   0x100422b0
10007307:	push   edi
10007308:	push   esi
10007309:	lea    eax,[ebp+0x8]
1000730c:	push   eax
1000730d:	lea    eax,[ebp-0xc]
10007310:	push   eax
10007311:	mov    eax,esi
10007313:	call   0x10009a94
10007318:	pop    edi
10007319:	pop    esi
1000731a:	leave  
1000731b:	ret    0x4
1000731e:	push   ebx
1000731f:	push   esi
10007320:	mov    esi,eax
10007322:	add    esi,0x4
10007325:	push   edi
10007326:	mov    edi,DWORD PTR [esi+0x4]
10007329:	cmp    edi,DWORD PTR [esi+0x8]
1000732c:	jbe    0x10007333
1000732e:	call   0x100422b0
10007333:	mov    ebx,DWORD PTR [esi+0x8]
10007336:	cmp    DWORD PTR [esi+0x4],ebx
10007339:	jbe    0x10007340
1000733b:	call   0x100422b0
10007340:	cmp    esi,esi
10007342:	je     0x10007349
10007344:	call   0x100422b0
10007349:	cmp    edi,ebx
1000734b:	je     0x10007390
1000734d:	cmp    edi,DWORD PTR [esi+0x8]
10007350:	jb     0x10007357
10007352:	call   0x100422b0
10007357:	mov    eax,DWORD PTR [edi]
10007359:	cmp    eax,DWORD PTR [esp+0x10]
1000735d:	je     0x1000736e
1000735f:	cmp    edi,DWORD PTR [esi+0x8]
10007362:	jb     0x10007369
10007364:	call   0x100422b0
10007369:	add    edi,0x4
1000736c:	jmp    0x10007333
1000736e:	mov    eax,DWORD PTR [esi+0x8]
10007371:	lea    ecx,[edi+0x4]
10007374:	sub    eax,ecx
10007376:	sar    eax,0x2
10007379:	test   eax,eax
1000737b:	jle    0x1000738c
1000737d:	shl    eax,0x2
10007380:	push   eax
10007381:	push   ecx
10007382:	push   eax
10007383:	push   edi
10007384:	call   0x10041da6
10007389:	add    esp,0x10
1000738c:	add    DWORD PTR [esi+0x8],0xfffffffc
10007390:	pop    edi
10007391:	pop    esi
10007392:	pop    ebx
10007393:	ret    0x4
10007396:	push   ebp
10007397:	mov    ebp,esp
10007399:	and    esp,0xfffffff8
1000739c:	push   ecx
1000739d:	push   ebx
1000739e:	push   esi
1000739f:	mov    esi,eax
100073a1:	add    esi,0x4
100073a4:	push   edi
100073a5:	mov    edi,DWORD PTR [esi+0x4]
100073a8:	cmp    edi,DWORD PTR [esi+0x8]
100073ab:	jbe    0x100073b2
100073ad:	call   0x100422b0
100073b2:	mov    ebx,DWORD PTR [esi+0x8]
100073b5:	cmp    DWORD PTR [esi+0x4],ebx
100073b8:	jbe    0x100073bf
100073ba:	call   0x100422b0
100073bf:	cmp    esi,esi
100073c1:	je     0x100073c8
100073c3:	call   0x100422b0
100073c8:	cmp    edi,ebx
100073ca:	je     0x100073f5
100073cc:	cmp    edi,DWORD PTR [esi+0x8]
100073cf:	jb     0x100073d6
100073d1:	call   0x100422b0
100073d6:	mov    eax,DWORD PTR [edi]
100073d8:	mov    ecx,DWORD PTR [eax]
100073da:	cmp    ecx,DWORD PTR [ebp+0x8]
100073dd:	jbe    0x100073e6
100073df:	mov    edx,DWORD PTR [ebp+0xc]
100073e2:	add    ecx,edx
100073e4:	mov    DWORD PTR [eax],ecx
100073e6:	cmp    edi,DWORD PTR [esi+0x8]
100073e9:	jb     0x100073f0
100073eb:	call   0x100422b0
100073f0:	add    edi,0x4
100073f3:	jmp    0x100073b2
100073f5:	pop    edi
100073f6:	pop    esi
100073f7:	pop    ebx
100073f8:	mov    esp,ebp
100073fa:	pop    ebp
100073fb:	ret    0x8
100073fe:	mov    ecx,DWORD PTR [esi+0x1c]
10007401:	cmp    eax,ecx
10007403:	jbe    0x10007449
10007405:	shr    eax,0xa
10007408:	inc    eax
10007409:	shl    eax,0xa
1000740c:	push   ebx
1000740d:	mov    ebx,eax
1000740f:	cmp    ebx,ecx
10007411:	je     0x10007448
10007413:	push   edi
10007414:	push   ebx
10007415:	call   0x10042609
1000741a:	push   DWORD PTR [esi+0x18]
1000741d:	mov    edi,eax
1000741f:	push   DWORD PTR [esi+0x14]
10007422:	push   edi
10007423:	call   0x10043ed0
10007428:	mov    eax,DWORD PTR [esi+0x14]
1000742b:	add    esp,0x10
1000742e:	cmp    edi,eax
10007430:	je     0x10007439
10007432:	push   eax
10007433:	call   0x10041d92
10007438:	pop    ecx
10007439:	mov    DWORD PTR [esi+0x14],edi
1000743c:	push   0x0
1000743e:	mov    DWORD PTR [esi+0x1c],ebx
10007441:	call   0x10041d92
10007446:	pop    ecx
10007447:	pop    edi
10007448:	pop    ebx
10007449:	ret    
1000744a:	push   0x0
1000744c:	mov    eax,0x1005ea5d
10007451:	call   0x10058845
10007456:	mov    esi,DWORD PTR [ebp+0x8]
10007459:	push   0x8
1000745b:	call   0x1004239e
10007460:	test   eax,eax
10007462:	pop    ecx
10007463:	je     0x10007472
10007465:	mov    ecx,DWORD PTR [ebp+0x10]
10007468:	mov    DWORD PTR [eax],ecx
1000746a:	mov    ecx,DWORD PTR [ebp+0x14]
1000746d:	mov    DWORD PTR [eax+0x4],ecx
10007470:	jmp    0x10007474
10007472:	xor    eax,eax
10007474:	mov    DWORD PTR [esi],eax
10007476:	push   DWORD PTR [ebp+0xc]
10007479:	and    DWORD PTR [ebp-0x4],0x0
1000747d:	lea    ecx,[esi+0x4]
10007480:	call   0x100011b0
10007485:	and    DWORD PTR [esi+0x20],0x0
10007489:	mov    eax,esi
1000748b:	call   0x1005891d
10007490:	ret    0x10
10007493:	push   0x4
10007495:	mov    eax,0x1005f3f5
1000749a:	call   0x10058845
1000749f:	mov    esi,ecx
100074a1:	push   0x24
100074a3:	call   0x1004239e
100074a8:	pop    ecx
100074a9:	mov    DWORD PTR [ebp-0x10],eax
100074ac:	xor    eax,eax
100074ae:	mov    DWORD PTR [ebp-0x4],eax
100074b1:	cmp    DWORD PTR [ebp-0x10],eax
100074b4:	je     0x100074c9
100074b6:	mov    eax,DWORD PTR [esi]
100074b8:	push   DWORD PTR [eax+0x4]
100074bb:	add    esi,0x4
100074be:	push   DWORD PTR [eax]
100074c0:	push   esi
100074c1:	push   DWORD PTR [ebp-0x10]
100074c4:	call   0x1000744a
100074c9:	call   0x1005891d
100074ce:	ret    
100074cf:	push   ecx
100074d0:	mov    ecx,DWORD PTR [esp+0x8]
100074d4:	push   edi
100074d5:	lea    edi,[esi+0x4]
100074d8:	mov    eax,edi
100074da:	call   0x10005e11
100074df:	test   al,al
100074e1:	je     0x100074e7
100074e3:	xor    al,al
100074e5:	jmp    0x10007519
100074e7:	push   0xffffffff
100074e9:	push   0x0
100074eb:	push   DWORD PTR [esp+0x14]
100074ef:	mov    ecx,edi
100074f1:	call   0x1000124a
100074f6:	mov    eax,DWORD PTR [esi+0x20]
100074f9:	test   eax,eax
100074fb:	je     0x10007517
100074fd:	cmp    DWORD PTR [edi+0x18],0x10
10007501:	mov    ecx,DWORD PTR [esi+0x18]
10007504:	jb     0x1000750b
10007506:	mov    edi,DWORD PTR [edi+0x4]
10007509:	jmp    0x1000750e
1000750b:	add    edi,0x4
1000750e:	push   ecx
1000750f:	push   edi
10007510:	mov    edi,DWORD PTR [esi]
10007512:	call   0x10007249
10007517:	mov    al,0x1
10007519:	pop    edi
1000751a:	pop    ecx
1000751b:	ret    0x4
1000751e:	push   ecx
1000751f:	mov    eax,DWORD PTR [esi]
10007521:	add    DWORD PTR [eax],ecx
10007523:	push   DWORD PTR [esi]
10007525:	mov    eax,edi
10007527:	call   0x100072bb
1000752c:	mov    DWORD PTR [esi+0x20],edi
1000752f:	pop    ecx
10007530:	ret    
10007531:	call   0x1000a28a
10007536:	lea    ecx,[esi+0x4]
10007539:	mov    DWORD PTR [ecx],eax
1000753b:	mov    BYTE PTR [eax+0x39],0x1
1000753f:	mov    eax,DWORD PTR [ecx]
10007541:	mov    DWORD PTR [eax+0x4],eax
10007544:	mov    eax,DWORD PTR [ecx]
10007546:	mov    DWORD PTR [eax],eax
10007548:	mov    ecx,DWORD PTR [ecx]
1000754a:	xor    eax,eax
1000754c:	mov    DWORD PTR [ecx+0x8],ecx
1000754f:	mov    DWORD PTR [esi+0x8],eax
10007552:	mov    DWORD PTR [esi+0xc],eax
10007555:	mov    DWORD PTR [esi+0x10],eax
10007558:	mov    eax,esi
1000755a:	ret    
1000755b:	push   esi
1000755c:	push   0x8
1000755e:	call   0x1004239e
10007563:	xor    esi,esi
10007565:	cmp    eax,esi
10007567:	pop    ecx
10007568:	je     0x10007575
1000756a:	mov    ecx,DWORD PTR [esp+0x8]
1000756e:	mov    DWORD PTR [eax+0x4],esi
10007571:	mov    DWORD PTR [eax],ecx
10007573:	mov    esi,eax
10007575:	mov    eax,DWORD PTR [edi+0x10]
10007578:	cmp    esi,eax
1000757a:	je     0x10007583
1000757c:	push   eax
1000757d:	call   0x10041d92
10007582:	pop    ecx
10007583:	mov    DWORD PTR [edi+0x10],esi
10007586:	pop    esi
10007587:	ret    0x4
1000758a:	push   ebp
1000758b:	mov    ebp,esp
1000758d:	and    esp,0xfffffff8
10007590:	sub    esp,0x10
10007593:	mov    eax,DWORD PTR [ebx+0x4]
10007596:	mov    eax,DWORD PTR [eax]
10007598:	push   esi
10007599:	push   edi
1000759a:	mov    DWORD PTR [esp+0xc],eax
1000759e:	mov    DWORD PTR [esp+0x8],ebx
100075a2:	mov    DWORD PTR [esp+0x10],ebx
100075a6:	mov    eax,DWORD PTR [ebx+0x4]
100075a9:	lea    edi,[esp+0x10]
100075ad:	lea    esi,[esp+0x8]
100075b1:	mov    DWORD PTR [esp+0x14],eax
100075b5:	call   0x100046f1
100075ba:	test   al,al
100075bc:	jne    0x1000760d
100075be:	xor    edi,edi
100075c0:	call   0x10009753
100075c5:	add    eax,0x1c
100075c8:	call   0x10004194
100075cd:	test   eax,eax
100075cf:	je     0x10007602
100075d1:	lea    esi,[esp+0x8]
100075d5:	call   0x10009753
100075da:	push   edi
100075db:	lea    esi,[eax+0x1c]
100075de:	call   0x10009853
100075e3:	push   DWORD PTR [eax+0x1c]
100075e6:	call   0x10041d92
100075eb:	pop    ecx
100075ec:	lea    esi,[esp+0x8]
100075f0:	inc    edi
100075f1:	call   0x10009753
100075f6:	add    eax,0x1c
100075f9:	call   0x10004194
100075fe:	cmp    edi,eax
10007600:	jne    0x100075d1
10007602:	lea    esi,[esp+0x8]
10007606:	call   0x10009773
1000760b:	jmp    0x100075a6
1000760d:	push   DWORD PTR [ebx+0x10]
10007610:	call   0x10041d92
10007615:	pop    ecx
10007616:	mov    eax,ebx
10007618:	call   0x10009d00
1000761d:	pop    edi
1000761e:	pop    esi
1000761f:	mov    esp,ebp
10007621:	pop    ebp
10007622:	ret    
10007623:	push   0x1c
10007625:	mov    eax,0x10061123
1000762a:	call   0x10058845
1000762f:	mov    eax,DWORD PTR [ebp+0x8]
10007632:	mov    ecx,DWORD PTR [ebp+0xc]
10007635:	xor    ebx,ebx
10007637:	mov    DWORD PTR [eax+0xc],ebx
1000763a:	mov    eax,DWORD PTR [ecx+0x4]
1000763d:	mov    eax,DWORD PTR [eax]
1000763f:	mov    DWORD PTR [ebp-0x1c],eax
10007642:	mov    DWORD PTR [ebp-0x20],ecx
10007645:	mov    DWORD PTR [ebp-0x28],ecx
10007648:	mov    eax,DWORD PTR [ecx+0x4]
1000764b:	lea    edi,[ebp-0x28]
1000764e:	lea    esi,[ebp-0x20]
10007651:	mov    DWORD PTR [ebp-0x24],eax
10007654:	call   0x100046f1
10007659:	test   al,al
1000765b:	jne    0x1000775f
10007661:	mov    DWORD PTR [ebp-0x10],ebx
10007664:	call   0x10009753
10007669:	add    eax,0x1c
1000766c:	call   0x10004194
10007671:	test   eax,eax
10007673:	je     0x1000774f
10007679:	mov    DWORD PTR [ebp-0x14],ebx
1000767c:	push   DWORD PTR [ebp-0x10]
1000767f:	lea    esi,[ebp-0x20]
10007682:	mov    DWORD PTR [ebp-0x4],ebx
10007685:	call   0x10009753
1000768a:	mov    esi,eax
1000768c:	add    esi,0x1c
1000768f:	call   0x10009853
10007694:	cmp    DWORD PTR [eax+0x1c],ebx
10007697:	je     0x100076f5
10007699:	push   0x8
1000769b:	call   0x1004239e
100076a0:	mov    edi,eax
100076a2:	cmp    edi,ebx
100076a4:	pop    ecx
100076a5:	je     0x100076e5
100076a7:	push   DWORD PTR [ebp-0x10]
100076aa:	lea    esi,[ebp-0x20]
100076ad:	call   0x10009753
100076b2:	mov    esi,eax
100076b4:	add    esi,0x1c
100076b7:	call   0x10009853
100076bc:	mov    eax,DWORD PTR [eax+0x1c]
100076bf:	push   DWORD PTR [ebp-0x10]
100076c2:	mov    ebx,DWORD PTR [eax+0x4]
100076c5:	lea    esi,[ebp-0x20]
100076c8:	call   0x10009753
100076cd:	mov    esi,eax
100076cf:	add    esi,0x1c
100076d2:	call   0x10009853
100076d7:	mov    eax,DWORD PTR [eax+0x1c]
100076da:	mov    eax,DWORD PTR [eax]
100076dc:	mov    DWORD PTR [edi+0x4],ebx
100076df:	mov    DWORD PTR [edi],eax
100076e1:	xor    ebx,ebx
100076e3:	jmp    0x100076e7
100076e5:	xor    edi,edi
100076e7:	cmp    edi,ebx
100076e9:	je     0x100076f2
100076eb:	push   ebx
100076ec:	call   0x10041d92
100076f1:	pop    ecx
100076f2:	mov    DWORD PTR [ebp-0x14],edi
100076f5:	push   ecx
100076f6:	mov    ecx,DWORD PTR [ebp-0x14]
100076f9:	mov    eax,esp
100076fb:	mov    DWORD PTR [ebp-0x18],esp
100076fe:	push   DWORD PTR [ebp-0x10]
10007701:	lea    esi,[ebp-0x20]
10007704:	mov    DWORD PTR [ebp-0x14],ebx
10007707:	mov    DWORD PTR [eax],ecx
10007709:	call   0x10009753
1000770e:	mov    esi,eax
10007710:	add    esi,0x1c
10007713:	call   0x10009853
10007718:	push   eax
10007719:	lea    esi,[ebp-0x20]
1000771c:	call   0x10009753
10007721:	mov    ecx,DWORD PTR [ebp+0x8]
10007724:	mov    edx,eax
10007726:	call   0x1000794b
1000772b:	or     DWORD PTR [ebp-0x4],0xffffffff
1000772f:	push   ebx
10007730:	call   0x10041d92
10007735:	inc    DWORD PTR [ebp-0x10]
10007738:	pop    ecx
10007739:	call   0x10009753
1000773e:	add    eax,0x1c
10007741:	call   0x10004194
10007746:	cmp    DWORD PTR [ebp-0x10],eax
10007749:	jne    0x10007679
1000774f:	lea    esi,[ebp-0x20]
10007752:	call   0x10009773
10007757:	mov    ecx,DWORD PTR [ebp+0xc]
1000775a:	jmp    0x10007648
1000775f:	call   0x1005891d
10007764:	ret    0x8
10007767:	push   ebp
10007768:	mov    ebp,esp
1000776a:	mov    eax,DWORD PTR [ebp+0x8]
1000776d:	mov    ecx,DWORD PTR [eax+0x8]
10007770:	mov    edx,DWORD PTR [ebp+0xc]
10007773:	sub    esp,0x2c
10007776:	cmp    ecx,DWORD PTR [edx+0x8]
10007779:	push   ebx
1000777a:	push   esi
1000777b:	push   edi
1000777c:	je     0x10007785
1000777e:	xor    al,al
10007780:	jmp    0x10007861
10007785:	mov    ecx,DWORD PTR [eax+0x4]
10007788:	mov    ecx,DWORD PTR [ecx]
1000778a:	mov    DWORD PTR [ebp-0xc],ecx
1000778d:	mov    DWORD PTR [ebp-0x10],eax
10007790:	mov    DWORD PTR [ebp-0x18],eax
10007793:	mov    eax,DWORD PTR [eax+0x4]
10007796:	lea    edi,[ebp-0x18]
10007799:	lea    esi,[ebp-0x10]
1000779c:	mov    DWORD PTR [ebp-0x14],eax
1000779f:	call   0x100046f1
100077a4:	test   al,al
100077a6:	jne    0x1000785f
100077ac:	call   0x10009753
100077b1:	mov    ebx,DWORD PTR [ebp+0xc]
100077b4:	push   eax
100077b5:	lea    eax,[ebp-0x28]
100077b8:	push   eax
100077b9:	call   0x10009689
100077be:	mov    eax,ebx
100077c0:	mov    ecx,DWORD PTR [eax+0x4]
100077c3:	lea    edi,[ebp-0x20]
100077c6:	lea    esi,[ebp-0x28]
100077c9:	mov    DWORD PTR [ebp-0x1c],ecx
100077cc:	mov    DWORD PTR [ebp-0x20],eax
100077cf:	call   0x100046f1
100077d4:	test   al,al
100077d6:	jne    0x1000777e
100077d8:	lea    esi,[ebp-0x10]
100077db:	call   0x10009753
100077e0:	mov    edi,eax
100077e2:	lea    esi,[ebp-0x28]
100077e5:	add    edi,0x1c
100077e8:	call   0x10009753
100077ed:	mov    ebx,eax
100077ef:	add    ebx,0x1c
100077f2:	mov    eax,ebx
100077f4:	call   0x10004194
100077f9:	mov    esi,eax
100077fb:	mov    eax,edi
100077fd:	call   0x10004194
10007802:	cmp    eax,esi
10007804:	jne    0x1000777e
1000780a:	and    DWORD PTR [ebp-0x4],0x0
1000780e:	mov    eax,edi
10007810:	call   0x10004194
10007815:	test   eax,eax
10007817:	je     0x1000784f
10007819:	push   DWORD PTR [ebp-0x4]
1000781c:	mov    esi,ebx
1000781e:	call   0x10009853
10007823:	push   DWORD PTR [ebp-0x4]
10007826:	mov    esi,edi
10007828:	mov    DWORD PTR [ebp-0x8],eax
1000782b:	call   0x10009853
10007830:	mov    ecx,DWORD PTR [ebp-0x8]
10007833:	call   0x10005e11
10007838:	test   al,al
1000783a:	je     0x1000777e
10007840:	inc    DWORD PTR [ebp-0x4]
10007843:	mov    eax,edi
10007845:	call   0x10004194
1000784a:	cmp    DWORD PTR [ebp-0x4],eax
1000784d:	jne    0x10007819
1000784f:	lea    esi,[ebp-0x10]
10007852:	call   0x10009773
10007857:	mov    eax,DWORD PTR [ebp+0x8]
1000785a:	jmp    0x10007793
1000785f:	mov    al,0x1
10007861:	pop    edi
10007862:	pop    esi
10007863:	pop    ebx
10007864:	leave  
10007865:	ret    0x8
10007868:	push   0x3c
1000786a:	mov    eax,0x100610f6
1000786f:	call   0x100588ae
10007874:	mov    edi,ecx
10007876:	push   ebx
10007877:	push   edi
10007878:	mov    DWORD PTR [ebp-0x40],edi
1000787b:	call   0x10007767
10007880:	test   al,al
10007882:	je     0x1000788b
10007884:	xor    al,al
10007886:	jmp    0x10007945
1000788b:	call   0x10007ec0
10007890:	mov    eax,DWORD PTR [ebx+0x4]
10007893:	mov    eax,DWORD PTR [eax]
10007895:	mov    DWORD PTR [ebp-0x38],eax
10007898:	mov    DWORD PTR [ebp-0x3c],ebx
1000789b:	mov    DWORD PTR [ebp-0x48],ebx
1000789e:	mov    eax,DWORD PTR [ebx+0x4]
100078a1:	lea    edi,[ebp-0x48]
100078a4:	lea    esi,[ebp-0x3c]
100078a7:	mov    DWORD PTR [ebp-0x44],eax
100078aa:	call   0x100046f1
100078af:	test   al,al
100078b1:	jne    0x10007943
100078b7:	xor    edi,edi
100078b9:	push   edi
100078ba:	mov    DWORD PTR [ebp-0x34],edi
100078bd:	call   0x10009753
100078c2:	push   eax
100078c3:	lea    eax,[ebp-0x30]
100078c6:	push   eax
100078c7:	mov    eax,ebx
100078c9:	call   0x1000800f
100078ce:	mov    DWORD PTR [ebp-0x4],edi
100078d1:	mov    edi,0x1006bb18
100078d6:	jmp    0x10007919
100078d8:	push   0x1
100078da:	lea    esi,[ebp-0x3c]
100078dd:	call   0x10009753
100078e2:	mov    edx,DWORD PTR [ebp-0x40]
100078e5:	push   eax
100078e6:	lea    ecx,[ebp-0x30]
100078e9:	call   0x10007aa4
100078ee:	inc    DWORD PTR [ebp-0x34]
100078f1:	or     DWORD PTR [ebp-0x4],0xffffffff
100078f5:	push   0x0
100078f7:	push   0x1
100078f9:	lea    ecx,[ebp-0x30]
100078fc:	call   0x100012f9
10007901:	push   DWORD PTR [ebp-0x34]
10007904:	call   0x10009753
10007909:	push   eax
1000790a:	lea    eax,[ebp-0x30]
1000790d:	push   eax
1000790e:	mov    eax,ebx
10007910:	call   0x1000800f
10007915:	and    DWORD PTR [ebp-0x4],0x0
10007919:	push   edi
1000791a:	lea    esi,[ebp-0x30]
1000791d:	call   0x10005e33
10007922:	test   al,al
10007924:	pop    ecx
10007925:	je     0x100078d8
10007927:	or     DWORD PTR [ebp-0x4],0xffffffff
1000792b:	push   0x0
1000792d:	push   0x1
1000792f:	mov    ecx,esi
10007931:	call   0x100012f9
10007936:	lea    esi,[ebp-0x3c]
10007939:	call   0x10009773
1000793e:	jmp    0x1000789e
10007943:	mov    al,0x1
10007945:	call   0x10058931
1000794a:	ret    
1000794b:	push   0x9c
10007950:	mov    eax,0x100610c6
10007955:	call   0x100588ae
1000795a:	mov    edi,DWORD PTR [ebp+0x8]
1000795d:	mov    ebx,ecx
1000795f:	mov    esi,edx
10007961:	mov    DWORD PTR [ebp-0x34],ebx
10007964:	mov    DWORD PTR [ebp-0x38],esi
10007967:	and    DWORD PTR [ebp-0x4],0x0
1000796b:	push   0x0
1000796d:	lea    ecx,[ebp-0x30]
10007970:	mov    DWORD PTR [ebp-0x18],0xf
10007977:	call   0x10001425
1000797c:	push   0xffffffff
1000797e:	push   0x0
10007980:	push   edi
10007981:	lea    ecx,[ebp-0x30]
10007984:	mov    BYTE PTR [ebp-0x4],0x1
10007988:	call   0x1000124a
1000798d:	mov    eax,DWORD PTR [ebp+0xc]
10007990:	mov    DWORD PTR [ebp-0x14],eax
10007993:	push   esi
10007994:	lea    eax,[ebp-0x40]
10007997:	push   eax
10007998:	call   0x10009689
1000799d:	mov    eax,DWORD PTR [ebx+0x4]
100079a0:	lea    edi,[ebp-0x48]
100079a3:	lea    esi,[ebp-0x40]
100079a6:	mov    DWORD PTR [ebp-0x44],eax
100079a9:	mov    DWORD PTR [ebp-0x48],ebx
100079ac:	call   0x100046f1
100079b1:	test   al,al
100079b3:	je     0x10007a5e
100079b9:	sub    esp,0x10
100079bc:	mov    eax,esp
100079be:	xor    ecx,ecx
100079c0:	mov    DWORD PTR [ebp-0x50],esp
100079c3:	mov    DWORD PTR [eax+0x4],ecx
100079c6:	mov    DWORD PTR [eax+0x8],ecx
100079c9:	mov    DWORD PTR [eax+0xc],ecx
100079cc:	sub    esp,0x1c
100079cf:	mov    BYTE PTR [ebp-0x4],0x2
100079d3:	mov    ecx,esp
100079d5:	mov    DWORD PTR [ebp-0x44],esp
100079d8:	push   DWORD PTR [ebp-0x38]
100079db:	call   0x100011b0
100079e0:	lea    edi,[ebp-0xa8]
100079e6:	mov    BYTE PTR [ebp-0x4],0x1
100079ea:	call   0x1000a351
100079ef:	add    esp,0x2c
100079f2:	lea    ecx,[ebp-0x7c]
100079f5:	push   ecx
100079f6:	mov    edi,eax
100079f8:	mov    BYTE PTR [ebp-0x4],0x3
100079fc:	call   0x1000a3a0
10007a01:	lea    eax,[ebp-0x7c]
10007a04:	push   eax
10007a05:	push   ebx
10007a06:	lea    ebx,[ebp-0x4c]
10007a09:	mov    BYTE PTR [ebp-0x4],0x4
10007a0d:	call   0x10009328
10007a12:	lea    esi,[ebp-0x60]
10007a15:	call   0x1000424f
10007a1a:	push   0x0
10007a1c:	push   0x1
10007a1e:	lea    ecx,[ebp-0x7c]
10007a21:	call   0x100012f9
10007a26:	lea    esi,[ebp-0x8c]
10007a2c:	mov    BYTE PTR [ebp-0x4],0x1
10007a30:	call   0x1000424f
10007a35:	push   0x0
10007a37:	push   0x1
10007a39:	lea    ecx,[ebp-0xa8]
10007a3f:	call   0x100012f9
10007a44:	push   DWORD PTR [ebp-0x38]
10007a47:	mov    ebx,DWORD PTR [ebp-0x34]
10007a4a:	lea    eax,[ebp-0x48]
10007a4d:	push   eax
10007a4e:	call   0x10009689
10007a53:	mov    ecx,DWORD PTR [eax]
10007a55:	mov    eax,DWORD PTR [eax+0x4]
10007a58:	mov    DWORD PTR [ebp-0x40],ecx
10007a5b:	mov    DWORD PTR [ebp-0x3c],eax
10007a5e:	lea    eax,[ebp-0x30]
10007a61:	push   eax
10007a62:	lea    esi,[ebp-0x40]
10007a65:	call   0x10009753
10007a6a:	add    eax,0x1c
10007a6d:	call   0x10009872
10007a72:	push   0x0
10007a74:	push   0x1
10007a76:	lea    ecx,[ebp-0x30]
10007a79:	call   0x100012f9
10007a7e:	push   0x0
10007a80:	call   0x10041d92
10007a85:	pop    ecx
10007a86:	call   0x10058931
10007a8b:	ret    0x8
10007a8e:	push   esi
10007a8f:	lea    esi,[edi+0x1c]
10007a92:	call   0x1000424f
10007a97:	push   0x0
10007a99:	push   0x1
10007a9b:	mov    ecx,edi
10007a9d:	call   0x100012f9
10007aa2:	pop    esi
10007aa3:	ret    
10007aa4:	push   ebp
10007aa5:	mov    ebp,esp
10007aa7:	and    esp,0xfffffff8
10007aaa:	push   0xffffffff
10007aac:	push   0x1006106d
10007ab1:	mov    eax,fs:0x0
10007ab7:	push   eax
10007ab8:	sub    esp,0xd0
10007abe:	mov    eax,ds:0x1007d030
10007ac3:	xor    eax,esp
10007ac5:	mov    DWORD PTR [esp+0xc8],eax
10007acc:	push   ebx
10007acd:	push   esi
10007ace:	push   edi
10007acf:	mov    eax,ds:0x1007d030
10007ad4:	xor    eax,esp
10007ad6:	push   eax
10007ad7:	lea    eax,[esp+0xe0]
10007ade:	mov    fs:0x0,eax
10007ae4:	mov    eax,DWORD PTR [ebp+0x8]
10007ae7:	push   eax
10007ae8:	mov    DWORD PTR [esp+0x14],eax
10007aec:	lea    eax,[esp+0x2c]
10007af0:	mov    ebx,edx
10007af2:	push   eax
10007af3:	mov    DWORD PTR [esp+0x28],ebx
10007af7:	mov    DWORD PTR [esp+0x2c],ecx
10007afb:	call   0x10009689
10007b00:	mov    eax,DWORD PTR [ebx+0x4]
10007b03:	lea    edi,[esp+0x18]
10007b07:	lea    esi,[esp+0x28]
10007b0b:	mov    DWORD PTR [esp+0x1c],eax
10007b0f:	mov    DWORD PTR [esp+0x18],ebx
10007b13:	call   0x100046f1
10007b18:	xor    ebx,ebx
10007b1a:	test   al,al
10007b1c:	jne    0x10007b27
10007b1e:	cmp    BYTE PTR [ebp+0xc],bl
10007b21:	je     0x10007d87
10007b27:	push   DWORD PTR [esp+0x24]
10007b2b:	lea    eax,[esp+0xa0]
10007b32:	push   DWORD PTR [esp+0x14]
10007b36:	push   eax
10007b37:	call   0x100080d6
10007b3c:	add    esp,0xc
10007b3f:	mov    esi,DWORD PTR [esp+0x20]
10007b43:	mov    DWORD PTR [esp+0xe8],ebx
10007b4a:	mov    eax,DWORD PTR [esi+0xc]
10007b4d:	cmp    eax,ebx
10007b4f:	je     0x10007b79
10007b51:	cmp    DWORD PTR [esp+0xb4],0x10
10007b59:	mov    ecx,DWORD PTR [esp+0xa0]
10007b60:	jae    0x10007b69
10007b62:	lea    ecx,[esp+0xa0]
10007b69:	push   DWORD PTR [esp+0xb0]
10007b70:	mov    edi,DWORD PTR [esi+0x10]
10007b73:	push   ecx
10007b74:	call   0x10007249
10007b79:	mov    DWORD PTR [esp+0x14],ebx
10007b7d:	mov    BYTE PTR [esp+0xe8],0x1
10007b85:	cmp    DWORD PTR [esi+0xc],ebx
10007b88:	je     0x10007bb8
10007b8a:	push   0x8
10007b8c:	call   0x1004239e
10007b91:	cmp    eax,ebx
10007b93:	pop    ecx
10007b94:	je     0x10007ba7
10007b96:	mov    ecx,DWORD PTR [esi+0x10]
10007b99:	mov    edx,DWORD PTR [ecx+0x4]
10007b9c:	add    edx,DWORD PTR [ecx]
10007b9e:	mov    DWORD PTR [eax+0x4],ebx
10007ba1:	mov    DWORD PTR [eax],edx
10007ba3:	mov    edi,eax
10007ba5:	jmp    0x10007ba9
10007ba7:	xor    edi,edi
10007ba9:	cmp    edi,ebx
10007bab:	je     0x10007bb4
10007bad:	push   ebx
10007bae:	call   0x10041d92
10007bb3:	pop    ecx
10007bb4:	mov    DWORD PTR [esp+0x14],edi
10007bb8:	push   ebx
10007bb9:	lea    ecx,[esp+0xbc]
10007bc0:	mov    DWORD PTR [esp+0xd4],0xf
10007bcb:	call   0x10001425
10007bd0:	push   0xffffffff
10007bd2:	push   ebx
10007bd3:	mov    BYTE PTR [esp+0xf0],0x2
10007bdb:	push   DWORD PTR [esp+0x2c]
10007bdf:	lea    ecx,[esp+0xc4]
10007be6:	call   0x1000124a
10007beb:	mov    eax,DWORD PTR [esi+0x10]
10007bee:	mov    DWORD PTR [esp+0xd4],eax
10007bf5:	mov    DWORD PTR [esp+0x38],ebx
10007bf9:	mov    DWORD PTR [esp+0x3c],ebx
10007bfd:	mov    DWORD PTR [esp+0x40],ebx
10007c01:	push   DWORD PTR [esp+0x10]
10007c05:	lea    eax,[esp+0x1c]
10007c09:	push   eax
10007c0a:	mov    ebx,esi
10007c0c:	mov    BYTE PTR [esp+0xf0],0x3
10007c14:	call   0x10009689
10007c19:	mov    eax,DWORD PTR [esi+0x4]
10007c1c:	mov    DWORD PTR [esp+0x28],esi
10007c20:	lea    edi,[esp+0x28]
10007c24:	lea    esi,[esp+0x18]
10007c28:	mov    DWORD PTR [esp+0x2c],eax
10007c2c:	call   0x100046f1
10007c31:	test   al,al
10007c33:	je     0x10007d02
10007c39:	sub    esp,0x10
10007c3c:	mov    eax,esp
10007c3e:	mov    DWORD PTR [esp+0x34],esp
10007c42:	push   eax
10007c43:	lea    ecx,[esp+0x48]
10007c47:	call   0x100097c0
10007c4c:	sub    esp,0x1c
10007c4f:	mov    BYTE PTR [esp+0x114],0x4
10007c57:	mov    ecx,esp
10007c59:	mov    DWORD PTR [esp+0x54],esp
10007c5d:	push   DWORD PTR [esp+0x3c]
10007c61:	call   0x100011b0
10007c66:	lea    edi,[esp+0x9c]
10007c6d:	mov    BYTE PTR [esp+0x114],0x3
10007c75:	call   0x1000a351
10007c7a:	add    esp,0x2c
10007c7d:	lea    ecx,[esp+0x44]
10007c81:	push   ecx
10007c82:	mov    edi,eax
10007c84:	mov    BYTE PTR [esp+0xec],0x5
10007c8c:	call   0x1000a3a0
10007c91:	mov    edi,DWORD PTR [esp+0x20]
10007c95:	lea    eax,[esp+0x44]
10007c99:	push   eax
10007c9a:	push   edi
10007c9b:	lea    ebx,[esp+0x30]
10007c9f:	mov    BYTE PTR [esp+0xf0],0x6
10007ca7:	call   0x10009328
10007cac:	lea    esi,[esp+0x60]
10007cb0:	call   0x1000424f
10007cb5:	push   0x0
10007cb7:	push   0x1
10007cb9:	lea    ecx,[esp+0x4c]
10007cbd:	call   0x100012f9
10007cc2:	lea    esi,[esp+0x8c]
10007cc9:	mov    BYTE PTR [esp+0xe8],0x3
10007cd1:	call   0x1000424f
10007cd6:	push   0x0
10007cd8:	push   0x1
10007cda:	lea    ecx,[esp+0x78]
10007cde:	call   0x100012f9
10007ce3:	push   DWORD PTR [esp+0x10]
10007ce7:	lea    eax,[esp+0x2c]
10007ceb:	push   eax
10007cec:	mov    ebx,edi
10007cee:	call   0x10009689
10007cf3:	mov    ecx,DWORD PTR [eax]
10007cf5:	mov    eax,DWORD PTR [eax+0x4]
10007cf8:	mov    DWORD PTR [esp+0x18],ecx
10007cfc:	mov    DWORD PTR [esp+0x1c],eax
10007d00:	jmp    0x10007d04
10007d02:	mov    edi,ebx
10007d04:	lea    eax,[esp+0xb8]
10007d0b:	push   eax
10007d0c:	lea    esi,[esp+0x1c]
10007d10:	call   0x10009753
10007d15:	add    eax,0x1c
10007d18:	call   0x10009872
10007d1d:	lea    esi,[esp+0x34]
10007d21:	mov    BYTE PTR [esp+0xe8],0x2
10007d29:	call   0x1000424f
10007d2e:	xor    ebx,ebx
10007d30:	cmp    DWORD PTR [edi+0xc],ebx
10007d33:	je     0x10007d5d
10007d35:	mov    esi,DWORD PTR [esp+0x14]
10007d39:	mov    eax,ebx
10007d3b:	cmp    esi,eax
10007d3d:	mov    DWORD PTR [edi+0x10],ebx
10007d40:	mov    DWORD PTR [esp+0x14],ebx
10007d44:	je     0x10007d4d
10007d46:	push   eax
10007d47:	call   0x10041d92
10007d4c:	pop    ecx
10007d4d:	mov    DWORD PTR [edi+0x10],esi
10007d50:	mov    eax,DWORD PTR [edi+0xc]
10007d53:	cmp    eax,ebx
10007d55:	je     0x10007d5d
10007d57:	push   esi
10007d58:	call   0x100072bb
10007d5d:	push   ebx
10007d5e:	push   0x1
10007d60:	lea    ecx,[esp+0xc0]
10007d67:	call   0x100012f9
10007d6c:	push   DWORD PTR [esp+0x14]
10007d70:	call   0x10041d92
10007d75:	pop    ecx
10007d76:	push   ebx
10007d77:	push   0x1
10007d79:	lea    ecx,[esp+0xa4]
10007d80:	call   0x100012f9
10007d85:	mov    al,0x1
10007d87:	mov    ecx,DWORD PTR [esp+0xe0]
10007d8e:	mov    DWORD PTR fs:0x0,ecx
10007d95:	pop    ecx
10007d96:	pop    edi
10007d97:	pop    esi
10007d98:	pop    ebx
10007d99:	mov    ecx,DWORD PTR [esp+0xc8]
10007da0:	xor    ecx,esp
10007da2:	call   0x10041d97
10007da7:	mov    esp,ebp
10007da9:	pop    ebp
10007daa:	ret    0x8
10007dad:	push   ebp
10007dae:	mov    ebp,esp
10007db0:	and    esp,0xfffffff8
10007db3:	sub    esp,0x1c
10007db6:	push   ebx
10007db7:	mov    ebx,DWORD PTR [ebp+0x8]
10007dba:	push   esi
10007dbb:	push   edi
10007dbc:	push   DWORD PTR [ebp+0xc]
10007dbf:	lea    eax,[esp+0x14]
10007dc3:	push   eax
10007dc4:	call   0x10009689
10007dc9:	mov    eax,DWORD PTR [ebx+0x4]
10007dcc:	lea    edi,[esp+0x18]
10007dd0:	lea    esi,[esp+0x10]
10007dd4:	mov    DWORD PTR [esp+0x1c],eax
10007dd8:	mov    DWORD PTR [esp+0x18],ebx
10007ddc:	call   0x100046f1
10007de1:	test   al,al
10007de3:	je     0x10007dec
10007de5:	xor    al,al
10007de7:	jmp    0x10007eb7
10007dec:	lea    esi,[esp+0x10]
10007df0:	call   0x10009753
10007df5:	add    eax,0x1c
10007df8:	call   0x10004194
10007dfd:	test   eax,eax
10007dff:	jbe    0x10007de5
10007e01:	call   0x10009753
10007e06:	push   0x0
10007e08:	lea    esi,[eax+0x1c]
10007e0b:	call   0x10009853
10007e10:	mov    esi,eax
10007e12:	mov    eax,DWORD PTR [ebx+0xc]
10007e15:	test   eax,eax
10007e17:	je     0x10007e33
10007e19:	push   DWORD PTR [esi+0x1c]
10007e1c:	call   0x1000731e
10007e21:	mov    edi,DWORD PTR [esi+0x1c]
10007e24:	mov    eax,DWORD PTR [ebx+0xc]
10007e27:	push   0x0
10007e29:	push   0x1006bb18
10007e2e:	call   0x10007249
10007e33:	push   DWORD PTR [esi+0x1c]
10007e36:	call   0x10041d92
10007e3b:	pop    ecx
10007e3c:	lea    esi,[esp+0x10]
10007e40:	call   0x10009753
10007e45:	mov    esi,eax
10007e47:	mov    edi,DWORD PTR [esi+0x20]
10007e4a:	add    esi,0x1c
10007e4d:	cmp    edi,DWORD PTR [esi+0x8]
10007e50:	jbe    0x10007e57
10007e52:	call   0x100422b0
10007e57:	mov    DWORD PTR [esp+0x18],esi
10007e5b:	lea    esi,[esp+0x10]
10007e5f:	mov    DWORD PTR [esp+0x1c],edi
10007e63:	call   0x10009753
10007e68:	mov    esi,eax
10007e6a:	lea    eax,[esp+0x20]
10007e6e:	push   eax
10007e6f:	xor    ecx,ecx
10007e71:	lea    eax,[esp+0x1c]
10007e75:	call   0x1000991e
10007e7a:	push   DWORD PTR [eax+0x4]
10007e7d:	add    esi,0x1c
10007e80:	push   DWORD PTR [eax]
10007e82:	lea    ebx,[esp+0x20]
10007e86:	call   0x100098cc
10007e8b:	lea    esi,[esp+0x10]
10007e8f:	call   0x10009753
10007e94:	add    eax,0x1c
10007e97:	call   0x10004194
10007e9c:	test   eax,eax
10007e9e:	jne    0x10007eb5
10007ea0:	push   DWORD PTR [esp+0x14]
10007ea4:	lea    eax,[esp+0x24]
10007ea8:	push   DWORD PTR [esp+0x14]
10007eac:	push   eax
10007ead:	push   DWORD PTR [ebp+0x8]
10007eb0:	call   0x100093e9
10007eb5:	mov    al,0x1
10007eb7:	pop    edi
10007eb8:	pop    esi
10007eb9:	pop    ebx
10007eba:	mov    esp,ebp
10007ebc:	pop    ebp
10007ebd:	ret    0x8
10007ec0:	push   ebp
10007ec1:	mov    ebp,esp
10007ec3:	and    esp,0xfffffff8
10007ec6:	sub    esp,0xc
10007ec9:	cmp    DWORD PTR [edi+0x8],0x0
10007ecd:	push   esi
10007ece:	je     0x10007ef3
10007ed0:	mov    DWORD PTR [esp+0x8],edi
10007ed4:	mov    eax,DWORD PTR [edi+0x4]
10007ed7:	mov    eax,DWORD PTR [eax]
10007ed9:	lea    esi,[esp+0x8]
10007edd:	mov    DWORD PTR [esp+0xc],eax
10007ee1:	call   0x10009753
10007ee6:	push   eax
10007ee7:	push   edi
10007ee8:	call   0x10007dad
10007eed:	cmp    DWORD PTR [edi+0x8],0x0
10007ef1:	jne    0x10007ed4
10007ef3:	pop    esi
10007ef4:	mov    esp,ebp
10007ef6:	pop    ebp
10007ef7:	ret    
10007ef8:	push   ebp
10007ef9:	mov    ebp,esp
10007efb:	and    esp,0xfffffff8
10007efe:	push   0xffffffff
10007f00:	push   0x1006003e
10007f05:	mov    eax,fs:0x0
10007f0b:	push   eax
10007f0c:	sub    esp,0x38
10007f0f:	mov    eax,ds:0x1007d030
10007f14:	xor    eax,esp
10007f16:	mov    DWORD PTR [esp+0x30],eax
10007f1a:	push   ebx
10007f1b:	push   esi
10007f1c:	push   edi
10007f1d:	mov    eax,ds:0x1007d030
10007f22:	xor    eax,esp
10007f24:	push   eax
10007f25:	lea    eax,[esp+0x48]
10007f29:	mov    fs:0x0,eax
10007f2f:	mov    eax,DWORD PTR [ebp+0x8]
10007f32:	push   eax
10007f33:	lea    eax,[esp+0x18]
10007f37:	mov    ebx,edx
10007f39:	push   eax
10007f3a:	mov    DWORD PTR [esp+0x18],ecx
10007f3e:	call   0x10009689
10007f43:	mov    eax,DWORD PTR [ebx+0x4]
10007f46:	lea    edi,[esp+0x1c]
10007f4a:	lea    esi,[esp+0x14]
10007f4e:	mov    DWORD PTR [esp+0x20],eax
10007f52:	mov    DWORD PTR [esp+0x1c],ebx
10007f56:	call   0x100046f1
10007f5b:	test   al,al
10007f5d:	je     0x10007f66
10007f5f:	xor    al,al
10007f61:	jmp    0x10007fef
10007f66:	lea    esi,[esp+0x14]
10007f6a:	call   0x10009753
10007f6f:	add    eax,0x1c
10007f72:	call   0x10004194
10007f77:	test   eax,eax
10007f79:	jbe    0x10007f5f
10007f7b:	call   0x10009753
10007f80:	push   0x0
10007f82:	lea    esi,[eax+0x1c]
10007f85:	call   0x10009853
10007f8a:	push   0xffffffff
10007f8c:	push   0x0
10007f8e:	push   DWORD PTR [esp+0x18]
10007f92:	mov    edi,eax
10007f94:	mov    ecx,edi
10007f96:	call   0x1000124a
10007f9b:	lea    esi,[esp+0x14]
10007f9f:	call   0x10009753
10007fa4:	push   DWORD PTR [esp+0x10]
10007fa8:	push   eax
10007fa9:	lea    eax,[esp+0x2c]
10007fad:	push   eax
10007fae:	call   0x100080d6
10007fb3:	add    esp,0xc
10007fb6:	and    DWORD PTR [esp+0x50],0x0
10007fbb:	mov    ebx,DWORD PTR [ebx+0xc]
10007fbe:	test   ebx,ebx
10007fc0:	je     0x10007fe0
10007fc2:	cmp    DWORD PTR [esp+0x3c],0x10
10007fc7:	mov    eax,DWORD PTR [esp+0x28]
10007fcb:	jae    0x10007fd1
10007fcd:	lea    eax,[esp+0x28]
10007fd1:	push   DWORD PTR [esp+0x38]
10007fd5:	mov    edi,DWORD PTR [edi+0x1c]
10007fd8:	push   eax
10007fd9:	mov    eax,ebx
10007fdb:	call   0x10007249
10007fe0:	push   0x0
10007fe2:	push   0x1
10007fe4:	lea    ecx,[esp+0x2c]
10007fe8:	call   0x100012f9
10007fed:	mov    al,0x1
10007fef:	mov    ecx,DWORD PTR [esp+0x48]
10007ff3:	mov    DWORD PTR fs:0x0,ecx
10007ffa:	pop    ecx
10007ffb:	pop    edi
10007ffc:	pop    esi
10007ffd:	pop    ebx
10007ffe:	mov    ecx,DWORD PTR [esp+0x30]
10008002:	xor    ecx,esp
10008004:	call   0x10041d97
10008009:	mov    esp,ebp
1000800b:	pop    ebp
1000800c:	ret    0x4
1000800f:	push   ebp
10008010:	mov    ebp,esp
10008012:	sub    esp,0x18
10008015:	and    DWORD PTR [ebp-0x8],0x0
10008019:	push   ebx
1000801a:	push   esi
1000801b:	push   edi
1000801c:	push   DWORD PTR [ebp+0xc]
1000801f:	mov    ebx,eax
10008021:	lea    eax,[ebp-0xc]
10008024:	push   eax
10008025:	call   0x10009689
1000802a:	mov    eax,DWORD PTR [ebx+0x4]
1000802d:	lea    edi,[ebp-0x14]
10008030:	lea    esi,[ebp-0xc]
10008033:	mov    DWORD PTR [ebp-0x10],eax
10008036:	mov    DWORD PTR [ebp-0x14],ebx
10008039:	call   0x100046f1
1000803e:	test   al,al
10008040:	jne    0x10008071
10008042:	call   0x10009753
10008047:	add    eax,0x1c
1000804a:	call   0x10004194
1000804f:	cmp    DWORD PTR [ebp+0x10],eax
10008052:	jae    0x10008071
10008054:	push   DWORD PTR [ebp+0x10]
10008057:	call   0x10009753
1000805c:	mov    esi,eax
1000805e:	add    esi,0x1c
10008061:	call   0x10009853
10008066:	mov    ecx,DWORD PTR [ebp+0x8]
10008069:	push   eax
1000806a:	call   0x100011b0
1000806f:	jmp    0x1000807e
10008071:	mov    ecx,DWORD PTR [ebp+0x8]
10008074:	push   0x1006bb18
10008079:	call   0x100011d6
1000807e:	mov    eax,DWORD PTR [ebp+0x8]
10008081:	pop    edi
10008082:	pop    esi
10008083:	pop    ebx
10008084:	leave  
10008085:	ret    0xc
10008088:	push   ebp
10008089:	mov    ebp,esp
1000808b:	sub    esp,0x18
1000808e:	push   ebx
1000808f:	push   esi
10008090:	push   edi
10008091:	push   DWORD PTR [ebp+0x8]
10008094:	mov    ebx,eax
10008096:	lea    eax,[ebp-0x14]
10008099:	push   eax
1000809a:	call   0x10009689
1000809f:	mov    eax,DWORD PTR [ebx+0x4]
100080a2:	lea    edi,[ebp-0xc]
100080a5:	lea    esi,[ebp-0x14]
100080a8:	mov    DWORD PTR [ebp-0x8],eax
100080ab:	mov    DWORD PTR [ebp-0xc],ebx
100080ae:	call   0x100046f1
100080b3:	test   al,al
100080b5:	jne    0x100080cd
100080b7:	call   0x10009753
100080bc:	add    eax,0x1c
100080bf:	call   0x10004194
100080c4:	test   eax,eax
100080c6:	jbe    0x100080cd
100080c8:	xor    eax,eax
100080ca:	inc    eax
100080cb:	jmp    0x100080cf
100080cd:	xor    eax,eax
100080cf:	pop    edi
100080d0:	pop    esi
100080d1:	pop    ebx
100080d2:	leave  
100080d3:	ret    0x4
100080d6:	push   0x3c
100080d8:	mov    eax,0x1006001b
100080dd:	call   0x10058845
100080e2:	and    DWORD PTR [ebp-0x10],0x0
100080e6:	push   0x1006bfec
100080eb:	push   DWORD PTR [ebp+0xc]
100080ee:	lea    eax,[ebp-0x48]
100080f1:	push   eax
100080f2:	call   0x10005dcb
100080f7:	push   DWORD PTR [ebp+0x10]
100080fa:	and    DWORD PTR [ebp-0x4],0x0
100080fe:	push   eax
100080ff:	lea    eax,[ebp-0x2c]
10008102:	push   eax
10008103:	call   0x1000a3d1
10008108:	push   0x1006bfe8
1000810d:	push   eax
1000810e:	push   DWORD PTR [ebp+0x8]
10008111:	mov    BYTE PTR [ebp-0x4],0x1
10008115:	call   0x10005dcb
1000811a:	add    esp,0x24
1000811d:	push   0x0
1000811f:	push   0x1
10008121:	lea    ecx,[ebp-0x2c]
10008124:	call   0x100012f9
10008129:	push   0x0
1000812b:	push   0x1
1000812d:	lea    ecx,[ebp-0x48]
10008130:	call   0x100012f9
10008135:	mov    eax,DWORD PTR [ebp+0x8]
10008138:	call   0x1005891d
1000813d:	ret    
1000813e:	push   ebp
1000813f:	mov    ebp,esp
10008141:	sub    esp,0x10
10008144:	mov    eax,DWORD PTR [ebx+0x4]
10008147:	mov    eax,DWORD PTR [eax]
10008149:	push   esi
1000814a:	push   edi
1000814b:	mov    DWORD PTR [ebp-0x4],eax
1000814e:	mov    DWORD PTR [ebp-0x8],ebx
10008151:	mov    DWORD PTR [ebp-0x10],ebx
10008154:	mov    eax,DWORD PTR [ebx+0x4]
10008157:	lea    edi,[ebp-0x10]
1000815a:	lea    esi,[ebp-0x8]
1000815d:	mov    DWORD PTR [ebp-0xc],eax
10008160:	call   0x100046f1
10008165:	test   al,al
10008167:	jne    0x100081b7
10008169:	xor    edi,edi
1000816b:	call   0x10009753
10008170:	add    eax,0x1c
10008173:	call   0x10004194
10008178:	test   eax,eax
1000817a:	je     0x100081ad
1000817c:	lea    esi,[ebp-0x8]
1000817f:	call   0x10009753
10008184:	push   edi
10008185:	lea    esi,[eax+0x1c]
10008188:	call   0x10009853
1000818d:	push   DWORD PTR [eax+0x1c]
10008190:	mov    eax,DWORD PTR [ebx+0xc]
10008193:	call   0x100072bb
10008198:	lea    esi,[ebp-0x8]
1000819b:	inc    edi
1000819c:	call   0x10009753
100081a1:	add    eax,0x1c
100081a4:	call   0x10004194
100081a9:	cmp    edi,eax
100081ab:	jne    0x1000817c
100081ad:	lea    esi,[ebp-0x8]
100081b0:	call   0x10009773
100081b5:	jmp    0x10008154
100081b7:	push   DWORD PTR [ebx+0x10]
100081ba:	mov    eax,DWORD PTR [ebx+0xc]
100081bd:	call   0x100072bb
100081c2:	pop    edi
100081c3:	pop    esi
100081c4:	leave  
100081c5:	ret    
100081c6:	push   0x0
100081c8:	mov    eax,0x1006237e
100081cd:	call   0x10058845
100081d2:	mov    edi,DWORD PTR [ebp+0x8]
100081d5:	xor    ebx,ebx
100081d7:	mov    DWORD PTR [edi],ebx
100081d9:	mov    DWORD PTR [ebp-0x4],ebx
100081dc:	mov    DWORD PTR [edi+0x4],ebx
100081df:	mov    DWORD PTR [edi+0x8],ebx
100081e2:	mov    BYTE PTR [ebp-0x4],0x2
100081e6:	lea    esi,[edi+0x18]
100081e9:	mov    DWORD PTR [edi+0x10],ebx
100081ec:	mov    DWORD PTR [edi+0x14],ebx
100081ef:	call   0x10007531
100081f4:	mov    BYTE PTR [edi+0x2c],bl
100081f7:	mov    DWORD PTR [edi+0x30],ebx
100081fa:	mov    DWORD PTR [edi+0x34],ebx
100081fd:	mov    DWORD PTR [edi+0x38],ebx
10008200:	mov    eax,edi
10008202:	call   0x1005891d
10008207:	ret    0x4
1000820a:	push   ebx
1000820b:	push   esi
1000820c:	mov    esi,ecx
1000820e:	push   edi
1000820f:	mov    edi,DWORD PTR [esi+0x30]
10008212:	mov    ebx,eax
10008214:	cmp    ebx,edi
10008216:	je     0x10008221
10008218:	test   edi,edi
1000821a:	je     0x10008221
1000821c:	call   0x100099a6
10008221:	mov    DWORD PTR [esi+0x30],ebx
10008224:	mov    edi,DWORD PTR [esi]
10008226:	test   edi,edi
10008228:	je     0x10008236
1000822a:	push   DWORD PTR [edi]
1000822c:	mov    eax,ebx
1000822e:	call   0x100072bb
10008233:	mov    DWORD PTR [edi+0x20],ebx
10008236:	mov    edi,DWORD PTR [esi+0x4]
10008239:	test   edi,edi
1000823b:	je     0x1000824c
1000823d:	mov    ebx,DWORD PTR [esi+0x30]
10008240:	push   DWORD PTR [edi]
10008242:	mov    eax,ebx
10008244:	call   0x100072bb
10008249:	mov    DWORD PTR [edi+0x20],ebx
1000824c:	mov    edi,DWORD PTR [esi+0x8]
1000824f:	test   edi,edi
10008251:	je     0x10008262
10008253:	mov    ebx,DWORD PTR [esi+0x30]
10008256:	push   DWORD PTR [edi]
10008258:	mov    eax,ebx
1000825a:	call   0x100072bb
1000825f:	mov    DWORD PTR [edi+0x20],ebx
10008262:	lea    ebx,[esi+0x18]
10008265:	mov    esi,DWORD PTR [esi+0x30]
10008268:	test   esi,esi
1000826a:	mov    DWORD PTR [ebx+0xc],esi
1000826d:	je     0x10008274
1000826f:	call   0x1000813e
10008274:	pop    edi
10008275:	pop    esi
10008276:	pop    ebx
10008277:	ret    
10008278:	mov    eax,DWORD PTR [ecx+0x30]
1000827b:	test   eax,eax
1000827d:	je     0x10008283
1000827f:	mov    eax,DWORD PTR [eax+0x18]
10008282:	ret    
10008283:	mov    eax,DWORD PTR [ecx+0x34]
10008286:	ret    
10008287:	push   ebp
10008288:	mov    ebp,esp
1000828a:	sub    esp,0x18
1000828d:	mov    eax,ds:0x1007d030
10008292:	xor    eax,ebp
10008294:	mov    DWORD PTR [ebp-0x4],eax
10008297:	mov    eax,DWORD PTR [ebp+0x8]
1000829a:	mov    eax,DWORD PTR [eax+0x38]
1000829d:	test   eax,eax
1000829f:	push   esi
100082a0:	push   edi
100082a1:	lea    esi,[ebp+0xc]
100082a4:	lea    edi,[ebp-0x14]
100082a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100082a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100082a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100082aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100082ab:	pop    edi
100082ac:	pop    esi
100082ad:	jne    0x100082b3
100082af:	xor    eax,eax
100082b1:	jmp    0x100082cb
100082b3:	and    DWORD PTR [ebp-0x18],0x0
100082b7:	mov    ecx,DWORD PTR [eax]
100082b9:	lea    edx,[ebp-0x18]
100082bc:	push   edx
100082bd:	lea    edx,[ebp-0x14]
100082c0:	push   edx
100082c1:	push   eax
100082c2:	call   DWORD PTR [ecx]
100082c4:	test   eax,eax
100082c6:	jl     0x100082af
100082c8:	mov    eax,DWORD PTR [ebp-0x18]
100082cb:	mov    ecx,DWORD PTR [ebp-0x4]
100082ce:	xor    ecx,ebp
100082d0:	call   0x10041d97
100082d5:	leave  
100082d6:	ret    0x14
100082d9:	push   ebp
100082da:	mov    ebp,esp
100082dc:	sub    esp,0x14
100082df:	mov    eax,ds:0x1007d030
100082e4:	xor    eax,ebp
100082e6:	mov    DWORD PTR [ebp-0x4],eax
100082e9:	push   esi
100082ea:	push   edi
100082eb:	mov    eax,DWORD PTR [ebp+0x8]
100082ee:	lea    esi,[ebp+0xc]
100082f1:	lea    edi,[ebp-0x14]
100082f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100082f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100082f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100082f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100082f8:	sub    esp,0x10
100082fb:	mov    edi,esp
100082fd:	lea    esi,[ebp-0x14]
10008300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008303:	push   eax
10008304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10008305:	call   0x10008287
1000830a:	mov    ecx,DWORD PTR [ebp-0x4]
1000830d:	pop    edi
1000830e:	xor    ecx,ebp
10008310:	pop    esi
10008311:	call   0x10041d97
10008316:	leave  
10008317:	ret    0x14
1000831a:	push   0x8
1000831c:	mov    eax,0x1006298f
10008321:	call   0x10058845
10008326:	push   0x40
10008328:	call   0x1004239e
1000832d:	pop    ecx
1000832e:	mov    DWORD PTR [ebp-0x10],eax
10008331:	and    DWORD PTR [ebp-0x4],0x0
10008335:	test   eax,eax
10008337:	je     0x10008346
10008339:	push   eax
1000833a:	call   0x100081c6
1000833f:	mov    esi,eax
10008341:	mov    DWORD PTR [ebp-0x10],esi
10008344:	jmp    0x1000834d
10008346:	and    DWORD PTR [ebp-0x10],0x0
1000834a:	mov    esi,DWORD PTR [ebp-0x10]
1000834d:	mov    DWORD PTR [ebp-0x14],esi
10008350:	mov    eax,DWORD PTR [ebp+0x8]
10008353:	mov    DWORD PTR [ebp-0x4],0x1
1000835a:	mov    ecx,DWORD PTR [eax]
1000835c:	call   0x10007493
10008361:	mov    ebx,eax
10008363:	mov    edi,esi
10008365:	call   0x1000971b
1000836a:	mov    eax,DWORD PTR [ebp+0x8]
1000836d:	mov    ecx,DWORD PTR [eax+0x4]
10008370:	call   0x10007493
10008375:	lea    edi,[esi+0x4]
10008378:	mov    ebx,eax
1000837a:	call   0x1000971b
1000837f:	mov    eax,DWORD PTR [ebp+0x8]
10008382:	mov    ecx,DWORD PTR [eax+0x8]
10008385:	call   0x10007493
1000838a:	lea    edi,[esi+0x8]
1000838d:	mov    ebx,eax
1000838f:	call   0x1000971b
10008394:	mov    ebx,DWORD PTR [ebp+0x8]
10008397:	lea    eax,[ebx+0x18]
1000839a:	push   eax
1000839b:	lea    eax,[esi+0x18]
1000839e:	push   eax
1000839f:	call   0x10007623
100083a4:	mov    al,BYTE PTR [ebx+0x2c]
100083a7:	mov    BYTE PTR [esi+0x2c],al
100083aa:	mov    eax,DWORD PTR [ebx+0x10]
100083ad:	mov    DWORD PTR [esi+0x10],eax
100083b0:	mov    eax,DWORD PTR [ebx+0x14]
100083b3:	mov    DWORD PTR [esi+0x14],eax
100083b6:	mov    edi,DWORD PTR [ebx+0x38]
100083b9:	lea    eax,[esi+0x38]
100083bc:	cmp    DWORD PTR [eax],edi
100083be:	je     0x100083ca
100083c0:	mov    esi,eax
100083c2:	call   0x10007188
100083c7:	mov    esi,DWORD PTR [ebp-0x10]
100083ca:	mov    ecx,ebx
100083cc:	call   0x10008278
100083d1:	mov    DWORD PTR [esi+0x34],eax
100083d4:	mov    eax,esi
100083d6:	call   0x1005891d
100083db:	ret    0x4
100083de:	push   0x44
100083e0:	mov    eax,0x10061bf3
100083e5:	call   0x10058845
100083ea:	and    DWORD PTR [ebp-0x14],0x0
100083ee:	mov    ebx,DWORD PTR [ebp+0xc]
100083f1:	mov    eax,DWORD PTR [ebx]
100083f3:	lea    ecx,[ebp-0x30]
100083f6:	push   ecx
100083f7:	call   0x100194bf
100083fc:	and    DWORD PTR [ebp-0x4],0x0
10008400:	mov    edi,DWORD PTR [ebp+0x8]
10008403:	mov    esi,DWORD PTR [edi]
10008405:	push   eax
10008406:	mov    DWORD PTR [ebp-0x14],0x1
1000840d:	call   0x100074cf
10008412:	test   al,al
10008414:	setne  BYTE PTR [ebp-0xd]
10008418:	or     DWORD PTR [ebp-0x4],0xffffffff
1000841c:	xor    esi,esi
1000841e:	push   0x0
10008420:	inc    esi
10008421:	push   esi
10008422:	lea    ecx,[ebp-0x30]
10008425:	call   0x100012f9
1000842a:	mov    eax,DWORD PTR [ebx+0x4]
1000842d:	lea    ecx,[ebp-0x30]
10008430:	push   ecx
10008431:	call   0x100194bf
10008436:	mov    DWORD PTR [ebp-0x4],esi
10008439:	mov    esi,DWORD PTR [edi+0x4]
1000843c:	push   eax
1000843d:	mov    DWORD PTR [ebp-0x14],0x2
10008444:	call   0x100074cf
10008449:	test   al,al
1000844b:	jne    0x10008455
1000844d:	cmp    BYTE PTR [ebp-0xd],al
10008450:	mov    BYTE PTR [ebp-0xd],al
10008453:	je     0x10008459
10008455:	mov    BYTE PTR [ebp-0xd],0x1
10008459:	or     DWORD PTR [ebp-0x4],0xffffffff
1000845d:	push   0x0
1000845f:	push   0x1
10008461:	lea    ecx,[ebp-0x30]
10008464:	call   0x100012f9
10008469:	mov    eax,DWORD PTR [ebx+0x8]
1000846c:	lea    ecx,[ebp-0x4c]
1000846f:	push   ecx
10008470:	call   0x100194bf
10008475:	mov    DWORD PTR [ebp-0x4],0x2
1000847c:	mov    esi,DWORD PTR [edi+0x8]
1000847f:	push   eax
10008480:	mov    DWORD PTR [ebp-0x14],0x4
10008487:	call   0x100074cf
1000848c:	test   al,al
1000848e:	jne    0x10008498
10008490:	cmp    BYTE PTR [ebp-0xd],al
10008493:	mov    BYTE PTR [ebp-0xd],al
10008496:	je     0x1000849c
10008498:	mov    BYTE PTR [ebp-0xd],0x1
1000849c:	or     DWORD PTR [ebp-0x4],0xffffffff
100084a0:	push   0x0
100084a2:	push   0x1
100084a4:	lea    ecx,[ebp-0x4c]
100084a7:	call   0x100012f9
100084ac:	add    ebx,0x18
100084af:	lea    ecx,[edi+0x18]
100084b2:	call   0x10007868
100084b7:	test   al,al
100084b9:	jne    0x100084c4
100084bb:	cmp    BYTE PTR [ebp-0xd],al
100084be:	jne    0x100084c4
100084c0:	xor    bl,bl
100084c2:	jmp    0x100084c6
100084c4:	mov    bl,0x1
100084c6:	mov    edx,DWORD PTR [ebp+0xc]
100084c9:	mov    al,BYTE PTR [edx+0x2c]
100084cc:	cmp    BYTE PTR [edi+0x2c],al
100084cf:	je     0x100084d6
100084d1:	mov    bl,0x1
100084d3:	mov    BYTE PTR [edi+0x2c],al
100084d6:	mov    eax,DWORD PTR [edx+0x10]
100084d9:	mov    ecx,DWORD PTR [edi+0x10]
100084dc:	cmp    ecx,eax
100084de:	mov    esi,DWORD PTR [edx+0x14]
100084e1:	jne    0x100084ea
100084e3:	mov    ecx,DWORD PTR [edi+0x14]
100084e6:	cmp    ecx,esi
100084e8:	je     0x100084f2
100084ea:	mov    bl,0x1
100084ec:	mov    DWORD PTR [edi+0x10],eax
100084ef:	mov    DWORD PTR [edi+0x14],esi
100084f2:	mov    eax,DWORD PTR [edx+0x38]
100084f5:	lea    esi,[edi+0x38]
100084f8:	cmp    DWORD PTR [esi],eax
100084fa:	je     0x1000850b
100084fc:	mov    edi,eax
100084fe:	mov    bl,0x1
10008500:	call   0x10007188
10008505:	mov    edi,DWORD PTR [ebp+0x8]
10008508:	mov    edx,DWORD PTR [ebp+0xc]
1000850b:	cmp    DWORD PTR [edi+0x30],0x0
1000850f:	jne    0x10008531
10008511:	mov    ecx,edx
10008513:	call   0x10008278
10008518:	mov    ecx,edi
1000851a:	mov    esi,eax
1000851c:	call   0x10008278
10008521:	cmp    esi,eax
10008523:	je     0x10008531
10008525:	mov    ecx,edx
10008527:	mov    bl,0x1
10008529:	call   0x10008278
1000852e:	mov    DWORD PTR [edi+0x34],eax
10008531:	mov    al,bl
10008533:	call   0x1005891d
10008538:	ret    0x8
1000853b:	push   0x74
1000853d:	mov    eax,0x1005f3cd
10008542:	call   0x10058845
10008547:	mov    eax,DWORD PTR [esi]
10008549:	lea    ecx,[ebp-0x44]
1000854c:	push   ecx
1000854d:	call   0x100194bf
10008552:	mov    ebx,eax
10008554:	and    DWORD PTR [ebp-0x4],0x0
10008558:	mov    eax,DWORD PTR [edi]
1000855a:	lea    ecx,[ebp-0x28]
1000855d:	push   ecx
1000855e:	call   0x100194bf
10008563:	mov    ecx,ebx
10008565:	mov    BYTE PTR [ebp-0x4],0x1
10008569:	call   0x10005e11
1000856e:	mov    bl,al
10008570:	neg    bl
10008572:	push   0x0
10008574:	sbb    bl,bl
10008576:	push   0x1
10008578:	lea    ecx,[ebp-0x28]
1000857b:	inc    bl
1000857d:	call   0x100012f9
10008582:	or     DWORD PTR [ebp-0x4],0xffffffff
10008586:	push   0x0
10008588:	push   0x1
1000858a:	lea    ecx,[ebp-0x44]
1000858d:	call   0x100012f9
10008592:	test   bl,bl
10008594:	je     0x1000859d
10008596:	xor    al,al
10008598:	jmp    0x10008684
1000859d:	mov    eax,DWORD PTR [esi+0x4]
100085a0:	lea    ecx,[ebp-0x28]
100085a3:	push   ecx
100085a4:	call   0x100194bf
100085a9:	mov    ebx,eax
100085ab:	lea    ecx,[ebp-0x44]
100085ae:	mov    DWORD PTR [ebp-0x4],0x2
100085b5:	mov    eax,DWORD PTR [edi+0x4]
100085b8:	push   ecx
100085b9:	call   0x100194bf
100085be:	mov    ecx,ebx
100085c0:	mov    BYTE PTR [ebp-0x4],0x3
100085c4:	call   0x10005e11
100085c9:	mov    bl,al
100085cb:	neg    bl
100085cd:	push   0x0
100085cf:	sbb    bl,bl
100085d1:	push   0x1
100085d3:	lea    ecx,[ebp-0x44]
100085d6:	inc    bl
100085d8:	call   0x100012f9
100085dd:	or     DWORD PTR [ebp-0x4],0xffffffff
100085e1:	push   0x0
100085e3:	push   0x1
100085e5:	lea    ecx,[ebp-0x28]
100085e8:	call   0x100012f9
100085ed:	test   bl,bl
100085ef:	jne    0x10008596
100085f1:	mov    eax,DWORD PTR [esi+0x8]
100085f4:	lea    ecx,[ebp-0x7c]
100085f7:	push   ecx
100085f8:	call   0x100194bf
100085fd:	mov    ebx,eax
100085ff:	lea    ecx,[ebp-0x60]
10008602:	mov    DWORD PTR [ebp-0x4],0x4
10008609:	mov    eax,DWORD PTR [edi+0x8]
1000860c:	push   ecx
1000860d:	call   0x100194bf
10008612:	mov    ecx,ebx
10008614:	mov    BYTE PTR [ebp-0x4],0x5
10008618:	call   0x10005e11
1000861d:	mov    bl,al
1000861f:	neg    bl
10008621:	push   0x0
10008623:	sbb    bl,bl
10008625:	push   0x1
10008627:	lea    ecx,[ebp-0x60]
1000862a:	inc    bl
1000862c:	call   0x100012f9
10008631:	or     DWORD PTR [ebp-0x4],0xffffffff
10008635:	push   0x0
10008637:	push   0x1
10008639:	lea    ecx,[ebp-0x7c]
1000863c:	call   0x100012f9
10008641:	test   bl,bl
10008643:	jne    0x10008596
10008649:	lea    eax,[esi+0x18]
1000864c:	push   eax
1000864d:	lea    eax,[edi+0x18]
10008650:	push   eax
10008651:	call   0x10007767
10008656:	test   al,al
10008658:	je     0x10008596
1000865e:	mov    al,BYTE PTR [edi+0x2c]
10008661:	cmp    al,BYTE PTR [esi+0x2c]
10008664:	jne    0x10008596
1000866a:	mov    eax,DWORD PTR [edi+0x10]
1000866d:	cmp    eax,DWORD PTR [esi+0x10]
10008670:	jne    0x10008596
10008676:	mov    eax,DWORD PTR [edi+0x14]
10008679:	cmp    eax,DWORD PTR [esi+0x14]
1000867c:	jne    0x10008596
10008682:	mov    al,0x1
10008684:	call   0x1005891d
10008689:	ret    
1000868a:	push   ebp
1000868b:	mov    ebp,esp
1000868d:	and    esp,0xfffffff8
10008690:	push   0xffffffff
10008692:	push   0x10060ffb
10008697:	mov    eax,fs:0x0
1000869d:	push   eax
1000869e:	sub    esp,0xc0
100086a4:	mov    eax,ds:0x1007d030
100086a9:	xor    eax,esp
100086ab:	mov    DWORD PTR [esp+0xb8],eax
100086b2:	push   ebx
100086b3:	push   esi
100086b4:	push   edi
100086b5:	mov    eax,ds:0x1007d030
100086ba:	xor    eax,esp
100086bc:	push   eax
100086bd:	lea    eax,[esp+0xd0]
100086c4:	mov    fs:0x0,eax
100086ca:	mov    eax,DWORD PTR [ebp+0x8]
100086cd:	xor    edi,edi
100086cf:	mov    DWORD PTR [esp+0x1c],eax
100086d3:	mov    DWORD PTR [esp+0x10],edi
100086d7:	mov    eax,DWORD PTR [eax+0x4]
100086da:	cmp    eax,edi
100086dc:	mov    DWORD PTR [esp+0x18],ecx
100086e0:	je     0x100086fc
100086e2:	lea    ecx,[esp+0x3c]
100086e6:	push   ecx
100086e7:	call   0x100194bf
100086ec:	xor    ebx,ebx
100086ee:	inc    ebx
100086ef:	mov    DWORD PTR [esp+0xd8],edi
100086f6:	mov    DWORD PTR [esp+0x10],ebx
100086fa:	jmp    0x1000871c
100086fc:	push   0x1006bb18
10008701:	lea    ecx,[esp+0x24]
10008705:	call   0x100011d6
1000870a:	xor    ebx,ebx
1000870c:	inc    ebx
1000870d:	mov    DWORD PTR [esp+0xd8],ebx
10008714:	mov    DWORD PTR [esp+0x10],0x2
1000871c:	push   eax
1000871d:	lea    ecx,[esp+0xb0]
10008724:	call   0x100011b0
10008729:	mov    DWORD PTR [esp+0xd8],0x2
10008734:	test   BYTE PTR [esp+0x10],0x2
10008739:	je     0x1000874b
1000873b:	and    DWORD PTR [esp+0x10],0xfffffffd
10008740:	push   edi
10008741:	push   ebx
10008742:	lea    ecx,[esp+0x28]
10008746:	call   0x100012f9
1000874b:	mov    BYTE PTR [esp+0xd8],0x4
10008753:	test   BYTE PTR [esp+0x10],bl
10008757:	je     0x10008764
10008759:	push   edi
1000875a:	push   ebx
1000875b:	lea    ecx,[esp+0x44]
1000875f:	call   0x100012f9
10008764:	push   0x1006bb18
10008769:	lea    esi,[esp+0xb0]
10008770:	call   0x10005e33
10008775:	test   al,al
10008777:	pop    ecx
10008778:	je     0x1000878d
1000877a:	mov    ecx,DWORD PTR [esp+0x18]
1000877e:	push   0x1006bb18
10008783:	call   0x100011d6
10008788:	jmp    0x100089e4
1000878d:	push   edi
1000878e:	lea    ecx,[esp+0x94]
10008795:	mov    DWORD PTR [esp+0xac],0xf
100087a0:	call   0x10001425
100087a5:	mov    BYTE PTR [esp+0xd8],0x5
100087ad:	cmp    DWORD PTR [esp+0xc4],0x10
100087b5:	mov    eax,DWORD PTR [esp+0xb0]
100087bc:	jb     0x100087c4
100087be:	mov    DWORD PTR [esp+0x10],eax
100087c2:	jmp    0x100087cf
100087c4:	lea    ecx,[esp+0xb0]
100087cb:	mov    DWORD PTR [esp+0x10],ecx
100087cf:	cmp    DWORD PTR [esp+0xc4],0x10
100087d7:	jae    0x100087e0
100087d9:	lea    eax,[esp+0xb0]
100087e0:	push   0x1006bff0
100087e5:	push   0x7
100087e7:	mov    esi,0x1006c028
100087ec:	push   esi
100087ed:	mov    DWORD PTR [esp+0x20],eax
100087f1:	call   0x10003d75
100087f6:	add    esp,0xc
100087f9:	push   eax
100087fa:	push   DWORD PTR [esp+0x14]
100087fe:	call   0x10044780
10008803:	cmp    eax,DWORD PTR [esp+0x1c]
10008807:	pop    ecx
10008808:	pop    ecx
10008809:	jne    0x10008827
1000880b:	push   0xffffffff
1000880d:	push   edi
1000880e:	lea    eax,[esp+0xb4]
10008815:	push   eax
10008816:	lea    ecx,[esp+0x9c]
1000881d:	call   0x1000124a
10008822:	jmp    0x100089c5
10008827:	push   0x7d39aae6
1000882c:	push   0x1006c030
10008831:	call   0x10003d63
10008836:	push   eax
10008837:	push   0x4
10008839:	push   0x1006c070
1000883e:	call   0x10003d75
10008843:	add    esp,0x14
10008846:	push   eax
10008847:	lea    ecx,[esp+0x24]
1000884b:	call   0x100011d6
10008850:	push   edi
10008851:	lea    eax,[esp+0x24]
10008855:	push   eax
10008856:	lea    eax,[esp+0x60]
1000885a:	push   eax
1000885b:	mov    eax,DWORD PTR [esp+0x28]
1000885f:	add    eax,0x18
10008862:	mov    BYTE PTR [esp+0xe4],0x6
1000886a:	call   0x1000800f
1000886f:	lea    ecx,[esp+0xac]
10008876:	push   ecx
10008877:	push   eax
10008878:	lea    eax,[esp+0x44]
1000887c:	push   eax
1000887d:	mov    BYTE PTR [esp+0xe4],0x7
10008885:	call   0x1000a3d1
1000888a:	add    esp,0xc
1000888d:	push   0xffffffff
1000888f:	push   edi
10008890:	push   eax
10008891:	lea    ecx,[esp+0x9c]
10008898:	mov    BYTE PTR [esp+0xe4],0x8
100088a0:	call   0x1000124a
100088a5:	push   edi
100088a6:	push   ebx
100088a7:	lea    ecx,[esp+0x44]
100088ab:	call   0x100012f9
100088b0:	push   edi
100088b1:	push   ebx
100088b2:	lea    ecx,[esp+0x60]
100088b6:	call   0x100012f9
100088bb:	push   edi
100088bc:	push   ebx
100088bd:	lea    ecx,[esp+0x28]
100088c1:	mov    BYTE PTR [esp+0xe0],0x5
100088c9:	call   0x100012f9
100088ce:	cmp    DWORD PTR [esp+0xa8],0x10
100088d6:	mov    eax,DWORD PTR [esp+0x94]
100088dd:	jb     0x100088e5
100088df:	mov    DWORD PTR [esp+0x14],eax
100088e3:	jmp    0x100088f0
100088e5:	lea    ecx,[esp+0x94]
100088ec:	mov    DWORD PTR [esp+0x14],ecx
100088f0:	cmp    DWORD PTR [esp+0xa8],0x10
100088f8:	jae    0x10008901
100088fa:	lea    eax,[esp+0x94]
10008901:	push   0x1006c078
10008906:	push   0x7
10008908:	push   esi
10008909:	mov    DWORD PTR [esp+0x1c],eax
1000890d:	call   0x10003d75
10008912:	add    esp,0xc
10008915:	push   eax
10008916:	push   DWORD PTR [esp+0x18]
1000891a:	call   0x10044780
1000891f:	cmp    eax,DWORD PTR [esp+0x18]
10008923:	pop    ecx
10008924:	pop    ecx
10008925:	je     0x100089c5
1000892b:	push   0x62ce8d10
10008930:	push   0x1006c0a4
10008935:	call   0x10003d63
1000893a:	push   0x3feeaa54
1000893f:	push   eax
10008940:	call   0x10003d63
10008945:	push   0x30bd179e
1000894a:	push   eax
1000894b:	call   0x10003d63
10008950:	push   0x359b08ce
10008955:	push   eax
10008956:	call   0x10003d63
1000895b:	push   eax
1000895c:	push   0x7
1000895e:	push   esi
1000895f:	call   0x10003d75
10008964:	add    esp,0x2c
10008967:	push   eax
10008968:	lea    ecx,[esp+0x78]
1000896c:	call   0x100011d6
10008971:	lea    ecx,[esp+0x90]
10008978:	push   ecx
10008979:	push   eax
1000897a:	lea    eax,[esp+0x60]
1000897e:	push   eax
1000897f:	mov    BYTE PTR [esp+0xe4],0x9
10008987:	call   0x1000a3d1
1000898c:	add    esp,0xc
1000898f:	push   0xffffffff
10008991:	push   edi
10008992:	push   eax
10008993:	lea    ecx,[esp+0x9c]
1000899a:	mov    BYTE PTR [esp+0xe4],0xa
100089a2:	call   0x1000124a
100089a7:	push   edi
100089a8:	push   ebx
100089a9:	lea    ecx,[esp+0x60]
100089ad:	call   0x100012f9
100089b2:	push   edi
100089b3:	push   ebx
100089b4:	lea    ecx,[esp+0x7c]
100089b8:	mov    BYTE PTR [esp+0xe0],0x5
100089c0:	call   0x100012f9
100089c5:	mov    ecx,DWORD PTR [esp+0x18]
100089c9:	lea    eax,[esp+0x90]
100089d0:	push   eax
100089d1:	call   0x100011b0
100089d6:	push   edi
100089d7:	push   ebx
100089d8:	lea    ecx,[esp+0x98]
100089df:	call   0x100012f9
100089e4:	push   edi
100089e5:	push   ebx
100089e6:	lea    ecx,[esp+0xb4]
100089ed:	call   0x100012f9
100089f2:	mov    eax,DWORD PTR [esp+0x18]
100089f6:	mov    ecx,DWORD PTR [esp+0xd0]
100089fd:	mov    DWORD PTR fs:0x0,ecx
10008a04:	pop    ecx
10008a05:	pop    edi
10008a06:	pop    esi
10008a07:	pop    ebx
10008a08:	mov    ecx,DWORD PTR [esp+0xb8]
10008a0f:	xor    ecx,esp
10008a11:	call   0x10041d97
10008a16:	mov    esp,ebp
10008a18:	pop    ebp
10008a19:	ret    0x4
10008a1c:	push   0x0
10008a1e:	mov    eax,0x10062345
10008a23:	call   0x10058845
10008a28:	mov    edi,DWORD PTR [ebp+0x8]
10008a2b:	xor    ebx,ebx
10008a2d:	mov    DWORD PTR [edi],ebx
10008a2f:	mov    DWORD PTR [ebp-0x4],ebx
10008a32:	mov    DWORD PTR [edi+0x4],ebx
10008a35:	mov    DWORD PTR [edi+0x8],ebx
10008a38:	mov    DWORD PTR [edi+0xc],ebx
10008a3b:	mov    BYTE PTR [ebp-0x4],0x3
10008a3f:	lea    esi,[edi+0x20]
10008a42:	mov    DWORD PTR [edi+0x10],ebx
10008a45:	mov    DWORD PTR [edi+0x14],ebx
10008a48:	mov    DWORD PTR [edi+0x18],ebx
10008a4b:	mov    DWORD PTR [edi+0x1c],ebx
10008a4e:	call   0x10007531
10008a53:	mov    DWORD PTR [edi+0x34],ebx
10008a56:	mov    DWORD PTR [edi+0x38],ebx
10008a59:	mov    eax,edi
10008a5b:	call   0x1005891d
10008a60:	ret    0x4
10008a63:	push   ebx
10008a64:	push   esi
10008a65:	mov    esi,ecx
10008a67:	push   edi
10008a68:	mov    edi,DWORD PTR [esi+0x34]
10008a6b:	mov    ebx,eax
10008a6d:	cmp    ebx,edi
10008a6f:	je     0x10008a7a
10008a71:	test   edi,edi
10008a73:	je     0x10008a7a
10008a75:	call   0x100099a6
10008a7a:	mov    DWORD PTR [esi+0x34],ebx
10008a7d:	mov    edi,DWORD PTR [esi]
10008a7f:	test   edi,edi
10008a81:	je     0x10008a8f
10008a83:	push   DWORD PTR [edi]
10008a85:	mov    eax,ebx
10008a87:	call   0x100072bb
10008a8c:	mov    DWORD PTR [edi+0x20],ebx
10008a8f:	mov    edi,DWORD PTR [esi+0x4]
10008a92:	test   edi,edi
10008a94:	je     0x10008aa5
10008a96:	mov    ebx,DWORD PTR [esi+0x34]
10008a99:	push   DWORD PTR [edi]
10008a9b:	mov    eax,ebx
10008a9d:	call   0x100072bb
10008aa2:	mov    DWORD PTR [edi+0x20],ebx
10008aa5:	mov    edi,DWORD PTR [esi+0x8]
10008aa8:	test   edi,edi
10008aaa:	je     0x10008abb
10008aac:	mov    ebx,DWORD PTR [esi+0x34]
10008aaf:	push   DWORD PTR [edi]
10008ab1:	mov    eax,ebx
10008ab3:	call   0x100072bb
10008ab8:	mov    DWORD PTR [edi+0x20],ebx
10008abb:	lea    ebx,[esi+0x20]
10008abe:	mov    esi,DWORD PTR [esi+0x34]
10008ac1:	test   esi,esi
10008ac3:	mov    DWORD PTR [ebx+0xc],esi
10008ac6:	je     0x10008acd
10008ac8:	call   0x1000813e
10008acd:	pop    edi
10008ace:	pop    esi
10008acf:	pop    ebx
10008ad0:	ret    
10008ad1:	push   0xc
10008ad3:	mov    eax,0x10060f58
10008ad8:	call   0x10058845
10008add:	mov    esi,ecx
10008adf:	mov    DWORD PTR [ebp-0x14],ebx
10008ae2:	and    DWORD PTR [ebp-0x4],0x0
10008ae6:	mov    eax,DWORD PTR [esi+0x34]
10008ae9:	mov    edi,DWORD PTR [ebx+0x18]
10008aec:	test   edi,edi
10008aee:	mov    ecx,DWORD PTR [eax+0x18]
10008af1:	mov    DWORD PTR [ebp-0x10],ecx
10008af4:	je     0x10008afe
10008af6:	push   DWORD PTR [ebx+0x14]
10008af9:	call   0x10007221
10008afe:	mov    eax,DWORD PTR [esi+0xc]
10008b01:	test   eax,eax
10008b03:	je     0x10008b12
10008b05:	mov    edi,DWORD PTR [esi+0x34]
10008b08:	mov    ecx,DWORD PTR [ebp-0x10]
10008b0b:	mov    esi,eax
10008b0d:	call   0x1000751e
10008b12:	mov    edi,ebx
10008b14:	call   0x100099a6
10008b19:	call   0x1005891d
10008b1e:	ret    
10008b1f:	mov    eax,DWORD PTR [ecx+0x34]
10008b22:	test   eax,eax
10008b24:	je     0x10008b2a
10008b26:	mov    eax,DWORD PTR [eax+0x18]
10008b29:	ret    
10008b2a:	mov    eax,DWORD PTR [ecx+0x38]
10008b2d:	ret    
10008b2e:	push   0x8
10008b30:	mov    eax,0x10062962
10008b35:	call   0x10058845
10008b3a:	push   0x40
10008b3c:	call   0x1004239e
10008b41:	pop    ecx
10008b42:	mov    DWORD PTR [ebp-0x10],eax
10008b45:	xor    esi,esi
10008b47:	cmp    eax,esi
10008b49:	mov    DWORD PTR [ebp-0x4],esi
10008b4c:	je     0x10008b56
10008b4e:	push   eax
10008b4f:	call   0x10008a1c
10008b54:	mov    esi,eax
10008b56:	mov    DWORD PTR [ebp-0x10],esi
10008b59:	mov    eax,DWORD PTR [ebp+0x8]
10008b5c:	mov    DWORD PTR [ebp-0x4],0x1
10008b63:	mov    ecx,DWORD PTR [eax]
10008b65:	call   0x10007493
10008b6a:	mov    ebx,eax
10008b6c:	mov    edi,esi
10008b6e:	call   0x1000971b
10008b73:	mov    eax,DWORD PTR [ebp+0x8]
10008b76:	mov    ecx,DWORD PTR [eax+0x4]
10008b79:	call   0x10007493
10008b7e:	lea    edi,[esi+0x4]
10008b81:	mov    ebx,eax
10008b83:	call   0x1000971b
10008b88:	mov    eax,DWORD PTR [ebp+0x8]
10008b8b:	mov    ecx,DWORD PTR [eax+0x8]
10008b8e:	call   0x10007493
10008b93:	lea    edi,[esi+0x8]
10008b96:	mov    ebx,eax
10008b98:	call   0x1000971b
10008b9d:	mov    edi,DWORD PTR [ebp+0x8]
10008ba0:	mov    ecx,DWORD PTR [edi+0xc]
10008ba3:	test   ecx,ecx
10008ba5:	je     0x10008bb9
10008ba7:	call   0x10007493
10008bac:	lea    edi,[esi+0xc]
10008baf:	mov    ebx,eax
10008bb1:	call   0x1000971b
10008bb6:	mov    edi,DWORD PTR [ebp+0x8]
10008bb9:	lea    eax,[edi+0x20]
10008bbc:	push   eax
10008bbd:	lea    eax,[esi+0x20]
10008bc0:	push   eax
10008bc1:	call   0x10007623
10008bc6:	mov    eax,DWORD PTR [edi+0x10]
10008bc9:	mov    DWORD PTR [esi+0x10],eax
10008bcc:	mov    eax,DWORD PTR [edi+0x14]
10008bcf:	mov    DWORD PTR [esi+0x14],eax
10008bd2:	mov    eax,DWORD PTR [edi+0x18]
10008bd5:	mov    DWORD PTR [esi+0x18],eax
10008bd8:	mov    eax,DWORD PTR [edi+0x1c]
10008bdb:	mov    ecx,edi
10008bdd:	mov    DWORD PTR [esi+0x1c],eax
10008be0:	call   0x10008b1f
10008be5:	and    DWORD PTR [ebp-0x10],0x0
10008be9:	or     DWORD PTR [ebp-0x4],0xffffffff
10008bed:	mov    DWORD PTR [esi+0x38],eax
10008bf0:	lea    eax,[ebp-0x10]
10008bf3:	call   0x10009963
10008bf8:	mov    eax,esi
10008bfa:	call   0x1005891d
10008bff:	ret    0x4
10008c02:	push   0x40
10008c04:	mov    eax,0x10061b8d
10008c09:	call   0x10058845
10008c0e:	and    DWORD PTR [ebp-0x14],0x0
10008c12:	mov    ebx,DWORD PTR [ebp+0x8]
10008c15:	mov    eax,DWORD PTR [ebx]
10008c17:	lea    ecx,[ebp-0x30]
10008c1a:	push   ecx
10008c1b:	call   0x100194bf
10008c20:	and    DWORD PTR [ebp-0x4],0x0
10008c24:	mov    esi,DWORD PTR [edi]
10008c26:	push   eax
10008c27:	mov    DWORD PTR [ebp-0x14],0x1
10008c2e:	call   0x100074cf
10008c33:	test   al,al
10008c35:	setne  BYTE PTR [ebp-0xd]
10008c39:	or     DWORD PTR [ebp-0x4],0xffffffff
10008c3d:	xor    esi,esi
10008c3f:	push   0x0
10008c41:	inc    esi
10008c42:	push   esi
10008c43:	lea    ecx,[ebp-0x30]
10008c46:	call   0x100012f9
10008c4b:	mov    eax,DWORD PTR [ebx+0x4]
10008c4e:	lea    ecx,[ebp-0x30]
10008c51:	push   ecx
10008c52:	call   0x100194bf
10008c57:	mov    DWORD PTR [ebp-0x4],esi
10008c5a:	mov    esi,DWORD PTR [edi+0x4]
10008c5d:	push   eax
10008c5e:	mov    DWORD PTR [ebp-0x14],0x2
10008c65:	call   0x100074cf
10008c6a:	test   al,al
10008c6c:	jne    0x10008c76
10008c6e:	cmp    BYTE PTR [ebp-0xd],al
10008c71:	mov    BYTE PTR [ebp-0xd],al
10008c74:	je     0x10008c7a
10008c76:	mov    BYTE PTR [ebp-0xd],0x1
10008c7a:	or     DWORD PTR [ebp-0x4],0xffffffff
10008c7e:	push   0x0
10008c80:	push   0x1
10008c82:	lea    ecx,[ebp-0x30]
10008c85:	call   0x100012f9
10008c8a:	mov    eax,DWORD PTR [ebx+0x8]
10008c8d:	lea    ecx,[ebp-0x30]
10008c90:	push   ecx
10008c91:	call   0x100194bf
10008c96:	mov    DWORD PTR [ebp-0x4],0x2
10008c9d:	mov    esi,DWORD PTR [edi+0x8]
10008ca0:	push   eax
10008ca1:	mov    DWORD PTR [ebp-0x14],0x4
10008ca8:	call   0x100074cf
10008cad:	test   al,al
10008caf:	jne    0x10008cb9
10008cb1:	cmp    BYTE PTR [ebp-0xd],al
10008cb4:	mov    BYTE PTR [ebp-0xd],al
10008cb7:	je     0x10008cbd
10008cb9:	mov    BYTE PTR [ebp-0xd],0x1
10008cbd:	or     DWORD PTR [ebp-0x4],0xffffffff
10008cc1:	push   0x0
10008cc3:	push   0x1
10008cc5:	lea    ecx,[ebp-0x30]
10008cc8:	call   0x100012f9
10008ccd:	mov    eax,DWORD PTR [ebx+0xc]
10008cd0:	test   eax,eax
10008cd2:	je     0x10008d1a
10008cd4:	cmp    DWORD PTR [edi+0xc],0x0
10008cd8:	je     0x10008d1a
10008cda:	lea    ecx,[ebp-0x4c]
10008cdd:	push   ecx
10008cde:	call   0x100194bf
10008ce3:	mov    DWORD PTR [ebp-0x4],0x3
10008cea:	mov    esi,DWORD PTR [edi+0xc]
10008ced:	push   eax
10008cee:	mov    DWORD PTR [ebp-0x14],0x8
10008cf5:	call   0x100074cf
10008cfa:	test   al,al
10008cfc:	jne    0x10008d06
10008cfe:	cmp    BYTE PTR [ebp-0xd],al
10008d01:	mov    BYTE PTR [ebp-0xd],al
10008d04:	je     0x10008d0a
10008d06:	mov    BYTE PTR [ebp-0xd],0x1
10008d0a:	or     DWORD PTR [ebp-0x4],0xffffffff
10008d0e:	push   0x0
10008d10:	push   0x1
10008d12:	lea    ecx,[ebp-0x4c]
10008d15:	call   0x100012f9
10008d1a:	add    ebx,0x20
10008d1d:	lea    ecx,[edi+0x20]
10008d20:	call   0x10007868
10008d25:	test   al,al
10008d27:	jne    0x10008d30
10008d29:	xor    bl,bl
10008d2b:	cmp    BYTE PTR [ebp-0xd],bl
10008d2e:	je     0x10008d32
10008d30:	mov    bl,0x1
10008d32:	mov    edx,DWORD PTR [ebp+0x8]
10008d35:	mov    eax,DWORD PTR [edx+0x10]
10008d38:	cmp    eax,DWORD PTR [edi+0x10]
10008d3b:	mov    esi,DWORD PTR [edx+0x14]
10008d3e:	jne    0x10008d45
10008d40:	cmp    esi,DWORD PTR [edi+0x14]
10008d43:	je     0x10008d4d
10008d45:	mov    bl,0x1
10008d47:	mov    DWORD PTR [edi+0x10],eax
10008d4a:	mov    DWORD PTR [edi+0x14],esi
10008d4d:	mov    eax,DWORD PTR [edx+0x18]
10008d50:	cmp    eax,DWORD PTR [edi+0x18]
10008d53:	mov    esi,DWORD PTR [edx+0x1c]
10008d56:	jne    0x10008d5d
10008d58:	cmp    esi,DWORD PTR [edi+0x1c]
10008d5b:	je     0x10008d65
10008d5d:	mov    bl,0x1
10008d5f:	mov    DWORD PTR [edi+0x18],eax
10008d62:	mov    DWORD PTR [edi+0x1c],esi
10008d65:	cmp    DWORD PTR [edi+0x34],0x0
10008d69:	jne    0x10008d8b
10008d6b:	mov    ecx,edx
10008d6d:	call   0x10008b1f
10008d72:	mov    ecx,edi
10008d74:	mov    esi,eax
10008d76:	call   0x10008b1f
10008d7b:	cmp    esi,eax
10008d7d:	je     0x10008d8b
10008d7f:	mov    ecx,edx
10008d81:	mov    bl,0x1
10008d83:	call   0x10008b1f
10008d88:	mov    DWORD PTR [edi+0x38],eax
10008d8b:	mov    al,bl
10008d8d:	call   0x1005891d
10008d92:	ret    0x4
10008d95:	push   0x74
10008d97:	mov    eax,0x1005f3cd
10008d9c:	call   0x10058845
10008da1:	mov    eax,DWORD PTR [esi]
10008da3:	lea    ecx,[ebp-0x44]
10008da6:	push   ecx
10008da7:	call   0x100194bf
10008dac:	mov    ebx,eax
10008dae:	and    DWORD PTR [ebp-0x4],0x0
10008db2:	mov    eax,DWORD PTR [edi]
10008db4:	lea    ecx,[ebp-0x28]
10008db7:	push   ecx
10008db8:	call   0x100194bf
10008dbd:	mov    ecx,ebx
10008dbf:	mov    BYTE PTR [ebp-0x4],0x1
10008dc3:	call   0x10005e11
10008dc8:	mov    bl,al
10008dca:	neg    bl
10008dcc:	push   0x0
10008dce:	sbb    bl,bl
10008dd0:	push   0x1
10008dd2:	lea    ecx,[ebp-0x28]
10008dd5:	inc    bl
10008dd7:	call   0x100012f9
10008ddc:	or     DWORD PTR [ebp-0x4],0xffffffff
10008de0:	push   0x0
10008de2:	push   0x1
10008de4:	lea    ecx,[ebp-0x44]
10008de7:	call   0x100012f9
10008dec:	test   bl,bl
10008dee:	je     0x10008df7
10008df0:	xor    al,al
10008df2:	jmp    0x10008efd
10008df7:	mov    eax,DWORD PTR [esi+0x4]
10008dfa:	lea    ecx,[ebp-0x28]
10008dfd:	push   ecx
10008dfe:	call   0x100194bf
10008e03:	mov    ebx,eax
10008e05:	lea    ecx,[ebp-0x44]
10008e08:	mov    DWORD PTR [ebp-0x4],0x2
10008e0f:	mov    eax,DWORD PTR [edi+0x4]
10008e12:	push   ecx
10008e13:	call   0x100194bf
10008e18:	mov    ecx,ebx
10008e1a:	mov    BYTE PTR [ebp-0x4],0x3
10008e1e:	call   0x10005e11
10008e23:	mov    bl,al
10008e25:	neg    bl
10008e27:	push   0x0
10008e29:	sbb    bl,bl
10008e2b:	push   0x1
10008e2d:	lea    ecx,[ebp-0x44]
10008e30:	inc    bl
10008e32:	call   0x100012f9
10008e37:	or     DWORD PTR [ebp-0x4],0xffffffff
10008e3b:	push   0x0
10008e3d:	push   0x1
10008e3f:	lea    ecx,[ebp-0x28]
10008e42:	call   0x100012f9
10008e47:	test   bl,bl
10008e49:	jne    0x10008df0
10008e4b:	mov    eax,DWORD PTR [esi+0x8]
10008e4e:	lea    ecx,[ebp-0x7c]
10008e51:	push   ecx
10008e52:	call   0x100194bf
10008e57:	mov    ebx,eax
10008e59:	lea    ecx,[ebp-0x60]
10008e5c:	mov    DWORD PTR [ebp-0x4],0x4
10008e63:	mov    eax,DWORD PTR [edi+0x8]
10008e66:	push   ecx
10008e67:	call   0x100194bf
10008e6c:	mov    ecx,ebx
10008e6e:	mov    BYTE PTR [ebp-0x4],0x5
10008e72:	call   0x10005e11
10008e77:	mov    bl,al
10008e79:	neg    bl
10008e7b:	push   0x0
10008e7d:	sbb    bl,bl
10008e7f:	push   0x1
10008e81:	lea    ecx,[ebp-0x60]
10008e84:	inc    bl
10008e86:	call   0x100012f9
10008e8b:	or     DWORD PTR [ebp-0x4],0xffffffff
10008e8f:	push   0x0
10008e91:	push   0x1
10008e93:	lea    ecx,[ebp-0x7c]
10008e96:	call   0x100012f9
10008e9b:	test   bl,bl
10008e9d:	jne    0x10008df0
10008ea3:	lea    eax,[esi+0x20]
10008ea6:	push   eax
10008ea7:	lea    eax,[edi+0x20]
10008eaa:	push   eax
10008eab:	call   0x10007767
10008eb0:	test   al,al
10008eb2:	je     0x10008df0
10008eb8:	mov    eax,DWORD PTR [esi+0x10]
10008ebb:	cmp    eax,DWORD PTR [edi+0x10]
10008ebe:	jne    0x10008df0
10008ec4:	mov    eax,DWORD PTR [esi+0x14]
10008ec7:	cmp    eax,DWORD PTR [edi+0x14]
10008eca:	jne    0x10008df0
10008ed0:	mov    eax,DWORD PTR [esi+0x18]
10008ed3:	cmp    eax,DWORD PTR [edi+0x18]
10008ed6:	jne    0x10008df0
10008edc:	mov    eax,DWORD PTR [esi+0x1c]
10008edf:	cmp    eax,DWORD PTR [edi+0x1c]
10008ee2:	jne    0x10008df0
10008ee8:	mov    ecx,esi
10008eea:	call   0x10008b1f
10008eef:	mov    ecx,edi
10008ef1:	mov    edx,eax
10008ef3:	call   0x10008b1f
10008ef8:	cmp    edx,eax
10008efa:	sete   al
10008efd:	call   0x1005891d
10008f02:	ret    
10008f03:	push   0x34
10008f05:	mov    eax,0x1006292b
10008f0a:	call   0x100588ae
10008f0f:	mov    eax,DWORD PTR [ebp+0x8]
10008f12:	mov    DWORD PTR [ebp-0x3c],eax
10008f15:	mov    eax,DWORD PTR [ebp+0xc]
10008f18:	push   0x40
10008f1a:	mov    ebx,ecx
10008f1c:	mov    DWORD PTR [ebp-0x34],eax
10008f1f:	call   0x1004239e
10008f24:	pop    ecx
10008f25:	mov    DWORD PTR [ebp-0x30],eax
10008f28:	xor    esi,esi
10008f2a:	cmp    eax,esi
10008f2c:	mov    DWORD PTR [ebp-0x4],esi
10008f2f:	je     0x10008f3c
10008f31:	push   eax
10008f32:	call   0x100081c6
10008f37:	mov    DWORD PTR [ebp-0x30],eax
10008f3a:	jmp    0x10008f3f
10008f3c:	mov    DWORD PTR [ebp-0x30],esi
10008f3f:	mov    eax,DWORD PTR [ebp-0x30]
10008f42:	mov    DWORD PTR [ebp-0x40],eax
10008f45:	mov    DWORD PTR [ebp-0x4],0x1
10008f4c:	push   esi
10008f4d:	lea    ecx,[ebp-0x2c]
10008f50:	mov    DWORD PTR [ebp-0x14],0xf
10008f57:	call   0x10001425
10008f5c:	push   0xffffffff
10008f5e:	push   esi
10008f5f:	mov    BYTE PTR [ebp-0x4],0x2
10008f63:	mov    edi,DWORD PTR [ebp-0x18]
10008f66:	mov    eax,ebx
10008f68:	lea    esi,[ebp-0x2c]
10008f6b:	call   0x10005fb0
10008f70:	mov    esi,DWORD PTR [ebp-0x18]
10008f73:	push   0x24
10008f75:	call   0x1004239e
10008f7a:	pop    ecx
10008f7b:	mov    DWORD PTR [ebp-0x38],eax
10008f7e:	test   eax,eax
10008f80:	mov    BYTE PTR [ebp-0x4],0x3
10008f84:	je     0x10008f93
10008f86:	sub    esi,edi
10008f88:	push   esi
10008f89:	push   edi
10008f8a:	push   ebx
10008f8b:	push   eax
10008f8c:	call   0x1000744a
10008f91:	jmp    0x10008f95
10008f93:	xor    eax,eax
10008f95:	mov    BYTE PTR [ebp-0x4],0x2
10008f99:	mov    edi,DWORD PTR [ebp-0x30]
10008f9c:	mov    ebx,eax
10008f9e:	call   0x1000971b
10008fa3:	push   0x1006c0d4
10008fa8:	lea    eax,[ebp-0x2c]
10008fab:	push   eax
10008fac:	call   0x10005e98
10008fb1:	mov    eax,DWORD PTR [ebp-0x3c]
10008fb4:	mov    edi,DWORD PTR [ebp-0x18]
10008fb7:	push   0xffffffff
10008fb9:	push   0x0
10008fbb:	lea    esi,[ebp-0x2c]
10008fbe:	call   0x10005fb0
10008fc3:	mov    esi,DWORD PTR [ebp-0x18]
10008fc6:	push   0x24
10008fc8:	call   0x1004239e
10008fcd:	pop    ecx
10008fce:	mov    DWORD PTR [ebp-0x38],eax
10008fd1:	test   eax,eax
10008fd3:	mov    BYTE PTR [ebp-0x4],0x4
10008fd7:	je     0x10008fe8
10008fd9:	sub    esi,edi
10008fdb:	push   esi
10008fdc:	push   edi
10008fdd:	push   DWORD PTR [ebp-0x3c]
10008fe0:	push   eax
10008fe1:	call   0x1000744a
10008fe6:	jmp    0x10008fea
10008fe8:	xor    eax,eax
10008fea:	mov    BYTE PTR [ebp-0x4],0x2
10008fee:	mov    edi,DWORD PTR [ebp-0x30]
10008ff1:	add    edi,0x4
10008ff4:	mov    ebx,eax
10008ff6:	call   0x1000971b
10008ffb:	push   0x1006c0d4
10009000:	lea    eax,[ebp-0x2c]
10009003:	push   eax
10009004:	call   0x10005e98
10009009:	push   0x3ac12d9e
1000900e:	push   0x1006c0d8
10009013:	call   0x10003d63
10009018:	push   0x2a4ebd8a
1000901d:	push   eax
1000901e:	call   0x10003d63
10009023:	push   0x1cb4a940
10009028:	push   eax
10009029:	call   0x10003d63
1000902e:	push   eax
1000902f:	push   0x5
10009031:	push   0x1006c0fc
10009036:	call   0x10003d75
1000903b:	add    esp,0x24
1000903e:	push   eax
1000903f:	lea    eax,[ebp-0x2c]
10009042:	push   eax
10009043:	call   0x10005e98
10009048:	mov    eax,DWORD PTR [ebp-0x34]
1000904b:	mov    edi,DWORD PTR [ebp-0x18]
1000904e:	push   0xffffffff
10009050:	push   0x0
10009052:	lea    esi,[ebp-0x2c]
10009055:	call   0x10005fb0
1000905a:	mov    esi,DWORD PTR [ebp-0x18]
1000905d:	push   0x24
1000905f:	call   0x1004239e
10009064:	pop    ecx
10009065:	mov    DWORD PTR [ebp-0x38],eax
10009068:	test   eax,eax
1000906a:	mov    BYTE PTR [ebp-0x4],0x5
1000906e:	je     0x10009081
10009070:	mov    ecx,esi
10009072:	sub    ecx,edi
10009074:	push   ecx
10009075:	push   edi
10009076:	push   DWORD PTR [ebp-0x34]
10009079:	push   eax
1000907a:	call   0x1000744a
1000907f:	jmp    0x10009083
10009081:	xor    eax,eax
10009083:	mov    BYTE PTR [ebp-0x4],0x2
10009087:	mov    edi,DWORD PTR [ebp-0x30]
1000908a:	add    edi,0x8
1000908d:	mov    ebx,eax
1000908f:	call   0x1000971b
10009094:	mov    ebx,0x1006bfe8
10009099:	push   ebx
1000909a:	lea    eax,[ebp-0x2c]
1000909d:	push   eax
1000909e:	call   0x10005e98
100090a3:	mov    edi,DWORD PTR [ebp-0x30]
100090a6:	push   DWORD PTR [ebp-0x18]
100090a9:	add    edi,0x18
100090ac:	call   0x1000755b
100090b1:	push   ebx
100090b2:	lea    eax,[ebp-0x2c]
100090b5:	push   eax
100090b6:	call   0x10005e98
100090bb:	push   0x24
100090bd:	call   0x1004239e
100090c2:	pop    ecx
100090c3:	mov    DWORD PTR [ebp-0x38],eax
100090c6:	test   eax,eax
100090c8:	mov    BYTE PTR [ebp-0x4],0x6
100090cc:	je     0x100090d8
100090ce:	push   eax
100090cf:	call   0x100071d9
100090d4:	mov    ebx,eax
100090d6:	jmp    0x100090da
100090d8:	xor    ebx,ebx
100090da:	mov    DWORD PTR [ebp-0x34],ebx
100090dd:	mov    eax,esi
100090df:	mov    esi,ebx
100090e1:	mov    BYTE PTR [ebp-0x4],0x7
100090e5:	call   0x100073fe
100090ea:	cmp    DWORD PTR [ebp-0x14],0x10
100090ee:	mov    eax,DWORD PTR [ebp-0x28]
100090f1:	jae    0x100090f6
100090f3:	lea    eax,[ebp-0x28]
100090f6:	mov    edi,DWORD PTR [ebp-0x18]
100090f9:	push   eax
100090fa:	mov    eax,ebx
100090fc:	call   0x10007221
10009101:	mov    ecx,DWORD PTR [ebp-0x30]
10009104:	and    DWORD PTR [ebp-0x34],0x0
10009108:	mov    eax,ebx
1000910a:	call   0x1000820a
1000910f:	push   0x0
10009111:	push   0x1
10009113:	lea    ecx,[ebp-0x2c]
10009116:	call   0x100012f9
1000911b:	mov    eax,DWORD PTR [ebp-0x30]
1000911e:	call   0x10058931
10009123:	ret    
10009124:	push   0x3c
10009126:	mov    eax,0x100628bc
1000912b:	call   0x100588ae
10009130:	mov    eax,DWORD PTR [ebp+0x8]
10009133:	mov    DWORD PTR [ebp-0x44],eax
10009136:	mov    eax,DWORD PTR [ebp+0xc]
10009139:	mov    esi,ecx
1000913b:	xor    ebx,ebx
1000913d:	push   0x40
1000913f:	mov    DWORD PTR [ebp-0x3c],esi
10009142:	mov    DWORD PTR [ebp-0x38],eax
10009145:	mov    DWORD PTR [ebp-0x34],ebx
10009148:	call   0x1004239e
1000914d:	pop    ecx
1000914e:	mov    DWORD PTR [ebp-0x34],eax
10009151:	cmp    eax,ebx
10009153:	mov    DWORD PTR [ebp-0x4],ebx
10009156:	je     0x10009163
10009158:	push   eax
10009159:	call   0x10008a1c
1000915e:	mov    DWORD PTR [ebp-0x30],eax
10009161:	jmp    0x10009166
10009163:	mov    DWORD PTR [ebp-0x30],ebx
10009166:	mov    eax,DWORD PTR [ebp-0x30]
10009169:	mov    DWORD PTR [ebp-0x34],eax
1000916c:	mov    DWORD PTR [ebp-0x4],0x1
10009173:	push   ebx
10009174:	lea    ecx,[ebp-0x2c]
10009177:	mov    DWORD PTR [ebp-0x14],0xf
1000917e:	call   0x10001425
10009183:	push   0xffffffff
10009185:	mov    eax,esi
10009187:	mov    BYTE PTR [ebp-0x4],0x2
1000918b:	mov    edi,DWORD PTR [ebp-0x18]
1000918e:	push   ebx
1000918f:	lea    esi,[ebp-0x2c]
10009192:	call   0x10005fb0
10009197:	mov    esi,DWORD PTR [ebp-0x18]
1000919a:	push   0x24
1000919c:	call   0x1004239e
100091a1:	pop    ecx
100091a2:	mov    DWORD PTR [ebp-0x40],eax
100091a5:	cmp    eax,ebx
100091a7:	mov    BYTE PTR [ebp-0x4],0x3
100091ab:	je     0x100091bc
100091ad:	sub    esi,edi
100091af:	push   esi
100091b0:	push   edi
100091b1:	push   DWORD PTR [ebp-0x3c]
100091b4:	push   eax
100091b5:	call   0x1000744a
100091ba:	jmp    0x100091be
100091bc:	xor    eax,eax
100091be:	mov    edi,DWORD PTR [ebp-0x30]
100091c1:	mov    ebx,eax
100091c3:	mov    BYTE PTR [ebp-0x4],0x2
100091c7:	call   0x1000971b
100091cc:	push   0x1006c0d4
100091d1:	lea    eax,[ebp-0x2c]
100091d4:	push   eax
100091d5:	call   0x10005e98
100091da:	mov    eax,DWORD PTR [ebp-0x44]
100091dd:	mov    edi,DWORD PTR [ebp-0x18]
100091e0:	push   0xffffffff
100091e2:	push   0x0
100091e4:	lea    esi,[ebp-0x2c]
100091e7:	call   0x10005fb0
100091ec:	mov    esi,DWORD PTR [ebp-0x18]
100091ef:	push   0x24
100091f1:	call   0x1004239e
100091f6:	pop    ecx
100091f7:	mov    DWORD PTR [ebp-0x40],eax
100091fa:	test   eax,eax
100091fc:	mov    BYTE PTR [ebp-0x4],0x4
10009200:	je     0x10009211
10009202:	sub    esi,edi
10009204:	push   esi
10009205:	push   edi
10009206:	push   DWORD PTR [ebp-0x44]
10009209:	push   eax
1000920a:	call   0x1000744a
1000920f:	jmp    0x10009213
10009211:	xor    eax,eax
10009213:	mov    edi,DWORD PTR [ebp-0x30]
10009216:	add    edi,0x4
10009219:	mov    ebx,eax
1000921b:	mov    BYTE PTR [ebp-0x4],0x2
1000921f:	call   0x1000971b
10009224:	push   0x1006c0d4
10009229:	lea    eax,[ebp-0x2c]
1000922c:	push   eax
1000922d:	call   0x10005e98
10009232:	mov    eax,DWORD PTR [ebp-0x38]
10009235:	mov    edi,DWORD PTR [ebp-0x18]
10009238:	push   0xffffffff
1000923a:	push   0x0
1000923c:	lea    esi,[ebp-0x2c]
1000923f:	call   0x10005fb0
10009244:	mov    esi,DWORD PTR [ebp-0x18]
10009247:	push   0x24
10009249:	mov    DWORD PTR [ebp-0x3c],esi
1000924c:	call   0x1004239e
10009251:	pop    ecx
10009252:	mov    DWORD PTR [ebp-0x40],eax
10009255:	test   eax,eax
10009257:	mov    BYTE PTR [ebp-0x4],0x5
1000925b:	je     0x1000926c
1000925d:	sub    esi,edi
1000925f:	push   esi
10009260:	push   edi
10009261:	push   DWORD PTR [ebp-0x38]
10009264:	push   eax
10009265:	call   0x1000744a
1000926a:	jmp    0x1000926e
1000926c:	xor    eax,eax
1000926e:	mov    esi,DWORD PTR [ebp-0x30]
10009271:	lea    edi,[esi+0x8]
10009274:	mov    ebx,eax
10009276:	mov    BYTE PTR [ebp-0x4],0x2
1000927a:	call   0x1000971b
1000927f:	mov    ebx,0x1006bfe8
10009284:	push   ebx
10009285:	lea    eax,[ebp-0x2c]
10009288:	push   eax
10009289:	call   0x10005e98
1000928e:	push   DWORD PTR [ebp-0x18]
10009291:	lea    edi,[esi+0x20]
10009294:	call   0x1000755b
10009299:	push   ebx
1000929a:	lea    eax,[ebp-0x2c]
1000929d:	push   eax
1000929e:	call   0x10005e98
100092a3:	push   0x24
100092a5:	call   0x1004239e
100092aa:	pop    ecx
100092ab:	mov    DWORD PTR [ebp-0x40],eax
100092ae:	xor    ebx,ebx
100092b0:	cmp    eax,ebx
100092b2:	mov    BYTE PTR [ebp-0x4],0x6
100092b6:	je     0x100092c2
100092b8:	push   eax
100092b9:	call   0x100071d9
100092be:	mov    esi,eax
100092c0:	jmp    0x100092c4
100092c2:	xor    esi,esi
100092c4:	mov    DWORD PTR [ebp-0x38],esi
100092c7:	mov    eax,DWORD PTR [ebp-0x3c]
100092ca:	mov    BYTE PTR [ebp-0x4],0x7
100092ce:	call   0x100073fe
100092d3:	cmp    DWORD PTR [ebp-0x14],0x10
100092d7:	mov    eax,DWORD PTR [ebp-0x28]
100092da:	jae    0x100092df
100092dc:	lea    eax,[ebp-0x28]
100092df:	mov    edi,DWORD PTR [ebp-0x18]
100092e2:	push   eax
100092e3:	mov    eax,esi
100092e5:	call   0x10007221
100092ea:	mov    ecx,DWORD PTR [ebp-0x30]
100092ed:	mov    eax,esi
100092ef:	mov    DWORD PTR [ebp-0x38],ebx
100092f2:	call   0x10008a63
100092f7:	push   ebx
100092f8:	push   0x1
100092fa:	lea    ecx,[ebp-0x2c]
100092fd:	mov    DWORD PTR [ebp-0x34],ebx
10009300:	call   0x100012f9
10009305:	or     DWORD PTR [ebp-0x4],0xffffffff
10009309:	lea    eax,[ebp-0x34]
1000930c:	call   0x10009963
10009311:	mov    eax,DWORD PTR [ebp-0x30]
10009314:	call   0x10058931
10009319:	ret    
1000931a:	push   esi
1000931b:	mov    esi,DWORD PTR [eax]
1000931d:	test   esi,esi
1000931f:	je     0x10009326
10009321:	call   0x10009979
10009326:	pop    esi
10009327:	ret    
10009328:	push   ebp
10009329:	mov    ebp,esp
1000932b:	sub    esp,0x18
1000932e:	push   esi
1000932f:	mov    esi,DWORD PTR [ebp+0x8]
10009332:	mov    eax,DWORD PTR [esi+0x4]
10009335:	push   edi
10009336:	mov    edi,DWORD PTR [eax+0x4]
10009339:	mov    DWORD PTR [ebp-0x4],eax
1000933c:	mov    al,0x1
1000933e:	mov    BYTE PTR [ebp-0x8],al
10009341:	jmp    0x1000935f
10009343:	mov    ecx,DWORD PTR [ebp+0xc]
10009346:	lea    eax,[edi+0xc]
10009349:	mov    DWORD PTR [ebp-0x4],edi
1000934c:	call   0x100071aa
10009351:	test   al,al
10009353:	mov    BYTE PTR [ebp-0x8],al
10009356:	je     0x1000935c
10009358:	mov    edi,DWORD PTR [edi]
1000935a:	jmp    0x1000935f
1000935c:	mov    edi,DWORD PTR [edi+0x8]
1000935f:	cmp    BYTE PTR [edi+0x39],0x0
10009363:	je     0x10009343
10009365:	test   al,al
10009367:	mov    edi,DWORD PTR [ebp-0x4]
1000936a:	mov    DWORD PTR [ebp-0xc],edi
1000936d:	mov    DWORD PTR [ebp-0x10],esi
10009370:	je     0x100093be
10009372:	mov    eax,DWORD PTR [esi+0x4]
10009375:	mov    eax,DWORD PTR [eax]
10009377:	mov    DWORD PTR [ebp-0x18],esi
1000937a:	lea    edi,[ebp-0x18]
1000937d:	lea    esi,[ebp-0x10]
10009380:	mov    DWORD PTR [ebp-0x14],eax
10009383:	call   0x100046f1
10009388:	test   al,al
1000938a:	je     0x100093b0
1000938c:	push   DWORD PTR [ebp+0xc]
1000938f:	mov    esi,DWORD PTR [ebp+0x8]
10009392:	push   0x1
10009394:	mov    ecx,DWORD PTR [ebp-0x4]
10009397:	lea    eax,[ebp-0x18]
1000939a:	push   eax
1000939b:	call   0x10009b33
100093a0:	mov    ecx,DWORD PTR [eax]
100093a2:	mov    eax,DWORD PTR [eax+0x4]
100093a5:	mov    DWORD PTR [ebx],ecx
100093a7:	mov    DWORD PTR [ebx+0x4],eax
100093aa:	mov    BYTE PTR [ebx+0x8],0x1
100093ae:	jmp    0x100093e1
100093b0:	lea    esi,[ebp-0x10]
100093b3:	call   0x1000cd95
100093b8:	mov    edi,DWORD PTR [ebp-0xc]
100093bb:	mov    esi,DWORD PTR [ebp+0x8]
100093be:	mov    eax,DWORD PTR [ebp+0xc]
100093c1:	lea    ecx,[edi+0xc]
100093c4:	call   0x100071aa
100093c9:	test   al,al
100093cb:	je     0x100093d5
100093cd:	push   DWORD PTR [ebp+0xc]
100093d0:	push   DWORD PTR [ebp-0x8]
100093d3:	jmp    0x10009394
100093d5:	mov    eax,DWORD PTR [ebp-0x10]
100093d8:	mov    DWORD PTR [ebx],eax
100093da:	mov    DWORD PTR [ebx+0x4],edi
100093dd:	mov    BYTE PTR [ebx+0x8],0x0
100093e1:	pop    edi
100093e2:	mov    eax,ebx
100093e4:	pop    esi
100093e5:	leave  
100093e6:	ret    0x8
100093e9:	push   0x44
100093eb:	mov    eax,0x1005ef45
100093f0:	call   0x10058845
100093f5:	mov    edi,DWORD PTR [ebp+0x14]
100093f8:	cmp    BYTE PTR [edi+0x39],0x0
100093fc:	je     0x10009430
100093fe:	push   0x1006bafc
10009403:	lea    ecx,[ebp-0x28]
10009406:	call   0x100011d6
1000940b:	and    DWORD PTR [ebp-0x4],0x0
1000940f:	lea    eax,[ebp-0x28]
10009412:	push   eax
10009413:	lea    ecx,[ebp-0x50]
10009416:	call   0x10001065
1000941b:	push   0x10073880
10009420:	lea    eax,[ebp-0x50]
10009423:	push   eax
10009424:	mov    DWORD PTR [ebp-0x50],0x1006a788
1000942b:	call   0x10046704
10009430:	lea    esi,[ebp+0x10]
10009433:	call   0x10009773
10009438:	mov    ecx,DWORD PTR [edi]
1000943a:	cmp    BYTE PTR [ecx+0x39],0x0
1000943e:	je     0x10009445
10009440:	mov    ebx,DWORD PTR [edi+0x8]
10009443:	jmp    0x1000945c
10009445:	mov    eax,DWORD PTR [edi+0x8]
10009448:	cmp    BYTE PTR [eax+0x39],0x0
1000944c:	je     0x10009452
1000944e:	mov    ebx,ecx
10009450:	jmp    0x1000945c
10009452:	mov    eax,DWORD PTR [ebp+0x14]
10009455:	cmp    eax,edi
10009457:	mov    ebx,DWORD PTR [eax+0x8]
1000945a:	jne    0x100094d2
1000945c:	cmp    BYTE PTR [ebx+0x39],0x0
10009460:	mov    esi,DWORD PTR [edi+0x4]
10009463:	jne    0x10009468
10009465:	mov    DWORD PTR [ebx+0x4],esi
10009468:	mov    ecx,DWORD PTR [ebp+0x8]
1000946b:	mov    eax,DWORD PTR [ecx+0x4]
1000946e:	cmp    DWORD PTR [eax+0x4],edi
10009471:	jne    0x10009478
10009473:	mov    DWORD PTR [eax+0x4],ebx
10009476:	jmp    0x10009483
10009478:	cmp    DWORD PTR [esi],edi
1000947a:	jne    0x10009480
1000947c:	mov    DWORD PTR [esi],ebx
1000947e:	jmp    0x10009483
10009480:	mov    DWORD PTR [esi+0x8],ebx
10009483:	mov    edx,DWORD PTR [ecx+0x4]
10009486:	cmp    DWORD PTR [edx],edi
10009488:	jne    0x100094a6
1000948a:	cmp    BYTE PTR [ebx+0x39],0x0
1000948e:	je     0x10009494
10009490:	mov    ecx,esi
10009492:	jmp    0x100094a4
10009494:	mov    eax,DWORD PTR [ebx]
10009496:	mov    ecx,ebx
10009498:	jmp    0x1000949e
1000949a:	mov    ecx,eax
1000949c:	mov    eax,DWORD PTR [ecx]
1000949e:	cmp    BYTE PTR [eax+0x39],0x0
100094a2:	je     0x1000949a
100094a4:	mov    DWORD PTR [edx],ecx
100094a6:	mov    eax,DWORD PTR [ebp+0x8]
100094a9:	mov    edx,DWORD PTR [eax+0x4]
100094ac:	cmp    DWORD PTR [edx+0x8],edi
100094af:	jne    0x1000952c
100094b1:	cmp    BYTE PTR [ebx+0x39],0x0
100094b5:	je     0x100094bb
100094b7:	mov    ecx,esi
100094b9:	jmp    0x100094cd
100094bb:	mov    eax,DWORD PTR [ebx+0x8]
100094be:	mov    ecx,ebx
100094c0:	jmp    0x100094c7
100094c2:	mov    ecx,eax
100094c4:	mov    eax,DWORD PTR [ecx+0x8]
100094c7:	cmp    BYTE PTR [eax+0x39],0x0
100094cb:	je     0x100094c2
100094cd:	mov    DWORD PTR [edx+0x8],ecx
100094d0:	jmp    0x1000952c
100094d2:	mov    DWORD PTR [ecx+0x4],eax
100094d5:	mov    ecx,DWORD PTR [edi]
100094d7:	mov    DWORD PTR [eax],ecx
100094d9:	cmp    eax,DWORD PTR [edi+0x8]
100094dc:	jne    0x100094e2
100094de:	mov    esi,eax
100094e0:	jmp    0x100094fc
100094e2:	cmp    BYTE PTR [ebx+0x39],0x0
100094e6:	mov    esi,DWORD PTR [eax+0x4]
100094e9:	jne    0x100094ee
100094eb:	mov    DWORD PTR [ebx+0x4],esi
100094ee:	mov    DWORD PTR [esi],ebx
100094f0:	mov    ecx,DWORD PTR [edi+0x8]
100094f3:	mov    DWORD PTR [eax+0x8],ecx
100094f6:	mov    ecx,DWORD PTR [edi+0x8]
100094f9:	mov    DWORD PTR [ecx+0x4],eax
100094fc:	mov    ecx,DWORD PTR [ebp+0x8]
100094ff:	mov    ecx,DWORD PTR [ecx+0x4]
10009502:	cmp    DWORD PTR [ecx+0x4],edi
10009505:	jne    0x1000950c
10009507:	mov    DWORD PTR [ecx+0x4],eax
1000950a:	jmp    0x1000951a
1000950c:	mov    ecx,DWORD PTR [edi+0x4]
1000950f:	cmp    DWORD PTR [ecx],edi
10009511:	jne    0x10009517
10009513:	mov    DWORD PTR [ecx],eax
10009515:	jmp    0x1000951a
10009517:	mov    DWORD PTR [ecx+0x8],eax
1000951a:	mov    ecx,DWORD PTR [edi+0x4]
1000951d:	mov    DWORD PTR [eax+0x4],ecx
10009520:	mov    dl,BYTE PTR [edi+0x38]
10009523:	mov    cl,BYTE PTR [eax+0x38]
10009526:	mov    BYTE PTR [eax+0x38],dl
10009529:	mov    BYTE PTR [edi+0x38],cl
1000952c:	cmp    BYTE PTR [edi+0x38],0x1
10009530:	jne    0x10009648
10009536:	jmp    0x100095fc
1000953b:	cmp    BYTE PTR [ebx+0x38],0x1
1000953f:	jne    0x10009644
10009545:	mov    ecx,DWORD PTR [esi]
10009547:	cmp    ebx,ecx
10009549:	jne    0x100095c2
1000954b:	mov    ecx,DWORD PTR [esi+0x8]
1000954e:	cmp    BYTE PTR [ecx+0x38],0x0
10009552:	jne    0x10009569
10009554:	push   DWORD PTR [ebp+0x8]
10009557:	mov    BYTE PTR [ecx+0x38],0x1
1000955b:	mov    ecx,esi
1000955d:	mov    BYTE PTR [esi+0x38],0x0
10009561:	call   0x10009c7e
10009566:	mov    ecx,DWORD PTR [esi+0x8]
10009569:	cmp    BYTE PTR [ecx+0x39],0x0
1000956d:	jne    0x100095f7
10009573:	mov    eax,DWORD PTR [ecx]
10009575:	cmp    BYTE PTR [eax+0x38],0x1
10009579:	jne    0x10009584
1000957b:	mov    eax,DWORD PTR [ecx+0x8]
1000957e:	cmp    BYTE PTR [eax+0x38],0x1
10009582:	je     0x100095f3
10009584:	mov    eax,DWORD PTR [ecx+0x8]
10009587:	cmp    BYTE PTR [eax+0x38],0x1
1000958b:	jne    0x100095a2
1000958d:	mov    eax,DWORD PTR [ecx]
1000958f:	push   DWORD PTR [ebp+0x8]
10009592:	mov    BYTE PTR [eax+0x38],0x1
10009596:	mov    BYTE PTR [ecx+0x38],0x0
1000959a:	call   0x10009cbe
1000959f:	mov    ecx,DWORD PTR [esi+0x8]
100095a2:	mov    al,BYTE PTR [esi+0x38]
100095a5:	push   DWORD PTR [ebp+0x8]
100095a8:	mov    BYTE PTR [ecx+0x38],al
100095ab:	mov    BYTE PTR [esi+0x38],0x1
100095af:	mov    eax,DWORD PTR [ecx+0x8]
100095b2:	mov    ecx,esi
100095b4:	mov    BYTE PTR [eax+0x38],0x1
100095b8:	call   0x10009c7e
100095bd:	jmp    0x10009644
100095c2:	cmp    BYTE PTR [ecx+0x38],0x0
100095c6:	jne    0x100095dc
100095c8:	push   DWORD PTR [ebp+0x8]
100095cb:	mov    BYTE PTR [ecx+0x38],0x1
100095cf:	mov    ecx,esi
100095d1:	mov    BYTE PTR [esi+0x38],0x0
100095d5:	call   0x10009cbe
100095da:	mov    ecx,DWORD PTR [esi]
100095dc:	cmp    BYTE PTR [ecx+0x39],0x0
100095e0:	jne    0x100095f7
100095e2:	mov    eax,DWORD PTR [ecx+0x8]
100095e5:	cmp    BYTE PTR [eax+0x38],0x1
100095e9:	jne    0x1000960d
100095eb:	mov    eax,DWORD PTR [ecx]
100095ed:	cmp    BYTE PTR [eax+0x38],0x1
100095f1:	jne    0x1000960d
100095f3:	mov    BYTE PTR [ecx+0x38],0x0
100095f7:	mov    ebx,esi
100095f9:	mov    esi,DWORD PTR [esi+0x4]
100095fc:	mov    eax,DWORD PTR [ebp+0x8]
100095ff:	mov    eax,DWORD PTR [eax+0x4]
10009602:	cmp    ebx,DWORD PTR [eax+0x4]
10009605:	jne    0x1000953b
1000960b:	jmp    0x10009644
1000960d:	mov    eax,DWORD PTR [ecx]
1000960f:	cmp    BYTE PTR [eax+0x38],0x1
10009613:	jne    0x1000962a
10009615:	mov    eax,DWORD PTR [ecx+0x8]
10009618:	push   DWORD PTR [ebp+0x8]
1000961b:	mov    BYTE PTR [eax+0x38],0x1
1000961f:	mov    BYTE PTR [ecx+0x38],0x0
10009623:	call   0x10009c7e
10009628:	mov    ecx,DWORD PTR [esi]
1000962a:	mov    al,BYTE PTR [esi+0x38]
1000962d:	push   DWORD PTR [ebp+0x8]
10009630:	mov    BYTE PTR [ecx+0x38],al
10009633:	mov    BYTE PTR [esi+0x38],0x1
10009637:	mov    eax,DWORD PTR [ecx]
10009639:	mov    ecx,esi
1000963b:	mov    BYTE PTR [eax+0x38],0x1
1000963f:	call   0x10009cbe
10009644:	mov    BYTE PTR [ebx+0x38],0x1
10009648:	lea    ebx,[edi+0xc]
1000964b:	lea    esi,[ebx+0x1c]
1000964e:	call   0x1000424f
10009653:	push   0x0
10009655:	push   0x1
10009657:	mov    ecx,ebx
10009659:	call   0x100012f9
1000965e:	push   edi
1000965f:	call   0x10041d92
10009664:	pop    ecx
10009665:	mov    ecx,DWORD PTR [ebp+0x8]
10009668:	mov    eax,DWORD PTR [ecx+0x8]
1000966b:	test   eax,eax
1000966d:	jbe    0x10009673
1000966f:	dec    eax
10009670:	mov    DWORD PTR [ecx+0x8],eax
10009673:	mov    ecx,DWORD PTR [ebp+0x10]
10009676:	mov    eax,DWORD PTR [ebp+0xc]
10009679:	mov    DWORD PTR [eax],ecx
1000967b:	mov    ecx,DWORD PTR [ebp+0x14]
1000967e:	mov    DWORD PTR [eax+0x4],ecx
10009681:	call   0x1005891d
10009686:	ret    0x10
10009689:	push   ebp
1000968a:	mov    ebp,esp
1000968c:	sub    esp,0x10
1000968f:	push   esi
10009690:	push   edi
10009691:	push   DWORD PTR [ebp+0xc]
10009694:	mov    eax,ebx
10009696:	call   0x10009ff7
1000969b:	test   ebx,ebx
1000969d:	mov    DWORD PTR [ebp-0x4],eax
100096a0:	jne    0x100096a7
100096a2:	call   0x100422b0
100096a7:	mov    eax,DWORD PTR [ebx+0x4]
100096aa:	lea    edi,[ebp-0x10]
100096ad:	lea    esi,[ebp-0x8]
100096b0:	mov    DWORD PTR [ebp-0x8],ebx
100096b3:	mov    DWORD PTR [ebp-0xc],eax
100096b6:	mov    DWORD PTR [ebp-0x10],ebx
100096b9:	call   0x100046f1
100096be:	test   al,al
100096c0:	jne    0x100096d8
100096c2:	mov    eax,DWORD PTR [ebp-0x4]
100096c5:	mov    ecx,DWORD PTR [ebp+0xc]
100096c8:	add    eax,0xc
100096cb:	call   0x100071aa
100096d0:	test   al,al
100096d2:	jne    0x100096d8
100096d4:	mov    ecx,esi
100096d6:	jmp    0x100096e4
100096d8:	mov    eax,DWORD PTR [ebx+0x4]
100096db:	mov    DWORD PTR [ebp-0xc],eax
100096de:	mov    DWORD PTR [ebp-0x10],ebx
100096e1:	lea    ecx,[ebp-0x10]
100096e4:	mov    edx,DWORD PTR [ecx]
100096e6:	mov    eax,DWORD PTR [ebp+0x8]
100096e9:	mov    ecx,DWORD PTR [ecx+0x4]
100096ec:	pop    edi
100096ed:	mov    DWORD PTR [eax],edx
100096ef:	mov    DWORD PTR [eax+0x4],ecx
100096f2:	pop    esi
100096f3:	leave  
100096f4:	ret    0x8
100096f7:	push   esi
100096f8:	mov    esi,DWORD PTR [eax]
100096fa:	test   esi,esi
100096fc:	je     0x10009719
100096fe:	push   0x0
10009700:	push   0x1
10009702:	lea    ecx,[esi+0x4]
10009705:	call   0x100012f9
1000970a:	push   DWORD PTR [esi]
1000970c:	call   0x10041d92
10009711:	push   esi
10009712:	call   0x10041d92
10009717:	pop    ecx
10009718:	pop    ecx
10009719:	pop    esi
1000971a:	ret    
1000971b:	push   esi
1000971c:	mov    esi,DWORD PTR [edi]
1000971e:	cmp    ebx,esi
10009720:	je     0x10009741
10009722:	test   esi,esi
10009724:	je     0x10009741
10009726:	push   0x0
10009728:	push   0x1
1000972a:	lea    ecx,[esi+0x4]
1000972d:	call   0x100012f9
10009732:	push   DWORD PTR [esi]
10009734:	call   0x10041d92
10009739:	push   esi
1000973a:	call   0x10041d92
1000973f:	pop    ecx
10009740:	pop    ecx
10009741:	mov    DWORD PTR [edi],ebx
10009743:	pop    esi
10009744:	ret    
10009745:	push   edi
10009746:	mov    edi,DWORD PTR [eax]
10009748:	test   edi,edi
1000974a:	je     0x10009751
1000974c:	call   0x100099a6
10009751:	pop    edi
10009752:	ret    
10009753:	cmp    DWORD PTR [esi],0x0
10009756:	jne    0x1000975d
10009758:	call   0x100422b0
1000975d:	mov    eax,DWORD PTR [esi]
1000975f:	mov    ecx,DWORD PTR [esi+0x4]
10009762:	cmp    ecx,DWORD PTR [eax+0x4]
10009765:	jne    0x1000976c
10009767:	call   0x100422b0
1000976c:	mov    eax,DWORD PTR [esi+0x4]
1000976f:	add    eax,0xc
10009772:	ret    
10009773:	push   ebx
10009774:	xor    ebx,ebx
10009776:	cmp    DWORD PTR [esi],ebx
10009778:	jne    0x1000977f
1000977a:	call   0x100422b0
1000977f:	mov    eax,DWORD PTR [esi+0x4]
10009782:	cmp    BYTE PTR [eax+0x39],bl
10009785:	je     0x1000978e
10009787:	call   0x100422b0
1000978c:	jmp    0x100097bc
1000978e:	mov    ecx,DWORD PTR [eax+0x8]
10009791:	cmp    BYTE PTR [ecx+0x39],bl
10009794:	jne    0x100097b1
10009796:	jmp    0x1000979a
10009798:	mov    ecx,eax
1000979a:	mov    eax,DWORD PTR [ecx]
1000979c:	cmp    BYTE PTR [eax+0x39],bl
1000979f:	je     0x10009798
100097a1:	mov    DWORD PTR [esi+0x4],ecx
100097a4:	jmp    0x100097bc
100097a6:	mov    ecx,DWORD PTR [esi+0x4]
100097a9:	cmp    ecx,DWORD PTR [eax+0x8]
100097ac:	jne    0x100097b9
100097ae:	mov    DWORD PTR [esi+0x4],eax
100097b1:	mov    eax,DWORD PTR [eax+0x4]
100097b4:	cmp    BYTE PTR [eax+0x39],bl
100097b7:	je     0x100097a6
100097b9:	mov    DWORD PTR [esi+0x4],eax
100097bc:	mov    eax,esi
100097be:	pop    ebx
100097bf:	ret    
100097c0:	push   0x10
100097c2:	mov    eax,0x1005fff0
100097c7:	call   0x10058878
100097cc:	mov    ebx,ecx
100097ce:	mov    esi,DWORD PTR [ebp+0x8]
100097d1:	mov    eax,ebx
100097d3:	call   0x10004194
100097d8:	xor    ecx,ecx
100097da:	cmp    eax,ecx
100097dc:	mov    DWORD PTR [esi+0x4],ecx
100097df:	mov    DWORD PTR [esi+0x8],ecx
100097e2:	mov    DWORD PTR [esi+0xc],ecx
100097e5:	je     0x10009837
100097e7:	mov    edi,esi
100097e9:	call   0x10004226
100097ee:	test   al,al
100097f0:	je     0x10009837
100097f2:	and    DWORD PTR [ebp-0x4],0x0
100097f6:	mov    eax,DWORD PTR [ebx+0x8]
100097f9:	cmp    DWORD PTR [ebx+0x4],eax
100097fc:	mov    DWORD PTR [ebp-0x18],eax
100097ff:	jbe    0x10009806
10009801:	call   0x100422b0
10009806:	mov    eax,DWORD PTR [ebx+0x4]
10009809:	cmp    eax,DWORD PTR [ebx+0x8]
1000980c:	mov    DWORD PTR [ebp-0x1c],eax
1000980f:	jbe    0x10009816
10009811:	call   0x100422b0
10009816:	mov    ecx,DWORD PTR [esi+0x4]
10009819:	xor    eax,eax
1000981b:	lea    edi,[ebp-0x14]
1000981e:	stos   BYTE PTR es:[edi],al
1000981f:	push   DWORD PTR [ebp-0x14]
10009822:	push   DWORD PTR [ebp+0x8]
10009825:	push   ecx
10009826:	push   DWORD PTR [ebp-0x18]
10009829:	mov    ecx,DWORD PTR [ebp-0x1c]
1000982c:	call   0x100060d1
10009831:	add    esp,0x10
10009834:	mov    DWORD PTR [esi+0x8],eax
10009837:	mov    eax,esi
10009839:	call   0x1005891d
1000983e:	ret    0x4
10009841:	mov    esi,DWORD PTR [ebp+0x8]
10009844:	call   0x1000424f
10009849:	push   0x0
1000984b:	push   0x0
1000984d:	call   0x10046704
10009852:	int3   
10009853:	mov    eax,esi
10009855:	call   0x10004194
1000985a:	cmp    DWORD PTR [esp+0x4],eax
1000985e:	jb     0x10009865
10009860:	call   0x100422b0
10009865:	mov    eax,DWORD PTR [esp+0x4]
10009869:	shl    eax,0x5
1000986c:	add    eax,DWORD PTR [esi+0x4]
1000986f:	ret    0x4
10009872:	push   ebp
10009873:	mov    ebp,esp
10009875:	sub    esp,0x10
10009878:	push   ebx
10009879:	push   esi
1000987a:	mov    esi,eax
1000987c:	mov    ebx,DWORD PTR [esi+0x4]
1000987f:	test   ebx,ebx
10009881:	push   edi
10009882:	jne    0x10009888
10009884:	xor    edi,edi
10009886:	jmp    0x10009890
10009888:	mov    edi,DWORD PTR [esi+0xc]
1000988b:	sub    edi,ebx
1000988d:	sar    edi,0x5
10009890:	call   0x10004194
10009895:	cmp    eax,edi
10009897:	jae    0x100098ab
10009899:	push   DWORD PTR [ebp+0x8]
1000989c:	push   0x1
1000989e:	push   DWORD PTR [esi+0x8]
100098a1:	call   0x10004274
100098a6:	mov    DWORD PTR [esi+0x8],eax
100098a9:	jmp    0x100098c5
100098ab:	mov    edi,DWORD PTR [esi+0x8]
100098ae:	cmp    ebx,edi
100098b0:	jbe    0x100098b7
100098b2:	call   0x100422b0
100098b7:	push   edi
100098b8:	push   esi
100098b9:	push   DWORD PTR [ebp+0x8]
100098bc:	lea    eax,[ebp-0xc]
100098bf:	push   eax
100098c0:	call   0x10009d35
100098c5:	pop    edi
100098c6:	pop    esi
100098c7:	pop    ebx
100098c8:	leave  
100098c9:	ret    0x4
100098cc:	push   ebp
100098cd:	mov    ebp,esp
100098cf:	push   ecx
100098d0:	mov    eax,DWORD PTR [esi+0x8]
100098d3:	push   edi
100098d4:	mov    edi,DWORD PTR [ebp+0xc]
100098d7:	add    edi,0x20
100098da:	cmp    edi,eax
100098dc:	mov    DWORD PTR [ebp-0x4],eax
100098df:	je     0x100098fc
100098e1:	push   0xffffffff
100098e3:	push   0x0
100098e5:	push   edi
100098e6:	lea    ecx,[edi-0x20]
100098e9:	call   0x1000124a
100098ee:	mov    eax,DWORD PTR [edi+0x1c]
100098f1:	mov    DWORD PTR [edi-0x4],eax
100098f4:	add    edi,0x20
100098f7:	cmp    edi,DWORD PTR [ebp-0x4]
100098fa:	jne    0x100098e1
100098fc:	mov    eax,DWORD PTR [esi+0x8]
100098ff:	push   eax
10009900:	add    eax,0xffffffe0
10009903:	call   0x100047b6
10009908:	mov    eax,DWORD PTR [ebp+0x8]
1000990b:	add    DWORD PTR [esi+0x8],0xffffffe0
1000990f:	mov    DWORD PTR [ebx],eax
10009911:	mov    eax,DWORD PTR [ebp+0xc]
10009914:	mov    DWORD PTR [ebx+0x4],eax
10009917:	mov    eax,ebx
10009919:	pop    edi
1000991a:	leave  
1000991b:	ret    0x8
1000991e:	push   ebx
1000991f:	mov    ebx,DWORD PTR [eax+0x4]
10009922:	push   esi
10009923:	mov    esi,DWORD PTR [eax]
10009925:	test   esi,esi
10009927:	push   edi
10009928:	mov    edi,ecx
1000992a:	jne    0x10009931
1000992c:	call   0x100422b0
10009931:	shl    edi,0x5
10009934:	add    edi,ebx
10009936:	cmp    edi,DWORD PTR [esi+0x8]
10009939:	ja     0x10009940
1000993b:	cmp    edi,DWORD PTR [esi+0x4]
1000993e:	jae    0x10009945
10009940:	call   0x100422b0
10009945:	mov    eax,DWORD PTR [esp+0x10]
10009949:	mov    DWORD PTR [eax+0x4],edi
1000994c:	pop    edi
1000994d:	mov    DWORD PTR [eax],esi
1000994f:	pop    esi
10009950:	pop    ebx
10009951:	ret    0x4
10009954:	push   ecx
10009955:	mov    eax,DWORD PTR [eax]
10009957:	test   eax,eax
10009959:	je     0x10009961
1000995b:	push   eax
1000995c:	call   0x100099e0
10009961:	pop    ecx
10009962:	ret    
10009963:	push   esi
10009964:	mov    esi,DWORD PTR [eax]
10009966:	test   esi,esi
10009968:	je     0x10009977
1000996a:	push   esi
1000996b:	call   0x10009a43
10009970:	push   esi
10009971:	call   0x10041d92
10009976:	pop    ecx
10009977:	pop    esi
10009978:	ret    
10009979:	push   0x0
1000997b:	push   0x1
1000997d:	lea    ecx,[esi+0x38]
10009980:	call   0x100012f9
10009985:	push   0x0
10009987:	push   0x1
10009989:	lea    ecx,[esi+0x1c]
1000998c:	call   0x100012f9
10009991:	push   0x0
10009993:	push   0x1
10009995:	mov    ecx,esi
10009997:	call   0x100012f9
1000999c:	push   esi
1000999d:	call   0x10041d92
100099a2:	pop    ecx
100099a3:	mov    eax,esi
100099a5:	ret    
100099a6:	push   DWORD PTR [edi+0x14]
100099a9:	call   0x10041d92
100099ae:	mov    eax,DWORD PTR [edi+0x8]
100099b1:	test   eax,eax
100099b3:	pop    ecx
100099b4:	je     0x100099bd
100099b6:	push   eax
100099b7:	call   0x10041d92
100099bc:	pop    ecx
100099bd:	and    DWORD PTR [edi+0x8],0x0
100099c1:	and    DWORD PTR [edi+0xc],0x0
100099c5:	and    DWORD PTR [edi+0x10],0x0
100099c9:	push   esi
100099ca:	mov    esi,DWORD PTR [edi]
100099cc:	test   esi,esi
100099ce:	je     0x100099d5
100099d0:	call   0x10009979
100099d5:	push   edi
100099d6:	call   0x10041d92
100099db:	pop    ecx
100099dc:	mov    eax,edi
100099de:	pop    esi
100099df:	ret    
100099e0:	push   0x0
100099e2:	mov    eax,0x10062301
100099e7:	call   0x10058845
100099ec:	mov    esi,DWORD PTR [ebp+0x8]
100099ef:	mov    DWORD PTR [ebp-0x4],0x4
100099f6:	mov    eax,DWORD PTR [esi+0x38]
100099f9:	test   eax,eax
100099fb:	je     0x10009a03
100099fd:	mov    ecx,DWORD PTR [eax]
100099ff:	push   eax
10009a00:	call   DWORD PTR [ecx+0x8]
10009a03:	mov    edi,DWORD PTR [esi+0x30]
10009a06:	test   edi,edi
10009a08:	je     0x10009a0f
10009a0a:	call   0x100099a6
10009a0f:	lea    ebx,[esi+0x18]
10009a12:	mov    BYTE PTR [ebp-0x4],0x2
10009a16:	call   0x1000758a
10009a1b:	lea    eax,[esi+0x8]
10009a1e:	call   0x100096f7
10009a23:	lea    eax,[esi+0x4]
10009a26:	call   0x100096f7
10009a2b:	mov    eax,esi
10009a2d:	call   0x100096f7
10009a32:	push   esi
10009a33:	call   0x10041d92
10009a38:	pop    ecx
10009a39:	mov    eax,esi
10009a3b:	call   0x1005891d
10009a40:	ret    0x4
10009a43:	push   0x0
10009a45:	mov    eax,0x10062345
10009a4a:	call   0x10058845
10009a4f:	mov    esi,DWORD PTR [ebp+0x8]
10009a52:	mov    DWORD PTR [ebp-0x4],0x3
10009a59:	mov    edi,DWORD PTR [esi+0x34]
10009a5c:	test   edi,edi
10009a5e:	je     0x10009a65
10009a60:	call   0x100099a6
10009a65:	lea    ebx,[esi+0x20]
10009a68:	call   0x1000758a
10009a6d:	lea    eax,[esi+0xc]
10009a70:	call   0x100096f7
10009a75:	lea    eax,[esi+0x8]
10009a78:	call   0x100096f7
10009a7d:	lea    eax,[esi+0x4]
10009a80:	call   0x100096f7
10009a85:	mov    eax,esi
10009a87:	call   0x100096f7
10009a8c:	call   0x1005891d
10009a91:	ret    0x4
10009a94:	push   ebp
10009a95:	mov    ebp,esp
10009a97:	push   ecx
10009a98:	push   ebx
10009a99:	push   esi
10009a9a:	mov    esi,eax
10009a9c:	push   edi
10009a9d:	mov    edi,DWORD PTR [esi+0x4]
10009aa0:	xor    ebx,ebx
10009aa2:	cmp    edi,ebx
10009aa4:	je     0x10009ad2
10009aa6:	mov    eax,DWORD PTR [esi+0x8]
10009aa9:	mov    ecx,eax
10009aab:	sub    ecx,edi
10009aad:	sar    ecx,0x2
10009ab0:	je     0x10009ad2
10009ab2:	cmp    edi,eax
10009ab4:	jbe    0x10009abb
10009ab6:	call   0x100422b0
10009abb:	cmp    DWORD PTR [ebp+0x10],ebx
10009abe:	je     0x10009ac5
10009ac0:	cmp    DWORD PTR [ebp+0x10],esi
10009ac3:	je     0x10009aca
10009ac5:	call   0x100422b0
10009aca:	mov    ebx,DWORD PTR [ebp+0x14]
10009acd:	sub    ebx,edi
10009acf:	sar    ebx,0x2
10009ad2:	push   DWORD PTR [ebp+0x14]
10009ad5:	mov    eax,DWORD PTR [ebp+0xc]
10009ad8:	push   DWORD PTR [ebp+0x10]
10009adb:	mov    ecx,esi
10009add:	call   0x10009da7
10009ae2:	mov    edi,DWORD PTR [esi+0x4]
10009ae5:	cmp    edi,DWORD PTR [esi+0x8]
10009ae8:	jbe    0x10009aef
10009aea:	call   0x100422b0
10009aef:	mov    DWORD PTR [ebp+0x14],edi
10009af2:	lea    edi,[edi+ebx*4]
10009af5:	cmp    edi,DWORD PTR [esi+0x8]
10009af8:	ja     0x10009aff
10009afa:	cmp    edi,DWORD PTR [esi+0x4]
10009afd:	jae    0x10009b04
10009aff:	call   0x100422b0
10009b04:	mov    eax,DWORD PTR [ebp+0x8]
10009b07:	mov    DWORD PTR [eax+0x4],edi
10009b0a:	pop    edi
10009b0b:	mov    DWORD PTR [eax],esi
10009b0d:	pop    esi
10009b0e:	pop    ebx
10009b0f:	leave  
10009b10:	ret    0x10
10009b13:	test   edx,edx
10009b15:	mov    ecx,edx
10009b17:	mov    eax,esi
10009b19:	jbe    0x10009b2d
10009b1b:	push   edi
10009b1c:	mov    edi,DWORD PTR [esp+0x8]
10009b20:	mov    edi,DWORD PTR [edi]
10009b22:	mov    DWORD PTR [eax],edi
10009b24:	dec    ecx
10009b25:	add    eax,0x4
10009b28:	test   ecx,ecx
10009b2a:	ja     0x10009b1c
10009b2c:	pop    edi
10009b2d:	lea    eax,[esi+edx*4]
10009b30:	ret    0x4
10009b33:	push   0x48
10009b35:	mov    eax,0x1005f147
10009b3a:	call   0x10058845
10009b3f:	mov    edi,ecx
10009b41:	cmp    DWORD PTR [esi+0x8],0x5d1745c
10009b48:	jb     0x10009b7c
10009b4a:	push   0x1006bcb4
10009b4f:	lea    ecx,[ebp-0x2c]
10009b52:	call   0x100011d6
10009b57:	and    DWORD PTR [ebp-0x4],0x0
10009b5b:	lea    eax,[ebp-0x2c]
10009b5e:	push   eax
10009b5f:	lea    ecx,[ebp-0x54]
10009b62:	call   0x10001065
10009b67:	push   0x10073960
10009b6c:	lea    eax,[ebp-0x54]
10009b6f:	push   eax
10009b70:	mov    DWORD PTR [ebp-0x54],0x1006a77c
10009b77:	call   0x10046704
10009b7c:	push   DWORD PTR [ebp+0x10]
10009b7f:	mov    eax,DWORD PTR [esi+0x4]
10009b82:	push   eax
10009b83:	push   edi
10009b84:	push   eax
10009b85:	call   0x1000a029
10009b8a:	inc    DWORD PTR [esi+0x8]
10009b8d:	mov    ebx,eax
10009b8f:	mov    eax,DWORD PTR [esi+0x4]
10009b92:	cmp    edi,eax
10009b94:	jne    0x10009ba3
10009b96:	mov    DWORD PTR [eax+0x4],ebx
10009b99:	mov    eax,DWORD PTR [esi+0x4]
10009b9c:	mov    DWORD PTR [eax],ebx
10009b9e:	mov    eax,DWORD PTR [esi+0x4]
10009ba1:	jmp    0x10009bc1
10009ba3:	cmp    BYTE PTR [ebp+0xc],0x0
10009ba7:	je     0x10009bb6
10009ba9:	mov    DWORD PTR [edi],ebx
10009bab:	mov    eax,DWORD PTR [esi+0x4]
10009bae:	cmp    edi,DWORD PTR [eax]
10009bb0:	jne    0x10009bc4
10009bb2:	mov    DWORD PTR [eax],ebx
10009bb4:	jmp    0x10009bc4
10009bb6:	mov    DWORD PTR [edi+0x8],ebx
10009bb9:	mov    eax,DWORD PTR [esi+0x4]
10009bbc:	cmp    edi,DWORD PTR [eax+0x8]
10009bbf:	jne    0x10009bc4
10009bc1:	mov    DWORD PTR [eax+0x8],ebx
10009bc4:	mov    edi,ebx
10009bc6:	lea    eax,[ebx+0x4]
10009bc9:	jmp    0x10009c58
10009bce:	mov    ecx,DWORD PTR [eax]
10009bd0:	mov    edx,DWORD PTR [ecx+0x4]
10009bd3:	cmp    ecx,DWORD PTR [edx]
10009bd5:	jne    0x10009c0c
10009bd7:	mov    edx,DWORD PTR [edx+0x8]
10009bda:	cmp    BYTE PTR [edx+0x38],0x0
10009bde:	je     0x10009c14
10009be0:	cmp    edi,DWORD PTR [ecx+0x8]
10009be3:	jne    0x10009bed
10009be5:	push   esi
10009be6:	mov    edi,ecx
10009be8:	call   0x10009c7e
10009bed:	mov    eax,DWORD PTR [edi+0x4]
10009bf0:	mov    BYTE PTR [eax+0x38],0x1
10009bf4:	mov    eax,DWORD PTR [edi+0x4]
10009bf7:	mov    eax,DWORD PTR [eax+0x4]
10009bfa:	mov    BYTE PTR [eax+0x38],0x0
10009bfe:	mov    eax,DWORD PTR [edi+0x4]
10009c01:	mov    ecx,DWORD PTR [eax+0x4]
10009c04:	push   esi
10009c05:	call   0x10009cbe
10009c0a:	jmp    0x10009c55
10009c0c:	mov    edx,DWORD PTR [edx]
10009c0e:	cmp    BYTE PTR [edx+0x38],0x0
10009c12:	jne    0x10009c2c
10009c14:	mov    BYTE PTR [ecx+0x38],0x1
10009c18:	mov    BYTE PTR [edx+0x38],0x1
10009c1c:	mov    ecx,DWORD PTR [eax]
10009c1e:	mov    ecx,DWORD PTR [ecx+0x4]
10009c21:	mov    BYTE PTR [ecx+0x38],0x0
10009c25:	mov    eax,DWORD PTR [eax]
10009c27:	mov    edi,DWORD PTR [eax+0x4]
10009c2a:	jmp    0x10009c55
10009c2c:	cmp    edi,DWORD PTR [ecx]
10009c2e:	jne    0x10009c38
10009c30:	push   esi
10009c31:	mov    edi,ecx
10009c33:	call   0x10009cbe
10009c38:	mov    eax,DWORD PTR [edi+0x4]
10009c3b:	mov    BYTE PTR [eax+0x38],0x1
10009c3f:	mov    eax,DWORD PTR [edi+0x4]
10009c42:	mov    eax,DWORD PTR [eax+0x4]
10009c45:	mov    BYTE PTR [eax+0x38],0x0
10009c49:	mov    eax,DWORD PTR [edi+0x4]
10009c4c:	mov    ecx,DWORD PTR [eax+0x4]
10009c4f:	push   esi
10009c50:	call   0x10009c7e
10009c55:	lea    eax,[edi+0x4]
10009c58:	mov    ecx,DWORD PTR [eax]
10009c5a:	cmp    BYTE PTR [ecx+0x38],0x0
10009c5e:	je     0x10009bce
10009c64:	mov    eax,DWORD PTR [esi+0x4]
10009c67:	mov    eax,DWORD PTR [eax+0x4]
10009c6a:	mov    BYTE PTR [eax+0x38],0x1
10009c6e:	mov    eax,DWORD PTR [ebp+0x8]
10009c71:	mov    DWORD PTR [eax+0x4],ebx
10009c74:	mov    DWORD PTR [eax],esi
10009c76:	call   0x1005891d
10009c7b:	ret    0xc
10009c7e:	mov    eax,DWORD PTR [ecx+0x8]
10009c81:	mov    edx,DWORD PTR [eax]
10009c83:	mov    DWORD PTR [ecx+0x8],edx
10009c86:	mov    edx,DWORD PTR [eax]
10009c88:	cmp    BYTE PTR [edx+0x39],0x0
10009c8c:	jne    0x10009c91
10009c8e:	mov    DWORD PTR [edx+0x4],ecx
10009c91:	mov    edx,DWORD PTR [ecx+0x4]
10009c94:	mov    DWORD PTR [eax+0x4],edx
10009c97:	mov    edx,DWORD PTR [esp+0x4]
10009c9b:	mov    edx,DWORD PTR [edx+0x4]
10009c9e:	cmp    ecx,DWORD PTR [edx+0x4]
10009ca1:	jne    0x10009ca8
10009ca3:	mov    DWORD PTR [edx+0x4],eax
10009ca6:	jmp    0x10009cb6
10009ca8:	mov    edx,DWORD PTR [ecx+0x4]
10009cab:	cmp    ecx,DWORD PTR [edx]
10009cad:	jne    0x10009cb3
10009caf:	mov    DWORD PTR [edx],eax
10009cb1:	jmp    0x10009cb6
10009cb3:	mov    DWORD PTR [edx+0x8],eax
10009cb6:	mov    DWORD PTR [eax],ecx
10009cb8:	mov    DWORD PTR [ecx+0x4],eax
10009cbb:	ret    0x4
10009cbe:	mov    eax,DWORD PTR [ecx]
10009cc0:	mov    edx,DWORD PTR [eax+0x8]
10009cc3:	mov    DWORD PTR [ecx],edx
10009cc5:	mov    edx,DWORD PTR [eax+0x8]
10009cc8:	cmp    BYTE PTR [edx+0x39],0x0
10009ccc:	jne    0x10009cd1
10009cce:	mov    DWORD PTR [edx+0x4],ecx
10009cd1:	mov    edx,DWORD PTR [ecx+0x4]
10009cd4:	mov    DWORD PTR [eax+0x4],edx
10009cd7:	mov    edx,DWORD PTR [esp+0x4]
10009cdb:	mov    edx,DWORD PTR [edx+0x4]
10009cde:	cmp    ecx,DWORD PTR [edx+0x4]
10009ce1:	jne    0x10009ce8
10009ce3:	mov    DWORD PTR [edx+0x4],eax
10009ce6:	jmp    0x10009cf7
10009ce8:	mov    edx,DWORD PTR [ecx+0x4]
10009ceb:	cmp    ecx,DWORD PTR [edx+0x8]
10009cee:	jne    0x10009cf5
10009cf0:	mov    DWORD PTR [edx+0x8],eax
10009cf3:	jmp    0x10009cf7
10009cf5:	mov    DWORD PTR [edx],eax
10009cf7:	mov    DWORD PTR [eax+0x8],ecx
10009cfa:	mov    DWORD PTR [ecx+0x4],eax
10009cfd:	ret    0x4
10009d00:	push   ebp
10009d01:	mov    ebp,esp
10009d03:	and    esp,0xfffffff8
10009d06:	sub    esp,0xc
10009d09:	push   ebx
10009d0a:	mov    ebx,eax
10009d0c:	mov    eax,DWORD PTR [ebx+0x4]
10009d0f:	mov    ecx,DWORD PTR [eax]
10009d11:	push   eax
10009d12:	push   ebx
10009d13:	push   ecx
10009d14:	push   ebx
10009d15:	lea    eax,[esp+0x18]
10009d19:	push   eax
10009d1a:	call   0x10009f4d
10009d1f:	push   DWORD PTR [ebx+0x4]
10009d22:	call   0x10041d92
10009d27:	and    DWORD PTR [ebx+0x4],0x0
10009d2b:	and    DWORD PTR [ebx+0x8],0x0
10009d2f:	pop    ecx
10009d30:	pop    ebx
10009d31:	mov    esp,ebp
10009d33:	pop    ebp
10009d34:	ret    
10009d35:	push   ebp
10009d36:	mov    ebp,esp
10009d38:	push   ebx
10009d39:	push   edi
10009d3a:	mov    eax,esi
10009d3c:	call   0x10004194
10009d41:	test   eax,eax
10009d43:	jne    0x10009d49
10009d45:	xor    ebx,ebx
10009d47:	jmp    0x10009d6e
10009d49:	mov    edi,DWORD PTR [esi+0x4]
10009d4c:	cmp    edi,DWORD PTR [esi+0x8]
10009d4f:	jbe    0x10009d56
10009d51:	call   0x100422b0
10009d56:	cmp    DWORD PTR [ebp+0x10],0x0
10009d5a:	je     0x10009d61
10009d5c:	cmp    DWORD PTR [ebp+0x10],esi
10009d5f:	je     0x10009d66
10009d61:	call   0x100422b0
10009d66:	mov    ebx,DWORD PTR [ebp+0x14]
10009d69:	sub    ebx,edi
10009d6b:	sar    ebx,0x5
10009d6e:	push   DWORD PTR [ebp+0x14]
10009d71:	mov    edx,DWORD PTR [ebp+0xc]
10009d74:	push   DWORD PTR [ebp+0x10]
10009d77:	mov    ecx,esi
10009d79:	call   0x1000a07b
10009d7e:	mov    edi,DWORD PTR [esi+0x4]
10009d81:	cmp    edi,DWORD PTR [esi+0x8]
10009d84:	jbe    0x10009d8b
10009d86:	call   0x100422b0
10009d8b:	push   DWORD PTR [ebp+0x8]
10009d8e:	mov    ecx,ebx
10009d90:	lea    eax,[ebp+0x10]
10009d93:	mov    DWORD PTR [ebp+0x10],esi
10009d96:	mov    DWORD PTR [ebp+0x14],edi
10009d99:	call   0x1000991e
10009d9e:	mov    eax,DWORD PTR [ebp+0x8]
10009da1:	pop    edi
10009da2:	pop    ebx
10009da3:	pop    ebp
10009da4:	ret    0x10
10009da7:	push   ebp
10009da8:	mov    ebp,esp
10009daa:	sub    esp,0xc
10009dad:	mov    eax,DWORD PTR [eax]
10009daf:	push   ebx
10009db0:	push   esi
10009db1:	push   edi
10009db2:	mov    edi,ecx
10009db4:	mov    ecx,DWORD PTR [edi+0x4]
10009db7:	test   ecx,ecx
10009db9:	mov    DWORD PTR [ebp-0x8],eax
10009dbc:	jne    0x10009dc3
10009dbe:	and    DWORD PTR [ebp-0x4],ecx
10009dc1:	jmp    0x10009dce
10009dc3:	mov    eax,DWORD PTR [edi+0xc]
10009dc6:	sub    eax,ecx
10009dc8:	sar    eax,0x2
10009dcb:	mov    DWORD PTR [ebp-0x4],eax
10009dce:	test   ecx,ecx
10009dd0:	jne    0x10009dd6
10009dd2:	xor    eax,eax
10009dd4:	jmp    0x10009dde
10009dd6:	mov    eax,DWORD PTR [edi+0x8]
10009dd9:	sub    eax,ecx
10009ddb:	sar    eax,0x2
10009dde:	mov    edx,0x3fffffff
10009de3:	mov    esi,edx
10009de5:	sub    esi,eax
10009de7:	cmp    esi,0x1
10009dea:	jae    0x10009df1
10009dec:	call   0x1000d195
10009df1:	test   ecx,ecx
10009df3:	jne    0x10009df9
10009df5:	xor    eax,eax
10009df7:	jmp    0x10009e01
10009df9:	mov    eax,DWORD PTR [edi+0x8]
10009dfc:	sub    eax,ecx
10009dfe:	sar    eax,0x2
10009e01:	inc    eax
10009e02:	cmp    DWORD PTR [ebp-0x4],eax
10009e05:	jae    0x10009eb2
10009e0b:	mov    eax,DWORD PTR [ebp-0x4]
10009e0e:	shr    eax,1
10009e10:	sub    edx,eax
10009e12:	cmp    edx,DWORD PTR [ebp-0x4]
10009e15:	jae    0x10009e1d
10009e17:	and    DWORD PTR [ebp-0x4],0x0
10009e1b:	jmp    0x10009e20
10009e1d:	add    DWORD PTR [ebp-0x4],eax
10009e20:	test   ecx,ecx
10009e22:	jne    0x10009e28
10009e24:	xor    eax,eax
10009e26:	jmp    0x10009e30
10009e28:	mov    eax,DWORD PTR [edi+0x8]
10009e2b:	sub    eax,ecx
10009e2d:	sar    eax,0x2
10009e30:	inc    eax
10009e31:	cmp    DWORD PTR [ebp-0x4],eax
10009e34:	jae    0x10009e4a
10009e36:	test   ecx,ecx
10009e38:	jne    0x10009e3e
10009e3a:	xor    eax,eax
10009e3c:	jmp    0x10009e46
10009e3e:	mov    eax,DWORD PTR [edi+0x8]
10009e41:	sub    eax,ecx
10009e43:	sar    eax,0x2
10009e46:	inc    eax
10009e47:	mov    DWORD PTR [ebp-0x4],eax
10009e4a:	mov    ecx,DWORD PTR [ebp-0x4]
10009e4d:	call   0x10025c67
10009e52:	push   DWORD PTR [edi+0x4]
10009e55:	mov    ebx,eax
10009e57:	mov    eax,DWORD PTR [ebp+0xc]
10009e5a:	mov    ecx,ebx
10009e5c:	call   0x1000a41c
10009e61:	lea    ecx,[ebp-0x8]
10009e64:	xor    edx,edx
10009e66:	push   ecx
10009e67:	inc    edx
10009e68:	mov    esi,eax
10009e6a:	call   0x10009b13
10009e6f:	push   DWORD PTR [ebp+0xc]
10009e72:	mov    ecx,eax
10009e74:	mov    eax,DWORD PTR [edi+0x8]
10009e77:	call   0x1000a41c
10009e7c:	mov    eax,DWORD PTR [edi+0x4]
10009e7f:	test   eax,eax
10009e81:	jne    0x10009e87
10009e83:	xor    esi,esi
10009e85:	jmp    0x10009e8f
10009e87:	mov    esi,DWORD PTR [edi+0x8]
10009e8a:	sub    esi,eax
10009e8c:	sar    esi,0x2
10009e8f:	test   eax,eax
10009e91:	je     0x10009e9a
10009e93:	push   eax
10009e94:	call   0x10041d92
10009e99:	pop    ecx
10009e9a:	mov    eax,DWORD PTR [ebp-0x4]
10009e9d:	lea    eax,[ebx+eax*4]
10009ea0:	mov    DWORD PTR [edi+0xc],eax
10009ea3:	lea    eax,[ebx+esi*4+0x4]
10009ea7:	mov    DWORD PTR [edi+0x8],eax
10009eaa:	mov    DWORD PTR [edi+0x4],ebx
10009ead:	jmp    0x10009f46
10009eb2:	mov    esi,DWORD PTR [edi+0x8]
10009eb5:	mov    ebx,DWORD PTR [ebp+0xc]
10009eb8:	mov    eax,esi
10009eba:	sub    eax,ebx
10009ebc:	sar    eax,0x2
10009ebf:	cmp    eax,0x1
10009ec2:	jae    0x10009f05
10009ec4:	lea    ecx,[ebx+0x4]
10009ec7:	push   ebx
10009ec8:	mov    eax,esi
10009eca:	call   0x1000a41c
10009ecf:	mov    esi,DWORD PTR [edi+0x8]
10009ed2:	lea    eax,[ebp-0x8]
10009ed5:	push   eax
10009ed6:	mov    eax,esi
10009ed8:	xor    edx,edx
10009eda:	sub    eax,ebx
10009edc:	sar    eax,0x2
10009edf:	inc    edx
10009ee0:	sub    edx,eax
10009ee2:	call   0x10009b13
10009ee7:	add    DWORD PTR [edi+0x8],0x4
10009eeb:	mov    edi,DWORD PTR [edi+0x8]
10009eee:	lea    eax,[edi-0x4]
10009ef1:	cmp    ebx,eax
10009ef3:	mov    ecx,ebx
10009ef5:	je     0x10009f46
10009ef7:	mov    edx,DWORD PTR [ebp-0x8]
10009efa:	mov    DWORD PTR [ecx],edx
10009efc:	add    ecx,0x4
10009eff:	cmp    ecx,eax
10009f01:	jne    0x10009ef7
10009f03:	jmp    0x10009f46
10009f05:	lea    eax,[esi-0x4]
10009f08:	mov    DWORD PTR [ebp+0xc],eax
10009f0b:	push   eax
10009f0c:	mov    ecx,esi
10009f0e:	mov    eax,esi
10009f10:	call   0x1000a41c
10009f15:	mov    DWORD PTR [edi+0x8],eax
10009f18:	mov    eax,DWORD PTR [ebp+0xc]
10009f1b:	sub    eax,ebx
10009f1d:	sar    eax,0x2
10009f20:	test   eax,eax
10009f22:	jle    0x10009f35
10009f24:	shl    eax,0x2
10009f27:	push   eax
10009f28:	push   ebx
10009f29:	push   eax
10009f2a:	sub    esi,eax
10009f2c:	push   esi
10009f2d:	call   0x10041da6
10009f32:	add    esp,0x10
10009f35:	lea    eax,[ebx+0x4]
10009f38:	jmp    0x10009f42
10009f3a:	mov    ecx,DWORD PTR [ebp-0x8]
10009f3d:	mov    DWORD PTR [ebx],ecx
10009f3f:	add    ebx,0x4
10009f42:	cmp    ebx,eax
10009f44:	jne    0x10009f3a
10009f46:	pop    edi
10009f47:	pop    esi
10009f48:	pop    ebx
10009f49:	leave  
10009f4a:	ret    0x8
10009f4d:	push   ebp
10009f4e:	mov    ebp,esp
10009f50:	sub    esp,0x14
10009f53:	mov    eax,DWORD PTR [ebx+0x4]
10009f56:	mov    eax,DWORD PTR [eax]
10009f58:	push   esi
10009f59:	push   edi
10009f5a:	lea    edi,[ebp-0xc]
10009f5d:	lea    esi,[ebp+0xc]
10009f60:	mov    DWORD PTR [ebp-0x8],eax
10009f63:	mov    DWORD PTR [ebp-0xc],ebx
10009f66:	call   0x100046f1
10009f6b:	test   al,al
10009f6d:	je     0x10009fd4
10009f6f:	mov    eax,DWORD PTR [ebx+0x4]
10009f72:	lea    edi,[ebp-0xc]
10009f75:	lea    esi,[ebp+0x14]
10009f78:	mov    DWORD PTR [ebp-0x8],eax
10009f7b:	mov    DWORD PTR [ebp-0xc],ebx
10009f7e:	call   0x100046f1
10009f83:	test   al,al
10009f85:	je     0x10009fd4
10009f87:	mov    eax,DWORD PTR [ebx+0x4]
10009f8a:	push   DWORD PTR [eax+0x4]
10009f8d:	mov    ecx,ebx
10009f8f:	call   0x1000a301
10009f94:	mov    eax,DWORD PTR [ebx+0x4]
10009f97:	mov    DWORD PTR [eax+0x4],eax
10009f9a:	mov    eax,DWORD PTR [ebx+0x4]
10009f9d:	and    DWORD PTR [ebx+0x8],0x0
10009fa1:	mov    DWORD PTR [eax],eax
10009fa3:	mov    eax,DWORD PTR [ebx+0x4]
10009fa6:	mov    DWORD PTR [eax+0x8],eax
10009fa9:	mov    eax,DWORD PTR [ebx+0x4]
10009fac:	mov    ecx,DWORD PTR [eax]
10009fae:	mov    eax,DWORD PTR [ebp+0x8]
10009fb1:	mov    DWORD PTR [eax],ebx
10009fb3:	jmp    0x10009fee
10009fb5:	mov    eax,DWORD PTR [ebp+0x10]
10009fb8:	mov    edi,DWORD PTR [ebp+0xc]
10009fbb:	lea    esi,[ebp+0xc]
10009fbe:	mov    DWORD PTR [ebp-0x8],eax
10009fc1:	call   0x10009773
10009fc6:	push   DWORD PTR [ebp-0x8]
10009fc9:	lea    eax,[ebp-0x14]
10009fcc:	push   edi
10009fcd:	push   eax
10009fce:	push   ebx
10009fcf:	call   0x100093e9
10009fd4:	lea    edi,[ebp+0x14]
10009fd7:	lea    esi,[ebp+0xc]
10009fda:	call   0x100046f1
10009fdf:	test   al,al
10009fe1:	je     0x10009fb5
10009fe3:	mov    ecx,DWORD PTR [ebp+0xc]
10009fe6:	mov    eax,DWORD PTR [ebp+0x8]
10009fe9:	mov    DWORD PTR [eax],ecx
10009feb:	mov    ecx,DWORD PTR [ebp+0x10]
10009fee:	pop    edi
10009fef:	mov    DWORD PTR [eax+0x4],ecx
10009ff2:	pop    esi
10009ff3:	leave  
10009ff4:	ret    0x14
10009ff7:	mov    eax,DWORD PTR [eax+0x4]
10009ffa:	push   esi
10009ffb:	mov    esi,DWORD PTR [eax+0x4]
10009ffe:	push   edi
10009fff:	mov    edi,eax
1000a001:	jmp    0x1000a01c
1000a003:	mov    eax,DWORD PTR [esp+0xc]
1000a007:	lea    ecx,[esi+0xc]
1000a00a:	call   0x100071aa
1000a00f:	test   al,al
1000a011:	je     0x1000a018
1000a013:	mov    esi,DWORD PTR [esi+0x8]
1000a016:	jmp    0x1000a01c
1000a018:	mov    edi,esi
1000a01a:	mov    esi,DWORD PTR [esi]
1000a01c:	cmp    BYTE PTR [esi+0x39],0x0
1000a020:	je     0x1000a003
1000a022:	mov    eax,edi
1000a024:	pop    edi
1000a025:	pop    esi
1000a026:	ret    0x4
1000a029:	push   0xc
1000a02b:	mov    eax,0x10060f35
1000a030:	call   0x10058878
1000a035:	push   0x3c
1000a037:	call   0x1004239e
1000a03c:	mov    esi,eax
1000a03e:	pop    ecx
1000a03f:	mov    DWORD PTR [ebp-0x14],esi
1000a042:	test   esi,esi
1000a044:	mov    DWORD PTR [ebp-0x4],0x1
1000a04b:	je     0x1000a05e
1000a04d:	push   DWORD PTR [ebp+0x10]
1000a050:	mov    ebx,DWORD PTR [ebp+0x14]
1000a053:	push   DWORD PTR [ebp+0xc]
1000a056:	push   DWORD PTR [ebp+0x8]
1000a059:	call   0x1000a2b4
1000a05e:	mov    eax,esi
1000a060:	call   0x1005891d
1000a065:	ret    0x10
1000a068:	push   DWORD PTR [ebp-0x14]
1000a06b:	call   0x10041d92
1000a070:	pop    ecx
1000a071:	push   0x0
1000a073:	push   0x0
1000a075:	call   0x10046704
1000a07a:	int3   
1000a07b:	push   0x34
1000a07d:	mov    eax,0x1005ffcb
1000a082:	call   0x100588e4
1000a087:	mov    esi,ecx
1000a089:	mov    edi,edx
1000a08b:	push   edi
1000a08c:	lea    ecx,[ebp-0x38]
1000a08f:	mov    DWORD PTR [ebp-0x3c],esi
1000a092:	call   0x100011b0
1000a097:	mov    eax,DWORD PTR [edi+0x1c]
1000a09a:	mov    DWORD PTR [ebp-0x1c],eax
1000a09d:	xor    edi,edi
1000a09f:	mov    DWORD PTR [ebp-0x4],edi
1000a0a2:	mov    eax,DWORD PTR [esi+0x4]
1000a0a5:	cmp    eax,edi
1000a0a7:	je     0x1000a0b1
1000a0a9:	mov    edi,DWORD PTR [esi+0xc]
1000a0ac:	sub    edi,eax
1000a0ae:	sar    edi,0x5
1000a0b1:	mov    eax,esi
1000a0b3:	call   0x10004194
1000a0b8:	mov    ebx,0x7ffffff
1000a0bd:	mov    ecx,ebx
1000a0bf:	sub    ecx,eax
1000a0c1:	cmp    ecx,0x1
1000a0c4:	jae    0x1000a0cb
1000a0c6:	call   0x1000d195
1000a0cb:	mov    eax,esi
1000a0cd:	call   0x10004194
1000a0d2:	inc    eax
1000a0d3:	cmp    edi,eax
1000a0d5:	jae    0x1000a196
1000a0db:	mov    eax,edi
1000a0dd:	shr    eax,1
1000a0df:	sub    ebx,eax
1000a0e1:	cmp    ebx,edi
1000a0e3:	jae    0x1000a0e9
1000a0e5:	xor    edi,edi
1000a0e7:	jmp    0x1000a0eb
1000a0e9:	add    edi,eax
1000a0eb:	mov    eax,esi
1000a0ed:	call   0x10004194
1000a0f2:	inc    eax
1000a0f3:	cmp    edi,eax
1000a0f5:	jae    0x1000a101
1000a0f7:	mov    eax,esi
1000a0f9:	call   0x10004194
1000a0fe:	mov    edi,eax
1000a100:	inc    edi
1000a101:	mov    ecx,edi
1000a103:	call   0x100047d3
1000a108:	push   eax
1000a109:	push   DWORD PTR [ebp+0xc]
1000a10c:	mov    BYTE PTR [ebp-0x4],0x1
1000a110:	mov    ecx,DWORD PTR [esi+0x4]
1000a113:	mov    DWORD PTR [ebp-0x3c],eax
1000a116:	mov    DWORD PTR [ebp-0x40],eax
1000a119:	call   0x10005e74
1000a11e:	lea    ecx,[ebp-0x38]
1000a121:	push   ecx
1000a122:	push   0x1
1000a124:	push   eax
1000a125:	mov    DWORD PTR [ebp-0x40],eax
1000a128:	call   0x10004274
1000a12d:	mov    ecx,DWORD PTR [ebp+0xc]
1000a130:	push   eax
1000a131:	push   DWORD PTR [esi+0x8]
1000a134:	mov    DWORD PTR [ebp-0x40],eax
1000a137:	call   0x10005e74
1000a13c:	mov    eax,esi
1000a13e:	call   0x10004194
1000a143:	mov    ebx,eax
1000a145:	mov    eax,DWORD PTR [esi+0x4]
1000a148:	inc    ebx
1000a149:	test   eax,eax
1000a14b:	je     0x1000a15e
1000a14d:	push   DWORD PTR [esi+0x8]
1000a150:	call   0x100047b6
1000a155:	push   DWORD PTR [esi+0x4]
1000a158:	call   0x10041d92
1000a15d:	pop    ecx
1000a15e:	mov    eax,DWORD PTR [ebp-0x3c]
1000a161:	shl    edi,0x5
1000a164:	add    edi,eax
1000a166:	shl    ebx,0x5
1000a169:	add    ebx,eax
1000a16b:	mov    DWORD PTR [esi+0xc],edi
1000a16e:	mov    DWORD PTR [esi+0x8],ebx
1000a171:	mov    DWORD PTR [esi+0x4],eax
1000a174:	jmp    0x1000a276
1000a179:	push   DWORD PTR [ebp-0x40]
1000a17c:	mov    eax,DWORD PTR [ebp-0x3c]
1000a17f:	call   0x100047b6
1000a184:	push   DWORD PTR [ebp-0x3c]
1000a187:	call   0x10041d92
1000a18c:	pop    ecx
1000a18d:	push   0x0
1000a18f:	push   0x0
1000a191:	call   0x10046704
1000a196:	mov    eax,DWORD PTR [esi+0x8]
1000a199:	mov    edi,DWORD PTR [ebp+0xc]
1000a19c:	mov    ecx,eax
1000a19e:	sub    ecx,edi
1000a1a0:	sar    ecx,0x5
1000a1a3:	cmp    ecx,0x1
1000a1a6:	jae    0x1000a222
1000a1a8:	lea    ecx,[edi+0x20]
1000a1ab:	push   ecx
1000a1ac:	push   eax
1000a1ad:	mov    ecx,edi
1000a1af:	call   0x10005e74
1000a1b4:	mov    BYTE PTR [ebp-0x4],0x3
1000a1b8:	mov    eax,DWORD PTR [esi+0x8]
1000a1bb:	lea    ecx,[ebp-0x38]
1000a1be:	push   ecx
1000a1bf:	mov    ecx,eax
1000a1c1:	xor    edx,edx
1000a1c3:	sub    ecx,edi
1000a1c5:	sar    ecx,0x5
1000a1c8:	inc    edx
1000a1c9:	sub    edx,ecx
1000a1cb:	push   edx
1000a1cc:	push   eax
1000a1cd:	call   0x10004274
1000a1d2:	and    DWORD PTR [ebp-0x4],0x0
1000a1d6:	add    DWORD PTR [esi+0x8],0x20
1000a1da:	mov    esi,DWORD PTR [esi+0x8]
1000a1dd:	lea    ebx,[esi-0x20]
1000a1e0:	cmp    edi,ebx
1000a1e2:	mov    esi,edi
1000a1e4:	je     0x1000a276
1000a1ea:	push   0xffffffff
1000a1ec:	push   0x0
1000a1ee:	lea    eax,[ebp-0x38]
1000a1f1:	push   eax
1000a1f2:	mov    ecx,esi
1000a1f4:	call   0x1000124a
1000a1f9:	mov    eax,DWORD PTR [ebp-0x1c]
1000a1fc:	mov    DWORD PTR [esi+0x1c],eax
1000a1ff:	add    esi,0x20
1000a202:	cmp    esi,ebx
1000a204:	jne    0x1000a1ea
1000a206:	jmp    0x1000a276
1000a208:	mov    eax,DWORD PTR [ebp-0x3c]
1000a20b:	mov    eax,DWORD PTR [eax+0x8]
1000a20e:	add    eax,0x20
1000a211:	push   eax
1000a212:	mov    eax,DWORD PTR [ebp+0xc]
1000a215:	add    eax,0x20
1000a218:	call   0x100047b6
1000a21d:	jmp    0x1000a18d
1000a222:	lea    ebx,[eax-0x20]
1000a225:	push   eax
1000a226:	push   eax
1000a227:	mov    ecx,ebx
1000a229:	call   0x10005e74
1000a22e:	mov    DWORD PTR [esi+0x8],eax
1000a231:	mov    esi,ebx
1000a233:	cmp    edi,esi
1000a235:	je     0x1000a251
1000a237:	push   0xffffffff
1000a239:	sub    esi,0x20
1000a23c:	push   0x0
1000a23e:	push   esi
1000a23f:	lea    ecx,[esi+0x20]
1000a242:	call   0x1000124a
1000a247:	cmp    esi,edi
1000a249:	mov    eax,DWORD PTR [esi+0x1c]
1000a24c:	mov    DWORD PTR [esi+0x3c],eax
1000a24f:	jne    0x1000a237
1000a251:	lea    ebx,[edi+0x20]
1000a254:	cmp    edi,ebx
1000a256:	mov    esi,edi
1000a258:	je     0x1000a276
1000a25a:	push   0xffffffff
1000a25c:	push   0x0
1000a25e:	lea    eax,[ebp-0x38]
1000a261:	push   eax
1000a262:	mov    ecx,esi
1000a264:	call   0x1000124a
1000a269:	mov    eax,DWORD PTR [ebp-0x1c]
1000a26c:	mov    DWORD PTR [esi+0x1c],eax
1000a26f:	add    esi,0x20
1000a272:	cmp    esi,ebx
1000a274:	jne    0x1000a25a
1000a276:	push   0x0
1000a278:	push   0x1
1000a27a:	lea    ecx,[ebp-0x38]
1000a27d:	call   0x100012f9
1000a282:	call   0x10058940
1000a287:	ret    0x8
1000a28a:	push   0x3c
1000a28c:	call   0x1004239e
1000a291:	xor    edx,edx
1000a293:	cmp    eax,edx
1000a295:	pop    ecx
1000a296:	je     0x1000a29a
1000a298:	mov    DWORD PTR [eax],edx
1000a29a:	lea    ecx,[eax+0x4]
1000a29d:	cmp    ecx,edx
1000a29f:	je     0x1000a2a3
1000a2a1:	mov    DWORD PTR [ecx],edx
1000a2a3:	lea    ecx,[eax+0x8]
1000a2a6:	cmp    ecx,edx
1000a2a8:	je     0x1000a2ac
1000a2aa:	mov    DWORD PTR [ecx],edx
1000a2ac:	mov    BYTE PTR [eax+0x38],0x1
1000a2b0:	mov    BYTE PTR [eax+0x39],dl
1000a2b3:	ret    
1000a2b4:	push   0x0
1000a2b6:	mov    eax,0x10060f15
1000a2bb:	call   0x10058845
1000a2c0:	mov    eax,DWORD PTR [ebp+0x8]
1000a2c3:	mov    DWORD PTR [esi],eax
1000a2c5:	mov    eax,DWORD PTR [ebp+0xc]
1000a2c8:	mov    DWORD PTR [esi+0x4],eax
1000a2cb:	mov    eax,DWORD PTR [ebp+0x10]
1000a2ce:	lea    edi,[esi+0xc]
1000a2d1:	push   ebx
1000a2d2:	mov    ecx,edi
1000a2d4:	mov    DWORD PTR [esi+0x8],eax
1000a2d7:	mov    DWORD PTR [ebp+0x8],edi
1000a2da:	call   0x100011b0
1000a2df:	and    DWORD PTR [ebp-0x4],0x0
1000a2e3:	add    edi,0x1c
1000a2e6:	lea    ecx,[ebx+0x1c]
1000a2e9:	push   edi
1000a2ea:	call   0x100097c0
1000a2ef:	mov    BYTE PTR [esi+0x38],0x0
1000a2f3:	mov    BYTE PTR [esi+0x39],0x0
1000a2f7:	mov    eax,esi
1000a2f9:	call   0x1005891d
1000a2fe:	ret    0xc
1000a301:	push   ecx
1000a302:	push   ebp
1000a303:	mov    ebp,DWORD PTR [esp+0xc]
1000a307:	cmp    BYTE PTR [ebp+0x39],0x0
1000a30b:	push   edi
1000a30c:	mov    DWORD PTR [esp+0x8],ecx
1000a310:	mov    edi,ebp
1000a312:	jne    0x1000a34b
1000a314:	push   ebx
1000a315:	push   esi
1000a316:	push   DWORD PTR [edi+0x8]
1000a319:	mov    ecx,DWORD PTR [esp+0x14]
1000a31d:	call   0x1000a301
1000a322:	mov    edi,DWORD PTR [edi]
1000a324:	lea    ebx,[ebp+0xc]
1000a327:	lea    esi,[ebx+0x1c]
1000a32a:	call   0x1000424f
1000a32f:	push   0x0
1000a331:	push   0x1
1000a333:	mov    ecx,ebx
1000a335:	call   0x100012f9
1000a33a:	push   ebp
1000a33b:	call   0x10041d92
1000a340:	cmp    BYTE PTR [edi+0x39],0x0
1000a344:	pop    ecx
1000a345:	mov    ebp,edi
1000a347:	je     0x1000a316
1000a349:	pop    esi
1000a34a:	pop    ebx
1000a34b:	pop    edi
1000a34c:	pop    ebp
1000a34d:	pop    ecx
1000a34e:	ret    0x4
1000a351:	push   0x8
1000a353:	mov    eax,0x10060ef2
1000a358:	call   0x10058845
1000a35d:	and    DWORD PTR [ebp-0x14],0x0
1000a361:	mov    DWORD PTR [ebp-0x10],edi
1000a364:	xor    esi,esi
1000a366:	lea    eax,[ebp+0x8]
1000a369:	inc    esi
1000a36a:	push   eax
1000a36b:	mov    ecx,edi
1000a36d:	mov    DWORD PTR [ebp-0x4],esi
1000a370:	call   0x100011b0
1000a375:	lea    eax,[edi+0x1c]
1000a378:	push   eax
1000a379:	lea    ecx,[ebp+0x24]
1000a37c:	mov    BYTE PTR [ebp-0x4],0x2
1000a380:	call   0x100097c0
1000a385:	push   0x0
1000a387:	push   esi
1000a388:	lea    ecx,[ebp+0x8]
1000a38b:	call   0x100012f9
1000a390:	lea    esi,[ebp+0x24]
1000a393:	call   0x1000424f
1000a398:	mov    eax,edi
1000a39a:	call   0x1005891d
1000a39f:	ret    
1000a3a0:	push   0x0
1000a3a2:	mov    eax,0x10060f15
1000a3a7:	call   0x10058845
1000a3ac:	mov    esi,DWORD PTR [ebp+0x8]
1000a3af:	push   edi
1000a3b0:	mov    ecx,esi
1000a3b2:	call   0x100011b0
1000a3b7:	and    DWORD PTR [ebp-0x4],0x0
1000a3bb:	lea    eax,[esi+0x1c]
1000a3be:	lea    ecx,[edi+0x1c]
1000a3c1:	push   eax
1000a3c2:	call   0x100097c0
1000a3c7:	mov    eax,esi
1000a3c9:	call   0x1005891d
1000a3ce:	ret    0x4
1000a3d1:	push   0x20
1000a3d3:	mov    eax,0x1005ffa8
1000a3d8:	call   0x10058845
1000a3dd:	push   DWORD PTR [ebp+0xc]
1000a3e0:	and    DWORD PTR [ebp-0x10],0x0
1000a3e4:	lea    ecx,[ebp-0x2c]
1000a3e7:	call   0x100011b0
1000a3ec:	mov    esi,eax
1000a3ee:	mov    eax,DWORD PTR [ebp+0x10]
1000a3f1:	and    DWORD PTR [ebp-0x4],0x0
1000a3f5:	push   0xffffffff
1000a3f7:	push   0x0
1000a3f9:	call   0x10005fb0
1000a3fe:	mov    ecx,DWORD PTR [ebp+0x8]
1000a401:	push   eax
1000a402:	call   0x100011b0
1000a407:	push   0x0
1000a409:	push   0x1
1000a40b:	lea    ecx,[ebp-0x2c]
1000a40e:	call   0x100012f9
1000a413:	mov    eax,DWORD PTR [ebp+0x8]
1000a416:	call   0x1005891d
1000a41b:	ret    
1000a41c:	sub    eax,DWORD PTR [esp+0x4]
1000a420:	push   esi
1000a421:	sar    eax,0x2
1000a424:	lea    eax,[eax*4+0x0]
1000a42b:	lea    esi,[eax+ecx*1]
1000a42e:	je     0x1000a43f
1000a430:	push   eax
1000a431:	push   DWORD PTR [esp+0xc]
1000a435:	push   eax
1000a436:	push   ecx
1000a437:	call   0x10041da6
1000a43c:	add    esp,0x10
1000a43f:	mov    eax,esi
1000a441:	pop    esi
1000a442:	ret    0x4
1000a445:	test   BYTE PTR [esp+0x4],0x1
1000a44a:	push   esi
1000a44b:	mov    esi,ecx
1000a44d:	mov    DWORD PTR [esi],0x1006c57c
1000a453:	je     0x1000a45c
1000a455:	push   esi
1000a456:	call   0x10041d92
1000a45b:	pop    ecx
1000a45c:	mov    eax,esi
1000a45e:	pop    esi
1000a45f:	ret    0x4
1000a462:	mov    eax,DWORD PTR [esi]
1000a464:	test   eax,eax
1000a466:	je     0x1000a472
1000a468:	push   eax
1000a469:	call   DWORD PTR ds:0x10065094
1000a46f:	and    DWORD PTR [esi],0x0
1000a472:	ret    
1000a473:	push   ebp
1000a474:	mov    ebp,esp
1000a476:	push   ecx
1000a477:	push   ecx
1000a478:	mov    eax,ds:0x1007ff80
1000a47d:	push   0x0
1000a47f:	mov    DWORD PTR [ebp-0x4],eax
1000a482:	push   0x0
1000a484:	lea    eax,[ebp-0x8]
1000a487:	push   eax
1000a488:	push   0x2
1000a48a:	mov    DWORD PTR [ebp-0x8],esi
1000a48d:	call   DWORD PTR ds:0x100650e8
1000a493:	sub    eax,0x0
1000a496:	je     0x1000a4b0
1000a498:	dec    eax
1000a499:	je     0x1000a4ab
1000a49b:	sub    eax,0x101
1000a4a0:	je     0x1000a4a6
1000a4a2:	push   0x3
1000a4a4:	jmp    0x1000a4a8
1000a4a6:	push   0x2
1000a4a8:	pop    eax
1000a4a9:	jmp    0x1000a4b7
1000a4ab:	xor    eax,eax
1000a4ad:	inc    eax
1000a4ae:	jmp    0x1000a4b7
1000a4b0:	mov    eax,DWORD PTR [ebp+0x8]
1000a4b3:	mov    DWORD PTR [eax],esi
1000a4b5:	xor    eax,eax
1000a4b7:	leave  
1000a4b8:	ret    0x4
1000a4bb:	push   ebp
1000a4bc:	mov    ebp,esp
1000a4be:	and    esp,0xfffffff8
1000a4c1:	push   ecx
1000a4c2:	push   edi
1000a4c3:	mov    edi,eax
1000a4c5:	mov    eax,ds:0x1007fc5c
1000a4ca:	and    DWORD PTR [edi],0x0
1000a4cd:	cmp    eax,0x2
1000a4d0:	jne    0x1000a4dd
1000a4d2:	push   DWORD PTR [ebp+0x8]
1000a4d5:	call   0x10006c11
1000a4da:	pop    ecx
1000a4db:	jmp    0x1000a4f0
1000a4dd:	cmp    eax,0x1
1000a4e0:	jne    0x1000a4ee
1000a4e2:	push   edi
1000a4e3:	push   DWORD PTR [ebp+0x8]
1000a4e6:	call   0x100121a1
1000a4eb:	pop    ecx
1000a4ec:	jmp    0x1000a4da
1000a4ee:	xor    al,al
1000a4f0:	pop    edi
1000a4f1:	mov    esp,ebp
1000a4f3:	pop    ebp
1000a4f4:	ret    
1000a4f5:	push   ebp
1000a4f6:	mov    ebp,esp
1000a4f8:	sub    esp,0x10
1000a4fb:	mov    eax,DWORD PTR [ebp+0xc]
1000a4fe:	and    DWORD PTR [ebp+0xc],0x0
1000a502:	push   esi
1000a503:	push   edi
1000a504:	mov    DWORD PTR [ebp-0x8],eax
1000a507:	mov    eax,DWORD PTR [ebp+0x8]
1000a50a:	push   0x0
1000a50c:	mov    esi,ecx
1000a50e:	mov    DWORD PTR [ebp-0x4],eax
1000a511:	lea    edi,[esi+0x8]
1000a514:	push   edi
1000a515:	lea    eax,[ebp+0xc]
1000a518:	push   eax
1000a519:	lea    eax,[ebp+0x8]
1000a51c:	push   eax
1000a51d:	push   0x1
1000a51f:	lea    eax,[ebp-0x8]
1000a522:	push   eax
1000a523:	push   DWORD PTR [esi+0x4]
1000a526:	call   DWORD PTR ds:0x100653d8
1000a52c:	cmp    eax,0xffffffff
1000a52f:	jne    0x1000a542
1000a531:	call   DWORD PTR ds:0x100653e4
1000a537:	cmp    eax,0x3e5
1000a53c:	je     0x1000a542
1000a53e:	xor    al,al
1000a540:	jmp    0x1000a58f
1000a542:	mov    eax,DWORD PTR [esi+0x18]
1000a545:	push   0x1
1000a547:	mov    DWORD PTR [ebp-0x10],eax
1000a54a:	mov    eax,DWORD PTR [esi+0x1c]
1000a54d:	push   0xffffffff
1000a54f:	mov    DWORD PTR [ebp-0xc],eax
1000a552:	push   0x0
1000a554:	lea    eax,[ebp-0x10]
1000a557:	push   eax
1000a558:	push   0x2
1000a55a:	call   DWORD PTR ds:0x100653ac
1000a560:	test   eax,eax
1000a562:	jne    0x1000a53e
1000a564:	lea    eax,[ebp+0xc]
1000a567:	push   eax
1000a568:	push   0x0
1000a56a:	lea    eax,[ebp+0x8]
1000a56d:	push   eax
1000a56e:	push   edi
1000a56f:	push   DWORD PTR [esi+0x4]
1000a572:	call   DWORD PTR ds:0x100653c0
1000a578:	test   eax,eax
1000a57a:	je     0x1000a53e
1000a57c:	mov    eax,DWORD PTR [ebp+0x10]
1000a57f:	mov    ecx,DWORD PTR [ebp+0x8]
1000a582:	mov    DWORD PTR [eax],ecx
1000a584:	push   DWORD PTR [esi+0x18]
1000a587:	call   DWORD PTR ds:0x100653b4
1000a58d:	mov    al,0x1
1000a58f:	pop    edi
1000a590:	pop    esi
1000a591:	leave  
1000a592:	ret    0xc
1000a595:	push   esi
1000a596:	mov    esi,ecx
1000a598:	push   DWORD PTR [esi+0x18]
1000a59b:	mov    DWORD PTR [esi],0x1006c584
1000a5a1:	call   DWORD PTR ds:0x100653c8
1000a5a7:	test   BYTE PTR [esp+0x8],0x1
1000a5ac:	mov    DWORD PTR [esi],0x1006c57c
1000a5b2:	je     0x1000a5bb
1000a5b4:	push   esi
1000a5b5:	call   0x10041d92
1000a5ba:	pop    ecx
1000a5bb:	mov    eax,esi
1000a5bd:	pop    esi
1000a5be:	ret    0x4
1000a5c1:	push   ebx
1000a5c2:	xor    ebx,ebx
1000a5c4:	mov    DWORD PTR [edi],ebx
1000a5c6:	mov    DWORD PTR [edi+0x4],ebx
1000a5c9:	mov    DWORD PTR [edi+0x8],ebx
1000a5cc:	mov    DWORD PTR [edi+0xc],ebx
1000a5cf:	push   esi
1000a5d0:	mov    DWORD PTR [edi+0x10],ebx
1000a5d3:	lea    esi,[edi+0x18]
1000a5d6:	mov    DWORD PTR [edi+0x14],ebx
1000a5d9:	call   0x10003ba8
1000a5de:	lea    esi,[edi+0x38]
1000a5e1:	mov    WORD PTR [edi+0x34],bx
1000a5e5:	call   0x10003ba8
1000a5ea:	mov    BYTE PTR [edi+0x58],bl
1000a5ed:	call   DWORD PTR ds:0x100653bc
1000a5f3:	mov    esi,eax
1000a5f5:	mov    eax,DWORD PTR [edi+0x4]
1000a5f8:	cmp    eax,ebx
1000a5fa:	je     0x1000a603
1000a5fc:	push   eax
1000a5fd:	call   DWORD PTR ds:0x100653c8
1000a603:	mov    DWORD PTR [edi+0x4],esi
1000a606:	pop    esi
1000a607:	mov    eax,edi
1000a609:	pop    ebx
1000a60a:	ret    
1000a60b:	push   ebp
1000a60c:	mov    ebp,esp
1000a60e:	sub    esp,0x1c
1000a611:	mov    eax,ds:0x1007d030
1000a616:	xor    eax,ebp
1000a618:	mov    DWORD PTR [ebp-0x4],eax
1000a61b:	push   edi
1000a61c:	push   0x0
1000a61e:	push   0x1
1000a620:	push   0x2
1000a622:	call   DWORD PTR ds:0x100653f4
1000a628:	mov    edi,eax
1000a62a:	mov    eax,DWORD PTR [esi+0x8]
1000a62d:	test   eax,eax
1000a62f:	je     0x1000a638
1000a631:	push   eax
1000a632:	call   DWORD PTR ds:0x100653b8
1000a638:	test   edi,edi
1000a63a:	mov    DWORD PTR [esi+0x8],edi
1000a63d:	jne    0x1000a646
1000a63f:	xor    al,al
1000a641:	jmp    0x1000a734
1000a646:	xor    eax,eax
1000a648:	cmp    DWORD PTR [esi+0x54],0x0
1000a64c:	lea    edi,[ebp-0x12]
1000a64f:	stos   DWORD PTR es:[edi],eax
1000a650:	stos   DWORD PTR es:[edi],eax
1000a651:	stos   DWORD PTR es:[edi],eax
1000a652:	stos   WORD PTR es:[edi],ax
1000a654:	mov    WORD PTR [ebp-0x14],0x2
1000a65a:	jne    0x1000a68d
1000a65c:	cmp    DWORD PTR [esi+0x30],0x10
1000a660:	jb     0x1000a667
1000a662:	mov    eax,DWORD PTR [esi+0x1c]
1000a665:	jmp    0x1000a66a
1000a667:	lea    eax,[esi+0x1c]
1000a66a:	push   eax
1000a66b:	call   DWORD PTR ds:0x100653b0
1000a671:	movsx  ecx,WORD PTR [eax+0xa]
1000a675:	mov    eax,DWORD PTR [eax+0xc]
1000a678:	push   ecx
1000a679:	push   DWORD PTR [eax]
1000a67b:	lea    eax,[ebp-0x10]
1000a67e:	push   eax
1000a67f:	call   0x10043ed0
1000a684:	movzx  eax,WORD PTR [esi+0x34]
1000a688:	add    esp,0xc
1000a68b:	jmp    0x1000a6a9
1000a68d:	cmp    DWORD PTR [esi+0x50],0x10
1000a691:	jb     0x1000a698
1000a693:	mov    eax,DWORD PTR [esi+0x3c]
1000a696:	jmp    0x1000a69b
1000a698:	lea    eax,[esi+0x3c]
1000a69b:	push   eax
1000a69c:	call   DWORD PTR ds:0x100653d4
1000a6a2:	mov    DWORD PTR [ebp-0x10],eax
1000a6a5:	movzx  eax,WORD PTR [esi+0x54]
1000a6a9:	push   eax
1000a6aa:	call   DWORD PTR ds:0x100653e8
1000a6b0:	mov    WORD PTR [ebp-0x12],ax
1000a6b4:	call   DWORD PTR ds:0x100653bc
1000a6ba:	mov    edi,eax
1000a6bc:	call   0x1000207c
1000a6c1:	mov    eax,DWORD PTR [esi+0x8]
1000a6c4:	push   0x10
1000a6c6:	push   edi
1000a6c7:	push   eax
1000a6c8:	call   DWORD PTR ds:0x100653ec
1000a6ce:	test   eax,eax
1000a6d0:	je     0x1000a6e6
1000a6d2:	test   edi,edi
1000a6d4:	je     0x1000a63f
1000a6da:	push   edi
1000a6db:	call   DWORD PTR ds:0x100653c8
1000a6e1:	jmp    0x1000a63f
1000a6e6:	mov    eax,DWORD PTR [esi+0x8]
1000a6e9:	push   0x10
1000a6eb:	lea    ecx,[ebp-0x14]
1000a6ee:	push   ecx
1000a6ef:	push   eax
1000a6f0:	call   DWORD PTR ds:0x100653d0
1000a6f6:	cmp    eax,0xffffffff
1000a6f9:	jne    0x1000a727
1000a6fb:	call   DWORD PTR ds:0x100653e4
1000a701:	cmp    eax,0x2733
1000a706:	jne    0x1000a6d2
1000a708:	mov    eax,DWORD PTR [esi+0x4]
1000a70b:	push   0x1
1000a70d:	push   0xffffffff
1000a70f:	mov    DWORD PTR [ebp-0x18],eax
1000a712:	push   0x0
1000a714:	lea    eax,[ebp-0x1c]
1000a717:	push   eax
1000a718:	push   0x2
1000a71a:	mov    DWORD PTR [ebp-0x1c],edi
1000a71d:	call   DWORD PTR ds:0x100653ac
1000a723:	test   eax,eax
1000a725:	jne    0x1000a6d2
1000a727:	test   edi,edi
1000a729:	je     0x1000a732
1000a72b:	push   edi
1000a72c:	call   DWORD PTR ds:0x100653c8
1000a732:	mov    al,0x1
1000a734:	mov    ecx,DWORD PTR [ebp-0x4]
1000a737:	xor    ecx,ebp
1000a739:	pop    edi
1000a73a:	call   0x10041d97
1000a73f:	leave  
1000a740:	ret    
1000a741:	mov    eax,DWORD PTR [esi+0x14]
1000a744:	push   ebx
1000a745:	xor    ebx,ebx
1000a747:	cmp    eax,ebx
1000a749:	je     0x1000a752
1000a74b:	push   eax
1000a74c:	call   0x10041d92
1000a751:	pop    ecx
1000a752:	push   ebp
1000a753:	push   edi
1000a754:	mov    DWORD PTR [esi+0x14],ebx
1000a757:	mov    edi,DWORD PTR [esi+0x10]
1000a75a:	cmp    edi,ebx
1000a75c:	je     0x1000a76c
1000a75e:	mov    eax,edi
1000a760:	call   0x1000d763
1000a765:	push   edi
1000a766:	call   0x10041d92
1000a76b:	pop    ecx
1000a76c:	push   0x20
1000a76e:	mov    DWORD PTR [esi+0x10],ebx
1000a771:	call   0x1004239e
1000a776:	mov    edi,eax
1000a778:	cmp    edi,ebx
1000a77a:	pop    ecx
1000a77b:	je     0x1000a7a9
1000a77d:	mov    eax,DWORD PTR [esi+0x4]
1000a780:	mov    ecx,DWORD PTR [esi+0x8]
1000a783:	push   0x14
1000a785:	mov    DWORD PTR [edi+0x1c],eax
1000a788:	lea    eax,[edi+0x8]
1000a78b:	push   ebx
1000a78c:	push   eax
1000a78d:	mov    DWORD PTR [edi],0x1006c584
1000a793:	mov    DWORD PTR [edi+0x4],ecx
1000a796:	call   0x10044950
1000a79b:	add    esp,0xc
1000a79e:	call   DWORD PTR ds:0x100653bc
1000a7a4:	mov    DWORD PTR [edi+0x18],eax
1000a7a7:	jmp    0x1000a7ab
1000a7a9:	xor    edi,edi
1000a7ab:	mov    ecx,DWORD PTR [esi+0xc]
1000a7ae:	cmp    edi,ecx
1000a7b0:	je     0x1000a7bc
1000a7b2:	cmp    ecx,ebx
1000a7b4:	je     0x1000a7bc
1000a7b6:	mov    eax,DWORD PTR [ecx]
1000a7b8:	push   0x1
1000a7ba:	call   DWORD PTR [eax]
1000a7bc:	push   0x1c
1000a7be:	mov    DWORD PTR [esi+0xc],edi
1000a7c1:	call   0x1004239e
1000a7c6:	cmp    eax,ebx
1000a7c8:	pop    ecx
1000a7c9:	je     0x1000a7e6
1000a7cb:	mov    ecx,DWORD PTR [esi+0xc]
1000a7ce:	mov    DWORD PTR [eax],ebx
1000a7d0:	mov    DWORD PTR [eax+0x4],ebx
1000a7d3:	mov    DWORD PTR [eax+0x8],ebx
1000a7d6:	mov    DWORD PTR [eax+0xc],ebx
1000a7d9:	mov    BYTE PTR [eax+0x10],bl
1000a7dc:	mov    DWORD PTR [eax+0x14],ebx
1000a7df:	mov    DWORD PTR [eax+0x18],ecx
1000a7e2:	mov    edi,eax
1000a7e4:	jmp    0x1000a7e8
1000a7e6:	xor    edi,edi
1000a7e8:	mov    ebp,DWORD PTR [esi+0x10]
1000a7eb:	cmp    edi,ebp
1000a7ed:	je     0x1000a801
1000a7ef:	cmp    ebp,ebx
1000a7f1:	je     0x1000a801
1000a7f3:	mov    eax,ebp
1000a7f5:	call   0x1000d763
1000a7fa:	push   ebp
1000a7fb:	call   0x10041d92
1000a800:	pop    ecx
1000a801:	push   0x4
1000a803:	mov    DWORD PTR [esi+0x10],edi
1000a806:	call   0x1004239e
1000a80b:	cmp    eax,ebx
1000a80d:	pop    ecx
1000a80e:	pop    edi
1000a80f:	pop    ebp
1000a810:	je     0x1000a819
1000a812:	mov    ecx,DWORD PTR [esi+0x10]
1000a815:	mov    DWORD PTR [eax],ecx
1000a817:	mov    ebx,eax
1000a819:	mov    eax,DWORD PTR [esi+0x14]
1000a81c:	cmp    ebx,eax
1000a81e:	je     0x1000a827
1000a820:	push   eax
1000a821:	call   0x10041d92
1000a826:	pop    ecx
1000a827:	mov    DWORD PTR [esi+0x14],ebx
1000a82a:	pop    ebx
1000a82b:	ret    
1000a82c:	push   0x4
1000a82e:	mov    eax,0x10063426
1000a833:	call   0x10058845
1000a838:	mov    edi,ecx
1000a83a:	mov    esi,edx
1000a83c:	push   0xffffffff
1000a83e:	xor    ebx,ebx
1000a840:	push   ebx
1000a841:	mov    DWORD PTR [ebp-0x10],ebx
1000a844:	push   DWORD PTR [ebp+0xc]
1000a847:	lea    ecx,[esi+0x18]
1000a84a:	call   0x1000124a
1000a84f:	mov    ax,WORD PTR [ebp+0x10]
1000a853:	lea    ecx,[esi+0x38]
1000a856:	mov    WORD PTR [esi+0x34],ax
1000a85a:	lea    eax,[esi+0x54]
1000a85d:	push   ecx
1000a85e:	call   0x1000a4bb
1000a863:	pop    ecx
1000a864:	mov    DWORD PTR [ebp+0xc],ebx
1000a867:	mov    DWORD PTR [ebp-0x4],0x1
1000a86e:	mov    eax,DWORD PTR [ebp+0x1c]
1000a871:	mov    DWORD PTR [eax],ebx
1000a873:	push   DWORD PTR [esi+0x4]
1000a876:	call   DWORD PTR ds:0x100653b4
1000a87c:	cmp    edi,0xffffffff
1000a87f:	je     0x1000a8cd
1000a881:	push   0x8
1000a883:	call   0x1004239e
1000a888:	cmp    eax,ebx
1000a88a:	pop    ecx
1000a88b:	je     0x1000a899
1000a88d:	mov    ecx,DWORD PTR [esi+0x4]
1000a890:	mov    DWORD PTR [eax+0x4],edi
1000a893:	mov    DWORD PTR [eax],ecx
1000a895:	mov    edi,eax
1000a897:	jmp    0x1000a89b
1000a899:	xor    edi,edi
1000a89b:	push   ebx
1000a89c:	push   ebx
1000a89d:	push   edi
1000a89e:	push   0x1000a988
1000a8a3:	push   ebx
1000a8a4:	push   ebx
1000a8a5:	call   DWORD PTR ds:0x10065098
1000a8ab:	push   eax
1000a8ac:	call   0x10004365
1000a8b1:	cmp    DWORD PTR [esi],ebx
1000a8b3:	jne    0x1000a8c6
1000a8b5:	push   edi
1000a8b6:	call   0x10041d92
1000a8bb:	mov    esi,DWORD PTR [ebp+0x8]
1000a8be:	pop    ecx
1000a8bf:	mov    DWORD PTR [esi],ebx
1000a8c1:	jmp    0x1000a977
1000a8c6:	push   ebx
1000a8c7:	call   0x10041d92
1000a8cc:	pop    ecx
1000a8cd:	cmp    DWORD PTR [esi+0x8],ebx
1000a8d0:	jne    0x1000a8e5
1000a8d2:	call   0x1000a60b
1000a8d7:	test   al,al
1000a8d9:	jne    0x1000a8e5
1000a8db:	mov    esi,DWORD PTR [ebp+0x8]
1000a8de:	mov    DWORD PTR [esi],ebx
1000a8e0:	jmp    0x1000a977
1000a8e5:	call   0x1000a741
1000a8ea:	mov    DWORD PTR [ebp+0x10],ebx
1000a8ed:	push   DWORD PTR [ebp+0x18]
1000a8f0:	mov    ecx,DWORD PTR [ebp+0x14]
1000a8f3:	push   esi
1000a8f4:	lea    edi,[ebp+0x10]
1000a8f7:	mov    BYTE PTR [ebp-0x4],0x2
1000a8fb:	call   0x1000aac9
1000a900:	test   al,al
1000a902:	jne    0x1000a90b
1000a904:	mov    esi,DWORD PTR [ebp+0x8]
1000a907:	mov    DWORD PTR [esi],ebx
1000a909:	jmp    0x1000a95c
1000a90b:	push   DWORD PTR [ebp+0x10]
1000a90e:	mov    ecx,DWORD PTR [ebp+0x1c]
1000a911:	lea    eax,[ebp+0x1c]
1000a914:	push   eax
1000a915:	push   esi
1000a916:	call   0x1000ad7a
1000a91b:	push   eax
1000a91c:	lea    edi,[ebp+0xc]
1000a91f:	call   0x1000209f
1000a924:	push   DWORD PTR [ebp+0x1c]
1000a927:	call   0x10041d92
1000a92c:	cmp    DWORD PTR [esi],ebx
1000a92e:	pop    ecx
1000a92f:	je     0x1000a945
1000a931:	push   DWORD PTR [esi+0x4]
1000a934:	call   DWORD PTR ds:0x100653cc
1000a93a:	mov    eax,DWORD PTR [esi]
1000a93c:	push   0xffffffff
1000a93e:	push   eax
1000a93f:	call   DWORD PTR ds:0x10065084
1000a945:	mov    eax,DWORD PTR [esi]
1000a947:	cmp    eax,ebx
1000a949:	je     0x1000a952
1000a94b:	push   eax
1000a94c:	call   DWORD PTR ds:0x10065070
1000a952:	mov    eax,DWORD PTR [ebp+0xc]
1000a955:	mov    DWORD PTR [esi],ebx
1000a957:	mov    esi,DWORD PTR [ebp+0x8]
1000a95a:	mov    DWORD PTR [esi],eax
1000a95c:	mov    BYTE PTR [ebp-0x4],0x1
1000a960:	cmp    DWORD PTR [ebp+0x10],ebx
1000a963:	mov    DWORD PTR [ebp-0x10],0x1
1000a96a:	mov    DWORD PTR [ebp+0xc],ebx
1000a96d:	je     0x1000a977
1000a96f:	push   DWORD PTR [ebp+0x10]
1000a972:	call   0x100099e0
1000a977:	push   ebx
1000a978:	call   0x10041d92
1000a97d:	mov    eax,esi
1000a97f:	pop    ecx
1000a980:	call   0x1005891d
1000a985:	ret    0x18
1000a988:	push   ebp
1000a989:	mov    ebp,esp
1000a98b:	push   ecx
1000a98c:	push   ecx
1000a98d:	push   esi
1000a98e:	push   edi
1000a98f:	lea    eax,[ebp+0xb]
1000a992:	push   eax
1000a993:	call   0x100375f0
1000a998:	mov    eax,DWORD PTR [ebp+0x8]
1000a99b:	mov    esi,DWORD PTR [eax]
1000a99d:	mov    edi,DWORD PTR [eax+0x4]
1000a9a0:	push   eax
1000a9a1:	call   0x10041d92
1000a9a6:	mov    eax,ds:0x1007ff80
1000a9ab:	pop    ecx
1000a9ac:	push   edi
1000a9ad:	mov    DWORD PTR [ebp-0x4],eax
1000a9b0:	push   0x0
1000a9b2:	lea    eax,[ebp-0x8]
1000a9b5:	push   eax
1000a9b6:	push   0x2
1000a9b8:	mov    DWORD PTR [ebp-0x8],esi
1000a9bb:	call   DWORD PTR ds:0x100650e8
1000a9c1:	cmp    eax,0x102
1000a9c6:	jne    0x1000a9cf
1000a9c8:	push   esi
1000a9c9:	call   DWORD PTR ds:0x100653cc
1000a9cf:	call   0x10037610
1000a9d4:	pop    edi
1000a9d5:	xor    eax,eax
1000a9d7:	pop    esi
1000a9d8:	leave  
1000a9d9:	ret    0x4
1000a9dc:	push   ebp
1000a9dd:	mov    ebp,esp
1000a9df:	push   ecx
1000a9e0:	mov    ecx,DWORD PTR [ebp+0x8]
1000a9e3:	and    DWORD PTR [ebp-0x4],0x0
1000a9e7:	add    eax,0x18
1000a9ea:	push   eax
1000a9eb:	call   0x100011b0
1000a9f0:	mov    eax,DWORD PTR [ebp+0x8]
1000a9f3:	leave  
1000a9f4:	ret    0x4
1000a9f7:	push   ebp
1000a9f8:	mov    ebp,esp
1000a9fa:	sub    esp,0x2c
1000a9fd:	push   ebx
1000a9fe:	push   esi
1000a9ff:	mov    esi,eax
1000aa01:	push   edi
1000aa02:	xor    eax,eax
1000aa04:	xor    ebx,ebx
1000aa06:	mov    DWORD PTR [ebp-0x2c],ebx
1000aa09:	lea    edi,[ebp-0x28]
1000aa0c:	stos   DWORD PTR es:[edi],eax
1000aa0d:	stos   DWORD PTR es:[edi],eax
1000aa0e:	stos   DWORD PTR es:[edi],eax
1000aa0f:	stos   DWORD PTR es:[edi],eax
1000aa10:	mov    eax,DWORD PTR [ebp+0x8]
1000aa13:	mov    eax,DWORD PTR [eax+0x30]
1000aa16:	mov    ecx,DWORD PTR [eax+0x18]
1000aa19:	mov    DWORD PTR [ebp-0x10],ecx
1000aa1c:	mov    eax,DWORD PTR [eax+0x14]
1000aa1f:	mov    DWORD PTR [ebp-0xc],eax
1000aa22:	call   DWORD PTR ds:0x100653bc
1000aa28:	push   ebx
1000aa29:	lea    ecx,[ebp-0x2c]
1000aa2c:	push   ecx
1000aa2d:	push   ebx
1000aa2e:	lea    ecx,[ebp-0x4]
1000aa31:	push   ecx
1000aa32:	push   0x1
1000aa34:	mov    edi,eax
1000aa36:	mov    eax,DWORD PTR [esi+0x8]
1000aa39:	lea    ecx,[ebp-0x10]
1000aa3c:	push   ecx
1000aa3d:	push   eax
1000aa3e:	mov    DWORD PTR [ebp-0x1c],edi
1000aa41:	mov    DWORD PTR [ebp-0x8],ebx
1000aa44:	call   DWORD PTR ds:0x100653dc
1000aa4a:	cmp    eax,0xffffffff
1000aa4d:	jne    0x1000aa6b
1000aa4f:	call   DWORD PTR ds:0x100653e4
1000aa55:	cmp    eax,0x3e5
1000aa5a:	je     0x1000aa6b
1000aa5c:	cmp    edi,ebx
1000aa5e:	je     0x1000aa67
1000aa60:	push   edi
1000aa61:	call   DWORD PTR ds:0x100653c8
1000aa67:	xor    al,al
1000aa69:	jmp    0x1000aac2
1000aa6b:	mov    eax,DWORD PTR [ebp-0x1c]
1000aa6e:	push   0x1
1000aa70:	mov    DWORD PTR [ebp-0x18],eax
1000aa73:	mov    eax,DWORD PTR [esi+0x4]
1000aa76:	push   0xffffffff
1000aa78:	mov    DWORD PTR [ebp-0x14],eax
1000aa7b:	push   ebx
1000aa7c:	lea    eax,[ebp-0x18]
1000aa7f:	push   eax
1000aa80:	push   0x2
1000aa82:	call   DWORD PTR ds:0x100653ac
1000aa88:	test   eax,eax
1000aa8a:	jne    0x1000aa5c
1000aa8c:	mov    esi,DWORD PTR [esi+0x8]
1000aa8f:	lea    eax,[ebp-0x8]
1000aa92:	push   eax
1000aa93:	push   ebx
1000aa94:	lea    eax,[ebp-0x4]
1000aa97:	push   eax
1000aa98:	lea    eax,[ebp-0x2c]
1000aa9b:	push   eax
1000aa9c:	push   esi
1000aa9d:	call   DWORD PTR ds:0x100653c0
1000aaa3:	test   eax,eax
1000aaa5:	je     0x1000aa5c
1000aaa7:	mov    eax,DWORD PTR [ebp+0x8]
1000aaaa:	mov    eax,DWORD PTR [eax+0x30]
1000aaad:	mov    ecx,DWORD PTR [ebp-0x4]
1000aab0:	cmp    ecx,DWORD PTR [eax+0x18]
1000aab3:	jne    0x1000aa5c
1000aab5:	cmp    edi,ebx
1000aab7:	je     0x1000aac0
1000aab9:	push   edi
1000aaba:	call   DWORD PTR ds:0x100653c8
1000aac0:	mov    al,0x1
1000aac2:	pop    edi
1000aac3:	pop    esi
1000aac4:	pop    ebx
1000aac5:	leave  
1000aac6:	ret    0x4
1000aac9:	push   ebp
1000aaca:	mov    ebp,esp
1000aacc:	and    esp,0xfffffff8
1000aacf:	push   0xffffffff
1000aad1:	push   0x100633dc
1000aad6:	mov    eax,fs:0x0
1000aadc:	push   eax
1000aadd:	sub    esp,0x94
1000aae3:	push   ebx
1000aae4:	push   esi
1000aae5:	mov    eax,ds:0x1007d030
1000aaea:	xor    eax,esp
1000aaec:	push   eax
1000aaed:	lea    eax,[esp+0xa0]
1000aaf4:	mov    fs:0x0,eax
1000aafa:	mov    esi,ecx
1000aafc:	push   0x371544d8
1000ab01:	push   0x1006c104
1000ab06:	call   0x10003d63
1000ab0b:	push   0xd20d77c
1000ab10:	push   eax
1000ab11:	call   0x10003d63
1000ab16:	push   eax
1000ab17:	push   0x3
1000ab19:	push   0x1006c144
1000ab1e:	call   0x10003d75
1000ab23:	add    esp,0x1c
1000ab26:	push   eax
1000ab27:	lea    ecx,[esp+0x4c]
1000ab2b:	call   0x100011d6
1000ab30:	xor    ebx,ebx
1000ab32:	mov    DWORD PTR [esp+0xa8],ebx
1000ab39:	cmp    DWORD PTR [esi+0x18],0x10
1000ab3d:	jb     0x1000ab44
1000ab3f:	mov    esi,DWORD PTR [esi+0x4]
1000ab42:	jmp    0x1000ab47
1000ab44:	add    esi,0x4
1000ab47:	push   esi
1000ab48:	lea    ecx,[esp+0x68]
1000ab4c:	call   0x100011d6
1000ab51:	push   0x1c98928a
1000ab56:	push   0x1006c148
1000ab5b:	mov    BYTE PTR [esp+0xb0],0x1
1000ab63:	call   0x10003d63
1000ab68:	push   eax
1000ab69:	push   0x3
1000ab6b:	push   0x1006c178
1000ab70:	call   0x10003d75
1000ab75:	add    esp,0x14
1000ab78:	push   eax
1000ab79:	lea    ecx,[esp+0x30]
1000ab7d:	call   0x100011d6
1000ab82:	lea    eax,[esp+0x48]
1000ab86:	push   eax
1000ab87:	lea    eax,[esp+0x68]
1000ab8b:	push   eax
1000ab8c:	lea    ecx,[esp+0x34]
1000ab90:	mov    BYTE PTR [esp+0xb0],0x2
1000ab98:	call   0x10008f03
1000ab9d:	mov    esi,eax
1000ab9f:	mov    eax,DWORD PTR [edi]
1000aba1:	cmp    esi,eax
1000aba3:	pop    ecx
1000aba4:	pop    ecx
1000aba5:	je     0x1000abb1
1000aba7:	cmp    eax,ebx
1000aba9:	je     0x1000abb1
1000abab:	push   eax
1000abac:	call   0x100099e0
1000abb1:	push   ebx
1000abb2:	push   0x1
1000abb4:	lea    ecx,[esp+0x34]
1000abb8:	mov    DWORD PTR [edi],esi
1000abba:	call   0x100012f9
1000abbf:	push   ebx
1000abc0:	push   0x1
1000abc2:	lea    ecx,[esp+0x6c]
1000abc6:	call   0x100012f9
1000abcb:	or     DWORD PTR [esp+0xa8],0xffffffff
1000abd3:	push   ebx
1000abd4:	push   0x1
1000abd6:	lea    ecx,[esp+0x50]
1000abda:	call   0x100012f9
1000abdf:	push   0x279c4662
1000abe4:	push   0x1006c17c
1000abe9:	call   0x10003d63
1000abee:	push   eax
1000abef:	push   0x4
1000abf1:	push   0x1006c070
1000abf6:	call   0x10003d75
1000abfb:	add    esp,0x14
1000abfe:	push   eax
1000abff:	lea    ecx,[esp+0x84]
1000ac06:	call   0x100011d6
1000ac0b:	mov    esi,DWORD PTR [ebp+0x8]
1000ac0e:	mov    DWORD PTR [esp+0xa8],0x3
1000ac19:	mov    eax,DWORD PTR [edi]
1000ac1b:	push   ebx
1000ac1c:	lea    edx,[esp+0x84]
1000ac23:	push   edx
1000ac24:	lea    ecx,[esi+0x18]
1000ac27:	lea    edx,[eax+0x18]
1000ac2a:	call   0x10007aa4
1000ac2f:	or     DWORD PTR [esp+0xa8],0xffffffff
1000ac37:	push   ebx
1000ac38:	push   0x1
1000ac3a:	lea    ecx,[esp+0x88]
1000ac41:	call   0x100012f9
1000ac46:	push   DWORD PTR [ebp+0xc]
1000ac49:	lea    eax,[esp+0x18]
1000ac4d:	push   eax
1000ac4e:	call   0x1000f0f5
1000ac53:	pop    ecx
1000ac54:	pop    ecx
1000ac55:	mov    DWORD PTR [esp+0xa8],0x4
1000ac60:	mov    DWORD PTR [esp+0x10],ebx
1000ac64:	cmp    DWORD PTR [esp+0x18],ebx
1000ac68:	jne    0x1000ac6e
1000ac6a:	xor    eax,eax
1000ac6c:	jmp    0x1000ac79
1000ac6e:	mov    eax,DWORD PTR [esp+0x1c]
1000ac72:	sub    eax,DWORD PTR [esp+0x18]
1000ac76:	sar    eax,0x4
1000ac79:	cmp    DWORD PTR [esp+0x10],eax
1000ac7d:	je     0x1000ace4
1000ac7f:	push   DWORD PTR [esp+0x10]
1000ac83:	lea    esi,[esp+0x18]
1000ac87:	call   0x1000c4a9
1000ac8c:	call   0x1000c4c8
1000ac91:	cmp    eax,0x2
1000ac94:	jne    0x1000acdb
1000ac96:	mov    eax,DWORD PTR [edi]
1000ac98:	push   ebx
1000ac99:	push   0x1
1000ac9b:	push   DWORD PTR [esp+0x18]
1000ac9f:	mov    DWORD PTR [esp+0x34],eax
1000aca3:	call   0x1000c4a9
1000aca8:	mov    esi,eax
1000acaa:	call   0x1000c4de
1000acaf:	push   ebx
1000acb0:	push   DWORD PTR [esp+0x18]
1000acb4:	lea    esi,[esp+0x20]
1000acb8:	mov    DWORD PTR [esp+0x30],eax
1000acbc:	call   0x1000c4a9
1000acc1:	mov    esi,eax
1000acc3:	call   0x1000c4de
1000acc8:	mov    edx,DWORD PTR [esp+0x2c]
1000accc:	push   eax
1000accd:	mov    eax,DWORD PTR [esp+0x2c]
1000acd1:	add    edx,0x18
1000acd4:	mov    ecx,eax
1000acd6:	call   0x10007aa4
1000acdb:	inc    DWORD PTR [esp+0x10]
1000acdf:	mov    esi,DWORD PTR [ebp+0x8]
1000ace2:	jmp    0x1000ac64
1000ace4:	cmp    DWORD PTR [esi+0x54],ebx
1000ace7:	mov    ecx,DWORD PTR [edi]
1000ace9:	setne  al
1000acec:	push   eax
1000aced:	call   0x1000b09f
1000acf2:	call   0x1000207c
1000acf7:	push   DWORD PTR [edi]
1000acf9:	mov    eax,esi
1000acfb:	call   0x1000a9f7
1000ad00:	test   al,al
1000ad02:	je     0x1000ad13
1000ad04:	mov    esi,DWORD PTR [esi+0x10]
1000ad07:	call   0x1000d8e6
1000ad0c:	test   al,al
1000ad0e:	je     0x1000ad76
1000ad10:	mov    esi,DWORD PTR [ebp+0x8]
1000ad13:	call   0x1000207c
1000ad18:	mov    eax,DWORD PTR [esi+0x8]
1000ad1b:	cmp    eax,ebx
1000ad1d:	je     0x1000ad26
1000ad1f:	push   eax
1000ad20:	call   DWORD PTR ds:0x100653b8
1000ad26:	mov    DWORD PTR [esi+0x8],ebx
1000ad29:	call   0x1000a60b
1000ad2e:	test   al,al
1000ad30:	jne    0x1000ad54
1000ad32:	lea    esi,[esp+0x14]
1000ad36:	call   0x1000cbf0
1000ad3b:	xor    al,al
1000ad3d:	mov    ecx,DWORD PTR [esp+0xa0]
1000ad44:	mov    DWORD PTR fs:0x0,ecx
1000ad4b:	pop    ecx
1000ad4c:	pop    esi
1000ad4d:	pop    ebx
1000ad4e:	mov    esp,ebp
1000ad50:	pop    ebp
1000ad51:	ret    0x8
1000ad54:	mov    esi,DWORD PTR [ebp+0x8]
1000ad57:	call   0x1000a741
1000ad5c:	push   DWORD PTR [edi]
1000ad5e:	mov    eax,esi
1000ad60:	call   0x1000a9f7
1000ad65:	test   al,al
1000ad67:	jne    0x1000ad76
1000ad69:	lea    esi,[esp+0x14]
1000ad6d:	call   0x1000cbf0
1000ad72:	mov    al,bl
1000ad74:	jmp    0x1000ad3d
1000ad76:	mov    bl,0x1
1000ad78:	jmp    0x1000ad69
1000ad7a:	push   0x50
1000ad7c:	mov    eax,0x10063396
1000ad81:	call   0x10058845
1000ad86:	mov    esi,ecx
1000ad88:	xor    edi,edi
1000ad8a:	mov    DWORD PTR [ebp-0x18],edi
1000ad8d:	mov    DWORD PTR [ebp-0x14],edi
1000ad90:	xor    ebx,ebx
1000ad92:	lea    eax,[ebp-0x5c]
1000ad95:	inc    ebx
1000ad96:	mov    DWORD PTR [ebp-0x4],ebx
1000ad99:	push   eax
1000ad9a:	mov    DWORD PTR [esi],edi
1000ad9c:	call   0x10008a1c
1000ada1:	mov    eax,DWORD PTR [ebp+0x8]
1000ada4:	lea    ecx,[ebp-0x5c]
1000ada7:	mov    BYTE PTR [ebp-0x4],0x2
1000adab:	mov    eax,DWORD PTR [eax+0x14]
1000adae:	push   ecx
1000adaf:	push   eax
1000adb0:	call   0x1000e023
1000adb5:	test   eax,eax
1000adb7:	je     0x1000adc3
1000adb9:	mov    esi,DWORD PTR [ebp+0xc]
1000adbc:	mov    DWORD PTR [ebp-0x14],edi
1000adbf:	mov    DWORD PTR [esi],edi
1000adc1:	jmp    0x1000ae31
1000adc3:	mov    eax,DWORD PTR [ebp+0x8]
1000adc6:	push   DWORD PTR [ebp+0x10]
1000adc9:	mov    ecx,DWORD PTR [eax+0x14]
1000adcc:	lea    edx,[ebp-0x5c]
1000adcf:	call   0x1000e101
1000add4:	test   eax,eax
1000add6:	je     0x1000addf
1000add8:	mov    esi,DWORD PTR [ebp+0xc]
1000addb:	mov    DWORD PTR [esi],edi
1000addd:	jmp    0x1000ae2e
1000addf:	push   DWORD PTR [ebp+0x8]
1000ade2:	lea    ecx,[ebp-0x5c]
1000ade5:	call   0x1000ae51
1000adea:	mov    eax,DWORD PTR [ebp-0x50]
1000aded:	mov    eax,DWORD PTR [eax+0x18]
1000adf0:	push   eax
1000adf1:	mov    DWORD PTR [esi],eax
1000adf3:	call   0x10042609
1000adf8:	cmp    eax,edi
1000adfa:	pop    ecx
1000adfb:	mov    DWORD PTR [ebp+0x8],eax
1000adfe:	je     0x1000ae07
1000ae00:	push   edi
1000ae01:	call   0x10041d92
1000ae06:	pop    ecx
1000ae07:	mov    eax,DWORD PTR [ebp-0x50]
1000ae0a:	cmp    DWORD PTR [eax+0x1c],0x10
1000ae0e:	jb     0x1000ae15
1000ae10:	mov    eax,DWORD PTR [eax+0x8]
1000ae13:	jmp    0x1000ae18
1000ae15:	add    eax,0x8
1000ae18:	push   DWORD PTR [esi]
1000ae1a:	push   eax
1000ae1b:	push   DWORD PTR [ebp+0x8]
1000ae1e:	call   0x10043ed0
1000ae23:	mov    eax,DWORD PTR [ebp+0x8]
1000ae26:	mov    esi,DWORD PTR [ebp+0xc]
1000ae29:	add    esp,0xc
1000ae2c:	mov    DWORD PTR [esi],eax
1000ae2e:	mov    DWORD PTR [ebp-0x14],edi
1000ae31:	lea    eax,[ebp-0x5c]
1000ae34:	push   eax
1000ae35:	mov    DWORD PTR [ebp-0x18],ebx
1000ae38:	mov    BYTE PTR [ebp-0x4],bl
1000ae3b:	call   0x10009a43
1000ae40:	push   edi
1000ae41:	call   0x10041d92
1000ae46:	pop    ecx
1000ae47:	mov    eax,esi
1000ae49:	call   0x1005891d
1000ae4e:	ret    0xc
1000ae51:	push   ebp
1000ae52:	mov    ebp,esp
1000ae54:	and    esp,0xfffffff8
1000ae57:	push   0xffffffff
1000ae59:	push   0x10060eb9
1000ae5e:	mov    eax,fs:0x0
1000ae64:	push   eax
1000ae65:	sub    esp,0x78
1000ae68:	push   ebx
1000ae69:	push   esi
1000ae6a:	push   edi
1000ae6b:	mov    eax,ds:0x1007d030
1000ae70:	xor    eax,esp
1000ae72:	push   eax
1000ae73:	lea    eax,[esp+0x88]
1000ae7a:	mov    fs:0x0,eax
1000ae80:	mov    ebx,ecx
1000ae82:	mov    eax,DWORD PTR [ebx]
1000ae84:	lea    ecx,[esp+0x14]
1000ae88:	push   ecx
1000ae89:	call   0x100194bf
1000ae8e:	mov    esi,eax
1000ae90:	push   0x6000c99a
1000ae95:	xor    edi,edi
1000ae97:	push   0x1006c1ac
1000ae9c:	mov    DWORD PTR [esp+0x98],edi
1000aea3:	call   0x10003d63
1000aea8:	push   0x3fc35b94
1000aead:	push   eax
1000aeae:	call   0x10003d63
1000aeb3:	push   0x471aedda
1000aeb8:	push   eax
1000aeb9:	call   0x10003d63
1000aebe:	push   eax
1000aebf:	push   0x3
1000aec1:	push   0x1006c144
1000aec6:	call   0x10003d75
1000aecb:	add    esp,0x24
1000aece:	push   eax
1000aecf:	call   0x10005e33
1000aed4:	or     DWORD PTR [esp+0x94],0xffffffff
1000aedc:	pop    ecx
1000aedd:	xor    esi,esi
1000aedf:	push   edi
1000aee0:	inc    esi
1000aee1:	push   esi
1000aee2:	lea    ecx,[esp+0x1c]
1000aee6:	mov    BYTE PTR [esp+0x1b],al
1000aeea:	call   0x100012f9
1000aeef:	cmp    BYTE PTR [esp+0x13],0x0
1000aef4:	je     0x1000af98
1000aefa:	push   0x72b12944
1000aeff:	push   0x1006c228
1000af04:	call   0x10003d63
1000af09:	push   eax
1000af0a:	push   0xa
1000af0c:	push   0x1006c260
1000af11:	call   0x10003d75
1000af16:	add    esp,0x14
1000af19:	push   eax
1000af1a:	lea    ecx,[esp+0x18]
1000af1e:	call   0x100011d6
1000af23:	push   edi
1000af24:	lea    eax,[esp+0x18]
1000af28:	push   eax
1000af29:	lea    eax,[esp+0x54]
1000af2d:	push   eax
1000af2e:	lea    eax,[ebx+0x20]
1000af31:	mov    DWORD PTR [esp+0x9c],esi
1000af38:	call   0x1000800f
1000af3d:	mov    BYTE PTR [esp+0x90],0x2
1000af45:	cmp    DWORD PTR [eax+0x18],0x10
1000af49:	jb     0x1000af50
1000af4b:	mov    ebx,DWORD PTR [eax+0x4]
1000af4e:	jmp    0x1000af53
1000af50:	lea    ebx,[eax+0x4]
1000af53:	push   0x1006c1dc
1000af58:	push   0xa
1000af5a:	push   0x1006c21c
1000af5f:	call   0x10003d75
1000af64:	add    esp,0xc
1000af67:	push   eax
1000af68:	push   ebx
1000af69:	call   0x100443bf
1000af6e:	pop    ecx
1000af6f:	pop    ecx
1000af70:	mov    ebx,eax
1000af72:	neg    ebx
1000af74:	push   edi
1000af75:	sbb    bl,bl
1000af77:	push   esi
1000af78:	lea    ecx,[esp+0x54]
1000af7c:	inc    bl
1000af7e:	call   0x100012f9
1000af83:	push   edi
1000af84:	push   esi
1000af85:	lea    ecx,[esp+0x1c]
1000af89:	call   0x100012f9
1000af8e:	test   bl,bl
1000af90:	setne  al
1000af93:	jmp    0x1000b081
1000af98:	push   0x299c4f5a
1000af9d:	push   0x1006c2b0
1000afa2:	call   0x10003d63
1000afa7:	push   0xfe5fefa
1000afac:	push   eax
1000afad:	call   0x10003d63
1000afb2:	push   0x6c28d38e
1000afb7:	push   eax
1000afb8:	call   0x10003d63
1000afbd:	push   eax
1000afbe:	push   0xa
1000afc0:	push   0x1006c260
1000afc5:	call   0x10003d75
1000afca:	add    esp,0x24
1000afcd:	push   eax
1000afce:	lea    ecx,[esp+0x34]
1000afd2:	call   0x100011d6
1000afd7:	push   edi
1000afd8:	lea    eax,[esp+0x34]
1000afdc:	push   eax
1000afdd:	lea    eax,[esp+0x70]
1000afe1:	push   eax
1000afe2:	lea    eax,[ebx+0x20]
1000afe5:	mov    DWORD PTR [esp+0x9c],0x3
1000aff0:	call   0x1000800f
1000aff5:	mov    ebx,eax
1000aff7:	push   0x36f557bc
1000affc:	push   0x245f60ec
1000b001:	push   0x30cc1bcc
1000b006:	push   0x2e4fa3aa
1000b00b:	push   0x1006c26c
1000b010:	mov    BYTE PTR [esp+0xa4],0x4
1000b018:	call   0x10003d63
1000b01d:	pop    ecx
1000b01e:	pop    ecx
1000b01f:	push   eax
1000b020:	call   0x10003d63
1000b025:	pop    ecx
1000b026:	pop    ecx
1000b027:	push   eax
1000b028:	call   0x10003d63
1000b02d:	pop    ecx
1000b02e:	pop    ecx
1000b02f:	push   eax
1000b030:	call   0x10003d63
1000b035:	cmp    DWORD PTR [ebx+0x18],0x10
1000b039:	pop    ecx
1000b03a:	pop    ecx
1000b03b:	jb     0x1000b042
1000b03d:	mov    ebx,DWORD PTR [ebx+0x4]
1000b040:	jmp    0x1000b045
1000b042:	add    ebx,0x4
1000b045:	push   eax
1000b046:	push   0x5
1000b048:	push   0x1006c2a8
1000b04d:	call   0x10003d75
1000b052:	add    esp,0xc
1000b055:	push   eax
1000b056:	push   ebx
1000b057:	call   0x100443bf
1000b05c:	pop    ecx
1000b05d:	pop    ecx
1000b05e:	mov    ebx,eax
1000b060:	neg    ebx
1000b062:	push   edi
1000b063:	sbb    bl,bl
1000b065:	push   esi
1000b066:	lea    ecx,[esp+0x70]
1000b06a:	inc    bl
1000b06c:	call   0x100012f9
1000b071:	push   edi
1000b072:	push   esi
1000b073:	lea    ecx,[esp+0x38]
1000b077:	call   0x100012f9
1000b07c:	test   bl,bl
1000b07e:	sete   al
1000b081:	mov    ecx,DWORD PTR [ebp+0x8]
1000b084:	mov    BYTE PTR [ecx+0x58],al
1000b087:	mov    ecx,DWORD PTR [esp+0x88]
1000b08e:	mov    DWORD PTR fs:0x0,ecx
1000b095:	pop    ecx
1000b096:	pop    edi
1000b097:	pop    esi
1000b098:	pop    ebx
1000b099:	mov    esp,ebp
1000b09b:	pop    ebp
1000b09c:	ret    0x4
1000b09f:	push   0x200
1000b0a4:	mov    eax,0x10061b01
1000b0a9:	call   0x100588ae
1000b0ae:	mov    esi,ecx
1000b0b0:	push   0x76346fca
1000b0b5:	push   0x1006c2f0
1000b0ba:	mov    DWORD PTR [ebp-0x160],esi
1000b0c0:	call   0x10003d63
1000b0c5:	push   0x217e3a7a
1000b0ca:	push   eax
1000b0cb:	call   0x10003d63
1000b0d0:	push   0x3361f804
1000b0d5:	push   eax
1000b0d6:	call   0x10003d63
1000b0db:	push   0x4c957b16
1000b0e0:	push   eax
1000b0e1:	call   0x10003d63
1000b0e6:	push   eax
1000b0e7:	push   0x7
1000b0e9:	push   0x1006c320
1000b0ee:	call   0x10003d75
1000b0f3:	add    esp,0x2c
1000b0f6:	push   eax
1000b0f7:	lea    ecx,[ebp-0x180]
1000b0fd:	call   0x100011d6
1000b102:	lea    ecx,[ebp-0x180]
1000b108:	lea    eax,[esi+0x18]
1000b10b:	push   ecx
1000b10c:	xor    ebx,ebx
1000b10e:	push   eax
1000b10f:	mov    DWORD PTR [ebp-0x4],ebx
1000b112:	mov    DWORD PTR [ebp-0x15c],eax
1000b118:	call   0x10007dad
1000b11d:	or     DWORD PTR [ebp-0x4],0xffffffff
1000b121:	xor    edi,edi
1000b123:	push   ebx
1000b124:	inc    edi
1000b125:	push   edi
1000b126:	lea    ecx,[ebp-0x180]
1000b12c:	call   0x100012f9
1000b131:	lea    ecx,[ebp-0xc0]
1000b137:	call   0x100127d9
1000b13c:	push   0x1006bb18
1000b141:	lea    esi,[ebp-0xc0]
1000b147:	mov    DWORD PTR [ebp-0x4],edi
1000b14a:	call   0x10005e33
1000b14f:	test   al,al
1000b151:	pop    ecx
1000b152:	jne    0x1000b200
1000b158:	push   0x5839fdd8
1000b15d:	push   0x1006c328
1000b162:	call   0x10003d63
1000b167:	push   eax
1000b168:	push   0xa
1000b16a:	mov    esi,0x1006c358
1000b16f:	push   esi
1000b170:	call   0x10003d75
1000b175:	add    esp,0x14
1000b178:	push   eax
1000b179:	lea    ecx,[ebp-0x180]
1000b17f:	call   0x100011d6
1000b184:	lea    eax,[ebp-0x180]
1000b18a:	push   eax
1000b18b:	push   DWORD PTR [ebp-0x15c]
1000b191:	mov    BYTE PTR [ebp-0x4],0x2
1000b195:	call   0x10007dad
1000b19a:	push   ebx
1000b19b:	push   edi
1000b19c:	lea    ecx,[ebp-0x180]
1000b1a2:	mov    BYTE PTR [ebp-0x4],0x1
1000b1a6:	call   0x100012f9
1000b1ab:	push   0x7bb6695e
1000b1b0:	push   0x1006c364
1000b1b5:	call   0x10003d63
1000b1ba:	push   eax
1000b1bb:	push   0xa
1000b1bd:	push   esi
1000b1be:	call   0x10003d75
1000b1c3:	add    esp,0x14
1000b1c6:	push   eax
1000b1c7:	lea    ecx,[ebp-0x180]
1000b1cd:	call   0x100011d6
1000b1d2:	mov    edx,DWORD PTR [ebp-0x15c]
1000b1d8:	push   ebx
1000b1d9:	lea    eax,[ebp-0x180]
1000b1df:	push   eax
1000b1e0:	lea    ecx,[ebp-0xc0]
1000b1e6:	mov    BYTE PTR [ebp-0x4],0x3
1000b1ea:	call   0x10007aa4
1000b1ef:	push   ebx
1000b1f0:	push   edi
1000b1f1:	lea    ecx,[ebp-0x180]
1000b1f7:	mov    BYTE PTR [ebp-0x4],0x1
1000b1fb:	call   0x100012f9
1000b200:	push   0x1006bb18
1000b205:	lea    esi,[ebp-0x6c]
1000b208:	call   0x10005e33
1000b20d:	test   al,al
1000b20f:	pop    ecx
1000b210:	jne    0x1000b2d1
1000b216:	push   0x3ca1ca16
1000b21b:	push   0x1006c3a0
1000b220:	call   0x10003d63
1000b225:	push   0x6f60168e
1000b22a:	push   eax
1000b22b:	call   0x10003d63
1000b230:	push   eax
1000b231:	push   0xf
1000b233:	mov    esi,0x1006c3d4
1000b238:	push   esi
1000b239:	call   0x10003d75
1000b23e:	add    esp,0x1c
1000b241:	push   eax
1000b242:	lea    ecx,[ebp-0x180]
1000b248:	call   0x100011d6
1000b24d:	lea    eax,[ebp-0x180]
1000b253:	push   eax
1000b254:	push   DWORD PTR [ebp-0x15c]
1000b25a:	mov    BYTE PTR [ebp-0x4],0x4
1000b25e:	call   0x10007dad
1000b263:	push   ebx
1000b264:	push   edi
1000b265:	lea    ecx,[ebp-0x180]
1000b26b:	mov    BYTE PTR [ebp-0x4],0x1
1000b26f:	call   0x100012f9
1000b274:	push   0x5ecf5956
1000b279:	push   0x1006c3e4
1000b27e:	call   0x10003d63
1000b283:	push   0xd46aebc
1000b288:	push   eax
1000b289:	call   0x10003d63
1000b28e:	push   eax
1000b28f:	push   0xf
1000b291:	push   esi
1000b292:	call   0x10003d75
1000b297:	add    esp,0x1c
1000b29a:	push   eax
1000b29b:	lea    ecx,[ebp-0x180]
1000b2a1:	call   0x100011d6
1000b2a6:	mov    edx,DWORD PTR [ebp-0x15c]
1000b2ac:	push   ebx
1000b2ad:	lea    eax,[ebp-0x180]
1000b2b3:	push   eax
1000b2b4:	lea    ecx,[ebp-0x6c]
1000b2b7:	mov    BYTE PTR [ebp-0x4],0x5
1000b2bb:	call   0x10007aa4
1000b2c0:	push   ebx
1000b2c1:	push   edi
1000b2c2:	lea    ecx,[ebp-0x180]
1000b2c8:	mov    BYTE PTR [ebp-0x4],0x1
1000b2cc:	call   0x100012f9
1000b2d1:	push   0x1006bb18
1000b2d6:	lea    esi,[ebp-0x88]
1000b2dc:	call   0x10005e33
1000b2e1:	test   al,al
1000b2e3:	pop    ecx
1000b2e4:	jne    0x1000b48d
1000b2ea:	lea    edi,[ebp-0x158]
1000b2f0:	call   0x1000b784
1000b2f5:	mov    eax,esi
1000b2f7:	push   eax
1000b2f8:	lea    ecx,[ebp-0x2c]
1000b2fb:	mov    BYTE PTR [ebp-0x4],0x6
1000b2ff:	call   0x100011b0
1000b304:	cmp    BYTE PTR [ebp+0x8],bl
1000b307:	mov    BYTE PTR [ebp-0x4],0x7
1000b30b:	je     0x1000b45c
1000b311:	mov    eax,edi
1000b313:	push   eax
1000b314:	lea    ecx,[ebp-0x2c]
1000b317:	call   0x10032860
1000b31c:	test   al,al
1000b31e:	pop    ecx
1000b31f:	je     0x1000b45c
1000b325:	push   0x72d1fefa
1000b32a:	push   0x1006c418
1000b32f:	call   0x10003d63
1000b334:	push   0x52946190
1000b339:	push   eax
1000b33a:	call   0x10003d63
1000b33f:	push   eax
1000b340:	push   0x4
1000b342:	push   0x1006c070
1000b347:	call   0x10003d75
1000b34c:	add    esp,0x1c
1000b34f:	push   eax
1000b350:	lea    ecx,[ebp-0x180]
1000b356:	call   0x100011d6
1000b35b:	push   ebx
1000b35c:	lea    eax,[ebp-0x180]
1000b362:	push   eax
1000b363:	lea    eax,[ebp-0x1b8]
1000b369:	push   eax
1000b36a:	mov    eax,DWORD PTR [ebp-0x15c]
1000b370:	mov    BYTE PTR [ebp-0x4],0x8
1000b374:	call   0x1000800f
1000b379:	mov    esi,eax
1000b37b:	push   0x73721c42
1000b380:	push   0x1006c44c
1000b385:	mov    BYTE PTR [ebp-0x4],0x9
1000b389:	call   0x10003d63
1000b38e:	push   eax
1000b38f:	push   0x7
1000b391:	push   0x1006c028
1000b396:	call   0x10003d75
1000b39b:	add    esp,0x14
1000b39e:	push   eax
1000b39f:	lea    ecx,[ebp-0x1f0]
1000b3a5:	call   0x100011d6
1000b3aa:	push   esi
1000b3ab:	push   eax
1000b3ac:	lea    eax,[ebp-0x20c]
1000b3b2:	push   eax
1000b3b3:	mov    BYTE PTR [ebp-0x4],0xa
1000b3b7:	call   0x1000a3d1
1000b3bc:	add    esp,0xc
1000b3bf:	lea    ecx,[ebp-0xfc]
1000b3c5:	push   ecx
1000b3c6:	push   eax
1000b3c7:	lea    eax,[ebp-0x1d4]
1000b3cd:	push   eax
1000b3ce:	mov    BYTE PTR [ebp-0x4],0xb
1000b3d2:	call   0x1000a3d1
1000b3d7:	add    esp,0xc
1000b3da:	lea    ecx,[ebp-0xe0]
1000b3e0:	push   ecx
1000b3e1:	push   eax
1000b3e2:	lea    eax,[ebp-0x19c]
1000b3e8:	push   eax
1000b3e9:	mov    BYTE PTR [ebp-0x4],0xc
1000b3ed:	call   0x1000a3d1
1000b3f2:	add    esp,0xc
1000b3f5:	push   0xffffffff
1000b3f7:	push   ebx
1000b3f8:	push   eax
1000b3f9:	lea    ecx,[ebp-0x2c]
1000b3fc:	mov    BYTE PTR [ebp-0x4],0xd
1000b400:	call   0x1000124a
1000b405:	xor    edi,edi
1000b407:	push   ebx
1000b408:	inc    edi
1000b409:	push   edi
1000b40a:	lea    ecx,[ebp-0x19c]
1000b410:	call   0x100012f9
1000b415:	push   ebx
1000b416:	push   edi
1000b417:	lea    ecx,[ebp-0x1d4]
1000b41d:	call   0x100012f9
1000b422:	push   ebx
1000b423:	push   edi
1000b424:	lea    ecx,[ebp-0x20c]
1000b42a:	call   0x100012f9
1000b42f:	push   ebx
1000b430:	push   edi
1000b431:	lea    ecx,[ebp-0x1f0]
1000b437:	call   0x100012f9
1000b43c:	push   ebx
1000b43d:	push   edi
1000b43e:	lea    ecx,[ebp-0x1b8]
1000b444:	call   0x100012f9
1000b449:	push   ebx
1000b44a:	push   edi
1000b44b:	lea    ecx,[ebp-0x180]
1000b451:	mov    BYTE PTR [ebp-0x4],0x7
1000b455:	call   0x100012f9
1000b45a:	jmp    0x1000b45f
1000b45c:	xor    edi,edi
1000b45e:	inc    edi
1000b45f:	mov    eax,DWORD PTR [ebp-0x160]
1000b465:	mov    esi,DWORD PTR [eax+0x4]
1000b468:	lea    eax,[ebp-0x2c]
1000b46b:	push   eax
1000b46c:	call   0x100074cf
1000b471:	push   ebx
1000b472:	push   edi
1000b473:	lea    ecx,[ebp-0x2c]
1000b476:	call   0x100012f9
1000b47b:	lea    esi,[ebp-0x158]
1000b481:	mov    BYTE PTR [ebp-0x4],0x1
1000b485:	call   0x1000b7b1
1000b48a:	xor    edi,edi
1000b48c:	inc    edi
1000b48d:	cmp    BYTE PTR [ebp+0x8],bl
1000b490:	jne    0x1000b578
1000b496:	push   0x1006bb18
1000b49b:	lea    esi,[ebp-0xa4]
1000b4a1:	call   0x10005e33
1000b4a6:	test   al,al
1000b4a8:	pop    ecx
1000b4a9:	jne    0x1000b578
1000b4af:	push   0x61c7e118
1000b4b4:	push   0x1006c474
1000b4b9:	call   0x10003d63
1000b4be:	push   0xf19b802
1000b4c3:	push   eax
1000b4c4:	call   0x10003d63
1000b4c9:	push   0x1559c946
1000b4ce:	push   eax
1000b4cf:	call   0x10003d63
1000b4d4:	push   eax
1000b4d5:	push   0x4
1000b4d7:	mov    esi,0x1006c070
1000b4dc:	push   esi
1000b4dd:	call   0x10003d75
1000b4e2:	add    esp,0x24
1000b4e5:	push   eax
1000b4e6:	lea    ecx,[ebp-0x180]
1000b4ec:	call   0x100011d6
1000b4f1:	lea    eax,[ebp-0x180]
1000b4f7:	push   eax
1000b4f8:	push   DWORD PTR [ebp-0x15c]
1000b4fe:	mov    BYTE PTR [ebp-0x4],0xe
1000b502:	call   0x10007dad
1000b507:	push   ebx
1000b508:	push   edi
1000b509:	lea    ecx,[ebp-0x180]
1000b50f:	mov    BYTE PTR [ebp-0x4],0x1
1000b513:	call   0x100012f9
1000b518:	push   0x4b6aded2
1000b51d:	push   0x1006c4ac
1000b522:	call   0x10003d63
1000b527:	push   0x636fa4be
1000b52c:	push   eax
1000b52d:	call   0x10003d63
1000b532:	push   eax
1000b533:	push   0x4
1000b535:	push   esi
1000b536:	call   0x10003d75
1000b53b:	add    esp,0x1c
1000b53e:	push   eax
1000b53f:	lea    ecx,[ebp-0x180]
1000b545:	call   0x100011d6
1000b54a:	mov    edx,DWORD PTR [ebp-0x15c]
1000b550:	push   ebx
1000b551:	lea    eax,[ebp-0x180]
1000b557:	push   eax
1000b558:	lea    ecx,[ebp-0xa4]
1000b55e:	mov    BYTE PTR [ebp-0x4],0xf
1000b562:	call   0x10007aa4
1000b567:	push   ebx
1000b568:	push   edi
1000b569:	lea    ecx,[ebp-0x180]
1000b56f:	mov    BYTE PTR [ebp-0x4],0x1
1000b573:	call   0x100012f9
1000b578:	push   0x1006bb18
1000b57d:	lea    esi,[ebp-0x50]
1000b580:	call   0x10005e33
1000b585:	test   al,al
1000b587:	pop    ecx
1000b588:	jne    0x1000b59c
1000b58a:	mov    eax,DWORD PTR [ebp-0x160]
1000b590:	mov    esi,DWORD PTR [eax+0x8]
1000b593:	lea    eax,[ebp-0x50]
1000b596:	push   eax
1000b597:	call   0x100074cf
1000b59c:	push   0x11a50ea6
1000b5a1:	push   0x1006c4e8
1000b5a6:	call   0x10003d63
1000b5ab:	push   0x262ca0ea
1000b5b0:	push   eax
1000b5b1:	call   0x10003d63
1000b5b6:	push   eax
1000b5b7:	push   0x6
1000b5b9:	mov    esi,0x1006c510
1000b5be:	push   esi
1000b5bf:	call   0x10003d75
1000b5c4:	add    esp,0x1c
1000b5c7:	push   eax
1000b5c8:	lea    ecx,[ebp-0x180]
1000b5ce:	call   0x100011d6
1000b5d3:	push   ebx
1000b5d4:	lea    eax,[ebp-0x180]
1000b5da:	push   eax
1000b5db:	lea    eax,[ebp-0x2c]
1000b5de:	push   eax
1000b5df:	mov    eax,DWORD PTR [ebp-0x15c]
1000b5e5:	mov    BYTE PTR [ebp-0x4],0x10
1000b5e9:	call   0x1000800f
1000b5ee:	push   ebx
1000b5ef:	push   edi
1000b5f0:	lea    ecx,[ebp-0x180]
1000b5f6:	mov    BYTE PTR [ebp-0x4],0x12
1000b5fa:	call   0x100012f9
1000b5ff:	push   0x63e6daa2
1000b604:	push   0x1006c518
1000b609:	call   0x10003d63
1000b60e:	push   eax
1000b60f:	push   0x6
1000b611:	push   esi
1000b612:	call   0x10003d75
1000b617:	add    esp,0x14
1000b61a:	push   eax
1000b61b:	lea    ecx,[ebp-0x19c]
1000b621:	call   0x100011d6
1000b626:	lea    eax,[ebp-0x19c]
1000b62c:	push   eax
1000b62d:	push   DWORD PTR [ebp-0x15c]
1000b633:	mov    BYTE PTR [ebp-0x4],0x13
1000b637:	call   0x10007dad
1000b63c:	push   ebx
1000b63d:	push   edi
1000b63e:	lea    ecx,[ebp-0x19c]
1000b644:	mov    BYTE PTR [ebp-0x4],0x12
1000b648:	call   0x100012f9
1000b64d:	cmp    DWORD PTR [ebp-0x18],ebx
1000b650:	mov    DWORD PTR [ebp-0x164],ebx
1000b656:	jbe    0x1000b72c
1000b65c:	push   DWORD PTR [ebp-0x164]
1000b662:	lea    eax,[ebp-0x2c]
1000b665:	push   0x1006c554
1000b66a:	push   eax
1000b66b:	call   0x1000c40c
1000b670:	cmp    eax,0xffffffff
1000b673:	mov    DWORD PTR [ebp-0x160],eax
1000b679:	jne    0x1000b684
1000b67b:	mov    eax,DWORD PTR [ebp-0x18]
1000b67e:	mov    DWORD PTR [ebp-0x160],eax
1000b684:	cmp    eax,DWORD PTR [ebp-0x164]
1000b68a:	jbe    0x1000b71a
1000b690:	push   0x5e0270de
1000b695:	push   0x1006c558
1000b69a:	call   0x10003d63
1000b69f:	push   eax
1000b6a0:	push   0x6
1000b6a2:	push   esi
1000b6a3:	call   0x10003d75
1000b6a8:	add    esp,0x14
1000b6ab:	push   eax
1000b6ac:	lea    ecx,[ebp-0x19c]
1000b6b2:	call   0x100011d6
1000b6b7:	mov    eax,DWORD PTR [ebp-0x160]
1000b6bd:	sub    eax,DWORD PTR [ebp-0x164]
1000b6c3:	mov    BYTE PTR [ebp-0x4],0x14
1000b6c7:	push   eax
1000b6c8:	push   DWORD PTR [ebp-0x164]
1000b6ce:	lea    eax,[ebp-0x2c]
1000b6d1:	push   eax
1000b6d2:	lea    eax,[ebp-0x1b8]
1000b6d8:	call   0x1000c42b
1000b6dd:	mov    edx,DWORD PTR [ebp-0x15c]
1000b6e3:	push   edi
1000b6e4:	lea    ecx,[ebp-0x19c]
1000b6ea:	push   ecx
1000b6eb:	mov    ecx,eax
1000b6ed:	mov    BYTE PTR [ebp-0x4],0x15
1000b6f1:	call   0x10007aa4
1000b6f6:	push   ebx
1000b6f7:	push   edi
1000b6f8:	lea    ecx,[ebp-0x1b8]
1000b6fe:	call   0x100012f9
1000b703:	push   ebx
1000b704:	push   edi
1000b705:	lea    ecx,[ebp-0x19c]
1000b70b:	mov    BYTE PTR [ebp-0x4],0x12
1000b70f:	call   0x100012f9
1000b714:	mov    eax,DWORD PTR [ebp-0x160]
1000b71a:	cmp    eax,DWORD PTR [ebp-0x18]
1000b71d:	lea    ecx,[eax+0x1]
1000b720:	mov    DWORD PTR [ebp-0x164],ecx
1000b726:	jb     0x1000b65c
1000b72c:	push   ebx
1000b72d:	push   edi
1000b72e:	lea    ecx,[ebp-0x2c]
1000b731:	call   0x100012f9
1000b736:	lea    esi,[ebp-0xc0]
1000b73c:	call   0x1000b749
1000b741:	call   0x10058931
1000b746:	ret    0x4
1000b749:	push   ebx
1000b74a:	xor    ebx,ebx
1000b74c:	push   ebx
1000b74d:	push   0x1
1000b74f:	lea    ecx,[esi+0x70]
1000b752:	call   0x100012f9
1000b757:	push   ebx
1000b758:	push   0x1
1000b75a:	lea    ecx,[esi+0x54]
1000b75d:	call   0x100012f9
1000b762:	push   ebx
1000b763:	push   0x1
1000b765:	lea    ecx,[esi+0x38]
1000b768:	call   0x100012f9
1000b76d:	push   ebx
1000b76e:	push   0x1
1000b770:	lea    ecx,[esi+0x1c]
1000b773:	call   0x100012f9
1000b778:	push   ebx
1000b779:	push   0x1
1000b77b:	mov    ecx,esi
1000b77d:	call   0x100012f9
1000b782:	pop    ebx
1000b783:	ret    
1000b784:	push   esi
1000b785:	lea    esi,[edi+0x4]
1000b788:	call   0x10003ba8
1000b78d:	lea    esi,[edi+0x24]
1000b790:	call   0x10003ba8
1000b795:	lea    esi,[edi+0x40]
1000b798:	call   0x10003ba8
1000b79d:	lea    esi,[edi+0x5c]
1000b7a0:	call   0x10003ba8
1000b7a5:	lea    esi,[edi+0x78]
1000b7a8:	call   0x10003ba8
1000b7ad:	mov    eax,edi
1000b7af:	pop    esi
1000b7b0:	ret    
1000b7b1:	push   ebx
1000b7b2:	xor    ebx,ebx
1000b7b4:	push   ebx
1000b7b5:	push   0x1
1000b7b7:	lea    ecx,[esi+0x78]
1000b7ba:	call   0x100012f9
1000b7bf:	push   ebx
1000b7c0:	push   0x1
1000b7c2:	lea    ecx,[esi+0x5c]
1000b7c5:	call   0x100012f9
1000b7ca:	push   ebx
1000b7cb:	push   0x1
1000b7cd:	lea    ecx,[esi+0x40]
1000b7d0:	call   0x100012f9
1000b7d5:	push   ebx
1000b7d6:	push   0x1
1000b7d8:	lea    ecx,[esi+0x24]
1000b7db:	call   0x100012f9
1000b7e0:	push   ebx
1000b7e1:	push   0x1
1000b7e3:	lea    ecx,[esi+0x4]
1000b7e6:	call   0x100012f9
1000b7eb:	pop    ebx
1000b7ec:	ret    
1000b7ed:	push   0x4
1000b7ef:	mov    eax,0x1005ff85
1000b7f4:	call   0x10058845
1000b7f9:	mov    edi,0x1007fd84
1000b7fe:	xor    ebx,ebx
1000b800:	mov    DWORD PTR [ebp-0x10],edi
1000b803:	mov    DWORD PTR ds:0x1007fd84,ebx
1000b809:	mov    DWORD PTR [ebp-0x4],ebx
1000b80c:	mov    DWORD PTR ds:0x1007fd88,ebx
1000b812:	mov    BYTE PTR [ebp-0x4],0x1
1000b816:	call   0x1000a28a
1000b81b:	mov    ds:0x1007fd90,eax
1000b820:	mov    BYTE PTR [eax+0x39],0x1
1000b824:	mov    eax,ds:0x1007fd90
1000b829:	mov    DWORD PTR [eax+0x4],eax
1000b82c:	mov    eax,ds:0x1007fd90
1000b831:	mov    DWORD PTR [eax],eax
1000b833:	mov    eax,ds:0x1007fd90
1000b838:	push   ebx
1000b839:	push   ebx
1000b83a:	mov    DWORD PTR [eax+0x8],eax
1000b83d:	push   ebx
1000b83e:	mov    DWORD PTR ds:0x1007fd94,ebx
1000b844:	call   DWORD PTR ds:0x10065074
1000b84a:	push   eax
1000b84b:	mov    esi,edi
1000b84d:	call   0x10004365
1000b852:	push   ebx
1000b853:	push   ebx
1000b854:	push   edi
1000b855:	push   0x1000be4f
1000b85a:	push   ebx
1000b85b:	push   ebx
1000b85c:	call   DWORD PTR ds:0x10065098
1000b862:	push   eax
1000b863:	mov    esi,0x1007fd88
1000b868:	call   0x10004365
1000b86d:	mov    eax,edi
1000b86f:	call   0x1005891d
1000b874:	ret    
1000b875:	push   0x40
1000b877:	mov    eax,0x1005ff57
1000b87c:	call   0x10058845
1000b881:	mov    edi,ecx
1000b883:	lea    eax,[ebp-0x30]
1000b886:	push   eax
1000b887:	xor    ebx,ebx
1000b889:	mov    eax,edi
1000b88b:	mov    DWORD PTR [ebp-0x14],ebx
1000b88e:	call   0x1000a9dc
1000b893:	mov    DWORD PTR [ebp-0x4],ebx
1000b896:	push   0x1006bb18
1000b89b:	mov    esi,eax
1000b89d:	mov    DWORD PTR [ebp-0x14],0x1
1000b8a4:	call   0x10005e33
1000b8a9:	test   al,al
1000b8ab:	pop    ecx
1000b8ac:	jne    0x1000b8ba
1000b8ae:	movzx  eax,WORD PTR [edi+0x34]
1000b8b2:	cmp    ax,bx
1000b8b5:	mov    BYTE PTR [ebp-0xd],bl
1000b8b8:	jne    0x1000b8be
1000b8ba:	mov    BYTE PTR [ebp-0xd],0x1
1000b8be:	or     DWORD PTR [ebp-0x4],0xffffffff
1000b8c2:	xor    esi,esi
1000b8c4:	push   ebx
1000b8c5:	inc    esi
1000b8c6:	push   esi
1000b8c7:	lea    ecx,[ebp-0x30]
1000b8ca:	call   0x100012f9
1000b8cf:	cmp    BYTE PTR [ebp-0xd],bl
1000b8d2:	je     0x1000b8db
1000b8d4:	xor    al,al
1000b8d6:	jmp    0x1000b960
1000b8db:	mov    DWORD PTR [ebp-0x14],ebx
1000b8de:	lea    eax,[ebp-0x14]
1000b8e1:	mov    DWORD PTR [ebp-0x4],esi
1000b8e4:	mov    esi,DWORD PTR ds:0x1007fd84
1000b8ea:	push   eax
1000b8eb:	call   0x1000a473
1000b8f0:	test   eax,eax
1000b8f2:	je     0x1000b904
1000b8f4:	cmp    DWORD PTR [ebp-0x14],ebx
1000b8f7:	je     0x1000b8d4
1000b8f9:	push   DWORD PTR [ebp-0x14]
1000b8fc:	call   DWORD PTR ds:0x10065094
1000b902:	jmp    0x1000b8d4
1000b904:	lea    eax,[ebp-0x4c]
1000b907:	push   eax
1000b908:	mov    eax,edi
1000b90a:	call   0x1000a9dc
1000b90f:	mov    BYTE PTR [ebp-0x4],0x2
1000b913:	movzx  ecx,WORD PTR [edi+0x34]
1000b917:	push   0x1
1000b919:	push   ecx
1000b91a:	push   eax
1000b91b:	call   0x1000c169
1000b920:	push   ebx
1000b921:	push   0x1
1000b923:	lea    ecx,[ebp-0x4c]
1000b926:	mov    esi,eax
1000b928:	call   0x100012f9
1000b92d:	cmp    esi,ebx
1000b92f:	je     0x1000b8f4
1000b931:	mov    BYTE PTR [esi],bl
1000b933:	call   0x1002f5b0
1000b938:	mov    ecx,eax
1000b93a:	mov    eax,DWORD PTR [ebp+0x8]
1000b93d:	mov    edi,edx
1000b93f:	mov    edx,0x2710
1000b944:	mul    edx
1000b946:	add    eax,ecx
1000b948:	adc    edx,edi
1000b94a:	cmp    DWORD PTR [ebp-0x14],ebx
1000b94d:	mov    DWORD PTR [esi+0x8],eax
1000b950:	mov    DWORD PTR [esi+0xc],edx
1000b953:	je     0x1000b95e
1000b955:	push   DWORD PTR [ebp-0x14]
1000b958:	call   DWORD PTR ds:0x10065094
1000b95e:	mov    al,0x1
1000b960:	call   0x1005891d
1000b965:	ret    0x4
1000b968:	push   ebp
1000b969:	mov    ebp,esp
1000b96b:	and    esp,0xfffffff8
1000b96e:	push   0xffffffff
1000b970:	push   0x1005ff00
1000b975:	mov    eax,fs:0x0
1000b97b:	push   eax
1000b97c:	sub    esp,0xc0
1000b982:	mov    eax,ds:0x1007d030
1000b987:	xor    eax,esp
1000b989:	mov    DWORD PTR [esp+0xb8],eax
1000b990:	push   ebx
1000b991:	push   esi
1000b992:	push   edi
1000b993:	mov    eax,ds:0x1007d030
1000b998:	xor    eax,esp
1000b99a:	push   eax
1000b99b:	lea    eax,[esp+0xd0]
1000b9a2:	mov    fs:0x0,eax
1000b9a8:	and    DWORD PTR [esp+0x14],0x0
1000b9ad:	mov    edi,ecx
1000b9af:	lea    eax,[esp+0x1c]
1000b9b3:	push   eax
1000b9b4:	mov    eax,edi
1000b9b6:	mov    DWORD PTR [esp+0x1c],edi
1000b9ba:	call   0x1000a9dc
1000b9bf:	and    DWORD PTR [esp+0xd8],0x0
1000b9c7:	xor    ebx,ebx
1000b9c9:	inc    ebx
1000b9ca:	push   0x1006bb18
1000b9cf:	mov    esi,eax
1000b9d1:	mov    DWORD PTR [esp+0x18],ebx
1000b9d5:	call   0x10005e33
1000b9da:	test   al,al
1000b9dc:	pop    ecx
1000b9dd:	jne    0x1000b9ed
1000b9df:	movzx  eax,WORD PTR [edi+0x34]
1000b9e3:	test   ax,ax
1000b9e6:	mov    BYTE PTR [esp+0x13],0x0
1000b9eb:	jne    0x1000b9f2
1000b9ed:	mov    BYTE PTR [esp+0x13],0x1
1000b9f2:	or     DWORD PTR [esp+0xd8],0xffffffff
1000b9fa:	push   0x0
1000b9fc:	push   ebx
1000b9fd:	lea    ecx,[esp+0x24]
1000ba01:	call   0x100012f9
1000ba06:	cmp    BYTE PTR [esp+0x13],0x0
1000ba0b:	je     0x1000ba14
1000ba0d:	xor    al,al
1000ba0f:	jmp    0x1000bbfb
1000ba14:	and    DWORD PTR [esp+0x14],0x0
1000ba19:	lea    eax,[esp+0x14]
1000ba1d:	mov    DWORD PTR [esp+0xd8],ebx
1000ba24:	mov    esi,DWORD PTR ds:0x1007fd84
1000ba2a:	push   eax
1000ba2b:	call   0x1000a473
1000ba30:	test   eax,eax
1000ba32:	je     0x1000ba47
1000ba34:	cmp    DWORD PTR [esp+0x14],0x0
1000ba39:	je     0x1000ba0d
1000ba3b:	push   DWORD PTR [esp+0x14]
1000ba3f:	call   DWORD PTR ds:0x10065094
1000ba45:	jmp    0x1000ba0d
1000ba47:	lea    eax,[esp+0x54]
1000ba4b:	push   eax
1000ba4c:	mov    eax,edi
1000ba4e:	call   0x1000a9dc
1000ba53:	mov    BYTE PTR [esp+0xd8],0x2
1000ba5b:	movzx  ecx,WORD PTR [edi+0x34]
1000ba5f:	push   ecx
1000ba60:	push   eax
1000ba61:	lea    ecx,[esp+0xb4]
1000ba68:	call   0x1000c112
1000ba6d:	push   0x0
1000ba6f:	push   ebx
1000ba70:	lea    ecx,[esp+0x5c]
1000ba74:	mov    BYTE PTR [esp+0xe0],0x4
1000ba7c:	call   0x100012f9
1000ba81:	lea    eax,[esp+0xac]
1000ba88:	push   eax
1000ba89:	lea    eax,[esp+0x20]
1000ba8d:	mov    ebx,0x1007fd8c
1000ba92:	push   eax
1000ba93:	mov    edi,ebx
1000ba95:	call   0x1000c844
1000ba9a:	mov    esi,DWORD PTR ds:0x1007fd90
1000baa0:	xor    edi,edi
1000baa2:	cmp    DWORD PTR [esp+0x1c],edi
1000baa6:	je     0x1000baae
1000baa8:	cmp    DWORD PTR [esp+0x1c],ebx
1000baac:	je     0x1000bab3
1000baae:	call   0x100422b0
1000bab3:	cmp    DWORD PTR [esp+0x20],esi
1000bab7:	jne    0x1000bbb2
1000babd:	mov    DWORD PTR [esp+0x40],edi
1000bac1:	mov    DWORD PTR [esp+0x44],edi
1000bac5:	mov    DWORD PTR [esp+0x48],edi
1000bac9:	push   edi
1000baca:	push   DWORD PTR [ebp+0x8]
1000bacd:	mov    BYTE PTR [esp+0xe0],0x5
1000bad5:	push   DWORD PTR [esp+0x20]
1000bad9:	lea    esi,[esp+0x28]
1000badd:	call   0x1000c0bd
1000bae2:	push   eax
1000bae3:	lea    eax,[esp+0x40]
1000bae7:	call   0x1000c9a8
1000baec:	sub    esp,0x10
1000baef:	mov    eax,esp
1000baf1:	mov    DWORD PTR [esp+0x28],esp
1000baf5:	push   eax
1000baf6:	lea    ecx,[esp+0x50]
1000bafa:	call   0x1000c8b2
1000baff:	sub    esp,0x1c
1000bb02:	mov    BYTE PTR [esp+0x104],0x6
1000bb0a:	lea    eax,[esp+0xd8]
1000bb11:	mov    ecx,esp
1000bb13:	mov    DWORD PTR [esp+0x48],esp
1000bb17:	push   eax
1000bb18:	call   0x100011b0
1000bb1d:	lea    edi,[esp+0xac]
1000bb24:	mov    BYTE PTR [esp+0x104],0x5
1000bb2c:	call   0x1000d2bb
1000bb31:	add    esp,0x2c
1000bb34:	mov    esi,eax
1000bb36:	push   esi
1000bb37:	lea    ecx,[esp+0x58]
1000bb3b:	mov    BYTE PTR [esp+0xdc],0x7
1000bb43:	call   0x100011b0
1000bb48:	lea    eax,[esp+0x70]
1000bb4c:	lea    ecx,[esi+0x1c]
1000bb4f:	push   eax
1000bb50:	mov    BYTE PTR [esp+0xdc],0x8
1000bb58:	call   0x1000c8b2
1000bb5d:	lea    eax,[esp+0x54]
1000bb61:	push   eax
1000bb62:	lea    edi,[esp+0x20]
1000bb66:	mov    BYTE PTR [esp+0xdc],0x9
1000bb6e:	call   0x1000c4fd
1000bb73:	lea    esi,[esp+0x70]
1000bb77:	call   0x1000c958
1000bb7c:	push   0x0
1000bb7e:	push   0x1
1000bb80:	lea    ecx,[esp+0x5c]
1000bb84:	call   0x100012f9
1000bb89:	lea    esi,[esp+0x9c]
1000bb90:	call   0x1000c958
1000bb95:	push   0x0
1000bb97:	push   0x1
1000bb99:	lea    ecx,[esp+0x88]
1000bba0:	call   0x100012f9
1000bba5:	lea    esi,[esp+0x3c]
1000bba9:	call   0x1000c958
1000bbae:	xor    edi,edi
1000bbb0:	jmp    0x1000bbd5
1000bbb2:	push   edi
1000bbb3:	push   DWORD PTR [ebp+0x8]
1000bbb6:	lea    esi,[esp+0x44]
1000bbba:	push   DWORD PTR [esp+0x20]
1000bbbe:	call   0x1000c0bd
1000bbc3:	push   eax
1000bbc4:	lea    esi,[esp+0x20]
1000bbc8:	call   0x10009753
1000bbcd:	add    eax,0x1c
1000bbd0:	call   0x1000c9a8
1000bbd5:	call   0x1000207c
1000bbda:	push   edi
1000bbdb:	push   0x1
1000bbdd:	lea    ecx,[esp+0xb4]
1000bbe4:	call   0x100012f9
1000bbe9:	cmp    DWORD PTR [esp+0x14],edi
1000bbed:	je     0x1000bbf9
1000bbef:	push   DWORD PTR [esp+0x14]
1000bbf3:	call   DWORD PTR ds:0x10065094
1000bbf9:	mov    al,0x1
1000bbfb:	mov    ecx,DWORD PTR [esp+0xd0]
1000bc02:	mov    DWORD PTR fs:0x0,ecx
1000bc09:	pop    ecx
1000bc0a:	pop    edi
1000bc0b:	pop    esi
1000bc0c:	pop    ebx
1000bc0d:	mov    ecx,DWORD PTR [esp+0xb8]
1000bc14:	xor    ecx,esp
1000bc16:	call   0x10041d97
1000bc1b:	mov    esp,ebp
1000bc1d:	pop    ebp
1000bc1e:	ret    0x4
1000bc21:	push   ebp
1000bc22:	mov    ebp,esp
1000bc24:	and    esp,0xfffffff8
1000bc27:	push   0xffffffff
1000bc29:	push   0x1005fe64
1000bc2e:	mov    eax,fs:0x0
1000bc34:	push   eax
1000bc35:	sub    esp,0x60
1000bc38:	mov    eax,ds:0x1007d030
1000bc3d:	xor    eax,esp
1000bc3f:	mov    DWORD PTR [esp+0x58],eax
1000bc43:	push   ebx
1000bc44:	push   esi
1000bc45:	push   edi
1000bc46:	mov    eax,ds:0x1007d030
1000bc4b:	xor    eax,esp
1000bc4d:	push   eax
1000bc4e:	lea    eax,[esp+0x70]
1000bc52:	mov    fs:0x0,eax
1000bc58:	and    DWORD PTR [esp+0x14],0x0
1000bc5d:	mov    edi,ecx
1000bc5f:	lea    eax,[esp+0x30]
1000bc63:	push   eax
1000bc64:	mov    eax,edi
1000bc66:	mov    DWORD PTR [esp+0x24],edi
1000bc6a:	call   0x1000a9dc
1000bc6f:	and    DWORD PTR [esp+0x78],0x0
1000bc74:	xor    ebx,ebx
1000bc76:	inc    ebx
1000bc77:	push   0x1006bb18
1000bc7c:	mov    esi,eax
1000bc7e:	mov    DWORD PTR [esp+0x18],ebx
1000bc82:	call   0x10005e33
1000bc87:	test   al,al
1000bc89:	pop    ecx
1000bc8a:	jne    0x1000bc9a
1000bc8c:	movzx  eax,WORD PTR [edi+0x34]
1000bc90:	test   ax,ax
1000bc93:	mov    BYTE PTR [esp+0x13],0x0
1000bc98:	jne    0x1000bc9f
1000bc9a:	mov    BYTE PTR [esp+0x13],0x1
1000bc9f:	or     DWORD PTR [esp+0x78],0xffffffff
1000bca4:	push   0x0
1000bca6:	push   ebx
1000bca7:	lea    ecx,[esp+0x38]
1000bcab:	call   0x100012f9
1000bcb0:	cmp    BYTE PTR [esp+0x13],0x0
1000bcb5:	je     0x1000bcbe
1000bcb7:	xor    al,al
1000bcb9:	jmp    0x1000be31
1000bcbe:	and    DWORD PTR [esp+0x14],0x0
1000bcc3:	lea    eax,[esp+0x14]
1000bcc7:	mov    DWORD PTR [esp+0x78],ebx
1000bccb:	mov    esi,DWORD PTR ds:0x1007fd84
1000bcd1:	push   eax
1000bcd2:	call   0x1000a473
1000bcd7:	test   eax,eax
1000bcd9:	je     0x1000bcee
1000bcdb:	cmp    DWORD PTR [esp+0x14],0x0
1000bce0:	je     0x1000bcb7
1000bce2:	push   DWORD PTR [esp+0x14]
1000bce6:	call   DWORD PTR ds:0x10065094
1000bcec:	jmp    0x1000bcb7
1000bcee:	lea    eax,[esp+0x30]
1000bcf2:	push   eax
1000bcf3:	mov    eax,edi
1000bcf5:	call   0x1000a9dc
1000bcfa:	mov    BYTE PTR [esp+0x78],0x2
1000bcff:	movzx  ecx,WORD PTR [edi+0x34]
1000bd03:	push   ecx
1000bd04:	push   eax
1000bd05:	lea    ecx,[esp+0x54]
1000bd09:	call   0x1000c112
1000bd0e:	push   0x0
1000bd10:	push   ebx
1000bd11:	lea    ecx,[esp+0x38]
1000bd15:	mov    BYTE PTR [esp+0x80],0x4
1000bd1d:	call   0x100012f9
1000bd22:	lea    eax,[esp+0x4c]
1000bd26:	push   eax
1000bd27:	lea    eax,[esp+0x1c]
1000bd2b:	push   eax
1000bd2c:	mov    edi,0x1007fd8c
1000bd31:	call   0x1000c844
1000bd36:	cmp    DWORD PTR [esp+0x18],0x0
1000bd3b:	mov    esi,DWORD PTR ds:0x1007fd90
1000bd41:	je     0x1000bd49
1000bd43:	cmp    DWORD PTR [esp+0x18],edi
1000bd47:	je     0x1000bd4e
1000bd49:	call   0x100422b0
1000bd4e:	cmp    DWORD PTR [esp+0x1c],esi
1000bd52:	jne    0x1000bd65
1000bd54:	push   0x0
1000bd56:	push   ebx
1000bd57:	lea    ecx,[esp+0x54]
1000bd5b:	call   0x100012f9
1000bd60:	jmp    0x1000bcdb
1000bd65:	lea    esi,[esp+0x18]
1000bd69:	call   0x10009753
1000bd6e:	mov    ebx,eax
1000bd70:	add    ebx,0x1c
1000bd73:	mov    eax,ebx
1000bd75:	xor    edi,edi
1000bd77:	call   0x1000c973
1000bd7c:	test   eax,eax
1000bd7e:	je     0x1000bd9d
1000bd80:	push   edi
1000bd81:	mov    esi,ebx
1000bd83:	call   0x1000c989
1000bd88:	mov    ecx,DWORD PTR [esp+0x20]
1000bd8c:	cmp    DWORD PTR [eax+0x10],ecx
1000bd8f:	je     0x1000bda3
1000bd91:	mov    eax,ebx
1000bd93:	inc    edi
1000bd94:	call   0x1000c973
1000bd99:	cmp    edi,eax
1000bd9b:	jne    0x1000bd80
1000bd9d:	push   0x0
1000bd9f:	push   0x1
1000bda1:	jmp    0x1000bd57
1000bda3:	mov    esi,DWORD PTR [ebx+0x4]
1000bda6:	cmp    esi,DWORD PTR [ebx+0x8]
1000bda9:	jbe    0x1000bdb0
1000bdab:	call   0x100422b0
1000bdb0:	lea    eax,[esp+0x20]
1000bdb4:	push   eax
1000bdb5:	mov    ecx,edi
1000bdb7:	lea    eax,[esp+0x2c]
1000bdbb:	mov    DWORD PTR [esp+0x2c],ebx
1000bdbf:	mov    DWORD PTR [esp+0x30],esi
1000bdc3:	call   0x1000ca6c
1000bdc8:	lea    esi,[esp+0x20]
1000bdcc:	call   0x1000ca4f
1000bdd1:	mov    edi,eax
1000bdd3:	call   0x1000c0f7
1000bdd8:	push   DWORD PTR [esp+0x24]
1000bddc:	lea    eax,[esp+0x2c]
1000bde0:	push   DWORD PTR [esp+0x24]
1000bde4:	push   eax
1000bde5:	call   0x1000ca09
1000bdea:	mov    eax,ebx
1000bdec:	call   0x1000c973
1000bdf1:	test   eax,eax
1000bdf3:	jne    0x1000be0c
1000bdf5:	push   DWORD PTR [esp+0x1c]
1000bdf9:	lea    eax,[esp+0x2c]
1000bdfd:	push   DWORD PTR [esp+0x1c]
1000be01:	push   eax
1000be02:	push   0x1007fd8c
1000be07:	call   0x1000c5a4
1000be0c:	call   0x1000207c
1000be11:	push   0x0
1000be13:	push   0x1
1000be15:	lea    ecx,[esp+0x54]
1000be19:	call   0x100012f9
1000be1e:	cmp    DWORD PTR [esp+0x14],0x0
1000be23:	je     0x1000be2f
1000be25:	push   DWORD PTR [esp+0x14]
1000be29:	call   DWORD PTR ds:0x10065094
1000be2f:	mov    al,0x1
1000be31:	mov    ecx,DWORD PTR [esp+0x70]
1000be35:	mov    DWORD PTR fs:0x0,ecx
1000be3c:	pop    ecx
1000be3d:	pop    edi
1000be3e:	pop    esi
1000be3f:	pop    ebx
1000be40:	mov    ecx,DWORD PTR [esp+0x58]
1000be44:	xor    ecx,esp
1000be46:	call   0x10041d97
1000be4b:	mov    esp,ebp
1000be4d:	pop    ebp
1000be4e:	ret    
1000be4f:	push   ebp
1000be50:	mov    ebp,esp
1000be52:	and    esp,0xfffffff8
1000be55:	push   0xffffffff
1000be57:	push   0x1005fe18
1000be5c:	mov    eax,fs:0x0
1000be62:	push   eax
1000be63:	sub    esp,0xc
1000be66:	push   esi
1000be67:	push   edi
1000be68:	mov    eax,ds:0x1007d030
1000be6d:	xor    eax,esp
1000be6f:	push   eax
1000be70:	lea    eax,[esp+0x18]
1000be74:	mov    fs:0x0,eax
1000be7a:	lea    eax,[esp+0x13]
1000be7e:	push   eax
1000be7f:	call   0x100375f0
1000be84:	and    DWORD PTR [esp+0x20],0x0
1000be89:	mov    esi,DWORD PTR ds:0x10065084
1000be8f:	mov    edi,0x7d0
1000be94:	jmp    0x1000be9e
1000be96:	mov    ecx,DWORD PTR [ebp+0x8]
1000be99:	call   0x1000bec6
1000be9e:	push   edi
1000be9f:	push   DWORD PTR ds:0x1007ff80
1000bea5:	call   esi
1000bea7:	test   eax,eax
1000bea9:	jne    0x1000be96
1000beab:	call   0x10037610
1000beb0:	xor    eax,eax
1000beb2:	mov    ecx,DWORD PTR [esp+0x18]
1000beb6:	mov    DWORD PTR fs:0x0,ecx
1000bebd:	pop    ecx
1000bebe:	pop    edi
1000bebf:	pop    esi
1000bec0:	mov    esp,ebp
1000bec2:	pop    ebp
1000bec3:	ret    0x4
1000bec6:	push   0x14c
1000becb:	mov    eax,0x1005fdf5
1000bed0:	call   0x10058845
1000bed5:	mov    edi,ecx
1000bed7:	call   0x1002f5b0
1000bedc:	xor    ebx,ebx
1000bede:	mov    DWORD PTR [ebp-0x30],eax
1000bee1:	mov    DWORD PTR [ebp-0x2c],edx
1000bee4:	mov    DWORD PTR [ebp-0x18],ebx
1000bee7:	lea    eax,[ebp-0x18]
1000beea:	mov    DWORD PTR [ebp-0x4],ebx
1000beed:	mov    esi,DWORD PTR [edi]
1000beef:	push   eax
1000bef0:	call   0x1000a473
1000bef5:	test   eax,eax
1000bef7:	je     0x1000bf01
1000bef9:	cmp    DWORD PTR [ebp-0x18],ebx
1000befc:	jmp    0x1000c0ac
1000bf01:	mov    eax,DWORD PTR [edi+0xc]
1000bf04:	mov    eax,DWORD PTR [eax]
1000bf06:	add    edi,0x8
1000bf09:	mov    DWORD PTR [ebp-0x28],edi
1000bf0c:	mov    DWORD PTR [ebp-0x20],edi
1000bf0f:	mov    DWORD PTR [ebp-0x1c],eax
1000bf12:	cmp    DWORD PTR [ebp-0x20],0x0
1000bf16:	mov    esi,DWORD PTR [edi+0x4]
1000bf19:	je     0x1000bf20
1000bf1b:	cmp    DWORD PTR [ebp-0x20],edi
1000bf1e:	je     0x1000bf25
1000bf20:	call   0x100422b0
1000bf25:	cmp    DWORD PTR [ebp-0x1c],esi
1000bf28:	je     0x1000c0a8
1000bf2e:	lea    esi,[ebp-0x20]
1000bf31:	call   0x10009753
1000bf36:	mov    ebx,eax
1000bf38:	mov    esi,DWORD PTR [ebx+0x20]
1000bf3b:	add    ebx,0x1c
1000bf3e:	cmp    esi,DWORD PTR [ebx+0x8]
1000bf41:	jbe    0x1000bf48
1000bf43:	call   0x100422b0
1000bf48:	mov    DWORD PTR [ebp-0x14],ebx
1000bf4b:	mov    DWORD PTR [ebp-0x10],esi
1000bf4e:	mov    esi,DWORD PTR [ebx+0x8]
1000bf51:	cmp    DWORD PTR [ebx+0x4],esi
1000bf54:	jbe    0x1000bf5b
1000bf56:	call   0x100422b0
1000bf5b:	cmp    DWORD PTR [ebp-0x14],0x0
1000bf5f:	je     0x1000bf66
1000bf61:	cmp    DWORD PTR [ebp-0x14],ebx
1000bf64:	je     0x1000bf6b
1000bf66:	call   0x100422b0
1000bf6b:	cmp    DWORD PTR [ebp-0x10],esi
1000bf6e:	je     0x1000c06d
1000bf74:	lea    esi,[ebp-0x14]
1000bf77:	call   0x1000ca4f
1000bf7c:	cmp    BYTE PTR [eax],0x0
1000bf7f:	jne    0x1000bfc8
1000bf81:	call   0x1000ca4f
1000bf86:	mov    ecx,DWORD PTR [eax+0xc]
1000bf89:	cmp    ecx,DWORD PTR [ebp-0x2c]
1000bf8c:	ja     0x1000bfc8
1000bf8e:	jb     0x1000bf98
1000bf90:	mov    eax,DWORD PTR [eax+0x8]
1000bf93:	cmp    eax,DWORD PTR [ebp-0x30]
1000bf96:	jae    0x1000bfc8
1000bf98:	call   0x1000207c
1000bf9d:	lea    esi,[ebp-0x14]
1000bfa0:	call   0x1000ca4f
1000bfa5:	mov    edi,eax
1000bfa7:	call   0x1000c0f7
1000bfac:	lea    eax,[ebp-0x50]
1000bfaf:	push   DWORD PTR [ebp-0x10]
1000bfb2:	push   DWORD PTR [ebp-0x14]
1000bfb5:	push   eax
1000bfb6:	call   0x1000ca09
1000bfbb:	mov    ecx,DWORD PTR [eax]
1000bfbd:	mov    eax,DWORD PTR [eax+0x4]
1000bfc0:	mov    DWORD PTR [ebp-0x14],ecx
1000bfc3:	mov    DWORD PTR [ebp-0x10],eax
1000bfc6:	jmp    0x1000bf4e
1000bfc8:	lea    esi,[ebp-0x14]
1000bfcb:	call   0x1000ca4f
1000bfd0:	cmp    BYTE PTR [eax],0x0
1000bfd3:	jne    0x1000c04b
1000bfd5:	call   0x1000ca4f
1000bfda:	mov    esi,DWORD PTR [eax+0x10]
1000bfdd:	mov    eax,DWORD PTR [esi+0x8]
1000bfe0:	and    DWORD PTR [ebp-0x38],0x0
1000bfe4:	mov    DWORD PTR [ebp-0x154],eax
1000bfea:	xor    eax,eax
1000bfec:	lea    edi,[ebp-0x34]
1000bfef:	stos   DWORD PTR es:[edi],eax
1000bff0:	lea    eax,[ebp-0x38]
1000bff3:	push   eax
1000bff4:	xor    eax,eax
1000bff6:	push   eax
1000bff7:	push   eax
1000bff8:	lea    ecx,[ebp-0x158]
1000bffe:	push   ecx
1000bfff:	push   eax
1000c000:	mov    DWORD PTR [ebp-0x158],0x1
1000c00a:	call   DWORD PTR ds:0x100653e0
1000c010:	cmp    eax,0x1
1000c013:	jne    0x1000c04b
1000c015:	mov    esi,DWORD PTR [esi+0x8]
1000c018:	push   0x2
1000c01a:	push   eax
1000c01b:	lea    eax,[ebp-0x21]
1000c01e:	push   eax
1000c01f:	push   esi
1000c020:	call   DWORD PTR ds:0x100653f0
1000c026:	test   eax,eax
1000c028:	setne  al
1000c02b:	test   al,al
1000c02d:	jne    0x1000c04b
1000c02f:	call   0x1000207c
1000c034:	lea    esi,[ebp-0x14]
1000c037:	call   0x1000ca4f
1000c03c:	mov    edi,eax
1000c03e:	call   0x1000c0f7
1000c043:	lea    eax,[ebp-0x40]
1000c046:	jmp    0x1000bfaf
1000c04b:	mov    esi,DWORD PTR [ebp-0x14]
1000c04e:	test   esi,esi
1000c050:	jne    0x1000c057
1000c052:	call   0x100422b0
1000c057:	mov    eax,DWORD PTR [ebp-0x10]
1000c05a:	cmp    eax,DWORD PTR [esi+0x8]
1000c05d:	jb     0x1000c064
1000c05f:	call   0x100422b0
1000c064:	add    DWORD PTR [ebp-0x10],0x18
1000c068:	jmp    0x1000bf4e
1000c06d:	mov    eax,ebx
1000c06f:	call   0x1000c973
1000c074:	test   eax,eax
1000c076:	jne    0x1000c098
1000c078:	push   DWORD PTR [ebp-0x1c]
1000c07b:	mov    edi,DWORD PTR [ebp-0x28]
1000c07e:	push   DWORD PTR [ebp-0x20]
1000c081:	lea    eax,[ebp-0x48]
1000c084:	push   eax
1000c085:	push   edi
1000c086:	call   0x1000c5a4
1000c08b:	mov    ecx,DWORD PTR [eax]
1000c08d:	mov    eax,DWORD PTR [eax+0x4]
1000c090:	mov    DWORD PTR [ebp-0x20],ecx
1000c093:	jmp    0x1000bf0f
1000c098:	lea    esi,[ebp-0x20]
1000c09b:	call   0x10009773
1000c0a0:	mov    edi,DWORD PTR [ebp-0x28]
1000c0a3:	jmp    0x1000bf12
1000c0a8:	cmp    DWORD PTR [ebp-0x18],0x0
1000c0ac:	je     0x1000c0b7
1000c0ae:	push   DWORD PTR [ebp-0x18]
1000c0b1:	call   DWORD PTR ds:0x10065094
1000c0b7:	call   0x1005891d
1000c0bc:	ret    
1000c0bd:	push   ebx
1000c0be:	push   edi
1000c0bf:	mov    BYTE PTR [esi],0x0
1000c0c2:	call   0x1002f5b0
1000c0c7:	push   0x0
1000c0c9:	push   0x2710
1000c0ce:	push   DWORD PTR [esp+0x1c]
1000c0d2:	mov    edi,eax
1000c0d4:	push   DWORD PTR [esp+0x1c]
1000c0d8:	mov    ebx,edx
1000c0da:	call   0x1004b7c0
1000c0df:	add    eax,edi
1000c0e1:	mov    DWORD PTR [esi+0x8],eax
1000c0e4:	mov    eax,DWORD PTR [esp+0xc]
1000c0e8:	adc    edx,ebx
1000c0ea:	pop    edi
1000c0eb:	mov    DWORD PTR [esi+0x10],eax
1000c0ee:	mov    DWORD PTR [esi+0xc],edx
1000c0f1:	mov    eax,esi
1000c0f3:	pop    ebx
1000c0f4:	ret    0xc
1000c0f7:	push   esi
1000c0f8:	mov    esi,DWORD PTR [edi+0x10]
1000c0fb:	test   esi,esi
1000c0fd:	je     0x1000c110
1000c0ff:	push   esi
1000c100:	call   0x1000c221
1000c105:	push   esi
1000c106:	call   0x10041d92
1000c10b:	and    DWORD PTR [edi+0x10],0x0
1000c10f:	pop    ecx
1000c110:	pop    esi
1000c111:	ret    
1000c112:	push   0x50
1000c114:	mov    eax,0x1005f378
1000c119:	call   0x100588ae
1000c11e:	mov    eax,DWORD PTR [ebp+0x8]
1000c121:	and    DWORD PTR [ebp-0x4],0x0
1000c125:	and    DWORD PTR [ebp-0x58],0x0
1000c129:	mov    esi,ecx
1000c12b:	push   eax
1000c12c:	mov    DWORD PTR [ebp-0x5c],esi
1000c12f:	call   0x100011b0
1000c134:	and    DWORD PTR [ebp-0x4],0x0
1000c138:	xor    ebx,ebx
1000c13a:	inc    ebx
1000c13b:	push   0x3a
1000c13d:	mov    DWORD PTR [ebp-0x58],ebx
1000c140:	call   0x1000cae0
1000c145:	push   0xa
1000c147:	lea    eax,[ebp-0x54]
1000c14a:	push   eax
1000c14b:	movzx  eax,WORD PTR [ebp+0xc]
1000c14f:	push   eax
1000c150:	call   0x10044846
1000c155:	add    esp,0xc
1000c158:	push   eax
1000c159:	push   esi
1000c15a:	call   0x10005e98
1000c15f:	mov    eax,esi
1000c161:	call   0x10058931
1000c166:	ret    0x8
1000c169:	push   0x28
1000c16b:	mov    eax,0x1005fdc8
1000c170:	call   0x100588ae
1000c175:	push   DWORD PTR [ebp+0xc]
1000c178:	lea    ecx,[ebp-0x2c]
1000c17b:	push   DWORD PTR [ebp+0x8]
1000c17e:	call   0x1000c112
1000c183:	and    DWORD PTR [ebp-0x4],0x0
1000c187:	lea    eax,[ebp-0x2c]
1000c18a:	push   eax
1000c18b:	lea    eax,[ebp-0x34]
1000c18e:	push   eax
1000c18f:	mov    edi,0x1007fd8c
1000c194:	call   0x1000c844
1000c199:	cmp    DWORD PTR [ebp-0x34],0x0
1000c19d:	mov    esi,DWORD PTR ds:0x1007fd90
1000c1a3:	je     0x1000c1aa
1000c1a5:	cmp    DWORD PTR [ebp-0x34],edi
1000c1a8:	je     0x1000c1af
1000c1aa:	call   0x100422b0
1000c1af:	cmp    DWORD PTR [ebp-0x30],esi
1000c1b2:	jne    0x1000c1cc
1000c1b4:	xor    esi,esi
1000c1b6:	push   0x0
1000c1b8:	push   0x1
1000c1ba:	lea    ecx,[ebp-0x2c]
1000c1bd:	call   0x100012f9
1000c1c2:	mov    eax,esi
1000c1c4:	call   0x10058931
1000c1c9:	ret    0xc
1000c1cc:	lea    esi,[ebp-0x34]
1000c1cf:	call   0x10009753
1000c1d4:	mov    esi,eax
1000c1d6:	add    esi,0x1c
1000c1d9:	mov    eax,esi
1000c1db:	xor    edi,edi
1000c1dd:	call   0x1000c973
1000c1e2:	test   eax,eax
1000c1e4:	je     0x1000c1b4
1000c1e6:	push   edi
1000c1e7:	call   0x1000c989
1000c1ec:	mov    al,BYTE PTR [eax]
1000c1ee:	cmp    al,BYTE PTR [ebp+0x10]
1000c1f1:	je     0x1000c201
1000c1f3:	mov    eax,esi
1000c1f5:	inc    edi
1000c1f6:	call   0x1000c973
1000c1fb:	cmp    edi,eax
1000c1fd:	jne    0x1000c1e6
1000c1ff:	jmp    0x1000c1b4
1000c201:	push   edi
1000c202:	call   0x1000c989
1000c207:	mov    esi,eax
1000c209:	jmp    0x1000c1b6
1000c20b:	push   esi
1000c20c:	lea    esi,[edi+0x1c]
1000c20f:	call   0x1000c958
1000c214:	push   0x0
1000c216:	push   0x1
1000c218:	mov    ecx,edi
1000c21a:	call   0x100012f9
1000c21f:	pop    esi
1000c220:	ret    
1000c221:	push   0x0
1000c223:	mov    eax,0x1005fda5
1000c228:	call   0x10058845
1000c22d:	mov    esi,DWORD PTR [ebp+0x8]
1000c230:	xor    edi,edi
1000c232:	push   edi
1000c233:	push   0x1
1000c235:	lea    ecx,[esi+0x38]
1000c238:	mov    DWORD PTR [ebp-0x4],0x3
1000c23f:	call   0x100012f9
1000c244:	push   edi
1000c245:	push   0x1
1000c247:	lea    ecx,[esi+0x18]
1000c24a:	call   0x100012f9
1000c24f:	push   DWORD PTR [esi+0x14]
1000c252:	call   0x10041d92
1000c257:	pop    ecx
1000c258:	lea    eax,[esi+0x10]
1000c25b:	call   0x1000c47a
1000c260:	mov    BYTE PTR [ebp-0x4],0x2
1000c264:	mov    ecx,DWORD PTR [esi+0xc]
1000c267:	cmp    ecx,edi
1000c269:	je     0x1000c271
1000c26b:	mov    eax,DWORD PTR [ecx]
1000c26d:	push   0x1
1000c26f:	call   DWORD PTR [eax]
1000c271:	mov    eax,DWORD PTR [esi+0x8]
1000c274:	cmp    eax,edi
1000c276:	je     0x1000c27f
1000c278:	push   eax
1000c279:	call   DWORD PTR ds:0x100653b8
1000c27f:	mov    DWORD PTR [esi+0x8],edi
1000c282:	mov    eax,DWORD PTR [esi+0x4]
1000c285:	cmp    eax,edi
1000c287:	je     0x1000c290
1000c289:	push   eax
1000c28a:	call   DWORD PTR ds:0x100653c8
1000c290:	mov    DWORD PTR [esi+0x4],edi
1000c293:	mov    eax,DWORD PTR [esi]
1000c295:	cmp    eax,edi
1000c297:	je     0x1000c2a0
1000c299:	push   eax
1000c29a:	call   DWORD PTR ds:0x10065070
1000c2a0:	mov    DWORD PTR [esi],edi
1000c2a2:	call   0x1005891d
1000c2a7:	ret    0x4
1000c2aa:	push   0x10
1000c2ac:	mov    eax,0x100634d8
1000c2b1:	call   0x10058845
1000c2b6:	xor    ebx,ebx
1000c2b8:	mov    DWORD PTR [ebp-0x18],ebx
1000c2bb:	mov    DWORD PTR [ebp-0x14],ebx
1000c2be:	mov    DWORD PTR [ebp-0x4],0x1
1000c2c5:	mov    DWORD PTR [ebp-0x10],ebx
1000c2c8:	lea    eax,[ebp-0x10]
1000c2cb:	mov    BYTE PTR [ebp-0x4],0x2
1000c2cf:	mov    esi,DWORD PTR ds:0x1007fd84
1000c2d5:	push   eax
1000c2d6:	call   0x1000a473
1000c2db:	test   eax,eax
1000c2dd:	je     0x1000c2f3
1000c2df:	mov    BYTE PTR [ebp-0x4],0x1
1000c2e3:	cmp    DWORD PTR [ebp-0x10],ebx
1000c2e6:	je     0x1000c328
1000c2e8:	push   DWORD PTR [ebp-0x10]
1000c2eb:	call   DWORD PTR ds:0x10065094
1000c2f1:	jmp    0x1000c328
1000c2f3:	push   ebx
1000c2f4:	push   DWORD PTR [ebp+0x10]
1000c2f7:	push   DWORD PTR [ebp+0xc]
1000c2fa:	call   0x1000c169
1000c2ff:	mov    esi,eax
1000c301:	cmp    esi,ebx
1000c303:	je     0x1000c2df
1000c305:	mov    BYTE PTR [esi],0x1
1000c308:	call   0x1000207c
1000c30d:	mov    esi,DWORD PTR [esi+0x10]
1000c310:	mov    BYTE PTR [ebp-0x4],0x1
1000c314:	cmp    DWORD PTR [ebp-0x10],ebx
1000c317:	je     0x1000c322
1000c319:	push   DWORD PTR [ebp-0x10]
1000c31c:	call   DWORD PTR ds:0x10065094
1000c322:	cmp    esi,ebx
1000c324:	mov    edi,esi
1000c326:	jne    0x1000c344
1000c328:	push   0x5c
1000c32a:	call   0x1004239e
1000c32f:	cmp    eax,ebx
1000c331:	pop    ecx
1000c332:	je     0x1000c33d
1000c334:	mov    edi,eax
1000c336:	call   0x1000a5c1
1000c33b:	jmp    0x1000c33f
1000c33d:	xor    eax,eax
1000c33f:	mov    DWORD PTR [ebp-0x14],eax
1000c342:	mov    edi,eax
1000c344:	push   DWORD PTR [ebp+0x24]
1000c347:	mov    ecx,DWORD PTR [ebp+0x28]
1000c34a:	push   DWORD PTR [ebp+0x18]
1000c34d:	lea    eax,[ebp-0x10]
1000c350:	push   DWORD PTR [ebp+0x14]
1000c353:	mov    edx,edi
1000c355:	push   DWORD PTR [ebp+0x10]
1000c358:	push   DWORD PTR [ebp+0xc]
1000c35b:	push   eax
1000c35c:	call   0x1000a82c
1000c361:	mov    ecx,DWORD PTR [eax]
1000c363:	mov    esi,ecx
1000c365:	mov    DWORD PTR [eax],ebx
1000c367:	mov    DWORD PTR [ebp-0x1c],esi
1000c36a:	mov    BYTE PTR [ebp-0x4],0x3
1000c36e:	push   DWORD PTR [ebp-0x10]
1000c371:	call   0x10041d92
1000c376:	cmp    esi,ebx
1000c378:	pop    ecx
1000c379:	jne    0x1000c3ac
1000c37b:	mov    esi,DWORD PTR [ebp-0x14]
1000c37e:	cmp    esi,ebx
1000c380:	jne    0x1000c389
1000c382:	mov    ecx,edi
1000c384:	call   0x1000bc21
1000c389:	mov    edi,DWORD PTR [ebp+0x8]
1000c38c:	mov    DWORD PTR [edi],ebx
1000c38e:	push   ebx
1000c38f:	mov    DWORD PTR [ebp-0x18],0x1
1000c396:	call   0x10041d92
1000c39b:	cmp    esi,ebx
1000c39d:	pop    ecx
1000c39e:	mov    BYTE PTR [ebp-0x4],bl
1000c3a1:	je     0x1000c404
1000c3a3:	push   esi
1000c3a4:	call   0x1000c221
1000c3a9:	push   esi
1000c3aa:	jmp    0x1000c3fe
1000c3ac:	mov    al,BYTE PTR [edi+0x58]
1000c3af:	neg    al
1000c3b1:	mov    ecx,edi
1000c3b3:	sbb    eax,eax
1000c3b5:	and    eax,0x3a98
1000c3ba:	add    eax,0x1388
1000c3bf:	cmp    DWORD PTR [ebp-0x14],ebx
1000c3c2:	push   eax
1000c3c3:	je     0x1000c3d3
1000c3c5:	call   0x1000b968
1000c3ca:	test   al,al
1000c3cc:	je     0x1000c3d8
1000c3ce:	mov    DWORD PTR [ebp-0x14],ebx
1000c3d1:	jmp    0x1000c3d8
1000c3d3:	call   0x1000b875
1000c3d8:	mov    edi,DWORD PTR [ebp+0x8]
1000c3db:	push   ebx
1000c3dc:	mov    DWORD PTR [edi],esi
1000c3de:	mov    DWORD PTR [ebp-0x18],0x1
1000c3e5:	call   0x10041d92
1000c3ea:	mov    BYTE PTR [ebp-0x4],bl
1000c3ed:	cmp    DWORD PTR [ebp-0x14],ebx
1000c3f0:	pop    ecx
1000c3f1:	je     0x1000c404
1000c3f3:	push   DWORD PTR [ebp-0x14]
1000c3f6:	call   0x1000c221
1000c3fb:	push   DWORD PTR [ebp-0x14]
1000c3fe:	call   0x10041d92
1000c403:	pop    ecx
1000c404:	mov    eax,edi
1000c406:	call   0x1005891d
1000c40b:	ret    
1000c40c:	push   DWORD PTR [esp+0x8]
1000c410:	call   0x10041f10
1000c415:	pop    ecx
1000c416:	push   eax
1000c417:	push   DWORD PTR [esp+0xc]
1000c41b:	mov    eax,DWORD PTR [esp+0x14]
1000c41f:	push   DWORD PTR [esp+0xc]
1000c423:	call   0x1000cb54
1000c428:	ret    0xc
1000c42b:	push   ebp
1000c42c:	mov    ebp,esp
1000c42e:	push   ecx
1000c42f:	and    DWORD PTR [ebp-0x4],0x0
1000c433:	push   esi
1000c434:	push   DWORD PTR [ebp+0x10]
1000c437:	mov    esi,eax
1000c439:	push   DWORD PTR [ebp+0xc]
1000c43c:	push   DWORD PTR [ebp+0x8]
1000c43f:	call   0x1000cab8
1000c444:	mov    eax,esi
1000c446:	pop    esi
1000c447:	leave  
1000c448:	ret    0xc
1000c44b:	mov    eax,DWORD PTR [esi]
1000c44d:	test   eax,eax
1000c44f:	je     0x1000c458
1000c451:	push   eax
1000c452:	call   DWORD PTR ds:0x100653c8
1000c458:	and    DWORD PTR [esi],0x0
1000c45b:	ret    
1000c45c:	mov    eax,DWORD PTR [esi]
1000c45e:	test   eax,eax
1000c460:	je     0x1000c469
1000c462:	push   eax
1000c463:	call   DWORD PTR ds:0x100653b8
1000c469:	and    DWORD PTR [esi],0x0
1000c46c:	ret    
1000c46d:	mov    ecx,DWORD PTR [eax]
1000c46f:	test   ecx,ecx
1000c471:	je     0x1000c479
1000c473:	mov    eax,DWORD PTR [ecx]
1000c475:	push   0x1
1000c477:	call   DWORD PTR [eax]
1000c479:	ret    
1000c47a:	push   esi
1000c47b:	mov    esi,DWORD PTR [eax]
1000c47d:	test   esi,esi
1000c47f:	je     0x1000c48f
1000c481:	mov    eax,esi
1000c483:	call   0x1000d763
1000c488:	push   esi
1000c489:	call   0x10041d92
1000c48e:	pop    ecx
1000c48f:	pop    esi
1000c490:	ret    
1000c491:	jmp    0x1000cbf0
1000c496:	mov    ecx,DWORD PTR [eax+0x4]
1000c499:	test   ecx,ecx
1000c49b:	jne    0x1000c4a0
1000c49d:	xor    eax,eax
1000c49f:	ret    
1000c4a0:	mov    eax,DWORD PTR [eax+0x8]
1000c4a3:	sub    eax,ecx
1000c4a5:	sar    eax,0x4
1000c4a8:	ret    
1000c4a9:	mov    eax,esi
1000c4ab:	call   0x1000c496
1000c4b0:	cmp    DWORD PTR [esp+0x4],eax
1000c4b4:	jb     0x1000c4bb
1000c4b6:	call   0x100422b0
1000c4bb:	mov    eax,DWORD PTR [esp+0x4]
1000c4bf:	shl    eax,0x4
1000c4c2:	add    eax,DWORD PTR [esi+0x4]
1000c4c5:	ret    0x4
1000c4c8:	mov    ecx,DWORD PTR [eax+0x4]
1000c4cb:	test   ecx,ecx
1000c4cd:	jne    0x1000c4d2
1000c4cf:	xor    eax,eax
1000c4d1:	ret    
1000c4d2:	mov    eax,DWORD PTR [eax+0x8]
1000c4d5:	sub    eax,ecx
1000c4d7:	push   0x1c
1000c4d9:	cdq    
1000c4da:	pop    ecx
1000c4db:	idiv   ecx
1000c4dd:	ret    
1000c4de:	mov    eax,esi
1000c4e0:	call   0x1000c4c8
1000c4e5:	cmp    DWORD PTR [esp+0x4],eax
1000c4e9:	jb     0x1000c4f0
1000c4eb:	call   0x100422b0
1000c4f0:	mov    eax,DWORD PTR [esp+0x4]
1000c4f4:	imul   eax,eax,0x1c
1000c4f7:	add    eax,DWORD PTR [esi+0x4]
1000c4fa:	ret    0x4
1000c4fd:	push   ebp
1000c4fe:	mov    ebp,esp
1000c500:	sub    esp,0x18
1000c503:	mov    eax,DWORD PTR [ebx+0x4]
1000c506:	push   esi
1000c507:	mov    esi,DWORD PTR [eax+0x4]
1000c50a:	mov    DWORD PTR [ebp-0x8],eax
1000c50d:	mov    al,0x1
1000c50f:	mov    BYTE PTR [ebp-0xc],al
1000c512:	jmp    0x1000c530
1000c514:	mov    eax,DWORD PTR [ebp+0x8]
1000c517:	lea    ecx,[esi+0xc]
1000c51a:	mov    DWORD PTR [ebp-0x8],esi
1000c51d:	call   0x1000481d
1000c522:	test   al,al
1000c524:	mov    BYTE PTR [ebp-0xc],al
1000c527:	je     0x1000c52d
1000c529:	mov    esi,DWORD PTR [esi]
1000c52b:	jmp    0x1000c530
1000c52d:	mov    esi,DWORD PTR [esi+0x8]
1000c530:	cmp    BYTE PTR [esi+0x39],0x0
1000c534:	je     0x1000c514
1000c536:	test   al,al
1000c538:	mov    ecx,DWORD PTR [ebp-0x8]
1000c53b:	mov    esi,ecx
1000c53d:	mov    DWORD PTR [ebp-0x10],esi
1000c540:	mov    DWORD PTR [ebp-0x14],ebx
1000c543:	je     0x1000c577
1000c545:	mov    eax,DWORD PTR [ebx+0x4]
1000c548:	cmp    ecx,DWORD PTR [eax]
1000c54a:	jne    0x1000c56c
1000c54c:	push   DWORD PTR [ebp+0x8]
1000c54f:	push   0x1
1000c551:	lea    eax,[ebp-0x14]
1000c554:	push   eax
1000c555:	mov    esi,ebx
1000c557:	call   0x1000cc15
1000c55c:	mov    ecx,DWORD PTR [eax]
1000c55e:	mov    eax,DWORD PTR [eax+0x4]
1000c561:	mov    DWORD PTR [edi],ecx
1000c563:	mov    DWORD PTR [edi+0x4],eax
1000c566:	mov    BYTE PTR [edi+0x8],0x1
1000c56a:	jmp    0x1000c59d
1000c56c:	lea    esi,[ebp-0x14]
1000c56f:	call   0x1000cd95
1000c574:	mov    esi,DWORD PTR [ebp-0x10]
1000c577:	mov    ecx,DWORD PTR [ebp+0x8]
1000c57a:	lea    eax,[esi+0xc]
1000c57d:	call   0x1000481d
1000c582:	test   al,al
1000c584:	je     0x1000c591
1000c586:	push   DWORD PTR [ebp+0x8]
1000c589:	mov    ecx,DWORD PTR [ebp-0x8]
1000c58c:	push   DWORD PTR [ebp-0xc]
1000c58f:	jmp    0x1000c551
1000c591:	mov    eax,DWORD PTR [ebp-0x14]
1000c594:	mov    DWORD PTR [edi],eax
1000c596:	mov    DWORD PTR [edi+0x4],esi
1000c599:	mov    BYTE PTR [edi+0x8],0x0
1000c59d:	mov    eax,edi
1000c59f:	pop    esi
1000c5a0:	leave  
1000c5a1:	ret    0x4
1000c5a4:	push   0x44
1000c5a6:	mov    eax,0x1005ef45
1000c5ab:	call   0x10058845
1000c5b0:	mov    edi,DWORD PTR [ebp+0x14]
1000c5b3:	cmp    BYTE PTR [edi+0x39],0x0
1000c5b7:	je     0x1000c5eb
1000c5b9:	push   0x1006bafc
1000c5be:	lea    ecx,[ebp-0x28]
1000c5c1:	call   0x100011d6
1000c5c6:	and    DWORD PTR [ebp-0x4],0x0
1000c5ca:	lea    eax,[ebp-0x28]
1000c5cd:	push   eax
1000c5ce:	lea    ecx,[ebp-0x50]
1000c5d1:	call   0x10001065
1000c5d6:	push   0x10073880
1000c5db:	lea    eax,[ebp-0x50]
1000c5de:	push   eax
1000c5df:	mov    DWORD PTR [ebp-0x50],0x1006a788
1000c5e6:	call   0x10046704
1000c5eb:	lea    esi,[ebp+0x10]
1000c5ee:	call   0x10009773
1000c5f3:	mov    ecx,DWORD PTR [edi]
1000c5f5:	cmp    BYTE PTR [ecx+0x39],0x0
1000c5f9:	je     0x1000c600
1000c5fb:	mov    ebx,DWORD PTR [edi+0x8]
1000c5fe:	jmp    0x1000c617
1000c600:	mov    eax,DWORD PTR [edi+0x8]
1000c603:	cmp    BYTE PTR [eax+0x39],0x0
1000c607:	je     0x1000c60d
1000c609:	mov    ebx,ecx
1000c60b:	jmp    0x1000c617
1000c60d:	mov    eax,DWORD PTR [ebp+0x14]
1000c610:	cmp    eax,edi
1000c612:	mov    ebx,DWORD PTR [eax+0x8]
1000c615:	jne    0x1000c68d
1000c617:	cmp    BYTE PTR [ebx+0x39],0x0
1000c61b:	mov    esi,DWORD PTR [edi+0x4]
1000c61e:	jne    0x1000c623
1000c620:	mov    DWORD PTR [ebx+0x4],esi
1000c623:	mov    ecx,DWORD PTR [ebp+0x8]
1000c626:	mov    eax,DWORD PTR [ecx+0x4]
1000c629:	cmp    DWORD PTR [eax+0x4],edi
1000c62c:	jne    0x1000c633
1000c62e:	mov    DWORD PTR [eax+0x4],ebx
1000c631:	jmp    0x1000c63e
1000c633:	cmp    DWORD PTR [esi],edi
1000c635:	jne    0x1000c63b
1000c637:	mov    DWORD PTR [esi],ebx
1000c639:	jmp    0x1000c63e
1000c63b:	mov    DWORD PTR [esi+0x8],ebx
1000c63e:	mov    edx,DWORD PTR [ecx+0x4]
1000c641:	cmp    DWORD PTR [edx],edi
1000c643:	jne    0x1000c661
1000c645:	cmp    BYTE PTR [ebx+0x39],0x0
1000c649:	je     0x1000c64f
1000c64b:	mov    ecx,esi
1000c64d:	jmp    0x1000c65f
1000c64f:	mov    eax,DWORD PTR [ebx]
1000c651:	mov    ecx,ebx
1000c653:	jmp    0x1000c659
1000c655:	mov    ecx,eax
1000c657:	mov    eax,DWORD PTR [ecx]
1000c659:	cmp    BYTE PTR [eax+0x39],0x0
1000c65d:	je     0x1000c655
1000c65f:	mov    DWORD PTR [edx],ecx
1000c661:	mov    eax,DWORD PTR [ebp+0x8]
1000c664:	mov    edx,DWORD PTR [eax+0x4]
1000c667:	cmp    DWORD PTR [edx+0x8],edi
1000c66a:	jne    0x1000c6e7
1000c66c:	cmp    BYTE PTR [ebx+0x39],0x0
1000c670:	je     0x1000c676
1000c672:	mov    ecx,esi
1000c674:	jmp    0x1000c688
1000c676:	mov    eax,DWORD PTR [ebx+0x8]
1000c679:	mov    ecx,ebx
1000c67b:	jmp    0x1000c682
1000c67d:	mov    ecx,eax
1000c67f:	mov    eax,DWORD PTR [ecx+0x8]
1000c682:	cmp    BYTE PTR [eax+0x39],0x0
1000c686:	je     0x1000c67d
1000c688:	mov    DWORD PTR [edx+0x8],ecx
1000c68b:	jmp    0x1000c6e7
1000c68d:	mov    DWORD PTR [ecx+0x4],eax
1000c690:	mov    ecx,DWORD PTR [edi]
1000c692:	mov    DWORD PTR [eax],ecx
1000c694:	cmp    eax,DWORD PTR [edi+0x8]
1000c697:	jne    0x1000c69d
1000c699:	mov    esi,eax
1000c69b:	jmp    0x1000c6b7
1000c69d:	cmp    BYTE PTR [ebx+0x39],0x0
1000c6a1:	mov    esi,DWORD PTR [eax+0x4]
1000c6a4:	jne    0x1000c6a9
1000c6a6:	mov    DWORD PTR [ebx+0x4],esi
1000c6a9:	mov    DWORD PTR [esi],ebx
1000c6ab:	mov    ecx,DWORD PTR [edi+0x8]
1000c6ae:	mov    DWORD PTR [eax+0x8],ecx
1000c6b1:	mov    ecx,DWORD PTR [edi+0x8]
1000c6b4:	mov    DWORD PTR [ecx+0x4],eax
1000c6b7:	mov    ecx,DWORD PTR [ebp+0x8]
1000c6ba:	mov    ecx,DWORD PTR [ecx+0x4]
1000c6bd:	cmp    DWORD PTR [ecx+0x4],edi
1000c6c0:	jne    0x1000c6c7
1000c6c2:	mov    DWORD PTR [ecx+0x4],eax
1000c6c5:	jmp    0x1000c6d5
1000c6c7:	mov    ecx,DWORD PTR [edi+0x4]
1000c6ca:	cmp    DWORD PTR [ecx],edi
1000c6cc:	jne    0x1000c6d2
1000c6ce:	mov    DWORD PTR [ecx],eax
1000c6d0:	jmp    0x1000c6d5
1000c6d2:	mov    DWORD PTR [ecx+0x8],eax
1000c6d5:	mov    ecx,DWORD PTR [edi+0x4]
1000c6d8:	mov    DWORD PTR [eax+0x4],ecx
1000c6db:	mov    dl,BYTE PTR [edi+0x38]
1000c6de:	mov    cl,BYTE PTR [eax+0x38]
1000c6e1:	mov    BYTE PTR [eax+0x38],dl
1000c6e4:	mov    BYTE PTR [edi+0x38],cl
1000c6e7:	cmp    BYTE PTR [edi+0x38],0x1
1000c6eb:	jne    0x1000c803
1000c6f1:	jmp    0x1000c7b7
1000c6f6:	cmp    BYTE PTR [ebx+0x38],0x1
1000c6fa:	jne    0x1000c7ff
1000c700:	mov    ecx,DWORD PTR [esi]
1000c702:	cmp    ebx,ecx
1000c704:	jne    0x1000c77d
1000c706:	mov    ecx,DWORD PTR [esi+0x8]
1000c709:	cmp    BYTE PTR [ecx+0x38],0x0
1000c70d:	jne    0x1000c724
1000c70f:	push   DWORD PTR [ebp+0x8]
1000c712:	mov    BYTE PTR [ecx+0x38],0x1
1000c716:	mov    ecx,esi
1000c718:	mov    BYTE PTR [esi+0x38],0x0
1000c71c:	call   0x10009c7e
1000c721:	mov    ecx,DWORD PTR [esi+0x8]
1000c724:	cmp    BYTE PTR [ecx+0x39],0x0
1000c728:	jne    0x1000c7b2
1000c72e:	mov    eax,DWORD PTR [ecx]
1000c730:	cmp    BYTE PTR [eax+0x38],0x1
1000c734:	jne    0x1000c73f
1000c736:	mov    eax,DWORD PTR [ecx+0x8]
1000c739:	cmp    BYTE PTR [eax+0x38],0x1
1000c73d:	je     0x1000c7ae
1000c73f:	mov    eax,DWORD PTR [ecx+0x8]
1000c742:	cmp    BYTE PTR [eax+0x38],0x1
1000c746:	jne    0x1000c75d
1000c748:	mov    eax,DWORD PTR [ecx]
1000c74a:	push   DWORD PTR [ebp+0x8]
1000c74d:	mov    BYTE PTR [eax+0x38],0x1
1000c751:	mov    BYTE PTR [ecx+0x38],0x0
1000c755:	call   0x10009cbe
1000c75a:	mov    ecx,DWORD PTR [esi+0x8]
1000c75d:	mov    al,BYTE PTR [esi+0x38]
1000c760:	push   DWORD PTR [ebp+0x8]
1000c763:	mov    BYTE PTR [ecx+0x38],al
1000c766:	mov    BYTE PTR [esi+0x38],0x1
1000c76a:	mov    eax,DWORD PTR [ecx+0x8]
1000c76d:	mov    ecx,esi
1000c76f:	mov    BYTE PTR [eax+0x38],0x1
1000c773:	call   0x10009c7e
1000c778:	jmp    0x1000c7ff
1000c77d:	cmp    BYTE PTR [ecx+0x38],0x0
1000c781:	jne    0x1000c797
1000c783:	push   DWORD PTR [ebp+0x8]
1000c786:	mov    BYTE PTR [ecx+0x38],0x1
1000c78a:	mov    ecx,esi
1000c78c:	mov    BYTE PTR [esi+0x38],0x0
1000c790:	call   0x10009cbe
1000c795:	mov    ecx,DWORD PTR [esi]
1000c797:	cmp    BYTE PTR [ecx+0x39],0x0
1000c79b:	jne    0x1000c7b2
1000c79d:	mov    eax,DWORD PTR [ecx+0x8]
1000c7a0:	cmp    BYTE PTR [eax+0x38],0x1
1000c7a4:	jne    0x1000c7c8
1000c7a6:	mov    eax,DWORD PTR [ecx]
1000c7a8:	cmp    BYTE PTR [eax+0x38],0x1
1000c7ac:	jne    0x1000c7c8
1000c7ae:	mov    BYTE PTR [ecx+0x38],0x0
1000c7b2:	mov    ebx,esi
1000c7b4:	mov    esi,DWORD PTR [esi+0x4]
1000c7b7:	mov    eax,DWORD PTR [ebp+0x8]
1000c7ba:	mov    eax,DWORD PTR [eax+0x4]
1000c7bd:	cmp    ebx,DWORD PTR [eax+0x4]
1000c7c0:	jne    0x1000c6f6
1000c7c6:	jmp    0x1000c7ff
1000c7c8:	mov    eax,DWORD PTR [ecx]
1000c7ca:	cmp    BYTE PTR [eax+0x38],0x1
1000c7ce:	jne    0x1000c7e5
1000c7d0:	mov    eax,DWORD PTR [ecx+0x8]
1000c7d3:	push   DWORD PTR [ebp+0x8]
1000c7d6:	mov    BYTE PTR [eax+0x38],0x1
1000c7da:	mov    BYTE PTR [ecx+0x38],0x0
1000c7de:	call   0x10009c7e
1000c7e3:	mov    ecx,DWORD PTR [esi]
1000c7e5:	mov    al,BYTE PTR [esi+0x38]
1000c7e8:	push   DWORD PTR [ebp+0x8]
1000c7eb:	mov    BYTE PTR [ecx+0x38],al
1000c7ee:	mov    BYTE PTR [esi+0x38],0x1
1000c7f2:	mov    eax,DWORD PTR [ecx]
1000c7f4:	mov    ecx,esi
1000c7f6:	mov    BYTE PTR [eax+0x38],0x1
1000c7fa:	call   0x10009cbe
1000c7ff:	mov    BYTE PTR [ebx+0x38],0x1
1000c803:	lea    ebx,[edi+0xc]
1000c806:	lea    esi,[ebx+0x1c]
1000c809:	call   0x1000c958
1000c80e:	push   0x0
1000c810:	push   0x1
1000c812:	mov    ecx,ebx
1000c814:	call   0x100012f9
1000c819:	push   edi
1000c81a:	call   0x10041d92
1000c81f:	pop    ecx
1000c820:	mov    ecx,DWORD PTR [ebp+0x8]
1000c823:	mov    eax,DWORD PTR [ecx+0x8]
1000c826:	test   eax,eax
1000c828:	jbe    0x1000c82e
1000c82a:	dec    eax
1000c82b:	mov    DWORD PTR [ecx+0x8],eax
1000c82e:	mov    ecx,DWORD PTR [ebp+0x10]
1000c831:	mov    eax,DWORD PTR [ebp+0xc]
1000c834:	mov    DWORD PTR [eax],ecx
1000c836:	mov    ecx,DWORD PTR [ebp+0x14]
1000c839:	mov    DWORD PTR [eax+0x4],ecx
1000c83c:	call   0x1005891d
1000c841:	ret    0x10
1000c844:	push   ebp
1000c845:	mov    ebp,esp
1000c847:	mov    eax,DWORD PTR [edi+0x4]
1000c84a:	sub    esp,0x10
1000c84d:	push   ebx
1000c84e:	push   esi
1000c84f:	mov    esi,DWORD PTR [eax+0x4]
1000c852:	mov    ebx,eax
1000c854:	jmp    0x1000c86e
1000c856:	mov    ecx,DWORD PTR [ebp+0xc]
1000c859:	lea    eax,[esi+0xc]
1000c85c:	call   0x1000481d
1000c861:	test   al,al
1000c863:	je     0x1000c86a
1000c865:	mov    esi,DWORD PTR [esi+0x8]
1000c868:	jmp    0x1000c86e
1000c86a:	mov    ebx,esi
1000c86c:	mov    esi,DWORD PTR [esi]
1000c86e:	cmp    BYTE PTR [esi+0x39],0x0
1000c872:	je     0x1000c856
1000c874:	cmp    ebx,DWORD PTR [edi+0x4]
1000c877:	mov    DWORD PTR [ebp-0x4],ebx
1000c87a:	mov    DWORD PTR [ebp-0x8],edi
1000c87d:	je     0x1000c893
1000c87f:	mov    eax,DWORD PTR [ebp+0xc]
1000c882:	lea    ecx,[ebx+0xc]
1000c885:	call   0x1000481d
1000c88a:	test   al,al
1000c88c:	jne    0x1000c893
1000c88e:	lea    ecx,[ebp-0x8]
1000c891:	jmp    0x1000c89f
1000c893:	mov    eax,DWORD PTR [edi+0x4]
1000c896:	mov    DWORD PTR [ebp-0xc],eax
1000c899:	mov    DWORD PTR [ebp-0x10],edi
1000c89c:	lea    ecx,[ebp-0x10]
1000c89f:	mov    edx,DWORD PTR [ecx]
1000c8a1:	mov    eax,DWORD PTR [ebp+0x8]
1000c8a4:	mov    ecx,DWORD PTR [ecx+0x4]
1000c8a7:	pop    esi
1000c8a8:	mov    DWORD PTR [eax],edx
1000c8aa:	mov    DWORD PTR [eax+0x4],ecx
1000c8ad:	pop    ebx
1000c8ae:	leave  
1000c8af:	ret    0x8
1000c8b2:	push   0x10
1000c8b4:	mov    eax,0x1005f344
1000c8b9:	call   0x10058878
1000c8be:	mov    ebx,ecx
1000c8c0:	mov    esi,DWORD PTR [ebp+0x8]
1000c8c3:	mov    eax,ebx
1000c8c5:	call   0x1000c973
1000c8ca:	xor    ecx,ecx
1000c8cc:	cmp    eax,ecx
1000c8ce:	mov    DWORD PTR [esi+0x4],ecx
1000c8d1:	mov    DWORD PTR [esi+0x8],ecx
1000c8d4:	mov    DWORD PTR [esi+0xc],ecx
1000c8d7:	je     0x1000c92a
1000c8d9:	mov    edi,esi
1000c8db:	call   0x1000ce6d
1000c8e0:	test   al,al
1000c8e2:	je     0x1000c92a
1000c8e4:	and    DWORD PTR [ebp-0x4],0x0
1000c8e8:	mov    eax,DWORD PTR [ebx+0x8]
1000c8eb:	cmp    DWORD PTR [ebx+0x4],eax
1000c8ee:	mov    DWORD PTR [ebp-0x18],eax
1000c8f1:	jbe    0x1000c8f8
1000c8f3:	call   0x100422b0
1000c8f8:	mov    eax,DWORD PTR [ebx+0x4]
1000c8fb:	cmp    eax,DWORD PTR [ebx+0x8]
1000c8fe:	mov    DWORD PTR [ebp-0x1c],eax
1000c901:	jbe    0x1000c908
1000c903:	call   0x100422b0
1000c908:	mov    ecx,DWORD PTR [esi+0x4]
1000c90b:	mov    edx,DWORD PTR [ebp-0x1c]
1000c90e:	xor    eax,eax
1000c910:	lea    edi,[ebp-0x14]
1000c913:	stos   BYTE PTR es:[edi],al
1000c914:	push   DWORD PTR [ebp-0x14]
1000c917:	mov    eax,ecx
1000c919:	push   DWORD PTR [ebp+0x8]
1000c91c:	push   DWORD PTR [ebp-0x18]
1000c91f:	call   0x1000d39e
1000c924:	add    esp,0xc
1000c927:	mov    DWORD PTR [esi+0x8],eax
1000c92a:	mov    eax,esi
1000c92c:	call   0x1005891d
1000c931:	ret    0x4
1000c934:	mov    esi,DWORD PTR [ebp+0x8]
1000c937:	mov    eax,DWORD PTR [esi+0x4]
1000c93a:	xor    edi,edi
1000c93c:	cmp    eax,edi
1000c93e:	je     0x1000c947
1000c940:	push   eax
1000c941:	call   0x10041d92
1000c946:	pop    ecx
1000c947:	push   edi
1000c948:	push   edi
1000c949:	mov    DWORD PTR [esi+0x4],edi
1000c94c:	mov    DWORD PTR [esi+0x8],edi
1000c94f:	mov    DWORD PTR [esi+0xc],edi
1000c952:	call   0x10046704
1000c957:	int3   
1000c958:	mov    eax,DWORD PTR [esi+0x4]
1000c95b:	test   eax,eax
1000c95d:	je     0x1000c966
1000c95f:	push   eax
1000c960:	call   0x10041d92
1000c965:	pop    ecx
1000c966:	and    DWORD PTR [esi+0x4],0x0
1000c96a:	and    DWORD PTR [esi+0x8],0x0
1000c96e:	and    DWORD PTR [esi+0xc],0x0
1000c972:	ret    
1000c973:	mov    ecx,DWORD PTR [eax+0x4]
1000c976:	test   ecx,ecx
1000c978:	jne    0x1000c97d
1000c97a:	xor    eax,eax
1000c97c:	ret    
1000c97d:	mov    eax,DWORD PTR [eax+0x8]
1000c980:	sub    eax,ecx
1000c982:	push   0x18
1000c984:	cdq    
1000c985:	pop    ecx
1000c986:	idiv   ecx
1000c988:	ret    
1000c989:	mov    eax,esi
1000c98b:	call   0x1000c973
1000c990:	cmp    DWORD PTR [esp+0x4],eax
1000c994:	jb     0x1000c99b
1000c996:	call   0x100422b0
1000c99b:	mov    eax,DWORD PTR [esp+0x4]
1000c99f:	imul   eax,eax,0x18
1000c9a2:	add    eax,DWORD PTR [esi+0x4]
1000c9a5:	ret    0x4
1000c9a8:	push   ebp
1000c9a9:	mov    ebp,esp
1000c9ab:	sub    esp,0x10
1000c9ae:	push   ebx
1000c9af:	push   esi
1000c9b0:	mov    esi,eax
1000c9b2:	push   edi
1000c9b3:	mov    edi,DWORD PTR [esi+0x4]
1000c9b6:	test   edi,edi
1000c9b8:	jne    0x1000c9be
1000c9ba:	xor    ebx,ebx
1000c9bc:	jmp    0x1000c9cb
1000c9be:	mov    eax,DWORD PTR [esi+0xc]
1000c9c1:	sub    eax,edi
1000c9c3:	push   0x18
1000c9c5:	cdq    
1000c9c6:	pop    ecx
1000c9c7:	idiv   ecx
1000c9c9:	mov    ebx,eax
1000c9cb:	mov    eax,esi
1000c9cd:	call   0x1000c973
1000c9d2:	cmp    eax,ebx
1000c9d4:	jae    0x1000c9e8
1000c9d6:	push   DWORD PTR [ebp+0x8]
1000c9d9:	push   0x1
1000c9db:	push   DWORD PTR [esi+0x8]
1000c9de:	call   0x1000ce96
1000c9e3:	mov    DWORD PTR [esi+0x8],eax
1000c9e6:	jmp    0x1000ca02
1000c9e8:	mov    ebx,DWORD PTR [esi+0x8]
1000c9eb:	cmp    edi,ebx
1000c9ed:	jbe    0x1000c9f4
1000c9ef:	call   0x100422b0
1000c9f4:	push   ebx
1000c9f5:	push   esi
1000c9f6:	push   DWORD PTR [ebp+0x8]
1000c9f9:	lea    eax,[ebp-0xc]
1000c9fc:	push   eax
1000c9fd:	call   0x1000cdf6
1000ca02:	pop    edi
1000ca03:	pop    esi
1000ca04:	pop    ebx
1000ca05:	leave  
1000ca06:	ret    0x4
1000ca09:	push   ebp
1000ca0a:	mov    ebp,esp
1000ca0c:	push   ecx
1000ca0d:	mov    edx,DWORD PTR [ebp+0x10]
1000ca10:	mov    eax,DWORD PTR [ebx+0x8]
1000ca13:	add    edx,0x18
1000ca16:	cmp    edx,eax
1000ca18:	je     0x1000ca39
1000ca1a:	lea    ecx,[edx-0x18]
1000ca1d:	push   esi
1000ca1e:	mov    DWORD PTR [ebp-0x4],ecx
1000ca21:	push   edi
1000ca22:	mov    edi,DWORD PTR [ebp-0x4]
1000ca25:	add    DWORD PTR [ebp-0x4],0x18
1000ca29:	mov    esi,edx
1000ca2b:	push   0x6
1000ca2d:	add    edx,0x18
1000ca30:	cmp    edx,eax
1000ca32:	pop    ecx
1000ca33:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ca35:	jne    0x1000ca22
1000ca37:	pop    edi
1000ca38:	pop    esi
1000ca39:	mov    ecx,DWORD PTR [ebp+0xc]
1000ca3c:	mov    eax,DWORD PTR [ebp+0x8]
1000ca3f:	add    DWORD PTR [ebx+0x8],0xffffffe8
1000ca43:	mov    DWORD PTR [eax],ecx
1000ca45:	mov    ecx,DWORD PTR [ebp+0x10]
1000ca48:	mov    DWORD PTR [eax+0x4],ecx
1000ca4b:	leave  
1000ca4c:	ret    0xc
1000ca4f:	cmp    DWORD PTR [esi],0x0
1000ca52:	jne    0x1000ca59
1000ca54:	call   0x100422b0
1000ca59:	mov    eax,DWORD PTR [esi]
1000ca5b:	mov    ecx,DWORD PTR [esi+0x4]
1000ca5e:	cmp    ecx,DWORD PTR [eax+0x8]
1000ca61:	jb     0x1000ca68
1000ca63:	call   0x100422b0
1000ca68:	mov    eax,DWORD PTR [esi+0x4]
1000ca6b:	ret    
1000ca6c:	push   ebx
1000ca6d:	mov    ebx,DWORD PTR [eax+0x4]
1000ca70:	push   esi
1000ca71:	mov    esi,DWORD PTR [eax]
1000ca73:	test   esi,esi
1000ca75:	push   edi
1000ca76:	mov    edi,ecx
1000ca78:	jne    0x1000ca7f
1000ca7a:	call   0x100422b0
1000ca7f:	imul   edi,edi,0x18
1000ca82:	add    edi,ebx
1000ca84:	cmp    edi,DWORD PTR [esi+0x8]
1000ca87:	ja     0x1000ca8e
1000ca89:	cmp    edi,DWORD PTR [esi+0x4]
1000ca8c:	jae    0x1000ca93
1000ca8e:	call   0x100422b0
1000ca93:	mov    eax,DWORD PTR [esp+0x10]
1000ca97:	mov    DWORD PTR [eax+0x4],edi
1000ca9a:	pop    edi
1000ca9b:	mov    DWORD PTR [eax],esi
1000ca9d:	pop    esi
1000ca9e:	pop    ebx
1000ca9f:	ret    0x4
1000caa2:	push   esi
1000caa3:	mov    esi,DWORD PTR [eax]
1000caa5:	test   esi,esi
1000caa7:	je     0x1000cab6
1000caa9:	push   esi
1000caaa:	call   0x1000c221
1000caaf:	push   esi
1000cab0:	call   0x10041d92
1000cab5:	pop    ecx
1000cab6:	pop    esi
1000cab7:	ret    
1000cab8:	push   0x0
1000caba:	mov    ecx,esi
1000cabc:	mov    DWORD PTR [esi+0x18],0xf
1000cac3:	call   0x10001425
1000cac8:	push   DWORD PTR [esp+0xc]
1000cacc:	mov    ecx,esi
1000cace:	push   DWORD PTR [esp+0xc]
1000cad2:	push   DWORD PTR [esp+0xc]
1000cad6:	call   0x1000124a
1000cadb:	mov    eax,esi
1000cadd:	ret    0xc
1000cae0:	or     eax,0xffffffff
1000cae3:	sub    eax,DWORD PTR [esi+0x14]
1000cae6:	cmp    eax,ebx
1000cae8:	ja     0x1000caef
1000caea:	call   0x1005600a
1000caef:	test   ebx,ebx
1000caf1:	jbe    0x1000cb4f
1000caf3:	push   edi
1000caf4:	mov    edi,DWORD PTR [esi+0x14]
1000caf7:	push   0x0
1000caf9:	add    edi,ebx
1000cafb:	push   edi
1000cafc:	mov    ecx,esi
1000cafe:	call   0x10001441
1000cb03:	test   al,al
1000cb05:	je     0x1000cb4e
1000cb07:	cmp    ebx,0x1
1000cb0a:	mov    ecx,DWORD PTR [esi+0x14]
1000cb0d:	jne    0x1000cb26
1000cb0f:	cmp    DWORD PTR [esi+0x18],0x10
1000cb13:	jb     0x1000cb1a
1000cb15:	mov    eax,DWORD PTR [esi+0x4]
1000cb18:	jmp    0x1000cb1d
1000cb1a:	lea    eax,[esi+0x4]
1000cb1d:	mov    dl,BYTE PTR [esp+0x8]
1000cb21:	mov    BYTE PTR [eax+ecx*1],dl
1000cb24:	jmp    0x1000cb46
1000cb26:	cmp    DWORD PTR [esi+0x18],0x10
1000cb2a:	jb     0x1000cb31
1000cb2c:	mov    eax,DWORD PTR [esi+0x4]
1000cb2f:	jmp    0x1000cb34
1000cb31:	lea    eax,[esi+0x4]
1000cb34:	movsx  edx,BYTE PTR [esp+0x8]
1000cb39:	push   ebx
1000cb3a:	push   edx
1000cb3b:	add    eax,ecx
1000cb3d:	push   eax
1000cb3e:	call   0x10044950
1000cb43:	add    esp,0xc
1000cb46:	push   edi
1000cb47:	mov    ecx,esi
1000cb49:	call   0x10001425
1000cb4e:	pop    edi
1000cb4f:	mov    eax,esi
1000cb51:	ret    0x4
1000cb54:	push   ebp
1000cb55:	mov    ebp,esp
1000cb57:	push   ecx
1000cb58:	cmp    DWORD PTR [ebp+0x10],0x0
1000cb5c:	mov    ecx,DWORD PTR [ebp+0x8]
1000cb5f:	jne    0x1000cb66
1000cb61:	cmp    eax,DWORD PTR [ecx+0x14]
1000cb64:	jbe    0x1000cbd3
1000cb66:	push   ebx
1000cb67:	push   esi
1000cb68:	mov    esi,DWORD PTR [ecx+0x14]
1000cb6b:	cmp    eax,esi
1000cb6d:	push   edi
1000cb6e:	jae    0x1000cbcd
1000cb70:	sub    esi,eax
1000cb72:	cmp    DWORD PTR [ebp+0x10],esi
1000cb75:	ja     0x1000cbcd
1000cb77:	xor    edx,edx
1000cb79:	inc    edx
1000cb7a:	sub    edx,DWORD PTR [ebp+0x10]
1000cb7d:	add    esi,edx
1000cb7f:	cmp    DWORD PTR [ecx+0x18],0x10
1000cb83:	jb     0x1000cb8f
1000cb85:	add    ecx,0x4
1000cb88:	mov    DWORD PTR [ebp-0x4],ecx
1000cb8b:	mov    ecx,DWORD PTR [ecx]
1000cb8d:	jmp    0x1000cb95
1000cb8f:	add    ecx,0x4
1000cb92:	mov    DWORD PTR [ebp-0x4],ecx
1000cb95:	lea    ebx,[ecx+eax*1]
1000cb98:	jmp    0x1000cbb6
1000cb9a:	push   DWORD PTR [ebp+0x10]
1000cb9d:	push   DWORD PTR [ebp+0xc]
1000cba0:	push   edi
1000cba1:	call   0x1004260e
1000cba6:	add    esp,0xc
1000cba9:	test   eax,eax
1000cbab:	je     0x1000cbd7
1000cbad:	sub    ebx,edi
1000cbaf:	lea    esi,[esi+ebx*1-0x1]
1000cbb3:	lea    ebx,[edi+0x1]
1000cbb6:	mov    eax,DWORD PTR [ebp+0xc]
1000cbb9:	movsx  eax,BYTE PTR [eax]
1000cbbc:	push   esi
1000cbbd:	push   eax
1000cbbe:	push   ebx
1000cbbf:	call   0x100448a0
1000cbc4:	mov    edi,eax
1000cbc6:	add    esp,0xc
1000cbc9:	test   edi,edi
1000cbcb:	jne    0x1000cb9a
1000cbcd:	or     eax,0xffffffff
1000cbd0:	pop    edi
1000cbd1:	pop    esi
1000cbd2:	pop    ebx
1000cbd3:	leave  
1000cbd4:	ret    0xc
1000cbd7:	mov    eax,DWORD PTR [ebp+0x8]
1000cbda:	cmp    DWORD PTR [eax+0x18],0x10
1000cbde:	jb     0x1000cbe7
1000cbe0:	mov    eax,DWORD PTR [ebp-0x4]
1000cbe3:	mov    ecx,DWORD PTR [eax]
1000cbe5:	jmp    0x1000cbea
1000cbe7:	mov    ecx,DWORD PTR [ebp-0x4]
1000cbea:	mov    eax,edi
1000cbec:	sub    eax,ecx
1000cbee:	jmp    0x1000cbd0
1000cbf0:	mov    eax,DWORD PTR [esi+0x4]
1000cbf3:	test   eax,eax
1000cbf5:	je     0x1000cc08
1000cbf7:	push   DWORD PTR [esi+0x8]
1000cbfa:	call   0x1000cec6
1000cbff:	push   DWORD PTR [esi+0x4]
1000cc02:	call   0x10041d92
1000cc07:	pop    ecx
1000cc08:	and    DWORD PTR [esi+0x4],0x0
1000cc0c:	and    DWORD PTR [esi+0x8],0x0
1000cc10:	and    DWORD PTR [esi+0xc],0x0
1000cc14:	ret    
1000cc15:	push   0x48
1000cc17:	mov    eax,0x1005f147
1000cc1c:	call   0x10058845
1000cc21:	mov    edi,ecx
1000cc23:	cmp    DWORD PTR [esi+0x8],0x5d1745c
1000cc2a:	jb     0x1000cc5e
1000cc2c:	push   0x1006bcb4
1000cc31:	lea    ecx,[ebp-0x2c]
1000cc34:	call   0x100011d6
1000cc39:	and    DWORD PTR [ebp-0x4],0x0
1000cc3d:	lea    eax,[ebp-0x2c]
1000cc40:	push   eax
1000cc41:	lea    ecx,[ebp-0x54]
1000cc44:	call   0x10001065
1000cc49:	push   0x10073960
1000cc4e:	lea    eax,[ebp-0x54]
1000cc51:	push   eax
1000cc52:	mov    DWORD PTR [ebp-0x54],0x1006a77c
1000cc59:	call   0x10046704
1000cc5e:	push   DWORD PTR [ebp+0x10]
1000cc61:	mov    eax,DWORD PTR [esi+0x4]
1000cc64:	push   eax
1000cc65:	push   edi
1000cc66:	push   eax
1000cc67:	call   0x1000cf89
1000cc6c:	inc    DWORD PTR [esi+0x8]
1000cc6f:	mov    ebx,eax
1000cc71:	mov    eax,DWORD PTR [esi+0x4]
1000cc74:	cmp    edi,eax
1000cc76:	jne    0x1000cc85
1000cc78:	mov    DWORD PTR [eax+0x4],ebx
1000cc7b:	mov    eax,DWORD PTR [esi+0x4]
1000cc7e:	mov    DWORD PTR [eax],ebx
1000cc80:	mov    eax,DWORD PTR [esi+0x4]
1000cc83:	jmp    0x1000cca3
1000cc85:	cmp    BYTE PTR [ebp+0xc],0x0
1000cc89:	je     0x1000cc98
1000cc8b:	mov    DWORD PTR [edi],ebx
1000cc8d:	mov    eax,DWORD PTR [esi+0x4]
1000cc90:	cmp    edi,DWORD PTR [eax]
1000cc92:	jne    0x1000cca6
1000cc94:	mov    DWORD PTR [eax],ebx
1000cc96:	jmp    0x1000cca6
1000cc98:	mov    DWORD PTR [edi+0x8],ebx
1000cc9b:	mov    eax,DWORD PTR [esi+0x4]
1000cc9e:	cmp    edi,DWORD PTR [eax+0x8]
1000cca1:	jne    0x1000cca6
1000cca3:	mov    DWORD PTR [eax+0x8],ebx
1000cca6:	mov    edi,ebx
1000cca8:	lea    eax,[ebx+0x4]
1000ccab:	jmp    0x1000cd3a
1000ccb0:	mov    ecx,DWORD PTR [eax]
1000ccb2:	mov    edx,DWORD PTR [ecx+0x4]
1000ccb5:	cmp    ecx,DWORD PTR [edx]
1000ccb7:	jne    0x1000ccee
1000ccb9:	mov    edx,DWORD PTR [edx+0x8]
1000ccbc:	cmp    BYTE PTR [edx+0x38],0x0
1000ccc0:	je     0x1000ccf6
1000ccc2:	cmp    edi,DWORD PTR [ecx+0x8]
1000ccc5:	jne    0x1000cccf
1000ccc7:	push   esi
1000ccc8:	mov    edi,ecx
1000ccca:	call   0x10009c7e
1000cccf:	mov    eax,DWORD PTR [edi+0x4]
1000ccd2:	mov    BYTE PTR [eax+0x38],0x1
1000ccd6:	mov    eax,DWORD PTR [edi+0x4]
1000ccd9:	mov    eax,DWORD PTR [eax+0x4]
1000ccdc:	mov    BYTE PTR [eax+0x38],0x0
1000cce0:	mov    eax,DWORD PTR [edi+0x4]
1000cce3:	mov    ecx,DWORD PTR [eax+0x4]
1000cce6:	push   esi
1000cce7:	call   0x10009cbe
1000ccec:	jmp    0x1000cd37
1000ccee:	mov    edx,DWORD PTR [edx]
1000ccf0:	cmp    BYTE PTR [edx+0x38],0x0
1000ccf4:	jne    0x1000cd0e
1000ccf6:	mov    BYTE PTR [ecx+0x38],0x1
1000ccfa:	mov    BYTE PTR [edx+0x38],0x1
1000ccfe:	mov    ecx,DWORD PTR [eax]
1000cd00:	mov    ecx,DWORD PTR [ecx+0x4]
1000cd03:	mov    BYTE PTR [ecx+0x38],0x0
1000cd07:	mov    eax,DWORD PTR [eax]
1000cd09:	mov    edi,DWORD PTR [eax+0x4]
1000cd0c:	jmp    0x1000cd37
1000cd0e:	cmp    edi,DWORD PTR [ecx]
1000cd10:	jne    0x1000cd1a
1000cd12:	push   esi
1000cd13:	mov    edi,ecx
1000cd15:	call   0x10009cbe
1000cd1a:	mov    eax,DWORD PTR [edi+0x4]
1000cd1d:	mov    BYTE PTR [eax+0x38],0x1
1000cd21:	mov    eax,DWORD PTR [edi+0x4]
1000cd24:	mov    eax,DWORD PTR [eax+0x4]
1000cd27:	mov    BYTE PTR [eax+0x38],0x0
1000cd2b:	mov    eax,DWORD PTR [edi+0x4]
1000cd2e:	mov    ecx,DWORD PTR [eax+0x4]
1000cd31:	push   esi
1000cd32:	call   0x10009c7e
1000cd37:	lea    eax,[edi+0x4]
1000cd3a:	mov    ecx,DWORD PTR [eax]
1000cd3c:	cmp    BYTE PTR [ecx+0x38],0x0
1000cd40:	je     0x1000ccb0
1000cd46:	mov    eax,DWORD PTR [esi+0x4]
1000cd49:	mov    eax,DWORD PTR [eax+0x4]
1000cd4c:	mov    BYTE PTR [eax+0x38],0x1
1000cd50:	mov    eax,DWORD PTR [ebp+0x8]
1000cd53:	mov    DWORD PTR [eax+0x4],ebx
1000cd56:	mov    DWORD PTR [eax],esi
1000cd58:	call   0x1005891d
1000cd5d:	ret    0xc
1000cd60:	push   ebp
1000cd61:	mov    ebp,esp
1000cd63:	and    esp,0xfffffff8
1000cd66:	push   ecx
1000cd67:	push   ecx
1000cd68:	push   ebx
1000cd69:	push   edi
1000cd6a:	mov    edi,eax
1000cd6c:	mov    eax,DWORD PTR [edi+0x4]
1000cd6f:	mov    ecx,DWORD PTR [eax]
1000cd71:	push   eax
1000cd72:	push   edi
1000cd73:	push   ecx
1000cd74:	push   edi
1000cd75:	lea    ebx,[esp+0x18]
1000cd79:	call   0x1000cedd
1000cd7e:	push   DWORD PTR [edi+0x4]
1000cd81:	call   0x10041d92
1000cd86:	and    DWORD PTR [edi+0x4],0x0
1000cd8a:	and    DWORD PTR [edi+0x8],0x0
1000cd8e:	pop    ecx
1000cd8f:	pop    edi
1000cd90:	pop    ebx
1000cd91:	mov    esp,ebp
1000cd93:	pop    ebp
1000cd94:	ret    
1000cd95:	push   ebx
1000cd96:	xor    ebx,ebx
1000cd98:	cmp    DWORD PTR [esi],ebx
1000cd9a:	jne    0x1000cda1
1000cd9c:	call   0x100422b0
1000cda1:	mov    eax,DWORD PTR [esi+0x4]
1000cda4:	cmp    BYTE PTR [eax+0x39],bl
1000cda7:	je     0x1000cdb6
1000cda9:	mov    eax,DWORD PTR [eax+0x8]
1000cdac:	mov    DWORD PTR [esi+0x4],eax
1000cdaf:	cmp    BYTE PTR [eax+0x39],bl
1000cdb2:	je     0x1000cdf2
1000cdb4:	jmp    0x1000cde8
1000cdb6:	mov    ecx,DWORD PTR [eax]
1000cdb8:	cmp    BYTE PTR [ecx+0x39],bl
1000cdbb:	jne    0x1000cdd8
1000cdbd:	jmp    0x1000cdc1
1000cdbf:	mov    ecx,eax
1000cdc1:	mov    eax,DWORD PTR [ecx+0x8]
1000cdc4:	cmp    BYTE PTR [eax+0x39],bl
1000cdc7:	je     0x1000cdbf
1000cdc9:	mov    DWORD PTR [esi+0x4],ecx
1000cdcc:	jmp    0x1000cdf2
1000cdce:	mov    ecx,DWORD PTR [esi+0x4]
1000cdd1:	cmp    ecx,DWORD PTR [eax]
1000cdd3:	jne    0x1000cde0
1000cdd5:	mov    DWORD PTR [esi+0x4],eax
1000cdd8:	mov    eax,DWORD PTR [eax+0x4]
1000cddb:	cmp    BYTE PTR [eax+0x39],bl
1000cdde:	je     0x1000cdce
1000cde0:	mov    ecx,DWORD PTR [esi+0x4]
1000cde3:	cmp    BYTE PTR [ecx+0x39],bl
1000cde6:	je     0x1000cdef
1000cde8:	call   0x100422b0
1000cded:	jmp    0x1000cdf2
1000cdef:	mov    DWORD PTR [esi+0x4],eax
1000cdf2:	mov    eax,esi
1000cdf4:	pop    ebx
1000cdf5:	ret    
1000cdf6:	push   ebp
1000cdf7:	mov    ebp,esp
1000cdf9:	push   ebx
1000cdfa:	push   edi
1000cdfb:	mov    eax,esi
1000cdfd:	call   0x1000c973
1000ce02:	test   eax,eax
1000ce04:	jne    0x1000ce0a
1000ce06:	xor    ebx,ebx
1000ce08:	jmp    0x1000ce34
1000ce0a:	mov    edi,DWORD PTR [esi+0x4]
1000ce0d:	cmp    edi,DWORD PTR [esi+0x8]
1000ce10:	jbe    0x1000ce17
1000ce12:	call   0x100422b0
1000ce17:	cmp    DWORD PTR [ebp+0x10],0x0
1000ce1b:	je     0x1000ce22
1000ce1d:	cmp    DWORD PTR [ebp+0x10],esi
1000ce20:	je     0x1000ce27
1000ce22:	call   0x100422b0
1000ce27:	mov    eax,DWORD PTR [ebp+0x14]
1000ce2a:	sub    eax,edi
1000ce2c:	push   0x18
1000ce2e:	cdq    
1000ce2f:	pop    ecx
1000ce30:	idiv   ecx
1000ce32:	mov    ebx,eax
1000ce34:	push   DWORD PTR [ebp+0x14]
1000ce37:	mov    edx,DWORD PTR [ebp+0xc]
1000ce3a:	push   DWORD PTR [ebp+0x10]
1000ce3d:	mov    ecx,esi
1000ce3f:	call   0x1000cfdb
1000ce44:	mov    edi,DWORD PTR [esi+0x4]
1000ce47:	cmp    edi,DWORD PTR [esi+0x8]
1000ce4a:	jbe    0x1000ce51
1000ce4c:	call   0x100422b0
1000ce51:	push   DWORD PTR [ebp+0x8]
1000ce54:	mov    ecx,ebx
1000ce56:	lea    eax,[ebp+0x10]
1000ce59:	mov    DWORD PTR [ebp+0x10],esi
1000ce5c:	mov    DWORD PTR [ebp+0x14],edi
1000ce5f:	call   0x1000ca6c
1000ce64:	mov    eax,DWORD PTR [ebp+0x8]
1000ce67:	pop    edi
1000ce68:	pop    ebx
1000ce69:	pop    ebp
1000ce6a:	ret    0x10
1000ce6d:	push   esi
1000ce6e:	mov    esi,eax
1000ce70:	cmp    esi,0xaaaaaaa
1000ce76:	jbe    0x1000ce7d
1000ce78:	jmp    0x1000d195
1000ce7d:	mov    ecx,esi
1000ce7f:	call   0x1000d1d4
1000ce84:	imul   esi,esi,0x18
1000ce87:	add    esi,eax
1000ce89:	mov    DWORD PTR [edi+0x4],eax
1000ce8c:	mov    DWORD PTR [edi+0x8],eax
1000ce8f:	mov    DWORD PTR [edi+0xc],esi
1000ce92:	mov    al,0x1
1000ce94:	pop    esi
1000ce95:	ret    
1000ce96:	push   ebp
1000ce97:	mov    ebp,esp
1000ce99:	push   ecx
1000ce9a:	push   edi
1000ce9b:	xor    eax,eax
1000ce9d:	lea    edi,[ebp-0x4]
1000cea0:	stos   BYTE PTR es:[edi],al
1000cea1:	push   DWORD PTR [ebp-0x4]
1000cea4:	push   DWORD PTR [ebp+0xc]
1000cea7:	push   DWORD PTR [ebp+0x10]
1000ceaa:	push   DWORD PTR [ebp+0xc]
1000cead:	push   DWORD PTR [ebp+0x8]
1000ceb0:	call   0x1000d32e
1000ceb5:	mov    eax,DWORD PTR [ebp+0xc]
1000ceb8:	imul   eax,eax,0x18
1000cebb:	add    esp,0x14
1000cebe:	add    eax,DWORD PTR [ebp+0x8]
1000cec1:	pop    edi
1000cec2:	leave  
1000cec3:	ret    0xc
1000cec6:	push   esi
1000cec7:	mov    esi,eax
1000cec9:	jmp    0x1000ced3
1000cecb:	call   0x1000d35f
1000ced0:	add    esi,0x10
1000ced3:	cmp    esi,DWORD PTR [esp+0x8]
1000ced7:	jne    0x1000cecb
1000ced9:	pop    esi
1000ceda:	ret    0x4
1000cedd:	push   ebp
1000cede:	mov    ebp,esp
1000cee0:	mov    eax,DWORD PTR [edi+0x4]
1000cee3:	sub    esp,0x14
1000cee6:	cmp    DWORD PTR [ebp+0x8],0x0
1000ceea:	push   esi
1000ceeb:	mov    esi,DWORD PTR [eax]
1000ceed:	je     0x1000cef4
1000ceef:	cmp    DWORD PTR [ebp+0x8],edi
1000cef2:	je     0x1000cef9
1000cef4:	call   0x100422b0
1000cef9:	cmp    DWORD PTR [ebp+0xc],esi
1000cefc:	jne    0x1000cf41
1000cefe:	cmp    DWORD PTR [ebp+0x10],0x0
1000cf02:	mov    esi,DWORD PTR [edi+0x4]
1000cf05:	je     0x1000cf0c
1000cf07:	cmp    DWORD PTR [ebp+0x10],edi
1000cf0a:	je     0x1000cf11
1000cf0c:	call   0x100422b0
1000cf11:	cmp    DWORD PTR [ebp+0x14],esi
1000cf14:	jne    0x1000cf41
1000cf16:	mov    eax,DWORD PTR [edi+0x4]
1000cf19:	push   DWORD PTR [eax+0x4]
1000cf1c:	mov    ecx,edi
1000cf1e:	call   0x1000d26b
1000cf23:	mov    eax,DWORD PTR [edi+0x4]
1000cf26:	mov    DWORD PTR [eax+0x4],eax
1000cf29:	mov    eax,DWORD PTR [edi+0x4]
1000cf2c:	and    DWORD PTR [edi+0x8],0x0
1000cf30:	mov    DWORD PTR [eax],eax
1000cf32:	mov    eax,DWORD PTR [edi+0x4]
1000cf35:	mov    DWORD PTR [eax+0x8],eax
1000cf38:	mov    eax,DWORD PTR [edi+0x4]
1000cf3b:	mov    eax,DWORD PTR [eax]
1000cf3d:	mov    DWORD PTR [ebx],edi
1000cf3f:	jmp    0x1000cf7f
1000cf41:	mov    eax,DWORD PTR [ebp+0x8]
1000cf44:	test   eax,eax
1000cf46:	je     0x1000cf4d
1000cf48:	cmp    eax,DWORD PTR [ebp+0x10]
1000cf4b:	je     0x1000cf52
1000cf4d:	call   0x100422b0
1000cf52:	mov    eax,DWORD PTR [ebp+0xc]
1000cf55:	cmp    eax,DWORD PTR [ebp+0x14]
1000cf58:	mov    ecx,DWORD PTR [ebp+0x8]
1000cf5b:	je     0x1000cf7d
1000cf5d:	lea    esi,[ebp+0x8]
1000cf60:	mov    DWORD PTR [ebp-0x8],ecx
1000cf63:	mov    DWORD PTR [ebp-0x4],eax
1000cf66:	call   0x10009773
1000cf6b:	push   DWORD PTR [ebp-0x4]
1000cf6e:	lea    eax,[ebp-0x10]
1000cf71:	push   DWORD PTR [ebp-0x8]
1000cf74:	push   eax
1000cf75:	push   edi
1000cf76:	call   0x1000c5a4
1000cf7b:	jmp    0x1000cf41
1000cf7d:	mov    DWORD PTR [ebx],ecx
1000cf7f:	mov    DWORD PTR [ebx+0x4],eax
1000cf82:	mov    eax,ebx
1000cf84:	pop    esi
1000cf85:	leave  
1000cf86:	ret    0x10
1000cf89:	push   0xc
1000cf8b:	mov    eax,0x1005fd61
1000cf90:	call   0x10058878
1000cf95:	push   0x3c
1000cf97:	call   0x1004239e
1000cf9c:	mov    esi,eax
1000cf9e:	pop    ecx
1000cf9f:	mov    DWORD PTR [ebp-0x14],esi
1000cfa2:	test   esi,esi
1000cfa4:	mov    DWORD PTR [ebp-0x4],0x1
1000cfab:	je     0x1000cfbe
1000cfad:	push   DWORD PTR [ebp+0x10]
1000cfb0:	mov    ebx,DWORD PTR [ebp+0x14]
1000cfb3:	push   DWORD PTR [ebp+0xc]
1000cfb6:	push   DWORD PTR [ebp+0x8]
1000cfb9:	call   0x1000d21e
1000cfbe:	mov    eax,esi
1000cfc0:	call   0x1005891d
1000cfc5:	ret    0x10
1000cfc8:	push   DWORD PTR [ebp-0x14]
1000cfcb:	call   0x10041d92
1000cfd0:	pop    ecx
1000cfd1:	push   0x0
1000cfd3:	push   0x0
1000cfd5:	call   0x10046704
1000cfda:	int3   
1000cfdb:	push   0x24
1000cfdd:	mov    eax,0x1005f329
1000cfe2:	call   0x10058878
1000cfe7:	mov    ebx,ecx
1000cfe9:	push   0x6
1000cfeb:	pop    ecx
1000cfec:	mov    esi,edx
1000cfee:	lea    edi,[ebp-0x30]
1000cff1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000cff3:	mov    ecx,DWORD PTR [ebx+0x4]
1000cff6:	test   ecx,ecx
1000cff8:	jne    0x1000cffe
1000cffa:	xor    edi,edi
1000cffc:	jmp    0x1000d00b
1000cffe:	mov    eax,DWORD PTR [ebx+0xc]
1000d001:	sub    eax,ecx
1000d003:	push   0x18
1000d005:	cdq    
1000d006:	pop    ecx
1000d007:	idiv   ecx
1000d009:	mov    edi,eax
1000d00b:	mov    eax,ebx
1000d00d:	call   0x1000c973
1000d012:	mov    esi,0xaaaaaaa
1000d017:	mov    ecx,esi
1000d019:	sub    ecx,eax
1000d01b:	cmp    ecx,0x1
1000d01e:	jae    0x1000d025
1000d020:	call   0x1000d195
1000d025:	mov    eax,ebx
1000d027:	call   0x1000c973
1000d02c:	inc    eax
1000d02d:	cmp    edi,eax
1000d02f:	jae    0x1000d0e0
1000d035:	mov    eax,edi
1000d037:	shr    eax,1
1000d039:	sub    esi,eax
1000d03b:	cmp    esi,edi
1000d03d:	jae    0x1000d043
1000d03f:	xor    edi,edi
1000d041:	jmp    0x1000d045
1000d043:	add    edi,eax
1000d045:	mov    eax,ebx
1000d047:	call   0x1000c973
1000d04c:	inc    eax
1000d04d:	cmp    edi,eax
1000d04f:	jae    0x1000d05b
1000d051:	mov    eax,ebx
1000d053:	call   0x1000c973
1000d058:	mov    edi,eax
1000d05a:	inc    edi
1000d05b:	mov    ecx,edi
1000d05d:	call   0x1000d1d4
1000d062:	and    DWORD PTR [ebp-0x4],0x0
1000d066:	mov    edx,DWORD PTR [ebx+0x4]
1000d069:	push   eax
1000d06a:	push   DWORD PTR [ebp+0xc]
1000d06d:	mov    DWORD PTR [ebp-0x14],eax
1000d070:	call   0x1000d30a
1000d075:	lea    ecx,[ebp-0x30]
1000d078:	push   ecx
1000d079:	push   0x1
1000d07b:	push   eax
1000d07c:	call   0x1000ce96
1000d081:	mov    edx,DWORD PTR [ebp+0xc]
1000d084:	push   eax
1000d085:	push   DWORD PTR [ebx+0x8]
1000d088:	call   0x1000d30a
1000d08d:	mov    eax,ebx
1000d08f:	call   0x1000c973
1000d094:	mov    esi,eax
1000d096:	mov    eax,DWORD PTR [ebx+0x4]
1000d099:	inc    esi
1000d09a:	test   eax,eax
1000d09c:	je     0x1000d0b3
1000d09e:	mov    ecx,DWORD PTR [ebx+0x8]
1000d0a1:	jmp    0x1000d0a6
1000d0a3:	add    eax,0x18
1000d0a6:	cmp    eax,ecx
1000d0a8:	jne    0x1000d0a3
1000d0aa:	push   DWORD PTR [ebx+0x4]
1000d0ad:	call   0x10041d92
1000d0b2:	pop    ecx
1000d0b3:	mov    eax,DWORD PTR [ebp-0x14]
1000d0b6:	imul   edi,edi,0x18
1000d0b9:	imul   esi,esi,0x18
1000d0bc:	add    edi,eax
1000d0be:	add    esi,eax
1000d0c0:	mov    DWORD PTR [ebx+0xc],edi
1000d0c3:	mov    DWORD PTR [ebx+0x8],esi
1000d0c6:	mov    DWORD PTR [ebx+0x4],eax
1000d0c9:	jmp    0x1000d18d
1000d0ce:	push   DWORD PTR [ebp-0x14]
1000d0d1:	call   0x10041d92
1000d0d6:	pop    ecx
1000d0d7:	push   0x0
1000d0d9:	push   0x0
1000d0db:	call   0x10046704
1000d0e0:	mov    ecx,DWORD PTR [ebx+0x8]
1000d0e3:	mov    edi,DWORD PTR [ebp+0xc]
1000d0e6:	mov    eax,ecx
1000d0e8:	sub    eax,edi
1000d0ea:	push   0x18
1000d0ec:	cdq    
1000d0ed:	pop    esi
1000d0ee:	idiv   esi
1000d0f0:	cmp    eax,0x1
1000d0f3:	jae    0x1000d144
1000d0f5:	lea    eax,[edi+0x18]
1000d0f8:	push   eax
1000d0f9:	push   ecx
1000d0fa:	mov    edx,edi
1000d0fc:	call   0x1000d30a
1000d101:	mov    DWORD PTR [ebp-0x4],0x2
1000d108:	mov    ecx,DWORD PTR [ebx+0x8]
1000d10b:	lea    eax,[ebp-0x30]
1000d10e:	push   eax
1000d10f:	mov    eax,ecx
1000d111:	sub    eax,edi
1000d113:	cdq    
1000d114:	idiv   esi
1000d116:	xor    edx,edx
1000d118:	inc    edx
1000d119:	sub    edx,eax
1000d11b:	push   edx
1000d11c:	push   ecx
1000d11d:	call   0x1000ce96
1000d122:	add    DWORD PTR [ebx+0x8],esi
1000d125:	mov    ebx,DWORD PTR [ebx+0x8]
1000d128:	lea    eax,[ebx-0x18]
1000d12b:	cmp    edi,eax
1000d12d:	mov    edx,edi
1000d12f:	je     0x1000d18d
1000d131:	mov    edi,edx
1000d133:	push   0x6
1000d135:	add    edx,0x18
1000d138:	cmp    edx,eax
1000d13a:	pop    ecx
1000d13b:	lea    esi,[ebp-0x30]
1000d13e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d140:	jne    0x1000d131
1000d142:	jmp    0x1000d18d
1000d144:	lea    esi,[ecx-0x18]
1000d147:	push   ecx
1000d148:	push   ecx
1000d149:	mov    edx,esi
1000d14b:	call   0x1000d30a
1000d150:	mov    DWORD PTR [ebx+0x8],eax
1000d153:	mov    eax,esi
1000d155:	cmp    edi,eax
1000d157:	je     0x1000d173
1000d159:	lea    edx,[eax+0x18]
1000d15c:	sub    eax,0x18
1000d15f:	sub    edx,0x18
1000d162:	cmp    eax,DWORD PTR [ebp+0xc]
1000d165:	push   0x6
1000d167:	pop    ecx
1000d168:	mov    esi,eax
1000d16a:	mov    edi,edx
1000d16c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d16e:	jne    0x1000d15c
1000d170:	mov    edi,DWORD PTR [ebp+0xc]
1000d173:	lea    eax,[edi+0x18]
1000d176:	cmp    edi,eax
1000d178:	mov    edx,edi
1000d17a:	je     0x1000d18d
1000d17c:	mov    edi,edx
1000d17e:	push   0x6
1000d180:	add    edx,0x18
1000d183:	cmp    edx,eax
1000d185:	pop    ecx
1000d186:	lea    esi,[ebp-0x30]
1000d189:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d18b:	jne    0x1000d17c
1000d18d:	call   0x1005891d
1000d192:	ret    0x8
1000d195:	push   0x44
1000d197:	mov    eax,0x1005ef45
1000d19c:	call   0x10058845
1000d1a1:	push   0x1006bca0
1000d1a6:	lea    ecx,[ebp-0x28]
1000d1a9:	call   0x100011d6
1000d1ae:	and    DWORD PTR [ebp-0x4],0x0
1000d1b2:	lea    eax,[ebp-0x28]
1000d1b5:	push   eax
1000d1b6:	lea    ecx,[ebp-0x50]
1000d1b9:	call   0x10001065
1000d1be:	push   0x10073960
1000d1c3:	lea    eax,[ebp-0x50]
1000d1c6:	push   eax
1000d1c7:	mov    DWORD PTR [ebp-0x50],0x1006a77c
1000d1ce:	call   0x10046704
1000d1d3:	int3   
1000d1d4:	push   ebp
1000d1d5:	mov    ebp,esp
1000d1d7:	sub    esp,0x10
1000d1da:	test   ecx,ecx
1000d1dc:	ja     0x1000d1ec
1000d1de:	xor    ecx,ecx
1000d1e0:	imul   ecx,ecx,0x18
1000d1e3:	push   ecx
1000d1e4:	call   0x1004239e
1000d1e9:	pop    ecx
1000d1ea:	leave  
1000d1eb:	ret    
1000d1ec:	or     eax,0xffffffff
1000d1ef:	xor    edx,edx
1000d1f1:	div    ecx
1000d1f3:	cmp    eax,0x18
1000d1f6:	jae    0x1000d1e0
1000d1f8:	and    DWORD PTR [ebp-0x4],0x0
1000d1fc:	lea    eax,[ebp-0x4]
1000d1ff:	push   eax
1000d200:	lea    ecx,[ebp-0x10]
1000d203:	call   0x10041e12
1000d208:	push   0x100738b8
1000d20d:	lea    eax,[ebp-0x10]
1000d210:	push   eax
1000d211:	mov    DWORD PTR [ebp-0x10],0x100655b8
1000d218:	call   0x10046704
1000d21d:	int3   
1000d21e:	push   0x0
1000d220:	mov    eax,0x10060f15
1000d225:	call   0x10058845
1000d22a:	mov    eax,DWORD PTR [ebp+0x8]
1000d22d:	mov    DWORD PTR [esi],eax
1000d22f:	mov    eax,DWORD PTR [ebp+0xc]
1000d232:	mov    DWORD PTR [esi+0x4],eax
1000d235:	mov    eax,DWORD PTR [ebp+0x10]
1000d238:	lea    edi,[esi+0xc]
1000d23b:	push   ebx
1000d23c:	mov    ecx,edi
1000d23e:	mov    DWORD PTR [esi+0x8],eax
1000d241:	mov    DWORD PTR [ebp+0x8],edi
1000d244:	call   0x100011b0
1000d249:	and    DWORD PTR [ebp-0x4],0x0
1000d24d:	add    edi,0x1c
1000d250:	lea    ecx,[ebx+0x1c]
1000d253:	push   edi
1000d254:	call   0x1000c8b2
1000d259:	mov    BYTE PTR [esi+0x38],0x0
1000d25d:	mov    BYTE PTR [esi+0x39],0x0
1000d261:	mov    eax,esi
1000d263:	call   0x1005891d
1000d268:	ret    0xc
1000d26b:	push   ecx
1000d26c:	push   ebp
1000d26d:	mov    ebp,DWORD PTR [esp+0xc]
1000d271:	cmp    BYTE PTR [ebp+0x39],0x0
1000d275:	push   edi
1000d276:	mov    DWORD PTR [esp+0x8],ecx
1000d27a:	mov    edi,ebp
1000d27c:	jne    0x1000d2b5
1000d27e:	push   ebx
1000d27f:	push   esi
1000d280:	push   DWORD PTR [edi+0x8]
1000d283:	mov    ecx,DWORD PTR [esp+0x14]
1000d287:	call   0x1000d26b
1000d28c:	mov    edi,DWORD PTR [edi]
1000d28e:	lea    ebx,[ebp+0xc]
1000d291:	lea    esi,[ebx+0x1c]
1000d294:	call   0x1000c958
1000d299:	push   0x0
1000d29b:	push   0x1
1000d29d:	mov    ecx,ebx
1000d29f:	call   0x100012f9
1000d2a4:	push   ebp
1000d2a5:	call   0x10041d92
1000d2aa:	cmp    BYTE PTR [edi+0x39],0x0
1000d2ae:	pop    ecx
1000d2af:	mov    ebp,edi
1000d2b1:	je     0x1000d280
1000d2b3:	pop    esi
1000d2b4:	pop    ebx
1000d2b5:	pop    edi
1000d2b6:	pop    ebp
1000d2b7:	pop    ecx
1000d2b8:	ret    0x4
1000d2bb:	push   0x8
1000d2bd:	mov    eax,0x1005fd41
1000d2c2:	call   0x10058845
1000d2c7:	and    DWORD PTR [ebp-0x14],0x0
1000d2cb:	mov    DWORD PTR [ebp-0x10],edi
1000d2ce:	xor    esi,esi
1000d2d0:	lea    eax,[ebp+0x8]
1000d2d3:	inc    esi
1000d2d4:	push   eax
1000d2d5:	mov    ecx,edi
1000d2d7:	mov    DWORD PTR [ebp-0x4],esi
1000d2da:	call   0x100011b0
1000d2df:	lea    eax,[edi+0x1c]
1000d2e2:	push   eax
1000d2e3:	lea    ecx,[ebp+0x24]
1000d2e6:	mov    BYTE PTR [ebp-0x4],0x2
1000d2ea:	call   0x1000c8b2
1000d2ef:	push   0x0
1000d2f1:	push   esi
1000d2f2:	lea    ecx,[ebp+0x8]
1000d2f5:	call   0x100012f9
1000d2fa:	lea    esi,[ebp+0x24]
1000d2fd:	call   0x1000c958
1000d302:	mov    eax,edi
1000d304:	call   0x1005891d
1000d309:	ret    
1000d30a:	push   ebp
1000d30b:	mov    ebp,esp
1000d30d:	push   ecx
1000d30e:	push   edi
1000d30f:	xor    eax,eax
1000d311:	lea    edi,[ebp-0x4]
1000d314:	stos   BYTE PTR es:[edi],al
1000d315:	push   DWORD PTR [ebp-0x4]
1000d318:	mov    eax,DWORD PTR [ebp+0xc]
1000d31b:	push   DWORD PTR [ebp+0x8]
1000d31e:	push   DWORD PTR [ebp+0x8]
1000d321:	call   0x1000d39e
1000d326:	add    esp,0xc
1000d329:	pop    edi
1000d32a:	leave  
1000d32b:	ret    0x8
1000d32e:	push   ebp
1000d32f:	mov    ebp,esp
1000d331:	xor    eax,eax
1000d333:	cmp    DWORD PTR [ebp+0xc],eax
1000d336:	jbe    0x1000d358
1000d338:	push   esi
1000d339:	push   edi
1000d33a:	cmp    DWORD PTR [ebp+0x8],eax
1000d33d:	je     0x1000d34a
1000d33f:	mov    esi,DWORD PTR [ebp+0x10]
1000d342:	mov    edi,DWORD PTR [ebp+0x8]
1000d345:	push   0x6
1000d347:	pop    ecx
1000d348:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d34a:	dec    DWORD PTR [ebp+0xc]
1000d34d:	add    DWORD PTR [ebp+0x8],0x18
1000d351:	cmp    DWORD PTR [ebp+0xc],eax
1000d354:	ja     0x1000d33a
1000d356:	pop    edi
1000d357:	pop    esi
1000d358:	pop    ebp
1000d359:	ret    
1000d35a:	jmp    0x1000d35f
1000d35f:	mov    eax,DWORD PTR [esi+0x4]
1000d362:	test   eax,eax
1000d364:	je     0x1000d377
1000d366:	push   DWORD PTR [esi+0x8]
1000d369:	call   0x1000d384
1000d36e:	push   DWORD PTR [esi+0x4]
1000d371:	call   0x10041d92
1000d376:	pop    ecx
1000d377:	and    DWORD PTR [esi+0x4],0x0
1000d37b:	and    DWORD PTR [esi+0x8],0x0
1000d37f:	and    DWORD PTR [esi+0xc],0x0
1000d383:	ret    
1000d384:	push   esi
1000d385:	mov    esi,eax
1000d387:	jmp    0x1000d394
1000d389:	push   0x0
1000d38b:	push   esi
1000d38c:	call   0x1000d3c2
1000d391:	add    esi,0x1c
1000d394:	cmp    esi,DWORD PTR [esp+0x8]
1000d398:	jne    0x1000d389
1000d39a:	pop    esi
1000d39b:	ret    0x4
1000d39e:	cmp    edx,DWORD PTR [esp+0x4]
1000d3a2:	je     0x1000d3c1
1000d3a4:	push   esi
1000d3a5:	push   edi
1000d3a6:	test   eax,eax
1000d3a8:	je     0x1000d3b3
1000d3aa:	push   0x6
1000d3ac:	pop    ecx
1000d3ad:	mov    esi,edx
1000d3af:	mov    edi,eax
1000d3b1:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000d3b3:	add    edx,0x18
1000d3b6:	add    eax,0x18
1000d3b9:	cmp    edx,DWORD PTR [esp+0xc]
1000d3bd:	jne    0x1000d3a6
1000d3bf:	pop    edi
1000d3c0:	pop    esi
1000d3c1:	ret    
1000d3c2:	mov    ecx,DWORD PTR [esp+0x4]
1000d3c6:	push   0x0
1000d3c8:	push   0x1
1000d3ca:	call   0x100012f9
1000d3cf:	test   BYTE PTR [esp+0x8],0x1
1000d3d4:	je     0x1000d3e0
1000d3d6:	push   DWORD PTR [esp+0x4]
1000d3da:	call   0x10041d92
1000d3df:	pop    ecx
1000d3e0:	mov    eax,DWORD PTR [esp+0x4]
1000d3e4:	ret    0x8
1000d3e7:	push   0x4
1000d3e9:	mov    eax,0x1005f3f5
1000d3ee:	call   0x10058845
1000d3f3:	mov    esi,ecx
1000d3f5:	push   0xc
1000d3f7:	call   0x1004239e
1000d3fc:	pop    ecx
1000d3fd:	mov    DWORD PTR [ebp-0x10],eax
1000d400:	and    DWORD PTR [ebp-0x4],0x0
1000d404:	test   eax,eax
1000d406:	je     0x1000d427
1000d408:	and    DWORD PTR [eax+0x4],0x0
1000d40c:	cmp    BYTE PTR [ebp+0x8],0x0
1000d410:	mov    DWORD PTR [eax+0x8],0x1
1000d417:	je     0x1000d423
1000d419:	push   esi
1000d41a:	mov    esi,eax
1000d41c:	call   0x1000d491
1000d421:	jmp    0x1000d429
1000d423:	mov    DWORD PTR [eax],esi
1000d425:	jmp    0x1000d429
1000d427:	xor    eax,eax
1000d429:	or     DWORD PTR [ebp-0x4],0xffffffff
1000d42d:	test   eax,eax
1000d42f:	mov    DWORD PTR [edi],eax
1000d431:	jne    0x1000d43d
1000d433:	push   0x8007000e
1000d438:	call   0x1004fa00
1000d43d:	mov    eax,edi
1000d43f:	call   0x1005891d
1000d444:	ret    0x4
1000d447:	push   esi
1000d448:	mov    esi,DWORD PTR [eax]
1000d44a:	xor    eax,eax
1000d44c:	cmp    esi,eax
1000d44e:	je     0x1000d462
1000d450:	cmp    DWORD PTR [esi+0x4],eax
1000d453:	jne    0x1000d45f
1000d455:	push   DWORD PTR [esi]
1000d457:	call   0x1004f8a0
1000d45c:	mov    DWORD PTR [esi+0x4],eax
1000d45f:	mov    eax,DWORD PTR [esi+0x4]
1000d462:	pop    esi
1000d463:	ret    
1000d464:	push   edi
1000d465:	mov    edi,eax
1000d467:	mov    eax,DWORD PTR [edi]
1000d469:	test   eax,eax
1000d46b:	je     0x1000d483
1000d46d:	cmp    DWORD PTR [eax+0x8],0x1
1000d471:	jne    0x1000d483
1000d473:	push   esi
1000d474:	mov    esi,DWORD PTR [eax]
1000d476:	and    DWORD PTR [eax],0x0
1000d479:	call   0x1000256d
1000d47e:	mov    eax,esi
1000d480:	pop    esi
1000d481:	pop    edi
1000d482:	ret    
1000d483:	push   0x80004003
1000d488:	call   0x1004fa00
1000d48d:	xor    eax,eax
1000d48f:	pop    edi
1000d490:	ret    
1000d491:	cmp    DWORD PTR [esp+0x4],0x0
1000d496:	je     0x1000d4bf
1000d498:	push   DWORD PTR [esp+0x4]
1000d49c:	call   DWORD PTR ds:0x100652a0
1000d4a2:	push   eax
1000d4a3:	push   DWORD PTR [esp+0x8]
1000d4a7:	call   DWORD PTR ds:0x100652a8
1000d4ad:	test   eax,eax
1000d4af:	mov    DWORD PTR [esi],eax
1000d4b1:	jne    0x1000d4c2
1000d4b3:	push   0x8007000e
1000d4b8:	call   0x1004fa00
1000d4bd:	jmp    0x1000d4c2
1000d4bf:	and    DWORD PTR [esi],0x0
1000d4c2:	mov    eax,esi
1000d4c4:	ret    0x4
1000d4c7:	push   0x38
1000d4c9:	mov    eax,0x10061a05
1000d4ce:	call   0x10058845
1000d4d3:	mov    esi,DWORD PTR [ebp+0x8]
1000d4d6:	xor    ebx,ebx
1000d4d8:	cmp    DWORD PTR [esi+0x8],ebx
1000d4db:	jne    0x1000d4e7
1000d4dd:	mov    eax,0x80004005
1000d4e2:	jmp    0x1000d570
1000d4e7:	mov    ecx,DWORD PTR [ebp+0xc]
1000d4ea:	push   0x1
1000d4ec:	lea    edi,[ebp+0xc]
1000d4ef:	call   0x1000d3e7
1000d4f4:	mov    ecx,DWORD PTR [ebp+0x10]
1000d4f7:	push   0x1
1000d4f9:	lea    edi,[ebp+0x8]
1000d4fc:	mov    DWORD PTR [ebp-0x4],ebx
1000d4ff:	call   0x1000d3e7
1000d504:	mov    eax,edi
1000d506:	mov    BYTE PTR [ebp-0x4],0x1
1000d50a:	call   0x1000d447
1000d50f:	push   eax
1000d510:	lea    ecx,[ebp-0x44]
1000d513:	call   0x100011d6
1000d518:	lea    eax,[ebp+0xc]
1000d51b:	mov    BYTE PTR [ebp-0x4],0x2
1000d51f:	call   0x1000d447
1000d524:	push   eax
1000d525:	lea    ecx,[ebp-0x28]
1000d528:	call   0x100011d6
1000d52d:	push   ebx
1000d52e:	lea    eax,[ebp-0x28]
1000d531:	mov    BYTE PTR [ebp-0x4],0x3
1000d535:	mov    edx,DWORD PTR [esi+0x8]
1000d538:	push   eax
1000d539:	lea    ecx,[ebp-0x44]
1000d53c:	call   0x10007aa4
1000d541:	mov    ecx,DWORD PTR [ebp+0x14]
1000d544:	neg    al
1000d546:	push   ebx
1000d547:	push   0x1
1000d549:	sbb    eax,eax
1000d54b:	mov    WORD PTR [ecx],ax
1000d54e:	lea    ecx,[ebp-0x28]
1000d551:	call   0x100012f9
1000d556:	push   ebx
1000d557:	push   0x1
1000d559:	lea    ecx,[ebp-0x44]
1000d55c:	call   0x100012f9
1000d561:	call   0x1000256d
1000d566:	lea    edi,[ebp+0xc]
1000d569:	call   0x1000256d
1000d56e:	xor    eax,eax
1000d570:	call   0x1005891d
1000d575:	ret    0x10
1000d578:	push   0x1c
1000d57a:	mov    eax,0x1005fc55
1000d57f:	call   0x10058845
1000d584:	mov    esi,DWORD PTR [ebp+0x8]
1000d587:	cmp    DWORD PTR [esi+0x8],0x0
1000d58b:	jne    0x1000d594
1000d58d:	mov    eax,0x80004005
1000d592:	jmp    0x1000d5e2
1000d594:	mov    ecx,DWORD PTR [ebp+0xc]
1000d597:	push   0x1
1000d599:	lea    edi,[ebp+0x8]
1000d59c:	call   0x1000d3e7
1000d5a1:	and    DWORD PTR [ebp-0x4],0x0
1000d5a5:	mov    eax,edi
1000d5a7:	call   0x1000d447
1000d5ac:	push   eax
1000d5ad:	lea    ecx,[ebp-0x28]
1000d5b0:	call   0x100011d6
1000d5b5:	lea    eax,[ebp-0x28]
1000d5b8:	push   eax
1000d5b9:	mov    BYTE PTR [ebp-0x4],0x1
1000d5bd:	push   DWORD PTR [esi+0x8]
1000d5c0:	call   0x10007dad
1000d5c5:	mov    ecx,DWORD PTR [ebp+0x10]
1000d5c8:	neg    al
1000d5ca:	push   0x0
1000d5cc:	push   0x1
1000d5ce:	sbb    eax,eax
1000d5d0:	mov    WORD PTR [ecx],ax
1000d5d3:	lea    ecx,[ebp-0x28]
1000d5d6:	call   0x100012f9
1000d5db:	call   0x1000256d
1000d5e0:	xor    eax,eax
1000d5e2:	call   0x1005891d
1000d5e7:	ret    0xc
1000d5ea:	mov    eax,DWORD PTR [esp+0x4]
1000d5ee:	push   edi
1000d5ef:	mov    edi,DWORD PTR [eax+0x8]
1000d5f2:	test   edi,edi
1000d5f4:	jne    0x1000d5fd
1000d5f6:	mov    eax,0x80004005
1000d5fb:	jmp    0x1000d604
1000d5fd:	call   0x10007ec0
1000d602:	xor    eax,eax
1000d604:	pop    edi
1000d605:	ret    0x4
1000d608:	push   0x38
1000d60a:	mov    eax,0x10061a05
1000d60f:	call   0x10058845
1000d614:	mov    esi,DWORD PTR [ebp+0x8]
1000d617:	cmp    DWORD PTR [esi+0x8],0x0
1000d61b:	jne    0x1000d627
1000d61d:	mov    eax,0x80004005
1000d622:	jmp    0x1000d6b2
1000d627:	mov    ecx,DWORD PTR [ebp+0xc]
1000d62a:	push   0x1
1000d62c:	lea    edi,[ebp+0xc]
1000d62f:	call   0x1000d3e7
1000d634:	mov    ecx,DWORD PTR [ebp+0x10]
1000d637:	and    DWORD PTR [ebp-0x4],0x0
1000d63b:	push   0x1
1000d63d:	lea    edi,[ebp+0x8]
1000d640:	call   0x1000d3e7
1000d645:	mov    eax,edi
1000d647:	mov    BYTE PTR [ebp-0x4],0x1
1000d64b:	call   0x1000d447
1000d650:	push   eax
1000d651:	lea    ecx,[ebp-0x44]
1000d654:	call   0x100011d6
1000d659:	lea    eax,[ebp+0xc]
1000d65c:	mov    BYTE PTR [ebp-0x4],0x2
1000d660:	call   0x1000d447
1000d665:	push   eax
1000d666:	lea    ecx,[ebp-0x28]
1000d669:	call   0x100011d6
1000d66e:	lea    eax,[ebp-0x28]
1000d671:	mov    BYTE PTR [ebp-0x4],0x3
1000d675:	mov    edx,DWORD PTR [esi+0x8]
1000d678:	push   eax
1000d679:	lea    ecx,[ebp-0x44]
1000d67c:	call   0x10007ef8
1000d681:	mov    ecx,DWORD PTR [ebp+0x14]
1000d684:	neg    al
1000d686:	push   0x0
1000d688:	push   0x1
1000d68a:	sbb    eax,eax
1000d68c:	mov    WORD PTR [ecx],ax
1000d68f:	lea    ecx,[ebp-0x28]
1000d692:	call   0x100012f9
1000d697:	push   0x0
1000d699:	push   0x1
1000d69b:	lea    ecx,[ebp-0x44]
1000d69e:	call   0x100012f9
1000d6a3:	call   0x1000256d
1000d6a8:	lea    edi,[ebp+0xc]
1000d6ab:	call   0x1000256d
1000d6b0:	xor    eax,eax
1000d6b2:	call   0x1005891d
1000d6b7:	ret    0x10
1000d6ba:	push   0x38
1000d6bc:	mov    eax,0x1005fd0e
1000d6c1:	call   0x10058845
1000d6c6:	mov    esi,DWORD PTR [ebp+0x8]
1000d6c9:	xor    ebx,ebx
1000d6cb:	cmp    DWORD PTR [esi+0x8],ebx
1000d6ce:	jne    0x1000d6da
1000d6d0:	mov    eax,0x80004005
1000d6d5:	jmp    0x1000d75b
1000d6da:	mov    ecx,DWORD PTR [ebp+0xc]
1000d6dd:	push   0x1
1000d6df:	lea    edi,[ebp+0xc]
1000d6e2:	call   0x1000d3e7
1000d6e7:	mov    eax,edi
1000d6e9:	mov    DWORD PTR [ebp-0x4],ebx
1000d6ec:	call   0x1000d447
1000d6f1:	push   eax
1000d6f2:	lea    ecx,[ebp-0x28]
1000d6f5:	call   0x100011d6
1000d6fa:	push   ebx
1000d6fb:	lea    eax,[ebp-0x28]
1000d6fe:	push   eax
1000d6ff:	lea    eax,[ebp-0x44]
1000d702:	mov    BYTE PTR [ebp-0x4],0x1
1000d706:	push   eax
1000d707:	mov    eax,DWORD PTR [esi+0x8]
1000d70a:	call   0x1000800f
1000d70f:	mov    BYTE PTR [ebp-0x4],0x2
1000d713:	cmp    DWORD PTR [eax+0x18],0x10
1000d717:	jb     0x1000d71e
1000d719:	mov    eax,DWORD PTR [eax+0x4]
1000d71c:	jmp    0x1000d721
1000d71e:	add    eax,0x4
1000d721:	push   eax
1000d722:	lea    edi,[ebp+0x8]
1000d725:	call   0x10002439
1000d72a:	push   ebx
1000d72b:	push   0x1
1000d72d:	lea    ecx,[ebp-0x44]
1000d730:	call   0x100012f9
1000d735:	push   ebx
1000d736:	push   0x1
1000d738:	lea    ecx,[ebp-0x28]
1000d73b:	call   0x100012f9
1000d740:	mov    eax,edi
1000d742:	call   0x1000d464
1000d747:	mov    ecx,DWORD PTR [ebp+0x10]
1000d74a:	mov    DWORD PTR [ecx],eax
1000d74c:	call   0x1000256d
1000d751:	lea    edi,[ebp+0xc]
1000d754:	call   0x1000256d
1000d759:	xor    eax,eax
1000d75b:	call   0x1005891d
1000d760:	ret    0xc
1000d763:	push   esi
1000d764:	mov    esi,eax
1000d766:	call   0x1000d794
1000d76b:	cmp    DWORD PTR [esi],0x0
1000d76e:	je     0x1000d792
1000d770:	push   edi
1000d771:	mov    edi,DWORD PTR [esi]
1000d773:	test   edi,edi
1000d775:	mov    eax,DWORD PTR [edi+0x4]
1000d778:	mov    DWORD PTR [esi],eax
1000d77a:	je     0x1000d78c
1000d77c:	push   DWORD PTR [edi+0x8]
1000d77f:	call   0x10041d92
1000d784:	push   edi
1000d785:	call   0x10041d92
1000d78a:	pop    ecx
1000d78b:	pop    ecx
1000d78c:	cmp    DWORD PTR [esi],0x0
1000d78f:	jne    0x1000d771
1000d791:	pop    edi
1000d792:	pop    esi
1000d793:	ret    
1000d794:	push   0x8
1000d796:	mov    eax,0x1005fcdb
1000d79b:	call   0x10058845
1000d7a0:	xor    edi,edi
1000d7a2:	cmp    DWORD PTR [esi+0x14],edi
1000d7a5:	je     0x1000d7eb
1000d7a7:	lea    eax,[ebp-0x14]
1000d7aa:	push   eax
1000d7ab:	mov    ebx,esi
1000d7ad:	call   0x1000d90b
1000d7b2:	mov    ecx,DWORD PTR [eax]
1000d7b4:	mov    ebx,ecx
1000d7b6:	mov    DWORD PTR [eax],edi
1000d7b8:	mov    DWORD PTR [ebp-0x10],ebx
1000d7bb:	mov    DWORD PTR [ebp-0x4],edi
1000d7be:	cmp    DWORD PTR [ebp-0x14],edi
1000d7c1:	je     0x1000d7cd
1000d7c3:	mov    edi,DWORD PTR [ebp-0x14]
1000d7c6:	call   0x100099a6
1000d7cb:	xor    edi,edi
1000d7cd:	cmp    DWORD PTR [ebx+0x18],edi
1000d7d0:	jbe    0x1000d7de
1000d7d2:	mov    ecx,DWORD PTR [esi+0x14]
1000d7d5:	mov    eax,DWORD PTR [ecx]
1000d7d7:	push   ebx
1000d7d8:	mov    DWORD PTR [ebp-0x10],edi
1000d7db:	call   DWORD PTR [eax+0x4]
1000d7de:	cmp    DWORD PTR [ebp-0x10],edi
1000d7e1:	je     0x1000d7eb
1000d7e3:	mov    edi,DWORD PTR [ebp-0x10]
1000d7e6:	call   0x100099a6
1000d7eb:	call   0x1005891d
1000d7f0:	ret    
1000d7f1:	push   ebp
1000d7f2:	lea    ebp,[esp-0x10004]
1000d7f9:	mov    eax,0x10004
1000d7fe:	call   0x10047700
1000d803:	push   0xffffffff
1000d805:	push   0x10060e69
1000d80a:	mov    eax,fs:0x0
1000d810:	push   eax
1000d811:	push   ecx
1000d812:	push   ecx
1000d813:	mov    eax,ds:0x1007d030
1000d818:	xor    eax,ebp
1000d81a:	mov    DWORD PTR [ebp+0x10000],eax
1000d820:	push   ebx
1000d821:	push   esi
1000d822:	push   edi
1000d823:	push   eax
1000d824:	lea    eax,[ebp-0xc]
1000d827:	mov    fs:0x0,eax
1000d82d:	mov    esi,ecx
1000d82f:	call   0x1000d794
1000d834:	mov    ecx,DWORD PTR [esi+0x18]
1000d837:	lea    edx,[ebp-0x10]
1000d83a:	push   edx
1000d83b:	xor    ebx,ebx
1000d83d:	push   0x10000
1000d842:	lea    edx,[ebp+0x0]
1000d845:	mov    DWORD PTR [ebp-0x10],ebx
1000d848:	mov    eax,DWORD PTR [ecx]
1000d84a:	push   edx
1000d84b:	call   DWORD PTR [eax+0x4]
1000d84e:	test   al,al
1000d850:	jne    0x1000d855
1000d852:	mov    DWORD PTR [ebp-0x10],ebx
1000d855:	cmp    DWORD PTR [ebp-0x10],ebx
1000d858:	jne    0x1000d860
1000d85a:	mov    BYTE PTR [esi+0x10],0x1
1000d85e:	jmp    0x1000d8c3
1000d860:	push   0xc
1000d862:	call   0x1004239e
1000d867:	mov    edi,eax
1000d869:	pop    ecx
1000d86a:	mov    DWORD PTR [ebp-0x14],edi
1000d86d:	cmp    edi,ebx
1000d86f:	mov    DWORD PTR [ebp-0x4],ebx
1000d872:	je     0x1000d896
1000d874:	mov    eax,DWORD PTR [ebp-0x10]
1000d877:	push   eax
1000d878:	mov    DWORD PTR [edi],eax
1000d87a:	mov    DWORD PTR [edi+0x4],ebx
1000d87d:	call   0x10042609
1000d882:	push   DWORD PTR [edi]
1000d884:	lea    ecx,[ebp+0x0]
1000d887:	push   ecx
1000d888:	push   eax
1000d889:	mov    DWORD PTR [edi+0x8],eax
1000d88c:	call   0x10043ed0
1000d891:	add    esp,0x10
1000d894:	jmp    0x1000d898
1000d896:	xor    edi,edi
1000d898:	mov    eax,DWORD PTR [esi]
1000d89a:	cmp    eax,ebx
1000d89c:	jne    0x1000d8a8
1000d89e:	mov    DWORD PTR [esi],edi
1000d8a0:	mov    DWORD PTR [esi+0x4],edi
1000d8a3:	jmp    0x1000d8b0
1000d8a5:	mov    eax,DWORD PTR [eax+0x4]
1000d8a8:	cmp    DWORD PTR [eax+0x4],ebx
1000d8ab:	jne    0x1000d8a5
1000d8ad:	mov    DWORD PTR [eax+0x4],edi
1000d8b0:	mov    eax,DWORD PTR [esi+0x4]
1000d8b3:	mov    ecx,DWORD PTR [esi+0x8]
1000d8b6:	cmp    ecx,DWORD PTR [eax]
1000d8b8:	jne    0x1000d8c3
1000d8ba:	mov    eax,DWORD PTR [eax+0x4]
1000d8bd:	mov    DWORD PTR [esi+0x4],eax
1000d8c0:	mov    DWORD PTR [esi+0x8],ebx
1000d8c3:	mov    ecx,DWORD PTR [ebp-0xc]
1000d8c6:	mov    DWORD PTR fs:0x0,ecx
1000d8cd:	pop    ecx
1000d8ce:	pop    edi
1000d8cf:	pop    esi
1000d8d0:	pop    ebx
1000d8d1:	mov    ecx,DWORD PTR [ebp+0x10000]
1000d8d7:	xor    ecx,ebp
1000d8d9:	call   0x10041d97
1000d8de:	add    ebp,0x10004
1000d8e4:	leave  
1000d8e5:	ret    
1000d8e6:	cmp    BYTE PTR [esi+0x10],0x0
1000d8ea:	je     0x1000d8ef
1000d8ec:	mov    al,0x1
1000d8ee:	ret    
1000d8ef:	mov    eax,DWORD PTR [esi+0x4]
1000d8f2:	test   eax,eax
1000d8f4:	je     0x1000d900
1000d8f6:	mov    ecx,DWORD PTR [esi+0x8]
1000d8f9:	cmp    ecx,DWORD PTR [eax]
1000d8fb:	jae    0x1000d900
1000d8fd:	xor    al,al
1000d8ff:	ret    
1000d900:	mov    ecx,esi
1000d902:	call   0x1000d7f1
1000d907:	mov    al,BYTE PTR [esi+0x10]
1000d90a:	ret    
1000d90b:	push   0x8
1000d90d:	mov    eax,0x1005fcb8
1000d912:	call   0x10058845
1000d917:	xor    esi,esi
1000d919:	mov    DWORD PTR [ebp-0x4],esi
1000d91c:	push   0x24
1000d91e:	mov    DWORD PTR [ebp-0x10],esi
1000d921:	call   0x1004239e
1000d926:	pop    ecx
1000d927:	mov    DWORD PTR [ebp-0x14],eax
1000d92a:	xor    edi,edi
1000d92c:	inc    edi
1000d92d:	cmp    eax,esi
1000d92f:	mov    DWORD PTR [ebp-0x4],edi
1000d932:	je     0x1000d93e
1000d934:	push   eax
1000d935:	call   0x100071d9
1000d93a:	mov    ecx,eax
1000d93c:	jmp    0x1000d940
1000d93e:	xor    ecx,ecx
1000d940:	mov    eax,DWORD PTR [ebp+0x8]
1000d943:	mov    DWORD PTR [eax],ecx
1000d945:	mov    DWORD PTR [ebp-0x4],esi
1000d948:	mov    eax,DWORD PTR [ebx+0xc]
1000d94b:	mov    esi,ecx
1000d94d:	mov    DWORD PTR [ebp-0x10],edi
1000d950:	call   0x100073fe
1000d955:	jmp    0x1000d984
1000d957:	mov    ecx,DWORD PTR [ebx]
1000d959:	mov    edx,DWORD PTR [ecx+0x8]
1000d95c:	mov    eax,DWORD PTR [ebp+0x8]
1000d95f:	mov    eax,DWORD PTR [eax]
1000d961:	mov    edi,DWORD PTR [ecx]
1000d963:	push   edx
1000d964:	call   0x10007221
1000d969:	mov    esi,DWORD PTR [ebx]
1000d96b:	test   esi,esi
1000d96d:	mov    eax,DWORD PTR [esi+0x4]
1000d970:	mov    DWORD PTR [ebx],eax
1000d972:	je     0x1000d984
1000d974:	push   DWORD PTR [esi+0x8]
1000d977:	call   0x10041d92
1000d97c:	push   esi
1000d97d:	call   0x10041d92
1000d982:	pop    ecx
1000d983:	pop    ecx
1000d984:	mov    eax,DWORD PTR [ebx]
1000d986:	cmp    eax,DWORD PTR [ebx+0x4]
1000d989:	jne    0x1000d957
1000d98b:	test   eax,eax
1000d98d:	je     0x1000da1f
1000d993:	mov    edi,DWORD PTR [ebx+0x8]
1000d996:	test   edi,edi
1000d998:	je     0x1000da1f
1000d99e:	mov    eax,DWORD PTR [eax+0x8]
1000d9a1:	mov    ecx,DWORD PTR [ebp+0x8]
1000d9a4:	mov    ecx,DWORD PTR [ecx]
1000d9a6:	push   eax
1000d9a7:	mov    eax,ecx
1000d9a9:	xor    esi,esi
1000d9ab:	call   0x10007221
1000d9b0:	mov    eax,DWORD PTR [ebx]
1000d9b2:	mov    ecx,DWORD PTR [ebx+0x8]
1000d9b5:	cmp    ecx,DWORD PTR [eax]
1000d9b7:	jae    0x1000da07
1000d9b9:	push   0xc
1000d9bb:	call   0x1004239e
1000d9c0:	mov    esi,eax
1000d9c2:	pop    ecx
1000d9c3:	mov    DWORD PTR [ebp-0x14],esi
1000d9c6:	test   esi,esi
1000d9c8:	mov    DWORD PTR [ebp-0x4],0x2
1000d9cf:	je     0x1000d9fd
1000d9d1:	mov    eax,DWORD PTR [ebx]
1000d9d3:	mov    edx,DWORD PTR [eax+0x8]
1000d9d6:	mov    ecx,DWORD PTR [ebx+0x8]
1000d9d9:	mov    eax,DWORD PTR [eax]
1000d9db:	and    DWORD PTR [esi+0x4],0x0
1000d9df:	sub    eax,ecx
1000d9e1:	push   eax
1000d9e2:	lea    edi,[ecx+edx*1]
1000d9e5:	mov    DWORD PTR [esi],eax
1000d9e7:	call   0x10042609
1000d9ec:	push   DWORD PTR [esi]
1000d9ee:	mov    DWORD PTR [esi+0x8],eax
1000d9f1:	push   edi
1000d9f2:	push   eax
1000d9f3:	call   0x10043ed0
1000d9f8:	add    esp,0x10
1000d9fb:	jmp    0x1000d9ff
1000d9fd:	xor    esi,esi
1000d9ff:	mov    eax,DWORD PTR [ebx]
1000da01:	mov    eax,DWORD PTR [eax+0x4]
1000da04:	mov    DWORD PTR [esi+0x4],eax
1000da07:	mov    edi,DWORD PTR [ebx]
1000da09:	test   edi,edi
1000da0b:	mov    DWORD PTR [ebx],esi
1000da0d:	je     0x1000da1f
1000da0f:	push   DWORD PTR [edi+0x8]
1000da12:	call   0x10041d92
1000da17:	push   edi
1000da18:	call   0x10041d92
1000da1d:	pop    ecx
1000da1e:	pop    ecx
1000da1f:	mov    eax,DWORD PTR [ebx]
1000da21:	and    DWORD PTR [ebx+0x8],0x0
1000da25:	and    DWORD PTR [ebx+0xc],0x0
1000da29:	mov    DWORD PTR [ebx+0x4],eax
1000da2c:	mov    eax,DWORD PTR [ebp+0x8]
1000da2f:	call   0x1005891d
1000da34:	ret    0x4
1000da37:	push   esi
1000da38:	mov    esi,eax
1000da3a:	call   0x1000d8e6
1000da3f:	test   al,al
1000da41:	jne    0x1000da51
1000da43:	mov    eax,DWORD PTR [esi+0x4]
1000da46:	mov    ecx,DWORD PTR [esi+0x8]
1000da49:	mov    eax,DWORD PTR [eax+0x8]
1000da4c:	mov    al,BYTE PTR [eax+ecx*1]
1000da4f:	pop    esi
1000da50:	ret    
1000da51:	xor    al,al
1000da53:	pop    esi
1000da54:	ret    
1000da55:	push   esi
1000da56:	mov    esi,eax
1000da58:	call   0x1000d8e6
1000da5d:	test   al,al
1000da5f:	je     0x1000da65
1000da61:	xor    al,al
1000da63:	pop    esi
1000da64:	ret    
1000da65:	mov    eax,DWORD PTR [esi+0x4]
1000da68:	test   eax,eax
1000da6a:	je     0x1000da8a
1000da6c:	mov    ecx,DWORD PTR [esi+0x8]
1000da6f:	inc    ecx
1000da70:	cmp    ecx,DWORD PTR [eax]
1000da72:	jb     0x1000da84
1000da74:	mov    eax,DWORD PTR [eax+0x4]
1000da77:	test   eax,eax
1000da79:	je     0x1000da84
1000da7b:	and    DWORD PTR [esi+0x8],0x0
1000da7f:	mov    DWORD PTR [esi+0x4],eax
1000da82:	jmp    0x1000da87
1000da84:	mov    DWORD PTR [esi+0x8],ecx
1000da87:	inc    DWORD PTR [esi+0xc]
1000da8a:	mov    al,0x1
1000da8c:	pop    esi
1000da8d:	ret    
1000da8e:	push   esi
1000da8f:	mov    esi,eax
1000da91:	call   0x1000d8e6
1000da96:	test   al,al
1000da98:	je     0x1000da9e
1000da9a:	xor    eax,eax
1000da9c:	jmp    0x1000daec
1000da9e:	mov    eax,DWORD PTR [esi+0x4]
1000daa1:	mov    ecx,DWORD PTR [esi+0x8]
1000daa4:	push   edi
1000daa5:	mov    edi,DWORD PTR [eax]
1000daa7:	sub    edi,ecx
1000daa9:	cmp    edi,DWORD PTR [esp+0x10]
1000daad:	jbe    0x1000dab3
1000daaf:	mov    edi,DWORD PTR [esp+0x10]
1000dab3:	mov    eax,DWORD PTR [eax+0x8]
1000dab6:	push   edi
1000dab7:	add    eax,ecx
1000dab9:	push   eax
1000daba:	push   DWORD PTR [esp+0x14]
1000dabe:	call   0x10043ed0
1000dac3:	mov    eax,DWORD PTR [esi+0x8]
1000dac6:	lea    ecx,[edi+eax*1]
1000dac9:	mov    eax,DWORD PTR [esi+0x4]
1000dacc:	add    esp,0xc
1000dacf:	cmp    ecx,DWORD PTR [eax]
1000dad1:	jb     0x1000dae3
1000dad3:	mov    eax,DWORD PTR [eax+0x4]
1000dad6:	test   eax,eax
1000dad8:	je     0x1000dae3
1000dada:	and    DWORD PTR [esi+0x8],0x0
1000dade:	mov    DWORD PTR [esi+0x4],eax
1000dae1:	jmp    0x1000dae6
1000dae3:	mov    DWORD PTR [esi+0x8],ecx
1000dae6:	add    DWORD PTR [esi+0xc],edi
1000dae9:	mov    eax,edi
1000daeb:	pop    edi
1000daec:	pop    esi
1000daed:	ret    0x8
1000daf0:	push   esi
1000daf1:	mov    esi,eax
1000daf3:	call   0x1000d8e6
1000daf8:	test   al,al
1000dafa:	je     0x1000db00
1000dafc:	xor    al,al
1000dafe:	pop    esi
1000daff:	ret    
1000db00:	mov    eax,DWORD PTR [esi+0x4]
1000db03:	xor    ecx,ecx
1000db05:	jmp    0x1000db18
1000db07:	mov    edx,DWORD PTR [eax]
1000db09:	sub    edx,DWORD PTR [esi+0x8]
1000db0c:	add    DWORD PTR [esi+0xc],edx
1000db0f:	mov    eax,DWORD PTR [eax+0x4]
1000db12:	mov    DWORD PTR [esi+0x4],eax
1000db15:	mov    DWORD PTR [esi+0x8],ecx
1000db18:	cmp    DWORD PTR [eax+0x4],ecx
1000db1b:	mov    eax,DWORD PTR [esi+0x4]
1000db1e:	jne    0x1000db07
1000db20:	mov    ecx,DWORD PTR [eax]
1000db22:	sub    ecx,DWORD PTR [esi+0x8]
1000db25:	add    DWORD PTR [esi+0xc],ecx
1000db28:	mov    eax,DWORD PTR [eax]
1000db2a:	mov    DWORD PTR [esi+0x8],eax
1000db2d:	mov    al,0x1
1000db2f:	pop    esi
1000db30:	ret    
1000db31:	push   0x10
1000db33:	mov    eax,0x10063350
1000db38:	call   0x10058845
1000db3d:	mov    ebx,ecx
1000db3f:	xor    edi,edi
1000db41:	mov    DWORD PTR [ebp-0x10],edi
1000db44:	mov    DWORD PTR [ebp-0x4],edi
1000db47:	mov    DWORD PTR [ebp-0x14],edi
1000db4a:	mov    DWORD PTR [ebp-0x18],edi
1000db4d:	lea    eax,[ebp-0x18]
1000db50:	push   eax
1000db51:	lea    eax,[ebp-0x14]
1000db54:	push   eax
1000db55:	lea    eax,[ebp-0x10]
1000db58:	push   eax
1000db59:	mov    BYTE PTR [ebp-0x4],0x2
1000db5d:	call   0x1000dbfa
1000db62:	cmp    eax,edi
1000db64:	je     0x1000db8a
1000db66:	mov    esi,eax
1000db68:	lea    eax,[ebp-0x18]
1000db6b:	call   0x100096f7
1000db70:	lea    eax,[ebp-0x14]
1000db73:	call   0x100096f7
1000db78:	lea    eax,[ebp-0x10]
1000db7b:	call   0x100096f7
1000db80:	mov    eax,esi
1000db82:	call   0x1005891d
1000db87:	ret    0x4
1000db8a:	mov    esi,DWORD PTR [ebx]
1000db8c:	call   0x1000d8e6
1000db91:	test   al,al
1000db93:	je     0x1000db9a
1000db95:	xor    esi,esi
1000db97:	inc    esi
1000db98:	jmp    0x1000db68
1000db9a:	mov    esi,DWORD PTR [ebp+0x8]
1000db9d:	lea    eax,[esi+0x18]
1000dba0:	push   eax
1000dba1:	mov    ecx,ebx
1000dba3:	call   0x1000e803
1000dba8:	cmp    eax,edi
1000dbaa:	jne    0x1000db66
1000dbac:	push   edi
1000dbad:	sub    esp,0x1c
1000dbb0:	mov    ecx,esp
1000dbb2:	mov    DWORD PTR [ebp+0x8],esp
1000dbb5:	push   0x1006bfe8
1000dbba:	call   0x100011d6
1000dbbf:	call   0x1000e9b2
1000dbc4:	cmp    eax,edi
1000dbc6:	jne    0x1000db66
1000dbc8:	mov    ebx,DWORD PTR [ebp-0x10]
1000dbcb:	mov    DWORD PTR [ebp-0x10],edi
1000dbce:	mov    edi,esi
1000dbd0:	call   0x1000971b
1000dbd5:	mov    ebx,DWORD PTR [ebp-0x14]
1000dbd8:	and    DWORD PTR [ebp-0x14],0x0
1000dbdc:	lea    edi,[esi+0x4]
1000dbdf:	call   0x1000971b
1000dbe4:	mov    ebx,DWORD PTR [ebp-0x18]
1000dbe7:	and    DWORD PTR [ebp-0x18],0x0
1000dbeb:	lea    edi,[esi+0x8]
1000dbee:	call   0x1000971b
1000dbf3:	xor    esi,esi
1000dbf5:	jmp    0x1000db68
1000dbfa:	push   0x50
1000dbfc:	mov    eax,0x10063313
1000dc01:	call   0x100588ae
1000dc06:	mov    eax,DWORD PTR [ebp+0x8]
1000dc09:	mov    DWORD PTR [ebp-0x58],eax
1000dc0c:	mov    eax,DWORD PTR [ebp+0xc]
1000dc0f:	mov    edi,ecx
1000dc11:	mov    DWORD PTR [ebp-0x5c],eax
1000dc14:	mov    eax,DWORD PTR [ebp+0x10]
1000dc17:	push   0x0
1000dc19:	lea    ecx,[ebp-0x2c]
1000dc1c:	mov    DWORD PTR [ebp-0x4c],edi
1000dc1f:	mov    DWORD PTR [ebp-0x54],eax
1000dc22:	mov    DWORD PTR [ebp-0x14],0xf
1000dc29:	call   0x10001425
1000dc2e:	and    DWORD PTR [ebp-0x4],0x0
1000dc32:	mov    eax,DWORD PTR [edi]
1000dc34:	mov    ebx,DWORD PTR [eax+0xc]
1000dc37:	push   0x1
1000dc39:	lea    eax,[ebp-0x2c]
1000dc3c:	push   eax
1000dc3d:	call   0x1000ecef
1000dc42:	test   eax,eax
1000dc44:	mov    ecx,DWORD PTR [edi]
1000dc46:	mov    edi,DWORD PTR [ecx+0xc]
1000dc49:	je     0x1000dc60
1000dc4b:	mov    esi,eax
1000dc4d:	push   0x0
1000dc4f:	push   0x1
1000dc51:	lea    ecx,[ebp-0x2c]
1000dc54:	call   0x100012f9
1000dc59:	mov    eax,esi
1000dc5b:	jmp    0x1000ddcc
1000dc60:	push   0x1006c58c
1000dc65:	push   0x3
1000dc67:	push   0x1006c178
1000dc6c:	call   0x10003d75
1000dc71:	add    esp,0xc
1000dc74:	push   eax
1000dc75:	lea    esi,[ebp-0x2c]
1000dc78:	call   0x10005e33
1000dc7d:	test   al,al
1000dc7f:	pop    ecx
1000dc80:	jne    0x1000dcc7
1000dc82:	push   0x562bef90
1000dc87:	push   0x1006c5c4
1000dc8c:	call   0x10003d63
1000dc91:	push   0x43651316
1000dc96:	push   eax
1000dc97:	call   0x10003d63
1000dc9c:	push   0x2869858e
1000dca1:	push   eax
1000dca2:	call   0x10003d63
1000dca7:	push   eax
1000dca8:	push   0x4
1000dcaa:	push   0x1006c5e8
1000dcaf:	call   0x10003d75
1000dcb4:	add    esp,0x24
1000dcb7:	push   eax
1000dcb8:	call   0x10005e33
1000dcbd:	test   al,al
1000dcbf:	pop    ecx
1000dcc0:	jne    0x1000dcc7
1000dcc2:	xor    esi,esi
1000dcc4:	inc    esi
1000dcc5:	jmp    0x1000dc4d
1000dcc7:	push   0x24
1000dcc9:	call   0x1004239e
1000dcce:	pop    ecx
1000dccf:	mov    DWORD PTR [ebp-0x50],eax
1000dcd2:	test   eax,eax
1000dcd4:	mov    BYTE PTR [ebp-0x4],0x1
1000dcd8:	je     0x1000dcea
1000dcda:	sub    edi,ebx
1000dcdc:	push   edi
1000dcdd:	push   ebx
1000dcde:	lea    ecx,[ebp-0x2c]
1000dce1:	push   ecx
1000dce2:	push   eax
1000dce3:	call   0x1000744a
1000dce8:	jmp    0x1000dcec
1000dcea:	xor    eax,eax
1000dcec:	mov    edi,DWORD PTR [ebp-0x58]
1000dcef:	mov    ebx,eax
1000dcf1:	call   0x1000971b
1000dcf6:	or     DWORD PTR [ebp-0x4],0xffffffff
1000dcfa:	push   0x0
1000dcfc:	push   0x1
1000dcfe:	lea    ecx,[ebp-0x2c]
1000dd01:	call   0x100012f9
1000dd06:	mov    esi,DWORD PTR [ebp-0x4c]
1000dd09:	mov    edi,esi
1000dd0b:	call   0x1000ea41
1000dd10:	test   eax,eax
1000dd12:	jne    0x1000ddcc
1000dd18:	push   eax
1000dd19:	lea    ecx,[ebp-0x48]
1000dd1c:	mov    DWORD PTR [ebp-0x30],0xf
1000dd23:	call   0x10001425
1000dd28:	mov    DWORD PTR [ebp-0x4],0x2
1000dd2f:	mov    eax,DWORD PTR [esi]
1000dd31:	mov    ebx,DWORD PTR [eax+0xc]
1000dd34:	lea    eax,[ebp-0x48]
1000dd37:	push   eax
1000dd38:	call   0x1000edba
1000dd3d:	test   eax,eax
1000dd3f:	mov    ecx,DWORD PTR [esi]
1000dd41:	mov    edi,DWORD PTR [ecx+0xc]
1000dd44:	mov    DWORD PTR [ebp-0x4c],eax
1000dd47:	je     0x1000dd5a
1000dd49:	push   0x0
1000dd4b:	push   0x1
1000dd4d:	lea    ecx,[ebp-0x48]
1000dd50:	call   0x100012f9
1000dd55:	mov    eax,DWORD PTR [ebp-0x4c]
1000dd58:	jmp    0x1000ddcc
1000dd5a:	push   0x24
1000dd5c:	call   0x1004239e
1000dd61:	pop    ecx
1000dd62:	mov    DWORD PTR [ebp-0x50],eax
1000dd65:	test   eax,eax
1000dd67:	mov    BYTE PTR [ebp-0x4],0x3
1000dd6b:	je     0x1000dd7d
1000dd6d:	sub    edi,ebx
1000dd6f:	push   edi
1000dd70:	push   ebx
1000dd71:	lea    ecx,[ebp-0x48]
1000dd74:	push   ecx
1000dd75:	push   eax
1000dd76:	call   0x1000744a
1000dd7b:	jmp    0x1000dd7f
1000dd7d:	xor    eax,eax
1000dd7f:	mov    edi,DWORD PTR [ebp-0x5c]
1000dd82:	mov    ebx,eax
1000dd84:	call   0x1000971b
1000dd89:	or     DWORD PTR [ebp-0x4],0xffffffff
1000dd8d:	push   0x0
1000dd8f:	push   0x1
1000dd91:	lea    ecx,[ebp-0x48]
1000dd94:	call   0x100012f9
1000dd99:	mov    edi,esi
1000dd9b:	call   0x1000ea41
1000dda0:	test   eax,eax
1000dda2:	jne    0x1000ddcc
1000dda4:	push   DWORD PTR [ebp-0x54]
1000dda7:	mov    ecx,esi
1000dda9:	call   0x1000ea6f
1000ddae:	test   eax,eax
1000ddb0:	jne    0x1000ddcc
1000ddb2:	push   eax
1000ddb3:	sub    esp,0x1c
1000ddb6:	mov    ecx,esp
1000ddb8:	mov    DWORD PTR [ebp-0x50],esp
1000ddbb:	push   0x1006bfe8
1000ddc0:	call   0x100011d6
1000ddc5:	mov    ebx,esi
1000ddc7:	call   0x1000e9b2
1000ddcc:	call   0x10058931
1000ddd1:	ret    0xc
1000ddd4:	push   0x80
1000ddd9:	mov    eax,0x1006284a
1000ddde:	call   0x100588ae
1000dde3:	mov    eax,DWORD PTR [ebp+0x8]
1000dde6:	push   0x61854bda
1000ddeb:	xor    ebx,ebx
1000dded:	push   0x1006c5f0
1000ddf2:	mov    DWORD PTR [ebp-0x38],eax
1000ddf5:	mov    edi,ecx
1000ddf7:	mov    DWORD PTR [ebp-0x34],ebx
1000ddfa:	call   0x10003d63
1000ddff:	push   0x26901800
1000de04:	push   eax
1000de05:	call   0x10003d63
1000de0a:	push   0x35f8e29a
1000de0f:	push   eax
1000de10:	call   0x10003d63
1000de15:	push   eax
1000de16:	push   0xe
1000de18:	mov    esi,0x1006c62c
1000de1d:	push   esi
1000de1e:	call   0x10003d75
1000de23:	add    esp,0x24
1000de26:	push   eax
1000de27:	lea    ecx,[ebp-0x54]
1000de2a:	call   0x100011d6
1000de2f:	lea    eax,[ebp-0x54]
1000de32:	add    edi,0x18
1000de35:	push   eax
1000de36:	mov    eax,edi
1000de38:	call   0x10008088
1000de3d:	push   ebx
1000de3e:	push   0x1
1000de40:	lea    ecx,[ebp-0x54]
1000de43:	mov    BYTE PTR [ebp-0x2d],al
1000de46:	call   0x100012f9
1000de4b:	cmp    BYTE PTR [ebp-0x2d],bl
1000de4e:	je     0x1000df06
1000de54:	push   ebx
1000de55:	lea    ecx,[ebp-0x2c]
1000de58:	mov    DWORD PTR [ebp-0x14],0xf
1000de5f:	call   0x10001425
1000de64:	push   0x2355f36a
1000de69:	push   0x1006c63c
1000de6e:	mov    DWORD PTR [ebp-0x4],ebx
1000de71:	call   0x10003d63
1000de76:	push   0x35ec534c
1000de7b:	push   eax
1000de7c:	call   0x10003d63
1000de81:	push   0x590ee1be
1000de86:	push   eax
1000de87:	call   0x10003d63
1000de8c:	push   eax
1000de8d:	push   0xe
1000de8f:	push   esi
1000de90:	call   0x10003d75
1000de95:	add    esp,0x24
1000de98:	push   eax
1000de99:	lea    ecx,[ebp-0x70]
1000de9c:	call   0x100011d6
1000dea1:	push   ebx
1000dea2:	lea    eax,[ebp-0x70]
1000dea5:	push   eax
1000dea6:	lea    eax,[ebp-0x8c]
1000deac:	push   eax
1000dead:	mov    eax,edi
1000deaf:	mov    BYTE PTR [ebp-0x4],0x1
1000deb3:	call   0x1000800f
1000deb8:	cmp    DWORD PTR [eax+0x18],0x10
1000debc:	jb     0x1000dec3
1000debe:	mov    eax,DWORD PTR [eax+0x4]
1000dec1:	jmp    0x1000dec6
1000dec3:	add    eax,0x4
1000dec6:	push   eax
1000dec7:	call   0x10044a05
1000decc:	pop    ecx
1000decd:	push   ebx
1000dece:	push   0x1
1000ded0:	lea    ecx,[ebp-0x8c]
1000ded6:	mov    esi,eax
1000ded8:	call   0x100012f9
1000dedd:	push   ebx
1000dede:	push   0x1
1000dee0:	lea    ecx,[ebp-0x70]
1000dee3:	mov    BYTE PTR [ebp-0x4],bl
1000dee6:	call   0x100012f9
1000deeb:	push   esi
1000deec:	lea    eax,[ebp-0x2c]
1000deef:	push   eax
1000def0:	push   DWORD PTR [ebp-0x38]
1000def3:	call   0x1000ee48
1000def8:	push   ebx
1000def9:	push   0x1
1000defb:	lea    ecx,[ebp-0x2c]
1000defe:	mov    DWORD PTR [ebp-0x34],eax
1000df01:	call   0x100012f9
1000df06:	mov    eax,DWORD PTR [ebp-0x34]
1000df09:	call   0x10058931
1000df0e:	ret    0x4
1000df11:	push   0x40
1000df13:	mov    eax,0x10060e3a
1000df18:	call   0x100588ae
1000df1d:	mov    eax,DWORD PTR [ebp+0x8]
1000df20:	mov    eax,DWORD PTR [eax]
1000df22:	mov    edi,ecx
1000df24:	lea    ecx,[ebp-0x4c]
1000df27:	push   ecx
1000df28:	call   0x100194bf
1000df2d:	mov    esi,eax
1000df2f:	and    DWORD PTR [ebp-0x4],0x0
1000df33:	push   0x32f4aa70
1000df38:	push   0x1006c674
1000df3d:	call   0x10003d63
1000df42:	push   0x4bf6e5bc
1000df47:	push   eax
1000df48:	call   0x10003d63
1000df4d:	push   0x1609c8c0
1000df52:	push   eax
1000df53:	call   0x10003d63
1000df58:	push   eax
1000df59:	push   0x4
1000df5b:	push   0x1006c6ac
1000df60:	call   0x10003d75
1000df65:	push   eax
1000df66:	call   0x10005e33
1000df6b:	or     DWORD PTR [ebp-0x4],0xffffffff
1000df6f:	add    esp,0x28
1000df72:	xor    ebx,ebx
1000df74:	push   0x0
1000df76:	inc    ebx
1000df77:	push   ebx
1000df78:	lea    ecx,[ebp-0x4c]
1000df7b:	mov    BYTE PTR [ebp-0x2d],al
1000df7e:	call   0x100012f9
1000df83:	cmp    BYTE PTR [ebp-0x2d],0x0
1000df87:	jne    0x1000e01b
1000df8d:	mov    eax,DWORD PTR [edi+0x4]
1000df90:	lea    ecx,[ebp-0x2c]
1000df93:	push   ecx
1000df94:	call   0x100194bf
1000df99:	xor    edi,edi
1000df9b:	lea    eax,[ebp-0x2c]
1000df9e:	mov    DWORD PTR [ebp-0x4],ebx
1000dfa1:	call   0x1000473e
1000dfa6:	cmp    BYTE PTR [eax],0x31
1000dfa9:	je     0x1000e010
1000dfab:	push   0x1006c6b4
1000dfb0:	push   0x3
1000dfb2:	push   0x1006c6d8
1000dfb7:	call   0x10003d75
1000dfbc:	push   eax
1000dfbd:	lea    esi,[ebp-0x2c]
1000dfc0:	call   0x10005e33
1000dfc5:	add    esp,0x10
1000dfc8:	test   al,al
1000dfca:	jne    0x1000e010
1000dfcc:	push   0x620e34e2
1000dfd1:	push   0x379bf930
1000dfd6:	push   0x1006c6dc
1000dfdb:	call   0x10003d63
1000dfe0:	pop    ecx
1000dfe1:	pop    ecx
1000dfe2:	push   eax
1000dfe3:	call   0x10003d63
1000dfe8:	push   eax
1000dfe9:	push   0x3
1000dfeb:	push   0x1006c700
1000dff0:	call   0x10003d75
1000dff5:	push   eax
1000dff6:	call   0x10005e33
1000dffb:	add    esp,0x18
1000dffe:	test   al,al
1000e000:	jne    0x1000e010
1000e002:	push   0x0
1000e004:	push   ebx
1000e005:	mov    ecx,esi
1000e007:	call   0x100012f9
1000e00c:	mov    al,bl
1000e00e:	jmp    0x1000e01d
1000e010:	push   0x0
1000e012:	push   ebx
1000e013:	lea    ecx,[ebp-0x2c]
1000e016:	call   0x100012f9
1000e01b:	xor    al,al
1000e01d:	call   0x10058931
1000e022:	ret    
1000e023:	push   0xc
1000e025:	mov    eax,0x100632d4
1000e02a:	call   0x10058845
1000e02f:	xor    edi,edi
1000e031:	mov    DWORD PTR [ebp-0x18],edi
1000e034:	mov    DWORD PTR [ebp-0x4],edi
1000e037:	mov    DWORD PTR [ebp-0x14],edi
1000e03a:	mov    DWORD PTR [ebp-0x10],edi
1000e03d:	mov    esi,DWORD PTR [ebp+0x8]
1000e040:	lea    eax,[ebp-0x10]
1000e043:	push   eax
1000e044:	lea    eax,[ebp-0x18]
1000e047:	push   eax
1000e048:	lea    ecx,[ebp-0x14]
1000e04b:	mov    BYTE PTR [ebp-0x4],0x2
1000e04f:	call   0x1000e651
1000e054:	mov    esi,eax
1000e056:	cmp    esi,edi
1000e058:	jne    0x1000e0df
1000e05e:	mov    esi,DWORD PTR [ebp+0xc]
1000e061:	mov    ecx,DWORD PTR [ebp+0x8]
1000e064:	lea    eax,[esi+0x20]
1000e067:	push   eax
1000e068:	call   0x1000e803
1000e06d:	mov    ebx,eax
1000e06f:	cmp    ebx,edi
1000e071:	je     0x1000e08f
1000e073:	lea    eax,[ebp-0x10]
1000e076:	call   0x100096f7
1000e07b:	lea    eax,[ebp-0x14]
1000e07e:	call   0x100096f7
1000e083:	lea    eax,[ebp-0x18]
1000e086:	call   0x100096f7
1000e08b:	mov    eax,ebx
1000e08d:	jmp    0x1000e0f9
1000e08f:	mov    ebx,DWORD PTR [ebp-0x18]
1000e092:	mov    DWORD PTR [ebp-0x18],edi
1000e095:	mov    edi,esi
1000e097:	call   0x1000971b
1000e09c:	mov    ebx,DWORD PTR [ebp-0x14]
1000e09f:	and    DWORD PTR [ebp-0x14],0x0
1000e0a3:	lea    edi,[esi+0x4]
1000e0a6:	call   0x1000971b
1000e0ab:	mov    ebx,DWORD PTR [ebp-0x10]
1000e0ae:	and    DWORD PTR [ebp-0x10],0x0
1000e0b2:	add    esi,0x8
1000e0b5:	mov    edi,esi
1000e0b7:	call   0x1000971b
1000e0bc:	xor    esi,esi
1000e0be:	push   esi
1000e0bf:	sub    esp,0x1c
1000e0c2:	mov    ecx,esp
1000e0c4:	mov    DWORD PTR [ebp+0xc],esp
1000e0c7:	push   0x1006bfe8
1000e0cc:	call   0x100011d6
1000e0d1:	mov    ebx,DWORD PTR [ebp+0x8]
1000e0d4:	call   0x1000e9b2
1000e0d9:	cmp    eax,esi
1000e0db:	je     0x1000e0df
1000e0dd:	mov    esi,eax
1000e0df:	lea    eax,[ebp-0x10]
1000e0e2:	call   0x100096f7
1000e0e7:	lea    eax,[ebp-0x14]
1000e0ea:	call   0x100096f7
1000e0ef:	lea    eax,[ebp-0x18]
1000e0f2:	call   0x100096f7
1000e0f7:	mov    eax,esi
1000e0f9:	call   0x1005891d
1000e0fe:	ret    0x8
1000e101:	push   ebp
1000e102:	mov    ebp,esp
1000e104:	and    esp,0xfffffff8
1000e107:	push   0xffffffff
1000e109:	push   0x1006328e
1000e10e:	mov    eax,fs:0x0
1000e114:	push   eax
1000e115:	sub    esp,0xc8
1000e11b:	mov    eax,ds:0x1007d030
1000e120:	xor    eax,esp
1000e122:	mov    DWORD PTR [esp+0xc0],eax
1000e129:	push   ebx
1000e12a:	push   esi
1000e12b:	push   edi
1000e12c:	mov    eax,ds:0x1007d030
1000e131:	xor    eax,esp
1000e133:	push   eax
1000e134:	lea    eax,[esp+0xd8]
1000e13b:	mov    fs:0x0,eax
1000e141:	mov    eax,DWORD PTR [ebp+0x8]
1000e144:	mov    esi,edx
1000e146:	mov    edi,ecx
1000e148:	xor    ebx,ebx
1000e14a:	push   eax
1000e14b:	mov    ecx,esi
1000e14d:	mov    DWORD PTR [esp+0x24],edi
1000e151:	mov    DWORD PTR [esp+0x20],esi
1000e155:	mov    DWORD PTR [esp+0x1c],ebx
1000e159:	call   0x1000df11
1000e15e:	test   al,al
1000e160:	pop    ecx
1000e161:	je     0x1000e629
1000e167:	push   ebx
1000e168:	lea    ecx,[esp+0xb8]
1000e16f:	mov    DWORD PTR [esp+0xd0],0xf
1000e17a:	call   0x10001425
1000e17f:	mov    DWORD PTR [esp+0xe0],ebx
1000e186:	mov    eax,DWORD PTR [edi]
1000e188:	mov    eax,DWORD PTR [eax+0xc]
1000e18b:	lea    ecx,[esp+0x44]
1000e18f:	mov    DWORD PTR [esp+0x24],eax
1000e193:	mov    eax,DWORD PTR [esi]
1000e195:	push   ecx
1000e196:	call   0x100194bf
1000e19b:	mov    esi,eax
1000e19d:	push   0x1006c704
1000e1a2:	push   0x3
1000e1a4:	push   0x1006c144
1000e1a9:	mov    BYTE PTR [esp+0xec],0x1
1000e1b1:	call   0x10003d75
1000e1b6:	add    esp,0xc
1000e1b9:	push   eax
1000e1ba:	call   0x10005e33
1000e1bf:	pop    ecx
1000e1c0:	xor    edi,edi
1000e1c2:	push   ebx
1000e1c3:	inc    edi
1000e1c4:	push   edi
1000e1c5:	lea    ecx,[esp+0x4c]
1000e1c9:	mov    BYTE PTR [esp+0x1f],al
1000e1cd:	mov    BYTE PTR [esp+0xe8],bl
1000e1d4:	call   0x100012f9
1000e1d9:	cmp    BYTE PTR [esp+0x17],bl
1000e1dd:	je     0x1000e2f6
1000e1e3:	push   0x2b4461ca
1000e1e8:	push   0x1006c728
1000e1ed:	call   0x10003d63
1000e1f2:	push   eax
1000e1f3:	push   0xe
1000e1f5:	mov    esi,0x1006c62c
1000e1fa:	push   esi
1000e1fb:	call   0x10003d75
1000e200:	add    esp,0x14
1000e203:	push   eax
1000e204:	lea    ecx,[esp+0x2c]
1000e208:	call   0x100011d6
1000e20d:	mov    eax,DWORD PTR [esp+0x1c]
1000e211:	lea    ecx,[esp+0x28]
1000e215:	add    eax,0x20
1000e218:	push   ecx
1000e219:	call   0x10008088
1000e21e:	push   ebx
1000e21f:	push   edi
1000e220:	lea    ecx,[esp+0x30]
1000e224:	mov    BYTE PTR [esp+0x1f],al
1000e228:	call   0x100012f9
1000e22d:	cmp    BYTE PTR [esp+0x17],bl
1000e231:	je     0x1000e2dc
1000e237:	push   0x6bf8662
1000e23c:	push   0x1006c74c
1000e241:	call   0x10003d63
1000e246:	push   0xb731928
1000e24b:	push   eax
1000e24c:	call   0x10003d63
1000e251:	push   0x22996a26
1000e256:	push   eax
1000e257:	call   0x10003d63
1000e25c:	push   eax
1000e25d:	push   0xe
1000e25f:	push   esi
1000e260:	call   0x10003d75
1000e265:	add    esp,0x24
1000e268:	push   eax
1000e269:	lea    ecx,[esp+0x2c]
1000e26d:	call   0x100011d6
1000e272:	mov    BYTE PTR [esp+0xe0],0x2
1000e27a:	push   ebx
1000e27b:	lea    eax,[esp+0x2c]
1000e27f:	push   eax
1000e280:	lea    eax,[esp+0x4c]
1000e284:	push   eax
1000e285:	mov    eax,DWORD PTR [esp+0x28]
1000e289:	add    eax,0x20
1000e28c:	call   0x1000800f
1000e291:	cmp    DWORD PTR [eax+0x18],0x10
1000e295:	jb     0x1000e29c
1000e297:	mov    eax,DWORD PTR [eax+0x4]
1000e29a:	jmp    0x1000e29f
1000e29c:	add    eax,0x4
1000e29f:	push   eax
1000e2a0:	call   0x10044a05
1000e2a5:	pop    ecx
1000e2a6:	push   ebx
1000e2a7:	push   edi
1000e2a8:	lea    ecx,[esp+0x4c]
1000e2ac:	mov    esi,eax
1000e2ae:	call   0x100012f9
1000e2b3:	push   ebx
1000e2b4:	push   edi
1000e2b5:	lea    ecx,[esp+0x30]
1000e2b9:	mov    BYTE PTR [esp+0xe8],bl
1000e2c0:	call   0x100012f9
1000e2c5:	push   esi
1000e2c6:	lea    eax,[esp+0xb8]
1000e2cd:	push   eax
1000e2ce:	push   DWORD PTR [esp+0x28]
1000e2d2:	call   0x1000ee48
1000e2d7:	jmp    0x1000e5b7
1000e2dc:	mov    edi,DWORD PTR [esp+0x20]
1000e2e0:	lea    ebx,[esp+0xb4]
1000e2e7:	call   0x1000eef5
1000e2ec:	xor    edi,edi
1000e2ee:	xor    ebx,ebx
1000e2f0:	inc    edi
1000e2f1:	jmp    0x1000e5b7
1000e2f6:	push   0x60f33412
1000e2fb:	push   0x1006c770
1000e300:	call   0x10003d63
1000e305:	push   eax
1000e306:	push   0xe
1000e308:	mov    esi,0x1006c62c
1000e30d:	push   esi
1000e30e:	call   0x10003d75
1000e313:	add    esp,0x14
1000e316:	push   eax
1000e317:	lea    ecx,[esp+0x2c]
1000e31b:	call   0x100011d6
1000e320:	mov    eax,DWORD PTR [esp+0x1c]
1000e324:	lea    ecx,[esp+0x28]
1000e328:	add    eax,0x20
1000e32b:	push   ecx
1000e32c:	call   0x10008088
1000e331:	push   ebx
1000e332:	push   edi
1000e333:	lea    ecx,[esp+0x30]
1000e337:	mov    BYTE PTR [esp+0x1f],al
1000e33b:	call   0x100012f9
1000e340:	cmp    BYTE PTR [esp+0x17],bl
1000e344:	je     0x1000e36d
1000e346:	push   0x1006c7a8
1000e34b:	push   0xe
1000e34d:	push   esi
1000e34e:	call   0x10003d75
1000e353:	add    esp,0xc
1000e356:	push   eax
1000e357:	lea    ecx,[esp+0x2c]
1000e35b:	call   0x100011d6
1000e360:	mov    BYTE PTR [esp+0xe0],0x3
1000e368:	jmp    0x1000e27a
1000e36d:	push   0x67136ec
1000e372:	push   0x1006c814
1000e377:	call   0x10003d63
1000e37c:	push   0x3ae14676
1000e381:	push   eax
1000e382:	call   0x10003d63
1000e387:	push   eax
1000e388:	push   0xa
1000e38a:	push   0x1006c260
1000e38f:	call   0x10003d75
1000e394:	add    esp,0x1c
1000e397:	push   eax
1000e398:	lea    ecx,[esp+0x48]
1000e39c:	call   0x100011d6
1000e3a1:	push   ebx
1000e3a2:	lea    eax,[esp+0x48]
1000e3a6:	push   eax
1000e3a7:	lea    eax,[esp+0x84]
1000e3ae:	push   eax
1000e3af:	mov    eax,DWORD PTR [esp+0x28]
1000e3b3:	mov    BYTE PTR [esp+0xec],0x4
1000e3bb:	add    eax,0x20
1000e3be:	mov    DWORD PTR [esp+0x24],edi
1000e3c2:	call   0x1000800f
1000e3c7:	mov    esi,eax
1000e3c9:	push   0x312b6f48
1000e3ce:	mov    DWORD PTR [esp+0xe4],0x5
1000e3d9:	push   0x1006c7dc
1000e3de:	mov    DWORD PTR [esp+0x20],0x3
1000e3e6:	call   0x10003d63
1000e3eb:	push   0x7355a578
1000e3f0:	push   eax
1000e3f1:	call   0x10003d63
1000e3f6:	add    esp,0x10
1000e3f9:	cmp    DWORD PTR [esi+0x18],0x10
1000e3fd:	jb     0x1000e404
1000e3ff:	mov    esi,DWORD PTR [esi+0x4]
1000e402:	jmp    0x1000e407
1000e404:	add    esi,0x4
1000e407:	push   eax
1000e408:	push   0x5
1000e40a:	push   0x1006c80c
1000e40f:	call   0x10003d75
1000e414:	add    esp,0xc
1000e417:	push   eax
1000e418:	push   esi
1000e419:	call   0x100443bf
1000e41e:	test   eax,eax
1000e420:	pop    ecx
1000e421:	pop    ecx
1000e422:	jne    0x1000e51d
1000e428:	push   0x4e296c3e
1000e42d:	push   0x1006c898
1000e432:	call   0x10003d63
1000e437:	push   0x419a55ac
1000e43c:	push   eax
1000e43d:	call   0x10003d63
1000e442:	push   0xa455b56
1000e447:	push   eax
1000e448:	call   0x10003d63
1000e44d:	push   eax
1000e44e:	push   0x11
1000e450:	push   0x1006c8c0
1000e455:	call   0x10003d75
1000e45a:	add    esp,0x24
1000e45d:	push   eax
1000e45e:	lea    ecx,[esp+0x2c]
1000e462:	call   0x100011d6
1000e467:	push   0x7
1000e469:	pop    edi
1000e46a:	push   ebx
1000e46b:	lea    eax,[esp+0x2c]
1000e46f:	push   eax
1000e470:	lea    eax,[esp+0xa0]
1000e477:	push   eax
1000e478:	mov    eax,DWORD PTR [esp+0x28]
1000e47c:	mov    DWORD PTR [esp+0xec],0x6
1000e487:	add    eax,0x20
1000e48a:	mov    DWORD PTR [esp+0x24],edi
1000e48e:	call   0x1000800f
1000e493:	mov    DWORD PTR [esp+0xe0],edi
1000e49a:	push   eax
1000e49b:	lea    esi,[esp+0x64]
1000e49f:	mov    DWORD PTR [esp+0x1c],0xf
1000e4a7:	call   0x1002f5e0
1000e4ac:	mov    esi,eax
1000e4ae:	mov    DWORD PTR [esp+0xe4],0x8
1000e4b9:	mov    DWORD PTR [esp],0x29591a28
1000e4c0:	push   0x1006c850
1000e4c5:	mov    DWORD PTR [esp+0x20],0x1f
1000e4cd:	call   0x10003d63
1000e4d2:	push   0x8817e2e
1000e4d7:	push   eax
1000e4d8:	call   0x10003d63
1000e4dd:	push   0x4bc3bfa8
1000e4e2:	push   eax
1000e4e3:	call   0x10003d63
1000e4e8:	add    esp,0x18
1000e4eb:	cmp    DWORD PTR [esi+0x18],0x10
1000e4ef:	jb     0x1000e4f6
1000e4f1:	mov    esi,DWORD PTR [esi+0x4]
1000e4f4:	jmp    0x1000e4f9
1000e4f6:	add    esi,0x4
1000e4f9:	push   eax
1000e4fa:	push   edi
1000e4fb:	push   0x1006c890
1000e500:	call   0x10003d75
1000e505:	add    esp,0xc
1000e508:	push   eax
1000e509:	push   esi
1000e50a:	call   0x10044780
1000e50f:	xor    edi,edi
1000e511:	pop    ecx
1000e512:	inc    edi
1000e513:	test   eax,eax
1000e515:	pop    ecx
1000e516:	mov    BYTE PTR [esp+0x17],0x1
1000e51b:	je     0x1000e521
1000e51d:	mov    BYTE PTR [esp+0x17],bl
1000e521:	test   BYTE PTR [esp+0x18],0x10
1000e526:	je     0x1000e538
1000e528:	and    DWORD PTR [esp+0x18],0xffffffef
1000e52d:	push   ebx
1000e52e:	push   edi
1000e52f:	lea    ecx,[esp+0x68]
1000e533:	call   0x100012f9
1000e538:	test   BYTE PTR [esp+0x18],0x8
1000e53d:	je     0x1000e552
1000e53f:	and    DWORD PTR [esp+0x18],0xfffffff7
1000e544:	push   ebx
1000e545:	push   edi
1000e546:	lea    ecx,[esp+0xa0]
1000e54d:	call   0x100012f9
1000e552:	test   BYTE PTR [esp+0x18],0x4
1000e557:	je     0x1000e569
1000e559:	and    DWORD PTR [esp+0x18],0xfffffffb
1000e55e:	push   ebx
1000e55f:	push   edi
1000e560:	lea    ecx,[esp+0x30]
1000e564:	call   0x100012f9
1000e569:	test   BYTE PTR [esp+0x18],0x2
1000e56e:	je     0x1000e583
1000e570:	and    DWORD PTR [esp+0x18],0xfffffffd
1000e575:	push   ebx
1000e576:	push   edi
1000e577:	lea    ecx,[esp+0x84]
1000e57e:	call   0x100012f9
1000e583:	mov    DWORD PTR [esp+0xe0],ebx
1000e58a:	test   BYTE PTR [esp+0x18],0x1
1000e58f:	je     0x1000e59c
1000e591:	push   ebx
1000e592:	push   edi
1000e593:	lea    ecx,[esp+0x4c]
1000e597:	call   0x100012f9
1000e59c:	cmp    BYTE PTR [esp+0x17],bl
1000e5a0:	jne    0x1000e2dc
1000e5a6:	mov    ecx,DWORD PTR [esp+0x20]
1000e5aa:	lea    eax,[esp+0xb4]
1000e5b1:	push   eax
1000e5b2:	call   0x1000ef59
1000e5b7:	mov    esi,eax
1000e5b9:	cmp    esi,ebx
1000e5bb:	je     0x1000e5cf
1000e5bd:	push   ebx
1000e5be:	push   edi
1000e5bf:	lea    ecx,[esp+0xbc]
1000e5c6:	call   0x100012f9
1000e5cb:	mov    eax,esi
1000e5cd:	jmp    0x1000e62b
1000e5cf:	mov    eax,DWORD PTR [esp+0x20]
1000e5d3:	mov    eax,DWORD PTR [eax]
1000e5d5:	mov    esi,DWORD PTR [eax+0xc]
1000e5d8:	push   0x24
1000e5da:	call   0x1004239e
1000e5df:	pop    ecx
1000e5e0:	mov    DWORD PTR [esp+0x20],eax
1000e5e4:	cmp    eax,ebx
1000e5e6:	mov    BYTE PTR [esp+0xe0],0x9
1000e5ee:	je     0x1000e609
1000e5f0:	sub    esi,DWORD PTR [esp+0x24]
1000e5f4:	lea    ecx,[esp+0xb4]
1000e5fb:	push   esi
1000e5fc:	push   DWORD PTR [esp+0x28]
1000e600:	push   ecx
1000e601:	push   eax
1000e602:	call   0x1000744a
1000e607:	jmp    0x1000e60b
1000e609:	xor    eax,eax
1000e60b:	mov    edi,DWORD PTR [esp+0x1c]
1000e60f:	add    edi,0xc
1000e612:	mov    ebx,eax
1000e614:	call   0x1000971b
1000e619:	push   0x0
1000e61b:	push   0x1
1000e61d:	lea    ecx,[esp+0xbc]
1000e624:	call   0x100012f9
1000e629:	xor    eax,eax
1000e62b:	mov    ecx,DWORD PTR [esp+0xd8]
1000e632:	mov    DWORD PTR fs:0x0,ecx
1000e639:	pop    ecx
1000e63a:	pop    edi
1000e63b:	pop    esi
1000e63c:	pop    ebx
1000e63d:	mov    ecx,DWORD PTR [esp+0xc0]
1000e644:	xor    ecx,esp
1000e646:	call   0x10041d97
1000e64b:	mov    esp,ebp
1000e64d:	pop    ebp
1000e64e:	ret    0x4
1000e651:	push   0x4c
1000e653:	mov    eax,0x1006318f
1000e658:	call   0x100588ae
1000e65d:	mov    eax,DWORD PTR [ebp+0x8]
1000e660:	mov    DWORD PTR [ebp-0x54],ecx
1000e663:	mov    ecx,DWORD PTR [ebp+0xc]
1000e666:	mov    DWORD PTR [ebp-0x50],ecx
1000e669:	push   eax
1000e66a:	mov    ecx,esi
1000e66c:	call   0x1000ea6f
1000e671:	test   eax,eax
1000e673:	jne    0x1000e7ab
1000e679:	mov    edi,esi
1000e67b:	call   0x1000ea41
1000e680:	test   eax,eax
1000e682:	jne    0x1000e7ab
1000e688:	push   eax
1000e689:	lea    ecx,[ebp-0x2c]
1000e68c:	mov    DWORD PTR [ebp-0x14],0xf
1000e693:	call   0x10001425
1000e698:	and    DWORD PTR [ebp-0x4],0x0
1000e69c:	mov    eax,DWORD PTR [esi]
1000e69e:	mov    ebx,DWORD PTR [eax+0xc]
1000e6a1:	lea    eax,[ebp-0x2c]
1000e6a4:	push   eax
1000e6a5:	call   0x1000e7b3
1000e6aa:	test   eax,eax
1000e6ac:	mov    ecx,DWORD PTR [esi]
1000e6ae:	mov    edi,DWORD PTR [ecx+0xc]
1000e6b1:	mov    DWORD PTR [ebp-0x4c],eax
1000e6b4:	je     0x1000e6ca
1000e6b6:	lea    ecx,[ebp-0x2c]
1000e6b9:	push   0x0
1000e6bb:	push   0x1
1000e6bd:	call   0x100012f9
1000e6c2:	mov    eax,DWORD PTR [ebp-0x4c]
1000e6c5:	jmp    0x1000e7ab
1000e6ca:	push   0x24
1000e6cc:	call   0x1004239e
1000e6d1:	pop    ecx
1000e6d2:	mov    DWORD PTR [ebp-0x4c],eax
1000e6d5:	test   eax,eax
1000e6d7:	mov    BYTE PTR [ebp-0x4],0x1
1000e6db:	je     0x1000e6ed
1000e6dd:	sub    edi,ebx
1000e6df:	push   edi
1000e6e0:	push   ebx
1000e6e1:	lea    ecx,[ebp-0x2c]
1000e6e4:	push   ecx
1000e6e5:	push   eax
1000e6e6:	call   0x1000744a
1000e6eb:	jmp    0x1000e6ef
1000e6ed:	xor    eax,eax
1000e6ef:	mov    edi,DWORD PTR [ebp-0x54]
1000e6f2:	mov    ebx,eax
1000e6f4:	call   0x1000971b
1000e6f9:	or     DWORD PTR [ebp-0x4],0xffffffff
1000e6fd:	push   0x0
1000e6ff:	push   0x1
1000e701:	lea    ecx,[ebp-0x2c]
1000e704:	call   0x100012f9
1000e709:	mov    edi,esi
1000e70b:	call   0x1000ea41
1000e710:	test   eax,eax
1000e712:	jne    0x1000e7ab
1000e718:	push   eax
1000e719:	lea    ecx,[ebp-0x48]
1000e71c:	mov    DWORD PTR [ebp-0x30],0xf
1000e723:	call   0x10001425
1000e728:	mov    DWORD PTR [ebp-0x4],0x2
1000e72f:	mov    eax,DWORD PTR [esi]
1000e731:	mov    ebx,DWORD PTR [eax+0xc]
1000e734:	lea    eax,[ebp-0x48]
1000e737:	push   eax
1000e738:	call   0x1000ee06
1000e73d:	test   eax,eax
1000e73f:	mov    ecx,DWORD PTR [esi]
1000e741:	mov    edi,DWORD PTR [ecx+0xc]
1000e744:	mov    DWORD PTR [ebp-0x4c],eax
1000e747:	je     0x1000e751
1000e749:	lea    ecx,[ebp-0x48]
1000e74c:	jmp    0x1000e6b9
1000e751:	push   0x24
1000e753:	call   0x1004239e
1000e758:	pop    ecx
1000e759:	mov    DWORD PTR [ebp-0x54],eax
1000e75c:	test   eax,eax
1000e75e:	mov    BYTE PTR [ebp-0x4],0x3
1000e762:	je     0x1000e774
1000e764:	sub    edi,ebx
1000e766:	push   edi
1000e767:	push   ebx
1000e768:	lea    ecx,[ebp-0x48]
1000e76b:	push   ecx
1000e76c:	push   eax
1000e76d:	call   0x1000744a
1000e772:	jmp    0x1000e776
1000e774:	xor    eax,eax
1000e776:	mov    edi,DWORD PTR [ebp-0x50]
1000e779:	mov    ebx,eax
1000e77b:	call   0x1000971b
1000e780:	or     DWORD PTR [ebp-0x4],0xffffffff
1000e784:	push   0x0
1000e786:	push   0x1
1000e788:	lea    ecx,[ebp-0x48]
1000e78b:	call   0x100012f9
1000e790:	push   0x0
1000e792:	sub    esp,0x1c
1000e795:	mov    ecx,esp
1000e797:	mov    DWORD PTR [ebp-0x50],esp
1000e79a:	push   0x1006bfe8
1000e79f:	call   0x100011d6
1000e7a4:	mov    ebx,esi
1000e7a6:	call   0x1000e9b2
1000e7ab:	call   0x10058931
1000e7b0:	ret    0x8
1000e7b3:	push   ebp
1000e7b4:	mov    ebp,esp
1000e7b6:	push   ecx
1000e7b7:	push   ecx
1000e7b8:	and    DWORD PTR [ebp-0x4],0x0
1000e7bc:	push   ebx
1000e7bd:	xor    ebx,ebx
1000e7bf:	push   esi
1000e7c0:	inc    ebx
1000e7c1:	mov    esi,DWORD PTR [edi]
1000e7c3:	call   0x1000d8e6
1000e7c8:	test   al,al
1000e7ca:	jne    0x1000e7ff
1000e7cc:	mov    eax,DWORD PTR [edi]
1000e7ce:	call   0x1000da37
1000e7d3:	mov    BYTE PTR [ebp-0x8],al
1000e7d6:	sub    al,0x30
1000e7d8:	cmp    al,0x9
1000e7da:	ja     0x1000e7ff
1000e7dc:	push   DWORD PTR [ebp-0x8]
1000e7df:	mov    esi,DWORD PTR [ebp+0x8]
1000e7e2:	call   0x1000cae0
1000e7e7:	mov    eax,DWORD PTR [edi]
1000e7e9:	call   0x1000da55
1000e7ee:	inc    DWORD PTR [ebp-0x4]
1000e7f1:	cmp    DWORD PTR [ebp-0x4],0x3
1000e7f5:	jne    0x1000e7c1
1000e7f7:	xor    eax,eax
1000e7f9:	pop    esi
1000e7fa:	pop    ebx
1000e7fb:	leave  
1000e7fc:	ret    0x4
1000e7ff:	mov    eax,ebx
1000e801:	jmp    0x1000e7f9
1000e803:	push   ebp
1000e804:	mov    ebp,esp
1000e806:	and    esp,0xfffffff8
1000e809:	push   0xffffffff
1000e80b:	push   0x10063143
1000e810:	mov    eax,fs:0x0
1000e816:	push   eax
1000e817:	sub    esp,0x58
1000e81a:	mov    eax,ds:0x1007d030
1000e81f:	xor    eax,esp
1000e821:	mov    DWORD PTR [esp+0x50],eax
1000e825:	push   ebx
1000e826:	push   esi
1000e827:	push   edi
1000e828:	mov    eax,ds:0x1007d030
1000e82d:	xor    eax,esp
1000e82f:	push   eax
1000e830:	lea    eax,[esp+0x68]
1000e834:	mov    fs:0x0,eax
1000e83a:	mov    eax,DWORD PTR [ebp+0x8]
1000e83d:	mov    edi,ecx
1000e83f:	mov    esi,DWORD PTR [edi]
1000e841:	mov    DWORD PTR [esp+0x14],eax
1000e845:	call   0x1000d8e6
1000e84a:	test   al,al
1000e84c:	je     0x1000e856
1000e84e:	xor    eax,eax
1000e850:	inc    eax
1000e851:	jmp    0x1000e976
1000e856:	mov    eax,DWORD PTR [edi]
1000e858:	call   0x1000da37
1000e85d:	cmp    al,0xd
1000e85f:	je     0x1000e966
1000e865:	xor    esi,esi
1000e867:	push   0xf
1000e869:	pop    ebx
1000e86a:	push   esi
1000e86b:	lea    ecx,[esp+0x48]
1000e86f:	mov    DWORD PTR [esp+0x60],ebx
1000e873:	call   0x10001425
1000e878:	mov    DWORD PTR [esp+0x70],esi
1000e87c:	push   esi
1000e87d:	lea    ecx,[esp+0x2c]
1000e881:	mov    DWORD PTR [esp+0x44],ebx
1000e885:	call   0x10001425
1000e88a:	mov    BYTE PTR [esp+0x70],0x1
1000e88f:	mov    eax,DWORD PTR [edi]
1000e891:	mov    eax,DWORD PTR [eax+0xc]
1000e894:	mov    DWORD PTR [esp+0x20],eax
1000e898:	push   esi
1000e899:	lea    eax,[esp+0x48]
1000e89d:	push   eax
1000e89e:	call   0x1000ecef
1000e8a3:	cmp    eax,esi
1000e8a5:	je     0x1000e8ab
1000e8a7:	mov    ebx,eax
1000e8a9:	jmp    0x1000e8e5
1000e8ab:	push   esi
1000e8ac:	sub    esp,0x1c
1000e8af:	mov    ecx,esp
1000e8b1:	mov    DWORD PTR [esp+0x3c],esp
1000e8b5:	push   0x1006c900
1000e8ba:	call   0x100011d6
1000e8bf:	mov    ebx,edi
1000e8c1:	call   0x1000e9b2
1000e8c6:	cmp    eax,esi
1000e8c8:	jne    0x1000e8a7
1000e8ca:	lea    eax,[esp+0x28]
1000e8ce:	push   eax
1000e8cf:	mov    ecx,edi
1000e8d1:	call   0x1000ec19
1000e8d6:	cmp    eax,esi
1000e8d8:	jne    0x1000e8a7
1000e8da:	mov    eax,DWORD PTR [edi]
1000e8dc:	mov    eax,DWORD PTR [eax+0xc]
1000e8df:	mov    DWORD PTR [esp+0x24],eax
1000e8e3:	xor    ebx,ebx
1000e8e5:	cmp    ebx,esi
1000e8e7:	jne    0x1000e996
1000e8ed:	push   0x8
1000e8ef:	call   0x1004239e
1000e8f4:	cmp    eax,esi
1000e8f6:	pop    ecx
1000e8f7:	je     0x1000e90a
1000e8f9:	mov    edx,DWORD PTR [esp+0x20]
1000e8fd:	mov    ecx,DWORD PTR [esp+0x24]
1000e901:	sub    ecx,edx
1000e903:	mov    DWORD PTR [eax],edx
1000e905:	mov    DWORD PTR [eax+0x4],ecx
1000e908:	jmp    0x1000e90c
1000e90a:	xor    eax,eax
1000e90c:	push   ecx
1000e90d:	mov    ecx,esp
1000e90f:	mov    BYTE PTR [esp+0x74],0x2
1000e914:	mov    DWORD PTR [esp+0x1c],esi
1000e918:	mov    DWORD PTR [ecx],eax
1000e91a:	mov    ecx,DWORD PTR [esp+0x18]
1000e91e:	lea    eax,[esp+0x2c]
1000e922:	mov    DWORD PTR [esp+0x20],esp
1000e926:	push   eax
1000e927:	lea    edx,[esp+0x4c]
1000e92b:	call   0x1000794b
1000e930:	push   DWORD PTR [esp+0x18]
1000e934:	call   0x10041d92
1000e939:	pop    ecx
1000e93a:	push   esi
1000e93b:	push   0x1
1000e93d:	lea    ecx,[esp+0x30]
1000e941:	call   0x100012f9
1000e946:	or     DWORD PTR [esp+0x70],0xffffffff
1000e94b:	push   esi
1000e94c:	push   0x1
1000e94e:	lea    ecx,[esp+0x4c]
1000e952:	call   0x100012f9
1000e957:	mov    eax,DWORD PTR [edi]
1000e959:	call   0x1000da37
1000e95e:	cmp    al,0xd
1000e960:	jne    0x1000e867
1000e966:	mov    eax,DWORD PTR [edi]
1000e968:	push   DWORD PTR [eax+0xc]
1000e96b:	mov    edi,DWORD PTR [esp+0x18]
1000e96f:	call   0x1000755b
1000e974:	xor    eax,eax
1000e976:	mov    ecx,DWORD PTR [esp+0x68]
1000e97a:	mov    DWORD PTR fs:0x0,ecx
1000e981:	pop    ecx
1000e982:	pop    edi
1000e983:	pop    esi
1000e984:	pop    ebx
1000e985:	mov    ecx,DWORD PTR [esp+0x50]
1000e989:	xor    ecx,esp
1000e98b:	call   0x10041d97
1000e990:	mov    esp,ebp
1000e992:	pop    ebp
1000e993:	ret    0x4
1000e996:	push   esi
1000e997:	push   0x1
1000e999:	lea    ecx,[esp+0x30]
1000e99d:	call   0x100012f9
1000e9a2:	push   esi
1000e9a3:	push   0x1
1000e9a5:	lea    ecx,[esp+0x4c]
1000e9a9:	call   0x100012f9
1000e9ae:	mov    eax,ebx
1000e9b0:	jmp    0x1000e976
1000e9b2:	push   0x4
1000e9b4:	mov    eax,0x1006281f
1000e9b9:	call   0x10058845
1000e9be:	xor    edi,edi
1000e9c0:	mov    DWORD PTR [ebp-0x4],edi
1000e9c3:	cmp    DWORD PTR [ebp+0x1c],edi
1000e9c6:	je     0x1000ea2a
1000e9c8:	cmp    BYTE PTR [ebp+0x24],0x0
1000e9cc:	je     0x1000e9f9
1000e9ce:	test   edi,edi
1000e9d0:	jle    0x1000e9f9
1000e9d2:	mov    eax,DWORD PTR [ebx]
1000e9d4:	mov    ecx,DWORD PTR [eax+0x4]
1000e9d7:	test   ecx,ecx
1000e9d9:	je     0x1000e9e2
1000e9db:	mov    eax,DWORD PTR [eax+0x8]
1000e9de:	cmp    eax,DWORD PTR [ecx]
1000e9e0:	jb     0x1000ea04
1000e9e2:	push   0x0
1000e9e4:	push   0x1
1000e9e6:	lea    ecx,[ebp+0x8]
1000e9e9:	call   0x100012f9
1000e9ee:	xor    eax,eax
1000e9f0:	inc    eax
1000e9f1:	call   0x1005891d
1000e9f6:	ret    0x20
1000e9f9:	mov    esi,DWORD PTR [ebx]
1000e9fb:	call   0x1000d8e6
1000ea00:	test   al,al
1000ea02:	jne    0x1000e9e2
1000ea04:	mov    eax,DWORD PTR [ebx]
1000ea06:	call   0x1000da37
1000ea0b:	mov    BYTE PTR [ebp-0xd],al
1000ea0e:	lea    eax,[ebp+0x8]
1000ea11:	call   0x1000473e
1000ea16:	mov    cl,BYTE PTR [ebp-0xd]
1000ea19:	cmp    BYTE PTR [eax],cl
1000ea1b:	jne    0x1000ea2e
1000ea1d:	mov    eax,DWORD PTR [ebx]
1000ea1f:	call   0x1000da55
1000ea24:	inc    edi
1000ea25:	cmp    edi,DWORD PTR [ebp+0x1c]
1000ea28:	jne    0x1000e9c8
1000ea2a:	xor    esi,esi
1000ea2c:	jmp    0x1000ea31
1000ea2e:	xor    esi,esi
1000ea30:	inc    esi
1000ea31:	push   0x0
1000ea33:	push   0x1
1000ea35:	lea    ecx,[ebp+0x8]
1000ea38:	call   0x100012f9
1000ea3d:	mov    eax,esi
1000ea3f:	jmp    0x1000e9f1
1000ea41:	push   ebx
1000ea42:	push   esi
1000ea43:	xor    ebx,ebx
1000ea45:	jmp    0x1000ea5a
1000ea47:	mov    eax,DWORD PTR [edi]
1000ea49:	call   0x1000da37
1000ea4e:	cmp    al,0x20
1000ea50:	jne    0x1000ea65
1000ea52:	mov    eax,DWORD PTR [edi]
1000ea54:	inc    ebx
1000ea55:	call   0x1000da55
1000ea5a:	mov    esi,DWORD PTR [edi]
1000ea5c:	call   0x1000d8e6
1000ea61:	test   al,al
1000ea63:	je     0x1000ea47
1000ea65:	xor    eax,eax
1000ea67:	test   ebx,ebx
1000ea69:	pop    esi
1000ea6a:	setle  al
1000ea6d:	pop    ebx
1000ea6e:	ret    
1000ea6f:	push   0x30
1000ea71:	mov    eax,0x10063106
1000ea76:	call   0x100588ae
1000ea7b:	mov    eax,DWORD PTR [ebp+0x8]
1000ea7e:	push   0x1
1000ea80:	push   0x6aa0761a
1000ea85:	push   0x1006c8d4
1000ea8a:	mov    edi,ecx
1000ea8c:	mov    DWORD PTR [ebp-0x3c],eax
1000ea8f:	call   0x10003d63
1000ea94:	push   0x74f4f0ee
1000ea99:	push   eax
1000ea9a:	call   0x10003d63
1000ea9f:	push   0x1858a866
1000eaa4:	push   eax
1000eaa5:	call   0x10003d63
1000eaaa:	push   0x5da77864
1000eaaf:	push   eax
1000eab0:	call   0x10003d63
1000eab5:	push   eax
1000eab6:	push   0x5
1000eab8:	push   0x1006c0fc
1000eabd:	call   0x10003d75
1000eac2:	add    esp,0x10
1000eac5:	mov    ecx,esp
1000eac7:	mov    DWORD PTR [ebp-0x34],esp
1000eaca:	push   eax
1000eacb:	call   0x100011d6
1000ead0:	mov    ebx,edi
1000ead2:	call   0x1000e9b2
1000ead7:	xor    ebx,ebx
1000ead9:	cmp    eax,ebx
1000eadb:	jne    0x1000eb44
1000eadd:	push   ebx
1000eade:	lea    ecx,[ebp-0x2c]
1000eae1:	mov    DWORD PTR [ebp-0x14],0xf
1000eae8:	call   0x10001425
1000eaed:	mov    DWORD PTR [ebp-0x4],ebx
1000eaf0:	mov    esi,DWORD PTR [edi]
1000eaf2:	mov    eax,DWORD PTR [esi+0xc]
1000eaf5:	mov    DWORD PTR [ebp-0x38],eax
1000eaf8:	mov    DWORD PTR [ebp-0x30],ebx
1000eafb:	jmp    0x1000eb27
1000eafd:	mov    eax,DWORD PTR [edi]
1000eaff:	call   0x1000da37
1000eb04:	mov    BYTE PTR [ebp-0x34],al
1000eb07:	sub    al,0x30
1000eb09:	cmp    al,0x9
1000eb0b:	ja     0x1000eb4c
1000eb0d:	push   DWORD PTR [ebp-0x34]
1000eb10:	xor    ebx,ebx
1000eb12:	inc    ebx
1000eb13:	lea    esi,[ebp-0x2c]
1000eb16:	call   0x1000cae0
1000eb1b:	mov    eax,DWORD PTR [edi]
1000eb1d:	inc    DWORD PTR [ebp-0x30]
1000eb20:	call   0x1000da55
1000eb25:	mov    esi,DWORD PTR [edi]
1000eb27:	call   0x1000d8e6
1000eb2c:	test   al,al
1000eb2e:	je     0x1000eafd
1000eb30:	push   0x0
1000eb32:	push   0x1
1000eb34:	lea    ecx,[ebp-0x2c]
1000eb37:	call   0x100012f9
1000eb3c:	xor    eax,eax
1000eb3e:	cmp    DWORD PTR [ebp-0x30],eax
1000eb41:	setle  al
1000eb44:	call   0x10058931
1000eb49:	ret    0x4
1000eb4c:	cmp    DWORD PTR [ebp-0x30],0x0
1000eb50:	jne    0x1000eb65
1000eb52:	xor    esi,esi
1000eb54:	inc    esi
1000eb55:	push   0x0
1000eb57:	push   0x1
1000eb59:	lea    ecx,[ebp-0x2c]
1000eb5c:	call   0x100012f9
1000eb61:	mov    eax,esi
1000eb63:	jmp    0x1000eb44
1000eb65:	push   0x0
1000eb67:	sub    esp,0x1c
1000eb6a:	mov    ecx,esp
1000eb6c:	mov    DWORD PTR [ebp-0x34],esp
1000eb6f:	mov    esi,0x1006c8fc
1000eb74:	push   esi
1000eb75:	call   0x100011d6
1000eb7a:	mov    ebx,edi
1000eb7c:	call   0x1000e9b2
1000eb81:	test   eax,eax
1000eb83:	je     0x1000eb89
1000eb85:	mov    esi,eax
1000eb87:	jmp    0x1000eb55
1000eb89:	push   esi
1000eb8a:	lea    eax,[ebp-0x2c]
1000eb8d:	push   eax
1000eb8e:	call   0x10005e98
1000eb93:	and    DWORD PTR [ebp-0x30],0x0
1000eb97:	jmp    0x1000ebc1
1000eb99:	mov    eax,DWORD PTR [edi]
1000eb9b:	call   0x1000da37
1000eba0:	mov    BYTE PTR [ebp-0x34],al
1000eba3:	sub    al,0x30
1000eba5:	cmp    al,0x9
1000eba7:	ja     0x1000ebd1
1000eba9:	push   DWORD PTR [ebp-0x34]
1000ebac:	xor    ebx,ebx
1000ebae:	inc    ebx
1000ebaf:	lea    esi,[ebp-0x2c]
1000ebb2:	call   0x1000cae0
1000ebb7:	mov    eax,DWORD PTR [edi]
1000ebb9:	inc    DWORD PTR [ebp-0x30]
1000ebbc:	call   0x1000da55
1000ebc1:	mov    esi,DWORD PTR [edi]
1000ebc3:	call   0x1000d8e6
1000ebc8:	test   al,al
1000ebca:	je     0x1000eb99
1000ebcc:	jmp    0x1000eb30
1000ebd1:	cmp    DWORD PTR [ebp-0x30],0x0
1000ebd5:	je     0x1000eb52
1000ebdb:	mov    eax,DWORD PTR [edi]
1000ebdd:	mov    esi,DWORD PTR [eax+0xc]
1000ebe0:	push   0x24
1000ebe2:	call   0x1004239e
1000ebe7:	pop    ecx
1000ebe8:	mov    DWORD PTR [ebp-0x34],eax
1000ebeb:	test   eax,eax
1000ebed:	mov    BYTE PTR [ebp-0x4],0x1
1000ebf1:	je     0x1000ec06
1000ebf3:	sub    esi,DWORD PTR [ebp-0x38]
1000ebf6:	lea    ecx,[ebp-0x2c]
1000ebf9:	push   esi
1000ebfa:	push   DWORD PTR [ebp-0x38]
1000ebfd:	push   ecx
1000ebfe:	push   eax
1000ebff:	call   0x1000744a
1000ec04:	jmp    0x1000ec08
1000ec06:	xor    eax,eax
1000ec08:	mov    edi,DWORD PTR [ebp-0x3c]
1000ec0b:	mov    ebx,eax
1000ec0d:	call   0x1000971b
1000ec12:	xor    esi,esi
1000ec14:	jmp    0x1000eb55
1000ec19:	push   0x24
1000ec1b:	mov    eax,0x100630d9
1000ec20:	call   0x10058845
1000ec25:	mov    edi,ecx
1000ec27:	and    DWORD PTR [ebp-0x10],0x0
1000ec2b:	jmp    0x1000ec53
1000ec2d:	mov    eax,DWORD PTR [edi]
1000ec2f:	call   0x1000da37
1000ec34:	cmp    al,0xd
1000ec36:	mov    BYTE PTR [ebp-0x14],al
1000ec39:	je     0x1000ec68
1000ec3b:	push   DWORD PTR [ebp-0x14]
1000ec3e:	mov    esi,DWORD PTR [ebp+0x8]
1000ec41:	inc    DWORD PTR [ebp-0x10]
1000ec44:	xor    ebx,ebx
1000ec46:	inc    ebx
1000ec47:	call   0x1000cae0
1000ec4c:	mov    eax,DWORD PTR [edi]
1000ec4e:	call   0x1000da55
1000ec53:	mov    esi,DWORD PTR [edi]
1000ec55:	call   0x1000d8e6
1000ec5a:	test   al,al
1000ec5c:	je     0x1000ec2d
1000ec5e:	xor    eax,eax
1000ec60:	cmp    DWORD PTR [ebp-0x10],eax
1000ec63:	setle  al
1000ec66:	jmp    0x1000ece7
1000ec68:	push   0x0
1000ec6a:	sub    esp,0x1c
1000ec6d:	mov    ecx,esp
1000ec6f:	mov    DWORD PTR [ebp-0x14],esp
1000ec72:	push   0x1006bfe8
1000ec77:	call   0x100011d6
1000ec7c:	mov    ebx,edi
1000ec7e:	call   0x1000e9b2
1000ec83:	test   eax,eax
1000ec85:	jne    0x1000ece7
1000ec87:	mov    ebx,DWORD PTR [ebp+0x8]
1000ec8a:	mov    eax,DWORD PTR [ebx+0x14]
1000ec8d:	xor    edi,edi
1000ec8f:	test   eax,eax
1000ec91:	je     0x1000eca5
1000ec93:	mov    eax,ebx
1000ec95:	call   0x1000473e
1000ec9a:	cmp    BYTE PTR [eax],0x20
1000ec9d:	jne    0x1000eca5
1000ec9f:	inc    edi
1000eca0:	cmp    edi,DWORD PTR [ebx+0x14]
1000eca3:	jne    0x1000ec93
1000eca5:	mov    esi,DWORD PTR [ebx+0x14]
1000eca8:	dec    esi
1000eca9:	test   edi,edi
1000ecab:	jl     0x1000ecbc
1000ecad:	mov    eax,ebx
1000ecaf:	call   0x1000473e
1000ecb4:	cmp    BYTE PTR [eax],0x20
1000ecb7:	jne    0x1000ecbc
1000ecb9:	dec    edi
1000ecba:	jns    0x1000ecad
1000ecbc:	sub    esi,edi
1000ecbe:	inc    esi
1000ecbf:	push   esi
1000ecc0:	push   edi
1000ecc1:	push   ebx
1000ecc2:	lea    eax,[ebp-0x30]
1000ecc5:	call   0x1000c42b
1000ecca:	push   0xffffffff
1000eccc:	xor    esi,esi
1000ecce:	push   esi
1000eccf:	push   eax
1000ecd0:	mov    ecx,ebx
1000ecd2:	mov    DWORD PTR [ebp-0x4],esi
1000ecd5:	call   0x1000124a
1000ecda:	push   esi
1000ecdb:	push   0x1
1000ecdd:	lea    ecx,[ebp-0x30]
1000ece0:	call   0x100012f9
1000ece5:	xor    eax,eax
1000ece7:	call   0x1005891d
1000ecec:	ret    0x4
1000ecef:	push   ebp
1000ecf0:	mov    ebp,esp
1000ecf2:	push   ecx
1000ecf3:	push   ecx
1000ecf4:	push   ebx
1000ecf5:	xor    ebx,ebx
1000ecf7:	push   esi
1000ecf8:	mov    DWORD PTR [ebp-0x4],ebx
1000ecfb:	cmp    DWORD PTR [ebp-0x4],ebx
1000ecfe:	jle    0x1000ed1c
1000ed00:	cmp    BYTE PTR [ebp+0xc],bl
1000ed03:	je     0x1000ed1c
1000ed05:	mov    eax,DWORD PTR [edi]
1000ed07:	mov    ecx,DWORD PTR [eax+0x4]
1000ed0a:	cmp    ecx,ebx
1000ed0c:	je     0x1000ed15
1000ed0e:	mov    eax,DWORD PTR [eax+0x8]
1000ed11:	cmp    eax,DWORD PTR [ecx]
1000ed13:	jb     0x1000ed2b
1000ed15:	xor    eax,eax
1000ed17:	jmp    0x1000edb4
1000ed1c:	mov    esi,DWORD PTR [edi]
1000ed1e:	call   0x1000d8e6
1000ed23:	test   al,al
1000ed25:	jne    0x1000edac
1000ed2b:	mov    eax,DWORD PTR [edi]
1000ed2d:	call   0x1000da37
1000ed32:	cmp    al,0x28
1000ed34:	mov    BYTE PTR [ebp-0x8],al
1000ed37:	je     0x1000edac
1000ed39:	cmp    al,0x29
1000ed3b:	je     0x1000edac
1000ed3d:	cmp    al,0x3c
1000ed3f:	je     0x1000edac
1000ed41:	cmp    al,0x3e
1000ed43:	je     0x1000edac
1000ed45:	cmp    al,0x40
1000ed47:	je     0x1000edac
1000ed49:	cmp    al,0x2c
1000ed4b:	je     0x1000edac
1000ed4d:	cmp    al,0x3b
1000ed4f:	je     0x1000edac
1000ed51:	cmp    al,0x3a
1000ed53:	je     0x1000edac
1000ed55:	cmp    al,0x5c
1000ed57:	je     0x1000edac
1000ed59:	cmp    al,0x22
1000ed5b:	je     0x1000edac
1000ed5d:	cmp    al,0x2f
1000ed5f:	je     0x1000edac
1000ed61:	cmp    al,0x5b
1000ed63:	je     0x1000edac
1000ed65:	cmp    al,0x5d
1000ed67:	je     0x1000edac
1000ed69:	cmp    al,0x3f
1000ed6b:	je     0x1000edac
1000ed6d:	cmp    al,0x3d
1000ed6f:	je     0x1000edac
1000ed71:	cmp    al,0x7b
1000ed73:	je     0x1000edac
1000ed75:	cmp    al,0x7d
1000ed77:	je     0x1000edac
1000ed79:	cmp    al,0x20
1000ed7b:	je     0x1000edac
1000ed7d:	cmp    al,0x9
1000ed7f:	je     0x1000edac
1000ed81:	cmp    al,bl
1000ed83:	jl     0x1000ed89
1000ed85:	cmp    al,0x1f
1000ed87:	jle    0x1000edac
1000ed89:	cmp    al,0x7f
1000ed8b:	je     0x1000edac
1000ed8d:	push   DWORD PTR [ebp-0x8]
1000ed90:	mov    esi,DWORD PTR [ebp+0x8]
1000ed93:	inc    DWORD PTR [ebp-0x4]
1000ed96:	xor    ebx,ebx
1000ed98:	inc    ebx
1000ed99:	call   0x1000cae0
1000ed9e:	mov    eax,DWORD PTR [edi]
1000eda0:	call   0x1000da55
1000eda5:	xor    ebx,ebx
1000eda7:	jmp    0x1000ecfb
1000edac:	xor    eax,eax
1000edae:	cmp    DWORD PTR [ebp-0x4],ebx
1000edb1:	setle  al
1000edb4:	pop    esi
1000edb5:	pop    ebx
1000edb6:	leave  
1000edb7:	ret    0x8
1000edba:	push   ebp
1000edbb:	mov    ebp,esp
1000edbd:	push   ecx
1000edbe:	push   ecx
1000edbf:	and    DWORD PTR [ebp-0x4],0x0
1000edc3:	push   ebx
1000edc4:	push   esi
1000edc5:	jmp    0x1000eded
1000edc7:	mov    eax,DWORD PTR [edi]
1000edc9:	call   0x1000da37
1000edce:	cmp    al,0x20
1000edd0:	mov    BYTE PTR [ebp-0x8],al
1000edd3:	je     0x1000edf8
1000edd5:	push   DWORD PTR [ebp-0x8]
1000edd8:	mov    esi,DWORD PTR [ebp+0x8]
1000eddb:	inc    DWORD PTR [ebp-0x4]
1000edde:	xor    ebx,ebx
1000ede0:	inc    ebx
1000ede1:	call   0x1000cae0
1000ede6:	mov    eax,DWORD PTR [edi]
1000ede8:	call   0x1000da55
1000eded:	mov    esi,DWORD PTR [edi]
1000edef:	call   0x1000d8e6
1000edf4:	test   al,al
1000edf6:	je     0x1000edc7
1000edf8:	xor    eax,eax
1000edfa:	cmp    DWORD PTR [ebp-0x4],eax
1000edfd:	pop    esi
1000edfe:	setle  al
1000ee01:	pop    ebx
1000ee02:	leave  
1000ee03:	ret    0x4
1000ee06:	push   ebp
1000ee07:	mov    ebp,esp
1000ee09:	push   ecx
1000ee0a:	push   ebx
1000ee0b:	push   esi
1000ee0c:	jmp    0x1000ee35
1000ee0e:	mov    eax,DWORD PTR [edi]
1000ee10:	call   0x1000da37
1000ee15:	cmp    al,0xd
1000ee17:	mov    BYTE PTR [ebp-0x4],al
1000ee1a:	je     0x1000ee40
1000ee1c:	cmp    al,0xa
1000ee1e:	je     0x1000ee40
1000ee20:	push   DWORD PTR [ebp-0x4]
1000ee23:	mov    esi,DWORD PTR [ebp+0x8]
1000ee26:	xor    ebx,ebx
1000ee28:	inc    ebx
1000ee29:	call   0x1000cae0
1000ee2e:	mov    eax,DWORD PTR [edi]
1000ee30:	call   0x1000da55
1000ee35:	mov    esi,DWORD PTR [edi]
1000ee37:	call   0x1000d8e6
1000ee3c:	test   al,al
1000ee3e:	je     0x1000ee0e
1000ee40:	pop    esi
1000ee41:	xor    eax,eax
1000ee43:	pop    ebx
1000ee44:	leave  
1000ee45:	ret    0x4
1000ee48:	push   0xc
1000ee4a:	mov    eax,0x100627fc
1000ee4f:	call   0x10058845
1000ee54:	xor    eax,eax
1000ee56:	mov    DWORD PTR [ebp-0x10],eax
1000ee59:	mov    DWORD PTR [ebp-0x18],eax
1000ee5c:	mov    ebx,0xf4240
1000ee61:	cmp    DWORD PTR [ebp+0x10],ebx
1000ee64:	mov    DWORD PTR [ebp-0x4],eax
1000ee67:	mov    edi,0x10000
1000ee6c:	jbe    0x1000ee73
1000ee6e:	mov    edi,0x100000
1000ee73:	push   edi
1000ee74:	call   0x10042609
1000ee79:	mov    esi,eax
1000ee7b:	test   esi,esi
1000ee7d:	pop    ecx
1000ee7e:	mov    DWORD PTR [ebp-0x14],esi
1000ee81:	je     0x1000ee8b
1000ee83:	push   0x0
1000ee85:	call   0x10041d92
1000ee8a:	pop    ecx
1000ee8b:	cmp    DWORD PTR [ebp+0x10],0x0
1000ee8f:	mov    DWORD PTR [ebp-0x18],esi
1000ee92:	je     0x1000eedb
1000ee94:	mov    eax,DWORD PTR [ebp+0x8]
1000ee97:	mov    esi,DWORD PTR [eax]
1000ee99:	call   0x1000d8e6
1000ee9e:	test   al,al
1000eea0:	jne    0x1000eedf
1000eea2:	mov    eax,DWORD PTR [ebp-0x10]
1000eea5:	mov    esi,DWORD PTR [ebp+0x10]
1000eea8:	lea    ecx,[edi+eax*1]
1000eeab:	cmp    ecx,esi
1000eead:	jbe    0x1000eeb3
1000eeaf:	mov    edi,esi
1000eeb1:	sub    edi,eax
1000eeb3:	mov    eax,DWORD PTR [ebp+0x8]
1000eeb6:	mov    eax,DWORD PTR [eax]
1000eeb8:	push   edi
1000eeb9:	push   DWORD PTR [ebp-0x14]
1000eebc:	call   0x1000da8e
1000eec1:	mov    edi,eax
1000eec3:	add    DWORD PTR [ebp-0x10],edi
1000eec6:	cmp    esi,ebx
1000eec8:	ja     0x1000eed6
1000eeca:	mov    eax,DWORD PTR [ebp+0xc]
1000eecd:	push   edi
1000eece:	push   DWORD PTR [ebp-0x14]
1000eed1:	call   0x10005f16
1000eed6:	cmp    DWORD PTR [ebp-0x10],esi
1000eed9:	jne    0x1000ee94
1000eedb:	xor    esi,esi
1000eedd:	jmp    0x1000eee2
1000eedf:	xor    esi,esi
1000eee1:	inc    esi
1000eee2:	push   DWORD PTR [ebp-0x14]
1000eee5:	call   0x10041d92
1000eeea:	pop    ecx
1000eeeb:	mov    eax,esi
1000eeed:	call   0x1005891d
1000eef2:	ret    0xc
1000eef5:	push   ebp
1000eef6:	mov    ebp,esp
1000eef8:	mov    eax,0x10004
1000eefd:	call   0x10047700
1000ef02:	mov    eax,ds:0x1007d030
1000ef07:	xor    eax,ebp
1000ef09:	mov    DWORD PTR [ebp-0x4],eax
1000ef0c:	push   esi
1000ef0d:	jmp    0x1000ef3a
1000ef0f:	push   0x10000
1000ef14:	lea    eax,[ebp-0x10004]
1000ef1a:	push   eax
1000ef1b:	mov    eax,DWORD PTR [edi]
1000ef1d:	call   0x1000da8e
1000ef22:	push   eax
1000ef23:	lea    eax,[ebp-0x10004]
1000ef29:	push   eax
1000ef2a:	mov    eax,ebx
1000ef2c:	call   0x10005f16
1000ef31:	cmp    DWORD PTR [ebx+0x14],0xf4240
1000ef38:	jae    0x1000ef49
1000ef3a:	mov    esi,DWORD PTR [edi]
1000ef3c:	call   0x1000d8e6
1000ef41:	test   al,al
1000ef43:	je     0x1000ef0f
1000ef45:	xor    eax,eax
1000ef47:	jmp    0x1000ef4c
1000ef49:	xor    eax,eax
1000ef4b:	inc    eax
1000ef4c:	mov    ecx,DWORD PTR [ebp-0x4]
1000ef4f:	xor    ecx,ebp
1000ef51:	pop    esi
1000ef52:	call   0x10041d97
1000ef57:	leave  
1000ef58:	ret    
1000ef59:	push   0x2c
1000ef5b:	mov    eax,0x100630ac
1000ef60:	call   0x100588ae
1000ef65:	mov    eax,DWORD PTR [ebp+0x8]
1000ef68:	mov    ebx,ecx
1000ef6a:	mov    DWORD PTR [ebp-0x34],eax
1000ef6d:	lea    eax,[ebp-0x30]
1000ef70:	mov    edi,ebx
1000ef72:	call   0x1000f042
1000ef77:	xor    edi,edi
1000ef79:	cmp    eax,edi
1000ef7b:	jne    0x1000f03a
1000ef81:	jmp    0x1000ef85
1000ef83:	xor    edi,edi
1000ef85:	cmp    DWORD PTR [ebp-0x30],edi
1000ef88:	push   edi
1000ef89:	je     0x1000f00a
1000ef8b:	lea    ecx,[ebp-0x2c]
1000ef8e:	mov    DWORD PTR [ebp-0x14],0xf
1000ef95:	call   0x10001425
1000ef9a:	mov    DWORD PTR [ebp-0x4],edi
1000ef9d:	push   DWORD PTR [ebp-0x30]
1000efa0:	lea    eax,[ebp-0x2c]
1000efa3:	push   eax
1000efa4:	push   ebx
1000efa5:	call   0x1000ee48
1000efaa:	mov    esi,eax
1000efac:	cmp    esi,edi
1000efae:	push   edi
1000efaf:	jne    0x1000f024
1000efb1:	sub    esp,0x1c
1000efb4:	mov    ecx,esp
1000efb6:	mov    DWORD PTR [ebp-0x38],esp
1000efb9:	push   0x1006bfe8
1000efbe:	call   0x100011d6
1000efc3:	call   0x1000e9b2
1000efc8:	mov    esi,eax
1000efca:	cmp    esi,edi
1000efcc:	jne    0x1000f023
1000efce:	mov    esi,DWORD PTR [ebp-0x34]
1000efd1:	push   0xffffffff
1000efd3:	push   edi
1000efd4:	lea    eax,[ebp-0x2c]
1000efd7:	call   0x10005fb0
1000efdc:	mov    eax,esi
1000efde:	cmp    DWORD PTR [eax+0x14],0xf4240
1000efe5:	push   edi
1000efe6:	lea    ecx,[ebp-0x2c]
1000efe9:	push   0x1
1000efeb:	jae    0x1000f032
1000efed:	or     DWORD PTR [ebp-0x4],0xffffffff
1000eff1:	call   0x100012f9
1000eff6:	lea    eax,[ebp-0x30]
1000eff9:	mov    edi,ebx
1000effb:	call   0x1000f042
1000f000:	test   eax,eax
1000f002:	je     0x1000ef83
1000f008:	jmp    0x1000f03a
1000f00a:	sub    esp,0x1c
1000f00d:	mov    ecx,esp
1000f00f:	mov    DWORD PTR [ebp-0x38],esp
1000f012:	push   0x1006bfe8
1000f017:	call   0x100011d6
1000f01c:	call   0x1000e9b2
1000f021:	jmp    0x1000f03a
1000f023:	push   edi
1000f024:	push   0x1
1000f026:	lea    ecx,[ebp-0x2c]
1000f029:	call   0x100012f9
1000f02e:	mov    eax,esi
1000f030:	jmp    0x1000f03a
1000f032:	call   0x100012f9
1000f037:	xor    eax,eax
1000f039:	inc    eax
1000f03a:	call   0x10058931
1000f03f:	ret    0x4
1000f042:	push   ebp
1000f043:	mov    ebp,esp
1000f045:	push   ecx
1000f046:	push   ecx
1000f047:	and    DWORD PTR [ebp-0x8],0x0
1000f04b:	push   ebx
1000f04c:	mov    ebx,eax
1000f04e:	and    DWORD PTR [ebx],0x0
1000f051:	push   esi
1000f052:	jmp    0x1000f0a1
1000f054:	mov    eax,DWORD PTR [edi]
1000f056:	call   0x1000da37
1000f05b:	movsx  esi,al
1000f05e:	push   esi
1000f05f:	mov    BYTE PTR [ebp-0x1],al
1000f062:	call   0x10044b21
1000f067:	pop    ecx
1000f068:	mov    cl,BYTE PTR [ebp-0x1]
1000f06b:	sub    cl,0x30
1000f06e:	cmp    cl,0x9
1000f071:	mov    BYTE PTR [ebp-0x1],cl
1000f074:	jbe    0x1000f07e
1000f076:	cmp    al,0x61
1000f078:	jl     0x1000f0b1
1000f07a:	cmp    al,0x66
1000f07c:	jg     0x1000f0b1
1000f07e:	mov    eax,DWORD PTR [edi]
1000f080:	call   0x1000da55
1000f085:	mov    eax,DWORD PTR [ebx]
1000f087:	shl    eax,0x4
1000f08a:	cmp    BYTE PTR [ebp-0x1],0x9
1000f08e:	mov    DWORD PTR [ebx],eax
1000f090:	ja     0x1000f098
1000f092:	lea    eax,[eax+esi*1-0x30]
1000f096:	jmp    0x1000f09c
1000f098:	lea    eax,[eax+esi*1-0x57]
1000f09c:	inc    DWORD PTR [ebp-0x8]
1000f09f:	mov    DWORD PTR [ebx],eax
1000f0a1:	mov    esi,DWORD PTR [edi]
1000f0a3:	call   0x1000d8e6
1000f0a8:	test   al,al
1000f0aa:	je     0x1000f054
1000f0ac:	xor    eax,eax
1000f0ae:	inc    eax
1000f0af:	jmp    0x1000f0f1
1000f0b1:	cmp    DWORD PTR [ebp-0x8],0x0
1000f0b5:	jne    0x1000f0cb
1000f0b7:	jmp    0x1000f0ac
1000f0b9:	mov    eax,DWORD PTR [edi]
1000f0bb:	call   0x1000da37
1000f0c0:	cmp    al,0xd
1000f0c2:	je     0x1000f0d6
1000f0c4:	mov    eax,DWORD PTR [edi]
1000f0c6:	call   0x1000da55
1000f0cb:	mov    esi,DWORD PTR [edi]
1000f0cd:	call   0x1000d8e6
1000f0d2:	test   al,al
1000f0d4:	je     0x1000f0b9
1000f0d6:	push   0x0
1000f0d8:	sub    esp,0x1c
1000f0db:	mov    ecx,esp
1000f0dd:	mov    DWORD PTR [ebp-0x8],esp
1000f0e0:	push   0x1006bfe8
1000f0e5:	call   0x100011d6
1000f0ea:	mov    ebx,edi
1000f0ec:	call   0x1000e9b2
1000f0f1:	pop    esi
1000f0f2:	pop    ebx
1000f0f3:	leave  
1000f0f4:	ret    
1000f0f5:	push   ebp
1000f0f6:	mov    ebp,esp
1000f0f8:	push   ecx
1000f0f9:	push   ecx
1000f0fa:	push   DWORD PTR [ebp+0xc]
1000f0fd:	and    DWORD PTR [ebp-0x4],0x0
1000f101:	push   DWORD PTR [ebp+0x8]
1000f104:	call   0x1000f110
1000f109:	mov    eax,DWORD PTR [ebp+0x8]
1000f10c:	pop    ecx
1000f10d:	pop    ecx
1000f10e:	leave  
1000f10f:	ret    
1000f110:	push   0x34
1000f112:	mov    eax,0x100618d0
1000f117:	call   0x10058845
1000f11c:	mov    edi,DWORD PTR [ebp+0x8]
1000f11f:	xor    esi,esi
1000f121:	mov    DWORD PTR [ebp-0x10],esi
1000f124:	mov    DWORD PTR [edi+0x4],esi
1000f127:	mov    DWORD PTR [edi+0x8],esi
1000f12a:	mov    DWORD PTR [edi+0xc],esi
1000f12d:	mov    DWORD PTR [ebp-0x4],esi
1000f130:	push   DWORD PTR ds:0x10080418
1000f136:	mov    DWORD PTR [ebp-0x10],0x1
1000f13d:	call   0x10041f10
1000f142:	pop    ecx
1000f143:	mov    DWORD PTR [ebp-0x14],eax
1000f146:	push   esi
1000f147:	push   DWORD PTR ds:0x10080418
1000f14d:	push   DWORD PTR [ebp+0xc]
1000f150:	call   0x1000c40c
1000f155:	mov    ebx,eax
1000f157:	cmp    ebx,0xffffffff
1000f15a:	jne    0x1000f162
1000f15c:	mov    eax,DWORD PTR [ebp+0xc]
1000f15f:	mov    ebx,DWORD PTR [eax+0x14]
1000f162:	cmp    ebx,esi
1000f164:	jb     0x1000f1b4
1000f166:	mov    eax,ebx
1000f168:	sub    eax,esi
1000f16a:	push   eax
1000f16b:	push   esi
1000f16c:	push   DWORD PTR [ebp+0xc]
1000f16f:	lea    eax,[ebp-0x40]
1000f172:	call   0x1000c42b
1000f177:	push   eax
1000f178:	lea    eax,[ebp-0x24]
1000f17b:	push   eax
1000f17c:	mov    DWORD PTR [ebp-0x4],0x1
1000f183:	call   0x1000f1c4
1000f188:	pop    ecx
1000f189:	pop    ecx
1000f18a:	push   eax
1000f18b:	mov    esi,edi
1000f18d:	mov    BYTE PTR [ebp-0x4],0x2
1000f191:	call   0x1000f27f
1000f196:	lea    esi,[ebp-0x24]
1000f199:	call   0x1000d35f
1000f19e:	push   0x0
1000f1a0:	push   0x1
1000f1a2:	lea    ecx,[ebp-0x40]
1000f1a5:	mov    BYTE PTR [ebp-0x4],0x0
1000f1a9:	call   0x100012f9
1000f1ae:	mov    eax,DWORD PTR [ebp-0x14]
1000f1b1:	lea    esi,[ebx+eax*1]
1000f1b4:	mov    eax,DWORD PTR [ebp+0xc]
1000f1b7:	cmp    esi,DWORD PTR [eax+0x14]
1000f1ba:	jb     0x1000f146
1000f1bc:	mov    eax,edi
1000f1be:	call   0x1005891d
1000f1c3:	ret    
1000f1c4:	push   0x44
1000f1c6:	mov    eax,0x1005fbd4
1000f1cb:	call   0x10058845
1000f1d0:	mov    esi,DWORD PTR [ebp+0x8]
1000f1d3:	xor    ebx,ebx
1000f1d5:	mov    DWORD PTR [ebp-0x14],ebx
1000f1d8:	mov    DWORD PTR [esi+0x4],ebx
1000f1db:	mov    DWORD PTR [esi+0x8],ebx
1000f1de:	mov    DWORD PTR [esi+0xc],ebx
1000f1e1:	xor    edi,edi
1000f1e3:	inc    edi
1000f1e4:	mov    DWORD PTR [ebp-0x4],ebx
1000f1e7:	push   0x1006c900
1000f1ec:	mov    DWORD PTR [ebp-0x14],edi
1000f1ef:	call   0x10041f10
1000f1f4:	pop    ecx
1000f1f5:	mov    DWORD PTR [ebp-0x18],eax
1000f1f8:	mov    DWORD PTR [ebp-0x10],ebx
1000f1fb:	push   DWORD PTR [ebp-0x10]
1000f1fe:	push   0x1006c900
1000f203:	push   DWORD PTR [ebp+0xc]
1000f206:	call   0x1000c40c
1000f20b:	mov    ebx,eax
1000f20d:	cmp    ebx,0xffffffff
1000f210:	jne    0x1000f218
1000f212:	mov    eax,DWORD PTR [ebp+0xc]
1000f215:	mov    ebx,DWORD PTR [eax+0x14]
1000f218:	cmp    ebx,DWORD PTR [ebp-0x10]
1000f21b:	jb     0x1000f26c
1000f21d:	mov    eax,ebx
1000f21f:	sub    eax,DWORD PTR [ebp-0x10]
1000f222:	push   eax
1000f223:	push   DWORD PTR [ebp-0x10]
1000f226:	lea    eax,[ebp-0x50]
1000f229:	push   DWORD PTR [ebp+0xc]
1000f22c:	call   0x1000c42b
1000f231:	lea    ecx,[ebp-0x34]
1000f234:	push   ecx
1000f235:	mov    ecx,eax
1000f237:	mov    DWORD PTR [ebp-0x4],edi
1000f23a:	call   0x1000f2d9
1000f23f:	pop    ecx
1000f240:	push   eax
1000f241:	mov    BYTE PTR [ebp-0x4],0x2
1000f245:	call   0x1000f4a8
1000f24a:	push   0x0
1000f24c:	push   edi
1000f24d:	lea    ecx,[ebp-0x34]
1000f250:	call   0x100012f9
1000f255:	push   0x0
1000f257:	push   edi
1000f258:	lea    ecx,[ebp-0x50]
1000f25b:	mov    BYTE PTR [ebp-0x4],0x0
1000f25f:	call   0x100012f9
1000f264:	mov    eax,DWORD PTR [ebp-0x18]
1000f267:	add    ebx,eax
1000f269:	mov    DWORD PTR [ebp-0x10],ebx
1000f26c:	mov    eax,DWORD PTR [ebp-0x10]
1000f26f:	mov    ecx,DWORD PTR [ebp+0xc]
1000f272:	cmp    eax,DWORD PTR [ecx+0x14]
1000f275:	jb     0x1000f1fb
1000f277:	mov    eax,esi
1000f279:	call   0x1005891d
1000f27e:	ret    
1000f27f:	push   ebp
1000f280:	mov    ebp,esp
1000f282:	sub    esp,0xc
1000f285:	push   ebx
1000f286:	mov    ebx,DWORD PTR [esi+0x4]
1000f289:	test   ebx,ebx
1000f28b:	push   edi
1000f28c:	jne    0x1000f292
1000f28e:	xor    edi,edi
1000f290:	jmp    0x1000f29a
1000f292:	mov    edi,DWORD PTR [esi+0xc]
1000f295:	sub    edi,ebx
1000f297:	sar    edi,0x4
1000f29a:	mov    eax,esi
1000f29c:	call   0x1000c496
1000f2a1:	cmp    eax,edi
1000f2a3:	jae    0x1000f2b7
1000f2a5:	push   DWORD PTR [ebp+0x8]
1000f2a8:	push   0x1
1000f2aa:	push   DWORD PTR [esi+0x8]
1000f2ad:	call   0x1000f3e4
1000f2b2:	mov    DWORD PTR [esi+0x8],eax
1000f2b5:	jmp    0x1000f2d3
1000f2b7:	mov    edi,DWORD PTR [esi+0x8]
1000f2ba:	cmp    ebx,edi
1000f2bc:	jbe    0x1000f2c3
1000f2be:	call   0x100422b0
1000f2c3:	push   edi
1000f2c4:	push   esi
1000f2c5:	push   DWORD PTR [ebp+0x8]
1000f2c8:	lea    eax,[ebp-0xc]
1000f2cb:	push   eax
1000f2cc:	mov    eax,esi
1000f2ce:	call   0x1000f33d
1000f2d3:	pop    edi
1000f2d4:	pop    ebx
1000f2d5:	leave  
1000f2d6:	ret    0x4
1000f2d9:	push   0x20
1000f2db:	mov    eax,0x1005ffa8
1000f2e0:	call   0x10058845
1000f2e5:	mov    ebx,ecx
1000f2e7:	and    DWORD PTR [ebp-0x10],0x0
1000f2eb:	call   0x1000f507
1000f2f0:	mov    esi,eax
1000f2f2:	call   0x1000f56f
1000f2f7:	cmp    eax,0xffffffff
1000f2fa:	jne    0x1000f302
1000f2fc:	mov    eax,DWORD PTR [ebx+0x14]
1000f2ff:	dec    eax
1000f300:	jmp    0x1000f305
1000f302:	sub    eax,esi
1000f304:	inc    eax
1000f305:	push   eax
1000f306:	mov    eax,esi
1000f308:	inc    eax
1000f309:	neg    eax
1000f30b:	sbb    eax,eax
1000f30d:	and    eax,esi
1000f30f:	push   eax
1000f310:	push   ebx
1000f311:	lea    eax,[ebp-0x2c]
1000f314:	call   0x1000c42b
1000f319:	and    DWORD PTR [ebp-0x4],0x0
1000f31d:	push   eax
1000f31e:	push   DWORD PTR [ebp+0x8]
1000f321:	call   0x1000f8ca
1000f326:	pop    ecx
1000f327:	pop    ecx
1000f328:	push   0x0
1000f32a:	push   0x1
1000f32c:	lea    ecx,[ebp-0x2c]
1000f32f:	call   0x100012f9
1000f334:	mov    eax,DWORD PTR [ebp+0x8]
1000f337:	call   0x1005891d
1000f33c:	ret    
1000f33d:	push   ebp
1000f33e:	mov    ebp,esp
1000f340:	push   ecx
1000f341:	push   ebx
1000f342:	push   esi
1000f343:	push   edi
1000f344:	mov    esi,eax
1000f346:	call   0x1000c496
1000f34b:	test   eax,eax
1000f34d:	jne    0x1000f353
1000f34f:	xor    edi,edi
1000f351:	jmp    0x1000f378
1000f353:	mov    ebx,DWORD PTR [esi+0x4]
1000f356:	cmp    ebx,DWORD PTR [esi+0x8]
1000f359:	jbe    0x1000f360
1000f35b:	call   0x100422b0
1000f360:	cmp    DWORD PTR [ebp+0x10],0x0
1000f364:	je     0x1000f36b
1000f366:	cmp    DWORD PTR [ebp+0x10],esi
1000f369:	je     0x1000f370
1000f36b:	call   0x100422b0
1000f370:	mov    edi,DWORD PTR [ebp+0x14]
1000f373:	sub    edi,ebx
1000f375:	sar    edi,0x4
1000f378:	push   DWORD PTR [ebp+0x14]
1000f37b:	mov    ecx,DWORD PTR [ebp+0xc]
1000f37e:	push   DWORD PTR [ebp+0x10]
1000f381:	push   esi
1000f382:	call   0x1000f5da
1000f387:	mov    ebx,DWORD PTR [esi+0x4]
1000f38a:	cmp    ebx,DWORD PTR [esi+0x8]
1000f38d:	jbe    0x1000f394
1000f38f:	call   0x100422b0
1000f394:	shl    edi,0x4
1000f397:	add    edi,ebx
1000f399:	cmp    edi,DWORD PTR [esi+0x8]
1000f39c:	mov    DWORD PTR [ebp+0x14],ebx
1000f39f:	ja     0x1000f3a6
1000f3a1:	cmp    edi,DWORD PTR [esi+0x4]
1000f3a4:	jae    0x1000f3ab
1000f3a6:	call   0x100422b0
1000f3ab:	mov    eax,DWORD PTR [ebp+0x8]
1000f3ae:	mov    DWORD PTR [eax+0x4],edi
1000f3b1:	pop    edi
1000f3b2:	mov    DWORD PTR [eax],esi
1000f3b4:	pop    esi
1000f3b5:	pop    ebx
1000f3b6:	pop    ecx
1000f3b7:	pop    ebp
1000f3b8:	ret    0x10
1000f3bb:	push   esi
1000f3bc:	mov    esi,eax
1000f3be:	cmp    esi,0xfffffff
1000f3c4:	jbe    0x1000f3cb
1000f3c6:	jmp    0x1000d195
1000f3cb:	mov    ecx,esi
1000f3cd:	call   0x1000f7a3
1000f3d2:	shl    esi,0x4
1000f3d5:	add    esi,eax
1000f3d7:	mov    DWORD PTR [edi+0x4],eax
1000f3da:	mov    DWORD PTR [edi+0x8],eax
1000f3dd:	mov    DWORD PTR [edi+0xc],esi
1000f3e0:	mov    al,0x1
1000f3e2:	pop    esi
1000f3e3:	ret    
1000f3e4:	push   ebp
1000f3e5:	mov    ebp,esp
1000f3e7:	push   ecx
1000f3e8:	push   ecx
1000f3e9:	push   edi
1000f3ea:	xor    eax,eax
1000f3ec:	lea    edi,[ebp-0x4]
1000f3ef:	stos   BYTE PTR es:[edi],al
1000f3f0:	push   DWORD PTR [ebp-0x4]
1000f3f3:	push   DWORD PTR [ebp+0xc]
1000f3f6:	push   DWORD PTR [ebp+0x10]
1000f3f9:	push   DWORD PTR [ebp+0xc]
1000f3fc:	push   DWORD PTR [ebp+0x8]
1000f3ff:	call   0x1000fbc2
1000f404:	mov    eax,DWORD PTR [ebp+0xc]
1000f407:	add    esp,0x14
1000f40a:	shl    eax,0x4
1000f40d:	add    eax,DWORD PTR [ebp+0x8]
1000f410:	pop    edi
1000f411:	leave  
1000f412:	ret    0xc
1000f415:	push   0x10
1000f417:	mov    eax,0x1005f30e
1000f41c:	call   0x10058878
1000f421:	mov    ebx,ecx
1000f423:	mov    esi,DWORD PTR [ebp+0x8]
1000f426:	mov    eax,ebx
1000f428:	call   0x1000c4c8
1000f42d:	xor    ecx,ecx
1000f42f:	cmp    eax,ecx
1000f431:	mov    DWORD PTR [esi+0x4],ecx
1000f434:	mov    DWORD PTR [esi+0x8],ecx
1000f437:	mov    DWORD PTR [esi+0xc],ecx
1000f43a:	je     0x1000f48c
1000f43c:	mov    edi,esi
1000f43e:	call   0x1000f871
1000f443:	test   al,al
1000f445:	je     0x1000f48c
1000f447:	and    DWORD PTR [ebp-0x4],0x0
1000f44b:	mov    eax,DWORD PTR [ebx+0x8]
1000f44e:	cmp    DWORD PTR [ebx+0x4],eax
1000f451:	mov    DWORD PTR [ebp-0x18],eax
1000f454:	jbe    0x1000f45b
1000f456:	call   0x100422b0
1000f45b:	mov    eax,DWORD PTR [ebx+0x4]
1000f45e:	cmp    eax,DWORD PTR [ebx+0x8]
1000f461:	mov    DWORD PTR [ebp-0x1c],eax
1000f464:	jbe    0x1000f46b
1000f466:	call   0x100422b0
1000f46b:	mov    ecx,DWORD PTR [esi+0x4]
1000f46e:	xor    eax,eax
1000f470:	lea    edi,[ebp-0x14]
1000f473:	stos   BYTE PTR es:[edi],al
1000f474:	push   DWORD PTR [ebp-0x14]
1000f477:	push   DWORD PTR [ebp+0x8]
1000f47a:	push   ecx
1000f47b:	push   DWORD PTR [ebp-0x18]
1000f47e:	mov    ecx,DWORD PTR [ebp-0x1c]
1000f481:	call   0x1000fddf
1000f486:	add    esp,0x10
1000f489:	mov    DWORD PTR [esi+0x8],eax
1000f48c:	mov    eax,esi
1000f48e:	call   0x1005891d
1000f493:	ret    0x4
1000f496:	mov    esi,DWORD PTR [ebp+0x8]
1000f499:	call   0x1000d35f
1000f49e:	push   0x0
1000f4a0:	push   0x0
1000f4a2:	call   0x10046704
1000f4a7:	int3   
1000f4a8:	push   ebp
1000f4a9:	mov    ebp,esp
1000f4ab:	sub    esp,0xc
1000f4ae:	push   ebx
1000f4af:	push   edi
1000f4b0:	mov    edi,DWORD PTR [esi+0x4]
1000f4b3:	test   edi,edi
1000f4b5:	jne    0x1000f4bb
1000f4b7:	xor    ebx,ebx
1000f4b9:	jmp    0x1000f4c8
1000f4bb:	mov    eax,DWORD PTR [esi+0xc]
1000f4be:	sub    eax,edi
1000f4c0:	push   0x1c
1000f4c2:	cdq    
1000f4c3:	pop    ecx
1000f4c4:	idiv   ecx
1000f4c6:	mov    ebx,eax
1000f4c8:	mov    eax,esi
1000f4ca:	call   0x1000c4c8
1000f4cf:	cmp    eax,ebx
1000f4d1:	jae    0x1000f4e5
1000f4d3:	push   DWORD PTR [ebp+0x8]
1000f4d6:	push   0x1
1000f4d8:	push   DWORD PTR [esi+0x8]
1000f4db:	call   0x1000f89a
1000f4e0:	mov    DWORD PTR [esi+0x8],eax
1000f4e3:	jmp    0x1000f501
1000f4e5:	mov    ebx,DWORD PTR [esi+0x8]
1000f4e8:	cmp    edi,ebx
1000f4ea:	jbe    0x1000f4f1
1000f4ec:	call   0x100422b0
1000f4f1:	push   ebx
1000f4f2:	push   esi
1000f4f3:	push   DWORD PTR [ebp+0x8]
1000f4f6:	lea    eax,[ebp-0xc]
1000f4f9:	push   eax
1000f4fa:	mov    eax,esi
1000f4fc:	call   0x1000f7ed
1000f501:	pop    edi
1000f502:	pop    ebx
1000f503:	leave  
1000f504:	ret    0x4
1000f507:	push   ebp
1000f508:	mov    ebp,esp
1000f50a:	push   ecx
1000f50b:	push   ecx
1000f50c:	mov    ecx,DWORD PTR [ebx+0x14]
1000f50f:	test   ecx,ecx
1000f511:	push   esi
1000f512:	push   edi
1000f513:	mov    BYTE PTR [ebp-0x4],0x20
1000f517:	jbe    0x1000f55a
1000f519:	mov    edx,DWORD PTR [ebx+0x18]
1000f51c:	cmp    edx,0x10
1000f51f:	lea    esi,[ebx+0x4]
1000f522:	jb     0x1000f528
1000f524:	mov    eax,DWORD PTR [esi]
1000f526:	jmp    0x1000f52a
1000f528:	mov    eax,esi
1000f52a:	add    eax,ecx
1000f52c:	cmp    edx,0x10
1000f52f:	mov    DWORD PTR [ebp-0x8],eax
1000f532:	jb     0x1000f538
1000f534:	mov    edi,DWORD PTR [esi]
1000f536:	jmp    0x1000f53a
1000f538:	mov    edi,esi
1000f53a:	cmp    edi,eax
1000f53c:	jae    0x1000f55a
1000f53e:	movsx  eax,BYTE PTR [edi]
1000f541:	push   0x1
1000f543:	push   eax
1000f544:	lea    eax,[ebp-0x4]
1000f547:	push   eax
1000f548:	call   0x100448a0
1000f54d:	add    esp,0xc
1000f550:	test   eax,eax
1000f552:	je     0x1000f561
1000f554:	inc    edi
1000f555:	cmp    edi,DWORD PTR [ebp-0x8]
1000f558:	jb     0x1000f53e
1000f55a:	or     eax,0xffffffff
1000f55d:	pop    edi
1000f55e:	pop    esi
1000f55f:	leave  
1000f560:	ret    
1000f561:	cmp    DWORD PTR [ebx+0x18],0x10
1000f565:	jb     0x1000f569
1000f567:	mov    esi,DWORD PTR [esi]
1000f569:	sub    edi,esi
1000f56b:	mov    eax,edi
1000f56d:	jmp    0x1000f55d
1000f56f:	push   ebp
1000f570:	mov    ebp,esp
1000f572:	push   ecx
1000f573:	mov    eax,DWORD PTR [ebx+0x14]
1000f576:	test   eax,eax
1000f578:	push   esi
1000f579:	push   edi
1000f57a:	mov    BYTE PTR [ebp-0x4],0x20
1000f57e:	jbe    0x1000f5d3
1000f580:	or     ecx,0xffffffff
1000f583:	cmp    eax,ecx
1000f585:	ja     0x1000f58a
1000f587:	lea    ecx,[eax-0x1]
1000f58a:	cmp    DWORD PTR [ebx+0x18],0x10
1000f58e:	lea    edi,[ebx+0x4]
1000f591:	jb     0x1000f597
1000f593:	mov    eax,DWORD PTR [edi]
1000f595:	jmp    0x1000f599
1000f597:	mov    eax,edi
1000f599:	lea    esi,[eax+ecx*1]
1000f59c:	jmp    0x1000f5af
1000f59e:	cmp    DWORD PTR [ebx+0x18],0x10
1000f5a2:	jb     0x1000f5a8
1000f5a4:	mov    eax,DWORD PTR [edi]
1000f5a6:	jmp    0x1000f5aa
1000f5a8:	mov    eax,edi
1000f5aa:	cmp    esi,eax
1000f5ac:	je     0x1000f5d3
1000f5ae:	dec    esi
1000f5af:	movsx  eax,BYTE PTR [esi]
1000f5b2:	push   0x1
1000f5b4:	push   eax
1000f5b5:	lea    eax,[ebp-0x4]
1000f5b8:	push   eax
1000f5b9:	call   0x100448a0
1000f5be:	add    esp,0xc
1000f5c1:	test   eax,eax
1000f5c3:	jne    0x1000f59e
1000f5c5:	cmp    DWORD PTR [ebx+0x18],0x10
1000f5c9:	jb     0x1000f5cd
1000f5cb:	mov    edi,DWORD PTR [edi]
1000f5cd:	sub    esi,edi
1000f5cf:	mov    eax,esi
1000f5d1:	jmp    0x1000f5d6
1000f5d3:	or     eax,0xffffffff
1000f5d6:	pop    edi
1000f5d7:	pop    esi
1000f5d8:	leave  
1000f5d9:	ret    
1000f5da:	push   0x18
1000f5dc:	mov    eax,0x10060e0f
1000f5e1:	call   0x10058878
1000f5e6:	mov    esi,DWORD PTR [ebp+0x8]
1000f5e9:	lea    eax,[ebp-0x24]
1000f5ec:	push   eax
1000f5ed:	call   0x1000f415
1000f5f2:	xor    edi,edi
1000f5f4:	mov    DWORD PTR [ebp-0x4],edi
1000f5f7:	mov    eax,DWORD PTR [esi+0x4]
1000f5fa:	cmp    eax,edi
1000f5fc:	je     0x1000f606
1000f5fe:	mov    edi,DWORD PTR [esi+0xc]
1000f601:	sub    edi,eax
1000f603:	sar    edi,0x4
1000f606:	mov    eax,esi
1000f608:	call   0x1000c496
1000f60d:	mov    ebx,0xfffffff
1000f612:	mov    ecx,ebx
1000f614:	sub    ecx,eax
1000f616:	cmp    ecx,0x1
1000f619:	jae    0x1000f620
1000f61b:	call   0x1000d195
1000f620:	mov    eax,esi
1000f622:	call   0x1000c496
1000f627:	inc    eax
1000f628:	cmp    edi,eax
1000f62a:	jae    0x1000f6eb
1000f630:	mov    eax,edi
1000f632:	shr    eax,1
1000f634:	sub    ebx,eax
1000f636:	cmp    ebx,edi
1000f638:	jae    0x1000f63e
1000f63a:	xor    edi,edi
1000f63c:	jmp    0x1000f640
1000f63e:	add    edi,eax
1000f640:	mov    eax,esi
1000f642:	call   0x1000c496
1000f647:	inc    eax
1000f648:	cmp    edi,eax
1000f64a:	jae    0x1000f656
1000f64c:	mov    eax,esi
1000f64e:	call   0x1000c496
1000f653:	mov    edi,eax
1000f655:	inc    edi
1000f656:	mov    ecx,edi
1000f658:	call   0x1000f7a3
1000f65d:	push   eax
1000f65e:	push   DWORD PTR [ebp+0x10]
1000f661:	mov    BYTE PTR [ebp-0x4],0x1
1000f665:	mov    ecx,DWORD PTR [esi+0x4]
1000f668:	mov    DWORD PTR [ebp-0x14],eax
1000f66b:	mov    DWORD PTR [ebp+0x8],eax
1000f66e:	call   0x1000fb27
1000f673:	lea    ecx,[ebp-0x24]
1000f676:	push   ecx
1000f677:	push   0x1
1000f679:	push   eax
1000f67a:	mov    DWORD PTR [ebp+0x8],eax
1000f67d:	call   0x1000f3e4
1000f682:	mov    ecx,DWORD PTR [ebp+0x10]
1000f685:	push   eax
1000f686:	push   DWORD PTR [esi+0x8]
1000f689:	mov    DWORD PTR [ebp+0x8],eax
1000f68c:	call   0x1000fb27
1000f691:	mov    eax,esi
1000f693:	call   0x1000c496
1000f698:	mov    ebx,eax
1000f69a:	mov    eax,DWORD PTR [esi+0x4]
1000f69d:	inc    ebx
1000f69e:	test   eax,eax
1000f6a0:	je     0x1000f6b3
1000f6a2:	push   DWORD PTR [esi+0x8]
1000f6a5:	call   0x1000cec6
1000f6aa:	push   DWORD PTR [esi+0x4]
1000f6ad:	call   0x10041d92
1000f6b2:	pop    ecx
1000f6b3:	mov    eax,DWORD PTR [ebp-0x14]
1000f6b6:	shl    edi,0x4
1000f6b9:	add    edi,eax
1000f6bb:	shl    ebx,0x4
1000f6be:	add    ebx,eax
1000f6c0:	mov    DWORD PTR [esi+0xc],edi
1000f6c3:	mov    DWORD PTR [esi+0x8],ebx
1000f6c6:	mov    DWORD PTR [esi+0x4],eax
1000f6c9:	jmp    0x1000f793
1000f6ce:	push   DWORD PTR [ebp+0x8]
1000f6d1:	mov    eax,DWORD PTR [ebp-0x14]
1000f6d4:	call   0x1000cec6
1000f6d9:	push   DWORD PTR [ebp-0x14]
1000f6dc:	call   0x10041d92
1000f6e1:	pop    ecx
1000f6e2:	push   0x0
1000f6e4:	push   0x0
1000f6e6:	call   0x10046704
1000f6eb:	mov    ebx,DWORD PTR [esi+0x8]
1000f6ee:	mov    edi,DWORD PTR [ebp+0x10]
1000f6f1:	mov    eax,ebx
1000f6f3:	sub    eax,edi
1000f6f5:	sar    eax,0x4
1000f6f8:	cmp    eax,0x1
1000f6fb:	jae    0x1000f761
1000f6fd:	lea    eax,[edi+0x10]
1000f700:	push   eax
1000f701:	push   ebx
1000f702:	mov    ecx,edi
1000f704:	call   0x1000fb27
1000f709:	mov    BYTE PTR [ebp-0x4],0x3
1000f70d:	mov    eax,DWORD PTR [esi+0x8]
1000f710:	lea    ecx,[ebp-0x24]
1000f713:	push   ecx
1000f714:	mov    ecx,eax
1000f716:	xor    edx,edx
1000f718:	sub    ecx,edi
1000f71a:	sar    ecx,0x4
1000f71d:	inc    edx
1000f71e:	sub    edx,ecx
1000f720:	push   edx
1000f721:	push   eax
1000f722:	call   0x1000f3e4
1000f727:	and    DWORD PTR [ebp-0x4],0x0
1000f72b:	add    DWORD PTR [esi+0x8],0x10
1000f72f:	mov    esi,DWORD PTR [esi+0x8]
1000f732:	add    esi,0xfffffff0
1000f735:	jmp    0x1000f744
1000f737:	lea    eax,[ebp-0x24]
1000f73a:	mov    ecx,edi
1000f73c:	call   0x1000fcaf
1000f741:	add    edi,0x10
1000f744:	cmp    edi,esi
1000f746:	jne    0x1000f737
1000f748:	jmp    0x1000f793
1000f74a:	mov    eax,DWORD PTR [ebp+0x8]
1000f74d:	mov    eax,DWORD PTR [eax+0x8]
1000f750:	add    eax,0x10
1000f753:	push   eax
1000f754:	mov    eax,DWORD PTR [ebp+0x10]
1000f757:	add    eax,0x10
1000f75a:	call   0x1000cec6
1000f75f:	jmp    0x1000f6e2
1000f761:	push   ebx
1000f762:	lea    ecx,[ebx-0x10]
1000f765:	push   ebx
1000f766:	mov    DWORD PTR [ebp+0x8],ecx
1000f769:	call   0x1000fb27
1000f76e:	mov    ecx,DWORD PTR [ebp+0x8]
1000f771:	mov    DWORD PTR [esi+0x8],eax
1000f774:	push   edi
1000f775:	mov    eax,ebx
1000f777:	call   0x1000fb4b
1000f77c:	pop    ecx
1000f77d:	lea    esi,[edi+0x10]
1000f780:	jmp    0x1000f78f
1000f782:	lea    eax,[ebp-0x24]
1000f785:	mov    ecx,edi
1000f787:	call   0x1000fcaf
1000f78c:	add    edi,0x10
1000f78f:	cmp    edi,esi
1000f791:	jne    0x1000f782
1000f793:	lea    esi,[ebp-0x24]
1000f796:	call   0x1000d35f
1000f79b:	call   0x1005891d
1000f7a0:	ret    0xc
1000f7a3:	push   ebp
1000f7a4:	mov    ebp,esp
1000f7a6:	sub    esp,0x10
1000f7a9:	test   ecx,ecx
1000f7ab:	ja     0x1000f7bb
1000f7ad:	xor    ecx,ecx
1000f7af:	shl    ecx,0x4
1000f7b2:	push   ecx
1000f7b3:	call   0x1004239e
1000f7b8:	pop    ecx
1000f7b9:	leave  
1000f7ba:	ret    
1000f7bb:	or     eax,0xffffffff
1000f7be:	xor    edx,edx
1000f7c0:	div    ecx
1000f7c2:	cmp    eax,0x10
1000f7c5:	jae    0x1000f7af
1000f7c7:	and    DWORD PTR [ebp-0x4],0x0
1000f7cb:	lea    eax,[ebp-0x4]
1000f7ce:	push   eax
1000f7cf:	lea    ecx,[ebp-0x10]
1000f7d2:	call   0x10041e12
1000f7d7:	push   0x100738b8
1000f7dc:	lea    eax,[ebp-0x10]
1000f7df:	push   eax
1000f7e0:	mov    DWORD PTR [ebp-0x10],0x100655b8
1000f7e7:	call   0x10046704
1000f7ec:	int3   
1000f7ed:	push   ebp
1000f7ee:	mov    ebp,esp
1000f7f0:	push   ecx
1000f7f1:	push   ebx
1000f7f2:	push   esi
1000f7f3:	push   edi
1000f7f4:	mov    esi,eax
1000f7f6:	call   0x1000c4c8
1000f7fb:	test   eax,eax
1000f7fd:	jne    0x1000f803
1000f7ff:	xor    ebx,ebx
1000f801:	jmp    0x1000f82d
1000f803:	mov    edi,DWORD PTR [esi+0x4]
1000f806:	cmp    edi,DWORD PTR [esi+0x8]
1000f809:	jbe    0x1000f810
1000f80b:	call   0x100422b0
1000f810:	cmp    DWORD PTR [ebp+0x10],0x0
1000f814:	je     0x1000f81b
1000f816:	cmp    DWORD PTR [ebp+0x10],esi
1000f819:	je     0x1000f820
1000f81b:	call   0x100422b0
1000f820:	mov    eax,DWORD PTR [ebp+0x14]
1000f823:	sub    eax,edi
1000f825:	push   0x1c
1000f827:	cdq    
1000f828:	pop    ecx
1000f829:	idiv   ecx
1000f82b:	mov    ebx,eax
1000f82d:	push   DWORD PTR [ebp+0x14]
1000f830:	mov    ecx,esi
1000f832:	push   DWORD PTR [ebp+0x10]
1000f835:	push   DWORD PTR [ebp+0xc]
1000f838:	call   0x1000f92c
1000f83d:	mov    edi,DWORD PTR [esi+0x4]
1000f840:	cmp    edi,DWORD PTR [esi+0x8]
1000f843:	jbe    0x1000f84a
1000f845:	call   0x100422b0
1000f84a:	imul   ebx,ebx,0x1c
1000f84d:	mov    DWORD PTR [ebp+0x14],edi
1000f850:	add    edi,ebx
1000f852:	cmp    edi,DWORD PTR [esi+0x8]
1000f855:	ja     0x1000f85c
1000f857:	cmp    edi,DWORD PTR [esi+0x4]
1000f85a:	jae    0x1000f861
1000f85c:	call   0x100422b0
1000f861:	mov    eax,DWORD PTR [ebp+0x8]
1000f864:	mov    DWORD PTR [eax+0x4],edi
1000f867:	pop    edi
1000f868:	mov    DWORD PTR [eax],esi
1000f86a:	pop    esi
1000f86b:	pop    ebx
1000f86c:	pop    ecx
1000f86d:	pop    ebp
1000f86e:	ret    0x10
1000f871:	push   esi
1000f872:	mov    esi,eax
1000f874:	cmp    esi,0x9249249
1000f87a:	jbe    0x1000f881
1000f87c:	jmp    0x1000d195
1000f881:	mov    ecx,esi
1000f883:	call   0x1000f8e2
1000f888:	imul   esi,esi,0x1c
1000f88b:	add    esi,eax
1000f88d:	mov    DWORD PTR [edi+0x4],eax
1000f890:	mov    DWORD PTR [edi+0x8],eax
1000f893:	mov    DWORD PTR [edi+0xc],esi
1000f896:	mov    al,0x1
1000f898:	pop    esi
1000f899:	ret    
1000f89a:	push   ebp
1000f89b:	mov    ebp,esp
1000f89d:	push   ecx
1000f89e:	push   edi
1000f89f:	xor    eax,eax
1000f8a1:	lea    edi,[ebp-0x4]
1000f8a4:	stos   BYTE PTR es:[edi],al
1000f8a5:	push   DWORD PTR [ebp-0x4]
1000f8a8:	push   DWORD PTR [ebp+0xc]
1000f8ab:	push   DWORD PTR [ebp+0x10]
1000f8ae:	push   DWORD PTR [ebp+0xc]
1000f8b1:	push   DWORD PTR [ebp+0x8]
1000f8b4:	call   0x1000fc13
1000f8b9:	mov    eax,DWORD PTR [ebp+0xc]
1000f8bc:	imul   eax,eax,0x1c
1000f8bf:	add    esp,0x14
1000f8c2:	add    eax,DWORD PTR [ebp+0x8]
1000f8c5:	pop    edi
1000f8c6:	leave  
1000f8c7:	ret    0xc
1000f8ca:	push   ebp
1000f8cb:	mov    ebp,esp
1000f8cd:	push   ecx
1000f8ce:	push   DWORD PTR [ebp+0xc]
1000f8d1:	mov    ecx,DWORD PTR [ebp+0x8]
1000f8d4:	and    DWORD PTR [ebp-0x4],0x0
1000f8d8:	call   0x100011b0
1000f8dd:	mov    eax,DWORD PTR [ebp+0x8]
1000f8e0:	leave  
1000f8e1:	ret    
1000f8e2:	push   ebp
1000f8e3:	mov    ebp,esp
1000f8e5:	sub    esp,0x10
1000f8e8:	test   ecx,ecx
1000f8ea:	ja     0x1000f8fa
1000f8ec:	xor    ecx,ecx
1000f8ee:	imul   ecx,ecx,0x1c
1000f8f1:	push   ecx
1000f8f2:	call   0x1004239e
1000f8f7:	pop    ecx
1000f8f8:	leave  
1000f8f9:	ret    
1000f8fa:	or     eax,0xffffffff
1000f8fd:	xor    edx,edx
1000f8ff:	div    ecx
1000f901:	cmp    eax,0x1c
1000f904:	jae    0x1000f8ee
1000f906:	and    DWORD PTR [ebp-0x4],0x0
1000f90a:	lea    eax,[ebp-0x4]
1000f90d:	push   eax
1000f90e:	lea    ecx,[ebp-0x10]
1000f911:	call   0x10041e12
1000f916:	push   0x100738b8
1000f91b:	lea    eax,[ebp-0x10]
1000f91e:	push   eax
1000f91f:	mov    DWORD PTR [ebp-0x10],0x100655b8
1000f926:	call   0x10046704
1000f92b:	int3   
1000f92c:	push   0x30
1000f92e:	mov    eax,0x1005f2e9
1000f933:	call   0x100588e4
1000f938:	mov    eax,DWORD PTR [ebp+0x8]
1000f93b:	mov    esi,ecx
1000f93d:	push   eax
1000f93e:	lea    ecx,[ebp-0x30]
1000f941:	mov    DWORD PTR [ebp-0x34],esi
1000f944:	call   0x100011b0
1000f949:	xor    ebx,ebx
1000f94b:	mov    DWORD PTR [ebp-0x4],ebx
1000f94e:	mov    ecx,DWORD PTR [esi+0x4]
1000f951:	cmp    ecx,ebx
1000f953:	je     0x1000f962
1000f955:	mov    eax,DWORD PTR [esi+0xc]
1000f958:	sub    eax,ecx
1000f95a:	push   0x1c
1000f95c:	cdq    
1000f95d:	pop    ecx
1000f95e:	idiv   ecx
1000f960:	mov    ebx,eax
1000f962:	mov    eax,esi
1000f964:	call   0x1000c4c8
1000f969:	mov    edi,0x9249249
1000f96e:	mov    ecx,edi
1000f970:	sub    ecx,eax
1000f972:	cmp    ecx,0x1
1000f975:	jae    0x1000f97c
1000f977:	call   0x1000d195
1000f97c:	mov    eax,esi
1000f97e:	call   0x1000c4c8
1000f983:	inc    eax
1000f984:	cmp    ebx,eax
1000f986:	jae    0x1000fa49
1000f98c:	mov    eax,ebx
1000f98e:	shr    eax,1
1000f990:	sub    edi,eax
1000f992:	cmp    edi,ebx
1000f994:	jae    0x1000f99a
1000f996:	xor    ebx,ebx
1000f998:	jmp    0x1000f99c
1000f99a:	add    ebx,eax
1000f99c:	mov    eax,esi
1000f99e:	call   0x1000c4c8
1000f9a3:	inc    eax
1000f9a4:	cmp    ebx,eax
1000f9a6:	jae    0x1000f9b2
1000f9a8:	mov    eax,esi
1000f9aa:	call   0x1000c4c8
1000f9af:	mov    ebx,eax
1000f9b1:	inc    ebx
1000f9b2:	mov    ecx,ebx
1000f9b4:	call   0x1000f8e2
1000f9b9:	push   DWORD PTR [ebp+0x10]
1000f9bc:	mov    BYTE PTR [ebp-0x4],0x1
1000f9c0:	mov    ecx,DWORD PTR [esi+0x4]
1000f9c3:	mov    edx,eax
1000f9c5:	mov    DWORD PTR [ebp-0x34],eax
1000f9c8:	mov    DWORD PTR [ebp-0x38],eax
1000f9cb:	call   0x1000fba1
1000f9d0:	lea    ecx,[ebp-0x30]
1000f9d3:	push   ecx
1000f9d4:	push   0x1
1000f9d6:	push   eax
1000f9d7:	mov    DWORD PTR [ebp-0x38],eax
1000f9da:	call   0x1000f89a
1000f9df:	push   DWORD PTR [esi+0x8]
1000f9e2:	mov    ecx,DWORD PTR [ebp+0x10]
1000f9e5:	mov    edx,eax
1000f9e7:	mov    DWORD PTR [ebp-0x38],edx
1000f9ea:	call   0x1000fba1
1000f9ef:	mov    eax,esi
1000f9f1:	call   0x1000c4c8
1000f9f6:	mov    edi,eax
1000f9f8:	mov    eax,DWORD PTR [esi+0x4]
1000f9fb:	inc    edi
1000f9fc:	test   eax,eax
1000f9fe:	je     0x1000fa11
1000fa00:	push   DWORD PTR [esi+0x8]
1000fa03:	call   0x1000d384
1000fa08:	push   DWORD PTR [esi+0x4]
1000fa0b:	call   0x10041d92
1000fa10:	pop    ecx
1000fa11:	mov    eax,DWORD PTR [ebp-0x34]
1000fa14:	imul   ebx,ebx,0x1c
1000fa17:	imul   edi,edi,0x1c
1000fa1a:	add    ebx,eax
1000fa1c:	add    edi,eax
1000fa1e:	mov    DWORD PTR [esi+0xc],ebx
1000fa21:	mov    DWORD PTR [esi+0x8],edi
1000fa24:	mov    DWORD PTR [esi+0x4],eax
1000fa27:	jmp    0x1000fb13
1000fa2c:	push   DWORD PTR [ebp-0x38]
1000fa2f:	mov    eax,DWORD PTR [ebp-0x34]
1000fa32:	call   0x1000d384
1000fa37:	push   DWORD PTR [ebp-0x34]
1000fa3a:	call   0x10041d92
1000fa3f:	pop    ecx
1000fa40:	push   0x0
1000fa42:	push   0x0
1000fa44:	call   0x10046704
1000fa49:	mov    edi,DWORD PTR [esi+0x8]
1000fa4c:	mov    ebx,DWORD PTR [ebp+0x10]
1000fa4f:	mov    eax,edi
1000fa51:	sub    eax,ebx
1000fa53:	push   0x1c
1000fa55:	cdq    
1000fa56:	pop    ecx
1000fa57:	idiv   ecx
1000fa59:	push   edi
1000fa5a:	cmp    eax,0x1
1000fa5d:	jae    0x1000facb
1000fa5f:	lea    edx,[ebx+0x1c]
1000fa62:	mov    ecx,ebx
1000fa64:	call   0x1000fba1
1000fa69:	mov    BYTE PTR [ebp-0x4],0x3
1000fa6d:	mov    ecx,DWORD PTR [esi+0x8]
1000fa70:	lea    eax,[ebp-0x30]
1000fa73:	push   eax
1000fa74:	mov    eax,ecx
1000fa76:	sub    eax,ebx
1000fa78:	push   0x1c
1000fa7a:	pop    edi
1000fa7b:	cdq    
1000fa7c:	idiv   edi
1000fa7e:	xor    edx,edx
1000fa80:	inc    edx
1000fa81:	sub    edx,eax
1000fa83:	push   edx
1000fa84:	push   ecx
1000fa85:	call   0x1000f89a
1000fa8a:	and    DWORD PTR [ebp-0x4],0x0
1000fa8e:	add    DWORD PTR [esi+0x8],edi
1000fa91:	mov    esi,DWORD PTR [esi+0x8]
1000fa94:	add    esi,0xffffffe4
1000fa97:	jmp    0x1000faab
1000fa99:	push   0xffffffff
1000fa9b:	push   0x0
1000fa9d:	lea    eax,[ebp-0x30]
1000faa0:	push   eax
1000faa1:	mov    ecx,ebx
1000faa3:	call   0x1000124a
1000faa8:	add    ebx,0x1c
1000faab:	cmp    ebx,esi
1000faad:	jne    0x1000fa99
1000faaf:	jmp    0x1000fb13
1000fab1:	mov    eax,DWORD PTR [ebp-0x34]
1000fab4:	mov    eax,DWORD PTR [eax+0x8]
1000fab7:	add    eax,0x1c
1000faba:	push   eax
1000fabb:	mov    eax,DWORD PTR [ebp+0x10]
1000fabe:	add    eax,0x1c
1000fac1:	call   0x1000d384
1000fac6:	jmp    0x1000fa40
1000facb:	lea    ecx,[edi-0x1c]
1000face:	mov    edx,edi
1000fad0:	call   0x1000fba1
1000fad5:	mov    DWORD PTR [esi+0x8],eax
1000fad8:	lea    esi,[edi-0x1c]
1000fadb:	cmp    ebx,esi
1000fadd:	je     0x1000faf4
1000fadf:	sub    edi,esi
1000fae1:	sub    esi,0x1c
1000fae4:	lea    eax,[edi+esi*1]
1000fae7:	push   eax
1000fae8:	mov    ecx,esi
1000faea:	call   0x1000ffa5
1000faef:	cmp    esi,ebx
1000faf1:	pop    ecx
1000faf2:	jne    0x1000fae1
1000faf4:	lea    edi,[ebx+0x1c]
1000faf7:	cmp    ebx,edi
1000faf9:	mov    esi,ebx
1000fafb:	je     0x1000fb13
1000fafd:	push   0xffffffff
1000faff:	push   0x0
1000fb01:	lea    eax,[ebp-0x30]
1000fb04:	push   eax
1000fb05:	mov    ecx,esi
1000fb07:	call   0x1000124a
1000fb0c:	add    esi,0x1c
1000fb0f:	cmp    esi,edi
1000fb11:	jne    0x1000fafd
1000fb13:	push   0x0
1000fb15:	push   0x1
1000fb17:	lea    ecx,[ebp-0x30]
1000fb1a:	call   0x100012f9
1000fb1f:	call   0x10058940
1000fb24:	ret    0xc
1000fb27:	push   ebp
1000fb28:	mov    ebp,esp
1000fb2a:	push   ecx
1000fb2b:	push   edi
1000fb2c:	xor    eax,eax
1000fb2e:	lea    edi,[ebp-0x4]
1000fb31:	stos   BYTE PTR es:[edi],al
1000fb32:	push   DWORD PTR [ebp-0x4]
1000fb35:	push   DWORD PTR [ebp+0xc]
1000fb38:	push   DWORD PTR [ebp+0xc]
1000fb3b:	push   DWORD PTR [ebp+0x8]
1000fb3e:	call   0x1000fe33
1000fb43:	add    esp,0x10
1000fb46:	pop    edi
1000fb47:	leave  
1000fb48:	ret    0x8
1000fb4b:	push   ecx
1000fb4c:	push   ebx
1000fb4d:	push   esi
1000fb4e:	push   edi
1000fb4f:	mov    edi,ecx
1000fb51:	sub    ecx,DWORD PTR [esp+0x14]
1000fb55:	mov    esi,eax
1000fb57:	sar    ecx,0x4
1000fb5a:	shl    ecx,0x4
1000fb5d:	sub    eax,ecx
1000fb5f:	cmp    DWORD PTR [esp+0x14],edi
1000fb63:	je     0x1000fb9c
1000fb65:	lea    edx,[edi+0xc]
1000fb68:	lea    ecx,[esi+0x8]
1000fb6b:	sub    edi,esi
1000fb6d:	mov    ebx,DWORD PTR [edx-0x18]
1000fb70:	mov    esi,DWORD PTR [ecx-0x14]
1000fb73:	sub    ecx,0x10
1000fb76:	sub    edx,0x10
1000fb79:	mov    DWORD PTR [ecx-0x4],ebx
1000fb7c:	mov    DWORD PTR [edx-0x8],esi
1000fb7f:	mov    ebx,DWORD PTR [edi+ecx*1]
1000fb82:	mov    esi,DWORD PTR [ecx]
1000fb84:	mov    DWORD PTR [ecx],ebx
1000fb86:	mov    DWORD PTR [edi+ecx*1],esi
1000fb89:	mov    esi,DWORD PTR [ecx+0x4]
1000fb8c:	mov    ebx,DWORD PTR [edx]
1000fb8e:	mov    DWORD PTR [ecx+0x4],ebx
1000fb91:	mov    DWORD PTR [edx],esi
1000fb93:	lea    esi,[edx-0xc]
1000fb96:	cmp    esi,DWORD PTR [esp+0x14]
1000fb9a:	jne    0x1000fb6d
1000fb9c:	pop    edi
1000fb9d:	pop    esi
1000fb9e:	pop    ebx
1000fb9f:	pop    ecx
1000fba0:	ret    
1000fba1:	push   ebp
1000fba2:	mov    ebp,esp
1000fba4:	push   ecx
1000fba5:	push   edi
1000fba6:	xor    eax,eax
1000fba8:	lea    edi,[ebp-0x4]
1000fbab:	stos   BYTE PTR es:[edi],al
1000fbac:	push   DWORD PTR [ebp-0x4]
1000fbaf:	push   DWORD PTR [ebp+0x8]
1000fbb2:	push   DWORD PTR [ebp+0x8]
1000fbb5:	call   0x1000fec1
1000fbba:	add    esp,0xc
1000fbbd:	pop    edi
1000fbbe:	leave  
1000fbbf:	ret    0x4
1000fbc2:	push   0x8
1000fbc4:	mov    eax,0x1005fc70
1000fbc9:	call   0x10058878
1000fbce:	mov    eax,DWORD PTR [ebp+0x8]
1000fbd1:	and    DWORD PTR [ebp-0x4],0x0
1000fbd5:	mov    DWORD PTR [ebp-0x14],eax
1000fbd8:	cmp    DWORD PTR [ebp+0xc],0x0
1000fbdc:	jbe    0x1000fc0d
1000fbde:	push   DWORD PTR [ebp+0x8]
1000fbe1:	mov    ecx,DWORD PTR [ebp+0x10]
1000fbe4:	call   0x1000fc89
1000fbe9:	dec    DWORD PTR [ebp+0xc]
1000fbec:	add    DWORD PTR [ebp+0x8],0x10
1000fbf0:	jmp    0x1000fbd8
1000fbf2:	mov    esi,DWORD PTR [ebp-0x14]
1000fbf5:	jmp    0x1000fbff
1000fbf7:	call   0x1000d35f
1000fbfc:	add    esi,0x10
1000fbff:	cmp    esi,DWORD PTR [ebp+0x8]
1000fc02:	jne    0x1000fbf7
1000fc04:	push   0x0
1000fc06:	push   0x0
1000fc08:	call   0x10046704
1000fc0d:	call   0x1005891d
1000fc12:	ret    
1000fc13:	push   0x8
1000fc15:	mov    eax,0x1005ea3a
1000fc1a:	call   0x10058878
1000fc1f:	mov    eax,DWORD PTR [ebp+0x8]
1000fc22:	and    DWORD PTR [ebp-0x4],0x0
1000fc26:	mov    DWORD PTR [ebp-0x14],eax
1000fc29:	cmp    DWORD PTR [ebp+0xc],0x0
1000fc2d:	jbe    0x1000fc5f
1000fc2f:	push   DWORD PTR [ebp+0x10]
1000fc32:	mov    ecx,DWORD PTR [ebp+0x8]
1000fc35:	call   0x1000fc65
1000fc3a:	dec    DWORD PTR [ebp+0xc]
1000fc3d:	add    DWORD PTR [ebp+0x8],0x1c
1000fc41:	jmp    0x1000fc29
1000fc43:	mov    esi,DWORD PTR [ebp-0x14]
1000fc46:	jmp    0x1000fc51
1000fc48:	push   esi
1000fc49:	call   0x1000d3c2
1000fc4e:	add    esi,0x1c
1000fc51:	cmp    esi,DWORD PTR [ebp+0x8]
1000fc54:	push   0x0
1000fc56:	jne    0x1000fc48
1000fc58:	push   0x0
1000fc5a:	call   0x10046704
1000fc5f:	call   0x1005891d
1000fc64:	ret    
1000fc65:	push   0x0
1000fc67:	mov    eax,0x1005ea1f
1000fc6c:	call   0x10058845
1000fc71:	and    DWORD PTR [ebp-0x4],0x0
1000fc75:	test   ecx,ecx
1000fc77:	je     0x1000fc81
1000fc79:	push   DWORD PTR [ebp+0x8]
1000fc7c:	call   0x100011b0
1000fc81:	call   0x1005891d
1000fc86:	ret    0x4
1000fc89:	push   0x0
1000fc8b:	mov    eax,0x1005ea1f
1000fc90:	call   0x10058845
1000fc95:	and    DWORD PTR [ebp-0x4],0x0
1000fc99:	cmp    DWORD PTR [ebp+0x8],0x0
1000fc9d:	je     0x1000fca7
1000fc9f:	push   DWORD PTR [ebp+0x8]
1000fca2:	call   0x1000f415
1000fca7:	call   0x1005891d
1000fcac:	ret    0x4
1000fcaf:	push   ebp
1000fcb0:	mov    ebp,esp
1000fcb2:	push   ecx
1000fcb3:	push   ebx
1000fcb4:	push   esi
1000fcb5:	push   edi
1000fcb6:	mov    ebx,eax
1000fcb8:	mov    edi,ecx
1000fcba:	cmp    edi,ebx
1000fcbc:	je     0x1000fdd8
1000fcc2:	call   0x1000c4c8
1000fcc7:	test   eax,eax
1000fcc9:	jne    0x1000fd0c
1000fccb:	mov    ebx,DWORD PTR [edi+0x8]
1000fcce:	cmp    DWORD PTR [edi+0x4],ebx
1000fcd1:	jbe    0x1000fcd8
1000fcd3:	call   0x100422b0
1000fcd8:	mov    esi,DWORD PTR [edi+0x4]
1000fcdb:	cmp    esi,DWORD PTR [edi+0x8]
1000fcde:	jbe    0x1000fce5
1000fce0:	call   0x100422b0
1000fce5:	cmp    esi,ebx
1000fce7:	je     0x1000fdd8
1000fced:	push   DWORD PTR [edi+0x8]
1000fcf0:	mov    eax,esi
1000fcf2:	mov    ecx,ebx
1000fcf4:	call   0x1000ff43
1000fcf9:	pop    ecx
1000fcfa:	push   DWORD PTR [edi+0x8]
1000fcfd:	mov    esi,eax
1000fcff:	call   0x1000d384
1000fd04:	mov    DWORD PTR [edi+0x8],esi
1000fd07:	jmp    0x1000fdd8
1000fd0c:	mov    eax,ebx
1000fd0e:	call   0x1000c4c8
1000fd13:	mov    esi,eax
1000fd15:	mov    eax,edi
1000fd17:	call   0x1000c4c8
1000fd1c:	cmp    esi,eax
1000fd1e:	ja     0x1000fd49
1000fd20:	push   DWORD PTR [ebx+0x8]
1000fd23:	mov    eax,DWORD PTR [edi+0x4]
1000fd26:	mov    ecx,DWORD PTR [ebx+0x4]
1000fd29:	call   0x1000ff43
1000fd2e:	pop    ecx
1000fd2f:	push   DWORD PTR [edi+0x8]
1000fd32:	call   0x1000d384
1000fd37:	mov    eax,ebx
1000fd39:	call   0x1000c4c8
1000fd3e:	imul   eax,eax,0x1c
1000fd41:	add    eax,DWORD PTR [edi+0x4]
1000fd44:	jmp    0x1000fdd5
1000fd49:	mov    esi,DWORD PTR [edi+0x4]
1000fd4c:	test   esi,esi
1000fd4e:	jne    0x1000fd55
1000fd50:	and    DWORD PTR [ebp-0x4],esi
1000fd53:	jmp    0x1000fd63
1000fd55:	mov    eax,DWORD PTR [edi+0xc]
1000fd58:	sub    eax,esi
1000fd5a:	push   0x1c
1000fd5c:	cdq    
1000fd5d:	pop    ecx
1000fd5e:	idiv   ecx
1000fd60:	mov    DWORD PTR [ebp-0x4],eax
1000fd63:	mov    eax,ebx
1000fd65:	call   0x1000c4c8
1000fd6a:	cmp    eax,DWORD PTR [ebp-0x4]
1000fd6d:	ja     0x1000fd91
1000fd6f:	mov    eax,edi
1000fd71:	call   0x1000c4c8
1000fd76:	mov    ecx,DWORD PTR [ebx+0x4]
1000fd79:	mov    esi,eax
1000fd7b:	mov    eax,DWORD PTR [edi+0x4]
1000fd7e:	imul   esi,esi,0x1c
1000fd81:	add    esi,ecx
1000fd83:	push   esi
1000fd84:	call   0x1000ff43
1000fd89:	pop    ecx
1000fd8a:	push   DWORD PTR [edi+0x8]
1000fd8d:	mov    ecx,esi
1000fd8f:	jmp    0x1000fdcd
1000fd91:	test   esi,esi
1000fd93:	je     0x1000fda8
1000fd95:	push   DWORD PTR [edi+0x8]
1000fd98:	mov    eax,esi
1000fd9a:	call   0x1000d384
1000fd9f:	push   DWORD PTR [edi+0x4]
1000fda2:	call   0x10041d92
1000fda7:	pop    ecx
1000fda8:	mov    eax,ebx
1000fdaa:	call   0x1000c4c8
1000fdaf:	xor    ecx,ecx
1000fdb1:	cmp    eax,ecx
1000fdb3:	mov    DWORD PTR [edi+0x4],ecx
1000fdb6:	mov    DWORD PTR [edi+0x8],ecx
1000fdb9:	mov    DWORD PTR [edi+0xc],ecx
1000fdbc:	je     0x1000fdd8
1000fdbe:	call   0x1000f871
1000fdc3:	test   al,al
1000fdc5:	je     0x1000fdd8
1000fdc7:	push   DWORD PTR [edi+0x4]
1000fdca:	mov    ecx,DWORD PTR [ebx+0x4]
1000fdcd:	push   DWORD PTR [ebx+0x8]
1000fdd0:	call   0x1000ff81
1000fdd5:	mov    DWORD PTR [edi+0x8],eax
1000fdd8:	mov    eax,edi
1000fdda:	pop    edi
1000fddb:	pop    esi
1000fddc:	pop    ebx
1000fddd:	leave  
1000fdde:	ret    
1000fddf:	push   0x8
1000fde1:	mov    eax,0x1005f2c6
1000fde6:	call   0x10058878
1000fdeb:	mov    esi,ecx
1000fded:	mov    eax,DWORD PTR [ebp+0xc]
1000fdf0:	and    DWORD PTR [ebp-0x4],0x0
1000fdf4:	mov    DWORD PTR [ebp-0x14],eax
1000fdf7:	cmp    esi,DWORD PTR [ebp+0x8]
1000fdfa:	je     0x1000fe2a
1000fdfc:	mov    ecx,DWORD PTR [ebp+0xc]
1000fdff:	push   esi
1000fe00:	call   0x1000fc65
1000fe05:	add    DWORD PTR [ebp+0xc],0x1c
1000fe09:	add    esi,0x1c
1000fe0c:	jmp    0x1000fdf7
1000fe0e:	mov    esi,DWORD PTR [ebp-0x14]
1000fe11:	jmp    0x1000fe1c
1000fe13:	push   esi
1000fe14:	call   0x1000d3c2
1000fe19:	add    esi,0x1c
1000fe1c:	cmp    esi,DWORD PTR [ebp+0xc]
1000fe1f:	push   0x0
1000fe21:	jne    0x1000fe13
1000fe23:	push   0x0
1000fe25:	call   0x10046704
1000fe2a:	mov    eax,DWORD PTR [ebp+0xc]
1000fe2d:	call   0x1005891d
1000fe32:	ret    
1000fe33:	push   0x1c
1000fe35:	mov    eax,0x10060dec
1000fe3a:	call   0x10058878
1000fe3f:	mov    edi,DWORD PTR [ebp+0xc]
1000fe42:	mov    esi,ecx
1000fe44:	xor    eax,eax
1000fe46:	mov    DWORD PTR [ebp-0x18],edi
1000fe49:	mov    DWORD PTR [ebp-0x24],eax
1000fe4c:	mov    DWORD PTR [ebp-0x20],eax
1000fe4f:	mov    DWORD PTR [ebp-0x1c],eax
1000fe52:	mov    DWORD PTR [ebp-0x4],eax
1000fe55:	mov    BYTE PTR [ebp-0x4],0x1
1000fe59:	cmp    esi,DWORD PTR [ebp+0x8]
1000fe5c:	je     0x1000feb1
1000fe5e:	push   edi
1000fe5f:	lea    ecx,[ebp-0x28]
1000fe62:	call   0x1000fc89
1000fe67:	mov    ecx,DWORD PTR [esi+0x4]
1000fe6a:	mov    eax,DWORD PTR [edi+0x4]
1000fe6d:	mov    DWORD PTR [edi+0x4],ecx
1000fe70:	mov    DWORD PTR [esi+0x4],eax
1000fe73:	mov    ecx,DWORD PTR [esi+0x8]
1000fe76:	mov    eax,DWORD PTR [edi+0x8]
1000fe79:	mov    DWORD PTR [edi+0x8],ecx
1000fe7c:	mov    DWORD PTR [esi+0x8],eax
1000fe7f:	mov    ecx,DWORD PTR [esi+0xc]
1000fe82:	mov    eax,DWORD PTR [edi+0xc]
1000fe85:	mov    DWORD PTR [edi+0xc],ecx
1000fe88:	add    edi,0x10
1000fe8b:	mov    DWORD PTR [esi+0xc],eax
1000fe8e:	mov    DWORD PTR [ebp+0xc],edi
1000fe91:	add    esi,0x10
1000fe94:	jmp    0x1000fe59
1000fe96:	mov    esi,DWORD PTR [ebp-0x18]
1000fe99:	jmp    0x1000fea3
1000fe9b:	call   0x1000d35f
1000fea0:	add    esi,0x10
1000fea3:	cmp    esi,DWORD PTR [ebp+0xc]
1000fea6:	jne    0x1000fe9b
1000fea8:	xor    eax,eax
1000feaa:	push   eax
1000feab:	push   eax
1000feac:	call   0x10046704
1000feb1:	lea    esi,[ebp-0x28]
1000feb4:	call   0x1000d35f
1000feb9:	mov    eax,edi
1000febb:	call   0x1005891d
1000fec0:	ret    
1000fec1:	push   0x2c
1000fec3:	mov    eax,0x1005f2a1
1000fec8:	call   0x100588e4
1000fecd:	mov    esi,edx
1000fecf:	xor    ebx,ebx
1000fed1:	mov    edi,ecx
1000fed3:	push   ebx
1000fed4:	lea    ecx,[ebp-0x30]
1000fed7:	mov    DWORD PTR [ebp-0x34],esi
1000feda:	mov    DWORD PTR [ebp-0x38],esi
1000fedd:	mov    DWORD PTR [ebp-0x18],0xf
1000fee4:	call   0x10001425
1000fee9:	mov    DWORD PTR [ebp-0x4],ebx
1000feec:	mov    BYTE PTR [ebp-0x4],0x1
1000fef0:	cmp    edi,DWORD PTR [ebp+0x8]
1000fef3:	je     0x1000ff30
1000fef5:	lea    eax,[ebp-0x30]
1000fef8:	push   eax
1000fef9:	mov    ecx,esi
1000fefb:	call   0x1000fc65
1000ff00:	push   esi
1000ff01:	mov    ecx,edi
1000ff03:	call   0x1000ffa5
1000ff08:	add    esi,0x1c
1000ff0b:	pop    ecx
1000ff0c:	mov    DWORD PTR [ebp-0x34],esi
1000ff0f:	add    edi,0x1c
1000ff12:	jmp    0x1000fef0
1000ff14:	mov    esi,DWORD PTR [ebp-0x38]
1000ff17:	jmp    0x1000ff22
1000ff19:	push   esi
1000ff1a:	call   0x1000d3c2
1000ff1f:	add    esi,0x1c
1000ff22:	cmp    esi,DWORD PTR [ebp-0x34]
1000ff25:	push   0x0
1000ff27:	jne    0x1000ff19
1000ff29:	push   0x0
1000ff2b:	call   0x10046704
1000ff30:	push   ebx
1000ff31:	push   0x1
1000ff33:	lea    ecx,[ebp-0x30]
1000ff36:	call   0x100012f9
1000ff3b:	mov    eax,esi
1000ff3d:	call   0x10058940
1000ff42:	ret    
1000ff43:	push   ebx
1000ff44:	push   esi
1000ff45:	mov    ebx,eax
1000ff47:	mov    eax,DWORD PTR [esp+0xc]
1000ff4b:	push   edi
1000ff4c:	mov    edi,ecx
1000ff4e:	sub    eax,edi
1000ff50:	push   0x1c
1000ff52:	cdq    
1000ff53:	pop    ecx
1000ff54:	idiv   ecx
1000ff56:	mov    esi,eax
1000ff58:	imul   esi,esi,0x1c
1000ff5b:	add    esi,ebx
1000ff5d:	cmp    edi,DWORD PTR [esp+0x10]
1000ff61:	je     0x1000ff7b
1000ff63:	sub    ebx,edi
1000ff65:	push   0xffffffff
1000ff67:	push   0x0
1000ff69:	push   edi
1000ff6a:	lea    ecx,[ebx+edi*1]
1000ff6d:	call   0x1000124a
1000ff72:	add    edi,0x1c
1000ff75:	cmp    edi,DWORD PTR [esp+0x10]
1000ff79:	jne    0x1000ff65
1000ff7b:	pop    edi
1000ff7c:	mov    eax,esi
1000ff7e:	pop    esi
1000ff7f:	pop    ebx
1000ff80:	ret    
1000ff81:	push   ebp
1000ff82:	mov    ebp,esp
1000ff84:	push   ecx
1000ff85:	push   edi
1000ff86:	xor    eax,eax
1000ff88:	lea    edi,[ebp-0x4]
1000ff8b:	stos   BYTE PTR es:[edi],al
1000ff8c:	push   DWORD PTR [ebp-0x4]
1000ff8f:	push   DWORD PTR [ebp+0xc]
1000ff92:	push   DWORD PTR [ebp+0xc]
1000ff95:	push   DWORD PTR [ebp+0x8]
1000ff98:	call   0x1000fddf
1000ff9d:	add    esp,0x10
1000ffa0:	pop    edi
1000ffa1:	leave  
1000ffa2:	ret    0x8
1000ffa5:	push   ebp
1000ffa6:	mov    ebp,esp
1000ffa8:	sub    esp,0x14
1000ffab:	mov    eax,ds:0x1007d030
1000ffb0:	xor    eax,ebp
1000ffb2:	mov    DWORD PTR [ebp-0x4],eax
1000ffb5:	mov    eax,DWORD PTR [ebp+0x8]
1000ffb8:	push   ebx
1000ffb9:	push   esi
1000ffba:	push   edi
1000ffbb:	lea    edx,[eax+0x4]
1000ffbe:	mov    esi,edx
1000ffc0:	lea    edi,[ebp-0x14]
1000ffc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ffc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ffc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ffc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ffc7:	lea    ebx,[ecx+0x4]
1000ffca:	mov    edi,edx
1000ffcc:	mov    esi,ebx
1000ffce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ffcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ffd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ffd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ffd2:	mov    edi,ebx
1000ffd4:	lea    esi,[ebp-0x14]
1000ffd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ffd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ffd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ffda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1000ffdb:	mov    esi,DWORD PTR [ecx+0x14]
1000ffde:	mov    edx,DWORD PTR [eax+0x14]
1000ffe1:	mov    DWORD PTR [eax+0x14],esi
1000ffe4:	mov    esi,DWORD PTR [ecx+0x18]
1000ffe7:	mov    DWORD PTR [ecx+0x14],edx
1000ffea:	mov    edx,DWORD PTR [eax+0x18]
1000ffed:	mov    DWORD PTR [eax+0x18],esi
1000fff0:	mov    DWORD PTR [ecx+0x18],edx
1000fff3:	mov    ecx,DWORD PTR [ebp-0x4]
1000fff6:	pop    edi
1000fff7:	pop    esi
1000fff8:	xor    ecx,ebp
1000fffa:	pop    ebx
1000fffb:	call   0x10041d97
10010000:	leave  
10010001:	ret    
10010002:	mov    edx,DWORD PTR [ecx]
10010004:	cmp    edx,DWORD PTR [eax]
10010006:	jne    0x10010024
10010008:	mov    edx,DWORD PTR [ecx+0x4]
1001000b:	cmp    edx,DWORD PTR [eax+0x4]
1001000e:	jne    0x10010024
10010010:	mov    edx,DWORD PTR [ecx+0x8]
10010013:	cmp    edx,DWORD PTR [eax+0x8]
10010016:	jne    0x10010024
10010018:	mov    ecx,DWORD PTR [ecx+0xc]
1001001b:	cmp    ecx,DWORD PTR [eax+0xc]
1001001e:	jne    0x10010024
10010020:	xor    eax,eax
10010022:	inc    eax
10010023:	ret    
10010024:	xor    eax,eax
10010026:	ret    
10010027:	test   esi,esi
10010029:	jne    0x1001002f
1001002b:	xor    eax,eax
1001002d:	jmp    0x10010050
1001002f:	push   edi
10010030:	mov    edi,DWORD PTR [esi]
10010032:	and    DWORD PTR [esi],0x0
10010035:	test   eax,eax
10010037:	je     0x10010043
10010039:	mov    ecx,DWORD PTR [eax]
1001003b:	push   esi
1001003c:	push   DWORD PTR [esp+0xc]
10010040:	push   eax
10010041:	call   DWORD PTR [ecx]
10010043:	test   edi,edi
10010045:	je     0x1001004d
10010047:	mov    eax,DWORD PTR [edi]
10010049:	push   edi
1001004a:	call   DWORD PTR [eax+0x8]
1001004d:	mov    eax,DWORD PTR [esi]
1001004f:	pop    edi
10010050:	ret    0x4
10010053:	cmp    DWORD PTR [eax],0x0
10010056:	jne    0x10010074
10010058:	cmp    DWORD PTR [eax+0x4],0x0
1001005c:	jne    0x10010074
1001005e:	cmp    DWORD PTR [eax+0x8],0xc0
10010065:	jne    0x10010074
10010067:	cmp    DWORD PTR [eax+0xc],0x46000000
1001006e:	jne    0x10010074
10010070:	xor    eax,eax
10010072:	inc    eax
10010073:	ret    
10010074:	xor    eax,eax
10010076:	ret    
10010077:	push   ebp
10010078:	mov    ebp,esp
1001007a:	push   ecx
1001007b:	cmp    DWORD PTR [ebp+0x8],0x0
1001007f:	push   esi
10010080:	push   edi
10010081:	mov    esi,eax
10010083:	je     0x10010101
10010085:	test   esi,esi
10010087:	je     0x10010101
10010089:	test   ebx,ebx
1001008b:	jne    0x10010094
1001008d:	mov    eax,0x80004003
10010092:	jmp    0x10010106
10010094:	mov    eax,DWORD PTR [ebp+0xc]
10010097:	and    DWORD PTR [ebx],0x0
1001009a:	call   0x10010053
1001009f:	test   eax,eax
100100a1:	je     0x100100f3
100100a3:	mov    esi,DWORD PTR [esi+0x4]
100100a6:	add    esi,DWORD PTR [ebp+0x8]
100100a9:	mov    eax,DWORD PTR [esi]
100100ab:	push   esi
100100ac:	call   DWORD PTR [eax+0x4]
100100af:	mov    DWORD PTR [ebx],esi
100100b1:	xor    eax,eax
100100b3:	jmp    0x10010106
100100b5:	mov    ecx,DWORD PTR [esi]
100100b7:	xor    eax,eax
100100b9:	test   ecx,ecx
100100bb:	sete   al
100100be:	test   eax,eax
100100c0:	mov    DWORD PTR [ebp-0x4],eax
100100c3:	jne    0x100100d1
100100c5:	mov    eax,DWORD PTR [ebp+0xc]
100100c8:	call   0x10010002
100100cd:	test   eax,eax
100100cf:	je     0x100100f0
100100d1:	cmp    edi,0x1
100100d4:	je     0x100100a3
100100d6:	push   DWORD PTR [esi+0x4]
100100d9:	push   ebx
100100da:	push   DWORD PTR [ebp+0xc]
100100dd:	push   DWORD PTR [ebp+0x8]
100100e0:	call   edi
100100e2:	test   eax,eax
100100e4:	je     0x10010106
100100e6:	cmp    DWORD PTR [ebp-0x4],0x0
100100ea:	jne    0x100100f0
100100ec:	test   eax,eax
100100ee:	jl     0x10010106
100100f0:	add    esi,0xc
100100f3:	mov    edi,DWORD PTR [esi+0x8]
100100f6:	test   edi,edi
100100f8:	jne    0x100100b5
100100fa:	mov    eax,0x80004002
100100ff:	jmp    0x10010106
10010101:	mov    eax,0x80070057
10010106:	pop    edi
10010107:	pop    esi
10010108:	leave  
10010109:	ret    0x8
1001010c:	push   0xc
1001010e:	mov    eax,0x1005e62f
10010113:	call   0x10058878
10010118:	mov    edi,DWORD PTR [ebp+0x8]
1001011b:	test   edi,edi
1001011d:	jne    0x10010126
1001011f:	mov    eax,0x80070057
10010124:	jmp    0x10010182
10010126:	and    DWORD PTR [ebp-0x14],0x0
1001012a:	and    DWORD PTR [ebp-0x4],0x0
1001012e:	push   0xc
10010130:	call   0x1004239e
10010135:	pop    ecx
10010136:	mov    esi,eax
10010138:	jmp    0x10010146
1001013a:	mov    eax,0x10010140
1001013f:	ret    
10010140:	mov    edi,DWORD PTR [ebp+0x8]
10010143:	mov    esi,DWORD PTR [ebp-0x14]
10010146:	test   esi,esi
10010148:	jne    0x10010151
1001014a:	mov    ebx,0x8007000e
1001014f:	jmp    0x10010180
10010151:	mov    eax,DWORD PTR [ebp+0xc]
10010154:	mov    DWORD PTR [esi],eax
10010156:	mov    eax,DWORD PTR [ebp+0x10]
10010159:	mov    DWORD PTR [esi+0x4],eax
1001015c:	lea    eax,[edi+0xc]
1001015f:	push   eax
10010160:	mov    DWORD PTR [ebp-0x18],eax
10010163:	call   DWORD PTR ds:0x100650f0
10010169:	mov    eax,DWORD PTR [edi+0x8]
1001016c:	mov    DWORD PTR [esi+0x8],eax
1001016f:	lea    ecx,[ebp-0x18]
10010172:	mov    BYTE PTR [ebp-0x14],0x1
10010176:	xor    ebx,ebx
10010178:	mov    DWORD PTR [edi+0x8],esi
1001017b:	call   0x10010991
10010180:	mov    eax,ebx
10010182:	call   0x1005891d
10010187:	ret    0xc
1001018a:	mov    eax,ecx
1001018c:	and    DWORD PTR [eax],0x0
1001018f:	and    DWORD PTR [eax+0x4],0x0
10010193:	or     DWORD PTR [eax+0x8],0xffffffff
10010197:	ret    
10010198:	test   edi,edi
1001019a:	jne    0x100101a2
1001019c:	mov    eax,0x80004003
100101a1:	ret    
100101a2:	push   esi
100101a3:	xor    eax,eax
100101a5:	lea    esi,[ecx+0xc]
100101a8:	cmp    DWORD PTR [esi],eax
100101aa:	jne    0x100101b1
100101ac:	call   0x10010415
100101b1:	mov    ecx,DWORD PTR [esi]
100101b3:	mov    DWORD PTR [edi],ecx
100101b5:	cmp    DWORD PTR [esi],0x0
100101b8:	je     0x100101c4
100101ba:	mov    esi,DWORD PTR [esi]
100101bc:	mov    eax,DWORD PTR [esi]
100101be:	push   esi
100101bf:	call   DWORD PTR [eax+0x4]
100101c2:	xor    eax,eax
100101c4:	pop    esi
100101c5:	ret    
100101c6:	push   ebp
100101c7:	mov    ebp,esp
100101c9:	push   ecx
100101ca:	push   esi
100101cb:	push   edi
100101cc:	mov    esi,eax
100101ce:	xor    edi,edi
100101d0:	xor    eax,eax
100101d2:	cmp    DWORD PTR [esi+0xc],edi
100101d5:	je     0x100101dc
100101d7:	cmp    DWORD PTR [esi+0x14],edi
100101da:	jne    0x100101e3
100101dc:	mov    ecx,esi
100101de:	call   0x10010415
100101e3:	cmp    DWORD PTR [esi+0xc],edi
100101e6:	je     0x10010250
100101e8:	cmp    DWORD PTR [esi+0x14],edi
100101eb:	push   ebx
100101ec:	je     0x1001023d
100101ee:	cmp    DWORD PTR [ebp+0xc],0x1
100101f2:	jne    0x1001023d
100101f4:	mov    eax,DWORD PTR [ebp+0x8]
100101f7:	push   DWORD PTR [eax]
100101f9:	call   DWORD PTR ds:0x100650e0
100101ff:	mov    edi,DWORD PTR [esi+0x18]
10010202:	dec    edi
10010203:	mov    DWORD PTR [ebp-0x4],eax
10010206:	js     0x1001023d
10010208:	mov    ebx,edi
1001020a:	imul   ebx,ebx,0xc
1001020d:	mov    eax,DWORD PTR [esi+0x14]
10010210:	mov    ecx,DWORD PTR [ebp-0x4]
10010213:	cmp    ecx,DWORD PTR [ebx+eax*1+0x4]
10010217:	jne    0x10010235
10010219:	add    eax,ebx
1001021b:	mov    ecx,DWORD PTR [eax]
1001021d:	mov    eax,DWORD PTR [eax+0x4]
10010220:	add    eax,eax
10010222:	push   eax
10010223:	mov    eax,DWORD PTR [ebp+0x8]
10010226:	push   DWORD PTR [eax]
10010228:	push   ecx
10010229:	call   0x1004260e
1001022e:	add    esp,0xc
10010231:	test   eax,eax
10010233:	je     0x10010256
10010235:	dec    edi
10010236:	sub    ebx,0xc
10010239:	test   edi,edi
1001023b:	jge    0x1001020d
1001023d:	push   DWORD PTR [ebp+0x10]
10010240:	mov    esi,DWORD PTR [esi+0xc]
10010243:	push   DWORD PTR [ebp+0xc]
10010246:	mov    eax,DWORD PTR [esi]
10010248:	push   DWORD PTR [ebp+0x8]
1001024b:	push   esi
1001024c:	call   DWORD PTR [eax+0x28]
1001024f:	pop    ebx
10010250:	pop    edi
10010251:	pop    esi
10010252:	leave  
10010253:	ret    0xc
10010256:	mov    eax,DWORD PTR [esi+0x14]
10010259:	imul   edi,edi,0xc
1001025c:	mov    eax,DWORD PTR [edi+eax*1+0x8]
10010260:	mov    ecx,DWORD PTR [ebp+0x10]
10010263:	mov    DWORD PTR [ecx],eax
10010265:	xor    eax,eax
10010267:	jmp    0x1001024f
10010269:	push   ebp
1001026a:	mov    ebp,esp
1001026c:	push   esi
1001026d:	mov    esi,eax
1001026f:	xor    eax,eax
10010271:	cmp    DWORD PTR [esi+0xc],eax
10010274:	je     0x1001027b
10010276:	cmp    DWORD PTR [esi+0x14],eax
10010279:	jne    0x10010282
1001027b:	mov    ecx,esi
1001027d:	call   0x10010415
10010282:	cmp    DWORD PTR [esi+0xc],0x0
10010286:	je     0x100102a6
10010288:	push   DWORD PTR [ebp+0x20]
1001028b:	mov    esi,DWORD PTR [esi+0xc]
1001028e:	push   DWORD PTR [ebp+0x1c]
10010291:	mov    eax,DWORD PTR [esi]
10010293:	push   DWORD PTR [ebp+0x18]
10010296:	push   DWORD PTR [ebp+0x14]
10010299:	push   DWORD PTR [ebp+0x10]
1001029c:	push   DWORD PTR [ebp+0xc]
1001029f:	push   DWORD PTR [ebp+0x8]
100102a2:	push   esi
100102a3:	call   DWORD PTR [eax+0x2c]
100102a6:	pop    esi
100102a7:	pop    ebp
100102a8:	ret    0x1c
100102ab:	push   0x14
100102ad:	mov    eax,0x1005e614
100102b2:	call   0x10058878
100102b7:	mov    edi,DWORD PTR [ebp+0x8]
100102ba:	mov    ebx,DWORD PTR [ebp+0xc]
100102bd:	mov    eax,DWORD PTR [ebx]
100102bf:	lea    ecx,[ebp-0x20]
100102c2:	push   ecx
100102c3:	push   ebx
100102c4:	call   DWORD PTR [eax+0xc]
100102c7:	xor    ecx,ecx
100102c9:	cmp    eax,ecx
100102cb:	jl     0x1001040b
100102d1:	mov    eax,DWORD PTR [ebp-0x20]
100102d4:	movzx  eax,WORD PTR [eax+0x2c]
100102d8:	mov    esi,eax
100102da:	cmp    esi,ecx
100102dc:	mov    DWORD PTR [ebp-0x18],ecx
100102df:	mov    DWORD PTR [edi+0x18],eax
100102e2:	mov    DWORD PTR [edi+0x14],ecx
100102e5:	je     0x10010366
100102e7:	push   0xc
100102e9:	pop    edx
100102ea:	mul    edx
100102ec:	mov    DWORD PTR [ebp-0x4],ecx
100102ef:	seto   cl
100102f2:	neg    ecx
100102f4:	or     ecx,eax
100102f6:	xor    eax,eax
100102f8:	add    ecx,0x4
100102fb:	setb   al
100102fe:	neg    eax
10010300:	or     eax,ecx
10010302:	push   eax
10010303:	call   0x10042609
10010308:	pop    ecx
10010309:	mov    DWORD PTR [ebp-0x14],eax
1001030c:	test   eax,eax
1001030e:	mov    BYTE PTR [ebp-0x4],0x1
10010312:	je     0x10010334
10010314:	push   0x1000617e
10010319:	push   0x1001018a
1001031e:	push   esi
1001031f:	mov    DWORD PTR [eax],esi
10010321:	add    eax,0x4
10010324:	push   0xc
10010326:	push   eax
10010327:	mov    DWORD PTR [ebp-0x1c],eax
1001032a:	call   0x10044b48
1001032f:	mov    eax,DWORD PTR [ebp-0x1c]
10010332:	jmp    0x10010336
10010334:	xor    eax,eax
10010336:	or     DWORD PTR [ebp-0x4],0xffffffff
1001033a:	mov    DWORD PTR [ebp-0x18],eax
1001033d:	jmp    0x1001034b
1001033f:	mov    eax,0x10010345
10010344:	ret    
10010345:	mov    edi,DWORD PTR [ebp+0x8]
10010348:	mov    ebx,DWORD PTR [ebp+0xc]
1001034b:	cmp    DWORD PTR [ebp-0x18],0x0
1001034f:	jne    0x10010364
10010351:	push   DWORD PTR [ebp-0x20]
10010354:	mov    eax,DWORD PTR [ebx]
10010356:	push   ebx
10010357:	call   DWORD PTR [eax+0x4c]
1001035a:	mov    eax,0x8007000e
1001035f:	jmp    0x1001040d
10010364:	xor    ecx,ecx
10010366:	cmp    DWORD PTR [edi+0x18],ecx
10010369:	mov    DWORD PTR [ebp-0x14],ecx
1001036c:	jle    0x100103fc
10010372:	mov    esi,DWORD PTR [ebp-0x18]
10010375:	mov    eax,DWORD PTR [ebx]
10010377:	lea    ecx,[ebp-0x1c]
1001037a:	push   ecx
1001037b:	push   DWORD PTR [ebp-0x14]
1001037e:	push   ebx
1001037f:	call   DWORD PTR [eax+0x14]
10010382:	test   eax,eax
10010384:	jl     0x100103ea
10010386:	xor    eax,eax
10010388:	mov    DWORD PTR [ebp+0x8],eax
1001038b:	push   eax
1001038c:	push   eax
1001038d:	push   eax
1001038e:	mov    DWORD PTR [ebp-0x4],0x3
10010395:	mov    ecx,DWORD PTR [ebx]
10010397:	lea    eax,[ebp+0x8]
1001039a:	push   eax
1001039b:	mov    eax,DWORD PTR [ebp-0x1c]
1001039e:	push   DWORD PTR [eax]
100103a0:	push   ebx
100103a1:	call   DWORD PTR [ecx+0x30]
100103a4:	test   eax,eax
100103a6:	jl     0x100103d4
100103a8:	mov    ebx,DWORD PTR [ebp+0x8]
100103ab:	mov    eax,DWORD PTR [esi]
100103ad:	and    DWORD PTR [ebp+0x8],0x0
100103b1:	cmp    eax,ebx
100103b3:	je     0x100103be
100103b5:	push   eax
100103b6:	call   DWORD PTR ds:0x100652b4
100103bc:	mov    DWORD PTR [esi],ebx
100103be:	push   DWORD PTR [esi]
100103c0:	call   DWORD PTR ds:0x100652ac
100103c6:	mov    ebx,DWORD PTR [ebp+0xc]
100103c9:	mov    DWORD PTR [esi+0x4],eax
100103cc:	mov    eax,DWORD PTR [ebp-0x1c]
100103cf:	mov    eax,DWORD PTR [eax]
100103d1:	mov    DWORD PTR [esi+0x8],eax
100103d4:	push   DWORD PTR [ebp-0x1c]
100103d7:	mov    eax,DWORD PTR [ebx]
100103d9:	push   ebx
100103da:	call   DWORD PTR [eax+0x50]
100103dd:	or     DWORD PTR [ebp-0x4],0xffffffff
100103e1:	push   DWORD PTR [ebp+0x8]
100103e4:	call   DWORD PTR ds:0x100652b4
100103ea:	inc    DWORD PTR [ebp-0x14]
100103ed:	mov    eax,DWORD PTR [ebp-0x14]
100103f0:	add    esi,0xc
100103f3:	cmp    eax,DWORD PTR [edi+0x18]
100103f6:	jl     0x10010375
100103fc:	mov    eax,DWORD PTR [ebp-0x18]
100103ff:	push   DWORD PTR [ebp-0x20]
10010402:	mov    DWORD PTR [edi+0x14],eax
10010405:	mov    eax,DWORD PTR [ebx]
10010407:	push   ebx
10010408:	call   DWORD PTR [eax+0x4c]
1001040b:	xor    eax,eax
1001040d:	call   0x1005891d
10010412:	ret    0x8
10010415:	push   ebp
10010416:	mov    ebp,esp
10010418:	and    esp,0xfffffff8
1001041b:	push   0xffffffff
1001041d:	push   0x10063089
10010422:	mov    eax,fs:0x0
10010428:	push   eax
10010429:	sub    esp,0x20
1001042c:	push   ebx
1001042d:	push   esi
1001042e:	push   edi
1001042f:	mov    eax,ds:0x1007d030
10010434:	xor    eax,esp
10010436:	push   eax
10010437:	lea    eax,[esp+0x30]
1001043b:	mov    fs:0x0,eax
10010441:	mov    esi,ecx
10010443:	xor    ebx,ebx
10010445:	cmp    DWORD PTR [esi+0xc],ebx
10010448:	je     0x10010464
1001044a:	cmp    DWORD PTR [esi+0x14],ebx
1001044d:	je     0x10010464
1001044f:	xor    eax,eax
10010451:	mov    ecx,DWORD PTR [esp+0x30]
10010455:	mov    DWORD PTR fs:0x0,ecx
1001045c:	pop    ecx
1001045d:	pop    edi
1001045e:	pop    esi
1001045f:	pop    ebx
10010460:	mov    esp,ebp
10010462:	pop    ebp
10010463:	ret    
10010464:	mov    eax,ds:0x1007fbe4
10010469:	add    eax,0x10
1001046c:	mov    DWORD PTR [esp+0x24],eax
10010470:	push   eax
10010471:	mov    DWORD PTR [esp+0x3c],ebx
10010475:	call   DWORD PTR ds:0x100650f0
1001047b:	cmp    DWORD PTR [esi+0xc],ebx
1001047e:	mov    BYTE PTR [esp+0x28],0x1
10010483:	jne    0x1001056f
10010489:	call   0x10006187
1001048e:	mov    edi,eax
10010490:	cmp    edi,ebx
10010492:	jne    0x100104a6
10010494:	mov    esi,0x80004005
10010499:	lea    ecx,[esp+0x24]
1001049d:	call   0x10010991
100104a2:	mov    eax,esi
100104a4:	jmp    0x10010451
100104a6:	mov    DWORD PTR [esp+0x18],ebx
100104aa:	lea    ecx,[esp+0x18]
100104ae:	push   ecx
100104af:	mov    BYTE PTR [esp+0x3c],0x1
100104b4:	push   DWORD PTR [esi]
100104b6:	mov    eax,DWORD PTR [edi]
100104b8:	push   edi
100104b9:	call   DWORD PTR [eax+0x18]
100104bc:	cmp    eax,ebx
100104be:	mov    DWORD PTR [esp+0x20],eax
100104c2:	jl     0x10010555
100104c8:	mov    eax,DWORD PTR [esp+0x18]
100104cc:	cmp    eax,ebx
100104ce:	mov    DWORD PTR [esp+0x14],eax
100104d2:	je     0x100104de
100104d4:	mov    ecx,DWORD PTR [eax]
100104d6:	push   eax
100104d7:	call   DWORD PTR [ecx+0x4]
100104da:	mov    eax,DWORD PTR [esp+0x18]
100104de:	mov    DWORD PTR [esp+0x1c],ebx
100104e2:	lea    edx,[esp+0x1c]
100104e6:	push   edx
100104e7:	push   0x1006c9c4
100104ec:	mov    BYTE PTR [esp+0x40],0x3
100104f1:	mov    ecx,DWORD PTR [eax]
100104f3:	push   eax
100104f4:	call   DWORD PTR [ecx]
100104f6:	test   eax,eax
100104f8:	jl     0x10010508
100104fa:	lea    eax,[esp+0x14]
100104fe:	push   eax
100104ff:	lea    eax,[esp+0x20]
10010503:	call   0x100109a8
10010508:	mov    eax,DWORD PTR [esp+0x14]
1001050c:	mov    DWORD PTR [esi+0xc],eax
1001050f:	mov    eax,ds:0x1007fbe4
10010514:	mov    ecx,eax
10010516:	add    eax,0x4
10010519:	neg    ecx
1001051b:	push   esi
1001051c:	sbb    ecx,ecx
1001051e:	push   0x1001b544
10010523:	and    ecx,eax
10010525:	push   ecx
10010526:	mov    DWORD PTR [esp+0x20],ebx
1001052a:	call   0x1001010c
1001052f:	mov    BYTE PTR [esp+0x38],0x2
10010534:	mov    eax,DWORD PTR [esp+0x1c]
10010538:	cmp    eax,ebx
1001053a:	je     0x10010542
1001053c:	mov    ecx,DWORD PTR [eax]
1001053e:	push   eax
1001053f:	call   DWORD PTR [ecx+0x8]
10010542:	mov    BYTE PTR [esp+0x38],0x1
10010547:	mov    eax,DWORD PTR [esp+0x14]
1001054b:	cmp    eax,ebx
1001054d:	je     0x10010555
1001054f:	mov    ecx,DWORD PTR [eax]
10010551:	push   eax
10010552:	call   DWORD PTR [ecx+0x8]
10010555:	mov    eax,DWORD PTR [edi]
10010557:	push   edi
10010558:	call   DWORD PTR [eax+0x8]
1001055b:	mov    BYTE PTR [esp+0x38],bl
1001055f:	mov    eax,DWORD PTR [esp+0x18]
10010563:	cmp    eax,ebx
10010565:	je     0x10010573
10010567:	mov    ecx,DWORD PTR [eax]
10010569:	push   eax
1001056a:	call   DWORD PTR [ecx+0x8]
1001056d:	jmp    0x10010573
1001056f:	mov    DWORD PTR [esp+0x20],ebx
10010573:	mov    eax,DWORD PTR [esi+0xc]
10010576:	cmp    eax,ebx
10010578:	je     0x1001058a
1001057a:	cmp    DWORD PTR [esi+0x14],ebx
1001057d:	jne    0x1001058a
1001057f:	push   eax
10010580:	push   esi
10010581:	call   0x100102ab
10010586:	mov    DWORD PTR [esp+0x20],eax
1001058a:	mov    esi,DWORD PTR [esp+0x20]
1001058e:	jmp    0x10010499
10010593:	push   ebp
10010594:	mov    ebp,esp
10010596:	push   ecx
10010597:	push   ebx
10010598:	mov    ebx,eax
1001059a:	push   edi
1001059b:	lea    eax,[ebp-0x4]
1001059e:	mov    edi,ecx
100105a0:	push   eax
100105a1:	mov    DWORD PTR [edi+0x8],ebx
100105a4:	call   0x10010a2c
100105a9:	test   eax,eax
100105ab:	jl     0x100105db
100105ad:	push   esi
100105ae:	mov    esi,DWORD PTR [ebp-0x4]
100105b1:	test   esi,esi
100105b3:	mov    DWORD PTR [ebp-0x4],esi
100105b6:	je     0x100105be
100105b8:	mov    eax,DWORD PTR [esi]
100105ba:	push   esi
100105bb:	call   DWORD PTR [eax+0x4]
100105be:	add    edi,0xc
100105c1:	push   edi
100105c2:	lea    eax,[ebp-0x4]
100105c5:	call   0x10010aa8
100105ca:	test   esi,esi
100105cc:	je     0x100105d4
100105ce:	mov    eax,DWORD PTR [esi]
100105d0:	push   esi
100105d1:	call   DWORD PTR [eax+0x8]
100105d4:	add    ebx,0x18
100105d7:	mov    DWORD PTR [esi+0x8],ebx
100105da:	pop    esi
100105db:	pop    edi
100105dc:	pop    ebx
100105dd:	leave  
100105de:	ret    
100105df:	push   0x1c
100105e1:	mov    eax,0x1005f27e
100105e6:	call   0x10058845
100105eb:	mov    eax,DWORD PTR [ebp+0x8]
100105ee:	mov    eax,DWORD PTR [eax+0x8]
100105f1:	test   eax,eax
100105f3:	jne    0x100105fc
100105f5:	mov    eax,0x80004005
100105fa:	jmp    0x10010646
100105fc:	cmp    DWORD PTR [eax],0x0
100105ff:	je     0x100105f5
10010601:	mov    eax,DWORD PTR [eax]
10010603:	lea    ecx,[ebp-0x28]
10010606:	push   ecx
10010607:	call   0x100194bf
1001060c:	and    DWORD PTR [ebp-0x4],0x0
10010610:	cmp    DWORD PTR [eax+0x18],0x10
10010614:	jb     0x1001061b
10010616:	mov    eax,DWORD PTR [eax+0x4]
10010619:	jmp    0x1001061e
1001061b:	add    eax,0x4
1001061e:	push   eax
1001061f:	lea    edi,[ebp+0x8]
10010622:	call   0x10002439
10010627:	push   0x0
10010629:	push   0x1
1001062b:	lea    ecx,[ebp-0x28]
1001062e:	call   0x100012f9
10010633:	mov    eax,edi
10010635:	call   0x1000d464
1001063a:	mov    ecx,DWORD PTR [ebp+0xc]
1001063d:	mov    DWORD PTR [ecx],eax
1001063f:	call   0x1000256d
10010644:	xor    eax,eax
10010646:	call   0x1005891d
1001064b:	ret    0x8
1001064e:	push   0x1c
10010650:	mov    eax,0x1005fc55
10010655:	call   0x10058845
1001065a:	mov    esi,DWORD PTR [ebp+0x8]
1001065d:	mov    eax,DWORD PTR [esi+0x8]
10010660:	test   eax,eax
10010662:	jne    0x1001066b
10010664:	mov    eax,0x80004005
10010669:	jmp    0x100106b6
1001066b:	cmp    DWORD PTR [eax],0x0
1001066e:	je     0x10010664
10010670:	mov    ecx,DWORD PTR [ebp+0xc]
10010673:	push   0x1
10010675:	lea    edi,[ebp+0x8]
10010678:	call   0x1000d3e7
1001067d:	and    DWORD PTR [ebp-0x4],0x0
10010681:	mov    eax,edi
10010683:	call   0x1000d447
10010688:	push   eax
10010689:	lea    ecx,[ebp-0x28]
1001068c:	call   0x100011d6
10010691:	lea    eax,[ebp-0x28]
10010694:	mov    BYTE PTR [ebp-0x4],0x1
10010698:	push   eax
10010699:	mov    eax,DWORD PTR [esi+0x8]
1001069c:	mov    esi,DWORD PTR [eax]
1001069e:	call   0x100074cf
100106a3:	push   0x0
100106a5:	push   0x1
100106a7:	lea    ecx,[ebp-0x28]
100106aa:	call   0x100012f9
100106af:	call   0x1000256d
100106b4:	xor    eax,eax
100106b6:	call   0x1005891d
100106bb:	ret    0x8
100106be:	push   0x1c
100106c0:	mov    eax,0x1005f27e
100106c5:	call   0x10058845
100106ca:	mov    eax,DWORD PTR [ebp+0x8]
100106cd:	mov    eax,DWORD PTR [eax+0x8]
100106d0:	test   eax,eax
100106d2:	jne    0x100106db
100106d4:	mov    eax,0x80004005
100106d9:	jmp    0x10010727
100106db:	cmp    DWORD PTR [eax+0x4],0x0
100106df:	je     0x100106d4
100106e1:	mov    eax,DWORD PTR [eax+0x4]
100106e4:	lea    ecx,[ebp-0x28]
100106e7:	push   ecx
100106e8:	call   0x100194bf
100106ed:	and    DWORD PTR [ebp-0x4],0x0
100106f1:	cmp    DWORD PTR [eax+0x18],0x10
100106f5:	jb     0x100106fc
100106f7:	mov    eax,DWORD PTR [eax+0x4]
100106fa:	jmp    0x100106ff
100106fc:	add    eax,0x4
100106ff:	push   eax
10010700:	lea    edi,[ebp+0x8]
10010703:	call   0x10002439
10010708:	push   0x0
1001070a:	push   0x1
1001070c:	lea    ecx,[ebp-0x28]
1001070f:	call   0x100012f9
10010714:	mov    eax,edi
10010716:	call   0x1000d464
1001071b:	mov    ecx,DWORD PTR [ebp+0xc]
1001071e:	mov    DWORD PTR [ecx],eax
10010720:	call   0x1000256d
10010725:	xor    eax,eax
10010727:	call   0x1005891d
1001072c:	ret    0x8
1001072f:	push   0x1c
10010731:	mov    eax,0x1005fc55
10010736:	call   0x10058845
1001073b:	mov    esi,DWORD PTR [ebp+0x8]
1001073e:	mov    eax,DWORD PTR [esi+0x8]
10010741:	test   eax,eax
10010743:	jne    0x1001074c
10010745:	mov    eax,0x80004005
1001074a:	jmp    0x10010799
1001074c:	cmp    DWORD PTR [eax+0x4],0x0
10010750:	je     0x10010745
10010752:	mov    ecx,DWORD PTR [ebp+0xc]
10010755:	push   0x1
10010757:	lea    edi,[ebp+0x8]
1001075a:	call   0x1000d3e7
1001075f:	and    DWORD PTR [ebp-0x4],0x0
10010763:	mov    eax,edi
10010765:	call   0x1000d447
1001076a:	push   eax
1001076b:	lea    ecx,[ebp-0x28]
1001076e:	call   0x100011d6
10010773:	lea    eax,[ebp-0x28]
10010776:	mov    BYTE PTR [ebp-0x4],0x1
1001077a:	push   eax
1001077b:	mov    eax,DWORD PTR [esi+0x8]
1001077e:	mov    esi,DWORD PTR [eax+0x4]
10010781:	call   0x100074cf
10010786:	push   0x0
10010788:	push   0x1
1001078a:	lea    ecx,[ebp-0x28]
1001078d:	call   0x100012f9
10010792:	call   0x1000256d
10010797:	xor    eax,eax
10010799:	call   0x1005891d
1001079e:	ret    0x8
100107a1:	push   0x1c
100107a3:	mov    eax,0x1005f27e
100107a8:	call   0x10058845
100107ad:	mov    eax,DWORD PTR [ebp+0x8]
100107b0:	mov    eax,DWORD PTR [eax+0x8]
100107b3:	test   eax,eax
100107b5:	jne    0x100107be
100107b7:	mov    eax,0x80004005
100107bc:	jmp    0x1001080a
100107be:	cmp    DWORD PTR [eax+0x8],0x0
100107c2:	je     0x100107b7
100107c4:	mov    eax,DWORD PTR [eax+0x8]
100107c7:	lea    ecx,[ebp-0x28]
100107ca:	push   ecx
100107cb:	call   0x100194bf
100107d0:	and    DWORD PTR [ebp-0x4],0x0
100107d4:	cmp    DWORD PTR [eax+0x18],0x10
100107d8:	jb     0x100107df
100107da:	mov    eax,DWORD PTR [eax+0x4]
100107dd:	jmp    0x100107e2
100107df:	add    eax,0x4
100107e2:	push   eax
100107e3:	lea    edi,[ebp+0x8]
100107e6:	call   0x10002439
100107eb:	push   0x0
100107ed:	push   0x1
100107ef:	lea    ecx,[ebp-0x28]
100107f2:	call   0x100012f9
100107f7:	mov    eax,edi
100107f9:	call   0x1000d464
100107fe:	mov    ecx,DWORD PTR [ebp+0xc]
10010801:	mov    DWORD PTR [ecx],eax
10010803:	call   0x1000256d
10010808:	xor    eax,eax
1001080a:	call   0x1005891d
1001080f:	ret    0x8
10010812:	push   0x1c
10010814:	mov    eax,0x1005fc55
10010819:	call   0x10058845
1001081e:	mov    esi,DWORD PTR [ebp+0x8]
10010821:	mov    eax,DWORD PTR [esi+0x8]
10010824:	test   eax,eax
10010826:	jne    0x1001082f
10010828:	mov    eax,0x80004005
1001082d:	jmp    0x1001087c
1001082f:	cmp    DWORD PTR [eax+0x8],0x0
10010833:	je     0x10010828
10010835:	mov    ecx,DWORD PTR [ebp+0xc]
10010838:	push   0x1
1001083a:	lea    edi,[ebp+0x8]
1001083d:	call   0x1000d3e7
10010842:	and    DWORD PTR [ebp-0x4],0x0
10010846:	mov    eax,edi
10010848:	call   0x1000d447
1001084d:	push   eax
1001084e:	lea    ecx,[ebp-0x28]
10010851:	call   0x100011d6
10010856:	lea    eax,[ebp-0x28]
10010859:	mov    BYTE PTR [ebp-0x4],0x1
1001085d:	push   eax
1001085e:	mov    eax,DWORD PTR [esi+0x8]
10010861:	mov    esi,DWORD PTR [eax+0x8]
10010864:	call   0x100074cf
10010869:	push   0x0
1001086b:	push   0x1
1001086d:	lea    ecx,[ebp-0x28]
10010870:	call   0x100012f9
10010875:	call   0x1000256d
1001087a:	xor    eax,eax
1001087c:	call   0x1005891d
10010881:	ret    0x8
10010884:	mov    eax,DWORD PTR [esp+0x4]
10010888:	push   esi
10010889:	mov    esi,DWORD PTR [eax+0xc]
1001088c:	test   esi,esi
1001088e:	push   edi
1001088f:	je     0x10010897
10010891:	mov    eax,DWORD PTR [esi]
10010893:	push   esi
10010894:	call   DWORD PTR [eax+0x4]
10010897:	mov    eax,DWORD PTR [esp+0x10]
1001089b:	test   eax,eax
1001089d:	jne    0x100108a6
1001089f:	mov    edi,0x80004003
100108a4:	jmp    0x100108b4
100108a6:	test   esi,esi
100108a8:	mov    DWORD PTR [eax],esi
100108aa:	je     0x100108b2
100108ac:	mov    eax,DWORD PTR [esi]
100108ae:	push   esi
100108af:	call   DWORD PTR [eax+0x4]
100108b2:	xor    edi,edi
100108b4:	test   esi,esi
100108b6:	je     0x100108be
100108b8:	mov    eax,DWORD PTR [esi]
100108ba:	push   esi
100108bb:	call   DWORD PTR [eax+0x8]
100108be:	mov    eax,edi
100108c0:	pop    edi
100108c1:	pop    esi
100108c2:	ret    0x8
100108c5:	push   edi
100108c6:	mov    edi,DWORD PTR [esp+0x14]
100108ca:	mov    ecx,0x1007e7e4
100108cf:	call   0x10010198
100108d4:	pop    edi
100108d5:	ret    0x10
100108d8:	push   DWORD PTR [esp+0x18]
100108dc:	mov    eax,0x1007e7e4
100108e1:	push   DWORD PTR [esp+0x14]
100108e5:	push   DWORD PTR [esp+0x14]
100108e9:	call   0x100101c6
100108ee:	ret    0x18
100108f1:	push   ebp
100108f2:	mov    ebp,esp
100108f4:	push   DWORD PTR [ebp+0x28]
100108f7:	mov    eax,0x1007e7e4
100108fc:	push   DWORD PTR [ebp+0x24]
100108ff:	push   DWORD PTR [ebp+0x20]
10010902:	push   DWORD PTR [ebp+0x1c]
10010905:	push   DWORD PTR [ebp+0x18]
10010908:	push   DWORD PTR [ebp+0xc]
1001090b:	push   DWORD PTR [ebp+0x8]
1001090e:	call   0x10010269
10010913:	pop    ebp
10010914:	ret    0x24
10010917:	mov    DWORD PTR [ecx],0x1006c980
1001091d:	mov    DWORD PTR [ecx+0x4],0xc0000001
10010924:	mov    ecx,DWORD PTR ds:0x1007fbe4
1001092a:	mov    eax,DWORD PTR [ecx]
1001092c:	jmp    DWORD PTR [eax+0x8]
1001092f:	mov    eax,DWORD PTR [esp+0x4]
10010933:	inc    DWORD PTR [eax+0x4]
10010936:	mov    eax,DWORD PTR [eax+0x4]
10010939:	ret    0x4
1001093c:	mov    ecx,DWORD PTR [esp+0x4]
10010940:	dec    DWORD PTR [ecx+0x4]
10010943:	push   esi
10010944:	mov    esi,DWORD PTR [ecx+0x4]
10010947:	jne    0x10010954
10010949:	test   ecx,ecx
1001094b:	je     0x10010954
1001094d:	mov    eax,DWORD PTR [ecx]
1001094f:	push   0x1
10010951:	call   DWORD PTR [eax+0x30]
10010954:	mov    eax,esi
10010956:	pop    esi
10010957:	ret    0x4
1001095a:	push   ebx
1001095b:	push   DWORD PTR [esp+0xc]
1001095f:	mov    ebx,DWORD PTR [esp+0x14]
10010963:	push   DWORD PTR [esp+0xc]
10010967:	mov    eax,0x1006c95c
1001096c:	call   0x10010077
10010971:	pop    ebx
10010972:	ret    0xc
10010975:	push   esi
10010976:	mov    esi,ecx
10010978:	call   0x10010917
1001097d:	test   BYTE PTR [esp+0x8],0x1
10010982:	je     0x1001098b
10010984:	push   esi
10010985:	call   0x10041d92
1001098a:	pop    ecx
1001098b:	mov    eax,esi
1001098d:	pop    esi
1001098e:	ret    0x4
10010991:	push   esi
10010992:	mov    esi,ecx
10010994:	cmp    BYTE PTR [esi+0x4],0x0
10010998:	je     0x100109a6
1001099a:	push   DWORD PTR [esi]
1001099c:	call   DWORD PTR ds:0x100650ec
100109a2:	mov    BYTE PTR [esi+0x4],0x0
100109a6:	pop    esi
100109a7:	ret    
100109a8:	push   ebp
100109a9:	mov    ebp,esp
100109ab:	push   ecx
100109ac:	push   ecx
100109ad:	mov    ecx,DWORD PTR [ebp+0x8]
100109b0:	push   ebx
100109b1:	push   esi
100109b2:	mov    esi,eax
100109b4:	mov    eax,DWORD PTR [ecx]
100109b6:	test   eax,eax
100109b8:	mov    ebx,DWORD PTR [esi]
100109ba:	jne    0x100109d6
100109bc:	test   ebx,ebx
100109be:	je     0x10010a24
100109c0:	xor    al,al
100109c2:	test   al,al
100109c4:	jne    0x10010a24
100109c6:	mov    eax,DWORD PTR [esi]
100109c8:	push   0x1006c9d4
100109cd:	mov    esi,ecx
100109cf:	call   0x10010027
100109d4:	jmp    0x10010a26
100109d6:	test   ebx,ebx
100109d8:	je     0x100109c0
100109da:	and    DWORD PTR [ebp-0x4],0x0
100109de:	and    DWORD PTR [ebp-0x8],0x0
100109e2:	mov    ecx,DWORD PTR [eax]
100109e4:	push   edi
100109e5:	lea    edx,[ebp-0x4]
100109e8:	push   edx
100109e9:	mov    edi,0x1006c9b4
100109ee:	push   edi
100109ef:	push   eax
100109f0:	call   DWORD PTR [ecx]
100109f2:	mov    eax,DWORD PTR [ebx]
100109f4:	lea    ecx,[ebp-0x8]
100109f7:	push   ecx
100109f8:	push   edi
100109f9:	push   ebx
100109fa:	call   DWORD PTR [eax]
100109fc:	mov    eax,DWORD PTR [ebp-0x8]
100109ff:	cmp    DWORD PTR [ebp-0x4],eax
10010a02:	pop    edi
10010a03:	sete   bl
10010a06:	test   eax,eax
10010a08:	je     0x10010a10
10010a0a:	mov    ecx,DWORD PTR [eax]
10010a0c:	push   eax
10010a0d:	call   DWORD PTR [ecx+0x8]
10010a10:	mov    eax,DWORD PTR [ebp-0x4]
10010a13:	test   eax,eax
10010a15:	je     0x10010a1d
10010a17:	mov    ecx,DWORD PTR [eax]
10010a19:	push   eax
10010a1a:	call   DWORD PTR [ecx+0x8]
10010a1d:	mov    ecx,DWORD PTR [ebp+0x8]
10010a20:	mov    al,bl
10010a22:	jmp    0x100109c2
10010a24:	mov    eax,DWORD PTR [ecx]
10010a26:	pop    esi
10010a27:	pop    ebx
10010a28:	leave  
10010a29:	ret    0x4
10010a2c:	push   0xc
10010a2e:	mov    eax,0x1005e9ff
10010a33:	call   0x10058878
10010a38:	mov    ebx,DWORD PTR [ebp+0x8]
10010a3b:	xor    edi,edi
10010a3d:	cmp    ebx,edi
10010a3f:	jne    0x10010a48
10010a41:	mov    eax,0x80004003
10010a46:	jmp    0x10010aa0
10010a48:	push   0xc
10010a4a:	mov    DWORD PTR [ebx],edi
10010a4c:	mov    DWORD PTR [ebp-0x14],0x8007000e
10010a53:	mov    DWORD PTR [ebp-0x4],edi
10010a56:	call   0x1004239e
10010a5b:	mov    esi,eax
10010a5d:	cmp    esi,edi
10010a5f:	pop    ecx
10010a60:	je     0x10010a7d
10010a62:	mov    DWORD PTR [esi+0x4],edi
10010a65:	mov    DWORD PTR [esi+0x8],edi
10010a68:	mov    DWORD PTR [esi],0x1006c980
10010a6e:	mov    ecx,DWORD PTR ds:0x1007fbe4
10010a74:	mov    eax,DWORD PTR [ecx]
10010a76:	call   DWORD PTR [eax+0x4]
10010a79:	mov    eax,esi
10010a7b:	jmp    0x10010a8e
10010a7d:	xor    eax,eax
10010a7f:	jmp    0x10010a8e
10010a81:	mov    eax,0x10010a87
10010a86:	ret    
10010a87:	mov    ebx,DWORD PTR [ebp+0x8]
10010a8a:	xor    edi,edi
10010a8c:	mov    eax,edi
10010a8e:	cmp    eax,edi
10010a90:	je     0x10010a9b
10010a92:	inc    DWORD PTR [eax+0x4]
10010a95:	dec    DWORD PTR [eax+0x4]
10010a98:	mov    DWORD PTR [ebp-0x14],edi
10010a9b:	mov    DWORD PTR [ebx],eax
10010a9d:	mov    eax,DWORD PTR [ebp-0x14]
10010aa0:	call   0x1005891d
10010aa5:	ret    0x4
10010aa8:	push   ebp
10010aa9:	mov    ebp,esp
10010aab:	push   ecx
10010aac:	push   ecx
10010aad:	mov    ecx,DWORD PTR [ebp+0x8]
10010ab0:	push   ebx
10010ab1:	push   esi
10010ab2:	mov    esi,eax
10010ab4:	mov    eax,DWORD PTR [ecx]
10010ab6:	test   eax,eax
10010ab8:	mov    ebx,DWORD PTR [esi]
10010aba:	jne    0x10010ad6
10010abc:	test   ebx,ebx
10010abe:	je     0x10010b24
10010ac0:	xor    al,al
10010ac2:	test   al,al
10010ac4:	jne    0x10010b24
10010ac6:	mov    eax,DWORD PTR [esi]
10010ac8:	push   0x1006c94c
10010acd:	mov    esi,ecx
10010acf:	call   0x10010027
10010ad4:	jmp    0x10010b26
10010ad6:	test   ebx,ebx
10010ad8:	je     0x10010ac0
10010ada:	and    DWORD PTR [ebp-0x4],0x0
10010ade:	and    DWORD PTR [ebp-0x8],0x0
10010ae2:	mov    ecx,DWORD PTR [eax]
10010ae4:	push   edi
10010ae5:	lea    edx,[ebp-0x4]
10010ae8:	push   edx
10010ae9:	mov    edi,0x1006c9b4
10010aee:	push   edi
10010aef:	push   eax
10010af0:	call   DWORD PTR [ecx]
10010af2:	mov    eax,DWORD PTR [ebx]
10010af4:	lea    ecx,[ebp-0x8]
10010af7:	push   ecx
10010af8:	push   edi
10010af9:	push   ebx
10010afa:	call   DWORD PTR [eax]
10010afc:	mov    eax,DWORD PTR [ebp-0x8]
10010aff:	cmp    DWORD PTR [ebp-0x4],eax
10010b02:	pop    edi
10010b03:	sete   bl
10010b06:	test   eax,eax
10010b08:	je     0x10010b10
10010b0a:	mov    ecx,DWORD PTR [eax]
10010b0c:	push   eax
10010b0d:	call   DWORD PTR [ecx+0x8]
10010b10:	mov    eax,DWORD PTR [ebp-0x4]
10010b13:	test   eax,eax
10010b15:	je     0x10010b1d
10010b17:	mov    ecx,DWORD PTR [eax]
10010b19:	push   eax
10010b1a:	call   DWORD PTR [ecx+0x8]
10010b1d:	mov    ecx,DWORD PTR [ebp+0x8]
10010b20:	mov    al,bl
10010b22:	jmp    0x10010ac2
10010b24:	mov    eax,DWORD PTR [ecx]
10010b26:	pop    esi
10010b27:	pop    ebx
10010b28:	leave  
10010b29:	ret    0x4
10010b2c:	push   edi
10010b2d:	mov    edi,eax
10010b2f:	cmp    edi,esi
10010b31:	je     0x10010b4a
10010b33:	call   0x1000256d
10010b38:	mov    eax,DWORD PTR [esi]
10010b3a:	test   eax,eax
10010b3c:	mov    DWORD PTR [edi],eax
10010b3e:	je     0x10010b4a
10010b40:	add    eax,0x8
10010b43:	push   eax
10010b44:	call   DWORD PTR ds:0x100650a4
10010b4a:	mov    eax,edi
10010b4c:	pop    edi
10010b4d:	ret    
10010b4e:	push   0x4
10010b50:	mov    eax,0x1005f3f5
10010b55:	call   0x10058845
10010b5a:	mov    edi,ecx
10010b5c:	cmp    DWORD PTR [ebp+0x8],0x0
10010b60:	je     0x10010b73
10010b62:	mov    eax,DWORD PTR [edi]
10010b64:	test   eax,eax
10010b66:	je     0x10010b6c
10010b68:	mov    eax,DWORD PTR [eax]
10010b6a:	jmp    0x10010b6e
10010b6c:	xor    eax,eax
10010b6e:	cmp    eax,DWORD PTR [ebp+0x8]
10010b71:	je     0x10010bad
10010b73:	call   0x1000256d
10010b78:	push   0xc
10010b7a:	call   0x1004239e
10010b7f:	mov    esi,eax
10010b81:	pop    ecx
10010b82:	mov    DWORD PTR [ebp-0x10],esi
10010b85:	and    DWORD PTR [ebp-0x4],0x0
10010b89:	test   esi,esi
10010b8b:	je     0x10010b97
10010b8d:	push   DWORD PTR [ebp+0x8]
10010b90:	call   0x100025ad
10010b95:	jmp    0x10010b99
10010b97:	xor    eax,eax
10010b99:	or     DWORD PTR [ebp-0x4],0xffffffff
10010b9d:	test   eax,eax
10010b9f:	mov    DWORD PTR [edi],eax
10010ba1:	jne    0x10010bad
10010ba3:	push   0x8007000e
10010ba8:	call   0x1004fa00
10010bad:	mov    eax,edi
10010baf:	call   0x1005891d
10010bb4:	ret    0x4
10010bb7:	push   0x4
10010bb9:	mov    eax,0x1005f3f5
10010bbe:	call   0x10058845
10010bc3:	cmp    DWORD PTR [esi],0x0
10010bc6:	jne    0x10010bfb
10010bc8:	push   0xc
10010bca:	call   0x1004239e
10010bcf:	pop    ecx
10010bd0:	test   eax,eax
10010bd2:	je     0x10010be4
10010bd4:	and    DWORD PTR [eax+0x4],0x0
10010bd8:	and    DWORD PTR [eax],0x0
10010bdb:	mov    DWORD PTR [eax+0x8],0x1
10010be2:	jmp    0x10010be6
10010be4:	xor    eax,eax
10010be6:	or     DWORD PTR [esp+0x1c],0xffffffff
10010beb:	test   eax,eax
10010bed:	mov    DWORD PTR [esi],eax
10010bef:	jne    0x10010bfb
10010bf1:	push   0x8007000e
10010bf6:	call   0x1004fa00
10010bfb:	mov    eax,DWORD PTR [esi]
10010bfd:	call   0x1005891d
10010c02:	ret    
10010c03:	push   0x34
10010c05:	mov    eax,0x10060dbf
10010c0a:	call   0x100588ae
10010c0f:	mov    eax,DWORD PTR [ebp+0x8]
10010c12:	xor    ebx,ebx
10010c14:	mov    esi,ecx
10010c16:	mov    DWORD PTR [ebp-0x34],eax
10010c19:	mov    DWORD PTR [ebp-0x40],esi
10010c1c:	mov    DWORD PTR [ebp-0x3c],ebx
10010c1f:	xor    edi,edi
10010c21:	push   0x1
10010c23:	lea    eax,[ebp-0x30]
10010c26:	push   eax
10010c27:	push   esi
10010c28:	mov    eax,edi
10010c2a:	mov    BYTE PTR [ebp-0x30],0x3b
10010c2e:	call   0x1000cb54
10010c33:	cmp    eax,0xffffffff
10010c36:	mov    DWORD PTR [ebp-0x38],eax
10010c39:	jne    0x10010c41
10010c3b:	mov    eax,DWORD PTR [esi+0x14]
10010c3e:	mov    DWORD PTR [ebp-0x38],eax
10010c41:	cmp    DWORD PTR [ebp-0x38],edi
10010c44:	jbe    0x10010cd8
10010c4a:	push   ebx
10010c4b:	lea    ecx,[ebp-0x2c]
10010c4e:	mov    DWORD PTR [ebp-0x14],0xf
10010c55:	call   0x10001425
10010c5a:	mov    DWORD PTR [ebp-0x4],ebx
10010c5d:	jmp    0x10010c93
10010c5f:	mov    eax,esi
10010c61:	call   0x1000473e
10010c66:	cmp    BYTE PTR [eax],0x20
10010c69:	je     0x10010c92
10010c6b:	mov    eax,esi
10010c6d:	call   0x1000473e
10010c72:	movsx  eax,BYTE PTR [eax]
10010c75:	push   eax
10010c76:	call   0x10044b21
10010c7b:	pop    ecx
10010c7c:	mov    BYTE PTR [ebp-0x3c],al
10010c7f:	push   DWORD PTR [ebp-0x3c]
10010c82:	xor    ebx,ebx
10010c84:	inc    ebx
10010c85:	lea    esi,[ebp-0x2c]
10010c88:	call   0x1000cae0
10010c8d:	mov    esi,DWORD PTR [ebp-0x40]
10010c90:	xor    ebx,ebx
10010c92:	inc    edi
10010c93:	cmp    edi,DWORD PTR [ebp-0x38]
10010c96:	jb     0x10010c5f
10010c98:	push   0x70624764
10010c9d:	push   0x1006c9e4
10010ca2:	inc    edi
10010ca3:	call   0x10003d63
10010ca8:	pop    ecx
10010ca9:	pop    ecx
10010caa:	push   ebx
10010cab:	push   eax
10010cac:	push   0x8
10010cae:	push   0x1006ca10
10010cb3:	call   0x10003d75
10010cb8:	add    esp,0xc
10010cbb:	push   eax
10010cbc:	lea    eax,[ebp-0x2c]
10010cbf:	push   eax
10010cc0:	call   0x1000c40c
10010cc5:	test   eax,eax
10010cc7:	lea    ecx,[ebp-0x2c]
10010cca:	je     0x10010cf7
10010ccc:	or     DWORD PTR [ebp-0x4],0xffffffff
10010cd0:	push   ebx
10010cd1:	push   0x1
10010cd3:	call   0x100012f9
10010cd8:	cmp    edi,DWORD PTR [esi+0x14]
10010cdb:	jb     0x10010c21
10010ce1:	mov    ecx,DWORD PTR [ebp-0x34]
10010ce4:	push   0x1006bb18
10010ce9:	call   0x100011d6
10010cee:	mov    eax,DWORD PTR [ebp-0x34]
10010cf1:	call   0x10058931
10010cf6:	ret    
10010cf7:	push   0x8
10010cf9:	push   ebx
10010cfa:	call   0x100013b6
10010cff:	mov    ecx,DWORD PTR [ebp-0x34]
10010d02:	lea    eax,[ebp-0x2c]
10010d05:	push   eax
10010d06:	call   0x100011b0
10010d0b:	push   ebx
10010d0c:	push   0x1
10010d0e:	lea    ecx,[ebp-0x2c]
10010d11:	call   0x100012f9
10010d16:	jmp    0x10010cee
10010d18:	push   0x3c
10010d1a:	mov    eax,0x10060d9c
10010d1f:	call   0x10058845
10010d24:	mov    edi,ecx
10010d26:	push   0x7717605a
10010d2b:	push   0x1006ca24
10010d30:	call   0x10003d63
10010d35:	push   eax
10010d36:	push   0x10
10010d38:	push   0x1006ca50
10010d3d:	call   0x10003d75
10010d42:	add    esp,0x14
10010d45:	push   eax
10010d46:	lea    ecx,[ebp-0x28]
10010d49:	call   0x100011d6
10010d4e:	xor    ebx,ebx
10010d50:	push   ebx
10010d51:	lea    eax,[ebp-0x28]
10010d54:	push   eax
10010d55:	lea    eax,[ebp-0x44]
10010d58:	push   eax
10010d59:	mov    eax,DWORD PTR [ebp+0x8]
10010d5c:	mov    DWORD PTR [ebp-0x4],ebx
10010d5f:	mov    eax,DWORD PTR [eax+0x34]
10010d62:	add    eax,0x20
10010d65:	call   0x1000800f
10010d6a:	push   0x1006ca1c
10010d6f:	mov    esi,eax
10010d71:	mov    BYTE PTR [ebp-0x4],0x1
10010d75:	call   0x10005e33
10010d7a:	pop    ecx
10010d7b:	push   ebx
10010d7c:	push   0x1
10010d7e:	lea    ecx,[ebp-0x44]
10010d81:	mov    BYTE PTR [ebp+0xb],al
10010d84:	call   0x100012f9
10010d89:	or     DWORD PTR [ebp-0x4],0xffffffff
10010d8d:	push   ebx
10010d8e:	push   0x1
10010d90:	lea    ecx,[ebp-0x28]
10010d93:	call   0x100012f9
10010d98:	cmp    BYTE PTR [ebp+0xb],bl
10010d9b:	je     0x10010dc5
10010d9d:	push   DWORD PTR [ebp+0x14]
10010da0:	lea    eax,[ebp+0x10]
10010da3:	push   DWORD PTR [ebp+0x10]
10010da6:	push   DWORD PTR [ebp+0xc]
10010da9:	push   eax
10010daa:	call   0x1002f0b0
10010daf:	add    esp,0x10
10010db2:	push   eax
10010db3:	call   0x1000209f
10010db8:	push   DWORD PTR [ebp+0x10]
10010dbb:	call   0x10041d92
10010dc0:	mov    eax,DWORD PTR [edi]
10010dc2:	pop    ecx
10010dc3:	jmp    0x10010dd0
10010dc5:	mov    eax,DWORD PTR [ebp+0x10]
10010dc8:	mov    ecx,DWORD PTR [ebp+0x14]
10010dcb:	mov    DWORD PTR [ecx],eax
10010dcd:	mov    eax,DWORD PTR [ebp+0xc]
10010dd0:	call   0x1005891d
10010dd5:	ret    0x10
10010dd8:	xor    ecx,ecx
10010dda:	cmp    DWORD PTR [esp+0x8],ecx
10010dde:	je     0x10010df2
10010de0:	mov    eax,DWORD PTR [esp+0x4]
10010de4:	lea    eax,[eax+ecx*2]
10010de7:	rol    WORD PTR [eax],0x8
10010deb:	inc    ecx
10010dec:	cmp    ecx,DWORD PTR [esp+0x8]
10010df0:	jne    0x10010de0
10010df2:	ret    
10010df3:	push   0x14
10010df5:	mov    eax,0x1005f25b
10010dfa:	call   0x10058845
10010dff:	mov    edi,DWORD PTR ds:0x1006508c
10010e05:	xor    esi,esi
10010e07:	push   esi
10010e08:	push   esi
10010e09:	push   DWORD PTR [ebp+0x14]
10010e0c:	push   DWORD PTR [ebp+0x10]
10010e0f:	push   0x8
10010e11:	push   DWORD PTR [ebp+0xc]
10010e14:	call   edi
10010e16:	mov    ebx,eax
10010e18:	cmp    ebx,esi
10010e1a:	je     0x10010eb9
10010e20:	lea    eax,[ebp-0x10]
10010e23:	mov    DWORD PTR [ebp-0x10],esi
10010e26:	push   eax
10010e27:	mov    eax,ebx
10010e29:	lea    esi,[ebp-0x20]
10010e2c:	call   0x10011ba0
10010e31:	and    DWORD PTR [ebp-0x4],0x0
10010e35:	mov    esi,DWORD PTR [ebp-0x1c]
10010e38:	test   esi,esi
10010e3a:	je     0x10010e45
10010e3c:	mov    eax,DWORD PTR [ebp-0x18]
10010e3f:	sub    eax,esi
10010e41:	sar    eax,1
10010e43:	jne    0x10010e4a
10010e45:	call   0x100422b0
10010e4a:	push   ebx
10010e4b:	push   esi
10010e4c:	push   DWORD PTR [ebp+0x14]
10010e4f:	push   DWORD PTR [ebp+0x10]
10010e52:	push   0x8
10010e54:	push   DWORD PTR [ebp+0xc]
10010e57:	call   edi
10010e59:	cmp    eax,ebx
10010e5b:	jne    0x10010eae
10010e5d:	test   esi,esi
10010e5f:	je     0x10010e6a
10010e61:	mov    eax,DWORD PTR [ebp-0x18]
10010e64:	sub    eax,esi
10010e66:	sar    eax,1
10010e68:	jne    0x10010e6f
10010e6a:	call   0x100422b0
10010e6f:	push   0x0
10010e71:	push   ebx
10010e72:	push   esi
10010e73:	call   DWORD PTR ds:0x1006529c
10010e79:	mov    ecx,eax
10010e7b:	lea    edi,[ebp+0x14]
10010e7e:	call   0x1000d3e7
10010e83:	mov    ebx,DWORD PTR [ebp+0x8]
10010e86:	mov    esi,eax
10010e88:	lea    eax,[ebx+0x30]
10010e8b:	call   0x10010b2c
10010e90:	call   0x1000256d
10010e95:	cmp    DWORD PTR [ebp-0x1c],0x0
10010e99:	mov    eax,DWORD PTR [ebp+0xc]
10010e9c:	mov    DWORD PTR [ebx+0x24],eax
10010e9f:	je     0x10010eaa
10010ea1:	push   DWORD PTR [ebp-0x1c]
10010ea4:	call   0x10041d92
10010ea9:	pop    ecx
10010eaa:	mov    al,0x1
10010eac:	jmp    0x10010ebb
10010eae:	test   esi,esi
10010eb0:	je     0x10010eb9
10010eb2:	push   esi
10010eb3:	call   0x10041d92
10010eb8:	pop    ecx
10010eb9:	xor    al,al
10010ebb:	call   0x1005891d
10010ec0:	ret    0x10
10010ec3:	push   0x8
10010ec5:	mov    eax,0x1005e5e7
10010eca:	call   0x10058845
10010ecf:	mov    ebx,ecx
10010ed1:	test   bl,0x1
10010ed4:	je     0x10010edd
10010ed6:	xor    al,al
10010ed8:	jmp    0x10010f6c
10010edd:	xor    edi,edi
10010edf:	mov    DWORD PTR [ebp-0x10],edi
10010ee2:	cmp    DWORD PTR [ebp+0xc],0x4b1
10010ee9:	mov    DWORD PTR [ebp-0x4],edi
10010eec:	mov    esi,DWORD PTR [ebp+0x10]
10010eef:	jne    0x10010f33
10010ef1:	mov    eax,ebx
10010ef3:	shr    eax,1
10010ef5:	xor    ecx,ecx
10010ef7:	push   0x2
10010ef9:	pop    edx
10010efa:	mov    DWORD PTR [ebp-0x14],eax
10010efd:	mul    edx
10010eff:	seto   cl
10010f02:	neg    ecx
10010f04:	or     ecx,eax
10010f06:	push   ecx
10010f07:	call   0x10042609
10010f0c:	mov    esi,eax
10010f0e:	cmp    esi,edi
10010f10:	pop    ecx
10010f11:	je     0x10010f1a
10010f13:	push   edi
10010f14:	call   0x10041d92
10010f19:	pop    ecx
10010f1a:	push   ebx
10010f1b:	push   DWORD PTR [ebp+0x10]
10010f1e:	mov    DWORD PTR [ebp-0x10],esi
10010f21:	push   esi
10010f22:	call   0x10043ed0
10010f27:	push   DWORD PTR [ebp-0x14]
10010f2a:	push   esi
10010f2b:	call   0x10010dd8
10010f30:	add    esp,0x14
10010f33:	push   0x0
10010f35:	shr    ebx,1
10010f37:	push   ebx
10010f38:	push   esi
10010f39:	call   DWORD PTR ds:0x1006529c
10010f3f:	mov    ecx,eax
10010f41:	lea    edi,[ebp+0x10]
10010f44:	call   0x1000d3e7
10010f49:	mov    ebx,DWORD PTR [ebp+0x8]
10010f4c:	mov    esi,eax
10010f4e:	lea    eax,[ebx+0x30]
10010f51:	call   0x10010b2c
10010f56:	call   0x1000256d
10010f5b:	mov    eax,DWORD PTR [ebp+0xc]
10010f5e:	push   DWORD PTR [ebp-0x10]
10010f61:	mov    DWORD PTR [ebx+0x24],eax
10010f64:	call   0x10041d92
10010f69:	pop    ecx
10010f6a:	mov    al,0x1
10010f6c:	call   0x1005891d
10010f71:	ret    0xc
10010f74:	mov    cl,BYTE PTR [eax]
10010f76:	cmp    cl,0xff
10010f79:	jne    0x10010f8d
10010f7b:	cmp    BYTE PTR [eax+0x1],0xfe
10010f7f:	jne    0x10010f8d
10010f81:	mov    eax,0x4b0
10010f86:	mov    DWORD PTR [edx],0x2
10010f8c:	ret    
10010f8d:	cmp    cl,0xfe
10010f90:	jne    0x10010f9f
10010f92:	cmp    BYTE PTR [eax+0x1],0xff
10010f96:	jne    0x10010f9f
10010f98:	mov    eax,0x4b1
10010f9d:	jmp    0x10010f86
10010f9f:	and    DWORD PTR [edx],0x0
10010fa2:	xor    eax,eax
10010fa4:	ret    
10010fa5:	push   0x14
10010fa7:	mov    eax,0x100619ca
10010fac:	call   0x10058845
10010fb1:	xor    esi,esi
10010fb3:	mov    DWORD PTR [ebp-0x18],esi
10010fb6:	mov    DWORD PTR [ebp-0x4],esi
10010fb9:	mov    eax,DWORD PTR [edi+0x34]
10010fbc:	mov    eax,DWORD PTR [eax+0xc]
10010fbf:	cmp    DWORD PTR [eax+0x1c],0x10
10010fc3:	mov    ecx,DWORD PTR [eax+0x18]
10010fc6:	mov    DWORD PTR [ebp-0x10],esi
10010fc9:	jb     0x10010fd0
10010fcb:	mov    eax,DWORD PTR [eax+0x8]
10010fce:	jmp    0x10010fd3
10010fd0:	add    eax,0x8
10010fd3:	lea    edx,[ebp-0x10]
10010fd6:	push   edx
10010fd7:	push   ecx
10010fd8:	push   eax
10010fd9:	push   edi
10010fda:	lea    ecx,[ebp-0x18]
10010fdd:	call   0x10010d18
10010fe2:	cmp    eax,esi
10010fe4:	mov    DWORD PTR [ebp-0x14],eax
10010fe7:	je     0x1001122d
10010fed:	or     DWORD PTR [edi+0x28],0xffffffff
10010ff1:	mov    eax,DWORD PTR [edi+0x34]
10010ff4:	mov    eax,DWORD PTR [eax+0xc]
10010ff7:	cmp    DWORD PTR [eax+0x18],esi
10010ffa:	je     0x1001122d
10011000:	push   0x70daefa8
10011005:	push   0x6325fbc6
1001100a:	push   0xe6bf83c
1001100f:	push   0x49938fa
10011014:	push   0x28cf99d6
10011019:	push   0x65b8f802
1001101e:	push   0x6766a5e4
10011023:	push   0x1006ca64
10011028:	call   0x10003d63
1001102d:	pop    ecx
1001102e:	pop    ecx
1001102f:	push   eax
10011030:	call   0x10003d63
10011035:	pop    ecx
10011036:	pop    ecx
10011037:	push   eax
10011038:	call   0x10003d63
1001103d:	pop    ecx
1001103e:	pop    ecx
1001103f:	push   eax
10011040:	call   0x10003d63
10011045:	pop    ecx
10011046:	pop    ecx
10011047:	push   eax
10011048:	call   0x10003d63
1001104d:	pop    ecx
1001104e:	pop    ecx
1001104f:	push   eax
10011050:	call   0x10003d63
10011055:	pop    ecx
10011056:	pop    ecx
10011057:	push   eax
10011058:	call   0x10003d63
1001105d:	push   eax
1001105e:	push   0x5
10011060:	push   0x1006ca98
10011065:	lea    esi,[edi+0x8]
10011068:	call   0x10003d75
1001106d:	add    esp,0x14
10011070:	push   eax
10011071:	call   0x10005e33
10011076:	test   al,al
10011078:	pop    ecx
10011079:	je     0x10011091
1001107b:	push   DWORD PTR [ebp-0x10]
1001107e:	push   DWORD PTR [ebp-0x14]
10011081:	push   0xfde9
10011086:	push   edi
10011087:	call   0x10010df3
1001108c:	jmp    0x10011222
10011091:	push   0x1006caa0
10011096:	push   0x6
10011098:	push   0x1006cacc
1001109d:	call   0x10003d75
100110a2:	add    esp,0xc
100110a5:	push   eax
100110a6:	call   0x10005e33
100110ab:	test   al,al
100110ad:	pop    ecx
100110ae:	mov    ebx,0x1006cb34
100110b3:	jne    0x10011173
100110b9:	push   0x1006cad4
100110be:	push   0x8
100110c0:	push   0x1006cb00
100110c5:	call   0x10003d75
100110ca:	add    esp,0xc
100110cd:	push   eax
100110ce:	call   0x10005e33
100110d3:	test   al,al
100110d5:	pop    ecx
100110d6:	jne    0x10011173
100110dc:	push   0x623a97e
100110e1:	push   0x1006cb0c
100110e6:	call   0x10003d63
100110eb:	push   eax
100110ec:	push   0x8
100110ee:	push   ebx
100110ef:	call   0x10003d75
100110f4:	add    esp,0x14
100110f7:	push   eax
100110f8:	call   0x10005e33
100110fd:	test   al,al
100110ff:	pop    ecx
10011100:	jne    0x10011173
10011102:	push   0x1006bb18
10011107:	call   0x10005e33
1001110c:	test   al,al
1001110e:	pop    ecx
1001110f:	push   DWORD PTR [ebp-0x10]
10011112:	push   DWORD PTR [ebp-0x14]
10011115:	je     0x10011157
10011117:	push   0xfde9
1001111c:	push   edi
1001111d:	call   0x10010df3
10011122:	test   al,al
10011124:	je     0x10011132
10011126:	mov    DWORD PTR [edi+0x28],0x2
1001112d:	jmp    0x1001122d
10011132:	push   DWORD PTR [ebp-0x10]
10011135:	push   DWORD PTR [ebp-0x14]
10011138:	push   0x6faf
1001113d:	push   edi
1001113e:	call   0x10010df3
10011143:	test   al,al
10011145:	je     0x1001122d
1001114b:	mov    DWORD PTR [edi+0x28],0x1
10011152:	jmp    0x1001122d
10011157:	push   0x6faf
1001115c:	push   edi
1001115d:	call   0x10010df3
10011162:	test   al,al
10011164:	je     0x1001122d
1001116a:	and    DWORD PTR [edi+0x28],0x0
1001116e:	jmp    0x1001122d
10011173:	and    DWORD PTR [ebp-0x1c],0x0
10011177:	cmp    DWORD PTR [ebp-0x10],0x2
1001117b:	jb     0x1001119d
1001117d:	mov    eax,DWORD PTR [ebp-0x14]
10011180:	lea    edx,[ebp-0x1c]
10011183:	call   0x10010f74
10011188:	test   eax,eax
1001118a:	je     0x1001119d
1001118c:	mov    edx,DWORD PTR [ebp-0x1c]
1001118f:	mov    ecx,DWORD PTR [ebp-0x10]
10011192:	mov    esi,DWORD PTR [ebp-0x14]
10011195:	sub    ecx,edx
10011197:	add    edx,esi
10011199:	push   edx
1001119a:	push   eax
1001119b:	jmp    0x1001121c
1001119d:	push   0x6986edc8
100111a2:	push   0x26262f6
100111a7:	push   0x1006cb40
100111ac:	call   0x10003d63
100111b1:	pop    ecx
100111b2:	pop    ecx
100111b3:	push   eax
100111b4:	call   0x10003d63
100111b9:	push   eax
100111ba:	push   0x8
100111bc:	push   ebx
100111bd:	call   0x10003d75
100111c2:	add    esp,0x14
100111c5:	push   eax
100111c6:	call   0x10005e33
100111cb:	test   al,al
100111cd:	pop    ecx
100111ce:	je     0x100111da
100111d0:	push   DWORD PTR [ebp-0x14]
100111d3:	push   0x4b0
100111d8:	jmp    0x10011219
100111da:	push   0x4ba0759a
100111df:	push   0x4e35edb4
100111e4:	push   0x1006cb78
100111e9:	call   0x10003d63
100111ee:	pop    ecx
100111ef:	pop    ecx
100111f0:	push   eax
100111f1:	call   0x10003d63
100111f6:	push   eax
100111f7:	push   0x8
100111f9:	push   0x1006cb00
100111fe:	call   0x10003d75
10011203:	add    esp,0x14
10011206:	push   eax
10011207:	call   0x10005e33
1001120c:	test   al,al
1001120e:	pop    ecx
1001120f:	je     0x1001122d
10011211:	push   DWORD PTR [ebp-0x14]
10011214:	push   0x4b1
10011219:	mov    ecx,DWORD PTR [ebp-0x10]
1001121c:	push   edi
1001121d:	call   0x10010ec3
10011222:	test   al,al
10011224:	je     0x1001122d
10011226:	mov    DWORD PTR [edi+0x28],0x3
1001122d:	push   DWORD PTR [ebp-0x18]
10011230:	call   0x10041d92
10011235:	pop    ecx
10011236:	call   0x1005891d
1001123b:	ret    
1001123c:	push   0x0
1001123e:	push   0x79ce5608
10011243:	push   0x73b7efa
10011248:	push   0x1006cbb8
1001124d:	call   0x10003d63
10011252:	pop    ecx
10011253:	pop    ecx
10011254:	push   eax
10011255:	call   0x10003d63
1001125a:	push   eax
1001125b:	push   0x5
1001125d:	push   0x1006cbe8
10011262:	call   0x10003d75
10011267:	add    esp,0x14
1001126a:	push   eax
1001126b:	push   esi
1001126c:	call   0x1000c40c
10011271:	cmp    eax,0xffffffff
10011274:	jne    0x10011349
1001127a:	push   0x0
1001127c:	push   0x1c07c7d2
10011281:	push   0x1006cbf0
10011286:	call   0x10003d63
1001128b:	push   eax
1001128c:	push   0x16
1001128e:	push   0x1006cc2c
10011293:	call   0x10003d75
10011298:	add    esp,0x14
1001129b:	push   eax
1001129c:	push   esi
1001129d:	call   0x1000c40c
100112a2:	cmp    eax,0xffffffff
100112a5:	jne    0x10011349
100112ab:	push   0x0
100112ad:	push   0x5dc6f5b0
100112b2:	push   0x32d22d1e
100112b7:	push   0x3e9b2194
100112bc:	push   0x1006cc44
100112c1:	call   0x10003d63
100112c6:	pop    ecx
100112c7:	pop    ecx
100112c8:	push   eax
100112c9:	call   0x10003d63
100112ce:	pop    ecx
100112cf:	pop    ecx
100112d0:	push   eax
100112d1:	call   0x10003d63
100112d6:	push   eax
100112d7:	push   0x18
100112d9:	push   0x1006cc78
100112de:	call   0x10003d75
100112e3:	add    esp,0x14
100112e6:	push   eax
100112e7:	push   esi
100112e8:	call   0x1000c40c
100112ed:	cmp    eax,0xffffffff
100112f0:	jne    0x10011349
100112f2:	push   0x0
100112f4:	push   0x726cc0fa
100112f9:	push   0xe0b4d66
100112fe:	push   0x3c4bdac0
10011303:	push   0x49d8af7e
10011308:	push   0x1006cc94
1001130d:	call   0x10003d63
10011312:	pop    ecx
10011313:	pop    ecx
10011314:	push   eax
10011315:	call   0x10003d63
1001131a:	pop    ecx
1001131b:	pop    ecx
1001131c:	push   eax
1001131d:	call   0x10003d63
10011322:	pop    ecx
10011323:	pop    ecx
10011324:	push   eax
10011325:	call   0x10003d63
1001132a:	push   eax
1001132b:	push   0x16
1001132d:	push   0x1006ccc4
10011332:	call   0x10003d75
10011337:	add    esp,0x14
1001133a:	push   eax
1001133b:	push   esi
1001133c:	call   0x1000c40c
10011341:	cmp    eax,0xffffffff
10011344:	jne    0x10011349
10011346:	xor    al,al
10011348:	ret    
10011349:	mov    al,0x1
1001134b:	ret    
1001134c:	push   ebp
1001134d:	mov    ebp,esp
1001134f:	and    esp,0xfffffff8
10011352:	push   0xffffffff
10011354:	push   0x1006229f
10011359:	mov    eax,fs:0x0
1001135f:	push   eax
10011360:	sub    esp,0x84
10011366:	mov    eax,ds:0x1007d030
1001136b:	xor    eax,esp
1001136d:	mov    DWORD PTR [esp+0x7c],eax
10011371:	push   esi
10011372:	push   edi
10011373:	mov    eax,ds:0x1007d030
10011378:	xor    eax,esp
1001137a:	push   eax
1001137b:	lea    eax,[esp+0x90]
10011382:	mov    fs:0x0,eax
10011388:	lea    eax,[esp+0x10]
1001138c:	mov    edi,ecx
1001138e:	push   eax
1001138f:	mov    DWORD PTR [ebx+0x34],edi
10011392:	call   0x10010a2c
10011397:	test   eax,eax
10011399:	jl     0x100114d7
1001139f:	mov    esi,DWORD PTR [esp+0x10]
100113a3:	test   esi,esi
100113a5:	mov    DWORD PTR [esp+0x10],esi
100113a9:	je     0x100113b1
100113ab:	mov    eax,DWORD PTR [esi]
100113ad:	push   esi
100113ae:	call   DWORD PTR [eax+0x4]
100113b1:	lea    eax,[ebx+0x38]
100113b4:	push   eax
100113b5:	lea    eax,[esp+0x14]
100113b9:	call   0x10010aa8
100113be:	test   esi,esi
100113c0:	je     0x100113c8
100113c2:	mov    eax,DWORD PTR [esi]
100113c4:	push   esi
100113c5:	call   DWORD PTR [eax+0x8]
100113c8:	lea    eax,[edi+0x20]
100113cb:	push   0x1006bb18
100113d0:	lea    edi,[esp+0x14]
100113d4:	mov    DWORD PTR [esp+0x18],eax
100113d8:	mov    DWORD PTR [esi+0x8],eax
100113db:	call   0x10002439
100113e0:	mov    esi,eax
100113e2:	lea    eax,[ebx+0x30]
100113e5:	call   0x10010b2c
100113ea:	call   0x1000256d
100113ef:	push   0x4fcade6e
100113f4:	push   0x1006ccdc
100113f9:	call   0x10003d63
100113fe:	push   eax
100113ff:	push   0xc
10011401:	push   0x1006cd04
10011406:	call   0x10003d75
1001140b:	add    esp,0x14
1001140e:	push   eax
1001140f:	lea    ecx,[esp+0x1c]
10011413:	call   0x100011d6
10011418:	xor    edi,edi
1001141a:	push   edi
1001141b:	lea    eax,[esp+0x1c]
1001141f:	push   eax
10011420:	lea    eax,[esp+0x74]
10011424:	push   eax
10011425:	mov    DWORD PTR [esp+0xa4],edi
1001142c:	mov    eax,DWORD PTR [ebx+0x34]
1001142f:	add    eax,0x20
10011432:	call   0x1000800f
10011437:	push   edi
10011438:	push   0x1
1001143a:	lea    ecx,[esp+0x20]
1001143e:	mov    BYTE PTR [esp+0xa0],0x2
10011446:	call   0x100012f9
1001144b:	push   0x1006bb18
10011450:	lea    esi,[esp+0x70]
10011454:	call   0x10005e33
10011459:	test   al,al
1001145b:	pop    ecx
1001145c:	jne    0x100114cb
1001145e:	call   0x1001123c
10011463:	test   al,al
10011465:	je     0x100114cb
10011467:	push   edi
10011468:	mov    eax,esi
1001146a:	push   eax
1001146b:	lea    eax,[esp+0x3c]
1001146f:	push   eax
10011470:	mov    eax,DWORD PTR [esp+0x20]
10011474:	call   0x1000800f
10011479:	lea    ecx,[esp+0x50]
1001147d:	push   ecx
1001147e:	mov    ecx,eax
10011480:	mov    BYTE PTR [esp+0x9c],0x3
10011488:	call   0x10010c03
1001148d:	pop    ecx
1001148e:	push   0xffffffff
10011490:	push   edi
10011491:	push   eax
10011492:	lea    ecx,[ebx+0x8]
10011495:	mov    BYTE PTR [esp+0xa4],0x4
1001149d:	call   0x1000124a
100114a2:	push   edi
100114a3:	push   0x1
100114a5:	lea    ecx,[esp+0x58]
100114a9:	call   0x100012f9
100114ae:	push   edi
100114af:	push   0x1
100114b1:	lea    ecx,[esp+0x3c]
100114b5:	mov    BYTE PTR [esp+0xa0],0x2
100114bd:	call   0x100012f9
100114c2:	mov    edi,ebx
100114c4:	call   0x10010fa5
100114c9:	xor    edi,edi
100114cb:	push   edi
100114cc:	push   0x1
100114ce:	lea    ecx,[esp+0x74]
100114d2:	call   0x100012f9
100114d7:	mov    ecx,DWORD PTR [esp+0x90]
100114de:	mov    DWORD PTR fs:0x0,ecx
100114e5:	pop    ecx
100114e6:	pop    edi
100114e7:	pop    esi
100114e8:	mov    ecx,DWORD PTR [esp+0x7c]
100114ec:	xor    ecx,esp
100114ee:	call   0x10041d97
100114f3:	mov    esp,ebp
100114f5:	pop    ebp
100114f6:	ret    
100114f7:	push   0x3c
100114f9:	mov    eax,0x10060d71
100114fe:	call   0x10058845
10011503:	push   0xde2b290
10011508:	xor    ebx,ebx
1001150a:	push   0x1006cd44
1001150f:	mov    DWORD PTR [ebp-0x10],ebx
10011512:	call   0x10003d63
10011517:	push   0x6230c0c6
1001151c:	push   eax
1001151d:	call   0x10003d63
10011522:	push   0x19db8790
10011527:	push   eax
10011528:	call   0x10003d63
1001152d:	push   eax
1001152e:	push   0x10
10011530:	push   0x1006ca50
10011535:	call   0x10003d75
1001153a:	add    esp,0x24
1001153d:	push   eax
1001153e:	lea    ecx,[ebp-0x2c]
10011541:	call   0x100011d6
10011546:	push   ebx
10011547:	lea    eax,[ebp-0x2c]
1001154a:	push   eax
1001154b:	lea    eax,[ebp-0x48]
1001154e:	push   eax
1001154f:	mov    DWORD PTR [ebp-0x4],ebx
10011552:	mov    eax,DWORD PTR [ebp+0x8]
10011555:	mov    eax,DWORD PTR [eax+0x34]
10011558:	add    eax,0x20
1001155b:	call   0x1000800f
10011560:	mov    esi,eax
10011562:	push   0x7baddce8
10011567:	push   0x1006cd14
1001156c:	mov    BYTE PTR [ebp-0x4],0x1
10011570:	call   0x10003d63
10011575:	push   0x43a0cdbc
1001157a:	push   eax
1001157b:	call   0x10003d63
10011580:	push   0x688573de
10011585:	push   eax
10011586:	call   0x10003d63
1001158b:	push   0x236dcf5c
10011590:	push   eax
10011591:	call   0x10003d63
10011596:	push   0x79a569a6
1001159b:	push   eax
1001159c:	call   0x10003d63
100115a1:	push   eax
100115a2:	push   0x4
100115a4:	push   0x1006cd3c
100115a9:	call   0x10003d75
100115ae:	add    esp,0x34
100115b1:	push   eax
100115b2:	call   0x10005e33
100115b7:	pop    ecx
100115b8:	push   ebx
100115b9:	push   0x1
100115bb:	lea    ecx,[ebp-0x48]
100115be:	mov    BYTE PTR [ebp+0xb],al
100115c1:	call   0x100012f9
100115c6:	or     DWORD PTR [ebp-0x4],0xffffffff
100115ca:	push   ebx
100115cb:	push   0x1
100115cd:	lea    ecx,[ebp-0x2c]
100115d0:	call   0x100012f9
100115d5:	cmp    BYTE PTR [ebp+0xb],bl
100115d8:	je     0x1001161c
100115da:	mov    ecx,DWORD PTR [ebp+0x14]
100115dd:	mov    edx,DWORD PTR [ebp+0x10]
100115e0:	lea    eax,[ebp+0x8]
100115e3:	lea    esi,[ebp+0x14]
100115e6:	mov    DWORD PTR [ebp+0x8],ebx
100115e9:	call   0x1002f4c0
100115ee:	mov    ecx,DWORD PTR [eax]
100115f0:	mov    edi,ecx
100115f2:	mov    DWORD PTR [eax],ebx
100115f4:	mov    DWORD PTR [ebp+0x10],edi
100115f7:	mov    DWORD PTR [ebp-0x4],0x2
100115fe:	push   DWORD PTR [ebp+0x14]
10011601:	call   0x10041d92
10011606:	mov    esi,DWORD PTR [ebp+0xc]
10011609:	pop    ecx
1001160a:	push   DWORD PTR [ebp+0x8]
1001160d:	push   edi
1001160e:	call   0x10003bbb
10011613:	push   edi
10011614:	call   0x10041d92
10011619:	pop    ecx
1001161a:	jmp    0x1001162a
1001161c:	push   DWORD PTR [ebp+0x14]
1001161f:	mov    esi,DWORD PTR [ebp+0xc]
10011622:	push   DWORD PTR [ebp+0x10]
10011625:	call   0x10003bbb
1001162a:	mov    eax,esi
1001162c:	call   0x1005891d
10011631:	ret    0x10
10011634:	push   0x34
10011636:	mov    eax,0x100619a7
1001163b:	call   0x10058845
10011640:	lea    edi,[ebx+0x30]
10011643:	mov    esi,edi
10011645:	call   0x10010bb7
1001164a:	xor    esi,esi
1001164c:	push   esi
1001164d:	push   esi
1001164e:	push   esi
1001164f:	mov    DWORD PTR [ebp-0x14],eax
10011652:	push   esi
10011653:	mov    eax,edi
10011655:	call   0x10002556
1001165a:	push   eax
1001165b:	mov    eax,DWORD PTR [ebp-0x14]
1001165e:	push   DWORD PTR [eax]
10011660:	push   esi
10011661:	push   DWORD PTR [ebx+0x24]
10011664:	call   DWORD PTR ds:0x100650dc
1001166a:	mov    edi,eax
1001166c:	cmp    edi,esi
1001166e:	je     0x10011705
10011674:	lea    eax,[ebp-0xd]
10011677:	push   eax
10011678:	lea    esi,[ebp-0x24]
1001167b:	mov    BYTE PTR [ebp-0xd],0x0
1001167f:	call   0x10011bf7
10011684:	and    DWORD PTR [ebp-0x4],0x0
10011688:	lea    esi,[ebx+0x30]
1001168b:	call   0x10010bb7
10011690:	mov    DWORD PTR [ebp-0x14],eax
10011693:	xor    eax,eax
10011695:	push   eax
10011696:	push   eax
10011697:	push   edi
10011698:	push   eax
10011699:	lea    esi,[ebp-0x24]
1001169c:	call   0x10011b7f
100116a1:	push   eax
100116a2:	lea    eax,[ebx+0x30]
100116a5:	call   0x10002556
100116aa:	push   eax
100116ab:	mov    eax,DWORD PTR [ebp-0x14]
100116ae:	push   DWORD PTR [eax]
100116b0:	xor    esi,esi
100116b2:	push   esi
100116b3:	push   DWORD PTR [ebx+0x24]
100116b6:	call   DWORD PTR ds:0x100650dc
100116bc:	cmp    eax,edi
100116be:	je     0x100116c5
100116c0:	cmp    DWORD PTR [ebp-0x20],esi
100116c3:	jmp    0x100116fa
100116c5:	push   edi
100116c6:	push   esi
100116c7:	lea    esi,[ebp-0x24]
100116ca:	call   0x10011b7f
100116cf:	push   eax
100116d0:	lea    eax,[ebp-0x40]
100116d3:	push   eax
100116d4:	push   ebx
100116d5:	call   0x100114f7
100116da:	mov    BYTE PTR [ebp-0x4],0x1
100116de:	push   eax
100116df:	mov    eax,DWORD PTR [ebx+0x34]
100116e2:	mov    esi,DWORD PTR [eax+0xc]
100116e5:	call   0x100074cf
100116ea:	push   0x0
100116ec:	push   0x1
100116ee:	lea    ecx,[ebp-0x40]
100116f1:	call   0x100012f9
100116f6:	cmp    DWORD PTR [ebp-0x20],0x0
100116fa:	je     0x10011705
100116fc:	push   DWORD PTR [ebp-0x20]
100116ff:	call   0x10041d92
10011704:	pop    ecx
10011705:	call   0x1005891d
1001170a:	ret    
1001170b:	push   0x44
1001170d:	mov    eax,0x1005fc2a
10011712:	call   0x10058845
10011717:	mov    eax,DWORD PTR [ebx+0x34]
1001171a:	mov    eax,DWORD PTR [eax+0xc]
1001171d:	and    DWORD PTR [ebp-0x18],0x0
10011721:	cmp    DWORD PTR [eax+0x1c],0x10
10011725:	mov    ecx,DWORD PTR [eax+0x18]
10011728:	jb     0x1001172f
1001172a:	mov    eax,DWORD PTR [eax+0x8]
1001172d:	jmp    0x10011732
1001172f:	add    eax,0x8
10011732:	cmp    ecx,0x2
10011735:	jb     0x1001173f
10011737:	lea    edx,[ebp-0x18]
1001173a:	call   0x10010f74
1001173f:	cmp    DWORD PTR [ebx+0x24],0x4b0
10011746:	jne    0x1001178d
10011748:	cmp    DWORD PTR [ebp-0x18],0x0
1001174c:	jne    0x1001178d
1001174e:	lea    esi,[ebx+0x30]
10011751:	call   0x10010bb7
10011756:	mov    edi,eax
10011758:	mov    eax,esi
1001175a:	call   0x10002556
1001175f:	add    eax,eax
10011761:	push   eax
10011762:	push   DWORD PTR [edi]
10011764:	lea    esi,[ebp-0x34]
10011767:	call   0x10003bbb
1001176c:	and    DWORD PTR [ebp-0x4],0x0
10011770:	push   eax
10011771:	mov    eax,DWORD PTR [ebx+0x34]
10011774:	mov    esi,DWORD PTR [eax+0xc]
10011777:	call   0x100074cf
1001177c:	push   0x0
1001177e:	push   0x1
10011780:	lea    ecx,[ebp-0x34]
10011783:	call   0x100012f9
10011788:	jmp    0x10011874
1001178d:	lea    eax,[ebx+0x30]
10011790:	call   0x10002556
10011795:	mov    ecx,DWORD PTR [ebp-0x18]
10011798:	lea    edi,[ecx+eax*2]
1001179b:	lea    eax,[ebp-0x11]
1001179e:	push   eax
1001179f:	lea    esi,[ebp-0x28]
100117a2:	mov    BYTE PTR [ebp-0x11],0x0
100117a6:	call   0x10011bf7
100117ab:	mov    DWORD PTR [ebp-0x4],0x1
100117b2:	mov    edi,DWORD PTR [ebp-0x18]
100117b5:	test   edi,edi
100117b7:	je     0x100117e2
100117b9:	mov    eax,DWORD PTR [ebx+0x34]
100117bc:	mov    eax,DWORD PTR [eax+0xc]
100117bf:	cmp    DWORD PTR [eax+0x1c],0x10
100117c3:	jb     0x100117ca
100117c5:	mov    eax,DWORD PTR [eax+0x8]
100117c8:	jmp    0x100117cd
100117ca:	add    eax,0x8
100117cd:	push   edi
100117ce:	push   eax
100117cf:	push   0x0
100117d1:	lea    esi,[ebp-0x28]
100117d4:	call   0x10011b7f
100117d9:	push   eax
100117da:	call   0x10043ed0
100117df:	add    esp,0xc
100117e2:	lea    esi,[ebx+0x30]
100117e5:	call   0x10010bb7
100117ea:	mov    esi,eax
100117ec:	lea    eax,[ebx+0x30]
100117ef:	call   0x10002556
100117f4:	add    eax,eax
100117f6:	push   eax
100117f7:	push   DWORD PTR [esi]
100117f9:	lea    esi,[ebp-0x28]
100117fc:	push   edi
100117fd:	call   0x10011b7f
10011802:	push   eax
10011803:	call   0x10043ed0
10011808:	add    esp,0xc
1001180b:	cmp    DWORD PTR [ebx+0x24],0x4b1
10011812:	jne    0x1001182b
10011814:	lea    eax,[ebx+0x30]
10011817:	call   0x10002556
1001181c:	push   eax
1001181d:	push   edi
1001181e:	call   0x10011b7f
10011823:	push   eax
10011824:	call   0x10010dd8
10011829:	pop    ecx
1001182a:	pop    ecx
1001182b:	lea    eax,[ebx+0x30]
1001182e:	call   0x10002556
10011833:	lea    eax,[edi+eax*2]
10011836:	push   eax
10011837:	xor    edi,edi
10011839:	push   edi
1001183a:	lea    esi,[ebp-0x28]
1001183d:	call   0x10011b7f
10011842:	push   eax
10011843:	lea    esi,[ebp-0x50]
10011846:	call   0x10003bbb
1001184b:	mov    BYTE PTR [ebp-0x4],0x2
1001184f:	push   eax
10011850:	mov    eax,DWORD PTR [ebx+0x34]
10011853:	mov    esi,DWORD PTR [eax+0xc]
10011856:	call   0x100074cf
1001185b:	push   edi
1001185c:	push   0x1
1001185e:	lea    ecx,[ebp-0x50]
10011861:	call   0x100012f9
10011866:	cmp    DWORD PTR [ebp-0x24],edi
10011869:	je     0x10011874
1001186b:	push   DWORD PTR [ebp-0x24]
1001186e:	call   0x10041d92
10011873:	pop    ecx
10011874:	call   0x1005891d
10011879:	ret    
1001187a:	push   ebp
1001187b:	mov    ebp,esp
1001187d:	and    esp,0xfffffff8
10011880:	push   ecx
10011881:	push   ebx
10011882:	mov    ebx,eax
10011884:	cmp    BYTE PTR [ebx+0x2c],0x0
10011888:	je     0x100118a7
1001188a:	mov    eax,DWORD PTR [ebx+0x24]
1001188d:	cmp    eax,0x4b1
10011892:	je     0x100118a2
10011894:	cmp    eax,0x4b0
10011899:	je     0x100118a2
1001189b:	call   0x10011634
100118a0:	jmp    0x100118a7
100118a2:	call   0x1001170b
100118a7:	pop    ebx
100118a8:	mov    esp,ebp
100118aa:	pop    ebp
100118ab:	ret    
100118ac:	push   ebp
100118ad:	mov    ebp,esp
100118af:	mov    eax,DWORD PTR [ebp+0x8]
100118b2:	mov    eax,DWORD PTR [eax+0x34]
100118b5:	test   eax,eax
100118b7:	jne    0x100118c0
100118b9:	mov    eax,0x80004005
100118be:	jmp    0x100118f2
100118c0:	mov    eax,DWORD PTR [eax]
100118c2:	test   eax,eax
100118c4:	je     0x100118b9
100118c6:	cmp    DWORD PTR [eax+0x1c],0x10
100118ca:	jb     0x100118d1
100118cc:	mov    eax,DWORD PTR [eax+0x8]
100118cf:	jmp    0x100118d4
100118d1:	add    eax,0x8
100118d4:	push   edi
100118d5:	push   eax
100118d6:	lea    edi,[ebp+0x8]
100118d9:	call   0x10002439
100118de:	mov    eax,edi
100118e0:	call   0x1000d464
100118e5:	mov    ecx,DWORD PTR [ebp+0xc]
100118e8:	mov    DWORD PTR [ecx],eax
100118ea:	call   0x1000256d
100118ef:	xor    eax,eax
100118f1:	pop    edi
100118f2:	pop    ebp
100118f3:	ret    0x8
100118f6:	push   0x1c
100118f8:	mov    eax,0x1005fc55
100118fd:	call   0x10058845
10011902:	mov    esi,DWORD PTR [ebp+0x8]
10011905:	mov    eax,DWORD PTR [esi+0x34]
10011908:	test   eax,eax
1001190a:	jne    0x10011913
1001190c:	mov    eax,0x80004005
10011911:	jmp    0x1001195e
10011913:	cmp    DWORD PTR [eax],0x0
10011916:	je     0x1001190c
10011918:	mov    ecx,DWORD PTR [ebp+0xc]
1001191b:	push   0x1
1001191d:	lea    edi,[ebp+0x8]
10011920:	call   0x1000d3e7
10011925:	and    DWORD PTR [ebp-0x4],0x0
10011929:	mov    eax,edi
1001192b:	call   0x1000d447
10011930:	push   eax
10011931:	lea    ecx,[ebp-0x28]
10011934:	call   0x100011d6
10011939:	lea    eax,[ebp-0x28]
1001193c:	mov    BYTE PTR [ebp-0x4],0x1
10011940:	push   eax
10011941:	mov    eax,DWORD PTR [esi+0x34]
10011944:	mov    esi,DWORD PTR [eax]
10011946:	call   0x100074cf
1001194b:	push   0x0
1001194d:	push   0x1
1001194f:	lea    ecx,[ebp-0x28]
10011952:	call   0x100012f9
10011957:	call   0x1000256d
1001195c:	xor    eax,eax
1001195e:	call   0x1005891d
10011963:	ret    0x8
10011966:	push   ebp
10011967:	mov    ebp,esp
10011969:	mov    eax,DWORD PTR [ebp+0x8]
1001196c:	mov    eax,DWORD PTR [eax+0x34]
1001196f:	test   eax,eax
10011971:	jne    0x1001197a
10011973:	mov    eax,0x80004005
10011978:	jmp    0x100119ad
1001197a:	mov    eax,DWORD PTR [eax+0x4]
1001197d:	test   eax,eax
1001197f:	je     0x10011973
10011981:	cmp    DWORD PTR [eax+0x1c],0x10
10011985:	jb     0x1001198c
10011987:	mov    eax,DWORD PTR [eax+0x8]
1001198a:	jmp    0x1001198f
1001198c:	add    eax,0x8
1001198f:	push   edi
10011990:	push   eax
10011991:	lea    edi,[ebp+0x8]
10011994:	call   0x10002439
10011999:	mov    eax,edi
1001199b:	call   0x1000d464
100119a0:	mov    ecx,DWORD PTR [ebp+0xc]
100119a3:	mov    DWORD PTR [ecx],eax
100119a5:	call   0x1000256d
100119aa:	xor    eax,eax
100119ac:	pop    edi
100119ad:	pop    ebp
100119ae:	ret    0x8
100119b1:	push   0x1c
100119b3:	mov    eax,0x1005fc55
100119b8:	call   0x10058845
100119bd:	mov    esi,DWORD PTR [ebp+0x8]
100119c0:	mov    eax,DWORD PTR [esi+0x34]
100119c3:	test   eax,eax
100119c5:	jne    0x100119ce
100119c7:	mov    eax,0x80004005
100119cc:	jmp    0x10011a1b
100119ce:	cmp    DWORD PTR [eax+0x4],0x0
100119d2:	je     0x100119c7
100119d4:	mov    ecx,DWORD PTR [ebp+0xc]
100119d7:	push   0x1
100119d9:	lea    edi,[ebp+0x8]
100119dc:	call   0x1000d3e7
100119e1:	and    DWORD PTR [ebp-0x4],0x0
100119e5:	mov    eax,edi
100119e7:	call   0x1000d447
100119ec:	push   eax
100119ed:	lea    ecx,[ebp-0x28]
100119f0:	call   0x100011d6
100119f5:	lea    eax,[ebp-0x28]
100119f8:	mov    BYTE PTR [ebp-0x4],0x1
100119fc:	push   eax
100119fd:	mov    eax,DWORD PTR [esi+0x34]
10011a00:	mov    esi,DWORD PTR [eax+0x4]
10011a03:	call   0x100074cf
10011a08:	push   0x0
10011a0a:	push   0x1
10011a0c:	lea    ecx,[ebp-0x28]
10011a0f:	call   0x100012f9
10011a14:	call   0x1000256d
10011a19:	xor    eax,eax
10011a1b:	call   0x1005891d
10011a20:	ret    0x8
10011a23:	push   ebp
10011a24:	mov    ebp,esp
10011a26:	mov    eax,DWORD PTR [ebp+0x8]
10011a29:	mov    eax,DWORD PTR [eax+0x34]
10011a2c:	test   eax,eax
10011a2e:	jne    0x10011a37
10011a30:	mov    eax,0x80004005
10011a35:	jmp    0x10011a6a
10011a37:	mov    eax,DWORD PTR [eax+0x8]
10011a3a:	test   eax,eax
10011a3c:	je     0x10011a30
10011a3e:	cmp    DWORD PTR [eax+0x1c],0x10
10011a42:	jb     0x10011a49
10011a44:	mov    eax,DWORD PTR [eax+0x8]
10011a47:	jmp    0x10011a4c
10011a49:	add    eax,0x8
10011a4c:	push   edi
10011a4d:	push   eax
10011a4e:	lea    edi,[ebp+0x8]
10011a51:	call   0x10002439
10011a56:	mov    eax,edi
10011a58:	call   0x1000d464
10011a5d:	mov    ecx,DWORD PTR [ebp+0xc]
10011a60:	mov    DWORD PTR [ecx],eax
10011a62:	call   0x1000256d
10011a67:	xor    eax,eax
10011a69:	pop    edi
10011a6a:	pop    ebp
10011a6b:	ret    0x8
10011a6e:	push   0x1c
10011a70:	mov    eax,0x1005fc55
10011a75:	call   0x10058845
10011a7a:	mov    esi,DWORD PTR [ebp+0x8]
10011a7d:	mov    eax,DWORD PTR [esi+0x34]
10011a80:	test   eax,eax
10011a82:	jne    0x10011a8b
10011a84:	mov    eax,0x80004005
10011a89:	jmp    0x10011ad8
10011a8b:	cmp    DWORD PTR [eax+0x8],0x0
10011a8f:	je     0x10011a84
10011a91:	mov    ecx,DWORD PTR [ebp+0xc]
10011a94:	push   0x1
10011a96:	lea    edi,[ebp+0x8]
10011a99:	call   0x1000d3e7
10011a9e:	and    DWORD PTR [ebp-0x4],0x0
10011aa2:	mov    eax,edi
10011aa4:	call   0x1000d447
10011aa9:	push   eax
10011aaa:	lea    ecx,[ebp-0x28]
10011aad:	call   0x100011d6
10011ab2:	lea    eax,[ebp-0x28]
10011ab5:	mov    BYTE PTR [ebp-0x4],0x1
10011ab9:	push   eax
10011aba:	mov    eax,DWORD PTR [esi+0x34]
10011abd:	mov    esi,DWORD PTR [eax+0x8]
10011ac0:	call   0x100074cf
10011ac5:	push   0x0
10011ac7:	push   0x1
10011ac9:	lea    ecx,[ebp-0x28]
10011acc:	call   0x100012f9
10011ad1:	call   0x1000256d
10011ad6:	xor    eax,eax
10011ad8:	call   0x1005891d
10011add:	ret    0x8
10011ae0:	push   ebp
10011ae1:	mov    ebp,esp
10011ae3:	mov    eax,DWORD PTR [ebp+0x8]
10011ae6:	mov    eax,DWORD PTR [eax+0x30]
10011ae9:	test   eax,eax
10011aeb:	je     0x10011af1
10011aed:	mov    eax,DWORD PTR [eax]
10011aef:	jmp    0x10011af3
10011af1:	xor    eax,eax
10011af3:	push   edi
10011af4:	push   0x1
10011af6:	mov    ecx,eax
10011af8:	lea    edi,[ebp+0x8]
10011afb:	call   0x1000d3e7
10011b00:	mov    eax,edi
10011b02:	call   0x1000d464
10011b07:	mov    ecx,DWORD PTR [ebp+0xc]
10011b0a:	mov    DWORD PTR [ecx],eax
10011b0c:	call   0x1000256d
10011b11:	xor    eax,eax
10011b13:	pop    edi
10011b14:	pop    ebp
10011b15:	ret    0x8
10011b18:	mov    eax,DWORD PTR [esp+0x4]
10011b1c:	push   DWORD PTR [esp+0x8]
10011b20:	lea    ecx,[eax+0x30]
10011b23:	mov    BYTE PTR [eax+0x2c],0x1
10011b27:	call   0x10010b4e
10011b2c:	xor    eax,eax
10011b2e:	ret    0x8
10011b31:	mov    ecx,DWORD PTR [esp+0x8]
10011b35:	test   ecx,ecx
10011b37:	mov    eax,DWORD PTR [esp+0x4]
10011b3b:	jne    0x10011b44
10011b3d:	mov    eax,0x80004003
10011b42:	jmp    0x10011b58
10011b44:	mov    edx,DWORD PTR [eax+0x38]
10011b47:	mov    DWORD PTR [ecx],edx
10011b49:	mov    eax,DWORD PTR [eax+0x38]
10011b4c:	test   eax,eax
10011b4e:	je     0x10011b56
10011b50:	mov    ecx,DWORD PTR [eax]
10011b52:	push   eax
10011b53:	call   DWORD PTR [ecx+0x4]
10011b56:	xor    eax,eax
10011b58:	ret    0x8
10011b5b:	mov    eax,DWORD PTR [esp+0x4]
10011b5f:	mov    eax,DWORD PTR [eax+0x24]
10011b62:	mov    ecx,DWORD PTR [esp+0x8]
10011b66:	mov    DWORD PTR [ecx],eax
10011b68:	xor    eax,eax
10011b6a:	ret    0x8
10011b6d:	mov    eax,DWORD PTR [esp+0x4]
10011b71:	mov    eax,DWORD PTR [eax+0x28]
10011b74:	mov    ecx,DWORD PTR [esp+0x8]
10011b78:	mov    DWORD PTR [ecx],eax
10011b7a:	xor    eax,eax
10011b7c:	ret    0x8
10011b7f:	mov    ecx,DWORD PTR [esi+0x4]
10011b82:	test   ecx,ecx
10011b84:	je     0x10011b91
10011b86:	mov    eax,DWORD PTR [esi+0x8]
10011b89:	sub    eax,ecx
10011b8b:	cmp    DWORD PTR [esp+0x4],eax
10011b8f:	jb     0x10011b96
10011b91:	call   0x100422b0
10011b96:	mov    eax,DWORD PTR [esi+0x4]
10011b99:	add    eax,DWORD PTR [esp+0x4]
10011b9d:	ret    0x4
10011ba0:	push   edi
10011ba1:	mov    edi,eax
10011ba3:	xor    eax,eax
10011ba5:	cmp    edi,eax
10011ba7:	mov    DWORD PTR [esi+0x4],eax
10011baa:	mov    DWORD PTR [esi+0x8],eax
10011bad:	mov    DWORD PTR [esi+0xc],eax
10011bb0:	je     0x10011bf3
10011bb2:	cmp    edi,0x7fffffff
10011bb8:	jbe    0x10011bbf
10011bba:	call   0x1000d195
10011bbf:	mov    ecx,edi
10011bc1:	call   0x100059c2
10011bc6:	test   edi,edi
10011bc8:	lea    ecx,[edi+edi*1]
10011bcb:	lea    edx,[ecx+eax*1]
10011bce:	mov    DWORD PTR [esi+0xc],edx
10011bd1:	mov    DWORD PTR [esi+0x4],eax
10011bd4:	mov    DWORD PTR [esi+0x8],eax
10011bd7:	mov    edx,eax
10011bd9:	jbe    0x10011bee
10011bdb:	push   ebx
10011bdc:	mov    ebx,DWORD PTR [esp+0xc]
10011be0:	mov    bx,WORD PTR [ebx]
10011be3:	mov    WORD PTR [edx],bx
10011be6:	dec    edi
10011be7:	inc    edx
10011be8:	inc    edx
10011be9:	test   edi,edi
10011beb:	ja     0x10011bdc
10011bed:	pop    ebx
10011bee:	add    ecx,eax
10011bf0:	mov    DWORD PTR [esi+0x8],ecx
10011bf3:	pop    edi
10011bf4:	ret    0x4
10011bf7:	push   ebp
10011bf8:	mov    ebp,esp
10011bfa:	push   ecx
10011bfb:	push   ebx
10011bfc:	xor    ebx,ebx
10011bfe:	cmp    edi,ebx
10011c00:	mov    DWORD PTR [esi+0x4],ebx
10011c03:	mov    DWORD PTR [esi+0x8],ebx
10011c06:	mov    DWORD PTR [esi+0xc],ebx
10011c09:	je     0x10011c48
10011c0b:	cmp    edi,0xffffffff
10011c0e:	jbe    0x10011c15
10011c10:	call   0x1000d195
10011c15:	push   ebx
10011c16:	push   edi
10011c17:	call   0x10001ec7
10011c1c:	cmp    edi,ebx
10011c1e:	pop    ecx
10011c1f:	pop    ecx
10011c20:	lea    ecx,[eax+edi*1]
10011c23:	mov    DWORD PTR [esi+0xc],ecx
10011c26:	mov    DWORD PTR [esi+0x4],eax
10011c29:	mov    DWORD PTR [esi+0x8],eax
10011c2c:	mov    DWORD PTR [ebp-0x4],edi
10011c2f:	mov    ecx,eax
10011c31:	jbe    0x10011c43
10011c33:	mov    edx,DWORD PTR [ebp+0x8]
10011c36:	mov    dl,BYTE PTR [edx]
10011c38:	dec    DWORD PTR [ebp-0x4]
10011c3b:	mov    BYTE PTR [ecx],dl
10011c3d:	inc    ecx
10011c3e:	cmp    DWORD PTR [ebp-0x4],ebx
10011c41:	ja     0x10011c33
10011c43:	add    eax,edi
10011c45:	mov    DWORD PTR [esi+0x8],eax
10011c48:	pop    ebx
10011c49:	leave  
10011c4a:	ret    0x4
10011c4d:	push   esi
10011c4e:	mov    esi,DWORD PTR [eax]
10011c50:	test   esi,esi
10011c52:	je     0x10011c82
10011c54:	mov    eax,DWORD PTR [esi]
10011c56:	test   eax,eax
10011c58:	je     0x10011c7c
10011c5a:	push   eax
10011c5b:	call   DWORD PTR ds:0x100652a0
10011c61:	push   eax
10011c62:	push   DWORD PTR [esi]
10011c64:	call   DWORD PTR ds:0x100652a8
10011c6a:	mov    esi,eax
10011c6c:	test   esi,esi
10011c6e:	jne    0x10011c7e
10011c70:	push   0x8007000e
10011c75:	call   0x1004fa00
10011c7a:	jmp    0x10011c7e
10011c7c:	xor    esi,esi
10011c7e:	mov    eax,esi
10011c80:	pop    esi
10011c81:	ret    
10011c82:	xor    eax,eax
10011c84:	pop    esi
10011c85:	ret    
10011c86:	push   0x4
10011c88:	mov    eax,0x1005f3f5
10011c8d:	call   0x10058845
10011c92:	mov    edi,ecx
10011c94:	call   0x1000256d
10011c99:	push   0xc
10011c9b:	call   0x1004239e
10011ca0:	pop    ecx
10011ca1:	test   eax,eax
10011ca3:	je     0x10011cb5
10011ca5:	and    DWORD PTR [eax+0x4],0x0
10011ca9:	and    DWORD PTR [eax],0x0
10011cac:	mov    DWORD PTR [eax+0x8],0x1
10011cb3:	jmp    0x10011cb7
10011cb5:	xor    eax,eax
10011cb7:	or     DWORD PTR [esp+0x1c],0xffffffff
10011cbc:	test   eax,eax
10011cbe:	mov    DWORD PTR [edi],eax
10011cc0:	jne    0x10011ccc
10011cc2:	push   0x8007000e
10011cc7:	call   0x1004fa00
10011ccc:	mov    eax,DWORD PTR [edi]
10011cce:	call   0x1005891d
10011cd3:	ret    
10011cd4:	push   0x8c
10011cd9:	mov    eax,0x1006196f
10011cde:	call   0x100588e4
10011ce3:	mov    esi,DWORD PTR [ebp+0x8]
10011ce6:	mov    ebx,DWORD PTR [ebp+0xc]
10011ce9:	mov    eax,DWORD PTR [esi+0xc]
10011cec:	push   ebx
10011ced:	push   eax
10011cee:	call   DWORD PTR ds:0x1007fc34
10011cf4:	xor    edi,edi
10011cf6:	cmp    eax,edi
10011cf8:	mov    DWORD PTR [ebp-0x60],eax
10011cfb:	jl     0x10011e9f
10011d01:	mov    DWORD PTR [ebp-0x4],edi
10011d04:	mov    DWORD PTR [ebp-0x58],edi
10011d07:	lea    ecx,[ebp-0x58]
10011d0a:	push   ecx
10011d0b:	mov    BYTE PTR [ebp-0x4],0x1
10011d0f:	mov    eax,DWORD PTR [esi]
10011d11:	push   esi
10011d12:	call   DWORD PTR [eax+0x94]
10011d18:	cmp    eax,edi
10011d1a:	jge    0x10011d2a
10011d1c:	mov    BYTE PTR [ebp-0x4],0x0
10011d20:	mov    eax,DWORD PTR [ebp-0x58]
10011d23:	cmp    eax,edi
10011d25:	jmp    0x10011e94
10011d2a:	mov    esi,DWORD PTR [ebp-0x58]
10011d2d:	cmp    esi,edi
10011d2f:	je     0x10011e9c
10011d35:	mov    DWORD PTR [ebp-0x5c],edi
10011d38:	lea    ecx,[ebp-0x5c]
10011d3b:	mov    BYTE PTR [ebp-0x4],0x2
10011d3f:	call   0x10011c86
10011d44:	mov    ecx,DWORD PTR [esi]
10011d46:	push   eax
10011d47:	push   esi
10011d48:	call   DWORD PTR [ecx+0x20]
10011d4b:	cmp    eax,edi
10011d4d:	jl     0x10011e83
10011d53:	lea    eax,[ebp-0x5c]
10011d56:	call   0x1000d447
10011d5b:	push   eax
10011d5c:	lea    ecx,[ebp-0x30]
10011d5f:	call   0x100011d6
10011d64:	push   0x10
10011d66:	mov    BYTE PTR [ebp-0x4],0x3
10011d6a:	mov    eax,DWORD PTR [ebp-0x2c]
10011d6d:	pop    esi
10011d6e:	cmp    DWORD PTR [ebp-0x18],esi
10011d71:	jae    0x10011d76
10011d73:	lea    eax,[ebp-0x2c]
10011d76:	push   eax
10011d77:	call   0x1000207c
10011d7c:	pop    ecx
10011d7d:	lea    eax,[ebp-0x50]
10011d80:	push   eax
10011d81:	push   0x1007fec8
10011d86:	lea    ecx,[ebp-0x30]
10011d89:	call   0x100195fa
10011d8e:	lea    edi,[ebp-0x50]
10011d91:	mov    BYTE PTR [ebp-0x4],0x4
10011d95:	call   0x1001949f
10011d9a:	test   al,al
10011d9c:	jne    0x10011e6b
10011da2:	mov    eax,DWORD PTR [ebp-0x50]
10011da5:	dec    eax
10011da6:	je     0x10011ddc
10011da8:	dec    eax
10011da9:	jne    0x10011e6b
10011daf:	cmp    DWORD PTR [ebp-0x18],esi
10011db2:	mov    eax,DWORD PTR [ebp-0x2c]
10011db5:	jae    0x10011dba
10011db7:	lea    eax,[ebp-0x2c]
10011dba:	push   eax
10011dbb:	call   0x1000207c
10011dc0:	pop    ecx
10011dc1:	push   DWORD PTR [ebx]
10011dc3:	call   DWORD PTR ds:0x100652b4
10011dc9:	push   0x1006bb18
10011dce:	lea    edi,[ebp-0x54]
10011dd1:	call   0x10002439
10011dd6:	mov    BYTE PTR [ebp-0x4],0x8
10011dda:	jmp    0x10011e59
10011ddc:	lea    eax,[ebp-0x7c]
10011ddf:	push   eax
10011de0:	lea    eax,[ebp-0x50]
10011de3:	call   0x100194bf
10011de8:	cmp    DWORD PTR [ebp-0x18],esi
10011deb:	mov    ecx,DWORD PTR [ebp-0x2c]
10011dee:	jae    0x10011df3
10011df0:	lea    ecx,[ebp-0x2c]
10011df3:	cmp    DWORD PTR [eax+0x18],esi
10011df6:	jb     0x10011dfd
10011df8:	mov    eax,DWORD PTR [eax+0x4]
10011dfb:	jmp    0x10011e00
10011dfd:	add    eax,0x4
10011e00:	push   ecx
10011e01:	push   eax
10011e02:	call   0x1000207c
10011e07:	pop    ecx
10011e08:	pop    ecx
10011e09:	push   0x0
10011e0b:	push   0x1
10011e0d:	lea    ecx,[ebp-0x7c]
10011e10:	call   0x100012f9
10011e15:	push   DWORD PTR [ebx]
10011e17:	call   DWORD PTR ds:0x100652b4
10011e1d:	lea    eax,[ebp-0x98]
10011e23:	push   eax
10011e24:	lea    eax,[ebp-0x50]
10011e27:	call   0x100194bf
10011e2c:	mov    BYTE PTR [ebp-0x4],0x5
10011e30:	cmp    DWORD PTR [eax+0x18],esi
10011e33:	jb     0x10011e3a
10011e35:	mov    eax,DWORD PTR [eax+0x4]
10011e38:	jmp    0x10011e3d
10011e3a:	add    eax,0x4
10011e3d:	push   eax
10011e3e:	lea    edi,[ebp-0x54]
10011e41:	call   0x10002439
10011e46:	push   0x0
10011e48:	push   0x1
10011e4a:	lea    ecx,[ebp-0x98]
10011e50:	mov    BYTE PTR [ebp-0x4],0x7
10011e54:	call   0x100012f9
10011e59:	lea    eax,[ebp-0x54]
10011e5c:	call   0x10011c4d
10011e61:	lea    edi,[ebp-0x54]
10011e64:	mov    DWORD PTR [ebx],eax
10011e66:	call   0x1000256d
10011e6b:	push   0x0
10011e6d:	push   0x1
10011e6f:	lea    ecx,[ebp-0x4c]
10011e72:	call   0x100012f9
10011e77:	push   0x0
10011e79:	push   0x1
10011e7b:	lea    ecx,[ebp-0x30]
10011e7e:	call   0x100012f9
10011e83:	lea    edi,[ebp-0x5c]
10011e86:	call   0x1000256d
10011e8b:	mov    BYTE PTR [ebp-0x4],0x0
10011e8f:	mov    eax,DWORD PTR [ebp-0x58]
10011e92:	test   eax,eax
10011e94:	je     0x10011e9c
10011e96:	mov    ecx,DWORD PTR [eax]
10011e98:	push   eax
10011e99:	call   DWORD PTR [ecx+0x8]
10011e9c:	mov    eax,DWORD PTR [ebp-0x60]
10011e9f:	call   0x10058940
10011ea4:	ret    0x8
10011ea7:	push   0x8
10011ea9:	call   0x10037620
10011eae:	pop    ecx
10011eaf:	mov    eax,0x10011e9c
10011eb4:	ret    
10011eb5:	mov    DWORD PTR [esp+0x4],eax
10011eb9:	jmp    0x10011cd4
10011ebe:	push   ebp
10011ebf:	mov    ebp,esp
10011ec1:	sub    esp,0x1c
10011ec4:	and    DWORD PTR [ebp-0x1c],0x0
10011ec8:	push   edi
10011ec9:	push   0x6
10011ecb:	pop    ecx
10011ecc:	xor    eax,eax
10011ece:	lea    edi,[ebp-0x18]
10011ed1:	rep stos DWORD PTR es:[edi],eax
10011ed3:	push   esi
10011ed4:	lea    eax,[ebp-0x1c]
10011ed7:	push   eax
10011ed8:	push   ebx
10011ed9:	call   DWORD PTR ds:0x100650f4
10011edf:	test   eax,eax
10011ee1:	pop    edi
10011ee2:	jne    0x10011ee8
10011ee4:	xor    al,al
10011ee6:	leave  
10011ee7:	ret    
10011ee8:	cmp    DWORD PTR [ebp-0xc],0x10000
10011eef:	je     0x10011ee4
10011ef1:	mov    eax,DWORD PTR [ebp-0x1c]
10011ef4:	mov    ecx,DWORD PTR [ebp-0x10]
10011ef7:	add    ecx,eax
10011ef9:	lea    eax,[ebx+esi*1]
10011efc:	cmp    ecx,eax
10011efe:	jb     0x10011ee4
10011f00:	push   esi
10011f01:	push   DWORD PTR [ebp+0x8]
10011f04:	push   ebx
10011f05:	call   0x1004260e
10011f0a:	add    esp,0xc
10011f0d:	neg    eax
10011f0f:	sbb    al,al
10011f11:	inc    al
10011f13:	leave  
10011f14:	ret    
10011f15:	push   ebp
10011f16:	mov    ebp,esp
10011f18:	sub    esp,0x40
10011f1b:	mov    eax,ds:0x1007d030
10011f20:	xor    eax,ebp
10011f22:	mov    DWORD PTR [ebp-0x4],eax
10011f25:	xor    al,al
10011f27:	push   ebx
10011f28:	push   esi
10011f29:	mov    BYTE PTR [ebp-0x38],al
10011f2c:	mov    BYTE PTR [ebp-0x37],al
10011f2f:	mov    BYTE PTR [ebp-0x36],al
10011f32:	mov    BYTE PTR [ebp-0x28],al
10011f35:	mov    BYTE PTR [ebp-0x27],al
10011f38:	mov    BYTE PTR [ebp-0x26],al
10011f3b:	mov    BYTE PTR [ebp-0x17],al
10011f3e:	mov    BYTE PTR [ebp-0x9],al
10011f41:	mov    BYTE PTR [ebp-0x8],al
10011f44:	mov    BYTE PTR [ebp-0x7],al
10011f47:	lea    eax,[ebp-0x40]
10011f4a:	push   eax
10011f4b:	push   0x1d
10011f4d:	mov    ebx,ecx
10011f4f:	pop    esi
10011f50:	mov    BYTE PTR [ebp-0x40],0x8b
10011f54:	mov    BYTE PTR [ebp-0x3f],0x44
10011f58:	mov    BYTE PTR [ebp-0x3e],0x24
10011f5c:	mov    BYTE PTR [ebp-0x3d],0x4
10011f60:	mov    BYTE PTR [ebp-0x3c],0xc7
10011f64:	mov    BYTE PTR [ebp-0x3b],0x40
10011f68:	mov    BYTE PTR [ebp-0x3a],0x20
10011f6c:	mov    BYTE PTR [ebp-0x39],0x24
10011f70:	mov    BYTE PTR [ebp-0x35],0x8b
10011f74:	mov    BYTE PTR [ebp-0x34],0x48
10011f78:	mov    BYTE PTR [ebp-0x33],0xc
10011f7c:	mov    BYTE PTR [ebp-0x32],0x89
10011f80:	mov    BYTE PTR [ebp-0x31],0x4c
10011f84:	mov    BYTE PTR [ebp-0x30],0x24
10011f88:	mov    BYTE PTR [ebp-0x2f],0x4
10011f8c:	mov    BYTE PTR [ebp-0x2e],0x8b
10011f90:	mov    BYTE PTR [ebp-0x2d],0x48
10011f94:	mov    BYTE PTR [ebp-0x2c],0x10
10011f98:	mov    BYTE PTR [ebp-0x2b],0x8b
10011f9c:	mov    BYTE PTR [ebp-0x2a],0x89
10011fa0:	mov    BYTE PTR [ebp-0x29],0x90
10011fa4:	mov    BYTE PTR [ebp-0x25],0xff
10011fa8:	mov    BYTE PTR [ebp-0x24],0xe1
10011fac:	mov    BYTE PTR [ebp-0x20],0x8b
10011fb0:	mov    BYTE PTR [ebp-0x1f],0x44
10011fb4:	mov    BYTE PTR [ebp-0x1e],0x24
10011fb8:	mov    BYTE PTR [ebp-0x1d],0x4
10011fbc:	mov    BYTE PTR [ebp-0x1c],0x66
10011fc0:	mov    BYTE PTR [ebp-0x1b],0xc7
10011fc4:	mov    BYTE PTR [ebp-0x1a],0x40
10011fc8:	mov    BYTE PTR [ebp-0x19],0x20
10011fcc:	mov    BYTE PTR [ebp-0x18],0x24
10011fd0:	mov    BYTE PTR [ebp-0x16],0x8b
10011fd4:	mov    BYTE PTR [ebp-0x15],0x48
10011fd8:	mov    BYTE PTR [ebp-0x14],0xc
10011fdc:	mov    BYTE PTR [ebp-0x13],0x89
10011fe0:	mov    BYTE PTR [ebp-0x12],0x4c
10011fe4:	mov    BYTE PTR [ebp-0x11],0x24
10011fe8:	mov    BYTE PTR [ebp-0x10],0x4
10011fec:	mov    BYTE PTR [ebp-0xf],0x8b
10011ff0:	mov    BYTE PTR [ebp-0xe],0x48
10011ff4:	mov    BYTE PTR [ebp-0xd],0x10
10011ff8:	mov    BYTE PTR [ebp-0xc],0x8b
10011ffc:	mov    BYTE PTR [ebp-0xb],0x89
10012000:	mov    BYTE PTR [ebp-0xa],0x90
10012004:	mov    BYTE PTR [ebp-0x6],0xff
10012008:	mov    BYTE PTR [ebp-0x5],0xe1
1001200c:	call   0x10011ebe
10012011:	test   al,al
10012013:	pop    ecx
10012014:	jne    0x1001202b
10012016:	lea    eax,[ebp-0x20]
10012019:	push   eax
1001201a:	push   0x1c
1001201c:	pop    esi
1001201d:	call   0x10011ebe
10012022:	test   al,al
10012024:	pop    ecx
10012025:	jne    0x1001202b
10012027:	xor    eax,eax
10012029:	jmp    0x1001202e
1001202b:	xor    eax,eax
1001202d:	inc    eax
1001202e:	mov    ecx,DWORD PTR [ebp-0x4]
10012031:	pop    esi
10012032:	xor    ecx,ebp
10012034:	pop    ebx
10012035:	call   0x10041d97
1001203a:	leave  
1001203b:	ret    
1001203c:	push   0x18
1001203e:	mov    eax,0x100627cf
10012043:	call   0x100588ae
10012048:	push   0x1006cd88
1001204d:	call   DWORD PTR ds:0x100650f8
10012053:	xor    esi,esi
10012055:	push   esi
10012056:	call   DWORD PTR ds:0x10065430
1001205c:	mov    DWORD PTR [ebp-0x24],esi
1001205f:	push   0x5bcbce2
10012064:	push   0x1006cda0
10012069:	mov    DWORD PTR [ebp-0x4],esi
1001206c:	call   0x10003d63
10012071:	push   0x40ccb354
10012076:	push   eax
10012077:	call   0x10003d63
1001207c:	push   0x46734d76
10012081:	push   eax
10012082:	call   0x10003d63
10012087:	push   0x512dc2d8
1001208c:	push   eax
1001208d:	call   0x10003d63
10012092:	push   eax
10012093:	push   0x8
10012095:	push   0x1006cdd8
1001209a:	call   0x10003f5b
1001209f:	add    esp,0x2c
100120a2:	lea    ecx,[ebp-0x20]
100120a5:	push   ecx
100120a6:	push   eax
100120a7:	call   DWORD PTR ds:0x10065434
100120ad:	cmp    eax,esi
100120af:	jl     0x10012118
100120b1:	lea    eax,[ebp-0x24]
100120b4:	push   eax
100120b5:	push   0x1006ce54
100120ba:	push   0x17
100120bc:	push   esi
100120bd:	lea    eax,[ebp-0x20]
100120c0:	push   eax
100120c1:	call   DWORD PTR ds:0x10065438
100120c7:	cmp    eax,esi
100120c9:	jl     0x10012118
100120cb:	mov    eax,DWORD PTR [ebp-0x24]
100120ce:	mov    eax,DWORD PTR [eax]
100120d0:	mov    ecx,DWORD PTR [eax+0x90]
100120d6:	call   0x10011f15
100120db:	test   al,al
100120dd:	jne    0x100120ee
100120df:	call   0x1000207c
100120e4:	push   0x8
100120e6:	call   0x10037620
100120eb:	pop    ecx
100120ec:	jmp    0x10012118
100120ee:	mov    eax,DWORD PTR [ebp-0x24]
100120f1:	mov    eax,DWORD PTR [eax+0x10]
100120f4:	mov    eax,DWORD PTR [eax+0x90]
100120fa:	push   0x10011eb5
100120ff:	push   eax
10012100:	call   0x100562e0
10012105:	push   esi
10012106:	push   0x1
10012108:	push   0x1007fd80
1001210d:	mov    ds:0x1007fc34,eax
10012112:	call   DWORD PTR ds:0x100650d8
10012118:	or     DWORD PTR [ebp-0x4],0xffffffff
1001211c:	mov    eax,DWORD PTR [ebp-0x24]
1001211f:	cmp    eax,esi
10012121:	je     0x10012129
10012123:	mov    ecx,DWORD PTR [eax]
10012125:	push   eax
10012126:	call   DWORD PTR [ecx+0x8]
10012129:	call   0x10058931
1001212e:	ret    
1001212f:	push   0x10
10012131:	mov    eax,0x1005fbf7
10012136:	call   0x10058845
1001213b:	push   DWORD PTR [ebp+0x8]
1001213e:	lea    eax,[ebp-0x1c]
10012141:	push   eax
10012142:	call   0x1000f1c4
10012147:	pop    ecx
10012148:	pop    ecx
10012149:	xor    ebx,ebx
1001214b:	lea    eax,[ebp-0x1c]
1001214e:	mov    DWORD PTR [ebp-0x4],ebx
10012151:	call   0x1000c4c8
10012156:	cmp    eax,0x2
10012159:	jne    0x10012191
1001215b:	push   ebx
1001215c:	lea    esi,[ebp-0x1c]
1001215f:	call   0x1000c4de
10012164:	mov    ecx,DWORD PTR [ebp+0xc]
10012167:	push   0xffffffff
10012169:	push   ebx
1001216a:	push   eax
1001216b:	call   0x1000124a
10012170:	inc    ebx
10012171:	push   ebx
10012172:	call   0x1000c4de
10012177:	cmp    DWORD PTR [eax+0x18],0x10
1001217b:	jb     0x10012182
1001217d:	mov    eax,DWORD PTR [eax+0x4]
10012180:	jmp    0x10012185
10012182:	add    eax,0x4
10012185:	push   eax
10012186:	call   0x10044a05
1001218b:	pop    ecx
1001218c:	mov    ecx,DWORD PTR [ebp+0x10]
1001218f:	mov    DWORD PTR [ecx],eax
10012191:	lea    esi,[ebp-0x1c]
10012194:	call   0x1000d35f
10012199:	mov    al,bl
1001219b:	call   0x1005891d
100121a0:	ret    
100121a1:	push   ebp
100121a2:	mov    ebp,esp
100121a4:	push   0xffffffff
100121a6:	push   0x1006190c
100121ab:	mov    eax,fs:0x0
100121b1:	push   eax
100121b2:	push   ecx
100121b3:	mov    eax,0x1058
100121b8:	call   0x10047700
100121bd:	mov    eax,ds:0x1007d030
100121c2:	xor    eax,ebp
100121c4:	mov    DWORD PTR [ebp-0x14],eax
100121c7:	push   ebx
100121c8:	push   esi
100121c9:	push   edi
100121ca:	push   eax
100121cb:	lea    eax,[ebp-0xc]
100121ce:	mov    fs:0x0,eax
100121d4:	mov    DWORD PTR [ebp-0x10],esp
100121d7:	mov    eax,DWORD PTR [ebp+0x8]
100121da:	mov    DWORD PTR [ebp-0x103c],eax
100121e0:	mov    eax,DWORD PTR [ebp+0xc]
100121e3:	xor    edi,edi
100121e5:	push   0xfff
100121ea:	mov    DWORD PTR [ebp-0x1040],eax
100121f0:	mov    DWORD PTR [eax],edi
100121f2:	lea    eax,[ebp-0x1017]
100121f8:	push   edi
100121f9:	push   eax
100121fa:	mov    DWORD PTR [ebp-0x1054],0x1000
10012204:	mov    BYTE PTR [ebp-0x1018],0x0
1001220b:	call   0x10044950
10012210:	add    esp,0xc
10012213:	lea    eax,[ebp-0x1054]
10012219:	push   eax
1001221a:	lea    eax,[ebp-0x1018]
10012220:	push   eax
10012221:	push   0x26
10012223:	push   edi
10012224:	call   DWORD PTR ds:0x10065370
1001222a:	test   eax,eax
1001222c:	jne    0x1001224a
1001222e:	xor    al,al
10012230:	mov    ecx,DWORD PTR [ebp-0xc]
10012233:	mov    DWORD PTR fs:0x0,ecx
1001223a:	pop    ecx
1001223b:	pop    edi
1001223c:	pop    esi
1001223d:	pop    ebx
1001223e:	mov    ecx,DWORD PTR [ebp-0x14]
10012241:	xor    ecx,ebp
10012243:	call   0x10041d97
10012248:	leave  
10012249:	ret    
1001224a:	cmp    DWORD PTR [ebp-0x1018],0x3
10012251:	jne    0x1001222e
10012253:	cmp    DWORD PTR [ebp-0x1014],edi
10012259:	je     0x1001222e
1001225b:	push   DWORD PTR [ebp-0x1014]
10012261:	lea    ecx,[ebp-0x1034]
10012267:	call   0x100011d6
1001226c:	mov    DWORD PTR [ebp-0x4],edi
1001226f:	mov    DWORD PTR [ebp-0x104c],edi
10012275:	mov    DWORD PTR [ebp-0x1048],edi
1001227b:	mov    DWORD PTR [ebp-0x1044],edi
10012281:	lea    eax,[ebp-0x1034]
10012287:	push   eax
10012288:	lea    eax,[ebp-0x1064]
1001228e:	push   eax
1001228f:	mov    BYTE PTR [ebp-0x1035],0x0
10012296:	mov    BYTE PTR [ebp-0x4],0x2
1001229a:	call   0x100123e0
1001229f:	pop    ecx
100122a0:	pop    ecx
100122a1:	lea    ecx,[ebp-0x1050]
100122a7:	mov    BYTE PTR [ebp-0x4],0x3
100122ab:	call   0x10012494
100122b0:	lea    esi,[ebp-0x1064]
100122b6:	mov    BYTE PTR [ebp-0x4],0x2
100122ba:	call   0x1000cbf0
100122bf:	xor    ebx,ebx
100122c1:	cmp    DWORD PTR [ebp-0x104c],edi
100122c7:	jne    0x100122cd
100122c9:	xor    eax,eax
100122cb:	jmp    0x100122dc
100122cd:	mov    eax,DWORD PTR [ebp-0x1048]
100122d3:	sub    eax,DWORD PTR [ebp-0x104c]
100122d9:	sar    eax,0x4
100122dc:	cmp    ebx,eax
100122de:	je     0x1001236d
100122e4:	push   ebx
100122e5:	lea    esi,[ebp-0x1050]
100122eb:	call   0x1000c4a9
100122f0:	call   0x1000c4c8
100122f5:	cmp    eax,0x2
100122f8:	jne    0x10012367
100122fa:	push   edi
100122fb:	push   ebx
100122fc:	call   0x1000c4a9
10012301:	mov    esi,eax
10012303:	call   0x1000c4de
10012308:	cmp    DWORD PTR [eax+0x18],0x10
1001230c:	jb     0x10012313
1001230e:	mov    esi,DWORD PTR [eax+0x4]
10012311:	jmp    0x10012316
10012313:	lea    esi,[eax+0x4]
10012316:	push   0x1006ce1c
1001231b:	push   0x4
1001231d:	push   0x1006ce4c
10012322:	call   0x10003d75
10012327:	add    esp,0xc
1001232a:	push   eax
1001232b:	push   esi
1001232c:	call   0x100443bf
10012331:	test   eax,eax
10012333:	pop    ecx
10012334:	pop    ecx
10012335:	jne    0x10012367
10012337:	push   DWORD PTR [ebp-0x1040]
1001233d:	lea    esi,[ebp-0x1050]
10012343:	push   DWORD PTR [ebp-0x103c]
10012349:	push   0x1
1001234b:	push   ebx
1001234c:	call   0x1000c4a9
10012351:	mov    esi,eax
10012353:	call   0x1000c4de
10012358:	push   eax
10012359:	call   0x1001212f
1001235e:	add    esp,0xc
10012361:	mov    BYTE PTR [ebp-0x1035],al
10012367:	inc    ebx
10012368:	jmp    0x100122c1
1001236d:	mov    DWORD PTR [ebp-0x4],0x1
10012374:	jmp    0x1001237e
10012376:	mov    eax,0x1001237c
1001237b:	ret    
1001237c:	xor    edi,edi
1001237e:	cmp    BYTE PTR [ebp-0x1035],0x0
10012385:	je     0x100123a9
10012387:	mov    bl,0x1
10012389:	lea    esi,[ebp-0x1050]
1001238f:	call   0x1000cbf0
10012394:	push   edi
10012395:	push   0x1
10012397:	lea    ecx,[ebp-0x1034]
1001239d:	call   0x100012f9
100123a2:	mov    al,bl
100123a4:	jmp    0x10012230
100123a9:	push   DWORD PTR [ebp-0x1040]
100123af:	lea    eax,[ebp-0x1034]
100123b5:	push   DWORD PTR [ebp-0x103c]
100123bb:	mov    BYTE PTR [ebp-0x4],0x5
100123bf:	push   eax
100123c0:	call   0x1001212f
100123c5:	add    esp,0xc
100123c8:	mov    BYTE PTR [ebp-0x1035],al
100123ce:	jmp    0x100123d8
100123d0:	mov    eax,0x100123d6
100123d5:	ret    
100123d6:	xor    edi,edi
100123d8:	mov    bl,BYTE PTR [ebp-0x1035]
100123de:	jmp    0x10012389
100123e0:	push   0x34
100123e2:	mov    eax,0x100618d0
100123e7:	call   0x10058845
100123ec:	mov    edi,DWORD PTR [ebp+0x8]
100123ef:	xor    esi,esi
100123f1:	mov    DWORD PTR [ebp-0x10],esi
100123f4:	mov    DWORD PTR [edi+0x4],esi
100123f7:	mov    DWORD PTR [edi+0x8],esi
100123fa:	mov    DWORD PTR [edi+0xc],esi
100123fd:	mov    DWORD PTR [ebp-0x4],esi
10012400:	push   DWORD PTR ds:0x1008041c
10012406:	mov    DWORD PTR [ebp-0x10],0x1
1001240d:	call   0x10041f10
10012412:	pop    ecx
10012413:	mov    DWORD PTR [ebp-0x14],eax
10012416:	push   esi
10012417:	push   DWORD PTR ds:0x1008041c
1001241d:	push   DWORD PTR [ebp+0xc]
10012420:	call   0x1000c40c
10012425:	mov    ebx,eax
10012427:	cmp    ebx,0xffffffff
1001242a:	jne    0x10012432
1001242c:	mov    eax,DWORD PTR [ebp+0xc]
1001242f:	mov    ebx,DWORD PTR [eax+0x14]
10012432:	cmp    ebx,esi
10012434:	jb     0x10012484
10012436:	mov    eax,ebx
10012438:	sub    eax,esi
1001243a:	push   eax
1001243b:	push   esi
1001243c:	push   DWORD PTR [ebp+0xc]
1001243f:	lea    eax,[ebp-0x40]
10012442:	call   0x1000c42b
10012447:	push   eax
10012448:	lea    eax,[ebp-0x24]
1001244b:	push   eax
1001244c:	mov    DWORD PTR [ebp-0x4],0x1
10012453:	call   0x100125b5
10012458:	pop    ecx
10012459:	pop    ecx
1001245a:	push   eax
1001245b:	mov    esi,edi
1001245d:	mov    BYTE PTR [ebp-0x4],0x2
10012461:	call   0x1000f27f
10012466:	lea    esi,[ebp-0x24]
10012469:	call   0x1000d35f
1001246e:	push   0x0
10012470:	push   0x1
10012472:	lea    ecx,[ebp-0x40]
10012475:	mov    BYTE PTR [ebp-0x4],0x0
10012479:	call   0x100012f9
1001247e:	mov    eax,DWORD PTR [ebp-0x14]
10012481:	lea    esi,[ebx+eax*1]
10012484:	mov    eax,DWORD PTR [ebp+0xc]
10012487:	cmp    esi,DWORD PTR [eax+0x14]
1001248a:	jb     0x10012416
1001248c:	mov    eax,edi
1001248e:	call   0x1005891d
10012493:	ret    
10012494:	push   ebx
10012495:	push   esi
10012496:	push   edi
10012497:	mov    esi,eax
10012499:	mov    edi,ecx
1001249b:	cmp    edi,esi
1001249d:	je     0x100125af
100124a3:	call   0x1000c496
100124a8:	test   eax,eax
100124aa:	jne    0x100124ed
100124ac:	mov    ebx,DWORD PTR [edi+0x8]
100124af:	cmp    DWORD PTR [edi+0x4],ebx
100124b2:	jbe    0x100124b9
100124b4:	call   0x100422b0
100124b9:	mov    esi,DWORD PTR [edi+0x4]
100124bc:	cmp    esi,DWORD PTR [edi+0x8]
100124bf:	jbe    0x100124c6
100124c1:	call   0x100422b0
100124c6:	cmp    esi,ebx
100124c8:	je     0x100125af
100124ce:	push   DWORD PTR [edi+0x8]
100124d1:	mov    eax,esi
100124d3:	mov    ecx,ebx
100124d5:	call   0x10012670
100124da:	pop    ecx
100124db:	push   DWORD PTR [edi+0x8]
100124de:	mov    esi,eax
100124e0:	call   0x1000cec6
100124e5:	mov    DWORD PTR [edi+0x8],esi
100124e8:	jmp    0x100125af
100124ed:	mov    eax,esi
100124ef:	call   0x1000c496
100124f4:	mov    ebx,eax
100124f6:	mov    eax,edi
100124f8:	call   0x1000c496
100124fd:	cmp    ebx,eax
100124ff:	mov    eax,DWORD PTR [edi+0x4]
10012502:	ja     0x1001252a
10012504:	push   DWORD PTR [esi+0x8]
10012507:	mov    ecx,DWORD PTR [esi+0x4]
1001250a:	call   0x10012670
1001250f:	pop    ecx
10012510:	push   DWORD PTR [edi+0x8]
10012513:	call   0x1000cec6
10012518:	mov    eax,esi
1001251a:	call   0x1000c496
1001251f:	shl    eax,0x4
10012522:	add    eax,DWORD PTR [edi+0x4]
10012525:	jmp    0x100125ac
1001252a:	test   eax,eax
1001252c:	jne    0x10012532
1001252e:	xor    ebx,ebx
10012530:	jmp    0x1001253a
10012532:	mov    ebx,DWORD PTR [edi+0xc]
10012535:	sub    ebx,eax
10012537:	sar    ebx,0x4
1001253a:	mov    eax,esi
1001253c:	call   0x1000c496
10012541:	cmp    eax,ebx
10012543:	ja     0x10012567
10012545:	mov    eax,edi
10012547:	call   0x1000c496
1001254c:	mov    ecx,DWORD PTR [esi+0x4]
1001254f:	mov    ebx,eax
10012551:	mov    eax,DWORD PTR [edi+0x4]
10012554:	shl    ebx,0x4
10012557:	add    ebx,ecx
10012559:	push   ebx
1001255a:	call   0x10012670
1001255f:	pop    ecx
10012560:	push   DWORD PTR [edi+0x8]
10012563:	mov    ecx,ebx
10012565:	jmp    0x100125a4
10012567:	mov    eax,DWORD PTR [edi+0x4]
1001256a:	xor    ebx,ebx
1001256c:	cmp    eax,ebx
1001256e:	je     0x10012581
10012570:	push   DWORD PTR [edi+0x8]
10012573:	call   0x1000cec6
10012578:	push   DWORD PTR [edi+0x4]
1001257b:	call   0x10041d92
10012580:	pop    ecx
10012581:	mov    eax,esi
10012583:	call   0x1000c496
10012588:	cmp    eax,ebx
1001258a:	mov    DWORD PTR [edi+0x4],ebx
1001258d:	mov    DWORD PTR [edi+0x8],ebx
10012590:	mov    DWORD PTR [edi+0xc],ebx
10012593:	je     0x100125af
10012595:	call   0x1000f3bb
1001259a:	test   al,al
1001259c:	je     0x100125af
1001259e:	push   DWORD PTR [edi+0x4]
100125a1:	mov    ecx,DWORD PTR [esi+0x4]
100125a4:	push   DWORD PTR [esi+0x8]
100125a7:	call   0x100126a8
100125ac:	mov    DWORD PTR [edi+0x8],eax
100125af:	mov    eax,edi
100125b1:	pop    edi
100125b2:	pop    esi
100125b3:	pop    ebx
100125b4:	ret    
100125b5:	push   0x44
100125b7:	mov    eax,0x1005fbd4
100125bc:	call   0x10058845
100125c1:	mov    esi,DWORD PTR [ebp+0x8]
100125c4:	xor    ebx,ebx
100125c6:	mov    DWORD PTR [ebp-0x14],ebx
100125c9:	mov    DWORD PTR [esi+0x4],ebx
100125cc:	mov    DWORD PTR [esi+0x8],ebx
100125cf:	mov    DWORD PTR [esi+0xc],ebx
100125d2:	xor    edi,edi
100125d4:	inc    edi
100125d5:	mov    DWORD PTR [ebp-0x4],ebx
100125d8:	push   0x1006cd84
100125dd:	mov    DWORD PTR [ebp-0x14],edi
100125e0:	call   0x10041f10
100125e5:	pop    ecx
100125e6:	mov    DWORD PTR [ebp-0x18],eax
100125e9:	mov    DWORD PTR [ebp-0x10],ebx
100125ec:	push   DWORD PTR [ebp-0x10]
100125ef:	push   0x1006cd84
100125f4:	push   DWORD PTR [ebp+0xc]
100125f7:	call   0x1000c40c
100125fc:	mov    ebx,eax
100125fe:	cmp    ebx,0xffffffff
10012601:	jne    0x10012609
10012603:	mov    eax,DWORD PTR [ebp+0xc]
10012606:	mov    ebx,DWORD PTR [eax+0x14]
10012609:	cmp    ebx,DWORD PTR [ebp-0x10]
1001260c:	jb     0x1001265d
1001260e:	mov    eax,ebx
10012610:	sub    eax,DWORD PTR [ebp-0x10]
10012613:	push   eax
10012614:	push   DWORD PTR [ebp-0x10]
10012617:	lea    eax,[ebp-0x50]
1001261a:	push   DWORD PTR [ebp+0xc]
1001261d:	call   0x1000c42b
10012622:	push   eax
10012623:	lea    eax,[ebp-0x34]
10012626:	push   eax
10012627:	mov    DWORD PTR [ebp-0x4],edi
1001262a:	call   0x1000f8ca
1001262f:	pop    ecx
10012630:	pop    ecx
10012631:	push   eax
10012632:	mov    BYTE PTR [ebp-0x4],0x2
10012636:	call   0x1000f4a8
1001263b:	push   0x0
1001263d:	push   edi
1001263e:	lea    ecx,[ebp-0x34]
10012641:	call   0x100012f9
10012646:	push   0x0
10012648:	push   edi
10012649:	lea    ecx,[ebp-0x50]
1001264c:	mov    BYTE PTR [ebp-0x4],0x0
10012650:	call   0x100012f9
10012655:	mov    eax,DWORD PTR [ebp-0x18]
10012658:	add    ebx,eax
1001265a:	mov    DWORD PTR [ebp-0x10],ebx
1001265d:	mov    eax,DWORD PTR [ebp-0x10]
10012660:	mov    ecx,DWORD PTR [ebp+0xc]
10012663:	cmp    eax,DWORD PTR [ecx+0x14]
10012666:	jb     0x100125ec
10012668:	mov    eax,esi
1001266a:	call   0x1005891d
1001266f:	ret    
10012670:	push   ecx
10012671:	push   ebx
10012672:	push   esi
10012673:	mov    esi,DWORD PTR [esp+0x10]
10012677:	push   edi
10012678:	mov    edi,ecx
1001267a:	sub    esi,edi
1001267c:	sar    esi,0x4
1001267f:	shl    esi,0x4
10012682:	mov    ebx,eax
10012684:	add    esi,ebx
10012686:	cmp    edi,DWORD PTR [esp+0x14]
1001268a:	je     0x100126a1
1001268c:	sub    ebx,edi
1001268e:	lea    ecx,[ebx+edi*1]
10012691:	mov    eax,edi
10012693:	call   0x1000fcaf
10012698:	add    edi,0x10
1001269b:	cmp    edi,DWORD PTR [esp+0x14]
1001269f:	jne    0x1001268e
100126a1:	pop    edi
100126a2:	mov    eax,esi
100126a4:	pop    esi
100126a5:	pop    ebx
100126a6:	pop    ecx
100126a7:	ret    
100126a8:	push   ebp
100126a9:	mov    ebp,esp
100126ab:	push   ecx
100126ac:	push   edi
100126ad:	xor    eax,eax
100126af:	lea    edi,[ebp-0x4]
100126b2:	stos   BYTE PTR es:[edi],al
100126b3:	push   DWORD PTR [ebp-0x4]
100126b6:	push   DWORD PTR [ebp+0xc]
100126b9:	push   DWORD PTR [ebp+0xc]
100126bc:	push   DWORD PTR [ebp+0x8]
100126bf:	call   0x100126cc
100126c4:	add    esp,0x10
100126c7:	pop    edi
100126c8:	leave  
100126c9:	ret    0x8
100126cc:	push   0xc
100126ce:	mov    eax,0x10060d3e
100126d3:	call   0x10058878
100126d8:	mov    esi,ecx
100126da:	mov    eax,DWORD PTR [ebp+0xc]
100126dd:	and    DWORD PTR [ebp-0x4],0x0
100126e1:	mov    DWORD PTR [ebp-0x14],eax
100126e4:	cmp    esi,DWORD PTR [ebp+0x8]
100126e7:	je     0x10012717
100126e9:	push   DWORD PTR [ebp+0xc]
100126ec:	mov    ecx,esi
100126ee:	call   0x1000fc89
100126f3:	add    DWORD PTR [ebp+0xc],0x10
100126f7:	add    esi,0x10
100126fa:	jmp    0x100126e4
100126fc:	mov    esi,DWORD PTR [ebp-0x14]
100126ff:	jmp    0x10012709
10012701:	call   0x1000d35f
10012706:	add    esi,0x10
10012709:	cmp    esi,DWORD PTR [ebp+0xc]
1001270c:	jne    0x10012701
1001270e:	push   0x0
10012710:	push   0x0
10012712:	call   0x10046704
10012717:	mov    eax,DWORD PTR [ebp+0xc]
1001271a:	call   0x1005891d
1001271f:	ret    
10012720:	push   esi
10012721:	mov    esi,edi
10012723:	call   0x10003ba8
10012728:	lea    esi,[edi+0x1c]
1001272b:	call   0x10003ba8
10012730:	lea    esi,[edi+0x38]
10012733:	call   0x10003ba8
10012738:	lea    esi,[edi+0x54]
1001273b:	call   0x10003ba8
10012740:	lea    esi,[edi+0x70]
10012743:	call   0x10003ba8
10012748:	mov    eax,edi
1001274a:	pop    esi
1001274b:	ret    
1001274c:	push   0x0
1001274e:	mov    eax,0x1005f238
10012753:	call   0x10058845
10012758:	mov    edi,DWORD PTR [ebp+0x8]
1001275b:	mov    esi,edi
1001275d:	call   0x10003ba8
10012762:	xor    ebx,ebx
10012764:	lea    esi,[edi+0x1c]
10012767:	mov    DWORD PTR [ebp-0x4],ebx
1001276a:	call   0x10003ba8
1001276f:	lea    esi,[edi+0x38]
10012772:	call   0x10003ba8
10012777:	lea    esi,[edi+0x54]
1001277a:	call   0x10003ba8
1001277f:	lea    esi,[edi+0x70]
10012782:	call   0x10003ba8
10012787:	push   0xffffffff
10012789:	push   ebx
1001278a:	push   DWORD PTR [ebp+0xc]
1001278d:	mov    ecx,edi
1001278f:	mov    BYTE PTR [ebp-0x4],0x4
10012793:	call   0x1000124a
10012798:	push   0xffffffff
1001279a:	push   ebx
1001279b:	push   DWORD PTR [ebp+0x10]
1001279e:	lea    ecx,[edi+0x1c]
100127a1:	call   0x1000124a
100127a6:	push   0xffffffff
100127a8:	push   ebx
100127a9:	push   DWORD PTR [ebp+0x14]
100127ac:	lea    ecx,[edi+0x38]
100127af:	call   0x1000124a
100127b4:	push   0xffffffff
100127b6:	push   ebx
100127b7:	push   DWORD PTR [ebp+0x18]
100127ba:	lea    ecx,[edi+0x54]
100127bd:	call   0x1000124a
100127c2:	push   0xffffffff
100127c4:	push   ebx
100127c5:	push   DWORD PTR [ebp+0x1c]
100127c8:	mov    ecx,esi
100127ca:	call   0x1000124a
100127cf:	mov    eax,edi
100127d1:	call   0x1005891d
100127d6:	ret    0x18
100127d9:	push   0x94
100127de:	mov    eax,0x1005f1dc
100127e3:	call   0x100588ae
100127e8:	and    DWORD PTR [ebp-0xa0],0x0
100127ef:	push   0xffffffff
100127f1:	push   DWORD PTR ds:0x1007fda4
100127f7:	mov    edi,ecx
100127f9:	call   DWORD PTR ds:0x10065084
100127ff:	test   eax,eax
10012801:	jne    0x1001283d
10012803:	lea    eax,[ebp-0x9c]
10012809:	push   eax
1001280a:	mov    ecx,0x1007fda8
1001280f:	call   0x1001284a
10012814:	and    DWORD PTR [ebp-0x4],0x0
10012818:	push   DWORD PTR ds:0x1007fda4
1001281e:	call   DWORD PTR ds:0x10065094
10012824:	push   edi
10012825:	lea    ecx,[ebp-0x9c]
1001282b:	call   0x1001284a
10012830:	lea    esi,[ebp-0x9c]
10012836:	call   0x1000b749
1001283b:	jmp    0x10012842
1001283d:	call   0x10012720
10012842:	mov    eax,edi
10012844:	call   0x10058931
10012849:	ret    
1001284a:	push   0x0
1001284c:	mov    eax,0x1005e9e4
10012851:	call   0x10058845
10012856:	mov    edi,ecx
10012858:	mov    esi,DWORD PTR [ebp+0x8]
1001285b:	push   edi
1001285c:	mov    ecx,esi
1001285e:	call   0x100011b0
10012863:	and    DWORD PTR [ebp-0x4],0x0
10012867:	lea    eax,[edi+0x1c]
1001286a:	push   eax
1001286b:	lea    ecx,[esi+0x1c]
1001286e:	call   0x100011b0
10012873:	lea    eax,[edi+0x38]
10012876:	push   eax
10012877:	lea    ecx,[esi+0x38]
1001287a:	mov    BYTE PTR [ebp-0x4],0x1
1001287e:	call   0x100011b0
10012883:	lea    eax,[edi+0x54]
10012886:	push   eax
10012887:	lea    ecx,[esi+0x54]
1001288a:	mov    BYTE PTR [ebp-0x4],0x2
1001288e:	call   0x100011b0
10012893:	add    edi,0x70
10012896:	push   edi
10012897:	lea    ecx,[esi+0x70]
1001289a:	mov    BYTE PTR [ebp-0x4],0x3
1001289e:	call   0x100011b0
100128a3:	mov    eax,esi
100128a5:	call   0x1005891d
100128aa:	ret    0x4
100128ad:	push   ebx
100128ae:	push   esi
100128af:	push   edi
100128b0:	push   0xffffffff
100128b2:	xor    ebx,ebx
100128b4:	mov    esi,eax
100128b6:	push   ebx
100128b7:	mov    edi,0x1007fda8
100128bc:	push   esi
100128bd:	mov    ecx,edi
100128bf:	call   0x1000124a
100128c4:	push   0xffffffff
100128c6:	push   ebx
100128c7:	lea    eax,[esi+0x1c]
100128ca:	push   eax
100128cb:	mov    ecx,0x1007fdc4
100128d0:	call   0x1000124a
100128d5:	push   0xffffffff
100128d7:	push   ebx
100128d8:	lea    eax,[esi+0x38]
100128db:	push   eax
100128dc:	mov    ecx,0x1007fde0
100128e1:	call   0x1000124a
100128e6:	push   0xffffffff
100128e8:	push   ebx
100128e9:	lea    eax,[esi+0x54]
100128ec:	push   eax
100128ed:	mov    ecx,0x1007fdfc
100128f2:	call   0x1000124a
100128f7:	push   0xffffffff
100128f9:	push   ebx
100128fa:	add    esi,0x70
100128fd:	push   esi
100128fe:	mov    ecx,0x1007fe18
10012903:	call   0x1000124a
10012908:	mov    eax,edi
1001290a:	pop    edi
1001290b:	pop    esi
1001290c:	pop    ebx
1001290d:	ret    
1001290e:	push   esi
1001290f:	mov    esi,edi
10012911:	call   0x10003ba8
10012916:	lea    esi,[edi+0x1c]
10012919:	call   0x10003ba8
1001291e:	lea    esi,[edi+0x38]
10012921:	call   0x10003ba8
10012926:	lea    esi,[edi+0x54]
10012929:	call   0x10003ba8
1001292e:	xor    eax,eax
10012930:	mov    DWORD PTR [edi+0x70],eax
10012933:	mov    DWORD PTR [edi+0x80],eax
10012939:	mov    DWORD PTR [edi+0x84],eax
1001293f:	mov    eax,edi
10012941:	pop    esi
10012942:	ret    
10012943:	push   0x38
10012945:	mov    eax,0x1006188c
1001294a:	call   0x10058845
1001294f:	push   DWORD PTR [ebp+0xc]
10012952:	lea    esi,[ebp-0x44]
10012955:	call   0x1002ffc0
1001295a:	pop    ecx
1001295b:	lea    ecx,[ebp-0x28]
1001295e:	push   ecx
1001295f:	xor    esi,esi
10012961:	mov    ecx,eax
10012963:	mov    DWORD PTR [ebp-0x4],esi
10012966:	call   0x1002f720
1001296b:	pop    ecx
1001296c:	push   DWORD PTR [ebp+0x10]
1001296f:	mov    BYTE PTR [ebp-0x4],0x1
10012973:	push   eax
10012974:	push   DWORD PTR [ebp+0x8]
10012977:	call   0x10012e23
1001297c:	push   esi
1001297d:	push   0x1
1001297f:	lea    ecx,[ebp-0x28]
10012982:	mov    bl,al
10012984:	call   0x100012f9
10012989:	push   esi
1001298a:	push   0x1
1001298c:	lea    ecx,[ebp-0x44]
1001298f:	call   0x100012f9
10012994:	mov    al,bl
10012996:	call   0x1005891d
1001299b:	ret    0xc
1001299e:	push   0x104
100129a3:	mov    eax,0x10061854
100129a8:	call   0x100588ae
100129ad:	mov    eax,DWORD PTR [ebp+0x8]
100129b0:	mov    DWORD PTR [ebp-0xf0],eax
100129b6:	mov    eax,DWORD PTR [ebp+0xc]
100129b9:	push   eax
100129ba:	lea    esi,[ebp-0x110]
100129c0:	mov    DWORD PTR [ebp-0xf4],ecx
100129c6:	call   0x1002ffc0
100129cb:	pop    ecx
100129cc:	and    DWORD PTR [ebp-0x4],0x0
100129d0:	lea    ecx,[ebp-0x60]
100129d3:	push   ecx
100129d4:	mov    ecx,eax
100129d6:	call   0x1002f720
100129db:	pop    ecx
100129dc:	push   0x0
100129de:	push   0x1
100129e0:	mov    ecx,esi
100129e2:	call   0x100012f9
100129e7:	lea    edi,[ebp-0xec]
100129ed:	call   0x1001290e
100129f2:	mov    eax,edi
100129f4:	push   eax
100129f5:	lea    eax,[ebp-0x60]
100129f8:	push   eax
100129f9:	push   DWORD PTR [ebp-0xf0]
100129ff:	mov    BYTE PTR [ebp-0x4],0x3
10012a03:	call   0x10012e23
10012a08:	test   al,al
10012a0a:	je     0x10012ac8
10012a10:	push   0x1006bb18
10012a15:	lea    esi,[ebp-0xd0]
10012a1b:	call   0x10005e33
10012a20:	test   al,al
10012a22:	pop    ecx
10012a23:	jne    0x10012a97
10012a25:	mov    eax,esi
10012a27:	push   eax
10012a28:	lea    ecx,[ebp-0x44]
10012a2b:	call   0x100011b0
10012a30:	mov    eax,DWORD PTR [ebx]
10012a32:	mov    DWORD PTR [ebp-0x24],eax
10012a35:	mov    eax,DWORD PTR [ebx+0x4]
10012a38:	mov    DWORD PTR [ebp-0x20],eax
10012a3b:	mov    eax,DWORD PTR [ebp-0xf4]
10012a41:	mov    ecx,DWORD PTR [eax]
10012a43:	mov    eax,DWORD PTR [eax+0x4]
10012a46:	mov    DWORD PTR [ebp-0x1c],ecx
10012a49:	mov    DWORD PTR [ebp-0x18],eax
10012a4c:	sub    esp,0x30
10012a4f:	mov    esi,esp
10012a51:	lea    eax,[ebp-0x44]
10012a54:	mov    DWORD PTR [ebp-0xf4],esp
10012a5a:	push   eax
10012a5b:	mov    ecx,esi
10012a5d:	mov    BYTE PTR [ebp-0x4],0x4
10012a61:	call   0x100011b0
10012a66:	mov    eax,DWORD PTR [ebp-0x24]
10012a69:	mov    ecx,DWORD PTR [ebp-0xf0]
10012a6f:	mov    DWORD PTR [esi+0x20],eax
10012a72:	mov    eax,DWORD PTR [ebp-0x20]
10012a75:	mov    DWORD PTR [esi+0x24],eax
10012a78:	mov    eax,DWORD PTR [ebp-0x1c]
10012a7b:	mov    DWORD PTR [esi+0x28],eax
10012a7e:	mov    eax,DWORD PTR [ebp-0x18]
10012a81:	mov    DWORD PTR [esi+0x2c],eax
10012a84:	call   0x10013e71
10012a89:	push   0x0
10012a8b:	push   0x1
10012a8d:	lea    ecx,[ebp-0x44]
10012a90:	call   0x100012f9
10012a95:	jmp    0x10012ac8
10012a97:	mov    eax,DWORD PTR [ebx]
10012a99:	mov    DWORD PTR [ebp-0x74],eax
10012a9c:	mov    eax,DWORD PTR [ebx+0x4]
10012a9f:	mov    DWORD PTR [ebp-0x70],eax
10012aa2:	mov    eax,DWORD PTR [ebp-0xf4]
10012aa8:	mov    ecx,DWORD PTR [eax]
10012aaa:	mov    eax,DWORD PTR [eax+0x4]
10012aad:	mov    DWORD PTR [ebp-0x68],eax
10012ab0:	lea    eax,[ebp-0xec]
10012ab6:	mov    DWORD PTR [ebp-0x6c],ecx
10012ab9:	mov    ecx,DWORD PTR [ebp-0xf0]
10012abf:	push   eax
10012ac0:	lea    edx,[ebp-0x60]
10012ac3:	call   0x10012b93
10012ac8:	lea    esi,[ebp-0xec]
10012ace:	call   0x10002ecc
10012ad3:	push   0x0
10012ad5:	push   0x1
10012ad7:	lea    ecx,[ebp-0x60]
10012ada:	call   0x100012f9
10012adf:	call   0x10058931
10012ae4:	ret    0x8
10012ae7:	push   0x0
10012ae9:	mov    eax,0x10060d23
10012aee:	call   0x10058845
10012af3:	call   0x10013d96
10012af8:	mov    ds:0x1007fe38,eax
10012afd:	mov    BYTE PTR [eax+0xc1],0x1
10012b04:	mov    eax,ds:0x1007fe38
10012b09:	mov    DWORD PTR [eax+0x4],eax
10012b0c:	mov    eax,ds:0x1007fe38
10012b11:	mov    DWORD PTR [eax],eax
10012b13:	mov    eax,ds:0x1007fe38
10012b18:	xor    edi,edi
10012b1a:	mov    DWORD PTR [eax+0x8],eax
10012b1d:	mov    DWORD PTR ds:0x1007fe3c,edi
10012b23:	mov    esi,0x1007fe40
10012b28:	mov    DWORD PTR [esp+0x18],edi
10012b2c:	call   0x10013b3e
10012b31:	push   edi
10012b32:	push   edi
10012b33:	push   edi
10012b34:	mov    DWORD PTR ds:0x1007fe50,0x14
10012b3e:	mov    DWORD PTR ds:0x1007fe54,0x96
10012b48:	call   DWORD PTR ds:0x10065074
10012b4e:	mov    ds:0x1007fe4c,eax
10012b53:	mov    eax,0x1007fe34
10012b58:	call   0x1005891d
10012b5d:	ret    
10012b5e:	push   0x0
10012b60:	mov    eax,0x10060d23
10012b65:	call   0x10058845
10012b6a:	and    DWORD PTR [ebp-0x4],0x0
10012b6e:	push   DWORD PTR ds:0x1007fe4c
10012b74:	call   DWORD PTR ds:0x10065070
10012b7a:	mov    eax,0x1007fe40
10012b7f:	call   0x1000149f
10012b84:	or     DWORD PTR [ebp-0x4],0xffffffff
10012b88:	call   0x10013a3f
10012b8d:	call   0x1005891d
10012b92:	ret    
10012b93:	push   0x228
10012b98:	mov    eax,0x10060cf6
10012b9d:	call   0x100588e4
10012ba2:	mov    eax,DWORD PTR [ebp+0x8]
10012ba5:	mov    edi,ecx
10012ba7:	push   0x1f4
10012bac:	push   DWORD PTR [edi+0x18]
10012baf:	mov    esi,edx
10012bb1:	mov    DWORD PTR [ebp-0xbc],edi
10012bb7:	mov    DWORD PTR [ebp-0xc4],esi
10012bbd:	mov    DWORD PTR [ebp-0xc0],eax
10012bc3:	call   DWORD PTR ds:0x10065084
10012bc9:	test   eax,eax
10012bcb:	jne    0x10012ccb
10012bd1:	and    DWORD PTR [ebp-0x4],eax
10012bd4:	push   edi
10012bd5:	call   0x10013140
10012bda:	push   esi
10012bdb:	lea    ebx,[ebp-0xb8]
10012be1:	mov    esi,edi
10012be3:	call   0x100133dc
10012be8:	cmp    DWORD PTR [ebp-0xb8],0x0
10012bef:	mov    ebx,DWORD PTR [edi+0x4]
10012bf2:	je     0x10012bfc
10012bf4:	cmp    DWORD PTR [ebp-0xb8],edi
10012bfa:	je     0x10012c01
10012bfc:	call   0x100422b0
10012c01:	mov    esi,DWORD PTR [ebp-0xb4]
10012c07:	cmp    esi,ebx
10012c09:	je     0x10012cd3
10012c0f:	and    DWORD PTR [ebp-0xd0],0x0
10012c16:	lea    ebx,[edi+0xc]
10012c19:	mov    eax,DWORD PTR [ebx+0x4]
10012c1c:	mov    DWORD PTR [ebp-0xc8],eax
10012c22:	lea    eax,[ebp-0xd0]
10012c28:	mov    DWORD PTR [ebp-0xcc],ebx
10012c2e:	call   0x10013434
10012c33:	mov    eax,DWORD PTR [eax]
10012c35:	mov    edi,DWORD PTR [ebp-0xb8]
10012c3b:	inc    eax
10012c3c:	test   edi,edi
10012c3e:	mov    DWORD PTR [ebp-0xb0],eax
10012c44:	jne    0x10012c4b
10012c46:	call   0x100422b0
10012c4b:	cmp    esi,DWORD PTR [edi+0x4]
10012c4e:	jne    0x10012c55
10012c50:	call   0x100422b0
10012c55:	lea    edx,[esi+0xb8]
10012c5b:	mov    eax,ebx
10012c5d:	mov    DWORD PTR [ebp-0xc4],edx
10012c63:	call   0x10013096
10012c68:	lea    eax,[ebp-0xb0]
10012c6e:	push   eax
10012c6f:	lea    edi,[ebp-0xd0]
10012c75:	call   0x10012fdd
10012c7a:	mov    eax,DWORD PTR [ebp-0xb8]
10012c80:	cmp    esi,DWORD PTR [eax+0x4]
10012c83:	jne    0x10012c8a
10012c85:	call   0x100422b0
10012c8a:	mov    edi,DWORD PTR [ebp-0xc0]
10012c90:	add    esi,0x30
10012c93:	call   0x10012eca
10012c98:	mov    eax,DWORD PTR [ebp-0xb4]
10012c9e:	mov    ecx,DWORD PTR [ebp-0xb8]
10012ca4:	cmp    eax,DWORD PTR [ecx+0x4]
10012ca7:	jne    0x10012cae
10012ca9:	call   0x100422b0
10012cae:	mov    eax,DWORD PTR [ebp-0xb0]
10012cb4:	mov    ecx,DWORD PTR [ebp-0xc4]
10012cba:	mov    DWORD PTR [ecx],eax
10012cbc:	mov    eax,DWORD PTR [ebp-0xbc]
10012cc2:	push   DWORD PTR [eax+0x18]
10012cc5:	call   DWORD PTR ds:0x10065094
10012ccb:	call   0x10058940
10012cd0:	ret    0x4
10012cd3:	lea    edi,[ebp-0xac]
10012cd9:	call   0x1001290e
10012cde:	mov    eax,DWORD PTR [ebp-0xbc]
10012ce4:	mov    BYTE PTR [ebp-0x4],0x1
10012ce8:	cmp    DWORD PTR [eax+0x14],0x0
10012cec:	je     0x10012d17
10012cee:	mov    ecx,DWORD PTR [eax+0x10]
10012cf1:	and    DWORD PTR [ebp-0xd0],0x0
10012cf8:	add    eax,0xc
10012cfb:	mov    DWORD PTR [ebp-0xcc],eax
10012d01:	lea    eax,[ebp-0xd0]
10012d07:	mov    DWORD PTR [ebp-0xc8],ecx
10012d0d:	call   0x10013434
10012d12:	mov    eax,DWORD PTR [eax]
10012d14:	inc    eax
10012d15:	jmp    0x10012d19
10012d17:	xor    eax,eax
10012d19:	mov    edi,DWORD PTR [ebp-0xc0]
10012d1f:	lea    esi,[ebp-0xac]
10012d25:	mov    DWORD PTR [ebp-0xb0],eax
10012d2b:	mov    DWORD PTR [ebp-0x24],eax
10012d2e:	call   0x10012eca
10012d33:	sub    esp,0x90
10012d39:	mov    esi,esp
10012d3b:	mov    DWORD PTR [ebp-0xc0],esp
10012d41:	push   esi
10012d42:	lea    edi,[ebp-0xac]
10012d48:	call   0x10012f62
10012d4d:	mov    eax,DWORD PTR [ebp-0x24]
10012d50:	mov    DWORD PTR [esi+0x88],eax
10012d56:	sub    esp,0x1c
10012d59:	mov    BYTE PTR [ebp-0x4],0x2
10012d5d:	mov    ecx,esp
10012d5f:	mov    DWORD PTR [ebp-0xb4],esp
10012d65:	push   DWORD PTR [ebp-0xc4]
10012d6b:	call   0x100011b0
10012d70:	lea    ebx,[ebp-0x234]
10012d76:	mov    BYTE PTR [ebp-0x4],0x1
10012d7a:	call   0x10013f7c
10012d7f:	add    esp,0xac
10012d85:	mov    esi,eax
10012d87:	push   esi
10012d88:	lea    ecx,[ebp-0x184]
10012d8e:	mov    BYTE PTR [ebp-0x4],0x3
10012d92:	call   0x100011b0
10012d97:	lea    eax,[esi+0x20]
10012d9a:	lea    esi,[ebp-0x164]
10012da0:	mov    BYTE PTR [ebp-0x4],0x4
10012da4:	call   0x10012f33
10012da9:	mov    ebx,DWORD PTR [ebp-0xbc]
10012daf:	lea    eax,[ebp-0x184]
10012db5:	push   eax
10012db6:	push   ebx
10012db7:	lea    edi,[ebp-0xd0]
10012dbd:	mov    BYTE PTR [ebp-0x4],0x5
10012dc1:	call   0x100132ca
10012dc6:	call   0x10002ecc
10012dcb:	push   0x0
10012dcd:	push   0x1
10012dcf:	lea    ecx,[ebp-0x184]
10012dd5:	call   0x100012f9
10012dda:	lea    esi,[ebp-0x214]
10012de0:	mov    BYTE PTR [ebp-0x4],0x1
10012de4:	call   0x10002ecc
10012de9:	push   0x0
10012deb:	push   0x1
10012ded:	lea    ecx,[ebp-0x234]
10012df3:	call   0x100012f9
10012df8:	lea    eax,[ebp-0xb0]
10012dfe:	push   eax
10012dff:	add    ebx,0xc
10012e02:	lea    edi,[ebp-0xd0]
10012e08:	call   0x10012fdd
10012e0d:	lea    esi,[ebp-0xac]
10012e13:	call   0x10002ecc
10012e18:	jmp    0x10012cbc
10012e1d:	mov    eax,0x10012cbc
10012e22:	ret    
10012e23:	push   0x10
10012e25:	mov    eax,0x10061813
10012e2a:	call   0x10058878
10012e2f:	mov    esi,DWORD PTR [ebp+0x8]
10012e32:	push   0x1f4
10012e37:	push   DWORD PTR [esi+0x18]
10012e3a:	mov    BYTE PTR [ebp-0x11],0x0
10012e3e:	call   DWORD PTR ds:0x10065084
10012e44:	test   eax,eax
10012e46:	je     0x10012e4c
10012e48:	xor    al,al
10012e4a:	jmp    0x10012eaa
10012e4c:	push   DWORD PTR [ebp+0xc]
10012e4f:	and    DWORD PTR [ebp-0x4],0x0
10012e53:	lea    ebx,[ebp-0x1c]
10012e56:	call   0x100133dc
10012e5b:	mov    ebx,DWORD PTR [ebp-0x1c]
10012e5e:	test   ebx,ebx
10012e60:	mov    edi,DWORD PTR [esi+0x4]
10012e63:	je     0x10012e69
10012e65:	cmp    ebx,esi
10012e67:	je     0x10012e6e
10012e69:	call   0x100422b0
10012e6e:	cmp    DWORD PTR [ebp-0x18],edi
10012e71:	je     0x10012e9e
10012e73:	test   ebx,ebx
10012e75:	jne    0x10012e7c
10012e77:	call   0x100422b0
10012e7c:	mov    eax,DWORD PTR [ebp-0x18]
10012e7f:	cmp    eax,DWORD PTR [ebx+0x4]
10012e82:	jne    0x10012e89
10012e84:	call   0x100422b0
10012e89:	mov    edi,DWORD PTR [ebp-0x18]
10012e8c:	mov    esi,DWORD PTR [ebp+0x10]
10012e8f:	add    edi,0x30
10012e92:	call   0x10012eca
10012e97:	mov    BYTE PTR [ebp-0x11],0x1
10012e9b:	mov    esi,DWORD PTR [ebp+0x8]
10012e9e:	push   DWORD PTR [esi+0x18]
10012ea1:	call   DWORD PTR ds:0x10065094
10012ea7:	mov    al,BYTE PTR [ebp-0x11]
10012eaa:	call   0x1005891d
10012eaf:	ret    0xc
10012eb2:	push   0x4
10012eb4:	call   0x10037620
10012eb9:	pop    ecx
10012eba:	mov    eax,0x10012e9b
10012ebf:	ret    
10012ec0:	jmp    0x10013a3f
10012ec5:	jmp    0x10002ecc
10012eca:	push   0xffffffff
10012ecc:	push   0x0
10012ece:	push   edi
10012ecf:	mov    ecx,esi
10012ed1:	call   0x1000124a
10012ed6:	push   0xffffffff
10012ed8:	push   0x0
10012eda:	lea    eax,[edi+0x1c]
10012edd:	push   eax
10012ede:	lea    ecx,[esi+0x1c]
10012ee1:	call   0x1000124a
10012ee6:	push   0xffffffff
10012ee8:	push   0x0
10012eea:	lea    eax,[edi+0x38]
10012eed:	push   eax
10012eee:	lea    ecx,[esi+0x38]
10012ef1:	call   0x1000124a
10012ef6:	push   0xffffffff
10012ef8:	push   0x0
10012efa:	lea    eax,[edi+0x54]
10012efd:	push   eax
10012efe:	lea    ecx,[esi+0x54]
10012f01:	call   0x1000124a
10012f06:	mov    eax,DWORD PTR [edi+0x70]
10012f09:	mov    DWORD PTR [esi+0x70],eax
10012f0c:	mov    eax,DWORD PTR [edi+0x78]
10012f0f:	mov    DWORD PTR [esi+0x78],eax
10012f12:	mov    eax,DWORD PTR [edi+0x7c]
10012f15:	mov    DWORD PTR [esi+0x7c],eax
10012f18:	mov    eax,DWORD PTR [edi+0x80]
10012f1e:	mov    DWORD PTR [esi+0x80],eax
10012f24:	mov    eax,DWORD PTR [edi+0x84]
10012f2a:	mov    DWORD PTR [esi+0x84],eax
10012f30:	mov    eax,esi
10012f32:	ret    
10012f33:	push   edi
10012f34:	mov    edi,eax
10012f36:	push   esi
10012f37:	call   0x10012f62
10012f3c:	mov    eax,DWORD PTR [edi+0x88]
10012f42:	mov    DWORD PTR [esi+0x88],eax
10012f48:	mov    eax,esi
10012f4a:	pop    edi
10012f4b:	ret    
10012f4c:	push   esi
10012f4d:	lea    esi,[edi+0x20]
10012f50:	call   0x10002ecc
10012f55:	push   0x0
10012f57:	push   0x1
10012f59:	mov    ecx,edi
10012f5b:	call   0x100012f9
10012f60:	pop    esi
10012f61:	ret    
10012f62:	push   0x0
10012f64:	mov    eax,0x1005e9a0
10012f69:	call   0x10058845
10012f6e:	mov    esi,DWORD PTR [ebp+0x8]
10012f71:	push   edi
10012f72:	mov    ecx,esi
10012f74:	call   0x100011b0
10012f79:	and    DWORD PTR [ebp-0x4],0x0
10012f7d:	lea    eax,[edi+0x1c]
10012f80:	push   eax
10012f81:	lea    ecx,[esi+0x1c]
10012f84:	call   0x100011b0
10012f89:	lea    eax,[edi+0x38]
10012f8c:	push   eax
10012f8d:	lea    ecx,[esi+0x38]
10012f90:	mov    BYTE PTR [ebp-0x4],0x1
10012f94:	call   0x100011b0
10012f99:	lea    eax,[edi+0x54]
10012f9c:	push   eax
10012f9d:	lea    ecx,[esi+0x54]
10012fa0:	mov    BYTE PTR [ebp-0x4],0x2
10012fa4:	call   0x100011b0
10012fa9:	mov    eax,DWORD PTR [edi+0x70]
10012fac:	mov    DWORD PTR [esi+0x70],eax
10012faf:	mov    eax,DWORD PTR [edi+0x78]
10012fb2:	mov    DWORD PTR [esi+0x78],eax
10012fb5:	mov    eax,DWORD PTR [edi+0x7c]
10012fb8:	mov    DWORD PTR [esi+0x7c],eax
10012fbb:	mov    eax,DWORD PTR [edi+0x80]
10012fc1:	mov    DWORD PTR [esi+0x80],eax
10012fc7:	mov    eax,DWORD PTR [edi+0x84]
10012fcd:	mov    DWORD PTR [esi+0x84],eax
10012fd3:	mov    eax,esi
10012fd5:	call   0x1005891d
10012fda:	ret    0x4
10012fdd:	push   ebp
10012fde:	mov    ebp,esp
10012fe0:	and    esp,0xfffffff8
10012fe3:	sub    esp,0x14
10012fe6:	mov    ecx,DWORD PTR [ebx+0x4]
10012fe9:	mov    eax,DWORD PTR [ecx+0x4]
10012fec:	cmp    BYTE PTR [eax+0x11],0x0
10012ff0:	push   esi
10012ff1:	mov    DWORD PTR [esp+0xc],ecx
10012ff5:	mov    BYTE PTR [esp+0x8],0x1
10012ffa:	jne    0x10013021
10012ffc:	mov    ecx,DWORD PTR [ebp+0x8]
10012fff:	mov    esi,DWORD PTR [ecx]
10013001:	cmp    esi,DWORD PTR [eax+0xc]
10013004:	mov    DWORD PTR [esp+0xc],eax
10013008:	setb   BYTE PTR [esp+0x8]
1001300d:	cmp    BYTE PTR [esp+0x8],0x0
10013012:	je     0x10013018
10013014:	mov    eax,DWORD PTR [eax]
10013016:	jmp    0x1001301b
10013018:	mov    eax,DWORD PTR [eax+0x8]
1001301b:	cmp    BYTE PTR [eax+0x11],0x0
1001301f:	je     0x10013001
10013021:	cmp    BYTE PTR [esp+0x8],0x0
10013026:	mov    eax,DWORD PTR [esp+0xc]
1001302a:	mov    DWORD PTR [esp+0x14],eax
1001302e:	mov    DWORD PTR [esp+0x10],ebx
10013032:	je     0x10013066
10013034:	mov    ecx,DWORD PTR [ebx+0x4]
10013037:	cmp    eax,DWORD PTR [ecx]
10013039:	jne    0x10013059
1001303b:	push   DWORD PTR [ebp+0x8]
1001303e:	lea    ecx,[esp+0x14]
10013042:	push   0x1
10013044:	push   ecx
10013045:	mov    ecx,eax
10013047:	mov    esi,ebx
10013049:	call   0x10013458
1001304e:	mov    ecx,DWORD PTR [eax]
10013050:	mov    eax,DWORD PTR [eax+0x4]
10013053:	mov    BYTE PTR [edi+0x8],0x1
10013057:	jmp    0x10013088
10013059:	lea    esi,[esp+0x10]
1001305d:	call   0x10013add
10013062:	mov    eax,DWORD PTR [esp+0x14]
10013066:	mov    edx,DWORD PTR [eax+0xc]
10013069:	mov    ecx,DWORD PTR [ebp+0x8]
1001306c:	cmp    edx,DWORD PTR [ecx]
1001306e:	jae    0x10013080
10013070:	push   ecx
10013071:	push   DWORD PTR [esp+0xc]
10013075:	mov    ecx,DWORD PTR [esp+0x14]
10013079:	lea    eax,[esp+0x18]
1001307d:	push   eax
1001307e:	jmp    0x10013047
10013080:	mov    ecx,DWORD PTR [esp+0x10]
10013084:	mov    BYTE PTR [edi+0x8],0x0
10013088:	mov    DWORD PTR [edi+0x4],eax
1001308b:	mov    DWORD PTR [edi],ecx
1001308d:	mov    eax,edi
1001308f:	pop    esi
10013090:	mov    esp,ebp
10013092:	pop    ebp
10013093:	ret    0x4
10013096:	push   ebp
10013097:	mov    ebp,esp
10013099:	and    esp,0xfffffff8
1001309c:	sub    esp,0x14
1001309f:	push   ebx
100130a0:	push   esi
100130a1:	push   edi
100130a2:	mov    edi,eax
100130a4:	mov    ecx,DWORD PTR [edi+0x4]
100130a7:	mov    eax,DWORD PTR [ecx+0x4]
100130aa:	cmp    BYTE PTR [eax+0x11],0x0
100130ae:	mov    DWORD PTR [esp+0x14],ecx
100130b2:	jne    0x100130cc
100130b4:	mov    ecx,DWORD PTR [edx]
100130b6:	cmp    ecx,DWORD PTR [eax+0xc]
100130b9:	jae    0x100130c3
100130bb:	mov    DWORD PTR [esp+0x14],eax
100130bf:	mov    eax,DWORD PTR [eax]
100130c1:	jmp    0x100130c6
100130c3:	mov    eax,DWORD PTR [eax+0x8]
100130c6:	cmp    BYTE PTR [eax+0x11],0x0
100130ca:	je     0x100130b6
100130cc:	mov    ecx,DWORD PTR [edi+0x4]
100130cf:	mov    eax,DWORD PTR [ecx+0x4]
100130d2:	cmp    BYTE PTR [eax+0x11],0x0
100130d6:	mov    ebx,ecx
100130d8:	jne    0x100130f0
100130da:	mov    ecx,DWORD PTR [edx]
100130dc:	cmp    DWORD PTR [eax+0xc],ecx
100130df:	jae    0x100130e6
100130e1:	mov    eax,DWORD PTR [eax+0x8]
100130e4:	jmp    0x100130ea
100130e6:	mov    ebx,eax
100130e8:	mov    eax,DWORD PTR [eax]
100130ea:	cmp    BYTE PTR [eax+0x11],0x0
100130ee:	je     0x100130dc
100130f0:	and    DWORD PTR [esp+0x10],0x0
100130f5:	mov    DWORD PTR [esp+0x18],edi
100130f9:	mov    DWORD PTR [esp+0x1c],ebx
100130fd:	cmp    DWORD PTR [esp+0x18],0x0
10013102:	je     0x1001310a
10013104:	cmp    DWORD PTR [esp+0x18],edi
10013108:	je     0x1001310f
1001310a:	call   0x100422b0
1001310f:	mov    eax,DWORD PTR [esp+0x14]
10013113:	cmp    DWORD PTR [esp+0x1c],eax
10013117:	je     0x10013128
10013119:	inc    DWORD PTR [esp+0x10]
1001311d:	lea    esi,[esp+0x18]
10013121:	call   0x10001e7a
10013126:	jmp    0x100130fd
10013128:	push   eax
10013129:	push   edi
1001312a:	push   ebx
1001312b:	push   edi
1001312c:	lea    ebx,[esp+0x28]
10013130:	call   0x1000161f
10013135:	mov    eax,DWORD PTR [esp+0x10]
10013139:	pop    edi
1001313a:	pop    esi
1001313b:	pop    ebx
1001313c:	mov    esp,ebp
1001313e:	pop    ebp
1001313f:	ret    
10013140:	push   ebp
10013141:	mov    ebp,esp
10013143:	and    esp,0xfffffff8
10013146:	push   0xffffffff
10013148:	push   0x10060ca4
1001314d:	mov    eax,fs:0x0
10013153:	push   eax
10013154:	sub    esp,0x40
10013157:	push   ebx
10013158:	push   esi
10013159:	push   edi
1001315a:	mov    eax,ds:0x1007d030
1001315f:	xor    eax,esp
10013161:	push   eax
10013162:	lea    eax,[esp+0x50]
10013166:	mov    fs:0x0,eax
1001316c:	mov    edi,DWORD PTR [ebp+0x8]
1001316f:	mov    ecx,DWORD PTR [edi+0x1c]
10013172:	mov    edx,DWORD PTR [edi+0x20]
10013175:	mov    eax,DWORD PTR [edi+0x8]
10013178:	add    edx,ecx
1001317a:	cmp    eax,edx
1001317c:	jbe    0x100132b5
10013182:	and    DWORD PTR [esp+0x14],0x0
10013187:	test   ecx,ecx
10013189:	lea    ebx,[edi+0xc]
1001318c:	mov    eax,DWORD PTR [ebx+0x4]
1001318f:	mov    eax,DWORD PTR [eax]
10013191:	mov    DWORD PTR [esp+0x18],ebx
10013195:	mov    DWORD PTR [esp+0x1c],ebx
10013199:	mov    DWORD PTR [esp+0x20],eax
1001319d:	je     0x100131b5
1001319f:	lea    esi,[esp+0x1c]
100131a3:	call   0x10001e7a
100131a8:	inc    DWORD PTR [esp+0x14]
100131ac:	mov    eax,DWORD PTR [esp+0x14]
100131b0:	cmp    eax,DWORD PTR [edi+0x1c]
100131b3:	jne    0x1001319f
100131b5:	lea    esi,[esp+0x1c]
100131b9:	call   0x10009753
100131be:	mov    eax,DWORD PTR [eax]
100131c0:	mov    DWORD PTR [esp+0x14],eax
100131c4:	call   0x10013d6c
100131c9:	mov    DWORD PTR [esp+0x38],eax
100131cd:	mov    BYTE PTR [eax+0x11],0x1
100131d1:	mov    eax,DWORD PTR [esp+0x38]
100131d5:	mov    DWORD PTR [eax+0x4],eax
100131d8:	mov    eax,DWORD PTR [esp+0x38]
100131dc:	mov    DWORD PTR [eax],eax
100131de:	mov    eax,DWORD PTR [esp+0x38]
100131e2:	mov    DWORD PTR [eax+0x8],eax
100131e5:	and    DWORD PTR [esp+0x3c],0x0
100131ea:	and    DWORD PTR [esp+0x58],0x0
100131ef:	mov    eax,DWORD PTR [edi+0x4]
100131f2:	mov    esi,DWORD PTR [eax]
100131f4:	mov    DWORD PTR [esp+0x1c],edi
100131f8:	mov    DWORD PTR [esp+0x20],esi
100131fc:	cmp    DWORD PTR [esp+0x1c],0x0
10013201:	mov    eax,DWORD PTR [edi+0x4]
10013204:	mov    DWORD PTR [esp+0x28],eax
10013208:	je     0x10013210
1001320a:	cmp    DWORD PTR [esp+0x1c],edi
1001320e:	je     0x10013215
10013210:	call   0x100422b0
10013215:	cmp    esi,DWORD PTR [esp+0x28]
10013219:	je     0x1001328b
1001321b:	cmp    DWORD PTR [esp+0x1c],0x0
10013220:	jne    0x10013227
10013222:	call   0x100422b0
10013227:	mov    eax,DWORD PTR [esp+0x1c]
1001322b:	cmp    esi,DWORD PTR [eax+0x4]
1001322e:	jne    0x10013235
10013230:	call   0x100422b0
10013235:	lea    ecx,[esi+0xb8]
1001323b:	mov    eax,DWORD PTR [ecx]
1001323d:	cmp    eax,DWORD PTR [esp+0x14]
10013241:	jae    0x1001325e
10013243:	push   esi
10013244:	push   DWORD PTR [esp+0x20]
10013248:	lea    eax,[esp+0x34]
1001324c:	push   eax
1001324d:	push   edi
1001324e:	call   0x100135a5
10013253:	mov    ecx,DWORD PTR [eax]
10013255:	mov    esi,DWORD PTR [eax+0x4]
10013258:	mov    DWORD PTR [esp+0x1c],ecx
1001325c:	jmp    0x100131f8
1001325e:	sub    eax,DWORD PTR [esp+0x14]
10013262:	push   ecx
10013263:	lea    edi,[esp+0x44]
10013267:	lea    ebx,[esp+0x38]
1001326b:	mov    DWORD PTR [ecx],eax
1001326d:	call   0x10012fdd
10013272:	lea    esi,[esp+0x1c]
10013276:	call   0x10013a84
1001327b:	mov    esi,DWORD PTR [esp+0x20]
1001327f:	mov    ebx,DWORD PTR [esp+0x18]
10013283:	mov    edi,DWORD PTR [ebp+0x8]
10013286:	jmp    0x100131fc
1001328b:	mov    eax,DWORD PTR [ebx+0x4]
1001328e:	mov    ecx,DWORD PTR [esp+0x38]
10013292:	mov    DWORD PTR [ebx+0x4],ecx
10013295:	mov    ecx,DWORD PTR [esp+0x3c]
10013299:	mov    DWORD PTR [esp+0x38],eax
1001329d:	mov    eax,DWORD PTR [ebx+0x8]
100132a0:	or     DWORD PTR [esp+0x58],0xffffffff
100132a5:	mov    DWORD PTR [esp+0x3c],eax
100132a9:	lea    eax,[esp+0x34]
100132ad:	mov    DWORD PTR [ebx+0x8],ecx
100132b0:	call   0x1000149f
100132b5:	mov    ecx,DWORD PTR [esp+0x50]
100132b9:	mov    DWORD PTR fs:0x0,ecx
100132c0:	pop    ecx
100132c1:	pop    edi
100132c2:	pop    esi
100132c3:	pop    ebx
100132c4:	mov    esp,ebp
100132c6:	pop    ebp
100132c7:	ret    0x4
100132ca:	push   ebp
100132cb:	mov    ebp,esp
100132cd:	and    esp,0xfffffff8
100132d0:	push   ecx
100132d1:	push   ecx
100132d2:	mov    edx,DWORD PTR [ebp+0x8]
100132d5:	mov    eax,DWORD PTR [edx+0x4]
100132d8:	push   ebx
100132d9:	push   esi
100132da:	mov    esi,DWORD PTR [eax+0x4]
100132dd:	cmp    BYTE PTR [esi+0xc1],0x0
100132e4:	mov    ebx,eax
100132e6:	mov    al,0x1
100132e8:	mov    BYTE PTR [esp+0x8],al
100132ec:	jne    0x10013316
100132ee:	mov    ecx,DWORD PTR [ebp+0xc]
100132f1:	lea    eax,[esi+0x10]
100132f4:	mov    ebx,esi
100132f6:	call   0x100071aa
100132fb:	test   al,al
100132fd:	mov    BYTE PTR [esp+0x8],al
10013301:	je     0x10013307
10013303:	mov    esi,DWORD PTR [esi]
10013305:	jmp    0x1001330a
10013307:	mov    esi,DWORD PTR [esi+0x8]
1001330a:	cmp    BYTE PTR [esi+0xc1],0x0
10013311:	je     0x100132ee
10013313:	mov    edx,DWORD PTR [ebp+0x8]
10013316:	test   al,al
10013318:	mov    esi,ebx
1001331a:	je     0x100133a8
10013320:	mov    eax,DWORD PTR [edx+0x4]
10013323:	cmp    ebx,DWORD PTR [eax]
10013325:	jne    0x1001334d
10013327:	push   DWORD PTR [ebp+0xc]
1001332a:	mov    esi,edx
1001332c:	push   0x1
1001332e:	lea    eax,[esp+0x10]
10013332:	mov    ecx,ebx
10013334:	push   eax
10013335:	call   0x100138cf
1001333a:	mov    ecx,DWORD PTR [eax]
1001333c:	mov    eax,DWORD PTR [eax+0x4]
1001333f:	mov    DWORD PTR [edi],ecx
10013341:	mov    DWORD PTR [edi+0x4],eax
10013344:	mov    BYTE PTR [edi+0x8],0x1
10013348:	jmp    0x100133d2
1001334d:	cmp    BYTE PTR [ebx+0xc1],0x0
10013354:	je     0x10013364
10013356:	mov    esi,DWORD PTR [ebx+0x8]
10013359:	cmp    BYTE PTR [esi+0xc1],0x0
10013360:	je     0x100133a8
10013362:	jmp    0x1001339f
10013364:	mov    eax,DWORD PTR [ebx]
10013366:	cmp    BYTE PTR [eax+0xc1],0x0
1001336d:	jne    0x1001337f
1001336f:	mov    esi,eax
10013371:	mov    eax,DWORD PTR [esi+0x8]
10013374:	cmp    BYTE PTR [eax+0xc1],0x0
1001337b:	je     0x1001336f
1001337d:	jmp    0x100133a8
1001337f:	mov    eax,DWORD PTR [ebx+0x4]
10013382:	jmp    0x1001338d
10013384:	cmp    esi,DWORD PTR [eax]
10013386:	jne    0x10013396
10013388:	mov    esi,eax
1001338a:	mov    eax,DWORD PTR [eax+0x4]
1001338d:	cmp    BYTE PTR [eax+0xc1],0x0
10013394:	je     0x10013384
10013396:	cmp    BYTE PTR [esi+0xc1],0x0
1001339d:	je     0x100133a6
1001339f:	call   0x100422b0
100133a4:	jmp    0x100133a8
100133a6:	mov    esi,eax
100133a8:	mov    eax,DWORD PTR [ebp+0xc]
100133ab:	lea    ecx,[esi+0x10]
100133ae:	call   0x100071aa
100133b3:	test   al,al
100133b5:	je     0x100133c6
100133b7:	push   DWORD PTR [ebp+0xc]
100133ba:	mov    esi,DWORD PTR [ebp+0x8]
100133bd:	push   DWORD PTR [esp+0xc]
100133c1:	jmp    0x1001332e
100133c6:	mov    eax,DWORD PTR [ebp+0x8]
100133c9:	mov    DWORD PTR [edi],eax
100133cb:	mov    DWORD PTR [edi+0x4],esi
100133ce:	mov    BYTE PTR [edi+0x8],0x0
100133d2:	pop    esi
100133d3:	mov    eax,edi
100133d5:	pop    ebx
100133d6:	mov    esp,ebp
100133d8:	pop    ebp
100133d9:	ret    0x8
100133dc:	push   ebp
100133dd:	mov    ebp,esp
100133df:	sub    esp,0x18
100133e2:	push   edi
100133e3:	push   DWORD PTR [ebp+0x8]
100133e6:	mov    eax,esi
100133e8:	call   0x10013c5a
100133ed:	test   esi,esi
100133ef:	mov    edi,eax
100133f1:	mov    DWORD PTR [ebp-0x8],edi
100133f4:	jne    0x100133fb
100133f6:	call   0x100422b0
100133fb:	cmp    edi,DWORD PTR [esi+0x4]
100133fe:	mov    DWORD PTR [ebp-0xc],esi
10013401:	je     0x10013417
10013403:	mov    ecx,DWORD PTR [ebp+0x8]
10013406:	lea    eax,[edi+0x10]
10013409:	call   0x100071aa
1001340e:	test   al,al
10013410:	jne    0x10013417
10013412:	lea    eax,[ebp-0xc]
10013415:	jmp    0x10013423
10013417:	mov    eax,DWORD PTR [esi+0x4]
1001341a:	mov    DWORD PTR [ebp-0x10],eax
1001341d:	mov    DWORD PTR [ebp-0x14],esi
10013420:	lea    eax,[ebp-0x14]
10013423:	mov    ecx,DWORD PTR [eax]
10013425:	mov    eax,DWORD PTR [eax+0x4]
10013428:	mov    DWORD PTR [ebx+0x4],eax
1001342b:	mov    DWORD PTR [ebx],ecx
1001342d:	mov    eax,ebx
1001342f:	pop    edi
10013430:	leave  
10013431:	ret    0x4
10013434:	push   ebp
10013435:	mov    ebp,esp
10013437:	push   ecx
10013438:	push   ecx
10013439:	mov    ecx,DWORD PTR [eax+0x4]
1001343c:	mov    eax,DWORD PTR [eax+0x8]
1001343f:	push   esi
10013440:	lea    esi,[ebp-0x8]
10013443:	mov    DWORD PTR [ebp-0x8],ecx
10013446:	mov    DWORD PTR [ebp-0x4],eax
10013449:	call   0x10013add
1001344e:	mov    esi,eax
10013450:	call   0x10009753
10013455:	pop    esi
10013456:	leave  
10013457:	ret    
10013458:	push   0x48
1001345a:	mov    eax,0x1005f147
1001345f:	call   0x10058845
10013464:	mov    edi,ecx
10013466:	cmp    DWORD PTR [esi+0x8],0x3ffffffe
1001346d:	jb     0x100134a1
1001346f:	push   0x1006bcb4
10013474:	lea    ecx,[ebp-0x2c]
10013477:	call   0x100011d6
1001347c:	and    DWORD PTR [ebp-0x4],0x0
10013480:	lea    eax,[ebp-0x2c]
10013483:	push   eax
10013484:	lea    ecx,[ebp-0x54]
10013487:	call   0x10001065
1001348c:	push   0x10073960
10013491:	lea    eax,[ebp-0x54]
10013494:	push   eax
10013495:	mov    DWORD PTR [ebp-0x54],0x1006a77c
1001349c:	call   0x10046704
100134a1:	mov    eax,DWORD PTR [esi+0x4]
100134a4:	push   0x0
100134a6:	push   DWORD PTR [ebp+0x10]
100134a9:	push   eax
100134aa:	push   edi
100134ab:	push   eax
100134ac:	call   0x10013b5f
100134b1:	inc    DWORD PTR [esi+0x8]
100134b4:	mov    ebx,eax
100134b6:	mov    eax,DWORD PTR [esi+0x4]
100134b9:	cmp    edi,eax
100134bb:	jne    0x100134ca
100134bd:	mov    DWORD PTR [eax+0x4],ebx
100134c0:	mov    eax,DWORD PTR [esi+0x4]
100134c3:	mov    DWORD PTR [eax],ebx
100134c5:	mov    eax,DWORD PTR [esi+0x4]
100134c8:	jmp    0x100134e8
100134ca:	cmp    BYTE PTR [ebp+0xc],0x0
100134ce:	je     0x100134dd
100134d0:	mov    DWORD PTR [edi],ebx
100134d2:	mov    eax,DWORD PTR [esi+0x4]
100134d5:	cmp    edi,DWORD PTR [eax]
100134d7:	jne    0x100134eb
100134d9:	mov    DWORD PTR [eax],ebx
100134db:	jmp    0x100134eb
100134dd:	mov    DWORD PTR [edi+0x8],ebx
100134e0:	mov    eax,DWORD PTR [esi+0x4]
100134e3:	cmp    edi,DWORD PTR [eax+0x8]
100134e6:	jne    0x100134eb
100134e8:	mov    DWORD PTR [eax+0x8],ebx
100134eb:	mov    edi,ebx
100134ed:	lea    eax,[ebx+0x4]
100134f0:	jmp    0x1001357f
100134f5:	mov    ecx,DWORD PTR [eax]
100134f7:	mov    edx,DWORD PTR [ecx+0x4]
100134fa:	cmp    ecx,DWORD PTR [edx]
100134fc:	jne    0x10013533
100134fe:	mov    edx,DWORD PTR [edx+0x8]
10013501:	cmp    BYTE PTR [edx+0x10],0x0
10013505:	je     0x1001353b
10013507:	cmp    edi,DWORD PTR [ecx+0x8]
1001350a:	jne    0x10013514
1001350c:	push   esi
1001350d:	mov    edi,ecx
1001350f:	call   0x10001cd7
10013514:	mov    eax,DWORD PTR [edi+0x4]
10013517:	mov    BYTE PTR [eax+0x10],0x1
1001351b:	mov    eax,DWORD PTR [edi+0x4]
1001351e:	mov    eax,DWORD PTR [eax+0x4]
10013521:	mov    BYTE PTR [eax+0x10],0x0
10013525:	mov    eax,DWORD PTR [edi+0x4]
10013528:	mov    ecx,DWORD PTR [eax+0x4]
1001352b:	push   esi
1001352c:	call   0x10001d17
10013531:	jmp    0x1001357c
10013533:	mov    edx,DWORD PTR [edx]
10013535:	cmp    BYTE PTR [edx+0x10],0x0
10013539:	jne    0x10013553
1001353b:	mov    BYTE PTR [ecx+0x10],0x1
1001353f:	mov    BYTE PTR [edx+0x10],0x1
10013543:	mov    ecx,DWORD PTR [eax]
10013545:	mov    ecx,DWORD PTR [ecx+0x4]
10013548:	mov    BYTE PTR [ecx+0x10],0x0
1001354c:	mov    eax,DWORD PTR [eax]
1001354e:	mov    edi,DWORD PTR [eax+0x4]
10013551:	jmp    0x1001357c
10013553:	cmp    edi,DWORD PTR [ecx]
10013555:	jne    0x1001355f
10013557:	push   esi
10013558:	mov    edi,ecx
1001355a:	call   0x10001d17
1001355f:	mov    eax,DWORD PTR [edi+0x4]
10013562:	mov    BYTE PTR [eax+0x10],0x1
10013566:	mov    eax,DWORD PTR [edi+0x4]
10013569:	mov    eax,DWORD PTR [eax+0x4]
1001356c:	mov    BYTE PTR [eax+0x10],0x0
10013570:	mov    eax,DWORD PTR [edi+0x4]
10013573:	mov    ecx,DWORD PTR [eax+0x4]
10013576:	push   esi
10013577:	call   0x10001cd7
1001357c:	lea    eax,[edi+0x4]
1001357f:	mov    ecx,DWORD PTR [eax]
10013581:	cmp    BYTE PTR [ecx+0x10],0x0
10013585:	je     0x100134f5
1001358b:	mov    eax,DWORD PTR [esi+0x4]
1001358e:	mov    eax,DWORD PTR [eax+0x4]
10013591:	mov    BYTE PTR [eax+0x10],0x1
10013595:	mov    eax,DWORD PTR [ebp+0x8]
10013598:	mov    DWORD PTR [eax+0x4],ebx
1001359b:	mov    DWORD PTR [eax],esi
1001359d:	call   0x1005891d
100135a2:	ret    0xc
100135a5:	push   0x4c
100135a7:	mov    eax,0x1005fb90
100135ac:	call   0x10058845
100135b1:	mov    edi,DWORD PTR [ebp+0x14]
100135b4:	cmp    BYTE PTR [edi+0xc1],0x0
100135bb:	je     0x100135ef
100135bd:	push   0x1006bafc
100135c2:	lea    ecx,[ebp-0x30]
100135c5:	call   0x100011d6
100135ca:	and    DWORD PTR [ebp-0x4],0x0
100135ce:	lea    eax,[ebp-0x30]
100135d1:	push   eax
100135d2:	lea    ecx,[ebp-0x58]
100135d5:	call   0x10001065
100135da:	push   0x10073880
100135df:	lea    eax,[ebp-0x58]
100135e2:	push   eax
100135e3:	mov    DWORD PTR [ebp-0x58],0x1006a788
100135ea:	call   0x10046704
100135ef:	lea    esi,[ebp+0x10]
100135f2:	call   0x10013a84
100135f7:	mov    ecx,DWORD PTR [edi]
100135f9:	cmp    BYTE PTR [ecx+0xc1],0x0
10013600:	je     0x10013607
10013602:	mov    ebx,DWORD PTR [edi+0x8]
10013605:	jmp    0x10013625
10013607:	mov    eax,DWORD PTR [edi+0x8]
1001360a:	cmp    BYTE PTR [eax+0xc1],0x0
10013611:	je     0x10013617
10013613:	mov    ebx,ecx
10013615:	jmp    0x10013625
10013617:	mov    eax,DWORD PTR [ebp+0x14]
1001361a:	cmp    eax,edi
1001361c:	mov    ebx,DWORD PTR [eax+0x8]
1001361f:	jne    0x100136ae
10013625:	cmp    BYTE PTR [ebx+0xc1],0x0
1001362c:	mov    esi,DWORD PTR [edi+0x4]
1001362f:	jne    0x10013634
10013631:	mov    DWORD PTR [ebx+0x4],esi
10013634:	mov    ecx,DWORD PTR [ebp+0x8]
10013637:	mov    eax,DWORD PTR [ecx+0x4]
1001363a:	cmp    DWORD PTR [eax+0x4],edi
1001363d:	jne    0x10013644
1001363f:	mov    DWORD PTR [eax+0x4],ebx
10013642:	jmp    0x1001364f
10013644:	cmp    DWORD PTR [esi],edi
10013646:	jne    0x1001364c
10013648:	mov    DWORD PTR [esi],ebx
1001364a:	jmp    0x1001364f
1001364c:	mov    DWORD PTR [esi+0x8],ebx
1001364f:	mov    edx,DWORD PTR [ecx+0x4]
10013652:	cmp    DWORD PTR [edx],edi
10013654:	jne    0x10013678
10013656:	cmp    BYTE PTR [ebx+0xc1],0x0
1001365d:	je     0x10013663
1001365f:	mov    ecx,esi
10013661:	jmp    0x10013676
10013663:	mov    eax,DWORD PTR [ebx]
10013665:	mov    ecx,ebx
10013667:	jmp    0x1001366d
10013669:	mov    ecx,eax
1001366b:	mov    eax,DWORD PTR [ecx]
1001366d:	cmp    BYTE PTR [eax+0xc1],0x0
10013674:	je     0x10013669
10013676:	mov    DWORD PTR [edx],ecx
10013678:	mov    eax,DWORD PTR [ebp+0x8]
1001367b:	mov    edx,DWORD PTR [eax+0x4]
1001367e:	cmp    DWORD PTR [edx+0x8],edi
10013681:	jne    0x10013718
10013687:	cmp    BYTE PTR [ebx+0xc1],0x0
1001368e:	je     0x10013694
10013690:	mov    ecx,esi
10013692:	jmp    0x100136a9
10013694:	mov    eax,DWORD PTR [ebx+0x8]
10013697:	mov    ecx,ebx
10013699:	jmp    0x100136a0
1001369b:	mov    ecx,eax
1001369d:	mov    eax,DWORD PTR [ecx+0x8]
100136a0:	cmp    BYTE PTR [eax+0xc1],0x0
100136a7:	je     0x1001369b
100136a9:	mov    DWORD PTR [edx+0x8],ecx
100136ac:	jmp    0x10013718
100136ae:	mov    DWORD PTR [ecx+0x4],eax
100136b1:	mov    ecx,DWORD PTR [edi]
100136b3:	mov    DWORD PTR [eax],ecx
100136b5:	cmp    eax,DWORD PTR [edi+0x8]
100136b8:	jne    0x100136be
100136ba:	mov    esi,eax
100136bc:	jmp    0x100136db
100136be:	cmp    BYTE PTR [ebx+0xc1],0x0
100136c5:	mov    esi,DWORD PTR [eax+0x4]
100136c8:	jne    0x100136cd
100136ca:	mov    DWORD PTR [ebx+0x4],esi
100136cd:	mov    DWORD PTR [esi],ebx
100136cf:	mov    ecx,DWORD PTR [edi+0x8]
100136d2:	mov    DWORD PTR [eax+0x8],ecx
100136d5:	mov    ecx,DWORD PTR [edi+0x8]
100136d8:	mov    DWORD PTR [ecx+0x4],eax
100136db:	mov    ecx,DWORD PTR [ebp+0x8]
100136de:	mov    ecx,DWORD PTR [ecx+0x4]
100136e1:	cmp    DWORD PTR [ecx+0x4],edi
100136e4:	jne    0x100136eb
100136e6:	mov    DWORD PTR [ecx+0x4],eax
100136e9:	jmp    0x100136f9
100136eb:	mov    ecx,DWORD PTR [edi+0x4]
100136ee:	cmp    DWORD PTR [ecx],edi
100136f0:	jne    0x100136f6
100136f2:	mov    DWORD PTR [ecx],eax
100136f4:	jmp    0x100136f9
100136f6:	mov    DWORD PTR [ecx+0x8],eax
100136f9:	mov    ecx,DWORD PTR [edi+0x4]
100136fc:	mov    DWORD PTR [eax+0x4],ecx
100136ff:	add    eax,0xc0
10013704:	mov    dl,BYTE PTR [eax]
10013706:	lea    ecx,[edi+0xc0]
1001370c:	mov    BYTE PTR [ebp-0x11],dl
1001370f:	mov    dl,BYTE PTR [ecx]
10013711:	mov    BYTE PTR [eax],dl
10013713:	mov    al,BYTE PTR [ebp-0x11]
10013716:	mov    BYTE PTR [ecx],al
10013718:	cmp    BYTE PTR [edi+0xc0],0x1
1001371f:	jne    0x1001388e
10013725:	jmp    0x1001382c
1001372a:	cmp    BYTE PTR [ebx+0xc0],0x1
10013731:	jne    0x10013887
10013737:	mov    ecx,DWORD PTR [esi]
10013739:	cmp    ebx,ecx
1001373b:	jne    0x100137df
10013741:	mov    ecx,DWORD PTR [esi+0x8]
10013744:	lea    eax,[ecx+0xc0]
1001374a:	cmp    BYTE PTR [eax],0x0
1001374d:	jne    0x10013766
1001374f:	push   DWORD PTR [ebp+0x8]
10013752:	mov    BYTE PTR [eax],0x1
10013755:	mov    ecx,esi
10013757:	mov    BYTE PTR [esi+0xc0],0x0
1001375e:	call   0x10013c8f
10013763:	mov    ecx,DWORD PTR [esi+0x8]
10013766:	cmp    BYTE PTR [ecx+0xc1],0x0
1001376d:	jne    0x10013827
10013773:	mov    eax,DWORD PTR [ecx]
10013775:	cmp    BYTE PTR [eax+0xc0],0x1
1001377c:	jne    0x1001378e
1001377e:	mov    eax,DWORD PTR [ecx+0x8]
10013781:	cmp    BYTE PTR [eax+0xc0],0x1
10013788:	je     0x10013820
1001378e:	mov    eax,DWORD PTR [ecx+0x8]
10013791:	cmp    BYTE PTR [eax+0xc0],0x1
10013798:	jne    0x100137b5
1001379a:	mov    eax,DWORD PTR [ecx]
1001379c:	push   DWORD PTR [ebp+0x8]
1001379f:	mov    BYTE PTR [eax+0xc0],0x1
100137a6:	mov    BYTE PTR [ecx+0xc0],0x0
100137ad:	call   0x10013cd2
100137b2:	mov    ecx,DWORD PTR [esi+0x8]
100137b5:	push   DWORD PTR [ebp+0x8]
100137b8:	lea    eax,[esi+0xc0]
100137be:	mov    dl,BYTE PTR [eax]
100137c0:	mov    BYTE PTR [ecx+0xc0],dl
100137c6:	mov    BYTE PTR [eax],0x1
100137c9:	mov    eax,DWORD PTR [ecx+0x8]
100137cc:	mov    ecx,esi
100137ce:	mov    BYTE PTR [eax+0xc0],0x1
100137d5:	call   0x10013c8f
100137da:	jmp    0x10013887
100137df:	lea    eax,[ecx+0xc0]
100137e5:	cmp    BYTE PTR [eax],0x0
100137e8:	jne    0x10013800
100137ea:	push   DWORD PTR [ebp+0x8]
100137ed:	mov    BYTE PTR [eax],0x1
100137f0:	mov    ecx,esi
100137f2:	mov    BYTE PTR [esi+0xc0],0x0
100137f9:	call   0x10013cd2
100137fe:	mov    ecx,DWORD PTR [esi]
10013800:	cmp    BYTE PTR [ecx+0xc1],0x0
10013807:	jne    0x10013827
10013809:	mov    eax,DWORD PTR [ecx+0x8]
1001380c:	cmp    BYTE PTR [eax+0xc0],0x1
10013813:	jne    0x1001383d
10013815:	mov    eax,DWORD PTR [ecx]
10013817:	cmp    BYTE PTR [eax+0xc0],0x1
1001381e:	jne    0x1001383d
10013820:	mov    BYTE PTR [ecx+0xc0],0x0
10013827:	mov    ebx,esi
10013829:	mov    esi,DWORD PTR [esi+0x4]
1001382c:	mov    eax,DWORD PTR [ebp+0x8]
1001382f:	mov    eax,DWORD PTR [eax+0x4]
10013832:	cmp    ebx,DWORD PTR [eax+0x4]
10013835:	jne    0x1001372a
1001383b:	jmp    0x10013887
1001383d:	mov    eax,DWORD PTR [ecx]
1001383f:	cmp    BYTE PTR [eax+0xc0],0x1
10013846:	jne    0x10013863
10013848:	mov    eax,DWORD PTR [ecx+0x8]
1001384b:	push   DWORD PTR [ebp+0x8]
1001384e:	mov    BYTE PTR [eax+0xc0],0x1
10013855:	mov    BYTE PTR [ecx+0xc0],0x0
1001385c:	call   0x10013c8f
10013861:	mov    ecx,DWORD PTR [esi]
10013863:	push   DWORD PTR [ebp+0x8]
10013866:	lea    eax,[esi+0xc0]
1001386c:	mov    dl,BYTE PTR [eax]
1001386e:	mov    BYTE PTR [ecx+0xc0],dl
10013874:	mov    BYTE PTR [eax],0x1
10013877:	mov    eax,DWORD PTR [ecx]
10013879:	mov    ecx,esi
1001387b:	mov    BYTE PTR [eax+0xc0],0x1
10013882:	call   0x10013cd2
10013887:	mov    BYTE PTR [ebx+0xc0],0x1
1001388e:	lea    ebx,[edi+0x10]
10013891:	lea    esi,[ebx+0x20]
10013894:	call   0x10002ecc
10013899:	push   0x0
1001389b:	push   0x1
1001389d:	mov    ecx,ebx
1001389f:	call   0x100012f9
100138a4:	push   edi
100138a5:	call   0x10041d92
100138aa:	pop    ecx
100138ab:	mov    ecx,DWORD PTR [ebp+0x8]
100138ae:	mov    eax,DWORD PTR [ecx+0x8]
100138b1:	test   eax,eax
100138b3:	jbe    0x100138b9
100138b5:	dec    eax
100138b6:	mov    DWORD PTR [ecx+0x8],eax
100138b9:	mov    ecx,DWORD PTR [ebp+0x10]
100138bc:	mov    eax,DWORD PTR [ebp+0xc]
100138bf:	mov    DWORD PTR [eax],ecx
100138c1:	mov    ecx,DWORD PTR [ebp+0x14]
100138c4:	mov    DWORD PTR [eax+0x4],ecx
100138c7:	call   0x1005891d
100138cc:	ret    0x10
100138cf:	push   0x48
100138d1:	mov    eax,0x1005f147
100138d6:	call   0x10058845
100138db:	mov    edi,ecx
100138dd:	cmp    DWORD PTR [esi+0x8],0x1745d16
100138e4:	jb     0x10013918
100138e6:	push   0x1006bcb4
100138eb:	lea    ecx,[ebp-0x2c]
100138ee:	call   0x100011d6
100138f3:	and    DWORD PTR [ebp-0x4],0x0
100138f7:	lea    eax,[ebp-0x2c]
100138fa:	push   eax
100138fb:	lea    ecx,[ebp-0x54]
100138fe:	call   0x10001065
10013903:	push   0x10073960
10013908:	lea    eax,[ebp-0x54]
1001390b:	push   eax
1001390c:	mov    DWORD PTR [ebp-0x54],0x1006a77c
10013913:	call   0x10046704
10013918:	push   DWORD PTR [ebp+0x10]
1001391b:	mov    eax,DWORD PTR [esi+0x4]
1001391e:	push   eax
1001391f:	push   edi
10013920:	push   eax
10013921:	call   0x10013d17
10013926:	inc    DWORD PTR [esi+0x8]
10013929:	mov    ebx,eax
1001392b:	mov    eax,DWORD PTR [esi+0x4]
1001392e:	cmp    edi,eax
10013930:	jne    0x1001393f
10013932:	mov    DWORD PTR [eax+0x4],ebx
10013935:	mov    eax,DWORD PTR [esi+0x4]
10013938:	mov    DWORD PTR [eax],ebx
1001393a:	mov    eax,DWORD PTR [esi+0x4]
1001393d:	jmp    0x1001395d
1001393f:	cmp    BYTE PTR [ebp+0xc],0x0
10013943:	je     0x10013952
10013945:	mov    DWORD PTR [edi],ebx
10013947:	mov    eax,DWORD PTR [esi+0x4]
1001394a:	cmp    edi,DWORD PTR [eax]
1001394c:	jne    0x10013960
1001394e:	mov    DWORD PTR [eax],ebx
10013950:	jmp    0x10013960
10013952:	mov    DWORD PTR [edi+0x8],ebx
10013955:	mov    eax,DWORD PTR [esi+0x4]
10013958:	cmp    edi,DWORD PTR [eax+0x8]
1001395b:	jne    0x10013960
1001395d:	mov    DWORD PTR [eax+0x8],ebx
10013960:	mov    edi,ebx
10013962:	lea    eax,[ebx+0x4]
10013965:	jmp    0x10013a13
1001396a:	mov    edx,DWORD PTR [eax]
1001396c:	mov    ecx,DWORD PTR [edx+0x4]
1001396f:	cmp    edx,DWORD PTR [ecx]
10013971:	jne    0x100139b5
10013973:	mov    ecx,DWORD PTR [ecx+0x8]
10013976:	add    ecx,0xc0
1001397c:	cmp    BYTE PTR [ecx],0x0
1001397f:	je     0x100139c2
10013981:	cmp    edi,DWORD PTR [edx+0x8]
10013984:	jne    0x10013990
10013986:	mov    edi,edx
10013988:	push   esi
10013989:	mov    ecx,edi
1001398b:	call   0x10013c8f
10013990:	mov    eax,DWORD PTR [edi+0x4]
10013993:	mov    BYTE PTR [eax+0xc0],0x1
1001399a:	mov    eax,DWORD PTR [edi+0x4]
1001399d:	mov    eax,DWORD PTR [eax+0x4]
100139a0:	mov    BYTE PTR [eax+0xc0],0x0
100139a7:	mov    eax,DWORD PTR [edi+0x4]
100139aa:	mov    ecx,DWORD PTR [eax+0x4]
100139ad:	push   esi
100139ae:	call   0x10013cd2
100139b3:	jmp    0x10013a10
100139b5:	mov    ecx,DWORD PTR [ecx]
100139b7:	add    ecx,0xc0
100139bd:	cmp    BYTE PTR [ecx],0x0
100139c0:	jne    0x100139df
100139c2:	mov    BYTE PTR [edx+0xc0],0x1
100139c9:	mov    BYTE PTR [ecx],0x1
100139cc:	mov    ecx,DWORD PTR [eax]
100139ce:	mov    ecx,DWORD PTR [ecx+0x4]
100139d1:	mov    BYTE PTR [ecx+0xc0],0x0
100139d8:	mov    eax,DWORD PTR [eax]
100139da:	mov    edi,DWORD PTR [eax+0x4]
100139dd:	jmp    0x10013a10
100139df:	cmp    edi,DWORD PTR [edx]
100139e1:	jne    0x100139ed
100139e3:	mov    edi,edx
100139e5:	push   esi
100139e6:	mov    ecx,edi
100139e8:	call   0x10013cd2
100139ed:	mov    eax,DWORD PTR [edi+0x4]
100139f0:	mov    BYTE PTR [eax+0xc0],0x1
100139f7:	mov    eax,DWORD PTR [edi+0x4]
100139fa:	mov    eax,DWORD PTR [eax+0x4]
100139fd:	mov    BYTE PTR [eax+0xc0],0x0
10013a04:	mov    eax,DWORD PTR [edi+0x4]
10013a07:	mov    ecx,DWORD PTR [eax+0x4]
10013a0a:	push   esi
10013a0b:	call   0x10013c8f
10013a10:	lea    eax,[edi+0x4]
10013a13:	mov    ecx,DWORD PTR [eax]
10013a15:	cmp    BYTE PTR [ecx+0xc0],0x0
10013a1c:	je     0x1001396a
10013a22:	mov    eax,DWORD PTR [esi+0x4]
10013a25:	mov    eax,DWORD PTR [eax+0x4]
10013a28:	mov    BYTE PTR [eax+0xc0],0x1
10013a2f:	mov    eax,DWORD PTR [ebp+0x8]
10013a32:	mov    DWORD PTR [eax+0x4],ebx
10013a35:	mov    DWORD PTR [eax],esi
10013a37:	call   0x1005891d
10013a3c:	ret    0xc
10013a3f:	push   ebp
10013a40:	mov    ebp,esp
10013a42:	and    esp,0xfffffff8
10013a45:	push   ecx
10013a46:	push   ecx
10013a47:	mov    eax,ds:0x1007fe38
10013a4c:	mov    edx,DWORD PTR [eax]
10013a4e:	push   ebx
10013a4f:	push   esi
10013a50:	mov    ecx,0x1007fe34
10013a55:	push   eax
10013a56:	mov    esi,ecx
10013a58:	push   esi
10013a59:	push   edx
10013a5a:	push   ecx
10013a5b:	lea    ebx,[esp+0x18]
10013a5f:	call   0x10013b95
10013a64:	push   DWORD PTR ds:0x1007fe38
10013a6a:	call   0x10041d92
10013a6f:	and    DWORD PTR ds:0x1007fe38,0x0
10013a76:	and    DWORD PTR ds:0x1007fe3c,0x0
10013a7d:	pop    ecx
10013a7e:	pop    esi
10013a7f:	pop    ebx
10013a80:	mov    esp,ebp
10013a82:	pop    ebp
10013a83:	ret    
10013a84:	push   ebx
10013a85:	xor    ebx,ebx
10013a87:	cmp    DWORD PTR [esi],ebx
10013a89:	jne    0x10013a90
10013a8b:	call   0x100422b0
10013a90:	mov    eax,DWORD PTR [esi+0x4]
10013a93:	cmp    BYTE PTR [eax+0xc1],bl
10013a99:	je     0x10013aa2
10013a9b:	call   0x100422b0
10013aa0:	jmp    0x10013ad9
10013aa2:	mov    ecx,DWORD PTR [eax+0x8]
10013aa5:	cmp    BYTE PTR [ecx+0xc1],bl
10013aab:	jne    0x10013acb
10013aad:	jmp    0x10013ab1
10013aaf:	mov    ecx,eax
10013ab1:	mov    eax,DWORD PTR [ecx]
10013ab3:	cmp    BYTE PTR [eax+0xc1],bl
10013ab9:	je     0x10013aaf
10013abb:	mov    DWORD PTR [esi+0x4],ecx
10013abe:	jmp    0x10013ad9
10013ac0:	mov    ecx,DWORD PTR [esi+0x4]
10013ac3:	cmp    ecx,DWORD PTR [eax+0x8]
10013ac6:	jne    0x10013ad6
10013ac8:	mov    DWORD PTR [esi+0x4],eax
10013acb:	mov    eax,DWORD PTR [eax+0x4]
10013ace:	cmp    BYTE PTR [eax+0xc1],bl
10013ad4:	je     0x10013ac0
10013ad6:	mov    DWORD PTR [esi+0x4],eax
10013ad9:	mov    eax,esi
10013adb:	pop    ebx
10013adc:	ret    
10013add:	push   ebx
10013ade:	xor    ebx,ebx
10013ae0:	cmp    DWORD PTR [esi],ebx
10013ae2:	jne    0x10013ae9
10013ae4:	call   0x100422b0
10013ae9:	mov    eax,DWORD PTR [esi+0x4]
10013aec:	cmp    BYTE PTR [eax+0x11],bl
10013aef:	je     0x10013afe
10013af1:	mov    eax,DWORD PTR [eax+0x8]
10013af4:	mov    DWORD PTR [esi+0x4],eax
10013af7:	cmp    BYTE PTR [eax+0x11],bl
10013afa:	je     0x10013b3a
10013afc:	jmp    0x10013b30
10013afe:	mov    ecx,DWORD PTR [eax]
10013b00:	cmp    BYTE PTR [ecx+0x11],bl
10013b03:	jne    0x10013b20
10013b05:	jmp    0x10013b09
10013b07:	mov    ecx,eax
10013b09:	mov    eax,DWORD PTR [ecx+0x8]
10013b0c:	cmp    BYTE PTR [eax+0x11],bl
10013b0f:	je     0x10013b07
10013b11:	mov    DWORD PTR [esi+0x4],ecx
10013b14:	jmp    0x10013b3a
10013b16:	mov    ecx,DWORD PTR [esi+0x4]
10013b19:	cmp    ecx,DWORD PTR [eax]
10013b1b:	jne    0x10013b28
10013b1d:	mov    DWORD PTR [esi+0x4],eax
10013b20:	mov    eax,DWORD PTR [eax+0x4]
10013b23:	cmp    BYTE PTR [eax+0x11],bl
10013b26:	je     0x10013b16
10013b28:	mov    ecx,DWORD PTR [esi+0x4]
10013b2b:	cmp    BYTE PTR [ecx+0x11],bl
10013b2e:	je     0x10013b37
10013b30:	call   0x100422b0
10013b35:	jmp    0x10013b3a
10013b37:	mov    DWORD PTR [esi+0x4],eax
10013b3a:	mov    eax,esi
10013b3c:	pop    ebx
10013b3d:	ret    
10013b3e:	call   0x10013d6c
10013b43:	lea    ecx,[esi+0x4]
10013b46:	mov    DWORD PTR [ecx],eax
10013b48:	mov    BYTE PTR [eax+0x11],0x1
10013b4c:	mov    eax,DWORD PTR [ecx]
10013b4e:	mov    DWORD PTR [eax+0x4],eax
10013b51:	mov    eax,DWORD PTR [ecx]
10013b53:	mov    DWORD PTR [eax],eax
10013b55:	mov    ecx,DWORD PTR [ecx]
10013b57:	mov    DWORD PTR [ecx+0x8],ecx
10013b5a:	and    DWORD PTR [esi+0x8],0x0
10013b5e:	ret    
10013b5f:	push   ebp
10013b60:	mov    ebp,esp
10013b62:	push   0x14
10013b64:	call   0x1004239e
10013b69:	test   eax,eax
10013b6b:	pop    ecx
10013b6c:	je     0x10013b91
10013b6e:	mov    ecx,DWORD PTR [ebp+0x8]
10013b71:	mov    DWORD PTR [eax],ecx
10013b73:	mov    ecx,DWORD PTR [ebp+0xc]
10013b76:	mov    DWORD PTR [eax+0x4],ecx
10013b79:	mov    ecx,DWORD PTR [ebp+0x10]
10013b7c:	mov    DWORD PTR [eax+0x8],ecx
10013b7f:	mov    ecx,DWORD PTR [ebp+0x14]
10013b82:	mov    ecx,DWORD PTR [ecx]
10013b84:	mov    DWORD PTR [eax+0xc],ecx
10013b87:	mov    cl,BYTE PTR [ebp+0x18]
10013b8a:	mov    BYTE PTR [eax+0x10],cl
10013b8d:	mov    BYTE PTR [eax+0x11],0x0
10013b91:	pop    ebp
10013b92:	ret    0x14
10013b95:	push   ebp
10013b96:	mov    ebp,esp
10013b98:	mov    eax,ds:0x1007fe38
10013b9d:	sub    esp,0x10
10013ba0:	cmp    DWORD PTR [ebp+0x8],0x0
10013ba4:	push   esi
10013ba5:	mov    esi,DWORD PTR [eax]
10013ba7:	push   edi
10013ba8:	mov    edi,0x1007fe34
10013bad:	je     0x10013bb4
10013baf:	cmp    DWORD PTR [ebp+0x8],edi
10013bb2:	je     0x10013bb9
10013bb4:	call   0x100422b0
10013bb9:	cmp    DWORD PTR [ebp+0xc],esi
10013bbc:	jne    0x10013c11
10013bbe:	cmp    DWORD PTR [ebp+0x10],0x0
10013bc2:	mov    esi,DWORD PTR ds:0x1007fe38
10013bc8:	je     0x10013bcf
10013bca:	cmp    DWORD PTR [ebp+0x10],edi
10013bcd:	je     0x10013bd4
10013bcf:	call   0x100422b0
10013bd4:	cmp    DWORD PTR [ebp+0x14],esi
10013bd7:	jne    0x10013c11
10013bd9:	mov    eax,ds:0x1007fe38
10013bde:	push   DWORD PTR [eax+0x4]
10013be1:	mov    ecx,edi
10013be3:	call   0x10013e1b
10013be8:	mov    eax,ds:0x1007fe38
10013bed:	mov    DWORD PTR [eax+0x4],eax
10013bf0:	mov    eax,ds:0x1007fe38
10013bf5:	and    DWORD PTR ds:0x1007fe3c,0x0
10013bfc:	mov    DWORD PTR [eax],eax
10013bfe:	mov    eax,ds:0x1007fe38
10013c03:	mov    DWORD PTR [eax+0x8],eax
10013c06:	mov    eax,ds:0x1007fe38
10013c0b:	mov    eax,DWORD PTR [eax]
10013c0d:	mov    DWORD PTR [ebx],edi
10013c0f:	jmp    0x10013c4f
10013c11:	mov    eax,DWORD PTR [ebp+0x8]
10013c14:	test   eax,eax
10013c16:	je     0x10013c1d
10013c18:	cmp    eax,DWORD PTR [ebp+0x10]
10013c1b:	je     0x10013c22
10013c1d:	call   0x100422b0
10013c22:	mov    eax,DWORD PTR [ebp+0xc]
10013c25:	cmp    eax,DWORD PTR [ebp+0x14]
10013c28:	mov    ecx,DWORD PTR [ebp+0x8]
10013c2b:	je     0x10013c4d
10013c2d:	lea    esi,[ebp+0x8]
10013c30:	mov    DWORD PTR [ebp-0x8],ecx
10013c33:	mov    DWORD PTR [ebp-0x4],eax
10013c36:	call   0x10013a84
10013c3b:	push   DWORD PTR [ebp-0x4]
10013c3e:	lea    eax,[ebp-0x10]
10013c41:	push   DWORD PTR [ebp-0x8]
10013c44:	push   eax
10013c45:	push   edi
10013c46:	call   0x100135a5
10013c4b:	jmp    0x10013c11
10013c4d:	mov    DWORD PTR [ebx],ecx
10013c4f:	pop    edi
10013c50:	mov    DWORD PTR [ebx+0x4],eax
10013c53:	mov    eax,ebx
10013c55:	pop    esi
10013c56:	leave  
10013c57:	ret    0x10
10013c5a:	mov    eax,DWORD PTR [eax+0x4]
10013c5d:	push   esi
10013c5e:	mov    esi,DWORD PTR [eax+0x4]
10013c61:	push   edi
10013c62:	mov    edi,eax
10013c64:	jmp    0x10013c7f
10013c66:	mov    eax,DWORD PTR [esp+0xc]
10013c6a:	lea    ecx,[esi+0x10]
10013c6d:	call   0x100071aa
10013c72:	test   al,al
10013c74:	je     0x10013c7b
10013c76:	mov    esi,DWORD PTR [esi+0x8]
10013c79:	jmp    0x10013c7f
10013c7b:	mov    edi,esi
10013c7d:	mov    esi,DWORD PTR [esi]
10013c7f:	cmp    BYTE PTR [esi+0xc1],0x0
10013c86:	je     0x10013c66
10013c88:	mov    eax,edi
10013c8a:	pop    edi
10013c8b:	pop    esi
10013c8c:	ret    0x4
10013c8f:	mov    eax,DWORD PTR [ecx+0x8]
10013c92:	mov    edx,DWORD PTR [eax]
10013c94:	mov    DWORD PTR [ecx+0x8],edx
10013c97:	mov    edx,DWORD PTR [eax]
10013c99:	cmp    BYTE PTR [edx+0xc1],0x0
10013ca0:	jne    0x10013ca5
10013ca2:	mov    DWORD PTR [edx+0x4],ecx
10013ca5:	mov    edx,DWORD PTR [ecx+0x4]
10013ca8:	mov    DWORD PTR [eax+0x4],edx
10013cab:	mov    edx,DWORD PTR [esp+0x4]
10013caf:	mov    edx,DWORD PTR [edx+0x4]
10013cb2:	cmp    ecx,DWORD PTR [edx+0x4]
10013cb5:	jne    0x10013cbc
10013cb7:	mov    DWORD PTR [edx+0x4],eax
10013cba:	jmp    0x10013cca
10013cbc:	mov    edx,DWORD PTR [ecx+0x4]
10013cbf:	cmp    ecx,DWORD PTR [edx]
10013cc1:	jne    0x10013cc7
10013cc3:	mov    DWORD PTR [edx],eax
10013cc5:	jmp    0x10013cca
10013cc7:	mov    DWORD PTR [edx+0x8],eax
10013cca:	mov    DWORD PTR [eax],ecx
10013ccc:	mov    DWORD PTR [ecx+0x4],eax
10013ccf:	ret    0x4
10013cd2:	mov    eax,DWORD PTR [ecx]
10013cd4:	mov    edx,DWORD PTR [eax+0x8]
10013cd7:	mov    DWORD PTR [ecx],edx
10013cd9:	mov    edx,DWORD PTR [eax+0x8]
10013cdc:	cmp    BYTE PTR [edx+0xc1],0x0
10013ce3:	jne    0x10013ce8
10013ce5:	mov    DWORD PTR [edx+0x4],ecx
10013ce8:	mov    edx,DWORD PTR [ecx+0x4]
10013ceb:	mov    DWORD PTR [eax+0x4],edx
10013cee:	mov    edx,DWORD PTR [esp+0x4]
10013cf2:	mov    edx,DWORD PTR [edx+0x4]
10013cf5:	cmp    ecx,DWORD PTR [edx+0x4]
10013cf8:	jne    0x10013cff
10013cfa:	mov    DWORD PTR [edx+0x4],eax
10013cfd:	jmp    0x10013d0e
10013cff:	mov    edx,DWORD PTR [ecx+0x4]
10013d02:	cmp    ecx,DWORD PTR [edx+0x8]
10013d05:	jne    0x10013d0c
10013d07:	mov    DWORD PTR [edx+0x8],eax
10013d0a:	jmp    0x10013d0e
10013d0c:	mov    DWORD PTR [edx],eax
10013d0e:	mov    DWORD PTR [eax+0x8],ecx
10013d11:	mov    DWORD PTR [ecx+0x4],eax
10013d14:	ret    0x4
10013d17:	push   0x8
10013d19:	mov    eax,0x1005fb6d
10013d1e:	call   0x10058878
10013d23:	push   0xc8
10013d28:	call   0x1004239e
10013d2d:	mov    edi,eax
10013d2f:	pop    ecx
10013d30:	mov    DWORD PTR [ebp-0x14],edi
10013d33:	test   edi,edi
10013d35:	mov    DWORD PTR [ebp-0x4],0x1
10013d3c:	je     0x10013d4f
10013d3e:	push   DWORD PTR [ebp+0x10]
10013d41:	mov    ebx,DWORD PTR [ebp+0x14]
10013d44:	push   DWORD PTR [ebp+0xc]
10013d47:	push   DWORD PTR [ebp+0x8]
10013d4a:	call   0x10013dc9
10013d4f:	mov    eax,edi
10013d51:	call   0x1005891d
10013d56:	ret    0x10
10013d59:	push   DWORD PTR [ebp-0x14]
10013d5c:	call   0x10041d92
10013d61:	pop    ecx
10013d62:	push   0x0
10013d64:	push   0x0
10013d66:	call   0x10046704
10013d6b:	int3   
10013d6c:	push   0x14
10013d6e:	call   0x1004239e
10013d73:	xor    edx,edx
10013d75:	cmp    eax,edx
10013d77:	pop    ecx
10013d78:	je     0x10013d7c
10013d7a:	mov    DWORD PTR [eax],edx
10013d7c:	lea    ecx,[eax+0x4]
10013d7f:	cmp    ecx,edx
10013d81:	je     0x10013d85
10013d83:	mov    DWORD PTR [ecx],edx
10013d85:	lea    ecx,[eax+0x8]
10013d88:	cmp    ecx,edx
10013d8a:	je     0x10013d8e
10013d8c:	mov    DWORD PTR [ecx],edx
10013d8e:	mov    BYTE PTR [eax+0x10],0x1
10013d92:	mov    BYTE PTR [eax+0x11],dl
10013d95:	ret    
10013d96:	push   0xc8
10013d9b:	call   0x1004239e
10013da0:	xor    edx,edx
10013da2:	cmp    eax,edx
10013da4:	pop    ecx
10013da5:	je     0x10013da9
10013da7:	mov    DWORD PTR [eax],edx
10013da9:	lea    ecx,[eax+0x4]
10013dac:	cmp    ecx,edx
10013dae:	je     0x10013db2
10013db0:	mov    DWORD PTR [ecx],edx
10013db2:	lea    ecx,[eax+0x8]
10013db5:	cmp    ecx,edx
10013db7:	je     0x10013dbb
10013db9:	mov    DWORD PTR [ecx],edx
10013dbb:	mov    BYTE PTR [eax+0xc0],0x1
10013dc2:	mov    BYTE PTR [eax+0xc1],dl
10013dc8:	ret    
10013dc9:	push   0x0
10013dcb:	mov    eax,0x10060f15
10013dd0:	call   0x10058845
10013dd5:	mov    eax,DWORD PTR [ebp+0x8]
10013dd8:	mov    DWORD PTR [edi],eax
10013dda:	mov    eax,DWORD PTR [ebp+0xc]
10013ddd:	mov    DWORD PTR [edi+0x4],eax
10013de0:	mov    eax,DWORD PTR [ebp+0x10]
10013de3:	lea    esi,[edi+0x10]
10013de6:	push   ebx
10013de7:	mov    ecx,esi
10013de9:	mov    DWORD PTR [edi+0x8],eax
10013dec:	mov    DWORD PTR [ebp+0x8],esi
10013def:	call   0x100011b0
10013df4:	and    DWORD PTR [ebp-0x4],0x0
10013df8:	lea    eax,[ebx+0x20]
10013dfb:	add    esi,0x20
10013dfe:	call   0x10012f33
10013e03:	mov    BYTE PTR [edi+0xc0],0x0
10013e0a:	mov    BYTE PTR [edi+0xc1],0x0
10013e11:	mov    eax,edi
10013e13:	call   0x1005891d
10013e18:	ret    0xc
10013e1b:	push   ecx
10013e1c:	push   ebp
10013e1d:	mov    ebp,DWORD PTR [esp+0xc]
10013e21:	cmp    BYTE PTR [ebp+0xc1],0x0
10013e28:	push   edi
10013e29:	mov    DWORD PTR [esp+0x8],ecx
10013e2d:	mov    edi,ebp
10013e2f:	jne    0x10013e6b
10013e31:	push   ebx
10013e32:	push   esi
10013e33:	push   DWORD PTR [edi+0x8]
10013e36:	mov    ecx,DWORD PTR [esp+0x14]
10013e3a:	call   0x10013e1b
10013e3f:	mov    edi,DWORD PTR [edi]
10013e41:	lea    ebx,[ebp+0x10]
10013e44:	lea    esi,[ebx+0x20]
10013e47:	call   0x10002ecc
10013e4c:	push   0x0
10013e4e:	push   0x1
10013e50:	mov    ecx,ebx
10013e52:	call   0x100012f9
10013e57:	push   ebp
10013e58:	call   0x10041d92
10013e5d:	cmp    BYTE PTR [edi+0xc1],0x0
10013e64:	pop    ecx
10013e65:	mov    ebp,edi
10013e67:	je     0x10013e33
10013e69:	pop    esi
10013e6a:	pop    ebx
10013e6b:	pop    edi
10013e6c:	pop    ebp
10013e6d:	pop    ecx
10013e6e:	ret    0x4
10013e71:	push   0x34
10013e73:	mov    eax,0x10060c81
10013e78:	call   0x10058845
10013e7d:	mov    ebx,ecx
10013e7f:	mov    DWORD PTR [ebp-0x20],ebx
10013e82:	and    DWORD PTR [ebp-0x4],0x0
10013e86:	mov    eax,DWORD PTR [ebx+0x4]
10013e89:	mov    esi,DWORD PTR [eax]
10013e8b:	mov    edi,ebx
10013e8d:	mov    DWORD PTR [ebp-0x10],esi
10013e90:	mov    DWORD PTR [ebp-0x14],edi
10013e93:	test   edi,edi
10013e95:	mov    eax,DWORD PTR [ebx+0x4]
10013e98:	mov    DWORD PTR [ebp-0x30],eax
10013e9b:	je     0x10013ea1
10013e9d:	cmp    edi,ebx
10013e9f:	je     0x10013ea6
10013ea1:	call   0x100422b0
10013ea6:	cmp    esi,DWORD PTR [ebp-0x30]
10013ea9:	je     0x10013f68
10013eaf:	test   edi,edi
10013eb1:	jne    0x10013eb8
10013eb3:	call   0x100422b0
10013eb8:	cmp    esi,DWORD PTR [edi+0x4]
10013ebb:	jne    0x10013ec2
10013ebd:	call   0x100422b0
10013ec2:	lea    ecx,[esi+0x4c]
10013ec5:	lea    eax,[ebp+0x8]
10013ec8:	call   0x10005e11
10013ecd:	test   al,al
10013ecf:	je     0x10013f55
10013ed5:	mov    eax,DWORD PTR [ebp+0x28]
10013ed8:	and    DWORD PTR [ebp-0x2c],0x0
10013edc:	mov    DWORD PTR [esi+0xa8],eax
10013ee2:	mov    eax,DWORD PTR [ebp+0x2c]
10013ee5:	mov    DWORD PTR [esi+0xac],eax
10013eeb:	mov    eax,DWORD PTR [ebp+0x30]
10013eee:	mov    DWORD PTR [esi+0xb0],eax
10013ef4:	mov    eax,DWORD PTR [ebp+0x34]
10013ef7:	mov    DWORD PTR [esi+0xb4],eax
10013efd:	mov    eax,DWORD PTR [ebx+0x10]
10013f00:	add    ebx,0xc
10013f03:	mov    DWORD PTR [ebp-0x24],eax
10013f06:	lea    eax,[ebp-0x2c]
10013f09:	mov    DWORD PTR [ebp-0x28],ebx
10013f0c:	call   0x10013434
10013f11:	mov    eax,DWORD PTR [eax]
10013f13:	inc    eax
10013f14:	cmp    esi,DWORD PTR [edi+0x4]
10013f17:	mov    DWORD PTR [ebp-0x18],eax
10013f1a:	jne    0x10013f21
10013f1c:	call   0x100422b0
10013f21:	lea    edx,[esi+0xb8]
10013f27:	mov    eax,ebx
10013f29:	mov    DWORD PTR [ebp-0x1c],edx
10013f2c:	call   0x10013096
10013f31:	lea    eax,[ebp-0x18]
10013f34:	push   eax
10013f35:	lea    edi,[ebp-0x40]
10013f38:	call   0x10012fdd
10013f3d:	mov    eax,DWORD PTR [ebp-0x14]
10013f40:	cmp    esi,DWORD PTR [eax+0x4]
10013f43:	jne    0x10013f4a
10013f45:	call   0x100422b0
10013f4a:	mov    eax,DWORD PTR [ebp-0x18]
10013f4d:	mov    ecx,DWORD PTR [ebp-0x1c]
10013f50:	mov    ebx,DWORD PTR [ebp-0x20]
10013f53:	mov    DWORD PTR [ecx],eax
10013f55:	lea    esi,[ebp-0x14]
10013f58:	call   0x10013a84
10013f5d:	mov    esi,DWORD PTR [ebp-0x10]
10013f60:	mov    edi,DWORD PTR [ebp-0x14]
10013f63:	jmp    0x10013e93
10013f68:	push   0x0
10013f6a:	push   0x1
10013f6c:	lea    ecx,[ebp+0x8]
10013f6f:	call   0x100012f9
10013f74:	call   0x1005891d
10013f79:	ret    0x30
10013f7c:	push   0x8
10013f7e:	mov    eax,0x1005fb4d
10013f83:	call   0x10058845
10013f88:	and    DWORD PTR [ebp-0x14],0x0
10013f8c:	mov    DWORD PTR [ebp-0x10],ebx
10013f8f:	lea    eax,[ebp+0x8]
10013f92:	push   eax
10013f93:	mov    ecx,ebx
10013f95:	mov    DWORD PTR [ebp-0x4],0x1
10013f9c:	call   0x100011b0
10013fa1:	lea    esi,[ebx+0x20]
10013fa4:	push   esi
10013fa5:	lea    edi,[ebp+0x24]
10013fa8:	mov    BYTE PTR [ebp-0x4],0x2
10013fac:	call   0x10012f62
10013fb1:	mov    eax,DWORD PTR [ebp+0xac]
10013fb7:	push   0x0
10013fb9:	push   0x1
10013fbb:	lea    ecx,[ebp+0x8]
10013fbe:	mov    DWORD PTR [esi+0x88],eax
10013fc4:	call   0x100012f9
10013fc9:	mov    esi,edi
10013fcb:	call   0x10002ecc
10013fd0:	mov    eax,ebx
10013fd2:	call   0x1005891d
10013fd7:	ret    
10013fd8:	mov    eax,DWORD PTR [esp+0x8]
10013fdc:	mul    DWORD PTR [esp+0xc]
10013fe0:	test   edx,edx
10013fe2:	ja     0x10013fe9
10013fe4:	cmp    eax,0xffffffff
10013fe7:	jbe    0x10013fef
10013fe9:	mov    eax,0x80070057
10013fee:	ret    
10013fef:	mov    ecx,DWORD PTR [esp+0x4]
10013ff3:	mov    DWORD PTR [ecx],eax
10013ff5:	xor    eax,eax
10013ff7:	ret    
10013ff8:	push   DWORD PTR [esp+0xc]
10013ffc:	call   DWORD PTR ds:0x100650e0
10014002:	lea    eax,[eax+eax*1+0x2]
10014006:	push   eax
10014007:	push   DWORD PTR [esp+0x10]
1001400b:	mov    eax,DWORD PTR [esp+0x10]
1001400f:	add    eax,eax
10014011:	push   eax
10014012:	push   DWORD PTR [esp+0x10]
10014016:	call   0x100422c5
1001401b:	add    esp,0x10
1001401e:	neg    eax
10014020:	sbb    eax,eax
10014022:	inc    eax
10014023:	ret    
10014024:	push   DWORD PTR [esp+0x10]
10014028:	push   DWORD PTR [esp+0x10]
1001402c:	push   DWORD PTR [esp+0x10]
10014030:	push   DWORD PTR [esp+0x10]
10014034:	call   0x100422c5
10014039:	push   eax
1001403a:	call   0x10001f59
1001403f:	add    esp,0x14
10014042:	ret    
10014043:	push   esi
10014044:	push   0x18
10014046:	mov    esi,ecx
10014048:	push   0x0
1001404a:	push   esi
1001404b:	call   0x10044950
10014050:	add    esp,0xc
10014053:	mov    eax,esi
10014055:	pop    esi
10014056:	ret    
10014057:	push   0xc
10014059:	push   0x100739c0
1001405e:	call   0x100459e4
10014063:	and    DWORD PTR [ebp-0x4],0x0
10014067:	push   ecx
10014068:	call   DWORD PTR ds:0x1006511c
1001406e:	and    DWORD PTR [ebp-0x1c],0x0
10014072:	jmp    0x10014092
10014074:	mov    eax,DWORD PTR [ebp-0x14]
10014077:	mov    eax,DWORD PTR [eax]
10014079:	mov    eax,DWORD PTR [eax]
1001407b:	xor    ecx,ecx
1001407d:	cmp    eax,0xc0000017
10014082:	sete   cl
10014085:	mov    eax,ecx
10014087:	ret    
10014088:	mov    esp,DWORD PTR [ebp-0x18]
1001408b:	mov    DWORD PTR [ebp-0x1c],0x8007000e
10014092:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10014099:	mov    eax,DWORD PTR [ebp-0x1c]
1001409c:	call   0x10045a29
100140a1:	ret    
100140a2:	test   eax,eax
100140a4:	jle    0x100140b0
100140a6:	and    eax,0xffff
100140ab:	or     eax,0x80070000
100140b0:	ret    
100140b1:	push   ebx
100140b2:	push   ebp
100140b3:	mov    ebx,ecx
100140b5:	push   edi
100140b6:	lea    edi,[ebx+0x4]
100140b9:	xor    ebp,ebp
100140bb:	cmp    DWORD PTR [edi],ebp
100140bd:	je     0x10014114
100140bf:	cmp    DWORD PTR [ebx+0xc],ebp
100140c2:	je     0x100140fb
100140c4:	cmp    edi,ebp
100140c6:	jne    0x100140d7
100140c8:	push   ebp
100140c9:	push   ebp
100140ca:	push   0x1
100140cc:	push   0xc0000005
100140d1:	call   DWORD PTR ds:0x10065128
100140d7:	push   esi
100140d8:	mov    esi,DWORD PTR [edi+0x8]
100140db:	cmp    esi,ebp
100140dd:	je     0x100140f4
100140df:	push   DWORD PTR [esi+0x4]
100140e2:	call   DWORD PTR [esi]
100140e4:	mov    ebp,DWORD PTR [esi+0x8]
100140e7:	push   esi
100140e8:	call   0x10041d92
100140ed:	test   ebp,ebp
100140ef:	pop    ecx
100140f0:	mov    esi,ebp
100140f2:	jne    0x100140df
100140f4:	mov    DWORD PTR [edi+0x8],ebp
100140f7:	mov    DWORD PTR [ebx+0xc],ebp
100140fa:	pop    esi
100140fb:	mov    eax,DWORD PTR [ebx+0x28]
100140fe:	cmp    eax,ebp
10014100:	je     0x10014108
10014102:	mov    ecx,DWORD PTR [eax]
10014104:	push   eax
10014105:	call   DWORD PTR [ecx+0x8]
10014108:	add    ebx,0x10
1001410b:	push   ebx
1001410c:	call   DWORD PTR ds:0x10065138
10014112:	mov    DWORD PTR [edi],ebp
10014114:	pop    edi
10014115:	pop    ebp
10014116:	pop    ebx
10014117:	ret    
10014118:	add    ecx,0x8
1001411b:	push   ecx
1001411c:	call   DWORD PTR ds:0x100650a4
10014122:	ret    
10014123:	add    ecx,0x8
10014126:	push   ecx
10014127:	call   DWORD PTR ds:0x100650ac
1001412d:	ret    
1001412e:	mov    eax,DWORD PTR [ecx+0x8]
10014131:	ret    
10014132:	push   ebx
10014133:	mov    ebx,DWORD PTR [esp+0x8]
10014137:	test   ebx,ebx
10014139:	jne    0x10014142
1001413b:	mov    eax,0x80004003
10014140:	jmp    0x10014177
10014142:	push   esi
10014143:	push   edi
10014144:	xor    edi,edi
10014146:	lea    esi,[ecx+0x28]
10014149:	cmp    DWORD PTR [esi],edi
1001414b:	jne    0x10014167
1001414d:	push   esi
1001414e:	push   0x1006e91c
10014153:	push   0x1
10014155:	push   edi
10014156:	push   0x1006a658
1001415b:	call   DWORD PTR ds:0x10065438
10014161:	mov    edi,eax
10014163:	test   edi,edi
10014165:	jl     0x10014173
10014167:	mov    eax,DWORD PTR [esi]
10014169:	mov    DWORD PTR [ebx],eax
1001416b:	mov    esi,DWORD PTR [esi]
1001416d:	mov    eax,DWORD PTR [esi]
1001416f:	push   esi
10014170:	call   DWORD PTR [eax+0x4]
10014173:	mov    eax,edi
10014175:	pop    edi
10014176:	pop    esi
10014177:	pop    ebx
10014178:	ret    0x4
1001417b:	push   esi
1001417c:	push   edi
1001417d:	mov    esi,ecx
1001417f:	xor    edi,edi
10014181:	dec    esi
10014182:	je     0x100141aa
10014184:	movzx  ecx,WORD PTR [edx]
10014187:	test   cx,cx
1001418a:	je     0x100141aa
1001418c:	mov    WORD PTR [eax],cx
1001418f:	inc    eax
10014190:	inc    eax
10014191:	cmp    WORD PTR [edx],0x27
10014195:	jne    0x100141a3
10014197:	inc    edi
10014198:	cmp    edi,esi
1001419a:	jae    0x100141a3
1001419c:	mov    WORD PTR [eax],0x27
100141a1:	inc    eax
100141a2:	inc    eax
100141a3:	inc    edx
100141a4:	inc    edx
100141a5:	inc    edi
100141a6:	cmp    edi,esi
100141a8:	jb     0x10014184
100141aa:	and    WORD PTR [eax],0x0
100141ae:	pop    edi
100141af:	pop    esi
100141b0:	ret    
100141b1:	mov    eax,0x80004005
100141b6:	ret    0x10
100141b9:	push   DWORD PTR [esp+0xc]
100141bd:	mov    edx,DWORD PTR [esp+0x14]
100141c1:	push   DWORD PTR [esp+0xc]
100141c5:	mov    ecx,DWORD PTR [esp+0xc]
100141c9:	call   0x10015747
100141ce:	ret    0x10
100141d1:	push   DWORD PTR [esp+0xc]
100141d5:	mov    edx,DWORD PTR [esp+0x14]
100141d9:	push   DWORD PTR [esp+0xc]
100141dd:	mov    ecx,DWORD PTR [esp+0xc]
100141e1:	call   0x100158fa
100141e6:	ret    0x10
100141e9:	push   esi
100141ea:	mov    esi,ecx
100141ec:	mov    DWORD PTR [esi],0x1006e8dc
100141f2:	call   0x100140b1
100141f7:	test   BYTE PTR [esp+0x8],0x1
100141fc:	je     0x10014205
100141fe:	push   esi
100141ff:	call   0x10041d92
10014204:	pop    ecx
10014205:	mov    eax,esi
10014207:	pop    esi
10014208:	ret    0x4
1001420b:	mov    eax,DWORD PTR [esi]
1001420d:	test   eax,eax
1001420f:	je     0x1001421b
10014211:	push   eax
10014212:	call   DWORD PTR ds:0x1006501c
10014218:	and    DWORD PTR [esi],0x0
1001421b:	ret    
1001421c:	push   ebp
1001421d:	mov    ebp,esp
1001421f:	cmp    DWORD PTR [ebp+0x10],0x0
10014223:	jne    0x1001422f
10014225:	push   0x80004005
1001422a:	call   0x10001f41
1001422f:	push   esi
10014230:	mov    esi,DWORD PTR [ebp+0x10]
10014233:	push   edi
10014234:	xor    edi,edi
10014236:	push   esi
10014237:	call   DWORD PTR ds:0x100650e0
1001423d:	inc    eax
1001423e:	lea    ecx,[eax+eax*1]
10014241:	add    esi,ecx
10014243:	add    edi,ecx
10014245:	cmp    eax,0x1
10014248:	jne    0x10014236
1001424a:	mov    eax,DWORD PTR [ebp+0x8]
1001424d:	push   edi
1001424e:	push   DWORD PTR [ebp+0x10]
10014251:	push   0x7
10014253:	push   0x0
10014255:	push   DWORD PTR [ebp+0xc]
10014258:	push   DWORD PTR [eax]
1001425a:	call   DWORD PTR ds:0x10065020
10014260:	pop    edi
10014261:	pop    esi
10014262:	pop    ebp
10014263:	ret    0xc
10014266:	push   ebp
10014267:	mov    ebp,esp
10014269:	sub    esp,0x228
1001426f:	mov    eax,ds:0x1007d030
10014274:	xor    eax,ebp
10014276:	mov    DWORD PTR [ebp-0x8],eax
10014279:	push   ebx
1001427a:	push   esi
1001427b:	push   edi
1001427c:	lea    edx,[ebp-0x214]
10014282:	push   edx
10014283:	push   0x2001f
10014288:	mov    eax,ecx
1001428a:	mov    ecx,DWORD PTR [ebp+0x8]
1001428d:	xor    esi,esi
1001428f:	push   esi
10014290:	mov    DWORD PTR [ebp-0x220],eax
10014296:	mov    eax,DWORD PTR [eax]
10014298:	push   ecx
10014299:	push   eax
1001429a:	mov    DWORD PTR [ebp-0x21c],ecx
100142a0:	mov    DWORD PTR [ebp-0x210],esi
100142a6:	mov    DWORD PTR [ebp-0x214],esi
100142ac:	call   DWORD PTR ds:0x10065014
100142b2:	mov    ebx,DWORD PTR ds:0x1006501c
100142b8:	mov    edi,eax
100142ba:	cmp    edi,esi
100142bc:	jne    0x10014383
100142c2:	xor    eax,eax
100142c4:	cmp    DWORD PTR [ebp-0x210],esi
100142ca:	je     0x100142d4
100142cc:	push   DWORD PTR [ebp-0x210]
100142d2:	call   ebx
100142d4:	cmp    eax,esi
100142d6:	mov    ecx,DWORD PTR [ebp-0x214]
100142dc:	mov    edi,eax
100142de:	mov    DWORD PTR [ebp-0x210],ecx
100142e4:	jne    0x10014383
100142ea:	mov    edi,DWORD PTR ds:0x10065018
100142f0:	lea    eax,[ebp-0x228]
100142f6:	push   eax
100142f7:	push   esi
100142f8:	push   esi
100142f9:	push   esi
100142fa:	lea    eax,[ebp-0x218]
10014300:	push   eax
10014301:	lea    eax,[ebp-0x20c]
10014307:	push   eax
10014308:	push   esi
10014309:	push   ecx
1001430a:	jmp    0x10014347
1001430c:	lea    eax,[ebp-0x20c]
10014312:	push   eax
10014313:	lea    ecx,[ebp-0x210]
10014319:	call   0x10014266
1001431e:	cmp    eax,esi
10014320:	mov    DWORD PTR [ebp-0x214],eax
10014326:	jne    0x100143a6
10014328:	lea    eax,[ebp-0x228]
1001432e:	push   eax
1001432f:	push   esi
10014330:	push   esi
10014331:	push   esi
10014332:	lea    eax,[ebp-0x218]
10014338:	push   eax
10014339:	lea    eax,[ebp-0x20c]
1001433f:	push   eax
10014340:	push   esi
10014341:	push   DWORD PTR [ebp-0x210]
10014347:	mov    DWORD PTR [ebp-0x218],0x100
10014351:	call   edi
10014353:	test   eax,eax
10014355:	je     0x1001430c
10014357:	cmp    DWORD PTR [ebp-0x210],esi
1001435d:	je     0x1001436d
1001435f:	push   DWORD PTR [ebp-0x210]
10014365:	call   ebx
10014367:	mov    DWORD PTR [ebp-0x210],esi
1001436d:	push   DWORD PTR [ebp-0x21c]
10014373:	mov    eax,DWORD PTR [ebp-0x220]
10014379:	push   DWORD PTR [eax]
1001437b:	call   DWORD PTR ds:0x1006500c
10014381:	mov    edi,eax
10014383:	cmp    DWORD PTR [ebp-0x210],esi
10014389:	je     0x10014393
1001438b:	push   DWORD PTR [ebp-0x210]
10014391:	call   ebx
10014393:	mov    eax,edi
10014395:	mov    ecx,DWORD PTR [ebp-0x8]
10014398:	pop    edi
10014399:	pop    esi
1001439a:	xor    ecx,ebp
1001439c:	pop    ebx
1001439d:	call   0x10041d97
100143a2:	leave  
100143a3:	ret    0x4
100143a6:	cmp    DWORD PTR [ebp-0x210],esi
100143ac:	je     0x100143b6
100143ae:	push   DWORD PTR [ebp-0x210]
100143b4:	call   ebx
100143b6:	mov    eax,DWORD PTR [ebp-0x214]
100143bc:	jmp    0x10014395
100143be:	push   0x20
100143c0:	mov    eax,0x1005f1b6
100143c5:	call   0x10058878
100143ca:	xor    edi,edi
100143cc:	cmp    DWORD PTR [ebp+0xc],edi
100143cf:	je     0x100144d7
100143d5:	cmp    DWORD PTR [ebp+0x10],edi
100143d8:	je     0x100144d7
100143de:	push   DWORD PTR [ebp+0xc]
100143e1:	mov    DWORD PTR [ebp-0x1c],edi
100143e4:	call   DWORD PTR ds:0x100650e0
100143ea:	push   0x2
100143ec:	lea    eax,[eax+eax*1+0x2]
100143f0:	xor    ecx,ecx
100143f2:	pop    esi
100143f3:	mov    DWORD PTR [ebp-0x20],eax
100143f6:	mov    edx,esi
100143f8:	mul    edx
100143fa:	seto   cl
100143fd:	mov    DWORD PTR [ebp-0x14],edi
10014400:	mov    DWORD PTR [ebp-0x4],edi
10014403:	neg    ecx
10014405:	or     ecx,eax
10014407:	push   ecx
10014408:	call   0x10042609
1001440d:	pop    ecx
1001440e:	mov    DWORD PTR [ebp-0x14],eax
10014411:	jmp    0x1001441e
10014413:	mov    eax,0x10014419
10014418:	ret    
10014419:	push   0x2
1001441b:	xor    edi,edi
1001441d:	pop    esi
1001441e:	push   DWORD PTR [ebp+0x10]
10014421:	mov    DWORD PTR [ebp-0x4],esi
10014424:	mov    eax,DWORD PTR [ebp-0x14]
10014427:	mov    DWORD PTR [ebp-0x2c],eax
1001442a:	call   DWORD PTR ds:0x100650e0
10014430:	lea    eax,[eax+eax*1+0x2]
10014434:	xor    ecx,ecx
10014436:	mov    DWORD PTR [ebp-0x24],eax
10014439:	mov    edx,esi
1001443b:	mul    edx
1001443d:	seto   cl
10014440:	mov    DWORD PTR [ebp-0x18],edi
10014443:	mov    BYTE PTR [ebp-0x4],0x3
10014447:	neg    ecx
10014449:	or     ecx,eax
1001444b:	push   ecx
1001444c:	call   0x10042609
10014451:	pop    ecx
10014452:	mov    DWORD PTR [ebp-0x18],eax
10014455:	mov    DWORD PTR [ebp-0x4],esi
10014458:	jmp    0x10014462
1001445a:	mov    eax,0x10014460
1001445f:	ret    
10014460:	xor    edi,edi
10014462:	mov    BYTE PTR [ebp-0x4],0x5
10014466:	cmp    DWORD PTR [ebp-0x14],edi
10014469:	mov    esi,DWORD PTR [ebp-0x18]
1001446c:	mov    DWORD PTR [ebp-0x28],esi
1001446f:	je     0x100144ac
10014471:	cmp    esi,edi
10014473:	je     0x100144ac
10014475:	push   DWORD PTR [ebp-0x20]
10014478:	push   DWORD PTR [ebp+0xc]
1001447b:	push   DWORD PTR [ebp-0x20]
1001447e:	push   DWORD PTR [ebp-0x14]
10014481:	call   0x10014024
10014486:	push   DWORD PTR [ebp-0x24]
10014489:	push   DWORD PTR [ebp+0x10]
1001448c:	push   DWORD PTR [ebp-0x24]
1001448f:	push   esi
10014490:	call   0x10014024
10014495:	mov    esi,DWORD PTR [ebp+0x8]
10014498:	add    esp,0x20
1001449b:	lea    eax,[ebp-0x18]
1001449e:	push   eax
1001449f:	lea    eax,[ebp-0x14]
100144a2:	push   eax
100144a3:	call   0x100174b9
100144a8:	test   eax,eax
100144aa:	jne    0x100144b5
100144ac:	mov    DWORD PTR [ebp-0x1c],0x8007000e
100144b3:	jmp    0x100144bb
100144b5:	mov    DWORD PTR [ebp-0x2c],edi
100144b8:	mov    DWORD PTR [ebp-0x28],edi
100144bb:	push   DWORD PTR [ebp-0x28]
100144be:	call   0x100422c0
100144c3:	push   DWORD PTR [ebp-0x2c]
100144c6:	call   0x100422c0
100144cb:	xor    eax,eax
100144cd:	cmp    DWORD PTR [ebp-0x1c],edi
100144d0:	pop    ecx
100144d1:	pop    ecx
100144d2:	setge  al
100144d5:	jmp    0x100144d9
100144d7:	xor    eax,eax
100144d9:	call   0x1005891d
100144de:	ret    0xc
100144e1:	push   esi
100144e2:	mov    esi,eax
100144e4:	mov    eax,DWORD PTR [esi+0x8]
100144e7:	push   edi
100144e8:	xor    edi,edi
100144ea:	test   eax,eax
100144ec:	jle    0x1001451a
100144ee:	test   edi,edi
100144f0:	jl     0x10014524
100144f2:	cmp    edi,eax
100144f4:	jge    0x10014524
100144f6:	mov    eax,DWORD PTR [esi]
100144f8:	push   DWORD PTR [eax+edi*4]
100144fb:	call   0x100422c0
10014500:	pop    ecx
10014501:	mov    eax,edi
10014503:	mov    ecx,esi
10014505:	call   0x10017542
1001450a:	push   DWORD PTR [eax]
1001450c:	call   0x100422c0
10014511:	mov    eax,DWORD PTR [esi+0x8]
10014514:	inc    edi
10014515:	cmp    edi,eax
10014517:	pop    ecx
10014518:	jl     0x100144ee
1001451a:	call   0x1001751b
1001451f:	pop    edi
10014520:	xor    eax,eax
10014522:	pop    esi
10014523:	ret    
10014524:	push   0x0
10014526:	push   0x0
10014528:	push   0x1
1001452a:	push   0xc000008c
1001452f:	call   DWORD PTR ds:0x10065128
10014535:	int3   
10014536:	push   ebp
10014537:	mov    ebp,esp
10014539:	push   ecx
1001453a:	cmp    eax,0x64
1001453d:	jge    0x10014544
1001453f:	mov    eax,0x3e8
10014544:	and    DWORD PTR [esi],0x0
10014547:	and    DWORD PTR [ebp-0x4],0x0
1001454b:	push   0x2
1001454d:	push   eax
1001454e:	mov    DWORD PTR [esi+0x4],eax
10014551:	lea    eax,[ebp-0x4]
10014554:	push   eax
10014555:	call   0x10013fd8
1001455a:	add    esp,0xc
1001455d:	test   eax,eax
1001455f:	jge    0x10014565
10014561:	xor    eax,eax
10014563:	jmp    0x1001456e
10014565:	push   DWORD PTR [ebp-0x4]
10014568:	call   DWORD PTR ds:0x10065424
1001456e:	test   eax,eax
10014570:	mov    DWORD PTR [esi+0x8],eax
10014573:	je     0x10014579
10014575:	and    WORD PTR [eax],0x0
10014579:	mov    eax,esi
1001457b:	leave  
1001457c:	ret    
1001457d:	push   DWORD PTR [eax+0x8]
10014580:	call   DWORD PTR ds:0x10065428
10014586:	ret    
10014587:	push   ebp
10014588:	mov    ebp,esp
1001458a:	push   ecx
1001458b:	mov    ecx,DWORD PTR [esi]
1001458d:	lea    eax,[ecx+edi*1+0x1]
10014591:	cmp    eax,ecx
10014593:	push   ebx
10014594:	jle    0x10014625
1001459a:	cmp    eax,edi
1001459c:	jle    0x10014625
100145a2:	cmp    eax,DWORD PTR [esi+0x4]
100145a5:	jl     0x100145e6
100145a7:	mov    ecx,DWORD PTR [esi+0x4]
100145aa:	cmp    ecx,0x3fffffff
100145b0:	jg     0x10014625
100145b2:	add    ecx,ecx
100145b4:	cmp    eax,ecx
100145b6:	mov    DWORD PTR [esi+0x4],ecx
100145b9:	jge    0x100145a7
100145bb:	mov    ebx,DWORD PTR [esi+0x8]
100145be:	and    DWORD PTR [ebp-0x4],0x0
100145c2:	push   0x2
100145c4:	push   ecx
100145c5:	lea    eax,[ebp-0x4]
100145c8:	push   eax
100145c9:	call   0x10013fd8
100145ce:	add    esp,0xc
100145d1:	test   eax,eax
100145d3:	jl     0x10014625
100145d5:	push   DWORD PTR [ebp-0x4]
100145d8:	push   ebx
100145d9:	call   DWORD PTR ds:0x1006542c
100145df:	test   eax,eax
100145e1:	je     0x10014625
100145e3:	mov    DWORD PTR [esi+0x8],eax
100145e6:	mov    eax,DWORD PTR [esi]
100145e8:	test   eax,eax
100145ea:	jl     0x10014625
100145ec:	mov    edx,DWORD PTR [esi+0x4]
100145ef:	cmp    eax,edx
100145f1:	jge    0x10014625
100145f3:	mov    ecx,edx
100145f5:	sub    ecx,eax
100145f7:	cmp    ecx,edx
100145f9:	jg     0x10014625
100145fb:	lea    edx,[edi+edi*1]
100145fe:	push   edx
100145ff:	push   DWORD PTR [ebp+0x8]
10014602:	add    ecx,ecx
10014604:	push   ecx
10014605:	mov    ecx,DWORD PTR [esi+0x8]
10014608:	lea    eax,[ecx+eax*2]
1001460b:	push   eax
1001460c:	call   0x10014024
10014611:	add    DWORD PTR [esi],edi
10014613:	mov    eax,DWORD PTR [esi]
10014615:	mov    ecx,DWORD PTR [esi+0x8]
10014618:	and    WORD PTR [ecx+eax*2],0x0
1001461d:	xor    eax,eax
1001461f:	add    esp,0x10
10014622:	inc    eax
10014623:	jmp    0x10014627
10014625:	xor    eax,eax
10014627:	pop    ebx
10014628:	leave  
10014629:	ret    0x4
1001462c:	mov    eax,0x80004001
10014631:	ret    0xc
10014634:	xor    eax,eax
10014636:	inc    eax
10014637:	ret    0x4
1001463a:	push   esi
1001463b:	lea    esi,[ecx+0x4]
1001463e:	mov    eax,esi
10014640:	mov    DWORD PTR [ecx],0x1006e904
10014646:	call   0x100144e1
1001464b:	mov    eax,esi
1001464d:	call   0x100144e1
10014652:	call   0x1001751b
10014657:	pop    esi
10014658:	ret    
10014659:	push   esi
1001465a:	mov    esi,ecx
1001465c:	call   0x1001463a
10014661:	test   BYTE PTR [esp+0x8],0x1
10014666:	je     0x1001466f
10014668:	push   esi
10014669:	call   0x10041d92
1001466e:	pop    ecx
1001466f:	mov    eax,esi
10014671:	pop    esi
10014672:	ret    0x4
10014675:	push   0x4
10014677:	mov    eax,0x1005fb1a
1001467c:	call   0x10058845
10014681:	cmp    DWORD PTR [ebp+0xc],0x0
10014685:	je     0x100146bd
10014687:	cmp    DWORD PTR [ebp+0x10],0x0
1001468b:	je     0x100146bd
1001468d:	call   DWORD PTR ds:0x1007dfe4
10014693:	and    DWORD PTR [ebp-0x10],0x0
10014697:	push   DWORD PTR [ebp+0x10]
1001469a:	mov    eax,DWORD PTR [ebp+0x8]
1001469d:	push   DWORD PTR [ebp+0xc]
100146a0:	and    DWORD PTR [ebp-0x4],0x0
100146a4:	add    eax,0x4
100146a7:	push   eax
100146a8:	call   0x100143be
100146ad:	neg    eax
100146af:	sbb    eax,eax
100146b1:	and    eax,0x7ff8fff2
100146b6:	add    eax,0x8007000e
100146bb:	jmp    0x100146c2
100146bd:	mov    eax,0x80070057
100146c2:	call   0x1005891d
100146c7:	ret    0xc
100146ca:	push   ebp
100146cb:	sub    esp,0x404
100146d1:	lea    ebp,[esp-0x4]
100146d5:	mov    eax,ds:0x1007d030
100146da:	xor    eax,ebp
100146dc:	mov    DWORD PTR [ebp+0x404],eax
100146e2:	push   0x1c
100146e4:	mov    eax,0x100617eb
100146e9:	call   0x10058878
100146ee:	mov    eax,DWORD PTR [ebp+0x414]
100146f4:	mov    edi,ecx
100146f6:	mov    ebx,edx
100146f8:	mov    DWORD PTR [ebp-0x14],eax
100146fb:	call   DWORD PTR ds:0x1007dfe4
10014701:	xor    esi,esi
10014703:	mov    DWORD PTR [ebp-0x28],esi
10014706:	mov    eax,DWORD PTR [ebp+0x410]
1001470c:	mov    DWORD PTR [ebp-0x4],esi
1001470f:	mov    DWORD PTR [ebp-0x20],eax
10014712:	mov    DWORD PTR [ebp-0x24],esi
10014715:	mov    DWORD PTR [ebp+0x0],esi
10014718:	push   0x2
1001471a:	push   esi
1001471b:	push   edi
1001471c:	mov    BYTE PTR [ebp-0x4],0x1
10014720:	call   DWORD PTR ds:0x10065100
10014726:	cmp    eax,esi
10014728:	mov    DWORD PTR [ebp-0x18],eax
1001472b:	jne    0x10014739
1001472d:	call   0x10006125
10014732:	mov    esi,eax
10014734:	jmp    0x1001481d
10014739:	push   DWORD PTR [ebp-0x14]
1001473c:	push   ebx
1001473d:	push   eax
1001473e:	call   DWORD PTR ds:0x1006507c
10014744:	mov    edi,eax
10014746:	cmp    edi,esi
10014748:	jne    0x10014754
1001474a:	call   0x10006125
1001474f:	jmp    0x10014812
10014754:	push   edi
10014755:	push   DWORD PTR [ebp-0x18]
10014758:	call   DWORD PTR ds:0x10065080
1001475e:	cmp    eax,esi
10014760:	mov    DWORD PTR [ebp-0x1c],eax
10014763:	je     0x1001474a
10014765:	push   edi
10014766:	push   DWORD PTR [ebp-0x18]
10014769:	call   DWORD PTR ds:0x10065088
1001476f:	mov    edi,eax
10014771:	lea    eax,[edi+0x1]
10014774:	cmp    eax,edi
10014776:	mov    DWORD PTR [ebp-0x14],edi
10014779:	jae    0x10014795
1001477b:	lea    eax,[ebp+0x4]
1001477e:	cmp    DWORD PTR [ebp+0x0],eax
10014781:	je     0x1001478b
10014783:	lea    eax,[ebp+0x0]
10014786:	call   0x10017705
1001478b:	mov    eax,0x8007000e
10014790:	jmp    0x1001482f
10014795:	push   0x2
10014797:	push   eax
10014798:	mov    BYTE PTR [ebp-0x4],0x2
1001479c:	call   0x10017db4
100147a1:	cmp    eax,0x400
100147a6:	pop    ecx
100147a7:	pop    ecx
100147a8:	jbe    0x100147b6
100147aa:	push   eax
100147ab:	lea    eax,[ebp+0x0]
100147ae:	push   eax
100147af:	call   0x100179c5
100147b4:	jmp    0x100147bc
100147b6:	lea    eax,[ebp+0x4]
100147b9:	mov    DWORD PTR [ebp+0x0],eax
100147bc:	mov    DWORD PTR [ebp-0x4],0x1
100147c3:	jmp    0x100147d0
100147c5:	mov    eax,0x100147cb
100147ca:	ret    
100147cb:	mov    edi,DWORD PTR [ebp-0x14]
100147ce:	xor    esi,esi
100147d0:	mov    ebx,DWORD PTR [ebp+0x0]
100147d3:	cmp    ebx,esi
100147d5:	jne    0x100147de
100147d7:	mov    esi,0x8007000e
100147dc:	jmp    0x10014814
100147de:	call   DWORD PTR ds:0x1007dfe4
100147e4:	push   edi
100147e5:	push   ebx
100147e6:	push   edi
100147e7:	push   DWORD PTR [ebp-0x1c]
100147ea:	push   esi
100147eb:	push   eax
100147ec:	call   DWORD PTR ds:0x1006508c
100147f2:	cmp    eax,esi
100147f4:	je     0x1001474a
100147fa:	mov    ecx,DWORD PTR [ebp+0x0]
100147fd:	push   DWORD PTR [ebp+0x418]
10014803:	mov    WORD PTR [ecx+eax*2],si
10014807:	push   DWORD PTR [ebp+0x0]
1001480a:	lea    ecx,[ebp-0x24]
1001480d:	call   0x10015020
10014812:	mov    esi,eax
10014814:	push   DWORD PTR [ebp-0x18]
10014817:	call   DWORD PTR ds:0x100650fc
1001481d:	lea    eax,[ebp+0x4]
10014820:	cmp    DWORD PTR [ebp+0x0],eax
10014823:	je     0x1001482d
10014825:	lea    eax,[ebp+0x0]
10014828:	call   0x10017705
1001482d:	mov    eax,esi
1001482f:	mov    ecx,DWORD PTR [ebp-0xc]
10014832:	mov    DWORD PTR fs:0x0,ecx
10014839:	pop    ecx
1001483a:	pop    edi
1001483b:	pop    esi
1001483c:	pop    ebx
1001483d:	mov    ecx,DWORD PTR [ebp+0x404]
10014843:	xor    ecx,ebp
10014845:	call   0x10041d97
1001484a:	add    ebp,0x408
10014850:	leave  
10014851:	ret    0xc
10014854:	mov    eax,DWORD PTR [esp+0x4]
10014858:	add    eax,0x4
1001485b:	call   0x100144e1
10014860:	ret    0x4
10014863:	push   esi
10014864:	mov    esi,eax
10014866:	push   edi
10014867:	add    esi,0x4
1001486a:	xor    edi,edi
1001486c:	cmp    DWORD PTR [esi+0x8],edi
1001486f:	jle    0x1001488b
10014871:	mov    eax,DWORD PTR [esi]
10014873:	push   DWORD PTR [esp+0xc]
10014877:	mov    eax,DWORD PTR [eax+edi*4]
1001487a:	push   eax
1001487b:	call   DWORD PTR ds:0x10065134
10014881:	test   eax,eax
10014883:	je     0x10014897
10014885:	inc    edi
10014886:	cmp    edi,DWORD PTR [esi+0x8]
10014889:	jl     0x10014871
1001488b:	or     eax,0xffffffff
1001488e:	cmp    eax,0xffffffff
10014891:	jne    0x1001489b
10014893:	xor    eax,eax
10014895:	jmp    0x100148a4
10014897:	mov    eax,edi
10014899:	jmp    0x1001488e
1001489b:	mov    ecx,esi
1001489d:	call   0x10017542
100148a2:	mov    eax,DWORD PTR [eax]
100148a4:	pop    edi
100148a5:	pop    esi
100148a6:	ret    0x4
100148a9:	test   BYTE PTR ds:0x1007ff90,0x1
100148b0:	jne    0x10014905
100148b2:	or     DWORD PTR ds:0x1007ff90,0x1
100148b9:	mov    DWORD PTR ds:0x1007ff94,0x1006ba9c
100148c3:	mov    WORD PTR ds:0x1007ff98,0x8
100148cc:	mov    DWORD PTR ds:0x1007ff9c,0x1006ba98
100148d6:	mov    WORD PTR ds:0x1007ffa0,0x4008
100148df:	mov    DWORD PTR ds:0x1007ffa4,0x1006ba94
100148e9:	mov    WORD PTR ds:0x1007ffa8,0x13
100148f2:	mov    DWORD PTR ds:0x1007ffac,0x1006ba90
100148fc:	mov    WORD PTR ds:0x1007ffb0,0x11
10014905:	push   esi
10014906:	xor    esi,esi
10014908:	push   DWORD PTR [esi*8+0x1007ff94]
1001490f:	push   DWORD PTR [esp+0xc]
10014913:	call   DWORD PTR ds:0x10065134
10014919:	test   eax,eax
1001491b:	je     0x10014927
1001491d:	inc    esi
1001491e:	cmp    esi,0x4
10014921:	jl     0x10014908
10014923:	xor    eax,eax
10014925:	pop    esi
10014926:	ret    
10014927:	mov    ax,WORD PTR [esi*8+0x1007ff98]
1001492f:	mov    ecx,DWORD PTR [esp+0xc]
10014933:	mov    WORD PTR [ecx],ax
10014936:	xor    eax,eax
10014938:	inc    eax
10014939:	pop    esi
1001493a:	ret    
1001493b:	push   esi
1001493c:	xor    esi,esi
1001493e:	test   eax,eax
10014940:	jne    0x10014952
10014942:	pop    esi
10014943:	ret    
10014944:	cmp    cx,WORD PTR [esp+0x8]
10014949:	je     0x1001495c
1001494b:	push   eax
1001494c:	call   DWORD PTR ds:0x10065350
10014952:	movzx  ecx,WORD PTR [eax]
10014955:	test   cx,cx
10014958:	jne    0x10014944
1001495a:	jmp    0x1001495e
1001495c:	mov    esi,eax
1001495e:	mov    eax,esi
10014960:	pop    esi
10014961:	ret    
10014962:	mov    eax,DWORD PTR [esi]
10014964:	movzx  ecx,WORD PTR [eax]
10014967:	cmp    ecx,0x9
1001496a:	jl     0x10014986
1001496c:	cmp    ecx,0xa
1001496f:	jle    0x1001497b
10014971:	cmp    ecx,0xd
10014974:	je     0x1001497b
10014976:	cmp    ecx,0x20
10014979:	jne    0x10014986
1001497b:	push   eax
1001497c:	call   DWORD PTR ds:0x10065350
10014982:	mov    DWORD PTR [esi],eax
10014984:	jmp    0x10014962
10014986:	ret    
10014987:	push   ebp
10014988:	mov    ebp,esp
1001498a:	push   ecx
1001498b:	push   ecx
1001498c:	push   ebx
1001498d:	push   esi
1001498e:	mov    esi,ecx
10014990:	mov    ebx,eax
10014992:	call   0x10014962
10014997:	mov    eax,DWORD PTR [esi]
10014999:	movzx  ecx,WORD PTR [eax]
1001499c:	test   cx,cx
1001499f:	jne    0x100149ab
100149a1:	mov    eax,0x80020009
100149a6:	jmp    0x10014a8d
100149ab:	cmp    cx,0x27
100149af:	push   edi
100149b0:	mov    DWORD PTR [ebp-0x8],ebx
100149b3:	jne    0x10014a34
100149b5:	mov    edi,DWORD PTR ds:0x10065350
100149bb:	push   eax
100149bc:	call   edi
100149be:	mov    DWORD PTR [esi],eax
100149c0:	jmp    0x10014a1a
100149c2:	mov    eax,DWORD PTR [esi]
100149c4:	cmp    WORD PTR [eax],0x27
100149c8:	jne    0x100149d3
100149ca:	push   eax
100149cb:	call   edi
100149cd:	cmp    WORD PTR [eax],0x27
100149d1:	jne    0x10014a20
100149d3:	mov    eax,DWORD PTR [esi]
100149d5:	cmp    WORD PTR [eax],0x27
100149d9:	jne    0x100149e0
100149db:	push   eax
100149dc:	call   edi
100149de:	mov    DWORD PTR [esi],eax
100149e0:	mov    eax,DWORD PTR [esi]
100149e2:	push   eax
100149e3:	mov    DWORD PTR [ebp-0x4],eax
100149e6:	call   edi
100149e8:	mov    edx,DWORD PTR [ebp-0x8]
100149eb:	mov    DWORD PTR [esi],eax
100149ed:	sub    eax,DWORD PTR [ebp-0x4]
100149f0:	add    edx,0x2000
100149f6:	sar    eax,1
100149f8:	lea    ecx,[ebx+eax*2+0x2]
100149fc:	cmp    ecx,edx
100149fe:	jae    0x10014a91
10014a04:	test   eax,eax
10014a06:	jle    0x10014a18
10014a08:	mov    ecx,DWORD PTR [ebp-0x4]
10014a0b:	mov    dx,WORD PTR [ecx]
10014a0e:	mov    WORD PTR [ebx],dx
10014a11:	inc    ebx
10014a12:	inc    ebx
10014a13:	inc    ecx
10014a14:	inc    ecx
10014a15:	dec    eax
10014a16:	jne    0x10014a0b
10014a18:	mov    eax,DWORD PTR [esi]
10014a1a:	cmp    WORD PTR [eax],0x0
10014a1e:	jne    0x100149c2
10014a20:	mov    eax,DWORD PTR [esi]
10014a22:	cmp    WORD PTR [eax],0x0
10014a26:	je     0x10014a91
10014a28:	and    WORD PTR [ebx],0x0
10014a2c:	push   DWORD PTR [esi]
10014a2e:	call   edi
10014a30:	mov    DWORD PTR [esi],eax
10014a32:	jmp    0x10014a8a
10014a34:	mov    eax,DWORD PTR [esi]
10014a36:	movzx  ecx,WORD PTR [eax]
10014a39:	cmp    ecx,0x9
10014a3c:	jl     0x10014a4d
10014a3e:	cmp    ecx,0xa
10014a41:	jle    0x10014a86
10014a43:	cmp    ecx,0xd
10014a46:	je     0x10014a86
10014a48:	cmp    ecx,0x20
10014a4b:	je     0x10014a86
10014a4d:	push   eax
10014a4e:	mov    edi,eax
10014a50:	call   DWORD PTR ds:0x10065350
10014a56:	mov    edx,DWORD PTR [ebp-0x8]
10014a59:	mov    DWORD PTR [esi],eax
10014a5b:	sub    eax,edi
10014a5d:	sar    eax,1
10014a5f:	lea    ecx,[ebx+eax*2+0x2]
10014a63:	add    edx,0x2000
10014a69:	cmp    ecx,edx
10014a6b:	jae    0x10014a91
10014a6d:	test   eax,eax
10014a6f:	jle    0x10014a7e
10014a71:	mov    cx,WORD PTR [edi]
10014a74:	mov    WORD PTR [ebx],cx
10014a77:	inc    ebx
10014a78:	inc    ebx
10014a79:	inc    edi
10014a7a:	inc    edi
10014a7b:	dec    eax
10014a7c:	jne    0x10014a71
10014a7e:	mov    eax,DWORD PTR [esi]
10014a80:	cmp    WORD PTR [eax],0x0
10014a84:	jne    0x10014a34
10014a86:	and    WORD PTR [ebx],0x0
10014a8a:	xor    eax,eax
10014a8c:	pop    edi
10014a8d:	pop    esi
10014a8e:	pop    ebx
10014a8f:	leave  
10014a90:	ret    
10014a91:	mov    eax,0x80020009
10014a96:	jmp    0x10014a8c
10014a98:	push   ebp
10014a99:	lea    ebp,[esp-0x2108]
10014aa0:	mov    eax,0x2108
10014aa5:	call   0x10047700
10014aaa:	push   0xffffffff
10014aac:	push   0x1005e95a
10014ab1:	mov    eax,fs:0x0
10014ab7:	push   eax
10014ab8:	sub    esp,0x1c
10014abb:	mov    eax,ds:0x1007d030
10014ac0:	xor    eax,ebp
10014ac2:	mov    DWORD PTR [ebp+0x2104],eax
10014ac8:	push   ebx
10014ac9:	push   esi
10014aca:	push   edi
10014acb:	push   eax
10014acc:	lea    eax,[ebp-0xc]
10014acf:	mov    fs:0x0,eax
10014ad5:	mov    DWORD PTR [ebp-0x10],esp
10014ad8:	mov    eax,DWORD PTR [ebp+0x2110]
10014ade:	mov    DWORD PTR [ebp-0x1c],eax
10014ae1:	mov    eax,DWORD PTR [ebp+0x2114]
10014ae7:	mov    esi,ecx
10014ae9:	mov    edi,edx
10014aeb:	mov    DWORD PTR [ebp-0x28],eax
10014aee:	xor    ebx,ebx
10014af0:	lea    eax,[ebp+0x104]
10014af6:	mov    DWORD PTR [ebp-0x24],esi
10014af9:	mov    DWORD PTR [ebp-0x20],edi
10014afc:	mov    DWORD PTR [ebp-0x14],ebx
10014aff:	call   0x10014987
10014b04:	cmp    eax,ebx
10014b06:	jl     0x10014dc1
10014b0c:	lea    eax,[ebp-0x14]
10014b0f:	push   eax
10014b10:	lea    eax,[ebp+0x104]
10014b16:	push   eax
10014b17:	call   0x100148a9
10014b1c:	test   eax,eax
10014b1e:	pop    ecx
10014b1f:	pop    ecx
10014b20:	jne    0x10014b2c
10014b22:	mov    eax,0x80020009
10014b27:	jmp    0x10014dc1
10014b2c:	call   0x10014962
10014b31:	lea    eax,[ebp+0x104]
10014b37:	mov    ecx,esi
10014b39:	call   0x10014987
10014b3e:	cmp    eax,ebx
10014b40:	jl     0x10014dc1
10014b46:	movzx  eax,WORD PTR [ebp-0x14]
10014b4a:	sub    eax,0x8
10014b4d:	je     0x10014d7a
10014b53:	sub    eax,0x9
10014b56:	je     0x10014c60
10014b5c:	dec    eax
10014b5d:	dec    eax
10014b5e:	je     0x10014c34
10014b64:	sub    eax,0x3ff5
10014b69:	jne    0x10014db0
10014b6f:	lea    eax,[ebp+0x104]
10014b75:	push   eax
10014b76:	call   DWORD PTR ds:0x100650e0
10014b7c:	inc    eax
10014b7d:	inc    eax
10014b7e:	mov    DWORD PTR [ebp+0x0],ebx
10014b81:	push   0x2
10014b83:	mov    DWORD PTR [ebp-0x4],ebx
10014b86:	push   eax
10014b87:	mov    BYTE PTR [ebp-0x4],0x1
10014b8b:	call   0x10017db4
10014b90:	cmp    eax,0x100
10014b95:	pop    ecx
10014b96:	pop    ecx
10014b97:	jbe    0x10014ba5
10014b99:	push   eax
10014b9a:	lea    eax,[ebp+0x0]
10014b9d:	push   eax
10014b9e:	call   0x100179c5
10014ba3:	jmp    0x10014bb5
10014ba5:	lea    eax,[ebp+0x4]
10014ba8:	mov    DWORD PTR [ebp+0x0],eax
10014bab:	jmp    0x10014bb5
10014bad:	mov    eax,0x10014bb3
10014bb2:	ret    
10014bb3:	xor    ebx,ebx
10014bb5:	mov    esi,DWORD PTR [ebp+0x0]
10014bb8:	cmp    esi,ebx
10014bba:	je     0x10014c18
10014bbc:	cmp    WORD PTR [ebp+0x104],bx
10014bc3:	lea    edi,[ebp+0x104]
10014bc9:	je     0x10014bff
10014bcb:	mov    ebx,DWORD PTR ds:0x10065350
10014bd1:	push   edi
10014bd2:	call   ebx
10014bd4:	movzx  ecx,WORD PTR [edi]
10014bd7:	cmp    cx,0x5c
10014bdb:	jne    0x10014bf0
10014bdd:	cmp    WORD PTR [eax],0x30
10014be1:	jne    0x10014bf0
10014be3:	and    WORD PTR [esi],0x0
10014be7:	inc    esi
10014be8:	push   eax
10014be9:	inc    esi
10014bea:	call   ebx
10014bec:	mov    edi,eax
10014bee:	jmp    0x10014bf7
10014bf0:	mov    WORD PTR [esi],cx
10014bf3:	inc    esi
10014bf4:	inc    esi
10014bf5:	inc    edi
10014bf6:	inc    edi
10014bf7:	cmp    WORD PTR [edi],0x0
10014bfb:	jne    0x10014bd1
10014bfd:	xor    ebx,ebx
10014bff:	mov    WORD PTR [esi],bx
10014c02:	mov    WORD PTR [esi+0x2],bx
10014c06:	push   DWORD PTR [ebp+0x0]
10014c09:	push   DWORD PTR [ebp-0x1c]
10014c0c:	push   DWORD PTR [ebp-0x20]
10014c0f:	call   0x1001421c
10014c14:	mov    esi,eax
10014c16:	jmp    0x10014c1b
10014c18:	push   0xe
10014c1a:	pop    esi
10014c1b:	lea    eax,[ebp+0x4]
10014c1e:	cmp    DWORD PTR [ebp+0x0],eax
10014c21:	je     0x10014da3
10014c27:	lea    eax,[ebp+0x0]
10014c2a:	call   0x10017705
10014c2f:	jmp    0x10014da3
10014c34:	call   DWORD PTR ds:0x1007dfe4
10014c3a:	lea    eax,[ebp-0x18]
10014c3d:	push   eax
10014c3e:	push   ebx
10014c3f:	push   ebx
10014c40:	lea    eax,[ebp+0x104]
10014c46:	push   eax
10014c47:	call   DWORD PTR ds:0x10065298
10014c4d:	mov    eax,DWORD PTR [ebp-0x18]
10014c50:	mov    DWORD PTR [ebp-0x14],eax
10014c53:	push   0x4
10014c55:	lea    eax,[ebp-0x14]
10014c58:	push   eax
10014c59:	push   0x4
10014c5b:	jmp    0x10014d95
10014c60:	lea    eax,[ebp+0x104]
10014c66:	push   eax
10014c67:	call   DWORD PTR ds:0x100650e0
10014c6d:	test   al,0x1
10014c6f:	mov    DWORD PTR [ebp-0x14],eax
10014c72:	je     0x10014c7e
10014c74:	mov    eax,0x80004005
10014c79:	jmp    0x10014dc1
10014c7e:	cdq    
10014c7f:	sub    eax,edx
10014c81:	mov    esi,eax
10014c83:	sar    esi,1
10014c85:	mov    DWORD PTR [ebp-0x18],esi
10014c88:	mov    DWORD PTR [ebp+0x0],ebx
10014c8b:	push   0x1
10014c8d:	mov    DWORD PTR [ebp-0x4],0x3
10014c94:	push   esi
10014c95:	mov    BYTE PTR [ebp-0x4],0x4
10014c99:	call   0x10017db4
10014c9e:	cmp    eax,0x100
10014ca3:	pop    ecx
10014ca4:	pop    ecx
10014ca5:	jbe    0x10014cb3
10014ca7:	push   eax
10014ca8:	lea    eax,[ebp+0x0]
10014cab:	push   eax
10014cac:	call   0x100179c5
10014cb1:	jmp    0x10014cc9
10014cb3:	lea    eax,[ebp+0x4]
10014cb6:	mov    DWORD PTR [ebp+0x0],eax
10014cb9:	jmp    0x10014cc9
10014cbb:	mov    eax,0x10014cc1
10014cc0:	ret    
10014cc1:	mov    edi,DWORD PTR [ebp-0x20]
10014cc4:	mov    esi,DWORD PTR [ebp-0x18]
10014cc7:	xor    ebx,ebx
10014cc9:	cmp    DWORD PTR [ebp+0x0],ebx
10014ccc:	jne    0x10014cdf
10014cce:	lea    eax,[ebp+0x4]
10014cd1:	test   eax,eax
10014cd3:	je     0x10014c74
10014cd5:	lea    eax,[ebp+0x0]
10014cd8:	call   0x10017705
10014cdd:	jmp    0x10014c74
10014cdf:	push   esi
10014ce0:	push   ebx
10014ce1:	push   DWORD PTR [ebp+0x0]
10014ce4:	call   0x10044950
10014ce9:	add    esp,0xc
10014cec:	xor    esi,esi
10014cee:	cmp    DWORD PTR [ebp-0x14],ebx
10014cf1:	jle    0x10014d51
10014cf3:	movzx  ecx,WORD PTR [ebp+esi*2+0x104]
10014cfb:	mov    eax,esi
10014cfd:	cdq    
10014cfe:	sub    eax,edx
10014d00:	sar    eax,1
10014d02:	add    eax,DWORD PTR [ebp+0x0]
10014d05:	movzx  edx,cx
10014d08:	cmp    edx,0x30
10014d0b:	jl     0x10014d35
10014d0d:	cmp    edx,0x39
10014d10:	jle    0x10014d2e
10014d12:	cmp    edx,0x40
10014d15:	jle    0x10014d35
10014d17:	cmp    edx,0x46
10014d1a:	jle    0x10014d29
10014d1c:	add    edx,0xffffff9f
10014d1f:	cmp    edx,0x5
10014d22:	ja     0x10014d35
10014d24:	sub    cl,0x57
10014d27:	jmp    0x10014d31
10014d29:	sub    cl,0x37
10014d2c:	jmp    0x10014d31
10014d2e:	sub    cl,0x30
10014d31:	mov    dl,cl
10014d33:	jmp    0x10014d37
10014d35:	xor    dl,dl
10014d37:	mov    edi,esi
10014d39:	and    edi,0x1
10014d3c:	shl    edi,0x2
10014d3f:	push   0x4
10014d41:	pop    ecx
10014d42:	sub    ecx,edi
10014d44:	shl    dl,cl
10014d46:	or     BYTE PTR [eax],dl
10014d48:	inc    esi
10014d49:	cmp    esi,DWORD PTR [ebp-0x14]
10014d4c:	jl     0x10014cf3
10014d4e:	mov    edi,DWORD PTR [ebp-0x20]
10014d51:	push   DWORD PTR [ebp-0x18]
10014d54:	mov    eax,DWORD PTR [edi]
10014d56:	push   DWORD PTR [ebp+0x0]
10014d59:	push   0x3
10014d5b:	push   ebx
10014d5c:	push   DWORD PTR [ebp-0x1c]
10014d5f:	push   eax
10014d60:	call   DWORD PTR ds:0x10065020
10014d66:	mov    esi,eax
10014d68:	lea    eax,[ebp+0x4]
10014d6b:	cmp    DWORD PTR [ebp+0x0],eax
10014d6e:	je     0x10014da3
10014d70:	lea    eax,[ebp+0x0]
10014d73:	call   0x10017705
10014d78:	jmp    0x10014da3
10014d7a:	lea    eax,[ebp+0x104]
10014d80:	push   eax
10014d81:	call   DWORD PTR ds:0x100650e0
10014d87:	lea    eax,[eax+eax*1+0x2]
10014d8b:	push   eax
10014d8c:	lea    eax,[ebp+0x104]
10014d92:	push   eax
10014d93:	push   0x1
10014d95:	push   ebx
10014d96:	push   DWORD PTR [ebp-0x1c]
10014d99:	push   DWORD PTR [edi]
10014d9b:	call   DWORD PTR ds:0x10065020
10014da1:	mov    esi,eax
10014da3:	cmp    esi,ebx
10014da5:	je     0x10014db0
10014da7:	mov    eax,esi
10014da9:	call   0x100140a2
10014dae:	jmp    0x10014dc1
10014db0:	mov    eax,DWORD PTR [ebp-0x28]
10014db3:	mov    ecx,DWORD PTR [ebp-0x24]
10014db6:	call   0x10014987
10014dbb:	cmp    eax,ebx
10014dbd:	jl     0x10014dc1
10014dbf:	xor    eax,eax
10014dc1:	mov    ecx,DWORD PTR [ebp-0xc]
10014dc4:	mov    DWORD PTR fs:0x0,ecx
10014dcb:	pop    ecx
10014dcc:	pop    edi
10014dcd:	pop    esi
10014dce:	pop    ebx
10014dcf:	mov    ecx,DWORD PTR [ebp+0x2104]
10014dd5:	xor    ecx,ebp
10014dd7:	call   0x10041d97
10014ddc:	add    ebp,0x2108
10014de2:	leave  
10014de3:	ret    0x8
10014de6:	push   esi
10014de7:	mov    esi,0x1006bac8
10014dec:	push   DWORD PTR [esi]
10014dee:	push   DWORD PTR [esp+0xc]
10014df2:	call   DWORD PTR ds:0x10065134
10014df8:	test   eax,eax
10014dfa:	je     0x10014e0e
10014dfc:	add    esi,0x4
10014dff:	cmp    esi,0x1006baf8
10014e05:	jl     0x10014dec
10014e07:	xor    eax,eax
10014e09:	inc    eax
10014e0a:	pop    esi
10014e0b:	ret    0x4
10014e0e:	xor    eax,eax
10014e10:	jmp    0x10014e0a
10014e12:	push   ebp
10014e13:	mov    ebp,esp
10014e15:	push   ecx
10014e16:	xor    eax,eax
10014e18:	push   eax
10014e19:	push   eax
10014e1a:	push   eax
10014e1b:	push   eax
10014e1c:	push   eax
10014e1d:	push   eax
10014e1e:	push   eax
10014e1f:	lea    ecx,[ebp-0x4]
10014e22:	push   ecx
10014e23:	push   eax
10014e24:	push   eax
10014e25:	push   eax
10014e26:	push   DWORD PTR [ebp+0x8]
10014e29:	mov    DWORD PTR [ebp-0x4],eax
10014e2c:	call   DWORD PTR ds:0x10065008
10014e32:	test   eax,eax
10014e34:	je     0x10014e3a
10014e36:	xor    eax,eax
10014e38:	jmp    0x10014e43
10014e3a:	xor    eax,eax
10014e3c:	cmp    eax,DWORD PTR [ebp-0x4]
10014e3f:	sbb    eax,eax
10014e41:	neg    eax
10014e43:	leave  
10014e44:	ret    0x4
10014e47:	mov    eax,0x2004
10014e4c:	call   0x10047700
10014e51:	mov    eax,ds:0x1007d030
10014e56:	xor    eax,esp
10014e58:	mov    DWORD PTR [esp+0x2000],eax
10014e5f:	cmp    WORD PTR [edi],0x3d
10014e63:	push   esi
10014e64:	mov    esi,ecx
10014e66:	jne    0x10014e94
10014e68:	mov    eax,edi
10014e6a:	call   0x10014987
10014e6f:	test   eax,eax
10014e71:	jl     0x10014e96
10014e73:	call   0x10014962
10014e78:	lea    eax,[esp+0x4]
10014e7c:	mov    ecx,esi
10014e7e:	call   0x10014987
10014e83:	test   eax,eax
10014e85:	jl     0x10014e96
10014e87:	mov    eax,edi
10014e89:	mov    ecx,esi
10014e8b:	call   0x10014987
10014e90:	test   eax,eax
10014e92:	jl     0x10014e96
10014e94:	xor    eax,eax
10014e96:	mov    ecx,DWORD PTR [esp+0x2004]
10014e9d:	pop    esi
10014e9e:	xor    ecx,esp
10014ea0:	call   0x10041d97
10014ea5:	add    esp,0x2004
10014eab:	ret    
10014eac:	push   0x60
10014eae:	mov    eax,0x10060c54
10014eb3:	call   0x100588ae
10014eb8:	mov    eax,DWORD PTR [ebp+0x8]
10014ebb:	test   eax,eax
10014ebd:	mov    edi,ecx
10014ebf:	mov    DWORD PTR [ebp-0x54],eax
10014ec2:	mov    DWORD PTR [ebp-0x64],edi
10014ec5:	je     0x10015013
10014ecb:	test   edi,edi
10014ecd:	je     0x10015013
10014ed3:	and    DWORD PTR [edi],0x0
10014ed6:	push   eax
10014ed7:	call   DWORD PTR ds:0x100650e0
10014edd:	add    eax,eax
10014edf:	lea    esi,[ebp-0x60]
10014ee2:	call   0x10014536
10014ee7:	xor    ecx,ecx
10014ee9:	mov    DWORD PTR [ebp-0x4],ecx
10014eec:	cmp    DWORD PTR [ebp-0x58],ecx
10014eef:	jne    0x10014f02
10014ef1:	push   ecx
10014ef2:	call   DWORD PTR ds:0x10065428
10014ef8:	mov    eax,0x8007000e
10014efd:	jmp    0x10015018
10014f02:	mov    eax,DWORD PTR [ebp-0x54]
10014f05:	mov    DWORD PTR [ebx],eax
10014f07:	cmp    WORD PTR [eax],cx
10014f0a:	mov    DWORD PTR [ebp-0x54],ecx
10014f0d:	je     0x10014f4d
10014f0f:	mov    eax,DWORD PTR [ebx]
10014f11:	cmp    WORD PTR [eax],0x25
10014f15:	push   eax
10014f16:	jne    0x10014f27
10014f18:	call   DWORD PTR ds:0x10065350
10014f1e:	mov    DWORD PTR [ebx],eax
10014f20:	cmp    WORD PTR [eax],0x25
10014f24:	jne    0x10014f67
10014f26:	push   eax
10014f27:	xor    edi,edi
10014f29:	inc    edi
10014f2a:	lea    esi,[ebp-0x60]
10014f2d:	call   0x10014587
10014f32:	test   eax,eax
10014f34:	je     0x10015007
10014f3a:	push   DWORD PTR [ebx]
10014f3c:	call   DWORD PTR ds:0x10065350
10014f42:	mov    DWORD PTR [ebx],eax
10014f44:	cmp    WORD PTR [eax],0x0
10014f48:	jne    0x10014f0f
10014f4a:	mov    edi,DWORD PTR [ebp-0x64]
10014f4d:	mov    eax,DWORD PTR [ebp-0x58]
10014f50:	and    DWORD PTR [ebp-0x58],0x0
10014f54:	mov    DWORD PTR [edi],eax
10014f56:	push   DWORD PTR [ebp-0x58]
10014f59:	call   DWORD PTR ds:0x10065428
10014f5f:	mov    eax,DWORD PTR [ebp-0x54]
10014f62:	jmp    0x10015018
10014f67:	push   0x25
10014f69:	call   0x1001493b
10014f6e:	test   eax,eax
10014f70:	pop    ecx
10014f71:	mov    DWORD PTR [ebp-0x68],eax
10014f74:	je     0x10014fef
10014f76:	mov    ecx,DWORD PTR [ebx]
10014f78:	sub    eax,ecx
10014f7a:	sar    eax,1
10014f7c:	cmp    eax,0x1f
10014f7f:	jg     0x10014ffb
10014f81:	push   eax
10014f82:	push   ecx
10014f83:	lea    eax,[ebp-0x50]
10014f86:	push   0x20
10014f88:	push   eax
10014f89:	call   0x10044bad
10014f8e:	push   eax
10014f8f:	call   0x10001f59
10014f94:	add    esp,0x14
10014f97:	lea    eax,[ebp-0x50]
10014f9a:	push   eax
10014f9b:	mov    eax,DWORD PTR [ebx+0x4]
10014f9e:	call   0x10014863
10014fa3:	mov    esi,eax
10014fa5:	test   esi,esi
10014fa7:	je     0x10014fef
10014fa9:	call   DWORD PTR ds:0x1007dfe4
10014faf:	and    DWORD PTR [ebp-0x6c],0x0
10014fb3:	push   esi
10014fb4:	mov    BYTE PTR [ebp-0x4],0x1
10014fb8:	call   DWORD PTR ds:0x100650e0
10014fbe:	push   esi
10014fbf:	mov    edi,eax
10014fc1:	lea    esi,[ebp-0x60]
10014fc4:	call   0x10014587
10014fc9:	test   eax,eax
10014fcb:	mov    BYTE PTR [ebp-0x4],0x0
10014fcf:	je     0x10015007
10014fd1:	mov    esi,DWORD PTR [ebp-0x68]
10014fd4:	cmp    DWORD PTR [ebx],esi
10014fd6:	je     0x10014f3a
10014fdc:	push   DWORD PTR [ebx]
10014fde:	call   DWORD PTR ds:0x10065350
10014fe4:	cmp    eax,esi
10014fe6:	mov    DWORD PTR [ebx],eax
10014fe8:	jne    0x10014fdc
10014fea:	jmp    0x10014f3a
10014fef:	mov    DWORD PTR [ebp-0x54],0x80020009
10014ff6:	jmp    0x10014f56
10014ffb:	mov    DWORD PTR [ebp-0x54],0x80004005
10015002:	jmp    0x10014f56
10015007:	mov    DWORD PTR [ebp-0x54],0x8007000e
1001500e:	jmp    0x10014f56
10015013:	mov    eax,0x80004003
10015018:	call   0x10058931
1001501d:	ret    0x4
10015020:	push   ebp
10015021:	lea    ebp,[esp-0x1f8c]
10015028:	mov    eax,0x200c
1001502d:	call   0x10047700
10015032:	mov    eax,ds:0x1007d030
10015037:	xor    eax,ebp
10015039:	mov    DWORD PTR [ebp+0x1f88],eax
1001503f:	mov    eax,DWORD PTR [ebp+0x1f94]
10015045:	push   ebx
10015046:	push   esi
10015047:	push   edi
10015048:	mov    esi,ecx
1001504a:	xor    edi,edi
1001504c:	push   eax
1001504d:	lea    ecx,[ebp-0x80]
10015050:	mov    ebx,esi
10015052:	mov    DWORD PTR [ebp-0x80],edi
10015055:	call   0x10014eac
1001505a:	mov    ebx,eax
1001505c:	cmp    ebx,edi
1001505e:	jl     0x1001513d
10015064:	mov    eax,DWORD PTR [ebp-0x80]
10015067:	mov    DWORD PTR [esi],eax
10015069:	jmp    0x1001510c
1001506e:	lea    eax,[ebp-0x78]
10015071:	mov    ecx,esi
10015073:	call   0x10014987
10015078:	mov    ebx,eax
1001507a:	cmp    ebx,edi
1001507c:	jl     0x10015132
10015082:	xor    ebx,ebx
10015084:	push   DWORD PTR [ebx*8+0x1006e228]
1001508b:	lea    eax,[ebp-0x78]
1001508e:	push   eax
1001508f:	call   DWORD PTR ds:0x10065134
10015095:	test   eax,eax
10015097:	je     0x100150e8
10015099:	inc    ebx
1001509a:	cmp    ebx,0xe
1001509d:	jl     0x10015084
1001509f:	mov    DWORD PTR [ebp-0x7c],edi
100150a2:	cmp    DWORD PTR [ebp-0x7c],edi
100150a5:	je     0x10015117
100150a7:	lea    eax,[ebp-0x78]
100150aa:	mov    ecx,esi
100150ac:	call   0x10014987
100150b1:	mov    ebx,eax
100150b3:	cmp    ebx,edi
100150b5:	jl     0x10015132
100150b7:	cmp    WORD PTR [ebp-0x78],0x7b
100150bc:	jne    0x10015117
100150be:	cmp    DWORD PTR [ebp+0x1f98],edi
100150c4:	lea    eax,[ebp-0x78]
100150c7:	mov    ecx,esi
100150c9:	je     0x100150f4
100150cb:	mov    edi,DWORD PTR [esi]
100150cd:	push   0x0
100150cf:	push   DWORD PTR [ebp+0x1f98]
100150d5:	push   DWORD PTR [ebp-0x7c]
100150d8:	push   eax
100150d9:	call   0x10015157
100150de:	mov    ebx,eax
100150e0:	test   ebx,ebx
100150e2:	jl     0x1001511e
100150e4:	xor    edi,edi
100150e6:	jmp    0x10015105
100150e8:	mov    eax,DWORD PTR [ebx*8+0x1006e22c]
100150ef:	mov    DWORD PTR [ebp-0x7c],eax
100150f2:	jmp    0x100150a2
100150f4:	push   edi
100150f5:	push   edi
100150f6:	push   DWORD PTR [ebp-0x7c]
100150f9:	push   eax
100150fa:	call   0x10015157
100150ff:	mov    ebx,eax
10015101:	cmp    ebx,edi
10015103:	jl     0x10015132
10015105:	call   0x10014962
1001510a:	mov    eax,DWORD PTR [esi]
1001510c:	cmp    WORD PTR [eax],di
1001510f:	jne    0x1001506e
10015115:	jmp    0x10015132
10015117:	mov    ebx,0x80020009
1001511c:	jmp    0x10015132
1001511e:	push   0x0
10015120:	push   0x0
10015122:	push   DWORD PTR [ebp-0x7c]
10015125:	lea    eax,[ebp-0x78]
10015128:	push   eax
10015129:	mov    ecx,esi
1001512b:	mov    DWORD PTR [esi],edi
1001512d:	call   0x10015157
10015132:	push   DWORD PTR [ebp-0x80]
10015135:	call   DWORD PTR ds:0x10065428
1001513b:	mov    eax,ebx
1001513d:	mov    ecx,DWORD PTR [ebp+0x1f88]
10015143:	pop    edi
10015144:	pop    esi
10015145:	xor    ecx,ebp
10015147:	pop    ebx
10015148:	call   0x10041d97
1001514d:	add    ebp,0x1f8c
10015153:	leave  
10015154:	ret    0x8
10015157:	push   ebp
10015158:	mov    ebp,esp
1001515a:	and    esp,0xfffffff8
1001515d:	push   0xffffffff
1001515f:	push   0x1005f178
10015164:	mov    eax,fs:0x0
1001516a:	push   eax
1001516b:	sub    esp,0x438
10015171:	mov    eax,ds:0x1007d030
10015176:	xor    eax,esp
10015178:	mov    DWORD PTR [esp+0x430],eax
1001517f:	push   ebx
10015180:	push   esi
10015181:	push   edi
10015182:	mov    eax,ds:0x1007d030
10015187:	xor    eax,esp
10015189:	push   eax
1001518a:	lea    eax,[esp+0x448]
10015191:	mov    fs:0x0,eax
10015197:	mov    eax,DWORD PTR [ebp+0xc]
1001519a:	mov    edi,DWORD PTR [ebp+0x8]
1001519d:	and    DWORD PTR [esp+0x10],0x0
100151a2:	mov    DWORD PTR [esp+0x18],ecx
100151a6:	mov    DWORD PTR [esp+0x1c],eax
100151aa:	mov    eax,DWORD PTR [ebp+0x14]
100151ad:	and    DWORD PTR [esp+0x450],0x0
100151b5:	mov    DWORD PTR [esp+0x24],eax
100151b9:	mov    eax,edi
100151bb:	call   0x10014987
100151c0:	mov    esi,eax
100151c2:	test   esi,esi
100151c4:	jl     0x1001561c
100151ca:	cmp    WORD PTR [edi],0x7d
100151ce:	je     0x1001561a
100151d4:	mov    esi,DWORD PTR ds:0x10065134
100151da:	push   0x1006ba4c
100151df:	push   edi
100151e0:	mov    DWORD PTR [esp+0x28],0x1
100151e8:	call   esi
100151ea:	mov    ebx,eax
100151ec:	neg    ebx
100151ee:	push   0x1006ba70
100151f3:	sbb    ebx,ebx
100151f5:	push   edi
100151f6:	inc    ebx
100151f7:	call   esi
100151f9:	test   eax,eax
100151fb:	je     0x10015205
100151fd:	test   ebx,ebx
100151ff:	je     0x100152d1
10015205:	mov    ecx,DWORD PTR [esp+0x18]
10015209:	mov    eax,edi
1001520b:	call   0x10014987
10015210:	mov    esi,eax
10015212:	test   esi,esi
10015214:	jl     0x10015609
1001521a:	cmp    DWORD PTR [ebp+0x10],0x0
1001521e:	je     0x100152d1
10015224:	push   0x5c
10015226:	mov    eax,edi
10015228:	call   0x1001493b
1001522d:	test   eax,eax
1001522f:	pop    ecx
10015230:	jne    0x100156df
10015236:	push   edi
10015237:	call   0x10014de6
1001523c:	test   eax,eax
1001523e:	je     0x10015252
10015240:	mov    eax,DWORD PTR [esp+0x1c]
10015244:	push   edi
10015245:	lea    ecx,[esp+0x18]
10015249:	mov    DWORD PTR [esp+0x18],eax
1001524d:	call   0x10014266
10015252:	test   ebx,ebx
10015254:	je     0x100152d1
10015256:	mov    ecx,DWORD PTR [esp+0x18]
1001525a:	mov    eax,edi
1001525c:	call   0x10014987
10015261:	mov    esi,eax
10015263:	test   esi,esi
10015265:	jl     0x10015609
1001526b:	mov    ecx,DWORD PTR [esp+0x18]
1001526f:	call   0x10014e47
10015274:	mov    esi,eax
10015276:	test   esi,esi
10015278:	jl     0x10015609
1001527e:	cmp    WORD PTR [edi],0x7b
10015282:	jne    0x100152c2
10015284:	push   edi
10015285:	call   DWORD PTR ds:0x100650e0
1001528b:	cmp    eax,0x1
1001528e:	jne    0x100152c2
10015290:	mov    ecx,DWORD PTR [esp+0x18]
10015294:	push   0x0
10015296:	push   DWORD PTR [ebp+0x10]
10015299:	push   DWORD PTR [esp+0x18]
1001529d:	push   edi
1001529e:	call   0x10015157
100152a3:	mov    esi,eax
100152a5:	test   esi,esi
100152a7:	jl     0x10015609
100152ad:	mov    ecx,DWORD PTR [esp+0x18]
100152b1:	mov    eax,edi
100152b3:	call   0x10014987
100152b8:	mov    esi,eax
100152ba:	test   esi,esi
100152bc:	jl     0x10015609
100152c2:	cmp    WORD PTR [edi],0x7d
100152c6:	jne    0x100151d4
100152cc:	jmp    0x10015609
100152d1:	push   0x1006ba5c
100152d6:	push   edi
100152d7:	call   DWORD PTR ds:0x10065134
100152dd:	test   eax,eax
100152df:	jne    0x100152fa
100152e1:	and    DWORD PTR [esp+0x20],eax
100152e5:	mov    ecx,DWORD PTR [esp+0x18]
100152e9:	mov    eax,edi
100152eb:	call   0x10014987
100152f0:	mov    esi,eax
100152f2:	test   esi,esi
100152f4:	jl     0x10015609
100152fa:	push   0x1006ba88
100152ff:	push   edi
10015300:	xor    ebx,ebx
10015302:	call   DWORD PTR ds:0x10065134
10015308:	test   eax,eax
1001530a:	jne    0x100153f6
10015310:	mov    ecx,DWORD PTR [esp+0x18]
10015314:	lea    eax,[esp+0x234]
1001531b:	call   0x10014987
10015320:	mov    esi,eax
10015322:	test   esi,esi
10015324:	jl     0x10015609
1001532a:	mov    ecx,DWORD PTR [esp+0x18]
1001532e:	mov    eax,edi
10015330:	call   0x10014987
10015335:	mov    esi,eax
10015337:	test   esi,esi
10015339:	jl     0x10015609
1001533f:	cmp    WORD PTR [edi],0x3d
10015343:	jne    0x100156df
10015349:	cmp    DWORD PTR [ebp+0x10],ebx
1001534c:	je     0x1001538a
1001534e:	mov    eax,DWORD PTR [esp+0x1c]
10015352:	mov    ecx,DWORD PTR [esp+0x18]
10015356:	mov    BYTE PTR [esp+0x450],0x1
1001535e:	mov    DWORD PTR [esp+0x14],eax
10015362:	push   edi
10015363:	lea    eax,[esp+0x238]
1001536a:	push   eax
1001536b:	lea    edx,[esp+0x1c]
1001536f:	call   0x10014a98
10015374:	mov    esi,eax
10015376:	cmp    esi,ebx
10015378:	jl     0x100156fa
1001537e:	mov    BYTE PTR [esp+0x450],bl
10015385:	jmp    0x1001527e
1001538a:	cmp    DWORD PTR [ebp+0x14],ebx
1001538d:	jne    0x100153e4
1001538f:	cmp    DWORD PTR [esp+0x20],ebx
10015393:	je     0x100153e4
10015395:	lea    eax,[esp+0x14]
10015399:	push   eax
1001539a:	push   0x20006
1001539f:	push   ebx
100153a0:	push   ebx
100153a1:	push   DWORD PTR [esp+0x2c]
100153a5:	mov    DWORD PTR [esp+0x28],ebx
100153a9:	call   DWORD PTR ds:0x10065014
100153af:	cmp    eax,ebx
100153b1:	jne    0x10015602
100153b7:	mov    ebx,DWORD PTR [esp+0x14]
100153bb:	lea    eax,[esp+0x234]
100153c2:	push   eax
100153c3:	push   ebx
100153c4:	call   DWORD PTR ds:0x10065010
100153ca:	test   eax,eax
100153cc:	je     0x100153d7
100153ce:	cmp    eax,0x2
100153d1:	jne    0x10015703
100153d7:	test   ebx,ebx
100153d9:	je     0x100153e2
100153db:	push   ebx
100153dc:	call   DWORD PTR ds:0x1006501c
100153e2:	xor    ebx,ebx
100153e4:	mov    ecx,DWORD PTR [esp+0x18]
100153e8:	call   0x10014e47
100153ed:	mov    esi,eax
100153ef:	cmp    esi,ebx
100153f1:	jmp    0x100152bc
100153f6:	push   0x5c
100153f8:	mov    eax,edi
100153fa:	call   0x1001493b
100153ff:	test   eax,eax
10015401:	pop    ecx
10015402:	jne    0x1001571e
10015408:	cmp    DWORD PTR [ebp+0x10],ebx
1001540b:	je     0x10015509
10015411:	mov    esi,DWORD PTR ds:0x10065014
10015417:	lea    eax,[esp+0x14]
1001541b:	push   eax
1001541c:	push   0x2001f
10015421:	push   ebx
10015422:	push   edi
10015423:	push   DWORD PTR [esp+0x2c]
10015427:	mov    DWORD PTR [esp+0x28],ebx
1001542b:	call   esi
1001542d:	cmp    eax,ebx
1001542f:	jne    0x10015455
10015431:	xor    eax,eax
10015433:	cmp    DWORD PTR [esp+0x10],ebx
10015437:	je     0x10015443
10015439:	push   DWORD PTR [esp+0x10]
1001543d:	call   DWORD PTR ds:0x1006501c
10015443:	test   eax,eax
10015445:	mov    ebx,DWORD PTR [esp+0x14]
10015449:	mov    DWORD PTR [esp+0x10],ebx
1001544d:	je     0x100154d5
10015453:	jmp    0x10015459
10015455:	mov    ebx,DWORD PTR [esp+0x10]
10015459:	and    DWORD PTR [esp+0x14],0x0
1001545e:	lea    eax,[esp+0x14]
10015462:	push   eax
10015463:	push   0x20019
10015468:	push   0x0
1001546a:	push   edi
1001546b:	push   DWORD PTR [esp+0x2c]
1001546f:	call   esi
10015471:	xor    esi,esi
10015473:	test   eax,eax
10015475:	jne    0x1001548e
10015477:	cmp    ebx,esi
10015479:	je     0x10015482
1001547b:	push   ebx
1001547c:	call   DWORD PTR ds:0x1006501c
10015482:	cmp    eax,esi
10015484:	mov    ebx,DWORD PTR [esp+0x14]
10015488:	mov    DWORD PTR [esp+0x10],ebx
1001548c:	je     0x100154d5
1001548e:	lea    eax,[esp+0x28]
10015492:	push   eax
10015493:	lea    eax,[esp+0x18]
10015497:	push   eax
10015498:	push   esi
10015499:	push   0x2001f
1001549e:	push   esi
1001549f:	push   esi
100154a0:	push   esi
100154a1:	push   edi
100154a2:	push   DWORD PTR [esp+0x3c]
100154a6:	mov    DWORD PTR [esp+0x38],esi
100154aa:	call   DWORD PTR ds:0x10065004
100154b0:	cmp    eax,esi
100154b2:	jne    0x10015724
100154b8:	xor    eax,eax
100154ba:	cmp    ebx,esi
100154bc:	je     0x100154c5
100154be:	push   ebx
100154bf:	call   DWORD PTR ds:0x1006501c
100154c5:	cmp    eax,esi
100154c7:	mov    ebx,DWORD PTR [esp+0x14]
100154cb:	mov    DWORD PTR [esp+0x10],ebx
100154cf:	jne    0x10015724
100154d5:	mov    ecx,DWORD PTR [esp+0x18]
100154d9:	mov    eax,edi
100154db:	call   0x10014987
100154e0:	mov    esi,eax
100154e2:	test   esi,esi
100154e4:	jl     0x10015609
100154ea:	cmp    WORD PTR [edi],0x3d
100154ee:	jne    0x1001527e
100154f4:	mov    ecx,DWORD PTR [esp+0x18]
100154f8:	push   edi
100154f9:	push   0x0
100154fb:	lea    edx,[esp+0x18]
100154ff:	call   0x10014a98
10015504:	jmp    0x10015274
10015509:	cmp    DWORD PTR [ebp+0x14],ebx
1001550c:	jne    0x1001554c
1001550e:	lea    eax,[esp+0x14]
10015512:	push   eax
10015513:	push   0x20019
10015518:	push   ebx
10015519:	push   edi
1001551a:	push   DWORD PTR [esp+0x2c]
1001551e:	mov    DWORD PTR [esp+0x28],ebx
10015522:	call   DWORD PTR ds:0x10065014
10015528:	cmp    eax,ebx
1001552a:	jne    0x10015546
1001552c:	xor    eax,eax
1001552e:	cmp    DWORD PTR [esp+0x10],ebx
10015532:	je     0x1001553e
10015534:	push   DWORD PTR [esp+0x10]
10015538:	call   DWORD PTR ds:0x1006501c
1001553e:	mov    ecx,DWORD PTR [esp+0x14]
10015542:	mov    DWORD PTR [esp+0x10],ecx
10015546:	mov    DWORD PTR [esp+0x14],eax
1001554a:	jmp    0x10015554
1001554c:	mov    DWORD PTR [esp+0x14],0x2
10015554:	cmp    DWORD PTR [esp+0x14],ebx
10015558:	je     0x10015561
1001555a:	mov    DWORD PTR [ebp+0x14],0x1
10015561:	push   0xffffffff
10015563:	push   edi
10015564:	lea    eax,[esp+0x34]
10015568:	push   0x104
1001556d:	push   eax
1001556e:	call   0x10044bad
10015573:	push   eax
10015574:	call   0x10001f59
10015579:	mov    ecx,DWORD PTR [esp+0x2c]
1001557d:	add    esp,0x14
10015580:	mov    eax,edi
10015582:	call   0x10014987
10015587:	mov    esi,eax
10015589:	test   esi,esi
1001558b:	jl     0x10015609
1001558d:	mov    ecx,DWORD PTR [esp+0x18]
10015591:	call   0x10014e47
10015596:	mov    esi,eax
10015598:	test   esi,esi
1001559a:	jl     0x10015609
1001559c:	cmp    WORD PTR [edi],0x7b
100155a0:	jne    0x100155de
100155a2:	push   edi
100155a3:	call   DWORD PTR ds:0x100650e0
100155a9:	cmp    eax,0x1
100155ac:	jne    0x100155de
100155ae:	push   DWORD PTR [ebp+0x14]
100155b1:	mov    ecx,DWORD PTR [esp+0x1c]
100155b5:	push   0x0
100155b7:	push   DWORD PTR [esp+0x18]
100155bb:	push   edi
100155bc:	call   0x10015157
100155c1:	mov    esi,eax
100155c3:	test   esi,esi
100155c5:	jge    0x100155cd
100155c7:	cmp    DWORD PTR [ebp+0x14],0x0
100155cb:	je     0x10015609
100155cd:	mov    ecx,DWORD PTR [esp+0x18]
100155d1:	mov    eax,edi
100155d3:	call   0x10014987
100155d8:	mov    esi,eax
100155da:	test   esi,esi
100155dc:	jl     0x10015609
100155de:	mov    eax,DWORD PTR [esp+0x24]
100155e2:	mov    DWORD PTR [ebp+0x14],eax
100155e5:	mov    eax,DWORD PTR [esp+0x14]
100155e9:	cmp    eax,0x2
100155ec:	je     0x100152c2
100155f2:	xor    ebx,ebx
100155f4:	cmp    eax,ebx
100155f6:	je     0x10015642
100155f8:	cmp    DWORD PTR [esp+0x24],ebx
100155fc:	jne    0x100152c2
10015602:	call   0x100140a2
10015607:	mov    esi,eax
10015609:	cmp    DWORD PTR [esp+0x10],0x0
1001560e:	je     0x1001561a
10015610:	push   DWORD PTR [esp+0x10]
10015614:	call   DWORD PTR ds:0x1006501c
1001561a:	mov    eax,esi
1001561c:	mov    ecx,DWORD PTR [esp+0x448]
10015623:	mov    DWORD PTR fs:0x0,ecx
1001562a:	pop    ecx
1001562b:	pop    edi
1001562c:	pop    esi
1001562d:	pop    ebx
1001562e:	mov    ecx,DWORD PTR [esp+0x430]
10015635:	xor    ecx,esp
10015637:	call   0x10041d97
1001563c:	mov    esp,ebp
1001563e:	pop    ebp
1001563f:	ret    0x10
10015642:	cmp    DWORD PTR [esp+0x24],ebx
10015646:	je     0x10015685
10015648:	push   DWORD PTR [esp+0x10]
1001564c:	call   0x10014e12
10015651:	test   eax,eax
10015653:	je     0x10015685
10015655:	lea    eax,[esp+0x2c]
10015659:	push   eax
1001565a:	call   0x10014de6
1001565f:	test   eax,eax
10015661:	je     0x100152c2
10015667:	cmp    DWORD PTR [esp+0x20],0x0
1001566c:	je     0x100152c2
10015672:	lea    eax,[esp+0x2c]
10015676:	push   eax
10015677:	lea    ecx,[esp+0x14]
1001567b:	call   0x10014266
10015680:	jmp    0x100152c2
10015685:	push   DWORD PTR [esp+0x10]
10015689:	call   0x10014e12
1001568e:	cmp    DWORD PTR [esp+0x10],ebx
10015692:	mov    DWORD PTR [esp+0x14],eax
10015696:	je     0x100156ae
10015698:	push   DWORD PTR [esp+0x10]
1001569c:	call   DWORD PTR ds:0x1006501c
100156a2:	cmp    eax,ebx
100156a4:	mov    DWORD PTR [esp+0x10],ebx
100156a8:	jne    0x1001573d
100156ae:	cmp    DWORD PTR [esp+0x20],ebx
100156b2:	je     0x100152c2
100156b8:	cmp    DWORD PTR [esp+0x14],0x0
100156bd:	jne    0x100152c2
100156c3:	lea    eax,[esp+0x2c]
100156c7:	push   eax
100156c8:	push   DWORD PTR [esp+0x20]
100156cc:	call   DWORD PTR ds:0x1006500c
100156d2:	test   eax,eax
100156d4:	jne    0x10015602
100156da:	jmp    0x100152c2
100156df:	cmp    DWORD PTR [esp+0x10],0x0
100156e4:	je     0x100156f0
100156e6:	push   DWORD PTR [esp+0x10]
100156ea:	call   DWORD PTR ds:0x1006501c
100156f0:	mov    eax,0x80020009
100156f5:	jmp    0x1001561c
100156fa:	cmp    DWORD PTR [esp+0x10],ebx
100156fe:	jmp    0x1001560e
10015703:	call   0x100140a2
10015708:	test   ebx,ebx
1001570a:	mov    esi,eax
1001570c:	je     0x10015609
10015712:	push   ebx
10015713:	call   DWORD PTR ds:0x1006501c
10015719:	jmp    0x10015609
1001571e:	cmp    DWORD PTR [esp+0x10],ebx
10015722:	jmp    0x100156e4
10015724:	call   0x100140a2
10015729:	cmp    ebx,esi
1001572b:	mov    edi,eax
1001572d:	je     0x10015736
1001572f:	push   ebx
10015730:	call   DWORD PTR ds:0x1006501c
10015736:	mov    eax,edi
10015738:	jmp    0x1001561c
1001573d:	call   0x100140a2
10015742:	jmp    0x1001561c
10015747:	push   ebp
10015748:	lea    ebp,[esp-0x9cc]
1001574f:	sub    esp,0xa4c
10015755:	mov    eax,ds:0x1007d030
1001575a:	xor    eax,ebp
1001575c:	mov    DWORD PTR [ebp+0x9c8],eax
10015762:	mov    eax,DWORD PTR [ebp+0x9d4]
10015768:	push   ebx
10015769:	push   esi
1001576a:	push   edi
1001576b:	xor    edi,edi
1001576d:	mov    esi,edx
1001576f:	cmp    esi,edi
10015771:	mov    ebx,ecx
10015773:	mov    DWORD PTR [ebp-0x6c],eax
10015776:	mov    DWORD PTR [ebp-0x80],0x1006e904
1001577d:	mov    DWORD PTR [ebp-0x7c],edi
10015780:	mov    DWORD PTR [ebp-0x78],edi
10015783:	mov    DWORD PTR [ebp-0x74],edi
10015786:	je     0x100157a0
10015788:	jmp    0x1001579a
1001578a:	push   DWORD PTR [esi+0x4]
1001578d:	push   eax
1001578e:	lea    eax,[ebp-0x80]
10015791:	push   eax
10015792:	call   0x10014675
10015797:	add    esi,0x8
1001579a:	mov    eax,DWORD PTR [esi]
1001579c:	cmp    eax,edi
1001579e:	jne    0x1001578a
100157a0:	mov    eax,DWORD PTR [ebx]
100157a2:	lea    ecx,[ebp-0x80]
100157a5:	push   ecx
100157a6:	mov    ecx,ebx
100157a8:	call   DWORD PTR [eax+0x14]
100157ab:	cmp    eax,edi
100157ad:	jge    0x100157d5
100157af:	mov    esi,eax
100157b1:	lea    ecx,[ebp-0x80]
100157b4:	call   0x1001463a
100157b9:	mov    ecx,DWORD PTR [ebp+0x9c8]
100157bf:	pop    edi
100157c0:	mov    eax,esi
100157c2:	pop    esi
100157c3:	xor    ecx,ebp
100157c5:	pop    ebx
100157c6:	call   0x10041d97
100157cb:	add    ebp,0x9cc
100157d1:	leave  
100157d2:	ret    0x8
100157d5:	call   DWORD PTR ds:0x1007dfe4
100157db:	mov    ebx,DWORD PTR ds:0x1007f9e4
100157e1:	mov    esi,0x104
100157e6:	push   esi
100157e7:	lea    eax,[ebp+0x7c0]
100157ed:	push   eax
100157ee:	push   ebx
100157ef:	call   DWORD PTR ds:0x10065124
100157f5:	cmp    eax,edi
100157f7:	jne    0x10015800
100157f9:	call   0x10006125
100157fe:	jmp    0x100157af
10015800:	cmp    eax,esi
10015802:	jne    0x1001580b
10015804:	mov    esi,0x8007007a
10015809:	jmp    0x100157b1
1001580b:	lea    edx,[ebp+0x7c0]
10015811:	mov    ecx,0x208
10015816:	lea    eax,[ebp-0x68]
10015819:	call   0x1001417b
1001581e:	cmp    ebx,edi
10015820:	je     0x10015832
10015822:	push   edi
10015823:	call   DWORD PTR ds:0x10065114
10015829:	cmp    ebx,eax
1001582b:	je     0x10015832
1001582d:	lea    eax,[ebp-0x68]
10015830:	jmp    0x10015888
10015832:	lea    eax,[ebp-0x68]
10015835:	push   eax
10015836:	lea    eax,[ebp+0x3aa]
1001583c:	push   0x20b
10015841:	push   eax
10015842:	mov    WORD PTR [ebp+0x3a8],0x22
1001584b:	call   0x10013ff8
10015850:	add    esp,0xc
10015853:	test   al,al
10015855:	jne    0x10015861
10015857:	mov    esi,0x80004005
1001585c:	jmp    0x100157b1
10015861:	lea    eax,[ebp+0x3a8]
10015867:	push   eax
10015868:	call   DWORD PTR ds:0x100650e0
1001586e:	add    eax,eax
10015870:	mov    WORD PTR [ebp+eax*1+0x3a8],0x22
1001587a:	mov    WORD PTR [ebp+eax*1+0x3aa],di
10015882:	lea    eax,[ebp+0x3a8]
10015888:	push   eax
10015889:	push   0x1006e298
1001588e:	lea    eax,[ebp-0x80]
10015891:	push   eax
10015892:	call   0x10014675
10015897:	cmp    eax,edi
10015899:	jl     0x100157af
1001589f:	lea    eax,[ebp-0x68]
100158a2:	push   eax
100158a3:	push   0x1006e2a8
100158a8:	lea    eax,[ebp-0x80]
100158ab:	push   eax
100158ac:	call   0x10014675
100158b1:	cmp    eax,edi
100158b3:	jl     0x100157af
100158b9:	call   DWORD PTR ds:0x1007dfe4
100158bf:	cmp    DWORD PTR [ebp+0x9d8],edi
100158c5:	mov    edx,DWORD PTR [ebp-0x6c]
100158c8:	je     0x100158dc
100158ca:	cmp    edx,edi
100158cc:	je     0x100158d2
100158ce:	push   0x1
100158d0:	jmp    0x100158e1
100158d2:	mov    eax,0x80070057
100158d7:	jmp    0x100157af
100158dc:	cmp    edx,edi
100158de:	je     0x100158d2
100158e0:	push   edi
100158e1:	push   0x1006e2c0
100158e6:	lea    eax,[ebp-0x80]
100158e9:	push   eax
100158ea:	lea    ecx,[ebp+0x7c0]
100158f0:	call   0x100146ca
100158f5:	jmp    0x100157af
100158fa:	push   ebp
100158fb:	lea    ebp,[esp-0x9c8]
10015902:	sub    esp,0xa48
10015908:	mov    eax,ds:0x1007d030
1001590d:	xor    eax,ebp
1001590f:	mov    DWORD PTR [ebp+0x9c4],eax
10015915:	push   ebx
10015916:	push   esi
10015917:	push   edi
10015918:	xor    edi,edi
1001591a:	mov    esi,edx
1001591c:	cmp    esi,edi
1001591e:	mov    ebx,ecx
10015920:	mov    DWORD PTR [ebp-0x80],0x1006e904
10015927:	mov    DWORD PTR [ebp-0x7c],edi
1001592a:	mov    DWORD PTR [ebp-0x78],edi
1001592d:	mov    DWORD PTR [ebp-0x74],edi
10015930:	je     0x1001594a
10015932:	jmp    0x10015944
10015934:	push   DWORD PTR [esi+0x4]
10015937:	push   eax
10015938:	lea    eax,[ebp-0x80]
1001593b:	push   eax
1001593c:	call   0x10014675
10015941:	add    esi,0x8
10015944:	mov    eax,DWORD PTR [esi]
10015946:	cmp    eax,edi
10015948:	jne    0x10015934
1001594a:	mov    eax,DWORD PTR [ebx]
1001594c:	lea    ecx,[ebp-0x80]
1001594f:	push   ecx
10015950:	mov    ecx,ebx
10015952:	call   DWORD PTR [eax+0x14]
10015955:	cmp    eax,edi
10015957:	jge    0x1001597f
10015959:	mov    esi,eax
1001595b:	lea    ecx,[ebp-0x80]
1001595e:	call   0x1001463a
10015963:	mov    ecx,DWORD PTR [ebp+0x9c4]
10015969:	pop    edi
1001596a:	mov    eax,esi
1001596c:	pop    esi
1001596d:	xor    ecx,ebp
1001596f:	pop    ebx
10015970:	call   0x10041d97
10015975:	add    ebp,0x9c8
1001597b:	leave  
1001597c:	ret    0x8
1001597f:	call   DWORD PTR ds:0x1007dfe4
10015985:	mov    ebx,DWORD PTR ds:0x1007f9e4
1001598b:	mov    esi,0x104
10015990:	push   esi
10015991:	lea    eax,[ebp+0x7bc]
10015997:	push   eax
10015998:	push   ebx
10015999:	call   DWORD PTR ds:0x10065124
1001599f:	cmp    eax,edi
100159a1:	jne    0x100159aa
100159a3:	call   0x10006125
100159a8:	jmp    0x10015959
100159aa:	cmp    eax,esi
100159ac:	jne    0x100159b5
100159ae:	mov    esi,0x8007007a
100159b3:	jmp    0x1001595b
100159b5:	lea    edx,[ebp+0x7bc]
100159bb:	mov    ecx,0x208
100159c0:	lea    eax,[ebp-0x6c]
100159c3:	call   0x1001417b
100159c8:	cmp    ebx,edi
100159ca:	je     0x100159dc
100159cc:	push   edi
100159cd:	call   DWORD PTR ds:0x10065114
100159d3:	cmp    ebx,eax
100159d5:	je     0x100159dc
100159d7:	lea    eax,[ebp-0x6c]
100159da:	jmp    0x10015a32
100159dc:	lea    eax,[ebp-0x6c]
100159df:	push   eax
100159e0:	lea    eax,[ebp+0x3a6]
100159e6:	push   0x20b
100159eb:	push   eax
100159ec:	mov    WORD PTR [ebp+0x3a4],0x22
100159f5:	call   0x10013ff8
100159fa:	add    esp,0xc
100159fd:	test   al,al
100159ff:	jne    0x10015a0b
10015a01:	mov    esi,0x80004005
10015a06:	jmp    0x1001595b
10015a0b:	lea    eax,[ebp+0x3a4]
10015a11:	push   eax
10015a12:	call   DWORD PTR ds:0x100650e0
10015a18:	add    eax,eax
10015a1a:	mov    WORD PTR [ebp+eax*1+0x3a4],0x22
10015a24:	mov    WORD PTR [ebp+eax*1+0x3a6],di
10015a2c:	lea    eax,[ebp+0x3a4]
10015a32:	push   eax
10015a33:	push   0x1006e298
10015a38:	lea    eax,[ebp-0x80]
10015a3b:	push   eax
10015a3c:	call   0x10014675
10015a41:	cmp    eax,edi
10015a43:	jl     0x10015959
10015a49:	lea    eax,[ebp-0x6c]
10015a4c:	push   eax
10015a4d:	push   0x1006e2a8
10015a52:	lea    eax,[ebp-0x80]
10015a55:	push   eax
10015a56:	call   0x10014675
10015a5b:	cmp    eax,edi
10015a5d:	jl     0x10015959
10015a63:	call   DWORD PTR ds:0x1007dfe4
10015a69:	cmp    DWORD PTR [ebp+0x9d4],edi
10015a6f:	je     0x10015a93
10015a71:	push   0x1
10015a73:	movzx  edx,WORD PTR [ebp+0x9d0]
10015a7a:	push   0x1006e2c0
10015a7f:	lea    eax,[ebp-0x80]
10015a82:	push   eax
10015a83:	lea    ecx,[ebp+0x7bc]
10015a89:	call   0x100146ca
10015a8e:	jmp    0x10015959
10015a93:	push   edi
10015a94:	jmp    0x10015a73
10015a96:	mov    edx,DWORD PTR [esp+0x8]
10015a9a:	mov    eax,DWORD PTR [esp+0x4]
10015a9e:	push   esi
10015a9f:	xor    esi,esi
10015aa1:	mov    ecx,eax
10015aa3:	and    ecx,0x1
10015aa6:	or     ecx,esi
10015aa8:	push   esi
10015aa9:	jne    0x10015ab6
10015aab:	push   0x2
10015aad:	push   edx
10015aae:	push   eax
10015aaf:	call   0x1005e150
10015ab4:	jmp    0x10015ac4
10015ab6:	push   0x3
10015ab8:	push   edx
10015ab9:	push   eax
10015aba:	call   0x1004b7c0
10015abf:	add    eax,0x1
10015ac2:	adc    edx,esi
10015ac4:	cmp    eax,0x4
10015ac7:	jne    0x10015aa1
10015ac9:	cmp    edx,esi
10015acb:	jne    0x10015aa1
10015acd:	xor    edx,edx
10015acf:	pop    esi
10015ad0:	ret    
10015ad1:	push   esi
10015ad2:	mov    esi,ecx
10015ad4:	mov    eax,DWORD PTR [esi]
10015ad6:	test   eax,eax
10015ad8:	je     0x10015adf
10015ada:	call   0x10015cfa
10015adf:	and    DWORD PTR [esi],0x0
10015ae2:	pop    esi
10015ae3:	ret    
10015ae4:	push   edi
10015ae5:	mov    edi,eax
10015ae7:	mov    eax,DWORD PTR [esi]
10015ae9:	test   eax,eax
10015aeb:	je     0x10015af2
10015aed:	call   0x10015cfa
10015af2:	cmp    BYTE PTR [esp+0x8],0x0
10015af7:	mov    DWORD PTR [esi],edi
10015af9:	je     0x10015b09
10015afb:	test   edi,edi
10015afd:	je     0x10015b09
10015aff:	add    edi,0x20
10015b02:	push   edi
10015b03:	call   DWORD PTR ds:0x100650a4
10015b09:	pop    edi
10015b0a:	ret    0x4
10015b0d:	push   ebp
10015b0e:	mov    ebp,esp
10015b10:	and    esp,0xfffffff8
10015b13:	sub    esp,0x14
10015b16:	push   ebx
10015b17:	push   esi
10015b18:	push   edi
10015b19:	mov    esi,0xf0
10015b1e:	push   esi
10015b1f:	call   0x1004239e
10015b24:	pop    ecx
10015b25:	push   esi
10015b26:	xor    esi,esi
10015b28:	mov    ebx,eax
10015b2a:	push   esi
10015b2b:	push   ebx
10015b2c:	call   0x10044950
10015b31:	mov    eax,DWORD PTR [ebp+0x8]
10015b34:	add    esp,0xc
10015b37:	push   0x1e
10015b39:	pop    ecx
10015b3a:	mov    DWORD PTR [ebx+0x20],esi
10015b3d:	mov    DWORD PTR [ebx+0x1c],esi
10015b40:	push   0xf
10015b42:	mov    DWORD PTR [ebx],eax
10015b44:	mov    BYTE PTR [ebx+0x25],0x0
10015b48:	mov    BYTE PTR [ebx+0x24],0x0
10015b4c:	mov    BYTE PTR [ebx+0x26],0x1
10015b50:	mov    BYTE PTR [ebx+0x27],0x0
10015b54:	lea    edi,[ebx+0x3c]
10015b57:	mov    esi,0x1007fc60
10015b5c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10015b5e:	pop    ecx
10015b5f:	lea    edi,[ebx+0xb4]
10015b65:	mov    esi,0x1007fcd8
10015b6a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10015b6c:	mov    esi,DWORD PTR ds:0x10065130
10015b72:	xor    edi,edi
10015b74:	push   edi
10015b75:	push   edi
10015b76:	push   0x1
10015b78:	push   edi
10015b79:	call   esi
10015b7b:	push   edi
10015b7c:	push   0x1
10015b7e:	push   0x1
10015b80:	push   edi
10015b81:	mov    DWORD PTR [ebx+0x28],eax
10015b84:	call   esi
10015b86:	push   edi
10015b87:	push   edi
10015b88:	push   0x1
10015b8a:	push   edi
10015b8b:	mov    DWORD PTR [ebx+0x2c],eax
10015b8e:	call   esi
10015b90:	push   edi
10015b91:	push   edi
10015b92:	push   0x1
10015b94:	push   edi
10015b95:	mov    DWORD PTR [ebx+0x30],eax
10015b98:	call   esi
10015b9a:	mov    DWORD PTR [ebx+0x34],eax
10015b9d:	lea    eax,[ebx+0x4]
10015ba0:	push   eax
10015ba1:	mov    DWORD PTR [ebx+0x38],edi
10015ba4:	call   DWORD PTR ds:0x1006511c
10015baa:	mov    esi,0x1007fc38
10015baf:	push   esi
10015bb0:	call   DWORD PTR ds:0x100650f0
10015bb6:	mov    eax,DWORD PTR [ebp+0x8]
10015bb9:	mov    DWORD PTR [esp+0xc],eax
10015bbd:	lea    eax,[esp+0xc]
10015bc1:	push   eax
10015bc2:	lea    edi,[esp+0x18]
10015bc6:	mov    DWORD PTR [esp+0x14],ebx
10015bca:	call   0x100175c2
10015bcf:	push   esi
10015bd0:	call   DWORD PTR ds:0x100650ec
10015bd6:	pop    edi
10015bd7:	pop    esi
10015bd8:	mov    eax,ebx
10015bda:	pop    ebx
10015bdb:	mov    esp,ebp
10015bdd:	pop    ebp
10015bde:	ret    
10015bdf:	push   edi
10015be0:	push   DWORD PTR [esi+0x28]
10015be3:	mov    edi,DWORD PTR ds:0x10065070
10015be9:	call   edi
10015beb:	push   DWORD PTR [esi+0x2c]
10015bee:	call   edi
10015bf0:	push   DWORD PTR [esi+0x30]
10015bf3:	call   edi
10015bf5:	push   DWORD PTR [esi+0x34]
10015bf8:	call   edi
10015bfa:	lea    eax,[esi+0x4]
10015bfd:	push   eax
10015bfe:	call   DWORD PTR ds:0x10065138
10015c04:	mov    edi,DWORD PTR [esi+0x1c]
10015c07:	test   edi,edi
10015c09:	je     0x10015c18
10015c0b:	push   edi
10015c0c:	call   0x1002494d
10015c11:	push   edi
10015c12:	call   0x10041d92
10015c17:	pop    ecx
10015c18:	and    DWORD PTR [esi+0x1c],0x0
10015c1c:	push   esi
10015c1d:	call   0x10041d92
10015c22:	pop    ecx
10015c23:	pop    edi
10015c24:	ret    
10015c25:	push   ebp
10015c26:	mov    ebp,esp
10015c28:	sub    esp,0x18
10015c2b:	push   ebx
10015c2c:	mov    ebx,DWORD PTR ds:0x100650f0
10015c32:	push   esi
10015c33:	push   edi
10015c34:	push   0x1007fc38
10015c39:	call   ebx
10015c3b:	lea    eax,[ebp+0x8]
10015c3e:	push   eax
10015c3f:	lea    eax,[ebp-0xc]
10015c42:	call   0x100177d0
10015c47:	cmp    DWORD PTR [ebp-0xc],0x0
10015c4b:	mov    eax,ds:0x1007fe5c
10015c50:	mov    esi,eax
10015c52:	je     0x10015c5d
10015c54:	cmp    DWORD PTR [ebp-0xc],0x1007fe58
10015c5b:	je     0x10015c67
10015c5d:	call   0x100422b0
10015c62:	mov    eax,ds:0x1007fe5c
10015c67:	mov    ecx,DWORD PTR [ebp-0x8]
10015c6a:	cmp    ecx,esi
10015c6c:	je     0x10015c7b
10015c6e:	mov    edx,DWORD PTR [ebp+0x8]
10015c71:	cmp    edx,DWORD PTR [ecx+0xc]
10015c74:	jb     0x10015c7b
10015c76:	lea    ecx,[ebp-0xc]
10015c79:	jmp    0x10015c88
10015c7b:	mov    DWORD PTR [ebp-0x10],eax
10015c7e:	mov    DWORD PTR [ebp-0x14],0x1007fe58
10015c85:	lea    ecx,[ebp-0x14]
10015c88:	mov    esi,DWORD PTR [ecx]
10015c8a:	test   esi,esi
10015c8c:	mov    edi,DWORD PTR [ecx+0x4]
10015c8f:	mov    DWORD PTR [ebp-0x10],eax
10015c92:	je     0x10015c9c
10015c94:	cmp    esi,0x1007fe58
10015c9a:	je     0x10015ca1
10015c9c:	call   0x100422b0
10015ca1:	cmp    edi,DWORD PTR [ebp-0x10]
10015ca4:	je     0x10015cbe
10015ca6:	test   esi,esi
10015ca8:	jne    0x10015caf
10015caa:	call   0x100422b0
10015caf:	cmp    edi,DWORD PTR [esi+0x4]
10015cb2:	jne    0x10015cb9
10015cb4:	call   0x100422b0
10015cb9:	mov    esi,DWORD PTR [edi+0x10]
10015cbc:	jmp    0x10015cc0
10015cbe:	xor    esi,esi
10015cc0:	test   esi,esi
10015cc2:	je     0x10015ce8
10015cc4:	lea    edi,[esi+0x4]
10015cc7:	push   edi
10015cc8:	call   ebx
10015cca:	mov    bl,BYTE PTR [esi+0x27]
10015ccd:	test   bl,bl
10015ccf:	jne    0x10015cdb
10015cd1:	lea    eax,[esi+0x20]
10015cd4:	push   eax
10015cd5:	call   DWORD PTR ds:0x100650a4
10015cdb:	push   edi
10015cdc:	call   DWORD PTR ds:0x100650ec
10015ce2:	test   bl,bl
10015ce4:	je     0x10015ce8
10015ce6:	xor    esi,esi
10015ce8:	push   0x1007fc38
10015ced:	call   DWORD PTR ds:0x100650ec
10015cf3:	pop    edi
10015cf4:	mov    eax,esi
10015cf6:	pop    esi
10015cf7:	pop    ebx
10015cf8:	leave  
10015cf9:	ret    
10015cfa:	push   esi
10015cfb:	mov    esi,eax
10015cfd:	test   esi,esi
10015cff:	je     0x10015d31
10015d01:	push   ebx
10015d02:	push   ebp
10015d03:	push   edi
10015d04:	mov    edi,DWORD PTR ds:0x100650f0
10015d0a:	mov    ebp,0x1007fc38
10015d0f:	push   ebp
10015d10:	call   edi
10015d12:	lea    ebx,[esi+0x4]
10015d15:	push   ebx
10015d16:	call   edi
10015d18:	add    esi,0x20
10015d1b:	push   esi
10015d1c:	call   DWORD PTR ds:0x100650ac
10015d22:	mov    esi,DWORD PTR ds:0x100650ec
10015d28:	push   ebx
10015d29:	call   esi
10015d2b:	push   ebp
10015d2c:	call   esi
10015d2e:	pop    edi
10015d2f:	pop    ebp
10015d30:	pop    ebx
10015d31:	pop    esi
10015d32:	ret    
10015d33:	add    eax,0x4
10015d36:	push   eax
10015d37:	call   DWORD PTR ds:0x100650f0
10015d3d:	ret    
10015d3e:	push   0x8
10015d40:	mov    eax,0x100617c0
10015d45:	call   0x10058878
10015d4a:	mov    esi,DWORD PTR [ebp+0x8]
10015d4d:	and    DWORD PTR [ebp-0x4],0x0
10015d51:	push   0x54
10015d53:	call   0x1004239e
10015d58:	pop    ecx
10015d59:	mov    DWORD PTR [ebp-0x14],eax
10015d5c:	test   eax,eax
10015d5e:	mov    BYTE PTR [ebp-0x4],0x1
10015d62:	je     0x10015d6d
10015d64:	push   esi
10015d65:	push   eax
10015d66:	call   0x100248c0
10015d6b:	jmp    0x10015d6f
10015d6d:	xor    eax,eax
10015d6f:	mov    DWORD PTR [esi+0x1c],eax
10015d72:	call   0x1005891d
10015d77:	ret    
10015d78:	push   0x4
10015d7a:	call   0x10037620
10015d7f:	mov    eax,DWORD PTR [ebp+0x8]
10015d82:	and    DWORD PTR [eax+0x1c],0x0
10015d86:	pop    ecx
10015d87:	mov    eax,0x10015d72
10015d8c:	ret    
10015d8d:	push   ebp
10015d8e:	mov    ebp,esp
10015d90:	and    esp,0xfffffff8
10015d93:	push   ecx
10015d94:	push   esi
10015d95:	mov    esi,eax
10015d97:	and    DWORD PTR [esi],0x0
10015d9a:	jmp    0x10015dca
10015d9c:	mov    eax,DWORD PTR [esi]
10015d9e:	push   DWORD PTR [ebp+0x10]
10015da1:	mov    ecx,DWORD PTR [ebp+0xc]
10015da4:	sub    ecx,eax
10015da6:	push   ecx
10015da7:	mov    ecx,DWORD PTR [ebp+0x8]
10015daa:	add    eax,ecx
10015dac:	push   eax
10015dad:	push   edi
10015dae:	lea    eax,[esp+0x14]
10015db2:	call   0x100254f1
10015db7:	mov    eax,DWORD PTR [esp+0x4]
10015dbb:	add    DWORD PTR [esi],eax
10015dbd:	mov    eax,DWORD PTR [esi]
10015dbf:	cmp    eax,DWORD PTR [ebp+0xc]
10015dc2:	je     0x10015dd5
10015dc4:	cmp    BYTE PTR [ebp+0x10],0x0
10015dc8:	jne    0x10015dd5
10015dca:	mov    eax,edi
10015dcc:	call   0x100255af
10015dd1:	test   eax,eax
10015dd3:	jne    0x10015d9c
10015dd5:	lea    esi,[edi+0x38]
10015dd8:	push   esi
10015dd9:	call   DWORD PTR ds:0x100650f0
10015ddf:	cmp    DWORD PTR [edi+0x28],0x0
10015de3:	jne    0x10015df1
10015de5:	mov    eax,DWORD PTR [edi+0x50]
10015de8:	push   DWORD PTR [eax+0x28]
10015deb:	call   DWORD PTR ds:0x10065164
10015df1:	push   esi
10015df2:	call   DWORD PTR ds:0x100650ec
10015df8:	pop    esi
10015df9:	mov    esp,ebp
10015dfb:	pop    ebp
10015dfc:	ret    
10015dfd:	push   ebp
10015dfe:	mov    ebp,esp
10015e00:	sub    esp,0x10
10015e03:	push   ebx
10015e04:	xor    ebx,ebx
10015e06:	cmp    BYTE PTR [esi+0x27],bl
10015e09:	push   edi
10015e0a:	jne    0x10015e87
10015e0c:	lea    eax,[ebp-0x4]
10015e0f:	push   eax
10015e10:	push   ebx
10015e11:	push   ebx
10015e12:	push   ebx
10015e13:	lea    eax,[ebp-0x8]
10015e16:	push   eax
10015e17:	push   ebx
10015e18:	push   ebx
10015e19:	push   0x4
10015e1b:	lea    eax,[ebp-0xc]
10015e1e:	push   eax
10015e1f:	push   0x8004667e
10015e24:	push   DWORD PTR [esi]
10015e26:	mov    DWORD PTR [ebp-0xc],0x1
10015e2d:	mov    DWORD PTR [ebp-0x8],ebx
10015e30:	mov    DWORD PTR [ebp-0x4],ebx
10015e33:	call   DWORD PTR [esi+0x7c]
10015e36:	push   esi
10015e37:	call   0x10015d3e
10015e3c:	lea    eax,[esi+0x4]
10015e3f:	pop    ecx
10015e40:	push   eax
10015e41:	mov    DWORD PTR [ebp-0x10],eax
10015e44:	call   DWORD PTR ds:0x100650f0
10015e4a:	mov    edi,DWORD PTR ds:0x100650a4
10015e50:	lea    eax,[esi+0x20]
10015e53:	push   eax
10015e54:	call   edi
10015e56:	lea    eax,[esi+0x20]
10015e59:	push   eax
10015e5a:	call   edi
10015e5c:	mov    edi,DWORD PTR ds:0x10065098
10015e62:	push   ebx
10015e63:	push   ebx
10015e64:	push   esi
10015e65:	push   0x10024ece
10015e6a:	push   ebx
10015e6b:	push   ebx
10015e6c:	call   edi
10015e6e:	push   ebx
10015e6f:	push   ebx
10015e70:	push   esi
10015e71:	push   0x10025495
10015e76:	push   ebx
10015e77:	push   ebx
10015e78:	call   edi
10015e7a:	push   DWORD PTR [ebp-0x10]
10015e7d:	mov    BYTE PTR [esi+0x25],0x1
10015e81:	call   DWORD PTR ds:0x100650ec
10015e87:	pop    edi
10015e88:	pop    ebx
10015e89:	leave  
10015e8a:	ret    
10015e8b:	push   ebp
10015e8c:	mov    ebp,esp
10015e8e:	push   ebx
10015e8f:	mov    ebx,DWORD PTR [ebp+0x50]
10015e92:	push   esi
10015e93:	push   edi
10015e94:	push   0xf
10015e96:	pop    ecx
10015e97:	push   ebx
10015e98:	sub    esp,0x3c
10015e9b:	push   0xf
10015e9d:	lea    esi,[ebp+0x14]
10015ea0:	mov    edi,0x1007fcd8
10015ea5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10015ea7:	pop    ecx
10015ea8:	mov    edi,esp
10015eaa:	push   DWORD PTR [ebp+0x10]
10015ead:	lea    esi,[ebp+0x14]
10015eb0:	push   DWORD PTR [ebp+0xc]
10015eb3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10015eb5:	push   DWORD PTR [ebp+0x8]
10015eb8:	call   DWORD PTR ds:0x1007fc50
10015ebe:	push   0x78
10015ec0:	push   ebx
10015ec1:	push   0x1007fc60
10015ec6:	mov    esi,eax
10015ec8:	call   0x10043ed0
10015ecd:	add    esp,0xc
10015ed0:	pop    edi
10015ed1:	mov    eax,esi
10015ed3:	pop    esi
10015ed4:	mov    DWORD PTR [ebx+0x18],0x1001626b
10015edb:	mov    DWORD PTR [ebx+0x1c],0x100163c9
10015ee2:	mov    DWORD PTR [ebx+0x40],0x100164ce
10015ee9:	mov    DWORD PTR [ebx+0x4c],0x10016693
10015ef0:	mov    DWORD PTR [ebx+0x58],0x10016763
10015ef7:	mov    DWORD PTR [ebx+0x5c],0x10016ffd
10015efe:	mov    DWORD PTR [ebx+0x68],0x1001716a
10015f05:	mov    DWORD PTR [ebx+0x70],0x10017074
10015f0c:	pop    ebx
10015f0d:	pop    ebp
10015f0e:	ret    0x4c
10015f11:	push   ebp
10015f12:	mov    ebp,esp
10015f14:	and    esp,0xfffffff8
10015f17:	sub    esp,0x210
10015f1d:	mov    eax,ds:0x1007d030
10015f22:	xor    eax,esp
10015f24:	mov    DWORD PTR [esp+0x20c],eax
10015f2b:	cmp    BYTE PTR ds:0x1007ffb4,0x0
10015f32:	jne    0x10016078
10015f38:	push   0x208
10015f3d:	lea    eax,[esp+0x4]
10015f41:	push   eax
10015f42:	push   0x0
10015f44:	call   DWORD PTR ds:0x10065124
10015f4a:	test   eax,eax
10015f4c:	je     0x10016078
10015f52:	lea    eax,[esp]
10015f55:	push   eax
10015f56:	call   0x10044e30
10015f5b:	mov    DWORD PTR [esp],0x23e07116
10015f62:	push   0x225a4710
10015f67:	push   0x54894e6a
10015f6c:	push   0x5c69dee
10015f71:	push   0x1006e2d4
10015f76:	call   0x10003d63
10015f7b:	pop    ecx
10015f7c:	pop    ecx
10015f7d:	push   eax
10015f7e:	call   0x10003d63
10015f83:	pop    ecx
10015f84:	pop    ecx
10015f85:	push   eax
10015f86:	call   0x10003d63
10015f8b:	pop    ecx
10015f8c:	pop    ecx
10015f8d:	push   eax
10015f8e:	call   0x10003d63
10015f93:	push   eax
10015f94:	push   0xc
10015f96:	push   0x1006e2f8
10015f9b:	call   0x10003f5b
10015fa0:	push   eax
10015fa1:	lea    eax,[esp+0x18]
10015fa5:	push   eax
10015fa6:	call   0x10044e99
10015fab:	add    esp,0x1c
10015fae:	test   eax,eax
10015fb0:	je     0x10015fc1
10015fb2:	mov    DWORD PTR ds:0x1007fc5c,0x1
10015fbc:	jmp    0x10016071
10015fc1:	push   0x4b2d74f0
10015fc6:	push   0x5bec7c90
10015fcb:	push   0x3d3d9244
10015fd0:	push   0x1006e314
10015fd5:	call   0x10003d63
10015fda:	pop    ecx
10015fdb:	pop    ecx
10015fdc:	push   eax
10015fdd:	call   0x10003d63
10015fe2:	pop    ecx
10015fe3:	pop    ecx
10015fe4:	push   eax
10015fe5:	call   0x10003d63
10015fea:	push   eax
10015feb:	push   0xb
10015fed:	push   0x1006e338
10015ff2:	call   0x10003f5b
10015ff7:	push   eax
10015ff8:	lea    eax,[esp+0x18]
10015ffc:	push   eax
10015ffd:	call   0x10044e99
10016002:	add    esp,0x1c
10016005:	test   eax,eax
10016007:	je     0x10016015
10016009:	mov    DWORD PTR ds:0x1007fc5c,0x2
10016013:	jmp    0x10016071
10016015:	push   0x1006e350
1001601a:	push   0x9
1001601c:	push   0x1006e380
10016021:	call   0x10003f5b
10016026:	push   eax
10016027:	lea    eax,[esp+0x10]
1001602b:	push   eax
1001602c:	call   0x10044e99
10016031:	add    esp,0x14
10016034:	test   eax,eax
10016036:	je     0x10016044
10016038:	mov    DWORD PTR ds:0x1007fc5c,0x4
10016042:	jmp    0x10016071
10016044:	push   0x1006e394
10016049:	push   0xa
1001604b:	push   0x1006e3d4
10016050:	call   0x10003f5b
10016055:	push   eax
10016056:	lea    eax,[esp+0x10]
1001605a:	push   eax
1001605b:	call   0x10044e99
10016060:	add    esp,0x14
10016063:	test   eax,eax
10016065:	je     0x10016071
10016067:	mov    DWORD PTR ds:0x1007fc5c,0x3
10016071:	mov    BYTE PTR ds:0x1007ffb4,0x1
10016078:	mov    ecx,DWORD PTR [esp+0x20c]
1001607f:	xor    ecx,esp
10016081:	call   0x10041d97
10016086:	mov    esp,ebp
10016088:	pop    ebp
10016089:	ret    
1001608a:	call   DWORD PTR ds:0x1007dfe4
10016090:	push   0x1007fc38
10016095:	call   DWORD PTR ds:0x1006511c
1001609b:	mov    eax,ds:0x1007fc5c
100160a0:	test   eax,eax
100160a2:	je     0x10016137
100160a8:	push   eax
100160a9:	call   0x1000207c
100160ae:	pop    ecx
100160af:	push   0x279686d2
100160b4:	push   0x89e1cea
100160b9:	push   0x65db7336
100160be:	push   0x1006e3ec
100160c3:	call   0x10003d63
100160c8:	pop    ecx
100160c9:	pop    ecx
100160ca:	push   eax
100160cb:	call   0x10003d63
100160d0:	pop    ecx
100160d1:	pop    ecx
100160d2:	push   eax
100160d3:	call   0x10003d63
100160d8:	push   eax
100160d9:	push   0xb
100160db:	push   0x1006e42c
100160e0:	call   0x10003f5b
100160e5:	add    esp,0x14
100160e8:	push   eax
100160e9:	call   DWORD PTR ds:0x100650f8
100160ef:	test   eax,eax
100160f1:	mov    ds:0x1007fd18,eax
100160f6:	je     0x10016137
100160f8:	push   0x3a0229de
100160fd:	push   0x1006e448
10016102:	call   0x10003d63
10016107:	push   eax
10016108:	push   0xa
1001610a:	push   0x1006e488
1001610f:	call   0x10003d75
10016114:	add    esp,0x14
10016117:	push   eax
10016118:	push   DWORD PTR ds:0x1007fd18
1001611e:	call   DWORD PTR ds:0x1006512c
10016124:	push   0x10015e8b
10016129:	push   eax
1001612a:	call   0x100562e0
1001612f:	mov    ds:0x1007fc50,eax
10016134:	mov    al,0x1
10016136:	ret    
10016137:	xor    al,al
10016139:	ret    
1001613a:	push   0x10
1001613c:	push   0x1007ab78
10016141:	call   0x100459e4
10016146:	xor    ebx,ebx
10016148:	push   ebx
10016149:	push   0x12
1001614b:	call   0x10015a96
10016150:	pop    ecx
10016151:	pop    ecx
10016152:	mov    DWORD PTR [ebp-0x20],eax
10016155:	mov    DWORD PTR [ebp-0x1c],edx
10016158:	mov    eax,DWORD PTR [ebp+0xc]
1001615b:	sub    eax,ebx
1001615d:	je     0x10016202
10016163:	dec    eax
10016164:	jne    0x10016260
1001616a:	call   0x10015f11
1001616f:	cmp    DWORD PTR ds:0x1007fd1c,ebx
10016175:	jne    0x100161a5
10016177:	mov    eax,DWORD PTR [ebp+0x8]
1001617a:	mov    ds:0x1007fd14,eax
1001617f:	call   0x10026371
10016184:	call   0x100182b8
10016189:	test   al,al
1001618b:	je     0x10016197
1001618d:	call   0x1001608a
10016192:	mov    ds:0x1007ffb5,al
10016197:	cmp    DWORD PTR ds:0x1007fc5c,0x2
1001619e:	jne    0x100161a5
100161a0:	call   0x10006f22
100161a5:	inc    DWORD PTR ds:0x1007fd1c
100161ab:	mov    DWORD PTR [ebp-0x4],ebx
100161ae:	mov    DWORD PTR ds:0x1007fbe4,0x1007fe68
100161b8:	mov    esi,0x1006e198
100161bd:	mov    edi,0x1007fbe8
100161c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100161c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100161c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100161c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100161c6:	push   ebx
100161c7:	push   0xe6
100161cc:	call   0x10015a96
100161d1:	pop    ecx
100161d2:	pop    ecx
100161d3:	mov    esi,eax
100161d5:	call   DWORD PTR ds:0x10065118
100161db:	add    esi,DWORD PTR [ebp-0x20]
100161de:	add    eax,esi
100161e0:	push   eax
100161e1:	call   0x1004515a
100161e6:	pop    ecx
100161e7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100161ee:	jmp    0x10016260
100161f0:	xor    eax,eax
100161f2:	inc    eax
100161f3:	ret    
100161f4:	mov    esp,DWORD PTR [ebp-0x18]
100161f7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100161fe:	xor    eax,eax
10016200:	jmp    0x10016263
10016202:	dec    DWORD PTR ds:0x1007fd1c
10016208:	jne    0x10016260
1001620a:	cmp    BYTE PTR ds:0x1007ffb5,bl
10016210:	je     0x10016260
10016212:	xor    eax,eax
10016214:	cmp    DWORD PTR ds:0x1007fc5c,ebx
1001621a:	je     0x1001621d
1001621c:	inc    eax
1001621d:	cmp    eax,ebx
1001621f:	je     0x1001623c
10016221:	push   0x10015e8b
10016226:	push   DWORD PTR ds:0x1007fc50
1001622c:	call   0x10056090
10016231:	push   0x1007fc38
10016236:	call   DWORD PTR ds:0x10065138
1001623c:	mov    BYTE PTR ds:0x1007ffb5,bl
10016242:	mov    eax,ds:0x1007fc5c
10016247:	dec    eax
10016248:	je     0x10016258
1001624a:	dec    eax
1001624b:	je     0x10016254
1001624d:	dec    eax
1001624e:	jne    0x10016260
10016250:	push   0xb
10016252:	jmp    0x1001625a
10016254:	push   0x3
10016256:	jmp    0x1001625a
10016258:	push   0x1
1001625a:	call   0x10037620
1001625f:	pop    ecx
10016260:	xor    eax,eax
10016262:	inc    eax
10016263:	call   0x10045a29
10016268:	ret    0xc
1001626b:	push   0x14
1001626d:	mov    eax,0x1006304e
10016272:	call   0x10058845
10016277:	push   DWORD PTR [ebp+0x8]
1001627a:	call   0x10015c25
1001627f:	pop    ecx
10016280:	mov    DWORD PTR [ebp-0x10],eax
10016283:	xor    ebx,ebx
10016285:	cmp    eax,ebx
10016287:	mov    DWORD PTR [ebp-0x4],ebx
1001628a:	jne    0x100162ac
1001628c:	push   DWORD PTR [ebp+0xc]
1001628f:	push   DWORD PTR [ebp+0x8]
10016292:	call   DWORD PTR ds:0x1007fc78
10016298:	lea    ecx,[ebp-0x10]
1001629b:	mov    esi,eax
1001629d:	call   0x10015ad1
100162a2:	mov    eax,esi
100162a4:	call   0x1005891d
100162a9:	ret    0x8
100162ac:	mov    esi,DWORD PTR ds:0x100650f0
100162b2:	add    eax,0x4
100162b5:	push   eax
100162b6:	call   esi
100162b8:	mov    eax,DWORD PTR [ebp-0x10]
100162bb:	cmp    BYTE PTR [eax+0x27],bl
100162be:	jne    0x10016374
100162c4:	push   DWORD PTR [eax+0x30]
100162c7:	call   DWORD PTR ds:0x10065110
100162cd:	mov    eax,DWORD PTR [ebp-0x10]
100162d0:	mov    edi,DWORD PTR ds:0x100650ec
100162d6:	mov    BYTE PTR [eax+0x27],0x1
100162da:	jmp    0x100162f3
100162dc:	add    eax,0x4
100162df:	push   eax
100162e0:	call   edi
100162e2:	push   0x64
100162e4:	call   DWORD PTR ds:0x100650b8
100162ea:	mov    eax,DWORD PTR [ebp-0x10]
100162ed:	add    eax,0x4
100162f0:	push   eax
100162f1:	call   esi
100162f3:	mov    eax,DWORD PTR [ebp-0x10]
100162f6:	mov    eax,DWORD PTR [eax+0x20]
100162f9:	cmp    eax,0x1
100162fc:	mov    eax,DWORD PTR [ebp-0x10]
100162ff:	jg     0x100162dc
10016301:	push   DWORD PTR [eax+0x34]
10016304:	call   DWORD PTR ds:0x10065110
1001630a:	mov    eax,DWORD PTR [ebp-0x10]
1001630d:	xor    ecx,ecx
1001630f:	cmp    BYTE PTR [eax+0x26],bl
10016312:	sete   cl
10016315:	add    eax,0x4
10016318:	push   eax
10016319:	mov    DWORD PTR [ebp-0x20],ecx
1001631c:	call   edi
1001631e:	push   0x1007fc38
10016323:	call   esi
10016325:	lea    edx,[ebp+0x8]
10016328:	call   0x1001765e
1001632d:	push   0x1007fc38
10016332:	call   edi
10016334:	mov    eax,DWORD PTR [ebp-0x10]
10016337:	add    eax,0x4
1001633a:	push   eax
1001633b:	call   esi
1001633d:	mov    esi,DWORD PTR [ebp-0x10]
10016340:	call   0x10015bdf
10016345:	lea    eax,[ebp-0x18]
10016348:	push   eax
10016349:	push   ebx
1001634a:	push   ebx
1001634b:	push   ebx
1001634c:	lea    eax,[ebp-0x1c]
1001634f:	push   eax
10016350:	push   ebx
10016351:	push   ebx
10016352:	push   0x4
10016354:	lea    eax,[ebp-0x20]
10016357:	push   eax
10016358:	push   0x8004667e
1001635d:	push   DWORD PTR [ebp+0x8]
10016360:	mov    DWORD PTR [ebp-0x10],ebx
10016363:	mov    DWORD PTR [ebp-0x1c],ebx
10016366:	mov    DWORD PTR [ebp-0x18],ebx
10016369:	call   DWORD PTR ds:0x1007fca0
1001636f:	jmp    0x1001628c
10016374:	mov    ecx,DWORD PTR [eax+0x34]
10016377:	mov    esi,DWORD PTR ds:0x10065108
1001637d:	push   0x2
1001637f:	push   0x1
10016381:	mov    edi,eax
10016383:	push   ebx
10016384:	lea    eax,[ebp-0x14]
10016387:	push   eax
10016388:	mov    DWORD PTR [ebp-0x14],ecx
1001638b:	call   esi
1001638d:	push   eax
1001638e:	push   DWORD PTR [edi+0x34]
10016391:	call   esi
10016393:	push   eax
10016394:	call   DWORD PTR ds:0x1006513c
1001639a:	mov    esi,eax
1001639c:	mov    eax,DWORD PTR [ebp-0x10]
1001639f:	add    eax,0x4
100163a2:	push   eax
100163a3:	call   DWORD PTR ds:0x100650ec
100163a9:	cmp    esi,ebx
100163ab:	je     0x100163b8
100163ad:	push   0xffffffff
100163af:	push   DWORD PTR [ebp-0x14]
100163b2:	call   DWORD PTR ds:0x10065084
100163b8:	mov    ecx,DWORD PTR [ebp+0xc]
100163bb:	or     eax,0xffffffff
100163be:	mov    DWORD PTR [ecx],0x2736
100163c4:	jmp    0x10016298
100163c9:	push   0x4
100163cb:	mov    eax,0x10063d09
100163d0:	call   0x10058845
100163d5:	mov    esi,DWORD PTR [ebp+0xc]
100163d8:	cmp    WORD PTR [esi],0x2
100163dc:	jne    0x1001641f
100163de:	mov    eax,DWORD PTR [esi+0x4]
100163e1:	push   eax
100163e2:	mov    DWORD PTR [ebp-0x10],eax
100163e5:	call   DWORD PTR ds:0x100653a8
100163eb:	mov    ebx,eax
100163ed:	call   0x10017174
100163f2:	test   al,al
100163f4:	je     0x1001641f
100163f6:	movzx  eax,BYTE PTR [ebp-0xd]
100163fa:	push   eax
100163fb:	movzx  eax,BYTE PTR [ebp-0xe]
100163ff:	push   eax
10016400:	movzx  eax,BYTE PTR [ebp-0xf]
10016404:	push   eax
10016405:	movzx  eax,BYTE PTR [ebp-0x10]
10016409:	push   eax
1001640a:	call   0x1000207c
1001640f:	add    esp,0x10
10016412:	mov    eax,0x274d
10016417:	call   0x1005891d
1001641c:	ret    0x20
1001641f:	mov    ebx,DWORD PTR [ebp+0x8]
10016422:	push   ebx
10016423:	call   0x10015c25
10016428:	pop    ecx
10016429:	mov    DWORD PTR [ebp+0xc],eax
1001642c:	and    DWORD PTR [ebp-0x4],0x0
10016430:	test   eax,eax
10016432:	jne    0x1001645c
10016434:	push   DWORD PTR [ebp+0x24]
10016437:	push   DWORD PTR [ebp+0x20]
1001643a:	push   DWORD PTR [ebp+0x1c]
1001643d:	push   DWORD PTR [ebp+0x18]
10016440:	push   DWORD PTR [ebp+0x14]
10016443:	push   DWORD PTR [ebp+0x10]
10016446:	push   esi
10016447:	push   ebx
10016448:	call   DWORD PTR ds:0x1007fc7c
1001644e:	mov    esi,eax
10016450:	lea    ecx,[ebp+0xc]
10016453:	call   0x10015ad1
10016458:	mov    eax,esi
1001645a:	jmp    0x10016417
1001645c:	mov    edi,DWORD PTR [ebp+0x24]
1001645f:	push   edi
10016460:	push   DWORD PTR [ebp+0x20]
10016463:	push   DWORD PTR [ebp+0x1c]
10016466:	push   DWORD PTR [ebp+0x18]
10016469:	push   DWORD PTR [ebp+0x14]
1001646c:	push   DWORD PTR [ebp+0x10]
1001646f:	push   esi
10016470:	push   ebx
10016471:	call   DWORD PTR [eax+0x58]
10016474:	cmp    eax,0xffffffff
10016477:	mov    DWORD PTR [ebp+0x24],eax
1001647a:	jne    0x100164a7
1001647c:	mov    edi,DWORD PTR [edi]
1001647e:	cmp    edi,0x2733
10016484:	jne    0x1001649c
10016486:	mov    eax,DWORD PTR [ebp+0xc]
10016489:	add    eax,0x4
1001648c:	push   eax
1001648d:	call   DWORD PTR ds:0x100650f0
10016493:	mov    eax,DWORD PTR [ebp+0xc]
10016496:	mov    BYTE PTR [eax+0x24],0x1
1001649a:	jmp    0x100164bc
1001649c:	push   edi
1001649d:	push   ebx
1001649e:	call   0x1000207c
100164a3:	pop    ecx
100164a4:	pop    ecx
100164a5:	jmp    0x100164c9
100164a7:	mov    eax,DWORD PTR [ebp+0xc]
100164aa:	add    eax,0x4
100164ad:	push   eax
100164ae:	call   DWORD PTR ds:0x100650f0
100164b4:	mov    esi,DWORD PTR [ebp+0xc]
100164b7:	call   0x10015dfd
100164bc:	mov    eax,DWORD PTR [ebp+0xc]
100164bf:	add    eax,0x4
100164c2:	push   eax
100164c3:	call   DWORD PTR ds:0x100650ec
100164c9:	mov    esi,DWORD PTR [ebp+0x24]
100164cc:	jmp    0x10016450
100164ce:	push   0x4
100164d0:	mov    eax,0x1005e92f
100164d5:	call   0x10058845
100164da:	push   DWORD PTR [ebp+0x8]
100164dd:	or     edi,0xffffffff
100164e0:	call   0x10015c25
100164e5:	pop    ecx
100164e6:	mov    DWORD PTR [ebp-0x10],eax
100164e9:	mov    esi,DWORD PTR [ebp+0x10]
100164ec:	xor    ebx,ebx
100164ee:	cmp    eax,ebx
100164f0:	mov    DWORD PTR [ebp-0x4],ebx
100164f3:	je     0x10016562
100164f5:	cmp    DWORD PTR [ebp+0xc],0x4004667f
100164fc:	je     0x10016526
100164fe:	cmp    DWORD PTR [ebp+0xc],0x8004667e
10016505:	jne    0x10016562
10016507:	add    eax,0x4
1001650a:	push   eax
1001650b:	call   DWORD PTR ds:0x100650f0
10016511:	cmp    DWORD PTR [esi],ebx
10016513:	mov    ecx,DWORD PTR [ebp-0x10]
10016516:	sete   al
10016519:	mov    BYTE PTR [ecx+0x26],al
1001651c:	mov    eax,DWORD PTR [ebp-0x10]
1001651f:	cmp    BYTE PTR [eax+0x25],bl
10016522:	je     0x10016553
10016524:	jmp    0x10016551
10016526:	add    eax,0x4
10016529:	push   eax
1001652a:	call   DWORD PTR ds:0x100650f0
10016530:	mov    eax,DWORD PTR [ebp-0x10]
10016533:	cmp    BYTE PTR [eax+0x25],bl
10016536:	je     0x10016553
10016538:	mov    eax,DWORD PTR [eax+0x1c]
1001653b:	call   0x100255af
10016540:	cmp    eax,ebx
10016542:	mov    DWORD PTR [esi],ebx
10016544:	je     0x1001654e
10016546:	mov    ecx,DWORD PTR [eax+0x18]
10016549:	sub    ecx,DWORD PTR [eax+0x20]
1001654c:	mov    DWORD PTR [esi],ecx
1001654e:	mov    eax,DWORD PTR [ebp-0x10]
10016551:	xor    edi,edi
10016553:	add    eax,0x4
10016556:	push   eax
10016557:	call   DWORD PTR ds:0x100650ec
1001655d:	cmp    edi,0xffffffff
10016560:	jne    0x10016589
10016562:	push   DWORD PTR [ebp+0x30]
10016565:	push   DWORD PTR [ebp+0x2c]
10016568:	push   DWORD PTR [ebp+0x28]
1001656b:	push   DWORD PTR [ebp+0x24]
1001656e:	push   DWORD PTR [ebp+0x20]
10016571:	push   DWORD PTR [ebp+0x1c]
10016574:	push   DWORD PTR [ebp+0x18]
10016577:	push   DWORD PTR [ebp+0x14]
1001657a:	push   esi
1001657b:	push   DWORD PTR [ebp+0xc]
1001657e:	push   DWORD PTR [ebp+0x8]
10016581:	call   DWORD PTR ds:0x1007fca0
10016587:	mov    edi,eax
10016589:	lea    ecx,[ebp-0x10]
1001658c:	call   0x10015ad1
10016591:	mov    eax,edi
10016593:	call   0x1005891d
10016598:	ret    0x2c
1001659b:	push   ebp
1001659c:	mov    ebp,esp
1001659e:	sub    esp,0x10
100165a1:	or     DWORD PTR [ebp-0x4],0xffffffff
100165a5:	push   ebx
100165a6:	push   edi
100165a7:	mov    edi,DWORD PTR ds:0x100650f0
100165ad:	lea    eax,[esi+0x4]
100165b0:	push   eax
100165b1:	mov    DWORD PTR [ebp-0x8],eax
100165b4:	call   edi
100165b6:	xor    ebx,ebx
100165b8:	cmp    DWORD PTR [esi+0x38],ebx
100165bb:	je     0x100165d3
100165bd:	mov    eax,DWORD PTR [ebp+0xc]
100165c0:	mov    ecx,DWORD PTR [ebp+0x14]
100165c3:	or     DWORD PTR [ebp-0x4],0xffffffff
100165c7:	mov    DWORD PTR [eax],ebx
100165c9:	mov    eax,DWORD PTR [esi+0x38]
100165cc:	mov    DWORD PTR [ecx],eax
100165ce:	jmp    0x10016681
100165d3:	cmp    BYTE PTR [esi+0x26],bl
100165d6:	je     0x10016601
100165d8:	push   DWORD PTR [ebp-0x8]
100165db:	call   DWORD PTR ds:0x100650ec
100165e1:	mov    eax,DWORD PTR [esi+0x28]
100165e4:	mov    DWORD PTR [ebp-0x10],eax
100165e7:	mov    eax,DWORD PTR [esi+0x30]
100165ea:	push   0xffffffff
100165ec:	mov    DWORD PTR [ebp-0xc],eax
100165ef:	push   ebx
100165f0:	lea    eax,[ebp-0x10]
100165f3:	push   eax
100165f4:	push   0x2
100165f6:	call   DWORD PTR ds:0x100650e8
100165fc:	push   DWORD PTR [ebp-0x8]
100165ff:	call   edi
10016601:	mov    ebx,DWORD PTR [esi+0x1c]
10016604:	cmp    BYTE PTR [ebx+0x1],0x0
10016608:	je     0x10016632
1001660a:	lea    eax,[ebx+0x38]
1001660d:	push   eax
1001660e:	mov    DWORD PTR [ebp-0xc],eax
10016611:	call   edi
10016613:	push   DWORD PTR [ebp-0xc]
10016616:	xor    edi,edi
10016618:	cmp    DWORD PTR [ebx+0x28],edi
1001661b:	setne  bl
1001661e:	call   DWORD PTR ds:0x100650ec
10016624:	test   bl,bl
10016626:	jne    0x10016632
10016628:	mov    eax,DWORD PTR [ebp+0xc]
1001662b:	mov    DWORD PTR [eax],edi
1001662d:	mov    DWORD PTR [ebp-0x4],edi
10016630:	jmp    0x10016681
10016632:	mov    eax,DWORD PTR [ebp+0x10]
10016635:	mov    eax,DWORD PTR [eax]
10016637:	mov    ebx,DWORD PTR [ebp+0x8]
1001663a:	mov    edi,DWORD PTR [esi+0x1c]
1001663d:	shr    eax,1
1001663f:	and    eax,0xffffff01
10016644:	push   eax
10016645:	push   DWORD PTR [ebx]
10016647:	mov    eax,DWORD PTR [ebp+0xc]
1001664a:	push   DWORD PTR [ebx+0x4]
1001664d:	call   0x10015d8d
10016652:	mov    ecx,DWORD PTR [ebp+0x10]
10016655:	xor    eax,eax
10016657:	mov    DWORD PTR [ecx],eax
10016659:	mov    ecx,DWORD PTR [ebp+0xc]
1001665c:	add    esp,0xc
1001665f:	cmp    DWORD PTR [ecx],eax
10016661:	jne    0x1001667e
10016663:	cmp    DWORD PTR [ebx+0x4],eax
10016666:	je     0x1001667e
10016668:	mov    al,BYTE PTR [esi+0x26]
1001666b:	mov    ecx,DWORD PTR [ebp+0x14]
1001666e:	neg    al
10016670:	sbb    eax,eax
10016672:	and    eax,0x13
10016675:	add    eax,0x2733
1001667a:	mov    DWORD PTR [ecx],eax
1001667c:	jmp    0x10016681
1001667e:	mov    DWORD PTR [ebp-0x4],eax
10016681:	push   DWORD PTR [ebp-0x8]
10016684:	call   DWORD PTR ds:0x100650ec
1001668a:	mov    eax,DWORD PTR [ebp-0x4]
1001668d:	pop    edi
1001668e:	pop    ebx
1001668f:	leave  
10016690:	ret    0x10
10016693:	push   0x4
10016695:	mov    eax,0x1005e92f
1001669a:	call   0x10058845
1001669f:	push   DWORD PTR [ebp+0x8]
100166a2:	call   0x10015c25
100166a7:	pop    ecx
100166a8:	mov    DWORD PTR [ebp-0x10],eax
100166ab:	mov    ecx,DWORD PTR [ebp+0x18]
100166ae:	xor    edx,edx
100166b0:	cmp    DWORD PTR [ebp+0x1c],edx
100166b3:	mov    DWORD PTR [ebp-0x4],edx
100166b6:	jne    0x100166d9
100166b8:	cmp    eax,edx
100166ba:	je     0x100166d9
100166bc:	cmp    BYTE PTR [eax+0x25],dl
100166bf:	je     0x100166d9
100166c1:	test   BYTE PTR [ecx],0x1
100166c4:	jne    0x100166d9
100166c6:	push   DWORD PTR [ebp+0x28]
100166c9:	mov    esi,eax
100166cb:	push   ecx
100166cc:	push   DWORD PTR [ebp+0x14]
100166cf:	push   DWORD PTR [ebp+0xc]
100166d2:	call   0x1001659b
100166d7:	jmp    0x100166f8
100166d9:	push   DWORD PTR [ebp+0x28]
100166dc:	push   DWORD PTR [ebp+0x24]
100166df:	push   DWORD PTR [ebp+0x20]
100166e2:	push   DWORD PTR [ebp+0x1c]
100166e5:	push   ecx
100166e6:	push   DWORD PTR [ebp+0x14]
100166e9:	push   DWORD PTR [ebp+0x10]
100166ec:	push   DWORD PTR [ebp+0xc]
100166ef:	push   DWORD PTR [ebp+0x8]
100166f2:	call   DWORD PTR ds:0x1007fcac
100166f8:	lea    ecx,[ebp-0x10]
100166fb:	mov    esi,eax
100166fd:	call   0x10015ad1
10016702:	mov    eax,esi
10016704:	call   0x1005891d
10016709:	ret    0x24
1001670c:	push   ebp
1001670d:	mov    ebp,esp
1001670f:	push   ecx
10016710:	mov    edx,DWORD PTR [ebp+0x8]
10016713:	xor    ecx,ecx
10016715:	mov    DWORD PTR [eax],ecx
10016717:	cmp    DWORD PTR [edx],ecx
10016719:	mov    DWORD PTR [ebp-0x4],ecx
1001671c:	jbe    0x10016761
1001671e:	push   ebx
1001671f:	push   esi
10016720:	push   edi
10016721:	lea    esi,[edx+0x4]
10016724:	mov    ebx,DWORD PTR [eax]
10016726:	xor    ecx,ecx
10016728:	test   ebx,ebx
1001672a:	jbe    0x10016740
1001672c:	mov    edi,DWORD PTR [esi]
1001672e:	lea    edx,[eax+0x4]
10016731:	cmp    DWORD PTR [edx],edi
10016733:	je     0x1001673d
10016735:	inc    ecx
10016736:	add    edx,0x4
10016739:	cmp    ecx,ebx
1001673b:	jb     0x10016731
1001673d:	mov    edx,DWORD PTR [ebp+0x8]
10016740:	cmp    ecx,ebx
10016742:	jne    0x10016751
10016744:	cmp    ebx,0x40
10016747:	jae    0x10016751
10016749:	mov    edi,DWORD PTR [esi]
1001674b:	mov    DWORD PTR [eax+ecx*4+0x4],edi
1001674f:	inc    DWORD PTR [eax]
10016751:	inc    DWORD PTR [ebp-0x4]
10016754:	mov    ecx,DWORD PTR [ebp-0x4]
10016757:	add    esi,0x4
1001675a:	cmp    ecx,DWORD PTR [edx]
1001675c:	jb     0x10016724
1001675e:	pop    edi
1001675f:	pop    esi
10016760:	pop    ebx
10016761:	leave  
10016762:	ret    
10016763:	push   ebp
10016764:	mov    ebp,esp
10016766:	and    esp,0xfffffff8
10016769:	push   0xffffffff
1001676b:	push   0x10063ce0
10016770:	mov    eax,fs:0x0
10016776:	push   eax
10016777:	sub    esp,0xa88
1001677d:	push   ebx
1001677e:	push   esi
1001677f:	push   edi
10016780:	mov    eax,ds:0x1007d030
10016785:	xor    eax,esp
10016787:	push   eax
10016788:	lea    eax,[esp+0xa98]
1001678f:	mov    fs:0x0,eax
10016795:	xor    ebx,ebx
10016797:	mov    DWORD PTR [esp+0x1c],ebx
1001679b:	or     DWORD PTR [esp+0x2c],0xffffffff
100167a0:	mov    edi,0x10015ad1
100167a5:	push   edi
100167a6:	mov    esi,0x10016f0f
100167ab:	push   esi
100167ac:	push   0x40
100167ae:	push   0x4
100167b0:	lea    eax,[esp+0x8a4]
100167b7:	push   eax
100167b8:	mov    DWORD PTR [esp+0xab4],ebx
100167bf:	call   0x10044b48
100167c4:	push   edi
100167c5:	push   esi
100167c6:	push   0x40
100167c8:	push   0x4
100167ca:	lea    eax,[esp+0x7a4]
100167d1:	push   eax
100167d2:	mov    BYTE PTR [esp+0xab4],0x1
100167da:	call   0x10044b48
100167df:	push   edi
100167e0:	push   esi
100167e1:	push   0x40
100167e3:	push   0x4
100167e5:	lea    eax,[esp+0x9a4]
100167ec:	push   eax
100167ed:	mov    BYTE PTR [esp+0xab4],0x2
100167f5:	call   0x10044b48
100167fa:	cmp    DWORD PTR [ebp+0xc],ebx
100167fd:	mov    BYTE PTR [esp+0xaa0],0x3
10016805:	mov    DWORD PTR [esp+0x28],ebx
10016809:	mov    DWORD PTR [esp+0x18],ebx
1001680d:	mov    DWORD PTR [esp+0x584],ebx
10016814:	je     0x100168fa
1001681a:	mov    eax,DWORD PTR [ebp+0xc]
1001681d:	mov    eax,DWORD PTR [eax]
1001681f:	cmp    eax,0x40
10016822:	jbe    0x10016832
10016824:	mov    eax,DWORD PTR [ebp+0x1c]
10016827:	mov    DWORD PTR [eax],0x2747
1001682d:	jmp    0x10016e97
10016832:	and    DWORD PTR [esp+0x14],0x0
10016837:	test   eax,eax
10016839:	jbe    0x100168fa
1001683f:	mov    edi,DWORD PTR [ebp+0xc]
10016842:	lea    ebx,[esp+0x894]
10016849:	add    edi,0x4
1001684c:	push   DWORD PTR [edi]
1001684e:	call   0x10015c25
10016853:	test   eax,eax
10016855:	pop    ecx
10016856:	mov    DWORD PTR [esp+0x20],eax
1001685a:	je     0x100168a5
1001685c:	cmp    BYTE PTR [eax+0x25],0x0
10016860:	je     0x100168a5
10016862:	cmp    DWORD PTR [esp+0x1c],0x0
10016867:	jne    0x10016878
10016869:	push   0x1
1001686b:	lea    esi,[esp+0x20]
1001686f:	call   0x10015ae4
10016874:	mov    eax,DWORD PTR [esp+0x20]
10016878:	push   0x1
1001687a:	mov    esi,ebx
1001687c:	call   0x10015ae4
10016881:	inc    DWORD PTR [esp+0x28]
10016885:	and    DWORD PTR [esp+0x30],0x0
1001688a:	push   0x1
1001688c:	xor    eax,eax
1001688e:	lea    esi,[esp+0x24]
10016892:	add    ebx,0x4
10016895:	call   0x10015ae4
1001689a:	lea    ecx,[esp+0x30]
1001689e:	call   0x10015ad1
100168a3:	jmp    0x100168db
100168a5:	mov    edx,DWORD PTR [esp+0x584]
100168ac:	xor    eax,eax
100168ae:	test   edx,edx
100168b0:	jbe    0x100168c2
100168b2:	mov    ecx,DWORD PTR [edi]
100168b4:	cmp    DWORD PTR [esp+eax*4+0x588],ecx
100168bb:	je     0x100168c2
100168bd:	inc    eax
100168be:	cmp    eax,edx
100168c0:	jb     0x100168b4
100168c2:	cmp    eax,edx
100168c4:	jne    0x100168db
100168c6:	cmp    edx,0x40
100168c9:	jae    0x100168db
100168cb:	mov    ecx,DWORD PTR [edi]
100168cd:	mov    DWORD PTR [esp+eax*4+0x588],ecx
100168d4:	inc    DWORD PTR [esp+0x584]
100168db:	lea    ecx,[esp+0x20]
100168df:	call   0x10015ad1
100168e4:	inc    DWORD PTR [esp+0x14]
100168e8:	mov    eax,DWORD PTR [ebp+0xc]
100168eb:	mov    ecx,DWORD PTR [esp+0x14]
100168ef:	add    edi,0x4
100168f2:	cmp    ecx,DWORD PTR [eax]
100168f4:	jb     0x1001684c
100168fa:	mov    esi,DWORD PTR [ebp+0x10]
100168fd:	and    DWORD PTR [esp+0x5c],0x0
10016902:	and    DWORD PTR [esp+0x47c],0x0
1001690a:	test   esi,esi
1001690c:	je     0x10016a20
10016912:	mov    eax,DWORD PTR [esi]
10016914:	cmp    eax,0x40
10016917:	ja     0x10016824
1001691d:	and    DWORD PTR [esp+0x14],0x0
10016922:	test   eax,eax
10016924:	jbe    0x10016a20
1001692a:	lea    ebx,[esp+0x794]
10016931:	lea    edi,[esi+0x4]
10016934:	push   DWORD PTR [edi]
10016936:	call   0x10015c25
1001693b:	test   eax,eax
1001693d:	pop    ecx
1001693e:	mov    DWORD PTR [esp+0x20],eax
10016942:	jne    0x10016969
10016944:	mov    edx,DWORD PTR [esp+0x5c]
10016948:	test   edx,edx
1001694a:	jbe    0x10016959
1001694c:	mov    ecx,DWORD PTR [edi]
1001694e:	cmp    DWORD PTR [esp+eax*4+0x60],ecx
10016952:	je     0x10016959
10016954:	inc    eax
10016955:	cmp    eax,edx
10016957:	jb     0x1001694e
10016959:	cmp    eax,edx
1001695b:	jne    0x10016a04
10016961:	cmp    edx,0x40
10016964:	jmp    0x100169f8
10016969:	cmp    BYTE PTR [eax+0x25],0x0
1001696d:	je     0x1001699a
1001696f:	cmp    DWORD PTR [esp+0x1c],0x0
10016974:	jne    0x10016985
10016976:	push   0x1
10016978:	lea    esi,[esp+0x20]
1001697c:	call   0x10015ae4
10016981:	mov    eax,DWORD PTR [esp+0x20]
10016985:	push   0x1
10016987:	mov    esi,ebx
10016989:	call   0x10015ae4
1001698e:	inc    DWORD PTR [esp+0x18]
10016992:	mov    esi,DWORD PTR [ebp+0x10]
10016995:	add    ebx,0x4
10016998:	jmp    0x10016a04
1001699a:	cmp    BYTE PTR [eax+0x24],0x0
1001699e:	je     0x100169d6
100169a0:	mov    edx,DWORD PTR [esp+0x47c]
100169a7:	xor    eax,eax
100169a9:	test   edx,edx
100169ab:	jbe    0x100169bd
100169ad:	mov    ecx,DWORD PTR [edi]
100169af:	cmp    DWORD PTR [esp+eax*4+0x480],ecx
100169b6:	je     0x100169bd
100169b8:	inc    eax
100169b9:	cmp    eax,edx
100169bb:	jb     0x100169af
100169bd:	cmp    eax,edx
100169bf:	jne    0x100169d6
100169c1:	cmp    edx,0x40
100169c4:	jae    0x100169d6
100169c6:	mov    ecx,DWORD PTR [edi]
100169c8:	mov    DWORD PTR [esp+eax*4+0x480],ecx
100169cf:	inc    DWORD PTR [esp+0x47c]
100169d6:	xor    eax,eax
100169d8:	cmp    eax,DWORD PTR [esp+0x5c]
100169dc:	jae    0x100169f1
100169de:	mov    ecx,DWORD PTR [edi]
100169e0:	cmp    DWORD PTR [esp+eax*4+0x60],ecx
100169e4:	je     0x100169ed
100169e6:	inc    eax
100169e7:	cmp    eax,DWORD PTR [esp+0x5c]
100169eb:	jb     0x100169e0
100169ed:	cmp    eax,DWORD PTR [esp+0x5c]
100169f1:	jne    0x10016a04
100169f3:	cmp    DWORD PTR [esp+0x5c],0x40
100169f8:	jae    0x10016a04
100169fa:	mov    ecx,DWORD PTR [edi]
100169fc:	mov    DWORD PTR [esp+eax*4+0x60],ecx
10016a00:	inc    DWORD PTR [esp+0x5c]
10016a04:	lea    ecx,[esp+0x20]
10016a08:	call   0x10015ad1
10016a0d:	inc    DWORD PTR [esp+0x14]
10016a11:	mov    eax,DWORD PTR [esp+0x14]
10016a15:	add    edi,0x4
10016a18:	cmp    eax,DWORD PTR [esi]
10016a1a:	jb     0x10016934
10016a20:	mov    edi,DWORD PTR [ebp+0x14]
10016a23:	xor    ebx,ebx
10016a25:	cmp    edi,ebx
10016a27:	mov    DWORD PTR [esp+0x164],ebx
10016a2e:	je     0x10016a90
10016a30:	mov    eax,DWORD PTR [edi]
10016a32:	cmp    eax,0x40
10016a35:	ja     0x10016824
10016a3b:	cmp    eax,ebx
10016a3d:	jbe    0x10016a90
10016a3f:	lea    ecx,[edi+0x4]
10016a42:	mov    esi,eax
10016a44:	xor    eax,eax
10016a46:	cmp    DWORD PTR [esp+0x164],ebx
10016a4d:	jbe    0x10016a64
10016a4f:	mov    edx,DWORD PTR [ecx]
10016a51:	cmp    DWORD PTR [esp+eax*4+0x168],edx
10016a58:	je     0x10016a64
10016a5a:	inc    eax
10016a5b:	cmp    eax,DWORD PTR [esp+0x164]
10016a62:	jb     0x10016a51
10016a64:	cmp    eax,DWORD PTR [esp+0x164]
10016a6b:	jne    0x10016a87
10016a6d:	cmp    DWORD PTR [esp+0x164],0x40
10016a75:	jae    0x10016a87
10016a77:	mov    edx,DWORD PTR [ecx]
10016a79:	mov    DWORD PTR [esp+eax*4+0x168],edx
10016a80:	inc    DWORD PTR [esp+0x164]
10016a87:	add    ecx,0x4
10016a8a:	dec    esi
10016a8b:	jne    0x10016a44
10016a8d:	mov    esi,DWORD PTR [ebp+0x10]
10016a90:	mov    eax,DWORD PTR [esp+0x1c]
10016a94:	cmp    eax,ebx
10016a96:	je     0x10016ddb
10016a9c:	cmp    BYTE PTR [eax+0x25],0x0
10016aa0:	je     0x10016ddb
10016aa6:	xor    eax,eax
10016aa8:	mov    WORD PTR [esp+0x3c],bx
10016aad:	lea    edi,[esp+0x3e]
10016ab1:	stos   DWORD PTR es:[edi],eax
10016ab2:	stos   DWORD PTR es:[edi],eax
10016ab3:	stos   DWORD PTR es:[edi],eax
10016ab4:	stos   WORD PTR es:[edi],ax
10016ab6:	xor    eax,eax
10016ab8:	mov    DWORD PTR [esp+0x20],ebx
10016abc:	lea    edi,[esp+0x24]
10016ac0:	stos   DWORD PTR es:[edi],eax
10016ac1:	lea    eax,[esp+0x3c]
10016ac5:	push   eax
10016ac6:	call   DWORD PTR ds:0x10065140
10016acc:	lea    eax,[esp+0x20]
10016ad0:	push   eax
10016ad1:	lea    eax,[esp+0x40]
10016ad5:	push   eax
10016ad6:	call   DWORD PTR ds:0x10065104
10016adc:	mov    ecx,DWORD PTR [ebp+0x18]
10016adf:	xor    eax,eax
10016ae1:	cmp    ecx,ebx
10016ae3:	lea    edi,[esp+0x58]
10016ae7:	mov    DWORD PTR [esp+0x54],ebx
10016aeb:	stos   DWORD PTR es:[edi],eax
10016aec:	je     0x10016b18
10016aee:	mov    eax,DWORD PTR [ecx]
10016af0:	imul   eax,eax,0x3e8
10016af6:	add    eax,DWORD PTR [ecx+0x4]
10016af9:	imul   eax,eax,0x2710
10016aff:	cdq    
10016b00:	add    DWORD PTR [esp+0x20],eax
10016b04:	lea    eax,[esp+0x3c]
10016b08:	push   eax
10016b09:	adc    DWORD PTR [esp+0x28],edx
10016b0d:	lea    eax,[esp+0x24]
10016b11:	push   eax
10016b12:	call   DWORD PTR ds:0x10065120
10016b18:	mov    eax,DWORD PTR [esp+0x18]
10016b1c:	mov    ecx,DWORD PTR [esp+0x28]
10016b20:	add    eax,ecx
10016b22:	mov    DWORD PTR [esp+0x14],ebx
10016b26:	mov    DWORD PTR [esp+0x30],eax
10016b2a:	push   0x1
10016b2c:	call   DWORD PTR ds:0x100650b8
10016b32:	cmp    DWORD PTR [esp+0x584],ebx
10016b39:	mov    DWORD PTR [esp+0x26c],ebx
10016b40:	mov    DWORD PTR [esp+0x374],ebx
10016b47:	mov    DWORD PTR [esp+0x68c],ebx
10016b4e:	ja     0x10016b5f
10016b50:	cmp    DWORD PTR [esp+0x5c],ebx
10016b54:	ja     0x10016b5f
10016b56:	cmp    DWORD PTR [esp+0x164],ebx
10016b5d:	jbe    0x10016bc8
10016b5f:	lea    eax,[esp+0x584]
10016b66:	push   eax
10016b67:	lea    eax,[esp+0x270]
10016b6e:	call   0x1001670c
10016b73:	pop    ecx
10016b74:	lea    eax,[esp+0x5c]
10016b78:	push   eax
10016b79:	lea    eax,[esp+0x378]
10016b80:	call   0x1001670c
10016b85:	pop    ecx
10016b86:	lea    eax,[esp+0x164]
10016b8d:	push   eax
10016b8e:	lea    eax,[esp+0x690]
10016b95:	call   0x1001670c
10016b9a:	pop    ecx
10016b9b:	push   DWORD PTR [ebp+0x1c]
10016b9e:	lea    eax,[esp+0x58]
10016ba2:	push   eax
10016ba3:	lea    eax,[esp+0x694]
10016baa:	push   eax
10016bab:	lea    eax,[esp+0x380]
10016bb2:	push   eax
10016bb3:	lea    eax,[esp+0x27c]
10016bba:	push   eax
10016bbb:	push   DWORD PTR [ebp+0x8]
10016bbe:	mov    eax,DWORD PTR [esp+0x34]
10016bc2:	call   DWORD PTR [eax+0x94]
10016bc8:	cmp    DWORD PTR [esp+0x30],ebx
10016bcc:	jbe    0x10016d08
10016bd2:	xor    edi,edi
10016bd4:	cmp    DWORD PTR [esp+0x28],ebx
10016bd8:	je     0x10016c6d
10016bde:	lea    esi,[esp+edi*4+0x894]
10016be5:	mov    eax,DWORD PTR [esi]
10016be7:	add    eax,0x4
10016bea:	push   eax
10016beb:	call   DWORD PTR ds:0x100650f0
10016bf1:	mov    eax,DWORD PTR [esi]
10016bf3:	mov    ecx,DWORD PTR [eax+0x28]
10016bf6:	mov    DWORD PTR [esp+0x34],ecx
10016bfa:	mov    ecx,DWORD PTR [eax+0x30]
10016bfd:	mov    DWORD PTR [esp+0x38],ecx
10016c01:	cmp    DWORD PTR [eax+0x38],ebx
10016c04:	jne    0x10016c1c
10016c06:	push   ebx
10016c07:	push   ebx
10016c08:	lea    eax,[esp+0x3c]
10016c0c:	push   eax
10016c0d:	push   0x2
10016c0f:	call   DWORD PTR ds:0x100650e8
10016c15:	cmp    eax,0x102
10016c1a:	je     0x10016c56
10016c1c:	mov    edx,DWORD PTR [esp+0x26c]
10016c23:	xor    ecx,ecx
10016c25:	cmp    edx,ebx
10016c27:	jbe    0x10016c3b
10016c29:	mov    eax,DWORD PTR [esi]
10016c2b:	mov    eax,DWORD PTR [eax]
10016c2d:	cmp    DWORD PTR [esp+ecx*4+0x270],eax
10016c34:	je     0x10016c3b
10016c36:	inc    ecx
10016c37:	cmp    ecx,edx
10016c39:	jb     0x10016c2d
10016c3b:	cmp    ecx,edx
10016c3d:	jne    0x10016c56
10016c3f:	cmp    edx,0x40
10016c42:	jae    0x10016c56
10016c44:	mov    eax,DWORD PTR [esi]
10016c46:	mov    eax,DWORD PTR [eax]
10016c48:	mov    DWORD PTR [esp+ecx*4+0x270],eax
10016c4f:	inc    DWORD PTR [esp+0x26c]
10016c56:	mov    esi,DWORD PTR [esi]
10016c58:	add    esi,0x4
10016c5b:	push   esi
10016c5c:	call   DWORD PTR ds:0x100650ec
10016c62:	inc    edi
10016c63:	cmp    edi,DWORD PTR [esp+0x28]
10016c67:	jne    0x10016bde
10016c6d:	xor    edi,edi
10016c6f:	cmp    DWORD PTR [esp+0x18],ebx
10016c73:	je     0x10016d08
10016c79:	lea    esi,[esp+edi*4+0x794]
10016c80:	mov    eax,DWORD PTR [esi]
10016c82:	add    eax,0x4
10016c85:	push   eax
10016c86:	call   DWORD PTR ds:0x100650f0
10016c8c:	mov    eax,DWORD PTR [esi]
10016c8e:	mov    ecx,DWORD PTR [eax+0x2c]
10016c91:	mov    DWORD PTR [esp+0x34],ecx
10016c95:	mov    ecx,DWORD PTR [eax+0x30]
10016c98:	mov    DWORD PTR [esp+0x38],ecx
10016c9c:	cmp    DWORD PTR [eax+0x38],ebx
10016c9f:	jne    0x10016cb7
10016ca1:	push   ebx
10016ca2:	push   ebx
10016ca3:	lea    eax,[esp+0x3c]
10016ca7:	push   eax
10016ca8:	push   0x2
10016caa:	call   DWORD PTR ds:0x100650e8
10016cb0:	cmp    eax,0x102
10016cb5:	je     0x10016cf1
10016cb7:	mov    edx,DWORD PTR [esp+0x374]
10016cbe:	xor    ecx,ecx
10016cc0:	cmp    edx,ebx
10016cc2:	jbe    0x10016cd6
10016cc4:	mov    eax,DWORD PTR [esi]
10016cc6:	mov    eax,DWORD PTR [eax]
10016cc8:	cmp    DWORD PTR [esp+ecx*4+0x378],eax
10016ccf:	je     0x10016cd6
10016cd1:	inc    ecx
10016cd2:	cmp    ecx,edx
10016cd4:	jb     0x10016cc8
10016cd6:	cmp    ecx,edx
10016cd8:	jne    0x10016cf1
10016cda:	cmp    edx,0x40
10016cdd:	jae    0x10016cf1
10016cdf:	mov    eax,DWORD PTR [esi]
10016ce1:	mov    eax,DWORD PTR [eax]
10016ce3:	mov    DWORD PTR [esp+ecx*4+0x378],eax
10016cea:	inc    DWORD PTR [esp+0x374]
10016cf1:	mov    esi,DWORD PTR [esi]
10016cf3:	add    esi,0x4
10016cf6:	push   esi
10016cf7:	call   DWORD PTR ds:0x100650ec
10016cfd:	inc    edi
10016cfe:	cmp    edi,DWORD PTR [esp+0x18]
10016d02:	jne    0x10016c79
10016d08:	mov    eax,DWORD PTR [esp+0x68c]
10016d0f:	mov    ecx,DWORD PTR [esp+0x374]
10016d16:	lea    esi,[eax+ecx*1]
10016d19:	add    esi,DWORD PTR [esp+0x26c]
10016d20:	cmp    esi,ebx
10016d22:	mov    DWORD PTR [esp+0x2c],esi
10016d26:	jg     0x10016d91
10016d28:	cmp    DWORD PTR [ebp+0x18],ebx
10016d2b:	je     0x10016d72
10016d2d:	lea    eax,[esp+0x3c]
10016d31:	push   eax
10016d32:	call   DWORD PTR ds:0x10065140
10016d38:	xor    eax,eax
10016d3a:	mov    DWORD PTR [esp+0x4c],ebx
10016d3e:	lea    edi,[esp+0x50]
10016d42:	stos   DWORD PTR es:[edi],eax
10016d43:	lea    eax,[esp+0x3c]
10016d47:	push   eax
10016d48:	call   DWORD PTR ds:0x10065140
10016d4e:	lea    eax,[esp+0x4c]
10016d52:	push   eax
10016d53:	lea    eax,[esp+0x40]
10016d57:	push   eax
10016d58:	call   DWORD PTR ds:0x10065104
10016d5e:	lea    eax,[esp+0x20]
10016d62:	push   eax
10016d63:	lea    eax,[esp+0x50]
10016d67:	push   eax
10016d68:	call   DWORD PTR ds:0x1006510c
10016d6e:	test   eax,eax
10016d70:	jge    0x10016d91
10016d72:	push   DWORD PTR [esp+0x14]
10016d76:	call   DWORD PTR ds:0x100650b8
10016d7c:	cmp    DWORD PTR [esp+0x14],0x64
10016d81:	jae    0x10016b2a
10016d87:	add    DWORD PTR [esp+0x14],0x2
10016d8c:	jmp    0x10016b2a
10016d91:	cmp    esi,0xffffffff
10016d94:	je     0x10016e97
10016d9a:	mov    eax,DWORD PTR [ebp+0xc]
10016d9d:	test   eax,eax
10016d9f:	je     0x10016daf
10016da1:	lea    ecx,[esp+0x26c]
10016da8:	push   ecx
10016da9:	call   0x1001670c
10016dae:	pop    ecx
10016daf:	mov    eax,DWORD PTR [ebp+0x10]
10016db2:	test   eax,eax
10016db4:	je     0x10016dc4
10016db6:	lea    ecx,[esp+0x374]
10016dbd:	push   ecx
10016dbe:	call   0x1001670c
10016dc3:	pop    ecx
10016dc4:	mov    eax,DWORD PTR [ebp+0x14]
10016dc7:	test   eax,eax
10016dc9:	je     0x10016df3
10016dcb:	lea    ecx,[esp+0x68c]
10016dd2:	push   ecx
10016dd3:	call   0x1001670c
10016dd8:	pop    ecx
10016dd9:	jmp    0x10016df3
10016ddb:	push   DWORD PTR [ebp+0x1c]
10016dde:	push   DWORD PTR [ebp+0x18]
10016de1:	push   edi
10016de2:	push   esi
10016de3:	push   DWORD PTR [ebp+0xc]
10016de6:	push   DWORD PTR [ebp+0x8]
10016de9:	call   DWORD PTR ds:0x1007fcb8
10016def:	mov    DWORD PTR [esp+0x2c],eax
10016df3:	cmp    DWORD PTR [esp+0x2c],0xffffffff
10016df8:	je     0x10016e97
10016dfe:	cmp    DWORD PTR [ebp+0x10],0x0
10016e02:	je     0x10016e97
10016e08:	cmp    DWORD PTR [esp+0x47c],0x0
10016e10:	jbe    0x10016e97
10016e16:	xor    ebx,ebx
10016e18:	cmp    DWORD PTR [esp+0x47c],ebx
10016e1f:	je     0x10016e97
10016e21:	mov    edi,DWORD PTR [ebp+0x10]
10016e24:	add    edi,0x4
10016e27:	mov    esi,DWORD PTR [edi]
10016e29:	lea    eax,[esp+0x47c]
10016e30:	push   eax
10016e31:	push   esi
10016e32:	call   0x1004fafc
10016e37:	test   eax,eax
10016e39:	je     0x10016e8a
10016e3b:	push   esi
10016e3c:	call   0x10015c25
10016e41:	pop    ecx
10016e42:	mov    DWORD PTR [esp+0x18],eax
10016e46:	test   eax,eax
10016e48:	mov    BYTE PTR [esp+0xaa0],0x4
10016e50:	je     0x10016e81
10016e52:	add    eax,0x4
10016e55:	push   eax
10016e56:	call   DWORD PTR ds:0x100650f0
10016e5c:	mov    eax,DWORD PTR [esp+0x18]
10016e60:	cmp    BYTE PTR [eax+0x25],0x0
10016e64:	jne    0x10016e77
10016e66:	mov    BYTE PTR [eax+0x24],0x0
10016e6a:	mov    esi,DWORD PTR [esp+0x18]
10016e6e:	call   0x10015dfd
10016e73:	mov    eax,DWORD PTR [esp+0x18]
10016e77:	add    eax,0x4
10016e7a:	push   eax
10016e7b:	call   DWORD PTR ds:0x100650ec
10016e81:	lea    ecx,[esp+0x18]
10016e85:	call   0x10015ad1
10016e8a:	inc    ebx
10016e8b:	add    edi,0x4
10016e8e:	cmp    ebx,DWORD PTR [esp+0x47c]
10016e95:	jne    0x10016e27
10016e97:	mov    esi,0x10015ad1
10016e9c:	push   esi
10016e9d:	push   0x40
10016e9f:	push   0x4
10016ea1:	lea    eax,[esp+0x9a0]
10016ea8:	push   eax
10016ea9:	mov    BYTE PTR [esp+0xab0],0x2
10016eb1:	call   0x10041ff9
10016eb6:	push   esi
10016eb7:	push   0x40
10016eb9:	push   0x4
10016ebb:	lea    eax,[esp+0x7a0]
10016ec2:	push   eax
10016ec3:	mov    BYTE PTR [esp+0xab0],0x1
10016ecb:	call   0x10041ff9
10016ed0:	push   esi
10016ed1:	push   0x40
10016ed3:	push   0x4
10016ed5:	lea    eax,[esp+0x8a0]
10016edc:	push   eax
10016edd:	mov    BYTE PTR [esp+0xab0],0x0
10016ee5:	call   0x10041ff9
10016eea:	lea    ecx,[esp+0x1c]
10016eee:	call   0x10015ad1
10016ef3:	mov    eax,DWORD PTR [esp+0x2c]
10016ef7:	mov    ecx,DWORD PTR [esp+0xa98]
10016efe:	mov    DWORD PTR fs:0x0,ecx
10016f05:	pop    ecx
10016f06:	pop    edi
10016f07:	pop    esi
10016f08:	pop    ebx
10016f09:	mov    esp,ebp
10016f0b:	pop    ebp
10016f0c:	ret    0x18
10016f0f:	and    DWORD PTR [ecx],0x0
10016f12:	ret    
10016f13:	push   0x14
10016f15:	push   0x10073d10
10016f1a:	call   0x100459e4
10016f1f:	mov    ebx,DWORD PTR [ebp+0x8]
10016f22:	or     DWORD PTR [ebp-0x20],0xffffffff
10016f26:	xor    esi,esi
10016f28:	cmp    DWORD PTR [ebx+0x1c],esi
10016f2b:	je     0x10016fe6
10016f31:	cmp    DWORD PTR [ebx+0x38],esi
10016f34:	je     0x10016f49
10016f36:	mov    eax,DWORD PTR [ebp+0x14]
10016f39:	mov    DWORD PTR [eax],esi
10016f3b:	mov    eax,DWORD PTR [ebx+0x38]
10016f3e:	mov    DWORD PTR [ecx],eax
10016f40:	or     DWORD PTR [ebp-0x20],0xffffffff
10016f44:	jmp    0x10016fe6
10016f49:	mov    DWORD PTR [ebp-0x1c],esi
10016f4c:	mov    DWORD PTR [ebp-0x4],esi
10016f4f:	mov    eax,ebx
10016f51:	call   0x10015d33
10016f56:	xor    eax,eax
10016f58:	mov    DWORD PTR [ebp-0x24],eax
10016f5b:	cmp    eax,DWORD PTR [ebp+0x10]
10016f5e:	je     0x10016fbb
10016f60:	mov    ecx,DWORD PTR [ebp+0xc]
10016f63:	lea    edi,[ecx+eax*8]
10016f66:	mov    eax,DWORD PTR [edi]
10016f68:	mov    ecx,DWORD PTR [edi+0x4]
10016f6b:	mov    edx,DWORD PTR [ebx+0x1c]
10016f6e:	mov    esi,DWORD PTR [edx+0x30]
10016f71:	mov    DWORD PTR [esi+0xc],ecx
10016f74:	mov    DWORD PTR [esi+0x10],eax
10016f77:	mov    BYTE PTR [esi+0x18],0x0
10016f7b:	and    DWORD PTR [esi+0x14],0x0
10016f7f:	push   DWORD PTR [esi+0x4]
10016f82:	call   DWORD PTR ds:0x10065110
10016f88:	mov    eax,DWORD PTR [esi+0x8]
10016f8b:	push   0xffffffff
10016f8d:	push   eax
10016f8e:	call   DWORD PTR ds:0x10065084
10016f94:	mov    esi,DWORD PTR [esi+0x14]
10016f97:	add    DWORD PTR [ebp-0x1c],esi
10016f9a:	cmp    esi,DWORD PTR [edi]
10016f9c:	jae    0x10016faf
10016f9e:	cmp    BYTE PTR [ebx+0x26],0x0
10016fa2:	je     0x10016fb9
10016fa4:	push   0xc8
10016fa9:	call   DWORD PTR ds:0x100650b8
10016faf:	inc    DWORD PTR [ebp-0x24]
10016fb2:	mov    eax,DWORD PTR [ebp-0x24]
10016fb5:	xor    esi,esi
10016fb7:	jmp    0x10016f5b
10016fb9:	xor    esi,esi
10016fbb:	cmp    DWORD PTR [ebp-0x1c],esi
10016fbe:	jne    0x10016fcf
10016fc0:	mov    eax,DWORD PTR [ebx+0x20]
10016fc3:	cmp    eax,0x1
10016fc6:	mov    DWORD PTR [ebp-0x20],0x2746
10016fcd:	je     0x10016fd2
10016fcf:	mov    DWORD PTR [ebp-0x20],esi
10016fd2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10016fd9:	call   0x10016ff2
10016fde:	mov    eax,DWORD PTR [ebp+0x14]
10016fe1:	mov    ecx,DWORD PTR [ebp-0x1c]
10016fe4:	mov    DWORD PTR [eax],ecx
10016fe6:	mov    eax,DWORD PTR [ebp-0x20]
10016fe9:	call   0x10045a29
10016fee:	ret    
10016fef:	mov    ebx,DWORD PTR [ebp+0x8]
10016ff2:	add    ebx,0x4
10016ff5:	push   ebx
10016ff6:	call   DWORD PTR ds:0x100650ec
10016ffc:	ret    
10016ffd:	push   0x4
10016fff:	mov    eax,0x1005e92f
10017004:	call   0x10058845
10017009:	push   DWORD PTR [ebp+0x8]
1001700c:	call   0x10015c25
10017011:	pop    ecx
10017012:	mov    DWORD PTR [ebp-0x10],eax
10017015:	xor    ecx,ecx
10017017:	cmp    DWORD PTR [ebp+0x1c],ecx
1001701a:	mov    DWORD PTR [ebp-0x4],ecx
1001701d:	jne    0x1001703f
1001701f:	cmp    eax,ecx
10017021:	je     0x1001703f
10017023:	cmp    BYTE PTR [eax+0x25],cl
10017026:	je     0x1001703f
10017028:	push   DWORD PTR [ebp+0x14]
1001702b:	mov    ecx,DWORD PTR [ebp+0x28]
1001702e:	push   DWORD PTR [ebp+0x10]
10017031:	push   DWORD PTR [ebp+0xc]
10017034:	push   eax
10017035:	call   0x10016f13
1001703a:	add    esp,0x10
1001703d:	jmp    0x10017060
1001703f:	push   DWORD PTR [ebp+0x28]
10017042:	push   DWORD PTR [ebp+0x24]
10017045:	push   DWORD PTR [ebp+0x20]
10017048:	push   DWORD PTR [ebp+0x1c]
1001704b:	push   DWORD PTR [ebp+0x18]
1001704e:	push   DWORD PTR [ebp+0x14]
10017051:	push   DWORD PTR [ebp+0x10]
10017054:	push   DWORD PTR [ebp+0xc]
10017057:	push   DWORD PTR [ebp+0x8]
1001705a:	call   DWORD PTR ds:0x1007fcbc
10017060:	lea    ecx,[ebp-0x10]
10017063:	mov    esi,eax
10017065:	call   0x10015ad1
1001706a:	mov    eax,esi
1001706c:	call   0x1005891d
10017071:	ret    0x24
10017074:	push   0x10
10017076:	mov    eax,0x1006302b
1001707b:	call   0x10058878
10017080:	push   DWORD PTR [ebp+0x20]
10017083:	mov    edi,DWORD PTR [ebp+0x14]
10017086:	push   DWORD PTR [ebp+0x1c]
10017089:	xor    esi,esi
1001708b:	mov    DWORD PTR [ebp-0x14],esi
1001708e:	push   DWORD PTR [ebp+0x18]
10017091:	push   edi
10017092:	push   DWORD PTR [ebp+0x10]
10017095:	push   DWORD PTR [ebp+0xc]
10017098:	push   DWORD PTR [ebp+0x8]
1001709b:	call   DWORD PTR ds:0x1007fcd0
100170a1:	xor    ebx,ebx
100170a3:	mov    DWORD PTR [ebp+0x1c],eax
100170a6:	mov    eax,ds:0x1007fc5c
100170ab:	inc    ebx
100170ac:	cmp    eax,ebx
100170ae:	je     0x100170b5
100170b0:	cmp    eax,0x4
100170b3:	jne    0x100170cb
100170b5:	push   esi
100170b6:	push   ebx
100170b7:	push   0x1007fe64
100170bc:	call   DWORD PTR ds:0x100650d8
100170c2:	cmp    eax,esi
100170c4:	jne    0x100170cb
100170c6:	call   0x1001203c
100170cb:	mov    DWORD PTR [ebp-0x4],esi
100170ce:	call   0x100182b8
100170d3:	test   al,al
100170d5:	je     0x1001710e
100170d7:	push   esi
100170d8:	push   0x1007fd80
100170dd:	call   DWORD PTR ds:0x100650e4
100170e3:	test   eax,eax
100170e5:	jne    0x10017108
100170e7:	push   ebx
100170e8:	lea    eax,[ebp+0x18]
100170eb:	push   eax
100170ec:	call   0x100346c0
100170f1:	push   ebx
100170f2:	mov    BYTE PTR [ebp-0x4],bl
100170f5:	push   eax
100170f6:	lea    ecx,[ebp-0x1c]
100170f9:	mov    DWORD PTR [ebp-0x14],ebx
100170fc:	call   0x10035720
10017101:	mov    ecx,DWORD PTR [eax]
10017103:	or     ecx,DWORD PTR [eax+0x4]
10017106:	jne    0x1001710e
10017108:	mov    BYTE PTR [ebp+0x23],0x0
1001710c:	jmp    0x10017111
1001710e:	mov    BYTE PTR [ebp+0x23],bl
10017111:	mov    DWORD PTR [ebp-0x4],esi
10017114:	test   BYTE PTR [ebp-0x14],bl
10017117:	je     0x10017122
10017119:	push   DWORD PTR [ebp+0x18]
1001711c:	call   DWORD PTR ds:0x10065070
10017122:	cmp    BYTE PTR [ebp+0x23],0x0
10017126:	jne    0x1001715f
10017128:	mov    esi,DWORD PTR [ebp+0x1c]
1001712b:	or     DWORD PTR [ebp-0x4],0xffffffff
1001712f:	cmp    esi,0xffffffff
10017132:	je     0x10017147
10017134:	cmp    DWORD PTR [ebp+0xc],0x2
10017138:	je     0x10017147
1001713a:	cmp    DWORD PTR [edi+0x58],0x2
1001713e:	je     0x10017147
10017140:	push   esi
10017141:	call   0x10015b0d
10017146:	pop    ecx
10017147:	mov    eax,esi
10017149:	jmp    0x10017162
1001714b:	mov    eax,0x1001715f
10017150:	ret    
10017151:	push   0x4
10017153:	call   0x10037620
10017158:	pop    ecx
10017159:	mov    eax,0x1001715f
1001715e:	ret    
1001715f:	mov    eax,DWORD PTR [ebp+0x1c]
10017162:	call   0x1005891d
10017167:	ret    0x1c
1001716a:	push   ebp
1001716b:	mov    ebp,esp
1001716d:	pop    ebp
1001716e:	jmp    DWORD PTR ds:0x1007fcc8
10017174:	push   ebp
10017175:	mov    ebp,esp
10017177:	and    esp,0xfffffff8
1001717a:	push   esi
1001717b:	push   edi
1001717c:	push   0x1006e4a4
10017181:	push   0xc
10017183:	push   0x1006e4cc
10017188:	call   0x10003d75
1001718d:	mov    esi,DWORD PTR ds:0x100653d4
10017193:	add    esp,0xc
10017196:	push   eax
10017197:	call   esi
10017199:	mov    edi,DWORD PTR ds:0x100653a8
1001719f:	push   eax
100171a0:	call   edi
100171a2:	cmp    ebx,eax
100171a4:	jb     0x100171c8
100171a6:	push   0x1006e4dc
100171ab:	push   0xc
100171ad:	push   0x1006e504
100171b2:	call   0x10003d75
100171b7:	add    esp,0xc
100171ba:	push   eax
100171bb:	call   esi
100171bd:	push   eax
100171be:	call   edi
100171c0:	cmp    ebx,eax
100171c2:	jbe    0x10017495
100171c8:	push   0x71ee43f2
100171cd:	push   0x1006e514
100171d2:	call   0x10003d63
100171d7:	push   eax
100171d8:	push   0xc
100171da:	push   0x1006e548
100171df:	call   0x10003d75
100171e4:	add    esp,0x14
100171e7:	push   eax
100171e8:	call   esi
100171ea:	push   eax
100171eb:	call   edi
100171ed:	cmp    ebx,eax
100171ef:	jb     0x10017213
100171f1:	push   0x1006e558
100171f6:	push   0xc
100171f8:	push   0x1006e580
100171fd:	call   0x10003d75
10017202:	add    esp,0xc
10017205:	push   eax
10017206:	call   esi
10017208:	push   eax
10017209:	call   edi
1001720b:	cmp    ebx,eax
1001720d:	jbe    0x10017495
10017213:	push   0x36bdfc1c
10017218:	push   0x1006e590
1001721d:	call   0x10003d63
10017222:	push   eax
10017223:	push   0xd
10017225:	push   0x1006e5cc
1001722a:	call   0x10003d75
1001722f:	add    esp,0x14
10017232:	push   eax
10017233:	call   esi
10017235:	push   eax
10017236:	call   edi
10017238:	cmp    ebx,eax
1001723a:	jb     0x10017269
1001723c:	push   0x191245a2
10017241:	push   0x1006e5dc
10017246:	call   0x10003d63
1001724b:	push   eax
1001724c:	push   0xd
1001724e:	push   0x1006e614
10017253:	call   0x10003d75
10017258:	add    esp,0x14
1001725b:	push   eax
1001725c:	call   esi
1001725e:	push   eax
1001725f:	call   edi
10017261:	cmp    ebx,eax
10017263:	jbe    0x10017495
10017269:	push   0x6f9ff5d6
1001726e:	push   0x23b24942
10017273:	push   0x4c09e760
10017278:	push   0x72da183a
1001727d:	push   0x2b11278c
10017282:	push   0x1006e624
10017287:	call   0x10003d63
1001728c:	pop    ecx
1001728d:	pop    ecx
1001728e:	push   eax
1001728f:	call   0x10003d63
10017294:	pop    ecx
10017295:	pop    ecx
10017296:	push   eax
10017297:	call   0x10003d63
1001729c:	pop    ecx
1001729d:	pop    ecx
1001729e:	push   eax
1001729f:	call   0x10003d63
100172a4:	pop    ecx
100172a5:	pop    ecx
100172a6:	push   eax
100172a7:	call   0x10003d63
100172ac:	push   eax
100172ad:	push   0xc
100172af:	push   0x1006e660
100172b4:	call   0x10003d75
100172b9:	add    esp,0x14
100172bc:	push   eax
100172bd:	call   esi
100172bf:	push   eax
100172c0:	call   edi
100172c2:	cmp    ebx,eax
100172c4:	jb     0x1001730d
100172c6:	push   0x44cbcd8e
100172cb:	push   0x38a55b98
100172d0:	push   0x7fe6000a
100172d5:	push   0x1006e670
100172da:	call   0x10003d63
100172df:	pop    ecx
100172e0:	pop    ecx
100172e1:	push   eax
100172e2:	call   0x10003d63
100172e7:	pop    ecx
100172e8:	pop    ecx
100172e9:	push   eax
100172ea:	call   0x10003d63
100172ef:	push   eax
100172f0:	push   0xc
100172f2:	push   0x1006e6a4
100172f7:	call   0x10003d75
100172fc:	add    esp,0x14
100172ff:	push   eax
10017300:	call   esi
10017302:	push   eax
10017303:	call   edi
10017305:	cmp    ebx,eax
10017307:	jbe    0x10017495
1001730d:	push   0x62dfea98
10017312:	push   0x7808775e
10017317:	push   0x682f9f42
1001731c:	push   0x1006e6b4
10017321:	call   0x10003d63
10017326:	pop    ecx
10017327:	pop    ecx
10017328:	push   eax
10017329:	call   0x10003d63
1001732e:	pop    ecx
1001732f:	pop    ecx
10017330:	push   eax
10017331:	call   0x10003d63
10017336:	push   eax
10017337:	push   0xe
10017339:	push   0x1006e6e8
1001733e:	call   0x10003d75
10017343:	add    esp,0x14
10017346:	push   eax
10017347:	call   esi
10017349:	push   eax
1001734a:	call   edi
1001734c:	cmp    ebx,eax
1001734e:	jb     0x10017372
10017350:	push   0x1006e6f8
10017355:	push   0xe
10017357:	push   0x1006e72c
1001735c:	call   0x10003d75
10017361:	add    esp,0xc
10017364:	push   eax
10017365:	call   esi
10017367:	push   eax
10017368:	call   edi
1001736a:	cmp    ebx,eax
1001736c:	jbe    0x10017495
10017372:	push   0x1006e73c
10017377:	push   0xc
10017379:	push   0x1006e768
1001737e:	call   0x10003d75
10017383:	add    esp,0xc
10017386:	push   eax
10017387:	call   esi
10017389:	push   eax
1001738a:	call   edi
1001738c:	cmp    ebx,eax
1001738e:	jb     0x100173bd
10017390:	push   0x5ba3b37a
10017395:	push   0x1006e778
1001739a:	call   0x10003d63
1001739f:	push   eax
100173a0:	push   0xc
100173a2:	push   0x1006e7b4
100173a7:	call   0x10003d75
100173ac:	add    esp,0x14
100173af:	push   eax
100173b0:	call   esi
100173b2:	push   eax
100173b3:	call   edi
100173b5:	cmp    ebx,eax
100173b7:	jbe    0x10017495
100173bd:	push   0x7af9d2d2
100173c2:	push   0x70772ef0
100173c7:	push   0x2d3d5c2e
100173cc:	push   0x1006e7c4
100173d1:	call   0x10003d63
100173d6:	pop    ecx
100173d7:	pop    ecx
100173d8:	push   eax
100173d9:	call   0x10003d63
100173de:	pop    ecx
100173df:	pop    ecx
100173e0:	push   eax
100173e1:	call   0x10003d63
100173e6:	push   eax
100173e7:	push   0xc
100173e9:	push   0x1006e7e8
100173ee:	call   0x10003d75
100173f3:	add    esp,0x14
100173f6:	push   eax
100173f7:	call   esi
100173f9:	push   eax
100173fa:	call   edi
100173fc:	cmp    ebx,eax
100173fe:	jb     0x10017429
10017400:	push   0x51d604b8
10017405:	push   0x1006e7f8
1001740a:	call   0x10003d63
1001740f:	push   eax
10017410:	push   0xc
10017412:	push   0x1006e820
10017417:	call   0x10003d75
1001741c:	add    esp,0x14
1001741f:	push   eax
10017420:	call   esi
10017422:	push   eax
10017423:	call   edi
10017425:	cmp    ebx,eax
10017427:	jbe    0x10017495
10017429:	push   0x63a3ba1e
1001742e:	push   0x1006e830
10017433:	call   0x10003d63
10017438:	push   eax
10017439:	push   0xc
1001743b:	push   0x1006e870
10017440:	call   0x10003d75
10017445:	add    esp,0x14
10017448:	push   eax
10017449:	call   esi
1001744b:	push   eax
1001744c:	call   edi
1001744e:	cmp    ebx,eax
10017450:	jb     0x1001749a
10017452:	push   0x58d7fb52
10017457:	push   0x3b5ee514
1001745c:	push   0x7ab4272c
10017461:	push   0x1006e880
10017466:	call   0x10003d63
1001746b:	pop    ecx
1001746c:	pop    ecx
1001746d:	push   eax
1001746e:	call   0x10003d63
10017473:	pop    ecx
10017474:	pop    ecx
10017475:	push   eax
10017476:	call   0x10003d63
1001747b:	push   eax
1001747c:	push   0xc
1001747e:	push   0x1006e8c0
10017483:	call   0x10003d75
10017488:	add    esp,0x14
1001748b:	push   eax
1001748c:	call   esi
1001748e:	push   eax
1001748f:	call   edi
10017491:	cmp    ebx,eax
10017493:	ja     0x1001749a
10017495:	xor    eax,eax
10017497:	inc    eax
10017498:	jmp    0x1001749c
1001749a:	xor    eax,eax
1001749c:	pop    edi
1001749d:	pop    esi
1001749e:	mov    esp,ebp
100174a0:	pop    ebp
100174a1:	ret    
100174a2:	mov    eax,DWORD PTR [esp+0x4]
100174a6:	mov    ecx,DWORD PTR [eax]
100174a8:	push   0x1006be04
100174ad:	push   0x1006e8d0
100174b2:	push   eax
100174b3:	call   DWORD PTR [ecx+0xc]
100174b6:	ret    0x4
100174b9:	mov    eax,DWORD PTR [esi+0x8]
100174bc:	push   0x4
100174be:	inc    eax
100174bf:	push   eax
100174c0:	push   DWORD PTR [esi]
100174c2:	call   0x10045113
100174c7:	add    esp,0xc
100174ca:	test   eax,eax
100174cc:	jne    0x100174d2
100174ce:	xor    eax,eax
100174d0:	jmp    0x10017518
100174d2:	mov    DWORD PTR [esi],eax
100174d4:	mov    eax,DWORD PTR [esi+0x8]
100174d7:	push   0x4
100174d9:	inc    eax
100174da:	push   eax
100174db:	push   DWORD PTR [esi+0x4]
100174de:	call   0x10045113
100174e3:	add    esp,0xc
100174e6:	test   eax,eax
100174e8:	je     0x100174ce
100174ea:	mov    DWORD PTR [esi+0x4],eax
100174ed:	mov    eax,DWORD PTR [esi+0x8]
100174f0:	mov    ecx,eax
100174f2:	mov    eax,DWORD PTR [esi]
100174f4:	shl    ecx,0x2
100174f7:	add    eax,ecx
100174f9:	je     0x10017503
100174fb:	mov    edx,DWORD PTR [esp+0x4]
100174ff:	mov    edx,DWORD PTR [edx]
10017501:	mov    DWORD PTR [eax],edx
10017503:	mov    eax,DWORD PTR [esi+0x4]
10017506:	add    eax,ecx
10017508:	je     0x10017512
1001750a:	mov    ecx,DWORD PTR [esp+0x8]
1001750e:	mov    ecx,DWORD PTR [ecx]
10017510:	mov    DWORD PTR [eax],ecx
10017512:	inc    DWORD PTR [esi+0x8]
10017515:	xor    eax,eax
10017517:	inc    eax
10017518:	ret    0x8
1001751b:	mov    eax,DWORD PTR [esi]
1001751d:	test   eax,eax
1001751f:	je     0x1001752b
10017521:	push   eax
10017522:	call   0x10042408
10017527:	and    DWORD PTR [esi],0x0
1001752a:	pop    ecx
1001752b:	mov    eax,DWORD PTR [esi+0x4]
1001752e:	test   eax,eax
10017530:	je     0x1001753d
10017532:	push   eax
10017533:	call   0x10042408
10017538:	and    DWORD PTR [esi+0x4],0x0
1001753c:	pop    ecx
1001753d:	and    DWORD PTR [esi+0x8],0x0
10017541:	ret    
10017542:	test   eax,eax
10017544:	jl     0x10017552
10017546:	cmp    eax,DWORD PTR [ecx+0x8]
10017549:	jge    0x10017552
1001754b:	mov    ecx,DWORD PTR [ecx+0x4]
1001754e:	lea    eax,[ecx+eax*4]
10017551:	ret    
10017552:	push   0x0
10017554:	push   0x0
10017556:	push   0x1
10017558:	push   0xc000008c
1001755d:	call   DWORD PTR ds:0x10065128
10017563:	int3   
10017564:	push   DWORD PTR [esi]
10017566:	call   0x100422c0
1001756b:	and    DWORD PTR [esi],0x0
1001756e:	pop    ecx
1001756f:	ret    
10017570:	lea    ecx,[eax+0x4]
10017573:	cmp    DWORD PTR [eax],ecx
10017575:	je     0x1001757c
10017577:	jmp    0x10017705
1001757c:	ret    
1001757d:	push   ebp
1001757e:	mov    ebp,esp
10017580:	and    esp,0xfffffff8
10017583:	push   ecx
10017584:	push   ecx
10017585:	mov    eax,ds:0x1007fe5c
1001758a:	mov    edx,DWORD PTR [eax]
1001758c:	push   esi
1001758d:	push   edi
1001758e:	mov    ecx,0x1007fe58
10017593:	push   eax
10017594:	mov    esi,ecx
10017596:	push   esi
10017597:	push   edx
10017598:	push   ecx
10017599:	lea    edi,[esp+0x18]
1001759d:	call   0x1001770e
100175a2:	push   DWORD PTR ds:0x1007fe5c
100175a8:	call   0x10041d92
100175ad:	and    DWORD PTR ds:0x1007fe5c,0x0
100175b4:	and    DWORD PTR ds:0x1007fe60,0x0
100175bb:	pop    ecx
100175bc:	pop    edi
100175bd:	pop    esi
100175be:	mov    esp,ebp
100175c0:	pop    ebp
100175c1:	ret    
100175c2:	push   ebp
100175c3:	mov    ebp,esp
100175c5:	sub    esp,0x14
100175c8:	mov    ecx,DWORD PTR ds:0x1007fe5c
100175ce:	mov    eax,DWORD PTR [ecx+0x4]
100175d1:	cmp    BYTE PTR [eax+0x15],0x0
100175d5:	push   ebx
100175d6:	push   esi
100175d7:	mov    ebx,ecx
100175d9:	mov    BYTE PTR [ebp-0x8],0x1
100175dd:	jne    0x10017600
100175df:	mov    edx,DWORD PTR [ebp+0x8]
100175e2:	mov    esi,DWORD PTR [edx]
100175e4:	cmp    esi,DWORD PTR [eax+0xc]
100175e7:	mov    ebx,eax
100175e9:	setb   BYTE PTR [ebp-0x8]
100175ed:	cmp    BYTE PTR [ebp-0x8],0x0
100175f1:	je     0x100175f7
100175f3:	mov    eax,DWORD PTR [eax]
100175f5:	jmp    0x100175fa
100175f7:	mov    eax,DWORD PTR [eax+0x8]
100175fa:	cmp    BYTE PTR [eax+0x15],0x0
100175fe:	je     0x100175e4
10017600:	cmp    BYTE PTR [ebp-0x8],0x0
10017604:	mov    eax,ebx
10017606:	mov    DWORD PTR [ebp-0xc],eax
10017609:	mov    DWORD PTR [ebp-0x10],0x1007fe58
10017610:	je     0x1001763a
10017612:	cmp    ebx,DWORD PTR [ecx]
10017614:	jne    0x1001762f
10017616:	push   DWORD PTR [ebp+0x8]
10017619:	push   0x1
1001761b:	lea    eax,[ebp-0x10]
1001761e:	push   eax
1001761f:	call   0x10017807
10017624:	mov    ecx,DWORD PTR [eax]
10017626:	mov    eax,DWORD PTR [eax+0x4]
10017629:	mov    BYTE PTR [edi+0x8],0x1
1001762d:	jmp    0x10017651
1001762f:	lea    esi,[ebp-0x10]
10017632:	call   0x10017964
10017637:	mov    eax,DWORD PTR [ebp-0xc]
1001763a:	mov    edx,DWORD PTR [eax+0xc]
1001763d:	mov    ecx,DWORD PTR [ebp+0x8]
10017640:	cmp    edx,DWORD PTR [ecx]
10017642:	jae    0x1001764a
10017644:	push   ecx
10017645:	push   DWORD PTR [ebp-0x8]
10017648:	jmp    0x1001761b
1001764a:	mov    ecx,DWORD PTR [ebp-0x10]
1001764d:	mov    BYTE PTR [edi+0x8],0x0
10017651:	pop    esi
10017652:	mov    DWORD PTR [edi+0x4],eax
10017655:	mov    DWORD PTR [edi],ecx
10017657:	mov    eax,edi
10017659:	pop    ebx
1001765a:	leave  
1001765b:	ret    0x4
1001765e:	push   ebp
1001765f:	mov    ebp,esp
10017661:	and    esp,0xfffffff8
10017664:	sub    esp,0x2c
10017667:	mov    ecx,DWORD PTR ds:0x1007fe5c
1001766d:	mov    eax,DWORD PTR [ecx+0x4]
10017670:	cmp    BYTE PTR [eax+0x15],0x0
10017674:	push   ebx
10017675:	push   esi
10017676:	push   edi
10017677:	mov    DWORD PTR [esp+0x14],ecx
1001767b:	jne    0x10017695
1001767d:	mov    ecx,DWORD PTR [edx]
1001767f:	cmp    ecx,DWORD PTR [eax+0xc]
10017682:	jae    0x1001768c
10017684:	mov    DWORD PTR [esp+0x14],eax
10017688:	mov    eax,DWORD PTR [eax]
1001768a:	jmp    0x1001768f
1001768c:	mov    eax,DWORD PTR [eax+0x8]
1001768f:	cmp    BYTE PTR [eax+0x15],0x0
10017693:	je     0x1001767f
10017695:	push   edx
10017696:	lea    eax,[esp+0x24]
1001769a:	mov    edi,0x1007fe58
1001769f:	call   0x100177d0
100176a4:	mov    ecx,DWORD PTR [eax+0x4]
100176a7:	mov    ebx,DWORD PTR [eax]
100176a9:	mov    eax,DWORD PTR [eax+0x4]
100176ac:	and    DWORD PTR [esp+0x10],0x0
100176b1:	mov    DWORD PTR [esp+0x2c],ecx
100176b5:	mov    ecx,ebx
100176b7:	mov    DWORD PTR [esp+0x18],ecx
100176bb:	mov    DWORD PTR [esp+0x1c],eax
100176bf:	cmp    DWORD PTR [esp+0x18],0x0
100176c4:	je     0x100176cc
100176c6:	cmp    DWORD PTR [esp+0x18],edi
100176ca:	je     0x100176d1
100176cc:	call   0x100422b0
100176d1:	mov    eax,DWORD PTR [esp+0x14]
100176d5:	cmp    DWORD PTR [esp+0x1c],eax
100176d9:	je     0x100176ea
100176db:	inc    DWORD PTR [esp+0x10]
100176df:	lea    esi,[esp+0x18]
100176e3:	call   0x10017d67
100176e8:	jmp    0x100176bf
100176ea:	push   eax
100176eb:	push   edi
100176ec:	push   DWORD PTR [esp+0x34]
100176f0:	lea    edi,[esp+0x2c]
100176f4:	push   ebx
100176f5:	call   0x1001770e
100176fa:	mov    eax,DWORD PTR [esp+0x10]
100176fe:	pop    edi
100176ff:	pop    esi
10017700:	pop    ebx
10017701:	mov    esp,ebp
10017703:	pop    ebp
10017704:	ret    
10017705:	push   DWORD PTR [eax]
10017707:	call   0x10042408
1001770c:	pop    ecx
1001770d:	ret    
1001770e:	push   ebp
1001770f:	mov    ebp,esp
10017711:	mov    eax,ds:0x1007fe5c
10017716:	sub    esp,0x10
10017719:	cmp    DWORD PTR [ebp+0x8],0x0
1001771d:	push   ebx
1001771e:	mov    ebx,DWORD PTR [eax]
10017720:	push   esi
10017721:	mov    esi,0x1007fe58
10017726:	je     0x1001772d
10017728:	cmp    DWORD PTR [ebp+0x8],esi
1001772b:	je     0x10017732
1001772d:	call   0x100422b0
10017732:	cmp    DWORD PTR [ebp+0xc],ebx
10017735:	jne    0x1001778a
10017737:	cmp    DWORD PTR [ebp+0x10],0x0
1001773b:	mov    ebx,DWORD PTR ds:0x1007fe5c
10017741:	je     0x10017748
10017743:	cmp    DWORD PTR [ebp+0x10],esi
10017746:	je     0x1001774d
10017748:	call   0x100422b0
1001774d:	cmp    DWORD PTR [ebp+0x14],ebx
10017750:	jne    0x1001778a
10017752:	mov    eax,ds:0x1007fe5c
10017757:	push   DWORD PTR [eax+0x4]
1001775a:	mov    ecx,esi
1001775c:	call   0x10017d0b
10017761:	mov    eax,ds:0x1007fe5c
10017766:	mov    DWORD PTR [eax+0x4],eax
10017769:	mov    eax,ds:0x1007fe5c
1001776e:	and    DWORD PTR ds:0x1007fe60,0x0
10017775:	mov    DWORD PTR [eax],eax
10017777:	mov    eax,ds:0x1007fe5c
1001777c:	mov    DWORD PTR [eax+0x8],eax
1001777f:	mov    eax,ds:0x1007fe5c
10017784:	mov    eax,DWORD PTR [eax]
10017786:	mov    DWORD PTR [edi],esi
10017788:	jmp    0x100177c5
1001778a:	mov    eax,DWORD PTR [ebp+0x8]
1001778d:	test   eax,eax
1001778f:	je     0x10017796
10017791:	cmp    eax,DWORD PTR [ebp+0x10]
10017794:	je     0x1001779b
10017796:	call   0x100422b0
1001779b:	mov    eax,DWORD PTR [ebp+0xc]
1001779e:	cmp    eax,DWORD PTR [ebp+0x14]
100177a1:	je     0x100177c0
100177a3:	mov    ebx,DWORD PTR [ebp+0x8]
100177a6:	lea    esi,[ebp+0x8]
100177a9:	mov    DWORD PTR [ebp-0x4],eax
100177ac:	call   0x10017d67
100177b1:	push   DWORD PTR [ebp-0x4]
100177b4:	lea    eax,[ebp-0x10]
100177b7:	push   ebx
100177b8:	push   eax
100177b9:	call   0x100179e6
100177be:	jmp    0x1001778a
100177c0:	mov    ecx,DWORD PTR [ebp+0x8]
100177c3:	mov    DWORD PTR [edi],ecx
100177c5:	pop    esi
100177c6:	mov    DWORD PTR [edi+0x4],eax
100177c9:	mov    eax,edi
100177cb:	pop    ebx
100177cc:	leave  
100177cd:	ret    0x10
100177d0:	mov    edx,DWORD PTR ds:0x1007fe5c
100177d6:	mov    ecx,DWORD PTR [edx+0x4]
100177d9:	cmp    BYTE PTR [ecx+0x15],0x0
100177dd:	jne    0x100177fb
100177df:	push   esi
100177e0:	mov    esi,DWORD PTR [esp+0x8]
100177e4:	mov    esi,DWORD PTR [esi]
100177e6:	cmp    DWORD PTR [ecx+0xc],esi
100177e9:	jae    0x100177f0
100177eb:	mov    ecx,DWORD PTR [ecx+0x8]
100177ee:	jmp    0x100177f4
100177f0:	mov    edx,ecx
100177f2:	mov    ecx,DWORD PTR [ecx]
100177f4:	cmp    BYTE PTR [ecx+0x15],0x0
100177f8:	je     0x100177e6
100177fa:	pop    esi
100177fb:	mov    DWORD PTR [eax+0x4],edx
100177fe:	mov    DWORD PTR [eax],0x1007fe58
10017804:	ret    0x4
10017807:	push   0x48
10017809:	mov    eax,0x1005f147
1001780e:	call   0x10058845
10017813:	cmp    DWORD PTR ds:0x1007fe60,0x1ffffffe
1001781d:	jb     0x10017851
1001781f:	push   0x1006bcb4
10017824:	lea    ecx,[ebp-0x2c]
10017827:	call   0x100011d6
1001782c:	and    DWORD PTR [ebp-0x4],0x0
10017830:	lea    eax,[ebp-0x2c]
10017833:	push   eax
10017834:	lea    ecx,[ebp-0x54]
10017837:	call   0x10001065
1001783c:	push   0x10073960
10017841:	lea    eax,[ebp-0x54]
10017844:	push   eax
10017845:	mov    DWORD PTR [ebp-0x54],0x1006a77c
1001784c:	call   0x10046704
10017851:	mov    eax,ds:0x1007fe5c
10017856:	mov    esi,DWORD PTR [ebp+0x10]
10017859:	push   eax
1001785a:	push   ebx
1001785b:	push   eax
1001785c:	call   0x10017cd5
10017861:	inc    DWORD PTR ds:0x1007fe60
10017867:	mov    edi,eax
10017869:	mov    eax,ds:0x1007fe5c
1001786e:	cmp    ebx,eax
10017870:	jne    0x10017883
10017872:	mov    DWORD PTR [eax+0x4],edi
10017875:	mov    eax,ds:0x1007fe5c
1001787a:	mov    DWORD PTR [eax],edi
1001787c:	mov    eax,ds:0x1007fe5c
10017881:	jmp    0x100178a5
10017883:	cmp    BYTE PTR [ebp+0xc],0x0
10017887:	je     0x10017898
10017889:	mov    DWORD PTR [ebx],edi
1001788b:	mov    eax,ds:0x1007fe5c
10017890:	cmp    ebx,DWORD PTR [eax]
10017892:	jne    0x100178a8
10017894:	mov    DWORD PTR [eax],edi
10017896:	jmp    0x100178a8
10017898:	mov    DWORD PTR [ebx+0x8],edi
1001789b:	mov    eax,ds:0x1007fe5c
100178a0:	cmp    ebx,DWORD PTR [eax+0x8]
100178a3:	jne    0x100178a8
100178a5:	mov    DWORD PTR [eax+0x8],edi
100178a8:	mov    esi,edi
100178aa:	lea    eax,[edi+0x4]
100178ad:	jmp    0x10017938
100178b2:	mov    ecx,DWORD PTR [eax]
100178b4:	mov    edx,DWORD PTR [ecx+0x4]
100178b7:	cmp    ecx,DWORD PTR [edx]
100178b9:	jne    0x100178ee
100178bb:	mov    edx,DWORD PTR [edx+0x8]
100178be:	cmp    BYTE PTR [edx+0x14],0x0
100178c2:	je     0x100178f6
100178c4:	cmp    esi,DWORD PTR [ecx+0x8]
100178c7:	jne    0x100178d0
100178c9:	mov    esi,ecx
100178cb:	call   0x10017c59
100178d0:	mov    eax,DWORD PTR [esi+0x4]
100178d3:	mov    BYTE PTR [eax+0x14],0x1
100178d7:	mov    eax,DWORD PTR [esi+0x4]
100178da:	mov    eax,DWORD PTR [eax+0x4]
100178dd:	mov    BYTE PTR [eax+0x14],0x0
100178e1:	mov    eax,DWORD PTR [esi+0x4]
100178e4:	mov    ecx,DWORD PTR [eax+0x4]
100178e7:	call   0x10017c96
100178ec:	jmp    0x10017935
100178ee:	mov    edx,DWORD PTR [edx]
100178f0:	cmp    BYTE PTR [edx+0x14],0x0
100178f4:	jne    0x1001790e
100178f6:	mov    BYTE PTR [ecx+0x14],0x1
100178fa:	mov    BYTE PTR [edx+0x14],0x1
100178fe:	mov    ecx,DWORD PTR [eax]
10017900:	mov    ecx,DWORD PTR [ecx+0x4]
10017903:	mov    BYTE PTR [ecx+0x14],0x0
10017907:	mov    eax,DWORD PTR [eax]
10017909:	mov    esi,DWORD PTR [eax+0x4]
1001790c:	jmp    0x10017935
1001790e:	cmp    esi,DWORD PTR [ecx]
10017910:	jne    0x10017919
10017912:	mov    esi,ecx
10017914:	call   0x10017c96
10017919:	mov    eax,DWORD PTR [esi+0x4]
1001791c:	mov    BYTE PTR [eax+0x14],0x1
10017920:	mov    eax,DWORD PTR [esi+0x4]
10017923:	mov    eax,DWORD PTR [eax+0x4]
10017926:	mov    BYTE PTR [eax+0x14],0x0
1001792a:	mov    eax,DWORD PTR [esi+0x4]
1001792d:	mov    ecx,DWORD PTR [eax+0x4]
10017930:	call   0x10017c59
10017935:	lea    eax,[esi+0x4]
10017938:	mov    ecx,DWORD PTR [eax]
1001793a:	cmp    BYTE PTR [ecx+0x14],0x0
1001793e:	je     0x100178b2
10017944:	mov    eax,ds:0x1007fe5c
10017949:	mov    eax,DWORD PTR [eax+0x4]
1001794c:	mov    BYTE PTR [eax+0x14],0x1
10017950:	mov    eax,DWORD PTR [ebp+0x8]
10017953:	mov    DWORD PTR [eax+0x4],edi
10017956:	mov    DWORD PTR [eax],0x1007fe58
1001795c:	call   0x1005891d
10017961:	ret    0xc
10017964:	push   ebx
10017965:	xor    ebx,ebx
10017967:	cmp    DWORD PTR [esi],ebx
10017969:	jne    0x10017970
1001796b:	call   0x100422b0
10017970:	mov    eax,DWORD PTR [esi+0x4]
10017973:	cmp    BYTE PTR [eax+0x15],bl
10017976:	je     0x10017985
10017978:	mov    eax,DWORD PTR [eax+0x8]
1001797b:	mov    DWORD PTR [esi+0x4],eax
1001797e:	cmp    BYTE PTR [eax+0x15],bl
10017981:	je     0x100179c1
10017983:	jmp    0x100179b7
10017985:	mov    ecx,DWORD PTR [eax]
10017987:	cmp    BYTE PTR [ecx+0x15],bl
1001798a:	jne    0x100179a7
1001798c:	jmp    0x10017990
1001798e:	mov    ecx,eax
10017990:	mov    eax,DWORD PTR [ecx+0x8]
10017993:	cmp    BYTE PTR [eax+0x15],bl
10017996:	je     0x1001798e
10017998:	mov    DWORD PTR [esi+0x4],ecx
1001799b:	jmp    0x100179c1
1001799d:	mov    ecx,DWORD PTR [esi+0x4]
100179a0:	cmp    ecx,DWORD PTR [eax]
100179a2:	jne    0x100179af
100179a4:	mov    DWORD PTR [esi+0x4],eax
100179a7:	mov    eax,DWORD PTR [eax+0x4]
100179aa:	cmp    BYTE PTR [eax+0x15],bl
100179ad:	je     0x1001799d
100179af:	mov    ecx,DWORD PTR [esi+0x4]
100179b2:	cmp    BYTE PTR [ecx+0x15],bl
100179b5:	je     0x100179be
100179b7:	call   0x100422b0
100179bc:	jmp    0x100179c1
100179be:	mov    DWORD PTR [esi+0x4],eax
100179c1:	mov    eax,esi
100179c3:	pop    ebx
100179c4:	ret    
100179c5:	push   DWORD PTR [esp+0x8]
100179c9:	call   0x10043cdd
100179ce:	test   eax,eax
100179d0:	pop    ecx
100179d1:	jne    0x100179dd
100179d3:	push   0x8007000e
100179d8:	call   0x10001f41
100179dd:	mov    ecx,DWORD PTR [esp+0x4]
100179e1:	mov    DWORD PTR [ecx],eax
100179e3:	ret    0x8
100179e6:	push   0x48
100179e8:	mov    eax,0x1005f147
100179ed:	call   0x10058845
100179f2:	mov    ebx,DWORD PTR [ebp+0x10]
100179f5:	cmp    BYTE PTR [ebx+0x15],0x0
100179f9:	je     0x10017a2d
100179fb:	push   0x1006bafc
10017a00:	lea    ecx,[ebp-0x2c]
10017a03:	call   0x100011d6
10017a08:	and    DWORD PTR [ebp-0x4],0x0
10017a0c:	lea    eax,[ebp-0x2c]
10017a0f:	push   eax
10017a10:	lea    ecx,[ebp-0x54]
10017a13:	call   0x10001065
10017a18:	push   0x10073880
10017a1d:	lea    eax,[ebp-0x54]
10017a20:	push   eax
10017a21:	mov    DWORD PTR [ebp-0x54],0x1006a788
10017a28:	call   0x10046704
10017a2d:	lea    esi,[ebp+0xc]
10017a30:	call   0x10017d67
10017a35:	mov    ecx,DWORD PTR [ebx]
10017a37:	cmp    BYTE PTR [ecx+0x15],0x0
10017a3b:	je     0x10017a42
10017a3d:	mov    edi,DWORD PTR [ebx+0x8]
10017a40:	jmp    0x10017a59
10017a42:	mov    eax,DWORD PTR [ebx+0x8]
10017a45:	cmp    BYTE PTR [eax+0x15],0x0
10017a49:	je     0x10017a4f
10017a4b:	mov    edi,ecx
10017a4d:	jmp    0x10017a59
10017a4f:	mov    eax,DWORD PTR [ebp+0x10]
10017a52:	cmp    eax,ebx
10017a54:	mov    edi,DWORD PTR [eax+0x8]
10017a57:	jne    0x10017ad1
10017a59:	cmp    BYTE PTR [edi+0x15],0x0
10017a5d:	mov    esi,DWORD PTR [ebx+0x4]
10017a60:	jne    0x10017a65
10017a62:	mov    DWORD PTR [edi+0x4],esi
10017a65:	mov    eax,ds:0x1007fe5c
10017a6a:	cmp    DWORD PTR [eax+0x4],ebx
10017a6d:	jne    0x10017a74
10017a6f:	mov    DWORD PTR [eax+0x4],edi
10017a72:	jmp    0x10017a7f
10017a74:	cmp    DWORD PTR [esi],ebx
10017a76:	jne    0x10017a7c
10017a78:	mov    DWORD PTR [esi],edi
10017a7a:	jmp    0x10017a7f
10017a7c:	mov    DWORD PTR [esi+0x8],edi
10017a7f:	mov    edx,DWORD PTR ds:0x1007fe5c
10017a85:	cmp    DWORD PTR [edx],ebx
10017a87:	jne    0x10017aa5
10017a89:	cmp    BYTE PTR [edi+0x15],0x0
10017a8d:	je     0x10017a93
10017a8f:	mov    ecx,esi
10017a91:	jmp    0x10017aa3
10017a93:	mov    eax,DWORD PTR [edi]
10017a95:	mov    ecx,edi
10017a97:	jmp    0x10017a9d
10017a99:	mov    ecx,eax
10017a9b:	mov    eax,DWORD PTR [ecx]
10017a9d:	cmp    BYTE PTR [eax+0x15],0x0
10017aa1:	je     0x10017a99
10017aa3:	mov    DWORD PTR [edx],ecx
10017aa5:	mov    edx,DWORD PTR ds:0x1007fe5c
10017aab:	cmp    DWORD PTR [edx+0x8],ebx
10017aae:	jne    0x10017b2b
10017ab0:	cmp    BYTE PTR [edi+0x15],0x0
10017ab4:	je     0x10017aba
10017ab6:	mov    ecx,esi
10017ab8:	jmp    0x10017acc
10017aba:	mov    eax,DWORD PTR [edi+0x8]
10017abd:	mov    ecx,edi
10017abf:	jmp    0x10017ac6
10017ac1:	mov    ecx,eax
10017ac3:	mov    eax,DWORD PTR [ecx+0x8]
10017ac6:	cmp    BYTE PTR [eax+0x15],0x0
10017aca:	je     0x10017ac1
10017acc:	mov    DWORD PTR [edx+0x8],ecx
10017acf:	jmp    0x10017b2b
10017ad1:	mov    DWORD PTR [ecx+0x4],eax
10017ad4:	mov    ecx,DWORD PTR [ebx]
10017ad6:	mov    DWORD PTR [eax],ecx
10017ad8:	cmp    eax,DWORD PTR [ebx+0x8]
10017adb:	jne    0x10017ae1
10017add:	mov    esi,eax
10017adf:	jmp    0x10017afb
10017ae1:	cmp    BYTE PTR [edi+0x15],0x0
10017ae5:	mov    esi,DWORD PTR [eax+0x4]
10017ae8:	jne    0x10017aed
10017aea:	mov    DWORD PTR [edi+0x4],esi
10017aed:	mov    DWORD PTR [esi],edi
10017aef:	mov    ecx,DWORD PTR [ebx+0x8]
10017af2:	mov    DWORD PTR [eax+0x8],ecx
10017af5:	mov    ecx,DWORD PTR [ebx+0x8]
10017af8:	mov    DWORD PTR [ecx+0x4],eax
10017afb:	mov    ecx,DWORD PTR ds:0x1007fe5c
10017b01:	cmp    DWORD PTR [ecx+0x4],ebx
10017b04:	jne    0x10017b0b
10017b06:	mov    DWORD PTR [ecx+0x4],eax
10017b09:	jmp    0x10017b19
10017b0b:	mov    ecx,DWORD PTR [ebx+0x4]
10017b0e:	cmp    DWORD PTR [ecx],ebx
10017b10:	jne    0x10017b16
10017b12:	mov    DWORD PTR [ecx],eax
10017b14:	jmp    0x10017b19
10017b16:	mov    DWORD PTR [ecx+0x8],eax
10017b19:	mov    ecx,DWORD PTR [ebx+0x4]
10017b1c:	mov    DWORD PTR [eax+0x4],ecx
10017b1f:	mov    dl,BYTE PTR [ebx+0x14]
10017b22:	mov    cl,BYTE PTR [eax+0x14]
10017b25:	mov    BYTE PTR [eax+0x14],dl
10017b28:	mov    BYTE PTR [ebx+0x14],cl
10017b2b:	cmp    BYTE PTR [ebx+0x14],0x1
10017b2f:	jne    0x10017c2d
10017b35:	jmp    0x10017be8
10017b3a:	cmp    BYTE PTR [edi+0x14],0x1
10017b3e:	jne    0x10017c29
10017b44:	mov    ecx,DWORD PTR [esi]
10017b46:	cmp    edi,ecx
10017b48:	jne    0x10017bb1
10017b4a:	mov    ecx,DWORD PTR [esi+0x8]
10017b4d:	cmp    BYTE PTR [ecx+0x14],0x0
10017b51:	jne    0x10017b65
10017b53:	mov    BYTE PTR [ecx+0x14],0x1
10017b57:	mov    ecx,esi
10017b59:	mov    BYTE PTR [esi+0x14],0x0
10017b5d:	call   0x10017c59
10017b62:	mov    ecx,DWORD PTR [esi+0x8]
10017b65:	cmp    BYTE PTR [ecx+0x15],0x0
10017b69:	jne    0x10017be3
10017b6b:	mov    eax,DWORD PTR [ecx]
10017b6d:	cmp    BYTE PTR [eax+0x14],0x1
10017b71:	jne    0x10017b7c
10017b73:	mov    eax,DWORD PTR [ecx+0x8]
10017b76:	cmp    BYTE PTR [eax+0x14],0x1
10017b7a:	je     0x10017bdf
10017b7c:	mov    eax,DWORD PTR [ecx+0x8]
10017b7f:	cmp    BYTE PTR [eax+0x14],0x1
10017b83:	jne    0x10017b97
10017b85:	mov    eax,DWORD PTR [ecx]
10017b87:	mov    BYTE PTR [eax+0x14],0x1
10017b8b:	mov    BYTE PTR [ecx+0x14],0x0
10017b8f:	call   0x10017c96
10017b94:	mov    ecx,DWORD PTR [esi+0x8]
10017b97:	mov    al,BYTE PTR [esi+0x14]
10017b9a:	mov    BYTE PTR [ecx+0x14],al
10017b9d:	mov    BYTE PTR [esi+0x14],0x1
10017ba1:	mov    eax,DWORD PTR [ecx+0x8]
10017ba4:	mov    ecx,esi
10017ba6:	mov    BYTE PTR [eax+0x14],0x1
10017baa:	call   0x10017c59
10017baf:	jmp    0x10017c29
10017bb1:	cmp    BYTE PTR [ecx+0x14],0x0
10017bb5:	jne    0x10017bc8
10017bb7:	mov    BYTE PTR [ecx+0x14],0x1
10017bbb:	mov    ecx,esi
10017bbd:	mov    BYTE PTR [esi+0x14],0x0
10017bc1:	call   0x10017c96
10017bc6:	mov    ecx,DWORD PTR [esi]
10017bc8:	cmp    BYTE PTR [ecx+0x15],0x0
10017bcc:	jne    0x10017be3
10017bce:	mov    eax,DWORD PTR [ecx+0x8]
10017bd1:	cmp    BYTE PTR [eax+0x14],0x1
10017bd5:	jne    0x10017bf8
10017bd7:	mov    eax,DWORD PTR [ecx]
10017bd9:	cmp    BYTE PTR [eax+0x14],0x1
10017bdd:	jne    0x10017bf8
10017bdf:	mov    BYTE PTR [ecx+0x14],0x0
10017be3:	mov    edi,esi
10017be5:	mov    esi,DWORD PTR [esi+0x4]
10017be8:	mov    eax,ds:0x1007fe5c
10017bed:	cmp    edi,DWORD PTR [eax+0x4]
10017bf0:	jne    0x10017b3a
10017bf6:	jmp    0x10017c29
10017bf8:	mov    eax,DWORD PTR [ecx]
10017bfa:	cmp    BYTE PTR [eax+0x14],0x1
10017bfe:	jne    0x10017c12
10017c00:	mov    eax,DWORD PTR [ecx+0x8]
10017c03:	mov    BYTE PTR [eax+0x14],0x1
10017c07:	mov    BYTE PTR [ecx+0x14],0x0
10017c0b:	call   0x10017c59
10017c10:	mov    ecx,DWORD PTR [esi]
10017c12:	mov    al,BYTE PTR [esi+0x14]
10017c15:	mov    BYTE PTR [ecx+0x14],al
10017c18:	mov    BYTE PTR [esi+0x14],0x1
10017c1c:	mov    eax,DWORD PTR [ecx]
10017c1e:	mov    ecx,esi
10017c20:	mov    BYTE PTR [eax+0x14],0x1
10017c24:	call   0x10017c96
10017c29:	mov    BYTE PTR [edi+0x14],0x1
10017c2d:	push   ebx
10017c2e:	call   0x10041d92
10017c33:	cmp    DWORD PTR ds:0x1007fe60,0x0
10017c3a:	pop    ecx
10017c3b:	jbe    0x10017c43
10017c3d:	dec    DWORD PTR ds:0x1007fe60
10017c43:	mov    ecx,DWORD PTR [ebp+0xc]
10017c46:	mov    eax,DWORD PTR [ebp+0x8]
10017c49:	mov    DWORD PTR [eax],ecx
10017c4b:	mov    ecx,DWORD PTR [ebp+0x10]
10017c4e:	mov    DWORD PTR [eax+0x4],ecx
10017c51:	call   0x1005891d
10017c56:	ret    0xc
10017c59:	mov    eax,DWORD PTR [ecx+0x8]
10017c5c:	mov    edx,DWORD PTR [eax]
10017c5e:	mov    DWORD PTR [ecx+0x8],edx
10017c61:	mov    edx,DWORD PTR [eax]
10017c63:	cmp    BYTE PTR [edx+0x15],0x0
10017c67:	jne    0x10017c6c
10017c69:	mov    DWORD PTR [edx+0x4],ecx
10017c6c:	mov    edx,DWORD PTR [ecx+0x4]
10017c6f:	mov    DWORD PTR [eax+0x4],edx
10017c72:	mov    edx,DWORD PTR ds:0x1007fe5c
10017c78:	cmp    ecx,DWORD PTR [edx+0x4]
10017c7b:	jne    0x10017c82
10017c7d:	mov    DWORD PTR [edx+0x4],eax
10017c80:	jmp    0x10017c90
10017c82:	mov    edx,DWORD PTR [ecx+0x4]
10017c85:	cmp    ecx,DWORD PTR [edx]
10017c87:	jne    0x10017c8d
10017c89:	mov    DWORD PTR [edx],eax
10017c8b:	jmp    0x10017c90
10017c8d:	mov    DWORD PTR [edx+0x8],eax
10017c90:	mov    DWORD PTR [eax],ecx
10017c92:	mov    DWORD PTR [ecx+0x4],eax
10017c95:	ret    
10017c96:	mov    eax,DWORD PTR [ecx]
10017c98:	mov    edx,DWORD PTR [eax+0x8]
10017c9b:	mov    DWORD PTR [ecx],edx
10017c9d:	mov    edx,DWORD PTR [eax+0x8]
10017ca0:	cmp    BYTE PTR [edx+0x15],0x0
10017ca4:	jne    0x10017ca9
10017ca6:	mov    DWORD PTR [edx+0x4],ecx
10017ca9:	mov    edx,DWORD PTR [ecx+0x4]
10017cac:	mov    DWORD PTR [eax+0x4],edx
10017caf:	mov    edx,DWORD PTR ds:0x1007fe5c
10017cb5:	cmp    ecx,DWORD PTR [edx+0x4]
10017cb8:	jne    0x10017cbf
10017cba:	mov    DWORD PTR [edx+0x4],eax
10017cbd:	jmp    0x10017cce
10017cbf:	mov    edx,DWORD PTR [ecx+0x4]
10017cc2:	cmp    ecx,DWORD PTR [edx+0x8]
10017cc5:	jne    0x10017ccc
10017cc7:	mov    DWORD PTR [edx+0x8],eax
10017cca:	jmp    0x10017cce
10017ccc:	mov    DWORD PTR [edx],eax
10017cce:	mov    DWORD PTR [eax+0x8],ecx
10017cd1:	mov    DWORD PTR [ecx+0x4],eax
10017cd4:	ret    
10017cd5:	push   0x18
10017cd7:	call   0x1004239e
10017cdc:	test   eax,eax
10017cde:	pop    ecx
10017cdf:	je     0x10017d08
10017ce1:	mov    ecx,DWORD PTR [esp+0x4]
10017ce5:	mov    DWORD PTR [eax],ecx
10017ce7:	mov    ecx,DWORD PTR [esp+0x8]
10017ceb:	mov    DWORD PTR [eax+0x4],ecx
10017cee:	mov    ecx,DWORD PTR [esp+0xc]
10017cf2:	mov    DWORD PTR [eax+0x8],ecx
10017cf5:	mov    ecx,DWORD PTR [esi]
10017cf7:	mov    DWORD PTR [eax+0xc],ecx
10017cfa:	mov    ecx,DWORD PTR [esi+0x4]
10017cfd:	mov    DWORD PTR [eax+0x10],ecx
10017d00:	mov    BYTE PTR [eax+0x14],0x0
10017d04:	mov    BYTE PTR [eax+0x15],0x0
10017d08:	ret    0xc
10017d0b:	push   ebx
10017d0c:	push   esi
10017d0d:	push   edi
10017d0e:	mov    edi,DWORD PTR [esp+0x10]
10017d12:	cmp    BYTE PTR [edi+0x15],0x0
10017d16:	mov    ebx,ecx
10017d18:	mov    esi,edi
10017d1a:	jne    0x10017d37
10017d1c:	push   DWORD PTR [esi+0x8]
10017d1f:	mov    ecx,ebx
10017d21:	call   0x10017d0b
10017d26:	mov    esi,DWORD PTR [esi]
10017d28:	push   edi
10017d29:	call   0x10041d92
10017d2e:	cmp    BYTE PTR [esi+0x15],0x0
10017d32:	pop    ecx
10017d33:	mov    edi,esi
10017d35:	je     0x10017d1c
10017d37:	pop    edi
10017d38:	pop    esi
10017d39:	pop    ebx
10017d3a:	ret    0x4
10017d3d:	push   0x18
10017d3f:	call   0x1004239e
10017d44:	xor    edx,edx
10017d46:	cmp    eax,edx
10017d48:	pop    ecx
10017d49:	je     0x10017d4d
10017d4b:	mov    DWORD PTR [eax],edx
10017d4d:	lea    ecx,[eax+0x4]
10017d50:	cmp    ecx,edx
10017d52:	je     0x10017d56
10017d54:	mov    DWORD PTR [ecx],edx
10017d56:	lea    ecx,[eax+0x8]
10017d59:	cmp    ecx,edx
10017d5b:	je     0x10017d5f
10017d5d:	mov    DWORD PTR [ecx],edx
10017d5f:	mov    BYTE PTR [eax+0x14],0x1
10017d63:	mov    BYTE PTR [eax+0x15],dl
10017d66:	ret    
10017d67:	push   ebx
10017d68:	xor    ebx,ebx
10017d6a:	cmp    DWORD PTR [esi],ebx
10017d6c:	jne    0x10017d73
10017d6e:	call   0x100422b0
10017d73:	mov    eax,DWORD PTR [esi+0x4]
10017d76:	cmp    BYTE PTR [eax+0x15],bl
10017d79:	je     0x10017d82
10017d7b:	call   0x100422b0
10017d80:	jmp    0x10017db0
10017d82:	mov    ecx,DWORD PTR [eax+0x8]
10017d85:	cmp    BYTE PTR [ecx+0x15],bl
10017d88:	jne    0x10017da5
10017d8a:	jmp    0x10017d8e
10017d8c:	mov    ecx,eax
10017d8e:	mov    eax,DWORD PTR [ecx]
10017d90:	cmp    BYTE PTR [eax+0x15],bl
10017d93:	je     0x10017d8c
10017d95:	mov    DWORD PTR [esi+0x4],ecx
10017d98:	jmp    0x10017db0
10017d9a:	mov    ecx,DWORD PTR [esi+0x4]
10017d9d:	cmp    ecx,DWORD PTR [eax+0x8]
10017da0:	jne    0x10017dad
10017da2:	mov    DWORD PTR [esi+0x4],eax
10017da5:	mov    eax,DWORD PTR [eax+0x4]
10017da8:	cmp    BYTE PTR [eax+0x15],bl
10017dab:	je     0x10017d9a
10017dad:	mov    DWORD PTR [esi+0x4],eax
10017db0:	mov    eax,esi
10017db2:	pop    ebx
10017db3:	ret    
10017db4:	push   ebp
10017db5:	mov    ebp,esp
10017db7:	push   ecx
10017db8:	push   DWORD PTR [ebp+0xc]
10017dbb:	lea    eax,[ebp-0x4]
10017dbe:	push   DWORD PTR [ebp+0x8]
10017dc1:	push   eax
10017dc2:	call   0x10013fd8
10017dc7:	add    esp,0xc
10017dca:	test   eax,eax
10017dcc:	jge    0x10017dd4
10017dce:	push   eax
10017dcf:	call   0x10001f41
10017dd4:	mov    eax,DWORD PTR [ebp-0x4]
10017dd7:	leave  
10017dd8:	ret    
10017dd9:	push   ecx
10017dda:	call   0x10018c2d
10017ddf:	pop    ecx
10017de0:	ret    
10017de1:	push   0x28
10017de3:	mov    eax,0x10060c29
10017de8:	call   0x10058845
10017ded:	mov    esi,DWORD PTR [ebp+0x8]
10017df0:	xor    ebx,ebx
10017df2:	mov    DWORD PTR [ebp-0x10],ebx
10017df5:	mov    DWORD PTR [esi+0x4],ebx
10017df8:	mov    DWORD PTR [esi+0x8],ebx
10017dfb:	mov    DWORD PTR [esi+0xc],ebx
10017dfe:	xor    edi,edi
10017e00:	inc    edi
10017e01:	push   edi
10017e02:	push   0x1006e92c
10017e07:	push   0x13
10017e09:	mov    DWORD PTR [ebp-0x4],ebx
10017e0c:	push   0x1006e96c
10017e11:	mov    DWORD PTR [ebp-0x10],edi
10017e14:	call   0x10003d75
10017e19:	sub    esp,0x10
10017e1c:	mov    ecx,esp
10017e1e:	mov    DWORD PTR [ebp-0x14],esp
10017e21:	push   eax
10017e22:	call   0x100011d6
10017e27:	lea    ecx,[ebp-0x34]
10017e2a:	call   0x100027c3
10017e2f:	push   eax
10017e30:	mov    DWORD PTR [ebp-0x4],edi
10017e33:	call   0x10003cdd
10017e38:	push   ebx
10017e39:	push   edi
10017e3a:	lea    ecx,[ebp-0x34]
10017e3d:	mov    BYTE PTR [ebp-0x4],bl
10017e40:	call   0x100012f9
10017e45:	push   edi
10017e46:	push   0x62344800
10017e4b:	push   0x1006e980
10017e50:	call   0x10003d63
10017e55:	push   0x7b6c85a2
10017e5a:	push   eax
10017e5b:	call   0x10003d63
10017e60:	push   0x559923be
10017e65:	push   eax
10017e66:	call   0x10003d63
10017e6b:	push   eax
10017e6c:	push   0x12
10017e6e:	push   0x1006e9b4
10017e73:	call   0x10003d75
10017e78:	pop    ecx
10017e79:	pop    ecx
10017e7a:	mov    ecx,esp
10017e7c:	mov    DWORD PTR [ebp-0x14],esp
10017e7f:	push   eax
10017e80:	call   0x100011d6
10017e85:	lea    ecx,[ebp-0x34]
10017e88:	call   0x100027c3
10017e8d:	push   eax
10017e8e:	mov    DWORD PTR [ebp-0x4],0x2
10017e95:	call   0x10003cdd
10017e9a:	push   ebx
10017e9b:	push   edi
10017e9c:	lea    ecx,[ebp-0x34]
10017e9f:	mov    BYTE PTR [ebp-0x4],bl
10017ea2:	call   0x100012f9
10017ea7:	push   edi
10017ea8:	push   0x1006e9c8
10017ead:	push   0x14
10017eaf:	push   0x1006ea08
10017eb4:	call   0x10003d75
10017eb9:	sub    esp,0x10
10017ebc:	mov    ecx,esp
10017ebe:	mov    DWORD PTR [ebp-0x14],esp
10017ec1:	push   eax
10017ec2:	call   0x100011d6
10017ec7:	lea    ecx,[ebp-0x34]
10017eca:	call   0x100027c3
10017ecf:	push   eax
10017ed0:	mov    DWORD PTR [ebp-0x4],0x3
10017ed7:	call   0x10003cdd
10017edc:	push   ebx
10017edd:	mov    BYTE PTR [ebp-0x4],bl
10017ee0:	push   edi
10017ee1:	lea    ecx,[ebp-0x34]
10017ee4:	call   0x100012f9
10017ee9:	push   edi
10017eea:	push   0x1006ea20
10017eef:	push   0x15
10017ef1:	push   0x1006ea4c
10017ef6:	call   0x10003d75
10017efb:	sub    esp,0x10
10017efe:	mov    ecx,esp
10017f00:	mov    DWORD PTR [ebp-0x14],esp
10017f03:	push   eax
10017f04:	call   0x100011d6
10017f09:	lea    ecx,[ebp-0x34]
10017f0c:	call   0x100027c3
10017f11:	push   eax
10017f12:	mov    DWORD PTR [ebp-0x4],0x4
10017f19:	call   0x10003cdd
10017f1e:	push   ebx
10017f1f:	push   edi
10017f20:	lea    ecx,[ebp-0x34]
10017f23:	mov    BYTE PTR [ebp-0x4],bl
10017f26:	call   0x100012f9
10017f2b:	push   edi
10017f2c:	push   0x5f2a6170
10017f31:	push   0x1006ea64
10017f36:	call   0x10003d63
10017f3b:	push   0x128da6a8
10017f40:	push   eax
10017f41:	call   0x10003d63
10017f46:	push   eax
10017f47:	push   0x15
10017f49:	push   0x1006ea94
10017f4e:	call   0x10003d75
10017f53:	mov    ecx,esp
10017f55:	mov    DWORD PTR [ebp-0x14],esp
10017f58:	push   eax
10017f59:	call   0x100011d6
10017f5e:	lea    ecx,[ebp-0x34]
10017f61:	call   0x100027c3
10017f66:	push   eax
10017f67:	mov    DWORD PTR [ebp-0x4],0x5
10017f6e:	call   0x10003cdd
10017f73:	push   ebx
10017f74:	push   edi
10017f75:	lea    ecx,[ebp-0x34]
10017f78:	mov    BYTE PTR [ebp-0x4],bl
10017f7b:	call   0x100012f9
10017f80:	push   edi
10017f81:	push   0x374ecb3e
10017f86:	push   0x1006eaac
10017f8b:	call   0x10003d63
10017f90:	push   0x1d34152
10017f95:	push   eax
10017f96:	call   0x10003d63
10017f9b:	push   0x644b7c66
10017fa0:	push   eax
10017fa1:	call   0x10003d63
10017fa6:	push   0x177c852e
10017fab:	push   eax
10017fac:	call   0x10003d63
10017fb1:	push   0x70acac54
10017fb6:	push   eax
10017fb7:	call   0x10003d63
10017fbc:	push   eax
10017fbd:	push   0x13
10017fbf:	push   0x1006eae0
10017fc4:	call   0x10003d75
10017fc9:	add    esp,0x18
10017fcc:	mov    ecx,esp
10017fce:	mov    DWORD PTR [ebp-0x14],esp
10017fd1:	push   eax
10017fd2:	call   0x100011d6
10017fd7:	lea    ecx,[ebp-0x34]
10017fda:	call   0x100027c3
10017fdf:	push   eax
10017fe0:	mov    DWORD PTR [ebp-0x4],0x6
10017fe7:	call   0x10003cdd
10017fec:	mov    BYTE PTR [ebp-0x4],bl
10017fef:	push   ebx
10017ff0:	push   edi
10017ff1:	lea    ecx,[ebp-0x34]
10017ff4:	call   0x100012f9
10017ff9:	push   edi
10017ffa:	push   0x6d6d6d30
10017fff:	push   0x1006eaf4
10018004:	call   0x10003d63
10018009:	push   0x408ed0de
1001800e:	push   eax
1001800f:	call   0x10003d63
10018014:	push   0x622012a
10018019:	push   eax
1001801a:	call   0x10003d63
1001801f:	push   0x618262b2
10018024:	push   eax
10018025:	call   0x10003d63
1001802a:	push   eax
1001802b:	push   0x12
1001802d:	push   0x1006eb18
10018032:	call   0x10003d75
10018037:	add    esp,0x10
1001803a:	mov    ecx,esp
1001803c:	mov    DWORD PTR [ebp-0x14],esp
1001803f:	push   eax
10018040:	call   0x100011d6
10018045:	lea    ecx,[ebp-0x34]
10018048:	call   0x100027c3
1001804d:	push   eax
1001804e:	mov    DWORD PTR [ebp-0x4],0x7
10018055:	call   0x10003cdd
1001805a:	push   ebx
1001805b:	push   edi
1001805c:	lea    ecx,[ebp-0x34]
1001805f:	call   0x100012f9
10018064:	mov    eax,esi
10018066:	call   0x1005891d
1001806b:	ret    
1001806c:	push   ebp
1001806d:	mov    ebp,esp
1001806f:	push   ecx
10018070:	push   ecx
10018071:	call   0x100330f0
10018076:	push   0x10
10018078:	push   edi
10018079:	push   esi
1001807a:	mov    DWORD PTR [ebp-0x4],eax
1001807d:	call   0x10043ed0
10018082:	add    esp,0xc
10018085:	xor    ecx,ecx
10018087:	xor    eax,eax
10018089:	mov    dl,BYTE PTR [eax+edi*1]
1001808c:	xor    BYTE PTR [ecx+esi*1],dl
1001808f:	inc    ecx
10018090:	inc    eax
10018091:	and    eax,0xf
10018094:	cmp    ecx,0x10
10018097:	jne    0x10018089
10018099:	xor    ecx,ecx
1001809b:	xor    eax,eax
1001809d:	mov    dl,BYTE PTR [ebp+eax*1-0x4]
100180a1:	xor    BYTE PTR [ecx+esi*1],dl
100180a4:	inc    ecx
100180a5:	inc    eax
100180a6:	and    eax,0x3
100180a9:	cmp    ecx,0x4
100180ac:	jne    0x1001809d
100180ae:	leave  
100180af:	ret    
100180b0:	push   ebp
100180b1:	mov    ebp,esp
100180b3:	and    esp,0xfffffff8
100180b6:	push   0xffffffff
100180b8:	push   0x10060bbd
100180bd:	mov    eax,fs:0x0
100180c3:	push   eax
100180c4:	sub    esp,0xc
100180c7:	mov    eax,ds:0x1007d030
100180cc:	xor    eax,esp
100180ce:	push   eax
100180cf:	lea    eax,[esp+0x10]
100180d3:	mov    fs:0x0,eax
100180d9:	push   0x1
100180db:	call   0x10042609
100180e0:	pop    ecx
100180e1:	mov    DWORD PTR [esp+0x8],eax
100180e5:	and    DWORD PTR [esp+0x18],0x0
100180ea:	push   0x1
100180ec:	lea    eax,[esp+0x8]
100180f0:	push   eax
100180f1:	call   0x100346c0
100180f6:	mov    BYTE PTR [esp+0x18],0x1
100180fb:	push   DWORD PTR [esp+0x8]
100180ff:	lea    eax,[esp+0x8]
10018103:	push   0x4
10018105:	push   eax
10018106:	xor    ecx,ecx
10018108:	call   0x10036640
1001810d:	push   DWORD PTR [esp+0x4]
10018111:	call   DWORD PTR ds:0x10065070
10018117:	push   DWORD PTR [esp+0x8]
1001811b:	call   0x10041d92
10018120:	pop    ecx
10018121:	mov    ecx,DWORD PTR [esp+0x10]
10018125:	mov    DWORD PTR fs:0x0,ecx
1001812c:	pop    ecx
1001812d:	mov    esp,ebp
1001812f:	pop    ebp
10018130:	ret    
10018131:	push   0x3c
10018133:	mov    eax,0x100627ac
10018138:	call   0x10058845
1001813d:	xor    eax,eax
1001813f:	mov    esi,ecx
10018141:	mov    DWORD PTR [ebp-0x48],eax
10018144:	mov    DWORD PTR [ebp-0x18],esi
10018147:	mov    DWORD PTR [ebp-0x24],eax
1001814a:	mov    DWORD PTR [ebp-0x14],eax
1001814d:	xor    ebx,ebx
1001814f:	inc    ebx
10018150:	mov    DWORD PTR [ebp-0x4],ebx
10018153:	call   0x10003ba8
10018158:	push   ebx
10018159:	lea    eax,[ebp-0x1c]
1001815c:	push   eax
1001815d:	mov    DWORD PTR [ebp-0x48],ebx
10018160:	call   0x100346c0
10018165:	lea    eax,[ebp-0x24]
10018168:	push   eax
10018169:	push   0x4
1001816b:	lea    eax,[ebp-0x20]
1001816e:	push   eax
1001816f:	lea    eax,[ebp-0x1c]
10018172:	push   eax
10018173:	mov    BYTE PTR [ebp-0x4],0x2
10018177:	call   0x10036790
1001817c:	push   eax
1001817d:	lea    edi,[ebp-0x14]
10018180:	call   0x1000209f
10018185:	push   DWORD PTR [ebp-0x20]
10018188:	call   0x10041d92
1001818d:	xor    esi,esi
1001818f:	cmp    DWORD PTR [ebp-0x14],esi
10018192:	pop    ecx
10018193:	je     0x100181c8
10018195:	cmp    DWORD PTR [ebp-0x24],esi
10018198:	je     0x100181c8
1001819a:	push   DWORD PTR [ebp-0x24]
1001819d:	lea    esi,[ebp-0x40]
100181a0:	push   DWORD PTR [ebp-0x14]
100181a3:	call   0x10003bbb
100181a8:	push   0xffffffff
100181aa:	push   0x0
100181ac:	mov    BYTE PTR [ebp-0x4],0x6
100181b0:	mov    ecx,DWORD PTR [ebp-0x18]
100181b3:	push   eax
100181b4:	call   0x1000124a
100181b9:	push   0x0
100181bb:	push   ebx
100181bc:	mov    ecx,esi
100181be:	call   0x100012f9
100181c3:	jmp    0x1001829d
100181c8:	lea    edi,[ebp-0x34]
100181cb:	call   0x100182ec
100181d0:	mov    BYTE PTR [ebp-0x4],0x3
100181d4:	cmp    DWORD PTR [ebp-0x30],esi
100181d7:	je     0x10018295
100181dd:	mov    eax,DWORD PTR [ebp-0x2c]
100181e0:	sub    eax,DWORD PTR [ebp-0x30]
100181e3:	sar    eax,0x5
100181e6:	je     0x10018295
100181ec:	call   DWORD PTR ds:0x10065118
100181f2:	push   eax
100181f3:	call   0x1004515a
100181f8:	xor    edi,edi
100181fa:	pop    ecx
100181fb:	xor    ebx,ebx
100181fd:	cmp    DWORD PTR [ebp-0x30],0x0
10018201:	jne    0x10018207
10018203:	xor    eax,eax
10018205:	jmp    0x10018210
10018207:	mov    eax,DWORD PTR [ebp-0x2c]
1001820a:	sub    eax,DWORD PTR [ebp-0x30]
1001820d:	sar    eax,0x5
10018210:	cmp    ebx,eax
10018212:	je     0x10018223
10018214:	push   ebx
10018215:	lea    esi,[ebp-0x34]
10018218:	call   0x10009853
1001821d:	add    edi,DWORD PTR [eax+0x1c]
10018220:	inc    ebx
10018221:	jmp    0x100181fd
10018223:	call   0x10045167
10018228:	xor    edx,edx
1001822a:	div    edi
1001822c:	xor    edi,edi
1001822e:	xor    ebx,ebx
10018230:	mov    DWORD PTR [ebp-0x20],edx
10018233:	xor    eax,eax
10018235:	cmp    DWORD PTR [ebp-0x30],eax
10018238:	je     0x10018243
1001823a:	mov    eax,DWORD PTR [ebp-0x2c]
1001823d:	sub    eax,DWORD PTR [ebp-0x30]
10018240:	sar    eax,0x5
10018243:	cmp    ebx,eax
10018245:	je     0x10018275
10018247:	push   ebx
10018248:	lea    esi,[ebp-0x34]
1001824b:	call   0x10009853
10018250:	add    edi,DWORD PTR [eax+0x1c]
10018253:	cmp    DWORD PTR [ebp-0x20],edi
10018256:	jb     0x1001825b
10018258:	inc    ebx
10018259:	jmp    0x10018233
1001825b:	push   ebx
1001825c:	lea    esi,[ebp-0x34]
1001825f:	call   0x10009853
10018264:	mov    esi,DWORD PTR [ebp-0x18]
10018267:	push   0xffffffff
10018269:	push   0x0
1001826b:	push   eax
1001826c:	mov    ecx,esi
1001826e:	call   0x1000124a
10018273:	jmp    0x10018278
10018275:	mov    esi,DWORD PTR [ebp-0x18]
10018278:	cmp    DWORD PTR [esi+0x18],0x10
1001827c:	mov    ecx,DWORD PTR [esi+0x14]
1001827f:	jb     0x10018286
10018281:	mov    esi,DWORD PTR [esi+0x4]
10018284:	jmp    0x10018289
10018286:	add    esi,0x4
10018289:	push   esi
1001828a:	push   0x4
1001828c:	lea    eax,[ebp-0x1c]
1001828f:	push   eax
10018290:	call   0x10036640
10018295:	lea    esi,[ebp-0x34]
10018298:	call   0x1000424f
1001829d:	push   DWORD PTR [ebp-0x1c]
100182a0:	call   DWORD PTR ds:0x10065070
100182a6:	push   DWORD PTR [ebp-0x14]
100182a9:	call   0x10041d92
100182ae:	mov    eax,DWORD PTR [ebp-0x18]
100182b1:	pop    ecx
100182b2:	call   0x1005891d
100182b7:	ret    
100182b8:	push   0x3e8
100182bd:	push   DWORD PTR ds:0x1007fea8
100182c3:	call   DWORD PTR ds:0x10065084
100182c9:	test   eax,eax
100182cb:	je     0x100182d0
100182cd:	mov    al,0x1
100182cf:	ret    
100182d0:	push   ebx
100182d1:	call   0x10018384
100182d6:	push   DWORD PTR ds:0x1007fea8
100182dc:	mov    bl,BYTE PTR ds:0x1007e69c
100182e2:	call   DWORD PTR ds:0x10065094
100182e8:	mov    al,bl
100182ea:	pop    ebx
100182eb:	ret    
100182ec:	push   ebp
100182ed:	mov    ebp,esp
100182ef:	and    esp,0xfffffff8
100182f2:	push   0xffffffff
100182f4:	push   0x10062758
100182f9:	mov    eax,fs:0x0
100182ff:	push   eax
10018300:	sub    esp,0x18
10018303:	push   esi
10018304:	mov    eax,ds:0x1007d030
10018309:	xor    eax,esp
1001830b:	push   eax
1001830c:	lea    eax,[esp+0x20]
10018310:	mov    fs:0x0,eax
10018316:	and    DWORD PTR [esp+0x8],0x0
1001831b:	push   0x3e8
10018320:	push   DWORD PTR ds:0x1007fea8
10018326:	call   DWORD PTR ds:0x10065084
1001832c:	test   eax,eax
1001832e:	je     0x10018339
10018330:	push   edi
10018331:	call   0x10017de1
10018336:	pop    ecx
10018337:	jmp    0x10018371
10018339:	call   0x10018384
1001833e:	lea    eax,[esp+0xc]
10018342:	push   eax
10018343:	mov    ecx,0x1007fe98
10018348:	call   0x100097c0
1001834d:	and    DWORD PTR [esp+0x28],0x0
10018352:	push   DWORD PTR ds:0x1007fea8
10018358:	call   DWORD PTR ds:0x10065094
1001835e:	push   edi
1001835f:	lea    ecx,[esp+0x10]
10018363:	call   0x100097c0
10018368:	lea    esi,[esp+0xc]
1001836c:	call   0x1000424f
10018371:	mov    eax,edi
10018373:	mov    ecx,DWORD PTR [esp+0x20]
10018377:	mov    DWORD PTR fs:0x0,ecx
1001837e:	pop    ecx
1001837f:	pop    esi
10018380:	mov    esp,ebp
10018382:	pop    ebp
10018383:	ret    
10018384:	push   0xac
10018389:	mov    eax,0x10062728
1001838e:	call   0x100588e4
10018393:	xor    ebx,ebx
10018395:	mov    DWORD PTR [ebp-0x4],ebx
10018398:	mov    DWORD PTR [ebp-0x34],ebx
1001839b:	xor    eax,eax
1001839d:	lea    edi,[ebp-0x30]
100183a0:	stos   DWORD PTR es:[edi],eax
100183a1:	stos   DWORD PTR es:[edi],eax
100183a2:	stos   DWORD PTR es:[edi],eax
100183a3:	mov    DWORD PTR [ebp-0x54],ebx
100183a6:	mov    DWORD PTR [ebp-0x60],ebx
100183a9:	push   0x1
100183ab:	lea    eax,[ebp-0x58]
100183ae:	push   eax
100183af:	mov    BYTE PTR [ebp-0x4],0x2
100183b3:	call   0x100346c0
100183b8:	lea    eax,[ebp-0x58]
100183bb:	push   eax
100183bc:	lea    ecx,[ebp-0x34]
100183bf:	mov    BYTE PTR [ebp-0x4],0x3
100183c3:	call   0x100360f0
100183c8:	push   0x2
100183ca:	lea    eax,[ebp-0x58]
100183cd:	push   eax
100183ce:	lea    ecx,[ebp-0x88]
100183d4:	call   0x10035720
100183d9:	mov    ecx,DWORD PTR [eax+0x4]
100183dc:	cmp    ecx,DWORD PTR ds:0x1007fd24
100183e2:	ja     0x10018409
100183e4:	jb     0x100183f0
100183e6:	mov    eax,DWORD PTR [eax]
100183e8:	cmp    eax,DWORD PTR ds:0x1007fd20
100183ee:	ja     0x10018409
100183f0:	push   DWORD PTR [ebp-0x58]
100183f3:	call   DWORD PTR ds:0x10065070
100183f9:	push   ebx
100183fa:	call   0x10041d92
100183ff:	pop    ecx
10018400:	mov    BYTE PTR [ebp-0x4],bl
10018403:	push   ebx
10018404:	jmp    0x1001859a
10018409:	lea    eax,[ebp-0x5c]
1001840c:	push   eax
1001840d:	push   0x2
1001840f:	lea    eax,[ebp-0x64]
10018412:	push   eax
10018413:	lea    eax,[ebp-0x58]
10018416:	push   eax
10018417:	call   0x10036790
1001841c:	push   eax
1001841d:	lea    edi,[ebp-0x54]
10018420:	call   0x1000209f
10018425:	push   DWORD PTR [ebp-0x64]
10018428:	call   0x10041d92
1001842d:	cmp    DWORD PTR [ebp-0x54],ebx
10018430:	pop    ecx
10018431:	je     0x100183f0
10018433:	call   0x1002f5b0
10018438:	lea    esi,[ebp-0x24]
1001843b:	lea    edi,[ebp-0x34]
1001843e:	mov    ds:0x1007fd20,eax
10018443:	mov    DWORD PTR ds:0x1007fd24,edx
10018449:	call   0x1001806c
1001844e:	push   0x1
10018450:	mov    eax,esi
10018452:	mov    esi,DWORD PTR [ebp-0x54]
10018455:	push   eax
10018456:	push   DWORD PTR [ebp-0x5c]
10018459:	lea    eax,[ebp-0x5c]
1001845c:	push   esi
1001845d:	push   eax
1001845e:	lea    edx,[ebp-0x65]
10018461:	lea    ecx,[ebp-0x64]
10018464:	call   0x10038630
10018469:	add    esp,0x14
1001846c:	push   eax
1001846d:	lea    edi,[ebp-0x60]
10018470:	call   0x1000209f
10018475:	push   DWORD PTR [ebp-0x5c]
10018478:	call   0x10041d92
1001847d:	mov    edi,DWORD PTR [ebp-0x60]
10018480:	cmp    edi,ebx
10018482:	pop    ecx
10018483:	jne    0x1001849e
10018485:	push   DWORD PTR [ebp-0x58]
10018488:	call   DWORD PTR ds:0x10065070
1001848e:	push   ebx
1001848f:	call   0x10041d92
10018494:	pop    ecx
10018495:	mov    BYTE PTR [ebp-0x4],bl
10018498:	push   esi
10018499:	jmp    0x1001859a
1001849e:	mov    eax,DWORD PTR [ebp-0x64]
100184a1:	mov    DWORD PTR [ebp-0x70],eax
100184a4:	lea    eax,[ebp-0x74]
100184a7:	push   eax
100184a8:	mov    DWORD PTR [ebp-0x74],ebx
100184ab:	mov    DWORD PTR [ebp-0x6c],edi
100184ae:	call   0x10037480
100184b3:	cmp    eax,0x1
100184b6:	je     0x100184c4
100184b8:	push   DWORD PTR [ebp-0x58]
100184bb:	call   DWORD PTR ds:0x10065070
100184c1:	push   edi
100184c2:	jmp    0x1001848f
100184c4:	lea    eax,[ebp-0x74]
100184c7:	push   eax
100184c8:	call   0x10037480
100184cd:	cmp    eax,ebx
100184cf:	setne  al
100184d2:	mov    ds:0x1007e69c,al
100184d7:	lea    eax,[ebp-0x74]
100184da:	push   eax
100184db:	call   0x10037480
100184e0:	cmp    eax,ebx
100184e2:	mov    DWORD PTR [ebp-0x5c],eax
100184e5:	je     0x100184b8
100184e7:	mov    DWORD PTR [ebp-0x94],ebx
100184ed:	mov    DWORD PTR [ebp-0x90],ebx
100184f3:	mov    DWORD PTR [ebp-0x8c],ebx
100184f9:	mov    BYTE PTR [ebp-0x4],0x4
100184fd:	xor    edi,edi
100184ff:	cmp    edi,DWORD PTR [ebp-0x5c]
10018502:	jge    0x1001856c
10018504:	lea    eax,[ebp-0x74]
10018507:	push   eax
10018508:	lea    esi,[ebp-0x50]
1001850b:	call   0x10037140
10018510:	lea    eax,[ebp-0x74]
10018513:	push   eax
10018514:	mov    BYTE PTR [ebp-0x4],0x5
10018518:	call   0x10037480
1001851d:	push   eax
1001851e:	sub    esp,0x1c
10018521:	mov    eax,esi
10018523:	mov    ecx,esp
10018525:	mov    DWORD PTR [ebp-0x84],esp
1001852b:	push   eax
1001852c:	call   0x100011b0
10018531:	lea    ecx,[ebp-0xb8]
10018537:	call   0x100027c3
1001853c:	push   eax
1001853d:	lea    esi,[ebp-0x98]
10018543:	mov    BYTE PTR [ebp-0x4],0x6
10018547:	call   0x10003cdd
1001854c:	push   ebx
1001854d:	push   0x1
1001854f:	lea    ecx,[ebp-0xb8]
10018555:	call   0x100012f9
1001855a:	push   ebx
1001855b:	push   0x1
1001855d:	lea    ecx,[ebp-0x50]
10018560:	mov    BYTE PTR [ebp-0x4],0x4
10018564:	call   0x100012f9
10018569:	inc    edi
1001856a:	jmp    0x100184ff
1001856c:	lea    eax,[ebp-0x98]
10018572:	call   0x100189b9
10018577:	lea    esi,[ebp-0x98]
1001857d:	call   0x1000424f
10018582:	push   DWORD PTR [ebp-0x58]
10018585:	call   DWORD PTR ds:0x10065070
1001858b:	push   DWORD PTR [ebp-0x60]
1001858e:	call   0x10041d92
10018593:	pop    ecx
10018594:	mov    BYTE PTR [ebp-0x4],bl
10018597:	push   DWORD PTR [ebp-0x54]
1001859a:	call   0x10041d92
1001859f:	mov    eax,ds:0x1007fe9c
100185a4:	cmp    eax,ebx
100185a6:	pop    ecx
100185a7:	je     0x100185b6
100185a9:	mov    ecx,DWORD PTR ds:0x1007fea0
100185af:	sub    ecx,eax
100185b1:	sar    ecx,0x5
100185b4:	jne    0x100185d9
100185b6:	lea    eax,[ebp-0x24]
100185b9:	push   eax
100185ba:	call   0x10017de1
100185bf:	pop    ecx
100185c0:	mov    ecx,0x1007fe98
100185c5:	mov    BYTE PTR [ebp-0x4],0x7
100185c9:	call   0x10018873
100185ce:	lea    esi,[ebp-0x24]
100185d1:	mov    BYTE PTR [ebp-0x4],bl
100185d4:	call   0x1000424f
100185d9:	call   0x100190ae
100185de:	mov    DWORD PTR [ebp-0x7c],eax
100185e1:	mov    BYTE PTR [eax+0x29],0x1
100185e5:	mov    eax,DWORD PTR [ebp-0x7c]
100185e8:	mov    DWORD PTR [eax+0x4],eax
100185eb:	mov    eax,DWORD PTR [ebp-0x7c]
100185ee:	mov    DWORD PTR [eax],eax
100185f0:	mov    eax,DWORD PTR [ebp-0x7c]
100185f3:	mov    DWORD PTR [eax+0x8],eax
100185f6:	mov    DWORD PTR [ebp-0x78],ebx
100185f9:	mov    BYTE PTR [ebp-0x4],0x8
100185fd:	mov    DWORD PTR [ebp-0x54],ebx
10018600:	mov    ecx,DWORD PTR ds:0x1007fe9c
10018606:	cmp    ecx,ebx
10018608:	je     0x10018659
1001860a:	mov    eax,ds:0x1007fea0
1001860f:	sub    eax,ecx
10018611:	sar    eax,0x5
10018614:	cmp    DWORD PTR [ebp-0x54],eax
10018617:	jae    0x10018659
10018619:	push   DWORD PTR [ebp-0x54]
1001861c:	mov    esi,0x1007fe98
10018621:	call   0x10009853
10018626:	lea    ecx,[ebp-0x50]
10018629:	push   ecx
1001862a:	mov    ecx,eax
1001862c:	call   0x100306c0
10018631:	pop    ecx
10018632:	push   eax
10018633:	lea    edi,[ebp-0x74]
10018636:	lea    ebx,[ebp-0x80]
10018639:	mov    BYTE PTR [ebp-0x4],0x9
1001863d:	call   0x100189f9
10018642:	push   0x0
10018644:	push   0x1
10018646:	lea    ecx,[ebp-0x50]
10018649:	mov    BYTE PTR [ebp-0x4],0x8
1001864d:	call   0x100012f9
10018652:	inc    DWORD PTR [ebp-0x54]
10018655:	xor    ebx,ebx
10018657:	jmp    0x10018600
10018659:	lea    eax,[ebp-0x80]
1001865c:	call   0x10018ab2
10018661:	lea    eax,[ebp-0x80]
10018664:	mov    BYTE PTR [ebp-0x4],bl
10018667:	call   0x10018c2d
1001866c:	call   0x10058940
10018671:	ret    
10018672:	push   0x4
10018674:	call   0x10037620
10018679:	pop    ecx
1001867a:	mov    eax,0x1001866c
1001867f:	ret    
10018680:	push   0x58
10018682:	mov    eax,0x100626b5
10018687:	call   0x100588e4
1001868c:	xor    edi,edi
1001868e:	inc    edi
1001868f:	push   edi
10018690:	lea    eax,[ebp-0x40]
10018693:	xor    esi,esi
10018695:	push   eax
10018696:	mov    DWORD PTR [ebp-0x4],esi
10018699:	call   0x100346c0
1001869e:	lea    eax,[ebp-0x40]
100186a1:	push   eax
100186a2:	lea    ecx,[ebp-0x38]
100186a5:	mov    BYTE PTR [ebp-0x4],0x1
100186a9:	call   0x100360f0
100186ae:	mov    eax,0x1007fe98
100186b3:	call   0x10004194
100186b8:	mov    DWORD PTR [ebp-0x58],eax
100186bb:	mov    DWORD PTR [ebp-0x3c],0xc
100186c2:	cmp    esi,DWORD PTR [ebp-0x58]
100186c5:	jge    0x100186dd
100186c7:	push   esi
100186c8:	call   0x10018994
100186cd:	mov    ecx,DWORD PTR [ebp-0x3c]
100186d0:	mov    eax,DWORD PTR [eax+0x14]
100186d3:	lea    eax,[ecx+eax*1+0x5]
100186d7:	mov    DWORD PTR [ebp-0x3c],eax
100186da:	inc    esi
100186db:	jmp    0x100186c2
100186dd:	push   DWORD PTR [ebp-0x3c]
100186e0:	call   0x10042609
100186e5:	mov    ebx,eax
100186e7:	pop    ecx
100186e8:	mov    DWORD PTR [ebp-0x64],ebx
100186eb:	push   0x4
100186ed:	mov    BYTE PTR [ebp-0x4],0x2
100186f1:	mov    DWORD PTR [ebp-0x60],edi
100186f4:	pop    edi
100186f5:	push   edi
100186f6:	lea    eax,[ebp-0x60]
100186f9:	push   eax
100186fa:	push   ebx
100186fb:	call   0x10043ed0
10018700:	add    esp,0xc
10018703:	push   edi
10018704:	lea    eax,[ebp+0x8]
10018707:	push   eax
10018708:	lea    eax,[ebx+0x4]
1001870b:	push   eax
1001870c:	call   0x10043ed0
10018711:	add    esp,0xc
10018714:	push   edi
10018715:	lea    eax,[ebp-0x58]
10018718:	push   eax
10018719:	lea    eax,[ebx+0x8]
1001871c:	push   eax
1001871d:	call   0x10043ed0
10018722:	add    esp,0xc
10018725:	and    DWORD PTR [ebp-0x48],0x0
10018729:	push   0xc
1001872b:	pop    esi
1001872c:	mov    eax,DWORD PTR [ebp-0x48]
1001872f:	cmp    eax,DWORD PTR [ebp-0x58]
10018732:	jge    0x10018783
10018734:	push   eax
10018735:	call   0x10018994
1001873a:	cmp    DWORD PTR [eax+0x18],0x10
1001873e:	jb     0x10018745
10018740:	mov    eax,DWORD PTR [eax+0x4]
10018743:	jmp    0x10018748
10018745:	add    eax,0x4
10018748:	push   eax
10018749:	lea    eax,[esi+ebx*1]
1001874c:	push   eax
1001874d:	call   0x10045190
10018752:	pop    ecx
10018753:	pop    ecx
10018754:	push   DWORD PTR [ebp-0x48]
10018757:	call   0x10018994
1001875c:	mov    eax,DWORD PTR [eax+0x14]
1001875f:	push   edi
10018760:	push   DWORD PTR [ebp-0x48]
10018763:	lea    esi,[esi+eax*1+0x1]
10018767:	call   0x10018994
1001876c:	add    eax,0x1c
1001876f:	push   eax
10018770:	lea    eax,[esi+ebx*1]
10018773:	push   eax
10018774:	call   0x10043ed0
10018779:	add    esp,0xc
1001877c:	add    esi,edi
1001877e:	inc    DWORD PTR [ebp-0x48]
10018781:	jmp    0x1001872c
10018783:	lea    esi,[ebp-0x28]
10018786:	lea    edi,[ebp-0x38]
10018789:	call   0x1001806c
1001878e:	and    DWORD PTR [ebp-0x48],0x0
10018792:	lea    eax,[ebp-0x48]
10018795:	push   eax
10018796:	mov    eax,esi
10018798:	push   eax
10018799:	push   DWORD PTR [ebp-0x3c]
1001879c:	xor    cl,cl
1001879e:	mov    edx,ebx
100187a0:	lea    edi,[ebp-0x3c]
100187a3:	call   0x10038480
100187a8:	mov    ecx,DWORD PTR [eax]
100187aa:	mov    esi,ecx
100187ac:	xor    edi,edi
100187ae:	add    esp,0xc
100187b1:	mov    DWORD PTR [eax],edi
100187b3:	mov    DWORD PTR [ebp-0x5c],esi
100187b6:	mov    BYTE PTR [ebp-0x4],0x3
100187ba:	push   DWORD PTR [ebp-0x3c]
100187bd:	call   0x10041d92
100187c2:	pop    ecx
100187c3:	mov    ecx,DWORD PTR [ebp-0x48]
100187c6:	push   esi
100187c7:	push   0x2
100187c9:	lea    eax,[ebp-0x40]
100187cc:	push   eax
100187cd:	call   0x10036640
100187d2:	call   0x1002f5b0
100187d7:	mov    DWORD PTR [ebp-0x4c],eax
100187da:	lea    eax,[ebp-0x4c]
100187dd:	push   eax
100187de:	lea    eax,[ebp-0x40]
100187e1:	push   eax
100187e2:	push   0x2
100187e4:	pop    ecx
100187e5:	mov    DWORD PTR [ebp-0x48],edx
100187e8:	call   0x10035870
100187ed:	cmp    DWORD PTR [ebp+0x8],edi
100187f0:	jne    0x1001880b
100187f2:	mov    DWORD PTR [ebp-0x4c],edi
100187f5:	xor    eax,eax
100187f7:	lea    edi,[ebp-0x48]
100187fa:	stos   DWORD PTR es:[edi],eax
100187fb:	lea    eax,[ebp-0x4c]
100187fe:	push   eax
100187ff:	lea    eax,[ebp-0x40]
10018802:	push   eax
10018803:	push   0x2
10018805:	pop    ecx
10018806:	call   0x10035870
1001880b:	push   esi
1001880c:	call   0x10041d92
10018811:	pop    ecx
10018812:	push   ebx
10018813:	call   0x10041d92
10018818:	pop    ecx
10018819:	push   DWORD PTR [ebp-0x40]
1001881c:	call   DWORD PTR ds:0x10065070
10018822:	or     DWORD PTR [ebp-0x4],0xffffffff
10018826:	mov    eax,ds:0x1007fe9c
1001882b:	test   eax,eax
1001882d:	je     0x1001883c
1001882f:	mov    ecx,DWORD PTR ds:0x1007fea0
10018835:	sub    ecx,eax
10018837:	sar    ecx,0x5
1001883a:	jne    0x1001885f
1001883c:	lea    eax,[ebp-0x54]
1001883f:	push   eax
10018840:	call   0x10017de1
10018845:	pop    ecx
10018846:	mov    ecx,0x1007fe98
1001884b:	mov    DWORD PTR [ebp-0x4],0x5
10018852:	call   0x10018873
10018857:	lea    esi,[ebp-0x54]
1001885a:	call   0x1000424f
1001885f:	call   0x10058940
10018864:	ret    
10018865:	push   0x4
10018867:	call   0x10037620
1001886c:	pop    ecx
1001886d:	mov    eax,0x10018826
10018872:	ret    
10018873:	push   ebx
10018874:	push   esi
10018875:	push   edi
10018876:	mov    esi,eax
10018878:	mov    edi,ecx
1001887a:	cmp    edi,esi
1001887c:	je     0x1001898e
10018882:	call   0x10004194
10018887:	test   eax,eax
10018889:	jne    0x100188cc
1001888b:	mov    ebx,DWORD PTR [edi+0x8]
1001888e:	cmp    DWORD PTR [edi+0x4],ebx
10018891:	jbe    0x10018898
10018893:	call   0x100422b0
10018898:	mov    esi,DWORD PTR [edi+0x4]
1001889b:	cmp    esi,DWORD PTR [edi+0x8]
1001889e:	jbe    0x100188a5
100188a0:	call   0x100422b0
100188a5:	cmp    esi,ebx
100188a7:	je     0x1001898e
100188ad:	push   DWORD PTR [edi+0x8]
100188b0:	mov    eax,esi
100188b2:	mov    ecx,ebx
100188b4:	call   0x10019116
100188b9:	pop    ecx
100188ba:	push   DWORD PTR [edi+0x8]
100188bd:	mov    esi,eax
100188bf:	call   0x100047b6
100188c4:	mov    DWORD PTR [edi+0x8],esi
100188c7:	jmp    0x1001898e
100188cc:	mov    eax,esi
100188ce:	call   0x10004194
100188d3:	mov    ebx,eax
100188d5:	mov    eax,edi
100188d7:	call   0x10004194
100188dc:	cmp    ebx,eax
100188de:	mov    eax,DWORD PTR [edi+0x4]
100188e1:	ja     0x10018909
100188e3:	push   DWORD PTR [esi+0x8]
100188e6:	mov    ecx,DWORD PTR [esi+0x4]
100188e9:	call   0x10019116
100188ee:	pop    ecx
100188ef:	push   DWORD PTR [edi+0x8]
100188f2:	call   0x100047b6
100188f7:	mov    eax,esi
100188f9:	call   0x10004194
100188fe:	shl    eax,0x5
10018901:	add    eax,DWORD PTR [edi+0x4]
10018904:	jmp    0x1001898b
10018909:	test   eax,eax
1001890b:	jne    0x10018911
1001890d:	xor    ebx,ebx
1001890f:	jmp    0x10018919
10018911:	mov    ebx,DWORD PTR [edi+0xc]
10018914:	sub    ebx,eax
10018916:	sar    ebx,0x5
10018919:	mov    eax,esi
1001891b:	call   0x10004194
10018920:	cmp    eax,ebx
10018922:	ja     0x10018946
10018924:	mov    eax,edi
10018926:	call   0x10004194
1001892b:	mov    ecx,DWORD PTR [esi+0x4]
1001892e:	mov    ebx,eax
10018930:	mov    eax,DWORD PTR [edi+0x4]
10018933:	shl    ebx,0x5
10018936:	add    ebx,ecx
10018938:	push   ebx
10018939:	call   0x10019116
1001893e:	pop    ecx
1001893f:	push   DWORD PTR [edi+0x8]
10018942:	mov    ecx,ebx
10018944:	jmp    0x10018983
10018946:	mov    eax,DWORD PTR [edi+0x4]
10018949:	xor    ebx,ebx
1001894b:	cmp    eax,ebx
1001894d:	je     0x10018960
1001894f:	push   DWORD PTR [edi+0x8]
10018952:	call   0x100047b6
10018957:	push   DWORD PTR [edi+0x4]
1001895a:	call   0x10041d92
1001895f:	pop    ecx
10018960:	mov    eax,esi
10018962:	call   0x10004194
10018967:	cmp    eax,ebx
10018969:	mov    DWORD PTR [edi+0x4],ebx
1001896c:	mov    DWORD PTR [edi+0x8],ebx
1001896f:	mov    DWORD PTR [edi+0xc],ebx
10018972:	je     0x1001898e
10018974:	call   0x10004226
10018979:	test   al,al
1001897b:	je     0x1001898e
1001897d:	push   DWORD PTR [edi+0x4]
10018980:	mov    ecx,DWORD PTR [esi+0x4]
10018983:	push   DWORD PTR [esi+0x8]
10018986:	call   0x10005e74
1001898b:	mov    DWORD PTR [edi+0x8],eax
1001898e:	mov    eax,edi
10018990:	pop    edi
10018991:	pop    esi
10018992:	pop    ebx
10018993:	ret    
10018994:	mov    eax,0x1007fe98
10018999:	call   0x10004194
1001899e:	cmp    DWORD PTR [esp+0x4],eax
100189a2:	jb     0x100189a9
100189a4:	call   0x100422b0
100189a9:	mov    eax,DWORD PTR [esp+0x4]
100189ad:	shl    eax,0x5
100189b0:	add    eax,DWORD PTR ds:0x1007fe9c
100189b6:	ret    0x4
100189b9:	push   ebp
100189ba:	mov    ebp,esp
100189bc:	and    esp,0xfffffff8
100189bf:	mov    edx,DWORD PTR [eax+0x4]
100189c2:	mov    ecx,DWORD PTR ds:0x1007fe9c
100189c8:	mov    DWORD PTR ds:0x1007fe9c,edx
100189ce:	mov    DWORD PTR [eax+0x4],ecx
100189d1:	mov    edx,DWORD PTR [eax+0x8]
100189d4:	mov    ecx,DWORD PTR ds:0x1007fea0
100189da:	mov    DWORD PTR ds:0x1007fea0,edx
100189e0:	mov    DWORD PTR [eax+0x8],ecx
100189e3:	mov    edx,DWORD PTR [eax+0xc]
100189e6:	mov    ecx,DWORD PTR ds:0x1007fea4
100189ec:	mov    DWORD PTR ds:0x1007fea4,edx
100189f2:	mov    DWORD PTR [eax+0xc],ecx
100189f5:	mov    esp,ebp
100189f7:	pop    ebp
100189f8:	ret    
100189f9:	push   ebp
100189fa:	mov    ebp,esp
100189fc:	and    esp,0xfffffff8
100189ff:	sub    esp,0x14
10018a02:	mov    eax,DWORD PTR [ebx+0x4]
10018a05:	push   esi
10018a06:	mov    esi,DWORD PTR [eax+0x4]
10018a09:	mov    DWORD PTR [esp+0x8],eax
10018a0d:	mov    al,0x1
10018a0f:	mov    BYTE PTR [esp+0xc],al
10018a13:	jmp    0x10018a33
10018a15:	mov    eax,DWORD PTR [ebp+0x8]
10018a18:	lea    ecx,[esi+0xc]
10018a1b:	mov    DWORD PTR [esp+0x8],esi
10018a1f:	call   0x1000481d
10018a24:	test   al,al
10018a26:	mov    BYTE PTR [esp+0xc],al
10018a2a:	je     0x10018a30
10018a2c:	mov    esi,DWORD PTR [esi]
10018a2e:	jmp    0x10018a33
10018a30:	mov    esi,DWORD PTR [esi+0x8]
10018a33:	cmp    BYTE PTR [esi+0x29],0x0
10018a37:	je     0x10018a15
10018a39:	test   al,al
10018a3b:	mov    ecx,DWORD PTR [esp+0x8]
10018a3f:	mov    esi,ecx
10018a41:	mov    DWORD PTR [esp+0x14],esi
10018a45:	mov    DWORD PTR [esp+0x10],ebx
10018a49:	je     0x10018a80
10018a4b:	mov    eax,DWORD PTR [ebx+0x4]
10018a4e:	cmp    ecx,DWORD PTR [eax]
10018a50:	jne    0x10018a73
10018a52:	push   DWORD PTR [ebp+0x8]
10018a55:	push   0x1
10018a57:	lea    eax,[esp+0x18]
10018a5b:	push   eax
10018a5c:	mov    esi,ebx
10018a5e:	call   0x10018ae0
10018a63:	mov    ecx,DWORD PTR [eax]
10018a65:	mov    eax,DWORD PTR [eax+0x4]
10018a68:	mov    DWORD PTR [edi],ecx
10018a6a:	mov    DWORD PTR [edi+0x4],eax
10018a6d:	mov    BYTE PTR [edi+0x8],0x1
10018a71:	jmp    0x10018aa9
10018a73:	lea    esi,[esp+0x10]
10018a77:	call   0x10018c62
10018a7c:	mov    esi,DWORD PTR [esp+0x14]
10018a80:	mov    ecx,DWORD PTR [ebp+0x8]
10018a83:	lea    eax,[esi+0xc]
10018a86:	call   0x1000481d
10018a8b:	test   al,al
10018a8d:	je     0x10018a9c
10018a8f:	push   DWORD PTR [ebp+0x8]
10018a92:	mov    ecx,DWORD PTR [esp+0xc]
10018a96:	push   DWORD PTR [esp+0x10]
10018a9a:	jmp    0x10018a57
10018a9c:	mov    eax,DWORD PTR [esp+0x10]
10018aa0:	mov    DWORD PTR [edi],eax
10018aa2:	mov    DWORD PTR [edi+0x4],esi
10018aa5:	mov    BYTE PTR [edi+0x8],0x0
10018aa9:	mov    eax,edi
10018aab:	pop    esi
10018aac:	mov    esp,ebp
10018aae:	pop    ebp
10018aaf:	ret    0x4
10018ab2:	push   ebp
10018ab3:	mov    ebp,esp
10018ab5:	and    esp,0xfffffff8
10018ab8:	mov    edx,DWORD PTR [eax+0x4]
10018abb:	mov    ecx,DWORD PTR ds:0x1007feb0
10018ac1:	mov    DWORD PTR ds:0x1007feb0,edx
10018ac7:	mov    DWORD PTR [eax+0x4],ecx
10018aca:	mov    edx,DWORD PTR [eax+0x8]
10018acd:	mov    ecx,DWORD PTR ds:0x1007feb4
10018ad3:	mov    DWORD PTR ds:0x1007feb4,edx
10018ad9:	mov    DWORD PTR [eax+0x8],ecx
10018adc:	mov    esp,ebp
10018ade:	pop    ebp
10018adf:	ret    
10018ae0:	push   0x48
10018ae2:	mov    eax,0x1005f147
10018ae7:	call   0x10058845
10018aec:	mov    edi,ecx
10018aee:	cmp    DWORD PTR [esi+0x8],0x9249248
10018af5:	jb     0x10018b29
10018af7:	push   0x1006bcb4
10018afc:	lea    ecx,[ebp-0x2c]
10018aff:	call   0x100011d6
10018b04:	and    DWORD PTR [ebp-0x4],0x0
10018b08:	lea    eax,[ebp-0x2c]
10018b0b:	push   eax
10018b0c:	lea    ecx,[ebp-0x54]
10018b0f:	call   0x10001065
10018b14:	push   0x10073960
10018b19:	lea    eax,[ebp-0x54]
10018b1c:	push   eax
10018b1d:	mov    DWORD PTR [ebp-0x54],0x1006a77c
10018b24:	call   0x10046704
10018b29:	mov    eax,DWORD PTR [esi+0x4]
10018b2c:	push   0x0
10018b2e:	push   DWORD PTR [ebp+0x10]
10018b31:	push   eax
10018b32:	push   edi
10018b33:	push   eax
10018b34:	call   0x10018db1
10018b39:	inc    DWORD PTR [esi+0x8]
10018b3c:	mov    ebx,eax
10018b3e:	mov    eax,DWORD PTR [esi+0x4]
10018b41:	cmp    edi,eax
10018b43:	jne    0x10018b52
10018b45:	mov    DWORD PTR [eax+0x4],ebx
10018b48:	mov    eax,DWORD PTR [esi+0x4]
10018b4b:	mov    DWORD PTR [eax],ebx
10018b4d:	mov    eax,DWORD PTR [esi+0x4]
10018b50:	jmp    0x10018b70
10018b52:	cmp    BYTE PTR [ebp+0xc],0x0
10018b56:	je     0x10018b65
10018b58:	mov    DWORD PTR [edi],ebx
10018b5a:	mov    eax,DWORD PTR [esi+0x4]
10018b5d:	cmp    edi,DWORD PTR [eax]
10018b5f:	jne    0x10018b73
10018b61:	mov    DWORD PTR [eax],ebx
10018b63:	jmp    0x10018b73
10018b65:	mov    DWORD PTR [edi+0x8],ebx
10018b68:	mov    eax,DWORD PTR [esi+0x4]
10018b6b:	cmp    edi,DWORD PTR [eax+0x8]
10018b6e:	jne    0x10018b73
10018b70:	mov    DWORD PTR [eax+0x8],ebx
10018b73:	mov    edi,ebx
10018b75:	lea    eax,[ebx+0x4]
10018b78:	jmp    0x10018c07
10018b7d:	mov    ecx,DWORD PTR [eax]
10018b7f:	mov    edx,DWORD PTR [ecx+0x4]
10018b82:	cmp    ecx,DWORD PTR [edx]
10018b84:	jne    0x10018bbb
10018b86:	mov    edx,DWORD PTR [edx+0x8]
10018b89:	cmp    BYTE PTR [edx+0x28],0x0
10018b8d:	je     0x10018bc3
10018b8f:	cmp    edi,DWORD PTR [ecx+0x8]
10018b92:	jne    0x10018b9c
10018b94:	push   esi
10018b95:	mov    edi,ecx
10018b97:	call   0x1002e3f5
10018b9c:	mov    eax,DWORD PTR [edi+0x4]
10018b9f:	mov    BYTE PTR [eax+0x28],0x1
10018ba3:	mov    eax,DWORD PTR [edi+0x4]
10018ba6:	mov    eax,DWORD PTR [eax+0x4]
10018ba9:	mov    BYTE PTR [eax+0x28],0x0
10018bad:	mov    eax,DWORD PTR [edi+0x4]
10018bb0:	mov    ecx,DWORD PTR [eax+0x4]
10018bb3:	push   esi
10018bb4:	call   0x10018d6f
10018bb9:	jmp    0x10018c04
10018bbb:	mov    edx,DWORD PTR [edx]
10018bbd:	cmp    BYTE PTR [edx+0x28],0x0
10018bc1:	jne    0x10018bdb
10018bc3:	mov    BYTE PTR [ecx+0x28],0x1
10018bc7:	mov    BYTE PTR [edx+0x28],0x1
10018bcb:	mov    ecx,DWORD PTR [eax]
10018bcd:	mov    ecx,DWORD PTR [ecx+0x4]
10018bd0:	mov    BYTE PTR [ecx+0x28],0x0
10018bd4:	mov    eax,DWORD PTR [eax]
10018bd6:	mov    edi,DWORD PTR [eax+0x4]
10018bd9:	jmp    0x10018c04
10018bdb:	cmp    edi,DWORD PTR [ecx]
10018bdd:	jne    0x10018be7
10018bdf:	push   esi
10018be0:	mov    edi,ecx
10018be2:	call   0x10018d6f
10018be7:	mov    eax,DWORD PTR [edi+0x4]
10018bea:	mov    BYTE PTR [eax+0x28],0x1
10018bee:	mov    eax,DWORD PTR [edi+0x4]
10018bf1:	mov    eax,DWORD PTR [eax+0x4]
10018bf4:	mov    BYTE PTR [eax+0x28],0x0
10018bf8:	mov    eax,DWORD PTR [edi+0x4]
10018bfb:	mov    ecx,DWORD PTR [eax+0x4]
10018bfe:	push   esi
10018bff:	call   0x1002e3f5
10018c04:	lea    eax,[edi+0x4]
10018c07:	mov    ecx,DWORD PTR [eax]
10018c09:	cmp    BYTE PTR [ecx+0x28],0x0
10018c0d:	je     0x10018b7d
10018c13:	mov    eax,DWORD PTR [esi+0x4]
10018c16:	mov    eax,DWORD PTR [eax+0x4]
10018c19:	mov    BYTE PTR [eax+0x28],0x1
10018c1d:	mov    eax,DWORD PTR [ebp+0x8]
10018c20:	mov    DWORD PTR [eax+0x4],ebx
10018c23:	mov    DWORD PTR [eax],esi
10018c25:	call   0x1005891d
10018c2a:	ret    0xc
10018c2d:	push   ebp
10018c2e:	mov    ebp,esp
10018c30:	and    esp,0xfffffff8
10018c33:	push   ecx
10018c34:	push   ecx
10018c35:	push   ebx
10018c36:	push   edi
10018c37:	mov    edi,eax
10018c39:	mov    eax,DWORD PTR [edi+0x4]
10018c3c:	mov    ecx,DWORD PTR [eax]
10018c3e:	push   eax
10018c3f:	push   edi
10018c40:	push   ecx
10018c41:	push   edi
10018c42:	lea    ebx,[esp+0x18]
10018c46:	call   0x10018cc3
10018c4b:	push   DWORD PTR [edi+0x4]
10018c4e:	call   0x10041d92
10018c53:	and    DWORD PTR [edi+0x4],0x0
10018c57:	and    DWORD PTR [edi+0x8],0x0
10018c5b:	pop    ecx
10018c5c:	pop    edi
10018c5d:	pop    ebx
10018c5e:	mov    esp,ebp
10018c60:	pop    ebp
10018c61:	ret    
10018c62:	push   ebx
10018c63:	xor    ebx,ebx
10018c65:	cmp    DWORD PTR [esi],ebx
10018c67:	jne    0x10018c6e
10018c69:	call   0x100422b0
10018c6e:	mov    eax,DWORD PTR [esi+0x4]
10018c71:	cmp    BYTE PTR [eax+0x29],bl
10018c74:	je     0x10018c83
10018c76:	mov    eax,DWORD PTR [eax+0x8]
10018c79:	mov    DWORD PTR [esi+0x4],eax
10018c7c:	cmp    BYTE PTR [eax+0x29],bl
10018c7f:	je     0x10018cbf
10018c81:	jmp    0x10018cb5
10018c83:	mov    ecx,DWORD PTR [eax]
10018c85:	cmp    BYTE PTR [ecx+0x29],bl
10018c88:	jne    0x10018ca5
10018c8a:	jmp    0x10018c8e
10018c8c:	mov    ecx,eax
10018c8e:	mov    eax,DWORD PTR [ecx+0x8]
10018c91:	cmp    BYTE PTR [eax+0x29],bl
10018c94:	je     0x10018c8c
10018c96:	mov    DWORD PTR [esi+0x4],ecx
10018c99:	jmp    0x10018cbf
10018c9b:	mov    ecx,DWORD PTR [esi+0x4]
10018c9e:	cmp    ecx,DWORD PTR [eax]
10018ca0:	jne    0x10018cad
10018ca2:	mov    DWORD PTR [esi+0x4],eax
10018ca5:	mov    eax,DWORD PTR [eax+0x4]
10018ca8:	cmp    BYTE PTR [eax+0x29],bl
10018cab:	je     0x10018c9b
10018cad:	mov    ecx,DWORD PTR [esi+0x4]
10018cb0:	cmp    BYTE PTR [ecx+0x29],bl
10018cb3:	je     0x10018cbc
10018cb5:	call   0x100422b0
10018cba:	jmp    0x10018cbf
10018cbc:	mov    DWORD PTR [esi+0x4],eax
10018cbf:	mov    eax,esi
10018cc1:	pop    ebx
10018cc2:	ret    
10018cc3:	push   ebp
10018cc4:	mov    ebp,esp
10018cc6:	mov    eax,DWORD PTR [edi+0x4]
10018cc9:	sub    esp,0x14
10018ccc:	cmp    DWORD PTR [ebp+0x8],0x0
10018cd0:	push   esi
10018cd1:	mov    esi,DWORD PTR [eax]
10018cd3:	je     0x10018cda
10018cd5:	cmp    DWORD PTR [ebp+0x8],edi
10018cd8:	je     0x10018cdf
10018cda:	call   0x100422b0
10018cdf:	cmp    DWORD PTR [ebp+0xc],esi
10018ce2:	jne    0x10018d27
10018ce4:	cmp    DWORD PTR [ebp+0x10],0x0
10018ce8:	mov    esi,DWORD PTR [edi+0x4]
10018ceb:	je     0x10018cf2
10018ced:	cmp    DWORD PTR [ebp+0x10],edi
10018cf0:	je     0x10018cf7
10018cf2:	call   0x100422b0
10018cf7:	cmp    DWORD PTR [ebp+0x14],esi
10018cfa:	jne    0x10018d27
10018cfc:	mov    eax,DWORD PTR [edi+0x4]
10018cff:	push   DWORD PTR [eax+0x4]
10018d02:	mov    ecx,edi
10018d04:	call   0x100190d8
10018d09:	mov    eax,DWORD PTR [edi+0x4]
10018d0c:	mov    DWORD PTR [eax+0x4],eax
10018d0f:	mov    eax,DWORD PTR [edi+0x4]
10018d12:	and    DWORD PTR [edi+0x8],0x0
10018d16:	mov    DWORD PTR [eax],eax
10018d18:	mov    eax,DWORD PTR [edi+0x4]
10018d1b:	mov    DWORD PTR [eax+0x8],eax
10018d1e:	mov    eax,DWORD PTR [edi+0x4]
10018d21:	mov    eax,DWORD PTR [eax]
10018d23:	mov    DWORD PTR [ebx],edi
10018d25:	jmp    0x10018d65
10018d27:	mov    eax,DWORD PTR [ebp+0x8]
10018d2a:	test   eax,eax
10018d2c:	je     0x10018d33
10018d2e:	cmp    eax,DWORD PTR [ebp+0x10]
10018d31:	je     0x10018d38
10018d33:	call   0x100422b0
10018d38:	mov    eax,DWORD PTR [ebp+0xc]
10018d3b:	cmp    eax,DWORD PTR [ebp+0x14]
10018d3e:	mov    ecx,DWORD PTR [ebp+0x8]
10018d41:	je     0x10018d63
10018d43:	lea    esi,[ebp+0x8]
10018d46:	mov    DWORD PTR [ebp-0x8],ecx
10018d49:	mov    DWORD PTR [ebp-0x4],eax
10018d4c:	call   0x1002da0c
10018d51:	push   DWORD PTR [ebp-0x4]
10018d54:	lea    eax,[ebp-0x10]
10018d57:	push   DWORD PTR [ebp-0x8]
10018d5a:	push   eax
10018d5b:	push   edi
10018d5c:	call   0x10018e18
10018d61:	jmp    0x10018d27
10018d63:	mov    DWORD PTR [ebx],ecx
10018d65:	mov    DWORD PTR [ebx+0x4],eax
10018d68:	mov    eax,ebx
10018d6a:	pop    esi
10018d6b:	leave  
10018d6c:	ret    0x10
10018d6f:	mov    eax,DWORD PTR [ecx]
10018d71:	mov    edx,DWORD PTR [eax+0x8]
10018d74:	mov    DWORD PTR [ecx],edx
10018d76:	mov    edx,DWORD PTR [eax+0x8]
10018d79:	cmp    BYTE PTR [edx+0x29],0x0
10018d7d:	jne    0x10018d82
10018d7f:	mov    DWORD PTR [edx+0x4],ecx
10018d82:	mov    edx,DWORD PTR [ecx+0x4]
10018d85:	mov    DWORD PTR [eax+0x4],edx
10018d88:	mov    edx,DWORD PTR [esp+0x4]
10018d8c:	mov    edx,DWORD PTR [edx+0x4]
10018d8f:	cmp    ecx,DWORD PTR [edx+0x4]
10018d92:	jne    0x10018d99
10018d94:	mov    DWORD PTR [edx+0x4],eax
10018d97:	jmp    0x10018da8
10018d99:	mov    edx,DWORD PTR [ecx+0x4]
10018d9c:	cmp    ecx,DWORD PTR [edx+0x8]
10018d9f:	jne    0x10018da6
10018da1:	mov    DWORD PTR [edx+0x8],eax
10018da4:	jmp    0x10018da8
10018da6:	mov    DWORD PTR [edx],eax
10018da8:	mov    DWORD PTR [eax+0x8],ecx
10018dab:	mov    DWORD PTR [ecx+0x4],eax
10018dae:	ret    0x4
10018db1:	push   0x8
10018db3:	mov    eax,0x1005e90c
10018db8:	call   0x10058878
10018dbd:	push   0x2c
10018dbf:	call   0x1004239e
10018dc4:	mov    esi,eax
10018dc6:	pop    ecx
10018dc7:	mov    DWORD PTR [ebp-0x14],esi
10018dca:	test   esi,esi
10018dcc:	mov    DWORD PTR [ebp-0x4],0x1
10018dd3:	je     0x10018dfb
10018dd5:	mov    eax,DWORD PTR [ebp+0x8]
10018dd8:	push   DWORD PTR [ebp+0x14]
10018ddb:	mov    DWORD PTR [esi],eax
10018ddd:	mov    eax,DWORD PTR [ebp+0xc]
10018de0:	mov    DWORD PTR [esi+0x4],eax
10018de3:	mov    eax,DWORD PTR [ebp+0x10]
10018de6:	lea    ecx,[esi+0xc]
10018de9:	mov    DWORD PTR [esi+0x8],eax
10018dec:	call   0x100011b0
10018df1:	mov    al,BYTE PTR [ebp+0x18]
10018df4:	mov    BYTE PTR [esi+0x28],al
10018df7:	mov    BYTE PTR [esi+0x29],0x0
10018dfb:	mov    eax,esi
10018dfd:	call   0x1005891d
10018e02:	ret    0x14
10018e05:	push   DWORD PTR [ebp-0x14]
10018e08:	call   0x10041d92
10018e0d:	pop    ecx
10018e0e:	push   0x0
10018e10:	push   0x0
10018e12:	call   0x10046704
10018e17:	int3   
10018e18:	push   0x44
10018e1a:	mov    eax,0x1005ef45
10018e1f:	call   0x10058845
10018e24:	mov    ebx,DWORD PTR [ebp+0x14]
10018e27:	cmp    BYTE PTR [ebx+0x29],0x0
10018e2b:	je     0x10018e5f
10018e2d:	push   0x1006bafc
10018e32:	lea    ecx,[ebp-0x28]
10018e35:	call   0x100011d6
10018e3a:	and    DWORD PTR [ebp-0x4],0x0
10018e3e:	lea    eax,[ebp-0x28]
10018e41:	push   eax
10018e42:	lea    ecx,[ebp-0x50]
10018e45:	call   0x10001065
10018e4a:	push   0x10073880
10018e4f:	lea    eax,[ebp-0x50]
10018e52:	push   eax
10018e53:	mov    DWORD PTR [ebp-0x50],0x1006a788
10018e5a:	call   0x10046704
10018e5f:	lea    esi,[ebp+0x10]
10018e62:	call   0x1002da0c
10018e67:	mov    ecx,DWORD PTR [ebx]
10018e69:	cmp    BYTE PTR [ecx+0x29],0x0
10018e6d:	je     0x10018e74
10018e6f:	mov    edi,DWORD PTR [ebx+0x8]
10018e72:	jmp    0x10018e8b
10018e74:	mov    eax,DWORD PTR [ebx+0x8]
10018e77:	cmp    BYTE PTR [eax+0x29],0x0
10018e7b:	je     0x10018e81
10018e7d:	mov    edi,ecx
10018e7f:	jmp    0x10018e8b
10018e81:	mov    eax,DWORD PTR [ebp+0x14]
10018e84:	cmp    eax,ebx
10018e86:	mov    edi,DWORD PTR [eax+0x8]
10018e89:	jne    0x10018f01
10018e8b:	cmp    BYTE PTR [edi+0x29],0x0
10018e8f:	mov    esi,DWORD PTR [ebx+0x4]
10018e92:	jne    0x10018e97
10018e94:	mov    DWORD PTR [edi+0x4],esi
10018e97:	mov    ecx,DWORD PTR [ebp+0x8]
10018e9a:	mov    eax,DWORD PTR [ecx+0x4]
10018e9d:	cmp    DWORD PTR [eax+0x4],ebx
10018ea0:	jne    0x10018ea7
10018ea2:	mov    DWORD PTR [eax+0x4],edi
10018ea5:	jmp    0x10018eb2
10018ea7:	cmp    DWORD PTR [esi],ebx
10018ea9:	jne    0x10018eaf
10018eab:	mov    DWORD PTR [esi],edi
10018ead:	jmp    0x10018eb2
10018eaf:	mov    DWORD PTR [esi+0x8],edi
10018eb2:	mov    edx,DWORD PTR [ecx+0x4]
10018eb5:	cmp    DWORD PTR [edx],ebx
10018eb7:	jne    0x10018ed5
10018eb9:	cmp    BYTE PTR [edi+0x29],0x0
10018ebd:	je     0x10018ec3
10018ebf:	mov    ecx,esi
10018ec1:	jmp    0x10018ed3
10018ec3:	mov    eax,DWORD PTR [edi]
10018ec5:	mov    ecx,edi
10018ec7:	jmp    0x10018ecd
10018ec9:	mov    ecx,eax
10018ecb:	mov    eax,DWORD PTR [ecx]
10018ecd:	cmp    BYTE PTR [eax+0x29],0x0
10018ed1:	je     0x10018ec9
10018ed3:	mov    DWORD PTR [edx],ecx
10018ed5:	mov    eax,DWORD PTR [ebp+0x8]
10018ed8:	mov    edx,DWORD PTR [eax+0x4]
10018edb:	cmp    DWORD PTR [edx+0x8],ebx
10018ede:	jne    0x10018f5b
10018ee0:	cmp    BYTE PTR [edi+0x29],0x0
10018ee4:	je     0x10018eea
10018ee6:	mov    ecx,esi
10018ee8:	jmp    0x10018efc
10018eea:	mov    eax,DWORD PTR [edi+0x8]
10018eed:	mov    ecx,edi
10018eef:	jmp    0x10018ef6
10018ef1:	mov    ecx,eax
10018ef3:	mov    eax,DWORD PTR [ecx+0x8]
10018ef6:	cmp    BYTE PTR [eax+0x29],0x0
10018efa:	je     0x10018ef1
10018efc:	mov    DWORD PTR [edx+0x8],ecx
10018eff:	jmp    0x10018f5b
10018f01:	mov    DWORD PTR [ecx+0x4],eax
10018f04:	mov    ecx,DWORD PTR [ebx]
10018f06:	mov    DWORD PTR [eax],ecx
10018f08:	cmp    eax,DWORD PTR [ebx+0x8]
10018f0b:	jne    0x10018f11
10018f0d:	mov    esi,eax
10018f0f:	jmp    0x10018f2b
10018f11:	cmp    BYTE PTR [edi+0x29],0x0
10018f15:	mov    esi,DWORD PTR [eax+0x4]
10018f18:	jne    0x10018f1d
10018f1a:	mov    DWORD PTR [edi+0x4],esi
10018f1d:	mov    DWORD PTR [esi],edi
10018f1f:	mov    ecx,DWORD PTR [ebx+0x8]
10018f22:	mov    DWORD PTR [eax+0x8],ecx
10018f25:	mov    ecx,DWORD PTR [ebx+0x8]
10018f28:	mov    DWORD PTR [ecx+0x4],eax
10018f2b:	mov    ecx,DWORD PTR [ebp+0x8]
10018f2e:	mov    ecx,DWORD PTR [ecx+0x4]
10018f31:	cmp    DWORD PTR [ecx+0x4],ebx
10018f34:	jne    0x10018f3b
10018f36:	mov    DWORD PTR [ecx+0x4],eax
10018f39:	jmp    0x10018f49
10018f3b:	mov    ecx,DWORD PTR [ebx+0x4]
10018f3e:	cmp    DWORD PTR [ecx],ebx
10018f40:	jne    0x10018f46
10018f42:	mov    DWORD PTR [ecx],eax
10018f44:	jmp    0x10018f49
10018f46:	mov    DWORD PTR [ecx+0x8],eax
10018f49:	mov    ecx,DWORD PTR [ebx+0x4]
10018f4c:	mov    DWORD PTR [eax+0x4],ecx
10018f4f:	mov    dl,BYTE PTR [ebx+0x28]
10018f52:	mov    cl,BYTE PTR [eax+0x28]
10018f55:	mov    BYTE PTR [eax+0x28],dl
10018f58:	mov    BYTE PTR [ebx+0x28],cl
10018f5b:	cmp    BYTE PTR [ebx+0x28],0x1
10018f5f:	jne    0x10019077
10018f65:	jmp    0x1001902b
10018f6a:	cmp    BYTE PTR [edi+0x28],0x1
10018f6e:	jne    0x10019073
10018f74:	mov    ecx,DWORD PTR [esi]
10018f76:	cmp    edi,ecx
10018f78:	jne    0x10018ff1
10018f7a:	mov    ecx,DWORD PTR [esi+0x8]
10018f7d:	cmp    BYTE PTR [ecx+0x28],0x0
10018f81:	jne    0x10018f98
10018f83:	push   DWORD PTR [ebp+0x8]
10018f86:	mov    BYTE PTR [ecx+0x28],0x1
10018f8a:	mov    ecx,esi
10018f8c:	mov    BYTE PTR [esi+0x28],0x0
10018f90:	call   0x1002e3f5
10018f95:	mov    ecx,DWORD PTR [esi+0x8]
10018f98:	cmp    BYTE PTR [ecx+0x29],0x0
10018f9c:	jne    0x10019026
10018fa2:	mov    eax,DWORD PTR [ecx]
10018fa4:	cmp    BYTE PTR [eax+0x28],0x1
10018fa8:	jne    0x10018fb3
10018faa:	mov    eax,DWORD PTR [ecx+0x8]
10018fad:	cmp    BYTE PTR [eax+0x28],0x1
10018fb1:	je     0x10019022
10018fb3:	mov    eax,DWORD PTR [ecx+0x8]
10018fb6:	cmp    BYTE PTR [eax+0x28],0x1
10018fba:	jne    0x10018fd1
10018fbc:	mov    eax,DWORD PTR [ecx]
10018fbe:	push   DWORD PTR [ebp+0x8]
10018fc1:	mov    BYTE PTR [eax+0x28],0x1
10018fc5:	mov    BYTE PTR [ecx+0x28],0x0
10018fc9:	call   0x10018d6f
10018fce:	mov    ecx,DWORD PTR [esi+0x8]
10018fd1:	mov    al,BYTE PTR [esi+0x28]
10018fd4:	push   DWORD PTR [ebp+0x8]
10018fd7:	mov    BYTE PTR [ecx+0x28],al
10018fda:	mov    BYTE PTR [esi+0x28],0x1
10018fde:	mov    eax,DWORD PTR [ecx+0x8]
10018fe1:	mov    ecx,esi
10018fe3:	mov    BYTE PTR [eax+0x28],0x1
10018fe7:	call   0x1002e3f5
10018fec:	jmp    0x10019073
10018ff1:	cmp    BYTE PTR [ecx+0x28],0x0
10018ff5:	jne    0x1001900b
10018ff7:	push   DWORD PTR [ebp+0x8]
10018ffa:	mov    BYTE PTR [ecx+0x28],0x1
10018ffe:	mov    ecx,esi
10019000:	mov    BYTE PTR [esi+0x28],0x0
10019004:	call   0x10018d6f
10019009:	mov    ecx,DWORD PTR [esi]
1001900b:	cmp    BYTE PTR [ecx+0x29],0x0
1001900f:	jne    0x10019026
10019011:	mov    eax,DWORD PTR [ecx+0x8]
10019014:	cmp    BYTE PTR [eax+0x28],0x1
10019018:	jne    0x1001903c
1001901a:	mov    eax,DWORD PTR [ecx]
1001901c:	cmp    BYTE PTR [eax+0x28],0x1
10019020:	jne    0x1001903c
10019022:	mov    BYTE PTR [ecx+0x28],0x0
10019026:	mov    edi,esi
10019028:	mov    esi,DWORD PTR [esi+0x4]
1001902b:	mov    eax,DWORD PTR [ebp+0x8]
1001902e:	mov    eax,DWORD PTR [eax+0x4]
10019031:	cmp    edi,DWORD PTR [eax+0x4]
10019034:	jne    0x10018f6a
1001903a:	jmp    0x10019073
1001903c:	mov    eax,DWORD PTR [ecx]
1001903e:	cmp    BYTE PTR [eax+0x28],0x1
10019042:	jne    0x10019059
10019044:	mov    eax,DWORD PTR [ecx+0x8]
10019047:	push   DWORD PTR [ebp+0x8]
1001904a:	mov    BYTE PTR [eax+0x28],0x1
1001904e:	mov    BYTE PTR [ecx+0x28],0x0
10019052:	call   0x1002e3f5
10019057:	mov    ecx,DWORD PTR [esi]
10019059:	mov    al,BYTE PTR [esi+0x28]
1001905c:	push   DWORD PTR [ebp+0x8]
1001905f:	mov    BYTE PTR [ecx+0x28],al
10019062:	mov    BYTE PTR [esi+0x28],0x1
10019066:	mov    eax,DWORD PTR [ecx]
10019068:	mov    ecx,esi
1001906a:	mov    BYTE PTR [eax+0x28],0x1
1001906e:	call   0x10018d6f
10019073:	mov    BYTE PTR [edi+0x28],0x1
10019077:	push   0x0
10019079:	push   0x1
1001907b:	lea    ecx,[ebx+0xc]
1001907e:	call   0x100012f9
10019083:	push   ebx
10019084:	call   0x10041d92
10019089:	pop    ecx
1001908a:	mov    ecx,DWORD PTR [ebp+0x8]
1001908d:	mov    eax,DWORD PTR [ecx+0x8]
10019090:	test   eax,eax
10019092:	jbe    0x10019098
10019094:	dec    eax
10019095:	mov    DWORD PTR [ecx+0x8],eax
10019098:	mov    ecx,DWORD PTR [ebp+0x10]
1001909b:	mov    eax,DWORD PTR [ebp+0xc]
1001909e:	mov    DWORD PTR [eax],ecx
100190a0:	mov    ecx,DWORD PTR [ebp+0x14]
100190a3:	mov    DWORD PTR [eax+0x4],ecx
100190a6:	call   0x1005891d
100190ab:	ret    0x10
100190ae:	push   0x2c
100190b0:	call   0x1004239e
100190b5:	xor    edx,edx
100190b7:	cmp    eax,edx
100190b9:	pop    ecx
100190ba:	je     0x100190be
100190bc:	mov    DWORD PTR [eax],edx
100190be:	lea    ecx,[eax+0x4]
100190c1:	cmp    ecx,edx
100190c3:	je     0x100190c7
100190c5:	mov    DWORD PTR [ecx],edx
100190c7:	lea    ecx,[eax+0x8]
100190ca:	cmp    ecx,edx
100190cc:	je     0x100190d0
100190ce:	mov    DWORD PTR [ecx],edx
100190d0:	mov    BYTE PTR [eax+0x28],0x1
100190d4:	mov    BYTE PTR [eax+0x29],dl
100190d7:	ret    
100190d8:	push   ebx
100190d9:	push   esi
100190da:	push   edi
100190db:	mov    edi,DWORD PTR [esp+0x10]
100190df:	cmp    BYTE PTR [edi+0x29],0x0
100190e3:	mov    ebx,ecx
100190e5:	mov    esi,edi
100190e7:	jne    0x10019110
100190e9:	push   DWORD PTR [esi+0x8]
100190ec:	mov    ecx,ebx
100190ee:	call   0x100190d8
100190f3:	mov    esi,DWORD PTR [esi]
100190f5:	push   0x0
100190f7:	push   0x1
100190f9:	lea    ecx,[edi+0xc]
100190fc:	call   0x100012f9
10019101:	push   edi
10019102:	call   0x10041d92
10019107:	cmp    BYTE PTR [esi+0x29],0x0
1001910b:	pop    ecx
1001910c:	mov    edi,esi
1001910e:	je     0x100190e9
10019110:	pop    edi
10019111:	pop    esi
10019112:	pop    ebx
10019113:	ret    0x4
10019116:	push   ebx
10019117:	push   esi
10019118:	mov    esi,DWORD PTR [esp+0xc]
1001911c:	push   edi
1001911d:	mov    edi,ecx
1001911f:	sub    esi,edi
10019121:	sar    esi,0x5
10019124:	shl    esi,0x5
10019127:	mov    ebx,eax
10019129:	add    esi,ebx
1001912b:	cmp    edi,DWORD PTR [esp+0x10]
1001912f:	je     0x10019150
10019131:	sub    ebx,edi
10019133:	push   0xffffffff
10019135:	push   0x0
10019137:	push   edi
10019138:	lea    ecx,[ebx+edi*1]
1001913b:	call   0x1000124a
10019140:	mov    eax,DWORD PTR [edi+0x1c]
10019143:	mov    DWORD PTR [ebx+edi*1+0x1c],eax
10019147:	add    edi,0x20
1001914a:	cmp    edi,DWORD PTR [esp+0x10]
1001914e:	jne    0x10019133
10019150:	pop    edi
10019151:	mov    eax,esi
10019153:	pop    esi
10019154:	pop    ebx
10019155:	ret    
10019156:	push   ebp
10019157:	mov    ebp,esp
10019159:	and    esp,0xfffffff8
1001915c:	push   0xffffffff
1001915e:	push   0x1005faf7
10019163:	mov    eax,fs:0x0
10019169:	push   eax
1001916a:	sub    esp,0x18
1001916d:	push   esi
1001916e:	mov    eax,ds:0x1007d030
10019173:	xor    eax,esp
10019175:	push   eax
10019176:	lea    eax,[esp+0x20]
1001917a:	mov    fs:0x0,eax
10019180:	mov    esi,ecx
10019182:	and    DWORD PTR [esp+0xc],0x0
10019187:	push   0x1f4
1001918c:	push   DWORD PTR [esi+0xc]
1001918f:	call   DWORD PTR ds:0x10065084
10019195:	test   eax,eax
10019197:	je     0x100191a7
10019199:	call   0x1001930e
1001919e:	and    DWORD PTR [edi+0x8],0x0
100191a2:	mov    DWORD PTR [edi+0x4],eax
100191a5:	jmp    0x100191de
100191a7:	lea    eax,[esp+0x10]
100191ab:	push   eax
100191ac:	mov    ecx,esi
100191ae:	call   0x100191f1
100191b3:	and    DWORD PTR [esp+0x28],0x0
100191b8:	push   DWORD PTR [esi+0xc]
100191bb:	call   DWORD PTR ds:0x10065094
100191c1:	push   edi
100191c2:	lea    ecx,[esp+0x14]
100191c6:	call   0x100191f1
100191cb:	lea    esi,[esp+0x10]
100191cf:	call   0x10019267
100191d4:	push   DWORD PTR [esp+0x14]
100191d8:	call   0x10041d92
100191dd:	pop    ecx
100191de:	mov    eax,edi
100191e0:	mov    ecx,DWORD PTR [esp+0x20]
100191e4:	mov    DWORD PTR fs:0x0,ecx
100191eb:	pop    ecx
100191ec:	pop    esi
100191ed:	mov    esp,ebp
100191ef:	pop    ebp
100191f0:	ret    
100191f1:	push   0x8
100191f3:	mov    eax,0x1005fad4
100191f8:	call   0x10058878
100191fd:	mov    edi,ecx
100191ff:	mov    esi,DWORD PTR [ebp+0x8]
10019202:	call   0x1001930e
10019207:	xor    ecx,ecx
10019209:	mov    DWORD PTR [ebp-0x4],ecx
1001920c:	mov    DWORD PTR [esi+0x4],eax
1001920f:	mov    DWORD PTR [esi+0x8],ecx
10019212:	mov    ecx,DWORD PTR [edi+0x4]
10019215:	mov    edx,DWORD PTR [ecx]
10019217:	mov    eax,DWORD PTR [eax]
10019219:	push   ecx
1001921a:	push   edi
1001921b:	push   edx
1001921c:	push   edi
1001921d:	push   eax
1001921e:	push   esi
1001921f:	push   DWORD PTR [ebp+0x8]
10019222:	push   esi
10019223:	call   0x10019380
10019228:	mov    eax,esi
1001922a:	call   0x1005891d
1001922f:	ret    0x4
10019232:	mov    esi,DWORD PTR [ebp+0x8]
10019235:	call   0x10019267
1001923a:	push   DWORD PTR [esi+0x4]
1001923d:	call   0x10041d92
10019242:	pop    ecx
10019243:	xor    ecx,ecx
10019245:	push   ecx
10019246:	push   ecx
10019247:	mov    DWORD PTR [esi+0x4],ecx
1001924a:	call   0x10046704
1001924f:	int3   
10019250:	push   esi
10019251:	mov    esi,eax
10019253:	call   0x10019267
10019258:	push   DWORD PTR [esi+0x4]
1001925b:	call   0x10041d92
10019260:	and    DWORD PTR [esi+0x4],0x0
10019264:	pop    ecx
10019265:	pop    esi
10019266:	ret    
10019267:	mov    eax,DWORD PTR [esi+0x4]
1001926a:	push   edi
1001926b:	mov    edi,DWORD PTR [eax]
1001926d:	mov    DWORD PTR [eax],eax
1001926f:	mov    eax,DWORD PTR [esi+0x4]
10019272:	mov    DWORD PTR [eax+0x4],eax
10019275:	and    DWORD PTR [esi+0x8],0x0
10019279:	cmp    edi,DWORD PTR [esi+0x4]
1001927c:	je     0x1001929c
1001927e:	push   ebx
1001927f:	mov    ebx,DWORD PTR [edi]
10019281:	push   0x0
10019283:	push   0x1
10019285:	lea    ecx,[edi+0x8]
10019288:	call   0x100012f9
1001928d:	push   edi
1001928e:	call   0x10041d92
10019293:	cmp    ebx,DWORD PTR [esi+0x4]
10019296:	pop    ecx
10019297:	mov    edi,ebx
10019299:	jne    0x1001927f
1001929b:	pop    ebx
1001929c:	pop    edi
1001929d:	ret    
1001929e:	push   0x48
100192a0:	mov    eax,0x1005f147
100192a5:	call   0x10058845
100192aa:	push   DWORD PTR [ebp+0x8]
100192ad:	mov    esi,DWORD PTR [ebp+0x10]
100192b0:	push   DWORD PTR [esi+0x4]
100192b3:	push   esi
100192b4:	call   0x10019326
100192b9:	mov    ecx,DWORD PTR [edi+0x8]
100192bc:	mov    edx,0x9249249
100192c1:	sub    edx,ecx
100192c3:	cmp    edx,0x1
100192c6:	jae    0x100192fa
100192c8:	push   0x1006eb2c
100192cd:	lea    ecx,[ebp-0x2c]
100192d0:	call   0x100011d6
100192d5:	and    DWORD PTR [ebp-0x4],0x0
100192d9:	lea    eax,[ebp-0x2c]
100192dc:	push   eax
100192dd:	lea    ecx,[ebp-0x54]
100192e0:	call   0x10001065
100192e5:	push   0x10073960
100192ea:	lea    eax,[ebp-0x54]
100192ed:	push   eax
100192ee:	mov    DWORD PTR [ebp-0x54],0x1006a77c
100192f5:	call   0x10046704
100192fa:	inc    ecx
100192fb:	mov    DWORD PTR [edi+0x8],ecx
100192fe:	mov    DWORD PTR [esi+0x4],eax
10019301:	mov    ecx,DWORD PTR [eax+0x4]
10019304:	mov    DWORD PTR [ecx],eax
10019306:	call   0x1005891d
1001930b:	ret    0xc
1001930e:	push   0x24
10019310:	call   0x1004239e
10019315:	test   eax,eax
10019317:	pop    ecx
10019318:	je     0x1001931c
1001931a:	mov    DWORD PTR [eax],eax
1001931c:	lea    ecx,[eax+0x4]
1001931f:	test   ecx,ecx
10019321:	je     0x10019325
10019323:	mov    DWORD PTR [ecx],eax
10019325:	ret    
10019326:	push   0x8
10019328:	mov    eax,0x1005f124
1001932d:	call   0x10058878
10019332:	push   0x24
10019334:	call   0x1004239e
10019339:	and    DWORD PTR [ebp-0x4],0x0
1001933d:	mov    esi,eax
1001933f:	test   esi,esi
10019341:	pop    ecx
10019342:	mov    DWORD PTR [ebp-0x14],esi
10019345:	je     0x1001934c
10019347:	mov    eax,DWORD PTR [ebp+0x8]
1001934a:	mov    DWORD PTR [esi],eax
1001934c:	lea    eax,[esi+0x4]
1001934f:	test   eax,eax
10019351:	je     0x10019358
10019353:	mov    ecx,DWORD PTR [ebp+0xc]
10019356:	mov    DWORD PTR [eax],ecx
10019358:	push   DWORD PTR [ebp+0x10]
1001935b:	lea    ecx,[esi+0x8]
1001935e:	call   0x1000fc65
10019363:	mov    eax,esi
10019365:	call   0x1005891d
1001936a:	ret    0xc
1001936d:	push   DWORD PTR [ebp-0x14]
10019370:	call   0x10041d92
10019375:	pop    ecx
10019376:	push   0x0
10019378:	push   0x0
1001937a:	call   0x10046704
1001937f:	int3   
10019380:	push   0x14
10019382:	mov    eax,0x1005fab9
10019387:	call   0x10058878
1001938c:	mov    edi,DWORD PTR [ebp+0x18]
1001938f:	mov    esi,DWORD PTR [ebp+0x1c]
10019392:	and    DWORD PTR [ebp-0x4],0x0
10019396:	mov    DWORD PTR [ebp-0x18],edi
10019399:	mov    DWORD PTR [ebp-0x14],esi
1001939c:	test   edi,edi
1001939e:	je     0x100193a5
100193a0:	cmp    edi,DWORD PTR [ebp+0x20]
100193a3:	je     0x100193aa
100193a5:	call   0x100422b0
100193aa:	cmp    esi,DWORD PTR [ebp+0x24]
100193ad:	je     0x10019441
100193b3:	test   edi,edi
100193b5:	jne    0x100193bc
100193b7:	call   0x100422b0
100193bc:	cmp    esi,DWORD PTR [edi+0x4]
100193bf:	jne    0x100193c6
100193c1:	call   0x100422b0
100193c6:	push   DWORD PTR [ebp+0x14]
100193c9:	mov    edi,DWORD PTR [ebp+0x8]
100193cc:	push   DWORD PTR [ebp+0x10]
100193cf:	add    esi,0x8
100193d2:	push   esi
100193d3:	call   0x1001929e
100193d8:	lea    esi,[ebp+0x18]
100193db:	call   0x1002634d
100193e0:	mov    esi,DWORD PTR [ebp+0x1c]
100193e3:	mov    edi,DWORD PTR [ebp+0x18]
100193e6:	jmp    0x1001939c
100193e8:	mov    edi,DWORD PTR [ebp+0x14]
100193eb:	mov    eax,DWORD PTR [ebp-0x18]
100193ee:	test   eax,eax
100193f0:	je     0x100193f7
100193f2:	cmp    eax,DWORD PTR [ebp+0x18]
100193f5:	je     0x100193fc
100193f7:	call   0x100422b0
100193fc:	mov    eax,DWORD PTR [ebp-0x14]
100193ff:	cmp    eax,DWORD PTR [ebp+0x1c]
10019402:	je     0x10019438
10019404:	mov    ebx,DWORD PTR [ebp+0x10]
10019407:	test   ebx,ebx
10019409:	mov    DWORD PTR [ebp+0x24],edi
1001940c:	jne    0x10019413
1001940e:	call   0x100422b0
10019413:	mov    esi,DWORD PTR [edi+0x4]
10019416:	cmp    esi,DWORD PTR [ebx+0x4]
10019419:	jne    0x10019420
1001941b:	call   0x100422b0
10019420:	push   esi
10019421:	push   ebx
10019422:	mov    ebx,DWORD PTR [ebp+0x8]
10019425:	lea    eax,[ebp-0x20]
10019428:	push   eax
10019429:	call   0x10019449
1001942e:	lea    esi,[ebp-0x18]
10019431:	call   0x1002634d
10019436:	jmp    0x100193eb
10019438:	push   0x0
1001943a:	push   0x0
1001943c:	call   0x10046704
10019441:	call   0x1005891d
10019446:	ret    0x20
10019449:	push   ebp
1001944a:	mov    ebp,esp
1001944c:	push   ecx
1001944d:	push   ecx
1001944e:	mov    eax,DWORD PTR [ebp+0xc]
10019451:	push   esi
10019452:	push   edi
10019453:	mov    edi,DWORD PTR [ebp+0x10]
10019456:	lea    esi,[ebp+0xc]
10019459:	mov    DWORD PTR [ebp-0x8],eax
1001945c:	call   0x1002634d
10019461:	cmp    edi,DWORD PTR [ebx+0x4]
10019464:	je     0x1001948b
10019466:	mov    eax,DWORD PTR [edi+0x4]
10019469:	mov    ecx,DWORD PTR [edi]
1001946b:	mov    DWORD PTR [eax],ecx
1001946d:	mov    ecx,DWORD PTR [edi+0x4]
10019470:	mov    eax,DWORD PTR [edi]
10019472:	push   0x0
10019474:	mov    DWORD PTR [eax+0x4],ecx
10019477:	push   0x1
10019479:	lea    ecx,[edi+0x8]
1001947c:	call   0x100012f9
10019481:	push   edi
10019482:	call   0x10041d92
10019487:	dec    DWORD PTR [ebx+0x8]
1001948a:	pop    ecx
1001948b:	mov    ecx,DWORD PTR [ebp+0xc]
1001948e:	mov    eax,DWORD PTR [ebp+0x8]
10019491:	mov    DWORD PTR [eax],ecx
10019493:	mov    ecx,DWORD PTR [ebp+0x10]
10019496:	pop    edi
10019497:	mov    DWORD PTR [eax+0x4],ecx
1001949a:	pop    esi
1001949b:	leave  
1001949c:	ret    0xc
1001949f:	push   esi
100194a0:	push   0x1006bb18
100194a5:	lea    esi,[edi+0x4]
100194a8:	call   0x10005e33
100194ad:	test   al,al
100194af:	pop    ecx
100194b0:	pop    esi
100194b1:	je     0x100194bc
100194b3:	cmp    DWORD PTR [edi],0x0
100194b6:	jne    0x100194bc
100194b8:	xor    eax,eax
100194ba:	inc    eax
100194bb:	ret    
100194bc:	xor    eax,eax
100194be:	ret    
100194bf:	push   ebp
100194c0:	mov    ebp,esp
100194c2:	push   ecx
100194c3:	mov    ecx,DWORD PTR [ebp+0x8]
100194c6:	and    DWORD PTR [ebp-0x4],0x0
100194ca:	add    eax,0x4
100194cd:	push   eax
100194ce:	call   0x100011b0
100194d3:	mov    eax,DWORD PTR [ebp+0x8]
100194d6:	leave  
100194d7:	ret    0x4
100194da:	push   0x0
100194dc:	mov    eax,0x1005f61a
100194e1:	call   0x10058845
100194e6:	mov    edi,DWORD PTR [ebp+0x8]
100194e9:	call   0x10019ee5
100194ee:	lea    ecx,[edi+0x4]
100194f1:	mov    DWORD PTR [ecx],eax
100194f3:	mov    BYTE PTR [eax+0x4d],0x1
100194f7:	mov    eax,DWORD PTR [ecx]
100194f9:	mov    DWORD PTR [eax+0x4],eax
100194fc:	mov    eax,DWORD PTR [ecx]
100194fe:	mov    DWORD PTR [eax],eax
10019500:	mov    ecx,DWORD PTR [ecx]
10019502:	xor    ebx,ebx
10019504:	mov    DWORD PTR [ecx+0x8],ecx
10019507:	mov    DWORD PTR [edi+0x8],ebx
1001950a:	lea    esi,[edi+0xc]
1001950d:	mov    DWORD PTR [ebp-0x4],ebx
10019510:	call   0x10013b3e
10019515:	mov    eax,DWORD PTR [ebp+0xc]
10019518:	push   ebx
10019519:	mov    DWORD PTR [edi+0x1c],eax
1001951c:	mov    eax,DWORD PTR [ebp+0x10]
1001951f:	push   ebx
10019520:	push   ebx
10019521:	mov    DWORD PTR [edi+0x20],eax
10019524:	call   DWORD PTR ds:0x10065074
1001952a:	mov    DWORD PTR [edi+0x18],eax
1001952d:	mov    eax,edi
1001952f:	call   0x1005891d
10019534:	ret    0xc
10019537:	push   ebp
10019538:	mov    ebp,esp
1001953a:	and    esp,0xfffffff8
1001953d:	push   0xffffffff
1001953f:	push   0x10060b85
10019544:	mov    eax,fs:0x0
1001954a:	push   eax
1001954b:	sub    esp,0x60
1001954e:	mov    eax,ds:0x1007d030
10019553:	xor    eax,esp
10019555:	mov    DWORD PTR [esp+0x58],eax
10019559:	push   esi
1001955a:	mov    eax,ds:0x1007d030
1001955f:	xor    eax,esp
10019561:	push   eax
10019562:	lea    eax,[esp+0x68]
10019566:	mov    fs:0x0,eax
1001956c:	mov    eax,DWORD PTR [ebp+0x8]
1001956f:	push   eax
10019570:	lea    esi,[esp+0x2c]
10019574:	call   0x1002ffc0
10019579:	pop    ecx
1001957a:	lea    ecx,[esp+0x44]
1001957e:	push   ecx
1001957f:	xor    esi,esi
10019581:	mov    ecx,eax
10019583:	mov    DWORD PTR [esp+0x74],esi
10019587:	call   0x1002f720
1001958c:	pop    ecx
1001958d:	push   esi
1001958e:	push   0x1
10019590:	lea    ecx,[esp+0x30]
10019594:	mov    BYTE PTR [esp+0x78],0x2
10019599:	call   0x100012f9
1001959e:	mov    eax,DWORD PTR [ebp+0xc]
100195a1:	push   ebx
100195a2:	lea    ecx,[esp+0x10]
100195a6:	mov    DWORD PTR [esp+0xc],eax
100195aa:	call   0x100011b0
100195af:	lea    eax,[esp+0x8]
100195b3:	push   eax
100195b4:	lea    edx,[esp+0x48]
100195b8:	mov    ecx,edi
100195ba:	mov    BYTE PTR [esp+0x74],0x3
100195bf:	call   0x10019770
100195c4:	push   esi
100195c5:	push   0x1
100195c7:	lea    ecx,[esp+0x14]
100195cb:	call   0x100012f9
100195d0:	push   esi
100195d1:	push   0x1
100195d3:	lea    ecx,[esp+0x4c]
100195d7:	call   0x100012f9
100195dc:	mov    ecx,DWORD PTR [esp+0x68]
100195e0:	mov    DWORD PTR fs:0x0,ecx
100195e7:	pop    ecx
100195e8:	pop    esi
100195e9:	mov    ecx,DWORD PTR [esp+0x58]
100195ed:	xor    ecx,esp
100195ef:	call   0x10041d97
100195f4:	mov    esp,ebp
100195f6:	pop    ebp
100195f7:	ret    0x8
100195fa:	push   ebp
100195fb:	mov    ebp,esp
100195fd:	and    esp,0xfffffff8
10019600:	push   0xffffffff
10019602:	push   0x10061788
10019607:	mov    eax,fs:0x0
1001960d:	push   eax
1001960e:	sub    esp,0x90
10019614:	mov    eax,ds:0x1007d030
10019619:	xor    eax,esp
1001961b:	mov    DWORD PTR [esp+0x88],eax
10019622:	push   ebx
10019623:	push   esi
10019624:	push   edi
10019625:	mov    eax,ds:0x1007d030
1001962a:	xor    eax,esp
1001962c:	push   eax
1001962d:	lea    eax,[esp+0xa0]
10019634:	mov    fs:0x0,eax
1001963a:	mov    eax,DWORD PTR [ebp+0x8]
1001963d:	mov    DWORD PTR [esp+0x1c],eax
10019641:	mov    eax,DWORD PTR [ebp+0xc]
10019644:	mov    esi,ecx
10019646:	mov    edi,0x1006bb18
1001964b:	xor    ebx,ebx
1001964d:	push   edi
1001964e:	lea    ecx,[esp+0x44]
10019652:	mov    DWORD PTR [esp+0x1c],eax
10019656:	mov    DWORD PTR [esp+0x24],ebx
1001965a:	call   0x100011d6
1001965f:	lea    eax,[esp+0x40]
10019663:	mov    DWORD PTR [esp+0xa8],ebx
1001966a:	push   eax
1001966b:	lea    ecx,[esp+0x80]
10019672:	mov    DWORD PTR [esp+0x7c],ebx
10019676:	call   0x100011b0
1001967b:	push   ebx
1001967c:	push   0x1
1001967e:	lea    ecx,[esp+0x48]
10019682:	mov    BYTE PTR [esp+0xb0],0x2
1001968a:	call   0x100012f9
1001968f:	push   esi
10019690:	lea    esi,[esp+0x60]
10019694:	call   0x1002ffc0
10019699:	pop    ecx
1001969a:	lea    ecx,[esp+0x24]
1001969e:	push   ecx
1001969f:	mov    ecx,eax
100196a1:	mov    BYTE PTR [esp+0xac],0x3
100196a9:	call   0x1002f720
100196ae:	pop    ecx
100196af:	lea    ecx,[esp+0x78]
100196b3:	push   ecx
100196b4:	push   eax
100196b5:	push   DWORD PTR [esp+0x24]
100196b9:	mov    BYTE PTR [esp+0xb4],0x4
100196c1:	call   0x100199c2
100196c6:	xor    esi,esi
100196c8:	push   ebx
100196c9:	inc    esi
100196ca:	push   esi
100196cb:	lea    ecx,[esp+0x2c]
100196cf:	mov    BYTE PTR [esp+0x1f],al
100196d3:	call   0x100012f9
100196d8:	push   ebx
100196d9:	push   esi
100196da:	lea    ecx,[esp+0x64]
100196de:	mov    BYTE PTR [esp+0xb0],0x2
100196e6:	call   0x100012f9
100196eb:	cmp    BYTE PTR [esp+0x17],bl
100196ef:	je     0x1001970a
100196f1:	mov    eax,DWORD PTR [esp+0x78]
100196f5:	mov    edi,DWORD PTR [esp+0x18]
100196f9:	mov    DWORD PTR [edi],eax
100196fb:	lea    eax,[esp+0x7c]
100196ff:	push   eax
10019700:	lea    ecx,[edi+0x4]
10019703:	call   0x100011b0
10019708:	jmp    0x1001973a
1001970a:	push   edi
1001970b:	lea    ecx,[esp+0x28]
1001970f:	call   0x100011d6
10019714:	mov    edi,DWORD PTR [esp+0x18]
10019718:	lea    eax,[esp+0x24]
1001971c:	mov    BYTE PTR [esp+0xa8],0x5
10019724:	push   eax
10019725:	lea    ecx,[edi+0x4]
10019728:	mov    DWORD PTR [edi],ebx
1001972a:	call   0x100011b0
1001972f:	push   ebx
10019730:	push   esi
10019731:	lea    ecx,[esp+0x2c]
10019735:	call   0x100012f9
1001973a:	push   ebx
1001973b:	push   esi
1001973c:	lea    ecx,[esp+0x84]
10019743:	call   0x100012f9
10019748:	mov    eax,edi
1001974a:	mov    ecx,DWORD PTR [esp+0xa0]
10019751:	mov    DWORD PTR fs:0x0,ecx
10019758:	pop    ecx
10019759:	pop    edi
1001975a:	pop    esi
1001975b:	pop    ebx
1001975c:	mov    ecx,DWORD PTR [esp+0x88]
10019763:	xor    ecx,esp
10019765:	call   0x10041d97
1001976a:	mov    esp,ebp
1001976c:	pop    ebp
1001976d:	ret    0x8
10019770:	push   0xf0
10019775:	mov    eax,0x10060b45
1001977a:	call   0x100588e4
1001977f:	mov    eax,DWORD PTR [ebp+0x8]
10019782:	mov    edi,ecx
10019784:	push   0x1f4
10019789:	push   DWORD PTR [edi+0x18]
1001978c:	mov    esi,edx
1001978e:	mov    DWORD PTR [ebp-0x50],edi
10019791:	mov    DWORD PTR [ebp-0x4c],esi
10019794:	mov    DWORD PTR [ebp-0x54],eax
10019797:	call   DWORD PTR ds:0x10065084
1001979d:	test   eax,eax
1001979f:	jne    0x1001986a
100197a5:	and    DWORD PTR [ebp-0x4],eax
100197a8:	push   edi
100197a9:	call   0x10019a86
100197ae:	push   esi
100197af:	lea    ebx,[ebp-0x44]
100197b2:	mov    esi,edi
100197b4:	call   0x10019c5d
100197b9:	mov    ebx,DWORD PTR [edi+0x4]
100197bc:	xor    esi,esi
100197be:	cmp    DWORD PTR [ebp-0x44],esi
100197c1:	je     0x100197c8
100197c3:	cmp    DWORD PTR [ebp-0x44],edi
100197c6:	je     0x100197cd
100197c8:	call   0x100422b0
100197cd:	cmp    DWORD PTR [ebp-0x40],ebx
100197d0:	je     0x10019872
100197d6:	lea    ebx,[edi+0xc]
100197d9:	mov    eax,DWORD PTR [ebx+0x4]
100197dc:	mov    DWORD PTR [ebp-0x58],eax
100197df:	lea    eax,[ebp-0x60]
100197e2:	mov    DWORD PTR [ebp-0x60],esi
100197e5:	mov    DWORD PTR [ebp-0x5c],ebx
100197e8:	call   0x10013434
100197ed:	mov    esi,DWORD PTR [eax]
100197ef:	inc    esi
100197f0:	cmp    DWORD PTR [ebp-0x44],0x0
100197f4:	mov    DWORD PTR [ebp-0x48],esi
100197f7:	jne    0x100197fe
100197f9:	call   0x100422b0
100197fe:	mov    edi,DWORD PTR [ebp-0x40]
10019801:	mov    eax,DWORD PTR [ebp-0x44]
10019804:	cmp    edi,DWORD PTR [eax+0x4]
10019807:	jne    0x1001980e
10019809:	call   0x100422b0
1001980e:	lea    edx,[edi+0x48]
10019811:	mov    eax,ebx
10019813:	mov    DWORD PTR [ebp-0x4c],edx
10019816:	call   0x10013096
1001981b:	lea    eax,[ebp-0x48]
1001981e:	push   eax
1001981f:	lea    edi,[ebp-0x60]
10019822:	call   0x10012fdd
10019827:	mov    edi,DWORD PTR [ebp-0x40]
1001982a:	mov    ebx,DWORD PTR [ebp-0x44]
1001982d:	cmp    edi,DWORD PTR [ebx+0x4]
10019830:	jne    0x10019837
10019832:	call   0x100422b0
10019837:	mov    eax,DWORD PTR [ebp-0x54]
1001983a:	mov    ecx,DWORD PTR [eax]
1001983c:	push   0xffffffff
1001983e:	push   0x0
10019840:	add    eax,0x4
10019843:	mov    DWORD PTR [edi+0x28],ecx
10019846:	push   eax
10019847:	lea    ecx,[edi+0x2c]
1001984a:	call   0x1000124a
1001984f:	cmp    edi,DWORD PTR [ebx+0x4]
10019852:	jne    0x10019859
10019854:	call   0x100422b0
10019859:	mov    eax,DWORD PTR [ebp-0x4c]
1001985c:	mov    DWORD PTR [eax],esi
1001985e:	mov    eax,DWORD PTR [ebp-0x50]
10019861:	push   DWORD PTR [eax+0x18]
10019864:	call   DWORD PTR ds:0x10065094
1001986a:	call   0x10058940
1001986f:	ret    0x4
10019872:	push   0x1006bb18
10019877:	lea    ecx,[ebp-0x7c]
1001987a:	call   0x100011d6
1001987f:	lea    eax,[ebp-0x7c]
10019882:	mov    BYTE PTR [ebp-0x4],0x1
10019886:	push   eax
10019887:	lea    ecx,[ebp-0x38]
1001988a:	mov    DWORD PTR [ebp-0x3c],esi
1001988d:	call   0x100011b0
10019892:	push   esi
10019893:	push   0x1
10019895:	lea    ecx,[ebp-0x7c]
10019898:	call   0x100012f9
1001989d:	mov    BYTE PTR [ebp-0x4],0x2
100198a1:	cmp    DWORD PTR [edi+0x14],esi
100198a4:	je     0x100198c2
100198a6:	mov    eax,DWORD PTR [edi+0x10]
100198a9:	add    edi,0xc
100198ac:	mov    DWORD PTR [ebp-0x58],eax
100198af:	lea    eax,[ebp-0x60]
100198b2:	mov    DWORD PTR [ebp-0x60],esi
100198b5:	mov    DWORD PTR [ebp-0x5c],edi
100198b8:	call   0x10013434
100198bd:	mov    eax,DWORD PTR [eax]
100198bf:	inc    eax
100198c0:	jmp    0x100198c4
100198c2:	xor    eax,eax
100198c4:	mov    DWORD PTR [ebp-0x48],eax
100198c7:	mov    DWORD PTR [ebp-0x1c],eax
100198ca:	mov    eax,DWORD PTR [ebp-0x54]
100198cd:	mov    ecx,DWORD PTR [eax]
100198cf:	push   0xffffffff
100198d1:	push   esi
100198d2:	add    eax,0x4
100198d5:	mov    DWORD PTR [ebp-0x3c],ecx
100198d8:	push   eax
100198d9:	lea    ecx,[ebp-0x38]
100198dc:	call   0x1000124a
100198e1:	mov    eax,DWORD PTR [ebp-0x3c]
100198e4:	sub    esp,0x24
100198e7:	mov    esi,esp
100198e9:	mov    DWORD PTR [esi],eax
100198eb:	lea    eax,[ebp-0x38]
100198ee:	mov    DWORD PTR [ebp-0x54],esp
100198f1:	push   eax
100198f2:	lea    ecx,[esi+0x4]
100198f5:	call   0x100011b0
100198fa:	mov    eax,DWORD PTR [ebp-0x1c]
100198fd:	mov    DWORD PTR [esi+0x20],eax
10019900:	sub    esp,0x1c
10019903:	mov    BYTE PTR [ebp-0x4],0x3
10019907:	mov    ecx,esp
10019909:	mov    DWORD PTR [ebp-0x40],esp
1001990c:	push   DWORD PTR [ebp-0x4c]
1001990f:	call   0x100011b0
10019914:	lea    esi,[ebp-0xfc]
1001991a:	mov    BYTE PTR [ebp-0x4],0x2
1001991e:	call   0x10019f5d
10019923:	add    esp,0x40
10019926:	mov    esi,eax
10019928:	push   esi
10019929:	lea    ecx,[ebp-0xbc]
1001992f:	mov    BYTE PTR [ebp-0x4],0x4
10019933:	call   0x100011b0
10019938:	lea    edi,[esi+0x1c]
1001993b:	lea    esi,[ebp-0xa0]
10019941:	mov    BYTE PTR [ebp-0x4],0x5
10019945:	call   0x10019a6d
1001994a:	mov    ebx,DWORD PTR [ebp-0x50]
1001994d:	lea    eax,[ebp-0xbc]
10019953:	push   eax
10019954:	lea    edi,[ebp-0x60]
10019957:	mov    BYTE PTR [ebp-0x4],0x6
1001995b:	call   0x10019bb6
10019960:	xor    esi,esi
10019962:	xor    edi,edi
10019964:	push   esi
10019965:	inc    edi
10019966:	push   edi
10019967:	lea    ecx,[ebp-0x9c]
1001996d:	call   0x100012f9
10019972:	push   esi
10019973:	push   edi
10019974:	lea    ecx,[ebp-0xbc]
1001997a:	call   0x100012f9
1001997f:	push   esi
10019980:	push   edi
10019981:	lea    ecx,[ebp-0xdc]
10019987:	mov    BYTE PTR [ebp-0x4],0x2
1001998b:	call   0x100012f9
10019990:	push   esi
10019991:	push   edi
10019992:	lea    ecx,[ebp-0xfc]
10019998:	call   0x100012f9
1001999d:	lea    eax,[ebp-0x48]
100199a0:	push   eax
100199a1:	add    ebx,0xc
100199a4:	lea    edi,[ebp-0x60]
100199a7:	call   0x10012fdd
100199ac:	push   esi
100199ad:	push   0x1
100199af:	lea    ecx,[ebp-0x38]
100199b2:	call   0x100012f9
100199b7:	jmp    0x1001985e
100199bc:	mov    eax,0x1001985e
100199c1:	ret    
100199c2:	push   0x10
100199c4:	mov    eax,0x1006173f
100199c9:	call   0x10058878
100199ce:	mov    esi,DWORD PTR [ebp+0x8]
100199d1:	push   0x1f4
100199d6:	push   DWORD PTR [esi+0x18]
100199d9:	mov    BYTE PTR [ebp-0x11],0x0
100199dd:	call   DWORD PTR ds:0x10065084
100199e3:	test   eax,eax
100199e5:	je     0x100199eb
100199e7:	xor    al,al
100199e9:	jmp    0x10019a65
100199eb:	push   DWORD PTR [ebp+0xc]
100199ee:	and    DWORD PTR [ebp-0x4],0x0
100199f2:	lea    ebx,[ebp-0x1c]
100199f5:	call   0x10019c5d
100199fa:	cmp    DWORD PTR [ebp-0x1c],0x0
100199fe:	mov    edi,DWORD PTR [esi+0x4]
10019a01:	je     0x10019a08
10019a03:	cmp    DWORD PTR [ebp-0x1c],esi
10019a06:	je     0x10019a0d
10019a08:	call   0x100422b0
10019a0d:	mov    ebx,DWORD PTR [ebp-0x18]
10019a10:	cmp    ebx,edi
10019a12:	je     0x10019a59
10019a14:	mov    edi,DWORD PTR [ebp-0x1c]
10019a17:	test   edi,edi
10019a19:	jne    0x10019a20
10019a1b:	call   0x100422b0
10019a20:	cmp    ebx,DWORD PTR [edi+0x4]
10019a23:	jne    0x10019a2a
10019a25:	call   0x100422b0
10019a2a:	mov    ecx,DWORD PTR [ebx+0x28]
10019a2d:	mov    eax,DWORD PTR [ebp+0x10]
10019a30:	push   0xffffffff
10019a32:	push   0x0
10019a34:	add    ebx,0x2c
10019a37:	mov    DWORD PTR [eax],ecx
10019a39:	push   ebx
10019a3a:	lea    ecx,[eax+0x4]
10019a3d:	call   0x1000124a
10019a42:	mov    BYTE PTR [ebp-0x11],0x1
10019a46:	jmp    0x10019a59
10019a48:	push   0x4
10019a4a:	call   0x10037620
10019a4f:	pop    ecx
10019a50:	mov    eax,0x10019a56
10019a55:	ret    
10019a56:	mov    esi,DWORD PTR [ebp+0x8]
10019a59:	push   DWORD PTR [esi+0x18]
10019a5c:	call   DWORD PTR ds:0x10065094
10019a62:	mov    al,BYTE PTR [ebp-0x11]
10019a65:	call   0x1005891d
10019a6a:	ret    0xc
10019a6d:	mov    eax,DWORD PTR [edi]
10019a6f:	mov    DWORD PTR [esi],eax
10019a71:	lea    eax,[edi+0x4]
10019a74:	push   eax
10019a75:	lea    ecx,[esi+0x4]
10019a78:	call   0x100011b0
10019a7d:	mov    eax,DWORD PTR [edi+0x20]
10019a80:	mov    DWORD PTR [esi+0x20],eax
10019a83:	mov    eax,esi
10019a85:	ret    
10019a86:	push   0x38
10019a88:	mov    eax,0x10060af1
10019a8d:	call   0x10058845
10019a92:	mov    edi,DWORD PTR [ebp+0x8]
10019a95:	mov    ecx,DWORD PTR [edi+0x1c]
10019a98:	mov    edx,DWORD PTR [edi+0x20]
10019a9b:	mov    eax,DWORD PTR [edi+0x8]
10019a9e:	add    edx,ecx
10019aa0:	cmp    eax,edx
10019aa2:	jbe    0x10019bae
10019aa8:	and    DWORD PTR [ebp-0x10],0x0
10019aac:	test   ecx,ecx
10019aae:	lea    ebx,[edi+0xc]
10019ab1:	mov    eax,DWORD PTR [ebx+0x4]
10019ab4:	mov    eax,DWORD PTR [eax]
10019ab6:	mov    DWORD PTR [ebp-0x14],ebx
10019ab9:	mov    DWORD PTR [ebp-0x1c],ebx
10019abc:	mov    DWORD PTR [ebp-0x18],eax
10019abf:	je     0x10019ad4
10019ac1:	lea    esi,[ebp-0x1c]
10019ac4:	call   0x10001e7a
10019ac9:	inc    DWORD PTR [ebp-0x10]
10019acc:	mov    eax,DWORD PTR [ebp-0x10]
10019acf:	cmp    eax,DWORD PTR [edi+0x1c]
10019ad2:	jne    0x10019ac1
10019ad4:	lea    esi,[ebp-0x1c]
10019ad7:	call   0x10009753
10019adc:	mov    eax,DWORD PTR [eax]
10019ade:	mov    DWORD PTR [ebp-0x10],eax
10019ae1:	call   0x10013d6c
10019ae6:	mov    DWORD PTR [ebp-0x34],eax
10019ae9:	mov    BYTE PTR [eax+0x11],0x1
10019aed:	mov    eax,DWORD PTR [ebp-0x34]
10019af0:	mov    DWORD PTR [eax+0x4],eax
10019af3:	mov    eax,DWORD PTR [ebp-0x34]
10019af6:	mov    DWORD PTR [eax],eax
10019af8:	mov    eax,DWORD PTR [ebp-0x34]
10019afb:	mov    DWORD PTR [eax+0x8],eax
10019afe:	and    DWORD PTR [ebp-0x30],0x0
10019b02:	and    DWORD PTR [ebp-0x4],0x0
10019b06:	mov    eax,DWORD PTR [edi+0x4]
10019b09:	mov    esi,DWORD PTR [eax]
10019b0b:	mov    DWORD PTR [ebp-0x1c],edi
10019b0e:	mov    DWORD PTR [ebp-0x18],esi
10019b11:	cmp    DWORD PTR [ebp-0x1c],0x0
10019b15:	mov    eax,DWORD PTR [edi+0x4]
10019b18:	mov    DWORD PTR [ebp-0x20],eax
10019b1b:	je     0x10019b22
10019b1d:	cmp    DWORD PTR [ebp-0x1c],edi
10019b20:	je     0x10019b27
10019b22:	call   0x100422b0
10019b27:	cmp    esi,DWORD PTR [ebp-0x20]
10019b2a:	je     0x10019b8a
10019b2c:	cmp    DWORD PTR [ebp-0x1c],0x0
10019b30:	jne    0x10019b37
10019b32:	call   0x100422b0
10019b37:	mov    eax,DWORD PTR [ebp-0x1c]
10019b3a:	cmp    esi,DWORD PTR [eax+0x4]
10019b3d:	jne    0x10019b44
10019b3f:	call   0x100422b0
10019b44:	lea    ecx,[esi+0x48]
10019b47:	mov    eax,DWORD PTR [ecx]
10019b49:	cmp    eax,DWORD PTR [ebp-0x10]
10019b4c:	jae    0x10019b66
10019b4e:	push   esi
10019b4f:	push   DWORD PTR [ebp-0x1c]
10019b52:	lea    eax,[ebp-0x2c]
10019b55:	push   eax
10019b56:	push   edi
10019b57:	call   0x10001a01
10019b5c:	mov    ecx,DWORD PTR [eax]
10019b5e:	mov    esi,DWORD PTR [eax+0x4]
10019b61:	mov    DWORD PTR [ebp-0x1c],ecx
10019b64:	jmp    0x10019b0e
10019b66:	sub    eax,DWORD PTR [ebp-0x10]
10019b69:	push   ecx
10019b6a:	lea    edi,[ebp-0x44]
10019b6d:	lea    ebx,[ebp-0x38]
10019b70:	mov    DWORD PTR [ecx],eax
10019b72:	call   0x10012fdd
10019b77:	lea    esi,[ebp-0x1c]
10019b7a:	call   0x10001e2d
10019b7f:	mov    esi,DWORD PTR [ebp-0x18]
10019b82:	mov    ebx,DWORD PTR [ebp-0x14]
10019b85:	mov    edi,DWORD PTR [ebp+0x8]
10019b88:	jmp    0x10019b11
10019b8a:	mov    eax,DWORD PTR [ebx+0x4]
10019b8d:	mov    ecx,DWORD PTR [ebp-0x34]
10019b90:	mov    DWORD PTR [ebx+0x4],ecx
10019b93:	mov    ecx,DWORD PTR [ebp-0x30]
10019b96:	mov    DWORD PTR [ebp-0x34],eax
10019b99:	mov    eax,DWORD PTR [ebx+0x8]
10019b9c:	or     DWORD PTR [ebp-0x4],0xffffffff
10019ba0:	mov    DWORD PTR [ebp-0x30],eax
10019ba3:	lea    eax,[ebp-0x38]
10019ba6:	mov    DWORD PTR [ebx+0x8],ecx
10019ba9:	call   0x1000149f
10019bae:	call   0x1005891d
10019bb3:	ret    0x4
10019bb6:	push   ebp
10019bb7:	mov    ebp,esp
10019bb9:	sub    esp,0x18
10019bbc:	mov    eax,DWORD PTR [ebx+0x4]
10019bbf:	push   esi
10019bc0:	mov    esi,DWORD PTR [eax+0x4]
10019bc3:	mov    DWORD PTR [ebp-0x8],eax
10019bc6:	mov    al,0x1
10019bc8:	mov    BYTE PTR [ebp-0xc],al
10019bcb:	jmp    0x10019be9
10019bcd:	mov    ecx,DWORD PTR [ebp+0x8]
10019bd0:	lea    eax,[esi+0xc]
10019bd3:	mov    DWORD PTR [ebp-0x8],esi
10019bd6:	call   0x100071aa
10019bdb:	test   al,al
10019bdd:	mov    BYTE PTR [ebp-0xc],al
10019be0:	je     0x10019be6
10019be2:	mov    esi,DWORD PTR [esi]
10019be4:	jmp    0x10019be9
10019be6:	mov    esi,DWORD PTR [esi+0x8]
10019be9:	cmp    BYTE PTR [esi+0x4d],0x0
10019bed:	je     0x10019bcd
10019bef:	test   al,al
10019bf1:	mov    ecx,DWORD PTR [ebp-0x8]
10019bf4:	mov    esi,ecx
10019bf6:	mov    DWORD PTR [ebp-0x10],esi
10019bf9:	mov    DWORD PTR [ebp-0x14],ebx
10019bfc:	je     0x10019c30
10019bfe:	mov    eax,DWORD PTR [ebx+0x4]
10019c01:	cmp    ecx,DWORD PTR [eax]
10019c03:	jne    0x10019c25
10019c05:	push   DWORD PTR [ebp+0x8]
10019c08:	push   0x1
10019c0a:	lea    eax,[ebp-0x14]
10019c0d:	push   eax
10019c0e:	mov    esi,ebx
10019c10:	call   0x10019cb5
10019c15:	mov    ecx,DWORD PTR [eax]
10019c17:	mov    eax,DWORD PTR [eax+0x4]
10019c1a:	mov    DWORD PTR [edi],ecx
10019c1c:	mov    DWORD PTR [edi+0x4],eax
10019c1f:	mov    BYTE PTR [edi+0x8],0x1
10019c23:	jmp    0x10019c56
10019c25:	lea    esi,[ebp-0x14]
10019c28:	call   0x10019e00
10019c2d:	mov    esi,DWORD PTR [ebp-0x10]
10019c30:	mov    eax,DWORD PTR [ebp+0x8]
10019c33:	lea    ecx,[esi+0xc]
10019c36:	call   0x100071aa
10019c3b:	test   al,al
10019c3d:	je     0x10019c4a
10019c3f:	push   DWORD PTR [ebp+0x8]
10019c42:	mov    ecx,DWORD PTR [ebp-0x8]
10019c45:	push   DWORD PTR [ebp-0xc]
10019c48:	jmp    0x10019c0a
10019c4a:	mov    eax,DWORD PTR [ebp-0x14]
10019c4d:	mov    DWORD PTR [edi],eax
10019c4f:	mov    DWORD PTR [edi+0x4],esi
10019c52:	mov    BYTE PTR [edi+0x8],0x0
10019c56:	mov    eax,edi
10019c58:	pop    esi
10019c59:	leave  
10019c5a:	ret    0x4
10019c5d:	push   ebp
10019c5e:	mov    ebp,esp
10019c60:	sub    esp,0x18
10019c63:	push   edi
10019c64:	push   DWORD PTR [ebp+0x8]
10019c67:	mov    eax,esi
10019c69:	call   0x10019e61
10019c6e:	test   esi,esi
10019c70:	mov    edi,eax
10019c72:	mov    DWORD PTR [ebp-0x8],edi
10019c75:	jne    0x10019c7c
10019c77:	call   0x100422b0
10019c7c:	cmp    edi,DWORD PTR [esi+0x4]
10019c7f:	mov    DWORD PTR [ebp-0xc],esi
10019c82:	je     0x10019c98
10019c84:	mov    ecx,DWORD PTR [ebp+0x8]
10019c87:	lea    eax,[edi+0xc]
10019c8a:	call   0x100071aa
10019c8f:	test   al,al
10019c91:	jne    0x10019c98
10019c93:	lea    eax,[ebp-0xc]
10019c96:	jmp    0x10019ca4
10019c98:	mov    eax,DWORD PTR [esi+0x4]
10019c9b:	mov    DWORD PTR [ebp-0x10],eax
10019c9e:	mov    DWORD PTR [ebp-0x14],esi
10019ca1:	lea    eax,[ebp-0x14]
10019ca4:	mov    ecx,DWORD PTR [eax]
10019ca6:	mov    eax,DWORD PTR [eax+0x4]
10019ca9:	mov    DWORD PTR [ebx+0x4],eax
10019cac:	mov    DWORD PTR [ebx],ecx
10019cae:	mov    eax,ebx
10019cb0:	pop    edi
10019cb1:	leave  
10019cb2:	ret    0x4
10019cb5:	push   0x48
10019cb7:	mov    eax,0x1005f147
10019cbc:	call   0x10058845
10019cc1:	mov    edi,ecx
10019cc3:	cmp    DWORD PTR [esi+0x8],0x3fffffe
10019cca:	jb     0x10019cfe
10019ccc:	push   0x1006bcb4
10019cd1:	lea    ecx,[ebp-0x2c]
10019cd4:	call   0x100011d6
10019cd9:	and    DWORD PTR [ebp-0x4],0x0
10019cdd:	lea    eax,[ebp-0x2c]
10019ce0:	push   eax
10019ce1:	lea    ecx,[ebp-0x54]
10019ce4:	call   0x10001065
10019ce9:	push   0x10073960
10019cee:	lea    eax,[ebp-0x54]
10019cf1:	push   eax
10019cf2:	mov    DWORD PTR [ebp-0x54],0x1006a77c
10019cf9:	call   0x10046704
10019cfe:	push   DWORD PTR [ebp+0x10]
10019d01:	mov    eax,DWORD PTR [esi+0x4]
10019d04:	push   eax
10019d05:	push   edi
10019d06:	push   eax
10019d07:	call   0x10019e93
10019d0c:	inc    DWORD PTR [esi+0x8]
10019d0f:	mov    ebx,eax
10019d11:	mov    eax,DWORD PTR [esi+0x4]
10019d14:	cmp    edi,eax
10019d16:	jne    0x10019d25
10019d18:	mov    DWORD PTR [eax+0x4],ebx
10019d1b:	mov    eax,DWORD PTR [esi+0x4]
10019d1e:	mov    DWORD PTR [eax],ebx
10019d20:	mov    eax,DWORD PTR [esi+0x4]
10019d23:	jmp    0x10019d43
10019d25:	cmp    BYTE PTR [ebp+0xc],0x0
10019d29:	je     0x10019d38
10019d2b:	mov    DWORD PTR [edi],ebx
10019d2d:	mov    eax,DWORD PTR [esi+0x4]
10019d30:	cmp    edi,DWORD PTR [eax]
10019d32:	jne    0x10019d46
10019d34:	mov    DWORD PTR [eax],ebx
10019d36:	jmp    0x10019d46
10019d38:	mov    DWORD PTR [edi+0x8],ebx
10019d3b:	mov    eax,DWORD PTR [esi+0x4]
10019d3e:	cmp    edi,DWORD PTR [eax+0x8]
10019d41:	jne    0x10019d46
10019d43:	mov    DWORD PTR [eax+0x8],ebx
10019d46:	mov    edi,ebx
10019d48:	lea    eax,[ebx+0x4]
10019d4b:	jmp    0x10019dda
10019d50:	mov    ecx,DWORD PTR [eax]
10019d52:	mov    edx,DWORD PTR [ecx+0x4]
10019d55:	cmp    ecx,DWORD PTR [edx]
10019d57:	jne    0x10019d8e
10019d59:	mov    edx,DWORD PTR [edx+0x8]
10019d5c:	cmp    BYTE PTR [edx+0x4c],0x0
10019d60:	je     0x10019d96
10019d62:	cmp    edi,DWORD PTR [ecx+0x8]
10019d65:	jne    0x10019d6f
10019d67:	push   esi
10019d68:	mov    edi,ecx
10019d6a:	call   0x10001dab
10019d6f:	mov    eax,DWORD PTR [edi+0x4]
10019d72:	mov    BYTE PTR [eax+0x4c],0x1
10019d76:	mov    eax,DWORD PTR [edi+0x4]
10019d79:	mov    eax,DWORD PTR [eax+0x4]
10019d7c:	mov    BYTE PTR [eax+0x4c],0x0
10019d80:	mov    eax,DWORD PTR [edi+0x4]
10019d83:	mov    ecx,DWORD PTR [eax+0x4]
10019d86:	push   esi
10019d87:	call   0x10001deb
10019d8c:	jmp    0x10019dd7
10019d8e:	mov    edx,DWORD PTR [edx]
10019d90:	cmp    BYTE PTR [edx+0x4c],0x0
10019d94:	jne    0x10019dae
10019d96:	mov    BYTE PTR [ecx+0x4c],0x1
10019d9a:	mov    BYTE PTR [edx+0x4c],0x1
10019d9e:	mov    ecx,DWORD PTR [eax]
10019da0:	mov    ecx,DWORD PTR [ecx+0x4]
10019da3:	mov    BYTE PTR [ecx+0x4c],0x0
10019da7:	mov    eax,DWORD PTR [eax]
10019da9:	mov    edi,DWORD PTR [eax+0x4]
10019dac:	jmp    0x10019dd7
10019dae:	cmp    edi,DWORD PTR [ecx]
10019db0:	jne    0x10019dba
10019db2:	push   esi
10019db3:	mov    edi,ecx
10019db5:	call   0x10001deb
10019dba:	mov    eax,DWORD PTR [edi+0x4]
10019dbd:	mov    BYTE PTR [eax+0x4c],0x1
10019dc1:	mov    eax,DWORD PTR [edi+0x4]
10019dc4:	mov    eax,DWORD PTR [eax+0x4]
10019dc7:	mov    BYTE PTR [eax+0x4c],0x0
10019dcb:	mov    eax,DWORD PTR [edi+0x4]
10019dce:	mov    ecx,DWORD PTR [eax+0x4]
10019dd1:	push   esi
10019dd2:	call   0x10001dab
10019dd7:	lea    eax,[edi+0x4]
10019dda:	mov    ecx,DWORD PTR [eax]
10019ddc:	cmp    BYTE PTR [ecx+0x4c],0x0
10019de0:	je     0x10019d50
10019de6:	mov    eax,DWORD PTR [esi+0x4]
10019de9:	mov    eax,DWORD PTR [eax+0x4]
10019dec:	mov    BYTE PTR [eax+0x4c],0x1
10019df0:	mov    eax,DWORD PTR [ebp+0x8]
10019df3:	mov    DWORD PTR [eax+0x4],ebx
10019df6:	mov    DWORD PTR [eax],esi
10019df8:	call   0x1005891d
10019dfd:	ret    0xc
10019e00:	push   ebx
10019e01:	xor    ebx,ebx
10019e03:	cmp    DWORD PTR [esi],ebx
10019e05:	jne    0x10019e0c
10019e07:	call   0x100422b0
10019e0c:	mov    eax,DWORD PTR [esi+0x4]
10019e0f:	cmp    BYTE PTR [eax+0x4d],bl
10019e12:	je     0x10019e21
10019e14:	mov    eax,DWORD PTR [eax+0x8]
10019e17:	mov    DWORD PTR [esi+0x4],eax
10019e1a:	cmp    BYTE PTR [eax+0x4d],bl
10019e1d:	je     0x10019e5d
10019e1f:	jmp    0x10019e53
10019e21:	mov    ecx,DWORD PTR [eax]
10019e23:	cmp    BYTE PTR [ecx+0x4d],bl
10019e26:	jne    0x10019e43
10019e28:	jmp    0x10019e2c
10019e2a:	mov    ecx,eax
10019e2c:	mov    eax,DWORD PTR [ecx+0x8]
10019e2f:	cmp    BYTE PTR [eax+0x4d],bl
10019e32:	je     0x10019e2a
10019e34:	mov    DWORD PTR [esi+0x4],ecx
10019e37:	jmp    0x10019e5d
10019e39:	mov    ecx,DWORD PTR [esi+0x4]
10019e3c:	cmp    ecx,DWORD PTR [eax]
10019e3e:	jne    0x10019e4b
10019e40:	mov    DWORD PTR [esi+0x4],eax
10019e43:	mov    eax,DWORD PTR [eax+0x4]
10019e46:	cmp    BYTE PTR [eax+0x4d],bl
10019e49:	je     0x10019e39
10019e4b:	mov    ecx,DWORD PTR [esi+0x4]
10019e4e:	cmp    BYTE PTR [ecx+0x4d],bl
10019e51:	je     0x10019e5a
10019e53:	call   0x100422b0
10019e58:	jmp    0x10019e5d
10019e5a:	mov    DWORD PTR [esi+0x4],eax
10019e5d:	mov    eax,esi
10019e5f:	pop    ebx
10019e60:	ret    
10019e61:	mov    eax,DWORD PTR [eax+0x4]
10019e64:	push   esi
10019e65:	mov    esi,DWORD PTR [eax+0x4]
10019e68:	push   edi
10019e69:	mov    edi,eax
10019e6b:	jmp    0x10019e86
10019e6d:	mov    eax,DWORD PTR [esp+0xc]
10019e71:	lea    ecx,[esi+0xc]
10019e74:	call   0x100071aa
10019e79:	test   al,al
10019e7b:	je     0x10019e82
10019e7d:	mov    esi,DWORD PTR [esi+0x8]
10019e80:	jmp    0x10019e86
10019e82:	mov    edi,esi
10019e84:	mov    esi,DWORD PTR [esi]
10019e86:	cmp    BYTE PTR [esi+0x4d],0x0
10019e8a:	je     0x10019e6d
10019e8c:	mov    eax,edi
10019e8e:	pop    edi
10019e8f:	pop    esi
10019e90:	ret    0x4
10019e93:	push   0x8
10019e95:	mov    eax,0x1005fa9e
10019e9a:	call   0x10058878
10019e9f:	push   0x50
10019ea1:	call   0x1004239e
10019ea6:	mov    ebx,eax
10019ea8:	pop    ecx
10019ea9:	mov    DWORD PTR [ebp-0x14],ebx
10019eac:	test   ebx,ebx
10019eae:	mov    DWORD PTR [ebp-0x4],0x1
10019eb5:	je     0x10019ec8
10019eb7:	push   DWORD PTR [ebp+0x10]
10019eba:	mov    ecx,DWORD PTR [ebp+0x14]
10019ebd:	push   DWORD PTR [ebp+0xc]
10019ec0:	push   DWORD PTR [ebp+0x8]
10019ec3:	call   0x10019f0f
10019ec8:	mov    eax,ebx
10019eca:	call   0x1005891d
10019ecf:	ret    0x10
10019ed2:	push   DWORD PTR [ebp-0x14]
10019ed5:	call   0x10041d92
10019eda:	pop    ecx
10019edb:	push   0x0
10019edd:	push   0x0
10019edf:	call   0x10046704
10019ee4:	int3   
10019ee5:	push   0x50
10019ee7:	call   0x1004239e
10019eec:	xor    edx,edx
10019eee:	cmp    eax,edx
10019ef0:	pop    ecx
10019ef1:	je     0x10019ef5
10019ef3:	mov    DWORD PTR [eax],edx
10019ef5:	lea    ecx,[eax+0x4]
10019ef8:	cmp    ecx,edx
10019efa:	je     0x10019efe
10019efc:	mov    DWORD PTR [ecx],edx
10019efe:	lea    ecx,[eax+0x8]
10019f01:	cmp    ecx,edx
10019f03:	je     0x10019f07
10019f05:	mov    DWORD PTR [ecx],edx
10019f07:	mov    BYTE PTR [eax+0x4c],0x1
10019f0b:	mov    BYTE PTR [eax+0x4d],dl
10019f0e:	ret    
10019f0f:	push   0x0
10019f11:	mov    eax,0x10060f15
10019f16:	call   0x10058845
10019f1b:	mov    edi,ecx
10019f1d:	mov    eax,DWORD PTR [ebp+0x8]
10019f20:	mov    DWORD PTR [ebx],eax
10019f22:	mov    eax,DWORD PTR [ebp+0xc]
10019f25:	mov    DWORD PTR [ebx+0x4],eax
10019f28:	mov    eax,DWORD PTR [ebp+0x10]
10019f2b:	lea    esi,[ebx+0xc]
10019f2e:	push   edi
10019f2f:	mov    ecx,esi
10019f31:	mov    DWORD PTR [ebx+0x8],eax
10019f34:	mov    DWORD PTR [ebp+0x8],esi
10019f37:	call   0x100011b0
10019f3c:	and    DWORD PTR [ebp-0x4],0x0
10019f40:	add    edi,0x1c
10019f43:	add    esi,0x1c
10019f46:	call   0x10019a6d
10019f4b:	mov    BYTE PTR [ebx+0x4c],0x0
10019f4f:	mov    BYTE PTR [ebx+0x4d],0x0
10019f53:	mov    eax,ebx
10019f55:	call   0x1005891d
10019f5a:	ret    0xc
10019f5d:	push   0x8
10019f5f:	mov    eax,0x1005fa7e
10019f64:	call   0x10058845
10019f69:	and    DWORD PTR [ebp-0x14],0x0
10019f6d:	mov    DWORD PTR [ebp-0x10],esi
10019f70:	lea    eax,[ebp+0x8]
10019f73:	push   eax
10019f74:	mov    ecx,esi
10019f76:	mov    DWORD PTR [ebp-0x4],0x1
10019f7d:	call   0x100011b0
10019f82:	mov    BYTE PTR [ebp-0x4],0x2
10019f86:	mov    eax,DWORD PTR [ebp+0x24]
10019f89:	mov    DWORD PTR [esi+0x1c],eax
10019f8c:	lea    eax,[ebp+0x28]
10019f8f:	push   eax
10019f90:	lea    ecx,[esi+0x20]
10019f93:	call   0x100011b0
10019f98:	mov    eax,DWORD PTR [ebp+0x44]
10019f9b:	push   0x0
10019f9d:	push   0x1
10019f9f:	lea    ecx,[ebp+0x8]
10019fa2:	mov    DWORD PTR [esi+0x3c],eax
10019fa5:	call   0x100012f9
10019faa:	push   0x0
10019fac:	push   0x1
10019fae:	lea    ecx,[ebp+0x28]
10019fb1:	call   0x100012f9
10019fb6:	mov    eax,esi
10019fb8:	call   0x1005891d
10019fbd:	ret    
10019fbe:	push   0xd4
10019fc3:	mov    eax,0x10060acb
10019fc8:	call   0x10058878
10019fcd:	mov    ebx,DWORD PTR [ebp+0x8]
10019fd0:	push   0x1f4
10019fd5:	push   DWORD PTR [ebx+0x18]
10019fd8:	call   DWORD PTR ds:0x10065084
10019fde:	test   eax,eax
10019fe0:	jne    0x1001a29b
10019fe6:	and    DWORD PTR [ebp-0x4],eax
10019fe9:	cmp    DWORD PTR [ebx+0x8],eax
10019fec:	jbe    0x1001a031
10019fee:	push   0x1
10019ff0:	lea    eax,[ebp-0x2c]
10019ff3:	push   eax
10019ff4:	call   0x100346c0
10019ff9:	lea    eax,[ebp-0x2c]
10019ffc:	push   eax
10019ffd:	mov    BYTE PTR [ebp-0x4],0x1
1001a001:	call   0x10035cc0
1001a006:	mov    esi,eax
1001a008:	test   esi,esi
1001a00a:	ja     0x1001a00f
1001a00c:	xor    esi,esi
1001a00e:	inc    esi
1001a00f:	cmp    DWORD PTR [ebx+0x8],esi
1001a012:	jb     0x1001a028
1001a014:	mov    eax,DWORD PTR [ebx+0x4]
1001a017:	push   DWORD PTR [eax]
1001a019:	lea    eax,[ebp-0x38]
1001a01c:	push   ebx
1001a01d:	push   eax
1001a01e:	call   0x1001aca3
1001a023:	mov    ebx,DWORD PTR [ebp+0x8]
1001a026:	jmp    0x1001a00f
1001a028:	push   DWORD PTR [ebp-0x2c]
1001a02b:	call   DWORD PTR ds:0x10065070
1001a031:	or     DWORD PTR [ebp-0x4],0xffffffff
1001a035:	push   DWORD PTR [ebp+0xc]
1001a038:	lea    ecx,[ebp-0x9c]
1001a03e:	call   0x100011b0
1001a043:	push   DWORD PTR [ebp+0x10]
1001a046:	lea    ecx,[ebp-0x80]
1001a049:	mov    DWORD PTR [ebp-0x4],0x3
1001a050:	call   0x100011b0
1001a055:	push   DWORD PTR [ebp+0x14]
1001a058:	lea    ecx,[ebp-0x64]
1001a05b:	mov    BYTE PTR [ebp-0x4],0x4
1001a05f:	call   0x100011b0
1001a064:	mov    eax,DWORD PTR [ebp+0x18]
1001a067:	mov    DWORD PTR [ebp-0x48],eax
1001a06a:	mov    eax,DWORD PTR [ebp+0x1c]
1001a06d:	mov    DWORD PTR [ebp-0x44],eax
1001a070:	mov    eax,DWORD PTR [ebp+0x20]
1001a073:	mov    DWORD PTR [ebp-0x40],eax
1001a076:	mov    eax,DWORD PTR [ebp+0x24]
1001a079:	mov    DWORD PTR [ebp-0x3c],eax
1001a07c:	mov    DWORD PTR [ebp-0x4],0x5
1001a083:	push   DWORD PTR [ebx+0x4]
1001a086:	lea    eax,[ebp-0x9c]
1001a08c:	push   ebx
1001a08d:	push   eax
1001a08e:	mov    edi,ebx
1001a090:	call   0x1001ada5
1001a095:	or     DWORD PTR [ebp-0x4],0xffffffff
1001a099:	lea    esi,[ebp-0x9c]
1001a09f:	call   0x1001a2a3
1001a0a4:	inc    DWORD PTR [ebx+0x1c]
1001a0a7:	call   0x1001ae15
1001a0ac:	xor    esi,esi
1001a0ae:	mov    DWORD PTR [ebp-0x24],eax
1001a0b1:	mov    DWORD PTR [ebp-0x20],esi
1001a0b4:	mov    DWORD PTR [ebp-0x4],0x6
1001a0bb:	call   0x1002693e
1001a0c0:	mov    DWORD PTR [ebp-0x18],eax
1001a0c3:	mov    DWORD PTR [ebp-0x14],esi
1001a0c6:	mov    BYTE PTR [ebp-0x4],0x7
1001a0ca:	cmp    DWORD PTR [ebx+0x14],esi
1001a0cd:	je     0x1001a1b2
1001a0d3:	mov    eax,DWORD PTR [ebx+0x10]
1001a0d6:	mov    esi,DWORD PTR [eax]
1001a0d8:	cmp    esi,eax
1001a0da:	jne    0x1001a0e1
1001a0dc:	call   0x100422b0
1001a0e1:	mov    eax,DWORD PTR [esi+0x8]
1001a0e4:	cmp    eax,DWORD PTR [ebx+0x1c]
1001a0e7:	jg     0x1001a15a
1001a0e9:	mov    eax,DWORD PTR [ebx+0x10]
1001a0ec:	mov    edi,DWORD PTR [eax]
1001a0ee:	cmp    edi,eax
1001a0f0:	jne    0x1001a0f7
1001a0f2:	call   0x100422b0
1001a0f7:	mov    ecx,DWORD PTR [ebp-0x18]
1001a0fa:	lea    eax,[edi+0xc]
1001a0fd:	push   eax
1001a0fe:	lea    edi,[ecx+0x4]
1001a101:	push   DWORD PTR [edi]
1001a103:	push   ecx
1001a104:	call   0x1002697f
1001a109:	mov    ecx,0x3fffffff
1001a10e:	sub    ecx,DWORD PTR [ebp-0x14]
1001a111:	cmp    ecx,0x1
1001a114:	jb     0x1001a222
1001a11a:	inc    DWORD PTR [ebp-0x14]
1001a11d:	mov    DWORD PTR [edi],eax
1001a11f:	mov    ecx,DWORD PTR [eax+0x4]
1001a122:	mov    DWORD PTR [ecx],eax
1001a124:	mov    eax,DWORD PTR [ebx+0x10]
1001a127:	mov    edi,DWORD PTR [eax]
1001a129:	cmp    edi,eax
1001a12b:	jne    0x1001a132
1001a12d:	call   0x100422b0
1001a132:	cmp    edi,DWORD PTR [ebx+0x10]
1001a135:	je     0x1001a150
1001a137:	mov    eax,DWORD PTR [edi+0x4]
1001a13a:	mov    ecx,DWORD PTR [edi]
1001a13c:	mov    DWORD PTR [eax],ecx
1001a13e:	mov    eax,DWORD PTR [edi]
1001a140:	mov    ecx,DWORD PTR [edi+0x4]
1001a143:	push   edi
1001a144:	mov    DWORD PTR [eax+0x4],ecx
1001a147:	call   0x10041d92
1001a14c:	dec    DWORD PTR [ebx+0x14]
1001a14f:	pop    ecx
1001a150:	cmp    DWORD PTR [ebx+0x14],0x0
1001a154:	jne    0x1001a0d3
1001a15a:	cmp    DWORD PTR [ebp-0x14],0x0
1001a15e:	je     0x1001a1b2
1001a160:	lea    eax,[ebp-0x28]
1001a163:	cmp    eax,ebx
1001a165:	je     0x1001a18e
1001a167:	mov    esi,DWORD PTR [ebx+0x4]
1001a16a:	mov    eax,DWORD PTR [esi]
1001a16c:	lea    edi,[ebp-0x28]
1001a16f:	mov    DWORD PTR [ebp-0x2c],eax
1001a172:	call   0x1001ae45
1001a177:	mov    eax,DWORD PTR [ebp-0x24]
1001a17a:	mov    eax,DWORD PTR [eax]
1001a17c:	push   esi
1001a17d:	push   ebx
1001a17e:	push   DWORD PTR [ebp-0x2c]
1001a181:	mov    ecx,edi
1001a183:	push   ebx
1001a184:	push   eax
1001a185:	push   ecx
1001a186:	mov    eax,edi
1001a188:	push   eax
1001a189:	call   0x1001af82
1001a18e:	cmp    DWORD PTR [ebp-0x20],0x9
1001a192:	jbe    0x1001a1b2
1001a194:	lea    esi,[ebp-0x28]
1001a197:	mov    eax,DWORD PTR [ebp-0x24]
1001a19a:	push   DWORD PTR [eax]
1001a19c:	lea    eax,[ebp-0x38]
1001a19f:	push   esi
1001a1a0:	push   eax
1001a1a1:	lea    ebx,[ebp-0x28]
1001a1a4:	call   0x1001aca3
1001a1a9:	cmp    DWORD PTR [ebp-0x20],0x9
1001a1ad:	ja     0x1001a197
1001a1af:	mov    ebx,DWORD PTR [ebp+0x8]
1001a1b2:	push   DWORD PTR [ebx+0x18]
1001a1b5:	call   DWORD PTR ds:0x10065094
1001a1bb:	mov    eax,DWORD PTR [ebp-0x18]
1001a1be:	mov    esi,DWORD PTR [eax]
1001a1c0:	cmp    esi,eax
1001a1c2:	je     0x1001a263
1001a1c8:	sub    esp,0xc
1001a1cb:	mov    eax,esp
1001a1cd:	mov    DWORD PTR [ebp+0x8],esp
1001a1d0:	push   eax
1001a1d1:	lea    ecx,[ebp-0x28]
1001a1d4:	call   0x1001ac30
1001a1d9:	cmp    esi,DWORD PTR [ebp-0x18]
1001a1dc:	jne    0x1001a1e3
1001a1de:	call   0x100422b0
1001a1e3:	call   DWORD PTR [esi+0x8]
1001a1e6:	mov    eax,DWORD PTR [ebp-0x18]
1001a1e9:	add    esp,0xc
1001a1ec:	cmp    esi,eax
1001a1ee:	jne    0x1001a1f8
1001a1f0:	call   0x100422b0
1001a1f5:	mov    eax,DWORD PTR [ebp-0x18]
1001a1f8:	mov    esi,DWORD PTR [esi]
1001a1fa:	jmp    0x1001a1c0
1001a1fc:	mov    ebx,DWORD PTR [ebp+0x8]
1001a1ff:	cmp    DWORD PTR [ebx+0x8],0x0
1001a203:	jbe    0x1001a214
1001a205:	mov    eax,DWORD PTR [ebx+0x4]
1001a208:	push   DWORD PTR [eax]
1001a20a:	lea    eax,[ebp-0x38]
1001a20d:	push   ebx
1001a20e:	push   eax
1001a20f:	call   0x1001aca3
1001a214:	mov    eax,0x1001a21a
1001a219:	ret    
1001a21a:	mov    ebx,DWORD PTR [ebp+0x8]
1001a21d:	jmp    0x1001a035
1001a222:	push   0x1006eb2c
1001a227:	lea    ecx,[ebp-0xe0]
1001a22d:	call   0x100011d6
1001a232:	lea    eax,[ebp-0xe0]
1001a238:	push   eax
1001a239:	lea    ecx,[ebp-0xc4]
1001a23f:	mov    BYTE PTR [ebp-0x4],0x8
1001a243:	call   0x10001065
1001a248:	push   0x10073960
1001a24d:	lea    eax,[ebp-0xc4]
1001a253:	push   eax
1001a254:	mov    DWORD PTR [ebp-0xc4],0x1006a77c
1001a25e:	call   0x10046704
1001a263:	mov    ecx,DWORD PTR [eax]
1001a265:	mov    DWORD PTR [eax],eax
1001a267:	mov    eax,DWORD PTR [ebp-0x18]
1001a26a:	mov    DWORD PTR [eax+0x4],eax
1001a26d:	and    DWORD PTR [ebp-0x14],0x0
1001a271:	cmp    ecx,DWORD PTR [ebp-0x18]
1001a274:	je     0x1001a286
1001a276:	mov    esi,DWORD PTR [ecx]
1001a278:	push   ecx
1001a279:	call   0x10041d92
1001a27e:	cmp    esi,DWORD PTR [ebp-0x18]
1001a281:	pop    ecx
1001a282:	mov    ecx,esi
1001a284:	jne    0x1001a276
1001a286:	push   DWORD PTR [ebp-0x18]
1001a289:	call   0x10041d92
1001a28e:	and    DWORD PTR [ebp-0x18],0x0
1001a292:	pop    ecx
1001a293:	lea    eax,[ebp-0x28]
1001a296:	call   0x1001ac8c
1001a29b:	call   0x1005891d
1001a2a0:	ret    0x20
1001a2a3:	push   0x0
1001a2a5:	push   0x1
1001a2a7:	lea    ecx,[esi+0x38]
1001a2aa:	call   0x100012f9
1001a2af:	push   0x0
1001a2b1:	push   0x1
1001a2b3:	lea    ecx,[esi+0x1c]
1001a2b6:	call   0x100012f9
1001a2bb:	push   0x0
1001a2bd:	push   0x1
1001a2bf:	mov    ecx,esi
1001a2c1:	call   0x100012f9
1001a2c6:	ret    
1001a2c7:	push   0x10
1001a2c9:	mov    eax,0x1005f109
1001a2ce:	call   0x10058878
1001a2d3:	mov    edi,DWORD PTR [ebp+0x8]
1001a2d6:	push   0x1f4
1001a2db:	push   DWORD PTR [edi+0x18]
1001a2de:	call   DWORD PTR ds:0x10065084
1001a2e4:	test   eax,eax
1001a2e6:	jne    0x1001a31a
1001a2e8:	and    DWORD PTR [ebp-0x4],eax
1001a2eb:	mov    eax,DWORD PTR [edi+0x1c]
1001a2ee:	add    eax,0x9
1001a2f1:	lea    ebx,[edi+0xc]
1001a2f4:	lea    esi,[ebp-0x1c]
1001a2f7:	mov    DWORD PTR [ebp-0x1c],eax
1001a2fa:	mov    DWORD PTR [ebp-0x18],0x1001ab75
1001a301:	call   0x1001ad2b
1001a306:	jmp    0x1001a311
1001a308:	mov    eax,0x1001a30e
1001a30d:	ret    
1001a30e:	mov    edi,DWORD PTR [ebp+0x8]
1001a311:	push   DWORD PTR [edi+0x18]
1001a314:	call   DWORD PTR ds:0x10065094
1001a31a:	call   0x1005891d
1001a31f:	ret    0x4
1001a322:	push   0x14
1001a324:	mov    eax,0x1005fa4b
1001a329:	call   0x10058845
1001a32e:	push   0x1f4
1001a333:	push   DWORD PTR [esi+0x18]
1001a336:	xor    edi,edi
1001a338:	mov    DWORD PTR [ebp-0x10],edi
1001a33b:	call   DWORD PTR ds:0x10065084
1001a341:	test   eax,eax
1001a343:	je     0x1001a352
1001a345:	call   0x1001ae15
1001a34a:	mov    DWORD PTR [ebx+0x4],eax
1001a34d:	mov    DWORD PTR [ebx+0x8],edi
1001a350:	jmp    0x1001a38e
1001a352:	lea    eax,[ebp-0x1c]
1001a355:	push   eax
1001a356:	mov    ecx,esi
1001a358:	call   0x1001ac30
1001a35d:	mov    DWORD PTR [ebp-0x4],edi
1001a360:	mov    eax,DWORD PTR [ebp-0x18]
1001a363:	mov    edx,DWORD PTR [eax]
1001a365:	push   eax
1001a366:	lea    ecx,[ebp-0x1c]
1001a369:	push   ecx
1001a36a:	mov    edi,ecx
1001a36c:	push   edx
1001a36d:	push   edi
1001a36e:	call   0x1001af10
1001a373:	add    esp,0x10
1001a376:	push   DWORD PTR [esi+0x18]
1001a379:	call   DWORD PTR ds:0x10065094
1001a37f:	push   ebx
1001a380:	mov    ecx,edi
1001a382:	call   0x1001ac30
1001a387:	mov    eax,edi
1001a389:	call   0x1001ac8c
1001a38e:	mov    eax,ebx
1001a390:	call   0x1005891d
1001a395:	ret    
1001a396:	push   0xcc
1001a39b:	mov    eax,0x10062254
1001a3a0:	call   0x100588ae
1001a3a5:	mov    esi,ecx
1001a3a7:	xor    ebx,ebx
1001a3a9:	mov    DWORD PTR [ebp-0xac],esi
1001a3af:	mov    DWORD PTR [ebp-0xb4],ebx
1001a3b5:	xor    edi,edi
1001a3b7:	inc    edi
1001a3b8:	mov    DWORD PTR [ebp-0x4],edi
1001a3bb:	call   0x10003ba8
1001a3c0:	push   0x8c06040
1001a3c5:	push   0x1006eb40
1001a3ca:	mov    DWORD PTR [ebp-0xb4],edi
1001a3d0:	mov    DWORD PTR [ebp-0x9c],ebx
1001a3d6:	call   0x10003d63
1001a3db:	push   0x42661b08
1001a3e0:	push   eax
1001a3e1:	call   0x10003d63
1001a3e6:	push   eax
1001a3e7:	push   0x7
1001a3e9:	push   0x1006eb80
1001a3ee:	call   0x10003d75
1001a3f3:	add    esp,0x1c
1001a3f6:	push   eax
1001a3f7:	push   esi
1001a3f8:	call   0x10005e98
1001a3fd:	push   0xa
1001a3ff:	lea    eax,[ebp-0x7c]
1001a402:	push   eax
1001a403:	call   DWORD PTR ds:0x10065118
1001a409:	push   eax
1001a40a:	call   0x10044846
1001a40f:	add    esp,0xc
1001a412:	push   eax
1001a413:	push   esi
1001a414:	call   0x10005e98
1001a419:	mov    eax,DWORD PTR [ebp+0xc]
1001a41c:	mov    esi,DWORD PTR [eax]
1001a41e:	mov    DWORD PTR [ebp-0xb0],ebx
1001a424:	lea    ebx,[ebp+0x8]
1001a427:	mov    DWORD PTR [ebp-0xa4],esi
1001a42d:	mov    DWORD PTR [ebp-0xa8],ebx
1001a433:	mov    edi,0x1006ebac
1001a438:	test   ebx,ebx
1001a43a:	mov    eax,DWORD PTR [ebp+0xc]
1001a43d:	mov    DWORD PTR [ebp-0xb8],eax
1001a443:	je     0x1001a44c
1001a445:	lea    eax,[ebp+0x8]
1001a448:	cmp    ebx,eax
1001a44a:	je     0x1001a451
1001a44c:	call   0x100422b0
1001a451:	cmp    esi,DWORD PTR [ebp-0xb8]
1001a457:	je     0x1001aa4c
1001a45d:	push   0x0
1001a45f:	lea    ecx,[ebp-0x98]
1001a465:	mov    DWORD PTR [ebp-0x80],0xf
1001a46c:	call   0x10001425
1001a471:	push   0x49623c3a
1001a476:	push   0x1006eb88
1001a47b:	mov    BYTE PTR [ebp-0x4],0x2
1001a47f:	call   0x10003d63
1001a484:	push   0x6d6e69da
1001a489:	push   eax
1001a48a:	call   0x10003d63
1001a48f:	push   0x54ccdee4
1001a494:	push   eax
1001a495:	call   0x10003d63
1001a49a:	push   0x589d1c50
1001a49f:	push   eax
1001a4a0:	call   0x10003d63
1001a4a5:	push   eax
1001a4a6:	push   0x4
1001a4a8:	push   edi
1001a4a9:	call   0x10003d75
1001a4ae:	add    esp,0x2c
1001a4b1:	push   eax
1001a4b2:	lea    eax,[ebp-0x98]
1001a4b8:	push   eax
1001a4b9:	call   0x10005e98
1001a4be:	push   0xa
1001a4c0:	lea    eax,[ebp-0x7c]
1001a4c3:	push   eax
1001a4c4:	push   DWORD PTR [ebp-0x9c]
1001a4ca:	call   0x10044846
1001a4cf:	add    esp,0xc
1001a4d2:	push   eax
1001a4d3:	lea    eax,[ebp-0x98]
1001a4d9:	push   eax
1001a4da:	call   0x10005e98
1001a4df:	push   0x1faed652
1001a4e4:	push   0x1006ebb4
1001a4e9:	call   0x10003d63
1001a4ee:	push   0xd8b97b6
1001a4f3:	push   eax
1001a4f4:	call   0x10003d63
1001a4f9:	push   0x7152488a
1001a4fe:	push   eax
1001a4ff:	call   0x10003d63
1001a504:	push   0x48b058b0
1001a509:	push   eax
1001a50a:	call   0x10003d63
1001a50f:	push   0x3ec12ba2
1001a514:	push   eax
1001a515:	call   0x10003d63
1001a51a:	push   0x50196202
1001a51f:	push   eax
1001a520:	call   0x10003d63
1001a525:	push   eax
1001a526:	push   0x8
1001a528:	push   0x1006ebec
1001a52d:	call   0x10003d75
1001a532:	add    esp,0x3c
1001a535:	push   eax
1001a536:	lea    eax,[ebp-0x98]
1001a53c:	push   eax
1001a53d:	call   0x10005e98
1001a542:	test   ebx,ebx
1001a544:	jne    0x1001a54b
1001a546:	call   0x100422b0
1001a54b:	cmp    esi,DWORD PTR [ebx+0x4]
1001a54e:	jne    0x1001a555
1001a550:	call   0x100422b0
1001a555:	push   0xa
1001a557:	lea    ecx,[ebp-0x7c]
1001a55a:	lea    eax,[esi+0x8]
1001a55d:	push   ecx
1001a55e:	push   DWORD PTR [eax+0x54]
1001a561:	mov    DWORD PTR [ebp-0xa0],eax
1001a567:	call   0x10044846
1001a56c:	add    esp,0xc
1001a56f:	push   eax
1001a570:	lea    eax,[ebp-0x98]
1001a576:	push   eax
1001a577:	call   0x10005e98
1001a57c:	push   0x15caa90
1001a581:	push   0x1006ebf8
1001a586:	call   0x10003d63
1001a58b:	push   eax
1001a58c:	push   0x4
1001a58e:	push   edi
1001a58f:	call   0x10003d75
1001a594:	add    esp,0x14
1001a597:	push   eax
1001a598:	lea    eax,[ebp-0x98]
1001a59e:	push   eax
1001a59f:	call   0x10005e98
1001a5a4:	push   0xa
1001a5a6:	lea    eax,[ebp-0x7c]
1001a5a9:	push   eax
1001a5aa:	push   DWORD PTR [ebp-0x9c]
1001a5b0:	call   0x10044846
1001a5b5:	add    esp,0xc
1001a5b8:	push   eax
1001a5b9:	lea    eax,[ebp-0x98]
1001a5bf:	push   eax
1001a5c0:	call   0x10005e98
1001a5c5:	push   0x1006ec20
1001a5ca:	push   0x8
1001a5cc:	push   0x1006ec4c
1001a5d1:	call   0x10003d75
1001a5d6:	add    esp,0xc
1001a5d9:	push   eax
1001a5da:	lea    eax,[ebp-0x98]
1001a5e0:	push   eax
1001a5e1:	call   0x10005e98
1001a5e6:	cmp    esi,DWORD PTR [ebx+0x4]
1001a5e9:	jne    0x1001a5f0
1001a5eb:	call   0x100422b0
1001a5f0:	push   DWORD PTR [ebp-0xa0]
1001a5f6:	lea    ecx,[ebp-0xd8]
1001a5fc:	call   0x10030bd0
1001a601:	pop    ecx
1001a602:	push   0xffffffff
1001a604:	push   0x0
1001a606:	lea    esi,[ebp-0x98]
1001a60c:	mov    BYTE PTR [ebp-0x4],0x3
1001a610:	call   0x10005fb0
1001a615:	push   0x0
1001a617:	push   0x1
1001a619:	lea    ecx,[ebp-0xd8]
1001a61f:	mov    BYTE PTR [ebp-0x4],0x2
1001a623:	call   0x100012f9
1001a628:	push   0x1006ec58
1001a62d:	push   0x4
1001a62f:	push   edi
1001a630:	call   0x10003d75
1001a635:	add    esp,0xc
1001a638:	push   eax
1001a639:	mov    eax,esi
1001a63b:	push   eax
1001a63c:	call   0x10005e98
1001a641:	push   0xa
1001a643:	lea    eax,[ebp-0x7c]
1001a646:	push   eax
1001a647:	push   DWORD PTR [ebp-0x9c]
1001a64d:	call   0x10044846
1001a652:	add    esp,0xc
1001a655:	push   eax
1001a656:	mov    eax,esi
1001a658:	push   eax
1001a659:	call   0x10005e98
1001a65e:	push   0x1006ec7c
1001a663:	push   0xa
1001a665:	push   0x1006eca0
1001a66a:	call   0x10003d75
1001a66f:	add    esp,0xc
1001a672:	push   eax
1001a673:	mov    eax,esi
1001a675:	push   eax
1001a676:	call   0x10005e98
1001a67b:	mov    esi,DWORD PTR [ebp-0xa4]
1001a681:	cmp    esi,DWORD PTR [ebx+0x4]
1001a684:	jne    0x1001a68b
1001a686:	call   0x100422b0
1001a68b:	lea    eax,[esi+0x8]
1001a68e:	add    eax,0x38
1001a691:	push   eax
1001a692:	lea    ecx,[ebp-0xd8]
1001a698:	call   0x10030bd0
1001a69d:	pop    ecx
1001a69e:	push   0xffffffff
1001a6a0:	push   0x0
1001a6a2:	lea    esi,[ebp-0x98]
1001a6a8:	mov    BYTE PTR [ebp-0x4],0x4
1001a6ac:	call   0x10005fb0
1001a6b1:	push   0x0
1001a6b3:	push   0x1
1001a6b5:	lea    ecx,[ebp-0xd8]
1001a6bb:	mov    BYTE PTR [ebp-0x4],0x2
1001a6bf:	call   0x100012f9
1001a6c4:	mov    esi,DWORD PTR [ebp-0xa4]
1001a6ca:	cmp    esi,DWORD PTR [ebx+0x4]
1001a6cd:	jne    0x1001a6d4
1001a6cf:	call   0x100422b0
1001a6d4:	lea    eax,[esi+0x8]
1001a6d7:	push   0x1006bb18
1001a6dc:	lea    esi,[eax+0x1c]
1001a6df:	call   0x10005e33
1001a6e4:	test   al,al
1001a6e6:	pop    ecx
1001a6e7:	jne    0x1001a7c1
1001a6ed:	push   0x77e93888
1001a6f2:	push   0x1006ecac
1001a6f7:	call   0x10003d63
1001a6fc:	push   0x4728b962
1001a701:	push   eax
1001a702:	call   0x10003d63
1001a707:	push   eax
1001a708:	push   0x4
1001a70a:	push   edi
1001a70b:	call   0x10003d75
1001a710:	add    esp,0x1c
1001a713:	push   eax
1001a714:	lea    eax,[ebp-0x98]
1001a71a:	push   eax
1001a71b:	call   0x10005e98
1001a720:	push   0xa
1001a722:	lea    eax,[ebp-0x7c]
1001a725:	push   eax
1001a726:	push   DWORD PTR [ebp-0x9c]
1001a72c:	call   0x10044846
1001a731:	add    esp,0xc
1001a734:	push   eax
1001a735:	lea    eax,[ebp-0x98]
1001a73b:	push   eax
1001a73c:	call   0x10005e98
1001a741:	push   0x8a1f05e
1001a746:	push   0x1006ecd8
1001a74b:	call   0x10003d63
1001a750:	push   0x54d29e94
1001a755:	push   eax
1001a756:	call   0x10003d63
1001a75b:	push   eax
1001a75c:	push   0x7
1001a75e:	push   0x1006ed14
1001a763:	call   0x10003d75
1001a768:	add    esp,0x1c
1001a76b:	push   eax
1001a76c:	lea    eax,[ebp-0x98]
1001a772:	push   eax
1001a773:	call   0x10005e98
1001a778:	mov    esi,DWORD PTR [ebp-0xa4]
1001a77e:	cmp    esi,DWORD PTR [ebx+0x4]
1001a781:	jne    0x1001a788
1001a783:	call   0x100422b0
1001a788:	lea    eax,[esi+0x8]
1001a78b:	add    eax,0x1c
1001a78e:	push   eax
1001a78f:	lea    ecx,[ebp-0xd8]
1001a795:	call   0x10030bd0
1001a79a:	pop    ecx
1001a79b:	push   0xffffffff
1001a79d:	push   0x0
1001a79f:	lea    esi,[ebp-0x98]
1001a7a5:	mov    BYTE PTR [ebp-0x4],0x5
1001a7a9:	call   0x10005fb0
1001a7ae:	push   0x0
1001a7b0:	push   0x1
1001a7b2:	lea    ecx,[ebp-0xd8]
1001a7b8:	mov    BYTE PTR [ebp-0x4],0x2
1001a7bc:	call   0x100012f9
1001a7c1:	push   0x102dc12e
1001a7c6:	push   0x1006ed1c
1001a7cb:	call   0x10003d63
1001a7d0:	push   0x299f394e
1001a7d5:	push   eax
1001a7d6:	call   0x10003d63
1001a7db:	push   0x78640768
1001a7e0:	push   eax
1001a7e1:	call   0x10003d63
1001a7e6:	push   0x72fdfbdc
1001a7eb:	push   eax
1001a7ec:	call   0x10003d63
1001a7f1:	push   eax
1001a7f2:	push   0x4
1001a7f4:	push   edi
1001a7f5:	call   0x10003d75
1001a7fa:	add    esp,0x2c
1001a7fd:	push   eax
1001a7fe:	lea    eax,[ebp-0x98]
1001a804:	push   eax
1001a805:	call   0x10005e98
1001a80a:	push   0xa
1001a80c:	lea    eax,[ebp-0x7c]
1001a80f:	push   eax
1001a810:	push   DWORD PTR [ebp-0x9c]
1001a816:	call   0x10044846
1001a81b:	add    esp,0xc
1001a81e:	push   eax
1001a81f:	lea    eax,[ebp-0x98]
1001a825:	push   eax
1001a826:	call   0x10005e98
1001a82b:	push   0x4b2634fe
1001a830:	push   0x1006ed58
1001a835:	call   0x10003d63
1001a83a:	push   eax
1001a83b:	push   0xf
1001a83d:	push   0x1006ed98
1001a842:	call   0x10003d75
1001a847:	add    esp,0x14
1001a84a:	push   eax
1001a84b:	lea    eax,[ebp-0x98]
1001a851:	push   eax
1001a852:	call   0x10005e98
1001a857:	mov    esi,DWORD PTR [ebp-0xa4]
1001a85d:	cmp    esi,DWORD PTR [ebx+0x4]
1001a860:	jne    0x1001a867
1001a862:	call   0x100422b0
1001a867:	push   0xa
1001a869:	lea    eax,[ebp-0x7c]
1001a86c:	push   eax
1001a86d:	lea    eax,[esi+0x8]
1001a870:	push   DWORD PTR [eax+0x58]
1001a873:	mov    DWORD PTR [ebp-0xa0],eax
1001a879:	call   0x10044846
1001a87e:	add    esp,0xc
1001a881:	push   eax
1001a882:	lea    eax,[ebp-0x98]
1001a888:	push   eax
1001a889:	call   0x10005e98
1001a88e:	push   0x4e694912
1001a893:	push   0x1006eda8
1001a898:	call   0x10003d63
1001a89d:	push   eax
1001a89e:	push   0x4
1001a8a0:	push   edi
1001a8a1:	call   0x10003d75
1001a8a6:	add    esp,0x14
1001a8a9:	push   eax
1001a8aa:	lea    eax,[ebp-0x98]
1001a8b0:	push   eax
1001a8b1:	call   0x10005e98
1001a8b6:	push   0xa
1001a8b8:	lea    eax,[ebp-0x7c]
1001a8bb:	push   eax
1001a8bc:	push   DWORD PTR [ebp-0x9c]
1001a8c2:	call   0x10044846
1001a8c7:	add    esp,0xc
1001a8ca:	push   eax
1001a8cb:	lea    eax,[ebp-0x98]
1001a8d1:	push   eax
1001a8d2:	call   0x10005e98
1001a8d7:	push   0x8a93c6c
1001a8dc:	push   0x1006ede8
1001a8e1:	call   0x10003d63
1001a8e6:	push   0x798da344
1001a8eb:	push   eax
1001a8ec:	call   0x10003d63
1001a8f1:	push   eax
1001a8f2:	push   0xa
1001a8f4:	push   0x1006ee20
1001a8f9:	call   0x10003d75
1001a8fe:	add    esp,0x1c
1001a901:	push   eax
1001a902:	lea    eax,[ebp-0x98]
1001a908:	push   eax
1001a909:	call   0x10005e98
1001a90e:	cmp    esi,DWORD PTR [ebx+0x4]
1001a911:	jne    0x1001a918
1001a913:	call   0x100422b0
1001a918:	push   0xa
1001a91a:	lea    eax,[ebp-0x7c]
1001a91d:	push   eax
1001a91e:	mov    eax,DWORD PTR [ebp-0xa0]
1001a924:	push   DWORD PTR [eax+0x5c]
1001a927:	call   0x10044846
1001a92c:	add    esp,0xc
1001a92f:	push   eax
1001a930:	lea    eax,[ebp-0x98]
1001a936:	push   eax
1001a937:	call   0x10005e98
1001a93c:	push   0x1006ee2c
1001a941:	push   0x4
1001a943:	push   edi
1001a944:	call   0x10003d75
1001a949:	add    esp,0xc
1001a94c:	push   eax
1001a94d:	lea    eax,[ebp-0x98]
1001a953:	push   eax
1001a954:	call   0x10005e98
1001a959:	push   0xa
1001a95b:	lea    eax,[ebp-0x7c]
1001a95e:	push   eax
1001a95f:	push   DWORD PTR [ebp-0x9c]
1001a965:	call   0x10044846
1001a96a:	add    esp,0xc
1001a96d:	push   eax
1001a96e:	lea    eax,[ebp-0x98]
1001a974:	push   eax
1001a975:	call   0x10005e98
1001a97a:	push   0x774f8764
1001a97f:	push   0x1006ee54
1001a984:	call   0x10003d63
1001a989:	push   0x97e13ae
1001a98e:	push   eax
1001a98f:	call   0x10003d63
1001a994:	push   eax
1001a995:	push   0xa
1001a997:	push   0x1006ee7c
1001a99c:	call   0x10003d75
1001a9a1:	add    esp,0x1c
1001a9a4:	push   eax
1001a9a5:	lea    eax,[ebp-0x98]
1001a9ab:	push   eax
1001a9ac:	call   0x10005e98
1001a9b1:	cmp    esi,DWORD PTR [ebx+0x4]
1001a9b4:	jne    0x1001a9bb
1001a9b6:	call   0x100422b0
1001a9bb:	push   0xa
1001a9bd:	lea    eax,[ebp-0x7c]
1001a9c0:	push   eax
1001a9c1:	mov    eax,DWORD PTR [ebp-0xa0]
1001a9c7:	push   DWORD PTR [eax+0x60]
1001a9ca:	call   0x10044846
1001a9cf:	add    esp,0xc
1001a9d2:	push   eax
1001a9d3:	lea    eax,[ebp-0x98]
1001a9d9:	push   eax
1001a9da:	call   0x10005e98
1001a9df:	mov    eax,DWORD PTR [ebp-0xb0]
1001a9e5:	mov    esi,DWORD PTR [ebp-0xac]
1001a9eb:	add    eax,DWORD PTR [esi+0x14]
1001a9ee:	cmp    eax,DWORD PTR [ebp+0x14]
1001a9f1:	mov    DWORD PTR [ebp-0xb0],eax
1001a9f7:	jg     0x1001aa3d
1001a9f9:	push   0xffffffff
1001a9fb:	push   0x0
1001a9fd:	lea    eax,[ebp-0x98]
1001aa03:	call   0x10005fb0
1001aa08:	inc    DWORD PTR [ebp-0x9c]
1001aa0e:	push   0x0
1001aa10:	push   0x1
1001aa12:	lea    ecx,[ebp-0x98]
1001aa18:	mov    BYTE PTR [ebp-0x4],0x1
1001aa1c:	call   0x100012f9
1001aa21:	lea    esi,[ebp-0xa8]
1001aa27:	call   0x1002634d
1001aa2c:	mov    ebx,DWORD PTR [ebp-0xa8]
1001aa32:	mov    esi,DWORD PTR [ebp-0xa4]
1001aa38:	jmp    0x1001a438
1001aa3d:	push   0x0
1001aa3f:	push   0x1
1001aa41:	lea    ecx,[ebp-0x98]
1001aa47:	call   0x100012f9
1001aa4c:	lea    eax,[ebp+0x8]
1001aa4f:	call   0x1001ac8c
1001aa54:	mov    eax,DWORD PTR [ebp-0xac]
1001aa5a:	call   0x10058931
1001aa5f:	ret    
1001aa60:	push   0x70
1001aa62:	mov    eax,0x100638a1
1001aa67:	call   0x100588e4
1001aa6c:	mov    edi,DWORD PTR [ebp+0x8]
1001aa6f:	mov    DWORD PTR [ebp-0x38],edi
1001aa72:	mov    DWORD PTR [ebp-0x40],edi
1001aa75:	xor    ebx,ebx
1001aa77:	mov    DWORD PTR [ebp-0x4],ebx
1001aa7a:	lea    ecx,[ebp-0x30]
1001aa7d:	mov    BYTE PTR [ebp-0x4],0x1
1001aa81:	call   0x10018131
1001aa86:	mov    BYTE PTR [ebp-0x4],0x2
1001aa8a:	call   0x1000207c
1001aa8f:	cmp    DWORD PTR [edi+0x18],0x10
1001aa93:	jb     0x1001aa9a
1001aa95:	mov    eax,DWORD PTR [edi+0x4]
1001aa98:	jmp    0x1001aa9d
1001aa9a:	lea    eax,[edi+0x4]
1001aa9d:	push   eax
1001aa9e:	lea    ecx,[ebp-0x78]
1001aaa1:	call   0x100011d6
1001aaa6:	mov    BYTE PTR [ebp-0x4],0x3
1001aaaa:	push   DWORD PTR ds:0x1007fd64
1001aab0:	lea    ecx,[ebp-0x5c]
1001aab3:	call   0x100011d6
1001aab8:	push   0x4e20
1001aabd:	lea    eax,[ebp-0x34]
1001aac0:	push   eax
1001aac1:	lea    eax,[ebp-0x78]
1001aac4:	push   eax
1001aac5:	lea    eax,[ebp-0x30]
1001aac8:	push   eax
1001aac9:	lea    eax,[ebp-0x3c]
1001aacc:	push   eax
1001aacd:	lea    edx,[ebp-0x5c]
1001aad0:	mov    BYTE PTR [ebp-0x4],0x4
1001aad4:	call   0x10030ab0
1001aad9:	mov    ecx,DWORD PTR [eax]
1001aadb:	mov    esi,ecx
1001aadd:	add    esp,0x14
1001aae0:	mov    DWORD PTR [eax],ebx
1001aae2:	mov    DWORD PTR [ebp-0x34],esi
1001aae5:	push   DWORD PTR [ebp-0x3c]
1001aae8:	call   0x10041d92
1001aaed:	pop    ecx
1001aaee:	push   ebx
1001aaef:	push   0x1
1001aaf1:	lea    ecx,[ebp-0x5c]
1001aaf4:	call   0x100012f9
1001aaf9:	push   ebx
1001aafa:	push   0x1
1001aafc:	lea    ecx,[ebp-0x78]
1001aaff:	mov    BYTE PTR [ebp-0x4],0x7
1001ab03:	call   0x100012f9
1001ab08:	cmp    esi,ebx
1001ab0a:	jne    0x1001ab40
1001ab0c:	call   0x100180b0
1001ab11:	cmp    DWORD PTR [ebp-0x18],0x10
1001ab15:	mov    eax,DWORD PTR [ebp-0x2c]
1001ab18:	jae    0x1001ab1d
1001ab1a:	lea    eax,[ebp-0x2c]
1001ab1d:	push   eax
1001ab1e:	call   0x1000207c
1001ab23:	pop    ecx
1001ab24:	push   0x5
1001ab26:	call   0x10037620
1001ab2b:	pop    ecx
1001ab2c:	push   ebx
1001ab2d:	call   0x10041d92
1001ab32:	pop    ecx
1001ab33:	push   ebx
1001ab34:	push   0x1
1001ab36:	lea    ecx,[ebp-0x30]
1001ab39:	call   0x100012f9
1001ab3e:	jmp    0x1001ab63
1001ab40:	push   esi
1001ab41:	call   0x10041d92
1001ab46:	pop    ecx
1001ab47:	push   ebx
1001ab48:	push   0x1
1001ab4a:	lea    ecx,[ebp-0x30]
1001ab4d:	call   0x100012f9
1001ab52:	jmp    0x1001ab5f
1001ab54:	mov    eax,0x1001ab5a
1001ab59:	ret    
1001ab5a:	mov    edi,DWORD PTR [ebp-0x38]
1001ab5d:	xor    ebx,ebx
1001ab5f:	cmp    edi,ebx
1001ab61:	je     0x1001ab6b
1001ab63:	push   0x1
1001ab65:	push   edi
1001ab66:	call   0x1000d3c2
1001ab6b:	xor    eax,eax
1001ab6d:	call   0x10058940
1001ab72:	ret    0x4
1001ab75:	push   0x28
1001ab77:	mov    eax,0x100639c7
1001ab7c:	call   0x10058845
1001ab81:	xor    edi,edi
1001ab83:	push   0x1c
1001ab85:	mov    DWORD PTR [ebp-0x4],edi
1001ab88:	call   0x1004239e
1001ab8d:	cmp    eax,edi
1001ab8f:	pop    ecx
1001ab90:	je     0x1001ab9d
1001ab92:	mov    esi,eax
1001ab94:	call   0x10003ba8
1001ab99:	mov    ebx,eax
1001ab9b:	jmp    0x1001ab9f
1001ab9d:	xor    ebx,ebx
1001ab9f:	push   0x1
1001aba1:	lea    eax,[ebp-0x10]
1001aba4:	push   eax
1001aba5:	call   0x100346c0
1001abaa:	push   eax
1001abab:	mov    BYTE PTR [ebp-0x4],0x1
1001abaf:	call   0x10035dd0
1001abb4:	lea    eax,[eax*4+0x800]
1001abbb:	push   eax
1001abbc:	sub    esp,0xc
1001abbf:	mov    eax,esp
1001abc1:	mov    DWORD PTR [ebp-0x14],esp
1001abc4:	push   eax
1001abc5:	lea    ecx,[ebp+0x8]
1001abc8:	call   0x1001ac30
1001abcd:	lea    ecx,[ebp-0x30]
1001abd0:	call   0x1001a396
1001abd5:	add    esp,0x10
1001abd8:	push   0xffffffff
1001abda:	push   edi
1001abdb:	push   eax
1001abdc:	mov    ecx,ebx
1001abde:	mov    BYTE PTR [ebp-0x4],0x2
1001abe2:	call   0x1000124a
1001abe7:	push   edi
1001abe8:	push   0x1
1001abea:	lea    ecx,[ebp-0x30]
1001abed:	call   0x100012f9
1001abf2:	push   DWORD PTR [ebp-0x10]
1001abf5:	mov    esi,DWORD PTR ds:0x10065070
1001abfb:	call   esi
1001abfd:	push   edi
1001abfe:	push   edi
1001abff:	push   ebx
1001ac00:	push   0x1001aa60
1001ac05:	push   edi
1001ac06:	push   edi
1001ac07:	call   DWORD PTR ds:0x10065098
1001ac0d:	cmp    eax,edi
1001ac0f:	je     0x1001ac16
1001ac11:	push   eax
1001ac12:	call   esi
1001ac14:	jmp    0x1001ac22
1001ac16:	cmp    ebx,edi
1001ac18:	je     0x1001ac22
1001ac1a:	push   0x1
1001ac1c:	push   ebx
1001ac1d:	call   0x1000d3c2
1001ac22:	lea    eax,[ebp+0x8]
1001ac25:	call   0x1001ac8c
1001ac2a:	call   0x1005891d
1001ac2f:	ret    
1001ac30:	push   0x4
1001ac32:	mov    eax,0x1005fa28
1001ac37:	call   0x10058878
1001ac3c:	mov    edi,ecx
1001ac3e:	mov    esi,DWORD PTR [ebp+0x8]
1001ac41:	call   0x1001ae15
1001ac46:	xor    ecx,ecx
1001ac48:	mov    DWORD PTR [esi+0x4],eax
1001ac4b:	mov    DWORD PTR [esi+0x8],ecx
1001ac4e:	mov    DWORD PTR [ebp-0x4],ecx
1001ac51:	mov    ecx,DWORD PTR [edi+0x4]
1001ac54:	mov    edx,DWORD PTR [ecx]
1001ac56:	mov    eax,DWORD PTR [eax]
1001ac58:	push   ecx
1001ac59:	push   edi
1001ac5a:	push   edx
1001ac5b:	push   edi
1001ac5c:	push   eax
1001ac5d:	push   esi
1001ac5e:	push   esi
1001ac5f:	call   0x1001af82
1001ac64:	mov    eax,esi
1001ac66:	call   0x1005891d
1001ac6b:	ret    0x4
1001ac6e:	mov    edi,DWORD PTR [ebp+0x8]
1001ac71:	call   0x1001ae45
1001ac76:	push   DWORD PTR [edi+0x4]
1001ac79:	call   0x10041d92
1001ac7e:	pop    ecx
1001ac7f:	xor    ecx,ecx
1001ac81:	push   ecx
1001ac82:	push   ecx
1001ac83:	mov    DWORD PTR [edi+0x4],ecx
1001ac86:	call   0x10046704
1001ac8b:	int3   
1001ac8c:	push   edi
1001ac8d:	mov    edi,eax
1001ac8f:	call   0x1001ae45
1001ac94:	push   DWORD PTR [edi+0x4]
1001ac97:	call   0x10041d92
1001ac9c:	and    DWORD PTR [edi+0x4],0x0
1001aca0:	pop    ecx
1001aca1:	pop    edi
1001aca2:	ret    
1001aca3:	push   ebp
1001aca4:	mov    ebp,esp
1001aca6:	push   ecx
1001aca7:	push   ecx
1001aca8:	mov    eax,DWORD PTR [ebp+0xc]
1001acab:	push   esi
1001acac:	push   edi
1001acad:	mov    edi,DWORD PTR [ebp+0x10]
1001acb0:	lea    esi,[ebp+0xc]
1001acb3:	mov    DWORD PTR [ebp-0x8],eax
1001acb6:	call   0x1002634d
1001acbb:	cmp    edi,DWORD PTR [ebx+0x4]
1001acbe:	je     0x1001ace1
1001acc0:	mov    eax,DWORD PTR [edi+0x4]
1001acc3:	mov    ecx,DWORD PTR [edi]
1001acc5:	mov    DWORD PTR [eax],ecx
1001acc7:	mov    eax,DWORD PTR [edi]
1001acc9:	mov    ecx,DWORD PTR [edi+0x4]
1001accc:	lea    esi,[edi+0x8]
1001accf:	mov    DWORD PTR [eax+0x4],ecx
1001acd2:	call   0x1001a2a3
1001acd7:	push   edi
1001acd8:	call   0x10041d92
1001acdd:	dec    DWORD PTR [ebx+0x8]
1001ace0:	pop    ecx
1001ace1:	mov    ecx,DWORD PTR [ebp+0xc]
1001ace4:	mov    eax,DWORD PTR [ebp+0x8]
1001ace7:	mov    DWORD PTR [eax],ecx
1001ace9:	mov    ecx,DWORD PTR [ebp+0x10]
1001acec:	pop    edi
1001aced:	mov    DWORD PTR [eax+0x4],ecx
1001acf0:	pop    esi
1001acf1:	leave  
1001acf2:	ret    0xc
1001acf5:	mov    eax,DWORD PTR [esi+0x4]
1001acf8:	mov    ecx,DWORD PTR [eax]
1001acfa:	mov    DWORD PTR [eax],eax
1001acfc:	mov    eax,DWORD PTR [esi+0x4]
1001acff:	mov    DWORD PTR [eax+0x4],eax
1001ad02:	and    DWORD PTR [esi+0x8],0x0
1001ad06:	cmp    ecx,DWORD PTR [esi+0x4]
1001ad09:	je     0x1001ad1d
1001ad0b:	push   edi
1001ad0c:	mov    edi,DWORD PTR [ecx]
1001ad0e:	push   ecx
1001ad0f:	call   0x10041d92
1001ad14:	cmp    edi,DWORD PTR [esi+0x4]
1001ad17:	pop    ecx
1001ad18:	mov    ecx,edi
1001ad1a:	jne    0x1001ad0c
1001ad1c:	pop    edi
1001ad1d:	push   DWORD PTR [esi+0x4]
1001ad20:	call   0x10041d92
1001ad25:	and    DWORD PTR [esi+0x4],0x0
1001ad29:	pop    ecx
1001ad2a:	ret    
1001ad2b:	push   0x44
1001ad2d:	mov    eax,0x1005ef45
1001ad32:	call   0x10058845
1001ad37:	mov    edi,DWORD PTR [ebx+0x4]
1001ad3a:	push   DWORD PTR [edi+0x4]
1001ad3d:	push   edi
1001ad3e:	call   0x1001aedd
1001ad43:	mov    ecx,DWORD PTR [ebx+0x8]
1001ad46:	mov    edx,0x1fffffff
1001ad4b:	sub    edx,ecx
1001ad4d:	cmp    edx,0x1
1001ad50:	jae    0x1001ad84
1001ad52:	push   0x1006eb2c
1001ad57:	lea    ecx,[ebp-0x28]
1001ad5a:	call   0x100011d6
1001ad5f:	and    DWORD PTR [ebp-0x4],0x0
1001ad63:	lea    eax,[ebp-0x28]
1001ad66:	push   eax
1001ad67:	lea    ecx,[ebp-0x50]
1001ad6a:	call   0x10001065
1001ad6f:	push   0x10073960
1001ad74:	lea    eax,[ebp-0x50]
1001ad77:	push   eax
1001ad78:	mov    DWORD PTR [ebp-0x50],0x1006a77c
1001ad7f:	call   0x10046704
1001ad84:	inc    ecx
1001ad85:	mov    DWORD PTR [ebx+0x8],ecx
1001ad88:	mov    DWORD PTR [edi+0x4],eax
1001ad8b:	mov    ecx,DWORD PTR [eax+0x4]
1001ad8e:	mov    DWORD PTR [ecx],eax
1001ad90:	call   0x1005891d
1001ad95:	ret    
1001ad96:	mov    eax,DWORD PTR [eax]
1001ad98:	test   eax,eax
1001ad9a:	je     0x1001ada4
1001ad9c:	push   0x1
1001ad9e:	push   eax
1001ad9f:	call   0x1000d3c2
1001ada4:	ret    
1001ada5:	push   0x48
1001ada7:	mov    eax,0x1005f147
1001adac:	call   0x10058845
1001adb1:	push   DWORD PTR [ebp+0x8]
1001adb4:	mov    esi,DWORD PTR [ebp+0x10]
1001adb7:	push   DWORD PTR [esi+0x4]
1001adba:	push   esi
1001adbb:	call   0x1001ae7a
1001adc0:	mov    ecx,DWORD PTR [edi+0x8]
1001adc3:	mov    edx,0x28f5c28
1001adc8:	sub    edx,ecx
1001adca:	cmp    edx,0x1
1001adcd:	jae    0x1001ae01
1001adcf:	push   0x1006eb2c
1001add4:	lea    ecx,[ebp-0x2c]
1001add7:	call   0x100011d6
1001addc:	and    DWORD PTR [ebp-0x4],0x0
1001ade0:	lea    eax,[ebp-0x2c]
1001ade3:	push   eax
1001ade4:	lea    ecx,[ebp-0x54]
1001ade7:	call   0x10001065
1001adec:	push   0x10073960
1001adf1:	lea    eax,[ebp-0x54]
1001adf4:	push   eax
1001adf5:	mov    DWORD PTR [ebp-0x54],0x1006a77c
1001adfc:	call   0x10046704
1001ae01:	inc    ecx
1001ae02:	mov    DWORD PTR [edi+0x8],ecx
1001ae05:	mov    DWORD PTR [esi+0x4],eax
1001ae08:	mov    ecx,DWORD PTR [eax+0x4]
1001ae0b:	mov    DWORD PTR [ecx],eax
1001ae0d:	call   0x1005891d
1001ae12:	ret    0xc
1001ae15:	push   0x6c
1001ae17:	call   0x1004239e
1001ae1c:	test   eax,eax
1001ae1e:	pop    ecx
1001ae1f:	je     0x1001ae23
1001ae21:	mov    DWORD PTR [eax],eax
1001ae23:	lea    ecx,[eax+0x4]
1001ae26:	test   ecx,ecx
1001ae28:	je     0x1001ae2c
1001ae2a:	mov    DWORD PTR [ecx],eax
1001ae2c:	ret    
1001ae2d:	push   0x10
1001ae2f:	call   0x1004239e
1001ae34:	test   eax,eax
1001ae36:	pop    ecx
1001ae37:	je     0x1001ae3b
1001ae39:	mov    DWORD PTR [eax],eax
1001ae3b:	lea    ecx,[eax+0x4]
1001ae3e:	test   ecx,ecx
1001ae40:	je     0x1001ae44
1001ae42:	mov    DWORD PTR [ecx],eax
1001ae44:	ret    
1001ae45:	mov    eax,DWORD PTR [edi+0x4]
1001ae48:	push   ebx
1001ae49:	mov    ebx,DWORD PTR [eax]
1001ae4b:	mov    DWORD PTR [eax],eax
1001ae4d:	mov    eax,DWORD PTR [edi+0x4]
1001ae50:	mov    DWORD PTR [eax+0x4],eax
1001ae53:	and    DWORD PTR [edi+0x8],0x0
1001ae57:	cmp    ebx,DWORD PTR [edi+0x4]
1001ae5a:	je     0x1001ae78
1001ae5c:	push   ebp
1001ae5d:	push   esi
1001ae5e:	mov    ebp,DWORD PTR [ebx]
1001ae60:	lea    esi,[ebx+0x8]
1001ae63:	call   0x1001a2a3
1001ae68:	push   ebx
1001ae69:	call   0x10041d92
1001ae6e:	cmp    ebp,DWORD PTR [edi+0x4]
1001ae71:	pop    ecx
1001ae72:	mov    ebx,ebp
1001ae74:	jne    0x1001ae5e
1001ae76:	pop    esi
1001ae77:	pop    ebp
1001ae78:	pop    ebx
1001ae79:	ret    
1001ae7a:	push   0x8
1001ae7c:	mov    eax,0x1005e8ec
1001ae81:	call   0x10058878
1001ae86:	push   0x6c
1001ae88:	call   0x1004239e
1001ae8d:	and    DWORD PTR [ebp-0x4],0x0
1001ae91:	mov    esi,eax
1001ae93:	test   esi,esi
1001ae95:	pop    ecx
1001ae96:	mov    DWORD PTR [ebp-0x14],esi
1001ae99:	je     0x1001aea0
1001ae9b:	mov    eax,DWORD PTR [ebp+0x8]
1001ae9e:	mov    DWORD PTR [esi],eax
1001aea0:	lea    eax,[esi+0x4]
1001aea3:	test   eax,eax
1001aea5:	je     0x1001aeac
1001aea7:	mov    ecx,DWORD PTR [ebp+0xc]
1001aeaa:	mov    DWORD PTR [eax],ecx
1001aeac:	lea    eax,[esi+0x8]
1001aeaf:	test   eax,eax
1001aeb1:	mov    BYTE PTR [ebp-0x4],0x1
1001aeb5:	je     0x1001aec0
1001aeb7:	mov    edi,DWORD PTR [ebp+0x10]
1001aeba:	push   eax
1001aebb:	call   0x1001afae
1001aec0:	mov    eax,esi
1001aec2:	call   0x1005891d
1001aec7:	ret    0xc
1001aeca:	push   DWORD PTR [ebp-0x14]
1001aecd:	call   0x10041d92
1001aed2:	pop    ecx
1001aed3:	push   0x0
1001aed5:	push   0x0
1001aed7:	call   0x10046704
1001aedc:	int3   
1001aedd:	push   0x10
1001aedf:	call   0x1004239e
1001aee4:	test   eax,eax
1001aee6:	pop    ecx
1001aee7:	je     0x1001aeef
1001aee9:	mov    ecx,DWORD PTR [esp+0x4]
1001aeed:	mov    DWORD PTR [eax],ecx
1001aeef:	lea    ecx,[eax+0x4]
1001aef2:	test   ecx,ecx
1001aef4:	je     0x1001aefc
1001aef6:	mov    edx,DWORD PTR [esp+0x8]
1001aefa:	mov    DWORD PTR [ecx],edx
1001aefc:	lea    ecx,[eax+0x8]
1001aeff:	test   ecx,ecx
1001af01:	je     0x1001af0d
1001af03:	mov    edx,DWORD PTR [esi]
1001af05:	mov    DWORD PTR [ecx],edx
1001af07:	mov    edx,DWORD PTR [esi+0x4]
1001af0a:	mov    DWORD PTR [ecx+0x4],edx
1001af0d:	ret    0x8
1001af10:	push   0x7c
1001af12:	mov    eax,0x1005f0e1
1001af17:	call   0x100588ae
1001af1c:	mov    eax,DWORD PTR [ebp+0x10]
1001af1f:	mov    ecx,DWORD PTR [ebp+0x8]
1001af22:	mov    edx,DWORD PTR [ebp+0x14]
1001af25:	mov    ebx,DWORD PTR [ebp+0xc]
1001af28:	mov    DWORD PTR [ebp-0x80],eax
1001af2b:	mov    DWORD PTR [ebp-0x88],ecx
1001af31:	cmp    ebx,edx
1001af33:	je     0x1001af7c
1001af35:	mov    eax,DWORD PTR [edx+0x4]
1001af38:	cmp    ebx,eax
1001af3a:	mov    DWORD PTR [ebp-0x7c],eax
1001af3d:	je     0x1001af7c
1001af3f:	lea    esi,[eax+0x8]
1001af42:	lea    eax,[ebp-0x78]
1001af45:	lea    edi,[ebx+0x8]
1001af48:	push   eax
1001af49:	call   0x1001afae
1001af4e:	and    DWORD PTR [ebp-0x4],0x0
1001af52:	mov    edi,esi
1001af54:	lea    esi,[ebx+0x8]
1001af57:	call   0x1001b0d0
1001af5c:	mov    esi,DWORD PTR [ebp-0x7c]
1001af5f:	lea    edi,[ebp-0x78]
1001af62:	add    esi,0x8
1001af65:	call   0x1001b0d0
1001af6a:	or     DWORD PTR [ebp-0x4],0xffffffff
1001af6e:	mov    esi,edi
1001af70:	call   0x1001a2a3
1001af75:	mov    ebx,DWORD PTR [ebx]
1001af77:	mov    edx,DWORD PTR [ebp-0x7c]
1001af7a:	jmp    0x1001af31
1001af7c:	call   0x10058931
1001af81:	ret    
1001af82:	push   ebp
1001af83:	mov    ebp,esp
1001af85:	and    esp,0xfffffff8
1001af88:	push   ecx
1001af89:	push   ecx
1001af8a:	push   DWORD PTR [ebp+0x20]
1001af8d:	push   DWORD PTR [ebp+0x1c]
1001af90:	push   DWORD PTR [ebp+0x18]
1001af93:	push   DWORD PTR [ebp+0x14]
1001af96:	push   DWORD PTR [ebp+0x10]
1001af99:	push   DWORD PTR [ebp+0xc]
1001af9c:	push   DWORD PTR [esp+0x1c]
1001afa0:	push   DWORD PTR [ebp+0x8]
1001afa3:	call   0x1001b007
1001afa8:	mov    esp,ebp
1001afaa:	pop    ebp
1001afab:	ret    0x1c
1001afae:	push   0x0
1001afb0:	mov    eax,0x1005e8cc
1001afb5:	call   0x10058845
1001afba:	mov    esi,DWORD PTR [ebp+0x8]
1001afbd:	push   edi
1001afbe:	mov    ecx,esi
1001afc0:	call   0x100011b0
1001afc5:	and    DWORD PTR [ebp-0x4],0x0
1001afc9:	lea    eax,[edi+0x1c]
1001afcc:	push   eax
1001afcd:	lea    ecx,[esi+0x1c]
1001afd0:	call   0x100011b0
1001afd5:	lea    eax,[edi+0x38]
1001afd8:	push   eax
1001afd9:	lea    ecx,[esi+0x38]
1001afdc:	mov    BYTE PTR [ebp-0x4],0x1
1001afe0:	call   0x100011b0
1001afe5:	mov    eax,DWORD PTR [edi+0x54]
1001afe8:	mov    DWORD PTR [esi+0x54],eax
1001afeb:	mov    eax,DWORD PTR [edi+0x58]
1001afee:	mov    DWORD PTR [esi+0x58],eax
1001aff1:	mov    eax,DWORD PTR [edi+0x5c]
1001aff4:	mov    DWORD PTR [esi+0x5c],eax
1001aff7:	mov    eax,DWORD PTR [edi+0x60]
1001affa:	mov    DWORD PTR [esi+0x60],eax
1001affd:	mov    eax,esi
1001afff:	call   0x1005891d
1001b004:	ret    0x4
1001b007:	push   0x14
1001b009:	mov    eax,0x1005fa0d
1001b00e:	call   0x10058878
1001b013:	mov    edi,DWORD PTR [ebp+0x18]
1001b016:	mov    esi,DWORD PTR [ebp+0x1c]
1001b019:	and    DWORD PTR [ebp-0x4],0x0
1001b01d:	mov    DWORD PTR [ebp-0x18],edi
1001b020:	mov    DWORD PTR [ebp-0x14],esi
1001b023:	test   edi,edi
1001b025:	je     0x1001b02c
1001b027:	cmp    edi,DWORD PTR [ebp+0x20]
1001b02a:	je     0x1001b031
1001b02c:	call   0x100422b0
1001b031:	cmp    esi,DWORD PTR [ebp+0x24]
1001b034:	je     0x1001b0c8
1001b03a:	test   edi,edi
1001b03c:	jne    0x1001b043
1001b03e:	call   0x100422b0
1001b043:	cmp    esi,DWORD PTR [edi+0x4]
1001b046:	jne    0x1001b04d
1001b048:	call   0x100422b0
1001b04d:	push   DWORD PTR [ebp+0x14]
1001b050:	mov    edi,DWORD PTR [ebp+0x8]
1001b053:	push   DWORD PTR [ebp+0x10]
1001b056:	add    esi,0x8
1001b059:	push   esi
1001b05a:	call   0x1001ada5
1001b05f:	lea    esi,[ebp+0x18]
1001b062:	call   0x1002634d
1001b067:	mov    esi,DWORD PTR [ebp+0x1c]
1001b06a:	mov    edi,DWORD PTR [ebp+0x18]
1001b06d:	jmp    0x1001b023
1001b06f:	mov    edi,DWORD PTR [ebp+0x14]
1001b072:	mov    eax,DWORD PTR [ebp-0x18]
1001b075:	test   eax,eax
1001b077:	je     0x1001b07e
1001b079:	cmp    eax,DWORD PTR [ebp+0x18]
1001b07c:	je     0x1001b083
1001b07e:	call   0x100422b0
1001b083:	mov    eax,DWORD PTR [ebp-0x14]
1001b086:	cmp    eax,DWORD PTR [ebp+0x1c]
1001b089:	je     0x1001b0bf
1001b08b:	mov    ebx,DWORD PTR [ebp+0x10]
1001b08e:	test   ebx,ebx
1001b090:	mov    DWORD PTR [ebp+0x24],edi
1001b093:	jne    0x1001b09a
1001b095:	call   0x100422b0
1001b09a:	mov    esi,DWORD PTR [edi+0x4]
1001b09d:	cmp    esi,DWORD PTR [ebx+0x4]
1001b0a0:	jne    0x1001b0a7
1001b0a2:	call   0x100422b0
1001b0a7:	push   esi
1001b0a8:	push   ebx
1001b0a9:	mov    ebx,DWORD PTR [ebp+0x8]
1001b0ac:	lea    eax,[ebp-0x20]
1001b0af:	push   eax
1001b0b0:	call   0x1001aca3
1001b0b5:	lea    esi,[ebp-0x18]
1001b0b8:	call   0x1002634d
1001b0bd:	jmp    0x1001b072
1001b0bf:	push   0x0
1001b0c1:	push   0x0
1001b0c3:	call   0x10046704
1001b0c8:	call   0x1005891d
1001b0cd:	ret    0x20
1001b0d0:	push   0xffffffff
1001b0d2:	push   0x0
1001b0d4:	push   edi
1001b0d5:	mov    ecx,esi
1001b0d7:	call   0x1000124a
1001b0dc:	push   0xffffffff
1001b0de:	push   0x0
1001b0e0:	lea    eax,[edi+0x1c]
1001b0e3:	push   eax
1001b0e4:	lea    ecx,[esi+0x1c]
1001b0e7:	call   0x1000124a
1001b0ec:	push   0xffffffff
1001b0ee:	push   0x0
1001b0f0:	lea    eax,[edi+0x38]
1001b0f3:	push   eax
1001b0f4:	lea    ecx,[esi+0x38]
1001b0f7:	call   0x1000124a
1001b0fc:	mov    eax,DWORD PTR [edi+0x54]
1001b0ff:	mov    DWORD PTR [esi+0x54],eax
1001b102:	mov    eax,DWORD PTR [edi+0x58]
1001b105:	mov    DWORD PTR [esi+0x58],eax
1001b108:	mov    eax,DWORD PTR [edi+0x5c]
1001b10b:	mov    DWORD PTR [esi+0x5c],eax
1001b10e:	mov    eax,DWORD PTR [edi+0x60]
1001b111:	mov    DWORD PTR [esi+0x60],eax
1001b114:	mov    eax,esi
1001b116:	ret    
1001b117:	mov    eax,DWORD PTR [esp+0x4]
1001b11b:	test   eax,eax
1001b11d:	je     0x1001b131
1001b11f:	sub    eax,0x8
1001b122:	cmp    DWORD PTR [eax],0xdddd
1001b128:	jne    0x1001b131
1001b12a:	push   eax
1001b12b:	call   0x10042408
1001b130:	pop    ecx
1001b131:	ret    
1001b132:	cmp    DWORD PTR [esp+0x4],0x0
1001b137:	jne    0x1001b141
1001b139:	and    DWORD PTR [esi],0x0
1001b13c:	mov    eax,esi
1001b13e:	ret    0x4
1001b141:	push   DWORD PTR [esp+0x4]
1001b145:	call   DWORD PTR ds:0x100652b0
1001b14b:	test   eax,eax
1001b14d:	mov    DWORD PTR [esi],eax
1001b14f:	jne    0x1001b13c
1001b151:	push   0x8007000e
1001b156:	call   0x10001f41
1001b15b:	int3   
1001b15c:	push   ebp
1001b15d:	mov    ebp,esp
1001b15f:	sub    esp,0x84
1001b165:	mov    eax,ds:0x1007d030
1001b16a:	xor    eax,ebp
1001b16c:	mov    DWORD PTR [ebp-0x4],eax
1001b16f:	mov    eax,DWORD PTR [ebp+0x8]
1001b172:	push   0x40
1001b174:	lea    ecx,[ebp-0x84]
1001b17a:	push   ecx
1001b17b:	push   eax
1001b17c:	call   DWORD PTR ds:0x10065414
1001b182:	lea    eax,[ebp-0x84]
1001b188:	push   eax
1001b189:	call   DWORD PTR ds:0x100652b0
1001b18f:	test   eax,eax
1001b191:	mov    DWORD PTR [esi],eax
1001b193:	jne    0x1001b19f
1001b195:	push   0x8007000e
1001b19a:	call   0x10001f41
1001b19f:	mov    ecx,DWORD PTR [ebp-0x4]
1001b1a2:	xor    ecx,ebp
1001b1a4:	mov    eax,esi
1001b1a6:	call   0x10041d97
1001b1ab:	leave  
1001b1ac:	ret    0x4
1001b1af:	push   ebp
1001b1b0:	mov    ebp,esp
1001b1b2:	push   ecx
1001b1b3:	push   ecx
1001b1b4:	test   esi,esi
1001b1b6:	je     0x1001b1f2
1001b1b8:	test   eax,eax
1001b1ba:	je     0x1001b1f2
1001b1bc:	mov    DWORD PTR [esi],eax
1001b1be:	call   DWORD PTR ds:0x10065160
1001b1c4:	mov    DWORD PTR [esi+0x4],eax
1001b1c7:	mov    eax,0x1007fa20
1001b1cc:	push   eax
1001b1cd:	mov    DWORD PTR [ebp-0x8],eax
1001b1d0:	call   DWORD PTR ds:0x100650f0
1001b1d6:	mov    eax,ds:0x1007fa38
1001b1db:	mov    DWORD PTR [esi+0x8],eax
1001b1de:	lea    ecx,[ebp-0x8]
1001b1e1:	mov    BYTE PTR [ebp-0x4],0x1
1001b1e5:	mov    DWORD PTR ds:0x1007fa38,esi
1001b1eb:	call   0x10010991
1001b1f0:	leave  
1001b1f1:	ret    
1001b1f2:	push   0x0
1001b1f4:	push   0x0
1001b1f6:	push   0x1
1001b1f8:	push   0xc0000005
1001b1fd:	call   DWORD PTR ds:0x10065128
1001b203:	int3   
1001b204:	push   esi
1001b205:	mov    esi,eax
1001b207:	test   esi,esi
1001b209:	push   edi
1001b20a:	je     0x1001b23a
1001b20c:	mov    edi,DWORD PTR ds:0x10065350
1001b212:	cmp    WORD PTR [esi],0x0
1001b216:	je     0x1001b23a
1001b218:	mov    eax,0x1006f018
1001b21d:	movzx  ecx,WORD PTR [eax]
1001b220:	test   cx,cx
1001b223:	je     0x1001b231
1001b225:	cmp    WORD PTR [esi],cx
1001b228:	je     0x1001b23f
1001b22a:	push   eax
1001b22b:	call   edi
1001b22d:	test   eax,eax
1001b22f:	jne    0x1001b21d
1001b231:	push   esi
1001b232:	call   edi
1001b234:	mov    esi,eax
1001b236:	test   esi,esi
1001b238:	jne    0x1001b212
1001b23a:	xor    eax,eax
1001b23c:	pop    edi
1001b23d:	pop    esi
1001b23e:	ret    
1001b23f:	push   esi
1001b240:	call   edi
1001b242:	jmp    0x1001b23c
1001b244:	push   ebp
1001b245:	mov    ebp,esp
1001b247:	push   ecx
1001b248:	push   ecx
1001b249:	test   eax,eax
1001b24b:	jne    0x1001b254
1001b24d:	mov    eax,0x80070057
1001b252:	jmp    0x1001b2b5
1001b254:	mov    ecx,DWORD PTR [eax]
1001b256:	and    DWORD PTR [ebp-0x8],0x0
1001b25a:	and    DWORD PTR [ebp-0x4],0x0
1001b25e:	push   esi
1001b25f:	lea    edx,[ebp-0x8]
1001b262:	push   edx
1001b263:	push   0x1006ee98
1001b268:	push   eax
1001b269:	call   DWORD PTR [ecx]
1001b26b:	mov    esi,eax
1001b26d:	test   esi,esi
1001b26f:	jl     0x1001b298
1001b271:	mov    eax,DWORD PTR [ebp-0x8]
1001b274:	mov    ecx,DWORD PTR [eax]
1001b276:	lea    edx,[ebp-0x4]
1001b279:	push   edx
1001b27a:	push   DWORD PTR [ebp+0xc]
1001b27d:	push   eax
1001b27e:	call   DWORD PTR [ecx+0x10]
1001b281:	mov    esi,eax
1001b283:	test   esi,esi
1001b285:	jl     0x1001b298
1001b287:	push   DWORD PTR [ebp+0x10]
1001b28a:	mov    eax,DWORD PTR [ebp-0x4]
1001b28d:	push   DWORD PTR [ebp+0x8]
1001b290:	mov    ecx,DWORD PTR [eax]
1001b292:	push   eax
1001b293:	call   DWORD PTR [ecx+0x14]
1001b296:	mov    esi,eax
1001b298:	mov    eax,DWORD PTR [ebp-0x4]
1001b29b:	test   eax,eax
1001b29d:	je     0x1001b2a5
1001b29f:	mov    ecx,DWORD PTR [eax]
1001b2a1:	push   eax
1001b2a2:	call   DWORD PTR [ecx+0x8]
1001b2a5:	mov    eax,DWORD PTR [ebp-0x8]
1001b2a8:	test   eax,eax
1001b2aa:	je     0x1001b2b2
1001b2ac:	mov    ecx,DWORD PTR [eax]
1001b2ae:	push   eax
1001b2af:	call   DWORD PTR [ecx+0x8]
1001b2b2:	mov    eax,esi
1001b2b4:	pop    esi
1001b2b5:	leave  
1001b2b6:	ret    0xc
1001b2b9:	push   ebp
1001b2ba:	mov    ebp,esp
1001b2bc:	push   ecx
1001b2bd:	push   ecx
1001b2be:	test   eax,eax
1001b2c0:	jne    0x1001b2c9
1001b2c2:	mov    eax,0x80070057
1001b2c7:	jmp    0x1001b327
1001b2c9:	mov    ecx,DWORD PTR [eax]
1001b2cb:	and    DWORD PTR [ebp-0x8],0x0
1001b2cf:	and    DWORD PTR [ebp-0x4],0x0
1001b2d3:	push   esi
1001b2d4:	lea    edx,[ebp-0x8]
1001b2d7:	push   edx
1001b2d8:	push   0x1006ee98
1001b2dd:	push   eax
1001b2de:	call   DWORD PTR [ecx]
1001b2e0:	mov    esi,eax
1001b2e2:	test   esi,esi
1001b2e4:	jl     0x1001b30a
1001b2e6:	mov    eax,DWORD PTR [ebp-0x8]
1001b2e9:	mov    ecx,DWORD PTR [eax]
1001b2eb:	lea    edx,[ebp-0x4]
1001b2ee:	push   edx
1001b2ef:	push   DWORD PTR [ebp+0x8]
1001b2f2:	push   eax
1001b2f3:	call   DWORD PTR [ecx+0x10]
1001b2f6:	mov    esi,eax
1001b2f8:	test   esi,esi
1001b2fa:	jl     0x1001b30a
1001b2fc:	mov    eax,DWORD PTR [ebp-0x4]
1001b2ff:	push   DWORD PTR [ebp+0xc]
1001b302:	mov    ecx,DWORD PTR [eax]
1001b304:	push   eax
1001b305:	call   DWORD PTR [ecx+0x18]
1001b308:	mov    esi,eax
1001b30a:	mov    eax,DWORD PTR [ebp-0x4]
1001b30d:	test   eax,eax
1001b30f:	je     0x1001b317
1001b311:	mov    ecx,DWORD PTR [eax]
1001b313:	push   eax
1001b314:	call   DWORD PTR [ecx+0x8]
1001b317:	mov    eax,DWORD PTR [ebp-0x8]
1001b31a:	test   eax,eax
1001b31c:	je     0x1001b324
1001b31e:	mov    ecx,DWORD PTR [eax]
1001b320:	push   eax
1001b321:	call   DWORD PTR [ecx+0x8]
1001b324:	mov    eax,esi
1001b326:	pop    esi
1001b327:	leave  
1001b328:	ret    0x8
1001b32b:	push   ebp
1001b32c:	mov    ebp,esp
1001b32e:	push   edi
1001b32f:	xor    edi,edi
1001b331:	xor    eax,eax
1001b333:	cmp    DWORD PTR ds:0x1007e95c,edi
1001b339:	je     0x1001b343
1001b33b:	cmp    DWORD PTR ds:0x1007e964,edi
1001b341:	jne    0x1001b34b
1001b343:	push   DWORD PTR [ebp+0xc]
1001b346:	call   0x1001b588
1001b34b:	cmp    DWORD PTR ds:0x1007e95c,edi
1001b351:	je     0x1001b3bb
1001b353:	cmp    DWORD PTR ds:0x1007e964,edi
1001b359:	push   esi
1001b35a:	je     0x1001b3a8
1001b35c:	cmp    DWORD PTR [ebp+0x8],0x1
1001b360:	jne    0x1001b3a8
1001b362:	push   DWORD PTR [ebx]
1001b364:	call   DWORD PTR ds:0x100650e0
1001b36a:	mov    esi,DWORD PTR ds:0x1007e968
1001b370:	dec    esi
1001b371:	cmp    esi,edi
1001b373:	mov    DWORD PTR [ebp+0xc],eax
1001b376:	jl     0x1001b3a8
1001b378:	mov    edi,esi
1001b37a:	imul   edi,edi,0xc
1001b37d:	mov    eax,ds:0x1007e964
1001b382:	add    eax,edi
1001b384:	mov    ecx,DWORD PTR [eax+0x4]
1001b387:	cmp    DWORD PTR [ebp+0xc],ecx
1001b38a:	jne    0x1001b3a0
1001b38c:	mov    eax,DWORD PTR [eax]
1001b38e:	add    ecx,ecx
1001b390:	push   ecx
1001b391:	push   DWORD PTR [ebx]
1001b393:	push   eax
1001b394:	call   0x1004260e
1001b399:	add    esp,0xc
1001b39c:	test   eax,eax
1001b39e:	je     0x1001b3c0
1001b3a0:	dec    esi
1001b3a1:	sub    edi,0xc
1001b3a4:	test   esi,esi
1001b3a6:	jge    0x1001b37d
1001b3a8:	push   DWORD PTR [ebp+0x10]
1001b3ab:	mov    eax,ds:0x1007e95c
1001b3b0:	push   DWORD PTR [ebp+0x8]
1001b3b3:	mov    ecx,DWORD PTR [eax]
1001b3b5:	push   ebx
1001b3b6:	push   eax
1001b3b7:	call   DWORD PTR [ecx+0x28]
1001b3ba:	pop    esi
1001b3bb:	pop    edi
1001b3bc:	pop    ebp
1001b3bd:	ret    0xc
1001b3c0:	mov    eax,ds:0x1007e964
1001b3c5:	imul   esi,esi,0xc
1001b3c8:	mov    eax,DWORD PTR [esi+eax*1+0x8]
1001b3cc:	mov    ecx,DWORD PTR [ebp+0x10]
1001b3cf:	mov    DWORD PTR [ecx],eax
1001b3d1:	xor    eax,eax
1001b3d3:	jmp    0x1001b3ba
1001b3d5:	push   0x18
1001b3d7:	mov    eax,0x1005e5c4
1001b3dc:	call   0x10058878
1001b3e1:	mov    ebx,DWORD PTR [ebp+0x8]
1001b3e4:	mov    eax,DWORD PTR [ebx]
1001b3e6:	lea    ecx,[ebp-0x24]
1001b3e9:	push   ecx
1001b3ea:	push   ebx
1001b3eb:	call   DWORD PTR [eax+0xc]
1001b3ee:	xor    ecx,ecx
1001b3f0:	cmp    eax,ecx
1001b3f2:	jl     0x1001b53a
1001b3f8:	mov    eax,DWORD PTR [ebp-0x24]
1001b3fb:	movzx  eax,WORD PTR [eax+0x2c]
1001b3ff:	cmp    eax,ecx
1001b401:	mov    DWORD PTR [ebp-0x1c],ecx
1001b404:	mov    ds:0x1007e968,eax
1001b409:	mov    DWORD PTR ds:0x1007e964,ecx
1001b40f:	je     0x1001b48c
1001b411:	mov    edi,eax
1001b413:	push   0xc
1001b415:	pop    edx
1001b416:	mul    edx
1001b418:	mov    DWORD PTR [ebp-0x4],ecx
1001b41b:	seto   cl
1001b41e:	neg    ecx
1001b420:	or     ecx,eax
1001b422:	xor    eax,eax
1001b424:	add    ecx,0x4
1001b427:	setb   al
1001b42a:	neg    eax
1001b42c:	or     eax,ecx
1001b42e:	push   eax
1001b42f:	call   0x10042609
1001b434:	pop    ecx
1001b435:	mov    DWORD PTR [ebp-0x20],eax
1001b438:	test   eax,eax
1001b43a:	mov    BYTE PTR [ebp-0x4],0x1
1001b43e:	je     0x1001b45a
1001b440:	push   0x1000617e
1001b445:	push   0x1001018a
1001b44a:	push   edi
1001b44b:	lea    esi,[eax+0x4]
1001b44e:	push   0xc
1001b450:	push   esi
1001b451:	mov    DWORD PTR [eax],edi
1001b453:	call   0x10044b48
1001b458:	jmp    0x1001b45c
1001b45a:	xor    esi,esi
1001b45c:	or     DWORD PTR [ebp-0x4],0xffffffff
1001b460:	mov    DWORD PTR [ebp-0x1c],esi
1001b463:	jmp    0x1001b46e
1001b465:	mov    eax,0x1001b46b
1001b46a:	ret    
1001b46b:	mov    ebx,DWORD PTR [ebp+0x8]
1001b46e:	cmp    DWORD PTR [ebp-0x1c],0x0
1001b472:	jne    0x1001b487
1001b474:	push   DWORD PTR [ebp-0x24]
1001b477:	mov    eax,DWORD PTR [ebx]
1001b479:	push   ebx
1001b47a:	call   DWORD PTR [eax+0x4c]
1001b47d:	mov    eax,0x8007000e
1001b482:	jmp    0x1001b53c
1001b487:	mov    eax,ds:0x1007e968
1001b48c:	and    DWORD PTR [ebp-0x18],0x0
1001b490:	test   eax,eax
1001b492:	jle    0x1001b529
1001b498:	mov    esi,DWORD PTR [ebp-0x1c]
1001b49b:	mov    ebx,DWORD PTR ds:0x100652b4
1001b4a1:	mov    edi,DWORD PTR [ebp+0x8]
1001b4a4:	mov    eax,DWORD PTR [edi]
1001b4a6:	lea    ecx,[ebp-0x20]
1001b4a9:	push   ecx
1001b4aa:	push   DWORD PTR [ebp-0x18]
1001b4ad:	push   edi
1001b4ae:	call   DWORD PTR [eax+0x14]
1001b4b1:	test   eax,eax
1001b4b3:	jl     0x1001b511
1001b4b5:	xor    eax,eax
1001b4b7:	mov    DWORD PTR [ebp-0x14],eax
1001b4ba:	push   eax
1001b4bb:	push   eax
1001b4bc:	push   eax
1001b4bd:	mov    DWORD PTR [ebp-0x4],0x3
1001b4c4:	mov    ecx,DWORD PTR [edi]
1001b4c6:	lea    eax,[ebp-0x14]
1001b4c9:	push   eax
1001b4ca:	mov    eax,DWORD PTR [ebp-0x20]
1001b4cd:	push   DWORD PTR [eax]
1001b4cf:	push   edi
1001b4d0:	call   DWORD PTR [ecx+0x30]
1001b4d3:	test   eax,eax
1001b4d5:	jl     0x1001b4ff
1001b4d7:	mov    edi,DWORD PTR [ebp-0x14]
1001b4da:	mov    eax,DWORD PTR [esi]
1001b4dc:	and    DWORD PTR [ebp-0x14],0x0
1001b4e0:	cmp    eax,edi
1001b4e2:	je     0x1001b4e9
1001b4e4:	push   eax
1001b4e5:	call   ebx
1001b4e7:	mov    DWORD PTR [esi],edi
1001b4e9:	push   DWORD PTR [esi]
1001b4eb:	call   DWORD PTR ds:0x100652ac
1001b4f1:	mov    edi,DWORD PTR [ebp+0x8]
1001b4f4:	mov    DWORD PTR [esi+0x4],eax
1001b4f7:	mov    eax,DWORD PTR [ebp-0x20]
1001b4fa:	mov    eax,DWORD PTR [eax]
1001b4fc:	mov    DWORD PTR [esi+0x8],eax
1001b4ff:	push   DWORD PTR [ebp-0x20]
1001b502:	mov    eax,DWORD PTR [edi]
1001b504:	push   edi
1001b505:	call   DWORD PTR [eax+0x50]
1001b508:	or     DWORD PTR [ebp-0x4],0xffffffff
1001b50c:	push   DWORD PTR [ebp-0x14]
1001b50f:	call   ebx
1001b511:	inc    DWORD PTR [ebp-0x18]
1001b514:	mov    eax,DWORD PTR [ebp-0x18]
1001b517:	add    esi,0xc
1001b51a:	cmp    eax,DWORD PTR ds:0x1007e968
1001b520:	jl     0x1001b4a1
1001b526:	mov    ebx,DWORD PTR [ebp+0x8]
1001b529:	mov    eax,DWORD PTR [ebp-0x1c]
1001b52c:	push   DWORD PTR [ebp-0x24]
1001b52f:	mov    ds:0x1007e964,eax
1001b534:	mov    eax,DWORD PTR [ebx]
1001b536:	push   ebx
1001b537:	call   DWORD PTR [eax+0x4c]
1001b53a:	xor    eax,eax
1001b53c:	call   0x1005891d
1001b541:	ret    0x4
1001b544:	push   esi
1001b545:	mov    esi,DWORD PTR [esp+0x8]
1001b549:	test   esi,esi
1001b54b:	je     0x1001b584
1001b54d:	mov    eax,DWORD PTR [esi+0xc]
1001b550:	test   eax,eax
1001b552:	je     0x1001b55a
1001b554:	mov    ecx,DWORD PTR [eax]
1001b556:	push   eax
1001b557:	call   DWORD PTR [ecx+0x8]
1001b55a:	mov    eax,DWORD PTR [esi+0x14]
1001b55d:	and    DWORD PTR [esi+0xc],0x0
1001b561:	test   eax,eax
1001b563:	je     0x1001b580
1001b565:	push   edi
1001b566:	push   0x1000617e
1001b56b:	lea    edi,[eax-0x4]
1001b56e:	push   DWORD PTR [edi]
1001b570:	push   0xc
1001b572:	push   eax
1001b573:	call   0x10041ff9
1001b578:	push   edi
1001b579:	call   0x100422c0
1001b57e:	pop    ecx
1001b57f:	pop    edi
1001b580:	and    DWORD PTR [esi+0x14],0x0
1001b584:	pop    esi
1001b585:	ret    0x4
1001b588:	push   ebp
1001b589:	sub    esp,0x208
1001b58f:	lea    ebp,[esp-0x4]
1001b593:	mov    eax,ds:0x1007d030
1001b598:	xor    eax,ebp
1001b59a:	mov    DWORD PTR [ebp+0x208],eax
1001b5a0:	push   0x18
1001b5a2:	mov    eax,0x1005e891
1001b5a7:	call   0x10058845
1001b5ac:	xor    ebx,ebx
1001b5ae:	cmp    DWORD PTR ds:0x1007e95c,ebx
1001b5b4:	je     0x1001b5c5
1001b5b6:	cmp    DWORD PTR ds:0x1007e964,ebx
1001b5bc:	je     0x1001b5c5
1001b5be:	xor    eax,eax
1001b5c0:	jmp    0x1001b763
1001b5c5:	mov    eax,ds:0x1007fbe4
1001b5ca:	add    eax,0x10
1001b5cd:	mov    DWORD PTR [ebp-0x24],eax
1001b5d0:	push   eax
1001b5d1:	mov    DWORD PTR [ebp-0x4],ebx
1001b5d4:	call   DWORD PTR ds:0x100650f0
1001b5da:	cmp    DWORD PTR ds:0x1007e95c,ebx
1001b5e0:	mov    BYTE PTR [ebp-0x20],0x1
1001b5e4:	mov    edi,0x80004005
1001b5e9:	jne    0x1001b73e
1001b5ef:	mov    esi,DWORD PTR ds:0x1007e954
1001b5f5:	mov    eax,esi
1001b5f7:	mov    ecx,0x1007fbe8
1001b5fc:	mov    DWORD PTR [ebp-0x14],ebx
1001b5ff:	call   0x10010002
1001b604:	mov    cx,WORD PTR ds:0x1007e958
1001b60b:	test   eax,eax
1001b60d:	mov    ax,ds:0x1007e95a
1001b613:	je     0x1001b65d
1001b615:	cmp    cx,0xffff
1001b61a:	jne    0x1001b65d
1001b61c:	cmp    ax,cx
1001b61f:	jne    0x1001b65d
1001b621:	mov    esi,0x104
1001b626:	push   esi
1001b627:	lea    eax,[ebp+0x0]
1001b62a:	push   eax
1001b62b:	push   DWORD PTR ds:0x1007f9e4
1001b631:	call   DWORD PTR ds:0x10065124
1001b637:	cmp    eax,ebx
1001b639:	je     0x1001b740
1001b63f:	cmp    eax,esi
1001b641:	je     0x1001b740
1001b647:	call   DWORD PTR ds:0x1007dfe4
1001b64d:	lea    eax,[ebp-0x14]
1001b650:	push   eax
1001b651:	lea    eax,[ebp+0x0]
1001b654:	push   eax
1001b655:	call   DWORD PTR ds:0x10065290
1001b65b:	jmp    0x1001b670
1001b65d:	lea    edx,[ebp-0x14]
1001b660:	push   edx
1001b661:	push   DWORD PTR [ebp+0x214]
1001b667:	push   eax
1001b668:	push   ecx
1001b669:	push   esi
1001b66a:	call   DWORD PTR ds:0x10065284
1001b670:	mov    edi,eax
1001b672:	cmp    edi,ebx
1001b674:	jl     0x1001b740
1001b67a:	mov    DWORD PTR [ebp-0x10],ebx
1001b67d:	lea    edx,[ebp-0x10]
1001b680:	mov    BYTE PTR [ebp-0x4],0x1
1001b684:	mov    eax,DWORD PTR [ebp-0x14]
1001b687:	mov    ecx,DWORD PTR [eax]
1001b689:	push   edx
1001b68a:	push   DWORD PTR ds:0x1007e950
1001b690:	push   eax
1001b691:	call   DWORD PTR [ecx+0x18]
1001b694:	mov    edi,eax
1001b696:	cmp    edi,ebx
1001b698:	jl     0x1001b723
1001b69e:	mov    eax,DWORD PTR [ebp-0x10]
1001b6a1:	cmp    eax,ebx
1001b6a3:	mov    DWORD PTR [ebp-0x18],eax
1001b6a6:	je     0x1001b6b1
1001b6a8:	mov    ecx,DWORD PTR [eax]
1001b6aa:	push   eax
1001b6ab:	call   DWORD PTR [ecx+0x4]
1001b6ae:	mov    eax,DWORD PTR [ebp-0x10]
1001b6b1:	mov    DWORD PTR [ebp-0x1c],ebx
1001b6b4:	lea    edx,[ebp-0x1c]
1001b6b7:	push   edx
1001b6b8:	push   0x1006c9c4
1001b6bd:	mov    BYTE PTR [ebp-0x4],0x3
1001b6c1:	mov    ecx,DWORD PTR [eax]
1001b6c3:	push   eax
1001b6c4:	call   DWORD PTR [ecx]
1001b6c6:	test   eax,eax
1001b6c8:	jl     0x1001b6d6
1001b6ca:	lea    eax,[ebp-0x18]
1001b6cd:	push   eax
1001b6ce:	lea    eax,[ebp-0x1c]
1001b6d1:	call   0x100109a8
1001b6d6:	mov    eax,DWORD PTR [ebp-0x18]
1001b6d9:	mov    ds:0x1007e95c,eax
1001b6de:	mov    eax,ds:0x1007fbe4
1001b6e3:	mov    ecx,eax
1001b6e5:	add    eax,0x4
1001b6e8:	neg    ecx
1001b6ea:	push   0x1007e950
1001b6ef:	sbb    ecx,ecx
1001b6f1:	push   0x1001b544
1001b6f6:	and    ecx,eax
1001b6f8:	push   ecx
1001b6f9:	mov    DWORD PTR [ebp-0x18],ebx
1001b6fc:	call   0x1001010c
1001b701:	mov    BYTE PTR [ebp-0x4],0x2
1001b705:	mov    eax,DWORD PTR [ebp-0x1c]
1001b708:	cmp    eax,ebx
1001b70a:	je     0x1001b712
1001b70c:	mov    ecx,DWORD PTR [eax]
1001b70e:	push   eax
1001b70f:	call   DWORD PTR [ecx+0x8]
1001b712:	mov    BYTE PTR [ebp-0x4],0x1
1001b716:	mov    eax,DWORD PTR [ebp-0x18]
1001b719:	cmp    eax,ebx
1001b71b:	je     0x1001b723
1001b71d:	mov    ecx,DWORD PTR [eax]
1001b71f:	push   eax
1001b720:	call   DWORD PTR [ecx+0x8]
1001b723:	mov    eax,DWORD PTR [ebp-0x14]
1001b726:	mov    ecx,DWORD PTR [eax]
1001b728:	push   eax
1001b729:	call   DWORD PTR [ecx+0x8]
1001b72c:	mov    BYTE PTR [ebp-0x4],bl
1001b72f:	mov    eax,DWORD PTR [ebp-0x10]
1001b732:	cmp    eax,ebx
1001b734:	je     0x1001b740
1001b736:	mov    ecx,DWORD PTR [eax]
1001b738:	push   eax
1001b739:	call   DWORD PTR [ecx+0x8]
1001b73c:	jmp    0x1001b740
1001b73e:	xor    edi,edi
1001b740:	mov    eax,ds:0x1007e95c
1001b745:	cmp    eax,ebx
1001b747:	je     0x1001b759
1001b749:	cmp    DWORD PTR ds:0x1007e964,ebx
1001b74f:	jne    0x1001b759
1001b751:	push   eax
1001b752:	call   0x1001b3d5
1001b757:	mov    edi,eax
1001b759:	lea    ecx,[ebp-0x24]
1001b75c:	call   0x10010991
1001b761:	mov    eax,edi
1001b763:	mov    ecx,DWORD PTR [ebp-0xc]
1001b766:	mov    DWORD PTR fs:0x0,ecx
1001b76d:	pop    ecx
1001b76e:	pop    edi
1001b76f:	pop    esi
1001b770:	pop    ebx
1001b771:	mov    ecx,DWORD PTR [ebp+0x208]
1001b777:	xor    ecx,ebp
1001b779:	call   0x10041d97
1001b77e:	add    ebp,0x20c
1001b784:	leave  
1001b785:	ret    0x4
1001b788:	push   ebp
1001b789:	sub    esp,0x3e8
1001b78f:	lea    ebp,[esp-0x4]
1001b793:	mov    eax,ds:0x1007d030
1001b798:	xor    eax,ebp
1001b79a:	mov    DWORD PTR [ebp+0x3e8],eax
1001b7a0:	push   0x18
1001b7a2:	mov    eax,0x1005e849
1001b7a7:	call   0x10058845
1001b7ac:	mov    eax,DWORD PTR [ebp+0x3f4]
1001b7b2:	xor    ebx,ebx
1001b7b4:	mov    esi,ecx
1001b7b6:	cmp    esi,ebx
1001b7b8:	mov    DWORD PTR [ebp-0x20],eax
1001b7bb:	mov    DWORD PTR [eax],ebx
1001b7bd:	je     0x1001b8f4
1001b7c3:	mov    eax,DWORD PTR [esi]
1001b7c5:	lea    ecx,[ebp-0x14]
1001b7c8:	push   ecx
1001b7c9:	push   0x2
1001b7cb:	lea    ecx,[ebp-0x1c]
1001b7ce:	push   ecx
1001b7cf:	push   esi
1001b7d0:	call   DWORD PTR [eax+0xc]
1001b7d3:	cmp    eax,ebx
1001b7d5:	jl     0x1001b8f6
1001b7db:	mov    eax,DWORD PTR [esi]
1001b7dd:	lea    ecx,[ebp-0x14]
1001b7e0:	push   ecx
1001b7e1:	push   0x4
1001b7e3:	lea    ecx,[ebp-0x24]
1001b7e6:	push   ecx
1001b7e7:	push   esi
1001b7e8:	call   DWORD PTR [eax+0xc]
1001b7eb:	cmp    eax,ebx
1001b7ed:	jl     0x1001b8f6
1001b7f3:	mov    eax,DWORD PTR [esi]
1001b7f5:	lea    ecx,[ebp-0x14]
1001b7f8:	push   ecx
1001b7f9:	push   0x4
1001b7fb:	lea    ecx,[ebp-0x18]
1001b7fe:	push   ecx
1001b7ff:	push   esi
1001b800:	call   DWORD PTR [eax+0xc]
1001b803:	cmp    eax,ebx
1001b805:	jl     0x1001b8f6
1001b80b:	cmp    DWORD PTR [ebp-0x18],ebx
1001b80e:	jbe    0x1001b894
1001b814:	jne    0x1001b83c
1001b816:	xor    edi,edi
1001b818:	mov    DWORD PTR [ebp-0x10],edi
1001b81b:	push   edi
1001b81c:	mov    DWORD PTR [ebp-0x4],ebx
1001b81f:	call   DWORD PTR ds:0x100652ac
1001b825:	test   eax,eax
1001b827:	jne    0x1001b859
1001b829:	mov    esi,0x8007000e
1001b82e:	push   edi
1001b82f:	call   DWORD PTR ds:0x100652b4
1001b835:	mov    eax,esi
1001b837:	jmp    0x1001b8f6
1001b83c:	push   DWORD PTR [ebp-0x18]
1001b83f:	push   ebx
1001b840:	call   DWORD PTR ds:0x1006529c
1001b846:	mov    edi,eax
1001b848:	cmp    edi,ebx
1001b84a:	mov    DWORD PTR [ebp-0x10],edi
1001b84d:	jne    0x1001b81b
1001b84f:	push   0x8007000e
1001b854:	call   0x10001f41
1001b859:	mov    eax,DWORD PTR [ebp-0x18]
1001b85c:	lea    eax,[eax+eax*1+0x2]
1001b860:	push   eax
1001b861:	push   ebx
1001b862:	push   edi
1001b863:	call   0x10044950
1001b868:	mov    eax,DWORD PTR [esi]
1001b86a:	add    esp,0xc
1001b86d:	lea    ecx,[ebp-0x14]
1001b870:	push   ecx
1001b871:	mov    ecx,DWORD PTR [ebp-0x18]
1001b874:	add    ecx,ecx
1001b876:	push   ecx
1001b877:	push   edi
1001b878:	push   esi
1001b879:	call   DWORD PTR [eax+0xc]
1001b87c:	cmp    eax,ebx
1001b87e:	jge    0x1001b884
1001b880:	mov    esi,eax
1001b882:	jmp    0x1001b82e
1001b884:	mov    eax,DWORD PTR [ebp-0x20]
1001b887:	or     DWORD PTR [ebp-0x4],0xffffffff
1001b88b:	push   ebx
1001b88c:	mov    DWORD PTR [eax],edi
1001b88e:	call   DWORD PTR ds:0x100652b4
1001b894:	mov    ax,WORD PTR [ebp-0x1c]
1001b898:	cmp    ax,0x37a
1001b89c:	je     0x1001b8b4
1001b89e:	cmp    ax,0x37b
1001b8a2:	je     0x1001b8b4
1001b8a4:	sub    ax,0x376
1001b8a8:	neg    ax
1001b8ab:	sbb    eax,eax
1001b8ad:	and    eax,0x80004005
1001b8b2:	jmp    0x1001b8f6
1001b8b4:	mov    eax,DWORD PTR [esi]
1001b8b6:	lea    ecx,[ebp-0x14]
1001b8b9:	push   ecx
1001b8ba:	push   0x4
1001b8bc:	lea    ecx,[ebp-0x10]
1001b8bf:	push   ecx
1001b8c0:	push   esi
1001b8c1:	call   DWORD PTR [eax+0xc]
1001b8c4:	cmp    eax,ebx
1001b8c6:	jl     0x1001b8f6
1001b8c8:	sub    DWORD PTR [ebp-0x10],0x4
1001b8cc:	je     0x1001b8f4
1001b8ce:	mov    edi,0x3e8
1001b8d3:	cmp    DWORD PTR [ebp-0x10],edi
1001b8d6:	mov    eax,DWORD PTR [ebp-0x10]
1001b8d9:	jb     0x1001b8dd
1001b8db:	mov    eax,edi
1001b8dd:	mov    ecx,DWORD PTR [esi]
1001b8df:	lea    edx,[ebp-0x14]
1001b8e2:	push   edx
1001b8e3:	push   eax
1001b8e4:	lea    eax,[ebp+0x0]
1001b8e7:	push   eax
1001b8e8:	push   esi
1001b8e9:	call   DWORD PTR [ecx+0xc]
1001b8ec:	mov    eax,DWORD PTR [ebp-0x14]
1001b8ef:	sub    DWORD PTR [ebp-0x10],eax
1001b8f2:	jne    0x1001b8d3
1001b8f4:	xor    eax,eax
1001b8f6:	mov    ecx,DWORD PTR [ebp-0xc]
1001b8f9:	mov    DWORD PTR fs:0x0,ecx
1001b900:	pop    ecx
1001b901:	pop    edi
1001b902:	pop    esi
1001b903:	pop    ebx
1001b904:	mov    ecx,DWORD PTR [ebp+0x3e8]
1001b90a:	xor    ecx,ebp
1001b90c:	call   0x10041d97
1001b911:	add    ebp,0x3ec
1001b917:	leave  
1001b918:	ret    
1001b919:	push   ebp
1001b91a:	mov    ebp,esp
1001b91c:	sub    esp,0x14
1001b91f:	mov    eax,ds:0x1007d030
1001b924:	xor    eax,ebp
1001b926:	mov    DWORD PTR [ebp-0x4],eax
1001b929:	mov    eax,DWORD PTR [ebp+0x8]
1001b92c:	push   DWORD PTR [eax]
1001b92e:	call   DWORD PTR ds:0x10065364
1001b934:	push   0x8
1001b936:	lea    ecx,[ebp-0x14]
1001b939:	push   ecx
1001b93a:	push   eax
1001b93b:	call   DWORD PTR ds:0x10065354
1001b941:	test   eax,eax
1001b943:	je     0x1001b959
1001b945:	push   0x1006eff8
1001b94a:	lea    eax,[ebp-0x14]
1001b94d:	push   eax
1001b94e:	call   DWORD PTR ds:0x10065150
1001b954:	neg    eax
1001b956:	sbb    eax,eax
1001b958:	inc    eax
1001b959:	mov    ecx,DWORD PTR [ebp-0x4]
1001b95c:	xor    ecx,ebp
1001b95e:	call   0x10041d97
1001b963:	leave  
1001b964:	ret    0x4
1001b967:	cmp    DWORD PTR [edi+0xc],0x0
1001b96b:	push   esi
1001b96c:	mov    esi,eax
1001b96e:	jne    0x1001b97c
1001b970:	call   0x10056005
1001b975:	test   eax,eax
1001b977:	mov    DWORD PTR [edi+0xc],eax
1001b97a:	je     0x1001b9ab
1001b97c:	mov    eax,DWORD PTR [edi+0xc]
1001b97f:	mov    ecx,DWORD PTR [esp+0x8]
1001b983:	sub    esi,eax
1001b985:	push   0xd
1001b987:	sub    esi,0xd
1001b98a:	push   eax
1001b98b:	mov    DWORD PTR [eax],0x42444c7
1001b991:	mov    DWORD PTR [eax+0x4],ecx
1001b994:	mov    BYTE PTR [eax+0x8],0xe9
1001b998:	mov    DWORD PTR [eax+0x9],esi
1001b99b:	call   DWORD PTR ds:0x10065108
1001b9a1:	push   eax
1001b9a2:	call   DWORD PTR ds:0x10065158
1001b9a8:	xor    eax,eax
1001b9aa:	inc    eax
1001b9ab:	pop    esi
1001b9ac:	ret    0x4
1001b9af:	push   ecx
1001b9b0:	push   ecx
1001b9b1:	test   edi,edi
1001b9b3:	jne    0x1001b9bf
1001b9b5:	push   0x80004003
1001b9ba:	call   0x10001f41
1001b9bf:	test   esi,esi
1001b9c1:	je     0x1001b9b5
1001b9c3:	push   ebx
1001b9c4:	push   ebp
1001b9c5:	push   0x0
1001b9c7:	call   DWORD PTR ds:0x10065300
1001b9cd:	mov    ebp,DWORD PTR ds:0x10065048
1001b9d3:	mov    ebx,eax
1001b9d5:	push   0x58
1001b9d7:	push   ebx
1001b9d8:	call   ebp
1001b9da:	push   0x5a
1001b9dc:	push   ebx
1001b9dd:	mov    DWORD PTR [esp+0x10],eax
1001b9e1:	call   ebp
1001b9e3:	push   ebx
1001b9e4:	push   0x0
1001b9e6:	mov    DWORD PTR [esp+0x14],eax
1001b9ea:	call   DWORD PTR ds:0x10065358
1001b9f0:	mov    ebx,DWORD PTR ds:0x1006514c
1001b9f6:	mov    ebp,0x9ec
1001b9fb:	push   ebp
1001b9fc:	push   DWORD PTR [edi]
1001b9fe:	push   DWORD PTR [esp+0x10]
1001ba02:	call   ebx
1001ba04:	push   ebp
1001ba05:	mov    DWORD PTR [esi],eax
1001ba07:	push   DWORD PTR [edi+0x4]
1001ba0a:	push   DWORD PTR [esp+0x14]
1001ba0e:	call   ebx
1001ba10:	pop    ebp
1001ba11:	mov    DWORD PTR [esi+0x4],eax
1001ba14:	pop    ebx
1001ba15:	pop    ecx
1001ba16:	pop    ecx
1001ba17:	ret    
1001ba18:	push   ecx
1001ba19:	push   ecx
1001ba1a:	test   edi,edi
1001ba1c:	jne    0x1001ba28
1001ba1e:	push   0x80004003
1001ba23:	call   0x10001f41
1001ba28:	test   esi,esi
1001ba2a:	je     0x1001ba1e
1001ba2c:	push   ebx
1001ba2d:	push   ebp
1001ba2e:	push   0x0
1001ba30:	call   DWORD PTR ds:0x10065300
1001ba36:	mov    ebp,DWORD PTR ds:0x10065048
1001ba3c:	mov    ebx,eax
1001ba3e:	push   0x58
1001ba40:	push   ebx
1001ba41:	call   ebp
1001ba43:	push   0x5a
1001ba45:	push   ebx
1001ba46:	mov    DWORD PTR [esp+0x10],eax
1001ba4a:	call   ebp
1001ba4c:	push   ebx
1001ba4d:	push   0x0
1001ba4f:	mov    DWORD PTR [esp+0x14],eax
1001ba53:	call   DWORD PTR ds:0x10065358
1001ba59:	push   DWORD PTR [esp+0x8]
1001ba5d:	mov    ebx,DWORD PTR ds:0x1006514c
1001ba63:	push   DWORD PTR [edi]
1001ba65:	mov    ebp,0x9ec
1001ba6a:	push   ebp
1001ba6b:	call   ebx
1001ba6d:	push   DWORD PTR [esp+0xc]
1001ba71:	mov    DWORD PTR [esi],eax
1001ba73:	push   DWORD PTR [edi+0x4]
1001ba76:	push   ebp
1001ba77:	call   ebx
1001ba79:	pop    ebp
1001ba7a:	mov    DWORD PTR [esi+0x4],eax
1001ba7d:	pop    ebx
1001ba7e:	pop    ecx
1001ba7f:	pop    ecx
1001ba80:	ret    
1001ba81:	push   0x20
1001ba83:	mov    eax,0x1005e470
1001ba88:	call   0x100588ae
1001ba8d:	test   ebx,ebx
1001ba8f:	mov    eax,DWORD PTR [ebp+0x8]
1001ba92:	mov    esi,ecx
1001ba94:	mov    DWORD PTR [ebp-0x2c],eax
1001ba97:	jne    0x1001baa3
1001ba99:	mov    eax,0x80004003
1001ba9e:	jmp    0x1001bc0b
1001baa3:	and    DWORD PTR [ebx],0x0
1001baa6:	test   esi,esi
1001baa8:	mov    DWORD PTR [ebp-0x24],0x80004005
1001baaf:	mov    BYTE PTR [edi],0x0
1001bab2:	je     0x1001bc09
1001bab8:	movzx  eax,WORD PTR [esi]
1001babb:	test   ax,ax
1001babe:	je     0x1001bc09
1001bac4:	cmp    ax,0x4d
1001bac8:	je     0x1001bad0
1001baca:	cmp    ax,0x6d
1001bace:	jne    0x1001bb44
1001bad0:	movzx  eax,WORD PTR [esi+0x2]
1001bad4:	cmp    ax,0x53
1001bad8:	je     0x1001bae0
1001bada:	cmp    ax,0x73
1001bade:	jne    0x1001bb44
1001bae0:	movzx  eax,WORD PTR [esi+0x4]
1001bae4:	cmp    ax,0x48
1001bae8:	je     0x1001baf0
1001baea:	cmp    ax,0x68
1001baee:	jne    0x1001bb44
1001baf0:	movzx  eax,WORD PTR [esi+0x6]
1001baf4:	cmp    ax,0x54
1001baf8:	je     0x1001bb00
1001bafa:	cmp    ax,0x74
1001bafe:	jne    0x1001bb44
1001bb00:	movzx  eax,WORD PTR [esi+0x8]
1001bb04:	cmp    ax,0x4d
1001bb08:	je     0x1001bb10
1001bb0a:	cmp    ax,0x6d
1001bb0e:	jne    0x1001bb44
1001bb10:	movzx  eax,WORD PTR [esi+0xa]
1001bb14:	cmp    ax,0x4c
1001bb18:	je     0x1001bb20
1001bb1a:	cmp    ax,0x6c
1001bb1e:	jne    0x1001bb44
1001bb20:	cmp    WORD PTR [esi+0xc],0x3a
1001bb25:	jne    0x1001bb44
1001bb27:	push   ebx
1001bb28:	push   0x1006c9b4
1001bb2d:	push   0x1
1001bb2f:	push   0x0
1001bb31:	push   0x1006f608
1001bb36:	call   DWORD PTR ds:0x10065438
1001bb3c:	mov    BYTE PTR [edi],0x1
1001bb3f:	jmp    0x1001bc01
1001bb44:	mov    eax,esi
1001bb46:	call   0x1001b204
1001bb4b:	test   eax,eax
1001bb4d:	je     0x1001bb60
1001bb4f:	push   ebx
1001bb50:	push   0x1006c9b4
1001bb55:	push   0x1
1001bb57:	push   0x0
1001bb59:	push   0x1006f618
1001bb5e:	jmp    0x1001bb36
1001bb60:	push   esi
1001bb61:	call   DWORD PTR ds:0x100650e0
1001bb67:	cmp    eax,0xff
1001bb6c:	jge    0x1001bc04
1001bb72:	cmp    WORD PTR [esi],0x7b
1001bb76:	lea    eax,[ebp-0x20]
1001bb79:	push   eax
1001bb7a:	push   esi
1001bb7b:	jne    0x1001bb85
1001bb7d:	call   DWORD PTR ds:0x1006543c
1001bb83:	jmp    0x1001bb8b
1001bb85:	call   DWORD PTR ds:0x10065434
1001bb8b:	xor    esi,esi
1001bb8d:	cmp    eax,esi
1001bb8f:	mov    DWORD PTR [ebp-0x24],eax
1001bb92:	jl     0x1001bc04
1001bb94:	push   DWORD PTR [ebp-0x2c]
1001bb97:	call   DWORD PTR ds:0x100652ac
1001bb9d:	test   eax,eax
1001bb9f:	je     0x1001bbee
1001bba1:	mov    DWORD PTR [ebp-0x28],esi
1001bba4:	lea    eax,[ebp-0x28]
1001bba7:	push   eax
1001bba8:	push   0x1006f628
1001bbad:	push   esi
1001bbae:	push   0x1
1001bbb0:	lea    eax,[ebp-0x20]
1001bbb3:	push   eax
1001bbb4:	mov    DWORD PTR [ebp-0x4],esi
1001bbb7:	call   DWORD PTR ds:0x10065408
1001bbbd:	cmp    eax,esi
1001bbbf:	mov    DWORD PTR [ebp-0x24],eax
1001bbc2:	jl     0x1001bbdb
1001bbc4:	mov    eax,DWORD PTR [ebp-0x28]
1001bbc7:	mov    ecx,DWORD PTR [eax]
1001bbc9:	push   ebx
1001bbca:	push   DWORD PTR [ebp-0x2c]
1001bbcd:	push   0x1006c9b4
1001bbd2:	push   esi
1001bbd3:	push   esi
1001bbd4:	push   eax
1001bbd5:	call   DWORD PTR [ecx+0x1c]
1001bbd8:	mov    DWORD PTR [ebp-0x24],eax
1001bbdb:	or     DWORD PTR [ebp-0x4],0xffffffff
1001bbdf:	mov    eax,DWORD PTR [ebp-0x28]
1001bbe2:	cmp    eax,esi
1001bbe4:	je     0x1001bc04
1001bbe6:	mov    ecx,DWORD PTR [eax]
1001bbe8:	push   eax
1001bbe9:	call   DWORD PTR [ecx+0x8]
1001bbec:	jmp    0x1001bc04
1001bbee:	push   ebx
1001bbef:	push   0x1006c9b4
1001bbf4:	push   0x1
1001bbf6:	push   esi
1001bbf7:	lea    eax,[ebp-0x20]
1001bbfa:	push   eax
1001bbfb:	call   DWORD PTR ds:0x10065438
1001bc01:	mov    DWORD PTR [ebp-0x24],eax
1001bc04:	mov    eax,DWORD PTR [ebp-0x24]
1001bc07:	jmp    0x1001bc0b
1001bc09:	xor    eax,eax
1001bc0b:	call   0x10058931
1001bc10:	ret    
1001bc11:	xor    eax,eax
1001bc13:	ret    0x18
1001bc16:	push   ebx
1001bc17:	mov    ebx,DWORD PTR [esp+0xc]
1001bc1b:	xor    ecx,ecx
1001bc1d:	cmp    ebx,ecx
1001bc1f:	push   esi
1001bc20:	push   edi
1001bc21:	jne    0x1001bc2a
1001bc23:	mov    eax,0x80004003
1001bc28:	jmp    0x1001bc4c
1001bc2a:	mov    edi,DWORD PTR [esp+0x10]
1001bc2e:	cmp    DWORD PTR [edi-0x20],ecx
1001bc31:	jne    0x1001bc45
1001bc33:	push   ecx
1001bc34:	mov    eax,esp
1001bc36:	mov    DWORD PTR [eax],ecx
1001bc38:	push   ecx
1001bc39:	mov    eax,esp
1001bc3b:	lea    esi,[edi-0x24]
1001bc3e:	mov    DWORD PTR [eax],ecx
1001bc40:	call   0x1001fbdf
1001bc45:	mov    eax,DWORD PTR [edi-0x20]
1001bc48:	mov    DWORD PTR [ebx],eax
1001bc4a:	xor    eax,eax
1001bc4c:	pop    edi
1001bc4d:	pop    esi
1001bc4e:	pop    ebx
1001bc4f:	ret    0x8
1001bc52:	xor    eax,eax
1001bc54:	ret    0x8
1001bc57:	push   esi
1001bc58:	mov    esi,DWORD PTR [esp+0x8]
1001bc5c:	push   edi
1001bc5d:	mov    edi,DWORD PTR [esp+0x10]
1001bc61:	add    esi,0x8
1001bc64:	cmp    DWORD PTR [esi],edi
1001bc66:	je     0x1001bc6d
1001bc68:	call   0x10007188
1001bc6d:	pop    edi
1001bc6e:	xor    eax,eax
1001bc70:	pop    esi
1001bc71:	ret    0xc
1001bc74:	xor    eax,eax
1001bc76:	ret    0x10
1001bc79:	xor    eax,eax
1001bc7b:	inc    eax
1001bc7c:	ret    0xc
1001bc7f:	push   esi
1001bc80:	push   edi
1001bc81:	mov    edi,DWORD PTR [esp+0xc]
1001bc85:	xor    ecx,ecx
1001bc87:	cmp    DWORD PTR [edi-0x20],ecx
1001bc8a:	jne    0x1001bc9e
1001bc8c:	push   ecx
1001bc8d:	mov    eax,esp
1001bc8f:	mov    DWORD PTR [eax],ecx
1001bc91:	push   ecx
1001bc92:	mov    eax,esp
1001bc94:	lea    esi,[edi-0x24]
1001bc97:	mov    DWORD PTR [eax],ecx
1001bc99:	call   0x1001fc2e
1001bc9e:	mov    eax,DWORD PTR [edi-0x20]
1001bca1:	mov    ecx,DWORD PTR [esp+0x10]
1001bca5:	pop    edi
1001bca6:	mov    DWORD PTR [ecx],eax
1001bca8:	xor    eax,eax
1001bcaa:	pop    esi
1001bcab:	ret    0x8
1001bcae:	mov    eax,0x800401a1
1001bcb3:	ret    0x8
1001bcb6:	mov    eax,ds:0x10065344
1001bcbb:	push   edi
1001bcbc:	xor    edi,edi
1001bcbe:	mov    DWORD PTR [esi+0x50],edi
1001bcc1:	mov    DWORD PTR [esi+0x4],edi
1001bcc4:	mov    DWORD PTR [esi+0x14],edi
1001bcc7:	mov    DWORD PTR [esi+0x20],eax
1001bcca:	mov    DWORD PTR [esi+0x18],edi
1001bccd:	mov    DWORD PTR [esi+0x1c],edi
1001bcd0:	mov    DWORD PTR [esi+0x3c],edi
1001bcd3:	mov    DWORD PTR [esi+0x54],edi
1001bcd6:	mov    DWORD PTR [esi+0x60],edi
1001bcd9:	mov    DWORD PTR [esi+0x64],edi
1001bcdc:	mov    DWORD PTR [esi+0x68],edi
1001bcdf:	mov    DWORD PTR [esi+0x6c],edi
1001bce2:	mov    DWORD PTR [esi+0x70],edi
1001bce5:	mov    DWORD PTR [esi+0x74],edi
1001bce8:	mov    DWORD PTR [esi+0x78],edi
1001bceb:	mov    DWORD PTR [esi+0x7c],edi
1001bcee:	mov    DWORD PTR [esi+0xd8],edi
1001bcf4:	mov    DWORD PTR [esi+0xdc],edi
1001bcfa:	mov    DWORD PTR [esi+0xe8],edi
1001bd00:	mov    eax,DWORD PTR [esi+0xc8]
1001bd06:	and    DWORD PTR [esi+0x98],0xffffffc0
1001bd0d:	and    eax,0xfffffffb
1001bd10:	or     eax,0x3
1001bd13:	push   0x8
1001bd15:	mov    DWORD PTR [esi+0xc8],eax
1001bd1b:	mov    DWORD PTR [esi+0xcc],edi
1001bd21:	call   DWORD PTR ds:0x10065320
1001bd27:	and    DWORD PTR [esi+0x98],0xffffffbf
1001bd2e:	mov    DWORD PTR [esi+0xd0],eax
1001bd34:	mov    eax,DWORD PTR [esi+0xc8]
1001bd3a:	and    eax,0xffffffaf
1001bd3d:	or     eax,0x28
1001bd40:	mov    DWORD PTR [esi+0xe4],edi
1001bd46:	mov    DWORD PTR [esi+0xc8],eax
1001bd4c:	mov    DWORD PTR [esi+0x58],edi
1001bd4f:	mov    DWORD PTR [esi+0xc4],edi
1001bd55:	mov    DWORD PTR [esi+0xd4],0x400
1001bd5f:	mov    DWORD PTR [esi+0x94],0xcdcdcdcd
1001bd69:	mov    DWORD PTR [esi+0xe0],0x4
1001bd73:	mov    BYTE PTR [esi+0x5c],0x1
1001bd77:	mov    eax,esi
1001bd79:	pop    edi
1001bd7a:	ret    
1001bd7b:	push   esi
1001bd7c:	mov    esi,eax
1001bd7e:	push   DWORD PTR [esi+0xe8]
1001bd84:	call   DWORD PTR ds:0x100652b4
1001bd8a:	mov    eax,DWORD PTR [esi+0xdc]
1001bd90:	test   eax,eax
1001bd92:	je     0x1001bd9a
1001bd94:	mov    ecx,DWORD PTR [eax]
1001bd96:	push   eax
1001bd97:	call   DWORD PTR [ecx+0x8]
1001bd9a:	mov    eax,DWORD PTR [esi+0xd8]
1001bda0:	test   eax,eax
1001bda2:	je     0x1001bdaa
1001bda4:	mov    ecx,DWORD PTR [eax]
1001bda6:	push   eax
1001bda7:	call   DWORD PTR [ecx+0x8]
1001bdaa:	mov    eax,DWORD PTR [esi+0x7c]
1001bdad:	test   eax,eax
1001bdaf:	je     0x1001bdb7
1001bdb1:	mov    ecx,DWORD PTR [eax]
1001bdb3:	push   eax
1001bdb4:	call   DWORD PTR [ecx+0x8]
1001bdb7:	mov    eax,DWORD PTR [esi+0x78]
1001bdba:	test   eax,eax
1001bdbc:	je     0x1001bdc4
1001bdbe:	mov    ecx,DWORD PTR [eax]
1001bdc0:	push   eax
1001bdc1:	call   DWORD PTR [ecx+0x8]
1001bdc4:	mov    eax,DWORD PTR [esi+0x74]
1001bdc7:	test   eax,eax
1001bdc9:	je     0x1001bdd1
1001bdcb:	mov    ecx,DWORD PTR [eax]
1001bdcd:	push   eax
1001bdce:	call   DWORD PTR [ecx+0x8]
1001bdd1:	mov    eax,DWORD PTR [esi+0x70]
1001bdd4:	test   eax,eax
1001bdd6:	je     0x1001bdde
1001bdd8:	mov    ecx,DWORD PTR [eax]
1001bdda:	push   eax
1001bddb:	call   DWORD PTR [ecx+0x8]
1001bdde:	mov    eax,DWORD PTR [esi+0x6c]
1001bde1:	test   eax,eax
1001bde3:	je     0x1001bdeb
1001bde5:	mov    ecx,DWORD PTR [eax]
1001bde7:	push   eax
1001bde8:	call   DWORD PTR [ecx+0x8]
1001bdeb:	mov    eax,DWORD PTR [esi+0x68]
1001bdee:	test   eax,eax
1001bdf0:	je     0x1001bdf8
1001bdf2:	mov    ecx,DWORD PTR [eax]
1001bdf4:	push   eax
1001bdf5:	call   DWORD PTR [ecx+0x8]
1001bdf8:	mov    eax,DWORD PTR [esi+0x64]
1001bdfb:	test   eax,eax
1001bdfd:	je     0x1001be05
1001bdff:	mov    ecx,DWORD PTR [eax]
1001be01:	push   eax
1001be02:	call   DWORD PTR [ecx+0x8]
1001be05:	mov    eax,DWORD PTR [esi+0x60]
1001be08:	test   eax,eax
1001be0a:	je     0x1001be12
1001be0c:	mov    ecx,DWORD PTR [eax]
1001be0e:	push   eax
1001be0f:	call   DWORD PTR [ecx+0x8]
1001be12:	mov    eax,DWORD PTR [esi+0x54]
1001be15:	test   eax,eax
1001be17:	je     0x1001be1f
1001be19:	mov    ecx,DWORD PTR [eax]
1001be1b:	push   eax
1001be1c:	call   DWORD PTR [ecx+0x8]
1001be1f:	mov    eax,DWORD PTR [esi+0x3c]
1001be22:	test   eax,eax
1001be24:	je     0x1001be2c
1001be26:	mov    ecx,DWORD PTR [eax]
1001be28:	push   eax
1001be29:	call   DWORD PTR [ecx+0x8]
1001be2c:	mov    esi,DWORD PTR [esi+0x14]
1001be2f:	test   esi,esi
1001be31:	je     0x1001be39
1001be33:	push   esi
1001be34:	call   0x10055f58
1001be39:	pop    esi
1001be3a:	ret    
1001be3b:	mov    eax,DWORD PTR [ecx]
1001be3d:	call   DWORD PTR [eax+0x10]
1001be40:	mov    ecx,DWORD PTR [eax]
1001be42:	push   eax
1001be43:	call   DWORD PTR [ecx+0x8]
1001be46:	ret    0x4
1001be49:	push   ebp
1001be4a:	mov    ebp,esp
1001be4c:	and    esp,0xfffffff8
1001be4f:	sub    esp,0xc
1001be52:	push   ebx
1001be53:	push   esi
1001be54:	push   edi
1001be55:	mov    edi,ecx
1001be57:	xor    ecx,ecx
1001be59:	cmp    DWORD PTR [ebp+0x1c],ecx
1001be5c:	jne    0x1001c26e
1001be62:	mov    eax,DWORD PTR [ebp+0xc]
1001be65:	cmp    eax,0x14
1001be68:	jne    0x1001be8a
1001be6a:	xor    esi,esi
1001be6c:	inc    esi
1001be6d:	cmp    DWORD PTR [edi+0x70],ecx
1001be70:	mov    eax,esi
1001be72:	jne    0x1001be76
1001be74:	xor    eax,eax
1001be76:	cmp    eax,ecx
1001be78:	mov    ebx,DWORD PTR [ebp+0x18]
1001be7b:	mov    DWORD PTR [ebx],esi
1001be7d:	je     0x1001bf08
1001be83:	mov    eax,esi
1001be85:	jmp    0x1001c270
1001be8a:	cmp    eax,0xf
1001be8d:	jne    0x1001bebb
1001be8f:	lea    eax,[esp+0xc]
1001be93:	push   eax
1001be94:	mov    esi,edi
1001be96:	mov    DWORD PTR [esp+0x10],0x1
1001be9e:	call   0x1001c685
1001bea3:	cmp    DWORD PTR [esp+0xc],0x0
1001bea8:	mov    ecx,DWORD PTR [ebp+0x18]
1001beab:	mov    DWORD PTR [ecx],eax
1001bead:	je     0x1001c04f
1001beb3:	xor    eax,eax
1001beb5:	inc    eax
1001beb6:	jmp    0x1001c270
1001bebb:	cmp    eax,0x5
1001bebe:	jne    0x1001bed9
1001bec0:	mov    ecx,DWORD PTR [ebp+0x14]
1001bec3:	lea    eax,[esp+0xc]
1001bec7:	push   eax
1001bec8:	mov    ebx,edi
1001beca:	mov    DWORD PTR [esp+0x10],0x1
1001bed2:	call   0x1001c579
1001bed7:	jmp    0x1001bea3
1001bed9:	cmp    eax,0x21
1001bedc:	jne    0x1001bffa
1001bee2:	lea    eax,[esp+0xc]
1001bee6:	push   eax
1001bee7:	mov    ecx,edi
1001bee9:	mov    DWORD PTR [esp+0x10],0x1
1001bef1:	call   0x1001c435
1001bef6:	cmp    DWORD PTR [esp+0xc],0x0
1001befb:	mov    ecx,DWORD PTR [ebp+0x18]
1001befe:	mov    DWORD PTR [ecx],eax
1001bf00:	jne    0x1001beb3
1001bf02:	xor    esi,esi
1001bf04:	mov    ebx,DWORD PTR [ebp+0x18]
1001bf07:	inc    esi
1001bf08:	mov    eax,DWORD PTR [edi+0x98]
1001bf0e:	test   al,0x8
1001bf10:	mov    ecx,DWORD PTR [ebp+0xc]
1001bf13:	je     0x1001bfae
1001bf19:	lea    edx,[ecx-0x200]
1001bf1f:	cmp    edx,0xd
1001bf22:	ja     0x1001bfae
1001bf28:	and    al,0x10
1001bf2a:	neg    al
1001bf2c:	sbb    eax,eax
1001bf2e:	and    eax,0x3
1001bf31:	mov    DWORD PTR [esp+0x14],eax
1001bf35:	jne    0x1001bf73
1001bf37:	mov    eax,DWORD PTR [edi+0x70]
1001bf3a:	test   eax,eax
1001bf3c:	je     0x1001bfae
1001bf3e:	movsx  ecx,WORD PTR [ebp+0x14]
1001bf42:	mov    DWORD PTR [esp+0xc],ecx
1001bf46:	mov    ecx,DWORD PTR [ebp+0x14]
1001bf49:	shr    ecx,0x10
1001bf4c:	movsx  ecx,cx
1001bf4f:	lea    edx,[esp+0x14]
1001bf53:	push   edx
1001bf54:	push   0x0
1001bf56:	mov    DWORD PTR [esp+0x18],ecx
1001bf5a:	push   DWORD PTR [esp+0x18]
1001bf5e:	mov    ecx,DWORD PTR [eax]
1001bf60:	push   DWORD PTR [esp+0x18]
1001bf64:	lea    edx,[edi+0xb4]
1001bf6a:	push   edx
1001bf6b:	push   esi
1001bf6c:	push   eax
1001bf6d:	call   DWORD PTR [ecx+0x30]
1001bf70:	mov    ecx,DWORD PTR [ebp+0xc]
1001bf73:	cmp    DWORD PTR [esp+0x14],0x3
1001bf78:	jne    0x1001bfae
1001bf7a:	mov    eax,0x200
1001bf7f:	cmp    ecx,eax
1001bf81:	jne    0x1001c058
1001bf87:	lea    ecx,[esp+0xc]
1001bf8b:	push   ecx
1001bf8c:	push   DWORD PTR [ebp+0x14]
1001bf8f:	push   DWORD PTR [ebp+0x10]
1001bf92:	push   eax
1001bf93:	mov    ecx,edi
1001bf95:	mov    DWORD PTR [esp+0x1c],esi
1001bf99:	call   0x1001c648
1001bf9e:	cmp    DWORD PTR [esp+0xc],0x0
1001bfa3:	mov    DWORD PTR [ebx],eax
1001bfa5:	jne    0x1001be83
1001bfab:	mov    ecx,DWORD PTR [ebp+0xc]
1001bfae:	mov    eax,DWORD PTR [edi+0x98]
1001bfb4:	mov    edx,eax
1001bfb6:	shr    edx,0x2
1001bfb9:	and    edx,eax
1001bfbb:	test   dl,0x8
1001bfbe:	je     0x1001c1c5
1001bfc4:	mov    eax,0x100
1001bfc9:	cmp    ecx,eax
1001bfcb:	jne    0x1001c0d5
1001bfd1:	lea    ecx,[esp+0xc]
1001bfd5:	push   ecx
1001bfd6:	push   DWORD PTR [ebp+0x14]
1001bfd9:	push   DWORD PTR [ebp+0x10]
1001bfdc:	push   eax
1001bfdd:	mov    ecx,edi
1001bfdf:	mov    DWORD PTR [esp+0x1c],esi
1001bfe3:	call   0x1001c606
1001bfe8:	cmp    DWORD PTR [esp+0xc],0x0
1001bfed:	mov    DWORD PTR [ebx],eax
1001bfef:	je     0x1001c1f5
1001bff5:	jmp    0x1001be83
1001bffa:	cmp    eax,0x7
1001bffd:	jne    0x1001c031
1001bfff:	lea    eax,[edi+0x98]
1001c005:	or     DWORD PTR [eax],0x20
1001c008:	test   BYTE PTR [eax],0x40
1001c00b:	mov    DWORD PTR [esp+0xc],0x1
1001c013:	jne    0x1001c026
1001c015:	lea    eax,[esp+0xc]
1001c019:	push   eax
1001c01a:	mov    esi,edi
1001c01c:	call   0x1001c4cf
1001c021:	jmp    0x1001bef6
1001c026:	mov    DWORD PTR [esp+0xc],ecx
1001c02a:	xor    eax,eax
1001c02c:	jmp    0x1001bef6
1001c031:	xor    esi,esi
1001c033:	cmp    eax,0x8
1001c036:	jne    0x1001bf04
1001c03c:	mov    eax,DWORD PTR [ebp+0x18]
1001c03f:	and    DWORD PTR [edi+0x98],0xffffffdf
1001c046:	mov    DWORD PTR [eax],ecx
1001c048:	mov    ebx,eax
1001c04a:	jmp    0x1001bf07
1001c04f:	mov    ebx,ecx
1001c051:	xor    esi,esi
1001c053:	jmp    0x1001bf07
1001c058:	mov    eax,0x202
1001c05d:	cmp    ecx,eax
1001c05f:	je     0x1001bf87
1001c065:	add    eax,0x3
1001c068:	cmp    ecx,eax
1001c06a:	je     0x1001bf87
1001c070:	mov    eax,0x208
1001c075:	cmp    ecx,eax
1001c077:	je     0x1001bf87
1001c07d:	add    eax,0xfffffff9
1001c080:	cmp    ecx,eax
1001c082:	je     0x1001bf87
1001c088:	mov    eax,0x204
1001c08d:	cmp    ecx,eax
1001c08f:	je     0x1001bf87
1001c095:	add    eax,0x3
1001c098:	cmp    ecx,eax
1001c09a:	je     0x1001bf87
1001c0a0:	mov    eax,0x203
1001c0a5:	cmp    ecx,eax
1001c0a7:	je     0x1001bf87
1001c0ad:	add    eax,0x3
1001c0b0:	cmp    ecx,eax
1001c0b2:	je     0x1001bf87
1001c0b8:	cmp    ecx,0x209
1001c0be:	jne    0x1001bfae
1001c0c4:	lea    eax,[esp+0xc]
1001c0c8:	push   eax
1001c0c9:	push   DWORD PTR [ebp+0x14]
1001c0cc:	push   DWORD PTR [ebp+0x10]
1001c0cf:	push   ecx
1001c0d0:	jmp    0x1001bf93
1001c0d5:	mov    eax,0x101
1001c0da:	cmp    ecx,eax
1001c0dc:	je     0x1001bfd1
1001c0e2:	inc    eax
1001c0e3:	cmp    ecx,eax
1001c0e5:	je     0x1001bfd1
1001c0eb:	mov    eax,0x103
1001c0f0:	cmp    ecx,eax
1001c0f2:	je     0x1001bfd1
1001c0f8:	inc    eax
1001c0f9:	cmp    ecx,eax
1001c0fb:	je     0x1001bfd1
1001c101:	mov    eax,0x105
1001c106:	cmp    ecx,eax
1001c108:	je     0x1001bfd1
1001c10e:	add    eax,0x2
1001c111:	cmp    ecx,eax
1001c113:	je     0x1001bfd1
1001c119:	cmp    ecx,0x53
1001c11c:	jne    0x1001c12f
1001c11e:	lea    eax,[esp+0xc]
1001c122:	push   eax
1001c123:	push   DWORD PTR [ebp+0x14]
1001c126:	push   DWORD PTR [ebp+0x10]
1001c129:	push   ecx
1001c12a:	jmp    0x1001bfdd
1001c12f:	cmp    ecx,0x1f
1001c132:	jne    0x1001c145
1001c134:	lea    eax,[esp+0xc]
1001c138:	push   eax
1001c139:	push   DWORD PTR [ebp+0x14]
1001c13c:	push   DWORD PTR [ebp+0x10]
1001c13f:	push   ecx
1001c140:	jmp    0x1001bfdd
1001c145:	mov    eax,0x286
1001c14a:	cmp    ecx,eax
1001c14c:	jne    0x1001c173
1001c14e:	lea    ecx,[esp+0xc]
1001c152:	push   ecx
1001c153:	push   DWORD PTR [ebp+0x14]
1001c156:	mov    ecx,edi
1001c158:	push   DWORD PTR [ebp+0x10]
1001c15b:	mov    DWORD PTR [esp+0x18],esi
1001c15f:	push   eax
1001c160:	call   0x1001c606
1001c165:	cmp    DWORD PTR [esp+0xc],0x0
1001c16a:	mov    DWORD PTR [ebx],eax
1001c16c:	je     0x1001c19c
1001c16e:	jmp    0x1001be83
1001c173:	cmp    ecx,0x209
1001c179:	jne    0x1001c18c
1001c17b:	lea    eax,[esp+0xc]
1001c17f:	push   eax
1001c180:	push   DWORD PTR [ebp+0x14]
1001c183:	push   DWORD PTR [ebp+0x10]
1001c186:	push   ecx
1001c187:	jmp    0x1001bfdd
1001c18c:	cmp    ecx,0x281
1001c192:	jb     0x1001c1c5
1001c194:	cmp    ecx,0x291
1001c19a:	ja     0x1001c1c5
1001c19c:	lea    eax,[esp+0xc]
1001c1a0:	push   eax
1001c1a1:	push   DWORD PTR [ebp+0x14]
1001c1a4:	mov    ecx,edi
1001c1a6:	push   DWORD PTR [ebp+0x10]
1001c1a9:	mov    DWORD PTR [esp+0x18],esi
1001c1ad:	push   DWORD PTR [ebp+0xc]
1001c1b0:	call   0x1001c606
1001c1b5:	cmp    DWORD PTR [esp+0xc],0x0
1001c1ba:	mov    DWORD PTR [ebx],eax
1001c1bc:	jne    0x1001be83
1001c1c2:	mov    ecx,DWORD PTR [ebp+0xc]
1001c1c5:	cmp    ecx,0x2
1001c1c8:	jne    0x1001c1f5
1001c1ca:	mov    eax,DWORD PTR [edi]
1001c1cc:	mov    ecx,edi
1001c1ce:	call   DWORD PTR [eax+0x10]
1001c1d1:	mov    ecx,DWORD PTR [eax]
1001c1d3:	push   eax
1001c1d4:	call   DWORD PTR [ecx+0x4]
1001c1d7:	push   DWORD PTR [ebp+0x14]
1001c1da:	push   DWORD PTR [ebp+0x10]
1001c1dd:	push   0x2
1001c1df:	push   DWORD PTR [edi+0x4]
1001c1e2:	push   DWORD PTR [edi+0x20]
1001c1e5:	call   DWORD PTR ds:0x10065340
1001c1eb:	mov    ecx,edi
1001c1ed:	call   0x1001c2eb
1001c1f2:	and    DWORD PTR [ebx],0x0
1001c1f5:	test   BYTE PTR [edi+0xc8],0x8
1001c1fc:	je     0x1001c225
1001c1fe:	lea    eax,[esp+0xc]
1001c202:	push   eax
1001c203:	push   DWORD PTR [ebp+0x10]
1001c206:	mov    eax,DWORD PTR [ebp+0xc]
1001c209:	mov    DWORD PTR [esp+0x14],esi
1001c20d:	mov    esi,DWORD PTR [ebp+0x14]
1001c210:	call   0x1001e3c7
1001c215:	cmp    DWORD PTR [esp+0xc],0x0
1001c21a:	mov    DWORD PTR [ebx],eax
1001c21c:	jne    0x1001beb3
1001c222:	xor    esi,esi
1001c224:	inc    esi
1001c225:	mov    eax,DWORD PTR [ebp+0xc]
1001c228:	cmp    eax,DWORD PTR ds:0x1007ffb8
1001c22e:	jne    0x1001c246
1001c230:	mov    eax,DWORD PTR [edi]
1001c232:	mov    ecx,edi
1001c234:	call   DWORD PTR [eax+0x10]
1001c237:	mov    edi,eax
1001c239:	mov    eax,DWORD PTR [edi]
1001c23b:	push   edi
1001c23c:	call   DWORD PTR [eax+0x4]
1001c23f:	mov    DWORD PTR [ebx],edi
1001c241:	jmp    0x1001be83
1001c246:	cmp    eax,DWORD PTR ds:0x1007ffbc
1001c24c:	jne    0x1001c257
1001c24e:	mov    edi,DWORD PTR [edi+0x60]
1001c251:	test   edi,edi
1001c253:	je     0x1001c23f
1001c255:	jmp    0x1001c239
1001c257:	cmp    eax,0x37f
1001c25c:	jne    0x1001c26e
1001c25e:	push   DWORD PTR [ebp+0x14]
1001c261:	push   edi
1001c262:	call   0x1001c279
1001c267:	mov    DWORD PTR [ebx],eax
1001c269:	jmp    0x1001be83
1001c26e:	xor    eax,eax
1001c270:	pop    edi
1001c271:	pop    esi
1001c272:	pop    ebx
1001c273:	mov    esp,ebp
1001c275:	pop    ebp
1001c276:	ret    0x18
1001c279:	push   0x0
1001c27b:	mov    eax,0x1005e407
1001c280:	call   0x10058845
1001c285:	mov    eax,DWORD PTR [ebp+0x8]
1001c288:	mov    eax,DWORD PTR [eax+0x60]
1001c28b:	xor    ecx,ecx
1001c28d:	test   eax,eax
1001c28f:	mov    DWORD PTR [ebp+0x8],ecx
1001c292:	je     0x1001c2a5
1001c294:	mov    ecx,DWORD PTR [eax]
1001c296:	lea    edx,[ebp+0x8]
1001c299:	push   edx
1001c29a:	push   0x1006f638
1001c29f:	push   eax
1001c2a0:	call   DWORD PTR [ecx]
1001c2a2:	mov    ecx,DWORD PTR [ebp+0x8]
1001c2a5:	and    DWORD PTR [ebp-0x4],0x0
1001c2a9:	test   ecx,ecx
1001c2ab:	je     0x1001c2d3
1001c2ad:	push   DWORD PTR [ebp+0xc]
1001c2b0:	mov    eax,DWORD PTR [ecx]
1001c2b2:	push   ecx
1001c2b3:	call   DWORD PTR [eax+0x14]
1001c2b6:	test   eax,eax
1001c2b8:	jne    0x1001c2d0
1001c2ba:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c2be:	mov    eax,DWORD PTR [ebp+0x8]
1001c2c1:	test   eax,eax
1001c2c3:	je     0x1001c2cb
1001c2c5:	mov    ecx,DWORD PTR [eax]
1001c2c7:	push   eax
1001c2c8:	call   DWORD PTR [ecx+0x8]
1001c2cb:	xor    eax,eax
1001c2cd:	inc    eax
1001c2ce:	jmp    0x1001c2e3
1001c2d0:	mov    ecx,DWORD PTR [ebp+0x8]
1001c2d3:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c2d7:	test   ecx,ecx
1001c2d9:	je     0x1001c2e1
1001c2db:	mov    eax,DWORD PTR [ecx]
1001c2dd:	push   ecx
1001c2de:	call   DWORD PTR [eax+0x8]
1001c2e1:	xor    eax,eax
1001c2e3:	call   0x1005891d
1001c2e8:	ret    0x8
1001c2eb:	push   0x4
1001c2ed:	mov    eax,0x1005e44d
1001c2f2:	call   0x10058845
1001c2f7:	mov    esi,ecx
1001c2f9:	mov    eax,DWORD PTR [esi+0x98]
1001c2ff:	test   al,0x40
1001c301:	jne    0x1001c42f
1001c307:	or     eax,0x40
1001c30a:	mov    DWORD PTR [esi+0x98],eax
1001c310:	mov    eax,DWORD PTR [esi+0x70]
1001c313:	xor    edi,edi
1001c315:	cmp    eax,edi
1001c317:	je     0x1001c323
1001c319:	mov    ecx,DWORD PTR [eax]
1001c31b:	push   edi
1001c31c:	push   edi
1001c31d:	push   0x1
1001c31f:	push   eax
1001c320:	call   DWORD PTR [ecx+0x1c]
1001c323:	mov    ecx,DWORD PTR [esi+0x94]
1001c329:	cmp    ecx,0xcdcdcdcd
1001c32f:	je     0x1001c34b
1001c331:	mov    eax,DWORD PTR [esi+0x60]
1001c334:	push   ecx
1001c335:	lea    ecx,[esi+0x80]
1001c33b:	push   ecx
1001c33c:	call   0x1001b2b9
1001c341:	mov    DWORD PTR [esi+0x94],0xcdcdcdcd
1001c34b:	mov    eax,DWORD PTR [esi+0x64]
1001c34e:	cmp    eax,edi
1001c350:	je     0x1001c373
1001c352:	push   DWORD PTR [esi+0x9c]
1001c358:	mov    ecx,DWORD PTR [eax]
1001c35a:	push   eax
1001c35b:	call   DWORD PTR [ecx+0x50]
1001c35e:	mov    eax,DWORD PTR [esi+0x64]
1001c361:	mov    ecx,DWORD PTR [eax]
1001c363:	push   0x1
1001c365:	push   eax
1001c366:	call   DWORD PTR [ecx+0x18]
1001c369:	mov    eax,DWORD PTR [esi+0x64]
1001c36c:	mov    ecx,DWORD PTR [eax]
1001c36e:	push   edi
1001c36f:	push   eax
1001c370:	call   DWORD PTR [ecx+0xc]
1001c373:	mov    eax,DWORD PTR [esi+0x60]
1001c376:	cmp    eax,edi
1001c378:	je     0x1001c3ad
1001c37a:	mov    DWORD PTR [ebp-0x10],edi
1001c37d:	lea    edx,[ebp-0x10]
1001c380:	push   edx
1001c381:	push   0x1006ef38
1001c386:	mov    DWORD PTR [ebp-0x4],edi
1001c389:	mov    ecx,DWORD PTR [eax]
1001c38b:	push   eax
1001c38c:	call   DWORD PTR [ecx]
1001c38e:	mov    eax,DWORD PTR [ebp-0x10]
1001c391:	cmp    eax,edi
1001c393:	je     0x1001c39f
1001c395:	mov    ecx,DWORD PTR [eax]
1001c397:	push   edi
1001c398:	push   eax
1001c399:	call   DWORD PTR [ecx+0xc]
1001c39c:	mov    eax,DWORD PTR [ebp-0x10]
1001c39f:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c3a3:	cmp    eax,edi
1001c3a5:	je     0x1001c3ad
1001c3a7:	mov    ecx,DWORD PTR [eax]
1001c3a9:	push   eax
1001c3aa:	call   DWORD PTR [ecx+0x8]
1001c3ad:	mov    eax,DWORD PTR [esi+0x70]
1001c3b0:	cmp    eax,edi
1001c3b2:	je     0x1001c3bd
1001c3b4:	mov    DWORD PTR [esi+0x70],edi
1001c3b7:	mov    ecx,DWORD PTR [eax]
1001c3b9:	push   eax
1001c3ba:	call   DWORD PTR [ecx+0x8]
1001c3bd:	mov    DWORD PTR [esi+0x90],edi
1001c3c3:	mov    eax,DWORD PTR [esi+0x74]
1001c3c6:	cmp    eax,edi
1001c3c8:	je     0x1001c3d3
1001c3ca:	mov    DWORD PTR [esi+0x74],edi
1001c3cd:	mov    ecx,DWORD PTR [eax]
1001c3cf:	push   eax
1001c3d0:	call   DWORD PTR [ecx+0x8]
1001c3d3:	mov    eax,DWORD PTR [esi+0x64]
1001c3d6:	cmp    eax,edi
1001c3d8:	je     0x1001c3e3
1001c3da:	mov    DWORD PTR [esi+0x64],edi
1001c3dd:	mov    ecx,DWORD PTR [eax]
1001c3df:	push   eax
1001c3e0:	call   DWORD PTR [ecx+0x8]
1001c3e3:	mov    eax,DWORD PTR [esi+0x60]
1001c3e6:	cmp    eax,edi
1001c3e8:	je     0x1001c3f3
1001c3ea:	mov    DWORD PTR [esi+0x60],edi
1001c3ed:	mov    ecx,DWORD PTR [eax]
1001c3ef:	push   eax
1001c3f0:	call   DWORD PTR [ecx+0x8]
1001c3f3:	mov    eax,DWORD PTR [esi+0x6c]
1001c3f6:	cmp    eax,edi
1001c3f8:	je     0x1001c403
1001c3fa:	mov    DWORD PTR [esi+0x6c],edi
1001c3fd:	mov    ecx,DWORD PTR [eax]
1001c3ff:	push   eax
1001c400:	call   DWORD PTR [ecx+0x8]
1001c403:	mov    eax,DWORD PTR [esi+0x68]
1001c406:	cmp    eax,edi
1001c408:	je     0x1001c413
1001c40a:	mov    DWORD PTR [esi+0x68],edi
1001c40d:	mov    ecx,DWORD PTR [eax]
1001c40f:	push   eax
1001c410:	call   DWORD PTR [ecx+0x8]
1001c413:	and    DWORD PTR [esi+0x98],0xffffffa4
1001c41a:	add    esi,0xc4
1001c420:	mov    eax,DWORD PTR [esi]
1001c422:	cmp    eax,edi
1001c424:	je     0x1001c42f
1001c426:	push   eax
1001c427:	call   DWORD PTR ds:0x100652f4
1001c42d:	mov    DWORD PTR [esi],edi
1001c42f:	call   0x1005891d
1001c434:	ret    
1001c435:	push   0x0
1001c437:	mov    eax,0x1005e407
1001c43c:	call   0x10058845
1001c441:	mov    esi,ecx
1001c443:	mov    eax,DWORD PTR [ebp+0x8]
1001c446:	xor    edi,edi
1001c448:	test   WORD PTR [esi+0xa0],0x4000
1001c451:	mov    DWORD PTR [eax],edi
1001c453:	je     0x1001c4ae
1001c455:	cmp    DWORD PTR [esi+0x64],edi
1001c458:	je     0x1001c4c5
1001c45a:	test   BYTE PTR [esi+0x98],0x1
1001c461:	jne    0x1001c4c5
1001c463:	mov    DWORD PTR [ebp+0x8],edi
1001c466:	mov    DWORD PTR [ebp-0x4],edi
1001c469:	mov    eax,DWORD PTR [esi]
1001c46b:	call   DWORD PTR [eax+0x10]
1001c46e:	mov    ecx,DWORD PTR [eax]
1001c470:	lea    edx,[ebp+0x8]
1001c473:	push   edx
1001c474:	push   0x1006ef98
1001c479:	push   eax
1001c47a:	call   DWORD PTR [ecx]
1001c47c:	mov    ecx,DWORD PTR [ebp+0x8]
1001c47f:	cmp    ecx,edi
1001c481:	je     0x1001c49e
1001c483:	mov    eax,DWORD PTR [esi+0x64]
1001c486:	mov    edx,DWORD PTR [eax]
1001c488:	lea    ebx,[esi+0xb4]
1001c48e:	push   ebx
1001c48f:	push   DWORD PTR [esi+0x4]
1001c492:	push   edi
1001c493:	push   ecx
1001c494:	push   edi
1001c495:	push   0xfffffffb
1001c497:	push   eax
1001c498:	call   DWORD PTR [edx+0x2c]
1001c49b:	mov    ecx,DWORD PTR [ebp+0x8]
1001c49e:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c4a2:	cmp    ecx,edi
1001c4a4:	je     0x1001c4c5
1001c4a6:	mov    eax,DWORD PTR [ecx]
1001c4a8:	push   ecx
1001c4a9:	call   DWORD PTR [eax+0x8]
1001c4ac:	jmp    0x1001c4c5
1001c4ae:	lea    eax,[esi+0x98]
1001c4b4:	or     DWORD PTR [eax],0x20
1001c4b7:	test   BYTE PTR [eax],0x40
1001c4ba:	jne    0x1001c4c5
1001c4bc:	lea    eax,[ebp+0x8]
1001c4bf:	push   eax
1001c4c0:	call   0x1001c4cf
1001c4c5:	xor    eax,eax
1001c4c7:	call   0x1005891d
1001c4cc:	ret    0x4
1001c4cf:	push   0x4
1001c4d1:	mov    eax,0x1005e44d
1001c4d6:	call   0x10058845
1001c4db:	xor    edi,edi
1001c4dd:	cmp    DWORD PTR [esi+0x64],edi
1001c4e0:	je     0x1001c536
1001c4e2:	test   BYTE PTR [esi+0x98],0x2
1001c4e9:	jne    0x1001c536
1001c4eb:	mov    DWORD PTR [ebp-0x10],edi
1001c4ee:	mov    DWORD PTR [ebp-0x4],edi
1001c4f1:	mov    eax,DWORD PTR [esi]
1001c4f3:	mov    ecx,esi
1001c4f5:	call   DWORD PTR [eax+0x10]
1001c4f8:	mov    ecx,DWORD PTR [eax]
1001c4fa:	lea    edx,[ebp-0x10]
1001c4fd:	push   edx
1001c4fe:	push   0x1006ef98
1001c503:	push   eax
1001c504:	call   DWORD PTR [ecx]
1001c506:	mov    ecx,DWORD PTR [ebp-0x10]
1001c509:	cmp    ecx,edi
1001c50b:	je     0x1001c528
1001c50d:	mov    eax,DWORD PTR [esi+0x64]
1001c510:	mov    edx,DWORD PTR [eax]
1001c512:	lea    ebx,[esi+0xb4]
1001c518:	push   ebx
1001c519:	push   DWORD PTR [esi+0x4]
1001c51c:	push   edi
1001c51d:	push   ecx
1001c51e:	push   edi
1001c51f:	push   0xfffffffc
1001c521:	push   eax
1001c522:	call   DWORD PTR [edx+0x2c]
1001c525:	mov    ecx,DWORD PTR [ebp-0x10]
1001c528:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c52c:	cmp    ecx,edi
1001c52e:	je     0x1001c536
1001c530:	mov    eax,DWORD PTR [ecx]
1001c532:	push   ecx
1001c533:	call   DWORD PTR [eax+0x8]
1001c536:	test   BYTE PTR [esi+0x98],0x8
1001c53d:	je     0x1001c544
1001c53f:	push   DWORD PTR [esi+0x4]
1001c542:	jmp    0x1001c564
1001c544:	call   DWORD PTR ds:0x100652dc
1001c54a:	push   eax
1001c54b:	push   DWORD PTR [esi+0x4]
1001c54e:	call   DWORD PTR ds:0x100652e4
1001c554:	test   eax,eax
1001c556:	jne    0x1001c56a
1001c558:	push   0x5
1001c55a:	push   DWORD PTR [esi+0x4]
1001c55d:	call   DWORD PTR ds:0x10065348
1001c563:	push   eax
1001c564:	call   DWORD PTR ds:0x100652c4
1001c56a:	mov    eax,DWORD PTR [ebp+0x8]
1001c56d:	mov    DWORD PTR [eax],edi
1001c56f:	xor    eax,eax
1001c571:	call   0x1005891d
1001c576:	ret    0x4
1001c579:	mov    edx,DWORD PTR [ebx+0xb4]
1001c57f:	movsx  eax,cx
1001c582:	shr    ecx,0x10
1001c585:	push   esi
1001c586:	mov    esi,DWORD PTR [ebx+0xb8]
1001c58c:	movsx  ecx,cx
1001c58f:	add    ecx,esi
1001c591:	add    eax,edx
1001c593:	push   edi
1001c594:	mov    DWORD PTR [ebx+0xbc],eax
1001c59a:	mov    DWORD PTR [ebx+0xc0],ecx
1001c5a0:	sub    ecx,esi
1001c5a2:	lea    edi,[ebx+0xac]
1001c5a8:	sub    eax,edx
1001c5aa:	lea    esi,[ebx+0xa4]
1001c5b0:	mov    DWORD PTR [edi],eax
1001c5b2:	mov    DWORD PTR [ebx+0xb0],ecx
1001c5b8:	call   0x1001ba18
1001c5bd:	mov    eax,DWORD PTR [ebx+0x64]
1001c5c0:	test   eax,eax
1001c5c2:	je     0x1001c5cd
1001c5c4:	mov    ecx,DWORD PTR [eax]
1001c5c6:	push   esi
1001c5c7:	push   0x1
1001c5c9:	push   eax
1001c5ca:	call   DWORD PTR [ecx+0x44]
1001c5cd:	mov    eax,DWORD PTR [ebx+0x74]
1001c5d0:	test   eax,eax
1001c5d2:	pop    edi
1001c5d3:	pop    esi
1001c5d4:	je     0x1001c5e4
1001c5d6:	mov    edx,DWORD PTR [eax]
1001c5d8:	lea    ecx,[ebx+0xb4]
1001c5de:	push   ecx
1001c5df:	push   ecx
1001c5e0:	push   eax
1001c5e1:	call   DWORD PTR [edx+0x1c]
1001c5e4:	test   BYTE PTR [ebx+0x98],0x8
1001c5eb:	je     0x1001c5fa
1001c5ed:	push   0x1
1001c5ef:	lea    eax,[ebx+0x2c]
1001c5f2:	mov    ecx,DWORD PTR [eax]
1001c5f4:	push   0x0
1001c5f6:	push   eax
1001c5f7:	call   DWORD PTR [ecx+0x64]
1001c5fa:	mov    eax,DWORD PTR [esp+0x4]
1001c5fe:	and    DWORD PTR [eax],0x0
1001c601:	xor    eax,eax
1001c603:	ret    0x4
1001c606:	push   ebp
1001c607:	mov    ebp,esp
1001c609:	push   ecx
1001c60a:	mov    eax,DWORD PTR [ecx+0x98]
1001c610:	and    DWORD PTR [ebp-0x4],0x0
1001c614:	test   al,0x1
1001c616:	je     0x1001c63b
1001c618:	test   al,0x8
1001c61a:	je     0x1001c63b
1001c61c:	mov    eax,DWORD PTR [ecx+0x74]
1001c61f:	test   eax,eax
1001c621:	je     0x1001c63b
1001c623:	mov    ecx,DWORD PTR [eax]
1001c625:	lea    edx,[ebp-0x4]
1001c628:	push   edx
1001c629:	push   DWORD PTR [ebp+0x10]
1001c62c:	push   DWORD PTR [ebp+0xc]
1001c62f:	push   DWORD PTR [ebp+0x8]
1001c632:	push   eax
1001c633:	call   DWORD PTR [ecx+0x24]
1001c636:	cmp    eax,0x1
1001c639:	jne    0x1001c641
1001c63b:	mov    eax,DWORD PTR [ebp+0x14]
1001c63e:	and    DWORD PTR [eax],0x0
1001c641:	mov    eax,DWORD PTR [ebp-0x4]
1001c644:	leave  
1001c645:	ret    0x10
1001c648:	push   ebp
1001c649:	mov    ebp,esp
1001c64b:	push   ecx
1001c64c:	mov    eax,DWORD PTR [ecx+0x98]
1001c652:	and    DWORD PTR [ebp-0x4],0x0
1001c656:	test   al,0x1
1001c658:	je     0x1001c678
1001c65a:	test   al,0x8
1001c65c:	je     0x1001c678
1001c65e:	mov    eax,DWORD PTR [ecx+0x74]
1001c661:	test   eax,eax
1001c663:	je     0x1001c678
1001c665:	mov    ecx,DWORD PTR [eax]
1001c667:	lea    edx,[ebp-0x4]
1001c66a:	push   edx
1001c66b:	push   DWORD PTR [ebp+0x10]
1001c66e:	push   DWORD PTR [ebp+0xc]
1001c671:	push   DWORD PTR [ebp+0x8]
1001c674:	push   eax
1001c675:	call   DWORD PTR [ecx+0x24]
1001c678:	mov    eax,DWORD PTR [ebp+0x14]
1001c67b:	and    DWORD PTR [eax],0x0
1001c67e:	mov    eax,DWORD PTR [ebp-0x4]
1001c681:	leave  
1001c682:	ret    0x10
1001c685:	push   ebp
1001c686:	mov    ebp,esp
1001c688:	sub    esp,0x6c
1001c68b:	mov    eax,ds:0x1007d030
1001c690:	xor    eax,ebp
1001c692:	mov    DWORD PTR [ebp-0x8],eax
1001c695:	mov    eax,DWORD PTR [ebp+0x8]
1001c698:	push   ebx
1001c699:	push   edi
1001c69a:	xor    edi,edi
1001c69c:	cmp    DWORD PTR [esi+0x70],edi
1001c69f:	jne    0x1001c702
1001c6a1:	lea    eax,[ebp-0x4c]
1001c6a4:	push   eax
1001c6a5:	push   DWORD PTR [esi+0x4]
1001c6a8:	call   DWORD PTR ds:0x100652c0
1001c6ae:	cmp    eax,edi
1001c6b0:	mov    DWORD PTR [ebp-0x50],eax
1001c6b3:	je     0x1001c7e7
1001c6b9:	lea    eax,[ebp-0x60]
1001c6bc:	push   eax
1001c6bd:	push   DWORD PTR [esi+0x4]
1001c6c0:	call   DWORD PTR ds:0x100652cc
1001c6c6:	push   DWORD PTR [esi+0xcc]
1001c6cc:	call   DWORD PTR ds:0x10065028
1001c6d2:	mov    ebx,eax
1001c6d4:	cmp    ebx,edi
1001c6d6:	je     0x1001c6ed
1001c6d8:	push   ebx
1001c6d9:	lea    eax,[ebp-0x60]
1001c6dc:	push   eax
1001c6dd:	push   DWORD PTR [ebp-0x50]
1001c6e0:	call   DWORD PTR ds:0x100652e8
1001c6e6:	push   ebx
1001c6e7:	call   DWORD PTR ds:0x1006504c
1001c6ed:	lea    eax,[ebp-0x4c]
1001c6f0:	push   eax
1001c6f1:	push   DWORD PTR [esi+0x4]
1001c6f4:	call   DWORD PTR ds:0x10065304
1001c6fa:	xor    eax,eax
1001c6fc:	inc    eax
1001c6fd:	jmp    0x1001c7e9
1001c702:	test   BYTE PTR [esi+0x98],0x8
1001c709:	je     0x1001c7e5
1001c70f:	lea    eax,[ebp-0x4c]
1001c712:	push   eax
1001c713:	push   DWORD PTR [esi+0x4]
1001c716:	call   DWORD PTR ds:0x100652c0
1001c71c:	mov    ebx,eax
1001c71e:	cmp    ebx,edi
1001c720:	mov    DWORD PTR [ebp-0x64],ebx
1001c723:	je     0x1001c7e7
1001c729:	lea    eax,[ebp-0x60]
1001c72c:	push   eax
1001c72d:	push   DWORD PTR [esi+0x4]
1001c730:	call   DWORD PTR ds:0x100652cc
1001c736:	mov    eax,DWORD PTR [ebp-0x54]
1001c739:	sub    eax,DWORD PTR [ebp-0x5c]
1001c73c:	push   eax
1001c73d:	mov    eax,DWORD PTR [ebp-0x58]
1001c740:	sub    eax,DWORD PTR [ebp-0x60]
1001c743:	push   eax
1001c744:	push   ebx
1001c745:	call   DWORD PTR ds:0x10065034
1001c74b:	cmp    eax,edi
1001c74d:	mov    DWORD PTR [ebp-0x50],eax
1001c750:	je     0x1001c6ed
1001c752:	push   ebx
1001c753:	call   DWORD PTR ds:0x10065038
1001c759:	mov    ebx,eax
1001c75b:	cmp    ebx,edi
1001c75d:	je     0x1001c7dd
1001c75f:	push   DWORD PTR [ebp-0x50]
1001c762:	push   ebx
1001c763:	call   DWORD PTR ds:0x1006503c
1001c769:	cmp    eax,edi
1001c76b:	mov    DWORD PTR [ebp-0x6c],eax
1001c76e:	je     0x1001c7d6
1001c770:	push   DWORD PTR [esi+0xcc]
1001c776:	call   DWORD PTR ds:0x10065028
1001c77c:	cmp    eax,edi
1001c77e:	mov    DWORD PTR [ebp-0x68],eax
1001c781:	je     0x1001c7cc
1001c783:	push   eax
1001c784:	lea    eax,[ebp-0x60]
1001c787:	push   eax
1001c788:	push   ebx
1001c789:	call   DWORD PTR ds:0x100652e8
1001c78f:	push   DWORD PTR [ebp-0x68]
1001c792:	call   DWORD PTR ds:0x1006504c
1001c798:	mov    eax,DWORD PTR [esi+0x70]
1001c79b:	mov    edx,DWORD PTR [eax]
1001c79d:	push   edi
1001c79e:	push   edi
1001c79f:	lea    ecx,[esi+0xb4]
1001c7a5:	push   ecx
1001c7a6:	push   ecx
1001c7a7:	push   ebx
1001c7a8:	push   edi
1001c7a9:	push   edi
1001c7aa:	push   edi
1001c7ab:	push   0xffffffff
1001c7ad:	push   0x1
1001c7af:	push   eax
1001c7b0:	call   DWORD PTR [edx+0xc]
1001c7b3:	push   0xcc0020
1001c7b8:	push   edi
1001c7b9:	push   edi
1001c7ba:	push   ebx
1001c7bb:	push   DWORD PTR [ebp-0x54]
1001c7be:	push   DWORD PTR [ebp-0x58]
1001c7c1:	push   edi
1001c7c2:	push   edi
1001c7c3:	push   DWORD PTR [ebp-0x64]
1001c7c6:	call   DWORD PTR ds:0x10065040
1001c7cc:	push   DWORD PTR [ebp-0x6c]
1001c7cf:	push   ebx
1001c7d0:	call   DWORD PTR ds:0x1006503c
1001c7d6:	push   ebx
1001c7d7:	call   DWORD PTR ds:0x10065044
1001c7dd:	push   DWORD PTR [ebp-0x50]
1001c7e0:	jmp    0x1001c6e7
1001c7e5:	mov    DWORD PTR [eax],edi
1001c7e7:	xor    eax,eax
1001c7e9:	mov    ecx,DWORD PTR [ebp-0x8]
1001c7ec:	pop    edi
1001c7ed:	xor    ecx,ebp
1001c7ef:	pop    ebx
1001c7f0:	call   0x10041d97
1001c7f5:	leave  
1001c7f6:	ret    0x4
1001c7f9:	push   0x4
1001c7fb:	mov    eax,0x1005e44d
1001c800:	call   0x10058845
1001c805:	and    DWORD PTR [ebp-0x10],0x0
1001c809:	mov    eax,DWORD PTR [ebp+0x8]
1001c80c:	and    DWORD PTR [ebp-0x4],0x0
1001c810:	mov    ecx,DWORD PTR [eax]
1001c812:	push   0x0
1001c814:	push   0x0
1001c816:	push   0x1006a668
1001c81b:	lea    edx,[ebp-0x10]
1001c81e:	push   edx
1001c81f:	push   DWORD PTR [ebp+0x14]
1001c822:	push   DWORD PTR [ebp+0x10]
1001c825:	push   DWORD PTR [ebp+0xc]
1001c828:	push   eax
1001c829:	call   DWORD PTR [ecx+0x28]
1001c82c:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c830:	mov    edi,eax
1001c832:	mov    eax,DWORD PTR [ebp-0x10]
1001c835:	test   eax,eax
1001c837:	je     0x1001c83f
1001c839:	mov    ecx,DWORD PTR [eax]
1001c83b:	push   eax
1001c83c:	call   DWORD PTR [ecx+0x8]
1001c83f:	mov    eax,edi
1001c841:	call   0x1005891d
1001c846:	ret    0x10
1001c849:	push   ebp
1001c84a:	mov    ebp,esp
1001c84c:	mov    eax,DWORD PTR [ebp+0x8]
1001c84f:	mov    ecx,DWORD PTR [eax]
1001c851:	push   0x0
1001c853:	push   DWORD PTR [ebp+0x20]
1001c856:	push   DWORD PTR [ebp+0x1c]
1001c859:	push   DWORD PTR [ebp+0x18]
1001c85c:	push   DWORD PTR [ebp+0x14]
1001c85f:	push   DWORD PTR [ebp+0x10]
1001c862:	push   DWORD PTR [ebp+0xc]
1001c865:	push   eax
1001c866:	call   DWORD PTR [ecx+0x28]
1001c869:	pop    ebp
1001c86a:	ret    0x1c
1001c86d:	push   ebx
1001c86e:	push   ebp
1001c86f:	push   esi
1001c870:	push   edi
1001c871:	mov    edi,DWORD PTR [esp+0x14]
1001c875:	lea    esi,[edi-0x24]
1001c878:	xor    ebx,ebx
1001c87a:	mov    ecx,esi
1001c87c:	inc    ebx
1001c87d:	call   0x1001c2eb
1001c882:	mov    eax,DWORD PTR [edi-0x20]
1001c885:	test   eax,eax
1001c887:	mov    ebp,DWORD PTR ds:0x10065318
1001c88d:	mov    BYTE PTR [esp+0x14],0x0
1001c892:	je     0x1001c8ab
1001c894:	cmp    eax,DWORD PTR [esp+0x1c]
1001c898:	je     0x1001c8ab
1001c89a:	push   0x507
1001c89f:	push   0x0
1001c8a1:	push   0x0
1001c8a3:	push   eax
1001c8a4:	call   ebp
1001c8a6:	call   0x1001e37a
1001c8ab:	push   DWORD PTR [esp+0x1c]
1001c8af:	call   DWORD PTR ds:0x10065328
1001c8b5:	test   eax,eax
1001c8b7:	je     0x1001c907
1001c8b9:	mov    ebx,DWORD PTR [esp+0x1c]
1001c8bd:	cmp    DWORD PTR [edi-0x20],ebx
1001c8c0:	je     0x1001c8cc
1001c8c2:	call   0x1001e336
1001c8c7:	mov    BYTE PTR [esp+0x14],0x1
1001c8cc:	push   0x0
1001c8ce:	push   0x1
1001c8d0:	push   DWORD PTR [esp+0x20]
1001c8d4:	mov    ecx,esi
1001c8d6:	call   0x1001df43
1001c8db:	mov    ebx,eax
1001c8dd:	test   ebx,ebx
1001c8df:	jge    0x1001c907
1001c8e1:	mov    ecx,esi
1001c8e3:	call   0x1001c2eb
1001c8e8:	mov    edi,DWORD PTR [edi-0x20]
1001c8eb:	test   edi,edi
1001c8ed:	je     0x1001c907
1001c8ef:	push   0x507
1001c8f4:	push   0x0
1001c8f6:	push   0x0
1001c8f8:	push   edi
1001c8f9:	call   ebp
1001c8fb:	cmp    BYTE PTR [esp+0x14],0x0
1001c900:	je     0x1001c907
1001c902:	call   0x1001e37a
1001c907:	pop    edi
1001c908:	pop    esi
1001c909:	pop    ebp
1001c90a:	mov    eax,ebx
1001c90c:	pop    ebx
1001c90d:	ret    0xc
1001c910:	mov    ecx,DWORD PTR [esp+0xc]
1001c914:	test   ecx,ecx
1001c916:	mov    eax,0x80004003
1001c91b:	je     0x1001c93c
1001c91d:	mov    eax,DWORD PTR [esp+0x4]
1001c921:	mov    eax,DWORD PTR [eax+0x3c]
1001c924:	test   eax,eax
1001c926:	je     0x1001c934
1001c928:	mov    edx,DWORD PTR [eax]
1001c92a:	push   ecx
1001c92b:	push   DWORD PTR [esp+0xc]
1001c92f:	push   eax
1001c930:	call   DWORD PTR [edx]
1001c932:	jmp    0x1001c93c
1001c934:	and    DWORD PTR [ecx],0x0
1001c937:	mov    eax,0x80040004
1001c93c:	ret    0xc
1001c93f:	push   esi
1001c940:	mov    esi,DWORD PTR [esp+0x8]
1001c944:	push   edi
1001c945:	mov    edi,DWORD PTR [esp+0x10]
1001c949:	add    esi,0x54
1001c94c:	cmp    DWORD PTR [esi],edi
1001c94e:	je     0x1001c955
1001c950:	call   0x10007188
1001c955:	pop    edi
1001c956:	xor    eax,eax
1001c958:	pop    esi
1001c959:	ret    0x8
1001c95c:	push   esi
1001c95d:	mov    esi,DWORD PTR [esp+0x8]
1001c961:	push   edi
1001c962:	mov    edi,DWORD PTR [esp+0x10]
1001c966:	add    esi,0x58
1001c969:	cmp    DWORD PTR [esi],edi
1001c96b:	je     0x1001c972
1001c96d:	call   0x10007188
1001c972:	pop    edi
1001c973:	xor    eax,eax
1001c975:	pop    esi
1001c976:	ret    0x8
1001c979:	push   0x4
1001c97b:	mov    eax,0x1005e44d
1001c980:	call   0x10058845
1001c985:	and    DWORD PTR [ebp-0x10],0x0
1001c989:	push   DWORD PTR [ebp+0x18]
1001c98c:	mov    eax,DWORD PTR [ebp+0x8]
1001c98f:	and    DWORD PTR [ebp-0x4],0x0
1001c993:	mov    ecx,DWORD PTR [eax]
1001c995:	push   0x0
1001c997:	push   0x1006a668
1001c99c:	lea    edx,[ebp-0x10]
1001c99f:	push   edx
1001c9a0:	push   DWORD PTR [ebp+0x14]
1001c9a3:	push   DWORD PTR [ebp+0x10]
1001c9a6:	push   DWORD PTR [ebp+0xc]
1001c9a9:	push   eax
1001c9aa:	call   DWORD PTR [ecx+0x28]
1001c9ad:	or     DWORD PTR [ebp-0x4],0xffffffff
1001c9b1:	mov    edi,eax
1001c9b3:	mov    eax,DWORD PTR [ebp-0x10]
1001c9b6:	test   eax,eax
1001c9b8:	je     0x1001c9c0
1001c9ba:	mov    ecx,DWORD PTR [eax]
1001c9bc:	push   eax
1001c9bd:	call   DWORD PTR [ecx+0x8]
1001c9c0:	mov    eax,edi
1001c9c2:	call   0x1005891d
1001c9c7:	ret    0x14
1001c9ca:	push   ebp
1001c9cb:	mov    ebp,esp
1001c9cd:	and    esp,0xfffffff8
1001c9d0:	push   0xffffffff
1001c9d2:	push   0x1005f0be
1001c9d7:	mov    eax,fs:0x0
1001c9dd:	push   eax
1001c9de:	sub    esp,0x40
1001c9e1:	push   ebx
1001c9e2:	push   esi
1001c9e3:	push   edi
1001c9e4:	mov    eax,ds:0x1007d030
1001c9e9:	xor    eax,esp
1001c9eb:	push   eax
1001c9ec:	lea    eax,[esp+0x50]
1001c9f0:	mov    fs:0x0,eax
1001c9f6:	mov    eax,DWORD PTR [ebp+0x18]
1001c9f9:	test   eax,eax
1001c9fb:	jne    0x1001ca07
1001c9fd:	mov    eax,0x80004003
1001ca02:	jmp    0x1001cd11
1001ca07:	mov    edi,DWORD PTR [ebp+0x8]
1001ca0a:	and    DWORD PTR [eax],0x0
1001ca0d:	lea    esi,[edi-0x24]
1001ca10:	mov    ecx,esi
1001ca12:	mov    DWORD PTR [esp+0x14],0x1
1001ca1a:	mov    BYTE PTR [esp+0x13],0x0
1001ca1f:	mov    DWORD PTR [esp+0x28],esi
1001ca23:	call   0x1001c2eb
1001ca28:	lea    ebx,[edi-0x20]
1001ca2b:	mov    eax,DWORD PTR [ebx]
1001ca2d:	test   eax,eax
1001ca2f:	mov    DWORD PTR [esp+0x24],ebx
1001ca33:	je     0x1001ca4f
1001ca35:	cmp    eax,DWORD PTR [ebp+0x10]
1001ca38:	je     0x1001ca4f
1001ca3a:	push   0x507
1001ca3f:	push   0x0
1001ca41:	push   0x0
1001ca43:	push   eax
1001ca44:	call   DWORD PTR ds:0x10065318
1001ca4a:	call   0x1001e37a
1001ca4f:	push   DWORD PTR [ebp+0x10]
1001ca52:	call   DWORD PTR ds:0x10065328
1001ca58:	test   eax,eax
1001ca5a:	je     0x1001cd0d
1001ca60:	mov    eax,DWORD PTR [ebp+0x10]
1001ca63:	cmp    DWORD PTR [ebx],eax
1001ca65:	je     0x1001ca77
1001ca67:	mov    ebx,eax
1001ca69:	call   0x1001e336
1001ca6e:	mov    ebx,DWORD PTR [esp+0x24]
1001ca72:	mov    BYTE PTR [esp+0x13],0x1
1001ca77:	cmp    DWORD PTR [edi+0xa8],0x0
1001ca7e:	jne    0x1001ca9c
1001ca80:	push   ebx
1001ca81:	call   0x1001b919
1001ca86:	test   eax,eax
1001ca88:	je     0x1001ca8e
1001ca8a:	push   0xf
1001ca8c:	jmp    0x1001ca90
1001ca8e:	push   0x5
1001ca90:	call   DWORD PTR ds:0x10065320
1001ca96:	mov    DWORD PTR [edi+0xa8],eax
1001ca9c:	mov    esi,DWORD PTR [ebp+0x18]
1001ca9f:	push   DWORD PTR [ebp+0x24]
1001caa2:	mov    ecx,DWORD PTR [ebp+0xc]
1001caa5:	lea    edi,[esp+0x16]
1001caa9:	mov    ebx,esi
1001caab:	mov    BYTE PTR [esp+0x16],0x0
1001cab0:	call   0x1001ba81
1001cab5:	xor    ebx,ebx
1001cab7:	cmp    eax,ebx
1001cab9:	pop    ecx
1001caba:	mov    DWORD PTR [esp+0x14],eax
1001cabe:	jl     0x1001cad3
1001cac0:	push   DWORD PTR [ebp+0x14]
1001cac3:	mov    ecx,DWORD PTR [esp+0x2c]
1001cac7:	push   ebx
1001cac8:	push   DWORD PTR [esi]
1001caca:	call   0x1001df43
1001cacf:	mov    DWORD PTR [esp+0x14],eax
1001cad3:	cmp    DWORD PTR [esp+0x14],ebx
1001cad7:	mov    edx,DWORD PTR [ebp+0x8]
1001cada:	mov    esi,DWORD PTR [ebp+0x1c]
1001cadd:	lea    ecx,[edx+0x5c]
1001cae0:	mov    edi,ecx
1001cae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001cae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001cae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001cae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001cae6:	jl     0x1001ccd8
1001caec:	mov    esi,DWORD PTR [ebp+0x18]
1001caef:	mov    eax,DWORD PTR [esi]
1001caf1:	cmp    eax,ebx
1001caf3:	je     0x1001cb07
1001caf5:	cmp    DWORD PTR [ebp+0x20],ebx
1001caf8:	je     0x1001cb07
1001cafa:	add    edx,0x70
1001cafd:	push   edx
1001cafe:	push   ecx
1001caff:	push   DWORD PTR [ebp+0x20]
1001cb02:	call   0x1001b244
1001cb07:	cmp    BYTE PTR [esp+0x12],bl
1001cb0b:	je     0x1001ccca
1001cb11:	cmp    DWORD PTR [esi],ebx
1001cb13:	je     0x1001ccca
1001cb19:	mov    edi,DWORD PTR [esp+0x24]
1001cb1d:	mov    esi,DWORD PTR ds:0x10065310
1001cb23:	push   0xfffffff0
1001cb25:	push   DWORD PTR [edi]
1001cb27:	call   esi
1001cb29:	test   eax,0x300000
1001cb2e:	jne    0x1001cb3c
1001cb30:	mov    eax,DWORD PTR [ebp+0x8]
1001cb33:	or     DWORD PTR [eax+0xbc],0x8
1001cb3a:	jmp    0x1001cb61
1001cb3c:	push   0xfffffff0
1001cb3e:	push   DWORD PTR [edi]
1001cb40:	call   esi
1001cb42:	and    eax,0xffcfffff
1001cb47:	push   eax
1001cb48:	push   0xfffffff0
1001cb4a:	push   DWORD PTR [edi]
1001cb4c:	call   DWORD PTR ds:0x100652d8
1001cb52:	push   0x37
1001cb54:	push   ebx
1001cb55:	push   ebx
1001cb56:	push   ebx
1001cb57:	push   ebx
1001cb58:	push   ebx
1001cb59:	push   DWORD PTR [edi]
1001cb5b:	call   DWORD PTR ds:0x10065324
1001cb61:	mov    eax,DWORD PTR [ebp+0x18]
1001cb64:	mov    edi,DWORD PTR [eax]
1001cb66:	cmp    edi,ebx
1001cb68:	mov    DWORD PTR [esp+0x1c],edi
1001cb6c:	je     0x1001cb74
1001cb6e:	mov    eax,DWORD PTR [edi]
1001cb70:	push   edi
1001cb71:	call   DWORD PTR [eax+0x4]
1001cb74:	mov    esi,DWORD PTR [ebp+0xc]
1001cb77:	mov    DWORD PTR [esp+0x58],ebx
1001cb7b:	movzx  eax,WORD PTR [esi]
1001cb7e:	cmp    ax,0x4d
1001cb82:	je     0x1001cb8e
1001cb84:	cmp    ax,0x6d
1001cb88:	jne    0x1001cd30
1001cb8e:	movzx  eax,WORD PTR [esi+0x2]
1001cb92:	cmp    ax,0x53
1001cb96:	je     0x1001cba2
1001cb98:	cmp    ax,0x73
1001cb9c:	jne    0x1001cd30
1001cba2:	movzx  eax,WORD PTR [esi+0x4]
1001cba6:	cmp    ax,0x48
1001cbaa:	je     0x1001cbb6
1001cbac:	cmp    ax,0x68
1001cbb0:	jne    0x1001cd30
1001cbb6:	movzx  eax,WORD PTR [esi+0x6]
1001cbba:	cmp    ax,0x54
1001cbbe:	je     0x1001cbca
1001cbc0:	cmp    ax,0x74
1001cbc4:	jne    0x1001cd30
1001cbca:	movzx  eax,WORD PTR [esi+0x8]
1001cbce:	cmp    ax,0x4d
1001cbd2:	je     0x1001cbde
1001cbd4:	cmp    ax,0x6d
1001cbd8:	jne    0x1001cd30
1001cbde:	movzx  eax,WORD PTR [esi+0xa]
1001cbe2:	cmp    ax,0x4c
1001cbe6:	je     0x1001cbf2
1001cbe8:	cmp    ax,0x6c
1001cbec:	jne    0x1001cd30
1001cbf2:	cmp    WORD PTR [esi+0xc],0x3a
1001cbf7:	jne    0x1001cd30
1001cbfd:	push   esi
1001cbfe:	call   DWORD PTR ds:0x100650e0
1001cc04:	lea    edi,[eax+eax*1-0xe]
1001cc08:	push   edi
1001cc09:	push   0x42
1001cc0b:	call   DWORD PTR ds:0x10065148
1001cc11:	mov    ebx,eax
1001cc13:	test   ebx,ebx
1001cc15:	je     0x1001cd26
1001cc1b:	and    DWORD PTR [esp+0x20],0x0
1001cc20:	push   ebx
1001cc21:	mov    BYTE PTR [esp+0x5c],0x1
1001cc26:	call   DWORD PTR ds:0x10065144
1001cc2c:	push   edi
1001cc2d:	add    esi,0xe
1001cc30:	push   esi
1001cc31:	push   edi
1001cc32:	push   eax
1001cc33:	call   0x10014024
1001cc38:	add    esp,0x10
1001cc3b:	push   ebx
1001cc3c:	call   DWORD PTR ds:0x10065154
1001cc42:	lea    eax,[esp+0x20]
1001cc46:	push   eax
1001cc47:	push   0x1
1001cc49:	push   ebx
1001cc4a:	call   DWORD PTR ds:0x10065418
1001cc50:	test   eax,eax
1001cc52:	mov    DWORD PTR [esp+0x14],eax
1001cc56:	jl     0x1001cca2
1001cc58:	and    DWORD PTR [esp+0x18],0x0
1001cc5d:	lea    edx,[esp+0x18]
1001cc61:	push   edx
1001cc62:	mov    BYTE PTR [esp+0x5c],0x2
1001cc67:	mov    eax,DWORD PTR [esp+0x20]
1001cc6b:	mov    ecx,DWORD PTR [eax]
1001cc6d:	push   0x1006f5f8
1001cc72:	push   eax
1001cc73:	call   DWORD PTR [ecx]
1001cc75:	test   eax,eax
1001cc77:	mov    DWORD PTR [esp+0x14],eax
1001cc7b:	jl     0x1001cc8f
1001cc7d:	mov    eax,DWORD PTR [esp+0x18]
1001cc81:	push   DWORD PTR [esp+0x20]
1001cc85:	mov    ecx,DWORD PTR [eax]
1001cc87:	push   eax
1001cc88:	call   DWORD PTR [ecx+0x14]
1001cc8b:	mov    DWORD PTR [esp+0x14],eax
1001cc8f:	mov    BYTE PTR [esp+0x58],0x1
1001cc94:	mov    eax,DWORD PTR [esp+0x18]
1001cc98:	test   eax,eax
1001cc9a:	je     0x1001cca2
1001cc9c:	mov    ecx,DWORD PTR [eax]
1001cc9e:	push   eax
1001cc9f:	call   DWORD PTR [ecx+0x8]
1001cca2:	mov    BYTE PTR [esp+0x58],0x0
1001cca7:	mov    eax,DWORD PTR [esp+0x20]
1001ccab:	test   eax,eax
1001ccad:	je     0x1001ccb5
1001ccaf:	mov    ecx,DWORD PTR [eax]
1001ccb1:	push   eax
1001ccb2:	call   DWORD PTR [ecx+0x8]
1001ccb5:	mov    edi,DWORD PTR [esp+0x1c]
1001ccb9:	xor    ebx,ebx
1001ccbb:	or     DWORD PTR [esp+0x58],0xffffffff
1001ccc0:	cmp    edi,ebx
1001ccc2:	je     0x1001ccca
1001ccc4:	mov    eax,DWORD PTR [edi]
1001ccc6:	push   edi
1001ccc7:	call   DWORD PTR [eax+0x8]
1001ccca:	cmp    DWORD PTR [esp+0x14],ebx
1001ccce:	jl     0x1001ccd8
1001ccd0:	mov    eax,DWORD PTR [ebp+0x8]
1001ccd3:	cmp    DWORD PTR [eax+0x3c],ebx
1001ccd6:	jne    0x1001cd0d
1001ccd8:	mov    esi,DWORD PTR [esp+0x28]
1001ccdc:	mov    ecx,esi
1001ccde:	call   0x1001c2eb
1001cce3:	mov    eax,DWORD PTR [esp+0x24]
1001cce7:	mov    eax,DWORD PTR [eax]
1001cce9:	cmp    eax,ebx
1001cceb:	je     0x1001cd0d
1001cced:	push   0x507
1001ccf2:	push   ebx
1001ccf3:	push   ebx
1001ccf4:	push   eax
1001ccf5:	call   DWORD PTR ds:0x10065318
1001ccfb:	cmp    DWORD PTR [esp+0x14],ebx
1001ccff:	jge    0x1001cd0d
1001cd01:	cmp    BYTE PTR [esp+0x13],0x0
1001cd06:	je     0x1001cd0d
1001cd08:	call   0x1001e37a
1001cd0d:	mov    eax,DWORD PTR [esp+0x14]
1001cd11:	mov    ecx,DWORD PTR [esp+0x50]
1001cd15:	mov    DWORD PTR fs:0x0,ecx
1001cd1c:	pop    ecx
1001cd1d:	pop    edi
1001cd1e:	pop    esi
1001cd1f:	pop    ebx
1001cd20:	mov    esp,ebp
1001cd22:	pop    ebp
1001cd23:	ret    0x20
1001cd26:	mov    DWORD PTR [esp+0x14],0x8007000e
1001cd2e:	jmp    0x1001ccb5
1001cd30:	mov    DWORD PTR [esp+0x18],ebx
1001cd34:	lea    ecx,[esp+0x18]
1001cd38:	push   ecx
1001cd39:	push   0x1006f648
1001cd3e:	mov    BYTE PTR [esp+0x60],0x3
1001cd43:	mov    eax,DWORD PTR [edi]
1001cd45:	push   edi
1001cd46:	call   DWORD PTR [eax]
1001cd48:	cmp    DWORD PTR [esp+0x18],ebx
1001cd4c:	je     0x1001cde0
1001cd52:	lea    eax,[esp+0x3c]
1001cd56:	push   eax
1001cd57:	call   DWORD PTR ds:0x1006528c
1001cd5d:	mov    BYTE PTR [esp+0x58],0x4
1001cd62:	mov    edi,DWORD PTR ds:0x10065294
1001cd68:	lea    eax,[esp+0x2c]
1001cd6c:	push   eax
1001cd6d:	mov    WORD PTR [esp+0x30],bx
1001cd72:	call   edi
1001cd74:	push   esi
1001cd75:	mov    WORD PTR [esp+0x30],0x8
1001cd7c:	call   DWORD PTR ds:0x100652b0
1001cd82:	cmp    eax,ebx
1001cd84:	mov    DWORD PTR [esp+0x34],eax
1001cd88:	jne    0x1001cda0
1001cd8a:	mov    eax,0x8007000e
1001cd8f:	push   eax
1001cd90:	mov    WORD PTR [esp+0x30],0xa
1001cd97:	mov    DWORD PTR [esp+0x38],eax
1001cd9b:	call   0x10001f41
1001cda0:	mov    BYTE PTR [esp+0x58],0x5
1001cda5:	mov    eax,DWORD PTR [esp+0x18]
1001cda9:	mov    ecx,DWORD PTR [eax]
1001cdab:	push   0xffffffff
1001cdad:	push   eax
1001cdae:	call   DWORD PTR [ecx+0xa4]
1001cdb4:	mov    eax,DWORD PTR [esp+0x18]
1001cdb8:	mov    ecx,DWORD PTR [eax]
1001cdba:	lea    edx,[esp+0x3c]
1001cdbe:	push   edx
1001cdbf:	push   edx
1001cdc0:	push   edx
1001cdc1:	push   edx
1001cdc2:	lea    edx,[esp+0x3c]
1001cdc6:	push   edx
1001cdc7:	push   eax
1001cdc8:	call   DWORD PTR [ecx+0xd0]
1001cdce:	lea    eax,[esp+0x2c]
1001cdd2:	push   eax
1001cdd3:	call   edi
1001cdd5:	lea    eax,[esp+0x3c]
1001cdd9:	push   eax
1001cdda:	call   edi
1001cddc:	mov    edi,DWORD PTR [esp+0x1c]
1001cde0:	mov    BYTE PTR [esp+0x58],0x0
1001cde5:	mov    eax,DWORD PTR [esp+0x18]
1001cde9:	cmp    eax,ebx
1001cdeb:	je     0x1001ccbb
1001cdf1:	mov    ecx,DWORD PTR [eax]
1001cdf3:	push   eax
1001cdf4:	call   DWORD PTR [ecx+0x8]
1001cdf7:	jmp    0x1001ccbb
1001cdfc:	push   ebp
1001cdfd:	mov    ebp,esp
1001cdff:	mov    ecx,DWORD PTR [ebp+0x8]
1001ce02:	mov    eax,DWORD PTR [ecx+0x80]
1001ce08:	mov    ecx,DWORD PTR [ecx+0x34]
1001ce0b:	shr    eax,0x5
1001ce0e:	and    eax,0x1
1001ce11:	test   ecx,ecx
1001ce13:	mov    DWORD PTR [ebp+0x8],eax
1001ce16:	je     0x1001ce36
1001ce18:	mov    edx,DWORD PTR [ecx]
1001ce1a:	lea    eax,[ebp+0x8]
1001ce1d:	push   eax
1001ce1e:	push   DWORD PTR [ebp+0x18]
1001ce21:	mov    eax,DWORD PTR [ebp+0x10]
1001ce24:	push   DWORD PTR [ebp+0x14]
1001ce27:	push   DWORD PTR [eax+0x4]
1001ce2a:	push   DWORD PTR [eax]
1001ce2c:	push   DWORD PTR [ebp+0xc]
1001ce2f:	push   ecx
1001ce30:	call   DWORD PTR [edx+0x1c]
1001ce33:	mov    eax,DWORD PTR [ebp+0x8]
1001ce36:	pop    ebp
1001ce37:	ret    0x14
1001ce3a:	mov    eax,DWORD PTR [esp+0x8]
1001ce3e:	test   eax,eax
1001ce40:	jne    0x1001ce49
1001ce42:	mov    eax,0x80004003
1001ce47:	jmp    0x1001ce7a
1001ce49:	mov    ecx,DWORD PTR [esp+0x4]
1001ce4d:	mov    edx,DWORD PTR [ecx+0x34]
1001ce50:	test   edx,edx
1001ce52:	je     0x1001ce66
1001ce54:	mov    ecx,DWORD PTR [edx]
1001ce56:	push   esi
1001ce57:	lea    esi,[eax+0x8]
1001ce5a:	push   esi
1001ce5b:	add    eax,0x4
1001ce5e:	push   eax
1001ce5f:	push   edx
1001ce60:	call   DWORD PTR [ecx+0x20]
1001ce63:	pop    esi
1001ce64:	jmp    0x1001ce7a
1001ce66:	mov    edx,DWORD PTR [ecx+0x98]
1001ce6c:	mov    DWORD PTR [eax+0x4],edx
1001ce6f:	mov    ecx,DWORD PTR [ecx+0x9c]
1001ce75:	mov    DWORD PTR [eax+0x8],ecx
1001ce78:	xor    eax,eax
1001ce7a:	ret    0x8
1001ce7d:	push   ebp
1001ce7e:	mov    ebp,esp
1001ce80:	mov    ecx,DWORD PTR [ebp+0x8]
1001ce83:	mov    eax,DWORD PTR [ecx+0x80]
1001ce89:	mov    ecx,DWORD PTR [ecx+0x34]
1001ce8c:	shr    eax,0x6
1001ce8f:	and    eax,0x1
1001ce92:	test   ecx,ecx
1001ce94:	mov    DWORD PTR [ebp+0x8],eax
1001ce97:	je     0x1001ceb5
1001ce99:	mov    eax,DWORD PTR [ecx]
1001ce9b:	lea    edx,[ebp+0x8]
1001ce9e:	push   edx
1001ce9f:	push   DWORD PTR [ebp+0x1c]
1001cea2:	push   DWORD PTR [ebp+0x18]
1001cea5:	push   DWORD PTR [ebp+0x14]
1001cea8:	push   DWORD PTR [ebp+0x10]
1001ceab:	push   DWORD PTR [ebp+0xc]
1001ceae:	push   ecx
1001ceaf:	call   DWORD PTR [eax+0x24]
1001ceb2:	mov    eax,DWORD PTR [ebp+0x8]
1001ceb5:	pop    ebp
1001ceb6:	ret    0x18
1001ceb9:	mov    ecx,DWORD PTR [esp+0x4]
1001cebd:	mov    ecx,DWORD PTR [ecx+0x34]
1001cec0:	xor    eax,eax
1001cec2:	test   ecx,ecx
1001cec4:	je     0x1001cecc
1001cec6:	mov    eax,DWORD PTR [ecx]
1001cec8:	push   ecx
1001cec9:	call   DWORD PTR [eax+0x28]
1001cecc:	ret    0x4
1001cecf:	mov    ecx,DWORD PTR [esp+0x4]
1001ced3:	mov    ecx,DWORD PTR [ecx+0x34]
1001ced6:	xor    eax,eax
1001ced8:	test   ecx,ecx
1001ceda:	je     0x1001cee2
1001cedc:	mov    eax,DWORD PTR [ecx]
1001cede:	push   ecx
1001cedf:	call   DWORD PTR [eax+0x2c]
1001cee2:	ret    0x4
1001cee5:	mov    ecx,DWORD PTR [esp+0x4]
1001cee9:	mov    ecx,DWORD PTR [ecx+0x34]
1001ceec:	xor    eax,eax
1001ceee:	test   ecx,ecx
1001cef0:	je     0x1001cf01
1001cef2:	mov    edx,DWORD PTR [esp+0x8]
1001cef6:	mov    eax,DWORD PTR [ecx]
1001cef8:	neg    edx
1001cefa:	sbb    edx,edx
1001cefc:	push   edx
1001cefd:	push   ecx
1001cefe:	call   DWORD PTR [eax+0x30]
1001cf01:	ret    0x8
1001cf04:	mov    ecx,DWORD PTR [esp+0x4]
1001cf08:	mov    ecx,DWORD PTR [ecx+0x34]
1001cf0b:	xor    eax,eax
1001cf0d:	test   ecx,ecx
1001cf0f:	je     0x1001cf20
1001cf11:	mov    edx,DWORD PTR [esp+0x8]
1001cf15:	mov    eax,DWORD PTR [ecx]
1001cf17:	neg    edx
1001cf19:	sbb    edx,edx
1001cf1b:	push   edx
1001cf1c:	push   ecx
1001cf1d:	call   DWORD PTR [eax+0x34]
1001cf20:	ret    0x8
1001cf23:	mov    ecx,DWORD PTR [esp+0x4]
1001cf27:	mov    ecx,DWORD PTR [ecx+0x34]
1001cf2a:	xor    eax,eax
1001cf2c:	test   ecx,ecx
1001cf2e:	je     0x1001cf3f
1001cf30:	mov    edx,DWORD PTR [esp+0x8]
1001cf34:	mov    eax,DWORD PTR [ecx]
1001cf36:	neg    edx
1001cf38:	sbb    edx,edx
1001cf3a:	push   edx
1001cf3b:	push   ecx
1001cf3c:	call   DWORD PTR [eax+0x38]
1001cf3f:	ret    0x8
1001cf42:	mov    ecx,DWORD PTR [esp+0x4]
1001cf46:	mov    ecx,DWORD PTR [ecx+0x34]
1001cf49:	xor    eax,eax
1001cf4b:	test   ecx,ecx
1001cf4d:	je     0x1001cf71
1001cf4f:	mov    eax,DWORD PTR [esp+0x10]
1001cf53:	mov    edx,DWORD PTR [ecx]
1001cf55:	neg    eax
1001cf57:	sbb    eax,eax
1001cf59:	push   eax
1001cf5a:	push   DWORD PTR [esp+0x10]
1001cf5e:	mov    eax,DWORD PTR [esp+0x10]
1001cf62:	push   DWORD PTR [eax+0xc]
1001cf65:	push   DWORD PTR [eax+0x8]
1001cf68:	push   DWORD PTR [eax+0x4]
1001cf6b:	push   DWORD PTR [eax]
1001cf6d:	push   ecx
1001cf6e:	call   DWORD PTR [edx+0x3c]
1001cf71:	ret    0x10
1001cf74:	push   0x4
1001cf76:	mov    eax,0x1005e826
1001cf7b:	call   0x10058845
1001cf80:	mov    eax,DWORD PTR [ebp+0x8]
1001cf83:	mov    edi,DWORD PTR [eax+0x34]
1001cf86:	test   edi,edi
1001cf88:	mov    DWORD PTR [ebp-0x10],0x1
1001cf8f:	je     0x1001cfc6
1001cf91:	push   DWORD PTR [ebp+0x10]
1001cf94:	lea    esi,[ebp+0x8]
1001cf97:	call   0x1001b15c
1001cf9c:	and    DWORD PTR [ebp-0x4],0x0
1001cfa0:	mov    ecx,DWORD PTR [edi]
1001cfa2:	lea    edx,[ebp-0x10]
1001cfa5:	push   edx
1001cfa6:	push   DWORD PTR [ebp+0x14]
1001cfa9:	push   DWORD PTR [eax]
1001cfab:	mov    eax,DWORD PTR [ebp+0xc]
1001cfae:	push   DWORD PTR [eax+0xc]
1001cfb1:	push   DWORD PTR [eax+0x8]
1001cfb4:	push   DWORD PTR [eax+0x4]
1001cfb7:	push   DWORD PTR [eax]
1001cfb9:	push   edi
1001cfba:	call   DWORD PTR [ecx+0x40]
1001cfbd:	push   DWORD PTR [ebp+0x8]
1001cfc0:	call   DWORD PTR ds:0x100652b4
1001cfc6:	mov    eax,DWORD PTR [ebp-0x10]
1001cfc9:	call   0x1005891d
1001cfce:	ret    0x10
1001cfd1:	push   ebp
1001cfd2:	mov    ebp,esp
1001cfd4:	push   ebx
1001cfd5:	xor    ebx,ebx
1001cfd7:	push   edi
1001cfd8:	mov    edi,DWORD PTR [ebp+0xc]
1001cfdb:	inc    ebx
1001cfdc:	test   edi,edi
1001cfde:	jne    0x1001cfea
1001cfe0:	mov    eax,0x80004003
1001cfe5:	jmp    0x1001d06c
1001cfea:	and    DWORD PTR [edi],0x0
1001cfed:	push   esi
1001cfee:	mov    esi,DWORD PTR [ebp+0x8]
1001cff1:	mov    eax,DWORD PTR [esi+0x34]
1001cff4:	test   eax,eax
1001cff6:	je     0x1001d012
1001cff8:	push   DWORD PTR [ebp+0x10]
1001cffb:	mov    ecx,DWORD PTR [eax]
1001cffd:	push   edi
1001cffe:	push   eax
1001cfff:	call   DWORD PTR [ecx+0x44]
1001d002:	mov    ebx,eax
1001d004:	test   ebx,ebx
1001d006:	jl     0x1001d00d
1001d008:	cmp    DWORD PTR [edi],0x0
1001d00b:	jne    0x1001d069
1001d00d:	xor    ebx,ebx
1001d00f:	inc    ebx
1001d010:	jmp    0x1001d069
1001d012:	push   DWORD PTR [esi+0xa0]
1001d018:	call   DWORD PTR ds:0x100652ac
1001d01e:	test   eax,eax
1001d020:	je     0x1001d069
1001d022:	push   DWORD PTR [esi+0xa0]
1001d028:	call   DWORD PTR ds:0x100652a0
1001d02e:	add    eax,0x2
1001d031:	push   eax
1001d032:	mov    DWORD PTR [ebp+0xc],eax
1001d035:	call   DWORD PTR ds:0x10065424
1001d03b:	mov    ebx,eax
1001d03d:	test   ebx,ebx
1001d03f:	jne    0x1001d048
1001d041:	mov    eax,0x8007000e
1001d046:	jmp    0x1001d06b
1001d048:	push   DWORD PTR [esi+0xa0]
1001d04e:	push   DWORD PTR [ebp+0xc]
1001d051:	push   ebx
1001d052:	call   0x10013ff8
1001d057:	add    esp,0xc
1001d05a:	test   al,al
1001d05c:	jne    0x1001d065
1001d05e:	mov    eax,0x80004005
1001d063:	jmp    0x1001d06b
1001d065:	mov    DWORD PTR [edi],ebx
1001d067:	xor    ebx,ebx
1001d069:	mov    eax,ebx
1001d06b:	pop    esi
1001d06c:	pop    edi
1001d06d:	pop    ebx
1001d06e:	pop    ebp
1001d06f:	ret    0xc
1001d072:	push   0x0
1001d074:	mov    eax,0x1005e42a
1001d079:	call   0x10058845
1001d07e:	mov    esi,DWORD PTR [ebp+0x10]
1001d081:	test   esi,esi
1001d083:	jne    0x1001d08c
1001d085:	mov    eax,0x80004003
1001d08a:	jmp    0x1001d0e8
1001d08c:	and    DWORD PTR [esi],0x0
1001d08f:	mov    eax,DWORD PTR [ebp+0x8]
1001d092:	mov    eax,DWORD PTR [eax+0x34]
1001d095:	test   eax,eax
1001d097:	mov    edi,0x80004001
1001d09c:	je     0x1001d0e6
1001d09e:	and    DWORD PTR [ebp+0x10],0x0
1001d0a2:	and    DWORD PTR [ebp-0x4],0x0
1001d0a6:	mov    ecx,DWORD PTR [eax]
1001d0a8:	lea    edx,[ebp+0x10]
1001d0ab:	push   edx
1001d0ac:	push   DWORD PTR [ebp+0xc]
1001d0af:	push   eax
1001d0b0:	call   DWORD PTR [ecx+0x48]
1001d0b3:	mov    edi,eax
1001d0b5:	mov    eax,DWORD PTR [ebp+0x10]
1001d0b8:	test   eax,eax
1001d0ba:	je     0x1001d0cc
1001d0bc:	mov    ecx,DWORD PTR [eax]
1001d0be:	push   esi
1001d0bf:	push   0x1006f658
1001d0c4:	push   eax
1001d0c5:	call   DWORD PTR [ecx]
1001d0c7:	mov    edi,eax
1001d0c9:	mov    eax,DWORD PTR [ebp+0x10]
1001d0cc:	test   edi,edi
1001d0ce:	jl     0x1001d0d5
1001d0d0:	cmp    DWORD PTR [esi],0x0
1001d0d3:	jne    0x1001d0d8
1001d0d5:	xor    edi,edi
1001d0d7:	inc    edi
1001d0d8:	or     DWORD PTR [ebp-0x4],0xffffffff
1001d0dc:	test   eax,eax
1001d0de:	je     0x1001d0e6
1001d0e0:	mov    ecx,DWORD PTR [eax]
1001d0e2:	push   eax
1001d0e3:	call   DWORD PTR [ecx+0x8]
1001d0e6:	mov    eax,edi
1001d0e8:	call   0x1005891d
1001d0ed:	ret    0xc
1001d0f0:	push   esi
1001d0f1:	mov    esi,DWORD PTR [esp+0xc]
1001d0f5:	test   esi,esi
1001d0f7:	jne    0x1001d100
1001d0f9:	mov    eax,0x80004003
1001d0fe:	jmp    0x1001d139
1001d100:	and    DWORD PTR [esi],0x0
1001d103:	mov    eax,DWORD PTR [esp+0x8]
1001d107:	mov    ecx,DWORD PTR [eax+0x34]
1001d10a:	test   ecx,ecx
1001d10c:	je     0x1001d125
1001d10e:	mov    eax,DWORD PTR [ecx]
1001d110:	push   esi
1001d111:	push   ecx
1001d112:	call   DWORD PTR [eax+0x4c]
1001d115:	test   eax,eax
1001d117:	jl     0x1001d11e
1001d119:	cmp    DWORD PTR [esi],0x0
1001d11c:	jne    0x1001d139
1001d11e:	mov    eax,0x80004002
1001d123:	jmp    0x1001d139
1001d125:	mov    ecx,DWORD PTR [eax+0x30]
1001d128:	mov    DWORD PTR [esi],ecx
1001d12a:	mov    eax,DWORD PTR [eax+0x30]
1001d12d:	test   eax,eax
1001d12f:	je     0x1001d137
1001d131:	mov    ecx,DWORD PTR [eax]
1001d133:	push   eax
1001d134:	call   DWORD PTR [ecx+0x4]
1001d137:	xor    eax,eax
1001d139:	pop    esi
1001d13a:	ret    0x8
1001d13d:	push   0x4
1001d13f:	mov    eax,0x1005f073
1001d144:	call   0x10058845
1001d149:	mov    eax,DWORD PTR [ebp+0x14]
1001d14c:	xor    ebx,ebx
1001d14e:	cmp    eax,ebx
1001d150:	jne    0x1001d15c
1001d152:	mov    eax,0x80004003
1001d157:	jmp    0x1001d201
1001d15c:	mov    DWORD PTR [eax],ebx
1001d15e:	mov    eax,DWORD PTR [ebp+0x8]
1001d161:	mov    edi,DWORD PTR [eax+0x34]
1001d164:	cmp    edi,ebx
1001d166:	mov    DWORD PTR [ebp-0x10],0x1
1001d16d:	je     0x1001d1fe
1001d173:	mov    DWORD PTR [ebp+0x8],ebx
1001d176:	mov    DWORD PTR [ebp-0x4],ebx
1001d179:	push   DWORD PTR [ebp+0x10]
1001d17c:	lea    esi,[ebp+0x10]
1001d17f:	call   0x1001b132
1001d184:	mov    BYTE PTR [ebp-0x4],0x1
1001d188:	mov    eax,DWORD PTR [eax]
1001d18a:	mov    ecx,DWORD PTR [edi]
1001d18c:	lea    edx,[ebp+0x8]
1001d18f:	push   edx
1001d190:	push   eax
1001d191:	push   DWORD PTR [ebp+0xc]
1001d194:	push   edi
1001d195:	call   DWORD PTR [ecx+0x50]
1001d198:	mov    BYTE PTR [ebp-0x4],bl
1001d19b:	push   DWORD PTR [ebp+0x10]
1001d19e:	mov    esi,DWORD PTR ds:0x100652b4
1001d1a4:	mov    DWORD PTR [ebp-0x10],eax
1001d1a7:	call   esi
1001d1a9:	cmp    DWORD PTR [ebp-0x10],ebx
1001d1ac:	jl     0x1001d1f2
1001d1ae:	push   DWORD PTR [ebp+0x8]
1001d1b1:	mov    edi,DWORD PTR ds:0x100652ac
1001d1b7:	call   edi
1001d1b9:	test   eax,eax
1001d1bb:	je     0x1001d1f2
1001d1bd:	push   DWORD PTR [ebp+0x8]
1001d1c0:	call   edi
1001d1c2:	lea    edi,[eax+eax*1+0x2]
1001d1c6:	push   edi
1001d1c7:	call   DWORD PTR ds:0x10065424
1001d1cd:	cmp    eax,ebx
1001d1cf:	mov    ecx,DWORD PTR [ebp+0x14]
1001d1d2:	mov    DWORD PTR [ecx],eax
1001d1d4:	jne    0x1001d1e2
1001d1d6:	push   DWORD PTR [ebp+0x8]
1001d1d9:	call   esi
1001d1db:	mov    eax,0x8007000e
1001d1e0:	jmp    0x1001d201
1001d1e2:	push   edi
1001d1e3:	push   DWORD PTR [ebp+0x8]
1001d1e6:	push   edi
1001d1e7:	push   eax
1001d1e8:	call   0x10014024
1001d1ed:	add    esp,0x10
1001d1f0:	jmp    0x1001d1f9
1001d1f2:	mov    DWORD PTR [ebp-0x10],0x1
1001d1f9:	push   DWORD PTR [ebp+0x8]
1001d1fc:	call   esi
1001d1fe:	mov    eax,DWORD PTR [ebp-0x10]
1001d201:	call   0x1005891d
1001d206:	ret    0x10
1001d209:	push   0x0
1001d20b:	mov    eax,0x1005e42a
1001d210:	call   0x10058845
1001d215:	mov    edi,DWORD PTR [ebp+0x10]
1001d218:	xor    ecx,ecx
1001d21a:	cmp    edi,ecx
1001d21c:	jne    0x1001d225
1001d21e:	mov    eax,0x80004003
1001d223:	jmp    0x1001d27e
1001d225:	mov    esi,DWORD PTR [ebp+0x8]
1001d228:	xor    ebx,ebx
1001d22a:	mov    DWORD PTR [edi],ecx
1001d22c:	mov    eax,DWORD PTR [esi+0x34]
1001d22f:	inc    ebx
1001d230:	cmp    eax,ecx
1001d232:	je     0x1001d27c
1001d234:	mov    DWORD PTR [ebp+0x10],ecx
1001d237:	lea    edx,[ebp+0x10]
1001d23a:	push   edx
1001d23b:	push   DWORD PTR [ebp+0xc]
1001d23e:	mov    DWORD PTR [ebp-0x4],ecx
1001d241:	mov    ecx,DWORD PTR [eax]
1001d243:	push   eax
1001d244:	call   DWORD PTR [ecx+0x54]
1001d247:	cmp    DWORD PTR [ebp+0x10],0x0
1001d24b:	mov    ebx,eax
1001d24d:	je     0x1001d25f
1001d24f:	push   edi
1001d250:	lea    eax,[esi-0x24]
1001d253:	mov    ecx,DWORD PTR [eax]
1001d255:	push   0x1006f668
1001d25a:	push   eax
1001d25b:	call   DWORD PTR [ecx]
1001d25d:	mov    ebx,eax
1001d25f:	test   ebx,ebx
1001d261:	jl     0x1001d268
1001d263:	cmp    DWORD PTR [edi],0x0
1001d266:	jne    0x1001d26b
1001d268:	xor    ebx,ebx
1001d26a:	inc    ebx
1001d26b:	or     DWORD PTR [ebp-0x4],0xffffffff
1001d26f:	mov    eax,DWORD PTR [ebp+0x10]
1001d272:	test   eax,eax
1001d274:	je     0x1001d27c
1001d276:	mov    ecx,DWORD PTR [eax]
1001d278:	push   eax
1001d279:	call   DWORD PTR [ecx+0x8]
1001d27c:	mov    eax,ebx
1001d27e:	call   0x1005891d
1001d283:	ret    0xc
1001d286:	push   0x0
1001d288:	mov    eax,0x1005e407
1001d28d:	call   0x10058845
1001d292:	mov    eax,DWORD PTR [ebp+0x8]
1001d295:	mov    eax,DWORD PTR [eax+0x60]
1001d298:	xor    ecx,ecx
1001d29a:	xor    esi,esi
1001d29c:	test   eax,eax
1001d29e:	mov    DWORD PTR [ebp+0x8],ecx
1001d2a1:	je     0x1001d2b4
1001d2a3:	mov    ecx,DWORD PTR [eax]
1001d2a5:	lea    edx,[ebp+0x8]
1001d2a8:	push   edx
1001d2a9:	push   0x1006f678
1001d2ae:	push   eax
1001d2af:	call   DWORD PTR [ecx]
1001d2b1:	mov    ecx,DWORD PTR [ebp+0x8]
1001d2b4:	and    DWORD PTR [ebp-0x4],0x0
1001d2b8:	test   ecx,ecx
1001d2ba:	je     0x1001d2ca
1001d2bc:	push   DWORD PTR [ebp+0xc]
1001d2bf:	mov    eax,DWORD PTR [ecx]
1001d2c1:	push   ecx
1001d2c2:	call   DWORD PTR [eax+0x14]
1001d2c5:	mov    ecx,DWORD PTR [ebp+0x8]
1001d2c8:	mov    esi,eax
1001d2ca:	or     DWORD PTR [ebp-0x4],0xffffffff
1001d2ce:	test   ecx,ecx
1001d2d0:	je     0x1001d2d8
1001d2d2:	mov    eax,DWORD PTR [ecx]
1001d2d4:	push   ecx
1001d2d5:	call   DWORD PTR [eax+0x8]
1001d2d8:	mov    eax,esi
1001d2da:	call   0x1005891d
1001d2df:	ret    0x8
1001d2e2:	push   ebp
1001d2e3:	mov    ebp,esp
1001d2e5:	push   esi
1001d2e6:	push   DWORD PTR [ebp+0x28]
1001d2e9:	mov    esi,DWORD PTR [ebp+0x8]
1001d2ec:	push   DWORD PTR [ebp+0x24]
1001d2ef:	push   DWORD PTR [ebp+0x20]
1001d2f2:	push   DWORD PTR [ebp+0x1c]
1001d2f5:	push   DWORD PTR [ebp+0x18]
1001d2f8:	push   DWORD PTR [ebp+0x14]
1001d2fb:	push   DWORD PTR [ebp+0x10]
1001d2fe:	push   DWORD PTR [ebp+0xc]
1001d301:	push   esi
1001d302:	call   0x1001fd01
1001d307:	cmp    eax,0x80020003
1001d30c:	je     0x1001d315
1001d30e:	cmp    eax,0x8002802b
1001d313:	jne    0x1001d350
1001d315:	mov    ecx,DWORD PTR [esi+0x8]
1001d318:	test   ecx,ecx
1001d31a:	je     0x1001d350
1001d31c:	push   DWORD PTR [ebp+0x28]
1001d31f:	mov    eax,DWORD PTR [ecx]
1001d321:	push   DWORD PTR [ebp+0x24]
1001d324:	push   DWORD PTR [ebp+0x20]
1001d327:	push   DWORD PTR [ebp+0x1c]
1001d32a:	push   DWORD PTR [ebp+0x18]
1001d32d:	push   DWORD PTR [ebp+0x14]
1001d330:	push   DWORD PTR [ebp+0x10]
1001d333:	push   DWORD PTR [ebp+0xc]
1001d336:	push   ecx
1001d337:	call   DWORD PTR [eax+0x18]
1001d33a:	test   eax,eax
1001d33c:	jl     0x1001d350
1001d33e:	test   BYTE PTR [ebp+0x18],0x4
1001d342:	je     0x1001d350
1001d344:	push   DWORD PTR [ebp+0xc]
1001d347:	add    esi,0xffffffb4
1001d34a:	push   esi
1001d34b:	call   0x1001d286
1001d350:	pop    esi
1001d351:	pop    ebp
1001d352:	ret    0x24
1001d355:	mov    eax,DWORD PTR [esp+0x4]
1001d359:	mov    ecx,DWORD PTR [esp+0x8]
1001d35d:	xor    ecx,DWORD PTR [eax+0x7c]
1001d360:	and    ecx,0x1
1001d363:	xor    DWORD PTR [eax+0x7c],ecx
1001d366:	xor    eax,eax
1001d368:	ret    0x8
1001d36b:	mov    eax,DWORD PTR [esp+0x8]
1001d36f:	test   eax,eax
1001d371:	jne    0x1001d37a
1001d373:	mov    eax,0x80004003
1001d378:	jmp    0x1001d38d
1001d37a:	mov    ecx,DWORD PTR [esp+0x4]
1001d37e:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d381:	and    cl,0x1
1001d384:	neg    cl
1001d386:	sbb    ecx,ecx
1001d388:	mov    WORD PTR [eax],cx
1001d38b:	xor    eax,eax
1001d38d:	ret    0x8
1001d390:	mov    eax,DWORD PTR [esp+0x8]
1001d394:	push   esi
1001d395:	mov    esi,DWORD PTR [esp+0x8]
1001d399:	mov    DWORD PTR [esi+0x80],eax
1001d39f:	push   0xfffffd43
1001d3a4:	lea    eax,[esi-0x4c]
1001d3a7:	push   eax
1001d3a8:	call   0x1001d286
1001d3ad:	push   0x0
1001d3af:	lea    eax,[esi-0x20]
1001d3b2:	mov    ecx,DWORD PTR [eax]
1001d3b4:	push   0x0
1001d3b6:	push   eax
1001d3b7:	call   DWORD PTR [ecx+0x64]
1001d3ba:	xor    eax,eax
1001d3bc:	pop    esi
1001d3bd:	ret    0x8
1001d3c0:	mov    eax,DWORD PTR [esp+0x8]
1001d3c4:	test   eax,eax
1001d3c6:	jne    0x1001d3cf
1001d3c8:	mov    eax,0x80004003
1001d3cd:	jmp    0x1001d3dd
1001d3cf:	mov    ecx,DWORD PTR [esp+0x4]
1001d3d3:	mov    ecx,DWORD PTR [ecx+0x80]
1001d3d9:	mov    DWORD PTR [eax],ecx
1001d3db:	xor    eax,eax
1001d3dd:	ret    0x8
1001d3e0:	mov    eax,DWORD PTR [esp+0x4]
1001d3e4:	mov    ecx,DWORD PTR [esp+0x8]
1001d3e8:	mov    DWORD PTR [eax+0x84],ecx
1001d3ee:	push   0xfffffd40
1001d3f3:	add    eax,0xffffffb4
1001d3f6:	push   eax
1001d3f7:	call   0x1001d286
1001d3fc:	xor    eax,eax
1001d3fe:	ret    0x8
1001d401:	mov    eax,DWORD PTR [esp+0x8]
1001d405:	test   eax,eax
1001d407:	jne    0x1001d410
1001d409:	mov    eax,0x80004003
1001d40e:	jmp    0x1001d41e
1001d410:	mov    ecx,DWORD PTR [esp+0x4]
1001d414:	mov    ecx,DWORD PTR [ecx+0x84]
1001d41a:	mov    DWORD PTR [eax],ecx
1001d41c:	xor    eax,eax
1001d41e:	ret    0x8
1001d421:	mov    eax,DWORD PTR [esp+0x4]
1001d425:	mov    ecx,DWORD PTR [esp+0x8]
1001d429:	mov    DWORD PTR [eax+0x88],ecx
1001d42f:	push   0xfffffd3f
1001d434:	add    eax,0xffffffb4
1001d437:	push   eax
1001d438:	call   0x1001d286
1001d43d:	xor    eax,eax
1001d43f:	ret    0x8
1001d442:	mov    eax,DWORD PTR [esp+0x8]
1001d446:	test   eax,eax
1001d448:	jne    0x1001d451
1001d44a:	mov    eax,0x80004003
1001d44f:	jmp    0x1001d45f
1001d451:	mov    ecx,DWORD PTR [esp+0x4]
1001d455:	mov    ecx,DWORD PTR [ecx+0x88]
1001d45b:	mov    DWORD PTR [eax],ecx
1001d45d:	xor    eax,eax
1001d45f:	ret    0x8
1001d462:	movsx  ecx,WORD PTR [esp+0x8]
1001d467:	mov    eax,DWORD PTR [esp+0x4]
1001d46b:	add    ecx,ecx
1001d46d:	xor    ecx,DWORD PTR [eax+0x7c]
1001d470:	push   0xfffffd3b
1001d475:	and    ecx,0x2
1001d478:	xor    DWORD PTR [eax+0x7c],ecx
1001d47b:	add    eax,0xffffffb4
1001d47e:	push   eax
1001d47f:	call   0x1001d286
1001d484:	xor    eax,eax
1001d486:	ret    0x8
1001d489:	mov    eax,DWORD PTR [esp+0x8]
1001d48d:	test   eax,eax
1001d48f:	jne    0x1001d498
1001d491:	mov    eax,0x80004003
1001d496:	jmp    0x1001d4ab
1001d498:	mov    ecx,DWORD PTR [esp+0x4]
1001d49c:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d49f:	and    cl,0x2
1001d4a2:	neg    cl
1001d4a4:	sbb    ecx,ecx
1001d4a6:	mov    WORD PTR [eax],cx
1001d4a9:	xor    eax,eax
1001d4ab:	ret    0x8
1001d4ae:	movsx  ecx,WORD PTR [esp+0x8]
1001d4b3:	mov    eax,DWORD PTR [esp+0x4]
1001d4b7:	shl    ecx,0x2
1001d4ba:	xor    ecx,DWORD PTR [eax+0x7c]
1001d4bd:	push   0xfffffd37
1001d4c2:	and    ecx,0x4
1001d4c5:	xor    DWORD PTR [eax+0x7c],ecx
1001d4c8:	add    eax,0xffffffb4
1001d4cb:	push   eax
1001d4cc:	call   0x1001d286
1001d4d1:	xor    eax,eax
1001d4d3:	ret    0x8
1001d4d6:	mov    eax,DWORD PTR [esp+0x8]
1001d4da:	test   eax,eax
1001d4dc:	jne    0x1001d4e5
1001d4de:	mov    eax,0x80004003
1001d4e3:	jmp    0x1001d4f8
1001d4e5:	mov    ecx,DWORD PTR [esp+0x4]
1001d4e9:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d4ec:	and    cl,0x4
1001d4ef:	neg    cl
1001d4f1:	sbb    ecx,ecx
1001d4f3:	mov    WORD PTR [eax],cx
1001d4f6:	xor    eax,eax
1001d4f8:	ret    0x8
1001d4fb:	push   ebx
1001d4fc:	mov    ebx,DWORD PTR [esp+0x8]
1001d500:	push   esi
1001d501:	push   edi
1001d502:	mov    edi,DWORD PTR [esp+0x14]
1001d506:	lea    esi,[ebx+0x8c]
1001d50c:	cmp    DWORD PTR [esi],edi
1001d50e:	je     0x1001d515
1001d510:	call   0x10007188
1001d515:	push   0xfffffd41
1001d51a:	add    ebx,0xffffffb4
1001d51d:	push   ebx
1001d51e:	call   0x1001d286
1001d523:	pop    edi
1001d524:	pop    esi
1001d525:	xor    eax,eax
1001d527:	pop    ebx
1001d528:	ret    0x8
1001d52b:	push   ebp
1001d52c:	lea    ebp,[esp-0x70]
1001d530:	sub    esp,0x8c
1001d536:	mov    eax,ds:0x1007d030
1001d53b:	xor    eax,ebp
1001d53d:	mov    DWORD PTR [ebp+0x6c],eax
1001d540:	mov    eax,DWORD PTR [ebp+0x7c]
1001d543:	test   eax,eax
1001d545:	push   ebx
1001d546:	mov    ebx,DWORD PTR [ebp+0x78]
1001d549:	mov    DWORD PTR [ebp+0x4],eax
1001d54c:	jne    0x1001d558
1001d54e:	mov    eax,0x80004003
1001d553:	jmp    0x1001d66e
1001d558:	and    DWORD PTR [eax],0x0
1001d55b:	push   esi
1001d55c:	lea    esi,[ebx+0x8c]
1001d562:	cmp    DWORD PTR [esi],0x0
1001d565:	push   edi
1001d566:	jne    0x1001d65a
1001d56c:	call   DWORD PTR ds:0x1007dfe4
1001d572:	mov    edi,DWORD PTR ds:0x1006502c
1001d578:	push   0x11
1001d57a:	call   edi
1001d57c:	test   eax,eax
1001d57e:	jne    0x1001d58c
1001d580:	push   0xd
1001d582:	call   edi
1001d584:	test   eax,eax
1001d586:	je     0x1001d616
1001d58c:	lea    ecx,[ebp+0x10]
1001d58f:	push   ecx
1001d590:	push   0x5c
1001d592:	push   eax
1001d593:	call   DWORD PTR ds:0x10065030
1001d599:	lea    eax,[ebp+0x2c]
1001d59c:	mov    DWORD PTR [ebp-0x18],eax
1001d59f:	mov    ax,WORD PTR [ebp+0x20]
1001d5a3:	mov    WORD PTR [ebp-0xc],ax
1001d5a7:	movzx  ax,BYTE PTR [ebp+0x27]
1001d5ac:	mov    WORD PTR [ebp-0xa],ax
1001d5b0:	movzx  eax,BYTE PTR [ebp+0x24]
1001d5b4:	mov    DWORD PTR [ebp-0x8],eax
1001d5b7:	movzx  eax,BYTE PTR [ebp+0x25]
1001d5bb:	mov    DWORD PTR [ebp-0x4],eax
1001d5be:	movzx  eax,BYTE PTR [ebp+0x26]
1001d5c2:	mov    DWORD PTR [ebp+0x0],eax
1001d5c5:	mov    eax,DWORD PTR [ebp+0x10]
1001d5c8:	test   eax,eax
1001d5ca:	mov    DWORD PTR [ebp-0x1c],0x20
1001d5d1:	mov    DWORD PTR [ebp+0x8],eax
1001d5d4:	jge    0x1001d5db
1001d5d6:	neg    eax
1001d5d8:	mov    DWORD PTR [ebp+0x8],eax
1001d5db:	mov    eax,DWORD PTR [ebx-0x48]
1001d5de:	test   eax,eax
1001d5e0:	je     0x1001d601
1001d5e2:	push   eax
1001d5e3:	call   DWORD PTR ds:0x10065300
1001d5e9:	mov    edi,eax
1001d5eb:	test   edi,edi
1001d5ed:	je     0x1001d616
1001d5ef:	push   0x5a
1001d5f1:	push   edi
1001d5f2:	call   DWORD PTR ds:0x10065048
1001d5f8:	push   edi
1001d5f9:	push   DWORD PTR [ebx-0x48]
1001d5fc:	mov    DWORD PTR [ebp+0xc],eax
1001d5ff:	jmp    0x1001d62d
1001d601:	mov    edi,DWORD PTR ds:0x1006531c
1001d607:	call   edi
1001d609:	push   eax
1001d60a:	call   DWORD PTR ds:0x10065300
1001d610:	mov    ebx,eax
1001d612:	test   ebx,ebx
1001d614:	jne    0x1001d61d
1001d616:	call   0x10006125
1001d61b:	jmp    0x1001d66c
1001d61d:	push   0x5a
1001d61f:	push   ebx
1001d620:	call   DWORD PTR ds:0x10065048
1001d626:	push   ebx
1001d627:	mov    DWORD PTR [ebp+0xc],eax
1001d62a:	call   edi
1001d62c:	push   eax
1001d62d:	call   DWORD PTR ds:0x10065358
1001d633:	mov    eax,DWORD PTR [ebp+0x8]
1001d636:	imul   eax,eax,0xafc80
1001d63c:	cdq    
1001d63d:	idiv   DWORD PTR [ebp+0xc]
1001d640:	and    DWORD PTR [ebp-0x10],0x0
1001d644:	push   esi
1001d645:	push   0x1006f688
1001d64a:	mov    DWORD PTR [ebp-0x14],eax
1001d64d:	lea    eax,[ebp-0x1c]
1001d650:	push   eax
1001d651:	call   DWORD PTR ds:0x10065288
1001d657:	mov    eax,DWORD PTR [ebp+0x4]
1001d65a:	mov    ecx,DWORD PTR [esi]
1001d65c:	mov    DWORD PTR [eax],ecx
1001d65e:	mov    esi,DWORD PTR [esi]
1001d660:	test   esi,esi
1001d662:	je     0x1001d66a
1001d664:	mov    eax,DWORD PTR [esi]
1001d666:	push   esi
1001d667:	call   DWORD PTR [eax+0x4]
1001d66a:	xor    eax,eax
1001d66c:	pop    edi
1001d66d:	pop    esi
1001d66e:	mov    ecx,DWORD PTR [ebp+0x6c]
1001d671:	xor    ecx,ebp
1001d673:	pop    ebx
1001d674:	call   0x10041d97
1001d679:	add    ebp,0x70
1001d67c:	leave  
1001d67d:	ret    0x8
1001d680:	movsx  ecx,WORD PTR [esp+0x8]
1001d685:	mov    eax,DWORD PTR [esp+0x4]
1001d689:	shl    ecx,0x3
1001d68c:	xor    ecx,DWORD PTR [eax+0x7c]
1001d68f:	push   0xfffffd3e
1001d694:	and    ecx,0x8
1001d697:	xor    DWORD PTR [eax+0x7c],ecx
1001d69a:	add    eax,0xffffffb4
1001d69d:	push   eax
1001d69e:	call   0x1001d286
1001d6a3:	xor    eax,eax
1001d6a5:	ret    0x8
1001d6a8:	mov    eax,DWORD PTR [esp+0x8]
1001d6ac:	test   eax,eax
1001d6ae:	jne    0x1001d6b7
1001d6b0:	mov    eax,0x80004003
1001d6b5:	jmp    0x1001d6ca
1001d6b7:	mov    ecx,DWORD PTR [esp+0x4]
1001d6bb:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d6be:	and    cl,0x8
1001d6c1:	neg    cl
1001d6c3:	sbb    ecx,ecx
1001d6c5:	mov    WORD PTR [eax],cx
1001d6c8:	xor    eax,eax
1001d6ca:	ret    0x8
1001d6cd:	mov    eax,DWORD PTR [esp+0x8]
1001d6d1:	and    WORD PTR [eax],0x0
1001d6d5:	xor    eax,eax
1001d6d7:	ret    0x8
1001d6da:	mov    eax,DWORD PTR [esp+0x8]
1001d6de:	test   eax,eax
1001d6e0:	jne    0x1001d6e9
1001d6e2:	mov    eax,0x80004003
1001d6e7:	jmp    0x1001d6ef
1001d6e9:	and    WORD PTR [eax],0x0
1001d6ed:	xor    eax,eax
1001d6ef:	ret    0x8
1001d6f2:	mov    eax,DWORD PTR [esp+0x4]
1001d6f6:	mov    ecx,DWORD PTR [esp+0x8]
1001d6fa:	mov    DWORD PTR [eax+0x94],ecx
1001d700:	push   0xffffffff
1001d702:	add    eax,0xffffffb4
1001d705:	push   eax
1001d706:	call   0x1001d286
1001d70b:	xor    eax,eax
1001d70d:	ret    0x8
1001d710:	mov    eax,DWORD PTR [esp+0x8]
1001d714:	test   eax,eax
1001d716:	jne    0x1001d71f
1001d718:	mov    eax,0x80004003
1001d71d:	jmp    0x1001d72d
1001d71f:	mov    ecx,DWORD PTR [esp+0x4]
1001d723:	mov    ecx,DWORD PTR [ecx+0x94]
1001d729:	mov    DWORD PTR [eax],ecx
1001d72b:	xor    eax,eax
1001d72d:	ret    0x8
1001d730:	mov    eax,DWORD PTR [esp+0x4]
1001d734:	mov    ecx,DWORD PTR [esp+0x8]
1001d738:	mov    DWORD PTR [eax+0x98],ecx
1001d73e:	xor    eax,eax
1001d740:	ret    0x8
1001d743:	mov    eax,DWORD PTR [esp+0x8]
1001d747:	test   eax,eax
1001d749:	jne    0x1001d752
1001d74b:	mov    eax,0x80004003
1001d750:	jmp    0x1001d760
1001d752:	mov    ecx,DWORD PTR [esp+0x4]
1001d756:	mov    ecx,DWORD PTR [ecx+0x98]
1001d75c:	mov    DWORD PTR [eax],ecx
1001d75e:	xor    eax,eax
1001d760:	ret    0x8
1001d763:	movsx  ecx,WORD PTR [esp+0x8]
1001d768:	mov    eax,DWORD PTR [esp+0x4]
1001d76c:	shl    ecx,0x5
1001d76f:	xor    ecx,DWORD PTR [eax+0x7c]
1001d772:	and    ecx,0x20
1001d775:	xor    DWORD PTR [eax+0x7c],ecx
1001d778:	xor    eax,eax
1001d77a:	ret    0x8
1001d77d:	mov    eax,DWORD PTR [esp+0x8]
1001d781:	test   eax,eax
1001d783:	jne    0x1001d78c
1001d785:	mov    eax,0x80004003
1001d78a:	jmp    0x1001d79f
1001d78c:	mov    ecx,DWORD PTR [esp+0x4]
1001d790:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d793:	and    cl,0x20
1001d796:	neg    cl
1001d798:	sbb    ecx,ecx
1001d79a:	mov    WORD PTR [eax],cx
1001d79d:	xor    eax,eax
1001d79f:	ret    0x8
1001d7a2:	movsx  ecx,WORD PTR [esp+0x8]
1001d7a7:	mov    eax,DWORD PTR [esp+0x4]
1001d7ab:	shl    ecx,0x6
1001d7ae:	xor    ecx,DWORD PTR [eax+0x7c]
1001d7b1:	and    ecx,0x40
1001d7b4:	xor    DWORD PTR [eax+0x7c],ecx
1001d7b7:	xor    eax,eax
1001d7b9:	ret    0x8
1001d7bc:	mov    eax,DWORD PTR [esp+0x8]
1001d7c0:	test   eax,eax
1001d7c2:	jne    0x1001d7cb
1001d7c4:	mov    eax,0x80004003
1001d7c9:	jmp    0x1001d7de
1001d7cb:	mov    ecx,DWORD PTR [esp+0x4]
1001d7cf:	mov    ecx,DWORD PTR [ecx+0x7c]
1001d7d2:	and    cl,0x40
1001d7d5:	neg    cl
1001d7d7:	sbb    ecx,ecx
1001d7d9:	mov    WORD PTR [eax],cx
1001d7dc:	xor    eax,eax
1001d7de:	ret    0x8
1001d7e1:	push   esi
1001d7e2:	mov    esi,DWORD PTR [esp+0x8]
1001d7e6:	mov    eax,DWORD PTR [esi+0x9c]
1001d7ec:	cmp    DWORD PTR [esp+0xc],eax
1001d7f0:	je     0x1001d825
1001d7f2:	push   eax
1001d7f3:	call   DWORD PTR ds:0x100652b4
1001d7f9:	cmp    DWORD PTR [esp+0xc],0x0
1001d7fe:	je     0x1001d81e
1001d800:	push   DWORD PTR [esp+0xc]
1001d804:	call   DWORD PTR ds:0x100652b0
1001d80a:	test   eax,eax
1001d80c:	mov    DWORD PTR [esi+0x9c],eax
1001d812:	jne    0x1001d825
1001d814:	push   0x8007000e
1001d819:	call   0x10001f41
1001d81e:	and    DWORD PTR [esi+0x9c],0x0
1001d825:	xor    eax,eax
1001d827:	pop    esi
1001d828:	ret    0x8
1001d82b:	mov    eax,DWORD PTR [esp+0x8]
1001d82f:	test   eax,eax
1001d831:	jne    0x1001d83a
1001d833:	mov    eax,0x80004003
1001d838:	jmp    0x1001d848
1001d83a:	mov    ecx,DWORD PTR [esp+0x4]
1001d83e:	mov    ecx,DWORD PTR [ecx+0x9c]
1001d844:	mov    DWORD PTR [eax],ecx
1001d846:	xor    eax,eax
1001d848:	ret    0x8
1001d84b:	push   esi
1001d84c:	mov    esi,DWORD PTR [esp+0x8]
1001d850:	push   edi
1001d851:	mov    edi,DWORD PTR [esp+0x10]
1001d855:	add    esi,0x8
1001d858:	cmp    DWORD PTR [esi],edi
1001d85a:	je     0x1001d861
1001d85c:	call   0x10007188
1001d861:	pop    edi
1001d862:	xor    eax,eax
1001d864:	pop    esi
1001d865:	ret    0x8
1001d868:	push   esi
1001d869:	mov    esi,DWORD PTR [esp+0x8]
1001d86d:	push   edi
1001d86e:	push   DWORD PTR [esp+0x10]
1001d872:	push   esi
1001d873:	call   0x1001fc77
1001d878:	mov    edi,eax
1001d87a:	test   edi,edi
1001d87c:	jl     0x1001d898
1001d87e:	mov    eax,DWORD PTR [esi+0x4]
1001d881:	test   eax,eax
1001d883:	je     0x1001d898
1001d885:	mov    ecx,DWORD PTR [eax]
1001d887:	lea    edx,[esi+0xa4]
1001d88d:	push   edx
1001d88e:	push   0x1006ef28
1001d893:	push   eax
1001d894:	call   DWORD PTR [ecx]
1001d896:	mov    edi,eax
1001d898:	cmp    DWORD PTR [esp+0x10],0x0
1001d89d:	jne    0x1001d8b4
1001d89f:	lea    eax,[esi+0xa4]
1001d8a5:	mov    ecx,DWORD PTR [eax]
1001d8a7:	test   ecx,ecx
1001d8a9:	je     0x1001d8b4
1001d8ab:	and    DWORD PTR [eax],0x0
1001d8ae:	mov    eax,DWORD PTR [ecx]
1001d8b0:	push   ecx
1001d8b1:	call   DWORD PTR [eax+0x8]
1001d8b4:	mov    eax,edi
1001d8b6:	pop    edi
1001d8b7:	pop    esi
1001d8b8:	ret    0x8
1001d8bb:	mov    eax,0x80004001
1001d8c0:	ret    0x4
1001d8c3:	mov    eax,0x80004001
1001d8c8:	ret    0x10
1001d8cb:	push   edi
1001d8cc:	mov    edi,DWORD PTR [esp+0xc]
1001d8d0:	test   edi,edi
1001d8d2:	mov    eax,0x80004003
1001d8d7:	je     0x1001d905
1001d8d9:	and    DWORD PTR [edi],0x0
1001d8dc:	push   ebx
1001d8dd:	mov    ebx,DWORD PTR [esp+0xc]
1001d8e1:	mov    eax,DWORD PTR [ebx+0x14]
1001d8e4:	test   eax,eax
1001d8e6:	push   esi
1001d8e7:	mov    esi,0x1006ef48
1001d8ec:	je     0x1001d8f9
1001d8ee:	mov    ecx,DWORD PTR [eax]
1001d8f0:	push   edi
1001d8f1:	push   esi
1001d8f2:	push   eax
1001d8f3:	call   DWORD PTR [ecx]
1001d8f5:	test   eax,eax
1001d8f7:	jge    0x1001d903
1001d8f9:	push   edi
1001d8fa:	lea    eax,[ebx-0x4]
1001d8fd:	mov    ecx,DWORD PTR [eax]
1001d8ff:	push   esi
1001d900:	push   eax
1001d901:	call   DWORD PTR [ecx]
1001d903:	pop    esi
1001d904:	pop    ebx
1001d905:	pop    edi
1001d906:	ret    0x8
1001d909:	push   esi
1001d90a:	mov    esi,DWORD PTR [esp+0x8]
1001d90e:	push   edi
1001d90f:	push   DWORD PTR [esi-0x24]
1001d912:	call   DWORD PTR ds:0x10065300
1001d918:	mov    edi,eax
1001d91a:	xor    edx,edx
1001d91c:	cmp    edi,edx
1001d91e:	jne    0x1001d927
1001d920:	mov    eax,0x80004005
1001d925:	jmp    0x1001d954
1001d927:	mov    eax,DWORD PTR [esi+0x48]
1001d92a:	cmp    eax,edx
1001d92c:	je     0x1001d948
1001d92e:	push   ebx
1001d92f:	mov    ebx,DWORD PTR [eax]
1001d931:	push   edx
1001d932:	push   edx
1001d933:	lea    ecx,[esi+0x8c]
1001d939:	push   ecx
1001d93a:	push   ecx
1001d93b:	push   edi
1001d93c:	push   edx
1001d93d:	push   edx
1001d93e:	push   edx
1001d93f:	push   0xffffffff
1001d941:	push   0x1
1001d943:	push   eax
1001d944:	call   DWORD PTR [ebx+0xc]
1001d947:	pop    ebx
1001d948:	push   edi
1001d949:	push   DWORD PTR [esi-0x24]
1001d94c:	call   DWORD PTR ds:0x10065358
1001d952:	xor    eax,eax
1001d954:	pop    edi
1001d955:	pop    esi
1001d956:	ret    0x4
1001d959:	mov    eax,0x80004001
1001d95e:	ret    0x8
1001d961:	mov    eax,DWORD PTR [esp+0x4]
1001d965:	mov    eax,DWORD PTR [eax-0x28]
1001d968:	mov    ecx,DWORD PTR [esp+0x8]
1001d96c:	mov    DWORD PTR [ecx],eax
1001d96e:	xor    eax,eax
1001d970:	ret    0x8
1001d973:	push   esi
1001d974:	mov    esi,DWORD PTR [esp+0x8]
1001d978:	or     DWORD PTR [esi+0x6c],0x1
1001d97c:	push   0x0
1001d97e:	push   0x1
1001d980:	push   DWORD PTR [esi+0x38]
1001d983:	call   DWORD PTR ds:0x10065420
1001d989:	mov    eax,DWORD PTR [esi+0x38]
1001d98c:	and    DWORD PTR [esi+0x6c],0xfffffff7
1001d990:	mov    ecx,DWORD PTR [eax]
1001d992:	add    esi,0x48
1001d995:	push   esi
1001d996:	push   0x1006f698
1001d99b:	push   eax
1001d99c:	call   DWORD PTR [ecx]
1001d99e:	xor    eax,eax
1001d9a0:	pop    esi
1001d9a1:	ret    0x4
1001d9a4:	mov    eax,DWORD PTR [esp+0x4]
1001d9a8:	or     DWORD PTR [eax+0x6c],0x2
1001d9ac:	xor    eax,eax
1001d9ae:	ret    0x4
1001d9b1:	push   ebp
1001d9b2:	mov    ebp,esp
1001d9b4:	push   ecx
1001d9b5:	push   ecx
1001d9b6:	mov    edx,DWORD PTR [ebp+0xc]
1001d9b9:	xor    eax,eax
1001d9bb:	cmp    edx,eax
1001d9bd:	je     0x1001d9c1
1001d9bf:	mov    DWORD PTR [edx],eax
1001d9c1:	mov    ecx,DWORD PTR [ebp+0x10]
1001d9c4:	cmp    ecx,eax
1001d9c6:	je     0x1001d9ca
1001d9c8:	mov    DWORD PTR [ecx],eax
1001d9ca:	cmp    edx,eax
1001d9cc:	je     0x1001dad7
1001d9d2:	cmp    ecx,eax
1001d9d4:	je     0x1001dad7
1001d9da:	cmp    DWORD PTR [ebp+0x14],eax
1001d9dd:	je     0x1001dad7
1001d9e3:	cmp    DWORD PTR [ebp+0x18],eax
1001d9e6:	je     0x1001dad7
1001d9ec:	push   ebx
1001d9ed:	push   esi
1001d9ee:	mov    esi,DWORD PTR [ebp+0x8]
1001d9f1:	lea    ebx,[esi+0x3c]
1001d9f4:	cmp    DWORD PTR [ebx],eax
1001d9f6:	push   edi
1001d9f7:	jne    0x1001da13
1001d9f9:	lea    eax,[ebp+0x8]
1001d9fc:	push   eax
1001d9fd:	call   0x10021b6d
1001da02:	mov    eax,DWORD PTR [ebp+0x8]
1001da05:	push   ebx
1001da06:	add    eax,0x24
1001da09:	mov    ecx,DWORD PTR [eax]
1001da0b:	push   0x1006efe8
1001da10:	push   eax
1001da11:	call   DWORD PTR [ecx]
1001da13:	lea    edi,[esi+0x40]
1001da16:	cmp    DWORD PTR [edi],0x0
1001da19:	jne    0x1001da35
1001da1b:	lea    eax,[ebp+0x8]
1001da1e:	push   eax
1001da1f:	call   0x10021bfc
1001da24:	mov    eax,DWORD PTR [ebp+0x8]
1001da27:	push   edi
1001da28:	add    eax,0x24
1001da2b:	mov    ecx,DWORD PTR [eax]
1001da2d:	push   0x1006efd8
1001da32:	push   eax
1001da33:	call   DWORD PTR [ecx]
1001da35:	mov    eax,DWORD PTR [ebx]
1001da37:	mov    ecx,DWORD PTR [ebp+0xc]
1001da3a:	mov    DWORD PTR [ecx],eax
1001da3c:	mov    ebx,DWORD PTR [ebx]
1001da3e:	test   ebx,ebx
1001da40:	je     0x1001da48
1001da42:	mov    eax,DWORD PTR [ebx]
1001da44:	push   ebx
1001da45:	call   DWORD PTR [eax+0x4]
1001da48:	mov    eax,DWORD PTR [edi]
1001da4a:	mov    ecx,DWORD PTR [ebp+0x10]
1001da4d:	mov    DWORD PTR [ecx],eax
1001da4f:	mov    edi,DWORD PTR [edi]
1001da51:	test   edi,edi
1001da53:	je     0x1001da5b
1001da55:	mov    eax,DWORD PTR [edi]
1001da57:	push   edi
1001da58:	call   DWORD PTR [eax+0x4]
1001da5b:	push   DWORD PTR [ebp+0x14]
1001da5e:	mov    edi,DWORD PTR ds:0x100652cc
1001da64:	push   DWORD PTR [esi-0x28]
1001da67:	call   edi
1001da69:	push   DWORD PTR [ebp+0x18]
1001da6c:	push   DWORD PTR [esi-0x28]
1001da6f:	call   edi
1001da71:	xor    ebx,ebx
1001da73:	cmp    DWORD PTR [esi+0x98],ebx
1001da79:	jne    0x1001da98
1001da7b:	push   0x1
1001da7d:	lea    eax,[ebp-0x8]
1001da80:	push   eax
1001da81:	mov    BYTE PTR [ebp-0x8],bl
1001da84:	mov    WORD PTR [ebp-0x6],bx
1001da88:	mov    WORD PTR [ebp-0x4],bx
1001da8c:	call   DWORD PTR ds:0x100652c8
1001da92:	mov    DWORD PTR [esi+0x98],eax
1001da98:	mov    edi,DWORD PTR [ebp+0x1c]
1001da9b:	mov    DWORD PTR [edi],0x14
1001daa1:	mov    eax,DWORD PTR [esi+0x6c]
1001daa4:	shr    eax,0x2
1001daa7:	and    eax,0x1
1001daaa:	mov    DWORD PTR [edi+0x4],eax
1001daad:	push   DWORD PTR [esi-0x28]
1001dab0:	call   DWORD PTR ds:0x10065364
1001dab6:	mov    DWORD PTR [edi+0x8],eax
1001dab9:	mov    eax,DWORD PTR [esi+0x98]
1001dabf:	mov    DWORD PTR [edi+0xc],eax
1001dac2:	xor    eax,eax
1001dac4:	cmp    DWORD PTR [esi+0x98],ebx
1001daca:	setne  al
1001dacd:	mov    DWORD PTR [edi+0x10],eax
1001dad0:	pop    edi
1001dad1:	pop    esi
1001dad2:	xor    eax,eax
1001dad4:	pop    ebx
1001dad5:	jmp    0x1001dadc
1001dad7:	mov    eax,0x80004003
1001dadc:	leave  
1001dadd:	ret    0x18
1001dae0:	mov    eax,DWORD PTR [esp+0x4]
1001dae4:	and    DWORD PTR [eax+0x6c],0xfffffffd
1001dae8:	xor    eax,eax
1001daea:	ret    0x8
1001daed:	mov    eax,DWORD PTR [esp+0x4]
1001daf1:	and    DWORD PTR [eax+0x6c],0xfffffffe
1001daf5:	mov    ecx,DWORD PTR [eax+0x48]
1001daf8:	test   ecx,ecx
1001dafa:	je     0x1001db06
1001dafc:	and    DWORD PTR [eax+0x48],0x0
1001db00:	mov    eax,DWORD PTR [ecx]
1001db02:	push   ecx
1001db03:	call   DWORD PTR [eax+0x8]
1001db06:	xor    eax,eax
1001db08:	ret    0x4
1001db0b:	push   ebp
1001db0c:	mov    ebp,esp
1001db0e:	sub    esp,0x10
1001db11:	push   esi
1001db12:	mov    esi,DWORD PTR [ebp+0xc]
1001db15:	test   esi,esi
1001db17:	jne    0x1001db20
1001db19:	mov    eax,0x80004003
1001db1e:	jmp    0x1001db92
1001db20:	push   ebx
1001db21:	push   edi
1001db22:	lea    edi,[ebp-0x10]
1001db25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001db26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001db27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001db28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001db29:	mov    esi,DWORD PTR [ebp+0x8]
1001db2c:	mov    edi,DWORD PTR ds:0x1006535c
1001db32:	lea    eax,[ebp-0x10]
1001db35:	push   eax
1001db36:	push   DWORD PTR [esi-0x28]
1001db39:	call   edi
1001db3b:	test   eax,eax
1001db3d:	je     0x1001db48
1001db3f:	lea    eax,[ebp-0x8]
1001db42:	push   eax
1001db43:	push   DWORD PTR [esi-0x28]
1001db46:	call   edi
1001db48:	push   DWORD PTR [esi-0x28]
1001db4b:	call   DWORD PTR ds:0x10065364
1001db51:	mov    ebx,eax
1001db53:	test   ebx,ebx
1001db55:	je     0x1001db6f
1001db57:	mov    edi,DWORD PTR ds:0x100652f0
1001db5d:	lea    eax,[ebp-0x10]
1001db60:	push   eax
1001db61:	push   ebx
1001db62:	call   edi
1001db64:	test   eax,eax
1001db66:	je     0x1001db6f
1001db68:	lea    eax,[ebp-0x8]
1001db6b:	push   eax
1001db6c:	push   ebx
1001db6d:	call   edi
1001db6f:	mov    eax,DWORD PTR [ebp-0x4]
1001db72:	sub    eax,DWORD PTR [ebp-0xc]
1001db75:	push   0x1
1001db77:	push   eax
1001db78:	mov    eax,DWORD PTR [ebp-0x8]
1001db7b:	sub    eax,DWORD PTR [ebp-0x10]
1001db7e:	push   eax
1001db7f:	push   DWORD PTR [ebp-0xc]
1001db82:	push   DWORD PTR [ebp-0x10]
1001db85:	push   DWORD PTR [esi-0x28]
1001db88:	call   DWORD PTR ds:0x1006534c
1001db8e:	pop    edi
1001db8f:	xor    eax,eax
1001db91:	pop    ebx
1001db92:	pop    esi
1001db93:	leave  
1001db94:	ret    0x8
1001db97:	push   esi
1001db98:	mov    esi,DWORD PTR [esp+0x8]
1001db9c:	or     DWORD PTR [esi+0x6c],0x1
1001dba0:	push   edi
1001dba1:	push   0x0
1001dba3:	push   0x1
1001dba5:	push   DWORD PTR [esi+0x38]
1001dba8:	call   DWORD PTR ds:0x10065420
1001dbae:	test   BYTE PTR [esp+0x14],0x1
1001dbb3:	je     0x1001dbce
1001dbb5:	mov    eax,DWORD PTR [esi+0x38]
1001dbb8:	or     DWORD PTR [esi+0x6c],0x8
1001dbbc:	mov    ecx,DWORD PTR [eax]
1001dbbe:	lea    edi,[esi+0x48]
1001dbc1:	push   edi
1001dbc2:	push   0x1006f6a8
1001dbc7:	push   eax
1001dbc8:	call   DWORD PTR [ecx]
1001dbca:	test   eax,eax
1001dbcc:	jge    0x1001dbe3
1001dbce:	mov    eax,DWORD PTR [esi+0x38]
1001dbd1:	and    DWORD PTR [esi+0x6c],0xfffffff7
1001dbd5:	mov    ecx,DWORD PTR [eax]
1001dbd7:	lea    edi,[esi+0x48]
1001dbda:	push   edi
1001dbdb:	push   0x1006f698
1001dbe0:	push   eax
1001dbe1:	call   DWORD PTR [ecx]
1001dbe3:	mov    edi,DWORD PTR [edi]
1001dbe5:	test   edi,edi
1001dbe7:	je     0x1001dbf7
1001dbe9:	mov    ecx,DWORD PTR [edi]
1001dbeb:	lea    eax,[esi+0x88]
1001dbf1:	push   eax
1001dbf2:	push   eax
1001dbf3:	push   edi
1001dbf4:	call   DWORD PTR [ecx+0x1c]
1001dbf7:	pop    edi
1001dbf8:	xor    eax,eax
1001dbfa:	pop    esi
1001dbfb:	ret    0xc
1001dbfe:	mov    eax,DWORD PTR [esp+0x4]
1001dc02:	and    DWORD PTR [eax+0x6c],0xfffffffe
1001dc06:	mov    ecx,DWORD PTR [eax+0x48]
1001dc09:	test   ecx,ecx
1001dc0b:	je     0x1001dc17
1001dc0d:	and    DWORD PTR [eax+0x48],0x0
1001dc11:	mov    eax,DWORD PTR [ecx]
1001dc13:	push   ecx
1001dc14:	call   DWORD PTR [eax+0x8]
1001dc17:	xor    eax,eax
1001dc19:	ret    0x8
1001dc1c:	mov    eax,DWORD PTR [esp+0x4]
1001dc20:	mov    eax,DWORD PTR [eax+0x9c]
1001dc26:	not    eax
1001dc28:	and    eax,0x1
1001dc2b:	ret    0x4
1001dc2e:	mov    eax,DWORD PTR [esp+0x4]
1001dc32:	mov    eax,DWORD PTR [eax+0x6c]
1001dc35:	shr    eax,0x4
1001dc38:	not    eax
1001dc3a:	and    eax,0x1
1001dc3d:	ret    0x4
1001dc40:	cmp    DWORD PTR [esp+0x8],0x0
1001dc45:	je     0x1001dc5c
1001dc47:	push   esi
1001dc48:	mov    esi,DWORD PTR [esp+0x8]
1001dc4c:	push   DWORD PTR [esi-0x28]
1001dc4f:	call   DWORD PTR ds:0x100652e0
1001dc55:	or     DWORD PTR [esi+0x6c],0x10
1001dc59:	pop    esi
1001dc5a:	jmp    0x1001dc6a
1001dc5c:	call   DWORD PTR ds:0x10065334
1001dc62:	mov    eax,DWORD PTR [esp+0x4]
1001dc66:	and    DWORD PTR [eax+0x6c],0xffffffef
1001dc6a:	xor    eax,eax
1001dc6c:	ret    0x8
1001dc6f:	mov    eax,DWORD PTR [esp+0x4]
1001dc73:	mov    eax,DWORD PTR [eax+0x6c]
1001dc76:	shr    eax,0x5
1001dc79:	not    eax
1001dc7b:	and    eax,0x1
1001dc7e:	ret    0x4
1001dc81:	mov    eax,DWORD PTR [esp+0x4]
1001dc85:	mov    ecx,DWORD PTR [esp+0x8]
1001dc89:	shl    ecx,0x5
1001dc8c:	xor    ecx,DWORD PTR [eax+0x6c]
1001dc8f:	and    ecx,0x20
1001dc92:	xor    DWORD PTR [eax+0x6c],ecx
1001dc95:	xor    eax,eax
1001dc97:	ret    0x8
1001dc9a:	push   ebp
1001dc9b:	mov    ebp,esp
1001dc9d:	sub    esp,0x10
1001dca0:	push   esi
1001dca1:	mov    esi,DWORD PTR [ebp+0x14]
1001dca4:	test   esi,esi
1001dca6:	jne    0x1001dcb2
1001dca8:	mov    eax,0x80004003
1001dcad:	jmp    0x1001dd66
1001dcb2:	push   edi
1001dcb3:	mov    edi,DWORD PTR [ebp+0x8]
1001dcb6:	cmp    BYTE PTR [edi+0x30],0x0
1001dcba:	je     0x1001dccb
1001dcbc:	push   DWORD PTR [edi-0x28]
1001dcbf:	call   DWORD PTR ds:0x10065300
1001dcc5:	test   eax,eax
1001dcc7:	mov    DWORD PTR [esi],eax
1001dcc9:	jne    0x1001dcd5
1001dccb:	mov    eax,0x80004005
1001dcd0:	jmp    0x1001dd65
1001dcd5:	test   BYTE PTR [ebp+0x10],0x1
1001dcd9:	mov    BYTE PTR [edi+0x30],0x0
1001dcdd:	jne    0x1001dd63
1001dce3:	lea    eax,[ebp-0x10]
1001dce6:	push   eax
1001dce7:	push   DWORD PTR [edi-0x28]
1001dcea:	call   DWORD PTR ds:0x100652cc
1001dcf0:	test   BYTE PTR [ebp+0x10],0x4
1001dcf4:	je     0x1001dd4f
1001dcf6:	push   ebx
1001dcf7:	push   DWORD PTR [esi]
1001dcf9:	call   DWORD PTR ds:0x10065038
1001dcff:	mov    ebx,eax
1001dd01:	test   ebx,ebx
1001dd03:	je     0x1001dd4e
1001dd05:	mov    eax,DWORD PTR [ebp-0x4]
1001dd08:	sub    eax,DWORD PTR [ebp-0xc]
1001dd0b:	push   eax
1001dd0c:	mov    eax,DWORD PTR [ebp-0x8]
1001dd0f:	sub    eax,DWORD PTR [ebp-0x10]
1001dd12:	push   eax
1001dd13:	push   DWORD PTR [esi]
1001dd15:	call   DWORD PTR ds:0x10065034
1001dd1b:	test   eax,eax
1001dd1d:	mov    DWORD PTR [ebp+0x14],eax
1001dd20:	je     0x1001dd37
1001dd22:	push   eax
1001dd23:	push   ebx
1001dd24:	call   DWORD PTR ds:0x1006503c
1001dd2a:	test   eax,eax
1001dd2c:	jne    0x1001dd40
1001dd2e:	push   DWORD PTR [ebp+0x14]
1001dd31:	call   DWORD PTR ds:0x1006504c
1001dd37:	push   ebx
1001dd38:	call   DWORD PTR ds:0x10065044
1001dd3e:	jmp    0x1001dd4e
1001dd40:	push   eax
1001dd41:	call   DWORD PTR ds:0x1006504c
1001dd47:	mov    eax,DWORD PTR [esi]
1001dd49:	mov    DWORD PTR [edi+0x2c],eax
1001dd4c:	mov    DWORD PTR [esi],ebx
1001dd4e:	pop    ebx
1001dd4f:	test   BYTE PTR [ebp+0x10],0x2
1001dd53:	je     0x1001dd63
1001dd55:	push   0x6
1001dd57:	lea    eax,[ebp-0x10]
1001dd5a:	push   eax
1001dd5b:	push   DWORD PTR [esi]
1001dd5d:	call   DWORD PTR ds:0x100652e8
1001dd63:	xor    eax,eax
1001dd65:	pop    edi
1001dd66:	pop    esi
1001dd67:	leave  
1001dd68:	ret    0x10
1001dd6b:	push   ebp
1001dd6c:	mov    ebp,esp
1001dd6e:	sub    esp,0x10
1001dd71:	push   esi
1001dd72:	mov    esi,DWORD PTR [ebp+0x8]
1001dd75:	cmp    DWORD PTR [esi+0x2c],0x0
1001dd79:	mov    BYTE PTR [esi+0x30],0x1
1001dd7d:	je     0x1001ddc3
1001dd7f:	lea    eax,[ebp-0x10]
1001dd82:	push   eax
1001dd83:	push   DWORD PTR [esi-0x28]
1001dd86:	call   DWORD PTR ds:0x100652cc
1001dd8c:	mov    eax,DWORD PTR [ebp-0x4]
1001dd8f:	sub    eax,DWORD PTR [ebp-0xc]
1001dd92:	push   0xcc0020
1001dd97:	push   0x0
1001dd99:	push   0x0
1001dd9b:	push   DWORD PTR [ebp+0xc]
1001dd9e:	push   eax
1001dd9f:	mov    eax,DWORD PTR [ebp-0x8]
1001dda2:	sub    eax,DWORD PTR [ebp-0x10]
1001dda5:	push   eax
1001dda6:	push   DWORD PTR [ebp-0xc]
1001dda9:	push   DWORD PTR [ebp-0x10]
1001ddac:	push   DWORD PTR [esi+0x2c]
1001ddaf:	call   DWORD PTR ds:0x10065040
1001ddb5:	push   DWORD PTR [ebp+0xc]
1001ddb8:	call   DWORD PTR ds:0x10065044
1001ddbe:	mov    eax,DWORD PTR [esi+0x2c]
1001ddc1:	jmp    0x1001ddc6
1001ddc3:	mov    eax,DWORD PTR [ebp+0xc]
1001ddc6:	push   eax
1001ddc7:	push   DWORD PTR [esi-0x28]
1001ddca:	call   DWORD PTR ds:0x10065358
1001ddd0:	xor    eax,eax
1001ddd2:	pop    esi
1001ddd3:	leave  
1001ddd4:	ret    0x8
1001ddd7:	push   DWORD PTR [esp+0xc]
1001dddb:	mov    eax,DWORD PTR [esp+0x8]
1001dddf:	push   DWORD PTR [esp+0xc]
1001dde3:	push   DWORD PTR [eax-0x28]
1001dde6:	call   DWORD PTR ds:0x1006530c
1001ddec:	xor    eax,eax
1001ddee:	ret    0xc
1001ddf1:	push   DWORD PTR [esp+0xc]
1001ddf5:	mov    eax,DWORD PTR [esp+0x8]
1001ddf9:	push   DWORD PTR [esp+0xc]
1001ddfd:	push   DWORD PTR [eax-0x28]
1001de00:	call   DWORD PTR ds:0x100652d4
1001de06:	xor    eax,eax
1001de08:	ret    0xc
1001de0b:	xor    eax,eax
1001de0d:	ret    0x14
1001de10:	push   ebp
1001de11:	mov    ebp,esp
1001de13:	push   DWORD PTR [ebp+0x14]
1001de16:	mov    eax,DWORD PTR [ebp+0x8]
1001de19:	push   DWORD PTR [ebp+0x10]
1001de1c:	push   DWORD PTR [ebp+0xc]
1001de1f:	push   DWORD PTR [eax-0x28]
1001de22:	push   DWORD PTR [eax-0xc]
1001de25:	call   DWORD PTR ds:0x10065340
1001de2b:	mov    ecx,DWORD PTR [ebp+0x18]
1001de2e:	mov    DWORD PTR [ecx],eax
1001de30:	xor    eax,eax
1001de32:	pop    ebp
1001de33:	ret    0x14
1001de36:	cmp    DWORD PTR [esp+0x8],0x0
1001de3b:	jne    0x1001de44
1001de3d:	mov    eax,0x80004003
1001de42:	jmp    0x1001de59
1001de44:	push   DWORD PTR [esp+0x8]
1001de48:	mov    eax,DWORD PTR [esp+0x8]
1001de4c:	mov    eax,DWORD PTR [eax+0x34]
1001de4f:	mov    ecx,DWORD PTR [eax]
1001de51:	push   0x1006c93c
1001de56:	push   eax
1001de57:	call   DWORD PTR [ecx]
1001de59:	ret    0x8
1001de5c:	mov    eax,DWORD PTR [esp+0x4]
1001de60:	mov    ecx,DWORD PTR [esp+0x8]
1001de64:	shl    ecx,0x5
1001de67:	xor    ecx,DWORD PTR [eax+0x68]
1001de6a:	and    ecx,0x20
1001de6d:	xor    DWORD PTR [eax+0x68],ecx
1001de70:	xor    eax,eax
1001de72:	ret    0x8
1001de75:	ret    0xc
1001de78:	ret    0x8
1001de7b:	ret    0x4
1001de7e:	mov    eax,0x80004001
1001de83:	ret    0x14
1001de86:	push   0xc
1001de88:	mov    eax,0x1005e597
1001de8d:	call   0x10058878
1001de92:	mov    eax,DWORD PTR [ebp+0x10]
1001de95:	xor    esi,esi
1001de97:	cmp    eax,esi
1001de99:	jne    0x1001dea2
1001de9b:	mov    eax,0x80004003
1001dea0:	jmp    0x1001df1f
1001dea2:	push   0x1c
1001dea4:	mov    DWORD PTR [eax],esi
1001dea6:	mov    DWORD PTR [ebp-0x18],esi
1001dea9:	mov    DWORD PTR [ebp-0x4],esi
1001deac:	call   0x1004239e
1001deb1:	cmp    eax,esi
1001deb3:	pop    ecx
1001deb4:	je     0x1001debf
1001deb6:	mov    esi,eax
1001deb8:	call   0x1001fe40
1001debd:	mov    esi,eax
1001debf:	or     DWORD PTR [ebp-0x4],0xffffffff
1001dec3:	jmp    0x1001dece
1001dec5:	mov    eax,0x1001decb
1001deca:	ret    
1001decb:	mov    esi,DWORD PTR [ebp-0x18]
1001dece:	test   esi,esi
1001ded0:	jne    0x1001ded9
1001ded2:	mov    eax,0x8007000e
1001ded7:	jmp    0x1001df1f
1001ded9:	mov    eax,DWORD PTR [ebp+0x8]
1001dedc:	mov    ecx,DWORD PTR [eax+0x2c]
1001dedf:	mov    DWORD PTR [ebp-0x14],ecx
1001dee2:	lea    ecx,[eax-0x34]
1001dee5:	mov    eax,DWORD PTR [ecx]
1001dee7:	push   0x3
1001dee9:	call   DWORD PTR [eax+0x10]
1001deec:	push   eax
1001deed:	lea    eax,[ebp-0x10]
1001def0:	push   eax
1001def1:	lea    eax,[ebp-0x14]
1001def4:	push   eax
1001def5:	push   esi
1001def6:	call   0x1002444e
1001defb:	mov    edi,eax
1001defd:	test   edi,edi
1001deff:	jl     0x1001df14
1001df01:	push   DWORD PTR [ebp+0x10]
1001df04:	mov    eax,DWORD PTR [esi]
1001df06:	push   0x1006ee88
1001df0b:	push   esi
1001df0c:	call   DWORD PTR [eax]
1001df0e:	mov    edi,eax
1001df10:	test   edi,edi
1001df12:	jge    0x1001df1d
1001df14:	mov    eax,DWORD PTR [esi]
1001df16:	push   0x1
1001df18:	mov    ecx,esi
1001df1a:	call   DWORD PTR [eax+0x1c]
1001df1d:	mov    eax,edi
1001df1f:	call   0x1005891d
1001df24:	ret    0xc
1001df27:	mov    eax,DWORD PTR [esp+0x4]
1001df2b:	mov    ecx,DWORD PTR [esp+0x8]
1001df2f:	shl    ecx,0x7
1001df32:	xor    ecx,DWORD PTR [eax+0x64]
1001df35:	and    ecx,0x80
1001df3b:	xor    DWORD PTR [eax+0x64],ecx
1001df3e:	xor    eax,eax
1001df40:	ret    0x8
1001df43:	push   0x18
1001df45:	mov    eax,0x1005e803
1001df4a:	call   0x10058845
1001df4f:	mov    ebx,ecx
1001df51:	mov    esi,DWORD PTR [ebp+0x8]
1001df54:	test   esi,esi
1001df56:	jne    0x1001df5f
1001df58:	xor    eax,eax
1001df5a:	jmp    0x1001e32e
1001df5f:	lea    eax,[ebx+0x60]
1001df62:	cmp    DWORD PTR [eax],esi
1001df64:	mov    DWORD PTR [ebp-0x24],eax
1001df67:	je     0x1001df74
1001df69:	mov    edi,esi
1001df6b:	mov    esi,eax
1001df6d:	call   0x10007188
1001df72:	mov    esi,edi
1001df74:	mov    eax,DWORD PTR [esi]
1001df76:	and    DWORD PTR [ebp-0x10],0x0
1001df7a:	lea    edi,[ebx+0x64]
1001df7d:	push   edi
1001df7e:	push   0x1006f6b8
1001df83:	push   esi
1001df84:	call   DWORD PTR [eax]
1001df86:	mov    eax,DWORD PTR [edi]
1001df88:	test   eax,eax
1001df8a:	je     0x1001e2e8
1001df90:	mov    ecx,DWORD PTR [eax]
1001df92:	lea    esi,[ebx+0xa0]
1001df98:	push   esi
1001df99:	push   0x1
1001df9b:	push   eax
1001df9c:	mov    DWORD PTR [ebp-0x20],esi
1001df9f:	call   DWORD PTR [ecx+0x58]
1001dfa2:	test   DWORD PTR [esi],0x20000
1001dfa8:	je     0x1001dfe9
1001dfaa:	mov    eax,DWORD PTR [ebx]
1001dfac:	mov    ecx,ebx
1001dfae:	call   DWORD PTR [eax+0x10]
1001dfb1:	xor    esi,esi
1001dfb3:	cmp    eax,esi
1001dfb5:	mov    DWORD PTR [ebp-0x18],esi
1001dfb8:	je     0x1001dfc8
1001dfba:	mov    ecx,DWORD PTR [eax]
1001dfbc:	lea    edx,[ebp-0x18]
1001dfbf:	push   edx
1001dfc0:	push   0x1006ef98
1001dfc5:	push   eax
1001dfc6:	call   DWORD PTR [ecx]
1001dfc8:	mov    DWORD PTR [ebp-0x4],esi
1001dfcb:	mov    eax,DWORD PTR [edi]
1001dfcd:	push   DWORD PTR [ebp-0x18]
1001dfd0:	mov    ecx,DWORD PTR [eax]
1001dfd2:	push   eax
1001dfd3:	call   DWORD PTR [ecx+0xc]
1001dfd6:	or     DWORD PTR [ebp-0x4],0xffffffff
1001dfda:	mov    eax,DWORD PTR [ebp-0x18]
1001dfdd:	cmp    eax,esi
1001dfdf:	je     0x1001dfeb
1001dfe1:	mov    ecx,DWORD PTR [eax]
1001dfe3:	push   eax
1001dfe4:	call   DWORD PTR [ecx+0x8]
1001dfe7:	jmp    0x1001dfeb
1001dfe9:	xor    esi,esi
1001dfeb:	cmp    BYTE PTR [ebp+0xc],0x0
1001dfef:	jne    0x1001e0d6
1001dff5:	mov    eax,DWORD PTR [edi]
1001dff7:	cmp    eax,esi
1001dff9:	mov    DWORD PTR [ebp+0xc],esi
1001dffc:	je     0x1001e00c
1001dffe:	mov    ecx,DWORD PTR [eax]
1001e000:	lea    edx,[ebp+0xc]
1001e003:	push   edx
1001e004:	push   0x1006f5f8
1001e009:	push   eax
1001e00a:	call   DWORD PTR [ecx]
1001e00c:	mov    DWORD PTR [ebp-0x4],0x1
1001e013:	mov    eax,DWORD PTR [ebp+0xc]
1001e016:	cmp    eax,esi
1001e018:	je     0x1001e033
1001e01a:	cmp    DWORD PTR [ebp+0x10],esi
1001e01d:	mov    ecx,DWORD PTR [eax]
1001e01f:	je     0x1001e02a
1001e021:	push   DWORD PTR [ebp+0x10]
1001e024:	push   eax
1001e025:	call   DWORD PTR [ecx+0x14]
1001e028:	jmp    0x1001e02e
1001e02a:	push   eax
1001e02b:	call   DWORD PTR [ecx+0x20]
1001e02e:	mov    DWORD PTR [ebp-0x10],eax
1001e031:	jmp    0x1001e07d
1001e033:	cmp    DWORD PTR [ebp+0x10],esi
1001e036:	je     0x1001e0c8
1001e03c:	mov    ecx,DWORD PTR [edi]
1001e03e:	xor    eax,eax
1001e040:	cmp    ecx,esi
1001e042:	mov    DWORD PTR [ebp-0x18],eax
1001e045:	je     0x1001e058
1001e047:	mov    eax,DWORD PTR [ecx]
1001e049:	lea    edx,[ebp-0x18]
1001e04c:	push   edx
1001e04d:	push   0x1006f5e8
1001e052:	push   ecx
1001e053:	call   DWORD PTR [eax]
1001e055:	mov    eax,DWORD PTR [ebp-0x18]
1001e058:	cmp    eax,esi
1001e05a:	mov    BYTE PTR [ebp-0x4],0x2
1001e05e:	je     0x1001e06f
1001e060:	push   DWORD PTR [ebp+0x10]
1001e063:	mov    ecx,DWORD PTR [eax]
1001e065:	push   eax
1001e066:	call   DWORD PTR [ecx+0x14]
1001e069:	mov    DWORD PTR [ebp-0x10],eax
1001e06c:	mov    eax,DWORD PTR [ebp-0x18]
1001e06f:	cmp    eax,esi
1001e071:	mov    BYTE PTR [ebp-0x4],0x1
1001e075:	je     0x1001e07d
1001e077:	mov    ecx,DWORD PTR [eax]
1001e079:	push   eax
1001e07a:	call   DWORD PTR [ecx+0x8]
1001e07d:	cmp    DWORD PTR [ebp-0x10],esi
1001e080:	jge    0x1001e0c5
1001e082:	mov    ebx,DWORD PTR [ebp-0x20]
1001e085:	test   DWORD PTR [ebx],0x20000
1001e08b:	je     0x1001e096
1001e08d:	mov    eax,DWORD PTR [edi]
1001e08f:	mov    ecx,DWORD PTR [eax]
1001e091:	push   esi
1001e092:	push   eax
1001e093:	call   DWORD PTR [ecx+0xc]
1001e096:	mov    DWORD PTR [ebx],esi
1001e098:	mov    eax,DWORD PTR [edi]
1001e09a:	cmp    eax,esi
1001e09c:	je     0x1001e0a6
1001e09e:	mov    DWORD PTR [edi],esi
1001e0a0:	mov    ecx,DWORD PTR [eax]
1001e0a2:	push   eax
1001e0a3:	call   DWORD PTR [ecx+0x8]
1001e0a6:	mov    ecx,DWORD PTR [ebp-0x24]
1001e0a9:	mov    eax,DWORD PTR [ecx]
1001e0ab:	cmp    eax,esi
1001e0ad:	je     0x1001e0b7
1001e0af:	mov    DWORD PTR [ecx],esi
1001e0b1:	mov    ecx,DWORD PTR [eax]
1001e0b3:	push   eax
1001e0b4:	call   DWORD PTR [ecx+0x8]
1001e0b7:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e0bb:	mov    eax,DWORD PTR [ebp+0xc]
1001e0be:	cmp    eax,esi
1001e0c0:	jmp    0x1001e323
1001e0c5:	mov    eax,DWORD PTR [ebp+0xc]
1001e0c8:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e0cc:	cmp    eax,esi
1001e0ce:	je     0x1001e0d6
1001e0d0:	mov    ecx,DWORD PTR [eax]
1001e0d2:	push   eax
1001e0d3:	call   DWORD PTR [ecx+0x8]
1001e0d6:	mov    eax,DWORD PTR [ebp-0x20]
1001e0d9:	test   DWORD PTR [eax],0x20000
1001e0df:	jne    0x1001e120
1001e0e1:	mov    eax,DWORD PTR [ebx]
1001e0e3:	mov    ecx,ebx
1001e0e5:	call   DWORD PTR [eax+0x10]
1001e0e8:	cmp    eax,esi
1001e0ea:	mov    DWORD PTR [ebp+0xc],esi
1001e0ed:	je     0x1001e0fd
1001e0ef:	mov    ecx,DWORD PTR [eax]
1001e0f1:	lea    edx,[ebp+0xc]
1001e0f4:	push   edx
1001e0f5:	push   0x1006ef98
1001e0fa:	push   eax
1001e0fb:	call   DWORD PTR [ecx]
1001e0fd:	mov    DWORD PTR [ebp-0x4],0x3
1001e104:	mov    eax,DWORD PTR [edi]
1001e106:	push   DWORD PTR [ebp+0xc]
1001e109:	mov    ecx,DWORD PTR [eax]
1001e10b:	push   eax
1001e10c:	call   DWORD PTR [ecx+0xc]
1001e10f:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e113:	mov    eax,DWORD PTR [ebp+0xc]
1001e116:	cmp    eax,esi
1001e118:	je     0x1001e120
1001e11a:	mov    ecx,DWORD PTR [eax]
1001e11c:	push   eax
1001e11d:	call   DWORD PTR [ecx+0x8]
1001e120:	mov    eax,DWORD PTR [edi]
1001e122:	mov    DWORD PTR [ebx+0x90],esi
1001e128:	mov    ecx,DWORD PTR [eax]
1001e12a:	lea    esi,[ebx+0x70]
1001e12d:	push   esi
1001e12e:	push   0x1006f6c8
1001e133:	push   eax
1001e134:	call   DWORD PTR [ecx]
1001e136:	test   eax,eax
1001e138:	mov    DWORD PTR [ebp-0x10],eax
1001e13b:	jge    0x1001e15d
1001e13d:	mov    eax,DWORD PTR [edi]
1001e13f:	mov    ecx,DWORD PTR [eax]
1001e141:	push   esi
1001e142:	push   0x1006f6d8
1001e147:	push   eax
1001e148:	call   DWORD PTR [ecx]
1001e14a:	test   eax,eax
1001e14c:	mov    DWORD PTR [ebp-0x10],eax
1001e14f:	jl     0x1001e169
1001e151:	mov    DWORD PTR [ebx+0x90],0x3
1001e15b:	jmp    0x1001e187
1001e15d:	mov    DWORD PTR [ebx+0x90],0x7
1001e167:	jmp    0x1001e187
1001e169:	mov    eax,DWORD PTR [edi]
1001e16b:	mov    ecx,DWORD PTR [eax]
1001e16d:	push   esi
1001e16e:	push   0x1006f6e8
1001e173:	push   eax
1001e174:	call   DWORD PTR [ecx]
1001e176:	test   eax,eax
1001e178:	mov    DWORD PTR [ebp-0x10],eax
1001e17b:	jl     0x1001e187
1001e17d:	mov    DWORD PTR [ebx+0x90],0x1
1001e187:	mov    eax,DWORD PTR [ebx]
1001e189:	mov    ecx,ebx
1001e18b:	call   DWORD PTR [eax+0x10]
1001e18e:	and    DWORD PTR [ebp-0x14],0x0
1001e192:	test   eax,eax
1001e194:	je     0x1001e1a4
1001e196:	mov    ecx,DWORD PTR [eax]
1001e198:	lea    edx,[ebp-0x14]
1001e19b:	push   edx
1001e19c:	push   0x1006eee8
1001e1a1:	push   eax
1001e1a2:	call   DWORD PTR [ecx]
1001e1a4:	lea    edx,[ebx+0x9c]
1001e1aa:	mov    DWORD PTR [ebp-0x4],0x4
1001e1b1:	mov    eax,DWORD PTR [edi]
1001e1b3:	mov    ecx,DWORD PTR [eax]
1001e1b5:	push   edx
1001e1b6:	push   DWORD PTR [ebp-0x14]
1001e1b9:	push   eax
1001e1ba:	call   DWORD PTR [ecx+0x4c]
1001e1bd:	mov    esi,DWORD PTR [esi]
1001e1bf:	test   esi,esi
1001e1c1:	je     0x1001e1d0
1001e1c3:	push   DWORD PTR [ebp-0x14]
1001e1c6:	mov    eax,DWORD PTR [esi]
1001e1c8:	push   0x0
1001e1ca:	push   0x1
1001e1cc:	push   esi
1001e1cd:	call   DWORD PTR [eax+0x1c]
1001e1d0:	mov    edi,DWORD PTR [edi]
1001e1d2:	mov    eax,DWORD PTR [edi]
1001e1d4:	push   0x0
1001e1d6:	push   0x1006f19c
1001e1db:	push   edi
1001e1dc:	call   DWORD PTR [eax+0x14]
1001e1df:	test   WORD PTR [ebx+0xa0],0x400
1001e1e8:	jne    0x1001e2d4
1001e1ee:	lea    esi,[ebx+0xb4]
1001e1f4:	push   esi
1001e1f5:	push   DWORD PTR [ebx+0x4]
1001e1f8:	call   DWORD PTR ds:0x100652cc
1001e1fe:	mov    eax,DWORD PTR [ebx+0xbc]
1001e204:	sub    eax,DWORD PTR [esi]
1001e206:	lea    edi,[ebx+0xac]
1001e20c:	mov    DWORD PTR [edi],eax
1001e20e:	mov    eax,DWORD PTR [ebx+0xc0]
1001e214:	sub    eax,DWORD PTR [ebx+0xb8]
1001e21a:	lea    esi,[ebx+0xa4]
1001e220:	mov    DWORD PTR [ebx+0xb0],eax
1001e226:	call   0x1001ba18
1001e22b:	mov    eax,DWORD PTR [ebx+0x64]
1001e22e:	mov    ecx,DWORD PTR [eax]
1001e230:	lea    edi,[ebx+0xa4]
1001e236:	push   edi
1001e237:	push   0x1
1001e239:	push   eax
1001e23a:	call   DWORD PTR [ecx+0x44]
1001e23d:	mov    eax,DWORD PTR [ebx+0x64]
1001e240:	mov    ecx,DWORD PTR [eax]
1001e242:	push   edi
1001e243:	push   0x1
1001e245:	push   eax
1001e246:	call   DWORD PTR [ecx+0x48]
1001e249:	lea    esi,[ebx+0xac]
1001e24f:	call   0x1001b9af
1001e254:	mov    eax,DWORD PTR [ebx+0xac]
1001e25a:	lea    esi,[ebx+0xb4]
1001e260:	add    eax,DWORD PTR [esi]
1001e262:	mov    ecx,ebx
1001e264:	mov    DWORD PTR [ebx+0xbc],eax
1001e26a:	mov    eax,DWORD PTR [ebx+0xb0]
1001e270:	add    eax,DWORD PTR [ebx+0xb8]
1001e276:	mov    DWORD PTR [ebx+0xc0],eax
1001e27c:	mov    eax,DWORD PTR [ebx]
1001e27e:	call   DWORD PTR [eax+0x10]
1001e281:	xor    edi,edi
1001e283:	cmp    eax,edi
1001e285:	mov    DWORD PTR [ebp+0x10],edi
1001e288:	je     0x1001e298
1001e28a:	mov    ecx,DWORD PTR [eax]
1001e28c:	lea    edx,[ebp+0x10]
1001e28f:	push   edx
1001e290:	push   0x1006ef98
1001e295:	push   eax
1001e296:	call   DWORD PTR [ecx]
1001e298:	push   esi
1001e299:	mov    BYTE PTR [ebp-0x4],0x5
1001e29d:	push   DWORD PTR [ebx+0x4]
1001e2a0:	mov    eax,DWORD PTR [ebx+0x64]
1001e2a3:	mov    ecx,DWORD PTR [eax]
1001e2a5:	push   edi
1001e2a6:	push   DWORD PTR [ebp+0x10]
1001e2a9:	push   edi
1001e2aa:	push   0xfffffffb
1001e2ac:	push   eax
1001e2ad:	call   DWORD PTR [ecx+0x2c]
1001e2b0:	push   0x507
1001e2b5:	push   edi
1001e2b6:	push   edi
1001e2b7:	push   DWORD PTR [ebx+0x4]
1001e2ba:	mov    DWORD PTR [ebp-0x10],eax
1001e2bd:	call   DWORD PTR ds:0x10065318
1001e2c3:	mov    BYTE PTR [ebp-0x4],0x4
1001e2c7:	mov    eax,DWORD PTR [ebp+0x10]
1001e2ca:	cmp    eax,edi
1001e2cc:	je     0x1001e2d4
1001e2ce:	mov    ecx,DWORD PTR [eax]
1001e2d0:	push   eax
1001e2d1:	call   DWORD PTR [ecx+0x8]
1001e2d4:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e2d8:	mov    eax,DWORD PTR [ebp-0x14]
1001e2db:	test   eax,eax
1001e2dd:	je     0x1001e2e5
1001e2df:	mov    ecx,DWORD PTR [eax]
1001e2e1:	push   eax
1001e2e2:	call   DWORD PTR [ecx+0x8]
1001e2e5:	mov    esi,DWORD PTR [ebp+0x8]
1001e2e8:	and    DWORD PTR [ebp-0x1c],0x0
1001e2ec:	lea    ecx,[ebp-0x1c]
1001e2ef:	push   ecx
1001e2f0:	push   0x1006ef38
1001e2f5:	mov    DWORD PTR [ebp-0x4],0x6
1001e2fc:	mov    eax,DWORD PTR [esi]
1001e2fe:	push   esi
1001e2ff:	call   DWORD PTR [eax]
1001e301:	mov    eax,DWORD PTR [ebp-0x1c]
1001e304:	test   eax,eax
1001e306:	je     0x1001e31d
1001e308:	mov    edi,DWORD PTR [eax]
1001e30a:	mov    esi,eax
1001e30c:	mov    eax,DWORD PTR [ebx]
1001e30e:	mov    ecx,ebx
1001e310:	add    edi,0xc
1001e313:	call   DWORD PTR [eax+0x10]
1001e316:	push   eax
1001e317:	push   esi
1001e318:	call   DWORD PTR [edi]
1001e31a:	mov    eax,DWORD PTR [ebp-0x1c]
1001e31d:	or     DWORD PTR [ebp-0x4],0xffffffff
1001e321:	test   eax,eax
1001e323:	je     0x1001e32b
1001e325:	mov    ecx,DWORD PTR [eax]
1001e327:	push   eax
1001e328:	call   DWORD PTR [ecx+0x8]
1001e32b:	mov    eax,DWORD PTR [ebp-0x10]
1001e32e:	call   0x1005891d
1001e333:	ret    0xc
1001e336:	mov    eax,DWORD PTR [esi]
1001e338:	push   edi
1001e339:	push   esi
1001e33a:	mov    ecx,esi
1001e33c:	call   DWORD PTR [eax+0x8]
1001e33f:	lea    edi,[esi+0x8]
1001e342:	call   0x1001b967
1001e347:	test   eax,eax
1001e349:	pop    edi
1001e34a:	jne    0x1001e350
1001e34c:	xor    eax,eax
1001e34e:	jmp    0x1001e369
1001e350:	push   DWORD PTR [esi+0x14]
1001e353:	push   0xfffffffc
1001e355:	push   ebx
1001e356:	call   DWORD PTR ds:0x100652d8
1001e35c:	test   eax,eax
1001e35e:	je     0x1001e34c
1001e360:	mov    DWORD PTR [esi+0x20],eax
1001e363:	xor    eax,eax
1001e365:	mov    DWORD PTR [esi+0x4],ebx
1001e368:	inc    eax
1001e369:	lea    ecx,[esi+0xc8]
1001e36f:	shl    eax,0x4
1001e372:	xor    eax,DWORD PTR [ecx]
1001e374:	and    eax,0x10
1001e377:	xor    DWORD PTR [ecx],eax
1001e379:	ret    
1001e37a:	test   BYTE PTR [esi+0xc8],0x10
1001e381:	je     0x1001e3bd
1001e383:	push   0xfffffffc
1001e385:	push   DWORD PTR [esi+0x4]
1001e388:	call   DWORD PTR ds:0x10065310
1001e38e:	mov    eax,DWORD PTR [esi+0x20]
1001e391:	mov    ecx,DWORD PTR [esi+0x4]
1001e394:	push   eax
1001e395:	push   0xfffffffc
1001e397:	push   ecx
1001e398:	call   DWORD PTR ds:0x100652d8
1001e39e:	test   eax,eax
1001e3a0:	je     0x1001e3c6
1001e3a2:	mov    eax,ds:0x10065344
1001e3a7:	mov    DWORD PTR [esi+0x20],eax
1001e3aa:	mov    eax,DWORD PTR [esi+0x4]
1001e3ad:	and    DWORD PTR [esi+0x4],0x0
1001e3b1:	test   eax,eax
1001e3b3:	je     0x1001e3c6
1001e3b5:	and    DWORD PTR [esi+0xc8],0xffffffef
1001e3bc:	ret    
1001e3bd:	push   DWORD PTR [esi+0x4]
1001e3c0:	call   DWORD PTR ds:0x100652fc
1001e3c6:	ret    
1001e3c7:	push   ebp
1001e3c8:	mov    ebp,esp
1001e3ca:	push   ebx
1001e3cb:	mov    ebx,eax
1001e3cd:	cmp    ebx,0x4e
1001e3d0:	ja     0x1001e434
1001e3d2:	je     0x1001e430
1001e3d4:	cmp    ebx,0x2b
1001e3d7:	je     0x1001e419
1001e3d9:	cmp    ebx,0x2c
1001e3dc:	je     0x1001e40b
1001e3de:	cmp    ebx,0x2d
1001e3e1:	je     0x1001e403
1001e3e3:	jbe    0x1001e4a6
1001e3e9:	cmp    ebx,0x2f
1001e3ec:	jbe    0x1001e4a0
1001e3f2:	cmp    ebx,0x39
1001e3f5:	jne    0x1001e4a6
1001e3fb:	mov    eax,DWORD PTR [esi+0x8]
1001e3fe:	jmp    0x1001e4a2
1001e403:	mov    eax,DWORD PTR [esi+0xc]
1001e406:	jmp    0x1001e4a2
1001e40b:	cmp    DWORD PTR [esi],0x1
1001e40e:	je     0x1001e4a6
1001e414:	push   DWORD PTR [esi+0x4]
1001e417:	jmp    0x1001e491
1001e419:	cmp    DWORD PTR [esi],0x1
1001e41c:	jne    0x1001e42b
1001e41e:	push   DWORD PTR [esi+0x14]
1001e421:	call   DWORD PTR ds:0x10065328
1001e427:	test   eax,eax
1001e429:	je     0x1001e4a6
1001e42b:	mov    eax,DWORD PTR [esi+0x14]
1001e42e:	jmp    0x1001e4a2
1001e430:	mov    eax,DWORD PTR [esi]
1001e432:	jmp    0x1001e4a2
1001e434:	cmp    ebx,0x111
1001e43a:	je     0x1001e49c
1001e43c:	cmp    ebx,0x113
1001e442:	jbe    0x1001e4a6
1001e444:	cmp    ebx,0x115
1001e44a:	jbe    0x1001e4a0
1001e44c:	cmp    ebx,0x131
1001e452:	jbe    0x1001e4a6
1001e454:	cmp    ebx,0x138
1001e45a:	jbe    0x1001e4a0
1001e45c:	cmp    ebx,0x210
1001e462:	jne    0x1001e4a6
1001e464:	mov    eax,DWORD PTR [edi+0x18]
1001e467:	test   eax,eax
1001e469:	je     0x1001e480
1001e46b:	push   DWORD PTR [eax+0xc]
1001e46e:	push   DWORD PTR [eax+0x8]
1001e471:	push   DWORD PTR [eax+0x4]
1001e474:	push   DWORD PTR [edi+0x4]
1001e477:	push   DWORD PTR [edi+0x20]
1001e47a:	call   DWORD PTR ds:0x10065340
1001e480:	movzx  eax,WORD PTR [ebp+0x8]
1001e484:	dec    eax
1001e485:	cmp    eax,0x1
1001e488:	jbe    0x1001e4a0
1001e48a:	mov    eax,DWORD PTR [ebp+0x8]
1001e48d:	shr    eax,0x10
1001e490:	push   eax
1001e491:	push   DWORD PTR [edi+0x4]
1001e494:	call   DWORD PTR ds:0x10065360
1001e49a:	jmp    0x1001e4a2
1001e49c:	test   esi,esi
1001e49e:	je     0x1001e4a6
1001e4a0:	mov    eax,esi
1001e4a2:	test   eax,eax
1001e4a4:	jne    0x1001e4b1
1001e4a6:	mov    eax,DWORD PTR [ebp+0xc]
1001e4a9:	and    DWORD PTR [eax],0x0
1001e4ac:	xor    eax,eax
1001e4ae:	inc    eax
1001e4af:	jmp    0x1001e4f8
1001e4b1:	mov    ecx,DWORD PTR [edi+0x98]
1001e4b7:	test   cl,0x8
1001e4ba:	je     0x1001e4e6
1001e4bc:	and    DWORD PTR [ebp+0xc],0x0
1001e4c0:	test   cl,0x1
1001e4c3:	je     0x1001e4e1
1001e4c5:	mov    eax,DWORD PTR [edi+0x74]
1001e4c8:	test   eax,eax
1001e4ca:	je     0x1001e4e1
1001e4cc:	mov    ecx,DWORD PTR [eax]
1001e4ce:	lea    edx,[ebp+0xc]
1001e4d1:	push   edx
1001e4d2:	push   esi
1001e4d3:	push   DWORD PTR [ebp+0x8]
1001e4d6:	add    ebx,0x2000
1001e4dc:	push   ebx
1001e4dd:	push   eax
1001e4de:	call   DWORD PTR [ecx+0x24]
1001e4e1:	mov    eax,DWORD PTR [ebp+0xc]
1001e4e4:	jmp    0x1001e4f8
1001e4e6:	push   esi
1001e4e7:	push   DWORD PTR [ebp+0x8]
1001e4ea:	add    ebx,0x2000
1001e4f0:	push   ebx
1001e4f1:	push   eax
1001e4f2:	call   DWORD PTR ds:0x10065338
1001e4f8:	pop    ebx
1001e4f9:	pop    ebp
1001e4fa:	ret    0x8
1001e4fd:	mov    edx,DWORD PTR [esp+0x10]
1001e501:	test   edx,edx
1001e503:	jne    0x1001e50c
1001e505:	mov    eax,0x80004003
1001e50a:	jmp    0x1001e531
1001e50c:	and    DWORD PTR [edx],0x0
1001e50f:	mov    ecx,DWORD PTR [esp+0x4]
1001e513:	mov    ecx,DWORD PTR [ecx+0x9c]
1001e519:	test   ecx,ecx
1001e51b:	mov    eax,0x80004002
1001e520:	je     0x1001e531
1001e522:	mov    eax,DWORD PTR [ecx]
1001e524:	push   edx
1001e525:	push   DWORD PTR [esp+0x10]
1001e529:	push   DWORD PTR [esp+0x10]
1001e52d:	push   ecx
1001e52e:	call   DWORD PTR [eax+0xc]
1001e531:	ret    0x10
1001e534:	mov    eax,DWORD PTR [eax]
1001e536:	test   eax,eax
1001e538:	je     0x1001e540
1001e53a:	mov    ecx,DWORD PTR [eax]
1001e53c:	push   eax
1001e53d:	call   DWORD PTR [ecx+0x8]
1001e540:	ret    
1001e541:	push   0x1c
1001e543:	mov    eax,0x1005f03e
1001e548:	call   0x100588ae
1001e54d:	mov    eax,DWORD PTR [ebp+0xc]
1001e550:	dec    eax
1001e551:	je     0x1001e5c3
1001e553:	sub    eax,0x81
1001e558:	je     0x1001e5a3
1001e55a:	sub    eax,0x18e
1001e55f:	jne    0x1001e73f
1001e565:	cmp    DWORD PTR [ebp+0x10],0x1
1001e569:	jne    0x1001e73f
1001e56f:	mov    esi,DWORD PTR ds:0x10065310
1001e575:	push   0xffffffec
1001e577:	push   DWORD PTR [ebp+0x14]
1001e57a:	call   esi
1001e57c:	mov    ebx,0x10000
1001e581:	test   ebx,eax
1001e583:	je     0x1001e73f
1001e589:	push   0xffffffec
1001e58b:	push   DWORD PTR [ebp+0x8]
1001e58e:	call   esi
1001e590:	or     eax,ebx
1001e592:	push   eax
1001e593:	push   0xffffffec
1001e595:	push   DWORD PTR [ebp+0x8]
1001e598:	call   DWORD PTR ds:0x100652d8
1001e59e:	jmp    0x1001e73f
1001e5a3:	push   0xffffffeb
1001e5a5:	push   DWORD PTR [ebp+0x8]
1001e5a8:	call   DWORD PTR ds:0x10065310
1001e5ae:	test   eax,eax
1001e5b0:	je     0x1001e5b8
1001e5b2:	mov    ecx,DWORD PTR [eax]
1001e5b4:	push   eax
1001e5b5:	call   DWORD PTR [ecx+0x8]
1001e5b8:	call   DWORD PTR ds:0x1006540c
1001e5be:	jmp    0x1001e73f
1001e5c3:	xor    edi,edi
1001e5c5:	push   edi
1001e5c6:	call   DWORD PTR ds:0x10065410
1001e5cc:	push   DWORD PTR [ebp+0x8]
1001e5cf:	call   DWORD PTR ds:0x100652f8
1001e5d5:	mov    esi,eax
1001e5d7:	lea    eax,[esi+esi*1+0xa]
1001e5db:	cmp    eax,0x400
1001e5e0:	ja     0x1001e5f5
1001e5e2:	call   0x10049010
1001e5e7:	mov    eax,esp
1001e5e9:	cmp    eax,edi
1001e5eb:	je     0x1001e609
1001e5ed:	mov    DWORD PTR [eax],0xcccc
1001e5f3:	jmp    0x1001e606
1001e5f5:	push   eax
1001e5f6:	call   0x10043cdd
1001e5fb:	cmp    eax,edi
1001e5fd:	pop    ecx
1001e5fe:	je     0x1001e609
1001e600:	mov    DWORD PTR [eax],0xdddd
1001e606:	add    eax,0x8
1001e609:	mov    DWORD PTR [ebp-0x1c],eax
1001e60c:	mov    DWORD PTR [ebp-0x24],eax
1001e60f:	cmp    eax,edi
1001e611:	mov    DWORD PTR [ebp-0x4],edi
1001e614:	jne    0x1001e625
1001e616:	push   edi
1001e617:	call   0x1001b117
1001e61c:	pop    ecx
1001e61d:	or     eax,0xffffffff
1001e620:	jmp    0x1001e751
1001e625:	inc    esi
1001e626:	push   esi
1001e627:	push   eax
1001e628:	push   DWORD PTR [ebp+0x8]
1001e62b:	call   DWORD PTR ds:0x10065314
1001e631:	push   0x1006be04
1001e636:	push   DWORD PTR [ebp+0x8]
1001e639:	call   DWORD PTR ds:0x1006533c
1001e63f:	mov    eax,DWORD PTR [ebp+0x14]
1001e642:	xor    esi,esi
1001e644:	cmp    eax,edi
1001e646:	mov    DWORD PTR [ebp-0x20],edi
1001e649:	je     0x1001e654
1001e64b:	mov    eax,DWORD PTR [eax]
1001e64d:	cmp    eax,edi
1001e64f:	je     0x1001e654
1001e651:	movzx  esi,WORD PTR [eax]
1001e654:	push   esi
1001e655:	push   0x42
1001e657:	call   DWORD PTR ds:0x10065148
1001e65d:	mov    ebx,eax
1001e65f:	mov    DWORD PTR [ebp-0x14],edi
1001e662:	cmp    ebx,edi
1001e664:	mov    BYTE PTR [ebp-0x4],0x1
1001e668:	je     0x1001e69c
1001e66a:	cmp    esi,edi
1001e66c:	je     0x1001e69c
1001e66e:	push   ebx
1001e66f:	call   DWORD PTR ds:0x10065144
1001e675:	mov    ecx,DWORD PTR [ebp+0x14]
1001e678:	mov    ecx,DWORD PTR [ecx]
1001e67a:	inc    ecx
1001e67b:	push   esi
1001e67c:	inc    ecx
1001e67d:	push   ecx
1001e67e:	push   esi
1001e67f:	push   eax
1001e680:	call   0x10014024
1001e685:	add    esp,0x10
1001e688:	push   ebx
1001e689:	call   DWORD PTR ds:0x10065154
1001e68f:	lea    eax,[ebp-0x14]
1001e692:	push   eax
1001e693:	push   0x1
1001e695:	push   ebx
1001e696:	call   DWORD PTR ds:0x10065418
1001e69c:	call   DWORD PTR ds:0x1007dfe4
1001e6a2:	mov    DWORD PTR [ebp-0x28],edi
1001e6a5:	mov    DWORD PTR [ebp-0x18],edi
1001e6a8:	push   edi
1001e6a9:	mov    edi,DWORD PTR [ebp-0x1c]
1001e6ac:	mov    BYTE PTR [ebp-0x4],0x3
1001e6b0:	push   DWORD PTR [ebp-0x14]
1001e6b3:	lea    ebx,[ebp-0x18]
1001e6b6:	push   DWORD PTR [ebp+0x8]
1001e6b9:	push   edi
1001e6ba:	call   0x1001e9b4
1001e6bf:	xor    ebx,ebx
1001e6c1:	cmp    eax,ebx
1001e6c3:	jge    0x1001e6ef
1001e6c5:	mov    BYTE PTR [ebp-0x4],0x2
1001e6c9:	mov    eax,DWORD PTR [ebp-0x18]
1001e6cc:	cmp    eax,ebx
1001e6ce:	je     0x1001e6d6
1001e6d0:	mov    ecx,DWORD PTR [eax]
1001e6d2:	push   eax
1001e6d3:	call   DWORD PTR [ecx+0x8]
1001e6d6:	mov    BYTE PTR [ebp-0x4],bl
1001e6d9:	mov    eax,DWORD PTR [ebp-0x14]
1001e6dc:	cmp    eax,ebx
1001e6de:	je     0x1001e616
1001e6e4:	mov    ecx,DWORD PTR [eax]
1001e6e6:	push   eax
1001e6e7:	call   DWORD PTR [ecx+0x8]
1001e6ea:	jmp    0x1001e616
1001e6ef:	mov    esi,DWORD PTR [ebp-0x18]
1001e6f2:	mov    eax,DWORD PTR [esi]
1001e6f4:	lea    ecx,[ebp-0x20]
1001e6f7:	push   ecx
1001e6f8:	push   0x1006efb8
1001e6fd:	push   esi
1001e6fe:	call   DWORD PTR [eax]
1001e700:	cmp    eax,ebx
1001e702:	jge    0x1001e710
1001e704:	mov    BYTE PTR [ebp-0x4],0x2
1001e708:	mov    eax,DWORD PTR [esi]
1001e70a:	push   esi
1001e70b:	call   DWORD PTR [eax+0x8]
1001e70e:	jmp    0x1001e6d6
1001e710:	push   DWORD PTR [ebp-0x20]
1001e713:	push   0xffffffeb
1001e715:	push   DWORD PTR [ebp+0x8]
1001e718:	call   DWORD PTR ds:0x100652d8
1001e71e:	mov    BYTE PTR [ebp-0x4],0x2
1001e722:	mov    eax,DWORD PTR [esi]
1001e724:	push   esi
1001e725:	call   DWORD PTR [eax+0x8]
1001e728:	mov    BYTE PTR [ebp-0x4],bl
1001e72b:	mov    eax,DWORD PTR [ebp-0x14]
1001e72e:	cmp    eax,ebx
1001e730:	je     0x1001e738
1001e732:	mov    ecx,DWORD PTR [eax]
1001e734:	push   eax
1001e735:	call   DWORD PTR [ecx+0x8]
1001e738:	push   edi
1001e739:	call   0x1001b117
1001e73e:	pop    ecx
1001e73f:	push   DWORD PTR [ebp+0x14]
1001e742:	push   DWORD PTR [ebp+0x10]
1001e745:	push   DWORD PTR [ebp+0xc]
1001e748:	push   DWORD PTR [ebp+0x8]
1001e74b:	call   DWORD PTR ds:0x10065344
1001e751:	lea    esp,[ebp-0x38]
1001e754:	call   0x10058931
1001e759:	ret    0x10
1001e75c:	push   0x20
1001e75e:	mov    eax,0x1005eff9
1001e763:	call   0x100588ae
1001e768:	mov    eax,DWORD PTR [ebp+0xc]
1001e76b:	dec    eax
1001e76c:	je     0x1001e7de
1001e76e:	sub    eax,0x81
1001e773:	je     0x1001e7be
1001e775:	sub    eax,0x18e
1001e77a:	jne    0x1001e997
1001e780:	cmp    DWORD PTR [ebp+0x10],0x1
1001e784:	jne    0x1001e997
1001e78a:	mov    esi,DWORD PTR ds:0x10065310
1001e790:	push   0xffffffec
1001e792:	push   DWORD PTR [ebp+0x14]
1001e795:	call   esi
1001e797:	mov    ebx,0x10000
1001e79c:	test   ebx,eax
1001e79e:	je     0x1001e997
1001e7a4:	push   0xffffffec
1001e7a6:	push   DWORD PTR [ebp+0x8]
1001e7a9:	call   esi
1001e7ab:	or     eax,ebx
1001e7ad:	push   eax
1001e7ae:	push   0xffffffec
1001e7b0:	push   DWORD PTR [ebp+0x8]
1001e7b3:	call   DWORD PTR ds:0x100652d8
1001e7b9:	jmp    0x1001e997
1001e7be:	push   0xffffffeb
1001e7c0:	push   DWORD PTR [ebp+0x8]
1001e7c3:	call   DWORD PTR ds:0x10065310
1001e7c9:	test   eax,eax
1001e7cb:	je     0x1001e7d3
1001e7cd:	mov    ecx,DWORD PTR [eax]
1001e7cf:	push   eax
1001e7d0:	call   DWORD PTR [ecx+0x8]
1001e7d3:	call   DWORD PTR ds:0x1006540c
1001e7d9:	jmp    0x1001e997
1001e7de:	xor    edi,edi
1001e7e0:	push   edi
1001e7e1:	call   DWORD PTR ds:0x10065410
1001e7e7:	push   DWORD PTR [ebp+0x8]
1001e7ea:	call   DWORD PTR ds:0x100652f8
1001e7f0:	mov    esi,eax
1001e7f2:	lea    eax,[esi+esi*1+0xa]
1001e7f6:	cmp    eax,0x400
1001e7fb:	ja     0x1001e810
1001e7fd:	call   0x10049010
1001e802:	mov    eax,esp
1001e804:	cmp    eax,edi
1001e806:	je     0x1001e824
1001e808:	mov    DWORD PTR [eax],0xcccc
1001e80e:	jmp    0x1001e821
1001e810:	push   eax
1001e811:	call   0x10043cdd
1001e816:	cmp    eax,edi
1001e818:	pop    ecx
1001e819:	je     0x1001e824
1001e81b:	mov    DWORD PTR [eax],0xdddd
1001e821:	add    eax,0x8
1001e824:	mov    DWORD PTR [ebp-0x18],eax
1001e827:	mov    DWORD PTR [ebp-0x28],eax
1001e82a:	cmp    eax,edi
1001e82c:	mov    DWORD PTR [ebp-0x4],edi
1001e82f:	jne    0x1001e840
1001e831:	push   edi
1001e832:	call   0x1001b117
1001e837:	pop    ecx
1001e838:	or     eax,0xffffffff
1001e83b:	jmp    0x1001e9a9
1001e840:	inc    esi
1001e841:	push   esi
1001e842:	push   eax
1001e843:	push   DWORD PTR [ebp+0x8]
1001e846:	call   DWORD PTR ds:0x10065314
1001e84c:	push   0x1006be04
1001e851:	push   DWORD PTR [ebp+0x8]
1001e854:	call   DWORD PTR ds:0x1006533c
1001e85a:	mov    eax,DWORD PTR [ebp+0x14]
1001e85d:	xor    ebx,ebx
1001e85f:	cmp    eax,edi
1001e861:	mov    DWORD PTR [ebp-0x24],edi
1001e864:	je     0x1001e86f
1001e866:	mov    eax,DWORD PTR [eax]
1001e868:	cmp    eax,edi
1001e86a:	je     0x1001e86f
1001e86c:	movzx  ebx,WORD PTR [eax]
1001e86f:	push   ebx
1001e870:	push   0x42
1001e872:	call   DWORD PTR ds:0x10065148
1001e878:	mov    esi,eax
1001e87a:	mov    DWORD PTR [ebp-0x14],edi
1001e87d:	cmp    esi,edi
1001e87f:	mov    BYTE PTR [ebp-0x4],0x1
1001e883:	je     0x1001e8b7
1001e885:	cmp    ebx,edi
1001e887:	je     0x1001e8b7
1001e889:	push   esi
1001e88a:	call   DWORD PTR ds:0x10065144
1001e890:	mov    ecx,DWORD PTR [ebp+0x14]
1001e893:	mov    ecx,DWORD PTR [ecx]
1001e895:	inc    ecx
1001e896:	push   ebx
1001e897:	inc    ecx
1001e898:	push   ecx
1001e899:	push   ebx
1001e89a:	push   eax
1001e89b:	call   0x10014024
1001e8a0:	add    esp,0x10
1001e8a3:	push   esi
1001e8a4:	call   DWORD PTR ds:0x10065154
1001e8aa:	lea    eax,[ebp-0x14]
1001e8ad:	push   eax
1001e8ae:	push   0x1
1001e8b0:	push   esi
1001e8b1:	call   DWORD PTR ds:0x10065418
1001e8b7:	mov    DWORD PTR [ebp-0x20],edi
1001e8ba:	lea    eax,[ebp-0x20]
1001e8bd:	mov    BYTE PTR [ebp-0x4],0x2
1001e8c1:	mov    ecx,DWORD PTR [ebp-0x14]
1001e8c4:	push   eax
1001e8c5:	call   0x1001b788
1001e8ca:	cmp    eax,edi
1001e8cc:	pop    ecx
1001e8cd:	jge    0x1001e8f1
1001e8cf:	push   DWORD PTR [ebp-0x20]
1001e8d2:	call   DWORD PTR ds:0x100652b4
1001e8d8:	mov    BYTE PTR [ebp-0x4],0x0
1001e8dc:	mov    eax,DWORD PTR [ebp-0x14]
1001e8df:	cmp    eax,edi
1001e8e1:	je     0x1001e8e9
1001e8e3:	mov    ecx,DWORD PTR [eax]
1001e8e5:	push   eax
1001e8e6:	call   DWORD PTR [ecx+0x8]
1001e8e9:	push   DWORD PTR [ebp-0x18]
1001e8ec:	jmp    0x1001e832
1001e8f1:	call   DWORD PTR ds:0x1007dfe4
1001e8f7:	mov    DWORD PTR [ebp-0x2c],edi
1001e8fa:	mov    DWORD PTR [ebp-0x1c],edi
1001e8fd:	mov    BYTE PTR [ebp-0x4],0x4
1001e901:	mov    edi,DWORD PTR [ebp-0x20]
1001e904:	push   edi
1001e905:	push   DWORD PTR [ebp-0x14]
1001e908:	lea    ebx,[ebp-0x1c]
1001e90b:	push   DWORD PTR [ebp+0x8]
1001e90e:	push   DWORD PTR [ebp-0x18]
1001e911:	call   0x1001e9b4
1001e916:	xor    ebx,ebx
1001e918:	cmp    eax,ebx
1001e91a:	jge    0x1001e93e
1001e91c:	mov    BYTE PTR [ebp-0x4],0x3
1001e920:	mov    eax,DWORD PTR [ebp-0x1c]
1001e923:	cmp    eax,ebx
1001e925:	je     0x1001e92d
1001e927:	mov    ecx,DWORD PTR [eax]
1001e929:	push   eax
1001e92a:	call   DWORD PTR [ecx+0x8]
1001e92d:	push   edi
1001e92e:	call   DWORD PTR ds:0x100652b4
1001e934:	mov    BYTE PTR [ebp-0x4],bl
1001e937:	mov    eax,DWORD PTR [ebp-0x14]
1001e93a:	cmp    eax,ebx
1001e93c:	jmp    0x1001e8e1
1001e93e:	mov    esi,DWORD PTR [ebp-0x1c]
1001e941:	mov    eax,DWORD PTR [esi]
1001e943:	lea    ecx,[ebp-0x24]
1001e946:	push   ecx
1001e947:	push   0x1006efa8
1001e94c:	push   esi
1001e94d:	call   DWORD PTR [eax]
1001e94f:	cmp    eax,ebx
1001e951:	jge    0x1001e95f
1001e953:	mov    BYTE PTR [ebp-0x4],0x3
1001e957:	mov    eax,DWORD PTR [esi]
1001e959:	push   esi
1001e95a:	call   DWORD PTR [eax+0x8]
1001e95d:	jmp    0x1001e92d
1001e95f:	push   DWORD PTR [ebp-0x24]
1001e962:	push   0xffffffeb
1001e964:	push   DWORD PTR [ebp+0x8]
1001e967:	call   DWORD PTR ds:0x100652d8
1001e96d:	mov    BYTE PTR [ebp-0x4],0x3
1001e971:	mov    eax,DWORD PTR [esi]
1001e973:	push   esi
1001e974:	call   DWORD PTR [eax+0x8]
1001e977:	push   edi
1001e978:	call   DWORD PTR ds:0x100652b4
1001e97e:	mov    BYTE PTR [ebp-0x4],bl
1001e981:	mov    eax,DWORD PTR [ebp-0x14]
1001e984:	cmp    eax,ebx
1001e986:	je     0x1001e98e
1001e988:	mov    ecx,DWORD PTR [eax]
1001e98a:	push   eax
1001e98b:	call   DWORD PTR [ecx+0x8]
1001e98e:	push   DWORD PTR [ebp-0x18]
1001e991:	call   0x1001b117
1001e996:	pop    ecx
1001e997:	push   DWORD PTR [ebp+0x14]
1001e99a:	push   DWORD PTR [ebp+0x10]
1001e99d:	push   DWORD PTR [ebp+0xc]
1001e9a0:	push   DWORD PTR [ebp+0x8]
1001e9a3:	call   DWORD PTR ds:0x10065344
1001e9a9:	lea    esp,[ebp-0x3c]
1001e9ac:	call   0x10058931
1001e9b1:	ret    0x10
1001e9b4:	push   ebp
1001e9b5:	mov    ebp,esp
1001e9b7:	sub    esp,0xc
1001e9ba:	push   esi
1001e9bb:	push   edi
1001e9bc:	call   0x1001ea64
1001e9c1:	lea    eax,[ebp-0x4]
1001e9c4:	xor    edi,edi
1001e9c6:	push   eax
1001e9c7:	mov    DWORD PTR [ebp-0x4],edi
1001e9ca:	mov    DWORD PTR [ebp-0xc],edi
1001e9cd:	call   0x1001feec
1001e9d2:	mov    esi,eax
1001e9d4:	cmp    esi,edi
1001e9d6:	jl     0x1001ea2e
1001e9d8:	mov    eax,DWORD PTR [ebp-0x4]
1001e9db:	lea    edx,[ebp-0x8]
1001e9de:	push   edx
1001e9df:	push   0x1006efb8
1001e9e4:	mov    DWORD PTR [ebp-0x8],edi
1001e9e7:	mov    ecx,DWORD PTR [eax]
1001e9e9:	push   eax
1001e9ea:	call   DWORD PTR [ecx]
1001e9ec:	push   DWORD PTR [ebp+0x8]
1001e9ef:	lea    esi,[ebp+0x8]
1001e9f2:	call   0x1001b132
1001e9f7:	push   DWORD PTR [ebp+0x14]
1001e9fa:	mov    eax,DWORD PTR [ebp-0x8]
1001e9fd:	mov    ecx,DWORD PTR [eax]
1001e9ff:	push   edi
1001ea00:	push   0x1006a668
1001ea05:	lea    edx,[ebp-0xc]
1001ea08:	push   edx
1001ea09:	push   DWORD PTR [ebp+0x10]
1001ea0c:	push   DWORD PTR [ebp+0xc]
1001ea0f:	push   DWORD PTR [ebp+0x8]
1001ea12:	push   eax
1001ea13:	call   DWORD PTR [ecx+0x28]
1001ea16:	push   DWORD PTR [ebp+0x8]
1001ea19:	mov    esi,eax
1001ea1b:	call   DWORD PTR ds:0x100652b4
1001ea21:	mov    eax,DWORD PTR [ebp-0x8]
1001ea24:	cmp    eax,edi
1001ea26:	je     0x1001ea2e
1001ea28:	mov    ecx,DWORD PTR [eax]
1001ea2a:	push   eax
1001ea2b:	call   DWORD PTR [ecx+0x8]
1001ea2e:	cmp    ebx,edi
1001ea30:	je     0x1001ea42
1001ea32:	cmp    esi,edi
1001ea34:	jl     0x1001ea40
1001ea36:	mov    eax,DWORD PTR [ebp-0x4]
1001ea39:	mov    DWORD PTR [ebx],eax
1001ea3b:	mov    DWORD PTR [ebp-0x4],edi
1001ea3e:	jmp    0x1001ea42
1001ea40:	mov    DWORD PTR [ebx],edi
1001ea42:	mov    eax,DWORD PTR [ebp-0xc]
1001ea45:	cmp    eax,edi
1001ea47:	je     0x1001ea4f
1001ea49:	mov    ecx,DWORD PTR [eax]
1001ea4b:	push   eax
1001ea4c:	call   DWORD PTR [ecx+0x8]
1001ea4f:	mov    eax,DWORD PTR [ebp-0x4]
1001ea52:	cmp    eax,edi
1001ea54:	je     0x1001ea5c
1001ea56:	mov    ecx,DWORD PTR [eax]
1001ea58:	push   eax
1001ea59:	call   DWORD PTR [ecx+0x8]
1001ea5c:	pop    edi
1001ea5d:	mov    eax,esi
1001ea5f:	pop    esi
1001ea60:	leave  
1001ea61:	ret    0x10
1001ea64:	push   ebp
1001ea65:	mov    ebp,esp
1001ea67:	and    esp,0xfffffff8
1001ea6a:	sub    esp,0x3c
1001ea6d:	push   ebx
1001ea6e:	push   esi
1001ea6f:	mov    eax,0x1007fa20
1001ea74:	push   edi
1001ea75:	push   eax
1001ea76:	mov    DWORD PTR [esp+0x14],eax
1001ea7a:	call   DWORD PTR ds:0x100650f0
1001ea80:	mov    esi,DWORD PTR ds:0x100652ec
1001ea86:	push   0x1006f1a8
1001ea8b:	mov    BYTE PTR [esp+0x18],0x1
1001ea90:	call   esi
1001ea92:	push   0x1006f1c4
1001ea97:	mov    ds:0x1007ffb8,eax
1001ea9c:	call   esi
1001ea9e:	push   0x30
1001eaa0:	pop    edi
1001eaa1:	mov    ds:0x1007ffbc,eax
1001eaa6:	lea    eax,[esp+0x18]
1001eaaa:	push   eax
1001eaab:	mov    esi,0x1006f184
1001eab0:	push   esi
1001eab1:	push   DWORD PTR ds:0x1007f9e4
1001eab7:	mov    DWORD PTR [esp+0x24],edi
1001eabb:	call   DWORD PTR ds:0x100652bc
1001eac1:	xor    ebx,ebx
1001eac3:	cmp    eax,ebx
1001eac5:	jne    0x1001eb3e
1001eac7:	mov    eax,ds:0x1007f9e4
1001eacc:	push   0x7f00
1001ead1:	push   ebx
1001ead2:	mov    DWORD PTR [esp+0x20],edi
1001ead6:	mov    DWORD PTR [esp+0x24],0x8
1001eade:	mov    DWORD PTR [esp+0x28],0x1001e541
1001eae6:	mov    DWORD PTR [esp+0x2c],ebx
1001eaea:	mov    DWORD PTR [esp+0x30],ebx
1001eaee:	mov    DWORD PTR [esp+0x34],eax
1001eaf2:	mov    DWORD PTR [esp+0x38],ebx
1001eaf6:	call   DWORD PTR ds:0x100652d0
1001eafc:	mov    DWORD PTR [esp+0x34],eax
1001eb00:	lea    eax,[esp+0x18]
1001eb04:	push   eax
1001eb05:	mov    DWORD PTR [esp+0x3c],0x6
1001eb0d:	mov    DWORD PTR [esp+0x40],ebx
1001eb11:	mov    DWORD PTR [esp+0x44],esi
1001eb15:	mov    DWORD PTR [esp+0x48],ebx
1001eb19:	call   DWORD PTR ds:0x10065308
1001eb1f:	movzx  eax,ax
1001eb22:	cmp    ax,bx
1001eb25:	mov    DWORD PTR [esp+0xc],eax
1001eb29:	je     0x1001ebf1
1001eb2f:	lea    eax,[esp+0xc]
1001eb33:	push   eax
1001eb34:	mov    esi,0x1007fa3c
1001eb39:	call   0x1001facb
1001eb3e:	push   edi
1001eb3f:	lea    eax,[esp+0x1c]
1001eb43:	push   ebx
1001eb44:	push   eax
1001eb45:	call   0x10044950
1001eb4a:	add    esp,0xc
1001eb4d:	lea    eax,[esp+0x18]
1001eb51:	push   eax
1001eb52:	mov    esi,0x1006f28c
1001eb57:	push   esi
1001eb58:	push   DWORD PTR ds:0x1007f9e4
1001eb5e:	mov    DWORD PTR [esp+0x24],edi
1001eb62:	call   DWORD PTR ds:0x100652bc
1001eb68:	cmp    eax,ebx
1001eb6a:	mov    DWORD PTR [esp+0xc],eax
1001eb6e:	jne    0x1001ebf5
1001eb74:	mov    eax,ds:0x1007f9e4
1001eb79:	push   0x7f00
1001eb7e:	push   ebx
1001eb7f:	mov    DWORD PTR [esp+0x20],edi
1001eb83:	mov    DWORD PTR [esp+0x24],0x8
1001eb8b:	mov    DWORD PTR [esp+0x28],0x1001e75c
1001eb93:	mov    DWORD PTR [esp+0x2c],ebx
1001eb97:	mov    DWORD PTR [esp+0x30],ebx
1001eb9b:	mov    DWORD PTR [esp+0x34],eax
1001eb9f:	mov    DWORD PTR [esp+0x38],ebx
1001eba3:	call   DWORD PTR ds:0x100652d0
1001eba9:	mov    DWORD PTR [esp+0x34],eax
1001ebad:	lea    eax,[esp+0x18]
1001ebb1:	push   eax
1001ebb2:	mov    DWORD PTR [esp+0x3c],0x6
1001ebba:	mov    DWORD PTR [esp+0x40],ebx
1001ebbe:	mov    DWORD PTR [esp+0x44],esi
1001ebc2:	mov    DWORD PTR [esp+0x48],ebx
1001ebc6:	call   DWORD PTR ds:0x10065308
1001ebcc:	movzx  eax,ax
1001ebcf:	cmp    ax,bx
1001ebd2:	mov    DWORD PTR [esp+0xc],eax
1001ebd6:	je     0x1001ebf1
1001ebd8:	lea    eax,[esp+0xc]
1001ebdc:	push   eax
1001ebdd:	mov    esi,0x1007fa3c
1001ebe2:	call   0x1001facb
1001ebe7:	mov    DWORD PTR [esp+0xc],0x1
1001ebef:	jmp    0x1001ebf5
1001ebf1:	mov    DWORD PTR [esp+0xc],ebx
1001ebf5:	lea    ecx,[esp+0x10]
1001ebf9:	call   0x10010991
1001ebfe:	mov    eax,DWORD PTR [esp+0xc]
1001ec02:	pop    edi
1001ec03:	pop    esi
1001ec04:	pop    ebx
1001ec05:	mov    esp,ebp
1001ec07:	pop    ebp
1001ec08:	ret    
1001ec09:	cmp    DWORD PTR [eax+0x18],0x8
1001ec0d:	push   esi
1001ec0e:	push   edi
1001ec0f:	jb     0x1001ec16
1001ec11:	mov    esi,DWORD PTR [eax+0x4]
1001ec14:	jmp    0x1001ec19
1001ec16:	lea    esi,[eax+0x4]
1001ec19:	push   esi
1001ec1a:	call   0x100425f3
1001ec1f:	pop    ecx
1001ec20:	mov    ecx,DWORD PTR [ebx+0x14]
1001ec23:	mov    edi,eax
1001ec25:	push   esi
1001ec26:	mov    eax,ebx
1001ec28:	call   0x10005eb3
1001ec2d:	xor    ecx,ecx
1001ec2f:	test   eax,eax
1001ec31:	setl   cl
1001ec34:	pop    edi
1001ec35:	mov    al,cl
1001ec37:	pop    esi
1001ec38:	ret    
1001ec39:	push   ebp
1001ec3a:	mov    ebp,esp
1001ec3c:	sub    esp,0x20
1001ec3f:	push   ebx
1001ec40:	push   esi
1001ec41:	push   edi
1001ec42:	push   0xffffffff
1001ec44:	push   DWORD PTR ds:0x1007ff30
1001ec4a:	xor    ebx,ebx
1001ec4c:	call   DWORD PTR ds:0x10065084
1001ec52:	test   eax,eax
1001ec54:	jne    0x1001ecf8
1001ec5a:	lea    eax,[ebp+0x8]
1001ec5d:	push   eax
1001ec5e:	lea    eax,[ebp-0x14]
1001ec61:	push   eax
1001ec62:	call   0x10020633
1001ec67:	mov    eax,ds:0x1007ff38
1001ec6c:	lea    edi,[ebp-0xc]
1001ec6f:	lea    esi,[ebp-0x14]
1001ec72:	mov    DWORD PTR [ebp-0x8],eax
1001ec75:	mov    DWORD PTR [ebp-0xc],0x1007ff34
1001ec7c:	call   0x100046f1
1001ec81:	test   al,al
1001ec83:	je     0x1001ecec
1001ec85:	mov    esi,DWORD PTR ds:0x10065130
1001ec8b:	push   ebx
1001ec8c:	push   ebx
1001ec8d:	push   ebx
1001ec8e:	push   ebx
1001ec8f:	mov    BYTE PTR [ebp-0x10],bl
1001ec92:	mov    DWORD PTR [ebp-0x1c],0x1388
1001ec99:	call   esi
1001ec9b:	push   ebx
1001ec9c:	push   ebx
1001ec9d:	push   ebx
1001ec9e:	push   ebx
1001ec9f:	mov    DWORD PTR [ebp-0x14],eax
1001eca2:	call   esi
1001eca4:	lea    ebx,[ebp+0x8]
1001eca7:	mov    DWORD PTR [ebp-0x18],eax
1001ecaa:	call   0x10020300
1001ecaf:	mov    edi,eax
1001ecb1:	lea    esi,[ebp-0x1c]
1001ecb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001ecb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001ecb6:	push   0x2
1001ecb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001ecb9:	xor    ebx,ebx
1001ecbb:	push   ebx
1001ecbc:	push   ebx
1001ecbd:	push   DWORD PTR [ebp+0xc]
1001ecc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001ecc1:	mov    esi,DWORD PTR ds:0x10065108
1001ecc7:	call   esi
1001ecc9:	push   eax
1001ecca:	push   DWORD PTR [ebp-0x18]
1001eccd:	call   esi
1001eccf:	mov    edi,DWORD PTR ds:0x1006513c
1001ecd5:	push   eax
1001ecd6:	call   edi
1001ecd8:	push   0x2
1001ecda:	push   ebx
1001ecdb:	push   ebx
1001ecdc:	push   DWORD PTR [ebp+0x10]
1001ecdf:	call   esi
1001ece1:	push   eax
1001ece2:	push   DWORD PTR [ebp-0x14]
1001ece5:	call   esi
1001ece7:	push   eax
1001ece8:	call   edi
1001ecea:	mov    bl,0x1
1001ecec:	push   DWORD PTR ds:0x1007ff30
1001ecf2:	call   DWORD PTR ds:0x10065094
1001ecf8:	pop    edi
1001ecf9:	pop    esi
1001ecfa:	mov    al,bl
1001ecfc:	pop    ebx
1001ecfd:	leave  
1001ecfe:	ret    
1001ecff:	push   ebp
1001ed00:	mov    ebp,esp
1001ed02:	sub    esp,0x10
1001ed05:	push   0xffffffff
1001ed07:	push   DWORD PTR ds:0x1007ff30
1001ed0d:	call   DWORD PTR ds:0x10065084
1001ed13:	test   eax,eax
1001ed15:	jne    0x1001ed6b
1001ed17:	push   esi
1001ed18:	push   edi
1001ed19:	lea    eax,[ebp+0x8]
1001ed1c:	push   eax
1001ed1d:	lea    eax,[ebp-0x8]
1001ed20:	push   eax
1001ed21:	call   0x10020633
1001ed26:	mov    eax,ds:0x1007ff38
1001ed2b:	lea    edi,[ebp-0x10]
1001ed2e:	lea    esi,[ebp-0x8]
1001ed31:	mov    DWORD PTR [ebp-0xc],eax
1001ed34:	mov    DWORD PTR [ebp-0x10],0x1007ff34
1001ed3b:	call   0x100046f1
1001ed40:	test   al,al
1001ed42:	jne    0x1001ed5d
1001ed44:	call   0x10009753
1001ed49:	mov    ecx,DWORD PTR [ebp+0xc]
1001ed4c:	mov    DWORD PTR [eax+0x4],ecx
1001ed4f:	call   0x10009753
1001ed54:	push   DWORD PTR [eax+0x8]
1001ed57:	call   DWORD PTR ds:0x10065110
1001ed5d:	push   DWORD PTR ds:0x1007ff30
1001ed63:	call   DWORD PTR ds:0x10065094
1001ed69:	pop    edi
1001ed6a:	pop    esi
1001ed6b:	leave  
1001ed6c:	ret    
1001ed6d:	push   ebp
1001ed6e:	mov    ebp,esp
1001ed70:	sub    esp,0x14
1001ed73:	push   esi
1001ed74:	push   edi
1001ed75:	push   0xffffffff
1001ed77:	push   DWORD PTR ds:0x1007ff30
1001ed7d:	call   DWORD PTR ds:0x10065084
1001ed83:	test   eax,eax
1001ed85:	jne    0x1001edc7
1001ed87:	lea    eax,[ebp+0x8]
1001ed8a:	push   eax
1001ed8b:	lea    eax,[ebp-0x14]
1001ed8e:	push   eax
1001ed8f:	call   0x10020633
1001ed94:	mov    eax,ds:0x1007ff38
1001ed99:	lea    edi,[ebp-0xc]
1001ed9c:	lea    esi,[ebp-0x14]
1001ed9f:	mov    DWORD PTR [ebp-0x8],eax
1001eda2:	mov    DWORD PTR [ebp-0xc],0x1007ff34
1001eda9:	call   0x100046f1
1001edae:	test   al,al
1001edb0:	jne    0x1001edbb
1001edb2:	call   0x10009753
1001edb7:	mov    BYTE PTR [eax+0x10],0x1
1001edbb:	push   DWORD PTR ds:0x1007ff30
1001edc1:	call   DWORD PTR ds:0x10065094
1001edc7:	pop    edi
1001edc8:	pop    esi
1001edc9:	leave  
1001edca:	ret    
1001edcb:	push   ebp
1001edcc:	mov    ebp,esp
1001edce:	and    esp,0xfffffff8
1001edd1:	sub    esp,0x14
1001edd4:	push   ebx
1001edd5:	push   esi
1001edd6:	push   edi
1001edd7:	push   0xffffffff
1001edd9:	push   DWORD PTR ds:0x1007ff30
1001eddf:	xor    bl,bl
1001ede1:	call   DWORD PTR ds:0x10065084
1001ede7:	test   eax,eax
1001ede9:	jne    0x1001ee5b
1001edeb:	lea    eax,[ebp+0x8]
1001edee:	push   eax
1001edef:	lea    eax,[esp+0x14]
1001edf3:	push   eax
1001edf4:	call   0x10020633
1001edf9:	mov    eax,ds:0x1007ff38
1001edfe:	lea    edi,[esp+0x18]
1001ee02:	lea    esi,[esp+0x10]
1001ee06:	mov    DWORD PTR [esp+0x1c],eax
1001ee0a:	mov    DWORD PTR [esp+0x18],0x1007ff34
1001ee12:	call   0x100046f1
1001ee17:	test   al,al
1001ee19:	jne    0x1001ee4f
1001ee1b:	call   0x10009753
1001ee20:	mov    bl,BYTE PTR [eax+0x10]
1001ee23:	call   0x10009753
1001ee28:	push   DWORD PTR [eax+0x8]
1001ee2b:	mov    edi,DWORD PTR ds:0x10065070
1001ee31:	call   edi
1001ee33:	call   0x10009753
1001ee38:	push   DWORD PTR [eax+0xc]
1001ee3b:	call   edi
1001ee3d:	push   DWORD PTR [esp+0x14]
1001ee41:	lea    eax,[esp+0x1c]
1001ee45:	push   DWORD PTR [esp+0x14]
1001ee49:	push   eax
1001ee4a:	call   0x100203c0
1001ee4f:	push   DWORD PTR ds:0x1007ff30
1001ee55:	call   DWORD PTR ds:0x10065094
1001ee5b:	pop    edi
1001ee5c:	pop    esi
1001ee5d:	mov    al,bl
1001ee5f:	pop    ebx
1001ee60:	mov    esp,ebp
1001ee62:	pop    ebp
1001ee63:	ret    
1001ee64:	push   esi
1001ee65:	xor    esi,esi
1001ee67:	mov    eax,DWORD PTR [esp+0xc]
1001ee6b:	mov    ecx,DWORD PTR [esi+0x1007e810]
1001ee71:	call   0x10010002
1001ee76:	test   eax,eax
1001ee78:	jne    0x1001ee87
1001ee7a:	add    esi,0x4
1001ee7d:	cmp    esi,0x4
1001ee80:	jb     0x1001ee67
1001ee82:	inc    eax
1001ee83:	pop    esi
1001ee84:	ret    0x8
1001ee87:	xor    eax,eax
1001ee89:	jmp    0x1001ee83
1001ee8b:	mov    ecx,DWORD PTR [esp+0x4]
1001ee8f:	mov    edx,DWORD PTR [esp+0x8]
1001ee93:	add    ecx,0xffffffe4
1001ee96:	call   0x1001ff76
1001ee9b:	neg    eax
1001ee9d:	sbb    eax,eax
1001ee9f:	and    eax,0x7fffbffb
1001eea4:	add    eax,0x80004005
1001eea9:	ret    0x8
1001eeac:	cmp    DWORD PTR [esp+0x8],0xffffea78
1001eeb4:	jne    0x1001eeca
1001eeb6:	mov    eax,DWORD PTR [esp+0x1c]
1001eeba:	mov    WORD PTR [eax],0x3
1001eebf:	mov    DWORD PTR [eax+0x8],0x60009f80
1001eec6:	xor    eax,eax
1001eec8:	jmp    0x1001eecf
1001eeca:	mov    eax,0x80020003
1001eecf:	ret    0x24
1001eed2:	push   ebp
1001eed3:	mov    ebp,esp
1001eed5:	and    esp,0xfffffff8
1001eed8:	push   0xffffffff
1001eeda:	push   0x10060a6f
1001eedf:	mov    eax,fs:0x0
1001eee5:	push   eax
1001eee6:	sub    esp,0x20
1001eee9:	push   ebx
1001eeea:	push   esi
1001eeeb:	push   edi
1001eeec:	mov    eax,ds:0x1007d030
1001eef1:	xor    eax,esp
1001eef3:	push   eax
1001eef4:	lea    eax,[esp+0x30]
1001eef8:	mov    fs:0x0,eax
1001eefe:	call   DWORD PTR ds:0x1007dfe4
1001ef04:	push   0x1006f260
1001ef09:	push   0x8
1001ef0b:	push   0x1006cdd8
1001ef10:	call   0x10003f5b
1001ef15:	add    esp,0xc
1001ef18:	push   eax
1001ef19:	push   DWORD PTR [ebp+0xc]
1001ef1c:	call   0x100453b3
1001ef21:	test   eax,eax
1001ef23:	pop    ecx
1001ef24:	pop    ecx
1001ef25:	push   DWORD PTR [ebp+0xc]
1001ef28:	jne    0x1001f13b
1001ef2e:	call   0x10020229
1001ef33:	mov    edi,eax
1001ef35:	xor    esi,esi
1001ef37:	cmp    edi,esi
1001ef39:	mov    DWORD PTR [esp+0x28],edi
1001ef3d:	je     0x1001ef45
1001ef3f:	mov    eax,DWORD PTR [edi]
1001ef41:	push   edi
1001ef42:	call   DWORD PTR [eax+0x4]
1001ef45:	mov    DWORD PTR [esp+0x38],esi
1001ef49:	mov    DWORD PTR [esp+0x20],esi
1001ef4d:	call   0x1001ea64
1001ef52:	push   ecx
1001ef53:	mov    eax,esp
1001ef55:	mov    DWORD PTR [esp+0x28],esp
1001ef59:	push   ecx
1001ef5a:	mov    DWORD PTR [eax],esi
1001ef5c:	mov    eax,esp
1001ef5e:	mov    DWORD PTR [eax],esi
1001ef60:	lea    eax,[esp+0x28]
1001ef64:	mov    DWORD PTR [esp+0x2c],esp
1001ef68:	push   eax
1001ef69:	call   0x1001fb28
1001ef6e:	cmp    eax,esi
1001ef70:	jne    0x1001ef8b
1001ef72:	or     DWORD PTR [esp+0x38],0xffffffff
1001ef77:	cmp    edi,esi
1001ef79:	je     0x1001ef81
1001ef7b:	mov    eax,DWORD PTR [edi]
1001ef7d:	push   edi
1001ef7e:	call   DWORD PTR [eax+0x8]
1001ef81:	mov    eax,0x80004005
1001ef86:	jmp    0x1001f153
1001ef8b:	mov    DWORD PTR [esp+0x10],esi
1001ef8f:	push   0x1006a6a8
1001ef94:	lea    eax,[esp+0x24]
1001ef98:	push   eax
1001ef99:	lea    ebx,[esp+0x18]
1001ef9d:	mov    BYTE PTR [esp+0x40],0x1
1001efa2:	call   0x1001fb71
1001efa7:	mov    esi,eax
1001efa9:	xor    ebx,ebx
1001efab:	cmp    esi,ebx
1001efad:	jge    0x1001efd7
1001efaf:	mov    BYTE PTR [esp+0x38],bl
1001efb3:	mov    eax,DWORD PTR [esp+0x10]
1001efb7:	cmp    eax,ebx
1001efb9:	je     0x1001efc1
1001efbb:	mov    ecx,DWORD PTR [eax]
1001efbd:	push   eax
1001efbe:	call   DWORD PTR [ecx+0x8]
1001efc1:	or     DWORD PTR [esp+0x38],0xffffffff
1001efc6:	cmp    edi,ebx
1001efc8:	je     0x1001efd0
1001efca:	mov    eax,DWORD PTR [edi]
1001efcc:	push   edi
1001efcd:	call   DWORD PTR [eax+0x8]
1001efd0:	mov    eax,esi
1001efd2:	jmp    0x1001f153
1001efd7:	mov    DWORD PTR [esp+0x18],ebx
1001efdb:	mov    DWORD PTR [esp+0x14],ebx
1001efdf:	lea    ecx,[esp+0x18]
1001efe3:	push   ecx
1001efe4:	push   0x1006a698
1001efe9:	mov    BYTE PTR [esp+0x40],0x3
1001efee:	mov    eax,DWORD PTR [edi]
1001eff0:	push   edi
1001eff1:	call   DWORD PTR [eax]
1001eff3:	mov    esi,eax
1001eff5:	cmp    esi,ebx
1001eff7:	jge    0x1001f038
1001eff9:	mov    BYTE PTR [esp+0x38],0x2
1001effe:	mov    eax,DWORD PTR [esp+0x14]
1001f002:	cmp    eax,ebx
1001f004:	je     0x1001f00c
1001f006:	mov    ecx,DWORD PTR [eax]
1001f008:	push   eax
1001f009:	call   DWORD PTR [ecx+0x8]
1001f00c:	mov    BYTE PTR [esp+0x38],0x1
1001f011:	mov    eax,DWORD PTR [esp+0x18]
1001f015:	cmp    eax,ebx
1001f017:	je     0x1001f01f
1001f019:	mov    ecx,DWORD PTR [eax]
1001f01b:	push   eax
1001f01c:	call   DWORD PTR [ecx+0x8]
1001f01f:	mov    BYTE PTR [esp+0x38],bl
1001f023:	mov    eax,DWORD PTR [esp+0x10]
1001f027:	cmp    eax,ebx
1001f029:	je     0x1001f031
1001f02b:	mov    ecx,DWORD PTR [eax]
1001f02d:	push   eax
1001f02e:	call   DWORD PTR [ecx+0x8]
1001f031:	or     DWORD PTR [esp+0x38],0xffffffff
1001f036:	jmp    0x1001efca
1001f038:	mov    eax,DWORD PTR [edi]
1001f03a:	lea    ecx,[esp+0x14]
1001f03e:	push   ecx
1001f03f:	push   0x1006a678
1001f044:	push   edi
1001f045:	call   DWORD PTR [eax]
1001f047:	mov    esi,eax
1001f049:	cmp    esi,ebx
1001f04b:	jl     0x1001eff9
1001f04d:	mov    eax,DWORD PTR [esp+0x18]
1001f051:	push   DWORD PTR [esp+0x10]
1001f055:	mov    ecx,DWORD PTR [eax]
1001f057:	push   eax
1001f058:	call   DWORD PTR [ecx+0xc]
1001f05b:	mov    esi,eax
1001f05d:	cmp    esi,ebx
1001f05f:	jl     0x1001eff9
1001f061:	mov    DWORD PTR [esp+0x1c],ebx
1001f065:	push   0x1006baa0
1001f06a:	lea    eax,[esp+0x24]
1001f06e:	push   eax
1001f06f:	lea    ebx,[esp+0x24]
1001f073:	mov    BYTE PTR [esp+0x40],0x4
1001f078:	call   0x1001fb71
1001f07d:	mov    esi,eax
1001f07f:	xor    ebx,ebx
1001f081:	cmp    esi,ebx
1001f083:	jge    0x1001f0a1
1001f085:	mov    BYTE PTR [esp+0x38],0x3
1001f08a:	mov    eax,DWORD PTR [esp+0x1c]
1001f08e:	cmp    eax,ebx
1001f090:	je     0x1001eff9
1001f096:	mov    ecx,DWORD PTR [eax]
1001f098:	push   eax
1001f099:	call   DWORD PTR [ecx+0x8]
1001f09c:	jmp    0x1001eff9
1001f0a1:	lea    eax,[esp+0x24]
1001f0a5:	push   eax
1001f0a6:	call   0x10021d9f
1001f0ab:	mov    eax,DWORD PTR [esp+0x1c]
1001f0af:	push   DWORD PTR [esp+0x24]
1001f0b3:	mov    ecx,DWORD PTR [eax]
1001f0b5:	push   eax
1001f0b6:	call   DWORD PTR [ecx+0x8c]
1001f0bc:	mov    esi,eax
1001f0be:	cmp    esi,ebx
1001f0c0:	jl     0x1001f085
1001f0c2:	mov    eax,DWORD PTR [esp+0x14]
1001f0c6:	mov    ecx,DWORD PTR [eax]
1001f0c8:	push   0xffffea78
1001f0cd:	push   eax
1001f0ce:	call   DWORD PTR [ecx+0x14]
1001f0d1:	mov    esi,eax
1001f0d3:	cmp    esi,ebx
1001f0d5:	jl     0x1001f085
1001f0d7:	push   DWORD PTR [esp+0x20]
1001f0db:	call   DWORD PTR ds:0x100652fc
1001f0e1:	mov    ecx,DWORD PTR [ebp+0x10]
1001f0e4:	mov    eax,edi
1001f0e6:	mov    DWORD PTR [ecx],eax
1001f0e8:	mov    BYTE PTR [esp+0x38],0x3
1001f0ed:	mov    eax,DWORD PTR [esp+0x1c]
1001f0f1:	cmp    eax,ebx
1001f0f3:	mov    DWORD PTR [esp+0x28],ebx
1001f0f7:	je     0x1001f0ff
1001f0f9:	mov    ecx,DWORD PTR [eax]
1001f0fb:	push   eax
1001f0fc:	call   DWORD PTR [ecx+0x8]
1001f0ff:	mov    BYTE PTR [esp+0x38],0x2
1001f104:	mov    eax,DWORD PTR [esp+0x14]
1001f108:	cmp    eax,ebx
1001f10a:	je     0x1001f112
1001f10c:	mov    ecx,DWORD PTR [eax]
1001f10e:	push   eax
1001f10f:	call   DWORD PTR [ecx+0x8]
1001f112:	mov    BYTE PTR [esp+0x38],0x1
1001f117:	mov    eax,DWORD PTR [esp+0x18]
1001f11b:	cmp    eax,ebx
1001f11d:	je     0x1001f125
1001f11f:	mov    ecx,DWORD PTR [eax]
1001f121:	push   eax
1001f122:	call   DWORD PTR [ecx+0x8]
1001f125:	mov    BYTE PTR [esp+0x38],bl
1001f129:	mov    eax,DWORD PTR [esp+0x10]
1001f12d:	cmp    eax,ebx
1001f12f:	je     0x1001f137
1001f131:	mov    ecx,DWORD PTR [eax]
1001f133:	push   eax
1001f134:	call   DWORD PTR [ecx+0x8]
1001f137:	xor    eax,eax
1001f139:	jmp    0x1001f153
1001f13b:	call   0x10020229
1001f140:	mov    ecx,DWORD PTR [ebp+0x10]
1001f143:	mov    DWORD PTR [ecx],eax
1001f145:	neg    eax
1001f147:	sbb    eax,eax
1001f149:	and    eax,0x7fffbffb
1001f14e:	add    eax,0x80004005
1001f153:	mov    ecx,DWORD PTR [esp+0x30]
1001f157:	mov    DWORD PTR fs:0x0,ecx
1001f15e:	pop    ecx
1001f15f:	pop    edi
1001f160:	pop    esi
1001f161:	pop    ebx
1001f162:	mov    esp,ebp
1001f164:	pop    ebp
1001f165:	ret    0xc
1001f168:	mov    edx,DWORD PTR [esp+0x4]
1001f16c:	push   DWORD PTR [esp+0x8]
1001f170:	mov    ecx,DWORD PTR [esp+0x10]
1001f174:	add    edx,0xffffffe4
1001f177:	call   0x1002010f
1001f17c:	neg    eax
1001f17e:	sbb    eax,eax
1001f180:	and    eax,0x7fffbffb
1001f185:	add    eax,0x80004005
1001f18a:	ret    0xc
1001f18d:	push   ebp
1001f18e:	mov    ebp,esp
1001f190:	mov    edx,DWORD PTR [ebp+0x8]
1001f193:	sub    esp,0x20
1001f196:	push   esi
1001f197:	xor    esi,esi
1001f199:	cmp    DWORD PTR [edx-0x10],esi
1001f19c:	je     0x1001f1d1
1001f19e:	push   edi
1001f19f:	push   0x7
1001f1a1:	pop    ecx
1001f1a2:	mov    WORD PTR [ebp-0x20],si
1001f1a6:	xor    eax,eax
1001f1a8:	lea    edi,[ebp-0x1e]
1001f1ab:	rep stos DWORD PTR es:[edi],eax
1001f1ad:	stos   WORD PTR es:[edi],ax
1001f1af:	mov    eax,DWORD PTR [edx-0x14]
1001f1b2:	mov    ecx,DWORD PTR [eax]
1001f1b4:	lea    edx,[ebp-0x20]
1001f1b7:	push   edx
1001f1b8:	push   esi
1001f1b9:	push   0x42
1001f1bb:	push   esi
1001f1bc:	push   esi
1001f1bd:	push   esi
1001f1be:	push   esi
1001f1bf:	push   esi
1001f1c0:	push   DWORD PTR [ebp+0xc]
1001f1c3:	push   eax
1001f1c4:	call   DWORD PTR [ecx+0x14]
1001f1c7:	test   eax,eax
1001f1c9:	pop    edi
1001f1ca:	jl     0x1001f1d1
1001f1cc:	xor    eax,eax
1001f1ce:	inc    eax
1001f1cf:	jmp    0x1001f1d3
1001f1d1:	xor    eax,eax
1001f1d3:	neg    eax
1001f1d5:	sbb    eax,eax
1001f1d7:	and    eax,0x7fffbffb
1001f1dc:	add    eax,0x80004005
1001f1e1:	pop    esi
1001f1e2:	leave  
1001f1e3:	ret    0x8
1001f1e6:	push   ebp
1001f1e7:	mov    ebp,esp
1001f1e9:	mov    eax,DWORD PTR [ebp+0x8]
1001f1ec:	mov    edx,DWORD PTR [eax-0x14]
1001f1ef:	sub    esp,0x20
1001f1f2:	push   esi
1001f1f3:	xor    esi,esi
1001f1f5:	cmp    edx,esi
1001f1f7:	je     0x1001f247
1001f1f9:	push   edi
1001f1fa:	push   0x7
1001f1fc:	pop    ecx
1001f1fd:	mov    WORD PTR [ebp-0x20],si
1001f201:	xor    eax,eax
1001f203:	lea    edi,[ebp-0x1e]
1001f206:	rep stos DWORD PTR es:[edi],eax
1001f208:	lea    ecx,[ebp-0x20]
1001f20b:	push   ecx
1001f20c:	lea    ecx,[ebp+0x8]
1001f20f:	push   ecx
1001f210:	push   esi
1001f211:	push   esi
1001f212:	push   esi
1001f213:	push   0x1006be04
1001f218:	push   DWORD PTR [ebp+0x18]
1001f21b:	stos   WORD PTR es:[edi],ax
1001f21d:	push   DWORD PTR [ebp+0x14]
1001f220:	mov    DWORD PTR [ebp+0x8],esi
1001f223:	push   DWORD PTR [ebp+0x14]
1001f226:	mov    eax,DWORD PTR [edx]
1001f228:	push   DWORD PTR [ebp+0x10]
1001f22b:	push   DWORD PTR [ebp+0xc]
1001f22e:	push   edx
1001f22f:	call   DWORD PTR [eax+0x10]
1001f232:	push   DWORD PTR [ebp+0x8]
1001f235:	mov    edi,eax
1001f237:	call   DWORD PTR ds:0x100652b4
1001f23d:	cmp    edi,esi
1001f23f:	pop    edi
1001f240:	jl     0x1001f247
1001f242:	xor    eax,eax
1001f244:	inc    eax
1001f245:	jmp    0x1001f249
1001f247:	xor    eax,eax
1001f249:	neg    eax
1001f24b:	sbb    eax,eax
1001f24d:	and    eax,0x7fffbffb
1001f252:	add    eax,0x80004005
1001f257:	pop    esi
1001f258:	leave  
1001f259:	ret    0x14
1001f25c:	call   DWORD PTR ds:0x1007dfe4
1001f262:	push   0x0
1001f264:	push   0x1006be04
1001f269:	push   DWORD PTR [esp+0x10]
1001f26d:	push   0x0
1001f26f:	call   DWORD PTR ds:0x10065330
1001f275:	xor    eax,eax
1001f277:	ret    0x8
1001f27a:	push   ebp
1001f27b:	mov    ebp,esp
1001f27d:	push   DWORD PTR [ebp+0x18]
1001f280:	mov    ecx,DWORD PTR [ebp+0x8]
1001f283:	push   DWORD PTR [ebp+0x14]
1001f286:	add    ecx,0xffffffe4
1001f289:	push   DWORD PTR [ebp+0x10]
1001f28c:	push   DWORD PTR [ebp+0xc]
1001f28f:	call   0x10020287
1001f294:	pop    ebp
1001f295:	ret    0x14
1001f298:	push   ebp
1001f299:	sub    esp,0x70
1001f29c:	lea    ebp,[esp-0x4]
1001f2a0:	mov    eax,ds:0x1007d030
1001f2a5:	xor    eax,ebp
1001f2a7:	mov    DWORD PTR [ebp+0x70],eax
1001f2aa:	push   0xe4
1001f2af:	mov    eax,0x10061717
1001f2b4:	call   0x10058878
1001f2b9:	mov    eax,DWORD PTR [ebp+0x84]
1001f2bf:	mov    esi,DWORD PTR [ebp+0x80]
1001f2c5:	mov    DWORD PTR [ebp-0x18],eax
1001f2c8:	mov    eax,DWORD PTR [ebp+0x88]
1001f2ce:	mov    DWORD PTR [ebp-0x24],eax
1001f2d1:	mov    eax,DWORD PTR [ebp+0x8c]
1001f2d7:	xor    edi,edi
1001f2d9:	mov    DWORD PTR [ebp-0x1c],eax
1001f2dc:	lea    eax,[ebp-0x2c]
1001f2df:	push   edi
1001f2e0:	push   eax
1001f2e1:	mov    DWORD PTR [ebp-0x4],edi
1001f2e4:	call   0x10002847
1001f2e9:	pop    ecx
1001f2ea:	pop    ecx
1001f2eb:	mov    ecx,DWORD PTR [eax]
1001f2ed:	mov    DWORD PTR [eax],edi
1001f2ef:	mov    DWORD PTR [ebp-0x30],ecx
1001f2f2:	lea    eax,[ebp-0x2c]
1001f2f5:	mov    BYTE PTR [ebp-0x4],0x1
1001f2f9:	call   0x10003d3c
1001f2fe:	call   DWORD PTR ds:0x1007dfe4
1001f304:	cmp    esi,edi
1001f306:	mov    ebx,DWORD PTR ds:0x100650e0
1001f30c:	mov    DWORD PTR [ebp-0x14],eax
1001f30f:	je     0x1001f31c
1001f311:	push   esi
1001f312:	call   ebx
1001f314:	inc    eax
1001f315:	cmp    eax,0x3fffffff
1001f31a:	jle    0x1001f320
1001f31c:	xor    eax,eax
1001f31e:	jmp    0x1001f33b
1001f320:	lea    edi,[eax+eax*1]
1001f323:	mov    eax,edi
1001f325:	call   0x10049010
1001f32a:	mov    eax,esp
1001f32c:	mov    DWORD PTR [ebp-0x10],esp
1001f32f:	push   DWORD PTR [ebp-0x14]
1001f332:	push   edi
1001f333:	push   esi
1001f334:	mov    esi,eax
1001f336:	call   0x1000677e
1001f33b:	push   eax
1001f33c:	lea    ecx,[ebp+0x54]
1001f33f:	call   0x100011d6
1001f344:	cmp    DWORD PTR [ebp-0x18],0x0
1001f348:	mov    BYTE PTR [ebp-0x4],0x2
1001f34c:	je     0x1001f35b
1001f34e:	push   DWORD PTR [ebp-0x18]
1001f351:	call   ebx
1001f353:	inc    eax
1001f354:	cmp    eax,0x3fffffff
1001f359:	jle    0x1001f35f
1001f35b:	xor    eax,eax
1001f35d:	jmp    0x1001f37a
1001f35f:	lea    edi,[eax+eax*1]
1001f362:	mov    eax,edi
1001f364:	call   0x10049010
1001f369:	mov    DWORD PTR [ebp-0x10],esp
1001f36c:	mov    esi,esp
1001f36e:	push   DWORD PTR [ebp-0x14]
1001f371:	push   edi
1001f372:	push   DWORD PTR [ebp-0x18]
1001f375:	call   0x1000677e
1001f37a:	push   eax
1001f37b:	lea    ecx,[ebp+0x1c]
1001f37e:	call   0x100011d6
1001f383:	mov    BYTE PTR [ebp-0x4],0x3
1001f387:	cmp    DWORD PTR [ebp-0x24],0x0
1001f38b:	je     0x1001f39a
1001f38d:	push   DWORD PTR [ebp-0x24]
1001f390:	call   ebx
1001f392:	inc    eax
1001f393:	cmp    eax,0x3fffffff
1001f398:	jle    0x1001f39e
1001f39a:	xor    eax,eax
1001f39c:	jmp    0x1001f3b9
1001f39e:	lea    edi,[eax+eax*1]
1001f3a1:	mov    eax,edi
1001f3a3:	call   0x10049010
1001f3a8:	mov    DWORD PTR [ebp-0x10],esp
1001f3ab:	mov    esi,esp
1001f3ad:	push   DWORD PTR [ebp-0x14]
1001f3b0:	push   edi
1001f3b1:	push   DWORD PTR [ebp-0x24]
1001f3b4:	call   0x1000677e
1001f3b9:	push   eax
1001f3ba:	lea    ecx,[ebp+0x0]
1001f3bd:	call   0x100011d6
1001f3c2:	mov    BYTE PTR [ebp-0x4],0x4
1001f3c6:	cmp    DWORD PTR [ebp-0x1c],0x0
1001f3ca:	je     0x1001f3d9
1001f3cc:	push   DWORD PTR [ebp-0x1c]
1001f3cf:	call   ebx
1001f3d1:	inc    eax
1001f3d2:	cmp    eax,0x3fffffff
1001f3d7:	jle    0x1001f3dd
1001f3d9:	xor    eax,eax
1001f3db:	jmp    0x1001f3f8
1001f3dd:	lea    edi,[eax+eax*1]
1001f3e0:	mov    eax,edi
1001f3e2:	call   0x10049010
1001f3e7:	mov    DWORD PTR [ebp-0x10],esp
1001f3ea:	mov    esi,esp
1001f3ec:	push   DWORD PTR [ebp-0x14]
1001f3ef:	push   edi
1001f3f0:	push   DWORD PTR [ebp-0x1c]
1001f3f3:	call   0x1000677e
1001f3f8:	push   eax
1001f3f9:	lea    ecx,[ebp+0x38]
1001f3fc:	call   0x100011d6
1001f401:	fld    QWORD PTR [ebp+0x94]
1001f407:	mov    BYTE PTR [ebp-0x4],0x5
1001f40b:	call   0x1005e296
1001f410:	push   0x0
1001f412:	mov    esi,0x2710
1001f417:	push   esi
1001f418:	push   edx
1001f419:	push   eax
1001f41a:	call   0x1004b7c0
1001f41f:	fld    QWORD PTR [ebp+0x9c]
1001f425:	mov    DWORD PTR [ebp-0x28],eax
1001f428:	mov    DWORD PTR [ebp-0x24],edx
1001f42b:	call   0x1005e296
1001f430:	push   0x0
1001f432:	push   esi
1001f433:	push   edx
1001f434:	push   eax
1001f435:	call   0x1004b7c0
1001f43a:	push   ecx
1001f43b:	mov    ecx,DWORD PTR [ebp+0x90]
1001f441:	mov    DWORD PTR [ebp-0x20],eax
1001f444:	mov    eax,esp
1001f446:	mov    DWORD PTR [eax],ecx
1001f448:	mov    DWORD PTR [ebp-0x2c],esp
1001f44b:	lea    eax,[ebp+0x38]
1001f44e:	push   eax
1001f44f:	lea    eax,[ebp+0x0]
1001f452:	push   eax
1001f453:	lea    eax,[ebp+0x1c]
1001f456:	push   eax
1001f457:	lea    eax,[ebp+0x54]
1001f45a:	push   eax
1001f45b:	lea    eax,[ebp-0xf0]
1001f461:	lea    edi,[ebp-0x20]
1001f464:	lea    ebx,[ebp-0x28]
1001f467:	push   eax
1001f468:	mov    DWORD PTR [ebp-0x1c],edx
1001f46b:	call   0x10002751
1001f470:	mov    edi,eax
1001f472:	lea    eax,[ebp+0x54]
1001f475:	push   eax
1001f476:	lea    esi,[ebp-0x68]
1001f479:	mov    BYTE PTR [ebp-0x4],0x6
1001f47d:	call   0x1002ffc0
1001f482:	pop    ecx
1001f483:	lea    ecx,[ebp-0x4c]
1001f486:	push   ecx
1001f487:	mov    ecx,eax
1001f489:	mov    BYTE PTR [ebp-0x4],0x7
1001f48d:	call   0x1002f720
1001f492:	pop    ecx
1001f493:	push   edi
1001f494:	mov    edx,eax
1001f496:	mov    ecx,0x1007fe34
1001f49b:	mov    BYTE PTR [ebp-0x4],0x8
1001f49f:	call   0x10012b93
1001f4a4:	xor    ebx,ebx
1001f4a6:	xor    edi,edi
1001f4a8:	push   ebx
1001f4a9:	inc    edi
1001f4aa:	push   edi
1001f4ab:	lea    ecx,[ebp-0x4c]
1001f4ae:	call   0x100012f9
1001f4b3:	push   ebx
1001f4b4:	push   edi
1001f4b5:	mov    ecx,esi
1001f4b7:	call   0x100012f9
1001f4bc:	lea    esi,[ebp-0xf0]
1001f4c2:	call   0x10002ecc
1001f4c7:	push   ebx
1001f4c8:	push   edi
1001f4c9:	lea    ecx,[ebp+0x38]
1001f4cc:	call   0x100012f9
1001f4d1:	push   ebx
1001f4d2:	push   edi
1001f4d3:	lea    ecx,[ebp+0x0]
1001f4d6:	call   0x100012f9
1001f4db:	push   ebx
1001f4dc:	push   edi
1001f4dd:	lea    ecx,[ebp+0x1c]
1001f4e0:	call   0x100012f9
1001f4e5:	push   ebx
1001f4e6:	push   edi
1001f4e7:	lea    ecx,[ebp+0x54]
1001f4ea:	call   0x100012f9
1001f4ef:	lea    eax,[ebp-0x30]
1001f4f2:	call   0x10003d3c
1001f4f7:	xor    eax,eax
1001f4f9:	lea    esp,[ebp-0x100]
1001f4ff:	mov    ecx,DWORD PTR [ebp-0xc]
1001f502:	mov    DWORD PTR fs:0x0,ecx
1001f509:	pop    ecx
1001f50a:	pop    edi
1001f50b:	pop    esi
1001f50c:	pop    ebx
1001f50d:	mov    ecx,DWORD PTR [ebp+0x70]
1001f510:	xor    ecx,ebp
1001f512:	call   0x10041d97
1001f517:	add    ebp,0x74
1001f51a:	leave  
1001f51b:	ret    0x28
1001f51e:	mov    eax,0x1001f524
1001f523:	ret    
1001f524:	jmp    0x1001f4f7
1001f526:	push   0x4
1001f528:	call   0x10037620
1001f52d:	pop    ecx
1001f52e:	mov    eax,0x1001f4f7
1001f533:	ret    
1001f534:	push   0x48
1001f536:	mov    eax,0x10060a22
1001f53b:	call   0x100588e4
1001f540:	mov    eax,DWORD PTR [ebp+0x10]
1001f543:	mov    esi,DWORD PTR [ebp+0xc]
1001f546:	and    DWORD PTR [ebp-0x4],0x0
1001f54a:	mov    DWORD PTR [ebp-0x50],eax
1001f54d:	push   0x1
1001f54f:	lea    eax,[ebp-0x54]
1001f552:	push   eax
1001f553:	call   0x100346c0
1001f558:	mov    BYTE PTR [ebp-0x4],0x1
1001f55c:	call   DWORD PTR ds:0x1007dfe4
1001f562:	test   esi,esi
1001f564:	mov    ebx,eax
1001f566:	je     0x1001f577
1001f568:	push   esi
1001f569:	call   DWORD PTR ds:0x100650e0
1001f56f:	inc    eax
1001f570:	cmp    eax,0x3fffffff
1001f575:	jle    0x1001f57b
1001f577:	xor    eax,eax
1001f579:	jmp    0x1001f594
1001f57b:	lea    edi,[eax+eax*1]
1001f57e:	mov    eax,edi
1001f580:	call   0x10049010
1001f585:	mov    eax,esp
1001f587:	mov    DWORD PTR [ebp-0x10],esp
1001f58a:	push   ebx
1001f58b:	push   edi
1001f58c:	push   esi
1001f58d:	mov    esi,eax
1001f58f:	call   0x1000677e
1001f594:	push   eax
1001f595:	lea    ecx,[ebp-0x4c]
1001f598:	call   0x100011d6
1001f59d:	cmp    DWORD PTR [ebp-0x50],0x0
1001f5a1:	mov    BYTE PTR [ebp-0x4],0x2
1001f5a5:	je     0x1001f5b8
1001f5a7:	push   DWORD PTR [ebp-0x50]
1001f5aa:	call   DWORD PTR ds:0x100650e0
1001f5b0:	inc    eax
1001f5b1:	cmp    eax,0x3fffffff
1001f5b6:	jle    0x1001f5bc
1001f5b8:	xor    eax,eax
1001f5ba:	jmp    0x1001f5d5
1001f5bc:	lea    edi,[eax+eax*1]
1001f5bf:	mov    eax,edi
1001f5c1:	call   0x10049010
1001f5c6:	mov    DWORD PTR [ebp-0x10],esp
1001f5c9:	mov    esi,esp
1001f5cb:	push   ebx
1001f5cc:	push   edi
1001f5cd:	push   DWORD PTR [ebp-0x50]
1001f5d0:	call   0x1000677e
1001f5d5:	push   eax
1001f5d6:	lea    ecx,[ebp-0x30]
1001f5d9:	call   0x100011d6
1001f5de:	lea    eax,[ebp-0x30]
1001f5e1:	push   eax
1001f5e2:	lea    eax,[ebp-0x54]
1001f5e5:	push   eax
1001f5e6:	lea    ecx,[ebp-0x4c]
1001f5e9:	mov    BYTE PTR [ebp-0x4],0x3
1001f5ed:	call   0x10035280
1001f5f2:	push   0x0
1001f5f4:	push   0x1
1001f5f6:	lea    ecx,[ebp-0x30]
1001f5f9:	call   0x100012f9
1001f5fe:	push   0x0
1001f600:	push   0x1
1001f602:	lea    ecx,[ebp-0x4c]
1001f605:	call   0x100012f9
1001f60a:	push   DWORD PTR [ebp-0x54]
1001f60d:	call   DWORD PTR ds:0x10065070
1001f613:	xor    eax,eax
1001f615:	jmp    0x1001f622
1001f617:	mov    eax,0x1001f61d
1001f61c:	ret    
1001f61d:	mov    eax,0x80004005
1001f622:	lea    esp,[ebp-0x64]
1001f625:	call   0x10058940
1001f62a:	ret    0xc
1001f62d:	push   0x48
1001f62f:	mov    eax,0x100609e5
1001f634:	call   0x100588e4
1001f639:	and    DWORD PTR [ebp-0x4],0x0
1001f63d:	push   0x1
1001f63f:	lea    eax,[ebp-0x18]
1001f642:	push   eax
1001f643:	call   0x100346c0
1001f648:	mov    BYTE PTR [ebp-0x4],0x1
1001f64c:	call   DWORD PTR ds:0x1007dfe4
1001f652:	cmp    DWORD PTR [ebp+0xc],0x0
1001f656:	mov    ebx,eax
1001f658:	je     0x1001f66b
1001f65a:	push   DWORD PTR [ebp+0xc]
1001f65d:	call   DWORD PTR ds:0x100650e0
1001f663:	inc    eax
1001f664:	cmp    eax,0x3fffffff
1001f669:	jle    0x1001f66f
1001f66b:	xor    eax,eax
1001f66d:	jmp    0x1001f688
1001f66f:	lea    edi,[eax+eax*1]
1001f672:	mov    eax,edi
1001f674:	call   0x10049010
1001f679:	mov    DWORD PTR [ebp-0x10],esp
1001f67c:	mov    esi,esp
1001f67e:	push   ebx
1001f67f:	push   edi
1001f680:	push   DWORD PTR [ebp+0xc]
1001f683:	call   0x1000677e
1001f688:	push   eax
1001f689:	lea    ecx,[ebp-0x38]
1001f68c:	call   0x100011d6
1001f691:	lea    eax,[ebp-0x38]
1001f694:	push   eax
1001f695:	lea    eax,[ebp-0x54]
1001f698:	push   eax
1001f699:	lea    eax,[ebp-0x18]
1001f69c:	push   eax
1001f69d:	mov    BYTE PTR [ebp-0x4],0x2
1001f6a1:	call   0x10035430
1001f6a6:	mov    BYTE PTR [ebp-0x4],0x3
1001f6aa:	cmp    DWORD PTR [eax+0x18],0x10
1001f6ae:	jb     0x1001f6b5
1001f6b0:	mov    eax,DWORD PTR [eax+0x4]
1001f6b3:	jmp    0x1001f6b8
1001f6b5:	add    eax,0x4
1001f6b8:	push   eax
1001f6b9:	lea    edi,[ebp-0x1c]
1001f6bc:	call   0x10002439
1001f6c1:	mov    BYTE PTR [ebp-0x4],0x4
1001f6c5:	call   0x10011c4d
1001f6ca:	mov    ecx,DWORD PTR [ebp+0x10]
1001f6cd:	mov    DWORD PTR [ecx],eax
1001f6cf:	call   0x1000256d
1001f6d4:	push   0x0
1001f6d6:	push   0x1
1001f6d8:	lea    ecx,[ebp-0x54]
1001f6db:	call   0x100012f9
1001f6e0:	push   0x0
1001f6e2:	push   0x1
1001f6e4:	lea    ecx,[ebp-0x38]
1001f6e7:	call   0x100012f9
1001f6ec:	push   DWORD PTR [ebp-0x18]
1001f6ef:	call   DWORD PTR ds:0x10065070
1001f6f5:	xor    eax,eax
1001f6f7:	jmp    0x1001f704
1001f6f9:	mov    eax,0x1001f6ff
1001f6fe:	ret    
1001f6ff:	mov    eax,0x80004005
1001f704:	lea    esp,[ebp-0x64]
1001f707:	call   0x10058940
1001f70c:	ret    0xc
1001f70f:	push   ebp
1001f710:	sub    esp,0xcc
1001f716:	lea    ebp,[esp-0x4]
1001f71a:	mov    eax,ds:0x1007d030
1001f71f:	xor    eax,ebp
1001f721:	mov    DWORD PTR [ebp+0xcc],eax
1001f727:	push   0x3c
1001f729:	mov    eax,0x10063851
1001f72e:	call   0x10058878
1001f733:	mov    eax,DWORD PTR [ebp+0xe4]
1001f739:	mov    ebx,DWORD PTR [ebp+0xe0]
1001f73f:	mov    DWORD PTR [ebp-0x14],eax
1001f742:	mov    eax,DWORD PTR [ebp+0xec]
1001f748:	mov    DWORD PTR [ebp-0x20],eax
1001f74b:	call   DWORD PTR ds:0x1007dfe4
1001f751:	xor    esi,esi
1001f753:	cmp    DWORD PTR [ebp+0xe8],esi
1001f759:	mov    DWORD PTR [ebp-0x1c],eax
1001f75c:	jne    0x1001f768
1001f75e:	mov    DWORD PTR [ebp+0xe8],0x7d0
1001f768:	cmp    WORD PTR [ebp+0xdc],0xffff
1001f770:	jne    0x1001f8c6
1001f776:	cmp    ebx,esi
1001f778:	mov    DWORD PTR [ebp-0x4],esi
1001f77b:	mov    DWORD PTR [ebp-0x14],esi
1001f77e:	je     0x1001f78f
1001f780:	push   ebx
1001f781:	call   DWORD PTR ds:0x100650e0
1001f787:	inc    eax
1001f788:	cmp    eax,0x3fffffff
1001f78d:	jle    0x1001f793
1001f78f:	xor    eax,eax
1001f791:	jmp    0x1001f7ac
1001f793:	lea    edi,[eax+eax*1]
1001f796:	mov    eax,edi
1001f798:	call   0x10049010
1001f79d:	mov    DWORD PTR [ebp-0x10],esp
1001f7a0:	mov    esi,esp
1001f7a2:	push   DWORD PTR [ebp-0x1c]
1001f7a5:	push   edi
1001f7a6:	push   ebx
1001f7a7:	call   0x1000677e
1001f7ac:	push   eax
1001f7ad:	lea    ecx,[ebp+0xb0]
1001f7b3:	call   0x100011d6
1001f7b8:	lea    ecx,[ebp-0x48]
1001f7bb:	mov    BYTE PTR [ebp-0x4],0x1
1001f7bf:	call   0x10018131
1001f7c4:	push   DWORD PTR [ebp+0xe8]
1001f7ca:	lea    ecx,[ebp-0x14]
1001f7cd:	push   ecx
1001f7ce:	lea    ecx,[ebp+0xb0]
1001f7d4:	push   ecx
1001f7d5:	push   eax
1001f7d6:	lea    esi,[ebp-0x18]
1001f7d9:	mov    BYTE PTR [ebp-0x4],0x2
1001f7dd:	call   0x100309f0
1001f7e2:	mov    ecx,DWORD PTR [eax]
1001f7e4:	mov    ebx,ecx
1001f7e6:	xor    esi,esi
1001f7e8:	add    esp,0x10
1001f7eb:	mov    DWORD PTR [eax],esi
1001f7ed:	mov    DWORD PTR [ebp-0x1c],ebx
1001f7f0:	push   DWORD PTR [ebp-0x18]
1001f7f3:	call   0x10041d92
1001f7f8:	pop    ecx
1001f7f9:	push   esi
1001f7fa:	push   0x1
1001f7fc:	lea    ecx,[ebp-0x48]
1001f7ff:	call   0x100012f9
1001f804:	push   esi
1001f805:	push   0x1
1001f807:	lea    ecx,[ebp+0xb0]
1001f80d:	mov    BYTE PTR [ebp-0x4],0x5
1001f811:	call   0x100012f9
1001f816:	mov    eax,DWORD PTR [ebp-0x14]
1001f819:	mov    DWORD PTR [ebp-0x2c],esi
1001f81c:	lea    edi,[ebp+0x94]
1001f822:	lea    esi,[ebp-0x2c]
1001f825:	mov    DWORD PTR [ebp-0x28],eax
1001f828:	mov    DWORD PTR [ebp-0x24],ebx
1001f82b:	call   0x10037270
1001f830:	mov    BYTE PTR [ebp-0x4],0x6
1001f834:	cmp    DWORD PTR [eax+0x18],0x10
1001f838:	jb     0x1001f83f
1001f83a:	mov    eax,DWORD PTR [eax+0x4]
1001f83d:	jmp    0x1001f842
1001f83f:	add    eax,0x4
1001f842:	push   eax
1001f843:	lea    edi,[ebp-0x14]
1001f846:	call   0x10002439
1001f84b:	mov    BYTE PTR [ebp-0x4],0x7
1001f84f:	call   0x10011c4d
1001f854:	mov    ecx,DWORD PTR [ebp-0x20]
1001f857:	mov    DWORD PTR [ecx],eax
1001f859:	call   0x1000256d
1001f85e:	push   0x0
1001f860:	push   0x1
1001f862:	lea    ecx,[ebp+0x94]
1001f868:	call   0x100012f9
1001f86d:	push   ebx
1001f86e:	call   0x10041d92
1001f873:	pop    ecx
1001f874:	xor    eax,eax
1001f876:	lea    esp,[ebp-0x58]
1001f879:	mov    ecx,DWORD PTR [ebp-0xc]
1001f87c:	mov    DWORD PTR fs:0x0,ecx
1001f883:	pop    ecx
1001f884:	pop    edi
1001f885:	pop    esi
1001f886:	pop    ebx
1001f887:	mov    ecx,DWORD PTR [ebp+0xcc]
1001f88d:	xor    ecx,ebp
1001f88f:	call   0x10041d97
1001f894:	add    ebp,0xd0
1001f89a:	leave  
1001f89b:	ret    0x18
1001f89e:	mov    eax,0x1001f8a4
1001f8a3:	ret    
1001f8a4:	and    DWORD PTR [ebp-0x14],0x0
1001f8a8:	lea    eax,[ebp-0x14]
1001f8ab:	mov    DWORD PTR [ebp-0x4],0x9
1001f8b2:	call   0x10011c4d
1001f8b7:	mov    ecx,DWORD PTR [ebp-0x20]
1001f8ba:	lea    edi,[ebp-0x14]
1001f8bd:	mov    DWORD PTR [ecx],eax
1001f8bf:	call   0x1000256d
1001f8c4:	jmp    0x1001f874
1001f8c6:	lea    edi,[ebp+0x0]
1001f8c9:	call   0x1000b784
1001f8ce:	cmp    ebx,esi
1001f8d0:	mov    DWORD PTR [ebp-0x4],0xa
1001f8d7:	je     0x1001f8e8
1001f8d9:	push   ebx
1001f8da:	call   DWORD PTR ds:0x100650e0
1001f8e0:	inc    eax
1001f8e1:	cmp    eax,0x3fffffff
1001f8e6:	jle    0x1001f8ec
1001f8e8:	xor    eax,eax
1001f8ea:	jmp    0x1001f905
1001f8ec:	lea    edi,[eax+eax*1]
1001f8ef:	mov    eax,edi
1001f8f1:	call   0x10049010
1001f8f6:	mov    DWORD PTR [ebp-0x10],esp
1001f8f9:	mov    esi,esp
1001f8fb:	push   DWORD PTR [ebp-0x1c]
1001f8fe:	push   edi
1001f8ff:	push   ebx
1001f900:	call   0x1000677e
1001f905:	push   eax
1001f906:	lea    ecx,[ebp+0xb0]
1001f90c:	call   0x100011d6
1001f911:	lea    eax,[ebp+0x0]
1001f914:	push   eax
1001f915:	lea    ecx,[ebp+0xb0]
1001f91b:	mov    BYTE PTR [ebp-0x4],0xb
1001f91f:	call   0x10032860
1001f924:	mov    bl,al
1001f926:	neg    bl
1001f928:	pop    ecx
1001f929:	sbb    bl,bl
1001f92b:	xor    edi,edi
1001f92d:	push   edi
1001f92e:	push   0x1
1001f930:	lea    ecx,[ebp+0xb0]
1001f936:	inc    bl
1001f938:	mov    BYTE PTR [ebp-0x4],0xa
1001f93c:	call   0x100012f9
1001f941:	test   bl,bl
1001f943:	je     0x1001f959
1001f945:	mov    edi,0x80004005
1001f94a:	lea    esi,[ebp+0x0]
1001f94d:	call   0x1000b7b1
1001f952:	mov    eax,edi
1001f954:	jmp    0x1001f876
1001f959:	cmp    DWORD PTR [ebp-0x14],edi
1001f95c:	mov    DWORD PTR [ebp-0x18],edi
1001f95f:	je     0x1001f972
1001f961:	push   DWORD PTR [ebp-0x14]
1001f964:	call   DWORD PTR ds:0x100650e0
1001f96a:	inc    eax
1001f96b:	cmp    eax,0x3fffffff
1001f970:	jle    0x1001f976
1001f972:	xor    eax,eax
1001f974:	jmp    0x1001f991
1001f976:	lea    ebx,[eax+eax*1]
1001f979:	mov    eax,ebx
1001f97b:	call   0x10049010
1001f980:	mov    DWORD PTR [ebp-0x10],esp
1001f983:	mov    esi,esp
1001f985:	push   DWORD PTR [ebp-0x1c]
1001f988:	push   ebx
1001f989:	push   DWORD PTR [ebp-0x14]
1001f98c:	call   0x1000677e
1001f991:	push   eax
1001f992:	lea    ecx,[ebp+0x94]
1001f998:	call   0x100011d6
1001f99d:	push   DWORD PTR [ebp+0xe8]
1001f9a3:	lea    eax,[ebp-0x18]
1001f9a6:	push   eax
1001f9a7:	push   edi
1001f9a8:	push   edi
1001f9a9:	lea    eax,[ebp+0x94]
1001f9af:	push   eax
1001f9b0:	lea    eax,[ebp+0x5c]
1001f9b3:	push   eax
1001f9b4:	mov    BYTE PTR [ebp-0x4],0xc
1001f9b8:	push   DWORD PTR [ebp+0x20]
1001f9bb:	lea    eax,[ebp+0x4]
1001f9be:	push   eax
1001f9bf:	lea    eax,[ebp-0x14]
1001f9c2:	push   eax
1001f9c3:	call   0x100322f0
1001f9c8:	mov    ecx,DWORD PTR [eax]
1001f9ca:	mov    ebx,ecx
1001f9cc:	mov    DWORD PTR [eax],edi
1001f9ce:	mov    DWORD PTR [ebp-0x1c],ebx
1001f9d1:	mov    BYTE PTR [ebp-0x4],0xd
1001f9d5:	push   DWORD PTR [ebp-0x14]
1001f9d8:	call   0x10041d92
1001f9dd:	add    esp,0x28
1001f9e0:	cmp    ebx,edi
1001f9e2:	je     0x1001fa52
1001f9e4:	push   DWORD PTR [ebp-0x18]
1001f9e7:	lea    esi,[ebp+0xb0]
1001f9ed:	push   ebx
1001f9ee:	call   0x10003bbb
1001f9f3:	mov    BYTE PTR [ebp-0x4],0xe
1001f9f7:	cmp    DWORD PTR [ebp+0xc8],0x10
1001f9fe:	mov    eax,DWORD PTR [ebp+0xb4]
1001fa04:	jae    0x1001fa0c
1001fa06:	lea    eax,[ebp+0xb4]
1001fa0c:	push   eax
1001fa0d:	lea    edi,[ebp-0x18]
1001fa10:	call   0x10002439
1001fa15:	mov    BYTE PTR [ebp-0x4],0xf
1001fa19:	call   0x10011c4d
1001fa1e:	mov    ecx,DWORD PTR [ebp-0x20]
1001fa21:	mov    DWORD PTR [ecx],eax
1001fa23:	call   0x1000256d
1001fa28:	xor    edi,edi
1001fa2a:	push   edi
1001fa2b:	push   0x1
1001fa2d:	lea    ecx,[ebp+0xb0]
1001fa33:	call   0x100012f9
1001fa38:	push   ebx
1001fa39:	call   0x10041d92
1001fa3e:	pop    ecx
1001fa3f:	push   edi
1001fa40:	push   0x1
1001fa42:	lea    ecx,[ebp+0x94]
1001fa48:	call   0x100012f9
1001fa4d:	jmp    0x1001f94a
1001fa52:	mov    DWORD PTR [ebp-0x18],edi
1001fa55:	lea    eax,[ebp-0x18]
1001fa58:	mov    BYTE PTR [ebp-0x4],0x10
1001fa5c:	call   0x10011c4d
1001fa61:	mov    ecx,DWORD PTR [ebp-0x20]
1001fa64:	lea    edi,[ebp-0x18]
1001fa67:	mov    DWORD PTR [ecx],eax
1001fa69:	call   0x1000256d
1001fa6e:	push   0x0
1001fa70:	call   0x10041d92
1001fa75:	pop    ecx
1001fa76:	push   0x0
1001fa78:	push   0x1
1001fa7a:	lea    ecx,[ebp+0x94]
1001fa80:	call   0x100012f9
1001fa85:	jmp    0x1001f945
1001fa8a:	mov    ecx,DWORD PTR [esp+0x8]
1001fa8e:	test   ecx,ecx
1001fa90:	mov    eax,DWORD PTR [esp+0x4]
1001fa94:	jne    0x1001fa9d
1001fa96:	mov    eax,0x80004003
1001fa9b:	jmp    0x1001fab1
1001fa9d:	mov    edx,DWORD PTR [eax-0x10]
1001faa0:	mov    DWORD PTR [ecx],edx
1001faa2:	mov    eax,DWORD PTR [eax-0x10]
1001faa5:	test   eax,eax
1001faa7:	je     0x1001faaf
1001faa9:	mov    ecx,DWORD PTR [eax]
1001faab:	push   eax
1001faac:	call   DWORD PTR [ecx+0x4]
1001faaf:	xor    eax,eax
1001fab1:	ret    0x8
1001fab4:	push   DWORD PTR [esp+0x8]
1001fab8:	call   DWORD PTR ds:0x10065160
1001fabe:	push   eax
1001fabf:	call   0x1001ecff
1001fac4:	pop    ecx
1001fac5:	pop    ecx
1001fac6:	xor    eax,eax
1001fac8:	ret    0x8
1001facb:	mov    eax,DWORD PTR [esi+0x4]
1001face:	mov    ecx,DWORD PTR [esi+0x8]
1001fad1:	cmp    eax,ecx
1001fad3:	push   edi
1001fad4:	jne    0x1001fb04
1001fad6:	test   ecx,ecx
1001fad8:	jne    0x1001fadf
1001fada:	xor    edi,edi
1001fadc:	inc    edi
1001fadd:	jmp    0x1001faee
1001fadf:	lea    edi,[eax+eax*1]
1001fae2:	test   edi,edi
1001fae4:	jl     0x1001fb24
1001fae6:	cmp    edi,0x3fffffff
1001faec:	ja     0x1001fb24
1001faee:	push   0x2
1001faf0:	push   edi
1001faf1:	push   DWORD PTR [esi]
1001faf3:	call   0x10045113
1001faf8:	add    esp,0xc
1001fafb:	test   eax,eax
1001fafd:	je     0x1001fb24
1001faff:	mov    DWORD PTR [esi+0x8],edi
1001fb02:	mov    DWORD PTR [esi],eax
1001fb04:	mov    eax,DWORD PTR [esi+0x4]
1001fb07:	mov    ecx,DWORD PTR [esi]
1001fb09:	lea    eax,[ecx+eax*2]
1001fb0c:	test   eax,eax
1001fb0e:	je     0x1001fb1a
1001fb10:	mov    ecx,DWORD PTR [esp+0x8]
1001fb14:	mov    cx,WORD PTR [ecx]
1001fb17:	mov    WORD PTR [eax],cx
1001fb1a:	inc    DWORD PTR [esi+0x4]
1001fb1d:	xor    eax,eax
1001fb1f:	inc    eax
1001fb20:	pop    edi
1001fb21:	ret    0x4
1001fb24:	xor    eax,eax
1001fb26:	jmp    0x1001fb20
1001fb28:	mov    eax,DWORD PTR [esp+0x8]
1001fb2c:	push   esi
1001fb2d:	xor    esi,esi
1001fb2f:	cmp    eax,esi
1001fb31:	push   edi
1001fb32:	jne    0x1001fb39
1001fb34:	mov    eax,0x1007e800
1001fb39:	mov    ecx,DWORD PTR [eax+0x4]
1001fb3c:	mov    edi,DWORD PTR [eax+0xc]
1001fb3f:	mov    edx,DWORD PTR [eax]
1001fb41:	mov    eax,DWORD PTR [eax+0x8]
1001fb44:	push   esi
1001fb45:	push   DWORD PTR ds:0x1007f9e4
1001fb4b:	sub    edi,ecx
1001fb4d:	push   DWORD PTR [esp+0x1c]
1001fb51:	sub    eax,edx
1001fb53:	push   esi
1001fb54:	push   edi
1001fb55:	push   eax
1001fb56:	push   ecx
1001fb57:	push   edx
1001fb58:	push   esi
1001fb59:	push   esi
1001fb5a:	push   0x1006f184
1001fb5f:	push   esi
1001fb60:	call   DWORD PTR ds:0x1006532c
1001fb66:	mov    ecx,DWORD PTR [esp+0xc]
1001fb6a:	pop    edi
1001fb6b:	mov    DWORD PTR [ecx],eax
1001fb6d:	pop    esi
1001fb6e:	ret    0xc
1001fb71:	push   0x0
1001fb73:	mov    eax,0x1005e407
1001fb78:	call   0x10058845
1001fb7d:	xor    ecx,ecx
1001fb7f:	cmp    ebx,ecx
1001fb81:	jne    0x1001fb8a
1001fb83:	mov    eax,0x80004003
1001fb88:	jmp    0x1001fbd7
1001fb8a:	mov    DWORD PTR [ebx],ecx
1001fb8c:	push   ecx
1001fb8d:	mov    DWORD PTR [ebp-0x4],ecx
1001fb90:	mov    eax,DWORD PTR [ebp+0x8]
1001fb93:	mov    eax,DWORD PTR [eax]
1001fb95:	push   ecx
1001fb96:	push   DWORD PTR ds:0x1007ffb8
1001fb9c:	push   eax
1001fb9d:	call   DWORD PTR ds:0x10065338
1001fba3:	mov    edi,eax
1001fba5:	mov    esi,edi
1001fba7:	neg    esi
1001fba9:	sbb    esi,esi
1001fbab:	and    esi,0x7fffbffb
1001fbb1:	add    esi,0x80004005
1001fbb7:	mov    DWORD PTR [ebp+0x8],edi
1001fbba:	js     0x1001fbc7
1001fbbc:	mov    eax,DWORD PTR [edi]
1001fbbe:	push   ebx
1001fbbf:	push   DWORD PTR [ebp+0xc]
1001fbc2:	push   edi
1001fbc3:	call   DWORD PTR [eax]
1001fbc5:	mov    esi,eax
1001fbc7:	or     DWORD PTR [ebp-0x4],0xffffffff
1001fbcb:	test   edi,edi
1001fbcd:	je     0x1001fbd5
1001fbcf:	mov    eax,DWORD PTR [edi]
1001fbd1:	push   edi
1001fbd2:	call   DWORD PTR [eax+0x8]
1001fbd5:	mov    eax,esi
1001fbd7:	call   0x1005891d
1001fbdc:	ret    0x8
1001fbdf:	push   ebp
1001fbe0:	mov    ebp,esp
1001fbe2:	cmp    DWORD PTR ds:0x1007e848,0x0
1001fbe9:	jne    0x1001fbf2
1001fbeb:	and    DWORD PTR ds:0x1007e848,0x0
1001fbf2:	push   ebx
1001fbf3:	push   DWORD PTR [ebp+0xc]
1001fbf6:	lea    eax,[esi+0x20]
1001fbf9:	push   eax
1001fbfa:	mov    ebx,0x1007e818
1001fbff:	call   0x10021a05
1001fc04:	pop    ecx
1001fc05:	pop    ecx
1001fc06:	movzx  eax,ax
1001fc09:	push   eax
1001fc0a:	push   DWORD PTR [ebp+0xc]
1001fc0d:	mov    ebx,esi
1001fc0f:	push   0x0
1001fc11:	push   0xcf0000
1001fc16:	push   0x1006f04c
1001fc1b:	push   DWORD PTR [ebp+0x8]
1001fc1e:	call   0x1002197e
1001fc23:	pop    ebx
1001fc24:	pop    ebp
1001fc25:	ret    0x8
1001fc28:	mov    eax,0x10021878
1001fc2d:	ret    
1001fc2e:	push   ebp
1001fc2f:	mov    ebp,esp
1001fc31:	cmp    DWORD PTR ds:0x1007e8d8,0x0
1001fc38:	jne    0x1001fc41
1001fc3a:	and    DWORD PTR ds:0x1007e8d8,0x0
1001fc41:	push   ebx
1001fc42:	push   DWORD PTR [ebp+0xc]
1001fc45:	lea    eax,[esi+0x20]
1001fc48:	push   eax
1001fc49:	mov    ebx,0x1007e8a8
1001fc4e:	call   0x10021a05
1001fc53:	pop    ecx
1001fc54:	pop    ecx
1001fc55:	movzx  eax,ax
1001fc58:	push   eax
1001fc59:	push   DWORD PTR [ebp+0xc]
1001fc5c:	mov    ebx,esi
1001fc5e:	push   0x0
1001fc60:	push   0xcf0000
1001fc65:	push   0x1006f098
1001fc6a:	push   DWORD PTR [ebp+0x8]
1001fc6d:	call   0x1002197e
1001fc72:	pop    ebx
1001fc73:	pop    ebp
1001fc74:	ret    0x8
1001fc77:	push   esi
1001fc78:	mov    esi,DWORD PTR [esp+0x8]
1001fc7c:	lea    eax,[esi-0x38]
1001fc7f:	neg    esi
1001fc81:	sbb    esi,esi
1001fc83:	and    esi,eax
1001fc85:	push   edi
1001fc86:	mov    edi,DWORD PTR [esp+0x10]
1001fc8a:	add    esi,0x3c
1001fc8d:	cmp    DWORD PTR [esi],edi
1001fc8f:	je     0x1001fc96
1001fc91:	call   0x10007188
1001fc96:	pop    edi
1001fc97:	xor    eax,eax
1001fc99:	pop    esi
1001fc9a:	ret    0x8
1001fc9d:	mov    ecx,DWORD PTR [esp+0x4]
1001fca1:	mov    edx,DWORD PTR [esp+0xc]
1001fca5:	lea    eax,[ecx-0x38]
1001fca8:	neg    ecx
1001fcaa:	sbb    ecx,ecx
1001fcac:	and    ecx,eax
1001fcae:	test   edx,edx
1001fcb0:	mov    eax,0x80004003
1001fcb5:	je     0x1001fcd2
1001fcb7:	mov    ecx,DWORD PTR [ecx+0x3c]
1001fcba:	test   ecx,ecx
1001fcbc:	je     0x1001fcca
1001fcbe:	mov    eax,DWORD PTR [ecx]
1001fcc0:	push   edx
1001fcc1:	push   DWORD PTR [esp+0xc]
1001fcc5:	push   ecx
1001fcc6:	call   DWORD PTR [eax]
1001fcc8:	jmp    0x1001fcd2
1001fcca:	and    DWORD PTR [edx],0x0
1001fccd:	mov    eax,0x80004005
1001fcd2:	ret    0xc
1001fcd5:	push   edi
1001fcd6:	mov    edi,DWORD PTR [esp+0x14]
1001fcda:	mov    ecx,0x1007e934
1001fcdf:	call   0x10010198
1001fce4:	pop    edi
1001fce5:	ret    0x10
1001fce8:	push   DWORD PTR [esp+0x18]
1001fcec:	mov    eax,0x1007e934
1001fcf1:	push   DWORD PTR [esp+0x14]
1001fcf5:	push   DWORD PTR [esp+0x14]
1001fcf9:	call   0x100101c6
1001fcfe:	ret    0x18
1001fd01:	push   ebp
1001fd02:	mov    ebp,esp
1001fd04:	push   DWORD PTR [ebp+0x28]
1001fd07:	mov    eax,0x1007e934
1001fd0c:	push   DWORD PTR [ebp+0x24]
1001fd0f:	push   DWORD PTR [ebp+0x20]
1001fd12:	push   DWORD PTR [ebp+0x1c]
1001fd15:	push   DWORD PTR [ebp+0x18]
1001fd18:	push   DWORD PTR [ebp+0xc]
1001fd1b:	push   DWORD PTR [ebp+0x8]
1001fd1e:	call   0x10010269
1001fd23:	pop    ebp
1001fd24:	ret    0x24
1001fd27:	push   esi
1001fd28:	mov    esi,ecx
1001fd2a:	mov    DWORD PTR [esi],0x1006f2e8
1001fd30:	mov    DWORD PTR [esi+0x24],0x1006f2f8
1001fd37:	mov    DWORD PTR [esi+0x28],0xc0000001
1001fd3e:	mov    eax,DWORD PTR [esi+0x2c]
1001fd41:	test   eax,eax
1001fd43:	je     0x1001fd4f
1001fd45:	and    DWORD PTR [esi+0x2c],0x0
1001fd49:	mov    ecx,DWORD PTR [eax]
1001fd4b:	push   eax
1001fd4c:	call   DWORD PTR [ecx+0x8]
1001fd4f:	mov    eax,DWORD PTR [esi+0x4]
1001fd52:	test   eax,eax
1001fd54:	je     0x1001fd5d
1001fd56:	push   eax
1001fd57:	call   DWORD PTR ds:0x100652fc
1001fd5d:	mov    ecx,DWORD PTR ds:0x1007fbe4
1001fd63:	mov    eax,DWORD PTR [ecx]
1001fd65:	call   DWORD PTR [eax+0x8]
1001fd68:	mov    eax,DWORD PTR [esi+0x2c]
1001fd6b:	test   eax,eax
1001fd6d:	je     0x1001fd75
1001fd6f:	mov    ecx,DWORD PTR [eax]
1001fd71:	push   eax
1001fd72:	call   DWORD PTR [ecx+0x8]
1001fd75:	mov    esi,DWORD PTR [esi+0x14]
1001fd78:	test   esi,esi
1001fd7a:	je     0x1001fd82
1001fd7c:	push   esi
1001fd7d:	call   0x10055f58
1001fd82:	pop    esi
1001fd83:	ret    
1001fd84:	mov    eax,DWORD PTR [esp+0x4]
1001fd88:	dec    DWORD PTR [eax+0x4]
1001fd8b:	push   esi
1001fd8c:	mov    esi,DWORD PTR [eax+0x4]
1001fd8f:	jne    0x1001fd9f
1001fd91:	lea    ecx,[eax-0x24]
1001fd94:	test   ecx,ecx
1001fd96:	je     0x1001fd9f
1001fd98:	mov    eax,DWORD PTR [ecx]
1001fd9a:	push   0x1
1001fd9c:	call   DWORD PTR [eax+0x4]
1001fd9f:	mov    eax,esi
1001fda1:	pop    esi
1001fda2:	ret    0x4
1001fda5:	mov    eax,DWORD PTR [esp+0x4]
1001fda9:	push   ebx
1001fdaa:	push   DWORD PTR [esp+0xc]
1001fdae:	mov    ebx,DWORD PTR [esp+0x14]
1001fdb2:	add    eax,0xffffffdc
1001fdb5:	push   eax
1001fdb6:	mov    eax,0x1006f01c
1001fdbb:	call   0x10010077
1001fdc0:	pop    ebx
1001fdc1:	ret    0xc
1001fdc4:	push   esi
1001fdc5:	mov    esi,ecx
1001fdc7:	mov    DWORD PTR [esi],0x1006f334
1001fdcd:	mov    DWORD PTR [esi+0x24],0x1006f344
1001fdd4:	mov    DWORD PTR [esi+0x28],0xc0000001
1001fddb:	mov    eax,DWORD PTR [esi+0x2c]
1001fdde:	test   eax,eax
1001fde0:	je     0x1001fdec
1001fde2:	and    DWORD PTR [esi+0x2c],0x0
1001fde6:	mov    ecx,DWORD PTR [eax]
1001fde8:	push   eax
1001fde9:	call   DWORD PTR [ecx+0x8]
1001fdec:	mov    eax,DWORD PTR [esi+0x4]
1001fdef:	test   eax,eax
1001fdf1:	je     0x1001fdfa
1001fdf3:	push   eax
1001fdf4:	call   DWORD PTR ds:0x100652fc
1001fdfa:	mov    ecx,DWORD PTR ds:0x1007fbe4
1001fe00:	mov    eax,DWORD PTR [ecx]
1001fe02:	call   DWORD PTR [eax+0x8]
1001fe05:	mov    eax,DWORD PTR [esi+0x2c]
1001fe08:	test   eax,eax
1001fe0a:	je     0x1001fe12
1001fe0c:	mov    ecx,DWORD PTR [eax]
1001fe0e:	push   eax
1001fe0f:	call   DWORD PTR [ecx+0x8]
1001fe12:	mov    esi,DWORD PTR [esi+0x14]
1001fe15:	test   esi,esi
1001fe17:	je     0x1001fe1f
1001fe19:	push   esi
1001fe1a:	call   0x10055f58
1001fe1f:	pop    esi
1001fe20:	ret    
1001fe21:	mov    eax,DWORD PTR [esp+0x4]
1001fe25:	push   ebx
1001fe26:	push   DWORD PTR [esp+0xc]
1001fe2a:	mov    ebx,DWORD PTR [esp+0x14]
1001fe2e:	add    eax,0xffffffdc
1001fe31:	push   eax
1001fe32:	mov    eax,0x1006f074
1001fe37:	call   0x10010077
1001fe3c:	pop    ebx
1001fe3d:	ret    0xc
1001fe40:	xor    eax,eax
1001fe42:	mov    DWORD PTR [esi+0x4],eax
1001fe45:	mov    DWORD PTR [esi+0x10],eax
1001fe48:	mov    DWORD PTR [esi+0xc],eax
1001fe4b:	mov    DWORD PTR [esi+0x8],eax
1001fe4e:	mov    DWORD PTR [esi+0x14],eax
1001fe51:	mov    DWORD PTR [esi+0x18],eax
1001fe54:	mov    DWORD PTR [esi],0x1006f368
1001fe5a:	mov    ecx,DWORD PTR ds:0x1007fbe4
1001fe60:	mov    eax,DWORD PTR [ecx]
1001fe62:	call   DWORD PTR [eax+0x4]
1001fe65:	mov    eax,esi
1001fe67:	ret    
1001fe68:	push   esi
1001fe69:	mov    esi,ecx
1001fe6b:	mov    DWORD PTR [esi],0x1006f368
1001fe71:	mov    DWORD PTR [esi+0x18],0xc0000001
1001fe78:	mov    ecx,DWORD PTR ds:0x1007fbe4
1001fe7e:	mov    eax,DWORD PTR [ecx]
1001fe80:	call   DWORD PTR [eax+0x8]
1001fe83:	mov    ecx,esi
1001fe85:	pop    esi
1001fe86:	jmp    0x10021c8b
1001fe8b:	mov    eax,DWORD PTR [esp+0x4]
1001fe8f:	inc    DWORD PTR [eax+0x18]
1001fe92:	mov    eax,DWORD PTR [eax+0x18]
1001fe95:	ret    0x4
1001fe98:	mov    ecx,DWORD PTR [esp+0x4]
1001fe9c:	dec    DWORD PTR [ecx+0x18]
1001fe9f:	push   esi
1001fea0:	mov    esi,DWORD PTR [ecx+0x18]
1001fea3:	jne    0x1001feb0
1001fea5:	test   ecx,ecx
1001fea7:	je     0x1001feb0
1001fea9:	mov    eax,DWORD PTR [ecx]
1001feab:	push   0x1
1001fead:	call   DWORD PTR [eax+0x1c]
1001feb0:	mov    eax,esi
1001feb2:	pop    esi
1001feb3:	ret    0x4
1001feb6:	push   ebx
1001feb7:	push   DWORD PTR [esp+0xc]
1001febb:	mov    ebx,DWORD PTR [esp+0x14]
1001febf:	push   DWORD PTR [esp+0xc]
1001fec3:	mov    eax,0x1006f2c0
1001fec8:	call   0x10010077
1001fecd:	pop    ebx
1001fece:	ret    0xc
1001fed1:	mov    eax,DWORD PTR [esp+0x4]
1001fed5:	mov    ecx,DWORD PTR [eax+0x8]
1001fed8:	mov    DWORD PTR [eax+0x10],ecx
1001fedb:	xor    eax,eax
1001fedd:	ret    0x4
1001fee0:	push   DWORD PTR [esi]
1001fee2:	call   0x1001b117
1001fee7:	and    DWORD PTR [esi],0x0
1001feea:	pop    ecx
1001feeb:	ret    
1001feec:	push   0x10
1001feee:	mov    eax,0x1005efb6
1001fef3:	call   0x10058878
1001fef8:	mov    eax,DWORD PTR [ebp+0x8]
1001fefb:	xor    esi,esi
1001fefd:	cmp    eax,esi
1001feff:	jne    0x1001ff08
1001ff01:	mov    eax,0x80004003
1001ff06:	jmp    0x1001ff6e
1001ff08:	push   0xf4
1001ff0d:	mov    DWORD PTR [eax],esi
1001ff0f:	mov    DWORD PTR [ebp-0x14],0x8007000e
1001ff16:	mov    DWORD PTR [ebp-0x1c],esi
1001ff19:	mov    DWORD PTR [ebp-0x4],esi
1001ff1c:	call   0x1004239e
1001ff21:	pop    ecx
1001ff22:	mov    DWORD PTR [ebp-0x18],eax
1001ff25:	cmp    eax,esi
1001ff27:	mov    BYTE PTR [ebp-0x4],0x1
1001ff2b:	je     0x1001ff35
1001ff2d:	push   eax
1001ff2e:	call   0x10020bb2
1001ff33:	mov    esi,eax
1001ff35:	or     DWORD PTR [ebp-0x4],0xffffffff
1001ff39:	jmp    0x1001ff44
1001ff3b:	mov    eax,0x1001ff41
1001ff40:	ret    
1001ff41:	mov    esi,DWORD PTR [ebp-0x1c]
1001ff44:	test   esi,esi
1001ff46:	je     0x1001ff6b
1001ff48:	push   DWORD PTR [ebp+0x8]
1001ff4b:	inc    DWORD PTR [esi+0x4]
1001ff4e:	dec    DWORD PTR [esi+0x4]
1001ff51:	mov    eax,DWORD PTR [esi]
1001ff53:	push   0x1006c9b4
1001ff58:	push   esi
1001ff59:	call   DWORD PTR [eax]
1001ff5b:	test   eax,eax
1001ff5d:	mov    DWORD PTR [ebp-0x14],eax
1001ff60:	je     0x1001ff6b
1001ff62:	mov    eax,DWORD PTR [esi]
1001ff64:	push   0x1
1001ff66:	mov    ecx,esi
1001ff68:	call   DWORD PTR [eax+0xc]
1001ff6b:	mov    eax,DWORD PTR [ebp-0x14]
1001ff6e:	call   0x1005891d
1001ff73:	ret    0x4
1001ff76:	push   ebp
1001ff77:	mov    ebp,esp
1001ff79:	and    esp,0xfffffff8
1001ff7c:	push   0xffffffff
1001ff7e:	push   0x1005f9e5
1001ff83:	mov    eax,fs:0x0
1001ff89:	push   eax
1001ff8a:	sub    esp,0x70
1001ff8d:	mov    eax,ds:0x1007d030
1001ff92:	xor    eax,esp
1001ff94:	mov    DWORD PTR [esp+0x68],eax
1001ff98:	push   ebx
1001ff99:	push   esi
1001ff9a:	push   edi
1001ff9b:	mov    eax,ds:0x1007d030
1001ffa0:	xor    eax,esp
1001ffa2:	push   eax
1001ffa3:	lea    eax,[esp+0x80]
1001ffaa:	mov    fs:0x0,eax
1001ffb0:	mov    edi,ecx
1001ffb2:	mov    eax,edi
1001ffb4:	mov    DWORD PTR [esp+0x14],edi
1001ffb8:	mov    esi,edx
1001ffba:	call   0x10020935
1001ffbf:	lea    eax,[esp+0x68]
1001ffc3:	push   eax
1001ffc4:	push   esi
1001ffc5:	call   DWORD PTR ds:0x10065434
1001ffcb:	test   eax,eax
1001ffcd:	jl     0x100200ec
1001ffd3:	lea    esi,[edi+0xc]
1001ffd6:	push   esi
1001ffd7:	push   0x1006a6c8
1001ffdc:	push   0x17
1001ffde:	push   0x0
1001ffe0:	lea    eax,[esp+0x78]
1001ffe4:	push   eax
1001ffe5:	mov    DWORD PTR [esp+0x2c],esi
1001ffe9:	call   DWORD PTR ds:0x10065438
1001ffef:	test   eax,eax
1001fff1:	mov    DWORD PTR [esp+0x10],eax
1001fff5:	jl     0x1002002c
1001fff7:	mov    eax,DWORD PTR [esi]
1001fff9:	mov    ecx,DWORD PTR [eax]
1001fffb:	lea    ebx,[edi+0x8]
1001fffe:	push   ebx
1001ffff:	push   0x1006a6b8
10020004:	push   eax
10020005:	call   DWORD PTR [ecx]
10020007:	test   eax,eax
10020009:	mov    DWORD PTR [esp+0x10],eax
1002000d:	jl     0x1002002c
1002000f:	mov    esi,DWORD PTR [esi]
10020011:	mov    eax,DWORD PTR [esi]
10020013:	push   edi
10020014:	push   esi
10020015:	call   DWORD PTR [eax+0xc]
10020018:	test   eax,eax
1002001a:	mov    DWORD PTR [esp+0x10],eax
1002001e:	jl     0x1002002c
10020020:	mov    ebx,DWORD PTR [ebx]
10020022:	mov    eax,DWORD PTR [ebx]
10020024:	push   ebx
10020025:	call   DWORD PTR [eax+0xc]
10020028:	mov    DWORD PTR [esp+0x10],eax
1002002c:	push   0x1006f2a8
10020031:	lea    eax,[esp+0x50]
10020035:	call   0x100207c3
1002003a:	and    DWORD PTR [esp+0x88],0x0
10020042:	mov    eax,edi
10020044:	neg    eax
10020046:	sbb    eax,eax
10020048:	lea    ecx,[edi-0x8]
1002004b:	and    eax,ecx
1002004d:	lea    ebx,[eax+0x24]
10020050:	lea    eax,[esp+0x4c]
10020054:	lea    esi,[esp+0x20]
10020058:	call   0x10004598
1002005d:	mov    DWORD PTR [esp+0x3c],ebx
10020061:	mov    eax,esi
10020063:	add    edi,0x10
10020066:	push   eax
10020067:	push   edi
10020068:	mov    DWORD PTR [esp+0x24],edi
1002006c:	lea    edi,[esp+0x48]
10020070:	mov    BYTE PTR [esp+0x90],0x1
10020078:	call   0x100207ef
1002007d:	push   0x1
1002007f:	xor    ebx,ebx
10020081:	mov    BYTE PTR [esp+0x8c],0x0
10020089:	call   0x10004b54
1002008e:	cmp    DWORD PTR [esp+0x10],ebx
10020092:	jl     0x100200c9
10020094:	mov    esi,DWORD PTR [esp+0x18]
10020098:	mov    eax,DWORD PTR [esi]
1002009a:	mov    ecx,DWORD PTR [eax]
1002009c:	push   0xe
1002009e:	push   0x1006f2a8
100200a3:	push   eax
100200a4:	call   DWORD PTR [ecx+0x20]
100200a7:	test   eax,eax
100200a9:	jl     0x100200c9
100200ab:	mov    eax,DWORD PTR [esi]
100200ad:	mov    ecx,DWORD PTR [eax]
100200af:	push   0x1
100200b1:	push   eax
100200b2:	call   DWORD PTR [ecx+0x14]
100200b5:	test   eax,eax
100200b7:	jl     0x100200c9
100200b9:	push   0x1
100200bb:	lea    esi,[esp+0x50]
100200bf:	call   0x10004b54
100200c4:	xor    eax,eax
100200c6:	inc    eax
100200c7:	jmp    0x100200ee
100200c9:	mov    ecx,DWORD PTR [esp+0x1c]
100200cd:	lea    eax,[esp+0x4c]
100200d1:	call   0x100208a5
100200d6:	mov    eax,DWORD PTR [esp+0x14]
100200da:	call   0x10020935
100200df:	push   0x1
100200e1:	xor    ebx,ebx
100200e3:	lea    esi,[esp+0x50]
100200e7:	call   0x10004b54
100200ec:	xor    eax,eax
100200ee:	mov    ecx,DWORD PTR [esp+0x80]
100200f5:	mov    DWORD PTR fs:0x0,ecx
100200fc:	pop    ecx
100200fd:	pop    edi
100200fe:	pop    esi
100200ff:	pop    ebx
10020100:	mov    ecx,DWORD PTR [esp+0x68]
10020104:	xor    ecx,esp
10020106:	call   0x10041d97
1002010b:	mov    esp,ebp
1002010d:	pop    ebp
1002010e:	ret    
1002010f:	push   ebp
10020110:	mov    ebp,esp
10020112:	and    esp,0xfffffff8
10020115:	push   0xffffffff
10020117:	push   0x1005f9ad
1002011c:	mov    eax,fs:0x0
10020122:	push   eax
10020123:	sub    esp,0x60
10020126:	mov    eax,ds:0x1007d030
1002012b:	xor    eax,esp
1002012d:	mov    DWORD PTR [esp+0x58],eax
10020131:	push   ebx
10020132:	push   esi
10020133:	push   edi
10020134:	mov    eax,ds:0x1007d030
10020139:	xor    eax,esp
1002013b:	push   eax
1002013c:	lea    eax,[esp+0x70]
10020140:	mov    fs:0x0,eax
10020146:	mov    ebx,ecx
10020148:	mov    esi,DWORD PTR [ebp+0x8]
1002014b:	mov    edi,edx
1002014d:	cmp    DWORD PTR [edi+0xc],0x0
10020151:	mov    DWORD PTR [esp+0x18],edi
10020155:	mov    DWORD PTR [esp+0x1c],esi
10020159:	je     0x10020207
1002015f:	test   ebx,ebx
10020161:	je     0x10020207
10020167:	call   DWORD PTR ds:0x1007dfe4
1002016d:	push   esi
1002016e:	lea    eax,[esp+0x50]
10020172:	call   0x100207c3
10020177:	and    DWORD PTR [esp+0x78],0x0
1002017c:	lea    eax,[esp+0x4c]
10020180:	lea    esi,[esp+0x20]
10020184:	call   0x10004598
10020189:	mov    DWORD PTR [esp+0x3c],ebx
1002018d:	lea    eax,[edi+0x10]
10020190:	mov    ecx,esi
10020192:	push   ecx
10020193:	push   eax
10020194:	lea    edi,[esp+0x48]
10020198:	mov    BYTE PTR [esp+0x80],0x1
100201a0:	mov    DWORD PTR [esp+0x1c],eax
100201a4:	call   0x100207ef
100201a9:	push   0x1
100201ab:	xor    ebx,ebx
100201ad:	mov    BYTE PTR [esp+0x7c],0x0
100201b2:	call   0x10004b54
100201b7:	mov    esi,DWORD PTR [esp+0x18]
100201bb:	mov    eax,DWORD PTR [esi+0xc]
100201be:	mov    ecx,DWORD PTR [eax]
100201c0:	push   0xe
100201c2:	push   DWORD PTR [esp+0x20]
100201c6:	push   eax
100201c7:	call   DWORD PTR [ecx+0x20]
100201ca:	test   eax,eax
100201cc:	jl     0x100201ed
100201ce:	mov    esi,DWORD PTR [esi+0xc]
100201d1:	mov    eax,DWORD PTR [esi]
100201d3:	push   0x2
100201d5:	push   esi
100201d6:	call   DWORD PTR [eax+0x14]
100201d9:	test   eax,eax
100201db:	jl     0x100201ed
100201dd:	push   0x1
100201df:	lea    esi,[esp+0x50]
100201e3:	call   0x10004b54
100201e8:	xor    eax,eax
100201ea:	inc    eax
100201eb:	jmp    0x10020209
100201ed:	mov    ecx,DWORD PTR [esp+0x14]
100201f1:	lea    eax,[esp+0x4c]
100201f5:	call   0x100208a5
100201fa:	push   0x1
100201fc:	xor    ebx,ebx
100201fe:	lea    esi,[esp+0x50]
10020202:	call   0x10004b54
10020207:	xor    eax,eax
10020209:	mov    ecx,DWORD PTR [esp+0x70]
1002020d:	mov    DWORD PTR fs:0x0,ecx
10020214:	pop    ecx
10020215:	pop    edi
10020216:	pop    esi
10020217:	pop    ebx
10020218:	mov    ecx,DWORD PTR [esp+0x58]
1002021c:	xor    ecx,esp
1002021e:	call   0x10041d97
10020223:	mov    esp,ebp
10020225:	pop    ebp
10020226:	ret    0x4
10020229:	push   ebp
1002022a:	mov    ebp,esp
1002022c:	sub    esp,0x1c
1002022f:	mov    eax,ds:0x1007d030
10020234:	xor    eax,ebp
10020236:	mov    DWORD PTR [ebp-0x8],eax
10020239:	mov    eax,DWORD PTR [ebp+0x8]
1002023c:	and    DWORD PTR [ebp-0x1c],0x0
10020240:	push   esi
10020241:	push   edi
10020242:	mov    esi,0x1006a668
10020247:	lea    edi,[ebp-0x18]
1002024a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002024b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002024c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002024d:	lea    ecx,[ebp-0x18]
10020250:	push   ecx
10020251:	push   eax
10020252:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10020253:	call   DWORD PTR ds:0x10065434
10020259:	test   eax,eax
1002025b:	jl     0x10020274
1002025d:	lea    eax,[ebp-0x1c]
10020260:	push   eax
10020261:	push   0x1006a6d8
10020266:	push   0x1
10020268:	push   0x0
1002026a:	lea    eax,[ebp-0x18]
1002026d:	push   eax
1002026e:	call   DWORD PTR ds:0x10065438
10020274:	mov    ecx,DWORD PTR [ebp-0x8]
10020277:	mov    eax,DWORD PTR [ebp-0x1c]
1002027a:	pop    edi
1002027b:	xor    ecx,ebp
1002027d:	pop    esi
1002027e:	call   0x10041d97
10020283:	leave  
10020284:	ret    0x4
10020287:	push   ebp
10020288:	mov    ebp,esp
1002028a:	mov    ecx,DWORD PTR [ecx+0xc]
1002028d:	sub    esp,0x14
10020290:	push   edi
10020291:	xor    edi,edi
10020293:	cmp    ecx,edi
10020295:	mov    eax,0x80004005
1002029a:	je     0x100202fb
1002029c:	mov    eax,DWORD PTR [ebp+0xc]
1002029f:	lea    edx,[ebp-0x4]
100202a2:	mov    DWORD PTR [ebp-0x14],eax
100202a5:	mov    eax,DWORD PTR [ebp+0x10]
100202a8:	push   edx
100202a9:	push   edi
100202aa:	mov    DWORD PTR [ebp-0x4],edi
100202ad:	mov    DWORD PTR [ebp-0x10],edi
100202b0:	mov    DWORD PTR [ebp-0xc],eax
100202b3:	mov    DWORD PTR [ebp-0x8],edi
100202b6:	mov    eax,DWORD PTR [ecx]
100202b8:	push   ecx
100202b9:	call   DWORD PTR [eax+0x28]
100202bc:	cmp    eax,edi
100202be:	jl     0x100202fb
100202c0:	mov    eax,DWORD PTR [ebp-0x4]
100202c3:	mov    ecx,DWORD PTR [eax]
100202c5:	push   esi
100202c6:	lea    edx,[ebp+0xc]
100202c9:	push   edx
100202ca:	push   0x9
100202cc:	push   0x1
100202ce:	lea    edx,[ebp+0x8]
100202d1:	push   edx
100202d2:	mov    esi,0x1006a668
100202d7:	push   esi
100202d8:	push   eax
100202d9:	call   DWORD PTR [ecx+0x14]
100202dc:	cmp    eax,edi
100202de:	jl     0x100202fa
100202e0:	mov    eax,DWORD PTR [ebp-0x4]
100202e3:	mov    ecx,DWORD PTR [eax]
100202e5:	push   edi
100202e6:	push   edi
100202e7:	push   DWORD PTR [ebp+0x14]
100202ea:	lea    edx,[ebp-0x14]
100202ed:	push   edx
100202ee:	push   0x1
100202f0:	push   0x9
100202f2:	push   esi
100202f3:	push   DWORD PTR [ebp+0xc]
100202f6:	push   eax
100202f7:	call   DWORD PTR [ecx+0x18]
100202fa:	pop    esi
100202fb:	pop    edi
100202fc:	leave  
100202fd:	ret    0x10
10020300:	push   ebp
10020301:	mov    ebp,esp
10020303:	sub    esp,0x30
10020306:	push   esi
10020307:	push   edi
10020308:	push   ebx
10020309:	lea    eax,[ebp-0x8]
1002030c:	call   0x10020ab2
10020311:	mov    eax,ds:0x1007ff38
10020316:	lea    edi,[ebp-0x10]
10020319:	lea    esi,[ebp-0x8]
1002031c:	mov    DWORD PTR [ebp-0xc],eax
1002031f:	mov    DWORD PTR [ebp-0x10],0x1007ff34
10020326:	call   0x100046f1
1002032b:	test   al,al
1002032d:	mov    ecx,DWORD PTR [ebp-0x4]
10020330:	jne    0x10020339
10020332:	mov    eax,DWORD PTR [ebx]
10020334:	cmp    eax,DWORD PTR [ecx+0xc]
10020337:	jae    0x1002036c
10020339:	xor    eax,eax
1002033b:	lea    edi,[ebp-0x18]
1002033e:	stos   DWORD PTR es:[edi],eax
1002033f:	stos   DWORD PTR es:[edi],eax
10020340:	stos   DWORD PTR es:[edi],eax
10020341:	stos   DWORD PTR es:[edi],eax
10020342:	mov    eax,DWORD PTR [ebx]
10020344:	mov    DWORD PTR [ebp-0x2c],eax
10020347:	lea    esi,[ebp-0x18]
1002034a:	lea    edi,[ebp-0x28]
1002034d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002034e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002034f:	push   ecx
10020350:	push   DWORD PTR [ebp-0x8]
10020353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10020354:	lea    eax,[ebp-0x10]
10020357:	push   eax
10020358:	lea    eax,[ebp-0x2c]
1002035b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002035c:	call   0x1002096d
10020361:	mov    ecx,DWORD PTR [eax]
10020363:	mov    eax,DWORD PTR [eax+0x4]
10020366:	mov    DWORD PTR [ebp-0x8],ecx
10020369:	mov    DWORD PTR [ebp-0x4],eax
1002036c:	lea    esi,[ebp-0x8]
1002036f:	call   0x10009753
10020374:	pop    edi
10020375:	add    eax,0x4
10020378:	pop    esi
10020379:	leave  
1002037a:	ret    
1002037b:	push   ebp
1002037c:	mov    ebp,esp
1002037e:	and    esp,0xfffffff8
10020381:	mov    eax,ds:0x1007ff38
10020386:	mov    edx,DWORD PTR [eax]
10020388:	sub    esp,0xc
1002038b:	push   esi
1002038c:	push   eax
1002038d:	mov    ecx,0x1007ff34
10020392:	mov    esi,ecx
10020394:	push   esi
10020395:	push   edx
10020396:	push   ecx
10020397:	lea    eax,[esp+0x18]
1002039b:	push   eax
1002039c:	call   0x1002103d
100203a1:	push   DWORD PTR ds:0x1007ff38
100203a7:	call   0x10041d92
100203ac:	and    DWORD PTR ds:0x1007ff38,0x0
100203b3:	and    DWORD PTR ds:0x1007ff3c,0x0
100203ba:	pop    ecx
100203bb:	pop    esi
100203bc:	mov    esp,ebp
100203be:	pop    ebp
100203bf:	ret    
100203c0:	push   0x48
100203c2:	mov    eax,0x1005f147
100203c7:	call   0x10058845
100203cc:	mov    ebx,DWORD PTR [ebp+0x10]
100203cf:	cmp    BYTE PTR [ebx+0x21],0x0
100203d3:	je     0x10020407
100203d5:	push   0x1006bafc
100203da:	lea    ecx,[ebp-0x2c]
100203dd:	call   0x100011d6
100203e2:	and    DWORD PTR [ebp-0x4],0x0
100203e6:	lea    eax,[ebp-0x2c]
100203e9:	push   eax
100203ea:	lea    ecx,[ebp-0x54]
100203ed:	call   0x10001065
100203f2:	push   0x10073880
100203f7:	lea    eax,[ebp-0x54]
100203fa:	push   eax
100203fb:	mov    DWORD PTR [ebp-0x54],0x1006a788
10020402:	call   0x10046704
10020407:	lea    esi,[ebp+0xc]
1002040a:	call   0x10020b65
1002040f:	mov    ecx,DWORD PTR [ebx]
10020411:	cmp    BYTE PTR [ecx+0x21],0x0
10020415:	je     0x1002041c
10020417:	mov    edi,DWORD PTR [ebx+0x8]
1002041a:	jmp    0x10020433
1002041c:	mov    eax,DWORD PTR [ebx+0x8]
1002041f:	cmp    BYTE PTR [eax+0x21],0x0
10020423:	je     0x10020429
10020425:	mov    edi,ecx
10020427:	jmp    0x10020433
10020429:	mov    eax,DWORD PTR [ebp+0x10]
1002042c:	cmp    eax,ebx
1002042e:	mov    edi,DWORD PTR [eax+0x8]
10020431:	jne    0x100204ab
10020433:	cmp    BYTE PTR [edi+0x21],0x0
10020437:	mov    esi,DWORD PTR [ebx+0x4]
1002043a:	jne    0x1002043f
1002043c:	mov    DWORD PTR [edi+0x4],esi
1002043f:	mov    eax,ds:0x1007ff38
10020444:	cmp    DWORD PTR [eax+0x4],ebx
10020447:	jne    0x1002044e
10020449:	mov    DWORD PTR [eax+0x4],edi
1002044c:	jmp    0x10020459
1002044e:	cmp    DWORD PTR [esi],ebx
10020450:	jne    0x10020456
10020452:	mov    DWORD PTR [esi],edi
10020454:	jmp    0x10020459
10020456:	mov    DWORD PTR [esi+0x8],edi
10020459:	mov    edx,DWORD PTR ds:0x1007ff38
1002045f:	cmp    DWORD PTR [edx],ebx
10020461:	jne    0x1002047f
10020463:	cmp    BYTE PTR [edi+0x21],0x0
10020467:	je     0x1002046d
10020469:	mov    ecx,esi
1002046b:	jmp    0x1002047d
1002046d:	mov    eax,DWORD PTR [edi]
1002046f:	mov    ecx,edi
10020471:	jmp    0x10020477
10020473:	mov    ecx,eax
10020475:	mov    eax,DWORD PTR [ecx]
10020477:	cmp    BYTE PTR [eax+0x21],0x0
1002047b:	je     0x10020473
1002047d:	mov    DWORD PTR [edx],ecx
1002047f:	mov    edx,DWORD PTR ds:0x1007ff38
10020485:	cmp    DWORD PTR [edx+0x8],ebx
10020488:	jne    0x10020505
1002048a:	cmp    BYTE PTR [edi+0x21],0x0
1002048e:	je     0x10020494
10020490:	mov    ecx,esi
10020492:	jmp    0x100204a6
10020494:	mov    eax,DWORD PTR [edi+0x8]
10020497:	mov    ecx,edi
10020499:	jmp    0x100204a0
1002049b:	mov    ecx,eax
1002049d:	mov    eax,DWORD PTR [ecx+0x8]
100204a0:	cmp    BYTE PTR [eax+0x21],0x0
100204a4:	je     0x1002049b
100204a6:	mov    DWORD PTR [edx+0x8],ecx
100204a9:	jmp    0x10020505
100204ab:	mov    DWORD PTR [ecx+0x4],eax
100204ae:	mov    ecx,DWORD PTR [ebx]
100204b0:	mov    DWORD PTR [eax],ecx
100204b2:	cmp    eax,DWORD PTR [ebx+0x8]
100204b5:	jne    0x100204bb
100204b7:	mov    esi,eax
100204b9:	jmp    0x100204d5
100204bb:	cmp    BYTE PTR [edi+0x21],0x0
100204bf:	mov    esi,DWORD PTR [eax+0x4]
100204c2:	jne    0x100204c7
100204c4:	mov    DWORD PTR [edi+0x4],esi
100204c7:	mov    DWORD PTR [esi],edi
100204c9:	mov    ecx,DWORD PTR [ebx+0x8]
100204cc:	mov    DWORD PTR [eax+0x8],ecx
100204cf:	mov    ecx,DWORD PTR [ebx+0x8]
100204d2:	mov    DWORD PTR [ecx+0x4],eax
100204d5:	mov    ecx,DWORD PTR ds:0x1007ff38
100204db:	cmp    DWORD PTR [ecx+0x4],ebx
100204de:	jne    0x100204e5
100204e0:	mov    DWORD PTR [ecx+0x4],eax
100204e3:	jmp    0x100204f3
100204e5:	mov    ecx,DWORD PTR [ebx+0x4]
100204e8:	cmp    DWORD PTR [ecx],ebx
100204ea:	jne    0x100204f0
100204ec:	mov    DWORD PTR [ecx],eax
100204ee:	jmp    0x100204f3
100204f0:	mov    DWORD PTR [ecx+0x8],eax
100204f3:	mov    ecx,DWORD PTR [ebx+0x4]
100204f6:	mov    DWORD PTR [eax+0x4],ecx
100204f9:	mov    dl,BYTE PTR [ebx+0x20]
100204fc:	mov    cl,BYTE PTR [eax+0x20]
100204ff:	mov    BYTE PTR [eax+0x20],dl
10020502:	mov    BYTE PTR [ebx+0x20],cl
10020505:	cmp    BYTE PTR [ebx+0x20],0x1
10020509:	jne    0x10020607
1002050f:	jmp    0x100205c2
10020514:	cmp    BYTE PTR [edi+0x20],0x1
10020518:	jne    0x10020603
1002051e:	mov    ecx,DWORD PTR [esi]
10020520:	cmp    edi,ecx
10020522:	jne    0x1002058b
10020524:	mov    ecx,DWORD PTR [esi+0x8]
10020527:	cmp    BYTE PTR [ecx+0x20],0x0
1002052b:	jne    0x1002053f
1002052d:	mov    BYTE PTR [ecx+0x20],0x1
10020531:	mov    ecx,esi
10020533:	mov    BYTE PTR [esi+0x20],0x0
10020537:	call   0x10020ae9
1002053c:	mov    ecx,DWORD PTR [esi+0x8]
1002053f:	cmp    BYTE PTR [ecx+0x21],0x0
10020543:	jne    0x100205bd
10020545:	mov    eax,DWORD PTR [ecx]
10020547:	cmp    BYTE PTR [eax+0x20],0x1
1002054b:	jne    0x10020556
1002054d:	mov    eax,DWORD PTR [ecx+0x8]
10020550:	cmp    BYTE PTR [eax+0x20],0x1
10020554:	je     0x100205b9
10020556:	mov    eax,DWORD PTR [ecx+0x8]
10020559:	cmp    BYTE PTR [eax+0x20],0x1
1002055d:	jne    0x10020571
1002055f:	mov    eax,DWORD PTR [ecx]
10020561:	mov    BYTE PTR [eax+0x20],0x1
10020565:	mov    BYTE PTR [ecx+0x20],0x0
10020569:	call   0x10020b26
1002056e:	mov    ecx,DWORD PTR [esi+0x8]
10020571:	mov    al,BYTE PTR [esi+0x20]
10020574:	mov    BYTE PTR [ecx+0x20],al
10020577:	mov    BYTE PTR [esi+0x20],0x1
1002057b:	mov    eax,DWORD PTR [ecx+0x8]
1002057e:	mov    ecx,esi
10020580:	mov    BYTE PTR [eax+0x20],0x1
10020584:	call   0x10020ae9
10020589:	jmp    0x10020603
1002058b:	cmp    BYTE PTR [ecx+0x20],0x0
1002058f:	jne    0x100205a2
10020591:	mov    BYTE PTR [ecx+0x20],0x1
10020595:	mov    ecx,esi
10020597:	mov    BYTE PTR [esi+0x20],0x0
1002059b:	call   0x10020b26
100205a0:	mov    ecx,DWORD PTR [esi]
100205a2:	cmp    BYTE PTR [ecx+0x21],0x0
100205a6:	jne    0x100205bd
100205a8:	mov    eax,DWORD PTR [ecx+0x8]
100205ab:	cmp    BYTE PTR [eax+0x20],0x1
100205af:	jne    0x100205d2
100205b1:	mov    eax,DWORD PTR [ecx]
100205b3:	cmp    BYTE PTR [eax+0x20],0x1
100205b7:	jne    0x100205d2
100205b9:	mov    BYTE PTR [ecx+0x20],0x0
100205bd:	mov    edi,esi
100205bf:	mov    esi,DWORD PTR [esi+0x4]
100205c2:	mov    eax,ds:0x1007ff38
100205c7:	cmp    edi,DWORD PTR [eax+0x4]
100205ca:	jne    0x10020514
100205d0:	jmp    0x10020603
100205d2:	mov    eax,DWORD PTR [ecx]
100205d4:	cmp    BYTE PTR [eax+0x20],0x1
100205d8:	jne    0x100205ec
100205da:	mov    eax,DWORD PTR [ecx+0x8]
100205dd:	mov    BYTE PTR [eax+0x20],0x1
100205e1:	mov    BYTE PTR [ecx+0x20],0x0
100205e5:	call   0x10020ae9
100205ea:	mov    ecx,DWORD PTR [esi]
100205ec:	mov    al,BYTE PTR [esi+0x20]
100205ef:	mov    BYTE PTR [ecx+0x20],al
100205f2:	mov    BYTE PTR [esi+0x20],0x1
100205f6:	mov    eax,DWORD PTR [ecx]
100205f8:	mov    ecx,esi
100205fa:	mov    BYTE PTR [eax+0x20],0x1
100205fe:	call   0x10020b26
10020603:	mov    BYTE PTR [edi+0x20],0x1
10020607:	push   ebx
10020608:	call   0x10041d92
1002060d:	cmp    DWORD PTR ds:0x1007ff3c,0x0
10020614:	pop    ecx
10020615:	jbe    0x1002061d
10020617:	dec    DWORD PTR ds:0x1007ff3c
1002061d:	mov    ecx,DWORD PTR [ebp+0xc]
10020620:	mov    eax,DWORD PTR [ebp+0x8]
10020623:	mov    DWORD PTR [eax],ecx
10020625:	mov    ecx,DWORD PTR [ebp+0x10]
10020628:	mov    DWORD PTR [eax+0x4],ecx
1002062b:	call   0x1005891d
10020630:	ret    0xc
10020633:	push   ebp
10020634:	mov    ebp,esp
10020636:	sub    esp,0x14
10020639:	push   ebx
1002063a:	push   esi
1002063b:	push   edi
1002063c:	push   DWORD PTR [ebp+0xc]
1002063f:	lea    eax,[ebp-0x8]
10020642:	call   0x10020ab2
10020647:	mov    eax,ds:0x1007ff38
1002064c:	mov    ebx,0x1007ff34
10020651:	lea    edi,[ebp-0x10]
10020654:	lea    esi,[ebp-0x8]
10020657:	mov    DWORD PTR [ebp-0xc],eax
1002065a:	mov    DWORD PTR [ebp-0x10],ebx
1002065d:	call   0x100046f1
10020662:	test   al,al
10020664:	jne    0x10020677
10020666:	mov    eax,DWORD PTR [ebp+0xc]
10020669:	mov    eax,DWORD PTR [eax]
1002066b:	mov    ecx,DWORD PTR [ebp-0x4]
1002066e:	cmp    eax,DWORD PTR [ecx+0xc]
10020671:	jb     0x10020677
10020673:	mov    eax,esi
10020675:	jmp    0x10020685
10020677:	mov    eax,ds:0x1007ff38
1002067c:	mov    DWORD PTR [ebp-0xc],eax
1002067f:	mov    DWORD PTR [ebp-0x10],ebx
10020682:	lea    eax,[ebp-0x10]
10020685:	mov    edx,DWORD PTR [eax]
10020687:	mov    ecx,DWORD PTR [ebp+0x8]
1002068a:	mov    eax,DWORD PTR [eax+0x4]
1002068d:	pop    edi
1002068e:	pop    esi
1002068f:	mov    DWORD PTR [ecx+0x4],eax
10020692:	mov    DWORD PTR [ecx],edx
10020694:	mov    eax,ecx
10020696:	pop    ebx
10020697:	leave  
10020698:	ret    0x8
1002069b:	push   esi
1002069c:	mov    esi,DWORD PTR [esp+0x14]
100206a0:	test   esi,esi
100206a2:	jne    0x100206ab
100206a4:	mov    eax,0x80004003
100206a9:	jmp    0x100206d8
100206ab:	xor    eax,eax
100206ad:	cmp    DWORD PTR ds:0x1007e95c,eax
100206b3:	jne    0x100206be
100206b5:	push   DWORD PTR [esp+0x10]
100206b9:	call   0x1001b588
100206be:	mov    ecx,DWORD PTR ds:0x1007e95c
100206c4:	mov    DWORD PTR [esi],ecx
100206c6:	mov    ecx,DWORD PTR ds:0x1007e95c
100206cc:	test   ecx,ecx
100206ce:	je     0x100206d8
100206d0:	mov    eax,DWORD PTR [ecx]
100206d2:	push   ecx
100206d3:	call   DWORD PTR [eax+0x4]
100206d6:	xor    eax,eax
100206d8:	pop    esi
100206d9:	ret    0x10
100206dc:	push   ebx
100206dd:	push   DWORD PTR [esp+0x1c]
100206e1:	mov    ebx,DWORD PTR [esp+0x14]
100206e5:	push   DWORD PTR [esp+0x1c]
100206e9:	push   DWORD PTR [esp+0x1c]
100206ed:	call   0x1001b32b
100206f2:	pop    ebx
100206f3:	ret    0x18
100206f6:	mov    DWORD PTR [ecx],0x1006f388
100206fc:	mov    DWORD PTR [ecx+0x4],0xc0000001
10020703:	mov    ecx,DWORD PTR ds:0x1007fbe4
10020709:	mov    eax,DWORD PTR [ecx]
1002070b:	jmp    DWORD PTR [eax+0x8]
1002070e:	mov    ecx,DWORD PTR [esp+0x4]
10020712:	dec    DWORD PTR [ecx+0x4]
10020715:	push   esi
10020716:	mov    esi,DWORD PTR [ecx+0x4]
10020719:	jne    0x10020726
1002071b:	test   ecx,ecx
1002071d:	je     0x10020726
1002071f:	mov    eax,DWORD PTR [ecx]
10020721:	push   0x1
10020723:	call   DWORD PTR [eax+0x1c]
10020726:	mov    eax,esi
10020728:	pop    esi
10020729:	ret    0x4
1002072c:	push   ebx
1002072d:	push   DWORD PTR [esp+0xc]
10020731:	mov    ebx,DWORD PTR [esp+0x14]
10020735:	push   DWORD PTR [esp+0xc]
10020739:	mov    eax,0x1006f23c
1002073e:	call   0x10010077
10020743:	pop    ebx
10020744:	ret    0xc
10020747:	push   esi
10020748:	mov    esi,ecx
1002074a:	call   0x1001fd27
1002074f:	test   BYTE PTR [esp+0x8],0x1
10020754:	je     0x1002075d
10020756:	push   esi
10020757:	call   0x10041d92
1002075c:	pop    ecx
1002075d:	mov    eax,esi
1002075f:	pop    esi
10020760:	ret    0x4
10020763:	push   esi
10020764:	mov    esi,ecx
10020766:	call   0x1001fdc4
1002076b:	test   BYTE PTR [esp+0x8],0x1
10020770:	je     0x10020779
10020772:	push   esi
10020773:	call   0x10041d92
10020778:	pop    ecx
10020779:	mov    eax,esi
1002077b:	pop    esi
1002077c:	ret    0x4
1002077f:	push   esi
10020780:	mov    esi,ecx
10020782:	call   0x1001fe68
10020787:	test   BYTE PTR [esp+0x8],0x1
1002078c:	je     0x10020795
1002078e:	push   esi
1002078f:	call   0x10041d92
10020794:	pop    ecx
10020795:	mov    eax,esi
10020797:	pop    esi
10020798:	ret    0x4
1002079b:	push   ebx
1002079c:	push   0x1
1002079e:	xor    ebx,ebx
100207a0:	call   0x10004b54
100207a5:	pop    ebx
100207a6:	ret    
100207a7:	push   esi
100207a8:	mov    esi,ecx
100207aa:	call   0x100206f6
100207af:	test   BYTE PTR [esp+0x8],0x1
100207b4:	je     0x100207bd
100207b6:	push   esi
100207b7:	call   0x10041d92
100207bc:	pop    ecx
100207bd:	mov    eax,esi
100207bf:	pop    esi
100207c0:	ret    0x4
100207c3:	push   esi
100207c4:	push   DWORD PTR [esp+0x8]
100207c8:	mov    esi,eax
100207ca:	and    DWORD PTR [esi+0x14],0x0
100207ce:	mov    DWORD PTR [esi+0x18],0x7
100207d5:	and    WORD PTR [esi+0x4],0x0
100207da:	call   0x100425f3
100207df:	pop    ecx
100207e0:	push   DWORD PTR [esp+0x8]
100207e4:	call   0x10004acf
100207e9:	mov    eax,esi
100207eb:	pop    esi
100207ec:	ret    0x4
100207ef:	push   ebp
100207f0:	mov    ebp,esp
100207f2:	sub    esp,0x10
100207f5:	mov    edx,DWORD PTR [ebp+0x8]
100207f8:	mov    eax,DWORD PTR [edx+0x4]
100207fb:	push   ebx
100207fc:	push   esi
100207fd:	mov    esi,DWORD PTR [eax+0x4]
10020800:	cmp    BYTE PTR [esi+0x2d],0x0
10020804:	mov    DWORD PTR [ebp-0x4],eax
10020807:	mov    al,0x1
10020809:	mov    BYTE PTR [ebp-0x8],al
1002080c:	jne    0x10020833
1002080e:	mov    ebx,DWORD PTR [ebp+0xc]
10020811:	lea    eax,[esi+0xc]
10020814:	mov    DWORD PTR [ebp-0x4],esi
10020817:	call   0x1001ec09
1002081c:	test   al,al
1002081e:	mov    BYTE PTR [ebp-0x8],al
10020821:	je     0x10020827
10020823:	mov    esi,DWORD PTR [esi]
10020825:	jmp    0x1002082a
10020827:	mov    esi,DWORD PTR [esi+0x8]
1002082a:	cmp    BYTE PTR [esi+0x2d],0x0
1002082e:	je     0x1002080e
10020830:	mov    edx,DWORD PTR [ebp+0x8]
10020833:	test   al,al
10020835:	mov    ecx,DWORD PTR [ebp-0x4]
10020838:	mov    esi,ecx
1002083a:	mov    DWORD PTR [ebp-0xc],esi
1002083d:	mov    DWORD PTR [ebp-0x10],edx
10020840:	je     0x10020874
10020842:	mov    eax,DWORD PTR [edx+0x4]
10020845:	cmp    ecx,DWORD PTR [eax]
10020847:	jne    0x10020869
10020849:	push   DWORD PTR [ebp+0xc]
1002084c:	mov    esi,edx
1002084e:	push   0x1
10020850:	lea    eax,[ebp-0x10]
10020853:	push   eax
10020854:	call   0x10020e37
10020859:	mov    ecx,DWORD PTR [eax]
1002085b:	mov    eax,DWORD PTR [eax+0x4]
1002085e:	mov    DWORD PTR [edi],ecx
10020860:	mov    DWORD PTR [edi+0x4],eax
10020863:	mov    BYTE PTR [edi+0x8],0x1
10020867:	jmp    0x1002089d
10020869:	lea    esi,[ebp-0x10]
1002086c:	call   0x100212b4
10020871:	mov    esi,DWORD PTR [ebp-0xc]
10020874:	mov    eax,DWORD PTR [ebp+0xc]
10020877:	lea    ebx,[esi+0xc]
1002087a:	call   0x1001ec09
1002087f:	test   al,al
10020881:	je     0x10020891
10020883:	push   DWORD PTR [ebp+0xc]
10020886:	mov    ecx,DWORD PTR [ebp-0x4]
10020889:	push   DWORD PTR [ebp-0x8]
1002088c:	mov    esi,DWORD PTR [ebp+0x8]
1002088f:	jmp    0x10020850
10020891:	mov    eax,DWORD PTR [ebp-0x10]
10020894:	mov    DWORD PTR [edi],eax
10020896:	mov    DWORD PTR [edi+0x4],esi
10020899:	mov    BYTE PTR [edi+0x8],0x0
1002089d:	pop    esi
1002089e:	mov    eax,edi
100208a0:	pop    ebx
100208a1:	leave  
100208a2:	ret    0x8
100208a5:	push   ebp
100208a6:	mov    ebp,esp
100208a8:	sub    esp,0x2c
100208ab:	push   ebx
100208ac:	push   esi
100208ad:	push   edi
100208ae:	mov    edi,ecx
100208b0:	mov    ebx,eax
100208b2:	mov    eax,DWORD PTR [edi+0x4]
100208b5:	mov    esi,DWORD PTR [eax+0x4]
100208b8:	mov    DWORD PTR [ebp-0x8],eax
100208bb:	jmp    0x100208d3
100208bd:	lea    eax,[esi+0xc]
100208c0:	call   0x1001ec09
100208c5:	test   al,al
100208c7:	je     0x100208d0
100208c9:	mov    DWORD PTR [ebp-0x8],esi
100208cc:	mov    esi,DWORD PTR [esi]
100208ce:	jmp    0x100208d3
100208d0:	mov    esi,DWORD PTR [esi+0x8]
100208d3:	cmp    BYTE PTR [esi+0x2d],0x0
100208d7:	je     0x100208bd
100208d9:	push   ebx
100208da:	lea    eax,[ebp-0x18]
100208dd:	push   eax
100208de:	call   0x10020df2
100208e3:	mov    ecx,DWORD PTR [eax+0x4]
100208e6:	mov    ebx,DWORD PTR [eax]
100208e8:	mov    eax,DWORD PTR [eax+0x4]
100208eb:	and    DWORD PTR [ebp-0x4],0x0
100208ef:	mov    DWORD PTR [ebp-0x24],ecx
100208f2:	mov    ecx,ebx
100208f4:	mov    DWORD PTR [ebp-0x10],ecx
100208f7:	mov    DWORD PTR [ebp-0xc],eax
100208fa:	cmp    DWORD PTR [ebp-0x10],0x0
100208fe:	je     0x10020905
10020900:	cmp    DWORD PTR [ebp-0x10],edi
10020903:	je     0x1002090a
10020905:	call   0x100422b0
1002090a:	mov    eax,DWORD PTR [ebp-0x8]
1002090d:	cmp    DWORD PTR [ebp-0xc],eax
10020910:	je     0x1002091f
10020912:	inc    DWORD PTR [ebp-0x4]
10020915:	lea    esi,[ebp-0x10]
10020918:	call   0x10021793
1002091d:	jmp    0x100208fa
1002091f:	push   eax
10020920:	push   edi
10020921:	push   DWORD PTR [ebp-0x24]
10020924:	push   ebx
10020925:	lea    ebx,[ebp-0x18]
10020928:	call   0x10020d46
1002092d:	mov    eax,DWORD PTR [ebp-0x4]
10020930:	pop    edi
10020931:	pop    esi
10020932:	pop    ebx
10020933:	leave  
10020934:	ret    
10020935:	push   ebx
10020936:	lea    ebx,[eax+0xc]
10020939:	cmp    DWORD PTR [ebx],0x0
1002093c:	push   esi
1002093d:	push   edi
1002093e:	je     0x1002094f
10020940:	lea    esi,[eax+0x8]
10020943:	cmp    DWORD PTR [esi],0x0
10020946:	je     0x1002094f
10020948:	xor    edi,edi
1002094a:	call   0x10007188
1002094f:	mov    eax,DWORD PTR [ebx]
10020951:	test   eax,eax
10020953:	je     0x10020969
10020955:	mov    ecx,DWORD PTR [eax]
10020957:	push   eax
10020958:	call   DWORD PTR [ecx+0x1c]
1002095b:	cmp    DWORD PTR [ebx],0x0
1002095e:	je     0x10020969
10020960:	xor    edi,edi
10020962:	mov    esi,ebx
10020964:	call   0x10007188
10020969:	pop    edi
1002096a:	pop    esi
1002096b:	pop    ebx
1002096c:	ret    
1002096d:	push   ebp
1002096e:	mov    ebp,esp
10020970:	sub    esp,0x18
10020973:	push   ebx
10020974:	mov    ebx,eax
10020976:	xor    eax,eax
10020978:	cmp    DWORD PTR ds:0x1007ff3c,eax
1002097e:	push   esi
1002097f:	push   edi
10020980:	mov    DWORD PTR [ebp-0xc],eax
10020983:	mov    DWORD PTR [ebp-0x8],eax
10020986:	jne    0x1002099e
10020988:	mov    ecx,DWORD PTR ds:0x1007ff38
1002098e:	push   ebx
1002098f:	push   0x1
10020991:	push   DWORD PTR [ebp+0x8]
10020994:	call   0x100210f9
10020999:	mov    eax,DWORD PTR [ebp+0x8]
1002099c:	jmp    0x100209e0
1002099e:	mov    eax,ds:0x1007ff38
100209a3:	mov    eax,DWORD PTR [eax]
100209a5:	lea    edi,[ebp-0x14]
100209a8:	lea    esi,[ebp+0xc]
100209ab:	mov    DWORD PTR [ebp-0x10],eax
100209ae:	mov    DWORD PTR [ebp-0x14],0x1007ff34
100209b5:	call   0x100046f1
100209ba:	test   al,al
100209bc:	je     0x100209e7
100209be:	mov    eax,DWORD PTR [ebx]
100209c0:	mov    ecx,DWORD PTR [ebp+0x10]
100209c3:	cmp    eax,DWORD PTR [ecx+0xc]
100209c6:	jb     0x1002098e
100209c8:	push   ebx
100209c9:	lea    ebx,[ebp-0x18]
100209cc:	call   0x10020f82
100209d1:	mov    edx,DWORD PTR [eax]
100209d3:	mov    ecx,DWORD PTR [ebp+0x8]
100209d6:	mov    DWORD PTR [ecx],edx
100209d8:	mov    eax,DWORD PTR [eax+0x4]
100209db:	mov    DWORD PTR [ecx+0x4],eax
100209de:	mov    eax,ecx
100209e0:	pop    edi
100209e1:	pop    esi
100209e2:	pop    ebx
100209e3:	leave  
100209e4:	ret    0xc
100209e7:	mov    eax,ds:0x1007ff38
100209ec:	lea    edi,[ebp-0x14]
100209ef:	lea    esi,[ebp+0xc]
100209f2:	mov    DWORD PTR [ebp-0x10],eax
100209f5:	mov    DWORD PTR [ebp-0x14],0x1007ff34
100209fc:	call   0x100046f1
10020a01:	test   al,al
10020a03:	je     0x10020a1c
10020a05:	mov    eax,ds:0x1007ff38
10020a0a:	mov    ecx,DWORD PTR [eax+0x8]
10020a0d:	mov    eax,DWORD PTR [ecx+0xc]
10020a10:	cmp    eax,DWORD PTR [ebx]
10020a12:	jae    0x100209c8
10020a14:	push   ebx
10020a15:	push   0x0
10020a17:	jmp    0x10020991
10020a1c:	mov    ecx,DWORD PTR [ebx]
10020a1e:	mov    edi,DWORD PTR [ebp+0x10]
10020a21:	cmp    DWORD PTR [edi+0xc],ecx
10020a24:	jbe    0x10020a58
10020a26:	mov    eax,DWORD PTR [ebp+0xc]
10020a29:	lea    esi,[ebp-0xc]
10020a2c:	mov    DWORD PTR [ebp-0xc],eax
10020a2f:	mov    DWORD PTR [ebp-0x8],edi
10020a32:	call   0x10021253
10020a37:	mov    ecx,DWORD PTR [ebx]
10020a39:	mov    eax,DWORD PTR [eax+0x4]
10020a3c:	cmp    DWORD PTR [eax+0xc],ecx
10020a3f:	jae    0x10020a55
10020a41:	mov    ecx,DWORD PTR [ebp-0x8]
10020a44:	mov    eax,DWORD PTR [ecx+0x8]
10020a47:	cmp    BYTE PTR [eax+0x21],0x0
10020a4b:	push   ebx
10020a4c:	jne    0x10020a15
10020a4e:	mov    ecx,edi
10020a50:	jmp    0x1002098f
10020a55:	cmp    DWORD PTR [edi+0xc],ecx
10020a58:	jae    0x100209c8
10020a5e:	mov    eax,DWORD PTR [ebp+0xc]
10020a61:	mov    DWORD PTR [ebp-0xc],eax
10020a64:	mov    eax,ds:0x1007ff38
10020a69:	lea    esi,[ebp-0xc]
10020a6c:	mov    DWORD PTR [ebp-0x8],edi
10020a6f:	mov    DWORD PTR [ebp-0x10],eax
10020a72:	mov    DWORD PTR [ebp-0x14],0x1007ff34
10020a79:	call   0x10020b65
10020a7e:	lea    edi,[ebp-0x14]
10020a81:	mov    esi,eax
10020a83:	call   0x100046f1
10020a88:	test   al,al
10020a8a:	mov    eax,DWORD PTR [ebp-0x8]
10020a8d:	jne    0x10020a9a
10020a8f:	mov    ecx,DWORD PTR [ebx]
10020a91:	cmp    ecx,DWORD PTR [eax+0xc]
10020a94:	jae    0x100209c8
10020a9a:	mov    ecx,DWORD PTR [ebp+0x10]
10020a9d:	mov    edx,DWORD PTR [ecx+0x8]
10020aa0:	cmp    BYTE PTR [edx+0x21],0x0
10020aa4:	push   ebx
10020aa5:	jne    0x10020a15
10020aab:	mov    ecx,eax
10020aad:	jmp    0x1002098f
10020ab2:	mov    edx,DWORD PTR ds:0x1007ff38
10020ab8:	mov    ecx,DWORD PTR [edx+0x4]
10020abb:	cmp    BYTE PTR [ecx+0x21],0x0
10020abf:	jne    0x10020add
10020ac1:	push   esi
10020ac2:	mov    esi,DWORD PTR [esp+0x8]
10020ac6:	mov    esi,DWORD PTR [esi]
10020ac8:	cmp    DWORD PTR [ecx+0xc],esi
10020acb:	jae    0x10020ad2
10020acd:	mov    ecx,DWORD PTR [ecx+0x8]
10020ad0:	jmp    0x10020ad6
10020ad2:	mov    edx,ecx
10020ad4:	mov    ecx,DWORD PTR [ecx]
10020ad6:	cmp    BYTE PTR [ecx+0x21],0x0
10020ada:	je     0x10020ac8
10020adc:	pop    esi
10020add:	mov    DWORD PTR [eax+0x4],edx
10020ae0:	mov    DWORD PTR [eax],0x1007ff34
10020ae6:	ret    0x4
10020ae9:	mov    eax,DWORD PTR [ecx+0x8]
10020aec:	mov    edx,DWORD PTR [eax]
10020aee:	mov    DWORD PTR [ecx+0x8],edx
10020af1:	mov    edx,DWORD PTR [eax]
10020af3:	cmp    BYTE PTR [edx+0x21],0x0
10020af7:	jne    0x10020afc
10020af9:	mov    DWORD PTR [edx+0x4],ecx
10020afc:	mov    edx,DWORD PTR [ecx+0x4]
10020aff:	mov    DWORD PTR [eax+0x4],edx
10020b02:	mov    edx,DWORD PTR ds:0x1007ff38
10020b08:	cmp    ecx,DWORD PTR [edx+0x4]
10020b0b:	jne    0x10020b12
10020b0d:	mov    DWORD PTR [edx+0x4],eax
10020b10:	jmp    0x10020b20
10020b12:	mov    edx,DWORD PTR [ecx+0x4]
10020b15:	cmp    ecx,DWORD PTR [edx]
10020b17:	jne    0x10020b1d
10020b19:	mov    DWORD PTR [edx],eax
10020b1b:	jmp    0x10020b20
10020b1d:	mov    DWORD PTR [edx+0x8],eax
10020b20:	mov    DWORD PTR [eax],ecx
10020b22:	mov    DWORD PTR [ecx+0x4],eax
10020b25:	ret    
10020b26:	mov    eax,DWORD PTR [ecx]
10020b28:	mov    edx,DWORD PTR [eax+0x8]
10020b2b:	mov    DWORD PTR [ecx],edx
10020b2d:	mov    edx,DWORD PTR [eax+0x8]
10020b30:	cmp    BYTE PTR [edx+0x21],0x0
10020b34:	jne    0x10020b39
10020b36:	mov    DWORD PTR [edx+0x4],ecx
10020b39:	mov    edx,DWORD PTR [ecx+0x4]
10020b3c:	mov    DWORD PTR [eax+0x4],edx
10020b3f:	mov    edx,DWORD PTR ds:0x1007ff38
10020b45:	cmp    ecx,DWORD PTR [edx+0x4]
10020b48:	jne    0x10020b4f
10020b4a:	mov    DWORD PTR [edx+0x4],eax
10020b4d:	jmp    0x10020b5e
10020b4f:	mov    edx,DWORD PTR [ecx+0x4]
10020b52:	cmp    ecx,DWORD PTR [edx+0x8]
10020b55:	jne    0x10020b5c
10020b57:	mov    DWORD PTR [edx+0x8],eax
10020b5a:	jmp    0x10020b5e
10020b5c:	mov    DWORD PTR [edx],eax
10020b5e:	mov    DWORD PTR [eax+0x8],ecx
10020b61:	mov    DWORD PTR [ecx+0x4],eax
10020b64:	ret    
10020b65:	push   ebx
10020b66:	xor    ebx,ebx
10020b68:	cmp    DWORD PTR [esi],ebx
10020b6a:	jne    0x10020b71
10020b6c:	call   0x100422b0
10020b71:	mov    eax,DWORD PTR [esi+0x4]
10020b74:	cmp    BYTE PTR [eax+0x21],bl
10020b77:	je     0x10020b80
10020b79:	call   0x100422b0
10020b7e:	jmp    0x10020bae
10020b80:	mov    ecx,DWORD PTR [eax+0x8]
10020b83:	cmp    BYTE PTR [ecx+0x21],bl
10020b86:	jne    0x10020ba3
10020b88:	jmp    0x10020b8c
10020b8a:	mov    ecx,eax
10020b8c:	mov    eax,DWORD PTR [ecx]
10020b8e:	cmp    BYTE PTR [eax+0x21],bl
10020b91:	je     0x10020b8a
10020b93:	mov    DWORD PTR [esi+0x4],ecx
10020b96:	jmp    0x10020bae
10020b98:	mov    ecx,DWORD PTR [esi+0x4]
10020b9b:	cmp    ecx,DWORD PTR [eax+0x8]
10020b9e:	jne    0x10020bab
10020ba0:	mov    DWORD PTR [esi+0x4],eax
10020ba3:	mov    eax,DWORD PTR [eax+0x4]
10020ba6:	cmp    BYTE PTR [eax+0x21],bl
10020ba9:	je     0x10020b98
10020bab:	mov    DWORD PTR [esi+0x4],eax
10020bae:	mov    eax,esi
10020bb0:	pop    ebx
10020bb1:	ret    
10020bb2:	push   0x0
10020bb4:	mov    eax,0x1005ef91
10020bb9:	call   0x10058845
10020bbe:	mov    edi,DWORD PTR [ebp+0x8]
10020bc1:	and    DWORD PTR [edi+0x4],0x0
10020bc5:	lea    esi,[edi+0x8]
10020bc8:	mov    DWORD PTR [edi],0x1006f2d8
10020bce:	call   0x1001bcb6
10020bd3:	mov    DWORD PTR [esi],0x1006f3a8
10020bd9:	mov    DWORD PTR [esi+0x24],0x1006f3bc
10020be0:	mov    DWORD PTR [esi+0x28],0x1006f3e8
10020be7:	mov    DWORD PTR [esi+0x2c],0x1006f410
10020bee:	mov    DWORD PTR [esi+0x30],0x1006f488
10020bf5:	mov    DWORD PTR [esi+0x34],0x1006f4b0
10020bfc:	mov    DWORD PTR [esi+0x38],0x1006f4c8
10020c03:	mov    DWORD PTR [esi+0x40],0x1006f4e0
10020c0a:	mov    DWORD PTR [esi+0x44],0x1006f4f0
10020c11:	mov    DWORD PTR [esi+0x48],0x1006f510
10020c18:	mov    DWORD PTR [esi+0x4c],0x1006f558
10020c1f:	mov    DWORD PTR [esi+0x50],edi
10020c22:	and    DWORD PTR [ebp-0x4],0x0
10020c26:	mov    ecx,DWORD PTR ds:0x1007fbe4
10020c2c:	mov    eax,DWORD PTR [ecx]
10020c2e:	call   DWORD PTR [eax+0x4]
10020c31:	mov    eax,edi
10020c33:	call   0x1005891d
10020c38:	ret    0x4
10020c3b:	push   0x4
10020c3d:	mov    eax,0x1005ef6b
10020c42:	call   0x10058845
10020c47:	mov    DWORD PTR [ebp-0x10],ecx
10020c4a:	mov    DWORD PTR [ecx],0x1006f2d8
10020c50:	and    DWORD PTR [ebp-0x4],0x0
10020c54:	lea    esi,[ecx+0x8]
10020c57:	mov    DWORD PTR [ecx+0x4],0xc0000001
10020c5e:	mov    ecx,esi
10020c60:	call   0x1001c2eb
10020c65:	mov    ecx,DWORD PTR ds:0x1007fbe4
10020c6b:	mov    eax,DWORD PTR [ecx]
10020c6d:	call   DWORD PTR [eax+0x8]
10020c70:	or     DWORD PTR [ebp-0x4],0xffffffff
10020c74:	mov    eax,esi
10020c76:	call   0x1001bd7b
10020c7b:	call   0x1005891d
10020c80:	ret    
10020c81:	mov    ecx,DWORD PTR [esp+0x4]
10020c85:	dec    DWORD PTR [ecx+0x4]
10020c88:	push   esi
10020c89:	mov    esi,DWORD PTR [ecx+0x4]
10020c8c:	jne    0x10020c99
10020c8e:	test   ecx,ecx
10020c90:	je     0x10020c99
10020c92:	mov    eax,DWORD PTR [ecx]
10020c94:	push   0x1
10020c96:	call   DWORD PTR [eax+0xc]
10020c99:	mov    eax,esi
10020c9b:	pop    esi
10020c9c:	ret    0x4
10020c9f:	push   ebp
10020ca0:	mov    ebp,esp
10020ca2:	push   ebx
10020ca3:	mov    ebx,DWORD PTR [ebp+0x10]
10020ca6:	push   esi
10020ca7:	xor    esi,esi
10020ca9:	cmp    ebx,esi
10020cab:	jne    0x10020cb4
10020cad:	mov    eax,0x80004003
10020cb2:	jmp    0x10020ce4
10020cb4:	mov    eax,DWORD PTR [ebp+0xc]
10020cb7:	mov    DWORD PTR [ebx],esi
10020cb9:	call   0x10010053
10020cbe:	test   eax,eax
10020cc0:	mov    eax,DWORD PTR [ebp+0x8]
10020cc3:	je     0x10020ccf
10020cc5:	mov    DWORD PTR [ebx],eax
10020cc7:	mov    ecx,DWORD PTR [eax]
10020cc9:	push   eax
10020cca:	call   DWORD PTR [ecx+0x4]
10020ccd:	jmp    0x10020ce2
10020ccf:	push   DWORD PTR [ebp+0xc]
10020cd2:	add    eax,0x8
10020cd5:	push   eax
10020cd6:	mov    eax,0x1006f0b8
10020cdb:	call   0x10010077
10020ce0:	mov    esi,eax
10020ce2:	mov    eax,esi
10020ce4:	pop    esi
10020ce5:	pop    ebx
10020ce6:	pop    ebp
10020ce7:	ret    0xc
10020cea:	mov    eax,DWORD PTR [esp+0x4]
10020cee:	mov    eax,DWORD PTR [eax+0x2c]
10020cf1:	mov    ecx,DWORD PTR [eax]
10020cf3:	push   eax
10020cf4:	call   DWORD PTR [ecx+0x4]
10020cf7:	ret    0x4
10020cfa:	mov    eax,DWORD PTR [esp+0x4]
10020cfe:	mov    eax,DWORD PTR [eax+0x2c]
10020d01:	mov    ecx,DWORD PTR [eax]
10020d03:	push   eax
10020d04:	call   DWORD PTR [ecx+0x8]
10020d07:	ret    0x4
10020d0a:	push   DWORD PTR [esp+0xc]
10020d0e:	mov    eax,DWORD PTR [esp+0x8]
10020d12:	mov    eax,DWORD PTR [eax+0x2c]
10020d15:	push   DWORD PTR [esp+0xc]
10020d19:	mov    ecx,DWORD PTR [eax]
10020d1b:	push   eax
10020d1c:	call   DWORD PTR [ecx]
10020d1e:	ret    0xc
10020d21:	mov    eax,DWORD PTR [ecx+0x50]
10020d24:	ret    
10020d25:	push   esi
10020d26:	mov    esi,ecx
10020d28:	call   0x10020c3b
10020d2d:	test   BYTE PTR [esp+0x8],0x1
10020d32:	je     0x10020d3b
10020d34:	push   esi
10020d35:	call   0x10041d92
10020d3a:	pop    ecx
10020d3b:	mov    eax,esi
10020d3d:	pop    esi
10020d3e:	ret    0x4
10020d41:	jmp    0x1001bd7b
10020d46:	push   ebp
10020d47:	mov    ebp,esp
10020d49:	mov    eax,DWORD PTR [edi+0x4]
10020d4c:	sub    esp,0x14
10020d4f:	cmp    DWORD PTR [ebp+0x8],0x0
10020d53:	push   esi
10020d54:	mov    esi,DWORD PTR [eax]
10020d56:	je     0x10020d5d
10020d58:	cmp    DWORD PTR [ebp+0x8],edi
10020d5b:	je     0x10020d62
10020d5d:	call   0x100422b0
10020d62:	cmp    DWORD PTR [ebp+0xc],esi
10020d65:	jne    0x10020daa
10020d67:	cmp    DWORD PTR [ebp+0x10],0x0
10020d6b:	mov    esi,DWORD PTR [edi+0x4]
10020d6e:	je     0x10020d75
10020d70:	cmp    DWORD PTR [ebp+0x10],edi
10020d73:	je     0x10020d7a
10020d75:	call   0x100422b0
10020d7a:	cmp    DWORD PTR [ebp+0x14],esi
10020d7d:	jne    0x10020daa
10020d7f:	mov    eax,DWORD PTR [edi+0x4]
10020d82:	push   DWORD PTR [eax+0x4]
10020d85:	mov    ecx,edi
10020d87:	call   0x1002171c
10020d8c:	mov    eax,DWORD PTR [edi+0x4]
10020d8f:	mov    DWORD PTR [eax+0x4],eax
10020d92:	mov    eax,DWORD PTR [edi+0x4]
10020d95:	and    DWORD PTR [edi+0x8],0x0
10020d99:	mov    DWORD PTR [eax],eax
10020d9b:	mov    eax,DWORD PTR [edi+0x4]
10020d9e:	mov    DWORD PTR [eax+0x8],eax
10020da1:	mov    eax,DWORD PTR [edi+0x4]
10020da4:	mov    eax,DWORD PTR [eax]
10020da6:	mov    DWORD PTR [ebx],edi
10020da8:	jmp    0x10020de8
10020daa:	mov    eax,DWORD PTR [ebp+0x8]
10020dad:	test   eax,eax
10020daf:	je     0x10020db6
10020db1:	cmp    eax,DWORD PTR [ebp+0x10]
10020db4:	je     0x10020dbb
10020db6:	call   0x100422b0
10020dbb:	mov    eax,DWORD PTR [ebp+0xc]
10020dbe:	cmp    eax,DWORD PTR [ebp+0x14]
10020dc1:	mov    ecx,DWORD PTR [ebp+0x8]
10020dc4:	je     0x10020de6
10020dc6:	lea    esi,[ebp+0x8]
10020dc9:	mov    DWORD PTR [ebp-0x8],ecx
10020dcc:	mov    DWORD PTR [ebp-0x4],eax
10020dcf:	call   0x10021793
10020dd4:	push   DWORD PTR [ebp-0x4]
10020dd7:	lea    eax,[ebp-0x10]
10020dda:	push   DWORD PTR [ebp-0x8]
10020ddd:	push   eax
10020dde:	push   edi
10020ddf:	call   0x10021333
10020de4:	jmp    0x10020daa
10020de6:	mov    DWORD PTR [ebx],ecx
10020de8:	mov    DWORD PTR [ebx+0x4],eax
10020deb:	mov    eax,ebx
10020ded:	pop    esi
10020dee:	leave  
10020def:	ret    0x10
10020df2:	push   ebp
10020df3:	mov    ebp,esp
10020df5:	push   ecx
10020df6:	mov    eax,DWORD PTR [edi+0x4]
10020df9:	push   esi
10020dfa:	mov    esi,DWORD PTR [eax+0x4]
10020dfd:	cmp    BYTE PTR [esi+0x2d],0x0
10020e01:	mov    DWORD PTR [ebp-0x4],eax
10020e04:	jne    0x10020e27
10020e06:	push   ebx
10020e07:	mov    eax,DWORD PTR [ebp+0xc]
10020e0a:	lea    ebx,[esi+0xc]
10020e0d:	call   0x1001ec09
10020e12:	test   al,al
10020e14:	je     0x10020e1b
10020e16:	mov    esi,DWORD PTR [esi+0x8]
10020e19:	jmp    0x10020e20
10020e1b:	mov    DWORD PTR [ebp-0x4],esi
10020e1e:	mov    esi,DWORD PTR [esi]
10020e20:	cmp    BYTE PTR [esi+0x2d],0x0
10020e24:	je     0x10020e07
10020e26:	pop    ebx
10020e27:	mov    eax,DWORD PTR [ebp+0x8]
10020e2a:	mov    ecx,DWORD PTR [ebp-0x4]
10020e2d:	mov    DWORD PTR [eax+0x4],ecx
10020e30:	mov    DWORD PTR [eax],edi
10020e32:	pop    esi
10020e33:	leave  
10020e34:	ret    0x8
10020e37:	push   0x48
10020e39:	mov    eax,0x1005f147
10020e3e:	call   0x10058845
10020e43:	mov    edi,ecx
10020e45:	cmp    DWORD PTR [esi+0x8],0x7fffffe
10020e4c:	jb     0x10020e80
10020e4e:	push   0x1006bcb4
10020e53:	lea    ecx,[ebp-0x2c]
10020e56:	call   0x100011d6
10020e5b:	and    DWORD PTR [ebp-0x4],0x0
10020e5f:	lea    eax,[ebp-0x2c]
10020e62:	push   eax
10020e63:	lea    ecx,[ebp-0x54]
10020e66:	call   0x10001065
10020e6b:	push   0x10073960
10020e70:	lea    eax,[ebp-0x54]
10020e73:	push   eax
10020e74:	mov    DWORD PTR [ebp-0x54],0x1006a77c
10020e7b:	call   0x10046704
10020e80:	mov    eax,DWORD PTR [esi+0x4]
10020e83:	mov    ecx,DWORD PTR [ebp+0x10]
10020e86:	push   eax
10020e87:	push   edi
10020e88:	push   eax
10020e89:	call   0x1002164b
10020e8e:	inc    DWORD PTR [esi+0x8]
10020e91:	mov    ebx,eax
10020e93:	mov    eax,DWORD PTR [esi+0x4]
10020e96:	cmp    edi,eax
10020e98:	jne    0x10020ea7
10020e9a:	mov    DWORD PTR [eax+0x4],ebx
10020e9d:	mov    eax,DWORD PTR [esi+0x4]
10020ea0:	mov    DWORD PTR [eax],ebx
10020ea2:	mov    eax,DWORD PTR [esi+0x4]
10020ea5:	jmp    0x10020ec5
10020ea7:	cmp    BYTE PTR [ebp+0xc],0x0
10020eab:	je     0x10020eba
10020ead:	mov    DWORD PTR [edi],ebx
10020eaf:	mov    eax,DWORD PTR [esi+0x4]
10020eb2:	cmp    edi,DWORD PTR [eax]
10020eb4:	jne    0x10020ec8
10020eb6:	mov    DWORD PTR [eax],ebx
10020eb8:	jmp    0x10020ec8
10020eba:	mov    DWORD PTR [edi+0x8],ebx
10020ebd:	mov    eax,DWORD PTR [esi+0x4]
10020ec0:	cmp    edi,DWORD PTR [eax+0x8]
10020ec3:	jne    0x10020ec8
10020ec5:	mov    DWORD PTR [eax+0x8],ebx
10020ec8:	mov    edi,ebx
10020eca:	lea    eax,[ebx+0x4]
10020ecd:	jmp    0x10020f5c
10020ed2:	mov    ecx,DWORD PTR [eax]
10020ed4:	mov    edx,DWORD PTR [ecx+0x4]
10020ed7:	cmp    ecx,DWORD PTR [edx]
10020ed9:	jne    0x10020f10
10020edb:	mov    edx,DWORD PTR [edx+0x8]
10020ede:	cmp    BYTE PTR [edx+0x2c],0x0
10020ee2:	je     0x10020f18
10020ee4:	cmp    edi,DWORD PTR [ecx+0x8]
10020ee7:	jne    0x10020ef1
10020ee9:	push   esi
10020eea:	mov    edi,ecx
10020eec:	call   0x100215c9
10020ef1:	mov    eax,DWORD PTR [edi+0x4]
10020ef4:	mov    BYTE PTR [eax+0x2c],0x1
10020ef8:	mov    eax,DWORD PTR [edi+0x4]
10020efb:	mov    eax,DWORD PTR [eax+0x4]
10020efe:	mov    BYTE PTR [eax+0x2c],0x0
10020f02:	mov    eax,DWORD PTR [edi+0x4]
10020f05:	mov    ecx,DWORD PTR [eax+0x4]
10020f08:	push   esi
10020f09:	call   0x10021609
10020f0e:	jmp    0x10020f59
10020f10:	mov    edx,DWORD PTR [edx]
10020f12:	cmp    BYTE PTR [edx+0x2c],0x0
10020f16:	jne    0x10020f30
10020f18:	mov    BYTE PTR [ecx+0x2c],0x1
10020f1c:	mov    BYTE PTR [edx+0x2c],0x1
10020f20:	mov    ecx,DWORD PTR [eax]
10020f22:	mov    ecx,DWORD PTR [ecx+0x4]
10020f25:	mov    BYTE PTR [ecx+0x2c],0x0
10020f29:	mov    eax,DWORD PTR [eax]
10020f2b:	mov    edi,DWORD PTR [eax+0x4]
10020f2e:	jmp    0x10020f59
10020f30:	cmp    edi,DWORD PTR [ecx]
10020f32:	jne    0x10020f3c
10020f34:	push   esi
10020f35:	mov    edi,ecx
10020f37:	call   0x10021609
10020f3c:	mov    eax,DWORD PTR [edi+0x4]
10020f3f:	mov    BYTE PTR [eax+0x2c],0x1
10020f43:	mov    eax,DWORD PTR [edi+0x4]
10020f46:	mov    eax,DWORD PTR [eax+0x4]
10020f49:	mov    BYTE PTR [eax+0x2c],0x0
10020f4d:	mov    eax,DWORD PTR [edi+0x4]
10020f50:	mov    ecx,DWORD PTR [eax+0x4]
10020f53:	push   esi
10020f54:	call   0x100215c9
10020f59:	lea    eax,[edi+0x4]
10020f5c:	mov    ecx,DWORD PTR [eax]
10020f5e:	cmp    BYTE PTR [ecx+0x2c],0x0
10020f62:	je     0x10020ed2
10020f68:	mov    eax,DWORD PTR [esi+0x4]
10020f6b:	mov    eax,DWORD PTR [eax+0x4]
10020f6e:	mov    BYTE PTR [eax+0x2c],0x1
10020f72:	mov    eax,DWORD PTR [ebp+0x8]
10020f75:	mov    DWORD PTR [eax+0x4],ebx
10020f78:	mov    DWORD PTR [eax],esi
10020f7a:	call   0x1005891d
10020f7f:	ret    0xc
10020f82:	push   ebp
10020f83:	mov    ebp,esp
10020f85:	sub    esp,0x1c
10020f88:	push   esi
10020f89:	mov    esi,DWORD PTR ds:0x1007ff38
10020f8f:	mov    eax,DWORD PTR [esi+0x4]
10020f92:	cmp    BYTE PTR [eax+0x21],0x0
10020f96:	push   edi
10020f97:	mov    DWORD PTR [ebp-0xc],esi
10020f9a:	mov    BYTE PTR [ebp-0x8],0x1
10020f9e:	jne    0x10020fc2
10020fa0:	mov    ecx,DWORD PTR [ebp+0x8]
10020fa3:	mov    edi,DWORD PTR [ecx]
10020fa5:	cmp    edi,DWORD PTR [eax+0xc]
10020fa8:	mov    DWORD PTR [ebp-0xc],eax
10020fab:	setb   BYTE PTR [ebp-0x8]
10020faf:	cmp    BYTE PTR [ebp-0x8],0x0
10020fb3:	je     0x10020fb9
10020fb5:	mov    eax,DWORD PTR [eax]
10020fb7:	jmp    0x10020fbc
10020fb9:	mov    eax,DWORD PTR [eax+0x8]
10020fbc:	cmp    BYTE PTR [eax+0x21],0x0
10020fc0:	je     0x10020fa5
10020fc2:	cmp    BYTE PTR [ebp-0x8],0x0
10020fc6:	mov    edi,DWORD PTR [ebp-0xc]
10020fc9:	mov    eax,0x1007ff34
10020fce:	mov    DWORD PTR [ebp-0x10],edi
10020fd1:	mov    DWORD PTR [ebp-0x14],eax
10020fd4:	je     0x10021019
10020fd6:	mov    ecx,DWORD PTR [esi]
10020fd8:	lea    edi,[ebp-0x1c]
10020fdb:	lea    esi,[ebp-0x14]
10020fde:	mov    DWORD PTR [ebp-0x18],ecx
10020fe1:	mov    DWORD PTR [ebp-0x1c],eax
10020fe4:	call   0x100046f1
10020fe9:	test   al,al
10020feb:	je     0x1002100e
10020fed:	push   DWORD PTR [ebp+0x8]
10020ff0:	push   0x1
10020ff2:	mov    ecx,DWORD PTR [ebp-0xc]
10020ff5:	lea    eax,[ebp-0x1c]
10020ff8:	push   eax
10020ff9:	call   0x100210f9
10020ffe:	mov    ecx,DWORD PTR [eax]
10021000:	mov    eax,DWORD PTR [eax+0x4]
10021003:	mov    DWORD PTR [ebx],ecx
10021005:	mov    DWORD PTR [ebx+0x4],eax
10021008:	mov    BYTE PTR [ebx+0x8],0x1
1002100c:	jmp    0x10021035
1002100e:	lea    esi,[ebp-0x14]
10021011:	call   0x10021253
10021016:	mov    edi,DWORD PTR [ebp-0x10]
10021019:	mov    ecx,DWORD PTR [edi+0xc]
1002101c:	mov    eax,DWORD PTR [ebp+0x8]
1002101f:	cmp    ecx,DWORD PTR [eax]
10021021:	jae    0x10021029
10021023:	push   eax
10021024:	push   DWORD PTR [ebp-0x8]
10021027:	jmp    0x10020ff2
10021029:	mov    eax,DWORD PTR [ebp-0x14]
1002102c:	mov    DWORD PTR [ebx],eax
1002102e:	mov    DWORD PTR [ebx+0x4],edi
10021031:	mov    BYTE PTR [ebx+0x8],0x0
10021035:	pop    edi
10021036:	mov    eax,ebx
10021038:	pop    esi
10021039:	leave  
1002103a:	ret    0x4
1002103d:	push   ebp
1002103e:	mov    ebp,esp
10021040:	sub    esp,0x10
10021043:	mov    eax,ds:0x1007ff38
10021048:	mov    eax,DWORD PTR [eax]
1002104a:	push   ebx
1002104b:	push   esi
1002104c:	push   edi
1002104d:	mov    ebx,0x1007ff34
10021052:	lea    edi,[ebp-0xc]
10021055:	lea    esi,[ebp+0xc]
10021058:	mov    DWORD PTR [ebp-0x8],eax
1002105b:	mov    DWORD PTR [ebp-0xc],ebx
1002105e:	call   0x100046f1
10021063:	test   al,al
10021065:	je     0x100210d5
10021067:	mov    eax,ds:0x1007ff38
1002106c:	lea    edi,[ebp-0xc]
1002106f:	lea    esi,[ebp+0x14]
10021072:	mov    DWORD PTR [ebp-0x8],eax
10021075:	mov    DWORD PTR [ebp-0xc],ebx
10021078:	call   0x100046f1
1002107d:	test   al,al
1002107f:	je     0x100210d5
10021081:	mov    eax,ds:0x1007ff38
10021086:	push   DWORD PTR [eax+0x4]
10021089:	mov    ecx,ebx
1002108b:	call   0x10021761
10021090:	mov    eax,ds:0x1007ff38
10021095:	mov    DWORD PTR [eax+0x4],eax
10021098:	mov    eax,ds:0x1007ff38
1002109d:	and    DWORD PTR ds:0x1007ff3c,0x0
100210a4:	mov    DWORD PTR [eax],eax
100210a6:	mov    eax,ds:0x1007ff38
100210ab:	mov    DWORD PTR [eax+0x8],eax
100210ae:	mov    eax,ds:0x1007ff38
100210b3:	mov    ecx,DWORD PTR [eax]
100210b5:	mov    eax,DWORD PTR [ebp+0x8]
100210b8:	mov    DWORD PTR [eax],ebx
100210ba:	jmp    0x100210ef
100210bc:	mov    edi,DWORD PTR [ebp+0xc]
100210bf:	mov    ebx,DWORD PTR [ebp+0x10]
100210c2:	lea    esi,[ebp+0xc]
100210c5:	call   0x10020b65
100210ca:	push   ebx
100210cb:	push   edi
100210cc:	lea    eax,[ebp-0xc]
100210cf:	push   eax
100210d0:	call   0x100203c0
100210d5:	lea    edi,[ebp+0x14]
100210d8:	lea    esi,[ebp+0xc]
100210db:	call   0x100046f1
100210e0:	test   al,al
100210e2:	je     0x100210bc
100210e4:	mov    ecx,DWORD PTR [ebp+0xc]
100210e7:	mov    eax,DWORD PTR [ebp+0x8]
100210ea:	mov    DWORD PTR [eax],ecx
100210ec:	mov    ecx,DWORD PTR [ebp+0x10]
100210ef:	pop    edi
100210f0:	pop    esi
100210f1:	mov    DWORD PTR [eax+0x4],ecx
100210f4:	pop    ebx
100210f5:	leave  
100210f6:	ret    0x14
100210f9:	push   0x48
100210fb:	mov    eax,0x1005f147
10021100:	call   0x10058845
10021105:	mov    esi,ecx
10021107:	cmp    DWORD PTR ds:0x1007ff3c,0xccccccb
10021111:	jb     0x10021145
10021113:	push   0x1006bcb4
10021118:	lea    ecx,[ebp-0x2c]
1002111b:	call   0x100011d6
10021120:	and    DWORD PTR [ebp-0x4],0x0
10021124:	lea    eax,[ebp-0x2c]
10021127:	push   eax
10021128:	lea    ecx,[ebp-0x54]
1002112b:	call   0x10001065
10021130:	push   0x10073960
10021135:	lea    eax,[ebp-0x54]
10021138:	push   eax
10021139:	mov    DWORD PTR [ebp-0x54],0x1006a77c
10021140:	call   0x10046704
10021145:	push   DWORD PTR [ebp+0x10]
10021148:	mov    eax,ds:0x1007ff38
1002114d:	push   eax
1002114e:	push   esi
1002114f:	push   eax
10021150:	call   0x100216e1
10021155:	inc    DWORD PTR ds:0x1007ff3c
1002115b:	mov    edi,eax
1002115d:	mov    eax,ds:0x1007ff38
10021162:	xor    bl,bl
10021164:	cmp    esi,eax
10021166:	jne    0x10021179
10021168:	mov    DWORD PTR [eax+0x4],edi
1002116b:	mov    eax,ds:0x1007ff38
10021170:	mov    DWORD PTR [eax],edi
10021172:	mov    eax,ds:0x1007ff38
10021177:	jmp    0x1002119a
10021179:	cmp    BYTE PTR [ebp+0xc],bl
1002117c:	je     0x1002118d
1002117e:	mov    DWORD PTR [esi],edi
10021180:	mov    eax,ds:0x1007ff38
10021185:	cmp    esi,DWORD PTR [eax]
10021187:	jne    0x1002119d
10021189:	mov    DWORD PTR [eax],edi
1002118b:	jmp    0x1002119d
1002118d:	mov    DWORD PTR [esi+0x8],edi
10021190:	mov    eax,ds:0x1007ff38
10021195:	cmp    esi,DWORD PTR [eax+0x8]
10021198:	jne    0x1002119d
1002119a:	mov    DWORD PTR [eax+0x8],edi
1002119d:	mov    esi,edi
1002119f:	lea    eax,[edi+0x4]
100211a2:	jmp    0x10021228
100211a7:	mov    ecx,DWORD PTR [eax]
100211a9:	mov    edx,DWORD PTR [ecx+0x4]
100211ac:	cmp    ecx,DWORD PTR [edx]
100211ae:	jne    0x100211e1
100211b0:	mov    edx,DWORD PTR [edx+0x8]
100211b3:	cmp    BYTE PTR [edx+0x20],bl
100211b6:	je     0x100211e8
100211b8:	cmp    esi,DWORD PTR [ecx+0x8]
100211bb:	jne    0x100211c4
100211bd:	mov    esi,ecx
100211bf:	call   0x10020ae9
100211c4:	mov    eax,DWORD PTR [esi+0x4]
100211c7:	mov    BYTE PTR [eax+0x20],0x1
100211cb:	mov    eax,DWORD PTR [esi+0x4]
100211ce:	mov    eax,DWORD PTR [eax+0x4]
100211d1:	mov    BYTE PTR [eax+0x20],bl
100211d4:	mov    eax,DWORD PTR [esi+0x4]
100211d7:	mov    ecx,DWORD PTR [eax+0x4]
100211da:	call   0x10020b26
100211df:	jmp    0x10021225
100211e1:	mov    edx,DWORD PTR [edx]
100211e3:	cmp    BYTE PTR [edx+0x20],bl
100211e6:	jne    0x100211ff
100211e8:	mov    BYTE PTR [ecx+0x20],0x1
100211ec:	mov    BYTE PTR [edx+0x20],0x1
100211f0:	mov    ecx,DWORD PTR [eax]
100211f2:	mov    ecx,DWORD PTR [ecx+0x4]
100211f5:	mov    BYTE PTR [ecx+0x20],bl
100211f8:	mov    eax,DWORD PTR [eax]
100211fa:	mov    esi,DWORD PTR [eax+0x4]
100211fd:	jmp    0x10021225
100211ff:	cmp    esi,DWORD PTR [ecx]
10021201:	jne    0x1002120a
10021203:	mov    esi,ecx
10021205:	call   0x10020b26
1002120a:	mov    eax,DWORD PTR [esi+0x4]
1002120d:	mov    BYTE PTR [eax+0x20],0x1
10021211:	mov    eax,DWORD PTR [esi+0x4]
10021214:	mov    eax,DWORD PTR [eax+0x4]
10021217:	mov    BYTE PTR [eax+0x20],bl
1002121a:	mov    eax,DWORD PTR [esi+0x4]
1002121d:	mov    ecx,DWORD PTR [eax+0x4]
10021220:	call   0x10020ae9
10021225:	lea    eax,[esi+0x4]
10021228:	mov    ecx,DWORD PTR [eax]
1002122a:	cmp    BYTE PTR [ecx+0x20],bl
1002122d:	je     0x100211a7
10021233:	mov    eax,ds:0x1007ff38
10021238:	mov    eax,DWORD PTR [eax+0x4]
1002123b:	mov    BYTE PTR [eax+0x20],0x1
1002123f:	mov    eax,DWORD PTR [ebp+0x8]
10021242:	mov    DWORD PTR [eax+0x4],edi
10021245:	mov    DWORD PTR [eax],0x1007ff34
1002124b:	call   0x1005891d
10021250:	ret    0xc
10021253:	push   ebx
10021254:	xor    ebx,ebx
10021256:	cmp    DWORD PTR [esi],ebx
10021258:	jne    0x1002125f
1002125a:	call   0x100422b0
1002125f:	mov    eax,DWORD PTR [esi+0x4]
10021262:	cmp    BYTE PTR [eax+0x21],bl
10021265:	je     0x10021274
10021267:	mov    eax,DWORD PTR [eax+0x8]
1002126a:	mov    DWORD PTR [esi+0x4],eax
1002126d:	cmp    BYTE PTR [eax+0x21],bl
10021270:	je     0x100212b0
10021272:	jmp    0x100212a6
10021274:	mov    ecx,DWORD PTR [eax]
10021276:	cmp    BYTE PTR [ecx+0x21],bl
10021279:	jne    0x10021296
1002127b:	jmp    0x1002127f
1002127d:	mov    ecx,eax
1002127f:	mov    eax,DWORD PTR [ecx+0x8]
10021282:	cmp    BYTE PTR [eax+0x21],bl
10021285:	je     0x1002127d
10021287:	mov    DWORD PTR [esi+0x4],ecx
1002128a:	jmp    0x100212b0
1002128c:	mov    ecx,DWORD PTR [esi+0x4]
1002128f:	cmp    ecx,DWORD PTR [eax]
10021291:	jne    0x1002129e
10021293:	mov    DWORD PTR [esi+0x4],eax
10021296:	mov    eax,DWORD PTR [eax+0x4]
10021299:	cmp    BYTE PTR [eax+0x21],bl
1002129c:	je     0x1002128c
1002129e:	mov    ecx,DWORD PTR [esi+0x4]
100212a1:	cmp    BYTE PTR [ecx+0x21],bl
100212a4:	je     0x100212ad
100212a6:	call   0x100422b0
100212ab:	jmp    0x100212b0
100212ad:	mov    DWORD PTR [esi+0x4],eax
100212b0:	mov    eax,esi
100212b2:	pop    ebx
100212b3:	ret    
100212b4:	push   ebx
100212b5:	xor    ebx,ebx
100212b7:	cmp    DWORD PTR [esi],ebx
100212b9:	jne    0x100212c0
100212bb:	call   0x100422b0
100212c0:	mov    eax,DWORD PTR [esi+0x4]
100212c3:	cmp    BYTE PTR [eax+0x2d],bl
100212c6:	je     0x100212d5
100212c8:	mov    eax,DWORD PTR [eax+0x8]
100212cb:	mov    DWORD PTR [esi+0x4],eax
100212ce:	cmp    BYTE PTR [eax+0x2d],bl
100212d1:	je     0x10021311
100212d3:	jmp    0x10021307
100212d5:	mov    ecx,DWORD PTR [eax]
100212d7:	cmp    BYTE PTR [ecx+0x2d],bl
100212da:	jne    0x100212f7
100212dc:	jmp    0x100212e0
100212de:	mov    ecx,eax
100212e0:	mov    eax,DWORD PTR [ecx+0x8]
100212e3:	cmp    BYTE PTR [eax+0x2d],bl
100212e6:	je     0x100212de
100212e8:	mov    DWORD PTR [esi+0x4],ecx
100212eb:	jmp    0x10021311
100212ed:	mov    ecx,DWORD PTR [esi+0x4]
100212f0:	cmp    ecx,DWORD PTR [eax]
100212f2:	jne    0x100212ff
100212f4:	mov    DWORD PTR [esi+0x4],eax
100212f7:	mov    eax,DWORD PTR [eax+0x4]
100212fa:	cmp    BYTE PTR [eax+0x2d],bl
100212fd:	je     0x100212ed
100212ff:	mov    ecx,DWORD PTR [esi+0x4]
10021302:	cmp    BYTE PTR [ecx+0x2d],bl
10021305:	je     0x1002130e
10021307:	call   0x100422b0
1002130c:	jmp    0x10021311
1002130e:	mov    DWORD PTR [esi+0x4],eax
10021311:	mov    eax,esi
10021313:	pop    ebx
10021314:	ret    
10021315:	push   esi
10021316:	mov    esi,ecx
10021318:	mov    eax,esi
1002131a:	call   0x1001bd7b
1002131f:	test   BYTE PTR [esp+0x8],0x1
10021324:	je     0x1002132d
10021326:	push   esi
10021327:	call   0x10041d92
1002132c:	pop    ecx
1002132d:	mov    eax,esi
1002132f:	pop    esi
10021330:	ret    0x4
10021333:	push   0x44
10021335:	mov    eax,0x1005ef45
1002133a:	call   0x10058845
1002133f:	mov    edi,DWORD PTR [ebp+0x14]
10021342:	cmp    BYTE PTR [edi+0x2d],0x0
10021346:	je     0x1002137a
10021348:	push   0x1006bafc
1002134d:	lea    ecx,[ebp-0x28]
10021350:	call   0x100011d6
10021355:	and    DWORD PTR [ebp-0x4],0x0
10021359:	lea    eax,[ebp-0x28]
1002135c:	push   eax
1002135d:	lea    ecx,[ebp-0x50]
10021360:	call   0x10001065
10021365:	push   0x10073880
1002136a:	lea    eax,[ebp-0x50]
1002136d:	push   eax
1002136e:	mov    DWORD PTR [ebp-0x50],0x1006a788
10021375:	call   0x10046704
1002137a:	lea    esi,[ebp+0x10]
1002137d:	call   0x10021793
10021382:	mov    ecx,DWORD PTR [edi]
10021384:	cmp    BYTE PTR [ecx+0x2d],0x0
10021388:	je     0x1002138f
1002138a:	mov    ebx,DWORD PTR [edi+0x8]
1002138d:	jmp    0x100213a6
1002138f:	mov    eax,DWORD PTR [edi+0x8]
10021392:	cmp    BYTE PTR [eax+0x2d],0x0
10021396:	je     0x1002139c
10021398:	mov    ebx,ecx
1002139a:	jmp    0x100213a6
1002139c:	mov    eax,DWORD PTR [ebp+0x14]
1002139f:	cmp    eax,edi
100213a1:	mov    ebx,DWORD PTR [eax+0x8]
100213a4:	jne    0x1002141c
100213a6:	cmp    BYTE PTR [ebx+0x2d],0x0
100213aa:	mov    esi,DWORD PTR [edi+0x4]
100213ad:	jne    0x100213b2
100213af:	mov    DWORD PTR [ebx+0x4],esi
100213b2:	mov    ecx,DWORD PTR [ebp+0x8]
100213b5:	mov    eax,DWORD PTR [ecx+0x4]
100213b8:	cmp    DWORD PTR [eax+0x4],edi
100213bb:	jne    0x100213c2
100213bd:	mov    DWORD PTR [eax+0x4],ebx
100213c0:	jmp    0x100213cd
100213c2:	cmp    DWORD PTR [esi],edi
100213c4:	jne    0x100213ca
100213c6:	mov    DWORD PTR [esi],ebx
100213c8:	jmp    0x100213cd
100213ca:	mov    DWORD PTR [esi+0x8],ebx
100213cd:	mov    edx,DWORD PTR [ecx+0x4]
100213d0:	cmp    DWORD PTR [edx],edi
100213d2:	jne    0x100213f0
100213d4:	cmp    BYTE PTR [ebx+0x2d],0x0
100213d8:	je     0x100213de
100213da:	mov    ecx,esi
100213dc:	jmp    0x100213ee
100213de:	mov    eax,DWORD PTR [ebx]
100213e0:	mov    ecx,ebx
100213e2:	jmp    0x100213e8
100213e4:	mov    ecx,eax
100213e6:	mov    eax,DWORD PTR [ecx]
100213e8:	cmp    BYTE PTR [eax+0x2d],0x0
100213ec:	je     0x100213e4
100213ee:	mov    DWORD PTR [edx],ecx
100213f0:	mov    eax,DWORD PTR [ebp+0x8]
100213f3:	mov    edx,DWORD PTR [eax+0x4]
100213f6:	cmp    DWORD PTR [edx+0x8],edi
100213f9:	jne    0x10021476
100213fb:	cmp    BYTE PTR [ebx+0x2d],0x0
100213ff:	je     0x10021405
10021401:	mov    ecx,esi
10021403:	jmp    0x10021417
10021405:	mov    eax,DWORD PTR [ebx+0x8]
10021408:	mov    ecx,ebx
1002140a:	jmp    0x10021411
1002140c:	mov    ecx,eax
1002140e:	mov    eax,DWORD PTR [ecx+0x8]
10021411:	cmp    BYTE PTR [eax+0x2d],0x0
10021415:	je     0x1002140c
10021417:	mov    DWORD PTR [edx+0x8],ecx
1002141a:	jmp    0x10021476
1002141c:	mov    DWORD PTR [ecx+0x4],eax
1002141f:	mov    ecx,DWORD PTR [edi]
10021421:	mov    DWORD PTR [eax],ecx
10021423:	cmp    eax,DWORD PTR [edi+0x8]
10021426:	jne    0x1002142c
10021428:	mov    esi,eax
1002142a:	jmp    0x10021446
1002142c:	cmp    BYTE PTR [ebx+0x2d],0x0
10021430:	mov    esi,DWORD PTR [eax+0x4]
10021433:	jne    0x10021438
10021435:	mov    DWORD PTR [ebx+0x4],esi
10021438:	mov    DWORD PTR [esi],ebx
1002143a:	mov    ecx,DWORD PTR [edi+0x8]
1002143d:	mov    DWORD PTR [eax+0x8],ecx
10021440:	mov    ecx,DWORD PTR [edi+0x8]
10021443:	mov    DWORD PTR [ecx+0x4],eax
10021446:	mov    ecx,DWORD PTR [ebp+0x8]
10021449:	mov    ecx,DWORD PTR [ecx+0x4]
1002144c:	cmp    DWORD PTR [ecx+0x4],edi
1002144f:	jne    0x10021456
10021451:	mov    DWORD PTR [ecx+0x4],eax
10021454:	jmp    0x10021464
10021456:	mov    ecx,DWORD PTR [edi+0x4]
10021459:	cmp    DWORD PTR [ecx],edi
1002145b:	jne    0x10021461
1002145d:	mov    DWORD PTR [ecx],eax
1002145f:	jmp    0x10021464
10021461:	mov    DWORD PTR [ecx+0x8],eax
10021464:	mov    ecx,DWORD PTR [edi+0x4]
10021467:	mov    DWORD PTR [eax+0x4],ecx
1002146a:	mov    dl,BYTE PTR [edi+0x2c]
1002146d:	mov    cl,BYTE PTR [eax+0x2c]
10021470:	mov    BYTE PTR [eax+0x2c],dl
10021473:	mov    BYTE PTR [edi+0x2c],cl
10021476:	cmp    BYTE PTR [edi+0x2c],0x1
1002147a:	jne    0x10021592
10021480:	jmp    0x10021546
10021485:	cmp    BYTE PTR [ebx+0x2c],0x1
10021489:	jne    0x1002158e
1002148f:	mov    ecx,DWORD PTR [esi]
10021491:	cmp    ebx,ecx
10021493:	jne    0x1002150c
10021495:	mov    ecx,DWORD PTR [esi+0x8]
10021498:	cmp    BYTE PTR [ecx+0x2c],0x0
1002149c:	jne    0x100214b3
1002149e:	push   DWORD PTR [ebp+0x8]
100214a1:	mov    BYTE PTR [ecx+0x2c],0x1
100214a5:	mov    ecx,esi
100214a7:	mov    BYTE PTR [esi+0x2c],0x0
100214ab:	call   0x100215c9
100214b0:	mov    ecx,DWORD PTR [esi+0x8]
100214b3:	cmp    BYTE PTR [ecx+0x2d],0x0
100214b7:	jne    0x10021541
100214bd:	mov    eax,DWORD PTR [ecx]
100214bf:	cmp    BYTE PTR [eax+0x2c],0x1
100214c3:	jne    0x100214ce
100214c5:	mov    eax,DWORD PTR [ecx+0x8]
100214c8:	cmp    BYTE PTR [eax+0x2c],0x1
100214cc:	je     0x1002153d
100214ce:	mov    eax,DWORD PTR [ecx+0x8]
100214d1:	cmp    BYTE PTR [eax+0x2c],0x1
100214d5:	jne    0x100214ec
100214d7:	mov    eax,DWORD PTR [ecx]
100214d9:	push   DWORD PTR [ebp+0x8]
100214dc:	mov    BYTE PTR [eax+0x2c],0x1
100214e0:	mov    BYTE PTR [ecx+0x2c],0x0
100214e4:	call   0x10021609
100214e9:	mov    ecx,DWORD PTR [esi+0x8]
100214ec:	mov    al,BYTE PTR [esi+0x2c]
100214ef:	push   DWORD PTR [ebp+0x8]
100214f2:	mov    BYTE PTR [ecx+0x2c],al
100214f5:	mov    BYTE PTR [esi+0x2c],0x1
100214f9:	mov    eax,DWORD PTR [ecx+0x8]
100214fc:	mov    ecx,esi
100214fe:	mov    BYTE PTR [eax+0x2c],0x1
10021502:	call   0x100215c9
10021507:	jmp    0x1002158e
1002150c:	cmp    BYTE PTR [ecx+0x2c],0x0
10021510:	jne    0x10021526
10021512:	push   DWORD PTR [ebp+0x8]
10021515:	mov    BYTE PTR [ecx+0x2c],0x1
10021519:	mov    ecx,esi
1002151b:	mov    BYTE PTR [esi+0x2c],0x0
1002151f:	call   0x10021609
10021524:	mov    ecx,DWORD PTR [esi]
10021526:	cmp    BYTE PTR [ecx+0x2d],0x0
1002152a:	jne    0x10021541
1002152c:	mov    eax,DWORD PTR [ecx+0x8]
1002152f:	cmp    BYTE PTR [eax+0x2c],0x1
10021533:	jne    0x10021557
10021535:	mov    eax,DWORD PTR [ecx]
10021537:	cmp    BYTE PTR [eax+0x2c],0x1
1002153b:	jne    0x10021557
1002153d:	mov    BYTE PTR [ecx+0x2c],0x0
10021541:	mov    ebx,esi
10021543:	mov    esi,DWORD PTR [esi+0x4]
10021546:	mov    eax,DWORD PTR [ebp+0x8]
10021549:	mov    eax,DWORD PTR [eax+0x4]
1002154c:	cmp    ebx,DWORD PTR [eax+0x4]
1002154f:	jne    0x10021485
10021555:	jmp    0x1002158e
10021557:	mov    eax,DWORD PTR [ecx]
10021559:	cmp    BYTE PTR [eax+0x2c],0x1
1002155d:	jne    0x10021574
1002155f:	mov    eax,DWORD PTR [ecx+0x8]
10021562:	push   DWORD PTR [ebp+0x8]
10021565:	mov    BYTE PTR [eax+0x2c],0x1
10021569:	mov    BYTE PTR [ecx+0x2c],0x0
1002156d:	call   0x100215c9
10021572:	mov    ecx,DWORD PTR [esi]
10021574:	mov    al,BYTE PTR [esi+0x2c]
10021577:	push   DWORD PTR [ebp+0x8]
1002157a:	mov    BYTE PTR [ecx+0x2c],al
1002157d:	mov    BYTE PTR [esi+0x2c],0x1
10021581:	mov    eax,DWORD PTR [ecx]
10021583:	mov    ecx,esi
10021585:	mov    BYTE PTR [eax+0x2c],0x1
10021589:	call   0x10021609
1002158e:	mov    BYTE PTR [ebx+0x2c],0x1
10021592:	push   0x1
10021594:	lea    esi,[edi+0xc]
10021597:	xor    ebx,ebx
10021599:	call   0x10004b54
1002159e:	push   edi
1002159f:	call   0x10041d92
100215a4:	pop    ecx
100215a5:	mov    ecx,DWORD PTR [ebp+0x8]
100215a8:	mov    eax,DWORD PTR [ecx+0x8]
100215ab:	test   eax,eax
100215ad:	jbe    0x100215b3
100215af:	dec    eax
100215b0:	mov    DWORD PTR [ecx+0x8],eax
100215b3:	mov    ecx,DWORD PTR [ebp+0x10]
100215b6:	mov    eax,DWORD PTR [ebp+0xc]
100215b9:	mov    DWORD PTR [eax],ecx
100215bb:	mov    ecx,DWORD PTR [ebp+0x14]
100215be:	mov    DWORD PTR [eax+0x4],ecx
100215c1:	call   0x1005891d
100215c6:	ret    0x10
100215c9:	mov    eax,DWORD PTR [ecx+0x8]
100215cc:	mov    edx,DWORD PTR [eax]
100215ce:	mov    DWORD PTR [ecx+0x8],edx
100215d1:	mov    edx,DWORD PTR [eax]
100215d3:	cmp    BYTE PTR [edx+0x2d],0x0
100215d7:	jne    0x100215dc
100215d9:	mov    DWORD PTR [edx+0x4],ecx
100215dc:	mov    edx,DWORD PTR [ecx+0x4]
100215df:	mov    DWORD PTR [eax+0x4],edx
100215e2:	mov    edx,DWORD PTR [esp+0x4]
100215e6:	mov    edx,DWORD PTR [edx+0x4]
100215e9:	cmp    ecx,DWORD PTR [edx+0x4]
100215ec:	jne    0x100215f3
100215ee:	mov    DWORD PTR [edx+0x4],eax
100215f1:	jmp    0x10021601
100215f3:	mov    edx,DWORD PTR [ecx+0x4]
100215f6:	cmp    ecx,DWORD PTR [edx]
100215f8:	jne    0x100215fe
100215fa:	mov    DWORD PTR [edx],eax
100215fc:	jmp    0x10021601
100215fe:	mov    DWORD PTR [edx+0x8],eax
10021601:	mov    DWORD PTR [eax],ecx
10021603:	mov    DWORD PTR [ecx+0x4],eax
10021606:	ret    0x4
10021609:	mov    eax,DWORD PTR [ecx]
1002160b:	mov    edx,DWORD PTR [eax+0x8]
1002160e:	mov    DWORD PTR [ecx],edx
10021610:	mov    edx,DWORD PTR [eax+0x8]
10021613:	cmp    BYTE PTR [edx+0x2d],0x0
10021617:	jne    0x1002161c
10021619:	mov    DWORD PTR [edx+0x4],ecx
1002161c:	mov    edx,DWORD PTR [ecx+0x4]
1002161f:	mov    DWORD PTR [eax+0x4],edx
10021622:	mov    edx,DWORD PTR [esp+0x4]
10021626:	mov    edx,DWORD PTR [edx+0x4]
10021629:	cmp    ecx,DWORD PTR [edx+0x4]
1002162c:	jne    0x10021633
1002162e:	mov    DWORD PTR [edx+0x4],eax
10021631:	jmp    0x10021642
10021633:	mov    edx,DWORD PTR [ecx+0x4]
10021636:	cmp    ecx,DWORD PTR [edx+0x8]
10021639:	jne    0x10021640
1002163b:	mov    DWORD PTR [edx+0x8],eax
1002163e:	jmp    0x10021642
10021640:	mov    DWORD PTR [edx],eax
10021642:	mov    DWORD PTR [eax+0x8],ecx
10021645:	mov    DWORD PTR [ecx+0x4],eax
10021648:	ret    0x4
1002164b:	push   0x8
1002164d:	mov    eax,0x1005ef22
10021652:	call   0x10058878
10021657:	mov    ebx,ecx
10021659:	push   0x30
1002165b:	call   0x1004239e
10021660:	mov    edi,eax
10021662:	pop    ecx
10021663:	mov    DWORD PTR [ebp-0x14],edi
10021666:	test   edi,edi
10021668:	mov    DWORD PTR [ebp-0x4],0x1
1002166f:	je     0x1002169a
10021671:	mov    eax,DWORD PTR [ebp+0x8]
10021674:	mov    DWORD PTR [edi],eax
10021676:	mov    eax,DWORD PTR [ebp+0xc]
10021679:	mov    DWORD PTR [edi+0x4],eax
1002167c:	mov    eax,DWORD PTR [ebp+0x10]
1002167f:	mov    DWORD PTR [edi+0x8],eax
10021682:	lea    esi,[edi+0xc]
10021685:	mov    eax,ebx
10021687:	call   0x10004598
1002168c:	mov    eax,DWORD PTR [ebx+0x1c]
1002168f:	mov    DWORD PTR [esi+0x1c],eax
10021692:	mov    BYTE PTR [edi+0x2c],0x0
10021696:	mov    BYTE PTR [edi+0x2d],0x0
1002169a:	mov    eax,edi
1002169c:	call   0x1005891d
100216a1:	ret    0xc
100216a4:	push   DWORD PTR [ebp-0x14]
100216a7:	call   0x10041d92
100216ac:	pop    ecx
100216ad:	push   0x0
100216af:	push   0x0
100216b1:	call   0x10046704
100216b6:	int3   
100216b7:	push   0x24
100216b9:	call   0x1004239e
100216be:	xor    edx,edx
100216c0:	cmp    eax,edx
100216c2:	pop    ecx
100216c3:	je     0x100216c7
100216c5:	mov    DWORD PTR [eax],edx
100216c7:	lea    ecx,[eax+0x4]
100216ca:	cmp    ecx,edx
100216cc:	je     0x100216d0
100216ce:	mov    DWORD PTR [ecx],edx
100216d0:	lea    ecx,[eax+0x8]
100216d3:	cmp    ecx,edx
100216d5:	je     0x100216d9
100216d7:	mov    DWORD PTR [ecx],edx
100216d9:	mov    BYTE PTR [eax+0x20],0x1
100216dd:	mov    BYTE PTR [eax+0x21],dl
100216e0:	ret    
100216e1:	push   0x24
100216e3:	call   0x1004239e
100216e8:	test   eax,eax
100216ea:	pop    ecx
100216eb:	je     0x10021719
100216ed:	mov    ecx,DWORD PTR [esp+0x4]
100216f1:	push   esi
100216f2:	mov    esi,DWORD PTR [esp+0x14]
100216f6:	mov    DWORD PTR [eax],ecx
100216f8:	mov    ecx,DWORD PTR [esp+0xc]
100216fc:	push   edi
100216fd:	mov    DWORD PTR [eax+0x4],ecx
10021700:	mov    ecx,DWORD PTR [esp+0x14]
10021704:	push   0x5
10021706:	mov    DWORD PTR [eax+0x8],ecx
10021709:	pop    ecx
1002170a:	lea    edi,[eax+0xc]
1002170d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002170f:	pop    edi
10021710:	mov    BYTE PTR [eax+0x20],0x0
10021714:	mov    BYTE PTR [eax+0x21],0x0
10021718:	pop    esi
10021719:	ret    0x10
1002171c:	push   ecx
1002171d:	push   ebp
1002171e:	mov    ebp,DWORD PTR [esp+0xc]
10021722:	cmp    BYTE PTR [ebp+0x2d],0x0
10021726:	push   edi
10021727:	mov    DWORD PTR [esp+0x8],ecx
1002172b:	mov    edi,ebp
1002172d:	jne    0x1002175b
1002172f:	push   ebx
10021730:	push   esi
10021731:	push   DWORD PTR [edi+0x8]
10021734:	mov    ecx,DWORD PTR [esp+0x14]
10021738:	call   0x1002171c
1002173d:	mov    edi,DWORD PTR [edi]
1002173f:	push   0x1
10021741:	lea    esi,[ebp+0xc]
10021744:	xor    ebx,ebx
10021746:	call   0x10004b54
1002174b:	push   ebp
1002174c:	call   0x10041d92
10021751:	cmp    BYTE PTR [edi+0x2d],bl
10021754:	pop    ecx
10021755:	mov    ebp,edi
10021757:	je     0x10021731
10021759:	pop    esi
1002175a:	pop    ebx
1002175b:	pop    edi
1002175c:	pop    ebp
1002175d:	pop    ecx
1002175e:	ret    0x4
10021761:	push   ebx
10021762:	push   esi
10021763:	push   edi
10021764:	mov    edi,DWORD PTR [esp+0x10]
10021768:	cmp    BYTE PTR [edi+0x21],0x0
1002176c:	mov    ebx,ecx
1002176e:	mov    esi,edi
10021770:	jne    0x1002178d
10021772:	push   DWORD PTR [esi+0x8]
10021775:	mov    ecx,ebx
10021777:	call   0x10021761
1002177c:	mov    esi,DWORD PTR [esi]
1002177e:	push   edi
1002177f:	call   0x10041d92
10021784:	cmp    BYTE PTR [esi+0x21],0x0
10021788:	pop    ecx
10021789:	mov    edi,esi
1002178b:	je     0x10021772
1002178d:	pop    edi
1002178e:	pop    esi
1002178f:	pop    ebx
10021790:	ret    0x4
10021793:	push   ebx
10021794:	xor    ebx,ebx
10021796:	cmp    DWORD PTR [esi],ebx
10021798:	jne    0x1002179f
1002179a:	call   0x100422b0
1002179f:	mov    eax,DWORD PTR [esi+0x4]
100217a2:	cmp    BYTE PTR [eax+0x2d],bl
100217a5:	je     0x100217ae
100217a7:	call   0x100422b0
100217ac:	jmp    0x100217dc
100217ae:	mov    ecx,DWORD PTR [eax+0x8]
100217b1:	cmp    BYTE PTR [ecx+0x2d],bl
100217b4:	jne    0x100217d1
100217b6:	jmp    0x100217ba
100217b8:	mov    ecx,eax
100217ba:	mov    eax,DWORD PTR [ecx]
100217bc:	cmp    BYTE PTR [eax+0x2d],bl
100217bf:	je     0x100217b8
100217c1:	mov    DWORD PTR [esi+0x4],ecx
100217c4:	jmp    0x100217dc
100217c6:	mov    ecx,DWORD PTR [esi+0x4]
100217c9:	cmp    ecx,DWORD PTR [eax+0x8]
100217cc:	jne    0x100217d9
100217ce:	mov    DWORD PTR [esi+0x4],eax
100217d1:	mov    eax,DWORD PTR [eax+0x4]
100217d4:	cmp    BYTE PTR [eax+0x2d],bl
100217d7:	je     0x100217c6
100217d9:	mov    DWORD PTR [esi+0x4],eax
100217dc:	mov    eax,esi
100217de:	pop    ebx
100217df:	ret    
100217e0:	push   ebp
100217e1:	mov    ebp,esp
100217e3:	push   ecx
100217e4:	push   ecx
100217e5:	push   ebx
100217e6:	mov    eax,0x1007fa20
100217eb:	push   esi
100217ec:	push   eax
100217ed:	xor    ebx,ebx
100217ef:	mov    DWORD PTR [ebp-0x8],eax
100217f2:	call   DWORD PTR ds:0x100650f0
100217f8:	mov    esi,DWORD PTR ds:0x1007fa38
100217fe:	test   esi,esi
10021800:	mov    BYTE PTR [ebp-0x4],0x1
10021804:	je     0x10021831
10021806:	call   DWORD PTR ds:0x10065160
1002180c:	xor    ecx,ecx
1002180e:	cmp    DWORD PTR [esi+0x4],eax
10021811:	je     0x1002181e
10021813:	mov    ecx,esi
10021815:	mov    esi,DWORD PTR [esi+0x8]
10021818:	test   esi,esi
1002181a:	jne    0x1002180e
1002181c:	jmp    0x10021831
1002181e:	test   ecx,ecx
10021820:	mov    eax,DWORD PTR [esi+0x8]
10021823:	jne    0x1002182c
10021825:	mov    ds:0x1007fa38,eax
1002182a:	jmp    0x1002182f
1002182c:	mov    DWORD PTR [ecx+0x8],eax
1002182f:	mov    ebx,DWORD PTR [esi]
10021831:	lea    ecx,[ebp-0x8]
10021834:	call   0x10010991
10021839:	test   ebx,ebx
1002183b:	jne    0x10021841
1002183d:	xor    eax,eax
1002183f:	jmp    0x10021872
10021841:	mov    esi,DWORD PTR [ebp+0x8]
10021844:	mov    eax,DWORD PTR [ebx]
10021846:	push   edi
10021847:	push   ebx
10021848:	mov    ecx,ebx
1002184a:	mov    DWORD PTR [ebx+0x4],esi
1002184d:	call   DWORD PTR [eax+0x8]
10021850:	lea    edi,[ebx+0x8]
10021853:	call   0x1001b967
10021858:	mov    ebx,DWORD PTR [ebx+0x14]
1002185b:	push   ebx
1002185c:	push   0xfffffffc
1002185e:	push   esi
1002185f:	call   DWORD PTR ds:0x100652d8
10021865:	push   DWORD PTR [ebp+0x14]
10021868:	push   DWORD PTR [ebp+0x10]
1002186b:	push   DWORD PTR [ebp+0xc]
1002186e:	push   esi
1002186f:	call   ebx
10021871:	pop    edi
10021872:	pop    esi
10021873:	pop    ebx
10021874:	leave  
10021875:	ret    0x10
10021878:	push   ebp
10021879:	mov    ebp,esp
1002187b:	sub    esp,0x24
1002187e:	mov    ecx,DWORD PTR [ebp+0x14]
10021881:	push   ebx
10021882:	mov    ebx,DWORD PTR [ebp+0x10]
10021885:	push   esi
10021886:	mov    esi,DWORD PTR [ebp+0x8]
10021889:	mov    edx,DWORD PTR [esi+0x18]
1002188c:	mov    eax,DWORD PTR [esi+0x4]
1002188f:	push   edi
10021890:	mov    edi,DWORD PTR [ebp+0xc]
10021893:	mov    DWORD PTR [ebp-0x18],ecx
10021896:	xor    ecx,ecx
10021898:	push   ecx
10021899:	mov    DWORD PTR [ebp-0x14],ecx
1002189c:	mov    DWORD PTR [ebp-0xc],ecx
1002189f:	mov    DWORD PTR [ebp-0x10],ecx
100218a2:	lea    ecx,[ebp+0x8]
100218a5:	push   ecx
100218a6:	push   DWORD PTR [ebp+0x14]
100218a9:	mov    DWORD PTR [ebp+0xc],edx
100218ac:	push   ebx
100218ad:	lea    edx,[ebp-0x24]
100218b0:	push   edi
100218b1:	mov    DWORD PTR [esi+0x18],edx
100218b4:	mov    edx,DWORD PTR [esi]
100218b6:	push   eax
100218b7:	mov    ecx,esi
100218b9:	mov    DWORD PTR [ebp-0x8],0x24
100218c0:	mov    DWORD PTR [ebp-0x4],0x1
100218c7:	mov    DWORD PTR [ebp-0x24],eax
100218ca:	mov    DWORD PTR [ebp-0x20],edi
100218cd:	mov    DWORD PTR [ebp-0x1c],ebx
100218d0:	call   DWORD PTR [edx]
100218d2:	test   eax,eax
100218d4:	jne    0x10021947
100218d6:	cmp    edi,0x82
100218dc:	je     0x100218f4
100218de:	push   DWORD PTR [ebp+0x14]
100218e1:	push   ebx
100218e2:	push   edi
100218e3:	push   DWORD PTR [esi+0x4]
100218e6:	push   DWORD PTR [esi+0x20]
100218e9:	call   DWORD PTR ds:0x10065340
100218ef:	mov    DWORD PTR [ebp+0x8],eax
100218f2:	jmp    0x10021947
100218f4:	mov    eax,DWORD PTR [esi+0x4]
100218f7:	mov    edi,DWORD PTR ds:0x10065310
100218fd:	push   0xfffffffc
100218ff:	push   eax
10021900:	call   edi
10021902:	push   DWORD PTR [ebp+0x14]
10021905:	mov    DWORD PTR [ebp+0x10],eax
10021908:	push   ebx
10021909:	push   0x82
1002190e:	push   DWORD PTR [esi+0x4]
10021911:	push   DWORD PTR [esi+0x20]
10021914:	call   DWORD PTR ds:0x10065340
1002191a:	mov    DWORD PTR [ebp+0x8],eax
1002191d:	mov    eax,DWORD PTR [esi+0x20]
10021920:	cmp    eax,DWORD PTR ds:0x10065344
10021926:	je     0x10021943
10021928:	mov    eax,DWORD PTR [esi+0x4]
1002192b:	push   0xfffffffc
1002192d:	push   eax
1002192e:	call   edi
10021930:	cmp    eax,DWORD PTR [ebp+0x10]
10021933:	jne    0x10021943
10021935:	push   DWORD PTR [esi+0x20]
10021938:	push   0xfffffffc
1002193a:	push   DWORD PTR [esi+0x4]
1002193d:	call   DWORD PTR ds:0x100652d8
10021943:	or     DWORD PTR [esi+0x1c],0x1
10021947:	mov    eax,DWORD PTR [esi+0x1c]
1002194a:	test   al,0x1
1002194c:	je     0x1002196e
1002194e:	xor    edx,edx
10021950:	cmp    DWORD PTR [ebp+0xc],edx
10021953:	jne    0x1002196e
10021955:	mov    ecx,DWORD PTR [esi+0x4]
10021958:	and    eax,0xfffffffe
1002195b:	mov    DWORD PTR [esi+0x1c],eax
1002195e:	mov    eax,DWORD PTR [esi]
10021960:	push   ecx
10021961:	mov    ecx,esi
10021963:	mov    DWORD PTR [esi+0x4],edx
10021966:	mov    DWORD PTR [esi+0x18],edx
10021969:	call   DWORD PTR [eax+0xc]
1002196c:	jmp    0x10021974
1002196e:	mov    eax,DWORD PTR [ebp+0xc]
10021971:	mov    DWORD PTR [esi+0x18],eax
10021974:	mov    eax,DWORD PTR [ebp+0x8]
10021977:	pop    edi
10021978:	pop    esi
10021979:	pop    ebx
1002197a:	leave  
1002197b:	ret    0x10
1002197e:	push   ebp
1002197f:	mov    ebp,esp
10021981:	push   esi
10021982:	push   edi
10021983:	lea    esi,[ebx+0x8]
10021986:	push   0x0
10021988:	xor    eax,eax
1002198a:	mov    edi,esi
1002198c:	call   0x1001b967
10021991:	test   eax,eax
10021993:	jne    0x100219a1
10021995:	push   0xe
10021997:	call   DWORD PTR ds:0x1006515c
1002199d:	xor    eax,eax
1002199f:	jmp    0x100219ff
100219a1:	xor    edi,edi
100219a3:	cmp    WORD PTR [ebp+0x1c],di
100219a7:	je     0x1002199d
100219a9:	mov    eax,ebx
100219ab:	call   0x1001b1af
100219b0:	cmp    DWORD PTR [ebp+0x18],edi
100219b3:	jne    0x100219c1
100219b5:	test   DWORD PTR [ebp+0x10],0x40000000
100219bc:	je     0x100219c1
100219be:	mov    DWORD PTR [ebp+0x18],ebx
100219c1:	mov    eax,DWORD PTR [ebp+0x8]
100219c4:	cmp    eax,edi
100219c6:	jne    0x100219cd
100219c8:	mov    eax,0x1007e800
100219cd:	mov    ecx,DWORD PTR [eax+0x4]
100219d0:	mov    esi,DWORD PTR [eax+0xc]
100219d3:	mov    edx,DWORD PTR [eax]
100219d5:	mov    eax,DWORD PTR [eax+0x8]
100219d8:	push   edi
100219d9:	push   DWORD PTR ds:0x1007f9e4
100219df:	sub    esi,ecx
100219e1:	push   DWORD PTR [ebp+0x18]
100219e4:	sub    eax,edx
100219e6:	push   edi
100219e7:	push   esi
100219e8:	push   eax
100219e9:	movzx  eax,WORD PTR [ebp+0x1c]
100219ed:	push   ecx
100219ee:	push   edx
100219ef:	push   DWORD PTR [ebp+0x10]
100219f2:	push   DWORD PTR [ebp+0xc]
100219f5:	push   eax
100219f6:	push   DWORD PTR [ebp+0x14]
100219f9:	call   DWORD PTR ds:0x1006532c
100219ff:	pop    edi
10021a00:	pop    esi
10021a01:	pop    ebp
10021a02:	ret    0x18
10021a05:	push   ebp
10021a06:	mov    ebp,esp
10021a08:	and    esp,0xfffffff8
10021a0b:	sub    esp,0x70
10021a0e:	push   esi
10021a0f:	xor    esi,esi
10021a11:	cmp    ebx,esi
10021a13:	push   edi
10021a14:	je     0x10021a92
10021a16:	cmp    DWORD PTR [ebp+0x8],esi
10021a19:	je     0x10021a92
10021a1b:	cmp    WORD PTR [ebx+0x40],si
10021a1f:	jne    0x10021b57
10021a25:	mov    eax,0x1007fa20
10021a2a:	push   eax
10021a2b:	mov    DWORD PTR [esp+0x14],eax
10021a2f:	call   DWORD PTR ds:0x100650f0
10021a35:	cmp    WORD PTR [ebx+0x40],si
10021a39:	mov    BYTE PTR [esp+0x14],0x1
10021a3e:	jne    0x10021b4c
10021a44:	mov    eax,DWORD PTR [ebx+0x30]
10021a47:	cmp    eax,esi
10021a49:	je     0x10021abc
10021a4b:	mov    ecx,DWORD PTR [ebx+0x28]
10021a4e:	mov    DWORD PTR [esp+0x8],ecx
10021a52:	mov    ecx,DWORD PTR [ebx+0x8]
10021a55:	mov    DWORD PTR [esp+0xc],ecx
10021a59:	lea    ecx,[esp+0x18]
10021a5d:	push   ecx
10021a5e:	push   eax
10021a5f:	push   esi
10021a60:	mov    esi,DWORD PTR ds:0x100652bc
10021a66:	mov    DWORD PTR [esp+0x24],0x30
10021a6e:	call   esi
10021a70:	test   eax,eax
10021a72:	jne    0x10021a9b
10021a74:	mov    eax,DWORD PTR [ebx+0x30]
10021a77:	lea    ecx,[esp+0x18]
10021a7b:	push   ecx
10021a7c:	push   eax
10021a7d:	push   DWORD PTR ds:0x1007f9e4
10021a83:	call   esi
10021a85:	test   eax,eax
10021a87:	jne    0x10021a9b
10021a89:	lea    ecx,[esp+0x10]
10021a8d:	call   0x10010991
10021a92:	xor    ax,ax
10021a95:	pop    edi
10021a96:	pop    esi
10021a97:	mov    esp,ebp
10021a99:	pop    ebp
10021a9a:	ret    
10021a9b:	push   0xc
10021a9d:	pop    ecx
10021a9e:	lea    esi,[esp+0x18]
10021aa2:	mov    edi,ebx
10021aa4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021aa6:	mov    eax,DWORD PTR [ebx+0x8]
10021aa9:	mov    DWORD PTR [ebx+0x34],eax
10021aac:	mov    eax,DWORD PTR [esp+0x8]
10021ab0:	mov    DWORD PTR [ebx+0x28],eax
10021ab3:	mov    eax,DWORD PTR [esp+0xc]
10021ab7:	mov    DWORD PTR [ebx+0x8],eax
10021aba:	jmp    0x10021ad8
10021abc:	mov    eax,DWORD PTR [ebx+0x3c]
10021abf:	push   DWORD PTR [ebx+0x38]
10021ac2:	neg    eax
10021ac4:	sbb    eax,eax
10021ac6:	not    eax
10021ac8:	and    eax,DWORD PTR ds:0x1007f9e8
10021ace:	push   eax
10021acf:	call   DWORD PTR ds:0x100652d0
10021ad5:	mov    DWORD PTR [ebx+0x1c],eax
10021ad8:	mov    eax,ds:0x1007f9e4
10021add:	and    DWORD PTR [ebx+0x4],0xffffbfff
10021ae4:	cmp    DWORD PTR [ebx+0x28],0x0
10021ae8:	mov    DWORD PTR [ebx+0x14],eax
10021aeb:	jne    0x10021b04
10021aed:	push   ebx
10021aee:	push   0x1006f008
10021af3:	lea    esi,[ebx+0x42]
10021af6:	push   0x25
10021af8:	push   esi
10021af9:	call   0x10045288
10021afe:	add    esp,0x10
10021b01:	mov    DWORD PTR [ebx+0x28],esi
10021b04:	mov    eax,DWORD PTR [ebx+0x28]
10021b07:	push   0xc
10021b09:	pop    ecx
10021b0a:	lea    edx,[esp+0x48]
10021b0e:	push   edx
10021b0f:	mov    esi,ebx
10021b11:	lea    edi,[esp+0x4c]
10021b15:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10021b17:	mov    ecx,DWORD PTR [ebx+0x14]
10021b1a:	push   eax
10021b1b:	push   ecx
10021b1c:	call   DWORD PTR ds:0x100652bc
10021b22:	test   ax,ax
10021b25:	mov    WORD PTR [ebx+0x40],ax
10021b29:	jne    0x10021b4c
10021b2b:	push   ebx
10021b2c:	call   DWORD PTR ds:0x10065308
10021b32:	movzx  edi,ax
10021b35:	lea    eax,[esp+0xc]
10021b39:	push   eax
10021b3a:	mov    esi,0x1007fa3c
10021b3f:	mov    DWORD PTR [esp+0x10],edi
10021b43:	call   0x1001facb
10021b48:	mov    WORD PTR [ebx+0x40],di
10021b4c:	lea    ecx,[esp+0x10]
10021b50:	call   0x10010991
10021b55:	xor    esi,esi
10021b57:	cmp    DWORD PTR [ebx+0x30],esi
10021b5a:	je     0x10021b64
10021b5c:	mov    eax,DWORD PTR [ebx+0x34]
10021b5f:	mov    ecx,DWORD PTR [ebp+0x8]
10021b62:	mov    DWORD PTR [ecx],eax
10021b64:	mov    ax,WORD PTR [ebx+0x40]
10021b68:	jmp    0x10021a95
10021b6d:	push   0xc
10021b6f:	mov    eax,0x1005ef02
10021b74:	call   0x10058878
10021b79:	mov    ebx,DWORD PTR [ebp+0x8]
10021b7c:	xor    edi,edi
10021b7e:	cmp    ebx,edi
10021b80:	jne    0x10021b89
10021b82:	mov    eax,0x80004003
10021b87:	jmp    0x10021bf4
10021b89:	push   0x30
10021b8b:	mov    DWORD PTR [ebx],edi
10021b8d:	mov    DWORD PTR [ebp-0x14],0x8007000e
10021b94:	mov    DWORD PTR [ebp-0x4],edi
10021b97:	call   0x1004239e
10021b9c:	mov    esi,eax
10021b9e:	cmp    esi,edi
10021ba0:	pop    ecx
10021ba1:	je     0x10021bd7
10021ba3:	mov    eax,ds:0x10065344
10021ba8:	mov    DWORD PTR [esi+0x28],edi
10021bab:	mov    DWORD PTR [esi+0x4],edi
10021bae:	mov    DWORD PTR [esi+0x14],edi
10021bb1:	mov    DWORD PTR [esi+0x18],edi
10021bb4:	mov    DWORD PTR [esi+0x1c],edi
10021bb7:	mov    DWORD PTR [esi+0x20],eax
10021bba:	mov    DWORD PTR [esi+0x2c],edi
10021bbd:	mov    DWORD PTR [esi],0x1006f2e8
10021bc3:	mov    DWORD PTR [esi+0x24],0x1006f2f8
10021bca:	mov    ecx,DWORD PTR ds:0x1007fbe4
10021bd0:	mov    eax,DWORD PTR [ecx]
10021bd2:	call   DWORD PTR [eax+0x4]
10021bd5:	jmp    0x10021be8
10021bd7:	xor    esi,esi
10021bd9:	jmp    0x10021be8
10021bdb:	mov    eax,0x10021be1
10021be0:	ret    
10021be1:	mov    ebx,DWORD PTR [ebp+0x8]
10021be4:	xor    edi,edi
10021be6:	mov    esi,edi
10021be8:	cmp    esi,edi
10021bea:	je     0x10021bef
10021bec:	mov    DWORD PTR [ebp-0x14],edi
10021bef:	mov    eax,DWORD PTR [ebp-0x14]
10021bf2:	mov    DWORD PTR [ebx],esi
10021bf4:	call   0x1005891d
10021bf9:	ret    0x4
10021bfc:	push   0xc
10021bfe:	mov    eax,0x1005f982
10021c03:	call   0x10058878
10021c08:	mov    ebx,DWORD PTR [ebp+0x8]
10021c0b:	xor    edi,edi
10021c0d:	cmp    ebx,edi
10021c0f:	jne    0x10021c18
10021c11:	mov    eax,0x80004003
10021c16:	jmp    0x10021c83
10021c18:	push   0x30
10021c1a:	mov    DWORD PTR [ebx],edi
10021c1c:	mov    DWORD PTR [ebp-0x14],0x8007000e
10021c23:	mov    DWORD PTR [ebp-0x4],edi
10021c26:	call   0x1004239e
10021c2b:	mov    esi,eax
10021c2d:	cmp    esi,edi
10021c2f:	pop    ecx
10021c30:	je     0x10021c66
10021c32:	mov    eax,ds:0x10065344
10021c37:	mov    DWORD PTR [esi+0x28],edi
10021c3a:	mov    DWORD PTR [esi+0x4],edi
10021c3d:	mov    DWORD PTR [esi+0x14],edi
10021c40:	mov    DWORD PTR [esi+0x18],edi
10021c43:	mov    DWORD PTR [esi+0x1c],edi
10021c46:	mov    DWORD PTR [esi+0x20],eax
10021c49:	mov    DWORD PTR [esi+0x2c],edi
10021c4c:	mov    DWORD PTR [esi],0x1006f334
10021c52:	mov    DWORD PTR [esi+0x24],0x1006f344
10021c59:	mov    ecx,DWORD PTR ds:0x1007fbe4
10021c5f:	mov    eax,DWORD PTR [ecx]
10021c61:	call   DWORD PTR [eax+0x4]
10021c64:	jmp    0x10021c77
10021c66:	xor    esi,esi
10021c68:	jmp    0x10021c77
10021c6a:	mov    eax,0x10021c70
10021c6f:	ret    
10021c70:	mov    ebx,DWORD PTR [ebp+0x8]
10021c73:	xor    edi,edi
10021c75:	mov    esi,edi
10021c77:	cmp    esi,edi
10021c79:	je     0x10021c7e
10021c7b:	mov    DWORD PTR [ebp-0x14],edi
10021c7e:	mov    eax,DWORD PTR [ebp-0x14]
10021c81:	mov    DWORD PTR [ebx],esi
10021c83:	call   0x1005891d
10021c88:	ret    0x4
10021c8b:	push   0x4
10021c8d:	mov    eax,0x1005e3e4
10021c92:	call   0x10058845
10021c97:	mov    esi,ecx
10021c99:	mov    DWORD PTR [ebp-0x10],esi
10021c9c:	and    DWORD PTR [ebp-0x4],0x0
10021ca0:	test   BYTE PTR [esi+0x14],0x2
10021ca4:	je     0x10021cc8
10021ca6:	mov    edi,DWORD PTR [esi+0x8]
10021ca9:	jmp    0x10021cba
10021cab:	mov    eax,DWORD PTR [edi]
10021cad:	test   eax,eax
10021caf:	je     0x10021cb7
10021cb1:	mov    ecx,DWORD PTR [eax]
10021cb3:	push   eax
10021cb4:	call   DWORD PTR [ecx+0x8]
10021cb7:	add    edi,0x4
10021cba:	cmp    edi,DWORD PTR [esi+0xc]
10021cbd:	jne    0x10021cab
10021cbf:	push   DWORD PTR [esi+0x8]
10021cc2:	call   0x100422c0
10021cc7:	pop    ecx
10021cc8:	or     DWORD PTR [ebp-0x4],0xffffffff
10021ccc:	mov    esi,DWORD PTR [esi+0x4]
10021ccf:	test   esi,esi
10021cd1:	je     0x10021cd9
10021cd3:	mov    eax,DWORD PTR [esi]
10021cd5:	push   esi
10021cd6:	call   DWORD PTR [eax+0x8]
10021cd9:	call   0x1005891d
10021cde:	ret    
10021cdf:	push   0x8
10021ce1:	mov    eax,0x1005eee7
10021ce6:	call   0x10058845
10021ceb:	mov    eax,DWORD PTR [ebp+0xc]
10021cee:	xor    edi,edi
10021cf0:	cmp    eax,edi
10021cf2:	mov    DWORD PTR [ebp-0x10],edi
10021cf5:	mov    ebx,0x80004003
10021cfa:	je     0x10021d95
10021d00:	mov    DWORD PTR [eax],edi
10021d02:	lea    eax,[ebp-0x14]
10021d05:	push   eax
10021d06:	call   0x10021e10
10021d0b:	mov    ebx,eax
10021d0d:	cmp    ebx,edi
10021d0f:	jl     0x10021d95
10021d15:	mov    esi,DWORD PTR [ebp+0x8]
10021d18:	test   BYTE PTR [esi+0x14],0x2
10021d1c:	je     0x10021d36
10021d1e:	mov    eax,DWORD PTR [esi]
10021d20:	push   esi
10021d21:	mov    DWORD PTR [ebp+0x8],esi
10021d24:	call   DWORD PTR [eax+0x4]
10021d27:	mov    DWORD PTR [ebp-0x4],edi
10021d2a:	lea    eax,[ebp+0x8]
10021d2d:	mov    DWORD PTR [ebp-0x10],0x1
10021d34:	jmp    0x10021d39
10021d36:	lea    eax,[esi+0x4]
10021d39:	mov    eax,DWORD PTR [eax]
10021d3b:	push   edi
10021d3c:	mov    edi,DWORD PTR [ebp-0x14]
10021d3f:	push   eax
10021d40:	push   DWORD PTR [esi+0xc]
10021d43:	push   DWORD PTR [esi+0x8]
10021d46:	push   edi
10021d47:	call   0x1002444e
10021d4c:	or     DWORD PTR [ebp-0x4],0xffffffff
10021d50:	test   BYTE PTR [ebp-0x10],0x1
10021d54:	mov    ebx,eax
10021d56:	je     0x10021d65
10021d58:	mov    eax,DWORD PTR [ebp+0x8]
10021d5b:	test   eax,eax
10021d5d:	je     0x10021d65
10021d5f:	mov    ecx,DWORD PTR [eax]
10021d61:	push   eax
10021d62:	call   DWORD PTR [ecx+0x8]
10021d65:	test   ebx,ebx
10021d67:	jl     0x10021d88
10021d69:	mov    eax,DWORD PTR [esi+0x10]
10021d6c:	mov    ebx,DWORD PTR [ebp+0xc]
10021d6f:	push   0x1006ee88
10021d74:	mov    DWORD PTR [edi+0x10],eax
10021d77:	push   edi
10021d78:	mov    eax,0x1006f2c0
10021d7d:	call   0x10010077
10021d82:	mov    ebx,eax
10021d84:	test   ebx,ebx
10021d86:	jge    0x10021d95
10021d88:	test   edi,edi
10021d8a:	je     0x10021d95
10021d8c:	mov    eax,DWORD PTR [edi]
10021d8e:	push   0x1
10021d90:	mov    ecx,edi
10021d92:	call   DWORD PTR [eax+0x1c]
10021d95:	mov    eax,ebx
10021d97:	call   0x1005891d
10021d9c:	ret    0x8
10021d9f:	push   0xc
10021da1:	mov    eax,0x1005e7b0
10021da6:	call   0x10058878
10021dab:	mov    edi,DWORD PTR [ebp+0x8]
10021dae:	xor    ebx,ebx
10021db0:	cmp    edi,ebx
10021db2:	jne    0x10021dbb
10021db4:	mov    eax,0x80004003
10021db9:	jmp    0x10021e08
10021dbb:	push   0x8
10021dbd:	mov    DWORD PTR [edi],ebx
10021dbf:	mov    DWORD PTR [ebp-0x14],0x8007000e
10021dc6:	mov    DWORD PTR [ebp-0x4],ebx
10021dc9:	call   0x1004239e
10021dce:	mov    esi,eax
10021dd0:	cmp    esi,ebx
10021dd2:	pop    ecx
10021dd3:	je     0x10021deb
10021dd5:	mov    DWORD PTR [esi+0x4],ebx
10021dd8:	mov    DWORD PTR [esi],0x1006f388
10021dde:	mov    ecx,DWORD PTR ds:0x1007fbe4
10021de4:	mov    eax,DWORD PTR [ecx]
10021de6:	call   DWORD PTR [eax+0x4]
10021de9:	jmp    0x10021dfc
10021deb:	xor    esi,esi
10021ded:	jmp    0x10021dfc
10021def:	mov    eax,0x10021df5
10021df4:	ret    
10021df5:	mov    edi,DWORD PTR [ebp+0x8]
10021df8:	xor    ebx,ebx
10021dfa:	mov    esi,ebx
10021dfc:	cmp    esi,ebx
10021dfe:	je     0x10021e03
10021e00:	mov    DWORD PTR [ebp-0x14],ebx
10021e03:	mov    eax,DWORD PTR [ebp-0x14]
10021e06:	mov    DWORD PTR [edi],esi
10021e08:	call   0x1005891d
10021e0d:	ret    0x4
10021e10:	push   0xc
10021e12:	mov    eax,0x1005e795
10021e17:	call   0x10058878
10021e1c:	mov    edi,DWORD PTR [ebp+0x8]
10021e1f:	xor    esi,esi
10021e21:	cmp    edi,esi
10021e23:	jne    0x10021e2c
10021e25:	mov    eax,0x80004003
10021e2a:	jmp    0x10021e6d
10021e2c:	push   0x1c
10021e2e:	mov    DWORD PTR [edi],esi
10021e30:	mov    DWORD PTR [ebp-0x14],0x8007000e
10021e37:	mov    DWORD PTR [ebp-0x18],esi
10021e3a:	mov    DWORD PTR [ebp-0x4],esi
10021e3d:	call   0x1004239e
10021e42:	cmp    eax,esi
10021e44:	pop    ecx
10021e45:	je     0x10021e50
10021e47:	mov    esi,eax
10021e49:	call   0x1001fe40
10021e4e:	jmp    0x10021e60
10021e50:	xor    eax,eax
10021e52:	jmp    0x10021e60
10021e54:	mov    eax,0x10021e5a
10021e59:	ret    
10021e5a:	mov    edi,DWORD PTR [ebp+0x8]
10021e5d:	mov    eax,DWORD PTR [ebp-0x18]
10021e60:	test   eax,eax
10021e62:	je     0x10021e68
10021e64:	and    DWORD PTR [ebp-0x14],0x0
10021e68:	mov    DWORD PTR [edi],eax
10021e6a:	mov    eax,DWORD PTR [ebp-0x14]
10021e6d:	call   0x1005891d
10021e72:	ret    0x4
10021e75:	sub    DWORD PTR [esp+0x4],0x14
10021e7a:	jmp    0x10020cea
10021e7f:	sub    DWORD PTR [esp+0x4],0x20
10021e84:	jmp    0x10020d0a
10021e89:	sub    DWORD PTR [esp+0x4],0x4
10021e8e:	jmp    0x10020d0a
10021e93:	sub    DWORD PTR [esp+0x4],0x24
10021e98:	jmp    0x10020d0a
10021e9d:	sub    DWORD PTR [esp+0x4],0x1c
10021ea2:	jmp    0x10020cfa
10021ea7:	sub    DWORD PTR [esp+0x4],0x1c
10021eac:	jmp    0x10020cea
10021eb1:	sub    DWORD PTR [esp+0x4],0x8
10021eb6:	jmp    0x10020d0a
10021ebb:	sub    DWORD PTR [esp+0x4],0x28
10021ec0:	jmp    0x10020d0a
10021ec5:	sub    DWORD PTR [esp+0x4],0x20
10021eca:	jmp    0x10020cfa
10021ecf:	sub    DWORD PTR [esp+0x4],0x20
10021ed4:	jmp    0x10020cea
10021ed9:	sub    DWORD PTR [esp+0x4],0xc
10021ede:	jmp    0x10020d0a
10021ee3:	sub    DWORD PTR [esp+0x4],0x4
10021ee8:	jmp    0x10020cfa
10021eed:	sub    DWORD PTR [esp+0x4],0x24
10021ef2:	jmp    0x10020cfa
10021ef7:	sub    DWORD PTR [esp+0x4],0x4
10021efc:	jmp    0x10020cea
10021f01:	sub    DWORD PTR [esp+0x4],0x24
10021f06:	jmp    0x10020cea
10021f0b:	sub    DWORD PTR [esp+0x4],0x10
10021f10:	jmp    0x10020d0a
10021f15:	sub    DWORD PTR [esp+0x4],0x8
10021f1a:	jmp    0x10020cfa
10021f1f:	sub    DWORD PTR [esp+0x4],0x28
10021f24:	jmp    0x10020cfa
10021f29:	sub    DWORD PTR [esp+0x4],0x8
10021f2e:	jmp    0x10020cea
10021f33:	sub    DWORD PTR [esp+0x4],0x28
10021f38:	jmp    0x10020cea
10021f3d:	sub    DWORD PTR [esp+0x4],0x14
10021f42:	jmp    0x10020d0a
10021f47:	sub    DWORD PTR [esp+0x4],0xc
10021f4c:	jmp    0x10020cfa
10021f51:	sub    DWORD PTR [esp+0x4],0xc
10021f56:	jmp    0x10020cea
10021f5b:	sub    ecx,0x38
10021f5e:	jmp    0x10021315
10021f63:	sub    DWORD PTR [esp+0x4],0x10
10021f68:	jmp    0x10020cfa
10021f6d:	sub    DWORD PTR [esp+0x4],0x10
10021f72:	jmp    0x10020cea
10021f77:	sub    DWORD PTR [esp+0x4],0x1c
10021f7c:	jmp    0x10020d0a
10021f81:	sub    DWORD PTR [esp+0x4],0x14
10021f86:	jmp    0x10020cfa
10021f8b:	mov    eax,DWORD PTR [esp+0x4]
10021f8f:	add    eax,0x8
10021f92:	call   0x10011c4d
10021f97:	mov    ecx,DWORD PTR [esp+0x8]
10021f9b:	mov    DWORD PTR [ecx],eax
10021f9d:	xor    eax,eax
10021f9f:	ret    0x8
10021fa2:	mov    eax,DWORD PTR [esp+0x4]
10021fa6:	add    eax,0xc
10021fa9:	call   0x10011c4d
10021fae:	mov    ecx,DWORD PTR [esp+0x8]
10021fb2:	mov    DWORD PTR [ecx],eax
10021fb4:	xor    eax,eax
10021fb6:	ret    0x8
10021fb9:	mov    eax,DWORD PTR [esp+0x4]
10021fbd:	add    eax,0x10
10021fc0:	call   0x10011c4d
10021fc5:	mov    ecx,DWORD PTR [esp+0x8]
10021fc9:	mov    DWORD PTR [ecx],eax
10021fcb:	xor    eax,eax
10021fcd:	ret    0x8
10021fd0:	mov    eax,DWORD PTR [esp+0x4]
10021fd4:	add    eax,0x14
10021fd7:	call   0x10011c4d
10021fdc:	mov    ecx,DWORD PTR [esp+0x8]
10021fe0:	mov    DWORD PTR [ecx],eax
10021fe2:	xor    eax,eax
10021fe4:	ret    0x8
10021fe7:	mov    eax,DWORD PTR [esp+0x4]
10021feb:	add    eax,0x18
10021fee:	call   0x10011c4d
10021ff3:	mov    ecx,DWORD PTR [esp+0x8]
10021ff7:	mov    DWORD PTR [ecx],eax
10021ff9:	xor    eax,eax
10021ffb:	ret    0x8
10021ffe:	mov    eax,DWORD PTR [esp+0x4]
10022002:	mov    eax,DWORD PTR [eax+0x1c]
10022005:	mov    ecx,DWORD PTR [esp+0x8]
10022009:	mov    DWORD PTR [ecx],eax
1002200b:	xor    eax,eax
1002200d:	ret    0x8
10022010:	mov    WORD PTR [esi],0x8
10022015:	mov    eax,DWORD PTR [eax]
10022017:	test   eax,eax
10022019:	push   edi
1002201a:	je     0x10022020
1002201c:	mov    edi,DWORD PTR [eax]
1002201e:	jmp    0x10022022
10022020:	xor    edi,edi
10022022:	test   edi,edi
10022024:	jne    0x1002202b
10022026:	and    DWORD PTR [esi+0x8],edi
10022029:	jmp    0x1002204b
1002202b:	push   edi
1002202c:	call   DWORD PTR ds:0x100652a0
10022032:	push   eax
10022033:	push   edi
10022034:	call   DWORD PTR ds:0x100652a8
1002203a:	test   eax,eax
1002203c:	mov    DWORD PTR [esi+0x8],eax
1002203f:	jne    0x1002204b
10022041:	push   0x8007000e
10022046:	call   0x1004fa00
1002204b:	mov    eax,esi
1002204d:	pop    edi
1002204e:	ret    
1002204f:	test   ecx,ecx
10022051:	jne    0x10022055
10022053:	mov    ecx,eax
10022055:	cmp    eax,ecx
10022057:	jne    0x1002205e
10022059:	cmp    dx,WORD PTR [eax]
1002205c:	je     0x10022073
1002205e:	push   edx
1002205f:	push   0x0
10022061:	push   ecx
10022062:	push   eax
10022063:	call   DWORD PTR ds:0x1006527c
10022069:	test   eax,eax
1002206b:	jge    0x10022073
1002206d:	push   eax
1002206e:	call   0x1004fa00
10022073:	ret    
10022074:	push   ecx
10022075:	call   DWORD PTR ds:0x10065294
1002207b:	ret    
1002207c:	push   0x14
1002207e:	mov    eax,0x1005e561
10022083:	call   0x10058845
10022088:	and    DWORD PTR [edi],0x0
1002208b:	cmp    WORD PTR [esi],0x8
1002208f:	jne    0x1002209d
10022091:	push   DWORD PTR [esi+0x8]
10022094:	mov    ecx,edi
10022096:	call   0x10010b4e
1002209b:	jmp    0x100220cd
1002209d:	lea    eax,[ebp-0x20]
100220a0:	push   eax
100220a1:	call   DWORD PTR ds:0x1006528c
100220a7:	and    DWORD PTR [ebp-0x4],0x0
100220ab:	mov    ecx,esi
100220ad:	mov    dx,0x8
100220b1:	lea    eax,[ebp-0x20]
100220b4:	call   0x1002204f
100220b9:	push   DWORD PTR [ebp-0x18]
100220bc:	mov    ecx,edi
100220be:	call   0x10010b4e
100220c3:	lea    eax,[ebp-0x20]
100220c6:	push   eax
100220c7:	call   DWORD PTR ds:0x10065294
100220cd:	mov    eax,edi
100220cf:	call   0x1005891d
100220d4:	ret    
100220d5:	push   0x4
100220d7:	mov    eax,0x1005f967
100220dc:	call   0x10058845
100220e1:	xor    eax,eax
100220e3:	lea    edi,[esi+0x8]
100220e6:	mov    DWORD PTR [esi+0x28],eax
100220e9:	mov    DWORD PTR [ebp-0x10],edi
100220ec:	mov    DWORD PTR [edi+0x8],eax
100220ef:	mov    DWORD PTR [ebp-0x4],eax
100220f2:	mov    DWORD PTR [edi+0xc],eax
100220f5:	mov    BYTE PTR [ebp-0x4],0x1
100220f9:	call   0x100240c0
100220fe:	lea    ecx,[edi+0x14]
10022101:	mov    DWORD PTR [ecx],eax
10022103:	mov    BYTE PTR [eax+0x2d],0x1
10022107:	mov    eax,DWORD PTR [ecx]
10022109:	mov    DWORD PTR [eax+0x4],eax
1002210c:	mov    eax,DWORD PTR [ecx]
1002210e:	mov    DWORD PTR [eax],eax
10022110:	mov    ecx,DWORD PTR [ecx]
10022112:	mov    DWORD PTR [ecx+0x8],ecx
10022115:	and    DWORD PTR [edi+0x18],0x0
10022119:	mov    DWORD PTR [esi],0x10070224
1002211f:	mov    DWORD PTR [esi+0x4],0x10070234
10022126:	mov    DWORD PTR [edi],0x10070248
1002212c:	mov    DWORD PTR [esi+0xc],0x10070280
10022133:	mov    DWORD PTR [esi+0x24],0x10070298
1002213a:	mov    eax,esi
1002213c:	call   0x1005891d
10022141:	ret    
10022142:	push   ebp
10022143:	mov    ebp,esp
10022145:	sub    esp,0x34
10022148:	mov    eax,ds:0x1007d030
1002214d:	xor    eax,ebp
1002214f:	mov    DWORD PTR [ebp-0x4],eax
10022152:	push   ebx
10022153:	push   esi
10022154:	mov    esi,DWORD PTR [ebp+0xc]
10022157:	mov    eax,DWORD PTR [esi]
10022159:	push   edi
1002215a:	lea    ecx,[ebp-0x34]
1002215d:	push   ecx
1002215e:	push   esi
1002215f:	call   DWORD PTR [eax+0xc]
10022162:	mov    eax,DWORD PTR [esi]
10022164:	lea    ecx,[ebp-0x10]
10022167:	push   ecx
10022168:	lea    ecx,[ebp-0x8]
1002216b:	push   ecx
1002216c:	lea    ecx,[ebp-0x14]
1002216f:	push   ecx
10022170:	push   esi
10022171:	call   DWORD PTR [eax+0x10]
10022174:	call   DWORD PTR ds:0x1007dfe4
1002217a:	mov    ebx,eax
1002217c:	mov    eax,DWORD PTR [ebp-0x2c]
1002217f:	test   eax,eax
10022181:	mov    DWORD PTR [ebp-0xc],eax
10022184:	je     0x10022195
10022186:	push   eax
10022187:	call   DWORD PTR ds:0x100650e0
1002218d:	inc    eax
1002218e:	cmp    eax,0x3fffffff
10022193:	jle    0x10022199
10022195:	xor    eax,eax
10022197:	jmp    0x100221af
10022199:	lea    edi,[eax+eax*1]
1002219c:	mov    eax,edi
1002219e:	call   0x10049010
100221a3:	mov    esi,esp
100221a5:	push   ebx
100221a6:	push   edi
100221a7:	push   DWORD PTR [ebp-0xc]
100221aa:	call   0x1000677e
100221af:	push   DWORD PTR [ebp-0x10]
100221b2:	push   DWORD PTR [ebp-0x8]
100221b5:	push   eax
100221b6:	call   0x1000207c
100221bb:	add    esp,0xc
100221be:	xor    eax,eax
100221c0:	lea    esp,[ebp-0x40]
100221c3:	pop    edi
100221c4:	pop    esi
100221c5:	pop    ebx
100221c6:	mov    ecx,DWORD PTR [ebp-0x4]
100221c9:	xor    ecx,ebp
100221cb:	call   0x10041d97
100221d0:	leave  
100221d1:	ret    0x8
100221d4:	push   esi
100221d5:	mov    esi,ecx
100221d7:	neg    ecx
100221d9:	lea    eax,[esi+0x8]
100221dc:	sbb    ecx,ecx
100221de:	and    ecx,eax
100221e0:	call   0x10023ace
100221e5:	test   BYTE PTR [esp+0x8],0x1
100221ea:	je     0x100221f3
100221ec:	push   esi
100221ed:	call   0x10041d92
100221f2:	pop    ecx
100221f3:	mov    eax,esi
100221f5:	pop    esi
100221f6:	ret    0x4
100221f9:	push   ebp
100221fa:	mov    ebp,esp
100221fc:	and    esp,0xfffffff8
100221ff:	push   0xffffffff
10022201:	push   0x1005f936
10022206:	mov    eax,fs:0x0
1002220c:	push   eax
1002220d:	sub    esp,0x48
10022210:	push   ebx
10022211:	push   esi
10022212:	push   edi
10022213:	mov    eax,ds:0x1007d030
10022218:	xor    eax,esp
1002221a:	push   eax
1002221b:	lea    eax,[esp+0x58]
1002221f:	mov    fs:0x0,eax
10022225:	mov    ebx,DWORD PTR [ebp+0x8]
10022228:	mov    DWORD PTR [esp+0x18],ebx
1002222c:	and    DWORD PTR [esp+0x60],0x0
10022231:	lea    eax,[esp+0x1c]
10022235:	push   eax
10022236:	lea    eax,[esp+0x24]
1002223a:	push   eax
1002223b:	push   DWORD PTR [ebx+0x4]
1002223e:	call   0x1001ec39
10022243:	add    esp,0xc
10022246:	test   al,al
10022248:	je     0x10022388
1002224e:	push   0x1388
10022253:	jmp    0x100222c0
10022255:	mov    eax,DWORD PTR [ebx+0x4]
10022258:	and    DWORD PTR [esp+0x10],0x0
1002225d:	push   0xffffffff
1002225f:	push   DWORD PTR ds:0x1007ff30
10022265:	mov    DWORD PTR [esp+0x1c],eax
10022269:	call   DWORD PTR ds:0x10065084
1002226f:	test   eax,eax
10022271:	jne    0x100222bc
10022273:	lea    eax,[esp+0x14]
10022277:	push   eax
10022278:	lea    eax,[esp+0x30]
1002227c:	push   eax
1002227d:	call   0x10020633
10022282:	mov    eax,ds:0x1007ff38
10022287:	lea    edi,[esp+0x24]
1002228b:	lea    esi,[esp+0x2c]
1002228f:	mov    DWORD PTR [esp+0x28],eax
10022293:	mov    DWORD PTR [esp+0x24],0x1007ff34
1002229b:	call   0x100046f1
100222a0:	test   al,al
100222a2:	jne    0x100222b0
100222a4:	call   0x10009753
100222a9:	mov    eax,DWORD PTR [eax+0x4]
100222ac:	mov    DWORD PTR [esp+0x10],eax
100222b0:	push   DWORD PTR ds:0x1007ff30
100222b6:	call   DWORD PTR ds:0x10065094
100222bc:	push   DWORD PTR [esp+0x10]
100222c0:	push   0x0
100222c2:	lea    eax,[esp+0x24]
100222c6:	push   eax
100222c7:	push   0x2
100222c9:	call   DWORD PTR ds:0x100650e8
100222cf:	mov    esi,eax
100222d1:	call   DWORD PTR ds:0x100650c4
100222d7:	cmp    esi,0x1
100222da:	je     0x10022255
100222e0:	cmp    esi,0x102
100222e6:	jne    0x10022376
100222ec:	and    DWORD PTR [esp+0x10],0x0
100222f1:	mov    BYTE PTR [esp+0x60],0x1
100222f6:	mov    eax,DWORD PTR [ebx]
100222f8:	mov    ecx,DWORD PTR [eax]
100222fa:	lea    edx,[esp+0x10]
100222fe:	push   edx
100222ff:	push   eax
10022300:	call   DWORD PTR [ecx+0x4c]
10022303:	test   eax,eax
10022305:	jl     0x10022363
10022307:	push   0x7
10022309:	pop    ecx
1002230a:	xor    eax,eax
1002230c:	lea    edi,[esp+0x36]
10022310:	rep stos DWORD PTR es:[edi],eax
10022312:	stos   WORD PTR es:[edi],ax
10022314:	push   0x1006bb18
10022319:	lea    edi,[esp+0x18]
1002231d:	mov    WORD PTR [esp+0x38],0x3e8
10022324:	call   0x10002439
10022329:	mov    esi,edi
1002232b:	mov    BYTE PTR [esp+0x60],0x2
10022330:	call   0x10010bb7
10022335:	mov    eax,DWORD PTR [eax]
10022337:	push   0x0
10022339:	lea    edx,[esp+0x38]
1002233d:	mov    DWORD PTR [esp+0x3c],eax
10022341:	mov    eax,DWORD PTR [esp+0x14]
10022345:	mov    ecx,DWORD PTR [eax]
10022347:	push   edx
10022348:	push   DWORD PTR [ebx+0x4]
1002234b:	push   eax
1002234c:	call   DWORD PTR [ecx+0x38]
1002234f:	mov    esi,eax
10022351:	call   0x1000256d
10022356:	test   esi,esi
10022358:	jl     0x10022363
1002235a:	push   DWORD PTR [ebx+0x4]
1002235d:	call   0x1001ed6d
10022362:	pop    ecx
10022363:	mov    BYTE PTR [esp+0x60],0x0
10022368:	mov    eax,DWORD PTR [esp+0x10]
1002236c:	test   eax,eax
1002236e:	je     0x10022376
10022370:	mov    ecx,DWORD PTR [eax]
10022372:	push   eax
10022373:	call   DWORD PTR [ecx+0x8]
10022376:	xor    esi,esi
10022378:	push   DWORD PTR [esp+esi*4+0x1c]
1002237c:	call   DWORD PTR ds:0x10065070
10022382:	inc    esi
10022383:	cmp    esi,0x2
10022386:	jne    0x10022378
10022388:	or     DWORD PTR [esp+0x60],0xffffffff
1002238d:	mov    eax,DWORD PTR [ebx]
1002238f:	test   eax,eax
10022391:	je     0x10022399
10022393:	mov    ecx,DWORD PTR [eax]
10022395:	push   eax
10022396:	call   DWORD PTR [ecx+0x8]
10022399:	push   ebx
1002239a:	call   0x10041d92
1002239f:	xor    eax,eax
100223a1:	pop    ecx
100223a2:	mov    ecx,DWORD PTR [esp+0x58]
100223a6:	mov    DWORD PTR fs:0x0,ecx
100223ad:	pop    ecx
100223ae:	pop    edi
100223af:	pop    esi
100223b0:	pop    ebx
100223b1:	mov    esp,ebp
100223b3:	pop    ebp
100223b4:	ret    0x4
100223b7:	push   0x4c
100223b9:	mov    eax,0x100621e3
100223be:	call   0x10058878
100223c3:	test   BYTE PTR ds:0x10080410,0x1
100223ca:	jne    0x100223e5
100223cc:	or     DWORD PTR ds:0x10080410,0x1
100223d3:	and    DWORD PTR ds:0x1008040c,0x0
100223da:	push   0x10064407
100223df:	call   0x10042174
100223e4:	pop    ecx
100223e5:	push   0x1f4
100223ea:	push   DWORD PTR ds:0x1007ff40
100223f0:	call   DWORD PTR ds:0x10065084
100223f6:	test   eax,eax
100223f8:	jne    0x100224a7
100223fe:	xor    ebx,ebx
10022400:	mov    DWORD PTR [ebp-0x4],ebx
10022403:	cmp    DWORD PTR ds:0x1008040c,ebx
10022409:	jne    0x10022497
1002240f:	push   0x2c
10022411:	call   0x1004239e
10022416:	mov    edi,eax
10022418:	cmp    edi,ebx
1002241a:	pop    ecx
1002241b:	mov    esi,0x1002252b
10022420:	je     0x10022437
10022422:	push   esi
10022423:	push   0x1002251a
10022428:	push   0x2
1002242a:	push   0x14
1002242c:	lea    eax,[edi+0x4]
1002242f:	push   eax
10022430:	call   0x10044b48
10022435:	mov    ebx,edi
10022437:	xor    eax,eax
10022439:	push   eax
1002243a:	push   eax
1002243b:	push   ebx
1002243c:	push   0x10023923
10022441:	push   eax
10022442:	push   eax
10022443:	mov    edi,ebx
10022445:	call   DWORD PTR ds:0x10065098
1002244b:	test   eax,eax
1002244d:	je     0x1002247e
1002244f:	mov    eax,ds:0x1008040c
10022454:	xor    edi,edi
10022456:	cmp    ebx,eax
10022458:	je     0x10022478
1002245a:	test   eax,eax
1002245c:	mov    DWORD PTR [ebp-0x14],eax
1002245f:	je     0x10022478
10022461:	push   esi
10022462:	push   0x2
10022464:	push   0x14
10022466:	add    eax,0x4
10022469:	push   eax
1002246a:	call   0x10041ff9
1002246f:	push   DWORD PTR [ebp-0x14]
10022472:	call   0x10041d92
10022477:	pop    ecx
10022478:	mov    DWORD PTR ds:0x1008040c,ebx
1002247e:	test   edi,edi
10022480:	je     0x10022497
10022482:	push   esi
10022483:	push   0x2
10022485:	push   0x14
10022487:	lea    eax,[edi+0x4]
1002248a:	push   eax
1002248b:	call   0x10041ff9
10022490:	push   edi
10022491:	call   0x10041d92
10022496:	pop    ecx
10022497:	push   DWORD PTR ds:0x1007ff40
1002249d:	call   DWORD PTR ds:0x10065094
100224a3:	or     DWORD PTR [ebp-0x4],0xffffffff
100224a7:	mov    eax,ds:0x1008040c
100224ac:	test   eax,eax
100224ae:	jne    0x10022514
100224b0:	push   0x74ff8bfe
100224b5:	push   0x1006f770
100224ba:	call   0x10003d63
100224bf:	push   eax
100224c0:	push   0x16
100224c2:	push   0x1006f7a0
100224c7:	call   0x10003d75
100224cc:	add    esp,0x14
100224cf:	push   eax
100224d0:	lea    ecx,[ebp-0x30]
100224d3:	call   0x100011d6
100224d8:	lea    eax,[ebp-0x30]
100224db:	push   eax
100224dc:	lea    eax,[ebp-0x58]
100224df:	push   eax
100224e0:	mov    DWORD PTR [ebp-0x4],0x2
100224e7:	call   0x100026a9
100224ec:	push   0x10073924
100224f1:	lea    eax,[ebp-0x58]
100224f4:	push   eax
100224f5:	jmp    0x1002250f
100224f7:	push   0x4
100224f9:	call   0x10037620
100224fe:	pop    ecx
100224ff:	push   DWORD PTR ds:0x1007ff40
10022505:	call   DWORD PTR ds:0x10065094
1002250b:	push   0x0
1002250d:	push   0x0
1002250f:	call   0x10046704
10022514:	call   0x1005891d
10022519:	ret    
1002251a:	push   esi
1002251b:	mov    esi,ecx
1002251d:	mov    ecx,0x1007fa54
10022522:	call   0x10002160
10022527:	mov    eax,esi
10022529:	pop    esi
1002252a:	ret    
1002252b:	mov    eax,DWORD PTR [ecx]
1002252d:	sub    eax,0x10
10022530:	jmp    0x1000207d
10022535:	push   0x50
10022537:	mov    eax,0x100616b9
1002253c:	call   0x10058878
10022541:	xor    esi,esi
10022543:	mov    DWORD PTR [ebp-0x18],esi
10022546:	mov    DWORD PTR [ebp-0x4],esi
10022549:	push   DWORD PTR ds:0x1007ff4c
1002254f:	xor    eax,eax
10022551:	lea    edi,[ebp-0x38]
10022554:	mov    DWORD PTR [ebp-0x3c],esi
10022557:	stos   DWORD PTR es:[edi],eax
10022558:	lea    edi,[ebp-0x40]
1002255b:	mov    DWORD PTR [ebp-0x44],esi
1002255e:	stos   DWORD PTR es:[edi],eax
1002255f:	call   DWORD PTR ds:0x10065110
10022565:	mov    eax,ds:0x1007ff80
1002256a:	mov    DWORD PTR [ebp-0x4c],eax
1002256d:	mov    eax,ds:0x1007ff44
10022572:	push   0xffffffff
10022574:	mov    DWORD PTR [ebp-0x48],eax
10022577:	push   esi
10022578:	lea    eax,[ebp-0x4c]
1002257b:	push   eax
1002257c:	push   0x2
1002257e:	call   DWORD PTR ds:0x100650e8
10022584:	cmp    eax,esi
10022586:	jne    0x100226b3
1002258c:	push   0x1f4
10022591:	push   DWORD PTR ds:0x1007ff4c
10022597:	call   DWORD PTR ds:0x10065084
1002259d:	test   eax,eax
1002259f:	je     0x100226bc
100225a5:	mov    BYTE PTR [ebp-0x4],0x1
100225a9:	mov    ebx,DWORD PTR [ebp-0x44]
100225ac:	mov    edi,DWORD PTR [ebp-0x40]
100225af:	add    ebx,0x989680
100225b5:	adc    edi,esi
100225b7:	call   0x1002f5b0
100225bc:	cmp    edi,edx
100225be:	ja     0x10022689
100225c4:	jb     0x100225ce
100225c6:	cmp    ebx,eax
100225c8:	jae    0x10022689
100225ce:	lea    eax,[ebp-0x2c]
100225d1:	push   esi
100225d2:	push   eax
100225d3:	call   0x10002847
100225d8:	pop    ecx
100225d9:	pop    ecx
100225da:	mov    ecx,DWORD PTR [eax]
100225dc:	mov    ebx,ecx
100225de:	mov    DWORD PTR [eax],esi
100225e0:	mov    DWORD PTR [ebp-0x28],ebx
100225e3:	lea    eax,[ebp-0x2c]
100225e6:	mov    BYTE PTR [ebp-0x4],0x2
100225ea:	call   0x10003d3c
100225ef:	push   ebx
100225f0:	call   0x100028c5
100225f5:	test   al,al
100225f7:	je     0x10022615
100225f9:	mov    eax,DWORD PTR [ebx]
100225fb:	push   0x1
100225fd:	push   eax
100225fe:	lea    ecx,[ebp-0x54]
10022601:	call   0x10035720
10022606:	mov    ecx,DWORD PTR [ebp-0x3c]
10022609:	cmp    ecx,DWORD PTR [eax]
1002260b:	jne    0x10022615
1002260d:	mov    ecx,DWORD PTR [ebp-0x38]
10022610:	cmp    ecx,DWORD PTR [eax+0x4]
10022613:	je     0x10022676
10022615:	cmp    DWORD PTR [ebp-0x18],esi
10022618:	mov    DWORD PTR [ebp-0x3c],esi
1002261b:	mov    DWORD PTR [ebp-0x38],esi
1002261e:	je     0x10022631
10022620:	push   0x1006eed8
10022625:	xor    eax,eax
10022627:	lea    esi,[ebp-0x18]
1002262a:	call   0x10010027
1002262f:	xor    esi,esi
10022631:	push   ebx
10022632:	lea    eax,[ebp-0x30]
10022635:	push   eax
10022636:	call   0x10022f2d
1002263b:	mov    edi,DWORD PTR [eax]
1002263d:	cmp    DWORD PTR [ebp-0x18],edi
10022640:	je     0x1002264c
10022642:	lea    esi,[ebp-0x18]
10022645:	call   0x10007188
1002264a:	xor    esi,esi
1002264c:	mov    eax,DWORD PTR [ebp-0x30]
1002264f:	cmp    eax,esi
10022651:	je     0x10022659
10022653:	mov    ecx,DWORD PTR [eax]
10022655:	push   eax
10022656:	call   DWORD PTR [ecx+0x8]
10022659:	cmp    DWORD PTR [ebp-0x18],esi
1002265c:	je     0x10022676
1002265e:	mov    ebx,DWORD PTR [ebx]
10022660:	push   0x1
10022662:	push   ebx
10022663:	lea    ecx,[ebp-0x5c]
10022666:	call   0x10035720
1002266b:	mov    ecx,DWORD PTR [eax]
1002266d:	mov    eax,DWORD PTR [eax+0x4]
10022670:	mov    DWORD PTR [ebp-0x3c],ecx
10022673:	mov    DWORD PTR [ebp-0x38],eax
10022676:	call   0x1002f5b0
1002267b:	mov    DWORD PTR [ebp-0x44],eax
1002267e:	lea    eax,[ebp-0x28]
10022681:	mov    DWORD PTR [ebp-0x40],edx
10022684:	call   0x10003d3c
10022689:	mov    DWORD PTR [ebp-0x4],esi
1002268c:	cmp    DWORD PTR [ebp-0x18],esi
1002268f:	jne    0x100226f9
10022691:	mov    ecx,DWORD PTR [ebp+0x8]
10022694:	xor    edx,edx
10022696:	cmp    DWORD PTR [ecx],esi
10022698:	je     0x100226a8
1002269a:	lea    eax,[ecx+0x14]
1002269d:	mov    BYTE PTR [eax],0x0
100226a0:	inc    edx
100226a1:	add    eax,0x14
100226a4:	cmp    edx,DWORD PTR [ecx]
100226a6:	jne    0x1002269d
100226a8:	push   DWORD PTR ds:0x1007ff48
100226ae:	jmp    0x1002255f
100226b3:	cmp    eax,0x1
100226b6:	je     0x100225a5
100226bc:	or     DWORD PTR [ebp-0x4],0xffffffff
100226c0:	mov    eax,DWORD PTR [ebp-0x18]
100226c3:	cmp    eax,esi
100226c5:	je     0x100226cd
100226c7:	mov    ecx,DWORD PTR [eax]
100226c9:	push   eax
100226ca:	call   DWORD PTR [ecx+0x8]
100226cd:	call   0x1005891d
100226d2:	ret    0x4
100226d5:	xor    eax,eax
100226d7:	cmp    DWORD PTR [ebp-0x18],eax
100226da:	mov    DWORD PTR [ebp-0x3c],eax
100226dd:	mov    DWORD PTR [ebp-0x38],eax
100226e0:	je     0x100226ef
100226e2:	push   0x1006eed8
100226e7:	lea    esi,[ebp-0x18]
100226ea:	call   0x10010027
100226ef:	mov    eax,0x100226f5
100226f4:	ret    
100226f5:	xor    esi,esi
100226f7:	jmp    0x1002268c
100226f9:	call   DWORD PTR ds:0x10065118
100226ff:	mov    ebx,DWORD PTR [ebp+0x8]
10022702:	cmp    DWORD PTR [ebx],esi
10022704:	mov    DWORD PTR [ebp-0x20],eax
10022707:	mov    DWORD PTR [ebp-0x24],esi
1002270a:	je     0x100226a8
1002270c:	add    ebx,0xc
1002270f:	jmp    0x10022713
10022711:	xor    esi,esi
10022713:	push   0x8
10022715:	call   0x1004239e
1002271a:	cmp    eax,esi
1002271c:	pop    ecx
1002271d:	je     0x10022723
1002271f:	mov    DWORD PTR [eax],esi
10022721:	mov    esi,eax
10022723:	mov    DWORD PTR [ebp-0x28],esi
10022726:	mov    edi,DWORD PTR [ebp-0x18]
10022729:	cmp    DWORD PTR [esi],edi
1002272b:	je     0x10022732
1002272d:	call   0x10007188
10022732:	call   DWORD PTR ds:0x10065160
10022738:	xor    edi,edi
1002273a:	push   edi
1002273b:	push   edi
1002273c:	push   esi
1002273d:	push   0x100221f9
10022742:	push   edi
10022743:	push   edi
10022744:	mov    DWORD PTR [esi+0x4],eax
10022747:	call   DWORD PTR ds:0x10065098
1002274d:	mov    DWORD PTR [ebp-0x1c],eax
10022750:	cmp    eax,edi
10022752:	mov    BYTE PTR [ebp-0x4],0x5
10022756:	je     0x1002275b
10022758:	mov    DWORD PTR [ebp-0x28],edi
1002275b:	push   DWORD PTR [ebx+0x4]
1002275e:	mov    eax,DWORD PTR [ebp-0x18]
10022761:	push   DWORD PTR [ebx]
10022763:	mov    edi,DWORD PTR [eax]
10022765:	push   DWORD PTR [ebx-0x4]
10022768:	lea    esi,[ebx-0x8]
1002276b:	mov    DWORD PTR [ebp-0x34],eax
1002276e:	add    edi,0x34
10022771:	call   0x10006608
10022776:	push   eax
10022777:	push   DWORD PTR [ebp-0x34]
1002277a:	call   DWORD PTR [edi]
1002277c:	test   eax,eax
1002277e:	setge  al
10022781:	mov    BYTE PTR [ebx+0x8],al
10022784:	call   DWORD PTR ds:0x10065118
1002278a:	mov    edi,eax
1002278c:	call   DWORD PTR ds:0x10065160
10022792:	push   eax
10022793:	call   0x1001edcb
10022798:	test   al,al
1002279a:	pop    ecx
1002279b:	je     0x100227c6
1002279d:	push   0xe
1002279f:	call   0x10037620
100227a4:	mov    eax,edi
100227a6:	sub    eax,DWORD PTR [ebp-0x20]
100227a9:	pop    ecx
100227aa:	push   eax
100227ab:	call   0x10006608
100227b0:	push   eax
100227b1:	call   0x1000207c
100227b6:	xor    eax,eax
100227b8:	pop    ecx
100227b9:	pop    ecx
100227ba:	mov    DWORD PTR [ebp-0x3c],eax
100227bd:	mov    DWORD PTR [ebp-0x38],eax
100227c0:	mov    DWORD PTR [ebp-0x44],eax
100227c3:	mov    DWORD PTR [ebp-0x40],eax
100227c6:	cmp    BYTE PTR [ebx+0x8],0x0
100227ca:	je     0x1002282a
100227cc:	mov    eax,edi
100227ce:	sub    eax,DWORD PTR [ebp-0x20]
100227d1:	push   eax
100227d2:	call   0x10006608
100227d7:	push   eax
100227d8:	call   0x1000207c
100227dd:	cmp    DWORD PTR [ebp-0x1c],0x0
100227e1:	pop    ecx
100227e2:	pop    ecx
100227e3:	mov    DWORD PTR [ebp-0x20],edi
100227e6:	je     0x100227f1
100227e8:	push   DWORD PTR [ebp-0x1c]
100227eb:	call   DWORD PTR ds:0x10065070
100227f1:	mov    BYTE PTR [ebp-0x4],0x0
100227f5:	mov    esi,DWORD PTR [ebp-0x28]
100227f8:	test   esi,esi
100227fa:	je     0x1002280f
100227fc:	mov    eax,DWORD PTR [esi]
100227fe:	test   eax,eax
10022800:	je     0x10022808
10022802:	mov    ecx,DWORD PTR [eax]
10022804:	push   eax
10022805:	call   DWORD PTR [ecx+0x8]
10022808:	push   esi
10022809:	call   0x10041d92
1002280e:	pop    ecx
1002280f:	inc    DWORD PTR [ebp-0x24]
10022812:	mov    eax,DWORD PTR [ebp+0x8]
10022815:	mov    ecx,DWORD PTR [ebp-0x24]
10022818:	add    ebx,0x14
1002281b:	cmp    ecx,DWORD PTR [eax]
1002281d:	jne    0x10022711
10022823:	xor    esi,esi
10022825:	jmp    0x100226a8
1002282a:	cmp    DWORD PTR [ebp-0x1c],0x0
1002282e:	je     0x10022839
10022830:	push   DWORD PTR [ebp-0x1c]
10022833:	call   DWORD PTR ds:0x10065070
10022839:	mov    BYTE PTR [ebp-0x4],0x0
1002283d:	mov    esi,DWORD PTR [ebp-0x28]
10022840:	test   esi,esi
10022842:	je     0x10022823
10022844:	mov    eax,DWORD PTR [esi]
10022846:	test   eax,eax
10022848:	je     0x10022850
1002284a:	mov    ecx,DWORD PTR [eax]
1002284c:	push   eax
1002284d:	call   DWORD PTR [ecx+0x8]
10022850:	push   esi
10022851:	call   0x10041d92
10022856:	pop    ecx
10022857:	jmp    0x10022823
10022859:	push   0xa4
1002285e:	mov    eax,0x1006167b
10022863:	call   0x10058878
10022868:	push   0x1f4
1002286d:	push   DWORD PTR ds:0x1007ff4c
10022873:	call   DWORD PTR ds:0x10065084
10022879:	test   eax,eax
1002287b:	je     0x1002288c
1002287d:	push   0xf
1002287f:	call   0x10037620
10022884:	pop    ecx
10022885:	xor    al,al
10022887:	jmp    0x10022b1d
1002288c:	xor    esi,esi
1002288e:	mov    DWORD PTR [ebp-0x4],esi
10022891:	mov    BYTE PTR [ebp-0x11],0x0
10022895:	mov    DWORD PTR [ebp-0x18],esi
10022898:	cmp    DWORD PTR [ebp+0x10],esi
1002289b:	je     0x100228ca
1002289d:	lea    eax,[ebp-0x1c]
100228a0:	push   eax
100228a1:	call   0x1002417c
100228a6:	test   eax,eax
100228a8:	jl     0x10022b0e
100228ae:	mov    edi,DWORD PTR [ebp-0x1c]
100228b1:	mov    eax,DWORD PTR [ebp+0x10]
100228b4:	mov    ecx,edi
100228b6:	call   0x10010593
100228bb:	cmp    edi,esi
100228bd:	je     0x100228ca
100228bf:	lea    esi,[ebp-0x18]
100228c2:	call   0x10007188
100228c7:	mov    esi,DWORD PTR [ebp-0x18]
100228ca:	mov    eax,DWORD PTR [ebp+0xc]
100228cd:	mov    WORD PTR [ebp-0x60],0x16
100228d3:	mov    DWORD PTR [ebp-0x58],eax
100228d6:	lea    eax,[ebp-0x50]
100228d9:	push   eax
100228da:	call   DWORD PTR ds:0x1006528c
100228e0:	mov    BYTE PTR [ebp-0x4],0x3
100228e4:	cmp    DWORD PTR [ebp+0x10],0x0
100228e8:	je     0x1002292b
100228ea:	test   esi,esi
100228ec:	mov    WORD PTR [ebp-0x70],0x9
100228f2:	mov    DWORD PTR [ebp-0x68],esi
100228f5:	je     0x100228fd
100228f7:	mov    eax,DWORD PTR [esi]
100228f9:	push   esi
100228fa:	call   DWORD PTR [eax+0x4]
100228fd:	lea    eax,[ebp-0x70]
10022900:	push   eax
10022901:	lea    eax,[ebp-0x50]
10022904:	push   eax
10022905:	mov    BYTE PTR [ebp-0x4],0x4
10022909:	call   DWORD PTR ds:0x10065280
1002290f:	test   eax,eax
10022911:	jge    0x10022919
10022913:	push   eax
10022914:	call   0x1004fa00
10022919:	lea    eax,[ebp-0x70]
1002291c:	mov    BYTE PTR [ebp-0x4],0x3
10022920:	mov    ebx,DWORD PTR ds:0x10065294
10022926:	push   eax
10022927:	call   ebx
10022929:	jmp    0x10022931
1002292b:	mov    ebx,DWORD PTR ds:0x10065294
10022931:	mov    eax,DWORD PTR [ebp+0x14]
10022934:	cmp    DWORD PTR [eax+0x18],0x10
10022938:	jb     0x1002293f
1002293a:	mov    eax,DWORD PTR [eax+0x4]
1002293d:	jmp    0x10022942
1002293f:	add    eax,0x4
10022942:	push   eax
10022943:	lea    edi,[ebp+0x10]
10022946:	call   0x10002439
1002294b:	lea    esi,[ebp-0x80]
1002294e:	mov    BYTE PTR [ebp-0x4],0x5
10022952:	call   0x10022010
10022957:	call   0x1000256d
1002295c:	mov    esi,DWORD PTR ds:0x1006528c
10022962:	lea    eax,[ebp-0x40]
10022965:	push   eax
10022966:	call   esi
10022968:	lea    eax,[ebp-0x30]
1002296b:	push   eax
1002296c:	call   esi
1002296e:	mov    BYTE PTR [ebp-0x4],0x9
10022972:	lea    esi,[ebp-0x60]
10022975:	lea    edi,[ebp-0x90]
1002297b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002297c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002297d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002297e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002297f:	lea    esi,[ebp-0x50]
10022982:	lea    edi,[ebp-0xa0]
10022988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002298a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002298b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002298c:	lea    esi,[ebp-0x80]
1002298f:	lea    edi,[ebp-0xb0]
10022995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022999:	mov    esi,DWORD PTR [ebp+0x8]
1002299c:	push   0x16135352
100229a1:	push   0x1006f7b8
100229a6:	mov    DWORD PTR [esi],0x2
100229ac:	call   0x10003d63
100229b1:	pop    ecx
100229b2:	pop    ecx
100229b3:	push   eax
100229b4:	push   0xb
100229b6:	push   0x1006f7ec
100229bb:	call   0x10003f5b
100229c0:	add    esp,0xc
100229c3:	push   eax
100229c4:	lea    eax,[esi+0x4]
100229c7:	push   eax
100229c8:	call   0x100023a3
100229cd:	lea    eax,[ebp-0xb0]
100229d3:	mov    DWORD PTR [esi+0x8],eax
100229d6:	lea    eax,[ebp-0x40]
100229d9:	push   0x1bf8a346
100229de:	push   0x1006f804
100229e3:	mov    DWORD PTR [esi+0xc],0x3
100229ea:	mov    DWORD PTR [esi+0x10],eax
100229ed:	call   0x10003d63
100229f2:	pop    ecx
100229f3:	pop    ecx
100229f4:	push   0x4c3e8c00
100229f9:	push   eax
100229fa:	call   0x10003d63
100229ff:	pop    ecx
10022a00:	pop    ecx
10022a01:	push   0x3c57622e
10022a06:	push   eax
10022a07:	call   0x10003d63
10022a0c:	pop    ecx
10022a0d:	pop    ecx
10022a0e:	push   0x161b2f8e
10022a13:	push   eax
10022a14:	call   0x10003d63
10022a19:	pop    ecx
10022a1a:	pop    ecx
10022a1b:	push   eax
10022a1c:	push   0xd
10022a1e:	push   0x1006f844
10022a23:	call   0x10003f5b
10022a28:	add    esp,0xc
10022a2b:	push   eax
10022a2c:	lea    eax,[esi+0x18]
10022a2f:	push   eax
10022a30:	call   0x100023a3
10022a35:	push   DWORD PTR ds:0x1007ff44
10022a3b:	and    DWORD PTR [esi+0x1c],0x0
10022a3f:	and    DWORD PTR [esi+0x20],0x0
10022a43:	lea    eax,[ebp-0x30]
10022a46:	mov    DWORD PTR [esi+0x24],eax
10022a49:	call   DWORD PTR ds:0x10065110
10022a4f:	push   0xffffffff
10022a51:	push   DWORD PTR ds:0x1007ff48
10022a57:	call   DWORD PTR ds:0x10065084
10022a5d:	cmp    BYTE PTR [esi+0x14],0x0
10022a61:	je     0x10022adf
10022a63:	cmp    BYTE PTR [esi+0x28],0x0
10022a67:	je     0x10022adf
10022a69:	lea    esi,[ebp-0x40]
10022a6c:	lea    edi,[ebp+0x10]
10022a6f:	call   0x1002207c
10022a74:	mov    BYTE PTR [ebp-0x4],0xa
10022a78:	mov    eax,DWORD PTR [eax]
10022a7a:	test   eax,eax
10022a7c:	je     0x10022a82
10022a7e:	mov    eax,DWORD PTR [eax]
10022a80:	jmp    0x10022a84
10022a82:	xor    eax,eax
10022a84:	push   eax
10022a85:	push   DWORD PTR [ebp+0x18]
10022a88:	call   0x100023a3
10022a8d:	lea    edi,[ebp+0x10]
10022a90:	mov    BYTE PTR [ebp-0x4],0x9
10022a94:	call   0x1000256d
10022a99:	push   DWORD PTR [ebp+0x18]
10022a9c:	call   0x10023d15
10022aa1:	mov    esi,DWORD PTR [ebp+0x1c]
10022aa4:	mov    BYTE PTR [ebp-0x4],0xb
10022aa8:	cmp    WORD PTR [ebp-0x30],0x3
10022aad:	pop    ecx
10022aae:	mov    BYTE PTR [ebp-0x11],al
10022ab1:	mov    DWORD PTR [esi],0x1
10022ab7:	je     0x10022ad2
10022ab9:	push   0x3
10022abb:	push   0x0
10022abd:	lea    eax,[ebp-0x30]
10022ac0:	push   eax
10022ac1:	push   eax
10022ac2:	call   DWORD PTR ds:0x1006527c
10022ac8:	test   eax,eax
10022aca:	jge    0x10022ad2
10022acc:	push   eax
10022acd:	call   0x1004fa00
10022ad2:	movsx  eax,WORD PTR [ebp-0x28]
10022ad6:	mov    DWORD PTR [esi],eax
10022ad8:	mov    DWORD PTR [ebp-0x4],0x9
10022adf:	lea    eax,[ebp-0x30]
10022ae2:	push   eax
10022ae3:	call   ebx
10022ae5:	lea    eax,[ebp-0x40]
10022ae8:	push   eax
10022ae9:	call   ebx
10022aeb:	lea    eax,[ebp-0x80]
10022aee:	push   eax
10022aef:	call   ebx
10022af1:	lea    eax,[ebp-0x50]
10022af4:	push   eax
10022af5:	call   ebx
10022af7:	lea    eax,[ebp-0x60]
10022afa:	push   eax
10022afb:	call   ebx
10022afd:	mov    BYTE PTR [ebp-0x4],0x0
10022b01:	mov    eax,DWORD PTR [ebp-0x18]
10022b04:	test   eax,eax
10022b06:	je     0x10022b0e
10022b08:	mov    ecx,DWORD PTR [eax]
10022b0a:	push   eax
10022b0b:	call   DWORD PTR [ecx+0x8]
10022b0e:	push   DWORD PTR ds:0x1007ff4c
10022b14:	call   DWORD PTR ds:0x10065110
10022b1a:	mov    al,BYTE PTR [ebp-0x11]
10022b1d:	call   0x1005891d
10022b22:	ret    0x18
10022b25:	mov    eax,0x10022b2b
10022b2a:	ret    
10022b2b:	mov    ebx,DWORD PTR ds:0x10065294
10022b31:	jmp    0x10022adf
10022b33:	push   0x4
10022b35:	call   0x10037620
10022b3a:	pop    ecx
10022b3b:	mov    eax,0x10022b0e
10022b40:	ret    
10022b41:	push   0xd8
10022b46:	mov    eax,0x10062677
10022b4b:	call   0x10058878
10022b50:	mov    edi,ecx
10022b52:	push   0x1f4
10022b57:	push   DWORD PTR ds:0x1007ff4c
10022b5d:	call   DWORD PTR ds:0x10065084
10022b63:	test   eax,eax
10022b65:	je     0x10022b73
10022b67:	push   0xf
10022b69:	call   0x10037620
10022b6e:	pop    ecx
10022b6f:	xor    al,al
10022b71:	jmp    0x10022bcf
10022b73:	lea    eax,[ebp-0x1c]
10022b76:	xor    ebx,ebx
10022b78:	push   eax
10022b79:	mov    BYTE PTR [ebp-0x15],bl
10022b7c:	mov    DWORD PTR [ebp-0x4],ebx
10022b7f:	call   0x1002417c
10022b84:	test   eax,eax
10022b86:	jl     0x10022bc0
10022b88:	mov    esi,DWORD PTR [ebp-0x1c]
10022b8b:	mov    eax,DWORD PTR [ebp+0x10]
10022b8e:	mov    ecx,esi
10022b90:	call   0x10010593
10022b95:	cmp    esi,ebx
10022b97:	mov    DWORD PTR [ebp-0x80],esi
10022b9a:	je     0x10022ba2
10022b9c:	mov    eax,DWORD PTR [esi]
10022b9e:	push   esi
10022b9f:	call   DWORD PTR [eax+0x4]
10022ba2:	lea    eax,[ebp+0x10]
10022ba5:	push   eax
10022ba6:	mov    BYTE PTR [ebp-0x4],0x1
10022baa:	call   0x100241f9
10022baf:	test   eax,eax
10022bb1:	jge    0x10022bd7
10022bb3:	cmp    esi,ebx
10022bb5:	mov    BYTE PTR [ebp-0x4],bl
10022bb8:	je     0x10022bc0
10022bba:	mov    eax,DWORD PTR [esi]
10022bbc:	push   esi
10022bbd:	call   DWORD PTR [eax+0x8]
10022bc0:	push   DWORD PTR ds:0x1007ff4c
10022bc6:	call   DWORD PTR ds:0x10065110
10022bcc:	mov    al,BYTE PTR [ebp-0x15]
10022bcf:	call   0x1005891d
10022bd4:	ret    0x1c
10022bd7:	mov    ecx,DWORD PTR [ebp+0x14]
10022bda:	mov    ebx,DWORD PTR [ebp+0x10]
10022bdd:	call   0x1001134c
10022be2:	test   ebx,ebx
10022be4:	mov    DWORD PTR [ebp+0x14],ebx
10022be7:	je     0x10022bef
10022be9:	mov    eax,DWORD PTR [ebx]
10022beb:	push   ebx
10022bec:	call   DWORD PTR [eax+0x4]
10022bef:	mov    eax,DWORD PTR [ebp+0xc]
10022bf2:	mov    WORD PTR [ebp-0x5c],0x16
10022bf8:	mov    DWORD PTR [ebp-0x54],eax
10022bfb:	test   esi,esi
10022bfd:	mov    BYTE PTR [ebp-0x4],0x3
10022c01:	mov    WORD PTR [ebp-0x3c],0x9
10022c07:	mov    DWORD PTR [ebp-0x34],esi
10022c0a:	je     0x10022c12
10022c0c:	mov    eax,DWORD PTR [esi]
10022c0e:	push   esi
10022c0f:	call   DWORD PTR [eax+0x4]
10022c12:	test   ebx,ebx
10022c14:	mov    BYTE PTR [ebp-0x4],0x4
10022c18:	mov    WORD PTR [ebp-0x6c],0x9
10022c1e:	mov    DWORD PTR [ebp-0x64],ebx
10022c21:	je     0x10022c29
10022c23:	mov    eax,DWORD PTR [ebx]
10022c25:	push   ebx
10022c26:	call   DWORD PTR [eax+0x4]
10022c29:	test   edi,edi
10022c2b:	mov    BYTE PTR [ebp-0x4],0x5
10022c2f:	mov    WORD PTR [ebp-0x2c],0x9
10022c35:	mov    DWORD PTR [ebp-0x24],edi
10022c38:	je     0x10022c40
10022c3a:	mov    eax,DWORD PTR [edi]
10022c3c:	push   edi
10022c3d:	call   DWORD PTR [eax+0x4]
10022c40:	mov    eax,DWORD PTR [ebp+0x18]
10022c43:	mov    BYTE PTR [ebp-0x4],0x6
10022c47:	cmp    DWORD PTR [eax+0x18],0x10
10022c4b:	jb     0x10022c52
10022c4d:	mov    eax,DWORD PTR [eax+0x4]
10022c50:	jmp    0x10022c55
10022c52:	add    eax,0x4
10022c55:	push   eax
10022c56:	lea    edi,[ebp+0x10]
10022c59:	call   0x10002439
10022c5e:	lea    esi,[ebp-0x7c]
10022c61:	mov    BYTE PTR [ebp-0x4],0x7
10022c65:	call   0x10022010
10022c6a:	mov    BYTE PTR [ebp-0x4],0x9
10022c6e:	call   0x1000256d
10022c73:	mov    eax,DWORD PTR [ebp+0x1c]
10022c76:	mov    esi,DWORD PTR [eax]
10022c78:	push   esi
10022c79:	mov    WORD PTR [ebp-0x4c],0x8
10022c7f:	call   DWORD PTR ds:0x100652b0
10022c85:	test   eax,eax
10022c87:	mov    DWORD PTR [ebp-0x44],eax
10022c8a:	jne    0x10022c9a
10022c8c:	test   esi,esi
10022c8e:	je     0x10022c9a
10022c90:	push   0x8007000e
10022c95:	call   0x1004fa00
10022c9a:	cmp    BYTE PTR [ebp+0x20],0x0
10022c9e:	mov    BYTE PTR [ebp-0x4],0xa
10022ca2:	lea    esi,[ebp-0x5c]
10022ca5:	lea    edi,[ebp-0x94]
10022cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022caf:	lea    esi,[ebp-0x3c]
10022cb2:	lea    edi,[ebp-0xa4]
10022cb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cbc:	lea    esi,[ebp-0x6c]
10022cbf:	lea    edi,[ebp-0xb4]
10022cc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cc9:	lea    esi,[ebp-0x2c]
10022ccc:	lea    edi,[ebp-0xc4]
10022cd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cd6:	lea    esi,[ebp-0x7c]
10022cd9:	lea    edi,[ebp-0xd4]
10022cdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022ce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022ce3:	lea    esi,[ebp-0x4c]
10022ce6:	lea    edi,[ebp-0xe4]
10022cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10022cf0:	mov    esi,DWORD PTR [ebp+0x8]
10022cf3:	mov    DWORD PTR [esi],0x1
10022cf9:	je     0x10022d16
10022cfb:	push   0x4d965826
10022d00:	push   0x1006f860
10022d05:	call   0x10003d63
10022d0a:	pop    ecx
10022d0b:	pop    ecx
10022d0c:	push   eax
10022d0d:	push   0x9
10022d0f:	push   0x1006f890
10022d14:	jmp    0x10022d49
10022d16:	push   0x14be6966
10022d1b:	push   0x1006f8a8
10022d20:	call   0x10003d63
10022d25:	pop    ecx
10022d26:	pop    ecx
10022d27:	push   0x5918f5ae
10022d2c:	push   eax
10022d2d:	call   0x10003d63
10022d32:	pop    ecx
10022d33:	pop    ecx
10022d34:	push   0x30dcca1a
10022d39:	push   eax
10022d3a:	call   0x10003d63
10022d3f:	pop    ecx
10022d40:	pop    ecx
10022d41:	push   eax
10022d42:	push   0x8
10022d44:	push   0x1006f8e8
10022d49:	call   0x10003f5b
10022d4e:	add    esp,0xc
10022d51:	push   eax
10022d52:	lea    eax,[esi+0x4]
10022d55:	push   eax
10022d56:	call   0x100023a3
10022d5b:	push   DWORD PTR ds:0x1007ff44
10022d61:	and    DWORD PTR [esi+0x10],0x0
10022d65:	lea    eax,[ebp-0xe4]
10022d6b:	mov    DWORD PTR [esi+0x8],eax
10022d6e:	mov    DWORD PTR [esi+0xc],0x6
10022d75:	call   DWORD PTR ds:0x10065110
10022d7b:	push   0xffffffff
10022d7d:	push   DWORD PTR ds:0x1007ff48
10022d83:	call   DWORD PTR ds:0x10065084
10022d89:	cmp    BYTE PTR [esi+0x14],0x0
10022d8d:	je     0x10022d9a
10022d8f:	mov    eax,ebx
10022d91:	call   0x1001187a
10022d96:	mov    BYTE PTR [ebp-0x15],0x1
10022d9a:	mov    esi,DWORD PTR ds:0x10065294
10022da0:	lea    eax,[ebp-0x4c]
10022da3:	push   eax
10022da4:	call   esi
10022da6:	lea    eax,[ebp-0x7c]
10022da9:	push   eax
10022daa:	call   esi
10022dac:	lea    eax,[ebp-0x2c]
10022daf:	push   eax
10022db0:	call   esi
10022db2:	lea    eax,[ebp-0x6c]
10022db5:	push   eax
10022db6:	call   esi
10022db8:	lea    eax,[ebp-0x3c]
10022dbb:	push   eax
10022dbc:	call   esi
10022dbe:	lea    eax,[ebp-0x5c]
10022dc1:	push   eax
10022dc2:	call   esi
10022dc4:	test   ebx,ebx
10022dc6:	mov    BYTE PTR [ebp-0x4],0x1
10022dca:	je     0x10022dd2
10022dcc:	mov    eax,DWORD PTR [ebx]
10022dce:	push   ebx
10022dcf:	call   DWORD PTR [eax+0x8]
10022dd2:	mov    BYTE PTR [ebp-0x4],0x0
10022dd6:	mov    eax,DWORD PTR [ebp-0x1c]
10022dd9:	test   eax,eax
10022ddb:	je     0x10022bc0
10022de1:	mov    ecx,DWORD PTR [eax]
10022de3:	push   eax
10022de4:	call   DWORD PTR [ecx+0x8]
10022de7:	jmp    0x10022bc0
10022dec:	push   0x4
10022dee:	call   0x10037620
10022df3:	pop    ecx
10022df4:	mov    eax,0x10022bc0
10022df9:	ret    
10022dfa:	push   0x2c
10022dfc:	mov    eax,0x10061618
10022e01:	call   0x10058878
10022e06:	mov    esi,ecx
10022e08:	mov    ebx,DWORD PTR ds:0x10065084
10022e0e:	push   0x1f4
10022e13:	push   DWORD PTR ds:0x1007ff4c
10022e19:	call   ebx
10022e1b:	test   eax,eax
10022e1d:	je     0x10022e2e
10022e1f:	push   0xf
10022e21:	call   0x10037620
10022e26:	pop    ecx
10022e27:	xor    eax,eax
10022e29:	jmp    0x10022f19
10022e2e:	and    DWORD PTR [ebp-0x4],0x0
10022e32:	mov    edi,DWORD PTR ds:0x1006528c
10022e38:	and    DWORD PTR [ebp-0x14],0x0
10022e3c:	lea    eax,[ebp-0x28]
10022e3f:	push   eax
10022e40:	call   edi
10022e42:	push   0xe989baa
10022e47:	mov    BYTE PTR [ebp-0x4],0x1
10022e4b:	push   0x1006f8fc
10022e50:	mov    DWORD PTR [esi],0x1
10022e56:	call   0x10003d63
10022e5b:	pop    ecx
10022e5c:	pop    ecx
10022e5d:	push   0x1eef9160
10022e62:	push   eax
10022e63:	call   0x10003d63
10022e68:	pop    ecx
10022e69:	pop    ecx
10022e6a:	push   0x50612d34
10022e6f:	push   eax
10022e70:	call   0x10003d63
10022e75:	pop    ecx
10022e76:	pop    ecx
10022e77:	push   0x793626fa
10022e7c:	push   eax
10022e7d:	call   0x10003d63
10022e82:	pop    ecx
10022e83:	pop    ecx
10022e84:	push   eax
10022e85:	push   0x8
10022e87:	push   0x1006f938
10022e8c:	call   0x10003f5b
10022e91:	add    esp,0xc
10022e94:	push   eax
10022e95:	lea    eax,[esi+0x4]
10022e98:	push   eax
10022e99:	call   0x100023a3
10022e9e:	push   DWORD PTR ds:0x1007ff44
10022ea4:	and    DWORD PTR [esi+0x8],0x0
10022ea8:	and    DWORD PTR [esi+0xc],0x0
10022eac:	lea    eax,[ebp-0x28]
10022eaf:	mov    DWORD PTR [esi+0x10],eax
10022eb2:	call   DWORD PTR ds:0x10065110
10022eb8:	push   0xffffffff
10022eba:	push   DWORD PTR ds:0x1007ff48
10022ec0:	call   ebx
10022ec2:	cmp    BYTE PTR [esi+0x14],0x0
10022ec6:	je     0x10022f00
10022ec8:	cmp    WORD PTR [ebp-0x28],0x16
10022ecd:	jne    0x10022ed7
10022ecf:	mov    eax,DWORD PTR [ebp-0x20]
10022ed2:	mov    DWORD PTR [ebp-0x14],eax
10022ed5:	jmp    0x10022f00
10022ed7:	lea    eax,[ebp-0x38]
10022eda:	push   eax
10022edb:	call   edi
10022edd:	lea    ecx,[ebp-0x28]
10022ee0:	mov    dx,0x16
10022ee4:	lea    eax,[ebp-0x38]
10022ee7:	mov    BYTE PTR [ebp-0x4],0x2
10022eeb:	call   0x1002204f
10022ef0:	mov    esi,DWORD PTR [ebp-0x30]
10022ef3:	lea    eax,[ebp-0x38]
10022ef6:	push   eax
10022ef7:	call   DWORD PTR ds:0x10065294
10022efd:	mov    DWORD PTR [ebp-0x14],esi
10022f00:	lea    eax,[ebp-0x28]
10022f03:	push   eax
10022f04:	call   DWORD PTR ds:0x10065294
10022f0a:	push   DWORD PTR ds:0x1007ff4c
10022f10:	call   DWORD PTR ds:0x10065110
10022f16:	mov    eax,DWORD PTR [ebp-0x14]
10022f19:	call   0x1005891d
10022f1e:	ret    
10022f1f:	push   0x4
10022f21:	call   0x10037620
10022f26:	pop    ecx
10022f27:	mov    eax,0x10022f0a
10022f2c:	ret    
10022f2d:	push   ebp
10022f2e:	mov    ebp,esp
10022f30:	and    esp,0xfffffff8
10022f33:	push   0xffffffff
10022f35:	push   0x100615da
10022f3a:	mov    eax,fs:0x0
10022f40:	push   eax
10022f41:	sub    esp,0xd8
10022f47:	mov    eax,ds:0x1007d030
10022f4c:	xor    eax,esp
10022f4e:	mov    DWORD PTR [esp+0xd0],eax
10022f55:	push   ebx
10022f56:	push   esi
10022f57:	push   edi
10022f58:	mov    eax,ds:0x1007d030
10022f5d:	xor    eax,esp
10022f5f:	push   eax
10022f60:	lea    eax,[esp+0xe8]
10022f67:	mov    fs:0x0,eax
10022f6d:	mov    eax,DWORD PTR [ebp+0x8]
10022f70:	mov    DWORD PTR [esp+0x28],eax
10022f74:	mov    eax,DWORD PTR [ebp+0xc]
10022f77:	mov    DWORD PTR [esp+0x1c],eax
10022f7b:	lea    eax,[esp+0x10]
10022f7f:	xor    edi,edi
10022f81:	push   eax
10022f82:	mov    DWORD PTR [esp+0x24],edi
10022f86:	call   0x100240ea
10022f8b:	cmp    eax,edi
10022f8d:	jge    0x10022fe8
10022f8f:	push   0x69a266d2
10022f94:	push   0x1006f94c
10022f99:	call   0x10003d63
10022f9e:	push   0x26671b44
10022fa3:	push   eax
10022fa4:	call   0x10003d63
10022fa9:	push   eax
10022faa:	push   0x16
10022fac:	push   0x1006f988
10022fb1:	call   0x10003d75
10022fb6:	add    esp,0x1c
10022fb9:	push   eax
10022fba:	lea    ecx,[esp+0x3c]
10022fbe:	call   0x100011d6
10022fc3:	lea    eax,[esp+0x38]
10022fc7:	push   eax
10022fc8:	lea    eax,[esp+0x5c]
10022fcc:	push   eax
10022fcd:	mov    DWORD PTR [esp+0xf8],edi
10022fd4:	call   0x100026a9
10022fd9:	push   0x10073924
10022fde:	lea    eax,[esp+0x5c]
10022fe2:	push   eax
10022fe3:	call   0x10046704
10022fe8:	mov    esi,DWORD PTR [esp+0x10]
10022fec:	lea    eax,[esi+0x24]
10022fef:	neg    esi
10022ff1:	sbb    esi,esi
10022ff3:	and    esi,eax
10022ff5:	mov    DWORD PTR [esp+0x18],esi
10022ff9:	je     0x10023001
10022ffb:	mov    eax,DWORD PTR [esi]
10022ffd:	push   esi
10022ffe:	call   DWORD PTR [eax+0x4]
10023001:	mov    DWORD PTR [esp+0xf0],0x1
1002300c:	call   DWORD PTR ds:0x10065118
10023012:	cmp    esi,edi
10023014:	mov    DWORD PTR [esp+0x20],eax
10023018:	mov    DWORD PTR [esp+0x14],edi
1002301c:	je     0x1002302d
1002301e:	mov    eax,DWORD PTR [esi]
10023020:	lea    ecx,[esp+0x14]
10023024:	push   ecx
10023025:	push   0x1006eec8
1002302a:	push   esi
1002302b:	call   DWORD PTR [eax]
1002302d:	mov    BYTE PTR [esp+0xf0],0x2
10023035:	cmp    DWORD PTR [esp+0x14],edi
10023039:	jne    0x1002309f
1002303b:	push   0x4b22b124
10023040:	push   0x1006f9a0
10023045:	call   0x10003d63
1002304a:	push   0x9ab0fa6
1002304f:	push   eax
10023050:	call   0x10003d63
10023055:	push   0x6c439fc0
1002305a:	push   eax
1002305b:	call   0x10003d63
10023060:	push   eax
10023061:	push   0x16
10023063:	push   0x1006f988
10023068:	call   0x10003d75
1002306d:	add    esp,0x24
10023070:	push   eax
10023071:	lea    ecx,[esp+0x3c]
10023075:	call   0x100011d6
1002307a:	lea    eax,[esp+0x38]
1002307e:	push   eax
1002307f:	lea    eax,[esp+0x5c]
10023083:	push   eax
10023084:	mov    BYTE PTR [esp+0xf8],0x3
1002308c:	call   0x100026a9
10023091:	push   0x10073924
10023096:	lea    eax,[esp+0x5c]
1002309a:	jmp    0x10022fe2
1002309f:	mov    eax,DWORD PTR [esi]
100230a1:	push   0x1006f9d8
100230a6:	push   esi
100230a7:	call   DWORD PTR [eax+0x1c]
100230aa:	test   eax,eax
100230ac:	jge    0x100230f1
100230ae:	push   0x1006f9e8
100230b3:	push   0x16
100230b5:	push   0x1006f988
100230ba:	call   0x10003d75
100230bf:	add    esp,0xc
100230c2:	push   eax
100230c3:	lea    ecx,[esp+0x3c]
100230c7:	call   0x100011d6
100230cc:	lea    eax,[esp+0x38]
100230d0:	push   eax
100230d1:	lea    eax,[esp+0x5c]
100230d5:	push   eax
100230d6:	mov    BYTE PTR [esp+0xf8],0x4
100230de:	call   0x100026a9
100230e3:	push   0x10073924
100230e8:	lea    eax,[esp+0x5c]
100230ec:	jmp    0x10022fe2
100230f1:	push   edi
100230f2:	lea    ecx,[esp+0xc8]
100230f9:	mov    DWORD PTR [esp+0xe0],0xf
10023104:	call   0x10001425
10023109:	push   0x2cd63d14
1002310e:	push   0x1006fa28
10023113:	mov    BYTE PTR [esp+0xf8],0x5
1002311b:	call   0x10003d63
10023120:	push   eax
10023121:	push   0x16
10023123:	push   0x1006fa60
10023128:	call   0x10003d75
1002312d:	add    esp,0x14
10023130:	push   eax
10023131:	lea    eax,[esp+0xc8]
10023138:	push   eax
10023139:	call   0x10005e98
1002313e:	push   0x42071242
10023143:	push   0x1006fa78
10023148:	call   0x10003d63
1002314d:	push   0x370a4186
10023152:	push   eax
10023153:	call   0x10003d63
10023158:	push   0x297067ea
1002315d:	push   eax
1002315e:	call   0x10003d63
10023163:	push   0x3ff592a0
10023168:	push   eax
10023169:	call   0x10003d63
1002316e:	push   eax
1002316f:	push   0x15
10023171:	push   0x1006faac
10023176:	call   0x10003d75
1002317b:	add    esp,0x2c
1002317e:	push   eax
1002317f:	lea    eax,[esp+0xc8]
10023186:	push   eax
10023187:	call   0x10005e98
1002318c:	push   0x1006fac4
10023191:	push   0x1c
10023193:	push   0x1006faf4
10023198:	call   0x10003d75
1002319d:	add    esp,0xc
100231a0:	push   eax
100231a1:	lea    eax,[esp+0xc8]
100231a8:	push   eax
100231a9:	call   0x10005e98
100231ae:	push   0x1006fb14
100231b3:	push   0x1d
100231b5:	push   0x1006fb50
100231ba:	call   0x10003d75
100231bf:	add    esp,0xc
100231c2:	push   eax
100231c3:	lea    eax,[esp+0xc8]
100231ca:	push   eax
100231cb:	call   0x10005e98
100231d0:	push   0x1006fb70
100231d5:	push   0x14
100231d7:	push   0x1006fb94
100231dc:	call   0x10003d75
100231e1:	add    esp,0xc
100231e4:	push   eax
100231e5:	lea    eax,[esp+0xc8]
100231ec:	push   eax
100231ed:	call   0x10005e98
100231f2:	push   0x3c08ea24
100231f7:	push   0x1006fbac
100231fc:	call   0x10003d63
10023201:	push   0x495df0f6
10023206:	push   eax
10023207:	call   0x10003d63
1002320c:	push   0x7ebb95b2
10023211:	push   eax
10023212:	call   0x10003d63
10023217:	push   eax
10023218:	push   0x1b
1002321a:	push   0x1006fbd0
1002321f:	call   0x10003d75
10023224:	add    esp,0x24
10023227:	push   eax
10023228:	lea    eax,[esp+0xc8]
1002322f:	push   eax
10023230:	call   0x10005e98
10023235:	push   0x50874da8
1002323a:	push   0x1006fbec
1002323f:	call   0x10003d63
10023244:	push   eax
10023245:	push   0x7
10023247:	push   0x1006fc18
1002324c:	call   0x10003d75
10023251:	add    esp,0x14
10023254:	push   eax
10023255:	lea    eax,[esp+0xc8]
1002325c:	push   eax
1002325d:	call   0x10005e98
10023262:	push   0x3159f836
10023267:	push   0x1006fc20
1002326c:	call   0x10003d63
10023271:	push   0x3b801696
10023276:	push   eax
10023277:	call   0x10003d63
1002327c:	push   0x4e5cbdf0
10023281:	push   eax
10023282:	call   0x10003d63
10023287:	push   0x18b64192
1002328c:	push   eax
1002328d:	call   0x10003d63
10023292:	push   eax
10023293:	push   0x19
10023295:	push   0x1006fc5c
1002329a:	call   0x10003d75
1002329f:	add    esp,0x2c
100232a2:	push   eax
100232a3:	lea    eax,[esp+0xc8]
100232aa:	push   eax
100232ab:	call   0x10005e98
100232b0:	mov    ebx,0x1006fc78
100232b5:	push   ebx
100232b6:	lea    eax,[esp+0xc8]
100232bd:	push   eax
100232be:	call   0x10005e98
100232c3:	push   0x46b12762
100232c8:	push   0x1006fc7c
100232cd:	call   0x10003d63
100232d2:	push   0x176c19d2
100232d7:	push   eax
100232d8:	call   0x10003d63
100232dd:	push   0x4f7717a6
100232e2:	push   eax
100232e3:	call   0x10003d63
100232e8:	push   eax
100232e9:	push   0x15
100232eb:	push   0x1006fcac
100232f0:	call   0x10003d75
100232f5:	add    esp,0x24
100232f8:	push   eax
100232f9:	lea    eax,[esp+0xc8]
10023300:	push   eax
10023301:	call   0x10005e98
10023306:	mov    esi,0x1006fcc4
1002330b:	push   esi
1002330c:	lea    eax,[esp+0xc8]
10023313:	push   eax
10023314:	call   0x10005e98
10023319:	push   0x2357a698
1002331e:	push   0x1006fcc8
10023323:	call   0x10003d63
10023328:	push   0x761a328a
1002332d:	push   eax
1002332e:	call   0x10003d63
10023333:	push   0x42b33d44
10023338:	push   eax
10023339:	call   0x10003d63
1002333e:	push   eax
1002333f:	push   0x14
10023341:	push   0x1006fd04
10023346:	call   0x10003d75
1002334b:	add    esp,0x24
1002334e:	push   eax
1002334f:	lea    eax,[esp+0xc8]
10023356:	push   eax
10023357:	call   0x10005e98
1002335c:	push   ebx
1002335d:	lea    eax,[esp+0xc8]
10023364:	push   eax
10023365:	call   0x10005e98
1002336a:	push   0x1006fd1c
1002336f:	push   0x19
10023371:	push   0x1006fd54
10023376:	call   0x10003d75
1002337b:	add    esp,0xc
1002337e:	push   eax
1002337f:	lea    eax,[esp+0xc8]
10023386:	push   eax
10023387:	call   0x10005e98
1002338c:	push   esi
1002338d:	lea    eax,[esp+0xc8]
10023394:	push   eax
10023395:	call   0x10005e98
1002339a:	push   0x53891612
1002339f:	push   0x1006fd70
100233a4:	call   0x10003d63
100233a9:	push   eax
100233aa:	push   0x26
100233ac:	push   0x1006fdb0
100233b1:	call   0x10003d75
100233b6:	add    esp,0x14
100233b9:	push   eax
100233ba:	lea    eax,[esp+0xc8]
100233c1:	push   eax
100233c2:	call   0x10005e98
100233c7:	push   0x98ca0ac
100233cc:	push   0x1006fdd8
100233d1:	call   0x10003d63
100233d6:	push   eax
100233d7:	push   0x2
100233d9:	push   0x1006fe00
100233de:	call   0x10003d75
100233e3:	add    esp,0x14
100233e6:	push   eax
100233e7:	lea    eax,[esp+0xc8]
100233ee:	push   eax
100233ef:	call   0x10005e98
100233f4:	push   0x55813e98
100233f9:	push   0x1006fe04
100233fe:	call   0x10003d63
10023403:	push   0x5a8f5ec6
10023408:	push   eax
10023409:	call   0x10003d63
1002340e:	push   0x12dbcae8
10023413:	push   eax
10023414:	call   0x10003d63
10023419:	push   0x28dc6426
1002341e:	push   eax
1002341f:	call   0x10003d63
10023424:	push   eax
10023425:	push   0x12
10023427:	push   0x1006fe2c
1002342c:	call   0x10003d75
10023431:	add    esp,0x2c
10023434:	push   eax
10023435:	lea    eax,[esp+0xc8]
1002343c:	push   eax
1002343d:	call   0x10005e98
10023442:	push   0x1006fe40
10023447:	push   0x39
10023449:	push   0x1006fe80
1002344e:	call   0x10003d75
10023453:	add    esp,0xc
10023456:	push   eax
10023457:	lea    eax,[esp+0xc8]
1002345e:	push   eax
1002345f:	call   0x10005e98
10023464:	push   esi
10023465:	lea    eax,[esp+0xc8]
1002346c:	push   eax
1002346d:	call   0x10005e98
10023472:	push   0x1006febc
10023477:	push   0x3c
10023479:	push   0x1006fee4
1002347e:	call   0x10003d75
10023483:	add    esp,0xc
10023486:	push   eax
10023487:	lea    eax,[esp+0xc8]
1002348e:	push   eax
1002348f:	call   0x10005e98
10023494:	push   ebx
10023495:	lea    eax,[esp+0xc8]
1002349c:	push   eax
1002349d:	call   0x10005e98
100234a2:	push   0x5a2f805a
100234a7:	push   0x1006ff24
100234ac:	call   0x10003d63
100234b1:	push   eax
100234b2:	push   0x45
100234b4:	push   0x1006ff48
100234b9:	call   0x10003d75
100234be:	add    esp,0x14
100234c1:	push   eax
100234c2:	lea    eax,[esp+0xc8]
100234c9:	push   eax
100234ca:	call   0x10005e98
100234cf:	push   esi
100234d0:	lea    eax,[esp+0xc8]
100234d7:	push   eax
100234d8:	call   0x10005e98
100234dd:	push   0x1006ff90
100234e2:	push   0x3d
100234e4:	push   0x1006ffb8
100234e9:	call   0x10003d75
100234ee:	add    esp,0xc
100234f1:	push   eax
100234f2:	lea    eax,[esp+0xc8]
100234f9:	push   eax
100234fa:	call   0x10005e98
100234ff:	push   ebx
10023500:	lea    eax,[esp+0xc8]
10023507:	push   eax
10023508:	call   0x10005e98
1002350d:	push   0x74d9cf96
10023512:	push   0x1006fff8
10023517:	call   0x10003d63
1002351c:	push   0x79e34950
10023521:	push   eax
10023522:	call   0x10003d63
10023527:	push   0xa1ad80a
1002352c:	push   eax
1002352d:	call   0x10003d63
10023532:	push   eax
10023533:	push   0x46
10023535:	push   0x10070038
1002353a:	call   0x10003d75
1002353f:	add    esp,0x24
10023542:	push   eax
10023543:	lea    eax,[esp+0xc8]
1002354a:	push   eax
1002354b:	call   0x10005e98
10023550:	push   esi
10023551:	lea    eax,[esp+0xc8]
10023558:	push   eax
10023559:	call   0x10005e98
1002355e:	mov    eax,DWORD PTR [esp+0x1c]
10023562:	mov    eax,DWORD PTR [eax]
10023564:	lea    ecx,[esp+0x10]
10023568:	push   ecx
10023569:	push   0x1
1002356b:	lea    ecx,[esp+0x24]
1002356f:	push   ecx
10023570:	push   eax
10023571:	call   0x10036790
10023576:	mov    ecx,DWORD PTR [eax]
10023578:	mov    esi,ecx
1002357a:	mov    DWORD PTR [esp+0x24],esi
1002357e:	mov    DWORD PTR [eax],edi
10023580:	mov    DWORD PTR [esp+0x54],esi
10023584:	mov    BYTE PTR [esp+0xf0],0x6
1002358c:	push   DWORD PTR [esp+0x1c]
10023590:	call   0x10041d92
10023595:	cmp    esi,edi
10023597:	pop    ecx
10023598:	jne    0x100235e5
1002359a:	mov    esi,DWORD PTR [esp+0x28]
1002359e:	push   edi
1002359f:	mov    DWORD PTR [esi],edi
100235a1:	call   0x10041d92
100235a6:	pop    ecx
100235a7:	push   edi
100235a8:	push   0x1
100235aa:	lea    ecx,[esp+0xcc]
100235b1:	call   0x100012f9
100235b6:	mov    BYTE PTR [esp+0xf0],0x1
100235be:	mov    eax,DWORD PTR [esp+0x14]
100235c2:	cmp    eax,edi
100235c4:	je     0x100235cc
100235c6:	mov    ecx,DWORD PTR [eax]
100235c8:	push   eax
100235c9:	call   DWORD PTR [ecx+0x8]
100235cc:	or     DWORD PTR [esp+0xf0],0xffffffff
100235d4:	mov    eax,DWORD PTR [esp+0x18]
100235d8:	mov    ecx,DWORD PTR [eax]
100235da:	push   eax
100235db:	call   DWORD PTR [ecx+0x8]
100235de:	mov    eax,esi
100235e0:	jmp    0x100238fd
100235e5:	mov    eax,DWORD PTR [esp+0x10]
100235e9:	mov    DWORD PTR [esp+0x30],eax
100235ed:	lea    eax,[esp+0x2c]
100235f1:	push   eax
100235f2:	mov    DWORD PTR [esp+0x30],edi
100235f6:	mov    DWORD PTR [esp+0x38],esi
100235fa:	call   0x10037480
100235ff:	cmp    eax,edi
10023601:	je     0x100237bd
10023607:	mov    DWORD PTR [esp+0x10],eax
1002360b:	mov    ebx,0x10070104
10023610:	push   0x71b64526
10023615:	push   0x10070080
1002361a:	call   0x10003d63
1002361f:	push   0x453266fa
10023624:	push   eax
10023625:	call   0x10003d63
1002362a:	push   0x766a5ce6
1002362f:	push   eax
10023630:	call   0x10003d63
10023635:	push   eax
10023636:	push   0x12
10023638:	push   0x100700ac
1002363d:	call   0x10003d75
10023642:	add    esp,0x24
10023645:	push   eax
10023646:	lea    eax,[esp+0xc8]
1002364d:	push   eax
1002364e:	call   0x10005e98
10023653:	push   0x100700c0
10023658:	push   0x10
1002365a:	push   0x100700f0
1002365f:	call   0x10003d75
10023664:	add    esp,0xc
10023667:	push   eax
10023668:	lea    eax,[esp+0xc8]
1002366f:	push   eax
10023670:	call   0x10005e98
10023675:	lea    eax,[esp+0x2c]
10023679:	push   eax
1002367a:	lea    esi,[esp+0x3c]
1002367e:	call   0x10037140
10023683:	push   0xffffffff
10023685:	push   edi
10023686:	lea    esi,[esp+0xcc]
1002368d:	mov    BYTE PTR [esp+0xf8],0x7
10023695:	call   0x10005fb0
1002369a:	push   edi
1002369b:	push   0x1
1002369d:	lea    ecx,[esp+0x40]
100236a1:	mov    BYTE PTR [esp+0xf8],0x6
100236a9:	call   0x100012f9
100236ae:	push   ebx
100236af:	mov    eax,esi
100236b1:	push   eax
100236b2:	call   0x10005e98
100236b7:	push   0x10070108
100236bc:	push   0xd
100236be:	push   0x10070144
100236c3:	call   0x10003d75
100236c8:	add    esp,0xc
100236cb:	push   eax
100236cc:	mov    eax,esi
100236ce:	push   eax
100236cf:	call   0x10005e98
100236d4:	lea    eax,[esp+0x2c]
100236d8:	push   eax
100236d9:	lea    esi,[esp+0x3c]
100236dd:	call   0x10037140
100236e2:	push   0xffffffff
100236e4:	push   edi
100236e5:	lea    esi,[esp+0xcc]
100236ec:	mov    BYTE PTR [esp+0xf8],0x8
100236f4:	call   0x10005fb0
100236f9:	push   edi
100236fa:	push   0x1
100236fc:	lea    ecx,[esp+0x40]
10023700:	mov    BYTE PTR [esp+0xf8],0x6
10023708:	call   0x100012f9
1002370d:	push   ebx
1002370e:	mov    eax,esi
10023710:	push   eax
10023711:	call   0x10005e98
10023716:	push   0x63bcfaae
1002371b:	push   0x10070154
10023720:	call   0x10003d63
10023725:	push   eax
10023726:	push   0xe
10023728:	push   0x10070190
1002372d:	call   0x10003d75
10023732:	add    esp,0x14
10023735:	push   eax
10023736:	mov    eax,esi
10023738:	push   eax
10023739:	call   0x10005e98
1002373e:	lea    eax,[esp+0x2c]
10023742:	push   eax
10023743:	lea    esi,[esp+0x3c]
10023747:	call   0x10037140
1002374c:	push   0xffffffff
1002374e:	push   edi
1002374f:	lea    esi,[esp+0xcc]
10023756:	mov    BYTE PTR [esp+0xf8],0x9
1002375e:	call   0x10005fb0
10023763:	push   edi
10023764:	push   0x1
10023766:	lea    ecx,[esp+0x40]
1002376a:	mov    BYTE PTR [esp+0xf8],0x6
10023772:	call   0x100012f9
10023777:	push   ebx
10023778:	mov    eax,esi
1002377a:	push   eax
1002377b:	call   0x10005e98
10023780:	push   0x1506c4c2
10023785:	push   0x100701a0
1002378a:	call   0x10003d63
1002378f:	push   0x186570ee
10023794:	push   eax
10023795:	call   0x10003d63
1002379a:	push   eax
1002379b:	push   0x11
1002379d:	push   0x100701c4
100237a2:	call   0x10003d75
100237a7:	add    esp,0x1c
100237aa:	push   eax
100237ab:	mov    eax,esi
100237ad:	push   eax
100237ae:	call   0x10005e98
100237b3:	dec    DWORD PTR [esp+0x10]
100237b7:	jne    0x10023610
100237bd:	call   DWORD PTR ds:0x1007dfe4
100237c3:	cmp    DWORD PTR [esp+0xdc],0x10
100237cb:	mov    eax,DWORD PTR [esp+0xc8]
100237d2:	jae    0x100237db
100237d4:	lea    eax,[esp+0xc8]
100237db:	push   eax
100237dc:	lea    ecx,[esp+0x3c]
100237e0:	call   0x100011d6
100237e5:	lea    eax,[esp+0x10]
100237e9:	push   eax
100237ea:	lea    ebx,[esp+0x3c]
100237ee:	mov    BYTE PTR [esp+0xf4],0xa
100237f6:	call   0x10033e70
100237fb:	pop    ecx
100237fc:	mov    BYTE PTR [esp+0xf0],0xb
10023804:	mov    eax,DWORD PTR [eax]
10023806:	test   eax,eax
10023808:	je     0x1002380e
1002380a:	mov    eax,DWORD PTR [eax]
1002380c:	jmp    0x10023810
1002380e:	xor    eax,eax
10023810:	mov    ecx,DWORD PTR [esp+0x18]
10023814:	mov    edx,DWORD PTR [ecx]
10023816:	push   eax
10023817:	push   ecx
10023818:	call   DWORD PTR [edx+0x28]
1002381b:	test   eax,eax
1002381d:	lea    edi,[esp+0x10]
10023821:	setl   bl
10023824:	call   0x1000256d
10023829:	push   0x0
1002382b:	push   0x1
1002382d:	lea    ecx,[esp+0x40]
10023831:	mov    BYTE PTR [esp+0xf8],0x6
10023839:	call   0x100012f9
1002383e:	test   bl,bl
10023840:	je     0x1002389c
10023842:	push   0x24381754
10023847:	push   0x100701d8
1002384c:	call   0x10003d63
10023851:	push   eax
10023852:	push   0x16
10023854:	push   0x1006f988
10023859:	call   0x10003d75
1002385e:	add    esp,0x14
10023861:	push   eax
10023862:	lea    ecx,[esp+0x84]
10023869:	call   0x100011d6
1002386e:	lea    eax,[esp+0x80]
10023875:	push   eax
10023876:	lea    eax,[esp+0xa0]
1002387d:	push   eax
1002387e:	mov    BYTE PTR [esp+0xf8],0xc
10023886:	call   0x100026a9
1002388b:	push   0x10073924
10023890:	lea    eax,[esp+0xa0]
10023897:	jmp    0x10022fe2
1002389c:	push   DWORD PTR [esp+0x24]
100238a0:	call   0x10041d92
100238a5:	pop    ecx
100238a6:	push   0x0
100238a8:	push   0x1
100238aa:	lea    ecx,[esp+0xcc]
100238b1:	call   0x100012f9
100238b6:	mov    BYTE PTR [esp+0xf0],0x1
100238be:	mov    eax,DWORD PTR [esp+0x14]
100238c2:	test   eax,eax
100238c4:	je     0x100238cc
100238c6:	mov    ecx,DWORD PTR [eax]
100238c8:	push   eax
100238c9:	call   DWORD PTR [ecx+0x8]
100238cc:	call   DWORD PTR ds:0x10065118
100238d2:	sub    eax,DWORD PTR [esp+0x20]
100238d6:	push   eax
100238d7:	call   0x1000207c
100238dc:	mov    esi,DWORD PTR [esp+0x1c]
100238e0:	mov    edi,DWORD PTR [esp+0x2c]
100238e4:	pop    ecx
100238e5:	mov    DWORD PTR [edi],esi
100238e7:	mov    eax,DWORD PTR [esi]
100238e9:	push   esi
100238ea:	call   DWORD PTR [eax+0x4]
100238ed:	or     DWORD PTR [esp+0xf0],0xffffffff
100238f5:	mov    eax,DWORD PTR [esi]
100238f7:	push   esi
100238f8:	call   DWORD PTR [eax+0x8]
100238fb:	mov    eax,edi
100238fd:	mov    ecx,DWORD PTR [esp+0xe8]
10023904:	mov    DWORD PTR fs:0x0,ecx
1002390b:	pop    ecx
1002390c:	pop    edi
1002390d:	pop    esi
1002390e:	pop    ebx
1002390f:	mov    ecx,DWORD PTR [esp+0xd0]
10023916:	xor    ecx,esp
10023918:	call   0x10041d97
1002391d:	mov    esp,ebp
1002391f:	pop    ebp
10023920:	ret    0x8
10023923:	push   0x0
10023925:	mov    eax,0x100621c0
1002392a:	call   0x10058845
1002392f:	lea    eax,[ebp+0xb]
10023932:	push   eax
10023933:	call   0x100375f0
10023938:	xor    eax,eax
1002393a:	push   eax
1002393b:	push   eax
1002393c:	mov    DWORD PTR [ebp-0x4],eax
1002393f:	call   DWORD PTR ds:0x1006541c
10023945:	push   DWORD PTR [ebp+0x8]
10023948:	call   0x10022535
1002394d:	call   DWORD PTR ds:0x10065404
10023953:	call   0x10037610
10023958:	xor    eax,eax
1002395a:	call   0x1005891d
1002395f:	ret    0x4
10023962:	push   0x10
10023964:	mov    eax,0x1005e770
10023969:	call   0x100588e4
1002396e:	mov    eax,DWORD PTR [ebp+0xc]
10023971:	xor    ebx,ebx
10023973:	cmp    eax,ebx
10023975:	jne    0x10023981
10023977:	mov    eax,0x80004003
1002397c:	jmp    0x10023a93
10023981:	push   0x1c
10023983:	mov    DWORD PTR [eax],ebx
10023985:	mov    DWORD PTR [ebp-0x18],ebx
10023988:	mov    DWORD PTR [ebp-0x4],ebx
1002398b:	call   0x1004239e
10023990:	cmp    eax,ebx
10023992:	pop    ecx
10023993:	je     0x100239a0
10023995:	mov    esi,eax
10023997:	call   0x10023fe3
1002399c:	mov    edi,eax
1002399e:	jmp    0x100239a2
100239a0:	xor    edi,edi
100239a2:	or     DWORD PTR [ebp-0x4],0xffffffff
100239a6:	jmp    0x100239b3
100239a8:	mov    eax,0x100239ae
100239ad:	ret    
100239ae:	mov    edi,DWORD PTR [ebp-0x18]
100239b1:	xor    ebx,ebx
100239b3:	cmp    edi,ebx
100239b5:	jne    0x100239c1
100239b7:	mov    eax,0x8007000e
100239bc:	jmp    0x10023a93
100239c1:	xor    esi,esi
100239c3:	mov    DWORD PTR [ebp-0x18],esi
100239c6:	push   ebx
100239c7:	lea    eax,[ebp-0x1c]
100239ca:	push   0x4
100239cc:	mov    DWORD PTR [ebp-0x4],0x2
100239d3:	push   eax
100239d4:	mov    DWORD PTR [ebp-0x1c],ebx
100239d7:	call   0x10013fd8
100239dc:	add    esp,0xc
100239df:	cmp    eax,ebx
100239e1:	jl     0x10023a93
100239e7:	mov    ebx,DWORD PTR [ebp-0x1c]
100239ea:	cmp    ebx,0x400
100239f0:	ja     0x10023a0b
100239f2:	push   ebx
100239f3:	call   0x100066d7
100239f8:	test   al,al
100239fa:	pop    ecx
100239fb:	je     0x10023a0b
100239fd:	mov    eax,ebx
100239ff:	call   0x10049010
10023a04:	mov    DWORD PTR [ebp-0x10],esp
10023a07:	mov    eax,esp
10023a09:	jmp    0x10023a17
10023a0b:	push   ebx
10023a0c:	lea    esi,[ebp-0x18]
10023a0f:	call   0x10007103
10023a14:	mov    esi,DWORD PTR [ebp-0x18]
10023a17:	test   eax,eax
10023a19:	jne    0x10023a37
10023a1b:	mov    eax,DWORD PTR [edi]
10023a1d:	push   0x1
10023a1f:	mov    ecx,edi
10023a21:	call   DWORD PTR [eax+0x1c]
10023a24:	jmp    0x10023a31
10023a26:	mov    eax,esi
10023a28:	mov    esi,DWORD PTR [esi]
10023a2a:	push   eax
10023a2b:	call   0x10042408
10023a30:	pop    ecx
10023a31:	test   esi,esi
10023a33:	jne    0x10023a26
10023a35:	jmp    0x100239b7
10023a37:	push   0x3
10023a39:	push   DWORD PTR [ebp+0x8]
10023a3c:	push   eax
10023a3d:	push   eax
10023a3e:	push   edi
10023a3f:	call   0x1002444e
10023a44:	mov    ebx,eax
10023a46:	test   ebx,ebx
10023a48:	mov    eax,DWORD PTR [edi]
10023a4a:	jge    0x10023a66
10023a4c:	push   0x1
10023a4e:	mov    ecx,edi
10023a50:	call   DWORD PTR [eax+0x1c]
10023a53:	jmp    0x10023a60
10023a55:	mov    eax,esi
10023a57:	mov    esi,DWORD PTR [esi]
10023a59:	push   eax
10023a5a:	call   0x10042408
10023a5f:	pop    ecx
10023a60:	test   esi,esi
10023a62:	jne    0x10023a55
10023a64:	jmp    0x10023a91
10023a66:	push   DWORD PTR [ebp+0xc]
10023a69:	push   0x1006f6f8
10023a6e:	push   edi
10023a6f:	call   DWORD PTR [eax]
10023a71:	mov    ebx,eax
10023a73:	test   ebx,ebx
10023a75:	jge    0x10023a8d
10023a77:	mov    eax,DWORD PTR [edi]
10023a79:	push   0x1
10023a7b:	mov    ecx,edi
10023a7d:	call   DWORD PTR [eax+0x1c]
10023a80:	jmp    0x10023a8d
10023a82:	mov    eax,esi
10023a84:	mov    esi,DWORD PTR [esi]
10023a86:	push   eax
10023a87:	call   0x10042408
10023a8c:	pop    ecx
10023a8d:	test   esi,esi
10023a8f:	jne    0x10023a82
10023a91:	mov    eax,ebx
10023a93:	lea    esp,[ebp-0x2c]
10023a96:	call   0x10058940
10023a9b:	ret    0x8
10023a9e:	push   ecx
10023a9f:	mov    eax,ds:0x1007d030
10023aa4:	xor    eax,esp
10023aa6:	mov    DWORD PTR [esp],eax
10023aa9:	mov    eax,DWORD PTR [esp+0x10]
10023aad:	test   eax,eax
10023aaf:	jne    0x10023ab8
10023ab1:	mov    eax,0x80004003
10023ab6:	jmp    0x10023ac0
10023ab8:	and    DWORD PTR [eax],0x0
10023abb:	mov    eax,0x80040200
10023ac0:	mov    ecx,DWORD PTR [esp]
10023ac3:	xor    ecx,esp
10023ac5:	call   0x10041d97
10023aca:	pop    ecx
10023acb:	ret    0xc
10023ace:	push   0x4
10023ad0:	mov    eax,0x1005f903
10023ad5:	call   0x10058845
10023ada:	mov    esi,ecx
10023adc:	mov    DWORD PTR [ebp-0x10],esi
10023adf:	mov    eax,esi
10023ae1:	mov    DWORD PTR [ebp-0x4],0x2
10023ae8:	call   0x10020935
10023aed:	lea    eax,[esi+0x10]
10023af0:	mov    BYTE PTR [ebp-0x4],0x1
10023af4:	call   0x10024065
10023af9:	mov    BYTE PTR [ebp-0x4],0x0
10023afd:	mov    eax,DWORD PTR [esi+0xc]
10023b00:	test   eax,eax
10023b02:	je     0x10023b0a
10023b04:	mov    ecx,DWORD PTR [eax]
10023b06:	push   eax
10023b07:	call   DWORD PTR [ecx+0x8]
10023b0a:	or     DWORD PTR [ebp-0x4],0xffffffff
10023b0e:	mov    esi,DWORD PTR [esi+0x8]
10023b11:	test   esi,esi
10023b13:	je     0x10023b1b
10023b15:	mov    eax,DWORD PTR [esi]
10023b17:	push   esi
10023b18:	call   DWORD PTR [eax+0x8]
10023b1b:	call   0x1005891d
10023b20:	ret    
10023b21:	push   0x34
10023b23:	mov    eax,0x100609a0
10023b28:	call   0x100588ae
10023b2d:	mov    eax,DWORD PTR [ebp+0x8]
10023b30:	push   eax
10023b31:	xor    ebx,ebx
10023b33:	lea    eax,[ebp-0x2c]
10023b36:	mov    edi,ecx
10023b38:	mov    DWORD PTR [ebp-0x30],ebx
10023b3b:	call   0x100207c3
10023b40:	lea    eax,[ebp-0x2c]
10023b43:	push   eax
10023b44:	lea    eax,[ebp-0x38]
10023b47:	add    edi,0x10
10023b4a:	push   eax
10023b4b:	mov    DWORD PTR [ebp-0x4],ebx
10023b4e:	call   0x10020df2
10023b53:	cmp    DWORD PTR [ebp-0x38],ebx
10023b56:	mov    esi,DWORD PTR [edi+0x4]
10023b59:	je     0x10023b60
10023b5b:	cmp    DWORD PTR [ebp-0x38],edi
10023b5e:	je     0x10023b65
10023b60:	call   0x100422b0
10023b65:	mov    eax,DWORD PTR [ebp-0x34]
10023b68:	cmp    eax,esi
10023b6a:	je     0x10023b80
10023b6c:	add    eax,0xc
10023b6f:	lea    ebx,[ebp-0x2c]
10023b72:	call   0x1001ec09
10023b77:	test   al,al
10023b79:	jne    0x10023b80
10023b7b:	lea    eax,[ebp-0x38]
10023b7e:	jmp    0x10023b8c
10023b80:	mov    eax,DWORD PTR [edi+0x4]
10023b83:	mov    DWORD PTR [ebp-0x3c],eax
10023b86:	mov    DWORD PTR [ebp-0x40],edi
10023b89:	lea    eax,[ebp-0x40]
10023b8c:	mov    esi,DWORD PTR [eax]
10023b8e:	test   esi,esi
10023b90:	mov    ebx,DWORD PTR [eax+0x4]
10023b93:	mov    eax,DWORD PTR [edi+0x4]
10023b96:	mov    DWORD PTR [ebp-0x3c],eax
10023b99:	je     0x10023b9f
10023b9b:	cmp    esi,edi
10023b9d:	je     0x10023ba4
10023b9f:	call   0x100422b0
10023ba4:	cmp    ebx,DWORD PTR [ebp-0x3c]
10023ba7:	je     0x10023bc2
10023ba9:	test   esi,esi
10023bab:	jne    0x10023bb2
10023bad:	call   0x100422b0
10023bb2:	cmp    ebx,DWORD PTR [esi+0x4]
10023bb5:	jne    0x10023bbc
10023bb7:	call   0x100422b0
10023bbc:	mov    eax,DWORD PTR [ebx+0x28]
10023bbf:	mov    DWORD PTR [ebp-0x30],eax
10023bc2:	push   0x1
10023bc4:	xor    ebx,ebx
10023bc6:	lea    esi,[ebp-0x2c]
10023bc9:	call   0x10004b54
10023bce:	mov    eax,DWORD PTR [ebp-0x30]
10023bd1:	call   0x10058931
10023bd6:	ret    0x4
10023bd9:	jmp    DWORD PTR ds:0x1006531c
10023bdf:	mov    eax,DWORD PTR [esp+0x8]
10023be3:	mov    DWORD PTR [eax],0x9
10023be9:	xor    eax,eax
10023beb:	ret    0x8
10023bee:	push   ebp
10023bef:	mov    ebp,esp
10023bf1:	push   ecx
10023bf2:	mov    ecx,DWORD PTR [ebp+0x10]
10023bf5:	push   edi
10023bf6:	mov    edi,ecx
10023bf8:	and    edi,0x2
10023bfb:	je     0x10023c11
10023bfd:	mov    eax,DWORD PTR [ebp+0x18]
10023c00:	test   eax,eax
10023c02:	jne    0x10023c0e
10023c04:	mov    eax,0x80070057
10023c09:	jmp    0x10023c97
10023c0e:	and    DWORD PTR [eax],0x0
10023c11:	mov    DWORD PTR [ebp-0x4],ecx
10023c14:	and    DWORD PTR [ebp-0x4],0x1
10023c18:	je     0x10023c24
10023c1a:	mov    eax,DWORD PTR [ebp+0x14]
10023c1d:	test   eax,eax
10023c1f:	je     0x10023c04
10023c21:	and    DWORD PTR [eax],0x0
10023c24:	mov    ecx,DWORD PTR [ebp+0x8]
10023c27:	mov    eax,DWORD PTR [ecx]
10023c29:	push   esi
10023c2a:	push   DWORD PTR [ebp+0xc]
10023c2d:	call   DWORD PTR [eax+0x30]
10023c30:	mov    esi,eax
10023c32:	test   esi,esi
10023c34:	jne    0x10023c3d
10023c36:	mov    eax,0x8002802b
10023c3b:	jmp    0x10023c96
10023c3d:	test   edi,edi
10023c3f:	je     0x10023c83
10023c41:	mov    eax,DWORD PTR [esi]
10023c43:	and    DWORD PTR [ebp+0x10],0x0
10023c47:	lea    ecx,[ebp+0x10]
10023c4a:	push   ecx
10023c4b:	push   0x1006a688
10023c50:	push   esi
10023c51:	call   DWORD PTR [eax]
10023c53:	mov    edi,eax
10023c55:	test   edi,edi
10023c57:	jl     0x10023c6b
10023c59:	mov    eax,DWORD PTR [ebp+0x10]
10023c5c:	test   eax,eax
10023c5e:	je     0x10023c78
10023c60:	push   DWORD PTR [ebp+0x18]
10023c63:	mov    ecx,DWORD PTR [eax]
10023c65:	push   eax
10023c66:	call   DWORD PTR [ecx+0xc]
10023c69:	mov    edi,eax
10023c6b:	mov    eax,DWORD PTR [ebp+0x10]
10023c6e:	test   eax,eax
10023c70:	je     0x10023c78
10023c72:	mov    ecx,DWORD PTR [eax]
10023c74:	push   eax
10023c75:	call   DWORD PTR [ecx+0x8]
10023c78:	test   edi,edi
10023c7a:	jge    0x10023c83
10023c7c:	mov    eax,0x80004005
10023c81:	jmp    0x10023c96
10023c83:	cmp    DWORD PTR [ebp-0x4],0x0
10023c87:	je     0x10023c94
10023c89:	mov    eax,DWORD PTR [ebp+0x14]
10023c8c:	mov    DWORD PTR [eax],esi
10023c8e:	mov    eax,DWORD PTR [esi]
10023c90:	push   esi
10023c91:	call   DWORD PTR [eax+0x4]
10023c94:	xor    eax,eax
10023c96:	pop    esi
10023c97:	pop    edi
10023c98:	leave  
10023c99:	ret    0x14
10023c9c:	xor    eax,eax
10023c9e:	ret    0xc
10023ca1:	xor    eax,eax
10023ca3:	ret    0x4
10023ca6:	mov    ecx,DWORD PTR [esp+0x4]
10023caa:	lea    eax,[ecx-0x4]
10023cad:	neg    ecx
10023caf:	sbb    ecx,ecx
10023cb1:	and    ecx,eax
10023cb3:	mov    eax,DWORD PTR [ecx]
10023cb5:	call   DWORD PTR [eax+0x34]
10023cb8:	mov    ecx,DWORD PTR [esp+0x8]
10023cbc:	mov    DWORD PTR [ecx],eax
10023cbe:	xor    eax,eax
10023cc0:	ret    0x8
10023cc3:	push   edi
10023cc4:	mov    edi,DWORD PTR [esp+0x14]
10023cc8:	mov    ecx,0x1007e96c
10023ccd:	call   0x10010198
10023cd2:	pop    edi
10023cd3:	ret    0x10
10023cd6:	push   DWORD PTR [esp+0x18]
10023cda:	mov    eax,0x1007e96c
10023cdf:	push   DWORD PTR [esp+0x14]
10023ce3:	push   DWORD PTR [esp+0x14]
10023ce7:	call   0x100101c6
10023cec:	ret    0x18
10023cef:	push   ebp
10023cf0:	mov    ebp,esp
10023cf2:	push   DWORD PTR [ebp+0x28]
10023cf5:	mov    eax,0x1007e96c
10023cfa:	push   DWORD PTR [ebp+0x24]
10023cfd:	push   DWORD PTR [ebp+0x20]
10023d00:	push   DWORD PTR [ebp+0x1c]
10023d03:	push   DWORD PTR [ebp+0x18]
10023d06:	push   DWORD PTR [ebp+0xc]
10023d09:	push   DWORD PTR [ebp+0x8]
10023d0c:	call   0x10010269
10023d11:	pop    ebp
10023d12:	ret    0x24
10023d15:	push   0x4
10023d17:	mov    eax,0x100611ac
10023d1c:	call   0x10058845
10023d21:	mov    eax,DWORD PTR [ebp+0x8]
10023d24:	call   0x10004170
10023d29:	push   0x1006bb18
10023d2e:	lea    ecx,[ebp-0x10]
10023d31:	push   ecx
10023d32:	mov    ecx,eax
10023d34:	call   0x1000661f
10023d39:	and    DWORD PTR [ebp-0x4],0x0
10023d3d:	push   DWORD PTR [ebp-0x10]
10023d40:	push   DWORD PTR [ebp+0x8]
10023d43:	call   0x1002409a
10023d48:	test   eax,eax
10023d4a:	mov    eax,DWORD PTR [ebp-0x10]
10023d4d:	setne  bl
10023d50:	add    eax,0xfffffff0
10023d53:	call   0x1000207d
10023d58:	mov    al,bl
10023d5a:	call   0x1005891d
10023d5f:	ret    
10023d60:	push   edi
10023d61:	mov    edi,DWORD PTR [esp+0x14]
10023d65:	mov    ecx,0x1007e988
10023d6a:	call   0x10010198
10023d6f:	pop    edi
10023d70:	ret    0x10
10023d73:	push   DWORD PTR [esp+0x18]
10023d77:	mov    eax,0x1007e988
10023d7c:	push   DWORD PTR [esp+0x14]
10023d80:	push   DWORD PTR [esp+0x14]
10023d84:	call   0x100101c6
10023d89:	ret    0x18
10023d8c:	push   ebp
10023d8d:	mov    ebp,esp
10023d8f:	push   DWORD PTR [ebp+0x28]
10023d92:	mov    eax,0x1007e988
10023d97:	push   DWORD PTR [ebp+0x24]
10023d9a:	push   DWORD PTR [ebp+0x20]
10023d9d:	push   DWORD PTR [ebp+0x1c]
10023da0:	push   DWORD PTR [ebp+0x18]
10023da3:	push   DWORD PTR [ebp+0xc]
10023da6:	push   DWORD PTR [ebp+0x8]
10023da9:	call   0x10010269
10023dae:	pop    ebp
10023daf:	ret    0x24
10023db2:	push   edi
10023db3:	mov    edi,DWORD PTR [esp+0x14]
10023db7:	mov    ecx,0x1007e9a4
10023dbc:	call   0x10010198
10023dc1:	pop    edi
10023dc2:	ret    0x10
10023dc5:	push   DWORD PTR [esp+0x18]
10023dc9:	mov    eax,0x1007e9a4
10023dce:	push   DWORD PTR [esp+0x14]
10023dd2:	push   DWORD PTR [esp+0x14]
10023dd6:	call   0x100101c6
10023ddb:	ret    0x18
10023dde:	push   ebp
10023ddf:	mov    ebp,esp
10023de1:	push   DWORD PTR [ebp+0x28]
10023de4:	mov    eax,0x1007e9a4
10023de9:	push   DWORD PTR [ebp+0x24]
10023dec:	push   DWORD PTR [ebp+0x20]
10023def:	push   DWORD PTR [ebp+0x1c]
10023df2:	push   DWORD PTR [ebp+0x18]
10023df5:	push   DWORD PTR [ebp+0xc]
10023df8:	push   DWORD PTR [ebp+0x8]
10023dfb:	call   0x10010269
10023e00:	pop    ebp
10023e01:	ret    0x24
10023e04:	push   esi
10023e05:	mov    esi,DWORD PTR [eax]
10023e07:	test   esi,esi
10023e09:	je     0x10023e1e
10023e0b:	mov    eax,DWORD PTR [esi]
10023e0d:	test   eax,eax
10023e0f:	je     0x10023e17
10023e11:	mov    ecx,DWORD PTR [eax]
10023e13:	push   eax
10023e14:	call   DWORD PTR [ecx+0x8]
10023e17:	push   esi
10023e18:	call   0x10041d92
10023e1d:	pop    ecx
10023e1e:	pop    esi
10023e1f:	ret    
10023e20:	push   esi
10023e21:	mov    esi,ecx
10023e23:	mov    DWORD PTR [esi],0x100703a8
10023e29:	mov    DWORD PTR [esi+0x4],0xc0000001
10023e30:	mov    ecx,DWORD PTR ds:0x1007fbe4
10023e36:	mov    eax,DWORD PTR [ecx]
10023e38:	call   DWORD PTR [eax+0x8]
10023e3b:	mov    esi,DWORD PTR [esi+0xc]
10023e3e:	test   esi,esi
10023e40:	je     0x10023e48
10023e42:	mov    eax,DWORD PTR [esi]
10023e44:	push   esi
10023e45:	call   DWORD PTR [eax+0x8]
10023e48:	pop    esi
10023e49:	ret    
10023e4a:	mov    ecx,DWORD PTR [esp+0x4]
10023e4e:	dec    DWORD PTR [ecx+0x4]
10023e51:	push   esi
10023e52:	mov    esi,DWORD PTR [ecx+0x4]
10023e55:	jne    0x10023e62
10023e57:	test   ecx,ecx
10023e59:	je     0x10023e62
10023e5b:	mov    eax,DWORD PTR [ecx]
10023e5d:	push   0x1
10023e5f:	call   DWORD PTR [eax+0x38]
10023e62:	mov    eax,esi
10023e64:	pop    esi
10023e65:	ret    0x4
10023e68:	push   ebx
10023e69:	push   DWORD PTR [esp+0xc]
10023e6d:	mov    ebx,DWORD PTR [esp+0x14]
10023e71:	push   DWORD PTR [esp+0xc]
10023e75:	mov    eax,0x1006f728
10023e7a:	call   0x10010077
10023e7f:	pop    ebx
10023e80:	ret    0xc
10023e83:	push   esi
10023e84:	mov    esi,ecx
10023e86:	mov    DWORD PTR [esi],0x100703e8
10023e8c:	mov    DWORD PTR [esi+0x4],0xc0000001
10023e93:	mov    ecx,DWORD PTR ds:0x1007fbe4
10023e99:	mov    eax,DWORD PTR [ecx]
10023e9b:	call   DWORD PTR [eax+0x8]
10023e9e:	call   0x10023fa3
10023ea3:	pop    esi
10023ea4:	ret    
10023ea5:	mov    ecx,DWORD PTR [esp+0x4]
10023ea9:	dec    DWORD PTR [ecx+0x4]
10023eac:	push   esi
10023ead:	mov    esi,DWORD PTR [ecx+0x4]
10023eb0:	jne    0x10023ebd
10023eb2:	test   ecx,ecx
10023eb4:	je     0x10023ebd
10023eb6:	mov    eax,DWORD PTR [ecx]
10023eb8:	push   0x1
10023eba:	call   DWORD PTR [eax+0x48]
10023ebd:	mov    eax,esi
10023ebf:	pop    esi
10023ec0:	ret    0x4
10023ec3:	push   ebx
10023ec4:	push   DWORD PTR [esp+0xc]
10023ec8:	mov    ebx,DWORD PTR [esp+0x14]
10023ecc:	push   DWORD PTR [esp+0xc]
10023ed0:	mov    eax,0x1006f74c
10023ed5:	call   0x10010077
10023eda:	pop    ebx
10023edb:	ret    0xc
10023ede:	push   esi
10023edf:	lea    esi,[ecx+0x8]
10023ee2:	mov    DWORD PTR [ecx],0x100702e8
10023ee8:	mov    DWORD PTR [ecx+0x4],0x100702f8
10023eef:	mov    DWORD PTR [esi],0x1007030c
10023ef5:	mov    DWORD PTR [ecx+0xc],0x10070344
10023efc:	mov    DWORD PTR [ecx+0x24],0x10070358
10023f03:	mov    DWORD PTR [ecx+0x28],0xc0000001
10023f0a:	mov    ecx,DWORD PTR ds:0x1007fbe4
10023f10:	mov    eax,DWORD PTR [ecx]
10023f12:	call   DWORD PTR [eax+0x8]
10023f15:	mov    ecx,esi
10023f17:	pop    esi
10023f18:	jmp    0x10023ace
10023f1d:	mov    eax,DWORD PTR [esp+0x4]
10023f21:	inc    DWORD PTR [eax+0x28]
10023f24:	mov    eax,DWORD PTR [eax+0x28]
10023f27:	ret    0x4
10023f2a:	mov    eax,DWORD PTR [esp+0x4]
10023f2e:	dec    DWORD PTR [eax+0x28]
10023f31:	push   esi
10023f32:	mov    esi,DWORD PTR [eax+0x28]
10023f35:	jne    0x10023f45
10023f37:	test   eax,eax
10023f39:	je     0x10023f45
10023f3b:	lea    ecx,[eax+0x8]
10023f3e:	mov    eax,DWORD PTR [ecx]
10023f40:	push   0x1
10023f42:	call   DWORD PTR [eax+0x2c]
10023f45:	mov    eax,esi
10023f47:	pop    esi
10023f48:	ret    0x4
10023f4b:	push   ebx
10023f4c:	push   DWORD PTR [esp+0xc]
10023f50:	mov    ebx,DWORD PTR [esp+0x14]
10023f54:	push   DWORD PTR [esp+0xc]
10023f58:	mov    eax,0x1006f1e8
10023f5d:	call   0x10010077
10023f62:	pop    ebx
10023f63:	ret    0xc
10023f66:	jmp    0x10024065
10023f6b:	push   esi
10023f6c:	mov    esi,ecx
10023f6e:	call   0x10023e20
10023f73:	test   BYTE PTR [esp+0x8],0x1
10023f78:	je     0x10023f81
10023f7a:	push   esi
10023f7b:	call   0x10041d92
10023f80:	pop    ecx
10023f81:	mov    eax,esi
10023f83:	pop    esi
10023f84:	ret    0x4
10023f87:	push   esi
10023f88:	mov    esi,ecx
10023f8a:	call   0x10023e83
10023f8f:	test   BYTE PTR [esp+0x8],0x1
10023f94:	je     0x10023f9d
10023f96:	push   esi
10023f97:	call   0x10041d92
10023f9c:	pop    ecx
10023f9d:	mov    eax,esi
10023f9f:	pop    esi
10023fa0:	ret    0x4
10023fa3:	mov    eax,DWORD PTR [esi+0x38]
10023fa6:	test   eax,eax
10023fa8:	je     0x10023fb0
10023faa:	mov    ecx,DWORD PTR [eax]
10023fac:	push   eax
10023fad:	call   DWORD PTR [ecx+0x8]
10023fb0:	push   edi
10023fb1:	lea    edi,[esi+0x30]
10023fb4:	call   0x1000256d
10023fb9:	push   0x0
10023fbb:	push   0x1
10023fbd:	lea    ecx,[esi+0x8]
10023fc0:	call   0x100012f9
10023fc5:	pop    edi
10023fc6:	ret    
10023fc7:	push   esi
10023fc8:	mov    esi,ecx
10023fca:	call   0x10023ede
10023fcf:	test   BYTE PTR [esp+0x8],0x1
10023fd4:	je     0x10023fdd
10023fd6:	push   esi
10023fd7:	call   0x10041d92
10023fdc:	pop    ecx
10023fdd:	mov    eax,esi
10023fdf:	pop    esi
10023fe0:	ret    0x4
10023fe3:	xor    eax,eax
10023fe5:	mov    DWORD PTR [esi+0x4],eax
10023fe8:	mov    DWORD PTR [esi+0x10],eax
10023feb:	mov    DWORD PTR [esi+0xc],eax
10023fee:	mov    DWORD PTR [esi+0x8],eax
10023ff1:	mov    DWORD PTR [esi+0x14],eax
10023ff4:	mov    DWORD PTR [esi+0x18],eax
10023ff7:	mov    DWORD PTR [esi],0x10070434
10023ffd:	mov    ecx,DWORD PTR ds:0x1007fbe4
10024003:	mov    eax,DWORD PTR [ecx]
10024005:	call   DWORD PTR [eax+0x4]
10024008:	mov    eax,esi
1002400a:	ret    
1002400b:	push   esi
1002400c:	mov    esi,ecx
1002400e:	mov    DWORD PTR [esi],0x10070434
10024014:	mov    DWORD PTR [esi+0x18],0xc0000001
1002401b:	mov    ecx,DWORD PTR ds:0x1007fbe4
10024021:	mov    eax,DWORD PTR [ecx]
10024023:	call   DWORD PTR [eax+0x8]
10024026:	mov    ecx,esi
10024028:	pop    esi
10024029:	jmp    0x10021c8b
1002402e:	push   ebx
1002402f:	push   DWORD PTR [esp+0xc]
10024033:	mov    ebx,DWORD PTR [esp+0x14]
10024037:	push   DWORD PTR [esp+0xc]
1002403b:	mov    eax,0x1007020c
10024040:	call   0x10010077
10024045:	pop    ebx
10024046:	ret    0xc
10024049:	push   esi
1002404a:	mov    esi,ecx
1002404c:	call   0x1002400b
10024051:	test   BYTE PTR [esp+0x8],0x1
10024056:	je     0x1002405f
10024058:	push   esi
10024059:	call   0x10041d92
1002405e:	pop    ecx
1002405f:	mov    eax,esi
10024061:	pop    esi
10024062:	ret    0x4
10024065:	push   ebp
10024066:	mov    ebp,esp
10024068:	and    esp,0xfffffff8
1002406b:	push   ecx
1002406c:	push   ecx
1002406d:	push   ebx
1002406e:	push   edi
1002406f:	mov    edi,eax
10024071:	mov    eax,DWORD PTR [edi+0x4]
10024074:	mov    ecx,DWORD PTR [eax]
10024076:	push   eax
10024077:	push   edi
10024078:	push   ecx
10024079:	push   edi
1002407a:	lea    ebx,[esp+0x18]
1002407e:	call   0x10020d46
10024083:	push   DWORD PTR [edi+0x4]
10024086:	call   0x10041d92
1002408b:	and    DWORD PTR [edi+0x4],0x0
1002408f:	and    DWORD PTR [edi+0x8],0x0
10024093:	pop    ecx
10024094:	pop    edi
10024095:	pop    ebx
10024096:	mov    esp,ebp
10024098:	pop    ebp
10024099:	ret    
1002409a:	cmp    DWORD PTR [esp+0x8],0x0
1002409f:	jne    0x100240ab
100240a1:	push   0x80004005
100240a6:	call   0x10001f41
100240ab:	mov    eax,DWORD PTR [esp+0x4]
100240af:	mov    eax,DWORD PTR [eax]
100240b1:	push   DWORD PTR [esp+0x8]
100240b5:	push   eax
100240b6:	call   0x10045444
100240bb:	pop    ecx
100240bc:	pop    ecx
100240bd:	ret    0x8
100240c0:	push   0x30
100240c2:	call   0x1004239e
100240c7:	xor    edx,edx
100240c9:	cmp    eax,edx
100240cb:	pop    ecx
100240cc:	je     0x100240d0
100240ce:	mov    DWORD PTR [eax],edx
100240d0:	lea    ecx,[eax+0x4]
100240d3:	cmp    ecx,edx
100240d5:	je     0x100240d9
100240d7:	mov    DWORD PTR [ecx],edx
100240d9:	lea    ecx,[eax+0x8]
100240dc:	cmp    ecx,edx
100240de:	je     0x100240e2
100240e0:	mov    DWORD PTR [ecx],edx
100240e2:	mov    BYTE PTR [eax+0x2c],0x1
100240e6:	mov    BYTE PTR [eax+0x2d],dl
100240e9:	ret    
100240ea:	push   0xc
100240ec:	mov    eax,0x1006097d
100240f1:	call   0x10058878
100240f6:	mov    edi,DWORD PTR [ebp+0x8]
100240f9:	xor    ebx,ebx
100240fb:	cmp    edi,ebx
100240fd:	jne    0x10024106
100240ff:	mov    eax,0x80004003
10024104:	jmp    0x10024174
10024106:	push   0x2c
10024108:	mov    DWORD PTR [edi],ebx
1002410a:	mov    DWORD PTR [ebp-0x14],0x8007000e
10024111:	mov    DWORD PTR [ebp-0x18],ebx
10024114:	mov    DWORD PTR [ebp-0x4],ebx
10024117:	call   0x1004239e
1002411c:	mov    esi,eax
1002411e:	cmp    esi,ebx
10024120:	pop    ecx
10024121:	je     0x10024157
10024123:	call   0x100220d5
10024128:	mov    DWORD PTR [esi],0x100702e8
1002412e:	mov    DWORD PTR [esi+0x4],0x100702f8
10024135:	mov    DWORD PTR [esi+0x8],0x1007030c
1002413c:	mov    DWORD PTR [esi+0xc],0x10070344
10024143:	mov    DWORD PTR [esi+0x24],0x10070358
1002414a:	mov    ecx,DWORD PTR ds:0x1007fbe4
10024150:	mov    eax,DWORD PTR [ecx]
10024152:	call   DWORD PTR [eax+0x4]
10024155:	jmp    0x10024167
10024157:	xor    esi,esi
10024159:	jmp    0x10024167
1002415b:	mov    eax,0x10024161
10024160:	ret    
10024161:	mov    edi,DWORD PTR [ebp+0x8]
10024164:	mov    esi,DWORD PTR [ebp-0x18]
10024167:	test   esi,esi
10024169:	je     0x1002416f
1002416b:	and    DWORD PTR [ebp-0x14],0x0
1002416f:	mov    eax,DWORD PTR [ebp-0x14]
10024172:	mov    DWORD PTR [edi],esi
10024174:	call   0x1005891d
10024179:	ret    0x4
1002417c:	push   0xc
1002417e:	mov    eax,0x1005e74d
10024183:	call   0x10058878
10024188:	mov    ebx,DWORD PTR [ebp+0x8]
1002418b:	xor    edi,edi
1002418d:	cmp    ebx,edi
1002418f:	jne    0x10024198
10024191:	mov    eax,0x80004003
10024196:	jmp    0x100241f1
10024198:	push   0x10
1002419a:	mov    DWORD PTR [ebx],edi
1002419c:	mov    DWORD PTR [ebp-0x14],0x8007000e
100241a3:	mov    DWORD PTR [ebp-0x4],edi
100241a6:	call   0x1004239e
100241ab:	mov    esi,eax
100241ad:	cmp    esi,edi
100241af:	pop    ecx
100241b0:	je     0x100241ce
100241b2:	mov    DWORD PTR [esi+0x4],edi
100241b5:	mov    DWORD PTR [esi+0x8],edi
100241b8:	mov    DWORD PTR [esi+0xc],edi
100241bb:	mov    DWORD PTR [esi],0x100703a8
100241c1:	mov    ecx,DWORD PTR ds:0x1007fbe4
100241c7:	mov    eax,DWORD PTR [ecx]
100241c9:	call   DWORD PTR [eax+0x4]
100241cc:	jmp    0x100241df
100241ce:	xor    esi,esi
100241d0:	jmp    0x100241df
100241d2:	mov    eax,0x100241d8
100241d7:	ret    
100241d8:	mov    ebx,DWORD PTR [ebp+0x8]
100241db:	xor    edi,edi
100241dd:	mov    esi,edi
100241df:	cmp    esi,edi
100241e1:	je     0x100241ec
100241e3:	inc    DWORD PTR [esi+0x4]
100241e6:	dec    DWORD PTR [esi+0x4]
100241e9:	mov    DWORD PTR [ebp-0x14],edi
100241ec:	mov    eax,DWORD PTR [ebp-0x14]
100241ef:	mov    DWORD PTR [ebx],esi
100241f1:	call   0x1005891d
100241f6:	ret    0x4
100241f9:	push   0xc
100241fb:	mov    eax,0x1005eeb3
10024200:	call   0x10058878
10024205:	mov    eax,DWORD PTR [ebp+0x8]
10024208:	xor    ebx,ebx
1002420a:	cmp    eax,ebx
1002420c:	jne    0x10024215
1002420e:	mov    eax,0x80004003
10024213:	jmp    0x10024283
10024215:	push   0x3c
10024217:	mov    DWORD PTR [eax],ebx
10024219:	mov    DWORD PTR [ebp-0x14],0x8007000e
10024220:	mov    DWORD PTR [ebp-0x4],ebx
10024223:	call   0x1004239e
10024228:	mov    edi,eax
1002422a:	cmp    edi,ebx
1002422c:	pop    ecx
1002422d:	je     0x10024260
1002422f:	lea    esi,[edi+0x8]
10024232:	mov    DWORD PTR [edi+0x4],ebx
10024235:	call   0x10003ba8
1002423a:	or     DWORD PTR [edi+0x28],0xffffffff
1002423e:	mov    DWORD PTR [edi+0x24],ebx
10024241:	mov    BYTE PTR [edi+0x2c],bl
10024244:	mov    DWORD PTR [edi+0x30],ebx
10024247:	mov    DWORD PTR [edi+0x34],ebx
1002424a:	mov    DWORD PTR [edi+0x38],ebx
1002424d:	mov    DWORD PTR [edi],0x100703e8
10024253:	mov    ecx,DWORD PTR ds:0x1007fbe4
10024259:	mov    eax,DWORD PTR [ecx]
1002425b:	call   DWORD PTR [eax+0x4]
1002425e:	jmp    0x1002426e
10024260:	xor    edi,edi
10024262:	jmp    0x1002426e
10024264:	mov    eax,0x1002426a
10024269:	ret    
1002426a:	xor    ebx,ebx
1002426c:	mov    edi,ebx
1002426e:	cmp    edi,ebx
10024270:	je     0x1002427b
10024272:	inc    DWORD PTR [edi+0x4]
10024275:	dec    DWORD PTR [edi+0x4]
10024278:	mov    DWORD PTR [ebp-0x14],ebx
1002427b:	mov    eax,DWORD PTR [ebp+0x8]
1002427e:	mov    DWORD PTR [eax],edi
10024280:	mov    eax,DWORD PTR [ebp-0x14]
10024283:	call   0x1005891d
10024288:	ret    0x4
1002428b:	push   ebp
1002428c:	mov    ebp,esp
1002428e:	mov    edx,DWORD PTR [ebp+0x14]
10024291:	xor    ecx,ecx
10024293:	cmp    edx,ecx
10024295:	je     0x10024299
10024297:	mov    DWORD PTR [edx],ecx
10024299:	push   esi
1002429a:	push   edi
1002429b:	mov    edi,DWORD PTR [ebp+0xc]
1002429e:	cmp    edi,ecx
100242a0:	jne    0x100242ac
100242a2:	mov    eax,0x80070057
100242a7:	jmp    0x10024350
100242ac:	cmp    DWORD PTR [ebp+0x10],ecx
100242af:	push   ebx
100242b0:	je     0x1002434a
100242b6:	xor    ebx,ebx
100242b8:	inc    ebx
100242b9:	cmp    edi,ebx
100242bb:	je     0x100242c5
100242bd:	cmp    edx,ecx
100242bf:	je     0x1002434a
100242c5:	mov    esi,DWORD PTR [ebp+0x8]
100242c8:	cmp    DWORD PTR [esi+0x8],ecx
100242cb:	je     0x10024343
100242cd:	mov    eax,DWORD PTR [esi+0xc]
100242d0:	cmp    eax,ecx
100242d2:	je     0x10024343
100242d4:	mov    ecx,DWORD PTR [esi+0x10]
100242d7:	test   ecx,ecx
100242d9:	je     0x10024343
100242db:	and    DWORD PTR [ebp+0xc],0x0
100242df:	sub    eax,ecx
100242e1:	sar    eax,0x2
100242e4:	cmp    edi,eax
100242e6:	jbe    0x100242eb
100242e8:	mov    DWORD PTR [ebp+0xc],ebx
100242eb:	jb     0x100242ef
100242ed:	mov    edi,eax
100242ef:	test   edx,edx
100242f1:	je     0x100242f5
100242f3:	mov    DWORD PTR [edx],edi
100242f5:	mov    ebx,DWORD PTR [ebp+0x10]
100242f8:	jmp    0x10024313
100242fa:	mov    eax,DWORD PTR [esi+0x10]
100242fd:	mov    ecx,ebx
100242ff:	dec    edi
10024300:	call   0x10024546
10024305:	test   eax,eax
10024307:	mov    DWORD PTR [ebp+0x8],eax
1002430a:	jl     0x1002431c
1002430c:	add    ebx,0x4
1002430f:	add    DWORD PTR [esi+0x10],0x4
10024313:	test   edi,edi
10024315:	jne    0x100242fa
10024317:	mov    eax,DWORD PTR [ebp+0xc]
1002431a:	jmp    0x1002434f
1002431c:	mov    esi,DWORD PTR [ebp+0x10]
1002431f:	jmp    0x10024330
10024321:	mov    eax,DWORD PTR [esi]
10024323:	test   eax,eax
10024325:	je     0x1002432d
10024327:	mov    ecx,DWORD PTR [eax]
10024329:	push   eax
1002432a:	call   DWORD PTR [ecx+0x8]
1002432d:	add    esi,0x4
10024330:	cmp    esi,ebx
10024332:	jb     0x10024321
10024334:	mov    eax,DWORD PTR [ebp+0x14]
10024337:	test   eax,eax
10024339:	je     0x1002433e
1002433b:	and    DWORD PTR [eax],0x0
1002433e:	mov    eax,DWORD PTR [ebp+0x8]
10024341:	jmp    0x1002434f
10024343:	mov    eax,0x80004005
10024348:	jmp    0x1002434f
1002434a:	mov    eax,0x80004003
1002434f:	pop    ebx
10024350:	pop    edi
10024351:	pop    esi
10024352:	pop    ebp
10024353:	ret    0x10
10024356:	push   esi
10024357:	mov    esi,DWORD PTR [esp+0xc]
1002435b:	test   esi,esi
1002435d:	jne    0x10024366
1002435f:	mov    eax,0x80070057
10024364:	jmp    0x1002438a
10024366:	mov    ecx,DWORD PTR [esp+0x8]
1002436a:	mov    edx,DWORD PTR [ecx+0x10]
1002436d:	mov    eax,DWORD PTR [ecx+0xc]
10024370:	sub    eax,edx
10024372:	sar    eax,0x2
10024375:	cmp    esi,eax
10024377:	ja     0x1002437b
10024379:	mov    eax,esi
1002437b:	lea    edx,[edx+eax*4]
1002437e:	mov    DWORD PTR [ecx+0x10],edx
10024381:	xor    ecx,ecx
10024383:	cmp    esi,eax
10024385:	setne  cl
10024388:	mov    eax,ecx
1002438a:	pop    esi
1002438b:	ret    0x8
1002438e:	push   0x8
10024390:	mov    eax,0x1005eee7
10024395:	call   0x10058845
1002439a:	mov    eax,DWORD PTR [ebp+0xc]
1002439d:	xor    edi,edi
1002439f:	cmp    eax,edi
100243a1:	mov    DWORD PTR [ebp-0x10],edi
100243a4:	mov    ebx,0x80004003
100243a9:	je     0x10024444
100243af:	mov    DWORD PTR [eax],edi
100243b1:	lea    eax,[ebp-0x14]
100243b4:	push   eax
100243b5:	call   0x10024569
100243ba:	mov    ebx,eax
100243bc:	cmp    ebx,edi
100243be:	jl     0x10024444
100243c4:	mov    esi,DWORD PTR [ebp+0x8]
100243c7:	test   BYTE PTR [esi+0x14],0x2
100243cb:	je     0x100243e5
100243cd:	mov    eax,DWORD PTR [esi]
100243cf:	push   esi
100243d0:	mov    DWORD PTR [ebp+0x8],esi
100243d3:	call   DWORD PTR [eax+0x4]
100243d6:	mov    DWORD PTR [ebp-0x4],edi
100243d9:	lea    eax,[ebp+0x8]
100243dc:	mov    DWORD PTR [ebp-0x10],0x1
100243e3:	jmp    0x100243e8
100243e5:	lea    eax,[esi+0x4]
100243e8:	mov    eax,DWORD PTR [eax]
100243ea:	push   edi
100243eb:	mov    edi,DWORD PTR [ebp-0x14]
100243ee:	push   eax
100243ef:	push   DWORD PTR [esi+0xc]
100243f2:	push   DWORD PTR [esi+0x8]
100243f5:	push   edi
100243f6:	call   0x1002444e
100243fb:	or     DWORD PTR [ebp-0x4],0xffffffff
100243ff:	test   BYTE PTR [ebp-0x10],0x1
10024403:	mov    ebx,eax
10024405:	je     0x10024414
10024407:	mov    eax,DWORD PTR [ebp+0x8]
1002440a:	test   eax,eax
1002440c:	je     0x10024414
1002440e:	mov    ecx,DWORD PTR [eax]
10024410:	push   eax
10024411:	call   DWORD PTR [ecx+0x8]
10024414:	test   ebx,ebx
10024416:	jl     0x10024437
10024418:	mov    eax,DWORD PTR [esi+0x10]
1002441b:	mov    ebx,DWORD PTR [ebp+0xc]
1002441e:	push   0x1006f6f8
10024423:	mov    DWORD PTR [edi+0x10],eax
10024426:	push   edi
10024427:	mov    eax,0x1007020c
1002442c:	call   0x10010077
10024431:	mov    ebx,eax
10024433:	test   ebx,ebx
10024435:	jge    0x10024444
10024437:	test   edi,edi
10024439:	je     0x10024444
1002443b:	mov    eax,DWORD PTR [edi]
1002443d:	push   0x1
1002443f:	mov    ecx,edi
10024441:	call   DWORD PTR [eax+0x1c]
10024444:	mov    eax,ebx
10024446:	call   0x1005891d
1002444b:	ret    0x8
1002444e:	push   0x4
10024450:	mov    eax,0x1005e57c
10024455:	call   0x10058878
1002445a:	mov    esi,DWORD PTR [ebp+0x10]
1002445d:	mov    ebx,DWORD PTR [ebp+0x8]
10024460:	cmp    DWORD PTR [ebp+0x18],0x3
10024464:	jne    0x10024518
1002446a:	and    DWORD PTR [ebp-0x4],0x0
1002446e:	mov    eax,esi
10024470:	sub    eax,DWORD PTR [ebp+0xc]
10024473:	xor    ecx,ecx
10024475:	push   0x4
10024477:	sar    eax,0x2
1002447a:	pop    edx
1002447b:	mul    edx
1002447d:	seto   cl
10024480:	neg    ecx
10024482:	or     ecx,eax
10024484:	push   ecx
10024485:	call   0x10042609
1002448a:	or     DWORD PTR [ebp-0x4],0xffffffff
1002448e:	pop    ecx
1002448f:	mov    DWORD PTR [ebx+0x8],eax
10024492:	jmp    0x100244a0
10024494:	mov    eax,0x1002449a
10024499:	ret    
1002449a:	mov    ebx,DWORD PTR [ebp+0x8]
1002449d:	mov    esi,DWORD PTR [ebp+0x10]
100244a0:	mov    eax,DWORD PTR [ebx+0x8]
100244a3:	test   eax,eax
100244a5:	mov    DWORD PTR [ebx+0x10],eax
100244a8:	jne    0x100244b4
100244aa:	mov    eax,0x8007000e
100244af:	jmp    0x1002453e
100244b4:	mov    edi,DWORD PTR [ebp+0xc]
100244b7:	jmp    0x100244d1
100244b9:	mov    ecx,DWORD PTR [ebx+0x10]
100244bc:	mov    eax,edi
100244be:	call   0x10024546
100244c3:	test   eax,eax
100244c5:	mov    DWORD PTR [ebp+0x8],eax
100244c8:	jl     0x100244e6
100244ca:	add    DWORD PTR [ebx+0x10],0x4
100244ce:	add    edi,0x4
100244d1:	cmp    edi,esi
100244d3:	jne    0x100244b9
100244d5:	sub    esi,DWORD PTR [ebp+0xc]
100244d8:	mov    eax,DWORD PTR [ebx+0x8]
100244db:	sar    esi,0x2
100244de:	lea    eax,[eax+esi*4]
100244e1:	mov    DWORD PTR [ebx+0xc],eax
100244e4:	jmp    0x10024521
100244e6:	mov    esi,DWORD PTR [ebx+0x8]
100244e9:	jmp    0x100244fa
100244eb:	mov    eax,DWORD PTR [esi]
100244ed:	test   eax,eax
100244ef:	je     0x100244f7
100244f1:	mov    ecx,DWORD PTR [eax]
100244f3:	push   eax
100244f4:	call   DWORD PTR [ecx+0x8]
100244f7:	add    esi,0x4
100244fa:	cmp    esi,DWORD PTR [ebx+0x10]
100244fd:	jb     0x100244eb
100244ff:	push   DWORD PTR [ebx+0x8]
10024502:	call   0x100422c0
10024507:	xor    eax,eax
10024509:	mov    DWORD PTR [ebx+0x10],eax
1002450c:	mov    DWORD PTR [ebx+0xc],eax
1002450f:	mov    DWORD PTR [ebx+0x8],eax
10024512:	mov    eax,DWORD PTR [ebp+0x8]
10024515:	pop    ecx
10024516:	jmp    0x1002453e
10024518:	mov    eax,DWORD PTR [ebp+0xc]
1002451b:	mov    DWORD PTR [ebx+0x8],eax
1002451e:	mov    DWORD PTR [ebx+0xc],esi
10024521:	mov    edi,DWORD PTR [ebp+0x14]
10024524:	lea    esi,[ebx+0x4]
10024527:	cmp    DWORD PTR [esi],edi
10024529:	je     0x10024530
1002452b:	call   0x10007188
10024530:	mov    eax,DWORD PTR [ebx+0x8]
10024533:	mov    DWORD PTR [ebx+0x10],eax
10024536:	mov    eax,DWORD PTR [ebp+0x18]
10024539:	mov    DWORD PTR [ebx+0x14],eax
1002453c:	xor    eax,eax
1002453e:	call   0x1005891d
10024543:	ret    0x14
10024546:	test   ecx,ecx
10024548:	je     0x1002454e
1002454a:	test   eax,eax
1002454c:	jne    0x10024558
1002454e:	push   0x80004005
10024553:	call   0x10001f41
10024558:	mov    eax,DWORD PTR [eax]
1002455a:	test   eax,eax
1002455c:	mov    DWORD PTR [ecx],eax
1002455e:	je     0x10024566
10024560:	mov    ecx,DWORD PTR [eax]
10024562:	push   eax
10024563:	call   DWORD PTR [ecx+0x4]
10024566:	xor    eax,eax
10024568:	ret    
10024569:	push   0xc
1002456b:	mov    eax,0x1005e732
10024570:	call   0x10058878
10024575:	mov    edi,DWORD PTR [ebp+0x8]
10024578:	xor    esi,esi
1002457a:	cmp    edi,esi
1002457c:	jne    0x10024585
1002457e:	mov    eax,0x80004003
10024583:	jmp    0x100245c6
10024585:	push   0x1c
10024587:	mov    DWORD PTR [edi],esi
10024589:	mov    DWORD PTR [ebp-0x14],0x8007000e
10024590:	mov    DWORD PTR [ebp-0x18],esi
10024593:	mov    DWORD PTR [ebp-0x4],esi
10024596:	call   0x1004239e
1002459b:	cmp    eax,esi
1002459d:	pop    ecx
1002459e:	je     0x100245a9
100245a0:	mov    esi,eax
100245a2:	call   0x10023fe3
100245a7:	jmp    0x100245b9
100245a9:	xor    eax,eax
100245ab:	jmp    0x100245b9
100245ad:	mov    eax,0x100245b3
100245b2:	ret    
100245b3:	mov    edi,DWORD PTR [ebp+0x8]
100245b6:	mov    eax,DWORD PTR [ebp-0x18]
100245b9:	test   eax,eax
100245bb:	je     0x100245c1
100245bd:	and    DWORD PTR [ebp-0x14],0x0
100245c1:	mov    DWORD PTR [edi],eax
100245c3:	mov    eax,DWORD PTR [ebp-0x14]
100245c6:	call   0x1005891d
100245cb:	ret    0x4
100245ce:	sub    ecx,0x8
100245d1:	jmp    0x10023fc7
100245d6:	sub    DWORD PTR [esp+0x4],0x4
100245db:	jmp    0x10023f4b
100245e0:	sub    DWORD PTR [esp+0x4],0x24
100245e5:	jmp    0x10023f4b
100245ea:	sub    DWORD PTR [esp+0x4],0x8
100245ef:	jmp    0x10023f4b
100245f4:	sub    DWORD PTR [esp+0x4],0xc
100245f9:	jmp    0x10023f4b
100245fe:	sub    DWORD PTR [esp+0x4],0x4
10024603:	jmp    0x10023f2a
10024608:	sub    DWORD PTR [esp+0x4],0x24
1002460d:	jmp    0x10023f2a
10024612:	sub    DWORD PTR [esp+0x4],0x4
10024617:	jmp    0x10023f1d
1002461c:	sub    DWORD PTR [esp+0x4],0x24
10024621:	jmp    0x10023f1d
10024626:	sub    DWORD PTR [esp+0x4],0x8
1002462b:	jmp    0x10023f2a
10024630:	sub    DWORD PTR [esp+0x4],0x8
10024635:	jmp    0x10023f1d
1002463a:	sub    DWORD PTR [esp+0x4],0xc
1002463f:	jmp    0x10023f2a
10024644:	sub    DWORD PTR [esp+0x4],0xc
10024649:	jmp    0x10023f1d
1002464e:	sub    ecx,0x8
10024651:	jmp    0x100221d4
10024656:	push   0x0
10024658:	mov    eax,0x1005e8cc
1002465d:	call   0x10058845
10024662:	mov    esi,DWORD PTR [ebp+0x8]
10024665:	push   DWORD PTR [ebp+0xc]
10024668:	mov    ecx,esi
1002466a:	call   0x100011b0
1002466f:	push   DWORD PTR [ebp+0x10]
10024672:	and    DWORD PTR [ebp-0x4],0x0
10024676:	lea    ecx,[esi+0x1c]
10024679:	call   0x100011b0
1002467e:	push   DWORD PTR [ebp+0x14]
10024681:	lea    ecx,[esi+0x38]
10024684:	mov    BYTE PTR [ebp-0x4],0x1
10024688:	call   0x100011b0
1002468d:	mov    eax,DWORD PTR [ebp+0x18]
10024690:	mov    DWORD PTR [esi+0x58],eax
10024693:	mov    eax,DWORD PTR [ebp+0x1c]
10024696:	mov    DWORD PTR [esi+0x5c],eax
10024699:	mov    eax,DWORD PTR [ebp+0x20]
1002469c:	mov    DWORD PTR [esi+0x60],eax
1002469f:	mov    eax,DWORD PTR [ebp+0x24]
100246a2:	mov    DWORD PTR [esi+0x64],eax
100246a5:	mov    eax,esi
100246a7:	call   0x1005891d
100246ac:	ret    0x20
100246af:	push   ebp
100246b0:	mov    ebp,esp
100246b2:	push   ecx
100246b3:	push   ebx
100246b4:	mov    ebx,DWORD PTR ds:0x10065130
100246ba:	push   esi
100246bb:	xor    esi,esi
100246bd:	push   esi
100246be:	push   esi
100246bf:	mov    DWORD PTR [edi],0x100704c8
100246c5:	mov    DWORD PTR [edi+0x4],esi
100246c8:	push   esi
100246c9:	mov    DWORD PTR [edi+0x8],esi
100246cc:	push   esi
100246cd:	mov    DWORD PTR [edi+0x1c],eax
100246d0:	call   ebx
100246d2:	push   esi
100246d3:	push   esi
100246d4:	push   esi
100246d5:	push   esi
100246d6:	mov    DWORD PTR [ebp-0x4],eax
100246d9:	call   ebx
100246db:	push   DWORD PTR [ebp-0x4]
100246de:	lea    esi,[edi+0x4]
100246e1:	mov    ebx,eax
100246e3:	call   0x10004365
100246e8:	push   ebx
100246e9:	lea    esi,[edi+0x8]
100246ec:	call   0x10004365
100246f1:	pop    esi
100246f2:	mov    eax,edi
100246f4:	pop    ebx
100246f5:	leave  
100246f6:	ret    
100246f7:	push   esi
100246f8:	mov    esi,ecx
100246fa:	mov    DWORD PTR [esi],0x100704c8
10024700:	mov    eax,DWORD PTR [esi+0x8]
10024703:	test   eax,eax
10024705:	push   edi
10024706:	mov    edi,DWORD PTR ds:0x10065070
1002470c:	je     0x10024711
1002470e:	push   eax
1002470f:	call   edi
10024711:	and    DWORD PTR [esi+0x8],0x0
10024715:	mov    eax,DWORD PTR [esi+0x4]
10024718:	test   eax,eax
1002471a:	je     0x1002471f
1002471c:	push   eax
1002471d:	call   edi
1002471f:	and    DWORD PTR [esi+0x4],0x0
10024723:	test   BYTE PTR [esp+0xc],0x1
10024728:	mov    DWORD PTR [esi],0x1006c57c
1002472e:	je     0x10024737
10024730:	push   esi
10024731:	call   0x10041d92
10024736:	pop    ecx
10024737:	pop    edi
10024738:	mov    eax,esi
1002473a:	pop    esi
1002473b:	ret    0x4
1002473e:	push   ebp
1002473f:	mov    ebp,esp
10024741:	sub    esp,0xc
10024744:	push   ebx
10024745:	push   esi
10024746:	mov    esi,ecx
10024748:	mov    eax,DWORD PTR [esi+0x4]
1002474b:	mov    DWORD PTR [ebp-0xc],eax
1002474e:	mov    eax,ds:0x1007ff80
10024753:	mov    DWORD PTR [ebp-0x8],eax
10024756:	mov    eax,DWORD PTR [esi+0x1c]
10024759:	mov    eax,DWORD PTR [eax+0x30]
1002475c:	push   0xffffffff
1002475e:	mov    DWORD PTR [ebp-0x4],eax
10024761:	xor    ebx,ebx
10024763:	push   ebx
10024764:	lea    eax,[ebp-0xc]
10024767:	push   eax
10024768:	push   0x3
1002476a:	call   DWORD PTR ds:0x100650e8
10024770:	test   eax,eax
10024772:	je     0x1002478d
10024774:	mov    eax,DWORD PTR [ebp+0x10]
10024777:	mov    DWORD PTR [eax],ebx
10024779:	mov    BYTE PTR [esi+0x18],bl
1002477c:	push   DWORD PTR [esi+0x8]
1002477f:	call   DWORD PTR ds:0x10065110
10024785:	pop    esi
10024786:	mov    al,bl
10024788:	pop    ebx
10024789:	leave  
1002478a:	ret    0xc
1002478d:	push   edi
1002478e:	mov    edi,DWORD PTR [esi+0x10]
10024791:	cmp    edi,DWORD PTR [ebp+0xc]
10024794:	jb     0x10024799
10024796:	mov    edi,DWORD PTR [ebp+0xc]
10024799:	push   edi
1002479a:	push   DWORD PTR [esi+0xc]
1002479d:	push   DWORD PTR [ebp+0x8]
100247a0:	call   0x10043ed0
100247a5:	mov    eax,DWORD PTR [ebp+0x10]
100247a8:	mov    DWORD PTR [eax],edi
100247aa:	add    esp,0xc
100247ad:	mov    DWORD PTR [esi+0x14],edi
100247b0:	mov    BYTE PTR [esi+0x18],0x1
100247b4:	mov    bl,0x1
100247b6:	pop    edi
100247b7:	jmp    0x1002477c
100247b9:	mov    DWORD PTR [eax],0x1006c57c
100247bf:	ret    
100247c0:	push   ebp
100247c1:	mov    ebp,esp
100247c3:	sub    esp,0x21c
100247c9:	mov    eax,DWORD PTR [ebp+0x8]
100247cc:	push   ebx
100247cd:	push   esi
100247ce:	mov    DWORD PTR [ebp-0x8],eax
100247d1:	mov    eax,DWORD PTR [ebp+0xc]
100247d4:	push   edi
100247d5:	xor    edi,edi
100247d7:	mov    esi,ecx
100247d9:	mov    DWORD PTR [ebp-0xc],eax
100247dc:	mov    eax,DWORD PTR [esi+0x4]
100247df:	push   edi
100247e0:	mov    DWORD PTR [ebp-0x4],edi
100247e3:	mov    DWORD PTR [ebp+0x8],edi
100247e6:	mov    DWORD PTR [ebp+0xc],edi
100247e9:	push   DWORD PTR [eax+0x30]
100247ec:	call   DWORD PTR ds:0x10065084
100247f2:	test   eax,eax
100247f4:	je     0x1002486e
100247f6:	xor    ebx,ebx
100247f8:	inc    ebx
100247f9:	mov    eax,DWORD PTR [esi+0x4]
100247fc:	mov    DWORD PTR [ebp-0x21c],edi
10024802:	mov    DWORD PTR [ebp-0x14],edi
10024805:	mov    DWORD PTR [ebp-0x10],0x64
1002480c:	mov    ecx,DWORD PTR [eax]
1002480e:	mov    DWORD PTR [ebp-0x218],ecx
10024814:	mov    DWORD PTR [ebp-0x118],edi
1002481a:	mov    DWORD PTR [ebp-0x21c],ebx
10024820:	mov    ecx,DWORD PTR [eax]
10024822:	mov    DWORD PTR [ebp-0x114],ecx
10024828:	lea    ecx,[ebp+0x8]
1002482b:	push   ecx
1002482c:	lea    ecx,[ebp-0x14]
1002482f:	push   ecx
10024830:	lea    ecx,[ebp-0x118]
10024836:	push   ecx
10024837:	push   edi
10024838:	lea    ecx,[ebp-0x21c]
1002483e:	push   ecx
1002483f:	push   edi
10024840:	mov    DWORD PTR [ebp-0x118],ebx
10024846:	call   DWORD PTR [eax+0x94]
1002484c:	cmp    eax,0xffffffff
1002484f:	je     0x10024877
10024851:	cmp    DWORD PTR [ebp-0x118],ebx
10024857:	je     0x10024882
10024859:	cmp    eax,edi
1002485b:	mov    eax,DWORD PTR [esi+0x4]
1002485e:	jg     0x1002488e
10024860:	push   edi
10024861:	push   DWORD PTR [eax+0x30]
10024864:	call   DWORD PTR ds:0x10065084
1002486a:	test   eax,eax
1002486c:	jne    0x100247f9
1002486e:	mov    eax,DWORD PTR [ebp+0x10]
10024871:	mov    DWORD PTR [eax],edi
10024873:	xor    al,al
10024875:	jmp    0x100248b9
10024877:	mov    eax,DWORD PTR [esi+0x4]
1002487a:	mov    ecx,DWORD PTR [ebp+0x8]
1002487d:	mov    DWORD PTR [eax+0x38],ecx
10024880:	jmp    0x10024873
10024882:	mov    eax,DWORD PTR [esi+0x4]
10024885:	mov    DWORD PTR [eax+0x38],0x2746
1002488c:	jmp    0x10024873
1002488e:	lea    ecx,[ebp+0x8]
10024891:	push   ecx
10024892:	push   edi
10024893:	push   edi
10024894:	push   edi
10024895:	lea    ecx,[ebp+0xc]
10024898:	push   ecx
10024899:	lea    ecx,[ebp-0x4]
1002489c:	push   ecx
1002489d:	push   ebx
1002489e:	lea    ecx,[ebp-0xc]
100248a1:	push   ecx
100248a2:	push   DWORD PTR [eax]
100248a4:	call   DWORD PTR [eax+0x88]
100248aa:	cmp    eax,0xffffffff
100248ad:	je     0x10024877
100248af:	mov    eax,DWORD PTR [ebp+0x10]
100248b2:	mov    ecx,DWORD PTR [ebp-0x4]
100248b5:	mov    DWORD PTR [eax],ecx
100248b7:	mov    al,bl
100248b9:	pop    edi
100248ba:	pop    esi
100248bb:	pop    ebx
100248bc:	leave  
100248bd:	ret    0xc
100248c0:	push   0x0
100248c2:	mov    eax,0x10060962
100248c7:	call   0x10058845
100248cc:	mov    esi,DWORD PTR [ebp+0x8]
100248cf:	xor    ebx,ebx
100248d1:	mov    BYTE PTR [esi],bl
100248d3:	mov    BYTE PTR [esi+0x1],bl
100248d6:	mov    DWORD PTR [esi+0x8],ebx
100248d9:	mov    DWORD PTR [esi+0xc],ebx
100248dc:	mov    DWORD PTR [esi+0x10],ebx
100248df:	mov    DWORD PTR [esi+0x14],ebx
100248e2:	mov    DWORD PTR [ebp-0x4],ebx
100248e5:	mov    DWORD PTR [esi+0x1c],ebx
100248e8:	mov    DWORD PTR [esi+0x20],ebx
100248eb:	mov    DWORD PTR [esi+0x24],ebx
100248ee:	mov    DWORD PTR [esi+0x28],ebx
100248f1:	mov    DWORD PTR [esi+0x2c],ebx
100248f4:	mov    DWORD PTR [esi+0x30],ebx
100248f7:	mov    DWORD PTR [esi+0x34],ebx
100248fa:	mov    eax,DWORD PTR [ebp+0xc]
100248fd:	mov    BYTE PTR [ebp-0x4],0x4
10024901:	mov    DWORD PTR [esi+0x50],eax
10024904:	lea    eax,[esi+0x38]
10024907:	push   eax
10024908:	call   DWORD PTR ds:0x1006511c
1002490e:	push   0x20
10024910:	call   0x1004239e
10024915:	mov    edi,eax
10024917:	cmp    edi,ebx
10024919:	pop    ecx
1002491a:	je     0x10024928
1002491c:	mov    eax,DWORD PTR [esi+0x50]
1002491f:	call   0x100246af
10024924:	mov    edi,eax
10024926:	jmp    0x1002492a
10024928:	xor    edi,edi
1002492a:	mov    ecx,DWORD PTR [esi+0x30]
1002492d:	cmp    edi,ecx
1002492f:	je     0x1002493b
10024931:	cmp    ecx,ebx
10024933:	je     0x1002493b
10024935:	mov    eax,DWORD PTR [ecx]
10024937:	push   0x1
10024939:	call   DWORD PTR [eax]
1002493b:	mov    DWORD PTR [esi+0x30],edi
1002493e:	mov    eax,esi
10024940:	call   0x1005891d
10024945:	ret    0x8
10024948:	jmp    0x10025a81
1002494d:	push   0x0
1002494f:	mov    eax,0x10060962
10024954:	call   0x10058845
10024959:	mov    edi,DWORD PTR [ebp+0x8]
1002495c:	mov    DWORD PTR [ebp-0x4],0x4
10024963:	mov    ecx,edi
10024965:	call   0x1002560e
1002496a:	test   al,al
1002496c:	jne    0x10024963
1002496e:	push   edi
1002496f:	call   0x100259a0
10024974:	test   al,al
10024976:	jne    0x1002496e
10024978:	lea    eax,[edi+0x38]
1002497b:	push   eax
1002497c:	call   DWORD PTR ds:0x10065138
10024982:	lea    eax,[edi+0x34]
10024985:	mov    BYTE PTR [ebp-0x4],0x3
10024989:	call   0x1000c47a
1002498e:	mov    BYTE PTR [ebp-0x4],0x2
10024992:	mov    ecx,DWORD PTR [edi+0x30]
10024995:	test   ecx,ecx
10024997:	je     0x1002499f
10024999:	mov    eax,DWORD PTR [ecx]
1002499b:	push   0x1
1002499d:	call   DWORD PTR [eax]
1002499f:	mov    BYTE PTR [ebp-0x4],0x1
100249a3:	mov    eax,DWORD PTR [edi+0x2c]
100249a6:	test   eax,eax
100249a8:	je     0x100249b0
100249aa:	mov    ecx,DWORD PTR [eax]
100249ac:	push   eax
100249ad:	call   DWORD PTR [ecx+0x8]
100249b0:	lea    esi,[edi+0x18]
100249b3:	call   0x10025a81
100249b8:	lea    esi,[edi+0x4]
100249bb:	call   0x10025a81
100249c0:	call   0x1005891d
100249c5:	ret    0x4
100249c8:	push   0x8
100249ca:	mov    eax,0x10063994
100249cf:	call   0x10058878
100249d4:	mov    edi,ecx
100249d6:	mov    esi,edx
100249d8:	xor    ebx,ebx
100249da:	mov    DWORD PTR [ebp-0x4],ebx
100249dd:	cmp    DWORD PTR ds:0x1007fc5c,0x3
100249e4:	mov    BYTE PTR [edi],bl
100249e6:	jne    0x100249ed
100249e8:	call   0x10003b53
100249ed:	mov    DWORD PTR [ebp-0x14],ebx
100249f0:	lea    eax,[ebp-0x14]
100249f3:	push   eax
100249f4:	mov    BYTE PTR [ebp-0x4],0x1
100249f8:	push   DWORD PTR [esi+0x50]
100249fb:	push   DWORD PTR [ebp+0x8]
100249fe:	push   0x1007ff68
10024a03:	call   0x10025cda
10024a08:	add    esp,0x10
10024a0b:	cmp    al,bl
10024a0d:	je     0x10024a21
10024a0f:	mov    ecx,DWORD PTR [ebp-0x14]
10024a12:	cmp    ecx,ebx
10024a14:	je     0x10024a2d
10024a16:	mov    DWORD PTR [ebp-0x14],ebx
10024a19:	call   0x1002567f
10024a1e:	mov    BYTE PTR [edi],0x1
10024a21:	mov    edi,DWORD PTR [ebp-0x14]
10024a24:	cmp    edi,ebx
10024a26:	je     0x10024a2d
10024a28:	call   0x100099a6
10024a2d:	call   0x1005891d
10024a32:	ret    0x4
10024a35:	mov    eax,0x10024a2d
10024a3a:	ret    
10024a3b:	push   ebp
10024a3c:	mov    ebp,esp
10024a3e:	and    esp,0xfffffff8
10024a41:	sub    esp,0x120
10024a47:	push   ebx
10024a48:	push   esi
10024a49:	xor    esi,esi
10024a4b:	xor    ebx,ebx
10024a4d:	cmp    DWORD PTR [ebp+0xc],esi
10024a50:	jbe    0x10024af5
10024a56:	mov    eax,DWORD PTR [ebp+0x8]
10024a59:	add    eax,ebx
10024a5b:	mov    DWORD PTR [esp+0x1c],eax
10024a5f:	mov    eax,DWORD PTR [ebp+0xc]
10024a62:	sub    eax,ebx
10024a64:	mov    DWORD PTR [esp+0x8],esi
10024a68:	mov    DWORD PTR [esp+0xc],esi
10024a6c:	mov    DWORD PTR [esp+0x18],eax
10024a70:	mov    eax,DWORD PTR [edi+0x50]
10024a73:	push   esi
10024a74:	push   DWORD PTR [eax+0x30]
10024a77:	call   DWORD PTR ds:0x10065084
10024a7d:	test   eax,eax
10024a7f:	mov    eax,DWORD PTR [edi+0x50]
10024a82:	je     0x10024aff
10024a84:	mov    DWORD PTR [esp+0x20],esi
10024a88:	mov    DWORD PTR [esp+0x10],esi
10024a8c:	mov    DWORD PTR [esp+0x14],0x64
10024a94:	mov    ecx,DWORD PTR [eax]
10024a96:	mov    DWORD PTR [esp+0x24],ecx
10024a9a:	lea    ecx,[esp+0x8]
10024a9e:	push   ecx
10024a9f:	lea    ecx,[esp+0x14]
10024aa3:	push   ecx
10024aa4:	push   esi
10024aa5:	lea    ecx,[esp+0x2c]
10024aa9:	push   ecx
10024aaa:	push   esi
10024aab:	push   esi
10024aac:	mov    DWORD PTR [esp+0x38],0x1
10024ab4:	call   DWORD PTR [eax+0x94]
10024aba:	cmp    eax,0xffffffff
10024abd:	je     0x10024b0a
10024abf:	cmp    eax,esi
10024ac1:	jle    0x10024a70
10024ac3:	mov    eax,DWORD PTR [edi+0x50]
10024ac6:	lea    ecx,[esp+0x8]
10024aca:	push   ecx
10024acb:	push   esi
10024acc:	push   esi
10024acd:	push   esi
10024ace:	push   esi
10024acf:	lea    ecx,[esp+0x20]
10024ad3:	push   ecx
10024ad4:	push   0x1
10024ad6:	lea    ecx,[esp+0x34]
10024ada:	push   ecx
10024adb:	push   DWORD PTR [eax]
10024add:	call   DWORD PTR [eax+0x98]
10024ae3:	cmp    eax,0xffffffff
10024ae6:	je     0x10024b0a
10024ae8:	add    ebx,DWORD PTR [esp+0xc]
10024aec:	cmp    DWORD PTR [ebp+0xc],ebx
10024aef:	ja     0x10024a56
10024af5:	mov    al,0x1
10024af7:	pop    esi
10024af8:	pop    ebx
10024af9:	mov    esp,ebp
10024afb:	pop    ebp
10024afc:	ret    0x8
10024aff:	mov    DWORD PTR [eax+0x38],0x2749
10024b06:	xor    al,al
10024b08:	jmp    0x10024af7
10024b0a:	mov    eax,DWORD PTR [edi+0x50]
10024b0d:	mov    ecx,DWORD PTR [esp+0x8]
10024b11:	mov    DWORD PTR [eax+0x38],ecx
10024b14:	jmp    0x10024b06
10024b16:	push   0x8
10024b18:	mov    eax,0x10062614
10024b1d:	call   0x10058845
10024b22:	mov    ebx,ecx
10024b24:	push   0x40
10024b26:	call   0x1004239e
10024b2b:	pop    ecx
10024b2c:	mov    DWORD PTR [ebp-0x14],eax
10024b2f:	and    DWORD PTR [ebp-0x4],0x0
10024b33:	test   eax,eax
10024b35:	je     0x10024b41
10024b37:	push   eax
10024b38:	call   0x100081c6
10024b3d:	mov    esi,eax
10024b3f:	jmp    0x10024b43
10024b41:	xor    esi,esi
10024b43:	mov    DWORD PTR [ebp-0x14],esi
10024b46:	mov    eax,ebx
10024b48:	mov    DWORD PTR [ebp-0x4],0x1
10024b4f:	call   0x1000daf0
10024b54:	test   al,al
10024b56:	je     0x10024ba9
10024b58:	lea    eax,[ebp-0x10]
10024b5b:	push   eax
10024b5c:	call   0x1000d90b
10024b61:	mov    BYTE PTR [ebp-0x4],0x2
10024b65:	mov    ecx,DWORD PTR [eax]
10024b67:	and    DWORD PTR [eax],0x0
10024b6a:	mov    eax,ecx
10024b6c:	mov    ecx,esi
10024b6e:	call   0x1000820a
10024b73:	mov    BYTE PTR [ebp-0x4],0x1
10024b77:	mov    edi,DWORD PTR [ebp-0x10]
10024b7a:	test   edi,edi
10024b7c:	je     0x10024b83
10024b7e:	call   0x100099a6
10024b83:	mov    eax,DWORD PTR [esi+0x30]
10024b86:	mov    ecx,DWORD PTR [eax+0x18]
10024b89:	mov    eax,DWORD PTR [eax+0x14]
10024b8c:	mov    edi,DWORD PTR [ebp+0x8]
10024b8f:	push   ecx
10024b90:	push   eax
10024b91:	call   0x10024a3b
10024b96:	or     DWORD PTR [ebp-0x4],0xffffffff
10024b9a:	test   al,al
10024b9c:	push   esi
10024b9d:	je     0x10024bb2
10024b9f:	call   0x100099e0
10024ba4:	jmp    0x10024b24
10024ba9:	or     DWORD PTR [ebp-0x4],0xffffffff
10024bad:	test   esi,esi
10024baf:	je     0x10024bb7
10024bb1:	push   esi
10024bb2:	call   0x100099e0
10024bb7:	call   0x1005891d
10024bbc:	ret    0x4
10024bbf:	push   esi
10024bc0:	mov    esi,ecx
10024bc2:	cmp    BYTE PTR [esi+0x8],0x0
10024bc6:	jne    0x10024bfa
10024bc8:	cmp    BYTE PTR [esi+0x9],0x0
10024bcc:	jne    0x10024bfa
10024bce:	push   ebx
10024bcf:	mov    ebx,DWORD PTR [esp+0xc]
10024bd3:	mov    eax,DWORD PTR [ebx+0x18]
10024bd6:	mov    ecx,DWORD PTR [ebx+0x14]
10024bd9:	push   edi
10024bda:	push   eax
10024bdb:	mov    eax,DWORD PTR [esi+0x4]
10024bde:	mov    edi,DWORD PTR [eax+0x1c]
10024be1:	push   ecx
10024be2:	call   0x10024a3b
10024be7:	test   al,al
10024be9:	jne    0x10024bf8
10024beb:	mov    BYTE PTR [esi+0x9],0x1
10024bef:	push   DWORD PTR [ebx+0x18]
10024bf2:	call   0x1000207c
10024bf7:	pop    ecx
10024bf8:	pop    edi
10024bf9:	pop    ebx
10024bfa:	pop    esi
10024bfb:	ret    0x4
10024bfe:	push   0x8
10024c00:	mov    eax,0x10062ff7
10024c05:	call   0x10058878
10024c0a:	mov    esi,DWORD PTR [ebp+0x10]
10024c0d:	push   0xc
10024c0f:	call   0x1004239e
10024c14:	xor    ebx,ebx
10024c16:	cmp    eax,ebx
10024c18:	pop    ecx
10024c19:	je     0x10024c37
10024c1b:	mov    ecx,DWORD PTR [ebp+0x8]
10024c1e:	mov    ecx,DWORD PTR [ecx+0x50]
10024c21:	mov    DWORD PTR [eax+0x4],ecx
10024c24:	mov    cl,BYTE PTR [ebp+0x18]
10024c27:	mov    DWORD PTR [eax],0x100704d8
10024c2d:	mov    BYTE PTR [eax+0x8],cl
10024c30:	mov    BYTE PTR [eax+0x9],bl
10024c33:	mov    edi,eax
10024c35:	jmp    0x10024c39
10024c37:	xor    edi,edi
10024c39:	mov    DWORD PTR [ebp-0x14],edi
10024c3c:	mov    DWORD PTR [ebp-0x4],ebx
10024c3f:	call   0x1000d794
10024c44:	push   DWORD PTR [ebp+0xc]
10024c47:	mov    ecx,DWORD PTR [ebp+0x14]
10024c4a:	mov    DWORD PTR [esi+0x14],edi
10024c4d:	mov    BYTE PTR [ebp-0x4],0x1
10024c51:	call   0x1000ddd4
10024c56:	cmp    eax,ebx
10024c58:	mov    DWORD PTR [ebp+0x18],eax
10024c5b:	jne    0x10024c80
10024c5d:	cmp    BYTE PTR [edi+0x9],bl
10024c60:	je     0x10024c80
10024c62:	mov    esi,DWORD PTR [ebp+0x8]
10024c65:	call   0x100255dd
10024c6a:	or     DWORD PTR [ebp-0x4],0xffffffff
10024c6e:	mov    eax,DWORD PTR [edi]
10024c70:	push   0x1
10024c72:	mov    ecx,edi
10024c74:	call   DWORD PTR [eax]
10024c76:	xor    eax,eax
10024c78:	call   0x1005891d
10024c7d:	ret    0x14
10024c80:	mov    DWORD PTR [ebp-0x4],ebx
10024c83:	call   0x1000d794
10024c88:	or     DWORD PTR [ebp-0x4],0xffffffff
10024c8c:	cmp    edi,ebx
10024c8e:	mov    DWORD PTR [esi+0x14],ebx
10024c91:	je     0x10024c9b
10024c93:	mov    eax,DWORD PTR [edi]
10024c95:	push   0x1
10024c97:	mov    ecx,edi
10024c99:	call   DWORD PTR [eax]
10024c9b:	mov    eax,DWORD PTR [ebp+0x18]
10024c9e:	jmp    0x10024c78
10024ca0:	push   0x4
10024ca2:	call   0x10037620
10024ca7:	mov    esi,DWORD PTR [ebp+0x10]
10024caa:	pop    ecx
10024cab:	call   0x1000d794
10024cb0:	xor    ebx,ebx
10024cb2:	push   ebx
10024cb3:	push   ebx
10024cb4:	mov    DWORD PTR [esi+0x14],ebx
10024cb7:	call   0x10046704
10024cbc:	int3   
10024cbd:	push   ebp
10024cbe:	mov    ebp,esp
10024cc0:	and    esp,0xfffffff8
10024cc3:	push   0xffffffff
10024cc5:	push   0x10063c45
10024cca:	mov    eax,fs:0x0
10024cd0:	push   eax
10024cd1:	sub    esp,0x40
10024cd4:	push   ebx
10024cd5:	push   esi
10024cd6:	push   edi
10024cd7:	mov    eax,ds:0x1007d030
10024cdc:	xor    eax,esp
10024cde:	push   eax
10024cdf:	lea    eax,[esp+0x50]
10024ce3:	mov    fs:0x0,eax
10024ce9:	mov    esi,ecx
10024ceb:	mov    eax,DWORD PTR [esi+0x30]
10024cee:	xor    ebx,ebx
10024cf0:	mov    DWORD PTR [esp+0x30],ebx
10024cf4:	mov    DWORD PTR [esp+0x34],ebx
10024cf8:	mov    DWORD PTR [esp+0x38],ebx
10024cfc:	mov    DWORD PTR [esp+0x3c],ebx
10024d00:	mov    BYTE PTR [esp+0x40],bl
10024d04:	mov    DWORD PTR [esp+0x44],ebx
10024d08:	mov    DWORD PTR [esp+0x48],eax
10024d0c:	lea    eax,[esp+0x30]
10024d10:	mov    DWORD PTR [esp+0x58],ebx
10024d14:	mov    DWORD PTR [esp+0x20],eax
10024d18:	push   0x40
10024d1a:	call   0x1004239e
10024d1f:	pop    ecx
10024d20:	mov    DWORD PTR [esp+0x24],eax
10024d24:	cmp    eax,ebx
10024d26:	mov    BYTE PTR [esp+0x58],0x1
10024d2b:	je     0x10024d3b
10024d2d:	push   eax
10024d2e:	call   0x100081c6
10024d33:	mov    edi,eax
10024d35:	mov    DWORD PTR [esp+0x10],edi
10024d39:	jmp    0x10024d41
10024d3b:	mov    DWORD PTR [esp+0x10],ebx
10024d3f:	mov    edi,ebx
10024d41:	mov    DWORD PTR [esp+0x28],edi
10024d45:	push   edi
10024d46:	lea    ecx,[esp+0x24]
10024d4a:	mov    BYTE PTR [esp+0x5c],0x2
10024d4f:	call   0x1000db31
10024d54:	cmp    eax,0x1
10024d57:	mov    DWORD PTR [esp+0x14],eax
10024d5b:	je     0x10024e5c
10024d61:	lea    eax,[esp+0x1c]
10024d65:	push   eax
10024d66:	lea    ebx,[esp+0x34]
10024d6a:	call   0x1000d90b
10024d6f:	mov    BYTE PTR [esp+0x58],0x3
10024d74:	mov    ecx,DWORD PTR [eax]
10024d76:	xor    ebx,ebx
10024d78:	mov    DWORD PTR [eax],ebx
10024d7a:	mov    eax,ecx
10024d7c:	mov    ecx,edi
10024d7e:	call   0x1000820a
10024d83:	mov    BYTE PTR [esp+0x58],0x2
10024d88:	cmp    DWORD PTR [esp+0x1c],ebx
10024d8c:	je     0x10024d9b
10024d8e:	mov    edi,DWORD PTR [esp+0x1c]
10024d92:	call   0x100099a6
10024d97:	mov    edi,DWORD PTR [esp+0x10]
10024d9b:	call   0x1002f5b0
10024da0:	mov    DWORD PTR [edi+0x10],eax
10024da3:	mov    DWORD PTR [edi+0x14],edx
10024da6:	call   0x100255f4
10024dab:	test   al,al
10024dad:	je     0x10024db7
10024daf:	mov    DWORD PTR [esp+0x14],0x1
10024db7:	cmp    DWORD PTR [esp+0x14],ebx
10024dbb:	mov    BYTE PTR [esp+0x18],bl
10024dbf:	jne    0x10024dd3
10024dc1:	push   edi
10024dc2:	lea    ecx,[esp+0x1c]
10024dc6:	mov    edx,esi
10024dc8:	call   0x100249c8
10024dcd:	cmp    BYTE PTR [esp+0x18],bl
10024dd1:	jne    0x10024e2a
10024dd3:	push   edi
10024dd4:	call   0x1000831a
10024dd9:	lea    ebx,[esi+0x38]
10024ddc:	push   ebx
10024ddd:	mov    DWORD PTR [esp+0x28],eax
10024de1:	mov    DWORD PTR [esp+0x30],ebx
10024de5:	call   DWORD PTR ds:0x100650f0
10024deb:	lea    eax,[esp+0x24]
10024def:	push   eax
10024df0:	lea    eax,[esi+0x4]
10024df3:	mov    BYTE PTR [esp+0x5c],0x4
10024df8:	call   0x10025ace
10024dfd:	push   ebx
10024dfe:	mov    BYTE PTR [esp+0x5c],0x2
10024e03:	call   DWORD PTR ds:0x100650ec
10024e09:	mov    eax,DWORD PTR [edi+0x30]
10024e0c:	mov    ecx,DWORD PTR [eax+0x18]
10024e0f:	mov    eax,DWORD PTR [eax+0x14]
10024e12:	push   ecx
10024e13:	push   eax
10024e14:	mov    edi,esi
10024e16:	call   0x10024a3b
10024e1b:	test   al,al
10024e1d:	mov    edi,DWORD PTR [esp+0x10]
10024e21:	je     0x10024e75
10024e23:	cmp    DWORD PTR [esp+0x14],0x0
10024e28:	jne    0x10024e43
10024e2a:	push   DWORD PTR [esp+0x18]
10024e2e:	lea    eax,[esp+0x34]
10024e32:	push   edi
10024e33:	push   eax
10024e34:	lea    eax,[esp+0x2c]
10024e38:	push   eax
10024e39:	push   esi
10024e3a:	call   0x10024bfe
10024e3f:	mov    DWORD PTR [esp+0x14],eax
10024e43:	cmp    DWORD PTR [esp+0x14],0x1
10024e48:	je     0x10024e8b
10024e4a:	push   edi
10024e4b:	mov    BYTE PTR [esp+0x5c],0x0
10024e50:	call   0x100099e0
10024e55:	xor    ebx,ebx
10024e57:	jmp    0x10024d18
10024e5c:	call   0x100255dd
10024e61:	push   esi
10024e62:	lea    ecx,[esp+0x34]
10024e66:	call   0x10024b16
10024e6b:	cmp    edi,ebx
10024e6d:	mov    BYTE PTR [esp+0x58],bl
10024e71:	je     0x10024ead
10024e73:	jmp    0x10024ea7
10024e75:	mov    eax,DWORD PTR [edi+0x30]
10024e78:	push   DWORD PTR [eax+0x18]
10024e7b:	push   0x0
10024e7d:	call   0x1000207c
10024e82:	pop    ecx
10024e83:	pop    ecx
10024e84:	call   0x100255dd
10024e89:	jmp    0x10024ea2
10024e8b:	push   0x10
10024e8d:	call   0x10037620
10024e92:	pop    ecx
10024e93:	call   0x100255dd
10024e98:	push   esi
10024e99:	lea    ecx,[esp+0x34]
10024e9d:	call   0x10024b16
10024ea2:	mov    BYTE PTR [esp+0x58],0x0
10024ea7:	push   edi
10024ea8:	call   0x100099e0
10024ead:	or     DWORD PTR [esp+0x58],0xffffffff
10024eb2:	lea    eax,[esp+0x30]
10024eb6:	call   0x1000d763
10024ebb:	mov    ecx,DWORD PTR [esp+0x50]
10024ebf:	mov    DWORD PTR fs:0x0,ecx
10024ec6:	pop    ecx
10024ec7:	pop    edi
10024ec8:	pop    esi
10024ec9:	pop    ebx
10024eca:	mov    esp,ebp
10024ecc:	pop    ebp
10024ecd:	ret    
10024ece:	push   0x8
10024ed0:	mov    eax,0x10063c6d
10024ed5:	call   0x10058878
10024eda:	lea    eax,[ebp+0xb]
10024edd:	push   eax
10024ede:	call   0x100375f0
10024ee3:	and    DWORD PTR [ebp-0x4],0x0
10024ee7:	mov    eax,DWORD PTR [ebp+0x8]
10024eea:	mov    DWORD PTR [ebp-0x14],eax
10024eed:	mov    BYTE PTR [ebp-0x4],0x2
10024ef1:	mov    ecx,DWORD PTR [eax+0x1c]
10024ef4:	call   0x10024cbd
10024ef9:	lea    ecx,[ebp-0x14]
10024efc:	call   0x10015ad1
10024f01:	call   0x10037610
10024f06:	xor    eax,eax
10024f08:	call   0x1005891d
10024f0d:	ret    0x4
10024f10:	mov    eax,DWORD PTR [ebp-0x14]
10024f13:	push   DWORD PTR [eax]
10024f15:	call   0x1000207c
10024f1a:	pop    ecx
10024f1b:	mov    eax,0x10024ef9
10024f20:	ret    
10024f21:	push   0x4
10024f23:	mov    eax,0x100625df
10024f28:	call   0x10058845
10024f2d:	mov    ebx,ecx
10024f2f:	mov    esi,edx
10024f31:	mov    eax,DWORD PTR [esi+0x50]
10024f34:	xor    edi,edi
10024f36:	push   edi
10024f37:	push   DWORD PTR [eax+0x30]
10024f3a:	call   DWORD PTR ds:0x10065084
10024f40:	test   eax,eax
10024f42:	je     0x10024f59
10024f44:	mov    eax,esi
10024f46:	call   0x100255af
10024f4b:	test   eax,eax
10024f4d:	je     0x10024f59
10024f4f:	push   0xa
10024f51:	call   DWORD PTR ds:0x100650b8
10024f57:	jmp    0x10024f31
10024f59:	mov    eax,ebx
10024f5b:	call   0x1000daf0
10024f60:	test   al,al
10024f62:	je     0x10024f8c
10024f64:	lea    eax,[ebp-0x10]
10024f67:	push   eax
10024f68:	call   0x1000d90b
10024f6d:	mov    DWORD PTR [ebp-0x4],edi
10024f70:	mov    ecx,DWORD PTR [eax]
10024f72:	mov    DWORD PTR [eax],edi
10024f74:	call   0x1002567f
10024f79:	or     DWORD PTR [ebp-0x4],0xffffffff
10024f7d:	cmp    DWORD PTR [ebp-0x10],edi
10024f80:	je     0x10024f31
10024f82:	mov    edi,DWORD PTR [ebp-0x10]
10024f85:	call   0x100099a6
10024f8a:	jmp    0x10024f31
10024f8c:	call   0x10025a22
10024f91:	call   0x1005891d
10024f96:	ret    
10024f97:	mov    eax,DWORD PTR [ecx+0x4]
10024f9a:	mov    ecx,DWORD PTR [esp+0x4]
10024f9e:	push   esi
10024f9f:	mov    esi,DWORD PTR [eax+0x1c]
10024fa2:	call   0x1002567f
10024fa7:	pop    esi
10024fa8:	ret    0x4
10024fab:	test   BYTE PTR [esp+0x4],0x1
10024fb0:	push   esi
10024fb1:	mov    esi,ecx
10024fb3:	mov    DWORD PTR [esi],0x100704c0
10024fb9:	je     0x10024fc2
10024fbb:	push   esi
10024fbc:	call   0x10041d92
10024fc1:	pop    ecx
10024fc2:	mov    eax,esi
10024fc4:	pop    esi
10024fc5:	ret    0x4
10024fc8:	push   0x10
10024fca:	mov    eax,0x1006348c
10024fcf:	call   0x10058878
10024fd4:	mov    ebx,ecx
10024fd6:	mov    edi,edx
10024fd8:	and    DWORD PTR [ebp-0x4],0x0
10024fdc:	mov    ecx,DWORD PTR [ebp+0x10]
10024fdf:	lea    eax,[ecx+0x34]
10024fe2:	mov    edx,DWORD PTR [eax]
10024fe4:	mov    edx,DWORD PTR [edx+0x18]
10024fe7:	mov    DWORD PTR [ecx+0x38],edx
10024fea:	mov    ecx,DWORD PTR [eax]
10024fec:	and    DWORD PTR [eax],0x0
10024fef:	mov    esi,edi
10024ff1:	call   0x1002567f
10024ff6:	push   0x8
10024ff8:	call   0x1004239e
10024ffd:	test   eax,eax
10024fff:	pop    ecx
10025000:	je     0x10025013
10025002:	mov    ecx,DWORD PTR [edi+0x50]
10025005:	mov    DWORD PTR [eax],0x100704e0
1002500b:	mov    DWORD PTR [eax+0x4],ecx
1002500e:	mov    DWORD PTR [ebp-0x14],eax
10025011:	jmp    0x10025017
10025013:	and    DWORD PTR [ebp-0x14],0x0
10025017:	mov    eax,DWORD PTR [ebp-0x14]
1002501a:	mov    DWORD PTR [ebp-0x1c],eax
1002501d:	mov    esi,DWORD PTR [ebp+0xc]
10025020:	mov    BYTE PTR [ebp-0x4],0x1
10025024:	call   0x1000d794
10025029:	mov    eax,DWORD PTR [ebp-0x14]
1002502c:	mov    BYTE PTR [ebp-0x4],0x2
10025030:	mov    edx,DWORD PTR [ebp+0x10]
10025033:	mov    ecx,DWORD PTR [ebp+0x8]
10025036:	push   ebx
10025037:	mov    DWORD PTR [esi+0x14],eax
1002503a:	call   0x1000e101
1002503f:	test   eax,eax
10025041:	mov    DWORD PTR [ebp-0x18],eax
10025044:	jne    0x10025099
10025046:	call   0x1002f5b0
1002504b:	mov    ecx,DWORD PTR [ebp+0x10]
1002504e:	mov    DWORD PTR [ecx+0x18],eax
10025051:	mov    eax,DWORD PTR [ebp+0x10]
10025054:	mov    DWORD PTR [eax+0x1c],edx
10025057:	mov    ecx,DWORD PTR [ebp+0x10]
1002505a:	push   edi
1002505b:	call   0x100256db
10025060:	cmp    BYTE PTR [ebx+0x2c],0x0
10025064:	jne    0x10025099
10025066:	push   ebx
10025067:	call   0x1000831a
1002506c:	mov    DWORD PTR [ebp+0x8],eax
1002506f:	lea    eax,[ebp+0x10]
10025072:	push   eax
10025073:	lea    eax,[ebp+0x8]
10025076:	push   eax
10025077:	mov    edi,0x1007ff50
1002507c:	mov    BYTE PTR [ebp-0x4],0x3
10025080:	call   0x100260ee
10025085:	pop    ecx
10025086:	mov    BYTE PTR [ebp-0x4],0x2
1002508a:	cmp    DWORD PTR [ebp+0x8],0x0
1002508e:	pop    ecx
1002508f:	je     0x10025099
10025091:	push   DWORD PTR [ebp+0x8]
10025094:	call   0x100099e0
10025099:	mov    esi,DWORD PTR [ebp+0xc]
1002509c:	xor    edi,edi
1002509e:	inc    edi
1002509f:	mov    DWORD PTR [ebp-0x4],edi
100250a2:	call   0x1000d794
100250a7:	and    DWORD PTR [esi+0x14],0x0
100250ab:	mov    ecx,DWORD PTR [ebp-0x14]
100250ae:	test   ecx,ecx
100250b0:	mov    BYTE PTR [ebp-0x4],0x0
100250b4:	je     0x100250bb
100250b6:	mov    eax,DWORD PTR [ecx]
100250b8:	push   edi
100250b9:	call   DWORD PTR [eax]
100250bb:	or     DWORD PTR [ebp-0x4],0xffffffff
100250bf:	lea    eax,[ebp+0x10]
100250c2:	call   0x10009963
100250c7:	mov    eax,DWORD PTR [ebp-0x18]
100250ca:	call   0x1005891d
100250cf:	ret    0xc
100250d2:	push   0x4
100250d4:	call   0x10037620
100250d9:	mov    esi,DWORD PTR [ebp+0xc]
100250dc:	pop    ecx
100250dd:	call   0x1000d794
100250e2:	xor    eax,eax
100250e4:	push   eax
100250e5:	push   eax
100250e6:	mov    DWORD PTR [esi+0x14],eax
100250e9:	call   0x10046704
100250ee:	int3   
100250ef:	push   0x10
100250f1:	mov    eax,0x10063459
100250f6:	call   0x10058845
100250fb:	mov    ebx,edx
100250fd:	mov    esi,DWORD PTR [ebp+0x10]
10025100:	push   DWORD PTR [ebp+0xc]
10025103:	mov    edx,esi
10025105:	call   0x1000e101
1002510a:	test   eax,eax
1002510c:	mov    DWORD PTR [ebp-0x10],eax
1002510f:	jne    0x10025165
10025111:	lea    eax,[ebp-0x14]
10025114:	push   eax
10025115:	call   0x1000d90b
1002511a:	and    DWORD PTR [ebp-0x4],0x0
1002511e:	mov    ebx,DWORD PTR [eax]
10025120:	and    DWORD PTR [eax],0x0
10025123:	mov    ecx,esi
10025125:	call   0x10008ad1
1002512a:	or     DWORD PTR [ebp-0x4],0xffffffff
1002512e:	mov    edi,DWORD PTR [ebp-0x14]
10025131:	test   edi,edi
10025133:	je     0x1002513a
10025135:	call   0x100099a6
1002513a:	call   0x1002f5b0
1002513f:	mov    DWORD PTR [esi+0x18],eax
10025142:	mov    eax,DWORD PTR [ebp+0xc]
10025145:	mov    DWORD PTR [esi+0x1c],edx
10025148:	cmp    BYTE PTR [eax+0x2c],0x0
1002514c:	jne    0x100251ab
1002514e:	mov    ecx,DWORD PTR [ebp+0x8]
10025151:	push   esi
10025152:	push   DWORD PTR [ecx+0x50]
10025155:	push   eax
10025156:	push   0x1007ff74
1002515b:	call   0x10025fed
10025160:	add    esp,0x10
10025163:	jmp    0x100251ab
10025165:	lea    eax,[ebp-0x18]
10025168:	push   eax
10025169:	call   0x1000d90b
1002516e:	mov    DWORD PTR [ebp-0x4],0x1
10025175:	mov    ebx,DWORD PTR [eax]
10025177:	and    DWORD PTR [eax],0x0
1002517a:	mov    DWORD PTR [ebp-0x14],ebx
1002517d:	mov    BYTE PTR [ebp-0x4],0x2
10025181:	mov    edi,DWORD PTR [ebx+0x18]
10025184:	test   edi,edi
10025186:	je     0x10025194
10025188:	mov    ecx,DWORD PTR [ebx+0x14]
1002518b:	mov    eax,DWORD PTR [esi+0x34]
1002518e:	push   ecx
1002518f:	call   0x10007221
10025194:	mov    edi,ebx
10025196:	call   0x100099a6
1002519b:	or     DWORD PTR [ebp-0x4],0xffffffff
1002519f:	mov    edi,DWORD PTR [ebp-0x18]
100251a2:	test   edi,edi
100251a4:	je     0x100251ab
100251a6:	call   0x100099a6
100251ab:	mov    eax,DWORD PTR [esi+0x34]
100251ae:	mov    eax,DWORD PTR [eax+0x18]
100251b1:	mov    DWORD PTR [esi+0x38],eax
100251b4:	mov    ecx,DWORD PTR [esi+0x34]
100251b7:	and    DWORD PTR [esi+0x34],0x0
100251bb:	mov    esi,DWORD PTR [ebp+0x8]
100251be:	call   0x1002567f
100251c3:	cmp    DWORD PTR [ebp-0x10],0x0
100251c7:	jne    0x100251d5
100251c9:	mov    ecx,DWORD PTR [ebp+0x10]
100251cc:	mov    ebx,DWORD PTR [ebp+0xc]
100251cf:	push   esi
100251d0:	call   0x100256db
100251d5:	mov    eax,DWORD PTR [ebp-0x10]
100251d8:	call   0x1005891d
100251dd:	ret    0xc
100251e0:	push   ebp
100251e1:	mov    ebp,esp
100251e3:	and    esp,0xfffffff8
100251e6:	push   0xffffffff
100251e8:	push   0x10063971
100251ed:	mov    eax,fs:0x0
100251f3:	push   eax
100251f4:	sub    esp,0x48
100251f7:	push   ebx
100251f8:	push   esi
100251f9:	push   edi
100251fa:	mov    eax,ds:0x1007d030
100251ff:	xor    eax,esp
10025201:	push   eax
10025202:	lea    eax,[esp+0x58]
10025206:	mov    fs:0x0,eax
1002520c:	mov    edi,DWORD PTR [ebp+0x8]
1002520f:	mov    eax,DWORD PTR [edi+0x50]
10025212:	mov    DWORD PTR [esp+0x30],0x100704d0
1002521a:	mov    DWORD PTR [esp+0x34],eax
1002521e:	xor    ebx,ebx
10025220:	mov    DWORD PTR [esp+0x60],ebx
10025224:	lea    ecx,[esp+0x30]
10025228:	mov    DWORD PTR [esp+0x38],ebx
1002522c:	mov    DWORD PTR [esp+0x3c],ebx
10025230:	mov    DWORD PTR [esp+0x40],ebx
10025234:	mov    DWORD PTR [esp+0x44],ebx
10025238:	mov    BYTE PTR [esp+0x48],bl
1002523c:	mov    DWORD PTR [esp+0x4c],ebx
10025240:	mov    DWORD PTR [esp+0x50],ecx
10025244:	lea    ecx,[esp+0x38]
10025248:	mov    BYTE PTR [esp+0x60],0x1
1002524d:	mov    DWORD PTR [esp+0x20],ecx
10025251:	jmp    0x10025433
10025256:	mov    eax,edi
10025258:	call   0x100255af
1002525d:	test   eax,eax
1002525f:	je     0x1002526e
10025261:	push   0xa
10025263:	call   DWORD PTR ds:0x100650b8
10025269:	jmp    0x10025430
1002526e:	lea    esi,[esp+0x38]
10025272:	call   0x1000d8e6
10025277:	test   al,al
10025279:	jne    0x10025447
1002527f:	push   0x40
10025281:	call   0x1004239e
10025286:	pop    ecx
10025287:	mov    DWORD PTR [esp+0x24],eax
1002528b:	cmp    eax,ebx
1002528d:	mov    BYTE PTR [esp+0x60],0x2
10025292:	je     0x100252a0
10025294:	push   eax
10025295:	call   0x10008a1c
1002529a:	mov    DWORD PTR [esp+0x18],eax
1002529e:	jmp    0x100252a4
100252a0:	mov    DWORD PTR [esp+0x18],ebx
100252a4:	mov    eax,DWORD PTR [esp+0x18]
100252a8:	mov    DWORD PTR [esp+0x24],eax
100252ac:	push   eax
100252ad:	lea    eax,[esp+0x24]
100252b1:	push   eax
100252b2:	mov    BYTE PTR [esp+0x68],0x3
100252b7:	call   0x1000e023
100252bc:	lea    esi,[edi+0x38]
100252bf:	push   esi
100252c0:	mov    DWORD PTR [esp+0x18],eax
100252c4:	call   DWORD PTR ds:0x100650f0
100252ca:	cmp    BYTE PTR [edi],bl
100252cc:	jne    0x100252ed
100252ce:	cmp    DWORD PTR [edi+0x14],ebx
100252d1:	je     0x100252ed
100252d3:	lea    esi,[edi+0x4]
100252d6:	call   0x10025a3e
100252db:	mov    esi,DWORD PTR [eax]
100252dd:	lea    eax,[edi+0x38]
100252e0:	push   eax
100252e1:	call   DWORD PTR ds:0x100650ec
100252e7:	mov    DWORD PTR [esp+0x1c],esi
100252eb:	jmp    0x100252f8
100252ed:	push   esi
100252ee:	call   DWORD PTR ds:0x100650ec
100252f4:	mov    DWORD PTR [esp+0x1c],ebx
100252f8:	cmp    DWORD PTR [esp+0x1c],ebx
100252fc:	jne    0x10025306
100252fe:	mov    DWORD PTR [esp+0x14],0x1
10025306:	mov    esi,edi
10025308:	call   0x100255f4
1002530d:	test   al,al
1002530f:	je     0x10025319
10025311:	mov    DWORD PTR [esp+0x14],0x1
10025319:	cmp    DWORD PTR [esp+0x14],ebx
1002531d:	jne    0x100253d6
10025323:	call   0x10003b53
10025328:	lea    eax,[esp+0x28]
1002532c:	push   eax
1002532d:	lea    ebx,[esp+0x3c]
10025331:	call   0x1000d90b
10025336:	mov    esi,DWORD PTR [esp+0x18]
1002533a:	mov    BYTE PTR [esp+0x60],0x4
1002533f:	mov    ecx,DWORD PTR [eax]
10025341:	and    DWORD PTR [eax],0x0
10025344:	mov    eax,ecx
10025346:	mov    ecx,esi
10025348:	call   0x10008a63
1002534d:	mov    BYTE PTR [esp+0x60],0x3
10025352:	cmp    DWORD PTR [esp+0x28],0x0
10025357:	je     0x10025365
10025359:	mov    edi,DWORD PTR [esp+0x28]
1002535d:	call   0x100099a6
10025362:	mov    edi,DWORD PTR [ebp+0x8]
10025365:	call   0x1002f5b0
1002536a:	mov    ebx,DWORD PTR [esp+0x1c]
1002536e:	mov    DWORD PTR [esi+0x10],eax
10025371:	mov    DWORD PTR [esi+0x14],edx
10025374:	cmp    BYTE PTR [ebx+0x2c],0x0
10025378:	mov    BYTE PTR [esp+0x13],0x1
1002537d:	jne    0x1002539d
1002537f:	lea    eax,[esp+0x13]
10025383:	push   eax
10025384:	push   esi
10025385:	push   DWORD PTR [edi+0x50]
10025388:	push   ebx
10025389:	push   0x1007ff5c
1002538e:	call   0x10025edc
10025393:	add    esp,0x14
10025396:	cmp    BYTE PTR [esp+0x13],0x0
1002539b:	je     0x100253c0
1002539d:	push   ecx
1002539e:	mov    eax,esp
100253a0:	mov    DWORD PTR [eax],esi
100253a2:	mov    DWORD PTR [esp+0x28],esp
100253a6:	and    DWORD PTR [esp+0x28],0x0
100253ab:	lea    eax,[esp+0x3c]
100253af:	push   eax
100253b0:	lea    eax,[esp+0x28]
100253b4:	push   eax
100253b5:	mov    ecx,ebx
100253b7:	mov    edx,edi
100253b9:	call   0x10024fc8
100253be:	jmp    0x100253d0
100253c0:	push   esi
100253c1:	push   ebx
100253c2:	push   edi
100253c3:	lea    edx,[esp+0x44]
100253c7:	lea    ecx,[esp+0x2c]
100253cb:	call   0x100250ef
100253d0:	mov    DWORD PTR [esp+0x14],eax
100253d4:	jmp    0x10025412
100253d6:	mov    esi,edi
100253d8:	call   0x100255dd
100253dd:	lea    eax,[esp+0x2c]
100253e1:	push   eax
100253e2:	lea    ebx,[esp+0x3c]
100253e6:	call   0x1000d90b
100253eb:	mov    BYTE PTR [esp+0x60],0x5
100253f0:	mov    ecx,DWORD PTR [eax]
100253f2:	and    DWORD PTR [eax],0x0
100253f5:	call   0x1002567f
100253fa:	mov    BYTE PTR [esp+0x60],0x3
100253ff:	cmp    DWORD PTR [esp+0x2c],0x0
10025404:	je     0x10025412
10025406:	mov    edi,DWORD PTR [esp+0x2c]
1002540a:	call   0x100099a6
1002540f:	mov    edi,DWORD PTR [ebp+0x8]
10025412:	mov    ecx,edi
10025414:	call   0x1002560e
10025419:	cmp    DWORD PTR [esp+0x14],0x1
1002541e:	je     0x10025450
10025420:	lea    eax,[esp+0x24]
10025424:	mov    BYTE PTR [esp+0x60],0x1
10025429:	call   0x10009963
1002542e:	xor    ebx,ebx
10025430:	mov    eax,DWORD PTR [edi+0x50]
10025433:	push   ebx
10025434:	push   DWORD PTR [eax+0x30]
10025437:	call   DWORD PTR ds:0x10065084
1002543d:	test   eax,eax
1002543f:	jne    0x10025256
10025445:	jmp    0x10025473
10025447:	mov    esi,edi
10025449:	call   0x10025a22
1002544e:	jmp    0x10025473
10025450:	push   0x10
10025452:	call   0x10037620
10025457:	pop    ecx
10025458:	lea    ecx,[esp+0x38]
1002545c:	mov    edx,edi
1002545e:	call   0x10024f21
10025463:	lea    eax,[esp+0x24]
10025467:	mov    BYTE PTR [esp+0x60],0x1
1002546c:	call   0x10009963
10025471:	xor    ebx,ebx
10025473:	lea    eax,[esp+0x38]
10025477:	mov    BYTE PTR [esp+0x60],bl
1002547b:	call   0x1000d763
10025480:	mov    ecx,DWORD PTR [esp+0x58]
10025484:	mov    DWORD PTR fs:0x0,ecx
1002548b:	pop    ecx
1002548c:	pop    edi
1002548d:	pop    esi
1002548e:	pop    ebx
1002548f:	mov    esp,ebp
10025491:	pop    ebp
10025492:	ret    0x4
10025495:	push   0x8
10025497:	mov    eax,0x10063c00
1002549c:	call   0x10058878
100254a1:	lea    eax,[ebp+0xb]
100254a4:	push   eax
100254a5:	call   0x100375f0
100254aa:	and    DWORD PTR [ebp-0x4],0x0
100254ae:	mov    eax,DWORD PTR [ebp+0x8]
100254b1:	mov    DWORD PTR [ebp-0x14],eax
100254b4:	mov    BYTE PTR [ebp-0x4],0x2
100254b8:	push   DWORD PTR [eax+0x1c]
100254bb:	call   0x100251e0
100254c0:	mov    eax,DWORD PTR [ebp-0x14]
100254c3:	push   DWORD PTR [eax+0x30]
100254c6:	call   DWORD PTR ds:0x10065110
100254cc:	lea    ecx,[ebp-0x14]
100254cf:	call   0x10015ad1
100254d4:	call   0x10037610
100254d9:	xor    eax,eax
100254db:	call   0x1005891d
100254e0:	ret    0x4
100254e3:	push   0x4
100254e5:	call   0x10037620
100254ea:	pop    ecx
100254eb:	mov    eax,0x100254c0
100254f0:	ret    
100254f1:	push   ebp
100254f2:	mov    ebp,esp
100254f4:	push   ecx
100254f5:	push   ebx
100254f6:	push   esi
100254f7:	mov    esi,eax
100254f9:	mov    eax,DWORD PTR [ebp+0x8]
100254fc:	xor    ebx,ebx
100254fe:	push   edi
100254ff:	mov    DWORD PTR [esi],ebx
10025501:	call   0x100255af
10025506:	mov    edi,eax
10025508:	cmp    edi,ebx
1002550a:	je     0x100255a7
10025510:	mov    eax,DWORD PTR [edi+0x18]
10025513:	sub    eax,DWORD PTR [edi+0x20]
10025516:	cmp    eax,DWORD PTR [ebp+0x10]
10025519:	jbe    0x1002551e
1002551b:	mov    eax,DWORD PTR [ebp+0x10]
1002551e:	push   eax
1002551f:	mov    DWORD PTR [esi],eax
10025521:	mov    eax,DWORD PTR [edi+0x14]
10025524:	add    eax,DWORD PTR [edi+0x20]
10025527:	push   eax
10025528:	push   DWORD PTR [ebp+0xc]
1002552b:	call   0x10043ed0
10025530:	add    esp,0xc
10025533:	cmp    BYTE PTR [ebp+0x14],bl
10025536:	jne    0x100255a7
10025538:	mov    eax,DWORD PTR [esi]
1002553a:	add    DWORD PTR [edi+0x20],eax
1002553d:	mov    eax,DWORD PTR [edi+0x20]
10025540:	cmp    eax,DWORD PTR [edi+0x18]
10025543:	jb     0x100255a7
10025545:	cmp    DWORD PTR [edi],ebx
10025547:	je     0x1002559f
10025549:	call   0x1002f5b0
1002554e:	mov    esi,DWORD PTR [edi]
10025550:	sub    eax,DWORD PTR [esi+0x58]
10025553:	push   ebx
10025554:	sbb    edx,DWORD PTR [esi+0x5c]
10025557:	push   0x2710
1002555c:	push   edx
1002555d:	push   eax
1002555e:	call   0x1005e150
10025563:	push   DWORD PTR [esi+0x64]
10025566:	mov    ebx,eax
10025568:	push   DWORD PTR [esi+0x60]
1002556b:	push   ebx
1002556c:	call   DWORD PTR ds:0x10065118
10025572:	push   eax
10025573:	lea    eax,[esi+0x38]
10025576:	push   eax
10025577:	lea    eax,[esi+0x1c]
1002557a:	push   eax
1002557b:	push   esi
1002557c:	push   0x1007ff10
10025581:	call   0x10019fbe
10025586:	mov    edi,DWORD PTR [edi]
10025588:	cmp    DWORD PTR [edi+0x18],0x10
1002558c:	jb     0x10025593
1002558e:	mov    edi,DWORD PTR [edi+0x4]
10025591:	jmp    0x10025596
10025593:	add    edi,0x4
10025596:	push   edi
10025597:	push   ebx
10025598:	call   0x1000207c
1002559d:	pop    ecx
1002559e:	pop    ecx
1002559f:	push   DWORD PTR [ebp+0x8]
100255a2:	call   0x100259a0
100255a7:	pop    edi
100255a8:	pop    esi
100255a9:	pop    ebx
100255aa:	pop    ecx
100255ab:	pop    ebp
100255ac:	ret    0x10
100255af:	push   esi
100255b0:	push   edi
100255b1:	mov    esi,eax
100255b3:	lea    edi,[esi+0x38]
100255b6:	push   edi
100255b7:	call   DWORD PTR ds:0x100650f0
100255bd:	cmp    DWORD PTR [esi+0x28],0x0
100255c1:	jne    0x100255d1
100255c3:	xor    esi,esi
100255c5:	push   edi
100255c6:	call   DWORD PTR ds:0x100650ec
100255cc:	pop    edi
100255cd:	mov    eax,esi
100255cf:	pop    esi
100255d0:	ret    
100255d1:	add    esi,0x18
100255d4:	call   0x10025a3e
100255d9:	mov    esi,DWORD PTR [eax]
100255db:	jmp    0x100255c5
100255dd:	push   edi
100255de:	lea    edi,[esi+0x38]
100255e1:	push   edi
100255e2:	call   DWORD PTR ds:0x100650f0
100255e8:	push   edi
100255e9:	mov    BYTE PTR [esi],0x1
100255ec:	call   DWORD PTR ds:0x100650ec
100255f2:	pop    edi
100255f3:	ret    
100255f4:	push   ebx
100255f5:	push   edi
100255f6:	lea    edi,[esi+0x38]
100255f9:	push   edi
100255fa:	call   DWORD PTR ds:0x100650f0
10025600:	mov    bl,BYTE PTR [esi]
10025602:	push   edi
10025603:	call   DWORD PTR ds:0x100650ec
10025609:	pop    edi
1002560a:	mov    al,bl
1002560c:	pop    ebx
1002560d:	ret    
1002560e:	push   0x4
10025610:	mov    eax,0x100625bc
10025615:	call   0x10058845
1002561a:	mov    esi,ecx
1002561c:	lea    edi,[esi+0x38]
1002561f:	push   edi
10025620:	mov    DWORD PTR [ebp-0x10],edi
10025623:	call   DWORD PTR ds:0x100650f0
10025629:	xor    ebx,ebx
1002562b:	mov    DWORD PTR [ebp-0x4],ebx
1002562e:	cmp    DWORD PTR [esi+0x14],ebx
10025631:	jne    0x10025642
10025633:	push   edi
10025634:	call   DWORD PTR ds:0x100650ec
1002563a:	mov    al,bl
1002563c:	call   0x1005891d
10025641:	ret    
10025642:	add    esi,0x4
10025645:	call   0x10025a3e
1002564a:	mov    eax,DWORD PTR [eax]
1002564c:	cmp    eax,ebx
1002564e:	je     0x10025656
10025650:	push   eax
10025651:	call   0x100099e0
10025656:	mov    eax,DWORD PTR [esi+0x10]
10025659:	cmp    eax,ebx
1002565b:	je     0x1002567b
1002565d:	inc    DWORD PTR [esi+0xc]
10025660:	mov    edx,DWORD PTR [esi+0x8]
10025663:	mov    ecx,DWORD PTR [esi+0xc]
10025666:	shl    edx,0x2
10025669:	cmp    edx,ecx
1002566b:	ja     0x10025670
1002566d:	mov    DWORD PTR [esi+0xc],ebx
10025670:	dec    eax
10025671:	cmp    eax,ebx
10025673:	mov    DWORD PTR [esi+0x10],eax
10025676:	jne    0x1002567b
10025678:	mov    DWORD PTR [esi+0xc],ebx
1002567b:	mov    bl,0x1
1002567d:	jmp    0x10025633
1002567f:	push   0xc
10025681:	mov    eax,0x1005ee98
10025686:	call   0x10058845
1002568b:	mov    edi,ecx
1002568d:	and    DWORD PTR [ebp-0x4],0x0
10025691:	cmp    DWORD PTR [edi+0x18],0x0
10025695:	jne    0x1002569e
10025697:	call   0x100099a6
1002569c:	jmp    0x100256d5
1002569e:	lea    ebx,[esi+0x38]
100256a1:	push   ebx
100256a2:	mov    DWORD PTR [ebp-0x14],ebx
100256a5:	call   DWORD PTR ds:0x100650f0
100256ab:	lea    eax,[ebp-0x10]
100256ae:	mov    BYTE PTR [ebp-0x4],0x1
100256b2:	and    DWORD PTR [ebp-0x18],0x0
100256b6:	push   eax
100256b7:	lea    eax,[esi+0x18]
100256ba:	mov    DWORD PTR [ebp-0x10],edi
100256bd:	call   0x10025ace
100256c2:	mov    eax,DWORD PTR [esi+0x50]
100256c5:	push   DWORD PTR [eax+0x28]
100256c8:	call   DWORD PTR ds:0x10065110
100256ce:	push   ebx
100256cf:	call   DWORD PTR ds:0x100650ec
100256d5:	call   0x1005891d
100256da:	ret    
100256db:	push   0xa8
100256e0:	mov    eax,0x10061533
100256e5:	call   0x10058845
100256ea:	mov    edi,ecx
100256ec:	mov    eax,DWORD PTR [ebp+0x8]
100256ef:	add    eax,0x38
100256f2:	xor    esi,esi
100256f4:	mov    DWORD PTR [ebp-0x10],esi
100256f7:	push   eax
100256f8:	mov    BYTE PTR [ebp-0x11],0x0
100256fc:	mov    DWORD PTR [ebp-0x20],eax
100256ff:	mov    DWORD PTR [ebp-0x24],eax
10025702:	call   DWORD PTR ds:0x100650f0
10025708:	mov    eax,DWORD PTR [ebp+0x8]
1002570b:	mov    DWORD PTR [ebp-0x4],esi
1002570e:	cmp    DWORD PTR [eax+0x28],esi
10025711:	jne    0x1002571c
10025713:	mov    BYTE PTR [ebp-0x11],0x1
10025717:	jmp    0x1002585c
1002571c:	push   0x68
1002571e:	call   0x1004239e
10025723:	pop    ecx
10025724:	mov    DWORD PTR [ebp-0x1c],eax
10025727:	cmp    eax,esi
10025729:	mov    BYTE PTR [ebp-0x4],0x1
1002572d:	je     0x100257d8
10025733:	push   0x10070454
10025738:	push   0x7
1002573a:	push   0x1006c320
1002573f:	call   0x10003d75
10025744:	add    esp,0xc
10025747:	push   eax
10025748:	lea    ecx,[ebp-0x44]
1002574b:	call   0x100011d6
10025750:	mov    BYTE PTR [ebp-0x4],0x2
10025754:	mov    eax,DWORD PTR [edi+0x4]
10025757:	lea    ecx,[ebp-0x7c]
1002575a:	push   ecx
1002575b:	mov    DWORD PTR [ebp-0x10],0x1
10025762:	call   0x100194bf
10025767:	mov    DWORD PTR [ebp-0x18],eax
1002576a:	push   0x3
1002576c:	pop    eax
1002576d:	mov    DWORD PTR [ebp-0x4],eax
10025770:	mov    DWORD PTR [ebp-0x10],eax
10025773:	push   esi
10025774:	lea    eax,[ebp-0x44]
10025777:	push   eax
10025778:	lea    eax,[ebp-0x60]
1002577b:	push   eax
1002577c:	lea    eax,[ebx+0x18]
1002577f:	call   0x1000800f
10025784:	mov    esi,eax
10025786:	mov    DWORD PTR [ebp-0x4],0x4
1002578d:	push   ebx
1002578e:	lea    ecx,[ebp-0x98]
10025794:	mov    DWORD PTR [ebp-0x10],0x7
1002579b:	call   0x1000868a
100257a0:	mov    edx,eax
100257a2:	mov    DWORD PTR [ebp-0x4],0x5
100257a9:	mov    ecx,edi
100257ab:	mov    DWORD PTR [ebp-0x10],0xf
100257b2:	call   0x10008b1f
100257b7:	push   eax
100257b8:	mov    ecx,ebx
100257ba:	call   0x10008278
100257bf:	push   eax
100257c0:	push   DWORD PTR [edi+0x14]
100257c3:	push   DWORD PTR [edi+0x10]
100257c6:	push   DWORD PTR [ebp-0x18]
100257c9:	push   esi
100257ca:	push   edx
100257cb:	push   DWORD PTR [ebp-0x1c]
100257ce:	call   0x10024656
100257d3:	mov    DWORD PTR [ebp-0x18],eax
100257d6:	jmp    0x100257db
100257d8:	mov    DWORD PTR [ebp-0x18],esi
100257db:	mov    esi,DWORD PTR [ebp+0x8]
100257de:	add    esi,0x18
100257e1:	call   0x10025a3e
100257e6:	mov    eax,DWORD PTR [eax]
100257e8:	mov    esi,DWORD PTR [eax]
100257ea:	cmp    DWORD PTR [ebp-0x18],esi
100257ed:	mov    DWORD PTR [ebp+0x8],eax
100257f0:	je     0x100257fe
100257f2:	test   esi,esi
100257f4:	je     0x100257fe
100257f6:	call   0x10009979
100257fb:	mov    eax,DWORD PTR [ebp+0x8]
100257fe:	test   BYTE PTR [ebp-0x10],0x8
10025802:	mov    ecx,DWORD PTR [ebp-0x18]
10025805:	mov    DWORD PTR [eax],ecx
10025807:	je     0x1002581c
10025809:	and    DWORD PTR [ebp-0x10],0xfffffff7
1002580d:	push   0x0
1002580f:	push   0x1
10025811:	lea    ecx,[ebp-0x98]
10025817:	call   0x100012f9
1002581c:	test   BYTE PTR [ebp-0x10],0x4
10025820:	je     0x10025832
10025822:	and    DWORD PTR [ebp-0x10],0xfffffffb
10025826:	push   0x0
10025828:	push   0x1
1002582a:	lea    ecx,[ebp-0x60]
1002582d:	call   0x100012f9
10025832:	test   BYTE PTR [ebp-0x10],0x2
10025836:	je     0x10025848
10025838:	and    DWORD PTR [ebp-0x10],0xfffffffd
1002583c:	push   0x0
1002583e:	push   0x1
10025840:	lea    ecx,[ebp-0x7c]
10025843:	call   0x100012f9
10025848:	test   BYTE PTR [ebp-0x10],0x1
1002584c:	je     0x1002585a
1002584e:	push   0x0
10025850:	push   0x1
10025852:	lea    ecx,[ebp-0x44]
10025855:	call   0x100012f9
1002585a:	xor    esi,esi
1002585c:	push   DWORD PTR [ebp-0x20]
1002585f:	or     DWORD PTR [ebp-0x4],0xffffffff
10025863:	call   DWORD PTR ds:0x100650ec
10025869:	cmp    BYTE PTR [ebp-0x11],0x0
1002586d:	je     0x10025998
10025873:	mov    eax,DWORD PTR [edi+0x10]
10025876:	mov    DWORD PTR [ebp-0x28],eax
10025879:	mov    eax,DWORD PTR [edi+0x14]
1002587c:	mov    DWORD PTR [ebp-0x24],eax
1002587f:	call   0x1002f5b0
10025884:	sub    eax,DWORD PTR [ebp-0x28]
10025887:	push   esi
10025888:	sbb    edx,DWORD PTR [ebp-0x24]
1002588b:	push   0x2710
10025890:	push   edx
10025891:	push   eax
10025892:	call   0x1005e150
10025897:	push   0x26c17406
1002589c:	push   0x10070478
100258a1:	mov    DWORD PTR [ebp+0x8],eax
100258a4:	call   0x10003d63
100258a9:	push   eax
100258aa:	push   0x7
100258ac:	push   0x1006c320
100258b1:	call   0x10003d75
100258b6:	add    esp,0x14
100258b9:	push   eax
100258ba:	lea    ecx,[ebp-0x44]
100258bd:	call   0x100011d6
100258c2:	lea    ecx,[ebp-0x98]
100258c8:	mov    DWORD PTR [ebp-0x4],0xa
100258cf:	mov    eax,DWORD PTR [edi+0x4]
100258d2:	push   ecx
100258d3:	call   0x100194bf
100258d8:	mov    DWORD PTR [ebp-0x20],eax
100258db:	push   esi
100258dc:	lea    eax,[ebp-0x44]
100258df:	push   eax
100258e0:	lea    eax,[ebp-0x60]
100258e3:	push   eax
100258e4:	lea    eax,[ebx+0x18]
100258e7:	mov    BYTE PTR [ebp-0x4],0xb
100258eb:	call   0x1000800f
100258f0:	mov    DWORD PTR [ebp-0x1c],eax
100258f3:	push   ebx
100258f4:	lea    ecx,[ebp-0x7c]
100258f7:	mov    BYTE PTR [ebp-0x4],0xc
100258fb:	call   0x1000868a
10025900:	mov    DWORD PTR [ebp-0x18],eax
10025903:	mov    ecx,edi
10025905:	mov    BYTE PTR [ebp-0x4],0xd
10025909:	call   0x10008b1f
1002590e:	push   eax
1002590f:	mov    ecx,ebx
10025911:	call   0x10008278
10025916:	push   eax
10025917:	push   DWORD PTR [ebp+0x8]
1002591a:	call   DWORD PTR ds:0x10065118
10025920:	push   eax
10025921:	push   DWORD PTR [ebp-0x20]
10025924:	push   DWORD PTR [ebp-0x1c]
10025927:	push   DWORD PTR [ebp-0x18]
1002592a:	push   0x1007ff10
1002592f:	call   0x10019fbe
10025934:	xor    edi,edi
10025936:	push   esi
10025937:	inc    edi
10025938:	push   edi
10025939:	lea    ecx,[ebp-0x7c]
1002593c:	call   0x100012f9
10025941:	push   esi
10025942:	push   edi
10025943:	lea    ecx,[ebp-0x60]
10025946:	call   0x100012f9
1002594b:	push   esi
1002594c:	push   edi
1002594d:	lea    ecx,[ebp-0x98]
10025953:	call   0x100012f9
10025958:	or     DWORD PTR [ebp-0x4],0xffffffff
1002595c:	push   esi
1002595d:	push   edi
1002595e:	lea    ecx,[ebp-0x44]
10025961:	call   0x100012f9
10025966:	push   ebx
10025967:	lea    ecx,[ebp-0xb4]
1002596d:	call   0x1000868a
10025972:	cmp    DWORD PTR [eax+0x18],0x10
10025976:	jb     0x1002597d
10025978:	mov    eax,DWORD PTR [eax+0x4]
1002597b:	jmp    0x10025980
1002597d:	add    eax,0x4
10025980:	push   eax
10025981:	push   DWORD PTR [ebp+0x8]
10025984:	call   0x1000207c
10025989:	pop    ecx
1002598a:	pop    ecx
1002598b:	push   esi
1002598c:	push   edi
1002598d:	lea    ecx,[ebp-0xb4]
10025993:	call   0x100012f9
10025998:	call   0x1005891d
1002599d:	ret    0x4
100259a0:	push   ebx
100259a1:	push   ebp
100259a2:	mov    ebp,DWORD PTR [esp+0xc]
100259a6:	lea    eax,[ebp+0x38]
100259a9:	push   eax
100259aa:	mov    DWORD PTR [esp+0x10],eax
100259ae:	call   DWORD PTR ds:0x100650f0
100259b4:	xor    ebx,ebx
100259b6:	cmp    DWORD PTR [ebp+0x28],ebx
100259b9:	jne    0x100259cc
100259bb:	push   DWORD PTR [esp+0xc]
100259bf:	call   DWORD PTR ds:0x100650ec
100259c5:	pop    ebp
100259c6:	mov    al,bl
100259c8:	pop    ebx
100259c9:	ret    0x4
100259cc:	push   esi
100259cd:	push   edi
100259ce:	lea    esi,[ebp+0x18]
100259d1:	call   0x10025a3e
100259d6:	mov    edi,DWORD PTR [eax]
100259d8:	cmp    edi,ebx
100259da:	je     0x100259e1
100259dc:	call   0x100099a6
100259e1:	mov    eax,DWORD PTR [esi+0x10]
100259e4:	cmp    eax,ebx
100259e6:	je     0x10025a06
100259e8:	inc    DWORD PTR [esi+0xc]
100259eb:	mov    edx,DWORD PTR [esi+0x8]
100259ee:	mov    ecx,DWORD PTR [esi+0xc]
100259f1:	shl    edx,0x2
100259f4:	cmp    edx,ecx
100259f6:	ja     0x100259fb
100259f8:	mov    DWORD PTR [esi+0xc],ebx
100259fb:	dec    eax
100259fc:	cmp    eax,ebx
100259fe:	mov    DWORD PTR [esi+0x10],eax
10025a01:	jne    0x10025a06
10025a03:	mov    DWORD PTR [esi+0xc],ebx
10025a06:	cmp    DWORD PTR [ebp+0x28],ebx
10025a09:	pop    edi
10025a0a:	pop    esi
10025a0b:	jne    0x10025a1e
10025a0d:	cmp    BYTE PTR [ebp+0x1],bl
10025a10:	je     0x10025a1e
10025a12:	mov    eax,DWORD PTR [ebp+0x50]
10025a15:	push   DWORD PTR [eax+0x30]
10025a18:	call   DWORD PTR ds:0x10065110
10025a1e:	mov    bl,0x1
10025a20:	jmp    0x100259bb
10025a22:	mov    eax,esi
10025a24:	mov    BYTE PTR [esi+0x1],0x1
10025a28:	call   0x100255af
10025a2d:	test   eax,eax
10025a2f:	jne    0x10025a3d
10025a31:	mov    eax,DWORD PTR [esi+0x50]
10025a34:	push   DWORD PTR [eax+0x30]
10025a37:	call   DWORD PTR ds:0x10065110
10025a3d:	ret    
10025a3e:	mov    eax,DWORD PTR [esi+0x10]
10025a41:	push   ebx
10025a42:	push   ebp
10025a43:	mov    ebp,DWORD PTR [esi+0xc]
10025a46:	add    eax,ebp
10025a48:	cmp    ebp,eax
10025a4a:	push   edi
10025a4b:	jbe    0x10025a52
10025a4d:	call   0x100422b0
10025a52:	mov    eax,DWORD PTR [esi+0x10]
10025a55:	add    eax,DWORD PTR [esi+0xc]
10025a58:	mov    edi,ebp
10025a5a:	mov    ebx,ebp
10025a5c:	shr    edi,0x2
10025a5f:	and    ebx,0x3
10025a62:	cmp    ebp,eax
10025a64:	jb     0x10025a6b
10025a66:	call   0x100422b0
10025a6b:	mov    eax,DWORD PTR [esi+0x8]
10025a6e:	cmp    eax,edi
10025a70:	ja     0x10025a74
10025a72:	sub    edi,eax
10025a74:	mov    eax,DWORD PTR [esi+0x4]
10025a77:	mov    eax,DWORD PTR [eax+edi*4]
10025a7a:	pop    edi
10025a7b:	pop    ebp
10025a7c:	lea    eax,[eax+ebx*4]
10025a7f:	pop    ebx
10025a80:	ret    
10025a81:	push   ebx
10025a82:	xor    ebx,ebx
10025a84:	jmp    0x10025a98
10025a86:	mov    eax,DWORD PTR [esi+0x10]
10025a89:	cmp    eax,ebx
10025a8b:	je     0x10025a98
10025a8d:	dec    eax
10025a8e:	cmp    eax,ebx
10025a90:	mov    DWORD PTR [esi+0x10],eax
10025a93:	jne    0x10025a98
10025a95:	mov    DWORD PTR [esi+0xc],ebx
10025a98:	cmp    DWORD PTR [esi+0x10],ebx
10025a9b:	jne    0x10025a86
10025a9d:	push   edi
10025a9e:	mov    edi,DWORD PTR [esi+0x8]
10025aa1:	jmp    0x10025ab3
10025aa3:	dec    edi
10025aa4:	lea    eax,[eax+edi*4]
10025aa7:	cmp    DWORD PTR [eax],ebx
10025aa9:	je     0x10025ab3
10025aab:	push   DWORD PTR [eax]
10025aad:	call   0x10041d92
10025ab2:	pop    ecx
10025ab3:	cmp    edi,ebx
10025ab5:	mov    eax,DWORD PTR [esi+0x4]
10025ab8:	ja     0x10025aa3
10025aba:	cmp    eax,ebx
10025abc:	pop    edi
10025abd:	je     0x10025ac6
10025abf:	push   eax
10025ac0:	call   0x10041d92
10025ac5:	pop    ecx
10025ac6:	mov    DWORD PTR [esi+0x8],ebx
10025ac9:	mov    DWORD PTR [esi+0x4],ebx
10025acc:	pop    ebx
10025acd:	ret    
10025ace:	push   esi
10025acf:	mov    esi,eax
10025ad1:	mov    eax,DWORD PTR [esi+0x10]
10025ad4:	mov    ecx,DWORD PTR [esi+0xc]
10025ad7:	add    ecx,eax
10025ad9:	test   cl,0x3
10025adc:	push   edi
10025add:	jne    0x10025aef
10025adf:	add    eax,0x4
10025ae2:	shr    eax,0x2
10025ae5:	cmp    DWORD PTR [esi+0x8],eax
10025ae8:	ja     0x10025aef
10025aea:	call   0x10025b41
10025aef:	mov    edi,DWORD PTR [esi+0xc]
10025af2:	add    edi,DWORD PTR [esi+0x10]
10025af5:	mov    ecx,DWORD PTR [esi+0x8]
10025af8:	mov    eax,edi
10025afa:	shr    eax,0x2
10025afd:	cmp    ecx,eax
10025aff:	ja     0x10025b03
10025b01:	sub    eax,ecx
10025b03:	push   ebx
10025b04:	mov    ebx,eax
10025b06:	mov    eax,DWORD PTR [esi+0x4]
10025b09:	shl    ebx,0x2
10025b0c:	cmp    DWORD PTR [ebx+eax*1],0x0
10025b10:	jne    0x10025b20
10025b12:	push   0x10
10025b14:	call   0x1004239e
10025b19:	pop    ecx
10025b1a:	mov    ecx,DWORD PTR [esi+0x4]
10025b1d:	mov    DWORD PTR [ebx+ecx*1],eax
10025b20:	mov    eax,DWORD PTR [esi+0x4]
10025b23:	mov    eax,DWORD PTR [eax+ebx*1]
10025b26:	and    edi,0x3
10025b29:	lea    edi,[eax+edi*4]
10025b2c:	test   edi,edi
10025b2e:	pop    ebx
10025b2f:	je     0x10025b39
10025b31:	mov    eax,DWORD PTR [esp+0xc]
10025b35:	mov    eax,DWORD PTR [eax]
10025b37:	mov    DWORD PTR [edi],eax
10025b39:	inc    DWORD PTR [esi+0x10]
10025b3c:	pop    edi
10025b3d:	pop    esi
10025b3e:	ret    0x4
10025b41:	push   ebp
10025b42:	mov    ebp,esp
10025b44:	sub    esp,0xc
10025b47:	mov    eax,DWORD PTR [esi+0x8]
10025b4a:	push   ebx
10025b4b:	push   edi
10025b4c:	mov    edx,0xfffffff
10025b51:	xor    edi,edi
10025b53:	mov    ecx,edx
10025b55:	inc    edi
10025b56:	sub    ecx,eax
10025b58:	cmp    ecx,edi
10025b5a:	mov    DWORD PTR [ebp-0x4],edi
10025b5d:	jae    0x10025b64
10025b5f:	jmp    0x10025c28
10025b64:	mov    ecx,eax
10025b66:	shr    ecx,1
10025b68:	cmp    ecx,0x8
10025b6b:	jae    0x10025b70
10025b6d:	push   0x8
10025b6f:	pop    ecx
10025b70:	cmp    ecx,edi
10025b72:	jbe    0x10025b7d
10025b74:	sub    edx,ecx
10025b76:	cmp    eax,edx
10025b78:	ja     0x10025b7d
10025b7a:	mov    DWORD PTR [ebp-0x4],ecx
10025b7d:	mov    ebx,DWORD PTR [esi+0xc]
10025b80:	mov    ecx,DWORD PTR [ebp-0x4]
10025b83:	add    ecx,eax
10025b85:	shr    ebx,0x2
10025b88:	call   0x10025c67
10025b8d:	mov    edx,DWORD PTR [esi+0x4]
10025b90:	mov    edi,ebx
10025b92:	shl    edi,0x2
10025b95:	mov    DWORD PTR [ebp-0x8],eax
10025b98:	lea    ecx,[edi+eax*1]
10025b9b:	mov    eax,DWORD PTR [esi+0x8]
10025b9e:	lea    eax,[edx+eax*4]
10025ba1:	add    edx,edi
10025ba3:	push   edx
10025ba4:	call   0x10025cb3
10025ba9:	mov    edx,DWORD PTR [esi+0x4]
10025bac:	pop    ecx
10025bad:	mov    ecx,eax
10025baf:	mov    eax,DWORD PTR [ebp-0x4]
10025bb2:	cmp    ebx,eax
10025bb4:	push   edx
10025bb5:	ja     0x10025bdd
10025bb7:	sub    eax,ebx
10025bb9:	mov    DWORD PTR [ebp-0xc],eax
10025bbc:	lea    eax,[edx+edi*1]
10025bbf:	call   0x10025cb3
10025bc4:	pop    ecx
10025bc5:	mov    ecx,DWORD PTR [ebp-0xc]
10025bc8:	test   ecx,ecx
10025bca:	mov    edi,eax
10025bcc:	jbe    0x10025bd2
10025bce:	xor    eax,eax
10025bd0:	rep stos DWORD PTR es:[edi],eax
10025bd2:	test   ebx,ebx
10025bd4:	jbe    0x10025c0a
10025bd6:	mov    edi,DWORD PTR [ebp-0x8]
10025bd9:	mov    ecx,ebx
10025bdb:	jmp    0x10025c06
10025bdd:	mov    ebx,eax
10025bdf:	shl    ebx,0x2
10025be2:	lea    eax,[ebx+edx*1]
10025be5:	call   0x10025cb3
10025bea:	mov    ecx,DWORD PTR [esi+0x4]
10025bed:	add    ebx,ecx
10025bef:	lea    eax,[ecx+edi*1]
10025bf2:	mov    ecx,DWORD PTR [ebp-0x8]
10025bf5:	push   ebx
10025bf6:	call   0x10025cb3
10025bfb:	pop    ecx
10025bfc:	pop    ecx
10025bfd:	mov    ecx,DWORD PTR [ebp-0x4]
10025c00:	test   ecx,ecx
10025c02:	mov    edi,eax
10025c04:	jbe    0x10025c0a
10025c06:	xor    eax,eax
10025c08:	rep stos DWORD PTR es:[edi],eax
10025c0a:	mov    eax,DWORD PTR [esi+0x4]
10025c0d:	test   eax,eax
10025c0f:	pop    edi
10025c10:	pop    ebx
10025c11:	je     0x10025c1a
10025c13:	push   eax
10025c14:	call   0x10041d92
10025c19:	pop    ecx
10025c1a:	mov    eax,DWORD PTR [ebp-0x8]
10025c1d:	mov    DWORD PTR [esi+0x4],eax
10025c20:	mov    eax,DWORD PTR [ebp-0x4]
10025c23:	add    DWORD PTR [esi+0x8],eax
10025c26:	leave  
10025c27:	ret    
10025c28:	push   0x44
10025c2a:	mov    eax,0x1005ef45
10025c2f:	call   0x10058845
10025c34:	push   0x100704ac
10025c39:	lea    ecx,[ebp-0x28]
10025c3c:	call   0x100011d6
10025c41:	and    DWORD PTR [ebp-0x4],0x0
10025c45:	lea    eax,[ebp-0x28]
10025c48:	push   eax
10025c49:	lea    ecx,[ebp-0x50]
10025c4c:	call   0x10001065
10025c51:	push   0x10073960
10025c56:	lea    eax,[ebp-0x50]
10025c59:	push   eax
10025c5a:	mov    DWORD PTR [ebp-0x50],0x1006a77c
10025c61:	call   0x10046704
10025c66:	int3   
10025c67:	push   ebp
10025c68:	mov    ebp,esp
10025c6a:	sub    esp,0x10
10025c6d:	test   ecx,ecx
10025c6f:	ja     0x10025c81
10025c71:	xor    ecx,ecx
10025c73:	mov    eax,ecx
10025c75:	shl    eax,0x2
10025c78:	push   eax
10025c79:	call   0x1004239e
10025c7e:	pop    ecx
10025c7f:	leave  
10025c80:	ret    
10025c81:	or     eax,0xffffffff
10025c84:	xor    edx,edx
10025c86:	div    ecx
10025c88:	cmp    eax,0x4
10025c8b:	jae    0x10025c73
10025c8d:	and    DWORD PTR [ebp-0x4],0x0
10025c91:	lea    eax,[ebp-0x4]
10025c94:	push   eax
10025c95:	lea    ecx,[ebp-0x10]
10025c98:	call   0x10041e12
10025c9d:	push   0x100738b8
10025ca2:	lea    eax,[ebp-0x10]
10025ca5:	push   eax
10025ca6:	mov    DWORD PTR [ebp-0x10],0x100655b8
10025cad:	call   0x10046704
10025cb2:	int3   
10025cb3:	sub    eax,DWORD PTR [esp+0x4]
10025cb7:	push   esi
10025cb8:	sar    eax,0x2
10025cbb:	lea    eax,[eax*4+0x0]
10025cc2:	lea    esi,[eax+ecx*1]
10025cc5:	je     0x10025cd6
10025cc7:	push   eax
10025cc8:	push   DWORD PTR [esp+0xc]
10025ccc:	push   eax
10025ccd:	push   ecx
10025cce:	call   0x10041da6
10025cd3:	add    esp,0x10
10025cd6:	mov    eax,esi
10025cd8:	pop    esi
10025cd9:	ret    
10025cda:	push   0x34
10025cdc:	mov    eax,0x10062fd4
10025ce1:	call   0x10058845
10025ce6:	push   DWORD PTR [ebp+0xc]
10025ce9:	mov    BYTE PTR [ebp-0xd],0x0
10025ced:	call   0x1000831a
10025cf2:	mov    DWORD PTR [ebp-0x20],eax
10025cf5:	push   DWORD PTR [ebp+0xc]
10025cf8:	xor    esi,esi
10025cfa:	mov    DWORD PTR [ebp-0x4],esi
10025cfd:	call   0x1000831a
10025d02:	mov    DWORD PTR [ebp-0x14],eax
10025d05:	mov    DWORD PTR [ebp-0x1c],esi
10025d08:	mov    DWORD PTR [ebp-0x18],esi
10025d0b:	mov    ecx,DWORD PTR [ebp+0x8]
10025d0e:	mov    eax,DWORD PTR [ecx+0x4]
10025d11:	mov    edi,DWORD PTR [eax]
10025d13:	mov    esi,ecx
10025d15:	mov    DWORD PTR [ebp-0x24],edi
10025d18:	mov    DWORD PTR [ebp-0x28],esi
10025d1b:	test   esi,esi
10025d1d:	mov    ebx,DWORD PTR [ecx+0x4]
10025d20:	je     0x10025d26
10025d22:	cmp    esi,ecx
10025d24:	je     0x10025d2b
10025d26:	call   0x100422b0
10025d2b:	cmp    edi,ebx
10025d2d:	je     0x10025dd5
10025d33:	mov    eax,DWORD PTR [ebp-0x20]
10025d36:	and    DWORD PTR [ebp-0x38],0x0
10025d3a:	and    DWORD PTR [ebp-0x34],0x0
10025d3e:	mov    DWORD PTR [ebp-0x40],eax
10025d41:	mov    eax,DWORD PTR [ebp-0x14]
10025d44:	mov    DWORD PTR [ebp-0x3c],eax
10025d47:	mov    eax,DWORD PTR [ebp+0x10]
10025d4a:	mov    DWORD PTR [ebp-0x30],eax
10025d4d:	mov    BYTE PTR [ebp-0x2c],0x0
10025d51:	test   esi,esi
10025d53:	mov    BYTE PTR [ebp-0x4],0x4
10025d57:	jne    0x10025d5e
10025d59:	call   0x100422b0
10025d5e:	cmp    edi,DWORD PTR [esi+0x4]
10025d61:	jne    0x10025d68
10025d63:	call   0x100422b0
10025d68:	mov    edi,DWORD PTR [edi+0x8]
10025d6b:	mov    eax,DWORD PTR [edi]
10025d6d:	lea    ecx,[ebp-0x40]
10025d70:	push   ecx
10025d71:	mov    ecx,edi
10025d73:	call   DWORD PTR [eax]
10025d75:	test   al,al
10025d77:	je     0x10025e0c
10025d7d:	push   DWORD PTR [ebp-0x14]
10025d80:	mov    BYTE PTR [ebp-0xd],0x1
10025d84:	push   DWORD PTR [ebp+0xc]
10025d87:	call   0x100083de
10025d8c:	mov    eax,DWORD PTR [ebp-0x38]
10025d8f:	and    DWORD PTR [ebp-0x38],0x0
10025d93:	mov    ebx,eax
10025d95:	lea    edi,[ebp-0x1c]
10025d98:	call   0x10026331
10025d9d:	mov    ebx,DWORD PTR [ebp-0x34]
10025da0:	mov    edi,DWORD PTR [ebp-0x18]
10025da3:	and    DWORD PTR [ebp-0x34],0x0
10025da7:	cmp    ebx,edi
10025da9:	je     0x10025db4
10025dab:	test   edi,edi
10025dad:	je     0x10025db4
10025daf:	call   0x100099a6
10025db4:	cmp    BYTE PTR [ebp-0x2c],0x0
10025db8:	mov    DWORD PTR [ebp-0x18],ebx
10025dbb:	je     0x10025e34
10025dbd:	mov    BYTE PTR [ebp-0x4],0x3
10025dc1:	mov    edi,DWORD PTR [ebp-0x34]
10025dc4:	test   edi,edi
10025dc6:	je     0x10025dcd
10025dc8:	call   0x100099a6
10025dcd:	lea    eax,[ebp-0x38]
10025dd0:	call   0x10009963
10025dd5:	cmp    BYTE PTR [ebp-0xd],0x0
10025dd9:	je     0x10025e81
10025ddf:	mov    eax,DWORD PTR [ebp-0x1c]
10025de2:	test   eax,eax
10025de4:	je     0x10025e62
10025de6:	mov    ecx,DWORD PTR [eax+0x34]
10025de9:	mov    ecx,DWORD PTR [ecx+0x18]
10025dec:	mov    ebx,DWORD PTR [ebp+0x14]
10025def:	mov    DWORD PTR [eax+0x38],ecx
10025df2:	mov    esi,DWORD PTR [eax+0x34]
10025df5:	and    DWORD PTR [eax+0x34],0x0
10025df9:	mov    edi,DWORD PTR [ebx]
10025dfb:	cmp    esi,edi
10025dfd:	je     0x10025e08
10025dff:	test   edi,edi
10025e01:	je     0x10025e08
10025e03:	call   0x100099a6
10025e08:	mov    DWORD PTR [ebx],esi
10025e0a:	jmp    0x10025e81
10025e0c:	mov    esi,DWORD PTR [ebp+0xc]
10025e0f:	mov    edi,DWORD PTR [ebp-0x14]
10025e12:	call   0x1000853b
10025e17:	test   al,al
10025e19:	jne    0x10025e34
10025e1b:	push   esi
10025e1c:	call   0x1000831a
10025e21:	mov    esi,eax
10025e23:	cmp    esi,edi
10025e25:	je     0x10025e31
10025e27:	test   edi,edi
10025e29:	je     0x10025e31
10025e2b:	push   edi
10025e2c:	call   0x100099e0
10025e31:	mov    DWORD PTR [ebp-0x14],esi
10025e34:	mov    BYTE PTR [ebp-0x4],0x3
10025e38:	mov    edi,DWORD PTR [ebp-0x34]
10025e3b:	test   edi,edi
10025e3d:	je     0x10025e44
10025e3f:	call   0x100099a6
10025e44:	lea    eax,[ebp-0x38]
10025e47:	call   0x10009963
10025e4c:	lea    esi,[ebp-0x28]
10025e4f:	call   0x1002634d
10025e54:	mov    edi,DWORD PTR [ebp-0x24]
10025e57:	mov    esi,DWORD PTR [ebp-0x28]
10025e5a:	mov    ecx,DWORD PTR [ebp+0x8]
10025e5d:	jmp    0x10025d1b
10025e62:	mov    ebx,DWORD PTR [ebp-0x18]
10025e65:	test   ebx,ebx
10025e67:	je     0x10025e8d
10025e69:	mov    esi,DWORD PTR [ebp+0x14]
10025e6c:	mov    edi,DWORD PTR [esi]
10025e6e:	and    DWORD PTR [ebp-0x18],0x0
10025e72:	cmp    ebx,edi
10025e74:	je     0x10025e7f
10025e76:	test   edi,edi
10025e78:	je     0x10025e7f
10025e7a:	call   0x100099a6
10025e7f:	mov    DWORD PTR [esi],ebx
10025e81:	mov    edi,DWORD PTR [ebp-0x18]
10025e84:	test   edi,edi
10025e86:	je     0x10025e8d
10025e88:	call   0x100099a6
10025e8d:	lea    eax,[ebp-0x1c]
10025e90:	mov    BYTE PTR [ebp-0x4],0x1
10025e94:	call   0x10009963
10025e99:	mov    BYTE PTR [ebp-0x4],0x0
10025e9d:	cmp    DWORD PTR [ebp-0x14],0x0
10025ea1:	je     0x10025eab
10025ea3:	push   DWORD PTR [ebp-0x14]
10025ea6:	call   0x100099e0
10025eab:	or     DWORD PTR [ebp-0x4],0xffffffff
10025eaf:	cmp    DWORD PTR [ebp-0x20],0x0
10025eb3:	je     0x10025ebd
10025eb5:	push   DWORD PTR [ebp-0x20]
10025eb8:	call   0x100099e0
10025ebd:	mov    al,BYTE PTR [ebp-0xd]
10025ec0:	call   0x1005891d
10025ec5:	ret    
10025ec6:	push   edi
10025ec7:	mov    edi,DWORD PTR [esi+0xc]
10025eca:	test   edi,edi
10025ecc:	je     0x10025ed3
10025ece:	call   0x100099a6
10025ed3:	lea    eax,[esi+0x8]
10025ed6:	pop    edi
10025ed7:	jmp    0x10009963
10025edc:	push   0x30
10025ede:	mov    eax,0x10062f91
10025ee3:	call   0x10058845
10025ee8:	push   DWORD PTR [ebp+0x14]
10025eeb:	mov    BYTE PTR [ebp-0xd],0x0
10025eef:	call   0x10008b2e
10025ef4:	mov    DWORD PTR [ebp-0x18],eax
10025ef7:	push   DWORD PTR [ebp+0x14]
10025efa:	and    DWORD PTR [ebp-0x4],0x0
10025efe:	call   0x10008b2e
10025f03:	mov    DWORD PTR [ebp-0x14],eax
10025f06:	mov    ebx,DWORD PTR [ebp+0x8]
10025f09:	mov    BYTE PTR [ebp-0x4],0x1
10025f0d:	mov    eax,DWORD PTR [ebx+0x4]
10025f10:	mov    esi,DWORD PTR [eax]
10025f12:	mov    edi,ebx
10025f14:	mov    DWORD PTR [ebp-0x1c],esi
10025f17:	mov    DWORD PTR [ebp-0x20],edi
10025f1a:	test   edi,edi
10025f1c:	mov    eax,DWORD PTR [ebx+0x4]
10025f1f:	mov    DWORD PTR [ebp-0x24],eax
10025f22:	je     0x10025f28
10025f24:	cmp    edi,ebx
10025f26:	je     0x10025f2d
10025f28:	call   0x100422b0
10025f2d:	cmp    esi,DWORD PTR [ebp-0x24]
10025f30:	je     0x10025f97
10025f32:	test   edi,edi
10025f34:	mov    ecx,DWORD PTR [ebp+0xc]
10025f37:	mov    eax,DWORD PTR [ebp+0x18]
10025f3a:	mov    al,BYTE PTR [eax]
10025f3c:	mov    DWORD PTR [ebp-0x3c],ecx
10025f3f:	mov    ecx,DWORD PTR [ebp-0x18]
10025f42:	mov    DWORD PTR [ebp-0x38],ecx
10025f45:	mov    ecx,DWORD PTR [ebp-0x14]
10025f48:	mov    DWORD PTR [ebp-0x34],ecx
10025f4b:	mov    ecx,DWORD PTR [ebp+0x10]
10025f4e:	mov    DWORD PTR [ebp-0x30],ecx
10025f51:	mov    BYTE PTR [ebp-0x2c],al
10025f54:	mov    BYTE PTR [ebp-0x2b],0x0
10025f58:	jne    0x10025f5f
10025f5a:	call   0x100422b0
10025f5f:	cmp    esi,DWORD PTR [edi+0x4]
10025f62:	jne    0x10025f69
10025f64:	call   0x100422b0
10025f69:	mov    esi,DWORD PTR [esi+0x8]
10025f6c:	mov    eax,DWORD PTR [esi]
10025f6e:	lea    ecx,[ebp-0x3c]
10025f71:	push   ecx
10025f72:	mov    ecx,esi
10025f74:	call   DWORD PTR [eax]
10025f76:	test   al,al
10025f78:	je     0x10025fb8
10025f7a:	mov    al,BYTE PTR [ebp-0x2c]
10025f7d:	mov    ecx,DWORD PTR [ebp+0x18]
10025f80:	push   DWORD PTR [ebp-0x14]
10025f83:	mov    edi,DWORD PTR [ebp+0x14]
10025f86:	mov    BYTE PTR [ebp-0xd],0x1
10025f8a:	mov    BYTE PTR [ecx],al
10025f8c:	call   0x10008c02
10025f91:	cmp    BYTE PTR [ebp-0x2b],0x0
10025f95:	je     0x10025fda
10025f97:	lea    eax,[ebp-0x14]
10025f9a:	mov    BYTE PTR [ebp-0x4],0x0
10025f9e:	call   0x10009963
10025fa3:	or     DWORD PTR [ebp-0x4],0xffffffff
10025fa7:	lea    eax,[ebp-0x18]
10025faa:	call   0x10009963
10025faf:	mov    al,BYTE PTR [ebp-0xd]
10025fb2:	call   0x1005891d
10025fb7:	ret    
10025fb8:	mov    esi,DWORD PTR [ebp+0x14]
10025fbb:	mov    edi,DWORD PTR [ebp-0x14]
10025fbe:	call   0x10008d95
10025fc3:	test   al,al
10025fc5:	jne    0x10025fda
10025fc7:	push   esi
10025fc8:	call   0x10008b2e
10025fcd:	mov    ebx,eax
10025fcf:	lea    edi,[ebp-0x14]
10025fd2:	call   0x10026331
10025fd7:	mov    ebx,DWORD PTR [ebp+0x8]
10025fda:	lea    esi,[ebp-0x20]
10025fdd:	call   0x1002634d
10025fe2:	mov    esi,DWORD PTR [ebp-0x1c]
10025fe5:	mov    edi,DWORD PTR [ebp-0x20]
10025fe8:	jmp    0x10025f1a
10025fed:	push   0x34
10025fef:	mov    eax,0x10062f66
10025ff4:	call   0x10058845
10025ff9:	push   DWORD PTR [ebp+0x14]
10025ffc:	mov    BYTE PTR [ebp-0x11],0x0
10026000:	call   0x10008b2e
10026005:	mov    DWORD PTR [ebp-0x1c],eax
10026008:	push   DWORD PTR [ebp+0x14]
1002600b:	and    DWORD PTR [ebp-0x4],0x0
1002600f:	call   0x10008b2e
10026014:	mov    DWORD PTR [ebp-0x18],eax
10026017:	mov    ebx,DWORD PTR [ebp+0x8]
1002601a:	mov    BYTE PTR [ebp-0x4],0x1
1002601e:	mov    eax,DWORD PTR [ebx+0x4]
10026021:	mov    esi,DWORD PTR [eax]
10026023:	mov    edi,ebx
10026025:	mov    DWORD PTR [ebp-0x20],esi
10026028:	mov    DWORD PTR [ebp-0x24],edi
1002602b:	test   edi,edi
1002602d:	mov    eax,DWORD PTR [ebx+0x4]
10026030:	mov    DWORD PTR [ebp-0x28],eax
10026033:	je     0x10026039
10026035:	cmp    edi,ebx
10026037:	je     0x1002603e
10026039:	call   0x100422b0
1002603e:	cmp    esi,DWORD PTR [ebp-0x28]
10026041:	je     0x10026098
10026043:	test   edi,edi
10026045:	mov    eax,DWORD PTR [ebp+0xc]
10026048:	mov    DWORD PTR [ebp-0x40],eax
1002604b:	mov    eax,DWORD PTR [ebp-0x1c]
1002604e:	mov    DWORD PTR [ebp-0x3c],eax
10026051:	mov    eax,DWORD PTR [ebp-0x18]
10026054:	mov    DWORD PTR [ebp-0x38],eax
10026057:	mov    eax,DWORD PTR [ebp+0x10]
1002605a:	mov    DWORD PTR [ebp-0x34],eax
1002605d:	mov    BYTE PTR [ebp-0x30],0x0
10026061:	jne    0x10026068
10026063:	call   0x100422b0
10026068:	cmp    esi,DWORD PTR [edi+0x4]
1002606b:	jne    0x10026072
1002606d:	call   0x100422b0
10026072:	mov    esi,DWORD PTR [esi+0x8]
10026075:	mov    eax,DWORD PTR [esi]
10026077:	lea    ecx,[ebp-0x40]
1002607a:	push   ecx
1002607b:	mov    ecx,esi
1002607d:	call   DWORD PTR [eax]
1002607f:	test   al,al
10026081:	je     0x100260b9
10026083:	push   DWORD PTR [ebp-0x18]
10026086:	mov    edi,DWORD PTR [ebp+0x14]
10026089:	mov    BYTE PTR [ebp-0x11],0x1
1002608d:	call   0x10008c02
10026092:	cmp    BYTE PTR [ebp-0x30],0x0
10026096:	je     0x100260db
10026098:	lea    eax,[ebp-0x18]
1002609b:	mov    BYTE PTR [ebp-0x4],0x0
1002609f:	call   0x10009963
100260a4:	or     DWORD PTR [ebp-0x4],0xffffffff
100260a8:	lea    eax,[ebp-0x1c]
100260ab:	call   0x10009963
100260b0:	mov    al,BYTE PTR [ebp-0x11]
100260b3:	call   0x1005891d
100260b8:	ret    
100260b9:	mov    esi,DWORD PTR [ebp+0x14]
100260bc:	mov    edi,DWORD PTR [ebp-0x18]
100260bf:	call   0x10008d95
100260c4:	test   al,al
100260c6:	jne    0x100260db
100260c8:	push   esi
100260c9:	call   0x10008b2e
100260ce:	mov    ebx,eax
100260d0:	lea    edi,[ebp-0x18]
100260d3:	call   0x10026331
100260d8:	mov    ebx,DWORD PTR [ebp+0x8]
100260db:	lea    esi,[ebp-0x24]
100260de:	call   0x1002634d
100260e3:	mov    esi,DWORD PTR [ebp-0x20]
100260e6:	mov    edi,DWORD PTR [ebp-0x24]
100260e9:	jmp    0x1002602b
100260ee:	push   ebp
100260ef:	mov    ebp,esp
100260f1:	sub    esp,0x20
100260f4:	mov    eax,DWORD PTR [ebp+0x8]
100260f7:	mov    DWORD PTR [ebp-0x20],eax
100260fa:	mov    eax,DWORD PTR [ebp+0xc]
100260fd:	push   ebx
100260fe:	mov    DWORD PTR [ebp-0x1c],eax
10026101:	mov    eax,DWORD PTR [edi+0x4]
10026104:	push   esi
10026105:	mov    BYTE PTR [ebp-0x18],0x0
10026109:	mov    esi,DWORD PTR [eax]
1002610b:	mov    ebx,edi
1002610d:	mov    BYTE PTR [ebp-0x1],0x0
10026111:	mov    DWORD PTR [ebp-0x8],esi
10026114:	mov    DWORD PTR [ebp-0xc],ebx
10026117:	test   ebx,ebx
10026119:	mov    eax,DWORD PTR [edi+0x4]
1002611c:	mov    DWORD PTR [ebp-0x10],eax
1002611f:	je     0x10026125
10026121:	cmp    ebx,edi
10026123:	je     0x1002612a
10026125:	call   0x100422b0
1002612a:	cmp    esi,DWORD PTR [ebp-0x10]
1002612d:	je     0x1002617b
1002612f:	test   ebx,ebx
10026131:	jne    0x10026138
10026133:	call   0x100422b0
10026138:	cmp    esi,DWORD PTR [ebx+0x4]
1002613b:	jne    0x10026142
1002613d:	call   0x100422b0
10026142:	mov    ecx,DWORD PTR [esi+0x8]
10026145:	mov    eax,DWORD PTR [ecx]
10026147:	lea    edx,[ebp-0x20]
1002614a:	push   edx
1002614b:	call   DWORD PTR [eax]
1002614d:	test   al,al
1002614f:	je     0x1002616b
10026151:	cmp    BYTE PTR [ebp-0x18],0x0
10026155:	mov    BYTE PTR [ebp-0x1],0x1
10026159:	jne    0x1002617b
1002615b:	mov    eax,DWORD PTR [ebp+0x8]
1002615e:	cmp    DWORD PTR [eax],0x0
10026161:	je     0x1002617b
10026163:	mov    eax,DWORD PTR [ebp+0xc]
10026166:	cmp    DWORD PTR [eax],0x0
10026169:	je     0x1002617b
1002616b:	lea    esi,[ebp-0xc]
1002616e:	call   0x1002634d
10026173:	mov    esi,DWORD PTR [ebp-0x8]
10026176:	mov    ebx,DWORD PTR [ebp-0xc]
10026179:	jmp    0x10026117
1002617b:	mov    al,BYTE PTR [ebp-0x1]
1002617e:	pop    esi
1002617f:	pop    ebx
10026180:	leave  
10026181:	ret    
10026182:	push   ebp
10026183:	mov    ebp,esp
10026185:	and    esp,0xfffffff8
10026188:	sub    esp,0x30
1002618b:	mov    eax,ds:0x1007d030
10026190:	xor    eax,esp
10026192:	mov    DWORD PTR [esp+0x2c],eax
10026196:	push   0x10
10026198:	pop    eax
10026199:	mov    DWORD PTR [esp+0x8],eax
1002619d:	mov    DWORD PTR [esp+0x4],eax
100261a1:	lea    eax,[esp+0x8]
100261a5:	push   eax
100261a6:	lea    eax,[esp+0x20]
100261aa:	push   eax
100261ab:	push   DWORD PTR [esi]
100261ad:	call   DWORD PTR ds:0x100653a4
100261b3:	cmp    eax,0xffffffff
100261b6:	je     0x10026233
100261b8:	lea    eax,[esp+0x4]
100261bc:	push   eax
100261bd:	lea    eax,[esp+0x10]
100261c1:	push   eax
100261c2:	push   DWORD PTR [esi]
100261c4:	call   DWORD PTR ds:0x100653a0
100261ca:	cmp    eax,0xffffffff
100261cd:	je     0x10026233
100261cf:	cmp    WORD PTR [esp+0xc],0x2
100261d5:	jne    0x10026233
100261d7:	cmp    WORD PTR [esp+0x1c],0x2
100261dd:	jne    0x10026233
100261df:	mov    eax,DWORD PTR [esp+0x10]
100261e3:	cmp    eax,DWORD PTR [esp+0x20]
100261e7:	je     0x1002622f
100261e9:	push   0x6da38d96
100261ee:	push   0x3c761764
100261f3:	push   0x419a61b2
100261f8:	push   0x100704e8
100261fd:	call   0x10003d63
10026202:	pop    ecx
10026203:	pop    ecx
10026204:	push   eax
10026205:	call   0x10003d63
1002620a:	pop    ecx
1002620b:	pop    ecx
1002620c:	push   eax
1002620d:	call   0x10003d63
10026212:	push   eax
10026213:	push   0x9
10026215:	push   0x10070514
1002621a:	call   0x10003d75
1002621f:	add    esp,0x14
10026222:	push   eax
10026223:	call   DWORD PTR ds:0x100653d4
10026229:	cmp    DWORD PTR [esp+0x10],eax
1002622d:	jne    0x10026233
1002622f:	mov    al,0x1
10026231:	jmp    0x10026235
10026233:	xor    al,al
10026235:	mov    ecx,DWORD PTR [esp+0x2c]
10026239:	xor    ecx,esp
1002623b:	call   0x10041d97
10026240:	mov    esp,ebp
10026242:	pop    ebp
10026243:	ret    
10026244:	push   ebp
10026245:	mov    ebp,esp
10026247:	and    esp,0xfffffff8
1002624a:	push   0xffffffff
1002624c:	push   0x10060910
10026251:	mov    eax,fs:0x0
10026257:	push   eax
10026258:	sub    esp,0x3c
1002625b:	push   ebx
1002625c:	push   esi
1002625d:	mov    eax,ds:0x1007d030
10026262:	xor    eax,esp
10026264:	push   eax
10026265:	lea    eax,[esp+0x48]
10026269:	mov    fs:0x0,eax
1002626f:	push   0x2841ee3e
10026274:	push   0x10070558
10026279:	call   0x10003d63
1002627e:	push   0x16da649c
10026283:	push   eax
10026284:	call   0x10003d63
10026289:	push   eax
1002628a:	push   0x5
1002628c:	push   0x10070598
10026291:	call   0x10003d75
10026296:	add    esp,0x1c
10026299:	push   eax
1002629a:	lea    ecx,[esp+0x10]
1002629e:	call   0x100011d6
100262a3:	and    DWORD PTR [esp+0x50],0x0
100262a8:	push   0x0
100262aa:	lea    eax,[esp+0x10]
100262ae:	push   eax
100262af:	lea    eax,[esp+0x30]
100262b3:	push   eax
100262b4:	mov    eax,DWORD PTR [ebp+0x8]
100262b7:	add    eax,0x18
100262ba:	call   0x1000800f
100262bf:	mov    esi,eax
100262c1:	push   0x428bbda6
100262c6:	push   0x10070520
100262cb:	mov    BYTE PTR [esp+0x58],0x1
100262d0:	call   0x10003d63
100262d5:	cmp    DWORD PTR [esi+0x18],0x10
100262d9:	pop    ecx
100262da:	pop    ecx
100262db:	jb     0x100262e2
100262dd:	mov    esi,DWORD PTR [esi+0x4]
100262e0:	jmp    0x100262e5
100262e2:	add    esi,0x4
100262e5:	push   eax
100262e6:	push   0x8
100262e8:	push   0x1007054c
100262ed:	call   0x10003d75
100262f2:	add    esp,0xc
100262f5:	push   eax
100262f6:	push   esi
100262f7:	call   0x10044780
100262fc:	pop    ecx
100262fd:	pop    ecx
100262fe:	push   0x0
10026300:	test   eax,eax
10026302:	push   0x1
10026304:	lea    ecx,[esp+0x30]
10026308:	setne  bl
1002630b:	call   0x100012f9
10026310:	push   0x0
10026312:	push   0x1
10026314:	lea    ecx,[esp+0x14]
10026318:	call   0x100012f9
1002631d:	mov    al,bl
1002631f:	mov    ecx,DWORD PTR [esp+0x48]
10026323:	mov    DWORD PTR fs:0x0,ecx
1002632a:	pop    ecx
1002632b:	pop    esi
1002632c:	pop    ebx
1002632d:	mov    esp,ebp
1002632f:	pop    ebp
10026330:	ret    
10026331:	push   esi
10026332:	mov    esi,DWORD PTR [edi]
10026334:	cmp    ebx,esi
10026336:	je     0x10026349
10026338:	test   esi,esi
1002633a:	je     0x10026349
1002633c:	push   esi
1002633d:	call   0x10009a43
10026342:	push   esi
10026343:	call   0x10041d92
10026348:	pop    ecx
10026349:	mov    DWORD PTR [edi],ebx
1002634b:	pop    esi
1002634c:	ret    
1002634d:	cmp    DWORD PTR [esi],0x0
10026350:	jne    0x10026357
10026352:	call   0x100422b0
10026357:	mov    eax,DWORD PTR [esi]
10026359:	mov    ecx,DWORD PTR [esi+0x4]
1002635c:	cmp    ecx,DWORD PTR [eax+0x4]
1002635f:	jne    0x10026366
10026361:	call   0x100422b0
10026366:	mov    eax,DWORD PTR [esi+0x4]
10026369:	mov    eax,DWORD PTR [eax]
1002636b:	mov    DWORD PTR [esi+0x4],eax
1002636e:	mov    eax,esi
10026370:	ret    
10026371:	push   ebp
10026372:	mov    ebp,esp
10026374:	and    esp,0xfffffff8
10026377:	push   0xffffffff
10026379:	push   0x1005f8c7
1002637e:	mov    eax,fs:0x0
10026384:	push   eax
10026385:	sub    esp,0x28
10026388:	push   ebx
10026389:	push   esi
1002638a:	push   edi
1002638b:	mov    eax,ds:0x1007d030
10026390:	xor    eax,esp
10026392:	push   eax
10026393:	lea    eax,[esp+0x38]
10026397:	mov    fs:0x0,eax
1002639d:	xor    ebx,ebx
1002639f:	cmp    DWORD PTR ds:0x1007ff70,ebx
100263a5:	jne    0x10026621
100263ab:	call   0x1002693e
100263b0:	mov    DWORD PTR [esp+0x20],eax
100263b4:	mov    DWORD PTR [esp+0x24],ebx
100263b8:	push   0x4
100263ba:	pop    esi
100263bb:	push   esi
100263bc:	mov    DWORD PTR [esp+0x44],ebx
100263c0:	call   0x1004239e
100263c5:	cmp    eax,ebx
100263c7:	pop    ecx
100263c8:	je     0x100263d6
100263ca:	mov    DWORD PTR [eax],0x100705d8
100263d0:	mov    DWORD PTR [esp+0x14],eax
100263d4:	jmp    0x100263da
100263d6:	mov    DWORD PTR [esp+0x14],ebx
100263da:	mov    eax,DWORD PTR [esp+0x20]
100263de:	push   eax
100263df:	lea    ecx,[esp+0x20]
100263e3:	push   ecx
100263e4:	lea    eax,[esp+0x1c]
100263e8:	push   eax
100263e9:	mov    edi,ecx
100263eb:	call   0x100268ce
100263f0:	push   esi
100263f1:	call   0x1004239e
100263f6:	cmp    eax,ebx
100263f8:	pop    ecx
100263f9:	je     0x10026407
100263fb:	mov    DWORD PTR [eax],0x100705e0
10026401:	mov    DWORD PTR [esp+0x14],eax
10026405:	jmp    0x1002640b
10026407:	mov    DWORD PTR [esp+0x14],ebx
1002640b:	mov    eax,DWORD PTR [esp+0x20]
1002640f:	push   eax
10026410:	lea    ecx,[esp+0x20]
10026414:	push   ecx
10026415:	lea    eax,[esp+0x1c]
10026419:	push   eax
1002641a:	mov    edi,ecx
1002641c:	call   0x100268ce
10026421:	push   esi
10026422:	call   0x1004239e
10026427:	cmp    eax,ebx
10026429:	pop    ecx
1002642a:	je     0x10026438
1002642c:	mov    DWORD PTR [eax],0x100705f8
10026432:	mov    DWORD PTR [esp+0x14],eax
10026436:	jmp    0x1002643c
10026438:	mov    DWORD PTR [esp+0x14],ebx
1002643c:	mov    eax,DWORD PTR [esp+0x20]
10026440:	push   eax
10026441:	lea    ecx,[esp+0x20]
10026445:	push   ecx
10026446:	lea    eax,[esp+0x1c]
1002644a:	push   eax
1002644b:	mov    edi,ecx
1002644d:	call   0x100268ce
10026452:	push   esi
10026453:	call   0x1004239e
10026458:	cmp    eax,ebx
1002645a:	pop    ecx
1002645b:	je     0x10026469
1002645d:	mov    DWORD PTR [eax],0x10070608
10026463:	mov    DWORD PTR [esp+0x14],eax
10026467:	jmp    0x1002646d
10026469:	mov    DWORD PTR [esp+0x14],ebx
1002646d:	mov    eax,DWORD PTR [esp+0x20]
10026471:	push   eax
10026472:	lea    ecx,[esp+0x20]
10026476:	push   ecx
10026477:	lea    eax,[esp+0x1c]
1002647b:	push   eax
1002647c:	mov    edi,ecx
1002647e:	call   0x100268ce
10026483:	push   esi
10026484:	call   0x1004239e
10026489:	cmp    eax,ebx
1002648b:	pop    ecx
1002648c:	je     0x1002649a
1002648e:	mov    DWORD PTR [eax],0x10070618
10026494:	mov    DWORD PTR [esp+0x14],eax
10026498:	jmp    0x1002649e
1002649a:	mov    DWORD PTR [esp+0x14],ebx
1002649e:	mov    eax,DWORD PTR [esp+0x20]
100264a2:	push   eax
100264a3:	lea    ecx,[esp+0x20]
100264a7:	push   ecx
100264a8:	lea    eax,[esp+0x1c]
100264ac:	push   eax
100264ad:	mov    edi,ecx
100264af:	call   0x100268ce
100264b4:	push   esi
100264b5:	call   0x1004239e
100264ba:	cmp    eax,ebx
100264bc:	pop    ecx
100264bd:	je     0x100264cb
100264bf:	mov    DWORD PTR [eax],0x100705a8
100264c5:	mov    DWORD PTR [esp+0x14],eax
100264c9:	jmp    0x100264cf
100264cb:	mov    DWORD PTR [esp+0x14],ebx
100264cf:	mov    eax,DWORD PTR [esp+0x20]
100264d3:	push   eax
100264d4:	lea    ecx,[esp+0x20]
100264d8:	push   ecx
100264d9:	lea    eax,[esp+0x1c]
100264dd:	push   eax
100264de:	mov    edi,ecx
100264e0:	call   0x100268ce
100264e5:	push   esi
100264e6:	call   0x1004239e
100264eb:	cmp    eax,ebx
100264ed:	pop    ecx
100264ee:	je     0x100264fc
100264f0:	mov    DWORD PTR [eax],0x10070600
100264f6:	mov    DWORD PTR [esp+0x14],eax
100264fa:	jmp    0x10026500
100264fc:	mov    DWORD PTR [esp+0x14],ebx
10026500:	mov    eax,DWORD PTR [esp+0x20]
10026504:	push   eax
10026505:	lea    ecx,[esp+0x20]
10026509:	push   ecx
1002650a:	lea    eax,[esp+0x1c]
1002650e:	push   eax
1002650f:	mov    edi,ecx
10026511:	call   0x100268ce
10026516:	push   esi
10026517:	call   0x1004239e
1002651c:	cmp    eax,ebx
1002651e:	pop    ecx
1002651f:	je     0x1002652d
10026521:	mov    DWORD PTR [eax],0x100705e8
10026527:	mov    DWORD PTR [esp+0x14],eax
1002652b:	jmp    0x10026531
1002652d:	mov    DWORD PTR [esp+0x14],ebx
10026531:	mov    eax,DWORD PTR [esp+0x20]
10026535:	push   eax
10026536:	lea    ecx,[esp+0x20]
1002653a:	push   ecx
1002653b:	lea    eax,[esp+0x1c]
1002653f:	push   eax
10026540:	mov    edi,ecx
10026542:	call   0x100268ce
10026547:	push   esi
10026548:	call   0x1004239e
1002654d:	cmp    eax,ebx
1002654f:	pop    ecx
10026550:	je     0x1002655e
10026552:	mov    DWORD PTR [eax],0x100705c8
10026558:	mov    DWORD PTR [esp+0x14],eax
1002655c:	jmp    0x10026562
1002655e:	mov    DWORD PTR [esp+0x14],ebx
10026562:	mov    eax,DWORD PTR [esp+0x20]
10026566:	push   eax
10026567:	lea    ecx,[esp+0x20]
1002656b:	push   ecx
1002656c:	lea    eax,[esp+0x1c]
10026570:	push   eax
10026571:	mov    edi,ecx
10026573:	call   0x100268ce
10026578:	push   esi
10026579:	call   0x1004239e
1002657e:	cmp    eax,ebx
10026580:	pop    ecx
10026581:	je     0x1002658f
10026583:	mov    DWORD PTR [eax],0x100705b0
10026589:	mov    DWORD PTR [esp+0x14],eax
1002658d:	jmp    0x10026593
1002658f:	mov    DWORD PTR [esp+0x14],ebx
10026593:	mov    eax,DWORD PTR [esp+0x20]
10026597:	push   eax
10026598:	lea    ecx,[esp+0x20]
1002659c:	push   ecx
1002659d:	lea    eax,[esp+0x1c]
100265a1:	push   eax
100265a2:	mov    edi,ecx
100265a4:	call   0x100268ce
100265a9:	push   esi
100265aa:	call   0x1004239e
100265af:	cmp    eax,ebx
100265b1:	pop    ecx
100265b2:	je     0x100265c0
100265b4:	mov    DWORD PTR [eax],0x100705d0
100265ba:	mov    DWORD PTR [esp+0x14],eax
100265be:	jmp    0x100265c4
100265c0:	mov    DWORD PTR [esp+0x14],ebx
100265c4:	mov    eax,DWORD PTR [esp+0x20]
100265c8:	push   eax
100265c9:	lea    ecx,[esp+0x20]
100265cd:	push   ecx
100265ce:	lea    eax,[esp+0x1c]
100265d2:	push   eax
100265d3:	mov    edi,ecx
100265d5:	call   0x100268ce
100265da:	mov    eax,DWORD PTR [esp+0x20]
100265de:	mov    ebx,DWORD PTR [eax]
100265e0:	mov    esi,0x1007ff68
100265e5:	mov    DWORD PTR [esp+0x18],eax
100265e9:	call   0x10026956
100265ee:	push   DWORD PTR [esp+0x18]
100265f2:	mov    eax,ds:0x1007ff6c
100265f7:	mov    ecx,DWORD PTR [eax]
100265f9:	push   edi
100265fa:	push   ebx
100265fb:	mov    eax,edi
100265fd:	push   eax
100265fe:	push   ecx
100265ff:	push   esi
10026600:	push   DWORD PTR [esp+0x2c]
10026604:	call   0x100269b0
10026609:	or     DWORD PTR [esp+0x40],0xffffffff
1002660e:	mov    esi,edi
10026610:	call   0x10026956
10026615:	push   DWORD PTR [esp+0x20]
10026619:	call   0x10041d92
1002661e:	pop    ecx
1002661f:	xor    ebx,ebx
10026621:	cmp    DWORD PTR ds:0x1007ff64,ebx
10026627:	jne    0x10026750
1002662d:	call   0x1002693e
10026632:	mov    DWORD PTR [esp+0x20],eax
10026636:	mov    DWORD PTR [esp+0x24],ebx
1002663a:	push   0x4
1002663c:	pop    esi
1002663d:	push   esi
1002663e:	mov    DWORD PTR [esp+0x44],0x1
10026646:	call   0x1004239e
1002664b:	cmp    eax,ebx
1002664d:	pop    ecx
1002664e:	je     0x1002665c
10026650:	mov    DWORD PTR [eax],0x10070620
10026656:	mov    DWORD PTR [esp+0x14],eax
1002665a:	jmp    0x10026660
1002665c:	mov    DWORD PTR [esp+0x14],ebx
10026660:	mov    eax,DWORD PTR [esp+0x20]
10026664:	push   eax
10026665:	lea    ecx,[esp+0x20]
10026669:	push   ecx
1002666a:	lea    eax,[esp+0x1c]
1002666e:	push   eax
1002666f:	mov    edi,ecx
10026671:	call   0x100268ce
10026676:	push   esi
10026677:	call   0x1004239e
1002667c:	cmp    eax,ebx
1002667e:	pop    ecx
1002667f:	je     0x1002668d
10026681:	mov    DWORD PTR [eax],0x10070610
10026687:	mov    DWORD PTR [esp+0x14],eax
1002668b:	jmp    0x10026691
1002668d:	mov    DWORD PTR [esp+0x14],ebx
10026691:	mov    eax,DWORD PTR [esp+0x20]
10026695:	push   eax
10026696:	lea    ecx,[esp+0x20]
1002669a:	push   ecx
1002669b:	lea    eax,[esp+0x1c]
1002669f:	push   eax
100266a0:	mov    edi,ecx
100266a2:	call   0x100268ce
100266a7:	push   esi
100266a8:	call   0x1004239e
100266ad:	cmp    eax,ebx
100266af:	pop    ecx
100266b0:	je     0x100266be
100266b2:	mov    DWORD PTR [eax],0x100705f0
100266b8:	mov    DWORD PTR [esp+0x14],eax
100266bc:	jmp    0x100266c2
100266be:	mov    DWORD PTR [esp+0x14],ebx
100266c2:	mov    eax,DWORD PTR [esp+0x20]
100266c6:	push   eax
100266c7:	lea    ecx,[esp+0x20]
100266cb:	push   ecx
100266cc:	lea    eax,[esp+0x1c]
100266d0:	push   eax
100266d1:	mov    edi,ecx
100266d3:	call   0x100268ce
100266d8:	push   esi
100266d9:	call   0x1004239e
100266de:	cmp    eax,ebx
100266e0:	pop    ecx
100266e1:	je     0x100266ef
100266e3:	mov    DWORD PTR [eax],0x100705b8
100266e9:	mov    DWORD PTR [esp+0x14],eax
100266ed:	jmp    0x100266f3
100266ef:	mov    DWORD PTR [esp+0x14],ebx
100266f3:	mov    eax,DWORD PTR [esp+0x20]
100266f7:	push   eax
100266f8:	lea    ecx,[esp+0x20]
100266fc:	push   ecx
100266fd:	lea    eax,[esp+0x1c]
10026701:	push   eax
10026702:	mov    edi,ecx
10026704:	call   0x100268ce
10026709:	mov    eax,DWORD PTR [esp+0x20]
1002670d:	mov    ebx,DWORD PTR [eax]
1002670f:	mov    esi,0x1007ff5c
10026714:	mov    DWORD PTR [esp+0x18],eax
10026718:	call   0x10026956
1002671d:	push   DWORD PTR [esp+0x18]
10026721:	mov    eax,ds:0x1007ff60
10026726:	mov    ecx,DWORD PTR [eax]
10026728:	push   edi
10026729:	push   ebx
1002672a:	mov    eax,edi
1002672c:	push   eax
1002672d:	push   ecx
1002672e:	push   esi
1002672f:	push   DWORD PTR [esp+0x2c]
10026733:	call   0x10026a77
10026738:	or     DWORD PTR [esp+0x40],0xffffffff
1002673d:	mov    esi,edi
1002673f:	call   0x10026956
10026744:	push   DWORD PTR [esp+0x20]
10026748:	call   0x10041d92
1002674d:	pop    ecx
1002674e:	xor    ebx,ebx
10026750:	cmp    DWORD PTR ds:0x1007ff7c,ebx
10026756:	jne    0x100267f6
1002675c:	call   0x1002693e
10026761:	mov    DWORD PTR [esp+0x20],eax
10026765:	mov    DWORD PTR [esp+0x24],ebx
10026769:	push   0x8
1002676b:	mov    DWORD PTR [esp+0x44],0x2
10026773:	call   0x1004239e
10026778:	pop    ecx
10026779:	mov    DWORD PTR [esp+0x14],eax
1002677d:	cmp    eax,ebx
1002677f:	mov    BYTE PTR [esp+0x40],0x3
10026784:	je     0x1002678e
10026786:	push   eax
10026787:	call   0x1002c16e
1002678c:	jmp    0x10026790
1002678e:	xor    eax,eax
10026790:	mov    BYTE PTR [esp+0x40],0x2
10026795:	mov    DWORD PTR [esp+0x14],eax
10026799:	mov    eax,DWORD PTR [esp+0x20]
1002679d:	push   eax
1002679e:	lea    ecx,[esp+0x20]
100267a2:	push   ecx
100267a3:	lea    eax,[esp+0x1c]
100267a7:	push   eax
100267a8:	mov    edi,ecx
100267aa:	call   0x100268ce
100267af:	mov    eax,DWORD PTR [esp+0x20]
100267b3:	mov    ebx,DWORD PTR [eax]
100267b5:	mov    esi,0x1007ff74
100267ba:	mov    DWORD PTR [esp+0x18],eax
100267be:	call   0x10026956
100267c3:	push   DWORD PTR [esp+0x18]
100267c7:	mov    eax,ds:0x1007ff78
100267cc:	mov    ecx,DWORD PTR [eax]
100267ce:	push   edi
100267cf:	push   ebx
100267d0:	mov    eax,edi
100267d2:	push   eax
100267d3:	push   ecx
100267d4:	push   esi
100267d5:	push   DWORD PTR [esp+0x2c]
100267d9:	call   0x10026b3e
100267de:	or     DWORD PTR [esp+0x40],0xffffffff
100267e3:	mov    esi,edi
100267e5:	call   0x10026956
100267ea:	push   DWORD PTR [esp+0x20]
100267ee:	call   0x10041d92
100267f3:	pop    ecx
100267f4:	xor    ebx,ebx
100267f6:	cmp    DWORD PTR ds:0x1007ff58,ebx
100267fc:	jne    0x10026887
10026802:	call   0x1002693e
10026807:	mov    DWORD PTR [esp+0x2c],eax
1002680b:	mov    DWORD PTR [esp+0x30],ebx
1002680f:	push   0x4
10026811:	pop    eax
10026812:	push   eax
10026813:	mov    DWORD PTR [esp+0x44],eax
10026817:	call   0x1004239e
1002681c:	cmp    eax,ebx
1002681e:	pop    ecx
1002681f:	je     0x1002682d
10026821:	mov    DWORD PTR [eax],0x100705c0
10026827:	mov    DWORD PTR [esp+0x14],eax
1002682b:	jmp    0x10026831
1002682d:	mov    DWORD PTR [esp+0x14],ebx
10026831:	mov    eax,DWORD PTR [esp+0x2c]
10026835:	push   eax
10026836:	lea    ecx,[esp+0x2c]
1002683a:	push   ecx
1002683b:	lea    eax,[esp+0x1c]
1002683f:	push   eax
10026840:	mov    edi,ecx
10026842:	call   0x100268ce
10026847:	mov    eax,DWORD PTR [esp+0x2c]
1002684b:	mov    ebx,DWORD PTR [eax]
1002684d:	mov    esi,0x1007ff50
10026852:	mov    DWORD PTR [esp+0x18],eax
10026856:	call   0x10026956
1002685b:	push   DWORD PTR [esp+0x18]
1002685f:	mov    eax,ds:0x1007ff54
10026864:	mov    ecx,DWORD PTR [eax]
10026866:	push   edi
10026867:	push   ebx
10026868:	mov    eax,edi
1002686a:	push   eax
1002686b:	push   ecx
1002686c:	push   esi
1002686d:	push   DWORD PTR [esp+0x2c]
10026871:	call   0x10026c05
10026876:	mov    esi,edi
10026878:	call   0x10026956
1002687d:	push   DWORD PTR [esp+0x2c]
10026881:	call   0x10041d92
10026886:	pop    ecx
10026887:	mov    ecx,DWORD PTR [esp+0x38]
1002688b:	mov    DWORD PTR fs:0x0,ecx
10026892:	pop    ecx
10026893:	pop    edi
10026894:	pop    esi
10026895:	pop    ebx
10026896:	mov    esp,ebp
10026898:	pop    ebp
10026899:	ret    
1002689a:	test   BYTE PTR [esp+0x4],0x1
1002689f:	push   esi
100268a0:	mov    esi,ecx
100268a2:	mov    DWORD PTR [esi],0x100705a0
100268a8:	je     0x100268b1
100268aa:	push   esi
100268ab:	call   0x10041d92
100268b0:	pop    ecx
100268b1:	mov    eax,esi
100268b3:	pop    esi
100268b4:	ret    0x4
100268b7:	push   esi
100268b8:	mov    esi,eax
100268ba:	call   0x10026956
100268bf:	push   DWORD PTR [esi+0x4]
100268c2:	call   0x10041d92
100268c7:	and    DWORD PTR [esi+0x4],0x0
100268cb:	pop    ecx
100268cc:	pop    esi
100268cd:	ret    
100268ce:	push   0x48
100268d0:	mov    eax,0x1005f147
100268d5:	call   0x10058845
100268da:	push   DWORD PTR [ebp+0x8]
100268dd:	mov    esi,DWORD PTR [ebp+0x10]
100268e0:	push   DWORD PTR [esi+0x4]
100268e3:	push   esi
100268e4:	call   0x1002697f
100268e9:	mov    ecx,DWORD PTR [edi+0x8]
100268ec:	mov    edx,0x3fffffff
100268f1:	sub    edx,ecx
100268f3:	cmp    edx,0x1
100268f6:	jae    0x1002692a
100268f8:	push   0x1006eb2c
100268fd:	lea    ecx,[ebp-0x2c]
10026900:	call   0x100011d6
10026905:	and    DWORD PTR [ebp-0x4],0x0
10026909:	lea    eax,[ebp-0x2c]
1002690c:	push   eax
1002690d:	lea    ecx,[ebp-0x54]
10026910:	call   0x10001065
10026915:	push   0x10073960
1002691a:	lea    eax,[ebp-0x54]
1002691d:	push   eax
1002691e:	mov    DWORD PTR [ebp-0x54],0x1006a77c
10026925:	call   0x10046704
1002692a:	inc    ecx
1002692b:	mov    DWORD PTR [edi+0x8],ecx
1002692e:	mov    DWORD PTR [esi+0x4],eax
10026931:	mov    ecx,DWORD PTR [eax+0x4]
10026934:	mov    DWORD PTR [ecx],eax
10026936:	call   0x1005891d
1002693b:	ret    0xc
1002693e:	push   0xc
10026940:	call   0x1004239e
10026945:	test   eax,eax
10026947:	pop    ecx
10026948:	je     0x1002694c
1002694a:	mov    DWORD PTR [eax],eax
1002694c:	lea    ecx,[eax+0x4]
1002694f:	test   ecx,ecx
10026951:	je     0x10026955
10026953:	mov    DWORD PTR [ecx],eax
10026955:	ret    
10026956:	mov    eax,DWORD PTR [esi+0x4]
10026959:	mov    ecx,DWORD PTR [eax]
1002695b:	mov    DWORD PTR [eax],eax
1002695d:	mov    eax,DWORD PTR [esi+0x4]
10026960:	mov    DWORD PTR [eax+0x4],eax
10026963:	and    DWORD PTR [esi+0x8],0x0
10026967:	cmp    ecx,DWORD PTR [esi+0x4]
1002696a:	je     0x1002697e
1002696c:	push   edi
1002696d:	mov    edi,DWORD PTR [ecx]
1002696f:	push   ecx
10026970:	call   0x10041d92
10026975:	cmp    edi,DWORD PTR [esi+0x4]
10026978:	pop    ecx
10026979:	mov    ecx,edi
1002697b:	jne    0x1002696d
1002697d:	pop    edi
1002697e:	ret    
1002697f:	push   0xc
10026981:	call   0x1004239e
10026986:	test   eax,eax
10026988:	pop    ecx
10026989:	je     0x10026991
1002698b:	mov    ecx,DWORD PTR [esp+0x4]
1002698f:	mov    DWORD PTR [eax],ecx
10026991:	lea    ecx,[eax+0x4]
10026994:	test   ecx,ecx
10026996:	je     0x1002699e
10026998:	mov    edx,DWORD PTR [esp+0x8]
1002699c:	mov    DWORD PTR [ecx],edx
1002699e:	lea    ecx,[eax+0x8]
100269a1:	test   ecx,ecx
100269a3:	je     0x100269ad
100269a5:	mov    edx,DWORD PTR [esp+0xc]
100269a9:	mov    edx,DWORD PTR [edx]
100269ab:	mov    DWORD PTR [ecx],edx
100269ad:	ret    0xc
100269b0:	push   0x18
100269b2:	mov    eax,0x1005f882
100269b7:	call   0x10058878
100269bc:	mov    ebx,DWORD PTR [ebp+0x14]
100269bf:	mov    esi,DWORD PTR [ebp+0x18]
100269c2:	and    DWORD PTR [ebp-0x4],0x0
100269c6:	mov    edi,0x1007ff68
100269cb:	mov    DWORD PTR [ebp-0x1c],ebx
100269ce:	mov    DWORD PTR [ebp-0x18],esi
100269d1:	test   ebx,ebx
100269d3:	je     0x100269da
100269d5:	cmp    ebx,DWORD PTR [ebp+0x1c]
100269d8:	je     0x100269df
100269da:	call   0x100422b0
100269df:	cmp    esi,DWORD PTR [ebp+0x20]
100269e2:	je     0x10026a6f
100269e8:	test   ebx,ebx
100269ea:	jne    0x100269f1
100269ec:	call   0x100422b0
100269f1:	cmp    esi,DWORD PTR [ebx+0x4]
100269f4:	jne    0x100269fb
100269f6:	call   0x100422b0
100269fb:	push   DWORD PTR [ebp+0x10]
100269fe:	add    esi,0x8
10026a01:	push   DWORD PTR [ebp+0xc]
10026a04:	push   esi
10026a05:	call   0x100268ce
10026a0a:	lea    esi,[ebp+0x14]
10026a0d:	call   0x1002634d
10026a12:	mov    esi,DWORD PTR [ebp+0x18]
10026a15:	mov    ebx,DWORD PTR [ebp+0x14]
10026a18:	jmp    0x100269d1
10026a1a:	mov    edi,DWORD PTR [ebp+0x10]
10026a1d:	mov    eax,DWORD PTR [ebp-0x1c]
10026a20:	test   eax,eax
10026a22:	je     0x10026a29
10026a24:	cmp    eax,DWORD PTR [ebp+0x14]
10026a27:	je     0x10026a2e
10026a29:	call   0x100422b0
10026a2e:	mov    eax,DWORD PTR [ebp-0x18]
10026a31:	cmp    eax,DWORD PTR [ebp+0x18]
10026a34:	je     0x10026a66
10026a36:	mov    ebx,DWORD PTR [ebp+0xc]
10026a39:	test   ebx,ebx
10026a3b:	mov    DWORD PTR [ebp+0x20],edi
10026a3e:	jne    0x10026a45
10026a40:	call   0x100422b0
10026a45:	mov    esi,DWORD PTR [edi+0x4]
10026a48:	cmp    esi,DWORD PTR [ebx+0x4]
10026a4b:	jne    0x10026a52
10026a4d:	call   0x100422b0
10026a52:	push   esi
10026a53:	push   ebx
10026a54:	lea    ebx,[ebp-0x24]
10026a57:	call   0x10026ccc
10026a5c:	lea    esi,[ebp-0x1c]
10026a5f:	call   0x1002634d
10026a64:	jmp    0x10026a1d
10026a66:	push   0x0
10026a68:	push   0x0
10026a6a:	call   0x10046704
10026a6f:	call   0x1005891d
10026a74:	ret    0x1c
10026a77:	push   0x18
10026a79:	mov    eax,0x1005f867
10026a7e:	call   0x10058878
10026a83:	mov    ebx,DWORD PTR [ebp+0x14]
10026a86:	mov    esi,DWORD PTR [ebp+0x18]
10026a89:	and    DWORD PTR [ebp-0x4],0x0
10026a8d:	mov    edi,0x1007ff5c
10026a92:	mov    DWORD PTR [ebp-0x1c],ebx
10026a95:	mov    DWORD PTR [ebp-0x18],esi
10026a98:	test   ebx,ebx
10026a9a:	je     0x10026aa1
10026a9c:	cmp    ebx,DWORD PTR [ebp+0x1c]
10026a9f:	je     0x10026aa6
10026aa1:	call   0x100422b0
10026aa6:	cmp    esi,DWORD PTR [ebp+0x20]
10026aa9:	je     0x10026b36
10026aaf:	test   ebx,ebx
10026ab1:	jne    0x10026ab8
10026ab3:	call   0x100422b0
10026ab8:	cmp    esi,DWORD PTR [ebx+0x4]
10026abb:	jne    0x10026ac2
10026abd:	call   0x100422b0
10026ac2:	push   DWORD PTR [ebp+0x10]
10026ac5:	add    esi,0x8
10026ac8:	push   DWORD PTR [ebp+0xc]
10026acb:	push   esi
10026acc:	call   0x100268ce
10026ad1:	lea    esi,[ebp+0x14]
10026ad4:	call   0x1002634d
10026ad9:	mov    esi,DWORD PTR [ebp+0x18]
10026adc:	mov    ebx,DWORD PTR [ebp+0x14]
10026adf:	jmp    0x10026a98
10026ae1:	mov    edi,DWORD PTR [ebp+0x10]
10026ae4:	mov    eax,DWORD PTR [ebp-0x1c]
10026ae7:	test   eax,eax
10026ae9:	je     0x10026af0
10026aeb:	cmp    eax,DWORD PTR [ebp+0x14]
10026aee:	je     0x10026af5
10026af0:	call   0x100422b0
10026af5:	mov    eax,DWORD PTR [ebp-0x18]
10026af8:	cmp    eax,DWORD PTR [ebp+0x18]
10026afb:	je     0x10026b2d
10026afd:	mov    ebx,DWORD PTR [ebp+0xc]
10026b00:	test   ebx,ebx
10026b02:	mov    DWORD PTR [ebp+0x20],edi
10026b05:	jne    0x10026b0c
10026b07:	call   0x100422b0
10026b0c:	mov    esi,DWORD PTR [edi+0x4]
10026b0f:	cmp    esi,DWORD PTR [ebx+0x4]
10026b12:	jne    0x10026b19
10026b14:	call   0x100422b0
10026b19:	push   esi
10026b1a:	push   ebx
10026b1b:	lea    ebx,[ebp-0x24]
10026b1e:	call   0x10026d1b
10026b23:	lea    esi,[ebp-0x1c]
10026b26:	call   0x1002634d
10026b2b:	jmp    0x10026ae4
10026b2d:	push   0x0
10026b2f:	push   0x0
10026b31:	call   0x10046704
10026b36:	call   0x1005891d
10026b3b:	ret    0x1c
10026b3e:	push   0x18
10026b40:	mov    eax,0x1005f84c
10026b45:	call   0x10058878
10026b4a:	mov    ebx,DWORD PTR [ebp+0x14]
10026b4d:	mov    esi,DWORD PTR [ebp+0x18]
10026b50:	and    DWORD PTR [ebp-0x4],0x0
10026b54:	mov    edi,0x1007ff74
10026b59:	mov    DWORD PTR [ebp-0x1c],ebx
10026b5c:	mov    DWORD PTR [ebp-0x18],esi
10026b5f:	test   ebx,ebx
10026b61:	je     0x10026b68
10026b63:	cmp    ebx,DWORD PTR [ebp+0x1c]
10026b66:	je     0x10026b6d
10026b68:	call   0x100422b0
10026b6d:	cmp    esi,DWORD PTR [ebp+0x20]
10026b70:	je     0x10026bfd
10026b76:	test   ebx,ebx
10026b78:	jne    0x10026b7f
10026b7a:	call   0x100422b0
10026b7f:	cmp    esi,DWORD PTR [ebx+0x4]
10026b82:	jne    0x10026b89
10026b84:	call   0x100422b0
10026b89:	push   DWORD PTR [ebp+0x10]
10026b8c:	add    esi,0x8
10026b8f:	push   DWORD PTR [ebp+0xc]
10026b92:	push   esi
10026b93:	call   0x100268ce
10026b98:	lea    esi,[ebp+0x14]
10026b9b:	call   0x1002634d
10026ba0:	mov    esi,DWORD PTR [ebp+0x18]
10026ba3:	mov    ebx,DWORD PTR [ebp+0x14]
10026ba6:	jmp    0x10026b5f
10026ba8:	mov    edi,DWORD PTR [ebp+0x10]
10026bab:	mov    eax,DWORD PTR [ebp-0x1c]
10026bae:	test   eax,eax
10026bb0:	je     0x10026bb7
10026bb2:	cmp    eax,DWORD PTR [ebp+0x14]
10026bb5:	je     0x10026bbc
10026bb7:	call   0x100422b0
10026bbc:	mov    eax,DWORD PTR [ebp-0x18]
10026bbf:	cmp    eax,DWORD PTR [ebp+0x18]
10026bc2:	je     0x10026bf4
10026bc4:	mov    ebx,DWORD PTR [ebp+0xc]
10026bc7:	test   ebx,ebx
10026bc9:	mov    DWORD PTR [ebp+0x20],edi
10026bcc:	jne    0x10026bd3
10026bce:	call   0x100422b0
10026bd3:	mov    esi,DWORD PTR [edi+0x4]
10026bd6:	cmp    esi,DWORD PTR [ebx+0x4]
10026bd9:	jne    0x10026be0
10026bdb:	call   0x100422b0
10026be0:	push   esi
10026be1:	push   ebx
10026be2:	lea    ebx,[ebp-0x24]
10026be5:	call   0x10026d6a
10026bea:	lea    esi,[ebp-0x1c]
10026bed:	call   0x1002634d
10026bf2:	jmp    0x10026bab
10026bf4:	push   0x0
10026bf6:	push   0x0
10026bf8:	call   0x10046704
10026bfd:	call   0x1005891d
10026c02:	ret    0x1c
10026c05:	push   0x18
10026c07:	mov    eax,0x1005f831
10026c0c:	call   0x10058878
10026c11:	mov    ebx,DWORD PTR [ebp+0x14]
10026c14:	mov    esi,DWORD PTR [ebp+0x18]
10026c17:	and    DWORD PTR [ebp-0x4],0x0
10026c1b:	mov    edi,0x1007ff50
10026c20:	mov    DWORD PTR [ebp-0x1c],ebx
10026c23:	mov    DWORD PTR [ebp-0x18],esi
10026c26:	test   ebx,ebx
10026c28:	je     0x10026c2f
10026c2a:	cmp    ebx,DWORD PTR [ebp+0x1c]
10026c2d:	je     0x10026c34
10026c2f:	call   0x100422b0
10026c34:	cmp    esi,DWORD PTR [ebp+0x20]
10026c37:	je     0x10026cc4
10026c3d:	test   ebx,ebx
10026c3f:	jne    0x10026c46
10026c41:	call   0x100422b0
10026c46:	cmp    esi,DWORD PTR [ebx+0x4]
10026c49:	jne    0x10026c50
10026c4b:	call   0x100422b0
10026c50:	push   DWORD PTR [ebp+0x10]
10026c53:	add    esi,0x8
10026c56:	push   DWORD PTR [ebp+0xc]
10026c59:	push   esi
10026c5a:	call   0x100268ce
10026c5f:	lea    esi,[ebp+0x14]
10026c62:	call   0x1002634d
10026c67:	mov    esi,DWORD PTR [ebp+0x18]
10026c6a:	mov    ebx,DWORD PTR [ebp+0x14]
10026c6d:	jmp    0x10026c26
10026c6f:	mov    edi,DWORD PTR [ebp+0x10]
10026c72:	mov    eax,DWORD PTR [ebp-0x1c]
10026c75:	test   eax,eax
10026c77:	je     0x10026c7e
10026c79:	cmp    eax,DWORD PTR [ebp+0x14]
10026c7c:	je     0x10026c83
10026c7e:	call   0x100422b0
10026c83:	mov    eax,DWORD PTR [ebp-0x18]
10026c86:	cmp    eax,DWORD PTR [ebp+0x18]
10026c89:	je     0x10026cbb
10026c8b:	mov    ebx,DWORD PTR [ebp+0xc]
10026c8e:	test   ebx,ebx
10026c90:	mov    DWORD PTR [ebp+0x20],edi
10026c93:	jne    0x10026c9a
10026c95:	call   0x100422b0
10026c9a:	mov    esi,DWORD PTR [edi+0x4]
10026c9d:	cmp    esi,DWORD PTR [ebx+0x4]
10026ca0:	jne    0x10026ca7
10026ca2:	call   0x100422b0
10026ca7:	push   esi
10026ca8:	push   ebx
10026ca9:	lea    ebx,[ebp-0x24]
10026cac:	call   0x10026db9
10026cb1:	lea    esi,[ebp-0x1c]
10026cb4:	call   0x1002634d
10026cb9:	jmp    0x10026c72
10026cbb:	push   0x0
10026cbd:	push   0x0
10026cbf:	call   0x10046704
10026cc4:	call   0x1005891d
10026cc9:	ret    0x1c
10026ccc:	push   ebp
10026ccd:	mov    ebp,esp
10026ccf:	push   ecx
10026cd0:	push   ecx
10026cd1:	mov    eax,DWORD PTR [ebp+0x8]
10026cd4:	push   esi
10026cd5:	push   edi
10026cd6:	mov    edi,DWORD PTR [ebp+0xc]
10026cd9:	lea    esi,[ebp+0x8]
10026cdc:	mov    DWORD PTR [ebp-0x8],eax
10026cdf:	call   0x1002634d
10026ce4:	cmp    edi,DWORD PTR ds:0x1007ff6c
10026cea:	je     0x10026d08
10026cec:	mov    eax,DWORD PTR [edi+0x4]
10026cef:	mov    ecx,DWORD PTR [edi]
10026cf1:	mov    DWORD PTR [eax],ecx
10026cf3:	mov    eax,DWORD PTR [edi]
10026cf5:	mov    ecx,DWORD PTR [edi+0x4]
10026cf8:	push   edi
10026cf9:	mov    DWORD PTR [eax+0x4],ecx
10026cfc:	call   0x10041d92
10026d01:	dec    DWORD PTR ds:0x1007ff70
10026d07:	pop    ecx
10026d08:	mov    eax,DWORD PTR [ebp+0x8]
10026d0b:	mov    DWORD PTR [ebx],eax
10026d0d:	mov    eax,DWORD PTR [ebp+0xc]
10026d10:	pop    edi
10026d11:	mov    DWORD PTR [ebx+0x4],eax
10026d14:	mov    eax,ebx
10026d16:	pop    esi
10026d17:	leave  
10026d18:	ret    0x8
10026d1b:	push   ebp
10026d1c:	mov    ebp,esp
10026d1e:	push   ecx
10026d1f:	push   ecx
10026d20:	mov    eax,DWORD PTR [ebp+0x8]
10026d23:	push   esi
10026d24:	push   edi
10026d25:	mov    edi,DWORD PTR [ebp+0xc]
10026d28:	lea    esi,[ebp+0x8]
10026d2b:	mov    DWORD PTR [ebp-0x8],eax
10026d2e:	call   0x1002634d
10026d33:	cmp    edi,DWORD PTR ds:0x1007ff60
10026d39:	je     0x10026d57
10026d3b:	mov    eax,DWORD PTR [edi+0x4]
10026d3e:	mov    ecx,DWORD PTR [edi]
10026d40:	mov    DWORD PTR [eax],ecx
10026d42:	mov    eax,DWORD PTR [edi]
10026d44:	mov    ecx,DWORD PTR [edi+0x4]
10026d47:	push   edi
10026d48:	mov    DWORD PTR [eax+0x4],ecx
10026d4b:	call   0x10041d92
10026d50:	dec    DWORD PTR ds:0x1007ff64
10026d56:	pop    ecx
10026d57:	mov    eax,DWORD PTR [ebp+0x8]
10026d5a:	mov    DWORD PTR [ebx],eax
10026d5c:	mov    eax,DWORD PTR [ebp+0xc]
10026d5f:	pop    edi
10026d60:	mov    DWORD PTR [ebx+0x4],eax
10026d63:	mov    eax,ebx
10026d65:	pop    esi
10026d66:	leave  
10026d67:	ret    0x8
10026d6a:	push   ebp
10026d6b:	mov    ebp,esp
10026d6d:	push   ecx
10026d6e:	push   ecx
10026d6f:	mov    eax,DWORD PTR [ebp+0x8]
10026d72:	push   esi
10026d73:	push   edi
10026d74:	mov    edi,DWORD PTR [ebp+0xc]
10026d77:	lea    esi,[ebp+0x8]
10026d7a:	mov    DWORD PTR [ebp-0x8],eax
10026d7d:	call   0x1002634d
10026d82:	cmp    edi,DWORD PTR ds:0x1007ff78
10026d88:	je     0x10026da6
10026d8a:	mov    eax,DWORD PTR [edi+0x4]
10026d8d:	mov    ecx,DWORD PTR [edi]
10026d8f:	mov    DWORD PTR [eax],ecx
10026d91:	mov    eax,DWORD PTR [edi]
10026d93:	mov    ecx,DWORD PTR [edi+0x4]
10026d96:	push   edi
10026d97:	mov    DWORD PTR [eax+0x4],ecx
10026d9a:	call   0x10041d92
10026d9f:	dec    DWORD PTR ds:0x1007ff7c
10026da5:	pop    ecx
10026da6:	mov    eax,DWORD PTR [ebp+0x8]
10026da9:	mov    DWORD PTR [ebx],eax
10026dab:	mov    eax,DWORD PTR [ebp+0xc]
10026dae:	pop    edi
10026daf:	mov    DWORD PTR [ebx+0x4],eax
10026db2:	mov    eax,ebx
10026db4:	pop    esi
10026db5:	leave  
10026db6:	ret    0x8
10026db9:	push   ebp
10026dba:	mov    ebp,esp
10026dbc:	push   ecx
10026dbd:	push   ecx
10026dbe:	mov    eax,DWORD PTR [ebp+0x8]
10026dc1:	push   esi
10026dc2:	push   edi
10026dc3:	mov    edi,DWORD PTR [ebp+0xc]
10026dc6:	lea    esi,[ebp+0x8]
10026dc9:	mov    DWORD PTR [ebp-0x8],eax
10026dcc:	call   0x1002634d
10026dd1:	cmp    edi,DWORD PTR ds:0x1007ff54
10026dd7:	je     0x10026df5
10026dd9:	mov    eax,DWORD PTR [edi+0x4]
10026ddc:	mov    ecx,DWORD PTR [edi]
10026dde:	mov    DWORD PTR [eax],ecx
10026de0:	mov    eax,DWORD PTR [edi]
10026de2:	mov    ecx,DWORD PTR [edi+0x4]
10026de5:	push   edi
10026de6:	mov    DWORD PTR [eax+0x4],ecx
10026de9:	call   0x10041d92
10026dee:	dec    DWORD PTR ds:0x1007ff58
10026df4:	pop    ecx
10026df5:	mov    eax,DWORD PTR [ebp+0x8]
10026df8:	mov    DWORD PTR [ebx],eax
10026dfa:	mov    eax,DWORD PTR [ebp+0xc]
10026dfd:	pop    edi
10026dfe:	mov    DWORD PTR [ebx+0x4],eax
10026e01:	mov    eax,ebx
10026e03:	pop    esi
10026e04:	leave  
10026e05:	ret    0x8
10026e08:	push   ebp
10026e09:	mov    ebp,esp
10026e0b:	and    esp,0xfffffff8
10026e0e:	push   0xffffffff
10026e10:	push   0x10062193
10026e15:	mov    eax,fs:0x0
10026e1b:	push   eax
10026e1c:	sub    esp,0x60
10026e1f:	mov    eax,ds:0x1007d030
10026e24:	xor    eax,esp
10026e26:	mov    DWORD PTR [esp+0x58],eax
10026e2a:	push   ebx
10026e2b:	push   esi
10026e2c:	push   edi
10026e2d:	mov    eax,ds:0x1007d030
10026e32:	xor    eax,esp
10026e34:	push   eax
10026e35:	lea    eax,[esp+0x70]
10026e39:	mov    fs:0x0,eax
10026e3f:	mov    edi,DWORD PTR [ebp+0x8]
10026e42:	push   0x1ec5dc0
10026e47:	push   0x10070628
10026e4c:	call   0x10003d63
10026e51:	push   0x7849be0e
10026e56:	push   eax
10026e57:	call   0x10003d63
10026e5c:	push   eax
10026e5d:	push   0x7
10026e5f:	mov    ebx,0x1006c320
10026e64:	push   ebx
10026e65:	call   0x10003d75
10026e6a:	add    esp,0x1c
10026e6d:	push   eax
10026e6e:	lea    ecx,[esp+0x34]
10026e72:	call   0x100011d6
10026e77:	xor    esi,esi
10026e79:	push   esi
10026e7a:	lea    eax,[esp+0x34]
10026e7e:	push   eax
10026e7f:	lea    eax,[esp+0x54]
10026e83:	push   eax
10026e84:	mov    DWORD PTR [esp+0x84],esi
10026e8b:	mov    eax,DWORD PTR [edi+0x4]
10026e8e:	add    eax,0x18
10026e91:	call   0x1000800f
10026e96:	push   esi
10026e97:	push   0x1
10026e99:	lea    ecx,[esp+0x38]
10026e9d:	mov    BYTE PTR [esp+0x80],0x2
10026ea5:	call   0x100012f9
10026eaa:	push   0x1006bb18
10026eaf:	lea    esi,[esp+0x50]
10026eb3:	call   0x10005e33
10026eb8:	test   al,al
10026eba:	pop    ecx
10026ebb:	jne    0x10026f8c
10026ec1:	push   0x1007fd34
10026ec6:	mov    ecx,esi
10026ec8:	call   0x10001160
10026ecd:	test   al,al
10026ecf:	je     0x10026f8c
10026ed5:	push   DWORD PTR [edi]
10026ed7:	lea    ecx,[esp+0x18]
10026edb:	call   0x1000868a
10026ee0:	cmp    DWORD PTR [eax+0x18],0x10
10026ee4:	jb     0x10026eeb
10026ee6:	mov    eax,DWORD PTR [eax+0x4]
10026ee9:	jmp    0x10026eee
10026eeb:	add    eax,0x4
10026eee:	cmp    DWORD PTR [esp+0x64],0x10
10026ef3:	mov    ecx,DWORD PTR [esp+0x50]
10026ef7:	jae    0x10026efd
10026ef9:	lea    ecx,[esp+0x50]
10026efd:	push   eax
10026efe:	push   ecx
10026eff:	call   0x1000207c
10026f04:	pop    ecx
10026f05:	pop    ecx
10026f06:	push   0x0
10026f08:	push   0x1
10026f0a:	lea    ecx,[esp+0x1c]
10026f0e:	call   0x100012f9
10026f13:	push   0x35db8afa
10026f18:	push   0x10070650
10026f1d:	call   0x10003d63
10026f22:	push   eax
10026f23:	push   0x7
10026f25:	push   ebx
10026f26:	call   0x10003d75
10026f2b:	add    esp,0x14
10026f2e:	push   eax
10026f2f:	lea    ecx,[esp+0x18]
10026f33:	call   0x100011d6
10026f38:	lea    eax,[esp+0x14]
10026f3c:	push   eax
10026f3d:	mov    BYTE PTR [esp+0x7c],0x3
10026f42:	mov    eax,DWORD PTR [edi+0x4]
10026f45:	add    eax,0x18
10026f48:	push   eax
10026f49:	call   0x10007dad
10026f4e:	push   0x0
10026f50:	push   0x1
10026f52:	lea    ecx,[esp+0x1c]
10026f56:	call   0x100012f9
10026f5b:	mov    bl,0x1
10026f5d:	push   0x0
10026f5f:	push   0x1
10026f61:	lea    ecx,[esp+0x54]
10026f65:	call   0x100012f9
10026f6a:	mov    al,bl
10026f6c:	mov    ecx,DWORD PTR [esp+0x70]
10026f70:	mov    DWORD PTR fs:0x0,ecx
10026f77:	pop    ecx
10026f78:	pop    edi
10026f79:	pop    esi
10026f7a:	pop    ebx
10026f7b:	mov    ecx,DWORD PTR [esp+0x58]
10026f7f:	xor    ecx,esp
10026f81:	call   0x10041d97
10026f86:	mov    esp,ebp
10026f88:	pop    ebp
10026f89:	ret    0x4
10026f8c:	xor    bl,bl
10026f8e:	jmp    0x10026f5d
10026f90:	push   ebp
10026f91:	mov    ebp,esp
10026f93:	and    esp,0xfffffff8
10026f96:	push   0xffffffff
10026f98:	push   0x10062153
10026f9d:	mov    eax,fs:0x0
10026fa3:	push   eax
10026fa4:	sub    esp,0x2c
10026fa7:	mov    eax,ds:0x1007d030
10026fac:	xor    eax,esp
10026fae:	mov    DWORD PTR [esp+0x24],eax
10026fb2:	push   ebx
10026fb3:	push   edi
10026fb4:	mov    eax,ds:0x1007d030
10026fb9:	xor    eax,esp
10026fbb:	push   eax
10026fbc:	lea    eax,[esp+0x38]
10026fc0:	mov    fs:0x0,eax
10026fc6:	mov    ebx,DWORD PTR [ebp+0x8]
10026fc9:	lea    eax,[esp+0x14]
10026fcd:	push   eax
10026fce:	mov    DWORD PTR [esp+0x14],ecx
10026fd2:	mov    edi,edx
10026fd4:	call   0x100306c0
10026fd9:	pop    ecx
10026fda:	and    DWORD PTR [esp+0x40],0x0
10026fdf:	mov    eax,DWORD PTR [edi]
10026fe1:	push   esi
10026fe2:	lea    ecx,[esp+0x18]
10026fe6:	push   ecx
10026fe7:	push   eax
10026fe8:	call   0x10034eb0
10026fed:	mov    ecx,DWORD PTR [esi+0x70]
10026ff0:	shr    ecx,0x2
10026ff3:	test   cl,0x1
10026ff6:	jne    0x10026ffa
10026ff8:	xor    al,al
10026ffa:	test   al,al
10026ffc:	je     0x1002702e
10026ffe:	xor    eax,eax
10027000:	inc    eax
10027001:	push   0x0
10027003:	mov    DWORD PTR [ebx],eax
10027005:	push   eax
10027006:	lea    ecx,[esp+0x1c]
1002700a:	call   0x100012f9
1002700f:	mov    al,0x1
10027011:	mov    ecx,DWORD PTR [esp+0x38]
10027015:	mov    DWORD PTR fs:0x0,ecx
1002701c:	pop    ecx
1002701d:	pop    edi
1002701e:	pop    ebx
1002701f:	mov    ecx,DWORD PTR [esp+0x24]
10027023:	xor    ecx,esp
10027025:	call   0x10041d97
1002702a:	mov    esp,ebp
1002702c:	pop    ebp
1002702d:	ret    
1002702e:	mov    edi,DWORD PTR [edi]
10027030:	push   esi
10027031:	push   DWORD PTR [esp+0x14]
10027035:	push   edi
10027036:	call   0x10034eb0
1002703b:	test   al,al
1002703d:	je     0x10027048
1002703f:	and    DWORD PTR [ebx],0x0
10027042:	push   0x0
10027044:	push   0x1
10027046:	jmp    0x10027006
10027048:	push   esi
10027049:	push   DWORD PTR [esp+0x14]
1002704d:	push   0x1007fe34
10027052:	call   0x10012943
10027057:	test   al,al
10027059:	je     0x10027074
1002705b:	mov    DWORD PTR [ebx],0x2
10027061:	mov    bl,0x1
10027063:	push   0x0
10027065:	push   0x1
10027067:	lea    ecx,[esp+0x1c]
1002706b:	call   0x100012f9
10027070:	mov    al,bl
10027072:	jmp    0x10027011
10027074:	xor    bl,bl
10027076:	jmp    0x10027063
10027078:	push   ebp
10027079:	mov    ebp,esp
1002707b:	and    esp,0xfffffff8
1002707e:	push   0xffffffff
10027080:	push   0x10062130
10027085:	mov    eax,fs:0x0
1002708b:	push   eax
1002708c:	sub    esp,0x20
1002708f:	push   ebx
10027090:	mov    eax,ds:0x1007d030
10027095:	xor    eax,esp
10027097:	push   eax
10027098:	lea    eax,[esp+0x28]
1002709c:	mov    fs:0x0,eax
100270a2:	mov    ebx,edx
100270a4:	mov    eax,DWORD PTR [ebp+0x8]
100270a7:	sub    eax,0x0
100270aa:	je     0x100270ed
100270ac:	dec    eax
100270ad:	je     0x100270c2
100270af:	dec    eax
100270b0:	jne    0x100270f9
100270b2:	push   ecx
100270b3:	mov    ecx,DWORD PTR [ebp+0xc]
100270b6:	push   0x1007fe34
100270bb:	call   0x1001299e
100270c0:	jmp    0x100270f9
100270c2:	lea    eax,[esp+0x8]
100270c6:	push   eax
100270c7:	call   0x100306c0
100270cc:	pop    ecx
100270cd:	push   DWORD PTR [ebp+0xc]
100270d0:	and    DWORD PTR [esp+0x34],0x0
100270d5:	push   ebx
100270d6:	push   eax
100270d7:	push   DWORD PTR [esi]
100270d9:	call   0x10034d20
100270de:	push   0x0
100270e0:	push   0x1
100270e2:	lea    ecx,[esp+0x10]
100270e6:	call   0x100012f9
100270eb:	jmp    0x100270f9
100270ed:	push   DWORD PTR [ebp+0xc]
100270f0:	push   ebx
100270f1:	push   ecx
100270f2:	push   DWORD PTR [esi]
100270f4:	call   0x10034d20
100270f9:	mov    ecx,DWORD PTR [esp+0x28]
100270fd:	mov    DWORD PTR fs:0x0,ecx
10027104:	pop    ecx
10027105:	pop    ebx
10027106:	mov    esp,ebp
10027108:	pop    ebp
10027109:	ret    
1002710a:	push   ebp
1002710b:	sub    esp,0xa4
10027111:	lea    ebp,[esp-0x4]
10027115:	mov    eax,ds:0x1007d030
1002711a:	xor    eax,ebp
1002711c:	mov    DWORD PTR [ebp+0xa4],eax
10027122:	push   0x24
10027124:	mov    eax,0x10063bcb
10027129:	call   0x10058878
1002712e:	mov    eax,DWORD PTR [ebp+0xb0]
10027134:	xor    esi,esi
10027136:	mov    DWORD PTR [ebp-0x4],esi
10027139:	push   DWORD PTR [eax]
1002713b:	lea    ecx,[ebp+0x88]
10027141:	mov    DWORD PTR [ebp-0x2c],eax
10027144:	call   0x1000868a
10027149:	lea    eax,[ebp-0x20]
1002714c:	push   esi
1002714d:	push   eax
1002714e:	mov    BYTE PTR [ebp-0x4],0x1
10027152:	call   0x10002847
10027157:	pop    ecx
10027158:	pop    ecx
10027159:	mov    ecx,DWORD PTR [eax]
1002715b:	mov    ebx,ecx
1002715d:	mov    DWORD PTR [eax],esi
1002715f:	mov    DWORD PTR [ebp-0x1c],ebx
10027162:	lea    eax,[ebp-0x20]
10027165:	mov    BYTE PTR [ebp-0x4],0x2
10027169:	call   0x10003d3c
1002716e:	push   ebx
1002716f:	call   0x100028c5
10027174:	test   al,al
10027176:	jne    0x10027186
10027178:	lea    eax,[ebp-0x1c]
1002717b:	call   0x10003d3c
10027180:	push   esi
10027181:	jmp    0x1002734e
10027186:	lea    edi,[ebp+0x0]
10027189:	call   0x1001290e
1002718e:	lea    eax,[ebp-0x20]
10027191:	push   eax
10027192:	mov    esi,edi
10027194:	mov    edx,ebx
10027196:	lea    ecx,[ebp+0x88]
1002719c:	mov    BYTE PTR [ebp-0x4],0x3
100271a0:	call   0x10026f90
100271a5:	test   al,al
100271a7:	pop    ecx
100271a8:	je     0x1002733c
100271ae:	call   0x1002f5b0
100271b3:	mov    edi,eax
100271b5:	mov    eax,DWORD PTR [ebp+0x84]
100271bb:	cmp    eax,edx
100271bd:	mov    DWORD PTR [ebp-0x28],edi
100271c0:	mov    DWORD PTR [ebp-0x24],edx
100271c3:	jb     0x100271d9
100271c5:	ja     0x1002733c
100271cb:	mov    eax,DWORD PTR [ebp+0x80]
100271d1:	cmp    eax,edi
100271d3:	ja     0x1002733c
100271d9:	mov    eax,DWORD PTR [ebp+0x70]
100271dc:	shr    eax,0xa
100271df:	test   al,0x1
100271e1:	jne    0x1002724c
100271e3:	mov    eax,DWORD PTR [ebx]
100271e5:	push   0x5
100271e7:	push   eax
100271e8:	lea    ecx,[ebp-0x18]
100271eb:	call   0x10035720
100271f0:	mov    ecx,DWORD PTR [eax+0x4]
100271f3:	cmp    ecx,DWORD PTR [ebp-0x24]
100271f6:	jb     0x1002724c
100271f8:	ja     0x10027200
100271fa:	mov    eax,DWORD PTR [eax]
100271fc:	cmp    eax,edi
100271fe:	jbe    0x1002724c
10027200:	cmp    DWORD PTR [ebp+0xa0],0x10
10027207:	mov    eax,DWORD PTR [ebp+0x8c]
1002720d:	jae    0x10027215
1002720f:	lea    eax,[ebp+0x8c]
10027215:	push   eax
10027216:	call   0x1000207c
1002721b:	push   0xc
1002721d:	call   0x10037620
10027222:	xor    bl,bl
10027224:	pop    ecx
10027225:	pop    ecx
10027226:	lea    esi,[ebp+0x0]
10027229:	call   0x10002ecc
1002722e:	lea    eax,[ebp-0x1c]
10027231:	call   0x10003d3c
10027236:	push   0x0
10027238:	push   0x1
1002723a:	lea    ecx,[ebp+0x88]
10027240:	call   0x100012f9
10027245:	mov    al,bl
10027247:	jmp    0x1002735d
1002724c:	push   DWORD PTR [ebx]
1002724e:	call   0x10035a90
10027253:	mov    esi,0x2710
10027258:	mov    ecx,esi
1002725a:	mul    ecx
1002725c:	add    eax,edi
1002725e:	adc    edx,DWORD PTR [ebp-0x24]
10027261:	lea    ecx,[ebp-0x18]
10027264:	push   ecx
10027265:	mov    DWORD PTR [ebp-0x18],eax
10027268:	mov    eax,DWORD PTR [ebx]
1002726a:	push   eax
1002726b:	push   0x5
1002726d:	pop    ecx
1002726e:	mov    DWORD PTR [ebp-0x14],edx
10027271:	call   0x10035870
10027276:	mov    eax,DWORD PTR [ebp-0x2c]
10027279:	push   DWORD PTR [eax]
1002727b:	call   0x10026244
10027280:	test   al,al
10027282:	pop    ecx
10027283:	jne    0x1002730d
10027289:	push   0x0
1002728b:	push   esi
1002728c:	push   DWORD PTR [ebp+0x7c]
1002728f:	push   DWORD PTR [ebp+0x78]
10027292:	call   0x1005e310
10027297:	push   DWORD PTR [ebx]
10027299:	and    DWORD PTR [ebp-0x14],0x0
1002729d:	mov    edi,eax
1002729f:	mov    DWORD PTR [ebp-0x30],edi
100272a2:	call   0x10035dd0
100272a7:	lea    ecx,[ebp-0x30]
100272aa:	push   ecx
100272ab:	lea    ecx,[ebp-0x14]
100272ae:	push   ecx
100272af:	mov    ecx,DWORD PTR [ebp-0x2c]
100272b2:	push   eax
100272b3:	push   edi
100272b4:	push   DWORD PTR [ebp-0x20]
100272b7:	lea    eax,[ebp+0x88]
100272bd:	push   eax
100272be:	lea    edx,[ebp+0x0]
100272c1:	call   0x10027388
100272c6:	mov    eax,DWORD PTR [ebp-0x30]
100272c9:	push   0x0
100272cb:	cdq    
100272cc:	push   esi
100272cd:	push   edx
100272ce:	push   eax
100272cf:	call   0x1004b7c0
100272d4:	add    eax,DWORD PTR [ebp-0x28]
100272d7:	push   0x0
100272d9:	adc    edx,DWORD PTR [ebp-0x24]
100272dc:	mov    DWORD PTR [ebp-0x28],eax
100272df:	mov    eax,DWORD PTR [ebp-0x14]
100272e2:	mov    DWORD PTR [ebp-0x24],edx
100272e5:	cdq    
100272e6:	push   esi
100272e7:	push   edx
100272e8:	push   eax
100272e9:	call   0x1004b7c0
100272ee:	mov    DWORD PTR [ebp-0x18],eax
100272f1:	lea    eax,[ebp-0x28]
100272f4:	push   eax
100272f5:	push   DWORD PTR [ebp-0x20]
100272f8:	mov    DWORD PTR [ebp-0x14],edx
100272fb:	lea    edx,[ebp-0x18]
100272fe:	mov    esi,ebx
10027300:	lea    ecx,[ebp+0x88]
10027306:	call   0x10027078
1002730b:	jmp    0x10027335
1002730d:	cmp    DWORD PTR [ebp+0x50],0x10
10027311:	mov    ecx,DWORD PTR [ebp+0x3c]
10027314:	jae    0x10027319
10027316:	lea    ecx,[ebp+0x3c]
10027319:	cmp    DWORD PTR [ebp+0xa0],0x10
10027320:	mov    eax,DWORD PTR [ebp+0x8c]
10027326:	jae    0x1002732e
10027328:	lea    eax,[ebp+0x8c]
1002732e:	push   ecx
1002732f:	push   eax
10027330:	call   0x1000207c
10027335:	mov    bl,0x1
10027337:	jmp    0x10027224
1002733c:	lea    esi,[ebp+0x0]
1002733f:	call   0x10002ecc
10027344:	lea    eax,[ebp-0x1c]
10027347:	call   0x10003d3c
1002734c:	push   0x0
1002734e:	push   0x1
10027350:	lea    ecx,[ebp+0x88]
10027356:	call   0x100012f9
1002735b:	xor    al,al
1002735d:	mov    ecx,DWORD PTR [ebp-0xc]
10027360:	mov    DWORD PTR fs:0x0,ecx
10027367:	pop    ecx
10027368:	pop    edi
10027369:	pop    esi
1002736a:	pop    ebx
1002736b:	mov    ecx,DWORD PTR [ebp+0xa4]
10027371:	xor    ecx,ebp
10027373:	call   0x10041d97
10027378:	add    ebp,0xa8
1002737e:	leave  
1002737f:	ret    0x4
10027382:	mov    eax,0x1002735b
10027387:	ret    
10027388:	push   ebp
10027389:	mov    ebp,esp
1002738b:	and    esp,0xfffffff8
1002738e:	push   0xffffffff
10027390:	push   0x10063b82
10027395:	mov    eax,fs:0x0
1002739b:	push   eax
1002739c:	sub    esp,0x120
100273a2:	mov    eax,ds:0x1007d030
100273a7:	xor    eax,esp
100273a9:	mov    DWORD PTR [esp+0x118],eax
100273b0:	push   ebx
100273b1:	push   esi
100273b2:	push   edi
100273b3:	mov    eax,ds:0x1007d030
100273b8:	xor    eax,esp
100273ba:	push   eax
100273bb:	lea    eax,[esp+0x130]
100273c2:	mov    fs:0x0,eax
100273c8:	mov    eax,DWORD PTR [ebp+0x8]
100273cb:	mov    DWORD PTR [esp+0x20],eax
100273cf:	mov    eax,DWORD PTR [ebp+0x18]
100273d2:	mov    DWORD PTR [esp+0x24],eax
100273d6:	mov    eax,DWORD PTR [ebp+0x1c]
100273d9:	mov    esi,edx
100273db:	mov    DWORD PTR [esp+0x44],eax
100273df:	mov    edi,ecx
100273e1:	lea    eax,[esi+0x38]
100273e4:	push   eax
100273e5:	lea    ecx,[esp+0x84]
100273ec:	mov    DWORD PTR [esp+0x20],edi
100273f0:	call   0x100011b0
100273f5:	lea    eax,[esi+0x54]
100273f8:	xor    ebx,ebx
100273fa:	push   eax
100273fb:	lea    ecx,[esp+0xd8]
10027402:	mov    DWORD PTR [esp+0x13c],ebx
10027409:	call   0x100011b0
1002740e:	mov    BYTE PTR [esp+0x138],0x1
10027416:	mov    eax,DWORD PTR [esi+0x70]
10027419:	lea    edx,[esp+0x80]
10027420:	lea    ecx,[esp+0x10c]
10027427:	mov    DWORD PTR [esp+0x14],eax
1002742b:	call   0x10033980
10027430:	push   0x1006bb18
10027435:	lea    esi,[esp+0x110]
1002743c:	mov    BYTE PTR [esp+0x13c],0x2
10027444:	call   0x10005e33
10027449:	test   al,al
1002744b:	pop    ecx
1002744c:	jne    0x10027460
1002744e:	push   0xffffffff
10027450:	push   ebx
10027451:	mov    eax,esi
10027453:	push   eax
10027454:	lea    ecx,[esp+0x8c]
1002745b:	call   0x1000124a
10027460:	mov    eax,DWORD PTR [esp+0x14]
10027464:	shr    eax,0x3
10027467:	test   al,0x1
10027469:	mov    esi,0x1006c320
1002746e:	je     0x10027598
10027474:	push   0x10070674
10027479:	push   0x7
1002747b:	push   esi
1002747c:	call   0x10003d75
10027481:	add    esp,0xc
10027484:	push   eax
10027485:	lea    ecx,[esp+0xa0]
1002748c:	call   0x100011d6
10027491:	push   ebx
10027492:	lea    eax,[esp+0xa0]
10027499:	push   eax
1002749a:	lea    eax,[esp+0xc0]
100274a1:	push   eax
100274a2:	mov    BYTE PTR [esp+0x144],0x3
100274aa:	mov    eax,DWORD PTR [edi]
100274ac:	add    eax,0x18
100274af:	call   0x1000800f
100274b4:	push   eax
100274b5:	push   DWORD PTR [esp+0x24]
100274b9:	lea    ecx,[esp+0xf8]
100274c0:	mov    BYTE PTR [esp+0x140],0x4
100274c8:	call   0x10028405
100274cd:	mov    DWORD PTR [esp+0x10],eax
100274d1:	push   0x79275cd0
100274d6:	push   0x10070698
100274db:	mov    BYTE PTR [esp+0x140],0x5
100274e3:	call   0x10003d63
100274e8:	push   0x6435c766
100274ed:	push   eax
100274ee:	call   0x10003d63
100274f3:	push   eax
100274f4:	push   0x5
100274f6:	push   0x100706c8
100274fb:	call   0x10003d75
10027500:	add    esp,0x1c
10027503:	push   eax
10027504:	lea    eax,[esp+0x84]
1002750b:	push   eax
1002750c:	lea    eax,[esp+0x50]
10027510:	push   eax
10027511:	call   0x10005dcb
10027516:	add    esp,0xc
10027519:	mov    BYTE PTR [esp+0x138],0x6
10027521:	push   DWORD PTR [esp+0x10]
10027525:	push   eax
10027526:	lea    eax,[esp+0x30]
1002752a:	push   eax
1002752b:	call   0x1000a3d1
10027530:	add    esp,0xc
10027533:	push   0xffffffff
10027535:	push   ebx
10027536:	push   eax
10027537:	lea    ecx,[esp+0x8c]
1002753e:	mov    BYTE PTR [esp+0x144],0x7
10027546:	call   0x1000124a
1002754b:	push   ebx
1002754c:	push   0x1
1002754e:	lea    ecx,[esp+0x30]
10027552:	call   0x100012f9
10027557:	push   ebx
10027558:	push   0x1
1002755a:	lea    ecx,[esp+0x50]
1002755e:	call   0x100012f9
10027563:	push   ebx
10027564:	push   0x1
10027566:	lea    ecx,[esp+0xf8]
1002756d:	call   0x100012f9
10027572:	push   ebx
10027573:	push   0x1
10027575:	lea    ecx,[esp+0xc0]
1002757c:	call   0x100012f9
10027581:	push   ebx
10027582:	push   0x1
10027584:	lea    ecx,[esp+0xa4]
1002758b:	mov    BYTE PTR [esp+0x140],0x2
10027593:	call   0x100012f9
10027598:	mov    eax,DWORD PTR [esp+0x14]
1002759c:	shr    eax,0x4
1002759f:	test   al,0x1
100275a1:	je     0x10027860
100275a7:	push   ebx
100275a8:	lea    ecx,[esp+0xa0]
100275af:	mov    DWORD PTR [esp+0xb8],0xf
100275ba:	call   0x10001425
100275bf:	push   ebx
100275c0:	lea    ecx,[esp+0xf4]
100275c7:	mov    DWORD PTR [esp+0x10c],0xf
100275d2:	call   0x10001425
100275d7:	push   ebx
100275d8:	lea    ecx,[esp+0xbc]
100275df:	mov    DWORD PTR [esp+0x14],ebx
100275e3:	mov    DWORD PTR [esp+0xd4],0xf
100275ee:	call   0x10001425
100275f3:	cmp    DWORD PTR [ebp+0xc],0x2
100275f7:	mov    BYTE PTR [esp+0x138],0xa
100275ff:	mov    eax,0x100706d0
10027604:	je     0x1002760b
10027606:	mov    eax,0x100706d4
1002760b:	push   eax
1002760c:	lea    ecx,[esp+0x2c]
10027610:	call   0x100011d6
10027615:	push   0x30bc439a
1002761a:	push   0x100706d8
1002761f:	mov    BYTE PTR [esp+0x140],0xb
10027627:	call   0x10003d63
1002762c:	push   0x4dfa6f72
10027631:	push   eax
10027632:	call   0x10003d63
10027637:	push   0x56346b16
1002763c:	push   eax
1002763d:	call   0x10003d63
10027642:	push   0xeb46924
10027647:	push   eax
10027648:	call   0x10003d63
1002764d:	push   0x60f193fc
10027652:	push   eax
10027653:	call   0x10003d63
10027658:	push   eax
10027659:	push   0x7
1002765b:	push   esi
1002765c:	call   0x10003d75
10027661:	add    esp,0x34
10027664:	push   eax
10027665:	lea    ecx,[esp+0x4c]
10027669:	call   0x100011d6
1002766e:	push   ebx
1002766f:	lea    eax,[esp+0x4c]
10027673:	push   eax
10027674:	lea    eax,[esp+0x6c]
10027678:	push   eax
10027679:	mov    BYTE PTR [esp+0x144],0xc
10027681:	mov    eax,DWORD PTR [edi]
10027683:	add    eax,0x18
10027686:	call   0x1000800f
1002768b:	push   DWORD PTR [esp+0x44]
1002768f:	mov    BYTE PTR [esp+0x13c],0xd
10027697:	push   DWORD PTR [esp+0x28]
1002769b:	lea    ecx,[esp+0xc0]
100276a2:	push   ecx
100276a3:	lea    ecx,[esp+0xfc]
100276aa:	push   ecx
100276ab:	lea    ecx,[esp+0xac]
100276b2:	push   ecx
100276b3:	lea    ecx,[esp+0x24]
100276b7:	push   ecx
100276b8:	push   DWORD PTR [ebp+0x14]
100276bb:	lea    ecx,[esp+0x44]
100276bf:	push   DWORD PTR [ebp+0x10]
100276c2:	mov    edx,eax
100276c4:	push   ecx
100276c5:	lea    ecx,[esp+0xf8]
100276cc:	push   ecx
100276cd:	lea    ecx,[esp+0xa8]
100276d4:	push   ecx
100276d5:	mov    ecx,DWORD PTR [esp+0x4c]
100276d9:	call   0x10027df6
100276de:	push   ebx
100276df:	push   0x1
100276e1:	lea    ecx,[esp+0x6c]
100276e5:	mov    BYTE PTR [esp+0x23],al
100276e9:	call   0x100012f9
100276ee:	push   ebx
100276ef:	push   0x1
100276f1:	lea    ecx,[esp+0x50]
100276f5:	call   0x100012f9
100276fa:	push   ebx
100276fb:	push   0x1
100276fd:	lea    ecx,[esp+0x30]
10027701:	mov    BYTE PTR [esp+0x140],0xa
10027709:	call   0x100012f9
1002770e:	cmp    BYTE PTR [esp+0x1b],bl
10027712:	je     0x10027823
10027718:	mov    eax,DWORD PTR [esp+0x10]
1002771c:	mov    ecx,eax
1002771e:	shr    ecx,0x8
10027721:	test   cl,0x1
10027724:	je     0x100277ef
1002772a:	push   0x24
1002772c:	call   0x1004239e
10027731:	pop    ecx
10027732:	mov    DWORD PTR [esp+0x24],eax
10027736:	cmp    eax,ebx
10027738:	mov    BYTE PTR [esp+0x138],0xe
10027740:	je     0x1002774c
10027742:	push   eax
10027743:	call   0x100071d9
10027748:	mov    esi,eax
1002774a:	jmp    0x1002774e
1002774c:	xor    esi,esi
1002774e:	mov    BYTE PTR [esp+0x138],0xa
10027756:	mov    eax,DWORD PTR [edi+0xc]
10027759:	cmp    esi,eax
1002775b:	je     0x1002776c
1002775d:	cmp    eax,ebx
1002775f:	je     0x1002776c
10027761:	mov    edi,eax
10027763:	call   0x100099a6
10027768:	mov    edi,DWORD PTR [esp+0x1c]
1002776c:	cmp    DWORD PTR [esp+0xd0],0x10
10027774:	mov    eax,DWORD PTR [esp+0xbc]
1002777b:	mov    DWORD PTR [edi+0xc],esi
1002777e:	jae    0x10027787
10027780:	lea    eax,[esp+0xbc]
10027787:	mov    esi,DWORD PTR [esp+0x1c]
1002778b:	mov    edi,DWORD PTR [esp+0xcc]
10027792:	push   eax
10027793:	mov    eax,DWORD PTR [esi+0xc]
10027796:	call   0x10007221
1002779b:	mov    BYTE PTR [esi+0x14],0x1
1002779f:	xor    esi,esi
100277a1:	push   ebx
100277a2:	inc    esi
100277a3:	push   esi
100277a4:	lea    ecx,[esp+0xc0]
100277ab:	call   0x100012f9
100277b0:	push   ebx
100277b1:	push   esi
100277b2:	lea    ecx,[esp+0xf8]
100277b9:	call   0x100012f9
100277be:	push   ebx
100277bf:	push   esi
100277c0:	lea    ecx,[esp+0xa4]
100277c7:	call   0x100012f9
100277cc:	push   ebx
100277cd:	push   esi
100277ce:	lea    ecx,[esp+0x114]
100277d5:	call   0x100012f9
100277da:	push   ebx
100277db:	push   esi
100277dc:	lea    ecx,[esp+0xdc]
100277e3:	call   0x100012f9
100277e8:	push   ebx
100277e9:	push   esi
100277ea:	jmp    0x10027dc2
100277ef:	push   0xffffffff
100277f1:	mov    DWORD PTR [esp+0x18],eax
100277f5:	push   ebx
100277f6:	lea    eax,[esp+0xa4]
100277fd:	push   eax
100277fe:	lea    ecx,[esp+0x8c]
10027805:	call   0x1000124a
1002780a:	push   0xffffffff
1002780c:	push   ebx
1002780d:	lea    eax,[esp+0xf8]
10027814:	push   eax
10027815:	lea    ecx,[esp+0xe0]
1002781c:	call   0x1000124a
10027821:	jmp    0x1002782b
10027823:	push   0x5
10027825:	call   0x10037620
1002782a:	pop    ecx
1002782b:	push   ebx
1002782c:	push   0x1
1002782e:	lea    ecx,[esp+0xc0]
10027835:	call   0x100012f9
1002783a:	push   ebx
1002783b:	push   0x1
1002783d:	lea    ecx,[esp+0xf8]
10027844:	call   0x100012f9
10027849:	push   ebx
1002784a:	push   0x1
1002784c:	lea    ecx,[esp+0xa4]
10027853:	mov    BYTE PTR [esp+0x140],0x2
1002785b:	call   0x100012f9
10027860:	mov    eax,DWORD PTR [esp+0x14]
10027864:	shr    eax,0x5
10027867:	test   al,0x1
10027869:	je     0x10027c8d
1002786f:	push   0x1006bb18
10027874:	lea    esi,[esp+0x84]
1002787b:	call   0x10005e33
10027880:	test   al,al
10027882:	pop    ecx
10027883:	jne    0x10027da1
10027889:	cmp    DWORD PTR [ebp+0xc],0x2
1002788d:	jne    0x1002790a
1002788f:	cmp    DWORD PTR [esp+0x98],0x10
10027897:	mov    eax,DWORD PTR [esp+0x84]
1002789e:	jae    0x100278a7
100278a0:	lea    eax,[esp+0x84]
100278a7:	push   eax
100278a8:	lea    ecx,[esp+0x2c]
100278ac:	call   0x100011d6
100278b1:	push   0x1f4
100278b6:	mov    BYTE PTR [esp+0x13c],0xf
100278be:	push   DWORD PTR ds:0x1007fec4
100278c4:	call   DWORD PTR ds:0x10065084
100278ca:	test   eax,eax
100278cc:	jne    0x100278f6
100278ce:	mov    eax,ds:0x1007febc
100278d3:	mov    edi,0x1007feb8
100278d8:	push   eax
100278d9:	mov    ecx,edi
100278db:	push   ecx
100278dc:	lea    eax,[esp+0x30]
100278e0:	push   eax
100278e1:	call   0x1001929e
100278e6:	push   DWORD PTR ds:0x1007fec4
100278ec:	call   DWORD PTR ds:0x10065094
100278f2:	mov    edi,DWORD PTR [esp+0x1c]
100278f6:	push   ebx
100278f7:	push   0x1
100278f9:	lea    ecx,[esp+0x30]
100278fd:	mov    BYTE PTR [esp+0x140],0x2
10027905:	call   0x100012f9
1002790a:	cmp    DWORD PTR [esp+0x98],0x10
10027912:	mov    ecx,DWORD PTR [esp+0x84]
10027919:	jae    0x10027922
1002791b:	lea    ecx,[esp+0x84]
10027922:	mov    eax,DWORD PTR [esp+0x20]
10027926:	cmp    DWORD PTR [eax+0x18],0x10
1002792a:	jb     0x10027931
1002792c:	mov    eax,DWORD PTR [eax+0x4]
1002792f:	jmp    0x10027934
10027931:	add    eax,0x4
10027934:	push   ecx
10027935:	push   eax
10027936:	call   0x1000207c
1002793b:	push   0x73edf85c
10027940:	push   0x10070708
10027945:	call   0x10003d63
1002794a:	push   eax
1002794b:	push   0xc
1002794d:	push   0x10070730
10027952:	call   0x10003d75
10027957:	add    esp,0x1c
1002795a:	push   eax
1002795b:	lea    ecx,[esp+0xa0]
10027962:	call   0x100011d6
10027967:	push   0x18dd67f6
1002796c:	push   0x10070740
10027971:	mov    BYTE PTR [esp+0x140],0x10
10027979:	call   0x10003d63
1002797e:	push   0x64dfa2b2
10027983:	push   eax
10027984:	call   0x10003d63
10027989:	push   0x56f69e70
1002798e:	push   eax
1002798f:	call   0x10003d63
10027994:	push   eax
10027995:	push   0x3
10027997:	push   0x10070768
1002799c:	call   0x10003d75
100279a1:	add    esp,0x24
100279a4:	push   eax
100279a5:	lea    ecx,[esp+0x4c]
100279a9:	call   0x100011d6
100279ae:	push   0x1201788e
100279b3:	push   0x1007076c
100279b8:	mov    BYTE PTR [esp+0x140],0x11
100279c0:	call   0x10003d63
100279c5:	push   0x5e444eae
100279ca:	push   eax
100279cb:	call   0x10003d63
100279d0:	push   0x2fe12bea
100279d5:	push   eax
100279d6:	call   0x10003d63
100279db:	push   0x177875bc
100279e0:	push   eax
100279e1:	call   0x10003d63
100279e6:	push   0x49ebb5e0
100279eb:	push   eax
100279ec:	call   0x10003d63
100279f1:	push   0x27433950
100279f6:	push   eax
100279f7:	call   0x10003d63
100279fc:	push   eax
100279fd:	push   0x8
100279ff:	push   0x100707a8
10027a04:	call   0x10003d75
10027a09:	add    esp,0x3c
10027a0c:	push   eax
10027a0d:	lea    ecx,[esp+0x2c]
10027a11:	call   0x100011d6
10027a16:	lea    eax,[esp+0x9c]
10027a1d:	push   eax
10027a1e:	lea    eax,[esp+0x4c]
10027a22:	mov    BYTE PTR [esp+0x13c],0x12
10027a2a:	add    edi,0x8
10027a2d:	push   eax
10027a2e:	lea    ecx,[esp+0x30]
10027a32:	mov    DWORD PTR [esp+0x2c],edi
10027a36:	call   0x10009124
10027a3b:	pop    ecx
10027a3c:	pop    ecx
10027a3d:	mov    ebx,eax
10027a3f:	call   0x10026331
10027a44:	xor    edi,edi
10027a46:	xor    ebx,ebx
10027a48:	push   edi
10027a49:	inc    ebx
10027a4a:	push   ebx
10027a4b:	lea    ecx,[esp+0x30]
10027a4f:	call   0x100012f9
10027a54:	push   edi
10027a55:	push   ebx
10027a56:	lea    ecx,[esp+0x50]
10027a5a:	call   0x100012f9
10027a5f:	push   edi
10027a60:	push   ebx
10027a61:	lea    ecx,[esp+0xa4]
10027a68:	mov    BYTE PTR [esp+0x140],0x2
10027a70:	call   0x100012f9
10027a75:	push   0x469203c
10027a7a:	push   0x100707b4
10027a7f:	call   0x10003d63
10027a84:	push   0x31fbfe22
10027a89:	push   eax
10027a8a:	call   0x10003d63
10027a8f:	push   0x4f07ce8c
10027a94:	push   eax
10027a95:	call   0x10003d63
10027a9a:	push   0x274c88e6
10027a9f:	push   eax
10027aa0:	call   0x10003d63
10027aa5:	push   eax
10027aa6:	push   0x7
10027aa8:	push   0x1006c320
10027aad:	call   0x10003d75
10027ab2:	add    esp,0x2c
10027ab5:	push   eax
10027ab6:	lea    ecx,[esp+0x2c]
10027aba:	call   0x100011d6
10027abf:	push   edi
10027ac0:	lea    eax,[esp+0x2c]
10027ac4:	push   eax
10027ac5:	lea    eax,[esp+0xa4]
10027acc:	push   eax
10027acd:	mov    eax,DWORD PTR [esp+0x28]
10027ad1:	mov    BYTE PTR [esp+0x144],0x13
10027ad9:	mov    eax,DWORD PTR [eax]
10027adb:	add    eax,0x18
10027ade:	call   0x1000800f
10027ae3:	push   edi
10027ae4:	push   ebx
10027ae5:	lea    ecx,[esp+0x30]
10027ae9:	mov    BYTE PTR [esp+0x140],0x15
10027af1:	call   0x100012f9
10027af6:	push   0x1006bb18
10027afb:	lea    esi,[esp+0xa0]
10027b02:	call   0x10005e33
10027b07:	test   al,al
10027b09:	pop    ecx
10027b0a:	jne    0x10027b44
10027b0c:	push   0x1006baf8
10027b11:	lea    ecx,[esp+0x4c]
10027b15:	call   0x100011d6
10027b1a:	push   edi
10027b1b:	mov    eax,esi
10027b1d:	push   eax
10027b1e:	lea    ebx,[esp+0x50]
10027b22:	mov    edi,0x1007fd34
10027b27:	mov    BYTE PTR [esp+0x140],0x16
10027b2f:	call   0x10019537
10027b34:	push   0x0
10027b36:	push   0x1
10027b38:	mov    ecx,ebx
10027b3a:	call   0x100012f9
10027b3f:	xor    ebx,ebx
10027b41:	inc    ebx
10027b42:	xor    edi,edi
10027b44:	push   edi
10027b45:	push   ebx
10027b46:	lea    ecx,[esp+0xa4]
10027b4d:	mov    BYTE PTR [esp+0x140],0x2
10027b55:	call   0x100012f9
10027b5a:	push   0x4375ac84
10027b5f:	push   0x100707e0
10027b64:	call   0x10003d63
10027b69:	push   0x6ae3fa5a
10027b6e:	push   eax
10027b6f:	call   0x10003d63
10027b74:	push   eax
10027b75:	push   0x8
10027b77:	push   0x10070808
10027b7c:	call   0x10003d75
10027b81:	add    esp,0x1c
10027b84:	push   eax
10027b85:	lea    ecx,[esp+0x2c]
10027b89:	call   0x100011d6
10027b8e:	mov    BYTE PTR [esp+0x138],0x17
10027b96:	mov    esi,DWORD PTR [esp+0x24]
10027b9a:	mov    eax,DWORD PTR [esi]
10027b9c:	push   edi
10027b9d:	lea    ecx,[esp+0x2c]
10027ba1:	push   ecx
10027ba2:	lea    edx,[eax+0x20]
10027ba5:	lea    ecx,[esp+0x88]
10027bac:	call   0x10007aa4
10027bb1:	push   edi
10027bb2:	push   ebx
10027bb3:	lea    ecx,[esp+0x30]
10027bb7:	mov    BYTE PTR [esp+0x140],0x2
10027bbf:	call   0x100012f9
10027bc4:	push   0x1006bb1c
10027bc9:	lea    ecx,[esp+0x4c]
10027bcd:	call   0x100011d6
10027bd2:	push   0x75424202
10027bd7:	push   0x10070814
10027bdc:	mov    BYTE PTR [esp+0x140],0x18
10027be4:	call   0x10003d63
10027be9:	push   0x31a6196e
10027bee:	push   eax
10027bef:	call   0x10003d63
10027bf4:	push   eax
10027bf5:	push   0xe
10027bf7:	push   0x1006c62c
10027bfc:	call   0x10003d75
10027c01:	add    esp,0x1c
10027c04:	push   eax
10027c05:	lea    ecx,[esp+0x2c]
10027c09:	call   0x100011d6
10027c0e:	mov    BYTE PTR [esp+0x138],0x19
10027c16:	mov    eax,DWORD PTR [esi]
10027c18:	push   edi
10027c19:	lea    ecx,[esp+0x2c]
10027c1d:	push   ecx
10027c1e:	lea    edx,[eax+0x20]
10027c21:	lea    ecx,[esp+0x50]
10027c25:	call   0x10007aa4
10027c2a:	push   edi
10027c2b:	push   ebx
10027c2c:	lea    ecx,[esp+0x30]
10027c30:	call   0x100012f9
10027c35:	push   edi
10027c36:	push   ebx
10027c37:	lea    ecx,[esp+0x50]
10027c3b:	mov    BYTE PTR [esp+0x140],0x2
10027c43:	call   0x100012f9
10027c48:	mov    eax,DWORD PTR [esp+0x1c]
10027c4c:	push   0x1006bb18
10027c51:	lea    esi,[esp+0xd8]
10027c58:	mov    BYTE PTR [eax+0x14],bl
10027c5b:	call   0x10005e33
10027c60:	test   al,al
10027c62:	pop    ecx
10027c63:	jne    0x10027d8a
10027c69:	mov    eax,DWORD PTR [esp+0x14]
10027c6d:	sar    eax,0x6
10027c70:	and    eax,0x3
10027c73:	push   eax
10027c74:	lea    eax,[esp+0x84]
10027c7b:	push   eax
10027c7c:	mov    ebx,esi
10027c7e:	mov    edi,0x1007fec8
10027c83:	call   0x10019537
10027c88:	jmp    0x10027d8a
10027c8d:	mov    eax,DWORD PTR [esp+0x20]
10027c91:	cmp    DWORD PTR [eax+0x18],0x10
10027c95:	jb     0x10027c9c
10027c97:	mov    eax,DWORD PTR [eax+0x4]
10027c9a:	jmp    0x10027c9f
10027c9c:	add    eax,0x4
10027c9f:	push   eax
10027ca0:	call   0x1000207c
10027ca5:	mov    eax,DWORD PTR [esp+0x18]
10027ca9:	sar    eax,0x6
10027cac:	and    eax,0x3
10027caf:	pop    ecx
10027cb0:	mov    DWORD PTR [esp+0x10],eax
10027cb4:	je     0x10027d8c
10027cba:	push   0x27493c8c
10027cbf:	push   0x1007084c
10027cc4:	call   0x10003d63
10027cc9:	push   eax
10027cca:	push   0x7
10027ccc:	push   esi
10027ccd:	call   0x10003d75
10027cd2:	add    esp,0x14
10027cd5:	push   eax
10027cd6:	lea    ecx,[esp+0x2c]
10027cda:	call   0x100011d6
10027cdf:	lea    eax,[esp+0x28]
10027ce3:	push   eax
10027ce4:	mov    BYTE PTR [esp+0x13c],0x1a
10027cec:	mov    eax,DWORD PTR [edi+0x4]
10027cef:	add    eax,0x18
10027cf2:	push   eax
10027cf3:	call   0x10007dad
10027cf8:	push   ebx
10027cf9:	push   0x1
10027cfb:	lea    ecx,[esp+0x30]
10027cff:	mov    BYTE PTR [esp+0x140],0x2
10027d07:	call   0x100012f9
10027d0c:	push   DWORD PTR [esp+0x10]
10027d10:	lea    ebx,[esp+0xd8]
10027d17:	push   DWORD PTR [esp+0x24]
10027d1b:	mov    edi,0x1007fec8
10027d20:	call   0x10019537
10027d25:	cmp    DWORD PTR [esp+0x10],0x1
10027d2a:	jne    0x10027d8a
10027d2c:	push   0x73a8d594
10027d31:	push   0x10070870
10027d36:	call   0x10003d63
10027d3b:	push   eax
10027d3c:	push   0x7
10027d3e:	push   0x1006c320
10027d43:	call   0x10003d75
10027d48:	add    esp,0x14
10027d4b:	push   eax
10027d4c:	lea    ecx,[esp+0x2c]
10027d50:	call   0x100011d6
10027d55:	push   0x0
10027d57:	lea    eax,[esp+0x2c]
10027d5b:	push   eax
10027d5c:	mov    eax,DWORD PTR [esp+0x24]
10027d60:	mov    BYTE PTR [esp+0x140],0x1b
10027d68:	mov    edx,DWORD PTR [eax+0x4]
10027d6b:	add    edx,0x18
10027d6e:	mov    ecx,ebx
10027d70:	call   0x10007aa4
10027d75:	push   0x0
10027d77:	push   0x1
10027d79:	lea    ecx,[esp+0x30]
10027d7d:	mov    BYTE PTR [esp+0x140],0x2
10027d85:	call   0x100012f9
10027d8a:	xor    ebx,ebx
10027d8c:	mov    eax,DWORD PTR [esp+0x14]
10027d90:	shr    eax,0x9
10027d93:	test   al,0x1
10027d95:	je     0x10027da1
10027d97:	push   0x1007ff10
10027d9c:	call   0x1001a2c7
10027da1:	push   ebx
10027da2:	push   0x1
10027da4:	lea    ecx,[esp+0x114]
10027dab:	call   0x100012f9
10027db0:	push   ebx
10027db1:	push   0x1
10027db3:	lea    ecx,[esp+0xdc]
10027dba:	call   0x100012f9
10027dbf:	push   ebx
10027dc0:	push   0x1
10027dc2:	lea    ecx,[esp+0x88]
10027dc9:	call   0x100012f9
10027dce:	mov    al,0x1
10027dd0:	mov    ecx,DWORD PTR [esp+0x130]
10027dd7:	mov    DWORD PTR fs:0x0,ecx
10027dde:	pop    ecx
10027ddf:	pop    edi
10027de0:	pop    esi
10027de1:	pop    ebx
10027de2:	mov    ecx,DWORD PTR [esp+0x118]
10027de9:	xor    ecx,esp
10027deb:	call   0x10041d97
10027df0:	mov    esp,ebp
10027df2:	pop    ebp
10027df3:	ret    0x18
10027df6:	push   0x138
10027dfb:	mov    eax,0x100637b2
10027e00:	call   0x100588e4
10027e05:	mov    eax,DWORD PTR [ebp+0xc]
10027e08:	mov    ebx,DWORD PTR [ebp+0x8]
10027e0b:	and    DWORD PTR [ebp-0x4],0x0
10027e0f:	mov    DWORD PTR [ebp-0xc0],eax
10027e15:	mov    eax,DWORD PTR [ebp+0x10]
10027e18:	mov    DWORD PTR [ebp-0xc4],eax
10027e1e:	mov    eax,DWORD PTR [ebp+0x1c]
10027e21:	mov    DWORD PTR [ebp-0x104],eax
10027e27:	mov    eax,DWORD PTR [ebp+0x20]
10027e2a:	mov    DWORD PTR [ebp-0x108],eax
10027e30:	mov    eax,DWORD PTR [ebp+0x24]
10027e33:	mov    DWORD PTR [ebp-0x100],eax
10027e39:	mov    eax,DWORD PTR [ebp+0x28]
10027e3c:	mov    DWORD PTR [ebp-0xf8],eax
10027e42:	mov    eax,DWORD PTR [ebp+0x2c]
10027e45:	mov    DWORD PTR [ebp-0xf4],eax
10027e4b:	mov    eax,DWORD PTR [ebp+0x30]
10027e4e:	mov    edi,ecx
10027e50:	lea    ecx,[ebp-0xb8]
10027e56:	mov    esi,edx
10027e58:	mov    DWORD PTR [ebp-0xfc],eax
10027e5e:	call   0x10018131
10027e63:	cmp    DWORD PTR [ebp-0xa0],0x10
10027e6a:	mov    ecx,DWORD PTR [ebp-0xb4]
10027e70:	jae    0x10027e78
10027e72:	lea    ecx,[ebp-0xb4]
10027e78:	cmp    DWORD PTR [edi+0x18],0x10
10027e7c:	jb     0x10027e83
10027e7e:	mov    eax,DWORD PTR [edi+0x4]
10027e81:	jmp    0x10027e86
10027e83:	lea    eax,[edi+0x4]
10027e86:	push   ecx
10027e87:	push   eax
10027e88:	call   0x1000207c
10027e8d:	pop    ecx
10027e8e:	pop    ecx
10027e8f:	push   0x0
10027e91:	lea    ecx,[ebp-0x9c]
10027e97:	mov    DWORD PTR [ebp-0x84],0xf
10027ea1:	call   0x10001425
10027ea6:	push   0x1f8c1428
10027eab:	push   0x10070898
10027eb0:	mov    BYTE PTR [ebp-0x4],0x2
10027eb4:	call   0x10003d63
10027eb9:	pop    ecx
10027eba:	pop    ecx
10027ebb:	push   0x5df49c38
10027ec0:	push   eax
10027ec1:	call   0x10003d63
10027ec6:	pop    ecx
10027ec7:	pop    ecx
10027ec8:	push   eax
10027ec9:	push   0x6
10027ecb:	push   0x100708cc
10027ed0:	call   0x10003d75
10027ed5:	add    esp,0xc
10027ed8:	push   eax
10027ed9:	lea    eax,[ebp-0x9c]
10027edf:	push   eax
10027ee0:	call   0x10005e98
10027ee5:	push   edi
10027ee6:	lea    ecx,[ebp-0xf0]
10027eec:	call   0x10030bd0
10027ef1:	pop    ecx
10027ef2:	mov    BYTE PTR [ebp-0x4],0x3
10027ef6:	cmp    DWORD PTR [eax+0x18],0x10
10027efa:	jb     0x10027f01
10027efc:	mov    eax,DWORD PTR [eax+0x4]
10027eff:	jmp    0x10027f04
10027f01:	add    eax,0x4
10027f04:	push   eax
10027f05:	lea    eax,[ebp-0x9c]
10027f0b:	push   eax
10027f0c:	call   0x10005e98
10027f11:	push   0x0
10027f13:	push   0x1
10027f15:	lea    ecx,[ebp-0xf0]
10027f1b:	mov    BYTE PTR [ebp-0x4],0x2
10027f1f:	call   0x100012f9
10027f24:	mov    edi,0x1006bb18
10027f29:	push   edi
10027f2a:	call   0x10005e33
10027f2f:	test   al,al
10027f31:	pop    ecx
10027f32:	jne    0x10027fa1
10027f34:	push   0x15a50d3c
10027f39:	push   0x100708d4
10027f3e:	call   0x10003d63
10027f43:	pop    ecx
10027f44:	pop    ecx
10027f45:	push   eax
10027f46:	push   0x6
10027f48:	push   0x10070910
10027f4d:	call   0x10003d75
10027f52:	add    esp,0xc
10027f55:	push   eax
10027f56:	lea    eax,[ebp-0x9c]
10027f5c:	push   eax
10027f5d:	call   0x10005e98
10027f62:	push   esi
10027f63:	lea    ecx,[ebp-0xf0]
10027f69:	call   0x10030bd0
10027f6e:	pop    ecx
10027f6f:	mov    BYTE PTR [ebp-0x4],0x4
10027f73:	cmp    DWORD PTR [eax+0x18],0x10
10027f77:	jb     0x10027f7e
10027f79:	mov    eax,DWORD PTR [eax+0x4]
10027f7c:	jmp    0x10027f81
10027f7e:	add    eax,0x4
10027f81:	push   eax
10027f82:	lea    eax,[ebp-0x9c]
10027f88:	push   eax
10027f89:	call   0x10005e98
10027f8e:	push   0x0
10027f90:	push   0x1
10027f92:	lea    ecx,[ebp-0xf0]
10027f98:	mov    BYTE PTR [ebp-0x4],0x2
10027f9c:	call   0x100012f9
10027fa1:	push   edi
10027fa2:	mov    esi,ebx
10027fa4:	call   0x10005e33
10027fa9:	test   al,al
10027fab:	pop    ecx
10027fac:	jne    0x10028039
10027fb2:	push   0x4ad4ce30
10027fb7:	push   0x10070918
10027fbc:	call   0x10003d63
10027fc1:	pop    ecx
10027fc2:	pop    ecx
10027fc3:	push   0x27540936
10027fc8:	push   eax
10027fc9:	call   0x10003d63
10027fce:	pop    ecx
10027fcf:	pop    ecx
10027fd0:	push   0x2a434c5e
10027fd5:	push   eax
10027fd6:	call   0x10003d63
10027fdb:	pop    ecx
10027fdc:	pop    ecx
10027fdd:	push   eax
10027fde:	push   0x6
10027fe0:	push   0x1007093c
10027fe5:	call   0x10003d75
10027fea:	add    esp,0xc
10027fed:	push   eax
10027fee:	lea    eax,[ebp-0x9c]
10027ff4:	push   eax
10027ff5:	call   0x10005e98
10027ffa:	push   ebx
10027ffb:	lea    ecx,[ebp-0xf0]
10028001:	call   0x10030bd0
10028006:	pop    ecx
10028007:	mov    BYTE PTR [ebp-0x4],0x5
1002800b:	cmp    DWORD PTR [eax+0x18],0x10
1002800f:	jb     0x10028016
10028011:	mov    eax,DWORD PTR [eax+0x4]
10028014:	jmp    0x10028019
10028016:	add    eax,0x4
10028019:	push   eax
1002801a:	lea    eax,[ebp-0x9c]
10028020:	push   eax
10028021:	call   0x10005e98
10028026:	push   0x0
10028028:	push   0x1
1002802a:	lea    ecx,[ebp-0xf0]
10028030:	mov    BYTE PTR [ebp-0x4],0x2
10028034:	call   0x100012f9
10028039:	mov    esi,DWORD PTR [ebp-0xc0]
1002803f:	push   edi
10028040:	call   0x10005e33
10028045:	test   al,al
10028047:	pop    ecx
10028048:	jne    0x100280c4
1002804a:	push   0x4395b52c
1002804f:	push   0x10070944
10028054:	call   0x10003d63
10028059:	pop    ecx
1002805a:	pop    ecx
1002805b:	push   0x23c27520
10028060:	push   eax
10028061:	call   0x10003d63
10028066:	pop    ecx
10028067:	pop    ecx
10028068:	push   eax
10028069:	push   0x6
1002806b:	push   0x1007097c
10028070:	call   0x10003d75
10028075:	add    esp,0xc
10028078:	push   eax
10028079:	lea    eax,[ebp-0x9c]
1002807f:	push   eax
10028080:	call   0x10005e98
10028085:	push   esi
10028086:	lea    ecx,[ebp-0xf0]
1002808c:	call   0x10030bd0
10028091:	pop    ecx
10028092:	mov    BYTE PTR [ebp-0x4],0x6
10028096:	cmp    DWORD PTR [eax+0x18],0x10
1002809a:	jb     0x100280a1
1002809c:	mov    eax,DWORD PTR [eax+0x4]
1002809f:	jmp    0x100280a4
100280a1:	add    eax,0x4
100280a4:	push   eax
100280a5:	lea    eax,[ebp-0x9c]
100280ab:	push   eax
100280ac:	call   0x10005e98
100280b1:	push   0x0
100280b3:	push   0x1
100280b5:	lea    ecx,[ebp-0xf0]
100280bb:	mov    BYTE PTR [ebp-0x4],0x2
100280bf:	call   0x100012f9
100280c4:	mov    esi,DWORD PTR [ebp-0xc4]
100280ca:	push   edi
100280cb:	call   0x10005e33
100280d0:	test   al,al
100280d2:	pop    ecx
100280d3:	jne    0x1002814f
100280d5:	push   0x7b0d1b0
100280da:	push   0x10070984
100280df:	call   0x10003d63
100280e4:	pop    ecx
100280e5:	pop    ecx
100280e6:	push   0x7d34a3e4
100280eb:	push   eax
100280ec:	call   0x10003d63
100280f1:	pop    ecx
100280f2:	pop    ecx
100280f3:	push   eax
100280f4:	push   0x6
100280f6:	push   0x100709c4
100280fb:	call   0x10003d75
10028100:	add    esp,0xc
10028103:	push   eax
10028104:	lea    eax,[ebp-0x9c]
1002810a:	push   eax
1002810b:	call   0x10005e98
10028110:	push   esi
10028111:	lea    ecx,[ebp-0xf0]
10028117:	call   0x10030bd0
1002811c:	pop    ecx
1002811d:	mov    BYTE PTR [ebp-0x4],0x7
10028121:	cmp    DWORD PTR [eax+0x18],0x10
10028125:	jb     0x1002812c
10028127:	mov    eax,DWORD PTR [eax+0x4]
1002812a:	jmp    0x1002812f
1002812c:	add    eax,0x4
1002812f:	push   eax
10028130:	lea    eax,[ebp-0x9c]
10028136:	push   eax
10028137:	call   0x10005e98
1002813c:	push   0x0
1002813e:	push   0x1
10028140:	lea    ecx,[ebp-0xf0]
10028146:	mov    BYTE PTR [ebp-0x4],0x2
1002814a:	call   0x100012f9
1002814f:	push   DWORD PTR [ebp+0x18]
10028152:	mov    esi,0x1007ff10
10028157:	sub    esp,0xc
1002815a:	mov    ebx,esp
1002815c:	mov    DWORD PTR [ebp-0xc8],esp
10028162:	call   0x1001a322
10028167:	lea    ecx,[ebp-0xf0]
1002816d:	call   0x1001a396
10028172:	add    esp,0x10
10028175:	push   0xffffffff
10028177:	xor    ebx,ebx
10028179:	push   ebx
1002817a:	lea    esi,[ebp-0x9c]
10028180:	mov    BYTE PTR [ebp-0x4],0x8
10028184:	call   0x10005fb0
10028189:	push   ebx
1002818a:	push   0x1
1002818c:	lea    ecx,[ebp-0xf0]
10028192:	mov    BYTE PTR [ebp-0x4],0x2
10028196:	call   0x100012f9
1002819b:	push   0x100709cc
100281a0:	push   0x5
100281a2:	push   0x100709fc
100281a7:	call   0x10003d75
100281ac:	add    esp,0xc
100281af:	push   eax
100281b0:	mov    eax,esi
100281b2:	push   eax
100281b3:	call   0x10005e98
100281b8:	push   0xa
100281ba:	lea    eax,[ebp-0x80]
100281bd:	push   eax
100281be:	push   DWORD PTR [ebp+0x14]
100281c1:	call   0x10044846
100281c6:	add    esp,0xc
100281c9:	push   eax
100281ca:	mov    eax,esi
100281cc:	push   eax
100281cd:	call   0x10005e98
100281d2:	cmp    DWORD PTR [ebp-0x84],0x10
100281d9:	mov    eax,DWORD PTR [ebp-0x98]
100281df:	jae    0x100281e7
100281e1:	lea    eax,[ebp-0x98]
100281e7:	push   eax
100281e8:	lea    ecx,[ebp-0xf0]
100281ee:	call   0x100011d6
100281f3:	mov    BYTE PTR [ebp-0x4],0x9
100281f7:	push   DWORD PTR ds:0x1007fd68
100281fd:	lea    ecx,[ebp-0x144]
10028203:	call   0x100011d6
10028208:	push   0x960
1002820d:	lea    eax,[ebp-0xc8]
10028213:	push   eax
10028214:	lea    eax,[ebp-0xf0]
1002821a:	push   eax
1002821b:	lea    eax,[ebp-0xb8]
10028221:	push   eax
10028222:	lea    eax,[ebp-0xc4]
10028228:	push   eax
10028229:	lea    edx,[ebp-0x144]
1002822f:	mov    BYTE PTR [ebp-0x4],0xa
10028233:	call   0x10030ab0
10028238:	mov    ecx,DWORD PTR [eax]
1002823a:	mov    esi,ecx
1002823c:	add    esp,0x14
1002823f:	mov    DWORD PTR [ebp-0xc0],esi
10028245:	mov    DWORD PTR [eax],ebx
10028247:	mov    DWORD PTR [ebp-0x128],esi
1002824d:	push   DWORD PTR [ebp-0xc4]
10028253:	call   0x10041d92
10028258:	pop    ecx
10028259:	push   ebx
1002825a:	push   0x1
1002825c:	lea    ecx,[ebp-0x144]
10028262:	call   0x100012f9
10028267:	push   ebx
10028268:	push   0x1
1002826a:	lea    ecx,[ebp-0xf0]
10028270:	mov    BYTE PTR [ebp-0x4],0xd
10028274:	call   0x100012f9
10028279:	cmp    esi,ebx
1002827b:	jne    0x100282da
1002827d:	call   0x100180b0
10028282:	cmp    DWORD PTR [ebp-0xa0],0x10
10028289:	mov    eax,DWORD PTR [ebp-0xb4]
1002828f:	jae    0x10028297
10028291:	lea    eax,[ebp-0xb4]
10028297:	push   eax
10028298:	call   0x1000207c
1002829d:	pop    ecx
1002829e:	push   0x5
100282a0:	call   0x10037620
100282a5:	pop    ecx
100282a6:	push   ebx
100282a7:	call   0x10041d92
100282ac:	mov    BYTE PTR [ebp-0xb9],bl
100282b2:	pop    ecx
100282b3:	push   ebx
100282b4:	push   0x1
100282b6:	lea    ecx,[ebp-0x9c]
100282bc:	call   0x100012f9
100282c1:	push   ebx
100282c2:	push   0x1
100282c4:	lea    ecx,[ebp-0xb8]
100282ca:	call   0x100012f9
100282cf:	mov    al,BYTE PTR [ebp-0xb9]
100282d5:	jmp    0x100283fd
100282da:	mov    eax,DWORD PTR [ebp-0xc8]
100282e0:	mov    DWORD PTR [ebp-0xd0],eax
100282e6:	mov    eax,DWORD PTR [ebp-0xc0]
100282ec:	lea    edi,[ebp-0x124]
100282f2:	lea    esi,[ebp-0xd4]
100282f8:	mov    DWORD PTR [ebp-0xd4],ebx
100282fe:	mov    DWORD PTR [ebp-0xcc],eax
10028304:	call   0x10037270
10028309:	cmp    DWORD PTR [eax+0x18],0x10
1002830d:	jb     0x10028314
1002830f:	mov    eax,DWORD PTR [eax+0x4]
10028312:	jmp    0x10028317
10028314:	add    eax,0x4
10028317:	push   eax
10028318:	call   0x10044a05
1002831d:	pop    ecx
1002831e:	mov    ecx,DWORD PTR [ebp-0x104]
10028324:	push   ebx
10028325:	mov    DWORD PTR [ecx],eax
10028327:	push   0x1
10028329:	lea    ecx,[ebp-0x124]
1002832f:	call   0x100012f9
10028334:	lea    edi,[ebp-0x124]
1002833a:	lea    esi,[ebp-0xd4]
10028340:	call   0x10037270
10028345:	mov    ecx,DWORD PTR [ebp-0x108]
1002834b:	push   0xffffffff
1002834d:	push   ebx
1002834e:	push   eax
1002834f:	mov    BYTE PTR [ebp-0x4],0xe
10028353:	call   0x1000124a
10028358:	push   ebx
10028359:	push   0x1
1002835b:	mov    ecx,edi
1002835d:	mov    BYTE PTR [ebp-0x4],0xd
10028361:	call   0x100012f9
10028366:	lea    edi,[ebp-0x124]
1002836c:	call   0x10037270
10028371:	mov    ecx,DWORD PTR [ebp-0x100]
10028377:	push   0xffffffff
10028379:	push   ebx
1002837a:	push   eax
1002837b:	mov    BYTE PTR [ebp-0x4],0xf
1002837f:	call   0x1000124a
10028384:	push   ebx
10028385:	push   0x1
10028387:	mov    ecx,edi
10028389:	mov    BYTE PTR [ebp-0x4],0xd
1002838d:	call   0x100012f9
10028392:	lea    edi,[ebp-0x124]
10028398:	call   0x10037270
1002839d:	mov    ecx,DWORD PTR [ebp-0xf8]
100283a3:	push   0xffffffff
100283a5:	push   ebx
100283a6:	push   eax
100283a7:	mov    BYTE PTR [ebp-0x4],0x10
100283ab:	call   0x1000124a
100283b0:	push   ebx
100283b1:	push   0x1
100283b3:	mov    ecx,edi
100283b5:	mov    BYTE PTR [ebp-0x4],0xd
100283b9:	call   0x100012f9
100283be:	mov    eax,esi
100283c0:	push   eax
100283c1:	call   0x10037480
100283c6:	mov    ecx,DWORD PTR [ebp-0xf4]
100283cc:	mov    DWORD PTR [ecx],eax
100283ce:	mov    eax,esi
100283d0:	push   eax
100283d1:	call   0x10037480
100283d6:	mov    ecx,DWORD PTR [ebp-0xfc]
100283dc:	push   DWORD PTR [ebp-0xc0]
100283e2:	mov    DWORD PTR [ecx],eax
100283e4:	call   0x10041d92
100283e9:	mov    BYTE PTR [ebp-0xb9],0x1
100283f0:	jmp    0x100282b2
100283f5:	mov    eax,0x100283fb
100283fa:	ret    
100283fb:	xor    al,al
100283fd:	call   0x10058940
10028402:	ret    0x2c
10028405:	push   0xbc
1002840a:	mov    eax,0x1006258c
1002840f:	call   0x100588ae
10028414:	mov    eax,DWORD PTR [ebp+0x8]
10028417:	mov    DWORD PTR [ebp-0x50],eax
1002841a:	mov    eax,DWORD PTR [ebp+0xc]
1002841d:	mov    DWORD PTR [ebp-0x54],eax
10028420:	lea    eax,[ebp-0x74]
10028423:	mov    esi,ecx
10028425:	xor    edi,edi
10028427:	push   eax
10028428:	mov    DWORD PTR [ebp-0x4c],esi
1002842b:	mov    DWORD PTR [ebp-0x58],edi
1002842e:	call   0x10030cb0
10028433:	pop    ecx
10028434:	push   edi
10028435:	mov    DWORD PTR [ebp-0x4],edi
10028438:	push   DWORD PTR ds:0x1007fda0
1002843e:	lea    ecx,[ebp-0x48]
10028441:	push   ecx
10028442:	mov    ecx,eax
10028444:	call   0x10038c20
10028449:	add    esp,0xc
1002844c:	xor    ebx,ebx
1002844e:	push   edi
1002844f:	inc    ebx
10028450:	push   ebx
10028451:	lea    ecx,[ebp-0x74]
10028454:	mov    BYTE PTR [ebp-0x4],0x2
10028458:	call   0x100012f9
1002845d:	cmp    DWORD PTR [ebp-0x34],edi
10028460:	jne    0x1002847f
10028462:	push   0x1006bb18
10028467:	mov    ecx,esi
10028469:	call   0x100011d6
1002846e:	push   edi
1002846f:	push   ebx
10028470:	lea    ecx,[ebp-0x48]
10028473:	call   0x100012f9
10028478:	mov    eax,esi
1002847a:	jmp    0x100285d0
1002847f:	push   DWORD PTR [ebp-0x50]
10028482:	lea    ecx,[ebp-0xc8]
10028488:	call   0x10030bd0
1002848d:	mov    esi,eax
1002848f:	mov    BYTE PTR [ebp-0x4],0x3
10028493:	mov    DWORD PTR [esp],0x4d5d2d74
1002849a:	push   0x10070a04
1002849f:	call   0x10003d63
100284a4:	pop    ecx
100284a5:	pop    ecx
100284a6:	push   esi
100284a7:	push   eax
100284a8:	push   0x3
100284aa:	push   0x10070a2c
100284af:	call   0x10003d75
100284b4:	add    esp,0xc
100284b7:	push   eax
100284b8:	lea    eax,[ebp-0x2c]
100284bb:	push   eax
100284bc:	call   0x100285d8
100284c1:	add    esp,0xc
100284c4:	push   edi
100284c5:	push   ebx
100284c6:	lea    ecx,[ebp-0xc8]
100284cc:	mov    BYTE PTR [ebp-0x4],0x5
100284d0:	call   0x100012f9
100284d5:	push   DWORD PTR [ebp-0x54]
100284d8:	lea    ecx,[ebp-0xac]
100284de:	call   0x10030bd0
100284e3:	pop    ecx
100284e4:	push   eax
100284e5:	push   0x10070a30
100284ea:	push   0x4
100284ec:	push   0x10070a54
100284f1:	mov    BYTE PTR [ebp-0x4],0x6
100284f5:	call   0x10003d75
100284fa:	add    esp,0xc
100284fd:	push   eax
100284fe:	lea    eax,[ebp-0x74]
10028501:	push   eax
10028502:	call   0x100285d8
10028507:	add    esp,0xc
1002850a:	push   0xffffffff
1002850c:	push   edi
1002850d:	lea    esi,[ebp-0x2c]
10028510:	mov    BYTE PTR [ebp-0x4],0x7
10028514:	call   0x10005fb0
10028519:	push   edi
1002851a:	push   ebx
1002851b:	lea    ecx,[ebp-0x74]
1002851e:	call   0x100012f9
10028523:	push   edi
10028524:	push   ebx
10028525:	lea    ecx,[ebp-0xac]
1002852b:	mov    BYTE PTR [ebp-0x4],0x5
1002852f:	call   0x100012f9
10028534:	push   edi
10028535:	push   DWORD PTR ds:0x1007fd9c
1002853b:	lea    eax,[ebp-0x90]
10028541:	push   eax
10028542:	mov    ecx,esi
10028544:	call   0x10038c20
10028549:	add    esp,0xc
1002854c:	push   0xffffffff
1002854e:	push   edi
1002854f:	push   eax
10028550:	mov    ecx,esi
10028552:	mov    BYTE PTR [ebp-0x4],0x8
10028556:	call   0x1000124a
1002855b:	push   edi
1002855c:	push   ebx
1002855d:	lea    ecx,[ebp-0x90]
10028563:	mov    BYTE PTR [ebp-0x4],0x5
10028567:	call   0x100012f9
1002856c:	cmp    DWORD PTR [ebp-0x18],edi
1002856f:	jne    0x10028580
10028571:	mov    ecx,DWORD PTR [ebp-0x4c]
10028574:	push   0x1006bb18
10028579:	call   0x100011d6
1002857e:	jmp    0x100285b9
10028580:	push   0x10070a5c
10028585:	lea    eax,[ebp-0x48]
10028588:	push   eax
10028589:	lea    eax,[ebp-0x90]
1002858f:	push   eax
10028590:	call   0x10005dcb
10028595:	add    esp,0xc
10028598:	lea    ecx,[ebp-0x2c]
1002859b:	push   ecx
1002859c:	push   eax
1002859d:	push   DWORD PTR [ebp-0x4c]
100285a0:	mov    BYTE PTR [ebp-0x4],0x9
100285a4:	call   0x1000a3d1
100285a9:	add    esp,0xc
100285ac:	push   edi
100285ad:	push   ebx
100285ae:	lea    ecx,[ebp-0x90]
100285b4:	call   0x100012f9
100285b9:	push   edi
100285ba:	push   ebx
100285bb:	lea    ecx,[ebp-0x2c]
100285be:	call   0x100012f9
100285c3:	push   edi
100285c4:	push   ebx
100285c5:	lea    ecx,[ebp-0x48]
100285c8:	call   0x100012f9
100285cd:	mov    eax,DWORD PTR [ebp-0x4c]
100285d0:	call   0x10058931
100285d5:	ret    0x8
100285d8:	push   0x20
100285da:	mov    eax,0x1005ffa8
100285df:	call   0x10058845
100285e4:	push   DWORD PTR [ebp+0xc]
100285e7:	and    DWORD PTR [ebp-0x10],0x0
100285eb:	lea    ecx,[ebp-0x2c]
100285ee:	call   0x100011d6
100285f3:	mov    esi,eax
100285f5:	mov    eax,DWORD PTR [ebp+0x10]
100285f8:	and    DWORD PTR [ebp-0x4],0x0
100285fc:	push   0xffffffff
100285fe:	push   0x0
10028600:	call   0x10005fb0
10028605:	mov    ecx,DWORD PTR [ebp+0x8]
10028608:	push   eax
10028609:	call   0x100011b0
1002860e:	push   0x0
10028610:	push   0x1
10028612:	lea    ecx,[ebp-0x2c]
10028615:	call   0x100012f9
1002861a:	mov    eax,DWORD PTR [ebp+0x8]
1002861d:	call   0x1005891d
10028622:	ret    
10028623:	push   ebp
10028624:	mov    ebp,esp
10028626:	and    esp,0xfffffff8
10028629:	push   0xffffffff
1002862b:	push   0x10062f28
10028630:	mov    eax,fs:0x0
10028636:	push   eax
10028637:	sub    esp,0xa0
1002863d:	mov    eax,ds:0x1007d030
10028642:	xor    eax,esp
10028644:	mov    DWORD PTR [esp+0x98],eax
1002864b:	push   ebx
1002864c:	push   esi
1002864d:	push   edi
1002864e:	mov    eax,ds:0x1007d030
10028653:	xor    eax,esp
10028655:	push   eax
10028656:	lea    eax,[esp+0xb0]
1002865d:	mov    fs:0x0,eax
10028663:	mov    edi,DWORD PTR [ebp+0x8]
10028666:	push   0x10070a60
1002866b:	push   0x4
1002866d:	push   0x1006c070
10028672:	mov    DWORD PTR [esp+0x24],edi
10028676:	mov    BYTE PTR [esp+0x23],0x0
1002867b:	call   0x10003d75
10028680:	add    esp,0xc
10028683:	push   eax
10028684:	lea    ecx,[esp+0x3c]
10028688:	call   0x100011d6
1002868d:	xor    esi,esi
1002868f:	push   esi
10028690:	lea    eax,[esp+0x3c]
10028694:	push   eax
10028695:	lea    eax,[esp+0x94]
1002869c:	push   eax
1002869d:	mov    DWORD PTR [esp+0xc4],esi
100286a4:	mov    eax,DWORD PTR [edi]
100286a6:	add    eax,0x18
100286a9:	call   0x1000800f
100286ae:	push   esi
100286af:	push   0x1
100286b1:	lea    ecx,[esp+0x40]
100286b5:	mov    BYTE PTR [esp+0xc0],0x2
100286bd:	call   0x100012f9
100286c2:	cmp    DWORD PTR [esp+0xa0],0x4
100286ca:	jbe    0x10028750
100286d0:	cmp    DWORD PTR [esp+0xa4],0x10
100286d8:	mov    esi,DWORD PTR [esp+0x90]
100286df:	mov    ebx,esi
100286e1:	jae    0x100286ec
100286e3:	lea    ebx,[esp+0x90]
100286ea:	mov    esi,ebx
100286ec:	push   0x10070a90
100286f1:	push   0x4
100286f3:	push   0x10070acc
100286f8:	call   0x10003d75
100286fd:	add    esp,0xc
10028700:	push   eax
10028701:	push   ebx
10028702:	call   0x10044780
10028707:	cmp    eax,esi
10028709:	pop    ecx
1002870a:	pop    ecx
1002870b:	jne    0x10028750
1002870d:	push   0xffffffff
1002870f:	push   0x4
10028711:	lea    eax,[esp+0x94]
10028718:	push   eax
10028719:	lea    eax,[esp+0x28]
1002871d:	call   0x1000c42b
10028722:	push   0xffffffff
10028724:	push   0x0
10028726:	push   eax
10028727:	lea    ecx,[esp+0x98]
1002872e:	mov    BYTE PTR [esp+0xc4],0x3
10028736:	call   0x1000124a
1002873b:	push   0x0
1002873d:	push   0x1
1002873f:	lea    ecx,[esp+0x24]
10028743:	mov    BYTE PTR [esp+0xc0],0x2
1002874b:	call   0x100012f9
10028750:	cmp    DWORD PTR [esp+0xa4],0x10
10028758:	mov    eax,DWORD PTR [esp+0x90]
1002875f:	jae    0x10028768
10028761:	lea    eax,[esp+0x90]
10028768:	push   eax
10028769:	call   DWORD PTR ds:0x100653d4
1002876f:	cmp    eax,0xffffffff
10028772:	je     0x10028783
10028774:	mov    ebx,eax
10028776:	call   0x10017174
1002877b:	test   al,al
1002877d:	jne    0x10028a21
10028783:	push   0x5b93e390
10028788:	push   0x10070ad4
1002878d:	call   0x10003d63
10028792:	push   0x10659754
10028797:	push   eax
10028798:	call   0x10003d63
1002879d:	push   eax
1002879e:	push   0xa
100287a0:	push   0x10070b10
100287a5:	call   0x10003d75
100287aa:	add    esp,0x1c
100287ad:	push   eax
100287ae:	lea    esi,[esp+0x90]
100287b5:	call   0x10005e33
100287ba:	test   al,al
100287bc:	pop    ecx
100287bd:	jne    0x10028a21
100287c3:	push   0x41cb52d8
100287c8:	push   0x10070b1c
100287cd:	call   0x10003d63
100287d2:	push   0x4652878c
100287d7:	push   eax
100287d8:	call   0x10003d63
100287dd:	push   0x7a595a6c
100287e2:	push   eax
100287e3:	call   0x10003d63
100287e8:	push   0x5959697c
100287ed:	push   eax
100287ee:	call   0x10003d63
100287f3:	push   0x5ae58ce2
100287f8:	push   eax
100287f9:	call   0x10003d63
100287fe:	push   0x9779f5e
10028803:	push   eax
10028804:	call   0x10003d63
10028809:	push   eax
1002880a:	push   0x9
1002880c:	push   0x10070b5c
10028811:	call   0x10003d75
10028816:	add    esp,0x3c
10028819:	push   eax
1002881a:	call   0x10005e33
1002881f:	test   al,al
10028821:	pop    ecx
10028822:	jne    0x10028a21
10028828:	push   0x10070b68
1002882d:	push   0x9
1002882f:	push   0x10070b9c
10028834:	call   0x10003d75
10028839:	add    esp,0xc
1002883c:	push   eax
1002883d:	call   0x10005e33
10028842:	test   al,al
10028844:	pop    ecx
10028845:	jne    0x10028a21
1002884b:	push   0x51ab79fc
10028850:	push   0x10070ba8
10028855:	call   0x10003d63
1002885a:	push   0x2943c0b0
1002885f:	push   eax
10028860:	call   0x10003d63
10028865:	push   0xc5df15a
1002886a:	push   eax
1002886b:	call   0x10003d63
10028870:	push   eax
10028871:	push   0x5
10028873:	push   0x10070be4
10028878:	call   0x10003d75
1002887d:	add    esp,0x24
10028880:	push   eax
10028881:	call   0x10005e33
10028886:	test   al,al
10028888:	pop    ecx
10028889:	jne    0x10028a21
1002888f:	push   0x105e7bfa
10028894:	push   0x10070bec
10028899:	call   0x10003d63
1002889e:	push   0x14fab476
100288a3:	push   eax
100288a4:	call   0x10003d63
100288a9:	push   eax
100288aa:	push   0x8
100288ac:	push   0x10070c28
100288b1:	call   0x10003d75
100288b6:	add    esp,0x1c
100288b9:	push   eax
100288ba:	call   0x10005e33
100288bf:	test   al,al
100288c1:	pop    ecx
100288c2:	jne    0x10028a21
100288c8:	push   0x10070c34
100288cd:	push   0xd
100288cf:	push   0x10070c6c
100288d4:	call   0x10003d75
100288d9:	add    esp,0xc
100288dc:	push   eax
100288dd:	call   0x10005e33
100288e2:	test   al,al
100288e4:	pop    ecx
100288e5:	jne    0x10028a21
100288eb:	push   0x1303143c
100288f0:	push   0x10070c7c
100288f5:	call   0x10003d63
100288fa:	push   0x817f942
100288ff:	push   eax
10028900:	call   0x10003d63
10028905:	push   0x22a1b644
1002890a:	push   eax
1002890b:	call   0x10003d63
10028910:	push   0x6a6e4982
10028915:	push   eax
10028916:	call   0x10003d63
1002891b:	push   0x1e7801ac
10028920:	push   eax
10028921:	call   0x10003d63
10028926:	push   eax
10028927:	push   0x15
10028929:	push   0x10070cbc
1002892e:	call   0x10003d75
10028933:	add    esp,0x34
10028936:	push   eax
10028937:	call   0x10005e33
1002893c:	test   al,al
1002893e:	pop    ecx
1002893f:	jne    0x10028a21
10028945:	push   0x4f1267a8
1002894a:	push   0x10070cd4
1002894f:	call   0x10003d63
10028954:	push   0x7f6be9dc
10028959:	push   eax
1002895a:	call   0x10003d63
1002895f:	push   eax
10028960:	push   0x1e
10028962:	push   0x10070d10
10028967:	call   0x10003d75
1002896c:	add    esp,0x1c
1002896f:	push   eax
10028970:	call   0x10005e33
10028975:	test   al,al
10028977:	pop    ecx
10028978:	jne    0x10028a21
1002897e:	push   0x19ee5dbe
10028983:	push   0x10070d30
10028988:	call   0x10003d63
1002898d:	push   0x493294f6
10028992:	push   eax
10028993:	call   0x10003d63
10028998:	push   eax
10028999:	push   0x1d
1002899b:	push   0x10070d6c
100289a0:	call   0x10003d75
100289a5:	add    esp,0x1c
100289a8:	push   eax
100289a9:	call   0x10005e33
100289ae:	test   al,al
100289b0:	pop    ecx
100289b1:	jne    0x10028a21
100289b3:	push   0x6d6e85da
100289b8:	push   0x10070d8c
100289bd:	call   0x10003d63
100289c2:	push   0x6bbdb358
100289c7:	push   eax
100289c8:	call   0x10003d63
100289cd:	push   0x5730b600
100289d2:	push   eax
100289d3:	call   0x10003d63
100289d8:	push   eax
100289d9:	push   0x1d
100289db:	push   0x10070dbc
100289e0:	call   0x10003d75
100289e5:	add    esp,0x24
100289e8:	push   eax
100289e9:	call   0x10005e33
100289ee:	test   al,al
100289f0:	pop    ecx
100289f1:	jne    0x10028a21
100289f3:	push   0x23238b84
100289f8:	push   0x10070ddc
100289fd:	call   0x10003d63
10028a02:	push   eax
10028a03:	push   0x15
10028a05:	push   0x10070e18
10028a0a:	call   0x10003d75
10028a0f:	add    esp,0x14
10028a12:	push   eax
10028a13:	call   0x10005e33
10028a18:	test   al,al
10028a1a:	pop    ecx
10028a1b:	je     0x10028b31
10028a21:	cmp    DWORD PTR [esp+0xa4],0x10
10028a29:	mov    eax,DWORD PTR [esp+0x90]
10028a30:	mov    BYTE PTR [esp+0x17],0x1
10028a35:	jae    0x10028a3e
10028a37:	lea    eax,[esp+0x90]
10028a3e:	push   eax
10028a3f:	call   0x1000207c
10028a44:	mov    DWORD PTR [esp],0x10070e30
10028a4b:	push   0x9
10028a4d:	push   0x10070e6c
10028a52:	call   0x10003d75
10028a57:	add    esp,0xc
10028a5a:	push   eax
10028a5b:	lea    ecx,[esp+0x20]
10028a5f:	call   0x100011d6
10028a64:	push   0x496cbfac
10028a69:	push   0x10070e78
10028a6e:	mov    BYTE PTR [esp+0xc0],0x4
10028a76:	call   0x10003d63
10028a7b:	push   0x74402ee2
10028a80:	push   eax
10028a81:	call   0x10003d63
10028a86:	push   eax
10028a87:	push   0x3
10028a89:	push   0x10070ea8
10028a8e:	call   0x10003d75
10028a93:	add    esp,0x1c
10028a96:	push   eax
10028a97:	lea    ecx,[esp+0x58]
10028a9b:	call   0x100011d6
10028aa0:	push   0x692a1df2
10028aa5:	push   0x10070eac
10028aaa:	mov    BYTE PTR [esp+0xc0],0x5
10028ab2:	call   0x10003d63
10028ab7:	push   0x638c039a
10028abc:	push   eax
10028abd:	call   0x10003d63
10028ac2:	push   eax
10028ac3:	push   0x8
10028ac5:	push   0x100707a8
10028aca:	call   0x10003d75
10028acf:	add    esp,0x1c
10028ad2:	push   eax
10028ad3:	lea    ecx,[esp+0x74]
10028ad7:	call   0x100011d6
10028adc:	lea    eax,[esp+0x1c]
10028ae0:	push   eax
10028ae1:	lea    eax,[esp+0x58]
10028ae5:	push   eax
10028ae6:	lea    ecx,[esp+0x78]
10028aea:	mov    BYTE PTR [esp+0xc0],0x6
10028af2:	call   0x10009124
10028af7:	pop    ecx
10028af8:	pop    ecx
10028af9:	add    edi,0x8
10028afc:	mov    ebx,eax
10028afe:	call   0x10026331
10028b03:	xor    esi,esi
10028b05:	push   esi
10028b06:	push   0x1
10028b08:	lea    ecx,[esp+0x78]
10028b0c:	call   0x100012f9
10028b11:	push   esi
10028b12:	push   0x1
10028b14:	lea    ecx,[esp+0x5c]
10028b18:	call   0x100012f9
10028b1d:	push   esi
10028b1e:	push   0x1
10028b20:	lea    ecx,[esp+0x24]
10028b24:	call   0x100012f9
10028b29:	mov    eax,DWORD PTR [esp+0x18]
10028b2d:	mov    BYTE PTR [eax+0x14],0x1
10028b31:	push   0x0
10028b33:	push   0x1
10028b35:	lea    ecx,[esp+0x94]
10028b3c:	call   0x100012f9
10028b41:	mov    al,BYTE PTR [esp+0x17]
10028b45:	mov    ecx,DWORD PTR [esp+0xb0]
10028b4c:	mov    DWORD PTR fs:0x0,ecx
10028b53:	pop    ecx
10028b54:	pop    edi
10028b55:	pop    esi
10028b56:	pop    ebx
10028b57:	mov    ecx,DWORD PTR [esp+0x98]
10028b5e:	xor    ecx,esp
10028b60:	call   0x10041d97
10028b65:	mov    esp,ebp
10028b67:	pop    ebp
10028b68:	ret    0x4
10028b6b:	push   ebp
10028b6c:	mov    ebp,esp
10028b6e:	and    esp,0xfffffff8
10028b71:	push   0xffffffff
10028b73:	push   0x100620fa
10028b78:	mov    eax,fs:0x0
10028b7e:	push   eax
10028b7f:	sub    esp,0x110
10028b85:	mov    eax,ds:0x1007d030
10028b8a:	xor    eax,esp
10028b8c:	mov    DWORD PTR [esp+0x108],eax
10028b93:	push   ebx
10028b94:	push   esi
10028b95:	push   edi
10028b96:	mov    eax,ds:0x1007d030
10028b9b:	xor    eax,esp
10028b9d:	push   eax
10028b9e:	lea    eax,[esp+0x120]
10028ba5:	mov    fs:0x0,eax
10028bab:	mov    esi,DWORD PTR [ebp+0x8]
10028bae:	push   DWORD PTR [esi]
10028bb0:	lea    ecx,[esp+0x70]
10028bb4:	call   0x1000868a
10028bb9:	lea    ecx,[esp+0xf8]
10028bc0:	push   ecx
10028bc1:	xor    ebx,ebx
10028bc3:	push   0x1007fec8
10028bc8:	mov    ecx,eax
10028bca:	mov    DWORD PTR [esp+0x130],ebx
10028bd1:	call   0x100195fa
10028bd6:	push   ebx
10028bd7:	push   0x1
10028bd9:	lea    ecx,[esp+0x74]
10028bdd:	mov    BYTE PTR [esp+0x130],0x2
10028be5:	call   0x100012f9
10028bea:	lea    edi,[esp+0xf8]
10028bf1:	call   0x1001949f
10028bf6:	test   al,al
10028bf8:	jne    0x10028e3d
10028bfe:	mov    eax,DWORD PTR [esp+0xf8]
10028c05:	dec    eax
10028c06:	je     0x10028cd9
10028c0c:	dec    eax
10028c0d:	jne    0x10028e3d
10028c13:	push   0x3d3a113c
10028c18:	push   0x10070f40
10028c1d:	call   0x10003d63
10028c22:	push   eax
10028c23:	push   0x7
10028c25:	push   0x1006c320
10028c2a:	call   0x10003d75
10028c2f:	add    esp,0x14
10028c32:	push   eax
10028c33:	lea    ecx,[esp+0x1c]
10028c37:	call   0x100011d6
10028c3c:	lea    eax,[esp+0x18]
10028c40:	push   eax
10028c41:	mov    BYTE PTR [esp+0x12c],0x7
10028c49:	mov    eax,DWORD PTR [esi+0x4]
10028c4c:	add    eax,0x18
10028c4f:	push   eax
10028c50:	call   0x10007dad
10028c55:	push   ebx
10028c56:	push   0x1
10028c58:	lea    ecx,[esp+0x20]
10028c5c:	mov    BYTE PTR [esp+0x130],0x2
10028c64:	call   0x100012f9
10028c69:	push   DWORD PTR [esi]
10028c6b:	lea    ecx,[esp+0xa8]
10028c72:	call   0x1000868a
10028c77:	cmp    DWORD PTR [eax+0x18],0x10
10028c7b:	jb     0x10028c82
10028c7d:	mov    eax,DWORD PTR [eax+0x4]
10028c80:	jmp    0x10028c85
10028c82:	add    eax,0x4
10028c85:	push   eax
10028c86:	call   0x1000207c
10028c8b:	pop    ecx
10028c8c:	push   ebx
10028c8d:	push   0x1
10028c8f:	lea    ecx,[esp+0xac]
10028c96:	call   0x100012f9
10028c9b:	mov    BYTE PTR [esp+0x17],0x1
10028ca0:	push   ebx
10028ca1:	push   0x1
10028ca3:	lea    ecx,[esp+0x104]
10028caa:	call   0x100012f9
10028caf:	mov    al,BYTE PTR [esp+0x17]
10028cb3:	mov    ecx,DWORD PTR [esp+0x120]
10028cba:	mov    DWORD PTR fs:0x0,ecx
10028cc1:	pop    ecx
10028cc2:	pop    edi
10028cc3:	pop    esi
10028cc4:	pop    ebx
10028cc5:	mov    ecx,DWORD PTR [esp+0x108]
10028ccc:	xor    ecx,esp
10028cce:	call   0x10041d97
10028cd3:	mov    esp,ebp
10028cd5:	pop    ebp
10028cd6:	ret    0x4
10028cd9:	push   0x7296a9de
10028cde:	push   0x10070ee8
10028ce3:	call   0x10003d63
10028ce8:	push   0x175de7fe
10028ced:	push   eax
10028cee:	call   0x10003d63
10028cf3:	push   eax
10028cf4:	push   0x7
10028cf6:	mov    edi,0x1006c320
10028cfb:	push   edi
10028cfc:	call   0x10003d75
10028d01:	add    esp,0x1c
10028d04:	push   eax
10028d05:	lea    ecx,[esp+0x38]
10028d09:	call   0x100011d6
10028d0e:	lea    eax,[esp+0x34]
10028d12:	push   eax
10028d13:	mov    BYTE PTR [esp+0x12c],0x3
10028d1b:	mov    eax,DWORD PTR [esi+0x4]
10028d1e:	add    eax,0x18
10028d21:	push   eax
10028d22:	call   0x10007dad
10028d27:	push   ebx
10028d28:	push   0x1
10028d2a:	lea    ecx,[esp+0x3c]
10028d2e:	mov    BYTE PTR [esp+0x130],0x2
10028d36:	call   0x100012f9
10028d3b:	push   0x655571c0
10028d40:	push   0x10070f18
10028d45:	call   0x10003d63
10028d4a:	push   eax
10028d4b:	push   0x7
10028d4d:	push   edi
10028d4e:	call   0x10003d75
10028d53:	add    esp,0x14
10028d56:	push   eax
10028d57:	lea    ecx,[esp+0x54]
10028d5b:	call   0x100011d6
10028d60:	lea    eax,[esp+0xdc]
10028d67:	push   eax
10028d68:	lea    eax,[esp+0xfc]
10028d6f:	mov    BYTE PTR [esp+0x12c],0x4
10028d77:	call   0x100194bf
10028d7c:	mov    BYTE PTR [esp+0x128],0x5
10028d84:	mov    edx,DWORD PTR [esi+0x4]
10028d87:	push   ebx
10028d88:	lea    ecx,[esp+0x54]
10028d8c:	push   ecx
10028d8d:	add    edx,0x18
10028d90:	mov    ecx,eax
10028d92:	call   0x10007aa4
10028d97:	xor    edi,edi
10028d99:	push   ebx
10028d9a:	inc    edi
10028d9b:	push   edi
10028d9c:	lea    ecx,[esp+0xe4]
10028da3:	call   0x100012f9
10028da8:	push   ebx
10028da9:	push   edi
10028daa:	lea    ecx,[esp+0x58]
10028dae:	mov    BYTE PTR [esp+0x130],0x2
10028db6:	call   0x100012f9
10028dbb:	push   DWORD PTR [esi]
10028dbd:	lea    ecx,[esp+0xc4]
10028dc4:	call   0x1000868a
10028dc9:	mov    esi,eax
10028dcb:	lea    eax,[esp+0x88]
10028dd2:	push   eax
10028dd3:	lea    eax,[esp+0xfc]
10028dda:	mov    BYTE PTR [esp+0x12c],0x6
10028de2:	call   0x100194bf
10028de7:	cmp    DWORD PTR [esi+0x18],0x10
10028deb:	jb     0x10028df2
10028ded:	mov    esi,DWORD PTR [esi+0x4]
10028df0:	jmp    0x10028df5
10028df2:	add    esi,0x4
10028df5:	cmp    DWORD PTR [eax+0x18],0x10
10028df9:	jb     0x10028e00
10028dfb:	mov    eax,DWORD PTR [eax+0x4]
10028dfe:	jmp    0x10028e03
10028e00:	add    eax,0x4
10028e03:	push   esi
10028e04:	push   eax
10028e05:	call   0x1000207c
10028e0a:	pop    ecx
10028e0b:	pop    ecx
10028e0c:	push   ebx
10028e0d:	push   edi
10028e0e:	lea    ecx,[esp+0x90]
10028e15:	call   0x100012f9
10028e1a:	push   ebx
10028e1b:	push   edi
10028e1c:	lea    ecx,[esp+0xc8]
10028e23:	call   0x100012f9
10028e28:	push   ebx
10028e29:	push   edi
10028e2a:	lea    ecx,[esp+0x104]
10028e31:	call   0x100012f9
10028e36:	mov    al,0x1
10028e38:	jmp    0x10028cb3
10028e3d:	mov    BYTE PTR [esp+0x17],bl
10028e41:	jmp    0x10028ca0
10028e46:	push   ebp
10028e47:	mov    ebp,esp
10028e49:	and    esp,0xfffffff8
10028e4c:	push   0xffffffff
10028e4e:	push   0x10062ec1
10028e53:	mov    eax,fs:0x0
10028e59:	push   eax
10028e5a:	sub    esp,0x98
10028e60:	mov    eax,ds:0x1007d030
10028e65:	xor    eax,esp
10028e67:	mov    DWORD PTR [esp+0x90],eax
10028e6e:	push   ebx
10028e6f:	push   esi
10028e70:	push   edi
10028e71:	mov    eax,ds:0x1007d030
10028e76:	xor    eax,esp
10028e78:	push   eax
10028e79:	lea    eax,[esp+0xa8]
10028e80:	mov    fs:0x0,eax
10028e86:	mov    edi,DWORD PTR [ebp+0x8]
10028e89:	push   DWORD PTR [edi]
10028e8b:	lea    ecx,[esp+0x50]
10028e8f:	mov    DWORD PTR [esp+0x14],edi
10028e93:	call   0x1000868a
10028e98:	and    DWORD PTR [esp+0xb0],0x0
10028ea0:	push   eax
10028ea1:	lea    esi,[esp+0x88]
10028ea8:	call   0x1002ffc0
10028ead:	pop    ecx
10028eae:	push   0x0
10028eb0:	push   0x1
10028eb2:	lea    ecx,[esp+0x54]
10028eb6:	mov    BYTE PTR [esp+0xb8],0x2
10028ebe:	call   0x100012f9
10028ec3:	mov    edx,esi
10028ec5:	lea    ecx,[esp+0x68]
10028ec9:	call   0x10033980
10028ece:	push   0x1006bb18
10028ed3:	lea    esi,[esp+0x6c]
10028ed7:	mov    BYTE PTR [esp+0xb4],0x3
10028edf:	call   0x10005e33
10028ee4:	test   al,al
10028ee6:	pop    ecx
10028ee7:	jne    0x10029128
10028eed:	cmp    DWORD PTR [esp+0x80],0x10
10028ef5:	mov    eax,DWORD PTR [esp+0x6c]
10028ef9:	jae    0x10028eff
10028efb:	lea    eax,[esp+0x6c]
10028eff:	push   eax
10028f00:	call   0x1000207c
10028f05:	mov    DWORD PTR [esp],0x589c82ec
10028f0c:	push   0x10070f64
10028f11:	call   0x10003d63
10028f16:	push   eax
10028f17:	push   0xc
10028f19:	push   0x10070730
10028f1e:	call   0x10003d75
10028f23:	add    esp,0x14
10028f26:	push   eax
10028f27:	lea    ecx,[esp+0x18]
10028f2b:	call   0x100011d6
10028f30:	push   0x1b40e7f0
10028f35:	push   0x10070f88
10028f3a:	mov    BYTE PTR [esp+0xb8],0x4
10028f42:	call   0x10003d63
10028f47:	push   0x6e8d2e84
10028f4c:	push   eax
10028f4d:	call   0x10003d63
10028f52:	push   0x774acdc8
10028f57:	push   eax
10028f58:	call   0x10003d63
10028f5d:	push   eax
10028f5e:	push   0x3
10028f60:	push   0x10070768
10028f65:	call   0x10003d75
10028f6a:	add    esp,0x24
10028f6d:	push   eax
10028f6e:	lea    ecx,[esp+0x34]
10028f72:	call   0x100011d6
10028f77:	push   0x6d0f9e5e
10028f7c:	push   0x10070fc8
10028f81:	mov    BYTE PTR [esp+0xb8],0x5
10028f89:	call   0x10003d63
10028f8e:	push   eax
10028f8f:	push   0x8
10028f91:	push   0x100707a8
10028f96:	call   0x10003d75
10028f9b:	add    esp,0x14
10028f9e:	push   eax
10028f9f:	lea    ecx,[esp+0x50]
10028fa3:	call   0x100011d6
10028fa8:	lea    eax,[esp+0x14]
10028fac:	push   eax
10028fad:	lea    eax,[esp+0x34]
10028fb1:	push   eax
10028fb2:	lea    ecx,[esp+0x54]
10028fb6:	mov    BYTE PTR [esp+0xb8],0x6
10028fbe:	add    edi,0x8
10028fc1:	call   0x10009124
10028fc6:	pop    ecx
10028fc7:	pop    ecx
10028fc8:	mov    ebx,eax
10028fca:	call   0x10026331
10028fcf:	xor    esi,esi
10028fd1:	xor    ebx,ebx
10028fd3:	push   esi
10028fd4:	inc    ebx
10028fd5:	push   ebx
10028fd6:	lea    ecx,[esp+0x54]
10028fda:	call   0x100012f9
10028fdf:	push   esi
10028fe0:	push   ebx
10028fe1:	lea    ecx,[esp+0x38]
10028fe5:	call   0x100012f9
10028fea:	push   esi
10028feb:	push   ebx
10028fec:	lea    ecx,[esp+0x1c]
10028ff0:	mov    BYTE PTR [esp+0xb8],0x3
10028ff8:	call   0x100012f9
10028ffd:	push   0x4d6fecbe
10029002:	push   0x10070ffc
10029007:	call   0x10003d63
1002900c:	push   0x6205d4b2
10029011:	push   eax
10029012:	call   0x10003d63
10029017:	push   0x6da67fe8
1002901c:	push   eax
1002901d:	call   0x10003d63
10029022:	push   0x1e0862e6
10029027:	push   eax
10029028:	call   0x10003d63
1002902d:	push   eax
1002902e:	push   0x8
10029030:	push   0x10070808
10029035:	call   0x10003d75
1002903a:	add    esp,0x2c
1002903d:	push   eax
1002903e:	lea    ecx,[esp+0x18]
10029042:	call   0x100011d6
10029047:	mov    BYTE PTR [esp+0xb0],0x7
1002904f:	mov    eax,DWORD PTR [edi]
10029051:	push   esi
10029052:	lea    ecx,[esp+0x18]
10029056:	push   ecx
10029057:	lea    edx,[eax+0x20]
1002905a:	lea    ecx,[esp+0x70]
1002905e:	call   0x10007aa4
10029063:	push   esi
10029064:	push   ebx
10029065:	lea    ecx,[esp+0x1c]
10029069:	mov    BYTE PTR [esp+0xb8],0x3
10029071:	call   0x100012f9
10029076:	push   0x1006bb1c
1002907b:	lea    ecx,[esp+0x34]
1002907f:	call   0x100011d6
10029084:	push   0x10071038
10029089:	push   0xe
1002908b:	push   0x1006c62c
10029090:	mov    BYTE PTR [esp+0xbc],0x8
10029098:	call   0x10003d75
1002909d:	add    esp,0xc
100290a0:	push   eax
100290a1:	lea    ecx,[esp+0x18]
100290a5:	call   0x100011d6
100290aa:	mov    BYTE PTR [esp+0xb0],0x9
100290b2:	mov    edx,DWORD PTR [edi]
100290b4:	push   esi
100290b5:	lea    eax,[esp+0x18]
100290b9:	push   eax
100290ba:	add    edx,0x20
100290bd:	lea    ecx,[esp+0x38]
100290c1:	call   0x10007aa4
100290c6:	push   esi
100290c7:	push   ebx
100290c8:	lea    ecx,[esp+0x1c]
100290cc:	call   0x100012f9
100290d1:	push   esi
100290d2:	push   ebx
100290d3:	lea    ecx,[esp+0x38]
100290d7:	call   0x100012f9
100290dc:	mov    eax,DWORD PTR [esp+0x10]
100290e0:	mov    BYTE PTR [eax+0x14],bl
100290e3:	push   0x0
100290e5:	push   0x1
100290e7:	lea    ecx,[esp+0x70]
100290eb:	call   0x100012f9
100290f0:	push   0x0
100290f2:	push   0x1
100290f4:	lea    ecx,[esp+0x8c]
100290fb:	call   0x100012f9
10029100:	mov    al,bl
10029102:	mov    ecx,DWORD PTR [esp+0xa8]
10029109:	mov    DWORD PTR fs:0x0,ecx
10029110:	pop    ecx
10029111:	pop    edi
10029112:	pop    esi
10029113:	pop    ebx
10029114:	mov    ecx,DWORD PTR [esp+0x90]
1002911b:	xor    ecx,esp
1002911d:	call   0x10041d97
10029122:	mov    esp,ebp
10029124:	pop    ebp
10029125:	ret    0x4
10029128:	xor    bl,bl
1002912a:	jmp    0x100290e3
1002912c:	push   esi
1002912d:	push   edi
1002912e:	mov    edi,DWORD PTR [esp+0xc]
10029132:	mov    esi,DWORD PTR [edi+0x10]
10029135:	call   0x10026182
1002913a:	test   al,al
1002913c:	je     0x10029146
1002913e:	mov    BYTE PTR [edi+0x14],0x1
10029142:	mov    al,0x1
10029144:	jmp    0x10029148
10029146:	xor    al,al
10029148:	pop    edi
10029149:	pop    esi
1002914a:	ret    0x4
1002914d:	push   ebp
1002914e:	mov    ebp,esp
10029150:	and    esp,0xfffffff8
10029153:	push   0xffffffff
10029155:	push   0x10062e3c
1002915a:	mov    eax,fs:0x0
10029160:	push   eax
10029161:	sub    esp,0x280
10029167:	mov    eax,ds:0x1007d030
1002916c:	xor    eax,esp
1002916e:	mov    DWORD PTR [esp+0x278],eax
10029175:	push   ebx
10029176:	push   esi
10029177:	push   edi
10029178:	mov    eax,ds:0x1007d030
1002917d:	xor    eax,esp
1002917f:	push   eax
10029180:	lea    eax,[esp+0x290]
10029187:	mov    fs:0x0,eax
1002918d:	mov    ebx,DWORD PTR [ebp+0x8]
10029190:	push   0x38881b80
10029195:	push   0x100710bc
1002919a:	mov    DWORD PTR [esp+0x1c],ebx
1002919e:	call   0x10003d63
100291a3:	push   eax
100291a4:	push   0x7
100291a6:	push   0x1006c320
100291ab:	call   0x10003d75
100291b0:	add    esp,0x14
100291b3:	push   eax
100291b4:	lea    ecx,[esp+0x80]
100291bb:	call   0x100011d6
100291c0:	xor    edi,edi
100291c2:	push   edi
100291c3:	lea    eax,[esp+0x80]
100291ca:	push   eax
100291cb:	lea    eax,[esp+0x28]
100291cf:	push   eax
100291d0:	mov    DWORD PTR [esp+0x2a4],edi
100291d7:	mov    eax,DWORD PTR [ebx]
100291d9:	add    eax,0x18
100291dc:	call   0x1000800f
100291e1:	mov    esi,eax
100291e3:	push   0x7722e67e
100291e8:	push   0x1007106c
100291ed:	mov    BYTE PTR [esp+0x2a0],0x1
100291f5:	call   0x10003d63
100291fa:	push   eax
100291fb:	push   0x10
100291fd:	push   0x100710a8
10029202:	call   0x10003d75
10029207:	add    esp,0x14
1002920a:	push   eax
1002920b:	call   0x10005e33
10029210:	neg    al
10029212:	sbb    al,al
10029214:	pop    ecx
10029215:	xor    esi,esi
10029217:	push   edi
10029218:	inc    al
1002921a:	inc    esi
1002921b:	push   esi
1002921c:	lea    ecx,[esp+0x28]
10029220:	mov    BYTE PTR [esp+0x1b],al
10029224:	call   0x100012f9
10029229:	or     DWORD PTR [esp+0x298],0xffffffff
10029231:	push   edi
10029232:	push   esi
10029233:	lea    ecx,[esp+0x84]
1002923a:	call   0x100012f9
1002923f:	cmp    BYTE PTR [esp+0x13],0x0
10029244:	je     0x1002924d
10029246:	xor    al,al
10029248:	jmp    0x10029a6f
1002924d:	mov    eax,DWORD PTR [ebx+0x10]
10029250:	lea    ecx,[esp+0x3c]
10029254:	push   ecx
10029255:	push   0x4
10029257:	lea    ecx,[esp+0x48]
1002925b:	push   ecx
1002925c:	push   esi
1002925d:	push   0x6
1002925f:	mov    DWORD PTR [esp+0x54],esi
10029263:	mov    DWORD PTR [esp+0x50],edi
10029267:	push   DWORD PTR [eax]
10029269:	call   DWORD PTR [eax+0xa4]
1002926f:	mov    esi,DWORD PTR [ebx+0x10]
10029272:	call   0x10026182
10029277:	test   al,al
10029279:	je     0x100293a1
1002927f:	call   0x1000207c
10029284:	push   0x73181178
10029289:	push   0x100710e0
1002928e:	call   0x10003d63
10029293:	push   eax
10029294:	push   0x9
10029296:	push   0x10070e6c
1002929b:	call   0x10003d75
100292a0:	add    esp,0x14
100292a3:	push   eax
100292a4:	lea    ecx,[esp+0x24]
100292a8:	call   0x100011d6
100292ad:	push   0x145dd6b0
100292b2:	push   0x10071120
100292b7:	mov    DWORD PTR [esp+0x2a0],0x2
100292c2:	call   0x10003d63
100292c7:	push   0x3227f330
100292cc:	push   eax
100292cd:	call   0x10003d63
100292d2:	push   eax
100292d3:	push   0x3
100292d5:	push   0x10070ea8
100292da:	call   0x10003d75
100292df:	add    esp,0x1c
100292e2:	push   eax
100292e3:	lea    ecx,[esp+0x48]
100292e7:	call   0x100011d6
100292ec:	push   0x1c94f854
100292f1:	push   0x10071158
100292f6:	mov    BYTE PTR [esp+0x2a0],0x3
100292fe:	call   0x10003d63
10029303:	push   0x4991c49e
10029308:	push   eax
10029309:	call   0x10003d63
1002930e:	push   0x1b8b8f6
10029313:	push   eax
10029314:	call   0x10003d63
10029319:	push   0x4b49c3c0
1002931e:	push   eax
1002931f:	call   0x10003d63
10029324:	push   eax
10029325:	push   0x8
10029327:	push   0x100707a8
1002932c:	call   0x10003d75
10029331:	add    esp,0x2c
10029334:	push   eax
10029335:	lea    ecx,[esp+0x80]
1002933c:	call   0x100011d6
10029341:	lea    eax,[esp+0x20]
10029345:	push   eax
10029346:	lea    eax,[esp+0x48]
1002934a:	push   eax
1002934b:	lea    ecx,[esp+0x84]
10029352:	mov    BYTE PTR [esp+0x2a0],0x4
1002935a:	call   0x10009124
1002935f:	pop    ecx
10029360:	lea    edi,[ebx+0x8]
10029363:	pop    ecx
10029364:	mov    ebx,eax
10029366:	call   0x10026331
1002936b:	xor    esi,esi
1002936d:	push   esi
1002936e:	push   0x1
10029370:	lea    ecx,[esp+0x84]
10029377:	call   0x100012f9
1002937c:	push   esi
1002937d:	push   0x1
1002937f:	lea    ecx,[esp+0x4c]
10029383:	call   0x100012f9
10029388:	push   esi
10029389:	push   0x1
1002938b:	lea    ecx,[esp+0x28]
1002938f:	call   0x100012f9
10029394:	mov    eax,DWORD PTR [esp+0x14]
10029398:	mov    BYTE PTR [eax+0x14],0x1
1002939c:	jmp    0x10029a6d
100293a1:	push   0x1142cdee
100293a6:	push   0x10071198
100293ab:	call   0x10003d63
100293b0:	push   0x17a9d3e8
100293b5:	push   eax
100293b6:	call   0x10003d63
100293bb:	push   0xbfeebb8
100293c0:	push   eax
100293c1:	call   0x10003d63
100293c6:	push   eax
100293c7:	push   0x7
100293c9:	push   0x1006c320
100293ce:	call   0x10003d75
100293d3:	add    esp,0x24
100293d6:	push   eax
100293d7:	lea    ecx,[esp+0x24]
100293db:	call   0x100011d6
100293e0:	lea    eax,[esp+0x20]
100293e4:	push   eax
100293e5:	mov    DWORD PTR [esp+0x29c],0x5
100293f0:	mov    eax,DWORD PTR [ebx+0x4]
100293f3:	add    eax,0x18
100293f6:	push   eax
100293f7:	call   0x10007dad
100293fc:	or     DWORD PTR [esp+0x298],0xffffffff
10029404:	push   edi
10029405:	push   0x1
10029407:	lea    ecx,[esp+0x28]
1002940b:	call   0x100012f9
10029410:	lea    ecx,[esp+0x15c]
10029417:	call   0x100127d9
1002941c:	push   0x1006bb18
10029421:	lea    esi,[esp+0x160]
10029428:	mov    DWORD PTR [esp+0x29c],0x6
10029433:	call   0x10005e33
10029438:	test   al,al
1002943a:	pop    ecx
1002943b:	jne    0x10029489
1002943d:	push   0x100711d4
10029442:	push   0xa
10029444:	push   0x1006c358
10029449:	call   0x10003d75
1002944e:	add    esp,0xc
10029451:	push   eax
10029452:	lea    ecx,[esp+0x24]
10029456:	call   0x100011d6
1002945b:	mov    BYTE PTR [esp+0x298],0x7
10029463:	mov    edx,DWORD PTR [ebx+0x4]
10029466:	lea    eax,[esp+0x20]
1002946a:	push   eax
1002946b:	add    edx,0x18
1002946e:	mov    ecx,esi
10029470:	call   0x10007ef8
10029475:	push   edi
10029476:	push   0x1
10029478:	lea    ecx,[esp+0x28]
1002947c:	mov    BYTE PTR [esp+0x2a0],0x6
10029484:	call   0x100012f9
10029489:	push   0x1006bb18
1002948e:	lea    esi,[esp+0x1b4]
10029495:	call   0x10005e33
1002949a:	test   al,al
1002949c:	pop    ecx
1002949d:	jne    0x1002950c
1002949f:	push   0x4b62a3c6
100294a4:	push   0x1007120c
100294a9:	call   0x10003d63
100294ae:	push   0x56d0b24a
100294b3:	push   eax
100294b4:	call   0x10003d63
100294b9:	push   0xeec4b52
100294be:	push   eax
100294bf:	call   0x10003d63
100294c4:	push   eax
100294c5:	push   0xf
100294c7:	push   0x1006c3d4
100294cc:	call   0x10003d75
100294d1:	add    esp,0x24
100294d4:	push   eax
100294d5:	lea    ecx,[esp+0x24]
100294d9:	call   0x100011d6
100294de:	mov    BYTE PTR [esp+0x298],0x8
100294e6:	mov    edx,DWORD PTR [ebx+0x4]
100294e9:	lea    eax,[esp+0x20]
100294ed:	push   eax
100294ee:	add    edx,0x18
100294f1:	mov    ecx,esi
100294f3:	call   0x10007ef8
100294f8:	push   edi
100294f9:	push   0x1
100294fb:	lea    ecx,[esp+0x28]
100294ff:	mov    BYTE PTR [esp+0x2a0],0x6
10029507:	call   0x100012f9
1002950c:	push   0x1006bb18
10029511:	lea    esi,[esp+0x17c]
10029518:	mov    BYTE PTR [esp+0x17],0x0
1002951d:	call   0x10005e33
10029522:	test   al,al
10029524:	pop    ecx
10029525:	jne    0x10029622
1002952b:	push   0x10
1002952d:	pop    esi
1002952e:	lea    eax,[esp+0x14]
10029532:	push   eax
10029533:	lea    eax,[esp+0x128]
1002953a:	push   eax
1002953b:	mov    eax,DWORD PTR [ebx+0x10]
1002953e:	mov    DWORD PTR [esp+0x1c],esi
10029542:	push   DWORD PTR [eax]
10029544:	call   DWORD PTR ds:0x100653a0
1002954a:	cmp    eax,0xffffffff
1002954d:	je     0x10029622
10029553:	cmp    WORD PTR [esp+0x124],0x2
1002955c:	jne    0x10029622
10029562:	push   0x1d54a0c2
10029567:	push   0x10071248
1002956c:	call   0x10003d63
10029571:	push   0x2f4ab556
10029576:	push   eax
10029577:	call   0x10003d63
1002957c:	push   0x4a42c374
10029581:	push   eax
10029582:	call   0x10003d63
10029587:	push   0x2708298
1002958c:	push   eax
1002958d:	call   0x10003d63
10029592:	push   0x6ffba3a
10029597:	push   eax
10029598:	call   0x10003d63
1002959d:	push   eax
1002959e:	push   0x4
100295a0:	push   0x1006c070
100295a5:	call   0x10003d75
100295aa:	add    esp,0x34
100295ad:	push   eax
100295ae:	lea    ecx,[esp+0x24]
100295b2:	call   0x100011d6
100295b7:	push   edi
100295b8:	lea    eax,[esp+0x24]
100295bc:	push   eax
100295bd:	lea    eax,[esp+0x68]
100295c1:	push   eax
100295c2:	mov    BYTE PTR [esp+0x2a4],0x9
100295ca:	mov    eax,DWORD PTR [ebx]
100295cc:	add    eax,0x18
100295cf:	call   0x1000800f
100295d4:	cmp    DWORD PTR [eax+0x18],esi
100295d7:	jb     0x100295de
100295d9:	mov    eax,DWORD PTR [eax+0x4]
100295dc:	jmp    0x100295e1
100295de:	add    eax,0x4
100295e1:	push   eax
100295e2:	call   DWORD PTR ds:0x100653d4
100295e8:	cmp    DWORD PTR [esp+0x128],eax
100295ef:	push   edi
100295f0:	push   0x1
100295f2:	lea    ecx,[esp+0x68]
100295f6:	setne  BYTE PTR [esp+0x23]
100295fb:	call   0x100012f9
10029600:	push   edi
10029601:	push   0x1
10029603:	lea    ecx,[esp+0x28]
10029607:	mov    BYTE PTR [esp+0x2a0],0x6
1002960f:	call   0x100012f9
10029614:	cmp    BYTE PTR [esp+0x1b],0x0
10029619:	je     0x10029622
1002961b:	mov    BYTE PTR [esp+0x13],0x1
10029620:	jmp    0x10029684
10029622:	push   0x1006bb18
10029627:	lea    esi,[esp+0x17c]
1002962e:	call   0x10005e33
10029633:	test   al,al
10029635:	pop    ecx
10029636:	jne    0x10029684
10029638:	push   0x10071274
1002963d:	push   0x4
1002963f:	push   0x1006c070
10029644:	call   0x10003d75
10029649:	add    esp,0xc
1002964c:	push   eax
1002964d:	lea    ecx,[esp+0x24]
10029651:	call   0x100011d6
10029656:	mov    BYTE PTR [esp+0x298],0xa
1002965e:	mov    edx,DWORD PTR [ebx+0x4]
10029661:	lea    eax,[esp+0x20]
10029665:	push   eax
10029666:	add    edx,0x18
10029669:	mov    ecx,esi
1002966b:	call   0x10007ef8
10029670:	push   edi
10029671:	push   0x1
10029673:	lea    ecx,[esp+0x28]
10029677:	mov    BYTE PTR [esp+0x2a0],0x6
1002967f:	call   0x100012f9
10029684:	push   0x6170b586
10029689:	push   0x100712ac
1002968e:	call   0x10003d63
10029693:	push   eax
10029694:	push   0x6
10029696:	mov    esi,0x1006c510
1002969b:	push   esi
1002969c:	call   0x10003d75
100296a1:	add    esp,0x14
100296a4:	push   eax
100296a5:	lea    ecx,[esp+0x24]
100296a9:	call   0x100011d6
100296ae:	push   edi
100296af:	lea    eax,[esp+0x24]
100296b3:	push   eax
100296b4:	lea    eax,[esp+0x12c]
100296bb:	push   eax
100296bc:	mov    BYTE PTR [esp+0x2a4],0xb
100296c4:	mov    eax,DWORD PTR [ebx]
100296c6:	add    eax,0x18
100296c9:	call   0x1000800f
100296ce:	push   edi
100296cf:	push   0x1
100296d1:	lea    ecx,[esp+0x28]
100296d5:	mov    BYTE PTR [esp+0x2a0],0xd
100296dd:	call   0x100012f9
100296e2:	push   0x70c10d5a
100296e7:	push   0x100712d4
100296ec:	call   0x10003d63
100296f1:	push   0x150eb196
100296f6:	push   eax
100296f7:	call   0x10003d63
100296fc:	push   eax
100296fd:	push   0x6
100296ff:	push   esi
10029700:	call   0x10003d75
10029705:	add    esp,0x1c
10029708:	push   eax
10029709:	lea    ecx,[esp+0x48]
1002970d:	call   0x100011d6
10029712:	lea    eax,[esp+0x44]
10029716:	push   eax
10029717:	mov    BYTE PTR [esp+0x29c],0xe
1002971f:	mov    eax,DWORD PTR [ebx+0x4]
10029722:	add    eax,0x18
10029725:	push   eax
10029726:	call   0x10007dad
1002972b:	push   edi
1002972c:	push   0x1
1002972e:	lea    ecx,[esp+0x4c]
10029732:	mov    BYTE PTR [esp+0x2a0],0xd
1002973a:	call   0x100012f9
1002973f:	cmp    DWORD PTR [esp+0x138],edi
10029746:	mov    DWORD PTR [esp+0x1c],edi
1002974a:	jbe    0x10029839
10029750:	push   DWORD PTR [esp+0x1c]
10029754:	lea    eax,[esp+0x128]
1002975b:	push   0x1006c554
10029760:	push   eax
10029761:	call   0x1000c40c
10029766:	cmp    eax,0xffffffff
10029769:	mov    DWORD PTR [esp+0x14],eax
1002976d:	jne    0x1002977a
1002976f:	mov    eax,DWORD PTR [esp+0x138]
10029776:	mov    DWORD PTR [esp+0x14],eax
1002977a:	cmp    eax,DWORD PTR [esp+0x1c]
1002977e:	jbe    0x10029825
10029784:	push   0x720016a6
10029789:	push   0x10071308
1002978e:	call   0x10003d63
10029793:	push   0x3d221254
10029798:	push   eax
10029799:	call   0x10003d63
1002979e:	push   0x469fd09a
100297a3:	push   eax
100297a4:	call   0x10003d63
100297a9:	push   eax
100297aa:	push   0x6
100297ac:	push   esi
100297ad:	call   0x10003d75
100297b2:	add    esp,0x24
100297b5:	push   eax
100297b6:	lea    ecx,[esp+0x48]
100297ba:	call   0x100011d6
100297bf:	mov    BYTE PTR [esp+0x298],0xf
100297c7:	mov    eax,DWORD PTR [esp+0x14]
100297cb:	sub    eax,DWORD PTR [esp+0x1c]
100297cf:	push   eax
100297d0:	push   DWORD PTR [esp+0x20]
100297d4:	lea    eax,[esp+0x12c]
100297db:	push   eax
100297dc:	lea    eax,[esp+0x6c]
100297e0:	call   0x1000c42b
100297e5:	mov    BYTE PTR [esp+0x298],0x10
100297ed:	mov    edx,DWORD PTR [ebx+0x4]
100297f0:	push   0x1
100297f2:	lea    ecx,[esp+0x48]
100297f6:	push   ecx
100297f7:	add    edx,0x18
100297fa:	mov    ecx,eax
100297fc:	call   0x10007aa4
10029801:	push   edi
10029802:	push   0x1
10029804:	lea    ecx,[esp+0x68]
10029808:	call   0x100012f9
1002980d:	push   edi
1002980e:	push   0x1
10029810:	lea    ecx,[esp+0x4c]
10029814:	mov    BYTE PTR [esp+0x2a0],0xd
1002981c:	call   0x100012f9
10029821:	mov    eax,DWORD PTR [esp+0x14]
10029825:	cmp    eax,DWORD PTR [esp+0x138]
1002982c:	lea    ecx,[eax+0x1]
1002982f:	mov    DWORD PTR [esp+0x1c],ecx
10029833:	jb     0x10029750
10029839:	push   0x1006bb18
1002983e:	lea    esi,[esp+0x198]
10029845:	call   0x10005e33
1002984a:	test   al,al
1002984c:	pop    ecx
1002984d:	jne    0x10029a52
10029853:	lea    edi,[esp+0x1ec]
1002985a:	call   0x1000b784
1002985f:	mov    eax,esi
10029861:	push   eax
10029862:	lea    ecx,[esp+0x144]
10029869:	mov    BYTE PTR [esp+0x29c],0x11
10029871:	call   0x100011b0
10029876:	cmp    BYTE PTR [esp+0x13],0x0
1002987b:	mov    BYTE PTR [esp+0x298],0x12
10029883:	je     0x10029a20
10029889:	mov    eax,edi
1002988b:	push   eax
1002988c:	lea    ecx,[esp+0x144]
10029893:	call   0x10032860
10029898:	test   al,al
1002989a:	pop    ecx
1002989b:	je     0x10029a20
100298a1:	push   0x4fd672b6
100298a6:	push   0x10071330
100298ab:	call   0x10003d63
100298b0:	push   0x10ce1782
100298b5:	push   eax
100298b6:	call   0x10003d63
100298bb:	push   0xce9f54a
100298c0:	push   eax
100298c1:	call   0x10003d63
100298c6:	push   0x77f18e96
100298cb:	push   eax
100298cc:	call   0x10003d63
100298d1:	push   0x3fa27e94
100298d6:	push   eax
100298d7:	call   0x10003d63
100298dc:	push   0x2dd52110
100298e1:	push   eax
100298e2:	call   0x10003d63
100298e7:	push   eax
100298e8:	push   0x4
100298ea:	push   0x1006c070
100298ef:	call   0x10003d75
100298f4:	add    esp,0x3c
100298f7:	push   eax
100298f8:	lea    ecx,[esp+0x64]
100298fc:	call   0x100011d6
10029901:	xor    edi,edi
10029903:	push   edi
10029904:	lea    eax,[esp+0x64]
10029908:	push   eax
10029909:	lea    eax,[esp+0x110]
10029910:	push   eax
10029911:	mov    BYTE PTR [esp+0x2a4],0x13
10029919:	mov    eax,DWORD PTR [ebx]
1002991b:	add    eax,0x18
1002991e:	call   0x1000800f
10029923:	mov    esi,eax
10029925:	push   0x10071360
1002992a:	push   0x7
1002992c:	push   0x1006c028
10029931:	mov    BYTE PTR [esp+0x2a4],0x14
10029939:	call   0x10003d75
1002993e:	add    esp,0xc
10029941:	push   eax
10029942:	lea    ecx,[esp+0xd4]
10029949:	call   0x100011d6
1002994e:	push   esi
1002994f:	push   eax
10029950:	lea    eax,[esp+0xbc]
10029957:	push   eax
10029958:	mov    BYTE PTR [esp+0x2a4],0x15
10029960:	call   0x1000a3d1
10029965:	add    esp,0xc
10029968:	lea    ecx,[esp+0x248]
1002996f:	push   ecx
10029970:	push   eax
10029971:	lea    eax,[esp+0xa0]
10029978:	push   eax
10029979:	mov    BYTE PTR [esp+0x2a4],0x16
10029981:	call   0x1000a3d1
10029986:	add    esp,0xc
10029989:	lea    ecx,[esp+0x264]
10029990:	push   ecx
10029991:	push   eax
10029992:	lea    eax,[esp+0xf4]
10029999:	push   eax
1002999a:	mov    BYTE PTR [esp+0x2a4],0x17
100299a2:	call   0x1000a3d1
100299a7:	add    esp,0xc
100299aa:	push   0xffffffff
100299ac:	push   edi
100299ad:	push   eax
100299ae:	lea    ecx,[esp+0x14c]
100299b5:	mov    BYTE PTR [esp+0x2a4],0x18
100299bd:	call   0x1000124a
100299c2:	xor    esi,esi
100299c4:	push   edi
100299c5:	inc    esi
100299c6:	push   esi
100299c7:	lea    ecx,[esp+0xf4]
100299ce:	call   0x100012f9
100299d3:	push   edi
100299d4:	push   esi
100299d5:	lea    ecx,[esp+0xa0]
100299dc:	call   0x100012f9
100299e1:	push   edi
100299e2:	push   esi
100299e3:	lea    ecx,[esp+0xbc]
100299ea:	call   0x100012f9
100299ef:	push   edi
100299f0:	push   esi
100299f1:	lea    ecx,[esp+0xd8]
100299f8:	call   0x100012f9
100299fd:	push   edi
100299fe:	push   esi
100299ff:	lea    ecx,[esp+0x110]
10029a06:	call   0x100012f9
10029a0b:	push   edi
10029a0c:	push   esi
10029a0d:	lea    ecx,[esp+0x68]
10029a11:	mov    BYTE PTR [esp+0x2a0],0x12
10029a19:	call   0x100012f9
10029a1e:	jmp    0x10029a22
10029a20:	xor    edi,edi
10029a22:	lea    eax,[esp+0x140]
10029a29:	push   eax
10029a2a:	mov    eax,DWORD PTR [ebx+0x4]
10029a2d:	mov    esi,DWORD PTR [eax+0x4]
10029a30:	call   0x100074cf
10029a35:	push   edi
10029a36:	push   0x1
10029a38:	lea    ecx,[esp+0x148]
10029a3f:	call   0x100012f9
10029a44:	lea    esi,[esp+0x1ec]
10029a4b:	call   0x1000b7b1
10029a50:	xor    edi,edi
10029a52:	push   edi
10029a53:	push   0x1
10029a55:	lea    ecx,[esp+0x12c]
10029a5c:	call   0x100012f9
10029a61:	lea    esi,[esp+0x15c]
10029a68:	call   0x1000b749
10029a6d:	mov    al,0x1
10029a6f:	mov    ecx,DWORD PTR [esp+0x290]
10029a76:	mov    DWORD PTR fs:0x0,ecx
10029a7d:	pop    ecx
10029a7e:	pop    edi
10029a7f:	pop    esi
10029a80:	pop    ebx
10029a81:	mov    ecx,DWORD PTR [esp+0x278]
10029a88:	xor    ecx,esp
10029a8a:	call   0x10041d97
10029a8f:	mov    esp,ebp
10029a91:	pop    ebp
10029a92:	ret    0x4
10029a95:	push   ebp
10029a96:	mov    ebp,esp
10029a98:	sub    esp,0x1c
10029a9b:	push   esi
10029a9c:	mov    esi,DWORD PTR [ebp+0x8]
10029a9f:	push   DWORD PTR [esi]
10029aa1:	call   0x10026244
10029aa6:	test   al,al
10029aa8:	pop    ecx
10029aa9:	je     0x10029ae4
10029aab:	push   DWORD PTR [esi]
10029aad:	lea    ecx,[ebp-0x1c]
10029ab0:	call   0x1000868a
10029ab5:	cmp    DWORD PTR [eax+0x18],0x10
10029ab9:	jb     0x10029ac0
10029abb:	mov    eax,DWORD PTR [eax+0x4]
10029abe:	jmp    0x10029ac3
10029ac0:	add    eax,0x4
10029ac3:	push   eax
10029ac4:	mov    eax,DWORD PTR [esi+0x10]
10029ac7:	push   DWORD PTR [eax]
10029ac9:	call   0x1000207c
10029ace:	pop    ecx
10029acf:	pop    ecx
10029ad0:	push   0x0
10029ad2:	push   0x1
10029ad4:	lea    ecx,[ebp-0x1c]
10029ad7:	call   0x100012f9
10029adc:	mov    BYTE PTR [esi+0x14],0x1
10029ae0:	mov    al,0x1
10029ae2:	jmp    0x10029ae6
10029ae4:	xor    al,al
10029ae6:	pop    esi
10029ae7:	leave  
10029ae8:	ret    0x4
10029aeb:	push   ebp
10029aec:	mov    ebp,esp
10029aee:	and    esp,0xfffffff8
10029af1:	push   0xffffffff
10029af3:	push   0x1006147c
10029af8:	mov    eax,fs:0x0
10029afe:	push   eax
10029aff:	sub    esp,0x58
10029b02:	push   ebx
10029b03:	push   esi
10029b04:	push   edi
10029b05:	mov    eax,ds:0x1007d030
10029b0a:	xor    eax,esp
10029b0c:	push   eax
10029b0d:	lea    eax,[esp+0x68]
10029b11:	mov    fs:0x0,eax
10029b17:	mov    esi,DWORD PTR [ebp+0x8]
10029b1a:	push   DWORD PTR [esi]
10029b1c:	call   0x10026244
10029b21:	test   al,al
10029b23:	pop    ecx
10029b24:	je     0x10029c14
10029b2a:	push   0x64f8b5b2
10029b2f:	push   0x10071388
10029b34:	call   0x10003d63
10029b39:	push   eax
10029b3a:	push   0xd
10029b3c:	mov    edi,0x100713b4
10029b41:	push   edi
10029b42:	call   0x10003d75
10029b47:	add    esp,0x14
10029b4a:	push   eax
10029b4b:	lea    ecx,[esp+0x14]
10029b4f:	call   0x100011d6
10029b54:	and    DWORD PTR [esp+0x70],0x0
10029b59:	lea    eax,[esp+0x10]
10029b5d:	push   eax
10029b5e:	mov    eax,DWORD PTR [esi+0x8]
10029b61:	add    eax,0x20
10029b64:	push   eax
10029b65:	call   0x10007dad
10029b6a:	or     DWORD PTR [esp+0x70],0xffffffff
10029b6f:	xor    ebx,ebx
10029b71:	push   0x0
10029b73:	inc    ebx
10029b74:	push   ebx
10029b75:	lea    ecx,[esp+0x18]
10029b79:	call   0x100012f9
10029b7e:	push   0x2c35d48a
10029b83:	push   0x100713c4
10029b88:	call   0x10003d63
10029b8d:	push   0x38f02058
10029b92:	push   eax
10029b93:	call   0x10003d63
10029b98:	push   eax
10029b99:	push   0x8
10029b9b:	push   0x100713f8
10029ba0:	call   0x10003d75
10029ba5:	add    esp,0x1c
10029ba8:	push   eax
10029ba9:	lea    ecx,[esp+0x4c]
10029bad:	call   0x100011d6
10029bb2:	push   0x2f6406aa
10029bb7:	push   0x10071404
10029bbc:	mov    DWORD PTR [esp+0x78],ebx
10029bc0:	call   0x10003d63
10029bc5:	push   eax
10029bc6:	push   0xd
10029bc8:	push   edi
10029bc9:	call   0x10003d75
10029bce:	add    esp,0x14
10029bd1:	push   eax
10029bd2:	lea    ecx,[esp+0x30]
10029bd6:	call   0x100011d6
10029bdb:	mov    BYTE PTR [esp+0x70],0x2
10029be0:	mov    edx,DWORD PTR [esi+0x8]
10029be3:	xor    edi,edi
10029be5:	push   edi
10029be6:	lea    eax,[esp+0x30]
10029bea:	push   eax
10029beb:	add    edx,0x20
10029bee:	lea    ecx,[esp+0x50]
10029bf2:	call   0x10007aa4
10029bf7:	push   edi
10029bf8:	push   ebx
10029bf9:	lea    ecx,[esp+0x34]
10029bfd:	call   0x100012f9
10029c02:	push   edi
10029c03:	push   ebx
10029c04:	lea    ecx,[esp+0x50]
10029c08:	call   0x100012f9
10029c0d:	mov    BYTE PTR [esi+0x11],bl
10029c10:	mov    al,bl
10029c12:	jmp    0x10029c16
10029c14:	xor    al,al
10029c16:	mov    ecx,DWORD PTR [esp+0x68]
10029c1a:	mov    DWORD PTR fs:0x0,ecx
10029c21:	pop    ecx
10029c22:	pop    edi
10029c23:	pop    esi
10029c24:	pop    ebx
10029c25:	mov    esp,ebp
10029c27:	pop    ebp
10029c28:	ret    0x4
10029c2b:	push   ebp
10029c2c:	mov    ebp,esp
10029c2e:	and    esp,0xfffffff8
10029c31:	push   0xffffffff
10029c33:	push   0x100608df
10029c38:	mov    eax,fs:0x0
10029c3e:	push   eax
10029c3f:	sub    esp,0x1f0
10029c45:	push   ebx
10029c46:	push   esi
10029c47:	push   edi
10029c48:	mov    eax,ds:0x1007d030
10029c4d:	xor    eax,esp
10029c4f:	push   eax
10029c50:	lea    eax,[esp+0x200]
10029c57:	mov    fs:0x0,eax
10029c5d:	push   0x62b757f8
10029c62:	xor    ebx,ebx
10029c64:	push   0x10071440
10029c69:	mov    DWORD PTR [esp+0x18],ebx
10029c6d:	call   0x10003d63
10029c72:	push   0x28c72a6e
10029c77:	push   eax
10029c78:	call   0x10003d63
10029c7d:	push   0x5b6ac0ee
10029c82:	push   eax
10029c83:	call   0x10003d63
10029c88:	push   eax
10029c89:	push   0xa
10029c8b:	push   0x1006c358
10029c90:	call   0x10003d75
10029c95:	add    esp,0x24
10029c98:	push   eax
10029c99:	lea    ecx,[esp+0x78]
10029c9d:	call   0x100011d6
10029ca2:	mov    edi,DWORD PTR [ebp+0x8]
10029ca5:	push   ebx
10029ca6:	lea    eax,[esp+0x78]
10029caa:	push   eax
10029cab:	lea    eax,[esp+0xb4]
10029cb2:	mov    DWORD PTR [esp+0x210],ebx
10029cb9:	push   eax
10029cba:	mov    eax,DWORD PTR [edi]
10029cbc:	xor    esi,esi
10029cbe:	inc    esi
10029cbf:	add    eax,0x18
10029cc2:	mov    DWORD PTR [esp+0x1c],esi
10029cc6:	call   0x1000800f
10029ccb:	mov    DWORD PTR [esp+0x208],esi
10029cd2:	push   0x1006bb18
10029cd7:	mov    esi,eax
10029cd9:	mov    DWORD PTR [esp+0x14],0x3
10029ce1:	call   0x10005e33
10029ce6:	test   al,al
10029ce8:	pop    ecx
10029ce9:	jne    0x10029d7d
10029cef:	push   0x1b51f3e
10029cf4:	push   0x1007147c
10029cf9:	call   0x10003d63
10029cfe:	push   0x7d654f0e
10029d03:	push   eax
10029d04:	call   0x10003d63
10029d09:	push   eax
10029d0a:	push   0x4
10029d0c:	push   0x1006c070
10029d11:	call   0x10003d75
10029d16:	add    esp,0x1c
10029d19:	push   eax
10029d1a:	lea    ecx,[esp+0x94]
10029d21:	call   0x100011d6
10029d26:	push   ebx
10029d27:	lea    eax,[esp+0x94]
10029d2e:	push   eax
10029d2f:	lea    eax,[esp+0xec]
10029d36:	mov    DWORD PTR [esp+0x210],0x2
10029d41:	push   eax
10029d42:	mov    eax,DWORD PTR [edi]
10029d44:	add    eax,0x18
10029d47:	mov    DWORD PTR [esp+0x1c],0x7
10029d4f:	call   0x1000800f
10029d54:	mov    DWORD PTR [esp+0x208],0x3
10029d5f:	push   0x1006bb18
10029d64:	mov    esi,eax
10029d66:	mov    DWORD PTR [esp+0x14],0xf
10029d6e:	call   0x10005e33
10029d73:	test   al,al
10029d75:	pop    ecx
10029d76:	mov    BYTE PTR [esp+0x17],0x1
10029d7b:	je     0x10029d81
10029d7d:	mov    BYTE PTR [esp+0x17],bl
10029d81:	test   BYTE PTR [esp+0x10],0x8
10029d86:	je     0x10029d9c
10029d88:	and    DWORD PTR [esp+0x10],0xfffffff7
10029d8d:	push   ebx
10029d8e:	push   0x1
10029d90:	lea    ecx,[esp+0xec]
10029d97:	call   0x100012f9
10029d9c:	test   BYTE PTR [esp+0x10],0x4
10029da1:	je     0x10029db7
10029da3:	and    DWORD PTR [esp+0x10],0xfffffffb
10029da8:	push   ebx
10029da9:	push   0x1
10029dab:	lea    ecx,[esp+0x98]
10029db2:	call   0x100012f9
10029db7:	test   BYTE PTR [esp+0x10],0x2
10029dbc:	je     0x10029dd2
10029dbe:	and    DWORD PTR [esp+0x10],0xfffffffd
10029dc3:	push   ebx
10029dc4:	push   0x1
10029dc6:	lea    ecx,[esp+0xb4]
10029dcd:	call   0x100012f9
10029dd2:	or     DWORD PTR [esp+0x208],0xffffffff
10029dda:	test   BYTE PTR [esp+0x10],0x1
10029ddf:	je     0x10029ded
10029de1:	push   ebx
10029de2:	push   0x1
10029de4:	lea    ecx,[esp+0x7c]
10029de8:	call   0x100012f9
10029ded:	cmp    BYTE PTR [esp+0x17],bl
10029df1:	je     0x1002a024
10029df7:	push   0x37bdf90a
10029dfc:	push   0x100714b4
10029e01:	call   0x10003d63
10029e06:	push   0x3bc9e5d2
10029e0b:	push   eax
10029e0c:	call   0x10003d63
10029e11:	push   eax
10029e12:	push   0xf
10029e14:	push   0x1006c3d4
10029e19:	call   0x10003d75
10029e1e:	add    esp,0x1c
10029e21:	push   eax
10029e22:	lea    ecx,[esp+0x24]
10029e26:	call   0x100011d6
10029e2b:	push   0x4
10029e2d:	pop    esi
10029e2e:	push   0x6a26012c
10029e33:	push   0x100714e4
10029e38:	mov    DWORD PTR [esp+0x210],esi
10029e3f:	call   0x10003d63
10029e44:	push   0x61a08e24
10029e49:	push   eax
10029e4a:	call   0x10003d63
10029e4f:	push   0x463cdac8
10029e54:	push   eax
10029e55:	call   0x10003d63
10029e5a:	push   eax
10029e5b:	push   esi
10029e5c:	push   0x1006c070
10029e61:	call   0x10003d75
10029e66:	add    esp,0x24
10029e69:	push   eax
10029e6a:	lea    ecx,[esp+0x5c]
10029e6e:	call   0x100011d6
10029e73:	push   0xf59d74e
10029e78:	push   0x1007151c
10029e7d:	mov    BYTE PTR [esp+0x210],0x5
10029e85:	call   0x10003d63
10029e8a:	push   0x42295aba
10029e8f:	push   eax
10029e90:	call   0x10003d63
10029e95:	push   0x786284ee
10029e9a:	push   eax
10029e9b:	call   0x10003d63
10029ea0:	push   eax
10029ea1:	push   0xa
10029ea3:	push   0x1006c358
10029ea8:	call   0x10003d75
10029ead:	add    esp,0x24
10029eb0:	push   eax
10029eb1:	lea    ecx,[esp+0x40]
10029eb5:	call   0x100011d6
10029eba:	mov    BYTE PTR [esp+0x208],0x6
10029ec2:	mov    eax,DWORD PTR [edi]
10029ec4:	mov    eax,DWORD PTR [eax+0x8]
10029ec7:	lea    ecx,[esp+0x138]
10029ece:	push   ecx
10029ecf:	call   0x100194bf
10029ed4:	mov    esi,eax
10029ed6:	push   ebx
10029ed7:	lea    eax,[esp+0x24]
10029edb:	push   eax
10029edc:	lea    eax,[esp+0x108]
10029ee3:	push   eax
10029ee4:	mov    BYTE PTR [esp+0x214],0x7
10029eec:	mov    eax,DWORD PTR [edi]
10029eee:	add    eax,0x18
10029ef1:	call   0x1000800f
10029ef6:	mov    DWORD PTR [esp+0x10],eax
10029efa:	mov    BYTE PTR [esp+0x208],0x8
10029f02:	mov    eax,DWORD PTR [edi]
10029f04:	mov    eax,DWORD PTR [eax+0x4]
10029f07:	lea    ecx,[esp+0xc8]
10029f0e:	push   ecx
10029f0f:	call   0x100194bf
10029f14:	mov    DWORD PTR [esp+0x18],eax
10029f18:	push   ebx
10029f19:	lea    eax,[esp+0x5c]
10029f1d:	push   eax
10029f1e:	lea    eax,[esp+0x124]
10029f25:	push   eax
10029f26:	mov    BYTE PTR [esp+0x214],0x9
10029f2e:	mov    eax,DWORD PTR [edi]
10029f30:	add    eax,0x18
10029f33:	call   0x1000800f
10029f38:	mov    DWORD PTR [esp+0x1c],eax
10029f3c:	push   ebx
10029f3d:	lea    eax,[esp+0x40]
10029f41:	push   eax
10029f42:	lea    eax,[esp+0x15c]
10029f49:	push   eax
10029f4a:	mov    BYTE PTR [esp+0x214],0xa
10029f52:	mov    eax,DWORD PTR [edi]
10029f54:	add    eax,0x18
10029f57:	call   0x1000800f
10029f5c:	push   esi
10029f5d:	mov    BYTE PTR [esp+0x20c],0xb
10029f65:	push   DWORD PTR [esp+0x14]
10029f69:	push   DWORD PTR [esp+0x20]
10029f6d:	push   DWORD PTR [esp+0x28]
10029f71:	push   eax
10029f72:	lea    eax,[esp+0x184]
10029f79:	push   eax
10029f7a:	call   0x1001274c
10029f7f:	mov    esi,eax
10029f81:	push   0xffffffff
10029f83:	mov    BYTE PTR [esp+0x20c],0xc
10029f8b:	push   DWORD PTR ds:0x1007fda4
10029f91:	call   DWORD PTR ds:0x10065084
10029f97:	test   eax,eax
10029f99:	jne    0x10029fae
10029f9b:	mov    eax,esi
10029f9d:	call   0x100128ad
10029fa2:	push   DWORD PTR ds:0x1007fda4
10029fa8:	call   DWORD PTR ds:0x10065094
10029fae:	lea    esi,[esp+0x170]
10029fb5:	call   0x1000b749
10029fba:	xor    esi,esi
10029fbc:	push   ebx
10029fbd:	inc    esi
10029fbe:	push   esi
10029fbf:	lea    ecx,[esp+0x15c]
10029fc6:	call   0x100012f9
10029fcb:	push   ebx
10029fcc:	push   esi
10029fcd:	lea    ecx,[esp+0x124]
10029fd4:	call   0x100012f9
10029fd9:	push   ebx
10029fda:	push   esi
10029fdb:	lea    ecx,[esp+0xd0]
10029fe2:	call   0x100012f9
10029fe7:	push   ebx
10029fe8:	push   esi
10029fe9:	lea    ecx,[esp+0x108]
10029ff0:	call   0x100012f9
10029ff5:	push   ebx
10029ff6:	push   esi
10029ff7:	lea    ecx,[esp+0x140]
10029ffe:	call   0x100012f9
1002a003:	push   ebx
1002a004:	push   esi
1002a005:	lea    ecx,[esp+0x44]
1002a009:	call   0x100012f9
1002a00e:	push   ebx
1002a00f:	push   esi
1002a010:	lea    ecx,[esp+0x60]
1002a014:	call   0x100012f9
1002a019:	push   ebx
1002a01a:	push   esi
1002a01b:	lea    ecx,[esp+0x28]
1002a01f:	call   0x100012f9
1002a024:	xor    al,al
1002a026:	mov    ecx,DWORD PTR [esp+0x200]
1002a02d:	mov    DWORD PTR fs:0x0,ecx
1002a034:	pop    ecx
1002a035:	pop    edi
1002a036:	pop    esi
1002a037:	pop    ebx
1002a038:	mov    esp,ebp
1002a03a:	pop    ebp
1002a03b:	ret    0x4
1002a03e:	push   0x0
1002a040:	push   0x1007fd80
1002a045:	call   DWORD PTR ds:0x100650e4
1002a04b:	test   eax,eax
1002a04d:	jne    0x1002a062
1002a04f:	mov    eax,DWORD PTR [esp+0x4]
1002a053:	mov    BYTE PTR [eax+0x14],0x1
1002a057:	mov    eax,DWORD PTR [eax+0x4]
1002a05a:	mov    BYTE PTR [eax+0x2c],0x1
1002a05e:	mov    al,0x1
1002a060:	jmp    0x1002a064
1002a062:	xor    al,al
1002a064:	ret    0x4
1002a067:	push   0x20
1002a069:	mov    eax,0x1005f816
1002a06e:	call   0x10058845
1002a073:	mov    edi,DWORD PTR [ebp+0x8]
1002a076:	mov    esi,edi
1002a078:	call   0x10003ba8
1002a07d:	push   DWORD PTR [ebp+0xc]
1002a080:	xor    ebx,ebx
1002a082:	mov    DWORD PTR [ebp-0x4],ebx
1002a085:	lea    ecx,[ebp-0x28]
1002a088:	mov    DWORD PTR [edi+0x1c],ebx
1002a08b:	mov    DWORD PTR [edi+0x20],ebx
1002a08e:	mov    DWORD PTR [edi+0x24],ebx
1002a091:	call   0x100011d6
1002a096:	mov    esi,DWORD PTR [ebp+0x10]
1002a099:	lea    eax,[ebp-0x28]
1002a09c:	mov    ecx,edi
1002a09e:	mov    BYTE PTR [ebp-0x4],0x1
1002a0a2:	call   0x10038d50
1002a0a7:	push   ebx
1002a0a8:	push   0x1
1002a0aa:	lea    ecx,[ebp-0x28]
1002a0ad:	call   0x100012f9
1002a0b2:	mov    eax,edi
1002a0b4:	call   0x1005891d
1002a0b9:	ret    0xc
1002a0bc:	push   ebp
1002a0bd:	mov    ebp,esp
1002a0bf:	and    esp,0xfffffff8
1002a0c2:	push   0xffffffff
1002a0c4:	push   0x10062088
1002a0c9:	mov    eax,fs:0x0
1002a0cf:	push   eax
1002a0d0:	sub    esp,0x108
1002a0d6:	mov    eax,ds:0x1007d030
1002a0db:	xor    eax,esp
1002a0dd:	mov    DWORD PTR [esp+0x100],eax
1002a0e4:	push   ebx
1002a0e5:	push   esi
1002a0e6:	push   edi
1002a0e7:	mov    eax,ds:0x1007d030
1002a0ec:	xor    eax,esp
1002a0ee:	push   eax
1002a0ef:	lea    eax,[esp+0x118]
1002a0f6:	mov    fs:0x0,eax
1002a0fc:	mov    edi,DWORD PTR [ebp+0x8]
1002a0ff:	mov    eax,DWORD PTR [edi]
1002a101:	xor    ebx,ebx
1002a103:	cmp    BYTE PTR [eax+0x2c],bl
1002a106:	mov    DWORD PTR [esp+0x18],edi
1002a10a:	je     0x1002a134
1002a10c:	xor    al,al
1002a10e:	mov    ecx,DWORD PTR [esp+0x118]
1002a115:	mov    DWORD PTR fs:0x0,ecx
1002a11c:	pop    ecx
1002a11d:	pop    edi
1002a11e:	pop    esi
1002a11f:	pop    ebx
1002a120:	mov    ecx,DWORD PTR [esp+0x100]
1002a127:	xor    ecx,esp
1002a129:	call   0x10041d97
1002a12e:	mov    esp,ebp
1002a130:	pop    ebp
1002a131:	ret    0x4
1002a134:	push   0x1007155c
1002a139:	push   0x8
1002a13b:	push   0x10070808
1002a140:	call   0x10003d75
1002a145:	add    esp,0xc
1002a148:	push   eax
1002a149:	lea    ecx,[esp+0xd8]
1002a150:	call   0x100011d6
1002a155:	push   ebx
1002a156:	lea    eax,[esp+0xd8]
1002a15d:	push   eax
1002a15e:	lea    eax,[esp+0xa4]
1002a165:	push   eax
1002a166:	mov    DWORD PTR [esp+0x12c],ebx
1002a16d:	mov    eax,DWORD PTR [edi+0x4]
1002a170:	add    eax,0x20
1002a173:	call   0x1000800f
1002a178:	push   ebx
1002a179:	push   0x1
1002a17b:	lea    ecx,[esp+0xdc]
1002a182:	mov    BYTE PTR [esp+0x128],0x2
1002a18a:	call   0x100012f9
1002a18f:	push   0x1006bb18
1002a194:	lea    esi,[esp+0xa0]
1002a19b:	call   0x10005e33
1002a1a0:	test   al,al
1002a1a2:	pop    ecx
1002a1a3:	jne    0x1002a673
1002a1a9:	push   DWORD PTR [edi]
1002a1ab:	lea    ecx,[esp+0xbc]
1002a1b2:	call   0x1000868a
1002a1b7:	lea    eax,[esp+0xf0]
1002a1be:	push   eax
1002a1bf:	push   0x1007fec8
1002a1c4:	lea    ecx,[esp+0xc0]
1002a1cb:	mov    BYTE PTR [esp+0x128],0x3
1002a1d3:	call   0x100195fa
1002a1d8:	lea    edi,[esp+0xf0]
1002a1df:	mov    BYTE PTR [esp+0x120],0x4
1002a1e7:	call   0x1001949f
1002a1ec:	test   al,al
1002a1ee:	jne    0x1002a655
1002a1f4:	cmp    DWORD PTR [esp+0xf0],ebx
1002a1fb:	je     0x1002a655
1002a201:	cmp    DWORD PTR [esp+0xd0],0x10
1002a209:	mov    esi,DWORD PTR [esp+0xbc]
1002a210:	mov    edi,esi
1002a212:	jae    0x1002a21d
1002a214:	lea    edi,[esp+0xbc]
1002a21b:	mov    esi,edi
1002a21d:	push   0x10071584
1002a222:	push   0x8
1002a224:	push   0x100715ac
1002a229:	call   0x10003d75
1002a22e:	add    esp,0xc
1002a231:	push   eax
1002a232:	push   edi
1002a233:	call   0x10044780
1002a238:	cmp    eax,esi
1002a23a:	pop    ecx
1002a23b:	pop    ecx
1002a23c:	jne    0x1002a35f
1002a242:	push   0x315a49e
1002a247:	push   0x100715b8
1002a24c:	call   0x10003d63
1002a251:	push   0x49cba396
1002a256:	push   eax
1002a257:	call   0x10003d63
1002a25c:	push   eax
1002a25d:	push   0x7
1002a25f:	push   0x100715e0
1002a264:	call   0x10003d75
1002a269:	add    esp,0x1c
1002a26c:	push   eax
1002a26d:	lea    ecx,[esp+0xd8]
1002a274:	call   0x100011d6
1002a279:	push   0xffffffff
1002a27b:	push   ebx
1002a27c:	lea    eax,[esp+0xa4]
1002a283:	lea    esi,[esp+0xdc]
1002a28a:	mov    BYTE PTR [esp+0x128],0x5
1002a292:	call   0x10005fb0
1002a297:	push   0x68bf800
1002a29c:	push   0x100715e8
1002a2a1:	call   0x10003d63
1002a2a6:	push   0x4e8c27ee
1002a2ab:	push   eax
1002a2ac:	call   0x10003d63
1002a2b1:	push   eax
1002a2b2:	push   0x8
1002a2b4:	push   0x10070808
1002a2b9:	call   0x10003d75
1002a2be:	add    esp,0x1c
1002a2c1:	push   eax
1002a2c2:	lea    ecx,[esp+0x2c]
1002a2c6:	call   0x100011d6
1002a2cb:	mov    edi,DWORD PTR [esp+0x18]
1002a2cf:	lea    eax,[esp+0x28]
1002a2d3:	push   eax
1002a2d4:	mov    BYTE PTR [esp+0x124],0x6
1002a2dc:	mov    eax,DWORD PTR [edi+0x8]
1002a2df:	add    eax,0x20
1002a2e2:	push   eax
1002a2e3:	call   0x10007dad
1002a2e8:	xor    esi,esi
1002a2ea:	push   ebx
1002a2eb:	inc    esi
1002a2ec:	push   esi
1002a2ed:	lea    ecx,[esp+0x30]
1002a2f1:	mov    BYTE PTR [esp+0x128],0x5
1002a2f9:	call   0x100012f9
1002a2fe:	push   0x10071628
1002a303:	push   0x7
1002a305:	push   0x10071660
1002a30a:	call   0x10003d75
1002a30f:	add    esp,0xc
1002a312:	push   eax
1002a313:	lea    ecx,[esp+0x2c]
1002a317:	call   0x100011d6
1002a31c:	mov    BYTE PTR [esp+0x120],0x7
1002a324:	mov    edx,DWORD PTR [edi+0x8]
1002a327:	push   ebx
1002a328:	lea    eax,[esp+0x2c]
1002a32c:	push   eax
1002a32d:	add    edx,0x20
1002a330:	lea    ecx,[esp+0xdc]
1002a337:	call   0x10007aa4
1002a33c:	push   ebx
1002a33d:	push   esi
1002a33e:	lea    ecx,[esp+0x30]
1002a342:	call   0x100012f9
1002a347:	push   ebx
1002a348:	push   esi
1002a349:	lea    ecx,[esp+0xdc]
1002a350:	mov    BYTE PTR [esp+0x128],0x4
1002a358:	call   0x100012f9
1002a35d:	jmp    0x1002a362
1002a35f:	xor    esi,esi
1002a361:	inc    esi
1002a362:	push   0x34
1002a364:	call   0x1004239e
1002a369:	pop    ecx
1002a36a:	mov    DWORD PTR [esp+0x14],eax
1002a36e:	cmp    eax,ebx
1002a370:	mov    BYTE PTR [esp+0x120],0x8
1002a378:	je     0x1002a3c8
1002a37a:	push   0x33c2edde
1002a37f:	push   0x10071668
1002a384:	mov    DWORD PTR [esp+0x24],ebx
1002a388:	mov    DWORD PTR [esp+0x28],ebx
1002a38c:	mov    DWORD PTR [esp+0x2c],esi
1002a390:	call   0x10003d63
1002a395:	push   0x604004e8
1002a39a:	push   eax
1002a39b:	call   0x10003d63
1002a3a0:	add    esp,0x10
1002a3a3:	lea    ecx,[esp+0x1c]
1002a3a7:	push   ecx
1002a3a8:	push   eax
1002a3a9:	push   0xd
1002a3ab:	push   0x100716a8
1002a3b0:	call   0x10003d75
1002a3b5:	add    esp,0xc
1002a3b8:	push   eax
1002a3b9:	push   DWORD PTR [esp+0x1c]
1002a3bd:	call   0x1002a067
1002a3c2:	mov    DWORD PTR [esp+0x14],eax
1002a3c6:	jmp    0x1002a3cc
1002a3c8:	mov    DWORD PTR [esp+0x14],ebx
1002a3cc:	mov    edi,DWORD PTR [esp+0x14]
1002a3d0:	mov    DWORD PTR [esp+0x44],edi
1002a3d4:	mov    BYTE PTR [esp+0x120],0x9
1002a3dc:	cmp    DWORD PTR [esp+0xb4],0x10
1002a3e4:	mov    eax,DWORD PTR [esp+0xa0]
1002a3eb:	jae    0x1002a3f4
1002a3ed:	lea    eax,[esp+0xa0]
1002a3f4:	push   eax
1002a3f5:	mov    DWORD PTR [esp+0x20],eax
1002a3f9:	call   0x10041f10
1002a3fe:	pop    ecx
1002a3ff:	mov    DWORD PTR [esp+0x20],eax
1002a403:	lea    eax,[esp+0x1c]
1002a407:	push   eax
1002a408:	push   edi
1002a409:	call   0x10039020
1002a40e:	test   al,al
1002a410:	jne    0x1002a55c
1002a416:	xor    edi,edi
1002a418:	lea    eax,[esp+0x9c]
1002a41f:	call   0x1000473e
1002a424:	cmp    BYTE PTR [eax],0x2f
1002a427:	je     0x1002a447
1002a429:	push   0x100716b8
1002a42e:	call   0x10041f10
1002a433:	mov    ebx,eax
1002a435:	pop    ecx
1002a436:	lea    eax,[esp+0x9c]
1002a43d:	call   0x1002a679
1002a442:	xor    esi,esi
1002a444:	xor    ebx,ebx
1002a446:	inc    esi
1002a447:	push   0x57c16942
1002a44c:	push   0x100716bc
1002a451:	call   0x10003d63
1002a456:	push   0x6a5ec268
1002a45b:	push   eax
1002a45c:	call   0x10003d63
1002a461:	push   eax
1002a462:	push   0x4
1002a464:	push   0x1006c070
1002a469:	call   0x10003d75
1002a46e:	add    esp,0x1c
1002a471:	push   eax
1002a472:	lea    ecx,[esp+0x2c]
1002a476:	call   0x100011d6
1002a47b:	push   ebx
1002a47c:	lea    eax,[esp+0x2c]
1002a480:	push   eax
1002a481:	lea    eax,[esp+0x50]
1002a485:	push   eax
1002a486:	mov    eax,DWORD PTR [esp+0x24]
1002a48a:	mov    BYTE PTR [esp+0x12c],0xa
1002a492:	mov    eax,DWORD PTR [eax]
1002a494:	add    eax,0x18
1002a497:	call   0x1000800f
1002a49c:	mov    edi,eax
1002a49e:	push   0x100716e4
1002a4a3:	push   0x7
1002a4a5:	push   0x1006c028
1002a4aa:	mov    BYTE PTR [esp+0x12c],0xb
1002a4b2:	call   0x10003d75
1002a4b7:	add    esp,0xc
1002a4ba:	push   eax
1002a4bb:	lea    ecx,[esp+0x68]
1002a4bf:	call   0x100011d6
1002a4c4:	push   edi
1002a4c5:	push   eax
1002a4c6:	lea    eax,[esp+0x88]
1002a4cd:	push   eax
1002a4ce:	mov    BYTE PTR [esp+0x12c],0xc
1002a4d6:	call   0x1000a3d1
1002a4db:	add    esp,0xc
1002a4de:	lea    ecx,[esp+0x9c]
1002a4e5:	push   ecx
1002a4e6:	push   eax
1002a4e7:	lea    eax,[esp+0xdc]
1002a4ee:	push   eax
1002a4ef:	mov    BYTE PTR [esp+0x12c],0xd
1002a4f7:	call   0x1000a3d1
1002a4fc:	add    esp,0xc
1002a4ff:	push   0xffffffff
1002a501:	push   ebx
1002a502:	push   eax
1002a503:	lea    ecx,[esp+0xa8]
1002a50a:	mov    BYTE PTR [esp+0x12c],0xe
1002a512:	call   0x1000124a
1002a517:	push   ebx
1002a518:	push   esi
1002a519:	lea    ecx,[esp+0xdc]
1002a520:	call   0x100012f9
1002a525:	push   ebx
1002a526:	push   esi
1002a527:	lea    ecx,[esp+0x88]
1002a52e:	call   0x100012f9
1002a533:	push   ebx
1002a534:	push   esi
1002a535:	lea    ecx,[esp+0x6c]
1002a539:	call   0x100012f9
1002a53e:	push   ebx
1002a53f:	push   esi
1002a540:	lea    ecx,[esp+0x50]
1002a544:	call   0x100012f9
1002a549:	push   ebx
1002a54a:	push   esi
1002a54b:	lea    ecx,[esp+0x30]
1002a54f:	mov    BYTE PTR [esp+0x128],0x9
1002a557:	call   0x100012f9
1002a55c:	lea    eax,[esp+0x48]
1002a560:	push   eax
1002a561:	lea    eax,[esp+0xf4]
1002a568:	call   0x100194bf
1002a56d:	mov    BYTE PTR [esp+0x120],0xf
1002a575:	push   DWORD PTR [esp+0xf0]
1002a57c:	lea    ecx,[esp+0xa0]
1002a583:	push   ecx
1002a584:	mov    ebx,eax
1002a586:	mov    edi,0x1007fec8
1002a58b:	call   0x10019537
1002a590:	xor    esi,esi
1002a592:	xor    ebx,ebx
1002a594:	push   esi
1002a595:	inc    ebx
1002a596:	push   ebx
1002a597:	lea    ecx,[esp+0x50]
1002a59b:	mov    BYTE PTR [esp+0x128],0x9
1002a5a3:	call   0x100012f9
1002a5a8:	lea    eax,[esp+0x48]
1002a5ac:	push   eax
1002a5ad:	lea    eax,[esp+0xf4]
1002a5b4:	call   0x100194bf
1002a5b9:	cmp    DWORD PTR [esp+0xb4],0x10
1002a5c1:	mov    ecx,DWORD PTR [esp+0xa0]
1002a5c8:	jae    0x1002a5d1
1002a5ca:	lea    ecx,[esp+0xa0]
1002a5d1:	cmp    DWORD PTR [eax+0x18],0x10
1002a5d5:	jb     0x1002a5dc
1002a5d7:	mov    eax,DWORD PTR [eax+0x4]
1002a5da:	jmp    0x1002a5df
1002a5dc:	add    eax,0x4
1002a5df:	push   ecx
1002a5e0:	push   eax
1002a5e1:	call   0x1000207c
1002a5e6:	pop    ecx
1002a5e7:	pop    ecx
1002a5e8:	push   esi
1002a5e9:	push   ebx
1002a5ea:	lea    ecx,[esp+0x50]
1002a5ee:	call   0x100012f9
1002a5f3:	mov    eax,DWORD PTR [esp+0x18]
1002a5f7:	mov    BYTE PTR [esp+0x120],0x4
1002a5ff:	cmp    DWORD PTR [esp+0x14],esi
1002a603:	mov    BYTE PTR [eax+0x11],bl
1002a606:	je     0x1002a61b
1002a608:	push   DWORD PTR [esp+0x14]
1002a60c:	call   0x10038e30
1002a611:	push   DWORD PTR [esp+0x14]
1002a615:	call   0x10041d92
1002a61a:	pop    ecx
1002a61b:	push   esi
1002a61c:	push   ebx
1002a61d:	lea    ecx,[esp+0xfc]
1002a624:	call   0x100012f9
1002a629:	push   esi
1002a62a:	push   ebx
1002a62b:	lea    ecx,[esp+0xc0]
1002a632:	call   0x100012f9
1002a637:	mov    BYTE PTR [esp+0x13],bl
1002a63b:	xor    ebx,ebx
1002a63d:	push   ebx
1002a63e:	push   0x1
1002a640:	lea    ecx,[esp+0xa4]
1002a647:	call   0x100012f9
1002a64c:	mov    al,BYTE PTR [esp+0x13]
1002a650:	jmp    0x1002a10e
1002a655:	push   ebx
1002a656:	push   0x1
1002a658:	lea    ecx,[esp+0xfc]
1002a65f:	call   0x100012f9
1002a664:	push   ebx
1002a665:	push   0x1
1002a667:	lea    ecx,[esp+0xc0]
1002a66e:	call   0x100012f9
1002a673:	mov    BYTE PTR [esp+0x13],bl
1002a677:	jmp    0x1002a63d
1002a679:	push   ebp
1002a67a:	mov    ebp,esp
1002a67c:	push   ecx
1002a67d:	push   esi
1002a67e:	push   edi
1002a67f:	mov    esi,eax
1002a681:	mov    edi,0x100716b8
1002a686:	push   edi
1002a687:	mov    ecx,esi
1002a689:	call   0x100015eb
1002a68e:	test   al,al
1002a690:	je     0x1002a6ad
1002a692:	cmp    DWORD PTR [esi+0x18],0x10
1002a696:	jb     0x1002a69d
1002a698:	mov    eax,DWORD PTR [esi+0x4]
1002a69b:	jmp    0x1002a6a0
1002a69d:	lea    eax,[esi+0x4]
1002a6a0:	sub    edi,eax
1002a6a2:	push   ebx
1002a6a3:	push   edi
1002a6a4:	mov    eax,esi
1002a6a6:	call   0x1002a72e
1002a6ab:	jmp    0x1002a72a
1002a6ad:	or     eax,0xffffffff
1002a6b0:	sub    eax,DWORD PTR [esi+0x14]
1002a6b3:	cmp    eax,ebx
1002a6b5:	ja     0x1002a6bc
1002a6b7:	call   0x1005600a
1002a6bc:	test   ebx,ebx
1002a6be:	jbe    0x1002a728
1002a6c0:	mov    eax,DWORD PTR [esi+0x14]
1002a6c3:	add    eax,ebx
1002a6c5:	push   0x0
1002a6c7:	push   eax
1002a6c8:	mov    ecx,esi
1002a6ca:	mov    DWORD PTR [ebp-0x4],eax
1002a6cd:	call   0x10001441
1002a6d2:	test   al,al
1002a6d4:	je     0x1002a728
1002a6d6:	mov    eax,DWORD PTR [esi+0x18]
1002a6d9:	cmp    eax,0x10
1002a6dc:	lea    edi,[esi+0x4]
1002a6df:	jb     0x1002a6e5
1002a6e1:	mov    edx,DWORD PTR [edi]
1002a6e3:	jmp    0x1002a6e7
1002a6e5:	mov    edx,edi
1002a6e7:	cmp    eax,0x10
1002a6ea:	jb     0x1002a6f0
1002a6ec:	mov    ecx,DWORD PTR [edi]
1002a6ee:	jmp    0x1002a6f2
1002a6f0:	mov    ecx,edi
1002a6f2:	push   DWORD PTR [esi+0x14]
1002a6f5:	sub    eax,ebx
1002a6f7:	push   edx
1002a6f8:	push   eax
1002a6f9:	add    ecx,ebx
1002a6fb:	push   ecx
1002a6fc:	call   0x10001049
1002a701:	mov    eax,DWORD PTR [esi+0x18]
1002a704:	add    esp,0x10
1002a707:	cmp    eax,0x10
1002a70a:	jb     0x1002a70e
1002a70c:	mov    edi,DWORD PTR [edi]
1002a70e:	push   ebx
1002a70f:	push   0x100716b8
1002a714:	push   eax
1002a715:	push   edi
1002a716:	call   0x1000102d
1002a71b:	add    esp,0x10
1002a71e:	push   DWORD PTR [ebp-0x4]
1002a721:	mov    ecx,esi
1002a723:	call   0x10001425
1002a728:	mov    eax,esi
1002a72a:	pop    edi
1002a72b:	pop    esi
1002a72c:	leave  
1002a72d:	ret    
1002a72e:	push   ebp
1002a72f:	mov    ebp,esp
1002a731:	push   ecx
1002a732:	push   ebx
1002a733:	push   edi
1002a734:	mov    edi,DWORD PTR [ebp+0x8]
1002a737:	mov    ebx,eax
1002a739:	cmp    DWORD PTR [ebx+0x14],edi
1002a73c:	jae    0x1002a743
1002a73e:	call   0x10056049
1002a743:	mov    eax,DWORD PTR [ebx+0x14]
1002a746:	sub    eax,edi
1002a748:	cmp    eax,DWORD PTR [ebp+0xc]
1002a74b:	jae    0x1002a750
1002a74d:	mov    DWORD PTR [ebp+0xc],eax
1002a750:	or     eax,0xffffffff
1002a753:	sub    eax,DWORD PTR [esi+0x14]
1002a756:	cmp    eax,DWORD PTR [ebp+0xc]
1002a759:	ja     0x1002a760
1002a75b:	call   0x1005600a
1002a760:	cmp    DWORD PTR [ebp+0xc],0x0
1002a764:	jbe    0x1002a81f
1002a76a:	mov    eax,DWORD PTR [esi+0x14]
1002a76d:	add    eax,DWORD PTR [ebp+0xc]
1002a770:	push   0x0
1002a772:	push   eax
1002a773:	mov    ecx,esi
1002a775:	mov    DWORD PTR [ebp-0x4],eax
1002a778:	call   0x10001441
1002a77d:	test   al,al
1002a77f:	je     0x1002a81f
1002a785:	mov    eax,DWORD PTR [esi+0x18]
1002a788:	cmp    eax,0x10
1002a78b:	lea    edi,[esi+0x4]
1002a78e:	jb     0x1002a794
1002a790:	mov    edx,DWORD PTR [edi]
1002a792:	jmp    0x1002a796
1002a794:	mov    edx,edi
1002a796:	cmp    eax,0x10
1002a799:	jb     0x1002a79f
1002a79b:	mov    ecx,DWORD PTR [edi]
1002a79d:	jmp    0x1002a7a1
1002a79f:	mov    ecx,edi
1002a7a1:	push   DWORD PTR [esi+0x14]
1002a7a4:	push   edx
1002a7a5:	mov    edx,DWORD PTR [ebp+0xc]
1002a7a8:	sub    eax,edx
1002a7aa:	push   eax
1002a7ab:	add    ecx,edx
1002a7ad:	push   ecx
1002a7ae:	call   0x10001049
1002a7b3:	add    esp,0x10
1002a7b6:	cmp    esi,ebx
1002a7b8:	jne    0x1002a7ea
1002a7ba:	mov    ecx,DWORD PTR [ebp+0x8]
1002a7bd:	test   ecx,ecx
1002a7bf:	jbe    0x1002a7c6
1002a7c1:	mov    eax,DWORD PTR [ebp+0xc]
1002a7c4:	add    ecx,eax
1002a7c6:	mov    edx,DWORD PTR [esi+0x18]
1002a7c9:	cmp    edx,0x10
1002a7cc:	jb     0x1002a7d2
1002a7ce:	mov    eax,DWORD PTR [edi]
1002a7d0:	jmp    0x1002a7d4
1002a7d2:	mov    eax,edi
1002a7d4:	cmp    edx,0x10
1002a7d7:	jb     0x1002a7db
1002a7d9:	mov    edi,DWORD PTR [edi]
1002a7db:	push   DWORD PTR [ebp+0xc]
1002a7de:	add    eax,ecx
1002a7e0:	push   eax
1002a7e1:	push   edx
1002a7e2:	push   edi
1002a7e3:	call   0x10001049
1002a7e8:	jmp    0x1002a812
1002a7ea:	cmp    DWORD PTR [ebx+0x18],0x10
1002a7ee:	jb     0x1002a7f5
1002a7f0:	mov    ebx,DWORD PTR [ebx+0x4]
1002a7f3:	jmp    0x1002a7f8
1002a7f5:	add    ebx,0x4
1002a7f8:	mov    eax,DWORD PTR [esi+0x18]
1002a7fb:	cmp    eax,0x10
1002a7fe:	jb     0x1002a802
1002a800:	mov    edi,DWORD PTR [edi]
1002a802:	push   DWORD PTR [ebp+0xc]
1002a805:	mov    ecx,DWORD PTR [ebp+0x8]
1002a808:	add    ebx,ecx
1002a80a:	push   ebx
1002a80b:	push   eax
1002a80c:	push   edi
1002a80d:	call   0x1000102d
1002a812:	add    esp,0x10
1002a815:	push   DWORD PTR [ebp-0x4]
1002a818:	mov    ecx,esi
1002a81a:	call   0x10001425
1002a81f:	pop    edi
1002a820:	mov    eax,esi
1002a822:	pop    ebx
1002a823:	leave  
1002a824:	ret    0x8
1002a827:	push   ebp
1002a828:	sub    esp,0x70
1002a82b:	lea    ebp,[esp-0x4]
1002a82f:	mov    eax,ds:0x1007d030
1002a834:	xor    eax,ebp
1002a836:	mov    DWORD PTR [ebp+0x70],eax
1002a839:	push   0x68
1002a83b:	mov    eax,0x10061fcb
1002a840:	call   0x10058878
1002a845:	mov    esi,DWORD PTR [ebp+0x7c]
1002a848:	mov    eax,DWORD PTR [esi]
1002a84a:	xor    ebx,ebx
1002a84c:	cmp    BYTE PTR [eax+0x2c],bl
1002a84f:	mov    DWORD PTR [ebp-0x2c],esi
1002a852:	jne    0x1002aabe
1002a858:	push   0x40a8ea2a
1002a85d:	push   0x1007170c
1002a862:	call   0x10003d63
1002a867:	push   eax
1002a868:	push   0x8
1002a86a:	push   0x10070808
1002a86f:	call   0x10003d75
1002a874:	add    esp,0x14
1002a877:	push   eax
1002a878:	lea    ecx,[ebp-0x58]
1002a87b:	call   0x100011d6
1002a880:	push   ebx
1002a881:	lea    eax,[ebp-0x58]
1002a884:	push   eax
1002a885:	lea    eax,[ebp+0x54]
1002a888:	push   eax
1002a889:	mov    DWORD PTR [ebp-0x4],ebx
1002a88c:	mov    eax,DWORD PTR [esi+0x4]
1002a88f:	add    eax,0x20
1002a892:	call   0x1000800f
1002a897:	xor    edi,edi
1002a899:	push   ebx
1002a89a:	inc    edi
1002a89b:	push   edi
1002a89c:	lea    ecx,[ebp-0x58]
1002a89f:	mov    BYTE PTR [ebp-0x4],0x2
1002a8a3:	call   0x100012f9
1002a8a8:	push   0x1006bb18
1002a8ad:	lea    esi,[ebp+0x54]
1002a8b0:	call   0x10005e33
1002a8b5:	test   al,al
1002a8b7:	pop    ecx
1002a8b8:	je     0x1002a8c1
1002a8ba:	push   ebx
1002a8bb:	push   edi
1002a8bc:	jmp    0x1002aab6
1002a8c1:	push   0x1007174c
1002a8c6:	push   0x5
1002a8c8:	push   0x10071788
1002a8cd:	call   0x10003d75
1002a8d2:	mov    esi,eax
1002a8d4:	push   esi
1002a8d5:	call   0x10041f10
1002a8da:	add    esp,0x10
1002a8dd:	push   eax
1002a8de:	push   esi
1002a8df:	lea    eax,[ebp+0x54]
1002a8e2:	call   0x1002aadf
1002a8e7:	cmp    eax,0xffffffff
1002a8ea:	je     0x1002a8ba
1002a8ec:	add    eax,0x5
1002a8ef:	push   0xffffffff
1002a8f1:	push   eax
1002a8f2:	lea    eax,[ebp+0x54]
1002a8f5:	push   eax
1002a8f6:	lea    eax,[ebp+0x1c]
1002a8f9:	call   0x1000c42b
1002a8fe:	lea    eax,[ebp-0x14]
1002a901:	push   eax
1002a902:	lea    eax,[ebp+0x1c]
1002a905:	push   eax
1002a906:	lea    eax,[ebp-0x1c]
1002a909:	mov    BYTE PTR [ebp-0x4],0x3
1002a90d:	push   eax
1002a90e:	mov    DWORD PTR [ebp-0x14],ebx
1002a911:	call   0x10038a70
1002a916:	mov    ecx,DWORD PTR [eax]
1002a918:	mov    esi,ecx
1002a91a:	mov    DWORD PTR [ebp-0x24],esi
1002a91d:	mov    DWORD PTR [eax],ebx
1002a91f:	mov    DWORD PTR [ebp-0x3c],esi
1002a922:	mov    BYTE PTR [ebp-0x4],0x4
1002a926:	push   DWORD PTR [ebp-0x1c]
1002a929:	call   0x10041d92
1002a92e:	add    esp,0x10
1002a931:	cmp    esi,ebx
1002a933:	push   ebx
1002a934:	jne    0x1002a94b
1002a936:	call   0x10041d92
1002a93b:	pop    ecx
1002a93c:	push   ebx
1002a93d:	push   edi
1002a93e:	lea    ecx,[ebp+0x1c]
1002a941:	call   0x100012f9
1002a946:	jmp    0x1002a8ba
1002a94b:	push   DWORD PTR ds:0x1007fd9c
1002a951:	lea    eax,[ebp-0x20]
1002a954:	push   DWORD PTR [ebp-0x14]
1002a957:	lea    edx,[ebp-0x15]
1002a95a:	push   esi
1002a95b:	push   eax
1002a95c:	lea    ecx,[ebp-0x28]
1002a95f:	mov    DWORD PTR [ebp-0x28],ebx
1002a962:	call   0x10038630
1002a967:	mov    ecx,DWORD PTR [eax]
1002a969:	mov    edi,ecx
1002a96b:	mov    DWORD PTR [ebp-0x14],edi
1002a96e:	mov    DWORD PTR [eax],ebx
1002a970:	mov    DWORD PTR [ebp-0x1c],edi
1002a973:	mov    BYTE PTR [ebp-0x4],0x5
1002a977:	push   DWORD PTR [ebp-0x20]
1002a97a:	call   0x10041d92
1002a97f:	add    esp,0x18
1002a982:	cmp    edi,ebx
1002a984:	jne    0x1002a9a5
1002a986:	push   ebx
1002a987:	call   0x10041d92
1002a98c:	push   esi
1002a98d:	call   0x10041d92
1002a992:	pop    ecx
1002a993:	pop    ecx
1002a994:	push   ebx
1002a995:	push   0x1
1002a997:	lea    ecx,[ebp+0x1c]
1002a99a:	call   0x100012f9
1002a99f:	push   ebx
1002a9a0:	jmp    0x1002aab4
1002a9a5:	mov    BYTE PTR [ebp-0x4],0x6
1002a9a9:	mov    eax,DWORD PTR [ebp-0x28]
1002a9ac:	mov    DWORD PTR [ebp-0x30],edi
1002a9af:	lea    edi,[ebp+0x38]
1002a9b2:	lea    esi,[ebp-0x38]
1002a9b5:	mov    DWORD PTR [ebp-0x38],ebx
1002a9b8:	mov    DWORD PTR [ebp-0x34],eax
1002a9bb:	call   0x10037270
1002a9c0:	lea    edi,[ebp+0x0]
1002a9c3:	mov    BYTE PTR [ebp-0x4],0x7
1002a9c7:	call   0x10037270
1002a9cc:	push   0x1
1002a9ce:	lea    eax,[ebp+0x38]
1002a9d1:	mov    ebx,edi
1002a9d3:	push   eax
1002a9d4:	mov    edi,0x1007fec8
1002a9d9:	mov    BYTE PTR [ebp-0x4],0x8
1002a9dd:	call   0x10019537
1002a9e2:	push   0x10071790
1002a9e7:	push   0x8
1002a9e9:	push   0x10070808
1002a9ee:	call   0x10003d75
1002a9f3:	add    esp,0xc
1002a9f6:	push   eax
1002a9f7:	lea    ecx,[ebp-0x74]
1002a9fa:	call   0x100011d6
1002a9ff:	lea    eax,[ebp-0x74]
1002aa02:	push   eax
1002aa03:	mov    eax,DWORD PTR [ebp-0x2c]
1002aa06:	mov    BYTE PTR [ebp-0x4],0x9
1002aa0a:	mov    edx,DWORD PTR [eax+0x8]
1002aa0d:	add    edx,0x20
1002aa10:	lea    ecx,[ebp+0x38]
1002aa13:	call   0x10007ef8
1002aa18:	xor    esi,esi
1002aa1a:	xor    ebx,ebx
1002aa1c:	push   esi
1002aa1d:	inc    ebx
1002aa1e:	push   ebx
1002aa1f:	lea    ecx,[ebp-0x74]
1002aa22:	call   0x100012f9
1002aa27:	cmp    DWORD PTR [ebp+0x18],0x10
1002aa2b:	mov    ecx,DWORD PTR [ebp+0x4]
1002aa2e:	jae    0x1002aa33
1002aa30:	lea    ecx,[ebp+0x4]
1002aa33:	cmp    DWORD PTR [ebp+0x50],0x10
1002aa37:	mov    eax,DWORD PTR [ebp+0x3c]
1002aa3a:	jae    0x1002aa3f
1002aa3c:	lea    eax,[ebp+0x3c]
1002aa3f:	push   ecx
1002aa40:	push   eax
1002aa41:	call   0x1000207c
1002aa46:	pop    ecx
1002aa47:	pop    ecx
1002aa48:	push   esi
1002aa49:	push   ebx
1002aa4a:	lea    ecx,[ebp+0x0]
1002aa4d:	call   0x100012f9
1002aa52:	push   esi
1002aa53:	push   ebx
1002aa54:	lea    ecx,[ebp+0x38]
1002aa57:	call   0x100012f9
1002aa5c:	push   DWORD PTR [ebp-0x14]
1002aa5f:	call   0x10041d92
1002aa64:	push   DWORD PTR [ebp-0x24]
1002aa67:	call   0x10041d92
1002aa6c:	pop    ecx
1002aa6d:	pop    ecx
1002aa6e:	push   esi
1002aa6f:	push   ebx
1002aa70:	lea    ecx,[ebp+0x1c]
1002aa73:	call   0x100012f9
1002aa78:	push   esi
1002aa79:	push   ebx
1002aa7a:	lea    ecx,[ebp+0x54]
1002aa7d:	call   0x100012f9
1002aa82:	mov    al,bl
1002aa84:	jmp    0x1002aac0
1002aa86:	push   0x5
1002aa88:	call   0x10037620
1002aa8d:	pop    ecx
1002aa8e:	mov    eax,0x1002aa94
1002aa93:	ret    
1002aa94:	push   DWORD PTR [ebp-0x14]
1002aa97:	call   0x10041d92
1002aa9c:	push   DWORD PTR [ebp-0x24]
1002aa9f:	call   0x10041d92
1002aaa4:	pop    ecx
1002aaa5:	pop    ecx
1002aaa6:	push   0x0
1002aaa8:	push   0x1
1002aaaa:	lea    ecx,[ebp+0x1c]
1002aaad:	call   0x100012f9
1002aab2:	push   0x0
1002aab4:	push   0x1
1002aab6:	lea    ecx,[ebp+0x54]
1002aab9:	call   0x100012f9
1002aabe:	xor    al,al
1002aac0:	mov    ecx,DWORD PTR [ebp-0xc]
1002aac3:	mov    DWORD PTR fs:0x0,ecx
1002aaca:	pop    ecx
1002aacb:	pop    edi
1002aacc:	pop    esi
1002aacd:	pop    ebx
1002aace:	mov    ecx,DWORD PTR [ebp+0x70]
1002aad1:	xor    ecx,ebp
1002aad3:	call   0x10041d97
1002aad8:	add    ebp,0x74
1002aadb:	leave  
1002aadc:	ret    0x4
1002aadf:	push   ebp
1002aae0:	mov    ebp,esp
1002aae2:	cmp    DWORD PTR [ebp+0xc],0x0
1002aae6:	push   esi
1002aae7:	mov    esi,eax
1002aae9:	jne    0x1002aaf9
1002aaeb:	mov    esi,DWORD PTR [esi+0x14]
1002aaee:	or     eax,0xffffffff
1002aaf1:	cmp    esi,eax
1002aaf3:	ja     0x1002ab61
1002aaf5:	mov    eax,esi
1002aaf7:	jmp    0x1002ab61
1002aaf9:	mov    eax,DWORD PTR [esi+0x14]
1002aafc:	cmp    DWORD PTR [ebp+0xc],eax
1002aaff:	push   ebx
1002ab00:	push   edi
1002ab01:	ja     0x1002ab5c
1002ab03:	sub    eax,DWORD PTR [ebp+0xc]
1002ab06:	or     ecx,0xffffffff
1002ab09:	cmp    eax,ecx
1002ab0b:	ja     0x1002ab0f
1002ab0d:	mov    ecx,eax
1002ab0f:	cmp    DWORD PTR [esi+0x18],0x10
1002ab13:	lea    edi,[esi+0x4]
1002ab16:	jb     0x1002ab1c
1002ab18:	mov    eax,DWORD PTR [edi]
1002ab1a:	jmp    0x1002ab1e
1002ab1c:	mov    eax,edi
1002ab1e:	lea    ebx,[eax+ecx*1]
1002ab21:	mov    cl,BYTE PTR [ebx]
1002ab23:	mov    eax,DWORD PTR [ebp+0x8]
1002ab26:	cmp    cl,BYTE PTR [eax]
1002ab28:	jne    0x1002ab3b
1002ab2a:	push   DWORD PTR [ebp+0xc]
1002ab2d:	push   eax
1002ab2e:	push   ebx
1002ab2f:	call   0x1004260e
1002ab34:	add    esp,0xc
1002ab37:	test   eax,eax
1002ab39:	je     0x1002ab4e
1002ab3b:	cmp    DWORD PTR [esi+0x18],0x10
1002ab3f:	jb     0x1002ab45
1002ab41:	mov    eax,DWORD PTR [edi]
1002ab43:	jmp    0x1002ab47
1002ab45:	mov    eax,edi
1002ab47:	cmp    ebx,eax
1002ab49:	je     0x1002ab5c
1002ab4b:	dec    ebx
1002ab4c:	jmp    0x1002ab21
1002ab4e:	cmp    DWORD PTR [esi+0x18],0x10
1002ab52:	jb     0x1002ab56
1002ab54:	mov    edi,DWORD PTR [edi]
1002ab56:	mov    eax,ebx
1002ab58:	sub    eax,edi
1002ab5a:	jmp    0x1002ab5f
1002ab5c:	or     eax,0xffffffff
1002ab5f:	pop    edi
1002ab60:	pop    ebx
1002ab61:	pop    esi
1002ab62:	pop    ebp
1002ab63:	ret    0x8
1002ab66:	push   0x10
1002ab68:	push   DWORD PTR [esp+0xc]
1002ab6c:	push   DWORD PTR [esp+0xc]
1002ab70:	call   0x1004260e
1002ab75:	add    esp,0xc
1002ab78:	neg    eax
1002ab7a:	sbb    eax,eax
1002ab7c:	inc    eax
1002ab7d:	ret    
1002ab7e:	mov    eax,DWORD PTR [esi]
1002ab80:	test   eax,eax
1002ab82:	je     0x1002ab94
1002ab84:	push   eax
1002ab85:	call   DWORD PTR ds:0x100652a0
1002ab8b:	push   eax
1002ab8c:	push   DWORD PTR [esi]
1002ab8e:	call   DWORD PTR ds:0x100652a8
1002ab94:	mov    DWORD PTR [edi],eax
1002ab96:	cmp    DWORD PTR [esi],0x0
1002ab99:	je     0x1002aba9
1002ab9b:	test   eax,eax
1002ab9d:	jne    0x1002aba9
1002ab9f:	push   0x8007000e
1002aba4:	call   0x10001f41
1002aba9:	mov    eax,edi
1002abab:	ret    
1002abac:	push   DWORD PTR [esp+0x4]
1002abb0:	push   esi
1002abb1:	call   DWORD PTR ds:0x10065280
1002abb7:	test   eax,eax
1002abb9:	jge    0x1002abc9
1002abbb:	push   eax
1002abbc:	mov    WORD PTR [esi],0xa
1002abc1:	mov    DWORD PTR [esi+0x8],eax
1002abc4:	call   0x10001f41
1002abc9:	ret    0x4
1002abcc:	push   0x14
1002abce:	mov    eax,0x1005e561
1002abd3:	call   0x10058845
1002abd8:	mov    esi,ecx
1002abda:	cmp    WORD PTR [esi],0x9
1002abde:	jne    0x1002abf4
1002abe0:	cmp    DWORD PTR [esi+0x8],0x0
1002abe4:	je     0x1002abef
1002abe6:	mov    eax,DWORD PTR [esi+0x8]
1002abe9:	mov    ecx,DWORD PTR [eax]
1002abeb:	push   eax
1002abec:	call   DWORD PTR [ecx+0x4]
1002abef:	mov    eax,DWORD PTR [esi+0x8]
1002abf2:	jmp    0x1002ac2c
1002abf4:	lea    eax,[ebp-0x20]
1002abf7:	push   eax
1002abf8:	call   DWORD PTR ds:0x1006528c
1002abfe:	and    DWORD PTR [ebp-0x4],0x0
1002ac02:	mov    ecx,esi
1002ac04:	mov    dx,0x9
1002ac08:	lea    eax,[ebp-0x20]
1002ac0b:	call   0x1002204f
1002ac10:	mov    eax,DWORD PTR [ebp-0x18]
1002ac13:	test   eax,eax
1002ac15:	je     0x1002ac1d
1002ac17:	mov    ecx,DWORD PTR [eax]
1002ac19:	push   eax
1002ac1a:	call   DWORD PTR [ecx+0x4]
1002ac1d:	mov    esi,DWORD PTR [ebp-0x18]
1002ac20:	lea    eax,[ebp-0x20]
1002ac23:	push   eax
1002ac24:	call   DWORD PTR ds:0x10065294
1002ac2a:	mov    eax,esi
1002ac2c:	call   0x1005891d
1002ac31:	ret    
1002ac32:	mov    eax,DWORD PTR [esp+0x4]
1002ac36:	add    eax,0x4
1002ac39:	push   eax
1002ac3a:	call   DWORD PTR ds:0x100650a4
1002ac40:	ret    0x4
1002ac43:	push   esi
1002ac44:	mov    esi,DWORD PTR [esp+0x8]
1002ac48:	push   edi
1002ac49:	lea    eax,[esi+0x4]
1002ac4c:	push   eax
1002ac4d:	call   DWORD PTR ds:0x100650ac
1002ac53:	mov    edi,eax
1002ac55:	test   edi,edi
1002ac57:	jne    0x1002ac60
1002ac59:	push   esi
1002ac5a:	call   0x10041d92
1002ac5f:	pop    ecx
1002ac60:	mov    eax,edi
1002ac62:	pop    edi
1002ac63:	pop    esi
1002ac64:	ret    0x4
1002ac67:	mov    DWORD PTR [ecx],0x100705a0
1002ac6d:	ret    
1002ac6e:	push   DWORD PTR [esp+0xc]
1002ac72:	mov    edx,DWORD PTR [esp+0xc]
1002ac76:	mov    eax,DWORD PTR [esp+0x8]
1002ac7a:	mov    ecx,DWORD PTR [eax]
1002ac7c:	inc    edx
1002ac7d:	push   edx
1002ac7e:	push   eax
1002ac7f:	call   DWORD PTR [ecx+0x28]
1002ac82:	ret    0xc
1002ac85:	push   0xc
1002ac87:	mov    eax,0x1005ee63
1002ac8c:	call   0x100588ae
1002ac91:	mov    esi,ecx
1002ac93:	and    DWORD PTR [ebp-0x4],0x0
1002ac97:	call   DWORD PTR ds:0x1007dfe4
1002ac9d:	cmp    DWORD PTR [esi+0x18],0x10
1002aca1:	mov    ebx,eax
1002aca3:	jb     0x1002acaa
1002aca5:	mov    esi,DWORD PTR [esi+0x4]
1002aca8:	jmp    0x1002acad
1002acaa:	add    esi,0x4
1002acad:	test   esi,esi
1002acaf:	je     0x1002acc3
1002acb1:	push   esi
1002acb2:	call   DWORD PTR ds:0x100650d4
1002acb8:	mov    edi,eax
1002acba:	inc    edi
1002acbb:	cmp    edi,0x3fffffff
1002acc1:	jle    0x1002acc7
1002acc3:	xor    eax,eax
1002acc5:	jmp    0x1002acdb
1002acc7:	lea    eax,[edi+edi*1]
1002acca:	call   0x10049010
1002accf:	mov    eax,esp
1002acd1:	push   ebx
1002acd2:	push   edi
1002acd3:	push   esi
1002acd4:	mov    esi,eax
1002acd6:	call   0x1000674c
1002acdb:	push   eax
1002acdc:	lea    esi,[ebp-0x18]
1002acdf:	call   0x1001b132
1002ace4:	mov    esi,eax
1002ace6:	lea    edi,[ebp-0x14]
1002ace9:	mov    BYTE PTR [ebp-0x4],0x1
1002aced:	call   0x1002ab7e
1002acf2:	mov    eax,edi
1002acf4:	push   eax
1002acf5:	mov    eax,DWORD PTR [ebp+0x8]
1002acf8:	add    eax,0x4
1002acfb:	push   eax
1002acfc:	mov    BYTE PTR [ebp-0x4],0x2
1002ad00:	call   0x1002d318
1002ad05:	lea    ecx,[ebp+0xc]
1002ad08:	cmp    eax,ecx
1002ad0a:	je     0x1002ad14
1002ad0c:	push   ecx
1002ad0d:	mov    esi,eax
1002ad0f:	call   0x1002abac
1002ad14:	push   DWORD PTR [ebp-0x14]
1002ad17:	mov    esi,DWORD PTR ds:0x100652b4
1002ad1d:	call   esi
1002ad1f:	push   DWORD PTR [ebp-0x18]
1002ad22:	call   esi
1002ad24:	lea    eax,[ebp+0xc]
1002ad27:	push   eax
1002ad28:	call   DWORD PTR ds:0x10065294
1002ad2e:	lea    esp,[ebp-0x28]
1002ad31:	call   0x10058931
1002ad36:	ret    0x14
1002ad39:	push   ebp
1002ad3a:	mov    ebp,esp
1002ad3c:	and    esp,0xfffffff8
1002ad3f:	push   0xffffffff
1002ad41:	push   0x1005f7eb
1002ad46:	mov    eax,fs:0x0
1002ad4c:	push   eax
1002ad4d:	sub    esp,0x30
1002ad50:	push   ebx
1002ad51:	push   esi
1002ad52:	push   edi
1002ad53:	mov    eax,ds:0x1007d030
1002ad58:	xor    eax,esp
1002ad5a:	push   eax
1002ad5b:	lea    eax,[esp+0x40]
1002ad5f:	mov    fs:0x0,eax
1002ad65:	xor    ebx,ebx
1002ad67:	cmp    DWORD PTR [ebp+0x1c],ebx
1002ad6a:	jne    0x1002ad86
1002ad6c:	mov    eax,0x80004003
1002ad71:	mov    ecx,DWORD PTR [esp+0x40]
1002ad75:	mov    DWORD PTR fs:0x0,ecx
1002ad7c:	pop    ecx
1002ad7d:	pop    edi
1002ad7e:	pop    esi
1002ad7f:	pop    ebx
1002ad80:	mov    esp,ebp
1002ad82:	pop    ebp
1002ad83:	ret    0x18
1002ad86:	lea    eax,[esp+0x2c]
1002ad8a:	push   eax
1002ad8b:	call   DWORD PTR ds:0x1006528c
1002ad91:	mov    DWORD PTR [esp+0x48],ebx
1002ad95:	cmp    WORD PTR [ebp+0xc],0x8
1002ad9a:	mov    esi,DWORD PTR ds:0x1006527c
1002ada0:	je     0x1002add4
1002ada2:	push   0x3
1002ada4:	push   ebx
1002ada5:	lea    eax,[ebp+0xc]
1002ada8:	push   eax
1002ada9:	lea    eax,[esp+0x38]
1002adad:	push   eax
1002adae:	call   esi
1002adb0:	test   eax,eax
1002adb2:	jl     0x1002add4
1002adb4:	push   DWORD PTR [ebp+0x1c]
1002adb7:	push   DWORD PTR [esp+0x38]
1002adbb:	push   DWORD PTR [ebp+0x8]
1002adbe:	call   0x1002d1d9
1002adc3:	mov    edi,eax
1002adc5:	lea    eax,[esp+0x2c]
1002adc9:	push   eax
1002adca:	call   DWORD PTR ds:0x10065294
1002add0:	mov    eax,edi
1002add2:	jmp    0x1002ad71
1002add4:	push   0x8
1002add6:	push   ebx
1002add7:	lea    eax,[ebp+0xc]
1002adda:	push   eax
1002addb:	lea    eax,[esp+0x38]
1002addf:	push   eax
1002ade0:	call   esi
1002ade2:	cmp    eax,ebx
1002ade4:	jl     0x1002adc3
1002ade6:	push   DWORD PTR [esp+0x34]
1002adea:	lea    esi,[esp+0x18]
1002adee:	call   0x1001b132
1002adf3:	mov    esi,eax
1002adf5:	lea    edi,[esp+0x10]
1002adf9:	mov    BYTE PTR [esp+0x48],0x1
1002adfe:	call   0x1002ab7e
1002ae03:	mov    esi,DWORD PTR [ebp+0x8]
1002ae06:	mov    eax,edi
1002ae08:	push   eax
1002ae09:	lea    eax,[esp+0x28]
1002ae0d:	push   eax
1002ae0e:	add    esi,0x4
1002ae11:	push   esi
1002ae12:	call   0x1002d419
1002ae17:	push   DWORD PTR [esp+0x10]
1002ae1b:	mov    edi,DWORD PTR ds:0x100652b4
1002ae21:	call   edi
1002ae23:	mov    BYTE PTR [esp+0x48],bl
1002ae27:	push   DWORD PTR [esp+0x14]
1002ae2b:	call   edi
1002ae2d:	mov    eax,DWORD PTR [esi+0x4]
1002ae30:	mov    DWORD PTR [esp+0x14],esi
1002ae34:	lea    edi,[esp+0x14]
1002ae38:	lea    esi,[esp+0x24]
1002ae3c:	mov    DWORD PTR [esp+0x18],eax
1002ae40:	call   0x100046f1
1002ae45:	test   al,al
1002ae47:	je     0x1002ae53
1002ae49:	mov    edi,0x80004005
1002ae4e:	jmp    0x1002adc5
1002ae53:	lea    esi,[esp+0x24]
1002ae57:	call   0x1002d480
1002ae5c:	add    eax,0x8
1002ae5f:	push   eax
1002ae60:	lea    esi,[esp+0x18]
1002ae64:	mov    WORD PTR [esp+0x18],bx
1002ae69:	call   0x1002abac
1002ae6e:	push   DWORD PTR [ebp+0x1c]
1002ae71:	mov    BYTE PTR [esp+0x4c],0x2
1002ae76:	mov    esi,DWORD PTR ds:0x10065294
1002ae7c:	call   esi
1002ae7e:	mov    edi,eax
1002ae80:	cmp    edi,ebx
1002ae82:	jl     0x1002aea5
1002ae84:	push   0x10
1002ae86:	lea    eax,[esp+0x18]
1002ae8a:	push   eax
1002ae8b:	push   0x10
1002ae8d:	push   DWORD PTR [ebp+0x1c]
1002ae90:	call   0x100422c5
1002ae95:	push   eax
1002ae96:	call   0x10001f59
1002ae9b:	add    esp,0x14
1002ae9e:	mov    WORD PTR [esp+0x14],bx
1002aea3:	xor    edi,edi
1002aea5:	lea    eax,[esp+0x14]
1002aea9:	push   eax
1002aeaa:	call   esi
1002aeac:	jmp    0x1002adc5
1002aeb1:	mov    eax,DWORD PTR [esp+0x4]
1002aeb5:	push   esi
1002aeb6:	mov    ecx,DWORD PTR [eax]
1002aeb8:	push   edi
1002aeb9:	push   DWORD PTR [esp+0x20]
1002aebd:	lea    esi,[esp+0x14]
1002aec1:	sub    esp,0x10
1002aec4:	mov    edi,esp
1002aec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002aec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002aec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002aec9:	push   eax
1002aeca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002aecb:	call   DWORD PTR [ecx+0x30]
1002aece:	pop    edi
1002aecf:	pop    esi
1002aed0:	ret    0x18
1002aed3:	push   ebp
1002aed4:	mov    ebp,esp
1002aed6:	and    esp,0xfffffff8
1002aed9:	sub    esp,0x14
1002aedc:	cmp    DWORD PTR [ebp+0x10],0x0
1002aee0:	push   ebx
1002aee1:	push   esi
1002aee2:	push   edi
1002aee3:	jne    0x1002aeef
1002aee5:	mov    eax,0x80004003
1002aeea:	jmp    0x1002af90
1002aeef:	cmp    DWORD PTR [ebp+0xc],0x1
1002aef3:	jge    0x1002aeff
1002aef5:	mov    eax,0x80070057
1002aefa:	jmp    0x1002af90
1002aeff:	mov    ebx,DWORD PTR [ebp+0x8]
1002af02:	dec    DWORD PTR [ebp+0xc]
1002af05:	mov    eax,DWORD PTR [ebx+0x8]
1002af08:	mov    eax,DWORD PTR [eax]
1002af0a:	add    ebx,0x4
1002af0d:	mov    DWORD PTR [esp+0xc],0x80004005
1002af15:	mov    DWORD PTR [esp+0x10],ebx
1002af19:	mov    DWORD PTR [esp+0x14],eax
1002af1d:	mov    DWORD PTR [esp+0x18],ebx
1002af21:	mov    eax,DWORD PTR [ebx+0x4]
1002af24:	lea    edi,[esp+0x18]
1002af28:	lea    esi,[esp+0x10]
1002af2c:	mov    DWORD PTR [esp+0x1c],eax
1002af30:	call   0x100046f1
1002af35:	test   al,al
1002af37:	jne    0x1002af49
1002af39:	cmp    DWORD PTR [ebp+0xc],0x0
1002af3d:	jle    0x1002af49
1002af3f:	call   0x1002da0c
1002af44:	dec    DWORD PTR [ebp+0xc]
1002af47:	jmp    0x1002af21
1002af49:	mov    eax,DWORD PTR [ebx+0x4]
1002af4c:	lea    edi,[esp+0x18]
1002af50:	lea    esi,[esp+0x10]
1002af54:	mov    DWORD PTR [esp+0x1c],eax
1002af58:	mov    DWORD PTR [esp+0x18],ebx
1002af5c:	call   0x100046f1
1002af61:	test   al,al
1002af63:	jne    0x1002af8c
1002af65:	call   0x1002d480
1002af6a:	mov    esi,eax
1002af6c:	mov    eax,DWORD PTR [esi]
1002af6e:	test   eax,eax
1002af70:	je     0x1002af82
1002af72:	push   eax
1002af73:	call   DWORD PTR ds:0x100652a0
1002af79:	push   eax
1002af7a:	push   DWORD PTR [esi]
1002af7c:	call   DWORD PTR ds:0x100652a8
1002af82:	mov    ecx,DWORD PTR [ebp+0x10]
1002af85:	and    DWORD PTR [esp+0xc],0x0
1002af8a:	mov    DWORD PTR [ecx],eax
1002af8c:	mov    eax,DWORD PTR [esp+0xc]
1002af90:	pop    edi
1002af91:	pop    esi
1002af92:	pop    ebx
1002af93:	mov    esp,ebp
1002af95:	pop    ebp
1002af96:	ret    0xc
1002af99:	push   DWORD PTR [eax]
1002af9b:	call   DWORD PTR ds:0x100652b4
1002afa1:	ret    
1002afa2:	mov    eax,DWORD PTR [esi]
1002afa4:	test   eax,eax
1002afa6:	je     0x1002afb5
1002afa8:	push   DWORD PTR [esi+0x4]
1002afab:	push   eax
1002afac:	call   DWORD PTR ds:0x1006516c
1002afb2:	and    DWORD PTR [esi],0x0
1002afb5:	ret    
1002afb6:	push   ebp
1002afb7:	sub    esp,0xc4
1002afbd:	lea    ebp,[esp-0x4]
1002afc1:	mov    eax,ds:0x1007d030
1002afc6:	xor    eax,ebp
1002afc8:	mov    DWORD PTR [ebp+0xc4],eax
1002afce:	push   0x184
1002afd3:	mov    eax,0x100636ed
1002afd8:	call   0x10058878
1002afdd:	mov    eax,DWORD PTR [ebp+0xd0]
1002afe3:	mov    ebx,ecx
1002afe5:	xor    edi,edi
1002afe7:	mov    DWORD PTR [ebp-0x14],ebx
1002afea:	mov    DWORD PTR [ebp-0x34],eax
1002afed:	mov    DWORD PTR [ebp-0x68],edi
1002aff0:	call   0x1000207c
1002aff5:	mov    ecx,0x1007fa54
1002affa:	lea    esi,[ebp-0x18]
1002affd:	mov    DWORD PTR [ebp-0x1c],edi
1002b000:	call   0x10002160
1002b005:	lea    eax,[ebp-0x64]
1002b008:	mov    DWORD PTR [ebp-0x4],edi
1002b00b:	push   eax
1002b00c:	mov    BYTE PTR [ebp-0x4],0x1
1002b010:	call   0x1002e653
1002b015:	test   eax,eax
1002b017:	jge    0x1002b030
1002b019:	push   ebx
1002b01a:	lea    edi,[ebp-0x1c]
1002b01d:	call   0x1002b8de
1002b022:	mov    esi,edi
1002b024:	call   0x1002b8c6
1002b029:	mov    eax,ebx
1002b02b:	jmp    0x1002b43e
1002b030:	call   0x1000207c
1002b035:	mov    eax,DWORD PTR [ebp-0x64]
1002b038:	cmp    eax,edi
1002b03a:	mov    DWORD PTR [ebp-0x20],eax
1002b03d:	je     0x1002b045
1002b03f:	mov    ecx,DWORD PTR [eax]
1002b041:	push   eax
1002b042:	call   DWORD PTR [ecx+0x4]
1002b045:	lea    ecx,[ebp+0xa8]
1002b04b:	mov    BYTE PTR [ebp-0x4],0x2
1002b04f:	call   0x10018131
1002b054:	cmp    BYTE PTR [ebp+0xd4],0x0
1002b05b:	mov    ecx,0x10071868
1002b060:	jne    0x1002b067
1002b062:	mov    ecx,0x10071870
1002b067:	cmp    DWORD PTR [ebp+0xc0],0x10
1002b06e:	mov    eax,DWORD PTR [ebp+0xac]
1002b074:	jae    0x1002b07c
1002b076:	lea    eax,[ebp+0xac]
1002b07c:	push   eax
1002b07d:	push   ecx
1002b07e:	call   0x1000207c
1002b083:	pop    ecx
1002b084:	pop    ecx
1002b085:	push   edi
1002b086:	lea    ecx,[ebp+0x8c]
1002b08c:	mov    DWORD PTR [ebp+0xa4],0xf
1002b096:	call   0x10001425
1002b09b:	lea    edi,[ebp-0x74]
1002b09e:	mov    ecx,0x1007feb8
1002b0a3:	mov    BYTE PTR [ebp-0x4],0x4
1002b0a7:	call   0x10019156
1002b0ac:	mov    BYTE PTR [ebp-0x4],0x5
1002b0b0:	mov    eax,DWORD PTR [ebp-0x70]
1002b0b3:	mov    edi,DWORD PTR [eax]
1002b0b5:	lea    ebx,[ebp-0x74]
1002b0b8:	mov    DWORD PTR [ebp-0x2c],edi
1002b0bb:	mov    DWORD PTR [ebp-0x30],ebx
1002b0be:	test   ebx,ebx
1002b0c0:	mov    esi,DWORD PTR [ebp-0x70]
1002b0c3:	je     0x1002b0cc
1002b0c5:	lea    eax,[ebp-0x74]
1002b0c8:	cmp    ebx,eax
1002b0ca:	je     0x1002b0d1
1002b0cc:	call   0x100422b0
1002b0d1:	cmp    edi,esi
1002b0d3:	je     0x1002b1b5
1002b0d9:	push   0x10071878
1002b0de:	lea    eax,[ebp+0x8c]
1002b0e4:	push   eax
1002b0e5:	call   0x10005e98
1002b0ea:	test   ebx,ebx
1002b0ec:	jne    0x1002b0f3
1002b0ee:	call   0x100422b0
1002b0f3:	cmp    edi,DWORD PTR [ebx+0x4]
1002b0f6:	jne    0x1002b0fd
1002b0f8:	call   0x100422b0
1002b0fd:	lea    eax,[edi+0x8]
1002b100:	push   eax
1002b101:	lea    esi,[ebp-0xb0]
1002b107:	mov    DWORD PTR [ebp-0x24],eax
1002b10a:	call   0x1002ffc0
1002b10f:	pop    ecx
1002b110:	mov    edx,eax
1002b112:	lea    ecx,[ebp+0x70]
1002b115:	mov    BYTE PTR [ebp-0x4],0x6
1002b119:	call   0x10033980
1002b11e:	push   0x0
1002b120:	push   0x1
1002b122:	mov    ecx,esi
1002b124:	mov    BYTE PTR [ebp-0x4],0x8
1002b128:	call   0x100012f9
1002b12d:	push   0x1006bb18
1002b132:	lea    esi,[ebp+0x70]
1002b135:	call   0x10005e33
1002b13a:	test   al,al
1002b13c:	pop    ecx
1002b13d:	jne    0x1002b151
1002b13f:	mov    eax,esi
1002b141:	push   eax
1002b142:	lea    ecx,[ebp+0x54]
1002b145:	call   0x10030bd0
1002b14a:	pop    ecx
1002b14b:	mov    BYTE PTR [ebp-0x4],0x9
1002b14f:	jmp    0x1002b16b
1002b151:	cmp    edi,DWORD PTR [ebx+0x4]
1002b154:	jne    0x1002b15b
1002b156:	call   0x100422b0
1002b15b:	push   DWORD PTR [ebp-0x24]
1002b15e:	lea    ecx,[ebp+0x54]
1002b161:	call   0x10030bd0
1002b166:	pop    ecx
1002b167:	mov    BYTE PTR [ebp-0x4],0xa
1002b16b:	cmp    DWORD PTR [eax+0x18],0x10
1002b16f:	jb     0x1002b176
1002b171:	mov    eax,DWORD PTR [eax+0x4]
1002b174:	jmp    0x1002b179
1002b176:	add    eax,0x4
1002b179:	push   eax
1002b17a:	lea    eax,[ebp+0x8c]
1002b180:	push   eax
1002b181:	call   0x10005e98
1002b186:	push   0x0
1002b188:	push   0x1
1002b18a:	lea    ecx,[ebp+0x54]
1002b18d:	call   0x100012f9
1002b192:	push   0x0
1002b194:	push   0x1
1002b196:	lea    ecx,[ebp+0x70]
1002b199:	mov    BYTE PTR [ebp-0x4],0x5
1002b19d:	call   0x100012f9
1002b1a2:	lea    esi,[ebp-0x30]
1002b1a5:	call   0x1002634d
1002b1aa:	mov    edi,DWORD PTR [ebp-0x2c]
1002b1ad:	mov    ebx,DWORD PTR [ebp-0x30]
1002b1b0:	jmp    0x1002b0be
1002b1b5:	push   0x1f4
1002b1ba:	push   DWORD PTR ds:0x1007fec4
1002b1c0:	call   DWORD PTR ds:0x10065084
1002b1c6:	test   eax,eax
1002b1c8:	jne    0x1002b1e0
1002b1ca:	mov    esi,0x1007feb8
1002b1cf:	call   0x10019267
1002b1d4:	push   DWORD PTR ds:0x1007fec4
1002b1da:	call   DWORD PTR ds:0x10065094
1002b1e0:	lea    esi,[ebp-0x74]
1002b1e3:	mov    BYTE PTR [ebp-0x4],0x4
1002b1e7:	call   0x10019267
1002b1ec:	push   DWORD PTR [ebp-0x70]
1002b1ef:	call   0x10041d92
1002b1f4:	pop    ecx
1002b1f5:	call   DWORD PTR ds:0x1007dfe4
1002b1fb:	mov    eax,DWORD PTR [ebp-0x34]
1002b1fe:	mov    eax,DWORD PTR [eax]
1002b200:	sub    eax,0x10
1002b203:	call   0x1000475e
1002b208:	add    eax,0x10
1002b20b:	mov    DWORD PTR [ebp-0x28],eax
1002b20e:	cmp    BYTE PTR [ebp+0xd4],0x0
1002b215:	mov    BYTE PTR [ebp-0x4],0xb
1002b219:	mov    ebx,0x1006baf8
1002b21e:	jne    0x1002b225
1002b220:	mov    ebx,0x1006bb1c
1002b225:	push   DWORD PTR ds:0x1007fd70
1002b22b:	lea    ecx,[ebp-0xb0]
1002b231:	call   0x100011d6
1002b236:	lea    ecx,[ebp-0x28]
1002b239:	lea    edi,[ebp-0x120]
1002b23f:	mov    BYTE PTR [ebp-0x4],0xc
1002b243:	call   0x100302e0
1002b248:	mov    esi,eax
1002b24a:	push   0x6100f57e
1002b24f:	push   0x100718b8
1002b254:	mov    BYTE PTR [ebp-0x4],0xd
1002b258:	call   0x10003d63
1002b25d:	pop    ecx
1002b25e:	pop    ecx
1002b25f:	push   eax
1002b260:	push   0x2
1002b262:	push   0x100718f8
1002b267:	call   0x10003d75
1002b26c:	add    esp,0xc
1002b26f:	push   eax
1002b270:	lea    ecx,[ebp-0x104]
1002b276:	call   0x100011d6
1002b27b:	push   esi
1002b27c:	push   eax
1002b27d:	lea    eax,[ebp-0x13c]
1002b283:	push   eax
1002b284:	mov    BYTE PTR [ebp-0x4],0xe
1002b288:	call   0x1000a3d1
1002b28d:	add    esp,0xc
1002b290:	mov    esi,eax
1002b292:	push   0x22db118c
1002b297:	push   0x10071880
1002b29c:	mov    BYTE PTR [ebp-0x4],0xf
1002b2a0:	call   0x10003d63
1002b2a5:	pop    ecx
1002b2a6:	pop    ecx
1002b2a7:	push   0xfd83950
1002b2ac:	push   eax
1002b2ad:	call   0x10003d63
1002b2b2:	pop    ecx
1002b2b3:	pop    ecx
1002b2b4:	push   eax
1002b2b5:	push   0x4
1002b2b7:	push   0x100718b0
1002b2bc:	call   0x10003d75
1002b2c1:	add    esp,0xc
1002b2c4:	push   eax
1002b2c5:	lea    eax,[ebp-0x174]
1002b2cb:	push   esi
1002b2cc:	push   eax
1002b2cd:	call   0x10005dcb
1002b2d2:	add    esp,0xc
1002b2d5:	push   ebx
1002b2d6:	push   eax
1002b2d7:	lea    eax,[ebp-0xe8]
1002b2dd:	push   eax
1002b2de:	mov    BYTE PTR [ebp-0x4],0x10
1002b2e2:	call   0x10005dcb
1002b2e7:	add    esp,0xc
1002b2ea:	mov    BYTE PTR [ebp-0x4],0x11
1002b2ee:	cmp    DWORD PTR [ebp+0xa4],0x10
1002b2f5:	mov    ecx,DWORD PTR [ebp+0x90]
1002b2fb:	jae    0x1002b303
1002b2fd:	lea    ecx,[ebp+0x90]
1002b303:	push   ecx
1002b304:	push   eax
1002b305:	lea    eax,[ebp-0x190]
1002b30b:	push   eax
1002b30c:	call   0x10005dcb
1002b311:	add    esp,0xc
1002b314:	push   DWORD PTR [ebp+0xd8]
1002b31a:	lea    ecx,[ebp-0x24]
1002b31d:	push   ecx
1002b31e:	push   eax
1002b31f:	lea    eax,[ebp+0xa8]
1002b325:	push   eax
1002b326:	lea    eax,[ebp-0x84]
1002b32c:	push   eax
1002b32d:	lea    edx,[ebp-0xb0]
1002b333:	mov    BYTE PTR [ebp-0x4],0x12
1002b337:	call   0x10030ab0
1002b33c:	mov    ecx,DWORD PTR [eax]
1002b33e:	mov    esi,ecx
1002b340:	xor    ebx,ebx
1002b342:	add    esp,0x14
1002b345:	mov    DWORD PTR [eax],ebx
1002b347:	mov    DWORD PTR [ebp-0x54],esi
1002b34a:	push   DWORD PTR [ebp-0x84]
1002b350:	call   0x10041d92
1002b355:	pop    ecx
1002b356:	xor    edi,edi
1002b358:	push   ebx
1002b359:	inc    edi
1002b35a:	push   edi
1002b35b:	lea    ecx,[ebp-0x190]
1002b361:	call   0x100012f9
1002b366:	push   ebx
1002b367:	push   edi
1002b368:	lea    ecx,[ebp-0xe8]
1002b36e:	call   0x100012f9
1002b373:	push   ebx
1002b374:	push   edi
1002b375:	lea    ecx,[ebp-0x174]
1002b37b:	call   0x100012f9
1002b380:	push   ebx
1002b381:	push   edi
1002b382:	lea    ecx,[ebp-0x13c]
1002b388:	call   0x100012f9
1002b38d:	push   ebx
1002b38e:	push   edi
1002b38f:	lea    ecx,[ebp-0x104]
1002b395:	call   0x100012f9
1002b39a:	push   ebx
1002b39b:	push   edi
1002b39c:	lea    ecx,[ebp-0x120]
1002b3a2:	call   0x100012f9
1002b3a7:	push   ebx
1002b3a8:	push   edi
1002b3a9:	lea    ecx,[ebp-0xb0]
1002b3af:	mov    BYTE PTR [ebp-0x4],0x1a
1002b3b3:	call   0x100012f9
1002b3b8:	cmp    esi,ebx
1002b3ba:	jne    0x1002b461
1002b3c0:	call   0x100180b0
1002b3c5:	cmp    DWORD PTR [ebp+0xc0],0x10
1002b3cc:	mov    eax,DWORD PTR [ebp+0xac]
1002b3d2:	jae    0x1002b3da
1002b3d4:	lea    eax,[ebp+0xac]
1002b3da:	push   eax
1002b3db:	call   0x1000207c
1002b3e0:	push   0x5
1002b3e2:	call   0x10037620
1002b3e7:	pop    ecx
1002b3e8:	pop    ecx
1002b3e9:	push   DWORD PTR [ebp-0x14]
1002b3ec:	lea    edi,[ebp-0x1c]
1002b3ef:	call   0x1002b8de
1002b3f4:	push   ebx
1002b3f5:	call   0x10041d92
1002b3fa:	mov    eax,DWORD PTR [ebp-0x28]
1002b3fd:	pop    ecx
1002b3fe:	add    eax,0xfffffff0
1002b401:	call   0x1000207d
1002b406:	push   ebx
1002b407:	push   0x1
1002b409:	lea    ecx,[ebp+0x8c]
1002b40f:	call   0x100012f9
1002b414:	push   ebx
1002b415:	push   0x1
1002b417:	lea    ecx,[ebp+0xa8]
1002b41d:	call   0x100012f9
1002b422:	mov    BYTE PTR [ebp-0x4],0x1
1002b426:	mov    eax,DWORD PTR [ebp-0x20]
1002b429:	cmp    eax,ebx
1002b42b:	je     0x1002b433
1002b42d:	mov    ecx,DWORD PTR [eax]
1002b42f:	push   eax
1002b430:	call   DWORD PTR [ecx+0x8]
1002b433:	lea    esi,[ebp-0x1c]
1002b436:	call   0x1002b8c6
1002b43b:	mov    eax,DWORD PTR [ebp-0x14]
1002b43e:	mov    ecx,DWORD PTR [ebp-0xc]
1002b441:	mov    DWORD PTR fs:0x0,ecx
1002b448:	pop    ecx
1002b449:	pop    edi
1002b44a:	pop    esi
1002b44b:	pop    ebx
1002b44c:	mov    ecx,DWORD PTR [ebp+0xc4]
1002b452:	xor    ecx,ebp
1002b454:	call   0x10041d97
1002b459:	add    ebp,0xc8
1002b45f:	leave  
1002b460:	ret    
1002b461:	mov    eax,DWORD PTR [ebp-0x24]
1002b464:	mov    DWORD PTR [ebp-0x3c],eax
1002b467:	lea    eax,[ebp-0x40]
1002b46a:	push   eax
1002b46b:	mov    DWORD PTR [ebp-0x40],ebx
1002b46e:	mov    DWORD PTR [ebp-0x38],esi
1002b471:	call   0x10037480
1002b476:	mov    DWORD PTR [ebp-0x80],eax
1002b479:	mov    DWORD PTR [ebp-0x58],ebx
1002b47c:	mov    eax,DWORD PTR [ebp-0x58]
1002b47f:	cmp    eax,DWORD PTR [ebp-0x80]
1002b482:	je     0x1002b828
1002b488:	lea    eax,[ebp-0x40]
1002b48b:	push   eax
1002b48c:	lea    esi,[ebp+0x70]
1002b48f:	call   0x10037140
1002b494:	lea    eax,[ebp-0x40]
1002b497:	push   eax
1002b498:	mov    BYTE PTR [ebp-0x4],0x1b
1002b49c:	call   0x10037480
1002b4a1:	mov    DWORD PTR [ebp-0x7c],eax
1002b4a4:	lea    eax,[ebp-0x34]
1002b4a7:	push   eax
1002b4a8:	call   0x1002e5d3
1002b4ad:	test   eax,eax
1002b4af:	jge    0x1002b4ce
1002b4b1:	push   DWORD PTR [ebp-0x14]
1002b4b4:	lea    edi,[ebp-0x1c]
1002b4b7:	call   0x1002b8de
1002b4bc:	push   ebx
1002b4bd:	push   0x1
1002b4bf:	mov    ecx,esi
1002b4c1:	call   0x100012f9
1002b4c6:	push   DWORD PTR [ebp-0x54]
1002b4c9:	jmp    0x1002b3f5
1002b4ce:	mov    esi,DWORD PTR [ebp-0x34]
1002b4d1:	cmp    esi,ebx
1002b4d3:	mov    DWORD PTR [ebp-0x24],esi
1002b4d6:	je     0x1002b4de
1002b4d8:	mov    eax,DWORD PTR [esi]
1002b4da:	push   esi
1002b4db:	call   DWORD PTR [eax+0x4]
1002b4de:	mov    BYTE PTR [ebp-0x4],0x1c
1002b4e2:	mov    DWORD PTR [ebp-0x50],ebx
1002b4e5:	mov    eax,DWORD PTR [ebp-0x50]
1002b4e8:	cmp    eax,DWORD PTR [ebp-0x7c]
1002b4eb:	jge    0x1002b7df
1002b4f1:	lea    eax,[ebp-0x40]
1002b4f4:	push   eax
1002b4f5:	lea    esi,[ebp-0x158]
1002b4fb:	call   0x10037140
1002b500:	lea    ecx,[ebp-0x5c]
1002b503:	push   ecx
1002b504:	mov    ebx,eax
1002b506:	mov    BYTE PTR [ebp-0x4],0x1d
1002b50a:	call   0x10033e70
1002b50f:	pop    ecx
1002b510:	push   0x0
1002b512:	push   0x1
1002b514:	mov    ecx,esi
1002b516:	mov    BYTE PTR [ebp-0x4],0x1f
1002b51a:	call   0x100012f9
1002b51f:	lea    eax,[ebp-0x40]
1002b522:	push   eax
1002b523:	lea    esi,[ebp-0xcc]
1002b529:	call   0x10037140
1002b52e:	lea    ecx,[ebp-0x48]
1002b531:	push   ecx
1002b532:	mov    ebx,eax
1002b534:	mov    BYTE PTR [ebp-0x4],0x20
1002b538:	call   0x10033e70
1002b53d:	pop    ecx
1002b53e:	push   0x0
1002b540:	push   0x1
1002b542:	mov    ecx,esi
1002b544:	mov    BYTE PTR [ebp-0x4],0x22
1002b548:	call   0x100012f9
1002b54d:	lea    eax,[ebp-0x40]
1002b550:	push   eax
1002b551:	lea    esi,[ebp+0x1c]
1002b554:	call   0x10037140
1002b559:	mov    edx,esi
1002b55b:	lea    esi,[ebp+0x54]
1002b55e:	mov    BYTE PTR [ebp-0x4],0x23
1002b562:	call   0x10033520
1002b567:	lea    eax,[ebp-0x60]
1002b56a:	push   eax
1002b56b:	mov    ebx,esi
1002b56d:	mov    BYTE PTR [ebp-0x4],0x24
1002b571:	call   0x10033e70
1002b576:	pop    ecx
1002b577:	lea    eax,[ebp-0x40]
1002b57a:	push   eax
1002b57b:	lea    esi,[ebp-0xcc]
1002b581:	mov    BYTE PTR [ebp-0x4],0x25
1002b585:	call   0x10037140
1002b58a:	lea    ecx,[ebp-0x44]
1002b58d:	push   ecx
1002b58e:	mov    ebx,eax
1002b590:	mov    BYTE PTR [ebp-0x4],0x26
1002b594:	call   0x10033e70
1002b599:	pop    ecx
1002b59a:	push   0x0
1002b59c:	push   0x1
1002b59e:	mov    ecx,esi
1002b5a0:	mov    BYTE PTR [ebp-0x4],0x28
1002b5a4:	call   0x100012f9
1002b5a9:	lea    eax,[ebp-0x40]
1002b5ac:	push   eax
1002b5ad:	lea    esi,[ebp+0x0]
1002b5b0:	call   0x10037140
1002b5b5:	lea    eax,[ebp-0x4c]
1002b5b8:	mov    BYTE PTR [ebp-0x4],0x29
1002b5bc:	push   eax
1002b5bd:	mov    ebx,esi
1002b5bf:	call   0x10033e70
1002b5c4:	pop    ecx
1002b5c5:	lea    eax,[ebp-0x40]
1002b5c8:	push   eax
1002b5c9:	lea    esi,[ebp+0x38]
1002b5cc:	mov    BYTE PTR [ebp-0x4],0x2a
1002b5d0:	call   0x10037140
1002b5d5:	mov    BYTE PTR [ebp-0x4],0x2b
1002b5d9:	cmp    DWORD PTR [ebp+0x50],0x10
1002b5dd:	mov    eax,DWORD PTR [ebp+0x3c]
1002b5e0:	jae    0x1002b5e5
1002b5e2:	lea    eax,[ebp+0x3c]
1002b5e5:	push   eax
1002b5e6:	call   0x10044a05
1002b5eb:	mov    DWORD PTR [ebp-0x2c],eax
1002b5ee:	sar    eax,0x6
1002b5f1:	pop    ecx
1002b5f2:	and    eax,0x3
1002b5f5:	push   eax
1002b5f6:	lea    eax,[ebp+0x1c]
1002b5f9:	push   eax
1002b5fa:	lea    ebx,[ebp+0x0]
1002b5fd:	mov    edi,0x1007fec8
1002b602:	call   0x10019537
1002b607:	lea    eax,[ebp-0x68]
1002b60a:	push   eax
1002b60b:	call   0x1002e54d
1002b610:	test   eax,eax
1002b612:	jge    0x1002b6ce
1002b618:	push   DWORD PTR [ebp-0x14]
1002b61b:	lea    edi,[ebp-0x1c]
1002b61e:	call   0x1002b8de
1002b623:	xor    esi,esi
1002b625:	xor    ebx,ebx
1002b627:	push   esi
1002b628:	inc    ebx
1002b629:	push   ebx
1002b62a:	lea    ecx,[ebp+0x38]
1002b62d:	call   0x100012f9
1002b632:	lea    edi,[ebp-0x4c]
1002b635:	call   0x1000256d
1002b63a:	push   esi
1002b63b:	push   ebx
1002b63c:	lea    ecx,[ebp+0x0]
1002b63f:	call   0x100012f9
1002b644:	lea    edi,[ebp-0x44]
1002b647:	call   0x1000256d
1002b64c:	lea    edi,[ebp-0x60]
1002b64f:	call   0x1000256d
1002b654:	push   esi
1002b655:	push   ebx
1002b656:	lea    ecx,[ebp+0x54]
1002b659:	call   0x100012f9
1002b65e:	push   esi
1002b65f:	push   ebx
1002b660:	lea    ecx,[ebp+0x1c]
1002b663:	call   0x100012f9
1002b668:	lea    edi,[ebp-0x48]
1002b66b:	call   0x1000256d
1002b670:	lea    edi,[ebp-0x5c]
1002b673:	call   0x1000256d
1002b678:	mov    BYTE PTR [ebp-0x4],0x1b
1002b67c:	mov    eax,DWORD PTR [ebp-0x24]
1002b67f:	cmp    eax,esi
1002b681:	je     0x1002b689
1002b683:	mov    ecx,DWORD PTR [eax]
1002b685:	push   eax
1002b686:	call   DWORD PTR [ecx+0x8]
1002b689:	push   esi
1002b68a:	push   ebx
1002b68b:	lea    ecx,[ebp+0x70]
1002b68e:	call   0x100012f9
1002b693:	push   DWORD PTR [ebp-0x54]
1002b696:	call   0x10041d92
1002b69b:	mov    eax,DWORD PTR [ebp-0x28]
1002b69e:	pop    ecx
1002b69f:	add    eax,0xfffffff0
1002b6a2:	call   0x1000207d
1002b6a7:	push   esi
1002b6a8:	push   ebx
1002b6a9:	lea    ecx,[ebp+0x8c]
1002b6af:	call   0x100012f9
1002b6b4:	push   esi
1002b6b5:	push   ebx
1002b6b6:	lea    ecx,[ebp+0xa8]
1002b6bc:	call   0x100012f9
1002b6c1:	mov    BYTE PTR [ebp-0x4],bl
1002b6c4:	mov    eax,DWORD PTR [ebp-0x20]
1002b6c7:	cmp    eax,esi
1002b6c9:	jmp    0x1002b42b
1002b6ce:	mov    edi,DWORD PTR [ebp-0x68]
1002b6d1:	lea    eax,[edi+0x8]
1002b6d4:	lea    esi,[ebp-0x5c]
1002b6d7:	call   0x10010b2c
1002b6dc:	lea    eax,[edi+0xc]
1002b6df:	lea    esi,[ebp-0x48]
1002b6e2:	call   0x10010b2c
1002b6e7:	lea    eax,[edi+0x10]
1002b6ea:	lea    esi,[ebp-0x60]
1002b6ed:	call   0x10010b2c
1002b6f2:	lea    eax,[edi+0x14]
1002b6f5:	lea    esi,[ebp-0x44]
1002b6f8:	call   0x10010b2c
1002b6fd:	lea    eax,[edi+0x18]
1002b700:	lea    esi,[ebp-0x4c]
1002b703:	call   0x10010b2c
1002b708:	mov    eax,DWORD PTR [ebp-0x2c]
1002b70b:	mov    DWORD PTR [edi+0x1c],eax
1002b70e:	mov    eax,DWORD PTR [edi]
1002b710:	push   edi
1002b711:	mov    DWORD PTR [ebp-0x2c],edi
1002b714:	call   DWORD PTR [eax+0x4]
1002b717:	mov    BYTE PTR [ebp-0x4],0x2c
1002b71b:	mov    WORD PTR [ebp-0x94],0x9
1002b724:	mov    DWORD PTR [ebp-0x8c],edi
1002b72a:	mov    eax,DWORD PTR [edi]
1002b72c:	push   edi
1002b72d:	call   DWORD PTR [eax+0x4]
1002b730:	lea    eax,[ebp-0x94]
1002b736:	mov    BYTE PTR [ebp-0x4],0x2d
1002b73a:	xor    ebx,ebx
1002b73c:	push   eax
1002b73d:	lea    esi,[ebp-0x78]
1002b740:	mov    WORD PTR [ebp-0x78],bx
1002b744:	call   0x1002abac
1002b749:	mov    eax,esi
1002b74b:	mov    BYTE PTR [ebp-0x4],0x2e
1002b74f:	mov    esi,DWORD PTR [ebp-0x34]
1002b752:	push   eax
1002b753:	add    esi,0x4
1002b756:	call   0x1002d0a6
1002b75b:	mov    esi,DWORD PTR ds:0x10065294
1002b761:	lea    eax,[ebp-0x78]
1002b764:	push   eax
1002b765:	call   esi
1002b767:	lea    eax,[ebp-0x94]
1002b76d:	push   eax
1002b76e:	call   esi
1002b770:	mov    BYTE PTR [ebp-0x4],0x2b
1002b774:	mov    eax,DWORD PTR [edi]
1002b776:	push   edi
1002b777:	call   DWORD PTR [eax+0x8]
1002b77a:	xor    esi,esi
1002b77c:	push   ebx
1002b77d:	inc    esi
1002b77e:	push   esi
1002b77f:	lea    ecx,[ebp+0x38]
1002b782:	call   0x100012f9
1002b787:	lea    edi,[ebp-0x4c]
1002b78a:	call   0x1000256d
1002b78f:	push   ebx
1002b790:	push   esi
1002b791:	lea    ecx,[ebp+0x0]
1002b794:	call   0x100012f9
1002b799:	lea    edi,[ebp-0x44]
1002b79c:	call   0x1000256d
1002b7a1:	lea    edi,[ebp-0x60]
1002b7a4:	call   0x1000256d
1002b7a9:	push   ebx
1002b7aa:	push   esi
1002b7ab:	lea    ecx,[ebp+0x54]
1002b7ae:	call   0x100012f9
1002b7b3:	push   ebx
1002b7b4:	push   esi
1002b7b5:	lea    ecx,[ebp+0x1c]
1002b7b8:	call   0x100012f9
1002b7bd:	lea    edi,[ebp-0x48]
1002b7c0:	call   0x1000256d
1002b7c5:	lea    edi,[ebp-0x5c]
1002b7c8:	mov    BYTE PTR [ebp-0x4],0x1c
1002b7cc:	call   0x1000256d
1002b7d1:	inc    DWORD PTR [ebp-0x50]
1002b7d4:	mov    esi,DWORD PTR [ebp-0x24]
1002b7d7:	xor    edi,edi
1002b7d9:	inc    edi
1002b7da:	jmp    0x1002b4e5
1002b7df:	sub    esp,0x10
1002b7e2:	cmp    esi,ebx
1002b7e4:	mov    eax,esp
1002b7e6:	mov    DWORD PTR [ebp-0x2c],esp
1002b7e9:	mov    WORD PTR [eax],0x9
1002b7ee:	mov    DWORD PTR [eax+0x8],esi
1002b7f1:	je     0x1002b7f9
1002b7f3:	mov    eax,DWORD PTR [esi]
1002b7f5:	push   esi
1002b7f6:	call   DWORD PTR [eax+0x4]
1002b7f9:	push   DWORD PTR [ebp-0x64]
1002b7fc:	lea    ecx,[ebp+0x70]
1002b7ff:	call   0x1002ac85
1002b804:	cmp    esi,ebx
1002b806:	mov    BYTE PTR [ebp-0x4],0x1b
1002b80a:	je     0x1002b812
1002b80c:	mov    eax,DWORD PTR [esi]
1002b80e:	push   esi
1002b80f:	call   DWORD PTR [eax+0x8]
1002b812:	push   ebx
1002b813:	push   edi
1002b814:	lea    ecx,[ebp+0x70]
1002b817:	mov    BYTE PTR [ebp-0x4],0x1a
1002b81b:	call   0x100012f9
1002b820:	inc    DWORD PTR [ebp-0x58]
1002b823:	jmp    0x1002b47c
1002b828:	lea    eax,[ebp-0x2c]
1002b82b:	push   eax
1002b82c:	lea    ecx,[ebp-0x40]
1002b82f:	call   0x10037310
1002b834:	lea    edi,[ebp-0x18]
1002b837:	mov    BYTE PTR [ebp-0x4],0x2f
1002b83b:	call   0x10003bdf
1002b840:	mov    BYTE PTR [ebp-0x4],0x1a
1002b844:	mov    eax,DWORD PTR [ebp-0x2c]
1002b847:	add    eax,0xfffffff0
1002b84a:	call   0x1000207d
1002b84f:	mov    esi,DWORD PTR [ebp-0x20]
1002b852:	cmp    DWORD PTR [ebp-0x1c],esi
1002b855:	je     0x1002b863
1002b857:	mov    edi,esi
1002b859:	lea    esi,[ebp-0x1c]
1002b85c:	call   0x10007188
1002b861:	mov    esi,edi
1002b863:	push   DWORD PTR [ebp-0x14]
1002b866:	lea    edi,[ebp-0x1c]
1002b869:	call   0x1002b8de
1002b86e:	push   DWORD PTR [ebp-0x54]
1002b871:	call   0x10041d92
1002b876:	mov    eax,DWORD PTR [ebp-0x28]
1002b879:	pop    ecx
1002b87a:	add    eax,0xfffffff0
1002b87d:	call   0x1000207d
1002b882:	push   ebx
1002b883:	push   0x1
1002b885:	lea    ecx,[ebp+0x8c]
1002b88b:	call   0x100012f9
1002b890:	push   ebx
1002b891:	push   0x1
1002b893:	lea    ecx,[ebp+0xa8]
1002b899:	call   0x100012f9
1002b89e:	cmp    esi,ebx
1002b8a0:	mov    BYTE PTR [ebp-0x4],0x1
1002b8a4:	je     0x1002b433
1002b8aa:	mov    eax,DWORD PTR [esi]
1002b8ac:	push   esi
1002b8ad:	call   DWORD PTR [eax+0x8]
1002b8b0:	jmp    0x1002b433
1002b8b5:	push   DWORD PTR [ebp-0x14]
1002b8b8:	lea    edi,[ebp-0x1c]
1002b8bb:	call   0x1002b8de
1002b8c0:	mov    eax,0x1002b433
1002b8c5:	ret    
1002b8c6:	mov    eax,DWORD PTR [esi+0x4]
1002b8c9:	sub    eax,0x10
1002b8cc:	call   0x1000207d
1002b8d1:	mov    eax,DWORD PTR [esi]
1002b8d3:	test   eax,eax
1002b8d5:	je     0x1002b8dd
1002b8d7:	mov    ecx,DWORD PTR [eax]
1002b8d9:	push   eax
1002b8da:	call   DWORD PTR [ecx+0x8]
1002b8dd:	ret    
1002b8de:	push   0x0
1002b8e0:	mov    eax,0x1005ee30
1002b8e5:	call   0x10058845
1002b8ea:	mov    esi,DWORD PTR [ebp+0x8]
1002b8ed:	mov    eax,DWORD PTR [edi]
1002b8ef:	test   eax,eax
1002b8f1:	mov    DWORD PTR [esi],eax
1002b8f3:	je     0x1002b8fb
1002b8f5:	mov    ecx,DWORD PTR [eax]
1002b8f7:	push   eax
1002b8f8:	call   DWORD PTR [ecx+0x4]
1002b8fb:	and    DWORD PTR [ebp-0x4],0x0
1002b8ff:	mov    eax,DWORD PTR [edi+0x4]
1002b902:	sub    eax,0x10
1002b905:	call   0x1000475e
1002b90a:	add    eax,0x10
1002b90d:	mov    DWORD PTR [esi+0x4],eax
1002b910:	mov    eax,esi
1002b912:	call   0x1005891d
1002b917:	ret    0x4
1002b91a:	push   0x0
1002b91c:	mov    eax,0x100607d9
1002b921:	call   0x10058845
1002b926:	mov    ebx,DWORD PTR [ebp+0x8]
1002b929:	mov    eax,DWORD PTR [ebp+0xc]
1002b92c:	mov    DWORD PTR [ebx+0x8],eax
1002b92f:	mov    eax,DWORD PTR [ebp+0x10]
1002b932:	mov    edi,0x1007fa54
1002b937:	mov    DWORD PTR [ebx+0x4],0x1
1002b93e:	mov    DWORD PTR [ebx],0x10071c14
1002b944:	mov    DWORD PTR [ebx+0xc],eax
1002b947:	and    DWORD PTR [ebx+0x10],0x0
1002b94b:	lea    esi,[ebx+0x14]
1002b94e:	mov    ecx,edi
1002b950:	call   0x10002160
1002b955:	xor    eax,eax
1002b957:	mov    DWORD PTR [ebx+0x1c],eax
1002b95a:	mov    DWORD PTR [ebp-0x4],eax
1002b95d:	lea    esi,[ebx+0x24]
1002b960:	mov    ecx,edi
1002b962:	mov    DWORD PTR [ebx+0x20],eax
1002b965:	call   0x10002160
1002b96a:	xor    edi,edi
1002b96c:	mov    DWORD PTR [ebx+0x2c],edi
1002b96f:	mov    eax,DWORD PTR [ebp+0x14]
1002b972:	mov    BYTE PTR [ebp-0x4],0x1
1002b976:	mov    eax,DWORD PTR [eax]
1002b978:	sub    eax,0x10
1002b97b:	call   0x1000475e
1002b980:	mov    esi,DWORD PTR ds:0x10065070
1002b986:	add    eax,0x10
1002b989:	mov    DWORD PTR [ebx+0x30],eax
1002b98c:	mov    BYTE PTR [ebx+0x18],0x0
1002b990:	mov    BYTE PTR [ebx+0x28],0x0
1002b994:	mov    eax,DWORD PTR [ebx+0x1c]
1002b997:	cmp    eax,edi
1002b999:	je     0x1002b99e
1002b99b:	push   eax
1002b99c:	call   esi
1002b99e:	mov    DWORD PTR [ebx+0x1c],edi
1002b9a1:	mov    eax,DWORD PTR [ebx+0x2c]
1002b9a4:	cmp    eax,edi
1002b9a6:	je     0x1002b9ab
1002b9a8:	push   eax
1002b9a9:	call   esi
1002b9ab:	lea    eax,[ebp+0xc]
1002b9ae:	push   eax
1002b9af:	mov    DWORD PTR [ebx+0x2c],edi
1002b9b2:	call   0x1002e653
1002b9b7:	test   eax,eax
1002b9b9:	jl     0x1002b9ec
1002b9bb:	mov    edi,DWORD PTR [ebp+0xc]
1002b9be:	test   edi,edi
1002b9c0:	je     0x1002b9c8
1002b9c2:	mov    eax,DWORD PTR [edi]
1002b9c4:	push   edi
1002b9c5:	call   DWORD PTR [eax+0x4]
1002b9c8:	cmp    DWORD PTR [ebx+0x10],edi
1002b9cb:	je     0x1002b9d5
1002b9cd:	lea    esi,[ebx+0x10]
1002b9d0:	call   0x10007188
1002b9d5:	cmp    DWORD PTR [ebx+0x20],edi
1002b9d8:	je     0x1002b9e2
1002b9da:	lea    esi,[ebx+0x20]
1002b9dd:	call   0x10007188
1002b9e2:	test   edi,edi
1002b9e4:	je     0x1002b9ec
1002b9e6:	mov    eax,DWORD PTR [edi]
1002b9e8:	push   edi
1002b9e9:	call   DWORD PTR [eax+0x8]
1002b9ec:	mov    eax,ebx
1002b9ee:	call   0x1005891d
1002b9f3:	ret    0x10
1002b9f6:	push   DWORD PTR [esp+0x8]
1002b9fa:	push   0x1006e178
1002b9ff:	call   0x1002ab66
1002ba04:	test   eax,eax
1002ba06:	pop    ecx
1002ba07:	pop    ecx
1002ba08:	je     0x1002ba18
1002ba0a:	mov    eax,DWORD PTR [esp+0x4]
1002ba0e:	mov    ecx,DWORD PTR [esp+0xc]
1002ba12:	mov    DWORD PTR [ecx],eax
1002ba14:	xor    eax,eax
1002ba16:	jmp    0x1002ba1d
1002ba18:	mov    eax,0x80004005
1002ba1d:	ret    0xc
1002ba20:	push   esi
1002ba21:	mov    esi,eax
1002ba23:	mov    eax,DWORD PTR [esi+0xc]
1002ba26:	test   eax,eax
1002ba28:	je     0x1002ba31
1002ba2a:	push   eax
1002ba2b:	call   DWORD PTR ds:0x10065070
1002ba31:	and    DWORD PTR [esi+0xc],0x0
1002ba35:	mov    eax,DWORD PTR [esi+0x4]
1002ba38:	sub    eax,0x10
1002ba3b:	call   0x1000207d
1002ba40:	mov    esi,DWORD PTR [esi]
1002ba42:	test   esi,esi
1002ba44:	je     0x1002ba4c
1002ba46:	mov    eax,DWORD PTR [esi]
1002ba48:	push   esi
1002ba49:	call   DWORD PTR [eax+0x8]
1002ba4c:	pop    esi
1002ba4d:	ret    
1002ba4e:	push   0x10
1002ba50:	mov    eax,0x10063924
1002ba55:	call   0x10058878
1002ba5a:	call   0x1000207c
1002ba5f:	mov    ebx,DWORD PTR [ebp+0x8]
1002ba62:	xor    esi,esi
1002ba64:	mov    DWORD PTR [ebp-0x4],esi
1002ba67:	mov    DWORD PTR [ebp-0x14],ebx
1002ba6a:	call   0x1000207c
1002ba6f:	push   esi
1002ba70:	push   esi
1002ba71:	call   DWORD PTR ds:0x1006541c
1002ba77:	push   0x2710
1002ba7c:	lea    eax,[ebx+0x30]
1002ba7f:	push   esi
1002ba80:	push   eax
1002ba81:	lea    ecx,[ebp-0x1c]
1002ba84:	mov    BYTE PTR [ebp-0x4],0x1
1002ba88:	call   0x1002afb6
1002ba8d:	add    esp,0xc
1002ba90:	mov    BYTE PTR [ebp-0x4],0x2
1002ba94:	mov    edi,DWORD PTR [ebp-0x1c]
1002ba97:	lea    esi,[ebx+0x10]
1002ba9a:	cmp    DWORD PTR [esi],edi
1002ba9c:	je     0x1002baa3
1002ba9e:	call   0x10007188
1002baa3:	lea    edi,[ebx+0x14]
1002baa6:	lea    eax,[ebp-0x18]
1002baa9:	call   0x10003bdf
1002baae:	cmp    DWORD PTR [esi],0x0
1002bab1:	je     0x1002bab7
1002bab3:	mov    BYTE PTR [ebx+0x18],0x1
1002bab7:	lea    esi,[ebp-0x1c]
1002baba:	call   0x1002b8c6
1002babf:	jmp    0x1002bad2
1002bac1:	push   0x4
1002bac3:	call   0x10037620
1002bac8:	pop    ecx
1002bac9:	mov    eax,0x1002bacf
1002bace:	ret    
1002bacf:	mov    ebx,DWORD PTR [ebp+0x8]
1002bad2:	call   DWORD PTR ds:0x10065404
1002bad8:	or     DWORD PTR [ebp-0x4],0xffffffff
1002badc:	test   ebx,ebx
1002bade:	je     0x1002bae6
1002bae0:	mov    eax,DWORD PTR [ebx]
1002bae2:	push   ebx
1002bae3:	call   DWORD PTR [eax+0x8]
1002bae6:	xor    eax,eax
1002bae8:	call   0x1005891d
1002baed:	ret    0x4
1002baf0:	push   0x10
1002baf2:	mov    eax,0x100638f9
1002baf7:	call   0x10058878
1002bafc:	mov    ebx,DWORD PTR [ebp+0x8]
1002baff:	xor    eax,eax
1002bb01:	push   eax
1002bb02:	mov    DWORD PTR [ebp-0x4],eax
1002bb05:	push   eax
1002bb06:	mov    DWORD PTR [ebp-0x14],ebx
1002bb09:	call   DWORD PTR ds:0x1006541c
1002bb0f:	push   0x186a0
1002bb14:	lea    eax,[ebx+0x30]
1002bb17:	push   0x1
1002bb19:	push   eax
1002bb1a:	lea    ecx,[ebp-0x1c]
1002bb1d:	mov    BYTE PTR [ebp-0x4],0x1
1002bb21:	call   0x1002afb6
1002bb26:	add    esp,0xc
1002bb29:	mov    BYTE PTR [ebp-0x4],0x2
1002bb2d:	mov    edi,DWORD PTR [ebp-0x1c]
1002bb30:	lea    esi,[ebx+0x20]
1002bb33:	cmp    DWORD PTR [esi],edi
1002bb35:	je     0x1002bb3c
1002bb37:	call   0x10007188
1002bb3c:	lea    edi,[ebx+0x24]
1002bb3f:	lea    eax,[ebp-0x18]
1002bb42:	call   0x10003bdf
1002bb47:	cmp    DWORD PTR [esi],0x0
1002bb4a:	je     0x1002bb50
1002bb4c:	mov    BYTE PTR [ebx+0x28],0x1
1002bb50:	lea    esi,[ebp-0x1c]
1002bb53:	call   0x1002b8c6
1002bb58:	jmp    0x1002bb6b
1002bb5a:	push   0x4
1002bb5c:	call   0x10037620
1002bb61:	pop    ecx
1002bb62:	mov    eax,0x1002bb68
1002bb67:	ret    
1002bb68:	mov    ebx,DWORD PTR [ebp+0x8]
1002bb6b:	call   DWORD PTR ds:0x10065404
1002bb71:	or     DWORD PTR [ebp-0x4],0xffffffff
1002bb75:	test   ebx,ebx
1002bb77:	je     0x1002bb7f
1002bb79:	mov    eax,DWORD PTR [ebx]
1002bb7b:	push   ebx
1002bb7c:	call   DWORD PTR [eax+0x8]
1002bb7f:	xor    eax,eax
1002bb81:	call   0x1005891d
1002bb86:	ret    0x4
1002bb89:	push   ebp
1002bb8a:	mov    ebp,esp
1002bb8c:	and    esp,0xfffffff8
1002bb8f:	push   0xffffffff
1002bb91:	push   0x100607a2
1002bb96:	mov    eax,fs:0x0
1002bb9c:	push   eax
1002bb9d:	sub    esp,0x8c
1002bba3:	push   esi
1002bba4:	push   edi
1002bba5:	mov    eax,ds:0x1007d030
1002bbaa:	xor    eax,esp
1002bbac:	push   eax
1002bbad:	lea    eax,[esp+0x98]
1002bbb4:	mov    fs:0x0,eax
1002bbba:	push   0x66b72c8c
1002bbbf:	push   0x10071900
1002bbc4:	call   0x10003d63
1002bbc9:	push   eax
1002bbca:	push   0xf
1002bbcc:	mov    edi,0x10071940
1002bbd1:	push   edi
1002bbd2:	call   0x10003d75
1002bbd7:	add    esp,0x14
1002bbda:	push   eax
1002bbdb:	lea    ecx,[esp+0x44]
1002bbdf:	call   0x100011d6
1002bbe4:	xor    esi,esi
1002bbe6:	push   esi
1002bbe7:	lea    eax,[esp+0x44]
1002bbeb:	push   eax
1002bbec:	lea    eax,[esp+0x80]
1002bbf3:	push   eax
1002bbf4:	mov    DWORD PTR [esp+0xac],esi
1002bbfb:	mov    eax,DWORD PTR [ebx+0x4]
1002bbfe:	add    eax,0x18
1002bc01:	call   0x1000800f
1002bc06:	push   eax
1002bc07:	lea    eax,[esp+0x18]
1002bc0b:	push   eax
1002bc0c:	mov    BYTE PTR [esp+0xa8],0x1
1002bc14:	call   0x1002d5d0
1002bc19:	pop    ecx
1002bc1a:	pop    ecx
1002bc1b:	push   esi
1002bc1c:	push   0x1
1002bc1e:	lea    ecx,[esp+0x80]
1002bc25:	call   0x100012f9
1002bc2a:	push   esi
1002bc2b:	push   0x1
1002bc2d:	lea    ecx,[esp+0x48]
1002bc31:	mov    BYTE PTR [esp+0xa8],0x4
1002bc39:	call   0x100012f9
1002bc3e:	lea    eax,[esp+0x14]
1002bc42:	mov    BYTE PTR [esp+0xf],0x0
1002bc47:	mov    DWORD PTR [esp+0x10],esi
1002bc4b:	call   0x1000c4c8
1002bc50:	test   eax,eax
1002bc52:	je     0x1002bd52
1002bc58:	cmp    BYTE PTR [esp+0xf],0x0
1002bc5d:	jne    0x1002bcc6
1002bc5f:	push   0x592fb034
1002bc64:	push   0x10071950
1002bc69:	call   0x10003d63
1002bc6e:	push   0x1afb17c0
1002bc73:	push   eax
1002bc74:	call   0x10003d63
1002bc79:	push   eax
1002bc7a:	push   0x4
1002bc7c:	push   0x1006cd3c
1002bc81:	call   0x10003d75
1002bc86:	add    esp,0x1c
1002bc89:	push   eax
1002bc8a:	push   DWORD PTR [esp+0x14]
1002bc8e:	lea    esi,[esp+0x1c]
1002bc92:	call   0x1000c4de
1002bc97:	mov    esi,eax
1002bc99:	call   0x10005e33
1002bc9e:	test   al,al
1002bca0:	pop    ecx
1002bca1:	je     0x1002bca8
1002bca3:	mov    BYTE PTR [esp+0xf],0x1
1002bca8:	inc    DWORD PTR [esp+0x10]
1002bcac:	lea    eax,[esp+0x14]
1002bcb0:	call   0x1000c4c8
1002bcb5:	cmp    DWORD PTR [esp+0x10],eax
1002bcb9:	jne    0x1002bc58
1002bcbb:	cmp    BYTE PTR [esp+0xf],0x0
1002bcc0:	je     0x1002bd52
1002bcc6:	push   0x250424ee
1002bccb:	push   0x10071990
1002bcd0:	call   0x10003d63
1002bcd5:	push   0x7353753a
1002bcda:	push   eax
1002bcdb:	call   0x10003d63
1002bce0:	push   eax
1002bce1:	push   0x4
1002bce3:	push   0x1006cd3c
1002bce8:	call   0x10003d75
1002bced:	add    esp,0x1c
1002bcf0:	push   eax
1002bcf1:	lea    ecx,[esp+0x28]
1002bcf5:	call   0x100011d6
1002bcfa:	push   0x33bad40
1002bcff:	push   0x100719c8
1002bd04:	mov    BYTE PTR [esp+0xa8],0x5
1002bd0c:	call   0x10003d63
1002bd11:	push   eax
1002bd12:	push   0xf
1002bd14:	push   edi
1002bd15:	call   0x10003d75
1002bd1a:	add    esp,0x14
1002bd1d:	push   eax
1002bd1e:	lea    ecx,[esp+0x60]
1002bd22:	call   0x100011d6
1002bd27:	mov    BYTE PTR [esp+0xa0],0x6
1002bd2f:	mov    edx,DWORD PTR [ebx+0x4]
1002bd32:	lea    eax,[esp+0x5c]
1002bd36:	push   eax
1002bd37:	add    edx,0x18
1002bd3a:	lea    ecx,[esp+0x28]
1002bd3e:	call   0x10007ef8
1002bd43:	push   0x0
1002bd45:	push   0x1
1002bd47:	lea    ecx,[esp+0x64]
1002bd4b:	call   0x100012f9
1002bd50:	jmp    0x1002bd85
1002bd52:	push   0x100719f8
1002bd57:	push   0xf
1002bd59:	push   edi
1002bd5a:	call   0x10003d75
1002bd5f:	add    esp,0xc
1002bd62:	push   eax
1002bd63:	lea    ecx,[esp+0x28]
1002bd67:	call   0x100011d6
1002bd6c:	lea    eax,[esp+0x24]
1002bd70:	push   eax
1002bd71:	mov    BYTE PTR [esp+0xa4],0x7
1002bd79:	mov    eax,DWORD PTR [ebx+0x4]
1002bd7c:	add    eax,0x18
1002bd7f:	push   eax
1002bd80:	call   0x10007dad
1002bd85:	push   0x0
1002bd87:	push   0x1
1002bd89:	lea    ecx,[esp+0x2c]
1002bd8d:	call   0x100012f9
1002bd92:	lea    esi,[esp+0x14]
1002bd96:	call   0x1000d35f
1002bd9b:	mov    ecx,DWORD PTR [esp+0x98]
1002bda2:	mov    DWORD PTR fs:0x0,ecx
1002bda9:	pop    ecx
1002bdaa:	pop    edi
1002bdab:	pop    esi
1002bdac:	mov    esp,ebp
1002bdae:	pop    ebp
1002bdaf:	ret    
1002bdb0:	push   0x6c
1002bdb2:	mov    eax,0x10063a3e
1002bdb7:	call   0x100588e4
1002bdbc:	mov    esi,DWORD PTR [ebp+0x8]
1002bdbf:	push   DWORD PTR [esi]
1002bdc1:	lea    ecx,[ebp-0x30]
1002bdc4:	mov    DWORD PTR [ebp-0x74],esi
1002bdc7:	call   0x1000868a
1002bdcc:	xor    edi,edi
1002bdce:	mov    DWORD PTR [ebp-0x4],edi
1002bdd1:	mov    DWORD PTR [ebp-0x54],edi
1002bdd4:	call   0x1002f5b0
1002bdd9:	push   edi
1002bdda:	lea    ecx,[ebp-0x4c]
1002bddd:	mov    DWORD PTR [ebp-0x34],0xf
1002bde4:	call   0x10001425
1002bde9:	xor    ebx,ebx
1002bdeb:	inc    ebx
1002bdec:	push   ebx
1002bded:	lea    eax,[ebp-0x50]
1002bdf0:	push   eax
1002bdf1:	mov    BYTE PTR [ebp-0x4],0x3
1002bdf5:	call   0x100346c0
1002bdfa:	lea    eax,[ebp-0x5c]
1002bdfd:	push   eax
1002bdfe:	lea    ecx,[ebp-0x4c]
1002be01:	lea    edx,[ebp-0x50]
1002be04:	mov    BYTE PTR [ebp-0x4],0x4
1002be08:	call   0x10035f90
1002be0d:	test   al,al
1002be0f:	je     0x1002be47
1002be11:	push   0x34
1002be13:	call   0x1004239e
1002be18:	pop    ecx
1002be19:	mov    DWORD PTR [ebp-0x58],eax
1002be1c:	cmp    eax,edi
1002be1e:	mov    BYTE PTR [ebp-0x4],0x5
1002be22:	je     0x1002be42
1002be24:	mov    eax,DWORD PTR [ebp-0x5c]
1002be27:	mov    DWORD PTR [ebp-0x68],eax
1002be2a:	lea    eax,[ebp-0x70]
1002be2d:	push   eax
1002be2e:	lea    eax,[ebp-0x4c]
1002be31:	push   eax
1002be32:	push   DWORD PTR [ebp-0x58]
1002be35:	mov    DWORD PTR [ebp-0x70],edi
1002be38:	mov    DWORD PTR [ebp-0x6c],edi
1002be3b:	call   0x1000280c
1002be40:	jmp    0x1002be44
1002be42:	xor    eax,eax
1002be44:	mov    DWORD PTR [ebp-0x54],eax
1002be47:	push   DWORD PTR [ebp-0x50]
1002be4a:	call   DWORD PTR ds:0x10065070
1002be50:	push   edi
1002be51:	push   ebx
1002be52:	lea    ecx,[ebp-0x4c]
1002be55:	call   0x100012f9
1002be5a:	mov    DWORD PTR [ebp-0x4],ebx
1002be5d:	cmp    DWORD PTR [ebp-0x54],edi
1002be60:	jne    0x1002be76
1002be62:	xor    bl,bl
1002be64:	push   edi
1002be65:	push   0x1
1002be67:	lea    ecx,[ebp-0x30]
1002be6a:	call   0x100012f9
1002be6f:	mov    al,bl
1002be71:	jmp    0x1002c0c9
1002be76:	cmp    DWORD PTR [ebp-0x18],0x10
1002be7a:	mov    eax,DWORD PTR [ebp-0x2c]
1002be7d:	jae    0x1002be82
1002be7f:	lea    eax,[ebp-0x2c]
1002be82:	push   eax
1002be83:	mov    DWORD PTR [ebp-0x6c],eax
1002be86:	call   0x10041f10
1002be8b:	pop    ecx
1002be8c:	mov    DWORD PTR [ebp-0x68],eax
1002be8f:	lea    eax,[ebp-0x6c]
1002be92:	push   eax
1002be93:	push   DWORD PTR [ebp-0x54]
1002be96:	call   0x10039020
1002be9b:	test   al,al
1002be9d:	je     0x1002c0a0
1002bea3:	call   DWORD PTR ds:0x10065168
1002bea9:	mov    ebx,eax
1002beab:	push   ebx
1002beac:	mov    DWORD PTR [ebp-0x6c],ebx
1002beaf:	call   DWORD PTR ds:0x10065170
1002beb5:	mov    edi,DWORD PTR ds:0x1006516c
1002bebb:	push   0x2
1002bebd:	push   ebx
1002bebe:	mov    DWORD PTR [ebp-0x68],eax
1002bec1:	call   edi
1002bec3:	mov    BYTE PTR [ebp-0x4],0x7
1002bec7:	call   0x1002f5b0
1002becc:	mov    eax,ds:0x1007fa54
1002bed1:	mov    ecx,0x1007fa54
1002bed6:	call   DWORD PTR [eax+0xc]
1002bed9:	add    eax,0x10
1002bedc:	mov    DWORD PTR [ebp-0x64],eax
1002bedf:	lea    eax,[ebp-0x5c]
1002bee2:	push   eax
1002bee3:	lea    eax,[ebp-0x64]
1002bee6:	push   eax
1002bee7:	lea    eax,[ebp-0x30]
1002beea:	push   eax
1002beeb:	mov    BYTE PTR [ebp-0x4],0x8
1002beef:	push   DWORD PTR [esi+0x4]
1002bef2:	lea    esi,[ebp-0x58]
1002bef5:	call   0x1002c0d1
1002befa:	add    esp,0x10
1002befd:	test   al,al
1002beff:	je     0x1002c06c
1002bf05:	call   0x1002f5b0
1002bf0a:	mov    ebx,DWORD PTR [ebp-0x74]
1002bf0d:	call   0x1002bb89
1002bf12:	cmp    DWORD PTR [ebp-0x18],0x10
1002bf16:	mov    eax,DWORD PTR [ebp-0x2c]
1002bf19:	jae    0x1002bf1e
1002bf1b:	lea    eax,[ebp-0x2c]
1002bf1e:	push   eax
1002bf1f:	call   0x1000207c
1002bf24:	push   0x34
1002bf26:	call   0x1004239e
1002bf2b:	pop    ecx
1002bf2c:	pop    ecx
1002bf2d:	mov    DWORD PTR [ebp-0x50],eax
1002bf30:	xor    ebx,ebx
1002bf32:	cmp    eax,ebx
1002bf34:	mov    BYTE PTR [ebp-0x4],0x9
1002bf38:	je     0x1002bf4e
1002bf3a:	lea    ecx,[ebp-0x64]
1002bf3d:	push   ecx
1002bf3e:	push   DWORD PTR [ebp-0x5c]
1002bf41:	push   DWORD PTR [ebp-0x58]
1002bf44:	push   eax
1002bf45:	call   0x1002b91a
1002bf4a:	mov    edi,eax
1002bf4c:	jmp    0x1002bf50
1002bf4e:	xor    edi,edi
1002bf50:	mov    DWORD PTR [ebp-0x78],edi
1002bf53:	call   0x1000207c
1002bf58:	mov    DWORD PTR [ebp-0x50],ebx
1002bf5b:	mov    DWORD PTR [ebp-0x60],ebx
1002bf5e:	mov    BYTE PTR [ebp-0x4],0xc
1002bf62:	mov    eax,DWORD PTR [edi+0xc]
1002bf65:	test   al,0x2
1002bf67:	je     0x1002bf90
1002bf69:	test   al,0x4
1002bf6b:	jne    0x1002bf90
1002bf6d:	mov    eax,DWORD PTR [edi]
1002bf6f:	push   edi
1002bf70:	call   DWORD PTR [eax+0x4]
1002bf73:	push   ebx
1002bf74:	push   0x4
1002bf76:	push   edi
1002bf77:	push   0x1002ba4e
1002bf7c:	push   ebx
1002bf7d:	push   ebx
1002bf7e:	call   DWORD PTR ds:0x10065098
1002bf84:	push   0x2
1002bf86:	push   eax
1002bf87:	mov    DWORD PTR [ebp-0x50],eax
1002bf8a:	call   DWORD PTR ds:0x1006516c
1002bf90:	mov    eax,DWORD PTR [edi+0xc]
1002bf93:	test   al,0x1
1002bf95:	je     0x1002bfb5
1002bf97:	test   al,0x8
1002bf99:	jne    0x1002bfb5
1002bf9b:	mov    eax,DWORD PTR [edi]
1002bf9d:	push   edi
1002bf9e:	call   DWORD PTR [eax+0x4]
1002bfa1:	push   ebx
1002bfa2:	push   0x4
1002bfa4:	push   edi
1002bfa5:	push   0x1002baf0
1002bfaa:	push   ebx
1002bfab:	push   ebx
1002bfac:	call   DWORD PTR ds:0x10065098
1002bfb2:	mov    DWORD PTR [ebp-0x60],eax
1002bfb5:	mov    eax,DWORD PTR [ebp-0x50]
1002bfb8:	cmp    eax,ebx
1002bfba:	jne    0x1002bfdb
1002bfbc:	cmp    DWORD PTR [ebp-0x60],ebx
1002bfbf:	jne    0x1002bfdb
1002bfc1:	mov    eax,DWORD PTR [ebp-0x74]
1002bfc4:	mov    eax,DWORD PTR [eax+0x4]
1002bfc7:	lea    esi,[eax+0x38]
1002bfca:	cmp    DWORD PTR [esi],edi
1002bfcc:	je     0x1002bfd3
1002bfce:	call   0x10007188
1002bfd3:	mov    eax,DWORD PTR [edi]
1002bfd5:	push   edi
1002bfd6:	call   DWORD PTR [eax+0x8]
1002bfd9:	jmp    0x1002c033
1002bfdb:	mov    ecx,DWORD PTR [ebp-0x60]
1002bfde:	lea    esi,[edi+0x1c]
1002bfe1:	push   eax
1002bfe2:	mov    DWORD PTR [ebp-0x58],eax
1002bfe5:	mov    DWORD PTR [ebp-0x5c],ecx
1002bfe8:	mov    DWORD PTR [ebp-0x50],ebx
1002bfeb:	call   0x10004365
1002bff0:	mov    eax,DWORD PTR [ebp-0x60]
1002bff3:	lea    esi,[edi+0x2c]
1002bff6:	push   eax
1002bff7:	mov    DWORD PTR [ebp-0x60],ebx
1002bffa:	call   0x10004365
1002bfff:	mov    eax,DWORD PTR [ebp-0x74]
1002c002:	mov    eax,DWORD PTR [eax+0x4]
1002c005:	lea    esi,[eax+0x38]
1002c008:	cmp    DWORD PTR [esi],edi
1002c00a:	je     0x1002c011
1002c00c:	call   0x10007188
1002c011:	mov    eax,DWORD PTR [edi]
1002c013:	push   edi
1002c014:	call   DWORD PTR [eax+0x8]
1002c017:	cmp    DWORD PTR [ebp-0x58],ebx
1002c01a:	je     0x1002c025
1002c01c:	push   DWORD PTR [ebp-0x58]
1002c01f:	call   DWORD PTR ds:0x10065174
1002c025:	cmp    DWORD PTR [ebp-0x5c],ebx
1002c028:	je     0x1002c033
1002c02a:	push   DWORD PTR [ebp-0x5c]
1002c02d:	call   DWORD PTR ds:0x10065174
1002c033:	mov    eax,DWORD PTR [ebp-0x64]
1002c036:	add    eax,0xfffffff0
1002c039:	call   0x1000207d
1002c03e:	cmp    DWORD PTR [ebp-0x6c],ebx
1002c041:	je     0x1002c04f
1002c043:	push   DWORD PTR [ebp-0x68]
1002c046:	push   DWORD PTR [ebp-0x6c]
1002c049:	call   DWORD PTR ds:0x1006516c
1002c04f:	mov    BYTE PTR [ebp-0x4],bl
1002c052:	push   DWORD PTR [ebp-0x54]
1002c055:	call   0x10038e30
1002c05a:	push   DWORD PTR [ebp-0x54]
1002c05d:	call   0x10041d92
1002c062:	pop    ecx
1002c063:	mov    bl,0x1
1002c065:	xor    edi,edi
1002c067:	jmp    0x1002be64
1002c06c:	call   0x1002f5b0
1002c071:	mov    eax,DWORD PTR [ebp-0x64]
1002c074:	add    eax,0xfffffff0
1002c077:	call   0x1000207d
1002c07c:	test   ebx,ebx
1002c07e:	je     0x1002c086
1002c080:	push   DWORD PTR [ebp-0x68]
1002c083:	push   ebx
1002c084:	call   edi
1002c086:	xor    edi,edi
1002c088:	mov    BYTE PTR [ebp-0x4],0x0
1002c08c:	push   DWORD PTR [ebp-0x54]
1002c08f:	call   0x10038e30
1002c094:	push   DWORD PTR [ebp-0x54]
1002c097:	call   0x10041d92
1002c09c:	pop    ecx
1002c09d:	push   edi
1002c09e:	jmp    0x1002c0bd
1002c0a0:	call   0x1002f5b0
1002c0a5:	jmp    0x1002c088
1002c0a7:	mov    eax,0x1002c0bb
1002c0ac:	ret    
1002c0ad:	push   0x4
1002c0af:	call   0x10037620
1002c0b4:	pop    ecx
1002c0b5:	mov    eax,0x1002c0bb
1002c0ba:	ret    
1002c0bb:	push   0x0
1002c0bd:	push   0x1
1002c0bf:	lea    ecx,[ebp-0x30]
1002c0c2:	call   0x100012f9
1002c0c7:	xor    al,al
1002c0c9:	call   0x10058940
1002c0ce:	ret    0x4
1002c0d1:	push   ebp
1002c0d2:	mov    ebp,esp
1002c0d4:	and    esp,0xfffffff8
1002c0d7:	push   ecx
1002c0d8:	push   edi
1002c0d9:	call   0x100223b7
1002c0de:	mov    ecx,eax
1002c0e0:	call   0x10022dfa
1002c0e5:	and    DWORD PTR [esi],0x0
1002c0e8:	mov    edi,eax
1002c0ea:	test   edi,edi
1002c0ec:	je     0x1002c120
1002c0ee:	push   DWORD PTR [ebp+0x14]
1002c0f1:	push   DWORD PTR [ebp+0x10]
1002c0f4:	push   DWORD PTR [ebp+0xc]
1002c0f7:	push   DWORD PTR [ebp+0x8]
1002c0fa:	push   DWORD PTR [esi]
1002c0fc:	push   ecx
1002c0fd:	call   0x100223b7
1002c102:	pop    ecx
1002c103:	push   eax
1002c104:	call   0x10022859
1002c109:	test   al,al
1002c10b:	je     0x1002c11a
1002c10d:	push   DWORD PTR [ebp+0x10]
1002c110:	call   0x10023d15
1002c115:	test   al,al
1002c117:	pop    ecx
1002c118:	jne    0x1002c127
1002c11a:	inc    DWORD PTR [esi]
1002c11c:	cmp    DWORD PTR [esi],edi
1002c11e:	jne    0x1002c0ee
1002c120:	xor    al,al
1002c122:	pop    edi
1002c123:	mov    esp,ebp
1002c125:	pop    ebp
1002c126:	ret    
1002c127:	mov    al,0x1
1002c129:	jmp    0x1002c122
1002c12b:	push   ebx
1002c12c:	mov    ebx,DWORD PTR [esp+0x8]
1002c130:	mov    eax,DWORD PTR [ebx]
1002c132:	cmp    BYTE PTR [eax+0x2c],0x0
1002c136:	push   esi
1002c137:	push   edi
1002c138:	je     0x1002c13e
1002c13a:	xor    al,al
1002c13c:	jmp    0x1002c168
1002c13e:	sub    esp,0x10
1002c141:	mov    BYTE PTR [ebx+0x10],0x1
1002c145:	mov    edi,esp
1002c147:	mov    esi,0x1006e178
1002c14c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c14d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c14e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c14f:	push   eax
1002c150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c151:	call   0x100082d9
1002c156:	test   eax,eax
1002c158:	je     0x1002c166
1002c15a:	mov    eax,DWORD PTR [eax+0xc]
1002c15d:	shr    eax,1
1002c15f:	not    al
1002c161:	and    al,0x1
1002c163:	mov    BYTE PTR [ebx+0x10],al
1002c166:	mov    al,0x1
1002c168:	pop    edi
1002c169:	pop    esi
1002c16a:	pop    ebx
1002c16b:	ret    0x4
1002c16e:	push   0x0
1002c170:	mov    eax,0x1005e53e
1002c175:	call   0x10058845
1002c17a:	mov    esi,DWORD PTR [ebp+0x8]
1002c17d:	and    DWORD PTR [ebp-0x4],0x0
1002c181:	mov    DWORD PTR [esi],0x10071b3c
1002c187:	and    DWORD PTR [esi+0x4],0x0
1002c18b:	push   0x4
1002c18d:	mov    BYTE PTR [ebp-0x4],0x1
1002c191:	call   0x1004239e
1002c196:	test   eax,eax
1002c198:	pop    ecx
1002c199:	je     0x1002c1a5
1002c19b:	mov    DWORD PTR [eax],0x100705c0
1002c1a1:	mov    edi,eax
1002c1a3:	jmp    0x1002c1a7
1002c1a5:	xor    edi,edi
1002c1a7:	mov    ecx,DWORD PTR [esi+0x4]
1002c1aa:	cmp    edi,ecx
1002c1ac:	je     0x1002c1b9
1002c1ae:	test   ecx,ecx
1002c1b0:	je     0x1002c1b9
1002c1b2:	mov    eax,DWORD PTR [ecx]
1002c1b4:	push   0x1
1002c1b6:	call   DWORD PTR [eax+0x4]
1002c1b9:	mov    DWORD PTR [esi+0x4],edi
1002c1bc:	mov    eax,esi
1002c1be:	call   0x1005891d
1002c1c3:	ret    0x4
1002c1c6:	push   0x4
1002c1c8:	mov    eax,0x1005e3be
1002c1cd:	call   0x10058845
1002c1d2:	mov    esi,ecx
1002c1d4:	mov    DWORD PTR [ebp-0x10],esi
1002c1d7:	and    DWORD PTR [ebp-0x4],0x0
1002c1db:	mov    ecx,DWORD PTR [esi+0x4]
1002c1de:	test   ecx,ecx
1002c1e0:	je     0x1002c1e9
1002c1e2:	mov    eax,DWORD PTR [ecx]
1002c1e4:	push   0x1
1002c1e6:	call   DWORD PTR [eax+0x4]
1002c1e9:	test   BYTE PTR [ebp+0x8],0x1
1002c1ed:	mov    DWORD PTR [esi],0x100705a0
1002c1f3:	je     0x1002c1fc
1002c1f5:	push   esi
1002c1f6:	call   0x10041d92
1002c1fb:	pop    ecx
1002c1fc:	mov    eax,esi
1002c1fe:	call   0x1005891d
1002c203:	ret    0x4
1002c206:	push   ebp
1002c207:	mov    ebp,esp
1002c209:	and    esp,0xfffffff8
1002c20c:	push   0xffffffff
1002c20e:	push   0x10062d06
1002c213:	mov    eax,fs:0x0
1002c219:	push   eax
1002c21a:	sub    esp,0x5d8
1002c220:	mov    eax,ds:0x1007d030
1002c225:	xor    eax,esp
1002c227:	mov    DWORD PTR [esp+0x5d0],eax
1002c22e:	push   ebx
1002c22f:	push   esi
1002c230:	push   edi
1002c231:	mov    eax,ds:0x1007d030
1002c236:	xor    eax,esp
1002c238:	push   eax
1002c239:	lea    eax,[esp+0x5e8]
1002c240:	mov    fs:0x0,eax
1002c246:	mov    ebx,DWORD PTR [ebp+0x8]
1002c249:	push   DWORD PTR [ebx]
1002c24b:	mov    DWORD PTR [esp+0x40],ecx
1002c24f:	lea    ecx,[esp+0x154]
1002c256:	call   0x1000868a
1002c25b:	xor    esi,esi
1002c25d:	mov    DWORD PTR [esp+0x5f0],esi
1002c264:	mov    eax,DWORD PTR [ebx+0x8]
1002c267:	cmp    DWORD PTR [eax+0xc],esi
1002c26a:	jne    0x1002c2f8
1002c270:	lea    eax,[esp+0x134]
1002c277:	push   eax
1002c278:	mov    eax,DWORD PTR [ebx+0x4]
1002c27b:	mov    eax,DWORD PTR [eax+0x4]
1002c27e:	call   0x100194bf
1002c283:	cmp    DWORD PTR [esp+0x168],0x10
1002c28b:	mov    ecx,DWORD PTR [esp+0x154]
1002c292:	jae    0x1002c29b
1002c294:	lea    ecx,[esp+0x154]
1002c29b:	cmp    DWORD PTR [eax+0x18],0x10
1002c29f:	jb     0x1002c2a6
1002c2a1:	mov    eax,DWORD PTR [eax+0x4]
1002c2a4:	jmp    0x1002c2a9
1002c2a6:	add    eax,0x4
1002c2a9:	push   ecx
1002c2aa:	push   eax
1002c2ab:	call   0x1000207c
1002c2b0:	pop    ecx
1002c2b1:	pop    ecx
1002c2b2:	push   esi
1002c2b3:	push   0x1
1002c2b5:	lea    ecx,[esp+0x13c]
1002c2bc:	call   0x100012f9
1002c2c1:	push   esi
1002c2c2:	push   0x1
1002c2c4:	lea    ecx,[esp+0x158]
1002c2cb:	call   0x100012f9
1002c2d0:	xor    al,al
1002c2d2:	mov    ecx,DWORD PTR [esp+0x5e8]
1002c2d9:	mov    DWORD PTR fs:0x0,ecx
1002c2e0:	pop    ecx
1002c2e1:	pop    edi
1002c2e2:	pop    esi
1002c2e3:	pop    ebx
1002c2e4:	mov    ecx,DWORD PTR [esp+0x5d0]
1002c2eb:	xor    ecx,esp
1002c2ed:	call   0x10041d97
1002c2f2:	mov    esp,ebp
1002c2f4:	pop    ebp
1002c2f5:	ret    0x4
1002c2f8:	mov    eax,DWORD PTR [ebx]
1002c2fa:	cmp    BYTE PTR [eax+0x2c],0x0
1002c2fe:	jne    0x1002c2c1
1002c300:	sub    esp,0x10
1002c303:	mov    edi,esp
1002c305:	mov    esi,0x1006e178
1002c30a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c30b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c30c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c30d:	push   eax
1002c30e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c30f:	call   0x100082d9
1002c314:	mov    edi,eax
1002c316:	xor    esi,esi
1002c318:	cmp    edi,esi
1002c31a:	mov    DWORD PTR [esp+0x28],edi
1002c31e:	je     0x1002c2c1
1002c320:	mov    eax,DWORD PTR [edi+0xc]
1002c323:	test   al,0x2
1002c325:	je     0x1002c2c1
1002c327:	test   al,0x4
1002c329:	jne    0x1002c3db
1002c32f:	mov    eax,DWORD PTR [ebx+0x4]
1002c332:	mov    edx,DWORD PTR [eax+0x10]
1002c335:	mov    ecx,DWORD PTR [ebx]
1002c337:	sub    edx,DWORD PTR [ecx+0x10]
1002c33a:	mov    eax,DWORD PTR [eax+0x14]
1002c33d:	sbb    eax,DWORD PTR [ecx+0x14]
1002c340:	push   esi
1002c341:	push   0x2710
1002c346:	push   eax
1002c347:	push   edx
1002c348:	call   0x1005e150
1002c34d:	add    eax,eax
1002c34f:	mov    ecx,0x7d0
1002c354:	cmp    eax,ecx
1002c356:	jae    0x1002c35a
1002c358:	mov    eax,ecx
1002c35a:	mov    ecx,DWORD PTR [edi+0x1c]
1002c35d:	push   eax
1002c35e:	push   ecx
1002c35f:	call   DWORD PTR ds:0x10065084
1002c365:	test   eax,eax
1002c367:	je     0x1002c395
1002c369:	cmp    DWORD PTR [esp+0x168],0x10
1002c371:	mov    eax,DWORD PTR [esp+0x154]
1002c378:	jae    0x1002c381
1002c37a:	lea    eax,[esp+0x154]
1002c381:	push   eax
1002c382:	call   0x1000207c
1002c387:	pop    ecx
1002c388:	push   0x5
1002c38a:	call   0x10037620
1002c38f:	pop    ecx
1002c390:	jmp    0x1002c2c1
1002c395:	mov    al,BYTE PTR [edi+0x18]
1002c398:	test   al,al
1002c39a:	jne    0x1002c3db
1002c39c:	cmp    DWORD PTR [esp+0x168],0x10
1002c3a4:	mov    eax,DWORD PTR [esp+0x154]
1002c3ab:	jae    0x1002c3b4
1002c3ad:	lea    eax,[esp+0x154]
1002c3b4:	push   eax
1002c3b5:	call   0x1000207c
1002c3ba:	pop    ecx
1002c3bb:	push   0x5
1002c3bd:	call   0x10037620
1002c3c2:	pop    ecx
1002c3c3:	xor    bl,bl
1002c3c5:	push   esi
1002c3c6:	push   0x1
1002c3c8:	lea    ecx,[esp+0x158]
1002c3cf:	call   0x100012f9
1002c3d4:	mov    al,bl
1002c3d6:	jmp    0x1002c2d2
1002c3db:	push   0x3d1b6930
1002c3e0:	push   0x10071a20
1002c3e5:	call   0x10003d63
1002c3ea:	push   eax
1002c3eb:	push   0x10
1002c3ed:	push   0x1006ca50
1002c3f2:	call   0x10003d75
1002c3f7:	add    esp,0x14
1002c3fa:	push   eax
1002c3fb:	lea    ecx,[esp+0xc8]
1002c402:	call   0x100011d6
1002c407:	push   esi
1002c408:	lea    eax,[esp+0xc8]
1002c40f:	push   eax
1002c410:	lea    eax,[esp+0x120]
1002c417:	push   eax
1002c418:	mov    BYTE PTR [esp+0x5fc],0x1
1002c420:	mov    eax,DWORD PTR [ebx+0x4]
1002c423:	add    eax,0x20
1002c426:	call   0x1000800f
1002c42b:	mov    BYTE PTR [esp+0x5f0],0x2
1002c433:	cmp    DWORD PTR [eax+0x18],0x10
1002c437:	jb     0x1002c43e
1002c439:	mov    eax,DWORD PTR [eax+0x4]
1002c43c:	jmp    0x1002c441
1002c43e:	add    eax,0x4
1002c441:	push   eax
1002c442:	lea    ecx,[esp+0x100]
1002c449:	call   0x100011d6
1002c44e:	lea    eax,[esp+0xfc]
1002c455:	push   eax
1002c456:	lea    esi,[esp+0x1c4]
1002c45d:	mov    BYTE PTR [esp+0x5f4],0x3
1002c465:	call   0x1002f5e0
1002c46a:	pop    ecx
1002c46b:	xor    esi,esi
1002c46d:	push   esi
1002c46e:	push   0x1
1002c470:	lea    ecx,[esp+0x104]
1002c477:	call   0x100012f9
1002c47c:	push   esi
1002c47d:	push   0x1
1002c47f:	lea    ecx,[esp+0x120]
1002c486:	call   0x100012f9
1002c48b:	push   esi
1002c48c:	push   0x1
1002c48e:	lea    ecx,[esp+0xcc]
1002c495:	mov    BYTE PTR [esp+0x5f8],0x7
1002c49d:	call   0x100012f9
1002c4a2:	mov    eax,DWORD PTR [ebx+0x8]
1002c4a5:	mov    eax,DWORD PTR [eax+0xc]
1002c4a8:	lea    ecx,[esp+0x1a4]
1002c4af:	push   ecx
1002c4b0:	call   0x100194bf
1002c4b5:	mov    BYTE PTR [esp+0x5f0],0x8
1002c4bd:	mov    eax,DWORD PTR [edi+0x10]
1002c4c0:	push   esi
1002c4c1:	mov    DWORD PTR [esp+0x20],eax
1002c4c5:	lea    eax,[edi+0x14]
1002c4c8:	push   eax
1002c4c9:	lea    eax,[esp+0x158]
1002c4d0:	push   eax
1002c4d1:	push   DWORD PTR [ebx+0x8]
1002c4d4:	push   DWORD PTR [ebx]
1002c4d6:	push   DWORD PTR [edi+0x8]
1002c4d9:	call   0x100223b7
1002c4de:	mov    ecx,DWORD PTR [esp+0x34]
1002c4e2:	push   eax
1002c4e3:	call   0x10022b41
1002c4e8:	test   al,al
1002c4ea:	jne    0x1002c518
1002c4ec:	cmp    DWORD PTR [esp+0x168],0x10
1002c4f4:	mov    eax,DWORD PTR [esp+0x154]
1002c4fb:	jae    0x1002c504
1002c4fd:	lea    eax,[esp+0x154]
1002c504:	push   eax
1002c505:	call   0x1000207c
1002c50a:	pop    ecx
1002c50b:	push   0x7
1002c50d:	call   0x10037620
1002c512:	pop    ecx
1002c513:	jmp    0x1002c8be
1002c518:	mov    eax,DWORD PTR [edi+0x10]
1002c51b:	lea    edx,[esp+0x1c]
1002c51f:	push   edx
1002c520:	mov    DWORD PTR [esp+0x20],esi
1002c524:	mov    ecx,DWORD PTR [eax]
1002c526:	push   eax
1002c527:	call   DWORD PTR [ecx+0x28]
1002c52a:	push   esi
1002c52b:	lea    ecx,[esp+0x170]
1002c532:	mov    DWORD PTR [esp+0x188],0xf
1002c53d:	call   0x10001425
1002c542:	mov    BYTE PTR [esp+0x5f0],0x9
1002c54a:	cmp    DWORD PTR [esp+0x1c],esi
1002c54e:	je     0x1002c6e3
1002c554:	mov    DWORD PTR [esp+0x18],0x1
1002c55c:	jmp    0x1002c562
1002c55e:	mov    edi,DWORD PTR [esp+0x28]
1002c562:	lea    eax,[esp+0x4c]
1002c566:	push   eax
1002c567:	call   DWORD PTR ds:0x1006528c
1002c56d:	mov    eax,DWORD PTR [esp+0x18]
1002c571:	mov    WORD PTR [esp+0x5c],0x16
1002c578:	mov    DWORD PTR [esp+0x64],eax
1002c57c:	mov    BYTE PTR [esp+0x5f0],0xb
1002c584:	mov    eax,DWORD PTR [edi+0x10]
1002c587:	mov    ecx,DWORD PTR [eax]
1002c589:	lea    edx,[esp+0x4c]
1002c58d:	push   edx
1002c58e:	sub    esp,0x10
1002c591:	mov    edi,esp
1002c593:	lea    esi,[esp+0x70]
1002c597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c599:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c59a:	push   eax
1002c59b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c59c:	call   DWORD PTR [ecx+0x20]
1002c59f:	test   eax,eax
1002c5a1:	lea    eax,[esp+0x5c]
1002c5a5:	mov    BYTE PTR [esp+0x5f0],0xa
1002c5ad:	mov    esi,DWORD PTR ds:0x10065294
1002c5b3:	push   eax
1002c5b4:	setge  BYTE PTR [esp+0x1b]
1002c5b9:	call   esi
1002c5bb:	cmp    BYTE PTR [esp+0x17],0x0
1002c5c0:	je     0x1002c6bf
1002c5c6:	lea    ecx,[esp+0x4c]
1002c5ca:	call   0x1002abcc
1002c5cf:	xor    edi,edi
1002c5d1:	cmp    eax,edi
1002c5d3:	mov    DWORD PTR [esp+0x20],edi
1002c5d7:	je     0x1002c5e8
1002c5d9:	mov    ecx,DWORD PTR [eax]
1002c5db:	lea    edx,[esp+0x20]
1002c5df:	push   edx
1002c5e0:	push   0x100717dc
1002c5e5:	push   eax
1002c5e6:	call   DWORD PTR [ecx]
1002c5e8:	mov    BYTE PTR [esp+0x5f0],0xc
1002c5f0:	mov    eax,DWORD PTR [esp+0x20]
1002c5f4:	lea    edx,[esp+0x34]
1002c5f8:	push   edx
1002c5f9:	mov    DWORD PTR [esp+0x38],edi
1002c5fd:	mov    ecx,DWORD PTR [eax]
1002c5ff:	push   eax
1002c600:	call   DWORD PTR [ecx+0x24]
1002c603:	mov    eax,DWORD PTR [esp+0x28]
1002c607:	mov    eax,DWORD PTR [eax+0x10]
1002c60a:	mov    ecx,DWORD PTR [eax]
1002c60c:	lea    edx,[esp+0x38]
1002c610:	push   edx
1002c611:	push   DWORD PTR [esp+0x1c]
1002c615:	push   eax
1002c616:	call   DWORD PTR [ecx+0x24]
1002c619:	test   eax,eax
1002c61b:	jl     0x1002c6a9
1002c621:	mov    ecx,DWORD PTR [esp+0x38]
1002c625:	push   edi
1002c626:	lea    edi,[esp+0x34]
1002c62a:	call   0x1000d3e7
1002c62f:	mov    BYTE PTR [esp+0x5f0],0xd
1002c637:	cmp    DWORD PTR [esp+0x180],0x0
1002c63f:	jbe    0x1002c653
1002c641:	push   0x10071a44
1002c646:	lea    eax,[esp+0x170]
1002c64d:	push   eax
1002c64e:	call   0x10005e98
1002c653:	lea    eax,[esp+0x30]
1002c657:	call   0x1000d447
1002c65c:	push   eax
1002c65d:	lea    eax,[esp+0x170]
1002c664:	push   eax
1002c665:	call   0x10005e98
1002c66a:	push   0x1006c900
1002c66f:	lea    eax,[esp+0x170]
1002c676:	push   eax
1002c677:	call   0x10005e98
1002c67c:	push   0xa
1002c67e:	lea    eax,[esp+0x1e0]
1002c685:	push   eax
1002c686:	push   DWORD PTR [esp+0x3c]
1002c68a:	call   0x10044846
1002c68f:	add    esp,0xc
1002c692:	push   eax
1002c693:	lea    eax,[esp+0x170]
1002c69a:	push   eax
1002c69b:	call   0x10005e98
1002c6a0:	lea    edi,[esp+0x30]
1002c6a4:	call   0x1000256d
1002c6a9:	mov    BYTE PTR [esp+0x5f0],0xa
1002c6b1:	mov    eax,DWORD PTR [esp+0x20]
1002c6b5:	test   eax,eax
1002c6b7:	je     0x1002c6bf
1002c6b9:	mov    ecx,DWORD PTR [eax]
1002c6bb:	push   eax
1002c6bc:	call   DWORD PTR [ecx+0x8]
1002c6bf:	lea    eax,[esp+0x4c]
1002c6c3:	push   eax
1002c6c4:	mov    BYTE PTR [esp+0x5f4],0x9
1002c6cc:	call   esi
1002c6ce:	inc    DWORD PTR [esp+0x18]
1002c6d2:	mov    eax,DWORD PTR [esp+0x18]
1002c6d6:	dec    eax
1002c6d7:	cmp    eax,DWORD PTR [esp+0x1c]
1002c6db:	jne    0x1002c55e
1002c6e1:	xor    esi,esi
1002c6e3:	mov    eax,DWORD PTR [ebx+0x8]
1002c6e6:	mov    eax,DWORD PTR [eax+0xc]
1002c6e9:	lea    ecx,[esp+0x188]
1002c6f0:	push   ecx
1002c6f1:	call   0x100194bf
1002c6f6:	lea    ecx,[esp+0x188]
1002c6fd:	lea    eax,[esp+0x1a4]
1002c704:	mov    BYTE PTR [esp+0x5f0],0xe
1002c70c:	call   0x10005e11
1002c711:	test   al,al
1002c713:	jne    0x1002c85f
1002c719:	push   0x7c83ddae
1002c71e:	push   0x10071a48
1002c723:	call   0x10003d63
1002c728:	push   0x3695da8
1002c72d:	push   eax
1002c72e:	call   0x10003d63
1002c733:	push   eax
1002c734:	push   0x11
1002c736:	push   0x1006c8c0
1002c73b:	call   0x10003d75
1002c740:	add    esp,0x1c
1002c743:	push   eax
1002c744:	lea    ecx,[esp+0xac]
1002c74b:	call   0x100011d6
1002c750:	lea    eax,[esp+0xa8]
1002c757:	push   eax
1002c758:	mov    BYTE PTR [esp+0x5f4],0xf
1002c760:	mov    eax,DWORD PTR [ebx+0x8]
1002c763:	add    eax,0x20
1002c766:	push   eax
1002c767:	call   0x10007dad
1002c76c:	push   esi
1002c76d:	push   0x1
1002c76f:	lea    ecx,[esp+0xb0]
1002c776:	mov    BYTE PTR [esp+0x5f8],0xe
1002c77e:	call   0x100012f9
1002c783:	push   0x10071a84
1002c788:	push   0xe
1002c78a:	mov    esi,0x1006c62c
1002c78f:	push   esi
1002c790:	call   0x10003d75
1002c795:	add    esp,0xc
1002c798:	push   eax
1002c799:	lea    ecx,[esp+0x74]
1002c79d:	call   0x100011d6
1002c7a2:	lea    eax,[esp+0x70]
1002c7a6:	push   eax
1002c7a7:	mov    BYTE PTR [esp+0x5f4],0x10
1002c7af:	mov    eax,DWORD PTR [ebx+0x8]
1002c7b2:	add    eax,0x20
1002c7b5:	push   eax
1002c7b6:	call   0x10007dad
1002c7bb:	xor    edi,edi
1002c7bd:	push   edi
1002c7be:	push   0x1
1002c7c0:	lea    ecx,[esp+0x78]
1002c7c4:	mov    BYTE PTR [esp+0x5f8],0xe
1002c7cc:	call   0x100012f9
1002c7d1:	push   0xa
1002c7d3:	lea    eax,[esp+0x1e0]
1002c7da:	push   eax
1002c7db:	push   DWORD PTR [esp+0x1a4]
1002c7e2:	call   0x10044846
1002c7e7:	add    esp,0xc
1002c7ea:	push   eax
1002c7eb:	lea    ecx,[esp+0xe4]
1002c7f2:	call   0x100011d6
1002c7f7:	push   0x10071abc
1002c7fc:	push   0xe
1002c7fe:	push   esi
1002c7ff:	mov    BYTE PTR [esp+0x5fc],0x11
1002c807:	call   0x10003d75
1002c80c:	add    esp,0xc
1002c80f:	push   eax
1002c810:	lea    ecx,[esp+0x90]
1002c817:	call   0x100011d6
1002c81c:	mov    BYTE PTR [esp+0x5f0],0x12
1002c824:	mov    edx,DWORD PTR [ebx+0x8]
1002c827:	push   edi
1002c828:	lea    eax,[esp+0x90]
1002c82f:	push   eax
1002c830:	add    edx,0x20
1002c833:	lea    ecx,[esp+0xe8]
1002c83a:	call   0x10007aa4
1002c83f:	push   edi
1002c840:	push   0x1
1002c842:	lea    ecx,[esp+0x94]
1002c849:	call   0x100012f9
1002c84e:	push   edi
1002c84f:	push   0x1
1002c851:	lea    ecx,[esp+0xe8]
1002c858:	call   0x100012f9
1002c85d:	xor    esi,esi
1002c85f:	cmp    DWORD PTR [esp+0x184],0x10
1002c867:	mov    ecx,DWORD PTR [esp+0x170]
1002c86e:	jae    0x1002c877
1002c870:	lea    ecx,[esp+0x170]
1002c877:	cmp    DWORD PTR [esp+0x168],0x10
1002c87f:	mov    eax,DWORD PTR [esp+0x154]
1002c886:	jae    0x1002c88f
1002c888:	lea    eax,[esp+0x154]
1002c88f:	push   ecx
1002c890:	push   eax
1002c891:	call   0x1000207c
1002c896:	pop    ecx
1002c897:	pop    ecx
1002c898:	push   esi
1002c899:	push   0x1
1002c89b:	lea    ecx,[esp+0x190]
1002c8a2:	call   0x100012f9
1002c8a7:	push   esi
1002c8a8:	push   0x1
1002c8aa:	lea    ecx,[esp+0x174]
1002c8b1:	mov    BYTE PTR [esp+0x5f8],0x8
1002c8b9:	call   0x100012f9
1002c8be:	push   DWORD PTR [ebx]
1002c8c0:	call   0x1000831a
1002c8c5:	mov    DWORD PTR [esp+0x24],eax
1002c8c9:	mov    BYTE PTR [esp+0x5f0],0x13
1002c8d1:	push   DWORD PTR [ebx+0x8]
1002c8d4:	call   0x10008b2e
1002c8d9:	mov    DWORD PTR [esp+0x2c],eax
1002c8dd:	mov    BYTE PTR [esp+0x5f0],0x14
1002c8e5:	lea    eax,[esp+0x24]
1002c8e9:	mov    DWORD PTR [esp+0x40],eax
1002c8ed:	lea    eax,[esp+0x2c]
1002c8f1:	mov    DWORD PTR [esp+0x44],eax
1002c8f5:	mov    eax,DWORD PTR [esp+0x3c]
1002c8f9:	mov    ecx,DWORD PTR [eax+0x4]
1002c8fc:	lea    edx,[esp+0x40]
1002c900:	mov    BYTE PTR [esp+0x48],0x0
1002c905:	mov    eax,DWORD PTR [ecx]
1002c907:	push   edx
1002c908:	call   DWORD PTR [eax]
1002c90a:	lea    eax,[esp+0x2c]
1002c90e:	mov    BYTE PTR [esp+0x5f0],0x13
1002c916:	call   0x10009963
1002c91b:	mov    BYTE PTR [esp+0x5f0],0x8
1002c923:	cmp    DWORD PTR [esp+0x24],esi
1002c927:	je     0x1002c932
1002c929:	push   DWORD PTR [esp+0x24]
1002c92d:	call   0x100099e0
1002c932:	push   esi
1002c933:	push   0x1
1002c935:	lea    ecx,[esp+0x1ac]
1002c93c:	call   0x100012f9
1002c941:	push   esi
1002c942:	push   0x1
1002c944:	lea    ecx,[esp+0x1c8]
1002c94b:	call   0x100012f9
1002c950:	mov    bl,0x1
1002c952:	xor    esi,esi
1002c954:	jmp    0x1002c3c5
1002c959:	push   ebp
1002c95a:	sub    esp,0x400
1002c960:	lea    ebp,[esp-0x4]
1002c964:	mov    eax,ds:0x1007d030
1002c969:	xor    eax,ebp
1002c96b:	mov    DWORD PTR [ebp+0x400],eax
1002c971:	push   0x44
1002c973:	mov    eax,0x1005ee00
1002c978:	call   0x10058845
1002c97d:	xor    edi,edi
1002c97f:	mov    DWORD PTR [ebp-0x4],edi
1002c982:	mov    DWORD PTR [ebp-0x30],edi
1002c985:	mov    eax,DWORD PTR [ebx]
1002c987:	lea    edx,[ebp-0x1c]
1002c98a:	mov    esi,ecx
1002c98c:	push   edx
1002c98d:	mov    DWORD PTR [ebp-0x1c],edi
1002c990:	mov    ecx,DWORD PTR [eax]
1002c992:	push   eax
1002c993:	mov    DWORD PTR [ebp-0x28],esi
1002c996:	call   DWORD PTR [ecx+0x28]
1002c999:	call   0x10003ba8
1002c99e:	xor    esi,esi
1002c9a0:	mov    DWORD PTR [ebp-0x4],edi
1002c9a3:	inc    esi
1002c9a4:	cmp    DWORD PTR [ebp-0x1c],edi
1002c9a7:	mov    DWORD PTR [ebp-0x30],esi
1002c9aa:	je     0x1002cadc
1002c9b0:	mov    DWORD PTR [ebp-0x14],esi
1002c9b3:	jmp    0x1002c9b8
1002c9b5:	xor    esi,esi
1002c9b7:	inc    esi
1002c9b8:	lea    eax,[ebp-0x40]
1002c9bb:	push   eax
1002c9bc:	call   DWORD PTR ds:0x1006528c
1002c9c2:	mov    eax,DWORD PTR [ebp-0x14]
1002c9c5:	mov    DWORD PTR [ebp-0x4],esi
1002c9c8:	mov    WORD PTR [ebp-0x50],0x16
1002c9ce:	mov    DWORD PTR [ebp-0x48],eax
1002c9d1:	lea    edx,[ebp-0x40]
1002c9d4:	push   edx
1002c9d5:	mov    BYTE PTR [ebp-0x4],0x2
1002c9d9:	mov    eax,DWORD PTR [ebx]
1002c9db:	mov    ecx,DWORD PTR [eax]
1002c9dd:	sub    esp,0x10
1002c9e0:	mov    edi,esp
1002c9e2:	lea    esi,[ebp-0x50]
1002c9e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c9e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c9e8:	push   eax
1002c9e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002c9ea:	call   DWORD PTR [ecx+0x20]
1002c9ed:	test   eax,eax
1002c9ef:	lea    eax,[ebp-0x50]
1002c9f2:	mov    BYTE PTR [ebp-0x4],0x1
1002c9f6:	mov    esi,DWORD PTR ds:0x10065294
1002c9fc:	push   eax
1002c9fd:	setge  BYTE PTR [ebp-0xd]
1002ca01:	call   esi
1002ca03:	cmp    BYTE PTR [ebp-0xd],0x0
1002ca07:	je     0x1002cac2
1002ca0d:	lea    ecx,[ebp-0x40]
1002ca10:	call   0x1002abcc
1002ca15:	xor    edi,edi
1002ca17:	cmp    eax,edi
1002ca19:	mov    DWORD PTR [ebp-0x18],edi
1002ca1c:	je     0x1002ca2c
1002ca1e:	mov    ecx,DWORD PTR [eax]
1002ca20:	lea    edx,[ebp-0x18]
1002ca23:	push   edx
1002ca24:	push   0x100717dc
1002ca29:	push   eax
1002ca2a:	call   DWORD PTR [ecx]
1002ca2c:	mov    BYTE PTR [ebp-0x4],0x3
1002ca30:	mov    eax,DWORD PTR [ebp-0x18]
1002ca33:	lea    edx,[ebp-0x24]
1002ca36:	push   edx
1002ca37:	mov    DWORD PTR [ebp-0x24],edi
1002ca3a:	mov    ecx,DWORD PTR [eax]
1002ca3c:	push   eax
1002ca3d:	call   DWORD PTR [ecx+0x24]
1002ca40:	mov    eax,DWORD PTR [ebx]
1002ca42:	mov    ecx,DWORD PTR [eax]
1002ca44:	lea    edx,[ebp-0x2c]
1002ca47:	push   edx
1002ca48:	push   DWORD PTR [ebp-0x14]
1002ca4b:	push   eax
1002ca4c:	call   DWORD PTR [ecx+0x24]
1002ca4f:	test   eax,eax
1002ca51:	jl     0x1002cab1
1002ca53:	mov    ecx,DWORD PTR [ebp-0x2c]
1002ca56:	push   edi
1002ca57:	lea    edi,[ebp-0x20]
1002ca5a:	call   0x1000d3e7
1002ca5f:	mov    BYTE PTR [ebp-0x4],0x4
1002ca63:	mov    edi,DWORD PTR [ebp-0x28]
1002ca66:	cmp    DWORD PTR [edi+0x14],0x0
1002ca6a:	jbe    0x1002ca77
1002ca6c:	push   0x10071a44
1002ca71:	push   edi
1002ca72:	call   0x10005e98
1002ca77:	lea    eax,[ebp-0x20]
1002ca7a:	call   0x1000d447
1002ca7f:	push   eax
1002ca80:	push   edi
1002ca81:	call   0x10005e98
1002ca86:	push   0x1006c900
1002ca8b:	push   edi
1002ca8c:	call   0x10005e98
1002ca91:	push   0xa
1002ca93:	lea    eax,[ebp+0x0]
1002ca96:	push   eax
1002ca97:	push   DWORD PTR [ebp-0x24]
1002ca9a:	call   0x10044846
1002ca9f:	add    esp,0xc
1002caa2:	push   eax
1002caa3:	push   edi
1002caa4:	call   0x10005e98
1002caa9:	lea    edi,[ebp-0x20]
1002caac:	call   0x1000256d
1002cab1:	mov    BYTE PTR [ebp-0x4],0x1
1002cab5:	mov    eax,DWORD PTR [ebp-0x18]
1002cab8:	test   eax,eax
1002caba:	je     0x1002cac2
1002cabc:	mov    ecx,DWORD PTR [eax]
1002cabe:	push   eax
1002cabf:	call   DWORD PTR [ecx+0x8]
1002cac2:	lea    eax,[ebp-0x40]
1002cac5:	push   eax
1002cac6:	mov    BYTE PTR [ebp-0x4],0x0
1002caca:	call   esi
1002cacc:	inc    DWORD PTR [ebp-0x14]
1002cacf:	mov    eax,DWORD PTR [ebp-0x14]
1002cad2:	dec    eax
1002cad3:	cmp    eax,DWORD PTR [ebp-0x1c]
1002cad6:	jne    0x1002c9b5
1002cadc:	mov    eax,DWORD PTR [ebp-0x28]
1002cadf:	mov    ecx,DWORD PTR [ebp-0xc]
1002cae2:	mov    DWORD PTR fs:0x0,ecx
1002cae9:	pop    ecx
1002caea:	pop    edi
1002caeb:	pop    esi
1002caec:	pop    ebx
1002caed:	mov    ecx,DWORD PTR [ebp+0x400]
1002caf3:	xor    ecx,ebp
1002caf5:	call   0x10041d97
1002cafa:	add    ebp,0x404
1002cb00:	leave  
1002cb01:	ret    
1002cb02:	push   ebp
1002cb03:	sub    esp,0x60
1002cb06:	lea    ebp,[esp-0x4]
1002cb0a:	mov    eax,ds:0x1007d030
1002cb0f:	xor    eax,ebp
1002cb11:	mov    DWORD PTR [ebp+0x60],eax
1002cb14:	push   0x54
1002cb16:	mov    eax,0x10062c1b
1002cb1b:	call   0x10058845
1002cb20:	mov    eax,DWORD PTR [ebp+0x6c]
1002cb23:	mov    ecx,DWORD PTR [eax]
1002cb25:	mov    DWORD PTR [ebp+0x4],ecx
1002cb28:	and    DWORD PTR [ebp-0x4],0x0
1002cb2c:	mov    ebx,DWORD PTR [eax+0x4]
1002cb2f:	mov    DWORD PTR [ebp+0x8],ebx
1002cb32:	push   ecx
1002cb33:	lea    ecx,[ebp+0x44]
1002cb36:	mov    BYTE PTR [ebp-0x4],0x1
1002cb3a:	call   0x1000868a
1002cb3f:	mov    BYTE PTR [ebp-0x4],0x2
1002cb43:	sub    esp,0x10
1002cb46:	mov    edi,esp
1002cb48:	mov    esi,0x1006e178
1002cb4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cb4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cb4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cb50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cb51:	mov    esi,DWORD PTR [ebp+0x4]
1002cb54:	push   esi
1002cb55:	call   0x10008287
1002cb5a:	mov    edi,eax
1002cb5c:	xor    ecx,ecx
1002cb5e:	cmp    edi,ecx
1002cb60:	jne    0x1002cb8b
1002cb62:	push   ecx
1002cb63:	push   0x1
1002cb65:	lea    ecx,[ebp+0x44]
1002cb68:	call   0x100012f9
1002cb6d:	lea    eax,[ebp+0x8]
1002cb70:	mov    BYTE PTR [ebp-0x4],0x0
1002cb74:	call   0x10009963
1002cb79:	or     DWORD PTR [ebp-0x4],0xffffffff
1002cb7d:	test   esi,esi
1002cb7f:	je     0x1002cdb7
1002cb85:	push   esi
1002cb86:	jmp    0x1002cdb2
1002cb8b:	mov    eax,DWORD PTR [edi+0xc]
1002cb8e:	test   al,0x1
1002cb90:	je     0x1002cb62
1002cb92:	test   al,0x8
1002cb94:	jne    0x1002cc51
1002cb9a:	mov    eax,DWORD PTR [ebx+0x10]
1002cb9d:	sub    eax,DWORD PTR [esi+0x10]
1002cba0:	mov    edx,DWORD PTR [ebx+0x14]
1002cba3:	sbb    edx,DWORD PTR [esi+0x14]
1002cba6:	push   ecx
1002cba7:	push   0x2710
1002cbac:	push   edx
1002cbad:	push   eax
1002cbae:	call   0x1005e150
1002cbb3:	add    eax,eax
1002cbb5:	mov    ecx,0x4e20
1002cbba:	cmp    eax,ecx
1002cbbc:	jae    0x1002cbc0
1002cbbe:	mov    eax,ecx
1002cbc0:	mov    ecx,DWORD PTR [edi+0x2c]
1002cbc3:	push   eax
1002cbc4:	push   ecx
1002cbc5:	call   DWORD PTR ds:0x10065084
1002cbcb:	test   eax,eax
1002cbcd:	je     0x1002cc0b
1002cbcf:	cmp    DWORD PTR [ebp+0x5c],0x10
1002cbd3:	mov    eax,DWORD PTR [ebp+0x48]
1002cbd6:	jae    0x1002cbdb
1002cbd8:	lea    eax,[ebp+0x48]
1002cbdb:	push   eax
1002cbdc:	call   0x1000207c
1002cbe1:	push   0x5
1002cbe3:	call   0x10037620
1002cbe8:	pop    ecx
1002cbe9:	pop    ecx
1002cbea:	push   0x0
1002cbec:	push   0x1
1002cbee:	lea    ecx,[ebp+0x44]
1002cbf1:	call   0x100012f9
1002cbf6:	lea    eax,[ebp+0x8]
1002cbf9:	mov    BYTE PTR [ebp-0x4],0x0
1002cbfd:	call   0x10009963
1002cc02:	or     DWORD PTR [ebp-0x4],0xffffffff
1002cc06:	jmp    0x1002cb85
1002cc0b:	mov    al,BYTE PTR [edi+0x28]
1002cc0e:	test   al,al
1002cc10:	jne    0x1002cc4e
1002cc12:	cmp    DWORD PTR [ebp+0x5c],0x10
1002cc16:	mov    eax,DWORD PTR [ebp+0x48]
1002cc19:	jae    0x1002cc1e
1002cc1b:	lea    eax,[ebp+0x48]
1002cc1e:	push   eax
1002cc1f:	call   0x1000207c
1002cc24:	push   0x5
1002cc26:	call   0x10037620
1002cc2b:	pop    ecx
1002cc2c:	pop    ecx
1002cc2d:	push   0x0
1002cc2f:	push   0x1
1002cc31:	lea    ecx,[ebp+0x44]
1002cc34:	call   0x100012f9
1002cc39:	lea    eax,[ebp+0x8]
1002cc3c:	mov    BYTE PTR [ebp-0x4],0x0
1002cc40:	call   0x10009963
1002cc45:	or     DWORD PTR [ebp-0x4],0xffffffff
1002cc49:	jmp    0x1002cdaf
1002cc4e:	mov    ebx,DWORD PTR [ebp+0x8]
1002cc51:	push   0x1b664456
1002cc56:	push   0x10071ae4
1002cc5b:	call   0x10003d63
1002cc60:	push   0x73ae009e
1002cc65:	push   eax
1002cc66:	call   0x10003d63
1002cc6b:	push   0x3eea7dec
1002cc70:	push   eax
1002cc71:	call   0x10003d63
1002cc76:	push   0x553dd4fe
1002cc7b:	push   eax
1002cc7c:	call   0x10003d63
1002cc81:	push   eax
1002cc82:	push   0x10
1002cc84:	push   0x1006ca50
1002cc89:	call   0x10003d75
1002cc8e:	add    esp,0x2c
1002cc91:	push   eax
1002cc92:	lea    ecx,[ebp-0x44]
1002cc95:	call   0x100011d6
1002cc9a:	push   0x0
1002cc9c:	lea    eax,[ebp-0x44]
1002cc9f:	push   eax
1002cca0:	lea    eax,[ebp-0x60]
1002cca3:	push   eax
1002cca4:	lea    eax,[ebx+0x20]
1002cca7:	mov    BYTE PTR [ebp-0x4],0x3
1002ccab:	call   0x1000800f
1002ccb0:	mov    BYTE PTR [ebp-0x4],0x4
1002ccb4:	cmp    DWORD PTR [eax+0x18],0x10
1002ccb8:	jb     0x1002ccbf
1002ccba:	mov    eax,DWORD PTR [eax+0x4]
1002ccbd:	jmp    0x1002ccc2
1002ccbf:	add    eax,0x4
1002ccc2:	push   eax
1002ccc3:	lea    ecx,[ebp-0x28]
1002ccc6:	call   0x100011d6
1002cccb:	lea    eax,[ebp-0x28]
1002ccce:	push   eax
1002cccf:	lea    esi,[ebp+0xc]
1002ccd2:	mov    BYTE PTR [ebp-0x4],0x5
1002ccd6:	call   0x1002f5e0
1002ccdb:	pop    ecx
1002ccdc:	xor    esi,esi
1002ccde:	push   esi
1002ccdf:	push   0x1
1002cce1:	lea    ecx,[ebp-0x28]
1002cce4:	call   0x100012f9
1002cce9:	push   esi
1002ccea:	push   0x1
1002ccec:	lea    ecx,[ebp-0x60]
1002ccef:	call   0x100012f9
1002ccf4:	push   esi
1002ccf5:	push   0x1
1002ccf7:	lea    ecx,[ebp-0x44]
1002ccfa:	mov    BYTE PTR [ebp-0x4],0x9
1002ccfe:	call   0x100012f9
1002cd03:	lea    esi,[edi+0x20]
1002cd06:	mov    eax,DWORD PTR [esi]
1002cd08:	push   0x1
1002cd0a:	mov    DWORD PTR [ebp+0x0],eax
1002cd0d:	lea    eax,[edi+0x24]
1002cd10:	push   eax
1002cd11:	lea    eax,[ebp+0x44]
1002cd14:	push   eax
1002cd15:	push   ebx
1002cd16:	push   DWORD PTR [ebp+0x4]
1002cd19:	push   DWORD PTR [edi+0x8]
1002cd1c:	call   0x100223b7
1002cd21:	mov    ecx,DWORD PTR [ebp+0x0]
1002cd24:	push   eax
1002cd25:	call   0x10022b41
1002cd2a:	test   al,al
1002cd2c:	jne    0x1002cd4b
1002cd2e:	cmp    DWORD PTR [ebp+0x5c],0x10
1002cd32:	mov    eax,DWORD PTR [ebp+0x48]
1002cd35:	jae    0x1002cd3a
1002cd37:	lea    eax,[ebp+0x48]
1002cd3a:	push   eax
1002cd3b:	call   0x1000207c
1002cd40:	push   0x7
1002cd42:	call   0x10037620
1002cd47:	pop    ecx
1002cd48:	pop    ecx
1002cd49:	jmp    0x1002cd82
1002cd4b:	mov    ebx,esi
1002cd4d:	lea    ecx,[ebp+0x28]
1002cd50:	call   0x1002c959
1002cd55:	cmp    DWORD PTR [ebp+0x40],0x10
1002cd59:	mov    ecx,DWORD PTR [ebp+0x2c]
1002cd5c:	jae    0x1002cd61
1002cd5e:	lea    ecx,[ebp+0x2c]
1002cd61:	cmp    DWORD PTR [ebp+0x5c],0x10
1002cd65:	mov    eax,DWORD PTR [ebp+0x48]
1002cd68:	jae    0x1002cd6d
1002cd6a:	lea    eax,[ebp+0x48]
1002cd6d:	push   ecx
1002cd6e:	push   eax
1002cd6f:	call   0x1000207c
1002cd74:	pop    ecx
1002cd75:	pop    ecx
1002cd76:	push   0x0
1002cd78:	push   0x1
1002cd7a:	lea    ecx,[ebp+0x28]
1002cd7d:	call   0x100012f9
1002cd82:	xor    esi,esi
1002cd84:	push   esi
1002cd85:	push   0x1
1002cd87:	lea    ecx,[ebp+0xc]
1002cd8a:	call   0x100012f9
1002cd8f:	push   esi
1002cd90:	push   0x1
1002cd92:	lea    ecx,[ebp+0x44]
1002cd95:	call   0x100012f9
1002cd9a:	lea    eax,[ebp+0x8]
1002cd9d:	mov    BYTE PTR [ebp-0x4],0x0
1002cda1:	call   0x10009963
1002cda6:	or     DWORD PTR [ebp-0x4],0xffffffff
1002cdaa:	cmp    DWORD PTR [ebp+0x4],esi
1002cdad:	je     0x1002cdb7
1002cdaf:	push   DWORD PTR [ebp+0x4]
1002cdb2:	call   0x100099e0
1002cdb7:	xor    eax,eax
1002cdb9:	mov    ecx,DWORD PTR [ebp-0xc]
1002cdbc:	mov    DWORD PTR fs:0x0,ecx
1002cdc3:	pop    ecx
1002cdc4:	pop    edi
1002cdc5:	pop    esi
1002cdc6:	pop    ebx
1002cdc7:	mov    ecx,DWORD PTR [ebp+0x60]
1002cdca:	xor    ecx,ebp
1002cdcc:	call   0x10041d97
1002cdd1:	add    ebp,0x64
1002cdd4:	leave  
1002cdd5:	ret    0x4
1002cdd8:	push   ebx
1002cdd9:	push   ebp
1002cdda:	mov    ebp,DWORD PTR [esp+0xc]
1002cdde:	mov    eax,DWORD PTR [ebp+0x0]
1002cde1:	mov    eax,DWORD PTR [eax]
1002cde3:	push   esi
1002cde4:	push   edi
1002cde5:	sub    esp,0x10
1002cde8:	mov    edi,esp
1002cdea:	mov    esi,0x1006e178
1002cdef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cdf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cdf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cdf2:	push   eax
1002cdf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002cdf4:	call   0x10008287
1002cdf9:	test   eax,eax
1002cdfb:	jne    0x1002ce01
1002cdfd:	xor    al,al
1002cdff:	jmp    0x1002ce3a
1002ce01:	push   0x8
1002ce03:	call   0x1004239e
1002ce08:	pop    ecx
1002ce09:	mov    ecx,DWORD PTR [ebp+0x0]
1002ce0c:	mov    edx,DWORD PTR [ecx]
1002ce0e:	xor    ebx,ebx
1002ce10:	push   ebx
1002ce11:	push   ebx
1002ce12:	mov    DWORD PTR [ecx],ebx
1002ce14:	push   eax
1002ce15:	mov    DWORD PTR [eax],edx
1002ce17:	mov    ecx,DWORD PTR [ebp+0x4]
1002ce1a:	mov    edx,DWORD PTR [ecx]
1002ce1c:	push   0x1002cb02
1002ce21:	push   ebx
1002ce22:	mov    DWORD PTR [ecx],ebx
1002ce24:	push   ebx
1002ce25:	mov    DWORD PTR [eax+0x4],edx
1002ce28:	call   DWORD PTR ds:0x10065098
1002ce2e:	push   ebx
1002ce2f:	mov    BYTE PTR [ebp+0x8],bl
1002ce32:	call   0x10041d92
1002ce37:	pop    ecx
1002ce38:	mov    al,0x1
1002ce3a:	pop    edi
1002ce3b:	pop    esi
1002ce3c:	pop    ebp
1002ce3d:	pop    ebx
1002ce3e:	ret    0x4
1002ce41:	mov    ecx,DWORD PTR [eax]
1002ce43:	test   ecx,ecx
1002ce45:	je     0x1002ce4e
1002ce47:	mov    eax,DWORD PTR [ecx]
1002ce49:	push   0x1
1002ce4b:	call   DWORD PTR [eax+0x4]
1002ce4e:	ret    
1002ce4f:	mov    eax,DWORD PTR [esp+0x8]
1002ce53:	test   eax,eax
1002ce55:	jne    0x1002ce5e
1002ce57:	mov    eax,0x80004003
1002ce5c:	jmp    0x1002ce66
1002ce5e:	mov    DWORD PTR [eax],0x1
1002ce64:	xor    eax,eax
1002ce66:	ret    0x8
1002ce69:	push   edi
1002ce6a:	mov    edi,DWORD PTR [esp+0x14]
1002ce6e:	mov    ecx,0x1007e9c0
1002ce73:	call   0x10010198
1002ce78:	pop    edi
1002ce79:	ret    0x10
1002ce7c:	push   DWORD PTR [esp+0x18]
1002ce80:	mov    eax,0x1007e9c0
1002ce85:	push   DWORD PTR [esp+0x14]
1002ce89:	push   DWORD PTR [esp+0x14]
1002ce8d:	call   0x100101c6
1002ce92:	ret    0x18
1002ce95:	push   ebp
1002ce96:	mov    ebp,esp
1002ce98:	push   DWORD PTR [ebp+0x28]
1002ce9b:	mov    eax,0x1007e9c0
1002cea0:	push   DWORD PTR [ebp+0x24]
1002cea3:	push   DWORD PTR [ebp+0x20]
1002cea6:	push   DWORD PTR [ebp+0x1c]
1002cea9:	push   DWORD PTR [ebp+0x18]
1002ceac:	push   DWORD PTR [ebp+0xc]
1002ceaf:	push   DWORD PTR [ebp+0x8]
1002ceb2:	call   0x10010269
1002ceb7:	pop    ebp
1002ceb8:	ret    0x24
1002cebb:	push   edi
1002cebc:	mov    edi,DWORD PTR [esp+0x14]
1002cec0:	mov    ecx,0x1007e9dc
1002cec5:	call   0x10010198
1002ceca:	pop    edi
1002cecb:	ret    0x10
1002cece:	push   DWORD PTR [esp+0x18]
1002ced2:	mov    eax,0x1007e9dc
1002ced7:	push   DWORD PTR [esp+0x14]
1002cedb:	push   DWORD PTR [esp+0x14]
1002cedf:	call   0x100101c6
1002cee4:	ret    0x18
1002cee7:	push   ebp
1002cee8:	mov    ebp,esp
1002ceea:	push   DWORD PTR [ebp+0x28]
1002ceed:	mov    eax,0x1007e9dc
1002cef2:	push   DWORD PTR [ebp+0x24]
1002cef5:	push   DWORD PTR [ebp+0x20]
1002cef8:	push   DWORD PTR [ebp+0x1c]
1002cefb:	push   DWORD PTR [ebp+0x18]
1002cefe:	push   DWORD PTR [ebp+0xc]
1002cf01:	push   DWORD PTR [ebp+0x8]
1002cf04:	call   0x10010269
1002cf09:	pop    ebp
1002cf0a:	ret    0x24
1002cf0d:	mov    edx,DWORD PTR [esp+0x8]
1002cf11:	test   edx,edx
1002cf13:	jne    0x1002cf1c
1002cf15:	mov    eax,0x80004003
1002cf1a:	jmp    0x1002cf37
1002cf1c:	mov    eax,DWORD PTR [esp+0x4]
1002cf20:	mov    ecx,DWORD PTR [eax+0x8]
1002cf23:	test   ecx,ecx
1002cf25:	jne    0x1002cf2b
1002cf27:	xor    eax,eax
1002cf29:	jmp    0x1002cf33
1002cf2b:	mov    eax,DWORD PTR [eax+0xc]
1002cf2e:	sub    eax,ecx
1002cf30:	sar    eax,0x4
1002cf33:	mov    DWORD PTR [edx],eax
1002cf35:	xor    eax,eax
1002cf37:	ret    0x8
1002cf3a:	push   ebp
1002cf3b:	mov    ebp,esp
1002cf3d:	and    esp,0xfffffff8
1002cf40:	sub    esp,0x14
1002cf43:	cmp    DWORD PTR [ebp+0x10],0x0
1002cf47:	push   ebx
1002cf48:	push   esi
1002cf49:	push   edi
1002cf4a:	jne    0x1002cf56
1002cf4c:	mov    eax,0x80004003
1002cf51:	jmp    0x1002d016
1002cf56:	cmp    DWORD PTR [ebp+0xc],0x1
1002cf5a:	jge    0x1002cf66
1002cf5c:	mov    eax,0x80070057
1002cf61:	jmp    0x1002d016
1002cf66:	mov    ebx,DWORD PTR [ebp+0x8]
1002cf69:	mov    esi,DWORD PTR [ebx+0x8]
1002cf6c:	dec    DWORD PTR [ebp+0xc]
1002cf6f:	add    ebx,0x4
1002cf72:	cmp    esi,DWORD PTR [ebx+0x8]
1002cf75:	mov    DWORD PTR [esp+0xc],0x80004005
1002cf7d:	jbe    0x1002cf84
1002cf7f:	call   0x100422b0
1002cf84:	mov    edi,ebx
1002cf86:	mov    DWORD PTR [esp+0x10],edi
1002cf8a:	mov    DWORD PTR [esp+0x14],esi
1002cf8e:	mov    esi,DWORD PTR [ebx+0x8]
1002cf91:	cmp    DWORD PTR [ebx+0x4],esi
1002cf94:	jbe    0x1002cf9b
1002cf96:	call   0x100422b0
1002cf9b:	test   edi,edi
1002cf9d:	je     0x1002cfa3
1002cf9f:	cmp    edi,ebx
1002cfa1:	je     0x1002cfa8
1002cfa3:	call   0x100422b0
1002cfa8:	cmp    DWORD PTR [esp+0x14],esi
1002cfac:	je     0x1002cfca
1002cfae:	cmp    DWORD PTR [ebp+0xc],0x0
1002cfb2:	jle    0x1002cfca
1002cfb4:	lea    edi,[esp+0x18]
1002cfb8:	lea    esi,[esp+0x10]
1002cfbc:	call   0x1002da59
1002cfc1:	dec    DWORD PTR [ebp+0xc]
1002cfc4:	mov    edi,DWORD PTR [esp+0x10]
1002cfc8:	jmp    0x1002cf8e
1002cfca:	mov    esi,DWORD PTR [ebx+0x8]
1002cfcd:	cmp    DWORD PTR [ebx+0x4],esi
1002cfd0:	jbe    0x1002cfd7
1002cfd2:	call   0x100422b0
1002cfd7:	test   edi,edi
1002cfd9:	je     0x1002cfdf
1002cfdb:	cmp    edi,ebx
1002cfdd:	je     0x1002cfe4
1002cfdf:	call   0x100422b0
1002cfe4:	mov    ebx,DWORD PTR [esp+0x14]
1002cfe8:	cmp    ebx,esi
1002cfea:	je     0x1002d012
1002cfec:	test   edi,edi
1002cfee:	jne    0x1002cff5
1002cff0:	call   0x100422b0
1002cff5:	cmp    ebx,DWORD PTR [edi+0x8]
1002cff8:	jb     0x1002cfff
1002cffa:	call   0x100422b0
1002cfff:	mov    eax,DWORD PTR [ebp+0x10]
1002d002:	and    WORD PTR [eax],0x0
1002d006:	push   ebx
1002d007:	push   eax
1002d008:	call   DWORD PTR ds:0x10065280
1002d00e:	mov    DWORD PTR [esp+0xc],eax
1002d012:	mov    eax,DWORD PTR [esp+0xc]
1002d016:	pop    edi
1002d017:	pop    esi
1002d018:	pop    ebx
1002d019:	mov    esp,ebp
1002d01b:	pop    ebp
1002d01c:	ret    0xc
1002d01f:	push   ebp
1002d020:	mov    ebp,esp
1002d022:	push   edi
1002d023:	mov    edi,DWORD PTR [ebp+0xc]
1002d026:	test   edi,edi
1002d028:	jne    0x1002d031
1002d02a:	mov    eax,0x80004003
1002d02f:	jmp    0x1002d07c
1002d031:	and    DWORD PTR [edi],0x0
1002d034:	push   ebx
1002d035:	push   esi
1002d036:	lea    eax,[ebp+0xc]
1002d039:	push   eax
1002d03a:	call   0x1002e6db
1002d03f:	mov    ebx,DWORD PTR [ebp+0xc]
1002d042:	mov    esi,eax
1002d044:	test   esi,esi
1002d046:	jl     0x1002d06b
1002d048:	mov    eax,DWORD PTR [ebp+0x8]
1002d04b:	lea    ecx,[eax+0x4]
1002d04e:	push   ecx
1002d04f:	call   0x1002daca
1002d054:	mov    esi,eax
1002d056:	test   esi,esi
1002d058:	jne    0x1002d06b
1002d05a:	mov    eax,DWORD PTR [ebx]
1002d05c:	push   edi
1002d05d:	push   0x1006c9b4
1002d062:	push   ebx
1002d063:	call   DWORD PTR [eax]
1002d065:	mov    esi,eax
1002d067:	test   esi,esi
1002d069:	je     0x1002d078
1002d06b:	test   ebx,ebx
1002d06d:	je     0x1002d078
1002d06f:	mov    eax,DWORD PTR [ebx]
1002d071:	push   0x1
1002d073:	mov    ecx,ebx
1002d075:	call   DWORD PTR [eax+0x1c]
1002d078:	mov    eax,esi
1002d07a:	pop    esi
1002d07b:	pop    ebx
1002d07c:	pop    edi
1002d07d:	pop    ebp
1002d07e:	ret    0x8
1002d081:	mov    eax,DWORD PTR [esi+0x4]
1002d084:	test   eax,eax
1002d086:	je     0x1002d099
1002d088:	push   DWORD PTR [esi+0x8]
1002d08b:	call   0x1002dc6c
1002d090:	push   DWORD PTR [esi+0x4]
1002d093:	call   0x10041d92
1002d098:	pop    ecx
1002d099:	and    DWORD PTR [esi+0x4],0x0
1002d09d:	and    DWORD PTR [esi+0x8],0x0
1002d0a1:	and    DWORD PTR [esi+0xc],0x0
1002d0a5:	ret    
1002d0a6:	push   ebp
1002d0a7:	mov    ebp,esp
1002d0a9:	and    esp,0xfffffff8
1002d0ac:	mov    edx,DWORD PTR [esi+0x4]
1002d0af:	sub    esp,0xc
1002d0b2:	test   edx,edx
1002d0b4:	push   edi
1002d0b5:	jne    0x1002d0bb
1002d0b7:	xor    ecx,ecx
1002d0b9:	jmp    0x1002d0c3
1002d0bb:	mov    ecx,DWORD PTR [esi+0x8]
1002d0be:	sub    ecx,edx
1002d0c0:	sar    ecx,0x4
1002d0c3:	test   edx,edx
1002d0c5:	je     0x1002d0e5
1002d0c7:	mov    eax,DWORD PTR [esi+0xc]
1002d0ca:	sub    eax,edx
1002d0cc:	sar    eax,0x4
1002d0cf:	cmp    ecx,eax
1002d0d1:	jae    0x1002d0e5
1002d0d3:	push   DWORD PTR [ebp+0x8]
1002d0d6:	push   0x1
1002d0d8:	push   DWORD PTR [esi+0x8]
1002d0db:	call   0x1002d7c8
1002d0e0:	mov    DWORD PTR [esi+0x8],eax
1002d0e3:	jmp    0x1002d102
1002d0e5:	mov    edi,DWORD PTR [esi+0x8]
1002d0e8:	cmp    edx,edi
1002d0ea:	jbe    0x1002d0f1
1002d0ec:	call   0x100422b0
1002d0f1:	push   edi
1002d0f2:	push   esi
1002d0f3:	push   DWORD PTR [ebp+0x8]
1002d0f6:	lea    eax,[esp+0x14]
1002d0fa:	push   eax
1002d0fb:	mov    eax,esi
1002d0fd:	call   0x1002d748
1002d102:	pop    edi
1002d103:	mov    esp,ebp
1002d105:	pop    ebp
1002d106:	ret    0x4
1002d109:	push   edi
1002d10a:	mov    edi,DWORD PTR [esp+0x14]
1002d10e:	mov    ecx,0x1007e9f8
1002d113:	call   0x10010198
1002d118:	pop    edi
1002d119:	ret    0x10
1002d11c:	push   DWORD PTR [esp+0x18]
1002d120:	mov    eax,0x1007e9f8
1002d125:	push   DWORD PTR [esp+0x14]
1002d129:	push   DWORD PTR [esp+0x14]
1002d12d:	call   0x100101c6
1002d132:	ret    0x18
1002d135:	push   ebp
1002d136:	mov    ebp,esp
1002d138:	push   DWORD PTR [ebp+0x28]
1002d13b:	mov    eax,0x1007e9f8
1002d140:	push   DWORD PTR [ebp+0x24]
1002d143:	push   DWORD PTR [ebp+0x20]
1002d146:	push   DWORD PTR [ebp+0x1c]
1002d149:	push   DWORD PTR [ebp+0x18]
1002d14c:	push   DWORD PTR [ebp+0xc]
1002d14f:	push   DWORD PTR [ebp+0x8]
1002d152:	call   0x10010269
1002d157:	pop    ebp
1002d158:	ret    0x24
1002d15b:	push   ebp
1002d15c:	mov    ebp,esp
1002d15e:	and    esp,0xfffffff8
1002d161:	sub    esp,0xc
1002d164:	and    DWORD PTR [esp+0x4],0x0
1002d169:	push   ebx
1002d16a:	push   esi
1002d16b:	push   edi
1002d16c:	lea    eax,[esp+0x10]
1002d170:	push   eax
1002d171:	call   0x1002e939
1002d176:	test   eax,eax
1002d178:	jl     0x1002d1b3
1002d17a:	mov    esi,DWORD PTR [ebp+0x8]
1002d17d:	mov    edi,DWORD PTR [esp+0x10]
1002d181:	add    esi,0x4
1002d184:	lea    ebx,[edi+0x8]
1002d187:	cmp    ebx,esi
1002d189:	je     0x1002d1a7
1002d18b:	mov    eax,DWORD PTR [ebx+0x4]
1002d18e:	mov    ecx,DWORD PTR [eax]
1002d190:	push   eax
1002d191:	push   ebx
1002d192:	push   ecx
1002d193:	push   ebx
1002d194:	lea    eax,[esp+0x20]
1002d198:	push   eax
1002d199:	call   0x1002df61
1002d19e:	mov    eax,esi
1002d1a0:	mov    ecx,ebx
1002d1a2:	call   0x1002ec5b
1002d1a7:	push   ebx
1002d1a8:	push   edi
1002d1a9:	mov    edi,DWORD PTR [ebp+0xc]
1002d1ac:	call   0x1002e9b5
1002d1b1:	pop    ecx
1002d1b2:	pop    ecx
1002d1b3:	pop    edi
1002d1b4:	pop    esi
1002d1b5:	pop    ebx
1002d1b6:	mov    esp,ebp
1002d1b8:	pop    ebp
1002d1b9:	ret    0x8
1002d1bc:	mov    eax,DWORD PTR [esp+0x8]
1002d1c0:	test   eax,eax
1002d1c2:	jne    0x1002d1cb
1002d1c4:	mov    eax,0x80004003
1002d1c9:	jmp    0x1002d1d6
1002d1cb:	mov    ecx,DWORD PTR [esp+0x4]
1002d1cf:	mov    ecx,DWORD PTR [ecx+0xc]
1002d1d2:	mov    DWORD PTR [eax],ecx
1002d1d4:	xor    eax,eax
1002d1d6:	ret    0x8
1002d1d9:	push   ebp
1002d1da:	mov    ebp,esp
1002d1dc:	and    esp,0xfffffff8
1002d1df:	sub    esp,0x14
1002d1e2:	cmp    DWORD PTR [ebp+0x10],0x0
1002d1e6:	push   ebx
1002d1e7:	push   esi
1002d1e8:	push   edi
1002d1e9:	jne    0x1002d1f5
1002d1eb:	mov    eax,0x80004003
1002d1f0:	jmp    0x1002d28a
1002d1f5:	cmp    DWORD PTR [ebp+0xc],0x1
1002d1f9:	jge    0x1002d205
1002d1fb:	mov    eax,0x80070057
1002d200:	jmp    0x1002d28a
1002d205:	mov    ebx,DWORD PTR [ebp+0x8]
1002d208:	dec    DWORD PTR [ebp+0xc]
1002d20b:	mov    eax,DWORD PTR [ebx+0x8]
1002d20e:	mov    eax,DWORD PTR [eax]
1002d210:	add    ebx,0x4
1002d213:	mov    DWORD PTR [esp+0xc],0x80004005
1002d21b:	mov    DWORD PTR [esp+0x10],ebx
1002d21f:	mov    DWORD PTR [esp+0x14],eax
1002d223:	mov    DWORD PTR [esp+0x18],ebx
1002d227:	mov    eax,DWORD PTR [ebx+0x4]
1002d22a:	lea    edi,[esp+0x18]
1002d22e:	lea    esi,[esp+0x10]
1002d232:	mov    DWORD PTR [esp+0x1c],eax
1002d236:	call   0x100046f1
1002d23b:	test   al,al
1002d23d:	jne    0x1002d24f
1002d23f:	cmp    DWORD PTR [ebp+0xc],0x0
1002d243:	jle    0x1002d24f
1002d245:	call   0x1002da0c
1002d24a:	dec    DWORD PTR [ebp+0xc]
1002d24d:	jmp    0x1002d227
1002d24f:	mov    eax,DWORD PTR [ebx+0x4]
1002d252:	lea    edi,[esp+0x18]
1002d256:	lea    esi,[esp+0x10]
1002d25a:	mov    DWORD PTR [esp+0x1c],eax
1002d25e:	mov    DWORD PTR [esp+0x18],ebx
1002d262:	call   0x100046f1
1002d267:	test   al,al
1002d269:	jne    0x1002d286
1002d26b:	call   0x1002d480
1002d270:	mov    ecx,DWORD PTR [ebp+0x10]
1002d273:	and    WORD PTR [ecx],0x0
1002d277:	add    eax,0x8
1002d27a:	push   eax
1002d27b:	push   ecx
1002d27c:	call   DWORD PTR ds:0x10065280
1002d282:	mov    DWORD PTR [esp+0xc],eax
1002d286:	mov    eax,DWORD PTR [esp+0xc]
1002d28a:	pop    edi
1002d28b:	pop    esi
1002d28c:	pop    ebx
1002d28d:	mov    esp,ebp
1002d28f:	pop    ebp
1002d290:	ret    0xc
1002d293:	push   ebp
1002d294:	mov    ebp,esp
1002d296:	push   edi
1002d297:	mov    edi,DWORD PTR [ebp+0xc]
1002d29a:	test   edi,edi
1002d29c:	jne    0x1002d2a5
1002d29e:	mov    eax,0x80004003
1002d2a3:	jmp    0x1002d2f0
1002d2a5:	and    DWORD PTR [edi],0x0
1002d2a8:	push   ebx
1002d2a9:	push   esi
1002d2aa:	lea    eax,[ebp+0xc]
1002d2ad:	push   eax
1002d2ae:	call   0x1002ea12
1002d2b3:	mov    ebx,DWORD PTR [ebp+0xc]
1002d2b6:	mov    esi,eax
1002d2b8:	test   esi,esi
1002d2ba:	jl     0x1002d2df
1002d2bc:	mov    eax,DWORD PTR [ebp+0x8]
1002d2bf:	lea    ecx,[eax+0x4]
1002d2c2:	push   ecx
1002d2c3:	call   0x1002dbcd
1002d2c8:	mov    esi,eax
1002d2ca:	test   esi,esi
1002d2cc:	jne    0x1002d2df
1002d2ce:	mov    eax,DWORD PTR [ebx]
1002d2d0:	push   edi
1002d2d1:	push   0x1006c9b4
1002d2d6:	push   ebx
1002d2d7:	call   DWORD PTR [eax]
1002d2d9:	mov    esi,eax
1002d2db:	test   esi,esi
1002d2dd:	je     0x1002d2ec
1002d2df:	test   ebx,ebx
1002d2e1:	je     0x1002d2ec
1002d2e3:	mov    eax,DWORD PTR [ebx]
1002d2e5:	push   0x1
1002d2e7:	mov    ecx,ebx
1002d2e9:	call   DWORD PTR [eax+0x1c]
1002d2ec:	mov    eax,esi
1002d2ee:	pop    esi
1002d2ef:	pop    ebx
1002d2f0:	pop    edi
1002d2f1:	pop    ebp
1002d2f2:	ret    0x8
1002d2f5:	call   0x1002e435
1002d2fa:	lea    ecx,[esi+0x4]
1002d2fd:	mov    DWORD PTR [ecx],eax
1002d2ff:	mov    BYTE PTR [eax+0x29],0x1
1002d303:	mov    eax,DWORD PTR [ecx]
1002d305:	mov    DWORD PTR [eax+0x4],eax
1002d308:	mov    eax,DWORD PTR [ecx]
1002d30a:	mov    DWORD PTR [eax],eax
1002d30c:	mov    ecx,DWORD PTR [ecx]
1002d30e:	mov    DWORD PTR [ecx+0x8],ecx
1002d311:	and    DWORD PTR [esi+0x8],0x0
1002d315:	mov    eax,esi
1002d317:	ret    
1002d318:	push   ebp
1002d319:	mov    ebp,esp
1002d31b:	and    esp,0xfffffff8
1002d31e:	push   0xffffffff
1002d320:	push   0x1005edac
1002d325:	mov    eax,fs:0x0
1002d32b:	push   eax
1002d32c:	sub    esp,0x40
1002d32f:	push   ebx
1002d330:	push   esi
1002d331:	push   edi
1002d332:	mov    eax,ds:0x1007d030
1002d337:	xor    eax,esp
1002d339:	push   eax
1002d33a:	lea    eax,[esp+0x50]
1002d33e:	mov    fs:0x0,eax
1002d344:	push   DWORD PTR [ebp+0xc]
1002d347:	mov    edi,DWORD PTR [ebp+0x8]
1002d34a:	lea    ebx,[esp+0x18]
1002d34e:	call   0x1002d97c
1002d353:	mov    eax,DWORD PTR [edi+0x4]
1002d356:	mov    DWORD PTR [esp+0x1c],edi
1002d35a:	lea    edi,[esp+0x1c]
1002d35e:	mov    esi,ebx
1002d360:	mov    DWORD PTR [esp+0x20],eax
1002d364:	call   0x100046f1
1002d369:	test   al,al
1002d36b:	mov    ebx,DWORD PTR [esp+0x18]
1002d36f:	jne    0x1002d380
1002d371:	push   DWORD PTR [ebp+0xc]
1002d374:	lea    eax,[ebx+0x10]
1002d377:	call   0x1002d9f0
1002d37c:	test   al,al
1002d37e:	je     0x1002d3f8
1002d380:	lea    eax,[esp+0x24]
1002d384:	push   eax
1002d385:	call   DWORD PTR ds:0x1006528c
1002d38b:	mov    esi,DWORD PTR [ebp+0xc]
1002d38e:	and    DWORD PTR [esp+0x58],0x0
1002d393:	lea    edi,[esp+0x34]
1002d397:	call   0x1002ab7e
1002d39c:	lea    eax,[esp+0x24]
1002d3a0:	mov    BYTE PTR [esp+0x58],0x1
1002d3a5:	and    WORD PTR [esp+0x3c],0x0
1002d3ab:	push   eax
1002d3ac:	lea    esi,[esp+0x40]
1002d3b0:	call   0x1002abac
1002d3b5:	push   ebx
1002d3b6:	mov    BYTE PTR [esp+0x5c],0x2
1002d3bb:	push   DWORD PTR [esp+0x18]
1002d3bf:	mov    eax,edi
1002d3c1:	push   eax
1002d3c2:	lea    eax,[esp+0x28]
1002d3c6:	push   eax
1002d3c7:	mov    eax,DWORD PTR [ebp+0x8]
1002d3ca:	call   0x1002d7f8
1002d3cf:	mov    ecx,DWORD PTR [eax]
1002d3d1:	mov    eax,DWORD PTR [eax+0x4]
1002d3d4:	mov    DWORD PTR [esp+0x18],eax
1002d3d8:	mov    eax,esi
1002d3da:	mov    esi,DWORD PTR ds:0x10065294
1002d3e0:	push   eax
1002d3e1:	mov    DWORD PTR [esp+0x18],ecx
1002d3e5:	call   esi
1002d3e7:	push   DWORD PTR [esp+0x34]
1002d3eb:	call   DWORD PTR ds:0x100652b4
1002d3f1:	lea    eax,[esp+0x24]
1002d3f5:	push   eax
1002d3f6:	call   esi
1002d3f8:	lea    esi,[esp+0x14]
1002d3fc:	call   0x1002d480
1002d401:	add    eax,0x8
1002d404:	mov    ecx,DWORD PTR [esp+0x50]
1002d408:	mov    DWORD PTR fs:0x0,ecx
1002d40f:	pop    ecx
1002d410:	pop    edi
1002d411:	pop    esi
1002d412:	pop    ebx
1002d413:	mov    esp,ebp
1002d415:	pop    ebp
1002d416:	ret    0x8
1002d419:	push   ebp
1002d41a:	mov    ebp,esp
1002d41c:	sub    esp,0x18
1002d41f:	push   ebx
1002d420:	push   esi
1002d421:	push   edi
1002d422:	push   DWORD PTR [ebp+0x10]
1002d425:	mov    edi,DWORD PTR [ebp+0x8]
1002d428:	lea    ebx,[ebp-0xc]
1002d42b:	call   0x1002d97c
1002d430:	mov    eax,DWORD PTR [edi+0x4]
1002d433:	mov    DWORD PTR [ebp-0x14],edi
1002d436:	lea    edi,[ebp-0x14]
1002d439:	mov    esi,ebx
1002d43b:	mov    DWORD PTR [ebp-0x10],eax
1002d43e:	call   0x100046f1
1002d443:	test   al,al
1002d445:	jne    0x1002d45d
1002d447:	mov    eax,DWORD PTR [ebp-0x8]
1002d44a:	push   DWORD PTR [ebp+0x10]
1002d44d:	add    eax,0x10
1002d450:	call   0x1002d9f0
1002d455:	test   al,al
1002d457:	jne    0x1002d45d
1002d459:	mov    ecx,ebx
1002d45b:	jmp    0x1002d46c
1002d45d:	mov    eax,DWORD PTR [ebp+0x8]
1002d460:	mov    ecx,DWORD PTR [eax+0x4]
1002d463:	mov    DWORD PTR [ebp-0x10],ecx
1002d466:	mov    DWORD PTR [ebp-0x14],eax
1002d469:	lea    ecx,[ebp-0x14]
1002d46c:	mov    edx,DWORD PTR [ecx]
1002d46e:	mov    eax,DWORD PTR [ebp+0xc]
1002d471:	mov    ecx,DWORD PTR [ecx+0x4]
1002d474:	pop    edi
1002d475:	pop    esi
1002d476:	mov    DWORD PTR [eax],edx
1002d478:	mov    DWORD PTR [eax+0x4],ecx
1002d47b:	pop    ebx
1002d47c:	leave  
1002d47d:	ret    0xc
1002d480:	cmp    DWORD PTR [esi],0x0
1002d483:	jne    0x1002d48a
1002d485:	call   0x100422b0
1002d48a:	mov    eax,DWORD PTR [esi]
1002d48c:	mov    ecx,DWORD PTR [esi+0x4]
1002d48f:	cmp    ecx,DWORD PTR [eax+0x4]
1002d492:	jne    0x1002d499
1002d494:	call   0x100422b0
1002d499:	mov    eax,DWORD PTR [esi+0x4]
1002d49c:	add    eax,0x10
1002d49f:	ret    
1002d4a0:	push   esi
1002d4a1:	mov    esi,ecx
1002d4a3:	mov    DWORD PTR [esi],0x10071bac
1002d4a9:	mov    DWORD PTR [esi+0x10],0xc0000001
1002d4b0:	mov    ecx,DWORD PTR ds:0x1007fbe4
1002d4b6:	mov    eax,DWORD PTR [ecx]
1002d4b8:	call   DWORD PTR [eax+0x8]
1002d4bb:	lea    eax,[esi+0x4]
1002d4be:	pop    esi
1002d4bf:	jmp    0x1002d9bb
1002d4c4:	mov    eax,DWORD PTR [esp+0x4]
1002d4c8:	inc    DWORD PTR [eax+0x10]
1002d4cb:	mov    eax,DWORD PTR [eax+0x10]
1002d4ce:	ret    0x4
1002d4d1:	mov    ecx,DWORD PTR [esp+0x4]
1002d4d5:	dec    DWORD PTR [ecx+0x10]
1002d4d8:	push   esi
1002d4d9:	mov    esi,DWORD PTR [ecx+0x10]
1002d4dc:	jne    0x1002d4e9
1002d4de:	test   ecx,ecx
1002d4e0:	je     0x1002d4e9
1002d4e2:	mov    eax,DWORD PTR [ecx]
1002d4e4:	push   0x1
1002d4e6:	call   DWORD PTR [eax+0x34]
1002d4e9:	mov    eax,esi
1002d4eb:	pop    esi
1002d4ec:	ret    0x4
1002d4ef:	push   ebx
1002d4f0:	push   DWORD PTR [esp+0xc]
1002d4f4:	mov    ebx,DWORD PTR [esp+0x14]
1002d4f8:	push   DWORD PTR [esp+0xc]
1002d4fc:	mov    eax,0x10071844
1002d501:	call   0x10010077
1002d506:	pop    ebx
1002d507:	ret    0xc
1002d50a:	push   esi
1002d50b:	mov    esi,ecx
1002d50d:	mov    DWORD PTR [esi],0x10071b7c
1002d513:	mov    DWORD PTR [esi+0x14],0xc0000001
1002d51a:	mov    ecx,DWORD PTR ds:0x1007fbe4
1002d520:	mov    eax,DWORD PTR [ecx]
1002d522:	call   DWORD PTR [eax+0x8]
1002d525:	add    esi,0x4
1002d528:	call   0x1002d081
1002d52d:	pop    esi
1002d52e:	ret    
1002d52f:	mov    eax,DWORD PTR [esp+0x4]
1002d533:	inc    DWORD PTR [eax+0x14]
1002d536:	mov    eax,DWORD PTR [eax+0x14]
1002d539:	ret    0x4
1002d53c:	mov    ecx,DWORD PTR [esp+0x4]
1002d540:	dec    DWORD PTR [ecx+0x14]
1002d543:	push   esi
1002d544:	mov    esi,DWORD PTR [ecx+0x14]
1002d547:	jne    0x1002d554
1002d549:	test   ecx,ecx
1002d54b:	je     0x1002d554
1002d54d:	mov    eax,DWORD PTR [ecx]
1002d54f:	push   0x1
1002d551:	call   DWORD PTR [eax+0x2c]
1002d554:	mov    eax,esi
1002d556:	pop    esi
1002d557:	ret    0x4
1002d55a:	push   ebx
1002d55b:	push   DWORD PTR [esp+0xc]
1002d55f:	mov    ebx,DWORD PTR [esp+0x14]
1002d563:	push   DWORD PTR [esp+0xc]
1002d567:	mov    eax,0x10071820
1002d56c:	call   0x10010077
1002d571:	pop    ebx
1002d572:	ret    0xc
1002d575:	push   esi
1002d576:	mov    esi,ecx
1002d578:	mov    DWORD PTR [esi],0x10071b44
1002d57e:	mov    DWORD PTR [esi+0x4],0xc0000001
1002d585:	mov    ecx,DWORD PTR ds:0x1007fbe4
1002d58b:	mov    eax,DWORD PTR [ecx]
1002d58d:	call   DWORD PTR [eax+0x8]
1002d590:	call   0x1002d71d
1002d595:	pop    esi
1002d596:	ret    
1002d597:	mov    ecx,DWORD PTR [esp+0x4]
1002d59b:	dec    DWORD PTR [ecx+0x4]
1002d59e:	push   esi
1002d59f:	mov    esi,DWORD PTR [ecx+0x4]
1002d5a2:	jne    0x1002d5af
1002d5a4:	test   ecx,ecx
1002d5a6:	je     0x1002d5af
1002d5a8:	mov    eax,DWORD PTR [ecx]
1002d5aa:	push   0x1
1002d5ac:	call   DWORD PTR [eax+0x34]
1002d5af:	mov    eax,esi
1002d5b1:	pop    esi
1002d5b2:	ret    0x4
1002d5b5:	push   ebx
1002d5b6:	push   DWORD PTR [esp+0xc]
1002d5ba:	mov    ebx,DWORD PTR [esp+0x14]
1002d5be:	push   DWORD PTR [esp+0xc]
1002d5c2:	mov    eax,0x100717fc
1002d5c7:	call   0x10010077
1002d5cc:	pop    ebx
1002d5cd:	ret    0xc
1002d5d0:	push   0x44
1002d5d2:	mov    eax,0x1005fbd4
1002d5d7:	call   0x10058845
1002d5dc:	mov    esi,DWORD PTR [ebp+0x8]
1002d5df:	xor    ebx,ebx
1002d5e1:	mov    DWORD PTR [ebp-0x14],ebx
1002d5e4:	mov    DWORD PTR [esi+0x4],ebx
1002d5e7:	mov    DWORD PTR [esi+0x8],ebx
1002d5ea:	mov    DWORD PTR [esi+0xc],ebx
1002d5ed:	xor    edi,edi
1002d5ef:	inc    edi
1002d5f0:	mov    DWORD PTR [ebp-0x4],ebx
1002d5f3:	push   0x100717c8
1002d5f8:	mov    DWORD PTR [ebp-0x14],edi
1002d5fb:	call   0x10041f10
1002d600:	pop    ecx
1002d601:	mov    DWORD PTR [ebp-0x18],eax
1002d604:	mov    DWORD PTR [ebp-0x10],ebx
1002d607:	push   DWORD PTR [ebp-0x10]
1002d60a:	push   0x100717c8
1002d60f:	push   DWORD PTR [ebp+0xc]
1002d612:	call   0x1000c40c
1002d617:	mov    ebx,eax
1002d619:	cmp    ebx,0xffffffff
1002d61c:	jne    0x1002d624
1002d61e:	mov    eax,DWORD PTR [ebp+0xc]
1002d621:	mov    ebx,DWORD PTR [eax+0x14]
1002d624:	cmp    ebx,DWORD PTR [ebp-0x10]
1002d627:	jb     0x1002d678
1002d629:	mov    eax,ebx
1002d62b:	sub    eax,DWORD PTR [ebp-0x10]
1002d62e:	push   eax
1002d62f:	push   DWORD PTR [ebp-0x10]
1002d632:	lea    eax,[ebp-0x50]
1002d635:	push   DWORD PTR [ebp+0xc]
1002d638:	call   0x1000c42b
1002d63d:	lea    ecx,[ebp-0x34]
1002d640:	push   ecx
1002d641:	mov    ecx,eax
1002d643:	mov    DWORD PTR [ebp-0x4],edi
1002d646:	call   0x1000f2d9
1002d64b:	pop    ecx
1002d64c:	push   eax
1002d64d:	mov    BYTE PTR [ebp-0x4],0x2
1002d651:	call   0x1000f4a8
1002d656:	push   0x0
1002d658:	push   edi
1002d659:	lea    ecx,[ebp-0x34]
1002d65c:	call   0x100012f9
1002d661:	push   0x0
1002d663:	push   edi
1002d664:	lea    ecx,[ebp-0x50]
1002d667:	mov    BYTE PTR [ebp-0x4],0x0
1002d66b:	call   0x100012f9
1002d670:	mov    eax,DWORD PTR [ebp-0x18]
1002d673:	add    ebx,eax
1002d675:	mov    DWORD PTR [ebp-0x10],ebx
1002d678:	mov    eax,DWORD PTR [ebp-0x10]
1002d67b:	mov    ecx,DWORD PTR [ebp+0xc]
1002d67e:	cmp    eax,DWORD PTR [ecx+0x14]
1002d681:	jb     0x1002d607
1002d683:	mov    eax,esi
1002d685:	call   0x1005891d
1002d68a:	ret    
1002d68b:	push   esi
1002d68c:	mov    esi,DWORD PTR [eax]
1002d68e:	test   esi,esi
1002d690:	je     0x1002d6b4
1002d692:	mov    eax,DWORD PTR [esi+0x30]
1002d695:	sub    eax,0x10
1002d698:	call   0x1000207d
1002d69d:	lea    eax,[esi+0x20]
1002d6a0:	call   0x1002ba20
1002d6a5:	lea    eax,[esi+0x10]
1002d6a8:	call   0x1002ba20
1002d6ad:	push   esi
1002d6ae:	call   0x10041d92
1002d6b3:	pop    ecx
1002d6b4:	pop    esi
1002d6b5:	ret    
1002d6b6:	lea    eax,[esi+0x8]
1002d6b9:	push   eax
1002d6ba:	call   DWORD PTR ds:0x10065294
1002d6c0:	push   DWORD PTR [esi]
1002d6c2:	call   DWORD PTR ds:0x100652b4
1002d6c8:	ret    
1002d6c9:	push   esi
1002d6ca:	mov    esi,ecx
1002d6cc:	call   0x1002d4a0
1002d6d1:	test   BYTE PTR [esp+0x8],0x1
1002d6d6:	je     0x1002d6df
1002d6d8:	push   esi
1002d6d9:	call   0x10041d92
1002d6de:	pop    ecx
1002d6df:	mov    eax,esi
1002d6e1:	pop    esi
1002d6e2:	ret    0x4
1002d6e5:	push   esi
1002d6e6:	mov    esi,ecx
1002d6e8:	call   0x1002d50a
1002d6ed:	test   BYTE PTR [esp+0x8],0x1
1002d6f2:	je     0x1002d6fb
1002d6f4:	push   esi
1002d6f5:	call   0x10041d92
1002d6fa:	pop    ecx
1002d6fb:	mov    eax,esi
1002d6fd:	pop    esi
1002d6fe:	ret    0x4
1002d701:	push   esi
1002d702:	mov    esi,ecx
1002d704:	call   0x1002d575
1002d709:	test   BYTE PTR [esp+0x8],0x1
1002d70e:	je     0x1002d717
1002d710:	push   esi
1002d711:	call   0x10041d92
1002d716:	pop    ecx
1002d717:	mov    eax,esi
1002d719:	pop    esi
1002d71a:	ret    0x4
1002d71d:	push   edi
1002d71e:	lea    edi,[esi+0x18]
1002d721:	call   0x1000256d
1002d726:	lea    edi,[esi+0x14]
1002d729:	call   0x1000256d
1002d72e:	lea    edi,[esi+0x10]
1002d731:	call   0x1000256d
1002d736:	lea    edi,[esi+0xc]
1002d739:	call   0x1000256d
1002d73e:	lea    edi,[esi+0x8]
1002d741:	call   0x1000256d
1002d746:	pop    edi
1002d747:	ret    
1002d748:	push   ebp
1002d749:	mov    ebp,esp
1002d74b:	push   ecx
1002d74c:	push   ebx
1002d74d:	push   esi
1002d74e:	mov    esi,eax
1002d750:	mov    ebx,DWORD PTR [esi+0x4]
1002d753:	push   edi
1002d754:	xor    edi,edi
1002d756:	cmp    ebx,edi
1002d758:	je     0x1002d786
1002d75a:	mov    eax,DWORD PTR [esi+0x8]
1002d75d:	mov    ecx,eax
1002d75f:	sub    ecx,ebx
1002d761:	sar    ecx,0x4
1002d764:	je     0x1002d786
1002d766:	cmp    ebx,eax
1002d768:	jbe    0x1002d76f
1002d76a:	call   0x100422b0
1002d76f:	cmp    DWORD PTR [ebp+0x10],edi
1002d772:	je     0x1002d779
1002d774:	cmp    DWORD PTR [ebp+0x10],esi
1002d777:	je     0x1002d77e
1002d779:	call   0x100422b0
1002d77e:	mov    edi,DWORD PTR [ebp+0x14]
1002d781:	sub    edi,ebx
1002d783:	sar    edi,0x4
1002d786:	push   DWORD PTR [ebp+0x14]
1002d789:	push   DWORD PTR [ebp+0x10]
1002d78c:	push   DWORD PTR [ebp+0xc]
1002d78f:	push   esi
1002d790:	call   0x1002dc85
1002d795:	mov    ebx,DWORD PTR [esi+0x4]
1002d798:	cmp    ebx,DWORD PTR [esi+0x8]
1002d79b:	jbe    0x1002d7a2
1002d79d:	call   0x100422b0
1002d7a2:	shl    edi,0x4
1002d7a5:	add    edi,ebx
1002d7a7:	cmp    edi,DWORD PTR [esi+0x8]
1002d7aa:	mov    DWORD PTR [ebp+0x14],ebx
1002d7ad:	ja     0x1002d7b4
1002d7af:	cmp    edi,DWORD PTR [esi+0x4]
1002d7b2:	jae    0x1002d7b9
1002d7b4:	call   0x100422b0
1002d7b9:	mov    eax,DWORD PTR [ebp+0x8]
1002d7bc:	mov    DWORD PTR [eax+0x4],edi
1002d7bf:	pop    edi
1002d7c0:	mov    DWORD PTR [eax],esi
1002d7c2:	pop    esi
1002d7c3:	pop    ebx
1002d7c4:	leave  
1002d7c5:	ret    0x10
1002d7c8:	push   ebp
1002d7c9:	mov    ebp,esp
1002d7cb:	push   ecx
1002d7cc:	push   edi
1002d7cd:	xor    eax,eax
1002d7cf:	lea    edi,[ebp-0x4]
1002d7d2:	stos   BYTE PTR es:[edi],al
1002d7d3:	push   DWORD PTR [ebp-0x4]
1002d7d6:	push   DWORD PTR [ebp+0xc]
1002d7d9:	push   DWORD PTR [ebp+0x10]
1002d7dc:	push   DWORD PTR [ebp+0xc]
1002d7df:	push   DWORD PTR [ebp+0x8]
1002d7e2:	call   0x1002ed36
1002d7e7:	mov    eax,DWORD PTR [ebp+0xc]
1002d7ea:	add    esp,0x14
1002d7ed:	shl    eax,0x4
1002d7f0:	add    eax,DWORD PTR [ebp+0x8]
1002d7f3:	pop    edi
1002d7f4:	leave  
1002d7f5:	ret    0xc
1002d7f8:	push   ebp
1002d7f9:	mov    ebp,esp
1002d7fb:	sub    esp,0x14
1002d7fe:	push   ebx
1002d7ff:	mov    ebx,eax
1002d801:	xor    eax,eax
1002d803:	cmp    DWORD PTR [ebx+0x8],eax
1002d806:	push   esi
1002d807:	push   edi
1002d808:	mov    DWORD PTR [ebp-0x8],eax
1002d80b:	mov    DWORD PTR [ebp-0x4],eax
1002d80e:	jne    0x1002d82a
1002d810:	mov    ecx,DWORD PTR [ebx+0x4]
1002d813:	push   DWORD PTR [ebp+0xc]
1002d816:	push   0x1
1002d818:	mov    esi,ebx
1002d81a:	push   DWORD PTR [ebp+0x8]
1002d81d:	call   0x1002e00b
1002d822:	mov    eax,DWORD PTR [ebp+0x8]
1002d825:	jmp    0x1002d975
1002d82a:	mov    eax,DWORD PTR [ebx+0x4]
1002d82d:	mov    eax,DWORD PTR [eax]
1002d82f:	lea    edi,[ebp-0x10]
1002d832:	lea    esi,[ebp+0x10]
1002d835:	mov    DWORD PTR [ebp-0xc],eax
1002d838:	mov    DWORD PTR [ebp-0x10],ebx
1002d83b:	call   0x100046f1
1002d840:	test   al,al
1002d842:	je     0x1002d85e
1002d844:	mov    esi,DWORD PTR [ebp+0x14]
1002d847:	push   DWORD PTR [ebp+0xc]
1002d84a:	lea    eax,[esi+0x10]
1002d84d:	call   0x1002d9f0
1002d852:	test   al,al
1002d854:	je     0x1002d95a
1002d85a:	mov    ecx,esi
1002d85c:	jmp    0x1002d813
1002d85e:	mov    eax,DWORD PTR [ebx+0x4]
1002d861:	lea    edi,[ebp-0x10]
1002d864:	lea    esi,[ebp+0x10]
1002d867:	mov    DWORD PTR [ebp-0xc],eax
1002d86a:	mov    DWORD PTR [ebp-0x10],ebx
1002d86d:	call   0x100046f1
1002d872:	test   al,al
1002d874:	je     0x1002d8a0
1002d876:	mov    eax,DWORD PTR [ebx+0x4]
1002d879:	mov    eax,DWORD PTR [eax+0x8]
1002d87c:	add    eax,0x10
1002d87f:	push   eax
1002d880:	mov    eax,DWORD PTR [ebp+0xc]
1002d883:	call   0x1002d9f0
1002d888:	test   al,al
1002d88a:	je     0x1002d95a
1002d890:	push   DWORD PTR [ebp+0xc]
1002d893:	mov    eax,DWORD PTR [ebx+0x4]
1002d896:	mov    ecx,DWORD PTR [eax+0x8]
1002d899:	push   0x0
1002d89b:	jmp    0x1002d818
1002d8a0:	mov    edi,DWORD PTR [ebp+0x14]
1002d8a3:	push   DWORD PTR [ebp+0xc]
1002d8a6:	lea    eax,[edi+0x10]
1002d8a9:	call   0x1002d9f0
1002d8ae:	test   al,al
1002d8b0:	je     0x1002d8f7
1002d8b2:	mov    eax,DWORD PTR [ebp+0x10]
1002d8b5:	lea    esi,[ebp-0x8]
1002d8b8:	mov    DWORD PTR [ebp-0x8],eax
1002d8bb:	mov    DWORD PTR [ebp-0x4],edi
1002d8be:	call   0x10018c62
1002d8c3:	mov    eax,DWORD PTR [eax+0x4]
1002d8c6:	add    eax,0x10
1002d8c9:	push   eax
1002d8ca:	mov    eax,DWORD PTR [ebp+0xc]
1002d8cd:	call   0x1002d9f0
1002d8d2:	test   al,al
1002d8d4:	je     0x1002d8f7
1002d8d6:	mov    ecx,DWORD PTR [ebp-0x4]
1002d8d9:	mov    eax,DWORD PTR [ecx+0x8]
1002d8dc:	cmp    BYTE PTR [eax+0x29],0x0
1002d8e0:	push   DWORD PTR [ebp+0xc]
1002d8e3:	mov    esi,ebx
1002d8e5:	je     0x1002d8ee
1002d8e7:	push   0x0
1002d8e9:	jmp    0x1002d81a
1002d8ee:	push   0x1
1002d8f0:	mov    ecx,edi
1002d8f2:	jmp    0x1002d81a
1002d8f7:	lea    eax,[edi+0x10]
1002d8fa:	push   eax
1002d8fb:	mov    eax,DWORD PTR [ebp+0xc]
1002d8fe:	call   0x1002d9f0
1002d903:	test   al,al
1002d905:	je     0x1002d95a
1002d907:	mov    eax,DWORD PTR [ebp+0x10]
1002d90a:	mov    DWORD PTR [ebp-0x8],eax
1002d90d:	mov    eax,DWORD PTR [ebx+0x4]
1002d910:	lea    esi,[ebp-0x8]
1002d913:	mov    DWORD PTR [ebp-0x4],edi
1002d916:	mov    DWORD PTR [ebp-0xc],eax
1002d919:	mov    DWORD PTR [ebp-0x10],ebx
1002d91c:	call   0x1002da0c
1002d921:	lea    edi,[ebp-0x10]
1002d924:	call   0x100046f1
1002d929:	test   al,al
1002d92b:	jne    0x1002d93f
1002d92d:	mov    eax,DWORD PTR [ebp-0x4]
1002d930:	push   DWORD PTR [ebp+0xc]
1002d933:	add    eax,0x10
1002d936:	call   0x1002d9f0
1002d93b:	test   al,al
1002d93d:	je     0x1002d95a
1002d93f:	mov    ecx,DWORD PTR [ebp+0x14]
1002d942:	mov    eax,DWORD PTR [ecx+0x8]
1002d945:	cmp    BYTE PTR [eax+0x29],0x0
1002d949:	push   DWORD PTR [ebp+0xc]
1002d94c:	mov    esi,ebx
1002d94e:	jne    0x1002d8e7
1002d950:	mov    ecx,DWORD PTR [ebp-0x4]
1002d953:	push   0x1
1002d955:	jmp    0x1002d81a
1002d95a:	push   DWORD PTR [ebp+0xc]
1002d95d:	push   ebx
1002d95e:	lea    ebx,[ebp-0x14]
1002d961:	call   0x1002de9f
1002d966:	mov    edx,DWORD PTR [eax]
1002d968:	mov    ecx,DWORD PTR [ebp+0x8]
1002d96b:	mov    DWORD PTR [ecx],edx
1002d96d:	mov    eax,DWORD PTR [eax+0x4]
1002d970:	mov    DWORD PTR [ecx+0x4],eax
1002d973:	mov    eax,ecx
1002d975:	pop    edi
1002d976:	pop    esi
1002d977:	pop    ebx
1002d978:	leave  
1002d979:	ret    0x10
1002d97c:	push   ebp
1002d97d:	mov    ebp,esp
1002d97f:	push   ecx
1002d980:	mov    eax,DWORD PTR [edi+0x4]
1002d983:	push   esi
1002d984:	mov    esi,DWORD PTR [eax+0x4]
1002d987:	mov    DWORD PTR [ebp-0x4],eax
1002d98a:	jmp    0x1002d9a6
1002d98c:	lea    eax,[esi+0x10]
1002d98f:	push   eax
1002d990:	mov    eax,DWORD PTR [ebp+0x8]
1002d993:	call   0x1002d9f0
1002d998:	test   al,al
1002d99a:	je     0x1002d9a1
1002d99c:	mov    esi,DWORD PTR [esi+0x8]
1002d99f:	jmp    0x1002d9a6
1002d9a1:	mov    DWORD PTR [ebp-0x4],esi
1002d9a4:	mov    esi,DWORD PTR [esi]
1002d9a6:	cmp    BYTE PTR [esi+0x29],0x0
1002d9aa:	je     0x1002d98c
1002d9ac:	mov    eax,DWORD PTR [ebp-0x4]
1002d9af:	mov    DWORD PTR [ebx+0x4],eax
1002d9b2:	mov    DWORD PTR [ebx],edi
1002d9b4:	mov    eax,ebx
1002d9b6:	pop    esi
1002d9b7:	leave  
1002d9b8:	ret    0x4
1002d9bb:	push   ebp
1002d9bc:	mov    ebp,esp
1002d9be:	and    esp,0xfffffff8
1002d9c1:	sub    esp,0xc
1002d9c4:	push   ebx
1002d9c5:	mov    ebx,eax
1002d9c7:	mov    eax,DWORD PTR [ebx+0x4]
1002d9ca:	mov    ecx,DWORD PTR [eax]
1002d9cc:	push   eax
1002d9cd:	push   ebx
1002d9ce:	push   ecx
1002d9cf:	push   ebx
1002d9d0:	lea    eax,[esp+0x18]
1002d9d4:	push   eax
1002d9d5:	call   0x1002df61
1002d9da:	push   DWORD PTR [ebx+0x4]
1002d9dd:	call   0x10041d92
1002d9e2:	and    DWORD PTR [ebx+0x4],0x0
1002d9e6:	and    DWORD PTR [ebx+0x8],0x0
1002d9ea:	pop    ecx
1002d9eb:	pop    ebx
1002d9ec:	mov    esp,ebp
1002d9ee:	pop    ebp
1002d9ef:	ret    
1002d9f0:	push   0x0
1002d9f2:	push   0x400
1002d9f7:	push   DWORD PTR [eax]
1002d9f9:	mov    eax,DWORD PTR [esp+0x10]
1002d9fd:	push   DWORD PTR [eax]
1002d9ff:	call   0x10055944
1002da04:	neg    eax
1002da06:	sbb    eax,eax
1002da08:	inc    eax
1002da09:	ret    0x4
1002da0c:	push   ebx
1002da0d:	xor    ebx,ebx
1002da0f:	cmp    DWORD PTR [esi],ebx
1002da11:	jne    0x1002da18
1002da13:	call   0x100422b0
1002da18:	mov    eax,DWORD PTR [esi+0x4]
1002da1b:	cmp    BYTE PTR [eax+0x29],bl
1002da1e:	je     0x1002da27
1002da20:	call   0x100422b0
1002da25:	jmp    0x1002da55
1002da27:	mov    ecx,DWORD PTR [eax+0x8]
1002da2a:	cmp    BYTE PTR [ecx+0x29],bl
1002da2d:	jne    0x1002da4a
1002da2f:	jmp    0x1002da33
1002da31:	mov    ecx,eax
1002da33:	mov    eax,DWORD PTR [ecx]
1002da35:	cmp    BYTE PTR [eax+0x29],bl
1002da38:	je     0x1002da31
1002da3a:	mov    DWORD PTR [esi+0x4],ecx
1002da3d:	jmp    0x1002da55
1002da3f:	mov    ecx,DWORD PTR [esi+0x4]
1002da42:	cmp    ecx,DWORD PTR [eax+0x8]
1002da45:	jne    0x1002da52
1002da47:	mov    DWORD PTR [esi+0x4],eax
1002da4a:	mov    eax,DWORD PTR [eax+0x4]
1002da4d:	cmp    BYTE PTR [eax+0x29],bl
1002da50:	je     0x1002da3f
1002da52:	mov    DWORD PTR [esi+0x4],eax
1002da55:	mov    eax,esi
1002da57:	pop    ebx
1002da58:	ret    
1002da59:	cmp    DWORD PTR [esi],0x0
1002da5c:	mov    eax,DWORD PTR [esi]
1002da5e:	mov    DWORD PTR [edi],eax
1002da60:	mov    eax,DWORD PTR [esi+0x4]
1002da63:	mov    DWORD PTR [edi+0x4],eax
1002da66:	jne    0x1002da6d
1002da68:	call   0x100422b0
1002da6d:	mov    eax,DWORD PTR [esi]
1002da6f:	mov    ecx,DWORD PTR [esi+0x4]
1002da72:	cmp    ecx,DWORD PTR [eax+0x8]
1002da75:	jb     0x1002da7c
1002da77:	call   0x100422b0
1002da7c:	add    DWORD PTR [esi+0x4],0x10
1002da80:	mov    eax,edi
1002da82:	ret    
1002da83:	mov    eax,DWORD PTR [esi]
1002da85:	test   eax,eax
1002da87:	je     0x1002da8d
1002da89:	cmp    eax,DWORD PTR [edi]
1002da8b:	je     0x1002da92
1002da8d:	call   0x100422b0
1002da92:	mov    eax,DWORD PTR [esi+0x4]
1002da95:	xor    ecx,ecx
1002da97:	cmp    eax,DWORD PTR [edi+0x4]
1002da9a:	setne  cl
1002da9d:	mov    al,cl
1002da9f:	ret    
1002daa0:	push   esi
1002daa1:	mov    esi,ecx
1002daa3:	mov    DWORD PTR [esi],0x10071c20
1002daa9:	mov    DWORD PTR [esi+0x14],0xc0000001
1002dab0:	mov    ecx,DWORD PTR ds:0x1007fbe4
1002dab6:	mov    eax,DWORD PTR [ecx]
1002dab8:	call   DWORD PTR [eax+0x8]
1002dabb:	mov    esi,DWORD PTR [esi+0x4]
1002dabe:	test   esi,esi
1002dac0:	je     0x1002dac8
1002dac2:	mov    eax,DWORD PTR [esi]
1002dac4:	push   esi
1002dac5:	call   DWORD PTR [eax+0x8]
1002dac8:	pop    esi
1002dac9:	ret    
1002daca:	push   esi
1002dacb:	push   edi
1002dacc:	mov    edi,eax
1002dace:	lea    esi,[ebx+0x4]
1002dad1:	cmp    DWORD PTR [esi],edi
1002dad3:	je     0x1002dada
1002dad5:	call   0x10007188
1002dada:	mov    esi,DWORD PTR [esp+0xc]
1002dade:	mov    DWORD PTR [ebx+0x8],esi
1002dae1:	mov    edi,DWORD PTR [esi+0x4]
1002dae4:	cmp    edi,DWORD PTR [esi+0x8]
1002dae7:	jbe    0x1002daee
1002dae9:	call   0x100422b0
1002daee:	mov    DWORD PTR [ebx+0x10],edi
1002daf1:	pop    edi
1002daf2:	mov    DWORD PTR [ebx+0xc],esi
1002daf5:	xor    eax,eax
1002daf7:	pop    esi
1002daf8:	ret    0x4
1002dafb:	push   esi
1002dafc:	push   edi
1002dafd:	mov    edi,DWORD PTR [esp+0xc]
1002db01:	mov    esi,DWORD PTR [edi+0x8]
1002db04:	test   esi,esi
1002db06:	jne    0x1002db0f
1002db08:	mov    eax,0x80004005
1002db0d:	jmp    0x1002db26
1002db0f:	push   ebx
1002db10:	mov    ebx,DWORD PTR [esi+0x4]
1002db13:	cmp    ebx,DWORD PTR [esi+0x8]
1002db16:	jbe    0x1002db1d
1002db18:	call   0x100422b0
1002db1d:	mov    DWORD PTR [edi+0x10],ebx
1002db20:	mov    DWORD PTR [edi+0xc],esi
1002db23:	xor    eax,eax
1002db25:	pop    ebx
1002db26:	pop    edi
1002db27:	pop    esi
1002db28:	ret    0x4
1002db2b:	push   esi
1002db2c:	mov    esi,ecx
1002db2e:	mov    DWORD PTR [esi],0x10071c40
1002db34:	mov    DWORD PTR [esi+0x4],0xc0000001
1002db3b:	mov    ecx,DWORD PTR ds:0x1007fbe4
1002db41:	mov    eax,DWORD PTR [ecx]
1002db43:	call   DWORD PTR [eax+0x8]
1002db46:	lea    eax,[esi+0x8]
1002db49:	pop    esi
1002db4a:	jmp    0x1002d9bb
1002db4f:	push   ebx
1002db50:	push   DWORD PTR [esp+0xc]
1002db54:	mov    ebx,DWORD PTR [esp+0x14]
1002db58:	push   DWORD PTR [esp+0xc]
1002db5c:	mov    eax,0x10071b0c
1002db61:	call   0x10010077
1002db66:	pop    ebx
1002db67:	ret    0xc
1002db6a:	push   esi
1002db6b:	mov    esi,ecx
1002db6d:	mov    DWORD PTR [esi],0x10071c50
1002db73:	mov    DWORD PTR [esi+0x14],0xc0000001
1002db7a:	mov    ecx,DWORD PTR ds:0x1007fbe4
1002db80:	mov    eax,DWORD PTR [ecx]
1002db82:	call   DWORD PTR [eax+0x8]
1002db85:	mov    esi,DWORD PTR [esi+0x4]
1002db88:	test   esi,esi
1002db8a:	je     0x1002db92
1002db8c:	mov    eax,DWORD PTR [esi]
1002db8e:	push   esi
1002db8f:	call   DWORD PTR [eax+0x8]
1002db92:	pop    esi
1002db93:	ret    
1002db94:	mov    ecx,DWORD PTR [esp+0x4]
1002db98:	dec    DWORD PTR [ecx+0x14]
1002db9b:	push   esi
1002db9c:	mov    esi,DWORD PTR [ecx+0x14]
1002db9f:	jne    0x1002dbac
1002dba1:	test   ecx,ecx
1002dba3:	je     0x1002dbac
1002dba5:	mov    eax,DWORD PTR [ecx]
1002dba7:	push   0x1
1002dba9:	call   DWORD PTR [eax+0x1c]
1002dbac:	mov    eax,esi
1002dbae:	pop    esi
1002dbaf:	ret    0x4
1002dbb2:	push   ebx
1002dbb3:	push   DWORD PTR [esp+0xc]
1002dbb7:	mov    ebx,DWORD PTR [esp+0x14]
1002dbbb:	push   DWORD PTR [esp+0xc]
1002dbbf:	mov    eax,0x10071b24
1002dbc4:	call   0x10010077
1002dbc9:	pop    ebx
1002dbca:	ret    0xc
1002dbcd:	push   esi
1002dbce:	push   edi
1002dbcf:	mov    edi,eax
1002dbd1:	lea    esi,[ebx+0x4]
1002dbd4:	cmp    DWORD PTR [esi],edi
1002dbd6:	je     0x1002dbdd
1002dbd8:	call   0x10007188
1002dbdd:	mov    eax,DWORD PTR [esp+0xc]
1002dbe1:	mov    DWORD PTR [ebx+0x8],eax
1002dbe4:	mov    ecx,DWORD PTR [eax+0x4]
1002dbe7:	mov    ecx,DWORD PTR [ecx]
1002dbe9:	pop    edi
1002dbea:	mov    DWORD PTR [ebx+0xc],eax
1002dbed:	mov    DWORD PTR [ebx+0x10],ecx
1002dbf0:	xor    eax,eax
1002dbf2:	pop    esi
1002dbf3:	ret    0x4
1002dbf6:	mov    ecx,DWORD PTR [esp+0x4]
1002dbfa:	mov    eax,DWORD PTR [ecx+0x8]
1002dbfd:	test   eax,eax
1002dbff:	jne    0x1002dc08
1002dc01:	mov    eax,0x80004005
1002dc06:	jmp    0x1002dc15
1002dc08:	mov    edx,DWORD PTR [eax+0x4]
1002dc0b:	mov    edx,DWORD PTR [edx]
1002dc0d:	mov    DWORD PTR [ecx+0xc],eax
1002dc10:	mov    DWORD PTR [ecx+0x10],edx
1002dc13:	xor    eax,eax
1002dc15:	ret    0x4
1002dc18:	push   esi
1002dc19:	mov    esi,ecx
1002dc1b:	call   0x1002daa0
1002dc20:	test   BYTE PTR [esp+0x8],0x1
1002dc25:	je     0x1002dc2e
1002dc27:	push   esi
1002dc28:	call   0x10041d92
1002dc2d:	pop    ecx
1002dc2e:	mov    eax,esi
1002dc30:	pop    esi
1002dc31:	ret    0x4
1002dc34:	push   esi
1002dc35:	mov    esi,ecx
1002dc37:	call   0x1002db2b
1002dc3c:	test   BYTE PTR [esp+0x8],0x1
1002dc41:	je     0x1002dc4a
1002dc43:	push   esi
1002dc44:	call   0x10041d92
1002dc49:	pop    ecx
1002dc4a:	mov    eax,esi
1002dc4c:	pop    esi
1002dc4d:	ret    0x4
1002dc50:	push   esi
1002dc51:	mov    esi,ecx
1002dc53:	call   0x1002db6a
1002dc58:	test   BYTE PTR [esp+0x8],0x1
1002dc5d:	je     0x1002dc66
1002dc5f:	push   esi
1002dc60:	call   0x10041d92
1002dc65:	pop    ecx
1002dc66:	mov    eax,esi
1002dc68:	pop    esi
1002dc69:	ret    0x4
1002dc6c:	push   esi
1002dc6d:	mov    esi,eax
1002dc6f:	jmp    0x1002dc7b
1002dc71:	push   esi
1002dc72:	call   DWORD PTR ds:0x10065294
1002dc78:	add    esi,0x10
1002dc7b:	cmp    esi,DWORD PTR [esp+0x8]
1002dc7f:	jne    0x1002dc71
1002dc81:	pop    esi
1002dc82:	ret    0x4
1002dc85:	push   0x14
1002dc87:	mov    eax,0x1005ed79
1002dc8c:	call   0x10058878
1002dc91:	mov    edi,DWORD PTR [ebp+0x8]
1002dc94:	push   DWORD PTR [ebp+0xc]
1002dc97:	xor    ebx,ebx
1002dc99:	lea    esi,[ebp-0x20]
1002dc9c:	mov    WORD PTR [ebp-0x20],bx
1002dca0:	call   0x1002abac
1002dca5:	mov    DWORD PTR [ebp-0x4],ebx
1002dca8:	mov    ecx,DWORD PTR [edi+0x4]
1002dcab:	cmp    ecx,ebx
1002dcad:	je     0x1002dcb7
1002dcaf:	mov    ebx,DWORD PTR [edi+0xc]
1002dcb2:	sub    ebx,ecx
1002dcb4:	sar    ebx,0x4
1002dcb7:	test   ecx,ecx
1002dcb9:	jne    0x1002dcbf
1002dcbb:	xor    eax,eax
1002dcbd:	jmp    0x1002dcc7
1002dcbf:	mov    eax,DWORD PTR [edi+0x8]
1002dcc2:	sub    eax,ecx
1002dcc4:	sar    eax,0x4
1002dcc7:	mov    edx,0xfffffff
1002dccc:	mov    esi,edx
1002dcce:	sub    esi,eax
1002dcd0:	mov    eax,esi
1002dcd2:	xor    esi,esi
1002dcd4:	inc    esi
1002dcd5:	cmp    eax,esi
1002dcd7:	jae    0x1002dcde
1002dcd9:	call   0x1000d195
1002dcde:	test   ecx,ecx
1002dce0:	jne    0x1002dce6
1002dce2:	xor    eax,eax
1002dce4:	jmp    0x1002dcee
1002dce6:	mov    eax,DWORD PTR [edi+0x8]
1002dce9:	sub    eax,ecx
1002dceb:	sar    eax,0x4
1002dcee:	inc    eax
1002dcef:	cmp    ebx,eax
1002dcf1:	jae    0x1002ddca
1002dcf7:	mov    eax,ebx
1002dcf9:	shr    eax,1
1002dcfb:	sub    edx,eax
1002dcfd:	cmp    edx,ebx
1002dcff:	jae    0x1002dd05
1002dd01:	xor    ebx,ebx
1002dd03:	jmp    0x1002dd07
1002dd05:	add    ebx,eax
1002dd07:	test   ecx,ecx
1002dd09:	jne    0x1002dd0f
1002dd0b:	xor    eax,eax
1002dd0d:	jmp    0x1002dd17
1002dd0f:	mov    eax,DWORD PTR [edi+0x8]
1002dd12:	sub    eax,ecx
1002dd14:	sar    eax,0x4
1002dd17:	inc    eax
1002dd18:	cmp    ebx,eax
1002dd1a:	jae    0x1002dd2d
1002dd1c:	test   ecx,ecx
1002dd1e:	jne    0x1002dd24
1002dd20:	xor    ebx,ebx
1002dd22:	jmp    0x1002dd2c
1002dd24:	mov    ebx,DWORD PTR [edi+0x8]
1002dd27:	sub    ebx,ecx
1002dd29:	sar    ebx,0x4
1002dd2c:	inc    ebx
1002dd2d:	mov    ecx,ebx
1002dd2f:	call   0x1000f7a3
1002dd34:	push   eax
1002dd35:	push   DWORD PTR [ebp+0x14]
1002dd38:	mov    BYTE PTR [ebp-0x4],0x1
1002dd3c:	mov    ecx,DWORD PTR [edi+0x4]
1002dd3f:	mov    DWORD PTR [ebp+0xc],eax
1002dd42:	mov    DWORD PTR [ebp+0x8],eax
1002dd45:	call   0x1002ec37
1002dd4a:	lea    ecx,[ebp-0x20]
1002dd4d:	push   ecx
1002dd4e:	push   esi
1002dd4f:	push   eax
1002dd50:	mov    DWORD PTR [ebp+0x8],eax
1002dd53:	call   0x1002d7c8
1002dd58:	mov    ecx,DWORD PTR [ebp+0x14]
1002dd5b:	push   eax
1002dd5c:	push   DWORD PTR [edi+0x8]
1002dd5f:	mov    DWORD PTR [ebp+0x8],eax
1002dd62:	call   0x1002ec37
1002dd67:	mov    eax,DWORD PTR [edi+0x4]
1002dd6a:	test   eax,eax
1002dd6c:	jne    0x1002dd72
1002dd6e:	xor    ecx,ecx
1002dd70:	jmp    0x1002dd7a
1002dd72:	mov    ecx,DWORD PTR [edi+0x8]
1002dd75:	sub    ecx,eax
1002dd77:	sar    ecx,0x4
1002dd7a:	test   eax,eax
1002dd7c:	lea    esi,[ecx+0x1]
1002dd7f:	je     0x1002dd92
1002dd81:	push   DWORD PTR [edi+0x8]
1002dd84:	call   0x1002dc6c
1002dd89:	push   DWORD PTR [edi+0x4]
1002dd8c:	call   0x10041d92
1002dd91:	pop    ecx
1002dd92:	mov    eax,DWORD PTR [ebp+0xc]
1002dd95:	shl    ebx,0x4
1002dd98:	add    ebx,eax
1002dd9a:	shl    esi,0x4
1002dd9d:	add    esi,eax
1002dd9f:	mov    DWORD PTR [edi+0xc],ebx
1002dda2:	mov    DWORD PTR [edi+0x8],esi
1002dda5:	mov    DWORD PTR [edi+0x4],eax
1002dda8:	jmp    0x1002de8d
1002ddad:	push   DWORD PTR [ebp+0x8]
1002ddb0:	mov    eax,DWORD PTR [ebp+0xc]
1002ddb3:	call   0x1002dc6c
1002ddb8:	push   DWORD PTR [ebp+0xc]
1002ddbb:	call   0x10041d92
1002ddc0:	pop    ecx
1002ddc1:	push   0x0
1002ddc3:	push   0x0
1002ddc5:	call   0x10046704
1002ddca:	mov    eax,DWORD PTR [edi+0x8]
1002ddcd:	mov    ebx,DWORD PTR [ebp+0x14]
1002ddd0:	mov    ecx,eax
1002ddd2:	sub    ecx,ebx
1002ddd4:	sar    ecx,0x4
1002ddd7:	cmp    ecx,esi
1002ddd9:	jae    0x1002de46
1002dddb:	lea    ecx,[ebx+0x10]
1002ddde:	push   ecx
1002dddf:	push   eax
1002dde0:	mov    ecx,ebx
1002dde2:	call   0x1002ec37
1002dde7:	mov    BYTE PTR [ebp-0x4],0x3
1002ddeb:	mov    eax,DWORD PTR [edi+0x8]
1002ddee:	lea    ecx,[ebp-0x20]
1002ddf1:	push   ecx
1002ddf2:	mov    ecx,eax
1002ddf4:	sub    ecx,ebx
1002ddf6:	sar    ecx,0x4
1002ddf9:	sub    esi,ecx
1002ddfb:	push   esi
1002ddfc:	push   eax
1002ddfd:	call   0x1002d7c8
1002de02:	and    DWORD PTR [ebp-0x4],0x0
1002de06:	add    DWORD PTR [edi+0x8],0x10
1002de0a:	mov    edi,DWORD PTR [edi+0x8]
1002de0d:	add    edi,0xfffffff0
1002de10:	cmp    ebx,edi
1002de12:	mov    esi,ebx
1002de14:	je     0x1002de8d
1002de16:	lea    eax,[ebp-0x20]
1002de19:	cmp    esi,eax
1002de1b:	je     0x1002de23
1002de1d:	push   eax
1002de1e:	call   0x1002abac
1002de23:	add    esi,0x10
1002de26:	cmp    esi,edi
1002de28:	jne    0x1002de16
1002de2a:	jmp    0x1002de8d
1002de2c:	mov    eax,DWORD PTR [ebp+0x8]
1002de2f:	mov    eax,DWORD PTR [eax+0x8]
1002de32:	add    eax,0x10
1002de35:	push   eax
1002de36:	mov    eax,DWORD PTR [ebp+0x14]
1002de39:	add    eax,0x10
1002de3c:	call   0x1002dc6c
1002de41:	jmp    0x1002ddc1
1002de46:	lea    esi,[eax-0x10]
1002de49:	push   eax
1002de4a:	push   eax
1002de4b:	mov    ecx,esi
1002de4d:	call   0x1002ec37
1002de52:	mov    DWORD PTR [edi+0x8],eax
1002de55:	mov    edi,esi
1002de57:	cmp    ebx,edi
1002de59:	je     0x1002de72
1002de5b:	lea    esi,[edi+0x10]
1002de5e:	sub    edi,0x10
1002de61:	sub    esi,0x10
1002de64:	cmp    esi,edi
1002de66:	je     0x1002de6e
1002de68:	push   edi
1002de69:	call   0x1002abac
1002de6e:	cmp    edi,ebx
1002de70:	jne    0x1002de5e
1002de72:	lea    edi,[ebx+0x10]
1002de75:	jmp    0x1002de89
1002de77:	lea    eax,[ebp-0x20]
1002de7a:	cmp    ebx,eax
1002de7c:	je     0x1002de86
1002de7e:	push   eax
1002de7f:	mov    esi,ebx
1002de81:	call   0x1002abac
1002de86:	add    ebx,0x10
1002de89:	cmp    ebx,edi
1002de8b:	jne    0x1002de77
1002de8d:	lea    eax,[ebp-0x20]
1002de90:	push   eax
1002de91:	call   DWORD PTR ds:0x10065294
1002de97:	call   0x1005891d
1002de9c:	ret    0x10
1002de9f:	push   ebp
1002dea0:	mov    ebp,esp
1002dea2:	sub    esp,0x18
1002dea5:	push   esi
1002dea6:	mov    esi,DWORD PTR [ebp+0x8]
1002dea9:	mov    eax,DWORD PTR [esi+0x4]
1002deac:	push   edi
1002dead:	mov    edi,DWORD PTR [eax+0x4]
1002deb0:	mov    DWORD PTR [ebp-0x4],eax
1002deb3:	mov    al,0x1
1002deb5:	mov    BYTE PTR [ebp-0x8],al
1002deb8:	jmp    0x1002ded6
1002deba:	push   DWORD PTR [ebp+0xc]
1002debd:	lea    eax,[edi+0x10]
1002dec0:	mov    DWORD PTR [ebp-0x4],edi
1002dec3:	call   0x1002d9f0
1002dec8:	test   al,al
1002deca:	mov    BYTE PTR [ebp-0x8],al
1002decd:	je     0x1002ded3
1002decf:	mov    edi,DWORD PTR [edi]
1002ded1:	jmp    0x1002ded6
1002ded3:	mov    edi,DWORD PTR [edi+0x8]
1002ded6:	cmp    BYTE PTR [edi+0x29],0x0
1002deda:	je     0x1002deba
1002dedc:	test   al,al
1002dede:	mov    edi,DWORD PTR [ebp-0x4]
1002dee1:	mov    DWORD PTR [ebp-0xc],edi
1002dee4:	mov    DWORD PTR [ebp-0x10],esi
1002dee7:	je     0x1002df35
1002dee9:	mov    eax,DWORD PTR [esi+0x4]
1002deec:	mov    eax,DWORD PTR [eax]
1002deee:	mov    DWORD PTR [ebp-0x18],esi
1002def1:	lea    edi,[ebp-0x18]
1002def4:	lea    esi,[ebp-0x10]
1002def7:	mov    DWORD PTR [ebp-0x14],eax
1002defa:	call   0x100046f1
1002deff:	test   al,al
1002df01:	je     0x1002df27
1002df03:	push   DWORD PTR [ebp+0xc]
1002df06:	mov    esi,DWORD PTR [ebp+0x8]
1002df09:	push   0x1
1002df0b:	mov    ecx,DWORD PTR [ebp-0x4]
1002df0e:	lea    eax,[ebp-0x18]
1002df11:	push   eax
1002df12:	call   0x1002e00b
1002df17:	mov    ecx,DWORD PTR [eax]
1002df19:	mov    eax,DWORD PTR [eax+0x4]
1002df1c:	mov    DWORD PTR [ebx],ecx
1002df1e:	mov    DWORD PTR [ebx+0x4],eax
1002df21:	mov    BYTE PTR [ebx+0x8],0x1
1002df25:	jmp    0x1002df59
1002df27:	lea    esi,[ebp-0x10]
1002df2a:	call   0x10018c62
1002df2f:	mov    edi,DWORD PTR [ebp-0xc]
1002df32:	mov    esi,DWORD PTR [ebp+0x8]
1002df35:	lea    eax,[edi+0x10]
1002df38:	push   eax
1002df39:	mov    eax,DWORD PTR [ebp+0xc]
1002df3c:	call   0x1002d9f0
1002df41:	test   al,al
1002df43:	je     0x1002df4d
1002df45:	push   DWORD PTR [ebp+0xc]
1002df48:	push   DWORD PTR [ebp-0x8]
1002df4b:	jmp    0x1002df0b
1002df4d:	mov    eax,DWORD PTR [ebp-0x10]
1002df50:	mov    DWORD PTR [ebx],eax
1002df52:	mov    DWORD PTR [ebx+0x4],edi
1002df55:	mov    BYTE PTR [ebx+0x8],0x0
1002df59:	pop    edi
1002df5a:	mov    eax,ebx
1002df5c:	pop    esi
1002df5d:	leave  
1002df5e:	ret    0x8
1002df61:	push   ebp
1002df62:	mov    ebp,esp
1002df64:	sub    esp,0x14
1002df67:	mov    eax,DWORD PTR [ebx+0x4]
1002df6a:	mov    eax,DWORD PTR [eax]
1002df6c:	push   esi
1002df6d:	push   edi
1002df6e:	lea    edi,[ebp-0xc]
1002df71:	lea    esi,[ebp+0xc]
1002df74:	mov    DWORD PTR [ebp-0x8],eax
1002df77:	mov    DWORD PTR [ebp-0xc],ebx
1002df7a:	call   0x100046f1
1002df7f:	test   al,al
1002df81:	je     0x1002dfe8
1002df83:	mov    eax,DWORD PTR [ebx+0x4]
1002df86:	lea    edi,[ebp-0xc]
1002df89:	lea    esi,[ebp+0x14]
1002df8c:	mov    DWORD PTR [ebp-0x8],eax
1002df8f:	mov    DWORD PTR [ebp-0xc],ebx
1002df92:	call   0x100046f1
1002df97:	test   al,al
1002df99:	je     0x1002dfe8
1002df9b:	mov    eax,DWORD PTR [ebx+0x4]
1002df9e:	push   DWORD PTR [eax+0x4]
1002dfa1:	mov    ecx,ebx
1002dfa3:	call   0x1002e4b4
1002dfa8:	mov    eax,DWORD PTR [ebx+0x4]
1002dfab:	mov    DWORD PTR [eax+0x4],eax
1002dfae:	mov    eax,DWORD PTR [ebx+0x4]
1002dfb1:	and    DWORD PTR [ebx+0x8],0x0
1002dfb5:	mov    DWORD PTR [eax],eax
1002dfb7:	mov    eax,DWORD PTR [ebx+0x4]
1002dfba:	mov    DWORD PTR [eax+0x8],eax
1002dfbd:	mov    eax,DWORD PTR [ebx+0x4]
1002dfc0:	mov    ecx,DWORD PTR [eax]
1002dfc2:	mov    eax,DWORD PTR [ebp+0x8]
1002dfc5:	mov    DWORD PTR [eax],ebx
1002dfc7:	jmp    0x1002e002
1002dfc9:	mov    eax,DWORD PTR [ebp+0x10]
1002dfcc:	mov    edi,DWORD PTR [ebp+0xc]
1002dfcf:	lea    esi,[ebp+0xc]
1002dfd2:	mov    DWORD PTR [ebp-0x8],eax
1002dfd5:	call   0x1002da0c
1002dfda:	push   DWORD PTR [ebp-0x8]
1002dfdd:	lea    eax,[ebp-0x14]
1002dfe0:	push   edi
1002dfe1:	push   eax
1002dfe2:	push   ebx
1002dfe3:	call   0x1002e158
1002dfe8:	lea    edi,[ebp+0x14]
1002dfeb:	lea    esi,[ebp+0xc]
1002dfee:	call   0x100046f1
1002dff3:	test   al,al
1002dff5:	je     0x1002dfc9
1002dff7:	mov    ecx,DWORD PTR [ebp+0xc]
1002dffa:	mov    eax,DWORD PTR [ebp+0x8]
1002dffd:	mov    DWORD PTR [eax],ecx
1002dfff:	mov    ecx,DWORD PTR [ebp+0x10]
1002e002:	pop    edi
1002e003:	mov    DWORD PTR [eax+0x4],ecx
1002e006:	pop    esi
1002e007:	leave  
1002e008:	ret    0x14
1002e00b:	push   0x48
1002e00d:	mov    eax,0x1005f147
1002e012:	call   0x10058845
1002e017:	mov    edi,ecx
1002e019:	cmp    DWORD PTR [esi+0x8],0xaaaaaa9
1002e020:	jb     0x1002e054
1002e022:	push   0x1006bcb4
1002e027:	lea    ecx,[ebp-0x2c]
1002e02a:	call   0x100011d6
1002e02f:	and    DWORD PTR [ebp-0x4],0x0
1002e033:	lea    eax,[ebp-0x2c]
1002e036:	push   eax
1002e037:	lea    ecx,[ebp-0x54]
1002e03a:	call   0x10001065
1002e03f:	push   0x10073960
1002e044:	lea    eax,[ebp-0x54]
1002e047:	push   eax
1002e048:	mov    DWORD PTR [ebp-0x54],0x1006a77c
1002e04f:	call   0x10046704
1002e054:	mov    eax,DWORD PTR [esi+0x4]
1002e057:	push   0x0
1002e059:	push   DWORD PTR [ebp+0x10]
1002e05c:	push   eax
1002e05d:	push   edi
1002e05e:	push   eax
1002e05f:	call   0x1002e45f
1002e064:	inc    DWORD PTR [esi+0x8]
1002e067:	mov    ebx,eax
1002e069:	mov    eax,DWORD PTR [esi+0x4]
1002e06c:	cmp    edi,eax
1002e06e:	jne    0x1002e07d
1002e070:	mov    DWORD PTR [eax+0x4],ebx
1002e073:	mov    eax,DWORD PTR [esi+0x4]
1002e076:	mov    DWORD PTR [eax],ebx
1002e078:	mov    eax,DWORD PTR [esi+0x4]
1002e07b:	jmp    0x1002e09b
1002e07d:	cmp    BYTE PTR [ebp+0xc],0x0
1002e081:	je     0x1002e090
1002e083:	mov    DWORD PTR [edi],ebx
1002e085:	mov    eax,DWORD PTR [esi+0x4]
1002e088:	cmp    edi,DWORD PTR [eax]
1002e08a:	jne    0x1002e09e
1002e08c:	mov    DWORD PTR [eax],ebx
1002e08e:	jmp    0x1002e09e
1002e090:	mov    DWORD PTR [edi+0x8],ebx
1002e093:	mov    eax,DWORD PTR [esi+0x4]
1002e096:	cmp    edi,DWORD PTR [eax+0x8]
1002e099:	jne    0x1002e09e
1002e09b:	mov    DWORD PTR [eax+0x8],ebx
1002e09e:	mov    edi,ebx
1002e0a0:	lea    eax,[ebx+0x4]
1002e0a3:	jmp    0x1002e132
1002e0a8:	mov    ecx,DWORD PTR [eax]
1002e0aa:	mov    edx,DWORD PTR [ecx+0x4]
1002e0ad:	cmp    ecx,DWORD PTR [edx]
1002e0af:	jne    0x1002e0e6
1002e0b1:	mov    edx,DWORD PTR [edx+0x8]
1002e0b4:	cmp    BYTE PTR [edx+0x28],0x0
1002e0b8:	je     0x1002e0ee
1002e0ba:	cmp    edi,DWORD PTR [ecx+0x8]
1002e0bd:	jne    0x1002e0c7
1002e0bf:	push   esi
1002e0c0:	mov    edi,ecx
1002e0c2:	call   0x1002e3f5
1002e0c7:	mov    eax,DWORD PTR [edi+0x4]
1002e0ca:	mov    BYTE PTR [eax+0x28],0x1
1002e0ce:	mov    eax,DWORD PTR [edi+0x4]
1002e0d1:	mov    eax,DWORD PTR [eax+0x4]
1002e0d4:	mov    BYTE PTR [eax+0x28],0x0
1002e0d8:	mov    eax,DWORD PTR [edi+0x4]
1002e0db:	mov    ecx,DWORD PTR [eax+0x4]
1002e0de:	push   esi
1002e0df:	call   0x10018d6f
1002e0e4:	jmp    0x1002e12f
1002e0e6:	mov    edx,DWORD PTR [edx]
1002e0e8:	cmp    BYTE PTR [edx+0x28],0x0
1002e0ec:	jne    0x1002e106
1002e0ee:	mov    BYTE PTR [ecx+0x28],0x1
1002e0f2:	mov    BYTE PTR [edx+0x28],0x1
1002e0f6:	mov    ecx,DWORD PTR [eax]
1002e0f8:	mov    ecx,DWORD PTR [ecx+0x4]
1002e0fb:	mov    BYTE PTR [ecx+0x28],0x0
1002e0ff:	mov    eax,DWORD PTR [eax]
1002e101:	mov    edi,DWORD PTR [eax+0x4]
1002e104:	jmp    0x1002e12f
1002e106:	cmp    edi,DWORD PTR [ecx]
1002e108:	jne    0x1002e112
1002e10a:	push   esi
1002e10b:	mov    edi,ecx
1002e10d:	call   0x10018d6f
1002e112:	mov    eax,DWORD PTR [edi+0x4]
1002e115:	mov    BYTE PTR [eax+0x28],0x1
1002e119:	mov    eax,DWORD PTR [edi+0x4]
1002e11c:	mov    eax,DWORD PTR [eax+0x4]
1002e11f:	mov    BYTE PTR [eax+0x28],0x0
1002e123:	mov    eax,DWORD PTR [edi+0x4]
1002e126:	mov    ecx,DWORD PTR [eax+0x4]
1002e129:	push   esi
1002e12a:	call   0x1002e3f5
1002e12f:	lea    eax,[edi+0x4]
1002e132:	mov    ecx,DWORD PTR [eax]
1002e134:	cmp    BYTE PTR [ecx+0x28],0x0
1002e138:	je     0x1002e0a8
1002e13e:	mov    eax,DWORD PTR [esi+0x4]
1002e141:	mov    eax,DWORD PTR [eax+0x4]
1002e144:	mov    BYTE PTR [eax+0x28],0x1
1002e148:	mov    eax,DWORD PTR [ebp+0x8]
1002e14b:	mov    DWORD PTR [eax+0x4],ebx
1002e14e:	mov    DWORD PTR [eax],esi
1002e150:	call   0x1005891d
1002e155:	ret    0xc
1002e158:	push   0x44
1002e15a:	mov    eax,0x1005ef45
1002e15f:	call   0x10058845
1002e164:	mov    edi,DWORD PTR [ebp+0x14]
1002e167:	cmp    BYTE PTR [edi+0x29],0x0
1002e16b:	je     0x1002e19f
1002e16d:	push   0x1006bafc
1002e172:	lea    ecx,[ebp-0x28]
1002e175:	call   0x100011d6
1002e17a:	and    DWORD PTR [ebp-0x4],0x0
1002e17e:	lea    eax,[ebp-0x28]
1002e181:	push   eax
1002e182:	lea    ecx,[ebp-0x50]
1002e185:	call   0x10001065
1002e18a:	push   0x10073880
1002e18f:	lea    eax,[ebp-0x50]
1002e192:	push   eax
1002e193:	mov    DWORD PTR [ebp-0x50],0x1006a788
1002e19a:	call   0x10046704
1002e19f:	lea    esi,[ebp+0x10]
1002e1a2:	call   0x1002da0c
1002e1a7:	mov    ecx,DWORD PTR [edi]
1002e1a9:	cmp    BYTE PTR [ecx+0x29],0x0
1002e1ad:	je     0x1002e1b4
1002e1af:	mov    ebx,DWORD PTR [edi+0x8]
1002e1b2:	jmp    0x1002e1cb
1002e1b4:	mov    eax,DWORD PTR [edi+0x8]
1002e1b7:	cmp    BYTE PTR [eax+0x29],0x0
1002e1bb:	je     0x1002e1c1
1002e1bd:	mov    ebx,ecx
1002e1bf:	jmp    0x1002e1cb
1002e1c1:	mov    eax,DWORD PTR [ebp+0x14]
1002e1c4:	cmp    eax,edi
1002e1c6:	mov    ebx,DWORD PTR [eax+0x8]
1002e1c9:	jne    0x1002e241
1002e1cb:	cmp    BYTE PTR [ebx+0x29],0x0
1002e1cf:	mov    esi,DWORD PTR [edi+0x4]
1002e1d2:	jne    0x1002e1d7
1002e1d4:	mov    DWORD PTR [ebx+0x4],esi
1002e1d7:	mov    ecx,DWORD PTR [ebp+0x8]
1002e1da:	mov    eax,DWORD PTR [ecx+0x4]
1002e1dd:	cmp    DWORD PTR [eax+0x4],edi
1002e1e0:	jne    0x1002e1e7
1002e1e2:	mov    DWORD PTR [eax+0x4],ebx
1002e1e5:	jmp    0x1002e1f2
1002e1e7:	cmp    DWORD PTR [esi],edi
1002e1e9:	jne    0x1002e1ef
1002e1eb:	mov    DWORD PTR [esi],ebx
1002e1ed:	jmp    0x1002e1f2
1002e1ef:	mov    DWORD PTR [esi+0x8],ebx
1002e1f2:	mov    edx,DWORD PTR [ecx+0x4]
1002e1f5:	cmp    DWORD PTR [edx],edi
1002e1f7:	jne    0x1002e215
1002e1f9:	cmp    BYTE PTR [ebx+0x29],0x0
1002e1fd:	je     0x1002e203
1002e1ff:	mov    ecx,esi
1002e201:	jmp    0x1002e213
1002e203:	mov    eax,DWORD PTR [ebx]
1002e205:	mov    ecx,ebx
1002e207:	jmp    0x1002e20d
1002e209:	mov    ecx,eax
1002e20b:	mov    eax,DWORD PTR [ecx]
1002e20d:	cmp    BYTE PTR [eax+0x29],0x0
1002e211:	je     0x1002e209
1002e213:	mov    DWORD PTR [edx],ecx
1002e215:	mov    eax,DWORD PTR [ebp+0x8]
1002e218:	mov    edx,DWORD PTR [eax+0x4]
1002e21b:	cmp    DWORD PTR [edx+0x8],edi
1002e21e:	jne    0x1002e29b
1002e220:	cmp    BYTE PTR [ebx+0x29],0x0
1002e224:	je     0x1002e22a
1002e226:	mov    ecx,esi
1002e228:	jmp    0x1002e23c
1002e22a:	mov    eax,DWORD PTR [ebx+0x8]
1002e22d:	mov    ecx,ebx
1002e22f:	jmp    0x1002e236
1002e231:	mov    ecx,eax
1002e233:	mov    eax,DWORD PTR [ecx+0x8]
1002e236:	cmp    BYTE PTR [eax+0x29],0x0
1002e23a:	je     0x1002e231
1002e23c:	mov    DWORD PTR [edx+0x8],ecx
1002e23f:	jmp    0x1002e29b
1002e241:	mov    DWORD PTR [ecx+0x4],eax
1002e244:	mov    ecx,DWORD PTR [edi]
1002e246:	mov    DWORD PTR [eax],ecx
1002e248:	cmp    eax,DWORD PTR [edi+0x8]
1002e24b:	jne    0x1002e251
1002e24d:	mov    esi,eax
1002e24f:	jmp    0x1002e26b
1002e251:	cmp    BYTE PTR [ebx+0x29],0x0
1002e255:	mov    esi,DWORD PTR [eax+0x4]
1002e258:	jne    0x1002e25d
1002e25a:	mov    DWORD PTR [ebx+0x4],esi
1002e25d:	mov    DWORD PTR [esi],ebx
1002e25f:	mov    ecx,DWORD PTR [edi+0x8]
1002e262:	mov    DWORD PTR [eax+0x8],ecx
1002e265:	mov    ecx,DWORD PTR [edi+0x8]
1002e268:	mov    DWORD PTR [ecx+0x4],eax
1002e26b:	mov    ecx,DWORD PTR [ebp+0x8]
1002e26e:	mov    ecx,DWORD PTR [ecx+0x4]
1002e271:	cmp    DWORD PTR [ecx+0x4],edi
1002e274:	jne    0x1002e27b
1002e276:	mov    DWORD PTR [ecx+0x4],eax
1002e279:	jmp    0x1002e289
1002e27b:	mov    ecx,DWORD PTR [edi+0x4]
1002e27e:	cmp    DWORD PTR [ecx],edi
1002e280:	jne    0x1002e286
1002e282:	mov    DWORD PTR [ecx],eax
1002e284:	jmp    0x1002e289
1002e286:	mov    DWORD PTR [ecx+0x8],eax
1002e289:	mov    ecx,DWORD PTR [edi+0x4]
1002e28c:	mov    DWORD PTR [eax+0x4],ecx
1002e28f:	mov    dl,BYTE PTR [edi+0x28]
1002e292:	mov    cl,BYTE PTR [eax+0x28]
1002e295:	mov    BYTE PTR [eax+0x28],dl
1002e298:	mov    BYTE PTR [edi+0x28],cl
1002e29b:	cmp    BYTE PTR [edi+0x28],0x1
1002e29f:	jne    0x1002e3b7
1002e2a5:	jmp    0x1002e36b
1002e2aa:	cmp    BYTE PTR [ebx+0x28],0x1
1002e2ae:	jne    0x1002e3b3
1002e2b4:	mov    ecx,DWORD PTR [esi]
1002e2b6:	cmp    ebx,ecx
1002e2b8:	jne    0x1002e331
1002e2ba:	mov    ecx,DWORD PTR [esi+0x8]
1002e2bd:	cmp    BYTE PTR [ecx+0x28],0x0
1002e2c1:	jne    0x1002e2d8
1002e2c3:	push   DWORD PTR [ebp+0x8]
1002e2c6:	mov    BYTE PTR [ecx+0x28],0x1
1002e2ca:	mov    ecx,esi
1002e2cc:	mov    BYTE PTR [esi+0x28],0x0
1002e2d0:	call   0x1002e3f5
1002e2d5:	mov    ecx,DWORD PTR [esi+0x8]
1002e2d8:	cmp    BYTE PTR [ecx+0x29],0x0
1002e2dc:	jne    0x1002e366
1002e2e2:	mov    eax,DWORD PTR [ecx]
1002e2e4:	cmp    BYTE PTR [eax+0x28],0x1
1002e2e8:	jne    0x1002e2f3
1002e2ea:	mov    eax,DWORD PTR [ecx+0x8]
1002e2ed:	cmp    BYTE PTR [eax+0x28],0x1
1002e2f1:	je     0x1002e362
1002e2f3:	mov    eax,DWORD PTR [ecx+0x8]
1002e2f6:	cmp    BYTE PTR [eax+0x28],0x1
1002e2fa:	jne    0x1002e311
1002e2fc:	mov    eax,DWORD PTR [ecx]
1002e2fe:	push   DWORD PTR [ebp+0x8]
1002e301:	mov    BYTE PTR [eax+0x28],0x1
1002e305:	mov    BYTE PTR [ecx+0x28],0x0
1002e309:	call   0x10018d6f
1002e30e:	mov    ecx,DWORD PTR [esi+0x8]
1002e311:	mov    al,BYTE PTR [esi+0x28]
1002e314:	push   DWORD PTR [ebp+0x8]
1002e317:	mov    BYTE PTR [ecx+0x28],al
1002e31a:	mov    BYTE PTR [esi+0x28],0x1
1002e31e:	mov    eax,DWORD PTR [ecx+0x8]
1002e321:	mov    ecx,esi
1002e323:	mov    BYTE PTR [eax+0x28],0x1
1002e327:	call   0x1002e3f5
1002e32c:	jmp    0x1002e3b3
1002e331:	cmp    BYTE PTR [ecx+0x28],0x0
1002e335:	jne    0x1002e34b
1002e337:	push   DWORD PTR [ebp+0x8]
1002e33a:	mov    BYTE PTR [ecx+0x28],0x1
1002e33e:	mov    ecx,esi
1002e340:	mov    BYTE PTR [esi+0x28],0x0
1002e344:	call   0x10018d6f
1002e349:	mov    ecx,DWORD PTR [esi]
1002e34b:	cmp    BYTE PTR [ecx+0x29],0x0
1002e34f:	jne    0x1002e366
1002e351:	mov    eax,DWORD PTR [ecx+0x8]
1002e354:	cmp    BYTE PTR [eax+0x28],0x1
1002e358:	jne    0x1002e37c
1002e35a:	mov    eax,DWORD PTR [ecx]
1002e35c:	cmp    BYTE PTR [eax+0x28],0x1
1002e360:	jne    0x1002e37c
1002e362:	mov    BYTE PTR [ecx+0x28],0x0
1002e366:	mov    ebx,esi
1002e368:	mov    esi,DWORD PTR [esi+0x4]
1002e36b:	mov    eax,DWORD PTR [ebp+0x8]
1002e36e:	mov    eax,DWORD PTR [eax+0x4]
1002e371:	cmp    ebx,DWORD PTR [eax+0x4]
1002e374:	jne    0x1002e2aa
1002e37a:	jmp    0x1002e3b3
1002e37c:	mov    eax,DWORD PTR [ecx]
1002e37e:	cmp    BYTE PTR [eax+0x28],0x1
1002e382:	jne    0x1002e399
1002e384:	mov    eax,DWORD PTR [ecx+0x8]
1002e387:	push   DWORD PTR [ebp+0x8]
1002e38a:	mov    BYTE PTR [eax+0x28],0x1
1002e38e:	mov    BYTE PTR [ecx+0x28],0x0
1002e392:	call   0x1002e3f5
1002e397:	mov    ecx,DWORD PTR [esi]
1002e399:	mov    al,BYTE PTR [esi+0x28]
1002e39c:	push   DWORD PTR [ebp+0x8]
1002e39f:	mov    BYTE PTR [ecx+0x28],al
1002e3a2:	mov    BYTE PTR [esi+0x28],0x1
1002e3a6:	mov    eax,DWORD PTR [ecx]
1002e3a8:	mov    ecx,esi
1002e3aa:	mov    BYTE PTR [eax+0x28],0x1
1002e3ae:	call   0x10018d6f
1002e3b3:	mov    BYTE PTR [ebx+0x28],0x1
1002e3b7:	lea    eax,[edi+0x18]
1002e3ba:	push   eax
1002e3bb:	call   DWORD PTR ds:0x10065294
1002e3c1:	push   DWORD PTR [edi+0x10]
1002e3c4:	call   DWORD PTR ds:0x100652b4
1002e3ca:	push   edi
1002e3cb:	call   0x10041d92
1002e3d0:	pop    ecx
1002e3d1:	mov    ecx,DWORD PTR [ebp+0x8]
1002e3d4:	mov    eax,DWORD PTR [ecx+0x8]
1002e3d7:	test   eax,eax
1002e3d9:	jbe    0x1002e3df
1002e3db:	dec    eax
1002e3dc:	mov    DWORD PTR [ecx+0x8],eax
1002e3df:	mov    ecx,DWORD PTR [ebp+0x10]
1002e3e2:	mov    eax,DWORD PTR [ebp+0xc]
1002e3e5:	mov    DWORD PTR [eax],ecx
1002e3e7:	mov    ecx,DWORD PTR [ebp+0x14]
1002e3ea:	mov    DWORD PTR [eax+0x4],ecx
1002e3ed:	call   0x1005891d
1002e3f2:	ret    0x10
1002e3f5:	mov    eax,DWORD PTR [ecx+0x8]
1002e3f8:	mov    edx,DWORD PTR [eax]
1002e3fa:	mov    DWORD PTR [ecx+0x8],edx
1002e3fd:	mov    edx,DWORD PTR [eax]
1002e3ff:	cmp    BYTE PTR [edx+0x29],0x0
1002e403:	jne    0x1002e408
1002e405:	mov    DWORD PTR [edx+0x4],ecx
1002e408:	mov    edx,DWORD PTR [ecx+0x4]
1002e40b:	mov    DWORD PTR [eax+0x4],edx
1002e40e:	mov    edx,DWORD PTR [esp+0x4]
1002e412:	mov    edx,DWORD PTR [edx+0x4]
1002e415:	cmp    ecx,DWORD PTR [edx+0x4]
1002e418:	jne    0x1002e41f
1002e41a:	mov    DWORD PTR [edx+0x4],eax
1002e41d:	jmp    0x1002e42d
1002e41f:	mov    edx,DWORD PTR [ecx+0x4]
1002e422:	cmp    ecx,DWORD PTR [edx]
1002e424:	jne    0x1002e42a
1002e426:	mov    DWORD PTR [edx],eax
1002e428:	jmp    0x1002e42d
1002e42a:	mov    DWORD PTR [edx+0x8],eax
1002e42d:	mov    DWORD PTR [eax],ecx
1002e42f:	mov    DWORD PTR [ecx+0x4],eax
1002e432:	ret    0x4
1002e435:	push   0x30
1002e437:	call   0x1004239e
1002e43c:	xor    edx,edx
1002e43e:	cmp    eax,edx
1002e440:	pop    ecx
1002e441:	je     0x1002e445
1002e443:	mov    DWORD PTR [eax],edx
1002e445:	lea    ecx,[eax+0x4]
1002e448:	cmp    ecx,edx
1002e44a:	je     0x1002e44e
1002e44c:	mov    DWORD PTR [ecx],edx
1002e44e:	lea    ecx,[eax+0x8]
1002e451:	cmp    ecx,edx
1002e453:	je     0x1002e457
1002e455:	mov    DWORD PTR [ecx],edx
1002e457:	mov    BYTE PTR [eax+0x28],0x1
1002e45b:	mov    BYTE PTR [eax+0x29],dl
1002e45e:	ret    
1002e45f:	push   0x8
1002e461:	mov    eax,0x1005ed56
1002e466:	call   0x10058878
1002e46b:	push   0x30
1002e46d:	call   0x1004239e
1002e472:	mov    ebx,eax
1002e474:	pop    ecx
1002e475:	mov    DWORD PTR [ebp-0x14],ebx
1002e478:	test   ebx,ebx
1002e47a:	mov    DWORD PTR [ebp-0x4],0x1
1002e481:	je     0x1002e497
1002e483:	push   DWORD PTR [ebp+0x18]
1002e486:	mov    ecx,DWORD PTR [ebp+0x14]
1002e489:	push   DWORD PTR [ebp+0x10]
1002e48c:	push   DWORD PTR [ebp+0xc]
1002e48f:	push   DWORD PTR [ebp+0x8]
1002e492:	call   0x1002e4f9
1002e497:	mov    eax,ebx
1002e499:	call   0x1005891d
1002e49e:	ret    0x14
1002e4a1:	push   DWORD PTR [ebp-0x14]
1002e4a4:	call   0x10041d92
1002e4a9:	pop    ecx
1002e4aa:	push   0x0
1002e4ac:	push   0x0
1002e4ae:	call   0x10046704
1002e4b3:	int3   
1002e4b4:	push   ebx
1002e4b5:	push   esi
1002e4b6:	push   edi
1002e4b7:	mov    edi,DWORD PTR [esp+0x10]
1002e4bb:	cmp    BYTE PTR [edi+0x29],0x0
1002e4bf:	mov    ebx,ecx
1002e4c1:	mov    esi,edi
1002e4c3:	jne    0x1002e4f3
1002e4c5:	push   DWORD PTR [esi+0x8]
1002e4c8:	mov    ecx,ebx
1002e4ca:	call   0x1002e4b4
1002e4cf:	mov    esi,DWORD PTR [esi]
1002e4d1:	lea    eax,[edi+0x18]
1002e4d4:	push   eax
1002e4d5:	call   DWORD PTR ds:0x10065294
1002e4db:	push   DWORD PTR [edi+0x10]
1002e4de:	call   DWORD PTR ds:0x100652b4
1002e4e4:	push   edi
1002e4e5:	call   0x10041d92
1002e4ea:	cmp    BYTE PTR [esi+0x29],0x0
1002e4ee:	pop    ecx
1002e4ef:	mov    edi,esi
1002e4f1:	je     0x1002e4c5
1002e4f3:	pop    edi
1002e4f4:	pop    esi
1002e4f5:	pop    ebx
1002e4f6:	ret    0x4
1002e4f9:	push   0x0
1002e4fb:	mov    eax,0x1005ed36
1002e500:	call   0x10058845
1002e505:	mov    esi,ecx
1002e507:	mov    eax,DWORD PTR [ebp+0x8]
1002e50a:	mov    DWORD PTR [ebx],eax
1002e50c:	mov    eax,DWORD PTR [ebp+0xc]
1002e50f:	mov    DWORD PTR [ebx+0x4],eax
1002e512:	mov    eax,DWORD PTR [ebp+0x10]
1002e515:	lea    edi,[ebx+0x10]
1002e518:	mov    DWORD PTR [ebx+0x8],eax
1002e51b:	mov    DWORD PTR [ebp+0x8],edi
1002e51e:	call   0x1002ab7e
1002e523:	and    DWORD PTR [ebp-0x4],0x0
1002e527:	add    esi,0x8
1002e52a:	lea    eax,[edi+0x8]
1002e52d:	and    WORD PTR [eax],0x0
1002e531:	push   esi
1002e532:	mov    esi,eax
1002e534:	call   0x1002abac
1002e539:	mov    al,BYTE PTR [ebp+0x14]
1002e53c:	mov    BYTE PTR [ebx+0x28],al
1002e53f:	mov    BYTE PTR [ebx+0x29],0x0
1002e543:	mov    eax,ebx
1002e545:	call   0x1005891d
1002e54a:	ret    0x10
1002e54d:	push   0xc
1002e54f:	mov    eax,0x1005e717
1002e554:	call   0x10058878
1002e559:	mov    ebx,DWORD PTR [ebp+0x8]
1002e55c:	xor    edi,edi
1002e55e:	cmp    ebx,edi
1002e560:	jne    0x1002e569
1002e562:	mov    eax,0x80004003
1002e567:	jmp    0x1002e5cb
1002e569:	push   0x20
1002e56b:	mov    DWORD PTR [ebx],edi
1002e56d:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002e574:	mov    DWORD PTR [ebp-0x4],edi
1002e577:	call   0x1004239e
1002e57c:	mov    esi,eax
1002e57e:	cmp    esi,edi
1002e580:	pop    ecx
1002e581:	je     0x1002e5a8
1002e583:	mov    DWORD PTR [esi+0x4],edi
1002e586:	mov    DWORD PTR [esi+0x8],edi
1002e589:	mov    DWORD PTR [esi+0xc],edi
1002e58c:	mov    DWORD PTR [esi+0x10],edi
1002e58f:	mov    DWORD PTR [esi+0x14],edi
1002e592:	mov    DWORD PTR [esi+0x18],edi
1002e595:	mov    DWORD PTR [esi],0x10071b44
1002e59b:	mov    ecx,DWORD PTR ds:0x1007fbe4
1002e5a1:	mov    eax,DWORD PTR [ecx]
1002e5a3:	call   DWORD PTR [eax+0x4]
1002e5a6:	jmp    0x1002e5b9
1002e5a8:	xor    esi,esi
1002e5aa:	jmp    0x1002e5b9
1002e5ac:	mov    eax,0x1002e5b2
1002e5b1:	ret    
1002e5b2:	mov    ebx,DWORD PTR [ebp+0x8]
1002e5b5:	xor    edi,edi
1002e5b7:	mov    esi,edi
1002e5b9:	cmp    esi,edi
1002e5bb:	je     0x1002e5c6
1002e5bd:	inc    DWORD PTR [esi+0x4]
1002e5c0:	dec    DWORD PTR [esi+0x4]
1002e5c3:	mov    DWORD PTR [ebp-0x14],edi
1002e5c6:	mov    eax,DWORD PTR [ebp-0x14]
1002e5c9:	mov    DWORD PTR [ebx],esi
1002e5cb:	call   0x1005891d
1002e5d0:	ret    0x4
1002e5d3:	push   0xc
1002e5d5:	mov    eax,0x1005f7b8
1002e5da:	call   0x10058878
1002e5df:	mov    ebx,DWORD PTR [ebp+0x8]
1002e5e2:	xor    edi,edi
1002e5e4:	cmp    ebx,edi
1002e5e6:	jne    0x1002e5ef
1002e5e8:	mov    eax,0x80004003
1002e5ed:	jmp    0x1002e64b
1002e5ef:	push   0x18
1002e5f1:	mov    DWORD PTR [ebx],edi
1002e5f3:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002e5fa:	mov    DWORD PTR [ebp-0x4],edi
1002e5fd:	call   0x1004239e
1002e602:	mov    esi,eax
1002e604:	cmp    esi,edi
1002e606:	pop    ecx
1002e607:	je     0x1002e628
1002e609:	mov    DWORD PTR [esi+0x14],edi
1002e60c:	mov    DWORD PTR [esi+0x8],edi
1002e60f:	mov    DWORD PTR [esi+0xc],edi
1002e612:	mov    DWORD PTR [esi+0x10],edi
1002e615:	mov    DWORD PTR [esi],0x10071b7c
1002e61b:	mov    ecx,DWORD PTR ds:0x1007fbe4
1002e621:	mov    eax,DWORD PTR [ecx]
1002e623:	call   DWORD PTR [eax+0x4]
1002e626:	jmp    0x1002e639
1002e628:	xor    esi,esi
1002e62a:	jmp    0x1002e639
1002e62c:	mov    eax,0x1002e632
1002e631:	ret    
1002e632:	mov    ebx,DWORD PTR [ebp+0x8]
1002e635:	xor    edi,edi
1002e637:	mov    esi,edi
1002e639:	cmp    esi,edi
1002e63b:	je     0x1002e646
1002e63d:	inc    DWORD PTR [esi+0x14]
1002e640:	dec    DWORD PTR [esi+0x14]
1002e643:	mov    DWORD PTR [ebp-0x14],edi
1002e646:	mov    eax,DWORD PTR [ebp-0x14]
1002e649:	mov    DWORD PTR [ebx],esi
1002e64b:	call   0x1005891d
1002e650:	ret    0x4
1002e653:	push   0xc
1002e655:	mov    eax,0x10060754
1002e65a:	call   0x10058878
1002e65f:	mov    ebx,DWORD PTR [ebp+0x8]
1002e662:	xor    esi,esi
1002e664:	cmp    ebx,esi
1002e666:	jne    0x1002e66f
1002e668:	mov    eax,0x80004003
1002e66d:	jmp    0x1002e6d3
1002e66f:	push   0x14
1002e671:	mov    DWORD PTR [ebx],esi
1002e673:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002e67a:	mov    DWORD PTR [ebp-0x18],esi
1002e67d:	mov    DWORD PTR [ebp-0x4],esi
1002e680:	call   0x1004239e
1002e685:	mov    edi,eax
1002e687:	cmp    edi,esi
1002e689:	pop    ecx
1002e68a:	je     0x1002e6b0
1002e68c:	mov    DWORD PTR [edi+0x10],esi
1002e68f:	lea    esi,[edi+0x4]
1002e692:	mov    DWORD PTR [edi],0x10071be4
1002e698:	call   0x1002d2f5
1002e69d:	mov    DWORD PTR [edi],0x10071bac
1002e6a3:	mov    ecx,DWORD PTR ds:0x1007fbe4
1002e6a9:	mov    eax,DWORD PTR [ecx]
1002e6ab:	call   DWORD PTR [eax+0x4]
1002e6ae:	jmp    0x1002e6c0
1002e6b0:	xor    edi,edi
1002e6b2:	jmp    0x1002e6c0
1002e6b4:	mov    eax,0x1002e6ba
1002e6b9:	ret    
1002e6ba:	mov    ebx,DWORD PTR [ebp+0x8]
1002e6bd:	mov    edi,DWORD PTR [ebp-0x18]
1002e6c0:	test   edi,edi
1002e6c2:	je     0x1002e6ce
1002e6c4:	inc    DWORD PTR [edi+0x10]
1002e6c7:	and    DWORD PTR [ebp-0x14],0x0
1002e6cb:	dec    DWORD PTR [edi+0x10]
1002e6ce:	mov    eax,DWORD PTR [ebp-0x14]
1002e6d1:	mov    DWORD PTR [ebx],edi
1002e6d3:	call   0x1005891d
1002e6d8:	ret    0x4
1002e6db:	push   0xc
1002e6dd:	mov    eax,0x1005e6fc
1002e6e2:	call   0x10058878
1002e6e7:	mov    ebx,DWORD PTR [ebp+0x8]
1002e6ea:	xor    edi,edi
1002e6ec:	cmp    ebx,edi
1002e6ee:	jne    0x1002e6f7
1002e6f0:	mov    eax,0x80004003
1002e6f5:	jmp    0x1002e74d
1002e6f7:	push   0x18
1002e6f9:	mov    DWORD PTR [ebx],edi
1002e6fb:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002e702:	mov    DWORD PTR [ebp-0x4],edi
1002e705:	call   0x1004239e
1002e70a:	mov    esi,eax
1002e70c:	cmp    esi,edi
1002e70e:	pop    ecx
1002e70f:	je     0x1002e730
1002e711:	mov    DWORD PTR [esi+0x4],edi
1002e714:	mov    DWORD PTR [esi+0xc],edi
1002e717:	mov    DWORD PTR [esi+0x10],edi
1002e71a:	mov    DWORD PTR [esi+0x14],edi
1002e71d:	mov    DWORD PTR [esi],0x10071c20
1002e723:	mov    ecx,DWORD PTR ds:0x1007fbe4
1002e729:	mov    eax,DWORD PTR [ecx]
1002e72b:	call   DWORD PTR [eax+0x4]
1002e72e:	jmp    0x1002e741
1002e730:	xor    esi,esi
1002e732:	jmp    0x1002e741
1002e734:	mov    eax,0x1002e73a
1002e739:	ret    
1002e73a:	mov    ebx,DWORD PTR [ebp+0x8]
1002e73d:	xor    edi,edi
1002e73f:	mov    esi,edi
1002e741:	cmp    esi,edi
1002e743:	je     0x1002e748
1002e745:	mov    DWORD PTR [ebp-0x14],edi
1002e748:	mov    eax,DWORD PTR [ebp-0x14]
1002e74b:	mov    DWORD PTR [ebx],esi
1002e74d:	call   0x1005891d
1002e752:	ret    0x4
1002e755:	push   ebp
1002e756:	mov    ebp,esp
1002e758:	mov    edx,DWORD PTR [ebp+0x10]
1002e75b:	xor    ecx,ecx
1002e75d:	sub    esp,0x1c
1002e760:	cmp    edx,ecx
1002e762:	je     0x1002e855
1002e768:	cmp    DWORD PTR [ebp+0xc],0x1
1002e76c:	je     0x1002e777
1002e76e:	cmp    DWORD PTR [ebp+0x14],ecx
1002e771:	je     0x1002e855
1002e777:	mov    eax,DWORD PTR [ebp+0x14]
1002e77a:	cmp    eax,ecx
1002e77c:	je     0x1002e780
1002e77e:	mov    DWORD PTR [eax],ecx
1002e780:	mov    eax,DWORD PTR [ebp+0x8]
1002e783:	cmp    DWORD PTR [eax+0x8],ecx
1002e786:	jne    0x1002e792
1002e788:	mov    eax,0x80004005
1002e78d:	jmp    0x1002e85a
1002e792:	push   ebx
1002e793:	push   esi
1002e794:	push   edi
1002e795:	mov    DWORD PTR [ebp-0x4],ecx
1002e798:	mov    DWORD PTR [ebp-0x8],ecx
1002e79b:	mov    DWORD PTR [ebp-0xc],edx
1002e79e:	lea    esi,[eax+0xc]
1002e7a1:	jmp    0x1002e7a6
1002e7a3:	mov    eax,DWORD PTR [ebp+0x8]
1002e7a6:	mov    edi,DWORD PTR [eax+0x8]
1002e7a9:	mov    ebx,DWORD PTR [edi+0x8]
1002e7ac:	cmp    DWORD PTR [edi+0x4],ebx
1002e7af:	jbe    0x1002e7b6
1002e7b1:	call   0x100422b0
1002e7b6:	mov    DWORD PTR [ebp-0x14],edi
1002e7b9:	lea    edi,[ebp-0x14]
1002e7bc:	mov    DWORD PTR [ebp-0x10],ebx
1002e7bf:	call   0x1002da83
1002e7c4:	test   al,al
1002e7c6:	je     0x1002e818
1002e7c8:	mov    eax,DWORD PTR [ebp-0x4]
1002e7cb:	cmp    eax,DWORD PTR [ebp+0xc]
1002e7ce:	jae    0x1002e818
1002e7d0:	xor    ebx,ebx
1002e7d2:	cmp    DWORD PTR [esi],ebx
1002e7d4:	jne    0x1002e7db
1002e7d6:	call   0x100422b0
1002e7db:	mov    eax,DWORD PTR [esi]
1002e7dd:	mov    ecx,DWORD PTR [esi+0x4]
1002e7e0:	cmp    ecx,DWORD PTR [eax+0x8]
1002e7e3:	jb     0x1002e7ea
1002e7e5:	call   0x100422b0
1002e7ea:	mov    eax,DWORD PTR [esi+0x4]
1002e7ed:	mov    edi,DWORD PTR [ebp-0xc]
1002e7f0:	push   eax
1002e7f1:	push   edi
1002e7f2:	mov    WORD PTR [edi],bx
1002e7f5:	call   DWORD PTR ds:0x10065280
1002e7fb:	cmp    eax,ebx
1002e7fd:	mov    DWORD PTR [ebp-0x8],eax
1002e800:	jl     0x1002e84b
1002e802:	add    edi,0x10
1002e805:	mov    DWORD PTR [ebp-0xc],edi
1002e808:	lea    edi,[ebp-0x1c]
1002e80b:	call   0x1002da59
1002e810:	inc    DWORD PTR [ebp-0x4]
1002e813:	cmp    DWORD PTR [ebp-0x8],ebx
1002e816:	jge    0x1002e7a3
1002e818:	cmp    DWORD PTR [ebp-0x8],0x0
1002e81c:	pop    edi
1002e81d:	pop    esi
1002e81e:	pop    ebx
1002e81f:	jl     0x1002e839
1002e821:	mov    eax,DWORD PTR [ebp+0x14]
1002e824:	test   eax,eax
1002e826:	mov    ecx,DWORD PTR [ebp-0x4]
1002e829:	je     0x1002e82d
1002e82b:	mov    DWORD PTR [eax],ecx
1002e82d:	cmp    ecx,DWORD PTR [ebp+0xc]
1002e830:	jae    0x1002e839
1002e832:	mov    DWORD PTR [ebp-0x8],0x1
1002e839:	mov    eax,DWORD PTR [ebp-0x8]
1002e83c:	jmp    0x1002e85a
1002e83e:	push   DWORD PTR [ebp+0x10]
1002e841:	call   DWORD PTR ds:0x10065294
1002e847:	add    DWORD PTR [ebp+0x10],0x10
1002e84b:	cmp    DWORD PTR [ebp+0x10],edi
1002e84e:	jb     0x1002e83e
1002e850:	mov    DWORD PTR [ebp-0x4],ebx
1002e853:	jmp    0x1002e813
1002e855:	mov    eax,0x80004003
1002e85a:	leave  
1002e85b:	ret    0x10
1002e85e:	push   ebp
1002e85f:	mov    ebp,esp
1002e861:	sub    esp,0x14
1002e864:	and    DWORD PTR [ebp-0x4],0x0
1002e868:	cmp    DWORD PTR [ebp+0xc],0x0
1002e86c:	je     0x1002e8b9
1002e86e:	push   ebx
1002e86f:	mov    ebx,DWORD PTR [ebp+0x8]
1002e872:	push   esi
1002e873:	push   edi
1002e874:	mov    edi,DWORD PTR [ebx+0x8]
1002e877:	mov    esi,DWORD PTR [edi+0x8]
1002e87a:	dec    DWORD PTR [ebp+0xc]
1002e87d:	cmp    DWORD PTR [edi+0x4],esi
1002e880:	jbe    0x1002e887
1002e882:	call   0x100422b0
1002e887:	mov    DWORD PTR [ebp-0xc],edi
1002e88a:	mov    DWORD PTR [ebp-0x8],esi
1002e88d:	lea    edi,[ebp-0xc]
1002e890:	lea    esi,[ebx+0xc]
1002e893:	call   0x1002da83
1002e898:	test   al,al
1002e89a:	je     0x1002e8af
1002e89c:	lea    edi,[ebp-0x14]
1002e89f:	lea    esi,[ebx+0xc]
1002e8a2:	call   0x1002da59
1002e8a7:	cmp    DWORD PTR [ebp+0xc],0x0
1002e8ab:	jne    0x1002e874
1002e8ad:	jmp    0x1002e8b6
1002e8af:	mov    DWORD PTR [ebp-0x4],0x1
1002e8b6:	pop    edi
1002e8b7:	pop    esi
1002e8b8:	pop    ebx
1002e8b9:	mov    eax,DWORD PTR [ebp-0x4]
1002e8bc:	leave  
1002e8bd:	ret    0x8
1002e8c0:	push   ebp
1002e8c1:	mov    ebp,esp
1002e8c3:	push   ecx
1002e8c4:	mov    eax,DWORD PTR [ebp+0xc]
1002e8c7:	test   eax,eax
1002e8c9:	push   ebx
1002e8ca:	mov    ebx,0x80004003
1002e8cf:	je     0x1002e932
1002e8d1:	and    DWORD PTR [eax],0x0
1002e8d4:	lea    eax,[ebp-0x4]
1002e8d7:	push   eax
1002e8d8:	call   0x1002e6db
1002e8dd:	mov    ebx,eax
1002e8df:	test   ebx,ebx
1002e8e1:	jl     0x1002e932
1002e8e3:	push   esi
1002e8e4:	mov    esi,DWORD PTR [ebp+0x8]
1002e8e7:	mov    eax,DWORD PTR [esi+0x4]
1002e8ea:	push   edi
1002e8eb:	mov    edi,DWORD PTR [ebp-0x4]
1002e8ee:	push   DWORD PTR [esi+0x8]
1002e8f1:	mov    ebx,edi
1002e8f3:	call   0x1002daca
1002e8f8:	mov    ebx,eax
1002e8fa:	test   ebx,ebx
1002e8fc:	jl     0x1002e923
1002e8fe:	mov    eax,DWORD PTR [esi+0xc]
1002e901:	mov    ebx,DWORD PTR [ebp+0xc]
1002e904:	mov    DWORD PTR [edi+0xc],eax
1002e907:	mov    eax,DWORD PTR [esi+0x10]
1002e90a:	push   0x100717b8
1002e90f:	mov    DWORD PTR [edi+0x10],eax
1002e912:	push   edi
1002e913:	mov    eax,0x10071b24
1002e918:	call   0x10010077
1002e91d:	mov    ebx,eax
1002e91f:	test   ebx,ebx
1002e921:	jge    0x1002e930
1002e923:	test   edi,edi
1002e925:	je     0x1002e930
1002e927:	mov    eax,DWORD PTR [edi]
1002e929:	push   0x1
1002e92b:	mov    ecx,edi
1002e92d:	call   DWORD PTR [eax+0x1c]
1002e930:	pop    edi
1002e931:	pop    esi
1002e932:	mov    eax,ebx
1002e934:	pop    ebx
1002e935:	leave  
1002e936:	ret    0x8
1002e939:	push   0xc
1002e93b:	mov    eax,0x10060739
1002e940:	call   0x10058878
1002e945:	mov    ebx,DWORD PTR [ebp+0x8]
1002e948:	xor    esi,esi
1002e94a:	cmp    ebx,esi
1002e94c:	jne    0x1002e955
1002e94e:	mov    eax,0x80004003
1002e953:	jmp    0x1002e9ad
1002e955:	push   0x14
1002e957:	mov    DWORD PTR [ebx],esi
1002e959:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002e960:	mov    DWORD PTR [ebp-0x18],esi
1002e963:	mov    DWORD PTR [ebp-0x4],esi
1002e966:	call   0x1004239e
1002e96b:	mov    edi,eax
1002e96d:	cmp    edi,esi
1002e96f:	pop    ecx
1002e970:	je     0x1002e990
1002e972:	mov    DWORD PTR [edi+0x4],esi
1002e975:	lea    esi,[edi+0x8]
1002e978:	call   0x1002d2f5
1002e97d:	mov    DWORD PTR [edi],0x10071c40
1002e983:	mov    ecx,DWORD PTR ds:0x1007fbe4
1002e989:	mov    eax,DWORD PTR [ecx]
1002e98b:	call   DWORD PTR [eax+0x4]
1002e98e:	jmp    0x1002e9a0
1002e990:	xor    edi,edi
1002e992:	jmp    0x1002e9a0
1002e994:	mov    eax,0x1002e99a
1002e999:	ret    
1002e99a:	mov    ebx,DWORD PTR [ebp+0x8]
1002e99d:	mov    edi,DWORD PTR [ebp-0x18]
1002e9a0:	test   edi,edi
1002e9a2:	je     0x1002e9a8
1002e9a4:	and    DWORD PTR [ebp-0x14],0x0
1002e9a8:	mov    eax,DWORD PTR [ebp-0x14]
1002e9ab:	mov    DWORD PTR [ebx],edi
1002e9ad:	call   0x1005891d
1002e9b2:	ret    0x4
1002e9b5:	push   ebp
1002e9b6:	mov    ebp,esp
1002e9b8:	push   ecx
1002e9b9:	test   edi,edi
1002e9bb:	jne    0x1002e9c4
1002e9bd:	mov    eax,0x80004003
1002e9c2:	leave  
1002e9c3:	ret    
1002e9c4:	and    DWORD PTR [edi],0x0
1002e9c7:	and    DWORD PTR [ebp-0x4],0x0
1002e9cb:	lea    eax,[ebp-0x4]
1002e9ce:	push   eax
1002e9cf:	call   0x1002ea12
1002e9d4:	test   eax,eax
1002e9d6:	jl     0x1002ea10
1002e9d8:	mov    eax,DWORD PTR [ebp+0x8]
1002e9db:	push   ebx
1002e9dc:	mov    ebx,DWORD PTR [ebp-0x4]
1002e9df:	push   esi
1002e9e0:	push   DWORD PTR [ebp+0xc]
1002e9e3:	call   0x1002dbcd
1002e9e8:	mov    esi,eax
1002e9ea:	test   esi,esi
1002e9ec:	jl     0x1002e9ff
1002e9ee:	mov    eax,DWORD PTR [ebx]
1002e9f0:	push   edi
1002e9f1:	push   0x1006c9b4
1002e9f6:	push   ebx
1002e9f7:	call   DWORD PTR [eax]
1002e9f9:	mov    esi,eax
1002e9fb:	test   esi,esi
1002e9fd:	jge    0x1002ea0c
1002e9ff:	test   ebx,ebx
1002ea01:	je     0x1002ea0c
1002ea03:	mov    eax,DWORD PTR [ebx]
1002ea05:	push   0x1
1002ea07:	mov    ecx,ebx
1002ea09:	call   DWORD PTR [eax+0x1c]
1002ea0c:	mov    eax,esi
1002ea0e:	pop    esi
1002ea0f:	pop    ebx
1002ea10:	leave  
1002ea11:	ret    
1002ea12:	push   0xc
1002ea14:	mov    eax,0x1005e6e1
1002ea19:	call   0x10058878
1002ea1e:	mov    ebx,DWORD PTR [ebp+0x8]
1002ea21:	xor    edi,edi
1002ea23:	cmp    ebx,edi
1002ea25:	jne    0x1002ea2e
1002ea27:	mov    eax,0x80004003
1002ea2c:	jmp    0x1002ea84
1002ea2e:	push   0x18
1002ea30:	mov    DWORD PTR [ebx],edi
1002ea32:	mov    DWORD PTR [ebp-0x14],0x8007000e
1002ea39:	mov    DWORD PTR [ebp-0x4],edi
1002ea3c:	call   0x1004239e
1002ea41:	mov    esi,eax
1002ea43:	cmp    esi,edi
1002ea45:	pop    ecx
1002ea46:	je     0x1002ea67
1002ea48:	mov    DWORD PTR [esi+0x4],edi
1002ea4b:	mov    DWORD PTR [esi+0xc],edi
1002ea4e:	mov    DWORD PTR [esi+0x10],edi
1002ea51:	mov    DWORD PTR [esi+0x14],edi
1002ea54:	mov    DWORD PTR [esi],0x10071c50
1002ea5a:	mov    ecx,DWORD PTR ds:0x1007fbe4
1002ea60:	mov    eax,DWORD PTR [ecx]
1002ea62:	call   DWORD PTR [eax+0x4]
1002ea65:	jmp    0x1002ea78
1002ea67:	xor    esi,esi
1002ea69:	jmp    0x1002ea78
1002ea6b:	mov    eax,0x1002ea71
1002ea70:	ret    
1002ea71:	mov    ebx,DWORD PTR [ebp+0x8]
1002ea74:	xor    edi,edi
1002ea76:	mov    esi,edi
1002ea78:	cmp    esi,edi
1002ea7a:	je     0x1002ea7f
1002ea7c:	mov    DWORD PTR [ebp-0x14],edi
1002ea7f:	mov    eax,DWORD PTR [ebp-0x14]
1002ea82:	mov    DWORD PTR [ebx],esi
1002ea84:	call   0x1005891d
1002ea89:	ret    0x4
1002ea8c:	push   ebp
1002ea8d:	mov    ebp,esp
1002ea8f:	sub    esp,0x10
1002ea92:	push   ebx
1002ea93:	mov    ebx,DWORD PTR [ebp+0x10]
1002ea96:	xor    ecx,ecx
1002ea98:	cmp    ebx,ecx
1002ea9a:	je     0x1002eb62
1002eaa0:	cmp    DWORD PTR [ebp+0xc],0x1
1002eaa4:	je     0x1002eaaf
1002eaa6:	cmp    DWORD PTR [ebp+0x14],ecx
1002eaa9:	je     0x1002eb62
1002eaaf:	mov    eax,DWORD PTR [ebp+0x14]
1002eab2:	cmp    eax,ecx
1002eab4:	je     0x1002eab8
1002eab6:	mov    DWORD PTR [eax],ecx
1002eab8:	mov    eax,DWORD PTR [ebp+0x8]
1002eabb:	cmp    DWORD PTR [eax+0x8],ecx
1002eabe:	jne    0x1002eaca
1002eac0:	mov    eax,0x80004005
1002eac5:	jmp    0x1002eb67
1002eaca:	push   esi
1002eacb:	push   edi
1002eacc:	mov    DWORD PTR [ebp-0x4],ecx
1002eacf:	mov    DWORD PTR [ebp-0x8],ecx
1002ead2:	lea    esi,[eax+0xc]
1002ead5:	jmp    0x1002eada
1002ead7:	mov    eax,DWORD PTR [ebp+0x8]
1002eada:	mov    eax,DWORD PTR [eax+0x8]
1002eadd:	mov    ecx,DWORD PTR [eax+0x4]
1002eae0:	lea    edi,[ebp-0x10]
1002eae3:	mov    DWORD PTR [ebp-0xc],ecx
1002eae6:	mov    DWORD PTR [ebp-0x10],eax
1002eae9:	call   0x100046f1
1002eaee:	test   al,al
1002eaf0:	jne    0x1002eb26
1002eaf2:	mov    eax,DWORD PTR [ebp-0x4]
1002eaf5:	cmp    eax,DWORD PTR [ebp+0xc]
1002eaf8:	jae    0x1002eb26
1002eafa:	call   0x1002d480
1002eaff:	add    eax,0x8
1002eb02:	push   eax
1002eb03:	xor    edi,edi
1002eb05:	push   ebx
1002eb06:	mov    WORD PTR [ebx],di
1002eb09:	call   DWORD PTR ds:0x10065280
1002eb0f:	cmp    eax,edi
1002eb11:	mov    DWORD PTR [ebp-0x8],eax
1002eb14:	jl     0x1002eb58
1002eb16:	add    ebx,0x10
1002eb19:	call   0x1002da0c
1002eb1e:	inc    DWORD PTR [ebp-0x4]
1002eb21:	cmp    DWORD PTR [ebp-0x8],edi
1002eb24:	jge    0x1002ead7
1002eb26:	cmp    DWORD PTR [ebp-0x8],0x0
1002eb2a:	pop    edi
1002eb2b:	pop    esi
1002eb2c:	jl     0x1002eb46
1002eb2e:	mov    eax,DWORD PTR [ebp+0x14]
1002eb31:	test   eax,eax
1002eb33:	mov    ecx,DWORD PTR [ebp-0x4]
1002eb36:	je     0x1002eb3a
1002eb38:	mov    DWORD PTR [eax],ecx
1002eb3a:	cmp    ecx,DWORD PTR [ebp+0xc]
1002eb3d:	jae    0x1002eb46
1002eb3f:	mov    DWORD PTR [ebp-0x8],0x1
1002eb46:	mov    eax,DWORD PTR [ebp-0x8]
1002eb49:	jmp    0x1002eb67
1002eb4b:	push   DWORD PTR [ebp+0x10]
1002eb4e:	call   DWORD PTR ds:0x10065294
1002eb54:	add    DWORD PTR [ebp+0x10],0x10
1002eb58:	cmp    DWORD PTR [ebp+0x10],ebx
1002eb5b:	jb     0x1002eb4b
1002eb5d:	mov    DWORD PTR [ebp-0x4],edi
1002eb60:	jmp    0x1002eb21
1002eb62:	mov    eax,0x80004003
1002eb67:	pop    ebx
1002eb68:	leave  
1002eb69:	ret    0x10
1002eb6c:	push   ebp
1002eb6d:	mov    ebp,esp
1002eb6f:	sub    esp,0xc
1002eb72:	and    DWORD PTR [ebp-0x4],0x0
1002eb76:	cmp    DWORD PTR [ebp+0xc],0x0
1002eb7a:	je     0x1002ebb7
1002eb7c:	push   ebx
1002eb7d:	mov    ebx,DWORD PTR [ebp+0x8]
1002eb80:	push   esi
1002eb81:	lea    esi,[ebx+0xc]
1002eb84:	push   edi
1002eb85:	mov    eax,DWORD PTR [ebx+0x8]
1002eb88:	mov    ecx,DWORD PTR [eax+0x4]
1002eb8b:	dec    DWORD PTR [ebp+0xc]
1002eb8e:	lea    edi,[ebp-0xc]
1002eb91:	mov    DWORD PTR [ebp-0x8],ecx
1002eb94:	mov    DWORD PTR [ebp-0xc],eax
1002eb97:	call   0x100046f1
1002eb9c:	test   al,al
1002eb9e:	jne    0x1002ebad
1002eba0:	call   0x1002da0c
1002eba5:	cmp    DWORD PTR [ebp+0xc],0x0
1002eba9:	jne    0x1002eb85
1002ebab:	jmp    0x1002ebb4
1002ebad:	mov    DWORD PTR [ebp-0x4],0x1
1002ebb4:	pop    edi
1002ebb5:	pop    esi
1002ebb6:	pop    ebx
1002ebb7:	mov    eax,DWORD PTR [ebp-0x4]
1002ebba:	leave  
1002ebbb:	ret    0x8
1002ebbe:	push   ebp
1002ebbf:	mov    ebp,esp
1002ebc1:	push   ecx
1002ebc2:	mov    eax,DWORD PTR [ebp+0xc]
1002ebc5:	test   eax,eax
1002ebc7:	push   ebx
1002ebc8:	mov    ebx,0x80004003
1002ebcd:	je     0x1002ec30
1002ebcf:	and    DWORD PTR [eax],0x0
1002ebd2:	lea    eax,[ebp-0x4]
1002ebd5:	push   eax
1002ebd6:	call   0x1002ea12
1002ebdb:	mov    ebx,eax
1002ebdd:	test   ebx,ebx
1002ebdf:	jl     0x1002ec30
1002ebe1:	push   esi
1002ebe2:	mov    esi,DWORD PTR [ebp+0x8]
1002ebe5:	mov    eax,DWORD PTR [esi+0x4]
1002ebe8:	push   edi
1002ebe9:	mov    edi,DWORD PTR [ebp-0x4]
1002ebec:	push   DWORD PTR [esi+0x8]
1002ebef:	mov    ebx,edi
1002ebf1:	call   0x1002dbcd
1002ebf6:	mov    ebx,eax
1002ebf8:	test   ebx,ebx
1002ebfa:	jl     0x1002ec21
1002ebfc:	mov    eax,DWORD PTR [esi+0xc]
1002ebff:	mov    ebx,DWORD PTR [ebp+0xc]
1002ec02:	mov    DWORD PTR [edi+0xc],eax
1002ec05:	mov    eax,DWORD PTR [esi+0x10]
1002ec08:	push   0x100717b8
1002ec0d:	mov    DWORD PTR [edi+0x10],eax
1002ec10:	push   edi
1002ec11:	mov    eax,0x10071b24
1002ec16:	call   0x10010077
1002ec1b:	mov    ebx,eax
1002ec1d:	test   ebx,ebx
1002ec1f:	jge    0x1002ec2e
1002ec21:	test   edi,edi
1002ec23:	je     0x1002ec2e
1002ec25:	mov    eax,DWORD PTR [edi]
1002ec27:	push   0x1
1002ec29:	mov    ecx,edi
1002ec2b:	call   DWORD PTR [eax+0x1c]
1002ec2e:	pop    edi
1002ec2f:	pop    esi
1002ec30:	mov    eax,ebx
1002ec32:	pop    ebx
1002ec33:	leave  
1002ec34:	ret    0x8
1002ec37:	push   ebp
1002ec38:	mov    ebp,esp
1002ec3a:	push   ecx
1002ec3b:	push   edi
1002ec3c:	xor    eax,eax
1002ec3e:	lea    edi,[ebp-0x4]
1002ec41:	stos   BYTE PTR es:[edi],al
1002ec42:	push   DWORD PTR [ebp-0x4]
1002ec45:	push   DWORD PTR [ebp+0xc]
1002ec48:	push   DWORD PTR [ebp+0xc]
1002ec4b:	push   DWORD PTR [ebp+0x8]
1002ec4e:	call   0x1002edb3
1002ec53:	add    esp,0x10
1002ec56:	pop    edi
1002ec57:	leave  
1002ec58:	ret    0x8
1002ec5b:	push   ebx
1002ec5c:	push   esi
1002ec5d:	push   edi
1002ec5e:	mov    ebx,eax
1002ec60:	mov    eax,DWORD PTR [ebx+0x4]
1002ec63:	mov    esi,ecx
1002ec65:	mov    edi,DWORD PTR [esi+0x4]
1002ec68:	add    eax,0x4
1002ec6b:	push   edi
1002ec6c:	push   DWORD PTR [eax]
1002ec6e:	call   0x1002ecb7
1002ec73:	mov    DWORD PTR [edi+0x4],eax
1002ec76:	mov    eax,DWORD PTR [ebx+0x8]
1002ec79:	mov    DWORD PTR [esi+0x8],eax
1002ec7c:	mov    eax,DWORD PTR [esi+0x4]
1002ec7f:	mov    ecx,DWORD PTR [eax+0x4]
1002ec82:	xor    bl,bl
1002ec84:	cmp    BYTE PTR [ecx+0x29],bl
1002ec87:	je     0x1002ec97
1002ec89:	mov    DWORD PTR [eax],eax
1002ec8b:	mov    esi,DWORD PTR [esi+0x4]
1002ec8e:	mov    DWORD PTR [esi+0x8],esi
1002ec91:	pop    edi
1002ec92:	pop    esi
1002ec93:	pop    ebx
1002ec94:	ret    
1002ec95:	mov    ecx,edx
1002ec97:	mov    edx,DWORD PTR [ecx]
1002ec99:	cmp    BYTE PTR [edx+0x29],bl
1002ec9c:	je     0x1002ec95
1002ec9e:	mov    DWORD PTR [eax],ecx
1002eca0:	mov    esi,DWORD PTR [esi+0x4]
1002eca3:	mov    ecx,DWORD PTR [esi+0x4]
1002eca6:	jmp    0x1002ecaa
1002eca8:	mov    ecx,eax
1002ecaa:	mov    eax,DWORD PTR [ecx+0x8]
1002ecad:	cmp    BYTE PTR [eax+0x29],bl
1002ecb0:	je     0x1002eca8
1002ecb2:	mov    DWORD PTR [esi+0x8],ecx
1002ecb5:	jmp    0x1002ec91
1002ecb7:	push   0xc
1002ecb9:	mov    eax,0x1005f79d
1002ecbe:	call   0x10058878
1002ecc3:	mov    edi,ecx
1002ecc5:	mov    DWORD PTR [ebp-0x18],edi
1002ecc8:	mov    esi,DWORD PTR [ebp+0x8]
1002eccb:	cmp    BYTE PTR [esi+0x29],0x0
1002eccf:	mov    eax,DWORD PTR [edi+0x4]
1002ecd2:	mov    DWORD PTR [ebp-0x14],eax
1002ecd5:	jne    0x1002ed16
1002ecd7:	movzx  ecx,BYTE PTR [esi+0x28]
1002ecdb:	push   ecx
1002ecdc:	lea    ecx,[esi+0x10]
1002ecdf:	push   ecx
1002ece0:	push   eax
1002ece1:	push   DWORD PTR [ebp+0xc]
1002ece4:	push   eax
1002ece5:	call   0x1002e45f
1002ecea:	mov    ebx,eax
1002ecec:	mov    eax,DWORD PTR [ebp-0x14]
1002ecef:	cmp    BYTE PTR [eax+0x29],0x0
1002ecf3:	je     0x1002ecf8
1002ecf5:	mov    DWORD PTR [ebp-0x14],ebx
1002ecf8:	and    DWORD PTR [ebp-0x4],0x0
1002ecfc:	push   ebx
1002ecfd:	push   DWORD PTR [esi]
1002ecff:	mov    ecx,edi
1002ed01:	call   0x1002ecb7
1002ed06:	push   ebx
1002ed07:	mov    DWORD PTR [ebx],eax
1002ed09:	push   DWORD PTR [esi+0x8]
1002ed0c:	mov    ecx,edi
1002ed0e:	call   0x1002ecb7
1002ed13:	mov    DWORD PTR [ebx+0x8],eax
1002ed16:	mov    eax,DWORD PTR [ebp-0x14]
1002ed19:	call   0x1005891d
1002ed1e:	ret    0x8
1002ed21:	push   DWORD PTR [ebp-0x14]
1002ed24:	mov    ecx,DWORD PTR [ebp-0x18]
1002ed27:	call   0x1002e4b4
1002ed2c:	push   0x0
1002ed2e:	push   0x0
1002ed30:	call   0x10046704
1002ed35:	int3   
1002ed36:	push   0x8
1002ed38:	mov    eax,0x1005e6c6
1002ed3d:	call   0x10058878
1002ed42:	mov    eax,DWORD PTR [ebp+0x8]
1002ed45:	and    DWORD PTR [ebp-0x4],0x0
1002ed49:	mov    DWORD PTR [ebp-0x14],eax
1002ed4c:	cmp    DWORD PTR [ebp+0xc],0x0
1002ed50:	jbe    0x1002ed83
1002ed52:	push   DWORD PTR [ebp+0x10]
1002ed55:	mov    ecx,DWORD PTR [ebp+0x8]
1002ed58:	call   0x1002ed89
1002ed5d:	dec    DWORD PTR [ebp+0xc]
1002ed60:	add    DWORD PTR [ebp+0x8],0x10
1002ed64:	jmp    0x1002ed4c
1002ed66:	mov    esi,DWORD PTR [ebp-0x14]
1002ed69:	jmp    0x1002ed75
1002ed6b:	push   esi
1002ed6c:	call   DWORD PTR ds:0x10065294
1002ed72:	add    esi,0x10
1002ed75:	cmp    esi,DWORD PTR [ebp+0x8]
1002ed78:	jne    0x1002ed6b
1002ed7a:	push   0x0
1002ed7c:	push   0x0
1002ed7e:	call   0x10046704
1002ed83:	call   0x1005891d
1002ed88:	ret    
1002ed89:	push   0x0
1002ed8b:	mov    eax,0x1005ea1f
1002ed90:	call   0x10058845
1002ed95:	mov    esi,ecx
1002ed97:	and    DWORD PTR [ebp-0x4],0x0
1002ed9b:	test   esi,esi
1002ed9d:	je     0x1002edab
1002ed9f:	push   DWORD PTR [ebp+0x8]
1002eda2:	and    WORD PTR [esi],0x0
1002eda6:	call   0x1002abac
1002edab:	call   0x1005891d
1002edb0:	ret    0x4
1002edb3:	push   0x8
1002edb5:	mov    eax,0x1005ed13
1002edba:	call   0x10058878
1002edbf:	mov    esi,ecx
1002edc1:	mov    eax,DWORD PTR [ebp+0xc]
1002edc4:	and    DWORD PTR [ebp-0x4],0x0
1002edc8:	mov    DWORD PTR [ebp-0x14],eax
1002edcb:	cmp    esi,DWORD PTR [ebp+0x8]
1002edce:	je     0x1002edff
1002edd0:	mov    ecx,DWORD PTR [ebp+0xc]
1002edd3:	push   esi
1002edd4:	call   0x1002ed89
1002edd9:	add    DWORD PTR [ebp+0xc],0x10
1002eddd:	add    esi,0x10
1002ede0:	jmp    0x1002edcb
1002ede2:	mov    esi,DWORD PTR [ebp-0x14]
1002ede5:	jmp    0x1002edf1
1002ede7:	push   esi
1002ede8:	call   DWORD PTR ds:0x10065294
1002edee:	add    esi,0x10
1002edf1:	cmp    esi,DWORD PTR [ebp+0xc]
1002edf4:	jne    0x1002ede7
1002edf6:	push   0x0
1002edf8:	push   0x0
1002edfa:	call   0x10046704
1002edff:	mov    eax,DWORD PTR [ebp+0xc]
1002ee02:	call   0x1005891d
1002ee07:	ret    
1002ee08:	int3   
1002ee09:	int3   
1002ee0a:	int3   
1002ee0b:	int3   
1002ee0c:	int3   
1002ee0d:	int3   
1002ee0e:	int3   
1002ee0f:	int3   
1002ee10:	push   eax
1002ee11:	push   ecx
1002ee12:	call   0x100572dc
1002ee17:	add    esp,0x8
1002ee1a:	cmp    eax,0x50
1002ee1d:	ja     0x1002ee41
1002ee1f:	movzx  edx,BYTE PTR [eax+0x1002ee5c]
1002ee26:	jmp    DWORD PTR [edx*4+0x1002ee4c]
1002ee2d:	push   0x8007000e
1002ee32:	call   0x10001f41
1002ee37:	push   0x80070057
1002ee3c:	call   0x10001f41
1002ee41:	push   0x80004005
1002ee46:	call   0x10001f41
1002ee4b:	ret    
1002ee4c:	dec    ebx
1002ee4d:	out    dx,al
1002ee4e:	add    dl,BYTE PTR [eax]
1002ee50:	sub    eax,0x371002ee
1002ee55:	out    dx,al
1002ee56:	add    dl,BYTE PTR [eax]
1002ee58:	inc    ecx
1002ee59:	out    dx,al
1002ee5a:	add    dl,BYTE PTR [eax]
1002ee5c:	add    BYTE PTR [ebx],al
1002ee5e:	add    eax,DWORD PTR [ebx]
1002ee60:	add    eax,DWORD PTR [ebx]
1002ee62:	add    eax,DWORD PTR [ebx]
1002ee64:	add    eax,DWORD PTR [ebx]
1002ee66:	add    eax,DWORD PTR [ebx]
1002ee68:	add    DWORD PTR [ebx],eax
1002ee6a:	add    eax,DWORD PTR [ebx]
1002ee6c:	add    eax,DWORD PTR [ebx]
1002ee6e:	add    eax,DWORD PTR [ebx]
1002ee70:	add    eax,DWORD PTR [ebx]
1002ee72:	add    al,BYTE PTR [ebx]
1002ee74:	add    eax,DWORD PTR [ebx]
1002ee76:	add    eax,DWORD PTR [ebx]
1002ee78:	add    eax,DWORD PTR [ebx]
1002ee7a:	add    eax,DWORD PTR [ebx]
1002ee7c:	add    eax,DWORD PTR [ebx]
1002ee7e:	add    al,BYTE PTR [ebx]
1002ee80:	add    eax,DWORD PTR [ebx]
1002ee82:	add    eax,DWORD PTR [ebx]
1002ee84:	add    eax,DWORD PTR [ebx]
1002ee86:	add    eax,DWORD PTR [ebx]
1002ee88:	add    eax,DWORD PTR [ebx]
1002ee8a:	add    eax,DWORD PTR [ebx]
1002ee8c:	add    eax,DWORD PTR [ebx]
1002ee8e:	add    eax,DWORD PTR [ebx]
1002ee90:	add    eax,DWORD PTR [ebx]
1002ee92:	add    eax,DWORD PTR [ebx]
1002ee94:	add    eax,DWORD PTR [ebx]
1002ee96:	add    eax,DWORD PTR [ebx]
1002ee98:	add    eax,DWORD PTR [ebx]
1002ee9a:	add    eax,DWORD PTR [ebx]
1002ee9c:	add    eax,DWORD PTR [ebx]
1002ee9e:	add    eax,DWORD PTR [ebx]
1002eea0:	add    eax,DWORD PTR [ebx]
1002eea2:	add    eax,DWORD PTR [ebx]
1002eea4:	add    eax,DWORD PTR [ebx]
1002eea6:	add    eax,DWORD PTR [ebx]
1002eea8:	add    eax,DWORD PTR [ebx]
1002eeaa:	add    eax,DWORD PTR [ebx]
1002eeac:	add    ah,cl
1002eeae:	int3   
1002eeaf:	int3   
1002eeb0:	mov    eax,esi
1002eeb2:	mov    edx,0xe3
1002eeb7:	push   edi
1002eeb8:	mov    ecx,DWORD PTR [eax+0x4]
1002eebb:	mov    edi,DWORD PTR [eax]
1002eebd:	xor    edi,ecx
1002eebf:	and    edi,0x7ffffffe
1002eec5:	xor    edi,DWORD PTR [eax]
1002eec7:	and    cl,0x1
1002eeca:	shr    edi,1
1002eecc:	sub    edx,0x1
1002eecf:	neg    cl
1002eed1:	sbb    ecx,ecx
1002eed3:	and    ecx,0x9908b0df
1002eed9:	xor    edi,ecx
1002eedb:	xor    edi,DWORD PTR [eax+0x634]
1002eee1:	add    eax,0x4
1002eee4:	test   edx,edx
1002eee6:	mov    DWORD PTR [eax-0x4],edi
1002eee9:	jne    0x1002eeb8
1002eeeb:	mov    edx,0x18c
1002eef0:	mov    ecx,DWORD PTR [eax+0x4]
1002eef3:	mov    edi,DWORD PTR [eax]
1002eef5:	xor    edi,ecx
1002eef7:	and    edi,0x7ffffffe
1002eefd:	xor    edi,DWORD PTR [eax]
1002eeff:	and    cl,0x1
1002ef02:	shr    edi,1
1002ef04:	neg    cl
1002ef06:	sbb    ecx,ecx
1002ef08:	and    ecx,0x9908b0df
1002ef0e:	xor    edi,ecx
1002ef10:	xor    edi,DWORD PTR [eax-0x38c]
1002ef16:	add    eax,0x4
1002ef19:	sub    edx,0x1
1002ef1c:	mov    DWORD PTR [eax-0x4],edi
1002ef1f:	jne    0x1002eef0
1002ef21:	mov    ecx,DWORD PTR [esi]
1002ef23:	mov    edx,DWORD PTR [eax]
1002ef25:	xor    edx,ecx
1002ef27:	and    edx,0x7ffffffe
1002ef2d:	xor    edx,DWORD PTR [eax]
1002ef2f:	and    cl,0x1
1002ef32:	shr    edx,1
1002ef34:	neg    cl
1002ef36:	pop    edi
1002ef37:	sbb    ecx,ecx
1002ef39:	and    ecx,0x9908b0df
1002ef3f:	xor    edx,ecx
1002ef41:	xor    edx,DWORD PTR [eax-0x38c]
1002ef47:	mov    DWORD PTR [eax],edx
1002ef49:	mov    DWORD PTR [esi+0x9c4],0x270
1002ef53:	mov    DWORD PTR [esi+0x9c0],esi
1002ef59:	ret    
1002ef5a:	int3   
1002ef5b:	int3   
1002ef5c:	int3   
1002ef5d:	int3   
1002ef5e:	int3   
1002ef5f:	int3   
1002ef60:	push   esi
1002ef61:	mov    esi,eax
1002ef63:	push   edi
1002ef64:	mov    ecx,0x1
1002ef69:	mov    DWORD PTR [esi],edx
1002ef6b:	jmp    0x1002ef70
1002ef6d:	lea    ecx,[ecx+0x0]
1002ef70:	mov    edx,DWORD PTR [eax]
1002ef72:	mov    edi,edx
1002ef74:	shr    edi,0x1e
1002ef77:	xor    edi,edx
1002ef79:	imul   edi,edi,0x6c078965
1002ef7f:	add    edi,ecx
1002ef81:	mov    DWORD PTR [eax+0x4],edi
1002ef84:	add    ecx,0x1
1002ef87:	add    eax,0x4
1002ef8a:	cmp    ecx,0x270
1002ef90:	jl     0x1002ef70
1002ef92:	call   0x1002eeb0
1002ef97:	pop    edi
1002ef98:	pop    esi
1002ef99:	ret    
1002ef9a:	int3   
1002ef9b:	int3   
1002ef9c:	int3   
1002ef9d:	int3   
1002ef9e:	int3   
1002ef9f:	int3   
1002efa0:	push   esi
1002efa1:	mov    esi,eax
1002efa3:	cmp    DWORD PTR [esi+0x9c4],0x0
1002efaa:	jne    0x1002efb1
1002efac:	call   0x1002eeb0
1002efb1:	mov    eax,DWORD PTR [esi+0x9c0]
1002efb7:	add    DWORD PTR [esi+0x9c4],0xffffffff
1002efbe:	mov    ecx,DWORD PTR [eax]
1002efc0:	add    eax,0x4
1002efc3:	mov    DWORD PTR [esi+0x9c0],eax
1002efc9:	mov    eax,ecx
1002efcb:	shr    eax,0xb
1002efce:	xor    ecx,eax
1002efd0:	mov    edx,ecx
1002efd2:	and    edx,0xff3a58ad
1002efd8:	shl    edx,0x7
1002efdb:	xor    ecx,edx
1002efdd:	mov    eax,ecx
1002efdf:	and    eax,0xffffdf8c
1002efe4:	shl    eax,0xf
1002efe7:	xor    ecx,eax
1002efe9:	mov    eax,ecx
1002efeb:	shr    eax,0x12
1002efee:	xor    eax,ecx
1002eff0:	and    eax,0x3f
1002eff3:	cmp    eax,0x23
1002eff6:	ja     0x1002efa3
1002eff8:	pop    esi
1002eff9:	ret    
1002effa:	int3   
1002effb:	int3   
1002effc:	int3   
1002effd:	int3   
1002effe:	int3   
1002efff:	int3   
1002f000:	sub    esp,0x9cc
1002f006:	push   esi
1002f007:	push   edi
1002f008:	lea    eax,[esp+0x8]
1002f00c:	call   0x1002ef60
1002f011:	mov    eax,ds:0x1007ea1c
1002f016:	mov    WORD PTR [ebx],0x0
1002f01b:	mov    edx,eax
1002f01d:	lea    ecx,[ecx+0x0]
1002f020:	mov    cx,WORD PTR [eax]
1002f023:	add    eax,0x2
1002f026:	test   cx,cx
1002f029:	jne    0x1002f020
1002f02b:	mov    edi,ebx
1002f02d:	sub    eax,edx
1002f02f:	add    edi,0xfffffffe
1002f032:	mov    cx,WORD PTR [edi+0x2]
1002f036:	add    edi,0x2
1002f039:	test   cx,cx
1002f03c:	jne    0x1002f032
1002f03e:	mov    ecx,eax
1002f040:	shr    ecx,0x2
1002f043:	mov    esi,edx
1002f045:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002f047:	mov    ecx,eax
1002f049:	and    ecx,0x3
1002f04c:	mov    eax,ebx
1002f04e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1002f050:	lea    edx,[eax+0x2]
1002f053:	mov    cx,WORD PTR [eax]
1002f056:	add    eax,0x2
1002f059:	test   cx,cx
1002f05c:	jne    0x1002f053
1002f05e:	sub    eax,edx
1002f060:	sar    eax,1
1002f062:	mov    esi,eax
1002f064:	mov    edi,0x5
1002f069:	lea    esp,[esp+0x0]
1002f070:	lea    eax,[esp+0x8]
1002f074:	call   0x1002efa0
1002f079:	cmp    eax,0xa
1002f07c:	jae    0x1002f083
1002f07e:	add    eax,0x30
1002f081:	jmp    0x1002f086
1002f083:	add    eax,0x57
1002f086:	movzx  eax,ax
1002f089:	mov    WORD PTR [ebx+esi*2],ax
1002f08d:	add    esi,0x1
1002f090:	sub    edi,0x1
1002f093:	mov    WORD PTR [ebx+esi*2],0x0
1002f099:	jne    0x1002f070
1002f09b:	pop    edi
1002f09c:	pop    esi
1002f09d:	add    esp,0x9cc
1002f0a3:	ret    
1002f0a4:	int3   
1002f0a5:	int3   
1002f0a6:	int3   
1002f0a7:	int3   
1002f0a8:	int3   
1002f0a9:	int3   
1002f0aa:	int3   
1002f0ab:	int3   
1002f0ac:	int3   
1002f0ad:	int3   
1002f0ae:	int3   
1002f0af:	int3   
1002f0b0:	push   ebp
1002f0b1:	mov    ebp,esp
1002f0b3:	and    esp,0xfffffff8
1002f0b6:	push   0xffffffff
1002f0b8:	push   0x1005e510
1002f0bd:	mov    eax,fs:0x0
1002f0c3:	push   eax
1002f0c4:	sub    esp,0x50
1002f0c7:	push   ebx
1002f0c8:	push   esi
1002f0c9:	push   edi
1002f0ca:	mov    eax,ds:0x1007d030
1002f0cf:	xor    eax,esp
1002f0d1:	push   eax
1002f0d2:	lea    eax,[esp+0x60]
1002f0d6:	mov    fs:0x0,eax
1002f0dc:	xor    ebx,ebx
1002f0de:	push   0x4000
1002f0e3:	mov    DWORD PTR [esp+0x18],ebx
1002f0e7:	call   0x10042609
1002f0ec:	mov    edi,eax
1002f0ee:	push   0x38
1002f0f0:	mov    DWORD PTR [esp+0x70],ebx
1002f0f4:	push   0x10071c88
1002f0f9:	lea    eax,[esp+0x30]
1002f0fd:	push   0x2f
1002f0ff:	push   eax
1002f100:	mov    DWORD PTR [esp+0x58],ebx
1002f104:	mov    DWORD PTR [esp+0x5c],ebx
1002f108:	mov    DWORD PTR [esp+0x60],ebx
1002f10c:	mov    DWORD PTR [esp+0x3c],ebx
1002f110:	mov    DWORD PTR [esp+0x38],ebx
1002f114:	call   0x10051740
1002f119:	add    esp,0x14
1002f11c:	test   eax,eax
1002f11e:	je     0x1002f14d
1002f120:	mov    esi,DWORD PTR [ebp+0x8]
1002f123:	push   ebx
1002f124:	mov    DWORD PTR [esp+0x1c],ebx
1002f128:	mov    DWORD PTR [esi],ebx
1002f12a:	call   0x10041d92
1002f12f:	push   edi
1002f130:	call   0x10041d92
1002f135:	add    esp,0x8
1002f138:	mov    eax,esi
1002f13a:	mov    ecx,DWORD PTR [esp+0x60]
1002f13e:	mov    DWORD PTR fs:0x0,ecx
1002f145:	pop    ecx
1002f146:	pop    edi
1002f147:	pop    esi
1002f148:	pop    ebx
1002f149:	mov    esp,ebp
1002f14b:	pop    ebp
1002f14c:	ret    
1002f14d:	mov    ecx,DWORD PTR [ebp+0x10]
1002f150:	mov    edx,DWORD PTR [ebp+0xc]
1002f153:	mov    DWORD PTR [esp+0x28],ecx
1002f157:	mov    DWORD PTR [esp+0x24],edx
1002f15b:	jmp    0x1002f160
1002f15d:	lea    ecx,[ecx+0x0]
1002f160:	lea    ecx,[esp+0x24]
1002f164:	lea    eax,[ebx+edi*1]
1002f167:	push   0x4
1002f169:	push   ecx
1002f16a:	mov    DWORD PTR [esp+0x3c],0x4000
1002f172:	mov    DWORD PTR [esp+0x38],eax
1002f176:	call   0x10051920
1002f17b:	mov    esi,eax
1002f17d:	add    esp,0x8
1002f180:	cmp    esi,0xfffffffc
1002f183:	mov    DWORD PTR [esp+0x18],esi
1002f187:	jl     0x1002f19b
1002f189:	cmp    esi,0xfffffffd
1002f18c:	jle    0x1002f232
1002f192:	cmp    esi,0x2
1002f195:	je     0x1002f232
1002f19b:	mov    ecx,DWORD PTR [esp+0x34]
1002f19f:	mov    eax,0x4000
1002f1a4:	sub    eax,ecx
1002f1a6:	add    ebx,eax
1002f1a8:	test   ecx,ecx
1002f1aa:	mov    DWORD PTR [esp+0x14],ebx
1002f1ae:	jne    0x1002f219
1002f1b0:	mov    esi,edi
1002f1b2:	mov    DWORD PTR [esp+0x1c],ecx
1002f1b6:	mov    DWORD PTR [esp+0x20],esi
1002f1ba:	add    ebx,0x4000
1002f1c0:	push   ebx
1002f1c1:	mov    BYTE PTR [esp+0x6c],0x1
1002f1c6:	call   0x10042609
1002f1cb:	mov    edi,eax
1002f1cd:	add    esp,0x4
1002f1d0:	test   edi,edi
1002f1d2:	mov    DWORD PTR [esp+0x10],0x0
1002f1da:	je     0x1002f1e6
1002f1dc:	push   0x0
1002f1de:	call   0x10041d92
1002f1e3:	add    esp,0x4
1002f1e6:	mov    edx,DWORD PTR [esp+0x10]
1002f1ea:	push   edx
1002f1eb:	call   0x10041d92
1002f1f0:	mov    ebx,DWORD PTR [esp+0x18]
1002f1f4:	push   ebx
1002f1f5:	push   esi
1002f1f6:	push   edi
1002f1f7:	call   0x10043ed0
1002f1fc:	push   esi
1002f1fd:	mov    BYTE PTR [esp+0x7c],0x0
1002f202:	call   0x10041d92
1002f207:	add    esp,0x14
1002f20a:	cmp    DWORD PTR [esp+0x34],0x0
1002f20f:	je     0x1002f160
1002f215:	mov    esi,DWORD PTR [esp+0x18]
1002f219:	lea    ecx,[esp+0x24]
1002f21d:	push   ecx
1002f21e:	call   0x10052f10
1002f223:	add    esp,0x4
1002f226:	cmp    esi,0x1
1002f229:	jne    0x1002f272
1002f22b:	mov    edx,DWORD PTR [ebp+0x14]
1002f22e:	mov    DWORD PTR [edx],ebx
1002f230:	jmp    0x1002f296
1002f232:	lea    eax,[esp+0x24]
1002f236:	push   eax
1002f237:	call   0x10052f10
1002f23c:	mov    esi,DWORD PTR [ebp+0x8]
1002f23f:	push   0x0
1002f241:	mov    DWORD PTR [esp+0x28],0x0
1002f249:	mov    DWORD PTR [esi],0x0
1002f24f:	call   0x10041d92
1002f254:	push   edi
1002f255:	call   0x10041d92
1002f25a:	add    esp,0xc
1002f25d:	mov    eax,esi
1002f25f:	mov    ecx,DWORD PTR [esp+0x60]
1002f263:	mov    DWORD PTR fs:0x0,ecx
1002f26a:	pop    ecx
1002f26b:	pop    edi
1002f26c:	pop    esi
1002f26d:	pop    ebx
1002f26e:	mov    esp,ebp
1002f270:	pop    ebp
1002f271:	ret    
1002f272:	test   edi,edi
1002f274:	mov    DWORD PTR [esp+0x18],0x0
1002f27c:	je     0x1002f287
1002f27e:	push   edi
1002f27f:	call   0x10041d92
1002f284:	add    esp,0x4
1002f287:	mov    eax,DWORD PTR [esp+0x18]
1002f28b:	push   eax
1002f28c:	xor    edi,edi
1002f28e:	call   0x10041d92
1002f293:	add    esp,0x4
1002f296:	mov    esi,DWORD PTR [ebp+0x8]
1002f299:	push   0x0
1002f29b:	mov    DWORD PTR [esi],edi
1002f29d:	call   0x10041d92
1002f2a2:	add    esp,0x4
1002f2a5:	mov    eax,esi
1002f2a7:	mov    ecx,DWORD PTR [esp+0x60]
1002f2ab:	mov    DWORD PTR fs:0x0,ecx
1002f2b2:	pop    ecx
1002f2b3:	pop    edi
1002f2b4:	pop    esi
1002f2b5:	pop    ebx
1002f2b6:	mov    esp,ebp
1002f2b8:	pop    ebp
1002f2b9:	ret    
1002f2ba:	int3   
1002f2bb:	int3   
1002f2bc:	int3   
1002f2bd:	int3   
1002f2be:	int3   
1002f2bf:	int3   
1002f2c0:	push   0xffffffff
1002f2c2:	push   0x1005e4e0
1002f2c7:	mov    eax,fs:0x0
1002f2cd:	push   eax
1002f2ce:	sub    esp,0x48
1002f2d1:	push   ebx
1002f2d2:	push   ebp
1002f2d3:	push   esi
1002f2d4:	push   edi
1002f2d5:	mov    eax,ds:0x1007d030
1002f2da:	xor    eax,esp
1002f2dc:	push   eax
1002f2dd:	lea    eax,[esp+0x5c]
1002f2e1:	mov    fs:0x0,eax
1002f2e7:	mov    eax,DWORD PTR [esp+0x74]
1002f2eb:	xor    ebx,ebx
1002f2ed:	mov    ebp,0x4000
1002f2f2:	cmp    eax,ebp
1002f2f4:	mov    DWORD PTR [esp+0x18],ebx
1002f2f8:	jae    0x1002f306
1002f2fa:	cmp    eax,0x20
1002f2fd:	mov    ebp,eax
1002f2ff:	jge    0x1002f306
1002f301:	mov    ebp,0x20
1002f306:	push   ebp
1002f307:	call   0x10042609
1002f30c:	mov    edi,eax
1002f30e:	mov    eax,DWORD PTR [esp+0x80]
1002f315:	push   0x38
1002f317:	push   0x10071c88
1002f31c:	push   ebx
1002f31d:	push   0x8
1002f31f:	push   eax
1002f320:	mov    DWORD PTR [esp+0x7c],ebx
1002f324:	push   0x8
1002f326:	lea    ecx,[esp+0x3c]
1002f32a:	push   0x9
1002f32c:	push   ecx
1002f32d:	xor    esi,esi
1002f32f:	mov    DWORD PTR [esp+0x64],ebx
1002f333:	mov    DWORD PTR [esp+0x68],ebx
1002f337:	mov    DWORD PTR [esp+0x6c],ebx
1002f33b:	mov    DWORD PTR [esp+0x48],ebx
1002f33f:	mov    DWORD PTR [esp+0x44],ebx
1002f343:	call   0x100514c0
1002f348:	add    esp,0x24
1002f34b:	test   eax,eax
1002f34d:	je     0x1002f36d
1002f34f:	mov    esi,DWORD PTR [esp+0x6c]
1002f353:	push   ebx
1002f354:	mov    DWORD PTR [esp+0x78],ebx
1002f358:	mov    DWORD PTR [esi],ebx
1002f35a:	call   0x10041d92
1002f35f:	push   edi
1002f360:	call   0x10041d92
1002f365:	add    esp,0x8
1002f368:	jmp    0x1002f462
1002f36d:	mov    edx,DWORD PTR [esp+0x74]
1002f371:	mov    eax,DWORD PTR [esp+0x70]
1002f375:	mov    DWORD PTR [esp+0x24],edx
1002f379:	mov    DWORD PTR [esp+0x20],eax
1002f37d:	lea    ecx,[ecx+0x0]
1002f380:	lea    edx,[esp+0x20]
1002f384:	lea    ecx,[esi+edi*1]
1002f387:	push   0x4
1002f389:	push   edx
1002f38a:	mov    DWORD PTR [esp+0x38],ebp
1002f38e:	mov    DWORD PTR [esp+0x34],ecx
1002f392:	call   0x1004fef0
1002f397:	mov    ecx,DWORD PTR [esp+0x38]
1002f39b:	mov    DWORD PTR [esp+0x20],eax
1002f39f:	mov    eax,ebp
1002f3a1:	sub    eax,ecx
1002f3a3:	add    esp,0x8
1002f3a6:	add    esi,eax
1002f3a8:	cmp    ecx,ebx
1002f3aa:	jne    0x1002f417
1002f3ac:	mov    ebx,edi
1002f3ae:	mov    DWORD PTR [esp+0x14],0x0
1002f3b6:	mov    DWORD PTR [esp+0x1c],ebx
1002f3ba:	lea    eax,[esi+ebp*1]
1002f3bd:	push   eax
1002f3be:	mov    BYTE PTR [esp+0x68],0x1
1002f3c3:	call   0x10042609
1002f3c8:	mov    edi,eax
1002f3ca:	add    esp,0x4
1002f3cd:	test   edi,edi
1002f3cf:	mov    DWORD PTR [esp+0x14],edi
1002f3d3:	mov    DWORD PTR [esp+0x74],0x0
1002f3db:	je     0x1002f3e7
1002f3dd:	push   0x0
1002f3df:	call   0x10041d92
1002f3e4:	add    esp,0x4
1002f3e7:	mov    ecx,DWORD PTR [esp+0x74]
1002f3eb:	push   ecx
1002f3ec:	call   0x10041d92
1002f3f1:	mov    edx,DWORD PTR [esp+0x18]
1002f3f5:	push   esi
1002f3f6:	push   ebx
1002f3f7:	push   edx
1002f3f8:	call   0x10043ed0
1002f3fd:	push   ebx
1002f3fe:	mov    BYTE PTR [esp+0x78],0x0
1002f403:	call   0x10041d92
1002f408:	xor    ebx,ebx
1002f40a:	add    esp,0x14
1002f40d:	cmp    DWORD PTR [esp+0x30],ebx
1002f411:	je     0x1002f380
1002f417:	lea    eax,[esp+0x20]
1002f41b:	push   eax
1002f41c:	call   0x100506d0
1002f421:	add    esp,0x4
1002f424:	cmp    DWORD PTR [esp+0x18],0x1
1002f429:	jne    0x1002f433
1002f42b:	mov    ecx,DWORD PTR [esp+0x78]
1002f42f:	mov    DWORD PTR [ecx],esi
1002f431:	jmp    0x1002f453
1002f433:	cmp    edi,ebx
1002f435:	mov    DWORD PTR [esp+0x74],ebx
1002f439:	je     0x1002f444
1002f43b:	push   edi
1002f43c:	call   0x10041d92
1002f441:	add    esp,0x4
1002f444:	mov    edx,DWORD PTR [esp+0x74]
1002f448:	push   edx
1002f449:	xor    edi,edi
1002f44b:	call   0x10041d92
1002f450:	add    esp,0x4
1002f453:	mov    esi,DWORD PTR [esp+0x6c]
1002f457:	push   ebx
1002f458:	mov    DWORD PTR [esi],edi
1002f45a:	call   0x10041d92
1002f45f:	add    esp,0x4
1002f462:	mov    eax,esi
1002f464:	mov    ecx,DWORD PTR [esp+0x5c]
1002f468:	mov    DWORD PTR fs:0x0,ecx
1002f46f:	pop    ecx
1002f470:	pop    edi
1002f471:	pop    esi
1002f472:	pop    ebp
1002f473:	pop    ebx
1002f474:	add    esp,0x54
1002f477:	ret    
1002f478:	int3   
1002f479:	int3   
1002f47a:	int3   
1002f47b:	int3   
1002f47c:	int3   
1002f47d:	int3   
1002f47e:	int3   
1002f47f:	int3   
1002f480:	push   ecx
1002f481:	push   0xf
1002f483:	push   eax
1002f484:	push   ecx
1002f485:	push   edx
1002f486:	lea    eax,[esp+0x10]
1002f48a:	push   eax
1002f48b:	mov    DWORD PTR [esp+0x14],0x0
1002f493:	call   0x1002f2c0
1002f498:	mov    ecx,DWORD PTR [eax]
1002f49a:	mov    DWORD PTR [eax],0x0
1002f4a0:	mov    DWORD PTR [esi],ecx
1002f4a2:	mov    ecx,DWORD PTR [esp+0x14]
1002f4a6:	add    esp,0x14
1002f4a9:	push   ecx
1002f4aa:	call   0x10041d92
1002f4af:	mov    eax,esi
1002f4b1:	add    esp,0x8
1002f4b4:	ret    
1002f4b5:	int3   
1002f4b6:	int3   
1002f4b7:	int3   
1002f4b8:	int3   
1002f4b9:	int3   
1002f4ba:	int3   
1002f4bb:	int3   
1002f4bc:	int3   
1002f4bd:	int3   
1002f4be:	int3   
1002f4bf:	int3   
1002f4c0:	push   ecx
1002f4c1:	push   0x1f
1002f4c3:	push   eax
1002f4c4:	push   ecx
1002f4c5:	push   edx
1002f4c6:	lea    eax,[esp+0x10]
1002f4ca:	push   eax
1002f4cb:	mov    DWORD PTR [esp+0x14],0x0
1002f4d3:	call   0x1002f2c0
1002f4d8:	mov    ecx,DWORD PTR [eax]
1002f4da:	mov    DWORD PTR [eax],0x0
1002f4e0:	mov    DWORD PTR [esi],ecx
1002f4e2:	mov    ecx,DWORD PTR [esp+0x14]
1002f4e6:	add    esp,0x14
1002f4e9:	push   ecx
1002f4ea:	call   0x10041d92
1002f4ef:	mov    eax,esi
1002f4f1:	add    esp,0x8
1002f4f4:	ret    
1002f4f5:	int3   
1002f4f6:	int3   
1002f4f7:	int3   
1002f4f8:	int3   
1002f4f9:	int3   
1002f4fa:	int3   
1002f4fb:	int3   
1002f4fc:	int3   
1002f4fd:	int3   
1002f4fe:	int3   
1002f4ff:	int3   
1002f500:	push   ebp
1002f501:	mov    ebp,esp
1002f503:	sub    esp,0x8
1002f506:	mov    eax,ds:0x1007d030
1002f50b:	xor    eax,ebp
1002f50d:	mov    DWORD PTR [ebp-0x4],eax
1002f510:	push   esi
1002f511:	xor    esi,esi
1002f513:	push   edi
1002f514:	mov    DWORD PTR [ebp-0x8],esi
1002f517:	call   DWORD PTR ds:0x1007dfe4
1002f51d:	push   0x10071c90
1002f522:	mov    DWORD PTR [ebp-0x8],eax
1002f525:	call   DWORD PTR ds:0x100650e0
1002f52b:	add    eax,0x1
1002f52e:	cmp    eax,0x3fffffff
1002f533:	jg     0x1002f56d
1002f535:	lea    esi,[eax+eax*1]
1002f538:	mov    eax,esi
1002f53a:	call   0x10049010
1002f53f:	mov    edi,esp
1002f541:	test   edi,edi
1002f543:	je     0x1002f56b
1002f545:	mov    eax,DWORD PTR [ebp-0x8]
1002f548:	push   0x0
1002f54a:	push   0x0
1002f54c:	push   esi
1002f54d:	push   edi
1002f54e:	push   0xffffffff
1002f550:	push   0x10071c90
1002f555:	push   0x0
1002f557:	push   eax
1002f558:	mov    BYTE PTR [edi],0x0
1002f55b:	call   DWORD PTR ds:0x100650dc
1002f561:	mov    esi,eax
1002f563:	neg    esi
1002f565:	sbb    esi,esi
1002f567:	and    esi,edi
1002f569:	jmp    0x1002f56d
1002f56b:	xor    esi,esi
1002f56d:	mov    DWORD PTR [ebx+0x18],0xf
1002f574:	mov    DWORD PTR [ebx+0x14],0x0
1002f57b:	push   esi
1002f57c:	mov    BYTE PTR [ebx+0x4],0x0
1002f580:	call   0x10041f10
1002f585:	add    esp,0x4
1002f588:	push   eax
1002f589:	push   esi
1002f58a:	mov    ecx,ebx
1002f58c:	call   0x10001344
1002f591:	mov    eax,ebx
1002f593:	lea    esp,[ebp-0x10]
1002f596:	pop    edi
1002f597:	pop    esi
1002f598:	mov    ecx,DWORD PTR [ebp-0x4]
1002f59b:	xor    ecx,ebp
1002f59d:	call   0x10041d97
1002f5a2:	mov    esp,ebp
1002f5a4:	pop    ebp
1002f5a5:	ret    
1002f5a6:	int3   
1002f5a7:	int3   
1002f5a8:	int3   
1002f5a9:	int3   
1002f5aa:	int3   
1002f5ab:	int3   
1002f5ac:	int3   
1002f5ad:	int3   
1002f5ae:	int3   
1002f5af:	int3   
1002f5b0:	sub    esp,0x1c
1002f5b3:	lea    eax,[esp+0x8]
1002f5b7:	push   eax
1002f5b8:	call   DWORD PTR ds:0x10065140
1002f5be:	lea    ecx,[esp]
1002f5c1:	push   ecx
1002f5c2:	lea    edx,[esp+0xc]
1002f5c6:	push   edx
1002f5c7:	call   DWORD PTR ds:0x10065104
1002f5cd:	mov    edx,DWORD PTR [esp+0x4]
1002f5d1:	mov    eax,DWORD PTR [esp]
1002f5d4:	add    esp,0x1c
1002f5d7:	ret    
1002f5d8:	int3   
1002f5d9:	int3   
1002f5da:	int3   
1002f5db:	int3   
1002f5dc:	int3   
1002f5dd:	int3   
1002f5de:	int3   
1002f5df:	int3   
1002f5e0:	push   ebp
1002f5e1:	mov    ebp,esp
1002f5e3:	and    esp,0xfffffff8
1002f5e6:	sub    esp,0x8
1002f5e9:	mov    eax,DWORD PTR [ebp+0x8]
1002f5ec:	push   ebx
1002f5ed:	push   edi
1002f5ee:	xor    ecx,ecx
1002f5f0:	push   0xffffffff
1002f5f2:	mov    DWORD PTR [esi+0x14],ecx
1002f5f5:	push   ecx
1002f5f6:	mov    DWORD PTR [esi+0x18],0xf
1002f5fd:	lea    edi,[esi+0x4]
1002f600:	mov    DWORD PTR [esp+0x10],ecx
1002f604:	mov    BYTE PTR [edi],cl
1002f606:	push   eax
1002f607:	mov    ecx,esi
1002f609:	call   0x1000124a
1002f60e:	mov    eax,DWORD PTR [esi+0x18]
1002f611:	cmp    eax,0x10
1002f614:	jb     0x1002f61a
1002f616:	mov    ebx,DWORD PTR [edi]
1002f618:	jmp    0x1002f61c
1002f61a:	mov    ebx,edi
1002f61c:	test   ebx,ebx
1002f61e:	je     0x1002f643
1002f620:	cmp    eax,0x10
1002f623:	jb     0x1002f629
1002f625:	mov    ecx,DWORD PTR [edi]
1002f627:	jmp    0x1002f62b
1002f629:	mov    ecx,edi
1002f62b:	cmp    ecx,ebx
1002f62d:	ja     0x1002f643
1002f62f:	cmp    eax,0x10
1002f632:	jb     0x1002f638
1002f634:	mov    eax,DWORD PTR [edi]
1002f636:	jmp    0x1002f63a
1002f638:	mov    eax,edi
1002f63a:	mov    ecx,DWORD PTR [esi+0x14]
1002f63d:	add    ecx,eax
1002f63f:	cmp    ebx,ecx
1002f641:	jbe    0x1002f648
1002f643:	call   0x100422b0
1002f648:	mov    edx,DWORD PTR [esi+0x18]
1002f64b:	cmp    edx,0x10
1002f64e:	mov    DWORD PTR [esp+0xc],ebx
1002f652:	jb     0x1002f658
1002f654:	mov    eax,DWORD PTR [edi]
1002f656:	jmp    0x1002f65a
1002f658:	mov    eax,edi
1002f65a:	mov    ecx,DWORD PTR [esi+0x14]
1002f65d:	lea    ebx,[ecx+eax*1]
1002f660:	test   ebx,ebx
1002f662:	je     0x1002f684
1002f664:	cmp    edx,0x10
1002f667:	jb     0x1002f66d
1002f669:	mov    eax,DWORD PTR [edi]
1002f66b:	jmp    0x1002f66f
1002f66d:	mov    eax,edi
1002f66f:	cmp    eax,ebx
1002f671:	ja     0x1002f684
1002f673:	cmp    edx,0x10
1002f676:	jb     0x1002f67c
1002f678:	mov    eax,DWORD PTR [edi]
1002f67a:	jmp    0x1002f67e
1002f67c:	mov    eax,edi
1002f67e:	add    ecx,eax
1002f680:	cmp    ebx,ecx
1002f682:	jbe    0x1002f689
1002f684:	call   0x100422b0
1002f689:	mov    ecx,DWORD PTR [esp+0xc]
1002f68d:	cmp    ecx,ebx
1002f68f:	je     0x1002f70b
1002f691:	cmp    esi,0xfffffffe
1002f694:	je     0x1002f6d2
1002f696:	cmp    DWORD PTR [esi+0x18],0x10
1002f69a:	jb     0x1002f6a0
1002f69c:	mov    eax,DWORD PTR [edi]
1002f69e:	jmp    0x1002f6a2
1002f6a0:	mov    eax,edi
1002f6a2:	mov    edx,DWORD PTR [esi+0x14]
1002f6a5:	add    edx,eax
1002f6a7:	cmp    ecx,edx
1002f6a9:	jb     0x1002f6b4
1002f6ab:	call   0x100422b0
1002f6b0:	mov    ecx,DWORD PTR [esp+0xc]
1002f6b4:	cmp    DWORD PTR [esi+0x18],0x10
1002f6b8:	jb     0x1002f6be
1002f6ba:	mov    eax,DWORD PTR [edi]
1002f6bc:	jmp    0x1002f6c0
1002f6be:	mov    eax,edi
1002f6c0:	mov    edx,DWORD PTR [esi+0x14]
1002f6c3:	add    edx,eax
1002f6c5:	cmp    ecx,edx
1002f6c7:	jb     0x1002f6d2
1002f6c9:	call   0x100422b0
1002f6ce:	mov    ecx,DWORD PTR [esp+0xc]
1002f6d2:	movsx  eax,BYTE PTR [ecx]
1002f6d5:	push   eax
1002f6d6:	call   0x10044b21
1002f6db:	mov    ebx,DWORD PTR [esp+0x10]
1002f6df:	add    esp,0x4
1002f6e2:	cmp    esi,0xfffffffe
1002f6e5:	mov    BYTE PTR [ebx],al
1002f6e7:	je     0x1002f703
1002f6e9:	cmp    DWORD PTR [esi+0x18],0x10
1002f6ed:	jb     0x1002f6f3
1002f6ef:	mov    eax,DWORD PTR [edi]
1002f6f1:	jmp    0x1002f6f5
1002f6f3:	mov    eax,edi
1002f6f5:	mov    ecx,DWORD PTR [esi+0x14]
1002f6f8:	add    ecx,eax
1002f6fa:	cmp    ebx,ecx
1002f6fc:	jb     0x1002f703
1002f6fe:	call   0x100422b0
1002f703:	add    ebx,0x1
1002f706:	jmp    0x1002f648
1002f70b:	pop    edi
1002f70c:	mov    eax,esi
1002f70e:	pop    ebx
1002f70f:	mov    esp,ebp
1002f711:	pop    ebp
1002f712:	ret    
1002f713:	int3   
1002f714:	int3   
1002f715:	int3   
1002f716:	int3   
1002f717:	int3   
1002f718:	int3   
1002f719:	int3   
1002f71a:	int3   
1002f71b:	int3   
1002f71c:	int3   
1002f71d:	int3   
1002f71e:	int3   
1002f71f:	int3   
1002f720:	push   0xffffffff
1002f722:	push   0x1005ece5
1002f727:	mov    eax,fs:0x0
1002f72d:	push   eax
1002f72e:	sub    esp,0xa0
1002f734:	mov    eax,ds:0x1007d030
1002f739:	xor    eax,esp
1002f73b:	mov    DWORD PTR [esp+0x9c],eax
1002f742:	push   ebx
1002f743:	push   ebp
1002f744:	push   esi
1002f745:	push   edi
1002f746:	mov    eax,ds:0x1007d030
1002f74b:	xor    eax,esp
1002f74d:	push   eax
1002f74e:	lea    eax,[esp+0xb4]
1002f755:	mov    fs:0x0,eax
1002f75b:	mov    ebp,DWORD PTR [esp+0xc4]
1002f762:	xor    ebx,ebx
1002f764:	mov    DWORD PTR [esp+0x34],ebx
1002f768:	mov    eax,ds:0x1007fa54
1002f76d:	mov    edx,DWORD PTR [eax+0xc]
1002f770:	mov    edi,ecx
1002f772:	mov    ecx,0x1007fa54
1002f777:	mov    DWORD PTR [esp+0x2c],ebp
1002f77b:	mov    DWORD PTR [esp+0x1c],edi
1002f77f:	call   edx
1002f781:	lea    esi,[eax+0x10]
1002f784:	mov    DWORD PTR [esp+0x20],esi
1002f788:	mov    DWORD PTR [esp+0xbc],ebx
1002f78f:	mov    eax,DWORD PTR [edi+0x14]
1002f792:	cmp    eax,ebx
1002f794:	mov    DWORD PTR [esp+0x28],ebx
1002f798:	jbe    0x1002fb28
1002f79e:	mov    edi,edi
1002f7a0:	cmp    DWORD PTR [esp+0x28],0x0
1002f7a5:	jle    0x1002f98d
1002f7ab:	sub    DWORD PTR [esp+0x28],0x1
1002f7b0:	cmp    ebx,eax
1002f7b2:	jbe    0x1002f7b9
1002f7b4:	call   0x100422b0
1002f7b9:	mov    ebp,DWORD PTR [esp+0x1c]
1002f7bd:	cmp    DWORD PTR [ebp+0x18],0x10
1002f7c1:	lea    edi,[ebp+0x4]
1002f7c4:	mov    DWORD PTR [esp+0x24],edi
1002f7c8:	jb     0x1002f7ce
1002f7ca:	mov    eax,DWORD PTR [edi]
1002f7cc:	jmp    0x1002f7d0
1002f7ce:	mov    eax,edi
1002f7d0:	movzx  eax,BYTE PTR [eax+ebx*1]
1002f7d4:	push   eax
1002f7d5:	call   0x1004b78c
1002f7da:	add    esp,0x4
1002f7dd:	test   eax,eax
1002f7df:	je     0x1002f980
1002f7e5:	cmp    ebx,DWORD PTR [ebp+0x14]
1002f7e8:	jbe    0x1002f7ef
1002f7ea:	call   0x100422b0
1002f7ef:	cmp    DWORD PTR [ebp+0x18],0x10
1002f7f3:	jb     0x1002f7f9
1002f7f5:	mov    eax,DWORD PTR [edi]
1002f7f7:	jmp    0x1002f7fb
1002f7f9:	mov    eax,edi
1002f7fb:	mov    cl,BYTE PTR [eax+ebx*1]
1002f7fe:	mov    ebp,DWORD PTR [esi-0xc]
1002f801:	mov    eax,DWORD PTR [esi-0x8]
1002f804:	mov    BYTE PTR [esp+0x14],cl
1002f808:	mov    ecx,0x1
1002f80d:	sub    ecx,DWORD PTR [esi-0x4]
1002f810:	lea    edi,[ebp+0x1]
1002f813:	sub    eax,edi
1002f815:	or     eax,ecx
1002f817:	jge    0x1002f828
1002f819:	mov    ecx,edi
1002f81b:	lea    eax,[esp+0x20]
1002f81f:	call   0x100343c0
1002f824:	mov    esi,DWORD PTR [esp+0x20]
1002f828:	test   edi,edi
1002f82a:	mov    dl,BYTE PTR [esp+0x14]
1002f82e:	mov    BYTE PTR [esi+ebp*1],dl
1002f831:	jl     0x1002fc36
1002f837:	cmp    edi,DWORD PTR [esi-0x8]
1002f83a:	jg     0x1002fc36
1002f840:	mov    eax,DWORD PTR [esp+0x1c]
1002f844:	shl    BYTE PTR [esp+0x1b],0x4
1002f849:	mov    DWORD PTR [esi-0xc],edi
1002f84c:	mov    BYTE PTR [edi+esi*1],0x0
1002f850:	cmp    ebx,DWORD PTR [eax+0x14]
1002f853:	jbe    0x1002f85e
1002f855:	call   0x100422b0
1002f85a:	mov    eax,DWORD PTR [esp+0x1c]
1002f85e:	cmp    DWORD PTR [eax+0x18],0x10
1002f862:	mov    ecx,DWORD PTR [esp+0x24]
1002f866:	jb     0x1002f86c
1002f868:	mov    edx,DWORD PTR [ecx]
1002f86a:	jmp    0x1002f86e
1002f86c:	mov    edx,ecx
1002f86e:	cmp    BYTE PTR [edx+ebx*1],0x30
1002f872:	jl     0x1002f8c6
1002f874:	cmp    ebx,DWORD PTR [eax+0x14]
1002f877:	jbe    0x1002f886
1002f879:	call   0x100422b0
1002f87e:	mov    ecx,DWORD PTR [esp+0x24]
1002f882:	mov    eax,DWORD PTR [esp+0x1c]
1002f886:	cmp    DWORD PTR [eax+0x18],0x10
1002f88a:	jb     0x1002f890
1002f88c:	mov    edx,DWORD PTR [ecx]
1002f88e:	jmp    0x1002f892
1002f890:	mov    edx,ecx
1002f892:	cmp    BYTE PTR [edx+ebx*1],0x39
1002f896:	jg     0x1002f8c6
1002f898:	cmp    ebx,DWORD PTR [eax+0x14]
1002f89b:	jbe    0x1002f8aa
1002f89d:	call   0x100422b0
1002f8a2:	mov    ecx,DWORD PTR [esp+0x24]
1002f8a6:	mov    eax,DWORD PTR [esp+0x1c]
1002f8aa:	cmp    DWORD PTR [eax+0x18],0x10
1002f8ae:	jb     0x1002f8bb
1002f8b0:	mov    eax,DWORD PTR [ecx]
1002f8b2:	movsx  eax,BYTE PTR [eax+ebx*1]
1002f8b6:	sub    eax,0x30
1002f8b9:	jmp    0x1002f8f4
1002f8bb:	mov    eax,ecx
1002f8bd:	movsx  eax,BYTE PTR [eax+ebx*1]
1002f8c1:	sub    eax,0x30
1002f8c4:	jmp    0x1002f8f4
1002f8c6:	cmp    ebx,DWORD PTR [eax+0x14]
1002f8c9:	jbe    0x1002f8d8
1002f8cb:	call   0x100422b0
1002f8d0:	mov    ecx,DWORD PTR [esp+0x24]
1002f8d4:	mov    eax,DWORD PTR [esp+0x1c]
1002f8d8:	cmp    DWORD PTR [eax+0x18],0x10
1002f8dc:	jb     0x1002f8e2
1002f8de:	mov    eax,DWORD PTR [ecx]
1002f8e0:	jmp    0x1002f8e4
1002f8e2:	mov    eax,ecx
1002f8e4:	movsx  eax,BYTE PTR [eax+ebx*1]
1002f8e8:	push   eax
1002f8e9:	call   0x10057bd7
1002f8ee:	add    esp,0x4
1002f8f1:	sub    eax,0x37
1002f8f4:	add    BYTE PTR [esp+0x1b],al
1002f8f8:	cmp    DWORD PTR [esp+0x28],0x0
1002f8fd:	jne    0x1002fb10
1002f903:	cmp    BYTE PTR [esp+0x1b],0x80
1002f908:	jb     0x1002fb10
1002f90e:	mov    edi,DWORD PTR [esi-0xc]
1002f911:	mov    eax,DWORD PTR [esi-0x8]
1002f914:	add    edi,0xfffffffd
1002f917:	mov    ecx,0x1
1002f91c:	sub    ecx,DWORD PTR [esi-0x4]
1002f91f:	sub    eax,edi
1002f921:	or     eax,ecx
1002f923:	jge    0x1002f934
1002f925:	mov    ecx,edi
1002f927:	lea    eax,[esp+0x20]
1002f92b:	call   0x100343c0
1002f930:	mov    esi,DWORD PTR [esp+0x20]
1002f934:	test   edi,edi
1002f936:	jl     0x1002fc36
1002f93c:	cmp    edi,DWORD PTR [esi-0x8]
1002f93f:	jg     0x1002fc36
1002f945:	test   edi,edi
1002f947:	mov    DWORD PTR [esi-0xc],edi
1002f94a:	mov    BYTE PTR [edi+esi*1],0x0
1002f94e:	je     0x1002f96c
1002f950:	add    edi,0xffffffff
1002f953:	js     0x1002fc36
1002f959:	cmp    edi,DWORD PTR [esi-0xc]
1002f95c:	jg     0x1002fc36
1002f962:	cmp    BYTE PTR [edi+esi*1],0x80
1002f966:	je     0x1002fb10
1002f96c:	push   0xffffff80
1002f96e:	lea    edi,[esp+0x24]
1002f972:	call   0x100340b0
1002f977:	mov    esi,DWORD PTR [esp+0x20]
1002f97b:	jmp    0x1002fb10
1002f980:	mov    DWORD PTR [esp+0x28],0x0
1002f988:	jmp    0x1002fb13
1002f98d:	cmp    ebx,eax
1002f98f:	jbe    0x1002f996
1002f991:	call   0x100422b0
1002f996:	mov    edi,DWORD PTR [esp+0x1c]
1002f99a:	cmp    DWORD PTR [edi+0x18],0x10
1002f99e:	lea    ebp,[edi+0x4]
1002f9a1:	jb     0x1002f9a8
1002f9a3:	mov    eax,DWORD PTR [ebp+0x0]
1002f9a6:	jmp    0x1002f9aa
1002f9a8:	mov    eax,ebp
1002f9aa:	cmp    BYTE PTR [eax+ebx*1],0x80
1002f9ae:	jb     0x1002fa25
1002f9b0:	mov    eax,DWORD PTR [edi+0x14]
1002f9b3:	add    ebx,0x1
1002f9b6:	cmp    ebx,eax
1002f9b8:	jae    0x1002f9de
1002f9ba:	jbe    0x1002f9c1
1002f9bc:	call   0x100422b0
1002f9c1:	cmp    DWORD PTR [edi+0x18],0x10
1002f9c5:	jb     0x1002f9cc
1002f9c7:	mov    eax,DWORD PTR [ebp+0x0]
1002f9ca:	jmp    0x1002f9ce
1002f9cc:	mov    eax,ebp
1002f9ce:	cmp    BYTE PTR [eax+ebx*1],0x80
1002f9d2:	jb     0x1002f9de
1002f9d4:	mov    eax,DWORD PTR [edi+0x14]
1002f9d7:	add    ebx,0x1
1002f9da:	cmp    ebx,eax
1002f9dc:	jb     0x1002f9c1
1002f9de:	mov    ebp,DWORD PTR [esi-0xc]
1002f9e1:	mov    eax,DWORD PTR [esi-0x8]
1002f9e4:	mov    ecx,0x1
1002f9e9:	sub    ecx,DWORD PTR [esi-0x4]
1002f9ec:	lea    edi,[ebp+0x1]
1002f9ef:	sub    eax,edi
1002f9f1:	or     eax,ecx
1002f9f3:	jge    0x1002fa04
1002f9f5:	mov    ecx,edi
1002f9f7:	lea    eax,[esp+0x20]
1002f9fb:	call   0x100343c0
1002fa00:	mov    esi,DWORD PTR [esp+0x20]
1002fa04:	test   edi,edi
1002fa06:	mov    BYTE PTR [esi+ebp*1],0x80
1002fa0a:	jl     0x1002fc36
1002fa10:	cmp    edi,DWORD PTR [esi-0x8]
1002fa13:	jg     0x1002fc36
1002fa19:	mov    DWORD PTR [esi-0xc],edi
1002fa1c:	mov    BYTE PTR [edi+esi*1],0x0
1002fa20:	jmp    0x1002fb13
1002fa25:	cmp    ebx,DWORD PTR [edi+0x14]
1002fa28:	jbe    0x1002fa2f
1002fa2a:	call   0x100422b0
1002fa2f:	cmp    DWORD PTR [edi+0x18],0x10
1002fa33:	jb     0x1002fa3a
1002fa35:	mov    eax,DWORD PTR [ebp+0x0]
1002fa38:	jmp    0x1002fa3c
1002fa3a:	mov    eax,ebp
1002fa3c:	cmp    BYTE PTR [eax+ebx*1],0x25
1002fa40:	jne    0x1002faad
1002fa42:	cmp    ebx,DWORD PTR [edi+0x14]
1002fa45:	jbe    0x1002fa4c
1002fa47:	call   0x100422b0
1002fa4c:	cmp    DWORD PTR [edi+0x18],0x10
1002fa50:	jb     0x1002fa57
1002fa52:	mov    eax,DWORD PTR [ebp+0x0]
1002fa55:	jmp    0x1002fa59
1002fa57:	mov    eax,ebp
1002fa59:	mov    cl,BYTE PTR [eax+ebx*1]
1002fa5c:	mov    ebp,DWORD PTR [esi-0xc]
1002fa5f:	mov    eax,DWORD PTR [esi-0x8]
1002fa62:	mov    BYTE PTR [esp+0x14],cl
1002fa66:	mov    ecx,0x1
1002fa6b:	sub    ecx,DWORD PTR [esi-0x4]
1002fa6e:	lea    edi,[ebp+0x1]
1002fa71:	sub    eax,edi
1002fa73:	or     eax,ecx
1002fa75:	jge    0x1002fa86
1002fa77:	mov    ecx,edi
1002fa79:	lea    eax,[esp+0x20]
1002fa7d:	call   0x100343c0
1002fa82:	mov    esi,DWORD PTR [esp+0x20]
1002fa86:	test   edi,edi
1002fa88:	mov    dl,BYTE PTR [esp+0x14]
1002fa8c:	mov    BYTE PTR [esi+ebp*1],dl
1002fa8f:	jl     0x1002fc36
1002fa95:	cmp    edi,DWORD PTR [esi-0x8]
1002fa98:	jg     0x1002fc36
1002fa9e:	mov    BYTE PTR [esp+0x1b],0x0
1002faa3:	mov    DWORD PTR [esp+0x28],0x2
1002faab:	jmp    0x1002fb09
1002faad:	cmp    ebx,DWORD PTR [edi+0x14]
1002fab0:	jbe    0x1002fab7
1002fab2:	call   0x100422b0
1002fab7:	cmp    DWORD PTR [edi+0x18],0x10
1002fabb:	jb     0x1002fac2
1002fabd:	mov    eax,DWORD PTR [ebp+0x0]
1002fac0:	jmp    0x1002fac4
1002fac2:	mov    eax,ebp
1002fac4:	mov    al,BYTE PTR [eax+ebx*1]
1002fac7:	mov    ebp,DWORD PTR [esi-0xc]
1002faca:	mov    BYTE PTR [esp+0x14],al
1002face:	mov    eax,DWORD PTR [esi-0x8]
1002fad1:	mov    ecx,0x1
1002fad6:	sub    ecx,DWORD PTR [esi-0x4]
1002fad9:	lea    edi,[ebp+0x1]
1002fadc:	sub    eax,edi
1002fade:	or     eax,ecx
1002fae0:	jge    0x1002faf1
1002fae2:	mov    ecx,edi
1002fae4:	lea    eax,[esp+0x20]
1002fae8:	call   0x100343c0
1002faed:	mov    esi,DWORD PTR [esp+0x20]
1002faf1:	test   edi,edi
1002faf3:	mov    cl,BYTE PTR [esp+0x14]
1002faf7:	mov    BYTE PTR [esi+ebp*1],cl
1002fafa:	jl     0x1002fc36
1002fb00:	cmp    edi,DWORD PTR [esi-0x8]
1002fb03:	jg     0x1002fc36
1002fb09:	mov    DWORD PTR [esi-0xc],edi
1002fb0c:	mov    BYTE PTR [edi+esi*1],0x0
1002fb10:	add    ebx,0x1
1002fb13:	mov    edx,DWORD PTR [esp+0x1c]
1002fb17:	mov    eax,DWORD PTR [edx+0x14]
1002fb1a:	cmp    ebx,eax
1002fb1c:	jb     0x1002f7a0
1002fb22:	mov    ebp,DWORD PTR [esp+0x2c]
1002fb26:	xor    ebx,ebx
1002fb28:	mov    eax,ds:0x1007fa54
1002fb2d:	mov    edx,DWORD PTR [eax+0xc]
1002fb30:	mov    ecx,0x1007fa54
1002fb35:	call   edx
1002fb37:	lea    edi,[eax+0x10]
1002fb3a:	mov    DWORD PTR [esp+0x28],edi
1002fb3e:	mov    BYTE PTR [esp+0xbc],0x1
1002fb46:	mov    eax,DWORD PTR [esp+0x1c]
1002fb4a:	mov    eax,DWORD PTR [eax+0x14]
1002fb4d:	lea    ecx,[eax+eax*1]
1002fb50:	mov    DWORD PTR [esp+0x34],ecx
1002fb54:	mov    eax,DWORD PTR [edi-0x8]
1002fb57:	mov    edx,0x1
1002fb5c:	sub    edx,DWORD PTR [edi-0x4]
1002fb5f:	sub    eax,ecx
1002fb61:	or     eax,edx
1002fb63:	jge    0x1002fb72
1002fb65:	lea    eax,[esp+0x28]
1002fb69:	call   0x100343c0
1002fb6e:	mov    edi,DWORD PTR [esp+0x28]
1002fb72:	cmp    DWORD PTR [esi-0x4],0x1
1002fb76:	jle    0x1002fb8a
1002fb78:	mov    ecx,DWORD PTR [esi-0xc]
1002fb7b:	push   ecx
1002fb7c:	lea    edx,[esp+0x24]
1002fb80:	push   edx
1002fb81:	call   0x10034240
1002fb86:	mov    esi,DWORD PTR [esp+0x20]
1002fb8a:	push   0x2000000
1002fb8f:	lea    eax,[esp+0x38]
1002fb93:	push   eax
1002fb94:	push   edi
1002fb95:	push   esi
1002fb96:	call   DWORD PTR ds:0x10065388
1002fb9c:	test   eax,eax
1002fb9e:	jne    0x1002fc40
1002fba4:	mov    ecx,DWORD PTR [esp+0x1c]
1002fba8:	push   0xffffffff
1002fbaa:	push   ebx
1002fbab:	push   ecx
1002fbac:	mov    DWORD PTR [ebp+0x18],0xf
1002fbb3:	mov    DWORD PTR [ebp+0x14],ebx
1002fbb6:	mov    ecx,ebp
1002fbb8:	mov    BYTE PTR [ebp+0x4],0x0
1002fbbc:	call   0x1000124a
1002fbc1:	add    edi,0xfffffff0
1002fbc4:	or     eax,0xffffffff
1002fbc7:	lea    edx,[edi+0xc]
1002fbca:	mov    BYTE PTR [esp+0xbc],0x0
1002fbd2:	lock xadd DWORD PTR [edx],eax
1002fbd6:	dec    eax
1002fbd7:	test   eax,eax
1002fbd9:	jg     0x1002fbe5
1002fbdb:	mov    ecx,DWORD PTR [edi]
1002fbdd:	mov    edx,DWORD PTR [ecx]
1002fbdf:	mov    eax,DWORD PTR [edx+0x4]
1002fbe2:	push   edi
1002fbe3:	call   eax
1002fbe5:	add    esi,0xfffffff0
1002fbe8:	mov    DWORD PTR [esp+0xbc],0xffffffff
1002fbf3:	lea    ecx,[esi+0xc]
1002fbf6:	or     edx,0xffffffff
1002fbf9:	lock xadd DWORD PTR [ecx],edx
1002fbfd:	dec    edx
1002fbfe:	test   edx,edx
1002fc00:	jg     0x1002fc0c
1002fc02:	mov    ecx,DWORD PTR [esi]
1002fc04:	mov    eax,DWORD PTR [ecx]
1002fc06:	mov    edx,DWORD PTR [eax+0x4]
1002fc09:	push   esi
1002fc0a:	call   edx
1002fc0c:	mov    eax,ebp
1002fc0e:	mov    ecx,DWORD PTR [esp+0xb4]
1002fc15:	mov    DWORD PTR fs:0x0,ecx
1002fc1c:	pop    ecx
1002fc1d:	pop    edi
1002fc1e:	pop    esi
1002fc1f:	pop    ebp
1002fc20:	pop    ebx
1002fc21:	mov    ecx,DWORD PTR [esp+0x9c]
1002fc28:	xor    ecx,esp
1002fc2a:	call   0x10041d97
1002fc2f:	add    esp,0xac
1002fc35:	ret    
1002fc36:	push   0x80070057
1002fc3b:	call   0x10001f41
1002fc40:	cmp    edi,ebx
1002fc42:	jne    0x1002fc48
1002fc44:	xor    eax,eax
1002fc46:	jmp    0x1002fc5d
1002fc48:	mov    eax,edi
1002fc4a:	lea    edx,[eax+0x1]
1002fc4d:	lea    ecx,[ecx+0x0]
1002fc50:	mov    cl,BYTE PTR [eax]
1002fc52:	add    eax,0x1
1002fc55:	test   cl,cl
1002fc57:	jne    0x1002fc50
1002fc59:	sub    eax,edx
1002fc5b:	js     0x1002fc36
1002fc5d:	cmp    eax,DWORD PTR [edi-0x8]
1002fc60:	jg     0x1002fc36
1002fc62:	mov    DWORD PTR [edi-0xc],eax
1002fc65:	push   0x38
1002fc67:	mov    BYTE PTR [eax+edi*1],0x0
1002fc6b:	lea    eax,[esp+0x40]
1002fc6f:	push   ebx
1002fc70:	push   eax
1002fc71:	call   0x10044950
1002fc76:	mov    eax,0x1
1002fc7b:	add    esp,0xc
1002fc7e:	mov    DWORD PTR [esp+0x38],0x3c
1002fc86:	mov    DWORD PTR [esp+0x40],eax
1002fc8a:	mov    DWORD PTR [esp+0x4c],eax
1002fc8e:	mov    DWORD PTR [esp+0x58],eax
1002fc92:	mov    DWORD PTR [esp+0x60],eax
1002fc96:	mov    DWORD PTR [esp+0x68],eax
1002fc9a:	mov    DWORD PTR [esp+0x70],eax
1002fc9e:	cmp    DWORD PTR [edi-0x4],eax
1002fca1:	jle    0x1002fcb5
1002fca3:	mov    ecx,DWORD PTR [edi-0xc]
1002fca6:	push   ecx
1002fca7:	lea    edx,[esp+0x2c]
1002fcab:	push   edx
1002fcac:	call   0x10034240
1002fcb1:	mov    edi,DWORD PTR [esp+0x28]
1002fcb5:	lea    eax,[esp+0x38]
1002fcb9:	push   eax
1002fcba:	push   ebx
1002fcbb:	push   ebx
1002fcbc:	push   edi
1002fcbd:	call   DWORD PTR ds:0x1006538c
1002fcc3:	test   eax,eax
1002fcc5:	je     0x1002fba4
1002fccb:	mov    DWORD PTR [esp+0x8c],0xf
1002fcd6:	mov    DWORD PTR [esp+0x88],ebx
1002fcdd:	mov    BYTE PTR [esp+0x78],0x0
1002fce2:	mov    BYTE PTR [esp+0xbc],0x2
1002fcea:	mov    eax,DWORD PTR [esp+0x3c]
1002fcee:	cmp    eax,ebx
1002fcf0:	je     0x1002ff64
1002fcf6:	cmp    DWORD PTR [esp+0x48],ebx
1002fcfa:	je     0x1002ff64
1002fd00:	cmp    DWORD PTR [esp+0x58],ebx
1002fd04:	jne    0x1002ff64
1002fd0a:	cmp    DWORD PTR [esp+0x60],ebx
1002fd0e:	jne    0x1002ff64
1002fd14:	mov    esi,DWORD PTR [esp+0x40]
1002fd18:	mov    ebx,eax
1002fd1a:	lea    edi,[esp+0x24]
1002fd1e:	call   0x10033ff0
1002fd23:	mov    BYTE PTR [esp+0xbc],0x3
1002fd2b:	call   0x10034110
1002fd30:	mov    eax,edi
1002fd32:	push   eax
1002fd33:	mov    ecx,0x1006be20
1002fd38:	call   0x10034190
1002fd3d:	add    esp,0x4
1002fd40:	test   al,al
1002fd42:	je     0x1002fdb1
1002fd44:	mov    ecx,edi
1002fd46:	push   ecx
1002fd47:	mov    ecx,0x10071ca0
1002fd4c:	call   0x10034190
1002fd51:	add    esp,0x4
1002fd54:	test   al,al
1002fd56:	je     0x1002fdb1
1002fd58:	mov    edx,DWORD PTR [esp+0x1c]
1002fd5c:	push   edx
1002fd5d:	mov    ecx,ebp
1002fd5f:	call   0x100011b0
1002fd64:	mov    eax,edi
1002fd66:	call   0x10034050
1002fd6b:	cmp    DWORD PTR [esp+0x8c],0x10
1002fd73:	jb     0x1002fd82
1002fd75:	mov    eax,DWORD PTR [esp+0x78]
1002fd79:	push   eax
1002fd7a:	call   0x10041d92
1002fd7f:	add    esp,0x4
1002fd82:	xor    eax,eax
1002fd84:	mov    DWORD PTR [esp+0x88],eax
1002fd8b:	mov    BYTE PTR [esp+0x78],al
1002fd8f:	lea    eax,[esp+0x28]
1002fd93:	mov    DWORD PTR [esp+0x8c],0xf
1002fd9e:	call   0x10034050
1002fda3:	lea    eax,[esp+0x20]
1002fda7:	call   0x10034050
1002fdac:	jmp    0x1002fc0c
1002fdb1:	mov    ecx,DWORD PTR [esp+0x24]
1002fdb5:	push   ecx
1002fdb6:	lea    edx,[esp+0x78]
1002fdba:	push   edx
1002fdbb:	call   0x10005e98
1002fdc0:	push   0x10071ca8
1002fdc5:	lea    eax,[esp+0x78]
1002fdc9:	push   eax
1002fdca:	call   0x10005e98
1002fdcf:	mov    esi,DWORD PTR [esp+0x4c]
1002fdd3:	mov    ebx,DWORD PTR [esp+0x48]
1002fdd7:	lea    edi,[esp+0x2c]
1002fddb:	call   0x10033ff0
1002fde0:	mov    BYTE PTR [esp+0xbc],0x4
1002fde8:	call   0x10034110
1002fded:	mov    ecx,DWORD PTR [esp+0x2c]
1002fdf1:	push   ecx
1002fdf2:	lea    edx,[esp+0x78]
1002fdf6:	push   edx
1002fdf7:	call   0x10005e98
1002fdfc:	lea    eax,[esp+0x24]
1002fe00:	push   eax
1002fe01:	mov    ecx,0x1006be20
1002fe06:	call   0x10034160
1002fe0b:	add    esp,0x4
1002fe0e:	test   al,al
1002fe10:	je     0x1002fe1a
1002fe12:	cmp    WORD PTR [esp+0x50],0x50
1002fe18:	jne    0x1002fe39
1002fe1a:	lea    ecx,[esp+0x24]
1002fe1e:	push   ecx
1002fe1f:	mov    ecx,0x10071ca0
1002fe24:	call   0x10034160
1002fe29:	add    esp,0x4
1002fe2c:	test   al,al
1002fe2e:	je     0x1002fe6b
1002fe30:	cmp    WORD PTR [esp+0x50],0x1bb
1002fe37:	je     0x1002fe6b
1002fe39:	push   0x1006c900
1002fe3e:	lea    edx,[esp+0x78]
1002fe42:	push   edx
1002fe43:	call   0x10005e98
1002fe48:	movzx  ecx,WORD PTR [esp+0x50]
1002fe4d:	push   0xa
1002fe4f:	lea    eax,[esp+0x94]
1002fe56:	push   eax
1002fe57:	push   ecx
1002fe58:	call   0x10044846
1002fe5d:	add    esp,0xc
1002fe60:	push   eax
1002fe61:	lea    edx,[esp+0x78]
1002fe65:	push   edx
1002fe66:	call   0x10005e98
1002fe6b:	lea    esi,[esp+0x1c]
1002fe6f:	call   0x10033fd0
1002fe74:	mov    BYTE PTR [esp+0xbc],0x5
1002fe7c:	mov    ebx,DWORD PTR [esp+0x64]
1002fe80:	test   ebx,ebx
1002fe82:	je     0x1002feb1
1002fe84:	mov    esi,DWORD PTR [esp+0x68]
1002fe88:	lea    edi,[esp+0x30]
1002fe8c:	call   0x10033ff0
1002fe91:	lea    ebx,[esp+0x1c]
1002fe95:	mov    BYTE PTR [esp+0xbc],0x6
1002fe9d:	call   0x100341e0
1002fea2:	mov    eax,edi
1002fea4:	mov    BYTE PTR [esp+0xbc],0x5
1002feac:	call   0x10034050
1002feb1:	mov    eax,DWORD PTR [esp+0x1c]
1002feb5:	cmp    DWORD PTR [eax-0xc],0x0
1002feb9:	jne    0x1002fec9
1002febb:	mov    edx,0x100716b8
1002fec0:	lea    ebx,[esp+0x1c]
1002fec4:	call   0x10034070
1002fec9:	mov    ecx,DWORD PTR [esp+0x1c]
1002fecd:	push   ecx
1002fece:	lea    edx,[esp+0x78]
1002fed2:	push   edx
1002fed3:	call   0x10005e98
1002fed8:	mov    ebx,DWORD PTR [esp+0x6c]
1002fedc:	test   ebx,ebx
1002fede:	je     0x1002ff11
1002fee0:	mov    esi,DWORD PTR [esp+0x70]
1002fee4:	lea    edi,[esp+0x30]
1002fee8:	call   0x10033ff0
1002feed:	mov    BYTE PTR [esp+0xbc],0x7
1002fef5:	mov    eax,DWORD PTR [eax]
1002fef7:	push   eax
1002fef8:	lea    eax,[esp+0x78]
1002fefc:	push   eax
1002fefd:	call   0x10005e98
1002ff02:	mov    eax,edi
1002ff04:	mov    BYTE PTR [esp+0xbc],0x5
1002ff0c:	call   0x10034050
1002ff11:	lea    ecx,[esp+0x74]
1002ff15:	push   ecx
1002ff16:	mov    ecx,ebp
1002ff18:	call   0x100011b0
1002ff1d:	lea    eax,[esp+0x1c]
1002ff21:	call   0x10034050
1002ff26:	lea    eax,[esp+0x2c]
1002ff2a:	call   0x10034050
1002ff2f:	lea    eax,[esp+0x24]
1002ff33:	call   0x10034050
1002ff38:	cmp    DWORD PTR [esp+0x8c],0x10
1002ff40:	jb     0x1002ff4f
1002ff42:	mov    edx,DWORD PTR [esp+0x78]
1002ff46:	push   edx
1002ff47:	call   0x10041d92
1002ff4c:	add    esp,0x4
1002ff4f:	mov    DWORD PTR [esp+0x88],0x0
1002ff5a:	mov    BYTE PTR [esp+0x78],0x0
1002ff5f:	jmp    0x1002fd8f
1002ff64:	mov    eax,DWORD PTR [esp+0x1c]
1002ff68:	push   0xffffffff
1002ff6a:	push   ebx
1002ff6b:	mov    DWORD PTR [ebp+0x18],0xf
1002ff72:	mov    DWORD PTR [ebp+0x14],ebx
1002ff75:	push   eax
1002ff76:	mov    ecx,ebp
1002ff78:	mov    BYTE PTR [ebp+0x4],0x0
1002ff7c:	call   0x1000124a
1002ff81:	cmp    DWORD PTR [esp+0x8c],0x10
1002ff89:	jb     0x1002ff98
1002ff8b:	mov    ecx,DWORD PTR [esp+0x78]
1002ff8f:	push   ecx
1002ff90:	call   0x10041d92
1002ff95:	add    esp,0x4
1002ff98:	mov    DWORD PTR [esp+0x8c],0xf
1002ffa3:	mov    DWORD PTR [esp+0x88],ebx
1002ffaa:	mov    BYTE PTR [esp+0x78],0x0
1002ffaf:	jmp    0x1002fbc1
1002ffb4:	int3   
1002ffb5:	int3   
1002ffb6:	int3   
1002ffb7:	int3   
1002ffb8:	int3   
1002ffb9:	int3   
1002ffba:	int3   
1002ffbb:	int3   
1002ffbc:	int3   
1002ffbd:	int3   
1002ffbe:	int3   
1002ffbf:	int3   
1002ffc0:	push   0xffffffff
1002ffc2:	push   0x1005ec69
1002ffc7:	mov    eax,fs:0x0
1002ffcd:	push   eax
1002ffce:	sub    esp,0xc
1002ffd1:	push   ebx
1002ffd2:	push   ebp
1002ffd3:	push   edi
1002ffd4:	mov    eax,ds:0x1007d030
1002ffd9:	xor    eax,esp
1002ffdb:	push   eax
1002ffdc:	lea    eax,[esp+0x1c]
1002ffe0:	mov    fs:0x0,eax
1002ffe6:	mov    eax,DWORD PTR [esp+0x2c]
1002ffea:	xor    ecx,ecx
1002ffec:	mov    DWORD PTR [esp+0x14],ecx
1002fff0:	mov    DWORD PTR [esi+0x18],0xf
1002fff7:	mov    DWORD PTR [esi+0x14],ecx
1002fffa:	mov    DWORD PTR [esp+0x18],esi
1002fffe:	mov    BYTE PTR [esi+0x4],cl
10030001:	mov    DWORD PTR [esp+0x24],ecx
10030005:	cmp    DWORD PTR [eax+0x18],0x10
10030009:	mov    DWORD PTR [esp+0x14],0x1
10030011:	jb     0x10030018
10030013:	mov    ebp,DWORD PTR [eax+0x4]
10030016:	jmp    0x1003001b
10030018:	lea    ebp,[eax+0x4]
1003001b:	mov    al,BYTE PTR [ebp+0x0]
1003001e:	test   al,al
10030020:	je     0x10030234
10030026:	mov    cl,BYTE PTR [ebp+0x1]
10030029:	test   cl,cl
1003002b:	je     0x100301a4
10030031:	cmp    al,0x25
10030033:	jne    0x100301a4
10030039:	movzx  eax,cl
1003003c:	push   eax
1003003d:	call   0x1004b78c
10030042:	add    esp,0x4
10030045:	test   eax,eax
10030047:	je     0x100301a4
1003004d:	movzx  ecx,BYTE PTR [ebp+0x2]
10030051:	push   ecx
10030052:	call   0x1004b78c
10030057:	add    esp,0x4
1003005a:	test   eax,eax
1003005c:	je     0x100301a4
10030062:	mov    al,BYTE PTR [ebp+0x1]
10030065:	cmp    al,0x30
10030067:	jl     0x10030075
10030069:	cmp    al,0x39
1003006b:	jg     0x10030075
1003006d:	movsx  edi,al
10030070:	sub    edi,0x30
10030073:	jmp    0x10030086
10030075:	movsx  edx,al
10030078:	push   edx
10030079:	call   0x10057bd7
1003007e:	mov    edi,eax
10030080:	add    esp,0x4
10030083:	sub    edi,0x37
10030086:	mov    al,BYTE PTR [ebp+0x2]
10030089:	cmp    al,0x30
1003008b:	jl     0x10030099
1003008d:	cmp    al,0x39
1003008f:	jg     0x10030099
10030091:	movsx  eax,al
10030094:	sub    eax,0x30
10030097:	jmp    0x100300a8
10030099:	movsx  eax,al
1003009c:	push   eax
1003009d:	call   0x10057bd7
100300a2:	add    esp,0x4
100300a5:	sub    eax,0x37
100300a8:	shl    edi,0x4
100300ab:	add    edi,eax
100300ad:	cmp    edi,0x7f
100300b0:	jg     0x100301a4
100300b6:	mov    al,BYTE PTR [ebp+0x1]
100300b9:	cmp    al,0x30
100300bb:	jl     0x100300c9
100300bd:	cmp    al,0x39
100300bf:	jg     0x100300c9
100300c1:	movsx  ebx,al
100300c4:	sub    ebx,0x30
100300c7:	jmp    0x100300da
100300c9:	movsx  ecx,al
100300cc:	push   ecx
100300cd:	call   0x10057bd7
100300d2:	mov    ebx,eax
100300d4:	add    esp,0x4
100300d7:	sub    ebx,0x37
100300da:	mov    al,BYTE PTR [ebp+0x2]
100300dd:	cmp    al,0x30
100300df:	jl     0x100300ed
100300e1:	cmp    al,0x39
100300e3:	jg     0x100300ed
100300e5:	movsx  eax,al
100300e8:	sub    eax,0x30
100300eb:	jmp    0x100300fc
100300ed:	movsx  edx,al
100300f0:	push   edx
100300f1:	call   0x10057bd7
100300f6:	add    esp,0x4
100300f9:	sub    eax,0x37
100300fc:	mov    DWORD PTR [esp+0x10],eax
10030100:	or     eax,0xffffffff
10030103:	sub    eax,DWORD PTR [esi+0x14]
10030106:	cmp    eax,0x1
10030109:	ja     0x10030110
1003010b:	call   0x1005600a
10030110:	mov    edi,DWORD PTR [esi+0x14]
10030113:	add    edi,0x1
10030116:	cmp    edi,0xfffffffe
10030119:	jbe    0x10030120
1003011b:	call   0x1005600a
10030120:	mov    eax,DWORD PTR [esi+0x18]
10030123:	cmp    eax,edi
10030125:	jae    0x10030150
10030127:	mov    ecx,DWORD PTR [esi+0x14]
1003012a:	push   ecx
1003012b:	push   edi
1003012c:	mov    ecx,esi
1003012e:	call   0x10001509
10030133:	test   edi,edi
10030135:	jbe    0x1003019c
10030137:	mov    ecx,DWORD PTR [esi+0x14]
1003013a:	shl    bl,0x4
1003013d:	add    bl,BYTE PTR [esp+0x10]
10030141:	mov    edx,0x10
10030146:	cmp    DWORD PTR [esi+0x18],edx
10030149:	jb     0x10030178
1003014b:	mov    eax,DWORD PTR [esi+0x4]
1003014e:	jmp    0x1003017b
10030150:	test   edi,edi
10030152:	jne    0x10030135
10030154:	cmp    eax,0x10
10030157:	mov    DWORD PTR [esi+0x14],edi
1003015a:	jb     0x1003016a
1003015c:	mov    eax,DWORD PTR [esi+0x4]
1003015f:	mov    BYTE PTR [eax],0x0
10030162:	add    ebp,0x2
10030165:	jmp    0x10030226
1003016a:	lea    eax,[esi+0x4]
1003016d:	mov    BYTE PTR [eax],0x0
10030170:	add    ebp,0x2
10030173:	jmp    0x10030226
10030178:	lea    eax,[esi+0x4]
1003017b:	mov    BYTE PTR [eax+ecx*1],bl
1003017e:	cmp    DWORD PTR [esi+0x18],edx
10030181:	mov    DWORD PTR [esi+0x14],edi
10030184:	jb     0x10030195
10030186:	mov    eax,DWORD PTR [esi+0x4]
10030189:	mov    BYTE PTR [eax+edi*1],0x0
1003018d:	add    ebp,0x2
10030190:	jmp    0x10030226
10030195:	lea    eax,[esi+0x4]
10030198:	mov    BYTE PTR [eax+edi*1],0x0
1003019c:	add    ebp,0x2
1003019f:	jmp    0x10030226
100301a4:	mov    bl,BYTE PTR [ebp+0x0]
100301a7:	or     edx,0xffffffff
100301aa:	sub    edx,DWORD PTR [esi+0x14]
100301ad:	cmp    edx,0x1
100301b0:	ja     0x100301b7
100301b2:	call   0x1005600a
100301b7:	mov    edi,DWORD PTR [esi+0x14]
100301ba:	add    edi,0x1
100301bd:	cmp    edi,0xfffffffe
100301c0:	jbe    0x100301c7
100301c2:	call   0x1005600a
100301c7:	mov    eax,DWORD PTR [esi+0x18]
100301ca:	cmp    eax,edi
100301cc:	jae    0x100301f0
100301ce:	mov    eax,DWORD PTR [esi+0x14]
100301d1:	push   eax
100301d2:	push   edi
100301d3:	mov    ecx,esi
100301d5:	call   0x10001509
100301da:	test   edi,edi
100301dc:	jbe    0x10030226
100301de:	mov    ecx,DWORD PTR [esi+0x14]
100301e1:	mov    edx,0x10
100301e6:	cmp    DWORD PTR [esi+0x18],edx
100301e9:	jb     0x1003020c
100301eb:	mov    eax,DWORD PTR [esi+0x4]
100301ee:	jmp    0x1003020f
100301f0:	test   edi,edi
100301f2:	jne    0x100301dc
100301f4:	cmp    eax,0x10
100301f7:	mov    DWORD PTR [esi+0x14],edi
100301fa:	jb     0x10030204
100301fc:	mov    eax,DWORD PTR [esi+0x4]
100301ff:	mov    BYTE PTR [eax],0x0
10030202:	jmp    0x10030226
10030204:	lea    eax,[esi+0x4]
10030207:	mov    BYTE PTR [eax],0x0
1003020a:	jmp    0x10030226
1003020c:	lea    eax,[esi+0x4]
1003020f:	mov    BYTE PTR [eax+ecx*1],bl
10030212:	cmp    DWORD PTR [esi+0x18],edx
10030215:	mov    DWORD PTR [esi+0x14],edi
10030218:	jb     0x1003021f
1003021a:	mov    eax,DWORD PTR [esi+0x4]
1003021d:	jmp    0x10030222
1003021f:	lea    eax,[esi+0x4]
10030222:	mov    BYTE PTR [eax+edi*1],0x0
10030226:	mov    al,BYTE PTR [ebp+0x1]
10030229:	add    ebp,0x1
1003022c:	test   al,al
1003022e:	jne    0x10030026
10030234:	mov    eax,esi
10030236:	mov    ecx,DWORD PTR [esp+0x1c]
1003023a:	mov    DWORD PTR fs:0x0,ecx
10030241:	pop    ecx
10030242:	pop    edi
10030243:	pop    ebp
10030244:	pop    ebx
10030245:	add    esp,0x18
10030248:	ret    
10030249:	int3   
1003024a:	int3   
1003024b:	int3   
1003024c:	int3   
1003024d:	int3   
1003024e:	int3   
1003024f:	int3   
10030250:	sub    esp,0x14
10030253:	mov    eax,ds:0x1007d030
10030258:	xor    eax,esp
1003025a:	mov    DWORD PTR [esp+0x10],eax
1003025e:	movzx  eax,BYTE PTR [esp+0x18]
10030263:	push   eax
10030264:	push   0x48fd148c
10030269:	push   0x10071cac
1003026e:	mov    DWORD PTR [esp+0xc],0x0
10030276:	call   0x10003d63
1003027b:	push   eax
1003027c:	push   0x6
1003027e:	push   0x10071ce4
10030283:	call   0x10003d75
10030288:	add    esp,0x14
1003028b:	push   eax
1003028c:	lea    ecx,[esp+0xc]
10030290:	push   ecx
10030291:	call   0x100572ef
10030296:	lea    edx,[esp+0x10]
1003029a:	mov    DWORD PTR [esi+0x18],0xf
100302a1:	mov    DWORD PTR [esi+0x14],0x0
100302a8:	push   edx
100302a9:	mov    BYTE PTR [esi+0x4],0x0
100302ad:	call   0x10041f10
100302b2:	add    esp,0x10
100302b5:	push   eax
100302b6:	lea    eax,[esp+0x8]
100302ba:	push   eax
100302bb:	mov    ecx,esi
100302bd:	call   0x10001344
100302c2:	mov    ecx,DWORD PTR [esp+0x10]
100302c6:	xor    ecx,esp
100302c8:	mov    eax,esi
100302ca:	call   0x10041d97
100302cf:	add    esp,0x14
100302d2:	ret    
100302d3:	int3   
100302d4:	int3   
100302d5:	int3   
100302d6:	int3   
100302d7:	int3   
100302d8:	int3   
100302d9:	int3   
100302da:	int3   
100302db:	int3   
100302dc:	int3   
100302dd:	int3   
100302de:	int3   
100302df:	int3   
100302e0:	push   0xffffffff
100302e2:	push   0x10061449
100302e7:	mov    eax,fs:0x0
100302ed:	push   eax
100302ee:	sub    esp,0x28
100302f1:	push   ebx
100302f2:	push   ebp
100302f3:	push   esi
100302f4:	mov    eax,ds:0x1007d030
100302f9:	xor    eax,esp
100302fb:	push   eax
100302fc:	lea    eax,[esp+0x38]
10030300:	mov    fs:0x0,eax
10030306:	xor    eax,eax
10030308:	mov    DWORD PTR [esp+0x30],eax
1003030c:	mov    DWORD PTR [edi+0x18],0xf
10030313:	mov    DWORD PTR [edi+0x14],eax
10030316:	mov    DWORD PTR [esp+0x34],edi
1003031a:	mov    esi,ecx
1003031c:	mov    BYTE PTR [edi+0x4],al
1003031f:	mov    DWORD PTR [esp+0x40],eax
10030323:	mov    eax,DWORD PTR [esi]
10030325:	mov    ebp,0x10
1003032a:	mov    ecx,0x1
1003032f:	sub    eax,ebp
10030331:	cmp    DWORD PTR [eax+0xc],ecx
10030334:	mov    DWORD PTR [esp+0x30],ecx
10030338:	jle    0x10030344
1003033a:	mov    eax,DWORD PTR [eax+0x4]
1003033d:	push   eax
1003033e:	push   esi
1003033f:	call   0x100022b0
10030344:	mov    ebx,DWORD PTR [esi]
10030346:	movzx  eax,WORD PTR [ebx]
10030349:	test   ax,ax
1003034c:	mov    DWORD PTR [esp+0x10],ebx
10030350:	je     0x100306a2
10030356:	jmp    0x10030364
10030358:	jmp    0x10030360
1003035a:	lea    ebx,[ebx+0x0]
10030360:	mov    ebx,DWORD PTR [esp+0x10]
10030364:	cmp    ax,0x41
10030368:	jb     0x10030374
1003036a:	cmp    ax,0x5a
1003036e:	jbe    0x10030609
10030374:	cmp    ax,0x61
10030378:	jb     0x10030384
1003037a:	cmp    ax,0x7a
1003037e:	jbe    0x10030609
10030384:	cmp    ax,0x30
10030388:	jb     0x10030394
1003038a:	cmp    ax,0x39
1003038e:	jbe    0x10030609
10030394:	cmp    ax,0x20
10030398:	jne    0x10030406
1003039a:	or     ecx,0xffffffff
1003039d:	sub    ecx,DWORD PTR [edi+0x14]
100303a0:	cmp    ecx,0x1
100303a3:	ja     0x100303aa
100303a5:	call   0x1005600a
100303aa:	mov    esi,DWORD PTR [edi+0x14]
100303ad:	add    esi,0x1
100303b0:	cmp    esi,0xfffffffe
100303b3:	jbe    0x100303ba
100303b5:	call   0x1005600a
100303ba:	mov    eax,DWORD PTR [edi+0x18]
100303bd:	cmp    eax,esi
100303bf:	jae    0x100303e4
100303c1:	mov    edx,DWORD PTR [edi+0x14]
100303c4:	push   edx
100303c5:	push   esi
100303c6:	mov    ecx,edi
100303c8:	call   0x10001509
100303cd:	test   esi,esi
100303cf:	jbe    0x1003068b
100303d5:	cmp    DWORD PTR [edi+0x18],ebp
100303d8:	mov    ecx,DWORD PTR [edi+0x14]
100303db:	lea    edx,[edi+0x4]
100303de:	jb     0x100303ed
100303e0:	mov    eax,DWORD PTR [edx]
100303e2:	jmp    0x100303ef
100303e4:	test   esi,esi
100303e6:	jne    0x100303cf
100303e8:	jmp    0x10030659
100303ed:	mov    eax,edx
100303ef:	mov    BYTE PTR [eax+ecx*1],0x2b
100303f3:	cmp    DWORD PTR [edi+0x18],ebp
100303f6:	mov    DWORD PTR [edi+0x14],esi
100303f9:	jb     0x10030685
100303ff:	mov    eax,DWORD PTR [edx]
10030401:	jmp    0x10030687
10030406:	cmp    ax,0x2d
1003040a:	je     0x10030609
10030410:	cmp    ax,0x5f
10030414:	je     0x10030609
1003041a:	cmp    ax,0x2e
1003041e:	je     0x10030609
10030424:	cmp    ax,0x21
10030428:	je     0x10030609
1003042e:	cmp    ax,0x7e
10030432:	je     0x10030609
10030438:	cmp    ax,0x2a
1003043c:	je     0x10030609
10030442:	cmp    ax,0x27
10030446:	je     0x10030609
1003044c:	cmp    ax,0x28
10030450:	je     0x10030609
10030456:	cmp    ax,0x29
1003045a:	je     0x10030609
10030460:	cmp    ax,0x7f
10030464:	lea    esi,[esp+0x14]
10030468:	ja     0x100304aa
1003046a:	movzx  eax,BYTE PTR [ebx]
1003046d:	push   eax
1003046e:	call   0x10030250
10030473:	add    esp,0x4
10030476:	push   0xffffffff
10030478:	push   0x0
1003047a:	mov    esi,edi
1003047c:	mov    DWORD PTR [esp+0x48],0x1
10030484:	call   0x10005fb0
10030489:	mov    BYTE PTR [esp+0x40],0x0
1003048e:	cmp    DWORD PTR [esp+0x2c],ebp
10030492:	jb     0x1003068b
10030498:	mov    ecx,DWORD PTR [esp+0x18]
1003049c:	push   ecx
1003049d:	call   0x10041d92
100304a2:	add    esp,0x4
100304a5:	jmp    0x1003068b
100304aa:	cmp    ax,0x7ff
100304ae:	ja     0x1003053a
100304b4:	shr    eax,0x6
100304b7:	or     eax,0xffffffc0
100304ba:	push   eax
100304bb:	call   0x10030250
100304c0:	add    esp,0x4
100304c3:	push   0xffffffff
100304c5:	push   0x0
100304c7:	mov    esi,edi
100304c9:	mov    DWORD PTR [esp+0x48],0x2
100304d1:	call   0x10005fb0
100304d6:	mov    BYTE PTR [esp+0x40],0x0
100304db:	cmp    DWORD PTR [esp+0x2c],ebp
100304df:	jb     0x100304ee
100304e1:	mov    edx,DWORD PTR [esp+0x18]
100304e5:	push   edx
100304e6:	call   0x10041d92
100304eb:	add    esp,0x4
100304ee:	movzx  eax,BYTE PTR [ebx]
100304f1:	and    eax,0xffffff3f
100304f6:	or     eax,0xffffff80
100304f9:	push   eax
100304fa:	lea    esi,[esp+0x18]
100304fe:	call   0x10030250
10030503:	add    esp,0x4
10030506:	push   0xffffffff
10030508:	push   0x0
1003050a:	mov    esi,edi
1003050c:	mov    DWORD PTR [esp+0x48],0x3
10030514:	call   0x10005fb0
10030519:	mov    BYTE PTR [esp+0x40],0x0
1003051e:	cmp    DWORD PTR [esp+0x2c],ebp
10030522:	jb     0x1003068b
10030528:	mov    ecx,DWORD PTR [esp+0x18]
1003052c:	push   ecx
1003052d:	call   0x10041d92
10030532:	add    esp,0x4
10030535:	jmp    0x1003068b
1003053a:	shr    ax,0xc
1003053e:	or     eax,0xffffffe0
10030541:	push   eax
10030542:	call   0x10030250
10030547:	add    esp,0x4
1003054a:	push   0xffffffff
1003054c:	push   0x0
1003054e:	mov    esi,edi
10030550:	mov    DWORD PTR [esp+0x48],0x4
10030558:	call   0x10005fb0
1003055d:	mov    BYTE PTR [esp+0x40],0x0
10030562:	cmp    DWORD PTR [esp+0x2c],ebp
10030566:	jb     0x10030575
10030568:	mov    edx,DWORD PTR [esp+0x18]
1003056c:	push   edx
1003056d:	call   0x10041d92
10030572:	add    esp,0x4
10030575:	movzx  eax,WORD PTR [ebx]
10030578:	shr    ax,0x6
1003057c:	lea    esi,[esp+0x14]
10030580:	and    eax,0xffffff3f
10030585:	or     eax,0xffffff80
10030588:	push   eax
10030589:	call   0x10030250
1003058e:	add    esp,0x4
10030591:	push   0xffffffff
10030593:	push   0x0
10030595:	mov    esi,edi
10030597:	mov    DWORD PTR [esp+0x48],0x5
1003059f:	call   0x10005fb0
100305a4:	mov    BYTE PTR [esp+0x40],0x0
100305a9:	cmp    DWORD PTR [esp+0x2c],ebp
100305ad:	jb     0x100305bc
100305af:	mov    ecx,DWORD PTR [esp+0x18]
100305b3:	push   ecx
100305b4:	call   0x10041d92
100305b9:	add    esp,0x4
100305bc:	movzx  edx,BYTE PTR [ebx]
100305bf:	and    edx,0xffffff3f
100305c5:	or     edx,0xffffff80
100305c8:	push   edx
100305c9:	lea    esi,[esp+0x18]
100305cd:	call   0x10030250
100305d2:	add    esp,0x4
100305d5:	push   0xffffffff
100305d7:	push   0x0
100305d9:	mov    esi,edi
100305db:	mov    DWORD PTR [esp+0x48],0x6
100305e3:	call   0x10005fb0
100305e8:	mov    BYTE PTR [esp+0x40],0x0
100305ed:	cmp    DWORD PTR [esp+0x2c],ebp
100305f1:	jb     0x1003068b
100305f7:	mov    eax,DWORD PTR [esp+0x18]
100305fb:	push   eax
100305fc:	call   0x10041d92
10030601:	add    esp,0x4
10030604:	jmp    0x1003068b
10030609:	mov    ecx,DWORD PTR [esp+0x10]
1003060d:	mov    bl,BYTE PTR [ecx]
1003060f:	or     edx,0xffffffff
10030612:	sub    edx,DWORD PTR [edi+0x14]
10030615:	cmp    edx,0x1
10030618:	ja     0x1003061f
1003061a:	call   0x1005600a
1003061f:	mov    esi,DWORD PTR [edi+0x14]
10030622:	add    esi,0x1
10030625:	cmp    esi,0xfffffffe
10030628:	jbe    0x1003062f
1003062a:	call   0x1005600a
1003062f:	mov    eax,DWORD PTR [edi+0x18]
10030632:	cmp    eax,esi
10030634:	jae    0x10030655
10030636:	mov    eax,DWORD PTR [edi+0x14]
10030639:	push   eax
1003063a:	push   esi
1003063b:	mov    ecx,edi
1003063d:	call   0x10001509
10030642:	test   esi,esi
10030644:	jbe    0x1003068b
10030646:	cmp    DWORD PTR [edi+0x18],ebp
10030649:	mov    ecx,DWORD PTR [edi+0x14]
1003064c:	lea    edx,[edi+0x4]
1003064f:	jb     0x10030674
10030651:	mov    eax,DWORD PTR [edx]
10030653:	jmp    0x10030676
10030655:	test   esi,esi
10030657:	jne    0x10030644
10030659:	cmp    eax,ebp
1003065b:	mov    DWORD PTR [edi+0x14],0x0
10030662:	jb     0x1003066c
10030664:	mov    eax,DWORD PTR [edi+0x4]
10030667:	mov    BYTE PTR [eax],0x0
1003066a:	jmp    0x1003068b
1003066c:	lea    eax,[edi+0x4]
1003066f:	mov    BYTE PTR [eax],0x0
10030672:	jmp    0x1003068b
10030674:	mov    eax,edx
10030676:	mov    BYTE PTR [eax+ecx*1],bl
10030679:	cmp    DWORD PTR [edi+0x18],ebp
1003067c:	mov    DWORD PTR [edi+0x14],esi
1003067f:	jb     0x10030685
10030681:	mov    eax,DWORD PTR [edx]
10030683:	jmp    0x10030687
10030685:	mov    eax,edx
10030687:	mov    BYTE PTR [eax+esi*1],0x0
1003068b:	mov    eax,DWORD PTR [esp+0x10]
1003068f:	add    eax,0x2
10030692:	mov    DWORD PTR [esp+0x10],eax
10030696:	movzx  eax,WORD PTR [eax]
10030699:	test   ax,ax
1003069c:	jne    0x10030360
100306a2:	mov    eax,edi
100306a4:	mov    ecx,DWORD PTR [esp+0x38]
100306a8:	mov    DWORD PTR fs:0x0,ecx
100306af:	pop    ecx
100306b0:	pop    esi
100306b1:	pop    ebp
100306b2:	pop    ebx
100306b3:	add    esp,0x34
100306b6:	ret    
100306b7:	int3   
100306b8:	int3   
100306b9:	int3   
100306ba:	int3   
100306bb:	int3   
100306bc:	int3   
100306bd:	int3   
100306be:	int3   
100306bf:	int3   
100306c0:	push   0xffffffff
100306c2:	push   0x1005ec28
100306c7:	mov    eax,fs:0x0
100306cd:	push   eax
100306ce:	sub    esp,0x40
100306d1:	push   ebx
100306d2:	push   ebp
100306d3:	push   esi
100306d4:	push   edi
100306d5:	mov    eax,ds:0x1007d030
100306da:	xor    eax,esp
100306dc:	push   eax
100306dd:	lea    eax,[esp+0x54]
100306e1:	mov    fs:0x0,eax
100306e7:	mov    esi,ecx
100306e9:	mov    ebp,DWORD PTR [esp+0x64]
100306ed:	xor    ebx,ebx
100306ef:	push   0x38
100306f1:	lea    eax,[esp+0x20]
100306f5:	push   ebx
100306f6:	push   eax
100306f7:	mov    DWORD PTR [esp+0x20],ebx
100306fb:	call   0x10044950
10030700:	add    esp,0xc
10030703:	cmp    DWORD PTR [esi+0x18],0x10
10030707:	mov    DWORD PTR [esp+0x18],0x3c
1003070f:	mov    DWORD PTR [esp+0x2c],0x1
10030717:	jb     0x1003071e
10030719:	mov    esi,DWORD PTR [esi+0x4]
1003071c:	jmp    0x10030721
1003071e:	add    esi,0x4
10030721:	lea    ecx,[esp+0x18]
10030725:	push   ecx
10030726:	push   ebx
10030727:	push   ebx
10030728:	push   esi
10030729:	call   DWORD PTR ds:0x1006538c
1003072f:	test   eax,eax
10030731:	jne    0x1003075c
10030733:	mov    DWORD PTR [ebp+0x18],0xf
1003073a:	mov    DWORD PTR [ebp+0x14],ebx
1003073d:	push   0x1006bb18
10030742:	mov    BYTE PTR [ebp+0x4],bl
10030745:	call   0x10041f10
1003074a:	add    esp,0x4
1003074d:	push   eax
1003074e:	push   0x1006bb18
10030753:	mov    ecx,ebp
10030755:	call   0x10001344
1003075a:	jmp    0x100307d0
1003075c:	mov    esi,DWORD PTR [esp+0x2c]
10030760:	mov    ebx,DWORD PTR [esp+0x28]
10030764:	lea    edi,[esp+0x14]
10030768:	call   0x10033ff0
1003076d:	xor    ebx,ebx
1003076f:	mov    DWORD PTR [esp+0x5c],ebx
10030773:	mov    esi,DWORD PTR [esp+0x14]
10030777:	cmp    DWORD PTR [esi-0x4],0x1
1003077b:	jle    0x1003078d
1003077d:	mov    edx,DWORD PTR [esi-0xc]
10030780:	push   edx
10030781:	mov    eax,edi
10030783:	push   eax
10030784:	call   0x10034240
10030789:	mov    esi,DWORD PTR [esp+0x14]
1003078d:	mov    DWORD PTR [ebp+0x18],0xf
10030794:	mov    DWORD PTR [ebp+0x14],ebx
10030797:	push   esi
10030798:	mov    BYTE PTR [ebp+0x4],bl
1003079b:	call   0x10041f10
100307a0:	add    esp,0x4
100307a3:	push   eax
100307a4:	push   esi
100307a5:	mov    ecx,ebp
100307a7:	call   0x10001344
100307ac:	lea    eax,[esi-0x10]
100307af:	mov    DWORD PTR [esp+0x5c],0xffffffff
100307b7:	lea    ecx,[eax+0xc]
100307ba:	or     edx,0xffffffff
100307bd:	lock xadd DWORD PTR [ecx],edx
100307c1:	dec    edx
100307c2:	test   edx,edx
100307c4:	jg     0x100307d0
100307c6:	mov    ecx,DWORD PTR [eax]
100307c8:	mov    edx,DWORD PTR [ecx]
100307ca:	push   eax
100307cb:	mov    eax,DWORD PTR [edx+0x4]
100307ce:	call   eax
100307d0:	mov    eax,ebp
100307d2:	mov    ecx,DWORD PTR [esp+0x54]
100307d6:	mov    DWORD PTR fs:0x0,ecx
100307dd:	pop    ecx
100307de:	pop    edi
100307df:	pop    esi
100307e0:	pop    ebp
100307e1:	pop    ebx
100307e2:	add    esp,0x4c
100307e5:	ret    
100307e6:	int3   
100307e7:	int3   
100307e8:	int3   
100307e9:	int3   
100307ea:	int3   
100307eb:	int3   
100307ec:	int3   
100307ed:	int3   
100307ee:	int3   
100307ef:	int3   
100307f0:	push   ebp
100307f1:	lea    ebp,[esp-0x78]
100307f5:	sub    esp,0xd0
100307fb:	mov    eax,ds:0x1007d030
10030800:	xor    eax,ebp
10030802:	mov    DWORD PTR [ebp+0x74],eax
10030805:	push   esi
10030806:	push   edi
10030807:	push   0x64
10030809:	lea    eax,[ebp-0x54]
1003080c:	push   eax
1003080d:	xor    esi,esi
1003080f:	push   0x59
10030811:	mov    DWORD PTR [ebp-0x58],esi
10030814:	call   DWORD PTR ds:0x1006522c
1003081a:	push   eax
1003081b:	call   DWORD PTR ds:0x10065234
10030821:	call   DWORD PTR ds:0x1007dfe4
10030827:	lea    ecx,[ebp-0x54]
1003082a:	push   ecx
1003082b:	mov    DWORD PTR [ebp-0x58],eax
1003082e:	call   DWORD PTR ds:0x100650e0
10030834:	add    eax,0x1
10030837:	cmp    eax,0x3fffffff
1003083c:	jg     0x10030875
1003083e:	lea    esi,[eax+eax*1]
10030841:	mov    eax,esi
10030843:	call   0x10049010
10030848:	mov    edi,esp
1003084a:	test   edi,edi
1003084c:	je     0x10030873
1003084e:	mov    eax,DWORD PTR [ebp-0x58]
10030851:	push   0x0
10030853:	push   0x0
10030855:	push   esi
10030856:	push   edi
10030857:	push   0xffffffff
10030859:	lea    edx,[ebp-0x54]
1003085c:	push   edx
1003085d:	push   0x0
1003085f:	push   eax
10030860:	mov    BYTE PTR [edi],0x0
10030863:	call   DWORD PTR ds:0x100650dc
10030869:	mov    esi,eax
1003086b:	neg    esi
1003086d:	sbb    esi,esi
1003086f:	and    esi,edi
10030871:	jmp    0x10030875
10030873:	xor    esi,esi
10030875:	mov    DWORD PTR [ebx+0x18],0xf
1003087c:	mov    DWORD PTR [ebx+0x14],0x0
10030883:	push   esi
10030884:	mov    BYTE PTR [ebx+0x4],0x0
10030888:	call   0x10041f10
1003088d:	add    esp,0x4
10030890:	push   eax
10030891:	push   esi
10030892:	mov    ecx,ebx
10030894:	call   0x10001344
10030899:	mov    eax,ebx
1003089b:	lea    esp,[ebp-0x60]
1003089e:	pop    edi
1003089f:	pop    esi
100308a0:	mov    ecx,DWORD PTR [ebp+0x74]
100308a3:	xor    ecx,ebp
100308a5:	call   0x10041d97
100308aa:	add    ebp,0x78
100308ad:	mov    esp,ebp
100308af:	pop    ebp
100308b0:	ret    
100308b1:	int3   
100308b2:	int3   
100308b3:	int3   
100308b4:	int3   
100308b5:	int3   
100308b6:	int3   
100308b7:	int3   
100308b8:	int3   
100308b9:	int3   
100308ba:	int3   
100308bb:	int3   
100308bc:	int3   
100308bd:	int3   
100308be:	int3   
100308bf:	int3   
100308c0:	sub    esp,0x74
100308c3:	mov    eax,ds:0x1007d030
100308c8:	xor    eax,esp
100308ca:	mov    DWORD PTR [esp+0x70],eax
100308ce:	mov    eax,DWORD PTR [esp+0x78]
100308d2:	movzx  ecx,BYTE PTR [eax+0xf]
100308d6:	movzx  edx,BYTE PTR [eax+0xe]
100308da:	push   ecx
100308db:	movzx  ecx,BYTE PTR [eax+0xd]
100308df:	push   edx
100308e0:	movzx  edx,BYTE PTR [eax+0xc]
100308e4:	push   ecx
100308e5:	movzx  ecx,BYTE PTR [eax+0xb]
100308e9:	push   edx
100308ea:	movzx  edx,BYTE PTR [eax+0xa]
100308ee:	push   ecx
100308ef:	movzx  ecx,BYTE PTR [eax+0x9]
100308f3:	push   edx
100308f4:	movzx  edx,BYTE PTR [eax+0x8]
100308f8:	push   ecx
100308f9:	movzx  ecx,WORD PTR [eax+0x6]
100308fd:	push   edx
100308fe:	movzx  edx,WORD PTR [eax+0x4]
10030902:	mov    eax,DWORD PTR [eax]
10030904:	push   ecx
10030905:	push   edx
10030906:	push   eax
10030907:	push   0x718b526e
1003090c:	push   0x3419c1d2
10030911:	push   0x5b7eda10
10030916:	push   0x10071cf0
1003091b:	mov    DWORD PTR [esp+0x3c],0x0
10030923:	call   0x10003d63
10030928:	add    esp,0x8
1003092b:	push   eax
1003092c:	call   0x10003d63
10030931:	add    esp,0x8
10030934:	push   eax
10030935:	call   0x10003d63
1003093a:	push   eax
1003093b:	push   0x32
1003093d:	push   0x10071d30
10030942:	call   0x10003d75
10030947:	add    esp,0x14
1003094a:	push   eax
1003094b:	lea    ecx,[esp+0x34]
1003094f:	push   ecx
10030950:	call   0x100572ef
10030955:	lea    edx,[esp+0x38]
10030959:	mov    DWORD PTR [esi+0x18],0xf
10030960:	mov    DWORD PTR [esi+0x14],0x0
10030967:	push   edx
10030968:	mov    BYTE PTR [esi+0x4],0x0
1003096c:	call   0x10041f10
10030971:	add    esp,0x38
10030974:	push   eax
10030975:	lea    eax,[esp+0x8]
10030979:	push   eax
1003097a:	mov    ecx,esi
1003097c:	call   0x10001344
10030981:	mov    ecx,DWORD PTR [esp+0x70]
10030985:	xor    ecx,esp
10030987:	mov    eax,esi
10030989:	call   0x10041d97
1003098e:	add    esp,0x74
10030991:	ret    
10030992:	int3   
10030993:	int3   
10030994:	int3   
10030995:	int3   
10030996:	int3   
10030997:	int3   
10030998:	int3   
10030999:	int3   
1003099a:	int3   
1003099b:	int3   
1003099c:	int3   
1003099d:	int3   
1003099e:	int3   
1003099f:	int3   
100309a0:	push   esi
100309a1:	push   edi
100309a2:	push   0x1007fd2c
100309a7:	call   DWORD PTR ds:0x100650a4
100309ad:	mov    eax,DWORD PTR [esp+0xc]
100309b1:	mov    esi,DWORD PTR [eax]
100309b3:	mov    edi,DWORD PTR [eax+0x4]
100309b6:	push   eax
100309b7:	call   0x10041d92
100309bc:	mov    eax,ds:0x1007ff80
100309c1:	add    esp,0x4
100309c4:	push   edi
100309c5:	push   eax
100309c6:	call   DWORD PTR ds:0x10065084
100309cc:	push   esi
100309cd:	call   DWORD PTR ds:0x10065378
100309d3:	push   0x1007fd2c
100309d8:	call   DWORD PTR ds:0x100650ac
100309de:	pop    edi
100309df:	xor    eax,eax
100309e1:	pop    esi
100309e2:	ret    0x4
100309e5:	int3   
100309e6:	int3   
100309e7:	int3   
100309e8:	int3   
100309e9:	int3   
100309ea:	int3   
100309eb:	int3   
100309ec:	int3   
100309ed:	int3   
100309ee:	int3   
100309ef:	int3   
100309f0:	push   0xffffffff
100309f2:	push   0x10062bc8
100309f7:	mov    eax,fs:0x0
100309fd:	push   eax
100309fe:	sub    esp,0x20
10030a01:	push   ebx
10030a02:	mov    eax,ds:0x1007d030
10030a07:	xor    eax,esp
10030a09:	push   eax
10030a0a:	lea    eax,[esp+0x28]
10030a0e:	mov    fs:0x0,eax
10030a14:	xor    ebx,ebx
10030a16:	mov    DWORD PTR [esp+0x8],ebx
10030a1a:	push   0x1006bb18
10030a1f:	mov    DWORD PTR [esp+0x28],0xf
10030a27:	mov    DWORD PTR [esp+0x24],ebx
10030a2b:	mov    BYTE PTR [esp+0x14],bl
10030a2f:	call   0x10041f10
10030a34:	add    esp,0x4
10030a37:	push   eax
10030a38:	push   0x1006bb18
10030a3d:	lea    ecx,[esp+0x14]
10030a41:	call   0x10001344
10030a46:	mov    eax,DWORD PTR [esp+0x44]
10030a4a:	mov    ecx,DWORD PTR [esp+0x40]
10030a4e:	push   eax
10030a4f:	mov    eax,DWORD PTR [esp+0x3c]
10030a53:	push   ecx
10030a54:	lea    edx,[esp+0x14]
10030a58:	push   edx
10030a59:	mov    edx,DWORD PTR [esp+0x48]
10030a5d:	push   eax
10030a5e:	lea    ecx,[esp+0x18]
10030a62:	push   ecx
10030a63:	mov    DWORD PTR [esp+0x44],ebx
10030a67:	call   0x10030ab0
10030a6c:	mov    ecx,DWORD PTR [eax]
10030a6e:	mov    DWORD PTR [eax],ebx
10030a70:	mov    edx,DWORD PTR [esp+0x1c]
10030a74:	push   edx
10030a75:	mov    DWORD PTR [esi],ecx
10030a77:	call   0x10041d92
10030a7c:	add    esp,0x18
10030a7f:	cmp    DWORD PTR [esp+0x24],0x10
10030a84:	jb     0x10030a93
10030a86:	mov    eax,DWORD PTR [esp+0x10]
10030a8a:	push   eax
10030a8b:	call   0x10041d92
10030a90:	add    esp,0x4
10030a93:	mov    eax,esi
10030a95:	mov    ecx,DWORD PTR [esp+0x28]
10030a99:	mov    DWORD PTR fs:0x0,ecx
10030aa0:	pop    ecx
10030aa1:	pop    ebx
10030aa2:	add    esp,0x2c
10030aa5:	ret    
10030aa6:	int3   
10030aa7:	int3   
10030aa8:	int3   
10030aa9:	int3   
10030aaa:	int3   
10030aab:	int3   
10030aac:	int3   
10030aad:	int3   
10030aae:	int3   
10030aaf:	int3   
10030ab0:	push   0xffffffff
10030ab2:	push   0x10062ba0
10030ab7:	mov    eax,fs:0x0
10030abd:	push   eax
10030abe:	sub    esp,0x18
10030ac1:	push   ebx
10030ac2:	push   ebp
10030ac3:	push   esi
10030ac4:	push   edi
10030ac5:	mov    eax,ds:0x1007d030
10030aca:	xor    eax,esp
10030acc:	push   eax
10030acd:	lea    eax,[esp+0x2c]
10030ad1:	mov    fs:0x0,eax
10030ad7:	mov    ebp,DWORD PTR [esp+0x3c]
10030adb:	xor    ebx,ebx
10030add:	mov    DWORD PTR [esp+0x20],ebx
10030ae1:	mov    DWORD PTR [esp+0x24],ebx
10030ae5:	mov    eax,DWORD PTR [esp+0x4c]
10030ae9:	push   eax
10030aea:	lea    ecx,[esp+0x1c]
10030aee:	push   ecx
10030aef:	mov    ecx,DWORD PTR [esp+0x48]
10030af3:	push   edx
10030af4:	mov    edx,DWORD PTR [esp+0x50]
10030af8:	lea    eax,[esp+0x28]
10030afc:	mov    DWORD PTR [esp+0x40],ebx
10030b00:	push   eax
10030b01:	mov    DWORD PTR [esp+0x28],ebx
10030b05:	call   0x100317b0
10030b0a:	mov    ecx,DWORD PTR [eax]
10030b0c:	mov    esi,ecx
10030b0e:	mov    DWORD PTR [eax],ebx
10030b10:	mov    DWORD PTR [esp+0x38],esi
10030b14:	mov    BYTE PTR [esp+0x44],0x1
10030b19:	mov    edx,DWORD PTR [esp+0x2c]
10030b1d:	push   edx
10030b1e:	call   0x10041d92
10030b23:	add    esp,0x14
10030b26:	cmp    esi,ebx
10030b28:	jne    0x10030b30
10030b2a:	mov    DWORD PTR [ebp+0x0],ebx
10030b2d:	push   ebx
10030b2e:	jmp    0x10030b9d
10030b30:	mov    ecx,DWORD PTR [esp+0x18]
10030b34:	mov    eax,DWORD PTR [esi+ecx*1-0x4]
10030b38:	sub    eax,0x4
10030b3b:	lea    edx,[eax+0x4]
10030b3e:	cmp    edx,ecx
10030b40:	jbe    0x10030b47
10030b42:	mov    DWORD PTR [ebp+0x0],ebx
10030b45:	jmp    0x10030b9c
10030b47:	mov    edx,DWORD PTR ds:0x1007fd9c
10030b4d:	push   ebx
10030b4e:	push   edx
10030b4f:	push   eax
10030b50:	mov    edx,esi
10030b52:	sub    edx,eax
10030b54:	lea    eax,[edx+ecx*1-0x4]
10030b58:	push   eax
10030b59:	lea    ecx,[esp+0x30]
10030b5d:	push   ecx
10030b5e:	mov    ecx,DWORD PTR [esp+0x5c]
10030b62:	lea    edx,[esp+0x2b]
10030b66:	call   0x10038630
10030b6b:	mov    edi,DWORD PTR [eax]
10030b6d:	add    esp,0x14
10030b70:	cmp    edi,ebx
10030b72:	mov    DWORD PTR [eax],ebx
10030b74:	je     0x10030b7f
10030b76:	push   ebx
10030b77:	call   0x10041d92
10030b7c:	add    esp,0x4
10030b7f:	mov    edx,DWORD PTR [esp+0x20]
10030b83:	push   edx
10030b84:	call   0x10041d92
10030b89:	add    esp,0x4
10030b8c:	cmp    BYTE PTR [esp+0x17],bl
10030b90:	je     0x10030b99
10030b92:	mov    BYTE PTR ds:0x1007fd28,0x1
10030b99:	mov    DWORD PTR [ebp+0x0],edi
10030b9c:	push   esi
10030b9d:	call   0x10041d92
10030ba2:	add    esp,0x4
10030ba5:	push   ebx
10030ba6:	call   0x10041d92
10030bab:	add    esp,0x4
10030bae:	mov    eax,ebp
10030bb0:	mov    ecx,DWORD PTR [esp+0x2c]
10030bb4:	mov    DWORD PTR fs:0x0,ecx
10030bbb:	pop    ecx
10030bbc:	pop    edi
10030bbd:	pop    esi
10030bbe:	pop    ebp
10030bbf:	pop    ebx
10030bc0:	add    esp,0x24
10030bc3:	ret    
10030bc4:	int3   
10030bc5:	int3   
10030bc6:	int3   
10030bc7:	int3   
10030bc8:	int3   
10030bc9:	int3   
10030bca:	int3   
10030bcb:	int3   
10030bcc:	int3   
10030bcd:	int3   
10030bce:	int3   
10030bcf:	int3   
10030bd0:	push   0xffffffff
10030bd2:	push   0x10061f70
10030bd7:	mov    eax,fs:0x0
10030bdd:	push   eax
10030bde:	push   esi
10030bdf:	push   edi
10030be0:	mov    eax,ds:0x1007d030
10030be5:	xor    eax,esp
10030be7:	push   eax
10030be8:	lea    eax,[esp+0xc]
10030bec:	mov    fs:0x0,eax
10030bf2:	mov    eax,DWORD PTR [esp+0x1c]
10030bf6:	mov    edi,ecx
10030bf8:	mov    DWORD PTR [esp+0x1c],0x0
10030c00:	cmp    DWORD PTR [eax+0x18],0x10
10030c04:	jb     0x10030c0b
10030c06:	mov    esi,DWORD PTR [eax+0x4]
10030c09:	jmp    0x10030c0e
10030c0b:	lea    esi,[eax+0x4]
10030c0e:	mov    eax,ds:0x1007fa54
10030c13:	mov    edx,DWORD PTR [eax+0xc]
10030c16:	mov    ecx,0x1007fa54
10030c1b:	call   edx
10030c1d:	add    eax,0x10
10030c20:	mov    DWORD PTR [esp+0x1c],eax
10030c24:	test   esi,esi
10030c26:	mov    DWORD PTR [esp+0x14],0x0
10030c2e:	je     0x10030c56
10030c30:	test   esi,0xffff0000
10030c36:	jne    0x10030c56
10030c38:	movzx  esi,si
10030c3b:	push   esi
10030c3c:	call   0x10002019
10030c41:	add    esp,0x4
10030c44:	test   eax,eax
10030c46:	je     0x10030c61
10030c48:	push   esi
10030c49:	push   eax
10030c4a:	lea    eax,[esp+0x24]
10030c4e:	push   eax
10030c4f:	call   0x100021e1
10030c54:	jmp    0x10030c61
10030c56:	push   esi
10030c57:	lea    ecx,[esp+0x20]
10030c5b:	push   ecx
10030c5c:	call   0x100020c7
10030c61:	lea    ecx,[esp+0x1c]
10030c65:	mov    DWORD PTR [esp+0x14],0x1
10030c6d:	call   0x100302e0
10030c72:	mov    DWORD PTR [esp+0x14],0xffffffff
10030c7a:	mov    eax,DWORD PTR [esp+0x1c]
10030c7e:	add    eax,0xfffffff0
10030c81:	lea    edx,[eax+0xc]
10030c84:	or     ecx,0xffffffff
10030c87:	lock xadd DWORD PTR [edx],ecx
10030c8b:	dec    ecx
10030c8c:	test   ecx,ecx
10030c8e:	jg     0x10030c9a
10030c90:	mov    ecx,DWORD PTR [eax]
10030c92:	mov    edx,DWORD PTR [ecx]
10030c94:	push   eax
10030c95:	mov    eax,DWORD PTR [edx+0x4]
10030c98:	call   eax
10030c9a:	mov    eax,edi
10030c9c:	mov    ecx,DWORD PTR [esp+0xc]
10030ca0:	mov    DWORD PTR fs:0x0,ecx
10030ca7:	pop    ecx
10030ca8:	pop    edi
10030ca9:	pop    esi
10030caa:	add    esp,0xc
10030cad:	ret    
10030cae:	int3   
10030caf:	int3   
10030cb0:	push   ebp
10030cb1:	mov    ebp,esp
10030cb3:	push   0xffffffff
10030cb5:	push   0x10062518
10030cba:	mov    eax,fs:0x0
10030cc0:	push   eax
10030cc1:	sub    esp,0xd0
10030cc7:	mov    eax,ds:0x1007d030
10030ccc:	xor    eax,ebp
10030cce:	mov    DWORD PTR [ebp-0x18],eax
10030cd1:	push   ebx
10030cd2:	push   esi
10030cd3:	push   edi
10030cd4:	push   eax
10030cd5:	lea    eax,[ebp-0xc]
10030cd8:	mov    fs:0x0,eax
10030cde:	mov    DWORD PTR [ebp-0x10],esp
10030ce1:	mov    eax,DWORD PTR [ebp+0x8]
10030ce4:	xor    ebx,ebx
10030ce6:	mov    DWORD PTR [ebp-0xb8],ebx
10030cec:	mov    DWORD PTR [ebp-0x4],ebx
10030cef:	mov    edi,0xf
10030cf4:	mov    DWORD PTR [ebp-0xbc],eax
10030cfa:	mov    DWORD PTR [ebp-0x8c],edi
10030d00:	mov    DWORD PTR [ebp-0x90],ebx
10030d06:	mov    BYTE PTR [ebp-0xa0],bl
10030d0c:	mov    DWORD PTR [ebp-0x70],edi
10030d0f:	mov    DWORD PTR [ebp-0x74],ebx
10030d12:	mov    BYTE PTR [ebp-0x84],bl
10030d18:	push   0x1
10030d1a:	lea    ecx,[ebp-0xb8]
10030d20:	push   ecx
10030d21:	mov    BYTE PTR [ebp-0x4],0x2
10030d25:	call   0x100346c0
10030d2a:	mov    DWORD PTR [ebp-0x1c],edi
10030d2d:	mov    DWORD PTR [ebp-0x20],ebx
10030d30:	mov    BYTE PTR [ebp-0x30],bl
10030d33:	mov    DWORD PTR [ebp-0x38],edi
10030d36:	mov    DWORD PTR [ebp-0x3c],ebx
10030d39:	mov    BYTE PTR [ebp-0x4c],bl
10030d3c:	lea    edx,[ebp-0x88]
10030d42:	push   edx
10030d43:	lea    eax,[ebp-0xa4]
10030d49:	push   eax
10030d4a:	lea    ecx,[ebp-0xb4]
10030d50:	push   ecx
10030d51:	lea    edx,[ebp-0xb8]
10030d57:	push   edx
10030d58:	lea    edx,[ebp-0x50]
10030d5b:	lea    ecx,[ebp-0x34]
10030d5e:	mov    BYTE PTR [ebp-0x4],0x5
10030d62:	call   0x10036230
10030d67:	mov    esi,0x10
10030d6c:	cmp    DWORD PTR [ebp-0x38],esi
10030d6f:	jb     0x10030d7d
10030d71:	mov    eax,DWORD PTR [ebp-0x4c]
10030d74:	push   eax
10030d75:	call   0x10041d92
10030d7a:	add    esp,0x4
10030d7d:	cmp    DWORD PTR [ebp-0x1c],esi
10030d80:	mov    DWORD PTR [ebp-0x38],edi
10030d83:	mov    DWORD PTR [ebp-0x3c],ebx
10030d86:	mov    BYTE PTR [ebp-0x4c],bl
10030d89:	jb     0x10030d97
10030d8b:	mov    ecx,DWORD PTR [ebp-0x30]
10030d8e:	push   ecx
10030d8f:	call   0x10041d92
10030d94:	add    esp,0x4
10030d97:	mov    BYTE PTR [ebp-0x4],0x2
10030d9b:	mov    edx,DWORD PTR [ebp-0xb8]
10030da1:	push   edx
10030da2:	mov    DWORD PTR [ebp-0x1c],edi
10030da5:	mov    DWORD PTR [ebp-0x20],ebx
10030da8:	mov    BYTE PTR [ebp-0x30],bl
10030dab:	call   DWORD PTR ds:0x10065070
10030db1:	push   0x36f6da50
10030db6:	push   0x10071d64
10030dbb:	call   0x10003d63
10030dc0:	add    esp,0x8
10030dc3:	push   0x57667900
10030dc8:	push   eax
10030dc9:	call   0x10003d63
10030dce:	add    esp,0x8
10030dd1:	push   0x61f13aa2
10030dd6:	push   eax
10030dd7:	call   0x10003d63
10030ddc:	add    esp,0x8
10030ddf:	push   0x3c43626
10030de4:	push   eax
10030de5:	call   0x10003d63
10030dea:	add    esp,0x8
10030ded:	push   eax
10030dee:	push   0x2
10030df0:	push   0x10071d98
10030df5:	call   0x10003d75
10030dfa:	mov    esi,eax
10030dfc:	add    esp,0xc
10030dff:	push   esi
10030e00:	mov    DWORD PTR [ebp-0x54],edi
10030e03:	mov    DWORD PTR [ebp-0x58],ebx
10030e06:	mov    BYTE PTR [ebp-0x68],bl
10030e09:	call   0x10041f10
10030e0e:	add    esp,0x4
10030e11:	push   eax
10030e12:	push   esi
10030e13:	lea    ecx,[ebp-0x6c]
10030e16:	call   0x10001344
10030e1b:	lea    ebx,[ebp-0x50]
10030e1e:	mov    BYTE PTR [ebp-0x4],0x6
10030e22:	call   0x100307f0
10030e27:	push   eax
10030e28:	lea    ecx,[ebp-0x34]
10030e2b:	mov    BYTE PTR [ebp-0x4],0x7
10030e2f:	call   0x10030bd0
10030e34:	add    esp,0x4
10030e37:	push   0xffffffff
10030e39:	xor    ebx,ebx
10030e3b:	push   ebx
10030e3c:	lea    esi,[ebp-0x6c]
10030e3f:	mov    BYTE PTR [ebp-0x4],0x8
10030e43:	call   0x10005fb0
10030e48:	mov    esi,0x10
10030e4d:	cmp    DWORD PTR [ebp-0x1c],esi
10030e50:	jb     0x10030e5e
10030e52:	mov    eax,DWORD PTR [ebp-0x30]
10030e55:	push   eax
10030e56:	call   0x10041d92
10030e5b:	add    esp,0x4
10030e5e:	mov    BYTE PTR [ebp-0x4],0x6
10030e62:	cmp    DWORD PTR [ebp-0x38],esi
10030e65:	mov    DWORD PTR [ebp-0x1c],0xf
10030e6c:	mov    DWORD PTR [ebp-0x20],ebx
10030e6f:	mov    BYTE PTR [ebp-0x30],bl
10030e72:	jb     0x10030e80
10030e74:	mov    ecx,DWORD PTR [ebp-0x4c]
10030e77:	push   ecx
10030e78:	call   0x10041d92
10030e7d:	add    esp,0x4
10030e80:	lea    edx,[ebp-0xb4]
10030e86:	push   edx
10030e87:	lea    esi,[ebp-0xd8]
10030e8d:	call   0x100308c0
10030e92:	add    esp,0x4
10030e95:	mov    edi,eax
10030e97:	push   0x41fb457c
10030e9c:	push   0x10071d9c
10030ea1:	mov    BYTE PTR [ebp-0x4],0x9
10030ea5:	call   0x10003d63
10030eaa:	add    esp,0x8
10030ead:	push   0x35beb346
10030eb2:	push   eax
10030eb3:	call   0x10003d63
10030eb8:	add    esp,0x8
10030ebb:	push   eax
10030ebc:	push   0x3
10030ebe:	push   0x10071ddc
10030ec3:	call   0x10003d75
10030ec8:	mov    esi,eax
10030eca:	add    esp,0xc
10030ecd:	push   esi
10030ece:	mov    DWORD PTR [ebp-0x38],0xf
10030ed5:	mov    DWORD PTR [ebp-0x3c],ebx
10030ed8:	mov    BYTE PTR [ebp-0x4c],bl
10030edb:	call   0x10041f10
10030ee0:	add    esp,0x4
10030ee3:	push   eax
10030ee4:	push   esi
10030ee5:	lea    ecx,[ebp-0x50]
10030ee8:	call   0x10001344
10030eed:	push   edi
10030eee:	lea    eax,[ebp-0x50]
10030ef1:	push   eax
10030ef2:	lea    ecx,[ebp-0x34]
10030ef5:	push   ecx
10030ef6:	mov    BYTE PTR [ebp-0x4],0xa
10030efa:	call   0x1000a3d1
10030eff:	add    esp,0xc
10030f02:	push   0xffffffff
10030f04:	push   ebx
10030f05:	lea    esi,[ebp-0x6c]
10030f08:	mov    BYTE PTR [ebp-0x4],0xb
10030f0c:	call   0x10005fb0
10030f11:	mov    edi,0x10
10030f16:	cmp    DWORD PTR [ebp-0x1c],edi
10030f19:	jb     0x10030f27
10030f1b:	mov    edx,DWORD PTR [ebp-0x30]
10030f1e:	push   edx
10030f1f:	call   0x10041d92
10030f24:	add    esp,0x4
10030f27:	cmp    DWORD PTR [ebp-0x38],edi
10030f2a:	mov    esi,0xf
10030f2f:	mov    DWORD PTR [ebp-0x1c],esi
10030f32:	mov    DWORD PTR [ebp-0x20],ebx
10030f35:	mov    BYTE PTR [ebp-0x30],bl
10030f38:	jb     0x10030f46
10030f3a:	mov    eax,DWORD PTR [ebp-0x4c]
10030f3d:	push   eax
10030f3e:	call   0x10041d92
10030f43:	add    esp,0x4
10030f46:	mov    BYTE PTR [ebp-0x4],0x6
10030f4a:	cmp    DWORD PTR [ebp-0xc0],edi
10030f50:	mov    DWORD PTR [ebp-0x38],esi
10030f53:	mov    DWORD PTR [ebp-0x3c],ebx
10030f56:	mov    BYTE PTR [ebp-0x4c],bl
10030f59:	jb     0x10030f6a
10030f5b:	mov    ecx,DWORD PTR [ebp-0xd4]
10030f61:	push   ecx
10030f62:	call   0x10041d92
10030f67:	add    esp,0x4
10030f6a:	lea    edx,[ebp-0xa4]
10030f70:	push   edx
10030f71:	lea    ecx,[ebp-0xd8]
10030f77:	call   0x10030bd0
10030f7c:	add    esp,0x4
10030f7f:	mov    esi,eax
10030f81:	push   0x10071de0
10030f86:	push   0x3
10030f88:	push   0x10071e04
10030f8d:	mov    BYTE PTR [ebp-0x4],0xc
10030f91:	call   0x10003d75
10030f96:	add    esp,0xc
10030f99:	push   esi
10030f9a:	push   eax
10030f9b:	lea    eax,[ebp-0x34]
10030f9e:	push   eax
10030f9f:	call   0x100285d8
10030fa4:	add    esp,0xc
10030fa7:	push   0xffffffff
10030fa9:	push   ebx
10030faa:	lea    esi,[ebp-0x6c]
10030fad:	mov    BYTE PTR [ebp-0x4],0xd
10030fb1:	call   0x10005fb0
10030fb6:	cmp    DWORD PTR [ebp-0x1c],edi
10030fb9:	jb     0x10030fc7
10030fbb:	mov    ecx,DWORD PTR [ebp-0x30]
10030fbe:	push   ecx
10030fbf:	call   0x10041d92
10030fc4:	add    esp,0x4
10030fc7:	mov    BYTE PTR [ebp-0x4],0x6
10030fcb:	cmp    DWORD PTR [ebp-0xc0],edi
10030fd1:	mov    DWORD PTR [ebp-0x1c],0xf
10030fd8:	mov    DWORD PTR [ebp-0x20],ebx
10030fdb:	mov    BYTE PTR [ebp-0x30],bl
10030fde:	jb     0x10030fef
10030fe0:	mov    edx,DWORD PTR [ebp-0xd4]
10030fe6:	push   edx
10030fe7:	call   0x10041d92
10030fec:	add    esp,0x4
10030fef:	lea    ebx,[ebp-0xd8]
10030ff5:	call   0x1002f500
10030ffa:	push   eax
10030ffb:	lea    ecx,[ebp-0x50]
10030ffe:	mov    BYTE PTR [ebp-0x4],0xe
10031002:	call   0x10030bd0
10031007:	add    esp,0x4
1003100a:	mov    esi,eax
1003100c:	push   0x10071e08
10031011:	push   0x4
10031013:	push   0x10071e40
10031018:	mov    BYTE PTR [ebp-0x4],0xf
1003101c:	call   0x10003d75
10031021:	add    esp,0xc
10031024:	push   esi
10031025:	push   eax
10031026:	lea    eax,[ebp-0x34]
10031029:	push   eax
1003102a:	call   0x100285d8
1003102f:	add    esp,0xc
10031032:	push   0xffffffff
10031034:	xor    ebx,ebx
10031036:	push   ebx
10031037:	lea    esi,[ebp-0x6c]
1003103a:	mov    BYTE PTR [ebp-0x4],0x10
1003103e:	call   0x10005fb0
10031043:	mov    esi,0x10
10031048:	cmp    DWORD PTR [ebp-0x1c],esi
1003104b:	jb     0x10031059
1003104d:	mov    ecx,DWORD PTR [ebp-0x30]
10031050:	push   ecx
10031051:	call   0x10041d92
10031056:	add    esp,0x4
10031059:	cmp    DWORD PTR [ebp-0x38],esi
1003105c:	mov    edi,0xf
10031061:	mov    DWORD PTR [ebp-0x1c],edi
10031064:	mov    DWORD PTR [ebp-0x20],ebx
10031067:	mov    BYTE PTR [ebp-0x30],bl
1003106a:	jb     0x10031078
1003106c:	mov    edx,DWORD PTR [ebp-0x4c]
1003106f:	push   edx
10031070:	call   0x10041d92
10031075:	add    esp,0x4
10031078:	mov    BYTE PTR [ebp-0x4],0x6
1003107c:	cmp    DWORD PTR [ebp-0xc0],esi
10031082:	mov    DWORD PTR [ebp-0x38],edi
10031085:	mov    DWORD PTR [ebp-0x3c],ebx
10031088:	mov    BYTE PTR [ebp-0x4c],bl
1003108b:	jb     0x1003109c
1003108d:	mov    eax,DWORD PTR [ebp-0xd4]
10031093:	push   eax
10031094:	call   0x10041d92
10031099:	add    esp,0x4
1003109c:	lea    ecx,[ebp-0x88]
100310a2:	push   ecx
100310a3:	lea    ecx,[ebp-0xd8]
100310a9:	call   0x10030bd0
100310ae:	add    esp,0x4
100310b1:	mov    esi,eax
100310b3:	push   0x4b764ff0
100310b8:	push   0x10071e48
100310bd:	mov    BYTE PTR [ebp-0x4],0x11
100310c1:	call   0x10003d63
100310c6:	add    esp,0x8
100310c9:	push   0x252bb1d8
100310ce:	push   eax
100310cf:	call   0x10003d63
100310d4:	add    esp,0x8
100310d7:	push   0x63014d76
100310dc:	push   eax
100310dd:	call   0x10003d63
100310e2:	add    esp,0x8
100310e5:	push   eax
100310e6:	push   0x3
100310e8:	push   0x10071e74
100310ed:	call   0x10003d75
100310f2:	add    esp,0xc
100310f5:	push   esi
100310f6:	push   eax
100310f7:	lea    edx,[ebp-0x34]
100310fa:	push   edx
100310fb:	call   0x100285d8
10031100:	add    esp,0xc
10031103:	push   0xffffffff
10031105:	push   ebx
10031106:	lea    esi,[ebp-0x6c]
10031109:	mov    BYTE PTR [ebp-0x4],0x12
1003110d:	call   0x10005fb0
10031112:	mov    esi,0x10
10031117:	cmp    DWORD PTR [ebp-0x1c],esi
1003111a:	jb     0x10031128
1003111c:	mov    eax,DWORD PTR [ebp-0x30]
1003111f:	push   eax
10031120:	call   0x10041d92
10031125:	add    esp,0x4
10031128:	mov    BYTE PTR [ebp-0x4],0x6
1003112c:	cmp    DWORD PTR [ebp-0xc0],esi
10031132:	mov    DWORD PTR [ebp-0x1c],edi
10031135:	mov    DWORD PTR [ebp-0x20],ebx
10031138:	mov    BYTE PTR [ebp-0x30],bl
1003113b:	jb     0x1003114c
1003113d:	mov    ecx,DWORD PTR [ebp-0xd4]
10031143:	push   ecx
10031144:	call   0x10041d92
10031149:	add    esp,0x4
1003114c:	lea    edx,[ebp-0xd8]
10031152:	push   edx
10031153:	call   0x100376b0
10031158:	add    esp,0x4
1003115b:	mov    esi,eax
1003115d:	push   0x665c4760
10031162:	push   0x10071e78
10031167:	mov    BYTE PTR [ebp-0x4],0x13
1003116b:	call   0x10003d63
10031170:	add    esp,0x8
10031173:	push   0x84bf14c
10031178:	push   eax
10031179:	call   0x10003d63
1003117e:	add    esp,0x8
10031181:	push   0x381c11fe
10031186:	push   eax
10031187:	call   0x10003d63
1003118c:	add    esp,0x8
1003118f:	push   eax
10031190:	push   0x5
10031192:	push   0x10071eb4
10031197:	call   0x10003d75
1003119c:	add    esp,0xc
1003119f:	push   esi
100311a0:	push   eax
100311a1:	lea    eax,[ebp-0x34]
100311a4:	push   eax
100311a5:	call   0x100285d8
100311aa:	add    esp,0xc
100311ad:	push   0xffffffff
100311af:	push   ebx
100311b0:	lea    esi,[ebp-0x6c]
100311b3:	mov    BYTE PTR [ebp-0x4],0x14
100311b7:	call   0x10005fb0
100311bc:	mov    esi,0x10
100311c1:	cmp    DWORD PTR [ebp-0x1c],esi
100311c4:	jb     0x100311d2
100311c6:	mov    ecx,DWORD PTR [ebp-0x30]
100311c9:	push   ecx
100311ca:	call   0x10041d92
100311cf:	add    esp,0x4
100311d2:	mov    BYTE PTR [ebp-0x4],0x6
100311d6:	cmp    DWORD PTR [ebp-0xc0],esi
100311dc:	mov    DWORD PTR [ebp-0x1c],edi
100311df:	mov    DWORD PTR [ebp-0x20],ebx
100311e2:	mov    BYTE PTR [ebp-0x30],bl
100311e5:	jb     0x100311f6
100311e7:	mov    edx,DWORD PTR [ebp-0xd4]
100311ed:	push   edx
100311ee:	call   0x10041d92
100311f3:	add    esp,0x4
100311f6:	mov    esi,DWORD PTR [ebp-0xbc]
100311fc:	push   0xffffffff
100311fe:	push   ebx
100311ff:	lea    eax,[ebp-0x6c]
10031202:	mov    DWORD PTR [esi+0x18],edi
10031205:	mov    DWORD PTR [esi+0x14],ebx
10031208:	push   eax
10031209:	mov    ecx,esi
1003120b:	mov    BYTE PTR [esi+0x4],bl
1003120e:	call   0x1000124a
10031213:	cmp    DWORD PTR [ebp-0x54],0x10
10031217:	jb     0x10031225
10031219:	mov    ecx,DWORD PTR [ebp-0x68]
1003121c:	push   ecx
1003121d:	call   0x10041d92
10031222:	add    esp,0x4
10031225:	cmp    DWORD PTR [ebp-0x70],0x10
10031229:	mov    DWORD PTR [ebp-0x54],edi
1003122c:	mov    DWORD PTR [ebp-0x58],ebx
1003122f:	mov    BYTE PTR [ebp-0x68],bl
10031232:	jb     0x10031243
10031234:	mov    edx,DWORD PTR [ebp-0x84]
1003123a:	push   edx
1003123b:	call   0x10041d92
10031240:	add    esp,0x4
10031243:	cmp    DWORD PTR [ebp-0x8c],0x10
1003124a:	mov    DWORD PTR [ebp-0x70],edi
1003124d:	mov    DWORD PTR [ebp-0x74],ebx
10031250:	mov    BYTE PTR [ebp-0x84],bl
10031256:	jb     0x10031281
10031258:	mov    eax,DWORD PTR [ebp-0xa0]
1003125e:	push   eax
1003125f:	call   0x10041d92
10031264:	add    esp,0x4
10031267:	jmp    0x10031281
10031269:	mov    eax,0x1003126f
1003126e:	ret    
1003126f:	mov    esi,DWORD PTR [ebp-0xbc]
10031275:	push   0x1006bb18
1003127a:	mov    ecx,esi
1003127c:	call   0x100011d6
10031281:	mov    eax,esi
10031283:	mov    ecx,DWORD PTR [ebp-0xc]
10031286:	mov    DWORD PTR fs:0x0,ecx
1003128d:	pop    ecx
1003128e:	pop    edi
1003128f:	pop    esi
10031290:	pop    ebx
10031291:	mov    ecx,DWORD PTR [ebp-0x18]
10031294:	xor    ecx,ebp
10031296:	call   0x10041d97
1003129b:	mov    esp,ebp
1003129d:	pop    ebp
1003129e:	ret    
1003129f:	int3   
100312a0:	push   0xffffffff
100312a2:	push   0x10060711
100312a7:	mov    eax,fs:0x0
100312ad:	push   eax
100312ae:	sub    esp,0x64
100312b1:	mov    eax,ds:0x1007d030
100312b6:	xor    eax,esp
100312b8:	mov    DWORD PTR [esp+0x60],eax
100312bc:	push   ebx
100312bd:	push   ebp
100312be:	push   esi
100312bf:	push   edi
100312c0:	mov    eax,ds:0x1007d030
100312c5:	xor    eax,esp
100312c7:	push   eax
100312c8:	lea    eax,[esp+0x78]
100312cc:	mov    fs:0x0,eax
100312d2:	xor    ebp,ebp
100312d4:	mov    DWORD PTR [esp+0x80],ebp
100312db:	mov    ebx,ecx
100312dd:	mov    DWORD PTR [esp+0x30],ebp
100312e1:	mov    edi,0xf
100312e6:	mov    DWORD PTR [ebx+0x18],edi
100312e9:	mov    DWORD PTR [ebx+0x14],ebp
100312ec:	push   0x1006bb18
100312f1:	mov    DWORD PTR [esp+0x2c],ebx
100312f5:	mov    esi,edx
100312f7:	mov    BYTE PTR [ebx+0x4],0x0
100312fb:	call   0x10041f10
10031300:	add    esp,0x4
10031303:	push   eax
10031304:	push   0x1006bb18
10031309:	mov    ecx,ebx
1003130b:	call   0x10001344
10031310:	mov    eax,0x1
10031315:	mov    DWORD PTR [esp+0x30],eax
10031319:	mov    DWORD PTR [esp+0x1c],ebp
1003131d:	mov    DWORD PTR [esp+0x20],ebp
10031321:	mov    DWORD PTR [esp+0x24],ebp
10031325:	push   0xffffffff
10031327:	mov    DWORD PTR [esp+0x84],eax
1003132e:	push   ebp
1003132f:	push   esi
10031330:	lea    ecx,[esp+0x48]
10031334:	mov    DWORD PTR [esp+0x60],edi
10031338:	mov    DWORD PTR [esp+0x5c],ebp
1003133c:	mov    BYTE PTR [esp+0x4c],0x0
10031341:	call   0x1000124a
10031346:	mov    BYTE PTR [esp+0x80],0x2
1003134e:	mov    eax,DWORD PTR [esp+0x50]
10031352:	cmp    eax,ebp
10031354:	jbe    0x10031489
1003135a:	lea    ebx,[ebx+0x0]
10031360:	cmp    eax,0xfa0
10031365:	mov    DWORD PTR [esp+0x14],eax
10031369:	jbe    0x10031373
1003136b:	mov    DWORD PTR [esp+0x14],0xfa0
10031373:	mov    eax,DWORD PTR [esp+0x14]
10031377:	push   eax
10031378:	push   ebp
10031379:	lea    ecx,[esp+0x44]
1003137d:	push   ecx
1003137e:	lea    eax,[esp+0x64]
10031382:	call   0x1000c42b
10031387:	mov    ebx,eax
10031389:	mov    BYTE PTR [esp+0x80],0x3
10031391:	mov    edi,DWORD PTR [esp+0x1c]
10031395:	cmp    edi,ebp
10031397:	mov    ebp,DWORD PTR [esp+0x20]
1003139b:	je     0x100313f7
1003139d:	mov    esi,DWORD PTR [esp+0x24]
100313a1:	mov    ecx,ebp
100313a3:	sub    ecx,edi
100313a5:	mov    eax,0x92492493
100313aa:	imul   ecx
100313ac:	add    edx,ecx
100313ae:	sar    edx,0x4
100313b1:	mov    ecx,edx
100313b3:	shr    ecx,0x1f
100313b6:	add    ecx,edx
100313b8:	sub    esi,edi
100313ba:	mov    eax,0x92492493
100313bf:	imul   esi
100313c1:	add    edx,esi
100313c3:	sar    edx,0x4
100313c6:	mov    eax,edx
100313c8:	shr    eax,0x1f
100313cb:	add    eax,edx
100313cd:	cmp    ecx,eax
100313cf:	jae    0x100313f7
100313d1:	mov    eax,DWORD PTR [esp+0x28]
100313d5:	mov    BYTE PTR [esp+0x2c],0x0
100313da:	mov    edx,DWORD PTR [esp+0x2c]
100313de:	push   edx
100313df:	push   eax
100313e0:	push   ebx
100313e1:	push   0x1
100313e3:	push   ebp
100313e4:	mov    esi,ebp
100313e6:	call   0x1000fc13
100313eb:	add    esp,0x14
100313ee:	add    esi,0x1c
100313f1:	mov    DWORD PTR [esp+0x20],esi
100313f5:	jmp    0x10031411
100313f7:	cmp    edi,ebp
100313f9:	jbe    0x10031400
100313fb:	call   0x100422b0
10031400:	push   ebp
10031401:	lea    eax,[esp+0x1c]
10031405:	push   eax
10031406:	push   ebx
10031407:	lea    ecx,[esp+0x40]
1003140b:	push   ecx
1003140c:	call   0x1000f7ed
10031411:	mov    esi,0x10
10031416:	mov    BYTE PTR [esp+0x80],0x2
1003141e:	cmp    DWORD PTR [esp+0x70],esi
10031422:	jb     0x10031431
10031424:	mov    edx,DWORD PTR [esp+0x5c]
10031428:	push   edx
10031429:	call   0x10041d92
1003142e:	add    esp,0x4
10031431:	mov    eax,DWORD PTR [esp+0x14]
10031435:	push   0xffffffff
10031437:	push   eax
10031438:	lea    ecx,[esp+0x44]
1003143c:	push   ecx
1003143d:	lea    eax,[esp+0x64]
10031441:	call   0x1000c42b
10031446:	push   0xffffffff
10031448:	push   0x0
1003144a:	push   eax
1003144b:	lea    ecx,[esp+0x48]
1003144f:	mov    BYTE PTR [esp+0x8c],0x4
10031457:	call   0x1000124a
1003145c:	mov    BYTE PTR [esp+0x80],0x2
10031464:	cmp    DWORD PTR [esp+0x70],esi
10031468:	jb     0x10031477
1003146a:	mov    edx,DWORD PTR [esp+0x5c]
1003146e:	push   edx
1003146f:	call   0x10041d92
10031474:	add    esp,0x4
10031477:	mov    eax,DWORD PTR [esp+0x50]
1003147b:	xor    ebp,ebp
1003147d:	test   eax,eax
1003147f:	ja     0x10031360
10031485:	mov    ebx,DWORD PTR [esp+0x28]
10031489:	mov    BYTE PTR [esp+0x80],0x1
10031491:	cmp    DWORD PTR [esp+0x54],0x10
10031496:	jb     0x100314a5
10031498:	mov    eax,DWORD PTR [esp+0x40]
1003149c:	push   eax
1003149d:	call   0x10041d92
100314a2:	add    esp,0x4
100314a5:	push   0x678165c4
100314aa:	push   0x10071ebc
100314af:	call   0x10003d63
100314b4:	push   0x70c31348
100314b9:	push   eax
100314ba:	call   0x10003d63
100314bf:	push   0x48eec37a
100314c4:	push   eax
100314c5:	call   0x10003d63
100314ca:	push   eax
100314cb:	push   0x8
100314cd:	push   0x10071eec
100314d2:	call   0x10003d75
100314d7:	mov    esi,eax
100314d9:	add    esp,0x24
100314dc:	push   esi
100314dd:	call   0x10041f10
100314e2:	add    esp,0x4
100314e5:	push   eax
100314e6:	push   esi
100314e7:	mov    eax,ebx
100314e9:	call   0x10005f16
100314ee:	xor    edi,edi
100314f0:	mov    DWORD PTR [esp+0x14],ebp
100314f4:	mov    eax,DWORD PTR [esp+0x1c]
100314f8:	cmp    eax,ebp
100314fa:	jne    0x10031500
100314fc:	xor    eax,eax
100314fe:	jmp    0x10031519
10031500:	mov    ecx,DWORD PTR [esp+0x20]
10031504:	sub    ecx,eax
10031506:	mov    eax,0x92492493
1003150b:	imul   ecx
1003150d:	add    edx,ecx
1003150f:	sar    edx,0x4
10031512:	mov    eax,edx
10031514:	shr    eax,0x1f
10031517:	add    eax,edx
10031519:	cmp    edi,eax
1003151b:	je     0x1003172a
10031521:	push   0x10071ef8
10031526:	mov    DWORD PTR [esp+0x58],0xf
1003152e:	mov    DWORD PTR [esp+0x54],ebp
10031532:	mov    BYTE PTR [esp+0x44],0x0
10031537:	call   0x10041f10
1003153c:	mov    ecx,DWORD PTR [esp+0x44]
10031540:	mov    esi,eax
10031542:	mov    eax,DWORD PTR [esp+0x58]
10031546:	add    esp,0x4
10031549:	cmp    eax,0x10
1003154c:	mov    edx,ecx
1003154e:	jae    0x10031554
10031550:	lea    edx,[esp+0x40]
10031554:	cmp    edx,0x10071ef8
1003155a:	ja     0x1003159b
1003155c:	cmp    eax,0x10
1003155f:	mov    edx,ecx
10031561:	jae    0x10031567
10031563:	lea    edx,[esp+0x40]
10031567:	mov    ebp,DWORD PTR [esp+0x50]
1003156b:	add    edx,ebp
1003156d:	cmp    edx,0x10071ef8
10031573:	jbe    0x10031599
10031575:	cmp    eax,0x10
10031578:	mov    eax,ecx
1003157a:	jae    0x10031580
1003157c:	lea    eax,[esp+0x40]
10031580:	push   esi
10031581:	mov    ecx,0x10071ef8
10031586:	sub    ecx,eax
10031588:	push   ecx
10031589:	lea    edx,[esp+0x44]
1003158d:	push   edx
1003158e:	mov    ecx,edx
10031590:	call   0x1000124a
10031595:	xor    ebp,ebp
10031597:	jmp    0x10031600
10031599:	xor    ebp,ebp
1003159b:	cmp    esi,0xfffffffe
1003159e:	jbe    0x100315ad
100315a0:	call   0x1005600a
100315a5:	mov    eax,DWORD PTR [esp+0x54]
100315a9:	mov    ecx,DWORD PTR [esp+0x40]
100315ad:	cmp    eax,esi
100315af:	jae    0x1003170b
100315b5:	mov    eax,DWORD PTR [esp+0x50]
100315b9:	push   eax
100315ba:	push   esi
100315bb:	lea    ecx,[esp+0x44]
100315bf:	call   0x10001509
100315c4:	mov    eax,DWORD PTR [esp+0x54]
100315c8:	mov    ecx,DWORD PTR [esp+0x40]
100315cc:	cmp    esi,ebp
100315ce:	jbe    0x10031600
100315d0:	cmp    eax,0x10
100315d3:	jae    0x100315d9
100315d5:	lea    ecx,[esp+0x40]
100315d9:	push   esi
100315da:	push   0x10071ef8
100315df:	push   eax
100315e0:	push   ecx
100315e1:	call   0x100422c5
100315e6:	mov    eax,DWORD PTR [esp+0x50]
100315ea:	add    esp,0x10
100315ed:	cmp    DWORD PTR [esp+0x54],0x10
100315f2:	mov    DWORD PTR [esp+0x50],esi
100315f6:	jae    0x100315fc
100315f8:	lea    eax,[esp+0x40]
100315fc:	mov    BYTE PTR [eax+esi*1],0x0
10031600:	cmp    edi,ebp
10031602:	mov    BYTE PTR [esp+0x80],0x5
1003160a:	jbe    0x10031632
1003160c:	push   0xa
1003160e:	lea    ecx,[esp+0x5c]
10031612:	push   ecx
10031613:	push   edi
10031614:	call   0x10044846
10031619:	mov    esi,eax
1003161b:	add    esp,0xc
1003161e:	push   esi
1003161f:	call   0x10041f10
10031624:	add    esp,0x4
10031627:	push   eax
10031628:	push   esi
10031629:	lea    eax,[esp+0x44]
1003162d:	call   0x10005f16
10031632:	push   0x1006cd84
10031637:	call   0x10041f10
1003163c:	add    esp,0x4
1003163f:	push   eax
10031640:	push   0x1006cd84
10031645:	lea    eax,[esp+0x44]
10031649:	call   0x10005f16
1003164e:	mov    esi,DWORD PTR [esp+0x1c]
10031652:	cmp    esi,ebp
10031654:	je     0x10031673
10031656:	mov    ecx,DWORD PTR [esp+0x20]
1003165a:	sub    ecx,esi
1003165c:	mov    eax,0x92492493
10031661:	imul   ecx
10031663:	add    edx,ecx
10031665:	sar    edx,0x4
10031668:	mov    eax,edx
1003166a:	shr    eax,0x1f
1003166d:	add    eax,edx
1003166f:	cmp    edi,eax
10031671:	jb     0x1003167c
10031673:	call   0x100422b0
10031678:	mov    esi,DWORD PTR [esp+0x1c]
1003167c:	mov    edx,DWORD PTR [esp+0x14]
10031680:	push   0xffffffff
10031682:	lea    eax,[esi+edx*1]
10031685:	push   ebp
10031686:	lea    esi,[esp+0x44]
1003168a:	call   0x10005fb0
1003168f:	cmp    edi,ebp
10031691:	je     0x100316d4
10031693:	push   0x31cbcaba
10031698:	push   0x30fc142d
1003169d:	push   0x10071efc
100316a2:	call   0x10003d63
100316a7:	add    esp,0x8
100316aa:	push   eax
100316ab:	call   0x10003d63
100316b0:	push   eax
100316b1:	push   0x1
100316b3:	push   0x1006c554
100316b8:	call   0x10003d75
100316bd:	mov    esi,eax
100316bf:	add    esp,0x14
100316c2:	push   esi
100316c3:	call   0x10041f10
100316c8:	add    esp,0x4
100316cb:	push   eax
100316cc:	push   esi
100316cd:	mov    eax,ebx
100316cf:	call   0x10005f16
100316d4:	push   0xffffffff
100316d6:	push   ebp
100316d7:	lea    eax,[esp+0x44]
100316db:	mov    esi,ebx
100316dd:	call   0x10005fb0
100316e2:	mov    BYTE PTR [esp+0x80],0x1
100316ea:	cmp    DWORD PTR [esp+0x54],0x10
100316ef:	jb     0x100316fe
100316f1:	mov    eax,DWORD PTR [esp+0x40]
100316f5:	push   eax
100316f6:	call   0x10041d92
100316fb:	add    esp,0x4
100316fe:	add    edi,0x1
10031701:	add    DWORD PTR [esp+0x14],0x1c
10031706:	jmp    0x100314f4
1003170b:	cmp    esi,ebp
1003170d:	jne    0x100315ce
10031713:	cmp    eax,0x10
10031716:	mov    DWORD PTR [esp+0x50],ebp
1003171a:	mov    eax,ecx
1003171c:	jae    0x10031722
1003171e:	lea    eax,[esp+0x40]
10031722:	mov    BYTE PTR [eax],0x0
10031725:	jmp    0x10031600
1003172a:	push   0x1006bfe8
1003172f:	call   0x10041f10
10031734:	add    esp,0x4
10031737:	push   eax
10031738:	push   0x1006bfe8
1003173d:	mov    eax,ebx
1003173f:	call   0x10005f16
10031744:	mov    esi,DWORD PTR [esp+0x1c]
10031748:	cmp    esi,ebp
1003174a:	je     0x1003178c
1003174c:	mov    edi,DWORD PTR [esp+0x20]
10031750:	cmp    esi,edi
10031752:	je     0x10031783
10031754:	add    esi,0x18
10031757:	cmp    DWORD PTR [esi],0x10
1003175a:	jb     0x10031768
1003175c:	mov    eax,DWORD PTR [esi-0x14]
1003175f:	push   eax
10031760:	call   0x10041d92
10031765:	add    esp,0x4
10031768:	mov    DWORD PTR [esi],0xf
1003176e:	mov    DWORD PTR [esi-0x4],ebp
10031771:	mov    BYTE PTR [esi-0x14],0x0
10031775:	add    esi,0x1c
10031778:	lea    ecx,[esi-0x18]
1003177b:	cmp    ecx,edi
1003177d:	jne    0x10031757
1003177f:	mov    esi,DWORD PTR [esp+0x1c]
10031783:	push   esi
10031784:	call   0x10041d92
10031789:	add    esp,0x4
1003178c:	mov    eax,ebx
1003178e:	mov    ecx,DWORD PTR [esp+0x78]
10031792:	mov    DWORD PTR fs:0x0,ecx
10031799:	pop    ecx
1003179a:	pop    edi
1003179b:	pop    esi
1003179c:	pop    ebp
1003179d:	pop    ebx
1003179e:	mov    ecx,DWORD PTR [esp+0x60]
100317a2:	xor    ecx,esp
100317a4:	call   0x10041d97
100317a9:	add    esp,0x70
100317ac:	ret    
100317ad:	int3   
100317ae:	int3   
100317af:	int3   
100317b0:	push   ebp
100317b1:	mov    ebp,esp
100317b3:	and    esp,0xfffffff8
100317b6:	push   0xffffffff
100317b8:	push   0x10062b5c
100317bd:	mov    eax,fs:0x0
100317c3:	push   eax
100317c4:	sub    esp,0x1f0
100317ca:	mov    eax,ds:0x1007d030
100317cf:	xor    eax,esp
100317d1:	mov    DWORD PTR [esp+0x1e8],eax
100317d8:	push   ebx
100317d9:	push   esi
100317da:	push   edi
100317db:	mov    eax,ds:0x1007d030
100317e0:	xor    eax,esp
100317e2:	push   eax
100317e3:	lea    eax,[esp+0x200]
100317ea:	mov    fs:0x0,eax
100317f0:	mov    eax,DWORD PTR [ebp+0x8]
100317f3:	mov    esi,DWORD PTR [ebp+0xc]
100317f6:	mov    DWORD PTR [esp+0x1c],ecx
100317fa:	mov    DWORD PTR [esp+0x14],eax
100317fe:	mov    eax,DWORD PTR [ebp+0x10]
10031801:	lea    ecx,[esp+0x60]
10031805:	xor    ebx,ebx
10031807:	push   ecx
10031808:	mov    DWORD PTR [esp+0x1c],edx
1003180c:	mov    DWORD PTR [esp+0x24],eax
10031810:	mov    DWORD PTR [esp+0x28],ebx
10031814:	call   0x10030cb0
10031819:	add    esp,0x4
1003181c:	mov    edi,eax
1003181e:	push   esi
1003181f:	lea    ecx,[esp+0x48]
10031823:	mov    DWORD PTR [esp+0x20c],ebx
1003182a:	call   0x10030bd0
1003182f:	add    esp,0x4
10031832:	mov    DWORD PTR [esp+0x10],eax
10031836:	push   0x2ca859f2
1003183b:	push   0x10071f3c
10031840:	mov    BYTE PTR [esp+0x210],0x1
10031848:	call   0x10003d63
1003184d:	push   0x3e7bfd1c
10031852:	push   eax
10031853:	call   0x10003d63
10031858:	push   eax
10031859:	push   0x4
1003185b:	push   0x10071f74
10031860:	call   0x10003d75
10031865:	mov    esi,eax
10031867:	add    esp,0x1c
1003186a:	push   esi
1003186b:	mov    DWORD PTR [esp+0x44],0xf
10031873:	mov    DWORD PTR [esp+0x40],ebx
10031877:	mov    BYTE PTR [esp+0x30],bl
1003187b:	call   0x10041f10
10031880:	add    esp,0x4
10031883:	push   eax
10031884:	push   esi
10031885:	lea    ecx,[esp+0x30]
10031889:	call   0x10001344
1003188e:	mov    BYTE PTR [esp+0x208],0x2
10031896:	mov    edx,DWORD PTR [esp+0x10]
1003189a:	push   edx
1003189b:	lea    eax,[esp+0x2c]
1003189f:	push   eax
100318a0:	lea    ecx,[esp+0xbc]
100318a7:	push   ecx
100318a8:	call   0x1000a3d1
100318ad:	add    esp,0xc
100318b0:	push   0x10071f38
100318b5:	push   eax
100318b6:	lea    edx,[esp+0xa0]
100318bd:	push   edx
100318be:	mov    BYTE PTR [esp+0x214],0x3
100318c6:	call   0x10005dcb
100318cb:	add    esp,0xc
100318ce:	push   edi
100318cf:	push   eax
100318d0:	lea    eax,[esp+0x1e4]
100318d7:	push   eax
100318d8:	mov    BYTE PTR [esp+0x214],0x4
100318e0:	call   0x1000a3d1
100318e5:	add    esp,0xc
100318e8:	mov    edi,0x10
100318ed:	cmp    DWORD PTR [esp+0xb0],edi
100318f4:	jb     0x10031906
100318f6:	mov    ecx,DWORD PTR [esp+0x9c]
100318fd:	push   ecx
100318fe:	call   0x10041d92
10031903:	add    esp,0x4
10031906:	mov    esi,0xf
1003190b:	mov    DWORD PTR [esp+0xb0],esi
10031912:	mov    DWORD PTR [esp+0xac],ebx
10031919:	mov    BYTE PTR [esp+0x9c],bl
10031920:	cmp    DWORD PTR [esp+0xcc],edi
10031927:	jb     0x10031939
10031929:	mov    edx,DWORD PTR [esp+0xb8]
10031930:	push   edx
10031931:	call   0x10041d92
10031936:	add    esp,0x4
10031939:	mov    DWORD PTR [esp+0xcc],esi
10031940:	mov    DWORD PTR [esp+0xc8],ebx
10031947:	mov    BYTE PTR [esp+0xb8],bl
1003194e:	cmp    DWORD PTR [esp+0x40],edi
10031952:	jb     0x10031961
10031954:	mov    eax,DWORD PTR [esp+0x2c]
10031958:	push   eax
10031959:	call   0x10041d92
1003195e:	add    esp,0x4
10031961:	mov    DWORD PTR [esp+0x40],esi
10031965:	mov    DWORD PTR [esp+0x3c],ebx
10031969:	mov    BYTE PTR [esp+0x2c],bl
1003196d:	cmp    DWORD PTR [esp+0x5c],edi
10031971:	jb     0x10031980
10031973:	mov    ecx,DWORD PTR [esp+0x48]
10031977:	push   ecx
10031978:	call   0x10041d92
1003197d:	add    esp,0x4
10031980:	mov    DWORD PTR [esp+0x5c],esi
10031984:	mov    DWORD PTR [esp+0x58],ebx
10031988:	mov    BYTE PTR [esp+0x48],bl
1003198c:	mov    BYTE PTR [esp+0x208],0xa
10031994:	cmp    DWORD PTR [esp+0x78],edi
10031998:	jb     0x100319a7
1003199a:	mov    edx,DWORD PTR [esp+0x64]
1003199e:	push   edx
1003199f:	call   0x10041d92
100319a4:	add    esp,0x4
100319a7:	mov    eax,ds:0x1007fda0
100319ac:	push   ebx
100319ad:	push   eax
100319ae:	lea    ecx,[esp+0x1c8]
100319b5:	push   ecx
100319b6:	lea    ecx,[esp+0x1e8]
100319bd:	mov    DWORD PTR [esp+0x84],esi
100319c4:	mov    DWORD PTR [esp+0x80],ebx
100319cb:	mov    BYTE PTR [esp+0x70],bl
100319cf:	call   0x10038c20
100319d4:	add    esp,0xc
100319d7:	mov    BYTE PTR [esp+0x208],0xb
100319df:	push   0x10070a5c
100319e4:	mov    DWORD PTR [esp+0x124],esi
100319eb:	mov    DWORD PTR [esp+0x120],ebx
100319f2:	mov    BYTE PTR [esp+0x110],bl
100319f9:	call   0x10041f10
100319fe:	add    esp,0x4
10031a01:	push   eax
10031a02:	push   0x10070a5c
10031a07:	lea    ecx,[esp+0x110]
10031a0e:	call   0x10001344
10031a13:	push   0x1006bb18
10031a18:	mov    BYTE PTR [esp+0x20c],0xc
10031a20:	call   0x10041f10
10031a25:	mov    edi,DWORD PTR [esp+0x1c]
10031a29:	mov    esi,DWORD PTR [edi+0x14]
10031a2c:	add    esp,0x4
10031a2f:	cmp    esi,eax
10031a31:	mov    DWORD PTR [esp+0x10],eax
10031a35:	mov    ecx,esi
10031a37:	jae    0x10031a3b
10031a39:	mov    eax,esi
10031a3b:	cmp    DWORD PTR [edi+0x18],0x10
10031a3f:	jb     0x10031a46
10031a41:	mov    ecx,DWORD PTR [edi+0x4]
10031a44:	jmp    0x10031a49
10031a46:	lea    ecx,[edi+0x4]
10031a49:	push   eax
10031a4a:	push   0x1006bb18
10031a4f:	push   ecx
10031a50:	call   0x1004260e
10031a55:	add    esp,0xc
10031a58:	cmp    eax,ebx
10031a5a:	jne    0x10031a71
10031a5c:	mov    eax,DWORD PTR [esp+0x10]
10031a60:	cmp    esi,eax
10031a62:	jb     0x10031a71
10031a64:	xor    edx,edx
10031a66:	cmp    esi,eax
10031a68:	setne  dl
10031a6b:	mov    eax,edx
10031a6d:	cmp    eax,ebx
10031a6f:	je     0x10031ac3
10031a71:	movzx  eax,BYTE PTR ds:0x1007fd28
10031a78:	mov    ecx,DWORD PTR ds:0x1007fd9c
10031a7e:	push   eax
10031a7f:	push   ecx
10031a80:	lea    edx,[esp+0x84]
10031a87:	push   edx
10031a88:	mov    ecx,edi
10031a8a:	call   0x10038c20
10031a8f:	add    esp,0xc
10031a92:	push   0xffffffff
10031a94:	push   ebx
10031a95:	lea    esi,[esp+0x110]
10031a9c:	mov    BYTE PTR [esp+0x210],0xd
10031aa4:	call   0x10005fb0
10031aa9:	cmp    DWORD PTR [esp+0x94],0x10
10031ab1:	jb     0x10031ac3
10031ab3:	mov    eax,DWORD PTR [esp+0x80]
10031aba:	push   eax
10031abb:	call   0x10041d92
10031ac0:	add    esp,0x4
10031ac3:	mov    DWORD PTR [esp+0x10],ebx
10031ac7:	mov    ecx,DWORD PTR [esp+0x1c]
10031acb:	push   0x10071f7c
10031ad0:	push   ecx
10031ad1:	lea    edx,[esp+0x84]
10031ad8:	push   edx
10031ad9:	mov    BYTE PTR [esp+0x214],0xe
10031ae1:	call   0x10005dcb
10031ae6:	add    esp,0xc
10031ae9:	lea    ecx,[esp+0x1dc]
10031af0:	push   ecx
10031af1:	push   eax
10031af2:	lea    edx,[esp+0x4c]
10031af6:	push   edx
10031af7:	mov    BYTE PTR [esp+0x214],0xf
10031aff:	call   0x1000a3d1
10031b04:	add    esp,0xc
10031b07:	push   edi
10031b08:	push   eax
10031b09:	lea    eax,[esp+0x68]
10031b0d:	push   eax
10031b0e:	mov    BYTE PTR [esp+0x214],0x10
10031b16:	call   0x1000a3d1
10031b1b:	mov    esi,0x10
10031b20:	add    esp,0xc
10031b23:	cmp    DWORD PTR [eax+0x18],esi
10031b26:	jb     0x10031b2d
10031b28:	mov    eax,DWORD PTR [eax+0x4]
10031b2b:	jmp    0x10031b30
10031b2d:	add    eax,0x4
10031b30:	push   eax
10031b31:	call   0x1000207c
10031b36:	add    esp,0x4
10031b39:	cmp    DWORD PTR [esp+0x78],esi
10031b3d:	jb     0x10031b4c
10031b3f:	mov    ecx,DWORD PTR [esp+0x64]
10031b43:	push   ecx
10031b44:	call   0x10041d92
10031b49:	add    esp,0x4
10031b4c:	cmp    DWORD PTR [esp+0x5c],esi
10031b50:	mov    edi,0xf
10031b55:	mov    DWORD PTR [esp+0x78],edi
10031b59:	mov    DWORD PTR [esp+0x74],ebx
10031b5d:	mov    BYTE PTR [esp+0x64],bl
10031b61:	jb     0x10031b70
10031b63:	mov    edx,DWORD PTR [esp+0x48]
10031b67:	push   edx
10031b68:	call   0x10041d92
10031b6d:	add    esp,0x4
10031b70:	cmp    DWORD PTR [esp+0x94],esi
10031b77:	mov    DWORD PTR [esp+0x5c],edi
10031b7b:	mov    DWORD PTR [esp+0x58],ebx
10031b7f:	mov    BYTE PTR [esp+0x48],bl
10031b83:	jb     0x10031b95
10031b85:	mov    eax,DWORD PTR [esp+0x80]
10031b8c:	push   eax
10031b8d:	call   0x10041d92
10031b92:	add    esp,0x4
10031b95:	mov    DWORD PTR [esp+0x140],edi
10031b9c:	mov    DWORD PTR [esp+0x13c],ebx
10031ba3:	mov    BYTE PTR [esp+0x12c],bl
10031baa:	mov    DWORD PTR [esp+0x160],edi
10031bb1:	mov    DWORD PTR [esp+0x15c],ebx
10031bb8:	mov    BYTE PTR [esp+0x14c],bl
10031bbf:	mov    DWORD PTR [esp+0x17c],edi
10031bc6:	mov    DWORD PTR [esp+0x178],ebx
10031bcd:	mov    BYTE PTR [esp+0x168],bl
10031bd4:	mov    DWORD PTR [esp+0x198],edi
10031bdb:	mov    DWORD PTR [esp+0x194],ebx
10031be2:	mov    BYTE PTR [esp+0x184],bl
10031be9:	mov    DWORD PTR [esp+0x1b4],edi
10031bf0:	mov    DWORD PTR [esp+0x1b0],ebx
10031bf7:	mov    BYTE PTR [esp+0x1a0],bl
10031bfe:	lea    ecx,[esp+0x124]
10031c05:	push   ecx
10031c06:	mov    ecx,DWORD PTR [esp+0x20]
10031c0a:	mov    BYTE PTR [esp+0x20c],0x11
10031c12:	call   0x10032860
10031c17:	add    esp,0x4
10031c1a:	test   al,al
10031c1c:	jne    0x10031d8d
10031c22:	cmp    DWORD PTR [esp+0x1b4],esi
10031c29:	mov    edx,DWORD PTR [esp+0x14]
10031c2d:	mov    DWORD PTR [edx],ebx
10031c2f:	jb     0x10031c41
10031c31:	mov    eax,DWORD PTR [esp+0x1a0]
10031c38:	push   eax
10031c39:	call   0x10041d92
10031c3e:	add    esp,0x4
10031c41:	cmp    DWORD PTR [esp+0x198],esi
10031c48:	mov    DWORD PTR [esp+0x1b4],edi
10031c4f:	mov    DWORD PTR [esp+0x1b0],ebx
10031c56:	mov    BYTE PTR [esp+0x1a0],bl
10031c5d:	jb     0x10031c6f
10031c5f:	mov    ecx,DWORD PTR [esp+0x184]
10031c66:	push   ecx
10031c67:	call   0x10041d92
10031c6c:	add    esp,0x4
10031c6f:	cmp    DWORD PTR [esp+0x17c],esi
10031c76:	mov    DWORD PTR [esp+0x198],edi
10031c7d:	mov    DWORD PTR [esp+0x194],ebx
10031c84:	mov    BYTE PTR [esp+0x184],bl
10031c8b:	jb     0x10031c9d
10031c8d:	mov    edx,DWORD PTR [esp+0x168]
10031c94:	push   edx
10031c95:	call   0x10041d92
10031c9a:	add    esp,0x4
10031c9d:	cmp    DWORD PTR [esp+0x160],esi
10031ca4:	mov    DWORD PTR [esp+0x17c],edi
10031cab:	mov    DWORD PTR [esp+0x178],ebx
10031cb2:	mov    BYTE PTR [esp+0x168],bl
10031cb9:	jb     0x10031ccb
10031cbb:	mov    eax,DWORD PTR [esp+0x14c]
10031cc2:	push   eax
10031cc3:	call   0x10041d92
10031cc8:	add    esp,0x4
10031ccb:	cmp    DWORD PTR [esp+0x140],esi
10031cd2:	mov    DWORD PTR [esp+0x160],edi
10031cd9:	mov    DWORD PTR [esp+0x15c],ebx
10031ce0:	mov    BYTE PTR [esp+0x14c],bl
10031ce7:	jb     0x10031cf9
10031ce9:	mov    ecx,DWORD PTR [esp+0x12c]
10031cf0:	push   ecx
10031cf1:	call   0x10041d92
10031cf6:	add    esp,0x4
10031cf9:	push   ebx
10031cfa:	mov    DWORD PTR [esp+0x144],edi
10031d01:	mov    DWORD PTR [esp+0x140],ebx
10031d08:	mov    BYTE PTR [esp+0x130],bl
10031d0f:	call   0x10041d92
10031d14:	add    esp,0x4
10031d17:	cmp    DWORD PTR [esp+0x120],esi
10031d1e:	jb     0x10031d30
10031d20:	mov    edx,DWORD PTR [esp+0x10c]
10031d27:	push   edx
10031d28:	call   0x10041d92
10031d2d:	add    esp,0x4
10031d30:	cmp    DWORD PTR [esp+0x1d8],esi
10031d37:	mov    DWORD PTR [esp+0x120],edi
10031d3e:	mov    DWORD PTR [esp+0x11c],ebx
10031d45:	mov    BYTE PTR [esp+0x10c],bl
10031d4c:	jb     0x10031d5e
10031d4e:	mov    eax,DWORD PTR [esp+0x1c4]
10031d55:	push   eax
10031d56:	call   0x10041d92
10031d5b:	add    esp,0x4
10031d5e:	cmp    DWORD PTR [esp+0x1f4],esi
10031d65:	mov    DWORD PTR [esp+0x1d8],edi
10031d6c:	mov    DWORD PTR [esp+0x1d4],ebx
10031d73:	mov    BYTE PTR [esp+0x1c4],bl
10031d7a:	jb     0x100322b9
10031d80:	mov    ecx,DWORD PTR [esp+0x1e0]
10031d87:	push   ecx
10031d88:	jmp    0x100322b1
10031d8d:	push   0x100716b8
10031d92:	mov    DWORD PTR [esp+0xb4],edi
10031d99:	mov    DWORD PTR [esp+0xb0],ebx
10031da0:	mov    BYTE PTR [esp+0xa0],bl
10031da7:	call   0x10041f10
10031dac:	add    esp,0x4
10031daf:	push   eax
10031db0:	push   0x100716b8
10031db5:	lea    ecx,[esp+0xa0]
10031dbc:	call   0x10001344
10031dc1:	lea    edx,[esp+0x1dc]
10031dc8:	push   edx
10031dc9:	lea    edi,[esp+0x80]
10031dd0:	mov    BYTE PTR [esp+0x20c],0x12
10031dd8:	call   0x100345a0
10031ddd:	add    esp,0x4
10031de0:	mov    ecx,DWORD PTR [esp+0x18]
10031de4:	push   ecx
10031de5:	push   eax
10031de6:	lea    edx,[esp+0xd8]
10031ded:	push   edx
10031dee:	mov    BYTE PTR [esp+0x214],0x13
10031df6:	call   0x1000a3d1
10031dfb:	add    esp,0xc
10031dfe:	lea    eax,[esp+0x108]
10031e05:	push   eax
10031e06:	lea    ecx,[esp+0x1c4]
10031e0d:	push   ecx
10031e0e:	lea    edx,[esp+0xbc]
10031e15:	push   edx
10031e16:	mov    BYTE PTR [esp+0x214],0x14
10031e1e:	call   0x1000a3d1
10031e23:	add    esp,0xc
10031e26:	mov    edx,eax
10031e28:	lea    ecx,[esp+0x44]
10031e2c:	mov    BYTE PTR [esp+0x208],0x15
10031e34:	call   0x100312a0
10031e39:	mov    edi,eax
10031e3b:	push   0x5310f266
10031e40:	push   0x10071f80
10031e45:	mov    BYTE PTR [esp+0x210],0x16
10031e4d:	call   0x10003d63
10031e52:	push   0xc78332
10031e57:	push   eax
10031e58:	call   0x10003d63
10031e5d:	push   eax
10031e5e:	push   0x1b
10031e60:	push   0x10071fac
10031e65:	call   0x10003d75
10031e6a:	mov    esi,eax
10031e6c:	add    esp,0x1c
10031e6f:	push   esi
10031e70:	mov    DWORD PTR [esp+0x44],0xf
10031e78:	mov    DWORD PTR [esp+0x40],ebx
10031e7c:	mov    BYTE PTR [esp+0x30],bl
10031e80:	call   0x10041f10
10031e85:	add    esp,0x4
10031e88:	push   eax
10031e89:	push   esi
10031e8a:	lea    ecx,[esp+0x30]
10031e8e:	call   0x10001344
10031e93:	push   edi
10031e94:	lea    eax,[esp+0x2c]
10031e98:	push   eax
10031e99:	lea    ecx,[esp+0x68]
10031e9d:	push   ecx
10031e9e:	mov    BYTE PTR [esp+0x214],0x17
10031ea6:	call   0x1000a3d1
10031eab:	add    esp,0xc
10031eae:	mov    edx,DWORD PTR [ebp+0x14]
10031eb1:	mov    ecx,DWORD PTR [esp+0x20]
10031eb5:	push   edx
10031eb6:	mov    BYTE PTR [esp+0x20c],0x18
10031ebe:	push   ecx
10031ebf:	push   ebx
10031ec0:	push   ebx
10031ec1:	push   eax
10031ec2:	mov    eax,DWORD PTR [esp+0x158]
10031ec9:	lea    edx,[esp+0xac]
10031ed0:	push   edx
10031ed1:	push   eax
10031ed2:	lea    ecx,[esp+0x144]
10031ed9:	push   ecx
10031eda:	lea    edx,[esp+0x44]
10031ede:	push   edx
10031edf:	call   0x1000c2aa
10031ee4:	mov    ecx,DWORD PTR [eax]
10031ee6:	mov    edi,ecx
10031ee8:	add    esp,0x24
10031eeb:	cmp    edi,ebx
10031eed:	mov    DWORD PTR [eax],ebx
10031eef:	je     0x10031efa
10031ef1:	push   ebx
10031ef2:	call   0x10041d92
10031ef7:	add    esp,0x4
10031efa:	mov    edx,DWORD PTR [esp+0x24]
10031efe:	push   edx
10031eff:	mov    DWORD PTR [esp+0x14],edi
10031f03:	call   0x10041d92
10031f08:	mov    esi,0x10
10031f0d:	add    esp,0x4
10031f10:	cmp    DWORD PTR [esp+0x78],esi
10031f14:	jb     0x10031f23
10031f16:	mov    eax,DWORD PTR [esp+0x64]
10031f1a:	push   eax
10031f1b:	call   0x10041d92
10031f20:	add    esp,0x4
10031f23:	cmp    DWORD PTR [esp+0x40],esi
10031f27:	mov    DWORD PTR [esp+0x78],0xf
10031f2f:	mov    DWORD PTR [esp+0x74],ebx
10031f33:	mov    BYTE PTR [esp+0x64],bl
10031f37:	jb     0x10031f46
10031f39:	mov    ecx,DWORD PTR [esp+0x2c]
10031f3d:	push   ecx
10031f3e:	call   0x10041d92
10031f43:	add    esp,0x4
10031f46:	cmp    DWORD PTR [esp+0x5c],esi
10031f4a:	mov    DWORD PTR [esp+0x40],0xf
10031f52:	mov    DWORD PTR [esp+0x3c],ebx
10031f56:	mov    BYTE PTR [esp+0x2c],bl
10031f5a:	jb     0x10031f69
10031f5c:	mov    edx,DWORD PTR [esp+0x48]
10031f60:	push   edx
10031f61:	call   0x10041d92
10031f66:	add    esp,0x4
10031f69:	cmp    DWORD PTR [esp+0xcc],esi
10031f70:	mov    DWORD PTR [esp+0x5c],0xf
10031f78:	mov    DWORD PTR [esp+0x58],ebx
10031f7c:	mov    BYTE PTR [esp+0x48],bl
10031f80:	jb     0x10031f92
10031f82:	mov    eax,DWORD PTR [esp+0xb8]
10031f89:	push   eax
10031f8a:	call   0x10041d92
10031f8f:	add    esp,0x4
10031f92:	cmp    DWORD PTR [esp+0xe8],esi
10031f99:	mov    DWORD PTR [esp+0xcc],0xf
10031fa4:	mov    DWORD PTR [esp+0xc8],ebx
10031fab:	mov    BYTE PTR [esp+0xb8],bl
10031fb2:	jb     0x10031fc4
10031fb4:	mov    ecx,DWORD PTR [esp+0xd4]
10031fbb:	push   ecx
10031fbc:	call   0x10041d92
10031fc1:	add    esp,0x4
10031fc4:	cmp    DWORD PTR [esp+0x94],esi
10031fcb:	mov    DWORD PTR [esp+0xe8],0xf
10031fd6:	mov    DWORD PTR [esp+0xe4],ebx
10031fdd:	mov    BYTE PTR [esp+0xd4],bl
10031fe4:	jb     0x10031ff6
10031fe6:	mov    edx,DWORD PTR [esp+0x80]
10031fed:	push   edx
10031fee:	call   0x10041d92
10031ff3:	add    esp,0x4
10031ff6:	mov    BYTE PTR [esp+0x208],0x11
10031ffe:	cmp    DWORD PTR [esp+0xb0],esi
10032005:	mov    DWORD PTR [esp+0x94],0xf
10032010:	mov    DWORD PTR [esp+0x90],ebx
10032017:	mov    BYTE PTR [esp+0x80],bl
1003201e:	jb     0x10032030
10032020:	mov    eax,DWORD PTR [esp+0x9c]
10032027:	push   eax
10032028:	call   0x10041d92
1003202d:	add    esp,0x4
10032030:	cmp    edi,ebx
10032032:	jne    0x10032136
10032038:	mov    ecx,DWORD PTR [esp+0x1c]
1003203c:	push   0x10071f7c
10032041:	push   ecx
10032042:	lea    edx,[esp+0xf4]
10032049:	push   edx
1003204a:	call   0x10005dcb
1003204f:	add    esp,0xc
10032052:	lea    ecx,[esp+0x1dc]
10032059:	push   ecx
1003205a:	push   eax
1003205b:	lea    edx,[esp+0xd8]
10032062:	push   edx
10032063:	mov    BYTE PTR [esp+0x214],0x19
1003206b:	call   0x1000a3d1
10032070:	add    esp,0xc
10032073:	mov    ecx,DWORD PTR [esp+0x18]
10032077:	push   ecx
10032078:	push   eax
10032079:	lea    edx,[esp+0x84]
10032080:	push   edx
10032081:	mov    BYTE PTR [esp+0x214],0x1a
10032089:	call   0x1000a3d1
1003208e:	add    esp,0xc
10032091:	cmp    DWORD PTR [eax+0x18],esi
10032094:	jb     0x1003209b
10032096:	mov    eax,DWORD PTR [eax+0x4]
10032099:	jmp    0x1003209e
1003209b:	add    eax,0x4
1003209e:	push   eax
1003209f:	call   0x1000207c
100320a4:	add    esp,0x4
100320a7:	cmp    DWORD PTR [esp+0x94],esi
100320ae:	jb     0x100320c0
100320b0:	mov    eax,DWORD PTR [esp+0x80]
100320b7:	push   eax
100320b8:	call   0x10041d92
100320bd:	add    esp,0x4
100320c0:	cmp    DWORD PTR [esp+0xe8],esi
100320c7:	mov    DWORD PTR [esp+0x94],0xf
100320d2:	mov    DWORD PTR [esp+0x90],ebx
100320d9:	mov    BYTE PTR [esp+0x80],bl
100320e0:	jb     0x100320f2
100320e2:	mov    ecx,DWORD PTR [esp+0xd4]
100320e9:	push   ecx
100320ea:	call   0x10041d92
100320ef:	add    esp,0x4
100320f2:	mov    BYTE PTR [esp+0x208],0x11
100320fa:	cmp    DWORD PTR [esp+0x104],esi
10032101:	mov    DWORD PTR [esp+0xe8],0xf
1003210c:	mov    DWORD PTR [esp+0xe4],ebx
10032113:	mov    BYTE PTR [esp+0xd4],bl
1003211a:	jb     0x1003212c
1003211c:	mov    edx,DWORD PTR [esp+0xf0]
10032123:	push   edx
10032124:	call   0x10041d92
10032129:	add    esp,0x4
1003212c:	push   0x5
1003212e:	call   0x10037620
10032133:	add    esp,0x4
10032136:	cmp    DWORD PTR [esp+0x1b4],esi
1003213d:	mov    eax,DWORD PTR [esp+0x14]
10032141:	mov    DWORD PTR [eax],edi
10032143:	jb     0x10032155
10032145:	mov    ecx,DWORD PTR [esp+0x1a0]
1003214c:	push   ecx
1003214d:	call   0x10041d92
10032152:	add    esp,0x4
10032155:	cmp    DWORD PTR [esp+0x198],esi
1003215c:	mov    DWORD PTR [esp+0x1b4],0xf
10032167:	mov    DWORD PTR [esp+0x1b0],ebx
1003216e:	mov    BYTE PTR [esp+0x1a0],bl
10032175:	jb     0x10032187
10032177:	mov    edx,DWORD PTR [esp+0x184]
1003217e:	push   edx
1003217f:	call   0x10041d92
10032184:	add    esp,0x4
10032187:	cmp    DWORD PTR [esp+0x17c],esi
1003218e:	mov    DWORD PTR [esp+0x198],0xf
10032199:	mov    DWORD PTR [esp+0x194],ebx
100321a0:	mov    BYTE PTR [esp+0x184],bl
100321a7:	jb     0x100321b9
100321a9:	mov    eax,DWORD PTR [esp+0x168]
100321b0:	push   eax
100321b1:	call   0x10041d92
100321b6:	add    esp,0x4
100321b9:	cmp    DWORD PTR [esp+0x160],esi
100321c0:	mov    DWORD PTR [esp+0x17c],0xf
100321cb:	mov    DWORD PTR [esp+0x178],ebx
100321d2:	mov    BYTE PTR [esp+0x168],bl
100321d9:	jb     0x100321eb
100321db:	mov    ecx,DWORD PTR [esp+0x14c]
100321e2:	push   ecx
100321e3:	call   0x10041d92
100321e8:	add    esp,0x4
100321eb:	cmp    DWORD PTR [esp+0x140],esi
100321f2:	mov    DWORD PTR [esp+0x160],0xf
100321fd:	mov    DWORD PTR [esp+0x15c],ebx
10032204:	mov    BYTE PTR [esp+0x14c],bl
1003220b:	jb     0x1003221d
1003220d:	mov    edx,DWORD PTR [esp+0x12c]
10032214:	push   edx
10032215:	call   0x10041d92
1003221a:	add    esp,0x4
1003221d:	push   ebx
1003221e:	mov    DWORD PTR [esp+0x144],0xf
10032229:	mov    DWORD PTR [esp+0x140],ebx
10032230:	mov    BYTE PTR [esp+0x130],bl
10032237:	call   0x10041d92
1003223c:	add    esp,0x4
1003223f:	cmp    DWORD PTR [esp+0x120],esi
10032246:	jb     0x10032258
10032248:	mov    eax,DWORD PTR [esp+0x10c]
1003224f:	push   eax
10032250:	call   0x10041d92
10032255:	add    esp,0x4
10032258:	cmp    DWORD PTR [esp+0x1d8],esi
1003225f:	mov    edi,0xf
10032264:	mov    DWORD PTR [esp+0x120],edi
1003226b:	mov    DWORD PTR [esp+0x11c],ebx
10032272:	mov    BYTE PTR [esp+0x10c],bl
10032279:	jb     0x1003228b
1003227b:	mov    ecx,DWORD PTR [esp+0x1c4]
10032282:	push   ecx
10032283:	call   0x10041d92
10032288:	add    esp,0x4
1003228b:	cmp    DWORD PTR [esp+0x1f4],esi
10032292:	mov    DWORD PTR [esp+0x1d8],edi
10032299:	mov    DWORD PTR [esp+0x1d4],ebx
100322a0:	mov    BYTE PTR [esp+0x1c4],bl
100322a7:	jb     0x100322b9
100322a9:	mov    edx,DWORD PTR [esp+0x1e0]
100322b0:	push   edx
100322b1:	call   0x10041d92
100322b6:	add    esp,0x4
100322b9:	mov    eax,DWORD PTR [esp+0x14]
100322bd:	mov    ecx,DWORD PTR [esp+0x200]
100322c4:	mov    DWORD PTR fs:0x0,ecx
100322cb:	pop    ecx
100322cc:	pop    edi
100322cd:	pop    esi
100322ce:	pop    ebx
100322cf:	mov    ecx,DWORD PTR [esp+0x1e8]
100322d6:	xor    ecx,esp
100322d8:	call   0x10041d97
100322dd:	mov    esp,ebp
100322df:	pop    ebp
100322e0:	ret    
100322e1:	int3   
100322e2:	int3   
100322e3:	int3   
100322e4:	int3   
100322e5:	int3   
100322e6:	int3   
100322e7:	int3   
100322e8:	int3   
100322e9:	int3   
100322ea:	int3   
100322eb:	int3   
100322ec:	int3   
100322ed:	int3   
100322ee:	int3   
100322ef:	int3   
100322f0:	push   ebp
100322f1:	mov    ebp,esp
100322f3:	push   0xffffffff
100322f5:	push   0x1005f778
100322fa:	mov    eax,fs:0x0
10032300:	push   eax
10032301:	sub    esp,0x58
10032304:	mov    eax,ds:0x1007d030
10032309:	xor    eax,ebp
1003230b:	mov    DWORD PTR [ebp-0x10],eax
1003230e:	push   ebx
1003230f:	push   esi
10032310:	push   edi
10032311:	push   eax
10032312:	lea    eax,[ebp-0xc]
10032315:	mov    fs:0x0,eax
1003231b:	mov    eax,DWORD PTR [ebp+0x8]
1003231e:	mov    edi,DWORD PTR [ebp+0x14]
10032321:	mov    ecx,DWORD PTR [ebp+0x18]
10032324:	mov    edx,DWORD PTR [ebp+0x1c]
10032327:	mov    esi,DWORD PTR [ebp+0xc]
1003232a:	xor    ebx,ebx
1003232c:	mov    DWORD PTR [ebp-0x30],eax
1003232f:	mov    eax,DWORD PTR [ebp+0x24]
10032332:	mov    DWORD PTR [ebp-0x4c],ebx
10032335:	mov    DWORD PTR [ebp-0x38],edi
10032338:	mov    DWORD PTR [ebp-0x40],ecx
1003233b:	mov    DWORD PTR [ebp-0x44],edx
1003233e:	mov    DWORD PTR [ebp-0x50],eax
10032341:	mov    DWORD PTR [ebp-0x64],ebx
10032344:	mov    DWORD PTR [ebp-0x4],ebx
10032347:	call   DWORD PTR ds:0x1007dfe4
1003234d:	push   0x1c8e8dc2
10032352:	push   0x10071fc8
10032357:	mov    DWORD PTR [ebp-0x34],eax
1003235a:	call   0x10003d63
1003235f:	push   0x45145fbc
10032364:	push   eax
10032365:	call   0x10003d63
1003236a:	add    esp,0x10
1003236d:	push   ebx
1003236e:	push   ebx
1003236f:	push   ebx
10032370:	push   ebx
10032371:	push   eax
10032372:	push   0x1a
10032374:	push   0x10072004
10032379:	call   0x10003f5b
1003237e:	add    esp,0xc
10032381:	push   eax
10032382:	call   DWORD PTR ds:0x10065374
10032388:	mov    ebx,eax
1003238a:	mov    DWORD PTR [ebp-0x4c],ebx
1003238d:	test   ebx,ebx
1003238f:	mov    BYTE PTR [ebp-0x4],0x1
10032393:	jne    0x100323ac
10032395:	mov    esi,DWORD PTR [ebp-0x30]
10032398:	push   0x0
1003239a:	mov    DWORD PTR [esi],0x0
100323a0:	call   0x10041d92
100323a5:	mov    eax,esi
100323a7:	jmp    0x10032839
100323ac:	cmp    DWORD PTR [ebp+0x28],0xffffffff
100323b0:	je     0x100323fe
100323b2:	push   0x8
100323b4:	call   0x1004239e
100323b9:	add    esp,0x4
100323bc:	test   eax,eax
100323be:	je     0x100323ca
100323c0:	mov    ecx,DWORD PTR [ebp+0x28]
100323c3:	mov    DWORD PTR [eax],ebx
100323c5:	mov    DWORD PTR [eax+0x4],ecx
100323c8:	jmp    0x100323cc
100323ca:	xor    eax,eax
100323cc:	push   0x0
100323ce:	push   0x0
100323d0:	push   eax
100323d1:	push   0x100309a0
100323d6:	push   0x0
100323d8:	push   0x0
100323da:	call   DWORD PTR ds:0x10065098
100323e0:	test   eax,eax
100323e2:	jne    0x100323fe
100323e4:	mov    esi,DWORD PTR [ebp-0x30]
100323e7:	push   ebx
100323e8:	mov    DWORD PTR [esi],eax
100323ea:	call   DWORD PTR ds:0x10065378
100323f0:	push   0x0
100323f2:	call   0x10041d92
100323f7:	mov    eax,esi
100323f9:	jmp    0x10032839
100323fe:	call   0x1000207c
10032403:	cmp    DWORD PTR [esi+0x18],0x10
10032407:	jb     0x1003240e
10032409:	mov    esi,DWORD PTR [esi+0x4]
1003240c:	jmp    0x10032411
1003240e:	add    esi,0x4
10032411:	test   esi,esi
10032413:	jne    0x10032419
10032415:	xor    eax,eax
10032417:	jmp    0x1003244b
10032419:	push   esi
1003241a:	call   DWORD PTR ds:0x100650d4
10032420:	mov    edi,eax
10032422:	add    edi,0x1
10032425:	cmp    edi,0x3fffffff
1003242b:	jle    0x10032431
1003242d:	xor    eax,eax
1003242f:	jmp    0x10032448
10032431:	lea    eax,[edi+edi*1]
10032434:	call   0x10049010
10032439:	mov    edx,DWORD PTR [ebp-0x34]
1003243c:	mov    eax,esp
1003243e:	push   edx
1003243f:	push   edi
10032440:	push   esi
10032441:	mov    esi,eax
10032443:	call   0x1000674c
10032448:	mov    edi,DWORD PTR [ebp-0x38]
1003244b:	mov    ecx,DWORD PTR [ebp+0x10]
1003244e:	push   0x0
10032450:	push   0x20000000
10032455:	push   0x3
10032457:	push   0x0
10032459:	push   0x0
1003245b:	push   ecx
1003245c:	push   eax
1003245d:	push   ebx
1003245e:	call   DWORD PTR ds:0x10065398
10032464:	mov    ebx,eax
10032466:	mov    DWORD PTR [ebp-0x3c],ebx
10032469:	test   ebx,ebx
1003246b:	mov    BYTE PTR [ebp-0x4],0x2
1003246f:	je     0x10032395
10032475:	push   0x5659f81c
1003247a:	push   0x1007203c
1003247f:	call   0x10003d63
10032484:	push   0x7db843d0
10032489:	push   eax
1003248a:	call   0x10003d63
1003248f:	push   eax
10032490:	push   0x9
10032492:	push   0x1007206c
10032497:	call   0x10003f5b
1003249c:	push   0xc1be044
100324a1:	push   0x10072080
100324a6:	mov    DWORD PTR [ebp-0x60],eax
100324a9:	call   0x10003d63
100324ae:	push   0xce46c90
100324b3:	push   eax
100324b4:	call   0x10003d63
100324b9:	push   0x47e8f154
100324be:	push   eax
100324bf:	call   0x10003d63
100324c4:	push   eax
100324c5:	push   0xb
100324c7:	push   0x100720ac
100324cc:	call   0x10003f5b
100324d1:	add    esp,0x40
100324d4:	push   0x7e625142
100324d9:	push   0x100720c4
100324de:	mov    DWORD PTR [ebp-0x5c],eax
100324e1:	call   0x10003d63
100324e6:	push   0x23ce8cf4
100324eb:	push   eax
100324ec:	call   0x10003d63
100324f1:	push   0x203c11aa
100324f6:	push   eax
100324f7:	call   0x10003d63
100324fc:	push   eax
100324fd:	push   0xd
100324ff:	push   0x10072100
10032504:	call   0x10003f5b
10032509:	add    esp,0x24
1003250c:	mov    DWORD PTR [ebp-0x58],eax
1003250f:	mov    DWORD PTR [ebp-0x54],0x0
10032516:	call   0x1000207c
1003251b:	cmp    DWORD PTR [edi+0x18],0x10
1003251f:	jb     0x10032526
10032521:	mov    esi,DWORD PTR [edi+0x4]
10032524:	jmp    0x10032529
10032526:	lea    esi,[edi+0x4]
10032529:	test   esi,esi
1003252b:	je     0x1003255e
1003252d:	push   esi
1003252e:	call   DWORD PTR ds:0x100650d4
10032534:	mov    edi,eax
10032536:	add    edi,0x1
10032539:	cmp    edi,0x3fffffff
1003253f:	jle    0x10032545
10032541:	xor    esi,esi
10032543:	jmp    0x1003255e
10032545:	lea    eax,[edi+edi*1]
10032548:	call   0x10049010
1003254d:	mov    edx,DWORD PTR [ebp-0x34]
10032550:	mov    eax,esp
10032552:	push   edx
10032553:	push   edi
10032554:	push   esi
10032555:	mov    esi,eax
10032557:	call   0x1000674c
1003255c:	mov    esi,eax
1003255e:	push   0x302432c4
10032563:	push   0x1007211c
10032568:	call   0x10003d63
1003256d:	push   0x6db08608
10032572:	push   eax
10032573:	call   0x10003d63
10032578:	add    esp,0x10
1003257b:	push   0x0
1003257d:	push   0x4080200
10032582:	lea    ecx,[ebp-0x60]
10032585:	push   ecx
10032586:	push   0x0
10032588:	push   0x0
1003258a:	push   esi
1003258b:	push   eax
1003258c:	push   0x3
1003258e:	push   0x1007215c
10032593:	call   0x10003f5b
10032598:	add    esp,0xc
1003259b:	push   eax
1003259c:	push   ebx
1003259d:	call   DWORD PTR ds:0x1006537c
100325a3:	mov    ebx,eax
100325a5:	mov    DWORD PTR [ebp-0x38],ebx
100325a8:	test   ebx,ebx
100325aa:	mov    BYTE PTR [ebp-0x4],0x3
100325ae:	jne    0x100325cc
100325b0:	mov    edx,DWORD PTR [ebp-0x3c]
100325b3:	mov    esi,DWORD PTR [ebp-0x30]
100325b6:	push   edx
100325b7:	mov    DWORD PTR [esi],eax
100325b9:	call   DWORD PTR ds:0x10065378
100325bf:	push   ebx
100325c0:	call   0x10041d92
100325c5:	mov    eax,esi
100325c7:	jmp    0x10032839
100325cc:	push   0x1006bb18
100325d1:	call   0x10041f10
100325d6:	mov    edi,DWORD PTR [ebp-0x40]
100325d9:	mov    esi,DWORD PTR [edi+0x14]
100325dc:	mov    ecx,eax
100325de:	add    esp,0x4
100325e1:	cmp    esi,ecx
100325e3:	mov    DWORD PTR [ebp-0x4c],ecx
100325e6:	mov    eax,esi
100325e8:	jae    0x100325ec
100325ea:	mov    ecx,esi
100325ec:	cmp    DWORD PTR [edi+0x18],0x10
100325f0:	lea    eax,[edi+0x4]
100325f3:	mov    DWORD PTR [ebp-0x40],eax
100325f6:	jb     0x100325fa
100325f8:	mov    eax,DWORD PTR [eax]
100325fa:	push   ecx
100325fb:	push   0x1006bb18
10032600:	push   eax
10032601:	call   0x1004260e
10032606:	add    esp,0xc
10032609:	test   eax,eax
1003260b:	jne    0x10032625
1003260d:	mov    eax,DWORD PTR [ebp-0x4c]
10032610:	cmp    esi,eax
10032612:	jb     0x10032625
10032614:	xor    ecx,ecx
10032616:	cmp    esi,eax
10032618:	setne  cl
1003261b:	mov    eax,ecx
1003261d:	test   eax,eax
1003261f:	je     0x100326ea
10032625:	push   edi
10032626:	lea    ecx,[ebp-0x2c]
10032629:	call   0x100011b0
1003262e:	cmp    DWORD PTR [edi+0x18],0x10
10032632:	jb     0x1003263b
10032634:	mov    edx,DWORD PTR [ebp-0x40]
10032637:	mov    esi,DWORD PTR [edx]
10032639:	jmp    0x1003263e
1003263b:	mov    esi,DWORD PTR [ebp-0x40]
1003263e:	test   esi,esi
10032640:	jne    0x10032646
10032642:	xor    eax,eax
10032644:	jmp    0x10032675
10032646:	push   esi
10032647:	call   DWORD PTR ds:0x100650d4
1003264d:	mov    edi,eax
1003264f:	add    edi,0x1
10032652:	cmp    edi,0x3fffffff
10032658:	jle    0x1003265e
1003265a:	xor    eax,eax
1003265c:	jmp    0x10032675
1003265e:	lea    eax,[edi+edi*1]
10032661:	call   0x10049010
10032666:	mov    ecx,DWORD PTR [ebp-0x34]
10032669:	mov    eax,esp
1003266b:	push   ecx
1003266c:	push   edi
1003266d:	push   esi
1003266e:	mov    esi,eax
10032670:	call   0x1000674c
10032675:	push   0x1000000
1003267a:	push   0xffffffff
1003267c:	push   eax
1003267d:	push   ebx
1003267e:	call   DWORD PTR ds:0x10065380
10032684:	test   eax,eax
10032686:	jne    0x100326d8
10032688:	call   DWORD PTR ds:0x100650c4
1003268e:	cmp    DWORD PTR [ebp-0x14],0x10
10032692:	mov    edi,DWORD PTR [ebp-0x30]
10032695:	mov    DWORD PTR [edi],0x0
1003269b:	jb     0x100326a9
1003269d:	mov    edx,DWORD PTR [ebp-0x28]
100326a0:	push   edx
100326a1:	call   0x10041d92
100326a6:	add    esp,0x4
100326a9:	mov    esi,DWORD PTR ds:0x10065378
100326af:	push   ebx
100326b0:	mov    DWORD PTR [ebp-0x14],0xf
100326b7:	mov    DWORD PTR [ebp-0x18],0x0
100326be:	mov    BYTE PTR [ebp-0x28],0x0
100326c2:	call   esi
100326c4:	mov    eax,DWORD PTR [ebp-0x3c]
100326c7:	push   eax
100326c8:	call   esi
100326ca:	push   0x0
100326cc:	call   0x10041d92
100326d1:	mov    eax,edi
100326d3:	jmp    0x10032839
100326d8:	cmp    DWORD PTR [ebp-0x14],0x10
100326dc:	jb     0x100326ea
100326de:	mov    ecx,DWORD PTR [ebp-0x28]
100326e1:	push   ecx
100326e2:	call   0x10041d92
100326e7:	add    esp,0x4
100326ea:	mov    edx,DWORD PTR [ebp+0x20]
100326ed:	mov    eax,DWORD PTR [ebp-0x44]
100326f0:	push   edx
100326f1:	push   eax
100326f2:	push   0x0
100326f4:	push   0x0
100326f6:	push   ebx
100326f7:	call   DWORD PTR ds:0x10065384
100326fd:	test   eax,eax
100326ff:	jne    0x1003272d
10032701:	call   DWORD PTR ds:0x100650c4
10032707:	mov    edi,DWORD PTR [ebp-0x30]
1003270a:	mov    esi,DWORD PTR ds:0x10065378
10032710:	push   ebx
10032711:	mov    DWORD PTR [edi],0x0
10032717:	call   esi
10032719:	mov    ecx,DWORD PTR [ebp-0x3c]
1003271c:	push   ecx
1003271d:	call   esi
1003271f:	push   0x0
10032721:	call   0x10041d92
10032726:	mov    eax,edi
10032728:	jmp    0x10032839
1003272d:	push   0x400
10032732:	mov    DWORD PTR [ebp-0x34],0x400
10032739:	xor    esi,esi
1003273b:	call   0x10042609
10032740:	mov    edi,eax
10032742:	add    esp,0x4
10032745:	mov    DWORD PTR [ebp-0x44],edi
10032748:	lea    edx,[ebp-0x48]
1003274b:	push   edx
1003274c:	push   0x400
10032751:	push   edi
10032752:	mov    BYTE PTR [ebp-0x4],0x4
10032756:	push   ebx
10032757:	mov    DWORD PTR [ebp-0x48],esi
1003275a:	call   DWORD PTR ds:0x10065394
10032760:	test   eax,eax
10032762:	je     0x100327d2
10032764:	mov    eax,DWORD PTR [ebp-0x48]
10032767:	test   eax,eax
10032769:	je     0x100327fe
1003276f:	add    esi,eax
10032771:	lea    eax,[esi-0x401]
10032777:	cmp    eax,0x1ffbfe
1003277c:	ja     0x10032781
1003277e:	mov    DWORD PTR [ebp-0x34],esi
10032781:	mov    ecx,DWORD PTR [ebp-0x34]
10032784:	lea    edx,[esi+ecx*1]
10032787:	push   edx
10032788:	call   0x10042609
1003278d:	push   esi
1003278e:	mov    ebx,eax
10032790:	push   edi
10032791:	push   ebx
10032792:	call   0x10043ed0
10032797:	add    esp,0x10
1003279a:	cmp    ebx,edi
1003279c:	je     0x100327a7
1003279e:	push   edi
1003279f:	call   0x10041d92
100327a4:	add    esp,0x4
100327a7:	mov    edi,ebx
100327a9:	push   0x0
100327ab:	mov    DWORD PTR [ebp-0x44],edi
100327ae:	call   0x10041d92
100327b3:	mov    ecx,DWORD PTR [ebp-0x34]
100327b6:	mov    edx,DWORD PTR [ebp-0x38]
100327b9:	add    esp,0x4
100327bc:	lea    eax,[ebp-0x48]
100327bf:	push   eax
100327c0:	push   ecx
100327c1:	add    ebx,esi
100327c3:	push   ebx
100327c4:	push   edx
100327c5:	call   DWORD PTR ds:0x10065394
100327cb:	test   eax,eax
100327cd:	mov    ebx,DWORD PTR [ebp-0x38]
100327d0:	jne    0x10032764
100327d2:	mov    esi,DWORD PTR [ebp-0x30]
100327d5:	push   edi
100327d6:	mov    DWORD PTR [esi],0x0
100327dc:	call   0x10041d92
100327e1:	mov    edi,DWORD PTR ds:0x10065378
100327e7:	add    esp,0x4
100327ea:	push   ebx
100327eb:	call   edi
100327ed:	mov    eax,DWORD PTR [ebp-0x3c]
100327f0:	push   eax
100327f1:	call   edi
100327f3:	push   0x0
100327f5:	call   0x10041d92
100327fa:	mov    eax,esi
100327fc:	jmp    0x10032839
100327fe:	test   edi,edi
10032800:	je     0x1003280c
10032802:	push   0x0
10032804:	call   0x10041d92
10032809:	add    esp,0x4
1003280c:	mov    ecx,DWORD PTR [ebp-0x50]
1003280f:	mov    edx,DWORD PTR [ebp-0x30]
10032812:	mov    DWORD PTR [ecx],esi
10032814:	push   0x0
10032816:	mov    DWORD PTR [edx],edi
10032818:	call   0x10041d92
1003281d:	mov    esi,DWORD PTR ds:0x10065378
10032823:	add    esp,0x4
10032826:	push   ebx
10032827:	call   esi
10032829:	mov    eax,DWORD PTR [ebp-0x3c]
1003282c:	push   eax
1003282d:	call   esi
1003282f:	push   0x0
10032831:	call   0x10041d92
10032836:	mov    eax,DWORD PTR [ebp-0x30]
10032839:	add    esp,0x4
1003283c:	lea    esp,[ebp-0x74]
1003283f:	mov    ecx,DWORD PTR [ebp-0xc]
10032842:	mov    DWORD PTR fs:0x0,ecx
10032849:	pop    ecx
1003284a:	pop    edi
1003284b:	pop    esi
1003284c:	pop    ebx
1003284d:	mov    ecx,DWORD PTR [ebp-0x10]
10032850:	xor    ecx,ebp
10032852:	call   0x10041d97
10032857:	mov    esp,ebp
10032859:	pop    ebp
1003285a:	ret    
1003285b:	int3   
1003285c:	int3   
1003285d:	int3   
1003285e:	int3   
1003285f:	int3   
10032860:	push   ebp
10032861:	lea    ebp,[esp-0x98]
10032868:	sub    esp,0x98
1003286e:	push   0xffffffff
10032870:	push   0x1005f720
10032875:	mov    eax,fs:0x0
1003287b:	push   eax
1003287c:	sub    esp,0x50
1003287f:	mov    eax,ds:0x1007d030
10032884:	xor    eax,ebp
10032886:	mov    DWORD PTR [ebp+0x94],eax
1003288c:	push   ebx
1003288d:	push   esi
1003288e:	push   edi
1003288f:	push   eax
10032890:	lea    eax,[ebp-0xc]
10032893:	mov    fs:0x0,eax
10032899:	mov    eax,DWORD PTR [ebp+0xa0]
1003289f:	xor    ebx,ebx
100328a1:	mov    edi,0xf
100328a6:	mov    esi,ecx
100328a8:	mov    DWORD PTR [ebp-0x20],eax
100328ab:	mov    DWORD PTR [ebp+0x1c],edi
100328ae:	mov    DWORD PTR [ebp+0x18],ebx
100328b1:	mov    BYTE PTR [ebp+0x8],bl
100328b4:	mov    DWORD PTR [ebp+0x3c],edi
100328b7:	mov    DWORD PTR [ebp+0x38],ebx
100328ba:	mov    BYTE PTR [ebp+0x28],bl
100328bd:	mov    DWORD PTR [ebp+0x58],edi
100328c0:	mov    DWORD PTR [ebp+0x54],ebx
100328c3:	mov    BYTE PTR [ebp+0x44],bl
100328c6:	mov    DWORD PTR [ebp+0x74],edi
100328c9:	mov    DWORD PTR [ebp+0x70],ebx
100328cc:	mov    BYTE PTR [ebp+0x60],bl
100328cf:	mov    DWORD PTR [ebp+0x90],edi
100328d5:	mov    DWORD PTR [ebp+0x8c],ebx
100328db:	mov    BYTE PTR [ebp+0x7c],bl
100328de:	push   0x38
100328e0:	lea    ecx,[ebp-0x58]
100328e3:	push   ebx
100328e4:	push   ecx
100328e5:	mov    DWORD PTR [ebp-0x4],ebx
100328e8:	call   0x10044950
100328ed:	mov    eax,0x1
100328f2:	add    esp,0xc
100328f5:	mov    DWORD PTR [ebp-0x5c],0x3c
100328fc:	mov    DWORD PTR [ebp-0x54],eax
100328ff:	mov    DWORD PTR [ebp-0x48],eax
10032902:	mov    DWORD PTR [ebp-0x3c],eax
10032905:	mov    DWORD PTR [ebp-0x34],eax
10032908:	mov    DWORD PTR [ebp-0x2c],eax
1003290b:	mov    DWORD PTR [ebp-0x24],eax
1003290e:	call   DWORD PTR ds:0x1007dfe4
10032914:	mov    DWORD PTR [ebp-0x18],eax
10032917:	mov    eax,DWORD PTR [esi+0x14]
1003291a:	xor    ecx,ecx
1003291c:	add    eax,0x1
1003291f:	mov    edx,0x2
10032924:	mul    edx
10032926:	seto   cl
10032929:	neg    ecx
1003292b:	or     ecx,eax
1003292d:	push   ecx
1003292e:	call   0x10042609
10032933:	add    esp,0x4
10032936:	mov    DWORD PTR [ebp-0x10],eax
10032939:	mov    BYTE PTR [ebp-0x4],0x1
1003293d:	cmp    DWORD PTR [esi+0x18],0x10
10032941:	jb     0x10032948
10032943:	mov    eax,DWORD PTR [esi+0x4]
10032946:	jmp    0x1003294b
10032948:	lea    eax,[esi+0x4]
1003294b:	cmp    eax,ebx
1003294d:	mov    DWORD PTR [ebp-0x14],eax
10032950:	je     0x1003299e
10032952:	push   eax
10032953:	call   DWORD PTR ds:0x100650d4
10032959:	add    eax,0x1
1003295c:	cmp    eax,0x3fffffff
10032961:	mov    DWORD PTR [ebp-0x1c],eax
10032964:	jg     0x1003299e
10032966:	add    eax,eax
10032968:	call   0x10049010
1003296d:	mov    edi,esp
1003296f:	cmp    edi,ebx
10032971:	je     0x10032999
10032973:	mov    ecx,DWORD PTR [ebp-0x1c]
10032976:	mov    edx,DWORD PTR [ebp-0x14]
10032979:	mov    eax,DWORD PTR [ebp-0x18]
1003297c:	push   ecx
1003297d:	push   edi
1003297e:	push   0xffffffff
10032980:	push   edx
10032981:	push   ebx
10032982:	push   eax
10032983:	mov    WORD PTR [edi],bx
10032986:	call   DWORD PTR ds:0x1006508c
1003298c:	neg    eax
1003298e:	sbb    eax,eax
10032990:	and    eax,edi
10032992:	mov    edi,0xf
10032997:	jmp    0x100329a0
10032999:	mov    edi,0xf
1003299e:	xor    eax,eax
100329a0:	mov    edx,DWORD PTR [ebp-0x10]
100329a3:	movzx  ecx,WORD PTR [eax]
100329a6:	mov    WORD PTR [edx],cx
100329a9:	add    eax,0x2
100329ac:	add    edx,0x2
100329af:	cmp    cx,bx
100329b2:	jne    0x100329a3
100329b4:	mov    esi,DWORD PTR [esi+0x14]
100329b7:	lea    ecx,[ebp-0x5c]
100329ba:	push   ecx
100329bb:	push   ebx
100329bc:	push   esi
100329bd:	mov    esi,DWORD PTR [ebp-0x10]
100329c0:	push   esi
100329c1:	call   DWORD PTR ds:0x10065390
100329c7:	test   eax,eax
100329c9:	jne    0x10032a66
100329cf:	push   esi
100329d0:	call   0x10041d92
100329d5:	mov    esi,0x10
100329da:	add    esp,0x4
100329dd:	cmp    DWORD PTR [ebp+0x90],esi
100329e3:	jb     0x100329f1
100329e5:	mov    edx,DWORD PTR [ebp+0x7c]
100329e8:	push   edx
100329e9:	call   0x10041d92
100329ee:	add    esp,0x4
100329f1:	cmp    DWORD PTR [ebp+0x74],esi
100329f4:	mov    DWORD PTR [ebp+0x90],edi
100329fa:	mov    DWORD PTR [ebp+0x8c],ebx
10032a00:	mov    BYTE PTR [ebp+0x7c],bl
10032a03:	jb     0x10032a11
10032a05:	mov    eax,DWORD PTR [ebp+0x60]
10032a08:	push   eax
10032a09:	call   0x10041d92
10032a0e:	add    esp,0x4
10032a11:	cmp    DWORD PTR [ebp+0x58],esi
10032a14:	mov    DWORD PTR [ebp+0x74],edi
10032a17:	mov    DWORD PTR [ebp+0x70],ebx
10032a1a:	mov    BYTE PTR [ebp+0x60],bl
10032a1d:	jb     0x10032a2b
10032a1f:	mov    ecx,DWORD PTR [ebp+0x44]
10032a22:	push   ecx
10032a23:	call   0x10041d92
10032a28:	add    esp,0x4
10032a2b:	cmp    DWORD PTR [ebp+0x3c],esi
10032a2e:	mov    DWORD PTR [ebp+0x58],edi
10032a31:	mov    DWORD PTR [ebp+0x54],ebx
10032a34:	mov    BYTE PTR [ebp+0x44],bl
10032a37:	jb     0x10032a45
10032a39:	mov    edx,DWORD PTR [ebp+0x28]
10032a3c:	push   edx
10032a3d:	call   0x10041d92
10032a42:	add    esp,0x4
10032a45:	cmp    DWORD PTR [ebp+0x1c],esi
10032a48:	mov    DWORD PTR [ebp+0x3c],edi
10032a4b:	mov    DWORD PTR [ebp+0x38],ebx
10032a4e:	mov    BYTE PTR [ebp+0x28],bl
10032a51:	jb     0x10032a5f
10032a53:	mov    eax,DWORD PTR [ebp+0x8]
10032a56:	push   eax
10032a57:	call   0x10041d92
10032a5c:	add    esp,0x4
10032a5f:	xor    al,al
10032a61:	jmp    0x10032b67
10032a66:	mov    ecx,DWORD PTR [ebp-0x50]
10032a69:	mov    eax,DWORD PTR [ebp-0x48]
10032a6c:	mov    dx,WORD PTR [ebp-0x44]
10032a70:	mov    DWORD PTR [ebp+0x0],ecx
10032a73:	push   eax
10032a74:	lea    ecx,[ebp+0x4]
10032a77:	push   ecx
10032a78:	mov    ecx,DWORD PTR [ebp-0x4c]
10032a7b:	mov    WORD PTR [ebp+0x20],dx
10032a7f:	call   0x10032b90
10032a84:	mov    edx,DWORD PTR [ebp-0x3c]
10032a87:	mov    ecx,DWORD PTR [ebp-0x40]
10032a8a:	push   edx
10032a8b:	lea    eax,[ebp+0x24]
10032a8e:	push   eax
10032a8f:	call   0x10032b90
10032a94:	mov    ecx,DWORD PTR [ebp-0x34]
10032a97:	push   ecx
10032a98:	mov    ecx,DWORD PTR [ebp-0x38]
10032a9b:	lea    edx,[ebp+0x40]
10032a9e:	push   edx
10032a9f:	call   0x10032b90
10032aa4:	mov    eax,DWORD PTR [ebp-0x2c]
10032aa7:	push   eax
10032aa8:	lea    ecx,[ebp+0x5c]
10032aab:	push   ecx
10032aac:	mov    ecx,DWORD PTR [ebp-0x30]
10032aaf:	call   0x10032b90
10032ab4:	mov    edx,DWORD PTR [ebp-0x24]
10032ab7:	mov    ecx,DWORD PTR [ebp-0x28]
10032aba:	push   edx
10032abb:	lea    eax,[ebp+0x78]
10032abe:	push   eax
10032abf:	call   0x10032b90
10032ac4:	mov    esi,DWORD PTR [ebp-0x20]
10032ac7:	add    esp,0x28
10032aca:	lea    eax,[ebp+0x0]
10032acd:	call   0x10032d40
10032ad2:	mov    ecx,DWORD PTR [ebp-0x10]
10032ad5:	push   ecx
10032ad6:	call   0x10041d92
10032adb:	mov    esi,0x10
10032ae0:	add    esp,0x4
10032ae3:	cmp    DWORD PTR [ebp+0x90],esi
10032ae9:	jb     0x10032af7
10032aeb:	mov    edx,DWORD PTR [ebp+0x7c]
10032aee:	push   edx
10032aef:	call   0x10041d92
10032af4:	add    esp,0x4
10032af7:	cmp    DWORD PTR [ebp+0x74],esi
10032afa:	mov    DWORD PTR [ebp+0x90],edi
10032b00:	mov    DWORD PTR [ebp+0x8c],ebx
10032b06:	mov    BYTE PTR [ebp+0x7c],bl
10032b09:	jb     0x10032b17
10032b0b:	mov    eax,DWORD PTR [ebp+0x60]
10032b0e:	push   eax
10032b0f:	call   0x10041d92
10032b14:	add    esp,0x4
10032b17:	cmp    DWORD PTR [ebp+0x58],esi
10032b1a:	mov    DWORD PTR [ebp+0x74],edi
10032b1d:	mov    DWORD PTR [ebp+0x70],ebx
10032b20:	mov    BYTE PTR [ebp+0x60],bl
10032b23:	jb     0x10032b31
10032b25:	mov    ecx,DWORD PTR [ebp+0x44]
10032b28:	push   ecx
10032b29:	call   0x10041d92
10032b2e:	add    esp,0x4
10032b31:	cmp    DWORD PTR [ebp+0x3c],esi
10032b34:	mov    DWORD PTR [ebp+0x58],edi
10032b37:	mov    DWORD PTR [ebp+0x54],ebx
10032b3a:	mov    BYTE PTR [ebp+0x44],bl
10032b3d:	jb     0x10032b4b
10032b3f:	mov    edx,DWORD PTR [ebp+0x28]
10032b42:	push   edx
10032b43:	call   0x10041d92
10032b48:	add    esp,0x4
10032b4b:	cmp    DWORD PTR [ebp+0x1c],esi
10032b4e:	mov    DWORD PTR [ebp+0x3c],edi
10032b51:	mov    DWORD PTR [ebp+0x38],ebx
10032b54:	mov    BYTE PTR [ebp+0x28],bl
10032b57:	jb     0x10032b65
10032b59:	mov    eax,DWORD PTR [ebp+0x8]
10032b5c:	push   eax
10032b5d:	call   0x10041d92
10032b62:	add    esp,0x4
10032b65:	mov    al,0x1
10032b67:	lea    esp,[ebp-0x6c]
10032b6a:	mov    ecx,DWORD PTR [ebp-0xc]
10032b6d:	mov    DWORD PTR fs:0x0,ecx
10032b74:	pop    ecx
10032b75:	pop    edi
10032b76:	pop    esi
10032b77:	pop    ebx
10032b78:	mov    ecx,DWORD PTR [ebp+0x94]
10032b7e:	xor    ecx,ebp
10032b80:	call   0x10041d97
10032b85:	add    ebp,0x98
10032b8b:	mov    esp,ebp
10032b8d:	pop    ebp
10032b8e:	ret    
10032b8f:	int3   
10032b90:	push   ebp
10032b91:	mov    ebp,esp
10032b93:	push   0xffffffff
10032b95:	push   0x1005f6ea
10032b9a:	mov    eax,fs:0x0
10032ba0:	push   eax
10032ba1:	sub    esp,0x4c
10032ba4:	mov    eax,ds:0x1007d030
10032ba9:	xor    eax,ebp
10032bab:	mov    DWORD PTR [ebp-0x10],eax
10032bae:	push   ebx
10032baf:	push   esi
10032bb0:	push   edi
10032bb1:	push   eax
10032bb2:	lea    eax,[ebp-0xc]
10032bb5:	mov    fs:0x0,eax
10032bbb:	mov    ebx,ecx
10032bbd:	xor    esi,esi
10032bbf:	mov    DWORD PTR [ebp-0x1c],esi
10032bc2:	call   DWORD PTR ds:0x1007dfe4
10032bc8:	xor    edi,edi
10032bca:	mov    DWORD PTR [ebp-0x18],eax
10032bcd:	mov    DWORD PTR [ebp-0x14],edi
10032bd0:	cmp    DWORD PTR [ebp+0xc],esi
10032bd3:	mov    DWORD PTR [ebp-0x4],esi
10032bd6:	je     0x10032c74
10032bdc:	cmp    ebx,esi
10032bde:	je     0x10032c74
10032be4:	push   ebx
10032be5:	call   DWORD PTR ds:0x100650e0
10032beb:	push   esi
10032bec:	add    eax,0x1
10032bef:	cdq    
10032bf0:	push   0x2
10032bf2:	push   edx
10032bf3:	push   eax
10032bf4:	call   0x1004b7c0
10032bf9:	mov    edi,eax
10032bfb:	add    eax,0x80000000
10032c00:	adc    edx,esi
10032c02:	mov    DWORD PTR [ebp-0x1c],edx
10032c05:	jne    0x10032c0c
10032c07:	cmp    eax,0xffffffff
10032c0a:	jbe    0x10032c10
10032c0c:	xor    eax,eax
10032c0e:	jmp    0x10032c48
10032c10:	cmp    edi,0x400
10032c16:	jg     0x10032c30
10032c18:	push   edi
10032c19:	call   0x100066d7
10032c1e:	add    esp,0x4
10032c21:	test   al,al
10032c23:	je     0x10032c30
10032c25:	mov    eax,edi
10032c27:	call   0x10049010
10032c2c:	mov    eax,esp
10032c2e:	jmp    0x10032c39
10032c30:	push   edi
10032c31:	lea    esi,[ebp-0x14]
10032c34:	call   0x10007103
10032c39:	mov    ecx,DWORD PTR [ebp-0x18]
10032c3c:	push   ecx
10032c3d:	push   edi
10032c3e:	push   ebx
10032c3f:	mov    esi,eax
10032c41:	call   0x1000677e
10032c46:	xor    esi,esi
10032c48:	mov    edx,DWORD PTR [ebp+0xc]
10032c4b:	push   edx
10032c4c:	push   eax
10032c4d:	lea    ecx,[ebp-0x58]
10032c50:	mov    DWORD PTR [ebp-0x40],0xf
10032c57:	mov    DWORD PTR [ebp-0x44],esi
10032c5a:	mov    BYTE PTR [ebp-0x54],0x0
10032c5e:	call   0x10001344
10032c63:	mov    BYTE PTR [ebp-0x4],0x1
10032c67:	mov    edi,DWORD PTR [ebp-0x14]
10032c6a:	lea    eax,[ebp-0x58]
10032c6d:	mov    ebx,0x1
10032c72:	jmp    0x10032ca8
10032c74:	push   0x1006bb18
10032c79:	mov    DWORD PTR [ebp-0x24],0xf
10032c80:	mov    DWORD PTR [ebp-0x28],esi
10032c83:	mov    BYTE PTR [ebp-0x38],0x0
10032c87:	call   0x10041f10
10032c8c:	add    esp,0x4
10032c8f:	push   eax
10032c90:	push   0x1006bb18
10032c95:	lea    ecx,[ebp-0x3c]
10032c98:	call   0x10001344
10032c9d:	mov    ebx,0x2
10032ca2:	lea    eax,[ebp-0x3c]
10032ca5:	mov    DWORD PTR [ebp-0x4],ebx
10032ca8:	mov    ecx,DWORD PTR [ebp+0x8]
10032cab:	push   0xffffffff
10032cad:	push   esi
10032cae:	push   eax
10032caf:	mov    DWORD PTR [ebp-0x1c],ebx
10032cb2:	call   0x1000124a
10032cb7:	test   bl,0x2
10032cba:	je     0x10032cdf
10032cbc:	and    ebx,0xfffffffd
10032cbf:	cmp    DWORD PTR [ebp-0x24],0x10
10032cc3:	jb     0x10032cd1
10032cc5:	mov    eax,DWORD PTR [ebp-0x38]
10032cc8:	push   eax
10032cc9:	call   0x10041d92
10032cce:	add    esp,0x4
10032cd1:	mov    DWORD PTR [ebp-0x24],0xf
10032cd8:	mov    DWORD PTR [ebp-0x28],esi
10032cdb:	mov    BYTE PTR [ebp-0x38],0x0
10032cdf:	test   bl,0x1
10032ce2:	je     0x10032cf6
10032ce4:	cmp    DWORD PTR [ebp-0x40],0x10
10032ce8:	jb     0x10032cf6
10032cea:	mov    ecx,DWORD PTR [ebp-0x54]
10032ced:	push   ecx
10032cee:	call   0x10041d92
10032cf3:	add    esp,0x4
10032cf6:	cmp    edi,esi
10032cf8:	je     0x10032d17
10032cfa:	jmp    0x10032d03
10032cfc:	lea    esp,[esp+0x0]
10032d00:	mov    edi,DWORD PTR [ebp-0x14]
10032d03:	mov    eax,edi
10032d05:	mov    edi,DWORD PTR [edi]
10032d07:	push   eax
10032d08:	mov    DWORD PTR [ebp-0x14],edi
10032d0b:	call   0x10042408
10032d10:	add    esp,0x4
10032d13:	cmp    edi,esi
10032d15:	jne    0x10032d00
10032d17:	lea    esp,[ebp-0x68]
10032d1a:	mov    ecx,DWORD PTR [ebp-0xc]
10032d1d:	mov    DWORD PTR fs:0x0,ecx
10032d24:	pop    ecx
10032d25:	pop    edi
10032d26:	pop    esi
10032d27:	pop    ebx
10032d28:	mov    ecx,DWORD PTR [ebp-0x10]
10032d2b:	xor    ecx,ebp
10032d2d:	call   0x10041d97
10032d32:	mov    esp,ebp
10032d34:	pop    ebp
10032d35:	ret    
10032d36:	int3   
10032d37:	int3   
10032d38:	int3   
10032d39:	int3   
10032d3a:	int3   
10032d3b:	int3   
10032d3c:	int3   
10032d3d:	int3   
10032d3e:	int3   
10032d3f:	int3   
10032d40:	push   edi
10032d41:	mov    edi,eax
10032d43:	mov    eax,DWORD PTR [edi]
10032d45:	push   0xffffffff
10032d47:	push   0x0
10032d49:	lea    ecx,[edi+0x4]
10032d4c:	push   ecx
10032d4d:	lea    ecx,[esi+0x4]
10032d50:	mov    DWORD PTR [esi],eax
10032d52:	call   0x1000124a
10032d57:	mov    dx,WORD PTR [edi+0x20]
10032d5b:	push   0xffffffff
10032d5d:	push   0x0
10032d5f:	lea    eax,[edi+0x24]
10032d62:	push   eax
10032d63:	lea    ecx,[esi+0x24]
10032d66:	mov    WORD PTR [esi+0x20],dx
10032d6a:	call   0x1000124a
10032d6f:	push   0xffffffff
10032d71:	push   0x0
10032d73:	lea    ecx,[edi+0x40]
10032d76:	push   ecx
10032d77:	lea    ecx,[esi+0x40]
10032d7a:	call   0x1000124a
10032d7f:	push   0xffffffff
10032d81:	push   0x0
10032d83:	lea    edx,[edi+0x5c]
10032d86:	push   edx
10032d87:	lea    ecx,[esi+0x5c]
10032d8a:	call   0x1000124a
10032d8f:	push   0xffffffff
10032d91:	push   0x0
10032d93:	add    edi,0x78
10032d96:	push   edi
10032d97:	lea    ecx,[esi+0x78]
10032d9a:	call   0x1000124a
10032d9f:	mov    eax,esi
10032da1:	pop    edi
10032da2:	ret    
10032da3:	int3   
10032da4:	int3   
10032da5:	int3   
10032da6:	int3   
10032da7:	int3   
10032da8:	int3   
10032da9:	int3   
10032daa:	int3   
10032dab:	int3   
10032dac:	int3   
10032dad:	int3   
10032dae:	int3   
10032daf:	int3   
10032db0:	push   0xffffffff
10032db2:	push   0x100606a9
10032db7:	mov    eax,fs:0x0
10032dbd:	push   eax
10032dbe:	sub    esp,0x4c
10032dc1:	push   ebx
10032dc2:	push   esi
10032dc3:	push   edi
10032dc4:	mov    eax,ds:0x1007d030
10032dc9:	xor    eax,esp
10032dcb:	push   eax
10032dcc:	lea    eax,[esp+0x5c]
10032dd0:	mov    fs:0x0,eax
10032dd6:	mov    edi,DWORD PTR [esp+0x6c]
10032dda:	xor    ebx,ebx
10032ddc:	mov    DWORD PTR [esp+0x64],ebx
10032de0:	mov    DWORD PTR [esp+0x10],ebx
10032de4:	mov    eax,ds:0x1007fa54
10032de9:	mov    edx,DWORD PTR [eax+0xc]
10032dec:	mov    ecx,0x1007fa54
10032df1:	call   edx
10032df3:	add    eax,0x10
10032df6:	mov    DWORD PTR [edi],eax
10032df8:	mov    DWORD PTR [esp+0x64],ebx
10032dfc:	mov    ecx,0x1
10032e01:	sub    ecx,DWORD PTR [eax-0x4]
10032e04:	mov    eax,DWORD PTR [eax-0x8]
10032e07:	sub    eax,0x800
10032e0c:	or     eax,ecx
10032e0e:	mov    DWORD PTR [esp+0x10],0x1
10032e16:	jge    0x10032e24
10032e18:	mov    eax,0x800
10032e1d:	mov    ecx,edi
10032e1f:	call   0x10002267
10032e24:	mov    eax,DWORD PTR [edi]
10032e26:	push   0x800
10032e2b:	push   eax
10032e2c:	call   DWORD PTR ds:0x10065258
10032e32:	test   eax,eax
10032e34:	jne    0x10032ed7
10032e3a:	push   0x26247506
10032e3f:	push   0x10072164
10032e44:	call   0x10003d63
10032e49:	push   0x5164500e
10032e4e:	push   eax
10032e4f:	call   0x10003d63
10032e54:	push   eax
10032e55:	push   0x1c
10032e57:	push   0x100721a4
10032e5c:	call   0x10003d75
10032e61:	mov    esi,eax
10032e63:	mov    edi,0xf
10032e68:	push   esi
10032e69:	mov    DWORD PTR [esp+0x4c],edi
10032e6d:	mov    DWORD PTR [esp+0x48],ebx
10032e71:	mov    BYTE PTR [esp+0x38],bl
10032e75:	call   0x10041f10
10032e7a:	add    esp,0x20
10032e7d:	push   eax
10032e7e:	push   esi
10032e7f:	lea    ecx,[esp+0x1c]
10032e83:	call   0x10001344
10032e88:	lea    ecx,[esp+0x30]
10032e8c:	mov    DWORD PTR [esp+0x64],0x1
10032e94:	call   0x10041e01
10032e99:	push   0xffffffff
10032e9b:	mov    BYTE PTR [esp+0x68],0x2
10032ea0:	push   ebx
10032ea1:	lea    eax,[esp+0x1c]
10032ea5:	push   eax
10032ea6:	lea    ecx,[esp+0x48]
10032eaa:	mov    DWORD PTR [esp+0x3c],0x10072304
10032eb2:	mov    DWORD PTR [esp+0x60],edi
10032eb6:	mov    DWORD PTR [esp+0x5c],ebx
10032eba:	mov    BYTE PTR [esp+0x4c],bl
10032ebe:	call   0x1000124a
10032ec3:	push   0x10073924
10032ec8:	lea    ecx,[esp+0x34]
10032ecc:	push   ecx
10032ecd:	mov    BYTE PTR [esp+0x6c],0x1
10032ed2:	call   0x10046704
10032ed7:	mov    eax,DWORD PTR [edi]
10032ed9:	cmp    eax,ebx
10032edb:	jne    0x10032ee1
10032edd:	xor    eax,eax
10032edf:	jmp    0x10032eee
10032ee1:	push   eax
10032ee2:	call   0x100425f3
10032ee7:	add    esp,0x4
10032eea:	cmp    eax,ebx
10032eec:	jl     0x10032f32
10032eee:	mov    ecx,DWORD PTR [edi]
10032ef0:	cmp    eax,DWORD PTR [ecx-0x8]
10032ef3:	jg     0x10032f32
10032ef5:	mov    DWORD PTR [ecx-0xc],eax
10032ef8:	mov    edx,DWORD PTR [edi]
10032efa:	mov    WORD PTR [edx+eax*2],bx
10032efe:	mov    ecx,DWORD PTR [edi]
10032f00:	mov    edx,DWORD PTR [ecx-0xc]
10032f03:	lea    eax,[edx-0x1]
10032f06:	cmp    eax,ebx
10032f08:	jl     0x10032f32
10032f0a:	cmp    eax,edx
10032f0c:	jg     0x10032f32
10032f0e:	movzx  eax,WORD PTR [ecx+eax*2]
10032f12:	cmp    ax,0x5c
10032f16:	je     0x10032f1d
10032f18:	call   0x100342c0
10032f1d:	mov    eax,edi
10032f1f:	mov    ecx,DWORD PTR [esp+0x5c]
10032f23:	mov    DWORD PTR fs:0x0,ecx
10032f2a:	pop    ecx
10032f2b:	pop    edi
10032f2c:	pop    esi
10032f2d:	pop    ebx
10032f2e:	add    esp,0x58
10032f31:	ret    
10032f32:	push   0x80070057
10032f37:	call   0x10001f41
10032f3c:	int3   
10032f3d:	int3   
10032f3e:	int3   
10032f3f:	int3   
10032f40:	push   0xffffffff
10032f42:	push   0x100613d9
10032f47:	mov    eax,fs:0x0
10032f4d:	push   eax
10032f4e:	sub    esp,0x50
10032f51:	push   ebx
10032f52:	push   ebp
10032f53:	push   esi
10032f54:	push   edi
10032f55:	mov    eax,ds:0x1007d030
10032f5a:	xor    eax,esp
10032f5c:	push   eax
10032f5d:	lea    eax,[esp+0x64]
10032f61:	mov    fs:0x0,eax
10032f67:	mov    esi,DWORD PTR [esp+0x74]
10032f6b:	xor    ebx,ebx
10032f6d:	mov    DWORD PTR [esp+0x6c],ebx
10032f71:	push   esi
10032f72:	mov    DWORD PTR [esp+0x1c],ebx
10032f76:	call   0x10032db0
10032f7b:	add    esp,0x4
10032f7e:	mov    DWORD PTR [esp+0x6c],ebx
10032f82:	mov    eax,DWORD PTR [esi]
10032f84:	mov    ebp,0x1
10032f89:	sub    eax,0x10
10032f8c:	cmp    DWORD PTR [eax+0xc],ebp
10032f8f:	mov    DWORD PTR [esp+0x18],ebp
10032f93:	jle    0x10032f9f
10032f95:	mov    eax,DWORD PTR [eax+0x4]
10032f98:	push   eax
10032f99:	push   esi
10032f9a:	call   0x100022b0
10032f9f:	mov    eax,DWORD PTR [esi]
10032fa1:	push   0x5c
10032fa3:	push   eax
10032fa4:	call   0x100571b7
10032fa9:	mov    edi,eax
10032fab:	add    esp,0x8
10032fae:	cmp    edi,ebx
10032fb0:	jne    0x10033052
10032fb6:	push   0x35395bbe
10032fbb:	push   0x100721c4
10032fc0:	call   0x10003d63
10032fc5:	push   0x6b817bf0
10032fca:	push   eax
10032fcb:	call   0x10003d63
10032fd0:	push   eax
10032fd1:	push   0x18
10032fd3:	push   0x100721e8
10032fd8:	call   0x10003d75
10032fdd:	mov    esi,eax
10032fdf:	add    esp,0x1c
10032fe2:	mov    edi,0xf
10032fe7:	push   esi
10032fe8:	mov    DWORD PTR [esp+0x38],edi
10032fec:	mov    DWORD PTR [esp+0x34],ebx
10032ff0:	mov    BYTE PTR [esp+0x24],bl
10032ff4:	call   0x10041f10
10032ff9:	add    esp,0x4
10032ffc:	push   eax
10032ffd:	push   esi
10032ffe:	lea    ecx,[esp+0x24]
10033002:	call   0x10001344
10033007:	lea    ecx,[esp+0x38]
1003300b:	mov    DWORD PTR [esp+0x6c],ebp
1003300f:	call   0x10041e01
10033014:	push   0xffffffff
10033016:	mov    BYTE PTR [esp+0x70],0x2
1003301b:	push   ebx
1003301c:	lea    ecx,[esp+0x24]
10033020:	push   ecx
10033021:	lea    ecx,[esp+0x50]
10033025:	mov    DWORD PTR [esp+0x44],0x10072304
1003302d:	mov    DWORD PTR [esp+0x68],edi
10033031:	mov    DWORD PTR [esp+0x64],ebx
10033035:	mov    BYTE PTR [esp+0x54],bl
10033039:	call   0x1000124a
1003303e:	push   0x10073924
10033043:	lea    edx,[esp+0x3c]
10033047:	push   edx
10033048:	mov    BYTE PTR [esp+0x74],0x1
1003304d:	call   0x10046704
10033052:	mov    eax,DWORD PTR [esi]
10033054:	sub    eax,0x10
10033057:	cmp    DWORD PTR [eax+0xc],ebp
1003305a:	jle    0x10033066
1003305c:	mov    eax,DWORD PTR [eax+0x4]
1003305f:	push   eax
10033060:	push   esi
10033061:	call   0x100022b0
10033066:	mov    eax,DWORD PTR [esi]
10033068:	sub    edi,eax
1003306a:	sar    edi,1
1003306c:	add    edi,ebp
1003306e:	cmp    eax,ebx
10033070:	jne    0x10033076
10033072:	xor    eax,eax
10033074:	jmp    0x10033083
10033076:	push   eax
10033077:	call   0x100425f3
1003307c:	add    esp,0x4
1003307f:	cmp    eax,ebx
10033081:	jl     0x100330d9
10033083:	mov    ecx,DWORD PTR [esi]
10033085:	cmp    eax,DWORD PTR [ecx-0x8]
10033088:	jg     0x100330d9
1003308a:	mov    DWORD PTR [ecx-0xc],eax
1003308d:	mov    ecx,DWORD PTR [esi]
1003308f:	mov    WORD PTR [ecx+eax*2],bx
10033093:	mov    eax,DWORD PTR [esi]
10033095:	sub    eax,0x10
10033098:	mov    ecx,ebp
1003309a:	sub    ecx,DWORD PTR [eax+0xc]
1003309d:	mov    eax,DWORD PTR [eax+0x8]
100330a0:	sub    eax,edi
100330a2:	or     eax,ecx
100330a4:	jge    0x100330af
100330a6:	mov    eax,edi
100330a8:	mov    ecx,esi
100330aa:	call   0x10002267
100330af:	cmp    edi,ebx
100330b1:	jl     0x100330d9
100330b3:	mov    eax,DWORD PTR [esi]
100330b5:	cmp    edi,DWORD PTR [eax-0x8]
100330b8:	jg     0x100330d9
100330ba:	mov    DWORD PTR [eax-0xc],edi
100330bd:	mov    edx,DWORD PTR [esi]
100330bf:	mov    WORD PTR [edx+edi*2],bx
100330c3:	mov    eax,esi
100330c5:	mov    ecx,DWORD PTR [esp+0x64]
100330c9:	mov    DWORD PTR fs:0x0,ecx
100330d0:	pop    ecx
100330d1:	pop    edi
100330d2:	pop    esi
100330d3:	pop    ebp
100330d4:	pop    ebx
100330d5:	add    esp,0x5c
100330d8:	ret    
100330d9:	push   0x80070057
100330de:	call   0x10001f41
100330e3:	int3   
100330e4:	int3   
100330e5:	int3   
100330e6:	int3   
100330e7:	int3   
100330e8:	int3   
100330e9:	int3   
100330ea:	int3   
100330eb:	int3   
100330ec:	int3   
100330ed:	int3   
100330ee:	int3   
100330ef:	int3   
100330f0:	push   ebp
100330f1:	mov    ebp,esp
100330f3:	push   0xffffffff
100330f5:	push   0x10061f2a
100330fa:	mov    eax,fs:0x0
10033100:	push   eax
10033101:	sub    esp,0x134
10033107:	mov    eax,ds:0x1007d030
1003310c:	xor    eax,ebp
1003310e:	mov    DWORD PTR [ebp-0x10],eax
10033111:	push   ebx
10033112:	push   esi
10033113:	push   edi
10033114:	push   eax
10033115:	lea    eax,[ebp-0xc]
10033118:	mov    fs:0x0,eax
1003311e:	call   DWORD PTR ds:0x1007dfe4
10033124:	mov    DWORD PTR [ebp-0x84],eax
1003312a:	lea    eax,[ebp-0x7c]
1003312d:	push   eax
1003312e:	call   0x10032f40
10033133:	add    esp,0x4
10033136:	xor    ebx,ebx
10033138:	push   ebx
10033139:	push   ebx
1003313a:	lea    ecx,[ebp-0x8c]
10033140:	push   ecx
10033141:	lea    edx,[ebp-0x88]
10033147:	push   edx
10033148:	lea    eax,[ebp-0x80]
1003314b:	push   eax
1003314c:	push   ebx
1003314d:	mov    DWORD PTR [ebp-0x4],ebx
10033150:	mov    ecx,DWORD PTR [ebp-0x7c]
10033153:	push   ebx
10033154:	push   ecx
10033155:	call   DWORD PTR ds:0x1006525c
1003315b:	test   eax,eax
1003315d:	jne    0x100332eb
10033163:	call   DWORD PTR ds:0x100650c4
10033169:	push   0xa
1003316b:	lea    edx,[ebp-0x78]
1003316e:	push   edx
1003316f:	push   eax
10033170:	call   0x1004486e
10033175:	mov    eax,DWORD PTR [ebp-0x7c]
10033178:	add    esp,0xc
1003317b:	cmp    eax,ebx
1003317d:	mov    esi,eax
1003317f:	jne    0x10033185
10033181:	xor    edi,edi
10033183:	jmp    0x100331b8
10033185:	push   eax
10033186:	call   DWORD PTR ds:0x100650e0
1003318c:	add    eax,0x1
1003318f:	cmp    eax,0x3fffffff
10033194:	jle    0x1003319a
10033196:	xor    edi,edi
10033198:	jmp    0x100331b8
1003319a:	lea    edi,[eax+eax*1]
1003319d:	mov    eax,edi
1003319f:	call   0x10049010
100331a4:	mov    ecx,DWORD PTR [ebp-0x84]
100331aa:	mov    eax,esp
100331ac:	push   ecx
100331ad:	push   edi
100331ae:	push   esi
100331af:	mov    esi,eax
100331b1:	call   0x1000677e
100331b6:	mov    edi,eax
100331b8:	push   0x5d4172c4
100331bd:	push   0x10072240
100331c2:	call   0x10003d63
100331c7:	push   eax
100331c8:	push   0x21
100331ca:	push   0x10072274
100331cf:	call   0x10003d75
100331d4:	mov    esi,eax
100331d6:	add    esp,0x14
100331d9:	push   esi
100331da:	mov    DWORD PTR [ebp-0x90],0xf
100331e4:	mov    DWORD PTR [ebp-0x94],ebx
100331ea:	mov    BYTE PTR [ebp-0xa4],bl
100331f0:	call   0x10041f10
100331f5:	add    esp,0x4
100331f8:	push   eax
100331f9:	push   esi
100331fa:	lea    ecx,[ebp-0xa8]
10033200:	call   0x10001344
10033205:	push   edi
10033206:	lea    edx,[ebp-0xa8]
1003320c:	push   edx
1003320d:	lea    eax,[ebp-0x140]
10033213:	push   eax
10033214:	mov    BYTE PTR [ebp-0x4],0x1
10033218:	call   0x10005dcb
1003321d:	add    esp,0xc
10033220:	mov    esi,eax
10033222:	push   0x2d25f64c
10033227:	push   0x10072208
1003322c:	mov    BYTE PTR [ebp-0x4],0x2
10033230:	call   0x10003d63
10033235:	push   0x4f516c00
1003323a:	push   eax
1003323b:	call   0x10003d63
10033240:	push   eax
10033241:	push   0x7
10033243:	push   0x10072238
10033248:	call   0x10003d75
1003324d:	add    esp,0x1c
10033250:	push   eax
10033251:	lea    ecx,[ebp-0x124]
10033257:	push   esi
10033258:	push   ecx
10033259:	call   0x10005dcb
1003325e:	add    esp,0xc
10033261:	lea    edx,[ebp-0x78]
10033264:	push   edx
10033265:	push   eax
10033266:	lea    eax,[ebp-0x108]
1003326c:	push   eax
1003326d:	mov    BYTE PTR [ebp-0x4],0x3
10033271:	call   0x10005dcb
10033276:	add    esp,0xc
10033279:	push   0x10072204
1003327e:	push   eax
1003327f:	lea    ecx,[ebp-0xec]
10033285:	push   ecx
10033286:	mov    BYTE PTR [ebp-0x4],0x4
1003328a:	call   0x10005dcb
1003328f:	add    esp,0xc
10033292:	mov    esi,eax
10033294:	lea    ecx,[ebp-0xd0]
1003329a:	mov    BYTE PTR [ebp-0x4],0x5
1003329e:	call   0x10041e01
100332a3:	push   0xffffffff
100332a5:	mov    BYTE PTR [ebp-0x4],0x6
100332a9:	push   ebx
100332aa:	push   esi
100332ab:	lea    ecx,[ebp-0xc4]
100332b1:	mov    DWORD PTR [ebp-0xd0],0x10072304
100332bb:	mov    DWORD PTR [ebp-0xac],0xf
100332c5:	mov    DWORD PTR [ebp-0xb0],ebx
100332cb:	mov    BYTE PTR [ebp-0xc0],bl
100332d1:	call   0x1000124a
100332d6:	push   0x10073924
100332db:	lea    edx,[ebp-0xd0]
100332e1:	push   edx
100332e2:	mov    BYTE PTR [ebp-0x4],0x5
100332e6:	call   0x10046704
100332eb:	mov    esi,DWORD PTR [ebp-0x80]
100332ee:	mov    DWORD PTR [ebp-0x4],0xffffffff
100332f5:	mov    eax,DWORD PTR [ebp-0x7c]
100332f8:	add    eax,0xfffffff0
100332fb:	lea    ecx,[eax+0xc]
100332fe:	or     edx,0xffffffff
10033301:	lock xadd DWORD PTR [ecx],edx
10033305:	dec    edx
10033306:	test   edx,edx
10033308:	jg     0x10033314
1003330a:	mov    ecx,DWORD PTR [eax]
1003330c:	mov    edx,DWORD PTR [ecx]
1003330e:	push   eax
1003330f:	mov    eax,DWORD PTR [edx+0x4]
10033312:	call   eax
10033314:	mov    eax,esi
10033316:	lea    esp,[ebp-0x150]
1003331c:	mov    ecx,DWORD PTR [ebp-0xc]
1003331f:	mov    DWORD PTR fs:0x0,ecx
10033326:	pop    ecx
10033327:	pop    edi
10033328:	pop    esi
10033329:	pop    ebx
1003332a:	mov    ecx,DWORD PTR [ebp-0x10]
1003332d:	xor    ecx,ebp
1003332f:	call   0x10041d97
10033334:	mov    esp,ebp
10033336:	pop    ebp
10033337:	ret    
10033338:	int3   
10033339:	int3   
1003333a:	int3   
1003333b:	int3   
1003333c:	int3   
1003333d:	int3   
1003333e:	int3   
1003333f:	int3   
10033340:	push   ebp
10033341:	mov    ebp,esp
10033343:	sub    esp,0x50
10033346:	mov    eax,ds:0x1007d030
1003334b:	xor    eax,ebp
1003334d:	mov    DWORD PTR [ebp-0x4],eax
10033350:	push   ebx
10033351:	push   esi
10033352:	mov    DWORD PTR [ebp-0x4c],0x0
10033359:	call   0x100330f0
1003335e:	movzx  edx,al
10033361:	shl    edx,0xc
10033364:	shr    eax,0x8
10033367:	or     edx,eax
10033369:	lea    ebx,[ebp-0x48]
1003336c:	call   0x1002f000
10033371:	call   DWORD PTR ds:0x1007dfe4
10033377:	mov    DWORD PTR [ebp-0x4c],eax
1003337a:	mov    eax,ebx
1003337c:	push   eax
1003337d:	call   DWORD PTR ds:0x100650e0
10033383:	add    eax,0x1
10033386:	cmp    eax,0x3fffffff
1003338b:	jg     0x100333c2
1003338d:	lea    esi,[eax+eax*1]
10033390:	mov    eax,esi
10033392:	call   0x10049010
10033397:	mov    ebx,esp
10033399:	test   ebx,ebx
1003339b:	je     0x100333c2
1003339d:	mov    edx,DWORD PTR [ebp-0x4c]
100333a0:	push   0x0
100333a2:	push   0x0
100333a4:	push   esi
100333a5:	push   ebx
100333a6:	push   0xffffffff
100333a8:	lea    ecx,[ebp-0x48]
100333ab:	push   ecx
100333ac:	push   0x0
100333ae:	push   edx
100333af:	mov    BYTE PTR [ebx],0x0
100333b2:	call   DWORD PTR ds:0x100650dc
100333b8:	mov    esi,eax
100333ba:	neg    esi
100333bc:	sbb    esi,esi
100333be:	and    esi,ebx
100333c0:	jmp    0x100333c4
100333c2:	xor    esi,esi
100333c4:	xor    eax,eax
100333c6:	mov    DWORD PTR [edi+0x18],0xf
100333cd:	mov    DWORD PTR [edi+0x14],eax
100333d0:	push   esi
100333d1:	mov    BYTE PTR [edi+0x4],al
100333d4:	call   0x10041f10
100333d9:	add    esp,0x4
100333dc:	push   eax
100333dd:	push   esi
100333de:	mov    ecx,edi
100333e0:	call   0x10001344
100333e5:	mov    eax,edi
100333e7:	lea    esp,[ebp-0x58]
100333ea:	pop    esi
100333eb:	pop    ebx
100333ec:	mov    ecx,DWORD PTR [ebp-0x4]
100333ef:	xor    ecx,ebp
100333f1:	call   0x10041d97
100333f6:	mov    esp,ebp
100333f8:	pop    ebp
100333f9:	ret    
100333fa:	int3   
100333fb:	int3   
100333fc:	int3   
100333fd:	int3   
100333fe:	int3   
100333ff:	int3   
10033400:	push   esi
10033401:	push   edi
10033402:	push   ebx
10033403:	call   DWORD PTR ds:0x10065080
10033409:	mov    esi,eax
1003340b:	test   esi,esi
1003340d:	jne    0x10033411
1003340f:	pop    esi
10033410:	ret    
10033411:	push   edi
10033412:	push   ebx
10033413:	call   DWORD PTR ds:0x10065088
10033419:	mov    ecx,DWORD PTR [esp+0x8]
1003341d:	push   esi
1003341e:	mov    DWORD PTR [ecx],eax
10033420:	call   DWORD PTR ds:0x10065090
10033426:	pop    esi
10033427:	ret    
10033428:	int3   
10033429:	int3   
1003342a:	int3   
1003342b:	int3   
1003342c:	int3   
1003342d:	int3   
1003342e:	int3   
1003342f:	int3   
10033430:	cmp    BYTE PTR ds:0x1007ffc0,0x0
10033437:	jne    0x10033496
10033439:	xor    eax,eax
1003343b:	mov    cl,0x61
1003343d:	lea    ecx,[ecx+0x0]
10033440:	mov    BYTE PTR [eax+0x100803c8],cl
10033446:	add    cl,0x1
10033449:	add    eax,0x1
1003344c:	cmp    cl,0x7a
1003344f:	jle    0x10033440
10033451:	mov    cl,0x41
10033453:	mov    BYTE PTR [eax+0x100803c8],cl
10033459:	add    cl,0x1
1003345c:	add    eax,0x1
1003345f:	cmp    cl,0x5a
10033462:	jle    0x10033453
10033464:	mov    cl,0x30
10033466:	jmp    0x10033470
10033468:	lea    esp,[esp+0x0]
1003346f:	nop
10033470:	mov    BYTE PTR [eax+0x100803c8],cl
10033476:	add    cl,0x1
10033479:	add    eax,0x1
1003347c:	cmp    cl,0x39
1003347f:	jle    0x10033470
10033481:	mov    BYTE PTR [eax+0x100803c8],0x5f
10033488:	mov    BYTE PTR [eax+0x100803c9],0x2d
1003348f:	mov    BYTE PTR ds:0x1007ffc0,0x1
10033496:	mov    eax,0x100803c8
1003349b:	ret    
1003349c:	int3   
1003349d:	int3   
1003349e:	int3   
1003349f:	int3   
100334a0:	cmp    BYTE PTR ds:0x1007ffc1,0x0
100334a7:	jne    0x10033518
100334a9:	push   edi
100334aa:	or     eax,0xffffffff
100334ad:	mov    ecx,0x100
100334b2:	mov    edi,0x1007ffc8
100334b7:	rep stos DWORD PTR es:[edi],eax
100334b9:	xor    eax,eax
100334bb:	mov    ecx,0x1008014c
100334c0:	mov    edx,0x1a
100334c5:	pop    edi
100334c6:	mov    DWORD PTR [ecx],eax
100334c8:	add    eax,0x1
100334cb:	add    ecx,0x4
100334ce:	sub    edx,0x1
100334d1:	jne    0x100334c6
100334d3:	mov    ecx,0x100800cc
100334d8:	mov    edx,0x1a
100334dd:	lea    ecx,[ecx+0x0]
100334e0:	mov    DWORD PTR [ecx],eax
100334e2:	add    eax,0x1
100334e5:	add    ecx,0x4
100334e8:	sub    edx,0x1
100334eb:	jne    0x100334e0
100334ed:	mov    ecx,0x10080088
100334f2:	mov    edx,0xa
100334f7:	mov    DWORD PTR [ecx],eax
100334f9:	add    eax,0x1
100334fc:	add    ecx,0x4
100334ff:	sub    edx,0x1
10033502:	jne    0x100334f7
10033504:	mov    ds:0x10080144,eax
10033509:	add    eax,0x1
1003350c:	mov    ds:0x1008007c,eax
10033511:	mov    BYTE PTR ds:0x1007ffc1,0x1
10033518:	mov    eax,0x1007ffc8
1003351d:	ret    
1003351e:	int3   
1003351f:	int3   
10033520:	push   0xffffffff
10033522:	push   0x10060659
10033527:	mov    eax,fs:0x0
1003352d:	push   eax
1003352e:	sub    esp,0x1c
10033531:	push   ebx
10033532:	push   ebp
10033533:	push   edi
10033534:	mov    eax,ds:0x1007d030
10033539:	xor    eax,esp
1003353b:	push   eax
1003353c:	lea    eax,[esp+0x2c]
10033540:	mov    fs:0x0,eax
10033546:	xor    edi,edi
10033548:	mov    DWORD PTR [esp+0x24],edi
1003354c:	mov    DWORD PTR [esi+0x18],0xf
10033553:	mov    DWORD PTR [esi+0x14],edi
10033556:	mov    DWORD PTR [esp+0x28],esi
1003355a:	mov    DWORD PTR [esp+0x20],edx
1003355e:	mov    BYTE PTR [esi+0x4],0x0
10033562:	mov    DWORD PTR [esp+0x34],edi
10033566:	mov    DWORD PTR [esp+0x24],0x1
1003356e:	call   0x10033430
10033573:	mov    edx,DWORD PTR [edx+0x14]
10033576:	cmp    dx,di
10033579:	mov    DWORD PTR [esp+0x14],eax
1003357d:	mov    DWORD PTR [esp+0x1c],edx
10033581:	mov    DWORD PTR [esp+0x18],edi
10033585:	je     0x100336e2
1003358b:	mov    DWORD PTR [esp+0x10],edi
1003358f:	mov    ebx,DWORD PTR [esp+0x10]
10033593:	mov    edi,DWORD PTR [esp+0x20]
10033597:	cmp    ebx,DWORD PTR [edi+0x14]
1003359a:	jbe    0x100335a1
1003359c:	call   0x100422b0
100335a1:	cmp    DWORD PTR [edi+0x18],0x10
100335a5:	lea    eax,[edi+0x4]
100335a8:	jb     0x100335ac
100335aa:	mov    eax,DWORD PTR [eax]
100335ac:	mov    al,BYTE PTR [ebx+eax*1]
100335af:	xor    al,BYTE PTR [esp+0x18]
100335b3:	mov    ecx,DWORD PTR [esp+0x14]
100335b7:	movzx  ebp,al
100335ba:	or     edx,0xffffffff
100335bd:	sub    edx,DWORD PTR [esi+0x14]
100335c0:	mov    eax,ebp
100335c2:	and    eax,0x3f
100335c5:	cmp    edx,0x1
100335c8:	mov    bl,BYTE PTR [eax+ecx*1]
100335cb:	ja     0x100335d2
100335cd:	call   0x1005600a
100335d2:	mov    edi,DWORD PTR [esi+0x14]
100335d5:	add    edi,0x1
100335d8:	cmp    edi,0xfffffffe
100335db:	jbe    0x100335e2
100335dd:	call   0x1005600a
100335e2:	mov    eax,DWORD PTR [esi+0x18]
100335e5:	cmp    eax,edi
100335e7:	jae    0x10033609
100335e9:	mov    eax,DWORD PTR [esi+0x14]
100335ec:	push   eax
100335ed:	push   edi
100335ee:	mov    ecx,esi
100335f0:	call   0x10001509
100335f5:	test   edi,edi
100335f7:	jbe    0x1003363d
100335f9:	cmp    DWORD PTR [esi+0x18],0x10
100335fd:	mov    ecx,DWORD PTR [esi+0x14]
10033600:	lea    edx,[esi+0x4]
10033603:	jb     0x10033625
10033605:	mov    eax,DWORD PTR [edx]
10033607:	jmp    0x10033627
10033609:	test   edi,edi
1003360b:	jne    0x100335f7
1003360d:	cmp    eax,0x10
10033610:	mov    DWORD PTR [esi+0x14],edi
10033613:	jb     0x1003361d
10033615:	mov    eax,DWORD PTR [esi+0x4]
10033618:	mov    BYTE PTR [eax],0x0
1003361b:	jmp    0x1003363d
1003361d:	lea    eax,[esi+0x4]
10033620:	mov    BYTE PTR [eax],0x0
10033623:	jmp    0x1003363d
10033625:	mov    eax,edx
10033627:	mov    BYTE PTR [eax+ecx*1],bl
1003362a:	cmp    DWORD PTR [esi+0x18],0x10
1003362e:	mov    DWORD PTR [esi+0x14],edi
10033631:	jb     0x10033637
10033633:	mov    eax,DWORD PTR [edx]
10033635:	jmp    0x10033639
10033637:	mov    eax,edx
10033639:	mov    BYTE PTR [eax+edi*1],0x0
1003363d:	mov    ecx,DWORD PTR [esp+0x14]
10033641:	or     edx,0xffffffff
10033644:	sub    edx,DWORD PTR [esi+0x14]
10033647:	shr    ebp,0x6
1003364a:	cmp    edx,0x1
1003364d:	mov    bl,BYTE PTR [ecx+ebp*1]
10033650:	ja     0x10033657
10033652:	call   0x1005600a
10033657:	mov    edi,DWORD PTR [esi+0x14]
1003365a:	add    edi,0x1
1003365d:	cmp    edi,0xfffffffe
10033660:	jbe    0x10033667
10033662:	call   0x1005600a
10033667:	mov    eax,DWORD PTR [esi+0x18]
1003366a:	cmp    eax,edi
1003366c:	jae    0x10033693
1003366e:	mov    eax,DWORD PTR [esi+0x14]
10033671:	push   eax
10033672:	push   edi
10033673:	mov    ecx,esi
10033675:	call   0x10001509
1003367a:	test   edi,edi
1003367c:	jbe    0x100336c7
1003367e:	mov    ecx,DWORD PTR [esi+0x14]
10033681:	mov    edx,0x10
10033686:	cmp    DWORD PTR [esi+0x18],edx
10033689:	lea    ebp,[esi+0x4]
1003368c:	jb     0x100336af
1003368e:	mov    eax,DWORD PTR [ebp+0x0]
10033691:	jmp    0x100336b1
10033693:	test   edi,edi
10033695:	jne    0x1003367c
10033697:	cmp    eax,0x10
1003369a:	mov    DWORD PTR [esi+0x14],edi
1003369d:	jb     0x100336a7
1003369f:	mov    eax,DWORD PTR [esi+0x4]
100336a2:	mov    BYTE PTR [eax],0x0
100336a5:	jmp    0x100336c7
100336a7:	lea    eax,[esi+0x4]
100336aa:	mov    BYTE PTR [eax],0x0
100336ad:	jmp    0x100336c7
100336af:	mov    eax,ebp
100336b1:	mov    BYTE PTR [eax+ecx*1],bl
100336b4:	cmp    DWORD PTR [esi+0x18],edx
100336b7:	mov    DWORD PTR [esi+0x14],edi
100336ba:	jb     0x100336c1
100336bc:	mov    eax,DWORD PTR [ebp+0x0]
100336bf:	jmp    0x100336c3
100336c1:	mov    eax,ebp
100336c3:	mov    BYTE PTR [eax+edi*1],0x0
100336c7:	mov    eax,DWORD PTR [esp+0x18]
100336cb:	add    DWORD PTR [esp+0x10],0x1
100336d0:	add    eax,0x1
100336d3:	cmp    ax,WORD PTR [esp+0x1c]
100336d8:	mov    DWORD PTR [esp+0x18],eax
100336dc:	jne    0x1003358f
100336e2:	movzx  ebp,WORD PTR [esp+0x1c]
100336e7:	mov    edx,DWORD PTR [esp+0x14]
100336eb:	or     eax,0xffffffff
100336ee:	sub    eax,DWORD PTR [esi+0x14]
100336f1:	mov    ecx,ebp
100336f3:	and    ecx,0xf
100336f6:	cmp    eax,0x1
100336f9:	mov    bl,BYTE PTR [ecx+edx*1]
100336fc:	mov    DWORD PTR [esp+0x10],ebp
10033700:	ja     0x10033707
10033702:	call   0x1005600a
10033707:	mov    edi,DWORD PTR [esi+0x14]
1003370a:	add    edi,0x1
1003370d:	cmp    edi,0xfffffffe
10033710:	jbe    0x10033717
10033712:	call   0x1005600a
10033717:	mov    eax,DWORD PTR [esi+0x18]
1003371a:	cmp    eax,edi
1003371c:	jae    0x10033742
1003371e:	mov    ecx,DWORD PTR [esi+0x14]
10033721:	push   ecx
10033722:	push   edi
10033723:	mov    ecx,esi
10033725:	call   0x10001509
1003372a:	test   edi,edi
1003372c:	jbe    0x10033775
1003372e:	mov    ebp,DWORD PTR [esi+0x14]
10033731:	mov    edx,0x10
10033736:	cmp    DWORD PTR [esi+0x18],edx
10033739:	lea    eax,[esi+0x4]
1003373c:	jb     0x1003375e
1003373e:	mov    ecx,DWORD PTR [eax]
10033740:	jmp    0x10033760
10033742:	test   edi,edi
10033744:	jne    0x1003372c
10033746:	cmp    eax,0x10
10033749:	mov    DWORD PTR [esi+0x14],edi
1003374c:	jb     0x10033756
1003374e:	mov    eax,DWORD PTR [esi+0x4]
10033751:	mov    BYTE PTR [eax],0x0
10033754:	jmp    0x10033775
10033756:	lea    eax,[esi+0x4]
10033759:	mov    BYTE PTR [eax],0x0
1003375c:	jmp    0x10033775
1003375e:	mov    ecx,eax
10033760:	mov    BYTE PTR [ecx+ebp*1],bl
10033763:	cmp    DWORD PTR [esi+0x18],edx
10033766:	mov    DWORD PTR [esi+0x14],edi
10033769:	jb     0x1003376d
1003376b:	mov    eax,DWORD PTR [eax]
1003376d:	mov    ebp,DWORD PTR [esp+0x10]
10033771:	mov    BYTE PTR [eax+edi*1],0x0
10033775:	mov    eax,DWORD PTR [esp+0x14]
10033779:	or     ecx,0xffffffff
1003377c:	sub    ecx,DWORD PTR [esi+0x14]
1003377f:	mov    edx,ebp
10033781:	shr    edx,0x4
10033784:	and    edx,0xf
10033787:	cmp    ecx,0x1
1003378a:	mov    bl,BYTE PTR [edx+eax*1]
1003378d:	ja     0x10033794
1003378f:	call   0x1005600a
10033794:	mov    edi,DWORD PTR [esi+0x14]
10033797:	add    edi,0x1
1003379a:	cmp    edi,0xfffffffe
1003379d:	jbe    0x100337a4
1003379f:	call   0x1005600a
100337a4:	mov    eax,DWORD PTR [esi+0x18]
100337a7:	cmp    eax,edi
100337a9:	jae    0x100337cf
100337ab:	mov    edx,DWORD PTR [esi+0x14]
100337ae:	push   edx
100337af:	push   edi
100337b0:	mov    ecx,esi
100337b2:	call   0x10001509
100337b7:	test   edi,edi
100337b9:	jbe    0x10033802
100337bb:	mov    ebp,DWORD PTR [esi+0x14]
100337be:	mov    edx,0x10
100337c3:	cmp    DWORD PTR [esi+0x18],edx
100337c6:	lea    eax,[esi+0x4]
100337c9:	jb     0x100337eb
100337cb:	mov    ecx,DWORD PTR [eax]
100337cd:	jmp    0x100337ed
100337cf:	test   edi,edi
100337d1:	jne    0x100337b9
100337d3:	cmp    eax,0x10
100337d6:	mov    DWORD PTR [esi+0x14],edi
100337d9:	jb     0x100337e3
100337db:	mov    eax,DWORD PTR [esi+0x4]
100337de:	mov    BYTE PTR [eax],0x0
100337e1:	jmp    0x10033802
100337e3:	lea    eax,[esi+0x4]
100337e6:	mov    BYTE PTR [eax],0x0
100337e9:	jmp    0x10033802
100337eb:	mov    ecx,eax
100337ed:	mov    BYTE PTR [ecx+ebp*1],bl
100337f0:	cmp    DWORD PTR [esi+0x18],edx
100337f3:	mov    DWORD PTR [esi+0x14],edi
100337f6:	jb     0x100337fa
100337f8:	mov    eax,DWORD PTR [eax]
100337fa:	mov    ebp,DWORD PTR [esp+0x10]
100337fe:	mov    BYTE PTR [eax+edi*1],0x0
10033802:	mov    ecx,DWORD PTR [esp+0x14]
10033806:	or     edx,0xffffffff
10033809:	sub    edx,DWORD PTR [esi+0x14]
1003380c:	mov    eax,ebp
1003380e:	shr    eax,0x8
10033811:	and    eax,0xf
10033814:	cmp    edx,0x1
10033817:	mov    bl,BYTE PTR [eax+ecx*1]
1003381a:	ja     0x10033821
1003381c:	call   0x1005600a
10033821:	mov    edi,DWORD PTR [esi+0x14]
10033824:	add    edi,0x1
10033827:	cmp    edi,0xfffffffe
1003382a:	jbe    0x10033831
1003382c:	call   0x1005600a
10033831:	mov    eax,DWORD PTR [esi+0x18]
10033834:	cmp    eax,edi
10033836:	jae    0x1003385c
10033838:	mov    eax,DWORD PTR [esi+0x14]
1003383b:	push   eax
1003383c:	push   edi
1003383d:	mov    ecx,esi
1003383f:	call   0x10001509
10033844:	test   edi,edi
10033846:	jbe    0x1003388f
10033848:	mov    ebp,DWORD PTR [esi+0x14]
1003384b:	mov    edx,0x10
10033850:	cmp    DWORD PTR [esi+0x18],edx
10033853:	lea    eax,[esi+0x4]
10033856:	jb     0x10033878
10033858:	mov    ecx,DWORD PTR [eax]
1003385a:	jmp    0x1003387a
1003385c:	test   edi,edi
1003385e:	jne    0x10033846
10033860:	cmp    eax,0x10
10033863:	mov    DWORD PTR [esi+0x14],edi
10033866:	jb     0x10033870
10033868:	mov    eax,DWORD PTR [esi+0x4]
1003386b:	mov    BYTE PTR [eax],0x0
1003386e:	jmp    0x1003388f
10033870:	lea    eax,[esi+0x4]
10033873:	mov    BYTE PTR [eax],0x0
10033876:	jmp    0x1003388f
10033878:	mov    ecx,eax
1003387a:	mov    BYTE PTR [ecx+ebp*1],bl
1003387d:	cmp    DWORD PTR [esi+0x18],edx
10033880:	mov    DWORD PTR [esi+0x14],edi
10033883:	jb     0x10033887
10033885:	mov    eax,DWORD PTR [eax]
10033887:	mov    ebp,DWORD PTR [esp+0x10]
1003388b:	mov    BYTE PTR [eax+edi*1],0x0
1003388f:	mov    ecx,DWORD PTR [esp+0x14]
10033893:	or     edx,0xffffffff
10033896:	sub    edx,DWORD PTR [esi+0x14]
10033899:	shr    ebp,0xc
1003389c:	cmp    edx,0x1
1003389f:	mov    bl,BYTE PTR [ecx+ebp*1]
100338a2:	ja     0x100338a9
100338a4:	call   0x1005600a
100338a9:	mov    edi,DWORD PTR [esi+0x14]
100338ac:	add    edi,0x1
100338af:	cmp    edi,0xfffffffe
100338b2:	jbe    0x100338b9
100338b4:	call   0x1005600a
100338b9:	mov    eax,DWORD PTR [esi+0x18]
100338bc:	cmp    eax,edi
100338be:	jae    0x100338e4
100338c0:	mov    eax,DWORD PTR [esi+0x14]
100338c3:	push   eax
100338c4:	push   edi
100338c5:	mov    ecx,esi
100338c7:	call   0x10001509
100338cc:	test   edi,edi
100338ce:	jbe    0x10033913
100338d0:	mov    ebp,DWORD PTR [esi+0x14]
100338d3:	mov    edx,0x10
100338d8:	cmp    DWORD PTR [esi+0x18],edx
100338db:	lea    eax,[esi+0x4]
100338de:	jb     0x10033900
100338e0:	mov    ecx,DWORD PTR [eax]
100338e2:	jmp    0x10033902
100338e4:	test   edi,edi
100338e6:	jne    0x100338ce
100338e8:	cmp    eax,0x10
100338eb:	mov    DWORD PTR [esi+0x14],edi
100338ee:	jb     0x100338f8
100338f0:	mov    eax,DWORD PTR [esi+0x4]
100338f3:	mov    BYTE PTR [eax],0x0
100338f6:	jmp    0x10033913
100338f8:	lea    eax,[esi+0x4]
100338fb:	mov    BYTE PTR [eax],0x0
100338fe:	jmp    0x10033913
10033900:	mov    ecx,eax
10033902:	mov    BYTE PTR [ecx+ebp*1],bl
10033905:	cmp    DWORD PTR [esi+0x18],edx
10033908:	mov    DWORD PTR [esi+0x14],edi
1003390b:	jb     0x1003390f
1003390d:	mov    eax,DWORD PTR [eax]
1003390f:	mov    BYTE PTR [eax+edi*1],0x0
10033913:	push   0x64f7b4a6
10033918:	push   0x10072298
1003391d:	call   0x10003d63
10033922:	push   0x87c4156
10033927:	push   eax
10033928:	call   0x10003d63
1003392d:	push   0x4d8bb9f0
10033932:	push   eax
10033933:	call   0x10003d63
10033938:	push   0x5e75326
1003393d:	push   eax
1003393e:	call   0x10003d63
10033943:	push   eax
10033944:	push   0x7
10033946:	push   0x100722d0
1003394b:	call   0x10003d75
10033950:	mov    edi,eax
10033952:	push   edi
10033953:	call   0x10041f10
10033958:	add    esp,0x30
1003395b:	push   eax
1003395c:	push   edi
1003395d:	mov    eax,esi
1003395f:	call   0x10005f16
10033964:	mov    eax,esi
10033966:	mov    ecx,DWORD PTR [esp+0x2c]
1003396a:	mov    DWORD PTR fs:0x0,ecx
10033971:	pop    ecx
10033972:	pop    edi
10033973:	pop    ebp
10033974:	pop    ebx
10033975:	add    esp,0x28
10033978:	ret    
10033979:	int3   
1003397a:	int3   
1003397b:	int3   
1003397c:	int3   
1003397d:	int3   
1003397e:	int3   
1003397f:	int3   
10033980:	push   ebp
10033981:	mov    ebp,esp
10033983:	push   0xffffffff
10033985:	push   0x10060610
1003398a:	mov    eax,fs:0x0
10033990:	push   eax
10033991:	sub    esp,0x9c
10033997:	mov    eax,ds:0x1007d030
1003399c:	xor    eax,ebp
1003399e:	mov    DWORD PTR [ebp-0x14],eax
100339a1:	push   ebx
100339a2:	push   esi
100339a3:	push   edi
100339a4:	push   eax
100339a5:	lea    eax,[ebp-0xc]
100339a8:	mov    fs:0x0,eax
100339ae:	mov    DWORD PTR [ebp-0x10],esp
100339b1:	xor    ebx,ebx
100339b3:	mov    DWORD PTR [ebp-0x4],ebx
100339b6:	mov    edi,ecx
100339b8:	mov    DWORD PTR [ebp-0x58],edi
100339bb:	mov    esi,edx
100339bd:	mov    DWORD PTR [ebp-0x60],ebx
100339c0:	mov    DWORD PTR [ebp-0x34],0xf
100339c7:	mov    DWORD PTR [ebp-0x38],ebx
100339ca:	mov    BYTE PTR [ebp-0x48],bl
100339cd:	mov    BYTE PTR [ebp-0x4],0x1
100339d1:	call   0x100334a0
100339d6:	cmp    DWORD PTR [esi+0x14],0xb
100339da:	mov    DWORD PTR [ebp-0x50],eax
100339dd:	jae    0x10033a1f
100339df:	mov    DWORD PTR [edi+0x18],0xf
100339e6:	mov    DWORD PTR [edi+0x14],ebx
100339e9:	push   0x1006bb18
100339ee:	mov    BYTE PTR [edi+0x4],bl
100339f1:	call   0x10041f10
100339f6:	add    esp,0x4
100339f9:	push   eax
100339fa:	push   0x1006bb18
100339ff:	mov    ecx,edi
10033a01:	call   0x10001344
10033a06:	cmp    DWORD PTR [ebp-0x34],0x10
10033a0a:	jb     0x10033a18
10033a0c:	mov    eax,DWORD PTR [ebp-0x48]
10033a0f:	push   eax
10033a10:	call   0x10041d92
10033a15:	add    esp,0x4
10033a18:	mov    eax,edi
10033a1a:	jmp    0x10033e50
10033a1f:	push   0x262c465c
10033a24:	push   0x100722d8
10033a29:	call   0x10003d63
10033a2e:	add    esp,0x8
10033a31:	push   0x42e60cdc
10033a36:	push   eax
10033a37:	call   0x10003d63
10033a3c:	add    esp,0x8
10033a3f:	push   0x2ce58344
10033a44:	push   eax
10033a45:	call   0x10003d63
10033a4a:	add    esp,0x8
10033a4d:	push   0x6ff85cee
10033a52:	push   eax
10033a53:	call   0x10003d63
10033a58:	add    esp,0x8
10033a5b:	push   eax
10033a5c:	push   0x7
10033a5e:	push   0x100722d0
10033a63:	call   0x10003d75
10033a68:	mov    ebx,eax
10033a6a:	add    esp,0xc
10033a6d:	push   ebx
10033a6e:	call   0x10041f10
10033a73:	add    esp,0x4
10033a76:	push   eax
10033a77:	push   ebx
10033a78:	push   esi
10033a79:	xor    eax,eax
10033a7b:	call   0x1000cb54
10033a80:	cmp    eax,0xffffffff
10033a83:	jne    0x10033ace
10033a85:	mov    DWORD PTR [edi+0x18],0xf
10033a8c:	mov    DWORD PTR [edi+0x14],0x0
10033a93:	push   0x1006bb18
10033a98:	mov    BYTE PTR [edi+0x4],0x0
10033a9c:	call   0x10041f10
10033aa1:	add    esp,0x4
10033aa4:	push   eax
10033aa5:	push   0x1006bb18
10033aaa:	mov    ecx,edi
10033aac:	call   0x10001344
10033ab1:	cmp    DWORD PTR [ebp-0x34],0x10
10033ab5:	jb     0x10033a18
10033abb:	mov    ecx,DWORD PTR [ebp-0x48]
10033abe:	push   ecx
10033abf:	call   0x10041d92
10033ac4:	add    esp,0x4
10033ac7:	mov    eax,edi
10033ac9:	jmp    0x10033e50
10033ace:	push   eax
10033acf:	push   0x0
10033ad1:	push   esi
10033ad2:	lea    eax,[ebp-0x30]
10033ad5:	call   0x1000c42b
10033ada:	mov    BYTE PTR [ebp-0x4],0x2
10033ade:	mov    ecx,DWORD PTR [ebp-0x1c]
10033ae1:	lea    esi,[ecx-0x4]
10033ae4:	cmp    esi,ecx
10033ae6:	jbe    0x10033af0
10033ae8:	call   0x100422b0
10033aed:	mov    ecx,DWORD PTR [ebp-0x1c]
10033af0:	mov    eax,DWORD PTR [ebp-0x2c]
10033af3:	mov    ebx,0x10
10033af8:	cmp    DWORD PTR [ebp-0x18],ebx
10033afb:	jae    0x10033b00
10033afd:	lea    eax,[ebp-0x2c]
10033b00:	movsx  edx,BYTE PTR [eax+esi*1]
10033b04:	mov    edi,DWORD PTR [ebp-0x50]
10033b07:	mov    al,BYTE PTR [edi+edx*4]
10033b0a:	cmp    al,0xf
10033b0c:	ja     0x10033e24
10033b12:	movsx  eax,al
10033b15:	lea    esi,[ecx-0x3]
10033b18:	cmp    esi,ecx
10033b1a:	mov    DWORD PTR [ebp-0x54],eax
10033b1d:	jbe    0x10033b27
10033b1f:	call   0x100422b0
10033b24:	mov    ecx,DWORD PTR [ebp-0x1c]
10033b27:	cmp    DWORD PTR [ebp-0x18],ebx
10033b2a:	mov    eax,DWORD PTR [ebp-0x2c]
10033b2d:	jae    0x10033b32
10033b2f:	lea    eax,[ebp-0x2c]
10033b32:	movsx  edx,BYTE PTR [eax+esi*1]
10033b36:	mov    al,BYTE PTR [edi+edx*4]
10033b39:	cmp    al,0xf
10033b3b:	ja     0x10033e08
10033b41:	lea    esi,[ecx-0x2]
10033b44:	cmp    esi,ecx
10033b46:	movsx  edi,al
10033b49:	jbe    0x10033b53
10033b4b:	call   0x100422b0
10033b50:	mov    ecx,DWORD PTR [ebp-0x1c]
10033b53:	cmp    DWORD PTR [ebp-0x18],ebx
10033b56:	mov    eax,DWORD PTR [ebp-0x2c]
10033b59:	jae    0x10033b5e
10033b5b:	lea    eax,[ebp-0x2c]
10033b5e:	movsx  eax,BYTE PTR [eax+esi*1]
10033b62:	mov    edx,DWORD PTR [ebp-0x50]
10033b65:	mov    al,BYTE PTR [edx+eax*4]
10033b68:	cmp    al,0xf
10033b6a:	ja     0x10033dec
10033b70:	lea    esi,[ecx-0x1]
10033b73:	cmp    esi,ecx
10033b75:	movsx  ebx,al
10033b78:	jbe    0x10033b82
10033b7a:	call   0x100422b0
10033b7f:	mov    ecx,DWORD PTR [ebp-0x1c]
10033b82:	cmp    DWORD PTR [ebp-0x18],0x10
10033b86:	mov    eax,DWORD PTR [ebp-0x2c]
10033b89:	jae    0x10033b8e
10033b8b:	lea    eax,[ebp-0x2c]
10033b8e:	movsx  eax,BYTE PTR [eax+esi*1]
10033b92:	mov    edx,DWORD PTR [ebp-0x50]
10033b95:	mov    al,BYTE PTR [edx+eax*4]
10033b98:	cmp    al,0xf
10033b9a:	ja     0x10033dd0
10033ba0:	movsx  eax,al
10033ba3:	shl    eax,0x4
10033ba6:	or     eax,ebx
10033ba8:	shl    eax,0x4
10033bab:	or     eax,edi
10033bad:	shl    eax,0x4
10033bb0:	or     eax,DWORD PTR [ebp-0x54]
10033bb3:	lea    ebx,[ecx-0x4]
10033bb6:	cmp    ebx,ecx
10033bb8:	mov    DWORD PTR [ebp-0x54],eax
10033bbb:	ja     0x10033bca
10033bbd:	push   0xffffffff
10033bbf:	push   ebx
10033bc0:	lea    ecx,[ebp-0x30]
10033bc3:	call   0x100013b6
10033bc8:	jmp    0x10033bd6
10033bca:	push   0x0
10033bcc:	sub    ebx,ecx
10033bce:	lea    esi,[ebp-0x30]
10033bd1:	call   0x1000cae0
10033bd6:	mov    eax,DWORD PTR [ebp-0x54]
10033bd9:	mov    ecx,DWORD PTR [ebp-0x1c]
10033bdc:	add    eax,eax
10033bde:	cmp    ecx,eax
10033be0:	jae    0x10033c4b
10033be2:	mov    esi,DWORD PTR [ebp-0x58]
10033be5:	xor    edi,edi
10033be7:	mov    DWORD PTR [esi+0x18],0xf
10033bee:	mov    DWORD PTR [esi+0x14],edi
10033bf1:	push   0x1006bb18
10033bf6:	mov    BYTE PTR [esi+0x4],0x0
10033bfa:	call   0x10041f10
10033bff:	add    esp,0x4
10033c02:	push   eax
10033c03:	push   0x1006bb18
10033c08:	mov    ecx,esi
10033c0a:	call   0x10001344
10033c0f:	mov    ebx,0x10
10033c14:	cmp    DWORD PTR [ebp-0x18],ebx
10033c17:	jb     0x10033c25
10033c19:	mov    eax,DWORD PTR [ebp-0x2c]
10033c1c:	push   eax
10033c1d:	call   0x10041d92
10033c22:	add    esp,0x4
10033c25:	mov    DWORD PTR [ebp-0x18],0xf
10033c2c:	mov    DWORD PTR [ebp-0x1c],edi
10033c2f:	cmp    DWORD PTR [ebp-0x34],ebx
10033c32:	mov    BYTE PTR [ebp-0x2c],0x0
10033c36:	jb     0x10033c44
10033c38:	mov    ecx,DWORD PTR [ebp-0x48]
10033c3b:	push   ecx
10033c3c:	call   0x10041d92
10033c41:	add    esp,0x4
10033c44:	mov    eax,esi
10033c46:	jmp    0x10033e50
10033c4b:	mov    edi,ecx
10033c4d:	sub    edi,eax
10033c4f:	xor    eax,eax
10033c51:	mov    DWORD PTR [ebp-0x5c],eax
10033c54:	cmp    eax,DWORD PTR [ebp-0x54]
10033c57:	mov    ebx,DWORD PTR [ebp-0x50]
10033c5a:	je     0x10033d86
10033c60:	lea    esi,[edi+eax*2]
10033c63:	cmp    esi,ecx
10033c65:	jbe    0x10033c6c
10033c67:	call   0x100422b0
10033c6c:	cmp    DWORD PTR [ebp-0x18],0x10
10033c70:	mov    eax,DWORD PTR [ebp-0x2c]
10033c73:	jae    0x10033c78
10033c75:	lea    eax,[ebp-0x2c]
10033c78:	movsx  edx,BYTE PTR [eax+esi*1]
10033c7c:	mov    al,BYTE PTR [ebx+edx*4]
10033c7f:	cmp    al,0x3f
10033c81:	ja     0x10033d70
10033c87:	movsx  eax,al
10033c8a:	add    esi,0x1
10033c8d:	cmp    esi,DWORD PTR [ebp-0x1c]
10033c90:	mov    DWORD PTR [ebp-0x60],eax
10033c93:	jbe    0x10033c9a
10033c95:	call   0x100422b0
10033c9a:	cmp    DWORD PTR [ebp-0x18],0x10
10033c9e:	mov    eax,DWORD PTR [ebp-0x2c]
10033ca1:	jae    0x10033ca6
10033ca3:	lea    eax,[ebp-0x2c]
10033ca6:	movsx  ecx,BYTE PTR [eax+esi*1]
10033caa:	mov    al,BYTE PTR [ebx+ecx*4]
10033cad:	cmp    al,0x3
10033caf:	ja     0x10033d54
10033cb5:	or     edx,0xffffffff
10033cb8:	sub    edx,DWORD PTR [ebp-0x38]
10033cbb:	movsx  ebx,al
10033cbe:	cmp    edx,0x1
10033cc1:	ja     0x10033cc8
10033cc3:	call   0x1005600a
10033cc8:	mov    esi,DWORD PTR [ebp-0x38]
10033ccb:	add    esi,0x1
10033cce:	cmp    esi,0xfffffffe
10033cd1:	jbe    0x10033cd8
10033cd3:	call   0x1005600a
10033cd8:	mov    eax,DWORD PTR [ebp-0x34]
10033cdb:	cmp    eax,esi
10033cdd:	jae    0x10033d30
10033cdf:	mov    eax,DWORD PTR [ebp-0x38]
10033ce2:	push   eax
10033ce3:	push   esi
10033ce4:	lea    ecx,[ebp-0x4c]
10033ce7:	call   0x10001509
10033cec:	test   esi,esi
10033cee:	jbe    0x10033d21
10033cf0:	mov    eax,DWORD PTR [ebp-0x48]
10033cf3:	shl    bl,0x6
10033cf6:	add    bl,BYTE PTR [ebp-0x60]
10033cf9:	mov    ecx,0x10
10033cfe:	xor    bl,BYTE PTR [ebp-0x5c]
10033d01:	cmp    DWORD PTR [ebp-0x34],ecx
10033d04:	jae    0x10033d09
10033d06:	lea    eax,[ebp-0x48]
10033d09:	mov    edx,DWORD PTR [ebp-0x38]
10033d0c:	mov    BYTE PTR [eax+edx*1],bl
10033d0f:	cmp    DWORD PTR [ebp-0x34],ecx
10033d12:	mov    eax,DWORD PTR [ebp-0x48]
10033d15:	mov    DWORD PTR [ebp-0x38],esi
10033d18:	jae    0x10033d1d
10033d1a:	lea    eax,[ebp-0x48]
10033d1d:	mov    BYTE PTR [eax+esi*1],0x0
10033d21:	add    DWORD PTR [ebp-0x5c],0x1
10033d25:	mov    eax,DWORD PTR [ebp-0x5c]
10033d28:	mov    ecx,DWORD PTR [ebp-0x1c]
10033d2b:	jmp    0x10033c54
10033d30:	test   esi,esi
10033d32:	jne    0x10033cee
10033d34:	cmp    eax,0x10
10033d37:	mov    eax,DWORD PTR [ebp-0x48]
10033d3a:	mov    DWORD PTR [ebp-0x38],esi
10033d3d:	jae    0x10033d42
10033d3f:	lea    eax,[ebp-0x48]
10033d42:	add    DWORD PTR [ebp-0x5c],0x1
10033d46:	mov    BYTE PTR [eax],0x0
10033d49:	mov    eax,DWORD PTR [ebp-0x5c]
10033d4c:	mov    ecx,DWORD PTR [ebp-0x1c]
10033d4f:	jmp    0x10033c54
10033d54:	lea    ecx,[ebp-0x90]
10033d5a:	call   0x10041e01
10033d5f:	push   0x10073978
10033d64:	lea    eax,[ebp-0x90]
10033d6a:	push   eax
10033d6b:	call   0x10046704
10033d70:	lea    ecx,[ebp-0x6c]
10033d73:	call   0x10041e01
10033d78:	push   0x10073978
10033d7d:	lea    ecx,[ebp-0x6c]
10033d80:	push   ecx
10033d81:	call   0x10046704
10033d86:	mov    esi,DWORD PTR [ebp-0x58]
10033d89:	push   0xffffffff
10033d8b:	push   0x0
10033d8d:	lea    edx,[ebp-0x4c]
10033d90:	mov    edi,0xf
10033d95:	mov    DWORD PTR [esi+0x18],edi
10033d98:	mov    DWORD PTR [esi+0x14],0x0
10033d9f:	push   edx
10033da0:	mov    ecx,esi
10033da2:	mov    BYTE PTR [esi+0x4],0x0
10033da6:	call   0x1000124a
10033dab:	mov    ebx,0x10
10033db0:	cmp    DWORD PTR [ebp-0x18],ebx
10033db3:	jb     0x10033dc1
10033db5:	mov    eax,DWORD PTR [ebp-0x2c]
10033db8:	push   eax
10033db9:	call   0x10041d92
10033dbe:	add    esp,0x4
10033dc1:	mov    DWORD PTR [ebp-0x18],edi
10033dc4:	mov    DWORD PTR [ebp-0x1c],0x0
10033dcb:	jmp    0x10033c2f
10033dd0:	lea    ecx,[ebp-0xa8]
10033dd6:	call   0x10041e01
10033ddb:	push   0x10073978
10033de0:	lea    edx,[ebp-0xa8]
10033de6:	push   edx
10033de7:	call   0x10046704
10033dec:	lea    ecx,[ebp-0x84]
10033df2:	call   0x10041e01
10033df7:	push   0x10073978
10033dfc:	lea    eax,[ebp-0x84]
10033e02:	push   eax
10033e03:	call   0x10046704
10033e08:	lea    ecx,[ebp-0x9c]
10033e0e:	call   0x10041e01
10033e13:	push   0x10073978
10033e18:	lea    ecx,[ebp-0x9c]
10033e1e:	push   ecx
10033e1f:	call   0x10046704
10033e24:	lea    ecx,[ebp-0x78]
10033e27:	call   0x10041e01
10033e2c:	push   0x10073978
10033e31:	lea    edx,[ebp-0x78]
10033e34:	push   edx
10033e35:	call   0x10046704
10033e3a:	mov    ecx,DWORD PTR [ebp-0x58]
10033e3d:	push   0x1006bb18
10033e42:	call   0x100011d6
10033e47:	mov    eax,0x10033e4d
10033e4c:	ret    
10033e4d:	mov    eax,DWORD PTR [ebp-0x58]
10033e50:	mov    ecx,DWORD PTR [ebp-0xc]
10033e53:	mov    DWORD PTR fs:0x0,ecx
10033e5a:	pop    ecx
10033e5b:	pop    edi
10033e5c:	pop    esi
10033e5d:	pop    ebx
10033e5e:	mov    ecx,DWORD PTR [ebp-0x14]
10033e61:	xor    ecx,ebp
10033e63:	call   0x10041d97
10033e68:	mov    esp,ebp
10033e6a:	pop    ebp
10033e6b:	ret    
10033e6c:	int3   
10033e6d:	int3   
10033e6e:	int3   
10033e6f:	int3   
10033e70:	push   ebp
10033e71:	mov    ebp,esp
10033e73:	and    esp,0xfffffff8
10033e76:	push   0xffffffff
10033e78:	push   0x10061388
10033e7d:	mov    eax,fs:0x0
10033e83:	push   eax
10033e84:	sub    esp,0x54
10033e87:	push   esi
10033e88:	push   edi
10033e89:	mov    eax,ds:0x1007d030
10033e8e:	xor    eax,esp
10033e90:	push   eax
10033e91:	lea    eax,[esp+0x60]
10033e95:	mov    fs:0x0,eax
10033e9b:	xor    esi,esi
10033e9d:	cmp    DWORD PTR [ebx+0x18],0x10
10033ea1:	lea    eax,[ebx+0x4]
10033ea4:	mov    DWORD PTR [esp+0x10],esi
10033ea8:	mov    DWORD PTR [esp+0x10],eax
10033eac:	jb     0x10033eb0
10033eae:	mov    eax,DWORD PTR [eax]
10033eb0:	push   esi
10033eb1:	push   esi
10033eb2:	push   0xffffffff
10033eb4:	push   eax
10033eb5:	push   esi
10033eb6:	push   0xfde9
10033ebb:	call   DWORD PTR ds:0x1006508c
10033ec1:	cmp    eax,esi
10033ec3:	jne    0x10033f52
10033ec9:	call   0x1000207c
10033ece:	push   0x11
10033ed0:	call   0x10037620
10033ed5:	add    esp,0x4
10033ed8:	mov    edi,0xf
10033edd:	push   0x1006bb18
10033ee2:	mov    DWORD PTR [esp+0x34],edi
10033ee6:	mov    DWORD PTR [esp+0x30],esi
10033eea:	mov    BYTE PTR [esp+0x20],0x0
10033eef:	call   0x10041f10
10033ef4:	add    esp,0x4
10033ef7:	push   eax
10033ef8:	push   0x1006bb18
10033efd:	lea    ecx,[esp+0x20]
10033f01:	call   0x10001344
10033f06:	lea    ecx,[esp+0x34]
10033f0a:	mov    DWORD PTR [esp+0x68],esi
10033f0e:	call   0x10041e01
10033f13:	push   0xffffffff
10033f15:	mov    BYTE PTR [esp+0x6c],0x1
10033f1a:	push   esi
10033f1b:	lea    eax,[esp+0x20]
10033f1f:	push   eax
10033f20:	lea    ecx,[esp+0x4c]
10033f24:	mov    DWORD PTR [esp+0x40],0x10072304
10033f2c:	mov    DWORD PTR [esp+0x64],edi
10033f30:	mov    DWORD PTR [esp+0x60],esi
10033f34:	mov    BYTE PTR [esp+0x50],0x0
10033f39:	call   0x1000124a
10033f3e:	push   0x10073924
10033f43:	lea    ecx,[esp+0x38]
10033f47:	push   ecx
10033f48:	mov    BYTE PTR [esp+0x70],0x0
10033f4d:	call   0x10046704
10033f52:	lea    edi,[eax+0x1]
10033f55:	xor    ecx,ecx
10033f57:	mov    eax,edi
10033f59:	mov    edx,0x2
10033f5e:	mul    edx
10033f60:	seto   cl
10033f63:	neg    ecx
10033f65:	or     ecx,eax
10033f67:	push   ecx
10033f68:	call   0x10042609
10033f6d:	mov    esi,eax
10033f6f:	add    esp,0x4
10033f72:	mov    DWORD PTR [esp+0x14],esi
10033f76:	mov    eax,DWORD PTR [esp+0x10]
10033f7a:	mov    DWORD PTR [esp+0x68],0x2
10033f82:	cmp    DWORD PTR [ebx+0x18],0x10
10033f86:	jb     0x10033f8a
10033f88:	mov    eax,DWORD PTR [eax]
10033f8a:	push   edi
10033f8b:	push   esi
10033f8c:	push   0xffffffff
10033f8e:	push   eax
10033f8f:	push   0x0
10033f91:	push   0xfde9
10033f96:	call   DWORD PTR ds:0x1006508c
10033f9c:	mov    edi,DWORD PTR [ebp+0x8]
10033f9f:	push   esi
10033fa0:	mov    WORD PTR [esi+eax*2],0x0
10033fa6:	call   0x10002491
10033fab:	push   esi
10033fac:	call   0x10041d92
10033fb1:	add    esp,0x4
10033fb4:	mov    eax,edi
10033fb6:	mov    ecx,DWORD PTR [esp+0x60]
10033fba:	mov    DWORD PTR fs:0x0,ecx
10033fc1:	pop    ecx
10033fc2:	pop    edi
10033fc3:	pop    esi
10033fc4:	mov    esp,ebp
10033fc6:	pop    ebp
10033fc7:	ret    
10033fc8:	int3   
10033fc9:	int3   
10033fca:	int3   
10033fcb:	int3   
10033fcc:	int3   
10033fcd:	int3   
10033fce:	int3   
10033fcf:	int3   
10033fd0:	mov    eax,ds:0x1007fa54
10033fd5:	mov    edx,DWORD PTR [eax+0xc]
10033fd8:	mov    ecx,0x1007fa54
10033fdd:	call   edx
10033fdf:	add    eax,0x10
10033fe2:	mov    DWORD PTR [esi],eax
10033fe4:	mov    eax,esi
10033fe6:	ret    
10033fe7:	int3   
10033fe8:	int3   
10033fe9:	int3   
10033fea:	int3   
10033feb:	int3   
10033fec:	int3   
10033fed:	int3   
10033fee:	int3   
10033fef:	int3   
10033ff0:	test   ebx,ebx
10033ff2:	jne    0x10034002
10033ff4:	test   esi,esi
10033ff6:	je     0x10034002
10033ff8:	push   0x80070057
10033ffd:	call   0x10001f41
10034002:	mov    eax,ds:0x1007fa54
10034007:	mov    edx,DWORD PTR [eax]
10034009:	push   0x1
1003400b:	push   esi
1003400c:	mov    ecx,0x1007fa54
10034011:	call   edx
10034013:	test   eax,eax
10034015:	jne    0x1003401c
10034017:	jmp    0x100343b0
1003401c:	add    eax,0x10
1003401f:	test   esi,esi
10034021:	mov    DWORD PTR [edi],eax
10034023:	jl     0x10033ff8
10034025:	cmp    esi,DWORD PTR [eax-0x8]
10034028:	jg     0x10033ff8
1003402a:	mov    DWORD PTR [eax-0xc],esi
1003402d:	mov    eax,DWORD PTR [edi]
1003402f:	push   esi
10034030:	push   ebx
10034031:	mov    BYTE PTR [esi+eax*1],0x0
10034035:	mov    ecx,DWORD PTR [edi]
10034037:	push   esi
10034038:	push   ecx
10034039:	call   0x100422c5
1003403e:	add    esp,0x10
10034041:	mov    eax,edi
10034043:	ret    
10034044:	int3   
10034045:	int3   
10034046:	int3   
10034047:	int3   
10034048:	int3   
10034049:	int3   
1003404a:	int3   
1003404b:	int3   
1003404c:	int3   
1003404d:	int3   
1003404e:	int3   
1003404f:	int3   
10034050:	mov    eax,DWORD PTR [eax]
10034052:	sub    eax,0x10
10034055:	lea    ecx,[eax+0xc]
10034058:	or     edx,0xffffffff
1003405b:	lock xadd DWORD PTR [ecx],edx
1003405f:	dec    edx
10034060:	test   edx,edx
10034062:	jg     0x1003406e
10034064:	mov    ecx,DWORD PTR [eax]
10034066:	mov    edx,DWORD PTR [ecx]
10034068:	push   eax
10034069:	mov    eax,DWORD PTR [edx+0x4]
1003406c:	call   eax
1003406e:	ret    
1003406f:	int3   
10034070:	test   edx,edx
10034072:	jne    0x10034085
10034074:	xor    eax,eax
10034076:	push   edi
10034077:	mov    edi,eax
10034079:	push   edx
1003407a:	mov    eax,ebx
1003407c:	call   0x10034320
10034081:	mov    eax,ebx
10034083:	pop    edi
10034084:	ret    
10034085:	mov    eax,edx
10034087:	push   esi
10034088:	lea    esi,[eax+0x1]
1003408b:	jmp    0x10034090
1003408d:	lea    ecx,[ecx+0x0]
10034090:	mov    cl,BYTE PTR [eax]
10034092:	add    eax,0x1
10034095:	test   cl,cl
10034097:	jne    0x10034090
10034099:	sub    eax,esi
1003409b:	pop    esi
1003409c:	push   edi
1003409d:	mov    edi,eax
1003409f:	push   edx
100340a0:	mov    eax,ebx
100340a2:	call   0x10034320
100340a7:	mov    eax,ebx
100340a9:	pop    edi
100340aa:	ret    
100340ab:	int3   
100340ac:	int3   
100340ad:	int3   
100340ae:	int3   
100340af:	int3   
100340b0:	mov    eax,DWORD PTR [edi]
100340b2:	mov    edx,DWORD PTR [eax-0x8]
100340b5:	push   ebx
100340b6:	mov    ebx,DWORD PTR [eax-0xc]
100340b9:	push   esi
100340ba:	mov    ecx,0x1
100340bf:	sub    ecx,DWORD PTR [eax-0x4]
100340c2:	lea    esi,[ebx+0x1]
100340c5:	sub    edx,esi
100340c7:	or     ecx,edx
100340c9:	jge    0x100340d4
100340cb:	mov    ecx,esi
100340cd:	mov    eax,edi
100340cf:	call   0x100343c0
100340d4:	test   esi,esi
100340d6:	mov    eax,DWORD PTR [edi]
100340d8:	mov    cl,BYTE PTR [esp+0xc]
100340dc:	mov    BYTE PTR [ebx+eax*1],cl
100340df:	jl     0x100340f8
100340e1:	mov    eax,DWORD PTR [edi]
100340e3:	cmp    esi,DWORD PTR [eax-0x8]
100340e6:	jg     0x100340f8
100340e8:	mov    DWORD PTR [eax-0xc],esi
100340eb:	mov    edx,DWORD PTR [edi]
100340ed:	mov    BYTE PTR [esi+edx*1],0x0
100340f1:	pop    esi
100340f2:	mov    eax,edi
100340f4:	pop    ebx
100340f5:	ret    0x4
100340f8:	push   0x80070057
100340fd:	call   0x10001f41
10034102:	int3   
10034103:	int3   
10034104:	int3   
10034105:	int3   
10034106:	int3   
10034107:	int3   
10034108:	int3   
10034109:	int3   
1003410a:	int3   
1003410b:	int3   
1003410c:	int3   
1003410d:	int3   
1003410e:	int3   
1003410f:	int3   
10034110:	mov    eax,DWORD PTR [edi]
10034112:	mov    edx,DWORD PTR [eax-0x8]
10034115:	push   esi
10034116:	mov    esi,DWORD PTR [eax-0xc]
10034119:	mov    ecx,0x1
1003411e:	sub    ecx,DWORD PTR [eax-0x4]
10034121:	sub    edx,esi
10034123:	or     ecx,edx
10034125:	jge    0x10034130
10034127:	mov    ecx,esi
10034129:	mov    eax,edi
1003412b:	call   0x100343c0
10034130:	mov    ecx,DWORD PTR [edi]
10034132:	lea    eax,[esi+0x1]
10034135:	call   0x1002ee10
1003413a:	test   esi,esi
1003413c:	jl     0x10034152
1003413e:	mov    eax,DWORD PTR [edi]
10034140:	cmp    esi,DWORD PTR [eax-0x8]
10034143:	jg     0x10034152
10034145:	mov    DWORD PTR [eax-0xc],esi
10034148:	mov    eax,DWORD PTR [edi]
1003414a:	mov    BYTE PTR [esi+eax*1],0x0
1003414e:	mov    eax,edi
10034150:	pop    esi
10034151:	ret    
10034152:	push   0x80070057
10034157:	call   0x10001f41
1003415c:	int3   
1003415d:	int3   
1003415e:	int3   
1003415f:	int3   
10034160:	test   ecx,ecx
10034162:	jne    0x1003416e
10034164:	push   0x80004005
10034169:	call   0x10001f41
1003416e:	mov    eax,DWORD PTR [esp+0x4]
10034172:	mov    eax,DWORD PTR [eax]
10034174:	push   ecx
10034175:	push   eax
10034176:	call   0x10057d8c
1003417b:	add    esp,0x8
1003417e:	neg    eax
10034180:	sbb    eax,eax
10034182:	add    eax,0x1
10034185:	ret    
10034186:	int3   
10034187:	int3   
10034188:	int3   
10034189:	int3   
1003418a:	int3   
1003418b:	int3   
1003418c:	int3   
1003418d:	int3   
1003418e:	int3   
1003418f:	int3   
10034190:	test   ecx,ecx
10034192:	jne    0x1003419e
10034194:	push   0x80004005
10034199:	call   0x10001f41
1003419e:	mov    eax,DWORD PTR [esp+0x4]
100341a2:	mov    eax,DWORD PTR [eax]
100341a4:	push   ecx
100341a5:	push   eax
100341a6:	call   0x10057d8c
100341ab:	add    esp,0x8
100341ae:	neg    eax
100341b0:	sbb    eax,eax
100341b2:	neg    eax
100341b4:	ret    
100341b5:	int3   
100341b6:	int3   
100341b7:	int3   
100341b8:	int3   
100341b9:	int3   
100341ba:	int3   
100341bb:	int3   
100341bc:	int3   
100341bd:	int3   
100341be:	int3   
100341bf:	int3   
100341c0:	mov    eax,DWORD PTR [esi]
100341c2:	test   eax,eax
100341c4:	je     0x100341cd
100341c6:	push   eax
100341c7:	call   DWORD PTR ds:0x10065378
100341cd:	mov    DWORD PTR [esi],0x0
100341d3:	ret    
100341d4:	int3   
100341d5:	int3   
100341d6:	int3   
100341d7:	int3   
100341d8:	int3   
100341d9:	int3   
100341da:	int3   
100341db:	int3   
100341dc:	int3   
100341dd:	int3   
100341de:	int3   
100341df:	int3   
100341e0:	mov    ecx,DWORD PTR [eax]
100341e2:	push   esi
100341e3:	mov    esi,DWORD PTR [ebx]
100341e5:	lea    eax,[ecx-0x10]
100341e8:	sub    esi,0x10
100341eb:	cmp    eax,esi
100341ed:	je     0x10034238
100341ef:	cmp    DWORD PTR [esi+0xc],0x0
100341f3:	push   edi
100341f4:	lea    edi,[esi+0xc]
100341f7:	jl     0x10034228
100341f9:	mov    edx,DWORD PTR [eax]
100341fb:	cmp    edx,DWORD PTR [esi]
100341fd:	jne    0x10034228
100341ff:	push   ebp
10034200:	call   0x10034410
10034205:	mov    ebp,eax
10034207:	or     eax,0xffffffff
1003420a:	lock xadd DWORD PTR [edi],eax
1003420e:	dec    eax
1003420f:	test   eax,eax
10034211:	jg     0x1003421d
10034213:	mov    ecx,DWORD PTR [esi]
10034215:	mov    edx,DWORD PTR [ecx]
10034217:	mov    eax,DWORD PTR [edx+0x4]
1003421a:	push   esi
1003421b:	call   eax
1003421d:	add    ebp,0x10
10034220:	mov    DWORD PTR [ebx],ebp
10034222:	pop    ebp
10034223:	pop    edi
10034224:	mov    eax,ebx
10034226:	pop    esi
10034227:	ret    
10034228:	mov    edi,DWORD PTR [ecx-0xc]
1003422b:	push   ecx
1003422c:	mov    eax,ebx
1003422e:	call   0x10034320
10034233:	pop    edi
10034234:	mov    eax,ebx
10034236:	pop    esi
10034237:	ret    
10034238:	mov    eax,ebx
1003423a:	pop    esi
1003423b:	ret    
1003423c:	int3   
1003423d:	int3   
1003423e:	int3   
1003423f:	int3   
10034240:	mov    eax,DWORD PTR [esp+0x4]
10034244:	push   ebx
10034245:	push   ebp
10034246:	mov    ebp,DWORD PTR [esp+0x10]
1003424a:	push   esi
1003424b:	mov    esi,DWORD PTR [eax]
1003424d:	mov    ecx,DWORD PTR [esi-0x10]
10034250:	mov    edx,DWORD PTR [ecx]
10034252:	mov    eax,DWORD PTR [edx+0x10]
10034255:	mov    ebx,DWORD PTR [esi-0xc]
10034258:	sub    esi,0x10
1003425b:	push   edi
1003425c:	call   eax
1003425e:	mov    edx,DWORD PTR [eax]
10034260:	push   0x1
10034262:	mov    ecx,eax
10034264:	mov    eax,DWORD PTR [edx]
10034266:	push   ebp
10034267:	call   eax
10034269:	mov    edi,eax
1003426b:	test   edi,edi
1003426d:	jne    0x10034274
1003426f:	call   0x100343b0
10034274:	cmp    ebx,ebp
10034276:	jge    0x1003427a
10034278:	mov    ebp,ebx
1003427a:	lea    eax,[ebp+0x1]
1003427d:	push   eax
1003427e:	lea    ecx,[esi+0x10]
10034281:	push   ecx
10034282:	push   eax
10034283:	lea    ebp,[edi+0x10]
10034286:	push   ebp
10034287:	call   0x100422c5
1003428c:	add    esp,0x10
1003428f:	mov    DWORD PTR [edi+0x4],ebx
10034292:	lea    edx,[esi+0xc]
10034295:	or     eax,0xffffffff
10034298:	lock xadd DWORD PTR [edx],eax
1003429c:	dec    eax
1003429d:	test   eax,eax
1003429f:	jg     0x100342ab
100342a1:	mov    ecx,DWORD PTR [esi]
100342a3:	mov    edx,DWORD PTR [ecx]
100342a5:	mov    eax,DWORD PTR [edx+0x4]
100342a8:	push   esi
100342a9:	call   eax
100342ab:	mov    ecx,DWORD PTR [esp+0x14]
100342af:	pop    edi
100342b0:	pop    esi
100342b1:	mov    DWORD PTR [ecx],ebp
100342b3:	pop    ebp
100342b4:	pop    ebx
100342b5:	ret    0x8
100342b8:	int3   
100342b9:	int3   
100342ba:	int3   
100342bb:	int3   
100342bc:	int3   
100342bd:	int3   
100342be:	int3   
100342bf:	int3   
100342c0:	mov    eax,DWORD PTR [edi]
100342c2:	mov    edx,DWORD PTR [eax-0x8]
100342c5:	push   ebx
100342c6:	mov    ebx,DWORD PTR [eax-0xc]
100342c9:	push   esi
100342ca:	mov    ecx,0x1
100342cf:	sub    ecx,DWORD PTR [eax-0x4]
100342d2:	lea    esi,[ebx+0x1]
100342d5:	sub    edx,esi
100342d7:	or     ecx,edx
100342d9:	jge    0x100342e4
100342db:	mov    eax,esi
100342dd:	mov    ecx,edi
100342df:	call   0x10002267
100342e4:	test   esi,esi
100342e6:	mov    eax,DWORD PTR [edi]
100342e8:	mov    WORD PTR [eax+ebx*2],0x5c
100342ee:	jl     0x10034307
100342f0:	mov    eax,DWORD PTR [edi]
100342f2:	cmp    esi,DWORD PTR [eax-0x8]
100342f5:	jg     0x10034307
100342f7:	mov    DWORD PTR [eax-0xc],esi
100342fa:	mov    ecx,DWORD PTR [edi]
100342fc:	mov    WORD PTR [ecx+esi*2],0x0
10034302:	pop    esi
10034303:	mov    eax,edi
10034305:	pop    ebx
10034306:	ret    
10034307:	push   0x80070057
1003430c:	call   0x10001f41
10034311:	int3   
10034312:	int3   
10034313:	int3   
10034314:	int3   
10034315:	int3   
10034316:	int3   
10034317:	int3   
10034318:	int3   
10034319:	int3   
1003431a:	int3   
1003431b:	int3   
1003431c:	int3   
1003431d:	int3   
1003431e:	int3   
1003431f:	int3   
10034320:	test   edi,edi
10034322:	push   esi
10034323:	mov    esi,eax
10034325:	jne    0x10034330
10034327:	call   0x10034510
1003432c:	pop    esi
1003432d:	ret    0x4
10034330:	mov    ecx,DWORD PTR [esp+0x8]
10034334:	test   ecx,ecx
10034336:	jne    0x10034342
10034338:	push   0x80070057
1003433d:	call   0x10001f41
10034342:	mov    eax,DWORD PTR [esi]
10034344:	push   ebx
10034345:	mov    ebx,ecx
10034347:	sub    ebx,eax
10034349:	mov    edx,0x1
1003434e:	sub    edx,DWORD PTR [eax-0x4]
10034351:	push   ebp
10034352:	mov    ebp,DWORD PTR [eax-0xc]
10034355:	mov    eax,DWORD PTR [eax-0x8]
10034358:	sub    eax,edi
1003435a:	or     edx,eax
1003435c:	jge    0x1003436b
1003435e:	mov    ecx,edi
10034360:	mov    eax,esi
10034362:	call   0x100343c0
10034367:	mov    ecx,DWORD PTR [esp+0x10]
1003436b:	cmp    ebx,ebp
1003436d:	mov    eax,DWORD PTR [esi]
1003436f:	push   edi
10034370:	ja     0x1003437f
10034372:	lea    ecx,[eax+ebx*1]
10034375:	push   ecx
10034376:	push   edi
10034377:	push   eax
10034378:	call   0x10041da6
1003437d:	jmp    0x10034387
1003437f:	push   ecx
10034380:	push   edi
10034381:	push   eax
10034382:	call   0x100422c5
10034387:	add    esp,0x10
1003438a:	test   edi,edi
1003438c:	pop    ebp
1003438d:	pop    ebx
1003438e:	jl     0x10034338
10034390:	mov    eax,DWORD PTR [esi]
10034392:	cmp    edi,DWORD PTR [eax-0x8]
10034395:	jg     0x10034338
10034397:	mov    DWORD PTR [eax-0xc],edi
1003439a:	mov    edx,DWORD PTR [esi]
1003439c:	mov    BYTE PTR [edi+edx*1],0x0
100343a0:	pop    esi
100343a1:	ret    0x4
100343a4:	int3   
100343a5:	int3   
100343a6:	int3   
100343a7:	int3   
100343a8:	int3   
100343a9:	int3   
100343aa:	int3   
100343ab:	int3   
100343ac:	int3   
100343ad:	int3   
100343ae:	int3   
100343af:	int3   
100343b0:	push   0x8007000e
100343b5:	call   0x10001f41
100343ba:	int3   
100343bb:	int3   
100343bc:	int3   
100343bd:	int3   
100343be:	int3   
100343bf:	int3   
100343c0:	push   esi
100343c1:	mov    esi,eax
100343c3:	mov    eax,DWORD PTR [esi]
100343c5:	mov    edx,DWORD PTR [eax-0xc]
100343c8:	sub    eax,0x10
100343cb:	cmp    edx,ecx
100343cd:	jle    0x100343d1
100343cf:	mov    ecx,edx
100343d1:	cmp    DWORD PTR [eax+0xc],0x1
100343d5:	jle    0x100343e0
100343d7:	push   ecx
100343d8:	push   esi
100343d9:	call   0x10034240
100343de:	pop    esi
100343df:	ret    
100343e0:	mov    eax,DWORD PTR [eax+0x8]
100343e3:	cmp    eax,ecx
100343e5:	jge    0x10034406
100343e7:	mov    edx,eax
100343e9:	cmp    edx,0x400
100343ef:	jle    0x100343f9
100343f1:	add    edx,0x400
100343f7:	jmp    0x100343fb
100343f9:	add    edx,edx
100343fb:	cmp    edx,ecx
100343fd:	jge    0x10034401
100343ff:	mov    edx,ecx
10034401:	call   0x10034570
10034406:	pop    esi
10034407:	ret    
10034408:	int3   
10034409:	int3   
1003440a:	int3   
1003440b:	int3   
1003440c:	int3   
1003440d:	int3   
1003440e:	int3   
1003440f:	int3   
10034410:	push   esi
10034411:	mov    esi,eax
10034413:	mov    ecx,DWORD PTR [esi]
10034415:	mov    eax,DWORD PTR [ecx]
10034417:	mov    edx,DWORD PTR [eax+0x10]
1003441a:	push   edi
1003441b:	call   edx
1003441d:	cmp    DWORD PTR [esi+0xc],0x0
10034421:	lea    ecx,[esi+0xc]
10034424:	jl     0x1003443a
10034426:	cmp    eax,DWORD PTR [esi]
10034428:	jne    0x1003443a
1003442a:	mov    edi,esi
1003442c:	mov    eax,0x1
10034431:	lock xadd DWORD PTR [ecx],eax
10034435:	mov    eax,edi
10034437:	pop    edi
10034438:	pop    esi
10034439:	ret    
1003443a:	mov    ecx,DWORD PTR [esi+0x4]
1003443d:	mov    edx,DWORD PTR [eax]
1003443f:	mov    edx,DWORD PTR [edx]
10034441:	push   0x1
10034443:	push   ecx
10034444:	mov    ecx,eax
10034446:	call   edx
10034448:	mov    edi,eax
1003444a:	test   edi,edi
1003444c:	jne    0x10034453
1003444e:	jmp    0x100343b0
10034453:	mov    eax,DWORD PTR [esi+0x4]
10034456:	mov    DWORD PTR [edi+0x4],eax
10034459:	mov    eax,DWORD PTR [esi+0x4]
1003445c:	add    eax,0x1
1003445f:	push   eax
10034460:	add    esi,0x10
10034463:	push   esi
10034464:	push   eax
10034465:	lea    ecx,[edi+0x10]
10034468:	push   ecx
10034469:	call   0x100422c5
1003446e:	add    esp,0x10
10034471:	mov    eax,edi
10034473:	pop    edi
10034474:	pop    esi
10034475:	ret    
10034476:	int3   
10034477:	int3   
10034478:	int3   
10034479:	int3   
1003447a:	int3   
1003447b:	int3   
1003447c:	int3   
1003447d:	int3   
1003447e:	int3   
1003447f:	int3   
10034480:	mov    ecx,DWORD PTR [esp+0xc]
10034484:	push   ebx
10034485:	push   ebp
10034486:	mov    ebp,DWORD PTR [esp+0xc]
1003448a:	mov    eax,DWORD PTR [ebp+0x0]
1003448d:	mov    ebx,DWORD PTR [eax-0xc]
10034490:	push   esi
10034491:	push   edi
10034492:	mov    edi,DWORD PTR [esp+0x18]
10034496:	sub    edi,eax
10034498:	mov    edx,0x1
1003449d:	sub    edx,DWORD PTR [eax-0x4]
100344a0:	mov    eax,DWORD PTR [eax-0x8]
100344a3:	lea    esi,[ebx+ecx*1]
100344a6:	sub    eax,esi
100344a8:	or     edx,eax
100344aa:	jge    0x100344b9
100344ac:	mov    ecx,esi
100344ae:	mov    eax,ebp
100344b0:	call   0x100343c0
100344b5:	mov    ecx,DWORD PTR [esp+0x1c]
100344b9:	cmp    edi,ebx
100344bb:	mov    eax,DWORD PTR [ebp+0x0]
100344be:	ja     0x100344c7
100344c0:	lea    edx,[eax+edi*1]
100344c3:	mov    DWORD PTR [esp+0x18],edx
100344c7:	mov    edx,DWORD PTR [esp+0x18]
100344cb:	push   ecx
100344cc:	push   edx
100344cd:	push   ecx
100344ce:	add    eax,ebx
100344d0:	push   eax
100344d1:	call   0x100422c5
100344d6:	add    esp,0x10
100344d9:	test   esi,esi
100344db:	jl     0x100344f6
100344dd:	mov    eax,DWORD PTR [ebp+0x0]
100344e0:	cmp    esi,DWORD PTR [eax-0x8]
100344e3:	jg     0x100344f6
100344e5:	mov    DWORD PTR [eax-0xc],esi
100344e8:	mov    eax,DWORD PTR [ebp+0x0]
100344eb:	pop    edi
100344ec:	mov    BYTE PTR [esi+eax*1],0x0
100344f0:	pop    esi
100344f1:	pop    ebp
100344f2:	pop    ebx
100344f3:	ret    0xc
100344f6:	push   0x80070057
100344fb:	call   0x10001f41
10034500:	int3   
10034501:	int3   
10034502:	int3   
10034503:	int3   
10034504:	int3   
10034505:	int3   
10034506:	int3   
10034507:	int3   
10034508:	int3   
10034509:	int3   
1003450a:	int3   
1003450b:	int3   
1003450c:	int3   
1003450d:	int3   
1003450e:	int3   
1003450f:	int3   
10034510:	mov    ecx,DWORD PTR [esi]
10034512:	cmp    DWORD PTR [ecx-0xc],0x0
10034516:	lea    eax,[ecx-0x10]
10034519:	push   edi
1003451a:	mov    edi,DWORD PTR [eax]
1003451c:	je     0x10034569
1003451e:	cmp    DWORD PTR [eax+0xc],0x0
10034522:	lea    edx,[eax+0xc]
10034525:	jge    0x10034545
10034527:	cmp    DWORD PTR [ecx-0x8],0x0
1003452b:	jge    0x10034537
1003452d:	push   0x80070057
10034532:	call   0x10001f41
10034537:	mov    DWORD PTR [ecx-0xc],0x0
1003453e:	mov    eax,DWORD PTR [esi]
10034540:	mov    BYTE PTR [eax],0x0
10034543:	pop    edi
10034544:	ret    
10034545:	or     ecx,0xffffffff
10034548:	lock xadd DWORD PTR [edx],ecx
1003454c:	dec    ecx
1003454d:	test   ecx,ecx
1003454f:	jg     0x1003455b
10034551:	mov    ecx,DWORD PTR [eax]
10034553:	mov    edx,DWORD PTR [ecx]
10034555:	push   eax
10034556:	mov    eax,DWORD PTR [edx+0x4]
10034559:	call   eax
1003455b:	mov    edx,DWORD PTR [edi]
1003455d:	mov    eax,DWORD PTR [edx+0xc]
10034560:	mov    ecx,edi
10034562:	call   eax
10034564:	add    eax,0x10
10034567:	mov    DWORD PTR [esi],eax
10034569:	pop    edi
1003456a:	ret    
1003456b:	int3   
1003456c:	int3   
1003456d:	int3   
1003456e:	int3   
1003456f:	int3   
10034570:	mov    eax,DWORD PTR [esi]
10034572:	mov    ecx,DWORD PTR [eax-0x10]
10034575:	sub    eax,0x10
10034578:	cmp    DWORD PTR [eax+0x8],edx
1003457b:	jge    0x10034592
1003457d:	test   edx,edx
1003457f:	jle    0x10034592
10034581:	push   edi
10034582:	mov    edi,DWORD PTR [ecx]
10034584:	push   0x1
10034586:	push   edx
10034587:	push   eax
10034588:	mov    eax,DWORD PTR [edi+0x8]
1003458b:	call   eax
1003458d:	test   eax,eax
1003458f:	pop    edi
10034590:	jne    0x10034597
10034592:	jmp    0x100343b0
10034597:	add    eax,0x10
1003459a:	mov    DWORD PTR [esi],eax
1003459c:	ret    
1003459d:	int3   
1003459e:	int3   
1003459f:	int3   
100345a0:	push   0xffffffff
100345a2:	push   0x1005ebf8
100345a7:	mov    eax,fs:0x0
100345ad:	push   eax
100345ae:	sub    esp,0x20
100345b1:	push   ebx
100345b2:	push   esi
100345b3:	mov    eax,ds:0x1007d030
100345b8:	xor    eax,esp
100345ba:	push   eax
100345bb:	lea    eax,[esp+0x2c]
100345bf:	mov    fs:0x0,eax
100345c5:	mov    eax,DWORD PTR [esp+0x3c]
100345c9:	xor    ebx,ebx
100345cb:	push   0xffffffff
100345cd:	push   ebx
100345ce:	push   eax
100345cf:	lea    ecx,[esp+0x1c]
100345d3:	mov    DWORD PTR [esp+0x18],ebx
100345d7:	mov    DWORD PTR [esp+0x34],0xf
100345df:	mov    DWORD PTR [esp+0x30],ebx
100345e3:	mov    BYTE PTR [esp+0x20],bl
100345e7:	call   0x1000124a
100345ec:	or     ecx,0xffffffff
100345ef:	mov    DWORD PTR [esp+0x34],ebx
100345f3:	sub    ecx,DWORD PTR [esp+0x24]
100345f7:	cmp    ecx,0x1
100345fa:	ja     0x10034601
100345fc:	call   0x1005600a
10034601:	mov    esi,DWORD PTR [esp+0x24]
10034605:	add    esi,0x1
10034608:	cmp    esi,0xfffffffe
1003460b:	jbe    0x10034612
1003460d:	call   0x1005600a
10034612:	mov    eax,DWORD PTR [esp+0x28]
10034616:	cmp    eax,esi
10034618:	jae    0x100346a4
1003461e:	mov    edx,DWORD PTR [esp+0x24]
10034622:	push   edx
10034623:	push   esi
10034624:	lea    ecx,[esp+0x18]
10034628:	call   0x10001509
1003462d:	mov    eax,DWORD PTR [esp+0x28]
10034631:	cmp    esi,ebx
10034633:	jbe    0x10034660
10034635:	cmp    eax,0x10
10034638:	mov    eax,DWORD PTR [esp+0x14]
1003463c:	jae    0x10034642
1003463e:	lea    eax,[esp+0x14]
10034642:	mov    ecx,DWORD PTR [esp+0x24]
10034646:	mov    BYTE PTR [eax+ecx*1],0x26
1003464a:	cmp    DWORD PTR [esp+0x28],0x10
1003464f:	mov    eax,DWORD PTR [esp+0x14]
10034653:	mov    DWORD PTR [esp+0x24],esi
10034657:	jae    0x1003465d
10034659:	lea    eax,[esp+0x14]
1003465d:	mov    BYTE PTR [eax+esi*1],bl
10034660:	push   0xffffffff
10034662:	push   ebx
10034663:	lea    edx,[esp+0x18]
10034667:	mov    DWORD PTR [edi+0x18],0xf
1003466e:	mov    DWORD PTR [edi+0x14],ebx
10034671:	push   edx
10034672:	mov    ecx,edi
10034674:	mov    BYTE PTR [edi+0x4],bl
10034677:	call   0x1000124a
1003467c:	cmp    DWORD PTR [esp+0x28],0x10
10034681:	jb     0x10034690
10034683:	mov    eax,DWORD PTR [esp+0x14]
10034687:	push   eax
10034688:	call   0x10041d92
1003468d:	add    esp,0x4
10034690:	mov    eax,edi
10034692:	mov    ecx,DWORD PTR [esp+0x2c]
10034696:	mov    DWORD PTR fs:0x0,ecx
1003469d:	pop    ecx
1003469e:	pop    esi
1003469f:	pop    ebx
100346a0:	add    esp,0x2c
100346a3:	ret    
100346a4:	cmp    esi,ebx
100346a6:	jne    0x10034633
100346a8:	cmp    eax,0x10
100346ab:	mov    eax,DWORD PTR [esp+0x14]
100346af:	mov    DWORD PTR [esp+0x24],ebx
100346b3:	jae    0x100346b9
100346b5:	lea    eax,[esp+0x14]
100346b9:	mov    BYTE PTR [eax],bl
100346bb:	jmp    0x10034660
100346bd:	int3   
100346be:	int3   
100346bf:	int3   
100346c0:	push   ebp
100346c1:	mov    ebp,esp
100346c3:	and    esp,0xfffffff8
100346c6:	push   0xffffffff
100346c8:	push   0x100605c6
100346cd:	mov    eax,fs:0x0
100346d3:	push   eax
100346d4:	sub    esp,0x898
100346da:	mov    eax,ds:0x1007d030
100346df:	xor    eax,esp
100346e1:	mov    DWORD PTR [esp+0x890],eax
100346e8:	push   ebx
100346e9:	push   esi
100346ea:	push   edi
100346eb:	mov    eax,ds:0x1007d030
100346f0:	xor    eax,esp
100346f2:	push   eax
100346f3:	lea    eax,[esp+0x8a8]
100346fa:	mov    fs:0x0,eax
10034700:	mov    eax,DWORD PTR [ebp+0x8]
10034703:	mov    DWORD PTR [esp+0x10],eax
10034707:	call   DWORD PTR ds:0x10065264
1003470d:	and    eax,0xff
10034712:	cmp    eax,0x5
10034715:	jb     0x10034768
10034717:	push   0x7f6f7b70
1003471c:	push   0x1007230c
10034721:	call   0x10003d63
10034726:	push   0x59e094b8
1003472b:	push   eax
1003472c:	call   0x10003d63
10034731:	push   0x432e4a42
10034736:	push   eax
10034737:	call   0x10003d63
1003473c:	push   eax
1003473d:	push   0xb
1003473f:	push   0x10072338
10034744:	call   0x10003f5b
10034749:	add    esp,0x24
1003474c:	lea    edx,[esp+0x94]
10034753:	xor    ebx,ebx
10034755:	movzx  ecx,WORD PTR [eax]
10034758:	mov    WORD PTR [edx],cx
1003475b:	add    eax,0x2
1003475e:	add    edx,0x2
10034761:	cmp    cx,bx
10034764:	jne    0x10034755
10034766:	jmp    0x100347c2
10034768:	push   0x36fe68a6
1003476d:	push   0x10072350
10034772:	call   0x10003d63
10034777:	push   0x553591ec
1003477c:	push   eax
1003477d:	call   0x10003d63
10034782:	push   0x887f34
10034787:	push   eax
10034788:	call   0x10003d63
1003478d:	push   0x148808d0
10034792:	push   eax
10034793:	call   0x10003d63
10034798:	push   eax
10034799:	push   0x4
1003479b:	push   0x10072380
100347a0:	call   0x10003f5b
100347a5:	add    esp,0x2c
100347a8:	lea    edx,[esp+0x94]
100347af:	xor    ebx,ebx
100347b1:	movzx  ecx,WORD PTR [eax]
100347b4:	mov    WORD PTR [edx],cx
100347b7:	add    eax,0x2
100347ba:	add    edx,0x2
100347bd:	cmp    cx,bx
100347c0:	jne    0x100347b1
100347c2:	lea    eax,[esp+0x94]
100347c9:	add    eax,0xfffffffe
100347cc:	lea    esp,[esp+0x0]
100347d0:	mov    cx,WORD PTR [eax+0x2]
100347d4:	add    eax,0x2
100347d7:	cmp    cx,bx
100347da:	jne    0x100347d0
100347dc:	mov    ecx,DWORD PTR ds:0x1007238c
100347e2:	mov    edx,DWORD PTR ds:0x10072390
100347e8:	mov    esi,DWORD PTR ds:0x10065140
100347ee:	mov    DWORD PTR [eax],ecx
100347f0:	mov    ecx,DWORD PTR ds:0x10072394
100347f6:	mov    DWORD PTR [eax+0x4],edx
100347f9:	mov    edx,DWORD PTR ds:0x10072398
100347ff:	mov    DWORD PTR [eax+0x8],ecx
10034802:	mov    DWORD PTR [eax+0xc],edx
10034805:	lea    eax,[esp+0x3c]
10034809:	push   eax
1003480a:	call   esi
1003480c:	mov    edi,DWORD PTR ds:0x10065104
10034812:	lea    ecx,[esp+0x14]
10034816:	push   ecx
10034817:	lea    edx,[esp+0x40]
1003481b:	push   edx
1003481c:	call   edi
1003481e:	push   ebx
1003481f:	push   0x80
10034824:	push   0x3
10034826:	push   ebx
10034827:	push   ebx
10034828:	push   0xc0000000
1003482d:	lea    eax,[esp+0xac]
10034834:	push   eax
10034835:	call   DWORD PTR ds:0x100650bc
1003483b:	cmp    eax,0xffffffff
1003483e:	jne    0x1003490d
10034844:	cmp    BYTE PTR [ebp+0xc],bl
10034847:	je     0x1003493b
1003484d:	call   DWORD PTR ds:0x100650c4
10034853:	cmp    eax,0x20
10034856:	jne    0x1003493b
1003485c:	lea    ecx,[esp+0x50]
10034860:	push   ecx
10034861:	call   esi
10034863:	lea    edx,[esp+0x24]
10034867:	push   edx
10034868:	lea    eax,[esp+0x54]
1003486c:	push   eax
1003486d:	call   edi
1003486f:	mov    ecx,DWORD PTR [esp+0x24]
10034873:	mov    eax,DWORD PTR [esp+0x28]
10034877:	mov    DWORD PTR [esp+0x34],ecx
1003487b:	mov    ecx,eax
1003487d:	and    eax,0x7fffffff
10034882:	mov    DWORD PTR [esp+0x38],eax
10034886:	mov    eax,DWORD PTR [esp+0x14]
1003488a:	fild   QWORD PTR [esp+0x34]
1003488e:	and    ecx,0x80000000
10034894:	mov    DWORD PTR [esp+0x30],ecx
10034898:	mov    DWORD PTR [esp+0x1c],eax
1003489c:	mov    eax,DWORD PTR [esp+0x18]
100348a0:	mov    DWORD PTR [esp+0x2c],ebx
100348a4:	fild   QWORD PTR [esp+0x2c]
100348a8:	mov    ecx,eax
100348aa:	and    eax,0x7fffffff
100348af:	mov    DWORD PTR [esp+0x20],eax
100348b3:	fchs   
100348b5:	and    ecx,0x80000000
100348bb:	faddp  st(1),st
100348bd:	mov    DWORD PTR [esp+0x40],ecx
100348c1:	fild   QWORD PTR [esp+0x1c]
100348c5:	mov    DWORD PTR [esp+0x3c],ebx
100348c9:	fild   QWORD PTR [esp+0x3c]
100348cd:	fchs   
100348cf:	faddp  st(1),st
100348d1:	fadd   QWORD PTR ds:0x10072d28
100348d7:	fcompp 
100348d9:	fnstsw ax
100348db:	test   ah,0x5
100348de:	jnp    0x1003493b
100348e0:	push   ebx
100348e1:	call   DWORD PTR ds:0x100650b8
100348e7:	push   ebx
100348e8:	push   0x80
100348ed:	push   0x3
100348ef:	push   ebx
100348f0:	push   ebx
100348f1:	push   0xc0000000
100348f6:	lea    ecx,[esp+0xac]
100348fd:	push   ecx
100348fe:	call   DWORD PTR ds:0x100650bc
10034904:	cmp    eax,0xffffffff
10034907:	je     0x10034844
1003490d:	mov    ecx,DWORD PTR [esp+0x10]
10034911:	mov    DWORD PTR [ecx],eax
10034913:	mov    eax,ecx
10034915:	mov    ecx,DWORD PTR [esp+0x8a8]
1003491c:	mov    DWORD PTR fs:0x0,ecx
10034923:	pop    ecx
10034924:	pop    edi
10034925:	pop    esi
10034926:	pop    ebx
10034927:	mov    ecx,DWORD PTR [esp+0x890]
1003492e:	xor    ecx,esp
10034930:	call   0x10041d97
10034935:	mov    esp,ebp
10034937:	pop    ebp
10034938:	ret    0x8
1003493b:	call   DWORD PTR ds:0x100650c4
10034941:	push   0x62b714a
10034946:	push   0x1007239c
1003494b:	call   0x10003d63
10034950:	push   0xfe9bd2e
10034955:	push   eax
10034956:	call   0x10003d63
1003495b:	push   0x774e0c86
10034960:	push   eax
10034961:	call   0x10003d63
10034966:	push   eax
10034967:	push   0x12
10034969:	push   0x100723d0
1003496e:	call   0x10003d75
10034973:	mov    esi,eax
10034975:	add    esp,0x24
10034978:	mov    edi,0xf
1003497d:	push   esi
1003497e:	mov    DWORD PTR [esp+0x6c],edi
10034982:	mov    DWORD PTR [esp+0x68],ebx
10034986:	mov    BYTE PTR [esp+0x58],bl
1003498a:	call   0x10041f10
1003498f:	add    esp,0x4
10034992:	push   eax
10034993:	push   esi
10034994:	lea    ecx,[esp+0x58]
10034998:	call   0x10001344
1003499d:	lea    ecx,[esp+0x6c]
100349a1:	mov    DWORD PTR [esp+0x8b0],ebx
100349a8:	call   0x10041e01
100349ad:	push   0xffffffff
100349af:	mov    BYTE PTR [esp+0x8b4],0x1
100349b7:	push   ebx
100349b8:	lea    edx,[esp+0x58]
100349bc:	push   edx
100349bd:	lea    ecx,[esp+0x84]
100349c4:	mov    DWORD PTR [esp+0x78],0x10072304
100349cc:	mov    DWORD PTR [esp+0x9c],edi
100349d3:	mov    DWORD PTR [esp+0x98],ebx
100349da:	mov    BYTE PTR [esp+0x88],bl
100349e1:	call   0x1000124a
100349e6:	push   0x10073924
100349eb:	lea    eax,[esp+0x70]
100349ef:	push   eax
100349f0:	mov    BYTE PTR [esp+0x8b8],bl
100349f7:	call   0x10046704
100349fc:	int3   
100349fd:	int3   
100349fe:	int3   
100349ff:	int3   
10034a00:	mov    ecx,DWORD PTR [eax]
10034a02:	push   ecx
10034a03:	call   DWORD PTR ds:0x10065070
10034a09:	ret    
10034a0a:	int3   
10034a0b:	int3   
10034a0c:	int3   
10034a0d:	int3   
10034a0e:	int3   
10034a0f:	int3   
10034a10:	push   0xffffffff
10034a12:	push   0x10060590
10034a17:	mov    eax,fs:0x0
10034a1d:	push   eax
10034a1e:	sub    esp,0x4c
10034a21:	push   ebx
10034a22:	push   esi
10034a23:	mov    eax,ds:0x1007d030
10034a28:	xor    eax,esp
10034a2a:	push   eax
10034a2b:	lea    eax,[esp+0x58]
10034a2f:	mov    fs:0x0,eax
10034a35:	mov    edx,DWORD PTR [ecx]
10034a37:	xor    ebx,ebx
10034a39:	push   ebx
10034a3a:	lea    eax,[esp+0x14]
10034a3e:	push   eax
10034a3f:	push   ebx
10034a40:	push   ebx
10034a41:	push   ebx
10034a42:	push   ebx
10034a43:	push   0x22c028
10034a48:	push   edx
10034a49:	call   DWORD PTR ds:0x10065260
10034a4f:	test   eax,eax
10034a51:	jne    0x10034ae7
10034a57:	push   0x74ae5632
10034a5c:	push   0x100723e4
10034a61:	call   0x10003d63
10034a66:	push   eax
10034a67:	push   0x1a
10034a69:	push   0x10072414
10034a6e:	call   0x10003d75
10034a73:	mov    esi,eax
10034a75:	push   esi
10034a76:	mov    DWORD PTR [esp+0x44],0xf
10034a7e:	mov    DWORD PTR [esp+0x40],ebx
10034a82:	mov    BYTE PTR [esp+0x30],bl
10034a86:	call   0x10041f10
10034a8b:	add    esp,0x18
10034a8e:	push   eax
10034a8f:	push   esi
10034a90:	lea    ecx,[esp+0x1c]
10034a94:	call   0x10001344
10034a99:	lea    ecx,[esp+0x30]
10034a9d:	mov    DWORD PTR [esp+0x60],ebx
10034aa1:	call   0x10041e01
10034aa6:	push   0xffffffff
10034aa8:	mov    BYTE PTR [esp+0x64],0x1
10034aad:	push   ebx
10034aae:	lea    eax,[esp+0x1c]
10034ab2:	push   eax
10034ab3:	lea    ecx,[esp+0x48]
10034ab7:	mov    DWORD PTR [esp+0x3c],0x10072304
10034abf:	mov    DWORD PTR [esp+0x60],0xf
10034ac7:	mov    DWORD PTR [esp+0x5c],ebx
10034acb:	mov    BYTE PTR [esp+0x4c],bl
10034acf:	call   0x1000124a
10034ad4:	push   0x10073924
10034ad9:	lea    ecx,[esp+0x34]
10034add:	push   ecx
10034ade:	mov    BYTE PTR [esp+0x68],bl
10034ae2:	call   0x10046704
10034ae7:	mov    ecx,DWORD PTR [esp+0x58]
10034aeb:	mov    DWORD PTR fs:0x0,ecx
10034af2:	pop    ecx
10034af3:	pop    esi
10034af4:	pop    ebx
10034af5:	add    esp,0x58
10034af8:	ret    
10034af9:	int3   
10034afa:	int3   
10034afb:	int3   
10034afc:	int3   
10034afd:	int3   
10034afe:	int3   
10034aff:	int3   
10034b00:	push   0xffffffff
10034b02:	push   0x10060558
10034b07:	mov    eax,fs:0x0
10034b0d:	push   eax
10034b0e:	sub    esp,0x4c
10034b11:	push   ebx
10034b12:	push   ebp
10034b13:	push   esi
10034b14:	push   edi
10034b15:	mov    eax,ds:0x1007d030
10034b1a:	xor    eax,esp
10034b1c:	push   eax
10034b1d:	lea    eax,[esp+0x60]
10034b21:	mov    fs:0x0,eax
10034b27:	mov    esi,ecx
10034b29:	xor    ebx,ebx
10034b2b:	mov    DWORD PTR [esp+0x14],ebx
10034b2f:	mov    eax,DWORD PTR [esp+0x74]
10034b33:	mov    DWORD PTR [esp+0x68],ebx
10034b37:	mov    edx,DWORD PTR [esi+0x4c]
10034b3a:	mov    edi,DWORD PTR [esi+0x68]
10034b3d:	mov    eax,DWORD PTR [eax+0x14]
10034b40:	mov    ecx,DWORD PTR [esi+0x30]
10034b43:	add    edi,edx
10034b45:	add    edi,eax
10034b47:	lea    ebp,[edi+ecx*1+0x4]
10034b4b:	lea    eax,[ebp+0x20]
10034b4e:	push   eax
10034b4f:	mov    DWORD PTR [esp+0x78],eax
10034b53:	call   0x10042609
10034b58:	mov    edi,eax
10034b5a:	add    esp,0x4
10034b5d:	cmp    edi,ebx
10034b5f:	je     0x10034b6a
10034b61:	push   ebx
10034b62:	call   0x10041d92
10034b67:	add    esp,0x4
10034b6a:	mov    ecx,DWORD PTR [esp+0x74]
10034b6e:	push   ecx
10034b6f:	push   ebx
10034b70:	push   edi
10034b71:	mov    DWORD PTR [esp+0x20],edi
10034b75:	call   0x10044950
10034b7a:	mov    DWORD PTR [edi],ebp
10034b7c:	mov    eax,DWORD PTR [esi+0x70]
10034b7f:	mov    DWORD PTR [edi+0xc],eax
10034b82:	mov    edx,DWORD PTR [esi+0x78]
10034b85:	mov    DWORD PTR [edi+0x10],edx
10034b88:	mov    eax,DWORD PTR [esi+0x7c]
10034b8b:	mov    DWORD PTR [edi+0x14],eax
10034b8e:	mov    ecx,DWORD PTR [esi+0x80]
10034b94:	mov    DWORD PTR [edi+0x18],ecx
10034b97:	mov    edx,DWORD PTR [esi+0x84]
10034b9d:	mov    DWORD PTR [edi+0x1c],edx
10034ba0:	add    esp,0xc
10034ba3:	mov    DWORD PTR [edi+0x4],0x7
10034baa:	cmp    DWORD PTR [esi+0x18],0x10
10034bae:	jb     0x10034bb5
10034bb0:	mov    ecx,DWORD PTR [esi+0x4]
10034bb3:	jmp    0x10034bb8
10034bb5:	lea    ecx,[esi+0x4]
10034bb8:	lea    edx,[edi+0x20]
10034bbb:	jmp    0x10034bc0
10034bbd:	lea    ecx,[ecx+0x0]
10034bc0:	mov    al,BYTE PTR [ecx]
10034bc2:	mov    BYTE PTR [edx],al
10034bc4:	add    ecx,0x1
10034bc7:	add    edx,0x1
10034bca:	cmp    al,bl
10034bcc:	jne    0x10034bc0
10034bce:	cmp    DWORD PTR [esi+0x34],0x10
10034bd2:	mov    ebp,DWORD PTR [esi+0x14]
10034bd5:	jb     0x10034bdc
10034bd7:	mov    edx,DWORD PTR [esi+0x20]
10034bda:	jmp    0x10034bdf
10034bdc:	lea    edx,[esi+0x20]
10034bdf:	lea    ecx,[edi+ebp*1+0x21]
10034be3:	mov    al,BYTE PTR [edx]
10034be5:	mov    BYTE PTR [ecx],al
10034be7:	add    edx,0x1
10034bea:	add    ecx,0x1
10034bed:	cmp    al,bl
10034bef:	jne    0x10034be3
10034bf1:	cmp    DWORD PTR [esi+0x50],0x10
10034bf5:	mov    eax,DWORD PTR [esi+0x30]
10034bf8:	lea    ebp,[eax+ebp*1+0x2]
10034bfc:	jb     0x10034c03
10034bfe:	mov    edx,DWORD PTR [esi+0x3c]
10034c01:	jmp    0x10034c06
10034c03:	lea    edx,[esi+0x3c]
10034c06:	lea    ecx,[edi+ebp*1+0x20]
10034c0a:	lea    ebx,[ebx+0x0]
10034c10:	mov    al,BYTE PTR [edx]
10034c12:	mov    BYTE PTR [ecx],al
10034c14:	add    edx,0x1
10034c17:	add    ecx,0x1
10034c1a:	cmp    al,bl
10034c1c:	jne    0x10034c10
10034c1e:	cmp    DWORD PTR [esi+0x6c],0x10
10034c22:	mov    eax,DWORD PTR [esi+0x4c]
10034c25:	lea    eax,[eax+ebp*1+0x1]
10034c29:	jb     0x10034c30
10034c2b:	mov    esi,DWORD PTR [esi+0x58]
10034c2e:	jmp    0x10034c33
10034c30:	add    esi,0x58
10034c33:	lea    ecx,[eax+edi*1+0x20]
10034c37:	mov    al,BYTE PTR [esi]
10034c39:	mov    BYTE PTR [ecx],al
10034c3b:	add    esi,0x1
10034c3e:	add    ecx,0x1
10034c41:	cmp    al,bl
10034c43:	jne    0x10034c37
10034c45:	mov    ecx,DWORD PTR [esp+0x74]
10034c49:	mov    edx,DWORD PTR [esp+0x70]
10034c4d:	push   ebx
10034c4e:	lea    eax,[esp+0x1c]
10034c52:	push   eax
10034c53:	mov    eax,DWORD PTR [edx]
10034c55:	push   ebx
10034c56:	push   ebx
10034c57:	push   ecx
10034c58:	push   edi
10034c59:	push   0x22c02c
10034c5e:	push   eax
10034c5f:	call   DWORD PTR ds:0x10065260
10034c65:	test   eax,eax
10034c67:	jne    0x10034cfc
10034c6d:	push   0x2c59d106
10034c72:	push   0x10072430
10034c77:	call   0x10003d63
10034c7c:	push   eax
10034c7d:	push   0x1e
10034c7f:	push   0x1007245c
10034c84:	call   0x10003d75
10034c89:	mov    esi,eax
10034c8b:	mov    edi,0xf
10034c90:	push   esi
10034c91:	mov    DWORD PTR [esp+0x4c],edi
10034c95:	mov    DWORD PTR [esp+0x48],ebx
10034c99:	mov    BYTE PTR [esp+0x38],bl
10034c9d:	call   0x10041f10
10034ca2:	add    esp,0x18
10034ca5:	push   eax
10034ca6:	push   esi
10034ca7:	lea    ecx,[esp+0x24]
10034cab:	call   0x10001344
10034cb0:	lea    ecx,[esp+0x38]
10034cb4:	mov    BYTE PTR [esp+0x68],0x1
10034cb9:	call   0x10041e01
10034cbe:	push   0xffffffff
10034cc0:	mov    BYTE PTR [esp+0x6c],0x2
10034cc5:	push   ebx
10034cc6:	lea    ecx,[esp+0x24]
10034cca:	push   ecx
10034ccb:	lea    ecx,[esp+0x50]
10034ccf:	mov    DWORD PTR [esp+0x44],0x10072304
10034cd7:	mov    DWORD PTR [esp+0x68],edi
10034cdb:	mov    DWORD PTR [esp+0x64],ebx
10034cdf:	mov    BYTE PTR [esp+0x54],bl
10034ce3:	call   0x1000124a
10034ce8:	push   0x10073924
10034ced:	lea    edx,[esp+0x3c]
10034cf1:	push   edx
10034cf2:	mov    BYTE PTR [esp+0x70],0x1
10034cf7:	call   0x10046704
10034cfc:	push   edi
10034cfd:	call   0x10041d92
10034d02:	add    esp,0x4
10034d05:	mov    ecx,DWORD PTR [esp+0x60]
10034d09:	mov    DWORD PTR fs:0x0,ecx
10034d10:	pop    ecx
10034d11:	pop    edi
10034d12:	pop    esi
10034d13:	pop    ebp
10034d14:	pop    ebx
10034d15:	add    esp,0x58
10034d18:	ret    0x8
10034d1b:	int3   
10034d1c:	int3   
10034d1d:	int3   
10034d1e:	int3   
10034d1f:	int3   
10034d20:	push   0xffffffff
10034d22:	push   0x10060558
10034d27:	mov    eax,fs:0x0
10034d2d:	push   eax
10034d2e:	sub    esp,0x4c
10034d31:	push   ebx
10034d32:	push   ebp
10034d33:	push   esi
10034d34:	push   edi
10034d35:	mov    eax,ds:0x1007d030
10034d3a:	xor    eax,esp
10034d3c:	push   eax
10034d3d:	lea    eax,[esp+0x60]
10034d41:	mov    fs:0x0,eax
10034d47:	xor    ebx,ebx
10034d49:	mov    DWORD PTR [esp+0x14],ebx
10034d4d:	mov    eax,DWORD PTR [esp+0x74]
10034d51:	mov    DWORD PTR [esp+0x68],ebx
10034d55:	mov    eax,DWORD PTR [eax+0x14]
10034d58:	lea    edi,[eax+0x1]
10034d5b:	lea    ebp,[edi+0x20]
10034d5e:	push   ebp
10034d5f:	call   0x10042609
10034d64:	mov    esi,eax
10034d66:	add    esp,0x4
10034d69:	cmp    esi,ebx
10034d6b:	je     0x10034d76
10034d6d:	push   ebx
10034d6e:	call   0x10041d92
10034d73:	add    esp,0x4
10034d76:	push   ebp
10034d77:	push   ebx
10034d78:	push   esi
10034d79:	mov    DWORD PTR [esp+0x20],esi
10034d7d:	call   0x10044950
10034d82:	mov    eax,DWORD PTR [esp+0x84]
10034d89:	add    esp,0xc
10034d8c:	cmp    eax,ebx
10034d8e:	mov    DWORD PTR [esi],edi
10034d90:	je     0x10034da1
10034d92:	mov    ecx,DWORD PTR [eax]
10034d94:	mov    DWORD PTR [esi+0x10],ecx
10034d97:	mov    edx,DWORD PTR [eax+0x4]
10034d9a:	mov    DWORD PTR [esi+0x14],edx
10034d9d:	or     DWORD PTR [esi+0x4],0x2
10034da1:	mov    eax,DWORD PTR [esp+0x7c]
10034da5:	cmp    eax,ebx
10034da7:	mov    edx,0x10
10034dac:	je     0x10034dbf
10034dae:	mov    ecx,DWORD PTR [eax]
10034db0:	mov    DWORD PTR [esi+0x18],ecx
10034db3:	mov    eax,DWORD PTR [eax+0x4]
10034db6:	mov    DWORD PTR [esi+0x1c],eax
10034db9:	or     DWORD PTR [esi+0x4],0x4
10034dbd:	jmp    0x10034dc2
10034dbf:	or     DWORD PTR [esi+0x4],edx
10034dc2:	mov    ecx,DWORD PTR [esp+0x74]
10034dc6:	cmp    DWORD PTR [ecx+0x18],edx
10034dc9:	jb     0x10034dd0
10034dcb:	mov    ecx,DWORD PTR [ecx+0x4]
10034dce:	jmp    0x10034dd3
10034dd0:	add    ecx,0x4
10034dd3:	lea    edx,[esi+0x20]
10034dd6:	mov    al,BYTE PTR [ecx]
10034dd8:	mov    BYTE PTR [edx],al
10034dda:	add    ecx,0x1
10034ddd:	add    edx,0x1
10034de0:	cmp    al,bl
10034de2:	jne    0x10034dd6
10034de4:	mov    edx,DWORD PTR [esp+0x70]
10034de8:	mov    eax,DWORD PTR [edx]
10034dea:	push   ebx
10034deb:	lea    ecx,[esp+0x1c]
10034def:	push   ecx
10034df0:	push   ebx
10034df1:	push   ebx
10034df2:	push   ebp
10034df3:	push   esi
10034df4:	push   0x22c02c
10034df9:	push   eax
10034dfa:	call   DWORD PTR ds:0x10065260
10034e00:	test   eax,eax
10034e02:	jne    0x10034e8c
10034e08:	push   0x1007247c
10034e0d:	push   0x1e
10034e0f:	push   0x1007245c
10034e14:	call   0x10003d75
10034e19:	mov    esi,eax
10034e1b:	mov    edi,0xf
10034e20:	push   esi
10034e21:	mov    DWORD PTR [esp+0x44],edi
10034e25:	mov    DWORD PTR [esp+0x40],ebx
10034e29:	mov    BYTE PTR [esp+0x30],bl
10034e2d:	call   0x10041f10
10034e32:	add    esp,0x10
10034e35:	push   eax
10034e36:	push   esi
10034e37:	lea    ecx,[esp+0x24]
10034e3b:	call   0x10001344
10034e40:	lea    ecx,[esp+0x38]
10034e44:	mov    BYTE PTR [esp+0x68],0x1
10034e49:	call   0x10041e01
10034e4e:	push   0xffffffff
10034e50:	mov    BYTE PTR [esp+0x6c],0x2
10034e55:	push   ebx
10034e56:	lea    ecx,[esp+0x24]
10034e5a:	push   ecx
10034e5b:	lea    ecx,[esp+0x50]
10034e5f:	mov    DWORD PTR [esp+0x44],0x10072304
10034e67:	mov    DWORD PTR [esp+0x68],edi
10034e6b:	mov    DWORD PTR [esp+0x64],ebx
10034e6f:	mov    BYTE PTR [esp+0x54],bl
10034e73:	call   0x1000124a
10034e78:	push   0x10073924
10034e7d:	lea    edx,[esp+0x3c]
10034e81:	push   edx
10034e82:	mov    BYTE PTR [esp+0x70],0x1
10034e87:	call   0x10046704
10034e8c:	push   esi
10034e8d:	call   0x10041d92
10034e92:	add    esp,0x4
10034e95:	mov    ecx,DWORD PTR [esp+0x60]
10034e99:	mov    DWORD PTR fs:0x0,ecx
10034ea0:	pop    ecx
10034ea1:	pop    edi
10034ea2:	pop    esi
10034ea3:	pop    ebp
10034ea4:	pop    ebx
10034ea5:	add    esp,0x58
10034ea8:	ret    0x10
10034eab:	int3   
10034eac:	int3   
10034ead:	int3   
10034eae:	int3   
10034eaf:	int3   
10034eb0:	push   0xffffffff
10034eb2:	push   0x10060520
10034eb7:	mov    eax,fs:0x0
10034ebd:	push   eax
10034ebe:	sub    esp,0x50
10034ec1:	push   ebx
10034ec2:	push   ebp
10034ec3:	push   esi
10034ec4:	push   edi
10034ec5:	mov    eax,ds:0x1007d030
10034eca:	xor    eax,esp
10034ecc:	push   eax
10034ecd:	lea    eax,[esp+0x64]
10034ed1:	mov    fs:0x0,eax
10034ed7:	mov    ebp,DWORD PTR [esp+0x78]
10034edb:	mov    eax,DWORD PTR [ebp+0x14]
10034ede:	lea    esi,[eax+0x1]
10034ee1:	lea    eax,[esi+0xe8]
10034ee7:	push   eax
10034ee8:	call   0x10042609
10034eed:	mov    edi,eax
10034eef:	add    esp,0x4
10034ef2:	mov    DWORD PTR [esp+0x14],edi
10034ef6:	xor    ebx,ebx
10034ef8:	mov    DWORD PTR [esp+0x6c],ebx
10034efc:	mov    DWORD PTR [edi],esi
10034efe:	mov    DWORD PTR [edi+0x4],ebx
10034f01:	cmp    DWORD PTR [ebp+0x18],0x10
10034f05:	jb     0x10034f0c
10034f07:	mov    ecx,DWORD PTR [ebp+0x4]
10034f0a:	jmp    0x10034f0f
10034f0c:	lea    ecx,[ebp+0x4]
10034f0f:	lea    edx,[edi+0x20]
10034f12:	mov    al,BYTE PTR [ecx]
10034f14:	mov    BYTE PTR [edx],al
10034f16:	add    ecx,0x1
10034f19:	add    edx,0x1
10034f1c:	cmp    al,bl
10034f1e:	jne    0x10034f12
10034f20:	mov    eax,DWORD PTR [edi]
10034f22:	mov    edx,DWORD PTR [esp+0x74]
10034f26:	push   ebx
10034f27:	add    eax,0x20
10034f2a:	lea    ecx,[esp+0x1c]
10034f2e:	push   ecx
10034f2f:	push   eax
10034f30:	push   edi
10034f31:	push   eax
10034f32:	mov    eax,DWORD PTR [edx]
10034f34:	push   edi
10034f35:	push   0x22c030
10034f3a:	push   eax
10034f3b:	call   DWORD PTR ds:0x10065260
10034f41:	test   eax,eax
10034f43:	jne    0x10034fd8
10034f49:	push   0x3652fe1e
10034f4e:	push   0x100724ac
10034f53:	call   0x10003d63
10034f58:	push   eax
10034f59:	push   0x1e
10034f5b:	push   0x100724d0
10034f60:	call   0x10003d75
10034f65:	mov    esi,eax
10034f67:	mov    edi,0xf
10034f6c:	push   esi
10034f6d:	mov    DWORD PTR [esp+0x4c],edi
10034f71:	mov    DWORD PTR [esp+0x48],ebx
10034f75:	mov    BYTE PTR [esp+0x38],bl
10034f79:	call   0x10041f10
10034f7e:	add    esp,0x18
10034f81:	push   eax
10034f82:	push   esi
10034f83:	lea    ecx,[esp+0x24]
10034f87:	call   0x10001344
10034f8c:	lea    ecx,[esp+0x38]
10034f90:	mov    BYTE PTR [esp+0x6c],0x1
10034f95:	call   0x10041e01
10034f9a:	push   0xffffffff
10034f9c:	mov    BYTE PTR [esp+0x70],0x2
10034fa1:	push   ebx
10034fa2:	lea    ecx,[esp+0x24]
10034fa6:	push   ecx
10034fa7:	lea    ecx,[esp+0x50]
10034fab:	mov    DWORD PTR [esp+0x44],0x10072304
10034fb3:	mov    DWORD PTR [esp+0x68],edi
10034fb7:	mov    DWORD PTR [esp+0x64],ebx
10034fbb:	mov    BYTE PTR [esp+0x54],bl
10034fbf:	call   0x1000124a
10034fc4:	push   0x10073924
10034fc9:	lea    edx,[esp+0x3c]
10034fcd:	push   edx
10034fce:	mov    BYTE PTR [esp+0x74],0x1
10034fd3:	call   0x10046704
10034fd8:	cmp    DWORD PTR [edi+0x8],0x2
10034fdc:	je     0x10035004
10034fde:	cmp    DWORD PTR [edi+0x8],0x1
10034fe2:	jne    0x10035112
10034fe8:	push   edi
10034fe9:	call   0x10041d92
10034fee:	add    esp,0x4
10034ff1:	xor    al,al
10034ff3:	jmp    0x10035265
10034ff8:	jmp    0x10035000
10034ffa:	lea    ebx,[ebx+0x0]
10035000:	mov    ebp,DWORD PTR [esp+0x78]
10035004:	mov    eax,DWORD PTR [ebp+0x14]
10035007:	mov    ebp,DWORD PTR [edi]
10035009:	lea    ecx,[eax+0x1]
1003500c:	cmp    ebp,ecx
1003500e:	ja     0x10035013
10035010:	lea    ebp,[eax+0x1]
10035013:	lea    edx,[ebp+0x20]
10035016:	push   edx
10035017:	call   0x10042609
1003501c:	mov    esi,eax
1003501e:	add    esp,0x4
10035021:	cmp    esi,edi
10035023:	je     0x1003502e
10035025:	push   edi
10035026:	call   0x10041d92
1003502b:	add    esp,0x4
1003502e:	mov    ecx,DWORD PTR [esp+0x78]
10035032:	mov    edi,esi
10035034:	mov    DWORD PTR [esi],ebp
10035036:	mov    DWORD PTR [esp+0x14],edi
1003503a:	mov    DWORD PTR [esi+0x4],ebx
1003503d:	call   0x100011f8
10035042:	lea    edx,[esi+0x20]
10035045:	mov    cl,BYTE PTR [eax]
10035047:	mov    BYTE PTR [edx],cl
10035049:	add    eax,0x1
1003504c:	add    edx,0x1
1003504f:	cmp    cl,bl
10035051:	jne    0x10035045
10035053:	mov    eax,DWORD PTR [esi]
10035055:	mov    edx,DWORD PTR [esp+0x74]
10035059:	push   ebx
1003505a:	add    eax,0x20
1003505d:	lea    ecx,[esp+0x1c]
10035061:	push   ecx
10035062:	push   eax
10035063:	push   esi
10035064:	push   eax
10035065:	mov    eax,DWORD PTR [edx]
10035067:	push   esi
10035068:	push   0x22c030
1003506d:	push   eax
1003506e:	call   DWORD PTR ds:0x10065260
10035074:	test   eax,eax
10035076:	je     0x10035083
10035078:	cmp    DWORD PTR [esi+0x8],0x2
1003507c:	je     0x10035000
1003507e:	jmp    0x10034fde
10035083:	push   0x39291550
10035088:	push   0x100724f0
1003508d:	call   0x10003d63
10035092:	push   eax
10035093:	push   0x1e
10035095:	push   0x100724d0
1003509a:	call   0x10003d75
1003509f:	mov    esi,eax
100350a1:	mov    edi,0xf
100350a6:	push   esi
100350a7:	mov    DWORD PTR [esp+0x4c],edi
100350ab:	mov    DWORD PTR [esp+0x48],ebx
100350af:	mov    BYTE PTR [esp+0x38],bl
100350b3:	call   0x10041f10
100350b8:	add    esp,0x18
100350bb:	push   eax
100350bc:	push   esi
100350bd:	lea    ecx,[esp+0x24]
100350c1:	call   0x10001344
100350c6:	lea    ecx,[esp+0x38]
100350ca:	mov    BYTE PTR [esp+0x6c],0x3
100350cf:	call   0x10041e01
100350d4:	push   0xffffffff
100350d6:	mov    BYTE PTR [esp+0x70],0x4
100350db:	push   ebx
100350dc:	lea    ecx,[esp+0x24]
100350e0:	push   ecx
100350e1:	lea    ecx,[esp+0x50]
100350e5:	mov    DWORD PTR [esp+0x44],0x10072304
100350ed:	mov    DWORD PTR [esp+0x68],edi
100350f1:	mov    DWORD PTR [esp+0x64],ebx
100350f5:	mov    BYTE PTR [esp+0x54],bl
100350f9:	call   0x1000124a
100350fe:	push   0x10073924
10035103:	lea    edx,[esp+0x3c]
10035107:	push   edx
10035108:	mov    BYTE PTR [esp+0x74],0x3
1003510d:	call   0x10046704
10035112:	lea    eax,[edi+0x20]
10035115:	lea    edx,[eax+0x1]
10035118:	mov    cl,BYTE PTR [eax]
1003511a:	add    eax,0x1
1003511d:	cmp    cl,bl
1003511f:	jne    0x10035118
10035121:	sub    eax,edx
10035123:	mov    esi,eax
10035125:	lea    ebp,[esi+edi*1+0x21]
10035129:	push   ebp
1003512a:	mov    DWORD PTR [esp+0x38],0xf
10035132:	mov    DWORD PTR [esp+0x34],ebx
10035136:	mov    BYTE PTR [esp+0x24],bl
1003513a:	call   0x10041f10
1003513f:	add    esp,0x4
10035142:	push   eax
10035143:	push   ebp
10035144:	lea    ecx,[esp+0x24]
10035148:	call   0x10001344
1003514d:	mov    ebp,DWORD PTR [esp+0x7c]
10035151:	push   0xffffffff
10035153:	push   ebx
10035154:	lea    eax,[esp+0x24]
10035158:	push   eax
10035159:	lea    ecx,[ebp+0x1c]
1003515c:	mov    BYTE PTR [esp+0x78],0x5
10035161:	call   0x1000124a
10035166:	mov    BYTE PTR [esp+0x6c],bl
1003516a:	cmp    DWORD PTR [esp+0x34],0x10
1003516f:	jb     0x1003517e
10035171:	mov    ecx,DWORD PTR [esp+0x20]
10035175:	push   ecx
10035176:	call   0x10041d92
1003517b:	add    esp,0x4
1003517e:	mov    eax,DWORD PTR [ebp+0x30]
10035181:	lea    esi,[esi+eax*1+0x2]
10035185:	lea    ebp,[esi+edi*1+0x20]
10035189:	push   ebp
1003518a:	mov    DWORD PTR [esp+0x38],0xf
10035192:	mov    DWORD PTR [esp+0x34],ebx
10035196:	mov    BYTE PTR [esp+0x24],bl
1003519a:	call   0x10041f10
1003519f:	add    esp,0x4
100351a2:	push   eax
100351a3:	push   ebp
100351a4:	lea    ecx,[esp+0x24]
100351a8:	call   0x10001344
100351ad:	mov    ebp,DWORD PTR [esp+0x7c]
100351b1:	push   0xffffffff
100351b3:	push   ebx
100351b4:	lea    edx,[esp+0x24]
100351b8:	push   edx
100351b9:	lea    ecx,[ebp+0x38]
100351bc:	mov    BYTE PTR [esp+0x78],0x6
100351c1:	call   0x1000124a
100351c6:	mov    BYTE PTR [esp+0x6c],bl
100351ca:	cmp    DWORD PTR [esp+0x34],0x10
100351cf:	jb     0x100351de
100351d1:	mov    eax,DWORD PTR [esp+0x20]
100351d5:	push   eax
100351d6:	call   0x10041d92
100351db:	add    esp,0x4
100351de:	mov    eax,DWORD PTR [ebp+0x4c]
100351e1:	lea    esi,[esi+eax*1+0x1]
100351e5:	lea    esi,[esi+edi*1+0x20]
100351e9:	push   esi
100351ea:	mov    DWORD PTR [esp+0x38],0xf
100351f2:	mov    DWORD PTR [esp+0x34],ebx
100351f6:	mov    BYTE PTR [esp+0x24],bl
100351fa:	call   0x10041f10
100351ff:	add    esp,0x4
10035202:	push   eax
10035203:	push   esi
10035204:	lea    ecx,[esp+0x24]
10035208:	call   0x10001344
1003520d:	push   0xffffffff
1003520f:	push   ebx
10035210:	lea    ecx,[esp+0x24]
10035214:	push   ecx
10035215:	lea    ecx,[ebp+0x54]
10035218:	mov    BYTE PTR [esp+0x78],0x7
1003521d:	call   0x1000124a
10035222:	cmp    DWORD PTR [esp+0x34],0x10
10035227:	jb     0x10035236
10035229:	mov    edx,DWORD PTR [esp+0x20]
1003522d:	push   edx
1003522e:	call   0x10041d92
10035233:	add    esp,0x4
10035236:	mov    eax,DWORD PTR [edi+0xc]
10035239:	mov    DWORD PTR [ebp+0x70],eax
1003523c:	mov    ecx,DWORD PTR [edi+0x10]
1003523f:	mov    DWORD PTR [ebp+0x78],ecx
10035242:	mov    edx,DWORD PTR [edi+0x14]
10035245:	mov    DWORD PTR [ebp+0x7c],edx
10035248:	mov    eax,DWORD PTR [edi+0x18]
1003524b:	mov    DWORD PTR [ebp+0x80],eax
10035251:	mov    ecx,DWORD PTR [edi+0x1c]
10035254:	push   edi
10035255:	mov    DWORD PTR [ebp+0x84],ecx
1003525b:	call   0x10041d92
10035260:	add    esp,0x4
10035263:	mov    al,0x1
10035265:	mov    ecx,DWORD PTR [esp+0x64]
10035269:	mov    DWORD PTR fs:0x0,ecx
10035270:	pop    ecx
10035271:	pop    edi
10035272:	pop    esi
10035273:	pop    ebp
10035274:	pop    ebx
10035275:	add    esp,0x5c
10035278:	ret    0xc
1003527b:	int3   
1003527c:	int3   
1003527d:	int3   
1003527e:	int3   
1003527f:	int3   
10035280:	push   ebp
10035281:	mov    ebp,esp
10035283:	and    esp,0xfffffff8
10035286:	push   0xffffffff
10035288:	push   0x100604b8
1003528d:	mov    eax,fs:0x0
10035293:	push   eax
10035294:	sub    esp,0x58
10035297:	push   ebx
10035298:	push   esi
10035299:	push   edi
1003529a:	mov    eax,ds:0x1007d030
1003529f:	xor    eax,esp
100352a1:	push   eax
100352a2:	lea    eax,[esp+0x68]
100352a6:	mov    fs:0x0,eax
100352ac:	mov    ebx,ecx
100352ae:	xor    eax,eax
100352b0:	mov    DWORD PTR [esp+0x18],eax
100352b4:	mov    ecx,DWORD PTR [ebp+0xc]
100352b7:	mov    DWORD PTR [esp+0x70],eax
100352bb:	mov    eax,DWORD PTR [ebx+0x14]
100352be:	mov    ecx,DWORD PTR [ecx+0x14]
100352c1:	lea    edi,[eax+ecx*1+0x4]
100352c5:	lea    eax,[edi+0xc]
100352c8:	push   eax
100352c9:	mov    DWORD PTR [esp+0x18],eax
100352cd:	call   0x10042609
100352d2:	mov    esi,eax
100352d4:	add    esp,0x4
100352d7:	test   esi,esi
100352d9:	je     0x100352e5
100352db:	push   0x0
100352dd:	call   0x10041d92
100352e2:	add    esp,0x4
100352e5:	mov    edx,DWORD PTR [esp+0x14]
100352e9:	push   edx
100352ea:	push   0x0
100352ec:	push   esi
100352ed:	mov    DWORD PTR [esp+0x24],esi
100352f1:	call   0x10044950
100352f6:	mov    DWORD PTR [esi],edi
100352f8:	mov    edi,0x10
100352fd:	add    esp,0xc
10035300:	cmp    DWORD PTR [ebx+0x18],edi
10035303:	jb     0x1003530a
10035305:	mov    ecx,DWORD PTR [ebx+0x4]
10035308:	jmp    0x1003530d
1003530a:	lea    ecx,[ebx+0x4]
1003530d:	lea    edx,[esi+0xc]
10035310:	mov    al,BYTE PTR [ecx]
10035312:	mov    BYTE PTR [edx],al
10035314:	add    ecx,0x1
10035317:	add    edx,0x1
1003531a:	test   al,al
1003531c:	jne    0x10035310
1003531e:	mov    edx,DWORD PTR [ebp+0xc]
10035321:	cmp    DWORD PTR [edx+0x18],edi
10035324:	mov    ebx,DWORD PTR [ebx+0x14]
10035327:	jb     0x1003532e
10035329:	mov    edx,DWORD PTR [edx+0x4]
1003532c:	jmp    0x10035331
1003532e:	add    edx,0x4
10035331:	lea    ecx,[ebx+esi*1+0xd]
10035335:	mov    al,BYTE PTR [edx]
10035337:	mov    BYTE PTR [ecx],al
10035339:	add    edx,0x1
1003533c:	add    ecx,0x1
1003533f:	test   al,al
10035341:	jne    0x10035335
10035343:	mov    ecx,DWORD PTR [esp+0x14]
10035347:	mov    edx,DWORD PTR [ebp+0x8]
1003534a:	xor    ebx,ebx
1003534c:	push   ebx
1003534d:	lea    eax,[esp+0x20]
10035351:	push   eax
10035352:	mov    eax,DWORD PTR [edx]
10035354:	push   ebx
10035355:	push   ebx
10035356:	push   ecx
10035357:	push   esi
10035358:	push   0x22c084
1003535d:	push   eax
1003535e:	call   DWORD PTR ds:0x10065260
10035364:	test   eax,eax
10035366:	jne    0x10035411
1003536c:	push   0x7ff33eb0
10035371:	push   0x10072514
10035376:	call   0x10003d63
1003537b:	push   0x2c2d95b0
10035380:	push   eax
10035381:	call   0x10003d63
10035386:	push   0x4da0a41c
1003538b:	push   eax
1003538c:	call   0x10003d63
10035391:	push   eax
10035392:	push   0x16
10035394:	push   0x10072548
10035399:	call   0x10003d75
1003539e:	mov    esi,eax
100353a0:	mov    edi,0xf
100353a5:	push   esi
100353a6:	mov    DWORD PTR [esp+0x60],edi
100353aa:	mov    DWORD PTR [esp+0x5c],ebx
100353ae:	mov    BYTE PTR [esp+0x4c],bl
100353b2:	call   0x10041f10
100353b7:	add    esp,0x28
100353ba:	push   eax
100353bb:	push   esi
100353bc:	lea    ecx,[esp+0x28]
100353c0:	call   0x10001344
100353c5:	lea    ecx,[esp+0x3c]
100353c9:	mov    BYTE PTR [esp+0x70],0x1
100353ce:	call   0x10041e01
100353d3:	push   0xffffffff
100353d5:	mov    BYTE PTR [esp+0x74],0x2
100353da:	push   ebx
100353db:	lea    ecx,[esp+0x28]
100353df:	push   ecx
100353e0:	lea    ecx,[esp+0x54]
100353e4:	mov    DWORD PTR [esp+0x48],0x10072304
100353ec:	mov    DWORD PTR [esp+0x6c],edi
100353f0:	mov    DWORD PTR [esp+0x68],ebx
100353f4:	mov    BYTE PTR [esp+0x58],bl
100353f8:	call   0x1000124a
100353fd:	push   0x10073924
10035402:	lea    edx,[esp+0x40]
10035406:	push   edx
10035407:	mov    BYTE PTR [esp+0x78],0x1
1003540c:	call   0x10046704
10035411:	push   esi
10035412:	call   0x10041d92
10035417:	add    esp,0x4
1003541a:	mov    ecx,DWORD PTR [esp+0x68]
1003541e:	mov    DWORD PTR fs:0x0,ecx
10035425:	pop    ecx
10035426:	pop    edi
10035427:	pop    esi
10035428:	pop    ebx
10035429:	mov    esp,ebp
1003542b:	pop    ebp
1003542c:	ret    0x8
1003542f:	int3   
10035430:	push   ebp
10035431:	mov    ebp,esp
10035433:	and    esp,0xfffffff8
10035436:	push   0xffffffff
10035438:	push   0x10060478
1003543d:	mov    eax,fs:0x0
10035443:	push   eax
10035444:	sub    esp,0x50
10035447:	push   ebx
10035448:	push   esi
10035449:	push   edi
1003544a:	mov    eax,ds:0x1007d030
1003544f:	xor    eax,esp
10035451:	push   eax
10035452:	lea    eax,[esp+0x60]
10035456:	mov    fs:0x0,eax
1003545c:	mov    ebx,DWORD PTR [ebp+0x10]
1003545f:	mov    DWORD PTR [esp+0x14],0x0
10035467:	mov    esi,DWORD PTR [ebx+0x14]
1003546a:	lea    eax,[esi+0x40d]
10035470:	push   eax
10035471:	call   0x10042609
10035476:	mov    edi,eax
10035478:	add    esp,0x4
1003547b:	mov    DWORD PTR [esp+0x10],edi
1003547f:	add    esi,0x401
10035485:	mov    DWORD PTR [esp+0x68],0x0
1003548d:	mov    DWORD PTR [edi],esi
1003548f:	cmp    DWORD PTR [ebx+0x18],0x10
10035493:	jb     0x1003549a
10035495:	mov    ecx,DWORD PTR [ebx+0x4]
10035498:	jmp    0x1003549d
1003549a:	lea    ecx,[ebx+0x4]
1003549d:	lea    edx,[edi+0xc]
100354a0:	mov    al,BYTE PTR [ecx]
100354a2:	mov    BYTE PTR [edx],al
100354a4:	add    ecx,0x1
100354a7:	add    edx,0x1
100354aa:	test   al,al
100354ac:	jne    0x100354a0
100354ae:	mov    eax,DWORD PTR [edi]
100354b0:	mov    edx,DWORD PTR [ebp+0x8]
100354b3:	push   0x0
100354b5:	add    eax,0xc
100354b8:	lea    ecx,[esp+0x18]
100354bc:	push   ecx
100354bd:	push   eax
100354be:	push   edi
100354bf:	push   eax
100354c0:	mov    eax,DWORD PTR [edx]
100354c2:	push   edi
100354c3:	push   0x22c088
100354c8:	push   eax
100354c9:	call   DWORD PTR ds:0x10065260
100354cf:	test   eax,eax
100354d1:	jne    0x1003555d
100354d7:	push   0x10072560
100354dc:	push   0x1b
100354de:	push   0x100725a0
100354e3:	call   0x10003d75
100354e8:	mov    esi,eax
100354ea:	xor    ebx,ebx
100354ec:	mov    edi,0xf
100354f1:	push   esi
100354f2:	mov    DWORD PTR [esp+0x40],edi
100354f6:	mov    DWORD PTR [esp+0x3c],ebx
100354fa:	mov    BYTE PTR [esp+0x2c],bl
100354fe:	call   0x10041f10
10035503:	add    esp,0x10
10035506:	push   eax
10035507:	push   esi
10035508:	lea    ecx,[esp+0x20]
1003550c:	call   0x10001344
10035511:	lea    ecx,[esp+0x34]
10035515:	mov    BYTE PTR [esp+0x68],0x1
1003551a:	call   0x10041e01
1003551f:	push   0xffffffff
10035521:	mov    BYTE PTR [esp+0x6c],0x2
10035526:	push   ebx
10035527:	lea    ecx,[esp+0x20]
1003552b:	push   ecx
1003552c:	lea    ecx,[esp+0x4c]
10035530:	mov    DWORD PTR [esp+0x40],0x10072304
10035538:	mov    DWORD PTR [esp+0x64],edi
1003553c:	mov    DWORD PTR [esp+0x60],ebx
10035540:	mov    BYTE PTR [esp+0x50],bl
10035544:	call   0x1000124a
10035549:	push   0x10073924
1003554e:	lea    edx,[esp+0x38]
10035552:	push   edx
10035553:	mov    BYTE PTR [esp+0x70],0x1
10035558:	call   0x10046704
1003555d:	cmp    DWORD PTR [edi+0x8],0x2
10035561:	je     0x100355a3
10035563:	cmp    DWORD PTR [edi+0x8],0x0
10035567:	je     0x100356b8
1003556d:	mov    esi,DWORD PTR [ebp+0xc]
10035570:	mov    DWORD PTR [esi+0x18],0xf
10035577:	mov    DWORD PTR [esi+0x14],0x0
1003557e:	push   0x1006bb18
10035583:	mov    BYTE PTR [esi+0x4],0x0
10035587:	call   0x10041f10
1003558c:	add    esp,0x4
1003558f:	push   eax
10035590:	push   0x1006bb18
10035595:	jmp    0x100356ee
1003559a:	lea    ebx,[ebx+0x0]
100355a0:	mov    ebx,DWORD PTR [ebp+0x10]
100355a3:	mov    eax,DWORD PTR [ebx+0x14]
100355a6:	mov    ebx,DWORD PTR [edi]
100355a8:	lea    ecx,[eax+0x1]
100355ab:	cmp    ebx,ecx
100355ad:	ja     0x100355b2
100355af:	lea    ebx,[eax+0x1]
100355b2:	lea    edx,[ebx+0xc]
100355b5:	push   edx
100355b6:	call   0x10042609
100355bb:	mov    esi,eax
100355bd:	add    esp,0x4
100355c0:	cmp    esi,edi
100355c2:	je     0x100355cd
100355c4:	push   edi
100355c5:	call   0x10041d92
100355ca:	add    esp,0x4
100355cd:	mov    ecx,DWORD PTR [ebp+0x10]
100355d0:	mov    edi,esi
100355d2:	mov    DWORD PTR [esp+0x10],edi
100355d6:	mov    DWORD PTR [esi],ebx
100355d8:	call   0x100011f8
100355dd:	lea    edx,[esi+0xc]
100355e0:	mov    cl,BYTE PTR [eax]
100355e2:	mov    BYTE PTR [edx],cl
100355e4:	add    eax,0x1
100355e7:	add    edx,0x1
100355ea:	test   cl,cl
100355ec:	jne    0x100355e0
100355ee:	mov    eax,DWORD PTR [esi]
100355f0:	mov    edx,DWORD PTR [ebp+0x8]
100355f3:	push   0x0
100355f5:	add    eax,0xc
100355f8:	lea    ecx,[esp+0x18]
100355fc:	push   ecx
100355fd:	push   eax
100355fe:	push   esi
100355ff:	push   eax
10035600:	mov    eax,DWORD PTR [edx]
10035602:	push   esi
10035603:	push   0x22c088
10035608:	push   eax
10035609:	call   DWORD PTR ds:0x10065260
1003560f:	test   eax,eax
10035611:	je     0x1003561e
10035613:	cmp    DWORD PTR [esi+0x8],0x2
10035617:	je     0x100355a0
10035619:	jmp    0x10035563
1003561e:	push   0x714f2ee6
10035623:	push   0x100725bc
10035628:	call   0x10003d63
1003562d:	push   eax
1003562e:	push   0x16
10035630:	push   0x100725f0
10035635:	call   0x10003d75
1003563a:	mov    esi,eax
1003563c:	mov    edi,0xf
10035641:	push   esi
10035642:	mov    DWORD PTR [esp+0x48],edi
10035646:	mov    DWORD PTR [esp+0x44],0x0
1003564e:	mov    BYTE PTR [esp+0x34],0x0
10035653:	call   0x10041f10
10035658:	add    esp,0x18
1003565b:	push   eax
1003565c:	push   esi
1003565d:	lea    ecx,[esp+0x20]
10035661:	call   0x10001344
10035666:	mov    bl,0x3
10035668:	lea    ecx,[esp+0x34]
1003566c:	mov    BYTE PTR [esp+0x68],bl
10035670:	call   0x10041e01
10035675:	push   0xffffffff
10035677:	mov    BYTE PTR [esp+0x6c],0x4
1003567c:	push   0x0
1003567e:	lea    ecx,[esp+0x20]
10035682:	push   ecx
10035683:	lea    ecx,[esp+0x4c]
10035687:	mov    DWORD PTR [esp+0x40],0x10072304
1003568f:	mov    DWORD PTR [esp+0x64],edi
10035693:	mov    DWORD PTR [esp+0x60],0x0
1003569b:	mov    BYTE PTR [esp+0x50],0x0
100356a0:	call   0x1000124a
100356a5:	push   0x10073924
100356aa:	lea    edx,[esp+0x38]
100356ae:	push   edx
100356af:	mov    BYTE PTR [esp+0x70],bl
100356b3:	call   0x10046704
100356b8:	lea    eax,[edi+0xc]
100356bb:	lea    edx,[eax+0x1]
100356be:	mov    edi,edi
100356c0:	mov    cl,BYTE PTR [eax]
100356c2:	add    eax,0x1
100356c5:	test   cl,cl
100356c7:	jne    0x100356c0
100356c9:	mov    esi,DWORD PTR [ebp+0xc]
100356cc:	sub    eax,edx
100356ce:	lea    ebx,[eax+edi*1+0xd]
100356d2:	mov    DWORD PTR [esi+0x18],0xf
100356d9:	mov    DWORD PTR [esi+0x14],0x0
100356e0:	push   ebx
100356e1:	mov    BYTE PTR [esi+0x4],cl
100356e4:	call   0x10041f10
100356e9:	add    esp,0x4
100356ec:	push   eax
100356ed:	push   ebx
100356ee:	mov    ecx,esi
100356f0:	call   0x10001344
100356f5:	push   edi
100356f6:	call   0x10041d92
100356fb:	mov    eax,esi
100356fd:	add    esp,0x4
10035700:	mov    ecx,DWORD PTR [esp+0x60]
10035704:	mov    DWORD PTR fs:0x0,ecx
1003570b:	pop    ecx
1003570c:	pop    edi
1003570d:	pop    esi
1003570e:	pop    ebx
1003570f:	mov    esp,ebp
10035711:	pop    ebp
10035712:	ret    0xc
10035715:	int3   
10035716:	int3   
10035717:	int3   
10035718:	int3   
10035719:	int3   
1003571a:	int3   
1003571b:	int3   
1003571c:	int3   
1003571d:	int3   
1003571e:	int3   
1003571f:	int3   
10035720:	push   ebp
10035721:	mov    ebp,esp
10035723:	and    esp,0xfffffff8
10035726:	push   0xffffffff
10035728:	push   0x10060430
1003572d:	mov    eax,fs:0x0
10035733:	push   eax
10035734:	sub    esp,0x64
10035737:	push   ebx
10035738:	push   esi
10035739:	mov    eax,ds:0x1007d030
1003573e:	xor    eax,esp
10035740:	push   eax
10035741:	lea    eax,[esp+0x70]
10035745:	mov    fs:0x0,eax
1003574b:	mov    esi,ecx
1003574d:	mov    eax,DWORD PTR [ebp+0xc]
10035750:	xor    ebx,ebx
10035752:	push   ebx
10035753:	lea    ecx,[esp+0x14]
10035757:	push   ecx
10035758:	mov    ecx,DWORD PTR [ebp+0x8]
1003575b:	push   0x10
1003575d:	lea    edx,[esp+0x20]
10035761:	push   edx
10035762:	push   0x10
10035764:	mov    DWORD PTR [esp+0x28],eax
10035768:	mov    eax,edx
1003576a:	mov    edx,DWORD PTR [ecx]
1003576c:	push   eax
1003576d:	push   0x22c020
10035772:	push   edx
10035773:	call   DWORD PTR ds:0x10065260
10035779:	test   eax,eax
1003577b:	jne    0x10035840
10035781:	push   0x5ba111a4
10035786:	push   0x10072608
1003578b:	call   0x10003d63
10035790:	push   0x9af2f9e
10035795:	push   eax
10035796:	call   0x10003d63
1003579b:	push   0x623e42d6
100357a0:	push   eax
100357a1:	call   0x10003d63
100357a6:	push   0x634ff7f6
100357ab:	push   eax
100357ac:	call   0x10003d63
100357b1:	push   0x56131cfa
100357b6:	push   eax
100357b7:	call   0x10003d63
100357bc:	push   eax
100357bd:	push   0x1e
100357bf:	push   0x10072638
100357c4:	call   0x10003d75
100357c9:	mov    esi,eax
100357cb:	push   esi
100357cc:	mov    DWORD PTR [esp+0x78],0xf
100357d4:	mov    DWORD PTR [esp+0x74],ebx
100357d8:	mov    BYTE PTR [esp+0x64],bl
100357dc:	call   0x10041f10
100357e1:	add    esp,0x38
100357e4:	push   eax
100357e5:	push   esi
100357e6:	lea    ecx,[esp+0x30]
100357ea:	call   0x10001344
100357ef:	lea    ecx,[esp+0x44]
100357f3:	mov    DWORD PTR [esp+0x78],ebx
100357f7:	call   0x10041e01
100357fc:	push   0xffffffff
100357fe:	mov    BYTE PTR [esp+0x7c],0x1
10035803:	push   ebx
10035804:	lea    eax,[esp+0x30]
10035808:	push   eax
10035809:	lea    ecx,[esp+0x5c]
1003580d:	mov    DWORD PTR [esp+0x50],0x10072304
10035815:	mov    DWORD PTR [esp+0x74],0xf
1003581d:	mov    DWORD PTR [esp+0x70],ebx
10035821:	mov    BYTE PTR [esp+0x60],bl
10035825:	call   0x1000124a
1003582a:	push   0x10073924
1003582f:	lea    ecx,[esp+0x48]
10035833:	push   ecx
10035834:	mov    BYTE PTR [esp+0x80],bl
1003583b:	call   0x10046704
10035840:	mov    eax,DWORD PTR [esp+0x20]
10035844:	mov    edx,DWORD PTR [esp+0x1c]
10035848:	mov    DWORD PTR [esi+0x4],eax
1003584b:	mov    DWORD PTR [esi],edx
1003584d:	mov    eax,esi
1003584f:	mov    ecx,DWORD PTR [esp+0x70]
10035853:	mov    DWORD PTR fs:0x0,ecx
1003585a:	pop    ecx
1003585b:	pop    esi
1003585c:	pop    ebx
1003585d:	mov    esp,ebp
1003585f:	pop    ebp
10035860:	ret    0x8
10035863:	int3   
10035864:	int3   
10035865:	int3   
10035866:	int3   
10035867:	int3   
10035868:	int3   
10035869:	int3   
1003586a:	int3   
1003586b:	int3   
1003586c:	int3   
1003586d:	int3   
1003586e:	int3   
1003586f:	int3   
10035870:	push   ebp
10035871:	mov    ebp,esp
10035873:	and    esp,0xfffffff8
10035876:	push   0xffffffff
10035878:	push   0x10060430
1003587d:	mov    eax,fs:0x0
10035883:	push   eax
10035884:	sub    esp,0x64
10035887:	push   ebx
10035888:	push   esi
10035889:	mov    eax,ds:0x1007d030
1003588e:	xor    eax,esp
10035890:	push   eax
10035891:	lea    eax,[esp+0x70]
10035895:	mov    fs:0x0,eax
1003589b:	mov    eax,DWORD PTR [ebp+0xc]
1003589e:	mov    edx,DWORD PTR [eax]
100358a0:	mov    eax,DWORD PTR [eax+0x4]
100358a3:	mov    DWORD PTR [esp+0x14],ecx
100358a7:	xor    ebx,ebx
100358a9:	push   ebx
100358aa:	lea    ecx,[esp+0x14]
100358ae:	push   ecx
100358af:	mov    ecx,DWORD PTR [ebp+0x8]
100358b2:	push   0x10
100358b4:	mov    DWORD PTR [esp+0x28],edx
100358b8:	lea    edx,[esp+0x20]
100358bc:	push   edx
100358bd:	push   0x10
100358bf:	mov    DWORD PTR [esp+0x34],eax
100358c3:	mov    eax,edx
100358c5:	mov    edx,DWORD PTR [ecx]
100358c7:	push   eax
100358c8:	push   0x22c024
100358cd:	push   edx
100358ce:	call   DWORD PTR ds:0x10065260
100358d4:	test   eax,eax
100358d6:	jne    0x10035964
100358dc:	push   0x10072658
100358e1:	push   0x1e
100358e3:	push   0x10072688
100358e8:	call   0x10003d75
100358ed:	mov    esi,eax
100358ef:	push   esi
100358f0:	mov    DWORD PTR [esp+0x50],0xf
100358f8:	mov    DWORD PTR [esp+0x4c],ebx
100358fc:	mov    BYTE PTR [esp+0x3c],bl
10035900:	call   0x10041f10
10035905:	add    esp,0x10
10035908:	push   eax
10035909:	push   esi
1003590a:	lea    ecx,[esp+0x30]
1003590e:	call   0x10001344
10035913:	lea    ecx,[esp+0x44]
10035917:	mov    DWORD PTR [esp+0x78],ebx
1003591b:	call   0x10041e01
10035920:	push   0xffffffff
10035922:	mov    BYTE PTR [esp+0x7c],0x1
10035927:	push   ebx
10035928:	lea    eax,[esp+0x30]
1003592c:	push   eax
1003592d:	lea    ecx,[esp+0x5c]
10035931:	mov    DWORD PTR [esp+0x50],0x10072304
10035939:	mov    DWORD PTR [esp+0x74],0xf
10035941:	mov    DWORD PTR [esp+0x70],ebx
10035945:	mov    BYTE PTR [esp+0x60],bl
10035949:	call   0x1000124a
1003594e:	push   0x10073924
10035953:	lea    ecx,[esp+0x48]
10035957:	push   ecx
10035958:	mov    BYTE PTR [esp+0x80],bl
1003595f:	call   0x10046704
10035964:	mov    ecx,DWORD PTR [esp+0x70]
10035968:	mov    DWORD PTR fs:0x0,ecx
1003596f:	pop    ecx
10035970:	pop    esi
10035971:	pop    ebx
10035972:	mov    esp,ebp
10035974:	pop    ebp
10035975:	ret    0x8
10035978:	int3   
10035979:	int3   
1003597a:	int3   
1003597b:	int3   
1003597c:	int3   
1003597d:	int3   
1003597e:	int3   
1003597f:	int3   
10035980:	push   0xffffffff
10035982:	push   0x10060590
10035987:	mov    eax,fs:0x0
1003598d:	push   eax
1003598e:	sub    esp,0x4c
10035991:	push   ebx
10035992:	push   esi
10035993:	mov    eax,ds:0x1007d030
10035998:	xor    eax,esp
1003599a:	push   eax
1003599b:	lea    eax,[esp+0x58]
1003599f:	mov    fs:0x0,eax
100359a5:	mov    eax,DWORD PTR [esp+0x6c]
100359a9:	xor    ebx,ebx
100359ab:	push   ebx
100359ac:	lea    edx,[esp+0x70]
100359b0:	push   edx
100359b1:	mov    edx,DWORD PTR [esp+0x70]
100359b5:	push   0x8
100359b7:	mov    DWORD PTR [esp+0x18],eax
100359bb:	lea    eax,[esp+0x18]
100359bf:	push   eax
100359c0:	push   0x8
100359c2:	mov    DWORD PTR [esp+0x24],ecx
100359c6:	mov    ecx,eax
100359c8:	mov    eax,DWORD PTR [edx]
100359ca:	push   ecx
100359cb:	push   0x22c05c
100359d0:	push   eax
100359d1:	call   DWORD PTR ds:0x10065260
100359d7:	test   eax,eax
100359d9:	jne    0x10035a6f
100359df:	push   0x71f58f46
100359e4:	push   0x100726a8
100359e9:	call   0x10003d63
100359ee:	push   eax
100359ef:	push   0x1b
100359f1:	push   0x100726e0
100359f6:	call   0x10003d75
100359fb:	mov    esi,eax
100359fd:	push   esi
100359fe:	mov    DWORD PTR [esp+0x44],0xf
10035a06:	mov    DWORD PTR [esp+0x40],ebx
10035a0a:	mov    BYTE PTR [esp+0x30],bl
10035a0e:	call   0x10041f10
10035a13:	add    esp,0x18
10035a16:	push   eax
10035a17:	push   esi
10035a18:	lea    ecx,[esp+0x1c]
10035a1c:	call   0x10001344
10035a21:	lea    ecx,[esp+0x30]
10035a25:	mov    DWORD PTR [esp+0x60],ebx
10035a29:	call   0x10041e01
10035a2e:	push   0xffffffff
10035a30:	mov    BYTE PTR [esp+0x64],0x1
10035a35:	push   ebx
10035a36:	lea    ecx,[esp+0x1c]
10035a3a:	push   ecx
10035a3b:	lea    ecx,[esp+0x48]
10035a3f:	mov    DWORD PTR [esp+0x3c],0x10072304
10035a47:	mov    DWORD PTR [esp+0x60],0xf
10035a4f:	mov    DWORD PTR [esp+0x5c],ebx
10035a53:	mov    BYTE PTR [esp+0x4c],bl
10035a57:	call   0x1000124a
10035a5c:	push   0x10073924
10035a61:	lea    edx,[esp+0x34]
10035a65:	push   edx
10035a66:	mov    BYTE PTR [esp+0x68],bl
10035a6a:	call   0x10046704
10035a6f:	mov    ecx,DWORD PTR [esp+0x58]
10035a73:	mov    DWORD PTR fs:0x0,ecx
10035a7a:	pop    ecx
10035a7b:	pop    esi
10035a7c:	pop    ebx
10035a7d:	add    esp,0x58
10035a80:	ret    0x8
10035a83:	int3   
10035a84:	int3   
10035a85:	int3   
10035a86:	int3   
10035a87:	int3   
10035a88:	int3   
10035a89:	int3   
10035a8a:	int3   
10035a8b:	int3   
10035a8c:	int3   
10035a8d:	int3   
10035a8e:	int3   
10035a8f:	int3   
10035a90:	push   ebp
10035a91:	mov    ebp,esp
10035a93:	and    esp,0xfffffff8
10035a96:	push   0xffffffff
10035a98:	push   0x10060400
10035a9d:	mov    eax,fs:0x0
10035aa3:	push   eax
10035aa4:	sub    esp,0x54
10035aa7:	push   ebx
10035aa8:	push   esi
10035aa9:	mov    eax,ds:0x1007d030
10035aae:	xor    eax,esp
10035ab0:	push   eax
10035ab1:	lea    eax,[esp+0x60]
10035ab5:	mov    fs:0x0,eax
10035abb:	xor    ebx,ebx
10035abd:	push   ebx
10035abe:	lea    eax,[esp+0x10]
10035ac2:	push   eax
10035ac3:	mov    eax,DWORD PTR [ebp+0x8]
10035ac6:	push   0x8
10035ac8:	lea    ecx,[esp+0x1c]
10035acc:	push   ecx
10035acd:	push   0x8
10035acf:	mov    edx,ecx
10035ad1:	mov    ecx,DWORD PTR [eax]
10035ad3:	push   edx
10035ad4:	push   0x22c060
10035ad9:	push   ecx
10035ada:	mov    DWORD PTR [esp+0x30],ebx
10035ade:	mov    DWORD PTR [esp+0x34],ebx
10035ae2:	call   DWORD PTR ds:0x10065260
10035ae8:	test   eax,eax
10035aea:	jne    0x10035b96
10035af0:	push   0x1b0df928
10035af5:	push   0x100726fc
10035afa:	call   0x10003d63
10035aff:	push   0x7d16b6c0
10035b04:	push   eax
10035b05:	call   0x10003d63
10035b0a:	push   0x7a2bae28
10035b0f:	push   eax
10035b10:	call   0x10003d63
10035b15:	push   eax
10035b16:	push   0x1b
10035b18:	push   0x100726e0
10035b1d:	call   0x10003d75
10035b22:	mov    esi,eax
10035b24:	push   esi
10035b25:	mov    DWORD PTR [esp+0x58],0xf
10035b2d:	mov    DWORD PTR [esp+0x54],ebx
10035b31:	mov    BYTE PTR [esp+0x44],bl
10035b35:	call   0x10041f10
10035b3a:	add    esp,0x28
10035b3d:	push   eax
10035b3e:	push   esi
10035b3f:	lea    ecx,[esp+0x20]
10035b43:	call   0x10001344
10035b48:	lea    ecx,[esp+0x34]
10035b4c:	mov    DWORD PTR [esp+0x68],ebx
10035b50:	call   0x10041e01
10035b55:	push   0xffffffff
10035b57:	mov    BYTE PTR [esp+0x6c],0x1
10035b5c:	push   ebx
10035b5d:	lea    edx,[esp+0x20]
10035b61:	push   edx
10035b62:	lea    ecx,[esp+0x4c]
10035b66:	mov    DWORD PTR [esp+0x40],0x10072304
10035b6e:	mov    DWORD PTR [esp+0x64],0xf
10035b76:	mov    DWORD PTR [esp+0x60],ebx
10035b7a:	mov    BYTE PTR [esp+0x50],bl
10035b7e:	call   0x1000124a
10035b83:	push   0x10073924
10035b88:	lea    eax,[esp+0x38]
10035b8c:	push   eax
10035b8d:	mov    BYTE PTR [esp+0x70],bl
10035b91:	call   0x10046704
10035b96:	mov    eax,DWORD PTR [esp+0x14]
10035b9a:	mov    ecx,DWORD PTR [esp+0x60]
10035b9e:	mov    DWORD PTR fs:0x0,ecx
10035ba5:	pop    ecx
10035ba6:	pop    esi
10035ba7:	pop    ebx
10035ba8:	mov    esp,ebp
10035baa:	pop    ebp
10035bab:	ret    0x4
10035bae:	int3   
10035baf:	int3   
10035bb0:	push   0xffffffff
10035bb2:	push   0x10060590
10035bb7:	mov    eax,fs:0x0
10035bbd:	push   eax
10035bbe:	sub    esp,0x4c
10035bc1:	push   ebx
10035bc2:	push   esi
10035bc3:	mov    eax,ds:0x1007d030
10035bc8:	xor    eax,esp
10035bca:	push   eax
10035bcb:	lea    eax,[esp+0x58]
10035bcf:	mov    fs:0x0,eax
10035bd5:	mov    eax,DWORD PTR [esp+0x6c]
10035bd9:	xor    ebx,ebx
10035bdb:	push   ebx
10035bdc:	lea    edx,[esp+0x70]
10035be0:	push   edx
10035be1:	mov    edx,DWORD PTR [esp+0x70]
10035be5:	push   0x8
10035be7:	mov    DWORD PTR [esp+0x18],eax
10035beb:	lea    eax,[esp+0x18]
10035bef:	push   eax
10035bf0:	push   0x8
10035bf2:	mov    DWORD PTR [esp+0x24],ecx
10035bf6:	mov    ecx,eax
10035bf8:	mov    eax,DWORD PTR [edx]
10035bfa:	push   ecx
10035bfb:	push   0x22c07c
10035c00:	push   eax
10035c01:	call   DWORD PTR ds:0x10065260
10035c07:	test   eax,eax
10035c09:	jne    0x10035caa
10035c0f:	push   0x24ca990a
10035c14:	push   0x10072724
10035c19:	call   0x10003d63
10035c1e:	push   0x2a823076
10035c23:	push   eax
10035c24:	call   0x10003d63
10035c29:	push   eax
10035c2a:	push   0x1b
10035c2c:	push   0x100726e0
10035c31:	call   0x10003d75
10035c36:	mov    esi,eax
10035c38:	push   esi
10035c39:	mov    DWORD PTR [esp+0x4c],0xf
10035c41:	mov    DWORD PTR [esp+0x48],ebx
10035c45:	mov    BYTE PTR [esp+0x38],bl
10035c49:	call   0x10041f10
10035c4e:	add    esp,0x20
10035c51:	push   eax
10035c52:	push   esi
10035c53:	lea    ecx,[esp+0x1c]
10035c57:	call   0x10001344
10035c5c:	lea    ecx,[esp+0x30]
10035c60:	mov    DWORD PTR [esp+0x60],ebx
10035c64:	call   0x10041e01
10035c69:	push   0xffffffff
10035c6b:	mov    BYTE PTR [esp+0x64],0x1
10035c70:	push   ebx
10035c71:	lea    ecx,[esp+0x1c]
10035c75:	push   ecx
10035c76:	lea    ecx,[esp+0x48]
10035c7a:	mov    DWORD PTR [esp+0x3c],0x10072304
10035c82:	mov    DWORD PTR [esp+0x60],0xf
10035c8a:	mov    DWORD PTR [esp+0x5c],ebx
10035c8e:	mov    BYTE PTR [esp+0x4c],bl
10035c92:	call   0x1000124a
10035c97:	push   0x10073924
10035c9c:	lea    edx,[esp+0x34]
10035ca0:	push   edx
10035ca1:	mov    BYTE PTR [esp+0x68],bl
10035ca5:	call   0x10046704
10035caa:	mov    ecx,DWORD PTR [esp+0x58]
10035cae:	mov    DWORD PTR fs:0x0,ecx
10035cb5:	pop    ecx
10035cb6:	pop    esi
10035cb7:	pop    ebx
10035cb8:	add    esp,0x58
10035cbb:	ret    0x8
10035cbe:	int3   
10035cbf:	int3   
10035cc0:	push   0xffffffff
10035cc2:	push   0x100603d0
10035cc7:	mov    eax,fs:0x0
10035ccd:	push   eax
10035cce:	sub    esp,0x50
10035cd1:	push   ebx
10035cd2:	push   esi
10035cd3:	mov    eax,ds:0x1007d030
10035cd8:	xor    eax,esp
10035cda:	push   eax
10035cdb:	lea    eax,[esp+0x5c]
10035cdf:	mov    fs:0x0,eax
10035ce5:	xor    ebx,ebx
10035ce7:	push   ebx
10035ce8:	lea    eax,[esp+0x70]
10035cec:	push   eax
10035ced:	mov    eax,DWORD PTR [esp+0x74]
10035cf1:	push   0x8
10035cf3:	lea    ecx,[esp+0x18]
10035cf7:	push   ecx
10035cf8:	push   0x8
10035cfa:	mov    edx,ecx
10035cfc:	mov    ecx,DWORD PTR [eax]
10035cfe:	push   edx
10035cff:	push   0x22c080
10035d04:	push   ecx
10035d05:	mov    DWORD PTR [esp+0x2c],ebx
10035d09:	mov    DWORD PTR [esp+0x30],ebx
10035d0d:	call   DWORD PTR ds:0x10065260
10035d13:	test   eax,eax
10035d15:	jne    0x10035da0
10035d1b:	push   0x10072764
10035d20:	push   0x1b
10035d22:	push   0x100726e0
10035d27:	call   0x10003d75
10035d2c:	mov    esi,eax
10035d2e:	push   esi
10035d2f:	mov    DWORD PTR [esp+0x3c],0xf
10035d37:	mov    DWORD PTR [esp+0x38],ebx
10035d3b:	mov    BYTE PTR [esp+0x28],bl
10035d3f:	call   0x10041f10
10035d44:	add    esp,0x10
10035d47:	push   eax
10035d48:	push   esi
10035d49:	lea    ecx,[esp+0x1c]
10035d4d:	call   0x10001344
10035d52:	lea    ecx,[esp+0x30]
10035d56:	mov    DWORD PTR [esp+0x64],ebx
10035d5a:	call   0x10041e01
10035d5f:	push   0xffffffff
10035d61:	mov    BYTE PTR [esp+0x68],0x1
10035d66:	push   ebx
10035d67:	lea    edx,[esp+0x1c]
10035d6b:	push   edx
10035d6c:	lea    ecx,[esp+0x48]
10035d70:	mov    DWORD PTR [esp+0x3c],0x10072304
10035d78:	mov    DWORD PTR [esp+0x60],0xf
10035d80:	mov    DWORD PTR [esp+0x5c],ebx
10035d84:	mov    BYTE PTR [esp+0x4c],bl
10035d88:	call   0x1000124a
10035d8d:	push   0x10073924
10035d92:	lea    eax,[esp+0x34]
10035d96:	push   eax
10035d97:	mov    BYTE PTR [esp+0x6c],bl
10035d9b:	call   0x10046704
10035da0:	mov    eax,DWORD PTR [esp+0xc]
10035da4:	xor    ecx,ecx
10035da6:	cmp    eax,ebx
10035da8:	setl   cl
10035dab:	sub    ecx,0x1
10035dae:	and    eax,ecx
10035db0:	mov    ecx,DWORD PTR [esp+0x5c]
10035db4:	mov    DWORD PTR fs:0x0,ecx
10035dbb:	pop    ecx
10035dbc:	pop    esi
10035dbd:	pop    ebx
10035dbe:	add    esp,0x5c
10035dc1:	ret    0x4
10035dc4:	int3   
10035dc5:	int3   
10035dc6:	int3   
10035dc7:	int3   
10035dc8:	int3   
10035dc9:	int3   
10035dca:	int3   
10035dcb:	int3   
10035dcc:	int3   
10035dcd:	int3   
10035dce:	int3   
10035dcf:	int3   
10035dd0:	push   ebp
10035dd1:	mov    ebp,esp
10035dd3:	and    esp,0xfffffff8
10035dd6:	push   0xffffffff
10035dd8:	push   0x10060400
10035ddd:	mov    eax,fs:0x0
10035de3:	push   eax
10035de4:	sub    esp,0x54
10035de7:	push   ebx
10035de8:	push   esi
10035de9:	mov    eax,ds:0x1007d030
10035dee:	xor    eax,esp
10035df0:	push   eax
10035df1:	lea    eax,[esp+0x60]
10035df5:	mov    fs:0x0,eax
10035dfb:	xor    ebx,ebx
10035dfd:	push   ebx
10035dfe:	lea    eax,[esp+0x10]
10035e02:	push   eax
10035e03:	mov    eax,DWORD PTR [ebp+0x8]
10035e06:	push   0x8
10035e08:	lea    ecx,[esp+0x1c]
10035e0c:	push   ecx
10035e0d:	push   0x8
10035e0f:	mov    edx,ecx
10035e11:	mov    ecx,DWORD PTR [eax]
10035e13:	push   edx
10035e14:	push   0x22c080
10035e19:	push   ecx
10035e1a:	mov    DWORD PTR [esp+0x30],ebx
10035e1e:	mov    DWORD PTR [esp+0x34],ebx
10035e22:	call   DWORD PTR ds:0x10065260
10035e28:	test   eax,eax
10035e2a:	jne    0x10035ed6
10035e30:	push   0x7029b128
10035e35:	push   0x10072798
10035e3a:	call   0x10003d63
10035e3f:	push   0x7d9bd28a
10035e44:	push   eax
10035e45:	call   0x10003d63
10035e4a:	push   0x21993ea4
10035e4f:	push   eax
10035e50:	call   0x10003d63
10035e55:	push   eax
10035e56:	push   0x1b
10035e58:	push   0x100726e0
10035e5d:	call   0x10003d75
10035e62:	mov    esi,eax
10035e64:	push   esi
10035e65:	mov    DWORD PTR [esp+0x58],0xf
10035e6d:	mov    DWORD PTR [esp+0x54],ebx
10035e71:	mov    BYTE PTR [esp+0x44],bl
10035e75:	call   0x10041f10
10035e7a:	add    esp,0x28
10035e7d:	push   eax
10035e7e:	push   esi
10035e7f:	lea    ecx,[esp+0x20]
10035e83:	call   0x10001344
10035e88:	lea    ecx,[esp+0x34]
10035e8c:	mov    DWORD PTR [esp+0x68],ebx
10035e90:	call   0x10041e01
10035e95:	push   0xffffffff
10035e97:	mov    BYTE PTR [esp+0x6c],0x1
10035e9c:	push   ebx
10035e9d:	lea    edx,[esp+0x20]
10035ea1:	push   edx
10035ea2:	lea    ecx,[esp+0x4c]
10035ea6:	mov    DWORD PTR [esp+0x40],0x10072304
10035eae:	mov    DWORD PTR [esp+0x64],0xf
10035eb6:	mov    DWORD PTR [esp+0x60],ebx
10035eba:	mov    BYTE PTR [esp+0x50],bl
10035ebe:	call   0x1000124a
10035ec3:	push   0x10073924
10035ec8:	lea    eax,[esp+0x38]
10035ecc:	push   eax
10035ecd:	mov    BYTE PTR [esp+0x70],bl
10035ed1:	call   0x10046704
10035ed6:	mov    eax,DWORD PTR [esp+0x14]
10035eda:	mov    ecx,DWORD PTR [esp+0x60]
10035ede:	mov    DWORD PTR fs:0x0,ecx
10035ee5:	pop    ecx
10035ee6:	pop    esi
10035ee7:	pop    ebx
10035ee8:	mov    esp,ebp
10035eea:	pop    ebp
10035eeb:	ret    0x4
10035eee:	int3   
10035eef:	int3   
10035ef0:	push   0xffffffff
10035ef2:	push   0x10060398
10035ef7:	mov    eax,fs:0x0
10035efd:	push   eax
10035efe:	push   ecx
10035eff:	push   ebx
10035f00:	push   esi
10035f01:	push   edi
10035f02:	mov    eax,ds:0x1007d030
10035f07:	xor    eax,esp
10035f09:	push   eax
10035f0a:	lea    eax,[esp+0x14]
10035f0e:	mov    fs:0x0,eax
10035f14:	mov    edi,ecx
10035f16:	mov    eax,DWORD PTR [edi+0x14]
10035f19:	lea    ebx,[eax+0x5]
10035f1c:	push   ebx
10035f1d:	call   0x10042609
10035f22:	mov    esi,eax
10035f24:	add    esp,0x4
10035f27:	mov    DWORD PTR [esp+0x10],esi
10035f2b:	mov    DWORD PTR [esp+0x1c],0x0
10035f33:	mov    eax,DWORD PTR [esp+0x28]
10035f37:	mov    DWORD PTR [esi],eax
10035f39:	cmp    DWORD PTR [edi+0x18],0x10
10035f3d:	mov    eax,DWORD PTR [edi+0x14]
10035f40:	jb     0x10035f47
10035f42:	mov    edi,DWORD PTR [edi+0x4]
10035f45:	jmp    0x10035f4a
10035f47:	add    edi,0x4
10035f4a:	add    eax,0x1
10035f4d:	push   eax
10035f4e:	lea    ecx,[esi+0x4]
10035f51:	push   edi
10035f52:	push   ecx
10035f53:	call   0x10043ed0
10035f58:	mov    edx,DWORD PTR [esp+0x30]
10035f5c:	add    esp,0xc
10035f5f:	push   esi
10035f60:	push   0x5
10035f62:	push   edx
10035f63:	mov    ecx,ebx
10035f65:	call   0x10036640
10035f6a:	push   esi
10035f6b:	call   0x10041d92
10035f70:	add    esp,0x4
10035f73:	mov    ecx,DWORD PTR [esp+0x14]
10035f77:	mov    DWORD PTR fs:0x0,ecx
10035f7e:	pop    ecx
10035f7f:	pop    edi
10035f80:	pop    esi
10035f81:	pop    ebx
10035f82:	add    esp,0x10
10035f85:	ret    0x8
10035f88:	int3   
10035f89:	int3   
10035f8a:	int3   
10035f8b:	int3   
10035f8c:	int3   
10035f8d:	int3   
10035f8e:	int3   
10035f8f:	int3   
10035f90:	push   ebp
10035f91:	mov    ebp,esp
10035f93:	push   0xffffffff
10035f95:	push   0x10061350
10035f9a:	mov    eax,fs:0x0
10035fa0:	push   eax
10035fa1:	sub    esp,0x38
10035fa4:	push   ebx
10035fa5:	push   esi
10035fa6:	push   edi
10035fa7:	mov    eax,ds:0x1007d030
10035fac:	xor    eax,ebp
10035fae:	push   eax
10035faf:	lea    eax,[ebp-0xc]
10035fb2:	mov    fs:0x0,eax
10035fb8:	mov    DWORD PTR [ebp-0x10],esp
10035fbb:	mov    ebx,ecx
10035fbd:	lea    eax,[ebp-0x14]
10035fc0:	push   eax
10035fc1:	push   0x5
10035fc3:	lea    ecx,[ebp-0x18]
10035fc6:	xor    esi,esi
10035fc8:	push   ecx
10035fc9:	mov    DWORD PTR [ebp-0x4],esi
10035fcc:	push   edx
10035fcd:	mov    DWORD PTR [ebp-0x14],esi
10035fd0:	call   0x10036790
10035fd5:	mov    ecx,DWORD PTR [eax]
10035fd7:	mov    edi,ecx
10035fd9:	mov    DWORD PTR [eax],esi
10035fdb:	mov    DWORD PTR [ebp-0x1c],edi
10035fde:	mov    BYTE PTR [ebp-0x4],0x1
10035fe2:	mov    edx,DWORD PTR [ebp-0x18]
10035fe5:	push   edx
10035fe6:	call   0x10041d92
10035feb:	mov    eax,DWORD PTR [ebp-0x14]
10035fee:	add    esp,0x4
10035ff1:	cmp    eax,esi
10035ff3:	jne    0x10036014
10035ff5:	push   edi
10035ff6:	call   0x10041d92
10035ffb:	add    esp,0x4
10035ffe:	xor    al,al
10036000:	mov    ecx,DWORD PTR [ebp-0xc]
10036003:	mov    DWORD PTR fs:0x0,ecx
1003600a:	pop    ecx
1003600b:	pop    edi
1003600c:	pop    esi
1003600d:	pop    ebx
1003600e:	mov    esp,ebp
10036010:	pop    ebp
10036011:	ret    0x4
10036014:	mov    DWORD PTR [ebp-0x24],eax
10036017:	lea    eax,[ebp-0x28]
1003601a:	push   eax
1003601b:	mov    DWORD PTR [ebp-0x28],esi
1003601e:	mov    DWORD PTR [ebp-0x20],edi
10036021:	call   0x10037480
10036026:	mov    ecx,DWORD PTR [ebp+0x8]
10036029:	lea    edx,[ebp-0x28]
1003602c:	push   edx
1003602d:	lea    esi,[ebp-0x44]
10036030:	mov    DWORD PTR [ecx],eax
10036032:	call   0x10037140
10036037:	push   0xffffffff
10036039:	push   0x0
1003603b:	push   eax
1003603c:	mov    ecx,ebx
1003603e:	mov    BYTE PTR [ebp-0x4],0x2
10036042:	call   0x1000124a
10036047:	cmp    DWORD PTR [ebp-0x2c],0x10
1003604b:	jb     0x10036059
1003604d:	mov    eax,DWORD PTR [ebp-0x40]
10036050:	push   eax
10036051:	call   0x10041d92
10036056:	add    esp,0x4
10036059:	push   edi
1003605a:	call   0x10041d92
1003605f:	push   0x1006bb18
10036064:	call   0x10041f10
10036069:	mov    esi,DWORD PTR [ebx+0x14]
1003606c:	mov    edi,eax
1003606e:	add    esp,0x8
10036071:	cmp    esi,edi
10036073:	mov    eax,esi
10036075:	jb     0x10036079
10036077:	mov    eax,edi
10036079:	cmp    DWORD PTR [ebx+0x18],0x10
1003607d:	jb     0x10036084
1003607f:	mov    ebx,DWORD PTR [ebx+0x4]
10036082:	jmp    0x10036087
10036084:	add    ebx,0x4
10036087:	push   eax
10036088:	push   0x1006bb18
1003608d:	push   ebx
1003608e:	call   0x1004260e
10036093:	add    esp,0xc
10036096:	test   eax,eax
10036098:	jne    0x100360c5
1003609a:	cmp    esi,edi
1003609c:	jae    0x100360be
1003609e:	or     eax,0xffffffff
100360a1:	xor    ecx,ecx
100360a3:	test   eax,eax
100360a5:	setne  cl
100360a8:	mov    al,cl
100360aa:	mov    ecx,DWORD PTR [ebp-0xc]
100360ad:	mov    DWORD PTR fs:0x0,ecx
100360b4:	pop    ecx
100360b5:	pop    edi
100360b6:	pop    esi
100360b7:	pop    ebx
100360b8:	mov    esp,ebp
100360ba:	pop    ebp
100360bb:	ret    0x4
100360be:	xor    eax,eax
100360c0:	cmp    esi,edi
100360c2:	setne  al
100360c5:	xor    ecx,ecx
100360c7:	test   eax,eax
100360c9:	setne  cl
100360cc:	mov    al,cl
100360ce:	mov    ecx,DWORD PTR [ebp-0xc]
100360d1:	mov    DWORD PTR fs:0x0,ecx
100360d8:	pop    ecx
100360d9:	pop    edi
100360da:	pop    esi
100360db:	pop    ebx
100360dc:	mov    esp,ebp
100360de:	pop    ebp
100360df:	ret    0x4
100360e2:	mov    eax,0x10035ffe
100360e7:	ret    
100360e8:	int3   
100360e9:	int3   
100360ea:	int3   
100360eb:	int3   
100360ec:	int3   
100360ed:	int3   
100360ee:	int3   
100360ef:	int3   
100360f0:	push   0xffffffff
100360f2:	push   0x10060360
100360f7:	mov    eax,fs:0x0
100360fd:	push   eax
100360fe:	sub    esp,0x74
10036101:	mov    eax,ds:0x1007d030
10036106:	xor    eax,esp
10036108:	mov    DWORD PTR [esp+0x70],eax
1003610c:	push   ebx
1003610d:	push   esi
1003610e:	push   edi
1003610f:	mov    eax,ds:0x1007d030
10036114:	xor    eax,esp
10036116:	push   eax
10036117:	lea    eax,[esp+0x84]
1003611e:	mov    fs:0x0,eax
10036124:	mov    eax,DWORD PTR [esp+0x94]
1003612b:	xor    ebx,ebx
1003612d:	mov    esi,0xf
10036132:	mov    DWORD PTR [esp+0x7c],esi
10036136:	mov    DWORD PTR [esp+0x78],ebx
1003613a:	mov    BYTE PTR [esp+0x68],bl
1003613e:	mov    DWORD PTR [esp+0x8c],ebx
10036145:	mov    DWORD PTR [esp+0x44],esi
10036149:	mov    DWORD PTR [esp+0x40],ebx
1003614d:	mov    BYTE PTR [esp+0x30],bl
10036151:	mov    DWORD PTR [esp+0x28],esi
10036155:	mov    DWORD PTR [esp+0x24],ebx
10036159:	mov    BYTE PTR [esp+0x14],bl
1003615d:	mov    DWORD PTR [esp+0x60],esi
10036161:	mov    DWORD PTR [esp+0x5c],ebx
10036165:	mov    BYTE PTR [esp+0x4c],bl
10036169:	lea    edx,[esp+0x48]
1003616d:	push   edx
1003616e:	lea    edx,[esp+0x68]
10036172:	push   edx
10036173:	push   ecx
10036174:	push   eax
10036175:	lea    edx,[esp+0x20]
10036179:	lea    ecx,[esp+0x3c]
1003617d:	mov    BYTE PTR [esp+0x9c],0x3
10036185:	call   0x10036230
1003618a:	mov    edi,0x10
1003618f:	cmp    DWORD PTR [esp+0x60],edi
10036193:	jb     0x100361a2
10036195:	mov    eax,DWORD PTR [esp+0x4c]
10036199:	push   eax
1003619a:	call   0x10041d92
1003619f:	add    esp,0x4
100361a2:	cmp    DWORD PTR [esp+0x28],edi
100361a6:	mov    DWORD PTR [esp+0x60],esi
100361aa:	mov    DWORD PTR [esp+0x5c],ebx
100361ae:	mov    BYTE PTR [esp+0x4c],bl
100361b2:	jb     0x100361c1
100361b4:	mov    ecx,DWORD PTR [esp+0x14]
100361b8:	push   ecx
100361b9:	call   0x10041d92
100361be:	add    esp,0x4
100361c1:	cmp    DWORD PTR [esp+0x44],edi
100361c5:	mov    DWORD PTR [esp+0x28],esi
100361c9:	mov    DWORD PTR [esp+0x24],ebx
100361cd:	mov    BYTE PTR [esp+0x14],bl
100361d1:	jb     0x100361e0
100361d3:	mov    edx,DWORD PTR [esp+0x30]
100361d7:	push   edx
100361d8:	call   0x10041d92
100361dd:	add    esp,0x4
100361e0:	cmp    DWORD PTR [esp+0x7c],edi
100361e4:	mov    DWORD PTR [esp+0x44],esi
100361e8:	mov    DWORD PTR [esp+0x40],ebx
100361ec:	mov    BYTE PTR [esp+0x30],bl
100361f0:	jb     0x100361ff
100361f2:	mov    eax,DWORD PTR [esp+0x68]
100361f6:	push   eax
100361f7:	call   0x10041d92
100361fc:	add    esp,0x4
100361ff:	mov    ecx,DWORD PTR [esp+0x84]
10036206:	mov    DWORD PTR fs:0x0,ecx
1003620d:	pop    ecx
1003620e:	pop    edi
1003620f:	pop    esi
10036210:	pop    ebx
10036211:	mov    ecx,DWORD PTR [esp+0x70]
10036215:	xor    ecx,esp
10036217:	call   0x10041d97
1003621c:	add    esp,0x80
10036222:	ret    0x4
10036225:	int3   
10036226:	int3   
10036227:	int3   
10036228:	int3   
10036229:	int3   
1003622a:	int3   
1003622b:	int3   
1003622c:	int3   
1003622d:	int3   
1003622e:	int3   
1003622f:	int3   
10036230:	push   ebp
10036231:	mov    ebp,esp
10036233:	push   0xffffffff
10036235:	push   0x10060312
1003623a:	mov    eax,fs:0x0
10036240:	push   eax
10036241:	sub    esp,0x18c
10036247:	mov    eax,ds:0x1007d030
1003624c:	xor    eax,ebp
1003624e:	mov    DWORD PTR [ebp-0x10],eax
10036251:	push   ebx
10036252:	push   esi
10036253:	push   edi
10036254:	push   eax
10036255:	lea    eax,[ebp-0xc]
10036258:	mov    fs:0x0,eax
1003625e:	mov    eax,DWORD PTR [ebp+0x8]
10036261:	mov    eax,DWORD PTR [eax]
10036263:	mov    esi,DWORD PTR [ebp+0xc]
10036266:	mov    edi,DWORD PTR [ebp+0x10]
10036269:	mov    DWORD PTR [ebp-0x144],edx
1003626f:	mov    DWORD PTR [ebp-0x148],ecx
10036275:	mov    ecx,DWORD PTR [ebp+0x14]
10036278:	xor    ebx,ebx
1003627a:	push   ebx
1003627b:	lea    edx,[ebp-0x150]
10036281:	push   edx
10036282:	push   0x110
10036287:	mov    DWORD PTR [ebp-0x14c],ecx
1003628d:	lea    ecx,[ebp-0x120]
10036293:	push   ecx
10036294:	push   0x110
10036299:	mov    edx,ecx
1003629b:	push   edx
1003629c:	push   0x22c03c
100362a1:	push   eax
100362a2:	call   DWORD PTR ds:0x10065260
100362a8:	test   eax,eax
100362aa:	jne    0x10036368
100362b0:	push   0x449ba800
100362b5:	push   0x100727d4
100362ba:	call   0x10003d63
100362bf:	push   0x4c20f738
100362c4:	push   eax
100362c5:	call   0x10003d63
100362ca:	push   0x5b21ae9c
100362cf:	push   eax
100362d0:	call   0x10003d63
100362d5:	push   eax
100362d6:	push   0x1f
100362d8:	push   0x100727fc
100362dd:	call   0x10003d75
100362e2:	mov    esi,eax
100362e4:	mov    edi,0xf
100362e9:	push   esi
100362ea:	mov    DWORD PTR [ebp-0x128],edi
100362f0:	mov    DWORD PTR [ebp-0x12c],ebx
100362f6:	mov    BYTE PTR [ebp-0x13c],bl
100362fc:	call   0x10041f10
10036301:	add    esp,0x28
10036304:	push   eax
10036305:	push   esi
10036306:	lea    ecx,[ebp-0x140]
1003630c:	call   0x10001344
10036311:	lea    ecx,[ebp-0x194]
10036317:	mov    DWORD PTR [ebp-0x4],ebx
1003631a:	call   0x10041e01
1003631f:	push   0xffffffff
10036321:	mov    BYTE PTR [ebp-0x4],0x1
10036325:	push   ebx
10036326:	lea    ecx,[ebp-0x140]
1003632c:	push   ecx
1003632d:	lea    ecx,[ebp-0x188]
10036333:	mov    DWORD PTR [ebp-0x194],0x10072304
1003633d:	mov    DWORD PTR [ebp-0x170],edi
10036343:	mov    DWORD PTR [ebp-0x174],ebx
10036349:	mov    BYTE PTR [ebp-0x184],bl
1003634f:	call   0x1000124a
10036354:	push   0x10073924
10036359:	lea    edx,[ebp-0x194]
1003635f:	push   edx
10036360:	mov    BYTE PTR [ebp-0x4],bl
10036363:	call   0x10046704
10036368:	call   DWORD PTR ds:0x1007dfe4
1003636e:	mov    ecx,DWORD PTR [ebp-0xdc]
10036374:	mov    edx,DWORD PTR [ebp-0xd8]
1003637a:	mov    DWORD PTR [ebp-0x124],eax
10036380:	mov    eax,DWORD PTR [ebp-0xe0]
10036386:	mov    DWORD PTR [esi],eax
10036388:	mov    eax,DWORD PTR [ebp-0xd4]
1003638e:	mov    DWORD PTR [esi+0x4],ecx
10036391:	lea    ecx,[ebp-0x120]
10036397:	mov    DWORD PTR [esi+0x8],edx
1003639a:	push   ecx
1003639b:	mov    DWORD PTR [esi+0xc],eax
1003639e:	call   DWORD PTR ds:0x100650e0
100363a4:	add    eax,0x1
100363a7:	cmp    eax,0x3fffffff
100363ac:	jle    0x100363b2
100363ae:	xor    esi,esi
100363b0:	jmp    0x100363d6
100363b2:	lea    esi,[eax+eax*1]
100363b5:	mov    eax,esi
100363b7:	call   0x10049010
100363bc:	mov    edx,DWORD PTR [ebp-0x124]
100363c2:	mov    eax,esp
100363c4:	push   edx
100363c5:	push   esi
100363c6:	lea    ecx,[ebp-0x120]
100363cc:	push   ecx
100363cd:	mov    esi,eax
100363cf:	call   0x1000677e
100363d4:	mov    esi,eax
100363d6:	push   esi
100363d7:	mov    DWORD PTR [ebp-0x128],0xf
100363e1:	mov    DWORD PTR [ebp-0x12c],ebx
100363e7:	mov    BYTE PTR [ebp-0x13c],bl
100363ed:	call   0x10041f10
100363f2:	add    esp,0x4
100363f5:	push   eax
100363f6:	push   esi
100363f7:	lea    ecx,[ebp-0x140]
100363fd:	call   0x10001344
10036402:	push   0xffffffff
10036404:	push   ebx
10036405:	lea    edx,[ebp-0x140]
1003640b:	push   edx
1003640c:	mov    ecx,edi
1003640e:	mov    DWORD PTR [ebp-0x4],0x2
10036415:	call   0x1000124a
1003641a:	mov    DWORD PTR [ebp-0x4],0xffffffff
10036421:	cmp    DWORD PTR [ebp-0x128],0x10
10036428:	jb     0x10036439
1003642a:	mov    eax,DWORD PTR [ebp-0x13c]
10036430:	push   eax
10036431:	call   0x10041d92
10036436:	add    esp,0x4
10036439:	lea    ecx,[ebp-0xd0]
1003643f:	push   ecx
10036440:	call   DWORD PTR ds:0x100650e0
10036446:	add    eax,0x1
10036449:	cmp    eax,0x3fffffff
1003644e:	jle    0x1003645a
10036450:	mov    edi,DWORD PTR [ebp-0x124]
10036456:	xor    esi,esi
10036458:	jmp    0x1003647e
1003645a:	lea    esi,[eax+eax*1]
1003645d:	mov    eax,esi
1003645f:	call   0x10049010
10036464:	mov    edi,DWORD PTR [ebp-0x124]
1003646a:	mov    eax,esp
1003646c:	push   edi
1003646d:	push   esi
1003646e:	lea    edx,[ebp-0xd0]
10036474:	push   edx
10036475:	mov    esi,eax
10036477:	call   0x1000677e
1003647c:	mov    esi,eax
1003647e:	push   esi
1003647f:	mov    DWORD PTR [ebp-0x128],0xf
10036489:	mov    DWORD PTR [ebp-0x12c],ebx
1003648f:	mov    BYTE PTR [ebp-0x13c],bl
10036495:	call   0x10041f10
1003649a:	add    esp,0x4
1003649d:	push   eax
1003649e:	push   esi
1003649f:	lea    ecx,[ebp-0x140]
100364a5:	call   0x10001344
100364aa:	mov    ecx,DWORD PTR [ebp-0x148]
100364b0:	push   0xffffffff
100364b2:	push   ebx
100364b3:	lea    eax,[ebp-0x140]
100364b9:	push   eax
100364ba:	mov    DWORD PTR [ebp-0x4],0x3
100364c1:	call   0x1000124a
100364c6:	mov    DWORD PTR [ebp-0x4],0xffffffff
100364cd:	cmp    DWORD PTR [ebp-0x128],0x10
100364d4:	jb     0x100364e5
100364d6:	mov    ecx,DWORD PTR [ebp-0x13c]
100364dc:	push   ecx
100364dd:	call   0x10041d92
100364e2:	add    esp,0x4
100364e5:	lea    edx,[ebp-0x90]
100364eb:	push   edx
100364ec:	call   DWORD PTR ds:0x100650e0
100364f2:	add    eax,0x1
100364f5:	cmp    eax,0x3fffffff
100364fa:	jle    0x10036500
100364fc:	xor    esi,esi
100364fe:	jmp    0x1003651e
10036500:	lea    esi,[eax+eax*1]
10036503:	mov    eax,esi
10036505:	call   0x10049010
1003650a:	mov    eax,esp
1003650c:	push   edi
1003650d:	push   esi
1003650e:	lea    ecx,[ebp-0x90]
10036514:	push   ecx
10036515:	mov    esi,eax
10036517:	call   0x1000677e
1003651c:	mov    esi,eax
1003651e:	push   esi
1003651f:	mov    DWORD PTR [ebp-0x128],0xf
10036529:	mov    DWORD PTR [ebp-0x12c],ebx
1003652f:	mov    BYTE PTR [ebp-0x13c],bl
10036535:	call   0x10041f10
1003653a:	add    esp,0x4
1003653d:	push   eax
1003653e:	push   esi
1003653f:	lea    ecx,[ebp-0x140]
10036545:	call   0x10001344
1003654a:	mov    ecx,DWORD PTR [ebp-0x144]
10036550:	push   0xffffffff
10036552:	push   ebx
10036553:	lea    edx,[ebp-0x140]
10036559:	push   edx
1003655a:	mov    DWORD PTR [ebp-0x4],0x4
10036561:	call   0x1000124a
10036566:	mov    DWORD PTR [ebp-0x4],0xffffffff
1003656d:	cmp    DWORD PTR [ebp-0x128],0x10
10036574:	jb     0x10036585
10036576:	mov    eax,DWORD PTR [ebp-0x13c]
1003657c:	push   eax
1003657d:	call   0x10041d92
10036582:	add    esp,0x4
10036585:	lea    ecx,[ebp-0x50]
10036588:	push   ecx
10036589:	call   DWORD PTR ds:0x100650e0
1003658f:	add    eax,0x1
10036592:	cmp    eax,0x3fffffff
10036597:	jle    0x1003659d
10036599:	xor    esi,esi
1003659b:	jmp    0x100365b8
1003659d:	lea    esi,[eax+eax*1]
100365a0:	mov    eax,esi
100365a2:	call   0x10049010
100365a7:	mov    eax,esp
100365a9:	push   edi
100365aa:	push   esi
100365ab:	lea    edx,[ebp-0x50]
100365ae:	push   edx
100365af:	mov    esi,eax
100365b1:	call   0x1000677e
100365b6:	mov    esi,eax
100365b8:	push   esi
100365b9:	mov    DWORD PTR [ebp-0x154],0xf
100365c3:	mov    DWORD PTR [ebp-0x158],ebx
100365c9:	mov    BYTE PTR [ebp-0x168],bl
100365cf:	call   0x10041f10
100365d4:	add    esp,0x4
100365d7:	push   eax
100365d8:	push   esi
100365d9:	lea    ecx,[ebp-0x16c]
100365df:	call   0x10001344
100365e4:	mov    ecx,DWORD PTR [ebp-0x14c]
100365ea:	push   0xffffffff
100365ec:	push   ebx
100365ed:	lea    eax,[ebp-0x16c]
100365f3:	push   eax
100365f4:	mov    DWORD PTR [ebp-0x4],0x5
100365fb:	call   0x1000124a
10036600:	cmp    DWORD PTR [ebp-0x154],0x10
10036607:	jb     0x10036618
10036609:	mov    ecx,DWORD PTR [ebp-0x168]
1003660f:	push   ecx
10036610:	call   0x10041d92
10036615:	add    esp,0x4
10036618:	lea    esp,[ebp-0x1a8]
1003661e:	mov    ecx,DWORD PTR [ebp-0xc]
10036621:	mov    DWORD PTR fs:0x0,ecx
10036628:	pop    ecx
10036629:	pop    edi
1003662a:	pop    esi
1003662b:	pop    ebx
1003662c:	mov    ecx,DWORD PTR [ebp-0x10]
1003662f:	xor    ecx,ebp
10036631:	call   0x10041d97
10036636:	mov    esp,ebp
10036638:	pop    ebp
10036639:	ret    0x10
1003663c:	int3   
1003663d:	int3   
1003663e:	int3   
1003663f:	int3   
10036640:	push   ebp
10036641:	mov    ebp,esp
10036643:	and    esp,0xfffffff8
10036646:	push   0xffffffff
10036648:	push   0x100602a8
1003664d:	mov    eax,fs:0x0
10036653:	push   eax
10036654:	sub    esp,0x50
10036657:	push   ebx
10036658:	push   esi
10036659:	push   edi
1003665a:	mov    eax,ds:0x1007d030
1003665f:	xor    eax,esp
10036661:	push   eax
10036662:	lea    eax,[esp+0x60]
10036666:	mov    fs:0x0,eax
1003666c:	mov    edi,ecx
1003666e:	xor    eax,eax
10036670:	mov    DWORD PTR [esp+0x10],eax
10036674:	lea    ebx,[edi+0xc]
10036677:	push   ebx
10036678:	mov    DWORD PTR [esp+0x6c],eax
1003667c:	call   0x10042609
10036681:	mov    esi,eax
10036683:	add    esp,0x4
10036686:	test   esi,esi
10036688:	je     0x10036694
1003668a:	push   0x0
1003668c:	call   0x10041d92
10036691:	add    esp,0x4
10036694:	mov    ecx,DWORD PTR [ebp+0x10]
10036697:	mov    eax,DWORD PTR [ebp+0xc]
1003669a:	push   edi
1003669b:	push   ecx
1003669c:	lea    edx,[esi+0xc]
1003669f:	mov    DWORD PTR [esi],edi
100366a1:	push   edx
100366a2:	mov    DWORD PTR [esp+0x1c],esi
100366a6:	mov    DWORD PTR [esi+0x4],eax
100366a9:	call   0x10043ed0
100366ae:	mov    ecx,DWORD PTR [ebp+0x8]
100366b1:	mov    edx,DWORD PTR [ecx]
100366b3:	add    esp,0xc
100366b6:	xor    edi,edi
100366b8:	push   edi
100366b9:	lea    eax,[esp+0x18]
100366bd:	push   eax
100366be:	push   edi
100366bf:	push   edi
100366c0:	push   ebx
100366c1:	push   esi
100366c2:	push   0x22c034
100366c7:	push   edx
100366c8:	call   DWORD PTR ds:0x10065260
100366ce:	test   eax,eax
100366d0:	jne    0x1003676a
100366d6:	push   0x38807076
100366db:	push   0x1007281c
100366e0:	call   0x10003d63
100366e5:	push   eax
100366e6:	push   0x19
100366e8:	push   0x10072858
100366ed:	call   0x10003d75
100366f2:	mov    esi,eax
100366f4:	push   esi
100366f5:	mov    DWORD PTR [esp+0x48],0xf
100366fd:	mov    DWORD PTR [esp+0x44],edi
10036701:	mov    BYTE PTR [esp+0x34],0x0
10036706:	call   0x10041f10
1003670b:	add    esp,0x18
1003670e:	push   eax
1003670f:	push   esi
10036710:	lea    ecx,[esp+0x20]
10036714:	call   0x10001344
10036719:	mov    bl,0x1
1003671b:	lea    ecx,[esp+0x34]
1003671f:	mov    BYTE PTR [esp+0x68],bl
10036723:	call   0x10041e01
10036728:	push   0xffffffff
1003672a:	mov    BYTE PTR [esp+0x6c],0x2
1003672f:	push   edi
10036730:	lea    eax,[esp+0x20]
10036734:	push   eax
10036735:	lea    ecx,[esp+0x4c]
10036739:	mov    DWORD PTR [esp+0x40],0x10072304
10036741:	mov    DWORD PTR [esp+0x64],0xf
10036749:	mov    DWORD PTR [esp+0x60],edi
1003674d:	mov    BYTE PTR [esp+0x50],0x0
10036752:	call   0x1000124a
10036757:	push   0x10073924
1003675c:	lea    ecx,[esp+0x38]
10036760:	push   ecx
10036761:	mov    BYTE PTR [esp+0x70],bl
10036765:	call   0x10046704
1003676a:	push   esi
1003676b:	call   0x10041d92
10036770:	add    esp,0x4
10036773:	mov    ecx,DWORD PTR [esp+0x60]
10036777:	mov    DWORD PTR fs:0x0,ecx
1003677e:	pop    ecx
1003677f:	pop    edi
10036780:	pop    esi
10036781:	pop    ebx
10036782:	mov    esp,ebp
10036784:	pop    ebp
10036785:	ret    0xc
10036788:	int3   
10036789:	int3   
1003678a:	int3   
1003678b:	int3   
1003678c:	int3   
1003678d:	int3   
1003678e:	int3   
1003678f:	int3   
10036790:	push   ebp
10036791:	mov    ebp,esp
10036793:	and    esp,0xfffffff8
10036796:	push   0xffffffff
10036798:	push   0x10060268
1003679d:	mov    eax,fs:0x0
100367a3:	push   eax
100367a4:	sub    esp,0x58
100367a7:	push   ebx
100367a8:	push   esi
100367a9:	push   edi
100367aa:	mov    eax,ds:0x1007d030
100367af:	xor    eax,esp
100367b1:	push   eax
100367b2:	lea    eax,[esp+0x68]
100367b6:	mov    fs:0x0,eax
100367bc:	xor    ebx,ebx
100367be:	mov    DWORD PTR [esp+0x18],ebx
100367c2:	mov    DWORD PTR [esp+0x1c],ebx
100367c6:	push   0xd
100367c8:	mov    DWORD PTR [esp+0x74],ebx
100367cc:	call   0x10042609
100367d1:	mov    esi,eax
100367d3:	add    esp,0x4
100367d6:	mov    DWORD PTR [esp+0x10],esi
100367da:	mov    eax,DWORD PTR [ebp+0x10]
100367dd:	mov    edx,DWORD PTR [ebp+0x8]
100367e0:	mov    BYTE PTR [esp+0x70],0x1
100367e5:	mov    DWORD PTR [esi],0x1
100367eb:	push   ebx
100367ec:	mov    DWORD PTR [esi+0x8],0x4
100367f3:	mov    DWORD PTR [esi+0x4],eax
100367f6:	mov    eax,DWORD PTR [esi]
100367f8:	add    eax,0xc
100367fb:	lea    ecx,[esp+0x1c]
100367ff:	push   ecx
10036800:	push   eax
10036801:	push   esi
10036802:	push   eax
10036803:	mov    eax,DWORD PTR [edx]
10036805:	push   esi
10036806:	push   0x22c038
1003680b:	push   eax
1003680c:	call   DWORD PTR ds:0x10065260
10036812:	test   eax,eax
10036814:	jne    0x100368bf
1003681a:	push   0x3681865e
1003681f:	push   0x10072874
10036824:	call   0x10003d63
10036829:	push   0x59c34c92
1003682e:	push   eax
1003682f:	call   0x10003d63
10036834:	push   0x5b7a9916
10036839:	push   eax
1003683a:	call   0x10003d63
1003683f:	push   eax
10036840:	push   0x1e
10036842:	push   0x100724d0
10036847:	call   0x10003d75
1003684c:	mov    esi,eax
1003684e:	mov    edi,0xf
10036853:	push   esi
10036854:	mov    DWORD PTR [esp+0x60],edi
10036858:	mov    DWORD PTR [esp+0x5c],ebx
1003685c:	mov    BYTE PTR [esp+0x4c],bl
10036860:	call   0x10041f10
10036865:	add    esp,0x28
10036868:	push   eax
10036869:	push   esi
1003686a:	lea    ecx,[esp+0x28]
1003686e:	call   0x10001344
10036873:	lea    ecx,[esp+0x3c]
10036877:	mov    BYTE PTR [esp+0x70],0x2
1003687c:	call   0x10041e01
10036881:	push   0xffffffff
10036883:	mov    BYTE PTR [esp+0x74],0x3
10036888:	push   ebx
10036889:	lea    ecx,[esp+0x28]
1003688d:	push   ecx
1003688e:	lea    ecx,[esp+0x54]
10036892:	mov    DWORD PTR [esp+0x48],0x10072304
1003689a:	mov    DWORD PTR [esp+0x6c],edi
1003689e:	mov    DWORD PTR [esp+0x68],ebx
100368a2:	mov    BYTE PTR [esp+0x58],bl
100368a6:	call   0x1000124a
100368ab:	push   0x10073924
100368b0:	lea    edx,[esp+0x40]
100368b4:	push   edx
100368b5:	mov    BYTE PTR [esp+0x78],0x2
100368ba:	call   0x10046704
100368bf:	cmp    DWORD PTR [esi+0x8],0x2
100368c3:	jne    0x10036922
100368c5:	mov    eax,DWORD PTR [esi]
100368c7:	mov    DWORD PTR [esp+0x14],eax
100368cb:	add    eax,0xc
100368ce:	push   eax
100368cf:	call   0x10042609
100368d4:	mov    edi,eax
100368d6:	add    esp,0x4
100368d9:	cmp    edi,esi
100368db:	je     0x100368e6
100368dd:	push   esi
100368de:	call   0x10041d92
100368e3:	add    esp,0x4
100368e6:	mov    eax,DWORD PTR [esp+0x14]
100368ea:	mov    ecx,DWORD PTR [ebp+0x10]
100368ed:	mov    DWORD PTR [edi],eax
100368ef:	push   ebx
100368f0:	mov    DWORD PTR [edi+0x4],ecx
100368f3:	mov    eax,DWORD PTR [edi]
100368f5:	add    eax,0xc
100368f8:	lea    edx,[esp+0x1c]
100368fc:	push   edx
100368fd:	push   eax
100368fe:	push   edi
100368ff:	push   eax
10036900:	mov    eax,DWORD PTR [ebp+0x8]
10036903:	mov    ecx,DWORD PTR [eax]
10036905:	push   edi
10036906:	push   0x22c038
1003690b:	mov    esi,edi
1003690d:	push   ecx
1003690e:	mov    DWORD PTR [esp+0x30],esi
10036912:	call   DWORD PTR ds:0x10065260
10036918:	test   eax,eax
1003691a:	je     0x10036959
1003691c:	cmp    DWORD PTR [edi+0x8],0x2
10036920:	je     0x100368c5
10036922:	mov    eax,DWORD PTR [esi+0x8]
10036925:	cmp    eax,0x1
10036928:	jne    0x10036a09
1003692e:	mov    edi,DWORD PTR [ebp+0xc]
10036931:	push   esi
10036932:	mov    DWORD PTR [edi],ebx
10036934:	call   0x10041d92
10036939:	push   ebx
1003693a:	call   0x10041d92
1003693f:	add    esp,0x8
10036942:	mov    eax,edi
10036944:	mov    ecx,DWORD PTR [esp+0x68]
10036948:	mov    DWORD PTR fs:0x0,ecx
1003694f:	pop    ecx
10036950:	pop    edi
10036951:	pop    esi
10036952:	pop    ebx
10036953:	mov    esp,ebp
10036955:	pop    ebp
10036956:	ret    0x10
10036959:	push   0x66fd1f46
1003695e:	push   0x100728a4
10036963:	call   0x10003d63
10036968:	push   0x25cb7318
1003696d:	push   eax
1003696e:	call   0x10003d63
10036973:	push   0x77a40c60
10036978:	push   eax
10036979:	call   0x10003d63
1003697e:	push   0xab6b814
10036983:	push   eax
10036984:	call   0x10003d63
10036989:	push   eax
1003698a:	push   0x1e
1003698c:	push   0x100724d0
10036991:	call   0x10003d75
10036996:	mov    esi,eax
10036998:	mov    edi,0xf
1003699d:	push   esi
1003699e:	mov    DWORD PTR [esp+0x68],edi
100369a2:	mov    DWORD PTR [esp+0x64],ebx
100369a6:	mov    BYTE PTR [esp+0x54],bl
100369aa:	call   0x10041f10
100369af:	add    esp,0x30
100369b2:	push   eax
100369b3:	push   esi
100369b4:	lea    ecx,[esp+0x28]
100369b8:	call   0x10001344
100369bd:	lea    ecx,[esp+0x3c]
100369c1:	mov    BYTE PTR [esp+0x70],0x4
100369c6:	call   0x10041e01
100369cb:	push   0xffffffff
100369cd:	mov    BYTE PTR [esp+0x74],0x5
100369d2:	push   ebx
100369d3:	lea    edx,[esp+0x28]
100369d7:	push   edx
100369d8:	lea    ecx,[esp+0x54]
100369dc:	mov    DWORD PTR [esp+0x48],0x10072304
100369e4:	mov    DWORD PTR [esp+0x6c],edi
100369e8:	mov    DWORD PTR [esp+0x68],ebx
100369ec:	mov    BYTE PTR [esp+0x58],bl
100369f0:	call   0x1000124a
100369f5:	push   0x10073924
100369fa:	lea    eax,[esp+0x40]
100369fe:	push   eax
100369ff:	mov    BYTE PTR [esp+0x78],0x4
10036a04:	call   0x10046704
10036a09:	cmp    eax,ebx
10036a0b:	je     0x10036a59
10036a0d:	push   0x69d9ff52
10036a12:	push   0x100728e0
10036a17:	call   0x10003d63
10036a1c:	push   eax
10036a1d:	push   0x1e
10036a1f:	push   0x100724d0
10036a24:	call   0x10003d75
10036a29:	add    esp,0x14
10036a2c:	push   eax
10036a2d:	lea    ecx,[esp+0x24]
10036a31:	call   0x100011d6
10036a36:	lea    ecx,[esp+0x20]
10036a3a:	push   ecx
10036a3b:	lea    edx,[esp+0x40]
10036a3f:	push   edx
10036a40:	mov    BYTE PTR [esp+0x78],0x6
10036a45:	call   0x100026a9
10036a4a:	push   0x10073924
10036a4f:	lea    eax,[esp+0x40]
10036a53:	push   eax
10036a54:	call   0x10046704
10036a59:	mov    eax,DWORD PTR [esi]
10036a5b:	mov    ecx,DWORD PTR [ebp+0x14]
10036a5e:	push   eax
10036a5f:	mov    DWORD PTR [ecx],eax
10036a61:	call   0x10042609
10036a66:	mov    edi,eax
10036a68:	add    esp,0x4
10036a6b:	cmp    edi,ebx
10036a6d:	je     0x10036a78
10036a6f:	push   ebx
10036a70:	call   0x10041d92
10036a75:	add    esp,0x4
10036a78:	mov    edx,DWORD PTR [ebp+0x14]
10036a7b:	mov    eax,DWORD PTR [edx]
10036a7d:	push   eax
10036a7e:	lea    ecx,[esi+0xc]
10036a81:	push   ecx
10036a82:	push   edi
10036a83:	call   0x10043ed0
10036a88:	mov    edx,DWORD PTR [ebp+0xc]
10036a8b:	push   esi
10036a8c:	mov    DWORD PTR [edx],edi
10036a8e:	call   0x10041d92
10036a93:	push   ebx
10036a94:	call   0x10041d92
10036a99:	mov    eax,DWORD PTR [ebp+0xc]
10036a9c:	add    esp,0x14
10036a9f:	mov    ecx,DWORD PTR [esp+0x68]
10036aa3:	mov    DWORD PTR fs:0x0,ecx
10036aaa:	pop    ecx
10036aab:	pop    edi
10036aac:	pop    esi
10036aad:	pop    ebx
10036aae:	mov    esp,ebp
10036ab0:	pop    ebp
10036ab1:	ret    0x10
10036ab4:	int3   
10036ab5:	int3   
10036ab6:	int3   
10036ab7:	int3   
10036ab8:	int3   
10036ab9:	int3   
10036aba:	int3   
10036abb:	int3   
10036abc:	int3   
10036abd:	int3   
10036abe:	int3   
10036abf:	int3   
10036ac0:	push   0xffffffff
10036ac2:	push   0x100601f7
10036ac7:	mov    eax,fs:0x0
10036acd:	push   eax
10036ace:	sub    esp,0x198
10036ad4:	mov    eax,ds:0x1007d030
10036ad9:	xor    eax,esp
10036adb:	mov    DWORD PTR [esp+0x194],eax
10036ae2:	push   ebx
10036ae3:	push   esi
10036ae4:	push   edi
10036ae5:	mov    eax,ds:0x1007d030
10036aea:	xor    eax,esp
10036aec:	push   eax
10036aed:	lea    eax,[esp+0x1a8]
10036af4:	mov    fs:0x0,eax
10036afa:	mov    esi,ecx
10036afc:	mov    eax,esi
10036afe:	mov    edi,edx
10036b00:	lea    edx,[eax+0x2]
10036b03:	xor    ebx,ebx
10036b05:	mov    cx,WORD PTR [eax]
10036b08:	add    eax,0x2
10036b0b:	cmp    cx,bx
10036b0e:	jne    0x10036b05
10036b10:	sub    eax,edx
10036b12:	sar    eax,1
10036b14:	add    eax,0x1
10036b17:	cmp    eax,0x80
10036b1c:	jbe    0x10036bd4
10036b22:	push   0x6eb34cc4
10036b27:	push   0x10072910
10036b2c:	call   0x10003d63
10036b31:	push   0x7b0217e6
10036b36:	push   eax
10036b37:	call   0x10003d63
10036b3c:	push   0x272f9d16
10036b41:	push   eax
10036b42:	call   0x10003d63
10036b47:	push   eax
10036b48:	push   0x1e
10036b4a:	push   0x10072940
10036b4f:	call   0x10003d75
10036b54:	mov    esi,eax
10036b56:	mov    edi,0xf
10036b5b:	push   esi
10036b5c:	mov    DWORD PTR [esp+0x78],edi
10036b60:	mov    DWORD PTR [esp+0x74],ebx
10036b64:	mov    BYTE PTR [esp+0x64],bl
10036b68:	call   0x10041f10
10036b6d:	add    esp,0x28
10036b70:	push   eax
10036b71:	push   esi
10036b72:	lea    ecx,[esp+0x40]
10036b76:	call   0x10001344
10036b7b:	lea    ecx,[esp+0x54]
10036b7f:	mov    DWORD PTR [esp+0x1b0],ebx
10036b86:	call   0x10041e01
10036b8b:	push   0xffffffff
10036b8d:	mov    BYTE PTR [esp+0x1b4],0x1
10036b95:	push   ebx
10036b96:	lea    eax,[esp+0x40]
10036b9a:	push   eax
10036b9b:	lea    ecx,[esp+0x6c]
10036b9f:	mov    DWORD PTR [esp+0x60],0x10072304
10036ba7:	mov    DWORD PTR [esp+0x84],edi
10036bae:	mov    DWORD PTR [esp+0x80],ebx
10036bb5:	mov    BYTE PTR [esp+0x70],bl
10036bb9:	call   0x1000124a
10036bbe:	push   0x10073924
10036bc3:	lea    ecx,[esp+0x58]
10036bc7:	push   ecx
10036bc8:	mov    BYTE PTR [esp+0x1b8],bl
10036bcf:	call   0x10046704
10036bd4:	call   DWORD PTR ds:0x1007dfe4
10036bda:	lea    edx,[esp+0xa4]
10036be1:	mov    eax,esi
10036be3:	sub    edx,esi
10036be5:	movzx  ecx,WORD PTR [eax]
10036be8:	mov    WORD PTR [edx+eax*1],cx
10036bec:	add    eax,0x2
10036bef:	cmp    cx,bx
10036bf2:	jne    0x10036be5
10036bf4:	push   0x1
10036bf6:	call   0x10042609
10036bfb:	mov    esi,eax
10036bfd:	add    esp,0x4
10036c00:	mov    DWORD PTR [esp+0x14],esi
10036c04:	push   ebx
10036c05:	lea    edx,[esp+0x1c]
10036c09:	push   edx
10036c0a:	push   0x100
10036c0f:	lea    eax,[esp+0xb0]
10036c16:	push   eax
10036c17:	push   0x100
10036c1c:	mov    ecx,eax
10036c1e:	push   ecx
10036c1f:	mov    DWORD PTR [esp+0x1c8],0x2
10036c2a:	mov    edx,DWORD PTR [edi]
10036c2c:	push   0x22c070
10036c31:	push   edx
10036c32:	call   DWORD PTR ds:0x10065260
10036c38:	test   eax,eax
10036c3a:	jne    0x10036cdf
10036c40:	push   0x10072960
10036c45:	push   0x1a
10036c47:	push   0x10072994
10036c4c:	call   0x10003d75
10036c51:	mov    esi,eax
10036c53:	mov    edi,0xf
10036c58:	push   esi
10036c59:	mov    DWORD PTR [esp+0x44],edi
10036c5d:	mov    DWORD PTR [esp+0x40],ebx
10036c61:	mov    BYTE PTR [esp+0x30],bl
10036c65:	call   0x10041f10
10036c6a:	add    esp,0x10
10036c6d:	push   eax
10036c6e:	push   esi
10036c6f:	lea    ecx,[esp+0x24]
10036c73:	call   0x10001344
10036c78:	lea    ecx,[esp+0x7c]
10036c7c:	mov    BYTE PTR [esp+0x1b0],0x3
10036c84:	call   0x10041e01
10036c89:	push   0xffffffff
10036c8b:	mov    BYTE PTR [esp+0x1b4],0x4
10036c93:	push   ebx
10036c94:	lea    eax,[esp+0x24]
10036c98:	push   eax
10036c99:	lea    ecx,[esp+0x94]
10036ca0:	mov    DWORD PTR [esp+0x88],0x10072304
10036cab:	mov    DWORD PTR [esp+0xac],edi
10036cb2:	mov    DWORD PTR [esp+0xa8],ebx
10036cb9:	mov    BYTE PTR [esp+0x98],bl
10036cc0:	call   0x1000124a
10036cc5:	push   0x10073924
10036cca:	lea    ecx,[esp+0x80]
10036cd1:	push   ecx
10036cd2:	mov    BYTE PTR [esp+0x1b8],0x3
10036cda:	call   0x10046704
10036cdf:	push   esi
10036ce0:	call   0x10041d92
10036ce5:	add    esp,0x4
10036ce8:	mov    ecx,DWORD PTR [esp+0x1a8]
10036cef:	mov    DWORD PTR fs:0x0,ecx
10036cf6:	pop    ecx
10036cf7:	pop    edi
10036cf8:	pop    esi
10036cf9:	pop    ebx
10036cfa:	mov    ecx,DWORD PTR [esp+0x194]
10036d01:	xor    ecx,esp
10036d03:	call   0x10041d97
10036d08:	add    esp,0x1a4
10036d0e:	ret    
10036d0f:	int3   
10036d10:	push   ecx
10036d11:	push   esi
10036d12:	push   0x1fe
10036d17:	call   0x1004239e
10036d1c:	mov    esi,eax
10036d1e:	add    esp,0x4
10036d21:	test   esi,esi
10036d23:	je     0x10036d37
10036d25:	push   0x1fe
10036d2a:	push   0x0
10036d2c:	push   esi
10036d2d:	call   0x10044950
10036d32:	add    esp,0xc
10036d35:	jmp    0x10036d39
10036d37:	xor    esi,esi
10036d39:	mov    edx,esi
10036d3b:	mov    eax,edi
10036d3d:	sub    edx,edi
10036d3f:	nop
10036d40:	movzx  ecx,WORD PTR [eax]
10036d43:	mov    WORD PTR [edx+eax*1],cx
10036d47:	add    eax,0x2
10036d4a:	test   cx,cx
10036d4d:	jne    0x10036d40
10036d4f:	mov    ecx,DWORD PTR [esp+0xc]
10036d53:	mov    edx,DWORD PTR [ecx]
10036d55:	push   0x0
10036d57:	lea    eax,[esp+0x8]
10036d5b:	push   eax
10036d5c:	push   0x1fe
10036d61:	push   esi
10036d62:	push   0x1fe
10036d67:	push   esi
10036d68:	push   0x22c064
10036d6d:	push   edx
10036d6e:	call   DWORD PTR ds:0x10065260
10036d74:	push   esi
10036d75:	call   0x10041d92
10036d7a:	add    esp,0x4
10036d7d:	pop    esi
10036d7e:	pop    ecx
10036d7f:	ret    0x4
10036d82:	int3   
10036d83:	int3   
10036d84:	int3   
10036d85:	int3   
10036d86:	int3   
10036d87:	int3   
10036d88:	int3   
10036d89:	int3   
10036d8a:	int3   
10036d8b:	int3   
10036d8c:	int3   
10036d8d:	int3   
10036d8e:	int3   
10036d8f:	int3   
10036d90:	push   0xffffffff
10036d92:	push   0x1005f688
10036d97:	mov    eax,fs:0x0
10036d9d:	push   eax
10036d9e:	push   ecx
10036d9f:	push   ebx
10036da0:	push   ebp
10036da1:	push   esi
10036da2:	push   edi
10036da3:	mov    eax,ds:0x1007d030
10036da8:	xor    eax,esp
10036daa:	push   eax
10036dab:	lea    eax,[esp+0x18]
10036daf:	mov    fs:0x0,eax
10036db5:	mov    ebp,DWORD PTR [esp+0x30]
10036db9:	push   0x440
10036dbe:	call   0x1004239e
10036dc3:	mov    ebx,eax
10036dc5:	add    esp,0x4
10036dc8:	test   ebx,ebx
10036dca:	je     0x10036dde
10036dcc:	push   0x440
10036dd1:	push   0x0
10036dd3:	push   ebx
10036dd4:	call   0x10044950
10036dd9:	add    esp,0xc
10036ddc:	jmp    0x10036de0
10036dde:	xor    ebx,ebx
10036de0:	mov    DWORD PTR [esp+0x30],ebx
10036de4:	push   0x9050c4e
10036de9:	mov    DWORD PTR [esp+0x24],0x0
10036df1:	push   0x100729b0
10036df6:	mov    WORD PTR [ebx],0x0
10036dfb:	call   0x10003d63
10036e00:	push   eax
10036e01:	push   0x4
10036e03:	push   0x100729e0
10036e08:	call   0x10003f5b
10036e0d:	add    esp,0x14
10036e10:	mov    edx,eax
10036e12:	mov    cx,WORD PTR [eax]
10036e15:	add    eax,0x2
10036e18:	test   cx,cx
10036e1b:	jne    0x10036e12
10036e1d:	mov    edi,ebx
10036e1f:	sub    eax,edx
10036e21:	add    edi,0xfffffffe
10036e24:	mov    cx,WORD PTR [edi+0x2]
10036e28:	add    edi,0x2
10036e2b:	test   cx,cx
10036e2e:	jne    0x10036e24
10036e30:	mov    ecx,eax
10036e32:	shr    ecx,0x2
10036e35:	mov    esi,edx
10036e37:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10036e39:	mov    ecx,eax
10036e3b:	mov    eax,DWORD PTR [esp+0x2c]
10036e3f:	and    ecx,0x3
10036e42:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10036e44:	mov    ecx,eax
10036e46:	mov    dx,WORD PTR [eax]
10036e49:	add    eax,0x2
10036e4c:	test   dx,dx
10036e4f:	jne    0x10036e46
10036e51:	mov    edi,ebx
10036e53:	sub    eax,ecx
10036e55:	mov    esi,ecx
10036e57:	add    edi,0xfffffffe
10036e5a:	lea    ebx,[ebx+0x0]
10036e60:	mov    cx,WORD PTR [edi+0x2]
10036e64:	add    edi,0x2
10036e67:	test   cx,cx
10036e6a:	jne    0x10036e60
10036e6c:	mov    ecx,eax
10036e6e:	shr    ecx,0x2
10036e71:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10036e73:	mov    ecx,eax
10036e75:	and    ecx,0x3
10036e78:	lea    edx,[ebx+0x400]
10036e7e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10036e80:	mov    eax,ebp
10036e82:	sub    edx,ebp
10036e84:	movzx  ecx,WORD PTR [eax]
10036e87:	mov    WORD PTR [edx+eax*1],cx
10036e8b:	add    eax,0x2
10036e8e:	test   cx,cx
10036e91:	jne    0x10036e84
10036e93:	mov    ecx,DWORD PTR [esp+0x28]
10036e97:	mov    edx,DWORD PTR [ecx]
10036e99:	push   0x0
10036e9b:	lea    eax,[esp+0x18]
10036e9f:	push   eax
10036ea0:	push   0x440
10036ea5:	push   ebx
10036ea6:	push   0x440
10036eab:	push   ebx
10036eac:	push   0x22c078
10036eb1:	push   edx
10036eb2:	call   DWORD PTR ds:0x10065260
10036eb8:	push   ebx
10036eb9:	call   0x10041d92
10036ebe:	add    esp,0x4
10036ec1:	mov    ecx,DWORD PTR [esp+0x18]
10036ec5:	mov    DWORD PTR fs:0x0,ecx
10036ecc:	pop    ecx
10036ecd:	pop    edi
10036ece:	pop    esi
10036ecf:	pop    ebp
10036ed0:	pop    ebx
10036ed1:	add    esp,0x10
10036ed4:	ret    0xc
10036ed7:	int3   
10036ed8:	int3   
10036ed9:	int3   
10036eda:	int3   
10036edb:	int3   
10036edc:	int3   
10036edd:	int3   
10036ede:	int3   
10036edf:	int3   
10036ee0:	mov    ecx,DWORD PTR [eax]
10036ee2:	push   ecx
10036ee3:	call   0x10041d92
10036ee8:	pop    ecx
10036ee9:	ret    
10036eea:	int3   
10036eeb:	int3   
10036eec:	int3   
10036eed:	int3   
10036eee:	int3   
10036eef:	int3   
10036ef0:	push   ebp
10036ef1:	mov    ebp,esp
10036ef3:	and    esp,0xfffffff8
10036ef6:	mov    ecx,DWORD PTR [eax]
10036ef8:	sub    esp,0x28
10036efb:	cmp    ecx,DWORD PTR [eax+0x4]
10036efe:	jbe    0x10036f18
10036f00:	lea    eax,[esp]
10036f03:	push   eax
10036f04:	call   0x10037040
10036f09:	push   0x100739ac
10036f0e:	lea    ecx,[esp+0x4]
10036f12:	push   ecx
10036f13:	call   0x10046704
10036f18:	mov    edx,DWORD PTR [eax+0x8]
10036f1b:	mov    al,BYTE PTR [ecx+edx*1]
10036f1e:	mov    esp,ebp
10036f20:	pop    ebp
10036f21:	ret    
10036f22:	int3   
10036f23:	int3   
10036f24:	int3   
10036f25:	int3   
10036f26:	int3   
10036f27:	int3   
10036f28:	int3   
10036f29:	int3   
10036f2a:	int3   
10036f2b:	int3   
10036f2c:	int3   
10036f2d:	int3   
10036f2e:	int3   
10036f2f:	int3   
10036f30:	push   esi
10036f31:	mov    esi,ecx
10036f33:	mov    DWORD PTR [esi],0x10072304
10036f39:	cmp    DWORD PTR [esi+0x24],0x10
10036f3d:	jb     0x10036f4b
10036f3f:	mov    eax,DWORD PTR [esi+0x10]
10036f42:	push   eax
10036f43:	call   0x10041d92
10036f48:	add    esp,0x4
10036f4b:	xor    eax,eax
10036f4d:	mov    DWORD PTR [esi+0x24],0xf
10036f54:	mov    DWORD PTR [esi+0x20],eax
10036f57:	mov    BYTE PTR [esi+0x10],al
10036f5a:	mov    ecx,esi
10036f5c:	pop    esi
10036f5d:	jmp    0x10041ed0
10036f62:	int3   
10036f63:	int3   
10036f64:	int3   
10036f65:	int3   
10036f66:	int3   
10036f67:	int3   
10036f68:	int3   
10036f69:	int3   
10036f6a:	int3   
10036f6b:	int3   
10036f6c:	int3   
10036f6d:	int3   
10036f6e:	int3   
10036f6f:	int3   
10036f70:	push   0xffffffff
10036f72:	push   0x1005ebc8
10036f77:	mov    eax,fs:0x0
10036f7d:	push   eax
10036f7e:	push   ecx
10036f7f:	push   esi
10036f80:	push   edi
10036f81:	mov    eax,ds:0x1007d030
10036f86:	xor    eax,esp
10036f88:	push   eax
10036f89:	lea    eax,[esp+0x10]
10036f8d:	mov    fs:0x0,eax
10036f93:	mov    esi,ecx
10036f95:	mov    DWORD PTR [esp+0xc],esi
10036f99:	mov    edi,DWORD PTR [esp+0x20]
10036f9d:	push   edi
10036f9e:	call   0x10041e78
10036fa3:	xor    eax,eax
10036fa5:	mov    DWORD PTR [esp+0x18],eax
10036fa9:	push   0xffffffff
10036fab:	lea    ecx,[esi+0xc]
10036fae:	mov    DWORD PTR [esi],0x10072304
10036fb4:	push   eax
10036fb5:	add    edi,0xc
10036fb8:	mov    DWORD PTR [ecx+0x18],0xf
10036fbf:	mov    DWORD PTR [ecx+0x14],eax
10036fc2:	push   edi
10036fc3:	mov    BYTE PTR [ecx+0x4],al
10036fc6:	call   0x1000124a
10036fcb:	mov    DWORD PTR [esi],0x10072a34
10036fd1:	mov    eax,esi
10036fd3:	mov    ecx,DWORD PTR [esp+0x10]
10036fd7:	mov    DWORD PTR fs:0x0,ecx
10036fde:	pop    ecx
10036fdf:	pop    edi
10036fe0:	pop    esi
10036fe1:	add    esp,0x10
10036fe4:	ret    0x4
10036fe7:	int3   
10036fe8:	int3   
10036fe9:	int3   
10036fea:	int3   
10036feb:	int3   
10036fec:	int3   
10036fed:	int3   
10036fee:	int3   
10036fef:	int3   
10036ff0:	push   esi
10036ff1:	mov    esi,ecx
10036ff3:	mov    DWORD PTR [esi],0x10072304
10036ff9:	cmp    DWORD PTR [esi+0x24],0x10
10036ffd:	jb     0x1003700b
10036fff:	mov    eax,DWORD PTR [esi+0x10]
10037002:	push   eax
10037003:	call   0x10041d92
10037008:	add    esp,0x4
1003700b:	xor    eax,eax
1003700d:	mov    DWORD PTR [esi+0x24],0xf
10037014:	mov    DWORD PTR [esi+0x20],eax
10037017:	mov    ecx,esi
10037019:	mov    BYTE PTR [esi+0x10],al
1003701c:	call   0x10041ed0
10037021:	test   BYTE PTR [esp+0x8],0x1
10037026:	je     0x10037031
10037028:	push   esi
10037029:	call   0x10041d92
1003702e:	add    esp,0x4
10037031:	mov    eax,esi
10037033:	pop    esi
10037034:	ret    0x4
10037037:	int3   
10037038:	int3   
10037039:	int3   
1003703a:	int3   
1003703b:	int3   
1003703c:	int3   
1003703d:	int3   
1003703e:	int3   
1003703f:	int3   
10037040:	push   0xffffffff
10037042:	push   0x100601a0
10037047:	mov    eax,fs:0x0
1003704d:	push   eax
1003704e:	sub    esp,0x1c
10037051:	push   ebx
10037052:	push   esi
10037053:	push   edi
10037054:	mov    eax,ds:0x1007d030
10037059:	xor    eax,esp
1003705b:	push   eax
1003705c:	lea    eax,[esp+0x2c]
10037060:	mov    fs:0x0,eax
10037066:	mov    esi,DWORD PTR [esp+0x3c]
1003706a:	push   0x2fc0c9ee
1003706f:	push   0x100729ec
10037074:	call   0x10003d63
10037079:	push   0x47040a0a
1003707e:	push   eax
1003707f:	call   0x10003d63
10037084:	push   0x2970ea62
10037089:	push   eax
1003708a:	call   0x10003d63
1003708f:	push   0x641dbe9e
10037094:	push   eax
10037095:	call   0x10003d63
1003709a:	push   eax
1003709b:	push   0xd
1003709d:	push   0x10072a20
100370a2:	call   0x10003d75
100370a7:	mov    edi,eax
100370a9:	xor    ebx,ebx
100370ab:	push   edi
100370ac:	mov    DWORD PTR [esp+0x58],0xf
100370b4:	mov    DWORD PTR [esp+0x54],ebx
100370b8:	mov    BYTE PTR [esp+0x44],bl
100370bc:	call   0x10041f10
100370c1:	add    esp,0x30
100370c4:	push   eax
100370c5:	push   edi
100370c6:	lea    ecx,[esp+0x18]
100370ca:	call   0x10001344
100370cf:	mov    ecx,esi
100370d1:	mov    DWORD PTR [esp+0x34],ebx
100370d5:	call   0x10041e01
100370da:	mov    BYTE PTR [esp+0x34],0x1
100370df:	push   0xffffffff
100370e1:	lea    ecx,[esi+0xc]
100370e4:	mov    DWORD PTR [esi],0x10072304
100370ea:	push   ebx
100370eb:	lea    eax,[esp+0x18]
100370ef:	mov    DWORD PTR [ecx+0x18],0xf
100370f6:	mov    DWORD PTR [ecx+0x14],ebx
100370f9:	push   eax
100370fa:	mov    BYTE PTR [ecx+0x4],bl
100370fd:	call   0x1000124a
10037102:	cmp    DWORD PTR [esp+0x28],0x10
10037107:	jb     0x10037116
10037109:	mov    ecx,DWORD PTR [esp+0x14]
1003710d:	push   ecx
1003710e:	call   0x10041d92
10037113:	add    esp,0x4
10037116:	mov    eax,esi
10037118:	mov    DWORD PTR [esi],0x10072a34
1003711e:	mov    ecx,DWORD PTR [esp+0x2c]
10037122:	mov    DWORD PTR fs:0x0,ecx
10037129:	pop    ecx
1003712a:	pop    edi
1003712b:	pop    esi
1003712c:	pop    ebx
1003712d:	add    esp,0x28
10037130:	ret    0x4
10037133:	int3   
10037134:	int3   
10037135:	int3   
10037136:	int3   
10037137:	int3   
10037138:	int3   
10037139:	int3   
1003713a:	int3   
1003713b:	int3   
1003713c:	int3   
1003713d:	int3   
1003713e:	int3   
1003713f:	int3   
10037140:	push   0xffffffff
10037142:	push   0x10061321
10037147:	mov    eax,fs:0x0
1003714d:	push   eax
1003714e:	sub    esp,0x10
10037151:	push   ebx
10037152:	push   ebp
10037153:	push   edi
10037154:	mov    eax,ds:0x1007d030
10037159:	xor    eax,esp
1003715b:	push   eax
1003715c:	lea    eax,[esp+0x20]
10037160:	mov    fs:0x0,eax
10037166:	mov    ebp,DWORD PTR [esp+0x30]
1003716a:	xor    eax,eax
1003716c:	mov    DWORD PTR [esp+0x10],eax
10037170:	mov    ecx,DWORD PTR [ebp+0x0]
10037173:	mov    DWORD PTR [esp+0x14],esi
10037177:	mov    DWORD PTR [esp+0x18],ebp
1003717b:	mov    DWORD PTR [esp+0x1c],ecx
1003717f:	mov    edi,0x1
10037184:	mov    DWORD PTR [esp+0x28],edi
10037188:	mov    DWORD PTR [esi+0x18],0xf
1003718f:	mov    DWORD PTR [esi+0x14],eax
10037192:	mov    BYTE PTR [esi+0x4],al
10037195:	mov    eax,ebp
10037197:	mov    DWORD PTR [esp+0x10],edi
1003719b:	call   0x10036ef0
100371a0:	test   al,al
100371a2:	je     0x10037249
100371a8:	mov    eax,ebp
100371aa:	call   0x10036ef0
100371af:	or     edx,0xffffffff
100371b2:	sub    edx,DWORD PTR [esi+0x14]
100371b5:	mov    bl,al
100371b7:	cmp    edx,0x1
100371ba:	ja     0x100371c1
100371bc:	call   0x1005600a
100371c1:	mov    edi,DWORD PTR [esi+0x14]
100371c4:	add    edi,0x1
100371c7:	cmp    edi,0xfffffffe
100371ca:	jbe    0x100371d1
100371cc:	call   0x1005600a
100371d1:	mov    eax,DWORD PTR [esi+0x18]
100371d4:	cmp    eax,edi
100371d6:	jae    0x100371fa
100371d8:	mov    eax,DWORD PTR [esi+0x14]
100371db:	push   eax
100371dc:	push   edi
100371dd:	mov    ecx,esi
100371df:	call   0x10001509
100371e4:	test   edi,edi
100371e6:	jbe    0x10037230
100371e8:	mov    ecx,DWORD PTR [esi+0x14]
100371eb:	mov    edx,0x10
100371f0:	cmp    DWORD PTR [esi+0x18],edx
100371f3:	jb     0x10037216
100371f5:	mov    eax,DWORD PTR [esi+0x4]
100371f8:	jmp    0x10037219
100371fa:	test   edi,edi
100371fc:	jne    0x100371e6
100371fe:	cmp    eax,0x10
10037201:	mov    DWORD PTR [esi+0x14],edi
10037204:	jb     0x1003720e
10037206:	mov    eax,DWORD PTR [esi+0x4]
10037209:	mov    BYTE PTR [eax],0x0
1003720c:	jmp    0x10037230
1003720e:	lea    eax,[esi+0x4]
10037211:	mov    BYTE PTR [eax],0x0
10037214:	jmp    0x10037230
10037216:	lea    eax,[esi+0x4]
10037219:	mov    BYTE PTR [eax+ecx*1],bl
1003721c:	cmp    DWORD PTR [esi+0x18],edx
1003721f:	mov    DWORD PTR [esi+0x14],edi
10037222:	jb     0x10037229
10037224:	mov    eax,DWORD PTR [esi+0x4]
10037227:	jmp    0x1003722c
10037229:	lea    eax,[esi+0x4]
1003722c:	mov    BYTE PTR [eax+edi*1],0x0
10037230:	add    DWORD PTR [ebp+0x0],0x1
10037234:	mov    eax,ebp
10037236:	call   0x10036ef0
1003723b:	test   al,al
1003723d:	jne    0x100371a8
10037243:	add    DWORD PTR [ebp+0x0],0x1
10037247:	jmp    0x1003724c
10037249:	add    DWORD PTR [ebp+0x0],edi
1003724c:	mov    eax,esi
1003724e:	mov    ecx,DWORD PTR [esp+0x20]
10037252:	mov    DWORD PTR fs:0x0,ecx
10037259:	pop    ecx
1003725a:	pop    edi
1003725b:	pop    ebp
1003725c:	pop    ebx
1003725d:	add    esp,0x1c
10037260:	ret    0x4
10037263:	int3   
10037264:	int3   
10037265:	int3   
10037266:	int3   
10037267:	int3   
10037268:	int3   
10037269:	int3   
1003726a:	int3   
1003726b:	int3   
1003726c:	int3   
1003726d:	int3   
1003726e:	int3   
1003726f:	int3   
10037270:	push   ebp
10037271:	mov    ebp,esp
10037273:	and    esp,0xfffffff8
10037276:	push   0xffffffff
10037278:	push   0x10061eb8
1003727d:	mov    eax,fs:0x0
10037283:	push   eax
10037284:	sub    esp,0x38
10037287:	push   ebx
10037288:	mov    eax,ds:0x1007d030
1003728d:	xor    eax,esp
1003728f:	push   eax
10037290:	lea    eax,[esp+0x40]
10037294:	mov    fs:0x0,eax
1003729a:	xor    eax,eax
1003729c:	mov    DWORD PTR [esp+0xc],eax
100372a0:	mov    ecx,DWORD PTR [esi]
100372a2:	mov    DWORD PTR [esp+0xc],esi
100372a6:	mov    DWORD PTR [esp+0x10],ecx
100372aa:	push   esi
100372ab:	mov    DWORD PTR [esp+0x4c],eax
100372af:	call   0x10037480
100372b4:	mov    ecx,DWORD PTR [esi]
100372b6:	mov    edx,DWORD PTR [esi+0x4]
100372b9:	mov    ebx,eax
100372bb:	sub    edx,ecx
100372bd:	cmp    ebx,edx
100372bf:	jbe    0x100372da
100372c1:	lea    eax,[esp+0x14]
100372c5:	push   eax
100372c6:	call   0x10037040
100372cb:	push   0x100739ac
100372d0:	lea    ecx,[esp+0x18]
100372d4:	push   ecx
100372d5:	call   0x10046704
100372da:	mov    eax,DWORD PTR [esi+0x8]
100372dd:	add    eax,ecx
100372df:	push   ebx
100372e0:	mov    DWORD PTR [edi+0x18],0xf
100372e7:	mov    DWORD PTR [edi+0x14],0x0
100372ee:	push   eax
100372ef:	mov    ecx,edi
100372f1:	mov    BYTE PTR [edi+0x4],0x0
100372f5:	call   0x10001344
100372fa:	add    DWORD PTR [esi],ebx
100372fc:	mov    eax,edi
100372fe:	mov    ecx,DWORD PTR [esp+0x40]
10037302:	mov    DWORD PTR fs:0x0,ecx
10037309:	pop    ecx
1003730a:	pop    ebx
1003730b:	mov    esp,ebp
1003730d:	pop    ebp
1003730e:	ret    
1003730f:	int3   
10037310:	push   0xffffffff
10037312:	push   0x10062429
10037317:	mov    eax,fs:0x0
1003731d:	push   eax
1003731e:	sub    esp,0x28
10037321:	mov    eax,ds:0x1007d030
10037326:	xor    eax,esp
10037328:	mov    DWORD PTR [esp+0x24],eax
1003732c:	push   ebp
1003732d:	push   esi
1003732e:	push   edi
1003732f:	mov    eax,ds:0x1007d030
10037334:	xor    eax,esp
10037336:	push   eax
10037337:	lea    eax,[esp+0x38]
1003733b:	mov    fs:0x0,eax
10037341:	mov    ebp,DWORD PTR [esp+0x48]
10037345:	xor    eax,eax
10037347:	mov    DWORD PTR [esp+0x40],eax
1003734b:	mov    esi,ecx
1003734d:	lea    edi,[esp+0x18]
10037351:	mov    DWORD PTR [esp+0x14],ebp
10037355:	mov    DWORD PTR [esp+0x10],eax
10037359:	call   0x10037270
1003735e:	mov    DWORD PTR [esp+0x40],0x1
10037366:	mov    eax,ds:0x1007fa54
1003736b:	mov    edx,DWORD PTR [eax+0xc]
1003736e:	mov    ecx,0x1007fa54
10037373:	call   edx
10037375:	add    eax,0x10
10037378:	mov    DWORD PTR [ebp+0x0],eax
1003737b:	mov    eax,0x1006bb18
10037380:	test   eax,0xffff0000
10037385:	mov    BYTE PTR [esp+0x40],0x2
1003738a:	jne    0x100373a8
1003738c:	mov    ecx,eax
1003738e:	movzx  esi,cx
10037391:	push   esi
10037392:	call   0x10002019
10037397:	add    esp,0x4
1003739a:	test   eax,eax
1003739c:	je     0x100373b3
1003739e:	push   esi
1003739f:	push   eax
100373a0:	push   ebp
100373a1:	call   0x100021e1
100373a6:	jmp    0x100373b3
100373a8:	push   0x1006bb18
100373ad:	push   ebp
100373ae:	call   0x100020c7
100373b3:	mov    BYTE PTR [esp+0x40],0x1
100373b8:	mov    eax,DWORD PTR [ebp+0x0]
100373bb:	mov    esi,DWORD PTR [esp+0x2c]
100373bf:	mov    edi,0x10
100373c4:	sub    eax,edi
100373c6:	mov    ecx,0x1
100373cb:	sub    ecx,DWORD PTR [eax+0xc]
100373ce:	mov    eax,DWORD PTR [eax+0x8]
100373d1:	add    esi,esi
100373d3:	sub    eax,esi
100373d5:	or     eax,ecx
100373d7:	mov    DWORD PTR [esp+0x10],0x1
100373df:	jge    0x100373ea
100373e1:	mov    eax,esi
100373e3:	mov    ecx,ebp
100373e5:	call   0x10002267
100373ea:	cmp    DWORD PTR [esp+0x30],edi
100373ee:	mov    ecx,DWORD PTR [ebp+0x0]
100373f1:	mov    eax,DWORD PTR [esp+0x1c]
100373f5:	jae    0x100373fb
100373f7:	lea    eax,[esp+0x1c]
100373fb:	push   esi
100373fc:	push   ecx
100373fd:	push   0xffffffff
100373ff:	push   eax
10037400:	push   0x0
10037402:	push   0xfde9
10037407:	call   DWORD PTR ds:0x1006508c
1003740d:	mov    eax,DWORD PTR [ebp+0x0]
10037410:	test   eax,eax
10037412:	je     0x10037421
10037414:	push   eax
10037415:	call   0x100425f3
1003741a:	add    esp,0x4
1003741d:	test   eax,eax
1003741f:	jl     0x1003746a
10037421:	mov    ecx,DWORD PTR [ebp+0x0]
10037424:	cmp    eax,DWORD PTR [ecx-0x8]
10037427:	jg     0x1003746a
10037429:	mov    DWORD PTR [ecx-0xc],eax
1003742c:	mov    edx,DWORD PTR [ebp+0x0]
1003742f:	mov    WORD PTR [edx+eax*2],0x0
10037435:	cmp    DWORD PTR [esp+0x30],edi
10037439:	jb     0x10037448
1003743b:	mov    eax,DWORD PTR [esp+0x1c]
1003743f:	push   eax
10037440:	call   0x10041d92
10037445:	add    esp,0x4
10037448:	mov    eax,ebp
1003744a:	mov    ecx,DWORD PTR [esp+0x38]
1003744e:	mov    DWORD PTR fs:0x0,ecx
10037455:	pop    ecx
10037456:	pop    edi
10037457:	pop    esi
10037458:	pop    ebp
10037459:	mov    ecx,DWORD PTR [esp+0x24]
1003745d:	xor    ecx,esp
1003745f:	call   0x10041d97
10037464:	add    esp,0x34
10037467:	ret    0x4
1003746a:	push   0x80070057
1003746f:	call   0x10001f41
10037474:	int3   
10037475:	int3   
10037476:	int3   
10037477:	int3   
10037478:	int3   
10037479:	int3   
1003747a:	int3   
1003747b:	int3   
1003747c:	int3   
1003747d:	int3   
1003747e:	int3   
1003747f:	int3   
10037480:	push   ebp
10037481:	mov    ebp,esp
10037483:	and    esp,0xfffffff8
10037486:	push   0xffffffff
10037488:	push   0x100612d8
1003748d:	mov    eax,fs:0x0
10037493:	push   eax
10037494:	sub    esp,0x3c
10037497:	push   esi
10037498:	push   edi
10037499:	mov    eax,ds:0x1007d030
1003749e:	xor    eax,esp
100374a0:	push   eax
100374a1:	lea    eax,[esp+0x48]
100374a5:	mov    fs:0x0,eax
100374ab:	mov    eax,DWORD PTR [ebp+0x8]
100374ae:	mov    ecx,DWORD PTR [eax]
100374b0:	mov    DWORD PTR [esp+0x14],eax
100374b4:	mov    DWORD PTR [esp+0x18],ecx
100374b8:	mov    DWORD PTR [esp+0x50],0x0
100374c0:	mov    edi,DWORD PTR [eax+0x4]
100374c3:	cmp    ecx,edi
100374c5:	jbe    0x100374e0
100374c7:	lea    eax,[esp+0x1c]
100374cb:	push   eax
100374cc:	call   0x10037040
100374d1:	push   0x100739ac
100374d6:	lea    ecx,[esp+0x20]
100374da:	push   ecx
100374db:	call   0x10046704
100374e0:	mov    esi,DWORD PTR [eax+0x8]
100374e3:	mov    dl,BYTE PTR [esi+ecx*1]
100374e6:	add    ecx,0x1
100374e9:	cmp    ecx,edi
100374eb:	mov    BYTE PTR [esp+0x10],dl
100374ef:	mov    DWORD PTR [eax],ecx
100374f1:	jbe    0x1003750c
100374f3:	lea    eax,[esp+0x1c]
100374f7:	push   eax
100374f8:	call   0x10037040
100374fd:	push   0x100739ac
10037502:	lea    ecx,[esp+0x20]
10037506:	push   ecx
10037507:	call   0x10046704
1003750c:	mov    dl,BYTE PTR [ecx+esi*1]
1003750f:	add    ecx,0x1
10037512:	cmp    ecx,edi
10037514:	mov    BYTE PTR [esp+0x11],dl
10037518:	mov    DWORD PTR [eax],ecx
1003751a:	jbe    0x10037535
1003751c:	lea    eax,[esp+0x1c]
10037520:	push   eax
10037521:	call   0x10037040
10037526:	push   0x100739ac
1003752b:	lea    ecx,[esp+0x20]
1003752f:	push   ecx
10037530:	call   0x10046704
10037535:	mov    dl,BYTE PTR [ecx+esi*1]
10037538:	add    ecx,0x1
1003753b:	cmp    ecx,edi
1003753d:	mov    BYTE PTR [esp+0x12],dl
10037541:	mov    DWORD PTR [eax],ecx
10037543:	jbe    0x1003755e
10037545:	lea    eax,[esp+0x1c]
10037549:	push   eax
1003754a:	call   0x10037040
1003754f:	push   0x100739ac
10037554:	lea    ecx,[esp+0x20]
10037558:	push   ecx
10037559:	call   0x10046704
1003755e:	mov    dl,BYTE PTR [ecx+esi*1]
10037561:	add    ecx,0x1
10037564:	mov    BYTE PTR [esp+0x13],dl
10037568:	mov    DWORD PTR [eax],ecx
1003756a:	mov    eax,DWORD PTR [esp+0x10]
1003756e:	mov    ecx,DWORD PTR [esp+0x48]
10037572:	mov    DWORD PTR fs:0x0,ecx
10037579:	pop    ecx
1003757a:	pop    edi
1003757b:	pop    esi
1003757c:	mov    esp,ebp
1003757e:	pop    ebp
1003757f:	ret    0x4
10037582:	int3   
10037583:	int3   
10037584:	int3   
10037585:	int3   
10037586:	int3   
10037587:	int3   
10037588:	int3   
10037589:	int3   
1003758a:	int3   
1003758b:	int3   
1003758c:	int3   
1003758d:	int3   
1003758e:	int3   
1003758f:	int3   
10037590:	mov    eax,DWORD PTR [esi]
10037592:	lea    ecx,[eax+edi*1]
10037595:	sub    esp,0x28
10037598:	cmp    ecx,DWORD PTR [esi+0x4]
1003759b:	jbe    0x100375b5
1003759d:	lea    edx,[esp]
100375a0:	push   edx
100375a1:	call   0x10037040
100375a6:	push   0x100739ac
100375ab:	lea    eax,[esp+0x4]
100375af:	push   eax
100375b0:	call   0x10046704
100375b5:	mov    ecx,DWORD PTR [esi+0x8]
100375b8:	mov    edx,DWORD PTR [esp+0x2c]
100375bc:	push   edi
100375bd:	add    ecx,eax
100375bf:	push   ecx
100375c0:	push   edx
100375c1:	call   0x10043ed0
100375c6:	add    esp,0xc
100375c9:	add    DWORD PTR [esi],edi
100375cb:	add    esp,0x28
100375ce:	ret    0x4
100375d1:	int3   
100375d2:	int3   
100375d3:	int3   
100375d4:	int3   
100375d5:	int3   
100375d6:	int3   
100375d7:	int3   
100375d8:	int3   
100375d9:	int3   
100375da:	int3   
100375db:	int3   
100375dc:	int3   
100375dd:	int3   
100375de:	int3   
100375df:	int3   
100375e0:	mov    eax,DWORD PTR [ecx]
100375e2:	test   eax,eax
100375e4:	je     0x100375eb
100375e6:	mov    ecx,DWORD PTR [ecx+0x4]
100375e9:	mov    DWORD PTR [eax],ecx
100375eb:	ret    
100375ec:	int3   
100375ed:	int3   
100375ee:	int3   
100375ef:	int3   
100375f0:	push   0x1007fd2c
100375f5:	call   DWORD PTR ds:0x100650a4
100375fb:	mov    eax,DWORD PTR [esp+0x4]
100375ff:	ret    0x4
10037602:	int3   
10037603:	int3   
10037604:	int3   
10037605:	int3   
10037606:	int3   
10037607:	int3   
10037608:	int3   
10037609:	int3   
1003760a:	int3   
1003760b:	int3   
1003760c:	int3   
1003760d:	int3   
1003760e:	int3   
1003760f:	int3   
10037610:	push   0x1007fd2c
10037615:	call   DWORD PTR ds:0x100650ac
1003761b:	ret    
1003761c:	int3   
1003761d:	int3   
1003761e:	int3   
1003761f:	int3   
10037620:	push   ebp
10037621:	mov    ebp,esp
10037623:	push   0xffffffff
10037625:	push   0x100612b0
1003762a:	mov    eax,fs:0x0
10037630:	push   eax
10037631:	sub    esp,0x10
10037634:	push   ebx
10037635:	push   esi
10037636:	push   edi
10037637:	mov    eax,ds:0x1007d030
1003763c:	xor    eax,ebp
1003763e:	push   eax
1003763f:	lea    eax,[ebp-0xc]
10037642:	mov    fs:0x0,eax
10037648:	mov    DWORD PTR [ebp-0x10],esp
1003764b:	push   0x1
1003764d:	lea    eax,[ebp-0x18]
10037650:	push   eax
10037651:	mov    DWORD PTR [ebp-0x4],0x0
10037658:	call   0x100346c0
1003765d:	mov    ecx,DWORD PTR [ebp+0x8]
10037660:	mov    esi,DWORD PTR [ebp-0x18]
10037663:	push   0x0
10037665:	lea    edx,[ebp-0x1c]
10037668:	push   edx
10037669:	push   0x4
1003766b:	lea    eax,[ebp-0x14]
1003766e:	push   eax
1003766f:	push   0x4
10037671:	mov    DWORD PTR [ebp-0x14],ecx
10037674:	mov    ecx,eax
10037676:	push   ecx
10037677:	push   0x22c068
1003767c:	push   esi
1003767d:	call   DWORD PTR ds:0x10065260
10037683:	push   esi
10037684:	call   DWORD PTR ds:0x10065070
1003768a:	mov    ecx,DWORD PTR [ebp-0xc]
1003768d:	mov    DWORD PTR fs:0x0,ecx
10037694:	pop    ecx
10037695:	pop    edi
10037696:	pop    esi
10037697:	pop    ebx
10037698:	mov    esp,ebp
1003769a:	pop    ebp
1003769b:	ret    
1003769c:	mov    eax,0x1003768a
100376a1:	ret    
100376a2:	int3   
100376a3:	int3   
100376a4:	int3   
100376a5:	int3   
100376a6:	int3   
100376a7:	int3   
100376a8:	int3   
100376a9:	int3   
100376aa:	int3   
100376ab:	int3   
100376ac:	int3   
100376ad:	int3   
100376ae:	int3   
100376af:	int3   
100376b0:	push   ebp
100376b1:	mov    ebp,esp
100376b3:	push   0xffffffff
100376b5:	push   0x10061288
100376ba:	mov    eax,fs:0x0
100376c0:	push   eax
100376c1:	sub    esp,0x1c
100376c4:	push   ebx
100376c5:	push   esi
100376c6:	push   edi
100376c7:	mov    eax,ds:0x1007d030
100376cc:	xor    eax,ebp
100376ce:	push   eax
100376cf:	lea    eax,[ebp-0xc]
100376d2:	mov    fs:0x0,eax
100376d8:	mov    DWORD PTR [ebp-0x10],esp
100376db:	xor    esi,esi
100376dd:	mov    DWORD PTR [ebp-0x24],esi
100376e0:	mov    eax,ds:0x1007fa54
100376e5:	mov    edx,DWORD PTR [eax+0xc]
100376e8:	mov    ecx,0x1007fa54
100376ed:	call   edx
100376ef:	lea    edi,[eax+0x10]
100376f2:	mov    DWORD PTR [ebp-0x14],edi
100376f5:	push   0x1
100376f7:	lea    eax,[ebp-0x24]
100376fa:	mov    DWORD PTR [ebp-0x4],esi
100376fd:	push   eax
100376fe:	mov    BYTE PTR [ebp-0x4],0x1
10037702:	call   0x100346c0
10037707:	mov    BYTE PTR [ebp-0x4],0x2
1003770b:	mov    DWORD PTR [ebp-0x20],esi
1003770e:	mov    edi,edi
10037710:	cmp    esi,0x12
10037713:	je     0x10037869
10037719:	mov    edx,DWORD PTR ds:0x1007fa54
1003771f:	mov    eax,DWORD PTR [edx+0xc]
10037722:	mov    ecx,0x1007fa54
10037727:	call   eax
10037729:	add    eax,0x10
1003772c:	mov    DWORD PTR [ebp-0x1c],eax
1003772f:	push   0x0
10037731:	lea    ecx,[ebp-0x28]
10037734:	push   ecx
10037735:	push   0x4
10037737:	lea    edx,[ebp-0x18]
1003773a:	push   edx
1003773b:	push   0x4
1003773d:	mov    eax,edx
1003773f:	push   eax
10037740:	mov    BYTE PTR [ebp-0x4],0x3
10037744:	mov    ecx,DWORD PTR [ebp-0x24]
10037747:	push   0x22c06c
1003774c:	push   ecx
1003774d:	mov    DWORD PTR [ebp-0x18],esi
10037750:	call   DWORD PTR ds:0x10065260
10037756:	mov    esi,DWORD PTR [ebp-0x18]
10037759:	test   esi,esi
1003775b:	je     0x100377f8
10037761:	push   0x5c0b5fb7
10037766:	push   0x10072a3c
1003776b:	call   0x10003d63
10037770:	add    esp,0x8
10037773:	push   0x43cad2d2
10037778:	push   eax
10037779:	call   0x10003d63
1003777e:	add    esp,0x8
10037781:	push   0x1b884a78
10037786:	push   eax
10037787:	call   0x10003d63
1003778c:	add    esp,0x8
1003778f:	push   0x64ca6281
10037794:	push   eax
10037795:	call   0x10003d63
1003779a:	add    esp,0x8
1003779d:	push   0x42004a26
100377a2:	push   eax
100377a3:	call   0x10003d63
100377a8:	add    esp,0x8
100377ab:	push   0x27a1fea4
100377b0:	push   eax
100377b1:	call   0x10003d63
100377b6:	add    esp,0x8
100377b9:	push   0x7c517436
100377be:	push   eax
100377bf:	call   0x10003d63
100377c4:	add    esp,0x8
100377c7:	push   eax
100377c8:	push   0x2
100377ca:	push   0x10072a74
100377cf:	call   0x10003d75
100377d4:	add    esp,0xc
100377d7:	push   esi
100377d8:	push   eax
100377d9:	lea    edi,[ebp-0x1c]
100377dc:	call   0x10037a20
100377e1:	mov    eax,DWORD PTR [ebp-0x1c]
100377e4:	mov    ecx,DWORD PTR [eax-0xc]
100377e7:	add    esp,0x8
100377ea:	push   ecx
100377eb:	push   eax
100377ec:	lea    edx,[ebp-0x14]
100377ef:	push   edx
100377f0:	call   0x10034480
100377f5:	mov    edi,DWORD PTR [ebp-0x14]
100377f8:	mov    ebx,DWORD PTR [edi-0xc]
100377fb:	mov    eax,DWORD PTR [edi-0x8]
100377fe:	mov    ecx,0x1
10037803:	sub    ecx,DWORD PTR [edi-0x4]
10037806:	lea    esi,[ebx+0x1]
10037809:	sub    eax,esi
1003780b:	or     eax,ecx
1003780d:	jge    0x1003781c
1003780f:	mov    ecx,esi
10037811:	lea    eax,[ebp-0x14]
10037814:	call   0x100343c0
10037819:	mov    edi,DWORD PTR [ebp-0x14]
1003781c:	test   esi,esi
1003781e:	mov    BYTE PTR [ebx+edi*1],0x2c
10037822:	jl     0x1003785f
10037824:	cmp    esi,DWORD PTR [edi-0x8]
10037827:	jg     0x1003785f
10037829:	mov    BYTE PTR [ebp-0x4],0x2
1003782d:	mov    eax,DWORD PTR [ebp-0x1c]
10037830:	add    eax,0xfffffff0
10037833:	mov    DWORD PTR [edi-0xc],esi
10037836:	mov    BYTE PTR [esi+edi*1],0x0
1003783a:	lea    ecx,[eax+0xc]
1003783d:	or     edx,0xffffffff
10037840:	lock xadd DWORD PTR [ecx],edx
10037844:	dec    edx
10037845:	test   edx,edx
10037847:	jg     0x10037853
10037849:	mov    ecx,DWORD PTR [eax]
1003784b:	mov    edx,DWORD PTR [ecx]
1003784d:	push   eax
1003784e:	mov    eax,DWORD PTR [edx+0x4]
10037851:	call   eax
10037853:	add    DWORD PTR [ebp-0x20],0x1
10037857:	mov    esi,DWORD PTR [ebp-0x20]
1003785a:	jmp    0x10037710
1003785f:	push   0x80070057
10037864:	call   0x10001f41
10037869:	lea    edi,[ebp-0x14]
1003786c:	call   0x100379a0
10037871:	mov    ecx,DWORD PTR [ebp-0x24]
10037874:	push   ecx
10037875:	call   DWORD PTR ds:0x10065070
1003787b:	mov    DWORD PTR [ebp-0x4],0x0
10037882:	mov    eax,DWORD PTR [ebp-0x14]
10037885:	cmp    DWORD PTR [eax-0x4],0x1
10037889:	jle    0x1003789b
1003788b:	mov    edx,DWORD PTR [eax-0xc]
1003788e:	push   edx
1003788f:	lea    eax,[ebp-0x14]
10037892:	push   eax
10037893:	call   0x10034240
10037898:	mov    eax,DWORD PTR [ebp-0x14]
1003789b:	mov    esi,DWORD PTR [ebp+0x8]
1003789e:	mov    DWORD PTR [esi+0x18],0xf
100378a5:	mov    DWORD PTR [esi+0x14],0x0
100378ac:	lea    edi,[esi+0x4]
100378af:	push   eax
100378b0:	mov    BYTE PTR [edi],0x0
100378b3:	call   0x10041f10
100378b8:	mov    ebx,eax
100378ba:	mov    eax,DWORD PTR [esi+0x18]
100378bd:	add    esp,0x4
100378c0:	cmp    eax,0x10
100378c3:	jb     0x100378cf
100378c5:	mov    ecx,DWORD PTR [edi]
100378c7:	jmp    0x100378d1
100378c9:	mov    eax,0x10037882
100378ce:	ret    
100378cf:	mov    ecx,edi
100378d1:	cmp    DWORD PTR [ebp-0x14],ecx
100378d4:	jb     0x10037902
100378d6:	cmp    eax,0x10
100378d9:	jb     0x100378df
100378db:	mov    ecx,DWORD PTR [edi]
100378dd:	jmp    0x100378e1
100378df:	mov    ecx,edi
100378e1:	mov    edx,DWORD PTR [esi+0x14]
100378e4:	add    edx,ecx
100378e6:	mov    ecx,DWORD PTR [ebp-0x14]
100378e9:	cmp    edx,ecx
100378eb:	jbe    0x10037902
100378ed:	cmp    eax,0x10
100378f0:	jb     0x100378f4
100378f2:	mov    edi,DWORD PTR [edi]
100378f4:	push   ebx
100378f5:	sub    ecx,edi
100378f7:	push   ecx
100378f8:	push   esi
100378f9:	mov    ecx,esi
100378fb:	call   0x1000124a
10037900:	jmp    0x10037962
10037902:	cmp    ebx,0xfffffffe
10037905:	jbe    0x1003790c
10037907:	call   0x1005600a
1003790c:	mov    eax,DWORD PTR [esi+0x18]
1003790f:	cmp    eax,ebx
10037911:	jae    0x1003792f
10037913:	mov    eax,DWORD PTR [esi+0x14]
10037916:	push   eax
10037917:	push   ebx
10037918:	mov    ecx,esi
1003791a:	call   0x10001509
1003791f:	test   ebx,ebx
10037921:	jbe    0x10037962
10037923:	mov    ecx,DWORD PTR [esi+0x18]
10037926:	cmp    ecx,0x10
10037929:	jb     0x10037942
1003792b:	mov    eax,DWORD PTR [edi]
1003792d:	jmp    0x10037944
1003792f:	test   ebx,ebx
10037931:	jne    0x10037921
10037933:	cmp    eax,0x10
10037936:	mov    DWORD PTR [esi+0x14],ebx
10037939:	jb     0x1003793d
1003793b:	mov    edi,DWORD PTR [edi]
1003793d:	mov    BYTE PTR [edi],0x0
10037940:	jmp    0x10037962
10037942:	mov    eax,edi
10037944:	mov    edx,DWORD PTR [ebp-0x14]
10037947:	push   ebx
10037948:	push   edx
10037949:	push   ecx
1003794a:	push   eax
1003794b:	call   0x100422c5
10037950:	add    esp,0x10
10037953:	cmp    DWORD PTR [esi+0x18],0x10
10037957:	mov    DWORD PTR [esi+0x14],ebx
1003795a:	jb     0x1003795e
1003795c:	mov    edi,DWORD PTR [edi]
1003795e:	mov    BYTE PTR [edi+ebx*1],0x0
10037962:	mov    DWORD PTR [ebp-0x4],0xffffffff
10037969:	mov    eax,DWORD PTR [ebp-0x14]
1003796c:	add    eax,0xfffffff0
1003796f:	lea    ecx,[eax+0xc]
10037972:	or     edx,0xffffffff
10037975:	lock xadd DWORD PTR [ecx],edx
10037979:	dec    edx
1003797a:	test   edx,edx
1003797c:	jg     0x10037988
1003797e:	mov    ecx,DWORD PTR [eax]
10037980:	mov    edx,DWORD PTR [ecx]
10037982:	push   eax
10037983:	mov    eax,DWORD PTR [edx+0x4]
10037986:	call   eax
10037988:	mov    eax,esi
1003798a:	mov    ecx,DWORD PTR [ebp-0xc]
1003798d:	mov    DWORD PTR fs:0x0,ecx
10037994:	pop    ecx
10037995:	pop    edi
10037996:	pop    esi
10037997:	pop    ebx
10037998:	mov    esp,ebp
1003799a:	pop    ebp
1003799b:	ret    
1003799c:	int3   
1003799d:	int3   
1003799e:	int3   
1003799f:	int3   
100379a0:	mov    eax,DWORD PTR [edi]
100379a2:	mov    cl,BYTE PTR [eax]
100379a4:	push   esi
100379a5:	xor    esi,esi
100379a7:	test   cl,cl
100379a9:	je     0x10037a04
100379ab:	jmp    0x100379b0
100379ad:	lea    ecx,[ecx+0x0]
100379b0:	cmp    cl,0x2c
100379b3:	jne    0x100379bd
100379b5:	test   esi,esi
100379b7:	jne    0x100379bf
100379b9:	mov    esi,eax
100379bb:	jmp    0x100379bf
100379bd:	xor    esi,esi
100379bf:	push   eax
100379c0:	call   0x10057f0a
100379c5:	mov    cl,BYTE PTR [eax]
100379c7:	add    esp,0x4
100379ca:	test   cl,cl
100379cc:	jne    0x100379b0
100379ce:	test   esi,esi
100379d0:	je     0x10037a04
100379d2:	mov    eax,DWORD PTR [edi]
100379d4:	mov    edx,DWORD PTR [eax-0x8]
100379d7:	sub    esi,eax
100379d9:	mov    ecx,0x1
100379de:	sub    ecx,DWORD PTR [eax-0x4]
100379e1:	sub    edx,esi
100379e3:	or     ecx,edx
100379e5:	jge    0x100379f0
100379e7:	mov    ecx,esi
100379e9:	mov    eax,edi
100379eb:	call   0x100343c0
100379f0:	test   esi,esi
100379f2:	jl     0x10037a08
100379f4:	mov    eax,DWORD PTR [edi]
100379f6:	cmp    esi,DWORD PTR [eax-0x8]
100379f9:	jg     0x10037a08
100379fb:	mov    DWORD PTR [eax-0xc],esi
100379fe:	mov    eax,DWORD PTR [edi]
10037a00:	mov    BYTE PTR [esi+eax*1],0x0
10037a04:	mov    eax,edi
10037a06:	pop    esi
10037a07:	ret    
10037a08:	push   0x80070057
10037a0d:	call   0x10001f41
10037a12:	int3   
10037a13:	int3   
10037a14:	int3   
10037a15:	int3   
10037a16:	int3   
10037a17:	int3   
10037a18:	int3   
10037a19:	int3   
10037a1a:	int3   
10037a1b:	int3   
10037a1c:	int3   
10037a1d:	int3   
10037a1e:	int3   
10037a1f:	int3   
10037a20:	push   ebx
10037a21:	mov    ebx,DWORD PTR [esp+0x8]
10037a25:	lea    eax,[esp+0xc]
10037a29:	push   eax
10037a2a:	call   0x10037a40
10037a2f:	pop    ebx
10037a30:	ret    
10037a31:	int3   
10037a32:	int3   
10037a33:	int3   
10037a34:	int3   
10037a35:	int3   
10037a36:	int3   
10037a37:	int3   
10037a38:	int3   
10037a39:	int3   
10037a3a:	int3   
10037a3b:	int3   
10037a3c:	int3   
10037a3d:	int3   
10037a3e:	int3   
10037a3f:	int3   
10037a40:	test   ebx,ebx
10037a42:	push   ebp
10037a43:	mov    ebp,DWORD PTR [esp+0x8]
10037a47:	jne    0x10037a53
10037a49:	push   0x80070057
10037a4e:	call   0x10001f41
10037a53:	push   esi
10037a54:	push   ebp
10037a55:	push   ebx
10037a56:	call   0x10057f4b
10037a5b:	mov    esi,eax
10037a5d:	mov    eax,DWORD PTR [edi]
10037a5f:	mov    edx,DWORD PTR [eax-0x8]
10037a62:	sub    eax,0x10
10037a65:	mov    ecx,0x1
10037a6a:	sub    ecx,DWORD PTR [eax+0xc]
10037a6d:	sub    edx,esi
10037a6f:	add    esp,0x8
10037a72:	or     ecx,edx
10037a74:	jge    0x10037a7f
10037a76:	mov    ecx,esi
10037a78:	mov    eax,edi
10037a7a:	call   0x100343c0
10037a7f:	mov    ecx,DWORD PTR [edi]
10037a81:	push   ebp
10037a82:	push   ebx
10037a83:	lea    eax,[esi+0x1]
10037a86:	push   eax
10037a87:	push   ecx
10037a88:	call   0x10057eef
10037a8d:	add    esp,0x10
10037a90:	test   esi,esi
10037a92:	jl     0x10037aa9
10037a94:	mov    eax,DWORD PTR [edi]
10037a96:	cmp    esi,DWORD PTR [eax-0x8]
10037a99:	jg     0x10037aa9
10037a9b:	mov    DWORD PTR [eax-0xc],esi
10037a9e:	mov    edx,DWORD PTR [edi]
10037aa0:	mov    BYTE PTR [esi+edx*1],0x0
10037aa4:	pop    esi
10037aa5:	pop    ebp
10037aa6:	ret    0x4
10037aa9:	push   0x80070057
10037aae:	call   0x10001f41
10037ab3:	int3   
10037ab4:	int3   
10037ab5:	int3   
10037ab6:	int3   
10037ab7:	int3   
10037ab8:	int3   
10037ab9:	int3   
10037aba:	int3   
10037abb:	int3   
10037abc:	int3   
10037abd:	int3   
10037abe:	int3   
10037abf:	int3   
10037ac0:	push   ecx
10037ac1:	mov    eax,DWORD PTR [edi]
10037ac3:	lea    ecx,[esp]
10037ac6:	push   ecx
10037ac7:	mov    ecx,DWORD PTR [esp+0xc]
10037acb:	push   esi
10037acc:	add    eax,eax
10037ace:	lea    edx,[esp+0x14]
10037ad2:	push   edx
10037ad3:	mov    DWORD PTR [esp+0xc],eax
10037ad7:	mov    eax,DWORD PTR [esp+0x18]
10037adb:	push   0x0
10037add:	mov    DWORD PTR [edi],0x0
10037ae3:	mov    edx,DWORD PTR [ecx]
10037ae5:	push   eax
10037ae6:	push   edx
10037ae7:	call   DWORD PTR ds:0x10065000
10037aed:	test   eax,eax
10037aef:	jne    0x10037b2e
10037af1:	mov    eax,DWORD PTR [esp+0xc]
10037af5:	cmp    eax,0x1
10037af8:	je     0x10037aff
10037afa:	cmp    eax,0x2
10037afd:	jne    0x10037b1a
10037aff:	test   esi,esi
10037b01:	mov    eax,DWORD PTR [esp]
10037b04:	je     0x10037b28
10037b06:	test   eax,eax
10037b08:	je     0x10037b23
10037b0a:	test   al,0x1
10037b0c:	jne    0x10037b1a
10037b0e:	mov    ecx,eax
10037b10:	shr    ecx,1
10037b12:	cmp    WORD PTR [esi+ecx*2-0x2],0x0
10037b18:	je     0x10037b28
10037b1a:	mov    eax,0xd
10037b1f:	pop    ecx
10037b20:	ret    0x8
10037b23:	mov    WORD PTR [esi],0x0
10037b28:	shr    eax,1
10037b2a:	mov    DWORD PTR [edi],eax
10037b2c:	xor    eax,eax
10037b2e:	pop    ecx
10037b2f:	ret    0x8
10037b32:	int3   
10037b33:	int3   
10037b34:	int3   
10037b35:	int3   
10037b36:	int3   
10037b37:	int3   
10037b38:	int3   
10037b39:	int3   
10037b3a:	int3   
10037b3b:	int3   
10037b3c:	int3   
10037b3d:	int3   
10037b3e:	int3   
10037b3f:	int3   
10037b40:	push   0xffffffff
10037b42:	push   0x10060170
10037b47:	mov    eax,fs:0x0
10037b4d:	push   eax
10037b4e:	sub    esp,0x34
10037b51:	push   ebx
10037b52:	push   ebp
10037b53:	push   esi
10037b54:	push   edi
10037b55:	mov    eax,ds:0x1007d030
10037b5a:	xor    eax,esp
10037b5c:	push   eax
10037b5d:	lea    eax,[esp+0x48]
10037b61:	mov    fs:0x0,eax
10037b67:	mov    ebp,DWORD PTR [esp+0x58]
10037b6b:	xor    esi,esi
10037b6d:	mov    DWORD PTR [esp+0x38],esi
10037b71:	mov    DWORD PTR [esp+0x24],esi
10037b75:	push   0xf3d38da
10037b7a:	push   0x10072a78
10037b7f:	mov    DWORD PTR [esp+0x58],esi
10037b83:	call   0x10003d63
10037b88:	push   0x3c0f0322
10037b8d:	push   eax
10037b8e:	call   0x10003d63
10037b93:	push   eax
10037b94:	push   0x3d
10037b96:	push   0x10072aa0
10037b9b:	call   0x10003f5b
10037ba0:	add    esp,0x1c
10037ba3:	lea    ecx,[esp+0x1c]
10037ba7:	push   ecx
10037ba8:	push   0x20019
10037bad:	push   esi
10037bae:	push   eax
10037baf:	push   0x80000002
10037bb4:	mov    DWORD PTR [esp+0x30],esi
10037bb8:	call   DWORD PTR ds:0x10065014
10037bbe:	cmp    eax,esi
10037bc0:	jne    0x10037fef
10037bc6:	mov    edx,DWORD PTR [esp+0x1c]
10037bca:	mov    DWORD PTR [esp+0x24],edx
10037bce:	mov    DWORD PTR [esp+0x20],0x1
10037bd6:	jmp    0x10037be0
10037bd8:	lea    esp,[esp+0x0]
10037bdf:	nop
10037be0:	mov    eax,ds:0x1007fa54
10037be5:	mov    edx,DWORD PTR [eax+0xc]
10037be8:	mov    ecx,0x1007fa54
10037bed:	call   edx
10037bef:	add    eax,0x10
10037bf2:	mov    DWORD PTR [esp+0x14],eax
10037bf6:	mov    BYTE PTR [esp+0x50],0x1
10037bfb:	mov    eax,ds:0x1007fa54
10037c00:	mov    edx,DWORD PTR [eax+0xc]
10037c03:	mov    ecx,0x1007fa54
10037c08:	call   edx
10037c0a:	lea    ebx,[eax+0x10]
10037c0d:	mov    DWORD PTR [esp+0x28],ebx
10037c11:	mov    eax,DWORD PTR [esp+0x20]
10037c15:	push   eax
10037c16:	push   0x5613ed5a
10037c1b:	push   0xee8abb3
10037c20:	push   0x5b24233c
10037c25:	push   0x7e01fb61
10037c2a:	push   0x687f1748
10037c2f:	push   0x310ae464
10037c34:	push   0x10072b1c
10037c39:	mov    BYTE PTR [esp+0x70],0x2
10037c3e:	call   0x10003d63
10037c43:	add    esp,0x8
10037c46:	push   eax
10037c47:	call   0x10003d63
10037c4c:	add    esp,0x8
10037c4f:	push   eax
10037c50:	call   0x10003d63
10037c55:	add    esp,0x8
10037c58:	push   eax
10037c59:	call   0x10003d63
10037c5e:	add    esp,0x8
10037c61:	push   eax
10037c62:	call   0x10003d63
10037c67:	add    esp,0x8
10037c6a:	push   eax
10037c6b:	call   0x10003d63
10037c70:	push   eax
10037c71:	push   0x12
10037c73:	push   0x10072b4c
10037c78:	call   0x10003f5b
10037c7d:	add    esp,0x14
10037c80:	push   eax
10037c81:	lea    edi,[esp+0x1c]
10037c85:	call   0x100381e0
10037c8a:	mov    edi,DWORD PTR [esp+0x1c]
10037c8e:	mov    eax,DWORD PTR [esp+0x24]
10037c92:	add    esp,0x8
10037c95:	lea    ecx,[esp+0x18]
10037c99:	push   ecx
10037c9a:	push   esi
10037c9b:	lea    edx,[esp+0x38]
10037c9f:	push   edx
10037ca0:	push   esi
10037ca1:	push   edi
10037ca2:	push   eax
10037ca3:	mov    DWORD PTR [esp+0x30],0x2
10037cab:	call   DWORD PTR ds:0x10065000
10037cb1:	cmp    eax,esi
10037cb3:	jne    0x10037fad
10037cb9:	mov    eax,DWORD PTR [esp+0x30]
10037cbd:	cmp    eax,0x1
10037cc0:	je     0x10037ccb
10037cc2:	cmp    eax,0x2
10037cc5:	jne    0x10037fad
10037ccb:	mov    eax,DWORD PTR [esp+0x18]
10037ccf:	shr    eax,1
10037cd1:	je     0x10037fad
10037cd7:	mov    ecx,DWORD PTR [ebx-0x8]
10037cda:	add    eax,0x1
10037cdd:	mov    edx,0x1
10037ce2:	sub    edx,DWORD PTR [ebx-0x4]
10037ce5:	sub    ecx,eax
10037ce7:	or     ecx,edx
10037ce9:	mov    DWORD PTR [esp+0x2c],eax
10037ced:	jge    0x10037cfc
10037cef:	lea    ecx,[esp+0x28]
10037cf3:	call   0x10002267
10037cf8:	mov    ebx,DWORD PTR [esp+0x28]
10037cfc:	mov    ebp,DWORD PTR [esp+0x14]
10037d00:	push   ebp
10037d01:	lea    ecx,[esp+0x28]
10037d05:	push   ecx
10037d06:	lea    edi,[esp+0x34]
10037d0a:	mov    esi,ebx
10037d0c:	call   0x10037ac0
10037d11:	test   eax,eax
10037d13:	je     0x10037d43
10037d15:	add    ebx,0xfffffff0
10037d18:	mov    BYTE PTR [esp+0x50],0x1
10037d1d:	lea    edx,[ebx+0xc]
10037d20:	or     eax,0xffffffff
10037d23:	lock xadd DWORD PTR [edx],eax
10037d27:	dec    eax
10037d28:	test   eax,eax
10037d2a:	jg     0x10037d36
10037d2c:	mov    ecx,DWORD PTR [ebx]
10037d2e:	mov    edx,DWORD PTR [ecx]
10037d30:	mov    eax,DWORD PTR [edx+0x4]
10037d33:	push   ebx
10037d34:	call   eax
10037d36:	mov    BYTE PTR [esp+0x50],0x0
10037d3b:	lea    eax,[ebp-0x10]
10037d3e:	jmp    0x10037f84
10037d43:	mov    edx,DWORD PTR ds:0x1007fa54
10037d49:	mov    eax,DWORD PTR [edx+0xc]
10037d4c:	mov    ecx,0x1007fa54
10037d51:	call   eax
10037d53:	lea    edi,[eax+0x10]
10037d56:	mov    DWORD PTR [esp+0x18],edi
10037d5a:	mov    BYTE PTR [esp+0x50],0x3
10037d5f:	mov    eax,DWORD PTR [edi-0x8]
10037d62:	mov    ecx,0x1
10037d67:	sub    ecx,DWORD PTR [edi-0x4]
10037d6a:	sub    eax,0x1
10037d6d:	or     eax,ecx
10037d6f:	jge    0x10037d83
10037d71:	mov    eax,0x1
10037d76:	lea    ecx,[esp+0x18]
10037d7a:	call   0x10002267
10037d7f:	mov    edi,DWORD PTR [esp+0x18]
10037d83:	mov    ebp,DWORD PTR ds:0x1006526c
10037d89:	lea    ecx,[esp+0x34]
10037d8d:	push   ecx
10037d8e:	push   edi
10037d8f:	push   0x0
10037d91:	push   0x0
10037d93:	push   ebx
10037d94:	push   0x0
10037d96:	call   ebp
10037d98:	mov    esi,eax
10037d9a:	mov    eax,DWORD PTR [edi-0x8]
10037d9d:	add    esi,0x1
10037da0:	mov    ecx,0x1
10037da5:	sub    ecx,DWORD PTR [edi-0x4]
10037da8:	sub    eax,esi
10037daa:	or     eax,ecx
10037dac:	jge    0x10037dbd
10037dae:	mov    eax,esi
10037db0:	lea    ecx,[esp+0x18]
10037db4:	call   0x10002267
10037db9:	mov    edi,DWORD PTR [esp+0x18]
10037dbd:	lea    edx,[esp+0x34]
10037dc1:	push   edx
10037dc2:	push   edi
10037dc3:	push   esi
10037dc4:	push   0x0
10037dc6:	push   ebx
10037dc7:	push   0x0
10037dc9:	call   ebp
10037dcb:	cmp    eax,esi
10037dcd:	jbe    0x10037e1a
10037dcf:	add    edi,0xfffffff0
10037dd2:	mov    BYTE PTR [esp+0x50],0x2
10037dd7:	lea    eax,[edi+0xc]
10037dda:	or     ecx,0xffffffff
10037ddd:	lock xadd DWORD PTR [eax],ecx
10037de1:	dec    ecx
10037de2:	test   ecx,ecx
10037de4:	jg     0x10037df0
10037de6:	mov    ecx,DWORD PTR [edi]
10037de8:	mov    edx,DWORD PTR [ecx]
10037dea:	mov    eax,DWORD PTR [edx+0x4]
10037ded:	push   edi
10037dee:	call   eax
10037df0:	add    ebx,0xfffffff0
10037df3:	mov    BYTE PTR [esp+0x50],0x1
10037df8:	lea    ecx,[ebx+0xc]
10037dfb:	or     edx,0xffffffff
10037dfe:	lock xadd DWORD PTR [ecx],edx
10037e02:	dec    edx
10037e03:	test   edx,edx
10037e05:	jg     0x10037f78
10037e0b:	mov    ecx,DWORD PTR [ebx]
10037e0d:	mov    eax,DWORD PTR [ecx]
10037e0f:	mov    edx,DWORD PTR [eax+0x4]
10037e12:	push   ebx
10037e13:	call   edx
10037e15:	jmp    0x10037f78
10037e1a:	test   edi,edi
10037e1c:	jne    0x10037e22
10037e1e:	xor    eax,eax
10037e20:	jmp    0x10037e33
10037e22:	push   edi
10037e23:	call   0x100425f3
10037e28:	add    esp,0x4
10037e2b:	test   eax,eax
10037e2d:	jl     0x10038175
10037e33:	cmp    eax,DWORD PTR [edi-0x8]
10037e36:	jg     0x10038175
10037e3c:	xor    ebp,ebp
10037e3e:	mov    DWORD PTR [edi-0xc],eax
10037e41:	mov    WORD PTR [edi+eax*2],0x0
10037e47:	mov    DWORD PTR [esp+0x2c],ebp
10037e4b:	push   ebp
10037e4c:	push   0x80
10037e51:	push   0x3
10037e53:	push   ebp
10037e54:	push   0x3
10037e56:	push   0x80000000
10037e5b:	push   edi
10037e5c:	mov    BYTE PTR [esp+0x6c],0x4
10037e61:	call   DWORD PTR ds:0x100650bc
10037e67:	cmp    eax,0xffffffff
10037e6a:	jne    0x10037ebc
10037e6c:	call   0x10006125
10037e71:	test   eax,eax
10037e73:	jl     0x10037f36
10037e79:	lea    ecx,[esp+0x44]
10037e7d:	push   ecx
10037e7e:	push   ebp
10037e7f:	call   DWORD PTR ds:0x10065268
10037e85:	cmp    eax,0xffffffff
10037e88:	mov    DWORD PTR [esp+0x40],eax
10037e8c:	jne    0x10037ec8
10037e8e:	call   0x10006125
10037e93:	test   eax,eax
10037e95:	jge    0x10037ec4
10037e97:	test   ebp,ebp
10037e99:	je     0x10037ea2
10037e9b:	push   ebp
10037e9c:	call   DWORD PTR ds:0x10065070
10037ea2:	add    edi,0xfffffff0
10037ea5:	mov    BYTE PTR [esp+0x50],0x2
10037eaa:	lea    edx,[edi+0xc]
10037ead:	or     eax,0xffffffff
10037eb0:	lock xadd DWORD PTR [edx],eax
10037eb4:	dec    eax
10037eb5:	test   eax,eax
10037eb7:	jmp    0x10037de4
10037ebc:	mov    ebp,eax
10037ebe:	mov    DWORD PTR [esp+0x2c],ebp
10037ec2:	jmp    0x10037e79
10037ec4:	mov    eax,DWORD PTR [esp+0x40]
10037ec8:	cmp    eax,0x4c00
10037ecd:	jne    0x10037f2b
10037ecf:	cmp    DWORD PTR [esp+0x44],0x0
10037ed4:	jne    0x10037f2b
10037ed6:	test   ebp,ebp
10037ed8:	je     0x10037ee7
10037eda:	push   ebp
10037edb:	call   DWORD PTR ds:0x10065070
10037ee1:	xor    ebp,ebp
10037ee3:	mov    DWORD PTR [esp+0x2c],ebp
10037ee7:	cmp    DWORD PTR [edi-0x4],0x1
10037eeb:	jle    0x10037eff
10037eed:	mov    ecx,DWORD PTR [edi-0xc]
10037ef0:	push   ecx
10037ef1:	lea    edx,[esp+0x1c]
10037ef5:	push   edx
10037ef6:	call   0x100022b0
10037efb:	mov    edi,DWORD PTR [esp+0x18]
10037eff:	lea    eax,[esp+0x38]
10037f03:	push   eax
10037f04:	lea    ecx,[esp+0x40]
10037f08:	push   ecx
10037f09:	push   edi
10037f0a:	call   DWORD PTR ds:0x100653fc
10037f10:	test   eax,eax
10037f12:	jne    0x10037e97
10037f14:	lea    esi,[esp+0x18]
10037f18:	call   0x10003cac
10037f1d:	cmp    DWORD PTR [esp+0x38],0x6673
10037f25:	je     0x1003803e
10037f2b:	test   ebp,ebp
10037f2d:	je     0x10037f36
10037f2f:	push   ebp
10037f30:	call   DWORD PTR ds:0x10065070
10037f36:	add    edi,0xfffffff0
10037f39:	mov    BYTE PTR [esp+0x50],0x2
10037f3e:	lea    ecx,[edi+0xc]
10037f41:	or     edx,0xffffffff
10037f44:	lock xadd DWORD PTR [ecx],edx
10037f48:	dec    edx
10037f49:	test   edx,edx
10037f4b:	jg     0x10037f57
10037f4d:	mov    ecx,DWORD PTR [edi]
10037f4f:	mov    eax,DWORD PTR [ecx]
10037f51:	mov    edx,DWORD PTR [eax+0x4]
10037f54:	push   edi
10037f55:	call   edx
10037f57:	add    ebx,0xfffffff0
10037f5a:	mov    BYTE PTR [esp+0x50],0x1
10037f5f:	lea    eax,[ebx+0xc]
10037f62:	or     ecx,0xffffffff
10037f65:	lock xadd DWORD PTR [eax],ecx
10037f69:	dec    ecx
10037f6a:	test   ecx,ecx
10037f6c:	jg     0x10037f78
10037f6e:	mov    ecx,DWORD PTR [ebx]
10037f70:	mov    edx,DWORD PTR [ecx]
10037f72:	mov    eax,DWORD PTR [edx+0x4]
10037f75:	push   ebx
10037f76:	call   eax
10037f78:	mov    BYTE PTR [esp+0x50],0x0
10037f7d:	mov    eax,DWORD PTR [esp+0x14]
10037f81:	add    eax,0xfffffff0
10037f84:	lea    ecx,[eax+0xc]
10037f87:	or     edx,0xffffffff
10037f8a:	lock xadd DWORD PTR [ecx],edx
10037f8e:	dec    edx
10037f8f:	test   edx,edx
10037f91:	jg     0x10037f9d
10037f93:	mov    ecx,DWORD PTR [eax]
10037f95:	mov    edx,DWORD PTR [ecx]
10037f97:	push   eax
10037f98:	mov    eax,DWORD PTR [edx+0x4]
10037f9b:	call   eax
10037f9d:	add    DWORD PTR [esp+0x20],0x1
10037fa2:	mov    ebp,DWORD PTR [esp+0x58]
10037fa6:	xor    esi,esi
10037fa8:	jmp    0x10037be0
10037fad:	add    ebx,0xfffffff0
10037fb0:	or     edx,0xffffffff
10037fb3:	lea    ecx,[ebx+0xc]
10037fb6:	mov    BYTE PTR [esp+0x50],0x1
10037fbb:	lock xadd DWORD PTR [ecx],edx
10037fbf:	dec    edx
10037fc0:	test   edx,edx
10037fc2:	jg     0x10037fce
10037fc4:	mov    ecx,DWORD PTR [ebx]
10037fc6:	mov    eax,DWORD PTR [ecx]
10037fc8:	mov    edx,DWORD PTR [eax+0x4]
10037fcb:	push   ebx
10037fcc:	call   edx
10037fce:	lea    eax,[edi-0x10]
10037fd1:	mov    BYTE PTR [esp+0x50],0x0
10037fd6:	lea    ecx,[eax+0xc]
10037fd9:	or     edx,0xffffffff
10037fdc:	lock xadd DWORD PTR [ecx],edx
10037fe0:	dec    edx
10037fe1:	test   edx,edx
10037fe3:	jg     0x10037fef
10037fe5:	mov    ecx,DWORD PTR [eax]
10037fe7:	mov    edx,DWORD PTR [ecx]
10037fe9:	push   eax
10037fea:	mov    eax,DWORD PTR [edx+0x4]
10037fed:	call   eax
10037fef:	mov    edx,DWORD PTR ds:0x1007fa54
10037ff5:	mov    eax,DWORD PTR [edx+0xc]
10037ff8:	mov    ecx,0x1007fa54
10037ffd:	call   eax
10037fff:	add    eax,0x10
10038002:	mov    DWORD PTR [ebp+0x0],eax
10038005:	mov    ecx,0x1006bb18
1003800a:	test   ecx,0xffff0000
10038010:	mov    BYTE PTR [esp+0x50],0x5
10038015:	jne    0x100380e5
1003801b:	mov    edx,ecx
1003801d:	movzx  esi,dx
10038020:	push   esi
10038021:	call   0x10002019
10038026:	add    esp,0x4
10038029:	test   eax,eax
1003802b:	je     0x100381b5
10038031:	push   esi
10038032:	push   eax
10038033:	push   ebp
10038034:	call   0x100021e1
10038039:	jmp    0x100381b5
1003803e:	add    edi,0xfffffff0
10038041:	mov    eax,edi
10038043:	call   0x1000475e
10038048:	mov    esi,DWORD PTR [esp+0x58]
1003804c:	add    eax,0x10
1003804f:	test   ebp,ebp
10038051:	mov    DWORD PTR [esi],eax
10038053:	je     0x1003805c
10038055:	push   ebp
10038056:	call   DWORD PTR ds:0x10065070
1003805c:	mov    BYTE PTR [esp+0x50],0x2
10038061:	lea    ecx,[edi+0xc]
10038064:	or     edx,0xffffffff
10038067:	lock xadd DWORD PTR [ecx],edx
1003806b:	dec    edx
1003806c:	test   edx,edx
1003806e:	jg     0x1003807a
10038070:	mov    ecx,DWORD PTR [edi]
10038072:	mov    eax,DWORD PTR [ecx]
10038074:	mov    edx,DWORD PTR [eax+0x4]
10038077:	push   edi
10038078:	call   edx
1003807a:	add    ebx,0xfffffff0
1003807d:	mov    BYTE PTR [esp+0x50],0x1
10038082:	lea    eax,[ebx+0xc]
10038085:	or     ecx,0xffffffff
10038088:	lock xadd DWORD PTR [eax],ecx
1003808c:	dec    ecx
1003808d:	test   ecx,ecx
1003808f:	jg     0x1003809b
10038091:	mov    ecx,DWORD PTR [ebx]
10038093:	mov    edx,DWORD PTR [ecx]
10038095:	mov    eax,DWORD PTR [edx+0x4]
10038098:	push   ebx
10038099:	call   eax
1003809b:	mov    BYTE PTR [esp+0x50],0x0
100380a0:	mov    eax,DWORD PTR [esp+0x14]
100380a4:	add    eax,0xfffffff0
100380a7:	lea    ecx,[eax+0xc]
100380aa:	or     edx,0xffffffff
100380ad:	lock xadd DWORD PTR [ecx],edx
100380b1:	dec    edx
100380b2:	test   edx,edx
100380b4:	jg     0x100380c0
100380b6:	mov    ecx,DWORD PTR [eax]
100380b8:	mov    edx,DWORD PTR [ecx]
100380ba:	push   eax
100380bb:	mov    eax,DWORD PTR [edx+0x4]
100380be:	call   eax
100380c0:	mov    eax,DWORD PTR [esp+0x1c]
100380c4:	test   eax,eax
100380c6:	je     0x100380cf
100380c8:	push   eax
100380c9:	call   DWORD PTR ds:0x1006501c
100380cf:	mov    eax,esi
100380d1:	mov    ecx,DWORD PTR [esp+0x48]
100380d5:	mov    DWORD PTR fs:0x0,ecx
100380dc:	pop    ecx
100380dd:	pop    edi
100380de:	pop    esi
100380df:	pop    ebp
100380e0:	pop    ebx
100380e1:	add    esp,0x40
100380e4:	ret    
100380e5:	call   DWORD PTR ds:0x1007dfe4
100380eb:	mov    edi,DWORD PTR ds:0x1006508c
100380f1:	push   0x0
100380f3:	push   0x0
100380f5:	push   0xffffffff
100380f7:	push   0x1006bb18
100380fc:	push   0x0
100380fe:	push   eax
100380ff:	call   edi
10038101:	mov    esi,eax
10038103:	sub    esi,0x1
10038106:	test   esi,esi
10038108:	jle    0x10038157
1003810a:	mov    eax,DWORD PTR [ebp+0x0]
1003810d:	mov    edx,DWORD PTR [eax-0x8]
10038110:	sub    eax,0x10
10038113:	mov    ecx,0x1
10038118:	sub    ecx,DWORD PTR [eax+0xc]
1003811b:	sub    edx,esi
1003811d:	or     ecx,edx
1003811f:	jge    0x1003812a
10038121:	mov    eax,esi
10038123:	mov    ecx,ebp
10038125:	call   0x10002267
1003812a:	mov    eax,DWORD PTR [ebp+0x0]
1003812d:	push   esi
1003812e:	push   eax
1003812f:	push   0xffffffff
10038131:	push   0x1006bb18
10038136:	push   0x0
10038138:	call   DWORD PTR ds:0x1007dfe4
1003813e:	push   eax
1003813f:	call   edi
10038141:	mov    eax,DWORD PTR [ebp+0x0]
10038144:	cmp    esi,DWORD PTR [eax-0x8]
10038147:	jg     0x10038175
10038149:	mov    DWORD PTR [eax-0xc],esi
1003814c:	mov    eax,DWORD PTR [ebp+0x0]
1003814f:	mov    WORD PTR [eax+esi*2],0x0
10038155:	jmp    0x100381b5
10038157:	mov    ecx,DWORD PTR [ebp+0x0]
1003815a:	cmp    DWORD PTR [ecx-0xc],0x0
1003815e:	mov    esi,DWORD PTR [ecx-0x10]
10038161:	lea    eax,[ecx-0x10]
10038164:	je     0x100381b5
10038166:	cmp    DWORD PTR [eax+0xc],0x0
1003816a:	lea    edx,[eax+0xc]
1003816d:	jge    0x10038190
1003816f:	cmp    DWORD PTR [ecx-0x8],0x0
10038173:	jge    0x1003817f
10038175:	push   0x80070057
1003817a:	call   0x10001f41
1003817f:	mov    DWORD PTR [ecx-0xc],0x0
10038186:	mov    ecx,DWORD PTR [ebp+0x0]
10038189:	mov    WORD PTR [ecx],0x0
1003818e:	jmp    0x100381b5
10038190:	or     ecx,0xffffffff
10038193:	lock xadd DWORD PTR [edx],ecx
10038197:	dec    ecx
10038198:	test   ecx,ecx
1003819a:	jg     0x100381a6
1003819c:	mov    ecx,DWORD PTR [eax]
1003819e:	mov    edx,DWORD PTR [ecx]
100381a0:	push   eax
100381a1:	mov    eax,DWORD PTR [edx+0x4]
100381a4:	call   eax
100381a6:	mov    edx,DWORD PTR [esi]
100381a8:	mov    eax,DWORD PTR [edx+0xc]
100381ab:	mov    ecx,esi
100381ad:	call   eax
100381af:	add    eax,0x10
100381b2:	mov    DWORD PTR [ebp+0x0],eax
100381b5:	mov    eax,DWORD PTR [esp+0x24]
100381b9:	test   eax,eax
100381bb:	je     0x100381c4
100381bd:	push   eax
100381be:	call   DWORD PTR ds:0x1006501c
100381c4:	mov    eax,ebp
100381c6:	mov    ecx,DWORD PTR [esp+0x48]
100381ca:	mov    DWORD PTR fs:0x0,ecx
100381d1:	pop    ecx
100381d2:	pop    edi
100381d3:	pop    esi
100381d4:	pop    ebp
100381d5:	pop    ebx
100381d6:	add    esp,0x40
100381d9:	ret    
100381da:	int3   
100381db:	int3   
100381dc:	int3   
100381dd:	int3   
100381de:	int3   
100381df:	int3   
100381e0:	push   ebx
100381e1:	mov    ebx,DWORD PTR [esp+0x8]
100381e5:	lea    eax,[esp+0xc]
100381e9:	push   eax
100381ea:	call   0x10038200
100381ef:	pop    ebx
100381f0:	ret    
100381f1:	int3   
100381f2:	int3   
100381f3:	int3   
100381f4:	int3   
100381f5:	int3   
100381f6:	int3   
100381f7:	int3   
100381f8:	int3   
100381f9:	int3   
100381fa:	int3   
100381fb:	int3   
100381fc:	int3   
100381fd:	int3   
100381fe:	int3   
100381ff:	int3   
10038200:	test   ebx,ebx
10038202:	push   ebp
10038203:	mov    ebp,DWORD PTR [esp+0x8]
10038207:	jne    0x10038213
10038209:	push   0x80070057
1003820e:	call   0x10001f41
10038213:	push   esi
10038214:	push   ebp
10038215:	push   ebx
10038216:	call   0x10049b9e
1003821b:	mov    esi,eax
1003821d:	mov    eax,DWORD PTR [edi]
1003821f:	mov    edx,DWORD PTR [eax-0x8]
10038222:	sub    eax,0x10
10038225:	mov    ecx,0x1
1003822a:	sub    ecx,DWORD PTR [eax+0xc]
1003822d:	sub    edx,esi
1003822f:	add    esp,0x8
10038232:	or     ecx,edx
10038234:	jge    0x1003823f
10038236:	mov    eax,esi
10038238:	mov    ecx,edi
1003823a:	call   0x10002267
1003823f:	mov    ecx,DWORD PTR [edi]
10038241:	push   ebp
10038242:	push   ebx
10038243:	lea    eax,[esi+0x1]
10038246:	push   eax
10038247:	push   ecx
10038248:	call   0x10049d33
1003824d:	add    esp,0x10
10038250:	test   esi,esi
10038252:	jl     0x1003826b
10038254:	mov    eax,DWORD PTR [edi]
10038256:	cmp    esi,DWORD PTR [eax-0x8]
10038259:	jg     0x1003826b
1003825b:	mov    DWORD PTR [eax-0xc],esi
1003825e:	mov    edx,DWORD PTR [edi]
10038260:	mov    WORD PTR [edx+esi*2],0x0
10038266:	pop    esi
10038267:	pop    ebp
10038268:	ret    0x4
1003826b:	push   0x80070057
10038270:	call   0x10001f41
10038275:	int3   
10038276:	int3   
10038277:	int3   
10038278:	int3   
10038279:	int3   
1003827a:	int3   
1003827b:	int3   
1003827c:	int3   
1003827d:	int3   
1003827e:	int3   
1003827f:	int3   
10038280:	sub    esp,0xc
10038283:	push   ebx
10038284:	push   ebp
10038285:	push   esi
10038286:	mov    esi,DWORD PTR [ecx]
10038288:	push   edi
10038289:	mov    edi,DWORD PTR [esp+0x20]
1003828d:	xor    ebx,ebx
1003828f:	cmp    edi,0x1
10038292:	jle    0x1003837e
10038298:	mov    eax,0x34
1003829d:	cdq    
1003829e:	idiv   edi
100382a0:	mov    esi,DWORD PTR [ecx+edi*4-0x4]
100382a4:	add    eax,0x6
100382a7:	test   eax,eax
100382a9:	jle    0x10038374
100382af:	nop
100382b0:	sub    eax,0x1
100382b3:	mov    DWORD PTR [esp+0x18],eax
100382b7:	sub    ebx,0x61c88647
100382bd:	mov    eax,ebx
100382bf:	shr    eax,0x2
100382c2:	and    eax,0x3
100382c5:	mov    DWORD PTR [esp+0x10],eax
100382c9:	lea    eax,[edi-0x1]
100382cc:	xor    edx,edx
100382ce:	test   eax,eax
100382d0:	mov    DWORD PTR [esp+0x14],ebx
100382d4:	jle    0x10038329
100382d6:	mov    edi,DWORD PTR [ecx+edx*4+0x4]
100382da:	mov    ebx,esi
100382dc:	shl    ebx,0x4
100382df:	mov    eax,edi
100382e1:	shr    eax,0x3
100382e4:	xor    eax,ebx
100382e6:	mov    ebx,esi
100382e8:	shr    ebx,0x5
100382eb:	lea    ebp,[edi*4+0x0]
100382f2:	xor    ebx,ebp
100382f4:	mov    ebp,DWORD PTR [esp+0x24]
100382f8:	add    eax,ebx
100382fa:	mov    ebx,edx
100382fc:	and    ebx,0x3
100382ff:	xor    ebx,DWORD PTR [esp+0x10]
10038303:	add    edx,0x1
10038306:	mov    ebx,DWORD PTR [ebp+ebx*4+0x0]
1003830a:	xor    ebx,esi
1003830c:	mov    esi,DWORD PTR [esp+0x14]
10038310:	xor    esi,edi
10038312:	mov    edi,DWORD PTR [esp+0x20]
10038316:	add    ebx,esi
10038318:	xor    eax,ebx
1003831a:	add    DWORD PTR [ecx+edx*4-0x4],eax
1003831e:	mov    esi,DWORD PTR [ecx+edx*4-0x4]
10038322:	lea    eax,[edi-0x1]
10038325:	cmp    edx,eax
10038327:	jl     0x100382d6
10038329:	mov    eax,DWORD PTR [ecx]
1003832b:	mov    ebp,eax
1003832d:	shr    ebp,0x3
10038330:	mov    ebx,esi
10038332:	shl    ebx,0x4
10038335:	xor    ebp,ebx
10038337:	add    eax,eax
10038339:	add    eax,eax
1003833b:	mov    ebx,esi
1003833d:	and    edx,0x3
10038340:	xor    edx,DWORD PTR [esp+0x10]
10038344:	shr    ebx,0x5
10038347:	xor    ebx,eax
10038349:	mov    eax,DWORD PTR [esp+0x24]
1003834d:	mov    edx,DWORD PTR [eax+edx*4]
10038350:	add    ebp,ebx
10038352:	mov    ebx,DWORD PTR [esp+0x14]
10038356:	mov    eax,ebx
10038358:	xor    eax,DWORD PTR [ecx]
1003835a:	xor    edx,esi
1003835c:	add    edx,eax
1003835e:	mov    eax,DWORD PTR [esp+0x18]
10038362:	xor    ebp,edx
10038364:	add    DWORD PTR [ecx+edi*4-0x4],ebp
10038368:	test   eax,eax
1003836a:	mov    esi,DWORD PTR [ecx+edi*4-0x4]
1003836e:	jg     0x100382b0
10038374:	pop    edi
10038375:	pop    esi
10038376:	pop    ebp
10038377:	xor    eax,eax
10038379:	pop    ebx
1003837a:	add    esp,0xc
1003837d:	ret    
1003837e:	cmp    edi,0xffffffff
10038381:	jge    0x1003846e
10038387:	mov    eax,0x34
1003838c:	cdq    
1003838d:	neg    edi
1003838f:	idiv   edi
10038391:	mov    DWORD PTR [esp+0x20],edi
10038395:	add    eax,0x6
10038398:	imul   eax,eax,0x9e3779b9
1003839e:	test   eax,eax
100383a0:	mov    DWORD PTR [esp+0x14],eax
100383a4:	je     0x10038464
100383aa:	lea    ebx,[ebx+0x0]
100383b0:	mov    edx,eax
100383b2:	shr    edx,0x2
100383b5:	and    edx,0x3
100383b8:	mov    DWORD PTR [esp+0x10],edx
100383bc:	lea    edx,[edi-0x1]
100383bf:	test   edx,edx
100383c1:	jle    0x10038415
100383c3:	mov    edi,DWORD PTR [ecx+edx*4-0x4]
100383c7:	mov    eax,edi
100383c9:	shl    eax,0x4
100383cc:	mov    ebx,esi
100383ce:	shr    ebx,0x3
100383d1:	xor    ebx,eax
100383d3:	mov    eax,edi
100383d5:	shr    eax,0x5
100383d8:	lea    ebp,[esi*4+0x0]
100383df:	xor    eax,ebp
100383e1:	mov    ebp,DWORD PTR [esp+0x24]
100383e5:	add    ebx,eax
100383e7:	mov    eax,edx
100383e9:	and    eax,0x3
100383ec:	xor    eax,DWORD PTR [esp+0x10]
100383f0:	sub    edx,0x1
100383f3:	mov    ebp,DWORD PTR [ebp+eax*4+0x0]
100383f7:	mov    eax,DWORD PTR [esp+0x14]
100383fb:	xor    ebp,edi
100383fd:	mov    edi,eax
100383ff:	xor    edi,esi
10038401:	add    ebp,edi
10038403:	xor    ebx,ebp
10038405:	sub    DWORD PTR [ecx+edx*4+0x4],ebx
10038409:	test   edx,edx
1003840b:	mov    esi,DWORD PTR [ecx+edx*4+0x4]
1003840f:	jg     0x100383c3
10038411:	mov    edi,DWORD PTR [esp+0x20]
10038415:	mov    edi,DWORD PTR [ecx+edi*4-0x4]
10038419:	mov    ebp,edi
1003841b:	shl    ebp,0x4
1003841e:	mov    ebx,esi
10038420:	shr    ebx,0x3
10038423:	xor    ebx,ebp
10038425:	shr    edi,0x5
10038428:	lea    ebp,[esi*4+0x0]
1003842f:	xor    edi,ebp
10038431:	and    edx,0x3
10038434:	xor    edx,DWORD PTR [esp+0x10]
10038438:	add    ebx,edi
1003843a:	mov    edi,DWORD PTR [esp+0x24]
1003843e:	mov    edx,DWORD PTR [edi+edx*4]
10038441:	mov    edi,DWORD PTR [esp+0x20]
10038445:	xor    edx,DWORD PTR [ecx+edi*4-0x4]
10038449:	mov    ebp,eax
1003844b:	xor    ebp,esi
1003844d:	add    edx,ebp
1003844f:	xor    ebx,edx
10038451:	sub    DWORD PTR [ecx],ebx
10038453:	mov    esi,DWORD PTR [ecx]
10038455:	add    eax,0x61c88647
1003845a:	mov    DWORD PTR [esp+0x14],eax
1003845e:	jne    0x100383b0
10038464:	pop    edi
10038465:	pop    esi
10038466:	pop    ebp
10038467:	xor    eax,eax
10038469:	pop    ebx
1003846a:	add    esp,0xc
1003846d:	ret    
1003846e:	pop    edi
1003846f:	pop    esi
10038470:	pop    ebp
10038471:	mov    eax,0x1
10038476:	pop    ebx
10038477:	add    esp,0xc
1003847a:	ret    
1003847b:	int3   
1003847c:	int3   
1003847d:	int3   
1003847e:	int3   
1003847f:	int3   
10038480:	push   0xffffffff
10038482:	push   0x1005eb98
10038487:	mov    eax,fs:0x0
1003848d:	push   eax
1003848e:	sub    esp,0x2c
10038491:	mov    eax,ds:0x1007d030
10038496:	xor    eax,esp
10038498:	mov    DWORD PTR [esp+0x24],eax
1003849c:	push   ebx
1003849d:	push   ebp
1003849e:	push   esi
1003849f:	mov    eax,ds:0x1007d030
100384a4:	xor    eax,esp
100384a6:	push   eax
100384a7:	lea    eax,[esp+0x3c]
100384ab:	mov    fs:0x0,eax
100384b1:	mov    bl,cl
100384b3:	mov    esi,DWORD PTR [esp+0x4c]
100384b7:	mov    ebp,DWORD PTR [esp+0x54]
100384bb:	xor    eax,eax
100384bd:	mov    DWORD PTR [esp+0x14],eax
100384c1:	mov    DWORD PTR [esp+0x1c],edx
100384c5:	mov    DWORD PTR [esp+0x20],ebp
100384c9:	mov    DWORD PTR [esp+0x14],eax
100384cd:	test   bl,bl
100384cf:	mov    DWORD PTR [esp+0x44],eax
100384d3:	je     0x10038519
100384d5:	mov    DWORD PTR [esp+0x18],eax
100384d9:	mov    ecx,esi
100384db:	lea    eax,[esp+0x18]
100384df:	lea    esi,[esp+0x1c]
100384e3:	call   0x1002f480
100384e8:	mov    ecx,DWORD PTR [eax]
100384ea:	mov    esi,ecx
100384ec:	test   esi,esi
100384ee:	mov    DWORD PTR [eax],0x0
100384f4:	je     0x10038500
100384f6:	push   0x0
100384f8:	call   0x10041d92
100384fd:	add    esp,0x4
10038500:	mov    edx,DWORD PTR [esp+0x1c]
10038504:	push   edx
10038505:	mov    DWORD PTR [esp+0x18],esi
10038509:	call   0x10041d92
1003850e:	mov    DWORD PTR [esp+0x20],esi
10038512:	mov    esi,DWORD PTR [esp+0x1c]
10038516:	add    esp,0x4
10038519:	lea    eax,[esi+0x3]
1003851c:	and    eax,0xfffffffc
1003851f:	add    eax,0x8
10038522:	mov    DWORD PTR [esp+0x18],eax
10038526:	add    eax,0x10
10038529:	push   eax
1003852a:	mov    DWORD PTR [ebp+0x0],eax
1003852d:	call   0x10042609
10038532:	add    esp,0x4
10038535:	mov    DWORD PTR [edi],eax
10038537:	call   DWORD PTR ds:0x10065118
1003853d:	push   eax
1003853e:	call   0x1004515a
10038543:	add    esp,0x4
10038546:	xor    ebp,ebp
10038548:	call   0x10045167
1003854d:	cdq    
1003854e:	mov    ecx,0xff
10038553:	idiv   ecx
10038555:	add    ebp,0x1
10038558:	cmp    ebp,0x10
1003855b:	mov    BYTE PTR [esp+ebp*1+0x23],dl
1003855f:	jne    0x10038548
10038561:	mov    eax,DWORD PTR [edi]
10038563:	mov    edx,DWORD PTR [esp+0x24]
10038567:	mov    ecx,DWORD PTR [esp+0x28]
1003856b:	mov    DWORD PTR [eax],edx
1003856d:	mov    edx,DWORD PTR [esp+0x2c]
10038571:	mov    DWORD PTR [eax+0x4],ecx
10038574:	mov    ecx,DWORD PTR [esp+0x30]
10038578:	mov    DWORD PTR [eax+0x8],edx
1003857b:	mov    edx,DWORD PTR [esp+0x1c]
1003857f:	mov    DWORD PTR [eax+0xc],ecx
10038582:	add    eax,ebp
10038584:	neg    bl
10038586:	push   esi
10038587:	push   edx
10038588:	sbb    ebx,ebx
1003858a:	and    ebx,0xfffffbff
10038590:	add    ebx,0x4b4f5444
10038596:	mov    DWORD PTR [eax],ebx
10038598:	add    eax,0x4
1003859b:	push   eax
1003859c:	call   0x10043ed0
100385a1:	mov    ecx,DWORD PTR [esp+0x2c]
100385a5:	mov    edx,DWORD PTR [ecx]
100385a7:	mov    eax,DWORD PTR [edi]
100385a9:	lea    eax,[edx+eax*1-0x4]
100385ad:	mov    DWORD PTR [eax],esi
100385af:	add    esp,0xc
100385b2:	xor    eax,eax
100385b4:	xor    ecx,ecx
100385b6:	jmp    0x100385c0
100385b8:	lea    esp,[esp+0x0]
100385bf:	nop
100385c0:	mov    edx,DWORD PTR [esp+0x50]
100385c4:	mov    dl,BYTE PTR [ecx+edx*1]
100385c7:	xor    BYTE PTR [esp+eax*1+0x24],dl
100385cb:	add    ecx,0x1
100385ce:	add    eax,0x1
100385d1:	and    ecx,0xf
100385d4:	cmp    eax,0x10
100385d7:	jne    0x100385c0
100385d9:	mov    ecx,DWORD PTR [edi]
100385db:	lea    eax,[esp+0x24]
100385df:	push   eax
100385e0:	mov    eax,DWORD PTR [esp+0x1c]
100385e4:	cdq    
100385e5:	and    edx,0x3
100385e8:	add    eax,edx
100385ea:	sar    eax,0x2
100385ed:	push   eax
100385ee:	add    ecx,0x10
100385f1:	call   0x10038280
100385f6:	mov    ecx,DWORD PTR [esp+0x1c]
100385fa:	push   ecx
100385fb:	call   0x10041d92
10038600:	add    esp,0xc
10038603:	mov    eax,edi
10038605:	mov    ecx,DWORD PTR [esp+0x3c]
10038609:	mov    DWORD PTR fs:0x0,ecx
10038610:	pop    ecx
10038611:	pop    esi
10038612:	pop    ebp
10038613:	pop    ebx
10038614:	mov    ecx,DWORD PTR [esp+0x24]
10038618:	xor    ecx,esp
1003861a:	call   0x10041d97
1003861f:	add    esp,0x38
10038622:	ret    
10038623:	int3   
10038624:	int3   
10038625:	int3   
10038626:	int3   
10038627:	int3   
10038628:	int3   
10038629:	int3   
1003862a:	int3   
1003862b:	int3   
1003862c:	int3   
1003862d:	int3   
1003862e:	int3   
1003862f:	int3   
10038630:	push   0xffffffff
10038632:	push   0x10061e80
10038637:	mov    eax,fs:0x0
1003863d:	push   eax
1003863e:	sub    esp,0x30
10038641:	mov    eax,ds:0x1007d030
10038646:	xor    eax,esp
10038648:	mov    DWORD PTR [esp+0x28],eax
1003864c:	push   ebx
1003864d:	push   ebp
1003864e:	push   esi
1003864f:	push   edi
10038650:	mov    eax,ds:0x1007d030
10038655:	xor    eax,esp
10038657:	push   eax
10038658:	lea    eax,[esp+0x44]
1003865c:	mov    fs:0x0,eax
10038662:	mov    edi,DWORD PTR [esp+0x60]
10038666:	mov    eax,DWORD PTR [esp+0x5c]
1003866a:	mov    ebx,DWORD PTR [esp+0x54]
1003866e:	mov    esi,DWORD PTR [esp+0x58]
10038672:	xor    ebp,ebp
10038674:	mov    DWORD PTR [esp+0x20],ebp
10038678:	mov    DWORD PTR [esp+0x18],ebx
1003867c:	mov    DWORD PTR [esp+0x1c],ecx
10038680:	mov    DWORD PTR [esp+0x14],edx
10038684:	mov    DWORD PTR [esp+0x24],ebp
10038688:	cmp    eax,0x18
1003868b:	mov    DWORD PTR [esp+0x4c],ebp
1003868f:	jae    0x100386af
10038691:	call   0x1000207c
10038696:	push   0x6
10038698:	call   0x10037620
1003869d:	add    esp,0x4
100386a0:	push   ebp
100386a1:	mov    DWORD PTR [ebx],ebp
100386a3:	call   0x10041d92
100386a8:	mov    eax,ebx
100386aa:	jmp    0x1003894b
100386af:	lea    ebx,[eax-0x10]
100386b2:	push   ebx
100386b3:	call   0x10042609
100386b8:	mov    ebp,eax
100386ba:	add    esp,0x4
100386bd:	mov    DWORD PTR [esp+0x28],ebp
100386c1:	push   ebx
100386c2:	lea    eax,[esi+0x10]
100386c5:	push   eax
100386c6:	push   ebp
100386c7:	mov    BYTE PTR [esp+0x58],0x1
100386cc:	call   0x10043ed0
100386d1:	mov    ecx,DWORD PTR [esi]
100386d3:	mov    eax,DWORD PTR [esi+0x8]
100386d6:	mov    edx,DWORD PTR [esi+0x4]
100386d9:	mov    DWORD PTR [esp+0x38],ecx
100386dd:	mov    ecx,DWORD PTR [esi+0xc]
100386e0:	mov    DWORD PTR [esp+0x40],eax
100386e4:	add    esp,0xc
100386e7:	mov    DWORD PTR [esp+0x38],ecx
100386eb:	xor    eax,eax
100386ed:	mov    DWORD PTR [esp+0x30],edx
100386f1:	xor    ecx,ecx
100386f3:	mov    dl,BYTE PTR [ecx+edi*1]
100386f6:	xor    BYTE PTR [esp+eax*1+0x2c],dl
100386fa:	add    ecx,0x1
100386fd:	add    eax,0x1
10038700:	and    ecx,0xf
10038703:	cmp    eax,0x10
10038706:	jne    0x100386f3
10038708:	lea    eax,[esp+0x2c]
1003870c:	push   eax
1003870d:	mov    eax,ebx
1003870f:	cdq    
10038710:	and    edx,0x3
10038713:	add    eax,edx
10038715:	sar    eax,0x2
10038718:	neg    eax
1003871a:	push   eax
1003871b:	mov    ecx,ebp
1003871d:	call   0x10038280
10038722:	mov    ecx,DWORD PTR [esp+0x1c]
10038726:	mov    BYTE PTR [ecx],0x0
10038729:	add    esp,0x8
1003872c:	mov    eax,0x4
10038731:	mov    ecx,0x1007e51c
10038736:	mov    edx,ebp
10038738:	mov    esi,DWORD PTR [edx]
1003873a:	cmp    esi,DWORD PTR [ecx]
1003873c:	jne    0x10038750
1003873e:	sub    eax,0x4
10038741:	add    ecx,0x4
10038744:	add    edx,0x4
10038747:	cmp    eax,0x4
1003874a:	jae    0x10038738
1003874c:	test   eax,eax
1003874e:	je     0x100387ad
10038750:	movzx  edi,BYTE PTR [ecx]
10038753:	movzx  esi,BYTE PTR [edx]
10038756:	sub    esi,edi
10038758:	jne    0x1003879f
1003875a:	sub    eax,0x1
1003875d:	add    ecx,0x1
10038760:	add    edx,0x1
10038763:	test   eax,eax
10038765:	je     0x100387ad
10038767:	movzx  edi,BYTE PTR [ecx]
1003876a:	movzx  esi,BYTE PTR [edx]
1003876d:	sub    esi,edi
1003876f:	jne    0x1003879f
10038771:	sub    eax,0x1
10038774:	add    ecx,0x1
10038777:	add    edx,0x1
1003877a:	test   eax,eax
1003877c:	je     0x100387ad
1003877e:	movzx  edi,BYTE PTR [ecx]
10038781:	movzx  esi,BYTE PTR [edx]
10038784:	sub    esi,edi
10038786:	jne    0x1003879f
10038788:	sub    eax,0x1
1003878b:	add    ecx,0x1
1003878e:	add    edx,0x1
10038791:	test   eax,eax
10038793:	je     0x100387ad
10038795:	movzx  eax,BYTE PTR [ecx]
10038798:	movzx  esi,BYTE PTR [edx]
1003879b:	sub    esi,eax
1003879d:	je     0x100387ad
1003879f:	test   esi,esi
100387a1:	mov    eax,0x1
100387a6:	jg     0x100387af
100387a8:	or     eax,0xffffffff
100387ab:	jmp    0x100387af
100387ad:	xor    eax,eax
100387af:	test   eax,eax
100387b1:	jne    0x100387bf
100387b3:	mov    ecx,DWORD PTR [esp+0x14]
100387b7:	mov    BYTE PTR [ecx],0x1
100387ba:	jmp    0x1003884f
100387bf:	mov    eax,0x4
100387c4:	mov    ecx,0x1007e518
100387c9:	mov    edx,ebp
100387cb:	jmp    0x100387d0
100387cd:	lea    ecx,[ecx+0x0]
100387d0:	mov    esi,DWORD PTR [edx]
100387d2:	cmp    esi,DWORD PTR [ecx]
100387d4:	jne    0x100387e8
100387d6:	sub    eax,0x4
100387d9:	add    ecx,0x4
100387dc:	add    edx,0x4
100387df:	cmp    eax,0x4
100387e2:	jae    0x100387d0
100387e4:	test   eax,eax
100387e6:	je     0x10038845
100387e8:	movzx  esi,BYTE PTR [edx]
100387eb:	movzx  edi,BYTE PTR [ecx]
100387ee:	sub    esi,edi
100387f0:	jne    0x10038837
100387f2:	sub    eax,0x1
100387f5:	add    ecx,0x1
100387f8:	add    edx,0x1
100387fb:	test   eax,eax
100387fd:	je     0x10038845
100387ff:	movzx  esi,BYTE PTR [edx]
10038802:	movzx  edi,BYTE PTR [ecx]
10038805:	sub    esi,edi
10038807:	jne    0x10038837
10038809:	sub    eax,0x1
1003880c:	add    ecx,0x1
1003880f:	add    edx,0x1
10038812:	test   eax,eax
10038814:	je     0x10038845
10038816:	movzx  esi,BYTE PTR [edx]
10038819:	movzx  edi,BYTE PTR [ecx]
1003881c:	sub    esi,edi
1003881e:	jne    0x10038837
10038820:	sub    eax,0x1
10038823:	add    ecx,0x1
10038826:	add    edx,0x1
10038829:	test   eax,eax
1003882b:	je     0x10038845
1003882d:	movzx  esi,BYTE PTR [edx]
10038830:	movzx  edx,BYTE PTR [ecx]
10038833:	sub    esi,edx
10038835:	je     0x10038845
10038837:	test   esi,esi
10038839:	mov    eax,0x1
1003883e:	jg     0x10038847
10038840:	or     eax,0xffffffff
10038843:	jmp    0x10038847
10038845:	xor    eax,eax
10038847:	test   eax,eax
10038849:	jne    0x10038920
1003884f:	cmp    BYTE PTR [esp+0x64],0x0
10038854:	mov    eax,DWORD PTR [ebx+ebp*1-0x4]
10038858:	mov    edi,DWORD PTR [esp+0x1c]
1003885c:	mov    DWORD PTR [edi],eax
1003885e:	jne    0x10038865
10038860:	add    eax,0xfffffffc
10038863:	mov    DWORD PTR [edi],eax
10038865:	mov    eax,DWORD PTR [edi]
10038867:	lea    ecx,[ebx-0x8]
1003886a:	cmp    eax,ecx
1003886c:	ja     0x10038920
10038872:	add    ebx,0xfffffff5
10038875:	cmp    eax,ebx
10038877:	jb     0x10038920
1003887d:	push   eax
1003887e:	call   0x10042609
10038883:	mov    esi,eax
10038885:	add    esp,0x4
10038888:	test   esi,esi
1003888a:	je     0x10038896
1003888c:	push   0x0
1003888e:	call   0x10041d92
10038893:	add    esp,0x4
10038896:	mov    edx,DWORD PTR [edi]
10038898:	push   edx
10038899:	lea    eax,[ebp+0x4]
1003889c:	push   eax
1003889d:	push   esi
1003889e:	mov    DWORD PTR [esp+0x30],esi
100388a2:	call   0x10043ed0
100388a7:	mov    ecx,DWORD PTR [esp+0x20]
100388ab:	add    esp,0xc
100388ae:	cmp    BYTE PTR [ecx],0x0
100388b1:	je     0x10038906
100388b3:	mov    eax,DWORD PTR [edi]
100388b5:	lea    edx,[esp+0x14]
100388b9:	push   edx
100388ba:	push   eax
100388bb:	lea    ecx,[esp+0x28]
100388bf:	push   esi
100388c0:	push   ecx
100388c1:	mov    DWORD PTR [esp+0x24],0x0
100388c9:	call   0x1002f0b0
100388ce:	mov    edi,DWORD PTR [eax]
100388d0:	mov    DWORD PTR [eax],0x0
100388d6:	mov    edx,DWORD PTR [esp+0x30]
100388da:	push   edx
100388db:	call   0x10041d92
100388e0:	add    esp,0x14
100388e3:	cmp    edi,esi
100388e5:	je     0x100388f0
100388e7:	push   esi
100388e8:	call   0x10041d92
100388ed:	add    esp,0x4
100388f0:	mov    eax,DWORD PTR [esp+0x14]
100388f4:	mov    ecx,DWORD PTR [esp+0x1c]
100388f8:	push   0x0
100388fa:	mov    esi,edi
100388fc:	mov    DWORD PTR [ecx],eax
100388fe:	call   0x10041d92
10038903:	add    esp,0x4
10038906:	mov    edi,DWORD PTR [esp+0x18]
1003890a:	push   ebp
1003890b:	mov    DWORD PTR [edi],esi
1003890d:	call   0x10041d92
10038912:	add    esp,0x4
10038915:	push   0x0
10038917:	call   0x10041d92
1003891c:	mov    eax,edi
1003891e:	jmp    0x1003894b
10038920:	call   0x1000207c
10038925:	push   0x6
10038927:	call   0x10037620
1003892c:	mov    esi,DWORD PTR [esp+0x1c]
10038930:	add    esp,0x4
10038933:	push   ebp
10038934:	mov    DWORD PTR [esi],0x0
1003893a:	call   0x10041d92
1003893f:	add    esp,0x4
10038942:	push   0x0
10038944:	call   0x10041d92
10038949:	mov    eax,esi
1003894b:	add    esp,0x4
1003894e:	mov    ecx,DWORD PTR [esp+0x44]
10038952:	mov    DWORD PTR fs:0x0,ecx
10038959:	pop    ecx
1003895a:	pop    edi
1003895b:	pop    esi
1003895c:	pop    ebp
1003895d:	pop    ebx
1003895e:	mov    ecx,DWORD PTR [esp+0x28]
10038962:	xor    ecx,esp
10038964:	call   0x10041d97
10038969:	add    esp,0x3c
1003896c:	ret    
1003896d:	int3   
1003896e:	int3   
1003896f:	int3   
10038970:	push   0xffffffff
10038972:	push   0x10060109
10038977:	mov    eax,fs:0x0
1003897d:	push   eax
1003897e:	sub    esp,0x18
10038981:	mov    eax,ds:0x1007d030
10038986:	xor    eax,esp
10038988:	mov    DWORD PTR [esp+0x14],eax
1003898c:	push   ebp
1003898d:	push   esi
1003898e:	mov    eax,ds:0x1007d030
10038993:	xor    eax,esp
10038995:	push   eax
10038996:	lea    eax,[esp+0x24]
1003899a:	mov    fs:0x0,eax
100389a0:	mov    ebp,DWORD PTR [esp+0x34]
100389a4:	xor    eax,eax
100389a6:	mov    DWORD PTR [esp+0xc],eax
100389aa:	mov    DWORD PTR [edi+0x18],0xf
100389b1:	mov    DWORD PTR [edi+0x14],eax
100389b4:	mov    DWORD PTR [esp+0x10],edi
100389b8:	mov    BYTE PTR [edi+0x4],al
100389bb:	xor    esi,esi
100389bd:	cmp    ebx,eax
100389bf:	mov    DWORD PTR [esp+0x2c],eax
100389c3:	mov    DWORD PTR [esp+0xc],0x1
100389cb:	je     0x10038a4a
100389cd:	lea    ecx,[ecx+0x0]
100389d0:	movzx  eax,BYTE PTR [esi+ebp*1]
100389d4:	push   eax
100389d5:	push   0xc467ead
100389da:	push   0x5196a4cc
100389df:	push   0x55135286
100389e4:	push   0x7d692ab9
100389e9:	push   0x10072b74
100389ee:	call   0x10003d63
100389f3:	add    esp,0x8
100389f6:	push   eax
100389f7:	call   0x10003d63
100389fc:	add    esp,0x8
100389ff:	push   eax
10038a00:	call   0x10003d63
10038a05:	add    esp,0x8
10038a08:	push   eax
10038a09:	call   0x10003d63
10038a0e:	push   eax
10038a0f:	push   0x4
10038a11:	push   0x10072ba0
10038a16:	call   0x10003d75
10038a1b:	add    esp,0x14
10038a1e:	push   eax
10038a1f:	lea    ecx,[esp+0x1c]
10038a23:	push   ecx
10038a24:	call   0x100572ef
10038a29:	lea    edx,[esp+0x20]
10038a2d:	push   edx
10038a2e:	call   0x10041f10
10038a33:	add    esp,0x10
10038a36:	push   eax
10038a37:	lea    eax,[esp+0x18]
10038a3b:	push   eax
10038a3c:	mov    eax,edi
10038a3e:	call   0x10005f16
10038a43:	add    esi,0x1
10038a46:	cmp    esi,ebx
10038a48:	jne    0x100389d0
10038a4a:	mov    eax,edi
10038a4c:	mov    ecx,DWORD PTR [esp+0x24]
10038a50:	mov    DWORD PTR fs:0x0,ecx
10038a57:	pop    ecx
10038a58:	pop    esi
10038a59:	pop    ebp
10038a5a:	mov    ecx,DWORD PTR [esp+0x14]
10038a5e:	xor    ecx,esp
10038a60:	call   0x10041d97
10038a65:	add    esp,0x24
10038a68:	ret    
10038a69:	int3   
10038a6a:	int3   
10038a6b:	int3   
10038a6c:	int3   
10038a6d:	int3   
10038a6e:	int3   
10038a6f:	int3   
10038a70:	push   0xffffffff
10038a72:	push   0x1005e4a8
10038a77:	mov    eax,fs:0x0
10038a7d:	push   eax
10038a7e:	sub    esp,0xc
10038a81:	push   ebx
10038a82:	push   ebp
10038a83:	push   esi
10038a84:	push   edi
10038a85:	mov    eax,ds:0x1007d030
10038a8a:	xor    eax,esp
10038a8c:	push   eax
10038a8d:	lea    eax,[esp+0x20]
10038a91:	mov    fs:0x0,eax
10038a97:	mov    ebx,DWORD PTR [esp+0x38]
10038a9b:	xor    edi,edi
10038a9d:	mov    DWORD PTR [esp+0x1c],edi
10038aa1:	mov    DWORD PTR [ebx],edi
10038aa3:	mov    DWORD PTR [esp+0x1c],edi
10038aa7:	mov    esi,DWORD PTR [esp+0x34]
10038aab:	mov    DWORD PTR [esp+0x28],edi
10038aaf:	mov    eax,DWORD PTR [esi+0x14]
10038ab2:	test   al,0x1
10038ab4:	je     0x10038abe
10038ab6:	mov    esi,DWORD PTR [esp+0x30]
10038aba:	mov    DWORD PTR [esi],edi
10038abc:	jmp    0x10038af2
10038abe:	shr    eax,1
10038ac0:	mov    DWORD PTR [ebx],eax
10038ac2:	je     0x10038ab6
10038ac4:	push   eax
10038ac5:	call   0x10042609
10038aca:	add    esp,0x4
10038acd:	cmp    eax,edi
10038acf:	mov    DWORD PTR [esp+0x1c],eax
10038ad3:	je     0x10038ade
10038ad5:	push   edi
10038ad6:	call   0x10041d92
10038adb:	add    esp,0x4
10038ade:	xor    ebp,ebp
10038ae0:	cmp    DWORD PTR [ebx],edi
10038ae2:	mov    DWORD PTR [esp+0x18],edi
10038ae6:	jne    0x10038b19
10038ae8:	mov    esi,DWORD PTR [esp+0x30]
10038aec:	mov    eax,DWORD PTR [esp+0x1c]
10038af0:	mov    DWORD PTR [esi],eax
10038af2:	push   edi
10038af3:	call   0x10041d92
10038af8:	mov    eax,esi
10038afa:	add    esp,0x4
10038afd:	mov    ecx,DWORD PTR [esp+0x20]
10038b01:	mov    DWORD PTR fs:0x0,ecx
10038b08:	pop    ecx
10038b09:	pop    edi
10038b0a:	pop    esi
10038b0b:	pop    ebp
10038b0c:	pop    ebx
10038b0d:	add    esp,0x18
10038b10:	ret    
10038b11:	mov    esi,DWORD PTR [esp+0x34]
10038b15:	mov    edi,DWORD PTR [esp+0x18]
10038b19:	cmp    edi,DWORD PTR [esi+0x14]
10038b1c:	jbe    0x10038b23
10038b1e:	call   0x100422b0
10038b23:	cmp    DWORD PTR [esi+0x18],0x10
10038b27:	jb     0x10038b31
10038b29:	mov    eax,DWORD PTR [esi+0x4]
10038b2c:	add    esi,0x4
10038b2f:	jmp    0x10038b36
10038b31:	add    esi,0x4
10038b34:	mov    eax,esi
10038b36:	mov    bl,BYTE PTR [eax+edi*1]
10038b39:	mov    eax,DWORD PTR [esp+0x34]
10038b3d:	add    edi,0x1
10038b40:	cmp    edi,DWORD PTR [eax+0x14]
10038b43:	jbe    0x10038b4a
10038b45:	call   0x100422b0
10038b4a:	mov    ecx,DWORD PTR [esp+0x34]
10038b4e:	cmp    DWORD PTR [ecx+0x18],0x10
10038b52:	jb     0x10038b56
10038b54:	mov    esi,DWORD PTR [esi]
10038b56:	mov    dl,BYTE PTR [edi+esi*1]
10038b59:	movzx  eax,bl
10038b5c:	push   eax
10038b5d:	mov    BYTE PTR [esp+0x1b],dl
10038b61:	call   0x1004b78c
10038b66:	add    esp,0x4
10038b69:	test   eax,eax
10038b6b:	je     0x10038bf2
10038b71:	movzx  ecx,BYTE PTR [esp+0x17]
10038b76:	push   ecx
10038b77:	call   0x1004b78c
10038b7c:	add    esp,0x4
10038b7f:	test   eax,eax
10038b81:	je     0x10038bf2
10038b83:	mov    dl,bl
10038b85:	sub    dl,0x30
10038b88:	cmp    dl,0x9
10038b8b:	ja     0x10038b95
10038b8d:	movsx  ebx,bl
10038b90:	sub    ebx,0x30
10038b93:	jmp    0x10038ba6
10038b95:	movsx  eax,bl
10038b98:	push   eax
10038b99:	call   0x10057bd7
10038b9e:	mov    ebx,eax
10038ba0:	add    esp,0x4
10038ba3:	sub    ebx,0x37
10038ba6:	mov    al,BYTE PTR [esp+0x17]
10038baa:	mov    cl,al
10038bac:	sub    cl,0x30
10038baf:	cmp    cl,0x9
10038bb2:	ja     0x10038bbc
10038bb4:	movsx  eax,al
10038bb7:	sub    eax,0x30
10038bba:	jmp    0x10038bcb
10038bbc:	movsx  edx,al
10038bbf:	push   edx
10038bc0:	call   0x10057bd7
10038bc5:	add    esp,0x4
10038bc8:	sub    eax,0x37
10038bcb:	mov    ecx,DWORD PTR [esp+0x38]
10038bcf:	add    DWORD PTR [esp+0x18],0x2
10038bd4:	shl    bl,0x4
10038bd7:	add    bl,al
10038bd9:	mov    eax,DWORD PTR [esp+0x1c]
10038bdd:	mov    BYTE PTR [eax+ebp*1],bl
10038be0:	add    ebp,0x1
10038be3:	cmp    ebp,DWORD PTR [ecx]
10038be5:	jne    0x10038b11
10038beb:	xor    edi,edi
10038bed:	jmp    0x10038ae8
10038bf2:	mov    eax,DWORD PTR [esp+0x1c]
10038bf6:	test   eax,eax
10038bf8:	mov    edx,DWORD PTR [esp+0x38]
10038bfc:	mov    DWORD PTR [edx],0x0
10038c02:	je     0x10038c0d
10038c04:	push   eax
10038c05:	call   0x10041d92
10038c0a:	add    esp,0x4
10038c0d:	mov    esi,DWORD PTR [esp+0x30]
10038c11:	mov    DWORD PTR [esi],0x0
10038c17:	push   0x0
10038c19:	jmp    0x10038af3
10038c1e:	int3   
10038c1f:	int3   
10038c20:	push   0xffffffff
10038c22:	push   0x10061250
10038c27:	mov    eax,fs:0x0
10038c2d:	push   eax
10038c2e:	sub    esp,0x10
10038c31:	push   ebx
10038c32:	push   ebp
10038c33:	push   esi
10038c34:	push   edi
10038c35:	mov    eax,ds:0x1007d030
10038c3a:	xor    eax,esp
10038c3c:	push   eax
10038c3d:	lea    eax,[esp+0x24]
10038c41:	mov    fs:0x0,eax
10038c47:	mov    ebx,ecx
10038c49:	mov    DWORD PTR [esp+0x18],0x0
10038c51:	mov    edi,DWORD PTR [ebx+0x14]
10038c54:	lea    ebp,[edi+0x4]
10038c57:	push   ebp
10038c58:	call   0x10042609
10038c5d:	mov    esi,eax
10038c5f:	add    esp,0x4
10038c62:	mov    DWORD PTR [esp+0x1c],esi
10038c66:	mov    DWORD PTR [esp+0x2c],0x0
10038c6e:	mov    DWORD PTR [esi],edi
10038c70:	cmp    DWORD PTR [ebx+0x18],0x10
10038c74:	jb     0x10038c7b
10038c76:	mov    ebx,DWORD PTR [ebx+0x4]
10038c79:	jmp    0x10038c7e
10038c7b:	add    ebx,0x4
10038c7e:	push   edi
10038c7f:	lea    eax,[esi+0x4]
10038c82:	push   ebx
10038c83:	push   eax
10038c84:	call   0x10043ed0
10038c89:	mov    edx,DWORD PTR [esp+0x44]
10038c8d:	add    esp,0xc
10038c90:	lea    ecx,[esp+0x18]
10038c94:	push   ecx
10038c95:	mov    cl,BYTE PTR [esp+0x40]
10038c99:	push   edx
10038c9a:	push   ebp
10038c9b:	mov    edx,esi
10038c9d:	lea    edi,[esp+0x20]
10038ca1:	call   0x10038480
10038ca6:	mov    ecx,DWORD PTR [eax]
10038ca8:	mov    ebp,ecx
10038caa:	add    esp,0xc
10038cad:	mov    DWORD PTR [eax],0x0
10038cb3:	mov    DWORD PTR [esp+0x20],ebp
10038cb7:	mov    BYTE PTR [esp+0x2c],0x1
10038cbc:	mov    edx,DWORD PTR [esp+0x14]
10038cc0:	push   edx
10038cc1:	call   0x10041d92
10038cc6:	mov    edi,DWORD PTR [esp+0x38]
10038cca:	add    esp,0x4
10038ccd:	test   ebp,ebp
10038ccf:	jne    0x10038cfc
10038cd1:	mov    DWORD PTR [edi+0x18],0xf
10038cd8:	mov    DWORD PTR [edi+0x14],ebp
10038cdb:	push   0x1006bb18
10038ce0:	mov    BYTE PTR [edi+0x4],0x0
10038ce4:	call   0x10041f10
10038ce9:	add    esp,0x4
10038cec:	push   eax
10038ced:	push   0x1006bb18
10038cf2:	mov    ecx,edi
10038cf4:	call   0x10001344
10038cf9:	push   ebp
10038cfa:	jmp    0x10038d0a
10038cfc:	mov    ebx,DWORD PTR [esp+0x18]
10038d00:	push   ebp
10038d01:	call   0x10038970
10038d06:	add    esp,0x4
10038d09:	push   ebp
10038d0a:	call   0x10041d92
10038d0f:	add    esp,0x4
10038d12:	push   esi
10038d13:	call   0x10041d92
10038d18:	mov    eax,edi
10038d1a:	add    esp,0x4
10038d1d:	mov    ecx,DWORD PTR [esp+0x24]
10038d21:	mov    DWORD PTR fs:0x0,ecx
10038d28:	pop    ecx
10038d29:	pop    edi
10038d2a:	pop    esi
10038d2b:	pop    ebp
10038d2c:	pop    ebx
10038d2d:	add    esp,0x1c
10038d30:	ret    
10038d31:	int3   
10038d32:	int3   
10038d33:	int3   
10038d34:	int3   
10038d35:	int3   
10038d36:	int3   
10038d37:	int3   
10038d38:	int3   
10038d39:	int3   
10038d3a:	int3   
10038d3b:	int3   
10038d3c:	int3   
10038d3d:	int3   
10038d3e:	int3   
10038d3f:	int3   
10038d40:	mov    ecx,DWORD PTR [eax]
10038d42:	push   ecx
10038d43:	call   DWORD PTR ds:0x100650ec
10038d49:	ret    
10038d4a:	int3   
10038d4b:	int3   
10038d4c:	int3   
10038d4d:	int3   
10038d4e:	int3   
10038d4f:	int3   
10038d50:	push   edi
10038d51:	push   0xffffffff
10038d53:	push   0x0
10038d55:	push   eax
10038d56:	mov    edi,ecx
10038d58:	call   0x1000124a
10038d5d:	test   esi,esi
10038d5f:	jne    0x10038d7a
10038d61:	mov    ecx,DWORD PTR ds:0x1007ff84
10038d67:	mov    DWORD PTR [edi+0x1c],ecx
10038d6a:	mov    edx,DWORD PTR ds:0x1007ff88
10038d70:	mov    DWORD PTR [edi+0x20],edx
10038d73:	mov    eax,ds:0x1007ff8c
10038d78:	jmp    0x10038d88
10038d7a:	mov    ecx,DWORD PTR [esi]
10038d7c:	mov    DWORD PTR [edi+0x1c],ecx
10038d7f:	mov    edx,DWORD PTR [esi+0x4]
10038d82:	mov    DWORD PTR [edi+0x20],edx
10038d85:	mov    eax,DWORD PTR [esi+0x8]
10038d88:	push   0x0
10038d8a:	mov    DWORD PTR [edi+0x24],eax
10038d8d:	mov    DWORD PTR [edi+0x30],0x1007e6f0
10038d94:	mov    DWORD PTR [edi+0x28],0x0
10038d9b:	mov    DWORD PTR [edi+0x2c],0x0
10038da2:	call   0x10038ea0
10038da7:	test   eax,eax
10038da9:	mov    DWORD PTR [edi+0x2c],eax
10038dac:	je     0x10038db8
10038dae:	push   0x2
10038db0:	call   0x10038ea0
10038db5:	mov    DWORD PTR [edi+0x28],eax
10038db8:	pop    edi
10038db9:	ret    
10038dba:	int3   
10038dbb:	int3   
10038dbc:	int3   
10038dbd:	int3   
10038dbe:	int3   
10038dbf:	int3   
10038dc0:	push   esi
10038dc1:	mov    esi,eax
10038dc3:	mov    eax,DWORD PTR [esi+0x28]
10038dc6:	test   eax,eax
10038dc8:	je     0x10038dd4
10038dca:	push   eax
10038dcb:	call   DWORD PTR ds:0x1007e4ec
10038dd1:	add    esp,0x4
10038dd4:	mov    eax,DWORD PTR [esi+0x2c]
10038dd7:	test   eax,eax
10038dd9:	je     0x10038de5
10038ddb:	push   eax
10038ddc:	call   DWORD PTR ds:0x1007e4ec
10038de2:	add    esp,0x4
10038de5:	mov    esi,DWORD PTR [esi+0x30]
10038de8:	cmp    esi,0x1007e6f0
10038dee:	je     0x10038e21
10038df0:	test   esi,esi
10038df2:	je     0x10038e21
10038df4:	cmp    DWORD PTR [esi+0x18],0x10
10038df8:	jb     0x10038e06
10038dfa:	mov    eax,DWORD PTR [esi+0x4]
10038dfd:	push   eax
10038dfe:	call   0x10041d92
10038e03:	add    esp,0x4
10038e06:	mov    DWORD PTR [esi+0x18],0xf
10038e0d:	mov    DWORD PTR [esi+0x14],0x0
10038e14:	push   esi
10038e15:	mov    BYTE PTR [esi+0x4],0x0
10038e19:	call   0x10041d92
10038e1e:	add    esp,0x4
10038e21:	pop    esi
10038e22:	ret    
10038e23:	int3   
10038e24:	int3   
10038e25:	int3   
10038e26:	int3   
10038e27:	int3   
10038e28:	int3   
10038e29:	int3   
10038e2a:	int3   
10038e2b:	int3   
10038e2c:	int3   
10038e2d:	int3   
10038e2e:	int3   
10038e2f:	int3   
10038e30:	push   0xffffffff
10038e32:	push   0x1005eb68
10038e37:	mov    eax,fs:0x0
10038e3d:	push   eax
10038e3e:	push   esi
10038e3f:	mov    eax,ds:0x1007d030
10038e44:	xor    eax,esp
10038e46:	push   eax
10038e47:	lea    eax,[esp+0x8]
10038e4b:	mov    fs:0x0,eax
10038e51:	mov    esi,DWORD PTR [esp+0x18]
10038e55:	mov    eax,esi
10038e57:	mov    DWORD PTR [esp+0x10],0x0
10038e5f:	call   0x10038dc0
10038e64:	cmp    DWORD PTR [esi+0x18],0x10
10038e68:	jb     0x10038e76
10038e6a:	mov    eax,DWORD PTR [esi+0x4]
10038e6d:	push   eax
10038e6e:	call   0x10041d92
10038e73:	add    esp,0x4
10038e76:	mov    DWORD PTR [esi+0x18],0xf
10038e7d:	mov    DWORD PTR [esi+0x14],0x0
10038e84:	mov    BYTE PTR [esi+0x4],0x0
10038e88:	mov    ecx,DWORD PTR [esp+0x8]
10038e8c:	mov    DWORD PTR fs:0x0,ecx
10038e93:	pop    ecx
10038e94:	pop    esi
10038e95:	add    esp,0xc
10038e98:	ret    0x4
10038e9b:	int3   
10038e9c:	int3   
10038e9d:	int3   
10038e9e:	int3   
10038e9f:	int3   
10038ea0:	push   0xffffffff
10038ea2:	push   0x1005f653
10038ea7:	mov    eax,fs:0x0
10038ead:	push   eax
10038eae:	sub    esp,0x2c
10038eb1:	mov    eax,ds:0x1007d030
10038eb6:	xor    eax,esp
10038eb8:	mov    DWORD PTR [esp+0x28],eax
10038ebc:	push   ebx
10038ebd:	push   ebp
10038ebe:	push   esi
10038ebf:	mov    eax,ds:0x1007d030
10038ec4:	xor    eax,esp
10038ec6:	push   eax
10038ec7:	lea    eax,[esp+0x3c]
10038ecb:	mov    fs:0x0,eax
10038ed1:	mov    ebp,DWORD PTR [edi+0x24]
10038ed4:	xor    ebx,ebx
10038ed6:	cmp    DWORD PTR [esp+0x4c],0x2
10038edb:	je     0x10038f04
10038edd:	cmp    DWORD PTR [edi+0x18],0x10
10038ee1:	jb     0x10038ee8
10038ee3:	mov    edx,DWORD PTR [edi+0x4]
10038ee6:	jmp    0x10038eeb
10038ee8:	lea    edx,[edi+0x4]
10038eeb:	lea    eax,[esp+0x14]
10038eef:	push   eax
10038ef0:	push   ebp
10038ef1:	lea    ecx,[esp+0x20]
10038ef5:	call   0x10041360
10038efa:	add    esp,0x8
10038efd:	mov    ebp,eax
10038eff:	jmp    0x10038f9e
10038f04:	push   0x10072cc4
10038f09:	mov    DWORD PTR [esp+0x38],0xf
10038f11:	mov    DWORD PTR [esp+0x34],ebx
10038f15:	mov    BYTE PTR [esp+0x24],bl
10038f19:	call   0x10041f10
10038f1e:	add    esp,0x4
10038f21:	push   eax
10038f22:	push   0x10072cc4
10038f27:	lea    ecx,[esp+0x24]
10038f2b:	call   0x10001344
10038f30:	push   0xffffffff
10038f32:	push   ebx
10038f33:	mov    eax,edi
10038f35:	lea    esi,[esp+0x24]
10038f39:	mov    DWORD PTR [esp+0x4c],ebx
10038f3d:	call   0x10005fb0
10038f42:	push   0x10072cc8
10038f47:	call   0x10041f10
10038f4c:	add    esp,0x4
10038f4f:	push   eax
10038f50:	push   0x10072cc8
10038f55:	mov    eax,esi
10038f57:	call   0x10005f16
10038f5c:	mov    edx,DWORD PTR [esp+0x20]
10038f60:	mov    esi,0x10
10038f65:	cmp    DWORD PTR [esp+0x34],esi
10038f69:	jae    0x10038f6f
10038f6b:	lea    edx,[esp+0x20]
10038f6f:	lea    ecx,[esp+0x14]
10038f73:	push   ecx
10038f74:	push   ebp
10038f75:	lea    ecx,[esp+0x20]
10038f79:	call   0x10041360
10038f7e:	add    esp,0x8
10038f81:	mov    DWORD PTR [esp+0x44],0xffffffff
10038f89:	cmp    DWORD PTR [esp+0x34],esi
10038f8d:	mov    ebp,eax
10038f8f:	jb     0x10038f9e
10038f91:	mov    edx,DWORD PTR [esp+0x20]
10038f95:	push   edx
10038f96:	call   0x10041d92
10038f9b:	add    esp,0x4
10038f9e:	cmp    ebp,ebx
10038fa0:	jne    0x10038ff1
10038fa2:	cmp    DWORD PTR [edi+0x30],0x1007e6f0
10038fa9:	jne    0x10038ff1
10038fab:	push   0x1c
10038fad:	call   0x1004239e
10038fb2:	mov    esi,eax
10038fb4:	add    esp,0x4
10038fb7:	mov    DWORD PTR [esp+0x14],esi
10038fbb:	cmp    esi,ebx
10038fbd:	mov    DWORD PTR [esp+0x44],0x1
10038fc5:	je     0x10038fec
10038fc7:	mov    DWORD PTR [esi+0x14],ebx
10038fca:	mov    DWORD PTR [esi+0x18],0xf
10038fd1:	mov    BYTE PTR [esi+0x4],bl
10038fd4:	mov    ebx,DWORD PTR [esp+0x18]
10038fd8:	push   ebx
10038fd9:	call   0x10041f10
10038fde:	add    esp,0x4
10038fe1:	push   eax
10038fe2:	push   ebx
10038fe3:	mov    ecx,esi
10038fe5:	call   0x10001344
10038fea:	jmp    0x10038fee
10038fec:	xor    esi,esi
10038fee:	mov    DWORD PTR [edi+0x30],esi
10038ff1:	mov    eax,ebp
10038ff3:	mov    ecx,DWORD PTR [esp+0x3c]
10038ff7:	mov    DWORD PTR fs:0x0,ecx
10038ffe:	pop    ecx
10038fff:	pop    esi
10039000:	pop    ebp
10039001:	pop    ebx
10039002:	mov    ecx,DWORD PTR [esp+0x28]
10039006:	xor    ecx,esp
10039008:	call   0x10041d97
1003900d:	add    esp,0x38
10039010:	ret    0x4
10039013:	int3   
10039014:	int3   
10039015:	int3   
10039016:	int3   
10039017:	int3   
10039018:	int3   
10039019:	int3   
1003901a:	int3   
1003901b:	int3   
1003901c:	int3   
1003901d:	int3   
1003901e:	int3   
1003901f:	int3   
10039020:	sub    esp,0x11c
10039026:	lea    eax,[esp+0x48]
1003902a:	push   eax
1003902b:	mov    eax,DWORD PTR [esp+0x128]
10039032:	push   0x0
10039034:	lea    ecx,[esp+0x10]
10039038:	push   ecx
10039039:	lea    edx,[esp+0x10]
1003903d:	push   edx
1003903e:	push   eax
1003903f:	mov    eax,DWORD PTR [esp+0x134]
10039046:	call   0x10039100
1003904b:	add    esp,0x11c
10039051:	ret    0x8
10039054:	int3   
10039055:	int3   
10039056:	int3   
10039057:	int3   
10039058:	int3   
10039059:	int3   
1003905a:	int3   
1003905b:	int3   
1003905c:	int3   
1003905d:	int3   
1003905e:	int3   
1003905f:	int3   
10039060:	push   ebp
10039061:	mov    ebp,esp
10039063:	and    esp,0xfffffff8
10039066:	sub    esp,0x18
10039069:	push   esi
1003906a:	mov    esi,DWORD PTR [eax+0x2c]
1003906d:	push   edi
1003906e:	xor    edi,edi
10039070:	cmp    esi,edi
10039072:	jne    0x1003907e
10039074:	xor    eax,eax
10039076:	pop    edi
10039077:	pop    esi
10039078:	mov    esp,ebp
1003907a:	pop    ebp
1003907b:	ret    0x4
1003907e:	mov    ecx,DWORD PTR [eax+0x1c]
10039081:	cmp    ecx,edi
10039083:	mov    DWORD PTR [esp+0x8],edi
10039087:	mov    DWORD PTR [esp+0xc],edi
1003908b:	mov    DWORD PTR [esp+0x10],edi
1003908f:	mov    DWORD PTR [esp+0x14],edi
10039093:	mov    DWORD PTR [esp+0x18],edi
10039097:	mov    DWORD PTR [esp+0x1c],edi
1003909b:	jle    0x100390a9
1003909d:	mov    DWORD PTR [esp+0x8],0x2
100390a5:	mov    DWORD PTR [esp+0x10],ecx
100390a9:	mov    eax,DWORD PTR [eax+0x20]
100390ac:	cmp    eax,edi
100390ae:	jle    0x100390b9
100390b0:	or     DWORD PTR [esp+0x8],0x10
100390b5:	mov    DWORD PTR [esp+0x1c],eax
100390b9:	mov    edx,DWORD PTR [ebx]
100390bb:	cmp    edx,edi
100390bd:	jne    0x100390c4
100390bf:	mov    edx,0x1006bb18
100390c4:	mov    ecx,DWORD PTR [ebp+0x8]
100390c7:	mov    eax,DWORD PTR [ebx+0x4]
100390ca:	push   ecx
100390cb:	push   eax
100390cc:	lea    eax,[esp+0x10]
100390d0:	push   eax
100390d1:	push   esi
100390d2:	xor    ecx,ecx
100390d4:	call   0x1003c0d0
100390d9:	add    esp,0x10
100390dc:	cmp    eax,0xffffffff
100390df:	je     0x10039074
100390e1:	cmp    eax,edi
100390e3:	jl     0x10039074
100390e5:	jne    0x100390ec
100390e7:	mov    eax,0x19
100390ec:	pop    edi
100390ed:	pop    esi
100390ee:	mov    esp,ebp
100390f0:	pop    ebp
100390f1:	ret    0x4
100390f4:	int3   
100390f5:	int3   
100390f6:	int3   
100390f7:	int3   
100390f8:	int3   
100390f9:	int3   
100390fa:	int3   
100390fb:	int3   
100390fc:	int3   
100390fd:	int3   
100390fe:	int3   
100390ff:	int3   
10039100:	push   ebx
10039101:	mov    ebx,DWORD PTR [esp+0x8]
10039105:	push   ebp
10039106:	mov    ebp,DWORD PTR [esp+0x1c]
1003910a:	push   esi
1003910b:	push   edi
1003910c:	push   ebp
1003910d:	mov    esi,eax
1003910f:	call   0x10039060
10039114:	test   eax,eax
10039116:	jne    0x10039121
10039118:	xor    al,al
1003911a:	pop    edi
1003911b:	pop    esi
1003911c:	pop    ebp
1003911d:	pop    ebx
1003911e:	ret    0x14
10039121:	mov    ebx,DWORD PTR [esp+0x20]
10039125:	test   ebx,ebx
10039127:	mov    eax,DWORD PTR [ebp+0x4]
1003912a:	mov    ecx,DWORD PTR [esp+0x18]
1003912e:	mov    DWORD PTR [ecx],eax
10039130:	je     0x10039192
10039132:	cmp    DWORD PTR [esp+0x1c],0x0
10039137:	je     0x10039192
10039139:	mov    edx,DWORD PTR [esi+0x2c]
1003913c:	test   edx,edx
1003913e:	jne    0x10039145
10039140:	or     eax,0xffffffff
10039143:	jmp    0x10039152
10039145:	lea    esi,[esp+0x24]
10039149:	call   0x10041a10
1003914e:	mov    eax,DWORD PTR [esp+0x24]
10039152:	cmp    eax,ebx
10039154:	jl     0x10039118
10039156:	xor    edi,edi
10039158:	test   ebx,ebx
1003915a:	jle    0x10039192
1003915c:	lea    esi,[ebp+0xc]
1003915f:	mov    edx,DWORD PTR [esp+0x14]
10039163:	mov    ebx,DWORD PTR [edx]
10039165:	mov    edx,DWORD PTR [esp+0x1c]
10039169:	mov    edx,DWORD PTR [edx+edi*4]
1003916c:	mov    ecx,DWORD PTR [esi-0x4]
1003916f:	mov    eax,DWORD PTR [esi]
10039171:	mov    ebp,DWORD PTR [edx]
10039173:	sub    eax,ecx
10039175:	push   ebp
10039176:	push   eax
10039177:	mov    eax,DWORD PTR [edx+0x4]
1003917a:	add    ebx,ecx
1003917c:	push   ebx
1003917d:	call   eax
1003917f:	add    esp,0xc
10039182:	test   al,al
10039184:	je     0x10039118
10039186:	add    edi,0x1
10039189:	add    esi,0x8
1003918c:	cmp    edi,DWORD PTR [esp+0x20]
10039190:	jl     0x1003915f
10039192:	pop    edi
10039193:	pop    esi
10039194:	pop    ebp
10039195:	mov    al,0x1
10039197:	pop    ebx
10039198:	ret    0x14
1003919b:	int3   
1003919c:	int3   
1003919d:	int3   
1003919e:	int3   
1003919f:	int3   
100391a0:	xor    eax,eax
100391a2:	cmp    DWORD PTR [esp+0xc],eax
100391a6:	sete   al
100391a9:	ret    
100391aa:	int3   
100391ab:	int3   
100391ac:	int3   
100391ad:	int3   
100391ae:	int3   
100391af:	int3   
100391b0:	push   esi
100391b1:	mov    esi,eax
100391b3:	mov    eax,DWORD PTR [ecx+0xc]
100391b6:	mov    eax,DWORD PTR [eax+edx*4]
100391b9:	mov    edx,DWORD PTR [ecx+0x5c]
100391bc:	add    eax,DWORD PTR [ecx+0x58]
100391bf:	push   edi
100391c0:	mov    edi,DWORD PTR [esp+0xc]
100391c4:	sub    edx,edi
100391c6:	cmp    esi,edx
100391c8:	jle    0x100391cf
100391ca:	pop    edi
100391cb:	xor    eax,eax
100391cd:	pop    esi
100391ce:	ret    
100391cf:	test   BYTE PTR [esp+0x10],0x1
100391d4:	push   ebx
100391d5:	je     0x10039204
100391d7:	test   esi,esi
100391d9:	jle    0x100391fb
100391db:	mov    ecx,DWORD PTR [ecx+0x24]
100391de:	mov    edi,edi
100391e0:	movzx  edx,BYTE PTR [edi]
100391e3:	movzx  ebx,BYTE PTR [eax]
100391e6:	mov    dl,BYTE PTR [edx+ecx*1]
100391e9:	sub    esi,0x1
100391ec:	add    edi,0x1
100391ef:	add    eax,0x1
100391f2:	cmp    BYTE PTR [ebx+ecx*1],dl
100391f5:	jne    0x10039226
100391f7:	test   esi,esi
100391f9:	jg     0x100391e0
100391fb:	pop    ebx
100391fc:	pop    edi
100391fd:	mov    eax,0x1
10039202:	pop    esi
10039203:	ret    
10039204:	test   esi,esi
10039206:	jle    0x100391fb
10039208:	mov    cl,BYTE PTR [eax]
1003920a:	mov    dl,BYTE PTR [edi]
1003920c:	sub    esi,0x1
1003920f:	add    edi,0x1
10039212:	add    eax,0x1
10039215:	cmp    cl,dl
10039217:	jne    0x10039226
10039219:	test   esi,esi
1003921b:	jg     0x10039208
1003921d:	pop    ebx
1003921e:	pop    edi
1003921f:	mov    eax,0x1
10039224:	pop    esi
10039225:	ret    
10039226:	pop    ebx
10039227:	pop    edi
10039228:	xor    eax,eax
1003922a:	pop    esi
1003922b:	ret    
1003922c:	int3   
1003922d:	int3   
1003922e:	int3   
1003922f:	int3   
10039230:	sub    esp,0xe8
10039236:	push   ebx
10039237:	push   ebp
10039238:	push   esi
10039239:	push   edi
1003923a:	mov    edi,DWORD PTR [esp+0x10c]
10039241:	mov    eax,DWORD PTR [edi]
10039243:	cmp    eax,DWORD PTR [edi+0x4]
10039246:	jae    0x1003b196
1003924c:	mov    ebx,DWORD PTR [esp+0x100]
10039253:	mov    ebp,DWORD PTR [esp+0xfc]
1003925a:	mov    ecx,DWORD PTR [esp+0x11c]
10039261:	add    DWORD PTR [edi],0x1
10039264:	cmp    ecx,DWORD PTR [edi+0x8]
10039267:	jae    0x1003b1a9
1003926d:	test   BYTE PTR [esp+0x118],0x2
10039275:	mov    edx,DWORD PTR [esp+0x110]
1003927c:	mov    DWORD PTR [esp+0x28],edx
10039280:	je     0x1003929c
10039282:	mov    eax,DWORD PTR [esp+0x114]
10039289:	lea    ecx,[esp+0x48]
1003928d:	mov    DWORD PTR [esp+0x4c],ebp
10039291:	mov    DWORD PTR [esp+0x48],eax
10039295:	mov    DWORD PTR [esp+0x114],ecx
1003929c:	movzx  eax,BYTE PTR [ebx]
1003929f:	xor    edx,edx
100392a1:	cmp    DWORD PTR [edi+0x48],edx
100392a4:	mov    DWORD PTR [esp+0x1c],edx
100392a8:	mov    DWORD PTR [esp+0x20],edx
100392ac:	mov    DWORD PTR [esp+0x24],eax
100392b0:	je     0x100392cb
100392b2:	cmp    ebp,DWORD PTR [edi+0x5c]
100392b5:	jb     0x100392cb
100392b7:	mov    esi,DWORD PTR [esp+0x104]
100392be:	cmp    ebp,esi
100392c0:	jbe    0x100392d2
100392c2:	mov    DWORD PTR [edi+0x4c],0x1
100392c9:	jmp    0x100392d2
100392cb:	mov    esi,DWORD PTR [esp+0x104]
100392d2:	cmp    eax,0x6f
100392d5:	ja     0x1003bd31
100392db:	movzx  eax,BYTE PTR [eax+0x1003be5c]
100392e2:	jmp    DWORD PTR [eax*4+0x1003bd44]
100392e9:	mov    cl,BYTE PTR [ebx+0x3]
100392ec:	cmp    cl,0x65
100392ef:	lea    eax,[ebx+0x3]
100392f2:	jne    0x1003931c
100392f4:	mov    eax,DWORD PTR [edi+0x7c]
100392f7:	xor    ecx,ecx
100392f9:	test   eax,eax
100392fb:	mov    ch,BYTE PTR [ebx+0x4]
100392fe:	mov    cl,BYTE PTR [ebx+0x5]
10039301:	je     0x1003933d
10039303:	cmp    ecx,0xffff
10039309:	je     0x10039310
1003930b:	cmp    ecx,DWORD PTR [eax+0x4]
1003930e:	jne    0x1003933d
10039310:	mov    ecx,0x1
10039315:	mov    eax,0x3
1003931a:	jmp    0x10039347
1003931c:	cmp    cl,0x64
1003931f:	jne    0x10039362
10039321:	xor    eax,eax
10039323:	mov    ah,BYTE PTR [ebx+0x4]
10039326:	mov    al,BYTE PTR [ebx+0x5]
10039329:	add    eax,eax
1003932b:	cmp    eax,DWORD PTR [esp+0x108]
10039332:	jge    0x1003933d
10039334:	mov    ecx,DWORD PTR [edi+0xc]
10039337:	cmp    DWORD PTR [ecx+eax*4],0x0
1003933b:	jge    0x10039310
1003933d:	xor    ecx,ecx
1003933f:	xor    eax,eax
10039341:	mov    ah,BYTE PTR [ebx+0x1]
10039344:	mov    al,BYTE PTR [ebx+0x2]
10039347:	add    ebx,eax
10039349:	test   ecx,ecx
1003934b:	jne    0x1003af26
10039351:	cmp    BYTE PTR [ebx],0x54
10039354:	je     0x1003af26
1003935a:	add    ebx,0x3
1003935d:	jmp    0x1003929c
10039362:	cmp    cl,0x66
10039365:	jne    0x10039373
10039367:	xor    edx,edx
10039369:	mov    dh,BYTE PTR [ebx+0x1]
1003936c:	mov    dl,BYTE PTR [ebx+0x2]
1003936f:	add    ebx,edx
10039371:	jmp    0x10039351
10039373:	mov    ecx,DWORD PTR [esp+0x11c]
1003937a:	mov    edx,DWORD PTR [esp+0x110]
10039381:	add    ecx,0x1
10039384:	push   ecx
10039385:	mov    ecx,DWORD PTR [esp+0x10c]
1003938c:	push   0x1
1003938e:	push   0x0
10039390:	push   edx
10039391:	push   edi
10039392:	push   ecx
10039393:	push   esi
10039394:	push   eax
10039395:	push   ebp
10039396:	call   0x10039230
1003939b:	add    esp,0x24
1003939e:	cmp    eax,0x1
100393a1:	je     0x1003af04
100393a7:	test   eax,eax
100393a9:	je     0x100393b6
100393ab:	cmp    eax,0xfffffc1c
100393b0:	jne    0x1003bd36
100393b6:	xor    edx,edx
100393b8:	mov    dh,BYTE PTR [ebx+0x1]
100393bb:	mov    dl,BYTE PTR [ebx+0x2]
100393be:	add    ebx,edx
100393c0:	jmp    0x10039351
100393c2:	mov    ebx,DWORD PTR [edi+0x7c]
100393c5:	test   ebx,ebx
100393c7:	je     0x1003b46a
100393cd:	cmp    DWORD PTR [ebx+0x4],0x0
100393d1:	jne    0x1003b46a
100393d7:	mov    eax,DWORD PTR [ebx]
100393d9:	mov    DWORD PTR [edi+0x7c],eax
100393dc:	mov    ecx,DWORD PTR [ebx+0x14]
100393df:	mov    edx,DWORD PTR [ebx+0x10]
100393e2:	mov    eax,DWORD PTR [edi+0xc]
100393e5:	add    ecx,ecx
100393e7:	add    ecx,ecx
100393e9:	push   ecx
100393ea:	push   edx
100393eb:	push   eax
100393ec:	call   0x10044410
100393f1:	mov    ecx,DWORD PTR [ebx+0xc]
100393f4:	mov    edx,DWORD PTR [esp+0x34]
100393f8:	mov    ebx,DWORD PTR [ebx+0x8]
100393fb:	add    esp,0xc
100393fe:	mov    DWORD PTR [esp+0x104],ecx
10039405:	mov    DWORD PTR [esp+0x110],edx
1003940c:	jmp    0x1003929c
10039411:	movzx  eax,BYTE PTR [ebx+0x1]
10039415:	mov    DWORD PTR [esp+0x110],eax
1003941c:	add    ebx,0x2
1003941f:	jmp    0x1003929c
10039424:	mov    esi,DWORD PTR [esp+0x11c]
1003942b:	add    esi,0x1
1003942e:	mov    ecx,DWORD PTR [esp+0x110]
10039435:	mov    edx,DWORD PTR [esp+0x108]
1003943c:	mov    eax,DWORD PTR [esp+0x104]
10039443:	push   esi
10039444:	push   0x0
10039446:	push   0x0
10039448:	push   ecx
10039449:	push   edi
1003944a:	push   edx
1003944b:	push   eax
1003944c:	lea    ecx,[ebx+0x3]
1003944f:	push   ecx
10039450:	push   ebp
10039451:	call   0x10039230
10039456:	add    esp,0x24
10039459:	cmp    eax,0x1
1003945c:	je     0x1003947c
1003945e:	test   eax,eax
10039460:	je     0x1003946d
10039462:	cmp    eax,0xfffffc1c
10039467:	jne    0x1003bd36
1003946d:	xor    edx,edx
1003946f:	mov    dh,BYTE PTR [ebx+0x1]
10039472:	mov    dl,BYTE PTR [ebx+0x2]
10039475:	add    ebx,edx
10039477:	cmp    BYTE PTR [ebx],0x54
1003947a:	je     0x1003942e
1003947c:	cmp    BYTE PTR [ebx],0x55
1003947f:	je     0x1003b40f
10039485:	test   BYTE PTR [esp+0x118],0x1
1003948d:	jne    0x1003b484
10039493:	xor    eax,eax
10039495:	mov    ah,BYTE PTR [ebx+0x1]
10039498:	mov    al,BYTE PTR [ebx+0x2]
1003949b:	add    ebx,eax
1003949d:	cmp    BYTE PTR [ebx],0x54
100394a0:	je     0x10039493
100394a2:	mov    ecx,DWORD PTR [edi+0x68]
100394a5:	add    ebx,0x3
100394a8:	mov    DWORD PTR [esp+0x108],ecx
100394af:	jmp    0x1003929c
100394b4:	mov    esi,DWORD PTR [esp+0x11c]
100394bb:	add    esi,0x1
100394be:	mov    edx,DWORD PTR [esp+0x110]
100394c5:	mov    eax,DWORD PTR [esp+0x108]
100394cc:	mov    ecx,DWORD PTR [esp+0x104]
100394d3:	push   esi
100394d4:	push   0x0
100394d6:	push   0x0
100394d8:	push   edx
100394d9:	push   edi
100394da:	push   eax
100394db:	push   ecx
100394dc:	lea    edx,[ebx+0x3]
100394df:	push   edx
100394e0:	push   ebp
100394e1:	call   0x10039230
100394e6:	add    esp,0x24
100394e9:	cmp    eax,0x1
100394ec:	je     0x1003b40f
100394f2:	test   eax,eax
100394f4:	je     0x10039501
100394f6:	cmp    eax,0xfffffc1c
100394fb:	jne    0x1003bd36
10039501:	xor    eax,eax
10039503:	mov    ah,BYTE PTR [ebx+0x1]
10039506:	mov    al,BYTE PTR [ebx+0x2]
10039509:	add    ebx,eax
1003950b:	cmp    BYTE PTR [ebx],0x54
1003950e:	je     0x100394be
10039510:	test   BYTE PTR [esp+0x118],0x1
10039518:	jne    0x1003b484
1003951e:	add    ebx,0x3
10039521:	jmp    0x1003929c
10039526:	xor    ecx,ecx
10039528:	mov    ch,BYTE PTR [ebx+0x1]
1003952b:	mov    cl,BYTE PTR [ebx+0x2]
1003952e:	sub    ebp,ecx
10039530:	cmp    ebp,DWORD PTR [edi+0x58]
10039533:	jb     0x1003b40f
10039539:	add    ebx,0x3
1003953c:	jmp    0x1003929c
10039541:	mov    ecx,DWORD PTR ds:0x1007fd30
10039547:	test   ecx,ecx
10039549:	je     0x100395d5
1003954f:	movzx  edx,BYTE PTR [ebx+0x1]
10039553:	mov    eax,DWORD PTR [edi+0xc]
10039556:	mov    DWORD PTR [esp+0x58],eax
1003955a:	mov    eax,DWORD PTR [edi+0x58]
1003955d:	mov    DWORD PTR [esp+0x54],edx
10039561:	mov    edx,DWORD PTR [edi+0x5c]
10039564:	sub    edx,eax
10039566:	mov    DWORD PTR [esp+0x60],edx
1003956a:	sub    esi,eax
1003956c:	mov    DWORD PTR [esp+0x5c],eax
10039570:	mov    edx,ebp
10039572:	sub    edx,eax
10039574:	xor    eax,eax
10039576:	mov    ah,BYTE PTR [ebx+0x2]
10039579:	mov    DWORD PTR [esp+0x68],edx
1003957d:	xor    edx,edx
1003957f:	mov    dh,BYTE PTR [ebx+0x4]
10039582:	mov    DWORD PTR [esp+0x50],0x1
1003958a:	mov    DWORD PTR [esp+0x64],esi
1003958e:	mov    al,BYTE PTR [ebx+0x3]
10039591:	mov    dl,BYTE PTR [ebx+0x5]
10039594:	mov    DWORD PTR [esp+0x78],eax
10039598:	mov    eax,DWORD PTR [esp+0x108]
1003959f:	mov    DWORD PTR [esp+0x7c],edx
100395a3:	cdq    
100395a4:	sub    eax,edx
100395a6:	mov    edx,DWORD PTR [edi+0x80]
100395ac:	sar    eax,1
100395ae:	mov    DWORD PTR [esp+0x6c],eax
100395b2:	mov    eax,DWORD PTR [edi+0x6c]
100395b5:	mov    DWORD PTR [esp+0x70],eax
100395b9:	lea    eax,[esp+0x50]
100395bd:	push   eax
100395be:	mov    DWORD PTR [esp+0x78],edx
100395c2:	call   ecx
100395c4:	add    esp,0x4
100395c7:	test   eax,eax
100395c9:	jg     0x1003b40f
100395cf:	jl     0x1003bd36
100395d5:	add    ebx,0x6
100395d8:	jmp    0x1003929c
100395dd:	mov    esi,DWORD PTR [esp+0x11c]
100395e4:	mov    DWORD PTR [esp+0x1c],ebx
100395e8:	mov    DWORD PTR [esp+0x24],ebp
100395ec:	add    esi,0x1
100395ef:	mov    ecx,DWORD PTR [esp+0x114]
100395f6:	mov    edx,DWORD PTR [esp+0x110]
100395fd:	mov    eax,DWORD PTR [esp+0x108]
10039604:	push   esi
10039605:	push   0x0
10039607:	push   ecx
10039608:	mov    ecx,DWORD PTR [esp+0x110]
1003960f:	push   edx
10039610:	push   edi
10039611:	push   eax
10039612:	push   ecx
10039613:	lea    edx,[ebx+0x3]
10039616:	push   edx
10039617:	push   ebp
10039618:	call   0x10039230
1003961d:	add    esp,0x24
10039620:	cmp    eax,0x1
10039623:	je     0x10039643
10039625:	test   eax,eax
10039627:	je     0x10039634
10039629:	cmp    eax,0xfffffc1c
1003962e:	jne    0x1003bd36
10039634:	xor    eax,eax
10039636:	mov    ah,BYTE PTR [ebx+0x1]
10039639:	mov    al,BYTE PTR [ebx+0x2]
1003963c:	add    ebx,eax
1003963e:	cmp    BYTE PTR [ebx],0x54
10039641:	je     0x100395ef
10039643:	mov    al,BYTE PTR [ebx]
10039645:	cmp    al,0x5d
10039647:	je     0x10039651
10039649:	cmp    al,0x54
1003964b:	jne    0x1003b40f
10039651:	xor    ecx,ecx
10039653:	mov    ch,BYTE PTR [ebx+0x1]
10039656:	mov    cl,BYTE PTR [ebx+0x2]
10039659:	add    ebx,ecx
1003965b:	cmp    BYTE PTR [ebx],0x54
1003965e:	je     0x10039651
10039660:	cmp    BYTE PTR [ebx],0x55
10039663:	mov    ecx,DWORD PTR [edi+0x68]
10039666:	mov    ebp,DWORD PTR [edi+0x64]
10039669:	mov    DWORD PTR [esp+0x108],ecx
10039670:	je     0x1003967c
10039672:	cmp    ebp,DWORD PTR [esp+0x24]
10039676:	jne    0x1003b041
1003967c:	add    ebx,0x3
1003967f:	jmp    0x1003929c
10039684:	xor    edx,edx
10039686:	mov    dh,BYTE PTR [ebx+0x1]
10039689:	mov    dl,BYTE PTR [ebx+0x2]
1003968c:	add    ebx,edx
1003968e:	cmp    BYTE PTR [ebx],0x54
10039691:	je     0x10039684
10039693:	jmp    0x1003929c
10039698:	mov    eax,DWORD PTR [esp+0x11c]
1003969f:	mov    ecx,DWORD PTR [esp+0x114]
100396a6:	mov    edx,DWORD PTR [esp+0x110]
100396ad:	add    eax,0x1
100396b0:	push   eax
100396b1:	mov    eax,DWORD PTR [esp+0x10c]
100396b8:	push   0x0
100396ba:	push   ecx
100396bb:	push   edx
100396bc:	push   edi
100396bd:	push   eax
100396be:	push   esi
100396bf:	add    ebx,0x1
100396c2:	push   ebx
100396c3:	push   ebp
100396c4:	call   0x10039230
100396c9:	add    esp,0x24
100396cc:	test   eax,eax
100396ce:	jne    0x1003bd36
100396d4:	xor    ecx,ecx
100396d6:	mov    ch,BYTE PTR [ebx+0x1]
100396d9:	mov    cl,BYTE PTR [ebx+0x2]
100396dc:	add    ebx,ecx
100396de:	cmp    BYTE PTR [ebx],0x54
100396e1:	je     0x100396d4
100396e3:	add    ebx,0x3
100396e6:	jmp    0x1003929c
100396eb:	add    ebx,0x1
100396ee:	mov    eax,ebx
100396f0:	xor    edx,edx
100396f2:	mov    dh,BYTE PTR [eax+0x1]
100396f5:	mov    dl,BYTE PTR [eax+0x2]
100396f8:	add    eax,edx
100396fa:	cmp    BYTE PTR [eax],0x54
100396fd:	je     0x100396f0
100396ff:	mov    ecx,DWORD PTR [esp+0x11c]
10039706:	mov    edx,DWORD PTR [esp+0x114]
1003970d:	add    ecx,0x1
10039710:	push   ecx
10039711:	mov    ecx,DWORD PTR [esp+0x114]
10039718:	push   0x0
1003971a:	push   edx
1003971b:	mov    edx,DWORD PTR [esp+0x114]
10039722:	push   ecx
10039723:	push   edi
10039724:	push   edx
10039725:	push   esi
10039726:	add    eax,0x3
10039729:	push   eax
1003972a:	push   ebp
1003972b:	call   0x10039230
10039730:	add    esp,0x24
10039733:	test   eax,eax
10039735:	jne    0x1003bd36
1003973b:	jmp    0x1003929c
10039740:	add    ebx,0x1
10039743:	xor    eax,eax
10039745:	mov    ah,BYTE PTR [ebx+0x1]
10039748:	mov    al,BYTE PTR [ebx+0x2]
1003974b:	add    ebx,eax
1003974d:	cmp    BYTE PTR [ebx],0x54
10039750:	je     0x10039743
10039752:	add    ebx,0x3
10039755:	jmp    0x1003929c
1003975a:	xor    edx,edx
1003975c:	mov    dh,BYTE PTR [ebx+0x1]
1003975f:	mov    ecx,ebx
10039761:	mov    dl,BYTE PTR [ebx+0x2]
10039764:	sub    ecx,edx
10039766:	mov    al,BYTE PTR [ecx]
10039768:	cmp    al,0x61
1003976a:	mov    DWORD PTR [esp+0x1c],ecx
1003976e:	jb     0x10039785
10039770:	mov    esi,DWORD PTR [esp+0x114]
10039777:	mov    edx,DWORD PTR [esi+0x4]
1003977a:	mov    esi,DWORD PTR [esi]
1003977c:	mov    DWORD PTR [esp+0x114],esi
10039783:	jmp    0x10039787
10039785:	xor    edx,edx
10039787:	cmp    al,0x58
10039789:	je     0x1003b672
1003978f:	cmp    al,0x59
10039791:	je     0x1003b672
10039797:	cmp    al,0x5a
10039799:	je     0x1003b672
1003979f:	cmp    al,0x5b
100397a1:	je     0x1003b672
100397a7:	cmp    al,0x5d
100397a9:	je     0x1003b672
100397af:	cmp    al,0x5f
100397b1:	je     0x100397bb
100397b3:	cmp    al,0x62
100397b5:	jne    0x10039856
100397bb:	xor    eax,eax
100397bd:	mov    ah,BYTE PTR [ecx+0x3]
100397c0:	mov    al,BYTE PTR [ecx+0x4]
100397c3:	mov    ecx,eax
100397c5:	lea    eax,[ecx+ecx*1]
100397c8:	cmp    eax,DWORD PTR [edi+0x14]
100397cb:	mov    DWORD PTR [esp+0x20],ecx
100397cf:	mov    DWORD PTR [edi+0x6c],ecx
100397d2:	jl     0x100397dd
100397d4:	mov    DWORD PTR [edi+0x2c],0x1
100397db:	jmp    0x10039810
100397dd:	mov    esi,DWORD PTR [edi+0x10]
100397e0:	mov    ecx,DWORD PTR [edi+0xc]
100397e3:	sub    esi,DWORD PTR [esp+0x20]
100397e7:	mov    esi,DWORD PTR [ecx+esi*4]
100397ea:	mov    DWORD PTR [ecx+eax*4],esi
100397ed:	mov    esi,DWORD PTR [edi+0xc]
100397f0:	mov    ecx,ebp
100397f2:	sub    ecx,DWORD PTR [edi+0x58]
100397f5:	cmp    DWORD PTR [esp+0x108],eax
100397fc:	mov    DWORD PTR [esi+eax*4+0x4],ecx
10039800:	mov    ecx,DWORD PTR [esp+0x20]
10039804:	jg     0x10039810
10039806:	add    eax,0x2
10039809:	mov    DWORD PTR [esp+0x108],eax
10039810:	mov    esi,DWORD PTR [edi+0x7c]
10039813:	test   esi,esi
10039815:	je     0x10039856
10039817:	cmp    DWORD PTR [esi+0x4],ecx
1003981a:	jne    0x10039856
1003981c:	mov    edx,DWORD PTR [esi]
1003981e:	mov    DWORD PTR [edi+0x7c],edx
10039821:	mov    ecx,DWORD PTR [esi+0x14]
10039824:	mov    eax,DWORD PTR [esi+0xc]
10039827:	mov    edx,DWORD PTR [esi+0x10]
1003982a:	add    ecx,ecx
1003982c:	add    ecx,ecx
1003982e:	push   ecx
1003982f:	mov    DWORD PTR [esp+0x108],eax
10039836:	mov    eax,DWORD PTR [edi+0xc]
10039839:	push   edx
1003983a:	push   eax
1003983b:	call   0x10043ed0
10039840:	mov    ecx,DWORD PTR [esp+0x34]
10039844:	mov    ebx,DWORD PTR [esi+0x8]
10039847:	add    esp,0xc
1003984a:	mov    DWORD PTR [esp+0x110],ecx
10039851:	jmp    0x1003929c
10039856:	cmp    BYTE PTR [ebx],0x55
10039859:	mov    esi,DWORD PTR [esp+0x28]
1003985d:	mov    DWORD PTR [esp+0x110],esi
10039864:	je     0x1003986e
10039866:	cmp    ebp,edx
10039868:	jne    0x1003b0d5
1003986e:	add    ebx,0x3
10039871:	jmp    0x1003929c
10039876:	cmp    DWORD PTR [edi+0x30],0x0
1003987a:	je     0x10039885
1003987c:	cmp    ebp,DWORD PTR [edi+0x58]
1003987f:	je     0x1003b40f
10039885:	test   BYTE PTR [esp+0x110],0x2
1003988d:	je     0x10039906
1003988f:	mov    eax,DWORD PTR [edi+0x58]
10039892:	cmp    ebp,eax
10039894:	je     0x100398fe
10039896:	cmp    ebp,DWORD PTR [edi+0x5c]
10039899:	je     0x1003b40f
1003989f:	mov    ecx,DWORD PTR [edi+0x18]
100398a2:	test   ecx,ecx
100398a4:	je     0x100398d0
100398a6:	cmp    ebp,eax
100398a8:	jbe    0x1003b40f
100398ae:	push   0x0
100398b0:	push   ecx
100398b1:	lea    edx,[edi+0x1c]
100398b4:	mov    esi,eax
100398b6:	mov    ecx,ebp
100398b8:	call   0x10041b60
100398bd:	add    esp,0x8
100398c0:	test   eax,eax
100398c2:	je     0x1003b40f
100398c8:	add    ebx,0x1
100398cb:	jmp    0x1003929c
100398d0:	mov    ecx,DWORD PTR [edi+0x1c]
100398d3:	lea    edx,[ecx+eax*1]
100398d6:	cmp    ebp,edx
100398d8:	jb     0x1003b40f
100398de:	mov    esi,ebp
100398e0:	sub    esi,ecx
100398e2:	mov    al,BYTE PTR [esi]
100398e4:	cmp    al,BYTE PTR [edi+0x20]
100398e7:	jne    0x1003b40f
100398ed:	cmp    ecx,0x1
100398f0:	je     0x100398fe
100398f2:	mov    cl,BYTE PTR [esi+0x1]
100398f5:	cmp    cl,BYTE PTR [edi+0x21]
100398f8:	jne    0x1003b40f
100398fe:	add    ebx,0x1
10039901:	jmp    0x1003929c
10039906:	cmp    ebp,DWORD PTR [edi+0x58]
10039909:	jne    0x1003b40f
1003990f:	add    ebx,0x1
10039912:	jmp    0x1003929c
10039917:	mov    edx,DWORD PTR [edi+0x70]
1003991a:	add    edx,DWORD PTR [edi+0x58]
1003991d:	cmp    ebp,edx
1003991f:	jne    0x1003b40f
10039925:	add    ebx,0x1
10039928:	jmp    0x1003929c
1003992d:	mov    DWORD PTR [esp+0x104],ebp
10039934:	add    ebx,0x1
10039937:	jmp    0x1003929c
1003993c:	test   BYTE PTR [esp+0x110],0x2
10039944:	je     0x100399ba
10039946:	mov    eax,DWORD PTR [edi+0x5c]
10039949:	cmp    ebp,eax
1003994b:	jae    0x100399a8
1003994d:	mov    ecx,DWORD PTR [edi+0x18]
10039950:	test   ecx,ecx
10039952:	je     0x10039982
10039954:	mov    edi,DWORD PTR [esp+0x10c]
1003995b:	push   ecx
1003995c:	add    edi,0x1c
1003995f:	xor    edx,edx
10039961:	mov    ecx,ebp
10039963:	call   0x10041aa0
10039968:	add    esp,0x4
1003996b:	test   eax,eax
1003996d:	je     0x1003b40f
10039973:	mov    edi,DWORD PTR [esp+0x10c]
1003997a:	add    ebx,0x1
1003997d:	jmp    0x1003929c
10039982:	mov    ecx,DWORD PTR [edi+0x1c]
10039985:	sub    eax,ecx
10039987:	cmp    ebp,eax
10039989:	ja     0x1003b40f
1003998f:	mov    al,BYTE PTR [ebp+0x0]
10039992:	cmp    al,BYTE PTR [edi+0x20]
10039995:	jne    0x1003b40f
1003999b:	cmp    ecx,0x1
1003999e:	je     0x100399b2
100399a0:	mov    cl,BYTE PTR [ebp+0x1]
100399a3:	cmp    cl,BYTE PTR [edi+0x21]
100399a6:	jmp    0x100399ac
100399a8:	cmp    DWORD PTR [edi+0x34],0x0
100399ac:	jne    0x1003b40f
100399b2:	add    ebx,0x1
100399b5:	jmp    0x1003929c
100399ba:	cmp    DWORD PTR [edi+0x34],0x0
100399be:	jne    0x1003b40f
100399c4:	cmp    DWORD PTR [edi+0x40],0x0
100399c8:	jne    0x10039a50
100399ce:	mov    eax,DWORD PTR [edi+0x5c]
100399d1:	cmp    ebp,eax
100399d3:	je     0x10039a48
100399d5:	mov    ecx,DWORD PTR [edi+0x18]
100399d8:	test   ecx,ecx
100399da:	je     0x10039a0e
100399dc:	cmp    ebp,eax
100399de:	jae    0x1003b40f
100399e4:	mov    esi,DWORD PTR [esp+0x10c]
100399eb:	add    esi,0x1c
100399ee:	push   ecx
100399ef:	xor    edx,edx
100399f1:	mov    edi,esi
100399f3:	mov    ecx,ebp
100399f5:	call   0x10041aa0
100399fa:	add    esp,0x4
100399fd:	test   eax,eax
100399ff:	je     0x1003b40f
10039a05:	mov    edi,DWORD PTR [esp+0x10c]
10039a0c:	jmp    0x10039a3b
10039a0e:	mov    ecx,DWORD PTR [edi+0x1c]
10039a11:	lea    esi,[edi+0x1c]
10039a14:	sub    eax,ecx
10039a16:	cmp    ebp,eax
10039a18:	ja     0x1003b40f
10039a1e:	mov    dl,BYTE PTR [ebp+0x0]
10039a21:	cmp    dl,BYTE PTR [edi+0x20]
10039a24:	jne    0x1003b40f
10039a2a:	cmp    ecx,0x1
10039a2d:	je     0x10039a3b
10039a2f:	mov    al,BYTE PTR [ebp+0x1]
10039a32:	cmp    al,BYTE PTR [edi+0x21]
10039a35:	jne    0x1003b40f
10039a3b:	mov    ecx,DWORD PTR [edi+0x5c]
10039a3e:	sub    ecx,DWORD PTR [esi]
10039a40:	cmp    ebp,ecx
10039a42:	jne    0x1003b40f
10039a48:	add    ebx,0x1
10039a4b:	jmp    0x1003929c
10039a50:	cmp    ebp,DWORD PTR [edi+0x5c]
10039a53:	jb     0x1003b40f
10039a59:	add    ebx,0x1
10039a5c:	jmp    0x1003929c
10039a61:	cmp    ebp,DWORD PTR [edi+0x58]
10039a64:	je     0x10039a7a
10039a66:	movzx  edx,BYTE PTR [ebp-0x1]
10039a6a:	mov    eax,DWORD PTR [edi+0x28]
10039a6d:	test   BYTE PTR [edx+eax*1],0x10
10039a71:	je     0x10039a7a
10039a73:	mov    esi,0x1
10039a78:	jmp    0x10039a7c
10039a7a:	xor    esi,esi
10039a7c:	cmp    ebp,DWORD PTR [edi+0x5c]
10039a7f:	jae    0x10039a95
10039a81:	movzx  ecx,BYTE PTR [ebp+0x0]
10039a85:	mov    edx,DWORD PTR [edi+0x28]
10039a88:	test   BYTE PTR [ecx+edx*1],0x10
10039a8c:	je     0x10039a95
10039a8e:	mov    eax,0x1
10039a93:	jmp    0x10039a97
10039a95:	xor    eax,eax
10039a97:	mov    cl,BYTE PTR [ebx]
10039a99:	add    ebx,0x1
10039a9c:	cmp    cl,0x5
10039a9f:	jne    0x10039aac
10039aa1:	xor    edx,edx
10039aa3:	cmp    eax,esi
10039aa5:	sete   dl
10039aa8:	mov    eax,edx
10039aaa:	jmp    0x10039ab5
10039aac:	xor    ecx,ecx
10039aae:	cmp    eax,esi
10039ab0:	setne  cl
10039ab3:	mov    eax,ecx
10039ab5:	test   eax,eax
10039ab7:	je     0x1003929c
10039abd:	xor    eax,eax
10039abf:	pop    edi
10039ac0:	pop    esi
10039ac1:	pop    ebp
10039ac2:	pop    ebx
10039ac3:	add    esp,0xe8
10039ac9:	ret    
10039aca:	mov    ecx,DWORD PTR [edi+0x18]
10039acd:	test   ecx,ecx
10039acf:	je     0x10039b00
10039ad1:	mov    eax,DWORD PTR [edi+0x5c]
10039ad4:	cmp    ebp,eax
10039ad6:	jae    0x10039b29
10039ad8:	mov    edi,DWORD PTR [esp+0x10c]
10039adf:	push   ecx
10039ae0:	add    edi,0x1c
10039ae3:	xor    edx,edx
10039ae5:	mov    ecx,ebp
10039ae7:	call   0x10041aa0
10039aec:	add    esp,0x4
10039aef:	test   eax,eax
10039af1:	jne    0x1003b40f
10039af7:	mov    edi,DWORD PTR [esp+0x10c]
10039afe:	jmp    0x10039b29
10039b00:	mov    eax,DWORD PTR [edi+0x1c]
10039b03:	mov    edx,DWORD PTR [edi+0x5c]
10039b06:	sub    edx,eax
10039b08:	cmp    ebp,edx
10039b0a:	ja     0x10039b29
10039b0c:	mov    cl,BYTE PTR [ebp+0x0]
10039b0f:	cmp    cl,BYTE PTR [edi+0x20]
10039b12:	jne    0x10039b29
10039b14:	cmp    eax,0x1
10039b17:	je     0x1003b40f
10039b1d:	mov    dl,BYTE PTR [ebp+0x1]
10039b20:	cmp    dl,BYTE PTR [edi+0x21]
10039b23:	je     0x1003b40f
10039b29:	mov    eax,ebp
10039b2b:	add    ebp,0x1
10039b2e:	cmp    eax,DWORD PTR [edi+0x5c]
10039b31:	jae    0x1003b40f
10039b37:	add    ebx,0x1
10039b3a:	jmp    0x1003929c
10039b3f:	mov    ecx,ebp
10039b41:	add    ebp,0x1
10039b44:	cmp    ecx,DWORD PTR [edi+0x5c]
10039b47:	jae    0x1003b40f
10039b4d:	add    ebx,0x1
10039b50:	jmp    0x1003929c
10039b55:	cmp    ebp,DWORD PTR [edi+0x5c]
10039b58:	jae    0x1003b40f
10039b5e:	movzx  eax,BYTE PTR [ebp+0x0]
10039b62:	mov    edx,DWORD PTR [edi+0x28]
10039b65:	add    ebp,0x1
10039b68:	test   BYTE PTR [eax+edx*1],0x4
10039b6c:	jne    0x1003b40f
10039b72:	add    ebx,0x1
10039b75:	jmp    0x1003929c
10039b7a:	cmp    ebp,DWORD PTR [edi+0x5c]
10039b7d:	jae    0x1003b40f
10039b83:	movzx  eax,BYTE PTR [ebp+0x0]
10039b87:	mov    ecx,DWORD PTR [edi+0x28]
10039b8a:	add    ebp,0x1
10039b8d:	test   BYTE PTR [eax+ecx*1],0x4
10039b91:	je     0x1003b40f
10039b97:	add    ebx,0x1
10039b9a:	jmp    0x1003929c
10039b9f:	cmp    ebp,DWORD PTR [edi+0x5c]
10039ba2:	jae    0x1003b40f
10039ba8:	movzx  eax,BYTE PTR [ebp+0x0]
10039bac:	mov    edx,DWORD PTR [edi+0x28]
10039baf:	add    ebp,0x1
10039bb2:	test   BYTE PTR [eax+edx*1],0x1
10039bb6:	jne    0x1003b40f
10039bbc:	add    ebx,0x1
10039bbf:	jmp    0x1003929c
10039bc4:	cmp    ebp,DWORD PTR [edi+0x5c]
10039bc7:	jae    0x1003b40f
10039bcd:	movzx  eax,BYTE PTR [ebp+0x0]
10039bd1:	mov    ecx,DWORD PTR [edi+0x28]
10039bd4:	add    ebp,0x1
10039bd7:	test   BYTE PTR [eax+ecx*1],0x1
10039bdb:	je     0x1003b40f
10039be1:	add    ebx,0x1
10039be4:	jmp    0x1003929c
10039be9:	cmp    ebp,DWORD PTR [edi+0x5c]
10039bec:	jae    0x1003b40f
10039bf2:	movzx  eax,BYTE PTR [ebp+0x0]
10039bf6:	mov    edx,DWORD PTR [edi+0x28]
10039bf9:	add    ebp,0x1
10039bfc:	test   BYTE PTR [eax+edx*1],0x10
10039c00:	jne    0x1003b40f
10039c06:	add    ebx,0x1
10039c09:	jmp    0x1003929c
10039c0e:	cmp    ebp,DWORD PTR [edi+0x5c]
10039c11:	jae    0x1003b40f
10039c17:	movzx  eax,BYTE PTR [ebp+0x0]
10039c1b:	mov    ecx,DWORD PTR [edi+0x28]
10039c1e:	add    ebp,0x1
10039c21:	test   BYTE PTR [eax+ecx*1],0x10
10039c25:	je     0x1003b40f
10039c2b:	add    ebx,0x1
10039c2e:	jmp    0x1003929c
10039c33:	mov    ecx,DWORD PTR [edi+0x5c]
10039c36:	cmp    ebp,ecx
10039c38:	jae    0x1003b40f
10039c3e:	movzx  eax,BYTE PTR [ebp+0x0]
10039c42:	add    ebp,0x1
10039c45:	cmp    eax,0xd
10039c48:	ja     0x10039c71
10039c4a:	je     0x10039c5c
10039c4c:	cmp    eax,0xa
10039c4f:	je     0x10039c98
10039c51:	jbe    0x1003b40f
10039c57:	cmp    eax,0xc
10039c5a:	jmp    0x10039c88
10039c5c:	cmp    ebp,ecx
10039c5e:	jae    0x10039c98
10039c60:	cmp    BYTE PTR [ebp+0x0],0xa
10039c64:	jne    0x10039c98
10039c66:	add    ebp,0x1
10039c69:	add    ebx,0x1
10039c6c:	jmp    0x1003929c
10039c71:	cmp    eax,0x85
10039c76:	je     0x10039c8e
10039c78:	cmp    eax,0x2027
10039c7d:	jbe    0x1003b40f
10039c83:	cmp    eax,0x2029
10039c88:	ja     0x1003b40f
10039c8e:	cmp    DWORD PTR [edi+0x50],0x0
10039c92:	jne    0x1003b40f
10039c98:	add    ebx,0x1
10039c9b:	jmp    0x1003929c
10039ca0:	cmp    ebp,DWORD PTR [edi+0x5c]
10039ca3:	jae    0x1003b40f
10039ca9:	movzx  eax,BYTE PTR [ebp+0x0]
10039cad:	add    ebp,0x1
10039cb0:	cmp    eax,0x180e
10039cb5:	ja     0x10039cdf
10039cb7:	je     0x1003b40f
10039cbd:	cmp    eax,0xa0
10039cc2:	ja     0x10039cd8
10039cc4:	je     0x1003b40f
10039cca:	cmp    eax,0x9
10039ccd:	je     0x1003b40f
10039cd3:	cmp    eax,0x20
10039cd6:	jmp    0x10039d0a
10039cd8:	cmp    eax,0x1680
10039cdd:	jmp    0x10039d0a
10039cdf:	cmp    eax,0x205f
10039ce4:	ja     0x10039d05
10039ce6:	je     0x1003b40f
10039cec:	cmp    eax,0x2000
10039cf1:	jb     0x10039d10
10039cf3:	cmp    eax,0x200a
10039cf8:	jbe    0x1003b40f
10039cfe:	cmp    eax,0x202f
10039d03:	jmp    0x10039d0a
10039d05:	cmp    eax,0x3000
10039d0a:	je     0x1003b40f
10039d10:	add    ebx,0x1
10039d13:	jmp    0x1003929c
10039d18:	cmp    ebp,DWORD PTR [edi+0x5c]
10039d1b:	jae    0x1003b40f
10039d21:	movzx  eax,BYTE PTR [ebp+0x0]
10039d25:	add    ebp,0x1
10039d28:	cmp    eax,0x180e
10039d2d:	ja     0x10039d4b
10039d2f:	je     0x10039d78
10039d31:	cmp    eax,0xa0
10039d36:	ja     0x10039d44
10039d38:	je     0x10039d78
10039d3a:	cmp    eax,0x9
10039d3d:	je     0x10039d78
10039d3f:	cmp    eax,0x20
10039d42:	jmp    0x10039d72
10039d44:	cmp    eax,0x1680
10039d49:	jmp    0x10039d72
10039d4b:	cmp    eax,0x205f
10039d50:	ja     0x10039d6d
10039d52:	je     0x10039d78
10039d54:	cmp    eax,0x2000
10039d59:	jb     0x1003b40f
10039d5f:	cmp    eax,0x200a
10039d64:	jbe    0x10039d78
10039d66:	cmp    eax,0x202f
10039d6b:	jmp    0x10039d72
10039d6d:	cmp    eax,0x3000
10039d72:	jne    0x1003b40f
10039d78:	add    ebx,0x1
10039d7b:	jmp    0x1003929c
10039d80:	cmp    ebp,DWORD PTR [edi+0x5c]
10039d83:	jae    0x1003b40f
10039d89:	movzx  eax,BYTE PTR [ebp+0x0]
10039d8d:	add    ebp,0x1
10039d90:	cmp    eax,0x85
10039d95:	ja     0x10039da7
10039d97:	je     0x1003b40f
10039d9d:	cmp    eax,0xa
10039da0:	jb     0x10039db9
10039da2:	cmp    eax,0xd
10039da5:	jmp    0x10039db3
10039da7:	cmp    eax,0x2028
10039dac:	jb     0x10039db9
10039dae:	cmp    eax,0x2029
10039db3:	jbe    0x1003b40f
10039db9:	add    ebx,0x1
10039dbc:	jmp    0x1003929c
10039dc1:	cmp    ebp,DWORD PTR [edi+0x5c]
10039dc4:	jae    0x1003b40f
10039dca:	movzx  eax,BYTE PTR [ebp+0x0]
10039dce:	add    ebp,0x1
10039dd1:	cmp    eax,0x85
10039dd6:	ja     0x10039de8
10039dd8:	je     0x10039dfe
10039dda:	cmp    eax,0xa
10039ddd:	jb     0x1003b40f
10039de3:	cmp    eax,0xd
10039de6:	jmp    0x10039df8
10039de8:	cmp    eax,0x2028
10039ded:	jb     0x1003b40f
10039df3:	cmp    eax,0x2029
10039df8:	ja     0x1003b40f
10039dfe:	add    ebx,0x1
10039e01:	jmp    0x1003929c
10039e06:	xor    eax,eax
10039e08:	mov    ah,BYTE PTR [ebx+0x1]
10039e0b:	add    ebx,0x3
10039e0e:	mov    al,BYTE PTR [ebx-0x1]
10039e11:	add    eax,eax
10039e13:	cmp    eax,DWORD PTR [esp+0x108]
10039e1a:	mov    DWORD PTR [esp+0x24],eax
10039e1e:	jge    0x10039e34
10039e20:	mov    edx,DWORD PTR [edi+0xc]
10039e23:	mov    ecx,DWORD PTR [edx+eax*4]
10039e26:	test   ecx,ecx
10039e28:	lea    eax,[edx+eax*4]
10039e2b:	jl     0x10039e34
10039e2d:	mov    esi,DWORD PTR [eax+0x4]
10039e30:	sub    esi,ecx
10039e32:	jmp    0x10039e46
10039e34:	cmp    DWORD PTR [edi+0x3c],0x0
10039e38:	je     0x10039e3e
10039e3a:	xor    esi,esi
10039e3c:	jmp    0x10039e46
10039e3e:	mov    esi,DWORD PTR [edi+0x5c]
10039e41:	sub    esi,ebp
10039e43:	add    esi,0x1
10039e46:	mov    cl,BYTE PTR [ebx]
10039e48:	movzx  eax,cl
10039e4b:	lea    edx,[eax-0x46]
10039e4e:	cmp    edx,0x7
10039e51:	ja     0x10039ff7
10039e57:	movzx  edx,BYTE PTR [edx+0x1003bed4]
10039e5e:	jmp    DWORD PTR [edx*4+0x1003becc]
10039e65:	add    eax,0xffffffba
10039e68:	mov    ecx,eax
10039e6a:	and    ecx,0x1
10039e6d:	mov    DWORD PTR [esp+0x20],ecx
10039e71:	movsx  ecx,BYTE PTR [eax+0x1006e168]
10039e78:	movsx  eax,BYTE PTR [eax+0x1006e170]
10039e7f:	add    ebx,0x1
10039e82:	test   eax,eax
10039e84:	mov    DWORD PTR [esp+0x1c],ecx
10039e88:	mov    DWORD PTR [esp+0x14],eax
10039e8c:	jne    0x10039ecb
10039e8e:	mov    DWORD PTR [esp+0x14],0x7fffffff
10039e96:	jmp    0x10039ecb
10039e98:	xor    edx,edx
10039e9a:	cmp    cl,0x4d
10039e9d:	sete   dl
10039ea0:	xor    eax,eax
10039ea2:	mov    ah,BYTE PTR [ebx+0x1]
10039ea5:	mov    DWORD PTR [esp+0x20],edx
10039ea9:	mov    al,BYTE PTR [ebx+0x2]
10039eac:	mov    DWORD PTR [esp+0x1c],eax
10039eb0:	xor    eax,eax
10039eb2:	mov    ah,BYTE PTR [ebx+0x3]
10039eb5:	mov    al,BYTE PTR [ebx+0x4]
10039eb8:	test   eax,eax
10039eba:	mov    DWORD PTR [esp+0x14],eax
10039ebe:	jne    0x10039ec8
10039ec0:	mov    DWORD PTR [esp+0x14],0x7fffffff
10039ec8:	add    ebx,0x5
10039ecb:	test   esi,esi
10039ecd:	je     0x1003929c
10039ed3:	mov    eax,0x1
10039ed8:	cmp    DWORD PTR [esp+0x1c],eax
10039edc:	mov    DWORD PTR [esp+0x18],eax
10039ee0:	jl     0x10039f16
10039ee2:	mov    ecx,DWORD PTR [esp+0x110]
10039ee9:	mov    edx,DWORD PTR [esp+0x24]
10039eed:	push   ecx
10039eee:	push   ebp
10039eef:	mov    ecx,edi
10039ef1:	mov    eax,esi
10039ef3:	call   0x100391b0
10039ef8:	add    esp,0x8
10039efb:	test   eax,eax
10039efd:	je     0x1003b40f
10039f03:	mov    eax,DWORD PTR [esp+0x18]
10039f07:	add    eax,0x1
10039f0a:	add    ebp,esi
10039f0c:	cmp    eax,DWORD PTR [esp+0x1c]
10039f10:	mov    DWORD PTR [esp+0x18],eax
10039f14:	jle    0x10039ee2
10039f16:	mov    eax,DWORD PTR [esp+0x1c]
10039f1a:	mov    ecx,DWORD PTR [esp+0x14]
10039f1e:	cmp    eax,ecx
10039f20:	je     0x1003929c
10039f26:	cmp    DWORD PTR [esp+0x20],0x0
10039f2b:	je     0x1003b68f
10039f31:	mov    ecx,DWORD PTR [esp+0x110]
10039f38:	mov    edx,eax
10039f3a:	mov    eax,DWORD PTR [esp+0x11c]
10039f41:	add    eax,0x1
10039f44:	push   eax
10039f45:	push   0x0
10039f47:	mov    DWORD PTR [esp+0x24],eax
10039f4b:	mov    eax,DWORD PTR [esp+0x11c]
10039f52:	push   eax
10039f53:	mov    eax,DWORD PTR [esp+0x110]
10039f5a:	push   ecx
10039f5b:	push   edi
10039f5c:	mov    DWORD PTR [esp+0x2c],edx
10039f60:	mov    edx,DWORD PTR [esp+0x11c]
10039f67:	push   edx
10039f68:	push   eax
10039f69:	push   ebx
10039f6a:	push   ebp
10039f6b:	call   0x10039230
10039f70:	add    esp,0x24
10039f73:	test   eax,eax
10039f75:	jne    0x1003bd36
10039f7b:	jmp    0x10039f80
10039f7d:	lea    ecx,[ecx+0x0]
10039f80:	mov    ecx,DWORD PTR [esp+0x14]
10039f84:	cmp    DWORD PTR [esp+0x18],ecx
10039f88:	jge    0x1003b40f
10039f8e:	mov    edx,DWORD PTR [esp+0x110]
10039f95:	push   edx
10039f96:	mov    edx,DWORD PTR [esp+0x28]
10039f9a:	push   ebp
10039f9b:	mov    ecx,edi
10039f9d:	mov    eax,esi
10039f9f:	call   0x100391b0
10039fa4:	add    esp,0x8
10039fa7:	test   eax,eax
10039fa9:	je     0x1003b40f
10039faf:	mov    eax,DWORD PTR [esp+0x1c]
10039fb3:	mov    ecx,DWORD PTR [esp+0x114]
10039fba:	mov    edx,DWORD PTR [esp+0x110]
10039fc1:	add    DWORD PTR [esp+0x18],0x1
10039fc6:	push   eax
10039fc7:	mov    eax,DWORD PTR [esp+0x10c]
10039fce:	push   0x0
10039fd0:	push   ecx
10039fd1:	mov    ecx,DWORD PTR [esp+0x110]
10039fd8:	push   edx
10039fd9:	push   edi
10039fda:	push   eax
10039fdb:	push   ecx
10039fdc:	add    ebp,esi
10039fde:	push   ebx
10039fdf:	push   ebp
10039fe0:	call   0x10039230
10039fe5:	add    esp,0x24
10039fe8:	test   eax,eax
10039fea:	je     0x10039f80
10039fec:	pop    edi
10039fed:	pop    esi
10039fee:	pop    ebp
10039fef:	pop    ebx
10039ff0:	add    esp,0xe8
10039ff6:	ret    
10039ff7:	mov    edx,DWORD PTR [esp+0x110]
10039ffe:	push   edx
10039fff:	mov    edx,DWORD PTR [esp+0x28]
1003a003:	push   ebp
1003a004:	mov    ecx,edi
1003a006:	mov    eax,esi
1003a008:	call   0x100391b0
1003a00d:	add    esp,0x8
1003a010:	test   eax,eax
1003a012:	je     0x1003b40f
1003a018:	add    ebp,esi
1003a01a:	jmp    0x1003929c
1003a01f:	mov    cl,BYTE PTR [ebx+0x21]
1003a022:	lea    eax,[ebx+0x1]
1003a025:	add    ebx,0x21
1003a028:	mov    DWORD PTR [esp+0x24],eax
1003a02c:	movzx  eax,cl
1003a02f:	lea    esi,[eax-0x46]
1003a032:	cmp    esi,0x7
1003a035:	ja     0x1003a0a9
1003a03b:	movzx  esi,BYTE PTR [esi+0x1003bee4]
1003a042:	jmp    DWORD PTR [esi*4+0x1003bedc]
1003a049:	movsx  esi,BYTE PTR [eax+0x1006e12a]
1003a050:	movsx  ecx,BYTE PTR [eax+0x1006e122]
1003a057:	add    eax,0xffffffba
1003a05a:	mov    edx,eax
1003a05c:	add    ebx,0x1
1003a05f:	and    edx,0x1
1003a062:	test   esi,esi
1003a064:	mov    DWORD PTR [esp+0x1c],ecx
1003a068:	mov    DWORD PTR [esp+0x14],esi
1003a06c:	jne    0x1003a0b6
1003a06e:	mov    esi,0x7fffffff
1003a073:	jmp    0x1003a0b2
1003a075:	xor    edx,edx
1003a077:	cmp    cl,0x4d
1003a07a:	sete   dl
1003a07d:	xor    ecx,ecx
1003a07f:	mov    ch,BYTE PTR [ebx+0x3]
1003a082:	xor    eax,eax
1003a084:	mov    ah,BYTE PTR [ebx+0x1]
1003a087:	mov    cl,BYTE PTR [ebx+0x4]
1003a08a:	mov    al,BYTE PTR [ebx+0x2]
1003a08d:	mov    esi,ecx
1003a08f:	test   esi,esi
1003a091:	mov    DWORD PTR [esp+0x1c],eax
1003a095:	mov    DWORD PTR [esp+0x14],ecx
1003a099:	jne    0x1003a0a4
1003a09b:	mov    esi,0x7fffffff
1003a0a0:	mov    DWORD PTR [esp+0x14],esi
1003a0a4:	add    ebx,0x5
1003a0a7:	jmp    0x1003a0b6
1003a0a9:	mov    esi,0x1
1003a0ae:	mov    DWORD PTR [esp+0x1c],esi
1003a0b2:	mov    DWORD PTR [esp+0x14],esi
1003a0b6:	mov    eax,0x1
1003a0bb:	cmp    DWORD PTR [esp+0x1c],eax
1003a0bf:	mov    DWORD PTR [esp+0x18],eax
1003a0c3:	jl     0x1003a108
1003a0c5:	cmp    ebp,DWORD PTR [edi+0x5c]
1003a0c8:	jae    0x1003b40f
1003a0ce:	movzx  esi,BYTE PTR [ebp+0x0]
1003a0d2:	mov    ecx,esi
1003a0d4:	and    ecx,0x7
1003a0d7:	mov    eax,0x1
1003a0dc:	shl    eax,cl
1003a0de:	mov    ecx,DWORD PTR [esp+0x24]
1003a0e2:	shr    esi,0x3
1003a0e5:	mov    cl,BYTE PTR [esi+ecx*1]
1003a0e8:	add    ebp,0x1
1003a0eb:	test   cl,al
1003a0ed:	je     0x1003b40f
1003a0f3:	mov    eax,DWORD PTR [esp+0x18]
1003a0f7:	add    eax,0x1
1003a0fa:	cmp    eax,DWORD PTR [esp+0x1c]
1003a0fe:	mov    DWORD PTR [esp+0x18],eax
1003a102:	jle    0x1003a0c5
1003a104:	mov    esi,DWORD PTR [esp+0x14]
1003a108:	mov    eax,DWORD PTR [esp+0x1c]
1003a10c:	cmp    eax,esi
1003a10e:	je     0x1003929c
1003a114:	test   edx,edx
1003a116:	mov    DWORD PTR [esp+0x18],eax
1003a11a:	je     0x1003b72e
1003a120:	mov    eax,DWORD PTR [esp+0x11c]
1003a127:	mov    ecx,DWORD PTR [esp+0x110]
1003a12e:	mov    edx,DWORD PTR [esp+0x108]
1003a135:	add    eax,0x1
1003a138:	push   eax
1003a139:	push   0x0
1003a13b:	mov    DWORD PTR [esp+0x24],eax
1003a13f:	mov    eax,DWORD PTR [esp+0x11c]
1003a146:	push   eax
1003a147:	mov    eax,DWORD PTR [esp+0x110]
1003a14e:	push   ecx
1003a14f:	push   edi
1003a150:	push   edx
1003a151:	push   eax
1003a152:	push   ebx
1003a153:	push   ebp
1003a154:	call   0x10039230
1003a159:	add    esp,0x24
1003a15c:	test   eax,eax
1003a15e:	jne    0x1003bd36
1003a164:	cmp    DWORD PTR [esp+0x18],esi
1003a168:	jge    0x1003b40f
1003a16e:	cmp    ebp,DWORD PTR [edi+0x5c]
1003a171:	jae    0x1003b40f
1003a177:	movzx  eax,BYTE PTR [ebp+0x0]
1003a17b:	mov    ecx,eax
1003a17d:	and    ecx,0x7
1003a180:	mov    edx,0x1
1003a185:	shl    edx,cl
1003a187:	mov    ecx,DWORD PTR [esp+0x24]
1003a18b:	shr    eax,0x3
1003a18e:	mov    al,BYTE PTR [eax+ecx*1]
1003a191:	add    ebp,0x1
1003a194:	test   al,dl
1003a196:	je     0x1003b40f
1003a19c:	mov    ecx,DWORD PTR [esp+0x1c]
1003a1a0:	mov    edx,DWORD PTR [esp+0x114]
1003a1a7:	mov    eax,DWORD PTR [esp+0x110]
1003a1ae:	add    DWORD PTR [esp+0x18],0x1
1003a1b3:	push   ecx
1003a1b4:	mov    ecx,DWORD PTR [esp+0x10c]
1003a1bb:	push   0x0
1003a1bd:	push   edx
1003a1be:	mov    edx,DWORD PTR [esp+0x110]
1003a1c5:	push   eax
1003a1c6:	push   edi
1003a1c7:	push   ecx
1003a1c8:	push   edx
1003a1c9:	push   ebx
1003a1ca:	push   ebp
1003a1cb:	call   0x10039230
1003a1d0:	add    esp,0x24
1003a1d3:	test   eax,eax
1003a1d5:	je     0x1003a164
1003a1d7:	pop    edi
1003a1d8:	pop    esi
1003a1d9:	pop    ebp
1003a1da:	pop    ebx
1003a1db:	add    esp,0xe8
1003a1e1:	ret    
1003a1e2:	mov    edx,DWORD PTR [edi+0x5c]
1003a1e5:	sub    edx,ebp
1003a1e7:	cmp    edx,0x1
1003a1ea:	jl     0x1003b40f
1003a1f0:	mov    al,BYTE PTR [ebp+0x0]
1003a1f3:	add    ebp,0x1
1003a1f6:	cmp    BYTE PTR [ebx+0x1],al
1003a1f9:	jne    0x1003b40f
1003a1ff:	add    ebx,0x2
1003a202:	jmp    0x1003929c
1003a207:	mov    ecx,DWORD PTR [edi+0x5c]
1003a20a:	sub    ecx,ebp
1003a20c:	cmp    ecx,0x1
1003a20f:	jl     0x1003b40f
1003a215:	movzx  ecx,BYTE PTR [ebp+0x0]
1003a219:	mov    eax,DWORD PTR [edi+0x24]
1003a21c:	movzx  edx,BYTE PTR [ebx+0x1]
1003a220:	mov    cl,BYTE PTR [ecx+eax*1]
1003a223:	add    ebp,0x1
1003a226:	cmp    BYTE PTR [edx+eax*1],cl
1003a229:	jne    0x1003b40f
1003a22f:	add    ebx,0x2
1003a232:	jmp    0x1003929c
1003a237:	xor    eax,eax
1003a239:	mov    ah,BYTE PTR [ebx+0x1]
1003a23c:	add    ebx,0x3
1003a23f:	mov    al,BYTE PTR [ebx-0x1]
1003a242:	mov    esi,eax
1003a244:	jmp    0x1003a2c2
1003a249:	mov    DWORD PTR [esp+0x1c],0x1
1003a251:	xor    ecx,ecx
1003a253:	mov    ch,BYTE PTR [ebx+0x1]
1003a256:	xor    edx,edx
1003a258:	xor    eax,eax
1003a25a:	cmp    BYTE PTR [ebx],0x26
1003a25d:	sete   dl
1003a260:	add    ebx,0x3
1003a263:	mov    cl,BYTE PTR [ebx-0x1]
1003a266:	mov    DWORD PTR [esp+0x20],edx
1003a26a:	mov    esi,ecx
1003a26c:	jmp    0x1003a2c2
1003a26e:	xor    eax,eax
1003a270:	mov    DWORD PTR [esp+0x1c],0x1
1003a278:	add    ebx,0x1
1003a27b:	jmp    0x1003a2bd
1003a27d:	mov    eax,0x1
1003a282:	mov    DWORD PTR [esp+0x1c],eax
1003a286:	add    ebx,eax
1003a288:	jmp    0x1003a2bd
1003a28a:	mov    esi,0x1
1003a28f:	xor    eax,eax
1003a291:	mov    DWORD PTR [esp+0x1c],esi
1003a295:	add    ebx,esi
1003a297:	jmp    0x1003a2c2
1003a299:	movzx  ecx,BYTE PTR [ebx]
1003a29c:	movsx  esi,BYTE PTR [ecx+0x1006e151]
1003a2a3:	movsx  eax,BYTE PTR [ecx+0x1006e149]
1003a2aa:	sub    ecx,0x1f
1003a2ad:	mov    edx,ecx
1003a2af:	and    edx,0x1
1003a2b2:	add    ebx,0x1
1003a2b5:	test   esi,esi
1003a2b7:	mov    DWORD PTR [esp+0x20],edx
1003a2bb:	jne    0x1003a2c2
1003a2bd:	mov    esi,0x7fffffff
1003a2c2:	mov    ecx,DWORD PTR [edi+0x5c]
1003a2c5:	sub    ecx,ebp
1003a2c7:	cmp    eax,ecx
1003a2c9:	jg     0x1003b40f
1003a2cf:	movzx  ecx,BYTE PTR [ebx]
1003a2d2:	add    ebx,0x1
1003a2d5:	test   BYTE PTR [esp+0x110],0x1
1003a2dd:	mov    DWORD PTR [esp+0x14],ecx
1003a2e1:	mov    DWORD PTR [esp+0x18],0x1
1003a2e9:	je     0x1003a3cc
1003a2ef:	cmp    eax,0x1
1003a2f2:	mov    edx,DWORD PTR [esp+0x14]
1003a2f6:	mov    ecx,DWORD PTR [edi+0x24]
1003a2f9:	movzx  ecx,BYTE PTR [ecx+edx*1]
1003a2fd:	mov    DWORD PTR [esp+0x14],ecx
1003a301:	jl     0x1003a32a
1003a303:	movzx  edx,BYTE PTR [ebp+0x0]
1003a307:	mov    ecx,DWORD PTR [edi+0x24]
1003a30a:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003a30e:	add    ebp,0x1
1003a311:	cmp    DWORD PTR [esp+0x14],ecx
1003a315:	jne    0x1003b40f
1003a31b:	mov    ecx,DWORD PTR [esp+0x18]
1003a31f:	add    ecx,0x1
1003a322:	cmp    ecx,eax
1003a324:	mov    DWORD PTR [esp+0x18],ecx
1003a328:	jle    0x1003a303
1003a32a:	cmp    eax,esi
1003a32c:	je     0x1003929c
1003a332:	cmp    DWORD PTR [esp+0x20],0x0
1003a337:	jne    0x1003b7c7
1003a33d:	cmp    eax,esi
1003a33f:	mov    DWORD PTR [esp+0x20],ebp
1003a343:	jge    0x1003a365
1003a345:	cmp    ebp,DWORD PTR [edi+0x5c]
1003a348:	jae    0x1003a365
1003a34a:	movzx  edx,BYTE PTR [ebp+0x0]
1003a34e:	mov    ecx,DWORD PTR [edi+0x24]
1003a351:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003a355:	cmp    DWORD PTR [esp+0x14],ecx
1003a359:	jne    0x1003a365
1003a35b:	add    eax,0x1
1003a35e:	add    ebp,0x1
1003a361:	cmp    eax,esi
1003a363:	jl     0x1003a345
1003a365:	cmp    DWORD PTR [esp+0x1c],0x0
1003a36a:	jne    0x1003929c
1003a370:	cmp    ebp,DWORD PTR [esp+0x20]
1003a374:	jb     0x1003a3bf
1003a376:	mov    esi,DWORD PTR [esp+0x11c]
1003a37d:	add    esi,0x1
1003a380:	mov    edx,DWORD PTR [esp+0x114]
1003a387:	mov    eax,DWORD PTR [esp+0x110]
1003a38e:	mov    ecx,DWORD PTR [esp+0x108]
1003a395:	push   esi
1003a396:	push   0x0
1003a398:	push   edx
1003a399:	mov    edx,DWORD PTR [esp+0x110]
1003a3a0:	push   eax
1003a3a1:	push   edi
1003a3a2:	push   ecx
1003a3a3:	push   edx
1003a3a4:	push   ebx
1003a3a5:	push   ebp
1003a3a6:	call   0x10039230
1003a3ab:	add    esp,0x24
1003a3ae:	sub    ebp,0x1
1003a3b1:	test   eax,eax
1003a3b3:	jne    0x1003bd36
1003a3b9:	cmp    ebp,DWORD PTR [esp+0x20]
1003a3bd:	jae    0x1003a380
1003a3bf:	xor    eax,eax
1003a3c1:	pop    edi
1003a3c2:	pop    esi
1003a3c3:	pop    ebp
1003a3c4:	pop    ebx
1003a3c5:	add    esp,0xe8
1003a3cb:	ret    
1003a3cc:	cmp    eax,0x1
1003a3cf:	jl     0x1003a3f7
1003a3d1:	mov    edx,DWORD PTR [esp+0x14]
1003a3d5:	movzx  ecx,BYTE PTR [ebp+0x0]
1003a3d9:	add    ebp,0x1
1003a3dc:	cmp    edx,ecx
1003a3de:	jne    0x1003b40f
1003a3e4:	mov    ecx,DWORD PTR [esp+0x18]
1003a3e8:	add    ecx,0x1
1003a3eb:	cmp    ecx,eax
1003a3ed:	mov    DWORD PTR [esp+0x18],ecx
1003a3f1:	jle    0x1003a3d5
1003a3f3:	mov    edx,DWORD PTR [esp+0x20]
1003a3f7:	cmp    eax,esi
1003a3f9:	je     0x1003929c
1003a3ff:	test   edx,edx
1003a401:	jne    0x1003b881
1003a407:	cmp    eax,esi
1003a409:	mov    ecx,ebp
1003a40b:	mov    DWORD PTR [esp+0x20],ecx
1003a40f:	jge    0x1003a42a
1003a411:	cmp    ebp,DWORD PTR [edi+0x5c]
1003a414:	jae    0x1003a42a
1003a416:	movzx  edx,BYTE PTR [ebp+0x0]
1003a41a:	cmp    DWORD PTR [esp+0x14],edx
1003a41e:	jne    0x1003a42a
1003a420:	add    eax,0x1
1003a423:	add    ebp,0x1
1003a426:	cmp    eax,esi
1003a428:	jl     0x1003a411
1003a42a:	cmp    DWORD PTR [esp+0x1c],0x0
1003a42f:	jne    0x1003929c
1003a435:	cmp    ebp,ecx
1003a437:	jb     0x1003a482
1003a439:	mov    esi,DWORD PTR [esp+0x11c]
1003a440:	add    esi,0x1
1003a443:	mov    ecx,DWORD PTR [esp+0x114]
1003a44a:	mov    edx,DWORD PTR [esp+0x110]
1003a451:	mov    eax,DWORD PTR [esp+0x108]
1003a458:	push   esi
1003a459:	push   0x0
1003a45b:	push   ecx
1003a45c:	mov    ecx,DWORD PTR [esp+0x110]
1003a463:	push   edx
1003a464:	push   edi
1003a465:	push   eax
1003a466:	push   ecx
1003a467:	push   ebx
1003a468:	push   ebp
1003a469:	call   0x10039230
1003a46e:	add    esp,0x24
1003a471:	sub    ebp,0x1
1003a474:	test   eax,eax
1003a476:	jne    0x1003bd36
1003a47c:	cmp    ebp,DWORD PTR [esp+0x20]
1003a480:	jae    0x1003a443
1003a482:	xor    eax,eax
1003a484:	pop    edi
1003a485:	pop    esi
1003a486:	pop    ebp
1003a487:	pop    ebx
1003a488:	add    esp,0xe8
1003a48e:	ret    
1003a48f:	cmp    ebp,DWORD PTR [edi+0x5c]
1003a492:	jae    0x1003b40f
1003a498:	movzx  esi,BYTE PTR [ebp+0x0]
1003a49c:	add    ebx,0x1
1003a49f:	add    ebp,0x1
1003a4a2:	test   BYTE PTR [esp+0x110],0x1
1003a4aa:	je     0x1003a4ce
1003a4ac:	mov    eax,DWORD PTR [edi+0x24]
1003a4af:	movzx  ecx,BYTE PTR [ebx]
1003a4b2:	mov    dl,BYTE PTR [eax+esi*1]
1003a4b5:	add    ebx,0x1
1003a4b8:	cmp    BYTE PTR [ecx+eax*1],dl
1003a4bb:	jne    0x1003929c
1003a4c1:	xor    eax,eax
1003a4c3:	pop    edi
1003a4c4:	pop    esi
1003a4c5:	pop    ebp
1003a4c6:	pop    ebx
1003a4c7:	add    esp,0xe8
1003a4cd:	ret    
1003a4ce:	movzx  eax,BYTE PTR [ebx]
1003a4d1:	add    ebx,0x1
1003a4d4:	cmp    eax,esi
1003a4d6:	jne    0x1003929c
1003a4dc:	xor    eax,eax
1003a4de:	pop    edi
1003a4df:	pop    esi
1003a4e0:	pop    ebp
1003a4e1:	pop    ebx
1003a4e2:	add    esp,0xe8
1003a4e8:	ret    
1003a4e9:	xor    ecx,ecx
1003a4eb:	mov    ch,BYTE PTR [ebx+0x1]
1003a4ee:	add    ebx,0x3
1003a4f1:	mov    cl,BYTE PTR [ebx-0x1]
1003a4f4:	mov    esi,ecx
1003a4f6:	mov    eax,esi
1003a4f8:	jmp    0x1003a58a
1003a4fd:	xor    edx,edx
1003a4ff:	mov    dh,BYTE PTR [ebx+0x1]
1003a502:	xor    eax,eax
1003a504:	mov    dl,BYTE PTR [ebx+0x2]
1003a507:	mov    esi,edx
1003a509:	xor    edx,edx
1003a50b:	cmp    BYTE PTR [ebx],0x33
1003a50e:	sete   dl
1003a511:	add    ebx,0x3
1003a514:	mov    DWORD PTR [esp+0x20],edx
1003a518:	jmp    0x1003a58a
1003a51d:	xor    eax,eax
1003a51f:	mov    DWORD PTR [esp+0x1c],0x1
1003a527:	add    ebx,0x1
1003a52a:	jmp    0x1003a585
1003a52c:	mov    eax,0x1
1003a531:	mov    DWORD PTR [esp+0x1c],eax
1003a535:	add    ebx,eax
1003a537:	jmp    0x1003a585
1003a539:	mov    esi,0x1
1003a53e:	xor    eax,eax
1003a540:	mov    DWORD PTR [esp+0x1c],esi
1003a544:	add    ebx,esi
1003a546:	jmp    0x1003a58a
1003a548:	xor    ecx,ecx
1003a54a:	mov    ch,BYTE PTR [ebx+0x1]
1003a54d:	xor    eax,eax
1003a54f:	mov    DWORD PTR [esp+0x1c],0x1
1003a557:	add    ebx,0x3
1003a55a:	mov    cl,BYTE PTR [ebx-0x1]
1003a55d:	mov    esi,ecx
1003a55f:	jmp    0x1003a58a
1003a561:	movzx  ecx,BYTE PTR [ebx]
1003a564:	movsx  esi,BYTE PTR [ecx+0x1006e144]
1003a56b:	movsx  eax,BYTE PTR [ecx+0x1006e13c]
1003a572:	sub    ecx,0x2c
1003a575:	mov    edx,ecx
1003a577:	and    edx,0x1
1003a57a:	add    ebx,0x1
1003a57d:	test   esi,esi
1003a57f:	mov    DWORD PTR [esp+0x20],edx
1003a583:	jne    0x1003a58a
1003a585:	mov    esi,0x7fffffff
1003a58a:	mov    ecx,DWORD PTR [edi+0x5c]
1003a58d:	sub    ecx,ebp
1003a58f:	cmp    eax,ecx
1003a591:	jg     0x1003b40f
1003a597:	movzx  ecx,BYTE PTR [ebx]
1003a59a:	add    ebx,0x1
1003a59d:	test   BYTE PTR [esp+0x110],0x1
1003a5a5:	mov    DWORD PTR [esp+0x14],ecx
1003a5a9:	mov    DWORD PTR [esp+0x18],0x1
1003a5b1:	je     0x1003a699
1003a5b7:	cmp    eax,0x1
1003a5ba:	mov    edx,DWORD PTR [esp+0x14]
1003a5be:	mov    ecx,DWORD PTR [edi+0x24]
1003a5c1:	movzx  ecx,BYTE PTR [ecx+edx*1]
1003a5c5:	mov    DWORD PTR [esp+0x14],ecx
1003a5c9:	jl     0x1003a5f7
1003a5cb:	jmp    0x1003a5d0
1003a5cd:	lea    ecx,[ecx+0x0]
1003a5d0:	movzx  edx,BYTE PTR [ebp+0x0]
1003a5d4:	mov    ecx,DWORD PTR [edi+0x24]
1003a5d7:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003a5db:	add    ebp,0x1
1003a5de:	cmp    DWORD PTR [esp+0x14],ecx
1003a5e2:	je     0x1003b40f
1003a5e8:	mov    ecx,DWORD PTR [esp+0x18]
1003a5ec:	add    ecx,0x1
1003a5ef:	cmp    ecx,eax
1003a5f1:	mov    DWORD PTR [esp+0x18],ecx
1003a5f5:	jle    0x1003a5d0
1003a5f7:	cmp    eax,esi
1003a5f9:	je     0x1003929c
1003a5ff:	cmp    DWORD PTR [esp+0x20],0x0
1003a604:	jne    0x1003b93a
1003a60a:	cmp    eax,esi
1003a60c:	mov    DWORD PTR [esp+0x20],ebp
1003a610:	jge    0x1003a632
1003a612:	cmp    ebp,DWORD PTR [edi+0x5c]
1003a615:	jae    0x1003a632
1003a617:	movzx  edx,BYTE PTR [ebp+0x0]
1003a61b:	mov    ecx,DWORD PTR [edi+0x24]
1003a61e:	movzx  ecx,BYTE PTR [edx+ecx*1]
1003a622:	cmp    DWORD PTR [esp+0x14],ecx
1003a626:	je     0x1003a632
1003a628:	add    eax,0x1
1003a62b:	add    ebp,0x1
1003a62e:	cmp    eax,esi
1003a630:	jl     0x1003a612
1003a632:	cmp    DWORD PTR [esp+0x1c],0x0
1003a637:	jne    0x1003929c
1003a63d:	cmp    ebp,DWORD PTR [esp+0x20]
1003a641:	jb     0x1003a68c
1003a643:	mov    esi,DWORD PTR [esp+0x11c]
1003a64a:	add    esi,0x1
1003a64d:	mov    edx,DWORD PTR [esp+0x114]
1003a654:	mov    eax,DWORD PTR [esp+0x110]
1003a65b:	mov    ecx,DWORD PTR [esp+0x108]
1003a662:	push   esi
1003a663:	push   0x0
1003a665:	push   edx
1003a666:	mov    edx,DWORD PTR [esp+0x110]
1003a66d:	push   eax
1003a66e:	push   edi
1003a66f:	push   ecx
1003a670:	push   edx
1003a671:	push   ebx
1003a672:	push   ebp
1003a673:	call   0x10039230
1003a678:	add    esp,0x24
1003a67b:	test   eax,eax
1003a67d:	jne    0x1003bd36
1003a683:	sub    ebp,0x1
1003a686:	cmp    ebp,DWORD PTR [esp+0x20]
1003a68a:	jae    0x1003a64d
1003a68c:	xor    eax,eax
1003a68e:	pop    edi
1003a68f:	pop    esi
1003a690:	pop    ebp
1003a691:	pop    ebx
1003a692:	add    esp,0xe8
1003a698:	ret    
1003a699:	cmp    eax,0x1
1003a69c:	jl     0x1003a6c4
1003a69e:	mov    edx,DWORD PTR [esp+0x14]
1003a6a2:	movzx  ecx,BYTE PTR [ebp+0x0]
1003a6a6:	add    ebp,0x1
1003a6a9:	cmp    edx,ecx
1003a6ab:	je     0x1003b40f
1003a6b1:	mov    ecx,DWORD PTR [esp+0x18]
1003a6b5:	add    ecx,0x1
1003a6b8:	cmp    ecx,eax
1003a6ba:	mov    DWORD PTR [esp+0x18],ecx
1003a6be:	jle    0x1003a6a2
1003a6c0:	mov    edx,DWORD PTR [esp+0x20]
1003a6c4:	cmp    eax,esi
1003a6c6:	je     0x1003929c
1003a6cc:	test   edx,edx
1003a6ce:	jne    0x1003b9f3
1003a6d4:	cmp    eax,esi
1003a6d6:	mov    ecx,ebp
1003a6d8:	mov    DWORD PTR [esp+0x20],ecx
1003a6dc:	jge    0x1003a6f7
1003a6de:	cmp    ebp,DWORD PTR [edi+0x5c]
1003a6e1:	jae    0x1003a6f7
1003a6e3:	movzx  edx,BYTE PTR [ebp+0x0]
1003a6e7:	cmp    DWORD PTR [esp+0x14],edx
1003a6eb:	je     0x1003a6f7
1003a6ed:	add    eax,0x1
1003a6f0:	add    ebp,0x1
1003a6f3:	cmp    eax,esi
1003a6f5:	jl     0x1003a6de
1003a6f7:	cmp    DWORD PTR [esp+0x1c],0x0
1003a6fc:	jne    0x1003929c
1003a702:	cmp    ebp,ecx
1003a704:	jb     0x1003a74f
1003a706:	mov    esi,DWORD PTR [esp+0x11c]
1003a70d:	add    esi,0x1
1003a710:	mov    ecx,DWORD PTR [esp+0x114]
1003a717:	mov    edx,DWORD PTR [esp+0x110]
1003a71e:	mov    eax,DWORD PTR [esp+0x108]
1003a725:	push   esi
1003a726:	push   0x0
1003a728:	push   ecx
1003a729:	mov    ecx,DWORD PTR [esp+0x110]
1003a730:	push   edx
1003a731:	push   edi
1003a732:	push   eax
1003a733:	push   ecx
1003a734:	push   ebx
1003a735:	push   ebp
1003a736:	call   0x10039230
1003a73b:	add    esp,0x24
1003a73e:	test   eax,eax
1003a740:	jne    0x1003bd36
1003a746:	sub    ebp,0x1
1003a749:	cmp    ebp,DWORD PTR [esp+0x20]
1003a74d:	jae    0x1003a710
1003a74f:	xor    eax,eax
1003a751:	pop    edi
1003a752:	pop    esi
1003a753:	pop    ebp
1003a754:	pop    ebx
1003a755:	add    esp,0xe8
1003a75b:	ret    
1003a75c:	xor    eax,eax
1003a75e:	mov    ah,BYTE PTR [ebx+0x1]
1003a761:	mov    DWORD PTR [esp+0x20],0x1
1003a769:	add    ebx,0x3
1003a76c:	mov    al,BYTE PTR [ebx-0x1]
1003a76f:	mov    esi,eax
1003a771:	mov    DWORD PTR [esp+0x14],esi
1003a775:	jmp    0x1003a819
1003a77a:	xor    ecx,ecx
1003a77c:	mov    ch,BYTE PTR [ebx+0x1]
1003a77f:	xor    edx,edx
1003a781:	xor    esi,esi
1003a783:	cmp    BYTE PTR [ebx],0x40
1003a786:	sete   dl
1003a789:	add    ebx,0x3
1003a78c:	mov    cl,BYTE PTR [ebx-0x1]
1003a78f:	mov    DWORD PTR [esp+0x20],edx
1003a793:	mov    DWORD PTR [esp+0x14],ecx
1003a797:	jmp    0x1003a819
1003a79c:	xor    esi,esi
1003a79e:	mov    DWORD PTR [esp+0x1c],0x1
1003a7a6:	add    ebx,0x1
1003a7a9:	jmp    0x1003a811
1003a7ae:	mov    esi,0x1
1003a7b3:	mov    DWORD PTR [esp+0x1c],esi
1003a7b7:	add    ebx,esi
1003a7b9:	jmp    0x1003a811
1003a7bb:	mov    eax,0x1
1003a7c0:	xor    esi,esi
1003a7c2:	mov    DWORD PTR [esp+0x1c],eax
1003a7c6:	mov    DWORD PTR [esp+0x14],eax
1003a7ca:	add    ebx,eax
1003a7cc:	jmp    0x1003a819
1003a7ce:	xor    eax,eax
1003a7d0:	mov    ah,BYTE PTR [ebx+0x1]
1003a7d3:	xor    esi,esi
1003a7d5:	mov    DWORD PTR [esp+0x1c],0x1
1003a7dd:	add    ebx,0x3
1003a7e0:	mov    al,BYTE PTR [ebx-0x1]
1003a7e3:	mov    DWORD PTR [esp+0x14],eax
1003a7e7:	jmp    0x1003a819
1003a7e9:	movzx  eax,BYTE PTR [ebx]
1003a7ec:	movsx  esi,BYTE PTR [eax+0x1006e12f]
1003a7f3:	sub    eax,0x39
1003a7f6:	mov    ecx,eax
1003a7f8:	movsx  eax,BYTE PTR [eax+0x1006e170]
1003a7ff:	and    ecx,0x1
1003a802:	add    ebx,0x1
1003a805:	test   eax,eax
1003a807:	mov    DWORD PTR [esp+0x20],ecx
1003a80b:	mov    DWORD PTR [esp+0x14],eax
1003a80f:	jne    0x1003a819
1003a811:	mov    DWORD PTR [esp+0x14],0x7fffffff
1003a819:	mov    edx,DWORD PTR [edi+0x5c]
1003a81c:	movzx  eax,BYTE PTR [ebx]
1003a81f:	mov    ecx,edx
1003a821:	sub    ecx,ebp
1003a823:	add    ebx,0x1
1003a826:	cmp    esi,ecx
1003a828:	mov    DWORD PTR [esp+0x24],eax
1003a82c:	jg     0x1003b40f
1003a832:	test   esi,esi
1003a834:	jle    0x1003ab6c
1003a83a:	add    eax,0xfffffffa
1003a83d:	cmp    eax,0xf
1003a840:	ja     0x1003baaa
1003a846:	jmp    DWORD PTR [eax*4+0x1003beec]
1003a84d:	cmp    esi,0x1
1003a850:	mov    DWORD PTR [esp+0x18],0x1
1003a858:	jl     0x1003ab6c
1003a85e:	mov    edi,edi
1003a860:	mov    ecx,DWORD PTR [edi+0x18]
1003a863:	test   ecx,ecx
1003a865:	je     0x1003a896
1003a867:	mov    eax,DWORD PTR [edi+0x5c]
1003a86a:	cmp    ebp,eax
1003a86c:	jae    0x1003a8bf
1003a86e:	mov    edi,DWORD PTR [esp+0x10c]
1003a875:	push   ecx
1003a876:	add    edi,0x1c
1003a879:	xor    edx,edx
1003a87b:	mov    ecx,ebp
1003a87d:	call   0x10041aa0
1003a882:	add    esp,0x4
1003a885:	test   eax,eax
1003a887:	jne    0x1003b40f
1003a88d:	mov    edi,DWORD PTR [esp+0x10c]
1003a894:	jmp    0x1003a8bf
1003a896:	mov    eax,DWORD PTR [edi+0x1c]
1003a899:	mov    edx,DWORD PTR [edi+0x5c]
1003a89c:	sub    edx,eax
1003a89e:	cmp    ebp,edx
1003a8a0:	ja     0x1003a8bf
1003a8a2:	mov    cl,BYTE PTR [ebp+0x0]
1003a8a5:	cmp    cl,BYTE PTR [edi+0x20]
1003a8a8:	jne    0x1003a8bf
1003a8aa:	cmp    eax,0x1
1003a8ad:	je     0x1003b40f
1003a8b3:	mov    dl,BYTE PTR [ebp+0x1]
1003a8b6:	cmp    dl,BYTE PTR [edi+0x21]
1003a8b9:	je     0x1003b40f
1003a8bf:	mov    eax,DWORD PTR [esp+0x18]
1003a8c3:	add    eax,0x1
1003a8c6:	add    ebp,0x1
1003a8c9:	cmp    eax,esi
1003a8cb:	mov    DWORD PTR [esp+0x18],eax
1003a8cf:	jle    0x1003a860
1003a8d1:	jmp    0x1003ab6c
1003a8d6:	add    ebp,esi
1003a8d8:	jmp    0x1003ab6c
1003a8dd:	mov    ecx,0x1
1003a8e2:	cmp    esi,ecx
1003a8e4:	jl     0x1003ab6c
1003a8ea:	lea    ebx,[ebx+0x0]
1003a8f0:	cmp    ebp,edx
1003a8f2:	jae    0x1003b40f
1003a8f8:	movzx  eax,BYTE PTR [ebp+0x0]
1003a8fc:	sub    eax,0xa
1003a8ff:	add    ebp,0x1
1003a902:	cmp    eax,0x7b
1003a905:	ja     0x1003b40f
1003a90b:	movzx  eax,BYTE PTR [eax+0x1003bf3c]
1003a912:	jmp    DWORD PTR [eax*4+0x1003bf2c]
1003a919:	cmp    ebp,edx
1003a91b:	jae    0x1003a932
1003a91d:	cmp    BYTE PTR [ebp+0x0],0xa
1003a921:	jne    0x1003a932
1003a923:	add    ebp,0x1
1003a926:	jmp    0x1003a932
1003a928:	cmp    DWORD PTR [edi+0x50],0x0
1003a92c:	jne    0x1003b40f
1003a932:	add    ecx,0x1
1003a935:	cmp    ecx,esi
1003a937:	jle    0x1003a8f0
1003a939:	jmp    0x1003ab6c
1003a93e:	mov    ecx,0x1
1003a943:	cmp    esi,ecx
1003a945:	jl     0x1003ab6c
1003a94b:	jmp    0x1003a950
1003a94d:	lea    ecx,[ecx+0x0]
1003a950:	cmp    ebp,edx
1003a952:	jae    0x1003b40f
1003a958:	movzx  eax,BYTE PTR [ebp+0x0]
1003a95c:	add    ebp,0x1
1003a95f:	cmp    eax,0x9
1003a962:	je     0x1003b40f
1003a968:	cmp    eax,0x20
1003a96b:	je     0x1003b40f
1003a971:	cmp    eax,0xa0
1003a976:	je     0x1003b40f
1003a97c:	add    ecx,0x1
1003a97f:	cmp    ecx,esi
1003a981:	jle    0x1003a950
1003a983:	jmp    0x1003ab6c
1003a988:	mov    ecx,0x1
1003a98d:	cmp    esi,ecx
1003a98f:	jl     0x1003ab6c
1003a995:	cmp    ebp,edx
1003a997:	jae    0x1003b40f
1003a99d:	movzx  eax,BYTE PTR [ebp+0x0]
1003a9a1:	add    ebp,0x1
1003a9a4:	cmp    eax,0x9
1003a9a7:	je     0x1003a9b9
1003a9a9:	cmp    eax,0x20
1003a9ac:	je     0x1003a9b9
1003a9ae:	cmp    eax,0xa0
1003a9b3:	jne    0x1003b40f
1003a9b9:	add    ecx,0x1
1003a9bc:	cmp    ecx,esi
1003a9be:	jle    0x1003a995
1003a9c0:	jmp    0x1003ab6c
1003a9c5:	mov    ecx,0x1
1003a9ca:	cmp    esi,ecx
1003a9cc:	jl     0x1003ab6c
1003a9d2:	cmp    ebp,edx
1003a9d4:	jae    0x1003b40f
1003a9da:	movzx  eax,BYTE PTR [ebp+0x0]
1003a9de:	add    ebp,0x1
1003a9e1:	cmp    eax,0xa
1003a9e4:	jl     0x1003a9fa
1003a9e6:	cmp    eax,0xd
1003a9e9:	jle    0x1003b40f
1003a9ef:	cmp    eax,0x85
1003a9f4:	je     0x1003b40f
1003a9fa:	add    ecx,0x1
1003a9fd:	cmp    ecx,esi
1003a9ff:	jle    0x1003a9d2
1003aa01:	jmp    0x1003ab6c
1003aa06:	mov    ecx,0x1
1003aa0b:	cmp    esi,ecx
1003aa0d:	jl     0x1003ab6c
1003aa13:	cmp    ebp,edx
1003aa15:	jae    0x1003b40f
1003aa1b:	movzx  eax,BYTE PTR [ebp+0x0]
1003aa1f:	add    ebp,0x1
1003aa22:	cmp    eax,0xa
1003aa25:	jl     0x1003b40f
1003aa2b:	cmp    eax,0xd
1003aa2e:	jle    0x1003aa3b
1003aa30:	cmp    eax,0x85
1003aa35:	jne    0x1003b40f
1003aa3b:	add    ecx,0x1
1003aa3e:	cmp    ecx,esi
1003aa40:	jle    0x1003aa13
1003aa42:	jmp    0x1003ab6c
1003aa47:	mov    eax,0x1
1003aa4c:	cmp    esi,eax
1003aa4e:	jl     0x1003ab6c
1003aa54:	mov    ecx,DWORD PTR [edi+0x28]
1003aa57:	jmp    0x1003aa60
1003aa59:	lea    esp,[esp+0x0]
1003aa60:	movzx  edx,BYTE PTR [ebp+0x0]
1003aa64:	mov    dl,BYTE PTR [edx+ecx*1]
1003aa67:	and    dl,0x4
1003aa6a:	add    ebp,0x1
1003aa6d:	test   dl,dl
1003aa6f:	jne    0x1003b40f
1003aa75:	add    eax,0x1
1003aa78:	cmp    eax,esi
1003aa7a:	jle    0x1003aa60
1003aa7c:	jmp    0x1003ab6c
1003aa81:	mov    eax,0x1
1003aa86:	cmp    esi,eax
1003aa88:	jl     0x1003ab6c
1003aa8e:	mov    ecx,DWORD PTR [edi+0x28]
1003aa91:	movzx  edx,BYTE PTR [ebp+0x0]
1003aa95:	mov    dl,BYTE PTR [edx+ecx*1]
1003aa98:	and    dl,0x4
1003aa9b:	add    ebp,0x1
1003aa9e:	test   dl,dl
1003aaa0:	je     0x1003b40f
1003aaa6:	add    eax,0x1
1003aaa9:	cmp    eax,esi
1003aaab:	jle    0x1003aa91
1003aaad:	jmp    0x1003ab6c
1003aab2:	mov    eax,0x1
1003aab7:	cmp    esi,eax
1003aab9:	jl     0x1003ab6c
1003aabf:	mov    ecx,DWORD PTR [edi+0x28]
1003aac2:	movzx  edx,BYTE PTR [ebp+0x0]
1003aac6:	mov    dl,BYTE PTR [edx+ecx*1]
1003aac9:	and    dl,0x1
1003aacc:	add    ebp,0x1
1003aacf:	test   dl,dl
1003aad1:	jne    0x1003b40f
1003aad7:	add    eax,0x1
1003aada:	cmp    eax,esi
1003aadc:	jle    0x1003aac2
1003aade:	jmp    0x1003ab6c
1003aae3:	mov    eax,0x1
1003aae8:	cmp    esi,eax
1003aaea:	jl     0x1003ab6c
1003aaf0:	mov    ecx,DWORD PTR [edi+0x28]
1003aaf3:	movzx  edx,BYTE PTR [ebp+0x0]
1003aaf7:	mov    dl,BYTE PTR [edx+ecx*1]
1003aafa:	and    dl,0x1
1003aafd:	add    ebp,0x1
1003ab00:	test   dl,dl
1003ab02:	je     0x1003b40f
1003ab08:	add    eax,0x1
1003ab0b:	cmp    eax,esi
1003ab0d:	jle    0x1003aaf3
1003ab0f:	jmp    0x1003ab6c
1003ab11:	mov    eax,0x1
1003ab16:	cmp    esi,eax
1003ab18:	jl     0x1003ab6c
1003ab1a:	mov    ecx,DWORD PTR [edi+0x28]
1003ab1d:	lea    ecx,[ecx+0x0]
1003ab20:	movzx  edx,BYTE PTR [ebp+0x0]
1003ab24:	mov    dl,BYTE PTR [edx+ecx*1]
1003ab27:	and    dl,0x10
1003ab2a:	add    ebp,0x1
1003ab2d:	test   dl,dl
1003ab2f:	jne    0x1003b40f
1003ab35:	add    eax,0x1
1003ab38:	cmp    eax,esi
1003ab3a:	jle    0x1003ab20
1003ab3c:	jmp    0x1003ab6c
1003ab3e:	mov    eax,0x1
1003ab43:	cmp    esi,eax
1003ab45:	jl     0x1003ab6c
1003ab47:	mov    ecx,DWORD PTR [edi+0x28]
1003ab4a:	lea    ebx,[ebx+0x0]
1003ab50:	movzx  edx,BYTE PTR [ebp+0x0]
1003ab54:	mov    dl,BYTE PTR [edx+ecx*1]
1003ab57:	and    dl,0x10
1003ab5a:	add    ebp,0x1
1003ab5d:	test   dl,dl
1003ab5f:	je     0x1003b40f
1003ab65:	add    eax,0x1
1003ab68:	cmp    eax,esi
1003ab6a:	jle    0x1003ab50
1003ab6c:	cmp    esi,DWORD PTR [esp+0x14]
1003ab70:	je     0x1003929c
1003ab76:	cmp    DWORD PTR [esp+0x20],0x0
1003ab7b:	jne    0x1003baba
1003ab81:	mov    eax,DWORD PTR [esp+0x24]
1003ab85:	add    eax,0xfffffffa
1003ab88:	cmp    eax,0xf
1003ab8b:	mov    DWORD PTR [esp+0x20],ebp
1003ab8f:	ja     0x1003baaa
1003ab95:	jmp    DWORD PTR [eax*4+0x1003bfb8]
1003ab9c:	cmp    esi,DWORD PTR [esp+0x14]
1003aba0:	jge    0x1003aeed
1003aba6:	mov    eax,DWORD PTR [edi+0x5c]
1003aba9:	cmp    ebp,eax
1003abab:	jae    0x1003aeed
1003abb1:	mov    ecx,DWORD PTR [edi+0x18]
1003abb4:	test   ecx,ecx
1003abb6:	je     0x1003abe0
1003abb8:	mov    edi,DWORD PTR [esp+0x10c]
1003abbf:	push   ecx
1003abc0:	add    edi,0x1c
1003abc3:	xor    edx,edx
1003abc5:	mov    ecx,ebp
1003abc7:	call   0x10041aa0
1003abcc:	add    esp,0x4
1003abcf:	test   eax,eax
1003abd1:	jne    0x1003aeed
1003abd7:	mov    edi,DWORD PTR [esp+0x10c]
1003abde:	jmp    0x1003ac06
1003abe0:	mov    ecx,DWORD PTR [edi+0x1c]
1003abe3:	sub    eax,ecx
1003abe5:	cmp    ebp,eax
1003abe7:	ja     0x1003ac06
1003abe9:	mov    al,BYTE PTR [ebp+0x0]
1003abec:	cmp    al,BYTE PTR [edi+0x20]
1003abef:	jne    0x1003ac06
1003abf1:	cmp    ecx,0x1
1003abf4:	je     0x1003aeed
1003abfa:	mov    cl,BYTE PTR [ebp+0x1]
1003abfd:	cmp    cl,BYTE PTR [edi+0x21]
1003ac00:	je     0x1003aeed
1003ac06:	add    esi,0x1
1003ac09:	add    ebp,0x1
1003ac0c:	cmp    esi,DWORD PTR [esp+0x14]
1003ac10:	jl     0x1003aba6
1003ac12:	jmp    0x1003aeed
1003ac17:	mov    eax,DWORD PTR [esp+0x14]
1003ac1b:	mov    edi,DWORD PTR [edi+0x5c]
1003ac1e:	sub    eax,esi
1003ac20:	sub    edi,ebp
1003ac22:	cmp    eax,edi
1003ac24:	jbe    0x1003ac28
1003ac26:	mov    eax,edi
1003ac28:	add    ebp,eax
1003ac2a:	jmp    0x1003aeed
1003ac2f:	cmp    esi,DWORD PTR [esp+0x14]
1003ac33:	jge    0x1003aeed
1003ac39:	mov    ecx,DWORD PTR [edi+0x5c]
1003ac3c:	cmp    ebp,ecx
1003ac3e:	jae    0x1003aeed
1003ac44:	movzx  eax,BYTE PTR [ebp+0x0]
1003ac48:	cmp    eax,0xd
1003ac4b:	jne    0x1003ac60
1003ac4d:	add    ebp,0x1
1003ac50:	cmp    ebp,ecx
1003ac52:	jae    0x1003aeed
1003ac58:	cmp    BYTE PTR [ebp+0x0],0xa
1003ac5c:	jne    0x1003ac87
1003ac5e:	jmp    0x1003ac84
1003ac60:	cmp    eax,0xa
1003ac63:	je     0x1003ac84
1003ac65:	cmp    DWORD PTR [edi+0x50],0x0
1003ac69:	jne    0x1003aeed
1003ac6f:	cmp    eax,0xb
1003ac72:	je     0x1003ac84
1003ac74:	cmp    eax,0xc
1003ac77:	je     0x1003ac84
1003ac79:	cmp    eax,0x85
1003ac7e:	jne    0x1003aeed
1003ac84:	add    ebp,0x1
1003ac87:	add    esi,0x1
1003ac8a:	cmp    esi,DWORD PTR [esp+0x14]
1003ac8e:	jl     0x1003ac3c
1003ac90:	jmp    0x1003aeed
1003ac95:	cmp    esi,DWORD PTR [esp+0x14]
1003ac99:	jge    0x1003aeed
1003ac9f:	mov    edi,DWORD PTR [edi+0x5c]
1003aca2:	cmp    ebp,edi
1003aca4:	jae    0x1003aeed
1003acaa:	movzx  eax,BYTE PTR [ebp+0x0]
1003acae:	cmp    eax,0x9
1003acb1:	je     0x1003aeed
1003acb7:	cmp    eax,0x20
1003acba:	je     0x1003aeed
1003acc0:	cmp    eax,0xa0
1003acc5:	je     0x1003aeed
1003accb:	add    esi,0x1
1003acce:	add    ebp,0x1
1003acd1:	cmp    esi,DWORD PTR [esp+0x14]
1003acd5:	jl     0x1003aca2
1003acd7:	jmp    0x1003aeed
1003acdc:	cmp    esi,DWORD PTR [esp+0x14]
1003ace0:	jge    0x1003aeed
1003ace6:	mov    edi,DWORD PTR [edi+0x5c]
1003ace9:	cmp    ebp,edi
1003aceb:	jae    0x1003aeed
1003acf1:	movzx  eax,BYTE PTR [ebp+0x0]
1003acf5:	cmp    eax,0x9
1003acf8:	je     0x1003ad0a
1003acfa:	cmp    eax,0x20
1003acfd:	je     0x1003ad0a
1003acff:	cmp    eax,0xa0
1003ad04:	jne    0x1003aeed
1003ad0a:	add    esi,0x1
1003ad0d:	add    ebp,0x1
1003ad10:	cmp    esi,DWORD PTR [esp+0x14]
1003ad14:	jl     0x1003ace9
1003ad16:	jmp    0x1003aeed
1003ad1b:	cmp    esi,DWORD PTR [esp+0x14]
1003ad1f:	jge    0x1003aeed
1003ad25:	mov    edi,DWORD PTR [edi+0x5c]
1003ad28:	cmp    ebp,edi
1003ad2a:	jae    0x1003aeed
1003ad30:	movzx  eax,BYTE PTR [ebp+0x0]
1003ad34:	cmp    eax,0xa
1003ad37:	je     0x1003aeed
1003ad3d:	cmp    eax,0xb
1003ad40:	je     0x1003aeed
1003ad46:	cmp    eax,0xc
1003ad49:	je     0x1003aeed
1003ad4f:	cmp    eax,0xd
1003ad52:	je     0x1003aeed
1003ad58:	cmp    eax,0x85
1003ad5d:	je     0x1003aeed
1003ad63:	add    esi,0x1
1003ad66:	add    ebp,0x1
1003ad69:	cmp    esi,DWORD PTR [esp+0x14]
1003ad6d:	jl     0x1003ad28
1003ad6f:	jmp    0x1003aeed
1003ad74:	cmp    esi,DWORD PTR [esp+0x14]
1003ad78:	jge    0x1003aeed
1003ad7e:	mov    edi,DWORD PTR [edi+0x5c]
1003ad81:	cmp    ebp,edi
1003ad83:	jae    0x1003aeed
1003ad89:	movzx  eax,BYTE PTR [ebp+0x0]
1003ad8d:	cmp    eax,0xa
1003ad90:	je     0x1003adac
1003ad92:	cmp    eax,0xb
1003ad95:	je     0x1003adac
1003ad97:	cmp    eax,0xc
1003ad9a:	je     0x1003adac
1003ad9c:	cmp    eax,0xd
1003ad9f:	je     0x1003adac
1003ada1:	cmp    eax,0x85
1003ada6:	jne    0x1003aeed
1003adac:	add    esi,0x1
1003adaf:	add    ebp,0x1
1003adb2:	cmp    esi,DWORD PTR [esp+0x14]
1003adb6:	jl     0x1003ad81
1003adb8:	jmp    0x1003aeed
1003adbd:	cmp    esi,DWORD PTR [esp+0x14]
1003adc1:	jge    0x1003aeed
1003adc7:	mov    eax,DWORD PTR [edi+0x5c]
1003adca:	lea    ebx,[ebx+0x0]
1003add0:	cmp    ebp,eax
1003add2:	jae    0x1003aeed
1003add8:	movzx  edx,BYTE PTR [ebp+0x0]
1003addc:	mov    ecx,DWORD PTR [edi+0x28]
1003addf:	test   BYTE PTR [edx+ecx*1],0x4
1003ade3:	jne    0x1003aeed
1003ade9:	add    esi,0x1
1003adec:	add    ebp,0x1
1003adef:	cmp    esi,DWORD PTR [esp+0x14]
1003adf3:	jl     0x1003add0
1003adf5:	jmp    0x1003aeed
1003adfa:	cmp    esi,DWORD PTR [esp+0x14]
1003adfe:	jge    0x1003aeed
1003ae04:	mov    eax,DWORD PTR [edi+0x5c]
1003ae07:	cmp    ebp,eax
1003ae09:	jae    0x1003aeed
1003ae0f:	movzx  edx,BYTE PTR [ebp+0x0]
1003ae13:	mov    ecx,DWORD PTR [edi+0x28]
1003ae16:	test   BYTE PTR [edx+ecx*1],0x4
1003ae1a:	je     0x1003aeed
1003ae20:	add    esi,0x1
1003ae23:	add    ebp,0x1
1003ae26:	cmp    esi,DWORD PTR [esp+0x14]
1003ae2a:	jl     0x1003ae07
1003ae2c:	jmp    0x1003aeed
1003ae31:	cmp    esi,DWORD PTR [esp+0x14]
1003ae35:	jge    0x1003aeed
1003ae3b:	mov    eax,DWORD PTR [edi+0x5c]
1003ae3e:	mov    edi,edi
1003ae40:	cmp    ebp,eax
1003ae42:	jae    0x1003aeed
1003ae48:	movzx  edx,BYTE PTR [ebp+0x0]
1003ae4c:	mov    ecx,DWORD PTR [edi+0x28]
1003ae4f:	test   BYTE PTR [edx+ecx*1],0x1
1003ae53:	jne    0x1003aeed
1003ae59:	add    esi,0x1
1003ae5c:	add    ebp,0x1
1003ae5f:	cmp    esi,DWORD PTR [esp+0x14]
1003ae63:	jl     0x1003ae40
1003ae65:	jmp    0x1003aeed
1003ae6a:	cmp    esi,DWORD PTR [esp+0x14]
1003ae6e:	jge    0x1003aeed
1003ae74:	mov    eax,DWORD PTR [edi+0x5c]
1003ae77:	cmp    ebp,eax
1003ae79:	jae    0x1003aeed
1003ae7f:	movzx  edx,BYTE PTR [ebp+0x0]
1003ae83:	mov    ecx,DWORD PTR [edi+0x28]
1003ae86:	test   BYTE PTR [edx+ecx*1],0x1
1003ae8a:	je     0x1003aeed
1003ae8c:	add    esi,0x1
1003ae8f:	add    ebp,0x1
1003ae92:	cmp    esi,DWORD PTR [esp+0x14]
1003ae96:	jl     0x1003ae77
1003ae98:	jmp    0x1003aeed
1003ae9a:	cmp    esi,DWORD PTR [esp+0x14]
1003ae9e:	jge    0x1003aeed
1003aea0:	mov    eax,DWORD PTR [edi+0x5c]
1003aea3:	cmp    ebp,eax
1003aea5:	jae    0x1003aeed
1003aea7:	movzx  edx,BYTE PTR [ebp+0x0]
1003aeab:	mov    ecx,DWORD PTR [edi+0x28]
1003aeae:	test   BYTE PTR [edx+ecx*1],0x10
1003aeb2:	jne    0x1003aeed
1003aeb4:	add    esi,0x1
1003aeb7:	add    ebp,0x1
1003aeba:	cmp    esi,DWORD PTR [esp+0x14]
1003aebe:	jl     0x1003aea3
1003aec0:	jmp    0x1003aeed
1003aec2:	cmp    esi,DWORD PTR [esp+0x14]
1003aec6:	jge    0x1003aeed
1003aec8:	mov    eax,DWORD PTR [edi+0x5c]
1003aecb:	jmp    0x1003aed0
1003aecd:	lea    ecx,[ecx+0x0]
1003aed0:	cmp    ebp,eax
1003aed2:	jae    0x1003aeed
1003aed4:	movzx  edx,BYTE PTR [ebp+0x0]
1003aed8:	mov    ecx,DWORD PTR [edi+0x28]
1003aedb:	test   BYTE PTR [edx+ecx*1],0x10
1003aedf:	je     0x1003aeed
1003aee1:	add    esi,0x1
1003aee4:	add    ebp,0x1
1003aee7:	cmp    esi,DWORD PTR [esp+0x14]
1003aeeb:	jl     0x1003aed0
1003aeed:	cmp    DWORD PTR [esp+0x1c],0x0
1003aef2:	je     0x1003bcd2
1003aef8:	mov    edi,DWORD PTR [esp+0x10c]
1003aeff:	jmp    0x1003929c
1003af04:	xor    edx,edx
1003af06:	mov    dh,BYTE PTR [ebx+0x4]
1003af09:	mov    dl,BYTE PTR [ebx+0x5]
1003af0c:	cmp    BYTE PTR [ebx+edx*1+0x3],0x54
1003af11:	lea    ebx,[ebx+edx*1+0x3]
1003af15:	jne    0x1003af26
1003af17:	xor    eax,eax
1003af19:	mov    ah,BYTE PTR [ebx+0x1]
1003af1c:	mov    al,BYTE PTR [ebx+0x2]
1003af1f:	add    ebx,eax
1003af21:	cmp    BYTE PTR [ebx],0x54
1003af24:	je     0x1003af17
1003af26:	add    ebx,0x3
1003af29:	cmp    DWORD PTR [esp+0x24],0x63
1003af2e:	jne    0x1003b180
1003af34:	mov    edx,DWORD PTR [esp+0x11c]
1003af3b:	mov    eax,DWORD PTR [esp+0x114]
1003af42:	mov    ecx,DWORD PTR [esp+0x110]
1003af49:	add    edx,0x1
1003af4c:	push   edx
1003af4d:	mov    edx,DWORD PTR [esp+0x10c]
1003af54:	push   0x2
1003af56:	push   eax
1003af57:	push   ecx
1003af58:	push   edi
1003af59:	push   edx
1003af5a:	push   esi
1003af5b:	push   ebx
1003af5c:	push   ebp
1003af5d:	call   0x10039230
1003af62:	add    esp,0x24
1003af65:	pop    edi
1003af66:	pop    esi
1003af67:	pop    ebp
1003af68:	pop    ebx
1003af69:	add    esp,0xe8
1003af6f:	ret    
1003af70:	xor    eax,eax
1003af72:	mov    ah,BYTE PTR [ebx+0x3]
1003af75:	mov    al,BYTE PTR [ebx+0x4]
1003af78:	lea    esi,[eax+eax*1]
1003af7b:	cmp    esi,DWORD PTR [edi+0x14]
1003af7e:	mov    DWORD PTR [esp+0x20],eax
1003af82:	jl     0x1003b328
1003af88:	xor    eax,eax
1003af8a:	cmp    DWORD PTR [esp+0x24],0x61
1003af8f:	setl   al
1003af92:	xor    ecx,ecx
1003af94:	mov    ch,BYTE PTR [ebx+0x1]
1003af97:	sub    eax,0x1
1003af9a:	and    eax,0x2
1003af9d:	mov    cl,BYTE PTR [ebx+0x2]
1003afa0:	mov    DWORD PTR [esp+0x118],eax
1003afa7:	cmp    BYTE PTR [ecx+ebx*1],0x54
1003afab:	jne    0x1003b028
1003afb1:	mov    esi,DWORD PTR [esp+0x11c]
1003afb8:	add    esi,0x1
1003afbb:	jmp    0x1003afc0
1003afbd:	lea    ecx,[ecx+0x0]
1003afc0:	mov    edx,DWORD PTR [esp+0x114]
1003afc7:	mov    ecx,DWORD PTR [esp+0x108]
1003afce:	push   esi
1003afcf:	push   eax
1003afd0:	mov    eax,DWORD PTR [esp+0x118]
1003afd7:	push   edx
1003afd8:	mov    edx,DWORD PTR [esp+0x110]
1003afdf:	push   eax
1003afe0:	movzx  eax,BYTE PTR [ebx]
1003afe3:	push   edi
1003afe4:	push   ecx
1003afe5:	movzx  ecx,BYTE PTR [eax+0x1006d078]
1003afec:	push   edx
1003afed:	add    ecx,ebx
1003afef:	push   ecx
1003aff0:	push   ebp
1003aff1:	call   0x10039230
1003aff6:	add    esp,0x24
1003aff9:	test   eax,eax
1003affb:	je     0x1003b008
1003affd:	cmp    eax,0xfffffc1c
1003b002:	jne    0x1003bd36
1003b008:	xor    edx,edx
1003b00a:	mov    dh,BYTE PTR [ebx+0x1]
1003b00d:	xor    eax,eax
1003b00f:	mov    dl,BYTE PTR [ebx+0x2]
1003b012:	mov    ah,BYTE PTR [ebx+edx*1+0x1]
1003b016:	add    ebx,edx
1003b018:	mov    al,BYTE PTR [ebx+0x2]
1003b01b:	cmp    BYTE PTR [eax+ebx*1],0x54
1003b01f:	mov    eax,DWORD PTR [esp+0x118]
1003b026:	je     0x1003afc0
1003b028:	test   eax,eax
1003b02a:	jne    0x1003b41c
1003b030:	movzx  ecx,BYTE PTR [ebx]
1003b033:	movzx  edx,BYTE PTR [ecx+0x1006d078]
1003b03a:	add    ebx,edx
1003b03c:	jmp    0x1003b18b
1003b041:	cmp    BYTE PTR [ebx+0x3],0x19
1003b045:	lea    esi,[ebx+0x3]
1003b048:	jne    0x1003b063
1003b04a:	mov    edx,DWORD PTR [esp+0x110]
1003b051:	movzx  eax,BYTE PTR [ebx+0x4]
1003b055:	and    edx,0xfffffff8
1003b058:	or     eax,edx
1003b05a:	mov    DWORD PTR [esp+0x110],eax
1003b061:	jmp    0x1003b06a
1003b063:	mov    eax,DWORD PTR [esp+0x110]
1003b06a:	mov    edx,DWORD PTR [esp+0x11c]
1003b071:	add    edx,0x1
1003b074:	cmp    BYTE PTR [ebx],0x57
1003b077:	push   edx
1003b078:	mov    edx,DWORD PTR [esp+0x118]
1003b07f:	jne    0x1003b0aa
1003b081:	push   0x0
1003b083:	push   edx
1003b084:	push   eax
1003b085:	mov    eax,DWORD PTR [esp+0x114]
1003b08c:	push   edi
1003b08d:	push   ecx
1003b08e:	push   eax
1003b08f:	push   esi
1003b090:	push   ebp
1003b091:	call   0x10039230
1003b096:	add    esp,0x24
1003b099:	test   eax,eax
1003b09b:	jne    0x1003bd36
1003b0a1:	mov    ebx,DWORD PTR [esp+0x1c]
1003b0a5:	jmp    0x1003b180
1003b0aa:	push   0x2
1003b0ac:	push   edx
1003b0ad:	push   eax
1003b0ae:	mov    eax,DWORD PTR [esp+0x114]
1003b0b5:	push   edi
1003b0b6:	push   ecx
1003b0b7:	mov    ecx,DWORD PTR [esp+0x34]
1003b0bb:	push   eax
1003b0bc:	push   ecx
1003b0bd:	push   ebp
1003b0be:	call   0x10039230
1003b0c3:	add    esp,0x24
1003b0c6:	test   eax,eax
1003b0c8:	jne    0x1003bd36
1003b0ce:	mov    ebx,esi
1003b0d0:	jmp    0x1003b180
1003b0d5:	mov    edx,DWORD PTR [esp+0x1c]
1003b0d9:	cmp    BYTE PTR [edx],0x61
1003b0dc:	sbb    eax,eax
1003b0de:	and    eax,0xfffffffe
1003b0e1:	add    eax,0x2
1003b0e4:	cmp    BYTE PTR [ebx],0x57
1003b0e7:	mov    DWORD PTR [esp+0x118],eax
1003b0ee:	jne    0x1003b141
1003b0f0:	mov    eax,DWORD PTR [esp+0x11c]
1003b0f7:	mov    ecx,DWORD PTR [esp+0x114]
1003b0fe:	mov    edx,DWORD PTR [esp+0x108]
1003b105:	add    eax,0x1
1003b108:	push   eax
1003b109:	mov    eax,DWORD PTR [esp+0x108]
1003b110:	push   0x0
1003b112:	push   ecx
1003b113:	push   esi
1003b114:	push   edi
1003b115:	push   edx
1003b116:	push   eax
1003b117:	add    ebx,0x3
1003b11a:	push   ebx
1003b11b:	push   ebp
1003b11c:	call   0x10039230
1003b121:	add    esp,0x24
1003b124:	test   eax,eax
1003b126:	jne    0x1003bd36
1003b12c:	mov    eax,DWORD PTR [esp+0x118]
1003b133:	test   eax,eax
1003b135:	jne    0x1003b633
1003b13b:	mov    ebx,DWORD PTR [esp+0x1c]
1003b13f:	jmp    0x1003b18b
1003b141:	mov    ecx,DWORD PTR [esp+0x11c]
1003b148:	mov    edx,DWORD PTR [esp+0x114]
1003b14f:	add    ecx,0x1
1003b152:	push   ecx
1003b153:	mov    ecx,DWORD PTR [esp+0x108]
1003b15a:	push   eax
1003b15b:	mov    eax,DWORD PTR [esp+0x110]
1003b162:	push   edx
1003b163:	mov    edx,DWORD PTR [esp+0x28]
1003b167:	push   esi
1003b168:	push   edi
1003b169:	push   eax
1003b16a:	push   ecx
1003b16b:	push   edx
1003b16c:	push   ebp
1003b16d:	call   0x10039230
1003b172:	add    esp,0x24
1003b175:	test   eax,eax
1003b177:	jne    0x1003bd36
1003b17d:	add    ebx,0x3
1003b180:	mov    DWORD PTR [esp+0x118],0x0
1003b18b:	mov    eax,DWORD PTR [edi]
1003b18d:	cmp    eax,DWORD PTR [edi+0x4]
1003b190:	jb     0x1003925a
1003b196:	add    DWORD PTR [edi],0x1
1003b199:	mov    eax,0xfffffff8
1003b19e:	pop    edi
1003b19f:	pop    esi
1003b1a0:	pop    ebp
1003b1a1:	pop    ebx
1003b1a2:	add    esp,0xe8
1003b1a8:	ret    
1003b1a9:	mov    eax,0xffffffeb
1003b1ae:	pop    edi
1003b1af:	pop    esi
1003b1b0:	pop    ebp
1003b1b1:	pop    ebx
1003b1b2:	add    esp,0xe8
1003b1b8:	ret    
1003b1b9:	mov    ecx,DWORD PTR [esp+0x11c]
1003b1c0:	mov    edx,DWORD PTR [esp+0x118]
1003b1c7:	mov    eax,DWORD PTR [esp+0x114]
1003b1ce:	add    ecx,0x1
1003b1d1:	push   ecx
1003b1d2:	mov    ecx,DWORD PTR [esp+0x114]
1003b1d9:	push   edx
1003b1da:	mov    edx,DWORD PTR [esp+0x110]
1003b1e1:	push   eax
1003b1e2:	movzx  eax,BYTE PTR [ebx]
1003b1e5:	push   ecx
1003b1e6:	movzx  ecx,BYTE PTR [eax+0x1006d078]
1003b1ed:	push   edi
1003b1ee:	push   edx
1003b1ef:	push   esi
1003b1f0:	add    ecx,ebx
1003b1f2:	push   ecx
1003b1f3:	push   ebp
1003b1f4:	call   0x10039230
1003b1f9:	add    esp,0x24
1003b1fc:	test   eax,eax
1003b1fe:	jne    0x1003bd36
1003b204:	mov    eax,0xfffffc1a
1003b209:	pop    edi
1003b20a:	pop    esi
1003b20b:	pop    ebp
1003b20c:	pop    ebx
1003b20d:	add    esp,0xe8
1003b213:	ret    
1003b214:	mov    edx,DWORD PTR [esp+0x11c]
1003b21b:	mov    eax,DWORD PTR [esp+0x118]
1003b222:	mov    ecx,DWORD PTR [esp+0x114]
1003b229:	add    edx,0x1
1003b22c:	push   edx
1003b22d:	mov    edx,DWORD PTR [esp+0x114]
1003b234:	push   eax
1003b235:	mov    eax,DWORD PTR [esp+0x110]
1003b23c:	push   ecx
1003b23d:	movzx  ecx,BYTE PTR [ebx]
1003b240:	push   edx
1003b241:	movzx  edx,BYTE PTR [ecx+0x1006d078]
1003b248:	push   edi
1003b249:	push   eax
1003b24a:	push   esi
1003b24b:	add    edx,ebx
1003b24d:	push   edx
1003b24e:	push   ebp
1003b24f:	call   0x10039230
1003b254:	add    esp,0x24
1003b257:	test   eax,eax
1003b259:	jne    0x1003bd36
1003b25f:	mov    eax,0xfffffc19
1003b264:	pop    edi
1003b265:	pop    esi
1003b266:	pop    ebp
1003b267:	pop    ebx
1003b268:	add    esp,0xe8
1003b26e:	ret    
1003b26f:	mov    eax,DWORD PTR [esp+0x11c]
1003b276:	mov    ecx,DWORD PTR [esp+0x118]
1003b27d:	mov    edx,DWORD PTR [esp+0x114]
1003b284:	add    eax,0x1
1003b287:	push   eax
1003b288:	mov    eax,DWORD PTR [esp+0x114]
1003b28f:	push   ecx
1003b290:	mov    ecx,DWORD PTR [esp+0x110]
1003b297:	push   edx
1003b298:	movzx  edx,BYTE PTR [ebx]
1003b29b:	push   eax
1003b29c:	movzx  eax,BYTE PTR [edx+0x1006d078]
1003b2a3:	push   edi
1003b2a4:	push   ecx
1003b2a5:	push   esi
1003b2a6:	add    eax,ebx
1003b2a8:	push   eax
1003b2a9:	push   ebp
1003b2aa:	call   0x10039230
1003b2af:	add    esp,0x24
1003b2b2:	test   eax,eax
1003b2b4:	jne    0x1003bd36
1003b2ba:	mov    DWORD PTR [edi+0x60],ebp
1003b2bd:	mov    eax,0xfffffc1b
1003b2c2:	pop    edi
1003b2c3:	pop    esi
1003b2c4:	pop    ebp
1003b2c5:	pop    ebx
1003b2c6:	add    esp,0xe8
1003b2cc:	ret    
1003b2cd:	mov    ecx,DWORD PTR [esp+0x11c]
1003b2d4:	mov    edx,DWORD PTR [esp+0x118]
1003b2db:	mov    eax,DWORD PTR [esp+0x114]
1003b2e2:	add    ecx,0x1
1003b2e5:	push   ecx
1003b2e6:	mov    ecx,DWORD PTR [esp+0x114]
1003b2ed:	push   edx
1003b2ee:	mov    edx,DWORD PTR [esp+0x110]
1003b2f5:	push   eax
1003b2f6:	movzx  eax,BYTE PTR [ebx]
1003b2f9:	push   ecx
1003b2fa:	movzx  ecx,BYTE PTR [eax+0x1006d078]
1003b301:	push   edi
1003b302:	push   edx
1003b303:	push   esi
1003b304:	add    ecx,ebx
1003b306:	push   ecx
1003b307:	push   ebp
1003b308:	call   0x10039230
1003b30d:	add    esp,0x24
1003b310:	test   eax,eax
1003b312:	jne    0x1003bd36
1003b318:	mov    eax,0xfffffc1c
1003b31d:	pop    edi
1003b31e:	pop    esi
1003b31f:	pop    ebp
1003b320:	pop    ebx
1003b321:	add    esp,0xe8
1003b327:	ret    
1003b328:	mov    eax,DWORD PTR [edi+0xc]
1003b32b:	mov    edx,DWORD PTR [eax+esi*4]
1003b32e:	mov    ecx,DWORD PTR [eax+esi*4+0x4]
1003b332:	mov    DWORD PTR [esp+0x14],edx
1003b336:	mov    edx,DWORD PTR [edi+0x10]
1003b339:	sub    edx,DWORD PTR [esp+0x20]
1003b33d:	mov    DWORD PTR [esp+0x18],ecx
1003b341:	mov    ecx,DWORD PTR [eax+edx*4]
1003b344:	lea    eax,[eax+edx*4]
1003b347:	mov    edx,DWORD PTR [edi+0x6c]
1003b34a:	mov    DWORD PTR [esp+0x44],ecx
1003b34e:	mov    DWORD PTR [esp+0x28],edx
1003b352:	xor    edx,edx
1003b354:	mov    ecx,ebp
1003b356:	sub    ecx,DWORD PTR [edi+0x58]
1003b359:	cmp    DWORD PTR [esp+0x24],0x62
1003b35e:	mov    DWORD PTR [eax],ecx
1003b360:	mov    eax,DWORD PTR [esp+0x11c]
1003b367:	setne  dl
1003b36a:	sub    edx,0x1
1003b36d:	and    edx,0x2
1003b370:	add    eax,0x1
1003b373:	mov    DWORD PTR [esp+0x118],edx
1003b37a:	mov    DWORD PTR [esp+0x1c],eax
1003b37e:	mov    edi,edi
1003b380:	mov    ecx,DWORD PTR [esp+0x1c]
1003b384:	mov    edx,DWORD PTR [esp+0x118]
1003b38b:	mov    eax,DWORD PTR [esp+0x114]
1003b392:	push   ecx
1003b393:	mov    ecx,DWORD PTR [esp+0x114]
1003b39a:	push   edx
1003b39b:	mov    edx,DWORD PTR [esp+0x110]
1003b3a2:	push   eax
1003b3a3:	mov    eax,DWORD PTR [esp+0x110]
1003b3aa:	push   ecx
1003b3ab:	movzx  ecx,BYTE PTR [ebx]
1003b3ae:	push   edi
1003b3af:	push   edx
1003b3b0:	movzx  edx,BYTE PTR [ecx+0x1006d078]
1003b3b7:	push   eax
1003b3b8:	add    edx,ebx
1003b3ba:	push   edx
1003b3bb:	push   ebp
1003b3bc:	call   0x10039230
1003b3c1:	add    esp,0x24
1003b3c4:	test   eax,eax
1003b3c6:	je     0x1003b3d3
1003b3c8:	cmp    eax,0xfffffc1c
1003b3cd:	jne    0x1003bd36
1003b3d3:	mov    eax,DWORD PTR [esp+0x28]
1003b3d7:	xor    ecx,ecx
1003b3d9:	mov    DWORD PTR [edi+0x6c],eax
1003b3dc:	mov    ch,BYTE PTR [ebx+0x1]
1003b3df:	mov    cl,BYTE PTR [ebx+0x2]
1003b3e2:	add    ebx,ecx
1003b3e4:	cmp    BYTE PTR [ebx],0x54
1003b3e7:	je     0x1003b380
1003b3e9:	mov    edx,DWORD PTR [edi+0xc]
1003b3ec:	mov    eax,DWORD PTR [esp+0x14]
1003b3f0:	mov    DWORD PTR [edx+esi*4],eax
1003b3f3:	mov    ecx,DWORD PTR [edi+0xc]
1003b3f6:	mov    edx,DWORD PTR [esp+0x18]
1003b3fa:	mov    DWORD PTR [ecx+esi*4+0x4],edx
1003b3fe:	mov    eax,DWORD PTR [edi+0x10]
1003b401:	sub    eax,DWORD PTR [esp+0x20]
1003b405:	mov    ecx,DWORD PTR [edi+0xc]
1003b408:	mov    edx,DWORD PTR [esp+0x44]
1003b40c:	mov    DWORD PTR [ecx+eax*4],edx
1003b40f:	xor    eax,eax
1003b411:	pop    edi
1003b412:	pop    esi
1003b413:	pop    ebp
1003b414:	pop    ebx
1003b415:	add    esp,0xe8
1003b41b:	ret    
1003b41c:	mov    ecx,DWORD PTR [esp+0x11c]
1003b423:	mov    edx,DWORD PTR [esp+0x114]
1003b42a:	add    ecx,0x1
1003b42d:	push   ecx
1003b42e:	mov    ecx,DWORD PTR [esp+0x10c]
1003b435:	push   eax
1003b436:	mov    eax,DWORD PTR [esp+0x118]
1003b43d:	push   edx
1003b43e:	mov    edx,DWORD PTR [esp+0x110]
1003b445:	push   eax
1003b446:	movzx  eax,BYTE PTR [ebx]
1003b449:	push   edi
1003b44a:	push   ecx
1003b44b:	movzx  ecx,BYTE PTR [eax+0x1006d078]
1003b452:	push   edx
1003b453:	add    ecx,ebx
1003b455:	push   ecx
1003b456:	push   ebp
1003b457:	call   0x10039230
1003b45c:	add    esp,0x24
1003b45f:	pop    edi
1003b460:	pop    esi
1003b461:	pop    ebp
1003b462:	pop    ebx
1003b463:	add    esp,0xe8
1003b469:	ret    
1003b46a:	cmp    DWORD PTR [edi+0x44],0x0
1003b46e:	je     0x1003b474
1003b470:	cmp    ebp,esi
1003b472:	je     0x1003b40f
1003b474:	mov    eax,DWORD PTR [esp+0x108]
1003b47b:	mov    DWORD PTR [edi+0x64],ebp
1003b47e:	mov    DWORD PTR [edi+0x68],eax
1003b481:	mov    DWORD PTR [edi+0x60],esi
1003b484:	mov    eax,0x1
1003b489:	pop    edi
1003b48a:	pop    esi
1003b48b:	pop    ebp
1003b48c:	pop    ebx
1003b48d:	add    esp,0xe8
1003b493:	ret    
1003b494:	mov    eax,DWORD PTR [edi+0x54]
1003b497:	xor    ecx,ecx
1003b499:	mov    ch,BYTE PTR [ebx+0x1]
1003b49c:	mov    cl,BYTE PTR [ebx+0x2]
1003b49f:	add    ecx,eax
1003b4a1:	mov    esi,ecx
1003b4a3:	cmp    esi,eax
1003b4a5:	jne    0x1003b4b1
1003b4a7:	mov    DWORD PTR [esp+0x30],0x0
1003b4af:	jmp    0x1003b4bd
1003b4b1:	xor    edx,edx
1003b4b3:	mov    dh,BYTE PTR [esi+0x3]
1003b4b6:	mov    dl,BYTE PTR [esi+0x4]
1003b4b9:	mov    DWORD PTR [esp+0x30],edx
1003b4bd:	mov    eax,DWORD PTR [edi+0x7c]
1003b4c0:	lea    ecx,[esp+0x2c]
1003b4c4:	mov    DWORD PTR [edi+0x7c],ecx
1003b4c7:	mov    ecx,DWORD PTR [edi+0x10]
1003b4ca:	add    ebx,0x3
1003b4cd:	cmp    ecx,0x1e
1003b4d0:	mov    DWORD PTR [esp+0x2c],eax
1003b4d4:	mov    DWORD PTR [esp+0x34],ebx
1003b4d8:	mov    DWORD PTR [esp+0x40],ecx
1003b4dc:	jg     0x1003b4eb
1003b4de:	lea    eax,[esp+0x80]
1003b4e5:	mov    DWORD PTR [esp+0x3c],eax
1003b4e9:	jmp    0x1003b518
1003b4eb:	lea    edx,[ecx*4+0x0]
1003b4f2:	push   edx
1003b4f3:	call   DWORD PTR ds:0x1007e4e8
1003b4f9:	add    esp,0x4
1003b4fc:	test   eax,eax
1003b4fe:	mov    DWORD PTR [esp+0x3c],eax
1003b502:	jne    0x1003b514
1003b504:	mov    eax,0xfffffffa
1003b509:	pop    edi
1003b50a:	pop    esi
1003b50b:	pop    ebp
1003b50c:	pop    ebx
1003b50d:	add    esp,0xe8
1003b513:	ret    
1003b514:	mov    ecx,DWORD PTR [esp+0x40]
1003b518:	mov    edx,DWORD PTR [edi+0xc]
1003b51b:	add    ecx,ecx
1003b51d:	add    ecx,ecx
1003b51f:	push   ecx
1003b520:	push   edx
1003b521:	push   eax
1003b522:	call   0x10043ed0
1003b527:	mov    eax,DWORD PTR [esp+0x110]
1003b52e:	mov    ecx,DWORD PTR [esp+0x128]
1003b535:	mov    DWORD PTR [esp+0x44],eax
1003b539:	mov    al,BYTE PTR [esi]
1003b53b:	add    esp,0xc
1003b53e:	cmp    al,0x61
1003b540:	sbb    ebx,ebx
1003b542:	and    ebx,0xfffffffe
1003b545:	add    ebx,0x2
1003b548:	add    ecx,0x1
1003b54b:	mov    DWORD PTR [esp+0x1c],ecx
1003b54f:	nop
1003b550:	mov    edx,DWORD PTR [esp+0x1c]
1003b554:	mov    ecx,DWORD PTR [esp+0x114]
1003b55b:	push   edx
1003b55c:	mov    edx,DWORD PTR [esp+0x114]
1003b563:	push   ebx
1003b564:	push   ecx
1003b565:	mov    ecx,DWORD PTR [esp+0x114]
1003b56c:	push   edx
1003b56d:	movzx  edx,al
1003b570:	movzx  eax,BYTE PTR [edx+0x1006d078]
1003b577:	push   edi
1003b578:	push   ecx
1003b579:	push   ebp
1003b57a:	add    eax,esi
1003b57c:	push   eax
1003b57d:	push   ebp
1003b57e:	call   0x10039230
1003b583:	add    esp,0x24
1003b586:	cmp    eax,0x1
1003b589:	je     0x1003b603
1003b58f:	test   eax,eax
1003b591:	je     0x1003b59e
1003b593:	cmp    eax,0xfffffc1c
1003b598:	jne    0x1003bd36
1003b59e:	mov    edx,DWORD PTR [esp+0x40]
1003b5a2:	lea    ecx,[esp+0x2c]
1003b5a6:	lea    eax,[edx*4+0x0]
1003b5ad:	mov    edx,DWORD PTR [edi+0xc]
1003b5b0:	mov    DWORD PTR [edi+0x7c],ecx
1003b5b3:	mov    ecx,DWORD PTR [esp+0x3c]
1003b5b7:	push   eax
1003b5b8:	push   ecx
1003b5b9:	push   edx
1003b5ba:	call   0x10043ed0
1003b5bf:	xor    eax,eax
1003b5c1:	mov    ah,BYTE PTR [esi+0x1]
1003b5c4:	add    esp,0xc
1003b5c7:	mov    al,BYTE PTR [esi+0x2]
1003b5ca:	add    esi,eax
1003b5cc:	mov    al,BYTE PTR [esi]
1003b5ce:	cmp    al,0x54
1003b5d0:	je     0x1003b550
1003b5d6:	mov    eax,DWORD PTR [esp+0x2c]
1003b5da:	mov    DWORD PTR [edi+0x7c],eax
1003b5dd:	mov    eax,DWORD PTR [esp+0x3c]
1003b5e1:	lea    ecx,[esp+0x80]
1003b5e8:	cmp    eax,ecx
1003b5ea:	je     0x1003b5f6
1003b5ec:	push   eax
1003b5ed:	call   DWORD PTR ds:0x1007e4ec
1003b5f3:	add    esp,0x4
1003b5f6:	xor    eax,eax
1003b5f8:	pop    edi
1003b5f9:	pop    esi
1003b5fa:	pop    ebp
1003b5fb:	pop    ebx
1003b5fc:	add    esp,0xe8
1003b602:	ret    
1003b603:	mov    eax,DWORD PTR [esp+0x3c]
1003b607:	mov    ecx,DWORD PTR [esp+0x2c]
1003b60b:	lea    edx,[esp+0x80]
1003b612:	cmp    eax,edx
1003b614:	mov    DWORD PTR [edi+0x7c],ecx
1003b617:	je     0x1003b623
1003b619:	push   eax
1003b61a:	call   DWORD PTR ds:0x1007e4ec
1003b620:	add    esp,0x4
1003b623:	mov    eax,0x1
1003b628:	pop    edi
1003b629:	pop    esi
1003b62a:	pop    ebp
1003b62b:	pop    ebx
1003b62c:	add    esp,0xe8
1003b632:	ret    
1003b633:	mov    edx,DWORD PTR [esp+0x11c]
1003b63a:	mov    ecx,DWORD PTR [esp+0x108]
1003b641:	add    edx,0x1
1003b644:	push   edx
1003b645:	mov    edx,DWORD PTR [esp+0x108]
1003b64c:	push   eax
1003b64d:	mov    eax,DWORD PTR [esp+0x11c]
1003b654:	push   eax
1003b655:	mov    eax,DWORD PTR [esp+0x28]
1003b659:	push   esi
1003b65a:	push   edi
1003b65b:	push   ecx
1003b65c:	push   edx
1003b65d:	push   eax
1003b65e:	push   ebp
1003b65f:	call   0x10039230
1003b664:	add    esp,0x24
1003b667:	pop    edi
1003b668:	pop    esi
1003b669:	pop    ebp
1003b66a:	pop    ebx
1003b66b:	add    esp,0xe8
1003b671:	ret    
1003b672:	mov    ecx,DWORD PTR [esp+0x108]
1003b679:	mov    DWORD PTR [edi+0x64],ebp
1003b67c:	mov    DWORD PTR [edi+0x68],ecx
1003b67f:	mov    eax,0x1
1003b684:	pop    edi
1003b685:	pop    esi
1003b686:	pop    ebp
1003b687:	pop    ebx
1003b688:	add    esp,0xe8
1003b68e:	ret    
1003b68f:	cmp    eax,ecx
1003b691:	mov    DWORD PTR [esp+0x20],ebp
1003b695:	mov    DWORD PTR [esp+0x18],eax
1003b699:	jge    0x1003b6d1
1003b69b:	mov    edx,DWORD PTR [esp+0x110]
1003b6a2:	push   edx
1003b6a3:	mov    edx,DWORD PTR [esp+0x28]
1003b6a7:	push   ebp
1003b6a8:	mov    ecx,edi
1003b6aa:	mov    eax,esi
1003b6ac:	call   0x100391b0
1003b6b1:	add    esp,0x8
1003b6b4:	test   eax,eax
1003b6b6:	je     0x1003b6cb
1003b6b8:	mov    eax,DWORD PTR [esp+0x18]
1003b6bc:	add    eax,0x1
1003b6bf:	add    ebp,esi
1003b6c1:	cmp    eax,DWORD PTR [esp+0x14]
1003b6c5:	mov    DWORD PTR [esp+0x18],eax
1003b6c9:	jl     0x1003b69b
1003b6cb:	cmp    ebp,DWORD PTR [esp+0x20]
1003b6cf:	jb     0x1003b721
1003b6d1:	mov    eax,DWORD PTR [esp+0x11c]
1003b6d8:	add    eax,0x1
1003b6db:	mov    DWORD PTR [esp+0x1c],eax
1003b6df:	mov    ecx,DWORD PTR [esp+0x1c]
1003b6e3:	mov    edx,DWORD PTR [esp+0x114]
1003b6ea:	mov    eax,DWORD PTR [esp+0x110]
1003b6f1:	push   ecx
1003b6f2:	mov    ecx,DWORD PTR [esp+0x10c]
1003b6f9:	push   0x0
1003b6fb:	push   edx
1003b6fc:	mov    edx,DWORD PTR [esp+0x110]
1003b703:	push   eax
1003b704:	push   edi
1003b705:	push   ecx
1003b706:	push   edx
1003b707:	push   ebx
1003b708:	push   ebp
1003b709:	call   0x10039230
1003b70e:	add    esp,0x24
1003b711:	test   eax,eax
1003b713:	jne    0x1003bd36
1003b719:	sub    ebp,esi
1003b71b:	cmp    ebp,DWORD PTR [esp+0x20]
1003b71f:	jae    0x1003b6df
1003b721:	xor    eax,eax
1003b723:	pop    edi
1003b724:	pop    esi
1003b725:	pop    ebp
1003b726:	pop    ebx
1003b727:	add    esp,0xe8
1003b72d:	ret    
1003b72e:	cmp    eax,esi
1003b730:	mov    DWORD PTR [esp+0x20],ebp
1003b734:	jge    0x1003b771
1003b736:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b739:	jae    0x1003b76b
1003b73b:	movzx  eax,BYTE PTR [ebp+0x0]
1003b73f:	mov    ecx,eax
1003b741:	and    ecx,0x7
1003b744:	mov    edx,0x1
1003b749:	shl    edx,cl
1003b74b:	mov    ecx,DWORD PTR [esp+0x24]
1003b74f:	shr    eax,0x3
1003b752:	mov    al,BYTE PTR [eax+ecx*1]
1003b755:	test   al,dl
1003b757:	je     0x1003b76b
1003b759:	mov    eax,DWORD PTR [esp+0x18]
1003b75d:	add    eax,0x1
1003b760:	add    ebp,0x1
1003b763:	cmp    eax,esi
1003b765:	mov    DWORD PTR [esp+0x18],eax
1003b769:	jl     0x1003b736
1003b76b:	cmp    ebp,DWORD PTR [esp+0x20]
1003b76f:	jb     0x1003b7ba
1003b771:	mov    esi,DWORD PTR [esp+0x11c]
1003b778:	add    esi,0x1
1003b77b:	mov    ecx,DWORD PTR [esp+0x114]
1003b782:	mov    edx,DWORD PTR [esp+0x110]
1003b789:	mov    eax,DWORD PTR [esp+0x108]
1003b790:	push   esi
1003b791:	push   0x0
1003b793:	push   ecx
1003b794:	mov    ecx,DWORD PTR [esp+0x110]
1003b79b:	push   edx
1003b79c:	push   edi
1003b79d:	push   eax
1003b79e:	push   ecx
1003b79f:	push   ebx
1003b7a0:	push   ebp
1003b7a1:	call   0x10039230
1003b7a6:	add    esp,0x24
1003b7a9:	test   eax,eax
1003b7ab:	jne    0x1003bd36
1003b7b1:	sub    ebp,0x1
1003b7b4:	cmp    ebp,DWORD PTR [esp+0x20]
1003b7b8:	jae    0x1003b77b
1003b7ba:	xor    eax,eax
1003b7bc:	pop    edi
1003b7bd:	pop    esi
1003b7be:	pop    ebp
1003b7bf:	pop    ebx
1003b7c0:	add    esp,0xe8
1003b7c6:	ret    
1003b7c7:	mov    edx,DWORD PTR [esp+0x114]
1003b7ce:	mov    ecx,DWORD PTR [esp+0x108]
1003b7d5:	mov    DWORD PTR [esp+0x18],eax
1003b7d9:	mov    eax,DWORD PTR [esp+0x11c]
1003b7e0:	add    eax,0x1
1003b7e3:	push   eax
1003b7e4:	push   0x0
1003b7e6:	push   edx
1003b7e7:	mov    edx,DWORD PTR [esp+0x110]
1003b7ee:	mov    DWORD PTR [esp+0x28],eax
1003b7f2:	mov    eax,DWORD PTR [esp+0x11c]
1003b7f9:	push   eax
1003b7fa:	push   edi
1003b7fb:	push   ecx
1003b7fc:	push   edx
1003b7fd:	push   ebx
1003b7fe:	push   ebp
1003b7ff:	call   0x10039230
1003b804:	add    esp,0x24
1003b807:	test   eax,eax
1003b809:	jne    0x1003bd36
1003b80f:	nop
1003b810:	cmp    DWORD PTR [esp+0x18],esi
1003b814:	jge    0x1003b40f
1003b81a:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b81d:	jae    0x1003b40f
1003b823:	movzx  eax,BYTE PTR [ebp+0x0]
1003b827:	mov    ecx,DWORD PTR [edi+0x24]
1003b82a:	movzx  edx,BYTE PTR [eax+ecx*1]
1003b82e:	add    ebp,0x1
1003b831:	cmp    DWORD PTR [esp+0x14],edx
1003b835:	jne    0x1003b40f
1003b83b:	mov    eax,DWORD PTR [esp+0x1c]
1003b83f:	mov    ecx,DWORD PTR [esp+0x114]
1003b846:	mov    edx,DWORD PTR [esp+0x110]
1003b84d:	add    DWORD PTR [esp+0x18],0x1
1003b852:	push   eax
1003b853:	mov    eax,DWORD PTR [esp+0x10c]
1003b85a:	push   0x0
1003b85c:	push   ecx
1003b85d:	mov    ecx,DWORD PTR [esp+0x110]
1003b864:	push   edx
1003b865:	push   edi
1003b866:	push   eax
1003b867:	push   ecx
1003b868:	push   ebx
1003b869:	push   ebp
1003b86a:	call   0x10039230
1003b86f:	add    esp,0x24
1003b872:	test   eax,eax
1003b874:	je     0x1003b810
1003b876:	pop    edi
1003b877:	pop    esi
1003b878:	pop    ebp
1003b879:	pop    ebx
1003b87a:	add    esp,0xe8
1003b880:	ret    
1003b881:	mov    ecx,DWORD PTR [esp+0x110]
1003b888:	mov    edx,DWORD PTR [esp+0x108]
1003b88f:	mov    DWORD PTR [esp+0x18],eax
1003b893:	mov    eax,DWORD PTR [esp+0x11c]
1003b89a:	add    eax,0x1
1003b89d:	push   eax
1003b89e:	push   0x0
1003b8a0:	mov    DWORD PTR [esp+0x24],eax
1003b8a4:	mov    eax,DWORD PTR [esp+0x11c]
1003b8ab:	push   eax
1003b8ac:	mov    eax,DWORD PTR [esp+0x110]
1003b8b3:	push   ecx
1003b8b4:	push   edi
1003b8b5:	push   edx
1003b8b6:	push   eax
1003b8b7:	push   ebx
1003b8b8:	push   ebp
1003b8b9:	call   0x10039230
1003b8be:	add    esp,0x24
1003b8c1:	test   eax,eax
1003b8c3:	jne    0x1003bd36
1003b8c9:	lea    esp,[esp+0x0]
1003b8d0:	cmp    DWORD PTR [esp+0x18],esi
1003b8d4:	jge    0x1003b40f
1003b8da:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b8dd:	jae    0x1003b40f
1003b8e3:	movzx  ecx,BYTE PTR [ebp+0x0]
1003b8e7:	add    ebp,0x1
1003b8ea:	cmp    DWORD PTR [esp+0x14],ecx
1003b8ee:	jne    0x1003b40f
1003b8f4:	mov    edx,DWORD PTR [esp+0x1c]
1003b8f8:	mov    eax,DWORD PTR [esp+0x114]
1003b8ff:	mov    ecx,DWORD PTR [esp+0x110]
1003b906:	add    DWORD PTR [esp+0x18],0x1
1003b90b:	push   edx
1003b90c:	mov    edx,DWORD PTR [esp+0x10c]
1003b913:	push   0x0
1003b915:	push   eax
1003b916:	mov    eax,DWORD PTR [esp+0x110]
1003b91d:	push   ecx
1003b91e:	push   edi
1003b91f:	push   edx
1003b920:	push   eax
1003b921:	push   ebx
1003b922:	push   ebp
1003b923:	call   0x10039230
1003b928:	add    esp,0x24
1003b92b:	test   eax,eax
1003b92d:	je     0x1003b8d0
1003b92f:	pop    edi
1003b930:	pop    esi
1003b931:	pop    ebp
1003b932:	pop    ebx
1003b933:	add    esp,0xe8
1003b939:	ret    
1003b93a:	mov    edx,DWORD PTR [esp+0x114]
1003b941:	mov    ecx,DWORD PTR [esp+0x108]
1003b948:	mov    DWORD PTR [esp+0x18],eax
1003b94c:	mov    eax,DWORD PTR [esp+0x11c]
1003b953:	add    eax,0x1
1003b956:	push   eax
1003b957:	push   0x0
1003b959:	push   edx
1003b95a:	mov    edx,DWORD PTR [esp+0x110]
1003b961:	mov    DWORD PTR [esp+0x28],eax
1003b965:	mov    eax,DWORD PTR [esp+0x11c]
1003b96c:	push   eax
1003b96d:	push   edi
1003b96e:	push   ecx
1003b96f:	push   edx
1003b970:	push   ebx
1003b971:	push   ebp
1003b972:	call   0x10039230
1003b977:	add    esp,0x24
1003b97a:	test   eax,eax
1003b97c:	jne    0x1003bd36
1003b982:	cmp    DWORD PTR [esp+0x18],esi
1003b986:	jge    0x1003b40f
1003b98c:	cmp    ebp,DWORD PTR [edi+0x5c]
1003b98f:	jae    0x1003b40f
1003b995:	movzx  eax,BYTE PTR [ebp+0x0]
1003b999:	mov    ecx,DWORD PTR [edi+0x24]
1003b99c:	movzx  edx,BYTE PTR [eax+ecx*1]
1003b9a0:	add    ebp,0x1
1003b9a3:	cmp    DWORD PTR [esp+0x14],edx
1003b9a7:	je     0x1003b40f
1003b9ad:	mov    eax,DWORD PTR [esp+0x1c]
1003b9b1:	mov    ecx,DWORD PTR [esp+0x114]
1003b9b8:	mov    edx,DWORD PTR [esp+0x110]
1003b9bf:	add    DWORD PTR [esp+0x18],0x1
1003b9c4:	push   eax
1003b9c5:	mov    eax,DWORD PTR [esp+0x10c]
1003b9cc:	push   0x0
1003b9ce:	push   ecx
1003b9cf:	mov    ecx,DWORD PTR [esp+0x110]
1003b9d6:	push   edx
1003b9d7:	push   edi
1003b9d8:	push   eax
1003b9d9:	push   ecx
1003b9da:	push   ebx
1003b9db:	push   ebp
1003b9dc:	call   0x10039230
1003b9e1:	add    esp,0x24
1003b9e4:	test   eax,eax
1003b9e6:	je     0x1003b982
1003b9e8:	pop    edi
1003b9e9:	pop    esi
1003b9ea:	pop    ebp
1003b9eb:	pop    ebx
1003b9ec:	add    esp,0xe8
1003b9f2:	ret    
1003b9f3:	mov    ecx,DWORD PTR [esp+0x110]
1003b9fa:	mov    edx,DWORD PTR [esp+0x108]
1003ba01:	mov    DWORD PTR [esp+0x18],eax
1003ba05:	mov    eax,DWORD PTR [esp+0x11c]
1003ba0c:	add    eax,0x1
1003ba0f:	push   eax
1003ba10:	push   0x0
1003ba12:	mov    DWORD PTR [esp+0x24],eax
1003ba16:	mov    eax,DWORD PTR [esp+0x11c]
1003ba1d:	push   eax
1003ba1e:	mov    eax,DWORD PTR [esp+0x110]
1003ba25:	push   ecx
1003ba26:	push   edi
1003ba27:	push   edx
1003ba28:	push   eax
1003ba29:	push   ebx
1003ba2a:	push   ebp
1003ba2b:	call   0x10039230
1003ba30:	add    esp,0x24
1003ba33:	test   eax,eax
1003ba35:	jne    0x1003bd36
1003ba3b:	jmp    0x1003ba40
1003ba3d:	lea    ecx,[ecx+0x0]
1003ba40:	cmp    DWORD PTR [esp+0x18],esi
1003ba44:	jge    0x1003b40f
1003ba4a:	cmp    ebp,DWORD PTR [edi+0x5c]
1003ba4d:	jae    0x1003b40f
1003ba53:	movzx  ecx,BYTE PTR [ebp+0x0]
1003ba57:	add    ebp,0x1
1003ba5a:	cmp    DWORD PTR [esp+0x14],ecx
1003ba5e:	je     0x1003b40f
1003ba64:	mov    edx,DWORD PTR [esp+0x1c]
1003ba68:	mov    eax,DWORD PTR [esp+0x114]
1003ba6f:	mov    ecx,DWORD PTR [esp+0x110]
1003ba76:	add    DWORD PTR [esp+0x18],0x1
1003ba7b:	push   edx
1003ba7c:	mov    edx,DWORD PTR [esp+0x10c]
1003ba83:	push   0x0
1003ba85:	push   eax
1003ba86:	mov    eax,DWORD PTR [esp+0x110]
1003ba8d:	push   ecx
1003ba8e:	push   edi
1003ba8f:	push   edx
1003ba90:	push   eax
1003ba91:	push   ebx
1003ba92:	push   ebp
1003ba93:	call   0x10039230
1003ba98:	add    esp,0x24
1003ba9b:	test   eax,eax
1003ba9d:	je     0x1003ba40
1003ba9f:	pop    edi
1003baa0:	pop    esi
1003baa1:	pop    ebp
1003baa2:	pop    ebx
1003baa3:	add    esp,0xe8
1003baa9:	ret    
1003baaa:	mov    eax,0xfffffff2
1003baaf:	pop    edi
1003bab0:	pop    esi
1003bab1:	pop    ebp
1003bab2:	pop    ebx
1003bab3:	add    esp,0xe8
1003bab9:	ret    
1003baba:	mov    edx,DWORD PTR [esp+0x114]
1003bac1:	mov    eax,DWORD PTR [esp+0x110]
1003bac8:	mov    ecx,DWORD PTR [esp+0x108]
1003bacf:	mov    DWORD PTR [esp+0x18],esi
1003bad3:	mov    esi,DWORD PTR [esp+0x11c]
1003bada:	add    esi,0x1
1003badd:	push   esi
1003bade:	push   0x0
1003bae0:	push   edx
1003bae1:	mov    edx,DWORD PTR [esp+0x110]
1003bae8:	push   eax
1003bae9:	push   edi
1003baea:	push   ecx
1003baeb:	push   edx
1003baec:	push   ebx
1003baed:	push   ebp
1003baee:	call   0x10039230
1003baf3:	add    esp,0x24
1003baf6:	test   eax,eax
1003baf8:	jne    0x1003bd36
1003bafe:	mov    eax,DWORD PTR [esp+0x18]
1003bb02:	cmp    eax,DWORD PTR [esp+0x14]
1003bb06:	jge    0x1003b40f
1003bb0c:	mov    eax,DWORD PTR [edi+0x5c]
1003bb0f:	cmp    ebp,eax
1003bb11:	jae    0x1003b40f
1003bb17:	cmp    DWORD PTR [esp+0x24],0xc
1003bb1c:	jne    0x1003bb73
1003bb1e:	mov    ecx,DWORD PTR [edi+0x18]
1003bb21:	test   ecx,ecx
1003bb23:	je     0x1003bb4d
1003bb25:	mov    edi,DWORD PTR [esp+0x10c]
1003bb2c:	push   ecx
1003bb2d:	add    edi,0x1c
1003bb30:	xor    edx,edx
1003bb32:	mov    ecx,ebp
1003bb34:	call   0x10041aa0
1003bb39:	add    esp,0x4
1003bb3c:	test   eax,eax
1003bb3e:	jne    0x1003b40f
1003bb44:	mov    edi,DWORD PTR [esp+0x10c]
1003bb4b:	jmp    0x1003bb73
1003bb4d:	mov    ecx,DWORD PTR [edi+0x1c]
1003bb50:	sub    eax,ecx
1003bb52:	cmp    ebp,eax
1003bb54:	ja     0x1003bb73
1003bb56:	mov    dl,BYTE PTR [ebp+0x0]
1003bb59:	cmp    dl,BYTE PTR [edi+0x20]
1003bb5c:	jne    0x1003bb73
1003bb5e:	cmp    ecx,0x1
1003bb61:	je     0x1003b40f
1003bb67:	mov    al,BYTE PTR [ebp+0x1]
1003bb6a:	cmp    al,BYTE PTR [edi+0x21]
1003bb6d:	je     0x1003b40f
1003bb73:	mov    ecx,DWORD PTR [esp+0x24]
1003bb77:	movzx  eax,BYTE PTR [ebp+0x0]
1003bb7b:	add    ecx,0xfffffffa
1003bb7e:	add    ebp,0x1
1003bb81:	cmp    ecx,0xf
1003bb84:	ja     0x1003baaa
1003bb8a:	jmp    DWORD PTR [ecx*4+0x1003bff8]
1003bb91:	add    eax,0xfffffff6
1003bb94:	cmp    eax,0x7b
1003bb97:	ja     0x1003b40f
1003bb9d:	movzx  ecx,BYTE PTR [eax+0x1003c048]
1003bba4:	jmp    DWORD PTR [ecx*4+0x1003c038]
1003bbab:	cmp    ebp,DWORD PTR [edi+0x5c]
1003bbae:	jae    0x1003bc8c
1003bbb4:	cmp    BYTE PTR [ebp+0x0],0xa
1003bbb8:	jne    0x1003bc8c
1003bbbe:	add    ebp,0x1
1003bbc1:	jmp    0x1003bc8c
1003bbc6:	cmp    DWORD PTR [edi+0x50],0x0
1003bbca:	jne    0x1003b40f
1003bbd0:	jmp    0x1003bc8c
1003bbd5:	cmp    eax,0x9
1003bbd8:	je     0x1003b40f
1003bbde:	cmp    eax,0x20
1003bbe1:	je     0x1003b40f
1003bbe7:	cmp    eax,0xa0
1003bbec:	jmp    0x1003bc86
1003bbf1:	cmp    eax,0x9
1003bbf4:	je     0x1003bc8c
1003bbfa:	cmp    eax,0x20
1003bbfd:	je     0x1003bc8c
1003bc03:	cmp    eax,0xa0
1003bc08:	jne    0x1003b40f
1003bc0e:	jmp    0x1003bc8c
1003bc10:	cmp    eax,0xa
1003bc13:	jb     0x1003bc8c
1003bc15:	cmp    eax,0xd
1003bc18:	jbe    0x1003b40f
1003bc1e:	cmp    eax,0x85
1003bc23:	jmp    0x1003bc86
1003bc25:	cmp    eax,0xa
1003bc28:	jb     0x1003b40f
1003bc2e:	cmp    eax,0xd
1003bc31:	jbe    0x1003bc8c
1003bc33:	cmp    eax,0x85
1003bc38:	jne    0x1003b40f
1003bc3e:	jmp    0x1003bc8c
1003bc40:	mov    edx,DWORD PTR [edi+0x28]
1003bc43:	test   BYTE PTR [eax+edx*1],0x4
1003bc47:	jne    0x1003b40f
1003bc4d:	jmp    0x1003bc8c
1003bc4f:	mov    ecx,DWORD PTR [edi+0x28]
1003bc52:	test   BYTE PTR [eax+ecx*1],0x4
1003bc56:	jmp    0x1003bc86
1003bc58:	mov    edx,DWORD PTR [edi+0x28]
1003bc5b:	test   BYTE PTR [eax+edx*1],0x1
1003bc5f:	jne    0x1003b40f
1003bc65:	jmp    0x1003bc8c
1003bc67:	mov    ecx,DWORD PTR [edi+0x28]
1003bc6a:	test   BYTE PTR [eax+ecx*1],0x1
1003bc6e:	jmp    0x1003bc86
1003bc70:	mov    edx,DWORD PTR [edi+0x28]
1003bc73:	test   BYTE PTR [eax+edx*1],0x10
1003bc77:	jne    0x1003b40f
1003bc7d:	jmp    0x1003bc8c
1003bc7f:	mov    ecx,DWORD PTR [edi+0x28]
1003bc82:	test   BYTE PTR [eax+ecx*1],0x10
1003bc86:	je     0x1003b40f
1003bc8c:	mov    edx,DWORD PTR [esp+0x114]
1003bc93:	mov    eax,DWORD PTR [esp+0x110]
1003bc9a:	mov    ecx,DWORD PTR [esp+0x108]
1003bca1:	add    DWORD PTR [esp+0x18],0x1
1003bca6:	push   esi
1003bca7:	push   0x0
1003bca9:	push   edx
1003bcaa:	mov    edx,DWORD PTR [esp+0x110]
1003bcb1:	push   eax
1003bcb2:	push   edi
1003bcb3:	push   ecx
1003bcb4:	push   edx
1003bcb5:	push   ebx
1003bcb6:	push   ebp
1003bcb7:	call   0x10039230
1003bcbc:	add    esp,0x24
1003bcbf:	test   eax,eax
1003bcc1:	je     0x1003bafe
1003bcc7:	pop    edi
1003bcc8:	pop    esi
1003bcc9:	pop    ebp
1003bcca:	pop    ebx
1003bccb:	add    esp,0xe8
1003bcd1:	ret    
1003bcd2:	cmp    ebp,DWORD PTR [esp+0x20]
1003bcd6:	jb     0x1003bd24
1003bcd8:	mov    esi,DWORD PTR [esp+0x11c]
1003bcdf:	mov    edi,DWORD PTR [esp+0x104]
1003bce6:	add    esi,0x1
1003bce9:	mov    eax,DWORD PTR [esp+0x114]
1003bcf0:	mov    ecx,DWORD PTR [esp+0x110]
1003bcf7:	mov    edx,DWORD PTR [esp+0x10c]
1003bcfe:	push   esi
1003bcff:	push   0x0
1003bd01:	push   eax
1003bd02:	mov    eax,DWORD PTR [esp+0x114]
1003bd09:	push   ecx
1003bd0a:	push   edx
1003bd0b:	push   eax
1003bd0c:	push   edi
1003bd0d:	push   ebx
1003bd0e:	push   ebp
1003bd0f:	call   0x10039230
1003bd14:	add    esp,0x24
1003bd17:	sub    ebp,0x1
1003bd1a:	test   eax,eax
1003bd1c:	jne    0x1003bd36
1003bd1e:	cmp    ebp,DWORD PTR [esp+0x20]
1003bd22:	jae    0x1003bce9
1003bd24:	xor    eax,eax
1003bd26:	pop    edi
1003bd27:	pop    esi
1003bd28:	pop    ebp
1003bd29:	pop    ebx
1003bd2a:	add    esp,0xe8
1003bd30:	ret    
1003bd31:	mov    eax,0xfffffffb
1003bd36:	pop    edi
1003bd37:	pop    esi
1003bd38:	pop    ebp
1003bd39:	pop    ebx
1003bd3a:	add    esp,0xe8
1003bd40:	ret    
1003bd41:	lea    ecx,[ecx+0x0]
1003bd44:	ret    0x393
1003bd47:	adc    BYTE PTR [esi],al
1003bd49:	cdq    
1003bd4a:	add    edx,DWORD PTR [eax]
1003bd4c:	pop    ss
1003bd4d:	cdq    
1003bd4e:	add    edx,DWORD PTR [eax]
1003bd50:	sub    eax,0x61100399
1003bd55:	call   0x1003:0x9b551003
1003bd5c:	jp     0x1003bcf9
1003bd5e:	add    edx,DWORD PTR [eax]
1003bd60:	lahf   
1003bd61:	fwait
1003bd62:	add    edx,DWORD PTR [eax]
1003bd64:	les    ebx,FWORD PTR [ebx-0x6416effd]
1003bd6a:	add    edx,DWORD PTR [eax]
1003bd6c:	push   cs
1003bd6d:	pushf  
1003bd6e:	add    edx,DWORD PTR [eax]
1003bd70:	retf   0x39a
1003bd73:	adc    BYTE PTR [ecx],ch
1003bd75:	fwait
1003bd76:	add    edx,DWORD PTR [eax]
1003bd78:	aas    
1003bd79:	fwait
1003bd7a:	add    edx,DWORD PTR [eax]
1003bd7c:	xor    ebx,DWORD PTR [ebx+eax*1+0x39ca010]
1003bd83:	adc    BYTE PTR [eax],bl
1003bd85:	popf   
1003bd86:	add    edx,DWORD PTR [eax]
1003bd88:	sbb    BYTE PTR [ebp-0x623eeffd],0x3
1003bd8f:	adc    dh,cl
1003bd91:	cdq    
1003bd92:	add    edx,DWORD PTR [eax]
1003bd94:	push   eax
1003bd95:	call   0x1003:0x94111003
1003bd9c:	jbe    0x1003bd36
1003bd9e:	add    edx,DWORD PTR [eax]
1003bda0:	cmp    al,0x99
1003bda2:	add    edx,DWORD PTR [eax]
1003bda4:	loop   0x1003bd47
1003bda6:	add    edx,DWORD PTR [eax]
1003bda8:	pop    es
1003bda9:	mov    ds:0xa48f1003,al
1003bdae:	add    edx,DWORD PTR [eax]
1003bdb0:	cdq    
1003bdb1:	mov    ds:0xa2511003,al
1003bdb6:	add    edx,DWORD PTR [eax]
1003bdb8:	aaa    
1003bdb9:	mov    ds:0xa26e1003,al
1003bdbe:	add    edx,DWORD PTR [eax]
1003bdc0:	jge    0x1003bd64
1003bdc2:	add    edx,DWORD PTR [eax]
1003bdc4:	mov    ah,BYTE PTR [edx-0x5db6effd]
1003bdca:	add    edx,DWORD PTR [eax]
1003bdcc:	popa   
1003bdcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1003bdce:	add    edx,DWORD PTR [eax]
1003bdd0:	std    
1003bdd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1003bdd2:	add    edx,DWORD PTR [eax]
1003bdd4:	jmp    0x2d13c17d
1003bdd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1003bdda:	add    edx,DWORD PTR [eax]
1003bddc:	sub    al,0xa5
1003bdde:	add    edx,DWORD PTR [eax]
1003bde0:	cmp    DWORD PTR [ebp-0x5ab7effd],esp
1003bde6:	add    edx,DWORD PTR [eax]
1003bde8:	jmp    0x8a13c194
1003bded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1003bdee:	add    edx,DWORD PTR [eax]
1003bdf0:	pop    esp
1003bdf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1003bdf2:	add    edx,DWORD PTR [eax]
1003bdf4:	pushf  
1003bdf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1003bdf6:	add    edx,DWORD PTR [eax]
1003bdf8:	scas   al,BYTE PTR es:[edi]
1003bdf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1003bdfa:	add    edx,DWORD PTR [eax]
1003bdfc:	mov    ebx,0xce1003a7
1003be01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
1003be02:	add    edx,DWORD PTR [eax]
1003be04:	pop    ds
1003be05:	mov    al,ds:0x9e061003
1003be0a:	add    edx,DWORD PTR [eax]
1003be0c:	xchg   esp,eax
1003be0d:	mov    ah,0x3
1003be0f:	adc    BYTE PTR [ecx-0x6b],al
1003be12:	add    edx,DWORD PTR [eax]
1003be14:	test   BYTE PTR [esi-0x68a5effd],dl
1003be1a:	add    edx,DWORD PTR [eax]
1003be1c:	and    al,0x94
1003be1e:	add    edx,DWORD PTR [eax]
1003be20:	mov    ah,0x94
1003be22:	add    edx,DWORD PTR [eax]
1003be24:	es xchg ebp,eax
1003be26:	add    edx,DWORD PTR [eax]
1003be28:	fst    QWORD PTR [ebp-0x5077effd]
1003be2e:	add    edx,DWORD PTR [eax]
1003be30:	jo     0x1003bde1
1003be32:	add    edx,DWORD PTR [eax]
1003be34:	jmp    0xa813c1cb
1003be39:	xchg   esi,eax
1003be3a:	add    edx,DWORD PTR [eax]
1003be3c:	jmp    0x1003bdd4
1003be3e:	add    edx,DWORD PTR [eax]
1003be40:	mov    ecx,0x6f1003b1
1003be45:	mov    dl,0x3
1003be47:	adc    ch,cl
1003be49:	mov    dl,0x3
1003be4b:	adc    BYTE PTR [edx+esi*4],dl
1003be4e:	add    edx,DWORD PTR [eax]
1003be50:	lfs    eax,FWORD PTR [ebx]
1003be53:	adc    BYTE PTR [eax-0x69],al
1003be56:	add    edx,DWORD PTR [eax]
1003be58:	xor    DWORD PTR [ebp+0x1001003],edi
1003be5e:	add    al,BYTE PTR [ebx]
1003be60:	add    al,0x4
1003be62:	add    eax,0x9080706
1003be67:	or     cl,BYTE PTR [ebx]
1003be69:	or     al,0xd
1003be6b:	inc    ebp
1003be6c:	inc    ebp
1003be6d:	push   cs
1003be6e:	movups xmm2,XMMWORD PTR [ecx]
1003be71:	adc    al,BYTE PTR [ebp+0x13]
1003be74:	adc    al,0x15
1003be76:	push   ss
1003be77:	pop    ss
1003be78:	sbb    BYTE PTR [ecx],bl
1003be7a:	sbb    bl,BYTE PTR [ebx]
1003be7c:	sbb    ebx,DWORD PTR [ebx]
1003be7e:	sbb    ebx,DWORD PTR [ebx]
1003be80:	sbb    ebx,DWORD PTR [esp+ebx*1]
1003be83:	sbb    eax,0x21201f1e
1003be88:	and    ah,BYTE PTR [edx]
1003be8a:	and    ah,BYTE PTR [edx]
1003be8c:	and    ah,BYTE PTR [edx]
1003be8e:	and    esp,DWORD PTR [ebx]
1003be90:	and    al,0x25
1003be92:	es daa 
1003be94:	sub    BYTE PTR [ecx],ch
1003be96:	sub    DWORD PTR [ecx],ebp
1003be98:	sub    DWORD PTR [ecx],ebp
1003be9a:	sub    DWORD PTR [edx],ebp
1003be9c:	sub    ch,BYTE PTR [ebx]
1003be9e:	sub    al,0x2d
1003bea0:	cs das 
1003bea2:	inc    ebp
1003bea3:	inc    ebp
1003bea4:	inc    ebp
1003bea5:	inc    ebp
1003bea6:	inc    ebp
1003bea7:	inc    ebp
1003bea8:	inc    ebp
1003bea9:	inc    ebp
1003beaa:	xor    BYTE PTR [eax],dh
1003beac:	inc    ebp
1003bead:	xor    DWORD PTR [edx],esi
1003beaf:	xor    esi,DWORD PTR [esi*1+0x37363535]
1003beb6:	ss aaa 
1003beb8:	cmp    BYTE PTR [ecx],bh
1003beba:	cmp    bh,BYTE PTR [ebx]
1003bebc:	cmp    al,0x3a
1003bebe:	cmp    edi,DWORD PTR [eax*2+0x3e3d4545]
1003bec5:	aas    
1003bec6:	inc    eax
1003bec7:	inc    ecx
1003bec8:	inc    edx
1003bec9:	inc    ebx
1003beca:	add    BYTE PTR [ebp+eiz*2-0x62],al
1003bece:	add    edx,DWORD PTR [eax]
1003bed0:	cwde   
1003bed1:	sahf   
1003bed2:	add    edx,DWORD PTR [eax]
1003bed4:	add    BYTE PTR [eax],al
1003bed6:	add    BYTE PTR [eax],al
1003bed8:	add    BYTE PTR [eax],al
1003beda:	add    DWORD PTR [ecx],eax
1003bedc:	dec    ecx
1003bedd:	mov    al,ds:0xa0751003
1003bee2:	add    edx,DWORD PTR [eax]
1003bee4:	add    BYTE PTR [eax],al
1003bee6:	add    BYTE PTR [eax],al
1003bee8:	add    BYTE PTR [eax],al
1003beea:	add    DWORD PTR [ecx],eax
1003beec:	inc    edi
1003beed:	stos   BYTE PTR es:[edi],al
1003beee:	add    edx,DWORD PTR [eax]
1003bef0:	sub    DWORD PTR [edx-0x554deffd],0xaae31003
1003befa:	add    edx,DWORD PTR [eax]
1003befc:	adc    DWORD PTR [ebx-0x54c1effd],ebp
1003bf02:	add    edx,DWORD PTR [eax]
1003bf04:	dec    ebp
1003bf05:	test   al,0x3
1003bf07:	adc    dh,dl
1003bf09:	test   al,0x3
1003bf0b:	adc    dh,dl
1003bf0d:	test   al,0x3
1003bf0f:	adc    BYTE PTR [edx-0x55effc46],ch
1003bf15:	mov    edx,0xa8dd1003
1003bf1a:	add    edx,DWORD PTR [eax]
1003bf1c:	ds test eax,0xa9881003
1003bf22:	add    edx,DWORD PTR [eax]
1003bf24:	lds    ebp,FWORD PTR [ecx-0x55f9effd]
1003bf2a:	add    edx,DWORD PTR [eax]
1003bf2c:	xor    ch,BYTE PTR [ecx-0x56d7effd]
1003bf32:	add    edx,DWORD PTR [eax]
1003bf34:	sbb    DWORD PTR [ecx-0x4bf0effd],ebp
1003bf3a:	add    edx,DWORD PTR [eax]
1003bf3c:	add    BYTE PTR [ecx],al
1003bf3e:	add    DWORD PTR [edx],eax
1003bf40:	add    eax,DWORD PTR [ebx]
1003bf42:	add    eax,DWORD PTR [ebx]
1003bf44:	add    eax,DWORD PTR [ebx]
1003bf46:	add    eax,DWORD PTR [ebx]
1003bf48:	add    eax,DWORD PTR [ebx]
1003bf4a:	add    eax,DWORD PTR [ebx]
1003bf4c:	add    eax,DWORD PTR [ebx]
1003bf4e:	add    eax,DWORD PTR [ebx]
1003bf50:	add    eax,DWORD PTR [ebx]
1003bf52:	add    eax,DWORD PTR [ebx]
1003bf54:	add    eax,DWORD PTR [ebx]
1003bf56:	add    eax,DWORD PTR [ebx]
1003bf58:	add    eax,DWORD PTR [ebx]
1003bf5a:	add    eax,DWORD PTR [ebx]
1003bf5c:	add    eax,DWORD PTR [ebx]
1003bf5e:	add    eax,DWORD PTR [ebx]
1003bf60:	add    eax,DWORD PTR [ebx]
1003bf62:	add    eax,DWORD PTR [ebx]
1003bf64:	add    eax,DWORD PTR [ebx]
1003bf66:	add    eax,DWORD PTR [ebx]
1003bf68:	add    eax,DWORD PTR [ebx]
1003bf6a:	add    eax,DWORD PTR [ebx]
1003bf6c:	add    eax,DWORD PTR [ebx]
1003bf6e:	add    eax,DWORD PTR [ebx]
1003bf70:	add    eax,DWORD PTR [ebx]
1003bf72:	add    eax,DWORD PTR [ebx]
1003bf74:	add    eax,DWORD PTR [ebx]
1003bf76:	add    eax,DWORD PTR [ebx]
1003bf78:	add    eax,DWORD PTR [ebx]
1003bf7a:	add    eax,DWORD PTR [ebx]
1003bf7c:	add    eax,DWORD PTR [ebx]
1003bf7e:	add    eax,DWORD PTR [ebx]
1003bf80:	add    eax,DWORD PTR [ebx]
1003bf82:	add    eax,DWORD PTR [ebx]
1003bf84:	add    eax,DWORD PTR [ebx]
1003bf86:	add    eax,DWORD PTR [ebx]
1003bf88:	add    eax,DWORD PTR [ebx]
1003bf8a:	add    eax,DWORD PTR [ebx]
1003bf8c:	add    eax,DWORD PTR [ebx]
1003bf8e:	add    eax,DWORD PTR [ebx]
1003bf90:	add    eax,DWORD PTR [ebx]
1003bf92:	add    eax,DWORD PTR [ebx]
1003bf94:	add    eax,DWORD PTR [ebx]
1003bf96:	add    eax,DWORD PTR [ebx]
1003bf98:	add    eax,DWORD PTR [ebx]
1003bf9a:	add    eax,DWORD PTR [ebx]
1003bf9c:	add    eax,DWORD PTR [ebx]
1003bf9e:	add    eax,DWORD PTR [ebx]
1003bfa0:	add    eax,DWORD PTR [ebx]
1003bfa2:	add    eax,DWORD PTR [ebx]
1003bfa4:	add    eax,DWORD PTR [ebx]
1003bfa6:	add    eax,DWORD PTR [ebx]
1003bfa8:	add    eax,DWORD PTR [ebx]
1003bfaa:	add    eax,DWORD PTR [ebx]
1003bfac:	add    eax,DWORD PTR [ebx]
1003bfae:	add    eax,DWORD PTR [ebx]
1003bfb0:	add    eax,DWORD PTR [ebx]
1003bfb2:	add    eax,DWORD PTR [ebx]
1003bfb4:	add    eax,DWORD PTR [ebx]
1003bfb6:	add    eax,DWORD PTR [ecx]
1003bfb8:	mov    ebp,0xfa1003ad
1003bfbd:	lods   eax,DWORD PTR ds:[esi]
1003bfbe:	add    edx,DWORD PTR [eax]
1003bfc0:	xor    DWORD PTR [esi-0x5195effd],ebp
1003bfc6:	add    edx,DWORD PTR [eax]
1003bfc8:	call   0x3ae:0xc21003ae
1003bfcf:	adc    BYTE PTR [ebx+ebp*4-0x53e8effd],bl
1003bfd6:	add    edx,DWORD PTR [eax]
1003bfd8:	pop    ss
1003bfd9:	lods   al,BYTE PTR ds:[esi]
1003bfda:	add    edx,DWORD PTR [eax]
1003bfdc:	stos   BYTE PTR es:[edi],al
1003bfdd:	mov    edx,0xbaaa1003
1003bfe2:	add    edx,DWORD PTR [eax]
1003bfe4:	das    
1003bfe5:	lods   al,BYTE PTR ds:[esi]
1003bfe6:	add    edx,DWORD PTR [eax]
1003bfe8:	xchg   ebp,eax
1003bfe9:	lods   al,BYTE PTR ds:[esi]
1003bfea:	add    edx,DWORD PTR [eax]
1003bfec:	fsubr  QWORD PTR [ebx+eax*1+0x3ad1b10]
1003bff3:	adc    BYTE PTR [ebp+ebp*4+0x3],dh
1003bff7:	adc    BYTE PTR [eax-0x44],al
1003bffa:	add    edx,DWORD PTR [eax]
1003bffc:	dec    edi
1003bffd:	mov    esp,0xbc581003
1003c002:	add    edx,DWORD PTR [eax]
1003c004:	addr16 mov esp,0xbc701003
1003c00a:	add    edx,DWORD PTR [eax]
1003c00c:	jg     0x1003bfca
1003c00e:	add    edx,DWORD PTR [eax]
1003c010:	mov    WORD PTR [ebx+eax*1+0x3bc8c10],?
1003c017:	adc    BYTE PTR [esp+edi*4-0x4555effd],cl
1003c01e:	add    edx,DWORD PTR [eax]
1003c020:	stos   BYTE PTR es:[edi],al
1003c021:	mov    edx,0xbb911003
1003c026:	add    edx,DWORD PTR [eax]
1003c028:	aad    0xbb
1003c02a:	add    edx,DWORD PTR [eax]
1003c02c:	icebp  
1003c02d:	mov    ebx,0xbc101003
1003c032:	add    edx,DWORD PTR [eax]
1003c034:	and    eax,0x8c1003bc
1003c039:	mov    esp,0xbbc61003
1003c03e:	add    edx,DWORD PTR [eax]
1003c040:	stos   DWORD PTR es:[edi],eax
1003c041:	mov    ebx,0xb40f1003
1003c046:	add    edx,DWORD PTR [eax]
1003c048:	add    BYTE PTR [ecx],al
1003c04a:	add    DWORD PTR [edx],eax
1003c04c:	add    eax,DWORD PTR [ebx]
1003c04e:	add    eax,DWORD PTR [ebx]
1003c050:	add    eax,DWORD PTR [ebx]
1003c052:	add    eax,DWORD PTR [ebx]
1003c054:	add    eax,DWORD PTR [ebx]
1003c056:	add    eax,DWORD PTR [ebx]
1003c058:	add    eax,DWORD PTR [ebx]
1003c05a:	add    eax,DWORD PTR [ebx]
1003c05c:	add    eax,DWORD PTR [ebx]
1003c05e:	add    eax,DWORD PTR [ebx]
1003c060:	add    eax,DWORD PTR [ebx]
1003c062:	add    eax,DWORD PTR [ebx]
1003c064:	add    eax,DWORD PTR [ebx]
1003c066:	add    eax,DWORD PTR [ebx]
1003c068:	add    eax,DWORD PTR [ebx]
1003c06a:	add    eax,DWORD PTR [ebx]
1003c06c:	add    eax,DWORD PTR [ebx]
1003c06e:	add    eax,DWORD PTR [ebx]
1003c070:	add    eax,DWORD PTR [ebx]
1003c072:	add    eax,DWORD PTR [ebx]
1003c074:	add    eax,DWORD PTR [ebx]
1003c076:	add    eax,DWORD PTR [ebx]
1003c078:	add    eax,DWORD PTR [ebx]
1003c07a:	add    eax,DWORD PTR [ebx]
1003c07c:	add    eax,DWORD PTR [ebx]
1003c07e:	add    eax,DWORD PTR [ebx]
1003c080:	add    eax,DWORD PTR [ebx]
1003c082:	add    eax,DWORD PTR [ebx]
1003c084:	add    eax,DWORD PTR [ebx]
1003c086:	add    eax,DWORD PTR [ebx]
1003c088:	add    eax,DWORD PTR [ebx]
1003c08a:	add    eax,DWORD PTR [ebx]
1003c08c:	add    eax,DWORD PTR [ebx]
1003c08e:	add    eax,DWORD PTR [ebx]
1003c090:	add    eax,DWORD PTR [ebx]
1003c092:	add    eax,DWORD PTR [ebx]
1003c094:	add    eax,DWORD PTR [ebx]
1003c096:	add    eax,DWORD PTR [ebx]
1003c098:	add    eax,DWORD PTR [ebx]
1003c09a:	add    eax,DWORD PTR [ebx]
1003c09c:	add    eax,DWORD PTR [ebx]
1003c09e:	add    eax,DWORD PTR [ebx]
1003c0a0:	add    eax,DWORD PTR [ebx]
1003c0a2:	add    eax,DWORD PTR [ebx]
1003c0a4:	add    eax,DWORD PTR [ebx]
1003c0a6:	add    eax,DWORD PTR [ebx]
1003c0a8:	add    eax,DWORD PTR [ebx]
1003c0aa:	add    eax,DWORD PTR [ebx]
1003c0ac:	add    eax,DWORD PTR [ebx]
1003c0ae:	add    eax,DWORD PTR [ebx]
1003c0b0:	add    eax,DWORD PTR [ebx]
1003c0b2:	add    eax,DWORD PTR [ebx]
1003c0b4:	add    eax,DWORD PTR [ebx]
1003c0b6:	add    eax,DWORD PTR [ebx]
1003c0b8:	add    eax,DWORD PTR [ebx]
1003c0ba:	add    eax,DWORD PTR [ebx]
1003c0bc:	add    eax,DWORD PTR [ebx]
1003c0be:	add    eax,DWORD PTR [ebx]
1003c0c0:	add    eax,DWORD PTR [ebx]
1003c0c2:	add    eax,DWORD PTR [ecx]
1003c0c4:	int3   
1003c0c5:	int3   
1003c0c6:	int3   
1003c0c7:	int3   
1003c0c8:	int3   
1003c0c9:	int3   
1003c0ca:	int3   
1003c0cb:	int3   
1003c0cc:	int3   
1003c0cd:	int3   
1003c0ce:	int3   
1003c0cf:	int3   
1003c0d0:	sub    esp,0x134
1003c0d6:	mov    eax,ds:0x1007d030
1003c0db:	xor    eax,esp
1003c0dd:	mov    DWORD PTR [esp+0x12c],eax
1003c0e4:	mov    eax,DWORD PTR [esp+0x13c]
1003c0eb:	push   ebx
1003c0ec:	mov    ebx,DWORD PTR [esp+0x148]
1003c0f3:	push   ebp
1003c0f4:	mov    ebp,DWORD PTR [esp+0x140]
1003c0fb:	push   esi
1003c0fc:	mov    esi,ecx
1003c0fe:	or     ecx,0xffffffff
1003c101:	push   edi
1003c102:	mov    edi,edx
1003c104:	xor    edx,edx
1003c106:	test   esi,0xfe0f5a6f
1003c10c:	mov    DWORD PTR [esp+0x1c],ecx
1003c110:	mov    DWORD PTR [esp+0x44],ecx
1003c114:	mov    DWORD PTR [esp+0x50],ecx
1003c118:	lea    ecx,[edi-0x1]
1003c11b:	mov    DWORD PTR [esp+0x28],ebx
1003c11f:	mov    DWORD PTR [esp+0x2c],edx
1003c123:	mov    DWORD PTR [esp+0x4c],edx
1003c127:	mov    DWORD PTR [esp+0x54],edx
1003c12b:	mov    DWORD PTR [esp+0x3c],edx
1003c12f:	mov    DWORD PTR [esp+0x58],edi
1003c133:	mov    DWORD PTR [esp+0x34],ecx
1003c137:	mov    DWORD PTR [esp+0x20],ebp
1003c13b:	je     0x1003c147
1003c13d:	mov    eax,0xfffffffd
1003c142:	jmp    0x1003ca3c
1003c147:	cmp    ebp,edx
1003c149:	je     0x1003ca37
1003c14f:	cmp    edi,edx
1003c151:	je     0x1003ca37
1003c157:	cmp    ebx,edx
1003c159:	je     0x1003ca37
1003c15f:	cmp    eax,edx
1003c161:	mov    ecx,0x989680
1003c166:	mov    DWORD PTR [esp+0x8c],ecx
1003c16d:	mov    DWORD PTR [esp+0x90],ecx
1003c174:	mov    ecx,DWORD PTR [ebp+0x20]
1003c177:	mov    DWORD PTR [esp+0x14],edx
1003c17b:	mov    DWORD PTR [esp+0x108],edx
1003c182:	mov    DWORD PTR [esp+0x18],ecx
1003c186:	je     0x1003c1cf
1003c188:	mov    ecx,DWORD PTR [eax]
1003c18a:	test   cl,0x1
1003c18d:	je     0x1003c196
1003c18f:	mov    ebx,DWORD PTR [eax+0x4]
1003c192:	mov    DWORD PTR [esp+0x14],ebx
1003c196:	test   cl,0x2
1003c199:	je     0x1003c1a5
1003c19b:	mov    ebx,DWORD PTR [eax+0x8]
1003c19e:	mov    DWORD PTR [esp+0x8c],ebx
1003c1a5:	test   cl,0x10
1003c1a8:	je     0x1003c1b4
1003c1aa:	mov    ebx,DWORD PTR [eax+0x14]
1003c1ad:	mov    DWORD PTR [esp+0x90],ebx
1003c1b4:	test   cl,0x4
1003c1b7:	je     0x1003c1c3
1003c1b9:	mov    ebx,DWORD PTR [eax+0xc]
1003c1bc:	mov    DWORD PTR [esp+0x108],ebx
1003c1c3:	test   cl,0x8
1003c1c6:	je     0x1003c1cf
1003c1c8:	mov    eax,DWORD PTR [eax+0x10]
1003c1cb:	mov    DWORD PTR [esp+0x18],eax
1003c1cf:	cmp    DWORD PTR [esp+0x18],edx
1003c1d3:	jne    0x1003c1dd
1003c1d5:	mov    DWORD PTR [esp+0x18],0x1006d0e8
1003c1dd:	cmp    DWORD PTR [ebp+0x0],0x50435245
1003c1e4:	je     0x1003c22c
1003c1e6:	mov    ebx,DWORD PTR [esp+0x14]
1003c1ea:	lea    ecx,[esp+0x114]
1003c1f1:	push   ecx
1003c1f2:	lea    edx,[esp+0x64]
1003c1f6:	push   edx
1003c1f7:	mov    edx,ebp
1003c1f9:	call   0x10041c20
1003c1fe:	add    esp,0x8
1003c201:	test   eax,eax
1003c203:	mov    DWORD PTR [esp+0x20],eax
1003c207:	jne    0x1003c213
1003c209:	mov    eax,0xfffffffc
1003c20e:	jmp    0x1003ca3c
1003c213:	mov    ebx,DWORD PTR [esp+0x20]
1003c217:	xor    edx,edx
1003c219:	cmp    DWORD PTR [esp+0x14],edx
1003c21d:	je     0x1003c230
1003c21f:	lea    eax,[esp+0x114]
1003c226:	mov    DWORD PTR [esp+0x14],eax
1003c22a:	jmp    0x1003c230
1003c22c:	xor    edx,edx
1003c22e:	mov    ebx,ebp
1003c230:	mov    eax,DWORD PTR [ebx+0x8]
1003c233:	mov    ecx,eax
1003c235:	shr    eax,0x12
1003c238:	and    eax,0x1
1003c23b:	or     ecx,esi
1003c23d:	mov    DWORD PTR [esp+0x38],eax
1003c241:	movzx  eax,WORD PTR [ebx+0x1a]
1003c245:	shr    ecx,0x4
1003c248:	and    ecx,0x1
1003c24b:	mov    DWORD PTR [esp+0x40],ecx
1003c24f:	movzx  ecx,BYTE PTR [ebx+0xc]
1003c253:	shr    ecx,0x3
1003c256:	and    ecx,0x1
1003c259:	mov    DWORD PTR [esp+0x48],ecx
1003c25d:	movzx  ecx,WORD PTR [ebx+0x1c]
1003c261:	imul   ecx,eax
1003c264:	movzx  eax,WORD PTR [ebx+0x18]
1003c268:	add    ecx,ebp
1003c26a:	add    eax,ecx
1003c26c:	mov    ecx,DWORD PTR [esp+0x150]
1003c273:	mov    DWORD PTR [esp+0xdc],eax
1003c27a:	mov    DWORD PTR [esp+0xe0],edi
1003c281:	add    edi,ecx
1003c283:	mov    DWORD PTR [esp+0xe4],edi
1003c28a:	mov    ecx,0x1
1003c28f:	mov    DWORD PTR [esp+0xf8],edx
1003c296:	mov    eax,DWORD PTR [ebx+0x8]
1003c299:	shr    eax,0x5
1003c29c:	and    eax,ecx
1003c29e:	mov    DWORD PTR [esp+0xc8],eax
1003c2a5:	mov    eax,DWORD PTR [ebx+0x8]
1003c2a8:	shr    eax,0xb
1003c2ab:	and    eax,ecx
1003c2ad:	mov    DWORD PTR [esp+0xc0],eax
1003c2b4:	mov    DWORD PTR [esp+0x24],eax
1003c2b8:	mov    eax,DWORD PTR [ebx+0x8]
1003c2bb:	shr    eax,0x19
1003c2be:	and    eax,ecx
1003c2c0:	mov    ebp,DWORD PTR [esp+0x18]
1003c2c4:	mov    DWORD PTR [esp+0xc4],eax
1003c2cb:	mov    eax,esi
1003c2cd:	shr    eax,0x7
1003c2d0:	and    eax,ecx
1003c2d2:	mov    DWORD PTR [esp+0xb8],eax
1003c2d9:	mov    eax,esi
1003c2db:	shr    eax,0x8
1003c2de:	and    eax,ecx
1003c2e0:	mov    DWORD PTR [esp+0xbc],eax
1003c2e7:	mov    eax,esi
1003c2e9:	shr    eax,0xa
1003c2ec:	and    eax,ecx
1003c2ee:	mov    DWORD PTR [esp+0x30],edi
1003c2f2:	mov    DWORD PTR [esp+0xcc],eax
1003c2f9:	lea    eax,[ebp+0x340]
1003c2ff:	mov    edi,esi
1003c301:	shr    edi,0xf
1003c304:	mov    DWORD PTR [esp+0xb0],eax
1003c30b:	and    edi,ecx
1003c30d:	mov    eax,esi
1003c30f:	and    eax,0x1800000
1003c314:	mov    DWORD PTR [esp+0xd0],edi
1003c31b:	mov    DWORD PTR [esp+0xd4],edx
1003c322:	mov    DWORD PTR [esp+0x104],edx
1003c329:	mov    DWORD PTR [esp+0xac],ebp
1003c330:	je     0x1003c353
1003c332:	cmp    eax,0x800000
1003c337:	je     0x1003c34a
1003c339:	cmp    eax,0x1000000
1003c33e:	je     0x1003c36b
1003c340:	mov    eax,0xffffffe9
1003c345:	jmp    0x1003ca3c
1003c34a:	mov    DWORD PTR [esp+0xd8],ecx
1003c351:	jmp    0x1003c372
1003c353:	mov    eax,DWORD PTR [ebx+0x8]
1003c356:	test   eax,0x1800000
1003c35b:	je     0x1003c36b
1003c35d:	shr    eax,0x17
1003c360:	and    eax,ecx
1003c362:	mov    DWORD PTR [esp+0xd8],eax
1003c369:	jmp    0x1003c372
1003c36b:	mov    DWORD PTR [esp+0xd8],edx
1003c372:	test   esi,0x700000
1003c378:	jne    0x1003c37d
1003c37a:	mov    esi,DWORD PTR [ebx+0x8]
1003c37d:	and    esi,0x700000
1003c383:	cmp    esi,0x300000
1003c389:	ja     0x1003c3e2
1003c38b:	je     0x1003c3db
1003c38d:	cmp    esi,edx
1003c38f:	je     0x1003c3a1
1003c391:	cmp    esi,0x100000
1003c397:	je     0x1003c3d4
1003c399:	cmp    esi,0x200000
1003c39f:	jne    0x1003c340
1003c3a1:	mov    eax,0xa
1003c3a6:	cmp    eax,0xff
1003c3ab:	mov    DWORD PTR [esp+0xa0],edx
1003c3b2:	jle    0x1003c40c
1003c3b4:	mov    ecx,eax
1003c3b6:	sar    ecx,0x8
1003c3b9:	mov    DWORD PTR [esp+0xa4],0x2
1003c3c4:	mov    BYTE PTR [esp+0xa8],cl
1003c3cb:	mov    BYTE PTR [esp+0xa9],al
1003c3d2:	jmp    0x1003c41a
1003c3d4:	mov    eax,0xd
1003c3d9:	jmp    0x1003c3a6
1003c3db:	mov    eax,0xd0a
1003c3e0:	jmp    0x1003c3a6
1003c3e2:	cmp    esi,0x400000
1003c3e8:	je     0x1003c403
1003c3ea:	cmp    esi,0x500000
1003c3f0:	jne    0x1003c340
1003c3f6:	mov    DWORD PTR [esp+0xa0],0x2
1003c401:	jmp    0x1003c41a
1003c403:	mov    DWORD PTR [esp+0xa0],ecx
1003c40a:	jmp    0x1003c41a
1003c40c:	mov    DWORD PTR [esp+0xa4],ecx
1003c413:	mov    BYTE PTR [esp+0xa8],al
1003c41a:	cmp    edi,edx
1003c41c:	je     0x1003c42e
1003c41e:	test   BYTE PTR [ebx+0xc],0x1
1003c422:	je     0x1003c42e
1003c424:	mov    eax,0xfffffff3
1003c429:	jmp    0x1003ca3c
1003c42e:	mov    eax,DWORD PTR [ebx+0x8]
1003c431:	and    eax,0x7
1003c434:	mov    DWORD PTR [esp+0x5c],eax
1003c438:	movzx  eax,WORD PTR [ebx+0x12]
1003c43c:	cmp    ax,dx
1003c43f:	mov    esi,0x33
1003c444:	jbe    0x1003c484
1003c446:	movzx  eax,ax
1003c449:	cmp    eax,0x11
1003c44c:	jl     0x1003c484
1003c44e:	lea    esi,[eax+eax*2+0x3]
1003c452:	lea    ecx,[esi*4+0x0]
1003c459:	push   ecx
1003c45a:	call   DWORD PTR ds:0x1007e4e8
1003c460:	mov    edi,eax
1003c462:	add    esp,0x4
1003c465:	test   edi,edi
1003c467:	mov    DWORD PTR [esp+0x94],edi
1003c46e:	jne    0x1003c47a
1003c470:	mov    eax,0xfffffffa
1003c475:	jmp    0x1003ca3c
1003c47a:	mov    DWORD PTR [esp+0x2c],0x1
1003c482:	jmp    0x1003c48f
1003c484:	mov    edi,DWORD PTR [esp+0x28]
1003c488:	mov    DWORD PTR [esp+0x94],edi
1003c48f:	lea    ecx,[esi+esi*1]
1003c492:	mov    eax,0x55555556
1003c497:	imul   ecx
1003c499:	mov    eax,edx
1003c49b:	shr    eax,0x1f
1003c49e:	add    eax,edx
1003c4a0:	mov    DWORD PTR [esp+0x9c],eax
1003c4a7:	mov    DWORD PTR [esp+0x98],esi
1003c4ae:	mov    DWORD PTR [esp+0xb4],0x0
1003c4b9:	mov    DWORD PTR [esp+0xf4],0xffffffff
1003c4c4:	movzx  eax,WORD PTR [ebx+0x10]
1003c4c8:	lea    eax,[eax+eax*1+0x2]
1003c4cc:	cmp    eax,0x33
1003c4cf:	mov    DWORD PTR [esp+0x18],eax
1003c4d3:	jle    0x1003c4db
1003c4d5:	mov    eax,esi
1003c4d7:	mov    DWORD PTR [esp+0x18],esi
1003c4db:	test   edi,edi
1003c4dd:	je     0x1003c50d
1003c4df:	cdq    
1003c4e0:	sub    eax,edx
1003c4e2:	sar    eax,1
1003c4e4:	mov    edx,0x1
1003c4e9:	lea    ecx,[edi+esi*4]
1003c4ec:	sub    edx,eax
1003c4ee:	lea    eax,[ecx+edx*4]
1003c4f1:	sub    ecx,0x4
1003c4f4:	cmp    ecx,eax
1003c4f6:	jb     0x1003c50d
1003c4f8:	jmp    0x1003c500
1003c4fa:	lea    ebx,[ebx+0x0]
1003c500:	mov    DWORD PTR [ecx],0xffffffff
1003c506:	sub    ecx,0x4
1003c509:	cmp    ecx,eax
1003c50b:	jae    0x1003c500
1003c50d:	cmp    DWORD PTR [esp+0x40],0x0
1003c512:	jne    0x1003c563
1003c514:	test   BYTE PTR [ebx+0xc],0x2
1003c518:	je     0x1003c547
1003c51a:	movzx  eax,WORD PTR [ebx+0x14]
1003c51e:	mov    ecx,eax
1003c520:	and    ecx,0xff
1003c526:	shr    eax,0x8
1003c529:	and    eax,0x1
1003c52c:	mov    DWORD PTR [esp+0x1c],ecx
1003c530:	mov    DWORD PTR [esp+0x4c],eax
1003c534:	je     0x1003c563
1003c536:	mov    eax,DWORD PTR [esp+0xac]
1003c53d:	movzx  ecx,BYTE PTR [eax+ecx*1]
1003c541:	mov    DWORD PTR [esp+0x1c],ecx
1003c545:	jmp    0x1003c563
1003c547:	cmp    DWORD PTR [esp+0x48],0x0
1003c54c:	jne    0x1003c563
1003c54e:	mov    eax,DWORD PTR [esp+0x14]
1003c552:	test   eax,eax
1003c554:	je     0x1003c563
1003c556:	test   BYTE PTR [eax+0x4],0x1
1003c55a:	je     0x1003c563
1003c55c:	add    eax,0x8
1003c55f:	mov    DWORD PTR [esp+0x3c],eax
1003c563:	test   BYTE PTR [ebx+0xc],0x4
1003c567:	je     0x1003c58f
1003c569:	movzx  eax,WORD PTR [ebx+0x16]
1003c56d:	mov    ecx,eax
1003c56f:	and    ecx,0xff
1003c575:	movzx  edx,BYTE PTR [ecx+ebp*1+0x100]
1003c57d:	shr    eax,0x8
1003c580:	and    eax,0x1
1003c583:	mov    DWORD PTR [esp+0x44],ecx
1003c587:	mov    DWORD PTR [esp+0x54],eax
1003c58b:	mov    DWORD PTR [esp+0x50],edx
1003c58f:	mov    ebp,DWORD PTR [esp+0x58]
1003c593:	mov    edi,DWORD PTR [esp+0x94]
1003c59a:	test   edi,edi
1003c59c:	mov    ebx,DWORD PTR [esp+0x30]
1003c5a0:	mov    DWORD PTR [esp+0x14],ebx
1003c5a4:	je     0x1003c5c1
1003c5a6:	mov    eax,DWORD PTR [esp+0x18]
1003c5aa:	lea    ecx,[edi+eax*4]
1003c5ad:	cmp    edi,ecx
1003c5af:	jae    0x1003c5c1
1003c5b1:	sub    ecx,edi
1003c5b3:	sub    ecx,0x1
1003c5b6:	shr    ecx,0x2
1003c5b9:	add    ecx,0x1
1003c5bc:	or     eax,0xffffffff
1003c5bf:	rep stos DWORD PTR es:[edi],eax
1003c5c1:	cmp    DWORD PTR [esp+0x38],0x0
1003c5c6:	mov    eax,DWORD PTR [esp+0xe4]
1003c5cd:	je     0x1003c63d
1003c5cf:	cmp    ebp,eax
1003c5d1:	mov    ecx,ebp
1003c5d3:	jae    0x1003c63b
1003c5d5:	mov    esi,DWORD PTR [esp+0x24]
1003c5d9:	cmp    DWORD PTR [esp+0xa0],0x0
1003c5e1:	je     0x1003c609
1003c5e3:	mov    edx,DWORD PTR [esp+0xa0]
1003c5ea:	push   edx
1003c5eb:	mov    edx,esi
1003c5ed:	lea    edi,[esp+0xa8]
1003c5f4:	call   0x10041aa0
1003c5f9:	add    esp,0x4
1003c5fc:	test   eax,eax
1003c5fe:	jne    0x1003c63b
1003c600:	mov    eax,DWORD PTR [esp+0xe4]
1003c607:	jmp    0x1003c634
1003c609:	mov    edi,DWORD PTR [esp+0xa4]
1003c610:	mov    edx,eax
1003c612:	sub    edx,edi
1003c614:	cmp    ecx,edx
1003c616:	ja     0x1003c634
1003c618:	mov    dl,BYTE PTR [ecx]
1003c61a:	cmp    dl,BYTE PTR [esp+0xa8]
1003c621:	jne    0x1003c634
1003c623:	cmp    edi,0x1
1003c626:	je     0x1003c63b
1003c628:	mov    dl,BYTE PTR [ecx+0x1]
1003c62b:	cmp    dl,BYTE PTR [esp+0xa9]
1003c632:	je     0x1003c63b
1003c634:	add    ecx,0x1
1003c637:	cmp    ecx,eax
1003c639:	jb     0x1003c5d9
1003c63b:	mov    ebx,ecx
1003c63d:	cmp    DWORD PTR [esp+0x1c],0x0
1003c642:	jl     0x1003c6aa
1003c644:	cmp    DWORD PTR [esp+0x4c],0x0
1003c649:	je     0x1003c67e
1003c64b:	cmp    ebp,ebx
1003c64d:	jae    0x1003c791
1003c653:	mov    eax,DWORD PTR [esp+0xac]
1003c65a:	lea    ebx,[ebx+0x0]
1003c660:	movzx  ecx,BYTE PTR [ebp+0x0]
1003c664:	movzx  edx,BYTE PTR [ecx+eax*1]
1003c668:	cmp    edx,DWORD PTR [esp+0x1c]
1003c66c:	je     0x1003c791
1003c672:	add    ebp,0x1
1003c675:	cmp    ebp,ebx
1003c677:	jb     0x1003c660
1003c679:	jmp    0x1003c791
1003c67e:	cmp    ebp,ebx
1003c680:	jae    0x1003c791
1003c686:	jmp    0x1003c690
1003c688:	lea    esp,[esp+0x0]
1003c68f:	nop
1003c690:	movzx  eax,BYTE PTR [ebp+0x0]
1003c694:	cmp    eax,DWORD PTR [esp+0x1c]
1003c698:	je     0x1003c791
1003c69e:	add    ebp,0x1
1003c6a1:	cmp    ebp,ebx
1003c6a3:	jb     0x1003c690
1003c6a5:	jmp    0x1003c791
1003c6aa:	cmp    DWORD PTR [esp+0x48],0x0
1003c6af:	je     0x1003c763
1003c6b5:	mov    esi,DWORD PTR [esp+0xe0]
1003c6bc:	cmp    ebp,esi
1003c6be:	jbe    0x1003c791
1003c6c4:	cmp    ebp,ebx
1003c6c6:	jae    0x1003c73d
1003c6c8:	mov    edi,DWORD PTR [esp+0x24]
1003c6cc:	mov    ecx,DWORD PTR [esp+0xa4]
1003c6d3:	cmp    DWORD PTR [esp+0xa0],0x0
1003c6db:	je     0x1003c70f
1003c6dd:	cmp    ebp,esi
1003c6df:	jbe    0x1003c736
1003c6e1:	mov    ecx,DWORD PTR [esp+0xa0]
1003c6e8:	push   edi
1003c6e9:	push   ecx
1003c6ea:	lea    edx,[esp+0xac]
1003c6f1:	mov    ecx,ebp
1003c6f3:	call   0x10041b60
1003c6f8:	add    esp,0x8
1003c6fb:	test   eax,eax
1003c6fd:	jne    0x1003c73d
1003c6ff:	mov    esi,DWORD PTR [esp+0xe0]
1003c706:	mov    ecx,DWORD PTR [esp+0xa4]
1003c70d:	jmp    0x1003c736
1003c70f:	lea    edx,[ecx+esi*1]
1003c712:	cmp    ebp,edx
1003c714:	jb     0x1003c736
1003c716:	mov    dl,BYTE PTR [esp+0xa8]
1003c71d:	mov    eax,ebp
1003c71f:	sub    eax,ecx
1003c721:	cmp    BYTE PTR [eax],dl
1003c723:	jne    0x1003c736
1003c725:	cmp    ecx,0x1
1003c728:	je     0x1003c73d
1003c72a:	mov    dl,BYTE PTR [esp+0xa9]
1003c731:	cmp    BYTE PTR [eax+0x1],dl
1003c734:	je     0x1003c73d
1003c736:	add    ebp,0x1
1003c739:	cmp    ebp,ebx
1003c73b:	jb     0x1003c6d3
1003c73d:	cmp    BYTE PTR [ebp-0x1],0xd
1003c741:	jne    0x1003c791
1003c743:	mov    eax,DWORD PTR [esp+0xa0]
1003c74a:	cmp    eax,0x1
1003c74d:	je     0x1003c754
1003c74f:	cmp    eax,0x2
1003c752:	jne    0x1003c791
1003c754:	cmp    ebp,ebx
1003c756:	jae    0x1003c791
1003c758:	cmp    BYTE PTR [ebp+0x0],0xa
1003c75c:	jne    0x1003c791
1003c75e:	add    ebp,0x1
1003c761:	jmp    0x1003c791
1003c763:	mov    esi,DWORD PTR [esp+0x3c]
1003c767:	test   esi,esi
1003c769:	je     0x1003c791
1003c76b:	cmp    ebp,ebx
1003c76d:	jae    0x1003c791
1003c76f:	nop
1003c770:	movzx  eax,BYTE PTR [ebp+0x0]
1003c774:	mov    ecx,eax
1003c776:	and    ecx,0x7
1003c779:	mov    edx,0x1
1003c77e:	shl    edx,cl
1003c780:	shr    eax,0x3
1003c783:	mov    al,BYTE PTR [eax+esi*1]
1003c786:	test   al,dl
1003c788:	jne    0x1003c791
1003c78a:	add    ebp,0x1
1003c78d:	cmp    ebp,ebx
1003c78f:	jb     0x1003c770
1003c791:	mov    edx,DWORD PTR [esp+0x44]
1003c795:	test   edx,edx
1003c797:	mov    ebx,DWORD PTR [esp+0x14]
1003c79b:	mov    DWORD PTR [esp+0x30],ebx
1003c79f:	jl     0x1003c83d
1003c7a5:	mov    ecx,ebx
1003c7a7:	sub    ecx,ebp
1003c7a9:	cmp    ecx,0x3e8
1003c7af:	jge    0x1003c83d
1003c7b5:	cmp    DWORD PTR [esp+0xd0],0x0
1003c7bd:	jne    0x1003c83d
1003c7c3:	xor    eax,eax
1003c7c5:	cmp    DWORD PTR [esp+0x1c],eax
1003c7c9:	setge  al
1003c7cc:	add    eax,ebp
1003c7ce:	cmp    eax,DWORD PTR [esp+0x34]
1003c7d2:	jbe    0x1003c83d
1003c7d4:	cmp    DWORD PTR [esp+0x54],0x0
1003c7d9:	je     0x1003c81e
1003c7db:	cmp    eax,ebx
1003c7dd:	jae    0x1003c7f5
1003c7df:	mov    esi,DWORD PTR [esp+0x50]
1003c7e3:	movzx  ecx,BYTE PTR [eax]
1003c7e6:	add    eax,0x1
1003c7e9:	cmp    ecx,edx
1003c7eb:	je     0x1003c832
1003c7ed:	cmp    ecx,esi
1003c7ef:	je     0x1003c832
1003c7f1:	cmp    eax,ebx
1003c7f3:	jb     0x1003c7e3
1003c7f5:	xor    esi,esi
1003c7f7:	cmp    DWORD PTR [esp+0x2c],0x0
1003c7fc:	je     0x1003c80f
1003c7fe:	mov    eax,DWORD PTR [esp+0x94]
1003c805:	push   eax
1003c806:	call   DWORD PTR ds:0x1007e4ec
1003c80c:	add    esp,0x4
1003c80f:	test   esi,esi
1003c811:	je     0x1003ca17
1003c817:	mov    eax,esi
1003c819:	jmp    0x1003ca3c
1003c81e:	cmp    eax,ebx
1003c820:	jae    0x1003c7f5
1003c822:	movzx  ecx,BYTE PTR [eax]
1003c825:	add    eax,0x1
1003c828:	cmp    ecx,edx
1003c82a:	je     0x1003c832
1003c82c:	cmp    eax,ebx
1003c82e:	jb     0x1003c822
1003c830:	jmp    0x1003c7f5
1003c832:	sub    eax,0x1
1003c835:	cmp    eax,ebx
1003c837:	jae    0x1003c7f5
1003c839:	mov    DWORD PTR [esp+0x34],eax
1003c83d:	mov    edx,DWORD PTR [esp+0x5c]
1003c841:	mov    ecx,DWORD PTR [esp+0xdc]
1003c848:	push   0x0
1003c84a:	push   0x0
1003c84c:	push   0x0
1003c84e:	push   edx
1003c84f:	lea    eax,[esp+0x98]
1003c856:	push   eax
1003c857:	push   0x2
1003c859:	push   ebp
1003c85a:	push   ecx
1003c85b:	push   ebp
1003c85c:	mov    DWORD PTR [esp+0x10c],ebp
1003c863:	mov    DWORD PTR [esp+0xac],0x0
1003c86e:	call   0x10039230
1003c873:	mov    esi,eax
1003c875:	add    esp,0x24
1003c878:	test   esi,esi
1003c87a:	jg     0x1003c98e
1003c880:	je     0x1003c8a1
1003c882:	lea    eax,[esi+0x3e7]
1003c888:	cmp    eax,0x3
1003c88b:	ja     0x1003c98e
1003c891:	jmp    DWORD PTR [eax*4+0x1003ca58]
1003c898:	mov    ebx,DWORD PTR [esp+0xe8]
1003c89f:	jmp    0x1003c8a4
1003c8a1:	lea    ebx,[ebp+0x1]
1003c8a4:	xor    esi,esi
1003c8a6:	cmp    DWORD PTR [esp+0x38],esi
1003c8aa:	je     0x1003c925
1003c8ac:	cmp    DWORD PTR [esp+0xa0],esi
1003c8b3:	je     0x1003c8ec
1003c8b5:	cmp    ebp,DWORD PTR [esp+0xe4]
1003c8bc:	jae    0x1003c925
1003c8be:	mov    edx,DWORD PTR [esp+0xa0]
1003c8c5:	mov    eax,DWORD PTR [esp+0xe4]
1003c8cc:	push   edx
1003c8cd:	mov    edx,DWORD PTR [esp+0x28]
1003c8d1:	lea    edi,[esp+0xa8]
1003c8d8:	mov    ecx,ebp
1003c8da:	call   0x10041aa0
1003c8df:	add    esp,0x4
1003c8e2:	test   eax,eax
1003c8e4:	jne    0x1003c7f7
1003c8ea:	jmp    0x1003c925
1003c8ec:	mov    ecx,DWORD PTR [esp+0xe4]
1003c8f3:	mov    eax,DWORD PTR [esp+0xa4]
1003c8fa:	sub    ecx,eax
1003c8fc:	cmp    ebp,ecx
1003c8fe:	ja     0x1003c925
1003c900:	mov    dl,BYTE PTR [esp+0xa8]
1003c907:	cmp    BYTE PTR [ebp+0x0],dl
1003c90a:	jne    0x1003c925
1003c90c:	cmp    eax,0x1
1003c90f:	je     0x1003c7f7
1003c915:	mov    al,BYTE PTR [esp+0xa9]
1003c91c:	cmp    BYTE PTR [ebp+0x1],al
1003c91f:	je     0x1003c7f7
1003c925:	cmp    DWORD PTR [esp+0x40],0x0
1003c92a:	mov    ebp,ebx
1003c92c:	jne    0x1003c7f7
1003c932:	mov    eax,DWORD PTR [esp+0x14]
1003c936:	cmp    ebx,eax
1003c938:	ja     0x1003c7f7
1003c93e:	cmp    BYTE PTR [ebx-0x1],0xd
1003c942:	jne    0x1003c593
1003c948:	cmp    ebx,eax
1003c94a:	jae    0x1003c593
1003c950:	cmp    BYTE PTR [ebx],0xa
1003c953:	jne    0x1003c593
1003c959:	mov    ecx,DWORD PTR [esp+0x20]
1003c95d:	test   BYTE PTR [ecx+0xc],0x20
1003c961:	jne    0x1003c593
1003c967:	mov    eax,DWORD PTR [esp+0xa0]
1003c96e:	cmp    eax,0x1
1003c971:	je     0x1003c986
1003c973:	cmp    eax,0x2
1003c976:	je     0x1003c986
1003c978:	cmp    DWORD PTR [esp+0xa4],0x2
1003c980:	jne    0x1003c593
1003c986:	lea    ebp,[ebx+0x1]
1003c989:	jmp    0x1003c593
1003c98e:	cmp    esi,0x1
1003c991:	jne    0x1003c7f7
1003c997:	cmp    DWORD PTR [esp+0x2c],0x0
1003c99c:	mov    esi,DWORD PTR [esp+0x28]
1003c9a0:	je     0x1003c9dd
1003c9a2:	mov    edi,DWORD PTR [esp+0x94]
1003c9a9:	push   0xc4
1003c9ae:	lea    edx,[edi+0x8]
1003c9b1:	push   edx
1003c9b2:	lea    eax,[esi+0x8]
1003c9b5:	push   eax
1003c9b6:	call   0x10043ed0
1003c9bb:	add    esp,0xc
1003c9be:	cmp    DWORD PTR [esp+0xf0],0x33
1003c9c6:	jle    0x1003c9d3
1003c9c8:	mov    DWORD PTR [esp+0xb4],0x1
1003c9d3:	push   edi
1003c9d4:	call   DWORD PTR ds:0x1007e4ec
1003c9da:	add    esp,0x4
1003c9dd:	cmp    DWORD PTR [esp+0xb4],0x0
1003c9e5:	je     0x1003c9eb
1003c9e7:	xor    eax,eax
1003c9e9:	jmp    0x1003c9f7
1003c9eb:	mov    eax,DWORD PTR [esp+0xf0]
1003c9f2:	cdq    
1003c9f3:	sub    eax,edx
1003c9f5:	sar    eax,1
1003c9f7:	mov    ecx,DWORD PTR [esp+0xe0]
1003c9fe:	mov    edx,DWORD PTR [esp+0xe8]
1003ca05:	sub    edx,ecx
1003ca07:	mov    DWORD PTR [esi],edx
1003ca09:	mov    edx,DWORD PTR [esp+0xec]
1003ca10:	sub    edx,ecx
1003ca12:	mov    DWORD PTR [esi+0x4],edx
1003ca15:	jmp    0x1003ca3c
1003ca17:	cmp    DWORD PTR [esp+0xd0],0x0
1003ca1f:	je     0x1003ca32
1003ca21:	cmp    DWORD PTR [esp+0xd4],0x0
1003ca29:	je     0x1003ca32
1003ca2b:	mov    eax,0xfffffff4
1003ca30:	jmp    0x1003ca3c
1003ca32:	or     eax,0xffffffff
1003ca35:	jmp    0x1003ca3c
1003ca37:	mov    eax,0xfffffffe
1003ca3c:	mov    ecx,DWORD PTR [esp+0x13c]
1003ca43:	pop    edi
1003ca44:	pop    esi
1003ca45:	pop    ebp
1003ca46:	pop    ebx
1003ca47:	xor    ecx,esp
1003ca49:	call   0x10041d97
1003ca4e:	add    esp,0x134
1003ca54:	ret    
1003ca55:	lea    ecx,[ecx+0x0]
1003ca58:	cmc    
1003ca59:	mov    DWORD PTR [ebx],0x3c8a110
1003ca5f:	adc    BYTE PTR [eax-0x5eeffc38],bl
1003ca65:	enter  0x1003,0xcc
1003ca69:	int3   
1003ca6a:	int3   
1003ca6b:	int3   
1003ca6c:	int3   
1003ca6d:	int3   
1003ca6e:	int3   
1003ca6f:	int3   
1003ca70:	push   ecx
1003ca71:	push   ebx
1003ca72:	mov    ebx,eax
1003ca74:	mov    eax,DWORD PTR [esp+0xc]
1003ca78:	mov    ecx,DWORD PTR [eax]
1003ca7a:	movzx  eax,BYTE PTR [ecx+0x1]
1003ca7e:	push   ebp
1003ca7f:	add    ecx,0x1
1003ca82:	mov    ebp,ebx
1003ca84:	shr    ebp,0xb
1003ca87:	and    ebp,0x1
1003ca8a:	test   eax,eax
1003ca8c:	jne    0x1003caa2
1003ca8e:	mov    edx,DWORD PTR [esp+0x14]
1003ca92:	mov    DWORD PTR [edx],0x1
1003ca98:	mov    edx,DWORD PTR [esp+0x10]
1003ca9c:	pop    ebp
1003ca9d:	mov    DWORD PTR [edx],ecx
1003ca9f:	pop    ebx
1003caa0:	pop    ecx
1003caa1:	ret    
1003caa2:	lea    edx,[eax-0x30]
1003caa5:	cmp    edx,0x4a
1003caa8:	ja     0x1003ce28
1003caae:	push   edi
1003caaf:	movsx  edi,WORD PTR [edx*2+0x1006d528]
1003cab7:	test   edi,edi
1003cab9:	mov    DWORD PTR [esp+0xc],edi
1003cabd:	je     0x1003cacc
1003cabf:	mov    edx,DWORD PTR [esp+0x14]
1003cac3:	mov    eax,edi
1003cac5:	pop    edi
1003cac6:	pop    ebp
1003cac7:	mov    DWORD PTR [edx],ecx
1003cac9:	pop    ebx
1003caca:	pop    ecx
1003cacb:	ret    
1003cacc:	cmp    edx,0x48
1003cacf:	push   esi
1003cad0:	ja     0x1003ce17
1003cad6:	movzx  esi,BYTE PTR [edx+0x1003ce50]
1003cadd:	jmp    DWORD PTR [esi*4+0x1003ce34]
1003cae4:	mov    edx,DWORD PTR [esp+0x1c]
1003cae8:	pop    esi
1003cae9:	pop    edi
1003caea:	mov    DWORD PTR [edx],0x25
1003caf0:	mov    edx,DWORD PTR [esp+0x10]
1003caf4:	pop    ebp
1003caf5:	mov    DWORD PTR [edx],ecx
1003caf7:	pop    ebx
1003caf8:	pop    ecx
1003caf9:	ret    
1003cafa:	mov    al,BYTE PTR [ecx+0x1]
1003cafd:	cmp    al,0x3c
1003caff:	je     0x1003cc1f
1003cb05:	cmp    al,0x27
1003cb07:	je     0x1003cc1f
1003cb0d:	cmp    al,0x7b
1003cb0f:	mov    bl,0x4
1003cb11:	jne    0x1003cb62
1003cb13:	mov    al,BYTE PTR [ecx+0x2]
1003cb16:	test   al,al
1003cb18:	lea    edx,[ecx+0x2]
1003cb1b:	je     0x1003cb3d
1003cb1d:	lea    ecx,[ecx+0x0]
1003cb20:	cmp    al,0x7d
1003cb22:	je     0x1003cb46
1003cb24:	cmp    al,0x2d
1003cb26:	je     0x1003cb33
1003cb28:	movzx  eax,al
1003cb2b:	test   BYTE PTR [eax+0x1006e068],bl
1003cb31:	je     0x1003cb46
1003cb33:	mov    al,BYTE PTR [edx+0x1]
1003cb36:	add    edx,0x1
1003cb39:	test   al,al
1003cb3b:	jne    0x1003cb20
1003cb3d:	mov    esi,0x1
1003cb42:	add    ecx,esi
1003cb44:	jmp    0x1003cb64
1003cb46:	mov    dl,BYTE PTR [edx]
1003cb48:	test   dl,dl
1003cb4a:	je     0x1003cb3d
1003cb4c:	cmp    dl,0x7d
1003cb4f:	je     0x1003cb3d
1003cb51:	mov    edx,DWORD PTR [esp+0x18]
1003cb55:	pop    esi
1003cb56:	pop    edi
1003cb57:	pop    ebp
1003cb58:	mov    eax,0xffffffe4
1003cb5d:	mov    DWORD PTR [edx],ecx
1003cb5f:	pop    ebx
1003cb60:	pop    ecx
1003cb61:	ret    
1003cb62:	xor    esi,esi
1003cb64:	cmp    BYTE PTR [ecx+0x1],0x2d
1003cb68:	jne    0x1003cb73
1003cb6a:	mov    edx,0x1
1003cb6f:	add    ecx,edx
1003cb71:	jmp    0x1003cb75
1003cb73:	xor    edx,edx
1003cb75:	movzx  edi,BYTE PTR [ecx+0x1]
1003cb79:	xor    eax,eax
1003cb7b:	test   BYTE PTR [edi+0x1006e068],bl
1003cb81:	je     0x1003cba5
1003cb83:	movzx  edi,BYTE PTR [ecx+0x1]
1003cb87:	add    ecx,0x1
1003cb8a:	lea    eax,[eax+eax*4]
1003cb8d:	lea    eax,[edi+eax*2-0x30]
1003cb91:	movzx  edi,BYTE PTR [ecx+0x1]
1003cb95:	test   BYTE PTR [edi+0x1006e068],bl
1003cb9b:	jne    0x1003cb83
1003cb9d:	test   eax,eax
1003cb9f:	jl     0x1003cc6e
1003cba5:	test   esi,esi
1003cba7:	je     0x1003cbc7
1003cba9:	add    ecx,0x1
1003cbac:	cmp    BYTE PTR [ecx],0x7d
1003cbaf:	je     0x1003cbc7
1003cbb1:	mov    edx,DWORD PTR [esp+0x1c]
1003cbb5:	pop    esi
1003cbb6:	pop    edi
1003cbb7:	mov    DWORD PTR [edx],0x39
1003cbbd:	mov    edx,DWORD PTR [esp+0x10]
1003cbc1:	pop    ebp
1003cbc2:	mov    DWORD PTR [edx],ecx
1003cbc4:	pop    ebx
1003cbc5:	pop    ecx
1003cbc6:	ret    
1003cbc7:	test   eax,eax
1003cbc9:	jne    0x1003cbe1
1003cbcb:	mov    edx,DWORD PTR [esp+0x1c]
1003cbcf:	pop    esi
1003cbd0:	pop    edi
1003cbd1:	mov    DWORD PTR [edx],0x3a
1003cbd7:	mov    edx,DWORD PTR [esp+0x10]
1003cbdb:	pop    ebp
1003cbdc:	mov    DWORD PTR [edx],ecx
1003cbde:	pop    ebx
1003cbdf:	pop    ecx
1003cbe0:	ret    
1003cbe1:	test   edx,edx
1003cbe3:	je     0x1003cc0a
1003cbe5:	mov    edx,DWORD PTR [esp+0x20]
1003cbe9:	cmp    eax,edx
1003cbeb:	jle    0x1003cc03
1003cbed:	mov    edx,DWORD PTR [esp+0x1c]
1003cbf1:	pop    esi
1003cbf2:	pop    edi
1003cbf3:	mov    DWORD PTR [edx],0xf
1003cbf9:	mov    edx,DWORD PTR [esp+0x10]
1003cbfd:	pop    ebp
1003cbfe:	mov    DWORD PTR [edx],ecx
1003cc00:	pop    ebx
1003cc01:	pop    ecx
1003cc02:	ret    
1003cc03:	sub    edx,eax
1003cc05:	add    edx,0x1
1003cc08:	mov    eax,edx
1003cc0a:	pop    esi
1003cc0b:	mov    edx,0xffffffe3
1003cc10:	sub    edx,eax
1003cc12:	pop    edi
1003cc13:	mov    eax,edx
1003cc15:	mov    edx,DWORD PTR [esp+0x10]
1003cc19:	pop    ebp
1003cc1a:	mov    DWORD PTR [edx],ecx
1003cc1c:	pop    ebx
1003cc1d:	pop    ecx
1003cc1e:	ret    
1003cc1f:	mov    edx,DWORD PTR [esp+0x18]
1003cc23:	pop    esi
1003cc24:	pop    edi
1003cc25:	pop    ebp
1003cc26:	mov    eax,0xffffffe5
1003cc2b:	mov    DWORD PTR [edx],ecx
1003cc2d:	pop    ebx
1003cc2e:	pop    ecx
1003cc2f:	ret    
1003cc30:	cmp    DWORD PTR [esp+0x24],0x0
1003cc35:	jne    0x1003cc95
1003cc37:	mov    eax,edx
1003cc39:	movzx  edx,BYTE PTR [ecx+0x1]
1003cc3d:	mov    bl,0x4
1003cc3f:	test   BYTE PTR [edx+0x1006e068],bl
1003cc45:	mov    esi,ecx
1003cc47:	je     0x1003cc6a
1003cc49:	lea    esp,[esp+0x0]
1003cc50:	movzx  edx,BYTE PTR [ecx+0x1]
1003cc54:	add    ecx,0x1
1003cc57:	lea    eax,[eax+eax*4]
1003cc5a:	lea    eax,[edx+eax*2-0x30]
1003cc5e:	movzx  edx,BYTE PTR [ecx+0x1]
1003cc62:	test   BYTE PTR [edx+0x1006e068],bl
1003cc68:	jne    0x1003cc50
1003cc6a:	test   eax,eax
1003cc6c:	jge    0x1003cc84
1003cc6e:	mov    edx,DWORD PTR [esp+0x1c]
1003cc72:	pop    esi
1003cc73:	pop    edi
1003cc74:	mov    DWORD PTR [edx],0x3d
1003cc7a:	mov    edx,DWORD PTR [esp+0x10]
1003cc7e:	pop    ebp
1003cc7f:	mov    DWORD PTR [edx],ecx
1003cc81:	pop    ebx
1003cc82:	pop    ecx
1003cc83:	ret    
1003cc84:	cmp    eax,0xa
1003cc87:	jl     0x1003cc0a
1003cc89:	cmp    eax,DWORD PTR [esp+0x20]
1003cc8d:	jle    0x1003cc0a
1003cc93:	mov    ecx,esi
1003cc95:	movzx  eax,BYTE PTR [ecx]
1003cc98:	cmp    eax,0x38
1003cc9b:	jl     0x1003ccae
1003cc9d:	mov    edx,DWORD PTR [esp+0x18]
1003cca1:	pop    esi
1003cca2:	pop    edi
1003cca3:	sub    ecx,0x1
1003cca6:	pop    ebp
1003cca7:	xor    eax,eax
1003cca9:	mov    DWORD PTR [edx],ecx
1003ccab:	pop    ebx
1003ccac:	pop    ecx
1003ccad:	ret    
1003ccae:	sub    eax,0x30
1003ccb1:	mov    dl,BYTE PTR [ecx+0x1]
1003ccb4:	add    edi,0x1
1003ccb7:	cmp    dl,0x30
1003ccba:	jb     0x1003ccd1
1003ccbc:	cmp    dl,0x37
1003ccbf:	ja     0x1003ccd1
1003ccc1:	movzx  edx,BYTE PTR [ecx+0x1]
1003ccc5:	add    ecx,0x1
1003ccc8:	cmp    edi,0x2
1003cccb:	lea    eax,[edx+eax*8-0x30]
1003cccf:	jl     0x1003ccb1
1003ccd1:	test   ebp,ebp
1003ccd3:	jne    0x1003ce26
1003ccd9:	cmp    eax,0xff
1003ccde:	jle    0x1003ce26
1003cce4:	mov    edx,DWORD PTR [esp+0x1c]
1003cce8:	pop    esi
1003cce9:	pop    edi
1003ccea:	mov    DWORD PTR [edx],0x33
1003ccf0:	mov    edx,DWORD PTR [esp+0x10]
1003ccf4:	pop    ebp
1003ccf5:	mov    DWORD PTR [edx],ecx
1003ccf7:	pop    ebx
1003ccf8:	pop    ecx
1003ccf9:	ret    
1003ccfa:	cmp    BYTE PTR [ecx+0x1],0x7b
1003ccfe:	mov    bl,0x8
1003cd00:	jne    0x1003cd8f
1003cd06:	movzx  esi,BYTE PTR [ecx+0x2]
1003cd0a:	lea    edi,[ecx+0x2]
1003cd0d:	xor    edx,edx
1003cd0f:	xor    eax,eax
1003cd11:	test   BYTE PTR [esi+0x1006e068],bl
1003cd17:	je     0x1003cd5c
1003cd19:	lea    esp,[esp+0x0]
1003cd20:	add    edi,0x1
1003cd23:	test   eax,eax
1003cd25:	jne    0x1003cd2c
1003cd27:	cmp    esi,0x30
1003cd2a:	je     0x1003cd51
1003cd2c:	add    edx,0x1
1003cd2f:	cmp    esi,0x61
1003cd32:	jl     0x1003cd37
1003cd34:	sub    esi,0x20
1003cd37:	xor    ebx,ebx
1003cd39:	cmp    esi,0x41
1003cd3c:	setge  bl
1003cd3f:	shl    eax,0x4
1003cd42:	sub    ebx,0x1
1003cd45:	and    ebx,0xfffffff9
1003cd48:	add    ebx,0x37
1003cd4b:	sub    eax,ebx
1003cd4d:	add    eax,esi
1003cd4f:	mov    bl,0x8
1003cd51:	movzx  esi,BYTE PTR [edi]
1003cd54:	test   BYTE PTR [esi+0x1006e068],bl
1003cd5a:	jne    0x1003cd20
1003cd5c:	cmp    BYTE PTR [edi],0x7d
1003cd5f:	jne    0x1003cd8b
1003cd61:	test   eax,eax
1003cd63:	jl     0x1003cd73
1003cd65:	neg    ebp
1003cd67:	sbb    ebp,ebp
1003cd69:	and    ebp,0x6
1003cd6c:	add    ebp,0x2
1003cd6f:	cmp    edx,ebp
1003cd71:	jle    0x1003cd7d
1003cd73:	mov    ecx,DWORD PTR [esp+0x1c]
1003cd77:	mov    DWORD PTR [ecx],0x22
1003cd7d:	mov    edx,DWORD PTR [esp+0x18]
1003cd81:	pop    esi
1003cd82:	mov    ecx,edi
1003cd84:	pop    edi
1003cd85:	pop    ebp
1003cd86:	mov    DWORD PTR [edx],ecx
1003cd88:	pop    ebx
1003cd89:	pop    ecx
1003cd8a:	ret    
1003cd8b:	mov    edi,DWORD PTR [esp+0x10]
1003cd8f:	xor    eax,eax
1003cd91:	movzx  edx,BYTE PTR [ecx+0x1]
1003cd95:	add    edi,0x1
1003cd98:	test   BYTE PTR [edx+0x1006e068],bl
1003cd9e:	je     0x1003ce26
1003cda4:	movzx  esi,BYTE PTR [ecx+0x1]
1003cda8:	add    ecx,0x1
1003cdab:	cmp    esi,0x61
1003cdae:	jl     0x1003cdb3
1003cdb0:	sub    esi,0x20
1003cdb3:	xor    edx,edx
1003cdb5:	cmp    esi,0x41
1003cdb8:	setge  dl
1003cdbb:	shl    eax,0x4
1003cdbe:	sub    edx,0x1
1003cdc1:	and    edx,0xfffffff9
1003cdc4:	add    edx,0x37
1003cdc7:	sub    eax,edx
1003cdc9:	add    eax,esi
1003cdcb:	cmp    edi,0x2
1003cdce:	jl     0x1003cd91
1003cdd0:	mov    edx,DWORD PTR [esp+0x18]
1003cdd4:	pop    esi
1003cdd5:	pop    edi
1003cdd6:	pop    ebp
1003cdd7:	mov    DWORD PTR [edx],ecx
1003cdd9:	pop    ebx
1003cdda:	pop    ecx
1003cddb:	ret    
1003cddc:	movzx  eax,BYTE PTR [ecx+0x1]
1003cde0:	add    ecx,0x1
1003cde3:	test   eax,eax
1003cde5:	jne    0x1003cdfd
1003cde7:	mov    edx,DWORD PTR [esp+0x1c]
1003cdeb:	pop    esi
1003cdec:	pop    edi
1003cded:	mov    DWORD PTR [edx],0x2
1003cdf3:	mov    edx,DWORD PTR [esp+0x10]
1003cdf7:	pop    ebp
1003cdf8:	mov    DWORD PTR [edx],ecx
1003cdfa:	pop    ebx
1003cdfb:	pop    ecx
1003cdfc:	ret    
1003cdfd:	lea    edx,[eax-0x61]
1003ce00:	cmp    edx,0x19
1003ce03:	ja     0x1003ce08
1003ce05:	sub    eax,0x20
1003ce08:	mov    edx,DWORD PTR [esp+0x18]
1003ce0c:	pop    esi
1003ce0d:	pop    edi
1003ce0e:	pop    ebp
1003ce0f:	xor    eax,0x40
1003ce12:	mov    DWORD PTR [edx],ecx
1003ce14:	pop    ebx
1003ce15:	pop    ecx
1003ce16:	ret    
1003ce17:	test   bl,0x40
1003ce1a:	je     0x1003ce26
1003ce1c:	mov    edx,DWORD PTR [esp+0x1c]
1003ce20:	mov    DWORD PTR [edx],0x3
1003ce26:	pop    esi
1003ce27:	pop    edi
1003ce28:	mov    edx,DWORD PTR [esp+0x10]
1003ce2c:	pop    ebp
1003ce2d:	mov    DWORD PTR [edx],ecx
1003ce2f:	pop    ebx
1003ce30:	pop    ecx
1003ce31:	ret    
1003ce32:	mov    edi,edi
1003ce34:	scas   al,BYTE PTR es:[edi]
1003ce35:	int3   
1003ce36:	add    edx,DWORD PTR [eax]
1003ce38:	xor    ah,cl
1003ce3a:	add    edx,DWORD PTR [eax]
1003ce3c:	in     al,0xca
1003ce3e:	add    edx,DWORD PTR [eax]
1003ce40:	fmul   st(5),st
1003ce42:	add    edx,DWORD PTR [eax]
1003ce44:	cli    
1003ce45:	retf   0x1003
1003ce48:	cli    
1003ce49:	int3   
1003ce4a:	add    edx,DWORD PTR [eax]
1003ce4c:	pop    ss
1003ce4d:	into   
1003ce4e:	add    edx,DWORD PTR [eax]
1003ce50:	add    BYTE PTR [ecx],al
1003ce52:	add    DWORD PTR [ecx],eax
1003ce54:	add    DWORD PTR [ecx],eax
1003ce56:	add    DWORD PTR [ecx],eax
1003ce58:	add    DWORD PTR [ecx],eax
1003ce5a:	push   es
1003ce5b:	push   es
1003ce5c:	push   es
1003ce5d:	push   es
1003ce5e:	push   es
1003ce5f:	push   es
1003ce60:	push   es
1003ce61:	push   es
1003ce62:	push   es
1003ce63:	push   es
1003ce64:	push   es
1003ce65:	push   es
1003ce66:	push   es
1003ce67:	push   es
1003ce68:	push   es
1003ce69:	push   es
1003ce6a:	push   es
1003ce6b:	push   es
1003ce6c:	add    al,BYTE PTR [esi]
1003ce6e:	add    al,BYTE PTR [esi]
1003ce70:	push   es
1003ce71:	push   es
1003ce72:	push   es
1003ce73:	push   es
1003ce74:	push   es
1003ce75:	add    al,BYTE PTR [esi]
1003ce77:	push   es
1003ce78:	push   es
1003ce79:	push   es
1003ce7a:	push   es
1003ce7b:	push   es
1003ce7c:	push   es
1003ce7d:	push   es
1003ce7e:	push   es
1003ce7f:	push   es
1003ce80:	push   es
1003ce81:	push   es
1003ce82:	push   es
1003ce83:	add    eax,DWORD PTR [esi]
1003ce85:	push   es
1003ce86:	push   es
1003ce87:	add    al,0x6
1003ce89:	push   es
1003ce8a:	push   es
1003ce8b:	push   es
1003ce8c:	add    al,BYTE PTR [esi]
1003ce8e:	push   es
1003ce8f:	push   es
1003ce90:	push   es
1003ce91:	push   es
1003ce92:	push   es
1003ce93:	push   es
1003ce94:	push   es
1003ce95:	add    al,BYTE PTR [esi]
1003ce97:	push   es
1003ce98:	add    eax,0xcccccccc
1003ce9d:	int3   
1003ce9e:	int3   
1003ce9f:	int3   
1003cea0:	movzx  ecx,BYTE PTR [eax]
1003cea3:	mov    cl,BYTE PTR [ecx+0x1006e068]
1003cea9:	mov    dl,0x4
1003ceab:	and    cl,dl
1003cead:	add    eax,0x1
1003ceb0:	test   cl,cl
1003ceb2:	jne    0x1003ceb7
1003ceb4:	xor    eax,eax
1003ceb6:	ret    
1003ceb7:	movzx  ecx,BYTE PTR [eax]
1003ceba:	test   BYTE PTR [ecx+0x1006e068],dl
1003cec0:	je     0x1003ced1
1003cec2:	movzx  ecx,BYTE PTR [eax+0x1]
1003cec6:	add    eax,0x1
1003cec9:	test   BYTE PTR [ecx+0x1006e068],dl
1003cecf:	jne    0x1003cec2
1003ced1:	mov    cl,BYTE PTR [eax]
1003ced3:	cmp    cl,0x7d
1003ced6:	jne    0x1003cede
1003ced8:	mov    eax,0x1
1003cedd:	ret    
1003cede:	add    eax,0x1
1003cee1:	cmp    cl,0x2c
1003cee4:	jne    0x1003ceb4
1003cee6:	mov    cl,BYTE PTR [eax]
1003cee8:	cmp    cl,0x7d
1003ceeb:	je     0x1003ced8
1003ceed:	movzx  ecx,cl
1003cef0:	mov    cl,BYTE PTR [ecx+0x1006e068]
1003cef6:	and    cl,dl
1003cef8:	add    eax,0x1
1003cefb:	test   cl,cl
1003cefd:	je     0x1003ceb4
1003ceff:	movzx  ecx,BYTE PTR [eax]
1003cf02:	test   BYTE PTR [ecx+0x1006e068],dl
1003cf08:	je     0x1003cf1f
1003cf0a:	lea    ebx,[ebx+0x0]
1003cf10:	movzx  ecx,BYTE PTR [eax+0x1]
1003cf14:	add    eax,0x1
1003cf17:	test   BYTE PTR [ecx+0x1006e068],dl
1003cf1d:	jne    0x1003cf10
1003cf1f:	xor    edx,edx
1003cf21:	cmp    BYTE PTR [eax],0x7d
1003cf24:	sete   dl
1003cf27:	mov    eax,edx
1003cf29:	ret    
1003cf2a:	int3   
1003cf2b:	int3   
1003cf2c:	int3   
1003cf2d:	int3   
1003cf2e:	int3   
1003cf2f:	int3   
1003cf30:	movzx  ecx,BYTE PTR [eax]
1003cf33:	push   ebx
1003cf34:	push   esi
1003cf35:	mov    ebx,0x4
1003cf3a:	xor    esi,esi
1003cf3c:	or     edx,0xffffffff
1003cf3f:	test   BYTE PTR [ecx+0x1006e068],bl
1003cf45:	je     0x1003cf71
1003cf47:	jmp    0x1003cf50
1003cf49:	lea    esp,[esp+0x0]
1003cf50:	lea    esi,[esi+esi*4]
1003cf53:	add    eax,0x1
1003cf56:	lea    esi,[ecx+esi*2-0x30]
1003cf5a:	movzx  ecx,BYTE PTR [eax]
1003cf5d:	test   BYTE PTR [ecx+0x1006e068],bl
1003cf63:	jne    0x1003cf50
1003cf65:	test   esi,esi
1003cf67:	jl     0x1003cfca
1003cf69:	cmp    esi,0xffff
1003cf6f:	jg     0x1003cfca
1003cf71:	cmp    BYTE PTR [eax],0x7d
1003cf74:	jne    0x1003cf87
1003cf76:	mov    edx,esi
1003cf78:	mov    ecx,DWORD PTR [esp+0xc]
1003cf7c:	mov    DWORD PTR [ecx],esi
1003cf7e:	mov    ecx,DWORD PTR [esp+0x10]
1003cf82:	pop    esi
1003cf83:	mov    DWORD PTR [ecx],edx
1003cf85:	pop    ebx
1003cf86:	ret    
1003cf87:	mov    cl,BYTE PTR [eax+0x1]
1003cf8a:	add    eax,0x1
1003cf8d:	cmp    cl,0x7d
1003cf90:	je     0x1003cf78
1003cf92:	movzx  ecx,cl
1003cf95:	xor    edx,edx
1003cf97:	test   BYTE PTR [ecx+0x1006e068],bl
1003cf9d:	je     0x1003cfc1
1003cf9f:	nop
1003cfa0:	lea    edx,[edx+edx*4]
1003cfa3:	add    eax,0x1
1003cfa6:	lea    edx,[ecx+edx*2-0x30]
1003cfaa:	movzx  ecx,BYTE PTR [eax]
1003cfad:	test   BYTE PTR [ecx+0x1006e068],bl
1003cfb3:	jne    0x1003cfa0
1003cfb5:	test   edx,edx
1003cfb7:	jl     0x1003cfca
1003cfb9:	cmp    edx,0xffff
1003cfbf:	jg     0x1003cfca
1003cfc1:	cmp    edx,esi
1003cfc3:	jge    0x1003cf78
1003cfc5:	pop    esi
1003cfc6:	mov    DWORD PTR [edi],ebx
1003cfc8:	pop    ebx
1003cfc9:	ret    
1003cfca:	pop    esi
1003cfcb:	mov    DWORD PTR [edi],0x5
1003cfd1:	pop    ebx
1003cfd2:	ret    
1003cfd3:	int3   
1003cfd4:	int3   
1003cfd5:	int3   
1003cfd6:	int3   
1003cfd7:	int3   
1003cfd8:	int3   
1003cfd9:	int3   
1003cfda:	int3   
1003cfdb:	int3   
1003cfdc:	int3   
1003cfdd:	int3   
1003cfde:	int3   
1003cfdf:	int3   
1003cfe0:	push   ebp
1003cfe1:	push   esi
1003cfe2:	mov    esi,eax
1003cfe4:	mov    eax,DWORD PTR [esp+0xc]
1003cfe8:	mov    ebp,DWORD PTR [eax+0x30]
1003cfeb:	mov    al,BYTE PTR [esi]
1003cfed:	test   al,al
1003cfef:	push   edi
1003cff0:	je     0x1003d10a
1003cff6:	cmp    al,0x5c
1003cff8:	jne    0x1003d037
1003cffa:	mov    al,BYTE PTR [esi+0x1]
1003cffd:	add    esi,0x1
1003d000:	test   al,al
1003d002:	je     0x1003d10a
1003d008:	cmp    al,0x51
1003d00a:	jne    0x1003d1ac
1003d010:	mov    al,BYTE PTR [esi+0x1]
1003d013:	add    esi,0x1
1003d016:	test   al,al
1003d018:	je     0x1003d10a
1003d01e:	cmp    al,0x5c
1003d020:	jne    0x1003d010
1003d022:	test   al,al
1003d024:	je     0x1003d10a
1003d02a:	add    esi,0x1
1003d02d:	cmp    BYTE PTR [esi],0x45
1003d030:	jne    0x1003d010
1003d032:	jmp    0x1003d1ac
1003d037:	cmp    al,0x5b
1003d039:	jne    0x1003d0e9
1003d03f:	xor    edi,edi
1003d041:	movzx  eax,BYTE PTR [esi+0x1]
1003d045:	add    esi,0x1
1003d048:	cmp    eax,0x5c
1003d04b:	jne    0x1003d073
1003d04d:	cmp    BYTE PTR [esi+0x1],0x45
1003d051:	lea    eax,[esi+0x1]
1003d054:	jne    0x1003d05a
1003d056:	mov    esi,eax
1003d058:	jmp    0x1003d041
1003d05a:	push   0x3
1003d05c:	push   0x10072ccc
1003d061:	push   eax
1003d062:	call   0x1004b5b6
1003d067:	add    esp,0xc
1003d06a:	test   eax,eax
1003d06c:	jne    0x1003d083
1003d06e:	add    esi,0x3
1003d071:	jmp    0x1003d041
1003d073:	test   edi,edi
1003d075:	jne    0x1003d083
1003d077:	cmp    eax,0x5e
1003d07a:	jne    0x1003d083
1003d07c:	mov    edi,0x1
1003d081:	jmp    0x1003d041
1003d083:	cmp    BYTE PTR [esi+0x1],0x5d
1003d087:	jne    0x1003d099
1003d089:	mov    ecx,DWORD PTR [esp+0x10]
1003d08d:	test   DWORD PTR [ecx+0x40],0x2000000
1003d094:	jne    0x1003d099
1003d096:	add    esi,0x1
1003d099:	mov    al,BYTE PTR [esi+0x1]
1003d09c:	add    esi,0x1
1003d09f:	cmp    al,0x5d
1003d0a1:	je     0x1003d1ac
1003d0a7:	test   al,al
1003d0a9:	je     0x1003d10a
1003d0ab:	cmp    al,0x5c
1003d0ad:	jne    0x1003d0da
1003d0af:	mov    al,BYTE PTR [esi+0x1]
1003d0b2:	add    esi,0x1
1003d0b5:	test   al,al
1003d0b7:	je     0x1003d10a
1003d0b9:	cmp    al,0x51
1003d0bb:	jne    0x1003d0da
1003d0bd:	lea    ecx,[ecx+0x0]
1003d0c0:	mov    al,BYTE PTR [esi+0x1]
1003d0c3:	add    esi,0x1
1003d0c6:	test   al,al
1003d0c8:	je     0x1003d10a
1003d0ca:	cmp    al,0x5c
1003d0cc:	jne    0x1003d0c0
1003d0ce:	test   al,al
1003d0d0:	je     0x1003d10a
1003d0d2:	add    esi,0x1
1003d0d5:	cmp    BYTE PTR [esi],0x45
1003d0d8:	jne    0x1003d0c0
1003d0da:	mov    al,BYTE PTR [esi+0x1]
1003d0dd:	add    esi,0x1
1003d0e0:	cmp    al,0x5d
1003d0e2:	jne    0x1003d0a7
1003d0e4:	jmp    0x1003d1ac
1003d0e9:	cmp    DWORD PTR [esp+0x18],0x0
1003d0ee:	je     0x1003d111
1003d0f0:	cmp    al,0x23
1003d0f2:	jne    0x1003d111
1003d0f4:	mov    al,BYTE PTR [esi+0x1]
1003d0f7:	add    esi,0x1
1003d0fa:	test   al,al
1003d0fc:	je     0x1003d10a
1003d0fe:	cmp    al,0xa
1003d100:	jne    0x1003d0f4
1003d102:	test   al,al
1003d104:	jne    0x1003d1ac
1003d10a:	pop    edi
1003d10b:	pop    esi
1003d10c:	or     eax,0xffffffff
1003d10f:	pop    ebp
1003d110:	ret    
1003d111:	cmp    al,0x28
1003d113:	jne    0x1003d1ac
1003d119:	mov    al,BYTE PTR [esi+0x1]
1003d11c:	cmp    al,0x3f
1003d11e:	je     0x1003d135
1003d120:	cmp    al,0x2a
1003d122:	je     0x1003d135
1003d124:	add    ebp,0x1
1003d127:	test   ebx,ebx
1003d129:	jne    0x1003d1ac
1003d12f:	cmp    ebp,DWORD PTR [esp+0x14]
1003d133:	jmp    0x1003d1aa
1003d135:	add    esi,0x2
1003d138:	cmp    BYTE PTR [esi],0x50
1003d13b:	jne    0x1003d140
1003d13d:	add    esi,0x1
1003d140:	mov    cl,BYTE PTR [esi]
1003d142:	cmp    cl,0x3c
1003d145:	jne    0x1003d152
1003d147:	mov    al,BYTE PTR [esi+0x1]
1003d14a:	cmp    al,0x21
1003d14c:	je     0x1003d152
1003d14e:	cmp    al,0x3d
1003d150:	jne    0x1003d157
1003d152:	cmp    cl,0x27
1003d155:	jne    0x1003d1ac
1003d157:	add    ebp,0x1
1003d15a:	test   ebx,ebx
1003d15c:	jne    0x1003d164
1003d15e:	cmp    ebp,DWORD PTR [esp+0x14]
1003d162:	je     0x1003d1c1
1003d164:	movzx  eax,cl
1003d167:	add    esi,0x1
1003d16a:	cmp    eax,0x3c
1003d16d:	jne    0x1003d174
1003d16f:	mov    eax,0x3e
1003d174:	movzx  edx,BYTE PTR [esi]
1003d177:	cmp    edx,eax
1003d179:	mov    ecx,esi
1003d17b:	je     0x1003d18b
1003d17d:	lea    ecx,[ecx+0x0]
1003d180:	movzx  edx,BYTE PTR [esi+0x1]
1003d184:	add    esi,0x1
1003d187:	cmp    edx,eax
1003d189:	jne    0x1003d180
1003d18b:	test   ebx,ebx
1003d18d:	je     0x1003d1ac
1003d18f:	mov    eax,esi
1003d191:	sub    eax,ecx
1003d193:	cmp    DWORD PTR [esp+0x14],eax
1003d197:	jne    0x1003d1ac
1003d199:	mov    edx,DWORD PTR [esp+0x14]
1003d19d:	push   edx
1003d19e:	push   ecx
1003d19f:	push   ebx
1003d1a0:	call   0x1004b5b6
1003d1a5:	add    esp,0xc
1003d1a8:	test   eax,eax
1003d1aa:	je     0x1003d1c1
1003d1ac:	mov    al,BYTE PTR [esi+0x1]
1003d1af:	add    esi,0x1
1003d1b2:	test   al,al
1003d1b4:	jne    0x1003cff6
1003d1ba:	pop    edi
1003d1bb:	pop    esi
1003d1bc:	or     eax,0xffffffff
1003d1bf:	pop    ebp
1003d1c0:	ret    
1003d1c1:	pop    edi
1003d1c2:	pop    esi
1003d1c3:	mov    eax,ebp
1003d1c5:	pop    ebp
1003d1c6:	ret    
1003d1c7:	int3   
1003d1c8:	int3   
1003d1c9:	int3   
1003d1ca:	int3   
1003d1cb:	int3   
1003d1cc:	int3   
1003d1cd:	int3   
1003d1ce:	int3   
1003d1cf:	int3   
1003d1d0:	movzx  edx,BYTE PTR [eax]
1003d1d3:	mov    ecx,edx
1003d1d5:	sub    ecx,0x4
1003d1d8:	cmp    ecx,0x62
1003d1db:	push   ebp
1003d1dc:	ja     0x1003d247
1003d1de:	mov    edi,edi
1003d1e0:	movzx  ecx,BYTE PTR [ecx+0x1003d260]
1003d1e7:	jmp    DWORD PTR [ecx*4+0x1003d24c]
1003d1ee:	test   esi,esi
1003d1f0:	jle    0x1003d204
1003d1f2:	movzx  ecx,BYTE PTR [eax+0x1]
1003d1f6:	mov    edx,DWORD PTR [edi]
1003d1f8:	mov    ebp,ecx
1003d1fa:	and    edx,esi
1003d1fc:	and    ebp,esi
1003d1fe:	cmp    ebp,edx
1003d200:	je     0x1003d204
1003d202:	mov    DWORD PTR [edi],ecx
1003d204:	add    eax,0x2
1003d207:	jmp    0x1003d23a
1003d209:	test   ebx,ebx
1003d20b:	je     0x1003d247
1003d20d:	lea    ecx,[ecx+0x0]
1003d210:	xor    ecx,ecx
1003d212:	mov    ch,BYTE PTR [eax+0x1]
1003d215:	mov    cl,BYTE PTR [eax+0x2]
1003d218:	add    eax,ecx
1003d21a:	cmp    BYTE PTR [eax],0x54
1003d21d:	je     0x1003d210
1003d21f:	movzx  edx,BYTE PTR [eax]
1003d222:	movzx  ecx,BYTE PTR [edx+0x1006d078]
1003d229:	add    eax,ecx
1003d22b:	jmp    0x1003d23a
1003d22d:	test   ebx,ebx
1003d22f:	je     0x1003d247
1003d231:	movzx  edx,BYTE PTR [edx+0x1006d078]
1003d238:	add    eax,edx
1003d23a:	movzx  edx,BYTE PTR [eax]
1003d23d:	mov    ecx,edx
1003d23f:	sub    ecx,0x4
1003d242:	cmp    ecx,0x62
1003d245:	jbe    0x1003d1e0
1003d247:	pop    ebp
1003d248:	ret    
1003d249:	lea    ecx,[ecx+0x0]
1003d24c:	sub    eax,0xee1003d2
1003d251:	rol    DWORD PTR [ebx],1
1003d253:	adc    BYTE PTR [ecx],dh
1003d255:	rol    BYTE PTR [ebx],cl
1003d257:	adc    BYTE PTR [ecx],cl
1003d259:	rol    BYTE PTR [ebx],cl
1003d25b:	adc    BYTE PTR [edi-0x2e],al
1003d25e:	add    edx,DWORD PTR [eax]
1003d260:	add    BYTE PTR [eax],al
1003d262:	add    al,0x4
1003d264:	add    al,0x4
1003d266:	add    al,0x4
1003d268:	add    al,0x4
1003d26a:	add    al,0x4
1003d26c:	add    al,0x4
1003d26e:	add    al,0x4
1003d270:	add    al,0x4
1003d272:	add    al,0x4
1003d274:	add    al,0x1
1003d276:	add    al,0x4
1003d278:	add    al,0x4
1003d27a:	add    al,0x4
1003d27c:	add    al,0x4
1003d27e:	add    al,0x4
1003d280:	add    al,0x4
1003d282:	add    al,0x4
1003d284:	add    al,0x4
1003d286:	add    al,0x4
1003d288:	add    al,0x4
1003d28a:	add    al,0x4
1003d28c:	add    al,0x4
1003d28e:	add    al,0x4
1003d290:	add    al,0x4
1003d292:	add    al,0x4
1003d294:	add    al,0x4
1003d296:	add    al,0x4
1003d298:	add    al,0x4
1003d29a:	add    al,0x4
1003d29c:	add    al,0x4
1003d29e:	add    al,0x4
1003d2a0:	add    al,0x4
1003d2a2:	add    al,0x4
1003d2a4:	add    al,0x4
1003d2a6:	add    al,0x4
1003d2a8:	add    al,0x4
1003d2aa:	add    al,0x4
1003d2ac:	add    al,0x4
1003d2ae:	add    al,0x2
1003d2b0:	add    al,0x4
1003d2b2:	add    al,0x4
1003d2b4:	add    al,0x3
1003d2b6:	add    eax,DWORD PTR [ebx]
1003d2b8:	add    al,0x4
1003d2ba:	add    al,0x4
1003d2bc:	add    al,0x4
1003d2be:	add    al,0x4
1003d2c0:	add    al,BYTE PTR [edx]
1003d2c2:	add    cl,ah
1003d2c4:	int3   
1003d2c5:	int3   
1003d2c6:	int3   
1003d2c7:	int3   
1003d2c8:	int3   
1003d2c9:	int3   
1003d2ca:	int3   
1003d2cb:	int3   
1003d2cc:	int3   
1003d2cd:	int3   
1003d2ce:	int3   
1003d2cf:	int3   
1003d2d0:	push   ebx
1003d2d1:	push   ebp
1003d2d2:	push   esi
1003d2d3:	mov    esi,DWORD PTR [esp+0x10]
1003d2d7:	mov    cl,BYTE PTR [esi+0x3]
1003d2da:	add    esi,0x3
1003d2dd:	movzx  eax,cl
1003d2e0:	push   edi
1003d2e1:	or     ebx,0xffffffff
1003d2e4:	xor    edi,edi
1003d2e6:	cmp    eax,0x66
1003d2e9:	ja     0x1003d418
1003d2ef:	mov    ebp,DWORD PTR [esp+0x18]
1003d2f3:	jmp    0x1003d300
1003d2f5:	lea    esp,[esp+0x0]
1003d2fc:	lea    esp,[esp+0x0]
1003d300:	movzx  edx,BYTE PTR [eax+0x1003d464]
1003d307:	jmp    DWORD PTR [edx*4+0x1003d434]
1003d30e:	xor    ecx,ecx
1003d310:	cmp    eax,0x5f
1003d313:	setne  cl
1003d316:	push   ebp
1003d317:	sub    ecx,0x1
1003d31a:	and    ecx,0x2
1003d31d:	add    ecx,esi
1003d31f:	push   ecx
1003d320:	call   0x1003d2d0
1003d325:	add    esp,0x8
1003d328:	test   eax,eax
1003d32a:	jl     0x1003d41b
1003d330:	add    edi,eax
1003d332:	xor    edx,edx
1003d334:	mov    dh,BYTE PTR [esi+0x1]
1003d337:	mov    dl,BYTE PTR [esi+0x2]
1003d33a:	add    esi,edx
1003d33c:	cmp    BYTE PTR [esi],0x54
1003d33f:	je     0x1003d332
1003d341:	add    esi,0x3
1003d344:	jmp    0x1003d40a
1003d349:	test   ebx,ebx
1003d34b:	jge    0x1003d351
1003d34d:	mov    ebx,edi
1003d34f:	jmp    0x1003d359
1003d351:	cmp    ebx,edi
1003d353:	jne    0x1003d418
1003d359:	cmp    cl,0x54
1003d35c:	jne    0x1003d420
1003d362:	add    esi,0x3
1003d365:	xor    edi,edi
1003d367:	jmp    0x1003d40a
1003d36c:	lea    esp,[esp+0x0]
1003d370:	xor    eax,eax
1003d372:	mov    ah,BYTE PTR [esi+0x1]
1003d375:	mov    al,BYTE PTR [esi+0x2]
1003d378:	add    esi,eax
1003d37a:	cmp    BYTE PTR [esi],0x54
1003d37d:	je     0x1003d370
1003d37f:	movzx  ecx,BYTE PTR [esi]
1003d382:	movzx  edx,BYTE PTR [ecx+0x1006d078]
1003d389:	add    esi,edx
1003d38b:	jmp    0x1003d40a
1003d38d:	add    edi,0x1
1003d390:	add    esi,0x2
1003d393:	jmp    0x1003d40a
1003d395:	xor    eax,eax
1003d397:	mov    ah,BYTE PTR [esi+0x1]
1003d39a:	mov    al,BYTE PTR [esi+0x2]
1003d39d:	add    edi,eax
1003d39f:	add    esi,0x4
1003d3a2:	jmp    0x1003d40a
1003d3a4:	mov    al,BYTE PTR [esi+0x3]
1003d3a7:	xor    ecx,ecx
1003d3a9:	mov    ch,BYTE PTR [esi+0x1]
1003d3ac:	mov    cl,BYTE PTR [esi+0x2]
1003d3af:	add    edi,ecx
1003d3b1:	cmp    al,0x10
1003d3b3:	je     0x1003d3b9
1003d3b5:	cmp    al,0xf
1003d3b7:	jne    0x1003d3bc
1003d3b9:	add    esi,0x2
1003d3bc:	add    esi,0x4
1003d3bf:	jmp    0x1003d40a
1003d3c1:	add    esi,0x2
1003d3c4:	add    edi,0x1
1003d3c7:	add    esi,0x1
1003d3ca:	jmp    0x1003d40a
1003d3cc:	movzx  eax,BYTE PTR [esi+0x21]
1003d3d0:	add    esi,0x21
1003d3d3:	add    eax,0xffffffba
1003d3d6:	cmp    eax,0x7
1003d3d9:	ja     0x1003d407
1003d3db:	movzx  edx,BYTE PTR [eax+0x1003d4d8]
1003d3e2:	jmp    DWORD PTR [edx*4+0x1003d4cc]
1003d3e9:	movzx  ecx,BYTE PTR [esi+0x2]
1003d3ed:	xor    edx,edx
1003d3ef:	mov    dh,BYTE PTR [esi+0x3]
1003d3f2:	xor    eax,eax
1003d3f4:	mov    ah,BYTE PTR [esi+0x1]
1003d3f7:	mov    dl,BYTE PTR [esi+0x4]
1003d3fa:	or     eax,ecx
1003d3fc:	cmp    eax,edx
1003d3fe:	jne    0x1003d418
1003d400:	add    edi,eax
1003d402:	add    esi,0x5
1003d405:	jmp    0x1003d40a
1003d407:	add    edi,0x1
1003d40a:	mov    cl,BYTE PTR [esi]
1003d40c:	movzx  eax,cl
1003d40f:	cmp    eax,0x66
1003d412:	jbe    0x1003d300
1003d418:	or     eax,0xffffffff
1003d41b:	pop    edi
1003d41c:	pop    esi
1003d41d:	pop    ebp
1003d41e:	pop    ebx
1003d41f:	ret    
1003d420:	pop    edi
1003d421:	pop    esi
1003d422:	pop    ebp
1003d423:	mov    eax,ebx
1003d425:	pop    ebx
1003d426:	ret    
1003d427:	pop    edi
1003d428:	pop    esi
1003d429:	pop    ebp
1003d42a:	mov    eax,0xfffffffe
1003d42f:	pop    ebx
1003d430:	ret    
1003d431:	lea    ecx,[ecx+0x0]
1003d434:	dec    ecx
1003d435:	rol    DWORD PTR [ebx],cl
1003d437:	adc    BYTE PTR [edi-0x2d],bh
1003d43a:	add    edx,DWORD PTR [eax]
1003d43c:	(bad)  
1003d43d:	rol    DWORD PTR [ebx],cl
1003d43f:	adc    BYTE PTR [edi],ah
1003d441:	aam    0x3
1003d443:	adc    cl,al
1003d445:	rol    DWORD PTR [ebx],cl
1003d447:	adc    BYTE PTR [ebp-0x6aeffc2d],cl
1003d44d:	rol    DWORD PTR [ebx],cl
1003d44f:	adc    BYTE PTR [ebx+edx*8-0x2c33effd],ah
1003d456:	add    edx,DWORD PTR [eax]
1003d458:	jo     0x1003d42d
1003d45a:	add    edx,DWORD PTR [eax]
1003d45c:	push   cs
1003d45d:	rol    DWORD PTR [ebx],cl
1003d45f:	adc    BYTE PTR [eax],bl
1003d461:	aam    0x3
1003d463:	adc    BYTE PTR [eax],al
1003d465:	add    DWORD PTR [ecx],eax
1003d467:	or     eax,DWORD PTR [ecx]
1003d469:	add    DWORD PTR [edx],eax
1003d46b:	add    al,BYTE PTR [edx]
1003d46d:	add    al,BYTE PTR [edx]
1003d46f:	add    al,BYTE PTR [edx]
1003d471:	add    al,BYTE PTR [ebx]
1003d473:	add    al,0x4
1003d475:	or     ecx,DWORD PTR [ebx]
1003d477:	or     ecx,DWORD PTR [ebx]
1003d479:	or     ecx,DWORD PTR [ebx]
1003d47b:	add    DWORD PTR [ecx],eax
1003d47d:	add    DWORD PTR [ecx],eax
1003d47f:	add    DWORD PTR ds:0xb0b0505,eax
1003d485:	or     ecx,DWORD PTR [ebx]
1003d487:	or     ecx,DWORD PTR [ebx]
1003d489:	or     ecx,DWORD PTR [ebx]
1003d48b:	push   es
1003d48c:	or     ecx,DWORD PTR [ebx]
1003d48e:	or     ecx,DWORD PTR [ebx]
1003d490:	or     ecx,DWORD PTR [ebx]
1003d492:	or     ecx,DWORD PTR [ebx]
1003d494:	or     ecx,DWORD PTR [ebx]
1003d496:	or     ecx,DWORD PTR [ebx]
1003d498:	or     ecx,DWORD PTR [ebx]
1003d49a:	or     ecx,DWORD PTR [ebx]
1003d49c:	or     ecx,DWORD PTR [ebx]
1003d49e:	or     ecx,DWORD PTR [ebx]
1003d4a0:	or     ecx,DWORD PTR [ebx]
1003d4a2:	or     ecx,DWORD PTR [ebx]
1003d4a4:	or     eax,DWORD PTR [edi]
1003d4a6:	or     ecx,DWORD PTR [ebx]
1003d4a8:	or     ecx,DWORD PTR [ebx]
1003d4aa:	or     ecx,DWORD PTR [ebx]
1003d4ac:	or     ecx,DWORD PTR [ebx]
1003d4ae:	or     ecx,DWORD PTR [ebx]
1003d4b0:	or     ecx,DWORD PTR [ebx]
1003d4b2:	or     BYTE PTR [eax],cl
1003d4b4:	or     ecx,DWORD PTR [ebx]
1003d4b6:	or     eax,DWORD PTR [ecx]
1003d4b8:	add    BYTE PTR [eax],al
1003d4ba:	add    BYTE PTR [eax],al
1003d4bc:	or     DWORD PTR [ecx],ecx
1003d4be:	or     DWORD PTR [ecx],ecx
1003d4c0:	add    DWORD PTR [edx],ecx
1003d4c2:	or     cl,BYTE PTR [edx]
1003d4c4:	or     cl,BYTE PTR [ebx]
1003d4c6:	or     ecx,DWORD PTR [ebx]
1003d4c8:	add    DWORD PTR [ecx],eax
1003d4ca:	add    DWORD PTR [eax+0x1003d418],edx
1003d4d0:	jmp    0x1713d8a8
1003d4d5:	aam    0x3
1003d4d7:	adc    BYTE PTR [eax],al
1003d4d9:	add    BYTE PTR [edx],al
1003d4db:	add    al,BYTE PTR [eax]
1003d4dd:	add    BYTE PTR [ecx],al
1003d4df:	add    DWORD PTR [edi],ecx
1003d4e1:	mov    dh,0x8
1003d4e3:	test   ecx,ecx
1003d4e5:	je     0x1003d547
1003d4e7:	cmp    ecx,0x50
1003d4ea:	jne    0x1003d4f6
1003d4ec:	xor    ecx,ecx
1003d4ee:	mov    ch,BYTE PTR [eax+0x1]
1003d4f1:	mov    cl,BYTE PTR [eax+0x2]
1003d4f4:	jmp    0x1003d53e
1003d4f6:	cmp    ecx,0x5f
1003d4f9:	jne    0x1003d50c
1003d4fb:	xor    edx,edx
1003d4fd:	mov    dh,BYTE PTR [eax+0x3]
1003d500:	mov    dl,BYTE PTR [eax+0x4]
1003d503:	cmp    edx,esi
1003d505:	je     0x1003d549
1003d507:	add    eax,0x5
1003d50a:	jmp    0x1003d540
1003d50c:	lea    edx,[ecx-0x39]
1003d50f:	cmp    edx,0xc
1003d512:	ja     0x1003d537
1003d514:	movzx  edx,BYTE PTR [edx+0x1003d554]
1003d51b:	jmp    DWORD PTR [edx*4+0x1003d54c]
1003d522:	mov    dl,BYTE PTR [eax+0x1]
1003d525:	jmp    0x1003d52a
1003d527:	mov    dl,BYTE PTR [eax+0x3]
1003d52a:	cmp    dl,0x10
1003d52d:	je     0x1003d534
1003d52f:	cmp    dl,0xf
1003d532:	jne    0x1003d537
1003d534:	add    eax,0x2
1003d537:	movzx  ecx,BYTE PTR [ecx+0x1006d078]
1003d53e:	add    eax,ecx
1003d540:	movzx  ecx,BYTE PTR [eax]
1003d543:	test   ecx,ecx
1003d545:	jne    0x1003d4e7
1003d547:	xor    eax,eax
1003d549:	ret    
1003d54a:	mov    edi,edi
1003d54c:	and    dl,ch
1003d54e:	add    edx,DWORD PTR [eax]
1003d550:	daa    
1003d551:	aad    0x3
1003d553:	adc    BYTE PTR [eax],al
1003d555:	add    BYTE PTR [eax],al
1003d557:	add    BYTE PTR [eax],al
1003d559:	add    BYTE PTR [ecx],al
1003d55b:	add    DWORD PTR [ecx],eax
1003d55d:	add    BYTE PTR [eax],al
1003d55f:	add    BYTE PTR [ecx],al
1003d561:	int3   
1003d562:	int3   
1003d563:	int3   
1003d564:	int3   
1003d565:	int3   
1003d566:	int3   
1003d567:	int3   
1003d568:	int3   
1003d569:	int3   
1003d56a:	int3   
1003d56b:	int3   
1003d56c:	int3   
1003d56d:	int3   
1003d56e:	int3   
1003d56f:	int3   
1003d570:	movzx  ecx,BYTE PTR [eax]
1003d573:	test   ecx,ecx
1003d575:	je     0x1003d5c6
1003d577:	cmp    ecx,0x52
1003d57a:	je     0x1003d5c8
1003d57c:	cmp    ecx,0x50
1003d57f:	jne    0x1003d58b
1003d581:	xor    ecx,ecx
1003d583:	mov    ch,BYTE PTR [eax+0x1]
1003d586:	mov    cl,BYTE PTR [eax+0x2]
1003d589:	jmp    0x1003d5bd
1003d58b:	lea    edx,[ecx-0x39]
1003d58e:	cmp    edx,0xc
1003d591:	ja     0x1003d5b6
1003d593:	movzx  edx,BYTE PTR [edx+0x1003d5d4]
1003d59a:	jmp    DWORD PTR [edx*4+0x1003d5cc]
1003d5a1:	mov    dl,BYTE PTR [eax+0x1]
1003d5a4:	jmp    0x1003d5a9
1003d5a6:	mov    dl,BYTE PTR [eax+0x3]
1003d5a9:	cmp    dl,0x10
1003d5ac:	je     0x1003d5b3
1003d5ae:	cmp    dl,0xf
1003d5b1:	jne    0x1003d5b6
1003d5b3:	add    eax,0x2
1003d5b6:	movzx  ecx,BYTE PTR [ecx+0x1006d078]
1003d5bd:	add    eax,ecx
1003d5bf:	movzx  ecx,BYTE PTR [eax]
1003d5c2:	test   ecx,ecx
1003d5c4:	jne    0x1003d577
1003d5c6:	xor    eax,eax
1003d5c8:	ret    
1003d5c9:	lea    ecx,[ecx+0x0]
1003d5cc:	mov    eax,ds:0xa61003d5
1003d5d1:	aad    0x3
1003d5d3:	adc    BYTE PTR [eax],al
1003d5d5:	add    BYTE PTR [eax],al
1003d5d7:	add    BYTE PTR [eax],al
1003d5d9:	add    BYTE PTR [ecx],al
1003d5db:	add    DWORD PTR [ecx],eax
1003d5dd:	add    BYTE PTR [eax],al
1003d5df:	add    BYTE PTR [ecx],al
1003d5e1:	int3   
1003d5e2:	int3   
1003d5e3:	int3   
1003d5e4:	int3   
1003d5e5:	int3   
1003d5e6:	int3   
1003d5e7:	int3   
1003d5e8:	int3   
1003d5e9:	int3   
1003d5ea:	int3   
1003d5eb:	int3   
1003d5ec:	int3   
1003d5ed:	int3   
1003d5ee:	int3   
1003d5ef:	int3   
1003d5f0:	mov    ecx,DWORD PTR [esp+0x4]
1003d5f4:	movzx  eax,BYTE PTR [ecx]
1003d5f7:	movzx  eax,BYTE PTR [eax+0x1006d078]
1003d5fe:	push   ebx
1003d5ff:	push   ebp
1003d600:	push   esi
1003d601:	push   edi
1003d602:	add    eax,ecx
1003d604:	mov    ebx,0x1
1003d609:	xor    esi,esi
1003d60b:	xor    edi,edi
1003d60d:	call   0x1003d1d0
1003d612:	mov    ebp,DWORD PTR [esp+0x18]
1003d616:	mov    esi,eax
1003d618:	cmp    esi,ebp
1003d61a:	jae    0x1003d744
1003d620:	movzx  eax,BYTE PTR [esi]
1003d623:	cmp    eax,0x58
1003d626:	jne    0x1003d63c
1003d628:	xor    ecx,ecx
1003d62a:	mov    ch,BYTE PTR [esi+0x1]
1003d62d:	mov    cl,BYTE PTR [esi+0x2]
1003d630:	add    esi,ecx
1003d632:	cmp    BYTE PTR [esi],0x54
1003d635:	je     0x1003d628
1003d637:	jmp    0x1003d720
1003d63c:	cmp    eax,0x67
1003d63f:	je     0x1003d708
1003d645:	cmp    eax,0x68
1003d648:	je     0x1003d708
1003d64e:	cmp    eax,0x6f
1003d651:	je     0x1003d708
1003d657:	cmp    eax,0x5e
1003d65a:	je     0x1003d6c9
1003d65c:	cmp    eax,0x5f
1003d65f:	je     0x1003d6c9
1003d661:	cmp    eax,0x5d
1003d664:	je     0x1003d6c9
1003d666:	cmp    eax,0x60
1003d669:	je     0x1003d6c9
1003d66b:	lea    ecx,[eax-0x6]
1003d66e:	cmp    ecx,0x51
1003d671:	ja     0x1003d723
1003d677:	movzx  edx,BYTE PTR [ecx+0x1003d768]
1003d67e:	jmp    DWORD PTR [edx*4+0x1003d750]
1003d685:	movzx  ecx,BYTE PTR [esi+0x21]
1003d689:	add    ecx,0xffffffba
1003d68c:	cmp    ecx,0x7
1003d68f:	ja     0x1003d6ab
1003d691:	movzx  ecx,BYTE PTR [ecx+0x1003d7c8]
1003d698:	jmp    DWORD PTR [ecx*4+0x1003d7bc]
1003d69f:	xor    edx,edx
1003d6a1:	mov    dh,BYTE PTR [esi+0x22]
1003d6a4:	mov    dl,BYTE PTR [esi+0x23]
1003d6a7:	test   edx,edx
1003d6a9:	jle    0x1003d723
1003d6ab:	pop    edi
1003d6ac:	pop    esi
1003d6ad:	pop    ebp
1003d6ae:	xor    eax,eax
1003d6b0:	pop    ebx
1003d6b1:	ret    
1003d6b2:	mov    cl,BYTE PTR [esi+0x1]
1003d6b5:	jmp    0x1003d6ba
1003d6b7:	mov    cl,BYTE PTR [esi+0x3]
1003d6ba:	cmp    cl,0x10
1003d6bd:	je     0x1003d6c4
1003d6bf:	cmp    cl,0xf
1003d6c2:	jne    0x1003d723
1003d6c4:	add    esi,0x2
1003d6c7:	jmp    0x1003d723
1003d6c9:	xor    eax,eax
1003d6cb:	mov    ah,BYTE PTR [esi+0x1]
1003d6ce:	mov    al,BYTE PTR [esi+0x2]
1003d6d1:	test   eax,eax
1003d6d3:	je     0x1003d744
1003d6d5:	xor    edi,edi
1003d6d7:	test   edi,edi
1003d6d9:	jne    0x1003d6f3
1003d6db:	mov    ecx,DWORD PTR [esp+0x1c]
1003d6df:	push   ecx
1003d6e0:	push   ebp
1003d6e1:	push   esi
1003d6e2:	call   0x1003d5f0
1003d6e7:	add    esp,0xc
1003d6ea:	test   eax,eax
1003d6ec:	je     0x1003d6f3
1003d6ee:	mov    edi,0x1
1003d6f3:	xor    edx,edx
1003d6f5:	mov    dh,BYTE PTR [esi+0x1]
1003d6f8:	mov    dl,BYTE PTR [esi+0x2]
1003d6fb:	add    esi,edx
1003d6fd:	cmp    BYTE PTR [esi],0x54
1003d700:	je     0x1003d6d7
1003d702:	test   edi,edi
1003d704:	je     0x1003d6ab
1003d706:	jmp    0x1003d720
1003d708:	movzx  eax,BYTE PTR [eax+0x1006d078]
1003d70f:	add    esi,eax
1003d711:	xor    ecx,ecx
1003d713:	mov    ch,BYTE PTR [esi+0x1]
1003d716:	mov    cl,BYTE PTR [esi+0x2]
1003d719:	add    esi,ecx
1003d71b:	cmp    BYTE PTR [esi],0x54
1003d71e:	je     0x1003d711
1003d720:	movzx  eax,BYTE PTR [esi]
1003d723:	movzx  eax,BYTE PTR [eax+0x1006d078]
1003d72a:	add    eax,esi
1003d72c:	mov    ebx,0x1
1003d731:	xor    esi,esi
1003d733:	xor    edi,edi
1003d735:	call   0x1003d1d0
1003d73a:	mov    esi,eax
1003d73c:	cmp    esi,ebp
1003d73e:	jb     0x1003d620
1003d744:	pop    edi
1003d745:	pop    esi
1003d746:	pop    ebp
1003d747:	mov    eax,0x1
1003d74c:	pop    ebx
1003d74d:	ret    
1003d74e:	mov    edi,edi
1003d750:	stos   DWORD PTR es:[edi],eax
1003d751:	(bad)  
1003d752:	add    edx,DWORD PTR [eax]
1003d754:	mov    dl,0xd6
1003d756:	add    edx,DWORD PTR [eax]
1003d758:	mov    bh,0xd6
1003d75a:	add    edx,DWORD PTR [eax]
1003d75c:	test   esi,edx
1003d75e:	add    edx,DWORD PTR [eax]
1003d760:	inc    esp
1003d761:	xlat   BYTE PTR ds:[ebx]
1003d762:	add    edx,DWORD PTR [eax]
1003d764:	and    edx,edi
1003d766:	add    edx,DWORD PTR [eax]
	...
1003d770:	add    BYTE PTR [eax],al
1003d772:	add    BYTE PTR ds:0x5050505,al
1003d778:	add    BYTE PTR ds:0x5050505,al
1003d77e:	add    BYTE PTR [eax],al
1003d780:	add    BYTE PTR ds:0x5000005,al
1003d786:	add    eax,0x5000505
1003d78b:	add    BYTE PTR ds:0x50505,al
1003d791:	add    BYTE PTR ds:0x50505,al
1003d797:	add    eax,0x1050500
1003d79c:	add    DWORD PTR [eax],eax
1003d79e:	add    BYTE PTR [ecx],al
1003d7a0:	add    DWORD PTR [edx],eax
1003d7a2:	add    al,BYTE PTR [eax]
1003d7a4:	add    DWORD PTR [eax],eax
1003d7a6:	add    DWORD PTR [edx],eax
1003d7a8:	add    eax,0x5050505
1003d7ad:	add    eax,0x3030505
1003d7b2:	add    eax,0x4050505
1003d7b7:	add    al,0x4
1003d7b9:	add    al,0x8b
1003d7bb:	jmp    DWORD PTR [ebx]
1003d7bd:	xlat   BYTE PTR ds:[ebx]
1003d7be:	add    edx,DWORD PTR [eax]
1003d7c0:	lahf   
1003d7c1:	(bad)  
1003d7c2:	add    edx,DWORD PTR [eax]
1003d7c4:	stos   DWORD PTR es:[edi],eax
1003d7c5:	(bad)  
1003d7c6:	add    edx,DWORD PTR [eax]
1003d7c8:	add    BYTE PTR [eax],al
1003d7ca:	add    al,BYTE PTR [edx]
1003d7cc:	add    BYTE PTR [eax],al
1003d7ce:	add    DWORD PTR [ecx],eax
1003d7d0:	movzx  edx,BYTE PTR [eax+0x1]
1003d7d4:	add    eax,0x1
1003d7d7:	mov    cl,BYTE PTR [eax+0x1]
1003d7da:	add    eax,0x1
1003d7dd:	test   cl,cl
1003d7df:	push   ebx
1003d7e0:	je     0x1003d80d
1003d7e2:	mov    bl,0x5d
1003d7e4:	cmp    cl,0x5c
1003d7e7:	jne    0x1003d7f3
1003d7e9:	cmp    BYTE PTR [eax+0x1],bl
1003d7ec:	jne    0x1003d7f3
1003d7ee:	add    eax,0x1
1003d7f1:	jmp    0x1003d803
1003d7f3:	cmp    cl,bl
1003d7f5:	je     0x1003d80d
1003d7f7:	movzx  ecx,cl
1003d7fa:	cmp    ecx,edx
1003d7fc:	jne    0x1003d803
1003d7fe:	cmp    BYTE PTR [eax+0x1],bl
1003d801:	je     0x1003d811
1003d803:	mov    cl,BYTE PTR [eax+0x1]
1003d806:	add    eax,0x1
1003d809:	test   cl,cl
1003d80b:	jne    0x1003d7e4
1003d80d:	xor    eax,eax
1003d80f:	pop    ebx
1003d810:	ret    
1003d811:	mov    edx,DWORD PTR [esp+0x8]
1003d815:	mov    DWORD PTR [edx],eax
1003d817:	mov    eax,0x1
1003d81c:	pop    ebx
1003d81d:	ret    
1003d81e:	int3   
1003d81f:	int3   
1003d820:	push   ebp
1003d821:	mov    ebp,DWORD PTR [esp+0x8]
1003d825:	push   esi
1003d826:	push   edi
1003d827:	mov    edi,0x1006d628
1003d82c:	xor    esi,esi
1003d82e:	mov    edi,edi
1003d830:	movzx  eax,BYTE PTR [esi+0x1006d67c]
1003d837:	cmp    ebx,eax
1003d839:	jne    0x1003d84a
1003d83b:	push   ebx
1003d83c:	push   edi
1003d83d:	push   ebp
1003d83e:	call   0x1004b5b6
1003d843:	add    esp,0xc
1003d846:	test   eax,eax
1003d848:	je     0x1003d868
1003d84a:	movzx  ecx,BYTE PTR [esi+0x1006d67c]
1003d851:	add    esi,0x1
1003d854:	cmp    BYTE PTR [esi+0x1006d67c],0x0
1003d85b:	lea    edi,[edi+ecx*1+0x1]
1003d85f:	jne    0x1003d830
1003d861:	pop    edi
1003d862:	pop    esi
1003d863:	or     eax,0xffffffff
1003d866:	pop    ebp
1003d867:	ret    
1003d868:	pop    edi
1003d869:	mov    eax,esi
1003d86b:	pop    esi
1003d86c:	pop    ebp
1003d86d:	ret    
1003d86e:	int3   
1003d86f:	int3   
1003d870:	mov    eax,DWORD PTR [esp+0x4]
1003d874:	push   ebx
1003d875:	mov    ebx,DWORD PTR [esp+0xc]
1003d879:	push   esi
1003d87a:	push   edi
1003d87b:	mov    edi,DWORD PTR [esp+0x18]
1003d87f:	call   0x1003d570
1003d884:	mov    esi,eax
1003d886:	test   esi,esi
1003d888:	je     0x1003d90a
1003d88e:	push   ebp
1003d88f:	nop
1003d890:	mov    ecx,DWORD PTR [esp+0x20]
1003d894:	mov    ebp,DWORD PTR [edi+0x20]
1003d897:	cmp    ecx,ebp
1003d899:	jae    0x1003d8d3
1003d89b:	mov    eax,DWORD PTR [edi+0x14]
1003d89e:	lea    edi,[esi+0x1]
1003d8a1:	xor    edx,edx
1003d8a3:	mov    dh,BYTE PTR [ecx]
1003d8a5:	mov    dl,BYTE PTR [ecx+0x1]
1003d8a8:	lea    ebx,[eax+edx*1]
1003d8ab:	cmp    ebx,edi
1003d8ad:	je     0x1003d8bc
1003d8af:	add    ecx,0x2
1003d8b2:	cmp    ecx,ebp
1003d8b4:	jb     0x1003d8a1
1003d8b6:	mov    ebx,DWORD PTR [esp+0x18]
1003d8ba:	jmp    0x1003d8cf
1003d8bc:	mov    ebx,DWORD PTR [esp+0x18]
1003d8c0:	lea    eax,[edx+ebx*1]
1003d8c3:	sar    eax,0x8
1003d8c6:	mov    BYTE PTR [ecx],al
1003d8c8:	mov    al,bl
1003d8ca:	add    al,dl
1003d8cc:	mov    BYTE PTR [ecx+0x1],al
1003d8cf:	mov    edi,DWORD PTR [esp+0x1c]
1003d8d3:	cmp    ecx,DWORD PTR [edi+0x20]
1003d8d6:	jb     0x1003d8fb
1003d8d8:	mov    ecx,DWORD PTR [edi+0x14]
1003d8db:	xor    eax,eax
1003d8dd:	mov    ah,BYTE PTR [esi+0x1]
1003d8e0:	mov    al,BYTE PTR [esi+0x2]
1003d8e3:	add    ecx,eax
1003d8e5:	cmp    ecx,DWORD PTR [esp+0x14]
1003d8e9:	jb     0x1003d8fb
1003d8eb:	lea    edx,[eax+ebx*1]
1003d8ee:	sar    edx,0x8
1003d8f1:	mov    cl,bl
1003d8f3:	add    cl,al
1003d8f5:	mov    BYTE PTR [esi+0x1],dl
1003d8f8:	mov    BYTE PTR [esi+0x2],cl
1003d8fb:	lea    eax,[esi+0x3]
1003d8fe:	call   0x1003d570
1003d903:	mov    esi,eax
1003d905:	test   esi,esi
1003d907:	jne    0x1003d890
1003d909:	pop    ebp
1003d90a:	pop    edi
1003d90b:	pop    esi
1003d90c:	pop    ebx
1003d90d:	ret    
1003d90e:	int3   
1003d90f:	int3   
1003d910:	push   ecx
1003d911:	mov    ecx,DWORD PTR [esp+0x10]
1003d915:	push   ebx
1003d916:	mov    ebx,DWORD PTR [esp+0x18]
1003d91a:	and    ebx,0x8
1003d91d:	push   ebp
1003d91e:	push   edi
1003d91f:	je     0x1003d9af
1003d925:	movzx  edx,BYTE PTR [ecx]
1003d928:	mov    eax,DWORD PTR [esi+0xc]
1003d92b:	test   BYTE PTR [edx+eax*1],0x1
1003d92f:	je     0x1003d942
1003d931:	movzx  edx,BYTE PTR [ecx+0x1]
1003d935:	add    ecx,0x1
1003d938:	test   BYTE PTR [edx+eax*1],0x1
1003d93c:	jne    0x1003d931
1003d93e:	mov    DWORD PTR [esp+0x1c],ecx
1003d942:	cmp    BYTE PTR [ecx],0x23
1003d945:	jne    0x1003d9af
1003d947:	mov    al,BYTE PTR [ecx+0x1]
1003d94a:	add    ecx,0x1
1003d94d:	test   al,al
1003d94f:	mov    DWORD PTR [esp+0x1c],ecx
1003d953:	je     0x1003d925
1003d955:	mov    edx,DWORD PTR [esi+0x50]
1003d958:	test   edx,edx
1003d95a:	je     0x1003d97e
1003d95c:	mov    eax,DWORD PTR [esi+0x1c]
1003d95f:	cmp    ecx,eax
1003d961:	jae    0x1003d99c
1003d963:	push   edx
1003d964:	lea    edi,[esi+0x54]
1003d967:	xor    edx,edx
1003d969:	call   0x10041aa0
1003d96e:	add    esp,0x4
1003d971:	test   eax,eax
1003d973:	je     0x1003d99c
1003d975:	add    ecx,DWORD PTR [esi+0x54]
1003d978:	mov    DWORD PTR [esp+0x1c],ecx
1003d97c:	jmp    0x1003d925
1003d97e:	mov    edx,DWORD PTR [esi+0x54]
1003d981:	mov    edi,DWORD PTR [esi+0x1c]
1003d984:	sub    edi,edx
1003d986:	cmp    ecx,edi
1003d988:	ja     0x1003d99c
1003d98a:	cmp    al,BYTE PTR [esi+0x58]
1003d98d:	jne    0x1003d99c
1003d98f:	cmp    edx,0x1
1003d992:	je     0x1003d975
1003d994:	mov    al,BYTE PTR [ecx+0x1]
1003d997:	cmp    al,BYTE PTR [esi+0x59]
1003d99a:	je     0x1003d975
1003d99c:	mov    al,BYTE PTR [ecx+0x1]
1003d99f:	add    ecx,0x1
1003d9a2:	test   al,al
1003d9a4:	mov    DWORD PTR [esp+0x1c],ecx
1003d9a8:	jne    0x1003d955
1003d9aa:	jmp    0x1003d925
1003d9af:	mov    al,BYTE PTR [ecx]
1003d9b1:	cmp    al,0x5c
1003d9b3:	jne    0x1003d9ec
1003d9b5:	mov    ecx,DWORD PTR [esi+0x30]
1003d9b8:	push   0x0
1003d9ba:	push   ecx
1003d9bb:	lea    edx,[esp+0x14]
1003d9bf:	push   edx
1003d9c0:	lea    eax,[esp+0x28]
1003d9c4:	push   eax
1003d9c5:	mov    eax,DWORD PTR [esp+0x30]
1003d9c9:	mov    DWORD PTR [esp+0x1c],0x0
1003d9d1:	call   0x1003ca70
1003d9d6:	add    esp,0x10
1003d9d9:	cmp    DWORD PTR [esp+0xc],0x0
1003d9de:	mov    ebp,eax
1003d9e0:	jne    0x1003dea1
1003d9e6:	mov    ecx,DWORD PTR [esp+0x1c]
1003d9ea:	jmp    0x1003d9fc
1003d9ec:	mov    edx,DWORD PTR [esi+0xc]
1003d9ef:	movzx  ebp,al
1003d9f2:	test   BYTE PTR [edx+ebp*1],0x80
1003d9f6:	jne    0x1003dea1
1003d9fc:	add    ecx,0x1
1003d9ff:	test   ebx,ebx
1003da01:	je     0x1003da8f
1003da07:	jmp    0x1003da10
1003da09:	lea    esp,[esp+0x0]
1003da10:	movzx  edx,BYTE PTR [ecx]
1003da13:	mov    eax,DWORD PTR [esi+0xc]
1003da16:	test   BYTE PTR [edx+eax*1],0x1
1003da1a:	je     0x1003da2d
1003da1c:	lea    esp,[esp+0x0]
1003da20:	movzx  edx,BYTE PTR [ecx+0x1]
1003da24:	add    ecx,0x1
1003da27:	test   BYTE PTR [edx+eax*1],0x1
1003da2b:	jne    0x1003da20
1003da2d:	cmp    BYTE PTR [ecx],0x23
1003da30:	jne    0x1003da8f
1003da32:	mov    al,BYTE PTR [ecx+0x1]
1003da35:	add    ecx,0x1
1003da38:	test   al,al
1003da3a:	je     0x1003da10
1003da3c:	lea    esp,[esp+0x0]
1003da40:	mov    edx,DWORD PTR [esi+0x50]
1003da43:	test   edx,edx
1003da45:	je     0x1003da65
1003da47:	mov    eax,DWORD PTR [esi+0x1c]
1003da4a:	cmp    ecx,eax
1003da4c:	jae    0x1003da83
1003da4e:	push   edx
1003da4f:	lea    edi,[esi+0x54]
1003da52:	xor    edx,edx
1003da54:	call   0x10041aa0
1003da59:	add    esp,0x4
1003da5c:	test   eax,eax
1003da5e:	je     0x1003da83
1003da60:	add    ecx,DWORD PTR [esi+0x54]
1003da63:	jmp    0x1003da10
1003da65:	mov    edx,DWORD PTR [esi+0x54]
1003da68:	mov    edi,DWORD PTR [esi+0x1c]
1003da6b:	sub    edi,edx
1003da6d:	cmp    ecx,edi
1003da6f:	ja     0x1003da83
1003da71:	cmp    al,BYTE PTR [esi+0x58]
1003da74:	jne    0x1003da83
1003da76:	cmp    edx,0x1
1003da79:	je     0x1003da60
1003da7b:	mov    al,BYTE PTR [ecx+0x1]
1003da7e:	cmp    al,BYTE PTR [esi+0x59]
1003da81:	je     0x1003da60
1003da83:	mov    al,BYTE PTR [ecx+0x1]
1003da86:	add    ecx,0x1
1003da89:	test   al,al
1003da8b:	jne    0x1003da40
1003da8d:	jmp    0x1003da10
1003da8f:	mov    al,BYTE PTR [ecx]
1003da91:	cmp    al,0x2a
1003da93:	je     0x1003dea1
1003da99:	cmp    al,0x3f
1003da9b:	je     0x1003dea1
1003daa1:	push   0x3
1003daa3:	push   0x10072cd0
1003daa8:	push   ecx
1003daa9:	call   0x1004b5b6
1003daae:	add    esp,0xc
1003dab1:	test   eax,eax
1003dab3:	je     0x1003dea1
1003dab9:	test   ebp,ebp
1003dabb:	jl     0x1003dc71
1003dac1:	mov    ecx,DWORD PTR [esp+0x14]
1003dac5:	lea    eax,[ecx-0x6]
1003dac8:	cmp    eax,0x18
1003dacb:	ja     0x1003dea1
1003dad1:	movzx  edx,BYTE PTR [eax+0x1003ded8]
1003dad8:	jmp    DWORD PTR [edx*4+0x1003dea8]
1003dadf:	xor    eax,eax
1003dae1:	cmp    DWORD PTR [esp+0x18],ebp
1003dae5:	pop    edi
1003dae6:	pop    ebp
1003dae7:	setne  al
1003daea:	pop    ebx
1003daeb:	pop    ecx
1003daec:	ret    
1003daed:	mov    eax,DWORD PTR [esp+0x18]
1003daf1:	cmp    eax,ebp
1003daf3:	je     0x1003dea1
1003daf9:	mov    ecx,DWORD PTR [esi+0x4]
1003dafc:	movzx  edx,BYTE PTR [ecx+ebp*1]
1003db00:	xor    ecx,ecx
1003db02:	cmp    eax,edx
1003db04:	setne  cl
1003db07:	pop    edi
1003db08:	pop    ebp
1003db09:	pop    ebx
1003db0a:	mov    eax,ecx
1003db0c:	pop    ecx
1003db0d:	ret    
1003db0e:	mov    eax,DWORD PTR [esp+0x18]
1003db12:	cmp    eax,ebp
1003db14:	je     0x1003db5d
1003db16:	test   BYTE PTR [esp+0x20],0x1
1003db1b:	je     0x1003dea1
1003db21:	mov    edx,DWORD PTR [esi+0x4]
1003db24:	movzx  ecx,BYTE PTR [edx+ebp*1]
1003db28:	xor    edx,edx
1003db2a:	cmp    eax,ecx
1003db2c:	sete   dl
1003db2f:	pop    edi
1003db30:	pop    ebp
1003db31:	pop    ebx
1003db32:	mov    eax,edx
1003db34:	pop    ecx
1003db35:	ret    
1003db36:	cmp    ebp,0x7f
1003db39:	jg     0x1003db5d
1003db3b:	mov    eax,DWORD PTR [esi+0xc]
1003db3e:	test   BYTE PTR [eax+ebp*1],0x4
1003db42:	jmp    0x1003de9b
1003db47:	cmp    ebp,0x7f
1003db4a:	jg     0x1003dea1
1003db50:	mov    ecx,DWORD PTR [esi+0xc]
1003db53:	test   BYTE PTR [ecx+ebp*1],0x4
1003db57:	je     0x1003dea1
1003db5d:	pop    edi
1003db5e:	pop    ebp
1003db5f:	mov    eax,0x1
1003db64:	pop    ebx
1003db65:	pop    ecx
1003db66:	ret    
1003db67:	cmp    ebp,0x7f
1003db6a:	jg     0x1003db5d
1003db6c:	mov    edx,DWORD PTR [esi+0xc]
1003db6f:	test   BYTE PTR [edx+ebp*1],0x1
1003db73:	jmp    0x1003de9b
1003db78:	cmp    ebp,0x7f
1003db7b:	jg     0x1003dea1
1003db81:	mov    eax,DWORD PTR [esi+0xc]
1003db84:	test   BYTE PTR [eax+ebp*1],0x1
1003db88:	je     0x1003dea1
1003db8e:	pop    edi
1003db8f:	pop    ebp
1003db90:	mov    eax,0x1
1003db95:	pop    ebx
1003db96:	pop    ecx
1003db97:	ret    
1003db98:	cmp    ebp,0x7f
1003db9b:	jg     0x1003db5d
1003db9d:	mov    ecx,DWORD PTR [esi+0xc]
1003dba0:	test   BYTE PTR [ecx+ebp*1],0x10
1003dba4:	jmp    0x1003de9b
1003dba9:	cmp    ebp,0x7f
1003dbac:	jg     0x1003dea1
1003dbb2:	mov    edx,DWORD PTR [esi+0xc]
1003dbb5:	test   BYTE PTR [edx+ebp*1],0x10
1003dbb9:	je     0x1003dea1
1003dbbf:	pop    edi
1003dbc0:	pop    ebp
1003dbc1:	mov    eax,0x1
1003dbc6:	pop    ebx
1003dbc7:	pop    ecx
1003dbc8:	ret    
1003dbc9:	cmp    ebp,0x180e
1003dbcf:	jg     0x1003dbef
1003dbd1:	je     0x1003dc26
1003dbd3:	cmp    ebp,0xa0
1003dbd9:	jg     0x1003dbe7
1003dbdb:	je     0x1003dc26
1003dbdd:	cmp    ebp,0x9
1003dbe0:	je     0x1003dc26
1003dbe2:	cmp    ebp,0x20
1003dbe5:	jmp    0x1003dc17
1003dbe7:	cmp    ebp,0x1680
1003dbed:	jmp    0x1003dc17
1003dbef:	cmp    ebp,0x205f
1003dbf5:	jg     0x1003dc11
1003dbf7:	je     0x1003dc26
1003dbf9:	cmp    ebp,0x2000
1003dbff:	jl     0x1003dc19
1003dc01:	cmp    ebp,0x200a
1003dc07:	jle    0x1003dc26
1003dc09:	cmp    ebp,0x202f
1003dc0f:	jmp    0x1003dc17
1003dc11:	cmp    ebp,0x3000
1003dc17:	je     0x1003dc26
1003dc19:	pop    edi
1003dc1a:	xor    eax,eax
1003dc1c:	cmp    ecx,0x13
1003dc1f:	pop    ebp
1003dc20:	sete   al
1003dc23:	pop    ebx
1003dc24:	pop    ecx
1003dc25:	ret    
1003dc26:	pop    edi
1003dc27:	xor    eax,eax
1003dc29:	cmp    ecx,0x13
1003dc2c:	pop    ebp
1003dc2d:	setne  al
1003dc30:	pop    ebx
1003dc31:	pop    ecx
1003dc32:	ret    
1003dc33:	cmp    ebp,0x85
1003dc39:	jg     0x1003dc54
1003dc3b:	je     0x1003dc64
1003dc3d:	cmp    ebp,0xa
1003dc40:	jl     0x1003dc47
1003dc42:	cmp    ebp,0xd
1003dc45:	jle    0x1003dc64
1003dc47:	pop    edi
1003dc48:	xor    eax,eax
1003dc4a:	cmp    ecx,0x15
1003dc4d:	pop    ebp
1003dc4e:	sete   al
1003dc51:	pop    ebx
1003dc52:	pop    ecx
1003dc53:	ret    
1003dc54:	cmp    ebp,0x2028
1003dc5a:	jl     0x1003dc47
1003dc5c:	cmp    ebp,0x2029
1003dc62:	jg     0x1003dc47
1003dc64:	pop    edi
1003dc65:	xor    eax,eax
1003dc67:	cmp    ecx,0x15
1003dc6a:	pop    ebp
1003dc6b:	setne  al
1003dc6e:	pop    ebx
1003dc6f:	pop    ecx
1003dc70:	ret    
1003dc71:	mov    eax,DWORD PTR [esp+0x14]
1003dc75:	add    eax,0xfffffffa
1003dc78:	cmp    eax,0x17
1003dc7b:	ja     0x1003dea1
1003dc81:	movzx  eax,BYTE PTR [eax+0x1003df24]
1003dc88:	jmp    DWORD PTR [eax*4+0x1003def4]
1003dc8f:	neg    ebp
1003dc91:	lea    eax,[ebp-0x6]
1003dc94:	cmp    eax,0xf
1003dc97:	ja     0x1003dea1
1003dc9d:	movzx  ecx,BYTE PTR [eax+0x1003df60]
1003dca4:	jmp    DWORD PTR [ecx*4+0x1003df3c]
1003dcab:	mov    eax,DWORD PTR [esp+0x18]
1003dcaf:	cmp    eax,0x7f
1003dcb2:	jg     0x1003db5d
1003dcb8:	mov    edx,DWORD PTR [esi+0xc]
1003dcbb:	test   BYTE PTR [eax+edx*1],0x4
1003dcbf:	jmp    0x1003de9b
1003dcc4:	mov    eax,DWORD PTR [esp+0x18]
1003dcc8:	cmp    eax,0x7f
1003dccb:	jg     0x1003dea1
1003dcd1:	mov    ecx,DWORD PTR [esi+0xc]
1003dcd4:	test   BYTE PTR [eax+ecx*1],0x4
1003dcd8:	je     0x1003dea1
1003dcde:	pop    edi
1003dcdf:	pop    ebp
1003dce0:	mov    eax,0x1
1003dce5:	pop    ebx
1003dce6:	pop    ecx
1003dce7:	ret    
1003dce8:	mov    eax,DWORD PTR [esp+0x18]
1003dcec:	cmp    eax,0x7f
1003dcef:	jg     0x1003db5d
1003dcf5:	mov    edx,DWORD PTR [esi+0xc]
1003dcf8:	test   BYTE PTR [eax+edx*1],0x1
1003dcfc:	jmp    0x1003de9b
1003dd01:	mov    eax,DWORD PTR [esp+0x18]
1003dd05:	cmp    eax,0x7f
1003dd08:	jg     0x1003dea1
1003dd0e:	mov    ecx,DWORD PTR [esi+0xc]
1003dd11:	test   BYTE PTR [eax+ecx*1],0x1
1003dd15:	je     0x1003dea1
1003dd1b:	pop    edi
1003dd1c:	pop    ebp
1003dd1d:	mov    eax,0x1
1003dd22:	pop    ebx
1003dd23:	pop    ecx
1003dd24:	ret    
1003dd25:	mov    eax,DWORD PTR [esp+0x18]
1003dd29:	cmp    eax,0x7f
1003dd2c:	jg     0x1003db5d
1003dd32:	mov    edx,DWORD PTR [esi+0xc]
1003dd35:	test   BYTE PTR [eax+edx*1],0x10
1003dd39:	jmp    0x1003de9b
1003dd3e:	mov    eax,DWORD PTR [esp+0x18]
1003dd42:	cmp    eax,0x7f
1003dd45:	jg     0x1003dea1
1003dd4b:	mov    ecx,DWORD PTR [esi+0xc]
1003dd4e:	test   BYTE PTR [eax+ecx*1],0x10
1003dd52:	je     0x1003dea1
1003dd58:	pop    edi
1003dd59:	pop    ebp
1003dd5a:	mov    eax,0x1
1003dd5f:	pop    ebx
1003dd60:	pop    ecx
1003dd61:	ret    
1003dd62:	mov    eax,DWORD PTR [esp+0x18]
1003dd66:	cmp    eax,0x180e
1003dd6b:	jg     0x1003dd89
1003dd6d:	je     0x1003ddbb
1003dd6f:	cmp    eax,0xa0
1003dd74:	jg     0x1003dd82
1003dd76:	je     0x1003ddbb
1003dd78:	cmp    eax,0x9
1003dd7b:	je     0x1003ddbb
1003dd7d:	cmp    eax,0x20
1003dd80:	jmp    0x1003ddac
1003dd82:	cmp    eax,0x1680
1003dd87:	jmp    0x1003ddac
1003dd89:	cmp    eax,0x205f
1003dd8e:	jg     0x1003dda7
1003dd90:	je     0x1003ddbb
1003dd92:	cmp    eax,0x2000
1003dd97:	jl     0x1003ddae
1003dd99:	cmp    eax,0x200a
1003dd9e:	jle    0x1003ddbb
1003dda0:	cmp    eax,0x202f
1003dda5:	jmp    0x1003ddac
1003dda7:	cmp    eax,0x3000
1003ddac:	je     0x1003ddbb
1003ddae:	xor    eax,eax
1003ddb0:	pop    edi
1003ddb1:	cmp    ebp,0x13
1003ddb4:	pop    ebp
1003ddb5:	sete   al
1003ddb8:	pop    ebx
1003ddb9:	pop    ecx
1003ddba:	ret    
1003ddbb:	xor    eax,eax
1003ddbd:	pop    edi
1003ddbe:	cmp    ebp,0x13
1003ddc1:	pop    ebp
1003ddc2:	setne  al
1003ddc5:	pop    ebx
1003ddc6:	pop    ecx
1003ddc7:	ret    
1003ddc8:	mov    eax,DWORD PTR [esp+0x18]
1003ddcc:	cmp    eax,0x85
1003ddd1:	jg     0x1003ddec
1003ddd3:	je     0x1003ddfa
1003ddd5:	cmp    eax,0xa
1003ddd8:	jl     0x1003dddf
1003ddda:	cmp    eax,0xd
1003dddd:	jle    0x1003ddfa
1003dddf:	xor    eax,eax
1003dde1:	pop    edi
1003dde2:	cmp    ebp,0x15
1003dde5:	pop    ebp
1003dde6:	sete   al
1003dde9:	pop    ebx
1003ddea:	pop    ecx
1003ddeb:	ret    
1003ddec:	cmp    eax,0x2028
1003ddf1:	jl     0x1003dddf
1003ddf3:	cmp    eax,0x2029
1003ddf8:	jg     0x1003dddf
1003ddfa:	xor    eax,eax
1003ddfc:	pop    edi
1003ddfd:	cmp    ebp,0x15
1003de00:	pop    ebp
1003de01:	setne  al
1003de04:	pop    ebx
1003de05:	pop    ecx
1003de06:	ret    
1003de07:	cmp    ebp,0xfffffffa
1003de0a:	je     0x1003db5d
1003de10:	cmp    ebp,0xfffffff7
1003de13:	je     0x1003db5d
1003de19:	cmp    ebp,0xfffffff6
1003de1c:	je     0x1003db5d
1003de22:	cmp    ebp,0xffffffed
1003de25:	je     0x1003db5d
1003de2b:	cmp    ebp,0xffffffeb
1003de2e:	jmp    0x1003de9b
1003de30:	xor    eax,eax
1003de32:	pop    edi
1003de33:	cmp    ebp,0xfffffff9
1003de36:	pop    ebp
1003de37:	sete   al
1003de3a:	pop    ebx
1003de3b:	pop    ecx
1003de3c:	ret    
1003de3d:	cmp    ebp,0xfffffff8
1003de40:	jmp    0x1003de4e
1003de42:	cmp    ebp,0xfffffff8
1003de45:	je     0x1003db5d
1003de4b:	cmp    ebp,0xffffffee
1003de4e:	je     0x1003db5d
1003de54:	cmp    ebp,0xfffffff9
1003de57:	je     0x1003db5d
1003de5d:	cmp    ebp,0xfffffff5
1003de60:	jmp    0x1003de9b
1003de62:	xor    eax,eax
1003de64:	pop    edi
1003de65:	cmp    ebp,0xffffffed
1003de68:	pop    ebp
1003de69:	sete   al
1003de6c:	pop    ebx
1003de6d:	pop    ecx
1003de6e:	ret    
1003de6f:	cmp    ebp,0xffffffec
1003de72:	jmp    0x1003de4e
1003de74:	xor    eax,eax
1003de76:	pop    edi
1003de77:	cmp    ebp,0xffffffeb
1003de7a:	pop    ebp
1003de7b:	sete   al
1003de7e:	pop    ebx
1003de7f:	pop    ecx
1003de80:	ret    
1003de81:	cmp    ebp,0xfffffff6
1003de84:	je     0x1003db5d
1003de8a:	cmp    ebp,0xfffffff7
1003de8d:	jmp    0x1003de1c
1003de8f:	cmp    ebp,0xfffffff5
1003de92:	je     0x1003db5d
1003de98:	cmp    ebp,0xfffffff9
1003de9b:	je     0x1003db5d
1003dea1:	pop    edi
1003dea2:	pop    ebp
1003dea3:	xor    eax,eax
1003dea5:	pop    ebx
1003dea6:	pop    ecx
1003dea7:	ret    
1003dea8:	inc    edi
1003dea9:	fild   DWORD PTR [ebx]
1003deab:	adc    BYTE PTR [esi],dh
1003dead:	fild   DWORD PTR [ebx]
1003deaf:	adc    BYTE PTR [eax-0x25],bh
1003deb2:	add    edx,DWORD PTR [eax]
1003deb4:	fild   DWORD PTR [bp+di]
1003deb7:	adc    BYTE PTR [ecx-0x67effc25],ch
1003debd:	fild   DWORD PTR [ebx]
1003debf:	adc    cl,cl
1003dec1:	fild   DWORD PTR [ebx]
1003dec3:	adc    BYTE PTR [ebx],dh
1003dec5:	fadd   QWORD PTR [ebx]
1003dec7:	adc    bh,bl
1003dec9:	fiadd  DWORD PTR [ebx]
1003decb:	adc    ch,ch
1003decd:	fiadd  DWORD PTR [ebx]
1003decf:	adc    BYTE PTR [esi],cl
1003ded1:	fild   DWORD PTR [ebx]
1003ded3:	adc    BYTE PTR [ecx+0x1003de],ah
1003ded9:	add    DWORD PTR [edx],eax
1003dedb:	add    eax,DWORD PTR [eax*1+0xb0b0b0b]
1003dee2:	or     ecx,DWORD PTR [ebx]
1003dee4:	push   es
1003dee5:	push   es
1003dee6:	pop    es
1003dee7:	pop    es
1003dee8:	or     ecx,DWORD PTR [ebx]
1003deea:	or     ecx,DWORD PTR [ebx]
1003deec:	or     ecx,DWORD PTR [ebx]
1003deee:	or     BYTE PTR [ecx],cl
1003def0:	or     cl,BYTE PTR [ebp-0x21cfffb7]
1003def6:	add    edx,DWORD PTR [eax]
1003def8:	pop    es
1003def9:	fiadd  WORD PTR [ebx]
1003defb:	adc    BYTE PTR [edx+0x3d1003de],cl
1003df01:	fiadd  WORD PTR [ebx]
1003df03:	adc    BYTE PTR [edi-0x7eeffc22],cl
1003df09:	fiadd  WORD PTR [ebx]
1003df0b:	adc    BYTE PTR [edx-0x22],ah
1003df0e:	add    edx,DWORD PTR [eax]
1003df10:	inc    edx
1003df11:	fiadd  WORD PTR [ebx]
1003df13:	adc    BYTE PTR [esi+ebx*8+0x3],dh
1003df17:	adc    BYTE PTR [edi-0x22],ch
1003df1a:	add    edx,DWORD PTR [eax]
1003df1c:	(bad)  
1003df1d:	fadd   QWORD PTR [ebx]
1003df1f:	adc    BYTE PTR [ecx+0x1003de],ah
1003df25:	add    DWORD PTR [edx],eax
1003df27:	add    eax,DWORD PTR [eax*1+0xb0b0b0b]
1003df2e:	or     ecx,DWORD PTR [ebx]
1003df30:	push   es
1003df31:	pop    es
1003df32:	or     BYTE PTR [ecx],cl
1003df34:	or     ecx,DWORD PTR [ebx]
1003df36:	or     ecx,DWORD PTR [ebx]
1003df38:	or     ecx,DWORD PTR [ebx]
1003df3a:	or     cl,BYTE PTR [edx]
1003df3c:	(bad)  
1003df3d:	fadd   QWORD PTR [ebx]
1003df3f:	adc    BYTE PTR [ebx+0x11003dc],ch
1003df45:	fld    QWORD PTR [ebx]
1003df47:	adc    al,ch
1003df49:	fadd   QWORD PTR [ebx]
1003df4b:	adc    BYTE PTR [esi],bh
1003df4d:	fld    QWORD PTR [ebx]
1003df4f:	adc    BYTE PTR ds:0x621003dd,ah
1003df55:	fld    QWORD PTR [ebx]
1003df57:	adc    al,cl
1003df59:	fld    QWORD PTR [ebx]
1003df5b:	adc    BYTE PTR [ecx+0x1003de],ah
1003df61:	add    DWORD PTR [edx],eax
1003df63:	add    eax,DWORD PTR [eax*1+0x8080808]
1003df6a:	or     BYTE PTR [eax],cl
1003df6c:	push   es
1003df6d:	push   es
1003df6e:	pop    es
1003df6f:	pop    es
1003df70:	sub    esp,0xf0
1003df76:	mov    eax,ds:0x1007d030
1003df7b:	xor    eax,esp
1003df7d:	mov    DWORD PTR [esp+0xec],eax
1003df84:	push   ebx
1003df85:	push   ebp
1003df86:	push   esi
1003df87:	push   edi
1003df88:	mov    eax,DWORD PTR [esp+0x104]
1003df8f:	mov    DWORD PTR [esp+0xa8],eax
1003df96:	mov    eax,DWORD PTR [eax]
1003df98:	mov    DWORD PTR [esp+0x34],eax
1003df9c:	mov    DWORD PTR [esp+0x20],ecx
1003dfa0:	mov    ecx,DWORD PTR [esp+0x10c]
1003dfa7:	shr    eax,0x9
1003dfaa:	and    eax,0x1
1003dfad:	mov    DWORD PTR [esp+0xb4],ecx
1003dfb4:	mov    ecx,DWORD PTR [esp+0x110]
1003dfbb:	mov    DWORD PTR [esp+0xa4],eax
1003dfc2:	xor    eax,0x1
1003dfc5:	mov    DWORD PTR [esp+0xac],ecx
1003dfcc:	mov    ecx,DWORD PTR [esp+0x114]
1003dfd3:	mov    DWORD PTR [esp+0xa0],eax
1003dfda:	mov    eax,0xfffffffe
1003dfdf:	mov    DWORD PTR [esp+0x98],ecx
1003dfe6:	mov    ecx,DWORD PTR [esp+0x118]
1003dfed:	mov    DWORD PTR [esp+0x68],eax
1003dff1:	mov    DWORD PTR [esp+0x5c],eax
1003dff5:	mov    DWORD PTR [esp+0x4c],eax
1003dff9:	mov    DWORD PTR [esp+0x30],eax
1003dffd:	mov    eax,DWORD PTR [esp+0x34]
1003e001:	mov    esi,DWORD PTR [esp+0x108]
1003e008:	mov    DWORD PTR [esp+0x18],ecx
1003e00c:	mov    ecx,DWORD PTR [esp+0x11c]
1003e013:	mov    DWORD PTR [esp+0xb0],edx
1003e01a:	mov    edx,DWORD PTR [edx]
1003e01c:	xor    edi,edi
1003e01e:	xor    ebp,ebp
1003e020:	and    eax,0x1
1003e023:	mov    DWORD PTR [esp+0x38],ecx
1003e027:	mov    ecx,edx
1003e029:	mov    ebx,edx
1003e02b:	shl    eax,0x8
1003e02e:	mov    DWORD PTR [esp+0x9c],esi
1003e035:	mov    esi,DWORD PTR [esi]
1003e037:	mov    DWORD PTR [esp+0x48],edi
1003e03b:	mov    DWORD PTR [esp+0x40],edi
1003e03f:	mov    DWORD PTR [esp+0x94],edi
1003e046:	mov    DWORD PTR [esp+0x6c],edi
1003e04a:	mov    DWORD PTR [esp+0x14],edx
1003e04e:	mov    DWORD PTR [esp+0x80],ecx
1003e055:	mov    DWORD PTR [esp+0xb8],ebx
1003e05c:	mov    DWORD PTR [esp+0x50],edi
1003e060:	mov    DWORD PTR [esp+0x88],edi
1003e067:	mov    DWORD PTR [esp+0x2c],ebp
1003e06b:	mov    DWORD PTR [esp+0x74],edi
1003e06f:	mov    DWORD PTR [esp+0x64],edi
1003e073:	mov    DWORD PTR [esp+0x84],eax
1003e07a:	cmp    DWORD PTR [esp+0x38],0x0
1003e07f:	mov    DWORD PTR [esp+0x10],esi
1003e083:	movzx  eax,BYTE PTR [esi]
1003e086:	mov    DWORD PTR [esp+0x1c],eax
1003e08a:	mov    eax,DWORD PTR [esp+0x18]
1003e08e:	je     0x1003e11f
1003e094:	mov    eax,DWORD PTR [eax+0x10]
1003e097:	add    eax,0x1000
1003e09c:	cmp    edx,eax
1003e09e:	ja     0x10040829
1003e0a4:	cmp    edx,ecx
1003e0a6:	jae    0x1003e0ae
1003e0a8:	mov    DWORD PTR [esp+0x14],ecx
1003e0ac:	mov    edx,ecx
1003e0ae:	mov    eax,DWORD PTR [esp+0x38]
1003e0b2:	mov    eax,DWORD PTR [eax]
1003e0b4:	sub    edx,ecx
1003e0b6:	mov    ecx,0x7fffffeb
1003e0bb:	sub    ecx,eax
1003e0bd:	cmp    ecx,edx
1003e0bf:	jl     0x10040838
1003e0c5:	sub    eax,DWORD PTR [esp+0x80]
1003e0cc:	mov    edx,DWORD PTR [esp+0x14]
1003e0d0:	mov    ecx,DWORD PTR [esp+0x38]
1003e0d4:	add    eax,edx
1003e0d6:	test   ebp,ebp
1003e0d8:	mov    DWORD PTR [ecx],eax
1003e0da:	je     0x1003e110
1003e0dc:	cmp    ebp,ebx
1003e0de:	jbe    0x1003e116
1003e0e0:	mov    esi,edx
1003e0e2:	sub    edx,ebp
1003e0e4:	push   edx
1003e0e5:	push   ebp
1003e0e6:	push   ebx
1003e0e7:	call   0x10044410
1003e0ec:	mov    eax,ebx
1003e0ee:	sub    eax,ebp
1003e0f0:	add    esp,0xc
1003e0f3:	add    esi,eax
1003e0f5:	mov    DWORD PTR [esp+0x14],esi
1003e0f9:	mov    edx,DWORD PTR [esp+0x14]
1003e0fd:	mov    esi,DWORD PTR [esp+0x10]
1003e101:	mov    ebp,ebx
1003e103:	mov    DWORD PTR [esp+0x2c],ebp
1003e107:	mov    DWORD PTR [esp+0x80],edx
1003e10e:	jmp    0x1003e131
1003e110:	mov    DWORD PTR [esp+0x14],ebx
1003e114:	mov    edx,ebx
1003e116:	mov    DWORD PTR [esp+0x80],edx
1003e11d:	jmp    0x1003e131
1003e11f:	mov    ecx,DWORD PTR [eax+0x10]
1003e122:	add    ecx,0x1000
1003e128:	cmp    DWORD PTR [eax+0x20],ecx
1003e12b:	ja     0x10040847
1003e131:	cmp    DWORD PTR [esp+0x50],0x0
1003e136:	mov    ecx,DWORD PTR [esp+0x1c]
1003e13a:	je     0x1003e217
1003e140:	test   ecx,ecx
1003e142:	je     0x1003e217
1003e148:	cmp    ecx,0x5c
1003e14b:	jne    0x1003e163
1003e14d:	cmp    BYTE PTR [esi+0x1],0x45
1003e151:	jne    0x1003e163
1003e153:	mov    DWORD PTR [esp+0x50],0x0
1003e15b:	add    esi,0x1
1003e15e:	jmp    0x10040807
1003e163:	test   edi,edi
1003e165:	je     0x1003e198
1003e167:	cmp    DWORD PTR [esp+0x38],0x0
1003e16c:	jne    0x1003e190
1003e16e:	xor    ebx,ebx
1003e170:	mov    bh,BYTE PTR [edi+0x2]
1003e173:	mov    eax,esi
1003e175:	mov    esi,DWORD PTR [esp+0x18]
1003e179:	mov    bl,BYTE PTR [edi+0x3]
1003e17c:	sub    eax,ebx
1003e17e:	sub    eax,DWORD PTR [esi+0x18]
1003e181:	mov    ebx,eax
1003e183:	sar    ebx,0x8
1003e186:	mov    BYTE PTR [edi+0x4],bl
1003e189:	mov    BYTE PTR [edi+0x5],al
1003e18c:	mov    esi,DWORD PTR [esp+0x10]
1003e190:	mov    DWORD PTR [esp+0x74],0x0
1003e198:	test   DWORD PTR [esp+0x34],0x4000
1003e1a0:	je     0x1003e1dc
1003e1a2:	mov    BYTE PTR [edx],0x53
1003e1a5:	mov    BYTE PTR [edx+0x1],0xff
1003e1a9:	mov    ecx,esi
1003e1ab:	mov    esi,DWORD PTR [esp+0x18]
1003e1af:	lea    eax,[edx+0x1]
1003e1b2:	mov    DWORD PTR [esp+0x74],edx
1003e1b6:	mov    edx,ecx
1003e1b8:	sub    edx,DWORD PTR [esi+0x18]
1003e1bb:	add    eax,0x1
1003e1be:	sar    edx,0x8
1003e1c1:	mov    BYTE PTR [eax],dl
1003e1c3:	sub    cl,BYTE PTR [esi+0x18]
1003e1c6:	mov    BYTE PTR [eax+0x2],0x0
1003e1ca:	mov    BYTE PTR [eax+0x1],cl
1003e1cd:	mov    ecx,DWORD PTR [esp+0x1c]
1003e1d1:	mov    BYTE PTR [eax+0x3],0x0
1003e1d5:	add    eax,0x4
1003e1d8:	mov    DWORD PTR [esp+0x14],eax
1003e1dc:	mov    al,cl
1003e1de:	mov    dl,BYTE PTR [esp+0x34]
1003e1e2:	mov    ecx,DWORD PTR [esp+0x14]
1003e1e6:	and    dl,0x1
1003e1e9:	or     dl,0x1c
1003e1ec:	mov    BYTE PTR [ecx],dl
1003e1ee:	mov    DWORD PTR [esp+0x2c],ecx
1003e1f2:	add    ecx,0x1
1003e1f5:	mov    BYTE PTR [ecx],al
1003e1f7:	add    ecx,0x1
1003e1fa:	cmp    al,0xd
1003e1fc:	mov    DWORD PTR [esp+0x14],ecx
1003e200:	je     0x1003e20a
1003e202:	cmp    al,0xa
1003e204:	jne    0x100407b8
1003e20a:	mov    edx,DWORD PTR [esp+0x18]
1003e20e:	or     DWORD PTR [edx+0x44],0x20
1003e212:	jmp    0x100407bc
1003e217:	cmp    ecx,0x2a
1003e21a:	je     0x1003e291
1003e21c:	cmp    ecx,0x2b
1003e21f:	je     0x1003e291
1003e221:	cmp    ecx,0x3f
1003e224:	je     0x1003e291
1003e226:	cmp    ecx,0x7b
1003e229:	jne    0x1003e23b
1003e22b:	lea    eax,[esi+0x1]
1003e22e:	call   0x1003cea0
1003e233:	test   eax,eax
1003e235:	mov    ecx,DWORD PTR [esp+0x1c]
1003e239:	jne    0x1003e291
1003e23b:	test   edi,edi
1003e23d:	mov    DWORD PTR [esp+0x28],0x0
1003e245:	je     0x1003e299
1003e247:	mov    eax,DWORD PTR [esp+0x94]
1003e24e:	mov    edx,eax
1003e250:	sub    eax,0x1
1003e253:	test   edx,edx
1003e255:	mov    DWORD PTR [esp+0x94],eax
1003e25c:	jg     0x1003e299
1003e25e:	cmp    DWORD PTR [esp+0x38],0x0
1003e263:	mov    ebx,DWORD PTR [esp+0x18]
1003e267:	jne    0x1003e287
1003e269:	xor    edx,edx
1003e26b:	mov    dh,BYTE PTR [edi+0x2]
1003e26e:	mov    eax,esi
1003e270:	mov    dl,BYTE PTR [edi+0x3]
1003e273:	sub    eax,edx
1003e275:	sub    eax,DWORD PTR [ebx+0x18]
1003e278:	mov    edx,eax
1003e27a:	sar    edx,0x8
1003e27d:	mov    BYTE PTR [edi+0x4],dl
1003e280:	mov    BYTE PTR [edi+0x5],al
1003e283:	mov    esi,DWORD PTR [esp+0x10]
1003e287:	mov    DWORD PTR [esp+0x74],0x0
1003e28f:	jmp    0x1003e29d
1003e291:	mov    DWORD PTR [esp+0x28],0x1
1003e299:	mov    ebx,DWORD PTR [esp+0x18]
1003e29d:	test   BYTE PTR [esp+0x34],0x8
1003e2a2:	je     0x1003e322
1003e2a4:	mov    eax,DWORD PTR [ebx+0xc]
1003e2a7:	test   BYTE PTR [ecx+eax*1],0x1
1003e2ab:	jne    0x10040807
1003e2b1:	cmp    ecx,0x23
1003e2b4:	mov    ebx,DWORD PTR [esp+0x18]
1003e2b8:	jne    0x1003e31e
1003e2ba:	add    esi,0x1
1003e2bd:	mov    DWORD PTR [esp+0x10],esi
1003e2c1:	mov    al,BYTE PTR [esi]
1003e2c3:	test   al,al
1003e2c5:	je     0x1003e312
1003e2c7:	jmp    0x1003e2d0
1003e2c9:	lea    esp,[esp+0x0]
1003e2d0:	mov    ecx,DWORD PTR [ebx+0x50]
1003e2d3:	test   ecx,ecx
1003e2d5:	je     0x1003e388
1003e2db:	mov    eax,DWORD PTR [ebx+0x1c]
1003e2de:	cmp    esi,eax
1003e2e0:	jae    0x1003e3ae
1003e2e6:	push   ecx
1003e2e7:	lea    edi,[ebx+0x54]
1003e2ea:	xor    edx,edx
1003e2ec:	mov    ecx,esi
1003e2ee:	call   0x10041aa0
1003e2f3:	add    esp,0x4
1003e2f6:	test   eax,eax
1003e2f8:	je     0x1003e3ae
1003e2fe:	mov    ecx,DWORD PTR [ebx+0x54]
1003e301:	lea    esi,[esi+ecx*1-0x1]
1003e305:	mov    DWORD PTR [esp+0x10],esi
1003e309:	cmp    BYTE PTR [esi],0x0
1003e30c:	jne    0x10040807
1003e312:	mov    DWORD PTR [esp+0x1c],0x0
1003e31a:	mov    ecx,DWORD PTR [esp+0x1c]
1003e31e:	mov    ebp,DWORD PTR [esp+0x2c]
1003e322:	test   DWORD PTR [esp+0x34],0x4000
1003e32a:	je     0x1003e371
1003e32c:	cmp    DWORD PTR [esp+0x28],0x0
1003e331:	jne    0x1003e371
1003e333:	mov    eax,DWORD PTR [esp+0x14]
1003e337:	mov    BYTE PTR [eax],0x53
1003e33a:	mov    BYTE PTR [eax+0x1],0xff
1003e33e:	mov    ecx,esi
1003e340:	mov    DWORD PTR [esp+0x74],eax
1003e344:	add    eax,0x1
1003e347:	mov    edx,ecx
1003e349:	sub    edx,DWORD PTR [ebx+0x18]
1003e34c:	add    eax,0x1
1003e34f:	sar    edx,0x8
1003e352:	mov    BYTE PTR [eax],dl
1003e354:	sub    cl,BYTE PTR [ebx+0x18]
1003e357:	mov    BYTE PTR [eax+0x2],0x0
1003e35b:	mov    BYTE PTR [eax+0x1],cl
1003e35e:	mov    ecx,DWORD PTR [esp+0x1c]
1003e362:	mov    BYTE PTR [eax+0x3],0x0
1003e366:	mov    esi,DWORD PTR [esp+0x10]
1003e36a:	add    eax,0x4
1003e36d:	mov    DWORD PTR [esp+0x14],eax
1003e371:	cmp    ecx,0x7c
1003e374:	ja     0x1003e1dc
1003e37a:	movzx  eax,BYTE PTR [ecx+0x10040b00]
1003e381:	jmp    DWORD PTR [eax*4+0x10040acc]
1003e388:	mov    ecx,DWORD PTR [ebx+0x54]
1003e38b:	mov    edx,DWORD PTR [ebx+0x1c]
1003e38e:	sub    edx,ecx
1003e390:	cmp    esi,edx
1003e392:	ja     0x1003e3ae
1003e394:	cmp    al,BYTE PTR [ebx+0x58]
1003e397:	jne    0x1003e3ae
1003e399:	cmp    ecx,0x1
1003e39c:	je     0x1003e2fe
1003e3a2:	mov    al,BYTE PTR [esi+0x1]
1003e3a5:	cmp    al,BYTE PTR [ebx+0x59]
1003e3a8:	je     0x1003e2fe
1003e3ae:	add    esi,0x1
1003e3b1:	mov    DWORD PTR [esp+0x10],esi
1003e3b5:	mov    al,BYTE PTR [esi]
1003e3b7:	test   al,al
1003e3b9:	jne    0x1003e2d0
1003e3bf:	jmp    0x1003e312
1003e3c4:	test   BYTE PTR [esp+0x34],0x2
1003e3c9:	je     0x1003e3da
1003e3cb:	cmp    DWORD PTR [esp+0x30],0xfffffffe
1003e3d0:	jne    0x1003e3da
1003e3d2:	mov    DWORD PTR [esp+0x30],0xffffffff
1003e3da:	mov    eax,DWORD PTR [esp+0x14]
1003e3de:	mov    BYTE PTR [eax],0x1a
1003e3e1:	add    eax,0x1
1003e3e4:	mov    DWORD PTR [esp+0x2c],0x0
1003e3ec:	mov    DWORD PTR [esp+0x14],eax
1003e3f0:	jmp    0x10040803
1003e3f5:	mov    eax,DWORD PTR [esp+0x14]
1003e3f9:	mov    BYTE PTR [eax],0x1b
1003e3fc:	add    eax,0x1
1003e3ff:	mov    DWORD PTR [esp+0x2c],0x0
1003e407:	mov    DWORD PTR [esp+0x14],eax
1003e40b:	jmp    0x10040803
1003e410:	mov    eax,DWORD PTR [esp+0x30]
1003e414:	cmp    eax,0xfffffffe
1003e417:	jne    0x1003e420
1003e419:	or     eax,0xffffffff
1003e41c:	mov    DWORD PTR [esp+0x30],eax
1003e420:	mov    edx,DWORD PTR [esp+0x34]
1003e424:	mov    ecx,DWORD PTR [esp+0x4c]
1003e428:	shr    edx,0x2
1003e42b:	and    dl,0x1
1003e42e:	mov    DWORD PTR [esp+0x5c],eax
1003e432:	mov    eax,DWORD PTR [esp+0x14]
1003e436:	or     dl,0xc
1003e439:	mov    DWORD PTR [esp+0x2c],eax
1003e43d:	mov    BYTE PTR [eax],dl
1003e43f:	add    eax,0x1
1003e442:	mov    DWORD PTR [esp+0x68],ecx
1003e446:	mov    DWORD PTR [esp+0x14],eax
1003e44a:	jmp    0x10040803
1003e44f:	mov    eax,DWORD PTR [esp+0x18]
1003e453:	test   DWORD PTR [eax+0x40],0x2000000
1003e45a:	je     0x1003e1dc
1003e460:	mov    ecx,DWORD PTR [esp+0x20]
1003e464:	mov    DWORD PTR [ecx],0x40
1003e46a:	jmp    0x1003f77d
1003e46f:	mov    al,BYTE PTR [esi+0x1]
1003e472:	cmp    al,0x3a
1003e474:	mov    ebx,DWORD PTR [esp+0x14]
1003e478:	mov    DWORD PTR [esp+0x2c],ebx
1003e47c:	je     0x1003e486
1003e47e:	cmp    al,0x2e
1003e480:	je     0x1003e486
1003e482:	cmp    al,0x3d
1003e484:	jne    0x1003e49d
1003e486:	lea    ecx,[esp+0x7c]
1003e48a:	push   ecx
1003e48b:	mov    eax,esi
1003e48d:	call   0x1003d7d0
1003e492:	add    esp,0x4
1003e495:	test   eax,eax
1003e497:	jne    0x100408b6
1003e49d:	mov    DWORD PTR [esp+0x1c],0x0
1003e4a5:	mov    ebp,0x1
1003e4aa:	lea    ebx,[ebx+0x0]
1003e4b0:	add    esi,ebp
1003e4b2:	mov    DWORD PTR [esp+0x10],esi
1003e4b6:	movzx  edi,BYTE PTR [esi]
1003e4b9:	cmp    edi,0x5c
1003e4bc:	jne    0x1003e4e2
1003e4be:	add    esi,ebp
1003e4c0:	cmp    BYTE PTR [esi],0x45
1003e4c3:	je     0x1003e4b0
1003e4c5:	push   0x3
1003e4c7:	push   0x10072ccc
1003e4cc:	push   esi
1003e4cd:	call   0x1004b5b6
1003e4d2:	mov    esi,DWORD PTR [esp+0x1c]
1003e4d6:	add    esp,0xc
1003e4d9:	test   eax,eax
1003e4db:	jne    0x1003e530
1003e4dd:	add    esi,0x3
1003e4e0:	jmp    0x1003e4b0
1003e4e2:	mov    eax,DWORD PTR [esp+0x1c]
1003e4e6:	test   eax,eax
1003e4e8:	jne    0x1003e4f5
1003e4ea:	cmp    edi,0x5e
1003e4ed:	jne    0x1003e4f5
1003e4ef:	mov    DWORD PTR [esp+0x1c],ebp
1003e4f3:	jmp    0x1003e4b0
1003e4f5:	cmp    edi,0x5d
1003e4f8:	jne    0x1003e530
1003e4fa:	mov    edx,DWORD PTR [esp+0x18]
1003e4fe:	test   DWORD PTR [edx+0x40],0x2000000
1003e505:	je     0x1003e530
1003e507:	neg    eax
1003e509:	sbb    al,al
1003e50b:	and    al,0xa0
1003e50d:	add    al,0x6d
1003e50f:	mov    BYTE PTR [ebx],al
1003e511:	mov    eax,DWORD PTR [esp+0x30]
1003e515:	add    ebx,ebp
1003e517:	cmp    eax,0xfffffffe
1003e51a:	mov    DWORD PTR [esp+0x14],ebx
1003e51e:	jne    0x1003e527
1003e520:	or     eax,0xffffffff
1003e523:	mov    DWORD PTR [esp+0x30],eax
1003e527:	mov    DWORD PTR [esp+0x5c],eax
1003e52b:	jmp    0x10040803
1003e530:	xor    eax,eax
1003e532:	cmp    edi,eax
1003e534:	mov    DWORD PTR [esp+0x3c],eax
1003e538:	mov    DWORD PTR [esp+0x24],eax
1003e53c:	mov    DWORD PTR [esp+0x28],0xffffffff
1003e544:	mov    DWORD PTR [esp+0xbc],eax
1003e54b:	mov    DWORD PTR [esp+0xc0],eax
1003e552:	mov    DWORD PTR [esp+0xc4],eax
1003e559:	mov    DWORD PTR [esp+0xc8],eax
1003e560:	mov    DWORD PTR [esp+0xcc],eax
1003e567:	mov    DWORD PTR [esp+0xd0],eax
1003e56e:	mov    DWORD PTR [esp+0xd4],eax
1003e575:	mov    DWORD PTR [esp+0xd8],eax
1003e57c:	je     0x10040909
1003e582:	cmp    DWORD PTR [esp+0x50],0x0
1003e587:	je     0x1003e5ac
1003e589:	cmp    edi,0x5c
1003e58c:	jne    0x1003ea78
1003e592:	cmp    BYTE PTR [esi+0x1],0x45
1003e596:	jne    0x1003ea78
1003e59c:	mov    DWORD PTR [esp+0x50],0x0
1003e5a4:	add    esi,0x1
1003e5a7:	jmp    0x1003e809
1003e5ac:	cmp    edi,0x5b
1003e5af:	jne    0x1003e72a
1003e5b5:	mov    bl,BYTE PTR [esi+0x1]
1003e5b8:	cmp    bl,0x3a
1003e5bb:	je     0x1003e5cb
1003e5bd:	cmp    bl,0x2e
1003e5c0:	je     0x1003e5cb
1003e5c2:	cmp    bl,0x3d
1003e5c5:	jne    0x1003ea78
1003e5cb:	lea    eax,[esp+0x7c]
1003e5cf:	push   eax
1003e5d0:	mov    eax,esi
1003e5d2:	call   0x1003d7d0
1003e5d7:	add    esp,0x4
1003e5da:	test   eax,eax
1003e5dc:	je     0x1003ea78
1003e5e2:	cmp    bl,0x3a
1003e5e5:	mov    ecx,DWORD PTR [esp+0x18]
1003e5e9:	mov    ebp,DWORD PTR [ecx+0x8]
1003e5ec:	mov    DWORD PTR [esp+0x58],0x0
1003e5f4:	jne    0x100408d1
1003e5fa:	add    esi,0x2
1003e5fd:	mov    DWORD PTR [esp+0x10],esi
1003e601:	cmp    BYTE PTR [esi],0x5e
1003e604:	jne    0x1003e619
1003e606:	mov    eax,0x1
1003e60b:	add    esi,eax
1003e60d:	mov    DWORD PTR [esp+0x58],eax
1003e611:	mov    DWORD PTR [esp+0x3c],eax
1003e615:	mov    DWORD PTR [esp+0x10],esi
1003e619:	mov    ebx,DWORD PTR [esp+0x7c]
1003e61d:	sub    ebx,esi
1003e61f:	push   esi
1003e620:	call   0x1003d820
1003e625:	add    esp,0x4
1003e628:	test   eax,eax
1003e62a:	jl     0x100408e0
1003e630:	test   BYTE PTR [esp+0x34],0x1
1003e635:	je     0x1003e63e
1003e637:	cmp    eax,0x2
1003e63a:	jg     0x1003e63e
1003e63c:	xor    eax,eax
1003e63e:	lea    eax,[eax+eax*2]
1003e641:	mov    esi,DWORD PTR [eax*4+0x1006d690]
1003e648:	add    esi,ebp
1003e64a:	mov    ecx,0x8
1003e64f:	lea    edi,[esp+0xdc]
1003e656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1003e658:	mov    ecx,DWORD PTR [eax*4+0x1006d694]
1003e65f:	test   ecx,ecx
1003e661:	mov    esi,DWORD PTR [eax*4+0x1006d698]
1003e668:	jl     0x1003e6a4
1003e66a:	xor    eax,eax
1003e66c:	add    ecx,ebp
1003e66e:	test   esi,esi
1003e670:	jl     0x1003e690
1003e672:	mov    dl,BYTE PTR [ecx+eax*1]
1003e675:	or     BYTE PTR [esp+eax*1+0xdc],dl
1003e67c:	add    eax,0x1
1003e67f:	cmp    eax,0x20
1003e682:	jl     0x1003e672
1003e684:	jmp    0x1003e6a4
1003e686:	jmp    0x1003e690
1003e688:	lea    esp,[esp+0x0]
1003e68f:	nop
1003e690:	mov    dl,BYTE PTR [ecx+eax*1]
1003e693:	not    dl
1003e695:	and    BYTE PTR [esp+eax*1+0xdc],dl
1003e69c:	add    eax,0x1
1003e69f:	cmp    eax,0x20
1003e6a2:	jl     0x1003e690
1003e6a4:	test   esi,esi
1003e6a6:	jge    0x1003e6aa
1003e6a8:	neg    esi
1003e6aa:	cmp    esi,0x1
1003e6ad:	jne    0x1003e6b9
1003e6af:	and    BYTE PTR [esp+0xdd],0xc3
1003e6b7:	jmp    0x1003e6c6
1003e6b9:	cmp    esi,0x2
1003e6bc:	jne    0x1003e6c6
1003e6be:	and    BYTE PTR [esp+0xe7],0x7f
1003e6c6:	xor    eax,eax
1003e6c8:	cmp    DWORD PTR [esp+0x58],eax
1003e6cc:	je     0x1003e700
1003e6ce:	mov    edi,edi
1003e6d0:	mov    cl,BYTE PTR [esp+eax*1+0xdc]
1003e6d7:	not    cl
1003e6d9:	or     BYTE PTR [esp+eax*1+0xbc],cl
1003e6e0:	add    eax,0x1
1003e6e3:	cmp    eax,0x20
1003e6e6:	jl     0x1003e6d0
1003e6e8:	mov    esi,DWORD PTR [esp+0x7c]
1003e6ec:	add    esi,0x1
1003e6ef:	mov    DWORD PTR [esp+0x24],0xa
1003e6f7:	jmp    0x1003e809
1003e6fc:	lea    esp,[esp+0x0]
1003e700:	mov    dl,BYTE PTR [esp+eax*1+0xdc]
1003e707:	or     BYTE PTR [esp+eax*1+0xbc],dl
1003e70e:	add    eax,0x1
1003e711:	cmp    eax,0x20
1003e714:	jl     0x1003e700
1003e716:	mov    esi,DWORD PTR [esp+0x7c]
1003e71a:	add    esi,0x1
1003e71d:	mov    DWORD PTR [esp+0x24],0xa
1003e725:	jmp    0x1003e809
1003e72a:	cmp    edi,0x5c
1003e72d:	jne    0x1003ea78
1003e733:	mov    ebp,DWORD PTR [esp+0x18]
1003e737:	mov    eax,DWORD PTR [ebp+0x30]
1003e73a:	mov    esi,DWORD PTR [esp+0x20]
1003e73e:	mov    ebx,DWORD PTR [esp+0x34]
1003e742:	push   0x1
1003e744:	push   eax
1003e745:	lea    ecx,[esp+0x18]
1003e749:	push   esi
1003e74a:	push   ecx
1003e74b:	mov    eax,ebx
1003e74d:	call   0x1003ca70
1003e752:	add    esp,0x10
1003e755:	cmp    DWORD PTR [esi],0x0
1003e758:	mov    edi,eax
1003e75a:	jne    0x1003f779
1003e760:	mov    ecx,edi
1003e762:	neg    ecx
1003e764:	cmp    ecx,0x5
1003e767:	jne    0x1003e777
1003e769:	mov    edi,0x8
1003e76e:	mov    esi,DWORD PTR [esp+0x10]
1003e772:	jmp    0x1003ea7c
1003e777:	cmp    ecx,0x16
1003e77a:	jne    0x1003e78a
1003e77c:	mov    esi,DWORD PTR [esp+0x10]
1003e780:	mov    edi,0x58
1003e785:	jmp    0x1003ea7c
1003e78a:	cmp    ecx,0x11
1003e78d:	jne    0x1003e79d
1003e78f:	mov    esi,DWORD PTR [esp+0x10]
1003e793:	mov    edi,0x52
1003e798:	jmp    0x1003ea7c
1003e79d:	cmp    ecx,0x1a
1003e7a0:	jne    0x1003e7c1
1003e7a2:	mov    esi,DWORD PTR [esp+0x10]
1003e7a6:	cmp    BYTE PTR [esi+0x1],0x5c
1003e7aa:	jne    0x1003e7b7
1003e7ac:	cmp    BYTE PTR [esi+0x2],0x45
1003e7b0:	jne    0x1003e7b7
1003e7b2:	add    esi,0x2
1003e7b5:	jmp    0x1003e809
1003e7b7:	mov    DWORD PTR [esp+0x50],0x1
1003e7bf:	jmp    0x1003e809
1003e7c1:	cmp    ecx,0x19
1003e7c4:	je     0x1003e805
1003e7c6:	test   edi,edi
1003e7c8:	jge    0x1003e76e
1003e7ca:	add    DWORD PTR [esp+0x24],0x2
1003e7cf:	cmp    DWORD PTR [esp+0x38],0x0
1003e7d4:	mov    eax,DWORD PTR [ebp+0x8]
1003e7d7:	jne    0x1003e973
1003e7dd:	lea    edx,[ecx-0x6]
1003e7e0:	cmp    edx,0x5
1003e7e3:	ja     0x1003e9a9
1003e7e9:	jmp    DWORD PTR [edx*4+0x10040b80]
1003e7f0:	xor    ecx,ecx
1003e7f2:	mov    dl,BYTE PTR [eax+ecx*1+0x40]
1003e7f6:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003e7fd:	add    ecx,0x1
1003e800:	cmp    ecx,0x20
1003e803:	jl     0x1003e7f2
1003e805:	mov    esi,DWORD PTR [esp+0x10]
1003e809:	add    esi,0x1
1003e80c:	mov    DWORD PTR [esp+0x10],esi
1003e810:	movzx  edi,BYTE PTR [esi]
1003e813:	test   edi,edi
1003e815:	je     0x10040909
1003e81b:	cmp    edi,0x5d
1003e81e:	jne    0x1003e582
1003e824:	cmp    DWORD PTR [esp+0x50],0x0
1003e829:	jne    0x1003e589
1003e82f:	cmp    DWORD PTR [esp+0x24],0x1
1003e834:	jne    0x1003ecb4
1003e83a:	cmp    DWORD PTR [esp+0x1c],0x0
1003e83f:	mov    eax,DWORD PTR [esp+0x4c]
1003e843:	mov    DWORD PTR [esp+0x68],eax
1003e847:	je     0x1003ecab
1003e84d:	mov    eax,DWORD PTR [esp+0x30]
1003e851:	cmp    eax,0xfffffffe
1003e854:	jne    0x1003e85d
1003e856:	or     eax,0xffffffff
1003e859:	mov    DWORD PTR [esp+0x30],eax
1003e85d:	mov    cl,BYTE PTR [esp+0x28]
1003e861:	mov    DWORD PTR [esp+0x5c],eax
1003e865:	mov    eax,DWORD PTR [esp+0x14]
1003e869:	mov    BYTE PTR [eax],0x1e
1003e86c:	add    eax,0x1
1003e86f:	mov    BYTE PTR [eax],cl
1003e871:	add    eax,0x1
1003e874:	mov    DWORD PTR [esp+0x14],eax
1003e878:	jmp    0x10040803
1003e87d:	mov    DWORD PTR [esp+0x3c],0x1
1003e885:	xor    ecx,ecx
1003e887:	jmp    0x1003e890
1003e889:	lea    esp,[esp+0x0]
1003e890:	mov    dl,BYTE PTR [eax+ecx*1+0x40]
1003e894:	not    dl
1003e896:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003e89d:	add    ecx,0x1
1003e8a0:	cmp    ecx,0x20
1003e8a3:	jl     0x1003e890
1003e8a5:	jmp    0x1003e805
1003e8aa:	xor    ecx,ecx
1003e8ac:	lea    esp,[esp+0x0]
1003e8b0:	mov    dl,BYTE PTR [eax+ecx*1+0xa0]
1003e8b7:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003e8be:	add    ecx,0x1
1003e8c1:	cmp    ecx,0x20
1003e8c4:	jl     0x1003e8b0
1003e8c6:	jmp    0x1003e805
1003e8cb:	mov    DWORD PTR [esp+0x3c],0x1
1003e8d3:	xor    ecx,ecx
1003e8d5:	jmp    0x1003e8e0
1003e8d7:	lea    esp,[esp+0x0]
1003e8de:	mov    edi,edi
1003e8e0:	mov    dl,BYTE PTR [eax+ecx*1+0xa0]
1003e8e7:	not    dl
1003e8e9:	or     BYTE PTR [esp+ecx*1+0xbc],dl
1003e8f0:	add    ecx,0x1
1003e8f3:	cmp    ecx,0x20
1003e8f6:	jl     0x1003e8e0
1003e8f8:	jmp    0x1003e805
1003e8fd:	mov    esi,eax
1003e8ff:	lea    eax,[esp+0xbc]
1003e906:	xor    edx,edx
1003e908:	sub    esi,eax
1003e90a:	lea    ebx,[ebx+0x0]
1003e910:	lea    ecx,[esp+edx*1+0xbc]
1003e917:	mov    al,BYTE PTR [esi+ecx*1]
1003e91a:	or     BYTE PTR [ecx],al
1003e91c:	add    edx,0x1
1003e91f:	cmp    edx,0x20
1003e922:	jl     0x1003e910
1003e924:	and    BYTE PTR [esp+0xbd],0xf7
1003e92c:	jmp    0x1003e805
1003e931:	mov    esi,eax
1003e933:	lea    ecx,[esp+0xbc]
1003e93a:	xor    edx,edx
1003e93c:	mov    DWORD PTR [esp+0x3c],0x1
1003e944:	sub    esi,ecx
1003e946:	jmp    0x1003e950
1003e948:	lea    esp,[esp+0x0]
1003e94f:	nop
1003e950:	lea    ecx,[esp+edx*1+0xbc]
1003e957:	mov    al,BYTE PTR [esi+ecx*1]
1003e95a:	not    al
1003e95c:	or     BYTE PTR [ecx],al
1003e95e:	add    edx,0x1
1003e961:	cmp    edx,0x20
1003e964:	jl     0x1003e950
1003e966:	or     BYTE PTR [esp+0xbd],0x8
1003e96e:	jmp    0x1003e805
1003e973:	cmp    edi,0xfffffff9
1003e976:	je     0x1003e805
1003e97c:	cmp    edi,0xfffffffa
1003e97f:	je     0x1003e805
1003e985:	cmp    edi,0xfffffff5
1003e988:	je     0x1003e805
1003e98e:	cmp    edi,0xfffffff6
1003e991:	je     0x1003e805
1003e997:	cmp    edi,0xfffffff7
1003e99a:	je     0x1003e805
1003e9a0:	cmp    edi,0xfffffff8
1003e9a3:	je     0x1003e805
1003e9a9:	cmp    ecx,0x13
1003e9ac:	jne    0x1003e9cb
1003e9ae:	or     BYTE PTR [esp+0xbd],0x2
1003e9b6:	or     BYTE PTR [esp+0xc0],0x1
1003e9be:	or     BYTE PTR [esp+0xd0],0x1
1003e9c6:	jmp    0x1003e805
1003e9cb:	cmp    ecx,0x12
1003e9ce:	jne    0x1003ea08
1003e9d0:	xor    eax,eax
1003e9d2:	mov    ecx,eax
1003e9d4:	sub    ecx,0x1
1003e9d7:	mov    edx,0xff
1003e9dc:	je     0x1003e9ef
1003e9de:	sub    ecx,0x3
1003e9e1:	je     0x1003e9e8
1003e9e3:	sub    ecx,0x10
1003e9e6:	jne    0x1003e9f4
1003e9e8:	mov    edx,0xfe
1003e9ed:	jmp    0x1003e9f4
1003e9ef:	mov    edx,0xfd
1003e9f4:	or     BYTE PTR [esp+eax*1+0xbc],dl
1003e9fb:	add    eax,0x1
1003e9fe:	cmp    eax,0x20
1003ea01:	jl     0x1003e9d2
1003ea03:	jmp    0x1003e805
1003ea08:	cmp    ecx,0x15
1003ea0b:	jne    0x1003ea22
1003ea0d:	or     BYTE PTR [esp+0xbd],0x3c
1003ea15:	or     BYTE PTR [esp+0xcc],0x20
1003ea1d:	jmp    0x1003e805
1003ea22:	cmp    ecx,0x14
1003ea25:	jne    0x1003ea61
1003ea27:	xor    eax,eax
1003ea29:	lea    esp,[esp+0x0]
1003ea30:	mov    ecx,eax
1003ea32:	sub    ecx,0x1
1003ea35:	mov    edx,0xff
1003ea3a:	je     0x1003ea48
1003ea3c:	sub    ecx,0xf
1003ea3f:	jne    0x1003ea4d
1003ea41:	mov    edx,0xdf
1003ea46:	jmp    0x1003ea4d
1003ea48:	mov    edx,0xc3
1003ea4d:	or     BYTE PTR [esp+eax*1+0xbc],dl
1003ea54:	add    eax,0x1
1003ea57:	cmp    eax,0x20
1003ea5a:	jl     0x1003ea30
1003ea5c:	jmp    0x1003e805
1003ea61:	test   bl,0x40
1003ea64:	jne    0x100408ef
1003ea6a:	mov    esi,DWORD PTR [esp+0x10]
1003ea6e:	sub    DWORD PTR [esp+0x24],0x2
1003ea73:	movzx  edi,BYTE PTR [esi]
1003ea76:	jmp    0x1003ea7c
1003ea78:	mov    ebp,DWORD PTR [esp+0x18]
1003ea7c:	cmp    BYTE PTR [esi+0x1],0x5c
1003ea80:	mov    eax,DWORD PTR [esp+0x50]
1003ea84:	jne    0x1003ea9f
1003ea86:	cmp    BYTE PTR [esi+0x2],0x45
1003ea8a:	jne    0x1003ea9b
1003ea8c:	add    esi,0x2
1003ea8f:	xor    eax,eax
1003ea91:	mov    DWORD PTR [esp+0x10],esi
1003ea95:	cmp    BYTE PTR [esi+0x1],0x5c
1003ea99:	je     0x1003ea86
1003ea9b:	mov    DWORD PTR [esp+0x50],eax
1003ea9f:	cmp    edi,0xd
1003eaa2:	mov    DWORD PTR [esp+0x58],esi
1003eaa6:	je     0x1003eaad
1003eaa8:	cmp    edi,0xa
1003eaab:	jne    0x1003eab1
1003eaad:	or     DWORD PTR [ebp+0x44],0x20
1003eab1:	test   eax,eax
1003eab3:	jne    0x1003ec51
1003eab9:	cmp    BYTE PTR [esi+0x1],0x2d
1003eabd:	jne    0x1003ec51
1003eac3:	add    esi,0x2
1003eac6:	mov    DWORD PTR [esp+0x10],esi
1003eaca:	cmp    BYTE PTR [esi],0x5c
1003eacd:	jne    0x1003eb1e
1003eacf:	nop
1003ead0:	cmp    BYTE PTR [esi+0x1],0x45
1003ead4:	jne    0x1003eae4
1003ead6:	add    esi,0x2
1003ead9:	mov    DWORD PTR [esp+0x10],esi
1003eadd:	cmp    BYTE PTR [esi],0x5c
1003eae0:	je     0x1003ead0
1003eae2:	jmp    0x1003eb1e
1003eae4:	cmp    BYTE PTR [esi],0x5c
1003eae7:	jne    0x1003eb1e
1003eae9:	lea    esp,[esp+0x0]
1003eaf0:	cmp    BYTE PTR [esi+0x1],0x51
1003eaf4:	jne    0x1003eb1e
1003eaf6:	add    esi,0x2
1003eaf9:	mov    DWORD PTR [esp+0x10],esi
1003eafd:	cmp    BYTE PTR [esi],0x5c
1003eb00:	jne    0x1003eb16
1003eb02:	cmp    BYTE PTR [esi+0x1],0x45
1003eb06:	jne    0x1003eb16
1003eb08:	add    esi,0x2
1003eb0b:	mov    DWORD PTR [esp+0x10],esi
1003eb0f:	cmp    BYTE PTR [esi],0x5c
1003eb12:	je     0x1003eaf0
1003eb14:	jmp    0x1003eb1e
1003eb16:	mov    DWORD PTR [esp+0x50],0x1
1003eb1e:	mov    al,BYTE PTR [esi]
1003eb20:	test   al,al
1003eb22:	je     0x1003ec49
1003eb28:	cmp    DWORD PTR [esp+0x50],0x0
1003eb2d:	jne    0x1003eb37
1003eb2f:	cmp    al,0x5d
1003eb31:	je     0x1003ec49
1003eb37:	cmp    DWORD PTR [esp+0x50],0x0
1003eb3c:	movzx  ebx,al
1003eb3f:	jne    0x1003eb9f
1003eb41:	cmp    ebx,0x5c
1003eb44:	jne    0x1003eb9f
1003eb46:	mov    ecx,DWORD PTR [esp+0x18]
1003eb4a:	mov    edx,DWORD PTR [ecx+0x30]
1003eb4d:	mov    esi,DWORD PTR [esp+0x20]
1003eb51:	push   0x1
1003eb53:	push   edx
1003eb54:	lea    eax,[esp+0x18]
1003eb58:	push   esi
1003eb59:	push   eax
1003eb5a:	mov    eax,DWORD PTR [esp+0x44]
1003eb5e:	call   0x1003ca70
1003eb63:	add    esp,0x10
1003eb66:	cmp    DWORD PTR [esi],0x0
1003eb69:	mov    ebx,eax
1003eb6b:	jne    0x1003f779
1003eb71:	test   ebx,ebx
1003eb73:	jge    0x1003eb9b
1003eb75:	cmp    ebx,0xfffffffb
1003eb78:	jne    0x1003eb81
1003eb7a:	mov    ebx,0x8
1003eb7f:	jmp    0x1003eb9b
1003eb81:	cmp    ebx,0xffffffea
1003eb84:	jne    0x1003eb8d
1003eb86:	mov    ebx,0x58
1003eb8b:	jmp    0x1003eb9b
1003eb8d:	cmp    ebx,0xffffffef
1003eb90:	jne    0x1003ec49
1003eb96:	mov    ebx,0x52
1003eb9b:	mov    esi,DWORD PTR [esp+0x10]
1003eb9f:	cmp    ebx,edi
1003eba1:	jl     0x100408fa
1003eba7:	je     0x1003ec51
1003ebad:	cmp    ebx,0xd
1003ebb0:	je     0x1003ebb7
1003ebb2:	cmp    ebx,0xa
1003ebb5:	jne    0x1003ebbf
1003ebb7:	mov    eax,DWORD PTR [esp+0x18]
1003ebbb:	or     DWORD PTR [eax+0x44],0x20
1003ebbf:	mov    edx,DWORD PTR [esp+0x24]
1003ebc3:	mov    ecx,ebx
1003ebc5:	sub    ecx,edi
1003ebc7:	cmp    DWORD PTR [esp+0x38],0x0
1003ebcc:	lea    eax,[edx+ecx*1+0x1]
1003ebd0:	mov    DWORD PTR [esp+0x24],eax
1003ebd4:	mov    DWORD PTR [esp+0x28],ebx
1003ebd8:	jne    0x1003e809
1003ebde:	cmp    edi,ebx
1003ebe0:	jg     0x1003e809
1003ebe6:	mov    eax,DWORD PTR [esp+0x34]
1003ebea:	and    eax,0x1
1003ebed:	mov    DWORD PTR [esp+0x60],eax
1003ebf1:	mov    eax,edi
1003ebf3:	cdq    
1003ebf4:	and    edx,0x7
1003ebf7:	add    eax,edx
1003ebf9:	mov    ecx,edi
1003ebfb:	and    ecx,0x7
1003ebfe:	mov    dl,0x1
1003ec00:	shl    dl,cl
1003ec02:	sar    eax,0x3
1003ec05:	lea    ebp,[esp+eax*1+0xbc]
1003ec0c:	or     BYTE PTR [ebp+0x0],dl
1003ec0f:	cmp    DWORD PTR [esp+0x60],0x0
1003ec14:	je     0x1003ec3d
1003ec16:	mov    eax,DWORD PTR [esp+0x18]
1003ec1a:	mov    ecx,DWORD PTR [eax+0x4]
1003ec1d:	movzx  ecx,BYTE PTR [ecx+edi*1]
1003ec21:	mov    eax,ecx
1003ec23:	cdq    
1003ec24:	and    edx,0x7
1003ec27:	add    eax,edx
1003ec29:	and    ecx,0x7
1003ec2c:	mov    dl,0x1
1003ec2e:	sar    eax,0x3
1003ec31:	shl    dl,cl
1003ec33:	lea    ebp,[esp+eax*1+0xbc]
1003ec3a:	or     BYTE PTR [ebp+0x0],dl
1003ec3d:	add    edi,0x1
1003ec40:	cmp    edi,ebx
1003ec42:	jle    0x1003ebf1
1003ec44:	jmp    0x1003e809
1003ec49:	mov    esi,DWORD PTR [esp+0x58]
1003ec4d:	mov    DWORD PTR [esp+0x10],esi
1003ec51:	mov    eax,edi
1003ec53:	cdq    
1003ec54:	and    edx,0x7
1003ec57:	add    eax,edx
1003ec59:	mov    ecx,edi
1003ec5b:	and    ecx,0x7
1003ec5e:	mov    dl,0x1
1003ec60:	shl    dl,cl
1003ec62:	sar    eax,0x3
1003ec65:	lea    eax,[esp+eax*1+0xbc]
1003ec6c:	or     BYTE PTR [eax],dl
1003ec6e:	test   BYTE PTR [esp+0x34],0x1
1003ec73:	je     0x1003ec9d
1003ec75:	mov    eax,DWORD PTR [esp+0x18]
1003ec79:	mov    ecx,DWORD PTR [eax+0x4]
1003ec7c:	movzx  edi,BYTE PTR [ecx+edi*1]
1003ec80:	mov    eax,edi
1003ec82:	cdq    
1003ec83:	and    edx,0x7
1003ec86:	add    eax,edx
1003ec88:	mov    ecx,edi
1003ec8a:	and    ecx,0x7
1003ec8d:	mov    dl,0x1
1003ec8f:	sar    eax,0x3
1003ec92:	shl    dl,cl
1003ec94:	lea    eax,[esp+eax*1+0xbc]
1003ec9b:	or     BYTE PTR [eax],dl
1003ec9d:	add    DWORD PTR [esp+0x24],0x1
1003eca2:	mov    DWORD PTR [esp+0x28],edi
1003eca6:	jmp    0x1003e809
1003ecab:	mov    al,BYTE PTR [esp+0x28]
1003ecaf:	jmp    0x1003e1de
1003ecb4:	mov    eax,DWORD PTR [esp+0x30]
1003ecb8:	cmp    eax,0xfffffffe
1003ecbb:	jne    0x1003ecc4
1003ecbd:	or     eax,0xffffffff
1003ecc0:	mov    DWORD PTR [esp+0x30],eax
1003ecc4:	mov    ebp,DWORD PTR [esp+0x14]
1003ecc8:	mov    edx,DWORD PTR [esp+0x4c]
1003eccc:	mov    DWORD PTR [esp+0x5c],eax
1003ecd0:	mov    eax,DWORD PTR [esp+0x1c]
1003ecd4:	cmp    eax,DWORD PTR [esp+0x3c]
1003ecd8:	mov    DWORD PTR [esp+0x68],edx
1003ecdc:	setne  cl
1003ecdf:	add    cl,0x4e
1003ece2:	mov    BYTE PTR [ebp+0x0],cl
1003ece5:	add    ebp,0x1
1003ece8:	test   eax,eax
1003ecea:	je     0x1003ed1e
1003ecec:	cmp    DWORD PTR [esp+0x38],0x0
1003ecf1:	jne    0x1003ed2e
1003ecf3:	lea    ecx,[esp+0xbc]
1003ecfa:	mov    eax,ebp
1003ecfc:	sub    ecx,ebp
1003ecfe:	mov    esi,0x20
1003ed03:	mov    dl,BYTE PTR [ecx+eax*1]
1003ed06:	not    dl
1003ed08:	mov    BYTE PTR [eax],dl
1003ed0a:	add    eax,0x1
1003ed0d:	sub    esi,0x1
1003ed10:	jne    0x1003ed03
1003ed12:	add    ebp,0x20
1003ed15:	mov    DWORD PTR [esp+0x14],ebp
1003ed19:	jmp    0x10040803
1003ed1e:	mov    ecx,0x8
1003ed23:	lea    esi,[esp+0xbc]
1003ed2a:	mov    edi,ebp
1003ed2c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1003ed2e:	add    ebp,0x20
1003ed31:	mov    DWORD PTR [esp+0x14],ebp
1003ed35:	jmp    0x10040803
1003ed3a:	cmp    DWORD PTR [esp+0x28],0x0
1003ed3f:	je     0x1003e1dc
1003ed45:	mov    edi,DWORD PTR [esp+0x20]
1003ed49:	lea    eax,[esp+0x40]
1003ed4d:	push   eax
1003ed4e:	lea    ecx,[esp+0x4c]
1003ed52:	push   ecx
1003ed53:	lea    eax,[esi+0x1]
1003ed56:	call   0x1003cf30
1003ed5b:	add    esp,0x8
1003ed5e:	cmp    DWORD PTR [edi],0x0
1003ed61:	mov    esi,eax
1003ed63:	mov    DWORD PTR [esp+0x10],esi
1003ed67:	jne    0x1003f77d
1003ed6d:	mov    eax,DWORD PTR [esp+0x48]
1003ed71:	jmp    0x1003ed9a
1003ed73:	mov    DWORD PTR [esp+0x40],0xffffffff
1003ed7b:	jmp    0x1003ed94
1003ed7d:	mov    eax,0x1
1003ed82:	mov    DWORD PTR [esp+0x40],0xffffffff
1003ed8a:	jmp    0x1003ed96
1003ed8c:	mov    DWORD PTR [esp+0x40],0x1
1003ed94:	xor    eax,eax
1003ed96:	mov    DWORD PTR [esp+0x48],eax
1003ed9a:	xor    edx,edx
1003ed9c:	cmp    ebp,edx
1003ed9e:	je     0x10040918
1003eda4:	cmp    eax,edx
1003eda6:	jne    0x1003edb8
1003eda8:	mov    ecx,DWORD PTR [esp+0x5c]
1003edac:	mov    DWORD PTR [esp+0x30],ecx
1003edb0:	mov    ecx,DWORD PTR [esp+0x68]
1003edb4:	mov    DWORD PTR [esp+0x4c],ecx
1003edb8:	sub    eax,DWORD PTR [esp+0x40]
1003edbc:	mov    ecx,ebp
1003edbe:	neg    eax
1003edc0:	sbb    eax,eax
1003edc2:	and    eax,0x200
1003edc7:	mov    DWORD PTR [esp+0x8c],eax
1003edce:	mov    DWORD PTR [esp+0x44],ecx
1003edd2:	mov    al,BYTE PTR [esi+0x1]
1003edd5:	cmp    al,0x2b
1003edd7:	mov    DWORD PTR [esp+0x54],edx
1003eddb:	mov    DWORD PTR [esp+0x3c],edx
1003eddf:	jne    0x1003edf4
1003ede1:	mov    edx,0x1
1003ede6:	xor    ebx,ebx
1003ede8:	add    esi,edx
1003edea:	mov    DWORD PTR [esp+0x3c],edx
1003edee:	mov    DWORD PTR [esp+0x10],esi
1003edf2:	jmp    0x1003ee0f
1003edf4:	cmp    al,0x3f
1003edf6:	jne    0x1003ee08
1003edf8:	mov    ebx,DWORD PTR [esp+0xa0]
1003edff:	add    esi,0x1
1003ee02:	mov    DWORD PTR [esp+0x10],esi
1003ee06:	jmp    0x1003ee0f
1003ee08:	mov    ebx,DWORD PTR [esp+0xa4]
1003ee0f:	mov    al,BYTE PTR [ebp+0x0]
1003ee12:	cmp    al,0x1c
1003ee14:	je     0x1003f39a
1003ee1a:	cmp    al,0x1d
1003ee1c:	je     0x1003f39a
1003ee22:	cmp    al,0x1e
1003ee24:	jne    0x1003ee5b
1003ee26:	test   edx,edx
1003ee28:	movzx  eax,BYTE PTR [ebp+0x1]
1003ee2c:	mov    DWORD PTR [esp+0x54],0xd
1003ee34:	mov    DWORD PTR [esp+0x1c],eax
1003ee38:	jne    0x1003f3fb
1003ee3e:	cmp    DWORD PTR [esp+0x40],edx
1003ee42:	jge    0x1003f3fb
1003ee48:	mov    ecx,DWORD PTR [esp+0x34]
1003ee4c:	push   ecx
1003ee4d:	add    esi,0x1
1003ee50:	push   esi
1003ee51:	mov    edx,eax
1003ee53:	push   edx
1003ee54:	push   0x1e
1003ee56:	jmp    0x1003f3dd
1003ee5b:	cmp    al,0x17
1003ee5d:	jae    0x1003ee91
1003ee5f:	test   edx,edx
1003ee61:	movzx  eax,al
1003ee64:	mov    DWORD PTR [esp+0x54],0x1a
1003ee6c:	mov    DWORD PTR [esp+0x1c],eax
1003ee70:	jne    0x1003f3fb
1003ee76:	cmp    DWORD PTR [esp+0x40],edx
1003ee7a:	jge    0x1003f3fb
1003ee80:	mov    ecx,DWORD PTR [esp+0x34]
1003ee84:	push   ecx
1003ee85:	add    esi,0x1
1003ee88:	push   esi
1003ee89:	push   edx
1003ee8a:	mov    edx,eax
1003ee8c:	jmp    0x1003f3dc
1003ee91:	cmp    al,0x4e
1003ee93:	je     0x1003f2fc
1003ee99:	cmp    al,0x4f
1003ee9b:	je     0x1003f2fc
1003eea1:	cmp    al,0x51
1003eea3:	je     0x1003f2fc
1003eea9:	cmp    al,0x5e
1003eeab:	je     0x1003eed0
1003eead:	cmp    al,0x5f
1003eeaf:	je     0x1003eed0
1003eeb1:	cmp    al,0x5d
1003eeb3:	je     0x1003eed0
1003eeb5:	cmp    al,0x60
1003eeb7:	je     0x1003eed0
1003eeb9:	cmp    al,0x6d
1003eebb:	je     0x1003f6a3
1003eec1:	mov    eax,DWORD PTR [esp+0x20]
1003eec5:	mov    DWORD PTR [eax],0xb
1003eecb:	jmp    0x1003f77d
1003eed0:	mov    edi,DWORD PTR [esp+0x14]
1003eed4:	mov    edx,edi
1003eed6:	sub    edx,ebp
1003eed8:	cmp    al,0x60
1003eeda:	mov    DWORD PTR [esp+0x28],0x0
1003eee2:	mov    DWORD PTR [esp+0x1c],edx
1003eee6:	mov    DWORD PTR [esp+0x24],0x0
1003eeee:	jne    0x1003eefa
1003eef0:	cmp    BYTE PTR [ebp+0x3],0x66
1003eef4:	je     0x10040927
1003eefa:	mov    edx,DWORD PTR [esp+0x40]
1003eefe:	cmp    edx,0xffffffff
1003ef01:	jne    0x1003ef22
1003ef03:	mov    edi,ebp
1003ef05:	xor    eax,eax
1003ef07:	mov    ah,BYTE PTR [edi+0x1]
1003ef0a:	mov    al,BYTE PTR [edi+0x2]
1003ef0d:	add    edi,eax
1003ef0f:	cmp    BYTE PTR [edi],0x55
1003ef12:	jne    0x1003ef05
1003ef14:	mov    eax,DWORD PTR [esp+0x14]
1003ef18:	sub    eax,edi
1003ef1a:	mov    edi,DWORD PTR [esp+0x14]
1003ef1e:	mov    DWORD PTR [esp+0x28],eax
1003ef22:	mov    eax,DWORD PTR [esp+0x48]
1003ef26:	test   eax,eax
1003ef28:	jne    0x1003efe7
1003ef2e:	cmp    edx,0x1
1003ef31:	mov    BYTE PTR [edi],al
1003ef33:	jg     0x1003ef7e
1003ef35:	mov    ecx,DWORD PTR [esp+0x64]
1003ef39:	mov    edx,DWORD PTR [esp+0x18]
1003ef3d:	push   ecx
1003ef3e:	push   edx
1003ef3f:	push   0x1
1003ef41:	push   ebp
1003ef42:	call   0x1003d870
1003ef47:	mov    eax,DWORD PTR [esp+0x2c]
1003ef4b:	push   eax
1003ef4c:	lea    esi,[ebp+0x1]
1003ef4f:	push   ebp
1003ef50:	push   esi
1003ef51:	call   0x10044410
1003ef56:	add    edi,0x1
1003ef59:	add    esp,0x1c
1003ef5c:	cmp    DWORD PTR [esp+0x40],0x0
1003ef61:	mov    DWORD PTR [esp+0x14],edi
1003ef65:	jne    0x1003ef70
1003ef67:	mov    BYTE PTR [ebp+0x0],0x6f
1003ef6b:	jmp    0x1003f69f
1003ef70:	mov    cl,bl
1003ef72:	add    cl,0x67
1003ef75:	mov    BYTE PTR [ebp+0x0],cl
1003ef78:	mov    DWORD PTR [esp+0x2c],esi
1003ef7c:	jmp    0x1003efcd
1003ef7e:	mov    edx,DWORD PTR [esp+0x64]
1003ef82:	mov    eax,DWORD PTR [esp+0x18]
1003ef86:	push   edx
1003ef87:	push   eax
1003ef88:	push   0x4
1003ef8a:	push   ebp
1003ef8b:	call   0x1003d870
1003ef90:	mov    ecx,DWORD PTR [esp+0x2c]
1003ef94:	push   ecx
1003ef95:	lea    edx,[ebp+0x4]
1003ef98:	push   ebp
1003ef99:	push   edx
1003ef9a:	call   0x10044410
1003ef9f:	mov    al,bl
1003efa1:	add    al,0x67
1003efa3:	mov    BYTE PTR [ebp+0x0],al
1003efa6:	add    ebp,0x1
1003efa9:	mov    BYTE PTR [ebp+0x0],0x5e
1003efad:	add    ebp,0x1
1003efb0:	add    edi,0x4
1003efb3:	add    esp,0x1c
1003efb6:	mov    DWORD PTR [esp+0x24],ebp
1003efba:	mov    BYTE PTR [ebp+0x0],0x0
1003efbe:	mov    BYTE PTR [ebp+0x1],0x0
1003efc2:	add    ebp,0x2
1003efc5:	mov    DWORD PTR [esp+0x14],edi
1003efc9:	mov    DWORD PTR [esp+0x2c],ebp
1003efcd:	sub    DWORD PTR [esp+0x40],0x1
1003efd2:	mov    esi,DWORD PTR [esp+0x10]
1003efd6:	mov    ecx,DWORD PTR [esp+0x44]
1003efda:	mov    edx,DWORD PTR [esp+0x40]
1003efde:	mov    edi,DWORD PTR [esp+0x38]
1003efe2:	jmp    0x1003f0fb
1003efe7:	cmp    eax,0x1
1003efea:	mov    edi,DWORD PTR [esp+0x38]
1003efee:	jle    0x1003f0eb
1003eff4:	test   edi,edi
1003eff6:	je     0x1003f03d
1003eff8:	mov    eax,DWORD PTR [esp+0x48]
1003effc:	add    eax,0xffffffff
1003efff:	mov    DWORD PTR [esp+0x60],eax
1003f003:	imul   eax,DWORD PTR [esp+0x6c]
1003f008:	fild   DWORD PTR [esp+0x60]
1003f00c:	fimul  DWORD PTR [esp+0x6c]
1003f010:	mov    edx,eax
1003f012:	fcomp  QWORD PTR ds:0x10072d20
1003f018:	fnstsw ax
1003f01a:	test   ah,0x41
1003f01d:	je     0x10040936
1003f023:	mov    eax,DWORD PTR [edi]
1003f025:	mov    ebp,0x7fffffeb
1003f02a:	sub    ebp,eax
1003f02c:	cmp    ebp,edx
1003f02e:	jl     0x10040936
1003f034:	add    eax,edx
1003f036:	mov    DWORD PTR [edi],eax
1003f038:	jmp    0x1003f0eb
1003f03d:	cmp    DWORD PTR [esp+0x88],0x0
1003f045:	je     0x1003f056
1003f047:	cmp    DWORD PTR [esp+0x4c],0x0
1003f04c:	jge    0x1003f056
1003f04e:	mov    edx,DWORD PTR [esp+0x30]
1003f052:	mov    DWORD PTR [esp+0x4c],edx
1003f056:	cmp    DWORD PTR [esp+0x48],0x1
1003f05b:	jle    0x1003f0eb
1003f061:	mov    eax,DWORD PTR [esp+0x48]
1003f065:	add    eax,0xffffffff
1003f068:	mov    DWORD PTR [esp+0x58],eax
1003f06c:	lea    esp,[esp+0x0]
1003f070:	mov    edx,DWORD PTR [esp+0x1c]
1003f074:	mov    eax,DWORD PTR [esp+0x14]
1003f078:	mov    ecx,DWORD PTR [esp+0x18]
1003f07c:	mov    edi,DWORD PTR [ecx+0x20]
1003f07f:	push   edx
1003f080:	push   ebp
1003f081:	push   eax
1003f082:	call   0x10043ed0
1003f087:	mov    esi,DWORD PTR [esp+0x70]
1003f08b:	mov    eax,DWORD PTR [esp+0x28]
1003f08f:	add    esp,0xc
1003f092:	cmp    esi,edi
1003f094:	jae    0x1003f0d0
1003f096:	mov    ecx,DWORD PTR [esp+0x18]
1003f09a:	lea    ebx,[ebx+0x0]
1003f0a0:	mov    ecx,DWORD PTR [ecx+0x20]
1003f0a3:	xor    edx,edx
1003f0a5:	mov    dh,BYTE PTR [esi]
1003f0a7:	add    esi,0x2
1003f0aa:	mov    dl,BYTE PTR [esi-0x1]
1003f0ad:	add    edx,eax
1003f0af:	sar    edx,0x8
1003f0b2:	mov    BYTE PTR [ecx],dl
1003f0b4:	movzx  edx,BYTE PTR [esi-0x1]
1003f0b8:	mov    ecx,DWORD PTR [esp+0x18]
1003f0bc:	mov    ecx,DWORD PTR [ecx+0x20]
1003f0bf:	add    dl,al
1003f0c1:	mov    BYTE PTR [ecx+0x1],dl
1003f0c4:	mov    ecx,DWORD PTR [esp+0x18]
1003f0c8:	add    DWORD PTR [ecx+0x20],0x2
1003f0cc:	cmp    esi,edi
1003f0ce:	jb     0x1003f0a0
1003f0d0:	add    DWORD PTR [esp+0x14],eax
1003f0d4:	sub    DWORD PTR [esp+0x58],0x1
1003f0d9:	mov    DWORD PTR [esp+0x64],edi
1003f0dd:	jne    0x1003f070
1003f0df:	mov    esi,DWORD PTR [esp+0x10]
1003f0e3:	mov    ecx,DWORD PTR [esp+0x44]
1003f0e7:	mov    edi,DWORD PTR [esp+0x38]
1003f0eb:	mov    edx,DWORD PTR [esp+0x40]
1003f0ef:	test   edx,edx
1003f0f1:	jle    0x1003f0fd
1003f0f3:	sub    edx,DWORD PTR [esp+0x48]
1003f0f7:	mov    DWORD PTR [esp+0x40],edx
1003f0fb:	test   edx,edx
1003f0fd:	jl     0x1003f2a0
1003f103:	test   edi,edi
1003f105:	je     0x1003f151
1003f107:	test   edx,edx
1003f109:	jle    0x1003f151
1003f10b:	mov    eax,DWORD PTR [esp+0x6c]
1003f10f:	add    eax,0x7
1003f112:	mov    DWORD PTR [esp+0x60],eax
1003f116:	imul   eax,edx
1003f119:	fild   DWORD PTR [esp+0x60]
1003f11d:	fimul  DWORD PTR [esp+0x40]
1003f121:	sub    eax,0x6
1003f124:	mov    edx,eax
1003f126:	fcomp  QWORD PTR ds:0x10072d20
1003f12c:	fnstsw ax
1003f12e:	test   ah,0x41
1003f131:	je     0x10040838
1003f137:	mov    eax,DWORD PTR [edi]
1003f139:	mov    ebx,0x7fffffeb
1003f13e:	sub    ebx,eax
1003f140:	cmp    ebx,edx
1003f142:	jl     0x10040838
1003f148:	add    eax,edx
1003f14a:	mov    DWORD PTR [edi],eax
1003f14c:	jmp    0x1003f245
1003f151:	add    edx,0xffffffff
1003f154:	mov    DWORD PTR [esp+0x28],edx
1003f158:	js     0x1003f245
1003f15e:	mov    esi,DWORD PTR [esp+0x14]
1003f162:	mov    edi,DWORD PTR [esp+0x18]
1003f166:	add    bl,0x67
1003f169:	mov    BYTE PTR [esp+0x73],bl
1003f16d:	jmp    0x1003f174
1003f16f:	nop
1003f170:	mov    bl,BYTE PTR [esp+0x73]
1003f174:	mov    ebp,DWORD PTR [edi+0x20]
1003f177:	mov    BYTE PTR [esi],bl
1003f179:	add    esi,0x1
1003f17c:	cmp    DWORD PTR [esp+0x28],0x0
1003f181:	mov    DWORD PTR [esp+0x60],ebp
1003f185:	mov    DWORD PTR [esp+0x14],esi
1003f189:	je     0x1003f1b6
1003f18b:	mov    ecx,DWORD PTR [esp+0x24]
1003f18f:	mov    BYTE PTR [esi],0x5e
1003f192:	add    esi,0x1
1003f195:	test   ecx,ecx
1003f197:	jne    0x1003f19d
1003f199:	xor    eax,eax
1003f19b:	jmp    0x1003f1a1
1003f19d:	mov    eax,esi
1003f19f:	sub    eax,ecx
1003f1a1:	mov    edx,eax
1003f1a3:	sar    edx,0x8
1003f1a6:	mov    DWORD PTR [esp+0x24],esi
1003f1aa:	mov    BYTE PTR [esi],dl
1003f1ac:	mov    BYTE PTR [esi+0x1],al
1003f1af:	add    esi,0x2
1003f1b2:	mov    DWORD PTR [esp+0x14],esi
1003f1b6:	mov    ebx,DWORD PTR [esp+0x1c]
1003f1ba:	mov    eax,DWORD PTR [esp+0x2c]
1003f1be:	push   ebx
1003f1bf:	push   eax
1003f1c0:	push   esi
1003f1c1:	call   0x10043ed0
1003f1c6:	mov    eax,DWORD PTR [esp+0x70]
1003f1ca:	add    esp,0xc
1003f1cd:	cmp    eax,ebp
1003f1cf:	jae    0x1003f228
1003f1d1:	mov    ecx,DWORD PTR [esp+0x28]
1003f1d5:	mov    esi,ecx
1003f1d7:	neg    esi
1003f1d9:	sbb    esi,esi
1003f1db:	and    esi,0x3
1003f1de:	add    esi,0x1
1003f1e1:	neg    ecx
1003f1e3:	sbb    cl,cl
1003f1e5:	and    cl,0x3
1003f1e8:	add    cl,0x1
1003f1eb:	jmp    0x1003f1f0
1003f1ed:	lea    ecx,[ecx+0x0]
1003f1f0:	xor    edx,edx
1003f1f2:	mov    dh,BYTE PTR [eax]
1003f1f4:	add    eax,0x2
1003f1f7:	mov    dl,BYTE PTR [eax-0x1]
1003f1fa:	add    edx,esi
1003f1fc:	add    edx,ebx
1003f1fe:	mov    ebx,DWORD PTR [edi+0x20]
1003f201:	sar    edx,0x8
1003f204:	mov    BYTE PTR [ebx],dl
1003f206:	movzx  edx,BYTE PTR [eax-0x1]
1003f20a:	mov    ebx,DWORD PTR [esp+0x1c]
1003f20e:	mov    ebp,DWORD PTR [edi+0x20]
1003f211:	add    dl,cl
1003f213:	add    dl,bl
1003f215:	mov    BYTE PTR [ebp+0x1],dl
1003f218:	mov    ebp,DWORD PTR [esp+0x60]
1003f21c:	add    DWORD PTR [edi+0x20],0x2
1003f220:	cmp    eax,ebp
1003f222:	jb     0x1003f1f0
1003f224:	mov    esi,DWORD PTR [esp+0x14]
1003f228:	add    esi,ebx
1003f22a:	sub    DWORD PTR [esp+0x28],0x1
1003f22f:	mov    DWORD PTR [esp+0x64],ebp
1003f233:	mov    DWORD PTR [esp+0x14],esi
1003f237:	jns    0x1003f170
1003f23d:	mov    esi,DWORD PTR [esp+0x10]
1003f241:	mov    ecx,DWORD PTR [esp+0x44]
1003f245:	xor    edi,edi
1003f247:	cmp    DWORD PTR [esp+0x24],edi
1003f24b:	je     0x1003f5a3
1003f251:	mov    esi,DWORD PTR [esp+0x14]
1003f255:	mov    eax,esi
1003f257:	sub    eax,DWORD PTR [esp+0x24]
1003f25b:	mov    ecx,esi
1003f25d:	add    eax,0x1
1003f260:	sub    ecx,eax
1003f262:	xor    edx,edx
1003f264:	mov    dh,BYTE PTR [ecx+0x1]
1003f267:	mov    dl,BYTE PTR [ecx+0x2]
1003f26a:	cmp    edx,edi
1003f26c:	jne    0x1003f274
1003f26e:	mov    DWORD PTR [esp+0x24],edi
1003f272:	jmp    0x1003f278
1003f274:	sub    DWORD PTR [esp+0x24],edx
1003f278:	mov    BYTE PTR [esi],0x55
1003f27b:	add    esi,0x1
1003f27e:	mov    edx,eax
1003f280:	sar    edx,0x8
1003f283:	mov    BYTE PTR [esi],dl
1003f285:	mov    BYTE PTR [esi+0x1],al
1003f288:	add    esi,0x2
1003f28b:	cmp    DWORD PTR [esp+0x24],edi
1003f28f:	mov    BYTE PTR [ecx+0x1],dl
1003f292:	mov    BYTE PTR [ecx+0x2],al
1003f295:	jne    0x1003f255
1003f297:	mov    DWORD PTR [esp+0x14],esi
1003f29b:	jmp    0x1003f59b
1003f2a0:	mov    esi,DWORD PTR [esp+0x14]
1003f2a4:	sub    esi,DWORD PTR [esp+0x28]
1003f2a8:	xor    eax,eax
1003f2aa:	mov    ah,BYTE PTR [esi+0x1]
1003f2ad:	mov    edi,esi
1003f2af:	add    bl,0x56
1003f2b2:	mov    BYTE PTR [esi],bl
1003f2b4:	mov    al,BYTE PTR [esi+0x2]
1003f2b7:	sub    edi,eax
1003f2b9:	cmp    DWORD PTR [esp+0x38],0x0
1003f2be:	jne    0x1003f59b
1003f2c4:	cmp    BYTE PTR [edi],0x5d
1003f2c7:	je     0x1003f59b
1003f2cd:	mov    ebx,edi
1003f2cf:	nop
1003f2d0:	push   0x0
1003f2d2:	push   esi
1003f2d3:	push   ebx
1003f2d4:	call   0x1003d5f0
1003f2d9:	add    esp,0xc
1003f2dc:	test   eax,eax
1003f2de:	jne    0x1003f2f4
1003f2e0:	xor    ecx,ecx
1003f2e2:	mov    ch,BYTE PTR [ebx+0x1]
1003f2e5:	mov    cl,BYTE PTR [ebx+0x2]
1003f2e8:	add    ebx,ecx
1003f2ea:	cmp    BYTE PTR [ebx],0x54
1003f2ed:	je     0x1003f2d0
1003f2ef:	jmp    0x1003f59b
1003f2f4:	add    BYTE PTR [edi],0x3
1003f2f7:	jmp    0x1003f59b
1003f2fc:	mov    eax,DWORD PTR [esp+0x40]
1003f300:	test   eax,eax
1003f302:	jne    0x1003f30d
1003f304:	mov    DWORD PTR [esp+0x14],ebp
1003f308:	jmp    0x1003f6a3
1003f30d:	cmp    eax,0x1
1003f310:	je     0x1003f31a
1003f312:	mov    ecx,DWORD PTR [esp+0x18]
1003f316:	or     DWORD PTR [ecx+0x44],0x1
1003f31a:	mov    ecx,DWORD PTR [esp+0x48]
1003f31e:	test   ecx,ecx
1003f320:	jne    0x1003f335
1003f322:	cmp    eax,0xffffffff
1003f325:	jne    0x1003f34d
1003f327:	mov    eax,DWORD PTR [esp+0x14]
1003f32b:	add    bl,0x46
1003f32e:	mov    BYTE PTR [eax],bl
1003f330:	jmp    0x1003f594
1003f335:	cmp    ecx,0x1
1003f338:	jne    0x1003f360
1003f33a:	cmp    eax,0xffffffff
1003f33d:	jne    0x1003f360
1003f33f:	mov    eax,DWORD PTR [esp+0x14]
1003f343:	add    bl,0x48
1003f346:	mov    BYTE PTR [eax],bl
1003f348:	jmp    0x1003f594
1003f34d:	cmp    eax,0x1
1003f350:	jne    0x1003f360
1003f352:	mov    eax,DWORD PTR [esp+0x14]
1003f356:	add    bl,0x4a
1003f359:	mov    BYTE PTR [eax],bl
1003f35b:	jmp    0x1003f594
1003f360:	mov    esi,DWORD PTR [esp+0x14]
1003f364:	add    bl,0x4c
1003f367:	mov    BYTE PTR [esi],bl
1003f369:	add    esi,0x1
1003f36c:	mov    edx,ecx
1003f36e:	sar    edx,0x8
1003f371:	mov    BYTE PTR [esi],dl
1003f373:	mov    BYTE PTR [esi+0x1],cl
1003f376:	add    esi,0x2
1003f379:	cmp    eax,0xffffffff
1003f37c:	jne    0x1003f384
1003f37e:	xor    eax,eax
1003f380:	mov    DWORD PTR [esp+0x40],eax
1003f384:	mov    ecx,eax
1003f386:	sar    ecx,0x8
1003f389:	mov    BYTE PTR [esi],cl
1003f38b:	mov    BYTE PTR [esi+0x1],al
1003f38e:	add    esi,0x2
1003f391:	mov    DWORD PTR [esp+0x14],esi
1003f395:	jmp    0x1003f59b
1003f39a:	cmp    DWORD PTR [esp+0x48],0x1
1003f39f:	mov    ecx,DWORD PTR [esp+0x14]
1003f3a3:	movzx  edi,BYTE PTR [ecx-0x1]
1003f3a7:	mov    DWORD PTR [esp+0x1c],edi
1003f3ab:	jle    0x1003f3c1
1003f3ad:	mov    ecx,DWORD PTR [esp+0x18]
1003f3b1:	mov    ecx,DWORD PTR [ecx+0x48]
1003f3b4:	or     ecx,edi
1003f3b6:	or     ecx,DWORD PTR [esp+0x84]
1003f3bd:	mov    DWORD PTR [esp+0x4c],ecx
1003f3c1:	test   edx,edx
1003f3c3:	jne    0x1003f3fb
1003f3c5:	cmp    DWORD PTR [esp+0x40],edx
1003f3c9:	jge    0x1003f3fb
1003f3cb:	mov    edx,DWORD PTR [esp+0x34]
1003f3cf:	mov    ecx,DWORD PTR [esp+0x1c]
1003f3d3:	push   edx
1003f3d4:	add    esi,0x1
1003f3d7:	push   esi
1003f3d8:	push   ecx
1003f3d9:	movzx  edx,al
1003f3dc:	push   edx
1003f3dd:	mov    esi,DWORD PTR [esp+0x28]
1003f3e1:	call   0x1003d910
1003f3e6:	add    esp,0x10
1003f3e9:	test   eax,eax
1003f3eb:	je     0x1003f3f7
1003f3ed:	mov    DWORD PTR [esp+0x3c],0x1
1003f3f5:	xor    ebx,ebx
1003f3f7:	mov    esi,DWORD PTR [esp+0x10]
1003f3fb:	mov    al,BYTE PTR [ebp+0x0]
1003f3fe:	cmp    al,0x10
1003f400:	je     0x1003f40f
1003f402:	cmp    al,0xf
1003f404:	je     0x1003f40f
1003f406:	or     eax,0xffffffff
1003f409:	mov    DWORD PTR [esp+0x24],eax
1003f40d:	jmp    0x1003f41b
1003f40f:	movzx  ecx,BYTE PTR [ebp+0x2]
1003f413:	movzx  eax,BYTE PTR [ebp+0x1]
1003f417:	mov    DWORD PTR [esp+0x24],ecx
1003f41b:	mov    edi,DWORD PTR [esp+0x14]
1003f41f:	mov    DWORD PTR [esp+0x28],eax
1003f423:	mov    eax,DWORD PTR [esp+0x40]
1003f427:	test   eax,eax
1003f429:	mov    DWORD PTR [esp+0x14],ebp
1003f42d:	je     0x1003f6a3
1003f433:	cmp    eax,0x1
1003f436:	je     0x1003f440
1003f438:	mov    ecx,DWORD PTR [esp+0x18]
1003f43c:	or     DWORD PTR [ecx+0x44],0x1
1003f440:	mov    ecx,DWORD PTR [esp+0x54]
1003f444:	add    ebx,ecx
1003f446:	cmp    DWORD PTR [esp+0x48],0x0
1003f44b:	jne    0x1003f49a
1003f44d:	cmp    eax,0xffffffff
1003f450:	jne    0x1003f464
1003f452:	add    bl,0x1f
1003f455:	mov    BYTE PTR [ebp+0x0],bl
1003f458:	add    ebp,0x1
1003f45b:	mov    DWORD PTR [esp+0x14],ebp
1003f45f:	jmp    0x1003f58a
1003f464:	cmp    eax,0x1
1003f467:	jne    0x1003f47b
1003f469:	add    bl,0x23
1003f46c:	mov    BYTE PTR [ebp+0x0],bl
1003f46f:	add    ebp,0x1
1003f472:	mov    DWORD PTR [esp+0x14],ebp
1003f476:	jmp    0x1003f58a
1003f47b:	add    bl,0x25
1003f47e:	lea    ecx,[ebp+0x1]
1003f481:	mov    edx,eax
1003f483:	sar    edx,0x8
1003f486:	mov    BYTE PTR [ebp+0x0],bl
1003f489:	mov    BYTE PTR [ecx],dl
1003f48b:	mov    BYTE PTR [ecx+0x1],al
1003f48e:	add    ecx,0x2
1003f491:	mov    DWORD PTR [esp+0x14],ecx
1003f495:	jmp    0x1003f58a
1003f49a:	cmp    DWORD PTR [esp+0x48],0x1
1003f49f:	jne    0x1003f4e6
1003f4a1:	cmp    eax,0xffffffff
1003f4a4:	jne    0x1003f4b8
1003f4a6:	add    bl,0x21
1003f4a9:	mov    BYTE PTR [ebp+0x0],bl
1003f4ac:	add    ebp,0x1
1003f4af:	mov    DWORD PTR [esp+0x14],ebp
1003f4b3:	jmp    0x1003f58a
1003f4b8:	cmp    eax,0x1
1003f4bb:	mov    DWORD PTR [esp+0x14],edi
1003f4bf:	je     0x1003f6a3
1003f4c5:	lea    edx,[eax-0x1]
1003f4c8:	add    bl,0x25
1003f4cb:	lea    ecx,[edi+0x1]
1003f4ce:	sar    edx,0x8
1003f4d1:	sub    al,0x1
1003f4d3:	mov    BYTE PTR [edi],bl
1003f4d5:	mov    BYTE PTR [ecx],dl
1003f4d7:	mov    BYTE PTR [ecx+0x1],al
1003f4da:	add    ecx,0x2
1003f4dd:	mov    DWORD PTR [esp+0x14],ecx
1003f4e1:	jmp    0x1003f58a
1003f4e6:	add    cl,0x27
1003f4e9:	mov    BYTE PTR [ebp+0x0],cl
1003f4ec:	mov    ecx,DWORD PTR [esp+0x48]
1003f4f0:	lea    esi,[ebp+0x1]
1003f4f3:	mov    edx,ecx
1003f4f5:	sar    edx,0x8
1003f4f8:	mov    BYTE PTR [esi],dl
1003f4fa:	mov    BYTE PTR [esi+0x1],cl
1003f4fd:	add    esi,0x2
1003f500:	test   eax,eax
1003f502:	mov    DWORD PTR [esp+0x14],esi
1003f506:	jge    0x1003f531
1003f508:	mov    al,BYTE PTR [esp+0x1c]
1003f50c:	mov    BYTE PTR [esi],al
1003f50e:	mov    eax,DWORD PTR [esp+0x28]
1003f512:	add    esi,0x1
1003f515:	test   eax,eax
1003f517:	jl     0x1003f527
1003f519:	mov    cl,BYTE PTR [esp+0x24]
1003f51d:	mov    BYTE PTR [esi],al
1003f51f:	add    esi,0x1
1003f522:	mov    BYTE PTR [esi],cl
1003f524:	add    esi,0x1
1003f527:	add    bl,0x1f
1003f52a:	mov    BYTE PTR [esi],bl
1003f52c:	add    esi,0x1
1003f52f:	jmp    0x1003f586
1003f531:	cmp    eax,ecx
1003f533:	je     0x1003f58a
1003f535:	mov    esi,DWORD PTR [esp+0x14]
1003f539:	mov    dl,BYTE PTR [esp+0x1c]
1003f53d:	mov    BYTE PTR [esi],dl
1003f53f:	add    esi,0x1
1003f542:	cmp    DWORD PTR [esp+0x28],0x0
1003f547:	jl     0x1003f55d
1003f549:	movzx  edx,BYTE PTR [esp+0x28]
1003f54e:	mov    BYTE PTR [esi],dl
1003f550:	movzx  edx,BYTE PTR [esp+0x24]
1003f555:	add    esi,0x1
1003f558:	mov    BYTE PTR [esi],dl
1003f55a:	add    esi,0x1
1003f55d:	sub    eax,ecx
1003f55f:	cmp    eax,0x1
1003f562:	mov    DWORD PTR [esp+0x40],eax
1003f566:	jne    0x1003f571
1003f568:	add    bl,0x23
1003f56b:	mov    BYTE PTR [esi],bl
1003f56d:	add    esi,eax
1003f56f:	jmp    0x1003f586
1003f571:	add    bl,0x25
1003f574:	mov    BYTE PTR [esi],bl
1003f576:	add    esi,0x1
1003f579:	mov    ecx,eax
1003f57b:	sar    ecx,0x8
1003f57e:	mov    BYTE PTR [esi],cl
1003f580:	mov    BYTE PTR [esi+0x1],al
1003f583:	add    esi,0x2
1003f586:	mov    DWORD PTR [esp+0x14],esi
1003f58a:	mov    dl,BYTE PTR [esp+0x1c]
1003f58e:	mov    eax,DWORD PTR [esp+0x14]
1003f592:	mov    BYTE PTR [eax],dl
1003f594:	add    eax,0x1
1003f597:	mov    DWORD PTR [esp+0x14],eax
1003f59b:	mov    ecx,DWORD PTR [esp+0x44]
1003f59f:	mov    esi,DWORD PTR [esp+0x10]
1003f5a3:	cmp    DWORD PTR [esp+0x3c],0x0
1003f5a8:	je     0x1003f6a3
1003f5ae:	mov    al,BYTE PTR [ecx]
1003f5b0:	cmp    al,0x27
1003f5b2:	je     0x1003f5bc
1003f5b4:	cmp    al,0x41
1003f5b6:	je     0x1003f5c0
1003f5b8:	cmp    al,0x34
1003f5ba:	jne    0x1003f5e8
1003f5bc:	cmp    al,0x41
1003f5be:	jne    0x1003f5d4
1003f5c0:	mov    dl,BYTE PTR [ecx+0x3]
1003f5c3:	cmp    dl,0x10
1003f5c6:	je     0x1003f5cd
1003f5c8:	cmp    dl,0xf
1003f5cb:	jne    0x1003f5d4
1003f5cd:	mov    edx,0x2
1003f5d2:	jmp    0x1003f5d6
1003f5d4:	xor    edx,edx
1003f5d6:	movzx  eax,al
1003f5d9:	movzx  eax,BYTE PTR [eax+0x1006d078]
1003f5e0:	add    eax,edx
1003f5e2:	add    ecx,eax
1003f5e4:	mov    DWORD PTR [esp+0x44],ecx
1003f5e8:	mov    ebx,DWORD PTR [esp+0x14]
1003f5ec:	sub    ebx,ecx
1003f5ee:	test   ebx,ebx
1003f5f0:	jle    0x1003f6a3
1003f5f6:	movzx  eax,BYTE PTR [ecx]
1003f5f9:	add    eax,0xffffffe1
1003f5fc:	cmp    eax,0x20
1003f5ff:	ja     0x1003f65a
1003f601:	movzx  edx,BYTE PTR [eax+0x10040bcc]
1003f608:	jmp    DWORD PTR [edx*4+0x10040b98]
1003f60f:	mov    BYTE PTR [ecx],0x28
1003f612:	jmp    0x1003f69f
1003f617:	mov    BYTE PTR [ecx],0x29
1003f61a:	jmp    0x1003f69f
1003f61f:	mov    BYTE PTR [ecx],0x2a
1003f622:	jmp    0x1003f69f
1003f627:	mov    BYTE PTR [ecx],0x2b
1003f62a:	jmp    0x1003f69f
1003f62f:	mov    BYTE PTR [ecx],0x42
1003f632:	jmp    0x1003f69f
1003f637:	mov    BYTE PTR [ecx],0x43
1003f63a:	jmp    0x1003f69f
1003f63c:	mov    BYTE PTR [ecx],0x44
1003f63f:	jmp    0x1003f69f
1003f641:	mov    BYTE PTR [ecx],0x45
1003f644:	jmp    0x1003f69f
1003f646:	mov    BYTE PTR [ecx],0x35
1003f649:	jmp    0x1003f69f
1003f64b:	mov    BYTE PTR [ecx],0x36
1003f64e:	jmp    0x1003f69f
1003f650:	mov    BYTE PTR [ecx],0x37
1003f653:	jmp    0x1003f69f
1003f655:	mov    BYTE PTR [ecx],0x38
1003f658:	jmp    0x1003f69f
1003f65a:	push   ebx
1003f65b:	push   ecx
1003f65c:	add    ecx,0x3
1003f65f:	push   ecx
1003f660:	call   0x10044410
1003f665:	mov    ecx,DWORD PTR [esp+0x50]
1003f669:	mov    eax,DWORD PTR [esp+0x20]
1003f66d:	mov    BYTE PTR [ecx],0x5d
1003f670:	mov    BYTE PTR [eax+0x3],0x55
1003f674:	add    ebx,0x3
1003f677:	add    eax,0x3
1003f67a:	add    eax,0x1
1003f67d:	mov    ecx,ebx
1003f67f:	sar    ecx,0x8
1003f682:	mov    BYTE PTR [eax],cl
1003f684:	mov    BYTE PTR [eax+0x1],bl
1003f687:	mov    edx,DWORD PTR [esp+0x50]
1003f68b:	add    esp,0xc
1003f68e:	add    eax,0x2
1003f691:	mov    BYTE PTR [edx+0x1],cl
1003f694:	mov    DWORD PTR [esp+0x14],eax
1003f698:	mov    eax,DWORD PTR [esp+0x44]
1003f69c:	mov    BYTE PTR [eax+0x2],bl
1003f69f:	mov    esi,DWORD PTR [esp+0x10]
1003f6a3:	mov    eax,DWORD PTR [esp+0x18]
1003f6a7:	mov    ecx,DWORD PTR [esp+0x8c]
1003f6ae:	or     DWORD PTR [eax+0x48],ecx
1003f6b1:	mov    DWORD PTR [esp+0x2c],0x0
1003f6b9:	jmp    0x10040807
1003f6be:	mov    edi,DWORD PTR [esp+0x18]
1003f6c2:	mov    eax,DWORD PTR [edi+0x20]
1003f6c5:	mov    edx,DWORD PTR [esp+0x34]
1003f6c9:	mov    ebx,0x1
1003f6ce:	add    esi,ebx
1003f6d0:	xor    ebp,ebp
1003f6d2:	mov    DWORD PTR [esp+0x64],eax
1003f6d6:	mov    DWORD PTR [esp+0x10],esi
1003f6da:	mov    al,BYTE PTR [esi]
1003f6dc:	cmp    al,0x2a
1003f6de:	mov    DWORD PTR [esp+0x60],edx
1003f6e2:	mov    DWORD PTR [esp+0x28],ebp
1003f6e6:	mov    DWORD PTR [esp+0x24],0x5f
1003f6ee:	mov    DWORD PTR [esp+0x58],ebp
1003f6f2:	jne    0x1003f7d0
1003f6f8:	movzx  ebp,BYTE PTR [esi+0x1]
1003f6fc:	mov    ecx,DWORD PTR [edi+0xc]
1003f6ff:	test   BYTE PTR [ecx+ebp*1],0x2
1003f703:	je     0x1003f7ce
1003f709:	add    esi,0x1
1003f70c:	xor    edi,edi
1003f70e:	mov    ebx,0x1006d5c0
1003f713:	mov    ebp,esi
1003f715:	mov    DWORD PTR [esp+0x2c],edi
1003f719:	lea    esp,[esp+0x0]
1003f720:	add    esi,0x1
1003f723:	mov    DWORD PTR [esp+0x10],esi
1003f727:	movzx  edx,BYTE PTR [esi]
1003f72a:	test   BYTE PTR [edx+ecx*1],0x2
1003f72e:	jne    0x1003f720
1003f730:	mov    al,BYTE PTR [esi]
1003f732:	cmp    al,0x3a
1003f734:	je     0x10040945
1003f73a:	cmp    al,0x29
1003f73c:	jne    0x10040954
1003f742:	sub    esi,ebp
1003f744:	cmp    esi,DWORD PTR [edi*8+0x1006d5e8]
1003f74b:	jne    0x1003f75c
1003f74d:	push   esi
1003f74e:	push   ebx
1003f74f:	push   ebp
1003f750:	call   0x1004b5b6
1003f755:	add    esp,0xc
1003f758:	test   eax,eax
1003f75a:	je     0x1003f7a1
1003f75c:	mov    eax,DWORD PTR [edi*8+0x1006d5e8]
1003f763:	add    edi,0x1
1003f766:	cmp    edi,0x7
1003f769:	lea    ebx,[ebx+eax*1+0x1]
1003f76d:	jl     0x1003f744
1003f76f:	mov    eax,DWORD PTR [esp+0x20]
1003f773:	mov    DWORD PTR [eax],0x3c
1003f779:	mov    esi,DWORD PTR [esp+0x10]
1003f77d:	mov    edx,DWORD PTR [esp+0x9c]
1003f784:	mov    DWORD PTR [edx],esi
1003f786:	xor    eax,eax
1003f788:	mov    ecx,DWORD PTR [esp+0xfc]
1003f78f:	pop    edi
1003f790:	pop    esi
1003f791:	pop    ebp
1003f792:	pop    ebx
1003f793:	xor    ecx,esp
1003f795:	call   0x10041d97
1003f79a:	add    esp,0xf0
1003f7a0:	ret    
1003f7a1:	mov    ecx,DWORD PTR [esp+0x14]
1003f7a5:	mov    al,BYTE PTR [edi*8+0x1006d5ec]
1003f7ac:	mov    BYTE PTR [ecx],al
1003f7ae:	add    ecx,0x1
1003f7b1:	cmp    al,0x6e
1003f7b3:	mov    DWORD PTR [esp+0x14],ecx
1003f7b7:	jne    0x1003f7c4
1003f7b9:	mov    ecx,DWORD PTR [esp+0x18]
1003f7bd:	mov    DWORD PTR [ecx+0x4c],0x1
1003f7c4:	cmp    edi,0x7
1003f7c7:	jge    0x1003f76f
1003f7c9:	jmp    0x10040803
1003f7ce:	xor    ebp,ebp
1003f7d0:	cmp    al,0x3f
1003f7d2:	jne    0x1003fec0
1003f7d8:	add    esi,ebx
1003f7da:	mov    DWORD PTR [esp+0x10],esi
1003f7de:	mov    al,BYTE PTR [esi]
1003f7e0:	movzx  ecx,al
1003f7e3:	add    ecx,0xffffffdf
1003f7e6:	cmp    ecx,0x5b
1003f7e9:	ja     0x1004011b
1003f7ef:	movzx  edx,BYTE PTR [ecx+0x10040c2c]
1003f7f6:	jmp    DWORD PTR [edx*4+0x10040bf0]
1003f7fd:	add    esi,ebx
1003f7ff:	mov    DWORD PTR [esp+0x10],esi
1003f803:	mov    al,BYTE PTR [esi]
1003f805:	test   al,al
1003f807:	je     0x1003f820
1003f809:	lea    esp,[esp+0x0]
1003f810:	cmp    al,0x29
1003f812:	je     0x1003f82f
1003f814:	add    esi,ebx
1003f816:	mov    DWORD PTR [esp+0x10],esi
1003f81a:	mov    al,BYTE PTR [esi]
1003f81c:	test   al,al
1003f81e:	jne    0x1003f810
1003f820:	mov    ecx,DWORD PTR [esp+0x20]
1003f824:	mov    DWORD PTR [ecx],0x12
1003f82a:	jmp    0x1003f77d
1003f82f:	cmp    BYTE PTR [esi],0x0
1003f832:	je     0x1003f820
1003f834:	jmp    0x10040807
1003f839:	mov    DWORD PTR [esp+0x58],ebx
1003f83d:	add    esi,ebx
1003f83f:	jmp    0x10040253
1003f844:	cmp    BYTE PTR [esi+0x1],0x3f
1003f848:	mov    DWORD PTR [esp+0x24],0x60
1003f850:	jne    0x1003f86d
1003f852:	mov    al,BYTE PTR [esi+0x2]
1003f855:	cmp    al,0x3d
1003f857:	je     0x1004025f
1003f85d:	cmp    al,0x21
1003f85f:	je     0x1004025f
1003f865:	cmp    al,0x3c
1003f867:	je     0x1004025f
1003f86d:	mov    edx,DWORD PTR [esp+0x14]
1003f871:	mov    BYTE PTR [edx+0x3],0x64
1003f875:	mov    esi,DWORD PTR [esp+0x10]
1003f879:	mov    al,BYTE PTR [esi+0x1]
1003f87c:	or     ebp,0xffffffff
1003f87f:	cmp    al,0x52
1003f881:	mov    DWORD PTR [esp+0x28],0x3
1003f889:	mov    ebx,ebp
1003f88b:	jne    0x1003f8a8
1003f88d:	cmp    BYTE PTR [esi+0x2],0x26
1003f891:	lea    ecx,[esi+0x2]
1003f894:	jne    0x1003f8a8
1003f896:	mov    DWORD PTR [esp+0x10],ecx
1003f89a:	mov    BYTE PTR [edx+0x3],0x65
1003f89e:	mov    esi,DWORD PTR [esp+0x10]
1003f8a2:	mov    DWORD PTR [esp+0x54],ebp
1003f8a6:	jmp    0x1003f8ec
1003f8a8:	cmp    al,0x3c
1003f8aa:	jne    0x1003f8bd
1003f8ac:	add    esi,0x1
1003f8af:	mov    DWORD PTR [esp+0x54],0x3e
1003f8b7:	mov    DWORD PTR [esp+0x10],esi
1003f8bb:	jmp    0x1003f8ec
1003f8bd:	cmp    al,0x27
1003f8bf:	jne    0x1003f8d2
1003f8c1:	add    esi,0x1
1003f8c4:	mov    DWORD PTR [esp+0x54],0x27
1003f8cc:	mov    DWORD PTR [esp+0x10],esi
1003f8d0:	jmp    0x1003f8ec
1003f8d2:	cmp    al,0x2d
1003f8d4:	mov    DWORD PTR [esp+0x54],0x0
1003f8dc:	je     0x1003f8e2
1003f8de:	cmp    al,0x2b
1003f8e0:	jne    0x1003f8ec
1003f8e2:	add    esi,0x1
1003f8e5:	mov    DWORD PTR [esp+0x10],esi
1003f8e9:	movzx  ebx,BYTE PTR [esi]
1003f8ec:	movzx  eax,BYTE PTR [esi+0x1]
1003f8f0:	mov    edx,DWORD PTR [edi+0xc]
1003f8f3:	add    esi,0x1
1003f8f6:	test   BYTE PTR [eax+edx*1],0x10
1003f8fa:	je     0x10040963
1003f900:	mov    DWORD PTR [esp+0x10],esi
1003f904:	movzx  eax,BYTE PTR [esi]
1003f907:	xor    ecx,ecx
1003f909:	test   BYTE PTR [eax+edx*1],0x10
1003f90d:	mov    edi,esi
1003f90f:	mov    DWORD PTR [esp+0x1c],ecx
1003f913:	mov    DWORD PTR [esp+0x2c],edi
1003f917:	je     0x1003f952
1003f919:	mov    edx,DWORD PTR [esp+0x18]
1003f91d:	mov    edx,DWORD PTR [edx+0xc]
1003f920:	test   ecx,ecx
1003f922:	jl     0x1003f942
1003f924:	test   BYTE PTR [eax+0x1006e068],0x4
1003f92b:	je     0x1003f93a
1003f92d:	lea    ecx,[ecx+ecx*4]
1003f930:	lea    eax,[eax+ecx*2-0x30]
1003f934:	mov    DWORD PTR [esp+0x1c],eax
1003f938:	jmp    0x1003f93e
1003f93a:	mov    DWORD PTR [esp+0x1c],ebp
1003f93e:	mov    ecx,DWORD PTR [esp+0x1c]
1003f942:	add    esi,0x1
1003f945:	mov    DWORD PTR [esp+0x10],esi
1003f949:	movzx  eax,BYTE PTR [esi]
1003f94c:	test   BYTE PTR [eax+edx*1],0x10
1003f950:	jne    0x1003f920
1003f952:	mov    eax,DWORD PTR [esp+0x54]
1003f956:	mov    ebp,esi
1003f958:	sub    ebp,edi
1003f95a:	test   eax,eax
1003f95c:	jle    0x1003f970
1003f95e:	movzx  edx,BYTE PTR [esi]
1003f961:	add    esi,0x1
1003f964:	cmp    edx,eax
1003f966:	mov    DWORD PTR [esp+0x10],esi
1003f96a:	jne    0x10040972
1003f970:	mov    al,BYTE PTR [esi]
1003f972:	add    esi,0x1
1003f975:	cmp    al,0x29
1003f977:	mov    DWORD PTR [esp+0x10],esi
1003f97b:	jne    0x10040972
1003f981:	cmp    DWORD PTR [esp+0x38],0x0
1003f986:	jne    0x1004025f
1003f98c:	test   ebx,ebx
1003f98e:	jle    0x1003f9d9
1003f990:	test   ecx,ecx
1003f992:	jle    0x10040984
1003f998:	cmp    ebx,0x2d
1003f99b:	mov    eax,DWORD PTR [esp+0x18]
1003f99f:	jne    0x1003f9b1
1003f9a1:	mov    edx,DWORD PTR [eax+0x30]
1003f9a4:	sub    edx,ecx
1003f9a6:	add    edx,0x1
1003f9a9:	mov    DWORD PTR [esp+0x1c],edx
1003f9ad:	mov    ecx,edx
1003f9af:	jmp    0x1003f9b4
1003f9b1:	add    ecx,DWORD PTR [eax+0x30]
1003f9b4:	test   ecx,ecx
1003f9b6:	jle    0x10040993
1003f9bc:	cmp    ecx,DWORD PTR [eax+0x34]
1003f9bf:	jg     0x10040993
1003f9c5:	mov    eax,DWORD PTR [esp+0x14]
1003f9c9:	mov    edx,ecx
1003f9cb:	sar    edx,0x8
1003f9ce:	mov    BYTE PTR [eax+0x4],dl
1003f9d1:	mov    BYTE PTR [eax+0x5],cl
1003f9d4:	jmp    0x1004025f
1003f9d9:	mov    ebx,DWORD PTR [esp+0x18]
1003f9dd:	cmp    DWORD PTR [ebx+0x28],0x0
1003f9e1:	mov    edi,DWORD PTR [ebx+0x24]
1003f9e4:	mov    DWORD PTR [esp+0x3c],0x0
1003f9ec:	jle    0x1003fa1b
1003f9ee:	mov    esi,DWORD PTR [esp+0x3c]
1003f9f2:	mov    ecx,DWORD PTR [esp+0x2c]
1003f9f6:	push   ebp
1003f9f7:	lea    eax,[edi+0x2]
1003f9fa:	push   eax
1003f9fb:	push   ecx
1003f9fc:	call   0x1004b5b6
1003fa01:	add    esp,0xc
1003fa04:	test   eax,eax
1003fa06:	je     0x1003fa17
1003fa08:	add    edi,DWORD PTR [ebx+0x2c]
1003fa0b:	add    esi,0x1
1003fa0e:	cmp    esi,DWORD PTR [ebx+0x28]
1003fa11:	mov    DWORD PTR [esp+0x3c],esi
1003fa15:	jl     0x1003f9f2
1003fa17:	mov    esi,DWORD PTR [esp+0x10]
1003fa1b:	mov    edx,DWORD PTR [esp+0x3c]
1003fa1f:	cmp    edx,DWORD PTR [ebx+0x28]
1003fa22:	jge    0x1003fa3e
1003fa24:	movzx  ecx,BYTE PTR [edi+0x1]
1003fa28:	mov    ch,BYTE PTR [edi]
1003fa2a:	mov    eax,DWORD PTR [esp+0x14]
1003fa2e:	mov    BYTE PTR [eax+0x5],cl
1003fa31:	mov    edx,ecx
1003fa33:	sar    edx,0x8
1003fa36:	mov    BYTE PTR [eax+0x4],dl
1003fa39:	jmp    0x1004025f
1003fa3e:	mov    eax,DWORD PTR [esp+0x34]
1003fa42:	shr    eax,0x3
1003fa45:	and    eax,0x1
1003fa48:	push   eax
1003fa49:	mov    edi,ebx
1003fa4b:	mov    ebx,DWORD PTR [esp+0x30]
1003fa4f:	push   ebp
1003fa50:	push   edi
1003fa51:	mov    eax,esi
1003fa53:	call   0x1003cfe0
1003fa58:	add    esp,0xc
1003fa5b:	test   eax,eax
1003fa5d:	jle    0x1003fa73
1003fa5f:	mov    ecx,DWORD PTR [esp+0x14]
1003fa63:	mov    edx,eax
1003fa65:	sar    edx,0x8
1003fa68:	mov    BYTE PTR [ecx+0x4],dl
1003fa6b:	mov    BYTE PTR [ecx+0x5],al
1003fa6e:	jmp    0x1004025f
1003fa73:	cmp    DWORD PTR [esp+0x54],0x0
1003fa78:	jne    0x100409a2
1003fa7e:	cmp    BYTE PTR [ebx],0x52
1003fa81:	jne    0x1003fad0
1003fa83:	mov    eax,0x1
1003fa88:	xor    ecx,ecx
1003fa8a:	cmp    ebp,eax
1003fa8c:	jle    0x1003fab3
1003fa8e:	mov    edi,edi
1003fa90:	movzx  edx,BYTE PTR [eax+ebx*1]
1003fa94:	test   BYTE PTR [edx+0x1006e068],0x4
1003fa9b:	je     0x100409b1
1003faa1:	add    eax,0x1
1003faa4:	cmp    eax,ebp
1003faa6:	lea    ecx,[ecx+ecx*4]
1003faa9:	lea    ecx,[edx+ecx*2-0x30]
1003faad:	jl     0x1003fa90
1003faaf:	test   ecx,ecx
1003fab1:	jne    0x1003fab8
1003fab3:	mov    ecx,0xffff
1003fab8:	mov    eax,DWORD PTR [esp+0x14]
1003fabc:	mov    edx,ecx
1003fabe:	sar    edx,0x8
1003fac1:	mov    BYTE PTR [eax+0x3],0x65
1003fac5:	mov    BYTE PTR [eax+0x4],dl
1003fac8:	mov    BYTE PTR [eax+0x5],cl
1003facb:	jmp    0x1004025f
1003fad0:	cmp    ebp,0x6
1003fad3:	jne    0x1003fafd
1003fad5:	push   ebp
1003fad6:	push   0x10072cd4
1003fadb:	push   ebx
1003fadc:	call   0x1004b5b6
1003fae1:	add    esp,0xc
1003fae4:	test   eax,eax
1003fae6:	jne    0x1003fafd
1003fae8:	mov    eax,DWORD PTR [esp+0x14]
1003faec:	mov    BYTE PTR [eax+0x3],0x66
1003faf0:	mov    DWORD PTR [esp+0x28],0x1
1003faf8:	jmp    0x1004025f
1003fafd:	mov    eax,DWORD PTR [esp+0x1c]
1003fb01:	test   eax,eax
1003fb03:	jle    0x100409c0
1003fb09:	cmp    eax,DWORD PTR [edi+0x34]
1003fb0c:	jg     0x100409c0
1003fb12:	mov    ecx,DWORD PTR [esp+0x14]
1003fb16:	mov    edx,eax
1003fb18:	sar    edx,0x8
1003fb1b:	mov    BYTE PTR [ecx+0x4],dl
1003fb1e:	mov    BYTE PTR [ecx+0x5],al
1003fb21:	jmp    0x1004025f
1003fb26:	mov    DWORD PTR [esp+0x24],0x58
1003fb2e:	add    esi,ebx
1003fb30:	jmp    0x1004025b
1003fb35:	add    esi,ebx
1003fb37:	mov    DWORD PTR [esp+0x10],esi
1003fb3b:	cmp    BYTE PTR [esi],0x29
1003fb3e:	jne    0x1003fb56
1003fb40:	mov    eax,DWORD PTR [esp+0x14]
1003fb44:	mov    BYTE PTR [eax],0x6d
1003fb47:	add    eax,ebx
1003fb49:	mov    DWORD PTR [esp+0x14],eax
1003fb4d:	mov    DWORD PTR [esp+0x2c],ebp
1003fb51:	jmp    0x10040803
1003fb56:	mov    DWORD PTR [esp+0x24],0x59
1003fb5e:	jmp    0x1004025f
1003fb63:	mov    cl,BYTE PTR [esi+0x1]
1003fb66:	cmp    cl,0x21
1003fb69:	je     0x1003fc25
1003fb6f:	cmp    cl,0x3d
1003fb72:	je     0x1003fc15
1003fb78:	mov    edx,DWORD PTR [edi+0xc]
1003fb7b:	movzx  ecx,cl
1003fb7e:	test   BYTE PTR [ecx+edx*1],0x10
1003fb82:	je     0x100409d5
1003fb88:	mov    ebp,DWORD PTR [edi+0xc]
1003fb8b:	sub    al,0x3c
1003fb8d:	neg    al
1003fb8f:	sbb    eax,eax
1003fb91:	add    esi,ebx
1003fb93:	mov    DWORD PTR [esp+0x10],esi
1003fb97:	movzx  ecx,BYTE PTR [esi]
1003fb9a:	and    eax,0xffffffe9
1003fb9d:	add    eax,0x3e
1003fba0:	test   BYTE PTR [ecx+ebp*1],0x10
1003fba4:	mov    edx,esi
1003fba6:	mov    DWORD PTR [esp+0x2c],edx
1003fbaa:	je     0x1003fbbf
1003fbac:	mov    ecx,ebp
1003fbae:	mov    edi,edi
1003fbb0:	add    esi,ebx
1003fbb2:	mov    DWORD PTR [esp+0x10],esi
1003fbb6:	movzx  edi,BYTE PTR [esi]
1003fbb9:	test   BYTE PTR [edi+ecx*1],0x10
1003fbbd:	jne    0x1003fbb0
1003fbbf:	mov    edi,esi
1003fbc1:	sub    edi,edx
1003fbc3:	cmp    DWORD PTR [esp+0x38],0x0
1003fbc8:	mov    DWORD PTR [esp+0x28],edi
1003fbcc:	je     0x1003fd19
1003fbd2:	movzx  edx,BYTE PTR [esi]
1003fbd5:	cmp    edx,eax
1003fbd7:	jne    0x10040a04
1003fbdd:	mov    ecx,DWORD PTR [esp+0x18]
1003fbe1:	cmp    DWORD PTR [ecx+0x28],0x2710
1003fbe8:	jge    0x10040a13
1003fbee:	lea    eax,[edi+0x3]
1003fbf1:	cmp    eax,DWORD PTR [ecx+0x2c]
1003fbf4:	jle    0x1003fe6d
1003fbfa:	cmp    edi,0x20
1003fbfd:	mov    DWORD PTR [ecx+0x2c],eax
1003fc00:	jle    0x1003fe6d
1003fc06:	mov    eax,DWORD PTR [esp+0x20]
1003fc0a:	mov    DWORD PTR [eax],0x30
1003fc10:	jmp    0x1003f77d
1003fc15:	mov    DWORD PTR [esp+0x24],0x5a
1003fc1d:	add    esi,0x2
1003fc20:	jmp    0x1004025b
1003fc25:	mov    DWORD PTR [esp+0x24],0x5b
1003fc2d:	add    esi,0x2
1003fc30:	jmp    0x1004025b
1003fc35:	mov    DWORD PTR [esp+0x24],0x5d
1003fc3d:	add    esi,ebx
1003fc3f:	jmp    0x1004025b
1003fc44:	mov    edi,DWORD PTR [esp+0x14]
1003fc48:	mov    BYTE PTR [edi],0x53
1003fc4b:	mov    esi,DWORD PTR [esp+0x10]
1003fc4f:	add    esi,ebx
1003fc51:	mov    DWORD PTR [esp+0x10],esi
1003fc55:	movzx  ecx,BYTE PTR [esi]
1003fc58:	mov    DWORD PTR [esp+0x74],edi
1003fc5c:	mov    edx,0x4
1003fc61:	add    edi,ebx
1003fc63:	xor    eax,eax
1003fc65:	test   BYTE PTR [ecx+0x1006e068],dl
1003fc6b:	mov    DWORD PTR [esp+0x94],ebx
1003fc72:	je     0x1003fc8c
1003fc74:	add    esi,ebx
1003fc76:	lea    eax,[eax+eax*4]
1003fc79:	lea    eax,[ecx+eax*2-0x30]
1003fc7d:	mov    DWORD PTR [esp+0x10],esi
1003fc81:	movzx  ecx,BYTE PTR [esi]
1003fc84:	test   BYTE PTR [ecx+0x1006e068],dl
1003fc8a:	jne    0x1003fc74
1003fc8c:	cmp    BYTE PTR [esi],0x29
1003fc8f:	jne    0x100409e6
1003fc95:	cmp    eax,0xff
1003fc9a:	jg     0x100409f5
1003fca0:	mov    BYTE PTR [edi],al
1003fca2:	mov    ecx,DWORD PTR [esp+0x10]
1003fca6:	mov    eax,DWORD PTR [esp+0x18]
1003fcaa:	sub    ecx,DWORD PTR [eax+0x18]
1003fcad:	add    edi,ebx
1003fcaf:	add    ecx,ebx
1003fcb1:	sar    ecx,0x8
1003fcb4:	mov    BYTE PTR [edi],cl
1003fcb6:	mov    cl,BYTE PTR [esp+0x10]
1003fcba:	sub    cl,BYTE PTR [eax+0x18]
1003fcbd:	mov    BYTE PTR [edi+0x2],0x0
1003fcc1:	add    cl,bl
1003fcc3:	mov    BYTE PTR [edi+0x1],cl
1003fcc6:	mov    BYTE PTR [edi+0x3],0x0
1003fcca:	add    edi,edx
1003fccc:	mov    DWORD PTR [esp+0x14],edi
1003fcd0:	mov    DWORD PTR [esp+0x2c],0x0
1003fcd8:	jmp    0x10040803
1003fcdd:	add    esi,ebx
1003fcdf:	mov    DWORD PTR [esp+0x10],esi
1003fce3:	mov    al,BYTE PTR [esi]
1003fce5:	cmp    al,0x3d
1003fce7:	je     0x1003fd04
1003fce9:	cmp    al,0x3e
1003fceb:	je     0x1003fd04
1003fced:	cmp    al,0x3c
1003fcef:	je     0x1003fb88
1003fcf5:	mov    eax,DWORD PTR [esp+0x20]
1003fcf9:	mov    DWORD PTR [eax],0x29
1003fcff:	jmp    0x1003f77d
1003fd04:	xor    edx,edx
1003fd06:	cmp    al,0x3e
1003fd08:	sete   dl
1003fd0b:	mov    ebp,0x29
1003fd10:	mov    DWORD PTR [esp+0x28],edx
1003fd14:	jmp    0x100404e5
1003fd19:	mov    eax,DWORD PTR [esp+0x18]
1003fd1d:	mov    ebx,DWORD PTR [eax+0x24]
1003fd20:	mov    eax,DWORD PTR [eax+0x28]
1003fd23:	test   eax,eax
1003fd25:	mov    DWORD PTR [esp+0x3c],0x0
1003fd2d:	mov    DWORD PTR [esp+0x8c],eax
1003fd34:	jle    0x1003fe37
1003fd3a:	lea    ebx,[ebx+0x0]
1003fd40:	cmp    edi,0x4
1003fd43:	mov    edx,DWORD PTR [esp+0x2c]
1003fd47:	mov    eax,edi
1003fd49:	lea    ecx,[ebx+0x2]
1003fd4c:	jb     0x1003fd64
1003fd4e:	mov    edi,edi
1003fd50:	mov    ebp,DWORD PTR [edx]
1003fd52:	cmp    ebp,DWORD PTR [ecx]
1003fd54:	jne    0x1003fd6c
1003fd56:	sub    eax,0x4
1003fd59:	add    ecx,0x4
1003fd5c:	add    edx,0x4
1003fd5f:	cmp    eax,0x4
1003fd62:	jae    0x1003fd50
1003fd64:	test   eax,eax
1003fd66:	je     0x1003fdd1
1003fd6c:	movzx  edi,BYTE PTR [edx]
1003fd6f:	movzx  ebp,BYTE PTR [ecx]
1003fd72:	sub    edi,ebp
1003fd74:	jne    0x1003fdbb
1003fd76:	sub    eax,0x1
1003fd79:	add    ecx,0x1
1003fd7c:	add    edx,0x1
1003fd7f:	test   eax,eax
1003fd81:	je     0x1003fdcd
1003fd83:	movzx  edi,BYTE PTR [edx]
1003fd86:	movzx  ebp,BYTE PTR [ecx]
1003fd89:	sub    edi,ebp
1003fd8b:	jne    0x1003fdbb
1003fd8d:	sub    eax,0x1
1003fd90:	add    ecx,0x1
1003fd93:	add    edx,0x1
1003fd96:	test   eax,eax
1003fd98:	je     0x1003fdcd
1003fd9a:	movzx  edi,BYTE PTR [edx]
1003fd9d:	movzx  ebp,BYTE PTR [ecx]
1003fda0:	sub    edi,ebp
1003fda2:	jne    0x1003fdbb
1003fda4:	sub    eax,0x1
1003fda7:	add    ecx,0x1
1003fdaa:	add    edx,0x1
1003fdad:	test   eax,eax
1003fdaf:	je     0x1003fdcd
1003fdb1:	movzx  edi,BYTE PTR [edx]
1003fdb4:	movzx  eax,BYTE PTR [ecx]
1003fdb7:	sub    edi,eax
1003fdb9:	je     0x1003fdcd
1003fdbb:	test   edi,edi
1003fdbd:	mov    edi,DWORD PTR [esp+0x28]
1003fdc1:	mov    eax,0x1
1003fdc6:	jg     0x1003fdd3
1003fdc8:	or     eax,0xffffffff
1003fdcb:	jmp    0x1003fdd3
1003fdcd:	mov    edi,DWORD PTR [esp+0x28]
1003fdd1:	xor    eax,eax
1003fdd3:	test   eax,eax
1003fdd5:	jne    0x1003fdf6
1003fdd7:	cmp    BYTE PTR [ebx+edi*1+0x2],al
1003fddb:	jne    0x1003fe15
1003fddd:	test   DWORD PTR [esp+0x34],0x80000
1003fde5:	jne    0x1003fdf8
1003fde7:	mov    ecx,DWORD PTR [esp+0x20]
1003fdeb:	mov    DWORD PTR [ecx],0x2b
1003fdf1:	jmp    0x1003f77d
1003fdf6:	jl     0x1003fe15
1003fdf8:	mov    eax,DWORD PTR [esp+0x3c]
1003fdfc:	mov    ecx,DWORD PTR [esp+0x18]
1003fe00:	add    ebx,DWORD PTR [ecx+0x2c]
1003fe03:	add    eax,0x1
1003fe06:	cmp    eax,DWORD PTR [ecx+0x28]
1003fe09:	mov    DWORD PTR [esp+0x3c],eax
1003fe0d:	jl     0x1003fd40
1003fe13:	jmp    0x1003fe37
1003fe15:	mov    ecx,DWORD PTR [esp+0x18]
1003fe19:	mov    eax,DWORD PTR [ecx+0x2c]
1003fe1c:	mov    ecx,DWORD PTR [esp+0x8c]
1003fe23:	sub    ecx,DWORD PTR [esp+0x3c]
1003fe27:	imul   ecx,eax
1003fe2a:	push   ecx
1003fe2b:	add    eax,ebx
1003fe2d:	push   ebx
1003fe2e:	push   eax
1003fe2f:	call   0x10044410
1003fe34:	add    esp,0xc
1003fe37:	mov    eax,DWORD PTR [esp+0x18]
1003fe3b:	mov    edx,DWORD PTR [eax+0x30]
1003fe3e:	mov    ecx,DWORD PTR [esp+0x2c]
1003fe42:	add    edx,0x1
1003fe45:	sar    edx,0x8
1003fe48:	mov    BYTE PTR [ebx],dl
1003fe4a:	mov    al,BYTE PTR [eax+0x30]
1003fe4d:	push   edi
1003fe4e:	push   ecx
1003fe4f:	lea    edx,[ebx+0x2]
1003fe52:	add    al,0x1
1003fe54:	push   edx
1003fe55:	mov    BYTE PTR [ebx+0x1],al
1003fe58:	call   0x10043ed0
1003fe5d:	mov    ecx,DWORD PTR [esp+0x24]
1003fe61:	mov    BYTE PTR [ebx+edi*1+0x2],0x0
1003fe66:	mov    esi,DWORD PTR [esp+0x1c]
1003fe6a:	add    esp,0xc
1003fe6d:	mov    edi,DWORD PTR [esp+0x18]
1003fe71:	add    esi,0x1
1003fe74:	add    DWORD PTR [ecx+0x28],0x1
1003fe78:	mov    DWORD PTR [esp+0x10],esi
1003fe7c:	add    DWORD PTR [edi+0x30],0x1
1003fe80:	mov    ecx,DWORD PTR [edi+0x30]
1003fe83:	mov    eax,DWORD PTR [esp+0x14]
1003fe87:	sar    ecx,0x8
1003fe8a:	mov    BYTE PTR [eax+0x3],cl
1003fe8d:	mov    dl,BYTE PTR [edi+0x30]
1003fe90:	mov    BYTE PTR [eax+0x4],dl
1003fe93:	mov    DWORD PTR [esp+0x28],0x2
1003fe9b:	jmp    0x1004025f
1003fea0:	mov    ebp,0x29
1003fea5:	mov    DWORD PTR [esp+0x28],ebx
1003fea9:	jmp    0x100404e5
1003feae:	add    esi,ebx
1003feb0:	mov    DWORD PTR [esp+0x10],esi
1003feb4:	mov    ebp,0x29
1003feb9:	mov    ebx,edi
1003febb:	jmp    0x1004004b
1003fec0:	test   edx,0x1000
1003fec6:	je     0x1003fe7c
1003fec8:	mov    DWORD PTR [esp+0x24],0x5e
1003fed0:	jmp    0x1004025f
1003fed5:	mov    ebx,DWORD PTR [esp+0x20]
1003fed9:	mov    DWORD PTR [esp+0x7c],esi
1003fedd:	mov    esi,DWORD PTR [esp+0x18]
1003fee1:	mov    eax,DWORD PTR [esi+0x30]
1003fee4:	xor    edi,edi
1003fee6:	push   edi
1003fee7:	push   eax
1003fee8:	mov    eax,DWORD PTR [esp+0x3c]
1003feec:	lea    ecx,[esp+0x18]
1003fef0:	push   ebx
1003fef1:	push   ecx
1003fef2:	call   0x1003ca70
1003fef7:	add    esp,0x10
1003fefa:	cmp    DWORD PTR [ebx],edi
1003fefc:	jne    0x1003f779
1003ff02:	cmp    eax,edi
1003ff04:	jge    0x1003e1de
1003ff0a:	mov    ecx,eax
1003ff0c:	neg    ecx
1003ff0e:	cmp    ecx,0x1a
1003ff11:	jne    0x1003ff38
1003ff13:	mov    esi,DWORD PTR [esp+0x10]
1003ff17:	cmp    BYTE PTR [esi+0x1],0x5c
1003ff1b:	jne    0x1003ff2b
1003ff1d:	cmp    BYTE PTR [esi+0x2],0x45
1003ff21:	jne    0x1003ff2b
1003ff23:	add    esi,0x2
1003ff26:	jmp    0x10040807
1003ff2b:	mov    DWORD PTR [esp+0x50],0x1
1003ff33:	jmp    0x10040807
1003ff38:	cmp    ecx,0x19
1003ff3b:	je     0x10040803
1003ff41:	mov    edx,DWORD PTR [esp+0x30]
1003ff45:	cmp    edx,0xfffffffe
1003ff48:	jne    0x1003ff5b
1003ff4a:	cmp    ecx,0x5
1003ff4d:	jle    0x1003ff5b
1003ff4f:	cmp    ecx,0x17
1003ff52:	jge    0x1003ff5b
1003ff54:	or     edx,0xffffffff
1003ff57:	mov    DWORD PTR [esp+0x30],edx
1003ff5b:	cmp    ecx,0x1b
1003ff5e:	mov    DWORD PTR [esp+0x5c],edx
1003ff62:	mov    edx,DWORD PTR [esp+0x4c]
1003ff66:	mov    DWORD PTR [esp+0x68],edx
1003ff6a:	jne    0x10040498
1003ff70:	mov    eax,DWORD PTR [esi+0x20]
1003ff73:	mov    esi,DWORD PTR [esp+0x10]
1003ff77:	add    esi,0x1
1003ff7a:	mov    DWORD PTR [esp+0x10],esi
1003ff7e:	mov    cl,BYTE PTR [esi]
1003ff80:	sub    cl,0x3c
1003ff83:	neg    cl
1003ff85:	lea    edx,[esi+0x1]
1003ff88:	mov    DWORD PTR [esp+0x64],eax
1003ff8c:	mov    al,BYTE PTR [edx]
1003ff8e:	mov    DWORD PTR [esp+0x28],edi
1003ff92:	mov    DWORD PTR [esp+0x58],edi
1003ff96:	sbb    ecx,ecx
1003ff98:	and    ecx,0xffffffe9
1003ff9b:	add    ecx,0x3e
1003ff9e:	cmp    al,0x2b
1003ffa0:	mov    ebp,ecx
1003ffa2:	je     0x10040005
1003ffa4:	cmp    al,0x2d
1003ffa6:	je     0x10040005
1003ffa8:	mov    ecx,edx
1003ffaa:	mov    al,BYTE PTR [ecx]
1003ffac:	test   al,al
1003ffae:	mov    edi,0x1
1003ffb3:	je     0x1003ffda
1003ffb5:	movzx  eax,al
1003ffb8:	cmp    eax,ebp
1003ffba:	je     0x1003ffda
1003ffbc:	mov    ebx,DWORD PTR [esp+0x18]
1003ffc0:	mov    ebx,DWORD PTR [ebx+0xc]
1003ffc3:	mov    al,BYTE PTR [eax+ebx*1]
1003ffc6:	test   al,0x4
1003ffc8:	jne    0x1003ffcc
1003ffca:	xor    edi,edi
1003ffcc:	test   al,0x10
1003ffce:	je     0x1003ffda
1003ffd0:	mov    al,BYTE PTR [ecx+0x1]
1003ffd3:	add    ecx,0x1
1003ffd6:	test   al,al
1003ffd8:	jne    0x1003ffb5
1003ffda:	movzx  eax,BYTE PTR [ecx]
1003ffdd:	cmp    eax,ebp
1003ffdf:	mov    ebx,DWORD PTR [esp+0x18]
1003ffe3:	je     0x1003fff4
1003ffe5:	mov    ecx,DWORD PTR [esp+0x20]
1003ffe9:	mov    DWORD PTR [ecx],0x39
1003ffef:	jmp    0x10040807
1003fff4:	test   edi,edi
1003fff6:	jne    0x10040045
1003fff8:	mov    DWORD PTR [esp+0x28],0x1
10040000:	jmp    0x100404e1
10040005:	movzx  edi,BYTE PTR [esi+0x2]
10040009:	lea    eax,[esi+0x2]
1004000c:	mov    cl,0x4
1004000e:	test   BYTE PTR [edi+0x1006e068],cl
10040014:	je     0x1004002f
10040016:	jmp    0x10040020
10040018:	lea    esp,[esp+0x0]
1004001f:	nop
10040020:	movzx  edi,BYTE PTR [eax+0x1]
10040024:	add    eax,0x1
10040027:	test   BYTE PTR [edi+0x1006e068],cl
1004002d:	jne    0x10040020
1004002f:	movzx  eax,BYTE PTR [eax]
10040032:	cmp    eax,ebp
10040034:	je     0x10040041
10040036:	mov    DWORD PTR [ebx],0x39
1004003c:	jmp    0x10040807
10040041:	mov    ebx,DWORD PTR [esp+0x18]
10040045:	mov    esi,edx
10040047:	mov    DWORD PTR [esp+0x10],esi
1004004b:	mov    al,BYTE PTR [esi]
1004004d:	movzx  edx,al
10040050:	cmp    edx,0x2b
10040053:	jne    0x10040077
10040055:	add    esi,0x1
10040058:	mov    DWORD PTR [esp+0x10],esi
1004005c:	movzx  ecx,BYTE PTR [esi]
1004005f:	test   BYTE PTR [ecx+0x1006e068],0x4
10040066:	jne    0x10040094
10040068:	mov    edx,DWORD PTR [esp+0x20]
1004006c:	mov    DWORD PTR [edx],0x3f
10040072:	jmp    0x1003f77d
10040077:	cmp    edx,0x2d
1004007a:	jne    0x10040094
1004007c:	movzx  ecx,BYTE PTR [esi+0x1]
10040080:	test   BYTE PTR [ecx+0x1006e068],0x4
10040087:	je     0x1004011d
1004008d:	add    esi,0x1
10040090:	mov    DWORD PTR [esp+0x10],esi
10040094:	movzx  eax,BYTE PTR [esi]
10040097:	test   BYTE PTR [eax+0x1006e068],0x4
1004009e:	mov    DWORD PTR [esp+0x1c],0x0
100400a6:	je     0x100400d2
100400a8:	jmp    0x100400b0
100400aa:	lea    ebx,[ebx+0x0]
100400b0:	mov    ecx,DWORD PTR [esp+0x1c]
100400b4:	lea    ecx,[ecx+ecx*4]
100400b7:	add    esi,0x1
100400ba:	lea    eax,[eax+ecx*2-0x30]
100400be:	mov    DWORD PTR [esp+0x1c],eax
100400c2:	mov    DWORD PTR [esp+0x10],esi
100400c6:	movzx  eax,BYTE PTR [esi]
100400c9:	test   BYTE PTR [eax+0x1006e068],0x4
100400d0:	jne    0x100400b0
100400d2:	movzx  ecx,BYTE PTR [esi]
100400d5:	cmp    ecx,ebp
100400d7:	jne    0x10040a64
100400dd:	cmp    edx,0x2d
100400e0:	jne    0x10040473
100400e6:	mov    eax,DWORD PTR [esp+0x1c]
100400ea:	test   eax,eax
100400ec:	je     0x10040a73
100400f2:	mov    edx,DWORD PTR [esp+0x18]
100400f6:	mov    ecx,DWORD PTR [edx+0x30]
100400f9:	sub    ecx,eax
100400fb:	add    ecx,0x1
100400fe:	mov    eax,ecx
10040100:	test   eax,eax
10040102:	mov    DWORD PTR [esp+0x1c],eax
10040106:	jg     0x100405d2
1004010c:	mov    eax,DWORD PTR [esp+0x20]
10040110:	mov    DWORD PTR [eax],0xf
10040116:	jmp    0x1003f77d
1004011b:	mov    ebx,edi
1004011d:	xor    edi,edi
1004011f:	xor    edx,edx
10040121:	cmp    al,0x29
10040123:	mov    DWORD PTR [esp+0x3c],edi
10040127:	mov    DWORD PTR [esp+0x54],edx
1004012b:	lea    ecx,[esp+0x54]
1004012f:	je     0x1004019c
10040131:	mov    edx,0x10
10040136:	cmp    al,0x3a
10040138:	je     0x10040194
1004013a:	movzx  eax,al
1004013d:	add    esi,0x1
10040140:	sub    eax,0x2d
10040143:	cmp    eax,0x4b
10040146:	mov    DWORD PTR [esp+0x10],esi
1004014a:	ja     0x10040a22
10040150:	movzx  eax,BYTE PTR [eax+0x10040cac]
10040157:	jmp    DWORD PTR [eax*4+0x10040c88]
1004015e:	lea    ecx,[esp+0x3c]
10040162:	jmp    0x1004018e
10040164:	or     DWORD PTR [ecx],0x80000
1004016a:	or     DWORD PTR [ebx+0x44],edx
1004016d:	jmp    0x1004018e
1004016f:	or     DWORD PTR [ecx],0x1
10040172:	jmp    0x1004018e
10040174:	or     DWORD PTR [ecx],0x2
10040177:	jmp    0x1004018e
10040179:	or     DWORD PTR [ecx],0x4
1004017c:	jmp    0x1004018e
1004017e:	or     DWORD PTR [ecx],0x8
10040181:	jmp    0x1004018e
10040183:	or     DWORD PTR [ecx],0x200
10040189:	jmp    0x1004018e
1004018b:	or     DWORD PTR [ecx],0x40
1004018e:	mov    al,BYTE PTR [esi]
10040190:	cmp    al,0x29
10040192:	jne    0x10040136
10040194:	mov    edx,DWORD PTR [esp+0x54]
10040198:	mov    edi,DWORD PTR [esp+0x3c]
1004019c:	mov    ebp,DWORD PTR [esp+0x34]
100401a0:	or     edx,ebp
100401a2:	not    edi
100401a4:	and    edx,edi
100401a6:	cmp    BYTE PTR [esi],0x29
100401a9:	mov    eax,edx
100401ab:	mov    DWORD PTR [esp+0x60],eax
100401af:	jne    0x10040250
100401b5:	mov    edx,DWORD PTR [ebx+0x14]
100401b8:	mov    ecx,DWORD PTR [esp+0x14]
100401bc:	add    edx,0x3
100401bf:	cmp    ecx,edx
100401c1:	jne    0x100401ed
100401c3:	mov    edx,DWORD PTR [esp+0x38]
100401c7:	test   edx,edx
100401c9:	je     0x100401d0
100401cb:	cmp    DWORD PTR [edx],0x6
100401ce:	jne    0x100401ed
100401d0:	mov    ecx,DWORD PTR [esp+0xa8]
100401d7:	mov    DWORD PTR [ebx+0x40],eax
100401da:	mov    DWORD PTR [esp+0x34],eax
100401de:	mov    DWORD PTR [ecx],eax
100401e0:	mov    DWORD PTR [esp+0x2c],0x0
100401e8:	jmp    0x10040807
100401ed:	mov    edx,eax
100401ef:	xor    edx,ebp
100401f1:	test   dl,0x7
100401f4:	je     0x1004020e
100401f6:	mov    BYTE PTR [ecx],0x19
100401f9:	mov    dl,al
100401fb:	add    ecx,0x1
100401fe:	and    dl,0x7
10040201:	mov    BYTE PTR [ecx],dl
10040203:	mov    esi,DWORD PTR [esp+0x10]
10040207:	add    ecx,0x1
1004020a:	mov    DWORD PTR [esp+0x14],ecx
1004020e:	mov    ecx,eax
10040210:	shr    ecx,0x9
10040213:	and    ecx,0x1
10040216:	mov    DWORD PTR [esp+0xa4],ecx
1004021d:	xor    ecx,0x1
10040220:	mov    DWORD PTR [esp+0xa0],ecx
10040227:	mov    ecx,eax
10040229:	and    ecx,0x1
1004022c:	shl    ecx,0x8
1004022f:	mov    DWORD PTR [esp+0x84],ecx
10040236:	mov    ecx,DWORD PTR [esp+0xa8]
1004023d:	mov    DWORD PTR [esp+0x34],eax
10040241:	mov    DWORD PTR [ecx],eax
10040243:	mov    DWORD PTR [esp+0x2c],0x0
1004024b:	jmp    0x10040807
10040250:	add    esi,0x1
10040253:	mov    DWORD PTR [esp+0x24],0x5e
1004025b:	mov    DWORD PTR [esp+0x10],esi
1004025f:	mov    eax,DWORD PTR [esp+0x24]
10040263:	mov    ebx,DWORD PTR [esp+0x14]
10040267:	mov    ecx,DWORD PTR [esp+0x18]
1004026b:	xor    edx,edx
1004026d:	cmp    eax,0x5d
10040270:	setl   dl
10040273:	mov    BYTE PTR [ebx],al
10040275:	mov    edi,DWORD PTR [ecx+0x48]
10040278:	mov    DWORD PTR [esp+0x44],ebx
1004027c:	mov    DWORD PTR [esp+0x6c],0x0
10040284:	sub    edx,0x1
10040287:	and    edx,ebx
10040289:	cmp    eax,0x5a
1004028c:	mov    DWORD PTR [esp+0x2c],edx
10040290:	je     0x1004029b
10040292:	cmp    eax,0x5b
10040295:	je     0x1004029b
10040297:	xor    eax,eax
10040299:	jmp    0x100402a0
1004029b:	mov    eax,0x1
100402a0:	mov    esi,DWORD PTR [esp+0x38]
100402a4:	mov    ebp,DWORD PTR [esp+0x20]
100402a8:	mov    edx,esi
100402aa:	neg    edx
100402ac:	sbb    edx,edx
100402ae:	lea    ecx,[esp+0x6c]
100402b2:	and    edx,ecx
100402b4:	mov    ecx,DWORD PTR [esp+0x98]
100402bb:	push   edx
100402bc:	mov    edx,DWORD PTR [esp+0x1c]
100402c0:	push   edx
100402c1:	push   ecx
100402c2:	lea    edx,[esp+0x84]
100402c9:	push   edx
100402ca:	mov    edx,DWORD PTR [esp+0x38]
100402ce:	lea    ecx,[esp+0xa0]
100402d5:	push   ecx
100402d6:	mov    ecx,DWORD PTR [esp+0x6c]
100402da:	push   edx
100402db:	push   ecx
100402dc:	mov    ecx,DWORD PTR [esp+0x50]
100402e0:	push   eax
100402e1:	push   ebp
100402e2:	lea    edx,[esp+0x34]
100402e6:	push   edx
100402e7:	mov    edx,DWORD PTR [esp+0x88]
100402ee:	lea    eax,[esp+0x6c]
100402f2:	push   eax
100402f3:	and    ecx,0x7
100402f6:	push   ecx
100402f7:	push   edx
100402f8:	call   0x10040d00
100402fd:	add    esp,0x34
10040300:	test   eax,eax
10040302:	je     0x1003f779
10040308:	cmp    DWORD PTR [esp+0x24],0x60
1004030d:	jne    0x10040340
1004030f:	test   esi,esi
10040311:	jne    0x10040340
10040313:	mov    eax,ebx
10040315:	xor    ecx,ecx
10040317:	xor    edx,edx
10040319:	mov    dh,BYTE PTR [eax+0x1]
1004031c:	add    ecx,0x1
1004031f:	mov    dl,BYTE PTR [eax+0x2]
10040322:	add    eax,edx
10040324:	cmp    BYTE PTR [eax],0x55
10040327:	jne    0x10040317
10040329:	cmp    BYTE PTR [ebx+0x3],0x66
1004032d:	jne    0x100403ab
1004032f:	cmp    ecx,0x1
10040332:	jg     0x10040a34
10040338:	mov    DWORD PTR [esp+0x24],0x66
10040340:	mov    eax,DWORD PTR [esp+0x90]
10040347:	mov    ecx,DWORD PTR [esp+0x78]
1004034b:	mov    esi,DWORD PTR [esp+0x10]
1004034f:	cmp    BYTE PTR [esi],0x29
10040352:	jne    0x10040a4c
10040358:	mov    edx,DWORD PTR [esp+0x38]
1004035c:	test   edx,edx
1004035e:	je     0x100403cf
10040360:	mov    eax,DWORD PTR [edx]
10040362:	mov    ecx,DWORD PTR [esp+0x6c]
10040366:	mov    edx,0x7fffffeb
1004036b:	sub    edx,eax
1004036d:	lea    edi,[ecx-0x6]
10040370:	cmp    edx,edi
10040372:	jl     0x10040a58
10040378:	lea    eax,[eax+ecx*1-0x6]
1004037c:	mov    ecx,DWORD PTR [esp+0x38]
10040380:	mov    DWORD PTR [ecx],eax
10040382:	mov    BYTE PTR [ebx],0x5e
10040385:	add    ebx,0x1
10040388:	mov    BYTE PTR [ebx],0x0
1004038b:	mov    BYTE PTR [ebx+0x1],0x3
1004038f:	add    ebx,0x2
10040392:	mov    BYTE PTR [ebx],0x55
10040395:	add    ebx,0x1
10040398:	mov    BYTE PTR [ebx],0x0
1004039b:	mov    BYTE PTR [ebx+0x1],0x3
1004039f:	add    ebx,0x2
100403a2:	mov    DWORD PTR [esp+0x14],ebx
100403a6:	jmp    0x10040803
100403ab:	cmp    ecx,0x2
100403ae:	jg     0x10040a40
100403b4:	cmp    ecx,0x1
100403b7:	jne    0x10040340
100403b9:	or     ecx,0xffffffff
100403bc:	or     eax,0xffffffff
100403bf:	mov    DWORD PTR [esp+0x78],ecx
100403c3:	mov    DWORD PTR [esp+0x90],eax
100403ca:	jmp    0x1004034b
100403cf:	mov    edx,DWORD PTR [esp+0x44]
100403d3:	mov    DWORD PTR [esp+0x14],edx
100403d7:	mov    edx,DWORD PTR [esp+0x24]
100403db:	cmp    edx,0x66
100403de:	je     0x10040807
100403e4:	cmp    edx,0x5d
100403e7:	mov    ebx,DWORD PTR [esp+0x4c]
100403eb:	mov    ebp,DWORD PTR [esp+0x30]
100403ef:	mov    DWORD PTR [esp+0x68],ebx
100403f3:	mov    DWORD PTR [esp+0x5c],ebp
100403f7:	mov    DWORD PTR [esp+0x88],0x0
10040402:	jl     0x10040459
10040404:	cmp    ebp,0xfffffffe
10040407:	jne    0x10040438
10040409:	test   eax,eax
1004040b:	jl     0x10040426
1004040d:	mov    DWORD PTR [esp+0x30],eax
10040411:	mov    DWORD PTR [esp+0x88],0x1
1004041c:	mov    DWORD PTR [esp+0x5c],0xffffffff
10040424:	jmp    0x10040448
10040426:	mov    DWORD PTR [esp+0x30],0xffffffff
1004042e:	mov    DWORD PTR [esp+0x5c],0xffffffff
10040436:	jmp    0x10040448
10040438:	test   eax,eax
1004043a:	jl     0x10040448
1004043c:	test   ecx,ecx
1004043e:	jge    0x10040450
10040440:	or     eax,edi
10040442:	mov    ecx,eax
10040444:	mov    DWORD PTR [esp+0x78],ecx
10040448:	test   ecx,ecx
1004044a:	jl     0x10040807
10040450:	mov    DWORD PTR [esp+0x4c],ecx
10040454:	jmp    0x10040807
10040459:	cmp    edx,0x58
1004045c:	jne    0x10040807
10040462:	test   ecx,ecx
10040464:	jl     0x10040807
1004046a:	mov    DWORD PTR [esp+0x4c],ecx
1004046e:	jmp    0x10040807
10040473:	cmp    edx,0x2b
10040476:	jne    0x100405d2
1004047c:	mov    eax,DWORD PTR [esp+0x1c]
10040480:	test   eax,eax
10040482:	je     0x10040984
10040488:	mov    edx,DWORD PTR [esp+0x18]
1004048c:	add    eax,DWORD PTR [edx+0x30]
1004048f:	mov    DWORD PTR [esp+0x1c],eax
10040493:	jmp    0x100405d2
10040498:	cmp    ecx,0x1c
1004049b:	mov    esi,DWORD PTR [esp+0x10]
1004049f:	jne    0x10040705
100404a5:	mov    dl,BYTE PTR [esi+0x1]
100404a8:	cmp    dl,0x3c
100404ab:	je     0x100404bb
100404ad:	cmp    dl,0x27
100404b0:	je     0x100404bb
100404b2:	cmp    dl,0x7b
100404b5:	jne    0x10040705
100404bb:	add    esi,0x1
100404be:	mov    DWORD PTR [esp+0x10],esi
100404c2:	mov    al,BYTE PTR [esi]
100404c4:	cmp    al,0x3c
100404c6:	mov    DWORD PTR [esp+0x28],edi
100404ca:	jne    0x100404d3
100404cc:	mov    ebp,0x3e
100404d1:	jmp    0x100404e1
100404d3:	sub    al,0x27
100404d5:	neg    al
100404d7:	sbb    eax,eax
100404d9:	and    eax,0x56
100404dc:	add    eax,0x27
100404df:	mov    ebp,eax
100404e1:	mov    edi,DWORD PTR [esp+0x18]
100404e5:	mov    edx,DWORD PTR [edi+0xc]
100404e8:	add    esi,0x1
100404eb:	mov    DWORD PTR [esp+0x10],esi
100404ef:	movzx  eax,BYTE PTR [esi]
100404f2:	test   BYTE PTR [eax+edx*1],0x10
100404f6:	mov    ecx,esi
100404f8:	mov    DWORD PTR [esp+0x2c],ecx
100404fc:	je     0x10040510
100404fe:	mov    eax,edx
10040500:	add    esi,0x1
10040503:	mov    DWORD PTR [esp+0x10],esi
10040507:	movzx  edx,BYTE PTR [esi]
1004050a:	test   BYTE PTR [edx+eax*1],0x10
1004050e:	jne    0x10040500
10040510:	mov    ebx,esi
10040512:	sub    ebx,ecx
10040514:	cmp    DWORD PTR [esp+0x38],0x0
10040519:	je     0x10040548
1004051b:	test   ebx,ebx
1004051d:	je     0x10040a82
10040523:	movzx  eax,BYTE PTR [esi]
10040526:	cmp    eax,ebp
10040528:	jne    0x10040a91
1004052e:	cmp    ebx,0x20
10040531:	jg     0x10040aa0
10040537:	mov    edi,DWORD PTR [esp+0x18]
1004053b:	mov    DWORD PTR [esp+0x1c],0x0
10040543:	jmp    0x100405c3
10040548:	mov    eax,DWORD PTR [esp+0x18]
1004054c:	mov    edi,DWORD PTR [eax+0x24]
1004054f:	xor    ebp,ebp
10040551:	cmp    DWORD PTR [eax+0x28],ebp
10040554:	jle    0x10040583
10040556:	mov    esi,eax
10040558:	mov    edx,DWORD PTR [esp+0x2c]
1004055c:	push   ebx
1004055d:	lea    ecx,[edi+0x2]
10040560:	push   ecx
10040561:	push   edx
10040562:	call   0x1004b5b6
10040567:	add    esp,0xc
1004056a:	test   eax,eax
1004056c:	jne    0x10040574
1004056e:	cmp    BYTE PTR [edi+ebx*1+0x2],al
10040572:	je     0x1004057f
10040574:	add    edi,DWORD PTR [esi+0x2c]
10040577:	add    ebp,0x1
1004057a:	cmp    ebp,DWORD PTR [esi+0x28]
1004057d:	jl     0x10040558
1004057f:	mov    esi,DWORD PTR [esp+0x10]
10040583:	mov    eax,DWORD PTR [esp+0x18]
10040587:	cmp    ebp,DWORD PTR [eax+0x28]
1004058a:	jge    0x1004059a
1004058c:	movzx  ecx,BYTE PTR [edi+0x1]
10040590:	mov    ch,BYTE PTR [edi]
10040592:	mov    edi,eax
10040594:	mov    DWORD PTR [esp+0x1c],ecx
10040598:	jmp    0x100405c3
1004059a:	mov    edx,DWORD PTR [esp+0x34]
1004059e:	shr    edx,0x3
100405a1:	and    edx,0x1
100405a4:	push   edx
100405a5:	mov    edi,eax
100405a7:	push   ebx
100405a8:	mov    ebx,DWORD PTR [esp+0x34]
100405ac:	push   edi
100405ad:	mov    eax,esi
100405af:	call   0x1003cfe0
100405b4:	add    esp,0xc
100405b7:	test   eax,eax
100405b9:	mov    DWORD PTR [esp+0x1c],eax
100405bd:	jle    0x10040aaf
100405c3:	cmp    DWORD PTR [esp+0x28],0x0
100405c8:	mov    eax,DWORD PTR [esp+0x14]
100405cc:	je     0x1004071b
100405d2:	cmp    DWORD PTR [esp+0x38],0x0
100405d7:	mov    edi,DWORD PTR [esp+0x14]
100405db:	mov    ebp,DWORD PTR [esp+0x18]
100405df:	mov    ebx,DWORD PTR [ebp+0x14]
100405e2:	mov    DWORD PTR [esp+0x2c],edi
100405e6:	jne    0x10040662
100405ec:	cmp    DWORD PTR [esp+0x1c],0x0
100405f1:	mov    BYTE PTR [edi],0x0
100405f4:	je     0x10040604
100405f6:	mov    esi,DWORD PTR [esp+0x1c]
100405fa:	mov    eax,DWORD PTR [ebp+0x14]
100405fd:	call   0x1003d4e0
10040602:	mov    ebx,eax
10040604:	test   ebx,ebx
10040606:	jne    0x100406be
1004060c:	mov    eax,DWORD PTR [esp+0x34]
10040610:	mov    ecx,DWORD PTR [esp+0x1c]
10040614:	shr    eax,0x3
10040617:	and    eax,0x1
1004061a:	push   eax
1004061b:	mov    eax,DWORD PTR [esp+0x14]
1004061f:	push   ecx
10040620:	push   ebp
10040621:	call   0x1003cfe0
10040626:	add    esp,0xc
10040629:	test   eax,eax
1004062b:	jl     0x100409a2
10040631:	mov    eax,DWORD PTR [ebp+0x14]
10040634:	mov    edx,DWORD PTR [esp+0x1c]
10040638:	mov    ecx,DWORD PTR [esp+0x14]
1004063c:	mov    edi,DWORD PTR [esp+0x14]
10040640:	lea    ebx,[eax+edx*1]
10040643:	mov    edx,ecx
10040645:	sub    edx,eax
10040647:	mov    eax,DWORD PTR [ebp+0x20]
1004064a:	add    edx,0x4
1004064d:	sar    edx,0x8
10040650:	mov    BYTE PTR [eax],dl
10040652:	sub    cl,BYTE PTR [ebp+0x14]
10040655:	mov    edx,DWORD PTR [ebp+0x20]
10040658:	add    cl,0x4
1004065b:	mov    BYTE PTR [edx+0x1],cl
1004065e:	add    DWORD PTR [ebp+0x20],0x2
10040662:	mov    BYTE PTR [edi],0x5d
10040665:	mov    BYTE PTR [edi+0x1],0x0
10040669:	add    edi,0x3
1004066c:	mov    al,0x6
1004066e:	mov    BYTE PTR [edi-0x1],al
10040671:	mov    BYTE PTR [edi],0x52
10040674:	mov    ecx,ebx
10040676:	sub    ecx,DWORD PTR [ebp+0x14]
10040679:	add    edi,0x3
1004067c:	sar    ecx,0x8
1004067f:	mov    BYTE PTR [edi-0x2],cl
10040682:	sub    bl,BYTE PTR [ebp+0x14]
10040685:	add    edi,0x3
10040688:	cmp    DWORD PTR [esp+0x30],0xfffffffe
1004068d:	mov    BYTE PTR [edi-0x4],bl
10040690:	mov    BYTE PTR [edi-0x3],0x55
10040694:	mov    BYTE PTR [edi-0x2],0x0
10040698:	mov    BYTE PTR [edi-0x1],al
1004069b:	mov    esi,DWORD PTR [esp+0x10]
1004069f:	mov    DWORD PTR [esp+0x14],edi
100406a3:	mov    DWORD PTR [esp+0x6c],0x9
100406ab:	jne    0x10040807
100406b1:	mov    DWORD PTR [esp+0x30],0xffffffff
100406b9:	jmp    0x10040807
100406be:	xor    eax,eax
100406c0:	mov    ah,BYTE PTR [ebx+0x1]
100406c3:	mov    al,BYTE PTR [ebx+0x2]
100406c6:	test   eax,eax
100406c8:	jne    0x10040662
100406ca:	mov    esi,DWORD PTR [esp+0x98]
100406d1:	test   esi,esi
100406d3:	je     0x100406f6
100406d5:	mov    eax,DWORD PTR [esi+0x4]
100406d8:	cmp    eax,ebx
100406da:	jb     0x100406f6
100406dc:	push   0x0
100406de:	push   edi
100406df:	push   eax
100406e0:	call   0x1003d5f0
100406e5:	add    esp,0xc
100406e8:	test   eax,eax
100406ea:	je     0x10040662
100406f0:	mov    esi,DWORD PTR [esi]
100406f2:	test   esi,esi
100406f4:	jne    0x100406d5
100406f6:	mov    ecx,DWORD PTR [esp+0x20]
100406fa:	mov    DWORD PTR [ecx],0x28
10040700:	jmp    0x1003f779
10040705:	cmp    ecx,0x1d
10040708:	jl     0x10040769
1004070a:	mov    edi,DWORD PTR [esp+0x18]
1004070e:	mov    ecx,0xffffffe3
10040713:	sub    ecx,eax
10040715:	mov    eax,DWORD PTR [esp+0x14]
10040719:	jmp    0x1004071f
1004071b:	mov    ecx,DWORD PTR [esp+0x1c]
1004071f:	cmp    DWORD PTR [esp+0x30],0xfffffffe
10040724:	jne    0x1004072e
10040726:	mov    DWORD PTR [esp+0x30],0xffffffff
1004072e:	mov    BYTE PTR [eax],0x51
10040731:	mov    DWORD PTR [esp+0x2c],eax
10040735:	add    eax,0x1
10040738:	mov    edx,ecx
1004073a:	sar    edx,0x8
1004073d:	mov    BYTE PTR [eax],dl
1004073f:	mov    BYTE PTR [eax+0x1],cl
10040742:	add    eax,0x2
10040745:	cmp    ecx,0x20
10040748:	mov    DWORD PTR [esp+0x14],eax
1004074c:	mov    eax,0x1
10040751:	jge    0x10040755
10040753:	shl    eax,cl
10040755:	or     DWORD PTR [edi+0x3c],eax
10040758:	cmp    ecx,DWORD PTR [edi+0x38]
1004075b:	jle    0x10040803
10040761:	mov    DWORD PTR [edi+0x38],ecx
10040764:	jmp    0x10040803
10040769:	cmp    ecx,0x16
1004076c:	je     0x10040abe
10040772:	cmp    ecx,0xf
10040775:	je     0x10040abe
1004077b:	cmp    ecx,0x10
1004077e:	je     0x10040abe
10040784:	cmp    ecx,0x5
10040787:	jle    0x100407a3
10040789:	cmp    ecx,0x17
1004078c:	jge    0x100407a3
1004078e:	mov    ecx,DWORD PTR [esp+0x14]
10040792:	neg    al
10040794:	mov    DWORD PTR [esp+0x2c],ecx
10040798:	mov    BYTE PTR [ecx],al
1004079a:	add    ecx,0x1
1004079d:	mov    DWORD PTR [esp+0x14],ecx
100407a1:	jmp    0x10040803
100407a3:	mov    ecx,DWORD PTR [esp+0x14]
100407a7:	neg    al
100407a9:	mov    BYTE PTR [ecx],al
100407ab:	add    ecx,0x1
100407ae:	mov    DWORD PTR [esp+0x2c],edi
100407b2:	mov    DWORD PTR [esp+0x14],ecx
100407b6:	jmp    0x10040803
100407b8:	mov    edx,DWORD PTR [esp+0x18]
100407bc:	mov    esi,DWORD PTR [esp+0x30]
100407c0:	cmp    esi,0xfffffffe
100407c3:	jne    0x100407e5
100407c5:	mov    ecx,DWORD PTR [esp+0x4c]
100407c9:	movzx  eax,al
100407cc:	or     eax,DWORD PTR [esp+0x84]
100407d3:	mov    DWORD PTR [esp+0x5c],0xffffffff
100407db:	mov    DWORD PTR [esp+0x68],ecx
100407df:	mov    DWORD PTR [esp+0x30],eax
100407e3:	jmp    0x10040803
100407e5:	movzx  ecx,BYTE PTR [ecx-0x1]
100407e9:	or     ecx,DWORD PTR [edx+0x48]
100407ec:	mov    eax,DWORD PTR [esp+0x4c]
100407f0:	or     ecx,DWORD PTR [esp+0x84]
100407f7:	mov    DWORD PTR [esp+0x5c],esi
100407fb:	mov    DWORD PTR [esp+0x68],eax
100407ff:	mov    DWORD PTR [esp+0x4c],ecx
10040803:	mov    esi,DWORD PTR [esp+0x10]
10040807:	mov    edi,DWORD PTR [esp+0x74]
1004080b:	mov    ebx,DWORD PTR [esp+0xb8]
10040812:	mov    ebp,DWORD PTR [esp+0x2c]
10040816:	mov    edx,DWORD PTR [esp+0x14]
1004081a:	mov    ecx,DWORD PTR [esp+0x80]
10040821:	add    esi,0x1
10040824:	jmp    0x1003e07a
10040829:	mov    edx,DWORD PTR [esp+0x20]
1004082d:	mov    DWORD PTR [edx],0x34
10040833:	jmp    0x1003f77d
10040838:	mov    eax,DWORD PTR [esp+0x20]
1004083c:	mov    DWORD PTR [eax],0x14
10040842:	jmp    0x1003f77d
10040847:	mov    ecx,DWORD PTR [esp+0x20]
1004084b:	mov    DWORD PTR [ecx],0x34
10040851:	jmp    0x1003f77d
10040856:	mov    edx,DWORD PTR [esp+0x30]
1004085a:	mov    eax,DWORD PTR [esp+0xb4]
10040861:	mov    ecx,DWORD PTR [esp+0x4c]
10040865:	mov    DWORD PTR [eax],edx
10040867:	mov    edx,DWORD PTR [esp+0xac]
1004086e:	mov    eax,DWORD PTR [esp+0xb0]
10040875:	mov    DWORD PTR [edx],ecx
10040877:	mov    ecx,DWORD PTR [esp+0x14]
1004087b:	mov    edx,DWORD PTR [esp+0x9c]
10040882:	mov    DWORD PTR [eax],ecx
10040884:	mov    DWORD PTR [edx],esi
10040886:	mov    edx,DWORD PTR [esp+0x38]
1004088a:	test   edx,edx
1004088c:	je     0x100408ac
1004088e:	mov    eax,DWORD PTR [edx]
10040890:	mov    edi,DWORD PTR [esp+0x80]
10040897:	mov    ebx,ecx
10040899:	mov    ebp,0x7fffffeb
1004089e:	sub    ebx,edi
100408a0:	sub    ebp,eax
100408a2:	cmp    ebp,ebx
100408a4:	jl     0x10040838
100408a6:	sub    eax,edi
100408a8:	add    eax,ecx
100408aa:	mov    DWORD PTR [edx],eax
100408ac:	mov    eax,0x1
100408b1:	jmp    0x1003f788
100408b6:	mov    dl,BYTE PTR [esi+0x1]
100408b9:	mov    eax,DWORD PTR [esp+0x20]
100408bd:	sub    dl,0x3a
100408c0:	neg    dl
100408c2:	sbb    edx,edx
100408c4:	and    edx,0x12
100408c7:	add    edx,0xd
100408ca:	mov    DWORD PTR [eax],edx
100408cc:	jmp    0x1003f77d
100408d1:	mov    ecx,DWORD PTR [esp+0x20]
100408d5:	mov    DWORD PTR [ecx],0x1f
100408db:	jmp    0x1003f77d
100408e0:	mov    edx,DWORD PTR [esp+0x20]
100408e4:	mov    DWORD PTR [edx],0x1e
100408ea:	jmp    0x1003f779
100408ef:	mov    DWORD PTR [esi],0x7
100408f5:	jmp    0x1003f779
100408fa:	mov    eax,DWORD PTR [esp+0x20]
100408fe:	mov    DWORD PTR [eax],0x8
10040904:	jmp    0x1003f77d
10040909:	mov    ecx,DWORD PTR [esp+0x20]
1004090d:	mov    DWORD PTR [ecx],0x6
10040913:	jmp    0x1003f77d
10040918:	mov    edx,DWORD PTR [esp+0x20]
1004091c:	mov    DWORD PTR [edx],0x9
10040922:	jmp    0x1003f77d
10040927:	mov    ecx,DWORD PTR [esp+0x20]
1004092b:	mov    DWORD PTR [ecx],0x37
10040931:	jmp    0x1003f77d
10040936:	mov    edx,DWORD PTR [esp+0x20]
1004093a:	mov    DWORD PTR [edx],0x14
10040940:	jmp    0x1003f77d
10040945:	mov    ecx,DWORD PTR [esp+0x20]
10040949:	mov    DWORD PTR [ecx],0x3b
1004094f:	jmp    0x1003f77d
10040954:	mov    edx,DWORD PTR [esp+0x20]
10040958:	mov    DWORD PTR [edx],0x3c
1004095e:	jmp    0x1003f77d
10040963:	mov    edx,DWORD PTR [esp+0x20]
10040967:	mov    DWORD PTR [edx],0x1c
1004096d:	jmp    0x1003f77d
10040972:	mov    eax,DWORD PTR [esp+0x20]
10040976:	sub    esi,0x1
10040979:	mov    DWORD PTR [eax],0x1a
1004097f:	jmp    0x1003f77d
10040984:	mov    ecx,DWORD PTR [esp+0x20]
10040988:	mov    DWORD PTR [ecx],0x3a
1004098e:	jmp    0x1003f77d
10040993:	mov    edx,DWORD PTR [esp+0x20]
10040997:	mov    DWORD PTR [edx],0xf
1004099d:	jmp    0x1003f77d
100409a2:	mov    eax,DWORD PTR [esp+0x20]
100409a6:	mov    DWORD PTR [eax],0xf
100409ac:	jmp    0x1003f779
100409b1:	mov    ecx,DWORD PTR [esp+0x20]
100409b5:	mov    DWORD PTR [ecx],0xf
100409bb:	jmp    0x1003f779
100409c0:	mov    edx,DWORD PTR [esp+0x20]
100409c4:	neg    eax
100409c6:	sbb    eax,eax
100409c8:	and    eax,0xffffffec
100409cb:	add    eax,0x23
100409ce:	mov    DWORD PTR [edx],eax
100409d0:	jmp    0x1003f779
100409d5:	mov    eax,DWORD PTR [esp+0x20]
100409d9:	add    esi,ebx
100409db:	mov    DWORD PTR [eax],0x18
100409e1:	jmp    0x1003f77d
100409e6:	mov    ecx,DWORD PTR [esp+0x20]
100409ea:	mov    DWORD PTR [ecx],0x27
100409f0:	jmp    0x1003f77d
100409f5:	mov    edx,DWORD PTR [esp+0x20]
100409f9:	mov    DWORD PTR [edx],0x26
100409ff:	jmp    0x1003f77d
10040a04:	mov    ecx,DWORD PTR [esp+0x20]
10040a08:	mov    DWORD PTR [ecx],0x2a
10040a0e:	jmp    0x1003f77d
10040a13:	mov    edx,DWORD PTR [esp+0x20]
10040a17:	mov    DWORD PTR [edx],0x31
10040a1d:	jmp    0x1003f77d
10040a22:	mov    eax,DWORD PTR [esp+0x20]
10040a26:	mov    DWORD PTR [eax],0xc
10040a2c:	sub    esi,0x1
10040a2f:	jmp    0x1003f77d
10040a34:	mov    DWORD PTR [ebp+0x0],0x36
10040a3b:	jmp    0x1003f779
10040a40:	mov    DWORD PTR [ebp+0x0],0x1b
10040a47:	jmp    0x1003f779
10040a4c:	mov    DWORD PTR [ebp+0x0],0xe
10040a53:	jmp    0x1003f77d
10040a58:	mov    DWORD PTR [ebp+0x0],0x14
10040a5f:	jmp    0x1003f77d
10040a64:	mov    ecx,DWORD PTR [esp+0x20]
10040a68:	mov    DWORD PTR [ecx],0x1d
10040a6e:	jmp    0x1003f77d
10040a73:	mov    edx,DWORD PTR [esp+0x20]
10040a77:	mov    DWORD PTR [edx],0x3a
10040a7d:	jmp    0x1003f77d
10040a82:	mov    edx,DWORD PTR [esp+0x20]
10040a86:	mov    DWORD PTR [edx],0x3e
10040a8c:	jmp    0x1003f77d
10040a91:	mov    eax,DWORD PTR [esp+0x20]
10040a95:	mov    DWORD PTR [eax],0x2a
10040a9b:	jmp    0x1003f77d
10040aa0:	mov    ecx,DWORD PTR [esp+0x20]
10040aa4:	mov    DWORD PTR [ecx],0x30
10040aaa:	jmp    0x1003f77d
10040aaf:	mov    edx,DWORD PTR [esp+0x20]
10040ab3:	mov    DWORD PTR [edx],0xf
10040ab9:	jmp    0x1003f779
10040abe:	mov    DWORD PTR [ebx],0x2d
10040ac4:	jmp    0x1003f77d
10040ac9:	lea    ecx,[ecx+0x0]
10040acc:	push   esi
10040acd:	or     BYTE PTR [eax+edx*1],al
10040ad0:	cmc    
10040ad1:	jecxz  0x10040ad6
10040ad3:	adc    BYTE PTR [esi+0x731003f6],bh
10040ad9:	in     eax,dx
10040ada:	add    edx,DWORD PTR [eax]
10040adc:	jge    0x10040acb
10040ade:	add    edx,DWORD PTR [eax]
10040ae0:	adc    ah,ah
10040ae2:	add    edx,DWORD PTR [eax]
10040ae4:	mov    ebp,gs
10040ae6:	add    edx,DWORD PTR [eax]
10040ae8:	outs   dx,DWORD PTR ds:[esi]
10040ae9:	in     al,0x3
10040aeb:	adc    ch,dl
10040aed:	inc    BYTE PTR [ebx]
10040aef:	adc    BYTE PTR [edi-0x1c],cl
10040af2:	add    edx,DWORD PTR [eax]
10040af4:	(bad)
10040af8:	cmp    ch,ch
10040afa:	add    edx,DWORD PTR [eax]
10040afc:	fsubr  st(1),st
10040afe:	add    edx,DWORD PTR [eax]
10040b00:	add    BYTE PTR [esp+ecx*1],cl
10040b03:	or     al,0xc
10040b05:	or     al,0xc
10040b07:	or     al,0xc
10040b09:	or     al,0xc
10040b0b:	or     al,0xc
10040b0d:	or     al,0xc
10040b0f:	or     al,0xc
10040b11:	or     al,0xc
10040b13:	or     al,0xc
10040b15:	or     al,0xc
10040b17:	or     al,0xc
10040b19:	or     al,0xc
10040b1b:	or     al,0xc
10040b1d:	or     al,0xc
10040b1f:	or     al,0xc
10040b21:	or     al,0xc
10040b23:	or     al,0x1
10040b25:	or     al,0xc
10040b27:	or     al,0x2
10040b29:	add    BYTE PTR [ebx],al
10040b2b:	add    al,0xc
10040b2d:	or     al,0x5
10040b2f:	or     al,0xc
10040b31:	or     al,0xc
10040b33:	or     al,0xc
10040b35:	or     al,0xc
10040b37:	or     al,0xc
10040b39:	or     al,0xc
10040b3b:	or     al,0xc
10040b3d:	or     al,0xc
10040b3f:	push   es
10040b40:	or     al,0xc
10040b42:	or     al,0xc
10040b44:	or     al,0xc
10040b46:	or     al,0xc
10040b48:	or     al,0xc
10040b4a:	or     al,0xc
10040b4c:	or     al,0xc
10040b4e:	or     al,0xc
10040b50:	or     al,0xc
10040b52:	or     al,0xc
10040b54:	or     al,0xc
10040b56:	or     al,0xc
10040b58:	or     al,0xc
10040b5a:	or     al,0x7
10040b5c:	or     BYTE PTR [ecx],cl
10040b5e:	or     cl,BYTE PTR [esp+ecx*1]
10040b61:	or     al,0xc
10040b63:	or     al,0xc
10040b65:	or     al,0xc
10040b67:	or     al,0xc
10040b69:	or     al,0xc
10040b6b:	or     al,0xc
10040b6d:	or     al,0xc
10040b6f:	or     al,0xc
10040b71:	or     al,0xc
10040b73:	or     al,0xc
10040b75:	or     al,0xc
10040b77:	or     al,0xc
10040b79:	or     al,0xc
10040b7b:	or     eax,DWORD PTR [eax]
10040b7d:	lea    ecx,[ecx+0x0]
10040b80:	jge    0x10040b6a
10040b82:	add    edx,DWORD PTR [eax]
10040b84:	lock out 0x3,eax
10040b87:	adc    BYTE PTR [ecx],dh
10040b89:	jmp    0xf9011b91
10040b8e:	add    edx,DWORD PTR [eax]
10040b90:	retf   
10040b91:	call   0xf8ae1b99
10040b96:	add    edx,DWORD PTR [eax]
10040b98:	psadbw mm0,QWORD PTR [ebx]
10040b9b:	adc    BYTE PTR [edi],dl
10040b9d:	test   BYTE PTR [ebx],0x10
10040ba0:	pop    ds
10040ba1:	test   BYTE PTR [ebx],0x10
10040ba4:	daa    
10040ba5:	test   BYTE PTR [ebx],0x10
10040ba8:	inc    esi
10040ba9:	test   BYTE PTR [ebx],0x10
10040bac:	dec    ebx
10040bad:	test   BYTE PTR [ebx],0x10
10040bb0:	push   eax
10040bb1:	test   BYTE PTR [ebx],0x10
10040bb4:	push   ebp
10040bb5:	test   BYTE PTR [ebx],0x10
10040bb8:	das    
10040bb9:	test   BYTE PTR [ebx],0x10
10040bbc:	aaa    
10040bbd:	test   BYTE PTR [ebx],0x10
10040bc0:	cmp    al,0xf6
10040bc2:	add    edx,DWORD PTR [eax]
10040bc4:	inc    ecx
10040bc5:	test   BYTE PTR [ebx],0x10
10040bc8:	pop    edx
10040bc9:	test   BYTE PTR [ebx],0x10
10040bcc:	add    BYTE PTR [ecx+eax*1],cl
10040bcf:	or     al,0x2
10040bd1:	or     al,0x3
10040bd3:	or     al,0xc
10040bd5:	or     al,0xc
10040bd7:	or     al,0xc
10040bd9:	add    al,0xc
10040bdb:	add    eax,0x70c060c
10040be0:	or     al,0xc
10040be2:	or     al,0xc
10040be4:	or     al,0xc
10040be6:	or     BYTE PTR [ecx+ecx*1],cl
10040be9:	or     al,0xa
10040beb:	or     al,0xb
10040bed:	lea    ecx,[ecx+0x0]
10040bf0:	xor    eax,0xfd1003fb
10040bf5:	test   DWORD PTR [ebx],0x3fea010
10040bfb:	adc    BYTE PTR [eax+0x441003fb],cl
10040c01:	clc    
10040c02:	add    edx,DWORD PTR [eax]
10040c04:	mov    ah,0xfe
10040c06:	add    edx,DWORD PTR [eax]
10040c08:	cmp    eax,0x631003f8
10040c0d:	sti    
10040c0e:	add    edx,DWORD PTR [eax]
10040c10:	es sti 
10040c12:	add    edx,DWORD PTR [eax]
10040c14:	xor    eax,0x441003fc
10040c19:	cld    
10040c1a:	add    edx,DWORD PTR [eax]
10040c1c:	(bad)  
10040c1e:	add    edx,DWORD PTR [eax]
10040c20:	scas   al,BYTE PTR es:[edi]
10040c21:	inc    BYTE PTR [ebx]
10040c23:	adc    BYTE PTR [ecx],bh
10040c25:	clc    
10040c26:	add    edx,DWORD PTR [eax]
10040c28:	sbb    eax,DWORD PTR [ecx]
10040c2a:	add    al,0x10
10040c2c:	add    BYTE PTR [esi],cl
10040c2e:	add    DWORD PTR [esi],ecx
10040c30:	push   cs
10040c31:	add    al,BYTE PTR [ebx]
10040c33:	add    al,0xe
10040c35:	push   cs
10040c36:	add    eax,0xe0e050e
10040c3b:	add    eax,0x5050505
10040c40:	add    eax,0x5050505
10040c45:	push   es
10040c46:	push   cs
10040c47:	pop    es
10040c48:	or     BYTE PTR [ecx],cl
10040c4a:	push   cs
10040c4b:	push   cs
10040c4c:	push   cs
10040c4d:	push   cs
10040c4e:	or     cl,BYTE PTR [esi]
10040c50:	push   cs
10040c51:	push   cs
10040c52:	push   cs
10040c53:	push   cs
10040c54:	push   cs
10040c55:	push   cs
10040c56:	push   cs
10040c57:	push   cs
10040c58:	push   cs
10040c59:	push   cs
10040c5a:	push   cs
10040c5b:	or     ecx,DWORD PTR [esi]
10040c5d:	or     al,0xe
10040c5f:	push   cs
10040c60:	push   cs
10040c61:	push   cs
10040c62:	push   cs
10040c63:	push   cs
10040c64:	push   cs
10040c65:	push   cs
10040c66:	push   cs
10040c67:	push   cs
10040c68:	push   cs
10040c69:	push   cs
10040c6a:	push   cs
10040c6b:	push   cs
10040c6c:	push   cs
10040c6d:	push   cs
10040c6e:	push   cs
10040c6f:	push   cs
10040c70:	push   cs
10040c71:	push   cs
10040c72:	push   cs
10040c73:	push   cs
10040c74:	push   cs
10040c75:	push   cs
10040c76:	push   cs
10040c77:	push   cs
10040c78:	push   cs
10040c79:	push   cs
10040c7a:	push   cs
10040c7b:	push   cs
10040c7c:	push   cs
10040c7d:	push   cs
10040c7e:	push   cs
10040c7f:	push   cs
10040c80:	push   cs
10040c81:	push   cs
10040c82:	push   cs
10040c83:	push   cs
10040c84:	push   cs
10040c85:	push   cs
10040c86:	push   cs
10040c87:	or     eax,0x1004015e
10040c8c:	add    DWORD PTR fs:[eax+edx*1],eax
10040c90:	add    DWORD PTR [ecx],0x4
10040c93:	adc    BYTE PTR [ebx+0x6f100401],cl
10040c99:	add    DWORD PTR [eax+edx*1],eax
10040c9c:	je     0x10040c9f
10040c9e:	add    al,0x10
10040ca0:	jns    0x10040ca3
10040ca2:	add    al,0x10
10040ca4:	jle    0x10040ca7
10040ca6:	add    al,0x10
10040ca8:	and    cl,BYTE PTR [edx]
10040caa:	add    al,0x10
10040cac:	add    BYTE PTR [eax],cl
10040cae:	or     BYTE PTR [eax],cl
10040cb0:	or     BYTE PTR [eax],cl
10040cb2:	or     BYTE PTR [eax],cl
10040cb4:	or     BYTE PTR [eax],cl
10040cb6:	or     BYTE PTR [eax],cl
10040cb8:	or     BYTE PTR [eax],cl
10040cba:	or     BYTE PTR [eax],cl
10040cbc:	or     BYTE PTR [eax],cl
10040cbe:	or     BYTE PTR [eax],cl
10040cc0:	or     BYTE PTR [eax],cl
10040cc2:	or     BYTE PTR [eax],cl
10040cc4:	or     BYTE PTR [eax],cl
10040cc6:	or     BYTE PTR [eax],cl
10040cc8:	or     BYTE PTR [ecx],al
10040cca:	or     BYTE PTR [eax],cl
10040ccc:	or     BYTE PTR [eax],cl
10040cce:	or     BYTE PTR [eax],cl
10040cd0:	or     BYTE PTR [eax],cl
10040cd2:	or     BYTE PTR [eax],cl
10040cd4:	add    cl,BYTE PTR [eax]
10040cd6:	or     BYTE PTR [ebx],al
10040cd8:	or     BYTE PTR [eax],cl
10040cda:	or     BYTE PTR [eax],cl
10040cdc:	or     BYTE PTR [eax],cl
10040cde:	or     BYTE PTR [eax],cl
10040ce0:	or     BYTE PTR [eax],cl
10040ce2:	or     BYTE PTR [eax],cl
10040ce4:	or     BYTE PTR [eax],cl
10040ce6:	or     BYTE PTR [eax],cl
10040ce8:	add    al,0x8
10040cea:	or     BYTE PTR [eax],cl
10040cec:	add    eax,0x8080808
10040cf1:	or     BYTE PTR [esi],al
10040cf3:	or     BYTE PTR [eax],cl
10040cf5:	or     BYTE PTR [eax],cl
10040cf7:	pop    es
10040cf8:	int3   
10040cf9:	int3   
10040cfa:	int3   
10040cfb:	int3   
10040cfc:	int3   
10040cfd:	int3   
10040cfe:	int3   
10040cff:	int3   
10040d00:	push   ebp
10040d01:	mov    ebp,esp
10040d03:	and    esp,0xfffffff8
10040d06:	sub    esp,0x3c
10040d09:	mov    eax,DWORD PTR [ebp+0x14]
10040d0c:	mov    ecx,DWORD PTR [eax]
10040d0e:	mov    eax,DWORD PTR [ebp+0x30]
10040d11:	mov    edx,DWORD PTR [ebp+0x10]
10040d14:	mov    DWORD PTR [esp+0x34],eax
10040d18:	mov    eax,0xfffffffe
10040d1d:	push   ebx
10040d1e:	mov    ebx,DWORD PTR [edx]
10040d20:	mov    DWORD PTR [esp+0xc],eax
10040d24:	mov    DWORD PTR [esp+0x20],eax
10040d28:	mov    eax,DWORD PTR [ebp+0x24]
10040d2b:	push   esi
10040d2c:	mov    esi,DWORD PTR [ebp+0x38]
10040d2f:	mov    DWORD PTR [esp+0x18],ecx
10040d33:	lea    ecx,[eax+0x6]
10040d36:	mov    DWORD PTR [esp+0x40],ebx
10040d3a:	mov    DWORD PTR [esp+0xc],ecx
10040d3e:	mov    BYTE PTR [ebx+0x1],0x0
10040d42:	push   edi
10040d43:	mov    edi,DWORD PTR [ebp+0x34]
10040d46:	mov    BYTE PTR [ebx+0x2],0x0
10040d4a:	neg    esi
10040d4c:	mov    DWORD PTR [esp+0x24],ebx
10040d50:	mov    DWORD PTR [esp+0x3c],ebx
10040d54:	lea    ebx,[ebx+eax*1+0x3]
10040d58:	mov    eax,DWORD PTR [edi+0x30]
10040d5b:	sbb    esi,esi
10040d5d:	lea    edx,[esp+0x10]
10040d61:	mov    DWORD PTR [esp+0x34],0x0
10040d69:	mov    DWORD PTR [esp+0x2c],eax
10040d6d:	mov    DWORD PTR [esp+0x38],eax
10040d71:	and    esi,edx
10040d73:	cmp    DWORD PTR [ebp+0x20],0x0
10040d77:	mov    DWORD PTR [esp+0x18],ebx
10040d7b:	je     0x10040d84
10040d7d:	mov    eax,DWORD PTR [esp+0x38]
10040d81:	mov    DWORD PTR [edi+0x30],eax
10040d84:	mov    eax,DWORD PTR [ebp+0x8]
10040d87:	mov    ecx,eax
10040d89:	and    ecx,0x7
10040d8c:	cmp    ecx,DWORD PTR [ebp+0xc]
10040d8f:	je     0x10040da7
10040d91:	mov    BYTE PTR [ebx],0x19
10040d94:	add    ebx,0x1
10040d97:	and    al,0x7
10040d99:	mov    BYTE PTR [ebx],al
10040d9b:	add    ebx,0x1
10040d9e:	add    DWORD PTR [esp+0x10],0x2
10040da3:	mov    DWORD PTR [esp+0x18],ebx
10040da7:	cmp    DWORD PTR [ebp+0x1c],0x0
10040dab:	je     0x10040dca
10040dad:	mov    BYTE PTR [ebx],0x5c
10040db0:	add    ebx,0x1
10040db3:	mov    BYTE PTR [ebx],0x0
10040db6:	mov    BYTE PTR [ebx+0x1],0x0
10040dba:	mov    DWORD PTR [esp+0x34],ebx
10040dbe:	add    ebx,0x2
10040dc1:	add    DWORD PTR [esp+0x10],0x3
10040dc6:	mov    DWORD PTR [esp+0x18],ebx
10040dca:	push   esi
10040dcb:	push   edi
10040dcc:	lea    edx,[esp+0x48]
10040dd0:	push   edx
10040dd1:	lea    eax,[esp+0x2c]
10040dd5:	push   eax
10040dd6:	lea    ecx,[esp+0x40]
10040dda:	push   ecx
10040ddb:	mov    ecx,DWORD PTR [ebp+0x18]
10040dde:	lea    edx,[esp+0x30]
10040de2:	push   edx
10040de3:	lea    eax,[ebp+0x8]
10040de6:	push   eax
10040de7:	lea    edx,[esp+0x34]
10040deb:	call   0x1003df70
10040df0:	add    esp,0x1c
10040df3:	test   eax,eax
10040df5:	je     0x10040f15
10040dfb:	mov    eax,DWORD PTR [edi+0x30]
10040dfe:	cmp    eax,DWORD PTR [esp+0x2c]
10040e02:	jle    0x10040e08
10040e04:	mov    DWORD PTR [esp+0x2c],eax
10040e08:	cmp    DWORD PTR [ebp+0x38],0x0
10040e0c:	mov    ebx,DWORD PTR [esp+0x18]
10040e10:	mov    ecx,DWORD PTR [esp+0x24]
10040e14:	jne    0x10040eb4
10040e1a:	cmp    BYTE PTR [ecx],0x54
10040e1d:	mov    edx,DWORD PTR [esp+0x30]
10040e21:	je     0x10040e31
10040e23:	mov    eax,DWORD PTR [esp+0x20]
10040e27:	mov    DWORD PTR [esp+0x28],edx
10040e2b:	mov    DWORD PTR [esp+0x14],eax
10040e2f:	jmp    0x10040e84
10040e31:	mov    eax,DWORD PTR [esp+0x28]
10040e35:	test   eax,eax
10040e37:	jl     0x10040e50
10040e39:	cmp    eax,edx
10040e3b:	je     0x10040e64
10040e3d:	cmp    DWORD PTR [esp+0x14],0x0
10040e42:	jge    0x10040e48
10040e44:	mov    DWORD PTR [esp+0x14],eax
10040e48:	mov    DWORD PTR [esp+0x28],0xffffffff
10040e50:	test   edx,edx
10040e52:	jl     0x10040e64
10040e54:	mov    eax,DWORD PTR [esp+0x20]
10040e58:	test   eax,eax
10040e5a:	jge    0x10040e68
10040e5c:	mov    eax,edx
10040e5e:	mov    DWORD PTR [esp+0x20],eax
10040e62:	jmp    0x10040e68
10040e64:	mov    eax,DWORD PTR [esp+0x20]
10040e68:	mov    edx,eax
10040e6a:	xor    edx,DWORD PTR [esp+0x14]
10040e6e:	test   edx,0xfffffdff
10040e74:	je     0x10040e80
10040e76:	mov    DWORD PTR [esp+0x14],0xffffffff
10040e7e:	jmp    0x10040e84
10040e80:	or     DWORD PTR [esp+0x14],eax
10040e84:	cmp    DWORD PTR [ebp+0x1c],0x0
10040e88:	je     0x10040eb4
10040e8a:	mov    eax,DWORD PTR [ebp+0x8]
10040e8d:	push   eax
10040e8e:	push   ecx
10040e8f:	mov    BYTE PTR [ebx],0x0
10040e92:	call   0x1003d2d0
10040e97:	add    esp,0x8
10040e9a:	test   eax,eax
10040e9c:	jl     0x10040f27
10040ea2:	mov    edi,DWORD PTR [esp+0x34]
10040ea6:	mov    ecx,eax
10040ea8:	sar    ecx,0x8
10040eab:	mov    BYTE PTR [edi],cl
10040ead:	mov    ecx,DWORD PTR [esp+0x24]
10040eb1:	mov    BYTE PTR [edi+0x1],al
10040eb4:	mov    edi,DWORD PTR [esp+0x1c]
10040eb8:	cmp    BYTE PTR [edi],0x7c
10040ebb:	jne    0x10040f4b
10040ec1:	cmp    DWORD PTR [ebp+0x38],0x0
10040ec5:	je     0x10040ee7
10040ec7:	mov    edx,DWORD PTR [ebp+0x10]
10040eca:	add    DWORD PTR [esp+0x10],0x3
10040ecf:	mov    eax,DWORD PTR [edx]
10040ed1:	mov    ecx,DWORD PTR [ebp+0x24]
10040ed4:	add    edi,0x1
10040ed7:	mov    DWORD PTR [esp+0x1c],edi
10040edb:	mov    edi,DWORD PTR [ebp+0x34]
10040ede:	lea    ebx,[eax+ecx*1+0x3]
10040ee2:	jmp    0x10040d73
10040ee7:	mov    edx,ebx
10040ee9:	sub    edx,ecx
10040eeb:	mov    BYTE PTR [ebx],0x54
10040eee:	mov    al,bl
10040ef0:	sar    edx,0x8
10040ef3:	mov    BYTE PTR [ebx+0x1],dl
10040ef6:	sub    al,cl
10040ef8:	mov    BYTE PTR [ebx+0x2],al
10040efb:	mov    DWORD PTR [esp+0x24],ebx
10040eff:	mov    DWORD PTR [esp+0x44],ebx
10040f03:	add    ebx,0x3
10040f06:	add    edi,0x1
10040f09:	mov    DWORD PTR [esp+0x1c],edi
10040f0d:	mov    edi,DWORD PTR [ebp+0x34]
10040f10:	jmp    0x10040d73
10040f15:	mov    ecx,DWORD PTR [esp+0x1c]
10040f19:	mov    edx,DWORD PTR [ebp+0x14]
10040f1c:	mov    DWORD PTR [edx],ecx
10040f1e:	xor    eax,eax
10040f20:	pop    edi
10040f21:	pop    esi
10040f22:	pop    ebx
10040f23:	mov    esp,ebp
10040f25:	pop    ebp
10040f26:	ret    
10040f27:	mov    ecx,DWORD PTR [ebp+0x18]
10040f2a:	mov    edx,DWORD PTR [esp+0x1c]
10040f2e:	sub    eax,0xfffffffe
10040f31:	neg    eax
10040f33:	sbb    eax,eax
10040f35:	and    eax,0xfffffff5
10040f38:	add    eax,0x24
10040f3b:	mov    DWORD PTR [ecx],eax
10040f3d:	mov    eax,DWORD PTR [ebp+0x14]
10040f40:	mov    DWORD PTR [eax],edx
10040f42:	xor    eax,eax
10040f44:	pop    edi
10040f45:	pop    esi
10040f46:	pop    ebx
10040f47:	mov    esp,ebp
10040f49:	pop    ebp
10040f4a:	ret    
10040f4b:	mov    esi,DWORD PTR [ebp+0x38]
10040f4e:	test   esi,esi
10040f50:	jne    0x10040f76
10040f52:	mov    eax,ebx
10040f54:	sub    eax,ecx
10040f56:	xor    edx,edx
10040f58:	mov    dh,BYTE PTR [ecx+0x1]
10040f5b:	mov    dl,BYTE PTR [ecx+0x2]
10040f5e:	mov    BYTE PTR [ecx+0x2],al
10040f61:	mov    esi,edx
10040f63:	mov    edx,eax
10040f65:	sar    edx,0x8
10040f68:	mov    BYTE PTR [ecx+0x1],dl
10040f6b:	sub    ecx,esi
10040f6d:	test   esi,esi
10040f6f:	mov    eax,esi
10040f71:	jg     0x10040f56
10040f73:	mov    esi,DWORD PTR [ebp+0x38]
10040f76:	mov    eax,DWORD PTR [esp+0x3c]
10040f7a:	mov    ecx,ebx
10040f7c:	sub    ecx,eax
10040f7e:	mov    dl,bl
10040f80:	sub    dl,al
10040f82:	mov    eax,DWORD PTR [ebp+0x8]
10040f85:	sar    ecx,0x8
10040f88:	mov    BYTE PTR [ebx],0x55
10040f8b:	mov    BYTE PTR [ebx+0x1],cl
10040f8e:	mov    ecx,DWORD PTR [ebp+0xc]
10040f91:	mov    BYTE PTR [ebx+0x2],dl
10040f94:	and    eax,0x7
10040f97:	add    ebx,0x3
10040f9a:	cmp    eax,ecx
10040f9c:	je     0x10040fb7
10040f9e:	cmp    BYTE PTR [edi],0x29
10040fa1:	jne    0x10040fb7
10040fa3:	mov    BYTE PTR [ebx],0x19
10040fa6:	add    ebx,0x1
10040fa9:	mov    BYTE PTR [ebx],cl
10040fab:	mov    ecx,DWORD PTR [esp+0x10]
10040faf:	add    ebx,0x1
10040fb2:	add    ecx,0x2
10040fb5:	jmp    0x10040fbb
10040fb7:	mov    ecx,DWORD PTR [esp+0x10]
10040fbb:	test   esi,esi
10040fbd:	mov    eax,DWORD PTR [esp+0x2c]
10040fc1:	mov    edx,DWORD PTR [ebp+0x34]
10040fc4:	mov    DWORD PTR [edx+0x30],eax
10040fc7:	mov    eax,DWORD PTR [ebp+0x10]
10040fca:	mov    edx,DWORD PTR [ebp+0x14]
10040fcd:	mov    DWORD PTR [eax],ebx
10040fcf:	mov    eax,DWORD PTR [ebp+0x28]
10040fd2:	mov    DWORD PTR [edx],edi
10040fd4:	mov    edx,DWORD PTR [esp+0x28]
10040fd8:	mov    DWORD PTR [eax],edx
10040fda:	mov    eax,DWORD PTR [ebp+0x2c]
10040fdd:	mov    edx,DWORD PTR [esp+0x14]
10040fe1:	mov    DWORD PTR [eax],edx
10040fe3:	je     0x10041008
10040fe5:	mov    eax,DWORD PTR [esi]
10040fe7:	mov    edx,0x7fffffeb
10040fec:	sub    edx,eax
10040fee:	cmp    edx,ecx
10040ff0:	jge    0x10041004
10040ff2:	mov    eax,DWORD PTR [ebp+0x18]
10040ff5:	mov    DWORD PTR [eax],0x14
10040ffb:	xor    eax,eax
10040ffd:	pop    edi
10040ffe:	pop    esi
10040fff:	pop    ebx
10041000:	mov    esp,ebp
10041002:	pop    ebp
10041003:	ret    
10041004:	add    eax,ecx
10041006:	mov    DWORD PTR [esi],eax
10041008:	pop    edi
10041009:	pop    esi
1004100a:	mov    eax,0x1
1004100f:	pop    ebx
10041010:	mov    esp,ebp
10041012:	pop    ebp
10041013:	ret    
10041014:	int3   
10041015:	int3   
10041016:	int3   
10041017:	int3   
10041018:	int3   
10041019:	int3   
1004101a:	int3   
1004101b:	int3   
1004101c:	int3   
1004101d:	int3   
1004101e:	int3   
1004101f:	int3   
10041020:	push   ebx
10041021:	push   ebp
10041022:	mov    ebp,DWORD PTR [esp+0xc]
10041026:	push   esi
10041027:	push   edi
10041028:	mov    edi,DWORD PTR [esp+0x18]
1004102c:	lea    esp,[esp+0x0]
10041030:	movzx  eax,BYTE PTR [ebp+0x0]
10041034:	movzx  eax,BYTE PTR [eax+0x1006d078]
1004103b:	add    eax,ebp
1004103d:	xor    ebx,ebx
1004103f:	mov    esi,0x2
10041044:	call   0x1003d1d0
10041049:	movzx  ecx,BYTE PTR [eax]
1004104c:	cmp    ecx,0x5e
1004104f:	je     0x100410ba
10041051:	cmp    ecx,0x5f
10041054:	jne    0x10041070
10041056:	xor    ecx,ecx
10041058:	mov    ch,BYTE PTR [eax+0x3]
1004105b:	mov    edx,0x1
10041060:	mov    cl,BYTE PTR [eax+0x4]
10041063:	cmp    ecx,0x20
10041066:	jge    0x1004106a
10041068:	shl    edx,cl
1004106a:	or     edx,DWORD PTR [esp+0x1c]
1004106e:	jmp    0x100410be
10041070:	cmp    ecx,0x58
10041073:	je     0x100410ba
10041075:	cmp    ecx,0x5d
10041078:	je     0x100410ba
1004107a:	cmp    ecx,0x60
1004107d:	je     0x100410ba
1004107f:	cmp    ecx,0x39
10041082:	je     0x100410a8
10041084:	cmp    ecx,0x3a
10041087:	je     0x100410a8
10041089:	cmp    ecx,0x42
1004108c:	je     0x100410a8
1004108e:	cmp    ecx,0x1
10041091:	je     0x100410d2
10041093:	cmp    ecx,esi
10041095:	je     0x100410d2
10041097:	test   BYTE PTR [edi],0x2
1004109a:	jne    0x100410a1
1004109c:	cmp    ecx,0x1a
1004109f:	je     0x100410d2
100410a1:	pop    edi
100410a2:	pop    esi
100410a3:	pop    ebp
100410a4:	xor    eax,eax
100410a6:	pop    ebx
100410a7:	ret    
100410a8:	cmp    BYTE PTR [eax+0x1],0xd
100410ac:	jne    0x100410a1
100410ae:	mov    edx,DWORD PTR [esp+0x20]
100410b2:	test   DWORD PTR [esp+0x1c],edx
100410b6:	jne    0x100410a1
100410b8:	jmp    0x100410d2
100410ba:	mov    edx,DWORD PTR [esp+0x1c]
100410be:	mov    ecx,DWORD PTR [esp+0x20]
100410c2:	push   ecx
100410c3:	push   edx
100410c4:	push   edi
100410c5:	push   eax
100410c6:	call   0x10041020
100410cb:	add    esp,0x10
100410ce:	test   eax,eax
100410d0:	je     0x100410a1
100410d2:	xor    eax,eax
100410d4:	mov    ah,BYTE PTR [ebp+0x1]
100410d7:	mov    al,BYTE PTR [ebp+0x2]
100410da:	add    ebp,eax
100410dc:	cmp    BYTE PTR [ebp+0x0],0x54
100410e0:	je     0x10041030
100410e6:	pop    edi
100410e7:	pop    esi
100410e8:	pop    ebp
100410e9:	mov    eax,0x1
100410ee:	pop    ebx
100410ef:	ret    
100410f0:	push   ebp
100410f1:	mov    ebp,DWORD PTR [esp+0xc]
100410f5:	push   esi
100410f6:	mov    esi,DWORD PTR [esp+0xc]
100410fa:	push   edi
100410fb:	mov    edi,DWORD PTR [esp+0x18]
100410ff:	nop
10041100:	movzx  eax,BYTE PTR [esi]
10041103:	movzx  eax,BYTE PTR [eax+0x1006d078]
1004110a:	movzx  edx,BYTE PTR [eax+esi*1]
1004110e:	add    eax,esi
10041110:	mov    ecx,edx
10041112:	sub    ecx,0x4
10041115:	cmp    ecx,0x62
10041118:	ja     0x10041149
1004111a:	lea    ebx,[ebx+0x0]
10041120:	movzx  ecx,BYTE PTR [ecx+0x100411e0]
10041127:	jmp    DWORD PTR [ecx*4+0x100411d0]
1004112e:	add    eax,0x2
10041131:	jmp    0x1004113c
10041133:	movzx  edx,BYTE PTR [edx+0x1006d078]
1004113a:	add    eax,edx
1004113c:	movzx  edx,BYTE PTR [eax]
1004113f:	mov    ecx,edx
10041141:	sub    ecx,0x4
10041144:	cmp    ecx,0x62
10041147:	jbe    0x10041120
10041149:	movzx  ecx,BYTE PTR [eax]
1004114c:	cmp    ecx,0x5e
1004114f:	je     0x100411a5
10041151:	cmp    ecx,0x5f
10041154:	jne    0x10041170
10041156:	xor    ecx,ecx
10041158:	mov    ch,BYTE PTR [eax+0x3]
1004115b:	mov    edx,0x1
10041160:	mov    cl,BYTE PTR [eax+0x4]
10041163:	cmp    ecx,0x20
10041166:	jge    0x1004116a
10041168:	shl    edx,cl
1004116a:	push   edi
1004116b:	or     edx,ebp
1004116d:	push   edx
1004116e:	jmp    0x100411a7
10041170:	cmp    ecx,0x58
10041173:	je     0x100411a5
10041175:	cmp    ecx,0x5d
10041178:	je     0x100411a5
1004117a:	cmp    ecx,0x60
1004117d:	je     0x100411a5
1004117f:	cmp    ecx,0x39
10041182:	je     0x10041199
10041184:	cmp    ecx,0x3a
10041187:	je     0x10041199
10041189:	cmp    ecx,0x42
1004118c:	je     0x10041199
1004118e:	cmp    ecx,0x1a
10041191:	je     0x100411b4
10041193:	pop    edi
10041194:	pop    esi
10041195:	xor    eax,eax
10041197:	pop    ebp
10041198:	ret    
10041199:	cmp    BYTE PTR [eax+0x1],0xc
1004119d:	jne    0x10041193
1004119f:	test   edi,ebp
100411a1:	jne    0x10041193
100411a3:	jmp    0x100411b4
100411a5:	push   edi
100411a6:	push   ebp
100411a7:	push   eax
100411a8:	call   0x100410f0
100411ad:	add    esp,0xc
100411b0:	test   eax,eax
100411b2:	je     0x10041193
100411b4:	xor    eax,eax
100411b6:	mov    ah,BYTE PTR [esi+0x1]
100411b9:	mov    al,BYTE PTR [esi+0x2]
100411bc:	add    esi,eax
100411be:	cmp    BYTE PTR [esi],0x54
100411c1:	je     0x10041100
100411c7:	pop    edi
100411c8:	pop    esi
100411c9:	mov    eax,0x1
100411ce:	pop    ebp
100411cf:	ret    
100411d0:	dec    ecx
100411d1:	adc    DWORD PTR [eax+edx*1],eax
100411d4:	adc    DWORD PTR cs:[eax+edx*1],eax
100411d8:	xor    edx,DWORD PTR [ecx]
100411da:	add    al,0x10
100411dc:	dec    ecx
100411dd:	adc    DWORD PTR [eax+edx*1],eax
100411e0:	add    BYTE PTR [eax],al
100411e2:	add    eax,DWORD PTR [ebx]
100411e4:	add    eax,DWORD PTR [ebx]
100411e6:	add    eax,DWORD PTR [ebx]
100411e8:	add    eax,DWORD PTR [ebx]
100411ea:	add    eax,DWORD PTR [ebx]
100411ec:	add    eax,DWORD PTR [ebx]
100411ee:	add    eax,DWORD PTR [ebx]
100411f0:	add    eax,DWORD PTR [ebx]
100411f2:	add    eax,DWORD PTR [ebx]
100411f4:	add    eax,DWORD PTR [ecx]
100411f6:	add    eax,DWORD PTR [ebx]
100411f8:	add    eax,DWORD PTR [ebx]
100411fa:	add    eax,DWORD PTR [ebx]
100411fc:	add    eax,DWORD PTR [ebx]
100411fe:	add    eax,DWORD PTR [ebx]
10041200:	add    eax,DWORD PTR [ebx]
10041202:	add    eax,DWORD PTR [ebx]
10041204:	add    eax,DWORD PTR [ebx]
10041206:	add    eax,DWORD PTR [ebx]
10041208:	add    eax,DWORD PTR [ebx]
1004120a:	add    eax,DWORD PTR [ebx]
1004120c:	add    eax,DWORD PTR [ebx]
1004120e:	add    eax,DWORD PTR [ebx]
10041210:	add    eax,DWORD PTR [ebx]
10041212:	add    eax,DWORD PTR [ebx]
10041214:	add    eax,DWORD PTR [ebx]
10041216:	add    eax,DWORD PTR [ebx]
10041218:	add    eax,DWORD PTR [ebx]
1004121a:	add    eax,DWORD PTR [ebx]
1004121c:	add    eax,DWORD PTR [ebx]
1004121e:	add    eax,DWORD PTR [ebx]
10041220:	add    eax,DWORD PTR [ebx]
10041222:	add    eax,DWORD PTR [ebx]
10041224:	add    eax,DWORD PTR [ebx]
10041226:	add    eax,DWORD PTR [ebx]
10041228:	add    eax,DWORD PTR [ebx]
1004122a:	add    eax,DWORD PTR [ebx]
1004122c:	add    eax,DWORD PTR [ebx]
1004122e:	add    eax,DWORD PTR [edx]
10041230:	add    eax,DWORD PTR [ebx]
10041232:	add    eax,DWORD PTR [ebx]
10041234:	add    eax,DWORD PTR [eax]
10041236:	add    BYTE PTR [eax],al
10041238:	add    eax,DWORD PTR [ebx]
1004123a:	add    eax,DWORD PTR [ebx]
1004123c:	add    eax,DWORD PTR [ebx]
1004123e:	add    eax,DWORD PTR [ebx]
10041240:	add    al,BYTE PTR [edx]
10041242:	add    cl,ah
10041244:	int3   
10041245:	int3   
10041246:	int3   
10041247:	int3   
10041248:	int3   
10041249:	int3   
1004124a:	int3   
1004124b:	int3   
1004124c:	int3   
1004124d:	int3   
1004124e:	int3   
1004124f:	int3   
10041250:	push   ebx
10041251:	push   ebp
10041252:	push   esi
10041253:	push   edi
10041254:	mov    edi,DWORD PTR [esp+0x18]
10041258:	or     ebp,0xffffffff
1004125b:	jmp    0x10041260
1004125d:	lea    ecx,[ecx+0x0]
10041260:	mov    eax,DWORD PTR [esp+0x14]
10041264:	mov    ebx,0x1
10041269:	add    eax,0x3
1004126c:	mov    esi,ebx
1004126e:	call   0x1003d1d0
10041273:	movzx  ecx,BYTE PTR [eax]
10041276:	lea    edx,[ecx-0x1c]
10041279:	cmp    edx,0x44
1004127c:	ja     0x100412f3
1004127e:	movzx  edx,BYTE PTR [edx+0x1004130c]
10041285:	jmp    DWORD PTR [edx*4+0x100412fc]
1004128c:	xor    edx,edx
1004128e:	cmp    ecx,0x58
10041291:	sete   dl
10041294:	push   edx
10041295:	push   edi
10041296:	push   eax
10041297:	call   0x10041250
1004129c:	add    esp,0xc
1004129f:	test   eax,eax
100412a1:	jl     0x100412f3
100412a3:	test   ebp,ebp
100412a5:	jge    0x100412cd
100412a7:	mov    ebp,eax
100412a9:	jmp    0x100412d1
100412ab:	add    eax,0x2
100412ae:	cmp    DWORD PTR [esp+0x1c],0x0
100412b3:	je     0x100412f3
100412b5:	test   ebp,ebp
100412b7:	jge    0x100412c9
100412b9:	test   BYTE PTR [edi],bl
100412bb:	movzx  ebp,BYTE PTR [eax+0x1]
100412bf:	je     0x100412d1
100412c1:	or     ebp,0x100
100412c7:	jmp    0x100412d1
100412c9:	movzx  eax,BYTE PTR [eax+0x1]
100412cd:	cmp    ebp,eax
100412cf:	jne    0x100412f3
100412d1:	mov    eax,DWORD PTR [esp+0x14]
100412d5:	xor    ecx,ecx
100412d7:	mov    ch,BYTE PTR [eax+0x1]
100412da:	mov    cl,BYTE PTR [eax+0x2]
100412dd:	add    eax,ecx
100412df:	cmp    BYTE PTR [eax],0x54
100412e2:	mov    DWORD PTR [esp+0x14],eax
100412e6:	je     0x10041260
100412ec:	pop    edi
100412ed:	pop    esi
100412ee:	mov    eax,ebp
100412f0:	pop    ebp
100412f1:	pop    ebx
100412f2:	ret    
100412f3:	pop    edi
100412f4:	pop    esi
100412f5:	pop    ebp
100412f6:	or     eax,0xffffffff
100412f9:	pop    ebx
100412fa:	ret    
100412fb:	nop
100412fc:	scas   al,BYTE PTR es:[edi]
100412fd:	adc    al,BYTE PTR [eax+edx*1]
10041300:	stos   DWORD PTR es:[edi],eax
10041301:	adc    al,BYTE PTR [eax+edx*1]
10041304:	mov    WORD PTR [edx],ss
10041306:	add    al,0x10
10041308:	repz adc al,BYTE PTR [eax+edx*1]
1004130c:	add    BYTE PTR [eax],al
1004130e:	add    eax,DWORD PTR [ebx]
10041310:	add    eax,DWORD PTR [eax]
10041312:	add    BYTE PTR [ebx],al
10041314:	add    eax,DWORD PTR [ebx]
10041316:	add    eax,DWORD PTR [ecx]
10041318:	add    eax,DWORD PTR [eax]
1004131a:	add    eax,DWORD PTR [ebx]
1004131c:	add    eax,DWORD PTR [ebx]
1004131e:	add    eax,DWORD PTR [ebx]
10041320:	add    eax,DWORD PTR [ebx]
10041322:	add    eax,DWORD PTR [ebx]
10041324:	add    eax,DWORD PTR [ebx]
10041326:	add    eax,DWORD PTR [ebx]
10041328:	add    eax,DWORD PTR [ebx]
1004132a:	add    eax,DWORD PTR [ebx]
1004132c:	add    eax,DWORD PTR [ebx]
1004132e:	add    eax,DWORD PTR [ebx]
10041330:	add    eax,DWORD PTR [ebx]
10041332:	add    eax,DWORD PTR [ebx]
10041334:	add    eax,DWORD PTR [ebx]
10041336:	add    eax,DWORD PTR [ebx]
10041338:	add    eax,DWORD PTR [ebx]
1004133a:	add    eax,DWORD PTR [ebx]
1004133c:	add    eax,DWORD PTR [ebx]
1004133e:	add    eax,DWORD PTR [ebx]
10041340:	add    eax,DWORD PTR [ebx]
10041342:	add    eax,DWORD PTR [ebx]
10041344:	add    eax,DWORD PTR [ebx]
10041346:	add    eax,DWORD PTR [ebx]
10041348:	add    al,BYTE PTR [ebx]
1004134a:	add    eax,DWORD PTR [ebx]
1004134c:	add    eax,DWORD PTR [edx]
1004134e:	add    al,BYTE PTR [edx]
10041350:	add    cl,ah
10041352:	int3   
10041353:	int3   
10041354:	int3   
10041355:	int3   
10041356:	int3   
10041357:	int3   
10041358:	int3   
10041359:	int3   
1004135a:	int3   
1004135b:	int3   
1004135c:	int3   
1004135d:	int3   
1004135e:	int3   
1004135f:	int3   
10041360:	push   ebp
10041361:	mov    ebp,esp
10041363:	and    esp,0xfffffff8
10041366:	mov    eax,0x108c
1004136b:	call   0x10047700
10041370:	mov    eax,ds:0x1007d030
10041375:	xor    eax,esp
10041377:	mov    DWORD PTR [esp+0x1088],eax
1004137e:	mov    eax,DWORD PTR [ebp+0xc]
10041381:	push   ebx
10041382:	push   esi
10041383:	push   edi
10041384:	xor    edi,edi
10041386:	mov    esi,edx
10041388:	xor    ebx,ebx
1004138a:	cmp    ecx,edi
1004138c:	mov    DWORD PTR [esp+0x18],esi
10041390:	mov    DWORD PTR [esp+0x2c],ecx
10041394:	mov    DWORD PTR [esp+0x28],eax
10041398:	mov    DWORD PTR [esp+0x14],0x1
100413a0:	mov    DWORD PTR [esp+0xc],edi
100413a4:	mov    DWORD PTR [esp+0x10],esi
100413a8:	je     0x10041912
100413ae:	cmp    eax,edi
100413b0:	mov    DWORD PTR [ecx],edi
100413b2:	jne    0x100413be
100413b4:	mov    eax,0x10
100413b9:	jmp    0x100418f4
100413be:	mov    DWORD PTR [eax],edi
100413c0:	mov    eax,DWORD PTR [ebp+0x8]
100413c3:	test   eax,0x800
100413c8:	je     0x100413d4
100413ca:	mov    eax,0x20
100413cf:	jmp    0x100418e2
100413d4:	test   eax,0xfc038580
100413d9:	je     0x100413e5
100413db:	mov    eax,0x11
100413e0:	jmp    0x100418e2
100413e5:	mov    DWORD PTR [esp+0x30],0x1006d0e8
100413ed:	mov    DWORD PTR [esp+0x34],0x1006d1e8
100413f5:	mov    DWORD PTR [esp+0x38],0x1006d2e8
100413fd:	mov    DWORD PTR [esp+0x3c],0x1006d428
10041405:	cmp    BYTE PTR [esi],0x28
10041408:	jne    0x1004153c
1004140e:	jmp    0x10041412
10041410:	xor    edi,edi
10041412:	cmp    BYTE PTR [esi+ebx*1+0x1],0x2a
10041417:	jne    0x1004153c
1004141d:	push   0x3
1004141f:	lea    edi,[esi+ebx*1+0x2]
10041423:	push   0x10072cdc
10041428:	push   edi
10041429:	call   0x1004b5b6
1004142e:	add    esp,0xc
10041431:	test   eax,eax
10041433:	jne    0x10041450
10041435:	mov    ecx,DWORD PTR [ebp+0x8]
10041438:	mov    eax,0x100000
1004143d:	and    ecx,0xff8fffff
10041443:	add    ebx,0x5
10041446:	or     ecx,eax
10041448:	mov    DWORD PTR [ebp+0x8],ecx
1004144b:	jmp    0x10041530
10041450:	push   0x3
10041452:	push   0x10072ce0
10041457:	push   edi
10041458:	call   0x1004b5b6
1004145d:	add    esp,0xc
10041460:	test   eax,eax
10041462:	jne    0x1004147f
10041464:	mov    ecx,DWORD PTR [ebp+0x8]
10041467:	mov    eax,0x200000
1004146c:	and    ecx,0xff8fffff
10041472:	add    ebx,0x5
10041475:	or     ecx,eax
10041477:	mov    DWORD PTR [ebp+0x8],ecx
1004147a:	jmp    0x10041530
1004147f:	push   0x5
10041481:	push   0x10072ce4
10041486:	push   edi
10041487:	call   0x1004b5b6
1004148c:	add    esp,0xc
1004148f:	test   eax,eax
10041491:	jne    0x100414ae
10041493:	mov    ecx,DWORD PTR [ebp+0x8]
10041496:	mov    eax,0x300000
1004149b:	and    ecx,0xff8fffff
100414a1:	add    ebx,0x7
100414a4:	or     ecx,eax
100414a6:	mov    DWORD PTR [ebp+0x8],ecx
100414a9:	jmp    0x10041530
100414ae:	push   0x4
100414b0:	push   0x10072cec
100414b5:	push   edi
100414b6:	call   0x1004b5b6
100414bb:	add    esp,0xc
100414be:	test   eax,eax
100414c0:	jne    0x100414da
100414c2:	mov    ecx,DWORD PTR [ebp+0x8]
100414c5:	mov    eax,0x400000
100414ca:	and    ecx,0xff8fffff
100414d0:	add    ebx,0x6
100414d3:	or     ecx,eax
100414d5:	mov    DWORD PTR [ebp+0x8],ecx
100414d8:	jmp    0x10041530
100414da:	push   0x8
100414dc:	push   0x10072cf4
100414e1:	push   edi
100414e2:	call   0x1004b5b6
100414e7:	add    esp,0xc
100414ea:	test   eax,eax
100414ec:	jne    0x10041506
100414ee:	mov    ecx,DWORD PTR [ebp+0x8]
100414f1:	mov    eax,0x500000
100414f6:	and    ecx,0xff8fffff
100414fc:	add    ebx,0xa
100414ff:	or     ecx,eax
10041501:	mov    DWORD PTR [ebp+0x8],ecx
10041504:	jmp    0x10041530
10041506:	push   0xc
10041508:	push   0x10072d00
1004150d:	push   edi
1004150e:	call   0x1004b5b6
10041513:	add    esp,0xc
10041516:	test   eax,eax
10041518:	jne    0x10041560
1004151a:	add    ebx,0xe
1004151d:	mov    eax,0x800000
10041522:	mov    edx,DWORD PTR [ebp+0x8]
10041525:	and    edx,0xfe7fffff
1004152b:	or     edx,eax
1004152d:	mov    DWORD PTR [ebp+0x8],edx
10041530:	cmp    BYTE PTR [esi+ebx*1],0x28
10041534:	je     0x10041410
1004153a:	xor    edi,edi
1004153c:	mov    ecx,DWORD PTR [ebp+0x8]
1004153f:	mov    eax,ecx
10041541:	and    eax,0x1800000
10041546:	je     0x1004157e
10041548:	cmp    eax,0x800000
1004154d:	je     0x1004157e
1004154f:	cmp    eax,0x1000000
10041554:	je     0x1004157e
10041556:	mov    eax,0x38
1004155b:	jmp    0x100418e2
10041560:	push   0xc
10041562:	push   0x10072d10
10041567:	push   edi
10041568:	call   0x1004b5b6
1004156d:	add    esp,0xc
10041570:	test   eax,eax
10041572:	jne    0x1004153a
10041574:	add    ebx,0xe
10041577:	mov    eax,0x1000000
1004157c:	jmp    0x10041522
1004157e:	mov    eax,ecx
10041580:	and    eax,0x700000
10041585:	cmp    eax,0x300000
1004158a:	mov    ecx,0x2
1004158f:	jg     0x100415e2
10041591:	je     0x100415db
10041593:	cmp    eax,edi
10041595:	je     0x100415a5
10041597:	cmp    eax,0x100000
1004159c:	je     0x100415d4
1004159e:	cmp    eax,0x200000
100415a3:	jne    0x100415f0
100415a5:	mov    eax,0xa
100415aa:	cmp    eax,0xff
100415af:	mov    DWORD PTR [esp+0x80],edi
100415b6:	jle    0x10041610
100415b8:	mov    DWORD PTR [esp+0x84],ecx
100415bf:	mov    ecx,eax
100415c1:	sar    ecx,0x8
100415c4:	mov    BYTE PTR [esp+0x88],cl
100415cb:	mov    BYTE PTR [esp+0x89],al
100415d2:	jmp    0x10041622
100415d4:	mov    eax,0xd
100415d9:	jmp    0x100415aa
100415db:	mov    eax,0xd0a
100415e0:	jmp    0x100415aa
100415e2:	cmp    eax,0x400000
100415e7:	je     0x10041603
100415e9:	cmp    eax,0x500000
100415ee:	je     0x100415fa
100415f0:	mov    eax,0x38
100415f5:	jmp    0x100418e2
100415fa:	mov    DWORD PTR [esp+0x80],ecx
10041601:	jmp    0x10041622
10041603:	mov    DWORD PTR [esp+0x80],0x1
1004160e:	jmp    0x10041622
10041610:	mov    DWORD PTR [esp+0x84],0x1
1004161b:	mov    BYTE PTR [esp+0x88],al
10041622:	lea    edx,[esp+0x90]
10041629:	mov    eax,edx
1004162b:	mov    DWORD PTR [esp+0x44],eax
1004162f:	mov    ecx,edx
10041631:	mov    eax,esi
10041633:	mov    DWORD PTR [esp+0x40],edx
10041637:	mov    DWORD PTR [esp+0x68],edi
1004163b:	mov    DWORD PTR [esp+0x6c],edi
1004163f:	mov    DWORD PTR [esp+0x64],edi
10041643:	mov    DWORD PTR [esp+0x60],edi
10041647:	mov    DWORD PTR [esp+0x58],edi
1004164b:	mov    DWORD PTR [esp+0x5c],edi
1004164f:	mov    DWORD PTR [esp+0x54],edi
10041653:	mov    DWORD PTR [esp+0x50],ecx
10041657:	mov    DWORD PTR [esp+0x48],esi
1004165b:	lea    edx,[eax+0x1]
1004165e:	mov    edi,edi
10041660:	mov    cl,BYTE PTR [eax]
10041662:	add    eax,0x1
10041665:	test   cl,cl
10041667:	jne    0x10041660
10041669:	sub    eax,edx
1004166b:	lea    edx,[esp+0x90]
10041672:	mov    DWORD PTR [esp+0x1c],edx
10041676:	xor    edi,edi
10041678:	lea    ecx,[esp+0x14]
1004167c:	push   ecx
1004167d:	lea    edx,[esp+0x34]
10041681:	push   edx
10041682:	push   edi
10041683:	lea    ecx,[esp+0x2c]
10041687:	push   ecx
10041688:	lea    edx,[esp+0x34]
1004168c:	push   edx
1004168d:	push   edi
1004168e:	push   edi
1004168f:	push   edi
10041690:	add    eax,esi
10041692:	lea    ecx,[esp+0x2c]
10041696:	push   ecx
10041697:	mov    DWORD PTR [esp+0x70],eax
1004169b:	mov    eax,DWORD PTR [ebp+0x8]
1004169e:	lea    edx,[esp+0x34]
100416a2:	push   edx
100416a3:	lea    ecx,[esp+0x44]
100416a7:	mov    edx,eax
100416a9:	push   ecx
100416aa:	and    edx,0x7
100416ad:	push   edx
100416ae:	add    esi,ebx
100416b0:	push   eax
100416b1:	mov    DWORD PTR [esp+0xac],edi
100416b8:	mov    DWORD PTR [esp+0xa4],eax
100416bf:	mov    DWORD PTR [esp+0xa8],edi
100416c6:	mov    DWORD PTR [esp+0x44],esi
100416ca:	mov    BYTE PTR [esp+0xc4],0x5e
100416d2:	call   0x10040d00
100416d7:	mov    eax,DWORD PTR [esp+0x40]
100416db:	add    esp,0x34
100416de:	cmp    eax,edi
100416e0:	jne    0x100418e2
100416e6:	cmp    DWORD PTR [esp+0x14],0x10000
100416ee:	jle    0x100416fa
100416f0:	mov    eax,0x14
100416f5:	jmp    0x100418e2
100416fa:	mov    eax,DWORD PTR [esp+0x5c]
100416fe:	mov    ecx,DWORD PTR [esp+0x14]
10041702:	add    eax,0x3
10041705:	imul   eax,DWORD PTR [esp+0x58]
1004170a:	lea    ebx,[eax+ecx*1+0x28]
1004170e:	push   ebx
1004170f:	call   DWORD PTR ds:0x1007e4e8
10041715:	mov    edi,eax
10041717:	add    esp,0x4
1004171a:	test   edi,edi
1004171c:	jne    0x10041728
1004171e:	mov    eax,0x15
10041723:	jmp    0x100418e2
10041728:	mov    DWORD PTR [edi+0x4],ebx
1004172b:	mov    DWORD PTR [edi],0x50435245
10041731:	mov    edx,DWORD PTR [esp+0x70]
10041735:	mov    DWORD PTR [edi+0x8],edx
10041738:	movzx  eax,WORD PTR [esp+0x74]
1004173d:	xor    ecx,ecx
1004173f:	mov    WORD PTR [edi+0xc],ax
10041743:	mov    WORD PTR [edi+0xe],cx
10041747:	mov    WORD PTR [edi+0x14],cx
1004174b:	mov    WORD PTR [edi+0x16],cx
1004174f:	mov    WORD PTR [edi+0x18],0x28
10041755:	movzx  edx,WORD PTR [esp+0x5c]
1004175a:	mov    WORD PTR [edi+0x1a],dx
1004175e:	movzx  eax,WORD PTR [esp+0x58]
10041763:	mov    WORD PTR [edi+0x1c],ax
10041767:	mov    WORD PTR [edi+0x1e],cx
1004176b:	mov    DWORD PTR [edi+0x20],ecx
1004176e:	mov    DWORD PTR [edi+0x24],ecx
10041771:	mov    edx,DWORD PTR [esp+0x60]
10041775:	mov    DWORD PTR [esp+0x64],edx
10041779:	mov    DWORD PTR [esp+0x60],ecx
1004177d:	mov    DWORD PTR [esp+0x58],ecx
10041781:	movzx  eax,WORD PTR [edi+0x18]
10041785:	push   ecx
10041786:	add    eax,edi
10041788:	mov    DWORD PTR [esp+0x58],eax
1004178c:	movzx  edx,WORD PTR [edi+0x1a]
10041790:	movzx  ebx,WORD PTR [edi+0x1c]
10041794:	imul   ebx,edx
10041797:	lea    edx,[esp+0x34]
1004179b:	push   edx
1004179c:	push   ecx
1004179d:	lea    edx,[esp+0x2c]
100417a1:	push   edx
100417a2:	lea    edx,[esp+0x34]
100417a6:	push   edx
100417a7:	push   ecx
100417a8:	push   ecx
100417a9:	push   ecx
100417aa:	add    ebx,eax
100417ac:	mov    DWORD PTR [esp+0x98],ecx
100417b3:	mov    DWORD PTR [esp+0x9c],ecx
100417ba:	lea    eax,[esp+0xb0]
100417c1:	mov    DWORD PTR [esp+0x64],ebx
100417c5:	mov    DWORD PTR [esp+0x70],eax
100417c9:	lea    ecx,[esp+0x2c]
100417cd:	push   ecx
100417ce:	mov    BYTE PTR [ebx],0x5e
100417d1:	mov    eax,DWORD PTR [edi+0x8]
100417d4:	lea    edx,[esp+0x34]
100417d8:	push   edx
100417d9:	lea    ecx,[esp+0x44]
100417dd:	mov    edx,eax
100417df:	push   ecx
100417e0:	and    edx,0x7
100417e3:	push   edx
100417e4:	push   eax
100417e5:	mov    DWORD PTR [esp+0x44],esi
100417e9:	mov    DWORD PTR [esp+0x50],ebx
100417ed:	call   0x10040d00
100417f2:	movzx  eax,WORD PTR [esp+0x94]
100417fa:	mov    WORD PTR [edi+0x10],ax
100417fe:	mov    cx,WORD PTR [esp+0x9c]
10041806:	mov    WORD PTR [edi+0x12],cx
1004180a:	movzx  edx,WORD PTR [esp+0xa8]
10041812:	add    esp,0x34
10041815:	mov    WORD PTR [edi+0xc],dx
10041819:	cmp    DWORD PTR [esp+0x7c],0x0
1004181e:	je     0x10041828
10041820:	mov    DWORD PTR [esp+0x20],0xffffffff
10041828:	cmp    DWORD PTR [esp+0xc],0x0
1004182d:	jne    0x10041840
1004182f:	mov    eax,DWORD PTR [esp+0x10]
10041833:	cmp    BYTE PTR [eax],0x0
10041836:	je     0x10041840
10041838:	mov    DWORD PTR [esp+0xc],0x16
10041840:	mov    eax,DWORD PTR [esp+0x1c]
10041844:	mov    BYTE PTR [eax],0x0
10041847:	add    eax,0x1
1004184a:	sub    eax,ebx
1004184c:	cmp    eax,DWORD PTR [esp+0x14]
10041850:	jle    0x1004185c
10041852:	mov    DWORD PTR [esp+0xc],0x17
1004185a:	jmp    0x100418d4
1004185c:	cmp    DWORD PTR [esp+0xc],0x0
10041861:	jne    0x100418d4
10041863:	mov    eax,DWORD PTR [esp+0x50]
10041867:	lea    ecx,[esp+0x90]
1004186e:	cmp    eax,ecx
10041870:	jbe    0x100418c2
10041872:	sub    eax,0x2
10041875:	mov    DWORD PTR [esp+0x50],eax
10041879:	movzx  edx,BYTE PTR [eax+0x1]
1004187d:	mov    dh,BYTE PTR [eax]
1004187f:	xor    ecx,ecx
10041881:	mov    eax,edx
10041883:	mov    ch,BYTE PTR [eax+ebx*1]
10041886:	mov    DWORD PTR [esp+0x14],eax
1004188a:	mov    cl,BYTE PTR [eax+ebx*1+0x1]
1004188e:	mov    eax,ebx
10041890:	mov    esi,ecx
10041892:	call   0x1003d4e0
10041897:	test   eax,eax
10041899:	je     0x100418b8
1004189b:	mov    esi,DWORD PTR [esp+0x14]
1004189f:	mov    edx,eax
100418a1:	sub    edx,ebx
100418a3:	sar    edx,0x8
100418a6:	sub    al,bl
100418a8:	mov    BYTE PTR [esi+ebx*1],dl
100418ab:	mov    BYTE PTR [esi+ebx*1+0x1],al
100418af:	cmp    DWORD PTR [esp+0xc],0x0
100418b4:	je     0x10041863
100418b6:	jmp    0x100418d4
100418b8:	mov    DWORD PTR [esp+0xc],0x35
100418c0:	jmp    0x100418d4
100418c2:	mov    ax,WORD PTR [edi+0x12]
100418c6:	cmp    ax,WORD PTR [edi+0x10]
100418ca:	jbe    0x10041929
100418cc:	mov    DWORD PTR [esp+0xc],0xf
100418d4:	push   edi
100418d5:	call   DWORD PTR ds:0x1007e4ec
100418db:	mov    eax,DWORD PTR [esp+0x10]
100418df:	add    esp,0x4
100418e2:	mov    ecx,DWORD PTR [esp+0x10]
100418e6:	sub    ecx,DWORD PTR [esp+0x18]
100418ea:	mov    edx,DWORD PTR [esp+0x28]
100418ee:	mov    DWORD PTR [edx],ecx
100418f0:	mov    ecx,DWORD PTR [esp+0x2c]
100418f4:	test   eax,eax
100418f6:	mov    edi,0x1006d738
100418fb:	jle    0x10041910
100418fd:	lea    ecx,[ecx+0x0]
10041900:	mov    dl,BYTE PTR [edi]
10041902:	add    edi,0x1
10041905:	test   dl,dl
10041907:	jne    0x10041900
10041909:	sub    eax,0x1
1004190c:	test   eax,eax
1004190e:	jg     0x10041900
10041910:	mov    DWORD PTR [ecx],edi
10041912:	xor    eax,eax
10041914:	pop    edi
10041915:	pop    esi
10041916:	pop    ebx
10041917:	mov    ecx,DWORD PTR [esp+0x1088]
1004191e:	xor    ecx,esp
10041920:	call   0x10041d97
10041925:	mov    esp,ebp
10041927:	pop    ebp
10041928:	ret    
10041929:	mov    eax,DWORD PTR [edi+0x8]
1004192c:	test   al,0x10
1004192e:	jne    0x100419b4
10041934:	mov    DWORD PTR [esp+0x18],eax
10041938:	mov    eax,DWORD PTR [esp+0x6c]
1004193c:	push   eax
1004193d:	push   0x0
1004193f:	lea    ecx,[esp+0x20]
10041943:	push   ecx
10041944:	push   ebx
10041945:	call   0x10041020
1004194a:	add    esp,0x10
1004194d:	test   eax,eax
1004194f:	je     0x10041957
10041951:	or     DWORD PTR [edi+0x8],0x10
10041955:	jmp    0x100419b4
10041957:	mov    eax,DWORD PTR [esp+0x24]
1004195b:	test   eax,eax
1004195d:	jge    0x10041973
1004195f:	push   0x0
10041961:	lea    edx,[esp+0x1c]
10041965:	push   edx
10041966:	push   ebx
10041967:	call   0x10041250
1004196c:	add    esp,0xc
1004196f:	test   eax,eax
10041971:	jl     0x1004199b
10041973:	mov    ecx,eax
10041975:	and    ecx,0xff
1004197b:	test   eax,0x100
10041980:	je     0x10041990
10041982:	mov    edx,DWORD PTR [esp+0x34]
10041986:	movzx  edx,BYTE PTR [edx+ecx*1]
1004198a:	cmp    edx,ecx
1004198c:	jne    0x10041990
1004198e:	mov    eax,ecx
10041990:	or     WORD PTR [edi+0xc],0x2
10041995:	mov    WORD PTR [edi+0x14],ax
10041999:	jmp    0x100419b4
1004199b:	mov    eax,DWORD PTR [esp+0x6c]
1004199f:	push   eax
100419a0:	push   0x0
100419a2:	push   ebx
100419a3:	call   0x100410f0
100419a8:	add    esp,0xc
100419ab:	test   eax,eax
100419ad:	je     0x100419b4
100419af:	or     WORD PTR [edi+0xc],0x8
100419b4:	mov    eax,DWORD PTR [esp+0x20]
100419b8:	test   eax,eax
100419ba:	jl     0x100419f2
100419bc:	test   BYTE PTR [edi+0x8],0x10
100419c0:	je     0x100419c9
100419c2:	test   eax,0x200
100419c7:	je     0x100419f2
100419c9:	mov    ecx,eax
100419cb:	and    ecx,0xff
100419d1:	test   eax,0x100
100419d6:	je     0x100419e9
100419d8:	mov    edx,DWORD PTR [esp+0x34]
100419dc:	movzx  edx,BYTE PTR [edx+ecx*1]
100419e0:	cmp    edx,ecx
100419e2:	jne    0x100419e9
100419e4:	and    eax,0xfffffeff
100419e9:	or     WORD PTR [edi+0xc],0x4
100419ee:	mov    WORD PTR [edi+0x16],ax
100419f2:	mov    ecx,DWORD PTR [esp+0x1094]
100419f9:	mov    eax,edi
100419fb:	pop    edi
100419fc:	pop    esi
100419fd:	pop    ebx
100419fe:	xor    ecx,esp
10041a00:	call   0x10041d97
10041a05:	mov    esp,ebp
10041a07:	pop    ebp
10041a08:	ret    
10041a09:	int3   
10041a0a:	int3   
10041a0b:	int3   
10041a0c:	int3   
10041a0d:	int3   
10041a0e:	int3   
10041a0f:	int3   
10041a10:	push   ebp
10041a11:	mov    ebp,esp
10041a13:	and    esp,0xfffffff8
10041a16:	sub    esp,0x54
10041a19:	mov    eax,ds:0x1007d030
10041a1e:	xor    eax,esp
10041a20:	mov    DWORD PTR [esp+0x50],eax
10041a24:	test   edx,edx
10041a26:	push   ebx
10041a27:	mov    eax,edx
10041a29:	je     0x10041a7c
10041a2b:	test   esi,esi
10041a2d:	je     0x10041a7c
10041a2f:	cmp    DWORD PTR [edx],0x50435245
10041a35:	je     0x10041a64
10041a37:	lea    eax,[esp+0x2c]
10041a3b:	push   eax
10041a3c:	lea    ecx,[esp+0x8]
10041a40:	push   ecx
10041a41:	xor    ebx,ebx
10041a43:	call   0x10041c20
10041a48:	add    esp,0x8
10041a4b:	test   eax,eax
10041a4d:	jne    0x10041a64
10041a4f:	mov    eax,0xfffffffc
10041a54:	pop    ebx
10041a55:	mov    ecx,DWORD PTR [esp+0x50]
10041a59:	xor    ecx,esp
10041a5b:	call   0x10041d97
10041a60:	mov    esp,ebp
10041a62:	pop    ebp
10041a63:	ret    
10041a64:	movzx  edx,WORD PTR [eax+0x10]
10041a68:	mov    DWORD PTR [esi],edx
10041a6a:	xor    eax,eax
10041a6c:	pop    ebx
10041a6d:	mov    ecx,DWORD PTR [esp+0x50]
10041a71:	xor    ecx,esp
10041a73:	call   0x10041d97
10041a78:	mov    esp,ebp
10041a7a:	pop    ebp
10041a7b:	ret    
10041a7c:	mov    ecx,DWORD PTR [esp+0x54]
10041a80:	pop    ebx
10041a81:	xor    ecx,esp
10041a83:	mov    eax,0xfffffffe
10041a88:	call   0x10041d97
10041a8d:	mov    esp,ebp
10041a8f:	pop    ebp
10041a90:	ret    
10041a91:	int3   
10041a92:	int3   
10041a93:	int3   
10041a94:	int3   
10041a95:	int3   
10041a96:	int3   
10041a97:	int3   
10041a98:	int3   
10041a99:	int3   
10041a9a:	int3   
10041a9b:	int3   
10041a9c:	int3   
10041a9d:	int3   
10041a9e:	int3   
10041a9f:	int3   
10041aa0:	cmp    DWORD PTR [esp+0x4],0x2
10041aa5:	push   esi
10041aa6:	mov    esi,eax
10041aa8:	movzx  eax,BYTE PTR [ecx]
10041aab:	jne    0x10041ae8
10041aad:	cmp    eax,0xa
10041ab0:	je     0x10041adb
10041ab2:	cmp    eax,0xd
10041ab5:	jne    0x10041b4e
10041abb:	add    esi,0xffffffff
10041abe:	cmp    ecx,esi
10041ac0:	jae    0x10041acd
10041ac2:	cmp    BYTE PTR [ecx+0x1],0xa
10041ac6:	mov    eax,0x2
10041acb:	je     0x10041ad2
10041acd:	mov    eax,0x1
10041ad2:	mov    DWORD PTR [edi],eax
10041ad4:	mov    eax,0x1
10041ad9:	pop    esi
10041ada:	ret    
10041adb:	mov    DWORD PTR [edi],0x1
10041ae1:	mov    eax,0x1
10041ae6:	pop    esi
10041ae7:	ret    
10041ae8:	cmp    eax,0x85
10041aed:	jg     0x10041b33
10041aef:	je     0x10041b20
10041af1:	cmp    eax,0xa
10041af4:	jl     0x10041b4e
10041af6:	cmp    eax,0xc
10041af9:	jle    0x10041adb
10041afb:	cmp    eax,0xd
10041afe:	jne    0x10041b4e
10041b00:	add    esi,0xffffffff
10041b03:	cmp    ecx,esi
10041b05:	jae    0x10041b12
10041b07:	cmp    BYTE PTR [ecx+0x1],0xa
10041b0b:	mov    eax,0x2
10041b10:	je     0x10041b17
10041b12:	mov    eax,0x1
10041b17:	mov    DWORD PTR [edi],eax
10041b19:	mov    eax,0x1
10041b1e:	pop    esi
10041b1f:	ret    
10041b20:	xor    eax,eax
10041b22:	test   edx,edx
10041b24:	setne  al
10041b27:	pop    esi
10041b28:	add    eax,0x1
10041b2b:	mov    DWORD PTR [edi],eax
10041b2d:	mov    eax,0x1
10041b32:	ret    
10041b33:	cmp    eax,0x2028
10041b38:	jl     0x10041b4e
10041b3a:	cmp    eax,0x2029
10041b3f:	jg     0x10041b4e
10041b41:	mov    DWORD PTR [edi],0x3
10041b47:	mov    eax,0x1
10041b4c:	pop    esi
10041b4d:	ret    
10041b4e:	xor    eax,eax
10041b50:	pop    esi
10041b51:	ret    
10041b52:	int3   
10041b53:	int3   
10041b54:	int3   
10041b55:	int3   
10041b56:	int3   
10041b57:	int3   
10041b58:	int3   
10041b59:	int3   
10041b5a:	int3   
10041b5b:	int3   
10041b5c:	int3   
10041b5d:	int3   
10041b5e:	int3   
10041b5f:	int3   
10041b60:	movzx  eax,BYTE PTR [ecx-0x1]
10041b64:	sub    ecx,0x1
10041b67:	cmp    DWORD PTR [esp+0x4],0x2
10041b6c:	jne    0x10041ba4
10041b6e:	cmp    eax,0xa
10041b71:	je     0x10041b88
10041b73:	cmp    eax,0xd
10041b76:	jne    0x10041c0f
10041b7c:	mov    DWORD PTR [edx],0x1
10041b82:	mov    eax,0x1
10041b87:	ret    
10041b88:	cmp    ecx,esi
10041b8a:	jbe    0x10041b97
10041b8c:	cmp    BYTE PTR [ecx-0x1],0xd
10041b90:	mov    eax,0x2
10041b95:	je     0x10041b9c
10041b97:	mov    eax,0x1
10041b9c:	mov    DWORD PTR [edx],eax
10041b9e:	mov    eax,0x1
10041ba3:	ret    
10041ba4:	cmp    eax,0x85
10041ba9:	jg     0x10041bf5
10041bab:	je     0x10041be1
10041bad:	cmp    eax,0xa
10041bb0:	je     0x10041bc5
10041bb2:	jle    0x10041c0f
10041bb4:	cmp    eax,0xd
10041bb7:	jg     0x10041c0f
10041bb9:	mov    DWORD PTR [edx],0x1
10041bbf:	mov    eax,0x1
10041bc4:	ret    
10041bc5:	cmp    ecx,esi
10041bc7:	jbe    0x10041bd4
10041bc9:	cmp    BYTE PTR [ecx-0x1],0xd
10041bcd:	mov    eax,0x2
10041bd2:	je     0x10041bd9
10041bd4:	mov    eax,0x1
10041bd9:	mov    DWORD PTR [edx],eax
10041bdb:	mov    eax,0x1
10041be0:	ret    
10041be1:	xor    eax,eax
10041be3:	cmp    DWORD PTR [esp+0x8],eax
10041be7:	setne  al
10041bea:	add    eax,0x1
10041bed:	mov    DWORD PTR [edx],eax
10041bef:	mov    eax,0x1
10041bf4:	ret    
10041bf5:	cmp    eax,0x2028
10041bfa:	jl     0x10041c0f
10041bfc:	cmp    eax,0x2029
10041c01:	jg     0x10041c0f
10041c03:	mov    DWORD PTR [edx],0x3
10041c09:	mov    eax,0x1
10041c0e:	ret    
10041c0f:	xor    eax,eax
10041c11:	ret    
10041c12:	int3   
10041c13:	int3   
10041c14:	int3   
10041c15:	int3   
10041c16:	int3   
10041c17:	int3   
10041c18:	int3   
10041c19:	int3   
10041c1a:	int3   
10041c1b:	int3   
10041c1c:	int3   
10041c1d:	int3   
10041c1e:	int3   
10041c1f:	int3   
10041c20:	mov    eax,DWORD PTR [edx]
10041c22:	push   ebp
10041c23:	mov    ebp,DWORD PTR [esp+0x8]
10041c27:	push   esi
10041c28:	mov    ecx,eax
10041c2a:	and    ecx,0xff0000
10041c30:	mov    esi,eax
10041c32:	shr    esi,0x10
10041c35:	or     ecx,esi
10041c37:	mov    esi,eax
10041c39:	and    esi,0xff00
10041c3f:	shl    eax,0x10
10041c42:	or     esi,eax
10041c44:	shr    ecx,0x8
10041c47:	shl    esi,0x8
10041c4a:	or     ecx,esi
10041c4c:	cmp    ecx,0x50435245
10041c52:	je     0x10041c59
10041c54:	pop    esi
10041c55:	xor    eax,eax
10041c57:	pop    ebp
10041c58:	ret    
10041c59:	push   edi
10041c5a:	mov    esi,edx
10041c5c:	mov    ecx,0xa
10041c61:	mov    edi,ebp
10041c63:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10041c65:	mov    eax,DWORD PTR [edx+0x4]
10041c68:	mov    ecx,eax
10041c6a:	and    ecx,0xff0000
10041c70:	mov    esi,eax
10041c72:	shr    esi,0x10
10041c75:	or     ecx,esi
10041c77:	shr    ecx,0x8
10041c7a:	mov    esi,eax
10041c7c:	shl    eax,0x10
10041c7f:	and    esi,0xff00
10041c85:	or     esi,eax
10041c87:	shl    esi,0x8
10041c8a:	or     ecx,esi
10041c8c:	mov    DWORD PTR [ebp+0x4],ecx
10041c8f:	mov    eax,DWORD PTR [edx+0x8]
10041c92:	mov    ecx,eax
10041c94:	and    ecx,0xff0000
10041c9a:	mov    esi,eax
10041c9c:	shr    esi,0x10
10041c9f:	or     ecx,esi
10041ca1:	shr    ecx,0x8
10041ca4:	mov    esi,eax
10041ca6:	shl    eax,0x10
10041ca9:	and    esi,0xff00
10041caf:	or     esi,eax
10041cb1:	shl    esi,0x8
10041cb4:	or     ecx,esi
10041cb6:	test   ebx,ebx
10041cb8:	mov    DWORD PTR [ebp+0x8],ecx
10041cbb:	movzx  eax,WORD PTR [edx+0xc]
10041cbf:	movzx  cx,ah
10041cc3:	mov    ch,al
10041cc5:	mov    WORD PTR [ebp+0xc],cx
10041cc9:	movzx  eax,WORD PTR [edx+0x10]
10041ccd:	movzx  cx,ah
10041cd1:	mov    ch,al
10041cd3:	mov    WORD PTR [ebp+0x10],cx
10041cd7:	movzx  eax,WORD PTR [edx+0x12]
10041cdb:	movzx  cx,ah
10041cdf:	mov    ch,al
10041ce1:	mov    WORD PTR [ebp+0x12],cx
10041ce5:	movzx  eax,WORD PTR [edx+0x14]
10041ce9:	movzx  cx,ah
10041ced:	mov    ch,al
10041cef:	mov    WORD PTR [ebp+0x14],cx
10041cf3:	movzx  eax,WORD PTR [edx+0x16]
10041cf7:	movzx  cx,ah
10041cfb:	mov    ch,al
10041cfd:	mov    WORD PTR [ebp+0x16],cx
10041d01:	movzx  eax,WORD PTR [edx+0x18]
10041d05:	movzx  cx,ah
10041d09:	mov    ch,al
10041d0b:	mov    WORD PTR [ebp+0x18],cx
10041d0f:	movzx  eax,WORD PTR [edx+0x1a]
10041d13:	movzx  cx,ah
10041d17:	mov    ch,al
10041d19:	mov    WORD PTR [ebp+0x1a],cx
10041d1d:	movzx  eax,WORD PTR [edx+0x1c]
10041d21:	movzx  dx,ah
10041d25:	mov    dh,al
10041d27:	mov    WORD PTR [ebp+0x1c],dx
10041d2b:	je     0x10041d8c
10041d2d:	mov    edx,DWORD PTR [esp+0x14]
10041d31:	mov    ecx,0xa
10041d36:	mov    esi,ebx
10041d38:	mov    edi,edx
10041d3a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10041d3c:	mov    eax,DWORD PTR [ebx]
10041d3e:	mov    ecx,eax
10041d40:	and    ecx,0xff0000
10041d46:	mov    esi,eax
10041d48:	shr    esi,0x10
10041d4b:	or     ecx,esi
10041d4d:	mov    esi,eax
10041d4f:	shl    esi,0x10
10041d52:	and    eax,0xff00
10041d57:	or     esi,eax
10041d59:	shl    esi,0x8
10041d5c:	shr    ecx,0x8
10041d5f:	or     ecx,esi
10041d61:	mov    DWORD PTR [edx],ecx
10041d63:	mov    eax,DWORD PTR [ebx+0x4]
10041d66:	mov    ecx,eax
10041d68:	mov    esi,eax
10041d6a:	shr    esi,0x10
10041d6d:	and    ecx,0xff0000
10041d73:	or     ecx,esi
10041d75:	mov    esi,eax
10041d77:	shl    esi,0x10
10041d7a:	and    eax,0xff00
10041d7f:	or     esi,eax
10041d81:	shr    ecx,0x8
10041d84:	shl    esi,0x8
10041d87:	or     ecx,esi
10041d89:	mov    DWORD PTR [edx+0x4],ecx
10041d8c:	pop    edi
10041d8d:	pop    esi
10041d8e:	mov    eax,ebp
10041d90:	pop    ebp
10041d91:	ret    
10041d92:	jmp    0x10042408
10041d97:	cmp    ecx,DWORD PTR ds:0x1007d030
10041d9d:	jne    0x10041da1
10041d9f:	repz ret 
10041da1:	jmp    0x10045766
10041da6:	push   ebp
10041da7:	mov    ebp,esp
10041da9:	mov    eax,DWORD PTR [ebp+0x14]
10041dac:	push   esi
10041dad:	push   edi
10041dae:	xor    edi,edi
10041db0:	cmp    eax,edi
10041db2:	je     0x10041dfb
10041db4:	cmp    DWORD PTR [ebp+0x8],edi
10041db7:	jne    0x10041dd4
10041db9:	call   0x100458a5
10041dbe:	push   0x16
10041dc0:	pop    esi
10041dc1:	mov    DWORD PTR [eax],esi
10041dc3:	push   edi
10041dc4:	push   edi
10041dc5:	push   edi
10041dc6:	push   edi
10041dc7:	push   edi
10041dc8:	call   0x1004228c
10041dcd:	add    esp,0x14
10041dd0:	mov    eax,esi
10041dd2:	jmp    0x10041dfd
10041dd4:	cmp    DWORD PTR [ebp+0x10],edi
10041dd7:	je     0x10041db9
10041dd9:	cmp    DWORD PTR [ebp+0xc],eax
10041ddc:	jae    0x10041dec
10041dde:	call   0x100458a5
10041de3:	push   0x22
10041de5:	pop    ecx
10041de6:	mov    DWORD PTR [eax],ecx
10041de8:	mov    esi,ecx
10041dea:	jmp    0x10041dc3
10041dec:	push   eax
10041ded:	push   DWORD PTR [ebp+0x10]
10041df0:	push   DWORD PTR [ebp+0x8]
10041df3:	call   0x10044410
10041df8:	add    esp,0xc
10041dfb:	xor    eax,eax
10041dfd:	pop    edi
10041dfe:	pop    esi
10041dff:	pop    ebp
10041e00:	ret    
10041e01:	mov    eax,ecx
10041e03:	and    DWORD PTR [eax+0x4],0x0
10041e07:	and    DWORD PTR [eax+0x8],0x0
10041e0b:	mov    DWORD PTR [eax],0x10065590
10041e11:	ret    
10041e12:	push   ebx
10041e13:	mov    ebx,DWORD PTR [esp+0x8]
10041e17:	push   esi
10041e18:	push   edi
10041e19:	mov    edi,ecx
10041e1b:	mov    DWORD PTR [edi],0x10065590
10041e21:	mov    eax,DWORD PTR [ebx]
10041e23:	test   eax,eax
10041e25:	je     0x10041e4d
10041e27:	push   eax
10041e28:	call   0x10041f10
10041e2d:	mov    esi,eax
10041e2f:	inc    esi
10041e30:	push   esi
10041e31:	call   0x10043cdd
10041e36:	test   eax,eax
10041e38:	pop    ecx
10041e39:	pop    ecx
10041e3a:	mov    DWORD PTR [edi+0x4],eax
10041e3d:	je     0x10041e51
10041e3f:	push   DWORD PTR [ebx]
10041e41:	push   esi
10041e42:	push   eax
10041e43:	call   0x100458e9
10041e48:	add    esp,0xc
10041e4b:	jmp    0x10041e51
10041e4d:	and    DWORD PTR [edi+0x4],0x0
10041e51:	mov    DWORD PTR [edi+0x8],0x1
10041e58:	mov    eax,edi
10041e5a:	pop    edi
10041e5b:	pop    esi
10041e5c:	pop    ebx
10041e5d:	ret    0x4
10041e60:	mov    eax,ecx
10041e62:	mov    ecx,DWORD PTR [esp+0x4]
10041e66:	mov    DWORD PTR [eax],0x10065590
10041e6c:	mov    ecx,DWORD PTR [ecx]
10041e6e:	and    DWORD PTR [eax+0x8],0x0
10041e72:	mov    DWORD PTR [eax+0x4],ecx
10041e75:	ret    0x8
10041e78:	push   ebx
10041e79:	mov    ebx,DWORD PTR [esp+0x8]
10041e7d:	push   esi
10041e7e:	mov    esi,ecx
10041e80:	mov    DWORD PTR [esi],0x10065590
10041e86:	mov    eax,DWORD PTR [ebx+0x8]
10041e89:	mov    DWORD PTR [esi+0x8],eax
10041e8c:	test   eax,eax
10041e8e:	mov    eax,DWORD PTR [ebx+0x4]
10041e91:	push   edi
10041e92:	je     0x10041ec5
10041e94:	test   eax,eax
10041e96:	je     0x10041ebf
10041e98:	push   eax
10041e99:	call   0x10041f10
10041e9e:	mov    edi,eax
10041ea0:	inc    edi
10041ea1:	push   edi
10041ea2:	call   0x10043cdd
10041ea7:	test   eax,eax
10041ea9:	pop    ecx
10041eaa:	pop    ecx
10041eab:	mov    DWORD PTR [esi+0x4],eax
10041eae:	je     0x10041ec8
10041eb0:	push   DWORD PTR [ebx+0x4]
10041eb3:	push   edi
10041eb4:	push   eax
10041eb5:	call   0x100458e9
10041eba:	add    esp,0xc
10041ebd:	jmp    0x10041ec8
10041ebf:	and    DWORD PTR [esi+0x4],0x0
10041ec3:	jmp    0x10041ec8
10041ec5:	mov    DWORD PTR [esi+0x4],eax
10041ec8:	pop    edi
10041ec9:	mov    eax,esi
10041ecb:	pop    esi
10041ecc:	pop    ebx
10041ecd:	ret    0x4
10041ed0:	cmp    DWORD PTR [ecx+0x8],0x0
10041ed4:	mov    DWORD PTR [ecx],0x10065590
10041eda:	je     0x10041ee5
10041edc:	push   DWORD PTR [ecx+0x4]
10041edf:	call   0x10042408
10041ee4:	pop    ecx
10041ee5:	ret    
10041ee6:	mov    eax,DWORD PTR [ecx+0x4]
10041ee9:	test   eax,eax
10041eeb:	jne    0x10041ef2
10041eed:	mov    eax,0x10065598
10041ef2:	ret    
10041ef3:	push   esi
10041ef4:	mov    esi,ecx
10041ef6:	call   0x10041ed0
10041efb:	test   BYTE PTR [esp+0x8],0x1
10041f00:	je     0x10041f09
10041f02:	push   esi
10041f03:	call   0x10041d92
10041f08:	pop    ecx
10041f09:	mov    eax,esi
10041f0b:	pop    esi
10041f0c:	ret    0x4
10041f0f:	int3   
10041f10:	mov    ecx,DWORD PTR [esp+0x4]
10041f14:	test   ecx,0x3
10041f1a:	je     0x10041f40
10041f1c:	mov    al,BYTE PTR [ecx]
10041f1e:	add    ecx,0x1
10041f21:	test   al,al
10041f23:	je     0x10041f73
10041f25:	test   ecx,0x3
10041f2b:	jne    0x10041f1c
10041f2d:	add    eax,0x0
10041f32:	lea    esp,[esp+0x0]
10041f39:	lea    esp,[esp+0x0]
10041f40:	mov    eax,DWORD PTR [ecx]
10041f42:	mov    edx,0x7efefeff
10041f47:	add    edx,eax
10041f49:	xor    eax,0xffffffff
10041f4c:	xor    eax,edx
10041f4e:	add    ecx,0x4
10041f51:	test   eax,0x81010100
10041f56:	je     0x10041f40
10041f58:	mov    eax,DWORD PTR [ecx-0x4]
10041f5b:	test   al,al
10041f5d:	je     0x10041f91
10041f5f:	test   ah,ah
10041f61:	je     0x10041f87
10041f63:	test   eax,0xff0000
10041f68:	je     0x10041f7d
10041f6a:	test   eax,0xff000000
10041f6f:	je     0x10041f73
10041f71:	jmp    0x10041f40
10041f73:	lea    eax,[ecx-0x1]
10041f76:	mov    ecx,DWORD PTR [esp+0x4]
10041f7a:	sub    eax,ecx
10041f7c:	ret    
10041f7d:	lea    eax,[ecx-0x2]
10041f80:	mov    ecx,DWORD PTR [esp+0x4]
10041f84:	sub    eax,ecx
10041f86:	ret    
10041f87:	lea    eax,[ecx-0x3]
10041f8a:	mov    ecx,DWORD PTR [esp+0x4]
10041f8e:	sub    eax,ecx
10041f90:	ret    
10041f91:	lea    eax,[ecx-0x4]
10041f94:	mov    ecx,DWORD PTR [esp+0x4]
10041f98:	sub    eax,ecx
10041f9a:	ret    
10041f9b:	push   0x14
10041f9d:	push   0x100730e0
10041fa2:	call   0x100459e4
10041fa7:	and    DWORD PTR [ebp-0x4],0x0
10041fab:	dec    DWORD PTR [ebp+0x10]
10041fae:	js     0x10041fea
10041fb0:	mov    ecx,DWORD PTR [ebp+0x8]
10041fb3:	sub    ecx,DWORD PTR [ebp+0xc]
10041fb6:	mov    DWORD PTR [ebp+0x8],ecx
10041fb9:	call   DWORD PTR [ebp+0x14]
10041fbc:	jmp    0x10041fab
10041fbe:	mov    eax,DWORD PTR [ebp-0x14]
10041fc1:	mov    DWORD PTR [ebp-0x1c],eax
10041fc4:	mov    eax,DWORD PTR [ebp-0x1c]
10041fc7:	mov    eax,DWORD PTR [eax]
10041fc9:	mov    DWORD PTR [ebp-0x20],eax
10041fcc:	mov    eax,DWORD PTR [ebp-0x20]
10041fcf:	cmp    DWORD PTR [eax],0xe06d7363
10041fd5:	je     0x10041fe2
10041fd7:	mov    DWORD PTR [ebp-0x24],0x0
10041fde:	mov    eax,DWORD PTR [ebp-0x24]
10041fe1:	ret    
10041fe2:	call   0x1004594e
10041fe7:	mov    esp,DWORD PTR [ebp-0x18]
10041fea:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10041ff1:	call   0x10045a29
10041ff6:	ret    0x10
10041ff9:	push   0xc
10041ffb:	push   0x10073100
10042000:	call   0x100459e4
10042005:	and    DWORD PTR [ebp-0x1c],0x0
10042009:	mov    esi,DWORD PTR [ebp+0xc]
1004200c:	mov    eax,esi
1004200e:	imul   eax,DWORD PTR [ebp+0x10]
10042012:	add    DWORD PTR [ebp+0x8],eax
10042015:	and    DWORD PTR [ebp-0x4],0x0
10042019:	dec    DWORD PTR [ebp+0x10]
1004201c:	js     0x10042029
1004201e:	sub    DWORD PTR [ebp+0x8],esi
10042021:	mov    ecx,DWORD PTR [ebp+0x8]
10042024:	call   DWORD PTR [ebp+0x14]
10042027:	jmp    0x10042019
10042029:	mov    DWORD PTR [ebp-0x1c],0x1
10042030:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10042037:	call   0x10042044
1004203c:	call   0x10045a29
10042041:	ret    0x10
10042044:	cmp    DWORD PTR [ebp-0x1c],0x0
10042048:	jne    0x1004205b
1004204a:	push   DWORD PTR [ebp+0x14]
1004204d:	push   DWORD PTR [ebp+0x10]
10042050:	push   DWORD PTR [ebp+0xc]
10042053:	push   DWORD PTR [ebp+0x8]
10042056:	call   0x10041f9b
1004205b:	ret    
1004205c:	push   ecx
1004205d:	push   ebx
1004205e:	push   ebp
1004205f:	push   esi
10042060:	push   edi
10042061:	push   DWORD PTR ds:0x10081590
10042067:	call   0x10045c42
1004206c:	push   DWORD PTR ds:0x1008158c
10042072:	mov    esi,eax
10042074:	mov    DWORD PTR [esp+0x18],esi
10042078:	call   0x10045c42
1004207d:	mov    edi,eax
1004207f:	cmp    edi,esi
10042081:	pop    ecx
10042082:	pop    ecx
10042083:	jb     0x10042101
10042085:	mov    ebx,edi
10042087:	sub    ebx,esi
10042089:	lea    ebp,[ebx+0x4]
1004208c:	cmp    ebp,0x4
1004208f:	jb     0x10042101
10042091:	push   esi
10042092:	call   0x10046245
10042097:	mov    esi,eax
10042099:	cmp    esi,ebp
1004209b:	pop    ecx
1004209c:	jae    0x100420e8
1004209e:	mov    eax,0x800
100420a3:	cmp    esi,eax
100420a5:	jae    0x100420a9
100420a7:	mov    eax,esi
100420a9:	add    eax,esi
100420ab:	cmp    eax,esi
100420ad:	jb     0x100420bf
100420af:	push   eax
100420b0:	push   DWORD PTR [esp+0x14]
100420b4:	call   0x100461fa
100420b9:	test   eax,eax
100420bb:	pop    ecx
100420bc:	pop    ecx
100420bd:	jne    0x100420d6
100420bf:	lea    eax,[esi+0x10]
100420c2:	cmp    eax,esi
100420c4:	jb     0x10042101
100420c6:	push   eax
100420c7:	push   DWORD PTR [esp+0x14]
100420cb:	call   0x100461fa
100420d0:	test   eax,eax
100420d2:	pop    ecx
100420d3:	pop    ecx
100420d4:	je     0x10042101
100420d6:	sar    ebx,0x2
100420d9:	push   eax
100420da:	lea    edi,[eax+ebx*4]
100420dd:	call   0x10045bd6
100420e2:	pop    ecx
100420e3:	mov    ds:0x10081590,eax
100420e8:	mov    esi,DWORD PTR [esp+0x18]
100420ec:	mov    DWORD PTR [edi],esi
100420ee:	add    edi,0x4
100420f1:	push   edi
100420f2:	call   0x10045bd6
100420f7:	mov    ds:0x1008158c,eax
100420fc:	pop    ecx
100420fd:	mov    eax,esi
100420ff:	jmp    0x10042103
10042101:	xor    eax,eax
10042103:	pop    edi
10042104:	pop    esi
10042105:	pop    ebp
10042106:	pop    ebx
10042107:	pop    ecx
10042108:	ret    
10042109:	push   esi
1004210a:	push   0x4
1004210c:	push   0x20
1004210e:	call   0x100461b2
10042113:	mov    esi,eax
10042115:	push   esi
10042116:	call   0x10045bd6
1004211b:	add    esp,0xc
1004211e:	test   esi,esi
10042120:	mov    ds:0x10081590,eax
10042125:	mov    ds:0x1008158c,eax
1004212a:	jne    0x10042131
1004212c:	push   0x18
1004212e:	pop    eax
1004212f:	pop    esi
10042130:	ret    
10042131:	and    DWORD PTR [esi],0x0
10042134:	xor    eax,eax
10042136:	pop    esi
10042137:	ret    
10042138:	push   0xc
1004213a:	push   0x10073120
1004213f:	call   0x100459e4
10042144:	call   0x10046347
10042149:	and    DWORD PTR [ebp-0x4],0x0
1004214d:	push   DWORD PTR [ebp+0x8]
10042150:	call   0x1004205c
10042155:	pop    ecx
10042156:	mov    DWORD PTR [ebp-0x1c],eax
10042159:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10042160:	call   0x1004216e
10042165:	mov    eax,DWORD PTR [ebp-0x1c]
10042168:	call   0x10045a29
1004216d:	ret    
1004216e:	call   0x10046350
10042173:	ret    
10042174:	push   DWORD PTR [esp+0x4]
10042178:	call   0x10042138
1004217d:	neg    eax
1004217f:	sbb    eax,eax
10042181:	neg    eax
10042183:	pop    ecx
10042184:	dec    eax
10042185:	ret    
10042186:	mov    eax,DWORD PTR [esp+0x4]
1004218a:	mov    ds:0x1007ea60,eax
1004218f:	ret    
10042190:	push   ebp
10042191:	lea    ebp,[esp-0x2a8]
10042198:	sub    esp,0x328
1004219e:	mov    eax,ds:0x1007d030
100421a3:	xor    eax,ebp
100421a5:	mov    DWORD PTR [ebp+0x2a4],eax
100421ab:	push   esi
100421ac:	mov    DWORD PTR [ebp+0x88],eax
100421b2:	mov    DWORD PTR [ebp+0x84],ecx
100421b8:	mov    DWORD PTR [ebp+0x80],edx
100421be:	mov    DWORD PTR [ebp+0x7c],ebx
100421c1:	mov    DWORD PTR [ebp+0x78],esi
100421c4:	mov    DWORD PTR [ebp+0x74],edi
100421c7:	data16 mov WORD PTR [ebp+0xa0],ss
100421ce:	data16 mov WORD PTR [ebp+0x94],cs
100421d5:	data16 mov WORD PTR [ebp+0x70],ds
100421d9:	data16 mov WORD PTR [ebp+0x6c],es
100421dd:	data16 mov WORD PTR [ebp+0x68],fs
100421e1:	data16 mov WORD PTR [ebp+0x64],gs
100421e5:	pushf  
100421e6:	pop    DWORD PTR [ebp+0x98]
100421ec:	mov    esi,DWORD PTR [ebp+0x2ac]
100421f2:	lea    eax,[ebp+0x2ac]
100421f8:	mov    DWORD PTR [ebp+0x9c],eax
100421fe:	mov    DWORD PTR [ebp-0x28],0x10001
10042205:	mov    DWORD PTR [ebp+0x90],esi
1004220b:	mov    eax,DWORD PTR [eax-0x4]
1004220e:	push   0x50
10042210:	mov    DWORD PTR [ebp+0x8c],eax
10042216:	lea    eax,[ebp-0x80]
10042219:	push   0x0
1004221b:	push   eax
1004221c:	call   0x10044950
10042221:	lea    eax,[ebp-0x80]
10042224:	mov    DWORD PTR [ebp-0x30],eax
10042227:	lea    eax,[ebp-0x28]
1004222a:	add    esp,0xc
1004222d:	mov    DWORD PTR [ebp-0x80],0xc000000d
10042234:	mov    DWORD PTR [ebp-0x74],esi
10042237:	mov    DWORD PTR [ebp-0x2c],eax
1004223a:	call   DWORD PTR ds:0x10065184
10042240:	push   0x0
10042242:	mov    esi,eax
10042244:	call   DWORD PTR ds:0x10065180
1004224a:	lea    eax,[ebp-0x30]
1004224d:	push   eax
1004224e:	call   DWORD PTR ds:0x1006517c
10042254:	test   eax,eax
10042256:	jne    0x10042264
10042258:	test   esi,esi
1004225a:	jne    0x10042264
1004225c:	push   0x2
1004225e:	call   0x100465d0
10042263:	pop    ecx
10042264:	push   0xc000000d
10042269:	call   DWORD PTR ds:0x10065108
1004226f:	push   eax
10042270:	call   DWORD PTR ds:0x10065178
10042276:	mov    ecx,DWORD PTR [ebp+0x2a4]
1004227c:	xor    ecx,ebp
1004227e:	pop    esi
1004227f:	call   0x10041d97
10042284:	add    ebp,0x2a8
1004228a:	leave  
1004228b:	ret    
1004228c:	push   ebp
1004228d:	mov    ebp,esp
1004228f:	push   DWORD PTR ds:0x1007ea60
10042295:	call   0x10045c42
1004229a:	test   eax,eax
1004229c:	pop    ecx
1004229d:	je     0x100422a2
1004229f:	pop    ebp
100422a0:	jmp    eax
100422a2:	push   0x2
100422a4:	call   0x100465d0
100422a9:	pop    ecx
100422aa:	pop    ebp
100422ab:	jmp    0x10042190
100422b0:	xor    eax,eax
100422b2:	push   eax
100422b3:	push   eax
100422b4:	push   eax
100422b5:	push   eax
100422b6:	push   eax
100422b7:	call   0x1004228c
100422bc:	add    esp,0x14
100422bf:	ret    
100422c0:	jmp    0x10041d92
100422c5:	push   ebp
100422c6:	mov    ebp,esp
100422c8:	push   esi
100422c9:	mov    esi,DWORD PTR [ebp+0x14]
100422cc:	push   edi
100422cd:	xor    edi,edi
100422cf:	cmp    esi,edi
100422d1:	jne    0x100422d7
100422d3:	xor    eax,eax
100422d5:	jmp    0x1004233c
100422d7:	cmp    DWORD PTR [ebp+0x8],edi
100422da:	jne    0x100422f7
100422dc:	call   0x100458a5
100422e1:	push   0x16
100422e3:	pop    esi
100422e4:	mov    DWORD PTR [eax],esi
100422e6:	push   edi
100422e7:	push   edi
100422e8:	push   edi
100422e9:	push   edi
100422ea:	push   edi
100422eb:	call   0x1004228c
100422f0:	add    esp,0x14
100422f3:	mov    eax,esi
100422f5:	jmp    0x1004233c
100422f7:	cmp    DWORD PTR [ebp+0x10],edi
100422fa:	je     0x10042312
100422fc:	cmp    DWORD PTR [ebp+0xc],esi
100422ff:	jb     0x10042312
10042301:	push   esi
10042302:	push   DWORD PTR [ebp+0x10]
10042305:	push   DWORD PTR [ebp+0x8]
10042308:	call   0x10043ed0
1004230d:	add    esp,0xc
10042310:	jmp    0x100422d3
10042312:	push   DWORD PTR [ebp+0xc]
10042315:	push   edi
10042316:	push   DWORD PTR [ebp+0x8]
10042319:	call   0x10044950
1004231e:	add    esp,0xc
10042321:	cmp    DWORD PTR [ebp+0x10],edi
10042324:	je     0x100422dc
10042326:	cmp    DWORD PTR [ebp+0xc],esi
10042329:	jae    0x10042339
1004232b:	call   0x100458a5
10042330:	push   0x22
10042332:	pop    ecx
10042333:	mov    DWORD PTR [eax],ecx
10042335:	mov    esi,ecx
10042337:	jmp    0x100422e6
10042339:	push   0x16
1004233b:	pop    eax
1004233c:	pop    edi
1004233d:	pop    esi
1004233e:	pop    ebp
1004233f:	ret    
10042340:	push   ecx
10042341:	mov    DWORD PTR [ecx],0x100655b0
10042347:	call   0x100465d8
1004234c:	pop    ecx
1004234d:	ret    
1004234e:	push   esi
1004234f:	mov    esi,ecx
10042351:	call   0x10042340
10042356:	test   BYTE PTR [esp+0x8],0x1
1004235b:	je     0x10042364
1004235d:	push   esi
1004235e:	call   0x10041d92
10042363:	pop    ecx
10042364:	mov    eax,esi
10042366:	pop    esi
10042367:	ret    0x4
1004236a:	mov    eax,DWORD PTR [esp+0x4]
1004236e:	add    ecx,0x9
10042371:	push   ecx
10042372:	add    eax,0x9
10042375:	push   eax
10042376:	call   0x10046650
1004237b:	neg    eax
1004237d:	pop    ecx
1004237e:	sbb    eax,eax
10042380:	pop    ecx
10042381:	inc    eax
10042382:	ret    0x4
10042385:	push   esi
10042386:	push   0x1
10042388:	push   0x1007d02c
1004238d:	mov    esi,ecx
1004238f:	call   0x10041e60
10042394:	mov    DWORD PTR [esi],0x100655b8
1004239a:	mov    eax,esi
1004239c:	pop    esi
1004239d:	ret    
1004239e:	push   ebp
1004239f:	mov    ebp,esp
100423a1:	sub    esp,0xc
100423a4:	jmp    0x100423b3
100423a6:	push   DWORD PTR [ebp+0x8]
100423a9:	call   0x100466e2
100423ae:	test   eax,eax
100423b0:	pop    ecx
100423b1:	je     0x100423c2
100423b3:	push   DWORD PTR [ebp+0x8]
100423b6:	call   0x10043cdd
100423bb:	test   eax,eax
100423bd:	pop    ecx
100423be:	je     0x100423a6
100423c0:	leave  
100423c1:	ret    
100423c2:	test   BYTE PTR ds:0x1007ea70,0x1
100423c9:	mov    esi,0x1007ea64
100423ce:	jne    0x100423e9
100423d0:	or     DWORD PTR ds:0x1007ea70,0x1
100423d7:	mov    ecx,esi
100423d9:	call   0x10042385
100423de:	push   0x100644de
100423e3:	call   0x10042174
100423e8:	pop    ecx
100423e9:	push   esi
100423ea:	lea    ecx,[ebp-0xc]
100423ed:	call   0x10041e78
100423f2:	push   0x100738b8
100423f7:	lea    eax,[ebp-0xc]
100423fa:	push   eax
100423fb:	mov    DWORD PTR [ebp-0xc],0x100655b8
10042402:	call   0x10046704
10042407:	int3   
10042408:	push   0xc
1004240a:	push   0x10073140
1004240f:	call   0x100459e4
10042414:	mov    esi,DWORD PTR [ebp+0x8]
10042417:	test   esi,esi
10042419:	je     0x10042490
1004241b:	cmp    DWORD PTR ds:0x10081580,0x3
10042422:	jne    0x10042467
10042424:	push   0x4
10042426:	call   0x100469ed
1004242b:	pop    ecx
1004242c:	and    DWORD PTR [ebp-0x4],0x0
10042430:	push   esi
10042431:	call   0x10046a66
10042436:	pop    ecx
10042437:	mov    DWORD PTR [ebp-0x1c],eax
1004243a:	test   eax,eax
1004243c:	je     0x10042447
1004243e:	push   esi
1004243f:	push   eax
10042440:	call   0x10046a91
10042445:	pop    ecx
10042446:	pop    ecx
10042447:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004244e:	call   0x1004245e
10042453:	cmp    DWORD PTR [ebp-0x1c],0x0
10042457:	jne    0x10042490
10042459:	push   DWORD PTR [ebp+0x8]
1004245c:	jmp    0x10042468
1004245e:	push   0x4
10042460:	call   0x10046915
10042465:	pop    ecx
10042466:	ret    
10042467:	push   esi
10042468:	push   0x0
1004246a:	push   DWORD PTR ds:0x1007ee18
10042470:	call   DWORD PTR ds:0x10065188
10042476:	test   eax,eax
10042478:	jne    0x10042490
1004247a:	call   0x100458a5
1004247f:	mov    esi,eax
10042481:	call   DWORD PTR ds:0x100650c4
10042487:	push   eax
10042488:	call   0x1004586a
1004248d:	mov    DWORD PTR [esi],eax
1004248f:	pop    ecx
10042490:	call   0x10045a29
10042495:	ret    
10042496:	push   0xc
10042498:	push   0x10073160
1004249d:	call   0x100459e4
100424a2:	mov    ecx,DWORD PTR [ebp+0x8]
100424a5:	xor    edi,edi
100424a7:	cmp    ecx,edi
100424a9:	jbe    0x100424d9
100424ab:	push   0xffffffe0
100424ad:	pop    eax
100424ae:	xor    edx,edx
100424b0:	div    ecx
100424b2:	cmp    eax,DWORD PTR [ebp+0xc]
100424b5:	sbb    eax,eax
100424b7:	inc    eax
100424b8:	jne    0x100424d9
100424ba:	call   0x100458a5
100424bf:	mov    DWORD PTR [eax],0xc
100424c5:	push   edi
100424c6:	push   edi
100424c7:	push   edi
100424c8:	push   edi
100424c9:	push   edi
100424ca:	call   0x1004228c
100424cf:	add    esp,0x14
100424d2:	xor    eax,eax
100424d4:	jmp    0x100425ae
100424d9:	imul   ecx,DWORD PTR [ebp+0xc]
100424dd:	mov    esi,ecx
100424df:	mov    DWORD PTR [ebp+0x8],esi
100424e2:	cmp    esi,edi
100424e4:	jne    0x100424e9
100424e6:	xor    esi,esi
100424e8:	inc    esi
100424e9:	xor    ebx,ebx
100424eb:	mov    DWORD PTR [ebp-0x1c],ebx
100424ee:	cmp    esi,0xffffffe0
100424f1:	ja     0x1004255c
100424f3:	cmp    DWORD PTR ds:0x10081580,0x3
100424fa:	jne    0x10042547
100424fc:	add    esi,0xf
100424ff:	and    esi,0xfffffff0
10042502:	mov    DWORD PTR [ebp+0xc],esi
10042505:	mov    eax,DWORD PTR [ebp+0x8]
10042508:	cmp    eax,DWORD PTR ds:0x10081570
1004250e:	ja     0x10042547
10042510:	push   0x4
10042512:	call   0x100469ed
10042517:	pop    ecx
10042518:	mov    DWORD PTR [ebp-0x4],edi
1004251b:	push   DWORD PTR [ebp+0x8]
1004251e:	call   0x1004723a
10042523:	pop    ecx
10042524:	mov    DWORD PTR [ebp-0x1c],eax
10042527:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004252e:	call   0x10042592
10042533:	mov    ebx,DWORD PTR [ebp-0x1c]
10042536:	cmp    ebx,edi
10042538:	je     0x1004254b
1004253a:	push   DWORD PTR [ebp+0x8]
1004253d:	push   edi
1004253e:	push   ebx
1004253f:	call   0x10044950
10042544:	add    esp,0xc
10042547:	cmp    ebx,edi
10042549:	jne    0x100425ac
1004254b:	push   esi
1004254c:	push   0x8
1004254e:	push   DWORD PTR ds:0x1007ee18
10042554:	call   DWORD PTR ds:0x1006518c
1004255a:	mov    ebx,eax
1004255c:	cmp    ebx,edi
1004255e:	jne    0x100425ac
10042560:	cmp    DWORD PTR ds:0x1007ef74,edi
10042566:	je     0x1004259b
10042568:	push   esi
10042569:	call   0x100466e2
1004256e:	pop    ecx
1004256f:	test   eax,eax
10042571:	jne    0x100424e9
10042577:	mov    eax,DWORD PTR [ebp+0x10]
1004257a:	cmp    eax,edi
1004257c:	je     0x100424d2
10042582:	mov    DWORD PTR [eax],0xc
10042588:	jmp    0x100424d2
1004258d:	xor    edi,edi
1004258f:	mov    esi,DWORD PTR [ebp+0xc]
10042592:	push   0x4
10042594:	call   0x10046915
10042599:	pop    ecx
1004259a:	ret    
1004259b:	cmp    ebx,edi
1004259d:	jne    0x100425ac
1004259f:	mov    eax,DWORD PTR [ebp+0x10]
100425a2:	cmp    eax,edi
100425a4:	je     0x100425ac
100425a6:	mov    DWORD PTR [eax],0xc
100425ac:	mov    eax,ebx
100425ae:	call   0x10045a29
100425b3:	ret    
100425b4:	push   ebp
100425b5:	mov    ebp,esp
100425b7:	push   ecx
100425b8:	and    DWORD PTR [ebp-0x4],0x0
100425bc:	push   edi
100425bd:	lea    eax,[ebp-0x4]
100425c0:	push   eax
100425c1:	push   DWORD PTR [ebp+0xc]
100425c4:	push   DWORD PTR [ebp+0x8]
100425c7:	call   0x10042496
100425cc:	mov    edi,eax
100425ce:	add    esp,0xc
100425d1:	test   edi,edi
100425d3:	jne    0x100425ee
100425d5:	push   esi
100425d6:	mov    esi,DWORD PTR [ebp-0x4]
100425d9:	test   esi,esi
100425db:	je     0x100425ed
100425dd:	call   0x100458a5
100425e2:	test   eax,eax
100425e4:	je     0x100425ed
100425e6:	call   0x100458a5
100425eb:	mov    DWORD PTR [eax],esi
100425ed:	pop    esi
100425ee:	mov    eax,edi
100425f0:	pop    edi
100425f1:	leave  
100425f2:	ret    
100425f3:	mov    eax,DWORD PTR [esp+0x4]
100425f7:	mov    cx,WORD PTR [eax]
100425fa:	inc    eax
100425fb:	inc    eax
100425fc:	test   cx,cx
100425ff:	jne    0x100425f7
10042601:	sub    eax,DWORD PTR [esp+0x4]
10042605:	sar    eax,1
10042607:	dec    eax
10042608:	ret    
10042609:	jmp    0x1004239e
1004260e:	push   ebp
1004260f:	mov    ebp,esp
10042611:	push   esi
10042612:	push   edi
10042613:	mov    edi,DWORD PTR [ebp+0x10]
10042616:	mov    eax,edi
10042618:	sub    eax,0x0
1004261b:	je     0x10043c06
10042621:	dec    eax
10042622:	je     0x10043bf5
10042628:	dec    eax
10042629:	je     0x10043bc7
1004262f:	dec    eax
10042630:	je     0x10043b7f
10042636:	dec    eax
10042637:	je     0x10043af6
1004263d:	mov    ecx,DWORD PTR [ebp+0xc]
10042640:	mov    eax,DWORD PTR [ebp+0x8]
10042643:	push   ebx
10042644:	push   0x20
10042646:	pop    edx
10042647:	jmp    0x10042abe
1004264c:	mov    esi,DWORD PTR [eax]
1004264e:	cmp    esi,DWORD PTR [ecx]
10042650:	je     0x100426ce
10042652:	movzx  esi,BYTE PTR [eax]
10042655:	movzx  ebx,BYTE PTR [ecx]
10042658:	sub    esi,ebx
1004265a:	je     0x10042671
1004265c:	xor    ebx,ebx
1004265e:	test   esi,esi
10042660:	setg   bl
10042663:	lea    ebx,[ebx+ebx*1-0x1]
10042667:	mov    esi,ebx
10042669:	test   esi,esi
1004266b:	jne    0x10042ada
10042671:	movzx  esi,BYTE PTR [eax+0x1]
10042675:	movzx  ebx,BYTE PTR [ecx+0x1]
10042679:	sub    esi,ebx
1004267b:	je     0x10042692
1004267d:	xor    ebx,ebx
1004267f:	test   esi,esi
10042681:	setg   bl
10042684:	lea    ebx,[ebx+ebx*1-0x1]
10042688:	mov    esi,ebx
1004268a:	test   esi,esi
1004268c:	jne    0x10042ada
10042692:	movzx  esi,BYTE PTR [eax+0x2]
10042696:	movzx  ebx,BYTE PTR [ecx+0x2]
1004269a:	sub    esi,ebx
1004269c:	je     0x100426b3
1004269e:	xor    ebx,ebx
100426a0:	test   esi,esi
100426a2:	setg   bl
100426a5:	lea    ebx,[ebx+ebx*1-0x1]
100426a9:	mov    esi,ebx
100426ab:	test   esi,esi
100426ad:	jne    0x10042ada
100426b3:	movzx  esi,BYTE PTR [eax+0x3]
100426b7:	movzx  ebx,BYTE PTR [ecx+0x3]
100426bb:	sub    esi,ebx
100426bd:	je     0x100426d0
100426bf:	xor    ebx,ebx
100426c1:	test   esi,esi
100426c3:	setg   bl
100426c6:	lea    ebx,[ebx+ebx*1-0x1]
100426ca:	mov    esi,ebx
100426cc:	jmp    0x100426d0
100426ce:	xor    esi,esi
100426d0:	test   esi,esi
100426d2:	jne    0x10042ada
100426d8:	mov    esi,DWORD PTR [eax+0x4]
100426db:	cmp    esi,DWORD PTR [ecx+0x4]
100426de:	je     0x1004275e
100426e0:	movzx  esi,BYTE PTR [eax+0x4]
100426e4:	movzx  ebx,BYTE PTR [ecx+0x4]
100426e8:	sub    esi,ebx
100426ea:	je     0x10042701
100426ec:	xor    ebx,ebx
100426ee:	test   esi,esi
100426f0:	setg   bl
100426f3:	lea    ebx,[ebx+ebx*1-0x1]
100426f7:	mov    esi,ebx
100426f9:	test   esi,esi
100426fb:	jne    0x10042ada
10042701:	movzx  esi,BYTE PTR [eax+0x5]
10042705:	movzx  ebx,BYTE PTR [ecx+0x5]
10042709:	sub    esi,ebx
1004270b:	je     0x10042722
1004270d:	xor    ebx,ebx
1004270f:	test   esi,esi
10042711:	setg   bl
10042714:	lea    ebx,[ebx+ebx*1-0x1]
10042718:	mov    esi,ebx
1004271a:	test   esi,esi
1004271c:	jne    0x10042ada
10042722:	movzx  esi,BYTE PTR [eax+0x6]
10042726:	movzx  ebx,BYTE PTR [ecx+0x6]
1004272a:	sub    esi,ebx
1004272c:	je     0x10042743
1004272e:	xor    ebx,ebx
10042730:	test   esi,esi
10042732:	setg   bl
10042735:	lea    ebx,[ebx+ebx*1-0x1]
10042739:	mov    esi,ebx
1004273b:	test   esi,esi
1004273d:	jne    0x10042ada
10042743:	movzx  esi,BYTE PTR [eax+0x7]
10042747:	movzx  ebx,BYTE PTR [ecx+0x7]
1004274b:	sub    esi,ebx
1004274d:	je     0x10042760
1004274f:	xor    ebx,ebx
10042751:	test   esi,esi
10042753:	setg   bl
10042756:	lea    ebx,[ebx+ebx*1-0x1]
1004275a:	mov    esi,ebx
1004275c:	jmp    0x10042760
1004275e:	xor    esi,esi
10042760:	test   esi,esi
10042762:	jne    0x10042ada
10042768:	mov    esi,DWORD PTR [eax+0x8]
1004276b:	cmp    esi,DWORD PTR [ecx+0x8]
1004276e:	je     0x100427ee
10042770:	movzx  esi,BYTE PTR [eax+0x8]
10042774:	movzx  ebx,BYTE PTR [ecx+0x8]
10042778:	sub    esi,ebx
1004277a:	je     0x10042791
1004277c:	xor    ebx,ebx
1004277e:	test   esi,esi
10042780:	setg   bl
10042783:	lea    ebx,[ebx+ebx*1-0x1]
10042787:	mov    esi,ebx
10042789:	test   esi,esi
1004278b:	jne    0x10042ada
10042791:	movzx  esi,BYTE PTR [eax+0x9]
10042795:	movzx  ebx,BYTE PTR [ecx+0x9]
10042799:	sub    esi,ebx
1004279b:	je     0x100427b2
1004279d:	xor    ebx,ebx
1004279f:	test   esi,esi
100427a1:	setg   bl
100427a4:	lea    ebx,[ebx+ebx*1-0x1]
100427a8:	mov    esi,ebx
100427aa:	test   esi,esi
100427ac:	jne    0x10042ada
100427b2:	movzx  esi,BYTE PTR [eax+0xa]
100427b6:	movzx  ebx,BYTE PTR [ecx+0xa]
100427ba:	sub    esi,ebx
100427bc:	je     0x100427d3
100427be:	xor    ebx,ebx
100427c0:	test   esi,esi
100427c2:	setg   bl
100427c5:	lea    ebx,[ebx+ebx*1-0x1]
100427c9:	mov    esi,ebx
100427cb:	test   esi,esi
100427cd:	jne    0x10042ada
100427d3:	movzx  esi,BYTE PTR [eax+0xb]
100427d7:	movzx  ebx,BYTE PTR [ecx+0xb]
100427db:	sub    esi,ebx
100427dd:	je     0x100427f0
100427df:	xor    ebx,ebx
100427e1:	test   esi,esi
100427e3:	setg   bl
100427e6:	lea    ebx,[ebx+ebx*1-0x1]
100427ea:	mov    esi,ebx
100427ec:	jmp    0x100427f0
100427ee:	xor    esi,esi
100427f0:	test   esi,esi
100427f2:	jne    0x10042ada
100427f8:	mov    esi,DWORD PTR [eax+0xc]
100427fb:	cmp    esi,DWORD PTR [ecx+0xc]
100427fe:	je     0x1004287e
10042800:	movzx  esi,BYTE PTR [eax+0xc]
10042804:	movzx  ebx,BYTE PTR [ecx+0xc]
10042808:	sub    esi,ebx
1004280a:	je     0x10042821
1004280c:	xor    ebx,ebx
1004280e:	test   esi,esi
10042810:	setg   bl
10042813:	lea    ebx,[ebx+ebx*1-0x1]
10042817:	mov    esi,ebx
10042819:	test   esi,esi
1004281b:	jne    0x10042ada
10042821:	movzx  esi,BYTE PTR [eax+0xd]
10042825:	movzx  ebx,BYTE PTR [ecx+0xd]
10042829:	sub    esi,ebx
1004282b:	je     0x10042842
1004282d:	xor    ebx,ebx
1004282f:	test   esi,esi
10042831:	setg   bl
10042834:	lea    ebx,[ebx+ebx*1-0x1]
10042838:	mov    esi,ebx
1004283a:	test   esi,esi
1004283c:	jne    0x10042ada
10042842:	movzx  esi,BYTE PTR [eax+0xe]
10042846:	movzx  ebx,BYTE PTR [ecx+0xe]
1004284a:	sub    esi,ebx
1004284c:	je     0x10042863
1004284e:	xor    ebx,ebx
10042850:	test   esi,esi
10042852:	setg   bl
10042855:	lea    ebx,[ebx+ebx*1-0x1]
10042859:	mov    esi,ebx
1004285b:	test   esi,esi
1004285d:	jne    0x10042ada
10042863:	movzx  esi,BYTE PTR [eax+0xf]
10042867:	movzx  ebx,BYTE PTR [ecx+0xf]
1004286b:	sub    esi,ebx
1004286d:	je     0x10042880
1004286f:	xor    ebx,ebx
10042871:	test   esi,esi
10042873:	setg   bl
10042876:	lea    ebx,[ebx+ebx*1-0x1]
1004287a:	mov    esi,ebx
1004287c:	jmp    0x10042880
1004287e:	xor    esi,esi
10042880:	test   esi,esi
10042882:	jne    0x10042ada
10042888:	mov    esi,DWORD PTR [eax+0x10]
1004288b:	cmp    esi,DWORD PTR [ecx+0x10]
1004288e:	je     0x1004290e
10042890:	movzx  ebx,BYTE PTR [ecx+0x10]
10042894:	movzx  esi,BYTE PTR [eax+0x10]
10042898:	sub    esi,ebx
1004289a:	je     0x100428b1
1004289c:	xor    ebx,ebx
1004289e:	test   esi,esi
100428a0:	setg   bl
100428a3:	lea    ebx,[ebx+ebx*1-0x1]
100428a7:	mov    esi,ebx
100428a9:	test   esi,esi
100428ab:	jne    0x10042ada
100428b1:	movzx  esi,BYTE PTR [eax+0x11]
100428b5:	movzx  ebx,BYTE PTR [ecx+0x11]
100428b9:	sub    esi,ebx
100428bb:	je     0x100428d2
100428bd:	xor    ebx,ebx
100428bf:	test   esi,esi
100428c1:	setg   bl
100428c4:	lea    ebx,[ebx+ebx*1-0x1]
100428c8:	mov    esi,ebx
100428ca:	test   esi,esi
100428cc:	jne    0x10042ada
100428d2:	movzx  esi,BYTE PTR [eax+0x12]
100428d6:	movzx  ebx,BYTE PTR [ecx+0x12]
100428da:	sub    esi,ebx
100428dc:	je     0x100428f3
100428de:	xor    ebx,ebx
100428e0:	test   esi,esi
100428e2:	setg   bl
100428e5:	lea    ebx,[ebx+ebx*1-0x1]
100428e9:	mov    esi,ebx
100428eb:	test   esi,esi
100428ed:	jne    0x10042ada
100428f3:	movzx  esi,BYTE PTR [eax+0x13]
100428f7:	movzx  ebx,BYTE PTR [ecx+0x13]
100428fb:	sub    esi,ebx
100428fd:	je     0x10042910
100428ff:	xor    ebx,ebx
10042901:	test   esi,esi
10042903:	setg   bl
10042906:	lea    ebx,[ebx+ebx*1-0x1]
1004290a:	mov    esi,ebx
1004290c:	jmp    0x10042910
1004290e:	xor    esi,esi
10042910:	test   esi,esi
10042912:	jne    0x10042ada
10042918:	mov    esi,DWORD PTR [eax+0x14]
1004291b:	cmp    esi,DWORD PTR [ecx+0x14]
1004291e:	je     0x1004299e
10042920:	movzx  esi,BYTE PTR [eax+0x14]
10042924:	movzx  ebx,BYTE PTR [ecx+0x14]
10042928:	sub    esi,ebx
1004292a:	je     0x10042941
1004292c:	xor    ebx,ebx
1004292e:	test   esi,esi
10042930:	setg   bl
10042933:	lea    ebx,[ebx+ebx*1-0x1]
10042937:	mov    esi,ebx
10042939:	test   esi,esi
1004293b:	jne    0x10042ada
10042941:	movzx  esi,BYTE PTR [eax+0x15]
10042945:	movzx  ebx,BYTE PTR [ecx+0x15]
10042949:	sub    esi,ebx
1004294b:	je     0x10042962
1004294d:	xor    ebx,ebx
1004294f:	test   esi,esi
10042951:	setg   bl
10042954:	lea    ebx,[ebx+ebx*1-0x1]
10042958:	mov    esi,ebx
1004295a:	test   esi,esi
1004295c:	jne    0x10042ada
10042962:	movzx  esi,BYTE PTR [eax+0x16]
10042966:	movzx  ebx,BYTE PTR [ecx+0x16]
1004296a:	sub    esi,ebx
1004296c:	je     0x10042983
1004296e:	xor    ebx,ebx
10042970:	test   esi,esi
10042972:	setg   bl
10042975:	lea    ebx,[ebx+ebx*1-0x1]
10042979:	mov    esi,ebx
1004297b:	test   esi,esi
1004297d:	jne    0x10042ada
10042983:	movzx  esi,BYTE PTR [eax+0x17]
10042987:	movzx  ebx,BYTE PTR [ecx+0x17]
1004298b:	sub    esi,ebx
1004298d:	je     0x100429a0
1004298f:	xor    ebx,ebx
10042991:	test   esi,esi
10042993:	setg   bl
10042996:	lea    ebx,[ebx+ebx*1-0x1]
1004299a:	mov    esi,ebx
1004299c:	jmp    0x100429a0
1004299e:	xor    esi,esi
100429a0:	test   esi,esi
100429a2:	jne    0x10042ada
100429a8:	mov    esi,DWORD PTR [eax+0x18]
100429ab:	cmp    esi,DWORD PTR [ecx+0x18]
100429ae:	je     0x10042a2e
100429b0:	movzx  esi,BYTE PTR [eax+0x18]
100429b4:	movzx  ebx,BYTE PTR [ecx+0x18]
100429b8:	sub    esi,ebx
100429ba:	je     0x100429d1
100429bc:	xor    ebx,ebx
100429be:	test   esi,esi
100429c0:	setg   bl
100429c3:	lea    ebx,[ebx+ebx*1-0x1]
100429c7:	mov    esi,ebx
100429c9:	test   esi,esi
100429cb:	jne    0x10042ada
100429d1:	movzx  esi,BYTE PTR [eax+0x19]
100429d5:	movzx  ebx,BYTE PTR [ecx+0x19]
100429d9:	sub    esi,ebx
100429db:	je     0x100429f2
100429dd:	xor    ebx,ebx
100429df:	test   esi,esi
100429e1:	setg   bl
100429e4:	lea    ebx,[ebx+ebx*1-0x1]
100429e8:	mov    esi,ebx
100429ea:	test   esi,esi
100429ec:	jne    0x10042ada
100429f2:	movzx  esi,BYTE PTR [eax+0x1a]
100429f6:	movzx  ebx,BYTE PTR [ecx+0x1a]
100429fa:	sub    esi,ebx
100429fc:	je     0x10042a13
100429fe:	xor    ebx,ebx
10042a00:	test   esi,esi
10042a02:	setg   bl
10042a05:	lea    ebx,[ebx+ebx*1-0x1]
10042a09:	mov    esi,ebx
10042a0b:	test   esi,esi
10042a0d:	jne    0x10042ada
10042a13:	movzx  esi,BYTE PTR [eax+0x1b]
10042a17:	movzx  ebx,BYTE PTR [ecx+0x1b]
10042a1b:	sub    esi,ebx
10042a1d:	je     0x10042a30
10042a1f:	xor    ebx,ebx
10042a21:	test   esi,esi
10042a23:	setg   bl
10042a26:	lea    ebx,[ebx+ebx*1-0x1]
10042a2a:	mov    esi,ebx
10042a2c:	jmp    0x10042a30
10042a2e:	xor    esi,esi
10042a30:	test   esi,esi
10042a32:	jne    0x10042ada
10042a38:	mov    esi,DWORD PTR [eax+0x1c]
10042a3b:	cmp    esi,DWORD PTR [ecx+0x1c]
10042a3e:	je     0x10042ab2
10042a40:	movzx  esi,BYTE PTR [eax+0x1c]
10042a44:	movzx  ebx,BYTE PTR [ecx+0x1c]
10042a48:	sub    esi,ebx
10042a4a:	je     0x10042a5d
10042a4c:	xor    ebx,ebx
10042a4e:	test   esi,esi
10042a50:	setg   bl
10042a53:	lea    ebx,[ebx+ebx*1-0x1]
10042a57:	mov    esi,ebx
10042a59:	test   esi,esi
10042a5b:	jne    0x10042ada
10042a5d:	movzx  esi,BYTE PTR [eax+0x1d]
10042a61:	movzx  ebx,BYTE PTR [ecx+0x1d]
10042a65:	sub    esi,ebx
10042a67:	je     0x10042a7a
10042a69:	xor    ebx,ebx
10042a6b:	test   esi,esi
10042a6d:	setg   bl
10042a70:	lea    ebx,[ebx+ebx*1-0x1]
10042a74:	mov    esi,ebx
10042a76:	test   esi,esi
10042a78:	jne    0x10042ada
10042a7a:	movzx  esi,BYTE PTR [eax+0x1e]
10042a7e:	movzx  ebx,BYTE PTR [ecx+0x1e]
10042a82:	sub    esi,ebx
10042a84:	je     0x10042a97
10042a86:	xor    ebx,ebx
10042a88:	test   esi,esi
10042a8a:	setg   bl
10042a8d:	lea    ebx,[ebx+ebx*1-0x1]
10042a91:	mov    esi,ebx
10042a93:	test   esi,esi
10042a95:	jne    0x10042ada
10042a97:	movzx  esi,BYTE PTR [eax+0x1f]
10042a9b:	movzx  ebx,BYTE PTR [ecx+0x1f]
10042a9f:	sub    esi,ebx
10042aa1:	je     0x10042ab4
10042aa3:	xor    ebx,ebx
10042aa5:	test   esi,esi
10042aa7:	setg   bl
10042aaa:	lea    ebx,[ebx+ebx*1-0x1]
10042aae:	mov    esi,ebx
10042ab0:	jmp    0x10042ab4
10042ab2:	xor    esi,esi
10042ab4:	test   esi,esi
10042ab6:	jne    0x10042ada
10042ab8:	add    eax,edx
10042aba:	add    ecx,edx
10042abc:	sub    edi,edx
10042abe:	cmp    edi,edx
10042ac0:	jae    0x1004264c
10042ac6:	add    eax,edi
10042ac8:	add    ecx,edi
10042aca:	cmp    edi,0x1f
10042acd:	ja     0x10042ead
10042ad3:	jmp    DWORD PTR [edi*4+0x10043c0e]
10042ada:	mov    eax,esi
10042adc:	jmp    0x10042eaf
10042ae1:	mov    edx,DWORD PTR [eax-0x1c]
10042ae4:	cmp    edx,DWORD PTR [ecx-0x1c]
10042ae7:	je     0x10042b5a
10042ae9:	movzx  esi,dl
10042aec:	movzx  edx,BYTE PTR [ecx-0x1c]
10042af0:	sub    esi,edx
10042af2:	je     0x10042b05
10042af4:	xor    edx,edx
10042af6:	test   esi,esi
10042af8:	setg   dl
10042afb:	lea    edx,[edx+edx*1-0x1]
10042aff:	mov    esi,edx
10042b01:	test   esi,esi
10042b03:	jne    0x10042ada
10042b05:	movzx  esi,BYTE PTR [eax-0x1b]
10042b09:	movzx  edx,BYTE PTR [ecx-0x1b]
10042b0d:	sub    esi,edx
10042b0f:	je     0x10042b22
10042b11:	xor    edx,edx
10042b13:	test   esi,esi
10042b15:	setg   dl
10042b18:	lea    edx,[edx+edx*1-0x1]
10042b1c:	mov    esi,edx
10042b1e:	test   esi,esi
10042b20:	jne    0x10042ada
10042b22:	movzx  esi,BYTE PTR [eax-0x1a]
10042b26:	movzx  edx,BYTE PTR [ecx-0x1a]
10042b2a:	sub    esi,edx
10042b2c:	je     0x10042b3f
10042b2e:	xor    edx,edx
10042b30:	test   esi,esi
10042b32:	setg   dl
10042b35:	lea    edx,[edx+edx*1-0x1]
10042b39:	mov    esi,edx
10042b3b:	test   esi,esi
10042b3d:	jne    0x10042ada
10042b3f:	movzx  esi,BYTE PTR [eax-0x19]
10042b43:	movzx  edx,BYTE PTR [ecx-0x19]
10042b47:	sub    esi,edx
10042b49:	je     0x10042b5c
10042b4b:	xor    edx,edx
10042b4d:	test   esi,esi
10042b4f:	setg   dl
10042b52:	lea    edx,[edx+edx*1-0x1]
10042b56:	mov    esi,edx
10042b58:	jmp    0x10042b5c
10042b5a:	xor    esi,esi
10042b5c:	test   esi,esi
10042b5e:	jne    0x10042ada
10042b64:	mov    edx,DWORD PTR [eax-0x18]
10042b67:	cmp    edx,DWORD PTR [ecx-0x18]
10042b6a:	je     0x10042be9
10042b6c:	movzx  esi,dl
10042b6f:	movzx  edx,BYTE PTR [ecx-0x18]
10042b73:	sub    esi,edx
10042b75:	je     0x10042b8c
10042b77:	xor    edx,edx
10042b79:	test   esi,esi
10042b7b:	setg   dl
10042b7e:	lea    edx,[edx+edx*1-0x1]
10042b82:	mov    esi,edx
10042b84:	test   esi,esi
10042b86:	jne    0x10042ada
10042b8c:	movzx  esi,BYTE PTR [eax-0x17]
10042b90:	movzx  edx,BYTE PTR [ecx-0x17]
10042b94:	sub    esi,edx
10042b96:	je     0x10042bad
10042b98:	xor    edx,edx
10042b9a:	test   esi,esi
10042b9c:	setg   dl
10042b9f:	lea    edx,[edx+edx*1-0x1]
10042ba3:	mov    esi,edx
10042ba5:	test   esi,esi
10042ba7:	jne    0x10042ada
10042bad:	movzx  esi,BYTE PTR [eax-0x16]
10042bb1:	movzx  edx,BYTE PTR [ecx-0x16]
10042bb5:	sub    esi,edx
10042bb7:	je     0x10042bce
10042bb9:	xor    edx,edx
10042bbb:	test   esi,esi
10042bbd:	setg   dl
10042bc0:	lea    edx,[edx+edx*1-0x1]
10042bc4:	mov    esi,edx
10042bc6:	test   esi,esi
10042bc8:	jne    0x10042ada
10042bce:	movzx  esi,BYTE PTR [eax-0x15]
10042bd2:	movzx  edx,BYTE PTR [ecx-0x15]
10042bd6:	sub    esi,edx
10042bd8:	je     0x10042beb
10042bda:	xor    edx,edx
10042bdc:	test   esi,esi
10042bde:	setg   dl
10042be1:	lea    edx,[edx+edx*1-0x1]
10042be5:	mov    esi,edx
10042be7:	jmp    0x10042beb
10042be9:	xor    esi,esi
10042beb:	test   esi,esi
10042bed:	jne    0x10042ada
10042bf3:	mov    edx,DWORD PTR [eax-0x14]
10042bf6:	cmp    edx,DWORD PTR [ecx-0x14]
10042bf9:	je     0x10042c78
10042bfb:	movzx  esi,dl
10042bfe:	movzx  edx,BYTE PTR [ecx-0x14]
10042c02:	sub    esi,edx
10042c04:	je     0x10042c1b
10042c06:	xor    edx,edx
10042c08:	test   esi,esi
10042c0a:	setg   dl
10042c0d:	lea    edx,[edx+edx*1-0x1]
10042c11:	mov    esi,edx
10042c13:	test   esi,esi
10042c15:	jne    0x10042ada
10042c1b:	movzx  esi,BYTE PTR [eax-0x13]
10042c1f:	movzx  edx,BYTE PTR [ecx-0x13]
10042c23:	sub    esi,edx
10042c25:	je     0x10042c3c
10042c27:	xor    edx,edx
10042c29:	test   esi,esi
10042c2b:	setg   dl
10042c2e:	lea    edx,[edx+edx*1-0x1]
10042c32:	mov    esi,edx
10042c34:	test   esi,esi
10042c36:	jne    0x10042ada
10042c3c:	movzx  esi,BYTE PTR [eax-0x12]
10042c40:	movzx  edx,BYTE PTR [ecx-0x12]
10042c44:	sub    esi,edx
10042c46:	je     0x10042c5d
10042c48:	xor    edx,edx
10042c4a:	test   esi,esi
10042c4c:	setg   dl
10042c4f:	lea    edx,[edx+edx*1-0x1]
10042c53:	mov    esi,edx
10042c55:	test   esi,esi
10042c57:	jne    0x10042ada
10042c5d:	movzx  esi,BYTE PTR [eax-0x11]
10042c61:	movzx  edx,BYTE PTR [ecx-0x11]
10042c65:	sub    esi,edx
10042c67:	je     0x10042c7a
10042c69:	xor    edx,edx
10042c6b:	test   esi,esi
10042c6d:	setg   dl
10042c70:	lea    edx,[edx+edx*1-0x1]
10042c74:	mov    esi,edx
10042c76:	jmp    0x10042c7a
10042c78:	xor    esi,esi
10042c7a:	test   esi,esi
10042c7c:	jne    0x10042ada
10042c82:	mov    edx,DWORD PTR [eax-0x10]
10042c85:	cmp    edx,DWORD PTR [ecx-0x10]
10042c88:	je     0x10042d07
10042c8a:	movzx  esi,dl
10042c8d:	movzx  edx,BYTE PTR [ecx-0x10]
10042c91:	sub    esi,edx
10042c93:	je     0x10042caa
10042c95:	xor    edx,edx
10042c97:	test   esi,esi
10042c99:	setg   dl
10042c9c:	lea    edx,[edx+edx*1-0x1]
10042ca0:	mov    esi,edx
10042ca2:	test   esi,esi
10042ca4:	jne    0x10042ada
10042caa:	movzx  esi,BYTE PTR [eax-0xf]
10042cae:	movzx  edx,BYTE PTR [ecx-0xf]
10042cb2:	sub    esi,edx
10042cb4:	je     0x10042ccb
10042cb6:	xor    edx,edx
10042cb8:	test   esi,esi
10042cba:	setg   dl
10042cbd:	lea    edx,[edx+edx*1-0x1]
10042cc1:	mov    esi,edx
10042cc3:	test   esi,esi
10042cc5:	jne    0x10042ada
10042ccb:	movzx  esi,BYTE PTR [eax-0xe]
10042ccf:	movzx  edx,BYTE PTR [ecx-0xe]
10042cd3:	sub    esi,edx
10042cd5:	je     0x10042cec
10042cd7:	xor    edx,edx
10042cd9:	test   esi,esi
10042cdb:	setg   dl
10042cde:	lea    edx,[edx+edx*1-0x1]
10042ce2:	mov    esi,edx
10042ce4:	test   esi,esi
10042ce6:	jne    0x10042ada
10042cec:	movzx  esi,BYTE PTR [eax-0xd]
10042cf0:	movzx  edx,BYTE PTR [ecx-0xd]
10042cf4:	sub    esi,edx
10042cf6:	je     0x10042d09
10042cf8:	xor    edx,edx
10042cfa:	test   esi,esi
10042cfc:	setg   dl
10042cff:	lea    edx,[edx+edx*1-0x1]
10042d03:	mov    esi,edx
10042d05:	jmp    0x10042d09
10042d07:	xor    esi,esi
10042d09:	test   esi,esi
10042d0b:	jne    0x10042ada
10042d11:	mov    edx,DWORD PTR [eax-0xc]
10042d14:	cmp    edx,DWORD PTR [ecx-0xc]
10042d17:	je     0x10042d97
10042d19:	movzx  edx,BYTE PTR [ecx-0xc]
10042d1d:	movzx  esi,BYTE PTR [eax-0xc]
10042d21:	sub    esi,edx
10042d23:	je     0x10042d3a
10042d25:	xor    edx,edx
10042d27:	test   esi,esi
10042d29:	setg   dl
10042d2c:	lea    edx,[edx+edx*1-0x1]
10042d30:	mov    esi,edx
10042d32:	test   esi,esi
10042d34:	jne    0x10042ada
10042d3a:	movzx  esi,BYTE PTR [eax-0xb]
10042d3e:	movzx  edx,BYTE PTR [ecx-0xb]
10042d42:	sub    esi,edx
10042d44:	je     0x10042d5b
10042d46:	xor    edx,edx
10042d48:	test   esi,esi
10042d4a:	setg   dl
10042d4d:	lea    edx,[edx+edx*1-0x1]
10042d51:	mov    esi,edx
10042d53:	test   esi,esi
10042d55:	jne    0x10042ada
10042d5b:	movzx  esi,BYTE PTR [eax-0xa]
10042d5f:	movzx  edx,BYTE PTR [ecx-0xa]
10042d63:	sub    esi,edx
10042d65:	je     0x10042d7c
10042d67:	xor    edx,edx
10042d69:	test   esi,esi
10042d6b:	setg   dl
10042d6e:	lea    edx,[edx+edx*1-0x1]
10042d72:	mov    esi,edx
10042d74:	test   esi,esi
10042d76:	jne    0x10042ada
10042d7c:	movzx  esi,BYTE PTR [eax-0x9]
10042d80:	movzx  edx,BYTE PTR [ecx-0x9]
10042d84:	sub    esi,edx
10042d86:	je     0x10042d99
10042d88:	xor    edx,edx
10042d8a:	test   esi,esi
10042d8c:	setg   dl
10042d8f:	lea    edx,[edx+edx*1-0x1]
10042d93:	mov    esi,edx
10042d95:	jmp    0x10042d99
10042d97:	xor    esi,esi
10042d99:	test   esi,esi
10042d9b:	jne    0x10042ada
10042da1:	mov    edx,DWORD PTR [eax-0x8]
10042da4:	cmp    edx,DWORD PTR [ecx-0x8]
10042da7:	je     0x10042e26
10042da9:	movzx  esi,dl
10042dac:	movzx  edx,BYTE PTR [ecx-0x8]
10042db0:	sub    esi,edx
10042db2:	je     0x10042dc9
10042db4:	xor    edx,edx
10042db6:	test   esi,esi
10042db8:	setg   dl
10042dbb:	lea    edx,[edx+edx*1-0x1]
10042dbf:	mov    esi,edx
10042dc1:	test   esi,esi
10042dc3:	jne    0x10042ada
10042dc9:	movzx  esi,BYTE PTR [eax-0x7]
10042dcd:	movzx  edx,BYTE PTR [ecx-0x7]
10042dd1:	sub    esi,edx
10042dd3:	je     0x10042dea
10042dd5:	xor    edx,edx
10042dd7:	test   esi,esi
10042dd9:	setg   dl
10042ddc:	lea    edx,[edx+edx*1-0x1]
10042de0:	mov    esi,edx
10042de2:	test   esi,esi
10042de4:	jne    0x10042ada
10042dea:	movzx  esi,BYTE PTR [eax-0x6]
10042dee:	movzx  edx,BYTE PTR [ecx-0x6]
10042df2:	sub    esi,edx
10042df4:	je     0x10042e0b
10042df6:	xor    edx,edx
10042df8:	test   esi,esi
10042dfa:	setg   dl
10042dfd:	lea    edx,[edx+edx*1-0x1]
10042e01:	mov    esi,edx
10042e03:	test   esi,esi
10042e05:	jne    0x10042ada
10042e0b:	movzx  esi,BYTE PTR [eax-0x5]
10042e0f:	movzx  edx,BYTE PTR [ecx-0x5]
10042e13:	sub    esi,edx
10042e15:	je     0x10042e28
10042e17:	xor    edx,edx
10042e19:	test   esi,esi
10042e1b:	setg   dl
10042e1e:	lea    edx,[edx+edx*1-0x1]
10042e22:	mov    esi,edx
10042e24:	jmp    0x10042e28
10042e26:	xor    esi,esi
10042e28:	test   esi,esi
10042e2a:	jne    0x10042ada
10042e30:	mov    edx,DWORD PTR [eax-0x4]
10042e33:	cmp    edx,DWORD PTR [ecx-0x4]
10042e36:	je     0x10042ea7
10042e38:	movzx  esi,dl
10042e3b:	movzx  edx,BYTE PTR [ecx-0x4]
10042e3f:	sub    esi,edx
10042e41:	je     0x10042e52
10042e43:	xor    edx,edx
10042e45:	test   esi,esi
10042e47:	setg   dl
10042e4a:	lea    edx,[edx+edx*1-0x1]
10042e4e:	test   edx,edx
10042e50:	jne    0x10042e88
10042e52:	movzx  esi,BYTE PTR [eax-0x3]
10042e56:	movzx  edx,BYTE PTR [ecx-0x3]
10042e5a:	sub    esi,edx
10042e5c:	je     0x10042e6d
10042e5e:	xor    edx,edx
10042e60:	test   esi,esi
10042e62:	setg   dl
10042e65:	lea    edx,[edx+edx*1-0x1]
10042e69:	test   edx,edx
10042e6b:	jne    0x10042e88
10042e6d:	movzx  esi,BYTE PTR [eax-0x2]
10042e71:	movzx  edx,BYTE PTR [ecx-0x2]
10042e75:	sub    esi,edx
10042e77:	je     0x10042e8c
10042e79:	xor    edx,edx
10042e7b:	test   esi,esi
10042e7d:	setg   dl
10042e80:	lea    edx,[edx+edx*1-0x1]
10042e84:	test   edx,edx
10042e86:	je     0x10042e8c
10042e88:	mov    eax,edx
10042e8a:	jmp    0x10042ea9
10042e8c:	movzx  eax,BYTE PTR [eax-0x1]
10042e90:	movzx  ecx,BYTE PTR [ecx-0x1]
10042e94:	sub    eax,ecx
10042e96:	je     0x10042ea9
10042e98:	xor    ecx,ecx
10042e9a:	test   eax,eax
10042e9c:	setg   cl
10042e9f:	lea    ecx,[ecx+ecx*1-0x1]
10042ea3:	mov    eax,ecx
10042ea5:	jmp    0x10042ea9
10042ea7:	xor    eax,eax
10042ea9:	test   eax,eax
10042eab:	jne    0x10042eaf
10042ead:	xor    eax,eax
10042eaf:	pop    ebx
10042eb0:	jmp    0x10043c08
10042eb5:	mov    edx,DWORD PTR [eax-0x1d]
10042eb8:	cmp    edx,DWORD PTR [ecx-0x1d]
10042ebb:	je     0x10042f3a
10042ebd:	movzx  esi,dl
10042ec0:	movzx  edx,BYTE PTR [ecx-0x1d]
10042ec4:	sub    esi,edx
10042ec6:	je     0x10042edd
10042ec8:	xor    edx,edx
10042eca:	test   esi,esi
10042ecc:	setg   dl
10042ecf:	lea    edx,[edx+edx*1-0x1]
10042ed3:	mov    esi,edx
10042ed5:	test   esi,esi
10042ed7:	jne    0x10042ada
10042edd:	movzx  esi,BYTE PTR [eax-0x1c]
10042ee1:	movzx  edx,BYTE PTR [ecx-0x1c]
10042ee5:	sub    esi,edx
10042ee7:	je     0x10042efe
10042ee9:	xor    edx,edx
10042eeb:	test   esi,esi
10042eed:	setg   dl
10042ef0:	lea    edx,[edx+edx*1-0x1]
10042ef4:	mov    esi,edx
10042ef6:	test   esi,esi
10042ef8:	jne    0x10042ada
10042efe:	movzx  esi,BYTE PTR [eax-0x1b]
10042f02:	movzx  edx,BYTE PTR [ecx-0x1b]
10042f06:	sub    esi,edx
10042f08:	je     0x10042f1f
10042f0a:	xor    edx,edx
10042f0c:	test   esi,esi
10042f0e:	setg   dl
10042f11:	lea    edx,[edx+edx*1-0x1]
10042f15:	mov    esi,edx
10042f17:	test   esi,esi
10042f19:	jne    0x10042ada
10042f1f:	movzx  esi,BYTE PTR [eax-0x1a]
10042f23:	movzx  edx,BYTE PTR [ecx-0x1a]
10042f27:	sub    esi,edx
10042f29:	je     0x10042f3c
10042f2b:	xor    edx,edx
10042f2d:	test   esi,esi
10042f2f:	setg   dl
10042f32:	lea    edx,[edx+edx*1-0x1]
10042f36:	mov    esi,edx
10042f38:	jmp    0x10042f3c
10042f3a:	xor    esi,esi
10042f3c:	test   esi,esi
10042f3e:	jne    0x10042ada
10042f44:	mov    edx,DWORD PTR [eax-0x19]
10042f47:	cmp    edx,DWORD PTR [ecx-0x19]
10042f4a:	je     0x10042fc9
10042f4c:	movzx  esi,dl
10042f4f:	movzx  edx,BYTE PTR [ecx-0x19]
10042f53:	sub    esi,edx
10042f55:	je     0x10042f6c
10042f57:	xor    edx,edx
10042f59:	test   esi,esi
10042f5b:	setg   dl
10042f5e:	lea    edx,[edx+edx*1-0x1]
10042f62:	mov    esi,edx
10042f64:	test   esi,esi
10042f66:	jne    0x10042ada
10042f6c:	movzx  esi,BYTE PTR [eax-0x18]
10042f70:	movzx  edx,BYTE PTR [ecx-0x18]
10042f74:	sub    esi,edx
10042f76:	je     0x10042f8d
10042f78:	xor    edx,edx
10042f7a:	test   esi,esi
10042f7c:	setg   dl
10042f7f:	lea    edx,[edx+edx*1-0x1]
10042f83:	mov    esi,edx
10042f85:	test   esi,esi
10042f87:	jne    0x10042ada
10042f8d:	movzx  esi,BYTE PTR [eax-0x17]
10042f91:	movzx  edx,BYTE PTR [ecx-0x17]
10042f95:	sub    esi,edx
10042f97:	je     0x10042fae
10042f99:	xor    edx,edx
10042f9b:	test   esi,esi
10042f9d:	setg   dl
10042fa0:	lea    edx,[edx+edx*1-0x1]
10042fa4:	mov    esi,edx
10042fa6:	test   esi,esi
10042fa8:	jne    0x10042ada
10042fae:	movzx  esi,BYTE PTR [eax-0x16]
10042fb2:	movzx  edx,BYTE PTR [ecx-0x16]
10042fb6:	sub    esi,edx
10042fb8:	je     0x10042fcb
10042fba:	xor    edx,edx
10042fbc:	test   esi,esi
10042fbe:	setg   dl
10042fc1:	lea    edx,[edx+edx*1-0x1]
10042fc5:	mov    esi,edx
10042fc7:	jmp    0x10042fcb
10042fc9:	xor    esi,esi
10042fcb:	test   esi,esi
10042fcd:	jne    0x10042ada
10042fd3:	mov    edx,DWORD PTR [eax-0x15]
10042fd6:	cmp    edx,DWORD PTR [ecx-0x15]
10042fd9:	je     0x10043058
10042fdb:	movzx  esi,dl
10042fde:	movzx  edx,BYTE PTR [ecx-0x15]
10042fe2:	sub    esi,edx
10042fe4:	je     0x10042ffb
10042fe6:	xor    edx,edx
10042fe8:	test   esi,esi
10042fea:	setg   dl
10042fed:	lea    edx,[edx+edx*1-0x1]
10042ff1:	mov    esi,edx
10042ff3:	test   esi,esi
10042ff5:	jne    0x10042ada
10042ffb:	movzx  esi,BYTE PTR [eax-0x14]
10042fff:	movzx  edx,BYTE PTR [ecx-0x14]
10043003:	sub    esi,edx
10043005:	je     0x1004301c
10043007:	xor    edx,edx
10043009:	test   esi,esi
1004300b:	setg   dl
1004300e:	lea    edx,[edx+edx*1-0x1]
10043012:	mov    esi,edx
10043014:	test   esi,esi
10043016:	jne    0x10042ada
1004301c:	movzx  esi,BYTE PTR [eax-0x13]
10043020:	movzx  edx,BYTE PTR [ecx-0x13]
10043024:	sub    esi,edx
10043026:	je     0x1004303d
10043028:	xor    edx,edx
1004302a:	test   esi,esi
1004302c:	setg   dl
1004302f:	lea    edx,[edx+edx*1-0x1]
10043033:	mov    esi,edx
10043035:	test   esi,esi
10043037:	jne    0x10042ada
1004303d:	movzx  esi,BYTE PTR [eax-0x12]
10043041:	movzx  edx,BYTE PTR [ecx-0x12]
10043045:	sub    esi,edx
10043047:	je     0x1004305a
10043049:	xor    edx,edx
1004304b:	test   esi,esi
1004304d:	setg   dl
10043050:	lea    edx,[edx+edx*1-0x1]
10043054:	mov    esi,edx
10043056:	jmp    0x1004305a
10043058:	xor    esi,esi
1004305a:	test   esi,esi
1004305c:	jne    0x10042ada
10043062:	mov    edx,DWORD PTR [eax-0x11]
10043065:	cmp    edx,DWORD PTR [ecx-0x11]
10043068:	je     0x100430e7
1004306a:	movzx  esi,dl
1004306d:	movzx  edx,BYTE PTR [ecx-0x11]
10043071:	sub    esi,edx
10043073:	je     0x1004308a
10043075:	xor    edx,edx
10043077:	test   esi,esi
10043079:	setg   dl
1004307c:	lea    edx,[edx+edx*1-0x1]
10043080:	mov    esi,edx
10043082:	test   esi,esi
10043084:	jne    0x10042ada
1004308a:	movzx  esi,BYTE PTR [eax-0x10]
1004308e:	movzx  edx,BYTE PTR [ecx-0x10]
10043092:	sub    esi,edx
10043094:	je     0x100430ab
10043096:	xor    edx,edx
10043098:	test   esi,esi
1004309a:	setg   dl
1004309d:	lea    edx,[edx+edx*1-0x1]
100430a1:	mov    esi,edx
100430a3:	test   esi,esi
100430a5:	jne    0x10042ada
100430ab:	movzx  esi,BYTE PTR [eax-0xf]
100430af:	movzx  edx,BYTE PTR [ecx-0xf]
100430b3:	sub    esi,edx
100430b5:	je     0x100430cc
100430b7:	xor    edx,edx
100430b9:	test   esi,esi
100430bb:	setg   dl
100430be:	lea    edx,[edx+edx*1-0x1]
100430c2:	mov    esi,edx
100430c4:	test   esi,esi
100430c6:	jne    0x10042ada
100430cc:	movzx  esi,BYTE PTR [eax-0xe]
100430d0:	movzx  edx,BYTE PTR [ecx-0xe]
100430d4:	sub    esi,edx
100430d6:	je     0x100430e9
100430d8:	xor    edx,edx
100430da:	test   esi,esi
100430dc:	setg   dl
100430df:	lea    edx,[edx+edx*1-0x1]
100430e3:	mov    esi,edx
100430e5:	jmp    0x100430e9
100430e7:	xor    esi,esi
100430e9:	test   esi,esi
100430eb:	jne    0x10042ada
100430f1:	mov    edx,DWORD PTR [eax-0xd]
100430f4:	cmp    edx,DWORD PTR [ecx-0xd]
100430f7:	je     0x10043176
100430f9:	movzx  esi,dl
100430fc:	movzx  edx,BYTE PTR [ecx-0xd]
10043100:	sub    esi,edx
10043102:	je     0x10043119
10043104:	xor    edx,edx
10043106:	test   esi,esi
10043108:	setg   dl
1004310b:	lea    edx,[edx+edx*1-0x1]
1004310f:	mov    esi,edx
10043111:	test   esi,esi
10043113:	jne    0x10042ada
10043119:	movzx  esi,BYTE PTR [eax-0xc]
1004311d:	movzx  edx,BYTE PTR [ecx-0xc]
10043121:	sub    esi,edx
10043123:	je     0x1004313a
10043125:	xor    edx,edx
10043127:	test   esi,esi
10043129:	setg   dl
1004312c:	lea    edx,[edx+edx*1-0x1]
10043130:	mov    esi,edx
10043132:	test   esi,esi
10043134:	jne    0x10042ada
1004313a:	movzx  esi,BYTE PTR [eax-0xb]
1004313e:	movzx  edx,BYTE PTR [ecx-0xb]
10043142:	sub    esi,edx
10043144:	je     0x1004315b
10043146:	xor    edx,edx
10043148:	test   esi,esi
1004314a:	setg   dl
1004314d:	lea    edx,[edx+edx*1-0x1]
10043151:	mov    esi,edx
10043153:	test   esi,esi
10043155:	jne    0x10042ada
1004315b:	movzx  esi,BYTE PTR [eax-0xa]
1004315f:	movzx  edx,BYTE PTR [ecx-0xa]
10043163:	sub    esi,edx
10043165:	je     0x10043178
10043167:	xor    edx,edx
10043169:	test   esi,esi
1004316b:	setg   dl
1004316e:	lea    edx,[edx+edx*1-0x1]
10043172:	mov    esi,edx
10043174:	jmp    0x10043178
10043176:	xor    esi,esi
10043178:	test   esi,esi
1004317a:	jne    0x10042ada
10043180:	mov    edx,DWORD PTR [eax-0x9]
10043183:	cmp    edx,DWORD PTR [ecx-0x9]
10043186:	je     0x10043206
10043188:	movzx  edx,BYTE PTR [ecx-0x9]
1004318c:	movzx  esi,BYTE PTR [eax-0x9]
10043190:	sub    esi,edx
10043192:	je     0x100431a9
10043194:	xor    edx,edx
10043196:	test   esi,esi
10043198:	setg   dl
1004319b:	lea    edx,[edx+edx*1-0x1]
1004319f:	mov    esi,edx
100431a1:	test   esi,esi
100431a3:	jne    0x10042ada
100431a9:	movzx  esi,BYTE PTR [eax-0x8]
100431ad:	movzx  edx,BYTE PTR [ecx-0x8]
100431b1:	sub    esi,edx
100431b3:	je     0x100431ca
100431b5:	xor    edx,edx
100431b7:	test   esi,esi
100431b9:	setg   dl
100431bc:	lea    edx,[edx+edx*1-0x1]
100431c0:	mov    esi,edx
100431c2:	test   esi,esi
100431c4:	jne    0x10042ada
100431ca:	movzx  esi,BYTE PTR [eax-0x7]
100431ce:	movzx  edx,BYTE PTR [ecx-0x7]
100431d2:	sub    esi,edx
100431d4:	je     0x100431eb
100431d6:	xor    edx,edx
100431d8:	test   esi,esi
100431da:	setg   dl
100431dd:	lea    edx,[edx+edx*1-0x1]
100431e1:	mov    esi,edx
100431e3:	test   esi,esi
100431e5:	jne    0x10042ada
100431eb:	movzx  esi,BYTE PTR [eax-0x6]
100431ef:	movzx  edx,BYTE PTR [ecx-0x6]
100431f3:	sub    esi,edx
100431f5:	je     0x10043208
100431f7:	xor    edx,edx
100431f9:	test   esi,esi
100431fb:	setg   dl
100431fe:	lea    edx,[edx+edx*1-0x1]
10043202:	mov    esi,edx
10043204:	jmp    0x10043208
10043206:	xor    esi,esi
10043208:	test   esi,esi
1004320a:	jne    0x10042ada
10043210:	mov    edx,DWORD PTR [eax-0x5]
10043213:	cmp    edx,DWORD PTR [ecx-0x5]
10043216:	je     0x10043295
10043218:	movzx  esi,dl
1004321b:	movzx  edx,BYTE PTR [ecx-0x5]
1004321f:	sub    esi,edx
10043221:	je     0x10043238
10043223:	xor    edx,edx
10043225:	test   esi,esi
10043227:	setg   dl
1004322a:	lea    edx,[edx+edx*1-0x1]
1004322e:	mov    esi,edx
10043230:	test   esi,esi
10043232:	jne    0x10042ada
10043238:	movzx  esi,BYTE PTR [eax-0x4]
1004323c:	movzx  edx,BYTE PTR [ecx-0x4]
10043240:	sub    esi,edx
10043242:	je     0x10043259
10043244:	xor    edx,edx
10043246:	test   esi,esi
10043248:	setg   dl
1004324b:	lea    edx,[edx+edx*1-0x1]
1004324f:	mov    esi,edx
10043251:	test   esi,esi
10043253:	jne    0x10042ada
10043259:	movzx  esi,BYTE PTR [eax-0x3]
1004325d:	movzx  edx,BYTE PTR [ecx-0x3]
10043261:	sub    esi,edx
10043263:	je     0x1004327a
10043265:	xor    edx,edx
10043267:	test   esi,esi
10043269:	setg   dl
1004326c:	lea    edx,[edx+edx*1-0x1]
10043270:	mov    esi,edx
10043272:	test   esi,esi
10043274:	jne    0x10042ada
1004327a:	movzx  esi,BYTE PTR [eax-0x2]
1004327e:	movzx  edx,BYTE PTR [ecx-0x2]
10043282:	sub    esi,edx
10043284:	je     0x10043297
10043286:	xor    edx,edx
10043288:	test   esi,esi
1004328a:	setg   dl
1004328d:	lea    edx,[edx+edx*1-0x1]
10043291:	mov    esi,edx
10043293:	jmp    0x10043297
10043295:	xor    esi,esi
10043297:	test   esi,esi
10043299:	jne    0x10042ada
1004329f:	movzx  ecx,BYTE PTR [ecx-0x1]
100432a3:	movzx  eax,BYTE PTR [eax-0x1]
100432a7:	sub    eax,ecx
100432a9:	je     0x10042eaf
100432af:	xor    ecx,ecx
100432b1:	test   eax,eax
100432b3:	setg   cl
100432b6:	lea    ecx,[ecx+ecx*1-0x1]
100432ba:	mov    eax,ecx
100432bc:	jmp    0x10042eaf
100432c1:	mov    edx,DWORD PTR [eax-0x1e]
100432c4:	cmp    edx,DWORD PTR [ecx-0x1e]
100432c7:	je     0x10043346
100432c9:	movzx  esi,dl
100432cc:	movzx  edx,BYTE PTR [ecx-0x1e]
100432d0:	sub    esi,edx
100432d2:	je     0x100432e9
100432d4:	xor    edx,edx
100432d6:	test   esi,esi
100432d8:	setg   dl
100432db:	lea    edx,[edx+edx*1-0x1]
100432df:	mov    esi,edx
100432e1:	test   esi,esi
100432e3:	jne    0x10042ada
100432e9:	movzx  esi,BYTE PTR [eax-0x1d]
100432ed:	movzx  edx,BYTE PTR [ecx-0x1d]
100432f1:	sub    esi,edx
100432f3:	je     0x1004330a
100432f5:	xor    edx,edx
100432f7:	test   esi,esi
100432f9:	setg   dl
100432fc:	lea    edx,[edx+edx*1-0x1]
10043300:	mov    esi,edx
10043302:	test   esi,esi
10043304:	jne    0x10042ada
1004330a:	movzx  esi,BYTE PTR [eax-0x1c]
1004330e:	movzx  edx,BYTE PTR [ecx-0x1c]
10043312:	sub    esi,edx
10043314:	je     0x1004332b
10043316:	xor    edx,edx
10043318:	test   esi,esi
1004331a:	setg   dl
1004331d:	lea    edx,[edx+edx*1-0x1]
10043321:	mov    esi,edx
10043323:	test   esi,esi
10043325:	jne    0x10042ada
1004332b:	movzx  esi,BYTE PTR [eax-0x1b]
1004332f:	movzx  edx,BYTE PTR [ecx-0x1b]
10043333:	sub    esi,edx
10043335:	je     0x10043348
10043337:	xor    edx,edx
10043339:	test   esi,esi
1004333b:	setg   dl
1004333e:	lea    edx,[edx+edx*1-0x1]
10043342:	mov    esi,edx
10043344:	jmp    0x10043348
10043346:	xor    esi,esi
10043348:	test   esi,esi
1004334a:	jne    0x10042ada
10043350:	mov    edx,DWORD PTR [eax-0x1a]
10043353:	cmp    edx,DWORD PTR [ecx-0x1a]
10043356:	je     0x100433d5
10043358:	movzx  esi,dl
1004335b:	movzx  edx,BYTE PTR [ecx-0x1a]
1004335f:	sub    esi,edx
10043361:	je     0x10043378
10043363:	xor    edx,edx
10043365:	test   esi,esi
10043367:	setg   dl
1004336a:	lea    edx,[edx+edx*1-0x1]
1004336e:	mov    esi,edx
10043370:	test   esi,esi
10043372:	jne    0x10042ada
10043378:	movzx  esi,BYTE PTR [eax-0x19]
1004337c:	movzx  edx,BYTE PTR [ecx-0x19]
10043380:	sub    esi,edx
10043382:	je     0x10043399
10043384:	xor    edx,edx
10043386:	test   esi,esi
10043388:	setg   dl
1004338b:	lea    edx,[edx+edx*1-0x1]
1004338f:	mov    esi,edx
10043391:	test   esi,esi
10043393:	jne    0x10042ada
10043399:	movzx  esi,BYTE PTR [eax-0x18]
1004339d:	movzx  edx,BYTE PTR [ecx-0x18]
100433a1:	sub    esi,edx
100433a3:	je     0x100433ba
100433a5:	xor    edx,edx
100433a7:	test   esi,esi
100433a9:	setg   dl
100433ac:	lea    edx,[edx+edx*1-0x1]
100433b0:	mov    esi,edx
100433b2:	test   esi,esi
100433b4:	jne    0x10042ada
100433ba:	movzx  esi,BYTE PTR [eax-0x17]
100433be:	movzx  edx,BYTE PTR [ecx-0x17]
100433c2:	sub    esi,edx
100433c4:	je     0x100433d7
100433c6:	xor    edx,edx
100433c8:	test   esi,esi
100433ca:	setg   dl
100433cd:	lea    edx,[edx+edx*1-0x1]
100433d1:	mov    esi,edx
100433d3:	jmp    0x100433d7
100433d5:	xor    esi,esi
100433d7:	test   esi,esi
100433d9:	jne    0x10042ada
100433df:	mov    edx,DWORD PTR [eax-0x16]
100433e2:	cmp    edx,DWORD PTR [ecx-0x16]
100433e5:	je     0x10043464
100433e7:	movzx  esi,dl
100433ea:	movzx  edx,BYTE PTR [ecx-0x16]
100433ee:	sub    esi,edx
100433f0:	je     0x10043407
100433f2:	xor    edx,edx
100433f4:	test   esi,esi
100433f6:	setg   dl
100433f9:	lea    edx,[edx+edx*1-0x1]
100433fd:	mov    esi,edx
100433ff:	test   esi,esi
10043401:	jne    0x10042ada
10043407:	movzx  esi,BYTE PTR [eax-0x15]
1004340b:	movzx  edx,BYTE PTR [ecx-0x15]
1004340f:	sub    esi,edx
10043411:	je     0x10043428
10043413:	xor    edx,edx
10043415:	test   esi,esi
10043417:	setg   dl
1004341a:	lea    edx,[edx+edx*1-0x1]
1004341e:	mov    esi,edx
10043420:	test   esi,esi
10043422:	jne    0x10042ada
10043428:	movzx  esi,BYTE PTR [eax-0x14]
1004342c:	movzx  edx,BYTE PTR [ecx-0x14]
10043430:	sub    esi,edx
10043432:	je     0x10043449
10043434:	xor    edx,edx
10043436:	test   esi,esi
10043438:	setg   dl
1004343b:	lea    edx,[edx+edx*1-0x1]
1004343f:	mov    esi,edx
10043441:	test   esi,esi
10043443:	jne    0x10042ada
10043449:	movzx  esi,BYTE PTR [eax-0x13]
1004344d:	movzx  edx,BYTE PTR [ecx-0x13]
10043451:	sub    esi,edx
10043453:	je     0x10043466
10043455:	xor    edx,edx
10043457:	test   esi,esi
10043459:	setg   dl
1004345c:	lea    edx,[edx+edx*1-0x1]
10043460:	mov    esi,edx
10043462:	jmp    0x10043466
10043464:	xor    esi,esi
10043466:	test   esi,esi
10043468:	jne    0x10042ada
1004346e:	mov    edx,DWORD PTR [eax-0x12]
10043471:	cmp    edx,DWORD PTR [ecx-0x12]
10043474:	je     0x100434f3
10043476:	movzx  esi,dl
10043479:	movzx  edx,BYTE PTR [ecx-0x12]
1004347d:	sub    esi,edx
1004347f:	je     0x10043496
10043481:	xor    edx,edx
10043483:	test   esi,esi
10043485:	setg   dl
10043488:	lea    edx,[edx+edx*1-0x1]
1004348c:	mov    esi,edx
1004348e:	test   esi,esi
10043490:	jne    0x10042ada
10043496:	movzx  esi,BYTE PTR [eax-0x11]
1004349a:	movzx  edx,BYTE PTR [ecx-0x11]
1004349e:	sub    esi,edx
100434a0:	je     0x100434b7
100434a2:	xor    edx,edx
100434a4:	test   esi,esi
100434a6:	setg   dl
100434a9:	lea    edx,[edx+edx*1-0x1]
100434ad:	mov    esi,edx
100434af:	test   esi,esi
100434b1:	jne    0x10042ada
100434b7:	movzx  esi,BYTE PTR [eax-0x10]
100434bb:	movzx  edx,BYTE PTR [ecx-0x10]
100434bf:	sub    esi,edx
100434c1:	je     0x100434d8
100434c3:	xor    edx,edx
100434c5:	test   esi,esi
100434c7:	setg   dl
100434ca:	lea    edx,[edx+edx*1-0x1]
100434ce:	mov    esi,edx
100434d0:	test   esi,esi
100434d2:	jne    0x10042ada
100434d8:	movzx  esi,BYTE PTR [eax-0xf]
100434dc:	movzx  edx,BYTE PTR [ecx-0xf]
100434e0:	sub    esi,edx
100434e2:	je     0x100434f5
100434e4:	xor    edx,edx
100434e6:	test   esi,esi
100434e8:	setg   dl
100434eb:	lea    edx,[edx+edx*1-0x1]
100434ef:	mov    esi,edx
100434f1:	jmp    0x100434f5
100434f3:	xor    esi,esi
100434f5:	test   esi,esi
100434f7:	jne    0x10042ada
100434fd:	mov    edx,DWORD PTR [eax-0xe]
10043500:	cmp    edx,DWORD PTR [ecx-0xe]
10043503:	je     0x10043582
10043505:	movzx  esi,dl
10043508:	movzx  edx,BYTE PTR [ecx-0xe]
1004350c:	sub    esi,edx
1004350e:	je     0x10043525
10043510:	xor    edx,edx
10043512:	test   esi,esi
10043514:	setg   dl
10043517:	lea    edx,[edx+edx*1-0x1]
1004351b:	mov    esi,edx
1004351d:	test   esi,esi
1004351f:	jne    0x10042ada
10043525:	movzx  esi,BYTE PTR [eax-0xd]
10043529:	movzx  edx,BYTE PTR [ecx-0xd]
1004352d:	sub    esi,edx
1004352f:	je     0x10043546
10043531:	xor    edx,edx
10043533:	test   esi,esi
10043535:	setg   dl
10043538:	lea    edx,[edx+edx*1-0x1]
1004353c:	mov    esi,edx
1004353e:	test   esi,esi
10043540:	jne    0x10042ada
10043546:	movzx  esi,BYTE PTR [eax-0xc]
1004354a:	movzx  edx,BYTE PTR [ecx-0xc]
1004354e:	sub    esi,edx
10043550:	je     0x10043567
10043552:	xor    edx,edx
10043554:	test   esi,esi
10043556:	setg   dl
10043559:	lea    edx,[edx+edx*1-0x1]
1004355d:	mov    esi,edx
1004355f:	test   esi,esi
10043561:	jne    0x10042ada
10043567:	movzx  esi,BYTE PTR [eax-0xb]
1004356b:	movzx  edx,BYTE PTR [ecx-0xb]
1004356f:	sub    esi,edx
10043571:	je     0x10043584
10043573:	xor    edx,edx
10043575:	test   esi,esi
10043577:	setg   dl
1004357a:	lea    edx,[edx+edx*1-0x1]
1004357e:	mov    esi,edx
10043580:	jmp    0x10043584
10043582:	xor    esi,esi
10043584:	test   esi,esi
10043586:	jne    0x10042ada
1004358c:	mov    edx,DWORD PTR [eax-0xa]
1004358f:	cmp    edx,DWORD PTR [ecx-0xa]
10043592:	je     0x10043612
10043594:	movzx  edx,BYTE PTR [ecx-0xa]
10043598:	movzx  esi,BYTE PTR [eax-0xa]
1004359c:	sub    esi,edx
1004359e:	je     0x100435b5
100435a0:	xor    edx,edx
100435a2:	test   esi,esi
100435a4:	setg   dl
100435a7:	lea    edx,[edx+edx*1-0x1]
100435ab:	mov    esi,edx
100435ad:	test   esi,esi
100435af:	jne    0x10042ada
100435b5:	movzx  edx,BYTE PTR [ecx-0x9]
100435b9:	movzx  esi,BYTE PTR [eax-0x9]
100435bd:	sub    esi,edx
100435bf:	je     0x100435d6
100435c1:	xor    edx,edx
100435c3:	test   esi,esi
100435c5:	setg   dl
100435c8:	lea    edx,[edx+edx*1-0x1]
100435cc:	mov    esi,edx
100435ce:	test   esi,esi
100435d0:	jne    0x10042ada
100435d6:	movzx  edx,BYTE PTR [ecx-0x8]
100435da:	movzx  esi,BYTE PTR [eax-0x8]
100435de:	sub    esi,edx
100435e0:	je     0x100435f7
100435e2:	xor    edx,edx
100435e4:	test   esi,esi
100435e6:	setg   dl
100435e9:	lea    edx,[edx+edx*1-0x1]
100435ed:	mov    esi,edx
100435ef:	test   esi,esi
100435f1:	jne    0x10042ada
100435f7:	movzx  edx,BYTE PTR [ecx-0x7]
100435fb:	movzx  esi,BYTE PTR [eax-0x7]
100435ff:	sub    esi,edx
10043601:	je     0x10043614
10043603:	xor    edx,edx
10043605:	test   esi,esi
10043607:	setg   dl
1004360a:	lea    edx,[edx+edx*1-0x1]
1004360e:	mov    esi,edx
10043610:	jmp    0x10043614
10043612:	xor    esi,esi
10043614:	test   esi,esi
10043616:	jne    0x10042ada
1004361c:	mov    edx,DWORD PTR [eax-0x6]
1004361f:	cmp    edx,DWORD PTR [ecx-0x6]
10043622:	je     0x100436a1
10043624:	movzx  esi,dl
10043627:	movzx  edx,BYTE PTR [ecx-0x6]
1004362b:	sub    esi,edx
1004362d:	je     0x10043644
1004362f:	xor    edx,edx
10043631:	test   esi,esi
10043633:	setg   dl
10043636:	lea    edx,[edx+edx*1-0x1]
1004363a:	mov    esi,edx
1004363c:	test   esi,esi
1004363e:	jne    0x10042ada
10043644:	movzx  esi,BYTE PTR [eax-0x5]
10043648:	movzx  edx,BYTE PTR [ecx-0x5]
1004364c:	sub    esi,edx
1004364e:	je     0x10043665
10043650:	xor    edx,edx
10043652:	test   esi,esi
10043654:	setg   dl
10043657:	lea    edx,[edx+edx*1-0x1]
1004365b:	mov    esi,edx
1004365d:	test   esi,esi
1004365f:	jne    0x10042ada
10043665:	movzx  esi,BYTE PTR [eax-0x4]
10043669:	movzx  edx,BYTE PTR [ecx-0x4]
1004366d:	sub    esi,edx
1004366f:	je     0x10043686
10043671:	xor    edx,edx
10043673:	test   esi,esi
10043675:	setg   dl
10043678:	lea    edx,[edx+edx*1-0x1]
1004367c:	mov    esi,edx
1004367e:	test   esi,esi
10043680:	jne    0x10042ada
10043686:	movzx  esi,BYTE PTR [eax-0x3]
1004368a:	movzx  edx,BYTE PTR [ecx-0x3]
1004368e:	sub    esi,edx
10043690:	je     0x100436a3
10043692:	xor    edx,edx
10043694:	test   esi,esi
10043696:	setg   dl
10043699:	lea    edx,[edx+edx*1-0x1]
1004369d:	mov    esi,edx
1004369f:	jmp    0x100436a3
100436a1:	xor    esi,esi
100436a3:	test   esi,esi
100436a5:	jne    0x10042ada
100436ab:	mov    dx,WORD PTR [eax-0x2]
100436af:	cmp    dx,WORD PTR [ecx-0x2]
100436b3:	je     0x10042ead
100436b9:	movzx  edx,BYTE PTR [ecx-0x2]
100436bd:	movzx  esi,BYTE PTR [eax-0x2]
100436c1:	sub    esi,edx
100436c3:	je     0x1004329f
100436c9:	xor    edx,edx
100436cb:	test   esi,esi
100436cd:	setg   dl
100436d0:	lea    edx,[edx+edx*1-0x1]
100436d4:	test   edx,edx
100436d6:	jne    0x10043aef
100436dc:	jmp    0x1004329f
100436e1:	mov    edx,DWORD PTR [eax-0x1f]
100436e4:	cmp    edx,DWORD PTR [ecx-0x1f]
100436e7:	je     0x10043767
100436e9:	movzx  edx,BYTE PTR [ecx-0x1f]
100436ed:	movzx  esi,BYTE PTR [eax-0x1f]
100436f1:	sub    esi,edx
100436f3:	je     0x1004370a
100436f5:	xor    edx,edx
100436f7:	test   esi,esi
100436f9:	setg   dl
100436fc:	lea    edx,[edx+edx*1-0x1]
10043700:	mov    esi,edx
10043702:	test   esi,esi
10043704:	jne    0x10042ada
1004370a:	movzx  esi,BYTE PTR [eax-0x1e]
1004370e:	movzx  edx,BYTE PTR [ecx-0x1e]
10043712:	sub    esi,edx
10043714:	je     0x1004372b
10043716:	xor    edx,edx
10043718:	test   esi,esi
1004371a:	setg   dl
1004371d:	lea    edx,[edx+edx*1-0x1]
10043721:	mov    esi,edx
10043723:	test   esi,esi
10043725:	jne    0x10042ada
1004372b:	movzx  esi,BYTE PTR [eax-0x1d]
1004372f:	movzx  edx,BYTE PTR [ecx-0x1d]
10043733:	sub    esi,edx
10043735:	je     0x1004374c
10043737:	xor    edx,edx
10043739:	test   esi,esi
1004373b:	setg   dl
1004373e:	lea    edx,[edx+edx*1-0x1]
10043742:	mov    esi,edx
10043744:	test   esi,esi
10043746:	jne    0x10042ada
1004374c:	movzx  esi,BYTE PTR [eax-0x1c]
10043750:	movzx  edx,BYTE PTR [ecx-0x1c]
10043754:	sub    esi,edx
10043756:	je     0x10043769
10043758:	xor    edx,edx
1004375a:	test   esi,esi
1004375c:	setg   dl
1004375f:	lea    edx,[edx+edx*1-0x1]
10043763:	mov    esi,edx
10043765:	jmp    0x10043769
10043767:	xor    esi,esi
10043769:	test   esi,esi
1004376b:	jne    0x10042ada
10043771:	mov    edx,DWORD PTR [eax-0x1b]
10043774:	cmp    edx,DWORD PTR [ecx-0x1b]
10043777:	je     0x100437f6
10043779:	movzx  esi,dl
1004377c:	movzx  edx,BYTE PTR [ecx-0x1b]
10043780:	sub    esi,edx
10043782:	je     0x10043799
10043784:	xor    edx,edx
10043786:	test   esi,esi
10043788:	setg   dl
1004378b:	lea    edx,[edx+edx*1-0x1]
1004378f:	mov    esi,edx
10043791:	test   esi,esi
10043793:	jne    0x10042ada
10043799:	movzx  esi,BYTE PTR [eax-0x1a]
1004379d:	movzx  edx,BYTE PTR [ecx-0x1a]
100437a1:	sub    esi,edx
100437a3:	je     0x100437ba
100437a5:	xor    edx,edx
100437a7:	test   esi,esi
100437a9:	setg   dl
100437ac:	lea    edx,[edx+edx*1-0x1]
100437b0:	mov    esi,edx
100437b2:	test   esi,esi
100437b4:	jne    0x10042ada
100437ba:	movzx  esi,BYTE PTR [eax-0x19]
100437be:	movzx  edx,BYTE PTR [ecx-0x19]
100437c2:	sub    esi,edx
100437c4:	je     0x100437db
100437c6:	xor    edx,edx
100437c8:	test   esi,esi
100437ca:	setg   dl
100437cd:	lea    edx,[edx+edx*1-0x1]
100437d1:	mov    esi,edx
100437d3:	test   esi,esi
100437d5:	jne    0x10042ada
100437db:	movzx  esi,BYTE PTR [eax-0x18]
100437df:	movzx  edx,BYTE PTR [ecx-0x18]
100437e3:	sub    esi,edx
100437e5:	je     0x100437f8
100437e7:	xor    edx,edx
100437e9:	test   esi,esi
100437eb:	setg   dl
100437ee:	lea    edx,[edx+edx*1-0x1]
100437f2:	mov    esi,edx
100437f4:	jmp    0x100437f8
100437f6:	xor    esi,esi
100437f8:	test   esi,esi
100437fa:	jne    0x10042ada
10043800:	mov    edx,DWORD PTR [eax-0x17]
10043803:	cmp    edx,DWORD PTR [ecx-0x17]
10043806:	je     0x10043885
10043808:	movzx  esi,dl
1004380b:	movzx  edx,BYTE PTR [ecx-0x17]
1004380f:	sub    esi,edx
10043811:	je     0x10043828
10043813:	xor    edx,edx
10043815:	test   esi,esi
10043817:	setg   dl
1004381a:	lea    edx,[edx+edx*1-0x1]
1004381e:	mov    esi,edx
10043820:	test   esi,esi
10043822:	jne    0x10042ada
10043828:	movzx  esi,BYTE PTR [eax-0x16]
1004382c:	movzx  edx,BYTE PTR [ecx-0x16]
10043830:	sub    esi,edx
10043832:	je     0x10043849
10043834:	xor    edx,edx
10043836:	test   esi,esi
10043838:	setg   dl
1004383b:	lea    edx,[edx+edx*1-0x1]
1004383f:	mov    esi,edx
10043841:	test   esi,esi
10043843:	jne    0x10042ada
10043849:	movzx  esi,BYTE PTR [eax-0x15]
1004384d:	movzx  edx,BYTE PTR [ecx-0x15]
10043851:	sub    esi,edx
10043853:	je     0x1004386a
10043855:	xor    edx,edx
10043857:	test   esi,esi
10043859:	setg   dl
1004385c:	lea    edx,[edx+edx*1-0x1]
10043860:	mov    esi,edx
10043862:	test   esi,esi
10043864:	jne    0x10042ada
1004386a:	movzx  esi,BYTE PTR [eax-0x14]
1004386e:	movzx  edx,BYTE PTR [ecx-0x14]
10043872:	sub    esi,edx
10043874:	je     0x10043887
10043876:	xor    edx,edx
10043878:	test   esi,esi
1004387a:	setg   dl
1004387d:	lea    edx,[edx+edx*1-0x1]
10043881:	mov    esi,edx
10043883:	jmp    0x10043887
10043885:	xor    esi,esi
10043887:	test   esi,esi
10043889:	jne    0x10042ada
1004388f:	mov    edx,DWORD PTR [eax-0x13]
10043892:	cmp    edx,DWORD PTR [ecx-0x13]
10043895:	je     0x10043914
10043897:	movzx  esi,dl
1004389a:	movzx  edx,BYTE PTR [ecx-0x13]
1004389e:	sub    esi,edx
100438a0:	je     0x100438b7
100438a2:	xor    edx,edx
100438a4:	test   esi,esi
100438a6:	setg   dl
100438a9:	lea    edx,[edx+edx*1-0x1]
100438ad:	mov    esi,edx
100438af:	test   esi,esi
100438b1:	jne    0x10042ada
100438b7:	movzx  esi,BYTE PTR [eax-0x12]
100438bb:	movzx  edx,BYTE PTR [ecx-0x12]
100438bf:	sub    esi,edx
100438c1:	je     0x100438d8
100438c3:	xor    edx,edx
100438c5:	test   esi,esi
100438c7:	setg   dl
100438ca:	lea    edx,[edx+edx*1-0x1]
100438ce:	mov    esi,edx
100438d0:	test   esi,esi
100438d2:	jne    0x10042ada
100438d8:	movzx  esi,BYTE PTR [eax-0x11]
100438dc:	movzx  edx,BYTE PTR [ecx-0x11]
100438e0:	sub    esi,edx
100438e2:	je     0x100438f9
100438e4:	xor    edx,edx
100438e6:	test   esi,esi
100438e8:	setg   dl
100438eb:	lea    edx,[edx+edx*1-0x1]
100438ef:	mov    esi,edx
100438f1:	test   esi,esi
100438f3:	jne    0x10042ada
100438f9:	movzx  esi,BYTE PTR [eax-0x10]
100438fd:	movzx  edx,BYTE PTR [ecx-0x10]
10043901:	sub    esi,edx
10043903:	je     0x10043916
10043905:	xor    edx,edx
10043907:	test   esi,esi
10043909:	setg   dl
1004390c:	lea    edx,[edx+edx*1-0x1]
10043910:	mov    esi,edx
10043912:	jmp    0x10043916
10043914:	xor    esi,esi
10043916:	test   esi,esi
10043918:	jne    0x10042ada
1004391e:	mov    edx,DWORD PTR [eax-0xf]
10043921:	cmp    edx,DWORD PTR [ecx-0xf]
10043924:	je     0x100439a4
10043926:	movzx  edx,BYTE PTR [ecx-0xf]
1004392a:	movzx  esi,BYTE PTR [eax-0xf]
1004392e:	sub    esi,edx
10043930:	je     0x10043947
10043932:	xor    edx,edx
10043934:	test   esi,esi
10043936:	setg   dl
10043939:	lea    edx,[edx+edx*1-0x1]
1004393d:	mov    esi,edx
1004393f:	test   esi,esi
10043941:	jne    0x10042ada
10043947:	movzx  esi,BYTE PTR [eax-0xe]
1004394b:	movzx  edx,BYTE PTR [ecx-0xe]
1004394f:	sub    esi,edx
10043951:	je     0x10043968
10043953:	xor    edx,edx
10043955:	test   esi,esi
10043957:	setg   dl
1004395a:	lea    edx,[edx+edx*1-0x1]
1004395e:	mov    esi,edx
10043960:	test   esi,esi
10043962:	jne    0x10042ada
10043968:	movzx  esi,BYTE PTR [eax-0xd]
1004396c:	movzx  edx,BYTE PTR [ecx-0xd]
10043970:	sub    esi,edx
10043972:	je     0x10043989
10043974:	xor    edx,edx
10043976:	test   esi,esi
10043978:	setg   dl
1004397b:	lea    edx,[edx+edx*1-0x1]
1004397f:	mov    esi,edx
10043981:	test   esi,esi
10043983:	jne    0x10042ada
10043989:	movzx  esi,BYTE PTR [eax-0xc]
1004398d:	movzx  edx,BYTE PTR [ecx-0xc]
10043991:	sub    esi,edx
10043993:	je     0x100439a6
10043995:	xor    edx,edx
10043997:	test   esi,esi
10043999:	setg   dl
1004399c:	lea    edx,[edx+edx*1-0x1]
100439a0:	mov    esi,edx
100439a2:	jmp    0x100439a6
100439a4:	xor    esi,esi
100439a6:	test   esi,esi
100439a8:	jne    0x10042ada
100439ae:	mov    edx,DWORD PTR [eax-0xb]
100439b1:	cmp    edx,DWORD PTR [ecx-0xb]
100439b4:	je     0x10043a33
100439b6:	movzx  esi,dl
100439b9:	movzx  edx,BYTE PTR [ecx-0xb]
100439bd:	sub    esi,edx
100439bf:	je     0x100439d6
100439c1:	xor    edx,edx
100439c3:	test   esi,esi
100439c5:	setg   dl
100439c8:	lea    edx,[edx+edx*1-0x1]
100439cc:	mov    esi,edx
100439ce:	test   esi,esi
100439d0:	jne    0x10042ada
100439d6:	movzx  esi,BYTE PTR [eax-0xa]
100439da:	movzx  edx,BYTE PTR [ecx-0xa]
100439de:	sub    esi,edx
100439e0:	je     0x100439f7
100439e2:	xor    edx,edx
100439e4:	test   esi,esi
100439e6:	setg   dl
100439e9:	lea    edx,[edx+edx*1-0x1]
100439ed:	mov    esi,edx
100439ef:	test   esi,esi
100439f1:	jne    0x10042ada
100439f7:	movzx  esi,BYTE PTR [eax-0x9]
100439fb:	movzx  edx,BYTE PTR [ecx-0x9]
100439ff:	sub    esi,edx
10043a01:	je     0x10043a18
10043a03:	xor    edx,edx
10043a05:	test   esi,esi
10043a07:	setg   dl
10043a0a:	lea    edx,[edx+edx*1-0x1]
10043a0e:	mov    esi,edx
10043a10:	test   esi,esi
10043a12:	jne    0x10042ada
10043a18:	movzx  esi,BYTE PTR [eax-0x8]
10043a1c:	movzx  edx,BYTE PTR [ecx-0x8]
10043a20:	sub    esi,edx
10043a22:	je     0x10043a35
10043a24:	xor    edx,edx
10043a26:	test   esi,esi
10043a28:	setg   dl
10043a2b:	lea    edx,[edx+edx*1-0x1]
10043a2f:	mov    esi,edx
10043a31:	jmp    0x10043a35
10043a33:	xor    esi,esi
10043a35:	test   esi,esi
10043a37:	jne    0x10042ada
10043a3d:	mov    edx,DWORD PTR [eax-0x7]
10043a40:	cmp    edx,DWORD PTR [ecx-0x7]
10043a43:	je     0x10043ac2
10043a45:	movzx  esi,dl
10043a48:	movzx  edx,BYTE PTR [ecx-0x7]
10043a4c:	sub    esi,edx
10043a4e:	je     0x10043a65
10043a50:	xor    edx,edx
10043a52:	test   esi,esi
10043a54:	setg   dl
10043a57:	lea    edx,[edx+edx*1-0x1]
10043a5b:	mov    esi,edx
10043a5d:	test   esi,esi
10043a5f:	jne    0x10042ada
10043a65:	movzx  esi,BYTE PTR [eax-0x6]
10043a69:	movzx  edx,BYTE PTR [ecx-0x6]
10043a6d:	sub    esi,edx
10043a6f:	je     0x10043a86
10043a71:	xor    edx,edx
10043a73:	test   esi,esi
10043a75:	setg   dl
10043a78:	lea    edx,[edx+edx*1-0x1]
10043a7c:	mov    esi,edx
10043a7e:	test   esi,esi
10043a80:	jne    0x10042ada
10043a86:	movzx  esi,BYTE PTR [eax-0x5]
10043a8a:	movzx  edx,BYTE PTR [ecx-0x5]
10043a8e:	sub    esi,edx
10043a90:	je     0x10043aa7
10043a92:	xor    edx,edx
10043a94:	test   esi,esi
10043a96:	setg   dl
10043a99:	lea    edx,[edx+edx*1-0x1]
10043a9d:	mov    esi,edx
10043a9f:	test   esi,esi
10043aa1:	jne    0x10042ada
10043aa7:	movzx  esi,BYTE PTR [eax-0x4]
10043aab:	movzx  edx,BYTE PTR [ecx-0x4]
10043aaf:	sub    esi,edx
10043ab1:	je     0x10043ac4
10043ab3:	xor    edx,edx
10043ab5:	test   esi,esi
10043ab7:	setg   dl
10043aba:	lea    edx,[edx+edx*1-0x1]
10043abe:	mov    esi,edx
10043ac0:	jmp    0x10043ac4
10043ac2:	xor    esi,esi
10043ac4:	test   esi,esi
10043ac6:	jne    0x10042ada
10043acc:	movzx  esi,BYTE PTR [eax-0x3]
10043ad0:	movzx  edx,BYTE PTR [ecx-0x3]
10043ad4:	sub    esi,edx
10043ad6:	je     0x100436b9
10043adc:	xor    edx,edx
10043ade:	test   esi,esi
10043ae0:	setg   dl
10043ae3:	lea    edx,[edx+edx*1-0x1]
10043ae7:	test   edx,edx
10043ae9:	je     0x100436b9
10043aef:	mov    eax,edx
10043af1:	jmp    0x10042eaf
10043af6:	mov    ecx,DWORD PTR [ebp+0x8]
10043af9:	mov    esi,DWORD PTR [ebp+0xc]
10043afc:	movzx  eax,BYTE PTR [ecx]
10043aff:	movzx  edx,BYTE PTR [esi]
10043b02:	sub    eax,edx
10043b04:	je     0x10043b1b
10043b06:	xor    edx,edx
10043b08:	test   eax,eax
10043b0a:	setg   dl
10043b0d:	lea    edx,[edx+edx*1-0x1]
10043b11:	mov    eax,edx
10043b13:	test   eax,eax
10043b15:	jne    0x10043c08
10043b1b:	movzx  eax,BYTE PTR [ecx+0x1]
10043b1f:	movzx  edx,BYTE PTR [esi+0x1]
10043b23:	sub    eax,edx
10043b25:	je     0x10043b3c
10043b27:	xor    edx,edx
10043b29:	test   eax,eax
10043b2b:	setg   dl
10043b2e:	lea    edx,[edx+edx*1-0x1]
10043b32:	mov    eax,edx
10043b34:	test   eax,eax
10043b36:	jne    0x10043c08
10043b3c:	movzx  eax,BYTE PTR [ecx+0x2]
10043b40:	movzx  edx,BYTE PTR [esi+0x2]
10043b44:	sub    eax,edx
10043b46:	je     0x10043b5d
10043b48:	xor    edx,edx
10043b4a:	test   eax,eax
10043b4c:	setg   dl
10043b4f:	lea    edx,[edx+edx*1-0x1]
10043b53:	mov    eax,edx
10043b55:	test   eax,eax
10043b57:	jne    0x10043c08
10043b5d:	movzx  eax,BYTE PTR [ecx+0x3]
10043b61:	movzx  ecx,BYTE PTR [esi+0x3]
10043b65:	sub    eax,ecx
10043b67:	je     0x10043c08
10043b6d:	xor    ecx,ecx
10043b6f:	test   eax,eax
10043b71:	setg   cl
10043b74:	lea    ecx,[ecx+ecx*1-0x1]
10043b78:	mov    eax,ecx
10043b7a:	jmp    0x10043c08
10043b7f:	mov    ecx,DWORD PTR [ebp+0x8]
10043b82:	mov    esi,DWORD PTR [ebp+0xc]
10043b85:	movzx  eax,BYTE PTR [ecx]
10043b88:	movzx  edx,BYTE PTR [esi]
10043b8b:	sub    eax,edx
10043b8d:	je     0x10043ba0
10043b8f:	xor    edx,edx
10043b91:	test   eax,eax
10043b93:	setg   dl
10043b96:	lea    edx,[edx+edx*1-0x1]
10043b9a:	mov    eax,edx
10043b9c:	test   eax,eax
10043b9e:	jne    0x10043c08
10043ba0:	movzx  eax,BYTE PTR [ecx+0x1]
10043ba4:	movzx  edx,BYTE PTR [esi+0x1]
10043ba8:	sub    eax,edx
10043baa:	je     0x10043bbd
10043bac:	xor    edx,edx
10043bae:	test   eax,eax
10043bb0:	setg   dl
10043bb3:	lea    edx,[edx+edx*1-0x1]
10043bb7:	mov    eax,edx
10043bb9:	test   eax,eax
10043bbb:	jne    0x10043c08
10043bbd:	movzx  eax,BYTE PTR [ecx+0x2]
10043bc1:	movzx  ecx,BYTE PTR [esi+0x2]
10043bc5:	jmp    0x10043b65
10043bc7:	mov    ecx,DWORD PTR [ebp+0x8]
10043bca:	mov    esi,DWORD PTR [ebp+0xc]
10043bcd:	movzx  eax,BYTE PTR [ecx]
10043bd0:	movzx  edx,BYTE PTR [esi]
10043bd3:	sub    eax,edx
10043bd5:	je     0x10043be8
10043bd7:	xor    edx,edx
10043bd9:	test   eax,eax
10043bdb:	setg   dl
10043bde:	lea    edx,[edx+edx*1-0x1]
10043be2:	mov    eax,edx
10043be4:	test   eax,eax
10043be6:	jne    0x10043c08
10043be8:	movzx  eax,BYTE PTR [ecx+0x1]
10043bec:	movzx  ecx,BYTE PTR [esi+0x1]
10043bf0:	jmp    0x10043b65
10043bf5:	mov    eax,DWORD PTR [ebp+0x8]
10043bf8:	mov    ecx,DWORD PTR [ebp+0xc]
10043bfb:	movzx  eax,BYTE PTR [eax]
10043bfe:	movzx  ecx,BYTE PTR [ecx]
10043c01:	jmp    0x10043b65
10043c06:	xor    eax,eax
10043c08:	pop    edi
10043c09:	pop    esi
10043c0a:	pop    ebp
10043c0b:	ret    
10043c0c:	mov    edi,edi
10043c0e:	lods   eax,DWORD PTR ds:[esi]
10043c0f:	cs add al,0x10
10043c12:	lahf   
10043c13:	xor    al,BYTE PTR [eax+edx*1]
10043c16:	stos   DWORD PTR es:[edi],eax
10043c17:	ss add al,0x10
10043c1a:	int3   
10043c1b:	cmp    al,BYTE PTR [eax+edx*1]
10043c1e:	xor    BYTE PTR [esi],ch
10043c20:	add    al,0x10
10043c22:	adc    BYTE PTR [edx],dh
10043c24:	add    al,0x10
10043c26:	sbb    al,0x36
10043c28:	add    al,0x10
10043c2a:	cmp    eax,0xa110043a
10043c2f:	sub    eax,0x31801004
10043c34:	add    al,0x10
10043c36:	mov    WORD PTR ds:0x39ae1004,?
10043c3c:	add    al,0x10
10043c3e:	adc    DWORD PTR ds:0x30f11004,ebp
10043c44:	add    al,0x10
10043c46:	std    
10043c47:	xor    al,0x4
10043c49:	adc    BYTE PTR [esi],bl
10043c4b:	cmp    DWORD PTR [eax+edx*1],eax
10043c4e:	sub    BYTE PTR [esp+eax*1],0x10
10043c52:	bound  esi,QWORD PTR [eax]
10043c54:	add    al,0x10
10043c56:	outs   dx,BYTE PTR ds:[esi]
10043c57:	xor    al,0x4
10043c59:	adc    BYTE PTR [edi-0xceffbc8],cl
10043c5f:	sub    eax,DWORD PTR [eax+edx*1]
10043c62:	shr    DWORD PTR [edi],cl
10043c64:	add    al,0x10
10043c66:	fbstp  TBYTE PTR [ebx]
10043c68:	add    al,0x10
10043c6a:	add    BYTE PTR [eax],bh
10043c6c:	add    al,0x10
10043c6e:	sub    eax,DWORD PTR fs:[eax+edx*1]
10043c72:	inc    esp
10043c73:	das    
10043c74:	add    al,0x10
10043c76:	push   eax
10043c77:	xor    eax,DWORD PTR [eax+edx*1]
10043c7a:	jno    0x10043cb3
10043c7c:	add    al,0x10
10043c7e:	loope  0x10043caa
10043c80:	add    al,0x10
10043c82:	mov    ch,0x2e
10043c84:	add    al,0x10
10043c86:	shl    DWORD PTR [edx],0x4
10043c89:	adc    cl,ah
10043c8b:	ss add al,0x10
10043c8e:	push   0xc
10043c90:	push   0x10073180
10043c95:	call   0x100459e4
10043c9a:	and    DWORD PTR [ebp-0x1c],0x0
10043c9e:	mov    esi,DWORD PTR [ebp+0x8]
10043ca1:	cmp    esi,DWORD PTR ds:0x10081570
10043ca7:	ja     0x10043ccb
10043ca9:	push   0x4
10043cab:	call   0x100469ed
10043cb0:	pop    ecx
10043cb1:	and    DWORD PTR [ebp-0x4],0x0
10043cb5:	push   esi
10043cb6:	call   0x1004723a
10043cbb:	pop    ecx
10043cbc:	mov    DWORD PTR [ebp-0x1c],eax
10043cbf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10043cc6:	call   0x10043cd4
10043ccb:	mov    eax,DWORD PTR [ebp-0x1c]
10043cce:	call   0x10045a29
10043cd3:	ret    
10043cd4:	push   0x4
10043cd6:	call   0x10046915
10043cdb:	pop    ecx
10043cdc:	ret    
10043cdd:	push   ebp
10043cde:	mov    ebp,DWORD PTR [esp+0x8]
10043ce2:	cmp    ebp,0xffffffe0
10043ce5:	ja     0x10043d8a
10043ceb:	push   ebx
10043cec:	mov    ebx,DWORD PTR ds:0x1006518c
10043cf2:	push   esi
10043cf3:	push   edi
10043cf4:	xor    esi,esi
10043cf6:	cmp    DWORD PTR ds:0x1007ee18,esi
10043cfc:	mov    edi,ebp
10043cfe:	jne    0x10043d18
10043d00:	call   0x100476bd
10043d05:	push   0x1e
10043d07:	call   0x1004751d
10043d0c:	push   0xff
10043d11:	call   0x10046332
10043d16:	pop    ecx
10043d17:	pop    ecx
10043d18:	mov    eax,ds:0x10081580
10043d1d:	cmp    eax,0x1
10043d20:	jne    0x10043d30
10043d22:	cmp    ebp,esi
10043d24:	je     0x10043d2a
10043d26:	mov    eax,ebp
10043d28:	jmp    0x10043d2d
10043d2a:	xor    eax,eax
10043d2c:	inc    eax
10043d2d:	push   eax
10043d2e:	jmp    0x10043d4e
10043d30:	cmp    eax,0x3
10043d33:	jne    0x10043d40
10043d35:	push   ebp
10043d36:	call   0x10043c8e
10043d3b:	cmp    eax,esi
10043d3d:	pop    ecx
10043d3e:	jne    0x10043d57
10043d40:	cmp    ebp,esi
10043d42:	jne    0x10043d47
10043d44:	xor    edi,edi
10043d46:	inc    edi
10043d47:	add    edi,0xf
10043d4a:	and    edi,0xfffffff0
10043d4d:	push   edi
10043d4e:	push   esi
10043d4f:	push   DWORD PTR ds:0x1007ee18
10043d55:	call   ebx
10043d57:	mov    esi,eax
10043d59:	test   esi,esi
10043d5b:	jne    0x10043d83
10043d5d:	cmp    DWORD PTR ds:0x1007ef74,eax
10043d63:	push   0xc
10043d65:	pop    edi
10043d66:	je     0x10043d75
10043d68:	push   ebp
10043d69:	call   0x100466e2
10043d6e:	test   eax,eax
10043d70:	pop    ecx
10043d71:	jne    0x10043cf4
10043d73:	jmp    0x10043d7c
10043d75:	call   0x100458a5
10043d7a:	mov    DWORD PTR [eax],edi
10043d7c:	call   0x100458a5
10043d81:	mov    DWORD PTR [eax],edi
10043d83:	pop    edi
10043d84:	mov    eax,esi
10043d86:	pop    esi
10043d87:	pop    ebx
10043d88:	pop    ebp
10043d89:	ret    
10043d8a:	push   ebp
10043d8b:	call   0x100466e2
10043d90:	pop    ecx
10043d91:	call   0x100458a5
10043d96:	mov    DWORD PTR [eax],0xc
10043d9c:	xor    eax,eax
10043d9e:	pop    ebp
10043d9f:	ret    
10043da0:	push   ebp
10043da1:	mov    ebp,esp
10043da3:	sub    esp,0x5c
10043da6:	mov    eax,ds:0x1007d030
10043dab:	xor    eax,ebp
10043dad:	mov    DWORD PTR [ebp-0x4],eax
10043db0:	push   ebx
10043db1:	push   esi
10043db2:	push   edi
10043db3:	push   0x4
10043db5:	xor    edi,edi
10043db7:	pop    eax
10043db8:	mov    DWORD PTR [ebp-0x8],edi
10043dbb:	call   0x10047700
10043dc0:	mov    DWORD PTR [ebp-0x10],esp
10043dc3:	push   0x1c
10043dc5:	lea    eax,[ebp-0x38]
10043dc8:	push   eax
10043dc9:	push   DWORD PTR [ebp-0x10]
10043dcc:	call   DWORD PTR ds:0x100650f4
10043dd2:	test   eax,eax
10043dd4:	je     0x10043eb8
10043dda:	mov    eax,DWORD PTR [ebp-0x34]
10043ddd:	mov    DWORD PTR [ebp-0x18],eax
10043de0:	lea    eax,[ebp-0x5c]
10043de3:	push   eax
10043de4:	call   DWORD PTR ds:0x1006519c
10043dea:	mov    esi,DWORD PTR [ebp-0x58]
10043ded:	lea    eax,[ebp-0x8]
10043df0:	push   eax
10043df1:	mov    DWORD PTR [ebp-0x14],esi
10043df4:	xor    ebx,ebx
10043df6:	call   0x10046391
10043dfb:	test   eax,eax
10043dfd:	pop    ecx
10043dfe:	je     0x10043e0d
10043e00:	push   edi
10043e01:	push   edi
10043e02:	push   edi
10043e03:	push   edi
10043e04:	push   edi
10043e05:	call   0x10042190
10043e0a:	add    esp,0x14
10043e0d:	cmp    DWORD PTR [ebp-0x8],0x2
10043e11:	jne    0x10043e49
10043e13:	push   0x1006e494
10043e18:	call   DWORD PTR ds:0x10065198
10043e1e:	cmp    eax,edi
10043e20:	je     0x10043e49
10043e22:	push   0x100655c0
10043e27:	push   eax
10043e28:	call   DWORD PTR ds:0x1006512c
10043e2e:	cmp    eax,edi
10043e30:	je     0x10043e49
10043e32:	lea    ecx,[ebp-0xc]
10043e35:	push   ecx
10043e36:	mov    DWORD PTR [ebp-0xc],edi
10043e39:	call   eax
10043e3b:	cmp    eax,0x1
10043e3e:	pop    ecx
10043e3f:	jne    0x10043e49
10043e41:	cmp    DWORD PTR [ebp-0xc],edi
10043e44:	jbe    0x10043e49
10043e46:	mov    ebx,DWORD PTR [ebp-0xc]
10043e49:	mov    edi,DWORD PTR [ebp-0x8]
10043e4c:	dec    edi
10043e4d:	neg    edi
10043e4f:	sbb    edi,edi
10043e51:	and    edi,0x103
10043e57:	lea    eax,[esi-0x1]
10043e5a:	lea    ebx,[ebx+esi*1-0x1]
10043e5e:	not    eax
10043e60:	inc    edi
10043e61:	and    ebx,eax
10043e63:	je     0x10043e67
10043e65:	add    ebx,esi
10043e67:	lea    eax,[esi+esi*1]
10043e6a:	cmp    ebx,eax
10043e6c:	jae    0x10043e70
10043e6e:	mov    ebx,eax
10043e70:	dec    esi
10043e71:	not    esi
10043e73:	and    esi,DWORD PTR [ebp-0x10]
10043e76:	sub    esi,ebx
10043e78:	cmp    DWORD PTR [ebp-0x8],0x1
10043e7c:	jne    0x10043e83
10043e7e:	push   0x11
10043e80:	pop    eax
10043e81:	jmp    0x10043e86
10043e83:	mov    eax,DWORD PTR [ebp-0x14]
10043e86:	mov    ecx,DWORD PTR [ebp-0x18]
10043e89:	add    eax,ecx
10043e8b:	cmp    esi,eax
10043e8d:	jb     0x10043eb8
10043e8f:	push   0x4
10043e91:	push   0x1000
10043e96:	push   ebx
10043e97:	push   esi
10043e98:	call   DWORD PTR ds:0x10065194
10043e9e:	test   eax,eax
10043ea0:	je     0x10043eb8
10043ea2:	lea    eax,[ebp-0x1c]
10043ea5:	push   eax
10043ea6:	push   edi
10043ea7:	push   ebx
10043ea8:	push   esi
10043ea9:	call   DWORD PTR ds:0x10065190
10043eaf:	test   eax,eax
10043eb1:	je     0x10043eb8
10043eb3:	xor    eax,eax
10043eb5:	inc    eax
10043eb6:	jmp    0x10043eba
10043eb8:	xor    eax,eax
10043eba:	lea    esp,[ebp-0x68]
10043ebd:	pop    edi
10043ebe:	pop    esi
10043ebf:	pop    ebx
10043ec0:	mov    ecx,DWORD PTR [ebp-0x4]
10043ec3:	xor    ecx,ebp
10043ec5:	call   0x10041d97
10043eca:	leave  
10043ecb:	ret    
10043ecc:	int3   
10043ecd:	int3   
10043ece:	int3   
10043ecf:	int3   
10043ed0:	push   ebp
10043ed1:	mov    ebp,esp
10043ed3:	push   edi
10043ed4:	push   esi
10043ed5:	mov    esi,DWORD PTR [ebp+0xc]
10043ed8:	mov    ecx,DWORD PTR [ebp+0x10]
10043edb:	mov    edi,DWORD PTR [ebp+0x8]
10043ede:	mov    eax,ecx
10043ee0:	mov    edx,ecx
10043ee2:	add    eax,esi
10043ee4:	cmp    edi,esi
10043ee6:	jbe    0x10043ef0
10043ee8:	cmp    edi,eax
10043eea:	jb     0x10044094
10043ef0:	cmp    ecx,0x100
10043ef6:	jb     0x10043f17
10043ef8:	cmp    DWORD PTR ds:0x10081564,0x0
10043eff:	je     0x10043f17
10043f01:	push   edi
10043f02:	push   esi
10043f03:	and    edi,0xf
10043f06:	and    esi,0xf
10043f09:	cmp    edi,esi
10043f0b:	pop    esi
10043f0c:	pop    edi
10043f0d:	jne    0x10043f17
10043f0f:	pop    esi
10043f10:	pop    edi
10043f11:	pop    ebp
10043f12:	jmp    0x100477b2
10043f17:	test   edi,0x3
10043f1d:	jne    0x10043f34
10043f1f:	shr    ecx,0x2
10043f22:	and    edx,0x3
10043f25:	cmp    ecx,0x8
10043f28:	jb     0x10043f54
10043f2a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10043f2c:	jmp    DWORD PTR [edx*4+0x10044044]
10043f33:	nop
10043f34:	mov    eax,edi
10043f36:	mov    edx,0x3
10043f3b:	sub    ecx,0x4
10043f3e:	jb     0x10043f4c
10043f40:	and    eax,0x3
10043f43:	add    ecx,eax
10043f45:	jmp    DWORD PTR [eax*4+0x10043f58]
10043f4c:	jmp    DWORD PTR [ecx*4+0x10044054]
10043f53:	nop
10043f54:	jmp    DWORD PTR [ecx*4+0x10043fd8]
10043f5b:	nop
10043f5c:	push   0x9410043f
10043f61:	aas    
10043f62:	add    al,0x10
10043f64:	mov    eax,0x2310043f
10043f69:	ror    DWORD PTR [edx-0x75f877fa],1
10043f6f:	inc    esi
10043f70:	add    DWORD PTR [eax+0x468a0147],ecx
10043f76:	add    al,cl
10043f78:	jmp    0x124bc77f
10043f7d:	add    esi,0x3
10043f80:	add    edi,0x3
10043f83:	cmp    ecx,0x8
10043f86:	jb     0x10043f54
10043f88:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10043f8a:	jmp    DWORD PTR [edx*4+0x10044044]
10043f91:	lea    ecx,[ecx+0x0]
10043f94:	and    edx,ecx
10043f96:	mov    al,BYTE PTR [esi]
10043f98:	mov    BYTE PTR [edi],al
10043f9a:	mov    al,BYTE PTR [esi+0x1]
10043f9d:	shr    ecx,0x2
10043fa0:	mov    BYTE PTR [edi+0x1],al
10043fa3:	add    esi,0x2
10043fa6:	add    edi,0x2
10043fa9:	cmp    ecx,0x8
10043fac:	jb     0x10043f54
10043fae:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10043fb0:	jmp    DWORD PTR [edx*4+0x10044044]
10043fb7:	nop
10043fb8:	and    edx,ecx
10043fba:	mov    al,BYTE PTR [esi]
10043fbc:	mov    BYTE PTR [edi],al
10043fbe:	add    esi,0x1
10043fc1:	shr    ecx,0x2
10043fc4:	add    edi,0x1
10043fc7:	cmp    ecx,0x8
10043fca:	jb     0x10043f54
10043fcc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10043fce:	jmp    DWORD PTR [edx*4+0x10044044]
10043fd5:	lea    ecx,[ecx+0x0]
10043fd8:	cmp    eax,DWORD PTR [eax+0x4]
10043fdb:	adc    BYTE PTR [eax],ch
10043fdd:	inc    eax
10043fde:	add    al,0x10
10043fe0:	and    BYTE PTR [eax+0x4],al
10043fe3:	adc    BYTE PTR [eax],bl
10043fe5:	inc    eax
10043fe6:	add    al,0x10
10043fe8:	adc    BYTE PTR [eax+0x4],al
10043feb:	adc    BYTE PTR [eax],cl
10043fed:	inc    eax
10043fee:	add    al,0x10
10043ff0:	add    BYTE PTR [eax+0x4],al
10043ff3:	adc    al,bh
10043ff5:	aas    
10043ff6:	add    al,0x10
10043ff8:	mov    eax,DWORD PTR [esi+ecx*4-0x1c]
10043ffc:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
10044000:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
10044004:	mov    DWORD PTR [edi+ecx*4-0x18],eax
10044008:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
1004400c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
10044010:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
10044014:	mov    DWORD PTR [edi+ecx*4-0x10],eax
10044018:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
1004401c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
10044020:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
10044024:	mov    DWORD PTR [edi+ecx*4-0x8],eax
10044028:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
1004402c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
10044030:	lea    eax,[ecx*4+0x0]
10044037:	add    esi,eax
10044039:	add    edi,eax
1004403b:	jmp    DWORD PTR [edx*4+0x10044044]
10044042:	mov    edi,edi
10044044:	push   esp
10044045:	inc    eax
10044046:	add    al,0x10
10044048:	pop    esp
10044049:	inc    eax
1004404a:	add    al,0x10
1004404c:	push   0x7c100440
10044051:	inc    eax
10044052:	add    al,0x10
10044054:	mov    eax,DWORD PTR [ebp+0x8]
10044057:	pop    esi
10044058:	pop    edi
10044059:	leave  
1004405a:	ret    
1004405b:	nop
1004405c:	mov    al,BYTE PTR [esi]
1004405e:	mov    BYTE PTR [edi],al
10044060:	mov    eax,DWORD PTR [ebp+0x8]
10044063:	pop    esi
10044064:	pop    edi
10044065:	leave  
10044066:	ret    
10044067:	nop
10044068:	mov    al,BYTE PTR [esi]
1004406a:	mov    BYTE PTR [edi],al
1004406c:	mov    al,BYTE PTR [esi+0x1]
1004406f:	mov    BYTE PTR [edi+0x1],al
10044072:	mov    eax,DWORD PTR [ebp+0x8]
10044075:	pop    esi
10044076:	pop    edi
10044077:	leave  
10044078:	ret    
10044079:	lea    ecx,[ecx+0x0]
1004407c:	mov    al,BYTE PTR [esi]
1004407e:	mov    BYTE PTR [edi],al
10044080:	mov    al,BYTE PTR [esi+0x1]
10044083:	mov    BYTE PTR [edi+0x1],al
10044086:	mov    al,BYTE PTR [esi+0x2]
10044089:	mov    BYTE PTR [edi+0x2],al
1004408c:	mov    eax,DWORD PTR [ebp+0x8]
1004408f:	pop    esi
10044090:	pop    edi
10044091:	leave  
10044092:	ret    
10044093:	nop
10044094:	lea    esi,[ecx+esi*1-0x4]
10044098:	lea    edi,[ecx+edi*1-0x4]
1004409c:	test   edi,0x3
100440a2:	jne    0x100440c8
100440a4:	shr    ecx,0x2
100440a7:	and    edx,0x3
100440aa:	cmp    ecx,0x8
100440ad:	jb     0x100440bc
100440af:	std    
100440b0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100440b2:	cld    
100440b3:	jmp    DWORD PTR [edx*4+0x100441e0]
100440ba:	mov    edi,edi
100440bc:	neg    ecx
100440be:	jmp    DWORD PTR [ecx*4+0x10044190]
100440c5:	lea    ecx,[ecx+0x0]
100440c8:	mov    eax,edi
100440ca:	mov    edx,0x3
100440cf:	cmp    ecx,0x4
100440d2:	jb     0x100440e0
100440d4:	and    eax,0x3
100440d7:	sub    ecx,eax
100440d9:	jmp    DWORD PTR [eax*4+0x100440e4]
100440e0:	jmp    DWORD PTR [ecx*4+0x100441e0]
100440e7:	nop
100440e8:	hlt    
100440e9:	inc    eax
100440ea:	add    al,0x10
100440ec:	sbb    BYTE PTR [ecx+0x4],al
100440ef:	adc    BYTE PTR [eax+0x41],al
100440f2:	add    al,0x10
100440f4:	mov    al,BYTE PTR [esi+0x3]
100440f7:	and    edx,ecx
100440f9:	mov    BYTE PTR [edi+0x3],al
100440fc:	sub    esi,0x1
100440ff:	shr    ecx,0x2
10044102:	sub    edi,0x1
10044105:	cmp    ecx,0x8
10044108:	jb     0x100440bc
1004410a:	std    
1004410b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004410d:	cld    
1004410e:	jmp    DWORD PTR [edx*4+0x100441e0]
10044115:	lea    ecx,[ecx+0x0]
10044118:	mov    al,BYTE PTR [esi+0x3]
1004411b:	and    edx,ecx
1004411d:	mov    BYTE PTR [edi+0x3],al
10044120:	mov    al,BYTE PTR [esi+0x2]
10044123:	shr    ecx,0x2
10044126:	mov    BYTE PTR [edi+0x2],al
10044129:	sub    esi,0x2
1004412c:	sub    edi,0x2
1004412f:	cmp    ecx,0x8
10044132:	jb     0x100440bc
10044134:	std    
10044135:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10044137:	cld    
10044138:	jmp    DWORD PTR [edx*4+0x100441e0]
1004413f:	nop
10044140:	mov    al,BYTE PTR [esi+0x3]
10044143:	and    edx,ecx
10044145:	mov    BYTE PTR [edi+0x3],al
10044148:	mov    al,BYTE PTR [esi+0x2]
1004414b:	mov    BYTE PTR [edi+0x2],al
1004414e:	mov    al,BYTE PTR [esi+0x1]
10044151:	shr    ecx,0x2
10044154:	mov    BYTE PTR [edi+0x1],al
10044157:	sub    esi,0x3
1004415a:	sub    edi,0x3
1004415d:	cmp    ecx,0x8
10044160:	jb     0x100440bc
10044166:	std    
10044167:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10044169:	cld    
1004416a:	jmp    DWORD PTR [edx*4+0x100441e0]
10044171:	lea    ecx,[ecx+0x0]
10044174:	xchg   esp,eax
10044175:	inc    ecx
10044176:	add    al,0x10
10044178:	pushf  
10044179:	inc    ecx
1004417a:	add    al,0x10
1004417c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
1004417d:	inc    ecx
1004417e:	add    al,0x10
10044180:	lods   al,BYTE PTR ds:[esi]
10044181:	inc    ecx
10044182:	add    al,0x10
10044184:	mov    ah,0x41
10044186:	add    al,0x10
10044188:	mov    esp,0xc4100441
1004418d:	inc    ecx
1004418e:	add    al,0x10
10044190:	xlat   BYTE PTR ds:[ebx]
10044191:	inc    ecx
10044192:	add    al,0x10
10044194:	mov    eax,DWORD PTR [esi+ecx*4+0x1c]
10044198:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
1004419c:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
100441a0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
100441a4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
100441a8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
100441ac:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
100441b0:	mov    DWORD PTR [edi+ecx*4+0x10],eax
100441b4:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
100441b8:	mov    DWORD PTR [edi+ecx*4+0xc],eax
100441bc:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
100441c0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
100441c4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
100441c8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
100441cc:	lea    eax,[ecx*4+0x0]
100441d3:	add    esi,eax
100441d5:	add    edi,eax
100441d7:	jmp    DWORD PTR [edx*4+0x100441e0]
100441de:	mov    edi,edi
100441e0:	lock inc ecx
100441e2:	add    al,0x10
100441e4:	clc    
100441e5:	inc    ecx
100441e6:	add    al,0x10
100441e8:	or     BYTE PTR [edx+0x4],al
100441eb:	adc    BYTE PTR [edx+eax*2],bl
100441ee:	add    al,0x10
100441f0:	mov    eax,DWORD PTR [ebp+0x8]
100441f3:	pop    esi
100441f4:	pop    edi
100441f5:	leave  
100441f6:	ret    
100441f7:	nop
100441f8:	mov    al,BYTE PTR [esi+0x3]
100441fb:	mov    BYTE PTR [edi+0x3],al
100441fe:	mov    eax,DWORD PTR [ebp+0x8]
10044201:	pop    esi
10044202:	pop    edi
10044203:	leave  
10044204:	ret    
10044205:	lea    ecx,[ecx+0x0]
10044208:	mov    al,BYTE PTR [esi+0x3]
1004420b:	mov    BYTE PTR [edi+0x3],al
1004420e:	mov    al,BYTE PTR [esi+0x2]
10044211:	mov    BYTE PTR [edi+0x2],al
10044214:	mov    eax,DWORD PTR [ebp+0x8]
10044217:	pop    esi
10044218:	pop    edi
10044219:	leave  
1004421a:	ret    
1004421b:	nop
1004421c:	mov    al,BYTE PTR [esi+0x3]
1004421f:	mov    BYTE PTR [edi+0x3],al
10044222:	mov    al,BYTE PTR [esi+0x2]
10044225:	mov    BYTE PTR [edi+0x2],al
10044228:	mov    al,BYTE PTR [esi+0x1]
1004422b:	mov    BYTE PTR [edi+0x1],al
1004422e:	mov    eax,DWORD PTR [ebp+0x8]
10044231:	pop    esi
10044232:	pop    edi
10044233:	leave  
10044234:	ret    
10044235:	mov    eax,DWORD PTR [esp+0x4]
10044239:	test   eax,eax
1004423b:	push   esi
1004423c:	mov    esi,ecx
1004423e:	mov    BYTE PTR [esi+0xc],0x0
10044242:	jne    0x100442a7
10044244:	call   0x10045e4c
10044249:	mov    DWORD PTR [esi+0x8],eax
1004424c:	mov    ecx,DWORD PTR [eax+0x6c]
1004424f:	mov    DWORD PTR [esi],ecx
10044251:	mov    ecx,DWORD PTR [eax+0x68]
10044254:	mov    DWORD PTR [esi+0x4],ecx
10044257:	mov    ecx,DWORD PTR [esi]
10044259:	cmp    ecx,DWORD PTR ds:0x1007d9a8
1004425f:	je     0x10044273
10044261:	mov    ecx,DWORD PTR ds:0x1007d8c4
10044267:	test   DWORD PTR [eax+0x70],ecx
1004426a:	jne    0x10044273
1004426c:	call   0x100481c8
10044271:	mov    DWORD PTR [esi],eax
10044273:	mov    eax,DWORD PTR [esi+0x4]
10044276:	cmp    eax,DWORD PTR ds:0x1007d7c8
1004427c:	je     0x10044294
1004427e:	mov    eax,DWORD PTR [esi+0x8]
10044281:	mov    ecx,DWORD PTR ds:0x1007d8c4
10044287:	test   DWORD PTR [eax+0x70],ecx
1004428a:	jne    0x10044294
1004428c:	call   0x10047ab7
10044291:	mov    DWORD PTR [esi+0x4],eax
10044294:	mov    eax,DWORD PTR [esi+0x8]
10044297:	test   BYTE PTR [eax+0x70],0x2
1004429b:	jne    0x100442b1
1004429d:	or     DWORD PTR [eax+0x70],0x2
100442a1:	mov    BYTE PTR [esi+0xc],0x1
100442a5:	jmp    0x100442b1
100442a7:	mov    ecx,DWORD PTR [eax]
100442a9:	mov    DWORD PTR [esi],ecx
100442ab:	mov    eax,DWORD PTR [eax+0x4]
100442ae:	mov    DWORD PTR [esi+0x4],eax
100442b1:	mov    eax,esi
100442b3:	pop    esi
100442b4:	ret    0x4
100442b7:	mov    edx,DWORD PTR [esp+0x8]
100442bb:	push   esi
100442bc:	mov    esi,DWORD PTR [esp+0x8]
100442c0:	push   edi
100442c1:	movzx  eax,BYTE PTR [esi]
100442c4:	lea    ecx,[eax-0x41]
100442c7:	inc    esi
100442c8:	cmp    ecx,0x19
100442cb:	ja     0x100442d0
100442cd:	add    eax,0x20
100442d0:	movzx  ecx,BYTE PTR [edx]
100442d3:	lea    edi,[ecx-0x41]
100442d6:	inc    edx
100442d7:	cmp    edi,0x19
100442da:	ja     0x100442df
100442dc:	add    ecx,0x20
100442df:	test   eax,eax
100442e1:	je     0x100442e7
100442e3:	cmp    eax,ecx
100442e5:	je     0x100442c1
100442e7:	pop    edi
100442e8:	sub    eax,ecx
100442ea:	pop    esi
100442eb:	ret    
100442ec:	push   ebp
100442ed:	mov    ebp,esp
100442ef:	sub    esp,0x10
100442f2:	push   ebx
100442f3:	push   DWORD PTR [ebp+0x10]
100442f6:	lea    ecx,[ebp-0x10]
100442f9:	call   0x10044235
100442fe:	xor    ebx,ebx
10044300:	cmp    DWORD PTR [ebp+0x8],ebx
10044303:	jne    0x10044333
10044305:	call   0x100458a5
1004430a:	push   ebx
1004430b:	push   ebx
1004430c:	push   ebx
1004430d:	push   ebx
1004430e:	push   ebx
1004430f:	mov    DWORD PTR [eax],0x16
10044315:	call   0x1004228c
1004431a:	add    esp,0x14
1004431d:	cmp    BYTE PTR [ebp-0x4],bl
10044320:	je     0x10044329
10044322:	mov    eax,DWORD PTR [ebp-0x8]
10044325:	and    DWORD PTR [eax+0x70],0xfffffffd
10044329:	mov    eax,0x7fffffff
1004432e:	jmp    0x100443bc
10044333:	push   edi
10044334:	mov    edi,DWORD PTR [ebp+0xc]
10044337:	cmp    edi,ebx
10044339:	jne    0x10044366
1004433b:	call   0x100458a5
10044340:	push   ebx
10044341:	push   ebx
10044342:	push   ebx
10044343:	push   ebx
10044344:	push   ebx
10044345:	mov    DWORD PTR [eax],0x16
1004434b:	call   0x1004228c
10044350:	add    esp,0x14
10044353:	cmp    BYTE PTR [ebp-0x4],bl
10044356:	je     0x1004435f
10044358:	mov    eax,DWORD PTR [ebp-0x8]
1004435b:	and    DWORD PTR [eax+0x70],0xfffffffd
1004435f:	mov    eax,0x7fffffff
10044364:	jmp    0x100443bb
10044366:	mov    eax,DWORD PTR [ebp-0x10]
10044369:	cmp    DWORD PTR [eax+0x14],ebx
1004436c:	jne    0x1004437b
1004436e:	push   edi
1004436f:	push   DWORD PTR [ebp+0x8]
10044372:	call   0x100442b7
10044377:	pop    ecx
10044378:	pop    ecx
10044379:	jmp    0x100443af
1004437b:	push   esi
1004437c:	mov    eax,DWORD PTR [ebp+0x8]
1004437f:	movzx  eax,BYTE PTR [eax]
10044382:	lea    ecx,[ebp-0x10]
10044385:	push   ecx
10044386:	push   eax
10044387:	call   0x10044a0a
1004438c:	inc    DWORD PTR [ebp+0x8]
1004438f:	mov    esi,eax
10044391:	movzx  eax,BYTE PTR [edi]
10044394:	lea    ecx,[ebp-0x10]
10044397:	push   ecx
10044398:	push   eax
10044399:	call   0x10044a0a
1004439e:	add    esp,0x10
100443a1:	inc    edi
100443a2:	cmp    esi,ebx
100443a4:	je     0x100443aa
100443a6:	cmp    esi,eax
100443a8:	je     0x1004437c
100443aa:	sub    esi,eax
100443ac:	mov    eax,esi
100443ae:	pop    esi
100443af:	cmp    BYTE PTR [ebp-0x4],bl
100443b2:	je     0x100443bb
100443b4:	mov    ecx,DWORD PTR [ebp-0x8]
100443b7:	and    DWORD PTR [ecx+0x70],0xfffffffd
100443bb:	pop    edi
100443bc:	pop    ebx
100443bd:	leave  
100443be:	ret    
100443bf:	push   ebp
100443c0:	mov    ebp,esp
100443c2:	push   esi
100443c3:	xor    esi,esi
100443c5:	cmp    DWORD PTR ds:0x1007f2a8,esi
100443cb:	jne    0x100443fd
100443cd:	cmp    DWORD PTR [ebp+0x8],esi
100443d0:	jne    0x100443f1
100443d2:	call   0x100458a5
100443d7:	push   esi
100443d8:	push   esi
100443d9:	push   esi
100443da:	push   esi
100443db:	push   esi
100443dc:	mov    DWORD PTR [eax],0x16
100443e2:	call   0x1004228c
100443e7:	add    esp,0x14
100443ea:	mov    eax,0x7fffffff
100443ef:	jmp    0x1004440c
100443f1:	cmp    DWORD PTR [ebp+0xc],esi
100443f4:	je     0x100443d2
100443f6:	pop    esi
100443f7:	pop    ebp
100443f8:	jmp    0x100442b7
100443fd:	push   esi
100443fe:	push   DWORD PTR [ebp+0xc]
10044401:	push   DWORD PTR [ebp+0x8]
10044404:	call   0x100442ec
10044409:	add    esp,0xc
1004440c:	pop    esi
1004440d:	pop    ebp
1004440e:	ret    
1004440f:	int3   
10044410:	push   ebp
10044411:	mov    ebp,esp
10044413:	push   edi
10044414:	push   esi
10044415:	mov    esi,DWORD PTR [ebp+0xc]
10044418:	mov    ecx,DWORD PTR [ebp+0x10]
1004441b:	mov    edi,DWORD PTR [ebp+0x8]
1004441e:	mov    eax,ecx
10044420:	mov    edx,ecx
10044422:	add    eax,esi
10044424:	cmp    edi,esi
10044426:	jbe    0x10044430
10044428:	cmp    edi,eax
1004442a:	jb     0x100445d4
10044430:	cmp    ecx,0x100
10044436:	jb     0x10044457
10044438:	cmp    DWORD PTR ds:0x10081564,0x0
1004443f:	je     0x10044457
10044441:	push   edi
10044442:	push   esi
10044443:	and    edi,0xf
10044446:	and    esi,0xf
10044449:	cmp    edi,esi
1004444b:	pop    esi
1004444c:	pop    edi
1004444d:	jne    0x10044457
1004444f:	pop    esi
10044450:	pop    edi
10044451:	pop    ebp
10044452:	jmp    0x100477b2
10044457:	test   edi,0x3
1004445d:	jne    0x10044474
1004445f:	shr    ecx,0x2
10044462:	and    edx,0x3
10044465:	cmp    ecx,0x8
10044468:	jb     0x10044494
1004446a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004446c:	jmp    DWORD PTR [edx*4+0x10044584]
10044473:	nop
10044474:	mov    eax,edi
10044476:	mov    edx,0x3
1004447b:	sub    ecx,0x4
1004447e:	jb     0x1004448c
10044480:	and    eax,0x3
10044483:	add    ecx,eax
10044485:	jmp    DWORD PTR [eax*4+0x10044498]
1004448c:	jmp    DWORD PTR [ecx*4+0x10044594]
10044493:	nop
10044494:	jmp    DWORD PTR [ecx*4+0x10044518]
1004449b:	nop
1004449c:	test   al,0x44
1004449e:	add    al,0x10
100444a0:	aam    0x44
100444a2:	add    al,0x10
100444a4:	clc    
100444a5:	inc    esp
100444a6:	add    al,0x10
100444a8:	and    edx,ecx
100444aa:	mov    al,BYTE PTR [esi]
100444ac:	mov    BYTE PTR [edi],al
100444ae:	mov    al,BYTE PTR [esi+0x1]
100444b1:	mov    BYTE PTR [edi+0x1],al
100444b4:	mov    al,BYTE PTR [esi+0x2]
100444b7:	shr    ecx,0x2
100444ba:	mov    BYTE PTR [edi+0x2],al
100444bd:	add    esi,0x3
100444c0:	add    edi,0x3
100444c3:	cmp    ecx,0x8
100444c6:	jb     0x10044494
100444c8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100444ca:	jmp    DWORD PTR [edx*4+0x10044584]
100444d1:	lea    ecx,[ecx+0x0]
100444d4:	and    edx,ecx
100444d6:	mov    al,BYTE PTR [esi]
100444d8:	mov    BYTE PTR [edi],al
100444da:	mov    al,BYTE PTR [esi+0x1]
100444dd:	shr    ecx,0x2
100444e0:	mov    BYTE PTR [edi+0x1],al
100444e3:	add    esi,0x2
100444e6:	add    edi,0x2
100444e9:	cmp    ecx,0x8
100444ec:	jb     0x10044494
100444ee:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100444f0:	jmp    DWORD PTR [edx*4+0x10044584]
100444f7:	nop
100444f8:	and    edx,ecx
100444fa:	mov    al,BYTE PTR [esi]
100444fc:	mov    BYTE PTR [edi],al
100444fe:	add    esi,0x1
10044501:	shr    ecx,0x2
10044504:	add    edi,0x1
10044507:	cmp    ecx,0x8
1004450a:	jb     0x10044494
1004450c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004450e:	jmp    DWORD PTR [edx*4+0x10044584]
10044515:	lea    ecx,[ecx+0x0]
10044518:	jnp    0x1004455f
1004451a:	add    al,0x10
1004451c:	push   0x60100445
10044521:	inc    ebp
10044522:	add    al,0x10
10044524:	pop    eax
10044525:	inc    ebp
10044526:	add    al,0x10
10044528:	push   eax
10044529:	inc    ebp
1004452a:	add    al,0x10
1004452c:	dec    eax
1004452d:	inc    ebp
1004452e:	add    al,0x10
10044530:	inc    eax
10044531:	inc    ebp
10044532:	add    al,0x10
10044534:	cmp    BYTE PTR [ebp+0x4],al
10044537:	adc    BYTE PTR [ebx-0x761b71bc],cl
1004453d:	inc    esp
1004453e:	(bad)  
1004453f:	in     al,0x8b
10044541:	inc    esp
10044542:	mov    gs,eax
10044544:	mov    DWORD PTR [edi+ecx*4-0x18],eax
10044548:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
1004454c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
10044550:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
10044554:	mov    DWORD PTR [edi+ecx*4-0x10],eax
10044558:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
1004455c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
10044560:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
10044564:	mov    DWORD PTR [edi+ecx*4-0x8],eax
10044568:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
1004456c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
10044570:	lea    eax,[ecx*4+0x0]
10044577:	add    esi,eax
10044579:	add    edi,eax
1004457b:	jmp    DWORD PTR [edx*4+0x10044584]
10044582:	mov    edi,edi
10044584:	xchg   esp,eax
10044585:	inc    ebp
10044586:	add    al,0x10
10044588:	pushf  
10044589:	inc    ebp
1004458a:	add    al,0x10
1004458c:	test   al,0x45
1004458e:	add    al,0x10
10044590:	mov    esp,0x8b100445
10044595:	inc    ebp
10044596:	or     BYTE PTR [esi+0x5f],bl
10044599:	leave  
1004459a:	ret    
1004459b:	nop
1004459c:	mov    al,BYTE PTR [esi]
1004459e:	mov    BYTE PTR [edi],al
100445a0:	mov    eax,DWORD PTR [ebp+0x8]
100445a3:	pop    esi
100445a4:	pop    edi
100445a5:	leave  
100445a6:	ret    
100445a7:	nop
100445a8:	mov    al,BYTE PTR [esi]
100445aa:	mov    BYTE PTR [edi],al
100445ac:	mov    al,BYTE PTR [esi+0x1]
100445af:	mov    BYTE PTR [edi+0x1],al
100445b2:	mov    eax,DWORD PTR [ebp+0x8]
100445b5:	pop    esi
100445b6:	pop    edi
100445b7:	leave  
100445b8:	ret    
100445b9:	lea    ecx,[ecx+0x0]
100445bc:	mov    al,BYTE PTR [esi]
100445be:	mov    BYTE PTR [edi],al
100445c0:	mov    al,BYTE PTR [esi+0x1]
100445c3:	mov    BYTE PTR [edi+0x1],al
100445c6:	mov    al,BYTE PTR [esi+0x2]
100445c9:	mov    BYTE PTR [edi+0x2],al
100445cc:	mov    eax,DWORD PTR [ebp+0x8]
100445cf:	pop    esi
100445d0:	pop    edi
100445d1:	leave  
100445d2:	ret    
100445d3:	nop
100445d4:	lea    esi,[ecx+esi*1-0x4]
100445d8:	lea    edi,[ecx+edi*1-0x4]
100445dc:	test   edi,0x3
100445e2:	jne    0x10044608
100445e4:	shr    ecx,0x2
100445e7:	and    edx,0x3
100445ea:	cmp    ecx,0x8
100445ed:	jb     0x100445fc
100445ef:	std    
100445f0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100445f2:	cld    
100445f3:	jmp    DWORD PTR [edx*4+0x10044720]
100445fa:	mov    edi,edi
100445fc:	neg    ecx
100445fe:	jmp    DWORD PTR [ecx*4+0x100446d0]
10044605:	lea    ecx,[ecx+0x0]
10044608:	mov    eax,edi
1004460a:	mov    edx,0x3
1004460f:	cmp    ecx,0x4
10044612:	jb     0x10044620
10044614:	and    eax,0x3
10044617:	sub    ecx,eax
10044619:	jmp    DWORD PTR [eax*4+0x10044624]
10044620:	jmp    DWORD PTR [ecx*4+0x10044720]
10044627:	nop
10044628:	xor    al,0x46
1004462a:	add    al,0x10
1004462c:	pop    eax
1004462d:	inc    esi
1004462e:	add    al,0x10
10044630:	add    BYTE PTR [esi+0x4],0x10
10044634:	mov    al,BYTE PTR [esi+0x3]
10044637:	and    edx,ecx
10044639:	mov    BYTE PTR [edi+0x3],al
1004463c:	sub    esi,0x1
1004463f:	shr    ecx,0x2
10044642:	sub    edi,0x1
10044645:	cmp    ecx,0x8
10044648:	jb     0x100445fc
1004464a:	std    
1004464b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004464d:	cld    
1004464e:	jmp    DWORD PTR [edx*4+0x10044720]
10044655:	lea    ecx,[ecx+0x0]
10044658:	mov    al,BYTE PTR [esi+0x3]
1004465b:	and    edx,ecx
1004465d:	mov    BYTE PTR [edi+0x3],al
10044660:	mov    al,BYTE PTR [esi+0x2]
10044663:	shr    ecx,0x2
10044666:	mov    BYTE PTR [edi+0x2],al
10044669:	sub    esi,0x2
1004466c:	sub    edi,0x2
1004466f:	cmp    ecx,0x8
10044672:	jb     0x100445fc
10044674:	std    
10044675:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10044677:	cld    
10044678:	jmp    DWORD PTR [edx*4+0x10044720]
1004467f:	nop
10044680:	mov    al,BYTE PTR [esi+0x3]
10044683:	and    edx,ecx
10044685:	mov    BYTE PTR [edi+0x3],al
10044688:	mov    al,BYTE PTR [esi+0x2]
1004468b:	mov    BYTE PTR [edi+0x2],al
1004468e:	mov    al,BYTE PTR [esi+0x1]
10044691:	shr    ecx,0x2
10044694:	mov    BYTE PTR [edi+0x1],al
10044697:	sub    esi,0x3
1004469a:	sub    edi,0x3
1004469d:	cmp    ecx,0x8
100446a0:	jb     0x100445fc
100446a6:	std    
100446a7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100446a9:	cld    
100446aa:	jmp    DWORD PTR [edx*4+0x10044720]
100446b1:	lea    ecx,[ecx+0x0]
100446b4:	aam    0x46
100446b6:	add    al,0x10
100446b8:	fadd   QWORD PTR [esi+0x4]
100446bb:	adc    ah,ah
100446bd:	inc    esi
100446be:	add    al,0x10
100446c0:	in     al,dx
100446c1:	inc    esi
100446c2:	add    al,0x10
100446c4:	hlt    
100446c5:	inc    esi
100446c6:	add    al,0x10
100446c8:	cld    
100446c9:	inc    esi
100446ca:	add    al,0x10
100446cc:	add    al,0x47
100446ce:	add    al,0x10
100446d0:	pop    ss
100446d1:	inc    edi
100446d2:	add    al,0x10
100446d4:	mov    eax,DWORD PTR [esi+ecx*4+0x1c]
100446d8:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
100446dc:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
100446e0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
100446e4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
100446e8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
100446ec:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
100446f0:	mov    DWORD PTR [edi+ecx*4+0x10],eax
100446f4:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
100446f8:	mov    DWORD PTR [edi+ecx*4+0xc],eax
100446fc:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
10044700:	mov    DWORD PTR [edi+ecx*4+0x8],eax
10044704:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
10044708:	mov    DWORD PTR [edi+ecx*4+0x4],eax
1004470c:	lea    eax,[ecx*4+0x0]
10044713:	add    esi,eax
10044715:	add    edi,eax
10044717:	jmp    DWORD PTR [edx*4+0x10044720]
1004471e:	mov    edi,edi
10044720:	xor    BYTE PTR [edi+0x4],al
10044723:	adc    BYTE PTR [eax],bh
10044725:	inc    edi
10044726:	add    al,0x10
10044728:	dec    eax
10044729:	inc    edi
1004472a:	add    al,0x10
1004472c:	pop    esp
1004472d:	inc    edi
1004472e:	add    al,0x10
10044730:	mov    eax,DWORD PTR [ebp+0x8]
10044733:	pop    esi
10044734:	pop    edi
10044735:	leave  
10044736:	ret    
10044737:	nop
10044738:	mov    al,BYTE PTR [esi+0x3]
1004473b:	mov    BYTE PTR [edi+0x3],al
1004473e:	mov    eax,DWORD PTR [ebp+0x8]
10044741:	pop    esi
10044742:	pop    edi
10044743:	leave  
10044744:	ret    
10044745:	lea    ecx,[ecx+0x0]
10044748:	mov    al,BYTE PTR [esi+0x3]
1004474b:	mov    BYTE PTR [edi+0x3],al
1004474e:	mov    al,BYTE PTR [esi+0x2]
10044751:	mov    BYTE PTR [edi+0x2],al
10044754:	mov    eax,DWORD PTR [ebp+0x8]
10044757:	pop    esi
10044758:	pop    edi
10044759:	leave  
1004475a:	ret    
1004475b:	nop
1004475c:	mov    al,BYTE PTR [esi+0x3]
1004475f:	mov    BYTE PTR [edi+0x3],al
10044762:	mov    al,BYTE PTR [esi+0x2]
10044765:	mov    BYTE PTR [edi+0x2],al
10044768:	mov    al,BYTE PTR [esi+0x1]
1004476b:	mov    BYTE PTR [edi+0x1],al
1004476e:	mov    eax,DWORD PTR [ebp+0x8]
10044771:	pop    esi
10044772:	pop    edi
10044773:	leave  
10044774:	ret    
10044775:	int3   
10044776:	int3   
10044777:	int3   
10044778:	int3   
10044779:	int3   
1004477a:	int3   
1004477b:	int3   
1004477c:	int3   
1004477d:	int3   
1004477e:	int3   
1004477f:	int3   
10044780:	mov    ecx,DWORD PTR [esp+0x8]
10044784:	push   edi
10044785:	push   ebx
10044786:	push   esi
10044787:	mov    dl,BYTE PTR [ecx]
10044789:	mov    edi,DWORD PTR [esp+0x10]
1004478d:	test   dl,dl
1004478f:	je     0x10044800
10044791:	mov    dh,BYTE PTR [ecx+0x1]
10044794:	test   dh,dh
10044796:	je     0x100447ed
10044798:	mov    esi,edi
1004479a:	mov    ecx,DWORD PTR [esp+0x14]
1004479e:	mov    al,BYTE PTR [edi]
100447a0:	add    esi,0x1
100447a3:	cmp    al,dl
100447a5:	je     0x100447be
100447a7:	test   al,al
100447a9:	je     0x100447b8
100447ab:	mov    al,BYTE PTR [esi]
100447ad:	add    esi,0x1
100447b0:	cmp    al,dl
100447b2:	je     0x100447be
100447b4:	test   al,al
100447b6:	jne    0x100447ab
100447b8:	pop    esi
100447b9:	pop    ebx
100447ba:	pop    edi
100447bb:	xor    eax,eax
100447bd:	ret    
100447be:	mov    al,BYTE PTR [esi]
100447c0:	add    esi,0x1
100447c3:	cmp    al,dh
100447c5:	jne    0x100447b0
100447c7:	lea    edi,[esi-0x1]
100447ca:	mov    ah,BYTE PTR [ecx+0x2]
100447cd:	test   ah,ah
100447cf:	je     0x100447f9
100447d1:	mov    al,BYTE PTR [esi]
100447d3:	add    esi,0x2
100447d6:	cmp    al,ah
100447d8:	jne    0x10044798
100447da:	mov    al,BYTE PTR [ecx+0x3]
100447dd:	test   al,al
100447df:	je     0x100447f9
100447e1:	mov    ah,BYTE PTR [esi-0x1]
100447e4:	add    ecx,0x2
100447e7:	cmp    al,ah
100447e9:	je     0x100447ca
100447eb:	jmp    0x10044798
100447ed:	xor    eax,eax
100447ef:	pop    esi
100447f0:	pop    ebx
100447f1:	pop    edi
100447f2:	mov    al,dl
100447f4:	jmp    0x10048256
100447f9:	lea    eax,[edi-0x1]
100447fc:	pop    esi
100447fd:	pop    ebx
100447fe:	pop    edi
100447ff:	ret    
10044800:	mov    eax,edi
10044802:	pop    esi
10044803:	pop    ebx
10044804:	pop    edi
10044805:	ret    
10044806:	cmp    DWORD PTR [esp+0x8],0x0
1004480b:	je     0x10044813
1004480d:	mov    BYTE PTR [ecx],0x2d
10044810:	inc    ecx
10044811:	neg    eax
10044813:	push   esi
10044814:	mov    esi,ecx
10044816:	xor    edx,edx
10044818:	div    DWORD PTR [esp+0x8]
1004481c:	cmp    edx,0x9
1004481f:	jbe    0x10044826
10044821:	add    dl,0x57
10044824:	jmp    0x10044829
10044826:	add    dl,0x30
10044829:	mov    BYTE PTR [ecx],dl
1004482b:	inc    ecx
1004482c:	test   eax,eax
1004482e:	ja     0x10044816
10044830:	mov    BYTE PTR [ecx],0x0
10044833:	dec    ecx
10044834:	mov    dl,BYTE PTR [esi]
10044836:	mov    al,BYTE PTR [ecx]
10044838:	mov    BYTE PTR [ecx],dl
1004483a:	dec    ecx
1004483b:	mov    BYTE PTR [esi],al
1004483d:	inc    esi
1004483e:	cmp    esi,ecx
10044840:	jb     0x10044834
10044842:	pop    esi
10044843:	ret    0x8
10044846:	push   ebp
10044847:	mov    ebp,esp
10044849:	cmp    DWORD PTR [ebp+0x10],0xa
1004484d:	mov    eax,DWORD PTR [ebp+0x8]
10044850:	jne    0x1004485c
10044852:	test   eax,eax
10044854:	jge    0x1004485c
10044856:	push   0x1
10044858:	push   0xa
1004485a:	jmp    0x10044861
1004485c:	push   0x0
1004485e:	push   DWORD PTR [ebp+0x10]
10044861:	mov    ecx,DWORD PTR [ebp+0xc]
10044864:	call   0x10044806
10044869:	mov    eax,DWORD PTR [ebp+0xc]
1004486c:	pop    ebp
1004486d:	ret    
1004486e:	push   ebp
1004486f:	mov    ebp,esp
10044871:	xor    eax,eax
10044873:	cmp    DWORD PTR [ebp+0x10],0xa
10044877:	jne    0x1004487f
10044879:	cmp    DWORD PTR [ebp+0x8],eax
1004487c:	jge    0x1004487f
1004487e:	inc    eax
1004487f:	mov    ecx,DWORD PTR [ebp+0xc]
10044882:	push   eax
10044883:	push   DWORD PTR [ebp+0x10]
10044886:	mov    eax,DWORD PTR [ebp+0x8]
10044889:	call   0x10044806
1004488e:	mov    eax,DWORD PTR [ebp+0xc]
10044891:	pop    ebp
10044892:	ret    
10044893:	int3   
10044894:	int3   
10044895:	int3   
10044896:	int3   
10044897:	int3   
10044898:	int3   
10044899:	int3   
1004489a:	int3   
1004489b:	int3   
1004489c:	int3   
1004489d:	int3   
1004489e:	int3   
1004489f:	int3   
100448a0:	mov    eax,DWORD PTR [esp+0xc]
100448a4:	push   ebx
100448a5:	test   eax,eax
100448a7:	je     0x100448fb
100448a9:	mov    edx,DWORD PTR [esp+0x8]
100448ad:	xor    ebx,ebx
100448af:	mov    bl,BYTE PTR [esp+0xc]
100448b3:	test   edx,0x3
100448b9:	je     0x100448d1
100448bb:	mov    cl,BYTE PTR [edx]
100448bd:	add    edx,0x1
100448c0:	xor    cl,bl
100448c2:	je     0x10044936
100448c4:	sub    eax,0x1
100448c7:	je     0x100448fb
100448c9:	test   edx,0x3
100448cf:	jne    0x100448bb
100448d1:	sub    eax,0x4
100448d4:	jb     0x100448e8
100448d6:	push   edi
100448d7:	mov    edi,ebx
100448d9:	shl    ebx,0x8
100448dc:	add    ebx,edi
100448de:	mov    edi,ebx
100448e0:	shl    ebx,0x10
100448e3:	add    ebx,edi
100448e5:	jmp    0x10044902
100448e7:	pop    edi
100448e8:	add    eax,0x4
100448eb:	je     0x100448fb
100448ed:	mov    cl,BYTE PTR [edx]
100448ef:	add    edx,0x1
100448f2:	xor    cl,bl
100448f4:	je     0x10044936
100448f6:	sub    eax,0x1
100448f9:	jne    0x100448ed
100448fb:	pop    ebx
100448fc:	ret    
100448fd:	sub    eax,0x4
10044900:	jb     0x100448e7
10044902:	mov    ecx,DWORD PTR [edx]
10044904:	xor    ecx,ebx
10044906:	mov    edi,0x7efefeff
1004490b:	add    edi,ecx
1004490d:	xor    ecx,0xffffffff
10044910:	xor    ecx,edi
10044912:	add    edx,0x4
10044915:	and    ecx,0x81010100
1004491b:	je     0x100448fd
1004491d:	mov    ecx,DWORD PTR [edx-0x4]
10044920:	xor    cl,bl
10044922:	je     0x10044947
10044924:	xor    ch,bl
10044926:	je     0x10044941
10044928:	shr    ecx,0x10
1004492b:	xor    cl,bl
1004492d:	je     0x1004493b
1004492f:	xor    ch,bl
10044931:	je     0x10044935
10044933:	jmp    0x100448fd
10044935:	pop    edi
10044936:	lea    eax,[edx-0x1]
10044939:	pop    ebx
1004493a:	ret    
1004493b:	lea    eax,[edx-0x2]
1004493e:	pop    edi
1004493f:	pop    ebx
10044940:	ret    
10044941:	lea    eax,[edx-0x3]
10044944:	pop    edi
10044945:	pop    ebx
10044946:	ret    
10044947:	lea    eax,[edx-0x4]
1004494a:	pop    edi
1004494b:	pop    ebx
1004494c:	ret    
1004494d:	int3   
1004494e:	int3   
1004494f:	int3   
10044950:	mov    edx,DWORD PTR [esp+0xc]
10044954:	mov    ecx,DWORD PTR [esp+0x4]
10044958:	test   edx,edx
1004495a:	je     0x100449c5
1004495c:	xor    eax,eax
1004495e:	mov    al,BYTE PTR [esp+0x8]
10044962:	test   al,al
10044964:	jne    0x1004497c
10044966:	cmp    edx,0x100
1004496c:	jb     0x1004497c
1004496e:	cmp    DWORD PTR ds:0x10081564,0x0
10044975:	je     0x1004497c
10044977:	jmp    0x100483fc
1004497c:	push   edi
1004497d:	mov    edi,ecx
1004497f:	cmp    edx,0x4
10044982:	jb     0x100449b5
10044984:	neg    ecx
10044986:	and    ecx,0x3
10044989:	je     0x10044997
1004498b:	sub    edx,ecx
1004498d:	mov    BYTE PTR [edi],al
1004498f:	add    edi,0x1
10044992:	sub    ecx,0x1
10044995:	jne    0x1004498d
10044997:	mov    ecx,eax
10044999:	shl    eax,0x8
1004499c:	add    eax,ecx
1004499e:	mov    ecx,eax
100449a0:	shl    eax,0x10
100449a3:	add    eax,ecx
100449a5:	mov    ecx,edx
100449a7:	and    edx,0x3
100449aa:	shr    ecx,0x2
100449ad:	je     0x100449b5
100449af:	rep stos DWORD PTR es:[edi],eax
100449b1:	test   edx,edx
100449b3:	je     0x100449bf
100449b5:	mov    BYTE PTR [edi],al
100449b7:	add    edi,0x1
100449ba:	sub    edx,0x1
100449bd:	jne    0x100449b5
100449bf:	mov    eax,DWORD PTR [esp+0x8]
100449c3:	pop    edi
100449c4:	ret    
100449c5:	mov    eax,DWORD PTR [esp+0x4]
100449c9:	ret    
100449ca:	push   DWORD PTR ds:0x1007f2d4
100449d0:	call   0x10045c42
100449d5:	test   eax,eax
100449d7:	pop    ecx
100449d8:	je     0x100449dc
100449da:	call   eax
100449dc:	push   0x19
100449de:	call   0x1004751d
100449e3:	push   0x1
100449e5:	push   0x0
100449e7:	call   0x1004857e
100449ec:	add    esp,0xc
100449ef:	jmp    0x1004848b
100449f4:	push   0xa
100449f6:	push   0x0
100449f8:	push   DWORD PTR [esp+0xc]
100449fc:	call   0x100487d1
10044a01:	add    esp,0xc
10044a04:	ret    
10044a05:	jmp    0x100449f4
10044a0a:	push   ebp
10044a0b:	mov    ebp,esp
10044a0d:	sub    esp,0x18
10044a10:	push   ebx
10044a11:	push   esi
10044a12:	push   DWORD PTR [ebp+0xc]
10044a15:	lea    ecx,[ebp-0x18]
10044a18:	call   0x10044235
10044a1d:	mov    ebx,DWORD PTR [ebp+0x8]
10044a20:	mov    esi,0x100
10044a25:	cmp    ebx,esi
10044a27:	jae    0x10044a7d
10044a29:	mov    ecx,DWORD PTR [ebp-0x18]
10044a2c:	cmp    DWORD PTR [ecx+0xac],0x1
10044a33:	jle    0x10044a49
10044a35:	lea    eax,[ebp-0x18]
10044a38:	push   eax
10044a39:	push   0x1
10044a3b:	push   ebx
10044a3c:	call   0x10048c23
10044a41:	mov    ecx,DWORD PTR [ebp-0x18]
10044a44:	add    esp,0xc
10044a47:	jmp    0x10044a56
10044a49:	mov    eax,DWORD PTR [ecx+0xc8]
10044a4f:	movzx  eax,BYTE PTR [eax+ebx*2]
10044a53:	and    eax,0x1
10044a56:	test   eax,eax
10044a58:	je     0x10044a69
10044a5a:	mov    eax,DWORD PTR [ecx+0xcc]
10044a60:	movzx  eax,BYTE PTR [eax+ebx*1]
10044a64:	jmp    0x10044b10
10044a69:	cmp    BYTE PTR [ebp-0xc],0x0
10044a6d:	je     0x10044a76
10044a6f:	mov    eax,DWORD PTR [ebp-0x10]
10044a72:	and    DWORD PTR [eax+0x70],0xfffffffd
10044a76:	mov    eax,ebx
10044a78:	jmp    0x10044b1d
10044a7d:	mov    eax,DWORD PTR [ebp-0x18]
10044a80:	cmp    DWORD PTR [eax+0xac],0x1
10044a87:	jle    0x10044aba
10044a89:	mov    DWORD PTR [ebp+0x8],ebx
10044a8c:	sar    DWORD PTR [ebp+0x8],0x8
10044a90:	lea    eax,[ebp-0x18]
10044a93:	push   eax
10044a94:	mov    eax,DWORD PTR [ebp+0x8]
10044a97:	and    eax,0xff
10044a9c:	push   eax
10044a9d:	call   0x10048bdf
10044aa2:	test   eax,eax
10044aa4:	pop    ecx
10044aa5:	pop    ecx
10044aa6:	je     0x10044aba
10044aa8:	mov    al,BYTE PTR [ebp+0x8]
10044aab:	push   0x2
10044aad:	mov    BYTE PTR [ebp-0x4],al
10044ab0:	mov    BYTE PTR [ebp-0x3],bl
10044ab3:	mov    BYTE PTR [ebp-0x2],0x0
10044ab7:	pop    ecx
10044ab8:	jmp    0x10044acf
10044aba:	call   0x100458a5
10044abf:	mov    DWORD PTR [eax],0x2a
10044ac5:	xor    ecx,ecx
10044ac7:	mov    BYTE PTR [ebp-0x4],bl
10044aca:	mov    BYTE PTR [ebp-0x3],0x0
10044ace:	inc    ecx
10044acf:	mov    eax,DWORD PTR [ebp-0x18]
10044ad2:	push   0x1
10044ad4:	push   DWORD PTR [eax+0x4]
10044ad7:	lea    edx,[ebp-0x8]
10044ada:	push   0x3
10044adc:	push   edx
10044add:	push   ecx
10044ade:	lea    ecx,[ebp-0x4]
10044ae1:	push   ecx
10044ae2:	push   esi
10044ae3:	push   DWORD PTR [eax+0x14]
10044ae6:	lea    eax,[ebp-0x18]
10044ae9:	push   eax
10044aea:	call   0x10048b9c
10044aef:	add    esp,0x24
10044af2:	test   eax,eax
10044af4:	je     0x10044a69
10044afa:	cmp    eax,0x1
10044afd:	jne    0x10044b05
10044aff:	movzx  eax,BYTE PTR [ebp-0x8]
10044b03:	jmp    0x10044b10
10044b05:	movzx  ecx,BYTE PTR [ebp-0x7]
10044b09:	xor    eax,eax
10044b0b:	mov    ah,BYTE PTR [ebp-0x8]
10044b0e:	or     eax,ecx
10044b10:	cmp    BYTE PTR [ebp-0xc],0x0
10044b14:	je     0x10044b1d
10044b16:	mov    ecx,DWORD PTR [ebp-0x10]
10044b19:	and    DWORD PTR [ecx+0x70],0xfffffffd
10044b1d:	pop    esi
10044b1e:	pop    ebx
10044b1f:	leave  
10044b20:	ret    
10044b21:	cmp    DWORD PTR ds:0x1007f2a8,0x0
10044b28:	jne    0x10044b3a
10044b2a:	mov    eax,DWORD PTR [esp+0x4]
10044b2e:	lea    ecx,[eax-0x41]
10044b31:	cmp    ecx,0x19
10044b34:	ja     0x10044b47
10044b36:	add    eax,0x20
10044b39:	ret    
10044b3a:	push   0x0
10044b3c:	push   DWORD PTR [esp+0x8]
10044b40:	call   0x10044a0a
10044b45:	pop    ecx
10044b46:	pop    ecx
10044b47:	ret    
10044b48:	push   0x10
10044b4a:	push   0x100731a0
10044b4f:	call   0x100459e4
10044b54:	xor    eax,eax
10044b56:	mov    DWORD PTR [ebp-0x20],eax
10044b59:	mov    DWORD PTR [ebp-0x4],eax
10044b5c:	mov    DWORD PTR [ebp-0x1c],eax
10044b5f:	mov    eax,DWORD PTR [ebp-0x1c]
10044b62:	cmp    eax,DWORD PTR [ebp+0x10]
10044b65:	jge    0x10044b7a
10044b67:	mov    esi,DWORD PTR [ebp+0x8]
10044b6a:	mov    ecx,esi
10044b6c:	call   DWORD PTR [ebp+0x14]
10044b6f:	add    esi,DWORD PTR [ebp+0xc]
10044b72:	mov    DWORD PTR [ebp+0x8],esi
10044b75:	inc    DWORD PTR [ebp-0x1c]
10044b78:	jmp    0x10044b5f
10044b7a:	mov    DWORD PTR [ebp-0x20],0x1
10044b81:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10044b88:	call   0x10044b95
10044b8d:	call   0x10045a29
10044b92:	ret    0x14
10044b95:	cmp    DWORD PTR [ebp-0x20],0x0
10044b99:	jne    0x10044bac
10044b9b:	push   DWORD PTR [ebp+0x18]
10044b9e:	push   DWORD PTR [ebp-0x1c]
10044ba1:	push   DWORD PTR [ebp+0xc]
10044ba4:	push   DWORD PTR [ebp+0x8]
10044ba7:	call   0x10041f9b
10044bac:	ret    
10044bad:	push   ebp
10044bae:	mov    ebp,esp
10044bb0:	push   ebx
10044bb1:	push   esi
10044bb2:	mov    esi,DWORD PTR [ebp+0x8]
10044bb5:	push   edi
10044bb6:	xor    edi,edi
10044bb8:	cmp    DWORD PTR [ebp+0x14],edi
10044bbb:	jne    0x10044bcd
10044bbd:	cmp    esi,edi
10044bbf:	jne    0x10044bd1
10044bc1:	cmp    DWORD PTR [ebp+0xc],edi
10044bc4:	jne    0x10044bd8
10044bc6:	xor    eax,eax
10044bc8:	pop    edi
10044bc9:	pop    esi
10044bca:	pop    ebx
10044bcb:	pop    ebp
10044bcc:	ret    
10044bcd:	cmp    esi,edi
10044bcf:	je     0x10044bd8
10044bd1:	mov    ebx,DWORD PTR [ebp+0xc]
10044bd4:	cmp    ebx,edi
10044bd6:	ja     0x10044bf3
10044bd8:	call   0x100458a5
10044bdd:	push   0x16
10044bdf:	pop    esi
10044be0:	mov    DWORD PTR [eax],esi
10044be2:	push   edi
10044be3:	push   edi
10044be4:	push   edi
10044be5:	push   edi
10044be6:	push   edi
10044be7:	call   0x1004228c
10044bec:	add    esp,0x14
10044bef:	mov    eax,esi
10044bf1:	jmp    0x10044bc8
10044bf3:	cmp    DWORD PTR [ebp+0x14],edi
10044bf6:	jne    0x10044bfd
10044bf8:	mov    WORD PTR [esi],di
10044bfb:	jmp    0x10044bc6
10044bfd:	mov    edx,DWORD PTR [ebp+0x10]
10044c00:	cmp    edx,edi
10044c02:	jne    0x10044c09
10044c04:	mov    WORD PTR [esi],di
10044c07:	jmp    0x10044bd8
10044c09:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10044c0d:	mov    eax,esi
10044c0f:	jne    0x10044c25
10044c11:	movzx  ecx,WORD PTR [edx]
10044c14:	mov    WORD PTR [eax],cx
10044c17:	inc    eax
10044c18:	inc    eax
10044c19:	inc    edx
10044c1a:	inc    edx
10044c1b:	cmp    cx,di
10044c1e:	je     0x10044c44
10044c20:	dec    ebx
10044c21:	jne    0x10044c11
10044c23:	jmp    0x10044c44
10044c25:	movzx  ecx,WORD PTR [edx]
10044c28:	mov    WORD PTR [eax],cx
10044c2b:	inc    eax
10044c2c:	inc    eax
10044c2d:	inc    edx
10044c2e:	inc    edx
10044c2f:	cmp    cx,di
10044c32:	je     0x10044c3c
10044c34:	dec    ebx
10044c35:	je     0x10044c3c
10044c37:	dec    DWORD PTR [ebp+0x14]
10044c3a:	jne    0x10044c25
10044c3c:	cmp    DWORD PTR [ebp+0x14],edi
10044c3f:	jne    0x10044c44
10044c41:	mov    WORD PTR [eax],di
10044c44:	cmp    ebx,edi
10044c46:	jne    0x10044bc6
10044c4c:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10044c50:	jne    0x10044c62
10044c52:	mov    eax,DWORD PTR [ebp+0xc]
10044c55:	push   0x50
10044c57:	mov    WORD PTR [esi+eax*2-0x2],di
10044c5c:	pop    eax
10044c5d:	jmp    0x10044bc8
10044c62:	mov    WORD PTR [esi],di
10044c65:	call   0x100458a5
10044c6a:	push   0x22
10044c6c:	pop    ecx
10044c6d:	mov    DWORD PTR [eax],ecx
10044c6f:	mov    esi,ecx
10044c71:	jmp    0x10044be2
10044c76:	push   ebp
10044c77:	mov    ebp,esp
10044c79:	sub    esp,0xc
10044c7c:	mov    eax,ds:0x1007d030
10044c81:	xor    eax,ebp
10044c83:	mov    DWORD PTR [ebp-0x4],eax
10044c86:	push   esi
10044c87:	xor    esi,esi
10044c89:	cmp    ebx,esi
10044c8b:	push   edi
10044c8c:	jne    0x10044cac
10044c8e:	call   0x100458a5
10044c93:	push   0x16
10044c95:	pop    edi
10044c96:	push   esi
10044c97:	push   esi
10044c98:	push   esi
10044c99:	push   esi
10044c9a:	push   esi
10044c9b:	mov    DWORD PTR [eax],edi
10044c9d:	call   0x1004228c
10044ca2:	add    esp,0x14
10044ca5:	mov    eax,edi
10044ca7:	jmp    0x10044dec
10044cac:	push   DWORD PTR [ebp+0x8]
10044caf:	push   ebx
10044cb0:	call   0x10048fe6
10044cb5:	cmp    eax,DWORD PTR [ebp+0x8]
10044cb8:	pop    ecx
10044cb9:	pop    ecx
10044cba:	jb     0x10044cc1
10044cbc:	mov    WORD PTR [ebx],si
10044cbf:	jmp    0x10044c8e
10044cc1:	mov    edx,DWORD PTR [ebp+0xc]
10044cc4:	mov    eax,DWORD PTR [edx]
10044cc6:	mov    ecx,DWORD PTR [eax+0x14]
10044cc9:	cmp    ecx,esi
10044ccb:	jne    0x10044cf7
10044ccd:	cmp    WORD PTR [ebx],si
10044cd0:	mov    eax,ebx
10044cd2:	je     0x10044cf0
10044cd4:	movzx  ecx,WORD PTR [eax]
10044cd7:	cmp    cx,0x41
10044cdb:	jb     0x10044ce9
10044cdd:	cmp    cx,0x5a
10044ce1:	ja     0x10044ce9
10044ce3:	add    ecx,0x20
10044ce6:	mov    WORD PTR [eax],cx
10044ce9:	inc    eax
10044cea:	inc    eax
10044ceb:	cmp    WORD PTR [eax],si
10044cee:	jne    0x10044cd4
10044cf0:	xor    eax,eax
10044cf2:	jmp    0x10044dec
10044cf7:	push   DWORD PTR [eax+0x4]
10044cfa:	mov    edi,0x100
10044cff:	push   esi
10044d00:	push   esi
10044d01:	push   0xffffffff
10044d03:	push   ebx
10044d04:	push   edi
10044d05:	push   ecx
10044d06:	push   edx
10044d07:	call   0x10048fa6
10044d0c:	mov    ecx,eax
10044d0e:	add    esp,0x20
10044d11:	cmp    ecx,esi
10044d13:	mov    DWORD PTR [ebp-0xc],ecx
10044d16:	jne    0x10044d2f
10044d18:	call   0x100458a5
10044d1d:	mov    DWORD PTR [eax],0x2a
10044d23:	call   0x100458a5
10044d28:	mov    eax,DWORD PTR [eax]
10044d2a:	jmp    0x10044dec
10044d2f:	cmp    DWORD PTR [ebp+0x8],ecx
10044d32:	jae    0x10044d43
10044d34:	mov    WORD PTR [ebx],si
10044d37:	call   0x100458a5
10044d3c:	push   0x22
10044d3e:	jmp    0x10044c95
10044d43:	cmp    ecx,esi
10044d45:	jle    0x10044d8d
10044d47:	push   0xffffffe0
10044d49:	xor    edx,edx
10044d4b:	pop    eax
10044d4c:	div    ecx
10044d4e:	cmp    eax,0x2
10044d51:	jb     0x10044d8d
10044d53:	lea    eax,[ecx+ecx*1+0x8]
10044d57:	cmp    eax,0x400
10044d5c:	ja     0x10044d71
10044d5e:	call   0x10049010
10044d63:	mov    eax,esp
10044d65:	cmp    eax,esi
10044d67:	je     0x10044d85
10044d69:	mov    DWORD PTR [eax],0xcccc
10044d6f:	jmp    0x10044d82
10044d71:	push   eax
10044d72:	call   0x10043cdd
10044d77:	cmp    eax,esi
10044d79:	pop    ecx
10044d7a:	je     0x10044d85
10044d7c:	mov    DWORD PTR [eax],0xdddd
10044d82:	add    eax,0x8
10044d85:	mov    ecx,DWORD PTR [ebp-0xc]
10044d88:	mov    DWORD PTR [ebp-0x8],eax
10044d8b:	jmp    0x10044d90
10044d8d:	mov    DWORD PTR [ebp-0x8],esi
10044d90:	cmp    DWORD PTR [ebp-0x8],esi
10044d93:	jne    0x10044da2
10044d95:	call   0x100458a5
10044d9a:	mov    DWORD PTR [eax],0xc
10044da0:	jmp    0x10044d23
10044da2:	mov    edx,DWORD PTR [ebp+0xc]
10044da5:	mov    eax,DWORD PTR [edx]
10044da7:	push   DWORD PTR [eax+0x4]
10044daa:	push   ecx
10044dab:	push   DWORD PTR [ebp-0x8]
10044dae:	push   0xffffffff
10044db0:	push   ebx
10044db1:	push   edi
10044db2:	push   DWORD PTR [eax+0x14]
10044db5:	push   edx
10044db6:	call   0x10048fa6
10044dbb:	add    esp,0x20
10044dbe:	test   eax,eax
10044dc0:	je     0x10044dd5
10044dc2:	push   DWORD PTR [ebp-0x8]
10044dc5:	push   DWORD PTR [ebp+0x8]
10044dc8:	push   ebx
10044dc9:	call   0x10048cd9
10044dce:	add    esp,0xc
10044dd1:	mov    esi,eax
10044dd3:	jmp    0x10044de1
10044dd5:	call   0x100458a5
10044dda:	push   0x2a
10044ddc:	pop    ecx
10044ddd:	mov    DWORD PTR [eax],ecx
10044ddf:	mov    esi,ecx
10044de1:	push   DWORD PTR [ebp-0x8]
10044de4:	call   0x1001b117
10044de9:	pop    ecx
10044dea:	mov    eax,esi
10044dec:	lea    esp,[ebp-0x14]
10044def:	pop    edi
10044df0:	pop    esi
10044df1:	mov    ecx,DWORD PTR [ebp-0x4]
10044df4:	xor    ecx,ebp
10044df6:	call   0x10041d97
10044dfb:	leave  
10044dfc:	ret    
10044dfd:	push   ebp
10044dfe:	mov    ebp,esp
10044e00:	sub    esp,0x10
10044e03:	push   ebx
10044e04:	push   DWORD PTR [ebp+0x10]
10044e07:	lea    ecx,[ebp-0x10]
10044e0a:	call   0x10044235
10044e0f:	mov    ebx,DWORD PTR [ebp+0x8]
10044e12:	lea    eax,[ebp-0x10]
10044e15:	push   eax
10044e16:	push   DWORD PTR [ebp+0xc]
10044e19:	call   0x10044c76
10044e1e:	cmp    BYTE PTR [ebp-0x4],0x0
10044e22:	pop    ecx
10044e23:	pop    ecx
10044e24:	pop    ebx
10044e25:	je     0x10044e2e
10044e27:	mov    ecx,DWORD PTR [ebp-0x8]
10044e2a:	and    DWORD PTR [ecx+0x70],0xfffffffd
10044e2e:	leave  
10044e2f:	ret    
10044e30:	push   esi
10044e31:	xor    esi,esi
10044e33:	cmp    DWORD PTR ds:0x1007f2a8,esi
10044e39:	jne    0x10044e84
10044e3b:	mov    eax,DWORD PTR [esp+0x8]
10044e3f:	cmp    eax,esi
10044e41:	jne    0x10044e5f
10044e43:	call   0x100458a5
10044e48:	push   esi
10044e49:	push   esi
10044e4a:	push   esi
10044e4b:	push   esi
10044e4c:	push   esi
10044e4d:	mov    DWORD PTR [eax],0x16
10044e53:	call   0x1004228c
10044e58:	add    esp,0x14
10044e5b:	xor    eax,eax
10044e5d:	pop    esi
10044e5e:	ret    
10044e5f:	cmp    WORD PTR [eax],si
10044e62:	mov    ecx,eax
10044e64:	je     0x10044e97
10044e66:	movzx  edx,WORD PTR [ecx]
10044e69:	cmp    dx,0x41
10044e6d:	jb     0x10044e7b
10044e6f:	cmp    dx,0x5a
10044e73:	ja     0x10044e7b
10044e75:	add    edx,0x20
10044e78:	mov    WORD PTR [ecx],dx
10044e7b:	inc    ecx
10044e7c:	inc    ecx
10044e7d:	cmp    WORD PTR [ecx],si
10044e80:	jne    0x10044e66
10044e82:	pop    esi
10044e83:	ret    
10044e84:	push   esi
10044e85:	push   0xffffffff
10044e87:	push   DWORD PTR [esp+0x10]
10044e8b:	call   0x10044dfd
10044e90:	mov    eax,DWORD PTR [esp+0x14]
10044e94:	add    esp,0xc
10044e97:	pop    esi
10044e98:	ret    
10044e99:	mov    eax,DWORD PTR [esp+0x4]
10044e9d:	push   ebx
10044e9e:	mov    ebx,DWORD PTR [esp+0xc]
10044ea2:	cmp    WORD PTR [ebx],0x0
10044ea6:	push   edi
10044ea7:	mov    edi,eax
10044ea9:	je     0x10044ef1
10044eab:	movzx  ecx,WORD PTR [eax]
10044eae:	test   cx,cx
10044eb1:	je     0x10044eef
10044eb3:	movzx  edx,cx
10044eb6:	sub    eax,ebx
10044eb8:	test   dx,dx
10044ebb:	mov    ecx,DWORD PTR [esp+0x10]
10044ebf:	je     0x10044edd
10044ec1:	movzx  edx,WORD PTR [ecx]
10044ec4:	test   dx,dx
10044ec7:	je     0x10044ef4
10044ec9:	movzx  ebx,WORD PTR [eax+ecx*1]
10044ecd:	movzx  edx,dx
10044ed0:	sub    ebx,edx
10044ed2:	jne    0x10044edd
10044ed4:	inc    ecx
10044ed5:	inc    ecx
10044ed6:	cmp    WORD PTR [eax+ecx*1],0x0
10044edb:	jne    0x10044ec1
10044edd:	cmp    WORD PTR [ecx],0x0
10044ee1:	je     0x10044ef4
10044ee3:	inc    edi
10044ee4:	inc    edi
10044ee5:	movzx  edx,WORD PTR [edi]
10044ee8:	inc    eax
10044ee9:	inc    eax
10044eea:	test   dx,dx
10044eed:	jne    0x10044eb8
10044eef:	xor    eax,eax
10044ef1:	pop    edi
10044ef2:	pop    ebx
10044ef3:	ret    
10044ef4:	mov    eax,edi
10044ef6:	jmp    0x10044ef1
10044ef8:	push   0x10
10044efa:	push   0x100731c0
10044eff:	call   0x100459e4
10044f04:	mov    ebx,DWORD PTR [ebp+0x8]
10044f07:	test   ebx,ebx
10044f09:	jne    0x10044f19
10044f0b:	push   DWORD PTR [ebp+0xc]
10044f0e:	call   0x10043cdd
10044f13:	pop    ecx
10044f14:	jmp    0x100450e5
10044f19:	mov    esi,DWORD PTR [ebp+0xc]
10044f1c:	test   esi,esi
10044f1e:	jne    0x10044f2c
10044f20:	push   ebx
10044f21:	call   0x10042408
10044f26:	pop    ecx
10044f27:	jmp    0x100450e3
10044f2c:	cmp    DWORD PTR ds:0x10081580,0x3
10044f33:	jne    0x100450cc
10044f39:	xor    edi,edi
10044f3b:	mov    DWORD PTR [ebp-0x1c],edi
10044f3e:	cmp    esi,0xffffffe0
10044f41:	ja     0x100450d1
10044f47:	push   0x4
10044f49:	call   0x100469ed
10044f4e:	pop    ecx
10044f4f:	mov    DWORD PTR [ebp-0x4],edi
10044f52:	push   ebx
10044f53:	call   0x10046a66
10044f58:	pop    ecx
10044f59:	mov    DWORD PTR [ebp-0x20],eax
10044f5c:	cmp    eax,edi
10044f5e:	je     0x10045002
10044f64:	cmp    esi,DWORD PTR ds:0x10081570
10044f6a:	ja     0x10044fb5
10044f6c:	push   esi
10044f6d:	push   ebx
10044f6e:	push   eax
10044f6f:	call   0x10046f5b
10044f74:	add    esp,0xc
10044f77:	test   eax,eax
10044f79:	je     0x10044f80
10044f7b:	mov    DWORD PTR [ebp-0x1c],ebx
10044f7e:	jmp    0x10044fb5
10044f80:	push   esi
10044f81:	call   0x1004723a
10044f86:	pop    ecx
10044f87:	mov    DWORD PTR [ebp-0x1c],eax
10044f8a:	cmp    eax,edi
10044f8c:	je     0x10044fb5
10044f8e:	mov    eax,DWORD PTR [ebx-0x4]
10044f91:	dec    eax
10044f92:	cmp    eax,esi
10044f94:	jb     0x10044f98
10044f96:	mov    eax,esi
10044f98:	push   eax
10044f99:	push   ebx
10044f9a:	push   DWORD PTR [ebp-0x1c]
10044f9d:	call   0x10043ed0
10044fa2:	push   ebx
10044fa3:	call   0x10046a66
10044fa8:	mov    DWORD PTR [ebp-0x20],eax
10044fab:	push   ebx
10044fac:	push   eax
10044fad:	call   0x10046a91
10044fb2:	add    esp,0x18
10044fb5:	cmp    DWORD PTR [ebp-0x1c],edi
10044fb8:	jne    0x10045002
10044fba:	cmp    esi,edi
10044fbc:	jne    0x10044fc4
10044fbe:	xor    esi,esi
10044fc0:	inc    esi
10044fc1:	mov    DWORD PTR [ebp+0xc],esi
10044fc4:	add    esi,0xf
10044fc7:	and    esi,0xfffffff0
10044fca:	mov    DWORD PTR [ebp+0xc],esi
10044fcd:	push   esi
10044fce:	push   edi
10044fcf:	push   DWORD PTR ds:0x1007ee18
10044fd5:	call   DWORD PTR ds:0x1006518c
10044fdb:	mov    DWORD PTR [ebp-0x1c],eax
10044fde:	cmp    eax,edi
10044fe0:	je     0x10045002
10044fe2:	mov    eax,DWORD PTR [ebx-0x4]
10044fe5:	dec    eax
10044fe6:	cmp    eax,esi
10044fe8:	jb     0x10044fec
10044fea:	mov    eax,esi
10044fec:	push   eax
10044fed:	push   ebx
10044fee:	push   DWORD PTR [ebp-0x1c]
10044ff1:	call   0x10043ed0
10044ff6:	push   ebx
10044ff7:	push   DWORD PTR [ebp-0x20]
10044ffa:	call   0x10046a91
10044fff:	add    esp,0x14
10045002:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10045009:	call   0x1004503c
1004500e:	cmp    DWORD PTR [ebp-0x20],0x0
10045012:	jne    0x10045045
10045014:	test   esi,esi
10045016:	jne    0x10045019
10045018:	inc    esi
10045019:	add    esi,0xf
1004501c:	and    esi,0xfffffff0
1004501f:	mov    DWORD PTR [ebp+0xc],esi
10045022:	push   esi
10045023:	push   ebx
10045024:	push   0x0
10045026:	push   DWORD PTR ds:0x1007ee18
1004502c:	call   DWORD PTR ds:0x100651a0
10045032:	mov    edi,eax
10045034:	jmp    0x10045048
10045036:	mov    esi,DWORD PTR [ebp+0xc]
10045039:	mov    ebx,DWORD PTR [ebp+0x8]
1004503c:	push   0x4
1004503e:	call   0x10046915
10045043:	pop    ecx
10045044:	ret    
10045045:	mov    edi,DWORD PTR [ebp-0x1c]
10045048:	test   edi,edi
1004504a:	jne    0x1004510f
10045050:	cmp    DWORD PTR ds:0x1007ef74,edi
10045056:	je     0x10045084
10045058:	push   esi
10045059:	call   0x100466e2
1004505e:	pop    ecx
1004505f:	test   eax,eax
10045061:	jne    0x10044f39
10045067:	call   0x100458a5
1004506c:	cmp    DWORD PTR [ebp-0x20],edi
1004506f:	jne    0x100450dd
10045071:	mov    esi,eax
10045073:	call   DWORD PTR ds:0x100650c4
10045079:	push   eax
1004507a:	call   0x1004586a
1004507f:	pop    ecx
10045080:	mov    DWORD PTR [esi],eax
10045082:	jmp    0x100450e3
10045084:	test   edi,edi
10045086:	jne    0x1004510f
1004508c:	call   0x100458a5
10045091:	cmp    DWORD PTR [ebp-0x20],edi
10045094:	je     0x100450fe
10045096:	mov    DWORD PTR [eax],0xc
1004509c:	jmp    0x1004510f
1004509e:	test   esi,esi
100450a0:	jne    0x100450a3
100450a2:	inc    esi
100450a3:	push   esi
100450a4:	push   ebx
100450a5:	push   0x0
100450a7:	push   DWORD PTR ds:0x1007ee18
100450ad:	call   DWORD PTR ds:0x100651a0
100450b3:	mov    edi,eax
100450b5:	test   edi,edi
100450b7:	jne    0x1004510f
100450b9:	cmp    DWORD PTR ds:0x1007ef74,eax
100450bf:	je     0x100450f5
100450c1:	push   esi
100450c2:	call   0x100466e2
100450c7:	pop    ecx
100450c8:	test   eax,eax
100450ca:	je     0x100450eb
100450cc:	cmp    esi,0xffffffe0
100450cf:	jbe    0x1004509e
100450d1:	push   esi
100450d2:	call   0x100466e2
100450d7:	pop    ecx
100450d8:	call   0x100458a5
100450dd:	mov    DWORD PTR [eax],0xc
100450e3:	xor    eax,eax
100450e5:	call   0x10045a29
100450ea:	ret    
100450eb:	call   0x100458a5
100450f0:	jmp    0x10045071
100450f5:	test   edi,edi
100450f7:	jne    0x1004510f
100450f9:	call   0x100458a5
100450fe:	mov    esi,eax
10045100:	call   DWORD PTR ds:0x100650c4
10045106:	push   eax
10045107:	call   0x1004586a
1004510c:	mov    DWORD PTR [esi],eax
1004510e:	pop    ecx
1004510f:	mov    eax,edi
10045111:	jmp    0x100450e5
10045113:	mov    ecx,DWORD PTR [esp+0x8]
10045117:	push   esi
10045118:	xor    esi,esi
1004511a:	cmp    ecx,esi
1004511c:	jbe    0x10045147
1004511e:	push   0xffffffe0
10045120:	xor    edx,edx
10045122:	pop    eax
10045123:	div    ecx
10045125:	cmp    eax,DWORD PTR [esp+0x10]
10045129:	jae    0x10045147
1004512b:	call   0x100458a5
10045130:	push   esi
10045131:	push   esi
10045132:	push   esi
10045133:	push   esi
10045134:	push   esi
10045135:	mov    DWORD PTR [eax],0xc
1004513b:	call   0x1004228c
10045140:	add    esp,0x14
10045143:	xor    eax,eax
10045145:	pop    esi
10045146:	ret    
10045147:	imul   ecx,DWORD PTR [esp+0x10]
1004514c:	push   ecx
1004514d:	push   DWORD PTR [esp+0xc]
10045151:	call   0x10044ef8
10045156:	pop    ecx
10045157:	pop    ecx
10045158:	pop    esi
10045159:	ret    
1004515a:	call   0x10045e4c
1004515f:	mov    ecx,DWORD PTR [esp+0x4]
10045163:	mov    DWORD PTR [eax+0x14],ecx
10045166:	ret    
10045167:	call   0x10045e4c
1004516c:	mov    ecx,DWORD PTR [eax+0x14]
1004516f:	imul   ecx,ecx,0x343fd
10045175:	add    ecx,0x269ec3
1004517b:	mov    DWORD PTR [eax+0x14],ecx
1004517e:	mov    eax,ecx
10045180:	shr    eax,0x10
10045183:	and    eax,0x7fff
10045188:	ret    
10045189:	int3   
1004518a:	int3   
1004518b:	int3   
1004518c:	int3   
1004518d:	int3   
1004518e:	int3   
1004518f:	int3   
10045190:	push   edi
10045191:	mov    edi,DWORD PTR [esp+0x8]
10045195:	jmp    0x10045205
10045197:	lea    esp,[esp+0x0]
1004519e:	mov    edi,edi
100451a0:	mov    ecx,DWORD PTR [esp+0x4]
100451a4:	push   edi
100451a5:	test   ecx,0x3
100451ab:	je     0x100451c0
100451ad:	mov    al,BYTE PTR [ecx]
100451af:	add    ecx,0x1
100451b2:	test   al,al
100451b4:	je     0x100451f3
100451b6:	test   ecx,0x3
100451bc:	jne    0x100451ad
100451be:	mov    edi,edi
100451c0:	mov    eax,DWORD PTR [ecx]
100451c2:	mov    edx,0x7efefeff
100451c7:	add    edx,eax
100451c9:	xor    eax,0xffffffff
100451cc:	xor    eax,edx
100451ce:	add    ecx,0x4
100451d1:	test   eax,0x81010100
100451d6:	je     0x100451c0
100451d8:	mov    eax,DWORD PTR [ecx-0x4]
100451db:	test   al,al
100451dd:	je     0x10045202
100451df:	test   ah,ah
100451e1:	je     0x100451fd
100451e3:	test   eax,0xff0000
100451e8:	je     0x100451f8
100451ea:	test   eax,0xff000000
100451ef:	je     0x100451f3
100451f1:	jmp    0x100451c0
100451f3:	lea    edi,[ecx-0x1]
100451f6:	jmp    0x10045205
100451f8:	lea    edi,[ecx-0x2]
100451fb:	jmp    0x10045205
100451fd:	lea    edi,[ecx-0x3]
10045200:	jmp    0x10045205
10045202:	lea    edi,[ecx-0x4]
10045205:	mov    ecx,DWORD PTR [esp+0xc]
10045209:	test   ecx,0x3
1004520f:	je     0x1004522e
10045211:	mov    dl,BYTE PTR [ecx]
10045213:	add    ecx,0x1
10045216:	test   dl,dl
10045218:	je     0x10045280
1004521a:	mov    BYTE PTR [edi],dl
1004521c:	add    edi,0x1
1004521f:	test   ecx,0x3
10045225:	jne    0x10045211
10045227:	jmp    0x1004522e
10045229:	mov    DWORD PTR [edi],edx
1004522b:	add    edi,0x4
1004522e:	mov    edx,0x7efefeff
10045233:	mov    eax,DWORD PTR [ecx]
10045235:	add    edx,eax
10045237:	xor    eax,0xffffffff
1004523a:	xor    eax,edx
1004523c:	mov    edx,DWORD PTR [ecx]
1004523e:	add    ecx,0x4
10045241:	test   eax,0x81010100
10045246:	je     0x10045229
10045248:	test   dl,dl
1004524a:	je     0x10045280
1004524c:	test   dh,dh
1004524e:	je     0x10045277
10045250:	test   edx,0xff0000
10045256:	je     0x1004526a
10045258:	test   edx,0xff000000
1004525e:	je     0x10045262
10045260:	jmp    0x10045229
10045262:	mov    DWORD PTR [edi],edx
10045264:	mov    eax,DWORD PTR [esp+0x8]
10045268:	pop    edi
10045269:	ret    
1004526a:	mov    WORD PTR [edi],dx
1004526d:	mov    eax,DWORD PTR [esp+0x8]
10045271:	mov    BYTE PTR [edi+0x2],0x0
10045275:	pop    edi
10045276:	ret    
10045277:	mov    WORD PTR [edi],dx
1004527a:	mov    eax,DWORD PTR [esp+0x8]
1004527e:	pop    edi
1004527f:	ret    
10045280:	mov    BYTE PTR [edi],dl
10045282:	mov    eax,DWORD PTR [esp+0x8]
10045286:	pop    edi
10045287:	ret    
10045288:	lea    eax,[esp+0x10]
1004528c:	push   eax
1004528d:	push   0x0
1004528f:	push   DWORD PTR [esp+0x14]
10045293:	push   DWORD PTR [esp+0x14]
10045297:	push   DWORD PTR [esp+0x14]
1004529b:	call   0x10049cac
100452a0:	add    esp,0x14
100452a3:	ret    
100452a4:	push   ebp
100452a5:	mov    ebp,esp
100452a7:	sub    esp,0x10
100452aa:	push   ebx
100452ab:	push   esi
100452ac:	push   DWORD PTR [ebp+0x10]
100452af:	lea    ecx,[ebp-0x10]
100452b2:	call   0x10044235
100452b7:	mov    ebx,DWORD PTR [ebp+0x8]
100452ba:	xor    esi,esi
100452bc:	cmp    ebx,esi
100452be:	jne    0x100452ef
100452c0:	call   0x100458a5
100452c5:	push   esi
100452c6:	push   esi
100452c7:	push   esi
100452c8:	push   esi
100452c9:	push   esi
100452ca:	mov    DWORD PTR [eax],0x16
100452d0:	call   0x1004228c
100452d5:	add    esp,0x14
100452d8:	cmp    BYTE PTR [ebp-0x4],0x0
100452dc:	je     0x100452e5
100452de:	mov    eax,DWORD PTR [ebp-0x8]
100452e1:	and    DWORD PTR [eax+0x70],0xfffffffd
100452e5:	mov    eax,0x7fffffff
100452ea:	jmp    0x100453af
100452ef:	push   edi
100452f0:	mov    edi,DWORD PTR [ebp+0xc]
100452f3:	cmp    edi,esi
100452f5:	jne    0x10045326
100452f7:	call   0x100458a5
100452fc:	push   esi
100452fd:	push   esi
100452fe:	push   esi
100452ff:	push   esi
10045300:	push   esi
10045301:	mov    DWORD PTR [eax],0x16
10045307:	call   0x1004228c
1004530c:	add    esp,0x14
1004530f:	cmp    BYTE PTR [ebp-0x4],0x0
10045313:	je     0x1004531c
10045315:	mov    eax,DWORD PTR [ebp-0x8]
10045318:	and    DWORD PTR [eax+0x70],0xfffffffd
1004531c:	mov    eax,0x7fffffff
10045321:	jmp    0x100453ae
10045326:	mov    eax,DWORD PTR [ebp-0x10]
10045329:	cmp    DWORD PTR [eax+0x14],esi
1004532c:	jne    0x10045368
1004532e:	movzx  eax,WORD PTR [ebx]
10045331:	cmp    ax,0x41
10045335:	jb     0x10045340
10045337:	cmp    ax,0x5a
1004533b:	ja     0x10045340
1004533d:	add    eax,0x20
10045340:	movzx  esi,ax
10045343:	movzx  eax,WORD PTR [edi]
10045346:	cmp    ax,0x41
1004534a:	jb     0x10045355
1004534c:	cmp    ax,0x5a
10045350:	ja     0x10045355
10045352:	add    eax,0x20
10045355:	inc    ebx
10045356:	inc    ebx
10045357:	inc    edi
10045358:	inc    edi
10045359:	test   si,si
1004535c:	movzx  eax,ax
1004535f:	je     0x10045399
10045361:	cmp    si,ax
10045364:	je     0x1004532e
10045366:	jmp    0x10045399
10045368:	movzx  eax,WORD PTR [ebx]
1004536b:	lea    ecx,[ebp-0x10]
1004536e:	push   ecx
1004536f:	push   eax
10045370:	call   0x10049d4e
10045375:	movzx  esi,ax
10045378:	movzx  eax,WORD PTR [edi]
1004537b:	lea    ecx,[ebp-0x10]
1004537e:	push   ecx
1004537f:	inc    ebx
10045380:	push   eax
10045381:	inc    ebx
10045382:	call   0x10049d4e
10045387:	add    esp,0x10
1004538a:	inc    edi
1004538b:	inc    edi
1004538c:	test   si,si
1004538f:	movzx  eax,ax
10045392:	je     0x10045399
10045394:	cmp    si,ax
10045397:	je     0x10045368
10045399:	movzx  ecx,ax
1004539c:	movzx  eax,si
1004539f:	sub    eax,ecx
100453a1:	cmp    BYTE PTR [ebp-0x4],0x0
100453a5:	je     0x100453ae
100453a7:	mov    ecx,DWORD PTR [ebp-0x8]
100453aa:	and    DWORD PTR [ecx+0x70],0xfffffffd
100453ae:	pop    edi
100453af:	pop    esi
100453b0:	pop    ebx
100453b1:	leave  
100453b2:	ret    
100453b3:	push   esi
100453b4:	xor    esi,esi
100453b6:	cmp    DWORD PTR ds:0x1007f2a8,esi
100453bc:	push   edi
100453bd:	jne    0x10045430
100453bf:	mov    edi,DWORD PTR [esp+0xc]
100453c3:	cmp    edi,esi
100453c5:	jne    0x100453e6
100453c7:	call   0x100458a5
100453cc:	push   esi
100453cd:	push   esi
100453ce:	push   esi
100453cf:	push   esi
100453d0:	push   esi
100453d1:	mov    DWORD PTR [eax],0x16
100453d7:	call   0x1004228c
100453dc:	add    esp,0x14
100453df:	mov    eax,0x7fffffff
100453e4:	jmp    0x10045441
100453e6:	mov    edx,DWORD PTR [esp+0x10]
100453ea:	cmp    edx,esi
100453ec:	je     0x100453c7
100453ee:	movzx  eax,WORD PTR [edi]
100453f1:	cmp    ax,0x41
100453f5:	jb     0x10045400
100453f7:	cmp    ax,0x5a
100453fb:	ja     0x10045400
100453fd:	add    eax,0x20
10045400:	movzx  ecx,ax
10045403:	movzx  eax,WORD PTR [edx]
10045406:	cmp    ax,0x41
1004540a:	jb     0x10045415
1004540c:	cmp    ax,0x5a
10045410:	ja     0x10045415
10045412:	add    eax,0x20
10045415:	inc    edi
10045416:	inc    edi
10045417:	inc    edx
10045418:	inc    edx
10045419:	cmp    cx,si
1004541c:	movzx  eax,ax
1004541f:	je     0x10045426
10045421:	cmp    cx,ax
10045424:	je     0x100453ee
10045426:	movzx  edx,ax
10045429:	movzx  eax,cx
1004542c:	sub    eax,edx
1004542e:	jmp    0x10045441
10045430:	push   esi
10045431:	push   DWORD PTR [esp+0x14]
10045435:	push   DWORD PTR [esp+0x14]
10045439:	call   0x100452a4
1004543e:	add    esp,0xc
10045441:	pop    edi
10045442:	pop    esi
10045443:	ret    
10045444:	mov    edx,DWORD PTR [esp+0x4]
10045448:	push   esi
10045449:	mov    esi,DWORD PTR [esp+0xc]
1004544d:	push   edi
1004544e:	jmp    0x10045459
10045450:	test   cx,cx
10045453:	je     0x10045466
10045455:	inc    edx
10045456:	inc    edx
10045457:	inc    esi
10045458:	inc    esi
10045459:	movzx  ecx,WORD PTR [esi]
1004545c:	movzx  eax,WORD PTR [edx]
1004545f:	movzx  edi,cx
10045462:	sub    eax,edi
10045464:	je     0x10045450
10045466:	test   eax,eax
10045468:	pop    edi
10045469:	pop    esi
1004546a:	jge    0x10045470
1004546c:	or     eax,0xffffffff
1004546f:	ret    
10045470:	jle    0x10045475
10045472:	xor    eax,eax
10045474:	inc    eax
10045475:	ret    
10045476:	push   ebp
10045477:	mov    ebp,esp
10045479:	push   ecx
1004547a:	mov    eax,DWORD PTR [ebp+0xc]
1004547d:	cmp    eax,0x1
10045480:	push   ebx
10045481:	push   esi
10045482:	push   edi
10045483:	jne    0x100455a0
10045489:	mov    ebx,DWORD PTR ds:0x100651ac
1004548f:	mov    edi,0x94
10045494:	push   edi
10045495:	push   0x0
10045497:	call   ebx
10045499:	push   eax
1004549a:	call   DWORD PTR ds:0x1006518c
100454a0:	mov    esi,eax
100454a2:	test   esi,esi
100454a4:	jne    0x100454ad
100454a6:	xor    eax,eax
100454a8:	jmp    0x10045648
100454ad:	push   esi
100454ae:	mov    DWORD PTR [esi],edi
100454b0:	call   DWORD PTR ds:0x100651a8
100454b6:	test   eax,eax
100454b8:	push   esi
100454b9:	push   0x0
100454bb:	jne    0x100454c8
100454bd:	call   ebx
100454bf:	push   eax
100454c0:	call   DWORD PTR ds:0x10065188
100454c6:	jmp    0x100454a6
100454c8:	mov    eax,DWORD PTR [esi+0x10]
100454cb:	mov    edi,DWORD PTR [esi+0xc]
100454ce:	mov    DWORD PTR [ebp+0xc],eax
100454d1:	mov    eax,DWORD PTR [esi+0x4]
100454d4:	mov    DWORD PTR [ebp+0x10],eax
100454d7:	mov    eax,DWORD PTR [esi+0x8]
100454da:	mov    DWORD PTR [ebp-0x4],eax
100454dd:	and    edi,0x7fff
100454e3:	call   ebx
100454e5:	push   eax
100454e6:	call   DWORD PTR ds:0x10065188
100454ec:	mov    eax,DWORD PTR [ebp+0xc]
100454ef:	cmp    eax,0x2
100454f2:	je     0x100454fa
100454f4:	or     edi,0x8000
100454fa:	mov    ecx,DWORD PTR [ebp-0x4]
100454fd:	mov    ds:0x1007edc8,eax
10045502:	mov    eax,DWORD PTR [ebp+0x10]
10045505:	mov    edx,eax
10045507:	shl    edx,0x8
1004550a:	add    edx,ecx
1004550c:	push   0x1
1004550e:	mov    DWORD PTR ds:0x1007edd0,edx
10045514:	mov    ds:0x1007edd4,eax
10045519:	mov    DWORD PTR ds:0x1007edd8,ecx
1004551f:	mov    DWORD PTR ds:0x1007edcc,edi
10045525:	call   0x100467a9
1004552a:	test   eax,eax
1004552c:	pop    ecx
1004552d:	je     0x100454a6
10045533:	call   0x10045fee
10045538:	test   eax,eax
1004553a:	jne    0x10045546
1004553c:	call   0x10046803
10045541:	jmp    0x100454a6
10045546:	call   0x1004a4e8
1004554b:	call   DWORD PTR ds:0x100651a4
10045551:	mov    ds:0x1008159c,eax
10045556:	call   0x1004a3b3
1004555b:	mov    ds:0x1007ea78,eax
10045560:	call   0x10049dfb
10045565:	test   eax,eax
10045567:	jge    0x10045570
10045569:	call   0x10045cd8
1004556e:	jmp    0x1004553c
10045570:	call   0x1004a2fa
10045575:	test   eax,eax
10045577:	jl     0x10045599
10045579:	call   0x1004a087
1004557e:	test   eax,eax
10045580:	jl     0x10045599
10045582:	push   0x0
10045584:	call   0x10046404
10045589:	test   eax,eax
1004558b:	pop    ecx
1004558c:	jne    0x10045599
1004558e:	inc    DWORD PTR ds:0x1007ea74
10045594:	jmp    0x10045645
10045599:	call   0x1004a03b
1004559e:	jmp    0x10045569
100455a0:	xor    edi,edi
100455a2:	cmp    eax,edi
100455a4:	jne    0x100455db
100455a6:	cmp    DWORD PTR ds:0x1007ea74,edi
100455ac:	jle    0x100454a6
100455b2:	dec    DWORD PTR ds:0x1007ea74
100455b8:	cmp    DWORD PTR ds:0x1007ee04,edi
100455be:	jne    0x100455c5
100455c0:	call   0x10046575
100455c5:	cmp    DWORD PTR [ebp+0x10],edi
100455c8:	jne    0x10045645
100455ca:	call   0x1004a03b
100455cf:	call   0x10045cd8
100455d4:	call   0x10046803
100455d9:	jmp    0x10045645
100455db:	cmp    eax,0x2
100455de:	jne    0x10045639
100455e0:	call   0x10045cae
100455e5:	push   0x214
100455ea:	push   0x1
100455ec:	call   0x100461b2
100455f1:	mov    esi,eax
100455f3:	cmp    esi,edi
100455f5:	pop    ecx
100455f6:	pop    ecx
100455f7:	je     0x100454a6
100455fd:	push   esi
100455fe:	push   DWORD PTR ds:0x1007d1a8
10045604:	push   DWORD PTR ds:0x1007edb8
1004560a:	call   0x10045c42
1004560f:	pop    ecx
10045610:	call   eax
10045612:	test   eax,eax
10045614:	je     0x1004562d
10045616:	push   edi
10045617:	push   esi
10045618:	call   0x10045d15
1004561d:	pop    ecx
1004561e:	pop    ecx
1004561f:	call   DWORD PTR ds:0x10065160
10045625:	or     DWORD PTR [esi+0x4],0xffffffff
10045629:	mov    DWORD PTR [esi],eax
1004562b:	jmp    0x10045645
1004562d:	push   esi
1004562e:	call   0x10042408
10045633:	pop    ecx
10045634:	jmp    0x100454a6
10045639:	cmp    eax,0x3
1004563c:	jne    0x10045645
1004563e:	push   edi
1004563f:	call   0x10045f85
10045644:	pop    ecx
10045645:	xor    eax,eax
10045647:	inc    eax
10045648:	pop    edi
10045649:	pop    esi
1004564a:	pop    ebx
1004564b:	leave  
1004564c:	ret    0xc
1004564f:	push   0xc
10045651:	push   0x100731e0
10045656:	call   0x100459e4
1004565b:	mov    edi,ecx
1004565d:	mov    esi,edx
1004565f:	mov    ebx,DWORD PTR [ebp+0x8]
10045662:	xor    eax,eax
10045664:	inc    eax
10045665:	mov    DWORD PTR [ebp-0x1c],eax
10045668:	test   esi,esi
1004566a:	jne    0x10045678
1004566c:	cmp    DWORD PTR ds:0x1007ea74,edx
10045672:	je     0x1004573d
10045678:	and    DWORD PTR [ebp-0x4],0x0
1004567c:	cmp    esi,eax
1004567e:	je     0x10045685
10045680:	cmp    esi,0x2
10045683:	jne    0x100456b3
10045685:	mov    eax,ds:0x100655d8
1004568a:	test   eax,eax
1004568c:	je     0x10045696
1004568e:	push   edi
1004568f:	push   esi
10045690:	push   ebx
10045691:	call   eax
10045693:	mov    DWORD PTR [ebp-0x1c],eax
10045696:	cmp    DWORD PTR [ebp-0x1c],0x0
1004569a:	je     0x10045736
100456a0:	push   edi
100456a1:	push   esi
100456a2:	push   ebx
100456a3:	call   0x10045476
100456a8:	mov    DWORD PTR [ebp-0x1c],eax
100456ab:	test   eax,eax
100456ad:	je     0x10045736
100456b3:	push   edi
100456b4:	push   esi
100456b5:	push   ebx
100456b6:	call   0x1001613a
100456bb:	mov    DWORD PTR [ebp-0x1c],eax
100456be:	cmp    esi,0x1
100456c1:	jne    0x100456e7
100456c3:	test   eax,eax
100456c5:	jne    0x100456e7
100456c7:	push   edi
100456c8:	push   eax
100456c9:	push   ebx
100456ca:	call   0x1001613a
100456cf:	push   edi
100456d0:	push   0x0
100456d2:	push   ebx
100456d3:	call   0x10045476
100456d8:	mov    eax,ds:0x100655d8
100456dd:	test   eax,eax
100456df:	je     0x100456e7
100456e1:	push   edi
100456e2:	push   0x0
100456e4:	push   ebx
100456e5:	call   eax
100456e7:	test   esi,esi
100456e9:	je     0x100456f0
100456eb:	cmp    esi,0x3
100456ee:	jne    0x10045716
100456f0:	push   edi
100456f1:	push   esi
100456f2:	push   ebx
100456f3:	call   0x10045476
100456f8:	test   eax,eax
100456fa:	jne    0x100456ff
100456fc:	and    DWORD PTR [ebp-0x1c],eax
100456ff:	cmp    DWORD PTR [ebp-0x1c],0x0
10045703:	je     0x10045716
10045705:	mov    eax,ds:0x100655d8
1004570a:	test   eax,eax
1004570c:	je     0x10045716
1004570e:	push   edi
1004570f:	push   esi
10045710:	push   ebx
10045711:	call   eax
10045713:	mov    DWORD PTR [ebp-0x1c],eax
10045716:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004571d:	mov    eax,DWORD PTR [ebp-0x1c]
10045720:	jmp    0x1004573f
10045722:	mov    eax,DWORD PTR [ebp-0x14]
10045725:	mov    ecx,DWORD PTR [eax]
10045727:	mov    ecx,DWORD PTR [ecx]
10045729:	push   eax
1004572a:	push   ecx
1004572b:	call   0x1004a6a0
10045730:	pop    ecx
10045731:	pop    ecx
10045732:	ret    
10045733:	mov    esp,DWORD PTR [ebp-0x18]
10045736:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004573d:	xor    eax,eax
1004573f:	call   0x10045a29
10045744:	ret    
10045745:	cmp    DWORD PTR [esp+0x8],0x1
1004574a:	jne    0x10045751
1004574c:	call   0x1004a6bb
10045751:	push   DWORD PTR [esp+0x4]
10045755:	mov    ecx,DWORD PTR [esp+0x10]
10045759:	mov    edx,DWORD PTR [esp+0xc]
1004575d:	call   0x1004564f
10045762:	pop    ecx
10045763:	ret    0xc
10045766:	push   ebp
10045767:	mov    ebp,esp
10045769:	sub    esp,0x328
1004576f:	mov    ds:0x1007eb90,eax
10045774:	mov    DWORD PTR ds:0x1007eb8c,ecx
1004577a:	mov    DWORD PTR ds:0x1007eb88,edx
10045780:	mov    DWORD PTR ds:0x1007eb84,ebx
10045786:	mov    DWORD PTR ds:0x1007eb80,esi
1004578c:	mov    DWORD PTR ds:0x1007eb7c,edi
10045792:	data16 mov WORD PTR ds:0x1007eba8,ss
10045799:	data16 mov WORD PTR ds:0x1007eb9c,cs
100457a0:	data16 mov WORD PTR ds:0x1007eb78,ds
100457a7:	data16 mov WORD PTR ds:0x1007eb74,es
100457ae:	data16 mov WORD PTR ds:0x1007eb70,fs
100457b5:	data16 mov WORD PTR ds:0x1007eb6c,gs
100457bc:	pushf  
100457bd:	pop    DWORD PTR ds:0x1007eba0
100457c3:	mov    eax,DWORD PTR [ebp+0x0]
100457c6:	mov    ds:0x1007eb94,eax
100457cb:	mov    eax,DWORD PTR [ebp+0x4]
100457ce:	mov    ds:0x1007eb98,eax
100457d3:	lea    eax,[ebp+0x8]
100457d6:	mov    ds:0x1007eba4,eax
100457db:	mov    eax,DWORD PTR [ebp-0x320]
100457e1:	mov    DWORD PTR ds:0x1007eae0,0x10001
100457eb:	mov    eax,ds:0x1007eb98
100457f0:	mov    ds:0x1007ea94,eax
100457f5:	mov    DWORD PTR ds:0x1007ea88,0xc0000409
100457ff:	mov    DWORD PTR ds:0x1007ea8c,0x1
10045809:	mov    eax,ds:0x1007d030
1004580e:	mov    DWORD PTR [ebp-0x328],eax
10045814:	mov    eax,ds:0x1007d034
10045819:	mov    DWORD PTR [ebp-0x324],eax
1004581f:	call   DWORD PTR ds:0x10065184
10045825:	mov    ds:0x1007ead8,eax
1004582a:	push   0x1
1004582c:	call   0x100465d0
10045831:	pop    ecx
10045832:	push   0x0
10045834:	call   DWORD PTR ds:0x10065180
1004583a:	push   0x100655dc
1004583f:	call   DWORD PTR ds:0x1006517c
10045845:	cmp    DWORD PTR ds:0x1007ead8,0x0
1004584c:	jne    0x10045856
1004584e:	push   0x1
10045850:	call   0x100465d0
10045855:	pop    ecx
10045856:	push   0xc0000409
1004585b:	call   DWORD PTR ds:0x10065108
10045861:	push   eax
10045862:	call   DWORD PTR ds:0x10065178
10045868:	leave  
10045869:	ret    
1004586a:	mov    eax,DWORD PTR [esp+0x4]
1004586e:	xor    ecx,ecx
10045870:	cmp    eax,DWORD PTR [ecx*8+0x1007d038]
10045877:	je     0x1004588b
10045879:	inc    ecx
1004587a:	cmp    ecx,0x2d
1004587d:	jl     0x10045870
1004587f:	lea    ecx,[eax-0x13]
10045882:	cmp    ecx,0x11
10045885:	ja     0x10045893
10045887:	push   0xd
10045889:	pop    eax
1004588a:	ret    
1004588b:	mov    eax,DWORD PTR [ecx*8+0x1007d03c]
10045892:	ret    
10045893:	add    eax,0xffffff44
10045898:	push   0xe
1004589a:	pop    ecx
1004589b:	cmp    ecx,eax
1004589d:	sbb    eax,eax
1004589f:	and    eax,ecx
100458a1:	add    eax,0x8
100458a4:	ret    
100458a5:	call   0x10045dc9
100458aa:	test   eax,eax
100458ac:	jne    0x100458b4
100458ae:	mov    eax,0x1007d1a0
100458b3:	ret    
100458b4:	add    eax,0x8
100458b7:	ret    
100458b8:	call   0x10045dc9
100458bd:	test   eax,eax
100458bf:	jne    0x100458c7
100458c1:	mov    eax,0x1007d1a4
100458c6:	ret    
100458c7:	add    eax,0xc
100458ca:	ret    
100458cb:	push   esi
100458cc:	call   0x100458b8
100458d1:	mov    ecx,DWORD PTR [esp+0x8]
100458d5:	push   ecx
100458d6:	mov    DWORD PTR [eax],ecx
100458d8:	call   0x1004586a
100458dd:	pop    ecx
100458de:	mov    esi,eax
100458e0:	call   0x100458a5
100458e5:	mov    DWORD PTR [eax],esi
100458e7:	pop    esi
100458e8:	ret    
100458e9:	mov    ecx,DWORD PTR [esp+0x4]
100458ed:	push   ebx
100458ee:	xor    ebx,ebx
100458f0:	cmp    ecx,ebx
100458f2:	push   esi
100458f3:	push   edi
100458f4:	je     0x100458fe
100458f6:	mov    edi,DWORD PTR [esp+0x14]
100458fa:	cmp    edi,ebx
100458fc:	ja     0x10045919
100458fe:	call   0x100458a5
10045903:	push   0x16
10045905:	pop    esi
10045906:	mov    DWORD PTR [eax],esi
10045908:	push   ebx
10045909:	push   ebx
1004590a:	push   ebx
1004590b:	push   ebx
1004590c:	push   ebx
1004590d:	call   0x1004228c
10045912:	add    esp,0x14
10045915:	mov    eax,esi
10045917:	jmp    0x1004594a
10045919:	mov    esi,DWORD PTR [esp+0x18]
1004591d:	cmp    esi,ebx
1004591f:	jne    0x10045925
10045921:	mov    BYTE PTR [ecx],bl
10045923:	jmp    0x100458fe
10045925:	mov    edx,ecx
10045927:	mov    al,BYTE PTR [esi]
10045929:	mov    BYTE PTR [edx],al
1004592b:	inc    edx
1004592c:	inc    esi
1004592d:	cmp    al,bl
1004592f:	je     0x10045934
10045931:	dec    edi
10045932:	jne    0x10045927
10045934:	cmp    edi,ebx
10045936:	jne    0x10045948
10045938:	mov    BYTE PTR [ecx],bl
1004593a:	call   0x100458a5
1004593f:	push   0x22
10045941:	pop    ecx
10045942:	mov    DWORD PTR [eax],ecx
10045944:	mov    esi,ecx
10045946:	jmp    0x10045908
10045948:	xor    eax,eax
1004594a:	pop    edi
1004594b:	pop    esi
1004594c:	pop    ebx
1004594d:	ret    
1004594e:	push   0x8
10045950:	push   0x10073200
10045955:	call   0x100459e4
1004595a:	call   0x10045e4c
1004595f:	mov    eax,DWORD PTR [eax+0x78]
10045962:	test   eax,eax
10045964:	je     0x1004597c
10045966:	and    DWORD PTR [ebp-0x4],0x0
1004596a:	call   eax
1004596c:	jmp    0x10045975
1004596e:	xor    eax,eax
10045970:	inc    eax
10045971:	ret    
10045972:	mov    esp,DWORD PTR [ebp-0x18]
10045975:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004597c:	call   0x1004848b
10045981:	call   0x10045a29
10045986:	ret    
10045987:	call   0x10045e4c
1004598c:	mov    eax,DWORD PTR [eax+0x7c]
1004598f:	test   eax,eax
10045991:	je     0x10045995
10045993:	call   eax
10045995:	jmp    0x1004594e
1004599a:	push   0x8
1004599c:	push   0x10073220
100459a1:	call   0x100459e4
100459a6:	push   DWORD PTR ds:0x1007edac
100459ac:	call   0x10045c42
100459b1:	pop    ecx
100459b2:	test   eax,eax
100459b4:	je     0x100459cc
100459b6:	and    DWORD PTR [ebp-0x4],0x0
100459ba:	call   eax
100459bc:	jmp    0x100459c5
100459be:	xor    eax,eax
100459c0:	inc    eax
100459c1:	ret    
100459c2:	mov    esp,DWORD PTR [ebp-0x18]
100459c5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100459cc:	jmp    0x1004594e
100459d1:	push   0x1004594e
100459d6:	call   0x10045bd6
100459db:	pop    ecx
100459dc:	mov    ds:0x1007edac,eax
100459e1:	ret    
100459e2:	int3   
100459e3:	int3   
100459e4:	push   0x10045a40
100459e9:	push   DWORD PTR fs:0x0
100459f0:	mov    eax,DWORD PTR [esp+0x10]
100459f4:	mov    DWORD PTR [esp+0x10],ebp
100459f8:	lea    ebp,[esp+0x10]
100459fc:	sub    esp,eax
100459fe:	push   ebx
100459ff:	push   esi
10045a00:	push   edi
10045a01:	mov    eax,ds:0x1007d030
10045a06:	xor    DWORD PTR [ebp-0x4],eax
10045a09:	xor    eax,ebp
10045a0b:	push   eax
10045a0c:	mov    DWORD PTR [ebp-0x18],esp
10045a0f:	push   DWORD PTR [ebp-0x8]
10045a12:	mov    eax,DWORD PTR [ebp-0x4]
10045a15:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10045a1c:	mov    DWORD PTR [ebp-0x8],eax
10045a1f:	lea    eax,[ebp-0x10]
10045a22:	mov    fs:0x0,eax
10045a28:	ret    
10045a29:	mov    ecx,DWORD PTR [ebp-0x10]
10045a2c:	mov    DWORD PTR fs:0x0,ecx
10045a33:	pop    ecx
10045a34:	pop    edi
10045a35:	pop    edi
10045a36:	pop    esi
10045a37:	pop    ebx
10045a38:	mov    esp,ebp
10045a3a:	pop    ebp
10045a3b:	push   ecx
10045a3c:	ret    
10045a3d:	int3   
10045a3e:	int3   
10045a3f:	int3   
10045a40:	sub    esp,0x14
10045a43:	push   ebx
10045a44:	mov    ebx,DWORD PTR [esp+0x20]
10045a48:	push   ebp
10045a49:	push   esi
10045a4a:	mov    esi,DWORD PTR [ebx+0x8]
10045a4d:	xor    esi,DWORD PTR ds:0x1007d030
10045a53:	push   edi
10045a54:	mov    eax,DWORD PTR [esi]
10045a56:	cmp    eax,0xfffffffe
10045a59:	mov    BYTE PTR [esp+0x13],0x0
10045a5e:	mov    DWORD PTR [esp+0x18],0x1
10045a66:	lea    edi,[ebx+0x10]
10045a69:	je     0x10045a78
10045a6b:	mov    ecx,DWORD PTR [esi+0x4]
10045a6e:	add    ecx,edi
10045a70:	xor    ecx,DWORD PTR [eax+edi*1]
10045a73:	call   0x10041d97
10045a78:	mov    ecx,DWORD PTR [esi+0xc]
10045a7b:	mov    eax,DWORD PTR [esi+0x8]
10045a7e:	add    ecx,edi
10045a80:	xor    ecx,DWORD PTR [eax+edi*1]
10045a83:	call   0x10041d97
10045a88:	mov    eax,DWORD PTR [esp+0x28]
10045a8c:	test   BYTE PTR [eax+0x4],0x66
10045a90:	jne    0x10045bb5
10045a96:	mov    ebp,DWORD PTR [ebx+0xc]
10045a99:	cmp    ebp,0xfffffffe
10045a9c:	mov    ecx,DWORD PTR [esp+0x30]
10045aa0:	lea    edx,[esp+0x1c]
10045aa4:	mov    DWORD PTR [esp+0x1c],eax
10045aa8:	mov    DWORD PTR [esp+0x20],ecx
10045aac:	mov    DWORD PTR [ebx-0x4],edx
10045aaf:	je     0x10045b0f
10045ab1:	lea    eax,[ebp+ebp*2+0x0]
10045ab5:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
10045ab9:	test   ecx,ecx
10045abb:	lea    ebx,[esi+eax*4+0x10]
10045abf:	mov    eax,DWORD PTR [ebx]
10045ac1:	mov    DWORD PTR [esp+0x14],eax
10045ac5:	je     0x10045add
10045ac7:	mov    edx,edi
10045ac9:	call   0x1004a842
10045ace:	test   eax,eax
10045ad0:	mov    BYTE PTR [esp+0x13],0x1
10045ad5:	jl     0x10045b1b
10045ad7:	jg     0x10045b25
10045ad9:	mov    eax,DWORD PTR [esp+0x14]
10045add:	cmp    eax,0xfffffffe
10045ae0:	mov    ebp,eax
10045ae2:	jne    0x10045ab1
10045ae4:	cmp    BYTE PTR [esp+0x13],0x0
10045ae9:	je     0x10045b0f
10045aeb:	mov    eax,DWORD PTR [esi]
10045aed:	cmp    eax,0xfffffffe
10045af0:	je     0x10045aff
10045af2:	mov    ecx,DWORD PTR [esi+0x4]
10045af5:	add    ecx,edi
10045af7:	xor    ecx,DWORD PTR [eax+edi*1]
10045afa:	call   0x10041d97
10045aff:	mov    ecx,DWORD PTR [esi+0xc]
10045b02:	mov    eax,DWORD PTR [esi+0x8]
10045b05:	add    ecx,edi
10045b07:	xor    ecx,DWORD PTR [eax+edi*1]
10045b0a:	call   0x10041d97
10045b0f:	mov    eax,DWORD PTR [esp+0x18]
10045b13:	pop    edi
10045b14:	pop    esi
10045b15:	pop    ebp
10045b16:	pop    ebx
10045b17:	add    esp,0x14
10045b1a:	ret    
10045b1b:	mov    DWORD PTR [esp+0x18],0x0
10045b23:	jmp    0x10045aeb
10045b25:	mov    ecx,DWORD PTR [esp+0x28]
10045b29:	cmp    DWORD PTR [ecx],0xe06d7363
10045b2f:	jne    0x10045b5b
10045b31:	cmp    DWORD PTR ds:0x1006b8f8,0x0
10045b38:	je     0x10045b5b
10045b3a:	push   0x1006b8f8
10045b3f:	call   0x1004a922
10045b44:	add    esp,0x4
10045b47:	test   eax,eax
10045b49:	je     0x10045b5b
10045b4b:	mov    edx,DWORD PTR [esp+0x28]
10045b4f:	push   0x1
10045b51:	push   edx
10045b52:	call   DWORD PTR ds:0x1006b8f8
10045b58:	add    esp,0x8
10045b5b:	mov    ecx,DWORD PTR [esp+0x2c]
10045b5f:	call   0x1004a872
10045b64:	mov    eax,DWORD PTR [esp+0x2c]
10045b68:	cmp    DWORD PTR [eax+0xc],ebp
10045b6b:	je     0x10045b80
10045b6d:	push   0x1007d030
10045b72:	push   edi
10045b73:	mov    edx,ebp
10045b75:	mov    ecx,eax
10045b77:	call   0x1004a88c
10045b7c:	mov    eax,DWORD PTR [esp+0x2c]
10045b80:	mov    ecx,DWORD PTR [esp+0x14]
10045b84:	mov    DWORD PTR [eax+0xc],ecx
10045b87:	mov    eax,DWORD PTR [esi]
10045b89:	cmp    eax,0xfffffffe
10045b8c:	je     0x10045b9b
10045b8e:	mov    ecx,DWORD PTR [esi+0x4]
10045b91:	add    ecx,edi
10045b93:	xor    ecx,DWORD PTR [eax+edi*1]
10045b96:	call   0x10041d97
10045b9b:	mov    ecx,DWORD PTR [esi+0xc]
10045b9e:	mov    edx,DWORD PTR [esi+0x8]
10045ba1:	add    ecx,edi
10045ba3:	xor    ecx,DWORD PTR [edx+edi*1]
10045ba6:	call   0x10041d97
10045bab:	mov    ecx,DWORD PTR [ebx+0x8]
10045bae:	mov    edx,edi
10045bb0:	jmp    0x1004a859
10045bb5:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
10045bb9:	je     0x10045b0f
10045bbf:	push   0x1007d030
10045bc4:	push   edi
10045bc5:	mov    ecx,ebx
10045bc7:	mov    edx,0xfffffffe
10045bcc:	call   0x1004a88c
10045bd1:	jmp    0x10045aeb
10045bd6:	push   esi
10045bd7:	push   DWORD PTR ds:0x1007d1ac
10045bdd:	mov    esi,DWORD PTR ds:0x100651b0
10045be3:	call   esi
10045be5:	test   eax,eax
10045be7:	je     0x10045c0a
10045be9:	mov    eax,ds:0x1007d1a8
10045bee:	cmp    eax,0xffffffff
10045bf1:	je     0x10045c0a
10045bf3:	push   eax
10045bf4:	push   DWORD PTR ds:0x1007d1ac
10045bfa:	call   esi
10045bfc:	call   eax
10045bfe:	test   eax,eax
10045c00:	je     0x10045c0a
10045c02:	mov    eax,DWORD PTR [eax+0x1f8]
10045c08:	jmp    0x10045c25
10045c0a:	push   0x100655f4
10045c0f:	call   DWORD PTR ds:0x10065198
10045c15:	test   eax,eax
10045c17:	je     0x10045c33
10045c19:	push   0x100655e4
10045c1e:	push   eax
10045c1f:	call   DWORD PTR ds:0x1006512c
10045c25:	test   eax,eax
10045c27:	je     0x10045c33
10045c29:	push   DWORD PTR [esp+0x8]
10045c2d:	call   eax
10045c2f:	mov    DWORD PTR [esp+0x8],eax
10045c33:	mov    eax,DWORD PTR [esp+0x8]
10045c37:	pop    esi
10045c38:	ret    
10045c39:	push   0x0
10045c3b:	call   0x10045bd6
10045c40:	pop    ecx
10045c41:	ret    
10045c42:	push   esi
10045c43:	push   DWORD PTR ds:0x1007d1ac
10045c49:	mov    esi,DWORD PTR ds:0x100651b0
10045c4f:	call   esi
10045c51:	test   eax,eax
10045c53:	je     0x10045c76
10045c55:	mov    eax,ds:0x1007d1a8
10045c5a:	cmp    eax,0xffffffff
10045c5d:	je     0x10045c76
10045c5f:	push   eax
10045c60:	push   DWORD PTR ds:0x1007d1ac
10045c66:	call   esi
10045c68:	call   eax
10045c6a:	test   eax,eax
10045c6c:	je     0x10045c76
10045c6e:	mov    eax,DWORD PTR [eax+0x1fc]
10045c74:	jmp    0x10045c91
10045c76:	push   0x100655f4
10045c7b:	call   DWORD PTR ds:0x10065198
10045c81:	test   eax,eax
10045c83:	je     0x10045c9f
10045c85:	push   0x10065604
10045c8a:	push   eax
10045c8b:	call   DWORD PTR ds:0x1006512c
10045c91:	test   eax,eax
10045c93:	je     0x10045c9f
10045c95:	push   DWORD PTR [esp+0x8]
10045c99:	call   eax
10045c9b:	mov    DWORD PTR [esp+0x8],eax
10045c9f:	mov    eax,DWORD PTR [esp+0x8]
10045ca3:	pop    esi
10045ca4:	ret    
10045ca5:	call   DWORD PTR ds:0x100651b4
10045cab:	ret    0x4
10045cae:	push   DWORD PTR ds:0x1007d1ac
10045cb4:	call   DWORD PTR ds:0x100651b0
10045cba:	test   eax,eax
10045cbc:	jne    0x10045cd7
10045cbe:	push   DWORD PTR ds:0x1007edb4
10045cc4:	call   0x10045c42
10045cc9:	pop    ecx
10045cca:	push   eax
10045ccb:	push   DWORD PTR ds:0x1007d1ac
10045cd1:	call   DWORD PTR ds:0x100651b8
10045cd7:	ret    
10045cd8:	mov    eax,ds:0x1007d1a8
10045cdd:	cmp    eax,0xffffffff
10045ce0:	je     0x10045cf8
10045ce2:	push   eax
10045ce3:	push   DWORD PTR ds:0x1007edbc
10045ce9:	call   0x10045c42
10045cee:	pop    ecx
10045cef:	call   eax
10045cf1:	or     DWORD PTR ds:0x1007d1a8,0xffffffff
10045cf8:	mov    eax,ds:0x1007d1ac
10045cfd:	cmp    eax,0xffffffff
10045d00:	je     0x10045d10
10045d02:	push   eax
10045d03:	call   DWORD PTR ds:0x100651bc
10045d09:	or     DWORD PTR ds:0x1007d1ac,0xffffffff
10045d10:	jmp    0x100468c0
10045d15:	push   0xc
10045d17:	push   0x10073240
10045d1c:	call   0x100459e4
10045d21:	push   0x100655f4
10045d26:	call   DWORD PTR ds:0x10065198
10045d2c:	mov    DWORD PTR [ebp-0x1c],eax
10045d2f:	mov    esi,DWORD PTR [ebp+0x8]
10045d32:	mov    DWORD PTR [esi+0x5c],0x1007d9f8
10045d39:	xor    edi,edi
10045d3b:	inc    edi
10045d3c:	mov    DWORD PTR [esi+0x14],edi
10045d3f:	test   eax,eax
10045d41:	je     0x10045d67
10045d43:	push   0x100655e4
10045d48:	push   eax
10045d49:	mov    ebx,DWORD PTR ds:0x1006512c
10045d4f:	call   ebx
10045d51:	mov    DWORD PTR [esi+0x1f8],eax
10045d57:	push   0x10065604
10045d5c:	push   DWORD PTR [ebp-0x1c]
10045d5f:	call   ebx
10045d61:	mov    DWORD PTR [esi+0x1fc],eax
10045d67:	mov    DWORD PTR [esi+0x70],edi
10045d6a:	mov    BYTE PTR [esi+0xc8],0x43
10045d71:	mov    BYTE PTR [esi+0x14b],0x43
10045d78:	mov    eax,0x1007d3a0
10045d7d:	mov    DWORD PTR [esi+0x68],eax
10045d80:	push   eax
10045d81:	call   DWORD PTR ds:0x100650a4
10045d87:	push   0xc
10045d89:	call   0x100469ed
10045d8e:	pop    ecx
10045d8f:	and    DWORD PTR [ebp-0x4],0x0
10045d93:	mov    eax,DWORD PTR [ebp+0xc]
10045d96:	mov    DWORD PTR [esi+0x6c],eax
10045d99:	test   eax,eax
10045d9b:	jne    0x10045da5
10045d9d:	mov    eax,ds:0x1007d9a8
10045da2:	mov    DWORD PTR [esi+0x6c],eax
10045da5:	push   DWORD PTR [esi+0x6c]
10045da8:	call   0x10048078
10045dad:	pop    ecx
10045dae:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10045db5:	call   0x10045dc0
10045dba:	call   0x10045a29
10045dbf:	ret    
10045dc0:	push   0xc
10045dc2:	call   0x10046915
10045dc7:	pop    ecx
10045dc8:	ret    
10045dc9:	push   esi
10045dca:	push   edi
10045dcb:	call   DWORD PTR ds:0x100650c4
10045dd1:	mov    edi,eax
10045dd3:	call   0x10045cae
10045dd8:	push   DWORD PTR ds:0x1007d1a8
10045dde:	push   DWORD PTR ds:0x1007d1ac
10045de4:	call   DWORD PTR ds:0x100651b0
10045dea:	call   eax
10045dec:	mov    esi,eax
10045dee:	test   esi,esi
10045df0:	jne    0x10045e40
10045df2:	push   0x214
10045df7:	push   0x1
10045df9:	call   0x100461b2
10045dfe:	mov    esi,eax
10045e00:	test   esi,esi
10045e02:	pop    ecx
10045e03:	pop    ecx
10045e04:	je     0x10045e40
10045e06:	push   esi
10045e07:	push   DWORD PTR ds:0x1007d1a8
10045e0d:	push   DWORD PTR ds:0x1007edb8
10045e13:	call   0x10045c42
10045e18:	pop    ecx
10045e19:	call   eax
10045e1b:	test   eax,eax
10045e1d:	je     0x10045e37
10045e1f:	push   0x0
10045e21:	push   esi
10045e22:	call   0x10045d15
10045e27:	pop    ecx
10045e28:	pop    ecx
10045e29:	call   DWORD PTR ds:0x10065160
10045e2f:	or     DWORD PTR [esi+0x4],0xffffffff
10045e33:	mov    DWORD PTR [esi],eax
10045e35:	jmp    0x10045e40
10045e37:	push   esi
10045e38:	call   0x10042408
10045e3d:	pop    ecx
10045e3e:	xor    esi,esi
10045e40:	push   edi
10045e41:	call   DWORD PTR ds:0x1006515c
10045e47:	pop    edi
10045e48:	mov    eax,esi
10045e4a:	pop    esi
10045e4b:	ret    
10045e4c:	push   esi
10045e4d:	call   0x10045dc9
10045e52:	mov    esi,eax
10045e54:	test   esi,esi
10045e56:	jne    0x10045e60
10045e58:	push   0x10
10045e5a:	call   0x100462e8
10045e5f:	pop    ecx
10045e60:	mov    eax,esi
10045e62:	pop    esi
10045e63:	ret    
10045e64:	push   0x8
10045e66:	push   0x10073260
10045e6b:	call   0x100459e4
10045e70:	mov    esi,DWORD PTR [ebp+0x8]
10045e73:	test   esi,esi
10045e75:	je     0x10045f65
10045e7b:	mov    eax,DWORD PTR [esi+0x24]
10045e7e:	test   eax,eax
10045e80:	je     0x10045e89
10045e82:	push   eax
10045e83:	call   0x10042408
10045e88:	pop    ecx
10045e89:	mov    eax,DWORD PTR [esi+0x2c]
10045e8c:	test   eax,eax
10045e8e:	je     0x10045e97
10045e90:	push   eax
10045e91:	call   0x10042408
10045e96:	pop    ecx
10045e97:	mov    eax,DWORD PTR [esi+0x34]
10045e9a:	test   eax,eax
10045e9c:	je     0x10045ea5
10045e9e:	push   eax
10045e9f:	call   0x10042408
10045ea4:	pop    ecx
10045ea5:	mov    eax,DWORD PTR [esi+0x3c]
10045ea8:	test   eax,eax
10045eaa:	je     0x10045eb3
10045eac:	push   eax
10045ead:	call   0x10042408
10045eb2:	pop    ecx
10045eb3:	mov    eax,DWORD PTR [esi+0x44]
10045eb6:	test   eax,eax
10045eb8:	je     0x10045ec1
10045eba:	push   eax
10045ebb:	call   0x10042408
10045ec0:	pop    ecx
10045ec1:	mov    eax,DWORD PTR [esi+0x48]
10045ec4:	test   eax,eax
10045ec6:	je     0x10045ecf
10045ec8:	push   eax
10045ec9:	call   0x10042408
10045ece:	pop    ecx
10045ecf:	mov    eax,DWORD PTR [esi+0x5c]
10045ed2:	cmp    eax,0x1007d9f8
10045ed7:	je     0x10045ee0
10045ed9:	push   eax
10045eda:	call   0x10042408
10045edf:	pop    ecx
10045ee0:	push   0xd
10045ee2:	call   0x100469ed
10045ee7:	pop    ecx
10045ee8:	and    DWORD PTR [ebp-0x4],0x0
10045eec:	mov    edi,DWORD PTR [esi+0x68]
10045eef:	test   edi,edi
10045ef1:	je     0x10045f0d
10045ef3:	push   edi
10045ef4:	call   DWORD PTR ds:0x100650ac
10045efa:	test   eax,eax
10045efc:	jne    0x10045f0d
10045efe:	cmp    edi,0x1007d3a0
10045f04:	je     0x10045f0d
10045f06:	push   edi
10045f07:	call   0x10042408
10045f0c:	pop    ecx
10045f0d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10045f14:	call   0x10045f70
10045f19:	push   0xc
10045f1b:	call   0x100469ed
10045f20:	pop    ecx
10045f21:	mov    DWORD PTR [ebp-0x4],0x1
10045f28:	mov    edi,DWORD PTR [esi+0x6c]
10045f2b:	test   edi,edi
10045f2d:	je     0x10045f52
10045f2f:	push   edi
10045f30:	call   0x100480fe
10045f35:	pop    ecx
10045f36:	cmp    edi,DWORD PTR ds:0x1007d9a8
10045f3c:	je     0x10045f52
10045f3e:	cmp    edi,0x1007d8d0
10045f44:	je     0x10045f52
10045f46:	cmp    DWORD PTR [edi],0x0
10045f49:	jne    0x10045f52
10045f4b:	push   edi
10045f4c:	call   0x10047f38
10045f51:	pop    ecx
10045f52:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10045f59:	call   0x10045f7c
10045f5e:	push   esi
10045f5f:	call   0x10042408
10045f64:	pop    ecx
10045f65:	call   0x10045a29
10045f6a:	ret    0x4
10045f6d:	mov    esi,DWORD PTR [ebp+0x8]
10045f70:	push   0xd
10045f72:	call   0x10046915
10045f77:	pop    ecx
10045f78:	ret    
10045f79:	mov    esi,DWORD PTR [ebp+0x8]
10045f7c:	push   0xc
10045f7e:	call   0x10046915
10045f83:	pop    ecx
10045f84:	ret    
10045f85:	cmp    DWORD PTR ds:0x1007d1a8,0xffffffff
10045f8c:	je     0x10045fda
10045f8e:	push   edi
10045f8f:	mov    edi,DWORD PTR [esp+0x8]
10045f93:	test   edi,edi
10045f95:	jne    0x10045fbd
10045f97:	push   esi
10045f98:	push   DWORD PTR ds:0x1007d1ac
10045f9e:	mov    esi,DWORD PTR ds:0x100651b0
10045fa4:	call   esi
10045fa6:	test   eax,eax
10045fa8:	je     0x10045fbc
10045faa:	push   DWORD PTR ds:0x1007d1a8
10045fb0:	push   DWORD PTR ds:0x1007d1ac
10045fb6:	call   esi
10045fb8:	call   eax
10045fba:	mov    edi,eax
10045fbc:	pop    esi
10045fbd:	push   0x0
10045fbf:	push   DWORD PTR ds:0x1007d1a8
10045fc5:	push   DWORD PTR ds:0x1007edb8
10045fcb:	call   0x10045c42
10045fd0:	pop    ecx
10045fd1:	call   eax
10045fd3:	push   edi
10045fd4:	call   0x10045e64
10045fd9:	pop    edi
10045fda:	mov    eax,ds:0x1007d1ac
10045fdf:	cmp    eax,0xffffffff
10045fe2:	je     0x10045fed
10045fe4:	push   0x0
10045fe6:	push   eax
10045fe7:	call   DWORD PTR ds:0x100651b8
10045fed:	ret    
10045fee:	push   edi
10045fef:	push   0x100655f4
10045ff4:	call   DWORD PTR ds:0x10065198
10045ffa:	mov    edi,eax
10045ffc:	test   edi,edi
10045ffe:	jne    0x10046009
10046000:	call   0x10045cd8
10046005:	xor    eax,eax
10046007:	pop    edi
10046008:	ret    
10046009:	push   esi
1004600a:	mov    esi,DWORD PTR ds:0x1006512c
10046010:	push   0x10065634
10046015:	push   edi
10046016:	call   esi
10046018:	push   0x10065628
1004601d:	push   edi
1004601e:	mov    ds:0x1007edb0,eax
10046023:	call   esi
10046025:	push   0x1006561c
1004602a:	push   edi
1004602b:	mov    ds:0x1007edb4,eax
10046030:	call   esi
10046032:	push   0x10065614
10046037:	push   edi
10046038:	mov    ds:0x1007edb8,eax
1004603d:	call   esi
1004603f:	cmp    DWORD PTR ds:0x1007edb0,0x0
10046046:	mov    esi,DWORD PTR ds:0x100651b8
1004604c:	mov    ds:0x1007edbc,eax
10046051:	je     0x10046069
10046053:	cmp    DWORD PTR ds:0x1007edb4,0x0
1004605a:	je     0x10046069
1004605c:	cmp    DWORD PTR ds:0x1007edb8,0x0
10046063:	je     0x10046069
10046065:	test   eax,eax
10046067:	jne    0x1004608d
10046069:	mov    eax,ds:0x100651b0
1004606e:	mov    ds:0x1007edb4,eax
10046073:	mov    eax,ds:0x100651bc
10046078:	mov    DWORD PTR ds:0x1007edb0,0x10045ca5
10046082:	mov    DWORD PTR ds:0x1007edb8,esi
10046088:	mov    ds:0x1007edbc,eax
1004608d:	call   DWORD PTR ds:0x100651b4
10046093:	cmp    eax,0xffffffff
10046096:	mov    ds:0x1007d1ac,eax
1004609b:	je     0x1004616d
100460a1:	push   DWORD PTR ds:0x1007edb4
100460a7:	push   eax
100460a8:	call   esi
100460aa:	test   eax,eax
100460ac:	je     0x1004616d
100460b2:	call   0x10046584
100460b7:	push   DWORD PTR ds:0x1007edb0
100460bd:	call   0x10045bd6
100460c2:	push   DWORD PTR ds:0x1007edb4
100460c8:	mov    ds:0x1007edb0,eax
100460cd:	call   0x10045bd6
100460d2:	push   DWORD PTR ds:0x1007edb8
100460d8:	mov    ds:0x1007edb4,eax
100460dd:	call   0x10045bd6
100460e2:	push   DWORD PTR ds:0x1007edbc
100460e8:	mov    ds:0x1007edb8,eax
100460ed:	call   0x10045bd6
100460f2:	add    esp,0x10
100460f5:	mov    ds:0x1007edbc,eax
100460fa:	call   0x10046877
100460ff:	test   eax,eax
10046101:	je     0x10046168
10046103:	push   0x10045e64
10046108:	push   DWORD PTR ds:0x1007edb0
1004610e:	call   0x10045c42
10046113:	pop    ecx
10046114:	call   eax
10046116:	cmp    eax,0xffffffff
10046119:	mov    ds:0x1007d1a8,eax
1004611e:	je     0x10046168
10046120:	push   0x214
10046125:	push   0x1
10046127:	call   0x100461b2
1004612c:	mov    esi,eax
1004612e:	test   esi,esi
10046130:	pop    ecx
10046131:	pop    ecx
10046132:	je     0x10046168
10046134:	push   esi
10046135:	push   DWORD PTR ds:0x1007d1a8
1004613b:	push   DWORD PTR ds:0x1007edb8
10046141:	call   0x10045c42
10046146:	pop    ecx
10046147:	call   eax
10046149:	test   eax,eax
1004614b:	je     0x10046168
1004614d:	push   0x0
1004614f:	push   esi
10046150:	call   0x10045d15
10046155:	pop    ecx
10046156:	pop    ecx
10046157:	call   DWORD PTR ds:0x10065160
1004615d:	or     DWORD PTR [esi+0x4],0xffffffff
10046161:	mov    DWORD PTR [esi],eax
10046163:	xor    eax,eax
10046165:	inc    eax
10046166:	jmp    0x1004616f
10046168:	call   0x10045cd8
1004616d:	xor    eax,eax
1004616f:	pop    esi
10046170:	pop    edi
10046171:	ret    
10046172:	push   esi
10046173:	push   edi
10046174:	xor    esi,esi
10046176:	push   DWORD PTR [esp+0xc]
1004617a:	call   0x10043cdd
1004617f:	mov    edi,eax
10046181:	test   edi,edi
10046183:	pop    ecx
10046184:	jne    0x100461ad
10046186:	cmp    DWORD PTR ds:0x1007edc0,eax
1004618c:	jbe    0x100461ad
1004618e:	push   esi
1004618f:	call   DWORD PTR ds:0x100650b8
10046195:	lea    eax,[esi+0x3e8]
1004619b:	cmp    eax,DWORD PTR ds:0x1007edc0
100461a1:	jbe    0x100461a6
100461a3:	or     eax,0xffffffff
100461a6:	cmp    eax,0xffffffff
100461a9:	mov    esi,eax
100461ab:	jne    0x10046176
100461ad:	mov    eax,edi
100461af:	pop    edi
100461b0:	pop    esi
100461b1:	ret    
100461b2:	push   esi
100461b3:	push   edi
100461b4:	xor    esi,esi
100461b6:	push   0x0
100461b8:	push   DWORD PTR [esp+0x14]
100461bc:	push   DWORD PTR [esp+0x14]
100461c0:	call   0x10042496
100461c5:	mov    edi,eax
100461c7:	add    esp,0xc
100461ca:	test   edi,edi
100461cc:	jne    0x100461f5
100461ce:	cmp    DWORD PTR ds:0x1007edc0,eax
100461d4:	jbe    0x100461f5
100461d6:	push   esi
100461d7:	call   DWORD PTR ds:0x100650b8
100461dd:	lea    eax,[esi+0x3e8]
100461e3:	cmp    eax,DWORD PTR ds:0x1007edc0
100461e9:	jbe    0x100461ee
100461eb:	or     eax,0xffffffff
100461ee:	cmp    eax,0xffffffff
100461f1:	mov    esi,eax
100461f3:	jne    0x100461b6
100461f5:	mov    eax,edi
100461f7:	pop    edi
100461f8:	pop    esi
100461f9:	ret    
100461fa:	push   esi
100461fb:	push   edi
100461fc:	xor    esi,esi
100461fe:	push   DWORD PTR [esp+0x10]
10046202:	push   DWORD PTR [esp+0x10]
10046206:	call   0x10044ef8
1004620b:	mov    edi,eax
1004620d:	test   edi,edi
1004620f:	pop    ecx
10046210:	pop    ecx
10046211:	jne    0x10046240
10046213:	cmp    DWORD PTR [esp+0x10],eax
10046217:	je     0x10046240
10046219:	cmp    DWORD PTR ds:0x1007edc0,eax
1004621f:	jbe    0x10046240
10046221:	push   esi
10046222:	call   DWORD PTR ds:0x100650b8
10046228:	lea    eax,[esi+0x3e8]
1004622e:	cmp    eax,DWORD PTR ds:0x1007edc0
10046234:	jbe    0x10046239
10046236:	or     eax,0xffffffff
10046239:	cmp    eax,0xffffffff
1004623c:	mov    esi,eax
1004623e:	jne    0x100461fe
10046240:	mov    eax,edi
10046242:	pop    edi
10046243:	pop    esi
10046244:	ret    
10046245:	push   0x10
10046247:	push   0x10073288
1004624c:	call   0x100459e4
10046251:	xor    eax,eax
10046253:	mov    ebx,DWORD PTR [ebp+0x8]
10046256:	xor    edi,edi
10046258:	cmp    ebx,edi
1004625a:	setne  al
1004625d:	cmp    eax,edi
1004625f:	jne    0x1004627e
10046261:	call   0x100458a5
10046266:	mov    DWORD PTR [eax],0x16
1004626c:	push   edi
1004626d:	push   edi
1004626e:	push   edi
1004626f:	push   edi
10046270:	push   edi
10046271:	call   0x1004228c
10046276:	add    esp,0x14
10046279:	or     eax,0xffffffff
1004627c:	jmp    0x100462d1
1004627e:	cmp    DWORD PTR ds:0x10081580,0x3
10046285:	jne    0x100462bf
10046287:	push   0x4
10046289:	call   0x100469ed
1004628e:	pop    ecx
1004628f:	mov    DWORD PTR [ebp-0x4],edi
10046292:	push   ebx
10046293:	call   0x10046a66
10046298:	pop    ecx
10046299:	mov    DWORD PTR [ebp-0x20],eax
1004629c:	cmp    eax,edi
1004629e:	je     0x100462ab
100462a0:	mov    esi,DWORD PTR [ebx-0x4]
100462a3:	sub    esi,0x9
100462a6:	mov    DWORD PTR [ebp-0x1c],esi
100462a9:	jmp    0x100462ae
100462ab:	mov    esi,DWORD PTR [ebp-0x1c]
100462ae:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100462b5:	call   0x100462df
100462ba:	cmp    DWORD PTR [ebp-0x20],edi
100462bd:	jne    0x100462cf
100462bf:	push   ebx
100462c0:	push   edi
100462c1:	push   DWORD PTR ds:0x1007ee18
100462c7:	call   DWORD PTR ds:0x100651c0
100462cd:	mov    esi,eax
100462cf:	mov    eax,esi
100462d1:	call   0x10045a29
100462d6:	ret    
100462d7:	xor    edi,edi
100462d9:	mov    ebx,DWORD PTR [ebp+0x8]
100462dc:	mov    esi,DWORD PTR [ebp-0x1c]
100462df:	push   0x4
100462e1:	call   0x10046915
100462e6:	pop    ecx
100462e7:	ret    
100462e8:	call   0x100476bd
100462ed:	push   DWORD PTR [esp+0x4]
100462f1:	call   0x1004751d
100462f6:	push   DWORD PTR ds:0x1007d1b0
100462fc:	call   0x10045c42
10046301:	push   0xff
10046306:	call   eax
10046308:	add    esp,0xc
1004630b:	ret    
1004630c:	push   0x10065650
10046311:	call   DWORD PTR ds:0x10065198
10046317:	test   eax,eax
10046319:	je     0x10046331
1004631b:	push   0x10065640
10046320:	push   eax
10046321:	call   DWORD PTR ds:0x1006512c
10046327:	test   eax,eax
10046329:	je     0x10046331
1004632b:	push   DWORD PTR [esp+0x4]
1004632f:	call   eax
10046331:	ret    
10046332:	push   DWORD PTR [esp+0x4]
10046336:	call   0x1004630c
1004633b:	pop    ecx
1004633c:	push   DWORD PTR [esp+0x4]
10046340:	call   DWORD PTR ds:0x100651c4
10046346:	int3   
10046347:	push   0x8
10046349:	call   0x100469ed
1004634e:	pop    ecx
1004634f:	ret    
10046350:	push   0x8
10046352:	call   0x10046915
10046357:	pop    ecx
10046358:	ret    
10046359:	push   esi
1004635a:	mov    esi,eax
1004635c:	jmp    0x10046369
1004635e:	mov    eax,DWORD PTR [esi]
10046360:	test   eax,eax
10046362:	je     0x10046366
10046364:	call   eax
10046366:	add    esi,0x4
10046369:	cmp    esi,DWORD PTR [esp+0x8]
1004636d:	jb     0x1004635e
1004636f:	pop    esi
10046370:	ret    
10046371:	push   esi
10046372:	mov    esi,DWORD PTR [esp+0x8]
10046376:	xor    eax,eax
10046378:	jmp    0x10046389
1004637a:	test   eax,eax
1004637c:	jne    0x1004638f
1004637e:	mov    ecx,DWORD PTR [esi]
10046380:	test   ecx,ecx
10046382:	je     0x10046386
10046384:	call   ecx
10046386:	add    esi,0x4
10046389:	cmp    esi,DWORD PTR [esp+0xc]
1004638d:	jb     0x1004637a
1004638f:	pop    esi
10046390:	ret    
10046391:	mov    ecx,DWORD PTR [esp+0x4]
10046395:	push   esi
10046396:	xor    esi,esi
10046398:	cmp    ecx,esi
1004639a:	jne    0x100463b9
1004639c:	call   0x100458a5
100463a1:	push   esi
100463a2:	push   esi
100463a3:	push   esi
100463a4:	push   esi
100463a5:	push   esi
100463a6:	mov    DWORD PTR [eax],0x16
100463ac:	call   0x1004228c
100463b1:	add    esp,0x14
100463b4:	push   0x16
100463b6:	pop    eax
100463b7:	pop    esi
100463b8:	ret    
100463b9:	mov    eax,ds:0x1007edc8
100463be:	cmp    eax,esi
100463c0:	je     0x1004639c
100463c2:	mov    DWORD PTR [ecx],eax
100463c4:	xor    eax,eax
100463c6:	pop    esi
100463c7:	ret    
100463c8:	mov    eax,DWORD PTR [esp+0x4]
100463cc:	push   esi
100463cd:	xor    esi,esi
100463cf:	cmp    eax,esi
100463d1:	jne    0x100463f0
100463d3:	call   0x100458a5
100463d8:	push   esi
100463d9:	push   esi
100463da:	push   esi
100463db:	push   esi
100463dc:	push   esi
100463dd:	mov    DWORD PTR [eax],0x16
100463e3:	call   0x1004228c
100463e8:	add    esp,0x14
100463eb:	push   0x16
100463ed:	pop    eax
100463ee:	pop    esi
100463ef:	ret    
100463f0:	cmp    DWORD PTR ds:0x1007edc8,esi
100463f6:	je     0x100463d3
100463f8:	mov    ecx,DWORD PTR ds:0x1007edd4
100463fe:	mov    DWORD PTR [eax],ecx
10046400:	xor    eax,eax
10046402:	pop    esi
10046403:	ret    
10046404:	cmp    DWORD PTR ds:0x1006b8c8,0x0
1004640b:	je     0x10046427
1004640d:	push   0x1006b8c8
10046412:	call   0x1004a922
10046417:	test   eax,eax
10046419:	pop    ecx
1004641a:	je     0x10046427
1004641c:	push   DWORD PTR [esp+0x4]
10046420:	call   DWORD PTR ds:0x1006b8c8
10046426:	pop    ecx
10046427:	call   0x1004a98e
1004642c:	push   0x10065550
10046431:	push   0x10065534
10046436:	call   0x10046371
1004643b:	test   eax,eax
1004643d:	pop    ecx
1004643e:	pop    ecx
1004643f:	jne    0x10046495
10046441:	push   esi
10046442:	push   edi
10046443:	push   0x1004a50c
10046448:	call   0x10042174
1004644d:	mov    esi,0x10065444
10046452:	mov    eax,esi
10046454:	mov    edi,0x10065530
10046459:	cmp    eax,edi
1004645b:	pop    ecx
1004645c:	jae    0x1004646d
1004645e:	mov    eax,DWORD PTR [esi]
10046460:	test   eax,eax
10046462:	je     0x10046466
10046464:	call   eax
10046466:	add    esi,0x4
10046469:	cmp    esi,edi
1004646b:	jb     0x1004645e
1004646d:	cmp    DWORD PTR ds:0x10081598,0x0
10046474:	pop    edi
10046475:	pop    esi
10046476:	je     0x10046493
10046478:	push   0x10081598
1004647d:	call   0x1004a922
10046482:	test   eax,eax
10046484:	pop    ecx
10046485:	je     0x10046493
10046487:	push   0x0
10046489:	push   0x2
1004648b:	push   0x0
1004648d:	call   DWORD PTR ds:0x10081598
10046493:	xor    eax,eax
10046495:	ret    
10046496:	push   0xc
10046498:	push   0x100732a8
1004649d:	call   0x100459e4
100464a2:	push   0x8
100464a4:	call   0x100469ed
100464a9:	pop    ecx
100464aa:	and    DWORD PTR [ebp-0x4],0x0
100464ae:	xor    esi,esi
100464b0:	inc    esi
100464b1:	cmp    DWORD PTR ds:0x1007ee08,esi
100464b7:	je     0x10046524
100464b9:	mov    DWORD PTR ds:0x1007ee04,esi
100464bf:	mov    al,BYTE PTR [ebp+0x10]
100464c2:	mov    ds:0x1007ee00,al
100464c7:	cmp    DWORD PTR [ebp+0xc],0x0
100464cb:	jne    0x10046514
100464cd:	push   DWORD PTR ds:0x10081590
100464d3:	call   0x10045c42
100464d8:	mov    edi,eax
100464da:	push   DWORD PTR ds:0x1008158c
100464e0:	call   0x10045c42
100464e5:	pop    ecx
100464e6:	pop    ecx
100464e7:	mov    DWORD PTR [ebp-0x1c],eax
100464ea:	test   edi,edi
100464ec:	je     0x10046504
100464ee:	sub    DWORD PTR [ebp-0x1c],0x4
100464f2:	cmp    DWORD PTR [ebp-0x1c],edi
100464f5:	jb     0x10046504
100464f7:	mov    eax,DWORD PTR [ebp-0x1c]
100464fa:	mov    eax,DWORD PTR [eax]
100464fc:	test   eax,eax
100464fe:	je     0x100464ee
10046500:	call   eax
10046502:	jmp    0x100464ee
10046504:	push   0x10065560
10046509:	mov    eax,0x10065554
1004650e:	call   0x10046359
10046513:	pop    ecx
10046514:	push   0x1006556c
10046519:	mov    eax,0x10065564
1004651e:	call   0x10046359
10046523:	pop    ecx
10046524:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004652b:	call   0x1004654f
10046530:	cmp    DWORD PTR [ebp+0x10],0x0
10046534:	jne    0x1004655e
10046536:	mov    DWORD PTR ds:0x1007ee08,esi
1004653c:	push   0x8
1004653e:	call   0x10046915
10046543:	pop    ecx
10046544:	push   DWORD PTR [ebp+0x8]
10046547:	call   0x10046332
1004654c:	xor    esi,esi
1004654e:	inc    esi
1004654f:	cmp    DWORD PTR [ebp+0x10],0x0
10046553:	je     0x1004655d
10046555:	push   0x8
10046557:	call   0x10046915
1004655c:	pop    ecx
1004655d:	ret    
1004655e:	call   0x10045a29
10046563:	ret    
10046564:	push   0x0
10046566:	push   0x1
10046568:	push   DWORD PTR [esp+0xc]
1004656c:	call   0x10046496
10046571:	add    esp,0xc
10046574:	ret    
10046575:	push   0x1
10046577:	push   0x0
10046579:	push   0x0
1004657b:	call   0x10046496
10046580:	add    esp,0xc
10046583:	ret    
10046584:	push   esi
10046585:	call   0x10045c39
1004658a:	mov    esi,eax
1004658c:	push   esi
1004658d:	call   0x100466d8
10046592:	push   esi
10046593:	call   0x1004abc1
10046598:	push   esi
10046599:	call   0x10042186
1004659e:	push   esi
1004659f:	call   0x1004859c
100465a4:	push   esi
100465a5:	call   0x1004abb7
100465aa:	push   esi
100465ab:	call   0x1004a9ad
100465b0:	push   esi
100465b1:	call   0x1004a530
100465b6:	push   esi
100465b7:	call   0x100459d1
100465bc:	push   0x10046564
100465c1:	call   0x10045bd6
100465c6:	add    esp,0x24
100465c9:	mov    ds:0x1007d1b0,eax
100465ce:	pop    esi
100465cf:	ret    
100465d0:	and    DWORD PTR ds:0x10081584,0x0
100465d7:	ret    
100465d8:	push   0xc
100465da:	push   0x100732c8
100465df:	call   0x100459e4
100465e4:	push   0xe
100465e6:	call   0x100469ed
100465eb:	pop    ecx
100465ec:	and    DWORD PTR [ebp-0x4],0x0
100465f0:	mov    esi,DWORD PTR [ebp+0x8]
100465f3:	mov    ecx,DWORD PTR [esi+0x4]
100465f6:	test   ecx,ecx
100465f8:	je     0x10046629
100465fa:	mov    eax,ds:0x1007ee10
100465ff:	mov    edx,0x1007ee0c
10046604:	mov    DWORD PTR [ebp-0x1c],eax
10046607:	test   eax,eax
10046609:	je     0x1004661c
1004660b:	cmp    DWORD PTR [eax],ecx
1004660d:	jne    0x1004663b
1004660f:	mov    ecx,DWORD PTR [eax+0x4]
10046612:	mov    DWORD PTR [edx+0x4],ecx
10046615:	push   eax
10046616:	call   0x10042408
1004661b:	pop    ecx
1004661c:	push   DWORD PTR [esi+0x4]
1004661f:	call   0x10042408
10046624:	pop    ecx
10046625:	and    DWORD PTR [esi+0x4],0x0
10046629:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10046630:	call   0x1004663f
10046635:	call   0x10045a29
1004663a:	ret    
1004663b:	mov    edx,eax
1004663d:	jmp    0x10046604
1004663f:	push   0xe
10046641:	call   0x10046915
10046646:	pop    ecx
10046647:	ret    
10046648:	int3   
10046649:	int3   
1004664a:	int3   
1004664b:	int3   
1004664c:	int3   
1004664d:	int3   
1004664e:	int3   
1004664f:	int3   
10046650:	mov    edx,DWORD PTR [esp+0x4]
10046654:	mov    ecx,DWORD PTR [esp+0x8]
10046658:	test   edx,0x3
1004665e:	jne    0x1004669c
10046660:	mov    eax,DWORD PTR [edx]
10046662:	cmp    al,BYTE PTR [ecx]
10046664:	jne    0x10046694
10046666:	or     al,al
10046668:	je     0x10046690
1004666a:	cmp    ah,BYTE PTR [ecx+0x1]
1004666d:	jne    0x10046694
1004666f:	or     ah,ah
10046671:	je     0x10046690
10046673:	shr    eax,0x10
10046676:	cmp    al,BYTE PTR [ecx+0x2]
10046679:	jne    0x10046694
1004667b:	or     al,al
1004667d:	je     0x10046690
1004667f:	cmp    ah,BYTE PTR [ecx+0x3]
10046682:	jne    0x10046694
10046684:	add    ecx,0x4
10046687:	add    edx,0x4
1004668a:	or     ah,ah
1004668c:	jne    0x10046660
1004668e:	mov    edi,edi
10046690:	xor    eax,eax
10046692:	ret    
10046693:	nop
10046694:	sbb    eax,eax
10046696:	shl    eax,1
10046698:	add    eax,0x1
1004669b:	ret    
1004669c:	test   edx,0x1
100466a2:	je     0x100466bc
100466a4:	mov    al,BYTE PTR [edx]
100466a6:	add    edx,0x1
100466a9:	cmp    al,BYTE PTR [ecx]
100466ab:	jne    0x10046694
100466ad:	add    ecx,0x1
100466b0:	or     al,al
100466b2:	je     0x10046690
100466b4:	test   edx,0x2
100466ba:	je     0x10046660
100466bc:	mov    ax,WORD PTR [edx]
100466bf:	add    edx,0x2
100466c2:	cmp    al,BYTE PTR [ecx]
100466c4:	jne    0x10046694
100466c6:	or     al,al
100466c8:	je     0x10046690
100466ca:	cmp    ah,BYTE PTR [ecx+0x1]
100466cd:	jne    0x10046694
100466cf:	or     ah,ah
100466d1:	je     0x10046690
100466d3:	add    ecx,0x2
100466d6:	jmp    0x10046660
100466d8:	mov    eax,DWORD PTR [esp+0x4]
100466dc:	mov    ds:0x1007ee14,eax
100466e1:	ret    
100466e2:	push   DWORD PTR ds:0x1007ee14
100466e8:	call   0x10045c42
100466ed:	test   eax,eax
100466ef:	pop    ecx
100466f0:	je     0x10046701
100466f2:	push   DWORD PTR [esp+0x4]
100466f6:	call   eax
100466f8:	test   eax,eax
100466fa:	pop    ecx
100466fb:	je     0x10046701
100466fd:	xor    eax,eax
100466ff:	inc    eax
10046700:	ret    
10046701:	xor    eax,eax
10046703:	ret    
10046704:	push   ebp
10046705:	mov    ebp,esp
10046707:	sub    esp,0x20
1004670a:	mov    eax,DWORD PTR [ebp+0x8]
1004670d:	push   esi
1004670e:	push   edi
1004670f:	push   0x8
10046711:	pop    ecx
10046712:	mov    esi,0x1006565c
10046717:	lea    edi,[ebp-0x20]
1004671a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004671c:	mov    DWORD PTR [ebp-0x8],eax
1004671f:	mov    eax,DWORD PTR [ebp+0xc]
10046722:	test   eax,eax
10046724:	pop    edi
10046725:	mov    DWORD PTR [ebp-0x4],eax
10046728:	pop    esi
10046729:	je     0x10046737
1004672b:	test   BYTE PTR [eax],0x8
1004672e:	je     0x10046737
10046730:	mov    DWORD PTR [ebp-0xc],0x1994000
10046737:	lea    eax,[ebp-0xc]
1004673a:	push   eax
1004673b:	push   DWORD PTR [ebp-0x10]
1004673e:	push   DWORD PTR [ebp-0x1c]
10046741:	push   DWORD PTR [ebp-0x20]
10046744:	call   DWORD PTR ds:0x10065128
1004674a:	leave  
1004674b:	ret    0x8
1004674e:	push   ebp
1004674f:	mov    ebp,esp
10046751:	push   ecx
10046752:	push   ecx
10046753:	push   esi
10046754:	lea    eax,[ebp-0x4]
10046757:	xor    esi,esi
10046759:	push   eax
1004675a:	mov    DWORD PTR [ebp-0x4],esi
1004675d:	mov    DWORD PTR [ebp-0x8],esi
10046760:	call   0x10046391
10046765:	test   eax,eax
10046767:	pop    ecx
10046768:	je     0x10046777
1004676a:	push   esi
1004676b:	push   esi
1004676c:	push   esi
1004676d:	push   esi
1004676e:	push   esi
1004676f:	call   0x10042190
10046774:	add    esp,0x14
10046777:	lea    eax,[ebp-0x8]
1004677a:	push   eax
1004677b:	call   0x100463c8
10046780:	test   eax,eax
10046782:	pop    ecx
10046783:	je     0x10046792
10046785:	push   esi
10046786:	push   esi
10046787:	push   esi
10046788:	push   esi
10046789:	push   esi
1004678a:	call   0x10042190
1004678f:	add    esp,0x14
10046792:	cmp    DWORD PTR [ebp-0x4],0x2
10046796:	pop    esi
10046797:	jne    0x100467a4
10046799:	cmp    DWORD PTR [ebp-0x8],0x5
1004679d:	jb     0x100467a4
1004679f:	xor    eax,eax
100467a1:	inc    eax
100467a2:	leave  
100467a3:	ret    
100467a4:	push   0x3
100467a6:	pop    eax
100467a7:	leave  
100467a8:	ret    
100467a9:	xor    eax,eax
100467ab:	cmp    DWORD PTR [esp+0x4],eax
100467af:	push   0x0
100467b1:	sete   al
100467b4:	push   0x1000
100467b9:	push   eax
100467ba:	call   DWORD PTR ds:0x100651cc
100467c0:	test   eax,eax
100467c2:	mov    ds:0x1007ee18,eax
100467c7:	jne    0x100467cc
100467c9:	xor    eax,eax
100467cb:	ret    
100467cc:	call   0x1004674e
100467d1:	cmp    eax,0x3
100467d4:	mov    ds:0x10081580,eax
100467d9:	jne    0x100467ff
100467db:	push   0x3f8
100467e0:	call   0x10046a1e
100467e5:	test   eax,eax
100467e7:	pop    ecx
100467e8:	jne    0x100467ff
100467ea:	push   DWORD PTR ds:0x1007ee18
100467f0:	call   DWORD PTR ds:0x100651c8
100467f6:	and    DWORD PTR ds:0x1007ee18,0x0
100467fd:	jmp    0x100467c9
100467ff:	xor    eax,eax
10046801:	inc    eax
10046802:	ret    
10046803:	push   ebp
10046804:	xor    ebp,ebp
10046806:	cmp    DWORD PTR ds:0x10081580,0x3
1004680d:	jne    0x10046863
1004680f:	push   ebx
10046810:	mov    ebx,DWORD PTR ds:0x10065188
10046816:	push   edi
10046817:	xor    edi,edi
10046819:	cmp    DWORD PTR ds:0x10081568,ebp
1004681f:	jle    0x10046852
10046821:	push   esi
10046822:	mov    esi,DWORD PTR ds:0x1008156c
10046828:	add    esi,0x10
1004682b:	push   0x8000
10046830:	push   ebp
10046831:	push   DWORD PTR [esi-0x4]
10046834:	call   DWORD PTR ds:0x100651d0
1004683a:	push   DWORD PTR [esi]
1004683c:	push   ebp
1004683d:	push   DWORD PTR ds:0x1007ee18
10046843:	call   ebx
10046845:	add    esi,0x14
10046848:	inc    edi
10046849:	cmp    edi,DWORD PTR ds:0x10081568
1004684f:	jl     0x1004682b
10046851:	pop    esi
10046852:	push   DWORD PTR ds:0x1008156c
10046858:	push   ebp
10046859:	push   DWORD PTR ds:0x1007ee18
1004685f:	call   ebx
10046861:	pop    edi
10046862:	pop    ebx
10046863:	push   DWORD PTR ds:0x1007ee18
10046869:	call   DWORD PTR ds:0x100651c8
1004686f:	mov    DWORD PTR ds:0x1007ee18,ebp
10046875:	pop    ebp
10046876:	ret    
10046877:	push   esi
10046878:	push   edi
10046879:	xor    esi,esi
1004687b:	mov    edi,0x1007ee20
10046880:	cmp    DWORD PTR [esi*8+0x1007d1cc],0x1
10046888:	jne    0x100468a8
1004688a:	lea    eax,[esi*8+0x1007d1c8]
10046891:	mov    DWORD PTR [eax],edi
10046893:	push   0xfa0
10046898:	push   DWORD PTR [eax]
1004689a:	add    edi,0x18
1004689d:	call   0x1004abdb
100468a2:	test   eax,eax
100468a4:	pop    ecx
100468a5:	pop    ecx
100468a6:	je     0x100468b4
100468a8:	inc    esi
100468a9:	cmp    esi,0x24
100468ac:	jl     0x10046880
100468ae:	xor    eax,eax
100468b0:	inc    eax
100468b1:	pop    edi
100468b2:	pop    esi
100468b3:	ret    
100468b4:	and    DWORD PTR [esi*8+0x1007d1c8],0x0
100468bc:	xor    eax,eax
100468be:	jmp    0x100468b1
100468c0:	push   ebx
100468c1:	mov    ebx,DWORD PTR ds:0x10065138
100468c7:	push   esi
100468c8:	mov    esi,0x1007d1c8
100468cd:	push   edi
100468ce:	mov    edi,DWORD PTR [esi]
100468d0:	test   edi,edi
100468d2:	je     0x100468e7
100468d4:	cmp    DWORD PTR [esi+0x4],0x1
100468d8:	je     0x100468e7
100468da:	push   edi
100468db:	call   ebx
100468dd:	push   edi
100468de:	call   0x10042408
100468e3:	and    DWORD PTR [esi],0x0
100468e6:	pop    ecx
100468e7:	add    esi,0x8
100468ea:	cmp    esi,0x1007d2e8
100468f0:	jl     0x100468ce
100468f2:	mov    esi,0x1007d1c8
100468f7:	pop    edi
100468f8:	mov    eax,DWORD PTR [esi]
100468fa:	test   eax,eax
100468fc:	je     0x10046907
100468fe:	cmp    DWORD PTR [esi+0x4],0x1
10046902:	jne    0x10046907
10046904:	push   eax
10046905:	call   ebx
10046907:	add    esi,0x8
1004690a:	cmp    esi,0x1007d2e8
10046910:	jl     0x100468f8
10046912:	pop    esi
10046913:	pop    ebx
10046914:	ret    
10046915:	push   ebp
10046916:	mov    ebp,esp
10046918:	mov    eax,DWORD PTR [ebp+0x8]
1004691b:	push   DWORD PTR [eax*8+0x1007d1c8]
10046922:	call   DWORD PTR ds:0x100650ec
10046928:	pop    ebp
10046929:	ret    
1004692a:	push   0xc
1004692c:	push   0x100732e8
10046931:	call   0x100459e4
10046936:	xor    edi,edi
10046938:	inc    edi
10046939:	mov    DWORD PTR [ebp-0x1c],edi
1004693c:	xor    ebx,ebx
1004693e:	cmp    DWORD PTR ds:0x1007ee18,ebx
10046944:	jne    0x1004695e
10046946:	call   0x100476bd
1004694b:	push   0x1e
1004694d:	call   0x1004751d
10046952:	push   0xff
10046957:	call   0x10046332
1004695c:	pop    ecx
1004695d:	pop    ecx
1004695e:	mov    esi,DWORD PTR [ebp+0x8]
10046961:	lea    esi,[esi*8+0x1007d1c8]
10046968:	cmp    DWORD PTR [esi],ebx
1004696a:	je     0x10046970
1004696c:	mov    eax,edi
1004696e:	jmp    0x100469de
10046970:	push   0x18
10046972:	call   0x10046172
10046977:	pop    ecx
10046978:	mov    edi,eax
1004697a:	cmp    edi,ebx
1004697c:	jne    0x1004698d
1004697e:	call   0x100458a5
10046983:	mov    DWORD PTR [eax],0xc
10046989:	xor    eax,eax
1004698b:	jmp    0x100469de
1004698d:	push   0xa
1004698f:	call   0x100469ed
10046994:	pop    ecx
10046995:	mov    DWORD PTR [ebp-0x4],ebx
10046998:	cmp    DWORD PTR [esi],ebx
1004699a:	jne    0x100469c8
1004699c:	push   0xfa0
100469a1:	push   edi
100469a2:	call   0x1004abdb
100469a7:	pop    ecx
100469a8:	pop    ecx
100469a9:	test   eax,eax
100469ab:	jne    0x100469c4
100469ad:	push   edi
100469ae:	call   0x10042408
100469b3:	pop    ecx
100469b4:	call   0x100458a5
100469b9:	mov    DWORD PTR [eax],0xc
100469bf:	mov    DWORD PTR [ebp-0x1c],ebx
100469c2:	jmp    0x100469cf
100469c4:	mov    DWORD PTR [esi],edi
100469c6:	jmp    0x100469cf
100469c8:	push   edi
100469c9:	call   0x10042408
100469ce:	pop    ecx
100469cf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100469d6:	call   0x100469e4
100469db:	mov    eax,DWORD PTR [ebp-0x1c]
100469de:	call   0x10045a29
100469e3:	ret    
100469e4:	push   0xa
100469e6:	call   0x10046915
100469eb:	pop    ecx
100469ec:	ret    
100469ed:	push   ebp
100469ee:	mov    ebp,esp
100469f0:	mov    eax,DWORD PTR [ebp+0x8]
100469f3:	push   esi
100469f4:	lea    esi,[eax*8+0x1007d1c8]
100469fb:	cmp    DWORD PTR [esi],0x0
100469fe:	jne    0x10046a13
10046a00:	push   eax
10046a01:	call   0x1004692a
10046a06:	test   eax,eax
10046a08:	pop    ecx
10046a09:	jne    0x10046a13
10046a0b:	push   0x11
10046a0d:	call   0x100462e8
10046a12:	pop    ecx
10046a13:	push   DWORD PTR [esi]
10046a15:	call   DWORD PTR ds:0x100650f0
10046a1b:	pop    esi
10046a1c:	pop    ebp
10046a1d:	ret    
10046a1e:	push   0x140
10046a23:	push   0x0
10046a25:	push   DWORD PTR ds:0x1007ee18
10046a2b:	call   DWORD PTR ds:0x1006518c
10046a31:	test   eax,eax
10046a33:	mov    ds:0x1008156c,eax
10046a38:	jne    0x10046a3b
10046a3a:	ret    
10046a3b:	mov    ecx,DWORD PTR [esp+0x4]
10046a3f:	and    DWORD PTR ds:0x1007ef70,0x0
10046a46:	and    DWORD PTR ds:0x10081568,0x0
10046a4d:	mov    ds:0x10081574,eax
10046a52:	xor    eax,eax
10046a54:	mov    DWORD PTR ds:0x10081570,ecx
10046a5a:	mov    DWORD PTR ds:0x10081578,0x10
10046a64:	inc    eax
10046a65:	ret    
10046a66:	mov    ecx,DWORD PTR ds:0x10081568
10046a6c:	mov    eax,ds:0x1008156c
10046a71:	imul   ecx,ecx,0x14
10046a74:	add    ecx,eax
10046a76:	jmp    0x10046a8a
10046a78:	mov    edx,DWORD PTR [esp+0x4]
10046a7c:	sub    edx,DWORD PTR [eax+0xc]
10046a7f:	cmp    edx,0x100000
10046a85:	jb     0x10046a90
10046a87:	add    eax,0x14
10046a8a:	cmp    eax,ecx
10046a8c:	jb     0x10046a78
10046a8e:	xor    eax,eax
10046a90:	ret    
10046a91:	push   ebp
10046a92:	mov    ebp,esp
10046a94:	sub    esp,0x10
10046a97:	mov    ecx,DWORD PTR [ebp+0x8]
10046a9a:	mov    eax,DWORD PTR [ecx+0x10]
10046a9d:	push   esi
10046a9e:	mov    esi,DWORD PTR [ebp+0xc]
10046aa1:	push   edi
10046aa2:	mov    edi,esi
10046aa4:	sub    edi,DWORD PTR [ecx+0xc]
10046aa7:	add    esi,0xfffffffc
10046aaa:	shr    edi,0xf
10046aad:	mov    ecx,edi
10046aaf:	imul   ecx,ecx,0x204
10046ab5:	lea    ecx,[ecx+eax*1+0x144]
10046abc:	mov    DWORD PTR [ebp-0x10],ecx
10046abf:	mov    ecx,DWORD PTR [esi]
10046ac1:	dec    ecx
10046ac2:	test   cl,0x1
10046ac5:	mov    DWORD PTR [ebp-0x4],ecx
10046ac8:	jne    0x10046da1
10046ace:	push   ebx
10046acf:	lea    ebx,[ecx+esi*1]
10046ad2:	mov    edx,DWORD PTR [ebx]
10046ad4:	mov    DWORD PTR [ebp-0xc],edx
10046ad7:	mov    edx,DWORD PTR [esi-0x4]
10046ada:	mov    DWORD PTR [ebp-0x8],edx
10046add:	mov    edx,DWORD PTR [ebp-0xc]
10046ae0:	test   dl,0x1
10046ae3:	mov    DWORD PTR [ebp+0xc],ebx
10046ae6:	jne    0x10046b5c
10046ae8:	sar    edx,0x4
10046aeb:	dec    edx
10046aec:	cmp    edx,0x3f
10046aef:	jbe    0x10046af4
10046af1:	push   0x3f
10046af3:	pop    edx
10046af4:	mov    ecx,DWORD PTR [ebx+0x4]
10046af7:	cmp    ecx,DWORD PTR [ebx+0x8]
10046afa:	jne    0x10046b3e
10046afc:	cmp    edx,0x20
10046aff:	mov    ebx,0x80000000
10046b04:	jae    0x10046b1f
10046b06:	mov    ecx,edx
10046b08:	shr    ebx,cl
10046b0a:	lea    ecx,[edx+eax*1+0x4]
10046b0e:	not    ebx
10046b10:	and    DWORD PTR [eax+edi*4+0x44],ebx
10046b14:	dec    BYTE PTR [ecx]
10046b16:	jne    0x10046b3b
10046b18:	mov    ecx,DWORD PTR [ebp+0x8]
10046b1b:	and    DWORD PTR [ecx],ebx
10046b1d:	jmp    0x10046b3b
10046b1f:	lea    ecx,[edx-0x20]
10046b22:	shr    ebx,cl
10046b24:	lea    ecx,[edx+eax*1+0x4]
10046b28:	not    ebx
10046b2a:	and    DWORD PTR [eax+edi*4+0xc4],ebx
10046b31:	dec    BYTE PTR [ecx]
10046b33:	jne    0x10046b3b
10046b35:	mov    ecx,DWORD PTR [ebp+0x8]
10046b38:	and    DWORD PTR [ecx+0x4],ebx
10046b3b:	mov    ebx,DWORD PTR [ebp+0xc]
10046b3e:	mov    edx,DWORD PTR [ebx+0x8]
10046b41:	mov    ebx,DWORD PTR [ebx+0x4]
10046b44:	mov    ecx,DWORD PTR [ebp-0x4]
10046b47:	add    ecx,DWORD PTR [ebp-0xc]
10046b4a:	mov    DWORD PTR [edx+0x4],ebx
10046b4d:	mov    edx,DWORD PTR [ebp+0xc]
10046b50:	mov    ebx,DWORD PTR [edx+0x4]
10046b53:	mov    edx,DWORD PTR [edx+0x8]
10046b56:	mov    DWORD PTR [ebx+0x8],edx
10046b59:	mov    DWORD PTR [ebp-0x4],ecx
10046b5c:	mov    edx,ecx
10046b5e:	sar    edx,0x4
10046b61:	dec    edx
10046b62:	cmp    edx,0x3f
10046b65:	jbe    0x10046b6a
10046b67:	push   0x3f
10046b69:	pop    edx
10046b6a:	mov    ebx,DWORD PTR [ebp-0x8]
10046b6d:	and    ebx,0x1
10046b70:	mov    DWORD PTR [ebp-0xc],ebx
10046b73:	jne    0x10046c08
10046b79:	sub    esi,DWORD PTR [ebp-0x8]
10046b7c:	mov    ebx,DWORD PTR [ebp-0x8]
10046b7f:	sar    ebx,0x4
10046b82:	push   0x3f
10046b84:	mov    DWORD PTR [ebp+0xc],esi
10046b87:	dec    ebx
10046b88:	pop    esi
10046b89:	cmp    ebx,esi
10046b8b:	jbe    0x10046b8f
10046b8d:	mov    ebx,esi
10046b8f:	add    ecx,DWORD PTR [ebp-0x8]
10046b92:	mov    edx,ecx
10046b94:	sar    edx,0x4
10046b97:	dec    edx
10046b98:	cmp    edx,esi
10046b9a:	mov    DWORD PTR [ebp-0x4],ecx
10046b9d:	jbe    0x10046ba1
10046b9f:	mov    edx,esi
10046ba1:	cmp    ebx,edx
10046ba3:	je     0x10046c03
10046ba5:	mov    ecx,DWORD PTR [ebp+0xc]
10046ba8:	mov    esi,DWORD PTR [ecx+0x4]
10046bab:	cmp    esi,DWORD PTR [ecx+0x8]
10046bae:	jne    0x10046beb
10046bb0:	cmp    ebx,0x20
10046bb3:	mov    esi,0x80000000
10046bb8:	jae    0x10046bd1
10046bba:	mov    ecx,ebx
10046bbc:	shr    esi,cl
10046bbe:	not    esi
10046bc0:	and    DWORD PTR [eax+edi*4+0x44],esi
10046bc4:	dec    BYTE PTR [ebx+eax*1+0x4]
10046bc8:	jne    0x10046beb
10046bca:	mov    ecx,DWORD PTR [ebp+0x8]
10046bcd:	and    DWORD PTR [ecx],esi
10046bcf:	jmp    0x10046beb
10046bd1:	lea    ecx,[ebx-0x20]
10046bd4:	shr    esi,cl
10046bd6:	not    esi
10046bd8:	and    DWORD PTR [eax+edi*4+0xc4],esi
10046bdf:	dec    BYTE PTR [ebx+eax*1+0x4]
10046be3:	jne    0x10046beb
10046be5:	mov    ecx,DWORD PTR [ebp+0x8]
10046be8:	and    DWORD PTR [ecx+0x4],esi
10046beb:	mov    ecx,DWORD PTR [ebp+0xc]
10046bee:	mov    esi,DWORD PTR [ecx+0x8]
10046bf1:	mov    ecx,DWORD PTR [ecx+0x4]
10046bf4:	mov    DWORD PTR [esi+0x4],ecx
10046bf7:	mov    ecx,DWORD PTR [ebp+0xc]
10046bfa:	mov    esi,DWORD PTR [ecx+0x4]
10046bfd:	mov    ecx,DWORD PTR [ecx+0x8]
10046c00:	mov    DWORD PTR [esi+0x8],ecx
10046c03:	mov    esi,DWORD PTR [ebp+0xc]
10046c06:	jmp    0x10046c0b
10046c08:	mov    ebx,DWORD PTR [ebp+0x8]
10046c0b:	cmp    DWORD PTR [ebp-0xc],0x0
10046c0f:	jne    0x10046c19
10046c11:	cmp    ebx,edx
10046c13:	je     0x10046c99
10046c19:	mov    ecx,DWORD PTR [ebp-0x10]
10046c1c:	lea    ecx,[ecx+edx*8]
10046c1f:	mov    ebx,DWORD PTR [ecx+0x4]
10046c22:	mov    DWORD PTR [esi+0x8],ecx
10046c25:	mov    DWORD PTR [esi+0x4],ebx
10046c28:	mov    DWORD PTR [ecx+0x4],esi
10046c2b:	mov    ecx,DWORD PTR [esi+0x4]
10046c2e:	mov    DWORD PTR [ecx+0x8],esi
10046c31:	mov    ecx,DWORD PTR [esi+0x4]
10046c34:	cmp    ecx,DWORD PTR [esi+0x8]
10046c37:	jne    0x10046c99
10046c39:	mov    cl,BYTE PTR [edx+eax*1+0x4]
10046c3d:	mov    BYTE PTR [ebp+0xf],cl
10046c40:	inc    cl
10046c42:	cmp    edx,0x20
10046c45:	mov    BYTE PTR [edx+eax*1+0x4],cl
10046c49:	jae    0x10046c70
10046c4b:	cmp    BYTE PTR [ebp+0xf],0x0
10046c4f:	jne    0x10046c5f
10046c51:	mov    ecx,edx
10046c53:	mov    ebx,0x80000000
10046c58:	shr    ebx,cl
10046c5a:	mov    ecx,DWORD PTR [ebp+0x8]
10046c5d:	or     DWORD PTR [ecx],ebx
10046c5f:	mov    ebx,0x80000000
10046c64:	mov    ecx,edx
10046c66:	shr    ebx,cl
10046c68:	lea    eax,[eax+edi*4+0x44]
10046c6c:	or     DWORD PTR [eax],ebx
10046c6e:	jmp    0x10046c99
10046c70:	cmp    BYTE PTR [ebp+0xf],0x0
10046c74:	jne    0x10046c86
10046c76:	lea    ecx,[edx-0x20]
10046c79:	mov    ebx,0x80000000
10046c7e:	shr    ebx,cl
10046c80:	mov    ecx,DWORD PTR [ebp+0x8]
10046c83:	or     DWORD PTR [ecx+0x4],ebx
10046c86:	lea    ecx,[edx-0x20]
10046c89:	mov    edx,0x80000000
10046c8e:	shr    edx,cl
10046c90:	lea    eax,[eax+edi*4+0xc4]
10046c97:	or     DWORD PTR [eax],edx
10046c99:	mov    eax,DWORD PTR [ebp-0x4]
10046c9c:	mov    DWORD PTR [esi],eax
10046c9e:	mov    DWORD PTR [eax+esi*1-0x4],eax
10046ca2:	mov    eax,DWORD PTR [ebp-0x10]
10046ca5:	dec    DWORD PTR [eax]
10046ca7:	jne    0x10046da0
10046cad:	mov    eax,ds:0x1007ef70
10046cb2:	test   eax,eax
10046cb4:	je     0x10046d92
10046cba:	mov    ecx,DWORD PTR ds:0x1008157c
10046cc0:	mov    esi,DWORD PTR ds:0x100651d0
10046cc6:	push   0x4000
10046ccb:	shl    ecx,0xf
10046cce:	add    ecx,DWORD PTR [eax+0xc]
10046cd1:	mov    ebx,0x8000
10046cd6:	push   ebx
10046cd7:	push   ecx
10046cd8:	call   esi
10046cda:	mov    ecx,DWORD PTR ds:0x1008157c
10046ce0:	mov    eax,ds:0x1007ef70
10046ce5:	mov    edx,0x80000000
10046cea:	shr    edx,cl
10046cec:	or     DWORD PTR [eax+0x8],edx
10046cef:	mov    eax,ds:0x1007ef70
10046cf4:	mov    eax,DWORD PTR [eax+0x10]
10046cf7:	mov    ecx,DWORD PTR ds:0x1008157c
10046cfd:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
10046d05:	mov    eax,ds:0x1007ef70
10046d0a:	mov    eax,DWORD PTR [eax+0x10]
10046d0d:	dec    BYTE PTR [eax+0x43]
10046d10:	mov    eax,ds:0x1007ef70
10046d15:	mov    ecx,DWORD PTR [eax+0x10]
10046d18:	cmp    BYTE PTR [ecx+0x43],0x0
10046d1c:	jne    0x10046d27
10046d1e:	and    DWORD PTR [eax+0x4],0xfffffffe
10046d22:	mov    eax,ds:0x1007ef70
10046d27:	cmp    DWORD PTR [eax+0x8],0xffffffff
10046d2b:	jne    0x10046d92
10046d2d:	push   ebx
10046d2e:	push   0x0
10046d30:	push   DWORD PTR [eax+0xc]
10046d33:	call   esi
10046d35:	mov    eax,ds:0x1007ef70
10046d3a:	push   DWORD PTR [eax+0x10]
10046d3d:	push   0x0
10046d3f:	push   DWORD PTR ds:0x1007ee18
10046d45:	call   DWORD PTR ds:0x10065188
10046d4b:	mov    ecx,DWORD PTR ds:0x10081568
10046d51:	mov    eax,ds:0x1007ef70
10046d56:	imul   ecx,ecx,0x14
10046d59:	mov    edx,DWORD PTR ds:0x1008156c
10046d5f:	sub    ecx,eax
10046d61:	lea    ecx,[ecx+edx*1-0x14]
10046d65:	push   ecx
10046d66:	lea    ecx,[eax+0x14]
10046d69:	push   ecx
10046d6a:	push   eax
10046d6b:	call   0x10044410
10046d70:	mov    eax,DWORD PTR [ebp+0x8]
10046d73:	add    esp,0xc
10046d76:	dec    DWORD PTR ds:0x10081568
10046d7c:	cmp    eax,DWORD PTR ds:0x1007ef70
10046d82:	jbe    0x10046d88
10046d84:	sub    DWORD PTR [ebp+0x8],0x14
10046d88:	mov    eax,ds:0x1008156c
10046d8d:	mov    ds:0x10081574,eax
10046d92:	mov    eax,DWORD PTR [ebp+0x8]
10046d95:	mov    ds:0x1007ef70,eax
10046d9a:	mov    DWORD PTR ds:0x1008157c,edi
10046da0:	pop    ebx
10046da1:	pop    edi
10046da2:	pop    esi
10046da3:	leave  
10046da4:	ret    
10046da5:	mov    eax,ds:0x10081578
10046daa:	push   esi
10046dab:	mov    esi,DWORD PTR ds:0x10081568
10046db1:	push   edi
10046db2:	xor    edi,edi
10046db4:	cmp    esi,eax
10046db6:	jne    0x10046dec
10046db8:	add    eax,0x10
10046dbb:	imul   eax,eax,0x14
10046dbe:	push   eax
10046dbf:	push   DWORD PTR ds:0x1008156c
10046dc5:	push   edi
10046dc6:	push   DWORD PTR ds:0x1007ee18
10046dcc:	call   DWORD PTR ds:0x100651a0
10046dd2:	cmp    eax,edi
10046dd4:	jne    0x10046dda
10046dd6:	xor    eax,eax
10046dd8:	jmp    0x10046e52
10046dda:	add    DWORD PTR ds:0x10081578,0x10
10046de1:	mov    esi,DWORD PTR ds:0x10081568
10046de7:	mov    ds:0x1008156c,eax
10046dec:	imul   esi,esi,0x14
10046def:	add    esi,DWORD PTR ds:0x1008156c
10046df5:	push   0x41c4
10046dfa:	push   0x8
10046dfc:	push   DWORD PTR ds:0x1007ee18
10046e02:	call   DWORD PTR ds:0x1006518c
10046e08:	cmp    eax,edi
10046e0a:	mov    DWORD PTR [esi+0x10],eax
10046e0d:	je     0x10046dd6
10046e0f:	push   0x4
10046e11:	push   0x2000
10046e16:	push   0x100000
10046e1b:	push   edi
10046e1c:	call   DWORD PTR ds:0x10065194
10046e22:	cmp    eax,edi
10046e24:	mov    DWORD PTR [esi+0xc],eax
10046e27:	jne    0x10046e3b
10046e29:	push   DWORD PTR [esi+0x10]
10046e2c:	push   edi
10046e2d:	push   DWORD PTR ds:0x1007ee18
10046e33:	call   DWORD PTR ds:0x10065188
10046e39:	jmp    0x10046dd6
10046e3b:	or     DWORD PTR [esi+0x8],0xffffffff
10046e3f:	mov    DWORD PTR [esi],edi
10046e41:	mov    DWORD PTR [esi+0x4],edi
10046e44:	inc    DWORD PTR ds:0x10081568
10046e4a:	mov    eax,DWORD PTR [esi+0x10]
10046e4d:	or     DWORD PTR [eax],0xffffffff
10046e50:	mov    eax,esi
10046e52:	pop    edi
10046e53:	pop    esi
10046e54:	ret    
10046e55:	push   ebp
10046e56:	mov    ebp,esp
10046e58:	push   ecx
10046e59:	push   ecx
10046e5a:	mov    ecx,DWORD PTR [ebp+0x8]
10046e5d:	mov    eax,DWORD PTR [ecx+0x8]
10046e60:	push   ebx
10046e61:	push   esi
10046e62:	mov    esi,DWORD PTR [ecx+0x10]
10046e65:	push   edi
10046e66:	xor    ebx,ebx
10046e68:	jmp    0x10046e6d
10046e6a:	add    eax,eax
10046e6c:	inc    ebx
10046e6d:	test   eax,eax
10046e6f:	jge    0x10046e6a
10046e71:	mov    eax,ebx
10046e73:	imul   eax,eax,0x204
10046e79:	lea    eax,[eax+esi*1+0x144]
10046e80:	push   0x3f
10046e82:	mov    DWORD PTR [ebp-0x8],eax
10046e85:	pop    edx
10046e86:	mov    DWORD PTR [eax+0x8],eax
10046e89:	mov    DWORD PTR [eax+0x4],eax
10046e8c:	add    eax,0x8
10046e8f:	dec    edx
10046e90:	jne    0x10046e86
10046e92:	push   0x4
10046e94:	mov    edi,ebx
10046e96:	push   0x1000
10046e9b:	shl    edi,0xf
10046e9e:	add    edi,DWORD PTR [ecx+0xc]
10046ea1:	push   0x8000
10046ea6:	push   edi
10046ea7:	call   DWORD PTR ds:0x10065194
10046ead:	test   eax,eax
10046eaf:	jne    0x10046eb9
10046eb1:	or     eax,0xffffffff
10046eb4:	jmp    0x10046f56
10046eb9:	lea    edx,[edi+0x7000]
10046ebf:	cmp    edi,edx
10046ec1:	mov    DWORD PTR [ebp-0x4],edx
10046ec4:	ja     0x10046f09
10046ec6:	mov    ecx,edx
10046ec8:	sub    ecx,edi
10046eca:	shr    ecx,0xc
10046ecd:	lea    eax,[edi+0x10]
10046ed0:	inc    ecx
10046ed1:	or     DWORD PTR [eax-0x8],0xffffffff
10046ed5:	or     DWORD PTR [eax+0xfec],0xffffffff
10046edc:	lea    edx,[eax+0xffc]
10046ee2:	mov    DWORD PTR [eax],edx
10046ee4:	lea    edx,[eax-0x1004]
10046eea:	mov    DWORD PTR [eax-0x4],0xff0
10046ef1:	mov    DWORD PTR [eax+0x4],edx
10046ef4:	mov    DWORD PTR [eax+0xfe8],0xff0
10046efe:	add    eax,0x1000
10046f03:	dec    ecx
10046f04:	jne    0x10046ed1
10046f06:	mov    edx,DWORD PTR [ebp-0x4]
10046f09:	mov    eax,DWORD PTR [ebp-0x8]
10046f0c:	add    eax,0x1f8
10046f11:	lea    ecx,[edi+0xc]
10046f14:	mov    DWORD PTR [eax+0x4],ecx
10046f17:	mov    DWORD PTR [ecx+0x8],eax
10046f1a:	lea    ecx,[edx+0xc]
10046f1d:	mov    DWORD PTR [eax+0x8],ecx
10046f20:	mov    DWORD PTR [ecx+0x4],eax
10046f23:	and    DWORD PTR [esi+ebx*4+0x44],0x0
10046f28:	xor    edi,edi
10046f2a:	inc    edi
10046f2b:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
10046f32:	mov    al,BYTE PTR [esi+0x43]
10046f35:	mov    cl,al
10046f37:	inc    cl
10046f39:	test   al,al
10046f3b:	mov    eax,DWORD PTR [ebp+0x8]
10046f3e:	mov    BYTE PTR [esi+0x43],cl
10046f41:	jne    0x10046f46
10046f43:	or     DWORD PTR [eax+0x4],edi
10046f46:	mov    edx,0x80000000
10046f4b:	mov    ecx,ebx
10046f4d:	shr    edx,cl
10046f4f:	not    edx
10046f51:	and    DWORD PTR [eax+0x8],edx
10046f54:	mov    eax,ebx
10046f56:	pop    edi
10046f57:	pop    esi
10046f58:	pop    ebx
10046f59:	leave  
10046f5a:	ret    
10046f5b:	push   ebp
10046f5c:	mov    ebp,esp
10046f5e:	sub    esp,0xc
10046f61:	mov    ecx,DWORD PTR [ebp+0x8]
10046f64:	mov    eax,DWORD PTR [ecx+0x10]
10046f67:	push   ebx
10046f68:	push   esi
10046f69:	mov    esi,DWORD PTR [ebp+0x10]
10046f6c:	push   edi
10046f6d:	mov    edi,DWORD PTR [ebp+0xc]
10046f70:	mov    edx,edi
10046f72:	sub    edx,DWORD PTR [ecx+0xc]
10046f75:	add    esi,0x17
10046f78:	shr    edx,0xf
10046f7b:	mov    ecx,edx
10046f7d:	imul   ecx,ecx,0x204
10046f83:	lea    ecx,[ecx+eax*1+0x144]
10046f8a:	mov    DWORD PTR [ebp-0xc],ecx
10046f8d:	mov    ecx,DWORD PTR [edi-0x4]
10046f90:	and    esi,0xfffffff0
10046f93:	dec    ecx
10046f94:	cmp    esi,ecx
10046f96:	lea    edi,[ecx+edi*1-0x4]
10046f9a:	mov    ebx,DWORD PTR [edi]
10046f9c:	mov    DWORD PTR [ebp+0x10],ecx
10046f9f:	mov    DWORD PTR [ebp-0x4],ebx
10046fa2:	jle    0x100470fd
10046fa8:	test   bl,0x1
10046fab:	jne    0x100470f6
10046fb1:	add    ebx,ecx
10046fb3:	cmp    esi,ebx
10046fb5:	jg     0x100470f6
10046fbb:	mov    ecx,DWORD PTR [ebp-0x4]
10046fbe:	sar    ecx,0x4
10046fc1:	dec    ecx
10046fc2:	cmp    ecx,0x3f
10046fc5:	mov    DWORD PTR [ebp-0x8],ecx
10046fc8:	jbe    0x10046fd0
10046fca:	push   0x3f
10046fcc:	pop    ecx
10046fcd:	mov    DWORD PTR [ebp-0x8],ecx
10046fd0:	mov    ebx,DWORD PTR [edi+0x4]
10046fd3:	cmp    ebx,DWORD PTR [edi+0x8]
10046fd6:	jne    0x1004701b
10046fd8:	cmp    ecx,0x20
10046fdb:	mov    ebx,0x80000000
10046fe0:	jae    0x10046ffc
10046fe2:	shr    ebx,cl
10046fe4:	mov    ecx,DWORD PTR [ebp-0x8]
10046fe7:	lea    ecx,[ecx+eax*1+0x4]
10046feb:	not    ebx
10046fed:	and    DWORD PTR [eax+edx*4+0x44],ebx
10046ff1:	dec    BYTE PTR [ecx]
10046ff3:	jne    0x1004701b
10046ff5:	mov    ecx,DWORD PTR [ebp+0x8]
10046ff8:	and    DWORD PTR [ecx],ebx
10046ffa:	jmp    0x1004701b
10046ffc:	add    ecx,0xffffffe0
10046fff:	shr    ebx,cl
10047001:	mov    ecx,DWORD PTR [ebp-0x8]
10047004:	lea    ecx,[ecx+eax*1+0x4]
10047008:	not    ebx
1004700a:	and    DWORD PTR [eax+edx*4+0xc4],ebx
10047011:	dec    BYTE PTR [ecx]
10047013:	jne    0x1004701b
10047015:	mov    ecx,DWORD PTR [ebp+0x8]
10047018:	and    DWORD PTR [ecx+0x4],ebx
1004701b:	mov    ecx,DWORD PTR [edi+0x8]
1004701e:	mov    ebx,DWORD PTR [edi+0x4]
10047021:	mov    DWORD PTR [ecx+0x4],ebx
10047024:	mov    ecx,DWORD PTR [edi+0x4]
10047027:	mov    edi,DWORD PTR [edi+0x8]
1004702a:	mov    DWORD PTR [ecx+0x8],edi
1004702d:	mov    ecx,DWORD PTR [ebp+0x10]
10047030:	sub    ecx,esi
10047032:	add    DWORD PTR [ebp-0x4],ecx
10047035:	cmp    DWORD PTR [ebp-0x4],0x0
10047039:	jle    0x100470e4
1004703f:	mov    edi,DWORD PTR [ebp-0x4]
10047042:	mov    ecx,DWORD PTR [ebp+0xc]
10047045:	sar    edi,0x4
10047048:	dec    edi
10047049:	cmp    edi,0x3f
1004704c:	lea    ecx,[ecx+esi*1-0x4]
10047050:	jbe    0x10047055
10047052:	push   0x3f
10047054:	pop    edi
10047055:	mov    ebx,DWORD PTR [ebp-0xc]
10047058:	lea    ebx,[ebx+edi*8]
1004705b:	mov    DWORD PTR [ebp+0x10],ebx
1004705e:	mov    ebx,DWORD PTR [ebx+0x4]
10047061:	mov    DWORD PTR [ecx+0x4],ebx
10047064:	mov    ebx,DWORD PTR [ebp+0x10]
10047067:	mov    DWORD PTR [ecx+0x8],ebx
1004706a:	mov    DWORD PTR [ebx+0x4],ecx
1004706d:	mov    ebx,DWORD PTR [ecx+0x4]
10047070:	mov    DWORD PTR [ebx+0x8],ecx
10047073:	mov    ebx,DWORD PTR [ecx+0x4]
10047076:	cmp    ebx,DWORD PTR [ecx+0x8]
10047079:	jne    0x100470d2
1004707b:	mov    cl,BYTE PTR [edi+eax*1+0x4]
1004707f:	mov    BYTE PTR [ebp+0x13],cl
10047082:	inc    cl
10047084:	cmp    edi,0x20
10047087:	mov    BYTE PTR [edi+eax*1+0x4],cl
1004708b:	jae    0x100470a9
1004708d:	cmp    BYTE PTR [ebp+0x13],0x0
10047091:	jne    0x100470a1
10047093:	mov    ecx,edi
10047095:	mov    ebx,0x80000000
1004709a:	shr    ebx,cl
1004709c:	mov    ecx,DWORD PTR [ebp+0x8]
1004709f:	or     DWORD PTR [ecx],ebx
100470a1:	lea    eax,[eax+edx*4+0x44]
100470a5:	mov    ecx,edi
100470a7:	jmp    0x100470c9
100470a9:	cmp    BYTE PTR [ebp+0x13],0x0
100470ad:	jne    0x100470bf
100470af:	lea    ecx,[edi-0x20]
100470b2:	mov    ebx,0x80000000
100470b7:	shr    ebx,cl
100470b9:	mov    ecx,DWORD PTR [ebp+0x8]
100470bc:	or     DWORD PTR [ecx+0x4],ebx
100470bf:	lea    eax,[eax+edx*4+0xc4]
100470c6:	lea    ecx,[edi-0x20]
100470c9:	mov    edx,0x80000000
100470ce:	shr    edx,cl
100470d0:	or     DWORD PTR [eax],edx
100470d2:	mov    edx,DWORD PTR [ebp+0xc]
100470d5:	mov    ecx,DWORD PTR [ebp-0x4]
100470d8:	lea    eax,[edx+esi*1-0x4]
100470dc:	mov    DWORD PTR [eax],ecx
100470de:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
100470e2:	jmp    0x100470e7
100470e4:	mov    edx,DWORD PTR [ebp+0xc]
100470e7:	lea    eax,[esi+0x1]
100470ea:	mov    DWORD PTR [edx-0x4],eax
100470ed:	mov    DWORD PTR [edx+esi*1-0x8],eax
100470f1:	jmp    0x10047232
100470f6:	xor    eax,eax
100470f8:	jmp    0x10047235
100470fd:	jge    0x10047232
10047103:	mov    ebx,DWORD PTR [ebp+0xc]
10047106:	sub    DWORD PTR [ebp+0x10],esi
10047109:	lea    ecx,[esi+0x1]
1004710c:	mov    DWORD PTR [ebx-0x4],ecx
1004710f:	lea    ebx,[ebx+esi*1-0x4]
10047113:	mov    esi,DWORD PTR [ebp+0x10]
10047116:	sar    esi,0x4
10047119:	dec    esi
1004711a:	cmp    esi,0x3f
1004711d:	mov    DWORD PTR [ebp+0xc],ebx
10047120:	mov    DWORD PTR [ebx-0x4],ecx
10047123:	jbe    0x10047128
10047125:	push   0x3f
10047127:	pop    esi
10047128:	test   BYTE PTR [ebp-0x4],0x1
1004712c:	jne    0x100471b2
10047132:	mov    esi,DWORD PTR [ebp-0x4]
10047135:	sar    esi,0x4
10047138:	dec    esi
10047139:	cmp    esi,0x3f
1004713c:	jbe    0x10047141
1004713e:	push   0x3f
10047140:	pop    esi
10047141:	mov    ecx,DWORD PTR [edi+0x4]
10047144:	cmp    ecx,DWORD PTR [edi+0x8]
10047147:	jne    0x1004718b
10047149:	cmp    esi,0x20
1004714c:	mov    ebx,0x80000000
10047151:	jae    0x1004716c
10047153:	mov    ecx,esi
10047155:	shr    ebx,cl
10047157:	lea    esi,[esi+eax*1+0x4]
1004715b:	not    ebx
1004715d:	and    DWORD PTR [eax+edx*4+0x44],ebx
10047161:	dec    BYTE PTR [esi]
10047163:	jne    0x10047188
10047165:	mov    ecx,DWORD PTR [ebp+0x8]
10047168:	and    DWORD PTR [ecx],ebx
1004716a:	jmp    0x10047188
1004716c:	lea    ecx,[esi-0x20]
1004716f:	shr    ebx,cl
10047171:	lea    ecx,[esi+eax*1+0x4]
10047175:	not    ebx
10047177:	and    DWORD PTR [eax+edx*4+0xc4],ebx
1004717e:	dec    BYTE PTR [ecx]
10047180:	jne    0x10047188
10047182:	mov    ecx,DWORD PTR [ebp+0x8]
10047185:	and    DWORD PTR [ecx+0x4],ebx
10047188:	mov    ebx,DWORD PTR [ebp+0xc]
1004718b:	mov    ecx,DWORD PTR [edi+0x8]
1004718e:	mov    esi,DWORD PTR [edi+0x4]
10047191:	mov    DWORD PTR [ecx+0x4],esi
10047194:	mov    esi,DWORD PTR [edi+0x8]
10047197:	mov    ecx,DWORD PTR [edi+0x4]
1004719a:	mov    DWORD PTR [ecx+0x8],esi
1004719d:	mov    esi,DWORD PTR [ebp+0x10]
100471a0:	add    esi,DWORD PTR [ebp-0x4]
100471a3:	mov    DWORD PTR [ebp+0x10],esi
100471a6:	sar    esi,0x4
100471a9:	dec    esi
100471aa:	cmp    esi,0x3f
100471ad:	jbe    0x100471b2
100471af:	push   0x3f
100471b1:	pop    esi
100471b2:	mov    ecx,DWORD PTR [ebp-0xc]
100471b5:	lea    ecx,[ecx+esi*8]
100471b8:	mov    edi,DWORD PTR [ecx+0x4]
100471bb:	mov    DWORD PTR [ebx+0x8],ecx
100471be:	mov    DWORD PTR [ebx+0x4],edi
100471c1:	mov    DWORD PTR [ecx+0x4],ebx
100471c4:	mov    ecx,DWORD PTR [ebx+0x4]
100471c7:	mov    DWORD PTR [ecx+0x8],ebx
100471ca:	mov    ecx,DWORD PTR [ebx+0x4]
100471cd:	cmp    ecx,DWORD PTR [ebx+0x8]
100471d0:	jne    0x10047229
100471d2:	mov    cl,BYTE PTR [esi+eax*1+0x4]
100471d6:	mov    BYTE PTR [ebp+0xf],cl
100471d9:	inc    cl
100471db:	cmp    esi,0x20
100471de:	mov    BYTE PTR [esi+eax*1+0x4],cl
100471e2:	jae    0x10047200
100471e4:	cmp    BYTE PTR [ebp+0xf],0x0
100471e8:	jne    0x100471f8
100471ea:	mov    ecx,esi
100471ec:	mov    edi,0x80000000
100471f1:	shr    edi,cl
100471f3:	mov    ecx,DWORD PTR [ebp+0x8]
100471f6:	or     DWORD PTR [ecx],edi
100471f8:	lea    eax,[eax+edx*4+0x44]
100471fc:	mov    ecx,esi
100471fe:	jmp    0x10047220
10047200:	cmp    BYTE PTR [ebp+0xf],0x0
10047204:	jne    0x10047216
10047206:	lea    ecx,[esi-0x20]
10047209:	mov    edi,0x80000000
1004720e:	shr    edi,cl
10047210:	mov    ecx,DWORD PTR [ebp+0x8]
10047213:	or     DWORD PTR [ecx+0x4],edi
10047216:	lea    eax,[eax+edx*4+0xc4]
1004721d:	lea    ecx,[esi-0x20]
10047220:	mov    edx,0x80000000
10047225:	shr    edx,cl
10047227:	or     DWORD PTR [eax],edx
10047229:	mov    eax,DWORD PTR [ebp+0x10]
1004722c:	mov    DWORD PTR [ebx],eax
1004722e:	mov    DWORD PTR [eax+ebx*1-0x4],eax
10047232:	xor    eax,eax
10047234:	inc    eax
10047235:	pop    edi
10047236:	pop    esi
10047237:	pop    ebx
10047238:	leave  
10047239:	ret    
1004723a:	push   ebp
1004723b:	mov    ebp,esp
1004723d:	sub    esp,0x14
10047240:	mov    eax,ds:0x10081568
10047245:	mov    ecx,DWORD PTR [ebp+0x8]
10047248:	imul   eax,eax,0x14
1004724b:	add    eax,DWORD PTR ds:0x1008156c
10047251:	add    ecx,0x17
10047254:	and    ecx,0xfffffff0
10047257:	mov    DWORD PTR [ebp-0x10],ecx
1004725a:	sar    ecx,0x4
1004725d:	push   ebx
1004725e:	dec    ecx
1004725f:	cmp    ecx,0x20
10047262:	push   esi
10047263:	push   edi
10047264:	jge    0x10047271
10047266:	or     esi,0xffffffff
10047269:	shr    esi,cl
1004726b:	or     DWORD PTR [ebp-0x8],0xffffffff
1004726f:	jmp    0x1004727e
10047271:	add    ecx,0xffffffe0
10047274:	or     edx,0xffffffff
10047277:	xor    esi,esi
10047279:	shr    edx,cl
1004727b:	mov    DWORD PTR [ebp-0x8],edx
1004727e:	mov    ecx,DWORD PTR ds:0x10081574
10047284:	mov    ebx,ecx
10047286:	jmp    0x10047299
10047288:	mov    edx,DWORD PTR [ebx+0x4]
1004728b:	mov    edi,DWORD PTR [ebx]
1004728d:	and    edx,DWORD PTR [ebp-0x8]
10047290:	and    edi,esi
10047292:	or     edx,edi
10047294:	jne    0x100472a0
10047296:	add    ebx,0x14
10047299:	cmp    ebx,eax
1004729b:	mov    DWORD PTR [ebp+0x8],ebx
1004729e:	jb     0x10047288
100472a0:	cmp    ebx,eax
100472a2:	jne    0x10047323
100472a4:	mov    ebx,DWORD PTR ds:0x1008156c
100472aa:	jmp    0x100472bd
100472ac:	mov    edx,DWORD PTR [ebx+0x4]
100472af:	mov    edi,DWORD PTR [ebx]
100472b1:	and    edx,DWORD PTR [ebp-0x8]
100472b4:	and    edi,esi
100472b6:	or     edx,edi
100472b8:	jne    0x100472c4
100472ba:	add    ebx,0x14
100472bd:	cmp    ebx,ecx
100472bf:	mov    DWORD PTR [ebp+0x8],ebx
100472c2:	jb     0x100472ac
100472c4:	cmp    ebx,ecx
100472c6:	jne    0x10047323
100472c8:	jmp    0x100472d6
100472ca:	cmp    DWORD PTR [ebx+0x8],0x0
100472ce:	jne    0x100472da
100472d0:	add    ebx,0x14
100472d3:	mov    DWORD PTR [ebp+0x8],ebx
100472d6:	cmp    ebx,eax
100472d8:	jb     0x100472ca
100472da:	cmp    ebx,eax
100472dc:	jne    0x1004730f
100472de:	mov    ebx,DWORD PTR ds:0x1008156c
100472e4:	jmp    0x100472ef
100472e6:	cmp    DWORD PTR [ebx+0x8],0x0
100472ea:	jne    0x100472f6
100472ec:	add    ebx,0x14
100472ef:	cmp    ebx,ecx
100472f1:	mov    DWORD PTR [ebp+0x8],ebx
100472f4:	jb     0x100472e6
100472f6:	cmp    ebx,ecx
100472f8:	jne    0x1004730f
100472fa:	call   0x10046da5
100472ff:	mov    ebx,eax
10047301:	test   ebx,ebx
10047303:	mov    DWORD PTR [ebp+0x8],ebx
10047306:	jne    0x1004730f
10047308:	xor    eax,eax
1004730a:	jmp    0x10047518
1004730f:	push   ebx
10047310:	call   0x10046e55
10047315:	pop    ecx
10047316:	mov    ecx,DWORD PTR [ebx+0x10]
10047319:	mov    DWORD PTR [ecx],eax
1004731b:	mov    eax,DWORD PTR [ebx+0x10]
1004731e:	cmp    DWORD PTR [eax],0xffffffff
10047321:	je     0x10047308
10047323:	mov    DWORD PTR ds:0x10081574,ebx
10047329:	mov    eax,DWORD PTR [ebx+0x10]
1004732c:	mov    edx,DWORD PTR [eax]
1004732e:	cmp    edx,0xffffffff
10047331:	mov    DWORD PTR [ebp-0x4],edx
10047334:	je     0x1004734a
10047336:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
1004733d:	mov    edi,DWORD PTR [eax+edx*4+0x44]
10047341:	and    ecx,DWORD PTR [ebp-0x8]
10047344:	and    edi,esi
10047346:	or     ecx,edi
10047348:	jne    0x10047373
1004734a:	and    DWORD PTR [ebp-0x4],0x0
1004734e:	mov    edx,DWORD PTR [eax+0xc4]
10047354:	lea    ecx,[eax+0x44]
10047357:	mov    edi,DWORD PTR [ecx]
10047359:	and    edx,DWORD PTR [ebp-0x8]
1004735c:	and    edi,esi
1004735e:	or     edx,edi
10047360:	jne    0x10047370
10047362:	inc    DWORD PTR [ebp-0x4]
10047365:	mov    edx,DWORD PTR [ecx+0x84]
1004736b:	add    ecx,0x4
1004736e:	jmp    0x10047357
10047370:	mov    edx,DWORD PTR [ebp-0x4]
10047373:	mov    ecx,edx
10047375:	imul   ecx,ecx,0x204
1004737b:	lea    ecx,[ecx+eax*1+0x144]
10047382:	mov    DWORD PTR [ebp-0xc],ecx
10047385:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
10047389:	xor    edi,edi
1004738b:	and    ecx,esi
1004738d:	jne    0x100473a1
1004738f:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
10047396:	and    ecx,DWORD PTR [ebp-0x8]
10047399:	push   0x20
1004739b:	pop    edi
1004739c:	jmp    0x100473a1
1004739e:	add    ecx,ecx
100473a0:	inc    edi
100473a1:	test   ecx,ecx
100473a3:	jge    0x1004739e
100473a5:	mov    ecx,DWORD PTR [ebp-0xc]
100473a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
100473ac:	mov    ecx,DWORD PTR [edx]
100473ae:	sub    ecx,DWORD PTR [ebp-0x10]
100473b1:	mov    esi,ecx
100473b3:	sar    esi,0x4
100473b6:	dec    esi
100473b7:	cmp    esi,0x3f
100473ba:	mov    DWORD PTR [ebp-0x8],ecx
100473bd:	jle    0x100473c2
100473bf:	push   0x3f
100473c1:	pop    esi
100473c2:	cmp    esi,edi
100473c4:	je     0x100474cb
100473ca:	mov    ecx,DWORD PTR [edx+0x4]
100473cd:	cmp    ecx,DWORD PTR [edx+0x8]
100473d0:	jne    0x1004742e
100473d2:	cmp    edi,0x20
100473d5:	mov    ebx,0x80000000
100473da:	jge    0x10047402
100473dc:	mov    ecx,edi
100473de:	shr    ebx,cl
100473e0:	mov    ecx,DWORD PTR [ebp-0x4]
100473e3:	lea    edi,[eax+edi*1+0x4]
100473e7:	not    ebx
100473e9:	mov    DWORD PTR [ebp-0x14],ebx
100473ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
100473f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
100473f4:	dec    BYTE PTR [edi]
100473f6:	jne    0x1004742b
100473f8:	mov    ecx,DWORD PTR [ebp-0x14]
100473fb:	mov    ebx,DWORD PTR [ebp+0x8]
100473fe:	and    DWORD PTR [ebx],ecx
10047400:	jmp    0x1004742e
10047402:	lea    ecx,[edi-0x20]
10047405:	shr    ebx,cl
10047407:	mov    ecx,DWORD PTR [ebp-0x4]
1004740a:	lea    ecx,[eax+ecx*4+0xc4]
10047411:	lea    edi,[eax+edi*1+0x4]
10047415:	not    ebx
10047417:	and    DWORD PTR [ecx],ebx
10047419:	dec    BYTE PTR [edi]
1004741b:	mov    DWORD PTR [ebp-0x14],ebx
1004741e:	jne    0x1004742b
10047420:	mov    ebx,DWORD PTR [ebp+0x8]
10047423:	mov    ecx,DWORD PTR [ebp-0x14]
10047426:	and    DWORD PTR [ebx+0x4],ecx
10047429:	jmp    0x1004742e
1004742b:	mov    ebx,DWORD PTR [ebp+0x8]
1004742e:	cmp    DWORD PTR [ebp-0x8],0x0
10047432:	mov    ecx,DWORD PTR [edx+0x8]
10047435:	mov    edi,DWORD PTR [edx+0x4]
10047438:	mov    DWORD PTR [ecx+0x4],edi
1004743b:	mov    ecx,DWORD PTR [edx+0x4]
1004743e:	mov    edi,DWORD PTR [edx+0x8]
10047441:	mov    DWORD PTR [ecx+0x8],edi
10047444:	je     0x100474d7
1004744a:	mov    ecx,DWORD PTR [ebp-0xc]
1004744d:	lea    ecx,[ecx+esi*8]
10047450:	mov    edi,DWORD PTR [ecx+0x4]
10047453:	mov    DWORD PTR [edx+0x8],ecx
10047456:	mov    DWORD PTR [edx+0x4],edi
10047459:	mov    DWORD PTR [ecx+0x4],edx
1004745c:	mov    ecx,DWORD PTR [edx+0x4]
1004745f:	mov    DWORD PTR [ecx+0x8],edx
10047462:	mov    ecx,DWORD PTR [edx+0x4]
10047465:	cmp    ecx,DWORD PTR [edx+0x8]
10047468:	jne    0x100474c8
1004746a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
1004746e:	mov    BYTE PTR [ebp+0xb],cl
10047471:	inc    cl
10047473:	cmp    esi,0x20
10047476:	mov    BYTE PTR [esi+eax*1+0x4],cl
1004747a:	jge    0x1004749f
1004747c:	cmp    BYTE PTR [ebp+0xb],0x0
10047480:	jne    0x1004748d
10047482:	mov    edi,0x80000000
10047487:	mov    ecx,esi
10047489:	shr    edi,cl
1004748b:	or     DWORD PTR [ebx],edi
1004748d:	mov    ecx,esi
1004748f:	mov    edi,0x80000000
10047494:	shr    edi,cl
10047496:	mov    ecx,DWORD PTR [ebp-0x4]
10047499:	or     DWORD PTR [eax+ecx*4+0x44],edi
1004749d:	jmp    0x100474c8
1004749f:	cmp    BYTE PTR [ebp+0xb],0x0
100474a3:	jne    0x100474b2
100474a5:	lea    ecx,[esi-0x20]
100474a8:	mov    edi,0x80000000
100474ad:	shr    edi,cl
100474af:	or     DWORD PTR [ebx+0x4],edi
100474b2:	mov    ecx,DWORD PTR [ebp-0x4]
100474b5:	lea    edi,[eax+ecx*4+0xc4]
100474bc:	lea    ecx,[esi-0x20]
100474bf:	mov    esi,0x80000000
100474c4:	shr    esi,cl
100474c6:	or     DWORD PTR [edi],esi
100474c8:	mov    ecx,DWORD PTR [ebp-0x8]
100474cb:	test   ecx,ecx
100474cd:	je     0x100474da
100474cf:	mov    DWORD PTR [edx],ecx
100474d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
100474d5:	jmp    0x100474da
100474d7:	mov    ecx,DWORD PTR [ebp-0x8]
100474da:	mov    esi,DWORD PTR [ebp-0x10]
100474dd:	add    edx,ecx
100474df:	lea    ecx,[esi+0x1]
100474e2:	mov    DWORD PTR [edx],ecx
100474e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
100474e8:	mov    esi,DWORD PTR [ebp-0xc]
100474eb:	mov    ecx,DWORD PTR [esi]
100474ed:	test   ecx,ecx
100474ef:	lea    edi,[ecx+0x1]
100474f2:	mov    DWORD PTR [esi],edi
100474f4:	jne    0x10047510
100474f6:	cmp    ebx,DWORD PTR ds:0x1007ef70
100474fc:	jne    0x10047510
100474fe:	mov    ecx,DWORD PTR [ebp-0x4]
10047501:	cmp    ecx,DWORD PTR ds:0x1008157c
10047507:	jne    0x10047510
10047509:	and    DWORD PTR ds:0x1007ef70,0x0
10047510:	mov    ecx,DWORD PTR [ebp-0x4]
10047513:	mov    DWORD PTR [eax],ecx
10047515:	lea    eax,[edx+0x4]
10047518:	pop    edi
10047519:	pop    esi
1004751a:	pop    ebx
1004751b:	leave  
1004751c:	ret    
1004751d:	push   ecx
1004751e:	push   ebx
1004751f:	mov    ebx,DWORD PTR [esp+0xc]
10047523:	push   esi
10047524:	push   edi
10047525:	xor    esi,esi
10047527:	xor    edi,edi
10047529:	cmp    ebx,DWORD PTR [edi*8+0x1007d2e8]
10047530:	je     0x10047538
10047532:	inc    edi
10047533:	cmp    edi,0x17
10047536:	jl     0x10047529
10047538:	cmp    edi,0x17
1004753b:	jae    0x100476b8
10047541:	push   ebp
10047542:	push   0x3
10047544:	call   0x1004b013
10047549:	cmp    eax,0x1
1004754c:	pop    ecx
1004754d:	je     0x10047684
10047553:	push   0x3
10047555:	call   0x1004b013
1004755a:	test   eax,eax
1004755c:	pop    ecx
1004755d:	jne    0x1004756c
1004755f:	cmp    DWORD PTR ds:0x1007ea84,0x1
10047566:	je     0x10047684
1004756c:	cmp    ebx,0xfc
10047572:	je     0x100476b7
10047578:	push   0x10065c18
1004757d:	mov    ebx,0x314
10047582:	push   ebx
10047583:	mov    ebp,0x1007ef78
10047588:	push   ebp
10047589:	call   0x100458e9
1004758e:	add    esp,0xc
10047591:	test   eax,eax
10047593:	je     0x100475a2
10047595:	push   esi
10047596:	push   esi
10047597:	push   esi
10047598:	push   esi
10047599:	push   esi
1004759a:	call   0x10042190
1004759f:	add    esp,0x14
100475a2:	push   0x104
100475a7:	mov    esi,0x1007ef91
100475ac:	push   esi
100475ad:	push   0x0
100475af:	mov    BYTE PTR ds:0x1007f095,0x0
100475b6:	call   DWORD PTR ds:0x100651d8
100475bc:	test   eax,eax
100475be:	jne    0x100475e6
100475c0:	push   0x10065c00
100475c5:	push   0x2fb
100475ca:	push   esi
100475cb:	call   0x100458e9
100475d0:	add    esp,0xc
100475d3:	test   eax,eax
100475d5:	je     0x100475e6
100475d7:	xor    eax,eax
100475d9:	push   eax
100475da:	push   eax
100475db:	push   eax
100475dc:	push   eax
100475dd:	push   eax
100475de:	call   0x10042190
100475e3:	add    esp,0x14
100475e6:	push   esi
100475e7:	call   0x10041f10
100475ec:	inc    eax
100475ed:	cmp    eax,0x3c
100475f0:	pop    ecx
100475f1:	jbe    0x1004762b
100475f3:	push   esi
100475f4:	call   0x10041f10
100475f9:	sub    esi,0x3b
100475fc:	add    eax,esi
100475fe:	push   0x3
10047600:	mov    ecx,0x1007f28c
10047605:	push   0x10065bfc
1004760a:	sub    ecx,eax
1004760c:	push   ecx
1004760d:	push   eax
1004760e:	call   0x1004af60
10047613:	add    esp,0x14
10047616:	test   eax,eax
10047618:	je     0x1004762b
1004761a:	xor    esi,esi
1004761c:	push   esi
1004761d:	push   esi
1004761e:	push   esi
1004761f:	push   esi
10047620:	push   esi
10047621:	call   0x10042190
10047626:	add    esp,0x14
10047629:	jmp    0x1004762d
1004762b:	xor    esi,esi
1004762d:	push   0x10065bf8
10047632:	push   ebx
10047633:	push   ebp
10047634:	call   0x1004aeef
10047639:	add    esp,0xc
1004763c:	test   eax,eax
1004763e:	je     0x1004764d
10047640:	push   esi
10047641:	push   esi
10047642:	push   esi
10047643:	push   esi
10047644:	push   esi
10047645:	call   0x10042190
1004764a:	add    esp,0x14
1004764d:	push   DWORD PTR [edi*8+0x1007d2ec]
10047654:	push   ebx
10047655:	push   ebp
10047656:	call   0x1004aeef
1004765b:	add    esp,0xc
1004765e:	test   eax,eax
10047660:	je     0x1004766f
10047662:	push   esi
10047663:	push   esi
10047664:	push   esi
10047665:	push   esi
10047666:	push   esi
10047667:	call   0x10042190
1004766c:	add    esp,0x14
1004766f:	push   0x12010
10047674:	push   0x10065bd0
10047679:	push   ebp
1004767a:	call   0x1004ad51
1004767f:	add    esp,0xc
10047682:	jmp    0x100476b7
10047684:	push   0xfffffff4
10047686:	call   DWORD PTR ds:0x100651d4
1004768c:	mov    ebp,eax
1004768e:	cmp    ebp,esi
10047690:	je     0x100476b7
10047692:	cmp    ebp,0xffffffff
10047695:	je     0x100476b7
10047697:	push   0x0
10047699:	lea    eax,[esp+0x14]
1004769d:	push   eax
1004769e:	lea    esi,[edi*8+0x1007d2ec]
100476a5:	push   DWORD PTR [esi]
100476a7:	call   0x10041f10
100476ac:	pop    ecx
100476ad:	push   eax
100476ae:	push   DWORD PTR [esi]
100476b0:	push   ebp
100476b1:	call   DWORD PTR ds:0x100650b4
100476b7:	pop    ebp
100476b8:	pop    edi
100476b9:	pop    esi
100476ba:	pop    ebx
100476bb:	pop    ecx
100476bc:	ret    
100476bd:	push   0x3
100476bf:	call   0x1004b013
100476c4:	cmp    eax,0x1
100476c7:	pop    ecx
100476c8:	je     0x100476df
100476ca:	push   0x3
100476cc:	call   0x1004b013
100476d1:	test   eax,eax
100476d3:	pop    ecx
100476d4:	jne    0x100476f5
100476d6:	cmp    DWORD PTR ds:0x1007ea84,0x1
100476dd:	jne    0x100476f5
100476df:	push   0xfc
100476e4:	call   0x1004751d
100476e9:	push   0xff
100476ee:	call   0x1004751d
100476f3:	pop    ecx
100476f4:	pop    ecx
100476f5:	ret    
100476f6:	int3   
100476f7:	int3   
100476f8:	int3   
100476f9:	int3   
100476fa:	int3   
100476fb:	int3   
100476fc:	int3   
100476fd:	int3   
100476fe:	int3   
100476ff:	int3   
10047700:	push   ecx
10047701:	lea    ecx,[esp+0x4]
10047705:	sub    ecx,eax
10047707:	sbb    eax,eax
10047709:	not    eax
1004770b:	and    ecx,eax
1004770d:	mov    eax,esp
1004770f:	and    eax,0xfffff000
10047714:	cmp    ecx,eax
10047716:	jb     0x10047722
10047718:	mov    eax,ecx
1004771a:	pop    ecx
1004771b:	xchg   esp,eax
1004771c:	mov    eax,DWORD PTR [eax]
1004771e:	mov    DWORD PTR [esp],eax
10047721:	ret    
10047722:	sub    eax,0x1000
10047727:	test   DWORD PTR [eax],eax
10047729:	jmp    0x10047714
1004772b:	push   ebp
1004772c:	mov    ebp,esp
1004772e:	sub    esp,0x8
10047731:	mov    DWORD PTR [ebp-0x4],edi
10047734:	mov    DWORD PTR [ebp-0x8],esi
10047737:	mov    esi,DWORD PTR [ebp+0xc]
1004773a:	mov    edi,DWORD PTR [ebp+0x8]
1004773d:	mov    ecx,DWORD PTR [ebp+0x10]
10047740:	shr    ecx,0x7
10047743:	jmp    0x1004774b
10047745:	lea    ebx,[ebx+0x0]
1004774b:	movdqa xmm0,XMMWORD PTR [esi]
1004774f:	movdqa xmm1,XMMWORD PTR [esi+0x10]
10047754:	movdqa xmm2,XMMWORD PTR [esi+0x20]
10047759:	movdqa xmm3,XMMWORD PTR [esi+0x30]
1004775e:	movdqa XMMWORD PTR [edi],xmm0
10047762:	movdqa XMMWORD PTR [edi+0x10],xmm1
10047767:	movdqa XMMWORD PTR [edi+0x20],xmm2
1004776c:	movdqa XMMWORD PTR [edi+0x30],xmm3
10047771:	movdqa xmm4,XMMWORD PTR [esi+0x40]
10047776:	movdqa xmm5,XMMWORD PTR [esi+0x50]
1004777b:	movdqa xmm6,XMMWORD PTR [esi+0x60]
10047780:	movdqa xmm7,XMMWORD PTR [esi+0x70]
10047785:	movdqa XMMWORD PTR [edi+0x40],xmm4
1004778a:	movdqa XMMWORD PTR [edi+0x50],xmm5
1004778f:	movdqa XMMWORD PTR [edi+0x60],xmm6
10047794:	movdqa XMMWORD PTR [edi+0x70],xmm7
10047799:	lea    esi,[esi+0x80]
1004779f:	lea    edi,[edi+0x80]
100477a5:	dec    ecx
100477a6:	jne    0x1004774b
100477a8:	mov    esi,DWORD PTR [ebp-0x8]
100477ab:	mov    edi,DWORD PTR [ebp-0x4]
100477ae:	mov    esp,ebp
100477b0:	pop    ebp
100477b1:	ret    
100477b2:	push   ebp
100477b3:	mov    ebp,esp
100477b5:	sub    esp,0x1c
100477b8:	mov    DWORD PTR [ebp-0xc],edi
100477bb:	mov    DWORD PTR [ebp-0x8],esi
100477be:	mov    DWORD PTR [ebp-0x4],ebx
100477c1:	mov    ebx,DWORD PTR [ebp+0xc]
100477c4:	mov    eax,ebx
100477c6:	cdq    
100477c7:	mov    ecx,eax
100477c9:	mov    eax,DWORD PTR [ebp+0x8]
100477cc:	xor    ecx,edx
100477ce:	sub    ecx,edx
100477d0:	and    ecx,0xf
100477d3:	xor    ecx,edx
100477d5:	sub    ecx,edx
100477d7:	cdq    
100477d8:	mov    edi,eax
100477da:	xor    edi,edx
100477dc:	sub    edi,edx
100477de:	and    edi,0xf
100477e1:	xor    edi,edx
100477e3:	sub    edi,edx
100477e5:	mov    edx,ecx
100477e7:	or     edx,edi
100477e9:	jne    0x10047835
100477eb:	mov    esi,DWORD PTR [ebp+0x10]
100477ee:	mov    ecx,esi
100477f0:	and    ecx,0x7f
100477f3:	mov    DWORD PTR [ebp-0x18],ecx
100477f6:	cmp    esi,ecx
100477f8:	je     0x1004780d
100477fa:	sub    esi,ecx
100477fc:	push   esi
100477fd:	push   ebx
100477fe:	push   eax
100477ff:	call   0x1004772b
10047804:	add    esp,0xc
10047807:	mov    eax,DWORD PTR [ebp+0x8]
1004780a:	mov    ecx,DWORD PTR [ebp-0x18]
1004780d:	test   ecx,ecx
1004780f:	je     0x10047888
10047811:	mov    ebx,DWORD PTR [ebp+0x10]
10047814:	mov    edx,DWORD PTR [ebp+0xc]
10047817:	add    edx,ebx
10047819:	sub    edx,ecx
1004781b:	mov    DWORD PTR [ebp-0x14],edx
1004781e:	add    ebx,eax
10047820:	sub    ebx,ecx
10047822:	mov    DWORD PTR [ebp-0x10],ebx
10047825:	mov    esi,DWORD PTR [ebp-0x14]
10047828:	mov    edi,DWORD PTR [ebp-0x10]
1004782b:	mov    ecx,DWORD PTR [ebp-0x18]
1004782e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10047830:	mov    eax,DWORD PTR [ebp+0x8]
10047833:	jmp    0x10047888
10047835:	cmp    ecx,edi
10047837:	jne    0x1004786e
10047839:	neg    ecx
1004783b:	add    ecx,0x10
1004783e:	mov    DWORD PTR [ebp-0x1c],ecx
10047841:	mov    esi,DWORD PTR [ebp+0xc]
10047844:	mov    edi,DWORD PTR [ebp+0x8]
10047847:	mov    ecx,DWORD PTR [ebp-0x1c]
1004784a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1004784c:	mov    ecx,DWORD PTR [ebp+0x8]
1004784f:	add    ecx,DWORD PTR [ebp-0x1c]
10047852:	mov    edx,DWORD PTR [ebp+0xc]
10047855:	add    edx,DWORD PTR [ebp-0x1c]
10047858:	mov    eax,DWORD PTR [ebp+0x10]
1004785b:	sub    eax,DWORD PTR [ebp-0x1c]
1004785e:	push   eax
1004785f:	push   edx
10047860:	push   ecx
10047861:	call   0x100477b2
10047866:	add    esp,0xc
10047869:	mov    eax,DWORD PTR [ebp+0x8]
1004786c:	jmp    0x10047888
1004786e:	mov    esi,DWORD PTR [ebp+0xc]
10047871:	mov    edi,DWORD PTR [ebp+0x8]
10047874:	mov    ecx,DWORD PTR [ebp+0x10]
10047877:	mov    edx,ecx
10047879:	shr    ecx,0x2
1004787c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1004787e:	mov    ecx,edx
10047880:	and    ecx,0x3
10047883:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
10047885:	mov    eax,DWORD PTR [ebp+0x8]
10047888:	mov    ebx,DWORD PTR [ebp-0x4]
1004788b:	mov    esi,DWORD PTR [ebp-0x8]
1004788e:	mov    edi,DWORD PTR [ebp-0xc]
10047891:	mov    esp,ebp
10047893:	pop    ebp
10047894:	ret    
10047895:	and    DWORD PTR ds:0x10081560,0x0
1004789c:	call   0x1004b0a9
100478a1:	mov    ds:0x10081560,eax
100478a6:	xor    eax,eax
100478a8:	ret    
100478a9:	sub    eax,0x3a4
100478ae:	je     0x100478d2
100478b0:	sub    eax,0x4
100478b3:	je     0x100478cc
100478b5:	sub    eax,0xd
100478b8:	je     0x100478c6
100478ba:	dec    eax
100478bb:	je     0x100478c0
100478bd:	xor    eax,eax
100478bf:	ret    
100478c0:	mov    eax,0x404
100478c5:	ret    
100478c6:	mov    eax,0x412
100478cb:	ret    
100478cc:	mov    eax,0x804
100478d1:	ret    
100478d2:	mov    eax,0x411
100478d7:	ret    
100478d8:	push   ebx
100478d9:	push   ebp
100478da:	push   esi
100478db:	push   edi
100478dc:	mov    ebp,0x101
100478e1:	mov    esi,eax
100478e3:	push   ebp
100478e4:	xor    edi,edi
100478e6:	lea    ebx,[esi+0x1c]
100478e9:	push   edi
100478ea:	push   ebx
100478eb:	call   0x10044950
100478f0:	mov    DWORD PTR [esi+0x4],edi
100478f3:	mov    DWORD PTR [esi+0x8],edi
100478f6:	mov    DWORD PTR [esi+0xc],edi
100478f9:	xor    eax,eax
100478fb:	lea    edi,[esi+0x10]
100478fe:	stos   DWORD PTR es:[edi],eax
100478ff:	stos   DWORD PTR es:[edi],eax
10047900:	stos   DWORD PTR es:[edi],eax
10047901:	mov    eax,0x1007d3a0
10047906:	add    esp,0xc
10047909:	sub    eax,esi
1004790b:	mov    cl,BYTE PTR [eax+ebx*1]
1004790e:	mov    BYTE PTR [ebx],cl
10047910:	inc    ebx
10047911:	dec    ebp
10047912:	jne    0x1004790b
10047914:	lea    ecx,[esi+0x11d]
1004791a:	mov    esi,0x100
1004791f:	mov    dl,BYTE PTR [ecx+eax*1]
10047922:	mov    BYTE PTR [ecx],dl
10047924:	inc    ecx
10047925:	dec    esi
10047926:	jne    0x1004791f
10047928:	pop    edi
10047929:	pop    esi
1004792a:	pop    ebp
1004792b:	pop    ebx
1004792c:	ret    
1004792d:	push   ebp
1004792e:	lea    ebp,[esp-0x49c]
10047935:	sub    esp,0x51c
1004793b:	mov    eax,ds:0x1007d030
10047940:	xor    eax,ebp
10047942:	mov    DWORD PTR [ebp+0x498],eax
10047948:	push   ebx
10047949:	push   edi
1004794a:	lea    eax,[ebp-0x7c]
1004794d:	push   eax
1004794e:	push   DWORD PTR [esi+0x4]
10047951:	call   DWORD PTR ds:0x100651dc
10047957:	test   eax,eax
10047959:	mov    edi,0x100
1004795e:	je     0x10047a53
10047964:	xor    eax,eax
10047966:	mov    BYTE PTR [ebp+eax*1+0x398],al
1004796d:	inc    eax
1004796e:	cmp    eax,edi
10047970:	jb     0x10047966
10047972:	mov    al,BYTE PTR [ebp-0x76]
10047975:	test   al,al
10047977:	mov    BYTE PTR [ebp+0x398],0x20
1004797e:	je     0x100479ab
10047980:	lea    ebx,[ebp-0x75]
10047983:	movzx  ecx,al
10047986:	movzx  eax,BYTE PTR [ebx]
10047989:	cmp    ecx,eax
1004798b:	ja     0x100479a3
1004798d:	sub    eax,ecx
1004798f:	inc    eax
10047990:	push   eax
10047991:	lea    edx,[ebp+ecx*1+0x398]
10047998:	push   0x20
1004799a:	push   edx
1004799b:	call   0x10044950
100479a0:	add    esp,0xc
100479a3:	inc    ebx
100479a4:	mov    al,BYTE PTR [ebx]
100479a6:	inc    ebx
100479a7:	test   al,al
100479a9:	jne    0x10047983
100479ab:	push   0x0
100479ad:	push   DWORD PTR [esi+0xc]
100479b0:	lea    eax,[ebp-0x68]
100479b3:	push   DWORD PTR [esi+0x4]
100479b6:	push   eax
100479b7:	push   edi
100479b8:	lea    eax,[ebp+0x398]
100479be:	push   eax
100479bf:	push   0x1
100479c1:	push   0x0
100479c3:	call   0x1004b2ce
100479c8:	xor    ebx,ebx
100479ca:	push   ebx
100479cb:	push   DWORD PTR [esi+0x4]
100479ce:	lea    eax,[ebp+0x298]
100479d4:	push   edi
100479d5:	push   eax
100479d6:	push   edi
100479d7:	lea    eax,[ebp+0x398]
100479dd:	push   eax
100479de:	push   edi
100479df:	push   DWORD PTR [esi+0xc]
100479e2:	push   ebx
100479e3:	call   0x10048b9c
100479e8:	add    esp,0x44
100479eb:	push   ebx
100479ec:	push   DWORD PTR [esi+0x4]
100479ef:	lea    eax,[ebp+0x198]
100479f5:	push   edi
100479f6:	push   eax
100479f7:	push   edi
100479f8:	lea    eax,[ebp+0x398]
100479fe:	push   eax
100479ff:	push   0x200
10047a04:	push   DWORD PTR [esi+0xc]
10047a07:	push   ebx
10047a08:	call   0x10048b9c
10047a0d:	add    esp,0x24
10047a10:	xor    eax,eax
10047a12:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
10047a17:	test   cl,0x1
10047a1a:	je     0x10047a2a
10047a1c:	or     BYTE PTR [esi+eax*1+0x1d],0x10
10047a21:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
10047a28:	jmp    0x10047a3b
10047a2a:	test   cl,0x2
10047a2d:	je     0x10047a44
10047a2f:	or     BYTE PTR [esi+eax*1+0x1d],0x20
10047a34:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
10047a3b:	mov    BYTE PTR [esi+eax*1+0x11d],cl
10047a42:	jmp    0x10047a4c
10047a44:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
10047a4c:	inc    eax
10047a4d:	cmp    eax,edi
10047a4f:	jb     0x10047a12
10047a51:	jmp    0x10047aa0
10047a53:	lea    eax,[esi+0x11d]
10047a59:	mov    DWORD PTR [ebp-0x80],0xffffff9f
10047a60:	xor    ecx,ecx
10047a62:	sub    DWORD PTR [ebp-0x80],eax
10047a65:	mov    edx,DWORD PTR [ebp-0x80]
10047a68:	lea    eax,[esi+ecx*1+0x11d]
10047a6f:	add    edx,eax
10047a71:	lea    ebx,[edx+0x20]
10047a74:	cmp    ebx,0x19
10047a77:	ja     0x10047a85
10047a79:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
10047a7e:	mov    dl,cl
10047a80:	add    dl,0x20
10047a83:	jmp    0x10047a94
10047a85:	cmp    edx,0x19
10047a88:	ja     0x10047a98
10047a8a:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
10047a8f:	mov    dl,cl
10047a91:	sub    dl,0x20
10047a94:	mov    BYTE PTR [eax],dl
10047a96:	jmp    0x10047a9b
10047a98:	mov    BYTE PTR [eax],0x0
10047a9b:	inc    ecx
10047a9c:	cmp    ecx,edi
10047a9e:	jb     0x10047a65
10047aa0:	mov    ecx,DWORD PTR [ebp+0x498]
10047aa6:	pop    edi
10047aa7:	xor    ecx,ebp
10047aa9:	pop    ebx
10047aaa:	call   0x10041d97
10047aaf:	add    ebp,0x49c
10047ab5:	leave  
10047ab6:	ret    
10047ab7:	push   0xc
10047ab9:	push   0x10073308
10047abe:	call   0x100459e4
10047ac3:	call   0x10045e4c
10047ac8:	mov    edi,eax
10047aca:	mov    eax,ds:0x1007d8c4
10047acf:	test   DWORD PTR [edi+0x70],eax
10047ad2:	je     0x10047af1
10047ad4:	cmp    DWORD PTR [edi+0x6c],0x0
10047ad8:	je     0x10047af1
10047ada:	mov    esi,DWORD PTR [edi+0x68]
10047add:	test   esi,esi
10047adf:	jne    0x10047ae9
10047ae1:	push   0x20
10047ae3:	call   0x100462e8
10047ae8:	pop    ecx
10047ae9:	mov    eax,esi
10047aeb:	call   0x10045a29
10047af0:	ret    
10047af1:	push   0xd
10047af3:	call   0x100469ed
10047af8:	pop    ecx
10047af9:	and    DWORD PTR [ebp-0x4],0x0
10047afd:	mov    esi,DWORD PTR [edi+0x68]
10047b00:	mov    DWORD PTR [ebp-0x1c],esi
10047b03:	cmp    esi,DWORD PTR ds:0x1007d7c8
10047b09:	je     0x10047b41
10047b0b:	test   esi,esi
10047b0d:	je     0x10047b29
10047b0f:	push   esi
10047b10:	call   DWORD PTR ds:0x100650ac
10047b16:	test   eax,eax
10047b18:	jne    0x10047b29
10047b1a:	cmp    esi,0x1007d3a0
10047b20:	je     0x10047b29
10047b22:	push   esi
10047b23:	call   0x10042408
10047b28:	pop    ecx
10047b29:	mov    eax,ds:0x1007d7c8
10047b2e:	mov    DWORD PTR [edi+0x68],eax
10047b31:	mov    esi,DWORD PTR ds:0x1007d7c8
10047b37:	mov    DWORD PTR [ebp-0x1c],esi
10047b3a:	push   esi
10047b3b:	call   DWORD PTR ds:0x100650a4
10047b41:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047b48:	call   0x10047b52
10047b4d:	jmp    0x10047add
10047b4f:	mov    esi,DWORD PTR [ebp-0x1c]
10047b52:	push   0xd
10047b54:	call   0x10046915
10047b59:	pop    ecx
10047b5a:	ret    
10047b5b:	push   ebp
10047b5c:	mov    ebp,esp
10047b5e:	sub    esp,0x10
10047b61:	push   ebx
10047b62:	xor    ebx,ebx
10047b64:	push   ebx
10047b65:	lea    ecx,[ebp-0x10]
10047b68:	call   0x10044235
10047b6d:	cmp    esi,0xfffffffe
10047b70:	mov    DWORD PTR ds:0x1007f28c,ebx
10047b76:	jne    0x10047b96
10047b78:	mov    DWORD PTR ds:0x1007f28c,0x1
10047b82:	call   DWORD PTR ds:0x100651e4
10047b88:	cmp    BYTE PTR [ebp-0x4],bl
10047b8b:	je     0x10047bd2
10047b8d:	mov    ecx,DWORD PTR [ebp-0x8]
10047b90:	and    DWORD PTR [ecx+0x70],0xfffffffd
10047b94:	jmp    0x10047bd2
10047b96:	cmp    esi,0xfffffffd
10047b99:	jne    0x10047bad
10047b9b:	mov    DWORD PTR ds:0x1007f28c,0x1
10047ba5:	call   DWORD PTR ds:0x100651e0
10047bab:	jmp    0x10047b88
10047bad:	cmp    esi,0xfffffffc
10047bb0:	jne    0x10047bc4
10047bb2:	mov    eax,DWORD PTR [ebp-0x10]
10047bb5:	mov    eax,DWORD PTR [eax+0x4]
10047bb8:	mov    DWORD PTR ds:0x1007f28c,0x1
10047bc2:	jmp    0x10047b88
10047bc4:	cmp    BYTE PTR [ebp-0x4],bl
10047bc7:	je     0x10047bd0
10047bc9:	mov    eax,DWORD PTR [ebp-0x8]
10047bcc:	and    DWORD PTR [eax+0x70],0xfffffffd
10047bd0:	mov    eax,esi
10047bd2:	pop    ebx
10047bd3:	leave  
10047bd4:	ret    
10047bd5:	push   ebp
10047bd6:	mov    ebp,esp
10047bd8:	sub    esp,0x20
10047bdb:	mov    eax,ds:0x1007d030
10047be0:	xor    eax,ebp
10047be2:	mov    DWORD PTR [ebp-0x4],eax
10047be5:	push   ebx
10047be6:	mov    ebx,DWORD PTR [ebp+0xc]
10047be9:	push   esi
10047bea:	mov    esi,DWORD PTR [ebp+0x8]
10047bed:	push   edi
10047bee:	call   0x10047b5b
10047bf3:	mov    edi,eax
10047bf5:	xor    esi,esi
10047bf7:	cmp    edi,esi
10047bf9:	mov    DWORD PTR [ebp+0x8],edi
10047bfc:	jne    0x10047c0c
10047bfe:	mov    eax,ebx
10047c00:	call   0x100478d8
10047c05:	xor    eax,eax
10047c07:	jmp    0x10047d71
10047c0c:	mov    DWORD PTR [ebp-0x1c],esi
10047c0f:	xor    eax,eax
10047c11:	cmp    DWORD PTR [eax+0x1007d7d0],edi
10047c17:	je     0x10047c80
10047c19:	inc    DWORD PTR [ebp-0x1c]
10047c1c:	add    eax,0x30
10047c1f:	cmp    eax,0xf0
10047c24:	jb     0x10047c11
10047c26:	lea    eax,[ebp-0x18]
10047c29:	push   eax
10047c2a:	push   edi
10047c2b:	call   DWORD PTR ds:0x100651dc
10047c31:	test   eax,eax
10047c33:	je     0x10047d62
10047c39:	push   0x101
10047c3e:	lea    eax,[ebx+0x1c]
10047c41:	push   esi
10047c42:	push   eax
10047c43:	call   0x10044950
10047c48:	xor    edx,edx
10047c4a:	inc    edx
10047c4b:	add    esp,0xc
10047c4e:	cmp    DWORD PTR [ebp-0x18],edx
10047c51:	mov    DWORD PTR [ebx+0x4],edi
10047c54:	mov    DWORD PTR [ebx+0xc],esi
10047c57:	jbe    0x10047d55
10047c5d:	cmp    BYTE PTR [ebp-0x12],0x0
10047c61:	je     0x10047d36
10047c67:	lea    esi,[ebp-0x11]
10047c6a:	mov    cl,BYTE PTR [esi]
10047c6c:	test   cl,cl
10047c6e:	je     0x10047d36
10047c74:	movzx  eax,BYTE PTR [esi-0x1]
10047c78:	movzx  ecx,cl
10047c7b:	jmp    0x10047d26
10047c80:	push   0x101
10047c85:	lea    eax,[ebx+0x1c]
10047c88:	push   esi
10047c89:	push   eax
10047c8a:	call   0x10044950
10047c8f:	mov    ecx,DWORD PTR [ebp-0x1c]
10047c92:	add    esp,0xc
10047c95:	imul   ecx,ecx,0x30
10047c98:	mov    DWORD PTR [ebp-0x20],esi
10047c9b:	lea    esi,[ecx+0x1007d7e0]
10047ca1:	mov    DWORD PTR [ebp-0x1c],esi
10047ca4:	jmp    0x10047cd0
10047ca6:	mov    al,BYTE PTR [esi+0x1]
10047ca9:	test   al,al
10047cab:	je     0x10047cd5
10047cad:	movzx  edi,BYTE PTR [esi]
10047cb0:	movzx  eax,al
10047cb3:	jmp    0x10047cc7
10047cb5:	mov    eax,DWORD PTR [ebp-0x20]
10047cb8:	mov    al,BYTE PTR [eax+0x1007d7cc]
10047cbe:	or     BYTE PTR [ebx+edi*1+0x1d],al
10047cc2:	movzx  eax,BYTE PTR [esi+0x1]
10047cc6:	inc    edi
10047cc7:	cmp    edi,eax
10047cc9:	jbe    0x10047cb5
10047ccb:	mov    edi,DWORD PTR [ebp+0x8]
10047cce:	inc    esi
10047ccf:	inc    esi
10047cd0:	cmp    BYTE PTR [esi],0x0
10047cd3:	jne    0x10047ca6
10047cd5:	mov    esi,DWORD PTR [ebp-0x1c]
10047cd8:	inc    DWORD PTR [ebp-0x20]
10047cdb:	add    esi,0x8
10047cde:	cmp    DWORD PTR [ebp-0x20],0x4
10047ce2:	mov    DWORD PTR [ebp-0x1c],esi
10047ce5:	jb     0x10047cd0
10047ce7:	mov    eax,edi
10047ce9:	mov    DWORD PTR [ebx+0x4],edi
10047cec:	mov    DWORD PTR [ebx+0x8],0x1
10047cf3:	call   0x100478a9
10047cf8:	push   0x6
10047cfa:	mov    DWORD PTR [ebx+0xc],eax
10047cfd:	lea    eax,[ebx+0x10]
10047d00:	lea    ecx,[ecx+0x1007d7d4]
10047d06:	pop    edx
10047d07:	mov    si,WORD PTR [ecx]
10047d0a:	inc    ecx
10047d0b:	mov    WORD PTR [eax],si
10047d0e:	inc    ecx
10047d0f:	inc    eax
10047d10:	inc    eax
10047d11:	dec    edx
10047d12:	jne    0x10047d07
10047d14:	mov    esi,ebx
10047d16:	call   0x1004792d
10047d1b:	jmp    0x10047c05
10047d20:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
10047d25:	inc    eax
10047d26:	cmp    eax,ecx
10047d28:	jbe    0x10047d20
10047d2a:	inc    esi
10047d2b:	inc    esi
10047d2c:	cmp    BYTE PTR [esi-0x1],0x0
10047d30:	jne    0x10047c6a
10047d36:	lea    eax,[ebx+0x1e]
10047d39:	mov    ecx,0xfe
10047d3e:	or     BYTE PTR [eax],0x8
10047d41:	inc    eax
10047d42:	dec    ecx
10047d43:	jne    0x10047d3e
10047d45:	mov    eax,DWORD PTR [ebx+0x4]
10047d48:	call   0x100478a9
10047d4d:	mov    DWORD PTR [ebx+0xc],eax
10047d50:	mov    DWORD PTR [ebx+0x8],edx
10047d53:	jmp    0x10047d58
10047d55:	mov    DWORD PTR [ebx+0x8],esi
10047d58:	xor    eax,eax
10047d5a:	lea    edi,[ebx+0x10]
10047d5d:	stos   DWORD PTR es:[edi],eax
10047d5e:	stos   DWORD PTR es:[edi],eax
10047d5f:	stos   DWORD PTR es:[edi],eax
10047d60:	jmp    0x10047d14
10047d62:	cmp    DWORD PTR ds:0x1007f28c,esi
10047d68:	jne    0x10047bfe
10047d6e:	or     eax,0xffffffff
10047d71:	mov    ecx,DWORD PTR [ebp-0x4]
10047d74:	pop    edi
10047d75:	pop    esi
10047d76:	xor    ecx,ebp
10047d78:	pop    ebx
10047d79:	call   0x10041d97
10047d7e:	leave  
10047d7f:	ret    
10047d80:	push   0x14
10047d82:	push   0x10073328
10047d87:	call   0x100459e4
10047d8c:	or     DWORD PTR [ebp-0x20],0xffffffff
10047d90:	call   0x10045e4c
10047d95:	mov    edi,eax
10047d97:	mov    DWORD PTR [ebp-0x24],edi
10047d9a:	call   0x10047ab7
10047d9f:	mov    ebx,DWORD PTR [edi+0x68]
10047da2:	mov    esi,DWORD PTR [ebp+0x8]
10047da5:	call   0x10047b5b
10047daa:	mov    DWORD PTR [ebp+0x8],eax
10047dad:	cmp    eax,DWORD PTR [ebx+0x4]
10047db0:	je     0x10047f0d
10047db6:	push   0x220
10047dbb:	call   0x10046172
10047dc0:	pop    ecx
10047dc1:	mov    ebx,eax
10047dc3:	test   ebx,ebx
10047dc5:	je     0x10047f11
10047dcb:	mov    ecx,0x88
10047dd0:	mov    esi,DWORD PTR [edi+0x68]
10047dd3:	mov    edi,ebx
10047dd5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10047dd7:	and    DWORD PTR [ebx],0x0
10047dda:	push   ebx
10047ddb:	push   DWORD PTR [ebp+0x8]
10047dde:	call   0x10047bd5
10047de3:	pop    ecx
10047de4:	pop    ecx
10047de5:	mov    DWORD PTR [ebp-0x20],eax
10047de8:	test   eax,eax
10047dea:	jne    0x10047eec
10047df0:	mov    esi,DWORD PTR [ebp-0x24]
10047df3:	push   DWORD PTR [esi+0x68]
10047df6:	call   DWORD PTR ds:0x100650ac
10047dfc:	test   eax,eax
10047dfe:	jne    0x10047e11
10047e00:	mov    eax,DWORD PTR [esi+0x68]
10047e03:	cmp    eax,0x1007d3a0
10047e08:	je     0x10047e11
10047e0a:	push   eax
10047e0b:	call   0x10042408
10047e10:	pop    ecx
10047e11:	mov    DWORD PTR [esi+0x68],ebx
10047e14:	push   ebx
10047e15:	mov    edi,DWORD PTR ds:0x100650a4
10047e1b:	call   edi
10047e1d:	test   BYTE PTR [esi+0x70],0x2
10047e21:	jne    0x10047f11
10047e27:	test   BYTE PTR ds:0x1007d8c4,0x1
10047e2e:	jne    0x10047f11
10047e34:	push   0xd
10047e36:	call   0x100469ed
10047e3b:	pop    ecx
10047e3c:	and    DWORD PTR [ebp-0x4],0x0
10047e40:	mov    eax,DWORD PTR [ebx+0x4]
10047e43:	mov    ds:0x1007f29c,eax
10047e48:	mov    eax,DWORD PTR [ebx+0x8]
10047e4b:	mov    ds:0x1007f2a0,eax
10047e50:	mov    eax,DWORD PTR [ebx+0xc]
10047e53:	mov    ds:0x1007f2a4,eax
10047e58:	xor    eax,eax
10047e5a:	mov    DWORD PTR [ebp-0x1c],eax
10047e5d:	cmp    eax,0x5
10047e60:	jge    0x10047e72
10047e62:	mov    cx,WORD PTR [ebx+eax*2+0x10]
10047e67:	mov    WORD PTR [eax*2+0x1007f290],cx
10047e6f:	inc    eax
10047e70:	jmp    0x10047e5a
10047e72:	xor    eax,eax
10047e74:	mov    DWORD PTR [ebp-0x1c],eax
10047e77:	cmp    eax,0x101
10047e7c:	jge    0x10047e8b
10047e7e:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
10047e82:	mov    BYTE PTR [eax+0x1007d5c0],cl
10047e88:	inc    eax
10047e89:	jmp    0x10047e74
10047e8b:	xor    eax,eax
10047e8d:	mov    DWORD PTR [ebp-0x1c],eax
10047e90:	cmp    eax,0x100
10047e95:	jge    0x10047ea7
10047e97:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
10047e9e:	mov    BYTE PTR [eax+0x1007d6c8],cl
10047ea4:	inc    eax
10047ea5:	jmp    0x10047e8d
10047ea7:	push   DWORD PTR ds:0x1007d7c8
10047ead:	call   DWORD PTR ds:0x100650ac
10047eb3:	test   eax,eax
10047eb5:	jne    0x10047eca
10047eb7:	mov    eax,ds:0x1007d7c8
10047ebc:	cmp    eax,0x1007d3a0
10047ec1:	je     0x10047eca
10047ec3:	push   eax
10047ec4:	call   0x10042408
10047ec9:	pop    ecx
10047eca:	mov    DWORD PTR ds:0x1007d7c8,ebx
10047ed0:	push   ebx
10047ed1:	call   edi
10047ed3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10047eda:	call   0x10047ee1
10047edf:	jmp    0x10047f11
10047ee1:	push   0xd
10047ee3:	call   0x10046915
10047ee8:	pop    ecx
10047ee9:	ret    
10047eea:	jmp    0x10047f11
10047eec:	cmp    eax,0xffffffff
10047eef:	jne    0x10047f11
10047ef1:	cmp    ebx,0x1007d3a0
10047ef7:	je     0x10047f00
10047ef9:	push   ebx
10047efa:	call   0x10042408
10047eff:	pop    ecx
10047f00:	call   0x100458a5
10047f05:	mov    DWORD PTR [eax],0x16
10047f0b:	jmp    0x10047f11
10047f0d:	and    DWORD PTR [ebp-0x20],0x0
10047f11:	mov    eax,DWORD PTR [ebp-0x20]
10047f14:	call   0x10045a29
10047f19:	ret    
10047f1a:	cmp    DWORD PTR ds:0x10081594,0x0
10047f21:	jne    0x10047f35
10047f23:	push   0xfffffffd
10047f25:	call   0x10047d80
10047f2a:	pop    ecx
10047f2b:	mov    DWORD PTR ds:0x10081594,0x1
10047f35:	xor    eax,eax
10047f37:	ret    
10047f38:	push   ebx
10047f39:	push   ebp
10047f3a:	push   esi
10047f3b:	mov    esi,DWORD PTR [esp+0x10]
10047f3f:	mov    eax,DWORD PTR [esi+0xbc]
10047f45:	xor    ebp,ebp
10047f47:	cmp    eax,ebp
10047f49:	push   edi
10047f4a:	je     0x10047fbb
10047f4c:	cmp    eax,0x1007db70
10047f51:	je     0x10047fbb
10047f53:	mov    eax,DWORD PTR [esi+0xb0]
10047f59:	cmp    eax,ebp
10047f5b:	je     0x10047fbb
10047f5d:	cmp    DWORD PTR [eax],ebp
10047f5f:	jne    0x10047fbb
10047f61:	mov    eax,DWORD PTR [esi+0xb8]
10047f67:	cmp    eax,ebp
10047f69:	je     0x10047f82
10047f6b:	cmp    DWORD PTR [eax],ebp
10047f6d:	jne    0x10047f82
10047f6f:	push   eax
10047f70:	call   0x10042408
10047f75:	push   DWORD PTR [esi+0xbc]
10047f7b:	call   0x1004b4de
10047f80:	pop    ecx
10047f81:	pop    ecx
10047f82:	mov    eax,DWORD PTR [esi+0xb4]
10047f88:	cmp    eax,ebp
10047f8a:	je     0x10047fa3
10047f8c:	cmp    DWORD PTR [eax],ebp
10047f8e:	jne    0x10047fa3
10047f90:	push   eax
10047f91:	call   0x10042408
10047f96:	push   DWORD PTR [esi+0xbc]
10047f9c:	call   0x1004b49e
10047fa1:	pop    ecx
10047fa2:	pop    ecx
10047fa3:	push   DWORD PTR [esi+0xb0]
10047fa9:	call   0x10042408
10047fae:	push   DWORD PTR [esi+0xbc]
10047fb4:	call   0x10042408
10047fb9:	pop    ecx
10047fba:	pop    ecx
10047fbb:	mov    eax,DWORD PTR [esi+0xc0]
10047fc1:	cmp    eax,ebp
10047fc3:	je     0x10048009
10047fc5:	cmp    DWORD PTR [eax],ebp
10047fc7:	jne    0x10048009
10047fc9:	mov    eax,DWORD PTR [esi+0xc4]
10047fcf:	sub    eax,0xfe
10047fd4:	push   eax
10047fd5:	call   0x10042408
10047fda:	mov    eax,DWORD PTR [esi+0xcc]
10047fe0:	mov    edi,0x80
10047fe5:	sub    eax,edi
10047fe7:	push   eax
10047fe8:	call   0x10042408
10047fed:	mov    eax,DWORD PTR [esi+0xd0]
10047ff3:	sub    eax,edi
10047ff5:	push   eax
10047ff6:	call   0x10042408
10047ffb:	push   DWORD PTR [esi+0xc0]
10048001:	call   0x10042408
10048006:	add    esp,0x10
10048009:	lea    edi,[esi+0xd4]
1004800f:	mov    eax,DWORD PTR [edi]
10048011:	cmp    eax,0x1007dab0
10048016:	je     0x1004802f
10048018:	cmp    DWORD PTR [eax+0xb4],ebp
1004801e:	jne    0x1004802f
10048020:	push   eax
10048021:	call   0x1004b30e
10048026:	push   DWORD PTR [edi]
10048028:	call   0x10042408
1004802d:	pop    ecx
1004802e:	pop    ecx
1004802f:	push   0x6
10048031:	lea    edi,[esi+0x50]
10048034:	pop    ebx
10048035:	cmp    DWORD PTR [edi-0x8],0x1007d8c8
1004803c:	je     0x1004804f
1004803e:	mov    eax,DWORD PTR [edi]
10048040:	cmp    eax,ebp
10048042:	je     0x1004804f
10048044:	cmp    DWORD PTR [eax],ebp
10048046:	jne    0x1004804f
10048048:	push   eax
10048049:	call   0x10042408
1004804e:	pop    ecx
1004804f:	cmp    DWORD PTR [edi-0x4],ebp
10048052:	je     0x10048066
10048054:	mov    eax,DWORD PTR [edi+0x4]
10048057:	cmp    eax,ebp
10048059:	je     0x10048066
1004805b:	cmp    DWORD PTR [eax],ebp
1004805d:	jne    0x10048066
1004805f:	push   eax
10048060:	call   0x10042408
10048065:	pop    ecx
10048066:	add    edi,0x10
10048069:	dec    ebx
1004806a:	jne    0x10048035
1004806c:	push   esi
1004806d:	call   0x10042408
10048072:	pop    ecx
10048073:	pop    edi
10048074:	pop    esi
10048075:	pop    ebp
10048076:	pop    ebx
10048077:	ret    
10048078:	push   ebx
10048079:	push   ebp
1004807a:	push   esi
1004807b:	mov    esi,DWORD PTR [esp+0x10]
1004807f:	push   edi
10048080:	mov    edi,DWORD PTR ds:0x100650a4
10048086:	push   esi
10048087:	call   edi
10048089:	mov    eax,DWORD PTR [esi+0xb0]
1004808f:	test   eax,eax
10048091:	je     0x10048096
10048093:	push   eax
10048094:	call   edi
10048096:	mov    eax,DWORD PTR [esi+0xb8]
1004809c:	test   eax,eax
1004809e:	je     0x100480a3
100480a0:	push   eax
100480a1:	call   edi
100480a3:	mov    eax,DWORD PTR [esi+0xb4]
100480a9:	test   eax,eax
100480ab:	je     0x100480b0
100480ad:	push   eax
100480ae:	call   edi
100480b0:	mov    eax,DWORD PTR [esi+0xc0]
100480b6:	test   eax,eax
100480b8:	je     0x100480bd
100480ba:	push   eax
100480bb:	call   edi
100480bd:	push   0x6
100480bf:	lea    ebx,[esi+0x50]
100480c2:	pop    ebp
100480c3:	cmp    DWORD PTR [ebx-0x8],0x1007d8c8
100480ca:	je     0x100480d5
100480cc:	mov    eax,DWORD PTR [ebx]
100480ce:	test   eax,eax
100480d0:	je     0x100480d5
100480d2:	push   eax
100480d3:	call   edi
100480d5:	cmp    DWORD PTR [ebx-0x4],0x0
100480d9:	je     0x100480e5
100480db:	mov    eax,DWORD PTR [ebx+0x4]
100480de:	test   eax,eax
100480e0:	je     0x100480e5
100480e2:	push   eax
100480e3:	call   edi
100480e5:	add    ebx,0x10
100480e8:	dec    ebp
100480e9:	jne    0x100480c3
100480eb:	mov    eax,DWORD PTR [esi+0xd4]
100480f1:	add    eax,0xb4
100480f6:	push   eax
100480f7:	call   edi
100480f9:	pop    edi
100480fa:	pop    esi
100480fb:	pop    ebp
100480fc:	pop    ebx
100480fd:	ret    
100480fe:	push   esi
100480ff:	mov    esi,DWORD PTR [esp+0x8]
10048103:	test   esi,esi
10048105:	je     0x10048186
10048107:	push   ebx
10048108:	push   ebp
10048109:	push   edi
1004810a:	mov    edi,DWORD PTR ds:0x100650ac
10048110:	push   esi
10048111:	call   edi
10048113:	mov    eax,DWORD PTR [esi+0xb0]
10048119:	test   eax,eax
1004811b:	je     0x10048120
1004811d:	push   eax
1004811e:	call   edi
10048120:	mov    eax,DWORD PTR [esi+0xb8]
10048126:	test   eax,eax
10048128:	je     0x1004812d
1004812a:	push   eax
1004812b:	call   edi
1004812d:	mov    eax,DWORD PTR [esi+0xb4]
10048133:	test   eax,eax
10048135:	je     0x1004813a
10048137:	push   eax
10048138:	call   edi
1004813a:	mov    eax,DWORD PTR [esi+0xc0]
10048140:	test   eax,eax
10048142:	je     0x10048147
10048144:	push   eax
10048145:	call   edi
10048147:	push   0x6
10048149:	lea    ebx,[esi+0x50]
1004814c:	pop    ebp
1004814d:	cmp    DWORD PTR [ebx-0x8],0x1007d8c8
10048154:	je     0x1004815f
10048156:	mov    eax,DWORD PTR [ebx]
10048158:	test   eax,eax
1004815a:	je     0x1004815f
1004815c:	push   eax
1004815d:	call   edi
1004815f:	cmp    DWORD PTR [ebx-0x4],0x0
10048163:	je     0x1004816f
10048165:	mov    eax,DWORD PTR [ebx+0x4]
10048168:	test   eax,eax
1004816a:	je     0x1004816f
1004816c:	push   eax
1004816d:	call   edi
1004816f:	add    ebx,0x10
10048172:	dec    ebp
10048173:	jne    0x1004814d
10048175:	mov    eax,DWORD PTR [esi+0xd4]
1004817b:	add    eax,0xb4
10048180:	push   eax
10048181:	call   edi
10048183:	pop    edi
10048184:	pop    ebp
10048185:	pop    ebx
10048186:	mov    eax,esi
10048188:	pop    esi
10048189:	ret    
1004818a:	test   edi,edi
1004818c:	je     0x100481c5
1004818e:	test   eax,eax
10048190:	je     0x100481c5
10048192:	push   esi
10048193:	mov    esi,DWORD PTR [eax]
10048195:	cmp    esi,edi
10048197:	je     0x100481c1
10048199:	push   edi
1004819a:	mov    DWORD PTR [eax],edi
1004819c:	call   0x10048078
100481a1:	test   esi,esi
100481a3:	pop    ecx
100481a4:	je     0x100481c1
100481a6:	push   esi
100481a7:	call   0x100480fe
100481ac:	cmp    DWORD PTR [esi],0x0
100481af:	pop    ecx
100481b0:	jne    0x100481c1
100481b2:	cmp    esi,0x1007d8d0
100481b8:	je     0x100481c1
100481ba:	push   esi
100481bb:	call   0x10047f38
100481c0:	pop    ecx
100481c1:	mov    eax,edi
100481c3:	pop    esi
100481c4:	ret    
100481c5:	xor    eax,eax
100481c7:	ret    
100481c8:	push   0xc
100481ca:	push   0x10073348
100481cf:	call   0x100459e4
100481d4:	call   0x10045e4c
100481d9:	mov    esi,eax
100481db:	mov    eax,ds:0x1007d8c4
100481e0:	test   DWORD PTR [esi+0x70],eax
100481e3:	je     0x10048207
100481e5:	cmp    DWORD PTR [esi+0x6c],0x0
100481e9:	je     0x10048207
100481eb:	call   0x10045e4c
100481f0:	mov    esi,DWORD PTR [eax+0x6c]
100481f3:	test   esi,esi
100481f5:	jne    0x100481ff
100481f7:	push   0x20
100481f9:	call   0x100462e8
100481fe:	pop    ecx
100481ff:	mov    eax,esi
10048201:	call   0x10045a29
10048206:	ret    
10048207:	push   0xc
10048209:	call   0x100469ed
1004820e:	pop    ecx
1004820f:	and    DWORD PTR [ebp-0x4],0x0
10048213:	lea    eax,[esi+0x6c]
10048216:	mov    edi,DWORD PTR ds:0x1007d9a8
1004821c:	call   0x1004818a
10048221:	mov    DWORD PTR [ebp-0x1c],eax
10048224:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004822b:	call   0x10048232
10048230:	jmp    0x100481f3
10048232:	push   0xc
10048234:	call   0x10046915
10048239:	pop    ecx
1004823a:	mov    esi,DWORD PTR [ebp-0x1c]
1004823d:	ret    
1004823e:	int3   
1004823f:	int3   
10048240:	lea    eax,[edx-0x1]
10048243:	pop    ebx
10048244:	ret    
10048245:	lea    esp,[esp+0x0]
1004824c:	lea    esp,[esp+0x0]
10048250:	xor    eax,eax
10048252:	mov    al,BYTE PTR [esp+0x8]
10048256:	push   ebx
10048257:	mov    ebx,eax
10048259:	shl    eax,0x8
1004825c:	mov    edx,DWORD PTR [esp+0x8]
10048260:	test   edx,0x3
10048266:	je     0x1004827d
10048268:	mov    cl,BYTE PTR [edx]
1004826a:	add    edx,0x1
1004826d:	cmp    cl,bl
1004826f:	je     0x10048240
10048271:	test   cl,cl
10048273:	je     0x100482c6
10048275:	test   edx,0x3
1004827b:	jne    0x10048268
1004827d:	or     ebx,eax
1004827f:	push   edi
10048280:	mov    eax,ebx
10048282:	shl    ebx,0x10
10048285:	push   esi
10048286:	or     ebx,eax
10048288:	mov    ecx,DWORD PTR [edx]
1004828a:	mov    edi,0x7efefeff
1004828f:	mov    eax,ecx
10048291:	mov    esi,edi
10048293:	xor    ecx,ebx
10048295:	add    esi,eax
10048297:	add    edi,ecx
10048299:	xor    ecx,0xffffffff
1004829c:	xor    eax,0xffffffff
1004829f:	xor    ecx,edi
100482a1:	xor    eax,esi
100482a3:	add    edx,0x4
100482a6:	and    ecx,0x81010100
100482ac:	jne    0x100482ca
100482ae:	and    eax,0x81010100
100482b3:	je     0x10048288
100482b5:	and    eax,0x1010100
100482ba:	jne    0x100482c4
100482bc:	and    esi,0x80000000
100482c2:	jne    0x10048288
100482c4:	pop    esi
100482c5:	pop    edi
100482c6:	pop    ebx
100482c7:	xor    eax,eax
100482c9:	ret    
100482ca:	mov    eax,DWORD PTR [edx-0x4]
100482cd:	cmp    al,bl
100482cf:	je     0x10048307
100482d1:	test   al,al
100482d3:	je     0x100482c4
100482d5:	cmp    ah,bl
100482d7:	je     0x10048300
100482d9:	test   ah,ah
100482db:	je     0x100482c4
100482dd:	shr    eax,0x10
100482e0:	cmp    al,bl
100482e2:	je     0x100482f9
100482e4:	test   al,al
100482e6:	je     0x100482c4
100482e8:	cmp    ah,bl
100482ea:	je     0x100482f2
100482ec:	test   ah,ah
100482ee:	je     0x100482c4
100482f0:	jmp    0x10048288
100482f2:	pop    esi
100482f3:	pop    edi
100482f4:	lea    eax,[edx-0x1]
100482f7:	pop    ebx
100482f8:	ret    
100482f9:	lea    eax,[edx-0x2]
100482fc:	pop    esi
100482fd:	pop    edi
100482fe:	pop    ebx
100482ff:	ret    
10048300:	lea    eax,[edx-0x3]
10048303:	pop    esi
10048304:	pop    edi
10048305:	pop    ebx
10048306:	ret    
10048307:	lea    eax,[edx-0x4]
1004830a:	pop    esi
1004830b:	pop    edi
1004830c:	pop    ebx
1004830d:	ret    
1004830e:	int3   
1004830f:	int3   
10048310:	push   esi
10048311:	mov    eax,DWORD PTR [esp+0x14]
10048315:	or     eax,eax
10048317:	jne    0x10048341
10048319:	mov    ecx,DWORD PTR [esp+0x10]
1004831d:	mov    eax,DWORD PTR [esp+0xc]
10048321:	xor    edx,edx
10048323:	div    ecx
10048325:	mov    ebx,eax
10048327:	mov    eax,DWORD PTR [esp+0x8]
1004832b:	div    ecx
1004832d:	mov    esi,eax
1004832f:	mov    eax,ebx
10048331:	mul    DWORD PTR [esp+0x10]
10048335:	mov    ecx,eax
10048337:	mov    eax,esi
10048339:	mul    DWORD PTR [esp+0x10]
1004833d:	add    edx,ecx
1004833f:	jmp    0x10048388
10048341:	mov    ecx,eax
10048343:	mov    ebx,DWORD PTR [esp+0x10]
10048347:	mov    edx,DWORD PTR [esp+0xc]
1004834b:	mov    eax,DWORD PTR [esp+0x8]
1004834f:	shr    ecx,1
10048351:	rcr    ebx,1
10048353:	shr    edx,1
10048355:	rcr    eax,1
10048357:	or     ecx,ecx
10048359:	jne    0x1004834f
1004835b:	div    ebx
1004835d:	mov    esi,eax
1004835f:	mul    DWORD PTR [esp+0x14]
10048363:	mov    ecx,eax
10048365:	mov    eax,DWORD PTR [esp+0x10]
10048369:	mul    esi
1004836b:	add    edx,ecx
1004836d:	jb     0x1004837d
1004836f:	cmp    edx,DWORD PTR [esp+0xc]
10048373:	ja     0x1004837d
10048375:	jb     0x10048386
10048377:	cmp    eax,DWORD PTR [esp+0x8]
1004837b:	jbe    0x10048386
1004837d:	dec    esi
1004837e:	sub    eax,DWORD PTR [esp+0x10]
10048382:	sbb    edx,DWORD PTR [esp+0x14]
10048386:	xor    ebx,ebx
10048388:	sub    eax,DWORD PTR [esp+0x8]
1004838c:	sbb    edx,DWORD PTR [esp+0xc]
10048390:	neg    edx
10048392:	neg    eax
10048394:	sbb    edx,0x0
10048397:	mov    ecx,edx
10048399:	mov    edx,ebx
1004839b:	mov    ebx,ecx
1004839d:	mov    ecx,eax
1004839f:	mov    eax,esi
100483a1:	pop    esi
100483a2:	ret    0x10
100483a5:	push   ebp
100483a6:	mov    ebp,esp
100483a8:	sub    esp,0x4
100483ab:	mov    DWORD PTR [ebp-0x4],edi
100483ae:	mov    edi,DWORD PTR [ebp+0x8]
100483b1:	mov    ecx,DWORD PTR [ebp+0xc]
100483b4:	shr    ecx,0x7
100483b7:	pxor   xmm0,xmm0
100483bb:	jmp    0x100483c5
100483bd:	lea    esp,[esp+0x0]
100483c4:	nop
100483c5:	movdqa XMMWORD PTR [edi],xmm0
100483c9:	movdqa XMMWORD PTR [edi+0x10],xmm0
100483ce:	movdqa XMMWORD PTR [edi+0x20],xmm0
100483d3:	movdqa XMMWORD PTR [edi+0x30],xmm0
100483d8:	movdqa XMMWORD PTR [edi+0x40],xmm0
100483dd:	movdqa XMMWORD PTR [edi+0x50],xmm0
100483e2:	movdqa XMMWORD PTR [edi+0x60],xmm0
100483e7:	movdqa XMMWORD PTR [edi+0x70],xmm0
100483ec:	lea    edi,[edi+0x80]
100483f2:	dec    ecx
100483f3:	jne    0x100483c5
100483f5:	mov    edi,DWORD PTR [ebp-0x4]
100483f8:	mov    esp,ebp
100483fa:	pop    ebp
100483fb:	ret    
100483fc:	push   ebp
100483fd:	mov    ebp,esp
100483ff:	sub    esp,0x10
10048402:	mov    DWORD PTR [ebp-0x4],edi
10048405:	mov    eax,DWORD PTR [ebp+0x8]
10048408:	cdq    
10048409:	mov    edi,eax
1004840b:	xor    edi,edx
1004840d:	sub    edi,edx
1004840f:	and    edi,0xf
10048412:	xor    edi,edx
10048414:	sub    edi,edx
10048416:	test   edi,edi
10048418:	jne    0x10048456
1004841a:	mov    ecx,DWORD PTR [ebp+0x10]
1004841d:	mov    edx,ecx
1004841f:	and    edx,0x7f
10048422:	mov    DWORD PTR [ebp-0xc],edx
10048425:	cmp    ecx,edx
10048427:	je     0x1004843b
10048429:	sub    ecx,edx
1004842b:	push   ecx
1004842c:	push   eax
1004842d:	call   0x100483a5
10048432:	add    esp,0x8
10048435:	mov    eax,DWORD PTR [ebp+0x8]
10048438:	mov    edx,DWORD PTR [ebp-0xc]
1004843b:	test   edx,edx
1004843d:	je     0x10048484
1004843f:	add    eax,DWORD PTR [ebp+0x10]
10048442:	sub    eax,edx
10048444:	mov    DWORD PTR [ebp-0x8],eax
10048447:	xor    eax,eax
10048449:	mov    edi,DWORD PTR [ebp-0x8]
1004844c:	mov    ecx,DWORD PTR [ebp-0xc]
1004844f:	rep stos BYTE PTR es:[edi],al
10048451:	mov    eax,DWORD PTR [ebp+0x8]
10048454:	jmp    0x10048484
10048456:	neg    edi
10048458:	add    edi,0x10
1004845b:	mov    DWORD PTR [ebp-0x10],edi
1004845e:	xor    eax,eax
10048460:	mov    edi,DWORD PTR [ebp+0x8]
10048463:	mov    ecx,DWORD PTR [ebp-0x10]
10048466:	rep stos BYTE PTR es:[edi],al
10048468:	mov    eax,DWORD PTR [ebp-0x10]
1004846b:	mov    ecx,DWORD PTR [ebp+0x8]
1004846e:	mov    edx,DWORD PTR [ebp+0x10]
10048471:	add    ecx,eax
10048473:	sub    edx,eax
10048475:	push   edx
10048476:	push   0x0
10048478:	push   ecx
10048479:	call   0x100483fc
1004847e:	add    esp,0xc
10048481:	mov    eax,DWORD PTR [ebp+0x8]
10048484:	mov    edi,DWORD PTR [ebp-0x4]
10048487:	mov    esp,ebp
10048489:	pop    ebp
1004848a:	ret    
1004848b:	push   ebp
1004848c:	lea    ebp,[esp-0x2a8]
10048493:	sub    esp,0x328
10048499:	mov    eax,ds:0x1007d030
1004849e:	xor    eax,ebp
100484a0:	mov    DWORD PTR [ebp+0x2a4],eax
100484a6:	test   BYTE PTR ds:0x1007d9c0,0x1
100484ad:	push   esi
100484ae:	je     0x100484b8
100484b0:	push   0xa
100484b2:	call   0x1004751d
100484b7:	pop    ecx
100484b8:	call   0x1004a9fa
100484bd:	test   eax,eax
100484bf:	je     0x100484c9
100484c1:	push   0x16
100484c3:	call   0x1004aa07
100484c8:	pop    ecx
100484c9:	test   BYTE PTR ds:0x1007d9c0,0x2
100484d0:	je     0x10048576
100484d6:	mov    DWORD PTR [ebp+0x88],eax
100484dc:	mov    DWORD PTR [ebp+0x84],ecx
100484e2:	mov    DWORD PTR [ebp+0x80],edx
100484e8:	mov    DWORD PTR [ebp+0x7c],ebx
100484eb:	mov    DWORD PTR [ebp+0x78],esi
100484ee:	mov    DWORD PTR [ebp+0x74],edi
100484f1:	data16 mov WORD PTR [ebp+0xa0],ss
100484f8:	data16 mov WORD PTR [ebp+0x94],cs
100484ff:	data16 mov WORD PTR [ebp+0x70],ds
10048503:	data16 mov WORD PTR [ebp+0x6c],es
10048507:	data16 mov WORD PTR [ebp+0x68],fs
1004850b:	data16 mov WORD PTR [ebp+0x64],gs
1004850f:	pushf  
10048510:	pop    DWORD PTR [ebp+0x98]
10048516:	mov    esi,DWORD PTR [ebp+0x2ac]
1004851c:	lea    eax,[ebp+0x2ac]
10048522:	mov    DWORD PTR [ebp+0x9c],eax
10048528:	mov    DWORD PTR [ebp-0x28],0x10001
1004852f:	mov    DWORD PTR [ebp+0x90],esi
10048535:	mov    eax,DWORD PTR [eax-0x4]
10048538:	push   0x50
1004853a:	mov    DWORD PTR [ebp+0x8c],eax
10048540:	lea    eax,[ebp-0x80]
10048543:	push   0x0
10048545:	push   eax
10048546:	call   0x10044950
1004854b:	lea    eax,[ebp-0x80]
1004854e:	add    esp,0xc
10048551:	mov    DWORD PTR [ebp-0x30],eax
10048554:	lea    eax,[ebp-0x28]
10048557:	push   0x0
10048559:	mov    DWORD PTR [ebp-0x80],0x40000015
10048560:	mov    DWORD PTR [ebp-0x74],esi
10048563:	mov    DWORD PTR [ebp-0x2c],eax
10048566:	call   DWORD PTR ds:0x10065180
1004856c:	lea    eax,[ebp-0x30]
1004856f:	push   eax
10048570:	call   DWORD PTR ds:0x1006517c
10048576:	push   0x3
10048578:	call   0x10046564
1004857d:	int3   
1004857e:	mov    ecx,DWORD PTR [esp+0x8]
10048582:	mov    eax,ds:0x1007d9c0
10048587:	mov    edx,DWORD PTR [esp+0x4]
1004858b:	and    edx,DWORD PTR [esp+0x8]
1004858f:	not    ecx
10048591:	and    ecx,eax
10048593:	or     ecx,edx
10048595:	mov    DWORD PTR ds:0x1007d9c0,ecx
1004859b:	ret    
1004859c:	mov    eax,DWORD PTR [esp+0x4]
100485a0:	mov    ds:0x1007f2d4,eax
100485a5:	ret    
100485a6:	push   ebp
100485a7:	mov    ebp,esp
100485a9:	sub    esp,0x14
100485ac:	push   esi
100485ad:	push   edi
100485ae:	push   DWORD PTR [ebp+0x8]
100485b1:	lea    ecx,[ebp-0x14]
100485b4:	call   0x10044235
100485b9:	mov    eax,DWORD PTR [ebp+0x10]
100485bc:	mov    esi,DWORD PTR [ebp+0xc]
100485bf:	xor    edi,edi
100485c1:	cmp    eax,edi
100485c3:	je     0x100485c7
100485c5:	mov    DWORD PTR [eax],esi
100485c7:	cmp    esi,edi
100485c9:	jne    0x100485f7
100485cb:	call   0x100458a5
100485d0:	push   edi
100485d1:	push   edi
100485d2:	push   edi
100485d3:	push   edi
100485d4:	push   edi
100485d5:	mov    DWORD PTR [eax],0x16
100485db:	call   0x1004228c
100485e0:	add    esp,0x14
100485e3:	cmp    BYTE PTR [ebp-0x8],0x0
100485e7:	je     0x100485f0
100485e9:	mov    eax,DWORD PTR [ebp-0xc]
100485ec:	and    DWORD PTR [eax+0x70],0xfffffffd
100485f0:	xor    eax,eax
100485f2:	jmp    0x100487cd
100485f7:	cmp    DWORD PTR [ebp+0x14],edi
100485fa:	je     0x10048608
100485fc:	cmp    DWORD PTR [ebp+0x14],0x2
10048600:	jl     0x100485cb
10048602:	cmp    DWORD PTR [ebp+0x14],0x24
10048606:	jg     0x100485cb
10048608:	mov    ecx,DWORD PTR [ebp-0x14]
1004860b:	push   ebx
1004860c:	mov    bl,BYTE PTR [esi]
1004860e:	mov    DWORD PTR [ebp-0x4],edi
10048611:	lea    edi,[esi+0x1]
10048614:	cmp    DWORD PTR [ecx+0xac],0x1
1004861b:	jle    0x10048634
1004861d:	lea    eax,[ebp-0x14]
10048620:	push   eax
10048621:	movzx  eax,bl
10048624:	push   0x8
10048626:	push   eax
10048627:	call   0x10048c23
1004862c:	mov    ecx,DWORD PTR [ebp-0x14]
1004862f:	add    esp,0xc
10048632:	jmp    0x10048644
10048634:	mov    edx,DWORD PTR [ecx+0xc8]
1004863a:	movzx  eax,bl
1004863d:	movzx  eax,BYTE PTR [edx+eax*2]
10048641:	and    eax,0x8
10048644:	test   eax,eax
10048646:	je     0x1004864d
10048648:	mov    bl,BYTE PTR [edi]
1004864a:	inc    edi
1004864b:	jmp    0x10048614
1004864d:	cmp    bl,0x2d
10048650:	jne    0x10048658
10048652:	or     DWORD PTR [ebp+0x18],0x2
10048656:	jmp    0x1004865d
10048658:	cmp    bl,0x2b
1004865b:	jne    0x10048660
1004865d:	mov    bl,BYTE PTR [edi]
1004865f:	inc    edi
10048660:	mov    eax,DWORD PTR [ebp+0x14]
10048663:	test   eax,eax
10048665:	jl     0x100487b4
1004866b:	cmp    eax,0x1
1004866e:	je     0x100487b4
10048674:	cmp    eax,0x24
10048677:	jg     0x100487b4
1004867d:	test   eax,eax
1004867f:	jne    0x100486ab
10048681:	cmp    bl,0x30
10048684:	je     0x1004868f
10048686:	mov    DWORD PTR [ebp+0x14],0xa
1004868d:	jmp    0x100486c3
1004868f:	mov    al,BYTE PTR [edi]
10048691:	cmp    al,0x78
10048693:	je     0x100486a2
10048695:	cmp    al,0x58
10048697:	je     0x100486a2
10048699:	mov    DWORD PTR [ebp+0x14],0x8
100486a0:	jmp    0x100486c3
100486a2:	mov    DWORD PTR [ebp+0x14],0x10
100486a9:	jmp    0x100486b5
100486ab:	cmp    eax,0x10
100486ae:	jne    0x100486c3
100486b0:	cmp    bl,0x30
100486b3:	jne    0x100486c3
100486b5:	mov    al,BYTE PTR [edi]
100486b7:	cmp    al,0x78
100486b9:	je     0x100486bf
100486bb:	cmp    al,0x58
100486bd:	jne    0x100486c3
100486bf:	inc    edi
100486c0:	mov    bl,BYTE PTR [edi]
100486c2:	inc    edi
100486c3:	mov    esi,DWORD PTR [ecx+0xc8]
100486c9:	or     eax,0xffffffff
100486cc:	xor    edx,edx
100486ce:	div    DWORD PTR [ebp+0x14]
100486d1:	movzx  ecx,bl
100486d4:	movzx  ecx,WORD PTR [esi+ecx*2]
100486d8:	test   cl,0x4
100486db:	je     0x100486e5
100486dd:	movsx  ecx,bl
100486e0:	sub    ecx,0x30
100486e3:	jmp    0x100486ff
100486e5:	test   cx,0x103
100486ea:	je     0x1004871d
100486ec:	mov    cl,bl
100486ee:	sub    cl,0x61
100486f1:	cmp    cl,0x19
100486f4:	movsx  ecx,bl
100486f7:	ja     0x100486fc
100486f9:	sub    ecx,0x20
100486fc:	add    ecx,0xffffffc9
100486ff:	cmp    ecx,DWORD PTR [ebp+0x14]
10048702:	jae    0x1004871d
10048704:	or     DWORD PTR [ebp+0x18],0x8
10048708:	cmp    DWORD PTR [ebp-0x4],eax
1004870b:	jb     0x10048734
1004870d:	jne    0x10048713
1004870f:	cmp    ecx,edx
10048711:	jbe    0x10048734
10048713:	or     DWORD PTR [ebp+0x18],0x4
10048717:	cmp    DWORD PTR [ebp+0x10],0x0
1004871b:	jne    0x10048740
1004871d:	mov    eax,DWORD PTR [ebp+0x18]
10048720:	dec    edi
10048721:	test   al,0x8
10048723:	jne    0x10048745
10048725:	cmp    DWORD PTR [ebp+0x10],0x0
10048729:	je     0x1004872e
1004872b:	mov    edi,DWORD PTR [ebp+0xc]
1004872e:	and    DWORD PTR [ebp-0x4],0x0
10048732:	jmp    0x10048790
10048734:	mov    ebx,DWORD PTR [ebp-0x4]
10048737:	imul   ebx,DWORD PTR [ebp+0x14]
1004873b:	add    ebx,ecx
1004873d:	mov    DWORD PTR [ebp-0x4],ebx
10048740:	mov    bl,BYTE PTR [edi]
10048742:	inc    edi
10048743:	jmp    0x100486d1
10048745:	test   al,0x4
10048747:	mov    esi,0x7fffffff
1004874c:	jne    0x10048769
1004874e:	test   al,0x1
10048750:	jne    0x10048790
10048752:	and    eax,0x2
10048755:	je     0x10048760
10048757:	cmp    DWORD PTR [ebp-0x4],0x80000000
1004875e:	ja     0x10048769
10048760:	test   eax,eax
10048762:	jne    0x10048790
10048764:	cmp    DWORD PTR [ebp-0x4],esi
10048767:	jbe    0x10048790
10048769:	call   0x100458a5
1004876e:	test   BYTE PTR [ebp+0x18],0x1
10048772:	mov    DWORD PTR [eax],0x22
10048778:	je     0x10048780
1004877a:	or     DWORD PTR [ebp-0x4],0xffffffff
1004877e:	jmp    0x10048790
10048780:	mov    al,BYTE PTR [ebp+0x18]
10048783:	and    al,0x2
10048785:	neg    al
10048787:	sbb    eax,eax
10048789:	neg    eax
1004878b:	add    eax,esi
1004878d:	mov    DWORD PTR [ebp-0x4],eax
10048790:	mov    eax,DWORD PTR [ebp+0x10]
10048793:	test   eax,eax
10048795:	je     0x10048799
10048797:	mov    DWORD PTR [eax],edi
10048799:	test   BYTE PTR [ebp+0x18],0x2
1004879d:	je     0x100487a2
1004879f:	neg    DWORD PTR [ebp-0x4]
100487a2:	cmp    BYTE PTR [ebp-0x8],0x0
100487a6:	je     0x100487af
100487a8:	mov    eax,DWORD PTR [ebp-0xc]
100487ab:	and    DWORD PTR [eax+0x70],0xfffffffd
100487af:	mov    eax,DWORD PTR [ebp-0x4]
100487b2:	jmp    0x100487cc
100487b4:	mov    eax,DWORD PTR [ebp+0x10]
100487b7:	test   eax,eax
100487b9:	je     0x100487bd
100487bb:	mov    DWORD PTR [eax],esi
100487bd:	cmp    BYTE PTR [ebp-0x8],0x0
100487c1:	je     0x100487ca
100487c3:	mov    eax,DWORD PTR [ebp-0xc]
100487c6:	and    DWORD PTR [eax+0x70],0xfffffffd
100487ca:	xor    eax,eax
100487cc:	pop    ebx
100487cd:	pop    edi
100487ce:	pop    esi
100487cf:	leave  
100487d0:	ret    
100487d1:	push   ebp
100487d2:	mov    ebp,esp
100487d4:	xor    eax,eax
100487d6:	cmp    DWORD PTR ds:0x1007f2a8,eax
100487dc:	push   eax
100487dd:	push   DWORD PTR [ebp+0x10]
100487e0:	push   DWORD PTR [ebp+0xc]
100487e3:	push   DWORD PTR [ebp+0x8]
100487e6:	jne    0x100487ef
100487e8:	push   0x1007d9b0
100487ed:	jmp    0x100487f0
100487ef:	push   eax
100487f0:	call   0x100485a6
100487f5:	add    esp,0x14
100487f8:	pop    ebp
100487f9:	ret    
100487fa:	push   ebp
100487fb:	mov    ebp,esp
100487fd:	sub    esp,0x14
10048800:	mov    eax,ds:0x1007d030
10048805:	xor    eax,ebp
10048807:	mov    DWORD PTR [ebp-0x4],eax
1004880a:	push   ebx
1004880b:	push   esi
1004880c:	xor    ebx,ebx
1004880e:	cmp    DWORD PTR ds:0x1007f2d8,ebx
10048814:	push   edi
10048815:	mov    esi,ecx
10048817:	jne    0x10048851
10048819:	push   ebx
1004881a:	push   ebx
1004881b:	xor    edi,edi
1004881d:	inc    edi
1004881e:	push   edi
1004881f:	push   0x10065cb8
10048824:	push   0x100
10048829:	push   ebx
1004882a:	call   DWORD PTR ds:0x100651ec
10048830:	test   eax,eax
10048832:	je     0x1004883c
10048834:	mov    DWORD PTR ds:0x1007f2d8,edi
1004883a:	jmp    0x10048851
1004883c:	call   DWORD PTR ds:0x100650c4
10048842:	cmp    eax,0x78
10048845:	jne    0x10048851
10048847:	mov    DWORD PTR ds:0x1007f2d8,0x2
10048851:	cmp    DWORD PTR [ebp+0x14],ebx
10048854:	jle    0x10048878
10048856:	mov    ecx,DWORD PTR [ebp+0x14]
10048859:	mov    eax,DWORD PTR [ebp+0x10]
1004885c:	dec    ecx
1004885d:	cmp    BYTE PTR [eax],bl
1004885f:	je     0x10048869
10048861:	inc    eax
10048862:	cmp    ecx,ebx
10048864:	jne    0x1004885c
10048866:	or     ecx,0xffffffff
10048869:	mov    eax,DWORD PTR [ebp+0x14]
1004886c:	sub    eax,ecx
1004886e:	dec    eax
1004886f:	cmp    eax,DWORD PTR [ebp+0x14]
10048872:	jge    0x10048875
10048874:	inc    eax
10048875:	mov    DWORD PTR [ebp+0x14],eax
10048878:	mov    eax,ds:0x1007f2d8
1004887d:	cmp    eax,0x2
10048880:	je     0x10048a31
10048886:	cmp    eax,ebx
10048888:	je     0x10048a31
1004888e:	cmp    eax,0x1
10048891:	jne    0x10048a62
10048897:	cmp    DWORD PTR [ebp+0x20],ebx
1004889a:	mov    DWORD PTR [ebp-0x8],ebx
1004889d:	jne    0x100488a7
1004889f:	mov    eax,DWORD PTR [esi]
100488a1:	mov    eax,DWORD PTR [eax+0x4]
100488a4:	mov    DWORD PTR [ebp+0x20],eax
100488a7:	mov    esi,DWORD PTR ds:0x1006508c
100488ad:	xor    eax,eax
100488af:	cmp    DWORD PTR [ebp+0x24],ebx
100488b2:	push   ebx
100488b3:	push   ebx
100488b4:	push   DWORD PTR [ebp+0x14]
100488b7:	setne  al
100488ba:	push   DWORD PTR [ebp+0x10]
100488bd:	lea    eax,[eax*8+0x1]
100488c4:	push   eax
100488c5:	push   DWORD PTR [ebp+0x20]
100488c8:	call   esi
100488ca:	mov    edi,eax
100488cc:	cmp    edi,ebx
100488ce:	je     0x10048a62
100488d4:	jle    0x10048919
100488d6:	push   0xffffffe0
100488d8:	xor    edx,edx
100488da:	pop    eax
100488db:	div    edi
100488dd:	cmp    eax,0x2
100488e0:	jb     0x10048919
100488e2:	lea    eax,[edi+edi*1+0x8]
100488e6:	cmp    eax,0x400
100488eb:	ja     0x10048900
100488ed:	call   0x10049010
100488f2:	mov    eax,esp
100488f4:	cmp    eax,ebx
100488f6:	je     0x10048914
100488f8:	mov    DWORD PTR [eax],0xcccc
100488fe:	jmp    0x10048911
10048900:	push   eax
10048901:	call   0x10043cdd
10048906:	cmp    eax,ebx
10048908:	pop    ecx
10048909:	je     0x10048914
1004890b:	mov    DWORD PTR [eax],0xdddd
10048911:	add    eax,0x8
10048914:	mov    DWORD PTR [ebp-0xc],eax
10048917:	jmp    0x1004891c
10048919:	mov    DWORD PTR [ebp-0xc],ebx
1004891c:	cmp    DWORD PTR [ebp-0xc],ebx
1004891f:	je     0x10048a62
10048925:	push   edi
10048926:	push   DWORD PTR [ebp-0xc]
10048929:	push   DWORD PTR [ebp+0x14]
1004892c:	push   DWORD PTR [ebp+0x10]
1004892f:	push   0x1
10048931:	push   DWORD PTR [ebp+0x20]
10048934:	call   esi
10048936:	test   eax,eax
10048938:	je     0x10048a20
1004893e:	mov    esi,DWORD PTR ds:0x100651ec
10048944:	push   ebx
10048945:	push   ebx
10048946:	push   edi
10048947:	push   DWORD PTR [ebp-0xc]
1004894a:	push   DWORD PTR [ebp+0xc]
1004894d:	push   DWORD PTR [ebp+0x8]
10048950:	call   esi
10048952:	mov    ecx,eax
10048954:	cmp    ecx,ebx
10048956:	mov    DWORD PTR [ebp-0x8],ecx
10048959:	je     0x10048a20
1004895f:	test   WORD PTR [ebp+0xc],0x400
10048965:	je     0x10048990
10048967:	cmp    DWORD PTR [ebp+0x1c],ebx
1004896a:	je     0x10048a20
10048970:	cmp    ecx,DWORD PTR [ebp+0x1c]
10048973:	jg     0x10048a20
10048979:	push   DWORD PTR [ebp+0x1c]
1004897c:	push   DWORD PTR [ebp+0x18]
1004897f:	push   edi
10048980:	push   DWORD PTR [ebp-0xc]
10048983:	push   DWORD PTR [ebp+0xc]
10048986:	push   DWORD PTR [ebp+0x8]
10048989:	call   esi
1004898b:	jmp    0x10048a20
10048990:	cmp    ecx,ebx
10048992:	jle    0x100489d9
10048994:	push   0xffffffe0
10048996:	xor    edx,edx
10048998:	pop    eax
10048999:	div    ecx
1004899b:	cmp    eax,0x2
1004899e:	jb     0x100489d9
100489a0:	lea    eax,[ecx+ecx*1+0x8]
100489a4:	cmp    eax,0x400
100489a9:	ja     0x100489c1
100489ab:	call   0x10049010
100489b0:	mov    esi,esp
100489b2:	cmp    esi,ebx
100489b4:	je     0x10048a20
100489b6:	mov    DWORD PTR [esi],0xcccc
100489bc:	add    esi,0x8
100489bf:	jmp    0x100489db
100489c1:	push   eax
100489c2:	call   0x10043cdd
100489c7:	cmp    eax,ebx
100489c9:	pop    ecx
100489ca:	je     0x100489d5
100489cc:	mov    DWORD PTR [eax],0xdddd
100489d2:	add    eax,0x8
100489d5:	mov    esi,eax
100489d7:	jmp    0x100489db
100489d9:	xor    esi,esi
100489db:	cmp    esi,ebx
100489dd:	je     0x10048a20
100489df:	push   DWORD PTR [ebp-0x8]
100489e2:	push   esi
100489e3:	push   edi
100489e4:	push   DWORD PTR [ebp-0xc]
100489e7:	push   DWORD PTR [ebp+0xc]
100489ea:	push   DWORD PTR [ebp+0x8]
100489ed:	call   DWORD PTR ds:0x100651ec
100489f3:	test   eax,eax
100489f5:	je     0x10048a19
100489f7:	cmp    DWORD PTR [ebp+0x1c],ebx
100489fa:	push   ebx
100489fb:	push   ebx
100489fc:	jne    0x10048a02
100489fe:	push   ebx
100489ff:	push   ebx
10048a00:	jmp    0x10048a08
10048a02:	push   DWORD PTR [ebp+0x1c]
10048a05:	push   DWORD PTR [ebp+0x18]
10048a08:	push   DWORD PTR [ebp-0x8]
10048a0b:	push   esi
10048a0c:	push   ebx
10048a0d:	push   DWORD PTR [ebp+0x20]
10048a10:	call   DWORD PTR ds:0x100650dc
10048a16:	mov    DWORD PTR [ebp-0x8],eax
10048a19:	push   esi
10048a1a:	call   0x1001b117
10048a1f:	pop    ecx
10048a20:	push   DWORD PTR [ebp-0xc]
10048a23:	call   0x1001b117
10048a28:	mov    eax,DWORD PTR [ebp-0x8]
10048a2b:	pop    ecx
10048a2c:	jmp    0x10048b8a
10048a31:	cmp    DWORD PTR [ebp+0x8],ebx
10048a34:	mov    DWORD PTR [ebp-0xc],ebx
10048a37:	mov    DWORD PTR [ebp-0x10],ebx
10048a3a:	jne    0x10048a44
10048a3c:	mov    eax,DWORD PTR [esi]
10048a3e:	mov    eax,DWORD PTR [eax+0x14]
10048a41:	mov    DWORD PTR [ebp+0x8],eax
10048a44:	cmp    DWORD PTR [ebp+0x20],ebx
10048a47:	jne    0x10048a51
10048a49:	mov    eax,DWORD PTR [esi]
10048a4b:	mov    eax,DWORD PTR [eax+0x4]
10048a4e:	mov    DWORD PTR [ebp+0x20],eax
10048a51:	push   DWORD PTR [ebp+0x8]
10048a54:	call   0x1004b7f4
10048a59:	cmp    eax,0xffffffff
10048a5c:	pop    ecx
10048a5d:	mov    DWORD PTR [ebp-0x14],eax
10048a60:	jne    0x10048a69
10048a62:	xor    eax,eax
10048a64:	jmp    0x10048b8a
10048a69:	cmp    eax,DWORD PTR [ebp+0x20]
10048a6c:	je     0x10048b4d
10048a72:	push   ebx
10048a73:	push   ebx
10048a74:	lea    ecx,[ebp+0x14]
10048a77:	push   ecx
10048a78:	push   DWORD PTR [ebp+0x10]
10048a7b:	push   eax
10048a7c:	push   DWORD PTR [ebp+0x20]
10048a7f:	call   0x1004b83b
10048a84:	add    esp,0x18
10048a87:	cmp    eax,ebx
10048a89:	mov    DWORD PTR [ebp-0xc],eax
10048a8c:	je     0x10048a62
10048a8e:	mov    esi,DWORD PTR ds:0x100651e8
10048a94:	push   ebx
10048a95:	push   ebx
10048a96:	push   DWORD PTR [ebp+0x14]
10048a99:	push   eax
10048a9a:	push   DWORD PTR [ebp+0xc]
10048a9d:	push   DWORD PTR [ebp+0x8]
10048aa0:	call   esi
10048aa2:	cmp    eax,ebx
10048aa4:	mov    DWORD PTR [ebp-0x8],eax
10048aa7:	jne    0x10048ab0
10048aa9:	xor    esi,esi
10048aab:	jmp    0x10048b67
10048ab0:	jle    0x10048aef
10048ab2:	cmp    eax,0xffffffe0
10048ab5:	ja     0x10048aef
10048ab7:	add    eax,0x8
10048aba:	cmp    eax,0x400
10048abf:	ja     0x10048ad7
10048ac1:	call   0x10049010
10048ac6:	mov    edi,esp
10048ac8:	cmp    edi,ebx
10048aca:	je     0x10048aa9
10048acc:	mov    DWORD PTR [edi],0xcccc
10048ad2:	add    edi,0x8
10048ad5:	jmp    0x10048af1
10048ad7:	push   eax
10048ad8:	call   0x10043cdd
10048add:	cmp    eax,ebx
10048adf:	pop    ecx
10048ae0:	je     0x10048aeb
10048ae2:	mov    DWORD PTR [eax],0xdddd
10048ae8:	add    eax,0x8
10048aeb:	mov    edi,eax
10048aed:	jmp    0x10048af1
10048aef:	xor    edi,edi
10048af1:	cmp    edi,ebx
10048af3:	je     0x10048aa9
10048af5:	push   DWORD PTR [ebp-0x8]
10048af8:	push   ebx
10048af9:	push   edi
10048afa:	call   0x10044950
10048aff:	add    esp,0xc
10048b02:	push   DWORD PTR [ebp-0x8]
10048b05:	push   edi
10048b06:	push   DWORD PTR [ebp+0x14]
10048b09:	push   DWORD PTR [ebp-0xc]
10048b0c:	push   DWORD PTR [ebp+0xc]
10048b0f:	push   DWORD PTR [ebp+0x8]
10048b12:	call   esi
10048b14:	cmp    eax,ebx
10048b16:	mov    DWORD PTR [ebp-0x8],eax
10048b19:	jne    0x10048b1f
10048b1b:	xor    esi,esi
10048b1d:	jmp    0x10048b44
10048b1f:	push   DWORD PTR [ebp+0x1c]
10048b22:	lea    eax,[ebp-0x8]
10048b25:	push   DWORD PTR [ebp+0x18]
10048b28:	push   eax
10048b29:	push   edi
10048b2a:	push   DWORD PTR [ebp+0x20]
10048b2d:	push   DWORD PTR [ebp-0x14]
10048b30:	call   0x1004b83b
10048b35:	mov    esi,eax
10048b37:	mov    DWORD PTR [ebp-0x10],esi
10048b3a:	add    esp,0x18
10048b3d:	neg    esi
10048b3f:	sbb    esi,esi
10048b41:	and    esi,DWORD PTR [ebp-0x8]
10048b44:	push   edi
10048b45:	call   0x1001b117
10048b4a:	pop    ecx
10048b4b:	jmp    0x10048b67
10048b4d:	push   DWORD PTR [ebp+0x1c]
10048b50:	push   DWORD PTR [ebp+0x18]
10048b53:	push   DWORD PTR [ebp+0x14]
10048b56:	push   DWORD PTR [ebp+0x10]
10048b59:	push   DWORD PTR [ebp+0xc]
10048b5c:	push   DWORD PTR [ebp+0x8]
10048b5f:	call   DWORD PTR ds:0x100651e8
10048b65:	mov    esi,eax
10048b67:	cmp    DWORD PTR [ebp-0xc],ebx
10048b6a:	je     0x10048b75
10048b6c:	push   DWORD PTR [ebp-0xc]
10048b6f:	call   0x10042408
10048b74:	pop    ecx
10048b75:	mov    eax,DWORD PTR [ebp-0x10]
10048b78:	cmp    eax,ebx
10048b7a:	je     0x10048b88
10048b7c:	cmp    DWORD PTR [ebp+0x18],eax
10048b7f:	je     0x10048b88
10048b81:	push   eax
10048b82:	call   0x10042408
10048b87:	pop    ecx
10048b88:	mov    eax,esi
10048b8a:	lea    esp,[ebp-0x20]
10048b8d:	pop    edi
10048b8e:	pop    esi
10048b8f:	pop    ebx
10048b90:	mov    ecx,DWORD PTR [ebp-0x4]
10048b93:	xor    ecx,ebp
10048b95:	call   0x10041d97
10048b9a:	leave  
10048b9b:	ret    
10048b9c:	push   ebp
10048b9d:	mov    ebp,esp
10048b9f:	sub    esp,0x10
10048ba2:	push   DWORD PTR [ebp+0x8]
10048ba5:	lea    ecx,[ebp-0x10]
10048ba8:	call   0x10044235
10048bad:	push   DWORD PTR [ebp+0x28]
10048bb0:	lea    ecx,[ebp-0x10]
10048bb3:	push   DWORD PTR [ebp+0x24]
10048bb6:	push   DWORD PTR [ebp+0x20]
10048bb9:	push   DWORD PTR [ebp+0x1c]
10048bbc:	push   DWORD PTR [ebp+0x18]
10048bbf:	push   DWORD PTR [ebp+0x14]
10048bc2:	push   DWORD PTR [ebp+0x10]
10048bc5:	push   DWORD PTR [ebp+0xc]
10048bc8:	call   0x100487fa
10048bcd:	add    esp,0x20
10048bd0:	cmp    BYTE PTR [ebp-0x4],0x0
10048bd4:	je     0x10048bdd
10048bd6:	mov    ecx,DWORD PTR [ebp-0x8]
10048bd9:	and    DWORD PTR [ecx+0x70],0xfffffffd
10048bdd:	leave  
10048bde:	ret    
10048bdf:	push   ebp
10048be0:	mov    ebp,esp
10048be2:	sub    esp,0x10
10048be5:	push   DWORD PTR [ebp+0xc]
10048be8:	lea    ecx,[ebp-0x10]
10048beb:	call   0x10044235
10048bf0:	movzx  eax,BYTE PTR [ebp+0x8]
10048bf4:	mov    ecx,DWORD PTR [ebp-0x10]
10048bf7:	mov    ecx,DWORD PTR [ecx+0xc8]
10048bfd:	movzx  eax,WORD PTR [ecx+eax*2]
10048c01:	and    eax,0x8000
10048c06:	cmp    BYTE PTR [ebp-0x4],0x0
10048c0a:	je     0x10048c13
10048c0c:	mov    ecx,DWORD PTR [ebp-0x8]
10048c0f:	and    DWORD PTR [ecx+0x70],0xfffffffd
10048c13:	leave  
10048c14:	ret    
10048c15:	push   0x0
10048c17:	push   DWORD PTR [esp+0x8]
10048c1b:	call   0x10048bdf
10048c20:	pop    ecx
10048c21:	pop    ecx
10048c22:	ret    
10048c23:	push   ebp
10048c24:	mov    ebp,esp
10048c26:	sub    esp,0x18
10048c29:	push   ebx
10048c2a:	push   DWORD PTR [ebp+0x10]
10048c2d:	lea    ecx,[ebp-0x18]
10048c30:	call   0x10044235
10048c35:	mov    ebx,DWORD PTR [ebp+0x8]
10048c38:	lea    eax,[ebx+0x1]
10048c3b:	cmp    eax,0x100
10048c40:	ja     0x10048c51
10048c42:	mov    eax,DWORD PTR [ebp-0x18]
10048c45:	mov    eax,DWORD PTR [eax+0xc8]
10048c4b:	movzx  eax,WORD PTR [eax+ebx*2]
10048c4f:	jmp    0x10048cc6
10048c51:	mov    DWORD PTR [ebp+0x8],ebx
10048c54:	sar    DWORD PTR [ebp+0x8],0x8
10048c58:	lea    eax,[ebp-0x18]
10048c5b:	push   eax
10048c5c:	mov    eax,DWORD PTR [ebp+0x8]
10048c5f:	and    eax,0xff
10048c64:	push   eax
10048c65:	call   0x10048bdf
10048c6a:	test   eax,eax
10048c6c:	pop    ecx
10048c6d:	pop    ecx
10048c6e:	je     0x10048c82
10048c70:	mov    al,BYTE PTR [ebp+0x8]
10048c73:	push   0x2
10048c75:	mov    BYTE PTR [ebp-0x8],al
10048c78:	mov    BYTE PTR [ebp-0x7],bl
10048c7b:	mov    BYTE PTR [ebp-0x6],0x0
10048c7f:	pop    ecx
10048c80:	jmp    0x10048c8c
10048c82:	xor    ecx,ecx
10048c84:	mov    BYTE PTR [ebp-0x8],bl
10048c87:	mov    BYTE PTR [ebp-0x7],0x0
10048c8b:	inc    ecx
10048c8c:	mov    eax,DWORD PTR [ebp-0x18]
10048c8f:	push   0x1
10048c91:	push   DWORD PTR [eax+0x14]
10048c94:	push   DWORD PTR [eax+0x4]
10048c97:	lea    eax,[ebp-0x4]
10048c9a:	push   eax
10048c9b:	push   ecx
10048c9c:	lea    eax,[ebp-0x8]
10048c9f:	push   eax
10048ca0:	lea    eax,[ebp-0x18]
10048ca3:	push   0x1
10048ca5:	push   eax
10048ca6:	call   0x1004b2ce
10048cab:	add    esp,0x20
10048cae:	test   eax,eax
10048cb0:	jne    0x10048cc2
10048cb2:	cmp    BYTE PTR [ebp-0xc],al
10048cb5:	je     0x10048cbe
10048cb7:	mov    eax,DWORD PTR [ebp-0x10]
10048cba:	and    DWORD PTR [eax+0x70],0xfffffffd
10048cbe:	xor    eax,eax
10048cc0:	jmp    0x10048cd6
10048cc2:	movzx  eax,WORD PTR [ebp-0x4]
10048cc6:	and    eax,DWORD PTR [ebp+0xc]
10048cc9:	cmp    BYTE PTR [ebp-0xc],0x0
10048ccd:	je     0x10048cd6
10048ccf:	mov    ecx,DWORD PTR [ebp-0x10]
10048cd2:	and    DWORD PTR [ecx+0x70],0xfffffffd
10048cd6:	pop    ebx
10048cd7:	leave  
10048cd8:	ret    
10048cd9:	mov    ecx,DWORD PTR [esp+0x4]
10048cdd:	push   ebx
10048cde:	push   esi
10048cdf:	push   edi
10048ce0:	xor    edi,edi
10048ce2:	cmp    ecx,edi
10048ce4:	je     0x10048cee
10048ce6:	mov    ebx,DWORD PTR [esp+0x14]
10048cea:	cmp    ebx,edi
10048cec:	ja     0x10048d09
10048cee:	call   0x100458a5
10048cf3:	push   0x16
10048cf5:	pop    esi
10048cf6:	mov    DWORD PTR [eax],esi
10048cf8:	push   edi
10048cf9:	push   edi
10048cfa:	push   edi
10048cfb:	push   edi
10048cfc:	push   edi
10048cfd:	call   0x1004228c
10048d02:	add    esp,0x14
10048d05:	mov    eax,esi
10048d07:	jmp    0x10048d41
10048d09:	mov    esi,DWORD PTR [esp+0x18]
10048d0d:	cmp    esi,edi
10048d0f:	jne    0x10048d16
10048d11:	mov    WORD PTR [ecx],di
10048d14:	jmp    0x10048cee
10048d16:	mov    edx,ecx
10048d18:	movzx  eax,WORD PTR [esi]
10048d1b:	mov    WORD PTR [edx],ax
10048d1e:	inc    edx
10048d1f:	inc    edx
10048d20:	inc    esi
10048d21:	inc    esi
10048d22:	cmp    ax,di
10048d25:	je     0x10048d2a
10048d27:	dec    ebx
10048d28:	jne    0x10048d18
10048d2a:	cmp    ebx,edi
10048d2c:	jne    0x10048d3f
10048d2e:	mov    WORD PTR [ecx],di
10048d31:	call   0x100458a5
10048d36:	push   0x22
10048d38:	pop    ecx
10048d39:	mov    DWORD PTR [eax],ecx
10048d3b:	mov    esi,ecx
10048d3d:	jmp    0x10048cf8
10048d3f:	xor    eax,eax
10048d41:	pop    edi
10048d42:	pop    esi
10048d43:	pop    ebx
10048d44:	ret    
10048d45:	push   ebp
10048d46:	mov    ebp,esp
10048d48:	sub    esp,0x10
10048d4b:	mov    eax,ds:0x1007d030
10048d50:	xor    eax,ebp
10048d52:	mov    DWORD PTR [ebp-0x4],eax
10048d55:	push   ebx
10048d56:	push   esi
10048d57:	mov    esi,DWORD PTR ds:0x100651ec
10048d5d:	xor    ebx,ebx
10048d5f:	cmp    DWORD PTR ds:0x1007f2dc,ebx
10048d65:	push   edi
10048d66:	mov    edi,ecx
10048d68:	jne    0x10048da0
10048d6a:	push   ebx
10048d6b:	push   ebx
10048d6c:	push   0x1
10048d6e:	push   0x10065cb8
10048d73:	push   0x100
10048d78:	push   ebx
10048d79:	call   esi
10048d7b:	test   eax,eax
10048d7d:	je     0x10048d8b
10048d7f:	mov    DWORD PTR ds:0x1007f2dc,0x1
10048d89:	jmp    0x10048da0
10048d8b:	call   DWORD PTR ds:0x100650c4
10048d91:	cmp    eax,0x78
10048d94:	jne    0x10048da0
10048d96:	mov    DWORD PTR ds:0x1007f2dc,0x2
10048da0:	cmp    DWORD PTR [ebp+0x14],ebx
10048da3:	jle    0x10048dc2
10048da5:	mov    ecx,DWORD PTR [ebp+0x14]
10048da8:	mov    eax,DWORD PTR [ebp+0x10]
10048dab:	dec    ecx
10048dac:	cmp    WORD PTR [eax],bx
10048daf:	je     0x10048dba
10048db1:	inc    eax
10048db2:	inc    eax
10048db3:	cmp    ecx,ebx
10048db5:	jne    0x10048dab
10048db7:	or     ecx,0xffffffff
10048dba:	or     eax,0xffffffff
10048dbd:	sub    eax,ecx
10048dbf:	add    DWORD PTR [ebp+0x14],eax
10048dc2:	mov    eax,ds:0x1007f2dc
10048dc7:	cmp    eax,0x1
10048dca:	jne    0x10048de5
10048dcc:	push   DWORD PTR [ebp+0x1c]
10048dcf:	push   DWORD PTR [ebp+0x18]
10048dd2:	push   DWORD PTR [ebp+0x14]
10048dd5:	push   DWORD PTR [ebp+0x10]
10048dd8:	push   DWORD PTR [ebp+0xc]
10048ddb:	push   DWORD PTR [ebp+0x8]
10048dde:	call   esi
10048de0:	jmp    0x10048f94
10048de5:	cmp    eax,0x2
10048de8:	je     0x10048dee
10048dea:	cmp    eax,ebx
10048dec:	jne    0x10048e40
10048dee:	cmp    DWORD PTR [ebp+0x8],ebx
10048df1:	mov    DWORD PTR [ebp-0xc],ebx
10048df4:	jne    0x10048dfe
10048df6:	mov    eax,DWORD PTR [edi]
10048df8:	mov    eax,DWORD PTR [eax+0x14]
10048dfb:	mov    DWORD PTR [ebp+0x8],eax
10048dfe:	cmp    DWORD PTR [ebp+0x20],ebx
10048e01:	jne    0x10048e0b
10048e03:	mov    eax,DWORD PTR [edi]
10048e05:	mov    eax,DWORD PTR [eax+0x4]
10048e08:	mov    DWORD PTR [ebp+0x20],eax
10048e0b:	push   DWORD PTR [ebp+0x8]
10048e0e:	call   0x1004b7f4
10048e13:	cmp    DWORD PTR [ebp+0x20],eax
10048e16:	pop    ecx
10048e17:	je     0x10048e21
10048e19:	cmp    eax,0xffffffff
10048e1c:	je     0x10048e21
10048e1e:	mov    DWORD PTR [ebp+0x20],eax
10048e21:	mov    esi,DWORD PTR ds:0x100650dc
10048e27:	push   ebx
10048e28:	push   ebx
10048e29:	push   ebx
10048e2a:	push   ebx
10048e2b:	push   DWORD PTR [ebp+0x14]
10048e2e:	push   DWORD PTR [ebp+0x10]
10048e31:	push   ebx
10048e32:	push   DWORD PTR [ebp+0x20]
10048e35:	call   esi
10048e37:	mov    edi,eax
10048e39:	cmp    edi,ebx
10048e3b:	mov    DWORD PTR [ebp-0x10],edi
10048e3e:	jne    0x10048e47
10048e40:	xor    eax,eax
10048e42:	jmp    0x10048f94
10048e47:	jle    0x10048e8b
10048e49:	push   0xffffffe0
10048e4b:	xor    edx,edx
10048e4d:	pop    eax
10048e4e:	div    edi
10048e50:	cmp    eax,0x1
10048e53:	jb     0x10048e8b
10048e55:	lea    eax,[edi+0x8]
10048e58:	cmp    eax,0x400
10048e5d:	ja     0x10048e72
10048e5f:	call   0x10049010
10048e64:	mov    eax,esp
10048e66:	cmp    eax,ebx
10048e68:	je     0x10048e86
10048e6a:	mov    DWORD PTR [eax],0xcccc
10048e70:	jmp    0x10048e83
10048e72:	push   eax
10048e73:	call   0x10043cdd
10048e78:	cmp    eax,ebx
10048e7a:	pop    ecx
10048e7b:	je     0x10048e86
10048e7d:	mov    DWORD PTR [eax],0xdddd
10048e83:	add    eax,0x8
10048e86:	mov    DWORD PTR [ebp-0x8],eax
10048e89:	jmp    0x10048e8e
10048e8b:	mov    DWORD PTR [ebp-0x8],ebx
10048e8e:	cmp    DWORD PTR [ebp-0x8],ebx
10048e91:	je     0x10048e40
10048e93:	push   ebx
10048e94:	push   ebx
10048e95:	push   edi
10048e96:	push   DWORD PTR [ebp-0x8]
10048e99:	push   DWORD PTR [ebp+0x14]
10048e9c:	push   DWORD PTR [ebp+0x10]
10048e9f:	push   ebx
10048ea0:	push   DWORD PTR [ebp+0x20]
10048ea3:	call   esi
10048ea5:	test   eax,eax
10048ea7:	je     0x10048f88
10048ead:	push   ebx
10048eae:	push   ebx
10048eaf:	push   edi
10048eb0:	push   DWORD PTR [ebp-0x8]
10048eb3:	mov    edi,DWORD PTR ds:0x100651e8
10048eb9:	push   DWORD PTR [ebp+0xc]
10048ebc:	push   DWORD PTR [ebp+0x8]
10048ebf:	call   edi
10048ec1:	mov    esi,eax
10048ec3:	cmp    esi,ebx
10048ec5:	je     0x10048f88
10048ecb:	jle    0x10048f0c
10048ecd:	push   0xffffffe0
10048ecf:	xor    edx,edx
10048ed1:	pop    eax
10048ed2:	div    esi
10048ed4:	cmp    eax,0x1
10048ed7:	jb     0x10048f0c
10048ed9:	lea    eax,[esi+0x8]
10048edc:	cmp    eax,0x400
10048ee1:	ja     0x10048ef6
10048ee3:	call   0x10049010
10048ee8:	mov    eax,esp
10048eea:	cmp    eax,ebx
10048eec:	je     0x10048f0a
10048eee:	mov    DWORD PTR [eax],0xcccc
10048ef4:	jmp    0x10048f07
10048ef6:	push   eax
10048ef7:	call   0x10043cdd
10048efc:	cmp    eax,ebx
10048efe:	pop    ecx
10048eff:	je     0x10048f0a
10048f01:	mov    DWORD PTR [eax],0xdddd
10048f07:	add    eax,0x8
10048f0a:	mov    ebx,eax
10048f0c:	test   ebx,ebx
10048f0e:	je     0x10048f88
10048f10:	push   esi
10048f11:	push   ebx
10048f12:	push   DWORD PTR [ebp-0x10]
10048f15:	push   DWORD PTR [ebp-0x8]
10048f18:	push   DWORD PTR [ebp+0xc]
10048f1b:	push   DWORD PTR [ebp+0x8]
10048f1e:	call   edi
10048f20:	test   eax,eax
10048f22:	je     0x10048f81
10048f24:	test   WORD PTR [ebp+0xc],0x400
10048f2a:	je     0x10048f60
10048f2c:	mov    eax,DWORD PTR [ebp+0x1c]
10048f2f:	xor    edi,edi
10048f31:	cmp    eax,edi
10048f33:	mov    DWORD PTR [ebp-0xc],esi
10048f36:	je     0x10048f81
10048f38:	cmp    eax,esi
10048f3a:	jg     0x10048f3f
10048f3c:	lea    esi,[eax-0x1]
10048f3f:	push   esi
10048f40:	push   ebx
10048f41:	push   eax
10048f42:	push   DWORD PTR [ebp+0x18]
10048f45:	call   0x1004af60
10048f4a:	add    esp,0x10
10048f4d:	test   eax,eax
10048f4f:	je     0x10048f81
10048f51:	push   edi
10048f52:	push   edi
10048f53:	push   edi
10048f54:	push   edi
10048f55:	push   edi
10048f56:	call   0x10042190
10048f5b:	add    esp,0x14
10048f5e:	jmp    0x10048f81
10048f60:	xor    eax,eax
10048f62:	cmp    DWORD PTR [ebp+0x1c],eax
10048f65:	jne    0x10048f6b
10048f67:	push   eax
10048f68:	push   eax
10048f69:	jmp    0x10048f71
10048f6b:	push   DWORD PTR [ebp+0x1c]
10048f6e:	push   DWORD PTR [ebp+0x18]
10048f71:	push   esi
10048f72:	push   ebx
10048f73:	push   0x1
10048f75:	push   DWORD PTR [ebp+0x20]
10048f78:	call   DWORD PTR ds:0x1006508c
10048f7e:	mov    DWORD PTR [ebp-0xc],eax
10048f81:	push   ebx
10048f82:	call   0x1001b117
10048f87:	pop    ecx
10048f88:	push   DWORD PTR [ebp-0x8]
10048f8b:	call   0x1001b117
10048f90:	mov    eax,DWORD PTR [ebp-0xc]
10048f93:	pop    ecx
10048f94:	lea    esp,[ebp-0x1c]
10048f97:	pop    edi
10048f98:	pop    esi
10048f99:	pop    ebx
10048f9a:	mov    ecx,DWORD PTR [ebp-0x4]
10048f9d:	xor    ecx,ebp
10048f9f:	call   0x10041d97
10048fa4:	leave  
10048fa5:	ret    
10048fa6:	push   ebp
10048fa7:	mov    ebp,esp
10048fa9:	sub    esp,0x10
10048fac:	push   DWORD PTR [ebp+0x8]
10048faf:	lea    ecx,[ebp-0x10]
10048fb2:	call   0x10044235
10048fb7:	push   DWORD PTR [ebp+0x24]
10048fba:	lea    ecx,[ebp-0x10]
10048fbd:	push   DWORD PTR [ebp+0x20]
10048fc0:	push   DWORD PTR [ebp+0x1c]
10048fc3:	push   DWORD PTR [ebp+0x18]
10048fc6:	push   DWORD PTR [ebp+0x14]
10048fc9:	push   DWORD PTR [ebp+0x10]
10048fcc:	push   DWORD PTR [ebp+0xc]
10048fcf:	call   0x10048d45
10048fd4:	add    esp,0x1c
10048fd7:	cmp    BYTE PTR [ebp-0x4],0x0
10048fdb:	je     0x10048fe4
10048fdd:	mov    ecx,DWORD PTR [ebp-0x8]
10048fe0:	and    DWORD PTR [ecx+0x70],0xfffffffd
10048fe4:	leave  
10048fe5:	ret    
10048fe6:	xor    eax,eax
10048fe8:	cmp    DWORD PTR [esp+0x8],eax
10048fec:	jbe    0x10049001
10048fee:	mov    ecx,DWORD PTR [esp+0x4]
10048ff2:	cmp    WORD PTR [ecx],0x0
10048ff6:	je     0x10049001
10048ff8:	inc    eax
10048ff9:	inc    ecx
10048ffa:	inc    ecx
10048ffb:	cmp    eax,DWORD PTR [esp+0x8]
10048fff:	jb     0x10048ff2
10049001:	ret    
10049002:	int3   
10049003:	int3   
10049004:	int3   
10049005:	int3   
10049006:	int3   
10049007:	int3   
10049008:	int3   
10049009:	int3   
1004900a:	int3   
1004900b:	int3   
1004900c:	int3   
1004900d:	int3   
1004900e:	int3   
1004900f:	int3   
10049010:	push   ecx
10049011:	lea    ecx,[esp+0x8]
10049015:	sub    ecx,eax
10049017:	and    ecx,0xf
1004901a:	add    eax,ecx
1004901c:	sbb    ecx,ecx
1004901e:	or     eax,ecx
10049020:	pop    ecx
10049021:	jmp    0x10047700
10049026:	push   ecx
10049027:	lea    ecx,[esp+0x8]
1004902b:	sub    ecx,eax
1004902d:	and    ecx,0x7
10049030:	add    eax,ecx
10049032:	sbb    ecx,ecx
10049034:	or     eax,ecx
10049036:	pop    ecx
10049037:	jmp    0x10047700
1004903c:	push   ebp
1004903d:	mov    ebp,esp
1004903f:	push   ecx
10049040:	push   esi
10049041:	mov    esi,DWORD PTR [ebp+0xc]
10049044:	push   esi
10049045:	call   0x1004c4ca
1004904a:	mov    DWORD PTR [ebp+0xc],eax
1004904d:	mov    eax,DWORD PTR [esi+0xc]
10049050:	test   al,0x82
10049052:	pop    ecx
10049053:	jne    0x1004906c
10049055:	call   0x100458a5
1004905a:	mov    DWORD PTR [eax],0x9
10049060:	or     DWORD PTR [esi+0xc],0x20
10049064:	or     eax,0xffffffff
10049067:	jmp    0x10049199
1004906c:	test   al,0x40
1004906e:	je     0x1004907d
10049070:	call   0x100458a5
10049075:	mov    DWORD PTR [eax],0x22
1004907b:	jmp    0x10049060
1004907d:	push   ebx
1004907e:	xor    ebx,ebx
10049080:	test   al,0x1
10049082:	je     0x1004909a
10049084:	test   al,0x10
10049086:	mov    DWORD PTR [esi+0x4],ebx
10049089:	je     0x10049114
1004908f:	mov    ecx,DWORD PTR [esi+0x8]
10049092:	and    eax,0xfffffffe
10049095:	mov    DWORD PTR [esi],ecx
10049097:	mov    DWORD PTR [esi+0xc],eax
1004909a:	mov    eax,DWORD PTR [esi+0xc]
1004909d:	and    eax,0xffffffef
100490a0:	or     eax,0x2
100490a3:	test   ax,0x10c
100490a7:	mov    DWORD PTR [esi+0xc],eax
100490aa:	mov    DWORD PTR [esi+0x4],ebx
100490ad:	mov    DWORD PTR [ebp-0x4],ebx
100490b0:	jne    0x100490de
100490b2:	call   0x1004c34f
100490b7:	add    eax,0x20
100490ba:	cmp    esi,eax
100490bc:	je     0x100490ca
100490be:	call   0x1004c34f
100490c3:	add    eax,0x40
100490c6:	cmp    esi,eax
100490c8:	jne    0x100490d7
100490ca:	push   DWORD PTR [ebp+0xc]
100490cd:	call   0x1004c2f1
100490d2:	test   eax,eax
100490d4:	pop    ecx
100490d5:	jne    0x100490de
100490d7:	push   esi
100490d8:	call   0x1004c2ad
100490dd:	pop    ecx
100490de:	test   WORD PTR [esi+0xc],0x108
100490e4:	push   edi
100490e5:	je     0x1004916b
100490eb:	mov    eax,DWORD PTR [esi+0x8]
100490ee:	mov    edi,DWORD PTR [esi]
100490f0:	lea    ecx,[eax+0x1]
100490f3:	mov    DWORD PTR [esi],ecx
100490f5:	mov    ecx,DWORD PTR [esi+0x18]
100490f8:	sub    edi,eax
100490fa:	dec    ecx
100490fb:	cmp    edi,ebx
100490fd:	mov    DWORD PTR [esi+0x4],ecx
10049100:	jle    0x1004911f
10049102:	push   edi
10049103:	push   eax
10049104:	push   DWORD PTR [ebp+0xc]
10049107:	call   0x1004c1d1
1004910c:	add    esp,0xc
1004910f:	mov    DWORD PTR [ebp-0x4],eax
10049112:	jmp    0x10049161
10049114:	or     eax,0x20
10049117:	mov    DWORD PTR [esi+0xc],eax
1004911a:	or     eax,0xffffffff
1004911d:	jmp    0x10049198
1004911f:	mov    ecx,DWORD PTR [ebp+0xc]
10049122:	cmp    ecx,0xffffffff
10049125:	je     0x10049142
10049127:	cmp    ecx,0xfffffffe
1004912a:	je     0x10049142
1004912c:	mov    eax,ecx
1004912e:	and    eax,0x1f
10049131:	imul   eax,eax,0x28
10049134:	mov    edx,ecx
10049136:	sar    edx,0x5
10049139:	add    eax,DWORD PTR [edx*4+0x10081460]
10049140:	jmp    0x10049147
10049142:	mov    eax,0x1007d9d0
10049147:	test   BYTE PTR [eax+0x4],0x20
1004914b:	je     0x10049161
1004914d:	push   0x2
1004914f:	push   ebx
10049150:	push   ebx
10049151:	push   ecx
10049152:	call   0x1004baf2
10049157:	and    eax,edx
10049159:	add    esp,0x10
1004915c:	cmp    eax,0xffffffff
1004915f:	je     0x10049186
10049161:	mov    eax,DWORD PTR [esi+0x8]
10049164:	mov    cl,BYTE PTR [ebp+0x8]
10049167:	mov    BYTE PTR [eax],cl
10049169:	jmp    0x10049181
1004916b:	xor    edi,edi
1004916d:	inc    edi
1004916e:	push   edi
1004916f:	lea    eax,[ebp+0x8]
10049172:	push   eax
10049173:	push   DWORD PTR [ebp+0xc]
10049176:	call   0x1004c1d1
1004917b:	add    esp,0xc
1004917e:	mov    DWORD PTR [ebp-0x4],eax
10049181:	cmp    DWORD PTR [ebp-0x4],edi
10049184:	je     0x1004918f
10049186:	or     DWORD PTR [esi+0xc],0x20
1004918a:	or     eax,0xffffffff
1004918d:	jmp    0x10049197
1004918f:	mov    eax,DWORD PTR [ebp+0x8]
10049192:	and    eax,0xff
10049197:	pop    edi
10049198:	pop    ebx
10049199:	pop    esi
1004919a:	leave  
1004919b:	ret    
1004919c:	test   BYTE PTR [eax+0xc],0x40
100491a0:	je     0x100491a8
100491a2:	cmp    DWORD PTR [eax+0x8],0x0
100491a6:	je     0x100491be
100491a8:	push   eax
100491a9:	push   DWORD PTR [esp+0x8]
100491ad:	call   0x1004c4f7
100491b2:	cmp    ax,0xffff
100491b6:	pop    ecx
100491b7:	pop    ecx
100491b8:	jne    0x100491be
100491ba:	or     DWORD PTR [esi],0xffffffff
100491bd:	ret    
100491be:	inc    DWORD PTR [esi]
100491c0:	ret    
100491c1:	push   ebp
100491c2:	mov    ebp,esp
100491c4:	push   esi
100491c5:	mov    esi,eax
100491c7:	jmp    0x100491dd
100491c9:	push   DWORD PTR [ebp+0x8]
100491cc:	mov    eax,DWORD PTR [ebp+0x10]
100491cf:	dec    DWORD PTR [ebp+0xc]
100491d2:	call   0x1004919c
100491d7:	cmp    DWORD PTR [esi],0xffffffff
100491da:	pop    ecx
100491db:	je     0x100491e3
100491dd:	cmp    DWORD PTR [ebp+0xc],0x0
100491e1:	jg     0x100491c9
100491e3:	pop    esi
100491e4:	pop    ebp
100491e5:	ret    
100491e6:	test   BYTE PTR [edi+0xc],0x40
100491ea:	push   ebx
100491eb:	push   esi
100491ec:	mov    esi,eax
100491ee:	mov    ebx,ecx
100491f0:	je     0x1004922b
100491f2:	cmp    DWORD PTR [edi+0x8],0x0
100491f6:	jne    0x1004922b
100491f8:	mov    eax,DWORD PTR [esp+0xc]
100491fc:	add    DWORD PTR [esi],eax
100491fe:	jmp    0x10049232
10049200:	movzx  eax,WORD PTR [ebx]
10049203:	dec    DWORD PTR [esp+0xc]
10049207:	push   eax
10049208:	mov    eax,edi
1004920a:	call   0x1004919c
1004920f:	inc    ebx
10049210:	inc    ebx
10049211:	cmp    DWORD PTR [esi],0xffffffff
10049214:	pop    ecx
10049215:	jne    0x1004922b
10049217:	call   0x100458a5
1004921c:	cmp    DWORD PTR [eax],0x2a
1004921f:	jne    0x10049232
10049221:	push   0x3f
10049223:	mov    eax,edi
10049225:	call   0x1004919c
1004922a:	pop    ecx
1004922b:	cmp    DWORD PTR [esp+0xc],0x0
10049230:	jg     0x10049200
10049232:	pop    esi
10049233:	pop    ebx
10049234:	ret    
10049235:	push   ebp
10049236:	lea    ebp,[esp-0x3f4]
1004923d:	sub    esp,0x474
10049243:	mov    eax,ds:0x1007d030
10049248:	xor    eax,ebp
1004924a:	mov    DWORD PTR [ebp+0x3f0],eax
10049250:	mov    eax,DWORD PTR [ebp+0x3fc]
10049256:	push   ebx
10049257:	mov    ebx,DWORD PTR [ebp+0x408]
1004925d:	push   esi
1004925e:	mov    esi,DWORD PTR [ebp+0x400]
10049264:	push   edi
10049265:	push   DWORD PTR [ebp+0x404]
1004926b:	xor    edi,edi
1004926d:	lea    ecx,[ebp-0x64]
10049270:	mov    DWORD PTR [ebp-0x3c],eax
10049273:	mov    DWORD PTR [ebp-0x28],ebx
10049276:	mov    DWORD PTR [ebp-0x54],edi
10049279:	mov    DWORD PTR [ebp-0x14],edi
1004927c:	mov    DWORD PTR [ebp-0x38],edi
1004927f:	mov    DWORD PTR [ebp-0x18],edi
10049282:	mov    DWORD PTR [ebp-0x30],edi
10049285:	mov    DWORD PTR [ebp-0x48],edi
10049288:	mov    DWORD PTR [ebp-0x34],edi
1004928b:	call   0x10044235
10049290:	cmp    DWORD PTR [ebp-0x3c],edi
10049293:	jne    0x100492c2
10049295:	call   0x100458a5
1004929a:	push   edi
1004929b:	push   edi
1004929c:	push   edi
1004929d:	push   edi
1004929e:	mov    DWORD PTR [eax],0x16
100492a4:	push   edi
100492a5:	call   0x1004228c
100492aa:	add    esp,0x14
100492ad:	cmp    BYTE PTR [ebp-0x58],0x0
100492b1:	je     0x100492ba
100492b3:	mov    eax,DWORD PTR [ebp-0x5c]
100492b6:	and    DWORD PTR [eax+0x70],0xfffffffd
100492ba:	or     eax,0xffffffff
100492bd:	jmp    0x10049b0e
100492c2:	cmp    esi,edi
100492c4:	je     0x10049295
100492c6:	movzx  edx,WORD PTR [esi]
100492c9:	xor    ecx,ecx
100492cb:	cmp    dx,di
100492ce:	mov    DWORD PTR [ebp-0x2c],edi
100492d1:	mov    DWORD PTR [ebp-0x20],edi
100492d4:	mov    DWORD PTR [ebp-0x50],edi
100492d7:	mov    DWORD PTR [ebp-0x24],edx
100492da:	je     0x10049afe
100492e0:	push   0x2
100492e2:	pop    edi
100492e3:	add    esi,edi
100492e5:	cmp    DWORD PTR [ebp-0x2c],0x0
100492e9:	mov    DWORD PTR [ebp-0x4c],esi
100492ec:	jl     0x10049afe
100492f2:	lea    eax,[edx-0x20]
100492f5:	cmp    ax,0x58
100492f9:	ja     0x1004930a
100492fb:	movzx  eax,dx
100492fe:	movzx  eax,BYTE PTR [eax+0x10066d90]
10049305:	and    eax,0xf
10049308:	jmp    0x1004930c
1004930a:	xor    eax,eax
1004930c:	movsx  eax,BYTE PTR [ecx+eax*8+0x10066db0]
10049314:	push   0x7
10049316:	sar    eax,0x4
10049319:	pop    ecx
1004931a:	cmp    eax,ecx
1004931c:	mov    DWORD PTR [ebp-0x68],eax
1004931f:	ja     0x10049acc
10049325:	jmp    DWORD PTR [eax*4+0x10049b29]
1004932c:	xor    eax,eax
1004932e:	or     DWORD PTR [ebp-0x18],0xffffffff
10049332:	mov    DWORD PTR [ebp-0x6c],eax
10049335:	mov    DWORD PTR [ebp-0x48],eax
10049338:	mov    DWORD PTR [ebp-0x38],eax
1004933b:	mov    DWORD PTR [ebp-0x30],eax
1004933e:	mov    DWORD PTR [ebp-0x14],eax
10049341:	mov    DWORD PTR [ebp-0x34],eax
10049344:	jmp    0x10049acc
10049349:	movzx  eax,dx
1004934c:	sub    eax,0x20
1004934f:	je     0x1004938f
10049351:	sub    eax,0x3
10049354:	je     0x10049383
10049356:	sub    eax,0x8
10049359:	je     0x1004937a
1004935b:	sub    eax,edi
1004935d:	je     0x10049371
1004935f:	sub    eax,0x3
10049362:	jne    0x10049acc
10049368:	or     DWORD PTR [ebp-0x14],0x8
1004936c:	jmp    0x10049acc
10049371:	or     DWORD PTR [ebp-0x14],0x4
10049375:	jmp    0x10049acc
1004937a:	or     DWORD PTR [ebp-0x14],0x1
1004937e:	jmp    0x10049acc
10049383:	or     DWORD PTR [ebp-0x14],0x80
1004938a:	jmp    0x10049acc
1004938f:	or     DWORD PTR [ebp-0x14],edi
10049392:	jmp    0x10049acc
10049397:	cmp    dx,0x2a
1004939b:	jne    0x100493bd
1004939d:	add    ebx,0x4
100493a0:	mov    DWORD PTR [ebp-0x28],ebx
100493a3:	mov    ebx,DWORD PTR [ebx-0x4]
100493a6:	test   ebx,ebx
100493a8:	mov    DWORD PTR [ebp-0x38],ebx
100493ab:	jge    0x10049acc
100493b1:	or     DWORD PTR [ebp-0x14],0x4
100493b5:	neg    DWORD PTR [ebp-0x38]
100493b8:	jmp    0x10049acc
100493bd:	mov    eax,DWORD PTR [ebp-0x38]
100493c0:	imul   eax,eax,0xa
100493c3:	movzx  ecx,dx
100493c6:	lea    eax,[eax+ecx*1-0x30]
100493ca:	mov    DWORD PTR [ebp-0x38],eax
100493cd:	jmp    0x10049acc
100493d2:	and    DWORD PTR [ebp-0x18],0x0
100493d6:	jmp    0x10049acc
100493db:	cmp    dx,0x2a
100493df:	jne    0x100493fe
100493e1:	add    ebx,0x4
100493e4:	mov    DWORD PTR [ebp-0x28],ebx
100493e7:	mov    ebx,DWORD PTR [ebx-0x4]
100493ea:	test   ebx,ebx
100493ec:	mov    DWORD PTR [ebp-0x18],ebx
100493ef:	jge    0x10049acc
100493f5:	or     DWORD PTR [ebp-0x18],0xffffffff
100493f9:	jmp    0x10049acc
100493fe:	mov    eax,DWORD PTR [ebp-0x18]
10049401:	imul   eax,eax,0xa
10049404:	movzx  ecx,dx
10049407:	lea    eax,[eax+ecx*1-0x30]
1004940b:	mov    DWORD PTR [ebp-0x18],eax
1004940e:	jmp    0x10049acc
10049413:	movzx  eax,dx
10049416:	cmp    eax,0x49
10049419:	je     0x10049463
1004941b:	cmp    eax,0x68
1004941e:	je     0x1004945a
10049420:	cmp    eax,0x6c
10049423:	je     0x1004943a
10049425:	cmp    eax,0x77
10049428:	jne    0x10049acc
1004942e:	or     DWORD PTR [ebp-0x14],0x800
10049435:	jmp    0x10049acc
1004943a:	cmp    WORD PTR [esi],0x6c
1004943e:	jne    0x10049451
10049440:	add    esi,edi
10049442:	or     DWORD PTR [ebp-0x14],0x1000
10049449:	mov    DWORD PTR [ebp-0x4c],esi
1004944c:	jmp    0x10049acc
10049451:	or     DWORD PTR [ebp-0x14],0x10
10049455:	jmp    0x10049acc
1004945a:	or     DWORD PTR [ebp-0x14],0x20
1004945e:	jmp    0x10049acc
10049463:	movzx  eax,WORD PTR [esi]
10049466:	cmp    ax,0x36
1004946a:	jne    0x10049485
1004946c:	cmp    WORD PTR [esi+0x2],0x34
10049471:	jne    0x10049485
10049473:	add    esi,0x4
10049476:	or     DWORD PTR [ebp-0x14],0x8000
1004947d:	mov    DWORD PTR [ebp-0x4c],esi
10049480:	jmp    0x10049acc
10049485:	cmp    ax,0x33
10049489:	jne    0x100494a4
1004948b:	cmp    WORD PTR [esi+0x2],0x32
10049490:	jne    0x100494a4
10049492:	add    esi,0x4
10049495:	and    DWORD PTR [ebp-0x14],0xffff7fff
1004949c:	mov    DWORD PTR [ebp-0x4c],esi
1004949f:	jmp    0x10049acc
100494a4:	cmp    ax,0x64
100494a8:	je     0x10049acc
100494ae:	cmp    ax,0x69
100494b2:	je     0x10049acc
100494b8:	cmp    ax,0x6f
100494bc:	je     0x10049acc
100494c2:	cmp    ax,0x75
100494c6:	je     0x10049acc
100494cc:	cmp    ax,0x78
100494d0:	je     0x10049acc
100494d6:	cmp    ax,0x58
100494da:	je     0x10049acc
100494e0:	and    DWORD PTR [ebp-0x68],0x0
100494e4:	mov    eax,DWORD PTR [ebp-0x3c]
100494e7:	push   edx
100494e8:	lea    esi,[ebp-0x2c]
100494eb:	mov    DWORD PTR [ebp-0x34],0x1
100494f2:	call   0x1004919c
100494f7:	jmp    0x10049acb
100494fc:	movzx  eax,dx
100494ff:	cmp    eax,0x64
10049502:	jg     0x100496af
10049508:	je     0x1004972e
1004950e:	cmp    eax,0x53
10049511:	jg     0x100495ee
10049517:	je     0x10049578
10049519:	sub    eax,0x41
1004951c:	je     0x1004952e
1004951e:	sub    eax,edi
10049520:	je     0x10049563
10049522:	sub    eax,edi
10049524:	je     0x1004952e
10049526:	sub    eax,edi
10049528:	jne    0x100499b0
1004952e:	add    edx,0x20
10049531:	mov    DWORD PTR [ebp-0x6c],0x1
10049538:	mov    DWORD PTR [ebp-0x24],edx
1004953b:	or     DWORD PTR [ebp-0x14],0x40
1004953f:	cmp    DWORD PTR [ebp-0x18],0x0
10049543:	lea    esi,[ebp-0x10]
10049546:	mov    eax,0x200
1004954b:	mov    DWORD PTR [ebp-0x1c],esi
1004954e:	mov    DWORD PTR [ebp-0x20],eax
10049551:	jge    0x10049752
10049557:	mov    DWORD PTR [ebp-0x18],0x6
1004955e:	jmp    0x1004979f
10049563:	test   WORD PTR [ebp-0x14],0x830
10049569:	jne    0x1004960b
1004956f:	or     DWORD PTR [ebp-0x14],0x20
10049573:	jmp    0x1004960b
10049578:	test   WORD PTR [ebp-0x14],0x830
1004957e:	jne    0x10049584
10049580:	or     DWORD PTR [ebp-0x14],0x20
10049584:	mov    edi,DWORD PTR [ebp-0x18]
10049587:	cmp    edi,0xffffffff
1004958a:	jne    0x10049591
1004958c:	mov    edi,0x7fffffff
10049591:	add    ebx,0x4
10049594:	test   BYTE PTR [ebp-0x14],0x20
10049598:	mov    DWORD PTR [ebp-0x28],ebx
1004959b:	mov    ebx,DWORD PTR [ebx-0x4]
1004959e:	mov    DWORD PTR [ebp-0x1c],ebx
100495a1:	je     0x10049983
100495a7:	test   ebx,ebx
100495a9:	jne    0x100495b3
100495ab:	mov    eax,ds:0x1007de30
100495b0:	mov    DWORD PTR [ebp-0x1c],eax
100495b3:	and    DWORD PTR [ebp-0x20],0x0
100495b7:	test   edi,edi
100495b9:	mov    esi,DWORD PTR [ebp-0x1c]
100495bc:	jle    0x100499b0
100495c2:	mov    al,BYTE PTR [esi]
100495c4:	test   al,al
100495c6:	je     0x100499b0
100495cc:	lea    ecx,[ebp-0x64]
100495cf:	movzx  eax,al
100495d2:	push   ecx
100495d3:	push   eax
100495d4:	call   0x10048bdf
100495d9:	test   eax,eax
100495db:	pop    ecx
100495dc:	pop    ecx
100495dd:	je     0x100495e0
100495df:	inc    esi
100495e0:	inc    esi
100495e1:	inc    DWORD PTR [ebp-0x20]
100495e4:	cmp    DWORD PTR [ebp-0x20],edi
100495e7:	jl     0x100495c2
100495e9:	jmp    0x100499b0
100495ee:	sub    eax,0x58
100495f1:	je     0x1004983a
100495f7:	sub    eax,edi
100495f9:	je     0x10049662
100495fb:	sub    eax,ecx
100495fd:	je     0x1004953b
10049603:	sub    eax,edi
10049605:	jne    0x100499b0
1004960b:	movzx  eax,WORD PTR [ebx]
1004960e:	add    ebx,0x4
10049611:	xor    esi,esi
10049613:	inc    esi
10049614:	test   BYTE PTR [ebp-0x14],0x20
10049618:	mov    DWORD PTR [ebp-0x34],esi
1004961b:	mov    DWORD PTR [ebp-0x28],ebx
1004961e:	mov    DWORD PTR [ebp-0x70],eax
10049621:	je     0x10049650
10049623:	mov    BYTE PTR [ebp-0x40],al
10049626:	lea    eax,[ebp-0x64]
10049629:	push   eax
1004962a:	mov    eax,DWORD PTR [ebp-0x64]
1004962d:	mov    BYTE PTR [ebp-0x3f],0x0
10049631:	push   DWORD PTR [eax+0xac]
10049637:	lea    eax,[ebp-0x40]
1004963a:	push   eax
1004963b:	lea    eax,[ebp-0x10]
1004963e:	push   eax
1004963f:	call   0x1004d0da
10049644:	add    esp,0x10
10049647:	test   eax,eax
10049649:	jge    0x10049654
1004964b:	mov    DWORD PTR [ebp-0x48],esi
1004964e:	jmp    0x10049654
10049650:	mov    WORD PTR [ebp-0x10],ax
10049654:	lea    eax,[ebp-0x10]
10049657:	mov    DWORD PTR [ebp-0x1c],eax
1004965a:	mov    DWORD PTR [ebp-0x20],esi
1004965d:	jmp    0x100499b0
10049662:	mov    eax,DWORD PTR [ebx]
10049664:	add    ebx,0x4
10049667:	test   eax,eax
10049669:	mov    DWORD PTR [ebp-0x28],ebx
1004966c:	je     0x1004969b
1004966e:	mov    ecx,DWORD PTR [eax+0x4]
10049671:	test   ecx,ecx
10049673:	je     0x1004969b
10049675:	test   WORD PTR [ebp-0x14],0x800
1004967b:	movsx  eax,WORD PTR [eax]
1004967e:	mov    DWORD PTR [ebp-0x1c],ecx
10049681:	je     0x10049692
10049683:	cdq    
10049684:	sub    eax,edx
10049686:	mov    DWORD PTR [ebp-0x34],0x1
1004968d:	jmp    0x100499ab
10049692:	and    DWORD PTR [ebp-0x34],0x0
10049696:	jmp    0x100499ad
1004969b:	mov    eax,ds:0x1007de30
100496a0:	mov    DWORD PTR [ebp-0x1c],eax
100496a3:	push   eax
100496a4:	call   0x10041f10
100496a9:	pop    ecx
100496aa:	jmp    0x100499ad
100496af:	cmp    eax,0x70
100496b2:	jg     0x1004983f
100496b8:	je     0x10049833
100496be:	cmp    eax,0x65
100496c1:	jl     0x100499b0
100496c7:	cmp    eax,0x67
100496ca:	jle    0x1004953b
100496d0:	cmp    eax,0x69
100496d3:	je     0x1004972e
100496d5:	cmp    eax,0x6e
100496d8:	je     0x100496f9
100496da:	cmp    eax,0x6f
100496dd:	jne    0x100499b0
100496e3:	test   BYTE PTR [ebp-0x14],0x80
100496e7:	mov    DWORD PTR [ebp-0x24],0x8
100496ee:	je     0x10049739
100496f0:	or     DWORD PTR [ebp-0x14],0x200
100496f7:	jmp    0x10049739
100496f9:	mov    esi,DWORD PTR [ebx]
100496fb:	add    ebx,0x4
100496fe:	mov    DWORD PTR [ebp-0x28],ebx
10049701:	call   0x1004d0c4
10049706:	test   eax,eax
10049708:	je     0x10049ae7
1004970e:	test   BYTE PTR [ebp-0x14],0x20
10049712:	je     0x1004971d
10049714:	mov    ax,WORD PTR [ebp-0x2c]
10049718:	mov    WORD PTR [esi],ax
1004971b:	jmp    0x10049722
1004971d:	mov    eax,DWORD PTR [ebp-0x2c]
10049720:	mov    DWORD PTR [esi],eax
10049722:	mov    DWORD PTR [ebp-0x48],0x1
10049729:	jmp    0x10049ab9
1004972e:	or     DWORD PTR [ebp-0x14],0x40
10049732:	mov    DWORD PTR [ebp-0x24],0xa
10049739:	test   WORD PTR [ebp-0x14],0x8000
1004973f:	je     0x10049889
10049745:	mov    eax,DWORD PTR [ebx]
10049747:	mov    edx,DWORD PTR [ebx+0x4]
1004974a:	add    ebx,0x8
1004974d:	jmp    0x100498c2
10049752:	jne    0x10049763
10049754:	cmp    dx,0x67
10049758:	jne    0x1004979f
1004975a:	mov    DWORD PTR [ebp-0x18],0x1
10049761:	jmp    0x1004979f
10049763:	cmp    DWORD PTR [ebp-0x18],eax
10049766:	jle    0x1004976b
10049768:	mov    DWORD PTR [ebp-0x18],eax
1004976b:	cmp    DWORD PTR [ebp-0x18],0xa3
10049772:	jle    0x1004979f
10049774:	mov    edi,DWORD PTR [ebp-0x18]
10049777:	add    edi,0x15d
1004977d:	push   edi
1004977e:	call   0x10046172
10049783:	test   eax,eax
10049785:	mov    edx,DWORD PTR [ebp-0x24]
10049788:	pop    ecx
10049789:	mov    DWORD PTR [ebp-0x50],eax
1004978c:	je     0x10049798
1004978e:	mov    DWORD PTR [ebp-0x1c],eax
10049791:	mov    DWORD PTR [ebp-0x20],edi
10049794:	mov    esi,eax
10049796:	jmp    0x1004979f
10049798:	mov    DWORD PTR [ebp-0x18],0xa3
1004979f:	mov    eax,DWORD PTR [ebx]
100497a1:	add    ebx,0x8
100497a4:	mov    DWORD PTR [ebp-0x78],eax
100497a7:	mov    eax,DWORD PTR [ebx-0x4]
100497aa:	mov    DWORD PTR [ebp-0x74],eax
100497ad:	lea    eax,[ebp-0x64]
100497b0:	push   eax
100497b1:	push   DWORD PTR [ebp-0x6c]
100497b4:	movsx  eax,dl
100497b7:	push   DWORD PTR [ebp-0x18]
100497ba:	mov    DWORD PTR [ebp-0x28],ebx
100497bd:	push   eax
100497be:	push   DWORD PTR [ebp-0x20]
100497c1:	lea    eax,[ebp-0x78]
100497c4:	push   esi
100497c5:	push   eax
100497c6:	push   DWORD PTR ds:0x1007da98
100497cc:	call   0x10045c42
100497d1:	pop    ecx
100497d2:	call   eax
100497d4:	mov    ebx,DWORD PTR [ebp-0x14]
100497d7:	add    esp,0x1c
100497da:	and    ebx,0x80
100497e0:	je     0x100497fd
100497e2:	cmp    DWORD PTR [ebp-0x18],0x0
100497e6:	jne    0x100497fd
100497e8:	lea    eax,[ebp-0x64]
100497eb:	push   eax
100497ec:	push   esi
100497ed:	push   DWORD PTR ds:0x1007daa4
100497f3:	call   0x10045c42
100497f8:	pop    ecx
100497f9:	call   eax
100497fb:	pop    ecx
100497fc:	pop    ecx
100497fd:	cmp    WORD PTR [ebp-0x24],0x67
10049802:	jne    0x1004981d
10049804:	test   ebx,ebx
10049806:	jne    0x1004981d
10049808:	lea    eax,[ebp-0x64]
1004980b:	push   eax
1004980c:	push   esi
1004980d:	push   DWORD PTR ds:0x1007daa0
10049813:	call   0x10045c42
10049818:	pop    ecx
10049819:	call   eax
1004981b:	pop    ecx
1004981c:	pop    ecx
1004981d:	cmp    BYTE PTR [esi],0x2d
10049820:	jne    0x1004982d
10049822:	or     DWORD PTR [ebp-0x14],0x100
10049829:	inc    esi
1004982a:	mov    DWORD PTR [ebp-0x1c],esi
1004982d:	push   esi
1004982e:	jmp    0x100496a4
10049833:	mov    DWORD PTR [ebp-0x18],0x8
1004983a:	mov    DWORD PTR [ebp-0x54],ecx
1004983d:	jmp    0x10049860
1004983f:	sub    eax,0x73
10049842:	je     0x10049584
10049848:	sub    eax,edi
1004984a:	je     0x10049732
10049850:	sub    eax,0x3
10049853:	jne    0x100499b0
10049859:	mov    DWORD PTR [ebp-0x54],0x27
10049860:	test   BYTE PTR [ebp-0x14],0x80
10049864:	mov    DWORD PTR [ebp-0x24],0x10
1004986b:	je     0x10049739
10049871:	mov    eax,DWORD PTR [ebp-0x54]
10049874:	add    eax,0x51
10049877:	mov    WORD PTR [ebp-0x44],0x30
1004987d:	mov    WORD PTR [ebp-0x42],ax
10049881:	mov    DWORD PTR [ebp-0x30],edi
10049884:	jmp    0x10049739
10049889:	test   WORD PTR [ebp-0x14],0x1000
1004988f:	jne    0x10049745
10049895:	add    ebx,0x4
10049898:	test   BYTE PTR [ebp-0x14],0x20
1004989c:	je     0x100498b4
1004989e:	test   BYTE PTR [ebp-0x14],0x40
100498a2:	mov    DWORD PTR [ebp-0x28],ebx
100498a5:	je     0x100498ad
100498a7:	movsx  eax,WORD PTR [ebx-0x4]
100498ab:	jmp    0x100498b1
100498ad:	movzx  eax,WORD PTR [ebx-0x4]
100498b1:	cdq    
100498b2:	jmp    0x100498c5
100498b4:	test   BYTE PTR [ebp-0x14],0x40
100498b8:	mov    eax,DWORD PTR [ebx-0x4]
100498bb:	je     0x100498c0
100498bd:	cdq    
100498be:	jmp    0x100498c2
100498c0:	xor    edx,edx
100498c2:	mov    DWORD PTR [ebp-0x28],ebx
100498c5:	test   BYTE PTR [ebp-0x14],0x40
100498c9:	je     0x100498e3
100498cb:	test   edx,edx
100498cd:	jg     0x100498e3
100498cf:	jl     0x100498d5
100498d1:	test   eax,eax
100498d3:	jae    0x100498e3
100498d5:	neg    eax
100498d7:	adc    edx,0x0
100498da:	neg    edx
100498dc:	or     DWORD PTR [ebp-0x14],0x100
100498e3:	test   WORD PTR [ebp-0x14],0x9000
100498e9:	mov    ebx,edx
100498eb:	mov    edi,eax
100498ed:	jne    0x100498f1
100498ef:	xor    ebx,ebx
100498f1:	cmp    DWORD PTR [ebp-0x18],0x0
100498f5:	jge    0x10049900
100498f7:	mov    DWORD PTR [ebp-0x18],0x1
100498fe:	jmp    0x10049911
10049900:	and    DWORD PTR [ebp-0x14],0xfffffff7
10049904:	mov    eax,0x200
10049909:	cmp    DWORD PTR [ebp-0x18],eax
1004990c:	jle    0x10049911
1004990e:	mov    DWORD PTR [ebp-0x18],eax
10049911:	mov    eax,edi
10049913:	or     eax,ebx
10049915:	jne    0x1004991b
10049917:	and    DWORD PTR [ebp-0x30],0x0
1004991b:	lea    esi,[ebp+0x1ef]
10049921:	mov    eax,DWORD PTR [ebp-0x18]
10049924:	dec    DWORD PTR [ebp-0x18]
10049927:	test   eax,eax
10049929:	jg     0x10049931
1004992b:	mov    eax,edi
1004992d:	or     eax,ebx
1004992f:	je     0x10049955
10049931:	mov    eax,DWORD PTR [ebp-0x24]
10049934:	cdq    
10049935:	push   edx
10049936:	push   eax
10049937:	push   ebx
10049938:	push   edi
10049939:	call   0x10048310
1004993e:	add    ecx,0x30
10049941:	cmp    ecx,0x39
10049944:	mov    DWORD PTR [ebp-0x7c],ebx
10049947:	mov    edi,eax
10049949:	mov    ebx,edx
1004994b:	jle    0x10049950
1004994d:	add    ecx,DWORD PTR [ebp-0x54]
10049950:	mov    BYTE PTR [esi],cl
10049952:	dec    esi
10049953:	jmp    0x10049921
10049955:	lea    eax,[ebp+0x1ef]
1004995b:	sub    eax,esi
1004995d:	inc    esi
1004995e:	test   WORD PTR [ebp-0x14],0x200
10049964:	mov    DWORD PTR [ebp-0x20],eax
10049967:	mov    DWORD PTR [ebp-0x1c],esi
1004996a:	je     0x100499b0
1004996c:	test   eax,eax
1004996e:	je     0x10049977
10049970:	mov    ecx,esi
10049972:	cmp    BYTE PTR [ecx],0x30
10049975:	je     0x100499b0
10049977:	dec    DWORD PTR [ebp-0x1c]
1004997a:	mov    ecx,DWORD PTR [ebp-0x1c]
1004997d:	mov    BYTE PTR [ecx],0x30
10049980:	inc    eax
10049981:	jmp    0x100499ad
10049983:	test   ebx,ebx
10049985:	jne    0x1004998f
10049987:	mov    eax,ds:0x1007de34
1004998c:	mov    DWORD PTR [ebp-0x1c],eax
1004998f:	mov    eax,DWORD PTR [ebp-0x1c]
10049992:	mov    DWORD PTR [ebp-0x34],0x1
10049999:	jmp    0x100499a4
1004999b:	dec    edi
1004999c:	cmp    WORD PTR [eax],0x0
100499a0:	je     0x100499a8
100499a2:	inc    eax
100499a3:	inc    eax
100499a4:	test   edi,edi
100499a6:	jne    0x1004999b
100499a8:	sub    eax,DWORD PTR [ebp-0x1c]
100499ab:	sar    eax,1
100499ad:	mov    DWORD PTR [ebp-0x20],eax
100499b0:	cmp    DWORD PTR [ebp-0x48],0x0
100499b4:	jne    0x10049ab9
100499ba:	mov    eax,DWORD PTR [ebp-0x14]
100499bd:	test   al,0x40
100499bf:	je     0x100499ec
100499c1:	test   ax,0x100
100499c5:	je     0x100499cf
100499c7:	mov    WORD PTR [ebp-0x44],0x2d
100499cd:	jmp    0x100499e5
100499cf:	test   al,0x1
100499d1:	je     0x100499db
100499d3:	mov    WORD PTR [ebp-0x44],0x2b
100499d9:	jmp    0x100499e5
100499db:	test   al,0x2
100499dd:	je     0x100499ec
100499df:	mov    WORD PTR [ebp-0x44],0x20
100499e5:	mov    DWORD PTR [ebp-0x30],0x1
100499ec:	mov    ebx,DWORD PTR [ebp-0x38]
100499ef:	mov    esi,DWORD PTR [ebp-0x20]
100499f2:	sub    ebx,esi
100499f4:	sub    ebx,DWORD PTR [ebp-0x30]
100499f7:	test   BYTE PTR [ebp-0x14],0xc
100499fb:	jne    0x10049a0e
100499fd:	push   DWORD PTR [ebp-0x3c]
10049a00:	lea    eax,[ebp-0x2c]
10049a03:	push   ebx
10049a04:	push   0x20
10049a06:	call   0x100491c1
10049a0b:	add    esp,0xc
10049a0e:	push   DWORD PTR [ebp-0x30]
10049a11:	mov    edi,DWORD PTR [ebp-0x3c]
10049a14:	lea    eax,[ebp-0x2c]
10049a17:	lea    ecx,[ebp-0x44]
10049a1a:	call   0x100491e6
10049a1f:	test   BYTE PTR [ebp-0x14],0x8
10049a23:	pop    ecx
10049a24:	je     0x10049a3b
10049a26:	test   BYTE PTR [ebp-0x14],0x4
10049a2a:	jne    0x10049a3b
10049a2c:	push   edi
10049a2d:	push   ebx
10049a2e:	push   0x30
10049a30:	lea    eax,[ebp-0x2c]
10049a33:	call   0x100491c1
10049a38:	add    esp,0xc
10049a3b:	cmp    DWORD PTR [ebp-0x34],0x0
10049a3f:	jne    0x10049a8f
10049a41:	test   esi,esi
10049a43:	jle    0x10049a8f
10049a45:	mov    edi,DWORD PTR [ebp-0x1c]
10049a48:	mov    DWORD PTR [ebp-0x24],esi
10049a4b:	dec    DWORD PTR [ebp-0x24]
10049a4e:	lea    eax,[ebp-0x64]
10049a51:	push   eax
10049a52:	mov    eax,DWORD PTR [ebp-0x64]
10049a55:	push   DWORD PTR [eax+0xac]
10049a5b:	lea    eax,[ebp-0x70]
10049a5e:	push   edi
10049a5f:	push   eax
10049a60:	call   0x1004d0da
10049a65:	add    esp,0x10
10049a68:	test   eax,eax
10049a6a:	mov    DWORD PTR [ebp-0x7c],eax
10049a6d:	jle    0x10049a89
10049a6f:	push   DWORD PTR [ebp-0x70]
10049a72:	mov    eax,DWORD PTR [ebp-0x3c]
10049a75:	lea    esi,[ebp-0x2c]
10049a78:	call   0x1004919c
10049a7d:	add    edi,DWORD PTR [ebp-0x7c]
10049a80:	cmp    DWORD PTR [ebp-0x24],0x0
10049a84:	pop    ecx
10049a85:	jg     0x10049a4b
10049a87:	jmp    0x10049a9c
10049a89:	or     DWORD PTR [ebp-0x2c],0xffffffff
10049a8d:	jmp    0x10049a9c
10049a8f:	mov    ecx,DWORD PTR [ebp-0x1c]
10049a92:	push   esi
10049a93:	lea    eax,[ebp-0x2c]
10049a96:	call   0x100491e6
10049a9b:	pop    ecx
10049a9c:	cmp    DWORD PTR [ebp-0x2c],0x0
10049aa0:	jl     0x10049ab9
10049aa2:	test   BYTE PTR [ebp-0x14],0x4
10049aa6:	je     0x10049ab9
10049aa8:	push   DWORD PTR [ebp-0x3c]
10049aab:	lea    eax,[ebp-0x2c]
10049aae:	push   ebx
10049aaf:	push   0x20
10049ab1:	call   0x100491c1
10049ab6:	add    esp,0xc
10049ab9:	cmp    DWORD PTR [ebp-0x50],0x0
10049abd:	je     0x10049acc
10049abf:	push   DWORD PTR [ebp-0x50]
10049ac2:	call   0x10042408
10049ac7:	and    DWORD PTR [ebp-0x50],0x0
10049acb:	pop    ecx
10049acc:	mov    esi,DWORD PTR [ebp-0x4c]
10049acf:	movzx  eax,WORD PTR [esi]
10049ad2:	test   ax,ax
10049ad5:	mov    DWORD PTR [ebp-0x24],eax
10049ad8:	je     0x10049afe
10049ada:	mov    ecx,DWORD PTR [ebp-0x68]
10049add:	mov    ebx,DWORD PTR [ebp-0x28]
10049ae0:	mov    edx,eax
10049ae2:	jmp    0x100492e0
10049ae7:	call   0x100458a5
10049aec:	mov    DWORD PTR [eax],0x16
10049af2:	xor    eax,eax
10049af4:	push   eax
10049af5:	push   eax
10049af6:	push   eax
10049af7:	push   eax
10049af8:	push   eax
10049af9:	jmp    0x100492a5
10049afe:	cmp    BYTE PTR [ebp-0x58],0x0
10049b02:	je     0x10049b0b
10049b04:	mov    eax,DWORD PTR [ebp-0x5c]
10049b07:	and    DWORD PTR [eax+0x70],0xfffffffd
10049b0b:	mov    eax,DWORD PTR [ebp-0x2c]
10049b0e:	mov    ecx,DWORD PTR [ebp+0x3f0]
10049b14:	pop    edi
10049b15:	pop    esi
10049b16:	xor    ecx,ebp
10049b18:	pop    ebx
10049b19:	call   0x10041d97
10049b1e:	add    ebp,0x3f4
10049b24:	leave  
10049b25:	ret    
10049b26:	lea    ecx,[ecx+0x0]
10049b29:	in     al,0x94
10049b2b:	add    al,0x10
10049b2d:	sub    al,0x93
10049b2f:	add    al,0x10
10049b31:	dec    ecx
10049b32:	xchg   ebx,eax
10049b33:	add    al,0x10
10049b35:	xchg   edi,eax
10049b36:	xchg   ebx,eax
10049b37:	add    al,0x10
10049b39:	rcl    BYTE PTR [ebx-0x6c24effc],cl
10049b3f:	add    al,0x10
10049b41:	adc    edx,DWORD PTR [esp+eax*1+0x494fc10]
10049b48:	adc    BYTE PTR [ebp-0x75],dl
10049b4b:	in     al,dx
10049b4c:	sub    esp,0x20
10049b4f:	push   esi
10049b50:	xor    esi,esi
10049b52:	cmp    DWORD PTR [ebp+0xc],esi
10049b55:	jne    0x10049b74
10049b57:	call   0x100458a5
10049b5c:	push   esi
10049b5d:	push   esi
10049b5e:	push   esi
10049b5f:	push   esi
10049b60:	push   esi
10049b61:	mov    DWORD PTR [eax],0x16
10049b67:	call   0x1004228c
10049b6c:	add    esp,0x14
10049b6f:	or     eax,0xffffffff
10049b72:	jmp    0x10049b9b
10049b74:	push   DWORD PTR [ebp+0x14]
10049b77:	lea    eax,[ebp-0x20]
10049b7a:	push   DWORD PTR [ebp+0x10]
10049b7d:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
10049b84:	push   DWORD PTR [ebp+0xc]
10049b87:	mov    DWORD PTR [ebp-0x14],0x42
10049b8e:	push   eax
10049b8f:	mov    DWORD PTR [ebp-0x18],esi
10049b92:	mov    DWORD PTR [ebp-0x20],esi
10049b95:	call   DWORD PTR [ebp+0x8]
10049b98:	add    esp,0x10
10049b9b:	pop    esi
10049b9c:	leave  
10049b9d:	ret    
10049b9e:	push   DWORD PTR [esp+0x8]
10049ba2:	push   0x0
10049ba4:	push   DWORD PTR [esp+0xc]
10049ba8:	push   0x10049235
10049bad:	call   0x10049b49
10049bb2:	add    esp,0x10
10049bb5:	ret    
10049bb6:	push   ebp
10049bb7:	mov    ebp,esp
10049bb9:	sub    esp,0x20
10049bbc:	push   ebx
10049bbd:	xor    ebx,ebx
10049bbf:	cmp    DWORD PTR [ebp+0x14],ebx
10049bc2:	jne    0x10049be4
10049bc4:	call   0x100458a5
10049bc9:	push   ebx
10049bca:	push   ebx
10049bcb:	push   ebx
10049bcc:	push   ebx
10049bcd:	push   ebx
10049bce:	mov    DWORD PTR [eax],0x16
10049bd4:	call   0x1004228c
10049bd9:	add    esp,0x14
10049bdc:	or     eax,0xffffffff
10049bdf:	jmp    0x10049ca9
10049be4:	push   esi
10049be5:	mov    esi,DWORD PTR [ebp+0xc]
10049be8:	push   edi
10049be9:	mov    edi,DWORD PTR [ebp+0x10]
10049bec:	cmp    edi,ebx
10049bee:	je     0x10049c14
10049bf0:	cmp    esi,ebx
10049bf2:	jne    0x10049c14
10049bf4:	call   0x100458a5
10049bf9:	push   ebx
10049bfa:	push   ebx
10049bfb:	push   ebx
10049bfc:	push   ebx
10049bfd:	push   ebx
10049bfe:	mov    DWORD PTR [eax],0x16
10049c04:	call   0x1004228c
10049c09:	add    esp,0x14
10049c0c:	or     eax,0xffffffff
10049c0f:	jmp    0x10049ca7
10049c14:	cmp    edi,0x3fffffff
10049c1a:	mov    DWORD PTR [ebp-0x14],0x42
10049c21:	mov    DWORD PTR [ebp-0x18],esi
10049c24:	mov    DWORD PTR [ebp-0x20],esi
10049c27:	jbe    0x10049c32
10049c29:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
10049c30:	jmp    0x10049c38
10049c32:	lea    eax,[edi+edi*1]
10049c35:	mov    DWORD PTR [ebp-0x1c],eax
10049c38:	push   DWORD PTR [ebp+0x1c]
10049c3b:	lea    eax,[ebp-0x20]
10049c3e:	push   DWORD PTR [ebp+0x18]
10049c41:	push   DWORD PTR [ebp+0x14]
10049c44:	push   eax
10049c45:	call   DWORD PTR [ebp+0x8]
10049c48:	add    esp,0x10
10049c4b:	cmp    esi,ebx
10049c4d:	mov    DWORD PTR [ebp+0x14],eax
10049c50:	je     0x10049ca7
10049c52:	cmp    eax,ebx
10049c54:	jl     0x10049c98
10049c56:	dec    DWORD PTR [ebp-0x1c]
10049c59:	js     0x10049c65
10049c5b:	mov    eax,DWORD PTR [ebp-0x20]
10049c5e:	mov    BYTE PTR [eax],bl
10049c60:	inc    DWORD PTR [ebp-0x20]
10049c63:	jmp    0x10049c76
10049c65:	lea    eax,[ebp-0x20]
10049c68:	push   eax
10049c69:	push   ebx
10049c6a:	call   0x1004903c
10049c6f:	cmp    eax,0xffffffff
10049c72:	pop    ecx
10049c73:	pop    ecx
10049c74:	je     0x10049c98
10049c76:	dec    DWORD PTR [ebp-0x1c]
10049c79:	js     0x10049c82
10049c7b:	mov    eax,DWORD PTR [ebp-0x20]
10049c7e:	mov    BYTE PTR [eax],bl
10049c80:	jmp    0x10049c93
10049c82:	lea    eax,[ebp-0x20]
10049c85:	push   eax
10049c86:	push   ebx
10049c87:	call   0x1004903c
10049c8c:	cmp    eax,0xffffffff
10049c8f:	pop    ecx
10049c90:	pop    ecx
10049c91:	je     0x10049c98
10049c93:	mov    eax,DWORD PTR [ebp+0x14]
10049c96:	jmp    0x10049ca7
10049c98:	xor    eax,eax
10049c9a:	cmp    DWORD PTR [ebp-0x1c],ebx
10049c9d:	mov    WORD PTR [esi+edi*2-0x2],bx
10049ca2:	setge  al
10049ca5:	dec    eax
10049ca6:	dec    eax
10049ca7:	pop    edi
10049ca8:	pop    esi
10049ca9:	pop    ebx
10049caa:	leave  
10049cab:	ret    
10049cac:	push   ebp
10049cad:	mov    ebp,esp
10049caf:	push   esi
10049cb0:	xor    esi,esi
10049cb2:	cmp    DWORD PTR [ebp+0x10],esi
10049cb5:	jne    0x10049cd4
10049cb7:	call   0x100458a5
10049cbc:	push   esi
10049cbd:	push   esi
10049cbe:	push   esi
10049cbf:	push   esi
10049cc0:	push   esi
10049cc1:	mov    DWORD PTR [eax],0x16
10049cc7:	call   0x1004228c
10049ccc:	add    esp,0x14
10049ccf:	or     eax,0xffffffff
10049cd2:	jmp    0x10049d30
10049cd4:	push   edi
10049cd5:	mov    edi,DWORD PTR [ebp+0x8]
10049cd8:	cmp    edi,esi
10049cda:	je     0x10049ce1
10049cdc:	cmp    DWORD PTR [ebp+0xc],esi
10049cdf:	ja     0x10049cee
10049ce1:	call   0x100458a5
10049ce6:	mov    DWORD PTR [eax],0x16
10049cec:	jmp    0x10049d1f
10049cee:	push   DWORD PTR [ebp+0x18]
10049cf1:	push   DWORD PTR [ebp+0x14]
10049cf4:	push   DWORD PTR [ebp+0x10]
10049cf7:	push   DWORD PTR [ebp+0xc]
10049cfa:	push   edi
10049cfb:	push   0x1004d204
10049d00:	call   0x10049bb6
10049d05:	add    esp,0x18
10049d08:	cmp    eax,esi
10049d0a:	jge    0x10049d0f
10049d0c:	mov    WORD PTR [edi],si
10049d0f:	cmp    eax,0xfffffffe
10049d12:	jne    0x10049d2f
10049d14:	call   0x100458a5
10049d19:	mov    DWORD PTR [eax],0x22
10049d1f:	push   esi
10049d20:	push   esi
10049d21:	push   esi
10049d22:	push   esi
10049d23:	push   esi
10049d24:	call   0x1004228c
10049d29:	add    esp,0x14
10049d2c:	or     eax,0xffffffff
10049d2f:	pop    edi
10049d30:	pop    esi
10049d31:	pop    ebp
10049d32:	ret    
10049d33:	push   DWORD PTR [esp+0x10]
10049d37:	push   0x0
10049d39:	push   DWORD PTR [esp+0x14]
10049d3d:	push   DWORD PTR [esp+0x14]
10049d41:	push   DWORD PTR [esp+0x14]
10049d45:	call   0x10049cac
10049d4a:	add    esp,0x14
10049d4d:	ret    
10049d4e:	push   ebp
10049d4f:	mov    ebp,esp
10049d51:	mov    eax,0xffff
10049d56:	sub    esp,0x14
10049d59:	cmp    WORD PTR [ebp+0x8],ax
10049d5d:	je     0x10049df9
10049d63:	push   ebx
10049d64:	push   DWORD PTR [ebp+0xc]
10049d67:	lea    ecx,[ebp-0x14]
10049d6a:	call   0x10044235
10049d6f:	mov    ecx,DWORD PTR [ebp-0x14]
10049d72:	mov    edx,DWORD PTR [ecx+0x14]
10049d75:	xor    ebx,ebx
10049d77:	cmp    edx,ebx
10049d79:	jne    0x10049d8f
10049d7b:	mov    eax,DWORD PTR [ebp+0x8]
10049d7e:	lea    ecx,[eax-0x41]
10049d81:	cmp    cx,0x19
10049d85:	ja     0x10049d8a
10049d87:	add    eax,0x20
10049d8a:	movzx  eax,ax
10049d8d:	jmp    0x10049dec
10049d8f:	mov    eax,0x100
10049d94:	cmp    WORD PTR [ebp+0x8],ax
10049d98:	jae    0x10049dc3
10049d9a:	lea    eax,[ebp-0x14]
10049d9d:	push   eax
10049d9e:	push   0x1
10049da0:	push   DWORD PTR [ebp+0x8]
10049da3:	call   0x1004b9ed
10049da8:	add    esp,0xc
10049dab:	test   eax,eax
10049dad:	movzx  eax,WORD PTR [ebp+0x8]
10049db1:	je     0x10049dec
10049db3:	mov    ecx,DWORD PTR [ebp-0x14]
10049db6:	mov    ecx,DWORD PTR [ecx+0xcc]
10049dbc:	movzx  ax,BYTE PTR [ecx+eax*1]
10049dc1:	jmp    0x10049d8a
10049dc3:	push   DWORD PTR [ecx+0x4]
10049dc6:	lea    ecx,[ebp-0x4]
10049dc9:	push   0x1
10049dcb:	push   ecx
10049dcc:	push   0x1
10049dce:	lea    ecx,[ebp+0x8]
10049dd1:	push   ecx
10049dd2:	push   eax
10049dd3:	push   edx
10049dd4:	lea    eax,[ebp-0x14]
10049dd7:	push   eax
10049dd8:	call   0x10048fa6
10049ddd:	add    esp,0x20
10049de0:	test   eax,eax
10049de2:	movzx  eax,WORD PTR [ebp+0x8]
10049de6:	je     0x10049dec
10049de8:	movzx  eax,WORD PTR [ebp-0x4]
10049dec:	cmp    BYTE PTR [ebp-0x8],bl
10049def:	je     0x10049df8
10049df1:	mov    ecx,DWORD PTR [ebp-0xc]
10049df4:	and    DWORD PTR [ecx+0x70],0xfffffffd
10049df8:	pop    ebx
10049df9:	leave  
10049dfa:	ret    
10049dfb:	push   0x54
10049dfd:	push   0x10073368
10049e02:	call   0x100459e4
10049e07:	xor    edi,edi
10049e09:	mov    DWORD PTR [ebp-0x4],edi
10049e0c:	lea    eax,[ebp-0x64]
10049e0f:	push   eax
10049e10:	call   DWORD PTR ds:0x100651f8
10049e16:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10049e1d:	push   0x28
10049e1f:	push   0x20
10049e21:	pop    esi
10049e22:	push   esi
10049e23:	call   0x100461b2
10049e28:	pop    ecx
10049e29:	pop    ecx
10049e2a:	cmp    eax,edi
10049e2c:	je     0x1004a032
10049e32:	mov    ds:0x10081460,eax
10049e37:	mov    DWORD PTR ds:0x10081444,esi
10049e3d:	lea    ecx,[eax+0x500]
10049e43:	jmp    0x10049e6e
10049e45:	mov    BYTE PTR [eax+0x4],0x0
10049e49:	or     DWORD PTR [eax],0xffffffff
10049e4c:	mov    BYTE PTR [eax+0x5],0xa
10049e50:	mov    DWORD PTR [eax+0x8],edi
10049e53:	mov    BYTE PTR [eax+0x24],0x0
10049e57:	mov    BYTE PTR [eax+0x25],0xa
10049e5b:	mov    BYTE PTR [eax+0x26],0xa
10049e5f:	add    eax,0x28
10049e62:	mov    ecx,DWORD PTR ds:0x10081460
10049e68:	add    ecx,0x500
10049e6e:	cmp    eax,ecx
10049e70:	jb     0x10049e45
10049e72:	cmp    WORD PTR [ebp-0x32],di
10049e76:	je     0x10049f79
10049e7c:	mov    eax,DWORD PTR [ebp-0x30]
10049e7f:	cmp    eax,edi
10049e81:	je     0x10049f79
10049e87:	mov    edi,DWORD PTR [eax]
10049e89:	lea    ebx,[eax+0x4]
10049e8c:	lea    eax,[ebx+edi*1]
10049e8f:	mov    DWORD PTR [ebp-0x1c],eax
10049e92:	mov    eax,0x800
10049e97:	cmp    edi,eax
10049e99:	jl     0x10049e9d
10049e9b:	mov    edi,eax
10049e9d:	xor    esi,esi
10049e9f:	inc    esi
10049ea0:	jmp    0x10049ef4
10049ea2:	push   0x28
10049ea4:	push   0x20
10049ea6:	call   0x100461b2
10049eab:	pop    ecx
10049eac:	pop    ecx
10049ead:	test   eax,eax
10049eaf:	je     0x10049efe
10049eb1:	lea    ecx,[esi*4+0x10081460]
10049eb8:	mov    DWORD PTR [ecx],eax
10049eba:	add    DWORD PTR ds:0x10081444,0x20
10049ec1:	lea    edx,[eax+0x500]
10049ec7:	jmp    0x10049eef
10049ec9:	mov    BYTE PTR [eax+0x4],0x0
10049ecd:	or     DWORD PTR [eax],0xffffffff
10049ed0:	mov    BYTE PTR [eax+0x5],0xa
10049ed4:	and    DWORD PTR [eax+0x8],0x0
10049ed8:	and    BYTE PTR [eax+0x24],0x80
10049edc:	mov    BYTE PTR [eax+0x25],0xa
10049ee0:	mov    BYTE PTR [eax+0x26],0xa
10049ee4:	add    eax,0x28
10049ee7:	mov    edx,DWORD PTR [ecx]
10049ee9:	add    edx,0x500
10049eef:	cmp    eax,edx
10049ef1:	jb     0x10049ec9
10049ef3:	inc    esi
10049ef4:	cmp    DWORD PTR ds:0x10081444,edi
10049efa:	jl     0x10049ea2
10049efc:	jmp    0x10049f04
10049efe:	mov    edi,DWORD PTR ds:0x10081444
10049f04:	and    DWORD PTR [ebp-0x20],0x0
10049f08:	test   edi,edi
10049f0a:	jle    0x10049f79
10049f0c:	mov    eax,DWORD PTR [ebp-0x1c]
10049f0f:	mov    ecx,DWORD PTR [eax]
10049f11:	cmp    ecx,0xffffffff
10049f14:	je     0x10049f6c
10049f16:	cmp    ecx,0xfffffffe
10049f19:	je     0x10049f6c
10049f1b:	mov    al,BYTE PTR [ebx]
10049f1d:	test   al,0x1
10049f1f:	je     0x10049f6c
10049f21:	test   al,0x8
10049f23:	jne    0x10049f30
10049f25:	push   ecx
10049f26:	call   DWORD PTR ds:0x100651f4
10049f2c:	test   eax,eax
10049f2e:	je     0x10049f6c
10049f30:	mov    esi,DWORD PTR [ebp-0x20]
10049f33:	mov    eax,esi
10049f35:	sar    eax,0x5
10049f38:	and    esi,0x1f
10049f3b:	imul   esi,esi,0x28
10049f3e:	add    esi,DWORD PTR [eax*4+0x10081460]
10049f45:	mov    eax,DWORD PTR [ebp-0x1c]
10049f48:	mov    eax,DWORD PTR [eax]
10049f4a:	mov    DWORD PTR [esi],eax
10049f4c:	mov    al,BYTE PTR [ebx]
10049f4e:	mov    BYTE PTR [esi+0x4],al
10049f51:	push   0xfa0
10049f56:	lea    eax,[esi+0xc]
10049f59:	push   eax
10049f5a:	call   0x1004abdb
10049f5f:	pop    ecx
10049f60:	pop    ecx
10049f61:	test   eax,eax
10049f63:	je     0x1004a032
10049f69:	inc    DWORD PTR [esi+0x8]
10049f6c:	inc    DWORD PTR [ebp-0x20]
10049f6f:	inc    ebx
10049f70:	add    DWORD PTR [ebp-0x1c],0x4
10049f74:	cmp    DWORD PTR [ebp-0x20],edi
10049f77:	jl     0x10049f0c
10049f79:	xor    ebx,ebx
10049f7b:	mov    esi,ebx
10049f7d:	imul   esi,esi,0x28
10049f80:	add    esi,DWORD PTR ds:0x10081460
10049f86:	mov    eax,DWORD PTR [esi]
10049f88:	cmp    eax,0xffffffff
10049f8b:	je     0x10049f98
10049f8d:	cmp    eax,0xfffffffe
10049f90:	je     0x10049f98
10049f92:	or     BYTE PTR [esi+0x4],0x80
10049f96:	jmp    0x1004a00a
10049f98:	mov    BYTE PTR [esi+0x4],0x81
10049f9c:	test   ebx,ebx
10049f9e:	jne    0x10049fa5
10049fa0:	push   0xfffffff6
10049fa2:	pop    eax
10049fa3:	jmp    0x10049faf
10049fa5:	mov    eax,ebx
10049fa7:	dec    eax
10049fa8:	neg    eax
10049faa:	sbb    eax,eax
10049fac:	add    eax,0xfffffff5
10049faf:	push   eax
10049fb0:	call   DWORD PTR ds:0x100651d4
10049fb6:	mov    edi,eax
10049fb8:	cmp    edi,0xffffffff
10049fbb:	je     0x1004a000
10049fbd:	test   edi,edi
10049fbf:	je     0x1004a000
10049fc1:	push   edi
10049fc2:	call   DWORD PTR ds:0x100651f4
10049fc8:	test   eax,eax
10049fca:	je     0x1004a000
10049fcc:	mov    DWORD PTR [esi],edi
10049fce:	and    eax,0xff
10049fd3:	cmp    eax,0x2
10049fd6:	jne    0x10049fde
10049fd8:	or     BYTE PTR [esi+0x4],0x40
10049fdc:	jmp    0x10049fe7
10049fde:	cmp    eax,0x3
10049fe1:	jne    0x10049fe7
10049fe3:	or     BYTE PTR [esi+0x4],0x8
10049fe7:	push   0xfa0
10049fec:	lea    eax,[esi+0xc]
10049fef:	push   eax
10049ff0:	call   0x1004abdb
10049ff5:	pop    ecx
10049ff6:	pop    ecx
10049ff7:	test   eax,eax
10049ff9:	je     0x1004a032
10049ffb:	inc    DWORD PTR [esi+0x8]
10049ffe:	jmp    0x1004a00a
1004a000:	or     BYTE PTR [esi+0x4],0x40
1004a004:	mov    DWORD PTR [esi],0xfffffffe
1004a00a:	inc    ebx
1004a00b:	cmp    ebx,0x3
1004a00e:	jl     0x10049f7b
1004a014:	push   DWORD PTR ds:0x10081444
1004a01a:	call   DWORD PTR ds:0x100651f0
1004a020:	xor    eax,eax
1004a022:	jmp    0x1004a035
1004a024:	xor    eax,eax
1004a026:	inc    eax
1004a027:	ret    
1004a028:	mov    esp,DWORD PTR [ebp-0x18]
1004a02b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004a032:	or     eax,0xffffffff
1004a035:	call   0x10045a29
1004a03a:	ret    
1004a03b:	push   esi
1004a03c:	push   edi
1004a03d:	mov    esi,0x10081460
1004a042:	mov    edi,DWORD PTR [esi]
1004a044:	test   edi,edi
1004a046:	je     0x1004a079
1004a048:	lea    eax,[edi+0x500]
1004a04e:	jmp    0x1004a06a
1004a050:	cmp    DWORD PTR [edi+0x8],0x0
1004a054:	je     0x1004a060
1004a056:	lea    eax,[edi+0xc]
1004a059:	push   eax
1004a05a:	call   DWORD PTR ds:0x10065138
1004a060:	mov    eax,DWORD PTR [esi]
1004a062:	add    edi,0x28
1004a065:	add    eax,0x500
1004a06a:	cmp    edi,eax
1004a06c:	jb     0x1004a050
1004a06e:	push   DWORD PTR [esi]
1004a070:	call   0x10042408
1004a075:	and    DWORD PTR [esi],0x0
1004a078:	pop    ecx
1004a079:	add    esi,0x4
1004a07c:	cmp    esi,0x10081560
1004a082:	jl     0x1004a042
1004a084:	pop    edi
1004a085:	pop    esi
1004a086:	ret    
1004a087:	push   ebx
1004a088:	xor    ebx,ebx
1004a08a:	cmp    DWORD PTR ds:0x10081594,ebx
1004a090:	push   esi
1004a091:	push   edi
1004a092:	jne    0x1004a099
1004a094:	call   0x10047f1a
1004a099:	mov    esi,DWORD PTR ds:0x1007ea78
1004a09f:	xor    edi,edi
1004a0a1:	cmp    esi,ebx
1004a0a3:	jne    0x1004a0bd
1004a0a5:	or     eax,0xffffffff
1004a0a8:	jmp    0x1004a148
1004a0ad:	cmp    al,0x3d
1004a0af:	je     0x1004a0b2
1004a0b1:	inc    edi
1004a0b2:	push   esi
1004a0b3:	call   0x10041f10
1004a0b8:	pop    ecx
1004a0b9:	lea    esi,[esi+eax*1+0x1]
1004a0bd:	mov    al,BYTE PTR [esi]
1004a0bf:	cmp    al,bl
1004a0c1:	jne    0x1004a0ad
1004a0c3:	push   0x4
1004a0c5:	inc    edi
1004a0c6:	push   edi
1004a0c7:	call   0x100461b2
1004a0cc:	mov    edi,eax
1004a0ce:	cmp    edi,ebx
1004a0d0:	pop    ecx
1004a0d1:	pop    ecx
1004a0d2:	mov    DWORD PTR ds:0x1007ede8,edi
1004a0d8:	je     0x1004a0a5
1004a0da:	mov    esi,DWORD PTR ds:0x1007ea78
1004a0e0:	push   ebp
1004a0e1:	jmp    0x1004a123
1004a0e3:	push   esi
1004a0e4:	call   0x10041f10
1004a0e9:	mov    ebp,eax
1004a0eb:	inc    ebp
1004a0ec:	cmp    BYTE PTR [esi],0x3d
1004a0ef:	pop    ecx
1004a0f0:	je     0x1004a121
1004a0f2:	push   0x1
1004a0f4:	push   ebp
1004a0f5:	call   0x100461b2
1004a0fa:	cmp    eax,ebx
1004a0fc:	pop    ecx
1004a0fd:	pop    ecx
1004a0fe:	mov    DWORD PTR [edi],eax
1004a100:	je     0x1004a14c
1004a102:	push   esi
1004a103:	push   ebp
1004a104:	push   eax
1004a105:	call   0x100458e9
1004a10a:	add    esp,0xc
1004a10d:	test   eax,eax
1004a10f:	je     0x1004a11e
1004a111:	push   ebx
1004a112:	push   ebx
1004a113:	push   ebx
1004a114:	push   ebx
1004a115:	push   ebx
1004a116:	call   0x10042190
1004a11b:	add    esp,0x14
1004a11e:	add    edi,0x4
1004a121:	add    esi,ebp
1004a123:	cmp    BYTE PTR [esi],bl
1004a125:	jne    0x1004a0e3
1004a127:	push   DWORD PTR ds:0x1007ea78
1004a12d:	call   0x10042408
1004a132:	mov    DWORD PTR ds:0x1007ea78,ebx
1004a138:	mov    DWORD PTR [edi],ebx
1004a13a:	mov    DWORD PTR ds:0x10081588,0x1
1004a144:	xor    eax,eax
1004a146:	pop    ecx
1004a147:	pop    ebp
1004a148:	pop    edi
1004a149:	pop    esi
1004a14a:	pop    ebx
1004a14b:	ret    
1004a14c:	push   DWORD PTR ds:0x1007ede8
1004a152:	call   0x10042408
1004a157:	mov    DWORD PTR ds:0x1007ede8,ebx
1004a15d:	or     eax,0xffffffff
1004a160:	jmp    0x1004a146
1004a162:	push   ebp
1004a163:	mov    ebp,esp
1004a165:	push   ecx
1004a166:	mov    ecx,DWORD PTR [ebp+0x10]
1004a169:	push   ebx
1004a16a:	xor    eax,eax
1004a16c:	cmp    DWORD PTR [ebp+0x8],eax
1004a16f:	push   esi
1004a170:	mov    DWORD PTR [edi],eax
1004a172:	mov    esi,edx
1004a174:	mov    edx,DWORD PTR [ebp+0xc]
1004a177:	mov    DWORD PTR [ecx],0x1
1004a17d:	je     0x1004a188
1004a17f:	mov    ebx,DWORD PTR [ebp+0x8]
1004a182:	add    DWORD PTR [ebp+0x8],0x4
1004a186:	mov    DWORD PTR [ebx],edx
1004a188:	mov    DWORD PTR [ebp-0x4],eax
1004a18b:	cmp    BYTE PTR [esi],0x22
1004a18e:	jne    0x1004a1a0
1004a190:	xor    eax,eax
1004a192:	cmp    DWORD PTR [ebp-0x4],eax
1004a195:	mov    bl,0x22
1004a197:	sete   al
1004a19a:	inc    esi
1004a19b:	mov    DWORD PTR [ebp-0x4],eax
1004a19e:	jmp    0x1004a1dc
1004a1a0:	inc    DWORD PTR [edi]
1004a1a2:	test   edx,edx
1004a1a4:	je     0x1004a1ae
1004a1a6:	mov    al,BYTE PTR [esi]
1004a1a8:	mov    BYTE PTR [edx],al
1004a1aa:	inc    edx
1004a1ab:	mov    DWORD PTR [ebp+0xc],edx
1004a1ae:	mov    bl,BYTE PTR [esi]
1004a1b0:	movzx  eax,bl
1004a1b3:	push   eax
1004a1b4:	inc    esi
1004a1b5:	call   0x1004db75
1004a1ba:	test   eax,eax
1004a1bc:	pop    ecx
1004a1bd:	je     0x1004a1d2
1004a1bf:	inc    DWORD PTR [edi]
1004a1c1:	cmp    DWORD PTR [ebp+0xc],0x0
1004a1c5:	je     0x1004a1d1
1004a1c7:	mov    ecx,DWORD PTR [ebp+0xc]
1004a1ca:	mov    al,BYTE PTR [esi]
1004a1cc:	inc    DWORD PTR [ebp+0xc]
1004a1cf:	mov    BYTE PTR [ecx],al
1004a1d1:	inc    esi
1004a1d2:	test   bl,bl
1004a1d4:	mov    edx,DWORD PTR [ebp+0xc]
1004a1d7:	mov    ecx,DWORD PTR [ebp+0x10]
1004a1da:	je     0x1004a20e
1004a1dc:	cmp    DWORD PTR [ebp-0x4],0x0
1004a1e0:	jne    0x1004a18b
1004a1e2:	cmp    bl,0x20
1004a1e5:	je     0x1004a1ec
1004a1e7:	cmp    bl,0x9
1004a1ea:	jne    0x1004a18b
1004a1ec:	test   edx,edx
1004a1ee:	je     0x1004a1f4
1004a1f0:	mov    BYTE PTR [edx-0x1],0x0
1004a1f4:	and    DWORD PTR [ebp-0x4],0x0
1004a1f8:	cmp    BYTE PTR [esi],0x0
1004a1fb:	je     0x1004a2ea
1004a201:	mov    al,BYTE PTR [esi]
1004a203:	cmp    al,0x20
1004a205:	je     0x1004a20b
1004a207:	cmp    al,0x9
1004a209:	jne    0x1004a211
1004a20b:	inc    esi
1004a20c:	jmp    0x1004a201
1004a20e:	dec    esi
1004a20f:	jmp    0x1004a1f4
1004a211:	cmp    BYTE PTR [esi],0x0
1004a214:	je     0x1004a2ea
1004a21a:	cmp    DWORD PTR [ebp+0x8],0x0
1004a21e:	je     0x1004a229
1004a220:	mov    eax,DWORD PTR [ebp+0x8]
1004a223:	add    DWORD PTR [ebp+0x8],0x4
1004a227:	mov    DWORD PTR [eax],edx
1004a229:	inc    DWORD PTR [ecx]
1004a22b:	xor    ebx,ebx
1004a22d:	inc    ebx
1004a22e:	xor    ecx,ecx
1004a230:	jmp    0x1004a234
1004a232:	inc    esi
1004a233:	inc    ecx
1004a234:	cmp    BYTE PTR [esi],0x5c
1004a237:	je     0x1004a232
1004a239:	cmp    BYTE PTR [esi],0x22
1004a23c:	jne    0x1004a264
1004a23e:	test   cl,0x1
1004a241:	jne    0x1004a262
1004a243:	cmp    DWORD PTR [ebp-0x4],0x0
1004a247:	je     0x1004a255
1004a249:	lea    eax,[esi+0x1]
1004a24c:	cmp    BYTE PTR [eax],0x22
1004a24f:	jne    0x1004a255
1004a251:	mov    esi,eax
1004a253:	jmp    0x1004a262
1004a255:	xor    eax,eax
1004a257:	xor    ebx,ebx
1004a259:	cmp    DWORD PTR [ebp-0x4],eax
1004a25c:	sete   al
1004a25f:	mov    DWORD PTR [ebp-0x4],eax
1004a262:	shr    ecx,1
1004a264:	test   ecx,ecx
1004a266:	je     0x1004a27a
1004a268:	dec    ecx
1004a269:	test   edx,edx
1004a26b:	je     0x1004a271
1004a26d:	mov    BYTE PTR [edx],0x5c
1004a270:	inc    edx
1004a271:	inc    DWORD PTR [edi]
1004a273:	test   ecx,ecx
1004a275:	jne    0x1004a268
1004a277:	mov    DWORD PTR [ebp+0xc],edx
1004a27a:	mov    al,BYTE PTR [esi]
1004a27c:	test   al,al
1004a27e:	je     0x1004a2d5
1004a280:	cmp    DWORD PTR [ebp-0x4],0x0
1004a284:	jne    0x1004a28e
1004a286:	cmp    al,0x20
1004a288:	je     0x1004a2d5
1004a28a:	cmp    al,0x9
1004a28c:	je     0x1004a2d5
1004a28e:	test   ebx,ebx
1004a290:	je     0x1004a2cf
1004a292:	test   edx,edx
1004a294:	movsx  eax,al
1004a297:	push   eax
1004a298:	je     0x1004a2bd
1004a29a:	call   0x1004db75
1004a29f:	test   eax,eax
1004a2a1:	pop    ecx
1004a2a2:	je     0x1004a2b1
1004a2a4:	mov    al,BYTE PTR [esi]
1004a2a6:	mov    ecx,DWORD PTR [ebp+0xc]
1004a2a9:	inc    DWORD PTR [ebp+0xc]
1004a2ac:	mov    BYTE PTR [ecx],al
1004a2ae:	inc    esi
1004a2af:	inc    DWORD PTR [edi]
1004a2b1:	mov    ecx,DWORD PTR [ebp+0xc]
1004a2b4:	mov    al,BYTE PTR [esi]
1004a2b6:	inc    DWORD PTR [ebp+0xc]
1004a2b9:	mov    BYTE PTR [ecx],al
1004a2bb:	jmp    0x1004a2ca
1004a2bd:	call   0x1004db75
1004a2c2:	test   eax,eax
1004a2c4:	pop    ecx
1004a2c5:	je     0x1004a2ca
1004a2c7:	inc    esi
1004a2c8:	inc    DWORD PTR [edi]
1004a2ca:	inc    DWORD PTR [edi]
1004a2cc:	mov    edx,DWORD PTR [ebp+0xc]
1004a2cf:	inc    esi
1004a2d0:	jmp    0x1004a22b
1004a2d5:	test   edx,edx
1004a2d7:	je     0x1004a2e0
1004a2d9:	mov    BYTE PTR [edx],0x0
1004a2dc:	inc    edx
1004a2dd:	mov    DWORD PTR [ebp+0xc],edx
1004a2e0:	inc    DWORD PTR [edi]
1004a2e2:	mov    ecx,DWORD PTR [ebp+0x10]
1004a2e5:	jmp    0x1004a1f8
1004a2ea:	mov    eax,DWORD PTR [ebp+0x8]
1004a2ed:	test   eax,eax
1004a2ef:	pop    esi
1004a2f0:	pop    ebx
1004a2f1:	je     0x1004a2f6
1004a2f3:	and    DWORD PTR [eax],0x0
1004a2f6:	inc    DWORD PTR [ecx]
1004a2f8:	leave  
1004a2f9:	ret    
1004a2fa:	push   ebp
1004a2fb:	mov    ebp,esp
1004a2fd:	sub    esp,0xc
1004a300:	push   ebx
1004a301:	xor    ebx,ebx
1004a303:	cmp    DWORD PTR ds:0x10081594,ebx
1004a309:	push   esi
1004a30a:	push   edi
1004a30b:	jne    0x1004a312
1004a30d:	call   0x10047f1a
1004a312:	push   0x104
1004a317:	mov    esi,0x1007f2e0
1004a31c:	push   esi
1004a31d:	push   ebx
1004a31e:	mov    BYTE PTR ds:0x1007f3e4,bl
1004a324:	call   DWORD PTR ds:0x100651d8
1004a32a:	mov    eax,ds:0x1008159c
1004a32f:	cmp    eax,ebx
1004a331:	mov    DWORD PTR ds:0x1007edf8,esi
1004a337:	je     0x1004a340
1004a339:	cmp    BYTE PTR [eax],bl
1004a33b:	mov    DWORD PTR [ebp-0x4],eax
1004a33e:	jne    0x1004a343
1004a340:	mov    DWORD PTR [ebp-0x4],esi
1004a343:	mov    edx,DWORD PTR [ebp-0x4]
1004a346:	lea    eax,[ebp-0x8]
1004a349:	push   eax
1004a34a:	push   ebx
1004a34b:	push   ebx
1004a34c:	lea    edi,[ebp-0xc]
1004a34f:	call   0x1004a162
1004a354:	mov    eax,DWORD PTR [ebp-0x8]
1004a357:	add    esp,0xc
1004a35a:	cmp    eax,0x3fffffff
1004a35f:	jae    0x1004a3ab
1004a361:	mov    ecx,DWORD PTR [ebp-0xc]
1004a364:	cmp    ecx,0xffffffff
1004a367:	jae    0x1004a3ab
1004a369:	mov    edi,eax
1004a36b:	shl    edi,0x2
1004a36e:	lea    eax,[edi+ecx*1]
1004a371:	cmp    eax,ecx
1004a373:	jb     0x1004a3ab
1004a375:	push   eax
1004a376:	call   0x10046172
1004a37b:	mov    esi,eax
1004a37d:	cmp    esi,ebx
1004a37f:	pop    ecx
1004a380:	je     0x1004a3ab
1004a382:	mov    edx,DWORD PTR [ebp-0x4]
1004a385:	lea    eax,[ebp-0x8]
1004a388:	push   eax
1004a389:	add    edi,esi
1004a38b:	push   edi
1004a38c:	push   esi
1004a38d:	lea    edi,[ebp-0xc]
1004a390:	call   0x1004a162
1004a395:	mov    eax,DWORD PTR [ebp-0x8]
1004a398:	add    esp,0xc
1004a39b:	dec    eax
1004a39c:	mov    ds:0x1007eddc,eax
1004a3a1:	mov    DWORD PTR ds:0x1007ede0,esi
1004a3a7:	xor    eax,eax
1004a3a9:	jmp    0x1004a3ae
1004a3ab:	or     eax,0xffffffff
1004a3ae:	pop    edi
1004a3af:	pop    esi
1004a3b0:	pop    ebx
1004a3b1:	leave  
1004a3b2:	ret    
1004a3b3:	push   ecx
1004a3b4:	push   ecx
1004a3b5:	mov    eax,ds:0x1007f3e8
1004a3ba:	push   ebx
1004a3bb:	push   ebp
1004a3bc:	push   esi
1004a3bd:	push   edi
1004a3be:	mov    edi,DWORD PTR ds:0x10065208
1004a3c4:	xor    ebx,ebx
1004a3c6:	xor    esi,esi
1004a3c8:	cmp    eax,ebx
1004a3ca:	push   0x2
1004a3cc:	pop    ebp
1004a3cd:	jne    0x1004a3fc
1004a3cf:	call   edi
1004a3d1:	mov    esi,eax
1004a3d3:	cmp    esi,ebx
1004a3d5:	je     0x1004a3e3
1004a3d7:	mov    DWORD PTR ds:0x1007f3e8,0x1
1004a3e1:	jmp    0x1004a405
1004a3e3:	call   DWORD PTR ds:0x100650c4
1004a3e9:	cmp    eax,0x78
1004a3ec:	jne    0x1004a3f7
1004a3ee:	mov    eax,ebp
1004a3f0:	mov    ds:0x1007f3e8,eax
1004a3f5:	jmp    0x1004a3fc
1004a3f7:	mov    eax,ds:0x1007f3e8
1004a3fc:	cmp    eax,0x1
1004a3ff:	jne    0x1004a489
1004a405:	cmp    esi,ebx
1004a407:	jne    0x1004a418
1004a409:	call   edi
1004a40b:	mov    esi,eax
1004a40d:	cmp    esi,ebx
1004a40f:	jne    0x1004a418
1004a411:	xor    eax,eax
1004a413:	jmp    0x1004a4e1
1004a418:	cmp    WORD PTR [esi],bx
1004a41b:	mov    eax,esi
1004a41d:	je     0x1004a42d
1004a41f:	add    eax,ebp
1004a421:	cmp    WORD PTR [eax],bx
1004a424:	jne    0x1004a41f
1004a426:	add    eax,ebp
1004a428:	cmp    WORD PTR [eax],bx
1004a42b:	jne    0x1004a41f
1004a42d:	mov    edi,DWORD PTR ds:0x100650dc
1004a433:	push   ebx
1004a434:	push   ebx
1004a435:	push   ebx
1004a436:	sub    eax,esi
1004a438:	push   ebx
1004a439:	sar    eax,1
1004a43b:	inc    eax
1004a43c:	push   eax
1004a43d:	push   esi
1004a43e:	push   ebx
1004a43f:	push   ebx
1004a440:	mov    DWORD PTR [esp+0x34],eax
1004a444:	call   edi
1004a446:	mov    ebp,eax
1004a448:	cmp    ebp,ebx
1004a44a:	je     0x1004a47e
1004a44c:	push   ebp
1004a44d:	call   0x10046172
1004a452:	cmp    eax,ebx
1004a454:	pop    ecx
1004a455:	mov    DWORD PTR [esp+0x10],eax
1004a459:	je     0x1004a47e
1004a45b:	push   ebx
1004a45c:	push   ebx
1004a45d:	push   ebp
1004a45e:	push   eax
1004a45f:	push   DWORD PTR [esp+0x24]
1004a463:	push   esi
1004a464:	push   ebx
1004a465:	push   ebx
1004a466:	call   edi
1004a468:	test   eax,eax
1004a46a:	jne    0x1004a47a
1004a46c:	push   DWORD PTR [esp+0x10]
1004a470:	call   0x10042408
1004a475:	pop    ecx
1004a476:	mov    DWORD PTR [esp+0x10],ebx
1004a47a:	mov    ebx,DWORD PTR [esp+0x10]
1004a47e:	push   esi
1004a47f:	call   DWORD PTR ds:0x10065204
1004a485:	mov    eax,ebx
1004a487:	jmp    0x1004a4e1
1004a489:	cmp    eax,ebp
1004a48b:	je     0x1004a491
1004a48d:	cmp    eax,ebx
1004a48f:	jne    0x1004a411
1004a491:	call   DWORD PTR ds:0x10065200
1004a497:	mov    esi,eax
1004a499:	cmp    esi,ebx
1004a49b:	je     0x1004a411
1004a4a1:	cmp    BYTE PTR [esi],bl
1004a4a3:	je     0x1004a4af
1004a4a5:	inc    eax
1004a4a6:	cmp    BYTE PTR [eax],bl
1004a4a8:	jne    0x1004a4a5
1004a4aa:	inc    eax
1004a4ab:	cmp    BYTE PTR [eax],bl
1004a4ad:	jne    0x1004a4a5
1004a4af:	sub    eax,esi
1004a4b1:	inc    eax
1004a4b2:	mov    ebp,eax
1004a4b4:	push   ebp
1004a4b5:	call   0x10046172
1004a4ba:	mov    edi,eax
1004a4bc:	cmp    edi,ebx
1004a4be:	pop    ecx
1004a4bf:	jne    0x1004a4cd
1004a4c1:	push   esi
1004a4c2:	call   DWORD PTR ds:0x100651fc
1004a4c8:	jmp    0x1004a411
1004a4cd:	push   ebp
1004a4ce:	push   esi
1004a4cf:	push   edi
1004a4d0:	call   0x10043ed0
1004a4d5:	add    esp,0xc
1004a4d8:	push   esi
1004a4d9:	call   DWORD PTR ds:0x100651fc
1004a4df:	mov    eax,edi
1004a4e1:	pop    edi
1004a4e2:	pop    esi
1004a4e3:	pop    ebp
1004a4e4:	pop    ebx
1004a4e5:	pop    ecx
1004a4e6:	pop    ecx
1004a4e7:	ret    
1004a4e8:	push   esi
1004a4e9:	push   edi
1004a4ea:	mov    eax,0x100730d4
1004a4ef:	mov    edi,0x100730d4
1004a4f4:	cmp    eax,edi
1004a4f6:	mov    esi,eax
1004a4f8:	jae    0x1004a509
1004a4fa:	mov    eax,DWORD PTR [esi]
1004a4fc:	test   eax,eax
1004a4fe:	je     0x1004a502
1004a500:	call   eax
1004a502:	add    esi,0x4
1004a505:	cmp    esi,edi
1004a507:	jb     0x1004a4fa
1004a509:	pop    edi
1004a50a:	pop    esi
1004a50b:	ret    
1004a50c:	push   esi
1004a50d:	push   edi
1004a50e:	mov    eax,0x100730dc
1004a513:	mov    edi,0x100730dc
1004a518:	cmp    eax,edi
1004a51a:	mov    esi,eax
1004a51c:	jae    0x1004a52d
1004a51e:	mov    eax,DWORD PTR [esi]
1004a520:	test   eax,eax
1004a522:	je     0x1004a526
1004a524:	call   eax
1004a526:	add    esi,0x4
1004a529:	cmp    esi,edi
1004a52b:	jb     0x1004a51e
1004a52d:	pop    edi
1004a52e:	pop    esi
1004a52f:	ret    
1004a530:	ret    
1004a531:	push   ebp
1004a532:	mov    ebp,esp
1004a534:	push   ecx
1004a535:	push   ecx
1004a536:	push   esi
1004a537:	call   0x10045dc9
1004a53c:	mov    esi,eax
1004a53e:	test   esi,esi
1004a540:	jne    0x1004a550
1004a542:	push   DWORD PTR [ebp+0xc]
1004a545:	call   DWORD PTR ds:0x1006517c
1004a54b:	jmp    0x1004a69d
1004a550:	mov    edx,DWORD PTR [esi+0x5c]
1004a553:	mov    eax,ds:0x1007da7c
1004a558:	push   edi
1004a559:	mov    edi,DWORD PTR [ebp+0x8]
1004a55c:	mov    ecx,edx
1004a55e:	push   ebx
1004a55f:	cmp    DWORD PTR [ecx],edi
1004a561:	je     0x1004a571
1004a563:	mov    ebx,eax
1004a565:	imul   ebx,ebx,0xc
1004a568:	add    ecx,0xc
1004a56b:	add    ebx,edx
1004a56d:	cmp    ecx,ebx
1004a56f:	jb     0x1004a55f
1004a571:	imul   eax,eax,0xc
1004a574:	add    eax,edx
1004a576:	cmp    ecx,eax
1004a578:	jae    0x1004a582
1004a57a:	cmp    DWORD PTR [ecx],edi
1004a57c:	jne    0x1004a582
1004a57e:	mov    eax,ecx
1004a580:	jmp    0x1004a584
1004a582:	xor    eax,eax
1004a584:	test   eax,eax
1004a586:	je     0x1004a592
1004a588:	mov    ebx,DWORD PTR [eax+0x8]
1004a58b:	test   ebx,ebx
1004a58d:	mov    DWORD PTR [ebp-0x4],ebx
1004a590:	jne    0x1004a5a0
1004a592:	push   DWORD PTR [ebp+0xc]
1004a595:	call   DWORD PTR ds:0x1006517c
1004a59b:	jmp    0x1004a69b
1004a5a0:	cmp    ebx,0x5
1004a5a3:	jne    0x1004a5b1
1004a5a5:	and    DWORD PTR [eax+0x8],0x0
1004a5a9:	xor    eax,eax
1004a5ab:	inc    eax
1004a5ac:	jmp    0x1004a69b
1004a5b1:	cmp    ebx,0x1
1004a5b4:	je     0x1004a698
1004a5ba:	mov    ecx,DWORD PTR [esi+0x60]
1004a5bd:	mov    DWORD PTR [ebp-0x8],ecx
1004a5c0:	mov    ecx,DWORD PTR [ebp+0xc]
1004a5c3:	mov    DWORD PTR [esi+0x60],ecx
1004a5c6:	mov    ecx,DWORD PTR [eax+0x4]
1004a5c9:	cmp    ecx,0x8
1004a5cc:	jne    0x1004a68a
1004a5d2:	mov    ecx,DWORD PTR ds:0x1007da70
1004a5d8:	mov    edi,DWORD PTR ds:0x1007da74
1004a5de:	mov    edx,ecx
1004a5e0:	add    edi,ecx
1004a5e2:	cmp    edx,edi
1004a5e4:	jge    0x1004a60a
1004a5e6:	imul   ecx,ecx,0xc
1004a5e9:	mov    edi,DWORD PTR [esi+0x5c]
1004a5ec:	and    DWORD PTR [ecx+edi*1+0x8],0x0
1004a5f1:	mov    edi,DWORD PTR ds:0x1007da70
1004a5f7:	mov    ebx,DWORD PTR ds:0x1007da74
1004a5fd:	inc    edx
1004a5fe:	add    ebx,edi
1004a600:	add    ecx,0xc
1004a603:	cmp    edx,ebx
1004a605:	jl     0x1004a5e9
1004a607:	mov    ebx,DWORD PTR [ebp-0x4]
1004a60a:	mov    eax,DWORD PTR [eax]
1004a60c:	cmp    eax,0xc000008e
1004a611:	mov    edi,DWORD PTR [esi+0x64]
1004a614:	jne    0x1004a61f
1004a616:	mov    DWORD PTR [esi+0x64],0x83
1004a61d:	jmp    0x1004a67d
1004a61f:	cmp    eax,0xc0000090
1004a624:	jne    0x1004a62f
1004a626:	mov    DWORD PTR [esi+0x64],0x81
1004a62d:	jmp    0x1004a67d
1004a62f:	cmp    eax,0xc0000091
1004a634:	jne    0x1004a63f
1004a636:	mov    DWORD PTR [esi+0x64],0x84
1004a63d:	jmp    0x1004a67d
1004a63f:	cmp    eax,0xc0000093
1004a644:	jne    0x1004a64f
1004a646:	mov    DWORD PTR [esi+0x64],0x85
1004a64d:	jmp    0x1004a67d
1004a64f:	cmp    eax,0xc000008d
1004a654:	jne    0x1004a65f
1004a656:	mov    DWORD PTR [esi+0x64],0x82
1004a65d:	jmp    0x1004a67d
1004a65f:	cmp    eax,0xc000008f
1004a664:	jne    0x1004a66f
1004a666:	mov    DWORD PTR [esi+0x64],0x86
1004a66d:	jmp    0x1004a67d
1004a66f:	cmp    eax,0xc0000092
1004a674:	jne    0x1004a67d
1004a676:	mov    DWORD PTR [esi+0x64],0x8a
1004a67d:	push   DWORD PTR [esi+0x64]
1004a680:	push   0x8
1004a682:	call   ebx
1004a684:	pop    ecx
1004a685:	mov    DWORD PTR [esi+0x64],edi
1004a688:	jmp    0x1004a691
1004a68a:	and    DWORD PTR [eax+0x8],0x0
1004a68e:	push   ecx
1004a68f:	call   ebx
1004a691:	mov    eax,DWORD PTR [ebp-0x8]
1004a694:	pop    ecx
1004a695:	mov    DWORD PTR [esi+0x60],eax
1004a698:	or     eax,0xffffffff
1004a69b:	pop    ebx
1004a69c:	pop    edi
1004a69d:	pop    esi
1004a69e:	leave  
1004a69f:	ret    
1004a6a0:	mov    eax,0xe06d7363
1004a6a5:	cmp    DWORD PTR [esp+0x4],eax
1004a6a9:	jne    0x1004a6b8
1004a6ab:	push   DWORD PTR [esp+0x8]
1004a6af:	push   eax
1004a6b0:	call   0x1004a531
1004a6b5:	pop    ecx
1004a6b6:	pop    ecx
1004a6b7:	ret    
1004a6b8:	xor    eax,eax
1004a6ba:	ret    
1004a6bb:	push   ebp
1004a6bc:	mov    ebp,esp
1004a6be:	sub    esp,0x10
1004a6c1:	mov    eax,ds:0x1007d030
1004a6c6:	and    DWORD PTR [ebp-0x8],0x0
1004a6ca:	and    DWORD PTR [ebp-0x4],0x0
1004a6ce:	push   ebx
1004a6cf:	push   edi
1004a6d0:	mov    edi,0xbb40e64e
1004a6d5:	cmp    eax,edi
1004a6d7:	mov    ebx,0xffff0000
1004a6dc:	je     0x1004a6eb
1004a6de:	test   ebx,eax
1004a6e0:	je     0x1004a6eb
1004a6e2:	not    eax
1004a6e4:	mov    ds:0x1007d034,eax
1004a6e9:	jmp    0x1004a74b
1004a6eb:	push   esi
1004a6ec:	lea    eax,[ebp-0x8]
1004a6ef:	push   eax
1004a6f0:	call   DWORD PTR ds:0x10065214
1004a6f6:	mov    esi,DWORD PTR [ebp-0x4]
1004a6f9:	xor    esi,DWORD PTR [ebp-0x8]
1004a6fc:	call   DWORD PTR ds:0x10065210
1004a702:	xor    esi,eax
1004a704:	call   DWORD PTR ds:0x10065160
1004a70a:	xor    esi,eax
1004a70c:	call   DWORD PTR ds:0x10065118
1004a712:	xor    esi,eax
1004a714:	lea    eax,[ebp-0x10]
1004a717:	push   eax
1004a718:	call   DWORD PTR ds:0x1006520c
1004a71e:	mov    eax,DWORD PTR [ebp-0xc]
1004a721:	xor    eax,DWORD PTR [ebp-0x10]
1004a724:	xor    esi,eax
1004a726:	cmp    esi,edi
1004a728:	jne    0x1004a731
1004a72a:	mov    esi,0xbb40e64f
1004a72f:	jmp    0x1004a73c
1004a731:	test   ebx,esi
1004a733:	jne    0x1004a73c
1004a735:	mov    eax,esi
1004a737:	shl    eax,0x10
1004a73a:	or     esi,eax
1004a73c:	mov    DWORD PTR ds:0x1007d030,esi
1004a742:	not    esi
1004a744:	mov    DWORD PTR ds:0x1007d034,esi
1004a74a:	pop    esi
1004a74b:	pop    edi
1004a74c:	pop    ebx
1004a74d:	leave  
1004a74e:	ret    
1004a74f:	int3   
1004a750:	push   ebx
1004a751:	push   esi
1004a752:	push   edi
1004a753:	mov    edx,DWORD PTR [esp+0x10]
1004a757:	mov    eax,DWORD PTR [esp+0x14]
1004a75b:	mov    ecx,DWORD PTR [esp+0x18]
1004a75f:	push   ebp
1004a760:	push   edx
1004a761:	push   eax
1004a762:	push   ecx
1004a763:	push   ecx
1004a764:	push   0x1004a7e0
1004a769:	push   DWORD PTR fs:0x0
1004a770:	mov    eax,ds:0x1007d030
1004a775:	xor    eax,esp
1004a777:	mov    DWORD PTR [esp+0x8],eax
1004a77b:	mov    DWORD PTR fs:0x0,esp
1004a782:	mov    eax,DWORD PTR [esp+0x30]
1004a786:	mov    ebx,DWORD PTR [eax+0x8]
1004a789:	mov    ecx,DWORD PTR [esp+0x2c]
1004a78d:	xor    ebx,DWORD PTR [ecx]
1004a78f:	mov    esi,DWORD PTR [eax+0xc]
1004a792:	cmp    esi,0xfffffffe
1004a795:	je     0x1004a7d2
1004a797:	mov    edx,DWORD PTR [esp+0x34]
1004a79b:	cmp    edx,0xfffffffe
1004a79e:	je     0x1004a7a4
1004a7a0:	cmp    esi,edx
1004a7a2:	jbe    0x1004a7d2
1004a7a4:	lea    esi,[esi+esi*2]
1004a7a7:	lea    ebx,[ebx+esi*4+0x10]
1004a7ab:	mov    ecx,DWORD PTR [ebx]
1004a7ad:	mov    DWORD PTR [eax+0xc],ecx
1004a7b0:	cmp    DWORD PTR [ebx+0x4],0x0
1004a7b4:	jne    0x1004a782
1004a7b6:	push   0x101
1004a7bb:	mov    eax,DWORD PTR [ebx+0x8]
1004a7be:	call   0x1004dc9d
1004a7c3:	mov    ecx,0x1
1004a7c8:	mov    eax,DWORD PTR [ebx+0x8]
1004a7cb:	call   0x1004dcbc
1004a7d0:	jmp    0x1004a782
1004a7d2:	pop    DWORD PTR fs:0x0
1004a7d9:	add    esp,0x18
1004a7dc:	pop    edi
1004a7dd:	pop    esi
1004a7de:	pop    ebx
1004a7df:	ret    
1004a7e0:	mov    ecx,DWORD PTR [esp+0x4]
1004a7e4:	test   DWORD PTR [ecx+0x4],0x6
1004a7eb:	mov    eax,0x1
1004a7f0:	je     0x1004a825
1004a7f2:	mov    eax,DWORD PTR [esp+0x8]
1004a7f6:	mov    ecx,DWORD PTR [eax+0x8]
1004a7f9:	xor    ecx,eax
1004a7fb:	call   0x10041d97
1004a800:	push   ebp
1004a801:	mov    ebp,DWORD PTR [eax+0x18]
1004a804:	push   DWORD PTR [eax+0xc]
1004a807:	push   DWORD PTR [eax+0x10]
1004a80a:	push   DWORD PTR [eax+0x14]
1004a80d:	call   0x1004a750
1004a812:	add    esp,0xc
1004a815:	pop    ebp
1004a816:	mov    eax,DWORD PTR [esp+0x8]
1004a81a:	mov    edx,DWORD PTR [esp+0x10]
1004a81e:	mov    DWORD PTR [edx],eax
1004a820:	mov    eax,0x3
1004a825:	ret    
1004a826:	push   ebp
1004a827:	mov    ecx,DWORD PTR [esp+0x8]
1004a82b:	mov    ebp,DWORD PTR [ecx]
1004a82d:	push   DWORD PTR [ecx+0x1c]
1004a830:	push   DWORD PTR [ecx+0x18]
1004a833:	push   DWORD PTR [ecx+0x28]
1004a836:	call   0x1004a750
1004a83b:	add    esp,0xc
1004a83e:	pop    ebp
1004a83f:	ret    0x4
1004a842:	push   ebp
1004a843:	push   esi
1004a844:	push   edi
1004a845:	push   ebx
1004a846:	mov    ebp,edx
1004a848:	xor    eax,eax
1004a84a:	xor    ebx,ebx
1004a84c:	xor    edx,edx
1004a84e:	xor    esi,esi
1004a850:	xor    edi,edi
1004a852:	call   ecx
1004a854:	pop    ebx
1004a855:	pop    edi
1004a856:	pop    esi
1004a857:	pop    ebp
1004a858:	ret    
1004a859:	mov    ebp,edx
1004a85b:	mov    esi,ecx
1004a85d:	mov    eax,ecx
1004a85f:	push   0x1
1004a861:	call   0x1004dc9d
1004a866:	xor    eax,eax
1004a868:	xor    ebx,ebx
1004a86a:	xor    ecx,ecx
1004a86c:	xor    edx,edx
1004a86e:	xor    edi,edi
1004a870:	jmp    esi
1004a872:	push   ebp
1004a873:	mov    ebp,esp
1004a875:	push   ebx
1004a876:	push   esi
1004a877:	push   edi
1004a878:	push   0x0
1004a87a:	push   0x0
1004a87c:	push   0x1004a887
1004a881:	push   ecx
1004a882:	call   0x1005593e
1004a887:	pop    edi
1004a888:	pop    esi
1004a889:	pop    ebx
1004a88a:	pop    ebp
1004a88b:	ret    
1004a88c:	push   ebp
1004a88d:	mov    ebp,DWORD PTR [esp+0x8]
1004a891:	push   edx
1004a892:	push   ecx
1004a893:	push   DWORD PTR [esp+0x14]
1004a897:	call   0x1004a750
1004a89c:	add    esp,0xc
1004a89f:	pop    ebp
1004a8a0:	ret    0x8
1004a8a3:	int3   
1004a8a4:	int3   
1004a8a5:	int3   
1004a8a6:	int3   
1004a8a7:	int3   
1004a8a8:	int3   
1004a8a9:	int3   
1004a8aa:	int3   
1004a8ab:	int3   
1004a8ac:	int3   
1004a8ad:	int3   
1004a8ae:	int3   
1004a8af:	int3   
1004a8b0:	mov    ecx,DWORD PTR [esp+0x4]
1004a8b4:	cmp    WORD PTR [ecx],0x5a4d
1004a8b9:	je     0x1004a8be
1004a8bb:	xor    eax,eax
1004a8bd:	ret    
1004a8be:	mov    eax,DWORD PTR [ecx+0x3c]
1004a8c1:	add    eax,ecx
1004a8c3:	cmp    DWORD PTR [eax],0x4550
1004a8c9:	jne    0x1004a8bb
1004a8cb:	xor    ecx,ecx
1004a8cd:	cmp    WORD PTR [eax+0x18],0x10b
1004a8d3:	sete   cl
1004a8d6:	mov    eax,ecx
1004a8d8:	ret    
1004a8d9:	int3   
1004a8da:	int3   
1004a8db:	int3   
1004a8dc:	int3   
1004a8dd:	int3   
1004a8de:	int3   
1004a8df:	int3   
1004a8e0:	mov    eax,DWORD PTR [esp+0x4]
1004a8e4:	mov    ecx,DWORD PTR [eax+0x3c]
1004a8e7:	add    ecx,eax
1004a8e9:	movzx  eax,WORD PTR [ecx+0x14]
1004a8ed:	push   ebx
1004a8ee:	push   esi
1004a8ef:	movzx  esi,WORD PTR [ecx+0x6]
1004a8f3:	xor    edx,edx
1004a8f5:	test   esi,esi
1004a8f7:	push   edi
1004a8f8:	lea    eax,[eax+ecx*1+0x18]
1004a8fc:	jbe    0x1004a91c
1004a8fe:	mov    edi,DWORD PTR [esp+0x14]
1004a902:	mov    ecx,DWORD PTR [eax+0xc]
1004a905:	cmp    edi,ecx
1004a907:	jb     0x1004a912
1004a909:	mov    ebx,DWORD PTR [eax+0x8]
1004a90c:	add    ebx,ecx
1004a90e:	cmp    edi,ebx
1004a910:	jb     0x1004a91e
1004a912:	add    edx,0x1
1004a915:	add    eax,0x28
1004a918:	cmp    edx,esi
1004a91a:	jb     0x1004a902
1004a91c:	xor    eax,eax
1004a91e:	pop    edi
1004a91f:	pop    esi
1004a920:	pop    ebx
1004a921:	ret    
1004a922:	push   0x8
1004a924:	push   0x10073388
1004a929:	call   0x100459e4
1004a92e:	and    DWORD PTR [ebp-0x4],0x0
1004a932:	mov    edx,0x10000000
1004a937:	push   edx
1004a938:	call   0x1004a8b0
1004a93d:	pop    ecx
1004a93e:	test   eax,eax
1004a940:	je     0x1004a97f
1004a942:	mov    eax,DWORD PTR [ebp+0x8]
1004a945:	sub    eax,edx
1004a947:	push   eax
1004a948:	push   edx
1004a949:	call   0x1004a8e0
1004a94e:	pop    ecx
1004a94f:	pop    ecx
1004a950:	test   eax,eax
1004a952:	je     0x1004a97f
1004a954:	mov    eax,DWORD PTR [eax+0x24]
1004a957:	shr    eax,0x1f
1004a95a:	not    eax
1004a95c:	and    eax,0x1
1004a95f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004a966:	jmp    0x1004a988
1004a968:	mov    eax,DWORD PTR [ebp-0x14]
1004a96b:	mov    eax,DWORD PTR [eax]
1004a96d:	mov    eax,DWORD PTR [eax]
1004a96f:	xor    ecx,ecx
1004a971:	cmp    eax,0xc0000005
1004a976:	sete   cl
1004a979:	mov    eax,ecx
1004a97b:	ret    
1004a97c:	mov    esp,DWORD PTR [ebp-0x18]
1004a97f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004a986:	xor    eax,eax
1004a988:	call   0x10045a29
1004a98d:	ret    
1004a98e:	push   esi
1004a98f:	push   edi
1004a990:	xor    edi,edi
1004a992:	lea    esi,[edi+0x1007da80]
1004a998:	push   DWORD PTR [esi]
1004a99a:	call   0x10045bd6
1004a99f:	add    edi,0x4
1004a9a2:	cmp    edi,0x28
1004a9a5:	pop    ecx
1004a9a6:	mov    DWORD PTR [esi],eax
1004a9a8:	jb     0x1004a992
1004a9aa:	pop    edi
1004a9ab:	pop    esi
1004a9ac:	ret    
1004a9ad:	mov    eax,DWORD PTR [esp+0x4]
1004a9b1:	mov    ds:0x1007f3ec,eax
1004a9b6:	mov    ds:0x1007f3f0,eax
1004a9bb:	mov    ds:0x1007f3f4,eax
1004a9c0:	mov    ds:0x1007f3f8,eax
1004a9c5:	ret    
1004a9c6:	mov    eax,DWORD PTR [esp+0x4]
1004a9ca:	mov    ecx,DWORD PTR ds:0x1007da7c
1004a9d0:	push   esi
1004a9d1:	cmp    DWORD PTR [eax+0x4],edx
1004a9d4:	je     0x1004a9e6
1004a9d6:	mov    esi,ecx
1004a9d8:	imul   esi,esi,0xc
1004a9db:	add    esi,DWORD PTR [esp+0x8]
1004a9df:	add    eax,0xc
1004a9e2:	cmp    eax,esi
1004a9e4:	jb     0x1004a9d1
1004a9e6:	imul   ecx,ecx,0xc
1004a9e9:	add    ecx,DWORD PTR [esp+0x8]
1004a9ed:	pop    esi
1004a9ee:	cmp    eax,ecx
1004a9f0:	jae    0x1004a9f7
1004a9f2:	cmp    DWORD PTR [eax+0x4],edx
1004a9f5:	je     0x1004a9f9
1004a9f7:	xor    eax,eax
1004a9f9:	ret    
1004a9fa:	push   DWORD PTR ds:0x1007f3f4
1004aa00:	call   0x10045c42
1004aa05:	pop    ecx
1004aa06:	ret    
1004aa07:	push   0x20
1004aa09:	push   0x100733a8
1004aa0e:	call   0x100459e4
1004aa13:	xor    edi,edi
1004aa15:	mov    DWORD PTR [ebp-0x1c],edi
1004aa18:	mov    DWORD PTR [ebp-0x28],edi
1004aa1b:	mov    ebx,DWORD PTR [ebp+0x8]
1004aa1e:	cmp    ebx,0xb
1004aa21:	jg     0x1004aa6f
1004aa23:	je     0x1004aa3a
1004aa25:	mov    eax,ebx
1004aa27:	push   0x2
1004aa29:	pop    ecx
1004aa2a:	sub    eax,ecx
1004aa2c:	je     0x1004aa50
1004aa2e:	sub    eax,ecx
1004aa30:	je     0x1004aa3a
1004aa32:	sub    eax,ecx
1004aa34:	je     0x1004aa9a
1004aa36:	sub    eax,ecx
1004aa38:	jne    0x1004aa7e
1004aa3a:	call   0x10045dc9
1004aa3f:	mov    edi,eax
1004aa41:	mov    DWORD PTR [ebp-0x28],edi
1004aa44:	test   edi,edi
1004aa46:	jne    0x1004aa5c
1004aa48:	or     eax,0xffffffff
1004aa4b:	jmp    0x1004abb1
1004aa50:	mov    esi,0x1007f3ec
1004aa55:	mov    eax,ds:0x1007f3ec
1004aa5a:	jmp    0x1004aabc
1004aa5c:	push   DWORD PTR [edi+0x5c]
1004aa5f:	mov    edx,ebx
1004aa61:	call   0x1004a9c6
1004aa66:	mov    esi,eax
1004aa68:	add    esi,0x8
1004aa6b:	mov    eax,DWORD PTR [esi]
1004aa6d:	jmp    0x1004aac9
1004aa6f:	mov    eax,ebx
1004aa71:	sub    eax,0xf
1004aa74:	je     0x1004aab2
1004aa76:	sub    eax,0x6
1004aa79:	je     0x1004aaa6
1004aa7b:	dec    eax
1004aa7c:	je     0x1004aa9a
1004aa7e:	call   0x100458a5
1004aa83:	mov    DWORD PTR [eax],0x16
1004aa89:	xor    eax,eax
1004aa8b:	push   eax
1004aa8c:	push   eax
1004aa8d:	push   eax
1004aa8e:	push   eax
1004aa8f:	push   eax
1004aa90:	call   0x1004228c
1004aa95:	add    esp,0x14
1004aa98:	jmp    0x1004aa48
1004aa9a:	mov    esi,0x1007f3f4
1004aa9f:	mov    eax,ds:0x1007f3f4
1004aaa4:	jmp    0x1004aabc
1004aaa6:	mov    esi,0x1007f3f0
1004aaab:	mov    eax,ds:0x1007f3f0
1004aab0:	jmp    0x1004aabc
1004aab2:	mov    esi,0x1007f3f8
1004aab7:	mov    eax,ds:0x1007f3f8
1004aabc:	mov    DWORD PTR [ebp-0x1c],0x1
1004aac3:	push   eax
1004aac4:	call   0x10045c42
1004aac9:	mov    DWORD PTR [ebp-0x20],eax
1004aacc:	pop    ecx
1004aacd:	xor    eax,eax
1004aacf:	cmp    DWORD PTR [ebp-0x20],0x1
1004aad3:	je     0x1004abb1
1004aad9:	cmp    DWORD PTR [ebp-0x20],eax
1004aadc:	jne    0x1004aae5
1004aade:	push   0x3
1004aae0:	call   0x10046564
1004aae5:	cmp    DWORD PTR [ebp-0x1c],eax
1004aae8:	je     0x1004aaf1
1004aaea:	push   eax
1004aaeb:	call   0x100469ed
1004aaf0:	pop    ecx
1004aaf1:	xor    eax,eax
1004aaf3:	mov    DWORD PTR [ebp-0x4],eax
1004aaf6:	cmp    ebx,0x8
1004aaf9:	je     0x1004ab05
1004aafb:	cmp    ebx,0xb
1004aafe:	je     0x1004ab05
1004ab00:	cmp    ebx,0x4
1004ab03:	jne    0x1004ab20
1004ab05:	mov    ecx,DWORD PTR [edi+0x60]
1004ab08:	mov    DWORD PTR [ebp-0x2c],ecx
1004ab0b:	mov    DWORD PTR [edi+0x60],eax
1004ab0e:	cmp    ebx,0x8
1004ab11:	jne    0x1004ab53
1004ab13:	mov    ecx,DWORD PTR [edi+0x64]
1004ab16:	mov    DWORD PTR [ebp-0x30],ecx
1004ab19:	mov    DWORD PTR [edi+0x64],0x8c
1004ab20:	cmp    ebx,0x8
1004ab23:	jne    0x1004ab53
1004ab25:	mov    ecx,DWORD PTR ds:0x1007da70
1004ab2b:	mov    DWORD PTR [ebp-0x24],ecx
1004ab2e:	mov    ecx,DWORD PTR ds:0x1007da74
1004ab34:	mov    edx,DWORD PTR ds:0x1007da70
1004ab3a:	add    ecx,edx
1004ab3c:	cmp    DWORD PTR [ebp-0x24],ecx
1004ab3f:	jge    0x1004ab5a
1004ab41:	mov    ecx,DWORD PTR [ebp-0x24]
1004ab44:	imul   ecx,ecx,0xc
1004ab47:	mov    edx,DWORD PTR [edi+0x5c]
1004ab4a:	mov    DWORD PTR [ecx+edx*1+0x8],eax
1004ab4e:	inc    DWORD PTR [ebp-0x24]
1004ab51:	jmp    0x1004ab2e
1004ab53:	call   0x10045c39
1004ab58:	mov    DWORD PTR [esi],eax
1004ab5a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004ab61:	call   0x1004ab7b
1004ab66:	cmp    ebx,0x8
1004ab69:	jne    0x1004ab8a
1004ab6b:	push   DWORD PTR [edi+0x64]
1004ab6e:	push   ebx
1004ab6f:	call   DWORD PTR [ebp-0x20]
1004ab72:	pop    ecx
1004ab73:	jmp    0x1004ab8e
1004ab75:	mov    ebx,DWORD PTR [ebp+0x8]
1004ab78:	mov    edi,DWORD PTR [ebp-0x28]
1004ab7b:	cmp    DWORD PTR [ebp-0x1c],0x0
1004ab7f:	je     0x1004ab89
1004ab81:	push   0x0
1004ab83:	call   0x10046915
1004ab88:	pop    ecx
1004ab89:	ret    
1004ab8a:	push   ebx
1004ab8b:	call   DWORD PTR [ebp-0x20]
1004ab8e:	pop    ecx
1004ab8f:	cmp    ebx,0x8
1004ab92:	je     0x1004ab9e
1004ab94:	cmp    ebx,0xb
1004ab97:	je     0x1004ab9e
1004ab99:	cmp    ebx,0x4
1004ab9c:	jne    0x1004abaf
1004ab9e:	mov    eax,DWORD PTR [ebp-0x2c]
1004aba1:	mov    DWORD PTR [edi+0x60],eax
1004aba4:	cmp    ebx,0x8
1004aba7:	jne    0x1004abaf
1004aba9:	mov    eax,DWORD PTR [ebp-0x30]
1004abac:	mov    DWORD PTR [edi+0x64],eax
1004abaf:	xor    eax,eax
1004abb1:	call   0x10045a29
1004abb6:	ret    
1004abb7:	mov    eax,DWORD PTR [esp+0x4]
1004abbb:	mov    ds:0x1007f400,eax
1004abc0:	ret    
1004abc1:	mov    eax,DWORD PTR [esp+0x4]
1004abc5:	mov    ds:0x1007f404,eax
1004abca:	ret    
1004abcb:	push   DWORD PTR [esp+0x4]
1004abcf:	call   DWORD PTR ds:0x1006511c
1004abd5:	xor    eax,eax
1004abd7:	inc    eax
1004abd8:	ret    0x8
1004abdb:	push   0x14
1004abdd:	push   0x100733c8
1004abe2:	call   0x100459e4
1004abe7:	xor    edi,edi
1004abe9:	mov    DWORD PTR [ebp-0x1c],edi
1004abec:	push   DWORD PTR ds:0x1007f404
1004abf2:	call   0x10045c42
1004abf7:	pop    ecx
1004abf8:	mov    esi,eax
1004abfa:	cmp    esi,edi
1004abfc:	jne    0x1004ac51
1004abfe:	lea    eax,[ebp-0x1c]
1004ac01:	push   eax
1004ac02:	call   0x10046391
1004ac07:	pop    ecx
1004ac08:	cmp    eax,edi
1004ac0a:	je     0x1004ac19
1004ac0c:	push   edi
1004ac0d:	push   edi
1004ac0e:	push   edi
1004ac0f:	push   edi
1004ac10:	push   edi
1004ac11:	call   0x10042190
1004ac16:	add    esp,0x14
1004ac19:	cmp    DWORD PTR [ebp-0x1c],0x1
1004ac1d:	je     0x1004ac40
1004ac1f:	push   0x1006e494
1004ac24:	call   DWORD PTR ds:0x10065198
1004ac2a:	cmp    eax,edi
1004ac2c:	je     0x1004ac40
1004ac2e:	push   0x10065cbc
1004ac33:	push   eax
1004ac34:	call   DWORD PTR ds:0x1006512c
1004ac3a:	mov    esi,eax
1004ac3c:	cmp    esi,edi
1004ac3e:	jne    0x1004ac45
1004ac40:	mov    esi,0x1004abcb
1004ac45:	push   esi
1004ac46:	call   0x10045bd6
1004ac4b:	pop    ecx
1004ac4c:	mov    ds:0x1007f404,eax
1004ac51:	mov    DWORD PTR [ebp-0x4],edi
1004ac54:	push   DWORD PTR [ebp+0xc]
1004ac57:	push   DWORD PTR [ebp+0x8]
1004ac5a:	call   esi
1004ac5c:	mov    DWORD PTR [ebp-0x20],eax
1004ac5f:	jmp    0x1004ac90
1004ac61:	mov    eax,DWORD PTR [ebp-0x14]
1004ac64:	mov    eax,DWORD PTR [eax]
1004ac66:	mov    eax,DWORD PTR [eax]
1004ac68:	mov    DWORD PTR [ebp-0x24],eax
1004ac6b:	xor    ecx,ecx
1004ac6d:	cmp    eax,0xc0000017
1004ac72:	sete   cl
1004ac75:	mov    eax,ecx
1004ac77:	ret    
1004ac78:	mov    esp,DWORD PTR [ebp-0x18]
1004ac7b:	cmp    DWORD PTR [ebp-0x24],0xc0000017
1004ac82:	jne    0x1004ac8c
1004ac84:	push   0x8
1004ac86:	call   DWORD PTR ds:0x1006515c
1004ac8c:	and    DWORD PTR [ebp-0x20],0x0
1004ac90:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004ac97:	mov    eax,DWORD PTR [ebp-0x20]
1004ac9a:	call   0x10045a29
1004ac9f:	ret    
1004aca0:	push   edi
1004aca1:	mov    edi,DWORD PTR [esp+0x8]
1004aca5:	mov    eax,DWORD PTR [edi]
1004aca7:	cmp    DWORD PTR [eax],0xe06d7363
1004acad:	jne    0x1004acd9
1004acaf:	cmp    DWORD PTR [eax+0x10],0x3
1004acb3:	jne    0x1004acd9
1004acb5:	mov    eax,DWORD PTR [eax+0x14]
1004acb8:	cmp    eax,0x19930520
1004acbd:	je     0x1004acd4
1004acbf:	cmp    eax,0x19930521
1004acc4:	je     0x1004acd4
1004acc6:	cmp    eax,0x19930522
1004accb:	je     0x1004acd4
1004accd:	cmp    eax,0x1994000
1004acd2:	jne    0x1004acd9
1004acd4:	call   0x1004594e
1004acd9:	cmp    BYTE PTR ds:0x1007f448,0x0
1004ace0:	push   esi
1004ace1:	je     0x1004ad05
1004ace3:	push   DWORD PTR ds:0x1007f444
1004ace9:	call   0x10045c42
1004acee:	mov    esi,eax
1004acf0:	test   esi,esi
1004acf2:	pop    ecx
1004acf3:	je     0x1004ad05
1004acf5:	push   esi
1004acf6:	call   0x1004dcc8
1004acfb:	test   eax,eax
1004acfd:	pop    ecx
1004acfe:	je     0x1004ad05
1004ad00:	push   edi
1004ad01:	call   esi
1004ad03:	jmp    0x1004ad07
1004ad05:	xor    eax,eax
1004ad07:	pop    esi
1004ad08:	pop    edi
1004ad09:	ret    0x4
1004ad0c:	push   0x1004aca0
1004ad11:	call   DWORD PTR ds:0x10065180
1004ad17:	push   eax
1004ad18:	call   0x10045bd6
1004ad1d:	mov    ds:0x1007f444,eax
1004ad22:	pop    ecx
1004ad23:	mov    BYTE PTR ds:0x1007f448,0x1
1004ad2a:	xor    eax,eax
1004ad2c:	ret    
1004ad2d:	cmp    BYTE PTR ds:0x1007f448,0x0
1004ad34:	je     0x1004ad50
1004ad36:	push   DWORD PTR ds:0x1007f444
1004ad3c:	call   0x10045c42
1004ad41:	pop    ecx
1004ad42:	push   eax
1004ad43:	call   DWORD PTR ds:0x10065180
1004ad49:	mov    BYTE PTR ds:0x1007f448,0x0
1004ad50:	ret    
1004ad51:	push   ebp
1004ad52:	mov    ebp,esp
1004ad54:	sub    esp,0x20
1004ad57:	push   ebx
1004ad58:	push   esi
1004ad59:	push   edi
1004ad5a:	call   0x10045c39
1004ad5f:	xor    ebx,ebx
1004ad61:	cmp    DWORD PTR ds:0x1007f44c,ebx
1004ad67:	mov    DWORD PTR [ebp-0x10],eax
1004ad6a:	mov    DWORD PTR [ebp-0x4],ebx
1004ad6d:	mov    DWORD PTR [ebp-0x8],ebx
1004ad70:	mov    DWORD PTR [ebp-0xc],ebx
1004ad73:	jne    0x1004ae26
1004ad79:	push   0x10066454
1004ad7e:	call   DWORD PTR ds:0x10065220
1004ad84:	mov    edi,eax
1004ad86:	cmp    edi,ebx
1004ad88:	jne    0x1004ad91
1004ad8a:	xor    eax,eax
1004ad8c:	jmp    0x1004aeea
1004ad91:	mov    esi,DWORD PTR ds:0x1006512c
1004ad97:	push   0x10066448
1004ad9c:	push   edi
1004ad9d:	call   esi
1004ad9f:	cmp    eax,ebx
1004ada1:	je     0x1004ad8a
1004ada3:	push   eax
1004ada4:	call   0x10045bd6
1004ada9:	mov    DWORD PTR [esp],0x10066438
1004adb0:	push   edi
1004adb1:	mov    ds:0x1007f44c,eax
1004adb6:	call   esi
1004adb8:	push   eax
1004adb9:	call   0x10045bd6
1004adbe:	mov    DWORD PTR [esp],0x10066424
1004adc5:	push   edi
1004adc6:	mov    ds:0x1007f450,eax
1004adcb:	call   esi
1004adcd:	push   eax
1004adce:	call   0x10045bd6
1004add3:	mov    ds:0x1007f454,eax
1004add8:	lea    eax,[ebp-0x8]
1004addb:	push   eax
1004addc:	call   0x10046391
1004ade1:	test   eax,eax
1004ade3:	pop    ecx
1004ade4:	pop    ecx
1004ade5:	je     0x1004adf4
1004ade7:	push   ebx
1004ade8:	push   ebx
1004ade9:	push   ebx
1004adea:	push   ebx
1004adeb:	push   ebx
1004adec:	call   0x10042190
1004adf1:	add    esp,0x14
1004adf4:	cmp    DWORD PTR [ebp-0x8],0x2
1004adf8:	jne    0x1004ae26
1004adfa:	push   0x10066408
1004adff:	push   edi
1004ae00:	call   esi
1004ae02:	push   eax
1004ae03:	call   0x10045bd6
1004ae08:	cmp    eax,ebx
1004ae0a:	pop    ecx
1004ae0b:	mov    ds:0x1007f45c,eax
1004ae10:	je     0x1004ae26
1004ae12:	push   0x100663f0
1004ae17:	push   edi
1004ae18:	call   esi
1004ae1a:	push   eax
1004ae1b:	call   0x10045bd6
1004ae20:	pop    ecx
1004ae21:	mov    ds:0x1007f458,eax
1004ae26:	mov    eax,ds:0x1007f458
1004ae2b:	mov    esi,DWORD PTR [ebp-0x10]
1004ae2e:	cmp    eax,esi
1004ae30:	je     0x1004ae9f
1004ae32:	cmp    DWORD PTR ds:0x1007f45c,esi
1004ae38:	je     0x1004ae9f
1004ae3a:	push   eax
1004ae3b:	call   0x10045c42
1004ae40:	pop    ecx
1004ae41:	call   eax
1004ae43:	cmp    eax,ebx
1004ae45:	je     0x1004ae6c
1004ae47:	lea    ecx,[ebp-0x14]
1004ae4a:	push   ecx
1004ae4b:	push   0xc
1004ae4d:	lea    ecx,[ebp-0x20]
1004ae50:	push   ecx
1004ae51:	push   0x1
1004ae53:	push   eax
1004ae54:	push   DWORD PTR ds:0x1007f45c
1004ae5a:	call   0x10045c42
1004ae5f:	pop    ecx
1004ae60:	call   eax
1004ae62:	test   eax,eax
1004ae64:	je     0x1004ae6c
1004ae66:	test   BYTE PTR [ebp-0x18],0x1
1004ae6a:	jne    0x1004ae9f
1004ae6c:	lea    eax,[ebp-0xc]
1004ae6f:	push   eax
1004ae70:	call   0x100463c8
1004ae75:	test   eax,eax
1004ae77:	pop    ecx
1004ae78:	je     0x1004ae87
1004ae7a:	push   ebx
1004ae7b:	push   ebx
1004ae7c:	push   ebx
1004ae7d:	push   ebx
1004ae7e:	push   ebx
1004ae7f:	call   0x10042190
1004ae84:	add    esp,0x14
1004ae87:	cmp    DWORD PTR [ebp-0xc],0x4
1004ae8b:	jb     0x1004ae96
1004ae8d:	or     DWORD PTR [ebp+0x10],0x200000
1004ae94:	jmp    0x1004aed0
1004ae96:	or     DWORD PTR [ebp+0x10],0x40000
1004ae9d:	jmp    0x1004aed0
1004ae9f:	mov    eax,ds:0x1007f450
1004aea4:	cmp    eax,esi
1004aea6:	je     0x1004aed0
1004aea8:	push   eax
1004aea9:	call   0x10045c42
1004aeae:	pop    ecx
1004aeaf:	call   eax
1004aeb1:	cmp    eax,ebx
1004aeb3:	mov    DWORD PTR [ebp-0x4],eax
1004aeb6:	je     0x1004aed0
1004aeb8:	mov    eax,ds:0x1007f454
1004aebd:	cmp    eax,esi
1004aebf:	je     0x1004aed0
1004aec1:	push   DWORD PTR [ebp-0x4]
1004aec4:	push   eax
1004aec5:	call   0x10045c42
1004aeca:	pop    ecx
1004aecb:	call   eax
1004aecd:	mov    DWORD PTR [ebp-0x4],eax
1004aed0:	push   DWORD PTR [ebp+0x10]
1004aed3:	push   DWORD PTR [ebp+0xc]
1004aed6:	push   DWORD PTR [ebp+0x8]
1004aed9:	push   DWORD PTR [ebp-0x4]
1004aedc:	push   DWORD PTR ds:0x1007f44c
1004aee2:	call   0x10045c42
1004aee7:	pop    ecx
1004aee8:	call   eax
1004aeea:	pop    edi
1004aeeb:	pop    esi
1004aeec:	pop    ebx
1004aeed:	leave  
1004aeee:	ret    
1004aeef:	mov    eax,DWORD PTR [esp+0x4]
1004aef3:	push   ebx
1004aef4:	xor    ebx,ebx
1004aef6:	cmp    eax,ebx
1004aef8:	push   esi
1004aef9:	push   edi
1004aefa:	je     0x1004af04
1004aefc:	mov    edi,DWORD PTR [esp+0x14]
1004af00:	cmp    edi,ebx
1004af02:	ja     0x1004af1f
1004af04:	call   0x100458a5
1004af09:	push   0x16
1004af0b:	pop    esi
1004af0c:	mov    DWORD PTR [eax],esi
1004af0e:	push   ebx
1004af0f:	push   ebx
1004af10:	push   ebx
1004af11:	push   ebx
1004af12:	push   ebx
1004af13:	call   0x1004228c
1004af18:	add    esp,0x14
1004af1b:	mov    eax,esi
1004af1d:	jmp    0x1004af5c
1004af1f:	mov    esi,DWORD PTR [esp+0x18]
1004af23:	cmp    esi,ebx
1004af25:	jne    0x1004af2b
1004af27:	mov    BYTE PTR [eax],bl
1004af29:	jmp    0x1004af04
1004af2b:	mov    edx,eax
1004af2d:	cmp    BYTE PTR [edx],bl
1004af2f:	je     0x1004af35
1004af31:	inc    edx
1004af32:	dec    edi
1004af33:	jne    0x1004af2d
1004af35:	cmp    edi,ebx
1004af37:	je     0x1004af27
1004af39:	mov    cl,BYTE PTR [esi]
1004af3b:	mov    BYTE PTR [edx],cl
1004af3d:	inc    edx
1004af3e:	inc    esi
1004af3f:	cmp    cl,bl
1004af41:	je     0x1004af46
1004af43:	dec    edi
1004af44:	jne    0x1004af39
1004af46:	cmp    edi,ebx
1004af48:	jne    0x1004af5a
1004af4a:	mov    BYTE PTR [eax],bl
1004af4c:	call   0x100458a5
1004af51:	push   0x22
1004af53:	pop    ecx
1004af54:	mov    DWORD PTR [eax],ecx
1004af56:	mov    esi,ecx
1004af58:	jmp    0x1004af0e
1004af5a:	xor    eax,eax
1004af5c:	pop    edi
1004af5d:	pop    esi
1004af5e:	pop    ebx
1004af5f:	ret    
1004af60:	push   ebp
1004af61:	mov    ebp,esp
1004af63:	push   ebx
1004af64:	push   esi
1004af65:	mov    esi,DWORD PTR [ebp+0x8]
1004af68:	xor    ebx,ebx
1004af6a:	cmp    DWORD PTR [ebp+0x14],ebx
1004af6d:	push   edi
1004af6e:	jne    0x1004af80
1004af70:	cmp    esi,ebx
1004af72:	jne    0x1004af84
1004af74:	cmp    DWORD PTR [ebp+0xc],ebx
1004af77:	jne    0x1004af8b
1004af79:	xor    eax,eax
1004af7b:	pop    edi
1004af7c:	pop    esi
1004af7d:	pop    ebx
1004af7e:	pop    ebp
1004af7f:	ret    
1004af80:	cmp    esi,ebx
1004af82:	je     0x1004af8b
1004af84:	mov    edi,DWORD PTR [ebp+0xc]
1004af87:	cmp    edi,ebx
1004af89:	ja     0x1004afa6
1004af8b:	call   0x100458a5
1004af90:	push   0x16
1004af92:	pop    esi
1004af93:	mov    DWORD PTR [eax],esi
1004af95:	push   ebx
1004af96:	push   ebx
1004af97:	push   ebx
1004af98:	push   ebx
1004af99:	push   ebx
1004af9a:	call   0x1004228c
1004af9f:	add    esp,0x14
1004afa2:	mov    eax,esi
1004afa4:	jmp    0x1004af7b
1004afa6:	cmp    DWORD PTR [ebp+0x14],ebx
1004afa9:	jne    0x1004afaf
1004afab:	mov    BYTE PTR [esi],bl
1004afad:	jmp    0x1004af79
1004afaf:	mov    edx,DWORD PTR [ebp+0x10]
1004afb2:	cmp    edx,ebx
1004afb4:	jne    0x1004afba
1004afb6:	mov    BYTE PTR [esi],bl
1004afb8:	jmp    0x1004af8b
1004afba:	cmp    DWORD PTR [ebp+0x14],0xffffffff
1004afbe:	mov    eax,esi
1004afc0:	jne    0x1004afd1
1004afc2:	mov    cl,BYTE PTR [edx]
1004afc4:	mov    BYTE PTR [eax],cl
1004afc6:	inc    eax
1004afc7:	inc    edx
1004afc8:	cmp    cl,bl
1004afca:	je     0x1004afea
1004afcc:	dec    edi
1004afcd:	jne    0x1004afc2
1004afcf:	jmp    0x1004afea
1004afd1:	mov    cl,BYTE PTR [edx]
1004afd3:	mov    BYTE PTR [eax],cl
1004afd5:	inc    eax
1004afd6:	inc    edx
1004afd7:	cmp    cl,bl
1004afd9:	je     0x1004afe3
1004afdb:	dec    edi
1004afdc:	je     0x1004afe3
1004afde:	dec    DWORD PTR [ebp+0x14]
1004afe1:	jne    0x1004afd1
1004afe3:	cmp    DWORD PTR [ebp+0x14],ebx
1004afe6:	jne    0x1004afea
1004afe8:	mov    BYTE PTR [eax],bl
1004afea:	cmp    edi,ebx
1004afec:	jne    0x1004af79
1004afee:	cmp    DWORD PTR [ebp+0x14],0xffffffff
1004aff2:	jne    0x1004b003
1004aff4:	mov    eax,DWORD PTR [ebp+0xc]
1004aff7:	push   0x50
1004aff9:	mov    BYTE PTR [esi+eax*1-0x1],bl
1004affd:	pop    eax
1004affe:	jmp    0x1004af7b
1004b003:	mov    BYTE PTR [esi],bl
1004b005:	call   0x100458a5
1004b00a:	push   0x22
1004b00c:	pop    ecx
1004b00d:	mov    DWORD PTR [eax],ecx
1004b00f:	mov    esi,ecx
1004b011:	jmp    0x1004af95
1004b013:	mov    ecx,DWORD PTR [esp+0x4]
1004b017:	push   esi
1004b018:	xor    esi,esi
1004b01a:	cmp    ecx,esi
1004b01c:	jl     0x1004b03c
1004b01e:	cmp    ecx,0x2
1004b021:	jle    0x1004b02f
1004b023:	cmp    ecx,0x3
1004b026:	jne    0x1004b03c
1004b028:	mov    eax,ds:0x1007ea80
1004b02d:	pop    esi
1004b02e:	ret    
1004b02f:	mov    eax,ds:0x1007ea80
1004b034:	mov    DWORD PTR ds:0x1007ea80,ecx
1004b03a:	pop    esi
1004b03b:	ret    
1004b03c:	call   0x100458a5
1004b041:	push   esi
1004b042:	push   esi
1004b043:	push   esi
1004b044:	push   esi
1004b045:	push   esi
1004b046:	mov    DWORD PTR [eax],0x16
1004b04c:	call   0x1004228c
1004b051:	add    esp,0x14
1004b054:	or     eax,0xffffffff
1004b057:	pop    esi
1004b058:	ret    
1004b059:	push   0xc
1004b05b:	push   0x100733e8
1004b060:	call   0x100459e4
1004b065:	and    DWORD PTR [ebp-0x4],0x0
1004b069:	movapd xmm0,xmm1
1004b06d:	mov    DWORD PTR [ebp-0x1c],0x1
1004b074:	jmp    0x1004b099
1004b076:	mov    eax,DWORD PTR [ebp-0x14]
1004b079:	mov    eax,DWORD PTR [eax]
1004b07b:	mov    eax,DWORD PTR [eax]
1004b07d:	cmp    eax,0xc0000005
1004b082:	je     0x1004b08e
1004b084:	cmp    eax,0xc000001d
1004b089:	je     0x1004b08e
1004b08b:	xor    eax,eax
1004b08d:	ret    
1004b08e:	xor    eax,eax
1004b090:	inc    eax
1004b091:	ret    
1004b092:	mov    esp,DWORD PTR [ebp-0x18]
1004b095:	and    DWORD PTR [ebp-0x1c],0x0
1004b099:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004b0a0:	mov    eax,DWORD PTR [ebp-0x1c]
1004b0a3:	call   0x10045a29
1004b0a8:	ret    
1004b0a9:	push   ebp
1004b0aa:	mov    ebp,esp
1004b0ac:	sub    esp,0x18
1004b0af:	xor    eax,eax
1004b0b1:	push   ebx
1004b0b2:	mov    DWORD PTR [ebp-0x4],eax
1004b0b5:	mov    DWORD PTR [ebp-0xc],eax
1004b0b8:	mov    DWORD PTR [ebp-0x8],eax
1004b0bb:	push   ebx
1004b0bc:	pushf  
1004b0bd:	pop    eax
1004b0be:	mov    ecx,eax
1004b0c0:	xor    eax,0x200000
1004b0c5:	push   eax
1004b0c6:	popf   
1004b0c7:	pushf  
1004b0c8:	pop    edx
1004b0c9:	sub    edx,ecx
1004b0cb:	je     0x1004b0ec
1004b0cd:	push   ecx
1004b0ce:	popf   
1004b0cf:	xor    eax,eax
1004b0d1:	cpuid  
1004b0d3:	mov    DWORD PTR [ebp-0xc],eax
1004b0d6:	mov    DWORD PTR [ebp-0x18],ebx
1004b0d9:	mov    DWORD PTR [ebp-0x14],edx
1004b0dc:	mov    DWORD PTR [ebp-0x10],ecx
1004b0df:	mov    eax,0x1
1004b0e4:	cpuid  
1004b0e6:	mov    DWORD PTR [ebp-0x4],edx
1004b0e9:	mov    DWORD PTR [ebp-0x8],eax
1004b0ec:	pop    ebx
1004b0ed:	test   DWORD PTR [ebp-0x4],0x4000000
1004b0f4:	je     0x1004b104
1004b0f6:	call   0x1004b059
1004b0fb:	test   eax,eax
1004b0fd:	je     0x1004b104
1004b0ff:	xor    eax,eax
1004b101:	inc    eax
1004b102:	jmp    0x1004b106
1004b104:	xor    eax,eax
1004b106:	pop    ebx
1004b107:	leave  
1004b108:	ret    
1004b109:	call   0x1004b0a9
1004b10e:	mov    ds:0x10081564,eax
1004b113:	xor    eax,eax
1004b115:	ret    
1004b116:	push   ebp
1004b117:	mov    ebp,esp
1004b119:	push   ecx
1004b11a:	push   ecx
1004b11b:	mov    eax,ds:0x1007d030
1004b120:	xor    eax,ebp
1004b122:	mov    DWORD PTR [ebp-0x4],eax
1004b125:	mov    eax,ds:0x1007f460
1004b12a:	push   ebx
1004b12b:	push   esi
1004b12c:	xor    ebx,ebx
1004b12e:	cmp    eax,ebx
1004b130:	push   edi
1004b131:	mov    edi,ecx
1004b133:	jne    0x1004b16f
1004b135:	lea    eax,[ebp-0x8]
1004b138:	push   eax
1004b139:	xor    esi,esi
1004b13b:	inc    esi
1004b13c:	push   esi
1004b13d:	push   0x10065cb8
1004b142:	push   esi
1004b143:	call   DWORD PTR ds:0x10065228
1004b149:	test   eax,eax
1004b14b:	je     0x1004b155
1004b14d:	mov    DWORD PTR ds:0x1007f460,esi
1004b153:	jmp    0x1004b189
1004b155:	call   DWORD PTR ds:0x100650c4
1004b15b:	cmp    eax,0x78
1004b15e:	jne    0x1004b16a
1004b160:	push   0x2
1004b162:	pop    eax
1004b163:	mov    ds:0x1007f460,eax
1004b168:	jmp    0x1004b16f
1004b16a:	mov    eax,ds:0x1007f460
1004b16f:	cmp    eax,0x2
1004b172:	je     0x1004b247
1004b178:	cmp    eax,ebx
1004b17a:	je     0x1004b247
1004b180:	cmp    eax,0x1
1004b183:	jne    0x1004b271
1004b189:	cmp    DWORD PTR [ebp+0x18],ebx
1004b18c:	mov    DWORD PTR [ebp-0x8],ebx
1004b18f:	jne    0x1004b199
1004b191:	mov    eax,DWORD PTR [edi]
1004b193:	mov    eax,DWORD PTR [eax+0x4]
1004b196:	mov    DWORD PTR [ebp+0x18],eax
1004b199:	mov    esi,DWORD PTR ds:0x1006508c
1004b19f:	xor    eax,eax
1004b1a1:	cmp    DWORD PTR [ebp+0x20],ebx
1004b1a4:	push   ebx
1004b1a5:	push   ebx
1004b1a6:	push   DWORD PTR [ebp+0x10]
1004b1a9:	setne  al
1004b1ac:	push   DWORD PTR [ebp+0xc]
1004b1af:	lea    eax,[eax*8+0x1]
1004b1b6:	push   eax
1004b1b7:	push   DWORD PTR [ebp+0x18]
1004b1ba:	call   esi
1004b1bc:	mov    edi,eax
1004b1be:	cmp    edi,ebx
1004b1c0:	je     0x1004b271
1004b1c6:	jle    0x1004b204
1004b1c8:	cmp    edi,0x7ffffff0
1004b1ce:	ja     0x1004b204
1004b1d0:	lea    eax,[edi+edi*1+0x8]
1004b1d4:	cmp    eax,0x400
1004b1d9:	ja     0x1004b1ee
1004b1db:	call   0x10049010
1004b1e0:	mov    eax,esp
1004b1e2:	cmp    eax,ebx
1004b1e4:	je     0x1004b202
1004b1e6:	mov    DWORD PTR [eax],0xcccc
1004b1ec:	jmp    0x1004b1ff
1004b1ee:	push   eax
1004b1ef:	call   0x10043cdd
1004b1f4:	cmp    eax,ebx
1004b1f6:	pop    ecx
1004b1f7:	je     0x1004b202
1004b1f9:	mov    DWORD PTR [eax],0xdddd
1004b1ff:	add    eax,0x8
1004b202:	mov    ebx,eax
1004b204:	test   ebx,ebx
1004b206:	je     0x1004b271
1004b208:	lea    eax,[edi+edi*1]
1004b20b:	push   eax
1004b20c:	push   0x0
1004b20e:	push   ebx
1004b20f:	call   0x10044950
1004b214:	add    esp,0xc
1004b217:	push   edi
1004b218:	push   ebx
1004b219:	push   DWORD PTR [ebp+0x10]
1004b21c:	push   DWORD PTR [ebp+0xc]
1004b21f:	push   0x1
1004b221:	push   DWORD PTR [ebp+0x18]
1004b224:	call   esi
1004b226:	test   eax,eax
1004b228:	je     0x1004b23b
1004b22a:	push   DWORD PTR [ebp+0x14]
1004b22d:	push   eax
1004b22e:	push   ebx
1004b22f:	push   DWORD PTR [ebp+0x8]
1004b232:	call   DWORD PTR ds:0x10065228
1004b238:	mov    DWORD PTR [ebp-0x8],eax
1004b23b:	push   ebx
1004b23c:	call   0x1001b117
1004b241:	mov    eax,DWORD PTR [ebp-0x8]
1004b244:	pop    ecx
1004b245:	jmp    0x1004b2bc
1004b247:	xor    esi,esi
1004b249:	cmp    DWORD PTR [ebp+0x1c],ebx
1004b24c:	jne    0x1004b256
1004b24e:	mov    eax,DWORD PTR [edi]
1004b250:	mov    eax,DWORD PTR [eax+0x14]
1004b253:	mov    DWORD PTR [ebp+0x1c],eax
1004b256:	cmp    DWORD PTR [ebp+0x18],ebx
1004b259:	jne    0x1004b263
1004b25b:	mov    eax,DWORD PTR [edi]
1004b25d:	mov    eax,DWORD PTR [eax+0x4]
1004b260:	mov    DWORD PTR [ebp+0x18],eax
1004b263:	push   DWORD PTR [ebp+0x1c]
1004b266:	call   0x1004b7f4
1004b26b:	cmp    eax,0xffffffff
1004b26e:	pop    ecx
1004b26f:	jne    0x1004b275
1004b271:	xor    eax,eax
1004b273:	jmp    0x1004b2bc
1004b275:	cmp    eax,DWORD PTR [ebp+0x18]
1004b278:	je     0x1004b298
1004b27a:	push   ebx
1004b27b:	push   ebx
1004b27c:	lea    ecx,[ebp+0x10]
1004b27f:	push   ecx
1004b280:	push   DWORD PTR [ebp+0xc]
1004b283:	push   eax
1004b284:	push   DWORD PTR [ebp+0x18]
1004b287:	call   0x1004b83b
1004b28c:	mov    esi,eax
1004b28e:	add    esp,0x18
1004b291:	cmp    esi,ebx
1004b293:	je     0x1004b271
1004b295:	mov    DWORD PTR [ebp+0xc],esi
1004b298:	push   DWORD PTR [ebp+0x14]
1004b29b:	push   DWORD PTR [ebp+0x10]
1004b29e:	push   DWORD PTR [ebp+0xc]
1004b2a1:	push   DWORD PTR [ebp+0x8]
1004b2a4:	push   DWORD PTR [ebp+0x1c]
1004b2a7:	call   DWORD PTR ds:0x10065224
1004b2ad:	cmp    esi,ebx
1004b2af:	mov    edi,eax
1004b2b1:	je     0x1004b2ba
1004b2b3:	push   esi
1004b2b4:	call   0x10042408
1004b2b9:	pop    ecx
1004b2ba:	mov    eax,edi
1004b2bc:	lea    esp,[ebp-0x14]
1004b2bf:	pop    edi
1004b2c0:	pop    esi
1004b2c1:	pop    ebx
1004b2c2:	mov    ecx,DWORD PTR [ebp-0x4]
1004b2c5:	xor    ecx,ebp
1004b2c7:	call   0x10041d97
1004b2cc:	leave  
1004b2cd:	ret    
1004b2ce:	push   ebp
1004b2cf:	mov    ebp,esp
1004b2d1:	sub    esp,0x10
1004b2d4:	push   DWORD PTR [ebp+0x8]
1004b2d7:	lea    ecx,[ebp-0x10]
1004b2da:	call   0x10044235
1004b2df:	push   DWORD PTR [ebp+0x24]
1004b2e2:	lea    ecx,[ebp-0x10]
1004b2e5:	push   DWORD PTR [ebp+0x20]
1004b2e8:	push   DWORD PTR [ebp+0x1c]
1004b2eb:	push   DWORD PTR [ebp+0x18]
1004b2ee:	push   DWORD PTR [ebp+0x14]
1004b2f1:	push   DWORD PTR [ebp+0x10]
1004b2f4:	push   DWORD PTR [ebp+0xc]
1004b2f7:	call   0x1004b116
1004b2fc:	add    esp,0x1c
1004b2ff:	cmp    BYTE PTR [ebp-0x4],0x0
1004b303:	je     0x1004b30c
1004b305:	mov    ecx,DWORD PTR [ebp-0x8]
1004b308:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b30c:	leave  
1004b30d:	ret    
1004b30e:	push   esi
1004b30f:	mov    esi,DWORD PTR [esp+0x8]
1004b313:	test   esi,esi
1004b315:	je     0x1004b49c
1004b31b:	push   DWORD PTR [esi+0x4]
1004b31e:	call   0x10042408
1004b323:	push   DWORD PTR [esi+0x8]
1004b326:	call   0x10042408
1004b32b:	push   DWORD PTR [esi+0xc]
1004b32e:	call   0x10042408
1004b333:	push   DWORD PTR [esi+0x10]
1004b336:	call   0x10042408
1004b33b:	push   DWORD PTR [esi+0x14]
1004b33e:	call   0x10042408
1004b343:	push   DWORD PTR [esi+0x18]
1004b346:	call   0x10042408
1004b34b:	push   DWORD PTR [esi]
1004b34d:	call   0x10042408
1004b352:	push   DWORD PTR [esi+0x20]
1004b355:	call   0x10042408
1004b35a:	push   DWORD PTR [esi+0x24]
1004b35d:	call   0x10042408
1004b362:	push   DWORD PTR [esi+0x28]
1004b365:	call   0x10042408
1004b36a:	push   DWORD PTR [esi+0x2c]
1004b36d:	call   0x10042408
1004b372:	push   DWORD PTR [esi+0x30]
1004b375:	call   0x10042408
1004b37a:	push   DWORD PTR [esi+0x34]
1004b37d:	call   0x10042408
1004b382:	push   DWORD PTR [esi+0x1c]
1004b385:	call   0x10042408
1004b38a:	push   DWORD PTR [esi+0x38]
1004b38d:	call   0x10042408
1004b392:	push   DWORD PTR [esi+0x3c]
1004b395:	call   0x10042408
1004b39a:	add    esp,0x40
1004b39d:	push   DWORD PTR [esi+0x40]
1004b3a0:	call   0x10042408
1004b3a5:	push   DWORD PTR [esi+0x44]
1004b3a8:	call   0x10042408
1004b3ad:	push   DWORD PTR [esi+0x48]
1004b3b0:	call   0x10042408
1004b3b5:	push   DWORD PTR [esi+0x4c]
1004b3b8:	call   0x10042408
1004b3bd:	push   DWORD PTR [esi+0x50]
1004b3c0:	call   0x10042408
1004b3c5:	push   DWORD PTR [esi+0x54]
1004b3c8:	call   0x10042408
1004b3cd:	push   DWORD PTR [esi+0x58]
1004b3d0:	call   0x10042408
1004b3d5:	push   DWORD PTR [esi+0x5c]
1004b3d8:	call   0x10042408
1004b3dd:	push   DWORD PTR [esi+0x60]
1004b3e0:	call   0x10042408
1004b3e5:	push   DWORD PTR [esi+0x64]
1004b3e8:	call   0x10042408
1004b3ed:	push   DWORD PTR [esi+0x68]
1004b3f0:	call   0x10042408
1004b3f5:	push   DWORD PTR [esi+0x6c]
1004b3f8:	call   0x10042408
1004b3fd:	push   DWORD PTR [esi+0x70]
1004b400:	call   0x10042408
1004b405:	push   DWORD PTR [esi+0x74]
1004b408:	call   0x10042408
1004b40d:	push   DWORD PTR [esi+0x78]
1004b410:	call   0x10042408
1004b415:	push   DWORD PTR [esi+0x7c]
1004b418:	call   0x10042408
1004b41d:	add    esp,0x40
1004b420:	push   DWORD PTR [esi+0x80]
1004b426:	call   0x10042408
1004b42b:	push   DWORD PTR [esi+0x84]
1004b431:	call   0x10042408
1004b436:	push   DWORD PTR [esi+0x88]
1004b43c:	call   0x10042408
1004b441:	push   DWORD PTR [esi+0x8c]
1004b447:	call   0x10042408
1004b44c:	push   DWORD PTR [esi+0x90]
1004b452:	call   0x10042408
1004b457:	push   DWORD PTR [esi+0x94]
1004b45d:	call   0x10042408
1004b462:	push   DWORD PTR [esi+0x98]
1004b468:	call   0x10042408
1004b46d:	push   DWORD PTR [esi+0x9c]
1004b473:	call   0x10042408
1004b478:	push   DWORD PTR [esi+0xa0]
1004b47e:	call   0x10042408
1004b483:	push   DWORD PTR [esi+0xa4]
1004b489:	call   0x10042408
1004b48e:	push   DWORD PTR [esi+0xa8]
1004b494:	call   0x10042408
1004b499:	add    esp,0x2c
1004b49c:	pop    esi
1004b49d:	ret    
1004b49e:	push   esi
1004b49f:	mov    esi,DWORD PTR [esp+0x8]
1004b4a3:	test   esi,esi
1004b4a5:	je     0x1004b4dc
1004b4a7:	mov    eax,DWORD PTR [esi]
1004b4a9:	cmp    eax,DWORD PTR ds:0x1007db70
1004b4af:	je     0x1004b4b8
1004b4b1:	push   eax
1004b4b2:	call   0x10042408
1004b4b7:	pop    ecx
1004b4b8:	mov    eax,DWORD PTR [esi+0x4]
1004b4bb:	cmp    eax,DWORD PTR ds:0x1007db74
1004b4c1:	je     0x1004b4ca
1004b4c3:	push   eax
1004b4c4:	call   0x10042408
1004b4c9:	pop    ecx
1004b4ca:	mov    esi,DWORD PTR [esi+0x8]
1004b4cd:	cmp    esi,DWORD PTR ds:0x1007db78
1004b4d3:	je     0x1004b4dc
1004b4d5:	push   esi
1004b4d6:	call   0x10042408
1004b4db:	pop    ecx
1004b4dc:	pop    esi
1004b4dd:	ret    
1004b4de:	push   esi
1004b4df:	mov    esi,DWORD PTR [esp+0x8]
1004b4e3:	test   esi,esi
1004b4e5:	je     0x1004b565
1004b4e7:	mov    eax,DWORD PTR [esi+0xc]
1004b4ea:	cmp    eax,DWORD PTR ds:0x1007db7c
1004b4f0:	je     0x1004b4f9
1004b4f2:	push   eax
1004b4f3:	call   0x10042408
1004b4f8:	pop    ecx
1004b4f9:	mov    eax,DWORD PTR [esi+0x10]
1004b4fc:	cmp    eax,DWORD PTR ds:0x1007db80
1004b502:	je     0x1004b50b
1004b504:	push   eax
1004b505:	call   0x10042408
1004b50a:	pop    ecx
1004b50b:	mov    eax,DWORD PTR [esi+0x14]
1004b50e:	cmp    eax,DWORD PTR ds:0x1007db84
1004b514:	je     0x1004b51d
1004b516:	push   eax
1004b517:	call   0x10042408
1004b51c:	pop    ecx
1004b51d:	mov    eax,DWORD PTR [esi+0x18]
1004b520:	cmp    eax,DWORD PTR ds:0x1007db88
1004b526:	je     0x1004b52f
1004b528:	push   eax
1004b529:	call   0x10042408
1004b52e:	pop    ecx
1004b52f:	mov    eax,DWORD PTR [esi+0x1c]
1004b532:	cmp    eax,DWORD PTR ds:0x1007db8c
1004b538:	je     0x1004b541
1004b53a:	push   eax
1004b53b:	call   0x10042408
1004b540:	pop    ecx
1004b541:	mov    eax,DWORD PTR [esi+0x20]
1004b544:	cmp    eax,DWORD PTR ds:0x1007db90
1004b54a:	je     0x1004b553
1004b54c:	push   eax
1004b54d:	call   0x10042408
1004b552:	pop    ecx
1004b553:	mov    esi,DWORD PTR [esi+0x24]
1004b556:	cmp    esi,DWORD PTR ds:0x1007db94
1004b55c:	je     0x1004b565
1004b55e:	push   esi
1004b55f:	call   0x10042408
1004b564:	pop    ecx
1004b565:	pop    esi
1004b566:	ret    
1004b567:	int3   
1004b568:	int3   
1004b569:	int3   
1004b56a:	int3   
1004b56b:	int3   
1004b56c:	int3   
1004b56d:	int3   
1004b56e:	int3   
1004b56f:	int3   
1004b570:	push   ebp
1004b571:	mov    ebp,esp
1004b573:	push   esi
1004b574:	xor    eax,eax
1004b576:	push   eax
1004b577:	push   eax
1004b578:	push   eax
1004b579:	push   eax
1004b57a:	push   eax
1004b57b:	push   eax
1004b57c:	push   eax
1004b57d:	push   eax
1004b57e:	mov    edx,DWORD PTR [ebp+0xc]
1004b581:	lea    ecx,[ecx+0x0]
1004b584:	mov    al,BYTE PTR [edx]
1004b586:	or     al,al
1004b588:	je     0x1004b593
1004b58a:	add    edx,0x1
1004b58d:	bts    DWORD PTR [esp],eax
1004b591:	jmp    0x1004b584
1004b593:	mov    esi,DWORD PTR [ebp+0x8]
1004b596:	or     ecx,0xffffffff
1004b599:	lea    ecx,[ecx+0x0]
1004b59c:	add    ecx,0x1
1004b59f:	mov    al,BYTE PTR [esi]
1004b5a1:	or     al,al
1004b5a3:	je     0x1004b5ae
1004b5a5:	add    esi,0x1
1004b5a8:	bt     DWORD PTR [esp],eax
1004b5ac:	jae    0x1004b59c
1004b5ae:	mov    eax,ecx
1004b5b0:	add    esp,0x20
1004b5b3:	pop    esi
1004b5b4:	leave  
1004b5b5:	ret    
1004b5b6:	push   ebp
1004b5b7:	mov    ebp,esp
1004b5b9:	push   ecx
1004b5ba:	and    DWORD PTR [ebp-0x4],0x0
1004b5be:	push   ebx
1004b5bf:	mov    ebx,DWORD PTR [ebp+0x10]
1004b5c2:	test   ebx,ebx
1004b5c4:	jne    0x1004b5cd
1004b5c6:	xor    eax,eax
1004b5c8:	jmp    0x1004b667
1004b5cd:	cmp    ebx,0x4
1004b5d0:	push   edi
1004b5d1:	jb     0x1004b648
1004b5d3:	lea    edi,[ebx-0x4]
1004b5d6:	test   edi,edi
1004b5d8:	jbe    0x1004b648
1004b5da:	mov    ecx,DWORD PTR [ebp+0xc]
1004b5dd:	mov    eax,DWORD PTR [ebp+0x8]
1004b5e0:	mov    dl,BYTE PTR [eax]
1004b5e2:	add    eax,0x4
1004b5e5:	add    ecx,0x4
1004b5e8:	test   dl,dl
1004b5ea:	je     0x1004b63e
1004b5ec:	cmp    dl,BYTE PTR [ecx-0x4]
1004b5ef:	jne    0x1004b63e
1004b5f1:	mov    dl,BYTE PTR [eax-0x3]
1004b5f4:	test   dl,dl
1004b5f6:	je     0x1004b634
1004b5f8:	cmp    dl,BYTE PTR [ecx-0x3]
1004b5fb:	jne    0x1004b634
1004b5fd:	mov    dl,BYTE PTR [eax-0x2]
1004b600:	test   dl,dl
1004b602:	je     0x1004b62a
1004b604:	cmp    dl,BYTE PTR [ecx-0x2]
1004b607:	jne    0x1004b62a
1004b609:	mov    dl,BYTE PTR [eax-0x1]
1004b60c:	test   dl,dl
1004b60e:	je     0x1004b620
1004b610:	cmp    dl,BYTE PTR [ecx-0x1]
1004b613:	jne    0x1004b620
1004b615:	add    DWORD PTR [ebp-0x4],0x4
1004b619:	cmp    DWORD PTR [ebp-0x4],edi
1004b61c:	jb     0x1004b5e0
1004b61e:	jmp    0x1004b65f
1004b620:	movzx  eax,BYTE PTR [eax-0x1]
1004b624:	movzx  ecx,BYTE PTR [ecx-0x1]
1004b628:	jmp    0x1004b670
1004b62a:	movzx  eax,BYTE PTR [eax-0x2]
1004b62e:	movzx  ecx,BYTE PTR [ecx-0x2]
1004b632:	jmp    0x1004b670
1004b634:	movzx  eax,BYTE PTR [eax-0x3]
1004b638:	movzx  ecx,BYTE PTR [ecx-0x3]
1004b63c:	jmp    0x1004b670
1004b63e:	movzx  eax,BYTE PTR [eax-0x4]
1004b642:	movzx  ecx,BYTE PTR [ecx-0x4]
1004b646:	jmp    0x1004b670
1004b648:	mov    ecx,DWORD PTR [ebp+0xc]
1004b64b:	mov    eax,DWORD PTR [ebp+0x8]
1004b64e:	jmp    0x1004b65f
1004b650:	mov    dl,BYTE PTR [eax]
1004b652:	test   dl,dl
1004b654:	je     0x1004b66a
1004b656:	cmp    dl,BYTE PTR [ecx]
1004b658:	jne    0x1004b66a
1004b65a:	inc    eax
1004b65b:	inc    ecx
1004b65c:	inc    DWORD PTR [ebp-0x4]
1004b65f:	cmp    DWORD PTR [ebp-0x4],ebx
1004b662:	jb     0x1004b650
1004b664:	xor    eax,eax
1004b666:	pop    edi
1004b667:	pop    ebx
1004b668:	leave  
1004b669:	ret    
1004b66a:	movzx  eax,BYTE PTR [eax]
1004b66d:	movzx  ecx,BYTE PTR [ecx]
1004b670:	sub    eax,ecx
1004b672:	jmp    0x1004b666
1004b674:	int3   
1004b675:	int3   
1004b676:	int3   
1004b677:	int3   
1004b678:	int3   
1004b679:	int3   
1004b67a:	int3   
1004b67b:	int3   
1004b67c:	int3   
1004b67d:	int3   
1004b67e:	int3   
1004b67f:	int3   
1004b680:	push   ebp
1004b681:	mov    ebp,esp
1004b683:	push   esi
1004b684:	xor    eax,eax
1004b686:	push   eax
1004b687:	push   eax
1004b688:	push   eax
1004b689:	push   eax
1004b68a:	push   eax
1004b68b:	push   eax
1004b68c:	push   eax
1004b68d:	push   eax
1004b68e:	mov    edx,DWORD PTR [ebp+0xc]
1004b691:	lea    ecx,[ecx+0x0]
1004b694:	mov    al,BYTE PTR [edx]
1004b696:	or     al,al
1004b698:	je     0x1004b6a3
1004b69a:	add    edx,0x1
1004b69d:	bts    DWORD PTR [esp],eax
1004b6a1:	jmp    0x1004b694
1004b6a3:	mov    esi,DWORD PTR [ebp+0x8]
1004b6a6:	mov    edi,edi
1004b6a8:	mov    al,BYTE PTR [esi]
1004b6aa:	or     al,al
1004b6ac:	je     0x1004b6ba
1004b6ae:	add    esi,0x1
1004b6b1:	bt     DWORD PTR [esp],eax
1004b6b5:	jae    0x1004b6a8
1004b6b7:	lea    eax,[esi-0x1]
1004b6ba:	add    esp,0x20
1004b6bd:	pop    esi
1004b6be:	leave  
1004b6bf:	ret    
1004b6c0:	push   ebp
1004b6c1:	mov    ebp,esp
1004b6c3:	sub    esp,0x10
1004b6c6:	push   DWORD PTR [ebp+0xc]
1004b6c9:	lea    ecx,[ebp-0x10]
1004b6cc:	call   0x10044235
1004b6d1:	mov    eax,DWORD PTR [ebp-0x10]
1004b6d4:	cmp    DWORD PTR [eax+0xac],0x1
1004b6db:	jle    0x1004b6f0
1004b6dd:	lea    eax,[ebp-0x10]
1004b6e0:	push   eax
1004b6e1:	push   0x4
1004b6e3:	push   DWORD PTR [ebp+0x8]
1004b6e6:	call   0x10048c23
1004b6eb:	add    esp,0xc
1004b6ee:	jmp    0x1004b700
1004b6f0:	mov    eax,DWORD PTR [eax+0xc8]
1004b6f6:	mov    ecx,DWORD PTR [ebp+0x8]
1004b6f9:	movzx  eax,BYTE PTR [eax+ecx*2]
1004b6fd:	and    eax,0x4
1004b700:	cmp    BYTE PTR [ebp-0x4],0x0
1004b704:	je     0x1004b70d
1004b706:	mov    ecx,DWORD PTR [ebp-0x8]
1004b709:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b70d:	leave  
1004b70e:	ret    
1004b70f:	cmp    DWORD PTR ds:0x1007f2a8,0x0
1004b716:	jne    0x1004b72a
1004b718:	mov    eax,DWORD PTR [esp+0x4]
1004b71c:	mov    ecx,DWORD PTR ds:0x1007d998
1004b722:	movzx  eax,BYTE PTR [ecx+eax*2]
1004b726:	and    eax,0x4
1004b729:	ret    
1004b72a:	push   0x0
1004b72c:	push   DWORD PTR [esp+0x8]
1004b730:	call   0x1004b6c0
1004b735:	pop    ecx
1004b736:	pop    ecx
1004b737:	ret    
1004b738:	push   ebp
1004b739:	mov    ebp,esp
1004b73b:	sub    esp,0x10
1004b73e:	push   DWORD PTR [ebp+0xc]
1004b741:	lea    ecx,[ebp-0x10]
1004b744:	call   0x10044235
1004b749:	mov    eax,DWORD PTR [ebp-0x10]
1004b74c:	cmp    DWORD PTR [eax+0xac],0x1
1004b753:	jle    0x1004b76b
1004b755:	lea    eax,[ebp-0x10]
1004b758:	push   eax
1004b759:	push   0x80
1004b75e:	push   DWORD PTR [ebp+0x8]
1004b761:	call   0x10048c23
1004b766:	add    esp,0xc
1004b769:	jmp    0x1004b77d
1004b76b:	mov    eax,DWORD PTR [eax+0xc8]
1004b771:	mov    ecx,DWORD PTR [ebp+0x8]
1004b774:	movzx  eax,BYTE PTR [eax+ecx*2]
1004b778:	and    eax,0x80
1004b77d:	cmp    BYTE PTR [ebp-0x4],0x0
1004b781:	je     0x1004b78a
1004b783:	mov    ecx,DWORD PTR [ebp-0x8]
1004b786:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004b78a:	leave  
1004b78b:	ret    
1004b78c:	cmp    DWORD PTR ds:0x1007f2a8,0x0
1004b793:	jne    0x1004b7a9
1004b795:	mov    eax,DWORD PTR [esp+0x4]
1004b799:	mov    ecx,DWORD PTR ds:0x1007d998
1004b79f:	movzx  eax,BYTE PTR [ecx+eax*2]
1004b7a3:	and    eax,0x80
1004b7a8:	ret    
1004b7a9:	push   0x0
1004b7ab:	push   DWORD PTR [esp+0x8]
1004b7af:	call   0x1004b738
1004b7b4:	pop    ecx
1004b7b5:	pop    ecx
1004b7b6:	ret    
1004b7b7:	int3   
1004b7b8:	int3   
1004b7b9:	int3   
1004b7ba:	int3   
1004b7bb:	int3   
1004b7bc:	int3   
1004b7bd:	int3   
1004b7be:	int3   
1004b7bf:	int3   
1004b7c0:	mov    eax,DWORD PTR [esp+0x8]
1004b7c4:	mov    ecx,DWORD PTR [esp+0x10]
1004b7c8:	or     ecx,eax
1004b7ca:	mov    ecx,DWORD PTR [esp+0xc]
1004b7ce:	jne    0x1004b7d9
1004b7d0:	mov    eax,DWORD PTR [esp+0x4]
1004b7d4:	mul    ecx
1004b7d6:	ret    0x10
1004b7d9:	push   ebx
1004b7da:	mul    ecx
1004b7dc:	mov    ebx,eax
1004b7de:	mov    eax,DWORD PTR [esp+0x8]
1004b7e2:	mul    DWORD PTR [esp+0x14]
1004b7e6:	add    ebx,eax
1004b7e8:	mov    eax,DWORD PTR [esp+0x8]
1004b7ec:	mul    ecx
1004b7ee:	add    edx,ebx
1004b7f0:	pop    ebx
1004b7f1:	ret    0x10
1004b7f4:	push   ebp
1004b7f5:	mov    ebp,esp
1004b7f7:	sub    esp,0xc
1004b7fa:	mov    eax,ds:0x1007d030
1004b7ff:	xor    eax,ebp
1004b801:	mov    DWORD PTR [ebp-0x4],eax
1004b804:	push   0x6
1004b806:	lea    eax,[ebp-0xc]
1004b809:	push   eax
1004b80a:	push   0x1004
1004b80f:	push   DWORD PTR [ebp+0x8]
1004b812:	mov    BYTE PTR [ebp-0x6],0x0
1004b816:	call   DWORD PTR ds:0x10065230
1004b81c:	test   eax,eax
1004b81e:	jne    0x1004b825
1004b820:	or     eax,0xffffffff
1004b823:	jmp    0x1004b82f
1004b825:	lea    eax,[ebp-0xc]
1004b828:	push   eax
1004b829:	call   0x100449f4
1004b82e:	pop    ecx
1004b82f:	mov    ecx,DWORD PTR [ebp-0x4]
1004b832:	xor    ecx,ebp
1004b834:	call   0x10041d97
1004b839:	leave  
1004b83a:	ret    
1004b83b:	push   ebp
1004b83c:	mov    ebp,esp
1004b83e:	sub    esp,0x34
1004b841:	mov    eax,ds:0x1007d030
1004b846:	xor    eax,ebp
1004b848:	mov    DWORD PTR [ebp-0x4],eax
1004b84b:	mov    eax,DWORD PTR [ebp+0x10]
1004b84e:	mov    ecx,DWORD PTR [ebp+0x18]
1004b851:	mov    DWORD PTR [ebp-0x28],eax
1004b854:	mov    eax,DWORD PTR [ebp+0x14]
1004b857:	push   ebx
1004b858:	mov    DWORD PTR [ebp-0x30],eax
1004b85b:	mov    eax,DWORD PTR [eax]
1004b85d:	push   esi
1004b85e:	mov    DWORD PTR [ebp-0x24],eax
1004b861:	mov    eax,DWORD PTR [ebp+0x8]
1004b864:	push   edi
1004b865:	xor    edi,edi
1004b867:	cmp    eax,DWORD PTR [ebp+0xc]
1004b86a:	mov    DWORD PTR [ebp-0x34],ecx
1004b86d:	mov    DWORD PTR [ebp-0x20],edi
1004b870:	mov    DWORD PTR [ebp-0x2c],edi
1004b873:	je     0x1004b9d8
1004b879:	mov    esi,DWORD PTR ds:0x100651dc
1004b87f:	lea    ecx,[ebp-0x18]
1004b882:	push   ecx
1004b883:	push   eax
1004b884:	call   esi
1004b886:	test   eax,eax
1004b888:	mov    ebx,DWORD PTR ds:0x1006508c
1004b88e:	je     0x1004b8ee
1004b890:	cmp    DWORD PTR [ebp-0x18],0x1
1004b894:	jne    0x1004b8ee
1004b896:	lea    eax,[ebp-0x18]
1004b899:	push   eax
1004b89a:	push   DWORD PTR [ebp+0xc]
1004b89d:	call   esi
1004b89f:	test   eax,eax
1004b8a1:	je     0x1004b8ee
1004b8a3:	cmp    DWORD PTR [ebp-0x18],0x1
1004b8a7:	jne    0x1004b8ee
1004b8a9:	mov    esi,DWORD PTR [ebp-0x24]
1004b8ac:	cmp    esi,0xffffffff
1004b8af:	mov    DWORD PTR [ebp-0x2c],0x1
1004b8b6:	jne    0x1004b8c4
1004b8b8:	push   DWORD PTR [ebp-0x28]
1004b8bb:	call   0x10041f10
1004b8c0:	mov    esi,eax
1004b8c2:	pop    ecx
1004b8c3:	inc    esi
1004b8c4:	cmp    esi,edi
1004b8c6:	jle    0x1004b923
1004b8c8:	cmp    esi,0x7ffffff0
1004b8ce:	ja     0x1004b923
1004b8d0:	lea    eax,[esi+esi*1+0x8]
1004b8d4:	cmp    eax,0x400
1004b8d9:	ja     0x1004b90a
1004b8db:	call   0x10049010
1004b8e0:	mov    eax,esp
1004b8e2:	cmp    eax,edi
1004b8e4:	je     0x1004b91e
1004b8e6:	mov    DWORD PTR [eax],0xcccc
1004b8ec:	jmp    0x1004b91b
1004b8ee:	push   edi
1004b8ef:	push   edi
1004b8f0:	push   DWORD PTR [ebp-0x24]
1004b8f3:	push   DWORD PTR [ebp-0x28]
1004b8f6:	push   0x1
1004b8f8:	push   DWORD PTR [ebp+0x8]
1004b8fb:	call   ebx
1004b8fd:	mov    esi,eax
1004b8ff:	cmp    esi,edi
1004b901:	jne    0x1004b8c6
1004b903:	xor    eax,eax
1004b905:	jmp    0x1004b9db
1004b90a:	push   eax
1004b90b:	call   0x10043cdd
1004b910:	cmp    eax,edi
1004b912:	pop    ecx
1004b913:	je     0x1004b91e
1004b915:	mov    DWORD PTR [eax],0xdddd
1004b91b:	add    eax,0x8
1004b91e:	mov    DWORD PTR [ebp-0x1c],eax
1004b921:	jmp    0x1004b926
1004b923:	mov    DWORD PTR [ebp-0x1c],edi
1004b926:	cmp    DWORD PTR [ebp-0x1c],edi
1004b929:	je     0x1004b903
1004b92b:	lea    eax,[esi+esi*1]
1004b92e:	push   eax
1004b92f:	push   edi
1004b930:	push   DWORD PTR [ebp-0x1c]
1004b933:	call   0x10044950
1004b938:	add    esp,0xc
1004b93b:	push   esi
1004b93c:	push   DWORD PTR [ebp-0x1c]
1004b93f:	push   DWORD PTR [ebp-0x24]
1004b942:	push   DWORD PTR [ebp-0x28]
1004b945:	push   0x1
1004b947:	push   DWORD PTR [ebp+0x8]
1004b94a:	call   ebx
1004b94c:	test   eax,eax
1004b94e:	je     0x1004b9cf
1004b950:	mov    ebx,DWORD PTR [ebp-0x34]
1004b953:	cmp    ebx,edi
1004b955:	je     0x1004b974
1004b957:	push   edi
1004b958:	push   edi
1004b959:	push   DWORD PTR [ebp+0x1c]
1004b95c:	push   ebx
1004b95d:	push   esi
1004b95e:	push   DWORD PTR [ebp-0x1c]
1004b961:	push   edi
1004b962:	push   DWORD PTR [ebp+0xc]
1004b965:	call   DWORD PTR ds:0x100650dc
1004b96b:	test   eax,eax
1004b96d:	je     0x1004b9cf
1004b96f:	mov    DWORD PTR [ebp-0x20],ebx
1004b972:	jmp    0x1004b9cf
1004b974:	cmp    DWORD PTR [ebp-0x2c],edi
1004b977:	mov    ebx,DWORD PTR ds:0x100650dc
1004b97d:	jne    0x1004b993
1004b97f:	push   edi
1004b980:	push   edi
1004b981:	push   edi
1004b982:	push   edi
1004b983:	push   esi
1004b984:	push   DWORD PTR [ebp-0x1c]
1004b987:	push   edi
1004b988:	push   DWORD PTR [ebp+0xc]
1004b98b:	call   ebx
1004b98d:	mov    esi,eax
1004b98f:	cmp    esi,edi
1004b991:	je     0x1004b9cf
1004b993:	push   esi
1004b994:	push   0x1
1004b996:	call   0x100461b2
1004b99b:	cmp    eax,edi
1004b99d:	pop    ecx
1004b99e:	pop    ecx
1004b99f:	mov    DWORD PTR [ebp-0x20],eax
1004b9a2:	je     0x1004b9cf
1004b9a4:	push   edi
1004b9a5:	push   edi
1004b9a6:	push   esi
1004b9a7:	push   eax
1004b9a8:	push   esi
1004b9a9:	push   DWORD PTR [ebp-0x1c]
1004b9ac:	push   edi
1004b9ad:	push   DWORD PTR [ebp+0xc]
1004b9b0:	call   ebx
1004b9b2:	cmp    eax,edi
1004b9b4:	jne    0x1004b9c4
1004b9b6:	push   DWORD PTR [ebp-0x20]
1004b9b9:	call   0x10042408
1004b9be:	pop    ecx
1004b9bf:	mov    DWORD PTR [ebp-0x20],edi
1004b9c2:	jmp    0x1004b9cf
1004b9c4:	cmp    DWORD PTR [ebp-0x24],0xffffffff
1004b9c8:	je     0x1004b9cf
1004b9ca:	mov    ecx,DWORD PTR [ebp-0x30]
1004b9cd:	mov    DWORD PTR [ecx],eax
1004b9cf:	push   DWORD PTR [ebp-0x1c]
1004b9d2:	call   0x1001b117
1004b9d7:	pop    ecx
1004b9d8:	mov    eax,DWORD PTR [ebp-0x20]
1004b9db:	lea    esp,[ebp-0x40]
1004b9de:	pop    edi
1004b9df:	pop    esi
1004b9e0:	pop    ebx
1004b9e1:	mov    ecx,DWORD PTR [ebp-0x4]
1004b9e4:	xor    ecx,ebp
1004b9e6:	call   0x10041d97
1004b9eb:	leave  
1004b9ec:	ret    
1004b9ed:	push   ebp
1004b9ee:	mov    ebp,esp
1004b9f0:	sub    esp,0x14
1004b9f3:	cmp    WORD PTR [ebp+0x8],0xffff
1004b9f9:	jne    0x1004ba01
1004b9fb:	and    DWORD PTR [ebp-0x4],0x0
1004b9ff:	jmp    0x1004ba63
1004ba01:	cmp    WORD PTR [ebp+0x8],0x100
1004ba07:	jae    0x1004ba23
1004ba09:	movzx  eax,WORD PTR [ebp+0x8]
1004ba0d:	mov    ecx,DWORD PTR ds:0x1007daac
1004ba13:	mov    ax,WORD PTR [ecx+eax*2]
1004ba17:	and    ax,WORD PTR [ebp+0xc]
1004ba1b:	movzx  eax,ax
1004ba1e:	mov    DWORD PTR [ebp-0x4],eax
1004ba21:	jmp    0x1004ba63
1004ba23:	push   DWORD PTR [ebp+0x10]
1004ba26:	lea    ecx,[ebp-0x14]
1004ba29:	call   0x10044235
1004ba2e:	mov    eax,DWORD PTR [ebp-0x14]
1004ba31:	push   DWORD PTR [eax+0x14]
1004ba34:	push   DWORD PTR [eax+0x4]
1004ba37:	lea    eax,[ebp-0x4]
1004ba3a:	push   eax
1004ba3b:	push   0x1
1004ba3d:	lea    eax,[ebp+0x8]
1004ba40:	push   eax
1004ba41:	lea    eax,[ebp-0x14]
1004ba44:	push   0x1
1004ba46:	push   eax
1004ba47:	call   0x1004def9
1004ba4c:	add    esp,0x1c
1004ba4f:	test   eax,eax
1004ba51:	jne    0x1004ba56
1004ba53:	and    DWORD PTR [ebp-0x4],eax
1004ba56:	cmp    BYTE PTR [ebp-0x8],0x0
1004ba5a:	je     0x1004ba63
1004ba5c:	mov    eax,DWORD PTR [ebp-0xc]
1004ba5f:	and    DWORD PTR [eax+0x70],0xfffffffd
1004ba63:	movzx  eax,WORD PTR [ebp-0x4]
1004ba67:	movzx  ecx,WORD PTR [ebp+0xc]
1004ba6b:	and    eax,ecx
1004ba6d:	leave  
1004ba6e:	ret    
1004ba6f:	push   ebp
1004ba70:	mov    ebp,esp
1004ba72:	push   ecx
1004ba73:	push   ecx
1004ba74:	mov    eax,DWORD PTR [ebp+0xc]
1004ba77:	push   esi
1004ba78:	mov    esi,DWORD PTR [ebp+0x8]
1004ba7b:	mov    DWORD PTR [ebp-0x8],eax
1004ba7e:	mov    eax,DWORD PTR [ebp+0x10]
1004ba81:	push   edi
1004ba82:	push   esi
1004ba83:	mov    DWORD PTR [ebp-0x4],eax
1004ba86:	call   0x1004e035
1004ba8b:	or     edi,0xffffffff
1004ba8e:	cmp    eax,edi
1004ba90:	pop    ecx
1004ba91:	jne    0x1004baa4
1004ba93:	call   0x100458a5
1004ba98:	mov    DWORD PTR [eax],0x9
1004ba9e:	mov    eax,edi
1004baa0:	mov    edx,edi
1004baa2:	jmp    0x1004baee
1004baa4:	push   DWORD PTR [ebp+0x14]
1004baa7:	lea    ecx,[ebp-0x4]
1004baaa:	push   ecx
1004baab:	push   DWORD PTR [ebp-0x8]
1004baae:	push   eax
1004baaf:	call   DWORD PTR ds:0x10065238
1004bab5:	cmp    eax,edi
1004bab7:	mov    DWORD PTR [ebp-0x8],eax
1004baba:	jne    0x1004bacf
1004babc:	call   DWORD PTR ds:0x100650c4
1004bac2:	test   eax,eax
1004bac4:	je     0x1004bacf
1004bac6:	push   eax
1004bac7:	call   0x100458cb
1004bacc:	pop    ecx
1004bacd:	jmp    0x1004ba9e
1004bacf:	mov    eax,esi
1004bad1:	and    esi,0x1f
1004bad4:	imul   esi,esi,0x28
1004bad7:	sar    eax,0x5
1004bada:	mov    eax,DWORD PTR [eax*4+0x10081460]
1004bae1:	lea    eax,[eax+esi*1+0x4]
1004bae5:	and    BYTE PTR [eax],0xfd
1004bae8:	mov    eax,DWORD PTR [ebp-0x8]
1004baeb:	mov    edx,DWORD PTR [ebp-0x4]
1004baee:	pop    edi
1004baef:	pop    esi
1004baf0:	leave  
1004baf1:	ret    
1004baf2:	push   0x14
1004baf4:	push   0x10073408
1004baf9:	call   0x100459e4
1004bafe:	or     esi,0xffffffff
1004bb01:	mov    DWORD PTR [ebp-0x24],esi
1004bb04:	mov    DWORD PTR [ebp-0x20],esi
1004bb07:	mov    eax,DWORD PTR [ebp+0x8]
1004bb0a:	cmp    eax,0xfffffffe
1004bb0d:	jne    0x1004bb2b
1004bb0f:	call   0x100458b8
1004bb14:	and    DWORD PTR [eax],0x0
1004bb17:	call   0x100458a5
1004bb1c:	mov    DWORD PTR [eax],0x9
1004bb22:	mov    eax,esi
1004bb24:	mov    edx,esi
1004bb26:	jmp    0x1004bbfb
1004bb2b:	xor    edi,edi
1004bb2d:	cmp    eax,edi
1004bb2f:	jl     0x1004bb39
1004bb31:	cmp    eax,DWORD PTR ds:0x10081444
1004bb37:	jb     0x1004bb5a
1004bb39:	call   0x100458b8
1004bb3e:	mov    DWORD PTR [eax],edi
1004bb40:	call   0x100458a5
1004bb45:	mov    DWORD PTR [eax],0x9
1004bb4b:	push   edi
1004bb4c:	push   edi
1004bb4d:	push   edi
1004bb4e:	push   edi
1004bb4f:	push   edi
1004bb50:	call   0x1004228c
1004bb55:	add    esp,0x14
1004bb58:	jmp    0x1004bb22
1004bb5a:	mov    ecx,eax
1004bb5c:	sar    ecx,0x5
1004bb5f:	lea    ebx,[ecx*4+0x10081460]
1004bb66:	mov    esi,eax
1004bb68:	and    esi,0x1f
1004bb6b:	imul   esi,esi,0x28
1004bb6e:	mov    ecx,DWORD PTR [ebx]
1004bb70:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
1004bb75:	and    ecx,0x1
1004bb78:	jne    0x1004bba0
1004bb7a:	call   0x100458b8
1004bb7f:	mov    DWORD PTR [eax],edi
1004bb81:	call   0x100458a5
1004bb86:	mov    DWORD PTR [eax],0x9
1004bb8c:	push   edi
1004bb8d:	push   edi
1004bb8e:	push   edi
1004bb8f:	push   edi
1004bb90:	push   edi
1004bb91:	call   0x1004228c
1004bb96:	add    esp,0x14
1004bb99:	or     edx,0xffffffff
1004bb9c:	mov    eax,edx
1004bb9e:	jmp    0x1004bbfb
1004bba0:	push   eax
1004bba1:	call   0x1004e0a6
1004bba6:	pop    ecx
1004bba7:	mov    DWORD PTR [ebp-0x4],edi
1004bbaa:	mov    eax,DWORD PTR [ebx]
1004bbac:	test   BYTE PTR [eax+esi*1+0x4],0x1
1004bbb1:	je     0x1004bbcf
1004bbb3:	push   DWORD PTR [ebp+0x14]
1004bbb6:	push   DWORD PTR [ebp+0x10]
1004bbb9:	push   DWORD PTR [ebp+0xc]
1004bbbc:	push   DWORD PTR [ebp+0x8]
1004bbbf:	call   0x1004ba6f
1004bbc4:	add    esp,0x10
1004bbc7:	mov    DWORD PTR [ebp-0x24],eax
1004bbca:	mov    DWORD PTR [ebp-0x20],edx
1004bbcd:	jmp    0x1004bbe9
1004bbcf:	call   0x100458a5
1004bbd4:	mov    DWORD PTR [eax],0x9
1004bbda:	call   0x100458b8
1004bbdf:	mov    DWORD PTR [eax],edi
1004bbe1:	or     DWORD PTR [ebp-0x24],0xffffffff
1004bbe5:	or     DWORD PTR [ebp-0x20],0xffffffff
1004bbe9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004bbf0:	call   0x1004bc01
1004bbf5:	mov    eax,DWORD PTR [ebp-0x24]
1004bbf8:	mov    edx,DWORD PTR [ebp-0x20]
1004bbfb:	call   0x10045a29
1004bc00:	ret    
1004bc01:	push   DWORD PTR [ebp+0x8]
1004bc04:	call   0x1004e146
1004bc09:	pop    ecx
1004bc0a:	ret    
1004bc0b:	push   ebp
1004bc0c:	lea    ebp,[esp-0x518]
1004bc13:	sub    esp,0x594
1004bc19:	mov    eax,ds:0x1007d030
1004bc1e:	xor    eax,ebp
1004bc20:	mov    DWORD PTR [ebp+0x514],eax
1004bc26:	mov    eax,DWORD PTR [ebp+0x524]
1004bc2c:	push   esi
1004bc2d:	xor    esi,esi
1004bc2f:	cmp    DWORD PTR [ebp+0x528],esi
1004bc35:	mov    DWORD PTR [ebp-0x64],eax
1004bc38:	mov    DWORD PTR [ebp-0x60],esi
1004bc3b:	mov    DWORD PTR [ebp-0x68],esi
1004bc3e:	jne    0x1004bc47
1004bc40:	xor    eax,eax
1004bc42:	jmp    0x1004c1bb
1004bc47:	cmp    eax,esi
1004bc49:	jne    0x1004bc72
1004bc4b:	call   0x100458b8
1004bc50:	mov    DWORD PTR [eax],esi
1004bc52:	call   0x100458a5
1004bc57:	push   esi
1004bc58:	push   esi
1004bc59:	push   esi
1004bc5a:	push   esi
1004bc5b:	push   esi
1004bc5c:	mov    DWORD PTR [eax],0x16
1004bc62:	call   0x1004228c
1004bc67:	add    esp,0x14
1004bc6a:	or     eax,0xffffffff
1004bc6d:	jmp    0x1004c1bb
1004bc72:	mov    esi,DWORD PTR [ebp+0x520]
1004bc78:	push   ebx
1004bc79:	mov    ebx,esi
1004bc7b:	and    ebx,0x1f
1004bc7e:	imul   ebx,ebx,0x28
1004bc81:	mov    eax,esi
1004bc83:	sar    eax,0x5
1004bc86:	push   edi
1004bc87:	lea    edi,[eax*4+0x10081460]
1004bc8e:	mov    eax,DWORD PTR [edi]
1004bc90:	add    eax,ebx
1004bc92:	mov    cl,BYTE PTR [eax+0x24]
1004bc95:	add    cl,cl
1004bc97:	sar    cl,1
1004bc99:	cmp    cl,0x2
1004bc9c:	mov    DWORD PTR [ebp-0x70],edi
1004bc9f:	mov    BYTE PTR [ebp-0x55],cl
1004bca2:	je     0x1004bca9
1004bca4:	cmp    cl,0x1
1004bca7:	jne    0x1004bcdc
1004bca9:	mov    ecx,DWORD PTR [ebp+0x528]
1004bcaf:	not    ecx
1004bcb1:	test   cl,0x1
1004bcb4:	jne    0x1004bcdc
1004bcb6:	call   0x100458b8
1004bcbb:	xor    esi,esi
1004bcbd:	mov    DWORD PTR [eax],esi
1004bcbf:	call   0x100458a5
1004bcc4:	push   esi
1004bcc5:	push   esi
1004bcc6:	push   esi
1004bcc7:	push   esi
1004bcc8:	push   esi
1004bcc9:	mov    DWORD PTR [eax],0x16
1004bccf:	call   0x1004228c
1004bcd4:	add    esp,0x14
1004bcd7:	jmp    0x1004c1b1
1004bcdc:	test   BYTE PTR [eax+0x4],0x20
1004bce0:	je     0x1004bcf1
1004bce2:	push   0x2
1004bce4:	push   0x0
1004bce6:	push   0x0
1004bce8:	push   esi
1004bce9:	call   0x1004ba6f
1004bcee:	add    esp,0x10
1004bcf1:	push   esi
1004bcf2:	call   0x1004c2f1
1004bcf7:	test   eax,eax
1004bcf9:	pop    ecx
1004bcfa:	je     0x1004bef6
1004bd00:	mov    eax,DWORD PTR [edi]
1004bd02:	test   BYTE PTR [ebx+eax*1+0x4],0x80
1004bd07:	je     0x1004bef6
1004bd0d:	call   0x10045e4c
1004bd12:	mov    eax,DWORD PTR [eax+0x6c]
1004bd15:	xor    ecx,ecx
1004bd17:	cmp    DWORD PTR [eax+0x14],ecx
1004bd1a:	lea    eax,[ebp-0x7c]
1004bd1d:	sete   cl
1004bd20:	push   eax
1004bd21:	mov    eax,DWORD PTR [edi]
1004bd23:	push   DWORD PTR [ebx+eax*1]
1004bd26:	mov    esi,ecx
1004bd28:	call   DWORD PTR ds:0x10065240
1004bd2e:	test   eax,eax
1004bd30:	je     0x1004bef6
1004bd36:	test   esi,esi
1004bd38:	je     0x1004bd44
1004bd3a:	cmp    BYTE PTR [ebp-0x55],0x0
1004bd3e:	je     0x1004bef6
1004bd44:	call   DWORD PTR ds:0x1006523c
1004bd4a:	and    DWORD PTR [ebp-0x50],0x0
1004bd4e:	cmp    DWORD PTR [ebp+0x528],0x0
1004bd55:	mov    esi,DWORD PTR [ebp-0x64]
1004bd58:	mov    DWORD PTR [ebp-0x7c],eax
1004bd5b:	mov    DWORD PTR [ebp-0x74],esi
1004bd5e:	jbe    0x1004c163
1004bd64:	and    DWORD PTR [ebp-0x5c],0x0
1004bd68:	jmp    0x1004bd6d
1004bd6a:	mov    esi,DWORD PTR [ebp-0x74]
1004bd6d:	mov    al,BYTE PTR [ebp-0x55]
1004bd70:	test   al,al
1004bd72:	jne    0x1004be7e
1004bd78:	mov    al,BYTE PTR [esi]
1004bd7a:	xor    ecx,ecx
1004bd7c:	cmp    al,0xa
1004bd7e:	sete   cl
1004bd81:	movsx  eax,al
1004bd84:	push   eax
1004bd85:	mov    DWORD PTR [ebp-0x78],ecx
1004bd88:	call   0x10048c15
1004bd8d:	test   eax,eax
1004bd8f:	pop    ecx
1004bd90:	jne    0x1004bdac
1004bd92:	push   0x1
1004bd94:	lea    eax,[ebp-0x54]
1004bd97:	push   esi
1004bd98:	push   eax
1004bd99:	call   0x1004d1ed
1004bd9e:	add    esp,0xc
1004bda1:	cmp    eax,0xffffffff
1004bda4:	je     0x1004c159
1004bdaa:	jmp    0x1004bddc
1004bdac:	mov    eax,DWORD PTR [ebp-0x64]
1004bdaf:	sub    eax,esi
1004bdb1:	add    eax,DWORD PTR [ebp+0x528]
1004bdb7:	cmp    eax,0x1
1004bdba:	jbe    0x1004c159
1004bdc0:	push   0x2
1004bdc2:	lea    eax,[ebp-0x54]
1004bdc5:	push   esi
1004bdc6:	push   eax
1004bdc7:	call   0x1004d1ed
1004bdcc:	add    esp,0xc
1004bdcf:	cmp    eax,0xffffffff
1004bdd2:	je     0x1004c159
1004bdd8:	inc    esi
1004bdd9:	inc    DWORD PTR [ebp-0x5c]
1004bddc:	xor    eax,eax
1004bdde:	push   eax
1004bddf:	push   eax
1004bde0:	push   0x5
1004bde2:	lea    ecx,[ebp+0x50c]
1004bde8:	push   ecx
1004bde9:	push   0x1
1004bdeb:	lea    ecx,[ebp-0x54]
1004bdee:	push   ecx
1004bdef:	push   eax
1004bdf0:	push   DWORD PTR [ebp-0x7c]
1004bdf3:	inc    esi
1004bdf4:	inc    DWORD PTR [ebp-0x5c]
1004bdf7:	mov    DWORD PTR [ebp-0x74],esi
1004bdfa:	call   DWORD PTR ds:0x100650dc
1004be00:	mov    esi,eax
1004be02:	test   esi,esi
1004be04:	je     0x1004c159
1004be0a:	push   0x0
1004be0c:	lea    eax,[ebp-0x50]
1004be0f:	push   eax
1004be10:	push   esi
1004be11:	lea    eax,[ebp+0x50c]
1004be17:	push   eax
1004be18:	mov    eax,DWORD PTR [edi]
1004be1a:	push   DWORD PTR [ebx+eax*1]
1004be1d:	call   DWORD PTR ds:0x100650b4
1004be23:	test   eax,eax
1004be25:	je     0x1004c150
1004be2b:	mov    eax,DWORD PTR [ebp-0x50]
1004be2e:	add    DWORD PTR [ebp-0x60],eax
1004be31:	cmp    eax,esi
1004be33:	jl     0x1004c159
1004be39:	cmp    DWORD PTR [ebp-0x78],0x0
1004be3d:	je     0x1004bee2
1004be43:	push   0x0
1004be45:	lea    eax,[ebp-0x50]
1004be48:	push   eax
1004be49:	push   0x1
1004be4b:	lea    eax,[ebp+0x50c]
1004be51:	push   eax
1004be52:	mov    eax,DWORD PTR [edi]
1004be54:	mov    BYTE PTR [ebp+0x50c],0xd
1004be5b:	push   DWORD PTR [ebx+eax*1]
1004be5e:	call   DWORD PTR ds:0x100650b4
1004be64:	test   eax,eax
1004be66:	je     0x1004c150
1004be6c:	cmp    DWORD PTR [ebp-0x50],0x1
1004be70:	jl     0x1004c159
1004be76:	inc    DWORD PTR [ebp-0x68]
1004be79:	inc    DWORD PTR [ebp-0x60]
1004be7c:	jmp    0x1004bee2
1004be7e:	cmp    al,0x1
1004be80:	je     0x1004be86
1004be82:	cmp    al,0x2
1004be84:	jne    0x1004bea1
1004be86:	movzx  ecx,WORD PTR [esi]
1004be89:	xor    edx,edx
1004be8b:	cmp    cx,0xa
1004be8f:	sete   dl
1004be92:	inc    esi
1004be93:	inc    esi
1004be94:	add    DWORD PTR [ebp-0x5c],0x2
1004be98:	mov    DWORD PTR [ebp-0x54],ecx
1004be9b:	mov    DWORD PTR [ebp-0x74],esi
1004be9e:	mov    DWORD PTR [ebp-0x78],edx
1004bea1:	cmp    al,0x1
1004bea3:	je     0x1004bea9
1004bea5:	cmp    al,0x2
1004bea7:	jne    0x1004bee2
1004bea9:	push   DWORD PTR [ebp-0x54]
1004beac:	call   0x1004e307
1004beb1:	cmp    ax,WORD PTR [ebp-0x54]
1004beb5:	pop    ecx
1004beb6:	jne    0x1004c150
1004bebc:	inc    DWORD PTR [ebp-0x60]
1004bebf:	cmp    DWORD PTR [ebp-0x78],0x0
1004bec3:	je     0x1004bee2
1004bec5:	push   0xd
1004bec7:	pop    eax
1004bec8:	push   eax
1004bec9:	mov    DWORD PTR [ebp-0x54],eax
1004becc:	call   0x1004e307
1004bed1:	cmp    ax,WORD PTR [ebp-0x54]
1004bed5:	pop    ecx
1004bed6:	jne    0x1004c150
1004bedc:	inc    DWORD PTR [ebp-0x60]
1004bedf:	inc    DWORD PTR [ebp-0x68]
1004bee2:	mov    eax,DWORD PTR [ebp+0x528]
1004bee8:	cmp    DWORD PTR [ebp-0x5c],eax
1004beeb:	jb     0x1004bd6a
1004bef1:	jmp    0x1004c159
1004bef6:	mov    eax,DWORD PTR [edi]
1004bef8:	add    eax,ebx
1004befa:	test   BYTE PTR [eax+0x4],0x80
1004befe:	je     0x1004c129
1004bf04:	mov    eax,DWORD PTR [ebp-0x64]
1004bf07:	xor    esi,esi
1004bf09:	cmp    BYTE PTR [ebp-0x55],0x0
1004bf0d:	mov    DWORD PTR [ebp-0x54],esi
1004bf10:	jne    0x1004bfa7
1004bf16:	cmp    DWORD PTR [ebp+0x528],esi
1004bf1c:	mov    DWORD PTR [ebp-0x50],eax
1004bf1f:	jbe    0x1004c18a
1004bf25:	mov    ecx,DWORD PTR [ebp-0x50]
1004bf28:	and    DWORD PTR [ebp-0x5c],0x0
1004bf2c:	sub    ecx,DWORD PTR [ebp-0x64]
1004bf2f:	lea    eax,[ebp-0x4c]
1004bf32:	cmp    ecx,DWORD PTR [ebp+0x528]
1004bf38:	jae    0x1004bf61
1004bf3a:	mov    edx,DWORD PTR [ebp-0x50]
1004bf3d:	inc    DWORD PTR [ebp-0x50]
1004bf40:	mov    dl,BYTE PTR [edx]
1004bf42:	inc    ecx
1004bf43:	cmp    dl,0xa
1004bf46:	jne    0x1004bf52
1004bf48:	inc    DWORD PTR [ebp-0x68]
1004bf4b:	mov    BYTE PTR [eax],0xd
1004bf4e:	inc    eax
1004bf4f:	inc    DWORD PTR [ebp-0x5c]
1004bf52:	mov    BYTE PTR [eax],dl
1004bf54:	inc    eax
1004bf55:	inc    DWORD PTR [ebp-0x5c]
1004bf58:	cmp    DWORD PTR [ebp-0x5c],0x400
1004bf5f:	jb     0x1004bf32
1004bf61:	mov    esi,eax
1004bf63:	lea    eax,[ebp-0x4c]
1004bf66:	sub    esi,eax
1004bf68:	push   0x0
1004bf6a:	lea    eax,[ebp-0x6c]
1004bf6d:	push   eax
1004bf6e:	push   esi
1004bf6f:	lea    eax,[ebp-0x4c]
1004bf72:	push   eax
1004bf73:	mov    eax,DWORD PTR [edi]
1004bf75:	push   DWORD PTR [ebx+eax*1]
1004bf78:	call   DWORD PTR ds:0x100650b4
1004bf7e:	test   eax,eax
1004bf80:	je     0x1004c150
1004bf86:	mov    eax,DWORD PTR [ebp-0x6c]
1004bf89:	add    DWORD PTR [ebp-0x60],eax
1004bf8c:	cmp    eax,esi
1004bf8e:	jl     0x1004c159
1004bf94:	mov    eax,DWORD PTR [ebp-0x50]
1004bf97:	sub    eax,DWORD PTR [ebp-0x64]
1004bf9a:	cmp    eax,DWORD PTR [ebp+0x528]
1004bfa0:	jb     0x1004bf25
1004bfa2:	jmp    0x1004c159
1004bfa7:	cmp    BYTE PTR [ebp-0x55],0x2
1004bfab:	jne    0x1004c04e
1004bfb1:	cmp    DWORD PTR [ebp+0x528],esi
1004bfb7:	mov    DWORD PTR [ebp-0x50],eax
1004bfba:	jbe    0x1004c18a
1004bfc0:	mov    ecx,DWORD PTR [ebp-0x50]
1004bfc3:	xor    esi,esi
1004bfc5:	sub    ecx,DWORD PTR [ebp-0x64]
1004bfc8:	lea    eax,[ebp-0x4c]
1004bfcb:	cmp    ecx,DWORD PTR [ebp+0x528]
1004bfd1:	jae    0x1004c004
1004bfd3:	mov    edx,DWORD PTR [ebp-0x50]
1004bfd6:	add    DWORD PTR [ebp-0x50],0x2
1004bfda:	movzx  edx,WORD PTR [edx]
1004bfdd:	inc    ecx
1004bfde:	inc    ecx
1004bfdf:	cmp    dx,0xa
1004bfe3:	jne    0x1004bff2
1004bfe5:	add    DWORD PTR [ebp-0x68],0x2
1004bfe9:	mov    WORD PTR [eax],0xd
1004bfee:	inc    eax
1004bfef:	inc    eax
1004bff0:	inc    esi
1004bff1:	inc    esi
1004bff2:	mov    edi,DWORD PTR [ebp-0x70]
1004bff5:	mov    WORD PTR [eax],dx
1004bff8:	inc    eax
1004bff9:	inc    eax
1004bffa:	inc    esi
1004bffb:	inc    esi
1004bffc:	cmp    esi,0x3ff
1004c002:	jb     0x1004bfcb
1004c004:	mov    esi,eax
1004c006:	lea    eax,[ebp-0x4c]
1004c009:	sub    esi,eax
1004c00b:	push   0x0
1004c00d:	lea    eax,[ebp-0x6c]
1004c010:	push   eax
1004c011:	push   esi
1004c012:	lea    eax,[ebp-0x4c]
1004c015:	push   eax
1004c016:	mov    eax,DWORD PTR [edi]
1004c018:	push   DWORD PTR [ebx+eax*1]
1004c01b:	call   DWORD PTR ds:0x100650b4
1004c021:	test   eax,eax
1004c023:	je     0x1004c150
1004c029:	mov    eax,DWORD PTR [ebp-0x6c]
1004c02c:	add    DWORD PTR [ebp-0x60],eax
1004c02f:	cmp    eax,esi
1004c031:	jl     0x1004c159
1004c037:	mov    eax,DWORD PTR [ebp-0x50]
1004c03a:	sub    eax,DWORD PTR [ebp-0x64]
1004c03d:	cmp    eax,DWORD PTR [ebp+0x528]
1004c043:	jb     0x1004bfc0
1004c049:	jmp    0x1004c159
1004c04e:	cmp    DWORD PTR [ebp+0x528],esi
1004c054:	mov    DWORD PTR [ebp-0x5c],eax
1004c057:	jbe    0x1004c18a
1004c05d:	mov    ecx,DWORD PTR [ebp-0x5c]
1004c060:	and    DWORD PTR [ebp-0x50],0x0
1004c064:	sub    ecx,DWORD PTR [ebp-0x64]
1004c067:	push   0x2
1004c069:	lea    eax,[ebp+0x3b8]
1004c06f:	pop    esi
1004c070:	cmp    ecx,DWORD PTR [ebp+0x528]
1004c076:	jae    0x1004c0a4
1004c078:	mov    edx,DWORD PTR [ebp-0x5c]
1004c07b:	movzx  edx,WORD PTR [edx]
1004c07e:	add    DWORD PTR [ebp-0x5c],esi
1004c081:	add    ecx,esi
1004c083:	cmp    dx,0xa
1004c087:	jne    0x1004c093
1004c089:	mov    WORD PTR [eax],0xd
1004c08e:	add    eax,esi
1004c090:	add    DWORD PTR [ebp-0x50],esi
1004c093:	add    DWORD PTR [ebp-0x50],esi
1004c096:	mov    WORD PTR [eax],dx
1004c099:	add    eax,esi
1004c09b:	cmp    DWORD PTR [ebp-0x50],0x152
1004c0a2:	jb     0x1004c070
1004c0a4:	xor    esi,esi
1004c0a6:	push   esi
1004c0a7:	push   esi
1004c0a8:	push   0x2ab
1004c0ad:	lea    ecx,[ebp+0x108]
1004c0b3:	push   ecx
1004c0b4:	lea    ecx,[ebp+0x3b8]
1004c0ba:	sub    eax,ecx
1004c0bc:	cdq    
1004c0bd:	sub    eax,edx
1004c0bf:	sar    eax,1
1004c0c1:	push   eax
1004c0c2:	mov    eax,ecx
1004c0c4:	push   eax
1004c0c5:	push   esi
1004c0c6:	push   0xfde9
1004c0cb:	call   DWORD PTR ds:0x100650dc
1004c0d1:	mov    edi,eax
1004c0d3:	cmp    edi,esi
1004c0d5:	je     0x1004c150
1004c0d7:	push   0x0
1004c0d9:	lea    eax,[ebp-0x6c]
1004c0dc:	push   eax
1004c0dd:	mov    eax,edi
1004c0df:	sub    eax,esi
1004c0e1:	push   eax
1004c0e2:	lea    eax,[ebp+esi*1+0x108]
1004c0e9:	push   eax
1004c0ea:	mov    eax,DWORD PTR [ebp-0x70]
1004c0ed:	mov    eax,DWORD PTR [eax]
1004c0ef:	push   DWORD PTR [ebx+eax*1]
1004c0f2:	call   DWORD PTR ds:0x100650b4
1004c0f8:	test   eax,eax
1004c0fa:	je     0x1004c105
1004c0fc:	add    esi,DWORD PTR [ebp-0x6c]
1004c0ff:	cmp    edi,esi
1004c101:	jg     0x1004c0d7
1004c103:	jmp    0x1004c10e
1004c105:	call   DWORD PTR ds:0x100650c4
1004c10b:	mov    DWORD PTR [ebp-0x54],eax
1004c10e:	cmp    edi,esi
1004c110:	jg     0x1004c159
1004c112:	mov    eax,DWORD PTR [ebp-0x5c]
1004c115:	sub    eax,DWORD PTR [ebp-0x64]
1004c118:	cmp    eax,DWORD PTR [ebp+0x528]
1004c11e:	mov    DWORD PTR [ebp-0x60],eax
1004c121:	jb     0x1004c05d
1004c127:	jmp    0x1004c159
1004c129:	push   0x0
1004c12b:	lea    ecx,[ebp-0x6c]
1004c12e:	push   ecx
1004c12f:	push   DWORD PTR [ebp+0x528]
1004c135:	push   DWORD PTR [ebp-0x64]
1004c138:	push   DWORD PTR [eax]
1004c13a:	call   DWORD PTR ds:0x100650b4
1004c140:	test   eax,eax
1004c142:	je     0x1004c150
1004c144:	mov    eax,DWORD PTR [ebp-0x6c]
1004c147:	and    DWORD PTR [ebp-0x54],0x0
1004c14b:	mov    DWORD PTR [ebp-0x60],eax
1004c14e:	jmp    0x1004c159
1004c150:	call   DWORD PTR ds:0x100650c4
1004c156:	mov    DWORD PTR [ebp-0x54],eax
1004c159:	mov    eax,DWORD PTR [ebp-0x60]
1004c15c:	test   eax,eax
1004c15e:	jne    0x1004c1b6
1004c160:	mov    edi,DWORD PTR [ebp-0x70]
1004c163:	xor    esi,esi
1004c165:	cmp    DWORD PTR [ebp-0x54],esi
1004c168:	je     0x1004c18a
1004c16a:	push   0x5
1004c16c:	pop    esi
1004c16d:	cmp    DWORD PTR [ebp-0x54],esi
1004c170:	jne    0x1004c17f
1004c172:	call   0x100458a5
1004c177:	mov    DWORD PTR [eax],0x9
1004c17d:	jmp    0x1004c1aa
1004c17f:	push   DWORD PTR [ebp-0x54]
1004c182:	call   0x100458cb
1004c187:	pop    ecx
1004c188:	jmp    0x1004c1b1
1004c18a:	mov    eax,DWORD PTR [edi]
1004c18c:	test   BYTE PTR [ebx+eax*1+0x4],0x40
1004c191:	je     0x1004c19f
1004c193:	mov    eax,DWORD PTR [ebp-0x64]
1004c196:	cmp    BYTE PTR [eax],0x1a
1004c199:	jne    0x1004c19f
1004c19b:	xor    eax,eax
1004c19d:	jmp    0x1004c1b9
1004c19f:	call   0x100458a5
1004c1a4:	mov    DWORD PTR [eax],0x1c
1004c1aa:	call   0x100458b8
1004c1af:	mov    DWORD PTR [eax],esi
1004c1b1:	or     eax,0xffffffff
1004c1b4:	jmp    0x1004c1b9
1004c1b6:	sub    eax,DWORD PTR [ebp-0x68]
1004c1b9:	pop    edi
1004c1ba:	pop    ebx
1004c1bb:	mov    ecx,DWORD PTR [ebp+0x514]
1004c1c1:	xor    ecx,ebp
1004c1c3:	pop    esi
1004c1c4:	call   0x10041d97
1004c1c9:	add    ebp,0x518
1004c1cf:	leave  
1004c1d0:	ret    
1004c1d1:	push   0x10
1004c1d3:	push   0x10073428
1004c1d8:	call   0x100459e4
1004c1dd:	mov    eax,DWORD PTR [ebp+0x8]
1004c1e0:	cmp    eax,0xfffffffe
1004c1e3:	jne    0x1004c200
1004c1e5:	call   0x100458b8
1004c1ea:	and    DWORD PTR [eax],0x0
1004c1ed:	call   0x100458a5
1004c1f2:	mov    DWORD PTR [eax],0x9
1004c1f8:	or     eax,0xffffffff
1004c1fb:	jmp    0x1004c29d
1004c200:	xor    edi,edi
1004c202:	cmp    eax,edi
1004c204:	jl     0x1004c20e
1004c206:	cmp    eax,DWORD PTR ds:0x10081444
1004c20c:	jb     0x1004c22f
1004c20e:	call   0x100458b8
1004c213:	mov    DWORD PTR [eax],edi
1004c215:	call   0x100458a5
1004c21a:	mov    DWORD PTR [eax],0x9
1004c220:	push   edi
1004c221:	push   edi
1004c222:	push   edi
1004c223:	push   edi
1004c224:	push   edi
1004c225:	call   0x1004228c
1004c22a:	add    esp,0x14
1004c22d:	jmp    0x1004c1f8
1004c22f:	mov    ecx,eax
1004c231:	sar    ecx,0x5
1004c234:	lea    ebx,[ecx*4+0x10081460]
1004c23b:	mov    esi,eax
1004c23d:	and    esi,0x1f
1004c240:	imul   esi,esi,0x28
1004c243:	mov    ecx,DWORD PTR [ebx]
1004c245:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
1004c24a:	and    ecx,0x1
1004c24d:	je     0x1004c20e
1004c24f:	push   eax
1004c250:	call   0x1004e0a6
1004c255:	pop    ecx
1004c256:	mov    DWORD PTR [ebp-0x4],edi
1004c259:	mov    eax,DWORD PTR [ebx]
1004c25b:	test   BYTE PTR [eax+esi*1+0x4],0x1
1004c260:	je     0x1004c278
1004c262:	push   DWORD PTR [ebp+0x10]
1004c265:	push   DWORD PTR [ebp+0xc]
1004c268:	push   DWORD PTR [ebp+0x8]
1004c26b:	call   0x1004bc0b
1004c270:	add    esp,0xc
1004c273:	mov    DWORD PTR [ebp-0x1c],eax
1004c276:	jmp    0x1004c28e
1004c278:	call   0x100458a5
1004c27d:	mov    DWORD PTR [eax],0x9
1004c283:	call   0x100458b8
1004c288:	mov    DWORD PTR [eax],edi
1004c28a:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004c28e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004c295:	call   0x1004c2a3
1004c29a:	mov    eax,DWORD PTR [ebp-0x1c]
1004c29d:	call   0x10045a29
1004c2a2:	ret    
1004c2a3:	push   DWORD PTR [ebp+0x8]
1004c2a6:	call   0x1004e146
1004c2ab:	pop    ecx
1004c2ac:	ret    
1004c2ad:	inc    DWORD PTR ds:0x1007f468
1004c2b3:	push   0x1000
1004c2b8:	call   0x10046172
1004c2bd:	test   eax,eax
1004c2bf:	pop    ecx
1004c2c0:	mov    ecx,DWORD PTR [esp+0x4]
1004c2c4:	mov    DWORD PTR [ecx+0x8],eax
1004c2c7:	je     0x1004c2d6
1004c2c9:	or     DWORD PTR [ecx+0xc],0x8
1004c2cd:	mov    DWORD PTR [ecx+0x18],0x1000
1004c2d4:	jmp    0x1004c2e7
1004c2d6:	or     DWORD PTR [ecx+0xc],0x4
1004c2da:	lea    eax,[ecx+0x14]
1004c2dd:	mov    DWORD PTR [ecx+0x8],eax
1004c2e0:	mov    DWORD PTR [ecx+0x18],0x2
1004c2e7:	mov    eax,DWORD PTR [ecx+0x8]
1004c2ea:	and    DWORD PTR [ecx+0x4],0x0
1004c2ee:	mov    DWORD PTR [ecx],eax
1004c2f0:	ret    
1004c2f1:	mov    eax,DWORD PTR [esp+0x4]
1004c2f5:	cmp    eax,0xfffffffe
1004c2f8:	jne    0x1004c308
1004c2fa:	call   0x100458a5
1004c2ff:	mov    DWORD PTR [eax],0x9
1004c305:	xor    eax,eax
1004c307:	ret    
1004c308:	push   esi
1004c309:	xor    esi,esi
1004c30b:	cmp    eax,esi
1004c30d:	jl     0x1004c317
1004c30f:	cmp    eax,DWORD PTR ds:0x10081444
1004c315:	jb     0x1004c333
1004c317:	call   0x100458a5
1004c31c:	push   esi
1004c31d:	push   esi
1004c31e:	push   esi
1004c31f:	push   esi
1004c320:	push   esi
1004c321:	mov    DWORD PTR [eax],0x9
1004c327:	call   0x1004228c
1004c32c:	add    esp,0x14
1004c32f:	xor    eax,eax
1004c331:	pop    esi
1004c332:	ret    
1004c333:	mov    ecx,eax
1004c335:	and    eax,0x1f
1004c338:	imul   eax,eax,0x28
1004c33b:	sar    ecx,0x5
1004c33e:	mov    ecx,DWORD PTR [ecx*4+0x10081460]
1004c345:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
1004c34a:	and    eax,0x40
1004c34d:	pop    esi
1004c34e:	ret    
1004c34f:	mov    eax,0x1007dbb0
1004c354:	ret    
1004c355:	mov    eax,ds:0x10081440
1004c35a:	test   eax,eax
1004c35c:	push   esi
1004c35d:	push   0x14
1004c35f:	pop    esi
1004c360:	jne    0x1004c369
1004c362:	mov    eax,0x200
1004c367:	jmp    0x1004c36f
1004c369:	cmp    eax,esi
1004c36b:	jge    0x1004c374
1004c36d:	mov    eax,esi
1004c36f:	mov    ds:0x10081440,eax
1004c374:	push   0x4
1004c376:	push   eax
1004c377:	call   0x100461b2
1004c37c:	test   eax,eax
1004c37e:	pop    ecx
1004c37f:	pop    ecx
1004c380:	mov    ds:0x10080420,eax
1004c385:	jne    0x1004c3a5
1004c387:	push   0x4
1004c389:	push   esi
1004c38a:	mov    DWORD PTR ds:0x10081440,esi
1004c390:	call   0x100461b2
1004c395:	test   eax,eax
1004c397:	pop    ecx
1004c398:	pop    ecx
1004c399:	mov    ds:0x10080420,eax
1004c39e:	jne    0x1004c3a5
1004c3a0:	push   0x1a
1004c3a2:	pop    eax
1004c3a3:	pop    esi
1004c3a4:	ret    
1004c3a5:	xor    edx,edx
1004c3a7:	mov    ecx,0x1007dbb0
1004c3ac:	jmp    0x1004c3b3
1004c3ae:	mov    eax,ds:0x10080420
1004c3b3:	mov    DWORD PTR [edx+eax*1],ecx
1004c3b6:	add    ecx,0x20
1004c3b9:	add    edx,0x4
1004c3bc:	cmp    ecx,0x1007de30
1004c3c2:	jl     0x1004c3ae
1004c3c4:	push   0xfffffffe
1004c3c6:	pop    esi
1004c3c7:	xor    edx,edx
1004c3c9:	mov    ecx,0x1007dbc0
1004c3ce:	push   edi
1004c3cf:	mov    edi,edx
1004c3d1:	and    edi,0x1f
1004c3d4:	imul   edi,edi,0x28
1004c3d7:	mov    eax,edx
1004c3d9:	sar    eax,0x5
1004c3dc:	mov    eax,DWORD PTR [eax*4+0x10081460]
1004c3e3:	mov    eax,DWORD PTR [edi+eax*1]
1004c3e6:	cmp    eax,0xffffffff
1004c3e9:	je     0x1004c3f3
1004c3eb:	cmp    eax,esi
1004c3ed:	je     0x1004c3f3
1004c3ef:	test   eax,eax
1004c3f1:	jne    0x1004c3f5
1004c3f3:	mov    DWORD PTR [ecx],esi
1004c3f5:	add    ecx,0x20
1004c3f8:	inc    edx
1004c3f9:	cmp    ecx,0x1007dc20
1004c3ff:	jl     0x1004c3cf
1004c401:	pop    edi
1004c402:	xor    eax,eax
1004c404:	pop    esi
1004c405:	ret    
1004c406:	call   0x1004e5e6
1004c40b:	cmp    BYTE PTR ds:0x1007ee00,0x0
1004c412:	je     0x1004c419
1004c414:	call   0x1004e3c9
1004c419:	push   DWORD PTR ds:0x10080420
1004c41f:	call   0x10042408
1004c424:	pop    ecx
1004c425:	ret    
1004c426:	mov    eax,DWORD PTR [esp+0x4]
1004c42a:	mov    ecx,0x1007dbb0
1004c42f:	cmp    eax,ecx
1004c431:	jb     0x1004c44a
1004c433:	cmp    eax,0x1007de10
1004c438:	ja     0x1004c44a
1004c43a:	sub    eax,ecx
1004c43c:	sar    eax,0x5
1004c43f:	add    eax,0x10
1004c442:	push   eax
1004c443:	call   0x100469ed
1004c448:	pop    ecx
1004c449:	ret    
1004c44a:	add    eax,0x20
1004c44d:	push   eax
1004c44e:	call   DWORD PTR ds:0x100650f0
1004c454:	ret    
1004c455:	mov    eax,DWORD PTR [esp+0x4]
1004c459:	cmp    eax,0x14
1004c45c:	jge    0x1004c469
1004c45e:	add    eax,0x10
1004c461:	push   eax
1004c462:	call   0x100469ed
1004c467:	pop    ecx
1004c468:	ret    
1004c469:	mov    eax,DWORD PTR [esp+0x8]
1004c46d:	add    eax,0x20
1004c470:	push   eax
1004c471:	call   DWORD PTR ds:0x100650f0
1004c477:	ret    
1004c478:	mov    eax,DWORD PTR [esp+0x4]
1004c47c:	mov    ecx,0x1007dbb0
1004c481:	cmp    eax,ecx
1004c483:	jb     0x1004c49c
1004c485:	cmp    eax,0x1007de10
1004c48a:	ja     0x1004c49c
1004c48c:	sub    eax,ecx
1004c48e:	sar    eax,0x5
1004c491:	add    eax,0x10
1004c494:	push   eax
1004c495:	call   0x10046915
1004c49a:	pop    ecx
1004c49b:	ret    
1004c49c:	add    eax,0x20
1004c49f:	push   eax
1004c4a0:	call   DWORD PTR ds:0x100650ec
1004c4a6:	ret    
1004c4a7:	mov    eax,DWORD PTR [esp+0x4]
1004c4ab:	cmp    eax,0x14
1004c4ae:	jge    0x1004c4bb
1004c4b0:	add    eax,0x10
1004c4b3:	push   eax
1004c4b4:	call   0x10046915
1004c4b9:	pop    ecx
1004c4ba:	ret    
1004c4bb:	mov    eax,DWORD PTR [esp+0x8]
1004c4bf:	add    eax,0x20
1004c4c2:	push   eax
1004c4c3:	call   DWORD PTR ds:0x100650ec
1004c4c9:	ret    
1004c4ca:	mov    eax,DWORD PTR [esp+0x4]
1004c4ce:	push   esi
1004c4cf:	xor    esi,esi
1004c4d1:	cmp    eax,esi
1004c4d3:	jne    0x1004c4f2
1004c4d5:	call   0x100458a5
1004c4da:	push   esi
1004c4db:	push   esi
1004c4dc:	push   esi
1004c4dd:	push   esi
1004c4de:	push   esi
1004c4df:	mov    DWORD PTR [eax],0x16
1004c4e5:	call   0x1004228c
1004c4ea:	add    esp,0x14
1004c4ed:	or     eax,0xffffffff
1004c4f0:	pop    esi
1004c4f1:	ret    
1004c4f2:	mov    eax,DWORD PTR [eax+0x10]
1004c4f5:	pop    esi
1004c4f6:	ret    
1004c4f7:	push   ebp
1004c4f8:	mov    ebp,esp
1004c4fa:	sub    esp,0x10
1004c4fd:	mov    eax,ds:0x1007d030
1004c502:	xor    eax,ebp
1004c504:	mov    DWORD PTR [ebp-0x4],eax
1004c507:	push   ebx
1004c508:	push   esi
1004c509:	mov    esi,DWORD PTR [ebp+0xc]
1004c50c:	test   BYTE PTR [esi+0xc],0x40
1004c510:	push   edi
1004c511:	jne    0x1004c6a6
1004c517:	push   esi
1004c518:	call   0x1004c4ca
1004c51d:	cmp    eax,0xffffffff
1004c520:	pop    ecx
1004c521:	mov    edi,0x1007d9d0
1004c526:	je     0x1004c556
1004c528:	push   esi
1004c529:	call   0x1004c4ca
1004c52e:	cmp    eax,0xfffffffe
1004c531:	pop    ecx
1004c532:	je     0x1004c556
1004c534:	push   esi
1004c535:	call   0x1004c4ca
1004c53a:	sar    eax,0x5
1004c53d:	push   esi
1004c53e:	lea    ebx,[eax*4+0x10081460]
1004c545:	call   0x1004c4ca
1004c54a:	and    eax,0x1f
1004c54d:	imul   eax,eax,0x28
1004c550:	add    eax,DWORD PTR [ebx]
1004c552:	pop    ecx
1004c553:	pop    ecx
1004c554:	jmp    0x1004c558
1004c556:	mov    eax,edi
1004c558:	mov    al,BYTE PTR [eax+0x24]
1004c55b:	and    al,0x7f
1004c55d:	cmp    al,0x2
1004c55f:	je     0x1004c6a6
1004c565:	push   esi
1004c566:	call   0x1004c4ca
1004c56b:	cmp    eax,0xffffffff
1004c56e:	pop    ecx
1004c56f:	je     0x1004c59f
1004c571:	push   esi
1004c572:	call   0x1004c4ca
1004c577:	cmp    eax,0xfffffffe
1004c57a:	pop    ecx
1004c57b:	je     0x1004c59f
1004c57d:	push   esi
1004c57e:	call   0x1004c4ca
1004c583:	sar    eax,0x5
1004c586:	push   esi
1004c587:	lea    ebx,[eax*4+0x10081460]
1004c58e:	call   0x1004c4ca
1004c593:	and    eax,0x1f
1004c596:	imul   eax,eax,0x28
1004c599:	add    eax,DWORD PTR [ebx]
1004c59b:	pop    ecx
1004c59c:	pop    ecx
1004c59d:	jmp    0x1004c5a1
1004c59f:	mov    eax,edi
1004c5a1:	mov    al,BYTE PTR [eax+0x24]
1004c5a4:	and    al,0x7f
1004c5a6:	cmp    al,0x1
1004c5a8:	jne    0x1004c606
1004c5aa:	dec    DWORD PTR [esi+0x4]
1004c5ad:	mov    ebx,DWORD PTR [ebp+0x8]
1004c5b0:	js     0x1004c5c0
1004c5b2:	mov    eax,DWORD PTR [esi]
1004c5b4:	mov    BYTE PTR [eax],bl
1004c5b6:	mov    ecx,DWORD PTR [esi]
1004c5b8:	movzx  eax,BYTE PTR [ecx]
1004c5bb:	inc    ecx
1004c5bc:	mov    DWORD PTR [esi],ecx
1004c5be:	jmp    0x1004c5cc
1004c5c0:	movsx  eax,bl
1004c5c3:	push   esi
1004c5c4:	push   eax
1004c5c5:	call   0x1004903c
1004c5ca:	pop    ecx
1004c5cb:	pop    ecx
1004c5cc:	cmp    eax,0xffffffff
1004c5cf:	jne    0x1004c5da
1004c5d1:	or     ax,0xffff
1004c5d5:	jmp    0x1004c6c6
1004c5da:	dec    DWORD PTR [esi+0x4]
1004c5dd:	js     0x1004c5ed
1004c5df:	mov    eax,DWORD PTR [esi]
1004c5e1:	mov    BYTE PTR [eax],bh
1004c5e3:	mov    ecx,DWORD PTR [esi]
1004c5e5:	movzx  eax,BYTE PTR [ecx]
1004c5e8:	inc    ecx
1004c5e9:	mov    DWORD PTR [esi],ecx
1004c5eb:	jmp    0x1004c5f9
1004c5ed:	movsx  eax,bh
1004c5f0:	push   esi
1004c5f1:	push   eax
1004c5f2:	call   0x1004903c
1004c5f7:	pop    ecx
1004c5f8:	pop    ecx
1004c5f9:	cmp    eax,0xffffffff
1004c5fc:	je     0x1004c5d1
1004c5fe:	mov    ax,bx
1004c601:	jmp    0x1004c6c6
1004c606:	push   esi
1004c607:	call   0x1004c4ca
1004c60c:	cmp    eax,0xffffffff
1004c60f:	pop    ecx
1004c610:	je     0x1004c640
1004c612:	push   esi
1004c613:	call   0x1004c4ca
1004c618:	cmp    eax,0xfffffffe
1004c61b:	pop    ecx
1004c61c:	je     0x1004c640
1004c61e:	push   esi
1004c61f:	call   0x1004c4ca
1004c624:	sar    eax,0x5
1004c627:	push   esi
1004c628:	lea    ebx,[eax*4+0x10081460]
1004c62f:	call   0x1004c4ca
1004c634:	and    eax,0x1f
1004c637:	imul   eax,eax,0x28
1004c63a:	add    eax,DWORD PTR [ebx]
1004c63c:	pop    ecx
1004c63d:	pop    ecx
1004c63e:	jmp    0x1004c642
1004c640:	mov    eax,edi
1004c642:	test   BYTE PTR [eax+0x4],0x80
1004c646:	je     0x1004c6a6
1004c648:	push   DWORD PTR [ebp+0x8]
1004c64b:	lea    eax,[ebp-0xc]
1004c64e:	push   0x5
1004c650:	push   eax
1004c651:	lea    eax,[ebp-0x10]
1004c654:	push   eax
1004c655:	call   0x1004e8be
1004c65a:	add    esp,0x10
1004c65d:	test   eax,eax
1004c65f:	jne    0x1004c5d1
1004c665:	xor    ebx,ebx
1004c667:	cmp    DWORD PTR [ebp-0x10],ebx
1004c66a:	jle    0x1004c6a0
1004c66c:	dec    DWORD PTR [esi+0x4]
1004c66f:	js     0x1004c683
1004c671:	mov    eax,DWORD PTR [esi]
1004c673:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
1004c677:	mov    BYTE PTR [eax],cl
1004c679:	mov    ecx,DWORD PTR [esi]
1004c67b:	movzx  eax,BYTE PTR [ecx]
1004c67e:	inc    ecx
1004c67f:	mov    DWORD PTR [esi],ecx
1004c681:	jmp    0x1004c691
1004c683:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
1004c688:	push   esi
1004c689:	push   eax
1004c68a:	call   0x1004903c
1004c68f:	pop    ecx
1004c690:	pop    ecx
1004c691:	cmp    eax,0xffffffff
1004c694:	je     0x1004c5d1
1004c69a:	inc    ebx
1004c69b:	cmp    ebx,DWORD PTR [ebp-0x10]
1004c69e:	jl     0x1004c66c
1004c6a0:	mov    ax,WORD PTR [ebp+0x8]
1004c6a4:	jmp    0x1004c6c6
1004c6a6:	add    DWORD PTR [esi+0x4],0xfffffffe
1004c6aa:	js     0x1004c6b9
1004c6ac:	mov    ecx,DWORD PTR [esi]
1004c6ae:	mov    eax,DWORD PTR [ebp+0x8]
1004c6b1:	mov    WORD PTR [ecx],ax
1004c6b4:	add    DWORD PTR [esi],0x2
1004c6b7:	jmp    0x1004c6c6
1004c6b9:	movzx  eax,WORD PTR [ebp+0x8]
1004c6bd:	push   esi
1004c6be:	push   eax
1004c6bf:	call   0x1004e5ef
1004c6c4:	pop    ecx
1004c6c5:	pop    ecx
1004c6c6:	mov    ecx,DWORD PTR [ebp-0x4]
1004c6c9:	pop    edi
1004c6ca:	pop    esi
1004c6cb:	xor    ecx,ebp
1004c6cd:	pop    ebx
1004c6ce:	call   0x10041d97
1004c6d3:	leave  
1004c6d4:	ret    
1004c6d5:	test   BYTE PTR [ecx+0xc],0x40
1004c6d9:	je     0x1004c6e1
1004c6db:	cmp    DWORD PTR [ecx+0x8],0x0
1004c6df:	je     0x1004c705
1004c6e1:	dec    DWORD PTR [ecx+0x4]
1004c6e4:	js     0x1004c6f1
1004c6e6:	mov    edx,DWORD PTR [ecx]
1004c6e8:	mov    BYTE PTR [edx],al
1004c6ea:	inc    DWORD PTR [ecx]
1004c6ec:	movzx  eax,al
1004c6ef:	jmp    0x1004c6fd
1004c6f1:	movsx  eax,al
1004c6f4:	push   ecx
1004c6f5:	push   eax
1004c6f6:	call   0x1004903c
1004c6fb:	pop    ecx
1004c6fc:	pop    ecx
1004c6fd:	cmp    eax,0xffffffff
1004c700:	jne    0x1004c705
1004c702:	or     DWORD PTR [esi],eax
1004c704:	ret    
1004c705:	inc    DWORD PTR [esi]
1004c707:	ret    
1004c708:	push   ebp
1004c709:	mov    ebp,esp
1004c70b:	push   esi
1004c70c:	mov    esi,eax
1004c70e:	jmp    0x1004c723
1004c710:	mov    ecx,DWORD PTR [ebp+0x10]
1004c713:	mov    al,BYTE PTR [ebp+0x8]
1004c716:	dec    DWORD PTR [ebp+0xc]
1004c719:	call   0x1004c6d5
1004c71e:	cmp    DWORD PTR [esi],0xffffffff
1004c721:	je     0x1004c729
1004c723:	cmp    DWORD PTR [ebp+0xc],0x0
1004c727:	jg     0x1004c710
1004c729:	pop    esi
1004c72a:	pop    ebp
1004c72b:	ret    
1004c72c:	push   ebp
1004c72d:	lea    ebp,[esp-0x1f8]
1004c734:	sub    esp,0x278
1004c73a:	mov    eax,ds:0x1007d030
1004c73f:	xor    eax,ebp
1004c741:	mov    DWORD PTR [ebp+0x1f4],eax
1004c747:	mov    eax,DWORD PTR [ebp+0x200]
1004c74d:	push   ebx
1004c74e:	mov    ebx,DWORD PTR [ebp+0x204]
1004c754:	push   esi
1004c755:	xor    esi,esi
1004c757:	push   edi
1004c758:	mov    edi,DWORD PTR [ebp+0x20c]
1004c75e:	push   DWORD PTR [ebp+0x208]
1004c764:	lea    ecx,[ebp-0x64]
1004c767:	mov    DWORD PTR [ebp-0x30],eax
1004c76a:	mov    DWORD PTR [ebp-0x2c],edi
1004c76d:	mov    DWORD PTR [ebp-0x4c],esi
1004c770:	mov    DWORD PTR [ebp-0x18],esi
1004c773:	mov    DWORD PTR [ebp-0x40],esi
1004c776:	mov    DWORD PTR [ebp-0x20],esi
1004c779:	mov    DWORD PTR [ebp-0x3c],esi
1004c77c:	mov    DWORD PTR [ebp-0x50],esi
1004c77f:	mov    DWORD PTR [ebp-0x44],esi
1004c782:	call   0x10044235
1004c787:	cmp    DWORD PTR [ebp-0x30],esi
1004c78a:	jne    0x1004c7b9
1004c78c:	call   0x100458a5
1004c791:	push   esi
1004c792:	push   esi
1004c793:	push   esi
1004c794:	push   esi
1004c795:	mov    DWORD PTR [eax],0x16
1004c79b:	push   esi
1004c79c:	call   0x1004228c
1004c7a1:	add    esp,0x14
1004c7a4:	cmp    BYTE PTR [ebp-0x58],0x0
1004c7a8:	je     0x1004c7b1
1004c7aa:	mov    eax,DWORD PTR [ebp-0x5c]
1004c7ad:	and    DWORD PTR [eax+0x70],0xfffffffd
1004c7b1:	or     eax,0xffffffff
1004c7b4:	jmp    0x1004d089
1004c7b9:	mov    eax,DWORD PTR [ebp-0x30]
1004c7bc:	test   BYTE PTR [eax+0xc],0x40
1004c7c0:	jne    0x1004c86a
1004c7c6:	push   eax
1004c7c7:	call   0x1004c4ca
1004c7cc:	cmp    eax,0xffffffff
1004c7cf:	pop    ecx
1004c7d0:	je     0x1004c808
1004c7d2:	push   DWORD PTR [ebp-0x30]
1004c7d5:	call   0x1004c4ca
1004c7da:	cmp    eax,0xfffffffe
1004c7dd:	pop    ecx
1004c7de:	je     0x1004c808
1004c7e0:	push   DWORD PTR [ebp-0x30]
1004c7e3:	call   0x1004c4ca
1004c7e8:	push   DWORD PTR [ebp-0x30]
1004c7eb:	sar    eax,0x5
1004c7ee:	lea    esi,[eax*4+0x10081460]
1004c7f5:	call   0x1004c4ca
1004c7fa:	and    eax,0x1f
1004c7fd:	imul   eax,eax,0x28
1004c800:	add    eax,DWORD PTR [esi]
1004c802:	pop    ecx
1004c803:	pop    ecx
1004c804:	xor    esi,esi
1004c806:	jmp    0x1004c80d
1004c808:	mov    eax,0x1007d9d0
1004c80d:	test   BYTE PTR [eax+0x24],0x7f
1004c811:	jne    0x1004c78c
1004c817:	push   DWORD PTR [ebp-0x30]
1004c81a:	call   0x1004c4ca
1004c81f:	cmp    eax,0xffffffff
1004c822:	pop    ecx
1004c823:	je     0x1004c85b
1004c825:	push   DWORD PTR [ebp-0x30]
1004c828:	call   0x1004c4ca
1004c82d:	cmp    eax,0xfffffffe
1004c830:	pop    ecx
1004c831:	je     0x1004c85b
1004c833:	push   DWORD PTR [ebp-0x30]
1004c836:	call   0x1004c4ca
1004c83b:	push   DWORD PTR [ebp-0x30]
1004c83e:	sar    eax,0x5
1004c841:	lea    esi,[eax*4+0x10081460]
1004c848:	call   0x1004c4ca
1004c84d:	and    eax,0x1f
1004c850:	imul   eax,eax,0x28
1004c853:	add    eax,DWORD PTR [esi]
1004c855:	pop    ecx
1004c856:	pop    ecx
1004c857:	xor    esi,esi
1004c859:	jmp    0x1004c860
1004c85b:	mov    eax,0x1007d9d0
1004c860:	test   BYTE PTR [eax+0x24],0x80
1004c864:	jne    0x1004c78c
1004c86a:	cmp    ebx,esi
1004c86c:	je     0x1004c78c
1004c872:	mov    dl,BYTE PTR [ebx]
1004c874:	xor    ecx,ecx
1004c876:	test   dl,dl
1004c878:	mov    DWORD PTR [ebp-0x34],esi
1004c87b:	mov    DWORD PTR [ebp-0x28],esi
1004c87e:	mov    DWORD PTR [ebp-0x54],esi
1004c881:	mov    BYTE PTR [ebp-0x19],dl
1004c884:	je     0x1004d079
1004c88a:	inc    ebx
1004c88b:	cmp    DWORD PTR [ebp-0x34],0x0
1004c88f:	mov    DWORD PTR [ebp-0x48],ebx
1004c892:	jl     0x1004d079
1004c898:	mov    al,dl
1004c89a:	sub    al,0x20
1004c89c:	cmp    al,0x58
1004c89e:	ja     0x1004c8b1
1004c8a0:	movsx  eax,dl
1004c8a3:	movzx  eax,BYTE PTR [eax+0x10066d90]
1004c8aa:	and    eax,0xf
1004c8ad:	xor    esi,esi
1004c8af:	jmp    0x1004c8b5
1004c8b1:	xor    esi,esi
1004c8b3:	xor    eax,eax
1004c8b5:	movsx  eax,BYTE PTR [ecx+eax*8+0x10066db0]
1004c8bd:	push   0x7
1004c8bf:	sar    eax,0x4
1004c8c2:	pop    ecx
1004c8c3:	cmp    eax,ecx
1004c8c5:	mov    DWORD PTR [ebp-0x74],eax
1004c8c8:	ja     0x1004d049
1004c8ce:	jmp    DWORD PTR [eax*4+0x1004d0a4]
1004c8d5:	or     DWORD PTR [ebp-0x20],0xffffffff
1004c8d9:	mov    DWORD PTR [ebp-0x78],esi
1004c8dc:	mov    DWORD PTR [ebp-0x50],esi
1004c8df:	mov    DWORD PTR [ebp-0x40],esi
1004c8e2:	mov    DWORD PTR [ebp-0x3c],esi
1004c8e5:	mov    DWORD PTR [ebp-0x18],esi
1004c8e8:	mov    DWORD PTR [ebp-0x44],esi
1004c8eb:	jmp    0x1004d049
1004c8f0:	movsx  eax,dl
1004c8f3:	sub    eax,0x20
1004c8f6:	je     0x1004c936
1004c8f8:	sub    eax,0x3
1004c8fb:	je     0x1004c92a
1004c8fd:	sub    eax,0x8
1004c900:	je     0x1004c921
1004c902:	dec    eax
1004c903:	dec    eax
1004c904:	je     0x1004c918
1004c906:	sub    eax,0x3
1004c909:	jne    0x1004d049
1004c90f:	or     DWORD PTR [ebp-0x18],0x8
1004c913:	jmp    0x1004d049
1004c918:	or     DWORD PTR [ebp-0x18],0x4
1004c91c:	jmp    0x1004d049
1004c921:	or     DWORD PTR [ebp-0x18],0x1
1004c925:	jmp    0x1004d049
1004c92a:	or     DWORD PTR [ebp-0x18],0x80
1004c931:	jmp    0x1004d049
1004c936:	or     DWORD PTR [ebp-0x18],0x2
1004c93a:	jmp    0x1004d049
1004c93f:	cmp    dl,0x2a
1004c942:	jne    0x1004c964
1004c944:	add    edi,0x4
1004c947:	mov    DWORD PTR [ebp-0x2c],edi
1004c94a:	mov    edi,DWORD PTR [edi-0x4]
1004c94d:	cmp    edi,esi
1004c94f:	mov    DWORD PTR [ebp-0x40],edi
1004c952:	jge    0x1004d049
1004c958:	or     DWORD PTR [ebp-0x18],0x4
1004c95c:	neg    DWORD PTR [ebp-0x40]
1004c95f:	jmp    0x1004d049
1004c964:	mov    eax,DWORD PTR [ebp-0x40]
1004c967:	imul   eax,eax,0xa
1004c96a:	movsx  ecx,dl
1004c96d:	lea    eax,[eax+ecx*1-0x30]
1004c971:	mov    DWORD PTR [ebp-0x40],eax
1004c974:	jmp    0x1004d049
1004c979:	mov    DWORD PTR [ebp-0x20],esi
1004c97c:	jmp    0x1004d049
1004c981:	cmp    dl,0x2a
1004c984:	jne    0x1004c9a3
1004c986:	add    edi,0x4
1004c989:	mov    DWORD PTR [ebp-0x2c],edi
1004c98c:	mov    edi,DWORD PTR [edi-0x4]
1004c98f:	cmp    edi,esi
1004c991:	mov    DWORD PTR [ebp-0x20],edi
1004c994:	jge    0x1004d049
1004c99a:	or     DWORD PTR [ebp-0x20],0xffffffff
1004c99e:	jmp    0x1004d049
1004c9a3:	mov    eax,DWORD PTR [ebp-0x20]
1004c9a6:	imul   eax,eax,0xa
1004c9a9:	movsx  ecx,dl
1004c9ac:	lea    eax,[eax+ecx*1-0x30]
1004c9b0:	mov    DWORD PTR [ebp-0x20],eax
1004c9b3:	jmp    0x1004d049
1004c9b8:	cmp    dl,0x49
1004c9bb:	je     0x1004ca03
1004c9bd:	cmp    dl,0x68
1004c9c0:	je     0x1004c9fa
1004c9c2:	cmp    dl,0x6c
1004c9c5:	je     0x1004c9dc
1004c9c7:	cmp    dl,0x77
1004c9ca:	jne    0x1004d049
1004c9d0:	or     DWORD PTR [ebp-0x18],0x800
1004c9d7:	jmp    0x1004d049
1004c9dc:	cmp    BYTE PTR [ebx],0x6c
1004c9df:	jne    0x1004c9f1
1004c9e1:	inc    ebx
1004c9e2:	or     DWORD PTR [ebp-0x18],0x1000
1004c9e9:	mov    DWORD PTR [ebp-0x48],ebx
1004c9ec:	jmp    0x1004d049
1004c9f1:	or     DWORD PTR [ebp-0x18],0x10
1004c9f5:	jmp    0x1004d049
1004c9fa:	or     DWORD PTR [ebp-0x18],0x20
1004c9fe:	jmp    0x1004d049
1004ca03:	mov    al,BYTE PTR [ebx]
1004ca05:	cmp    al,0x36
1004ca07:	jne    0x1004ca20
1004ca09:	cmp    BYTE PTR [ebx+0x1],0x34
1004ca0d:	jne    0x1004ca20
1004ca0f:	inc    ebx
1004ca10:	inc    ebx
1004ca11:	or     DWORD PTR [ebp-0x18],0x8000
1004ca18:	mov    DWORD PTR [ebp-0x48],ebx
1004ca1b:	jmp    0x1004d049
1004ca20:	cmp    al,0x33
1004ca22:	jne    0x1004ca3b
1004ca24:	cmp    BYTE PTR [ebx+0x1],0x32
1004ca28:	jne    0x1004ca3b
1004ca2a:	inc    ebx
1004ca2b:	inc    ebx
1004ca2c:	and    DWORD PTR [ebp-0x18],0xffff7fff
1004ca33:	mov    DWORD PTR [ebp-0x48],ebx
1004ca36:	jmp    0x1004d049
1004ca3b:	cmp    al,0x64
1004ca3d:	je     0x1004d049
1004ca43:	cmp    al,0x69
1004ca45:	je     0x1004d049
1004ca4b:	cmp    al,0x6f
1004ca4d:	je     0x1004d049
1004ca53:	cmp    al,0x75
1004ca55:	je     0x1004d049
1004ca5b:	cmp    al,0x78
1004ca5d:	je     0x1004d049
1004ca63:	cmp    al,0x58
1004ca65:	je     0x1004d049
1004ca6b:	mov    DWORD PTR [ebp-0x74],esi
1004ca6e:	lea    eax,[ebp-0x64]
1004ca71:	push   eax
1004ca72:	movzx  eax,dl
1004ca75:	push   eax
1004ca76:	mov    DWORD PTR [ebp-0x44],esi
1004ca79:	call   0x10048bdf
1004ca7e:	pop    ecx
1004ca7f:	test   eax,eax
1004ca81:	mov    al,BYTE PTR [ebp-0x19]
1004ca84:	pop    ecx
1004ca85:	je     0x1004caa0
1004ca87:	mov    ecx,DWORD PTR [ebp-0x30]
1004ca8a:	lea    esi,[ebp-0x34]
1004ca8d:	call   0x1004c6d5
1004ca92:	mov    al,BYTE PTR [ebx]
1004ca94:	inc    ebx
1004ca95:	test   al,al
1004ca97:	mov    DWORD PTR [ebp-0x48],ebx
1004ca9a:	je     0x1004d062
1004caa0:	mov    ecx,DWORD PTR [ebp-0x30]
1004caa3:	lea    esi,[ebp-0x34]
1004caa6:	call   0x1004c6d5
1004caab:	jmp    0x1004d049
1004cab0:	movsx  eax,dl
1004cab3:	cmp    eax,0x64
1004cab6:	jg     0x1004cc2e
1004cabc:	je     0x1004ccad
1004cac2:	cmp    eax,0x53
1004cac5:	jg     0x1004cb76
1004cacb:	je     0x1004cb27
1004cacd:	sub    eax,0x41
1004cad0:	je     0x1004cae2
1004cad2:	dec    eax
1004cad3:	dec    eax
1004cad4:	je     0x1004cb16
1004cad6:	dec    eax
1004cad7:	dec    eax
1004cad8:	je     0x1004cae2
1004cada:	dec    eax
1004cadb:	dec    eax
1004cadc:	jne    0x1004cf31
1004cae2:	add    dl,0x20
1004cae5:	mov    DWORD PTR [ebp-0x78],0x1
1004caec:	mov    BYTE PTR [ebp-0x19],dl
1004caef:	or     DWORD PTR [ebp-0x18],0x40
1004caf3:	cmp    DWORD PTR [ebp-0x20],esi
1004caf6:	lea    ebx,[ebp-0x14]
1004caf9:	mov    eax,0x200
1004cafe:	mov    DWORD PTR [ebp-0x24],ebx
1004cb01:	mov    DWORD PTR [ebp-0x68],eax
1004cb04:	jge    0x1004ccd1
1004cb0a:	mov    DWORD PTR [ebp-0x20],0x6
1004cb11:	jmp    0x1004cd1f
1004cb16:	test   WORD PTR [ebp-0x18],0x830
1004cb1c:	jne    0x1004cb93
1004cb1e:	or     DWORD PTR [ebp-0x18],0x800
1004cb25:	jmp    0x1004cb93
1004cb27:	test   WORD PTR [ebp-0x18],0x830
1004cb2d:	jne    0x1004cb36
1004cb2f:	or     DWORD PTR [ebp-0x18],0x800
1004cb36:	mov    ecx,DWORD PTR [ebp-0x20]
1004cb39:	cmp    ecx,0xffffffff
1004cb3c:	jne    0x1004cb43
1004cb3e:	mov    ecx,0x7fffffff
1004cb43:	add    edi,0x4
1004cb46:	test   WORD PTR [ebp-0x18],0x810
1004cb4c:	mov    DWORD PTR [ebp-0x2c],edi
1004cb4f:	mov    edi,DWORD PTR [edi-0x4]
1004cb52:	mov    DWORD PTR [ebp-0x24],edi
1004cb55:	je     0x1004cf0f
1004cb5b:	cmp    edi,esi
1004cb5d:	jne    0x1004cb67
1004cb5f:	mov    eax,ds:0x1007de34
1004cb64:	mov    DWORD PTR [ebp-0x24],eax
1004cb67:	mov    eax,DWORD PTR [ebp-0x24]
1004cb6a:	mov    DWORD PTR [ebp-0x44],0x1
1004cb71:	jmp    0x1004cf04
1004cb76:	sub    eax,0x58
1004cb79:	je     0x1004cdb8
1004cb7f:	dec    eax
1004cb80:	dec    eax
1004cb81:	je     0x1004cbe0
1004cb83:	sub    eax,ecx
1004cb85:	je     0x1004caef
1004cb8b:	dec    eax
1004cb8c:	dec    eax
1004cb8d:	jne    0x1004cf31
1004cb93:	add    edi,0x4
1004cb96:	test   WORD PTR [ebp-0x18],0x810
1004cb9c:	mov    DWORD PTR [ebp-0x2c],edi
1004cb9f:	je     0x1004cbc8
1004cba1:	movzx  eax,WORD PTR [edi-0x4]
1004cba5:	push   eax
1004cba6:	push   0x200
1004cbab:	lea    eax,[ebp-0x14]
1004cbae:	push   eax
1004cbaf:	lea    eax,[ebp-0x28]
1004cbb2:	push   eax
1004cbb3:	call   0x1004e8be
1004cbb8:	add    esp,0x10
1004cbbb:	test   eax,eax
1004cbbd:	je     0x1004cbd5
1004cbbf:	mov    DWORD PTR [ebp-0x50],0x1
1004cbc6:	jmp    0x1004cbd5
1004cbc8:	mov    al,BYTE PTR [edi-0x4]
1004cbcb:	mov    BYTE PTR [ebp-0x14],al
1004cbce:	mov    DWORD PTR [ebp-0x28],0x1
1004cbd5:	lea    eax,[ebp-0x14]
1004cbd8:	mov    DWORD PTR [ebp-0x24],eax
1004cbdb:	jmp    0x1004cf31
1004cbe0:	mov    eax,DWORD PTR [edi]
1004cbe2:	add    edi,0x4
1004cbe5:	cmp    eax,esi
1004cbe7:	mov    DWORD PTR [ebp-0x2c],edi
1004cbea:	je     0x1004cc1a
1004cbec:	mov    ecx,DWORD PTR [eax+0x4]
1004cbef:	cmp    ecx,esi
1004cbf1:	je     0x1004cc1a
1004cbf3:	test   WORD PTR [ebp-0x18],0x800
1004cbf9:	movsx  eax,WORD PTR [eax]
1004cbfc:	mov    DWORD PTR [ebp-0x24],ecx
1004cbff:	je     0x1004cc12
1004cc01:	cdq    
1004cc02:	sub    eax,edx
1004cc04:	sar    eax,1
1004cc06:	mov    DWORD PTR [ebp-0x44],0x1
1004cc0d:	jmp    0x1004cf2e
1004cc12:	mov    DWORD PTR [ebp-0x44],esi
1004cc15:	jmp    0x1004cf2e
1004cc1a:	mov    eax,ds:0x1007de30
1004cc1f:	mov    DWORD PTR [ebp-0x24],eax
1004cc22:	push   eax
1004cc23:	call   0x10041f10
1004cc28:	pop    ecx
1004cc29:	jmp    0x1004cf2e
1004cc2e:	cmp    eax,0x70
1004cc31:	jg     0x1004cdbd
1004cc37:	je     0x1004cdb1
1004cc3d:	cmp    eax,0x65
1004cc40:	jl     0x1004cf31
1004cc46:	cmp    eax,0x67
1004cc49:	jle    0x1004caef
1004cc4f:	cmp    eax,0x69
1004cc52:	je     0x1004ccad
1004cc54:	cmp    eax,0x6e
1004cc57:	je     0x1004cc78
1004cc59:	cmp    eax,0x6f
1004cc5c:	jne    0x1004cf31
1004cc62:	test   BYTE PTR [ebp-0x18],0x80
1004cc66:	mov    DWORD PTR [ebp-0x28],0x8
1004cc6d:	je     0x1004ccb8
1004cc6f:	or     DWORD PTR [ebp-0x18],0x200
1004cc76:	jmp    0x1004ccb8
1004cc78:	mov    esi,DWORD PTR [edi]
1004cc7a:	add    edi,0x4
1004cc7d:	mov    DWORD PTR [ebp-0x2c],edi
1004cc80:	call   0x1004d0c4
1004cc85:	test   eax,eax
1004cc87:	je     0x1004d062
1004cc8d:	test   BYTE PTR [ebp-0x18],0x20
1004cc91:	je     0x1004cc9c
1004cc93:	mov    ax,WORD PTR [ebp-0x34]
1004cc97:	mov    WORD PTR [esi],ax
1004cc9a:	jmp    0x1004cca1
1004cc9c:	mov    eax,DWORD PTR [ebp-0x34]
1004cc9f:	mov    DWORD PTR [esi],eax
1004cca1:	mov    DWORD PTR [ebp-0x50],0x1
1004cca8:	jmp    0x1004d036
1004ccad:	or     DWORD PTR [ebp-0x18],0x40
1004ccb1:	mov    DWORD PTR [ebp-0x28],0xa
1004ccb8:	mov    ecx,DWORD PTR [ebp-0x18]
1004ccbb:	test   cx,cx
1004ccbe:	jns    0x1004ce07
1004ccc4:	mov    eax,DWORD PTR [edi]
1004ccc6:	mov    edx,DWORD PTR [edi+0x4]
1004ccc9:	add    edi,0x8
1004cccc:	jmp    0x1004ce3c
1004ccd1:	jne    0x1004cce1
1004ccd3:	cmp    dl,0x67
1004ccd6:	jne    0x1004cd1f
1004ccd8:	mov    DWORD PTR [ebp-0x20],0x1
1004ccdf:	jmp    0x1004cd1f
1004cce1:	cmp    DWORD PTR [ebp-0x20],eax
1004cce4:	jle    0x1004cce9
1004cce6:	mov    DWORD PTR [ebp-0x20],eax
1004cce9:	cmp    DWORD PTR [ebp-0x20],0xa3
1004ccf0:	jle    0x1004cd1f
1004ccf2:	mov    esi,DWORD PTR [ebp-0x20]
1004ccf5:	add    esi,0x15d
1004ccfb:	push   esi
1004ccfc:	call   0x10046172
1004cd01:	test   eax,eax
1004cd03:	mov    dl,BYTE PTR [ebp-0x19]
1004cd06:	pop    ecx
1004cd07:	mov    DWORD PTR [ebp-0x54],eax
1004cd0a:	je     0x1004cd16
1004cd0c:	mov    DWORD PTR [ebp-0x24],eax
1004cd0f:	mov    DWORD PTR [ebp-0x68],esi
1004cd12:	mov    ebx,eax
1004cd14:	jmp    0x1004cd1d
1004cd16:	mov    DWORD PTR [ebp-0x20],0xa3
1004cd1d:	xor    esi,esi
1004cd1f:	mov    eax,DWORD PTR [edi]
1004cd21:	add    edi,0x8
1004cd24:	mov    DWORD PTR [ebp-0x80],eax
1004cd27:	mov    eax,DWORD PTR [edi-0x4]
1004cd2a:	mov    DWORD PTR [ebp-0x7c],eax
1004cd2d:	lea    eax,[ebp-0x64]
1004cd30:	push   eax
1004cd31:	push   DWORD PTR [ebp-0x78]
1004cd34:	movsx  eax,dl
1004cd37:	push   DWORD PTR [ebp-0x20]
1004cd3a:	mov    DWORD PTR [ebp-0x2c],edi
1004cd3d:	push   eax
1004cd3e:	push   DWORD PTR [ebp-0x68]
1004cd41:	lea    eax,[ebp-0x80]
1004cd44:	push   ebx
1004cd45:	push   eax
1004cd46:	push   DWORD PTR ds:0x1007da98
1004cd4c:	call   0x10045c42
1004cd51:	pop    ecx
1004cd52:	call   eax
1004cd54:	mov    edi,DWORD PTR [ebp-0x18]
1004cd57:	add    esp,0x1c
1004cd5a:	and    edi,0x80
1004cd60:	je     0x1004cd7c
1004cd62:	cmp    DWORD PTR [ebp-0x20],esi
1004cd65:	jne    0x1004cd7c
1004cd67:	lea    eax,[ebp-0x64]
1004cd6a:	push   eax
1004cd6b:	push   ebx
1004cd6c:	push   DWORD PTR ds:0x1007daa4
1004cd72:	call   0x10045c42
1004cd77:	pop    ecx
1004cd78:	call   eax
1004cd7a:	pop    ecx
1004cd7b:	pop    ecx
1004cd7c:	cmp    BYTE PTR [ebp-0x19],0x67
1004cd80:	jne    0x1004cd9b
1004cd82:	cmp    edi,esi
1004cd84:	jne    0x1004cd9b
1004cd86:	lea    eax,[ebp-0x64]
1004cd89:	push   eax
1004cd8a:	push   ebx
1004cd8b:	push   DWORD PTR ds:0x1007daa0
1004cd91:	call   0x10045c42
1004cd96:	pop    ecx
1004cd97:	call   eax
1004cd99:	pop    ecx
1004cd9a:	pop    ecx
1004cd9b:	cmp    BYTE PTR [ebx],0x2d
1004cd9e:	jne    0x1004cdab
1004cda0:	or     DWORD PTR [ebp-0x18],0x100
1004cda7:	inc    ebx
1004cda8:	mov    DWORD PTR [ebp-0x24],ebx
1004cdab:	push   ebx
1004cdac:	jmp    0x1004cc23
1004cdb1:	mov    DWORD PTR [ebp-0x20],0x8
1004cdb8:	mov    DWORD PTR [ebp-0x4c],ecx
1004cdbb:	jmp    0x1004cdde
1004cdbd:	sub    eax,0x73
1004cdc0:	je     0x1004cb36
1004cdc6:	dec    eax
1004cdc7:	dec    eax
1004cdc8:	je     0x1004ccb1
1004cdce:	sub    eax,0x3
1004cdd1:	jne    0x1004cf31
1004cdd7:	mov    DWORD PTR [ebp-0x4c],0x27
1004cdde:	test   BYTE PTR [ebp-0x18],0x80
1004cde2:	mov    DWORD PTR [ebp-0x28],0x10
1004cde9:	je     0x1004ccb8
1004cdef:	mov    al,BYTE PTR [ebp-0x4c]
1004cdf2:	add    al,0x51
1004cdf4:	mov    BYTE PTR [ebp-0x38],0x30
1004cdf8:	mov    BYTE PTR [ebp-0x37],al
1004cdfb:	mov    DWORD PTR [ebp-0x3c],0x2
1004ce02:	jmp    0x1004ccb8
1004ce07:	test   cx,0x1000
1004ce0c:	jne    0x1004ccc4
1004ce12:	add    edi,0x4
1004ce15:	test   cl,0x20
1004ce18:	je     0x1004ce2f
1004ce1a:	test   cl,0x40
1004ce1d:	mov    DWORD PTR [ebp-0x2c],edi
1004ce20:	je     0x1004ce28
1004ce22:	movsx  eax,WORD PTR [edi-0x4]
1004ce26:	jmp    0x1004ce2c
1004ce28:	movzx  eax,WORD PTR [edi-0x4]
1004ce2c:	cdq    
1004ce2d:	jmp    0x1004ce3f
1004ce2f:	test   cl,0x40
1004ce32:	mov    eax,DWORD PTR [edi-0x4]
1004ce35:	je     0x1004ce3a
1004ce37:	cdq    
1004ce38:	jmp    0x1004ce3c
1004ce3a:	xor    edx,edx
1004ce3c:	mov    DWORD PTR [ebp-0x2c],edi
1004ce3f:	test   cl,0x40
1004ce42:	je     0x1004ce5c
1004ce44:	cmp    edx,esi
1004ce46:	jg     0x1004ce5c
1004ce48:	jl     0x1004ce4e
1004ce4a:	cmp    eax,esi
1004ce4c:	jae    0x1004ce5c
1004ce4e:	neg    eax
1004ce50:	adc    edx,0x0
1004ce53:	neg    edx
1004ce55:	or     DWORD PTR [ebp-0x18],0x100
1004ce5c:	test   WORD PTR [ebp-0x18],0x9000
1004ce62:	mov    ebx,edx
1004ce64:	mov    edi,eax
1004ce66:	jne    0x1004ce6a
1004ce68:	xor    ebx,ebx
1004ce6a:	cmp    DWORD PTR [ebp-0x20],0x0
1004ce6e:	jge    0x1004ce79
1004ce70:	mov    DWORD PTR [ebp-0x20],0x1
1004ce77:	jmp    0x1004ce8a
1004ce79:	and    DWORD PTR [ebp-0x18],0xfffffff7
1004ce7d:	mov    eax,0x200
1004ce82:	cmp    DWORD PTR [ebp-0x20],eax
1004ce85:	jle    0x1004ce8a
1004ce87:	mov    DWORD PTR [ebp-0x20],eax
1004ce8a:	mov    eax,edi
1004ce8c:	or     eax,ebx
1004ce8e:	jne    0x1004ce94
1004ce90:	and    DWORD PTR [ebp-0x3c],0x0
1004ce94:	lea    esi,[ebp+0x1eb]
1004ce9a:	mov    eax,DWORD PTR [ebp-0x20]
1004ce9d:	dec    DWORD PTR [ebp-0x20]
1004cea0:	test   eax,eax
1004cea2:	jg     0x1004ceaa
1004cea4:	mov    eax,edi
1004cea6:	or     eax,ebx
1004cea8:	je     0x1004cece
1004ceaa:	mov    eax,DWORD PTR [ebp-0x28]
1004cead:	cdq    
1004ceae:	push   edx
1004ceaf:	push   eax
1004ceb0:	push   ebx
1004ceb1:	push   edi
1004ceb2:	call   0x10048310
1004ceb7:	add    ecx,0x30
1004ceba:	cmp    ecx,0x39
1004cebd:	mov    DWORD PTR [ebp-0x68],ebx
1004cec0:	mov    edi,eax
1004cec2:	mov    ebx,edx
1004cec4:	jle    0x1004cec9
1004cec6:	add    ecx,DWORD PTR [ebp-0x4c]
1004cec9:	mov    BYTE PTR [esi],cl
1004cecb:	dec    esi
1004cecc:	jmp    0x1004ce9a
1004cece:	lea    eax,[ebp+0x1eb]
1004ced4:	sub    eax,esi
1004ced6:	inc    esi
1004ced7:	test   WORD PTR [ebp-0x18],0x200
1004cedd:	mov    DWORD PTR [ebp-0x28],eax
1004cee0:	mov    DWORD PTR [ebp-0x24],esi
1004cee3:	je     0x1004cf31
1004cee5:	test   eax,eax
1004cee7:	je     0x1004cef0
1004cee9:	mov    ecx,esi
1004ceeb:	cmp    BYTE PTR [ecx],0x30
1004ceee:	je     0x1004cf31
1004cef0:	dec    DWORD PTR [ebp-0x24]
1004cef3:	mov    ecx,DWORD PTR [ebp-0x24]
1004cef6:	mov    BYTE PTR [ecx],0x30
1004cef9:	inc    eax
1004cefa:	jmp    0x1004cf2e
1004cefc:	dec    ecx
1004cefd:	cmp    WORD PTR [eax],si
1004cf00:	je     0x1004cf08
1004cf02:	inc    eax
1004cf03:	inc    eax
1004cf04:	cmp    ecx,esi
1004cf06:	jne    0x1004cefc
1004cf08:	sub    eax,DWORD PTR [ebp-0x24]
1004cf0b:	sar    eax,1
1004cf0d:	jmp    0x1004cf2e
1004cf0f:	cmp    edi,esi
1004cf11:	jne    0x1004cf1b
1004cf13:	mov    eax,ds:0x1007de30
1004cf18:	mov    DWORD PTR [ebp-0x24],eax
1004cf1b:	mov    eax,DWORD PTR [ebp-0x24]
1004cf1e:	jmp    0x1004cf27
1004cf20:	dec    ecx
1004cf21:	cmp    BYTE PTR [eax],0x0
1004cf24:	je     0x1004cf2b
1004cf26:	inc    eax
1004cf27:	cmp    ecx,esi
1004cf29:	jne    0x1004cf20
1004cf2b:	sub    eax,DWORD PTR [ebp-0x24]
1004cf2e:	mov    DWORD PTR [ebp-0x28],eax
1004cf31:	cmp    DWORD PTR [ebp-0x50],0x0
1004cf35:	jne    0x1004d036
1004cf3b:	mov    eax,DWORD PTR [ebp-0x18]
1004cf3e:	test   al,0x40
1004cf40:	je     0x1004cf67
1004cf42:	test   ax,0x100
1004cf46:	je     0x1004cf4e
1004cf48:	mov    BYTE PTR [ebp-0x38],0x2d
1004cf4c:	jmp    0x1004cf60
1004cf4e:	test   al,0x1
1004cf50:	je     0x1004cf58
1004cf52:	mov    BYTE PTR [ebp-0x38],0x2b
1004cf56:	jmp    0x1004cf60
1004cf58:	test   al,0x2
1004cf5a:	je     0x1004cf67
1004cf5c:	mov    BYTE PTR [ebp-0x38],0x20
1004cf60:	mov    DWORD PTR [ebp-0x3c],0x1
1004cf67:	mov    ebx,DWORD PTR [ebp-0x40]
1004cf6a:	sub    ebx,DWORD PTR [ebp-0x28]
1004cf6d:	sub    ebx,DWORD PTR [ebp-0x3c]
1004cf70:	test   BYTE PTR [ebp-0x18],0xc
1004cf74:	jne    0x1004cf87
1004cf76:	push   DWORD PTR [ebp-0x30]
1004cf79:	lea    eax,[ebp-0x34]
1004cf7c:	push   ebx
1004cf7d:	push   0x20
1004cf7f:	call   0x1004c708
1004cf84:	add    esp,0xc
1004cf87:	push   DWORD PTR [ebp-0x3c]
1004cf8a:	mov    edi,DWORD PTR [ebp-0x30]
1004cf8d:	lea    eax,[ebp-0x34]
1004cf90:	lea    ecx,[ebp-0x38]
1004cf93:	call   0x1004e8d9
1004cf98:	test   BYTE PTR [ebp-0x18],0x8
1004cf9c:	pop    ecx
1004cf9d:	je     0x1004cfb4
1004cf9f:	test   BYTE PTR [ebp-0x18],0x4
1004cfa3:	jne    0x1004cfb4
1004cfa5:	push   edi
1004cfa6:	push   ebx
1004cfa7:	push   0x30
1004cfa9:	lea    eax,[ebp-0x34]
1004cfac:	call   0x1004c708
1004cfb1:	add    esp,0xc
1004cfb4:	cmp    DWORD PTR [ebp-0x44],0x0
1004cfb8:	mov    eax,DWORD PTR [ebp-0x28]
1004cfbb:	je     0x1004d00e
1004cfbd:	test   eax,eax
1004cfbf:	jle    0x1004d00e
1004cfc1:	mov    esi,DWORD PTR [ebp-0x24]
1004cfc4:	mov    DWORD PTR [ebp-0x68],eax
1004cfc7:	movzx  eax,WORD PTR [esi]
1004cfca:	dec    DWORD PTR [ebp-0x68]
1004cfcd:	push   eax
1004cfce:	push   0x6
1004cfd0:	lea    eax,[ebp+0x1ec]
1004cfd6:	push   eax
1004cfd7:	lea    eax,[ebp-0x70]
1004cfda:	inc    esi
1004cfdb:	push   eax
1004cfdc:	inc    esi
1004cfdd:	call   0x1004e8be
1004cfe2:	add    esp,0x10
1004cfe5:	test   eax,eax
1004cfe7:	jne    0x1004d008
1004cfe9:	cmp    DWORD PTR [ebp-0x70],eax
1004cfec:	je     0x1004d008
1004cfee:	push   DWORD PTR [ebp-0x70]
1004cff1:	lea    eax,[ebp-0x34]
1004cff4:	lea    ecx,[ebp+0x1ec]
1004cffa:	call   0x1004e8d9
1004cfff:	cmp    DWORD PTR [ebp-0x68],0x0
1004d003:	pop    ecx
1004d004:	jne    0x1004cfc7
1004d006:	jmp    0x1004d01b
1004d008:	or     DWORD PTR [ebp-0x34],0xffffffff
1004d00c:	jmp    0x1004d01b
1004d00e:	mov    ecx,DWORD PTR [ebp-0x24]
1004d011:	push   eax
1004d012:	lea    eax,[ebp-0x34]
1004d015:	call   0x1004e8d9
1004d01a:	pop    ecx
1004d01b:	cmp    DWORD PTR [ebp-0x34],0x0
1004d01f:	jl     0x1004d036
1004d021:	test   BYTE PTR [ebp-0x18],0x4
1004d025:	je     0x1004d036
1004d027:	push   edi
1004d028:	push   ebx
1004d029:	push   0x20
1004d02b:	lea    eax,[ebp-0x34]
1004d02e:	call   0x1004c708
1004d033:	add    esp,0xc
1004d036:	cmp    DWORD PTR [ebp-0x54],0x0
1004d03a:	je     0x1004d049
1004d03c:	push   DWORD PTR [ebp-0x54]
1004d03f:	call   0x10042408
1004d044:	and    DWORD PTR [ebp-0x54],0x0
1004d048:	pop    ecx
1004d049:	mov    ebx,DWORD PTR [ebp-0x48]
1004d04c:	mov    al,BYTE PTR [ebx]
1004d04e:	test   al,al
1004d050:	mov    BYTE PTR [ebp-0x19],al
1004d053:	je     0x1004d079
1004d055:	mov    ecx,DWORD PTR [ebp-0x74]
1004d058:	mov    edi,DWORD PTR [ebp-0x2c]
1004d05b:	mov    dl,al
1004d05d:	jmp    0x1004c88a
1004d062:	call   0x100458a5
1004d067:	mov    DWORD PTR [eax],0x16
1004d06d:	xor    eax,eax
1004d06f:	push   eax
1004d070:	push   eax
1004d071:	push   eax
1004d072:	push   eax
1004d073:	push   eax
1004d074:	jmp    0x1004c79c
1004d079:	cmp    BYTE PTR [ebp-0x58],0x0
1004d07d:	je     0x1004d086
1004d07f:	mov    eax,DWORD PTR [ebp-0x5c]
1004d082:	and    DWORD PTR [eax+0x70],0xfffffffd
1004d086:	mov    eax,DWORD PTR [ebp-0x34]
1004d089:	mov    ecx,DWORD PTR [ebp+0x1f4]
1004d08f:	pop    edi
1004d090:	pop    esi
1004d091:	xor    ecx,ebp
1004d093:	pop    ebx
1004d094:	call   0x10041d97
1004d099:	add    ebp,0x1f8
1004d09f:	leave  
1004d0a0:	ret    
1004d0a1:	lea    ecx,[ecx+0x0]
1004d0a4:	outs   dx,BYTE PTR ds:[esi]
1004d0a5:	retf   0x1004
1004d0a8:	aad    0xc8
1004d0aa:	add    al,0x10
1004d0ac:	lock enter 0x1004,0x3f
1004d0b1:	leave  
1004d0b2:	add    al,0x10
1004d0b4:	jns    0x1004d07f
1004d0b6:	add    al,0x10
1004d0b8:	or     ecx,0xc9b81004
1004d0be:	add    al,0x10
1004d0c0:	mov    al,0xca
1004d0c2:	add    al,0x10
1004d0c4:	mov    eax,ds:0x1007d030
1004d0c9:	or     eax,0x1
1004d0cc:	xor    ecx,ecx
1004d0ce:	cmp    DWORD PTR ds:0x1007f46c,eax
1004d0d4:	sete   cl
1004d0d7:	mov    eax,ecx
1004d0d9:	ret    
1004d0da:	push   ebp
1004d0db:	mov    ebp,esp
1004d0dd:	sub    esp,0x10
1004d0e0:	push   ebx
1004d0e1:	push   esi
1004d0e2:	mov    esi,DWORD PTR [ebp+0xc]
1004d0e5:	xor    ebx,ebx
1004d0e7:	cmp    esi,ebx
1004d0e9:	je     0x1004d0fe
1004d0eb:	cmp    DWORD PTR [ebp+0x10],ebx
1004d0ee:	je     0x1004d0fe
1004d0f0:	cmp    BYTE PTR [esi],bl
1004d0f2:	jne    0x1004d104
1004d0f4:	mov    eax,DWORD PTR [ebp+0x8]
1004d0f7:	cmp    eax,ebx
1004d0f9:	je     0x1004d0fe
1004d0fb:	mov    WORD PTR [eax],bx
1004d0fe:	xor    eax,eax
1004d100:	pop    esi
1004d101:	pop    ebx
1004d102:	leave  
1004d103:	ret    
1004d104:	push   DWORD PTR [ebp+0x14]
1004d107:	lea    ecx,[ebp-0x10]
1004d10a:	call   0x10044235
1004d10f:	mov    eax,DWORD PTR [ebp-0x10]
1004d112:	cmp    DWORD PTR [eax+0x14],ebx
1004d115:	jne    0x1004d136
1004d117:	mov    eax,DWORD PTR [ebp+0x8]
1004d11a:	cmp    eax,ebx
1004d11c:	je     0x1004d125
1004d11e:	movzx  cx,BYTE PTR [esi]
1004d122:	mov    WORD PTR [eax],cx
1004d125:	cmp    BYTE PTR [ebp-0x4],bl
1004d128:	je     0x1004d131
1004d12a:	mov    eax,DWORD PTR [ebp-0x8]
1004d12d:	and    DWORD PTR [eax+0x70],0xfffffffd
1004d131:	xor    eax,eax
1004d133:	inc    eax
1004d134:	jmp    0x1004d100
1004d136:	lea    eax,[ebp-0x10]
1004d139:	push   eax
1004d13a:	movzx  eax,BYTE PTR [esi]
1004d13d:	push   eax
1004d13e:	call   0x10048bdf
1004d143:	test   eax,eax
1004d145:	pop    ecx
1004d146:	pop    ecx
1004d147:	je     0x1004d1c6
1004d149:	mov    eax,DWORD PTR [ebp-0x10]
1004d14c:	mov    ecx,DWORD PTR [eax+0xac]
1004d152:	cmp    ecx,0x1
1004d155:	jle    0x1004d17c
1004d157:	cmp    DWORD PTR [ebp+0x10],ecx
1004d15a:	jl     0x1004d17c
1004d15c:	xor    edx,edx
1004d15e:	cmp    DWORD PTR [ebp+0x8],ebx
1004d161:	setne  dl
1004d164:	push   edx
1004d165:	push   DWORD PTR [ebp+0x8]
1004d168:	push   ecx
1004d169:	push   esi
1004d16a:	push   0x9
1004d16c:	push   DWORD PTR [eax+0x4]
1004d16f:	call   DWORD PTR ds:0x1006508c
1004d175:	test   eax,eax
1004d177:	mov    eax,DWORD PTR [ebp-0x10]
1004d17a:	jne    0x1004d18c
1004d17c:	mov    ecx,DWORD PTR [ebp+0x10]
1004d17f:	cmp    ecx,DWORD PTR [eax+0xac]
1004d185:	jb     0x1004d1a7
1004d187:	cmp    BYTE PTR [esi+0x1],bl
1004d18a:	je     0x1004d1a7
1004d18c:	cmp    BYTE PTR [ebp-0x4],bl
1004d18f:	mov    eax,DWORD PTR [eax+0xac]
1004d195:	je     0x1004d100
1004d19b:	mov    ecx,DWORD PTR [ebp-0x8]
1004d19e:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004d1a2:	jmp    0x1004d100
1004d1a7:	call   0x100458a5
1004d1ac:	mov    DWORD PTR [eax],0x2a
1004d1b2:	cmp    BYTE PTR [ebp-0x4],bl
1004d1b5:	je     0x1004d1be
1004d1b7:	mov    eax,DWORD PTR [ebp-0x8]
1004d1ba:	and    DWORD PTR [eax+0x70],0xfffffffd
1004d1be:	or     eax,0xffffffff
1004d1c1:	jmp    0x1004d100
1004d1c6:	xor    eax,eax
1004d1c8:	cmp    DWORD PTR [ebp+0x8],ebx
1004d1cb:	setne  al
1004d1ce:	push   eax
1004d1cf:	push   DWORD PTR [ebp+0x8]
1004d1d2:	mov    eax,DWORD PTR [ebp-0x10]
1004d1d5:	push   0x1
1004d1d7:	push   esi
1004d1d8:	push   0x9
1004d1da:	push   DWORD PTR [eax+0x4]
1004d1dd:	call   DWORD PTR ds:0x1006508c
1004d1e3:	test   eax,eax
1004d1e5:	jne    0x1004d125
1004d1eb:	jmp    0x1004d1a7
1004d1ed:	push   0x0
1004d1ef:	push   DWORD PTR [esp+0x10]
1004d1f3:	push   DWORD PTR [esp+0x10]
1004d1f7:	push   DWORD PTR [esp+0x10]
1004d1fb:	call   0x1004d0da
1004d200:	add    esp,0x10
1004d203:	ret    
1004d204:	push   ebp
1004d205:	lea    ebp,[esp-0x3f4]
1004d20c:	sub    esp,0x474
1004d212:	mov    eax,ds:0x1007d030
1004d217:	xor    eax,ebp
1004d219:	mov    DWORD PTR [ebp+0x3f0],eax
1004d21f:	push   ebx
1004d220:	mov    ebx,DWORD PTR [ebp+0x408]
1004d226:	push   esi
1004d227:	mov    esi,DWORD PTR [ebp+0x3fc]
1004d22d:	xor    eax,eax
1004d22f:	push   edi
1004d230:	push   DWORD PTR [ebp+0x404]
1004d236:	mov    edi,DWORD PTR [ebp+0x400]
1004d23c:	lea    ecx,[ebp-0x58]
1004d23f:	mov    DWORD PTR [ebp-0x48],esi
1004d242:	mov    DWORD PTR [ebp-0x24],ebx
1004d245:	mov    DWORD PTR [ebp-0x60],eax
1004d248:	mov    DWORD PTR [ebp-0x14],eax
1004d24b:	mov    DWORD PTR [ebp-0x38],eax
1004d24e:	mov    DWORD PTR [ebp-0x18],eax
1004d251:	mov    DWORD PTR [ebp-0x30],eax
1004d254:	mov    DWORD PTR [ebp-0x5c],eax
1004d257:	mov    DWORD PTR [ebp-0x34],eax
1004d25a:	call   0x10044235
1004d25f:	test   esi,esi
1004d261:	jne    0x1004d292
1004d263:	call   0x100458a5
1004d268:	mov    DWORD PTR [eax],0x16
1004d26e:	xor    eax,eax
1004d270:	push   eax
1004d271:	push   eax
1004d272:	push   eax
1004d273:	push   eax
1004d274:	push   eax
1004d275:	call   0x1004228c
1004d27a:	add    esp,0x14
1004d27d:	cmp    BYTE PTR [ebp-0x4c],0x0
1004d281:	je     0x1004d28a
1004d283:	mov    eax,DWORD PTR [ebp-0x50]
1004d286:	and    DWORD PTR [eax+0x70],0xfffffffd
1004d28a:	or     eax,0xffffffff
1004d28d:	jmp    0x1004dae9
1004d292:	xor    esi,esi
1004d294:	cmp    edi,esi
1004d296:	jne    0x1004d2aa
1004d298:	call   0x100458a5
1004d29d:	push   esi
1004d29e:	push   esi
1004d29f:	push   esi
1004d2a0:	push   esi
1004d2a1:	mov    DWORD PTR [eax],0x16
1004d2a7:	push   esi
1004d2a8:	jmp    0x1004d275
1004d2aa:	movzx  ecx,WORD PTR [edi]
1004d2ad:	cmp    cx,si
1004d2b0:	mov    DWORD PTR [ebp-0x2c],esi
1004d2b3:	mov    DWORD PTR [ebp-0x20],esi
1004d2b6:	mov    DWORD PTR [ebp-0x40],esi
1004d2b9:	mov    DWORD PTR [ebp-0x64],esi
1004d2bc:	mov    DWORD PTR [ebp-0x28],ecx
1004d2bf:	je     0x1004dad9
1004d2c5:	push   0x2
1004d2c7:	pop    esi
1004d2c8:	add    edi,esi
1004d2ca:	xor    eax,eax
1004d2cc:	cmp    DWORD PTR [ebp-0x2c],eax
1004d2cf:	mov    DWORD PTR [ebp-0x6c],edi
1004d2d2:	jl     0x1004dac9
1004d2d8:	lea    edx,[ecx-0x20]
1004d2db:	cmp    dx,0x58
1004d2df:	ja     0x1004d2ee
1004d2e1:	movzx  eax,cx
1004d2e4:	movzx  eax,BYTE PTR [eax+0x10066e30]
1004d2eb:	and    eax,0xf
1004d2ee:	mov    edx,DWORD PTR [ebp-0x40]
1004d2f1:	imul   eax,eax,0x9
1004d2f4:	movzx  eax,BYTE PTR [eax+edx*1+0x10066e50]
1004d2fc:	push   0x8
1004d2fe:	shr    eax,0x4
1004d301:	pop    edx
1004d302:	cmp    eax,edx
1004d304:	mov    DWORD PTR [ebp-0x40],eax
1004d307:	je     0x1004d263
1004d30d:	cmp    eax,0x7
1004d310:	ja     0x1004dab1
1004d316:	jmp    DWORD PTR [eax*4+0x1004db04]
1004d31d:	xor    eax,eax
1004d31f:	or     DWORD PTR [ebp-0x18],0xffffffff
1004d323:	mov    DWORD PTR [ebp-0x68],eax
1004d326:	mov    DWORD PTR [ebp-0x5c],eax
1004d329:	mov    DWORD PTR [ebp-0x38],eax
1004d32c:	mov    DWORD PTR [ebp-0x30],eax
1004d32f:	mov    DWORD PTR [ebp-0x14],eax
1004d332:	mov    DWORD PTR [ebp-0x34],eax
1004d335:	jmp    0x1004dab7
1004d33a:	movzx  eax,cx
1004d33d:	sub    eax,0x20
1004d340:	je     0x1004d37e
1004d342:	sub    eax,0x3
1004d345:	je     0x1004d372
1004d347:	sub    eax,edx
1004d349:	je     0x1004d369
1004d34b:	sub    eax,esi
1004d34d:	je     0x1004d360
1004d34f:	sub    eax,0x3
1004d352:	jne    0x1004dab1
1004d358:	or     DWORD PTR [ebp-0x14],edx
1004d35b:	jmp    0x1004dab7
1004d360:	or     DWORD PTR [ebp-0x14],0x4
1004d364:	jmp    0x1004dab7
1004d369:	or     DWORD PTR [ebp-0x14],0x1
1004d36d:	jmp    0x1004dab7
1004d372:	or     DWORD PTR [ebp-0x14],0x80
1004d379:	jmp    0x1004dab7
1004d37e:	or     DWORD PTR [ebp-0x14],esi
1004d381:	jmp    0x1004dab7
1004d386:	cmp    cx,0x2a
1004d38a:	jne    0x1004d3ab
1004d38c:	mov    eax,DWORD PTR [ebx]
1004d38e:	add    ebx,0x4
1004d391:	test   eax,eax
1004d393:	mov    DWORD PTR [ebp-0x24],ebx
1004d396:	mov    DWORD PTR [ebp-0x38],eax
1004d399:	jge    0x1004dab7
1004d39f:	or     DWORD PTR [ebp-0x14],0x4
1004d3a3:	neg    DWORD PTR [ebp-0x38]
1004d3a6:	jmp    0x1004dab7
1004d3ab:	mov    eax,DWORD PTR [ebp-0x38]
1004d3ae:	imul   eax,eax,0xa
1004d3b1:	movzx  ecx,cx
1004d3b4:	lea    eax,[eax+ecx*1-0x30]
1004d3b8:	mov    DWORD PTR [ebp-0x38],eax
1004d3bb:	jmp    0x1004dab7
1004d3c0:	and    DWORD PTR [ebp-0x18],0x0
1004d3c4:	jmp    0x1004dab7
1004d3c9:	cmp    cx,0x2a
1004d3cd:	jne    0x1004d3eb
1004d3cf:	mov    eax,DWORD PTR [ebx]
1004d3d1:	add    ebx,0x4
1004d3d4:	test   eax,eax
1004d3d6:	mov    DWORD PTR [ebp-0x24],ebx
1004d3d9:	mov    DWORD PTR [ebp-0x18],eax
1004d3dc:	jge    0x1004dab7
1004d3e2:	or     DWORD PTR [ebp-0x18],0xffffffff
1004d3e6:	jmp    0x1004dab7
1004d3eb:	mov    eax,DWORD PTR [ebp-0x18]
1004d3ee:	imul   eax,eax,0xa
1004d3f1:	movzx  ecx,cx
1004d3f4:	lea    eax,[eax+ecx*1-0x30]
1004d3f8:	mov    DWORD PTR [ebp-0x18],eax
1004d3fb:	jmp    0x1004dab7
1004d400:	movzx  eax,cx
1004d403:	cmp    eax,0x49
1004d406:	je     0x1004d44d
1004d408:	cmp    eax,0x68
1004d40b:	je     0x1004d444
1004d40d:	cmp    eax,0x6c
1004d410:	je     0x1004d427
1004d412:	cmp    eax,0x77
1004d415:	jne    0x1004dab7
1004d41b:	or     DWORD PTR [ebp-0x14],0x800
1004d422:	jmp    0x1004dab7
1004d427:	cmp    WORD PTR [edi],0x6c
1004d42b:	jne    0x1004d43b
1004d42d:	add    edi,esi
1004d42f:	or     DWORD PTR [ebp-0x14],0x1000
1004d436:	jmp    0x1004dab7
1004d43b:	or     DWORD PTR [ebp-0x14],0x10
1004d43f:	jmp    0x1004dab7
1004d444:	or     DWORD PTR [ebp-0x14],0x20
1004d448:	jmp    0x1004dab7
1004d44d:	movzx  eax,WORD PTR [edi]
1004d450:	cmp    ax,0x36
1004d454:	jne    0x1004d46c
1004d456:	cmp    WORD PTR [edi+0x2],0x34
1004d45b:	jne    0x1004d46c
1004d45d:	add    edi,0x4
1004d460:	or     DWORD PTR [ebp-0x14],0x8000
1004d467:	jmp    0x1004dab7
1004d46c:	cmp    ax,0x33
1004d470:	jne    0x1004d488
1004d472:	cmp    WORD PTR [edi+0x2],0x32
1004d477:	jne    0x1004d488
1004d479:	add    edi,0x4
1004d47c:	and    DWORD PTR [ebp-0x14],0xffff7fff
1004d483:	jmp    0x1004dab7
1004d488:	cmp    ax,0x64
1004d48c:	je     0x1004dab7
1004d492:	cmp    ax,0x69
1004d496:	je     0x1004dab7
1004d49c:	cmp    ax,0x6f
1004d4a0:	je     0x1004dab7
1004d4a6:	cmp    ax,0x75
1004d4aa:	je     0x1004dab7
1004d4b0:	cmp    ax,0x78
1004d4b4:	je     0x1004dab7
1004d4ba:	cmp    ax,0x58
1004d4be:	je     0x1004dab7
1004d4c4:	and    DWORD PTR [ebp-0x40],0x0
1004d4c8:	mov    eax,DWORD PTR [ebp-0x48]
1004d4cb:	push   ecx
1004d4cc:	lea    esi,[ebp-0x2c]
1004d4cf:	mov    DWORD PTR [ebp-0x34],0x1
1004d4d6:	call   0x1004919c
1004d4db:	pop    ecx
1004d4dc:	jmp    0x1004dab7
1004d4e1:	movzx  eax,cx
1004d4e4:	cmp    eax,0x64
1004d4e7:	jg     0x1004d695
1004d4ed:	je     0x1004d710
1004d4f3:	cmp    eax,0x53
1004d4f6:	jg     0x1004d5d3
1004d4fc:	je     0x1004d55d
1004d4fe:	sub    eax,0x41
1004d501:	je     0x1004d513
1004d503:	sub    eax,esi
1004d505:	je     0x1004d548
1004d507:	sub    eax,esi
1004d509:	je     0x1004d513
1004d50b:	sub    eax,esi
1004d50d:	jne    0x1004d995
1004d513:	add    ecx,0x20
1004d516:	mov    DWORD PTR [ebp-0x68],0x1
1004d51d:	mov    DWORD PTR [ebp-0x28],ecx
1004d520:	or     DWORD PTR [ebp-0x14],0x40
1004d524:	cmp    DWORD PTR [ebp-0x18],0x0
1004d528:	lea    esi,[ebp-0x10]
1004d52b:	mov    eax,0x200
1004d530:	mov    DWORD PTR [ebp-0x1c],esi
1004d533:	mov    DWORD PTR [ebp-0x20],eax
1004d536:	jge    0x1004d734
1004d53c:	mov    DWORD PTR [ebp-0x18],0x6
1004d543:	jmp    0x1004d784
1004d548:	test   WORD PTR [ebp-0x14],0x830
1004d54e:	jne    0x1004d5f1
1004d554:	or     DWORD PTR [ebp-0x14],0x20
1004d558:	jmp    0x1004d5f1
1004d55d:	test   WORD PTR [ebp-0x14],0x830
1004d563:	jne    0x1004d569
1004d565:	or     DWORD PTR [ebp-0x14],0x20
1004d569:	mov    edi,DWORD PTR [ebp-0x18]
1004d56c:	cmp    edi,0xffffffff
1004d56f:	jne    0x1004d576
1004d571:	mov    edi,0x7fffffff
1004d576:	add    ebx,0x4
1004d579:	test   BYTE PTR [ebp-0x14],0x20
1004d57d:	mov    DWORD PTR [ebp-0x24],ebx
1004d580:	mov    ebx,DWORD PTR [ebx-0x4]
1004d583:	mov    DWORD PTR [ebp-0x1c],ebx
1004d586:	je     0x1004d968
1004d58c:	test   ebx,ebx
1004d58e:	jne    0x1004d598
1004d590:	mov    eax,ds:0x1007de30
1004d595:	mov    DWORD PTR [ebp-0x1c],eax
1004d598:	and    DWORD PTR [ebp-0x20],0x0
1004d59c:	test   edi,edi
1004d59e:	mov    esi,DWORD PTR [ebp-0x1c]
1004d5a1:	jle    0x1004d995
1004d5a7:	mov    al,BYTE PTR [esi]
1004d5a9:	test   al,al
1004d5ab:	je     0x1004d995
1004d5b1:	lea    ecx,[ebp-0x58]
1004d5b4:	movzx  eax,al
1004d5b7:	push   ecx
1004d5b8:	push   eax
1004d5b9:	call   0x10048bdf
1004d5be:	test   eax,eax
1004d5c0:	pop    ecx
1004d5c1:	pop    ecx
1004d5c2:	je     0x1004d5c5
1004d5c4:	inc    esi
1004d5c5:	inc    esi
1004d5c6:	inc    DWORD PTR [ebp-0x20]
1004d5c9:	cmp    DWORD PTR [ebp-0x20],edi
1004d5cc:	jl     0x1004d5a7
1004d5ce:	jmp    0x1004d995
1004d5d3:	sub    eax,0x58
1004d5d6:	je     0x1004d81b
1004d5dc:	sub    eax,esi
1004d5de:	je     0x1004d648
1004d5e0:	sub    eax,0x7
1004d5e3:	je     0x1004d520
1004d5e9:	sub    eax,esi
1004d5eb:	jne    0x1004d995
1004d5f1:	movzx  eax,WORD PTR [ebx]
1004d5f4:	add    ebx,0x4
1004d5f7:	xor    esi,esi
1004d5f9:	inc    esi
1004d5fa:	test   BYTE PTR [ebp-0x14],0x20
1004d5fe:	mov    DWORD PTR [ebp-0x34],esi
1004d601:	mov    DWORD PTR [ebp-0x24],ebx
1004d604:	mov    DWORD PTR [ebp-0x70],eax
1004d607:	je     0x1004d636
1004d609:	mov    BYTE PTR [ebp-0x44],al
1004d60c:	lea    eax,[ebp-0x58]
1004d60f:	push   eax
1004d610:	mov    eax,DWORD PTR [ebp-0x58]
1004d613:	mov    BYTE PTR [ebp-0x43],0x0
1004d617:	push   DWORD PTR [eax+0xac]
1004d61d:	lea    eax,[ebp-0x44]
1004d620:	push   eax
1004d621:	lea    eax,[ebp-0x10]
1004d624:	push   eax
1004d625:	call   0x1004d0da
1004d62a:	add    esp,0x10
1004d62d:	test   eax,eax
1004d62f:	jge    0x1004d63a
1004d631:	mov    DWORD PTR [ebp-0x5c],esi
1004d634:	jmp    0x1004d63a
1004d636:	mov    WORD PTR [ebp-0x10],ax
1004d63a:	lea    eax,[ebp-0x10]
1004d63d:	mov    DWORD PTR [ebp-0x1c],eax
1004d640:	mov    DWORD PTR [ebp-0x20],esi
1004d643:	jmp    0x1004d995
1004d648:	mov    eax,DWORD PTR [ebx]
1004d64a:	add    ebx,0x4
1004d64d:	test   eax,eax
1004d64f:	mov    DWORD PTR [ebp-0x24],ebx
1004d652:	je     0x1004d681
1004d654:	mov    ecx,DWORD PTR [eax+0x4]
1004d657:	test   ecx,ecx
1004d659:	je     0x1004d681
1004d65b:	test   WORD PTR [ebp-0x14],0x800
1004d661:	movsx  eax,WORD PTR [eax]
1004d664:	mov    DWORD PTR [ebp-0x1c],ecx
1004d667:	je     0x1004d678
1004d669:	cdq    
1004d66a:	sub    eax,edx
1004d66c:	mov    DWORD PTR [ebp-0x34],0x1
1004d673:	jmp    0x1004d990
1004d678:	and    DWORD PTR [ebp-0x34],0x0
1004d67c:	jmp    0x1004d992
1004d681:	mov    eax,ds:0x1007de30
1004d686:	mov    DWORD PTR [ebp-0x1c],eax
1004d689:	push   eax
1004d68a:	call   0x10041f10
1004d68f:	pop    ecx
1004d690:	jmp    0x1004d992
1004d695:	cmp    eax,0x70
1004d698:	jg     0x1004d824
1004d69e:	je     0x1004d818
1004d6a4:	cmp    eax,0x65
1004d6a7:	jl     0x1004d995
1004d6ad:	cmp    eax,0x67
1004d6b0:	jle    0x1004d520
1004d6b6:	cmp    eax,0x69
1004d6b9:	je     0x1004d710
1004d6bb:	cmp    eax,0x6e
1004d6be:	je     0x1004d6db
1004d6c0:	cmp    eax,0x6f
1004d6c3:	jne    0x1004d995
1004d6c9:	test   BYTE PTR [ebp-0x14],0x80
1004d6cd:	mov    DWORD PTR [ebp-0x28],edx
1004d6d0:	je     0x1004d71b
1004d6d2:	or     DWORD PTR [ebp-0x14],0x200
1004d6d9:	jmp    0x1004d71b
1004d6db:	mov    esi,DWORD PTR [ebx]
1004d6dd:	add    ebx,0x4
1004d6e0:	mov    DWORD PTR [ebp-0x24],ebx
1004d6e3:	call   0x1004d0c4
1004d6e8:	test   eax,eax
1004d6ea:	je     0x1004d263
1004d6f0:	test   BYTE PTR [ebp-0x14],0x20
1004d6f4:	je     0x1004d6ff
1004d6f6:	mov    ax,WORD PTR [ebp-0x2c]
1004d6fa:	mov    WORD PTR [esi],ax
1004d6fd:	jmp    0x1004d704
1004d6ff:	mov    eax,DWORD PTR [ebp-0x2c]
1004d702:	mov    DWORD PTR [esi],eax
1004d704:	mov    DWORD PTR [ebp-0x5c],0x1
1004d70b:	jmp    0x1004da9e
1004d710:	or     DWORD PTR [ebp-0x14],0x40
1004d714:	mov    DWORD PTR [ebp-0x28],0xa
1004d71b:	test   WORD PTR [ebp-0x14],0x8000
1004d721:	je     0x1004d86e
1004d727:	add    ebx,edx
1004d729:	mov    eax,DWORD PTR [ebx-0x8]
1004d72c:	mov    edx,DWORD PTR [ebx-0x4]
1004d72f:	jmp    0x1004d8a7
1004d734:	jne    0x1004d745
1004d736:	cmp    cx,0x67
1004d73a:	jne    0x1004d784
1004d73c:	mov    DWORD PTR [ebp-0x18],0x1
1004d743:	jmp    0x1004d784
1004d745:	cmp    DWORD PTR [ebp-0x18],eax
1004d748:	jle    0x1004d74d
1004d74a:	mov    DWORD PTR [ebp-0x18],eax
1004d74d:	cmp    DWORD PTR [ebp-0x18],0xa3
1004d754:	jle    0x1004d784
1004d756:	mov    edi,DWORD PTR [ebp-0x18]
1004d759:	add    edi,0x15d
1004d75f:	push   edi
1004d760:	call   0x10046172
1004d765:	test   eax,eax
1004d767:	pop    ecx
1004d768:	mov    ecx,DWORD PTR [ebp-0x28]
1004d76b:	push   0x8
1004d76d:	mov    DWORD PTR [ebp-0x64],eax
1004d770:	pop    edx
1004d771:	je     0x1004d77d
1004d773:	mov    DWORD PTR [ebp-0x1c],eax
1004d776:	mov    DWORD PTR [ebp-0x20],edi
1004d779:	mov    esi,eax
1004d77b:	jmp    0x1004d784
1004d77d:	mov    DWORD PTR [ebp-0x18],0xa3
1004d784:	add    ebx,edx
1004d786:	mov    eax,DWORD PTR [ebx-0x8]
1004d789:	mov    DWORD PTR [ebp-0x78],eax
1004d78c:	mov    eax,DWORD PTR [ebx-0x4]
1004d78f:	mov    DWORD PTR [ebp-0x74],eax
1004d792:	lea    eax,[ebp-0x58]
1004d795:	push   eax
1004d796:	push   DWORD PTR [ebp-0x68]
1004d799:	movsx  eax,cl
1004d79c:	push   DWORD PTR [ebp-0x18]
1004d79f:	mov    DWORD PTR [ebp-0x24],ebx
1004d7a2:	push   eax
1004d7a3:	push   DWORD PTR [ebp-0x20]
1004d7a6:	lea    eax,[ebp-0x78]
1004d7a9:	push   esi
1004d7aa:	push   eax
1004d7ab:	push   DWORD PTR ds:0x1007da98
1004d7b1:	call   0x10045c42
1004d7b6:	pop    ecx
1004d7b7:	call   eax
1004d7b9:	mov    ebx,DWORD PTR [ebp-0x14]
1004d7bc:	add    esp,0x1c
1004d7bf:	and    ebx,0x80
1004d7c5:	je     0x1004d7e2
1004d7c7:	cmp    DWORD PTR [ebp-0x18],0x0
1004d7cb:	jne    0x1004d7e2
1004d7cd:	lea    eax,[ebp-0x58]
1004d7d0:	push   eax
1004d7d1:	push   esi
1004d7d2:	push   DWORD PTR ds:0x1007daa4
1004d7d8:	call   0x10045c42
1004d7dd:	pop    ecx
1004d7de:	call   eax
1004d7e0:	pop    ecx
1004d7e1:	pop    ecx
1004d7e2:	cmp    WORD PTR [ebp-0x28],0x67
1004d7e7:	jne    0x1004d802
1004d7e9:	test   ebx,ebx
1004d7eb:	jne    0x1004d802
1004d7ed:	lea    eax,[ebp-0x58]
1004d7f0:	push   eax
1004d7f1:	push   esi
1004d7f2:	push   DWORD PTR ds:0x1007daa0
1004d7f8:	call   0x10045c42
1004d7fd:	pop    ecx
1004d7fe:	call   eax
1004d800:	pop    ecx
1004d801:	pop    ecx
1004d802:	cmp    BYTE PTR [esi],0x2d
1004d805:	jne    0x1004d812
1004d807:	or     DWORD PTR [ebp-0x14],0x100
1004d80e:	inc    esi
1004d80f:	mov    DWORD PTR [ebp-0x1c],esi
1004d812:	push   esi
1004d813:	jmp    0x1004d68a
1004d818:	mov    DWORD PTR [ebp-0x18],edx
1004d81b:	mov    DWORD PTR [ebp-0x60],0x7
1004d822:	jmp    0x1004d845
1004d824:	sub    eax,0x73
1004d827:	je     0x1004d569
1004d82d:	sub    eax,esi
1004d82f:	je     0x1004d714
1004d835:	sub    eax,0x3
1004d838:	jne    0x1004d995
1004d83e:	mov    DWORD PTR [ebp-0x60],0x27
1004d845:	test   BYTE PTR [ebp-0x14],0x80
1004d849:	mov    DWORD PTR [ebp-0x28],0x10
1004d850:	je     0x1004d71b
1004d856:	mov    eax,DWORD PTR [ebp-0x60]
1004d859:	add    eax,0x51
1004d85c:	mov    WORD PTR [ebp-0x3c],0x30
1004d862:	mov    WORD PTR [ebp-0x3a],ax
1004d866:	mov    DWORD PTR [ebp-0x30],esi
1004d869:	jmp    0x1004d71b
1004d86e:	test   WORD PTR [ebp-0x14],0x1000
1004d874:	jne    0x1004d727
1004d87a:	add    ebx,0x4
1004d87d:	test   BYTE PTR [ebp-0x14],0x20
1004d881:	je     0x1004d899
1004d883:	test   BYTE PTR [ebp-0x14],0x40
1004d887:	mov    DWORD PTR [ebp-0x24],ebx
1004d88a:	je     0x1004d892
1004d88c:	movsx  eax,WORD PTR [ebx-0x4]
1004d890:	jmp    0x1004d896
1004d892:	movzx  eax,WORD PTR [ebx-0x4]
1004d896:	cdq    
1004d897:	jmp    0x1004d8aa
1004d899:	test   BYTE PTR [ebp-0x14],0x40
1004d89d:	mov    eax,DWORD PTR [ebx-0x4]
1004d8a0:	je     0x1004d8a5
1004d8a2:	cdq    
1004d8a3:	jmp    0x1004d8a7
1004d8a5:	xor    edx,edx
1004d8a7:	mov    DWORD PTR [ebp-0x24],ebx
1004d8aa:	test   BYTE PTR [ebp-0x14],0x40
1004d8ae:	je     0x1004d8c8
1004d8b0:	test   edx,edx
1004d8b2:	jg     0x1004d8c8
1004d8b4:	jl     0x1004d8ba
1004d8b6:	test   eax,eax
1004d8b8:	jae    0x1004d8c8
1004d8ba:	neg    eax
1004d8bc:	adc    edx,0x0
1004d8bf:	neg    edx
1004d8c1:	or     DWORD PTR [ebp-0x14],0x100
1004d8c8:	test   WORD PTR [ebp-0x14],0x9000
1004d8ce:	mov    ebx,edx
1004d8d0:	mov    edi,eax
1004d8d2:	jne    0x1004d8d6
1004d8d4:	xor    ebx,ebx
1004d8d6:	cmp    DWORD PTR [ebp-0x18],0x0
1004d8da:	jge    0x1004d8e5
1004d8dc:	mov    DWORD PTR [ebp-0x18],0x1
1004d8e3:	jmp    0x1004d8f6
1004d8e5:	and    DWORD PTR [ebp-0x14],0xfffffff7
1004d8e9:	mov    eax,0x200
1004d8ee:	cmp    DWORD PTR [ebp-0x18],eax
1004d8f1:	jle    0x1004d8f6
1004d8f3:	mov    DWORD PTR [ebp-0x18],eax
1004d8f6:	mov    eax,edi
1004d8f8:	or     eax,ebx
1004d8fa:	jne    0x1004d900
1004d8fc:	and    DWORD PTR [ebp-0x30],0x0
1004d900:	lea    esi,[ebp+0x1ef]
1004d906:	mov    eax,DWORD PTR [ebp-0x18]
1004d909:	dec    DWORD PTR [ebp-0x18]
1004d90c:	test   eax,eax
1004d90e:	jg     0x1004d916
1004d910:	mov    eax,edi
1004d912:	or     eax,ebx
1004d914:	je     0x1004d93a
1004d916:	mov    eax,DWORD PTR [ebp-0x28]
1004d919:	cdq    
1004d91a:	push   edx
1004d91b:	push   eax
1004d91c:	push   ebx
1004d91d:	push   edi
1004d91e:	call   0x10048310
1004d923:	add    ecx,0x30
1004d926:	cmp    ecx,0x39
1004d929:	mov    DWORD PTR [ebp-0x7c],ebx
1004d92c:	mov    edi,eax
1004d92e:	mov    ebx,edx
1004d930:	jle    0x1004d935
1004d932:	add    ecx,DWORD PTR [ebp-0x60]
1004d935:	mov    BYTE PTR [esi],cl
1004d937:	dec    esi
1004d938:	jmp    0x1004d906
1004d93a:	lea    eax,[ebp+0x1ef]
1004d940:	sub    eax,esi
1004d942:	inc    esi
1004d943:	test   WORD PTR [ebp-0x14],0x200
1004d949:	mov    DWORD PTR [ebp-0x20],eax
1004d94c:	mov    DWORD PTR [ebp-0x1c],esi
1004d94f:	je     0x1004d995
1004d951:	test   eax,eax
1004d953:	je     0x1004d95c
1004d955:	mov    ecx,esi
1004d957:	cmp    BYTE PTR [ecx],0x30
1004d95a:	je     0x1004d995
1004d95c:	dec    DWORD PTR [ebp-0x1c]
1004d95f:	mov    ecx,DWORD PTR [ebp-0x1c]
1004d962:	mov    BYTE PTR [ecx],0x30
1004d965:	inc    eax
1004d966:	jmp    0x1004d992
1004d968:	test   ebx,ebx
1004d96a:	jne    0x1004d974
1004d96c:	mov    eax,ds:0x1007de34
1004d971:	mov    DWORD PTR [ebp-0x1c],eax
1004d974:	mov    eax,DWORD PTR [ebp-0x1c]
1004d977:	mov    DWORD PTR [ebp-0x34],0x1
1004d97e:	jmp    0x1004d989
1004d980:	dec    edi
1004d981:	cmp    WORD PTR [eax],0x0
1004d985:	je     0x1004d98d
1004d987:	add    eax,esi
1004d989:	test   edi,edi
1004d98b:	jne    0x1004d980
1004d98d:	sub    eax,DWORD PTR [ebp-0x1c]
1004d990:	sar    eax,1
1004d992:	mov    DWORD PTR [ebp-0x20],eax
1004d995:	cmp    DWORD PTR [ebp-0x5c],0x0
1004d999:	jne    0x1004da9e
1004d99f:	mov    eax,DWORD PTR [ebp-0x14]
1004d9a2:	test   al,0x40
1004d9a4:	je     0x1004d9d1
1004d9a6:	test   ax,0x100
1004d9aa:	je     0x1004d9b4
1004d9ac:	mov    WORD PTR [ebp-0x3c],0x2d
1004d9b2:	jmp    0x1004d9ca
1004d9b4:	test   al,0x1
1004d9b6:	je     0x1004d9c0
1004d9b8:	mov    WORD PTR [ebp-0x3c],0x2b
1004d9be:	jmp    0x1004d9ca
1004d9c0:	test   al,0x2
1004d9c2:	je     0x1004d9d1
1004d9c4:	mov    WORD PTR [ebp-0x3c],0x20
1004d9ca:	mov    DWORD PTR [ebp-0x30],0x1
1004d9d1:	mov    ebx,DWORD PTR [ebp-0x38]
1004d9d4:	mov    esi,DWORD PTR [ebp-0x20]
1004d9d7:	sub    ebx,esi
1004d9d9:	sub    ebx,DWORD PTR [ebp-0x30]
1004d9dc:	test   BYTE PTR [ebp-0x14],0xc
1004d9e0:	jne    0x1004d9f3
1004d9e2:	push   DWORD PTR [ebp-0x48]
1004d9e5:	lea    eax,[ebp-0x2c]
1004d9e8:	push   ebx
1004d9e9:	push   0x20
1004d9eb:	call   0x100491c1
1004d9f0:	add    esp,0xc
1004d9f3:	push   DWORD PTR [ebp-0x30]
1004d9f6:	mov    edi,DWORD PTR [ebp-0x48]
1004d9f9:	lea    eax,[ebp-0x2c]
1004d9fc:	lea    ecx,[ebp-0x3c]
1004d9ff:	call   0x100491e6
1004da04:	test   BYTE PTR [ebp-0x14],0x8
1004da08:	pop    ecx
1004da09:	je     0x1004da20
1004da0b:	test   BYTE PTR [ebp-0x14],0x4
1004da0f:	jne    0x1004da20
1004da11:	push   edi
1004da12:	push   ebx
1004da13:	push   0x30
1004da15:	lea    eax,[ebp-0x2c]
1004da18:	call   0x100491c1
1004da1d:	add    esp,0xc
1004da20:	cmp    DWORD PTR [ebp-0x34],0x0
1004da24:	jne    0x1004da74
1004da26:	test   esi,esi
1004da28:	jle    0x1004da74
1004da2a:	mov    edi,DWORD PTR [ebp-0x1c]
1004da2d:	mov    DWORD PTR [ebp-0x28],esi
1004da30:	dec    DWORD PTR [ebp-0x28]
1004da33:	lea    eax,[ebp-0x58]
1004da36:	push   eax
1004da37:	mov    eax,DWORD PTR [ebp-0x58]
1004da3a:	push   DWORD PTR [eax+0xac]
1004da40:	lea    eax,[ebp-0x70]
1004da43:	push   edi
1004da44:	push   eax
1004da45:	call   0x1004d0da
1004da4a:	add    esp,0x10
1004da4d:	test   eax,eax
1004da4f:	mov    DWORD PTR [ebp-0x7c],eax
1004da52:	jle    0x1004da6e
1004da54:	push   DWORD PTR [ebp-0x70]
1004da57:	mov    eax,DWORD PTR [ebp-0x48]
1004da5a:	lea    esi,[ebp-0x2c]
1004da5d:	call   0x1004919c
1004da62:	add    edi,DWORD PTR [ebp-0x7c]
1004da65:	cmp    DWORD PTR [ebp-0x28],0x0
1004da69:	pop    ecx
1004da6a:	jg     0x1004da30
1004da6c:	jmp    0x1004da81
1004da6e:	or     DWORD PTR [ebp-0x2c],0xffffffff
1004da72:	jmp    0x1004da81
1004da74:	mov    ecx,DWORD PTR [ebp-0x1c]
1004da77:	push   esi
1004da78:	lea    eax,[ebp-0x2c]
1004da7b:	call   0x100491e6
1004da80:	pop    ecx
1004da81:	cmp    DWORD PTR [ebp-0x2c],0x0
1004da85:	jl     0x1004da9e
1004da87:	test   BYTE PTR [ebp-0x14],0x4
1004da8b:	je     0x1004da9e
1004da8d:	push   DWORD PTR [ebp-0x48]
1004da90:	lea    eax,[ebp-0x2c]
1004da93:	push   ebx
1004da94:	push   0x20
1004da96:	call   0x100491c1
1004da9b:	add    esp,0xc
1004da9e:	cmp    DWORD PTR [ebp-0x64],0x0
1004daa2:	je     0x1004dab1
1004daa4:	push   DWORD PTR [ebp-0x64]
1004daa7:	call   0x10042408
1004daac:	and    DWORD PTR [ebp-0x64],0x0
1004dab0:	pop    ecx
1004dab1:	mov    edi,DWORD PTR [ebp-0x6c]
1004dab4:	mov    ebx,DWORD PTR [ebp-0x24]
1004dab7:	movzx  eax,WORD PTR [edi]
1004daba:	test   ax,ax
1004dabd:	mov    DWORD PTR [ebp-0x28],eax
1004dac0:	je     0x1004dac9
1004dac2:	mov    ecx,eax
1004dac4:	jmp    0x1004d2c5
1004dac9:	cmp    DWORD PTR [ebp-0x40],0x0
1004dacd:	je     0x1004dad9
1004dacf:	cmp    DWORD PTR [ebp-0x40],0x7
1004dad3:	jne    0x1004d263
1004dad9:	cmp    BYTE PTR [ebp-0x4c],0x0
1004dadd:	je     0x1004dae6
1004dadf:	mov    eax,DWORD PTR [ebp-0x50]
1004dae2:	and    DWORD PTR [eax+0x70],0xfffffffd
1004dae6:	mov    eax,DWORD PTR [ebp-0x2c]
1004dae9:	mov    ecx,DWORD PTR [ebp+0x3f0]
1004daef:	pop    edi
1004daf0:	pop    esi
1004daf1:	xor    ecx,ebp
1004daf3:	pop    ebx
1004daf4:	call   0x10041d97
1004daf9:	add    ebp,0x3f4
1004daff:	leave  
1004db00:	ret    
1004db01:	lea    ecx,[ecx+0x0]
1004db04:	enter  0x4d4,0x10
1004db08:	sbb    eax,0x3a1004d3
1004db0d:	rol    DWORD PTR [eax+edx*1],cl
1004db10:	xchg   bl,dl
1004db12:	add    al,0x10
1004db14:	rcl    bl,0x4
1004db17:	adc    cl,cl
1004db19:	rol    DWORD PTR [eax+edx*1],cl
1004db1c:	add    ah,dl
1004db1e:	add    al,0x10
1004db20:	loope  0x1004daf6
1004db22:	add    al,0x10
1004db24:	push   ebp
1004db25:	mov    ebp,esp
1004db27:	sub    esp,0x10
1004db2a:	push   DWORD PTR [ebp+0x8]
1004db2d:	lea    ecx,[ebp-0x10]
1004db30:	call   0x10044235
1004db35:	movzx  eax,BYTE PTR [ebp+0xc]
1004db39:	mov    ecx,DWORD PTR [ebp-0xc]
1004db3c:	mov    dl,BYTE PTR [ebp+0x14]
1004db3f:	test   BYTE PTR [ecx+eax*1+0x1d],dl
1004db43:	jne    0x1004db63
1004db45:	cmp    DWORD PTR [ebp+0x10],0x0
1004db49:	je     0x1004db5d
1004db4b:	mov    ecx,DWORD PTR [ebp-0x10]
1004db4e:	mov    ecx,DWORD PTR [ecx+0xc8]
1004db54:	movzx  eax,WORD PTR [ecx+eax*2]
1004db58:	and    eax,DWORD PTR [ebp+0x10]
1004db5b:	jmp    0x1004db5f
1004db5d:	xor    eax,eax
1004db5f:	test   eax,eax
1004db61:	je     0x1004db66
1004db63:	xor    eax,eax
1004db65:	inc    eax
1004db66:	cmp    BYTE PTR [ebp-0x4],0x0
1004db6a:	je     0x1004db73
1004db6c:	mov    ecx,DWORD PTR [ebp-0x8]
1004db6f:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004db73:	leave  
1004db74:	ret    
1004db75:	push   0x4
1004db77:	push   0x0
1004db79:	push   DWORD PTR [esp+0xc]
1004db7d:	push   0x0
1004db7f:	call   0x1004db24
1004db84:	add    esp,0x10
1004db87:	ret    
1004db88:	push   ebp
1004db89:	mov    ebp,esp
1004db8b:	push   ebx
1004db8c:	push   esi
1004db8d:	push   edi
1004db8e:	push   ebp
1004db8f:	push   0x0
1004db91:	push   0x0
1004db93:	push   0x1004dba0
1004db98:	push   DWORD PTR [ebp+0x8]
1004db9b:	call   0x1005593e
1004dba0:	pop    ebp
1004dba1:	pop    edi
1004dba2:	pop    esi
1004dba3:	pop    ebx
1004dba4:	mov    esp,ebp
1004dba6:	pop    ebp
1004dba7:	ret    
1004dba8:	mov    ecx,DWORD PTR [esp+0x4]
1004dbac:	test   DWORD PTR [ecx+0x4],0x6
1004dbb3:	mov    eax,0x1
1004dbb8:	je     0x1004dbec
1004dbba:	mov    eax,DWORD PTR [esp+0x14]
1004dbbe:	mov    ecx,DWORD PTR [eax-0x4]
1004dbc1:	xor    ecx,eax
1004dbc3:	call   0x10041d97
1004dbc8:	push   ebp
1004dbc9:	mov    ebp,DWORD PTR [eax+0x10]
1004dbcc:	mov    edx,DWORD PTR [eax+0x28]
1004dbcf:	push   edx
1004dbd0:	mov    edx,DWORD PTR [eax+0x24]
1004dbd3:	push   edx
1004dbd4:	call   0x1004dbed
1004dbd9:	add    esp,0x8
1004dbdc:	pop    ebp
1004dbdd:	mov    eax,DWORD PTR [esp+0x8]
1004dbe1:	mov    edx,DWORD PTR [esp+0x10]
1004dbe5:	mov    DWORD PTR [edx],eax
1004dbe7:	mov    eax,0x3
1004dbec:	ret    
1004dbed:	push   ebx
1004dbee:	push   esi
1004dbef:	push   edi
1004dbf0:	mov    eax,DWORD PTR [esp+0x10]
1004dbf4:	push   ebp
1004dbf5:	push   eax
1004dbf6:	push   0xfffffffe
1004dbf8:	push   0x1004dba8
1004dbfd:	push   DWORD PTR fs:0x0
1004dc04:	mov    eax,ds:0x1007d030
1004dc09:	xor    eax,esp
1004dc0b:	push   eax
1004dc0c:	lea    eax,[esp+0x4]
1004dc10:	mov    fs:0x0,eax
1004dc16:	mov    eax,DWORD PTR [esp+0x28]
1004dc1a:	mov    ebx,DWORD PTR [eax+0x8]
1004dc1d:	mov    esi,DWORD PTR [eax+0xc]
1004dc20:	cmp    esi,0xffffffff
1004dc23:	je     0x1004dc5f
1004dc25:	cmp    DWORD PTR [esp+0x2c],0xffffffff
1004dc2a:	je     0x1004dc32
1004dc2c:	cmp    esi,DWORD PTR [esp+0x2c]
1004dc30:	jbe    0x1004dc5f
1004dc32:	lea    esi,[esi+esi*2]
1004dc35:	mov    ecx,DWORD PTR [ebx+esi*4]
1004dc38:	mov    DWORD PTR [esp+0xc],ecx
1004dc3c:	mov    DWORD PTR [eax+0xc],ecx
1004dc3f:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
1004dc44:	jne    0x1004dc5d
1004dc46:	push   0x101
1004dc4b:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
1004dc4f:	call   0x1004dc9d
1004dc54:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
1004dc58:	call   0x1004dcbc
1004dc5d:	jmp    0x1004dc16
1004dc5f:	mov    ecx,DWORD PTR [esp+0x4]
1004dc63:	mov    DWORD PTR fs:0x0,ecx
1004dc6a:	add    esp,0x18
1004dc6d:	pop    edi
1004dc6e:	pop    esi
1004dc6f:	pop    ebx
1004dc70:	ret    
1004dc71:	xor    eax,eax
1004dc73:	mov    ecx,DWORD PTR fs:0x0
1004dc7a:	cmp    DWORD PTR [ecx+0x4],0x1004dba8
1004dc81:	jne    0x1004dc93
1004dc83:	mov    edx,DWORD PTR [ecx+0xc]
1004dc86:	mov    edx,DWORD PTR [edx+0xc]
1004dc89:	cmp    DWORD PTR [ecx+0x8],edx
1004dc8c:	jne    0x1004dc93
1004dc8e:	mov    eax,0x1
1004dc93:	ret    
1004dc94:	push   ebx
1004dc95:	push   ecx
1004dc96:	mov    ebx,0x1007de38
1004dc9b:	jmp    0x1004dca8
1004dc9d:	push   ebx
1004dc9e:	push   ecx
1004dc9f:	mov    ebx,0x1007de38
1004dca4:	mov    ecx,DWORD PTR [esp+0xc]
1004dca8:	mov    DWORD PTR [ebx+0x8],ecx
1004dcab:	mov    DWORD PTR [ebx+0x4],eax
1004dcae:	mov    DWORD PTR [ebx+0xc],ebp
1004dcb1:	push   ebp
1004dcb2:	push   ecx
1004dcb3:	push   eax
1004dcb4:	pop    eax
1004dcb5:	pop    ecx
1004dcb6:	pop    ebp
1004dcb7:	pop    ecx
1004dcb8:	pop    ebx
1004dcb9:	ret    0x4
1004dcbc:	call   eax
1004dcbe:	ret    
1004dcbf:	push   0x2
1004dcc1:	call   0x100462e8
1004dcc6:	pop    ecx
1004dcc7:	ret    
1004dcc8:	xor    eax,eax
1004dcca:	inc    eax
1004dccb:	cmp    DWORD PTR [esp+0x4],0x0
1004dcd0:	jne    0x1004dcd4
1004dcd2:	xor    eax,eax
1004dcd4:	ret    
1004dcd5:	push   ebp
1004dcd6:	mov    ebp,esp
1004dcd8:	sub    esp,0x10
1004dcdb:	mov    eax,ds:0x1007d030
1004dce0:	xor    eax,ebp
1004dce2:	mov    DWORD PTR [ebp-0x4],eax
1004dce5:	cmp    DWORD PTR [ebp+0x14],0xffffffff
1004dce9:	push   ebx
1004dcea:	push   esi
1004dceb:	push   edi
1004dcec:	jge    0x1004dcf5
1004dcee:	xor    eax,eax
1004dcf0:	jmp    0x1004dee7
1004dcf5:	mov    eax,ds:0x1007f528
1004dcfa:	mov    esi,DWORD PTR ds:0x10065228
1004dd00:	xor    ebx,ebx
1004dd02:	xor    edi,edi
1004dd04:	inc    ebx
1004dd05:	cmp    eax,edi
1004dd07:	jne    0x1004dd3c
1004dd09:	lea    eax,[ebp-0x8]
1004dd0c:	push   eax
1004dd0d:	push   ebx
1004dd0e:	push   0x10065cb8
1004dd13:	push   ebx
1004dd14:	call   esi
1004dd16:	test   eax,eax
1004dd18:	je     0x1004dd22
1004dd1a:	mov    DWORD PTR ds:0x1007f528,ebx
1004dd20:	jmp    0x1004dd40
1004dd22:	call   DWORD PTR ds:0x100650c4
1004dd28:	cmp    eax,0x78
1004dd2b:	jne    0x1004dd37
1004dd2d:	push   0x2
1004dd2f:	pop    eax
1004dd30:	mov    ds:0x1007f528,eax
1004dd35:	jmp    0x1004dd3c
1004dd37:	mov    eax,ds:0x1007f528
1004dd3c:	cmp    eax,ebx
1004dd3e:	jne    0x1004dd53
1004dd40:	push   DWORD PTR [ebp+0x18]
1004dd43:	push   DWORD PTR [ebp+0x14]
1004dd46:	push   DWORD PTR [ebp+0x10]
1004dd49:	push   DWORD PTR [ebp+0xc]
1004dd4c:	call   esi
1004dd4e:	jmp    0x1004dee7
1004dd53:	cmp    eax,0x2
1004dd56:	je     0x1004dd5c
1004dd58:	cmp    eax,edi
1004dd5a:	jne    0x1004dcee
1004dd5c:	cmp    DWORD PTR [ebp+0x20],edi
1004dd5f:	mov    DWORD PTR [ebp-0xc],edi
1004dd62:	jne    0x1004dd6f
1004dd64:	mov    eax,DWORD PTR [ebp+0x8]
1004dd67:	mov    eax,DWORD PTR [eax]
1004dd69:	mov    eax,DWORD PTR [eax+0x14]
1004dd6c:	mov    DWORD PTR [ebp+0x20],eax
1004dd6f:	cmp    DWORD PTR [ebp+0x1c],edi
1004dd72:	jne    0x1004dd7f
1004dd74:	mov    eax,DWORD PTR [ebp+0x8]
1004dd77:	mov    eax,DWORD PTR [eax]
1004dd79:	mov    eax,DWORD PTR [eax+0x4]
1004dd7c:	mov    DWORD PTR [ebp+0x1c],eax
1004dd7f:	push   DWORD PTR [ebp+0x20]
1004dd82:	call   0x1004b7f4
1004dd87:	cmp    DWORD PTR [ebp+0x1c],eax
1004dd8a:	pop    ecx
1004dd8b:	je     0x1004dd95
1004dd8d:	cmp    eax,0xffffffff
1004dd90:	je     0x1004dd95
1004dd92:	mov    DWORD PTR [ebp+0x1c],eax
1004dd95:	mov    ebx,DWORD PTR ds:0x100650dc
1004dd9b:	push   edi
1004dd9c:	push   edi
1004dd9d:	push   edi
1004dd9e:	push   edi
1004dd9f:	push   DWORD PTR [ebp+0x14]
1004dda2:	push   DWORD PTR [ebp+0x10]
1004dda5:	push   edi
1004dda6:	push   DWORD PTR [ebp+0x1c]
1004dda9:	call   ebx
1004ddab:	mov    esi,eax
1004ddad:	cmp    esi,edi
1004ddaf:	mov    DWORD PTR [ebp-0x10],esi
1004ddb2:	je     0x1004dcee
1004ddb8:	jle    0x1004ddf5
1004ddba:	cmp    esi,0xffffffe0
1004ddbd:	ja     0x1004ddf5
1004ddbf:	lea    eax,[esi+0x8]
1004ddc2:	cmp    eax,0x400
1004ddc7:	ja     0x1004dddc
1004ddc9:	call   0x10049010
1004ddce:	mov    eax,esp
1004ddd0:	cmp    eax,edi
1004ddd2:	je     0x1004ddf0
1004ddd4:	mov    DWORD PTR [eax],0xcccc
1004ddda:	jmp    0x1004dded
1004dddc:	push   eax
1004dddd:	call   0x10043cdd
1004dde2:	cmp    eax,edi
1004dde4:	pop    ecx
1004dde5:	je     0x1004ddf0
1004dde7:	mov    DWORD PTR [eax],0xdddd
1004dded:	add    eax,0x8
1004ddf0:	mov    DWORD PTR [ebp-0x8],eax
1004ddf3:	jmp    0x1004ddf8
1004ddf5:	mov    DWORD PTR [ebp-0x8],edi
1004ddf8:	cmp    DWORD PTR [ebp-0x8],edi
1004ddfb:	je     0x1004dcee
1004de01:	push   esi
1004de02:	push   edi
1004de03:	push   DWORD PTR [ebp-0x8]
1004de06:	call   0x10044950
1004de0b:	add    esp,0xc
1004de0e:	push   edi
1004de0f:	push   edi
1004de10:	push   esi
1004de11:	push   DWORD PTR [ebp-0x8]
1004de14:	push   DWORD PTR [ebp+0x14]
1004de17:	push   DWORD PTR [ebp+0x10]
1004de1a:	push   edi
1004de1b:	push   DWORD PTR [ebp+0x1c]
1004de1e:	call   ebx
1004de20:	test   eax,eax
1004de22:	je     0x1004dedb
1004de28:	lea    eax,[esi+0x1]
1004de2b:	cmp    eax,edi
1004de2d:	jle    0x1004de73
1004de2f:	cmp    eax,0x7ffffff0
1004de34:	ja     0x1004de73
1004de36:	lea    eax,[esi+esi*1+0xa]
1004de3a:	cmp    eax,0x400
1004de3f:	ja     0x1004de5b
1004de41:	call   0x10049010
1004de46:	mov    ebx,esp
1004de48:	cmp    ebx,edi
1004de4a:	je     0x1004dedb
1004de50:	mov    DWORD PTR [ebx],0xcccc
1004de56:	add    ebx,0x8
1004de59:	jmp    0x1004de75
1004de5b:	push   eax
1004de5c:	call   0x10043cdd
1004de61:	cmp    eax,edi
1004de63:	pop    ecx
1004de64:	je     0x1004de6f
1004de66:	mov    DWORD PTR [eax],0xdddd
1004de6c:	add    eax,0x8
1004de6f:	mov    ebx,eax
1004de71:	jmp    0x1004de75
1004de73:	xor    ebx,ebx
1004de75:	cmp    ebx,edi
1004de77:	je     0x1004dedb
1004de79:	cmp    DWORD PTR [ebp+0x20],edi
1004de7c:	jne    0x1004de89
1004de7e:	mov    eax,DWORD PTR [ebp+0x8]
1004de81:	mov    eax,DWORD PTR [eax]
1004de83:	mov    eax,DWORD PTR [eax+0x14]
1004de86:	mov    DWORD PTR [ebp+0x20],eax
1004de89:	mov    edi,DWORD PTR [ebp+0x14]
1004de8c:	push   ebx
1004de8d:	push   DWORD PTR [ebp-0x10]
1004de90:	add    edi,edi
1004de92:	push   DWORD PTR [ebp-0x8]
1004de95:	lea    esi,[edi+ebx*1]
1004de98:	push   DWORD PTR [ebp+0xc]
1004de9b:	or     WORD PTR [esi],0xffff
1004dea0:	push   DWORD PTR [ebp+0x20]
1004dea3:	or     WORD PTR [esi-0x2],0xffff
1004dea9:	call   DWORD PTR ds:0x10065224
1004deaf:	cmp    WORD PTR [esi-0x2],0xffff
1004deb5:	mov    DWORD PTR [ebp-0xc],eax
1004deb8:	je     0x1004ded0
1004deba:	cmp    WORD PTR [esi],0xffff
1004debf:	jne    0x1004ded0
1004dec1:	push   edi
1004dec2:	push   ebx
1004dec3:	push   DWORD PTR [ebp+0x18]
1004dec6:	call   0x10044410
1004decb:	add    esp,0xc
1004dece:	jmp    0x1004ded4
1004ded0:	and    DWORD PTR [ebp-0xc],0x0
1004ded4:	push   ebx
1004ded5:	call   0x1001b117
1004deda:	pop    ecx
1004dedb:	push   DWORD PTR [ebp-0x8]
1004dede:	call   0x1001b117
1004dee3:	mov    eax,DWORD PTR [ebp-0xc]
1004dee6:	pop    ecx
1004dee7:	lea    esp,[ebp-0x1c]
1004deea:	pop    edi
1004deeb:	pop    esi
1004deec:	pop    ebx
1004deed:	mov    ecx,DWORD PTR [ebp-0x4]
1004def0:	xor    ecx,ebp
1004def2:	call   0x10041d97
1004def7:	leave  
1004def8:	ret    
1004def9:	push   ebp
1004defa:	mov    ebp,esp
1004defc:	sub    esp,0x10
1004deff:	push   DWORD PTR [ebp+0x8]
1004df02:	lea    ecx,[ebp-0x10]
1004df05:	call   0x10044235
1004df0a:	push   DWORD PTR [ebp+0x20]
1004df0d:	lea    eax,[ebp-0x10]
1004df10:	push   DWORD PTR [ebp+0x1c]
1004df13:	push   DWORD PTR [ebp+0x18]
1004df16:	push   DWORD PTR [ebp+0x14]
1004df19:	push   DWORD PTR [ebp+0x10]
1004df1c:	push   DWORD PTR [ebp+0xc]
1004df1f:	push   eax
1004df20:	call   0x1004dcd5
1004df25:	add    esp,0x1c
1004df28:	cmp    BYTE PTR [ebp-0x4],0x0
1004df2c:	je     0x1004df35
1004df2e:	mov    ecx,DWORD PTR [ebp-0x8]
1004df31:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004df35:	leave  
1004df36:	ret    
1004df37:	mov    eax,DWORD PTR [esp+0x4]
1004df3b:	test   eax,eax
1004df3d:	push   esi
1004df3e:	push   edi
1004df3f:	jl     0x1004df9b
1004df41:	cmp    eax,DWORD PTR ds:0x10081444
1004df47:	jae    0x1004df9b
1004df49:	mov    esi,eax
1004df4b:	and    esi,0x1f
1004df4e:	imul   esi,esi,0x28
1004df51:	mov    ecx,eax
1004df53:	sar    ecx,0x5
1004df56:	lea    edi,[ecx*4+0x10081460]
1004df5d:	mov    ecx,DWORD PTR [edi]
1004df5f:	cmp    DWORD PTR [esi+ecx*1],0xffffffff
1004df63:	jne    0x1004df9b
1004df65:	cmp    DWORD PTR ds:0x1007ea84,0x1
1004df6c:	push   ebx
1004df6d:	mov    ebx,DWORD PTR [esp+0x14]
1004df71:	jne    0x1004df91
1004df73:	sub    eax,0x0
1004df76:	je     0x1004df88
1004df78:	dec    eax
1004df79:	je     0x1004df83
1004df7b:	dec    eax
1004df7c:	jne    0x1004df91
1004df7e:	push   ebx
1004df7f:	push   0xfffffff4
1004df81:	jmp    0x1004df8b
1004df83:	push   ebx
1004df84:	push   0xfffffff5
1004df86:	jmp    0x1004df8b
1004df88:	push   ebx
1004df89:	push   0xfffffff6
1004df8b:	call   DWORD PTR ds:0x10065244
1004df91:	mov    eax,DWORD PTR [edi]
1004df93:	mov    DWORD PTR [esi+eax*1],ebx
1004df96:	xor    eax,eax
1004df98:	pop    ebx
1004df99:	jmp    0x1004dfb1
1004df9b:	call   0x100458a5
1004dfa0:	mov    DWORD PTR [eax],0x9
1004dfa6:	call   0x100458b8
1004dfab:	and    DWORD PTR [eax],0x0
1004dfae:	or     eax,0xffffffff
1004dfb1:	pop    edi
1004dfb2:	pop    esi
1004dfb3:	ret    
1004dfb4:	mov    ecx,DWORD PTR [esp+0x4]
1004dfb8:	push   ebx
1004dfb9:	xor    ebx,ebx
1004dfbb:	cmp    ecx,ebx
1004dfbd:	push   esi
1004dfbe:	push   edi
1004dfbf:	jl     0x1004e01c
1004dfc1:	cmp    ecx,DWORD PTR ds:0x10081444
1004dfc7:	jae    0x1004e01c
1004dfc9:	mov    esi,ecx
1004dfcb:	and    esi,0x1f
1004dfce:	imul   esi,esi,0x28
1004dfd1:	mov    eax,ecx
1004dfd3:	sar    eax,0x5
1004dfd6:	lea    edi,[eax*4+0x10081460]
1004dfdd:	mov    eax,DWORD PTR [edi]
1004dfdf:	add    eax,esi
1004dfe1:	test   BYTE PTR [eax+0x4],0x1
1004dfe5:	je     0x1004e01c
1004dfe7:	cmp    DWORD PTR [eax],0xffffffff
1004dfea:	je     0x1004e01c
1004dfec:	cmp    DWORD PTR ds:0x1007ea84,0x1
1004dff3:	jne    0x1004e012
1004dff5:	sub    ecx,ebx
1004dff7:	je     0x1004e009
1004dff9:	dec    ecx
1004dffa:	je     0x1004e004
1004dffc:	dec    ecx
1004dffd:	jne    0x1004e012
1004dfff:	push   ebx
1004e000:	push   0xfffffff4
1004e002:	jmp    0x1004e00c
1004e004:	push   ebx
1004e005:	push   0xfffffff5
1004e007:	jmp    0x1004e00c
1004e009:	push   ebx
1004e00a:	push   0xfffffff6
1004e00c:	call   DWORD PTR ds:0x10065244
1004e012:	mov    eax,DWORD PTR [edi]
1004e014:	or     DWORD PTR [esi+eax*1],0xffffffff
1004e018:	xor    eax,eax
1004e01a:	jmp    0x1004e031
1004e01c:	call   0x100458a5
1004e021:	mov    DWORD PTR [eax],0x9
1004e027:	call   0x100458b8
1004e02c:	mov    DWORD PTR [eax],ebx
1004e02e:	or     eax,0xffffffff
1004e031:	pop    edi
1004e032:	pop    esi
1004e033:	pop    ebx
1004e034:	ret    
1004e035:	mov    eax,DWORD PTR [esp+0x4]
1004e039:	cmp    eax,0xfffffffe
1004e03c:	jne    0x1004e055
1004e03e:	call   0x100458b8
1004e043:	and    DWORD PTR [eax],0x0
1004e046:	call   0x100458a5
1004e04b:	mov    DWORD PTR [eax],0x9
1004e051:	or     eax,0xffffffff
1004e054:	ret    
1004e055:	push   esi
1004e056:	xor    esi,esi
1004e058:	cmp    eax,esi
1004e05a:	jl     0x1004e07e
1004e05c:	cmp    eax,DWORD PTR ds:0x10081444
1004e062:	jae    0x1004e07e
1004e064:	mov    ecx,eax
1004e066:	and    eax,0x1f
1004e069:	imul   eax,eax,0x28
1004e06c:	sar    ecx,0x5
1004e06f:	mov    ecx,DWORD PTR [ecx*4+0x10081460]
1004e076:	add    eax,ecx
1004e078:	test   BYTE PTR [eax+0x4],0x1
1004e07c:	jne    0x1004e0a2
1004e07e:	call   0x100458b8
1004e083:	mov    DWORD PTR [eax],esi
1004e085:	call   0x100458a5
1004e08a:	push   esi
1004e08b:	push   esi
1004e08c:	push   esi
1004e08d:	push   esi
1004e08e:	push   esi
1004e08f:	mov    DWORD PTR [eax],0x9
1004e095:	call   0x1004228c
1004e09a:	add    esp,0x14
1004e09d:	or     eax,0xffffffff
1004e0a0:	pop    esi
1004e0a1:	ret    
1004e0a2:	mov    eax,DWORD PTR [eax]
1004e0a4:	pop    esi
1004e0a5:	ret    
1004e0a6:	push   0xc
1004e0a8:	push   0x10073448
1004e0ad:	call   0x100459e4
1004e0b2:	mov    edi,DWORD PTR [ebp+0x8]
1004e0b5:	mov    eax,edi
1004e0b7:	sar    eax,0x5
1004e0ba:	mov    esi,edi
1004e0bc:	and    esi,0x1f
1004e0bf:	imul   esi,esi,0x28
1004e0c2:	add    esi,DWORD PTR [eax*4+0x10081460]
1004e0c9:	mov    DWORD PTR [ebp-0x1c],0x1
1004e0d0:	xor    ebx,ebx
1004e0d2:	cmp    DWORD PTR [esi+0x8],ebx
1004e0d5:	jne    0x1004e10d
1004e0d7:	push   0xa
1004e0d9:	call   0x100469ed
1004e0de:	pop    ecx
1004e0df:	mov    DWORD PTR [ebp-0x4],ebx
1004e0e2:	cmp    DWORD PTR [esi+0x8],ebx
1004e0e5:	jne    0x1004e101
1004e0e7:	push   0xfa0
1004e0ec:	lea    eax,[esi+0xc]
1004e0ef:	push   eax
1004e0f0:	call   0x1004abdb
1004e0f5:	pop    ecx
1004e0f6:	pop    ecx
1004e0f7:	test   eax,eax
1004e0f9:	jne    0x1004e0fe
1004e0fb:	mov    DWORD PTR [ebp-0x1c],ebx
1004e0fe:	inc    DWORD PTR [esi+0x8]
1004e101:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004e108:	call   0x1004e13d
1004e10d:	cmp    DWORD PTR [ebp-0x1c],ebx
1004e110:	je     0x1004e12f
1004e112:	mov    eax,edi
1004e114:	sar    eax,0x5
1004e117:	and    edi,0x1f
1004e11a:	imul   edi,edi,0x28
1004e11d:	mov    eax,DWORD PTR [eax*4+0x10081460]
1004e124:	lea    eax,[eax+edi*1+0xc]
1004e128:	push   eax
1004e129:	call   DWORD PTR ds:0x100650f0
1004e12f:	mov    eax,DWORD PTR [ebp-0x1c]
1004e132:	call   0x10045a29
1004e137:	ret    
1004e138:	xor    ebx,ebx
1004e13a:	mov    edi,DWORD PTR [ebp+0x8]
1004e13d:	push   0xa
1004e13f:	call   0x10046915
1004e144:	pop    ecx
1004e145:	ret    
1004e146:	mov    eax,DWORD PTR [esp+0x4]
1004e14a:	mov    ecx,eax
1004e14c:	and    eax,0x1f
1004e14f:	imul   eax,eax,0x28
1004e152:	sar    ecx,0x5
1004e155:	mov    ecx,DWORD PTR [ecx*4+0x10081460]
1004e15c:	lea    eax,[ecx+eax*1+0xc]
1004e160:	push   eax
1004e161:	call   DWORD PTR ds:0x100650ec
1004e167:	ret    
1004e168:	push   0x18
1004e16a:	push   0x10073468
1004e16f:	call   0x100459e4
1004e174:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004e178:	xor    edi,edi
1004e17a:	mov    DWORD PTR [ebp-0x24],edi
1004e17d:	push   0xb
1004e17f:	call   0x1004692a
1004e184:	pop    ecx
1004e185:	test   eax,eax
1004e187:	jne    0x1004e191
1004e189:	or     eax,0xffffffff
1004e18c:	jmp    0x1004e2f8
1004e191:	push   0xb
1004e193:	call   0x100469ed
1004e198:	pop    ecx
1004e199:	mov    DWORD PTR [ebp-0x4],edi
1004e19c:	mov    DWORD PTR [ebp-0x28],edi
1004e19f:	cmp    edi,0x40
1004e1a2:	jge    0x1004e2e9
1004e1a8:	mov    esi,DWORD PTR [edi*4+0x10081460]
1004e1af:	test   esi,esi
1004e1b1:	je     0x1004e276
1004e1b7:	mov    DWORD PTR [ebp-0x20],esi
1004e1ba:	mov    eax,DWORD PTR [edi*4+0x10081460]
1004e1c1:	add    eax,0x500
1004e1c6:	cmp    esi,eax
1004e1c8:	jae    0x1004e26a
1004e1ce:	test   BYTE PTR [esi+0x4],0x1
1004e1d2:	jne    0x1004e230
1004e1d4:	cmp    DWORD PTR [esi+0x8],0x0
1004e1d8:	jne    0x1004e213
1004e1da:	push   0xa
1004e1dc:	call   0x100469ed
1004e1e1:	pop    ecx
1004e1e2:	xor    ebx,ebx
1004e1e4:	inc    ebx
1004e1e5:	mov    DWORD PTR [ebp-0x4],ebx
1004e1e8:	cmp    DWORD PTR [esi+0x8],0x0
1004e1ec:	jne    0x1004e20a
1004e1ee:	push   0xfa0
1004e1f3:	lea    eax,[esi+0xc]
1004e1f6:	push   eax
1004e1f7:	call   0x1004abdb
1004e1fc:	pop    ecx
1004e1fd:	pop    ecx
1004e1fe:	test   eax,eax
1004e200:	jne    0x1004e207
1004e202:	mov    DWORD PTR [ebp-0x24],ebx
1004e205:	jmp    0x1004e20a
1004e207:	inc    DWORD PTR [esi+0x8]
1004e20a:	and    DWORD PTR [ebp-0x4],0x0
1004e20e:	call   0x1004e23b
1004e213:	cmp    DWORD PTR [ebp-0x24],0x0
1004e217:	jne    0x1004e230
1004e219:	lea    ebx,[esi+0xc]
1004e21c:	push   ebx
1004e21d:	call   DWORD PTR ds:0x100650f0
1004e223:	test   BYTE PTR [esi+0x4],0x1
1004e227:	je     0x1004e244
1004e229:	push   ebx
1004e22a:	call   DWORD PTR ds:0x100650ec
1004e230:	add    esi,0x28
1004e233:	jmp    0x1004e1b7
1004e235:	mov    edi,DWORD PTR [ebp-0x28]
1004e238:	mov    esi,DWORD PTR [ebp-0x20]
1004e23b:	push   0xa
1004e23d:	call   0x10046915
1004e242:	pop    ecx
1004e243:	ret    
1004e244:	cmp    DWORD PTR [ebp-0x24],0x0
1004e248:	jne    0x1004e230
1004e24a:	mov    BYTE PTR [esi+0x4],0x1
1004e24e:	or     DWORD PTR [esi],0xffffffff
1004e251:	mov    eax,esi
1004e253:	sub    eax,DWORD PTR [edi*4+0x10081460]
1004e25a:	cdq    
1004e25b:	push   0x28
1004e25d:	pop    ecx
1004e25e:	idiv   ecx
1004e260:	mov    ecx,edi
1004e262:	shl    ecx,0x5
1004e265:	add    eax,ecx
1004e267:	mov    DWORD PTR [ebp-0x1c],eax
1004e26a:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
1004e26e:	jne    0x1004e2e9
1004e270:	inc    edi
1004e271:	jmp    0x1004e19c
1004e276:	push   0x28
1004e278:	push   0x20
1004e27a:	call   0x100461b2
1004e27f:	pop    ecx
1004e280:	pop    ecx
1004e281:	mov    DWORD PTR [ebp-0x20],eax
1004e284:	test   eax,eax
1004e286:	je     0x1004e2e9
1004e288:	lea    ecx,[edi*4+0x10081460]
1004e28f:	mov    DWORD PTR [ecx],eax
1004e291:	add    DWORD PTR ds:0x10081444,0x20
1004e298:	mov    edx,DWORD PTR [ecx]
1004e29a:	add    edx,0x500
1004e2a0:	cmp    eax,edx
1004e2a2:	jae    0x1004e2bb
1004e2a4:	mov    BYTE PTR [eax+0x4],0x0
1004e2a8:	or     DWORD PTR [eax],0xffffffff
1004e2ab:	mov    BYTE PTR [eax+0x5],0xa
1004e2af:	and    DWORD PTR [eax+0x8],0x0
1004e2b3:	add    eax,0x28
1004e2b6:	mov    DWORD PTR [ebp-0x20],eax
1004e2b9:	jmp    0x1004e298
1004e2bb:	shl    edi,0x5
1004e2be:	mov    DWORD PTR [ebp-0x1c],edi
1004e2c1:	mov    eax,edi
1004e2c3:	sar    eax,0x5
1004e2c6:	mov    ecx,edi
1004e2c8:	and    ecx,0x1f
1004e2cb:	imul   ecx,ecx,0x28
1004e2ce:	mov    eax,DWORD PTR [eax*4+0x10081460]
1004e2d5:	mov    BYTE PTR [eax+ecx*1+0x4],0x1
1004e2da:	push   edi
1004e2db:	call   0x1004e0a6
1004e2e0:	pop    ecx
1004e2e1:	test   eax,eax
1004e2e3:	jne    0x1004e2e9
1004e2e5:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004e2e9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004e2f0:	call   0x1004e2fe
1004e2f5:	mov    eax,DWORD PTR [ebp-0x1c]
1004e2f8:	call   0x10045a29
1004e2fd:	ret    
1004e2fe:	push   0xb
1004e300:	call   0x10046915
1004e305:	pop    ecx
1004e306:	ret    
1004e307:	push   ebp
1004e308:	mov    ebp,esp
1004e30a:	sub    esp,0x10
1004e30d:	mov    eax,ds:0x1007d030
1004e312:	xor    eax,ebp
1004e314:	mov    DWORD PTR [ebp-0x4],eax
1004e317:	push   esi
1004e318:	xor    esi,esi
1004e31a:	cmp    DWORD PTR ds:0x1007df60,esi
1004e320:	je     0x1004e370
1004e322:	cmp    DWORD PTR ds:0x1007df74,0xfffffffe
1004e329:	jne    0x1004e330
1004e32b:	call   0x1004f341
1004e330:	mov    eax,ds:0x1007df74
1004e335:	cmp    eax,0xffffffff
1004e338:	jne    0x1004e340
1004e33a:	or     ax,0xffff
1004e33e:	jmp    0x1004e3b0
1004e340:	push   esi
1004e341:	lea    ecx,[ebp-0x10]
1004e344:	push   ecx
1004e345:	push   0x1
1004e347:	lea    ecx,[ebp+0x8]
1004e34a:	push   ecx
1004e34b:	push   eax
1004e34c:	call   DWORD PTR ds:0x10065250
1004e352:	test   eax,eax
1004e354:	jne    0x1004e3bd
1004e356:	cmp    DWORD PTR ds:0x1007df60,0x2
1004e35d:	jne    0x1004e33a
1004e35f:	call   DWORD PTR ds:0x100650c4
1004e365:	cmp    eax,0x78
1004e368:	jne    0x1004e33a
1004e36a:	mov    DWORD PTR ds:0x1007df60,esi
1004e370:	push   esi
1004e371:	push   esi
1004e372:	push   0x5
1004e374:	lea    eax,[ebp-0xc]
1004e377:	push   eax
1004e378:	push   0x1
1004e37a:	lea    eax,[ebp+0x8]
1004e37d:	push   eax
1004e37e:	push   esi
1004e37f:	call   DWORD PTR ds:0x1006524c
1004e385:	push   eax
1004e386:	call   DWORD PTR ds:0x100650dc
1004e38c:	mov    ecx,DWORD PTR ds:0x1007df74
1004e392:	cmp    ecx,0xffffffff
1004e395:	je     0x1004e33a
1004e397:	push   esi
1004e398:	lea    edx,[ebp-0x10]
1004e39b:	push   edx
1004e39c:	push   eax
1004e39d:	lea    eax,[ebp-0xc]
1004e3a0:	push   eax
1004e3a1:	push   ecx
1004e3a2:	call   DWORD PTR ds:0x10065248
1004e3a8:	test   eax,eax
1004e3aa:	je     0x1004e33a
1004e3ac:	mov    ax,WORD PTR [ebp+0x8]
1004e3b0:	mov    ecx,DWORD PTR [ebp-0x4]
1004e3b3:	xor    ecx,ebp
1004e3b5:	pop    esi
1004e3b6:	call   0x10041d97
1004e3bb:	leave  
1004e3bc:	ret    
1004e3bd:	mov    DWORD PTR ds:0x1007df60,0x1
1004e3c7:	jmp    0x1004e3ac
1004e3c9:	push   0x10
1004e3cb:	push   0x10073490
1004e3d0:	call   0x100459e4
1004e3d5:	xor    ebx,ebx
1004e3d7:	mov    DWORD PTR [ebp-0x1c],ebx
1004e3da:	push   0x1
1004e3dc:	call   0x100469ed
1004e3e1:	pop    ecx
1004e3e2:	mov    DWORD PTR [ebp-0x4],ebx
1004e3e5:	push   0x3
1004e3e7:	pop    edi
1004e3e8:	mov    DWORD PTR [ebp-0x20],edi
1004e3eb:	cmp    edi,DWORD PTR ds:0x10081440
1004e3f1:	jge    0x1004e44a
1004e3f3:	mov    esi,edi
1004e3f5:	shl    esi,0x2
1004e3f8:	mov    eax,ds:0x10080420
1004e3fd:	add    eax,esi
1004e3ff:	cmp    DWORD PTR [eax],ebx
1004e401:	je     0x1004e447
1004e403:	mov    eax,DWORD PTR [eax]
1004e405:	test   BYTE PTR [eax+0xc],0x83
1004e409:	je     0x1004e41a
1004e40b:	push   eax
1004e40c:	call   0x1004f400
1004e411:	pop    ecx
1004e412:	cmp    eax,0xffffffff
1004e415:	je     0x1004e41a
1004e417:	inc    DWORD PTR [ebp-0x1c]
1004e41a:	cmp    edi,0x14
1004e41d:	jl     0x1004e447
1004e41f:	mov    eax,ds:0x10080420
1004e424:	mov    eax,DWORD PTR [esi+eax*1]
1004e427:	add    eax,0x20
1004e42a:	push   eax
1004e42b:	call   DWORD PTR ds:0x10065138
1004e431:	mov    eax,ds:0x10080420
1004e436:	push   DWORD PTR [esi+eax*1]
1004e439:	call   0x10042408
1004e43e:	pop    ecx
1004e43f:	mov    eax,ds:0x10080420
1004e444:	mov    DWORD PTR [esi+eax*1],ebx
1004e447:	inc    edi
1004e448:	jmp    0x1004e3e8
1004e44a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004e451:	call   0x1004e45f
1004e456:	mov    eax,DWORD PTR [ebp-0x1c]
1004e459:	call   0x10045a29
1004e45e:	ret    
1004e45f:	push   0x1
1004e461:	call   0x10046915
1004e466:	pop    ecx
1004e467:	ret    
1004e468:	push   ebx
1004e469:	push   esi
1004e46a:	mov    esi,DWORD PTR [esp+0xc]
1004e46e:	mov    eax,DWORD PTR [esi+0xc]
1004e471:	mov    ecx,eax
1004e473:	and    cl,0x3
1004e476:	xor    ebx,ebx
1004e478:	cmp    cl,0x2
1004e47b:	jne    0x1004e4bc
1004e47d:	test   ax,0x108
1004e481:	je     0x1004e4bc
1004e483:	mov    eax,DWORD PTR [esi+0x8]
1004e486:	push   edi
1004e487:	mov    edi,DWORD PTR [esi]
1004e489:	sub    edi,eax
1004e48b:	test   edi,edi
1004e48d:	jle    0x1004e4bb
1004e48f:	push   edi
1004e490:	push   eax
1004e491:	push   esi
1004e492:	call   0x1004c4ca
1004e497:	pop    ecx
1004e498:	push   eax
1004e499:	call   0x1004c1d1
1004e49e:	add    esp,0xc
1004e4a1:	cmp    eax,edi
1004e4a3:	jne    0x1004e4b4
1004e4a5:	mov    eax,DWORD PTR [esi+0xc]
1004e4a8:	test   al,al
1004e4aa:	jns    0x1004e4bb
1004e4ac:	and    eax,0xfffffffd
1004e4af:	mov    DWORD PTR [esi+0xc],eax
1004e4b2:	jmp    0x1004e4bb
1004e4b4:	or     DWORD PTR [esi+0xc],0x20
1004e4b8:	or     ebx,0xffffffff
1004e4bb:	pop    edi
1004e4bc:	mov    eax,DWORD PTR [esi+0x8]
1004e4bf:	and    DWORD PTR [esi+0x4],0x0
1004e4c3:	mov    DWORD PTR [esi],eax
1004e4c5:	pop    esi
1004e4c6:	mov    eax,ebx
1004e4c8:	pop    ebx
1004e4c9:	ret    
1004e4ca:	push   esi
1004e4cb:	mov    esi,DWORD PTR [esp+0x8]
1004e4cf:	test   esi,esi
1004e4d1:	jne    0x1004e4dc
1004e4d3:	push   esi
1004e4d4:	call   0x1004e50c
1004e4d9:	pop    ecx
1004e4da:	pop    esi
1004e4db:	ret    
1004e4dc:	push   esi
1004e4dd:	call   0x1004e468
1004e4e2:	test   eax,eax
1004e4e4:	pop    ecx
1004e4e5:	je     0x1004e4ec
1004e4e7:	or     eax,0xffffffff
1004e4ea:	pop    esi
1004e4eb:	ret    
1004e4ec:	test   WORD PTR [esi+0xc],0x4000
1004e4f2:	je     0x1004e508
1004e4f4:	push   esi
1004e4f5:	call   0x1004c4ca
1004e4fa:	push   eax
1004e4fb:	call   0x1004f47c
1004e500:	pop    ecx
1004e501:	pop    ecx
1004e502:	neg    eax
1004e504:	sbb    eax,eax
1004e506:	pop    esi
1004e507:	ret    
1004e508:	xor    eax,eax
1004e50a:	pop    esi
1004e50b:	ret    
1004e50c:	push   0x14
1004e50e:	push   0x100734b0
1004e513:	call   0x100459e4
1004e518:	xor    edi,edi
1004e51a:	mov    DWORD PTR [ebp-0x1c],edi
1004e51d:	mov    DWORD PTR [ebp-0x24],edi
1004e520:	push   0x1
1004e522:	call   0x100469ed
1004e527:	pop    ecx
1004e528:	mov    DWORD PTR [ebp-0x4],edi
1004e52b:	xor    esi,esi
1004e52d:	mov    DWORD PTR [ebp-0x20],esi
1004e530:	cmp    esi,DWORD PTR ds:0x10081440
1004e536:	jge    0x1004e5bf
1004e53c:	mov    eax,ds:0x10080420
1004e541:	lea    eax,[eax+esi*4]
1004e544:	cmp    DWORD PTR [eax],edi
1004e546:	je     0x1004e5a6
1004e548:	mov    eax,DWORD PTR [eax]
1004e54a:	test   BYTE PTR [eax+0xc],0x83
1004e54e:	je     0x1004e5a6
1004e550:	push   eax
1004e551:	push   esi
1004e552:	call   0x1004c455
1004e557:	pop    ecx
1004e558:	pop    ecx
1004e559:	xor    edx,edx
1004e55b:	inc    edx
1004e55c:	mov    DWORD PTR [ebp-0x4],edx
1004e55f:	mov    eax,ds:0x10080420
1004e564:	mov    eax,DWORD PTR [eax+esi*4]
1004e567:	mov    ecx,DWORD PTR [eax+0xc]
1004e56a:	test   cl,0x83
1004e56d:	je     0x1004e59e
1004e56f:	cmp    DWORD PTR [ebp+0x8],edx
1004e572:	jne    0x1004e585
1004e574:	push   eax
1004e575:	call   0x1004e4ca
1004e57a:	pop    ecx
1004e57b:	cmp    eax,0xffffffff
1004e57e:	je     0x1004e59e
1004e580:	inc    DWORD PTR [ebp-0x1c]
1004e583:	jmp    0x1004e59e
1004e585:	cmp    DWORD PTR [ebp+0x8],edi
1004e588:	jne    0x1004e59e
1004e58a:	test   cl,0x2
1004e58d:	je     0x1004e59e
1004e58f:	push   eax
1004e590:	call   0x1004e4ca
1004e595:	pop    ecx
1004e596:	cmp    eax,0xffffffff
1004e599:	jne    0x1004e59e
1004e59b:	or     DWORD PTR [ebp-0x24],eax
1004e59e:	mov    DWORD PTR [ebp-0x4],edi
1004e5a1:	call   0x1004e5ae
1004e5a6:	inc    esi
1004e5a7:	jmp    0x1004e52d
1004e5a9:	xor    edi,edi
1004e5ab:	mov    esi,DWORD PTR [ebp-0x20]
1004e5ae:	mov    eax,ds:0x10080420
1004e5b3:	push   DWORD PTR [eax+esi*4]
1004e5b6:	push   esi
1004e5b7:	call   0x1004c4a7
1004e5bc:	pop    ecx
1004e5bd:	pop    ecx
1004e5be:	ret    
1004e5bf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004e5c6:	call   0x1004e5dd
1004e5cb:	cmp    DWORD PTR [ebp+0x8],0x1
1004e5cf:	mov    eax,DWORD PTR [ebp-0x1c]
1004e5d2:	je     0x1004e5d7
1004e5d4:	mov    eax,DWORD PTR [ebp-0x24]
1004e5d7:	call   0x10045a29
1004e5dc:	ret    
1004e5dd:	push   0x1
1004e5df:	call   0x10046915
1004e5e4:	pop    ecx
1004e5e5:	ret    
1004e5e6:	push   0x1
1004e5e8:	call   0x1004e50c
1004e5ed:	pop    ecx
1004e5ee:	ret    
1004e5ef:	push   ebp
1004e5f0:	mov    ebp,esp
1004e5f2:	push   ecx
1004e5f3:	push   esi
1004e5f4:	mov    esi,DWORD PTR [ebp+0xc]
1004e5f7:	push   esi
1004e5f8:	call   0x1004c4ca
1004e5fd:	mov    DWORD PTR [ebp+0xc],eax
1004e600:	mov    eax,DWORD PTR [esi+0xc]
1004e603:	test   al,0x82
1004e605:	pop    ecx
1004e606:	jne    0x1004e621
1004e608:	call   0x100458a5
1004e60d:	mov    DWORD PTR [eax],0x9
1004e613:	or     DWORD PTR [esi+0xc],0x20
1004e617:	mov    eax,0xffff
1004e61c:	jmp    0x1004e75c
1004e621:	test   al,0x40
1004e623:	je     0x1004e632
1004e625:	call   0x100458a5
1004e62a:	mov    DWORD PTR [eax],0x22
1004e630:	jmp    0x1004e613
1004e632:	test   al,0x1
1004e634:	je     0x1004e64d
1004e636:	and    DWORD PTR [esi+0x4],0x0
1004e63a:	test   al,0x10
1004e63c:	je     0x1004e6cd
1004e642:	mov    ecx,DWORD PTR [esi+0x8]
1004e645:	and    eax,0xfffffffe
1004e648:	mov    DWORD PTR [esi],ecx
1004e64a:	mov    DWORD PTR [esi+0xc],eax
1004e64d:	mov    eax,DWORD PTR [esi+0xc]
1004e650:	and    DWORD PTR [esi+0x4],0x0
1004e654:	and    DWORD PTR [ebp-0x4],0x0
1004e658:	push   ebx
1004e659:	push   0x2
1004e65b:	and    eax,0xffffffef
1004e65e:	pop    ebx
1004e65f:	or     eax,ebx
1004e661:	test   ax,0x10c
1004e665:	mov    DWORD PTR [esi+0xc],eax
1004e668:	jne    0x1004e696
1004e66a:	call   0x1004c34f
1004e66f:	add    eax,0x20
1004e672:	cmp    esi,eax
1004e674:	je     0x1004e682
1004e676:	call   0x1004c34f
1004e67b:	add    eax,0x40
1004e67e:	cmp    esi,eax
1004e680:	jne    0x1004e68f
1004e682:	push   DWORD PTR [ebp+0xc]
1004e685:	call   0x1004c2f1
1004e68a:	test   eax,eax
1004e68c:	pop    ecx
1004e68d:	jne    0x1004e696
1004e68f:	push   esi
1004e690:	call   0x1004c2ad
1004e695:	pop    ecx
1004e696:	test   WORD PTR [esi+0xc],0x108
1004e69c:	push   edi
1004e69d:	je     0x1004e726
1004e6a3:	mov    eax,DWORD PTR [esi+0x8]
1004e6a6:	mov    edi,DWORD PTR [esi]
1004e6a8:	lea    ecx,[eax+0x2]
1004e6ab:	mov    DWORD PTR [esi],ecx
1004e6ad:	mov    ecx,DWORD PTR [esi+0x18]
1004e6b0:	sub    edi,eax
1004e6b2:	sub    ecx,ebx
1004e6b4:	test   edi,edi
1004e6b6:	mov    DWORD PTR [esi+0x4],ecx
1004e6b9:	jle    0x1004e6d8
1004e6bb:	push   edi
1004e6bc:	push   eax
1004e6bd:	push   DWORD PTR [ebp+0xc]
1004e6c0:	call   0x1004c1d1
1004e6c5:	add    esp,0xc
1004e6c8:	mov    DWORD PTR [ebp-0x4],eax
1004e6cb:	jmp    0x1004e71b
1004e6cd:	or     eax,0x20
1004e6d0:	mov    DWORD PTR [esi+0xc],eax
1004e6d3:	jmp    0x1004e617
1004e6d8:	mov    ecx,DWORD PTR [ebp+0xc]
1004e6db:	cmp    ecx,0xffffffff
1004e6de:	je     0x1004e6fb
1004e6e0:	cmp    ecx,0xfffffffe
1004e6e3:	je     0x1004e6fb
1004e6e5:	mov    eax,ecx
1004e6e7:	and    eax,0x1f
1004e6ea:	imul   eax,eax,0x28
1004e6ed:	mov    edx,ecx
1004e6ef:	sar    edx,0x5
1004e6f2:	add    eax,DWORD PTR [edx*4+0x10081460]
1004e6f9:	jmp    0x1004e700
1004e6fb:	mov    eax,0x1007d9d0
1004e700:	test   BYTE PTR [eax+0x4],0x20
1004e704:	je     0x1004e71b
1004e706:	push   ebx
1004e707:	push   0x0
1004e709:	push   0x0
1004e70b:	push   ecx
1004e70c:	call   0x1004baf2
1004e711:	and    eax,edx
1004e713:	add    esp,0x10
1004e716:	cmp    eax,0xffffffff
1004e719:	je     0x1004e748
1004e71b:	mov    eax,DWORD PTR [esi+0x8]
1004e71e:	mov    ebx,DWORD PTR [ebp+0x8]
1004e721:	mov    WORD PTR [eax],bx
1004e724:	jmp    0x1004e743
1004e726:	push   0x2
1004e728:	lea    eax,[ebp-0x4]
1004e72b:	push   eax
1004e72c:	push   DWORD PTR [ebp+0xc]
1004e72f:	mov    edi,ebx
1004e731:	mov    ebx,DWORD PTR [ebp+0x8]
1004e734:	mov    WORD PTR [ebp-0x4],bx
1004e738:	call   0x1004c1d1
1004e73d:	add    esp,0xc
1004e740:	mov    DWORD PTR [ebp-0x4],eax
1004e743:	cmp    DWORD PTR [ebp-0x4],edi
1004e746:	je     0x1004e753
1004e748:	or     DWORD PTR [esi+0xc],0x20
1004e74c:	mov    eax,0xffff
1004e751:	jmp    0x1004e75a
1004e753:	mov    eax,ebx
1004e755:	and    eax,0xffff
1004e75a:	pop    edi
1004e75b:	pop    ebx
1004e75c:	pop    esi
1004e75d:	leave  
1004e75e:	ret    
1004e75f:	push   ebp
1004e760:	mov    ebp,esp
1004e762:	sub    esp,0x10
1004e765:	push   ebx
1004e766:	push   esi
1004e767:	mov    esi,DWORD PTR [ebp+0xc]
1004e76a:	xor    ebx,ebx
1004e76c:	cmp    esi,ebx
1004e76e:	push   edi
1004e76f:	mov    edi,DWORD PTR [ebp+0x10]
1004e772:	jne    0x1004e785
1004e774:	cmp    edi,ebx
1004e776:	jbe    0x1004e785
1004e778:	mov    eax,DWORD PTR [ebp+0x8]
1004e77b:	cmp    eax,ebx
1004e77d:	je     0x1004e781
1004e77f:	mov    DWORD PTR [eax],ebx
1004e781:	xor    eax,eax
1004e783:	jmp    0x1004e804
1004e785:	mov    eax,DWORD PTR [ebp+0x8]
1004e788:	cmp    eax,ebx
1004e78a:	je     0x1004e78f
1004e78c:	or     DWORD PTR [eax],0xffffffff
1004e78f:	cmp    edi,0x7fffffff
1004e795:	jbe    0x1004e7b2
1004e797:	call   0x100458a5
1004e79c:	push   0x16
1004e79e:	pop    esi
1004e79f:	push   ebx
1004e7a0:	push   ebx
1004e7a1:	push   ebx
1004e7a2:	push   ebx
1004e7a3:	push   ebx
1004e7a4:	mov    DWORD PTR [eax],esi
1004e7a6:	call   0x1004228c
1004e7ab:	add    esp,0x14
1004e7ae:	mov    eax,esi
1004e7b0:	jmp    0x1004e804
1004e7b2:	push   DWORD PTR [ebp+0x18]
1004e7b5:	lea    ecx,[ebp-0x10]
1004e7b8:	call   0x10044235
1004e7bd:	mov    eax,DWORD PTR [ebp-0x10]
1004e7c0:	cmp    DWORD PTR [eax+0x14],ebx
1004e7c3:	jne    0x1004e85d
1004e7c9:	mov    ax,WORD PTR [ebp+0x14]
1004e7cd:	cmp    ax,0xff
1004e7d1:	jbe    0x1004e809
1004e7d3:	cmp    esi,ebx
1004e7d5:	je     0x1004e7e6
1004e7d7:	cmp    edi,ebx
1004e7d9:	jbe    0x1004e7e6
1004e7db:	push   edi
1004e7dc:	push   ebx
1004e7dd:	push   esi
1004e7de:	call   0x10044950
1004e7e3:	add    esp,0xc
1004e7e6:	call   0x100458a5
1004e7eb:	mov    DWORD PTR [eax],0x2a
1004e7f1:	call   0x100458a5
1004e7f6:	cmp    BYTE PTR [ebp-0x4],bl
1004e7f9:	mov    eax,DWORD PTR [eax]
1004e7fb:	je     0x1004e804
1004e7fd:	mov    ecx,DWORD PTR [ebp-0x8]
1004e800:	and    DWORD PTR [ecx+0x70],0xfffffffd
1004e804:	pop    edi
1004e805:	pop    esi
1004e806:	pop    ebx
1004e807:	leave  
1004e808:	ret    
1004e809:	cmp    esi,ebx
1004e80b:	je     0x1004e83b
1004e80d:	cmp    edi,ebx
1004e80f:	ja     0x1004e839
1004e811:	call   0x100458a5
1004e816:	push   0x22
1004e818:	pop    esi
1004e819:	push   ebx
1004e81a:	push   ebx
1004e81b:	push   ebx
1004e81c:	push   ebx
1004e81d:	push   ebx
1004e81e:	mov    DWORD PTR [eax],esi
1004e820:	call   0x1004228c
1004e825:	add    esp,0x14
1004e828:	cmp    BYTE PTR [ebp-0x4],bl
1004e82b:	je     0x1004e7ae
1004e82d:	mov    eax,DWORD PTR [ebp-0x8]
1004e830:	and    DWORD PTR [eax+0x70],0xfffffffd
1004e834:	jmp    0x1004e7ae
1004e839:	mov    BYTE PTR [esi],al
1004e83b:	mov    eax,DWORD PTR [ebp+0x8]
1004e83e:	cmp    eax,ebx
1004e840:	je     0x1004e848
1004e842:	mov    DWORD PTR [eax],0x1
1004e848:	cmp    BYTE PTR [ebp-0x4],bl
1004e84b:	je     0x1004e781
1004e851:	mov    eax,DWORD PTR [ebp-0x8]
1004e854:	and    DWORD PTR [eax+0x70],0xfffffffd
1004e858:	jmp    0x1004e781
1004e85d:	lea    ecx,[ebp+0xc]
1004e860:	push   ecx
1004e861:	push   ebx
1004e862:	push   edi
1004e863:	push   esi
1004e864:	push   0x1
1004e866:	lea    ecx,[ebp+0x14]
1004e869:	push   ecx
1004e86a:	push   ebx
1004e86b:	mov    DWORD PTR [ebp+0xc],ebx
1004e86e:	push   DWORD PTR [eax+0x4]
1004e871:	call   DWORD PTR ds:0x100650dc
1004e877:	cmp    eax,ebx
1004e879:	je     0x1004e88f
1004e87b:	cmp    DWORD PTR [ebp+0xc],ebx
1004e87e:	jne    0x1004e7e6
1004e884:	mov    ecx,DWORD PTR [ebp+0x8]
1004e887:	cmp    ecx,ebx
1004e889:	je     0x1004e848
1004e88b:	mov    DWORD PTR [ecx],eax
1004e88d:	jmp    0x1004e848
1004e88f:	call   DWORD PTR ds:0x100650c4
1004e895:	cmp    eax,0x7a
1004e898:	jne    0x1004e7e6
1004e89e:	cmp    esi,ebx
1004e8a0:	je     0x1004e811
1004e8a6:	cmp    edi,ebx
1004e8a8:	jbe    0x1004e811
1004e8ae:	push   edi
1004e8af:	push   ebx
1004e8b0:	push   esi
1004e8b1:	call   0x10044950
1004e8b6:	add    esp,0xc
1004e8b9:	jmp    0x1004e811
1004e8be:	push   0x0
1004e8c0:	push   DWORD PTR [esp+0x14]
1004e8c4:	push   DWORD PTR [esp+0x14]
1004e8c8:	push   DWORD PTR [esp+0x14]
1004e8cc:	push   DWORD PTR [esp+0x14]
1004e8d0:	call   0x1004e75f
1004e8d5:	add    esp,0x14
1004e8d8:	ret    
1004e8d9:	test   BYTE PTR [edi+0xc],0x40
1004e8dd:	push   ebx
1004e8de:	push   esi
1004e8df:	mov    esi,eax
1004e8e1:	mov    ebx,ecx
1004e8e3:	je     0x1004e919
1004e8e5:	cmp    DWORD PTR [edi+0x8],0x0
1004e8e9:	jne    0x1004e919
1004e8eb:	mov    eax,DWORD PTR [esp+0xc]
1004e8ef:	add    DWORD PTR [esi],eax
1004e8f1:	jmp    0x1004e920
1004e8f3:	mov    al,BYTE PTR [ebx]
1004e8f5:	dec    DWORD PTR [esp+0xc]
1004e8f9:	mov    ecx,edi
1004e8fb:	call   0x1004c6d5
1004e900:	inc    ebx
1004e901:	cmp    DWORD PTR [esi],0xffffffff
1004e904:	jne    0x1004e919
1004e906:	call   0x100458a5
1004e90b:	cmp    DWORD PTR [eax],0x2a
1004e90e:	jne    0x1004e920
1004e910:	mov    ecx,edi
1004e912:	mov    al,0x3f
1004e914:	call   0x1004c6d5
1004e919:	cmp    DWORD PTR [esp+0xc],0x0
1004e91e:	jg     0x1004e8f3
1004e920:	pop    esi
1004e921:	pop    ebx
1004e922:	ret    
1004e923:	push   ebp
1004e924:	lea    ebp,[esp-0x1f8]
1004e92b:	sub    esp,0x278
1004e931:	mov    eax,ds:0x1007d030
1004e936:	xor    eax,ebp
1004e938:	mov    DWORD PTR [ebp+0x1f4],eax
1004e93e:	mov    eax,DWORD PTR [ebp+0x200]
1004e944:	push   ebx
1004e945:	mov    ebx,DWORD PTR [ebp+0x204]
1004e94b:	push   esi
1004e94c:	xor    esi,esi
1004e94e:	push   edi
1004e94f:	mov    edi,DWORD PTR [ebp+0x20c]
1004e955:	push   DWORD PTR [ebp+0x208]
1004e95b:	lea    ecx,[ebp-0x5c]
1004e95e:	mov    DWORD PTR [ebp-0x30],eax
1004e961:	mov    DWORD PTR [ebp-0x2c],edi
1004e964:	mov    DWORD PTR [ebp-0x64],esi
1004e967:	mov    DWORD PTR [ebp-0x18],esi
1004e96a:	mov    DWORD PTR [ebp-0x40],esi
1004e96d:	mov    DWORD PTR [ebp-0x20],esi
1004e970:	mov    DWORD PTR [ebp-0x3c],esi
1004e973:	mov    DWORD PTR [ebp-0x68],esi
1004e976:	mov    DWORD PTR [ebp-0x44],esi
1004e979:	call   0x10044235
1004e97e:	cmp    DWORD PTR [ebp-0x30],esi
1004e981:	jne    0x1004e9b0
1004e983:	call   0x100458a5
1004e988:	push   esi
1004e989:	push   esi
1004e98a:	push   esi
1004e98b:	push   esi
1004e98c:	mov    DWORD PTR [eax],0x16
1004e992:	push   esi
1004e993:	call   0x1004228c
1004e998:	add    esp,0x14
1004e99b:	cmp    BYTE PTR [ebp-0x50],0x0
1004e99f:	je     0x1004e9a8
1004e9a1:	mov    eax,DWORD PTR [ebp-0x54]
1004e9a4:	and    DWORD PTR [eax+0x70],0xfffffffd
1004e9a8:	or     eax,0xffffffff
1004e9ab:	jmp    0x1004f29b
1004e9b0:	mov    eax,DWORD PTR [ebp-0x30]
1004e9b3:	test   BYTE PTR [eax+0xc],0x40
1004e9b7:	jne    0x1004ea61
1004e9bd:	push   eax
1004e9be:	call   0x1004c4ca
1004e9c3:	cmp    eax,0xffffffff
1004e9c6:	pop    ecx
1004e9c7:	je     0x1004e9ff
1004e9c9:	push   DWORD PTR [ebp-0x30]
1004e9cc:	call   0x1004c4ca
1004e9d1:	cmp    eax,0xfffffffe
1004e9d4:	pop    ecx
1004e9d5:	je     0x1004e9ff
1004e9d7:	push   DWORD PTR [ebp-0x30]
1004e9da:	call   0x1004c4ca
1004e9df:	push   DWORD PTR [ebp-0x30]
1004e9e2:	sar    eax,0x5
1004e9e5:	lea    esi,[eax*4+0x10081460]
1004e9ec:	call   0x1004c4ca
1004e9f1:	and    eax,0x1f
1004e9f4:	imul   eax,eax,0x28
1004e9f7:	add    eax,DWORD PTR [esi]
1004e9f9:	pop    ecx
1004e9fa:	pop    ecx
1004e9fb:	xor    esi,esi
1004e9fd:	jmp    0x1004ea04
1004e9ff:	mov    eax,0x1007d9d0
1004ea04:	test   BYTE PTR [eax+0x24],0x7f
1004ea08:	jne    0x1004e983
1004ea0e:	push   DWORD PTR [ebp-0x30]
1004ea11:	call   0x1004c4ca
1004ea16:	cmp    eax,0xffffffff
1004ea19:	pop    ecx
1004ea1a:	je     0x1004ea52
1004ea1c:	push   DWORD PTR [ebp-0x30]
1004ea1f:	call   0x1004c4ca
1004ea24:	cmp    eax,0xfffffffe
1004ea27:	pop    ecx
1004ea28:	je     0x1004ea52
1004ea2a:	push   DWORD PTR [ebp-0x30]
1004ea2d:	call   0x1004c4ca
1004ea32:	push   DWORD PTR [ebp-0x30]
1004ea35:	sar    eax,0x5
1004ea38:	lea    esi,[eax*4+0x10081460]
1004ea3f:	call   0x1004c4ca
1004ea44:	and    eax,0x1f
1004ea47:	imul   eax,eax,0x28
1004ea4a:	add    eax,DWORD PTR [esi]
1004ea4c:	pop    ecx
1004ea4d:	pop    ecx
1004ea4e:	xor    esi,esi
1004ea50:	jmp    0x1004ea57
1004ea52:	mov    eax,0x1007d9d0
1004ea57:	test   BYTE PTR [eax+0x24],0x80
1004ea5b:	jne    0x1004e983
1004ea61:	cmp    ebx,esi
1004ea63:	je     0x1004e983
1004ea69:	mov    dl,BYTE PTR [ebx]
1004ea6b:	test   dl,dl
1004ea6d:	mov    DWORD PTR [ebp-0x34],esi
1004ea70:	mov    DWORD PTR [ebp-0x28],esi
1004ea73:	mov    DWORD PTR [ebp-0x48],esi
1004ea76:	mov    DWORD PTR [ebp-0x60],esi
1004ea79:	mov    BYTE PTR [ebp-0x19],dl
1004ea7c:	je     0x1004f28b
1004ea82:	inc    ebx
1004ea83:	xor    eax,eax
1004ea85:	cmp    DWORD PTR [ebp-0x34],eax
1004ea88:	mov    DWORD PTR [ebp-0x4c],ebx
1004ea8b:	jl     0x1004f27a
1004ea91:	mov    cl,dl
1004ea93:	sub    cl,0x20
1004ea96:	cmp    cl,0x58
1004ea99:	ja     0x1004eaa8
1004ea9b:	movsx  eax,dl
1004ea9e:	movzx  eax,BYTE PTR [eax+0x10066e30]
1004eaa5:	and    eax,0xf
1004eaa8:	mov    ecx,DWORD PTR [ebp-0x48]
1004eaab:	imul   eax,eax,0x9
1004eaae:	movzx  eax,BYTE PTR [eax+ecx*1+0x10066e50]
1004eab6:	push   0x8
1004eab8:	shr    eax,0x4
1004eabb:	pop    esi
1004eabc:	cmp    eax,esi
1004eabe:	mov    DWORD PTR [ebp-0x48],eax
1004eac1:	je     0x1004f263
1004eac7:	push   0x7
1004eac9:	pop    ecx
1004eaca:	cmp    eax,ecx
1004eacc:	ja     0x1004f24d
1004ead2:	jmp    DWORD PTR [eax*4+0x1004f2b3]
1004ead9:	xor    eax,eax
1004eadb:	or     DWORD PTR [ebp-0x20],0xffffffff
1004eadf:	mov    DWORD PTR [ebp-0x74],eax
1004eae2:	mov    DWORD PTR [ebp-0x68],eax
1004eae5:	mov    DWORD PTR [ebp-0x40],eax
1004eae8:	mov    DWORD PTR [ebp-0x3c],eax
1004eaeb:	mov    DWORD PTR [ebp-0x18],eax
1004eaee:	mov    DWORD PTR [ebp-0x44],eax
1004eaf1:	jmp    0x1004f24d
1004eaf6:	movsx  eax,dl
1004eaf9:	sub    eax,0x20
1004eafc:	je     0x1004eb3a
1004eafe:	sub    eax,0x3
1004eb01:	je     0x1004eb2e
1004eb03:	sub    eax,esi
1004eb05:	je     0x1004eb25
1004eb07:	dec    eax
1004eb08:	dec    eax
1004eb09:	je     0x1004eb1c
1004eb0b:	sub    eax,0x3
1004eb0e:	jne    0x1004f24d
1004eb14:	or     DWORD PTR [ebp-0x18],esi
1004eb17:	jmp    0x1004f24d
1004eb1c:	or     DWORD PTR [ebp-0x18],0x4
1004eb20:	jmp    0x1004f24d
1004eb25:	or     DWORD PTR [ebp-0x18],0x1
1004eb29:	jmp    0x1004f24d
1004eb2e:	or     DWORD PTR [ebp-0x18],0x80
1004eb35:	jmp    0x1004f24d
1004eb3a:	or     DWORD PTR [ebp-0x18],0x2
1004eb3e:	jmp    0x1004f24d
1004eb43:	cmp    dl,0x2a
1004eb46:	jne    0x1004eb68
1004eb48:	add    edi,0x4
1004eb4b:	mov    DWORD PTR [ebp-0x2c],edi
1004eb4e:	mov    edi,DWORD PTR [edi-0x4]
1004eb51:	test   edi,edi
1004eb53:	mov    DWORD PTR [ebp-0x40],edi
1004eb56:	jge    0x1004f24d
1004eb5c:	or     DWORD PTR [ebp-0x18],0x4
1004eb60:	neg    DWORD PTR [ebp-0x40]
1004eb63:	jmp    0x1004f24d
1004eb68:	mov    eax,DWORD PTR [ebp-0x40]
1004eb6b:	imul   eax,eax,0xa
1004eb6e:	movsx  ecx,dl
1004eb71:	lea    eax,[eax+ecx*1-0x30]
1004eb75:	mov    DWORD PTR [ebp-0x40],eax
1004eb78:	jmp    0x1004f24d
1004eb7d:	and    DWORD PTR [ebp-0x20],0x0
1004eb81:	jmp    0x1004f24d
1004eb86:	cmp    dl,0x2a
1004eb89:	jne    0x1004eba8
1004eb8b:	add    edi,0x4
1004eb8e:	mov    DWORD PTR [ebp-0x2c],edi
1004eb91:	mov    edi,DWORD PTR [edi-0x4]
1004eb94:	test   edi,edi
1004eb96:	mov    DWORD PTR [ebp-0x20],edi
1004eb99:	jge    0x1004f24d
1004eb9f:	or     DWORD PTR [ebp-0x20],0xffffffff
1004eba3:	jmp    0x1004f24d
1004eba8:	mov    eax,DWORD PTR [ebp-0x20]
1004ebab:	imul   eax,eax,0xa
1004ebae:	movsx  ecx,dl
1004ebb1:	lea    eax,[eax+ecx*1-0x30]
1004ebb5:	mov    DWORD PTR [ebp-0x20],eax
1004ebb8:	jmp    0x1004f24d
1004ebbd:	cmp    dl,0x49
1004ebc0:	je     0x1004ec08
1004ebc2:	cmp    dl,0x68
1004ebc5:	je     0x1004ebff
1004ebc7:	cmp    dl,0x6c
1004ebca:	je     0x1004ebe1
1004ebcc:	cmp    dl,0x77
1004ebcf:	jne    0x1004f24d
1004ebd5:	or     DWORD PTR [ebp-0x18],0x800
1004ebdc:	jmp    0x1004f24d
1004ebe1:	cmp    BYTE PTR [ebx],0x6c
1004ebe4:	jne    0x1004ebf6
1004ebe6:	inc    ebx
1004ebe7:	or     DWORD PTR [ebp-0x18],0x1000
1004ebee:	mov    DWORD PTR [ebp-0x4c],ebx
1004ebf1:	jmp    0x1004f24d
1004ebf6:	or     DWORD PTR [ebp-0x18],0x10
1004ebfa:	jmp    0x1004f24d
1004ebff:	or     DWORD PTR [ebp-0x18],0x20
1004ec03:	jmp    0x1004f24d
1004ec08:	mov    al,BYTE PTR [ebx]
1004ec0a:	cmp    al,0x36
1004ec0c:	jne    0x1004ec25
1004ec0e:	cmp    BYTE PTR [ebx+0x1],0x34
1004ec12:	jne    0x1004ec25
1004ec14:	inc    ebx
1004ec15:	inc    ebx
1004ec16:	or     DWORD PTR [ebp-0x18],0x8000
1004ec1d:	mov    DWORD PTR [ebp-0x4c],ebx
1004ec20:	jmp    0x1004f24d
1004ec25:	cmp    al,0x33
1004ec27:	jne    0x1004ec40
1004ec29:	cmp    BYTE PTR [ebx+0x1],0x32
1004ec2d:	jne    0x1004ec40
1004ec2f:	inc    ebx
1004ec30:	inc    ebx
1004ec31:	and    DWORD PTR [ebp-0x18],0xffff7fff
1004ec38:	mov    DWORD PTR [ebp-0x4c],ebx
1004ec3b:	jmp    0x1004f24d
1004ec40:	cmp    al,0x64
1004ec42:	je     0x1004f24d
1004ec48:	cmp    al,0x69
1004ec4a:	je     0x1004f24d
1004ec50:	cmp    al,0x6f
1004ec52:	je     0x1004f24d
1004ec58:	cmp    al,0x75
1004ec5a:	je     0x1004f24d
1004ec60:	cmp    al,0x78
1004ec62:	je     0x1004f24d
1004ec68:	cmp    al,0x58
1004ec6a:	je     0x1004f24d
1004ec70:	and    DWORD PTR [ebp-0x48],0x0
1004ec74:	and    DWORD PTR [ebp-0x44],0x0
1004ec78:	lea    eax,[ebp-0x5c]
1004ec7b:	push   eax
1004ec7c:	movzx  eax,dl
1004ec7f:	push   eax
1004ec80:	call   0x10048bdf
1004ec85:	pop    ecx
1004ec86:	test   eax,eax
1004ec88:	mov    al,BYTE PTR [ebp-0x19]
1004ec8b:	pop    ecx
1004ec8c:	je     0x1004eca7
1004ec8e:	mov    ecx,DWORD PTR [ebp-0x30]
1004ec91:	lea    esi,[ebp-0x34]
1004ec94:	call   0x1004c6d5
1004ec99:	mov    al,BYTE PTR [ebx]
1004ec9b:	inc    ebx
1004ec9c:	test   al,al
1004ec9e:	mov    DWORD PTR [ebp-0x4c],ebx
1004eca1:	je     0x1004f263
1004eca7:	mov    ecx,DWORD PTR [ebp-0x30]
1004ecaa:	lea    esi,[ebp-0x34]
1004ecad:	call   0x1004c6d5
1004ecb2:	jmp    0x1004f24d
1004ecb7:	movsx  eax,dl
1004ecba:	cmp    eax,0x64
1004ecbd:	jg     0x1004ee37
1004ecc3:	je     0x1004eeb2
1004ecc9:	cmp    eax,0x53
1004eccc:	jg     0x1004ed7e
1004ecd2:	je     0x1004ed2f
1004ecd4:	sub    eax,0x41
1004ecd7:	je     0x1004ece9
1004ecd9:	dec    eax
1004ecda:	dec    eax
1004ecdb:	je     0x1004ed1e
1004ecdd:	dec    eax
1004ecde:	dec    eax
1004ecdf:	je     0x1004ece9
1004ece1:	dec    eax
1004ece2:	dec    eax
1004ece3:	jne    0x1004f135
1004ece9:	add    dl,0x20
1004ecec:	mov    DWORD PTR [ebp-0x74],0x1
1004ecf3:	mov    BYTE PTR [ebp-0x19],dl
1004ecf6:	or     DWORD PTR [ebp-0x18],0x40
1004ecfa:	cmp    DWORD PTR [ebp-0x20],0x0
1004ecfe:	lea    ebx,[ebp-0x14]
1004ed01:	mov    eax,0x200
1004ed06:	mov    DWORD PTR [ebp-0x24],ebx
1004ed09:	mov    DWORD PTR [ebp-0x6c],eax
1004ed0c:	jge    0x1004eed6
1004ed12:	mov    DWORD PTR [ebp-0x20],0x6
1004ed19:	jmp    0x1004ef25
1004ed1e:	test   WORD PTR [ebp-0x18],0x830
1004ed24:	jne    0x1004ed9b
1004ed26:	or     DWORD PTR [ebp-0x18],0x800
1004ed2d:	jmp    0x1004ed9b
1004ed2f:	test   WORD PTR [ebp-0x18],0x830
1004ed35:	jne    0x1004ed3e
1004ed37:	or     DWORD PTR [ebp-0x18],0x800
1004ed3e:	mov    ecx,DWORD PTR [ebp-0x20]
1004ed41:	cmp    ecx,0xffffffff
1004ed44:	jne    0x1004ed4b
1004ed46:	mov    ecx,0x7fffffff
1004ed4b:	add    edi,0x4
1004ed4e:	test   WORD PTR [ebp-0x18],0x810
1004ed54:	mov    DWORD PTR [ebp-0x2c],edi
1004ed57:	mov    edi,DWORD PTR [edi-0x4]
1004ed5a:	mov    DWORD PTR [ebp-0x24],edi
1004ed5d:	je     0x1004f113
1004ed63:	test   edi,edi
1004ed65:	jne    0x1004ed6f
1004ed67:	mov    eax,ds:0x1007de34
1004ed6c:	mov    DWORD PTR [ebp-0x24],eax
1004ed6f:	mov    eax,DWORD PTR [ebp-0x24]
1004ed72:	mov    DWORD PTR [ebp-0x44],0x1
1004ed79:	jmp    0x1004f108
1004ed7e:	sub    eax,0x58
1004ed81:	je     0x1004efbb
1004ed87:	dec    eax
1004ed88:	dec    eax
1004ed89:	je     0x1004ede8
1004ed8b:	sub    eax,ecx
1004ed8d:	je     0x1004ecf6
1004ed93:	dec    eax
1004ed94:	dec    eax
1004ed95:	jne    0x1004f135
1004ed9b:	add    edi,0x4
1004ed9e:	test   WORD PTR [ebp-0x18],0x810
1004eda4:	mov    DWORD PTR [ebp-0x2c],edi
1004eda7:	je     0x1004edd0
1004eda9:	movzx  eax,WORD PTR [edi-0x4]
1004edad:	push   eax
1004edae:	push   0x200
1004edb3:	lea    eax,[ebp-0x14]
1004edb6:	push   eax
1004edb7:	lea    eax,[ebp-0x28]
1004edba:	push   eax
1004edbb:	call   0x1004e8be
1004edc0:	add    esp,0x10
1004edc3:	test   eax,eax
1004edc5:	je     0x1004eddd
1004edc7:	mov    DWORD PTR [ebp-0x68],0x1
1004edce:	jmp    0x1004eddd
1004edd0:	mov    al,BYTE PTR [edi-0x4]
1004edd3:	mov    BYTE PTR [ebp-0x14],al
1004edd6:	mov    DWORD PTR [ebp-0x28],0x1
1004eddd:	lea    eax,[ebp-0x14]
1004ede0:	mov    DWORD PTR [ebp-0x24],eax
1004ede3:	jmp    0x1004f135
1004ede8:	mov    eax,DWORD PTR [edi]
1004edea:	add    edi,0x4
1004eded:	test   eax,eax
1004edef:	mov    DWORD PTR [ebp-0x2c],edi
1004edf2:	je     0x1004ee23
1004edf4:	mov    ecx,DWORD PTR [eax+0x4]
1004edf7:	test   ecx,ecx
1004edf9:	je     0x1004ee23
1004edfb:	test   WORD PTR [ebp-0x18],0x800
1004ee01:	movsx  eax,WORD PTR [eax]
1004ee04:	mov    DWORD PTR [ebp-0x24],ecx
1004ee07:	je     0x1004ee1a
1004ee09:	cdq    
1004ee0a:	sub    eax,edx
1004ee0c:	sar    eax,1
1004ee0e:	mov    DWORD PTR [ebp-0x44],0x1
1004ee15:	jmp    0x1004f132
1004ee1a:	and    DWORD PTR [ebp-0x44],0x0
1004ee1e:	jmp    0x1004f132
1004ee23:	mov    eax,ds:0x1007de30
1004ee28:	mov    DWORD PTR [ebp-0x24],eax
1004ee2b:	push   eax
1004ee2c:	call   0x10041f10
1004ee31:	pop    ecx
1004ee32:	jmp    0x1004f132
1004ee37:	cmp    eax,0x70
1004ee3a:	jg     0x1004efc0
1004ee40:	je     0x1004efb8
1004ee46:	cmp    eax,0x65
1004ee49:	jl     0x1004f135
1004ee4f:	cmp    eax,0x67
1004ee52:	jle    0x1004ecf6
1004ee58:	cmp    eax,0x69
1004ee5b:	je     0x1004eeb2
1004ee5d:	cmp    eax,0x6e
1004ee60:	je     0x1004ee7d
1004ee62:	cmp    eax,0x6f
1004ee65:	jne    0x1004f135
1004ee6b:	test   BYTE PTR [ebp-0x18],0x80
1004ee6f:	mov    DWORD PTR [ebp-0x28],esi
1004ee72:	je     0x1004eebd
1004ee74:	or     DWORD PTR [ebp-0x18],0x200
1004ee7b:	jmp    0x1004eebd
1004ee7d:	mov    esi,DWORD PTR [edi]
1004ee7f:	add    edi,0x4
1004ee82:	mov    DWORD PTR [ebp-0x2c],edi
1004ee85:	call   0x1004d0c4
1004ee8a:	test   eax,eax
1004ee8c:	je     0x1004f263
1004ee92:	test   BYTE PTR [ebp-0x18],0x20
1004ee96:	je     0x1004eea1
1004ee98:	mov    ax,WORD PTR [ebp-0x34]
1004ee9c:	mov    WORD PTR [esi],ax
1004ee9f:	jmp    0x1004eea6
1004eea1:	mov    eax,DWORD PTR [ebp-0x34]
1004eea4:	mov    DWORD PTR [esi],eax
1004eea6:	mov    DWORD PTR [ebp-0x68],0x1
1004eead:	jmp    0x1004f23a
1004eeb2:	or     DWORD PTR [ebp-0x18],0x40
1004eeb6:	mov    DWORD PTR [ebp-0x28],0xa
1004eebd:	mov    ecx,DWORD PTR [ebp-0x18]
1004eec0:	test   cx,cx
1004eec3:	jns    0x1004f00a
1004eec9:	add    edi,esi
1004eecb:	mov    eax,DWORD PTR [edi-0x8]
1004eece:	mov    edx,DWORD PTR [edi-0x4]
1004eed1:	jmp    0x1004f03f
1004eed6:	jne    0x1004eee6
1004eed8:	cmp    dl,0x67
1004eedb:	jne    0x1004ef25
1004eedd:	mov    DWORD PTR [ebp-0x20],0x1
1004eee4:	jmp    0x1004ef25
1004eee6:	cmp    DWORD PTR [ebp-0x20],eax
1004eee9:	jle    0x1004eeee
1004eeeb:	mov    DWORD PTR [ebp-0x20],eax
1004eeee:	cmp    DWORD PTR [ebp-0x20],0xa3
1004eef5:	jle    0x1004ef25
1004eef7:	mov    esi,DWORD PTR [ebp-0x20]
1004eefa:	add    esi,0x15d
1004ef00:	push   esi
1004ef01:	call   0x10046172
1004ef06:	test   eax,eax
1004ef08:	mov    dl,BYTE PTR [ebp-0x19]
1004ef0b:	pop    ecx
1004ef0c:	mov    DWORD PTR [ebp-0x60],eax
1004ef0f:	push   0x8
1004ef11:	je     0x1004ef1d
1004ef13:	mov    DWORD PTR [ebp-0x24],eax
1004ef16:	mov    DWORD PTR [ebp-0x6c],esi
1004ef19:	mov    ebx,eax
1004ef1b:	jmp    0x1004ef24
1004ef1d:	mov    DWORD PTR [ebp-0x20],0xa3
1004ef24:	pop    esi
1004ef25:	add    edi,esi
1004ef27:	mov    eax,DWORD PTR [edi-0x8]
1004ef2a:	mov    DWORD PTR [ebp-0x80],eax
1004ef2d:	mov    eax,DWORD PTR [edi-0x4]
1004ef30:	mov    DWORD PTR [ebp-0x7c],eax
1004ef33:	lea    eax,[ebp-0x5c]
1004ef36:	push   eax
1004ef37:	push   DWORD PTR [ebp-0x74]
1004ef3a:	movsx  eax,dl
1004ef3d:	push   DWORD PTR [ebp-0x20]
1004ef40:	mov    DWORD PTR [ebp-0x2c],edi
1004ef43:	push   eax
1004ef44:	push   DWORD PTR [ebp-0x6c]
1004ef47:	lea    eax,[ebp-0x80]
1004ef4a:	push   ebx
1004ef4b:	push   eax
1004ef4c:	push   DWORD PTR ds:0x1007da98
1004ef52:	call   0x10045c42
1004ef57:	pop    ecx
1004ef58:	call   eax
1004ef5a:	mov    edi,DWORD PTR [ebp-0x18]
1004ef5d:	add    esp,0x1c
1004ef60:	and    edi,0x80
1004ef66:	je     0x1004ef83
1004ef68:	cmp    DWORD PTR [ebp-0x20],0x0
1004ef6c:	jne    0x1004ef83
1004ef6e:	lea    eax,[ebp-0x5c]
1004ef71:	push   eax
1004ef72:	push   ebx
1004ef73:	push   DWORD PTR ds:0x1007daa4
1004ef79:	call   0x10045c42
1004ef7e:	pop    ecx
1004ef7f:	call   eax
1004ef81:	pop    ecx
1004ef82:	pop    ecx
1004ef83:	cmp    BYTE PTR [ebp-0x19],0x67
1004ef87:	jne    0x1004efa2
1004ef89:	test   edi,edi
1004ef8b:	jne    0x1004efa2
1004ef8d:	lea    eax,[ebp-0x5c]
1004ef90:	push   eax
1004ef91:	push   ebx
1004ef92:	push   DWORD PTR ds:0x1007daa0
1004ef98:	call   0x10045c42
1004ef9d:	pop    ecx
1004ef9e:	call   eax
1004efa0:	pop    ecx
1004efa1:	pop    ecx
1004efa2:	cmp    BYTE PTR [ebx],0x2d
1004efa5:	jne    0x1004efb2
1004efa7:	or     DWORD PTR [ebp-0x18],0x100
1004efae:	inc    ebx
1004efaf:	mov    DWORD PTR [ebp-0x24],ebx
1004efb2:	push   ebx
1004efb3:	jmp    0x1004ee2c
1004efb8:	mov    DWORD PTR [ebp-0x20],esi
1004efbb:	mov    DWORD PTR [ebp-0x64],ecx
1004efbe:	jmp    0x1004efe1
1004efc0:	sub    eax,0x73
1004efc3:	je     0x1004ed3e
1004efc9:	dec    eax
1004efca:	dec    eax
1004efcb:	je     0x1004eeb6
1004efd1:	sub    eax,0x3
1004efd4:	jne    0x1004f135
1004efda:	mov    DWORD PTR [ebp-0x64],0x27
1004efe1:	test   BYTE PTR [ebp-0x18],0x80
1004efe5:	mov    DWORD PTR [ebp-0x28],0x10
1004efec:	je     0x1004eebd
1004eff2:	mov    al,BYTE PTR [ebp-0x64]
1004eff5:	add    al,0x51
1004eff7:	mov    BYTE PTR [ebp-0x38],0x30
1004effb:	mov    BYTE PTR [ebp-0x37],al
1004effe:	mov    DWORD PTR [ebp-0x3c],0x2
1004f005:	jmp    0x1004eebd
1004f00a:	test   cx,0x1000
1004f00f:	jne    0x1004eec9
1004f015:	add    edi,0x4
1004f018:	test   cl,0x20
1004f01b:	je     0x1004f032
1004f01d:	test   cl,0x40
1004f020:	mov    DWORD PTR [ebp-0x2c],edi
1004f023:	je     0x1004f02b
1004f025:	movsx  eax,WORD PTR [edi-0x4]
1004f029:	jmp    0x1004f02f
1004f02b:	movzx  eax,WORD PTR [edi-0x4]
1004f02f:	cdq    
1004f030:	jmp    0x1004f042
1004f032:	test   cl,0x40
1004f035:	mov    eax,DWORD PTR [edi-0x4]
1004f038:	je     0x1004f03d
1004f03a:	cdq    
1004f03b:	jmp    0x1004f03f
1004f03d:	xor    edx,edx
1004f03f:	mov    DWORD PTR [ebp-0x2c],edi
1004f042:	test   cl,0x40
1004f045:	je     0x1004f05f
1004f047:	test   edx,edx
1004f049:	jg     0x1004f05f
1004f04b:	jl     0x1004f051
1004f04d:	test   eax,eax
1004f04f:	jae    0x1004f05f
1004f051:	neg    eax
1004f053:	adc    edx,0x0
1004f056:	neg    edx
1004f058:	or     DWORD PTR [ebp-0x18],0x100
1004f05f:	test   WORD PTR [ebp-0x18],0x9000
1004f065:	mov    ebx,edx
1004f067:	mov    edi,eax
1004f069:	jne    0x1004f06d
1004f06b:	xor    ebx,ebx
1004f06d:	cmp    DWORD PTR [ebp-0x20],0x0
1004f071:	jge    0x1004f07c
1004f073:	mov    DWORD PTR [ebp-0x20],0x1
1004f07a:	jmp    0x1004f08d
1004f07c:	and    DWORD PTR [ebp-0x18],0xfffffff7
1004f080:	mov    eax,0x200
1004f085:	cmp    DWORD PTR [ebp-0x20],eax
1004f088:	jle    0x1004f08d
1004f08a:	mov    DWORD PTR [ebp-0x20],eax
1004f08d:	mov    eax,edi
1004f08f:	or     eax,ebx
1004f091:	jne    0x1004f097
1004f093:	and    DWORD PTR [ebp-0x3c],0x0
1004f097:	lea    esi,[ebp+0x1eb]
1004f09d:	mov    eax,DWORD PTR [ebp-0x20]
1004f0a0:	dec    DWORD PTR [ebp-0x20]
1004f0a3:	test   eax,eax
1004f0a5:	jg     0x1004f0ad
1004f0a7:	mov    eax,edi
1004f0a9:	or     eax,ebx
1004f0ab:	je     0x1004f0d1
1004f0ad:	mov    eax,DWORD PTR [ebp-0x28]
1004f0b0:	cdq    
1004f0b1:	push   edx
1004f0b2:	push   eax
1004f0b3:	push   ebx
1004f0b4:	push   edi
1004f0b5:	call   0x10048310
1004f0ba:	add    ecx,0x30
1004f0bd:	cmp    ecx,0x39
1004f0c0:	mov    DWORD PTR [ebp-0x6c],ebx
1004f0c3:	mov    edi,eax
1004f0c5:	mov    ebx,edx
1004f0c7:	jle    0x1004f0cc
1004f0c9:	add    ecx,DWORD PTR [ebp-0x64]
1004f0cc:	mov    BYTE PTR [esi],cl
1004f0ce:	dec    esi
1004f0cf:	jmp    0x1004f09d
1004f0d1:	lea    eax,[ebp+0x1eb]
1004f0d7:	sub    eax,esi
1004f0d9:	inc    esi
1004f0da:	test   WORD PTR [ebp-0x18],0x200
1004f0e0:	mov    DWORD PTR [ebp-0x28],eax
1004f0e3:	mov    DWORD PTR [ebp-0x24],esi
1004f0e6:	je     0x1004f135
1004f0e8:	test   eax,eax
1004f0ea:	je     0x1004f0f3
1004f0ec:	mov    ecx,esi
1004f0ee:	cmp    BYTE PTR [ecx],0x30
1004f0f1:	je     0x1004f135
1004f0f3:	dec    DWORD PTR [ebp-0x24]
1004f0f6:	mov    ecx,DWORD PTR [ebp-0x24]
1004f0f9:	mov    BYTE PTR [ecx],0x30
1004f0fc:	inc    eax
1004f0fd:	jmp    0x1004f132
1004f0ff:	dec    ecx
1004f100:	cmp    WORD PTR [eax],0x0
1004f104:	je     0x1004f10c
1004f106:	inc    eax
1004f107:	inc    eax
1004f108:	test   ecx,ecx
1004f10a:	jne    0x1004f0ff
1004f10c:	sub    eax,DWORD PTR [ebp-0x24]
1004f10f:	sar    eax,1
1004f111:	jmp    0x1004f132
1004f113:	test   edi,edi
1004f115:	jne    0x1004f11f
1004f117:	mov    eax,ds:0x1007de30
1004f11c:	mov    DWORD PTR [ebp-0x24],eax
1004f11f:	mov    eax,DWORD PTR [ebp-0x24]
1004f122:	jmp    0x1004f12b
1004f124:	dec    ecx
1004f125:	cmp    BYTE PTR [eax],0x0
1004f128:	je     0x1004f12f
1004f12a:	inc    eax
1004f12b:	test   ecx,ecx
1004f12d:	jne    0x1004f124
1004f12f:	sub    eax,DWORD PTR [ebp-0x24]
1004f132:	mov    DWORD PTR [ebp-0x28],eax
1004f135:	cmp    DWORD PTR [ebp-0x68],0x0
1004f139:	jne    0x1004f23a
1004f13f:	mov    eax,DWORD PTR [ebp-0x18]
1004f142:	test   al,0x40
1004f144:	je     0x1004f16b
1004f146:	test   ax,0x100
1004f14a:	je     0x1004f152
1004f14c:	mov    BYTE PTR [ebp-0x38],0x2d
1004f150:	jmp    0x1004f164
1004f152:	test   al,0x1
1004f154:	je     0x1004f15c
1004f156:	mov    BYTE PTR [ebp-0x38],0x2b
1004f15a:	jmp    0x1004f164
1004f15c:	test   al,0x2
1004f15e:	je     0x1004f16b
1004f160:	mov    BYTE PTR [ebp-0x38],0x20
1004f164:	mov    DWORD PTR [ebp-0x3c],0x1
1004f16b:	mov    ebx,DWORD PTR [ebp-0x40]
1004f16e:	sub    ebx,DWORD PTR [ebp-0x28]
1004f171:	sub    ebx,DWORD PTR [ebp-0x3c]
1004f174:	test   BYTE PTR [ebp-0x18],0xc
1004f178:	jne    0x1004f18b
1004f17a:	push   DWORD PTR [ebp-0x30]
1004f17d:	lea    eax,[ebp-0x34]
1004f180:	push   ebx
1004f181:	push   0x20
1004f183:	call   0x1004c708
1004f188:	add    esp,0xc
1004f18b:	push   DWORD PTR [ebp-0x3c]
1004f18e:	mov    edi,DWORD PTR [ebp-0x30]
1004f191:	lea    eax,[ebp-0x34]
1004f194:	lea    ecx,[ebp-0x38]
1004f197:	call   0x1004e8d9
1004f19c:	test   BYTE PTR [ebp-0x18],0x8
1004f1a0:	pop    ecx
1004f1a1:	je     0x1004f1b8
1004f1a3:	test   BYTE PTR [ebp-0x18],0x4
1004f1a7:	jne    0x1004f1b8
1004f1a9:	push   edi
1004f1aa:	push   ebx
1004f1ab:	push   0x30
1004f1ad:	lea    eax,[ebp-0x34]
1004f1b0:	call   0x1004c708
1004f1b5:	add    esp,0xc
1004f1b8:	cmp    DWORD PTR [ebp-0x44],0x0
1004f1bc:	mov    eax,DWORD PTR [ebp-0x28]
1004f1bf:	je     0x1004f212
1004f1c1:	test   eax,eax
1004f1c3:	jle    0x1004f212
1004f1c5:	mov    esi,DWORD PTR [ebp-0x24]
1004f1c8:	mov    DWORD PTR [ebp-0x6c],eax
1004f1cb:	movzx  eax,WORD PTR [esi]
1004f1ce:	dec    DWORD PTR [ebp-0x6c]
1004f1d1:	push   eax
1004f1d2:	push   0x6
1004f1d4:	lea    eax,[ebp+0x1ec]
1004f1da:	push   eax
1004f1db:	lea    eax,[ebp-0x78]
1004f1de:	inc    esi
1004f1df:	push   eax
1004f1e0:	inc    esi
1004f1e1:	call   0x1004e8be
1004f1e6:	add    esp,0x10
1004f1e9:	test   eax,eax
1004f1eb:	jne    0x1004f20c
1004f1ed:	cmp    DWORD PTR [ebp-0x78],eax
1004f1f0:	je     0x1004f20c
1004f1f2:	push   DWORD PTR [ebp-0x78]
1004f1f5:	lea    eax,[ebp-0x34]
1004f1f8:	lea    ecx,[ebp+0x1ec]
1004f1fe:	call   0x1004e8d9
1004f203:	cmp    DWORD PTR [ebp-0x6c],0x0
1004f207:	pop    ecx
1004f208:	jne    0x1004f1cb
1004f20a:	jmp    0x1004f21f
1004f20c:	or     DWORD PTR [ebp-0x34],0xffffffff
1004f210:	jmp    0x1004f21f
1004f212:	mov    ecx,DWORD PTR [ebp-0x24]
1004f215:	push   eax
1004f216:	lea    eax,[ebp-0x34]
1004f219:	call   0x1004e8d9
1004f21e:	pop    ecx
1004f21f:	cmp    DWORD PTR [ebp-0x34],0x0
1004f223:	jl     0x1004f23a
1004f225:	test   BYTE PTR [ebp-0x18],0x4
1004f229:	je     0x1004f23a
1004f22b:	push   edi
1004f22c:	push   ebx
1004f22d:	push   0x20
1004f22f:	lea    eax,[ebp-0x34]
1004f232:	call   0x1004c708
1004f237:	add    esp,0xc
1004f23a:	cmp    DWORD PTR [ebp-0x60],0x0
1004f23e:	je     0x1004f24d
1004f240:	push   DWORD PTR [ebp-0x60]
1004f243:	call   0x10042408
1004f248:	and    DWORD PTR [ebp-0x60],0x0
1004f24c:	pop    ecx
1004f24d:	mov    ebx,DWORD PTR [ebp-0x4c]
1004f250:	mov    al,BYTE PTR [ebx]
1004f252:	test   al,al
1004f254:	mov    BYTE PTR [ebp-0x19],al
1004f257:	je     0x1004f27a
1004f259:	mov    edi,DWORD PTR [ebp-0x2c]
1004f25c:	mov    dl,al
1004f25e:	jmp    0x1004ea82
1004f263:	call   0x100458a5
1004f268:	mov    DWORD PTR [eax],0x16
1004f26e:	xor    eax,eax
1004f270:	push   eax
1004f271:	push   eax
1004f272:	push   eax
1004f273:	push   eax
1004f274:	push   eax
1004f275:	jmp    0x1004e993
1004f27a:	xor    esi,esi
1004f27c:	cmp    DWORD PTR [ebp-0x48],esi
1004f27f:	je     0x1004f28b
1004f281:	cmp    DWORD PTR [ebp-0x48],0x7
1004f285:	jne    0x1004e983
1004f28b:	cmp    BYTE PTR [ebp-0x50],0x0
1004f28f:	je     0x1004f298
1004f291:	mov    eax,DWORD PTR [ebp-0x54]
1004f294:	and    DWORD PTR [eax+0x70],0xfffffffd
1004f298:	mov    eax,DWORD PTR [ebp-0x34]
1004f29b:	mov    ecx,DWORD PTR [ebp+0x1f4]
1004f2a1:	pop    edi
1004f2a2:	pop    esi
1004f2a3:	xor    ecx,ebp
1004f2a5:	pop    ebx
1004f2a6:	call   0x10041d97
1004f2ab:	add    ebp,0x1f8
1004f2b1:	leave  
1004f2b2:	ret    
1004f2b3:	je     0x1004f2a1
1004f2b5:	add    al,0x10
1004f2b7:	fldl2e 
1004f2b9:	add    al,0x10
1004f2bb:	imul   dl
1004f2bd:	add    al,0x10
1004f2bf:	inc    ebx
1004f2c0:	jmp    0x1004f2c6
1004f2c2:	adc    BYTE PTR [ebp-0x15],bh
1004f2c5:	add    al,0x10
1004f2c7:	xchg   bl,ch
1004f2c9:	add    al,0x10
1004f2cb:	mov    ebp,0xb71004eb
1004f2d0:	in     al,dx
1004f2d1:	add    al,0x10
1004f2d3:	int3   
1004f2d4:	int3   
1004f2d5:	int3   
1004f2d6:	int3   
1004f2d7:	int3   
1004f2d8:	int3   
1004f2d9:	int3   
1004f2da:	int3   
1004f2db:	int3   
1004f2dc:	int3   
1004f2dd:	int3   
1004f2de:	int3   
1004f2df:	int3   
1004f2e0:	push   ebp
1004f2e1:	mov    ebp,esp
1004f2e3:	push   edi
1004f2e4:	push   esi
1004f2e5:	push   ebx
1004f2e6:	mov    ecx,DWORD PTR [ebp+0x10]
1004f2e9:	or     ecx,ecx
1004f2eb:	je     0x1004f33a
1004f2ed:	mov    esi,DWORD PTR [ebp+0x8]
1004f2f0:	mov    edi,DWORD PTR [ebp+0xc]
1004f2f3:	mov    bh,0x41
1004f2f5:	mov    bl,0x5a
1004f2f7:	mov    dh,0x20
1004f2f9:	lea    ecx,[ecx+0x0]
1004f2fc:	mov    ah,BYTE PTR [esi]
1004f2fe:	or     ah,ah
1004f300:	mov    al,BYTE PTR [edi]
1004f302:	je     0x1004f32b
1004f304:	or     al,al
1004f306:	je     0x1004f32b
1004f308:	add    esi,0x1
1004f30b:	add    edi,0x1
1004f30e:	cmp    ah,bh
1004f310:	jb     0x1004f318
1004f312:	cmp    ah,bl
1004f314:	ja     0x1004f318
1004f316:	add    ah,dh
1004f318:	cmp    al,bh
1004f31a:	jb     0x1004f322
1004f31c:	cmp    al,bl
1004f31e:	ja     0x1004f322
1004f320:	add    al,dh
1004f322:	cmp    ah,al
1004f324:	jne    0x1004f331
1004f326:	sub    ecx,0x1
1004f329:	jne    0x1004f2fc
1004f32b:	xor    ecx,ecx
1004f32d:	cmp    ah,al
1004f32f:	je     0x1004f33a
1004f331:	mov    ecx,0xffffffff
1004f336:	jb     0x1004f33a
1004f338:	neg    ecx
1004f33a:	mov    eax,ecx
1004f33c:	pop    ebx
1004f33d:	pop    esi
1004f33e:	pop    edi
1004f33f:	leave  
1004f340:	ret    
1004f341:	xor    eax,eax
1004f343:	push   eax
1004f344:	push   eax
1004f345:	push   0x3
1004f347:	push   eax
1004f348:	push   0x3
1004f34a:	push   0x40000000
1004f34f:	push   0x10066eac
1004f354:	call   DWORD PTR ds:0x10065254
1004f35a:	mov    ds:0x1007df74,eax
1004f35f:	ret    
1004f360:	mov    eax,ds:0x1007df74
1004f365:	cmp    eax,0xffffffff
1004f368:	push   esi
1004f369:	mov    esi,DWORD PTR ds:0x10065070
1004f36f:	je     0x1004f379
1004f371:	cmp    eax,0xfffffffe
1004f374:	je     0x1004f379
1004f376:	push   eax
1004f377:	call   esi
1004f379:	mov    eax,ds:0x1007df70
1004f37e:	cmp    eax,0xffffffff
1004f381:	je     0x1004f38b
1004f383:	cmp    eax,0xfffffffe
1004f386:	je     0x1004f38b
1004f388:	push   eax
1004f389:	call   esi
1004f38b:	pop    esi
1004f38c:	ret    
1004f38d:	push   ebx
1004f38e:	push   esi
1004f38f:	mov    esi,DWORD PTR [esp+0xc]
1004f393:	push   edi
1004f394:	xor    edi,edi
1004f396:	or     ebx,0xffffffff
1004f399:	cmp    esi,edi
1004f39b:	jne    0x1004f3ba
1004f39d:	call   0x100458a5
1004f3a2:	push   edi
1004f3a3:	push   edi
1004f3a4:	push   edi
1004f3a5:	push   edi
1004f3a6:	push   edi
1004f3a7:	mov    DWORD PTR [eax],0x16
1004f3ad:	call   0x1004228c
1004f3b2:	add    esp,0x14
1004f3b5:	or     eax,0xffffffff
1004f3b8:	jmp    0x1004f3fc
1004f3ba:	test   BYTE PTR [esi+0xc],0x83
1004f3be:	je     0x1004f3f7
1004f3c0:	push   esi
1004f3c1:	call   0x1004e468
1004f3c6:	push   esi
1004f3c7:	mov    ebx,eax
1004f3c9:	call   0x1004f6d8
1004f3ce:	push   esi
1004f3cf:	call   0x1004c4ca
1004f3d4:	push   eax
1004f3d5:	call   0x1004f60b
1004f3da:	add    esp,0x10
1004f3dd:	test   eax,eax
1004f3df:	jge    0x1004f3e6
1004f3e1:	or     ebx,0xffffffff
1004f3e4:	jmp    0x1004f3f7
1004f3e6:	mov    eax,DWORD PTR [esi+0x1c]
1004f3e9:	cmp    eax,edi
1004f3eb:	je     0x1004f3f7
1004f3ed:	push   eax
1004f3ee:	call   0x10042408
1004f3f3:	pop    ecx
1004f3f4:	mov    DWORD PTR [esi+0x1c],edi
1004f3f7:	mov    DWORD PTR [esi+0xc],edi
1004f3fa:	mov    eax,ebx
1004f3fc:	pop    edi
1004f3fd:	pop    esi
1004f3fe:	pop    ebx
1004f3ff:	ret    
1004f400:	push   0xc
1004f402:	push   0x100734d8
1004f407:	call   0x100459e4
1004f40c:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004f410:	xor    eax,eax
1004f412:	mov    esi,DWORD PTR [ebp+0x8]
1004f415:	xor    edi,edi
1004f417:	cmp    esi,edi
1004f419:	setne  al
1004f41c:	cmp    eax,edi
1004f41e:	jne    0x1004f43d
1004f420:	call   0x100458a5
1004f425:	mov    DWORD PTR [eax],0x16
1004f42b:	push   edi
1004f42c:	push   edi
1004f42d:	push   edi
1004f42e:	push   edi
1004f42f:	push   edi
1004f430:	call   0x1004228c
1004f435:	add    esp,0x14
1004f438:	or     eax,0xffffffff
1004f43b:	jmp    0x1004f449
1004f43d:	test   BYTE PTR [esi+0xc],0x40
1004f441:	je     0x1004f44f
1004f443:	mov    DWORD PTR [esi+0xc],edi
1004f446:	mov    eax,DWORD PTR [ebp-0x1c]
1004f449:	call   0x10045a29
1004f44e:	ret    
1004f44f:	push   esi
1004f450:	call   0x1004c426
1004f455:	pop    ecx
1004f456:	mov    DWORD PTR [ebp-0x4],edi
1004f459:	push   esi
1004f45a:	call   0x1004f38d
1004f45f:	pop    ecx
1004f460:	mov    DWORD PTR [ebp-0x1c],eax
1004f463:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004f46a:	call   0x1004f474
1004f46f:	jmp    0x1004f446
1004f471:	mov    esi,DWORD PTR [ebp+0x8]
1004f474:	push   esi
1004f475:	call   0x1004c478
1004f47a:	pop    ecx
1004f47b:	ret    
1004f47c:	push   0x10
1004f47e:	push   0x100734f8
1004f483:	call   0x100459e4
1004f488:	mov    eax,DWORD PTR [ebp+0x8]
1004f48b:	cmp    eax,0xfffffffe
1004f48e:	jne    0x1004f4a3
1004f490:	call   0x100458a5
1004f495:	mov    DWORD PTR [eax],0x9
1004f49b:	or     eax,0xffffffff
1004f49e:	jmp    0x1004f54d
1004f4a3:	xor    ebx,ebx
1004f4a5:	cmp    eax,ebx
1004f4a7:	jl     0x1004f4b1
1004f4a9:	cmp    eax,DWORD PTR ds:0x10081444
1004f4af:	jb     0x1004f4cb
1004f4b1:	call   0x100458a5
1004f4b6:	mov    DWORD PTR [eax],0x9
1004f4bc:	push   ebx
1004f4bd:	push   ebx
1004f4be:	push   ebx
1004f4bf:	push   ebx
1004f4c0:	push   ebx
1004f4c1:	call   0x1004228c
1004f4c6:	add    esp,0x14
1004f4c9:	jmp    0x1004f49b
1004f4cb:	mov    ecx,eax
1004f4cd:	sar    ecx,0x5
1004f4d0:	lea    edi,[ecx*4+0x10081460]
1004f4d7:	mov    esi,eax
1004f4d9:	and    esi,0x1f
1004f4dc:	imul   esi,esi,0x28
1004f4df:	mov    ecx,DWORD PTR [edi]
1004f4e1:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
1004f4e6:	and    ecx,0x1
1004f4e9:	je     0x1004f4b1
1004f4eb:	push   eax
1004f4ec:	call   0x1004e0a6
1004f4f1:	pop    ecx
1004f4f2:	mov    DWORD PTR [ebp-0x4],ebx
1004f4f5:	mov    eax,DWORD PTR [edi]
1004f4f7:	test   BYTE PTR [esi+eax*1+0x4],0x1
1004f4fc:	je     0x1004f52f
1004f4fe:	push   DWORD PTR [ebp+0x8]
1004f501:	call   0x1004e035
1004f506:	pop    ecx
1004f507:	push   eax
1004f508:	call   DWORD PTR ds:0x100650d0
1004f50e:	test   eax,eax
1004f510:	jne    0x1004f51d
1004f512:	call   DWORD PTR ds:0x100650c4
1004f518:	mov    DWORD PTR [ebp-0x1c],eax
1004f51b:	jmp    0x1004f520
1004f51d:	mov    DWORD PTR [ebp-0x1c],ebx
1004f520:	cmp    DWORD PTR [ebp-0x1c],ebx
1004f523:	je     0x1004f53e
1004f525:	call   0x100458b8
1004f52a:	mov    ecx,DWORD PTR [ebp-0x1c]
1004f52d:	mov    DWORD PTR [eax],ecx
1004f52f:	call   0x100458a5
1004f534:	mov    DWORD PTR [eax],0x9
1004f53a:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004f53e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004f545:	call   0x1004f553
1004f54a:	mov    eax,DWORD PTR [ebp-0x1c]
1004f54d:	call   0x10045a29
1004f552:	ret    
1004f553:	push   DWORD PTR [ebp+0x8]
1004f556:	call   0x1004e146
1004f55b:	pop    ecx
1004f55c:	ret    
1004f55d:	xor    eax,eax
1004f55f:	cmp    DWORD PTR [esp+0x8],eax
1004f563:	jbe    0x1004f576
1004f565:	mov    ecx,DWORD PTR [esp+0x4]
1004f569:	cmp    BYTE PTR [ecx],0x0
1004f56c:	je     0x1004f576
1004f56e:	inc    eax
1004f56f:	inc    ecx
1004f570:	cmp    eax,DWORD PTR [esp+0x8]
1004f574:	jb     0x1004f569
1004f576:	ret    
1004f577:	push   esi
1004f578:	mov    esi,DWORD PTR [esp+0x8]
1004f57c:	push   edi
1004f57d:	push   esi
1004f57e:	call   0x1004e035
1004f583:	cmp    eax,0xffffffff
1004f586:	pop    ecx
1004f587:	je     0x1004f5d6
1004f589:	cmp    esi,0x1
1004f58c:	mov    eax,ds:0x10081460
1004f591:	jne    0x1004f599
1004f593:	test   BYTE PTR [eax+0x54],0x1
1004f597:	jne    0x1004f5a4
1004f599:	cmp    esi,0x2
1004f59c:	jne    0x1004f5ba
1004f59e:	test   BYTE PTR [eax+0x2c],0x1
1004f5a2:	je     0x1004f5ba
1004f5a4:	push   0x2
1004f5a6:	call   0x1004e035
1004f5ab:	push   0x1
1004f5ad:	mov    edi,eax
1004f5af:	call   0x1004e035
1004f5b4:	cmp    eax,edi
1004f5b6:	pop    ecx
1004f5b7:	pop    ecx
1004f5b8:	je     0x1004f5d6
1004f5ba:	push   esi
1004f5bb:	call   0x1004e035
1004f5c0:	pop    ecx
1004f5c1:	push   eax
1004f5c2:	call   DWORD PTR ds:0x10065070
1004f5c8:	test   eax,eax
1004f5ca:	jne    0x1004f5d6
1004f5cc:	call   DWORD PTR ds:0x100650c4
1004f5d2:	mov    edi,eax
1004f5d4:	jmp    0x1004f5d8
1004f5d6:	xor    edi,edi
1004f5d8:	push   esi
1004f5d9:	call   0x1004dfb4
1004f5de:	mov    eax,esi
1004f5e0:	and    esi,0x1f
1004f5e3:	imul   esi,esi,0x28
1004f5e6:	sar    eax,0x5
1004f5e9:	test   edi,edi
1004f5eb:	mov    eax,DWORD PTR [eax*4+0x10081460]
1004f5f2:	pop    ecx
1004f5f3:	mov    BYTE PTR [eax+esi*1+0x4],0x0
1004f5f8:	je     0x1004f606
1004f5fa:	push   edi
1004f5fb:	call   0x100458cb
1004f600:	pop    ecx
1004f601:	or     eax,0xffffffff
1004f604:	jmp    0x1004f608
1004f606:	xor    eax,eax
1004f608:	pop    edi
1004f609:	pop    esi
1004f60a:	ret    
1004f60b:	push   0x10
1004f60d:	push   0x10073518
1004f612:	call   0x100459e4
1004f617:	mov    eax,DWORD PTR [ebp+0x8]
1004f61a:	cmp    eax,0xfffffffe
1004f61d:	jne    0x1004f63a
1004f61f:	call   0x100458b8
1004f624:	and    DWORD PTR [eax],0x0
1004f627:	call   0x100458a5
1004f62c:	mov    DWORD PTR [eax],0x9
1004f632:	or     eax,0xffffffff
1004f635:	jmp    0x1004f6c8
1004f63a:	xor    edi,edi
1004f63c:	cmp    eax,edi
1004f63e:	jl     0x1004f648
1004f640:	cmp    eax,DWORD PTR ds:0x10081444
1004f646:	jb     0x1004f669
1004f648:	call   0x100458b8
1004f64d:	mov    DWORD PTR [eax],edi
1004f64f:	call   0x100458a5
1004f654:	mov    DWORD PTR [eax],0x9
1004f65a:	push   edi
1004f65b:	push   edi
1004f65c:	push   edi
1004f65d:	push   edi
1004f65e:	push   edi
1004f65f:	call   0x1004228c
1004f664:	add    esp,0x14
1004f667:	jmp    0x1004f632
1004f669:	mov    ecx,eax
1004f66b:	sar    ecx,0x5
1004f66e:	lea    ebx,[ecx*4+0x10081460]
1004f675:	mov    esi,eax
1004f677:	and    esi,0x1f
1004f67a:	imul   esi,esi,0x28
1004f67d:	mov    ecx,DWORD PTR [ebx]
1004f67f:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
1004f684:	and    ecx,0x1
1004f687:	je     0x1004f648
1004f689:	push   eax
1004f68a:	call   0x1004e0a6
1004f68f:	pop    ecx
1004f690:	mov    DWORD PTR [ebp-0x4],edi
1004f693:	mov    eax,DWORD PTR [ebx]
1004f695:	test   BYTE PTR [eax+esi*1+0x4],0x1
1004f69a:	je     0x1004f6aa
1004f69c:	push   DWORD PTR [ebp+0x8]
1004f69f:	call   0x1004f577
1004f6a4:	pop    ecx
1004f6a5:	mov    DWORD PTR [ebp-0x1c],eax
1004f6a8:	jmp    0x1004f6b9
1004f6aa:	call   0x100458a5
1004f6af:	mov    DWORD PTR [eax],0x9
1004f6b5:	or     DWORD PTR [ebp-0x1c],0xffffffff
1004f6b9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004f6c0:	call   0x1004f6ce
1004f6c5:	mov    eax,DWORD PTR [ebp-0x1c]
1004f6c8:	call   0x10045a29
1004f6cd:	ret    
1004f6ce:	push   DWORD PTR [ebp+0x8]
1004f6d1:	call   0x1004e146
1004f6d6:	pop    ecx
1004f6d7:	ret    
1004f6d8:	push   esi
1004f6d9:	mov    esi,DWORD PTR [esp+0x8]
1004f6dd:	mov    eax,DWORD PTR [esi+0xc]
1004f6e0:	test   al,0x83
1004f6e2:	je     0x1004f702
1004f6e4:	test   al,0x8
1004f6e6:	je     0x1004f702
1004f6e8:	push   DWORD PTR [esi+0x8]
1004f6eb:	call   0x10042408
1004f6f0:	and    DWORD PTR [esi+0xc],0xfffffbf7
1004f6f7:	xor    eax,eax
1004f6f9:	pop    ecx
1004f6fa:	mov    DWORD PTR [esi],eax
1004f6fc:	mov    DWORD PTR [esi+0x8],eax
1004f6ff:	mov    DWORD PTR [esi+0x4],eax
1004f702:	pop    esi
1004f703:	ret    
1004f704:	int3   
1004f705:	int3   
1004f706:	int3   
1004f707:	int3   
1004f708:	int3   
1004f709:	int3   
1004f70a:	int3   
1004f70b:	int3   
1004f70c:	int3   
1004f70d:	int3   
1004f70e:	int3   
1004f70f:	int3   
1004f710:	push   ebp
1004f711:	mov    ebp,esp
1004f713:	push   0xfffffffe
1004f715:	push   0x10073538
1004f71a:	push   0x10045a40
1004f71f:	mov    eax,fs:0x0
1004f725:	push   eax
1004f726:	sub    esp,0x18
1004f729:	mov    eax,ds:0x1007d030
1004f72e:	xor    DWORD PTR [ebp-0x8],eax
1004f731:	xor    eax,ebp
1004f733:	mov    DWORD PTR [ebp-0x1c],eax
1004f736:	push   ebx
1004f737:	push   esi
1004f738:	push   edi
1004f739:	push   eax
1004f73a:	lea    eax,[ebp-0x10]
1004f73d:	mov    fs:0x0,eax
1004f743:	mov    DWORD PTR [ebp-0x18],esp
1004f746:	mov    esi,DWORD PTR [ebp+0x8]
1004f749:	test   esi,esi
1004f74b:	je     0x1004f7a2
1004f74d:	push   esi
1004f74e:	call   DWORD PTR ds:0x100650d4
1004f754:	mov    edi,eax
1004f756:	add    edi,0x1
1004f759:	mov    DWORD PTR [ebp-0x20],edi
1004f75c:	push   0x0
1004f75e:	push   0x0
1004f760:	push   edi
1004f761:	push   esi
1004f762:	push   0x0
1004f764:	push   0x0
1004f766:	call   DWORD PTR ds:0x1006508c
1004f76c:	mov    esi,eax
1004f76e:	mov    DWORD PTR [ebp-0x28],esi
1004f771:	test   esi,esi
1004f773:	jne    0x1004f7a9
1004f775:	mov    esi,DWORD PTR ds:0x100650c4
1004f77b:	call   esi
1004f77d:	test   eax,eax
1004f77f:	jg     0x1004f790
1004f781:	call   esi
1004f783:	push   eax
1004f784:	call   0x1004fa00
1004f789:	xor    eax,eax
1004f78b:	jmp    0x1004f870
1004f790:	call   esi
1004f792:	and    eax,0xffff
1004f797:	or     eax,0x80070000
1004f79c:	push   eax
1004f79d:	call   0x1004fa00
1004f7a2:	xor    eax,eax
1004f7a4:	jmp    0x1004f870
1004f7a9:	mov    DWORD PTR [ebp-0x4],0x0
1004f7b0:	lea    eax,[esi+esi*1]
1004f7b3:	cmp    esi,0x1000
1004f7b9:	jge    0x1004f7d3
1004f7bb:	call   0x10049010
1004f7c0:	mov    DWORD PTR [ebp-0x18],esp
1004f7c3:	mov    eax,esp
1004f7c5:	mov    ebx,eax
1004f7c7:	mov    DWORD PTR [ebp-0x24],ebx
1004f7ca:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004f7d1:	jmp    0x1004f805
1004f7d3:	push   eax
1004f7d4:	call   0x10043cdd
1004f7d9:	add    esp,0x4
1004f7dc:	mov    ebx,eax
1004f7de:	mov    DWORD PTR [ebp-0x24],ebx
1004f7e1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004f7e8:	jmp    0x1004f805
1004f7ea:	mov    eax,0x1
1004f7ef:	ret    
1004f7f0:	mov    esp,DWORD PTR [ebp-0x18]
1004f7f3:	xor    ebx,ebx
1004f7f5:	mov    DWORD PTR [ebp-0x24],ebx
1004f7f8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1004f7ff:	mov    edi,DWORD PTR [ebp-0x20]
1004f802:	mov    esi,DWORD PTR [ebp-0x28]
1004f805:	test   ebx,ebx
1004f807:	jne    0x1004f817
1004f809:	push   0x8007000e
1004f80e:	call   0x1004fa00
1004f813:	xor    eax,eax
1004f815:	jmp    0x1004f870
1004f817:	push   esi
1004f818:	push   ebx
1004f819:	push   edi
1004f81a:	mov    ecx,DWORD PTR [ebp+0x8]
1004f81d:	push   ecx
1004f81e:	push   0x0
1004f820:	push   0x0
1004f822:	call   DWORD PTR ds:0x1006508c
1004f828:	test   eax,eax
1004f82a:	jne    0x1004f846
1004f82c:	cmp    esi,0x1000
1004f832:	jl     0x1004f775
1004f838:	push   ebx
1004f839:	call   0x10042408
1004f83e:	add    esp,0x4
1004f841:	jmp    0x1004f775
1004f846:	push   ebx
1004f847:	call   DWORD PTR ds:0x100652b0
1004f84d:	mov    edi,eax
1004f84f:	cmp    esi,0x1000
1004f855:	jl     0x1004f860
1004f857:	push   ebx
1004f858:	call   0x10042408
1004f85d:	add    esp,0x4
1004f860:	test   edi,edi
1004f862:	jne    0x1004f86e
1004f864:	push   0x8007000e
1004f869:	call   0x1004fa00
1004f86e:	mov    eax,edi
1004f870:	lea    esp,[ebp-0x38]
1004f873:	mov    ecx,DWORD PTR [ebp-0x10]
1004f876:	mov    DWORD PTR fs:0x0,ecx
1004f87d:	pop    ecx
1004f87e:	pop    edi
1004f87f:	pop    esi
1004f880:	pop    ebx
1004f881:	mov    ecx,DWORD PTR [ebp-0x1c]
1004f884:	xor    ecx,ebp
1004f886:	call   0x10041d97
1004f88b:	mov    esp,ebp
1004f88d:	pop    ebp
1004f88e:	ret    0x4
1004f891:	int3   
1004f892:	int3   
1004f893:	int3   
1004f894:	int3   
1004f895:	int3   
1004f896:	int3   
1004f897:	int3   
1004f898:	int3   
1004f899:	int3   
1004f89a:	int3   
1004f89b:	int3   
1004f89c:	int3   
1004f89d:	int3   
1004f89e:	int3   
1004f89f:	int3   
1004f8a0:	push   ebp
1004f8a1:	mov    ebp,esp
1004f8a3:	push   0xffffffff
1004f8a5:	push   0x1005e380
1004f8aa:	mov    eax,fs:0x0
1004f8b0:	push   eax
1004f8b1:	push   ecx
1004f8b2:	push   ebx
1004f8b3:	push   esi
1004f8b4:	push   edi
1004f8b5:	mov    eax,ds:0x1007d030
1004f8ba:	xor    eax,ebp
1004f8bc:	push   eax
1004f8bd:	lea    eax,[ebp-0xc]
1004f8c0:	mov    fs:0x0,eax
1004f8c6:	mov    DWORD PTR [ebp-0x10],esp
1004f8c9:	mov    edx,DWORD PTR [ebp+0x8]
1004f8cc:	test   edx,edx
1004f8ce:	je     0x1004f93d
1004f8d0:	mov    eax,edx
1004f8d2:	lea    esi,[eax+0x2]
1004f8d5:	mov    cx,WORD PTR [eax]
1004f8d8:	add    eax,0x2
1004f8db:	test   cx,cx
1004f8de:	jne    0x1004f8d5
1004f8e0:	push   0x0
1004f8e2:	push   0x0
1004f8e4:	push   0x0
1004f8e6:	sub    eax,esi
1004f8e8:	push   0x0
1004f8ea:	sar    eax,1
1004f8ec:	lea    edi,[eax+0x1]
1004f8ef:	push   edi
1004f8f0:	push   edx
1004f8f1:	push   0x0
1004f8f3:	push   0x0
1004f8f5:	call   DWORD PTR ds:0x100650dc
1004f8fb:	mov    esi,eax
1004f8fd:	test   esi,esi
1004f8ff:	jne    0x1004f953
1004f901:	mov    esi,DWORD PTR ds:0x100650c4
1004f907:	call   esi
1004f909:	test   eax,eax
1004f90b:	jg     0x1004f92b
1004f90d:	call   esi
1004f90f:	push   eax
1004f910:	call   0x1004fa00
1004f915:	xor    eax,eax
1004f917:	mov    ecx,DWORD PTR [ebp-0xc]
1004f91a:	mov    DWORD PTR fs:0x0,ecx
1004f921:	pop    ecx
1004f922:	pop    edi
1004f923:	pop    esi
1004f924:	pop    ebx
1004f925:	mov    esp,ebp
1004f927:	pop    ebp
1004f928:	ret    0x4
1004f92b:	call   esi
1004f92d:	and    eax,0xffff
1004f932:	or     eax,0x80070000
1004f937:	push   eax
1004f938:	call   0x1004fa00
1004f93d:	xor    eax,eax
1004f93f:	mov    ecx,DWORD PTR [ebp-0xc]
1004f942:	mov    DWORD PTR fs:0x0,ecx
1004f949:	pop    ecx
1004f94a:	pop    edi
1004f94b:	pop    esi
1004f94c:	pop    ebx
1004f94d:	mov    esp,ebp
1004f94f:	pop    ebp
1004f950:	ret    0x4
1004f953:	push   esi
1004f954:	mov    DWORD PTR [ebp-0x4],0x0
1004f95b:	call   0x1004239e
1004f960:	mov    ebx,eax
1004f962:	add    esp,0x4
1004f965:	test   ebx,ebx
1004f967:	mov    DWORD PTR [ebp-0x4],0xffffffff
1004f96e:	jne    0x1004f996
1004f970:	push   0x8007000e
1004f975:	call   0x1004fa00
1004f97a:	xor    eax,eax
1004f97c:	mov    ecx,DWORD PTR [ebp-0xc]
1004f97f:	mov    DWORD PTR fs:0x0,ecx
1004f986:	pop    ecx
1004f987:	pop    edi
1004f988:	pop    esi
1004f989:	pop    ebx
1004f98a:	mov    esp,ebp
1004f98c:	pop    ebp
1004f98d:	ret    0x4
1004f990:	mov    eax,0x1004f970
1004f995:	ret    
1004f996:	mov    eax,DWORD PTR [ebp+0x8]
1004f999:	push   0x0
1004f99b:	push   0x0
1004f99d:	push   esi
1004f99e:	push   ebx
1004f99f:	push   edi
1004f9a0:	push   eax
1004f9a1:	push   0x0
1004f9a3:	push   0x0
1004f9a5:	call   DWORD PTR ds:0x100650dc
1004f9ab:	test   eax,eax
1004f9ad:	jne    0x1004f9dc
1004f9af:	push   ebx
1004f9b0:	call   0x10041d92
1004f9b5:	mov    esi,DWORD PTR ds:0x100650c4
1004f9bb:	add    esp,0x4
1004f9be:	xor    ebx,ebx
1004f9c0:	call   esi
1004f9c2:	test   eax,eax
1004f9c4:	jg     0x1004f9ca
1004f9c6:	call   esi
1004f9c8:	jmp    0x1004f9d6
1004f9ca:	call   esi
1004f9cc:	and    eax,0xffff
1004f9d1:	or     eax,0x80070000
1004f9d6:	push   eax
1004f9d7:	call   0x1004fa00
1004f9dc:	mov    eax,ebx
1004f9de:	mov    ecx,DWORD PTR [ebp-0xc]
1004f9e1:	mov    DWORD PTR fs:0x0,ecx
1004f9e8:	pop    ecx
1004f9e9:	pop    edi
1004f9ea:	pop    esi
1004f9eb:	pop    ebx
1004f9ec:	mov    esp,ebp
1004f9ee:	pop    ebp
1004f9ef:	ret    0x4
1004f9f2:	int3   
1004f9f3:	int3   
1004f9f4:	int3   
1004f9f5:	int3   
1004f9f6:	int3   
1004f9f7:	int3   
1004f9f8:	int3   
1004f9f9:	int3   
1004f9fa:	int3   
1004f9fb:	int3   
1004f9fc:	int3   
1004f9fd:	int3   
1004f9fe:	int3   
1004f9ff:	int3   
1004fa00:	mov    eax,DWORD PTR [esp+0x4]
1004fa04:	push   0x0
1004fa06:	push   eax
1004fa07:	call   DWORD PTR ds:0x1007df88
1004fa0d:	ret    0x4
1004fa10:	push   esi
1004fa11:	mov    esi,ecx
1004fa13:	mov    eax,DWORD PTR [esi+0x8]
1004fa16:	test   eax,eax
1004fa18:	mov    DWORD PTR [esi],0x10066eb8
1004fa1e:	je     0x1004fa28
1004fa20:	mov    ecx,DWORD PTR [eax]
1004fa22:	mov    edx,DWORD PTR [ecx+0x8]
1004fa25:	push   eax
1004fa26:	call   edx
1004fa28:	mov    esi,DWORD PTR [esi+0xc]
1004fa2b:	test   esi,esi
1004fa2d:	je     0x1004fa36
1004fa2f:	push   esi
1004fa30:	call   DWORD PTR ds:0x10065270
1004fa36:	pop    esi
1004fa37:	ret    
1004fa38:	int3   
1004fa39:	int3   
1004fa3a:	int3   
1004fa3b:	int3   
1004fa3c:	int3   
1004fa3d:	int3   
1004fa3e:	int3   
1004fa3f:	int3   
1004fa40:	sub    esp,0x10
1004fa43:	mov    eax,DWORD PTR [esp+0x14]
1004fa47:	mov    ecx,DWORD PTR [esp+0x18]
1004fa4b:	push   0x100735ac
1004fa50:	lea    edx,[esp+0x4]
1004fa54:	push   edx
1004fa55:	mov    DWORD PTR [esp+0x8],0x10066eb8
1004fa5d:	mov    DWORD PTR [esp+0xc],eax
1004fa61:	mov    DWORD PTR [esp+0x10],ecx
1004fa65:	mov    DWORD PTR [esp+0x14],0x0
1004fa6d:	call   0x10046704
1004fa72:	int3   
1004fa73:	int3   
1004fa74:	int3   
1004fa75:	int3   
1004fa76:	int3   
1004fa77:	int3   
1004fa78:	int3   
1004fa79:	int3   
1004fa7a:	int3   
1004fa7b:	int3   
1004fa7c:	int3   
1004fa7d:	int3   
1004fa7e:	int3   
1004fa7f:	int3   
1004fa80:	mov    eax,DWORD PTR [esp+0x4]
1004fa84:	push   esi
1004fa85:	mov    esi,ecx
1004fa87:	mov    DWORD PTR [esi],0x10066eb8
1004fa8d:	mov    ecx,DWORD PTR [eax+0x4]
1004fa90:	mov    DWORD PTR [esi+0x4],ecx
1004fa93:	mov    edx,DWORD PTR [eax+0x8]
1004fa96:	mov    eax,edx
1004fa98:	test   eax,eax
1004fa9a:	mov    DWORD PTR [esi+0x8],edx
1004fa9d:	mov    DWORD PTR [esi+0xc],0x0
1004faa4:	je     0x1004faae
1004faa6:	mov    ecx,DWORD PTR [eax]
1004faa8:	mov    edx,DWORD PTR [ecx+0x4]
1004faab:	push   eax
1004faac:	call   edx
1004faae:	mov    eax,esi
1004fab0:	pop    esi
1004fab1:	ret    0x4
1004fab4:	int3   
1004fab5:	int3   
1004fab6:	int3   
1004fab7:	int3   
1004fab8:	int3   
1004fab9:	int3   
1004faba:	int3   
1004fabb:	int3   
1004fabc:	int3   
1004fabd:	int3   
1004fabe:	int3   
1004fabf:	int3   
1004fac0:	push   esi
1004fac1:	mov    esi,ecx
1004fac3:	mov    eax,DWORD PTR [esi+0x8]
1004fac6:	test   eax,eax
1004fac8:	mov    DWORD PTR [esi],0x10066eb8
1004face:	je     0x1004fad8
1004fad0:	mov    ecx,DWORD PTR [eax]
1004fad2:	mov    edx,DWORD PTR [ecx+0x8]
1004fad5:	push   eax
1004fad6:	call   edx
1004fad8:	mov    eax,DWORD PTR [esi+0xc]
1004fadb:	test   eax,eax
1004fadd:	je     0x1004fae6
1004fadf:	push   eax
1004fae0:	call   DWORD PTR ds:0x10065270
1004fae6:	test   BYTE PTR [esp+0x8],0x1
1004faeb:	je     0x1004faf6
1004faed:	push   esi
1004faee:	call   0x10041d92
1004faf3:	add    esp,0x4
1004faf6:	mov    eax,esi
1004faf8:	pop    esi
1004faf9:	ret    0x4
1004fafc:	jmp    DWORD PTR ds:0x100653c4
1004fb02:	mov    eax,DWORD PTR [esp+0x4]
1004fb06:	test   eax,eax
1004fb08:	mov    DWORD PTR ds:0x1007f538,0x1
1004fb12:	mov    DWORD PTR ds:0x1007f53c,0x98
1004fb1c:	jne    0x1004fb23
1004fb1e:	mov    eax,0x10066ebc
1004fb23:	push   eax
1004fb24:	call   0x1004fd7b
1004fb29:	test   eax,eax
1004fb2b:	pop    ecx
1004fb2c:	jne    0x1004fb34
1004fb2e:	mov    eax,0x80004005
1004fb33:	ret    
1004fb34:	push   ebx
1004fb35:	push   esi
1004fb36:	push   edi
1004fb37:	push   0x0
1004fb39:	mov    esi,0x1007f538
1004fb3e:	push   esi
1004fb3f:	call   eax
1004fb41:	mov    ebx,eax
1004fb43:	mov    edi,0x80000000
1004fb48:	test   edi,ebx
1004fb4a:	pop    ecx
1004fb4b:	pop    ecx
1004fb4c:	je     0x1004fb57
1004fb4e:	call   0x1004fd3b
1004fb53:	mov    eax,ebx
1004fb55:	jmp    0x1004fb76
1004fb57:	call   0x1004fce1
1004fb5c:	mov    ebx,eax
1004fb5e:	test   edi,ebx
1004fb60:	je     0x1004fb74
1004fb62:	push   0x98
1004fb67:	push   0x0
1004fb69:	push   esi
1004fb6a:	call   0x10044950
1004fb6f:	add    esp,0xc
1004fb72:	jmp    0x1004fb4e
1004fb74:	xor    eax,eax
1004fb76:	pop    edi
1004fb77:	pop    esi
1004fb78:	pop    ebx
1004fb79:	ret    
1004fb7a:	push   ebp
1004fb7b:	mov    ebp,esp
1004fb7d:	sub    esp,0x800
1004fb83:	push   edi
1004fb84:	push   DWORD PTR [ebp+0x8]
1004fb87:	lea    eax,[ebp-0x400]
1004fb8d:	push   0x10066ed4
1004fb92:	push   eax
1004fb93:	call   0x100572ef
1004fb98:	lea    eax,[ebp-0x400]
1004fb9e:	push   0x10066ed0
1004fba3:	push   eax
1004fba4:	call   0x10057aac
1004fba9:	mov    edi,eax
1004fbab:	add    esp,0x14
1004fbae:	test   edi,edi
1004fbb0:	je     0x1004fc29
1004fbb2:	push   esi
1004fbb3:	mov    esi,0x400
1004fbb8:	jmp    0x1004fc0c
1004fbba:	lea    eax,[ebp-0x400]
1004fbc0:	push   eax
1004fbc1:	call   0x10041f10
1004fbc6:	test   eax,eax
1004fbc8:	pop    ecx
1004fbc9:	je     0x1004fc0c
1004fbcb:	cmp    BYTE PTR [ebp-0x400],0x23
1004fbd2:	je     0x1004fc0c
1004fbd4:	lea    eax,[ebp+eax*1-0x401]
1004fbdb:	cmp    BYTE PTR [eax],0xa
1004fbde:	jne    0x1004fbe3
1004fbe0:	mov    BYTE PTR [eax],0x0
1004fbe3:	lea    eax,[ebp-0x400]
1004fbe9:	push   eax
1004fbea:	push   DWORD PTR [ebp+0x8]
1004fbed:	lea    eax,[ebp-0x800]
1004fbf3:	push   0x10066ec8
1004fbf8:	push   esi
1004fbf9:	push   eax
1004fbfa:	call   0x1005852f
1004fbff:	lea    eax,[ebp-0x800]
1004fc05:	push   eax
1004fc06:	call   DWORD PTR [ebp+0xc]
1004fc09:	add    esp,0x18
1004fc0c:	push   edi
1004fc0d:	lea    eax,[ebp-0x400]
1004fc13:	push   esi
1004fc14:	push   eax
1004fc15:	call   0x100583a8
1004fc1a:	add    esp,0xc
1004fc1d:	test   eax,eax
1004fc1f:	jne    0x1004fbba
1004fc21:	push   edi
1004fc22:	call   0x1004f400
1004fc27:	pop    ecx
1004fc28:	pop    esi
1004fc29:	pop    edi
1004fc2a:	leave  
1004fc2b:	ret    
1004fc2c:	mov    eax,ds:0x1007f54c
1004fc31:	test   eax,eax
1004fc33:	jne    0x1004fc3b
1004fc35:	mov    eax,0xc1f30001
1004fc3a:	ret    
1004fc3b:	jmp    eax
1004fc3d:	mov    eax,ds:0x1007f568
1004fc42:	test   eax,eax
1004fc44:	jne    0x1004fc4c
1004fc46:	mov    eax,0xc1f30001
1004fc4b:	ret    
1004fc4c:	jmp    eax
1004fc4e:	mov    eax,ds:0x1007f570
1004fc53:	test   eax,eax
1004fc55:	jne    0x1004fc5d
1004fc57:	mov    eax,0xc1f30001
1004fc5c:	ret    
1004fc5d:	jmp    eax
1004fc5f:	mov    eax,ds:0x1007f574
1004fc64:	test   eax,eax
1004fc66:	je     0x1004fc6a
1004fc68:	jmp    eax
1004fc6a:	ret    
1004fc6b:	mov    eax,ds:0x1007f578
1004fc70:	test   eax,eax
1004fc72:	jne    0x1004fc7e
1004fc74:	mov    eax,DWORD PTR [esp+0x8]
1004fc78:	and    DWORD PTR [eax],0x0
1004fc7b:	xor    eax,eax
1004fc7d:	ret    
1004fc7e:	jmp    eax
1004fc80:	mov    eax,ds:0x1007f57c
1004fc85:	test   eax,eax
1004fc87:	jne    0x1004fc8f
1004fc89:	mov    eax,0xc1f30001
1004fc8e:	ret    
1004fc8f:	jmp    eax
1004fc91:	mov    eax,ds:0x1007f588
1004fc96:	test   eax,eax
1004fc98:	jne    0x1004fca0
1004fc9a:	mov    eax,0xc1f30001
1004fc9f:	ret    
1004fca0:	jmp    eax
1004fca2:	mov    eax,ds:0x1007f58c
1004fca7:	test   eax,eax
1004fca9:	je     0x1004fcad
1004fcab:	jmp    eax
1004fcad:	ret    
1004fcae:	mov    eax,ds:0x1007f590
1004fcb3:	test   eax,eax
1004fcb5:	jne    0x1004fcc1
1004fcb7:	mov    eax,DWORD PTR [esp+0x8]
1004fcbb:	and    DWORD PTR [eax],0x0
1004fcbe:	xor    eax,eax
1004fcc0:	ret    
1004fcc1:	jmp    eax
1004fcc3:	mov    eax,ds:0x1007f594
1004fcc8:	test   eax,eax
1004fcca:	jne    0x1004fcd2
1004fccc:	mov    eax,0xc1f30001
1004fcd1:	ret    
1004fcd2:	jmp    eax
1004fcd4:	mov    eax,DWORD PTR [ecx]
1004fcd6:	test   eax,eax
1004fcd8:	je     0x1004fce0
1004fcda:	mov    ecx,DWORD PTR [eax]
1004fcdc:	push   eax
1004fcdd:	call   DWORD PTR [ecx+0x8]
1004fce0:	ret    
1004fce1:	push   0x1007f5d0
1004fce6:	call   0x1004fc3d
1004fceb:	mov    eax,ds:0x1007f5d0
1004fcf0:	neg    eax
1004fcf2:	sbb    eax,eax
1004fcf4:	and    eax,0x7fffbffb
1004fcf9:	pop    ecx
1004fcfa:	add    eax,0x80004005
1004fcff:	ret    
1004fd00:	push   0x8
1004fd02:	call   0x1004239e
1004fd07:	test   eax,eax
1004fd09:	pop    ecx
1004fd0a:	je     0x1004fd20
1004fd0c:	mov    ecx,DWORD PTR ds:0x1007f5d8
1004fd12:	mov    DWORD PTR [eax+0x4],ecx
1004fd15:	mov    ecx,DWORD PTR [esp+0x4]
1004fd19:	mov    DWORD PTR [eax],ecx
1004fd1b:	mov    ds:0x1007f5d8,eax
1004fd20:	ret    
1004fd21:	push   0x8
1004fd23:	push   0x0
1004fd25:	push   DWORD PTR [esp+0xc]
1004fd29:	call   DWORD PTR ds:0x10065064
1004fd2f:	test   eax,eax
1004fd31:	je     0x1004fd3a
1004fd33:	push   eax
1004fd34:	call   0x1004fd00
1004fd39:	pop    ecx
1004fd3a:	ret    
1004fd3b:	push   esi
1004fd3c:	mov    esi,DWORD PTR ds:0x100650fc
1004fd42:	jmp    0x1004fd5d
1004fd44:	push   DWORD PTR [eax]
1004fd46:	call   esi
1004fd48:	mov    eax,ds:0x1007f5d8
1004fd4d:	mov    ecx,DWORD PTR [eax+0x4]
1004fd50:	push   eax
1004fd51:	mov    DWORD PTR ds:0x1007f5d8,ecx
1004fd57:	call   0x10041d92
1004fd5c:	pop    ecx
1004fd5d:	mov    eax,ds:0x1007f5d8
1004fd62:	test   eax,eax
1004fd64:	jne    0x1004fd44
1004fd66:	mov    eax,ds:0x1007f5d4
1004fd6b:	test   eax,eax
1004fd6d:	je     0x1004fd79
1004fd6f:	push   eax
1004fd70:	call   esi
1004fd72:	and    DWORD PTR ds:0x1007f5d4,0x0
1004fd79:	pop    esi
1004fd7a:	ret    
1004fd7b:	push   ebp
1004fd7c:	mov    ebp,esp
1004fd7e:	sub    esp,0x404
1004fd84:	mov    eax,DWORD PTR [ebp+0x8]
1004fd87:	cmp    BYTE PTR [eax],0x2e
1004fd8a:	push   ebx
1004fd8b:	mov    ebx,DWORD PTR ds:0x10065064
1004fd91:	push   esi
1004fd92:	jne    0x1004fda6
1004fd94:	cmp    BYTE PTR [eax+0x1],0x0
1004fd98:	jne    0x1004fda6
1004fd9a:	mov    DWORD PTR [ebp+0x8],0x10066ebc
1004fda1:	jmp    0x1004fe3b
1004fda6:	push   edi
1004fda7:	mov    esi,0x400
1004fdac:	push   esi
1004fdad:	push   eax
1004fdae:	lea    eax,[ebp-0x404]
1004fdb4:	push   eax
1004fdb5:	call   0x1005873d
1004fdba:	mov    dl,BYTE PTR [ebp-0x404]
1004fdc0:	add    esp,0xc
1004fdc3:	xor    edi,edi
1004fdc5:	test   dl,dl
1004fdc7:	lea    eax,[ebp-0x404]
1004fdcd:	je     0x1004fe3a
1004fdcf:	mov    DWORD PTR [ebp-0x4],0x10066f10
1004fdd6:	mov    cl,0x2f
1004fdd8:	cmp    cl,dl
1004fdda:	jne    0x1004fdde
1004fddc:	mov    edi,eax
1004fdde:	inc    DWORD PTR [ebp-0x4]
1004fde1:	mov    ecx,DWORD PTR [ebp-0x4]
1004fde4:	mov    cl,BYTE PTR [ecx]
1004fde6:	test   cl,cl
1004fde8:	jne    0x1004fdd8
1004fdea:	inc    eax
1004fdeb:	mov    dl,BYTE PTR [eax]
1004fded:	test   dl,dl
1004fdef:	jne    0x1004fdcf
1004fdf1:	test   edi,edi
1004fdf3:	je     0x1004fe3a
1004fdf5:	lea    eax,[ebp-0x404]
1004fdfb:	push   0x1004fd21
1004fe00:	push   eax
1004fe01:	mov    BYTE PTR [edi],dl
1004fe03:	call   0x1004fb7a
1004fe08:	pop    ecx
1004fe09:	pop    ecx
1004fe0a:	lea    eax,[ebp-0x404]
1004fe10:	push   0x10066f04
1004fe15:	push   eax
1004fe16:	call   0x10041f10
1004fe1b:	pop    ecx
1004fe1c:	sub    esi,eax
1004fe1e:	push   esi
1004fe1f:	push   edi
1004fe20:	call   0x1005852f
1004fe25:	add    esp,0xc
1004fe28:	push   0x8
1004fe2a:	push   0x0
1004fe2c:	lea    eax,[ebp-0x404]
1004fe32:	push   eax
1004fe33:	call   ebx
1004fe35:	mov    ds:0x1007f5d4,eax
1004fe3a:	pop    edi
1004fe3b:	push   0x8
1004fe3d:	push   0x0
1004fe3f:	push   DWORD PTR [ebp+0x8]
1004fe42:	call   ebx
1004fe44:	mov    esi,eax
1004fe46:	test   esi,esi
1004fe48:	je     0x1004fe6b
1004fe4a:	push   esi
1004fe4b:	call   0x1004fd00
1004fe50:	mov    DWORD PTR [esp],0x10066eec
1004fe57:	push   esi
1004fe58:	call   DWORD PTR ds:0x1006512c
1004fe5e:	mov    esi,eax
1004fe60:	test   esi,esi
1004fe62:	jne    0x1004fe69
1004fe64:	call   0x1004fd3b
1004fe69:	mov    eax,esi
1004fe6b:	pop    esi
1004fe6c:	pop    ebx
1004fe6d:	leave  
1004fe6e:	ret    
1004fe6f:	int3   
1004fe70:	push   esi
1004fe71:	mov    esi,DWORD PTR [eax+0x8]
1004fe74:	push   edi
1004fe75:	mov    edi,DWORD PTR [eax+0x14]
1004fe78:	mov    edx,ecx
1004fe7a:	shr    edx,0x8
1004fe7d:	mov    BYTE PTR [esi+edi*1],dl
1004fe80:	mov    edi,DWORD PTR [eax+0x8]
1004fe83:	mov    esi,0x1
1004fe88:	add    DWORD PTR [eax+0x14],esi
1004fe8b:	mov    edx,DWORD PTR [eax+0x14]
1004fe8e:	mov    BYTE PTR [edx+edi*1],cl
1004fe91:	add    DWORD PTR [eax+0x14],esi
1004fe94:	pop    edi
1004fe95:	pop    esi
1004fe96:	ret    
1004fe97:	int3   
1004fe98:	int3   
1004fe99:	int3   
1004fe9a:	int3   
1004fe9b:	int3   
1004fe9c:	int3   
1004fe9d:	int3   
1004fe9e:	int3   
1004fe9f:	int3   
1004fea0:	push   esi
1004fea1:	mov    esi,eax
1004fea3:	mov    eax,DWORD PTR [esi+0x1c]
1004fea6:	mov    ecx,DWORD PTR [esi+0x10]
1004fea9:	push   edi
1004feaa:	mov    edi,DWORD PTR [eax+0x14]
1004fead:	cmp    edi,ecx
1004feaf:	jbe    0x1004feb3
1004feb1:	mov    edi,ecx
1004feb3:	test   edi,edi
1004feb5:	je     0x1004feec
1004feb7:	mov    eax,DWORD PTR [eax+0x10]
1004feba:	mov    ecx,DWORD PTR [esi+0xc]
1004febd:	push   edi
1004febe:	push   eax
1004febf:	push   ecx
1004fec0:	call   0x10043ed0
1004fec5:	mov    eax,DWORD PTR [esi+0x1c]
1004fec8:	add    DWORD PTR [esi+0xc],edi
1004fecb:	add    DWORD PTR [eax+0x10],edi
1004fece:	add    DWORD PTR [esi+0x14],edi
1004fed1:	sub    DWORD PTR [esi+0x10],edi
1004fed4:	mov    eax,DWORD PTR [esi+0x1c]
1004fed7:	sub    DWORD PTR [eax+0x14],edi
1004feda:	mov    esi,DWORD PTR [esi+0x1c]
1004fedd:	add    esp,0xc
1004fee0:	cmp    DWORD PTR [esi+0x14],0x0
1004fee4:	jne    0x1004feec
1004fee6:	mov    edx,DWORD PTR [esi+0x8]
1004fee9:	mov    DWORD PTR [esi+0x10],edx
1004feec:	pop    edi
1004feed:	pop    esi
1004feee:	ret    
1004feef:	int3   
1004fef0:	push   esi
1004fef1:	push   edi
1004fef2:	mov    edi,DWORD PTR [esp+0xc]
1004fef6:	test   edi,edi
1004fef8:	je     0x100506c6
1004fefe:	mov    esi,DWORD PTR [edi+0x1c]
1004ff01:	test   esi,esi
1004ff03:	je     0x100506c6
1004ff09:	mov    ecx,DWORD PTR [esp+0x10]
1004ff0d:	cmp    ecx,0x4
1004ff10:	ja     0x100506c6
1004ff16:	cmp    DWORD PTR [edi+0xc],0x0
1004ff1a:	je     0x100506be
1004ff20:	cmp    DWORD PTR [edi],0x0
1004ff23:	jne    0x1004ff2f
1004ff25:	cmp    DWORD PTR [edi+0x4],0x0
1004ff29:	jne    0x100506be
1004ff2f:	mov    eax,DWORD PTR [esi+0x4]
1004ff32:	cmp    eax,0x29a
1004ff37:	jne    0x1004ff42
1004ff39:	cmp    ecx,0x4
1004ff3c:	jne    0x100506be
1004ff42:	cmp    DWORD PTR [edi+0x10],0x0
1004ff46:	jne    0x1004ff58
1004ff48:	mov    eax,ds:0x1006a50c
1004ff4d:	mov    DWORD PTR [edi+0x18],eax
1004ff50:	pop    edi
1004ff51:	mov    eax,0xfffffffb
1004ff56:	pop    esi
1004ff57:	ret    
1004ff58:	cmp    eax,0x2a
1004ff5b:	mov    edx,DWORD PTR [esi+0x28]
1004ff5e:	push   ebx
1004ff5f:	push   ebp
1004ff60:	mov    DWORD PTR [esi],edi
1004ff62:	mov    DWORD PTR [esp+0x14],edx
1004ff66:	mov    DWORD PTR [esi+0x28],ecx
1004ff69:	mov    ebx,0x1
1004ff6e:	jne    0x10050218
1004ff74:	mov    eax,0x2
1004ff79:	cmp    DWORD PTR [esi+0x18],eax
1004ff7c:	jne    0x10050182
1004ff82:	push   0x0
1004ff84:	push   0x0
1004ff86:	push   0x0
1004ff88:	call   0x10054f40
1004ff8d:	mov    DWORD PTR [edi+0x30],eax
1004ff90:	mov    ecx,DWORD PTR [esi+0x14]
1004ff93:	mov    eax,DWORD PTR [esi+0x8]
1004ff96:	mov    BYTE PTR [eax+ecx*1],0x1f
1004ff9a:	add    DWORD PTR [esi+0x14],ebx
1004ff9d:	mov    eax,DWORD PTR [esi+0x14]
1004ffa0:	mov    edx,DWORD PTR [esi+0x8]
1004ffa3:	mov    BYTE PTR [eax+edx*1],0x8b
1004ffa7:	add    DWORD PTR [esi+0x14],ebx
1004ffaa:	mov    eax,DWORD PTR [esi+0x14]
1004ffad:	mov    ecx,DWORD PTR [esi+0x8]
1004ffb0:	mov    BYTE PTR [eax+ecx*1],0x8
1004ffb4:	add    DWORD PTR [esi+0x14],ebx
1004ffb7:	mov    eax,DWORD PTR [esi+0x1c]
1004ffba:	mov    ebp,DWORD PTR [esi+0x14]
1004ffbd:	add    esp,0xc
1004ffc0:	test   eax,eax
1004ffc2:	jne    0x10050053
1004ffc8:	mov    edx,DWORD PTR [esi+0x8]
1004ffcb:	mov    BYTE PTR [edx+ebp*1],al
1004ffce:	add    DWORD PTR [esi+0x14],ebx
1004ffd1:	mov    eax,DWORD PTR [esi+0x14]
1004ffd4:	mov    ecx,DWORD PTR [esi+0x8]
1004ffd7:	mov    BYTE PTR [eax+ecx*1],0x0
1004ffdb:	add    DWORD PTR [esi+0x14],ebx
1004ffde:	mov    eax,DWORD PTR [esi+0x14]
1004ffe1:	mov    edx,DWORD PTR [esi+0x8]
1004ffe4:	mov    BYTE PTR [eax+edx*1],0x0
1004ffe8:	add    DWORD PTR [esi+0x14],ebx
1004ffeb:	mov    eax,DWORD PTR [esi+0x14]
1004ffee:	mov    ecx,DWORD PTR [esi+0x8]
1004fff1:	mov    BYTE PTR [eax+ecx*1],0x0
1004fff5:	add    DWORD PTR [esi+0x14],ebx
1004fff8:	mov    eax,DWORD PTR [esi+0x14]
1004fffb:	mov    edx,DWORD PTR [esi+0x8]
1004fffe:	mov    BYTE PTR [eax+edx*1],0x0
10050002:	add    DWORD PTR [esi+0x14],ebx
10050005:	mov    eax,DWORD PTR [esi+0x84]
1005000b:	cmp    eax,0x9
1005000e:	mov    ecx,DWORD PTR [esi+0x14]
10050011:	jne    0x1005001a
10050013:	mov    eax,0x2
10050018:	jmp    0x10050031
1005001a:	cmp    DWORD PTR [esi+0x88],0x2
10050021:	jge    0x1005002c
10050023:	cmp    eax,0x2
10050026:	jl     0x1005002c
10050028:	xor    eax,eax
1005002a:	jmp    0x10050031
1005002c:	mov    eax,0x4
10050031:	mov    edx,DWORD PTR [esi+0x8]
10050034:	mov    BYTE PTR [ecx+edx*1],al
10050037:	add    DWORD PTR [esi+0x14],ebx
1005003a:	mov    eax,DWORD PTR [esi+0x14]
1005003d:	mov    ecx,DWORD PTR [esi+0x8]
10050040:	mov    BYTE PTR [eax+ecx*1],0xb
10050044:	add    DWORD PTR [esi+0x14],ebx
10050047:	mov    DWORD PTR [esi+0x4],0x71
1005004e:	jmp    0x10050218
10050053:	mov    edx,DWORD PTR [eax+0x24]
10050056:	mov    ecx,DWORD PTR [eax+0x2c]
10050059:	neg    edx
1005005b:	sbb    dl,dl
1005005d:	and    edx,0x10
10050060:	neg    ecx
10050062:	sbb    cl,cl
10050064:	and    ecx,0x2
10050067:	add    dl,cl
10050069:	mov    ecx,DWORD PTR [eax+0x1c]
1005006c:	neg    ecx
1005006e:	sbb    cl,cl
10050070:	and    ecx,0x8
10050073:	add    dl,cl
10050075:	mov    ecx,DWORD PTR [eax+0x10]
10050078:	neg    ecx
1005007a:	sbb    cl,cl
1005007c:	and    ecx,0x4
1005007f:	add    dl,cl
10050081:	cmp    DWORD PTR [eax],0x0
10050084:	mov    ecx,DWORD PTR [esi+0x8]
10050087:	setne  al
1005008a:	add    dl,al
1005008c:	mov    BYTE PTR [ecx+ebp*1],dl
1005008f:	add    DWORD PTR [esi+0x14],ebx
10050092:	mov    eax,DWORD PTR [esi+0x14]
10050095:	mov    edx,DWORD PTR [esi+0x1c]
10050098:	movzx  edx,BYTE PTR [edx+0x4]
1005009c:	mov    ecx,DWORD PTR [esi+0x8]
1005009f:	mov    BYTE PTR [eax+ecx*1],dl
100500a2:	add    DWORD PTR [esi+0x14],ebx
100500a5:	mov    ecx,DWORD PTR [esi+0x1c]
100500a8:	movzx  ecx,BYTE PTR [ecx+0x5]
100500ac:	mov    eax,DWORD PTR [esi+0x14]
100500af:	mov    edx,DWORD PTR [esi+0x8]
100500b2:	mov    BYTE PTR [eax+edx*1],cl
100500b5:	add    DWORD PTR [esi+0x14],ebx
100500b8:	mov    edx,DWORD PTR [esi+0x1c]
100500bb:	movzx  edx,BYTE PTR [edx+0x6]
100500bf:	mov    eax,DWORD PTR [esi+0x14]
100500c2:	mov    ecx,DWORD PTR [esi+0x8]
100500c5:	mov    BYTE PTR [eax+ecx*1],dl
100500c8:	add    DWORD PTR [esi+0x14],ebx
100500cb:	mov    ecx,DWORD PTR [esi+0x1c]
100500ce:	movzx  ecx,BYTE PTR [ecx+0x7]
100500d2:	mov    eax,DWORD PTR [esi+0x14]
100500d5:	mov    edx,DWORD PTR [esi+0x8]
100500d8:	mov    BYTE PTR [eax+edx*1],cl
100500db:	add    DWORD PTR [esi+0x14],ebx
100500de:	mov    eax,DWORD PTR [esi+0x84]
100500e4:	cmp    eax,0x9
100500e7:	mov    ecx,DWORD PTR [esi+0x14]
100500ea:	jne    0x100500f3
100500ec:	mov    eax,0x2
100500f1:	jmp    0x1005010a
100500f3:	cmp    DWORD PTR [esi+0x88],0x2
100500fa:	jge    0x10050105
100500fc:	cmp    eax,0x2
100500ff:	jl     0x10050105
10050101:	xor    eax,eax
10050103:	jmp    0x1005010a
10050105:	mov    eax,0x4
1005010a:	mov    edx,DWORD PTR [esi+0x8]
1005010d:	mov    BYTE PTR [ecx+edx*1],al
10050110:	add    DWORD PTR [esi+0x14],ebx
10050113:	mov    ecx,DWORD PTR [esi+0x1c]
10050116:	mov    eax,DWORD PTR [esi+0x14]
10050119:	mov    cl,BYTE PTR [ecx+0xc]
1005011c:	mov    edx,DWORD PTR [esi+0x8]
1005011f:	mov    BYTE PTR [eax+edx*1],cl
10050122:	add    DWORD PTR [esi+0x14],ebx
10050125:	mov    eax,DWORD PTR [esi+0x1c]
10050128:	cmp    DWORD PTR [eax+0x10],0x0
1005012c:	mov    ecx,DWORD PTR [esi+0x14]
1005012f:	je     0x10050152
10050131:	mov    al,BYTE PTR [eax+0x14]
10050134:	mov    edx,DWORD PTR [esi+0x8]
10050137:	mov    BYTE PTR [ecx+edx*1],al
1005013a:	add    DWORD PTR [esi+0x14],ebx
1005013d:	mov    ecx,DWORD PTR [esi+0x1c]
10050140:	mov    cl,BYTE PTR [ecx+0x15]
10050143:	mov    eax,DWORD PTR [esi+0x14]
10050146:	mov    edx,DWORD PTR [esi+0x8]
10050149:	mov    BYTE PTR [eax+edx*1],cl
1005014c:	add    DWORD PTR [esi+0x14],ebx
1005014f:	mov    ecx,DWORD PTR [esi+0x14]
10050152:	mov    edx,DWORD PTR [esi+0x1c]
10050155:	cmp    DWORD PTR [edx+0x2c],0x0
10050159:	je     0x1005016f
1005015b:	mov    eax,DWORD PTR [esi+0x8]
1005015e:	push   ecx
1005015f:	mov    ecx,DWORD PTR [edi+0x30]
10050162:	push   eax
10050163:	push   ecx
10050164:	call   0x10054f40
10050169:	add    esp,0xc
1005016c:	mov    DWORD PTR [edi+0x30],eax
1005016f:	mov    DWORD PTR [esi+0x20],0x0
10050176:	mov    DWORD PTR [esi+0x4],0x45
1005017d:	jmp    0x10050218
10050182:	mov    ecx,DWORD PTR [esi+0x30]
10050185:	sub    ecx,0x8
10050188:	shl    ecx,0xc
1005018b:	add    ecx,0x800
10050191:	cmp    DWORD PTR [esi+0x88],eax
10050197:	jge    0x100501b8
10050199:	mov    ebp,DWORD PTR [esi+0x84]
1005019f:	cmp    ebp,eax
100501a1:	jl     0x100501b8
100501a3:	cmp    ebp,0x6
100501a6:	jge    0x100501ac
100501a8:	mov    eax,ebx
100501aa:	jmp    0x100501ba
100501ac:	xor    edx,edx
100501ae:	cmp    ebp,0x6
100501b1:	setne  dl
100501b4:	add    eax,edx
100501b6:	jmp    0x100501ba
100501b8:	xor    eax,eax
100501ba:	shl    eax,0x6
100501bd:	or     ecx,eax
100501bf:	cmp    DWORD PTR [esi+0x6c],0x0
100501c3:	je     0x100501c8
100501c5:	or     ecx,0x20
100501c8:	mov    eax,0x8421085
100501cd:	mul    ecx
100501cf:	sub    ecx,edx
100501d1:	shr    ecx,1
100501d3:	add    ecx,edx
100501d5:	shr    ecx,0x4
100501d8:	add    ecx,ebx
100501da:	mov    eax,ecx
100501dc:	shl    ecx,0x5
100501df:	sub    ecx,eax
100501e1:	mov    eax,esi
100501e3:	mov    DWORD PTR [esi+0x4],0x71
100501ea:	call   0x1004fe70
100501ef:	cmp    DWORD PTR [esi+0x6c],0x0
100501f3:	je     0x10050207
100501f5:	movzx  ecx,WORD PTR [edi+0x32]
100501f9:	call   0x1004fe70
100501fe:	movzx  ecx,WORD PTR [edi+0x30]
10050202:	call   0x1004fe70
10050207:	push   0x0
10050209:	push   0x0
1005020b:	push   0x0
1005020d:	call   0x10052f60
10050212:	add    esp,0xc
10050215:	mov    DWORD PTR [edi+0x30],eax
10050218:	cmp    DWORD PTR [esi+0x4],0x45
1005021c:	jne    0x100502e8
10050222:	mov    eax,DWORD PTR [esi+0x1c]
10050225:	cmp    DWORD PTR [eax+0x10],0x0
10050229:	je     0x100502e1
1005022f:	movzx  eax,WORD PTR [eax+0x14]
10050233:	cmp    DWORD PTR [esi+0x20],eax
10050236:	mov    ecx,DWORD PTR [esi+0x14]
10050239:	jae    0x100502a7
1005023b:	jmp    0x10050240
1005023d:	lea    ecx,[ecx+0x0]
10050240:	mov    eax,DWORD PTR [esi+0x14]
10050243:	cmp    eax,DWORD PTR [esi+0xc]
10050246:	jne    0x1005027e
10050248:	mov    edx,DWORD PTR [esi+0x1c]
1005024b:	cmp    DWORD PTR [edx+0x2c],0x0
1005024f:	je     0x1005026d
10050251:	cmp    eax,ecx
10050253:	jbe    0x1005026d
10050255:	sub    eax,ecx
10050257:	push   eax
10050258:	mov    eax,DWORD PTR [esi+0x8]
1005025b:	add    eax,ecx
1005025d:	mov    ecx,DWORD PTR [edi+0x30]
10050260:	push   eax
10050261:	push   ecx
10050262:	call   0x10054f40
10050267:	add    esp,0xc
1005026a:	mov    DWORD PTR [edi+0x30],eax
1005026d:	mov    eax,edi
1005026f:	call   0x1004fea0
10050274:	mov    eax,DWORD PTR [esi+0x14]
10050277:	cmp    eax,DWORD PTR [esi+0xc]
1005027a:	mov    ecx,eax
1005027c:	je     0x100502a7
1005027e:	mov    edx,DWORD PTR [esi+0x1c]
10050281:	mov    edx,DWORD PTR [edx+0x10]
10050284:	mov    ebx,DWORD PTR [esi+0x20]
10050287:	mov    dl,BYTE PTR [edx+ebx*1]
1005028a:	mov    ebp,DWORD PTR [esi+0x8]
1005028d:	mov    BYTE PTR [eax+ebp*1],dl
10050290:	mov    eax,0x1
10050295:	add    DWORD PTR [esi+0x14],eax
10050298:	add    DWORD PTR [esi+0x20],eax
1005029b:	mov    eax,DWORD PTR [esi+0x1c]
1005029e:	movzx  edx,WORD PTR [eax+0x14]
100502a2:	cmp    DWORD PTR [esi+0x20],edx
100502a5:	jb     0x10050240
100502a7:	mov    eax,DWORD PTR [esi+0x1c]
100502aa:	cmp    DWORD PTR [eax+0x2c],0x0
100502ae:	je     0x100502cf
100502b0:	mov    eax,DWORD PTR [esi+0x14]
100502b3:	cmp    eax,ecx
100502b5:	jbe    0x100502cf
100502b7:	mov    edx,DWORD PTR [esi+0x8]
100502ba:	sub    eax,ecx
100502bc:	push   eax
100502bd:	mov    eax,DWORD PTR [edi+0x30]
100502c0:	add    edx,ecx
100502c2:	push   edx
100502c3:	push   eax
100502c4:	call   0x10054f40
100502c9:	add    esp,0xc
100502cc:	mov    DWORD PTR [edi+0x30],eax
100502cf:	mov    ecx,DWORD PTR [esi+0x1c]
100502d2:	mov    edx,DWORD PTR [esi+0x20]
100502d5:	cmp    edx,DWORD PTR [ecx+0x14]
100502d8:	jne    0x100502e8
100502da:	mov    DWORD PTR [esi+0x20],0x0
100502e1:	mov    DWORD PTR [esi+0x4],0x49
100502e8:	cmp    DWORD PTR [esi+0x4],0x49
100502ec:	mov    ebp,0x1
100502f1:	jne    0x1005039e
100502f7:	mov    eax,DWORD PTR [esi+0x1c]
100502fa:	cmp    DWORD PTR [eax+0x1c],0x0
100502fe:	je     0x10050397
10050304:	mov    edx,DWORD PTR [esi+0x14]
10050307:	mov    eax,DWORD PTR [esi+0x14]
1005030a:	cmp    eax,DWORD PTR [esi+0xc]
1005030d:	jne    0x10050345
1005030f:	mov    ecx,DWORD PTR [esi+0x1c]
10050312:	cmp    DWORD PTR [ecx+0x2c],0x0
10050316:	je     0x10050334
10050318:	cmp    eax,edx
1005031a:	jbe    0x10050334
1005031c:	mov    ecx,DWORD PTR [edi+0x30]
1005031f:	sub    eax,edx
10050321:	push   eax
10050322:	mov    eax,DWORD PTR [esi+0x8]
10050325:	add    eax,edx
10050327:	push   eax
10050328:	push   ecx
10050329:	call   0x10054f40
1005032e:	add    esp,0xc
10050331:	mov    DWORD PTR [edi+0x30],eax
10050334:	mov    eax,edi
10050336:	call   0x1004fea0
1005033b:	mov    eax,DWORD PTR [esi+0x14]
1005033e:	cmp    eax,DWORD PTR [esi+0xc]
10050341:	mov    edx,eax
10050343:	je     0x10050366
10050345:	mov    ecx,DWORD PTR [esi+0x20]
10050348:	mov    ebx,DWORD PTR [esi+0x1c]
1005034b:	mov    ebx,DWORD PTR [ebx+0x1c]
1005034e:	movzx  ebx,BYTE PTR [ebx+ecx*1]
10050352:	add    ecx,ebp
10050354:	mov    DWORD PTR [esi+0x20],ecx
10050357:	mov    ecx,DWORD PTR [esi+0x8]
1005035a:	mov    BYTE PTR [eax+ecx*1],bl
1005035d:	add    DWORD PTR [esi+0x14],ebp
10050360:	test   ebx,ebx
10050362:	jne    0x10050307
10050364:	jmp    0x10050368
10050366:	mov    ebx,ebp
10050368:	mov    eax,DWORD PTR [esi+0x1c]
1005036b:	cmp    DWORD PTR [eax+0x2c],0x0
1005036f:	je     0x10050390
10050371:	mov    eax,DWORD PTR [esi+0x14]
10050374:	cmp    eax,edx
10050376:	jbe    0x10050390
10050378:	mov    ecx,DWORD PTR [esi+0x8]
1005037b:	sub    eax,edx
1005037d:	push   eax
1005037e:	add    ecx,edx
10050380:	mov    edx,DWORD PTR [edi+0x30]
10050383:	push   ecx
10050384:	push   edx
10050385:	call   0x10054f40
1005038a:	add    esp,0xc
1005038d:	mov    DWORD PTR [edi+0x30],eax
10050390:	test   ebx,ebx
10050392:	jne    0x1005039e
10050394:	mov    DWORD PTR [esi+0x20],ebx
10050397:	mov    DWORD PTR [esi+0x4],0x5b
1005039e:	cmp    DWORD PTR [esi+0x4],0x5b
100503a2:	jne    0x1005044d
100503a8:	mov    eax,DWORD PTR [esi+0x1c]
100503ab:	cmp    DWORD PTR [eax+0x24],0x0
100503af:	je     0x10050446
100503b5:	mov    edx,DWORD PTR [esi+0x14]
100503b8:	mov    eax,DWORD PTR [esi+0x14]
100503bb:	cmp    eax,DWORD PTR [esi+0xc]
100503be:	jne    0x100503f6
100503c0:	mov    ecx,DWORD PTR [esi+0x1c]
100503c3:	cmp    DWORD PTR [ecx+0x2c],0x0
100503c7:	je     0x100503e5
100503c9:	cmp    eax,edx
100503cb:	jbe    0x100503e5
100503cd:	mov    ecx,DWORD PTR [edi+0x30]
100503d0:	sub    eax,edx
100503d2:	push   eax
100503d3:	mov    eax,DWORD PTR [esi+0x8]
100503d6:	add    eax,edx
100503d8:	push   eax
100503d9:	push   ecx
100503da:	call   0x10054f40
100503df:	add    esp,0xc
100503e2:	mov    DWORD PTR [edi+0x30],eax
100503e5:	mov    eax,edi
100503e7:	call   0x1004fea0
100503ec:	mov    eax,DWORD PTR [esi+0x14]
100503ef:	cmp    eax,DWORD PTR [esi+0xc]
100503f2:	mov    edx,eax
100503f4:	je     0x10050418
100503f6:	mov    ecx,DWORD PTR [esi+0x20]
100503f9:	mov    ebx,DWORD PTR [esi+0x1c]
100503fc:	mov    ebx,DWORD PTR [ebx+0x24]
100503ff:	movzx  ebx,BYTE PTR [ebx+ecx*1]
10050403:	add    ecx,0x1
10050406:	mov    DWORD PTR [esi+0x20],ecx
10050409:	mov    ecx,DWORD PTR [esi+0x8]
1005040c:	mov    BYTE PTR [eax+ecx*1],bl
1005040f:	add    DWORD PTR [esi+0x14],ebp
10050412:	test   ebx,ebx
10050414:	jne    0x100503b8
10050416:	jmp    0x1005041a
10050418:	mov    ebx,ebp
1005041a:	mov    eax,DWORD PTR [esi+0x1c]
1005041d:	cmp    DWORD PTR [eax+0x2c],0x0
10050421:	je     0x10050442
10050423:	mov    eax,DWORD PTR [esi+0x14]
10050426:	cmp    eax,edx
10050428:	jbe    0x10050442
1005042a:	mov    ecx,DWORD PTR [esi+0x8]
1005042d:	sub    eax,edx
1005042f:	push   eax
10050430:	add    ecx,edx
10050432:	mov    edx,DWORD PTR [edi+0x30]
10050435:	push   ecx
10050436:	push   edx
10050437:	call   0x10054f40
1005043c:	add    esp,0xc
1005043f:	mov    DWORD PTR [edi+0x30],eax
10050442:	test   ebx,ebx
10050444:	jne    0x1005044d
10050446:	mov    DWORD PTR [esi+0x4],0x67
1005044d:	cmp    DWORD PTR [esi+0x4],0x67
10050451:	jne    0x100504ae
10050453:	mov    eax,DWORD PTR [esi+0x1c]
10050456:	cmp    DWORD PTR [eax+0x2c],0x0
1005045a:	je     0x100504a7
1005045c:	mov    ecx,DWORD PTR [esi+0x14]
1005045f:	add    ecx,0x2
10050462:	cmp    ecx,DWORD PTR [esi+0xc]
10050465:	jbe    0x1005046e
10050467:	mov    eax,edi
10050469:	call   0x1004fea0
1005046e:	mov    eax,DWORD PTR [esi+0x14]
10050471:	lea    edx,[eax+0x2]
10050474:	cmp    edx,DWORD PTR [esi+0xc]
10050477:	ja     0x100504ae
10050479:	movzx  edx,BYTE PTR [edi+0x30]
1005047d:	mov    ecx,DWORD PTR [esi+0x8]
10050480:	mov    BYTE PTR [eax+ecx*1],dl
10050483:	add    DWORD PTR [esi+0x14],ebp
10050486:	movzx  edx,BYTE PTR [edi+0x31]
1005048a:	mov    eax,DWORD PTR [esi+0x14]
1005048d:	mov    ecx,DWORD PTR [esi+0x8]
10050490:	push   0x0
10050492:	push   0x0
10050494:	mov    BYTE PTR [eax+ecx*1],dl
10050497:	add    DWORD PTR [esi+0x14],ebp
1005049a:	push   0x0
1005049c:	call   0x10054f40
100504a1:	add    esp,0xc
100504a4:	mov    DWORD PTR [edi+0x30],eax
100504a7:	mov    DWORD PTR [esi+0x4],0x71
100504ae:	cmp    DWORD PTR [esi+0x14],0x0
100504b2:	je     0x100504cf
100504b4:	mov    eax,edi
100504b6:	call   0x1004fea0
100504bb:	cmp    DWORD PTR [edi+0x10],0x0
100504bf:	jne    0x100504f6
100504c1:	mov    DWORD PTR [esi+0x28],0xffffffff
100504c8:	pop    ebp
100504c9:	pop    ebx
100504ca:	pop    edi
100504cb:	xor    eax,eax
100504cd:	pop    esi
100504ce:	ret    
100504cf:	cmp    DWORD PTR [edi+0x4],0x0
100504d3:	mov    ebx,DWORD PTR [esp+0x18]
100504d7:	jne    0x100504fa
100504d9:	cmp    ebx,DWORD PTR [esp+0x14]
100504dd:	jg     0x100504fa
100504df:	cmp    ebx,0x4
100504e2:	je     0x100504fa
100504e4:	mov    eax,ds:0x1006a50c
100504e9:	pop    ebp
100504ea:	pop    ebx
100504eb:	mov    DWORD PTR [edi+0x18],eax
100504ee:	pop    edi
100504ef:	mov    eax,0xfffffffb
100504f4:	pop    esi
100504f5:	ret    
100504f6:	mov    ebx,DWORD PTR [esp+0x18]
100504fa:	mov    eax,DWORD PTR [esi+0x4]
100504fd:	cmp    eax,0x29a
10050502:	jne    0x1005051d
10050504:	cmp    DWORD PTR [edi+0x4],0x0
10050508:	je     0x10050523
1005050a:	mov    ecx,DWORD PTR ds:0x1006a50c
10050510:	pop    ebp
10050511:	pop    ebx
10050512:	mov    DWORD PTR [edi+0x18],ecx
10050515:	pop    edi
10050516:	mov    eax,0xfffffffb
1005051b:	pop    esi
1005051c:	ret    
1005051d:	cmp    DWORD PTR [edi+0x4],0x0
10050521:	jne    0x1005053c
10050523:	cmp    DWORD PTR [esi+0x74],0x0
10050527:	jne    0x1005053c
10050529:	test   ebx,ebx
1005052b:	je     0x100505d0
10050531:	cmp    eax,0x29a
10050536:	je     0x100505d0
1005053c:	mov    eax,DWORD PTR [esi+0x84]
10050542:	lea    edx,[eax+eax*2]
10050545:	mov    eax,DWORD PTR [edx*4+0x10066f58]
1005054c:	push   ebx
1005054d:	push   esi
1005054e:	call   eax
10050550:	add    esp,0x8
10050553:	cmp    eax,0x2
10050556:	je     0x1005055d
10050558:	cmp    eax,0x3
1005055b:	jne    0x10050564
1005055d:	mov    DWORD PTR [esi+0x4],0x29a
10050564:	test   eax,eax
10050566:	je     0x100506a6
1005056c:	cmp    eax,0x2
1005056f:	je     0x100506a6
10050575:	cmp    eax,ebp
10050577:	jne    0x100505d0
10050579:	cmp    ebx,ebp
1005057b:	jne    0x10050588
1005057d:	push   esi
1005057e:	call   0x100548a0
10050583:	add    esp,0x4
10050586:	jmp    0x100505bf
10050588:	push   0x0
1005058a:	push   0x0
1005058c:	push   0x0
1005058e:	push   esi
1005058f:	call   0x10054800
10050594:	add    esp,0x10
10050597:	cmp    ebx,0x3
1005059a:	jne    0x100505bf
1005059c:	mov    ecx,DWORD PTR [esi+0x4c]
1005059f:	mov    edx,DWORD PTR [esi+0x44]
100505a2:	mov    WORD PTR [edx+ecx*2-0x2],0x0
100505a9:	mov    eax,DWORD PTR [esi+0x4c]
100505ac:	mov    edx,DWORD PTR [esi+0x44]
100505af:	lea    ecx,[eax+eax*1-0x2]
100505b3:	push   ecx
100505b4:	push   0x0
100505b6:	push   edx
100505b7:	call   0x10044950
100505bc:	add    esp,0xc
100505bf:	mov    eax,edi
100505c1:	call   0x1004fea0
100505c6:	cmp    DWORD PTR [edi+0x10],0x0
100505ca:	je     0x100504c1
100505d0:	cmp    ebx,0x4
100505d3:	jne    0x100504c8
100505d9:	mov    eax,DWORD PTR [esi+0x18]
100505dc:	test   eax,eax
100505de:	jg     0x100505e7
100505e0:	mov    eax,ebp
100505e2:	pop    ebp
100505e3:	pop    ebx
100505e4:	pop    edi
100505e5:	pop    esi
100505e6:	ret    
100505e7:	cmp    eax,0x2
100505ea:	jne    0x10050672
100505f0:	movzx  edx,BYTE PTR [edi+0x30]
100505f4:	mov    ecx,DWORD PTR [esi+0x14]
100505f7:	mov    eax,DWORD PTR [esi+0x8]
100505fa:	mov    BYTE PTR [eax+ecx*1],dl
100505fd:	add    DWORD PTR [esi+0x14],ebp
10050600:	movzx  edx,BYTE PTR [edi+0x31]
10050604:	mov    eax,DWORD PTR [esi+0x14]
10050607:	mov    ecx,DWORD PTR [esi+0x8]
1005060a:	mov    BYTE PTR [eax+ecx*1],dl
1005060d:	add    DWORD PTR [esi+0x14],ebp
10050610:	movzx  edx,BYTE PTR [edi+0x32]
10050614:	mov    eax,DWORD PTR [esi+0x14]
10050617:	mov    ecx,DWORD PTR [esi+0x8]
1005061a:	mov    BYTE PTR [eax+ecx*1],dl
1005061d:	add    DWORD PTR [esi+0x14],ebp
10050620:	movzx  edx,BYTE PTR [edi+0x33]
10050624:	mov    eax,DWORD PTR [esi+0x14]
10050627:	mov    ecx,DWORD PTR [esi+0x8]
1005062a:	mov    BYTE PTR [eax+ecx*1],dl
1005062d:	add    DWORD PTR [esi+0x14],ebp
10050630:	movzx  edx,BYTE PTR [edi+0x8]
10050634:	mov    eax,DWORD PTR [esi+0x14]
10050637:	mov    ecx,DWORD PTR [esi+0x8]
1005063a:	mov    BYTE PTR [eax+ecx*1],dl
1005063d:	add    DWORD PTR [esi+0x14],ebp
10050640:	movzx  edx,BYTE PTR [edi+0x9]
10050644:	mov    eax,DWORD PTR [esi+0x14]
10050647:	mov    ecx,DWORD PTR [esi+0x8]
1005064a:	mov    BYTE PTR [eax+ecx*1],dl
1005064d:	add    DWORD PTR [esi+0x14],ebp
10050650:	movzx  edx,BYTE PTR [edi+0xa]
10050654:	mov    eax,DWORD PTR [esi+0x14]
10050657:	mov    ecx,DWORD PTR [esi+0x8]
1005065a:	mov    BYTE PTR [eax+ecx*1],dl
1005065d:	add    DWORD PTR [esi+0x14],ebp
10050660:	movzx  edx,BYTE PTR [edi+0xb]
10050664:	mov    eax,DWORD PTR [esi+0x14]
10050667:	mov    ecx,DWORD PTR [esi+0x8]
1005066a:	mov    BYTE PTR [eax+ecx*1],dl
1005066d:	add    DWORD PTR [esi+0x14],ebp
10050670:	jmp    0x10050686
10050672:	movzx  ecx,WORD PTR [edi+0x32]
10050676:	mov    eax,esi
10050678:	call   0x1004fe70
1005067d:	movzx  ecx,WORD PTR [edi+0x30]
10050681:	call   0x1004fe70
10050686:	mov    eax,edi
10050688:	call   0x1004fea0
1005068d:	mov    eax,DWORD PTR [esi+0x18]
10050690:	test   eax,eax
10050692:	jle    0x10050699
10050694:	neg    eax
10050696:	mov    DWORD PTR [esi+0x18],eax
10050699:	pop    ebp
1005069a:	xor    eax,eax
1005069c:	cmp    DWORD PTR [esi+0x14],eax
1005069f:	pop    ebx
100506a0:	pop    edi
100506a1:	sete   al
100506a4:	pop    esi
100506a5:	ret    
100506a6:	cmp    DWORD PTR [edi+0x10],0x0
100506aa:	jne    0x100504c8
100506b0:	pop    ebp
100506b1:	pop    ebx
100506b2:	pop    edi
100506b3:	mov    DWORD PTR [esi+0x28],0xffffffff
100506ba:	xor    eax,eax
100506bc:	pop    esi
100506bd:	ret    
100506be:	mov    eax,ds:0x1006a500
100506c3:	mov    DWORD PTR [edi+0x18],eax
100506c6:	pop    edi
100506c7:	mov    eax,0xfffffffe
100506cc:	pop    esi
100506cd:	ret    
100506ce:	int3   
100506cf:	int3   
100506d0:	push   esi
100506d1:	mov    esi,DWORD PTR [esp+0x8]
100506d5:	test   esi,esi
100506d7:	je     0x1005079b
100506dd:	mov    eax,DWORD PTR [esi+0x1c]
100506e0:	test   eax,eax
100506e2:	je     0x1005079b
100506e8:	push   edi
100506e9:	mov    edi,DWORD PTR [eax+0x4]
100506ec:	cmp    edi,0x2a
100506ef:	je     0x1005071a
100506f1:	cmp    edi,0x45
100506f4:	je     0x1005071a
100506f6:	cmp    edi,0x49
100506f9:	je     0x1005071a
100506fb:	cmp    edi,0x5b
100506fe:	je     0x1005071a
10050700:	cmp    edi,0x67
10050703:	je     0x1005071a
10050705:	cmp    edi,0x71
10050708:	je     0x1005071a
1005070a:	cmp    edi,0x29a
10050710:	je     0x1005071a
10050712:	pop    edi
10050713:	mov    eax,0xfffffffe
10050718:	pop    esi
10050719:	ret    
1005071a:	mov    eax,DWORD PTR [eax+0x8]
1005071d:	test   eax,eax
1005071f:	je     0x1005072e
10050721:	mov    ecx,DWORD PTR [esi+0x24]
10050724:	push   eax
10050725:	mov    eax,DWORD PTR [esi+0x28]
10050728:	push   eax
10050729:	call   ecx
1005072b:	add    esp,0x8
1005072e:	mov    edx,DWORD PTR [esi+0x1c]
10050731:	mov    eax,DWORD PTR [edx+0x44]
10050734:	test   eax,eax
10050736:	je     0x10050745
10050738:	mov    ecx,DWORD PTR [esi+0x24]
1005073b:	push   eax
1005073c:	mov    eax,DWORD PTR [esi+0x28]
1005073f:	push   eax
10050740:	call   ecx
10050742:	add    esp,0x8
10050745:	mov    edx,DWORD PTR [esi+0x1c]
10050748:	mov    eax,DWORD PTR [edx+0x40]
1005074b:	test   eax,eax
1005074d:	je     0x1005075c
1005074f:	mov    ecx,DWORD PTR [esi+0x24]
10050752:	push   eax
10050753:	mov    eax,DWORD PTR [esi+0x28]
10050756:	push   eax
10050757:	call   ecx
10050759:	add    esp,0x8
1005075c:	mov    edx,DWORD PTR [esi+0x1c]
1005075f:	mov    eax,DWORD PTR [edx+0x38]
10050762:	test   eax,eax
10050764:	je     0x10050773
10050766:	mov    ecx,DWORD PTR [esi+0x24]
10050769:	push   eax
1005076a:	mov    eax,DWORD PTR [esi+0x28]
1005076d:	push   eax
1005076e:	call   ecx
10050770:	add    esp,0x8
10050773:	mov    edx,DWORD PTR [esi+0x1c]
10050776:	mov    eax,DWORD PTR [esi+0x28]
10050779:	mov    ecx,DWORD PTR [esi+0x24]
1005077c:	push   edx
1005077d:	push   eax
1005077e:	call   ecx
10050780:	add    esp,0x8
10050783:	xor    eax,eax
10050785:	cmp    edi,0x71
10050788:	setne  al
1005078b:	pop    edi
1005078c:	mov    DWORD PTR [esi+0x1c],0x0
10050793:	pop    esi
10050794:	sub    eax,0x1
10050797:	and    eax,0xfffffffd
1005079a:	ret    
1005079b:	mov    eax,0xfffffffe
100507a0:	pop    esi
100507a1:	ret    
100507a2:	int3   
100507a3:	int3   
100507a4:	int3   
100507a5:	int3   
100507a6:	int3   
100507a7:	int3   
100507a8:	int3   
100507a9:	int3   
100507aa:	int3   
100507ab:	int3   
100507ac:	int3   
100507ad:	int3   
100507ae:	int3   
100507af:	int3   
100507b0:	mov    eax,DWORD PTR [esi+0x4]
100507b3:	push   edi
100507b4:	mov    edi,eax
100507b6:	cmp    edi,ecx
100507b8:	jbe    0x100507bc
100507ba:	mov    edi,ecx
100507bc:	test   edi,edi
100507be:	jne    0x100507c4
100507c0:	xor    eax,eax
100507c2:	pop    edi
100507c3:	ret    
100507c4:	sub    eax,edi
100507c6:	mov    DWORD PTR [esi+0x4],eax
100507c9:	mov    eax,DWORD PTR [esi+0x1c]
100507cc:	mov    eax,DWORD PTR [eax+0x18]
100507cf:	cmp    eax,0x1
100507d2:	jne    0x100507e3
100507d4:	mov    ecx,DWORD PTR [esi]
100507d6:	mov    edx,DWORD PTR [esi+0x30]
100507d9:	push   edi
100507da:	push   ecx
100507db:	push   edx
100507dc:	call   0x10052f60
100507e1:	jmp    0x100507f5
100507e3:	cmp    eax,0x2
100507e6:	jne    0x100507fb
100507e8:	mov    eax,DWORD PTR [esi]
100507ea:	mov    ecx,DWORD PTR [esi+0x30]
100507ed:	push   edi
100507ee:	push   eax
100507ef:	push   ecx
100507f0:	call   0x10054f40
100507f5:	mov    DWORD PTR [esi+0x30],eax
100507f8:	add    esp,0xc
100507fb:	mov    edx,DWORD PTR [esi]
100507fd:	mov    eax,DWORD PTR [esp+0x8]
10050801:	push   edi
10050802:	push   edx
10050803:	push   eax
10050804:	call   0x10043ed0
10050809:	add    DWORD PTR [esi],edi
1005080b:	add    DWORD PTR [esi+0x8],edi
1005080e:	add    esp,0xc
10050811:	mov    eax,edi
10050813:	pop    edi
10050814:	ret    
10050815:	int3   
10050816:	int3   
10050817:	int3   
10050818:	int3   
10050819:	int3   
1005081a:	int3   
1005081b:	int3   
1005081c:	int3   
1005081d:	int3   
1005081e:	int3   
1005081f:	int3   
10050820:	mov    eax,DWORD PTR [esi+0x2c]
10050823:	mov    ecx,DWORD PTR [esi+0x4c]
10050826:	mov    edx,DWORD PTR [esi+0x44]
10050829:	push   edi
1005082a:	add    eax,eax
1005082c:	mov    DWORD PTR [esi+0x3c],eax
1005082f:	xor    edi,edi
10050831:	mov    WORD PTR [edx+ecx*2-0x2],di
10050836:	mov    eax,DWORD PTR [esi+0x4c]
10050839:	mov    edx,DWORD PTR [esi+0x44]
1005083c:	lea    ecx,[eax+eax*1-0x2]
10050840:	push   ecx
10050841:	push   edi
10050842:	push   edx
10050843:	call   0x10044950
10050848:	mov    eax,DWORD PTR [esi+0x84]
1005084e:	lea    eax,[eax+eax*2]
10050851:	add    eax,eax
10050853:	movzx  ecx,WORD PTR [eax+eax*1+0x10066f52]
1005085b:	add    eax,eax
1005085d:	mov    DWORD PTR [esi+0x80],ecx
10050863:	movzx  edx,WORD PTR [eax+0x10066f50]
1005086a:	mov    DWORD PTR [esi+0x8c],edx
10050870:	movzx  ecx,WORD PTR [eax+0x10066f54]
10050877:	mov    DWORD PTR [esi+0x90],ecx
1005087d:	movzx  edx,WORD PTR [eax+0x10066f56]
10050884:	mov    eax,0x2
10050889:	add    esp,0xc
1005088c:	mov    DWORD PTR [esi+0x6c],edi
1005088f:	mov    DWORD PTR [esi+0x5c],edi
10050892:	mov    DWORD PTR [esi+0x74],edi
10050895:	mov    DWORD PTR [esi+0x68],edi
10050898:	mov    DWORD PTR [esi+0x48],edi
1005089b:	mov    DWORD PTR [esi+0x7c],edx
1005089e:	mov    DWORD PTR [esi+0x78],eax
100508a1:	mov    DWORD PTR [esi+0x60],eax
100508a4:	pop    edi
100508a5:	ret    
100508a6:	int3   
100508a7:	int3   
100508a8:	int3   
100508a9:	int3   
100508aa:	int3   
100508ab:	int3   
100508ac:	int3   
100508ad:	int3   
100508ae:	int3   
100508af:	int3   
100508b0:	sub    esp,0x14
100508b3:	mov    ecx,DWORD PTR [edi+0x7c]
100508b6:	mov    edx,DWORD PTR [edi+0x6c]
100508b9:	push   ebx
100508ba:	push   ebp
100508bb:	mov    ebp,DWORD PTR [edi+0x78]
100508be:	push   esi
100508bf:	mov    esi,DWORD PTR [edi+0x90]
100508c5:	mov    DWORD PTR [esp+0x10],ecx
100508c9:	mov    ecx,DWORD PTR [edi+0x38]
100508cc:	mov    DWORD PTR [esp+0x14],esi
100508d0:	mov    esi,DWORD PTR [edi+0x2c]
100508d3:	lea    ebx,[esi-0x106]
100508d9:	add    ecx,edx
100508db:	cmp    edx,ebx
100508dd:	jbe    0x100508ed
100508df:	sub    edx,esi
100508e1:	add    edx,0x106
100508e7:	mov    DWORD PTR [esp+0x18],edx
100508eb:	jmp    0x100508f5
100508ed:	mov    DWORD PTR [esp+0x18],0x0
100508f5:	cmp    ebp,DWORD PTR [edi+0x8c]
100508fb:	movzx  edx,BYTE PTR [ecx+ebp*1-0x1]
10050900:	mov    BYTE PTR [esp+0xe],dl
10050904:	movzx  edx,BYTE PTR [ecx+ebp*1]
10050908:	lea    esi,[ecx+0x102]
1005090e:	mov    BYTE PTR [esp+0xf],dl
10050912:	jb     0x10050919
10050914:	shr    DWORD PTR [esp+0x10],0x2
10050919:	mov    edx,DWORD PTR [edi+0x74]
1005091c:	cmp    DWORD PTR [esp+0x14],edx
10050920:	jbe    0x10050926
10050922:	mov    DWORD PTR [esp+0x14],edx
10050926:	mov    edx,DWORD PTR [edi+0x38]
10050929:	mov    bl,BYTE PTR [esp+0xf]
1005092d:	add    edx,eax
1005092f:	cmp    BYTE PTR [edx+ebp*1],bl
10050932:	jne    0x100509ff
10050938:	mov    bl,BYTE PTR [esp+0xe]
1005093c:	cmp    BYTE PTR [edx+ebp*1-0x1],bl
10050940:	jne    0x100509ff
10050946:	mov    bl,BYTE PTR [edx]
10050948:	cmp    bl,BYTE PTR [ecx]
1005094a:	jne    0x100509ff
10050950:	mov    bl,BYTE PTR [edx+0x1]
10050953:	add    edx,0x1
10050956:	cmp    bl,BYTE PTR [ecx+0x1]
10050959:	jne    0x100509ff
1005095f:	add    ecx,0x2
10050962:	add    edx,0x1
10050965:	mov    bl,BYTE PTR [ecx+0x1]
10050968:	add    ecx,0x1
1005096b:	add    edx,0x1
1005096e:	cmp    bl,BYTE PTR [edx]
10050970:	jne    0x100509d1
10050972:	mov    bl,BYTE PTR [ecx+0x1]
10050975:	add    ecx,0x1
10050978:	add    edx,0x1
1005097b:	cmp    bl,BYTE PTR [edx]
1005097d:	jne    0x100509d1
1005097f:	mov    bl,BYTE PTR [ecx+0x1]
10050982:	add    ecx,0x1
10050985:	add    edx,0x1
10050988:	cmp    bl,BYTE PTR [edx]
1005098a:	jne    0x100509d1
1005098c:	mov    bl,BYTE PTR [ecx+0x1]
1005098f:	add    ecx,0x1
10050992:	add    edx,0x1
10050995:	cmp    bl,BYTE PTR [edx]
10050997:	jne    0x100509d1
10050999:	mov    bl,BYTE PTR [ecx+0x1]
1005099c:	add    ecx,0x1
1005099f:	add    edx,0x1
100509a2:	cmp    bl,BYTE PTR [edx]
100509a4:	jne    0x100509d1
100509a6:	mov    bl,BYTE PTR [ecx+0x1]
100509a9:	add    ecx,0x1
100509ac:	add    edx,0x1
100509af:	cmp    bl,BYTE PTR [edx]
100509b1:	jne    0x100509d1
100509b3:	mov    bl,BYTE PTR [ecx+0x1]
100509b6:	add    ecx,0x1
100509b9:	add    edx,0x1
100509bc:	cmp    bl,BYTE PTR [edx]
100509be:	jne    0x100509d1
100509c0:	mov    bl,BYTE PTR [ecx+0x1]
100509c3:	add    ecx,0x1
100509c6:	add    edx,0x1
100509c9:	cmp    bl,BYTE PTR [edx]
100509cb:	jne    0x100509d1
100509cd:	cmp    ecx,esi
100509cf:	jb     0x10050965
100509d1:	mov    edx,ecx
100509d3:	sub    edx,esi
100509d5:	add    edx,0x102
100509db:	cmp    edx,ebp
100509dd:	lea    ecx,[esi-0x102]
100509e3:	jle    0x100509ff
100509e5:	cmp    edx,DWORD PTR [esp+0x14]
100509e9:	mov    DWORD PTR [edi+0x70],eax
100509ec:	mov    ebp,edx
100509ee:	jge    0x10050a1c
100509f0:	mov    bl,BYTE PTR [edx+ecx*1-0x1]
100509f4:	mov    dl,BYTE PTR [edx+ecx*1]
100509f7:	mov    BYTE PTR [esp+0xe],bl
100509fb:	mov    BYTE PTR [esp+0xf],dl
100509ff:	mov    edx,DWORD PTR [edi+0x34]
10050a02:	and    edx,eax
10050a04:	mov    eax,DWORD PTR [edi+0x40]
10050a07:	movzx  eax,WORD PTR [eax+edx*2]
10050a0b:	cmp    eax,DWORD PTR [esp+0x18]
10050a0f:	jbe    0x10050a1c
10050a11:	sub    DWORD PTR [esp+0x10],0x1
10050a16:	jne    0x10050926
10050a1c:	mov    eax,DWORD PTR [edi+0x74]
10050a1f:	cmp    ebp,eax
10050a21:	ja     0x10050a25
10050a23:	mov    eax,ebp
10050a25:	pop    esi
10050a26:	pop    ebp
10050a27:	pop    ebx
10050a28:	add    esp,0x14
10050a2b:	ret    
10050a2c:	int3   
10050a2d:	int3   
10050a2e:	int3   
10050a2f:	int3   
10050a30:	mov    ecx,DWORD PTR [esi+0x38]
10050a33:	mov    eax,DWORD PTR [esi+0x6c]
10050a36:	push   ebp
10050a37:	mov    ebp,DWORD PTR [esp+0x8]
10050a3b:	mov    dl,BYTE PTR [ecx+ebp*1]
10050a3e:	add    eax,ecx
10050a40:	add    ecx,ebp
10050a42:	cmp    dl,BYTE PTR [eax]
10050a44:	push   edi
10050a45:	lea    edi,[eax+0x102]
10050a4b:	jne    0x10050aea
10050a51:	mov    dl,BYTE PTR [ecx+0x1]
10050a54:	cmp    dl,BYTE PTR [eax+0x1]
10050a57:	jne    0x10050aea
10050a5d:	add    eax,0x2
10050a60:	add    ecx,0x2
10050a63:	mov    dl,BYTE PTR [eax+0x1]
10050a66:	add    eax,0x1
10050a69:	add    ecx,0x1
10050a6c:	cmp    dl,BYTE PTR [ecx]
10050a6e:	jne    0x10050acf
10050a70:	mov    dl,BYTE PTR [eax+0x1]
10050a73:	add    eax,0x1
10050a76:	add    ecx,0x1
10050a79:	cmp    dl,BYTE PTR [ecx]
10050a7b:	jne    0x10050acf
10050a7d:	mov    dl,BYTE PTR [eax+0x1]
10050a80:	add    eax,0x1
10050a83:	add    ecx,0x1
10050a86:	cmp    dl,BYTE PTR [ecx]
10050a88:	jne    0x10050acf
10050a8a:	mov    dl,BYTE PTR [eax+0x1]
10050a8d:	add    eax,0x1
10050a90:	add    ecx,0x1
10050a93:	cmp    dl,BYTE PTR [ecx]
10050a95:	jne    0x10050acf
10050a97:	mov    dl,BYTE PTR [eax+0x1]
10050a9a:	add    eax,0x1
10050a9d:	add    ecx,0x1
10050aa0:	cmp    dl,BYTE PTR [ecx]
10050aa2:	jne    0x10050acf
10050aa4:	mov    dl,BYTE PTR [eax+0x1]
10050aa7:	add    eax,0x1
10050aaa:	add    ecx,0x1
10050aad:	cmp    dl,BYTE PTR [ecx]
10050aaf:	jne    0x10050acf
10050ab1:	mov    dl,BYTE PTR [eax+0x1]
10050ab4:	add    eax,0x1
10050ab7:	add    ecx,0x1
10050aba:	cmp    dl,BYTE PTR [ecx]
10050abc:	jne    0x10050acf
10050abe:	mov    dl,BYTE PTR [eax+0x1]
10050ac1:	add    eax,0x1
10050ac4:	add    ecx,0x1
10050ac7:	cmp    dl,BYTE PTR [ecx]
10050ac9:	jne    0x10050acf
10050acb:	cmp    eax,edi
10050acd:	jb     0x10050a63
10050acf:	sub    eax,edi
10050ad1:	add    eax,0x102
10050ad6:	cmp    eax,0x3
10050ad9:	jl     0x10050aea
10050adb:	mov    ecx,DWORD PTR [esi+0x74]
10050ade:	cmp    eax,ecx
10050ae0:	mov    DWORD PTR [esi+0x70],ebp
10050ae3:	jbe    0x10050aef
10050ae5:	pop    edi
10050ae6:	mov    eax,ecx
10050ae8:	pop    ebp
10050ae9:	ret    
10050aea:	mov    eax,0x2
10050aef:	pop    edi
10050af0:	pop    ebp
10050af1:	ret    
10050af2:	int3   
10050af3:	int3   
10050af4:	int3   
10050af5:	int3   
10050af6:	int3   
10050af7:	int3   
10050af8:	int3   
10050af9:	int3   
10050afa:	int3   
10050afb:	int3   
10050afc:	int3   
10050afd:	int3   
10050afe:	int3   
10050aff:	int3   
10050b00:	push   ebx
10050b01:	mov    ebx,DWORD PTR [edi+0x2c]
10050b04:	push   ebp
10050b05:	push   esi
10050b06:	mov    ebp,DWORD PTR [edi+0x3c]
10050b09:	sub    ebp,DWORD PTR [edi+0x74]
10050b0c:	mov    eax,DWORD PTR [edi+0x6c]
10050b0f:	mov    ecx,DWORD PTR [edi+0x2c]
10050b12:	lea    edx,[ebx+ecx*1-0x106]
10050b19:	sub    ebp,eax
10050b1b:	cmp    eax,edx
10050b1d:	jb     0x10050b7e
10050b1f:	mov    eax,DWORD PTR [edi+0x38]
10050b22:	push   ebx
10050b23:	lea    ecx,[eax+ebx*1]
10050b26:	push   ecx
10050b27:	push   eax
10050b28:	call   0x10043ed0
10050b2d:	mov    edx,DWORD PTR [edi+0x4c]
10050b30:	mov    eax,DWORD PTR [edi+0x44]
10050b33:	sub    DWORD PTR [edi+0x70],ebx
10050b36:	sub    DWORD PTR [edi+0x6c],ebx
10050b39:	add    esp,0xc
10050b3c:	sub    DWORD PTR [edi+0x5c],ebx
10050b3f:	lea    ecx,[eax+edx*2]
10050b42:	movzx  eax,WORD PTR [ecx-0x2]
10050b46:	sub    ecx,0x2
10050b49:	cmp    eax,ebx
10050b4b:	jb     0x10050b51
10050b4d:	sub    eax,ebx
10050b4f:	jmp    0x10050b53
10050b51:	xor    eax,eax
10050b53:	sub    edx,0x1
10050b56:	mov    WORD PTR [ecx],ax
10050b59:	jne    0x10050b42
10050b5b:	mov    ecx,DWORD PTR [edi+0x40]
10050b5e:	mov    edx,ebx
10050b60:	lea    ecx,[ecx+ebx*2]
10050b63:	movzx  eax,WORD PTR [ecx-0x2]
10050b67:	sub    ecx,0x2
10050b6a:	cmp    eax,ebx
10050b6c:	jb     0x10050b72
10050b6e:	sub    eax,ebx
10050b70:	jmp    0x10050b74
10050b72:	xor    eax,eax
10050b74:	sub    edx,0x1
10050b77:	mov    WORD PTR [ecx],ax
10050b7a:	jne    0x10050b63
10050b7c:	add    ebp,ebx
10050b7e:	mov    esi,DWORD PTR [edi]
10050b80:	cmp    DWORD PTR [esi+0x4],0x0
10050b84:	je     0x10050bd9
10050b86:	mov    edx,DWORD PTR [edi+0x74]
10050b89:	add    edx,DWORD PTR [edi+0x6c]
10050b8c:	mov    ecx,ebp
10050b8e:	add    edx,DWORD PTR [edi+0x38]
10050b91:	push   edx
10050b92:	call   0x100507b0
10050b97:	add    DWORD PTR [edi+0x74],eax
10050b9a:	mov    edx,DWORD PTR [edi+0x74]
10050b9d:	add    esp,0x4
10050ba0:	cmp    edx,0x3
10050ba3:	jb     0x10050bc5
10050ba5:	mov    eax,DWORD PTR [edi+0x6c]
10050ba8:	mov    ecx,DWORD PTR [edi+0x38]
10050bab:	lea    esi,[eax+ecx*1]
10050bae:	movzx  eax,BYTE PTR [esi]
10050bb1:	mov    ecx,DWORD PTR [edi+0x58]
10050bb4:	mov    DWORD PTR [edi+0x48],eax
10050bb7:	shl    eax,cl
10050bb9:	movzx  ecx,BYTE PTR [esi+0x1]
10050bbd:	xor    eax,ecx
10050bbf:	and    eax,DWORD PTR [edi+0x54]
10050bc2:	mov    DWORD PTR [edi+0x48],eax
10050bc5:	cmp    edx,0x106
10050bcb:	jae    0x10050bd9
10050bcd:	mov    edx,DWORD PTR [edi]
10050bcf:	cmp    DWORD PTR [edx+0x4],0x0
10050bd3:	jne    0x10050b06
10050bd9:	pop    esi
10050bda:	pop    ebp
10050bdb:	pop    ebx
10050bdc:	ret    
10050bdd:	int3   
10050bde:	int3   
10050bdf:	int3   
10050be0:	push   esi
10050be1:	push   edi
10050be2:	mov    edi,DWORD PTR [esp+0xc]
10050be6:	mov    eax,DWORD PTR [edi+0xc]
10050be9:	mov    esi,0xffff
10050bee:	add    eax,0xfffffffb
10050bf1:	cmp    eax,esi
10050bf3:	jae    0x10050bf7
10050bf5:	mov    esi,eax
10050bf7:	mov    eax,DWORD PTR [edi+0x74]
10050bfa:	cmp    eax,0x1
10050bfd:	ja     0x10050c0f
10050bff:	call   0x10050b00
10050c04:	mov    eax,DWORD PTR [edi+0x74]
10050c07:	test   eax,eax
10050c09:	je     0x10050cad
10050c0f:	add    DWORD PTR [edi+0x6c],eax
10050c12:	mov    ecx,DWORD PTR [edi+0x5c]
10050c15:	mov    edx,DWORD PTR [edi+0x6c]
10050c18:	mov    DWORD PTR [edi+0x74],0x0
10050c1f:	lea    eax,[ecx+esi*1]
10050c22:	je     0x10050c28
10050c24:	cmp    edx,eax
10050c26:	jb     0x10050c61
10050c28:	sub    edx,eax
10050c2a:	test   ecx,ecx
10050c2c:	mov    DWORD PTR [edi+0x74],edx
10050c2f:	mov    DWORD PTR [edi+0x6c],eax
10050c32:	jl     0x10050c3b
10050c34:	mov    edx,DWORD PTR [edi+0x38]
10050c37:	add    edx,ecx
10050c39:	jmp    0x10050c3d
10050c3b:	xor    edx,edx
10050c3d:	push   0x0
10050c3f:	sub    eax,ecx
10050c41:	push   eax
10050c42:	push   edx
10050c43:	push   edi
10050c44:	call   0x10054a90
10050c49:	mov    eax,DWORD PTR [edi+0x6c]
10050c4c:	mov    DWORD PTR [edi+0x5c],eax
10050c4f:	mov    eax,DWORD PTR [edi]
10050c51:	add    esp,0x10
10050c54:	call   0x1004fea0
10050c59:	mov    ecx,DWORD PTR [edi]
10050c5b:	cmp    DWORD PTR [ecx+0x10],0x0
10050c5f:	je     0x10050ca8
10050c61:	mov    ecx,DWORD PTR [edi+0x5c]
10050c64:	mov    edx,DWORD PTR [edi+0x6c]
10050c67:	mov    eax,DWORD PTR [edi+0x2c]
10050c6a:	sub    edx,ecx
10050c6c:	sub    eax,0x106
10050c71:	cmp    edx,eax
10050c73:	jb     0x10050bf7
10050c75:	test   ecx,ecx
10050c77:	jl     0x10050c80
10050c79:	mov    eax,DWORD PTR [edi+0x38]
10050c7c:	add    eax,ecx
10050c7e:	jmp    0x10050c82
10050c80:	xor    eax,eax
10050c82:	push   0x0
10050c84:	push   edx
10050c85:	push   eax
10050c86:	push   edi
10050c87:	call   0x10054a90
10050c8c:	mov    ecx,DWORD PTR [edi+0x6c]
10050c8f:	mov    eax,DWORD PTR [edi]
10050c91:	add    esp,0x10
10050c94:	mov    DWORD PTR [edi+0x5c],ecx
10050c97:	call   0x1004fea0
10050c9c:	mov    edx,DWORD PTR [edi]
10050c9e:	cmp    DWORD PTR [edx+0x10],0x0
10050ca2:	jne    0x10050bf7
10050ca8:	pop    edi
10050ca9:	xor    eax,eax
10050cab:	pop    esi
10050cac:	ret    
10050cad:	mov    esi,DWORD PTR [esp+0x10]
10050cb1:	test   esi,esi
10050cb3:	je     0x10050ca8
10050cb5:	mov    ecx,DWORD PTR [edi+0x5c]
10050cb8:	test   ecx,ecx
10050cba:	jl     0x10050cc3
10050cbc:	mov    eax,DWORD PTR [edi+0x38]
10050cbf:	add    eax,ecx
10050cc1:	jmp    0x10050cc5
10050cc3:	xor    eax,eax
10050cc5:	xor    edx,edx
10050cc7:	cmp    esi,0x4
10050cca:	sete   dl
10050ccd:	push   edx
10050cce:	mov    edx,DWORD PTR [edi+0x6c]
10050cd1:	sub    edx,ecx
10050cd3:	push   edx
10050cd4:	push   eax
10050cd5:	push   edi
10050cd6:	call   0x10054a90
10050cdb:	mov    eax,DWORD PTR [edi+0x6c]
10050cde:	mov    DWORD PTR [edi+0x5c],eax
10050ce1:	mov    eax,DWORD PTR [edi]
10050ce3:	add    esp,0x10
10050ce6:	call   0x1004fea0
10050ceb:	mov    ecx,DWORD PTR [edi]
10050ced:	xor    eax,eax
10050cef:	cmp    DWORD PTR [ecx+0x10],eax
10050cf2:	jne    0x10050d03
10050cf4:	cmp    esi,0x4
10050cf7:	setne  al
10050cfa:	pop    edi
10050cfb:	pop    esi
10050cfc:	sub    eax,0x1
10050cff:	and    eax,0x2
10050d02:	ret    
10050d03:	cmp    esi,0x4
10050d06:	sete   al
10050d09:	pop    edi
10050d0a:	pop    esi
10050d0b:	lea    eax,[eax+eax*1+0x1]
10050d0f:	ret    
10050d10:	push   ebx
10050d11:	push   ebp
10050d12:	push   esi
10050d13:	push   edi
10050d14:	mov    edi,DWORD PTR [esp+0x14]
10050d18:	xor    ebp,ebp
10050d1a:	mov    ebx,0x1
10050d1f:	nop
10050d20:	mov    eax,DWORD PTR [edi+0x74]
10050d23:	cmp    eax,0x106
10050d28:	jae    0x10050d4d
10050d2a:	call   0x10050b00
10050d2f:	mov    eax,DWORD PTR [edi+0x74]
10050d32:	cmp    eax,0x106
10050d37:	mov    esi,DWORD PTR [esp+0x18]
10050d3b:	jae    0x10050d45
10050d3d:	test   esi,esi
10050d3f:	je     0x10050fc4
10050d45:	test   eax,eax
10050d47:	je     0x10050fcb
10050d4d:	cmp    eax,0x3
10050d50:	jb     0x10050d9b
10050d52:	mov    eax,DWORD PTR [edi+0x48]
10050d55:	mov    ecx,DWORD PTR [edi+0x58]
10050d58:	mov    edx,DWORD PTR [edi+0x6c]
10050d5b:	mov    esi,DWORD PTR [edi+0x34]
10050d5e:	shl    eax,cl
10050d60:	mov    ecx,DWORD PTR [edi+0x38]
10050d63:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
10050d68:	xor    eax,ecx
10050d6a:	and    eax,DWORD PTR [edi+0x54]
10050d6d:	mov    ecx,DWORD PTR [edi+0x44]
10050d70:	mov    DWORD PTR [edi+0x48],eax
10050d73:	mov    ax,WORD PTR [ecx+eax*2]
10050d77:	and    esi,edx
10050d79:	mov    edx,DWORD PTR [edi+0x40]
10050d7c:	mov    WORD PTR [edx+esi*2],ax
10050d80:	mov    ecx,DWORD PTR [edi+0x6c]
10050d83:	and    ecx,DWORD PTR [edi+0x34]
10050d86:	mov    edx,DWORD PTR [edi+0x40]
10050d89:	movzx  ebp,WORD PTR [edx+ecx*2]
10050d8d:	mov    eax,DWORD PTR [edi+0x48]
10050d90:	mov    ecx,DWORD PTR [edi+0x44]
10050d93:	mov    dx,WORD PTR [edi+0x6c]
10050d97:	mov    WORD PTR [ecx+eax*2],dx
10050d9b:	test   ebp,ebp
10050d9d:	je     0x10050de1
10050d9f:	mov    eax,DWORD PTR [edi+0x6c]
10050da2:	mov    ecx,DWORD PTR [edi+0x2c]
10050da5:	sub    eax,ebp
10050da7:	sub    ecx,0x106
10050dad:	cmp    eax,ecx
10050daf:	ja     0x10050de1
10050db1:	mov    ecx,DWORD PTR [edi+0x88]
10050db7:	cmp    ecx,0x2
10050dba:	je     0x10050dca
10050dbc:	cmp    ecx,0x3
10050dbf:	je     0x10050dcf
10050dc1:	mov    eax,ebp
10050dc3:	call   0x100508b0
10050dc8:	jmp    0x10050dde
10050dca:	cmp    ecx,0x3
10050dcd:	jne    0x10050de1
10050dcf:	cmp    eax,ebx
10050dd1:	jne    0x10050de1
10050dd3:	push   ebp
10050dd4:	mov    esi,edi
10050dd6:	call   0x10050a30
10050ddb:	add    esp,0x4
10050dde:	mov    DWORD PTR [edi+0x60],eax
10050de1:	cmp    DWORD PTR [edi+0x60],0x3
10050de5:	jb     0x10050f23
10050deb:	mov    dx,WORD PTR [edi+0x6c]
10050def:	sub    dx,WORD PTR [edi+0x70]
10050df3:	mov    al,BYTE PTR [edi+0x60]
10050df6:	mov    esi,DWORD PTR [edi+0x16a4]
10050dfc:	movzx  ecx,dx
10050dff:	mov    edx,DWORD PTR [edi+0x16a0]
10050e05:	mov    WORD PTR [esi+edx*2],cx
10050e09:	mov    edx,DWORD PTR [edi+0x1698]
10050e0f:	mov    esi,DWORD PTR [edi+0x16a0]
10050e15:	sub    al,0x3
10050e17:	mov    BYTE PTR [edx+esi*1],al
10050e1a:	add    DWORD PTR [edi+0x16a0],ebx
10050e20:	movzx  eax,al
10050e23:	movzx  edx,BYTE PTR [eax+0x10068280]
10050e2a:	add    WORD PTR [edi+edx*4+0x498],bx
10050e32:	lea    eax,[edi+edx*4+0x498]
10050e39:	add    ecx,0xffff
10050e3f:	cmp    cx,0x100
10050e44:	jae    0x10050e52
10050e46:	movzx  eax,cx
10050e49:	movzx  eax,BYTE PTR [eax+0x10068080]
10050e50:	jmp    0x10050e5f
10050e52:	movzx  ecx,cx
10050e55:	shr    ecx,0x7
10050e58:	movzx  eax,BYTE PTR [ecx+0x10068180]
10050e5f:	add    WORD PTR [edi+eax*4+0x988],bx
10050e67:	mov    edx,DWORD PTR [edi+0x169c]
10050e6d:	xor    eax,eax
10050e6f:	sub    edx,ebx
10050e71:	cmp    DWORD PTR [edi+0x16a0],edx
10050e77:	sete   al
10050e7a:	mov    esi,eax
10050e7c:	mov    eax,DWORD PTR [edi+0x60]
10050e7f:	sub    DWORD PTR [edi+0x74],eax
10050e82:	cmp    eax,DWORD PTR [edi+0x80]
10050e88:	mov    ecx,DWORD PTR [edi+0x74]
10050e8b:	ja     0x10050ef7
10050e8d:	cmp    ecx,0x3
10050e90:	jb     0x10050ef7
10050e92:	add    eax,0xffffffff
10050e95:	mov    DWORD PTR [edi+0x60],eax
10050e98:	jmp    0x10050ea0
10050e9a:	lea    ebx,[ebx+0x0]
10050ea0:	add    DWORD PTR [edi+0x6c],ebx
10050ea3:	mov    edx,DWORD PTR [edi+0x6c]
10050ea6:	mov    ecx,DWORD PTR [edi+0x38]
10050ea9:	movzx  eax,BYTE PTR [edx+ecx*1+0x2]
10050eae:	mov    ebp,DWORD PTR [edi+0x48]
10050eb1:	mov    ecx,DWORD PTR [edi+0x58]
10050eb4:	shl    ebp,cl
10050eb6:	mov    ecx,DWORD PTR [edi+0x44]
10050eb9:	xor    eax,ebp
10050ebb:	and    eax,DWORD PTR [edi+0x54]
10050ebe:	mov    ebp,DWORD PTR [edi+0x34]
10050ec1:	and    ebp,edx
10050ec3:	mov    edx,DWORD PTR [edi+0x40]
10050ec6:	mov    DWORD PTR [edi+0x48],eax
10050ec9:	mov    ax,WORD PTR [ecx+eax*2]
10050ecd:	mov    WORD PTR [edx+ebp*2],ax
10050ed1:	mov    ecx,DWORD PTR [edi+0x6c]
10050ed4:	and    ecx,DWORD PTR [edi+0x34]
10050ed7:	mov    edx,DWORD PTR [edi+0x40]
10050eda:	movzx  ebp,WORD PTR [edx+ecx*2]
10050ede:	mov    eax,DWORD PTR [edi+0x48]
10050ee1:	mov    ecx,DWORD PTR [edi+0x44]
10050ee4:	mov    dx,WORD PTR [edi+0x6c]
10050ee8:	mov    WORD PTR [ecx+eax*2],dx
10050eec:	add    DWORD PTR [edi+0x60],0xffffffff
10050ef0:	jne    0x10050ea0
10050ef2:	jmp    0x10050f7e
10050ef7:	add    DWORD PTR [edi+0x6c],eax
10050efa:	mov    eax,DWORD PTR [edi+0x6c]
10050efd:	mov    ecx,DWORD PTR [edi+0x38]
10050f00:	lea    edx,[eax+ecx*1]
10050f03:	mov    ecx,DWORD PTR [edi+0x58]
10050f06:	mov    DWORD PTR [edi+0x60],0x0
10050f0d:	movzx  eax,BYTE PTR [edx]
10050f10:	mov    DWORD PTR [edi+0x48],eax
10050f13:	movzx  edx,BYTE PTR [edx+0x1]
10050f17:	shl    eax,cl
10050f19:	xor    eax,edx
10050f1b:	and    eax,DWORD PTR [edi+0x54]
10050f1e:	mov    DWORD PTR [edi+0x48],eax
10050f21:	jmp    0x10050f81
10050f23:	mov    eax,DWORD PTR [edi+0x6c]
10050f26:	mov    ecx,DWORD PTR [edi+0x38]
10050f29:	mov    al,BYTE PTR [eax+ecx*1]
10050f2c:	mov    edx,DWORD PTR [edi+0x16a0]
10050f32:	mov    ecx,DWORD PTR [edi+0x16a4]
10050f38:	mov    WORD PTR [ecx+edx*2],0x0
10050f3e:	mov    ecx,DWORD PTR [edi+0x16a0]
10050f44:	mov    edx,DWORD PTR [edi+0x1698]
10050f4a:	mov    BYTE PTR [edx+ecx*1],al
10050f4d:	add    DWORD PTR [edi+0x16a0],ebx
10050f53:	movzx  edx,al
10050f56:	add    WORD PTR [edi+edx*4+0x94],bx
10050f5e:	lea    eax,[edi+edx*4+0x94]
10050f65:	mov    eax,DWORD PTR [edi+0x169c]
10050f6b:	xor    ecx,ecx
10050f6d:	sub    eax,ebx
10050f6f:	cmp    DWORD PTR [edi+0x16a0],eax
10050f75:	sete   cl
10050f78:	add    DWORD PTR [edi+0x74],0xffffffff
10050f7c:	mov    esi,ecx
10050f7e:	add    DWORD PTR [edi+0x6c],ebx
10050f81:	test   esi,esi
10050f83:	je     0x10050d20
10050f89:	mov    ecx,DWORD PTR [edi+0x5c]
10050f8c:	test   ecx,ecx
10050f8e:	jl     0x10050f97
10050f90:	mov    eax,DWORD PTR [edi+0x38]
10050f93:	add    eax,ecx
10050f95:	jmp    0x10050f99
10050f97:	xor    eax,eax
10050f99:	mov    edx,DWORD PTR [edi+0x6c]
10050f9c:	push   0x0
10050f9e:	sub    edx,ecx
10050fa0:	push   edx
10050fa1:	push   eax
10050fa2:	push   edi
10050fa3:	call   0x10054a90
10050fa8:	mov    eax,DWORD PTR [edi+0x6c]
10050fab:	mov    DWORD PTR [edi+0x5c],eax
10050fae:	mov    eax,DWORD PTR [edi]
10050fb0:	add    esp,0x10
10050fb3:	call   0x1004fea0
10050fb8:	mov    ecx,DWORD PTR [edi]
10050fba:	cmp    DWORD PTR [ecx+0x10],0x0
10050fbe:	jne    0x10050d20
10050fc4:	pop    edi
10050fc5:	pop    esi
10050fc6:	pop    ebp
10050fc7:	xor    eax,eax
10050fc9:	pop    ebx
10050fca:	ret    
10050fcb:	mov    ecx,DWORD PTR [edi+0x5c]
10050fce:	test   ecx,ecx
10050fd0:	jl     0x10050fd9
10050fd2:	mov    eax,DWORD PTR [edi+0x38]
10050fd5:	add    eax,ecx
10050fd7:	jmp    0x10050fdb
10050fd9:	xor    eax,eax
10050fdb:	xor    edx,edx
10050fdd:	cmp    esi,0x4
10050fe0:	sete   dl
10050fe3:	push   edx
10050fe4:	mov    edx,DWORD PTR [edi+0x6c]
10050fe7:	sub    edx,ecx
10050fe9:	push   edx
10050fea:	push   eax
10050feb:	push   edi
10050fec:	call   0x10054a90
10050ff1:	mov    eax,DWORD PTR [edi+0x6c]
10050ff4:	mov    DWORD PTR [edi+0x5c],eax
10050ff7:	mov    eax,DWORD PTR [edi]
10050ff9:	add    esp,0x10
10050ffc:	call   0x1004fea0
10051001:	mov    ecx,DWORD PTR [edi]
10051003:	xor    eax,eax
10051005:	cmp    DWORD PTR [ecx+0x10],eax
10051008:	jne    0x1005101b
1005100a:	cmp    esi,0x4
1005100d:	setne  al
10051010:	pop    edi
10051011:	pop    esi
10051012:	pop    ebp
10051013:	pop    ebx
10051014:	sub    eax,0x1
10051017:	and    eax,0x2
1005101a:	ret    
1005101b:	cmp    esi,0x4
1005101e:	sete   al
10051021:	pop    edi
10051022:	pop    esi
10051023:	pop    ebp
10051024:	pop    ebx
10051025:	lea    eax,[eax+eax*1+0x1]
10051029:	ret    
1005102a:	int3   
1005102b:	int3   
1005102c:	int3   
1005102d:	int3   
1005102e:	int3   
1005102f:	int3   
10051030:	push   ecx
10051031:	push   ebx
10051032:	push   ebp
10051033:	push   esi
10051034:	push   edi
10051035:	mov    edi,DWORD PTR [esp+0x18]
10051039:	mov    DWORD PTR [esp+0x10],0x0
10051041:	mov    ebp,0x1
10051046:	mov    eax,DWORD PTR [edi+0x74]
10051049:	cmp    eax,0x106
1005104e:	jae    0x10051073
10051050:	call   0x10050b00
10051055:	mov    eax,DWORD PTR [edi+0x74]
10051058:	cmp    eax,0x106
1005105d:	mov    esi,DWORD PTR [esp+0x1c]
10051061:	jae    0x1005106b
10051063:	test   esi,esi
10051065:	je     0x100512c6
1005106b:	test   eax,eax
1005106d:	je     0x1005137b
10051073:	cmp    eax,0x3
10051076:	jb     0x100510c5
10051078:	mov    eax,DWORD PTR [edi+0x48]
1005107b:	mov    ecx,DWORD PTR [edi+0x58]
1005107e:	mov    edx,DWORD PTR [edi+0x6c]
10051081:	mov    esi,DWORD PTR [edi+0x34]
10051084:	shl    eax,cl
10051086:	mov    ecx,DWORD PTR [edi+0x38]
10051089:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
1005108e:	xor    eax,ecx
10051090:	and    eax,DWORD PTR [edi+0x54]
10051093:	mov    ecx,DWORD PTR [edi+0x44]
10051096:	mov    DWORD PTR [edi+0x48],eax
10051099:	movzx  eax,WORD PTR [ecx+eax*2]
1005109d:	and    esi,edx
1005109f:	mov    edx,DWORD PTR [edi+0x40]
100510a2:	mov    WORD PTR [edx+esi*2],ax
100510a6:	mov    ecx,DWORD PTR [edi+0x6c]
100510a9:	and    ecx,DWORD PTR [edi+0x34]
100510ac:	mov    edx,DWORD PTR [edi+0x40]
100510af:	movzx  eax,WORD PTR [edx+ecx*2]
100510b3:	mov    ecx,DWORD PTR [edi+0x48]
100510b6:	mov    edx,DWORD PTR [edi+0x44]
100510b9:	mov    DWORD PTR [esp+0x10],eax
100510bd:	movzx  eax,WORD PTR [edi+0x6c]
100510c1:	mov    WORD PTR [edx+ecx*2],ax
100510c5:	mov    edx,DWORD PTR [edi+0x70]
100510c8:	mov    ecx,DWORD PTR [edi+0x60]
100510cb:	mov    DWORD PTR [edi+0x64],edx
100510ce:	mov    edx,DWORD PTR [esp+0x10]
100510d2:	test   edx,edx
100510d4:	mov    ebx,0x2
100510d9:	mov    DWORD PTR [edi+0x78],ecx
100510dc:	mov    DWORD PTR [edi+0x60],ebx
100510df:	je     0x10051152
100510e1:	mov    eax,ecx
100510e3:	cmp    eax,DWORD PTR [edi+0x80]
100510e9:	jae    0x10051152
100510eb:	mov    eax,DWORD PTR [edi+0x6c]
100510ee:	mov    ecx,DWORD PTR [edi+0x2c]
100510f1:	sub    eax,edx
100510f3:	sub    ecx,0x106
100510f9:	cmp    eax,ecx
100510fb:	ja     0x10051152
100510fd:	mov    ecx,DWORD PTR [edi+0x88]
10051103:	cmp    ecx,ebx
10051105:	je     0x10051115
10051107:	cmp    ecx,0x3
1005110a:	je     0x1005111a
1005110c:	mov    eax,edx
1005110e:	call   0x100508b0
10051113:	jmp    0x10051129
10051115:	cmp    ecx,0x3
10051118:	jne    0x1005112c
1005111a:	cmp    eax,ebp
1005111c:	jne    0x1005112c
1005111e:	push   edx
1005111f:	mov    esi,edi
10051121:	call   0x10050a30
10051126:	add    esp,0x4
10051129:	mov    DWORD PTR [edi+0x60],eax
1005112c:	mov    eax,DWORD PTR [edi+0x60]
1005112f:	cmp    eax,0x5
10051132:	ja     0x10051152
10051134:	cmp    DWORD PTR [edi+0x88],ebp
1005113a:	je     0x1005114f
1005113c:	cmp    eax,0x3
1005113f:	jne    0x10051152
10051141:	mov    edx,DWORD PTR [edi+0x6c]
10051144:	sub    edx,DWORD PTR [edi+0x70]
10051147:	cmp    edx,0x1000
1005114d:	jbe    0x10051152
1005114f:	mov    DWORD PTR [edi+0x60],ebx
10051152:	mov    eax,DWORD PTR [edi+0x78]
10051155:	cmp    eax,0x3
10051158:	jb     0x100512ce
1005115e:	cmp    DWORD PTR [edi+0x60],eax
10051161:	ja     0x100512ce
10051167:	mov    dx,WORD PTR [edi+0x6c]
1005116b:	sub    dx,WORD PTR [edi+0x64]
1005116f:	mov    eax,DWORD PTR [edi+0x6c]
10051172:	mov    ecx,DWORD PTR [edi+0x74]
10051175:	mov    ebx,DWORD PTR [edi+0x16a4]
1005117b:	lea    esi,[eax+ecx*1-0x3]
1005117f:	mov    al,BYTE PTR [edi+0x78]
10051182:	sub    dx,bp
10051185:	movzx  ecx,dx
10051188:	mov    edx,DWORD PTR [edi+0x16a0]
1005118e:	mov    WORD PTR [ebx+edx*2],cx
10051192:	mov    edx,DWORD PTR [edi+0x1698]
10051198:	mov    ebx,DWORD PTR [edi+0x16a0]
1005119e:	sub    al,0x3
100511a0:	mov    BYTE PTR [edx+ebx*1],al
100511a3:	add    DWORD PTR [edi+0x16a0],ebp
100511a9:	movzx  eax,al
100511ac:	movzx  edx,BYTE PTR [eax+0x10068280]
100511b3:	add    WORD PTR [edi+edx*4+0x498],bp
100511bb:	lea    eax,[edi+edx*4+0x498]
100511c2:	add    ecx,0xffff
100511c8:	cmp    cx,0x100
100511cd:	jae    0x100511db
100511cf:	movzx  eax,cx
100511d2:	movzx  eax,BYTE PTR [eax+0x10068080]
100511d9:	jmp    0x100511e8
100511db:	movzx  ecx,cx
100511de:	shr    ecx,0x7
100511e1:	movzx  eax,BYTE PTR [ecx+0x10068180]
100511e8:	add    WORD PTR [edi+eax*4+0x988],bp
100511f0:	mov    edx,DWORD PTR [edi+0x169c]
100511f6:	mov    eax,DWORD PTR [edi+0x78]
100511f9:	sub    edx,ebp
100511fb:	xor    ebx,ebx
100511fd:	cmp    DWORD PTR [edi+0x16a0],edx
10051203:	mov    ecx,ebp
10051205:	sete   bl
10051208:	sub    ecx,eax
1005120a:	add    DWORD PTR [edi+0x74],ecx
1005120d:	add    eax,0xfffffffe
10051210:	mov    DWORD PTR [edi+0x78],eax
10051213:	add    DWORD PTR [edi+0x6c],ebp
10051216:	mov    edx,DWORD PTR [edi+0x6c]
10051219:	cmp    edx,esi
1005121b:	ja     0x1005126c
1005121d:	mov    eax,DWORD PTR [edi+0x48]
10051220:	mov    ecx,DWORD PTR [edi+0x58]
10051223:	mov    ebp,DWORD PTR [edi+0x34]
10051226:	shl    eax,cl
10051228:	mov    ecx,DWORD PTR [edi+0x38]
1005122b:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
10051230:	xor    eax,ecx
10051232:	and    eax,DWORD PTR [edi+0x54]
10051235:	mov    ecx,DWORD PTR [edi+0x44]
10051238:	mov    DWORD PTR [edi+0x48],eax
1005123b:	movzx  eax,WORD PTR [ecx+eax*2]
1005123f:	and    ebp,edx
10051241:	mov    edx,DWORD PTR [edi+0x40]
10051244:	mov    WORD PTR [edx+ebp*2],ax
10051248:	mov    ecx,DWORD PTR [edi+0x6c]
1005124b:	and    ecx,DWORD PTR [edi+0x34]
1005124e:	mov    edx,DWORD PTR [edi+0x40]
10051251:	movzx  eax,WORD PTR [edx+ecx*2]
10051255:	mov    ecx,DWORD PTR [edi+0x48]
10051258:	mov    edx,DWORD PTR [edi+0x44]
1005125b:	mov    DWORD PTR [esp+0x10],eax
1005125f:	movzx  eax,WORD PTR [edi+0x6c]
10051263:	mov    WORD PTR [edx+ecx*2],ax
10051267:	mov    ebp,0x1
1005126c:	add    DWORD PTR [edi+0x78],0xffffffff
10051270:	jne    0x10051213
10051272:	add    DWORD PTR [edi+0x6c],ebp
10051275:	test   ebx,ebx
10051277:	mov    eax,DWORD PTR [edi+0x6c]
1005127a:	mov    DWORD PTR [edi+0x68],0x0
10051281:	mov    DWORD PTR [edi+0x60],0x2
10051288:	je     0x10051046
1005128e:	mov    edx,DWORD PTR [edi+0x5c]
10051291:	test   edx,edx
10051293:	jl     0x1005129c
10051295:	mov    ecx,DWORD PTR [edi+0x38]
10051298:	add    ecx,edx
1005129a:	jmp    0x1005129e
1005129c:	xor    ecx,ecx
1005129e:	push   0x0
100512a0:	sub    eax,edx
100512a2:	push   eax
100512a3:	push   ecx
100512a4:	push   edi
100512a5:	call   0x10054a90
100512aa:	mov    ecx,DWORD PTR [edi+0x6c]
100512ad:	mov    eax,DWORD PTR [edi]
100512af:	add    esp,0x10
100512b2:	mov    DWORD PTR [edi+0x5c],ecx
100512b5:	call   0x1004fea0
100512ba:	mov    edx,DWORD PTR [edi]
100512bc:	cmp    DWORD PTR [edx+0x10],0x0
100512c0:	jne    0x10051046
100512c6:	pop    edi
100512c7:	pop    esi
100512c8:	pop    ebp
100512c9:	xor    eax,eax
100512cb:	pop    ebx
100512cc:	pop    ecx
100512cd:	ret    
100512ce:	cmp    DWORD PTR [edi+0x68],0x0
100512d2:	je     0x1005136c
100512d8:	mov    eax,DWORD PTR [edi+0x6c]
100512db:	mov    ecx,DWORD PTR [edi+0x38]
100512de:	mov    al,BYTE PTR [eax+ecx*1-0x1]
100512e2:	mov    edx,DWORD PTR [edi+0x16a0]
100512e8:	mov    ecx,DWORD PTR [edi+0x16a4]
100512ee:	mov    WORD PTR [ecx+edx*2],0x0
100512f4:	mov    edx,DWORD PTR [edi+0x1698]
100512fa:	mov    ecx,DWORD PTR [edi+0x16a0]
10051300:	mov    BYTE PTR [edx+ecx*1],al
10051303:	add    DWORD PTR [edi+0x16a0],ebp
10051309:	movzx  edx,al
1005130c:	add    WORD PTR [edi+edx*4+0x94],bp
10051314:	lea    eax,[edi+edx*4+0x94]
1005131b:	mov    eax,DWORD PTR [edi+0x169c]
10051321:	sub    eax,ebp
10051323:	cmp    DWORD PTR [edi+0x16a0],eax
10051329:	jne    0x1005135a
1005132b:	mov    ecx,DWORD PTR [edi+0x5c]
1005132e:	test   ecx,ecx
10051330:	jl     0x10051339
10051332:	mov    eax,DWORD PTR [edi+0x38]
10051335:	add    eax,ecx
10051337:	jmp    0x1005133b
10051339:	xor    eax,eax
1005133b:	mov    edx,DWORD PTR [edi+0x6c]
1005133e:	push   0x0
10051340:	sub    edx,ecx
10051342:	push   edx
10051343:	push   eax
10051344:	push   edi
10051345:	call   0x10054a90
1005134a:	mov    eax,DWORD PTR [edi+0x6c]
1005134d:	mov    DWORD PTR [edi+0x5c],eax
10051350:	mov    eax,DWORD PTR [edi]
10051352:	add    esp,0x10
10051355:	call   0x1004fea0
1005135a:	mov    ecx,DWORD PTR [edi]
1005135c:	add    DWORD PTR [edi+0x6c],ebp
1005135f:	add    DWORD PTR [edi+0x74],0xffffffff
10051363:	cmp    DWORD PTR [ecx+0x10],0x0
10051367:	jmp    0x100512c0
1005136c:	add    DWORD PTR [edi+0x6c],ebp
1005136f:	add    DWORD PTR [edi+0x74],0xffffffff
10051373:	mov    DWORD PTR [edi+0x68],ebp
10051376:	jmp    0x10051046
1005137b:	cmp    DWORD PTR [edi+0x68],0x0
1005137f:	je     0x100513cb
10051381:	mov    edx,DWORD PTR [edi+0x6c]
10051384:	mov    eax,DWORD PTR [edi+0x38]
10051387:	mov    al,BYTE PTR [edx+eax*1-0x1]
1005138b:	mov    ecx,DWORD PTR [edi+0x16a0]
10051391:	mov    edx,DWORD PTR [edi+0x16a4]
10051397:	mov    WORD PTR [edx+ecx*2],0x0
1005139d:	mov    edx,DWORD PTR [edi+0x16a0]
100513a3:	mov    ecx,DWORD PTR [edi+0x1698]
100513a9:	mov    BYTE PTR [ecx+edx*1],al
100513ac:	add    DWORD PTR [edi+0x16a0],ebp
100513b2:	movzx  eax,al
100513b5:	add    WORD PTR [edi+eax*4+0x94],bp
100513bd:	lea    eax,[edi+eax*4+0x94]
100513c4:	mov    DWORD PTR [edi+0x68],0x0
100513cb:	mov    ecx,DWORD PTR [edi+0x5c]
100513ce:	test   ecx,ecx
100513d0:	jl     0x100513d9
100513d2:	mov    eax,DWORD PTR [edi+0x38]
100513d5:	add    eax,ecx
100513d7:	jmp    0x100513db
100513d9:	xor    eax,eax
100513db:	xor    edx,edx
100513dd:	cmp    esi,0x4
100513e0:	sete   dl
100513e3:	push   edx
100513e4:	mov    edx,DWORD PTR [edi+0x6c]
100513e7:	sub    edx,ecx
100513e9:	push   edx
100513ea:	push   eax
100513eb:	push   edi
100513ec:	call   0x10054a90
100513f1:	mov    eax,DWORD PTR [edi+0x6c]
100513f4:	mov    DWORD PTR [edi+0x5c],eax
100513f7:	mov    eax,DWORD PTR [edi]
100513f9:	add    esp,0x10
100513fc:	call   0x1004fea0
10051401:	mov    ecx,DWORD PTR [edi]
10051403:	xor    eax,eax
10051405:	cmp    DWORD PTR [ecx+0x10],eax
10051408:	jne    0x1005141c
1005140a:	cmp    esi,0x4
1005140d:	setne  al
10051410:	pop    edi
10051411:	pop    esi
10051412:	pop    ebp
10051413:	pop    ebx
10051414:	sub    eax,0x1
10051417:	and    eax,0x2
1005141a:	pop    ecx
1005141b:	ret    
1005141c:	cmp    esi,0x4
1005141f:	sete   al
10051422:	pop    edi
10051423:	pop    esi
10051424:	pop    ebp
10051425:	pop    ebx
10051426:	lea    eax,[eax+eax*1+0x1]
1005142a:	pop    ecx
1005142b:	ret    
1005142c:	int3   
1005142d:	int3   
1005142e:	int3   
1005142f:	int3   
10051430:	push   ebx
10051431:	push   esi
10051432:	push   edi
10051433:	mov    edi,DWORD PTR [esp+0x10]
10051437:	xor    ebx,ebx
10051439:	cmp    edi,ebx
1005143b:	je     0x100514b6
1005143d:	mov    esi,DWORD PTR [edi+0x1c]
10051440:	cmp    esi,ebx
10051442:	je     0x100514b6
10051444:	cmp    DWORD PTR [edi+0x20],ebx
10051447:	je     0x100514b6
10051449:	cmp    DWORD PTR [edi+0x24],ebx
1005144c:	je     0x100514b6
1005144e:	mov    DWORD PTR [edi+0x14],ebx
10051451:	mov    DWORD PTR [edi+0x8],ebx
10051454:	mov    DWORD PTR [edi+0x18],ebx
10051457:	mov    DWORD PTR [edi+0x2c],0x2
1005145e:	mov    eax,DWORD PTR [esi+0x8]
10051461:	mov    DWORD PTR [esi+0x10],eax
10051464:	mov    eax,DWORD PTR [esi+0x18]
10051467:	cmp    eax,ebx
10051469:	mov    DWORD PTR [esi+0x14],ebx
1005146c:	jge    0x10051473
1005146e:	neg    eax
10051470:	mov    DWORD PTR [esi+0x18],eax
10051473:	mov    eax,DWORD PTR [esi+0x18]
10051476:	mov    ecx,eax
10051478:	neg    ecx
1005147a:	sbb    ecx,ecx
1005147c:	and    ecx,0xffffffb9
1005147f:	push   ebx
10051480:	add    ecx,0x71
10051483:	cmp    eax,0x2
10051486:	push   ebx
10051487:	mov    DWORD PTR [esi+0x4],ecx
1005148a:	push   ebx
1005148b:	jne    0x10051494
1005148d:	call   0x10054f40
10051492:	jmp    0x10051499
10051494:	call   0x10052f60
10051499:	add    esp,0xc
1005149c:	mov    DWORD PTR [edi+0x30],eax
1005149f:	push   esi
100514a0:	mov    DWORD PTR [esi+0x28],ebx
100514a3:	call   0x10054440
100514a8:	add    esp,0x4
100514ab:	call   0x10050820
100514b0:	pop    edi
100514b1:	pop    esi
100514b2:	xor    eax,eax
100514b4:	pop    ebx
100514b5:	ret    
100514b6:	pop    edi
100514b7:	pop    esi
100514b8:	mov    eax,0xfffffffe
100514bd:	pop    ebx
100514be:	ret    
100514bf:	int3   
100514c0:	mov    eax,DWORD PTR [esp+0x1c]
100514c4:	xor    ecx,ecx
100514c6:	cmp    eax,ecx
100514c8:	push   ebp
100514c9:	mov    ebp,0x1
100514ce:	je     0x100516d8
100514d4:	cmp    BYTE PTR [eax],0x31
100514d7:	jne    0x100516d8
100514dd:	cmp    DWORD PTR [esp+0x24],0x38
100514e2:	jne    0x100516d8
100514e8:	push   edi
100514e9:	mov    edi,DWORD PTR [esp+0xc]
100514ed:	cmp    edi,ecx
100514ef:	jne    0x100514f9
100514f1:	pop    edi
100514f2:	mov    eax,0xfffffffe
100514f7:	pop    ebp
100514f8:	ret    
100514f9:	cmp    DWORD PTR [edi+0x20],ecx
100514fc:	mov    DWORD PTR [edi+0x18],ecx
100514ff:	jne    0x1005150b
10051501:	mov    DWORD PTR [edi+0x20],0x10054f60
10051508:	mov    DWORD PTR [edi+0x28],ecx
1005150b:	cmp    DWORD PTR [edi+0x24],ecx
1005150e:	jne    0x10051517
10051510:	mov    DWORD PTR [edi+0x24],0x10054f80
10051517:	cmp    DWORD PTR [esp+0x10],0xffffffff
1005151c:	jne    0x10051526
1005151e:	mov    DWORD PTR [esp+0x10],0x6
10051526:	push   ebx
10051527:	mov    ebx,DWORD PTR [esp+0x1c]
1005152b:	cmp    ebx,ecx
1005152d:	jge    0x10051535
1005152f:	xor    ebp,ebp
10051531:	neg    ebx
10051533:	jmp    0x10051542
10051535:	cmp    ebx,0xf
10051538:	jle    0x10051542
1005153a:	mov    ebp,0x2
1005153f:	sub    ebx,0x10
10051542:	mov    eax,DWORD PTR [esp+0x20]
10051546:	add    eax,0xffffffff
10051549:	cmp    eax,0x8
1005154c:	ja     0x100516cf
10051552:	cmp    DWORD PTR [esp+0x18],0x8
10051557:	jne    0x100516cf
1005155d:	lea    ecx,[ebx-0x8]
10051560:	cmp    ecx,0x7
10051563:	ja     0x100516cf
10051569:	cmp    DWORD PTR [esp+0x14],0x9
1005156e:	ja     0x100516cf
10051574:	cmp    DWORD PTR [esp+0x24],0x4
10051579:	ja     0x100516cf
1005157f:	cmp    ebx,0x8
10051582:	jne    0x10051589
10051584:	mov    ebx,0x9
10051589:	mov    edx,DWORD PTR [edi+0x28]
1005158c:	mov    eax,DWORD PTR [edi+0x20]
1005158f:	push   esi
10051590:	push   0x16c0
10051595:	push   0x1
10051597:	push   edx
10051598:	call   eax
1005159a:	mov    esi,eax
1005159c:	add    esp,0xc
1005159f:	test   esi,esi
100515a1:	je     0x100516c5
100515a7:	mov    DWORD PTR [edi+0x1c],esi
100515aa:	mov    DWORD PTR [esi+0x18],ebp
100515ad:	mov    ecx,ebx
100515af:	mov    ebp,0x1
100515b4:	shl    ebp,cl
100515b6:	mov    DWORD PTR [esi+0x30],ebx
100515b9:	mov    ebx,DWORD PTR [esp+0x24]
100515bd:	mov    eax,0x1
100515c2:	lea    ecx,[ebp-0x1]
100515c5:	mov    DWORD PTR [esi+0x34],ecx
100515c8:	lea    ecx,[ebx+0x7]
100515cb:	shl    eax,cl
100515cd:	mov    DWORD PTR [esi+0x50],ecx
100515d0:	add    ecx,0x2
100515d3:	mov    DWORD PTR [esi],edi
100515d5:	mov    DWORD PTR [esi+0x4c],eax
100515d8:	add    eax,0xffffffff
100515db:	mov    DWORD PTR [esi+0x54],eax
100515de:	mov    eax,0xaaaaaaab
100515e3:	mul    ecx
100515e5:	shr    edx,1
100515e7:	mov    DWORD PTR [esi+0x1c],0x0
100515ee:	mov    DWORD PTR [esi+0x2c],ebp
100515f1:	mov    DWORD PTR [esi+0x58],edx
100515f4:	mov    edx,DWORD PTR [edi+0x28]
100515f7:	mov    eax,DWORD PTR [edi+0x20]
100515fa:	push   0x2
100515fc:	push   ebp
100515fd:	push   edx
100515fe:	call   eax
10051600:	mov    ecx,DWORD PTR [esi+0x2c]
10051603:	mov    DWORD PTR [esi+0x38],eax
10051606:	mov    edx,DWORD PTR [edi+0x28]
10051609:	mov    eax,DWORD PTR [edi+0x20]
1005160c:	push   0x2
1005160e:	push   ecx
1005160f:	push   edx
10051610:	call   eax
10051612:	mov    ecx,DWORD PTR [esi+0x4c]
10051615:	mov    DWORD PTR [esi+0x40],eax
10051618:	mov    edx,DWORD PTR [edi+0x28]
1005161b:	mov    eax,DWORD PTR [edi+0x20]
1005161e:	push   0x2
10051620:	push   ecx
10051621:	push   edx
10051622:	call   eax
10051624:	mov    DWORD PTR [esi+0x44],eax
10051627:	lea    ecx,[ebx+0x6]
1005162a:	mov    eax,0x1
1005162f:	shl    eax,cl
10051631:	push   0x4
10051633:	mov    DWORD PTR [esi+0x169c],eax
10051639:	mov    ecx,DWORD PTR [edi+0x28]
1005163c:	mov    edx,DWORD PTR [edi+0x20]
1005163f:	push   eax
10051640:	push   ecx
10051641:	call   edx
10051643:	mov    ecx,DWORD PTR [esi+0x169c]
10051649:	add    esp,0x30
1005164c:	cmp    DWORD PTR [esi+0x38],0x0
10051650:	lea    edx,[ecx*4+0x0]
10051657:	mov    DWORD PTR [esi+0x8],eax
1005165a:	mov    DWORD PTR [esi+0xc],edx
1005165d:	je     0x100516ad
1005165f:	cmp    DWORD PTR [esi+0x40],0x0
10051663:	je     0x100516ad
10051665:	cmp    DWORD PTR [esi+0x44],0x0
10051669:	je     0x100516ad
1005166b:	test   eax,eax
1005166d:	je     0x100516ad
1005166f:	mov    edx,ecx
10051671:	shr    edx,1
10051673:	lea    edx,[eax+edx*2]
10051676:	lea    eax,[eax+ecx*2]
10051679:	add    eax,ecx
1005167b:	mov    ecx,DWORD PTR [esp+0x18]
1005167f:	mov    DWORD PTR [esi+0x16a4],edx
10051685:	mov    edx,DWORD PTR [esp+0x28]
10051689:	push   edi
1005168a:	mov    DWORD PTR [esi+0x1698],eax
10051690:	mov    DWORD PTR [esi+0x84],ecx
10051696:	mov    DWORD PTR [esi+0x88],edx
1005169c:	mov    BYTE PTR [esi+0x24],0x8
100516a0:	call   0x10051430
100516a5:	add    esp,0x4
100516a8:	pop    esi
100516a9:	pop    ebx
100516aa:	pop    edi
100516ab:	pop    ebp
100516ac:	ret    
100516ad:	mov    DWORD PTR [esi+0x4],0x29a
100516b4:	mov    eax,ds:0x1006a508
100516b9:	push   edi
100516ba:	mov    DWORD PTR [edi+0x18],eax
100516bd:	call   0x100506d0
100516c2:	add    esp,0x4
100516c5:	pop    esi
100516c6:	pop    ebx
100516c7:	pop    edi
100516c8:	mov    eax,0xfffffffc
100516cd:	pop    ebp
100516ce:	ret    
100516cf:	pop    ebx
100516d0:	pop    edi
100516d1:	mov    eax,0xfffffffe
100516d6:	pop    ebp
100516d7:	ret    
100516d8:	mov    eax,0xfffffffa
100516dd:	pop    ebp
100516de:	ret    
100516df:	int3   
100516e0:	mov    edx,DWORD PTR [esp+0x4]
100516e4:	xor    ecx,ecx
100516e6:	cmp    edx,ecx
100516e8:	je     0x10051737
100516ea:	mov    eax,DWORD PTR [edx+0x1c]
100516ed:	cmp    eax,ecx
100516ef:	je     0x10051737
100516f1:	mov    DWORD PTR [eax+0x1c],ecx
100516f4:	mov    DWORD PTR [edx+0x14],ecx
100516f7:	mov    DWORD PTR [edx+0x8],ecx
100516fa:	mov    DWORD PTR [edx+0x18],ecx
100516fd:	mov    DWORD PTR [edx+0x30],0x1
10051704:	mov    DWORD PTR [eax],ecx
10051706:	mov    DWORD PTR [eax+0x4],ecx
10051709:	mov    DWORD PTR [eax+0xc],ecx
1005170c:	mov    DWORD PTR [eax+0x20],ecx
1005170f:	mov    DWORD PTR [eax+0x28],ecx
10051712:	mov    DWORD PTR [eax+0x2c],ecx
10051715:	mov    DWORD PTR [eax+0x30],ecx
10051718:	mov    DWORD PTR [eax+0x38],ecx
1005171b:	mov    DWORD PTR [eax+0x3c],ecx
1005171e:	lea    ecx,[eax+0x530]
10051724:	mov    DWORD PTR [eax+0x14],0x8000
1005172b:	mov    DWORD PTR [eax+0x6c],ecx
1005172e:	mov    DWORD PTR [eax+0x50],ecx
10051731:	mov    DWORD PTR [eax+0x4c],ecx
10051734:	xor    eax,eax
10051736:	ret    
10051737:	mov    eax,0xfffffffe
1005173c:	ret    
1005173d:	int3   
1005173e:	int3   
1005173f:	int3   
10051740:	mov    eax,DWORD PTR [esp+0xc]
10051744:	push   edi
10051745:	xor    edi,edi
10051747:	cmp    eax,edi
10051749:	je     0x10051804
1005174f:	cmp    BYTE PTR [eax],0x31
10051752:	jne    0x10051804
10051758:	cmp    DWORD PTR [esp+0x14],0x38
1005175d:	jne    0x10051804
10051763:	push   esi
10051764:	mov    esi,DWORD PTR [esp+0xc]
10051768:	cmp    esi,edi
1005176a:	je     0x100517fc
10051770:	cmp    DWORD PTR [esi+0x20],edi
10051773:	mov    DWORD PTR [esi+0x18],edi
10051776:	jne    0x10051782
10051778:	mov    DWORD PTR [esi+0x20],0x10054f60
1005177f:	mov    DWORD PTR [esi+0x28],edi
10051782:	cmp    DWORD PTR [esi+0x24],edi
10051785:	jne    0x1005178e
10051787:	mov    DWORD PTR [esi+0x24],0x10054f80
1005178e:	mov    eax,DWORD PTR [esi+0x28]
10051791:	mov    ecx,DWORD PTR [esi+0x20]
10051794:	push   0x2530
10051799:	push   0x1
1005179b:	push   eax
1005179c:	call   ecx
1005179e:	add    esp,0xc
100517a1:	cmp    eax,edi
100517a3:	jne    0x100517ad
100517a5:	pop    esi
100517a6:	mov    eax,0xfffffffc
100517ab:	pop    edi
100517ac:	ret    
100517ad:	mov    ecx,DWORD PTR [esp+0x10]
100517b1:	cmp    ecx,edi
100517b3:	mov    DWORD PTR [esi+0x1c],eax
100517b6:	jge    0x100517bf
100517b8:	mov    DWORD PTR [eax+0x8],edi
100517bb:	neg    ecx
100517bd:	jmp    0x100517d2
100517bf:	mov    edx,ecx
100517c1:	sar    edx,0x4
100517c4:	add    edx,0x1
100517c7:	cmp    ecx,0x30
100517ca:	mov    DWORD PTR [eax+0x8],edx
100517cd:	jge    0x100517d2
100517cf:	and    ecx,0xf
100517d2:	lea    edx,[ecx-0x8]
100517d5:	cmp    edx,0x7
100517d8:	ja     0x100517ec
100517da:	push   esi
100517db:	mov    DWORD PTR [eax+0x24],ecx
100517de:	mov    DWORD PTR [eax+0x34],edi
100517e1:	call   0x100516e0
100517e6:	add    esp,0x4
100517e9:	pop    esi
100517ea:	pop    edi
100517eb:	ret    
100517ec:	mov    ecx,DWORD PTR [esi+0x24]
100517ef:	push   eax
100517f0:	mov    eax,DWORD PTR [esi+0x28]
100517f3:	push   eax
100517f4:	call   ecx
100517f6:	add    esp,0x8
100517f9:	mov    DWORD PTR [esi+0x1c],edi
100517fc:	pop    esi
100517fd:	mov    eax,0xfffffffe
10051802:	pop    edi
10051803:	ret    
10051804:	mov    eax,0xfffffffa
10051809:	pop    edi
1005180a:	ret    
1005180b:	int3   
1005180c:	int3   
1005180d:	int3   
1005180e:	int3   
1005180f:	int3   
10051810:	mov    DWORD PTR [eax+0x4c],0x10066fd0
10051817:	mov    DWORD PTR [eax+0x54],0x9
1005181e:	mov    DWORD PTR [eax+0x50],0x100677d0
10051825:	mov    DWORD PTR [eax+0x58],0x5
1005182c:	ret    
1005182d:	int3   
1005182e:	int3   
1005182f:	int3   
10051830:	push   ebp
10051831:	push   esi
10051832:	mov    esi,DWORD PTR [ebx+0x1c]
10051835:	xor    ebp,ebp
10051837:	cmp    DWORD PTR [esi+0x34],ebp
1005183a:	push   edi
1005183b:	mov    edi,eax
1005183d:	jne    0x10051868
1005183f:	mov    ecx,DWORD PTR [esi+0x24]
10051842:	mov    edx,DWORD PTR [ebx+0x20]
10051845:	mov    eax,0x1
1005184a:	shl    eax,cl
1005184c:	mov    ecx,DWORD PTR [ebx+0x28]
1005184f:	push   0x1
10051851:	push   eax
10051852:	push   ecx
10051853:	call   edx
10051855:	add    esp,0xc
10051858:	cmp    eax,ebp
1005185a:	mov    DWORD PTR [esi+0x34],eax
1005185d:	jne    0x10051868
1005185f:	pop    edi
10051860:	pop    esi
10051861:	mov    eax,0x1
10051866:	pop    ebp
10051867:	ret    
10051868:	cmp    DWORD PTR [esi+0x28],ebp
1005186b:	jne    0x10051880
1005186d:	mov    ecx,DWORD PTR [esi+0x24]
10051870:	mov    eax,0x1
10051875:	shl    eax,cl
10051877:	mov    DWORD PTR [esi+0x30],ebp
1005187a:	mov    DWORD PTR [esi+0x2c],ebp
1005187d:	mov    DWORD PTR [esi+0x28],eax
10051880:	sub    edi,DWORD PTR [ebx+0x10]
10051883:	mov    eax,DWORD PTR [esi+0x28]
10051886:	cmp    edi,eax
10051888:	jb     0x100518ac
1005188a:	mov    ecx,DWORD PTR [ebx+0xc]
1005188d:	mov    edx,DWORD PTR [esi+0x34]
10051890:	push   eax
10051891:	sub    ecx,eax
10051893:	push   ecx
10051894:	push   edx
10051895:	call   0x10043ed0
1005189a:	mov    eax,DWORD PTR [esi+0x28]
1005189d:	add    esp,0xc
100518a0:	pop    edi
100518a1:	mov    DWORD PTR [esi+0x30],ebp
100518a4:	mov    DWORD PTR [esi+0x2c],eax
100518a7:	pop    esi
100518a8:	xor    eax,eax
100518aa:	pop    ebp
100518ab:	ret    
100518ac:	sub    eax,DWORD PTR [esi+0x30]
100518af:	mov    ebp,eax
100518b1:	cmp    ebp,edi
100518b3:	jbe    0x100518b7
100518b5:	mov    ebp,edi
100518b7:	mov    ecx,DWORD PTR [ebx+0xc]
100518ba:	mov    edx,DWORD PTR [esi+0x34]
100518bd:	add    edx,DWORD PTR [esi+0x30]
100518c0:	push   ebp
100518c1:	sub    ecx,edi
100518c3:	push   ecx
100518c4:	push   edx
100518c5:	call   0x10043ed0
100518ca:	add    esp,0xc
100518cd:	sub    edi,ebp
100518cf:	je     0x100518f3
100518d1:	mov    eax,DWORD PTR [ebx+0xc]
100518d4:	mov    ecx,DWORD PTR [esi+0x34]
100518d7:	push   edi
100518d8:	sub    eax,edi
100518da:	push   eax
100518db:	push   ecx
100518dc:	call   0x10043ed0
100518e1:	mov    edx,DWORD PTR [esi+0x28]
100518e4:	add    esp,0xc
100518e7:	mov    DWORD PTR [esi+0x30],edi
100518ea:	pop    edi
100518eb:	mov    DWORD PTR [esi+0x2c],edx
100518ee:	pop    esi
100518ef:	xor    eax,eax
100518f1:	pop    ebp
100518f2:	ret    
100518f3:	add    DWORD PTR [esi+0x30],ebp
100518f6:	mov    ecx,DWORD PTR [esi+0x30]
100518f9:	mov    eax,DWORD PTR [esi+0x28]
100518fc:	cmp    ecx,eax
100518fe:	jne    0x10051907
10051900:	mov    DWORD PTR [esi+0x30],0x0
10051907:	mov    ecx,DWORD PTR [esi+0x2c]
1005190a:	cmp    ecx,eax
1005190c:	jae    0x10051913
1005190e:	add    ecx,ebp
10051910:	mov    DWORD PTR [esi+0x2c],ecx
10051913:	pop    edi
10051914:	pop    esi
10051915:	xor    eax,eax
10051917:	pop    ebp
10051918:	ret    
10051919:	int3   
1005191a:	int3   
1005191b:	int3   
1005191c:	int3   
1005191d:	int3   
1005191e:	int3   
1005191f:	int3   
10051920:	mov    eax,DWORD PTR [esp+0x4]
10051924:	sub    esp,0x2c
10051927:	test   eax,eax
10051929:	push   edi
1005192a:	je     0x10052e7c
10051930:	mov    edi,DWORD PTR [eax+0x1c]
10051933:	test   edi,edi
10051935:	je     0x10052e7c
1005193b:	cmp    DWORD PTR [eax+0xc],0x0
1005193f:	je     0x10052e7c
10051945:	cmp    DWORD PTR [eax],0x0
10051948:	jne    0x10051954
1005194a:	cmp    DWORD PTR [eax+0x4],0x0
1005194e:	jne    0x10052e7c
10051954:	cmp    DWORD PTR [edi],0xb
10051957:	jne    0x1005195f
10051959:	mov    DWORD PTR [edi],0xc
1005195f:	mov    ecx,DWORD PTR [eax+0xc]
10051962:	mov    edx,DWORD PTR [eax+0x4]
10051965:	push   ebx
10051966:	mov    ebx,DWORD PTR [edi+0x38]
10051969:	push   ebp
1005196a:	mov    ebp,DWORD PTR [eax]
1005196c:	mov    DWORD PTR [esp+0x24],ecx
10051970:	mov    ecx,DWORD PTR [eax+0x10]
10051973:	mov    eax,DWORD PTR [edi]
10051975:	cmp    eax,0x1c
10051978:	push   esi
10051979:	mov    esi,DWORD PTR [edi+0x3c]
1005197c:	mov    DWORD PTR [esp+0x1c],ecx
10051980:	mov    DWORD PTR [esp+0x10],edx
10051984:	mov    DWORD PTR [esp+0x18],ebx
10051988:	mov    DWORD PTR [esp+0x38],edx
1005198c:	mov    DWORD PTR [esp+0x2c],ecx
10051990:	mov    DWORD PTR [esp+0x30],0x0
10051998:	ja     0x10052d29
1005199e:	mov    edi,edi
100519a0:	jmp    DWORD PTR [eax*4+0x10052e88]
100519a7:	cmp    DWORD PTR [edi+0x8],0x0
100519ab:	jne    0x100519b8
100519ad:	mov    DWORD PTR [edi],0xc
100519b3:	jmp    0x10052d1e
100519b8:	cmp    esi,0x10
100519bb:	jae    0x100519e8
100519bd:	lea    ecx,[ecx+0x0]
100519c0:	test   edx,edx
100519c2:	je     0x10052d7c
100519c8:	movzx  eax,BYTE PTR [ebp+0x0]
100519cc:	mov    ecx,esi
100519ce:	shl    eax,cl
100519d0:	sub    edx,0x1
100519d3:	add    esi,0x8
100519d6:	add    ebp,0x1
100519d9:	add    ebx,eax
100519db:	cmp    esi,0x10
100519de:	mov    DWORD PTR [esp+0x10],edx
100519e2:	mov    DWORD PTR [esp+0x18],ebx
100519e6:	jb     0x100519c0
100519e8:	test   BYTE PTR [edi+0x8],0x2
100519ec:	je     0x10051a3b
100519ee:	cmp    ebx,0x8b1f
100519f4:	jne    0x10051a3b
100519f6:	push   0x0
100519f8:	push   0x0
100519fa:	push   0x0
100519fc:	call   0x10054f40
10051a01:	mov    DWORD PTR [edi+0x18],eax
10051a04:	push   0x2
10051a06:	lea    ecx,[esp+0x30]
10051a0a:	mov    BYTE PTR [esp+0x30],0x1f
10051a0f:	mov    BYTE PTR [esp+0x31],0x8b
10051a14:	mov    edx,DWORD PTR [edi+0x18]
10051a17:	push   ecx
10051a18:	push   edx
10051a19:	call   0x10054f40
10051a1e:	mov    edx,DWORD PTR [esp+0x28]
10051a22:	xor    ebx,ebx
10051a24:	add    esp,0x18
10051a27:	mov    DWORD PTR [edi+0x18],eax
10051a2a:	mov    DWORD PTR [esp+0x18],ebx
10051a2e:	xor    esi,esi
10051a30:	mov    DWORD PTR [edi],0x1
10051a36:	jmp    0x10052d1e
10051a3b:	mov    eax,DWORD PTR [edi+0x20]
10051a3e:	test   eax,eax
10051a40:	mov    DWORD PTR [edi+0x10],0x0
10051a47:	je     0x10051a50
10051a49:	mov    DWORD PTR [eax+0x30],0xffffffff
10051a50:	test   BYTE PTR [edi+0x8],0x1
10051a54:	je     0x10051b01
10051a5a:	movzx  eax,bl
10051a5d:	shl    eax,0x8
10051a60:	mov    ecx,ebx
10051a62:	shr    ecx,0x8
10051a65:	add    eax,ecx
10051a67:	xor    edx,edx
10051a69:	mov    ecx,0x1f
10051a6e:	div    ecx
10051a70:	test   edx,edx
10051a72:	jne    0x10051b01
10051a78:	mov    edx,ebx
10051a7a:	and    dl,0xf
10051a7d:	cmp    dl,0x8
10051a80:	je     0x10051a96
10051a82:	mov    eax,DWORD PTR [esp+0x40]
10051a86:	mov    edx,DWORD PTR [esp+0x10]
10051a8a:	mov    DWORD PTR [eax+0x18],0x10067a1c
10051a91:	jmp    0x10052d18
10051a96:	shr    ebx,0x4
10051a99:	mov    ecx,ebx
10051a9b:	and    ecx,0xf
10051a9e:	add    ecx,0x8
10051aa1:	sub    esi,0x4
10051aa4:	cmp    ecx,DWORD PTR [edi+0x24]
10051aa7:	mov    DWORD PTR [esp+0x18],ebx
10051aab:	jbe    0x10051ac1
10051aad:	mov    ecx,DWORD PTR [esp+0x40]
10051ab1:	mov    edx,DWORD PTR [esp+0x10]
10051ab5:	mov    DWORD PTR [ecx+0x18],0x10067a08
10051abc:	jmp    0x10052d18
10051ac1:	mov    edx,0x1
10051ac6:	shl    edx,cl
10051ac8:	push   0x0
10051aca:	push   0x0
10051acc:	push   0x0
10051ace:	mov    DWORD PTR [edi+0x14],edx
10051ad1:	call   0x10052f60
10051ad6:	mov    ecx,DWORD PTR [esp+0x4c]
10051ada:	mov    edx,DWORD PTR [esp+0x1c]
10051ade:	shr    ebx,0x8
10051ae1:	not    ebx
10051ae3:	and    ebx,0x2
10051ae6:	or     ebx,0x9
10051ae9:	mov    DWORD PTR [edi+0x18],eax
10051aec:	mov    DWORD PTR [ecx+0x30],eax
10051aef:	mov    DWORD PTR [edi],ebx
10051af1:	xor    ebx,ebx
10051af3:	add    esp,0xc
10051af6:	mov    DWORD PTR [esp+0x18],ebx
10051afa:	xor    esi,esi
10051afc:	jmp    0x10052d1e
10051b01:	mov    edx,DWORD PTR [esp+0x40]
10051b05:	mov    DWORD PTR [edx+0x18],0x100679f0
10051b0c:	mov    edx,DWORD PTR [esp+0x10]
10051b10:	jmp    0x10052d18
10051b15:	cmp    esi,0x10
10051b18:	jae    0x10051b48
10051b1a:	lea    ebx,[ebx+0x0]
10051b20:	test   edx,edx
10051b22:	je     0x10052d7c
10051b28:	movzx  eax,BYTE PTR [ebp+0x0]
10051b2c:	mov    ecx,esi
10051b2e:	shl    eax,cl
10051b30:	sub    edx,0x1
10051b33:	add    esi,0x8
10051b36:	add    ebp,0x1
10051b39:	add    ebx,eax
10051b3b:	cmp    esi,0x10
10051b3e:	mov    DWORD PTR [esp+0x10],edx
10051b42:	mov    DWORD PTR [esp+0x18],ebx
10051b46:	jb     0x10051b20
10051b48:	cmp    bl,0x8
10051b4b:	mov    DWORD PTR [edi+0x10],ebx
10051b4e:	je     0x10051b60
10051b50:	mov    ecx,DWORD PTR [esp+0x40]
10051b54:	mov    DWORD PTR [ecx+0x18],0x10067a1c
10051b5b:	jmp    0x10052d18
10051b60:	test   ebx,0xe000
10051b66:	je     0x10051b78
10051b68:	mov    eax,DWORD PTR [esp+0x40]
10051b6c:	mov    DWORD PTR [eax+0x18],0x100679d4
10051b73:	jmp    0x10052d18
10051b78:	mov    eax,DWORD PTR [edi+0x20]
10051b7b:	test   eax,eax
10051b7d:	je     0x10051b89
10051b7f:	mov    ecx,ebx
10051b81:	shr    ecx,0x8
10051b84:	and    ecx,0x1
10051b87:	mov    DWORD PTR [eax],ecx
10051b89:	test   DWORD PTR [edi+0x10],0x200
10051b90:	je     0x10051bb7
10051b92:	mov    BYTE PTR [esp+0x20],bl
10051b96:	shr    ebx,0x8
10051b99:	push   0x2
10051b9b:	lea    edx,[esp+0x24]
10051b9f:	mov    BYTE PTR [esp+0x25],bl
10051ba3:	mov    eax,DWORD PTR [edi+0x18]
10051ba6:	push   edx
10051ba7:	push   eax
10051ba8:	call   0x10054f40
10051bad:	mov    edx,DWORD PTR [esp+0x1c]
10051bb1:	add    esp,0xc
10051bb4:	mov    DWORD PTR [edi+0x18],eax
10051bb7:	xor    ebx,ebx
10051bb9:	xor    esi,esi
10051bbb:	mov    DWORD PTR [edi],0x2
10051bc1:	jmp    0x10051bc8
10051bc3:	cmp    esi,0x20
10051bc6:	jae    0x10051bec
10051bc8:	test   edx,edx
10051bca:	je     0x10052d7c
10051bd0:	movzx  eax,BYTE PTR [ebp+0x0]
10051bd4:	mov    ecx,esi
10051bd6:	shl    eax,cl
10051bd8:	sub    edx,0x1
10051bdb:	add    esi,0x8
10051bde:	add    ebp,0x1
10051be1:	add    ebx,eax
10051be3:	cmp    esi,0x20
10051be6:	mov    DWORD PTR [esp+0x10],edx
10051bea:	jb     0x10051bc8
10051bec:	mov    eax,DWORD PTR [edi+0x20]
10051bef:	test   eax,eax
10051bf1:	je     0x10051bf6
10051bf3:	mov    DWORD PTR [eax+0x4],ebx
10051bf6:	test   DWORD PTR [edi+0x10],0x200
10051bfd:	je     0x10051c36
10051bff:	mov    BYTE PTR [esp+0x20],bl
10051c03:	mov    ecx,ebx
10051c05:	mov    edx,ebx
10051c07:	shr    ecx,0x8
10051c0a:	shr    edx,0x10
10051c0d:	shr    ebx,0x18
10051c10:	push   0x4
10051c12:	lea    eax,[esp+0x24]
10051c16:	mov    BYTE PTR [esp+0x25],cl
10051c1a:	mov    BYTE PTR [esp+0x26],dl
10051c1e:	mov    BYTE PTR [esp+0x27],bl
10051c22:	mov    ecx,DWORD PTR [edi+0x18]
10051c25:	push   eax
10051c26:	push   ecx
10051c27:	call   0x10054f40
10051c2c:	mov    edx,DWORD PTR [esp+0x1c]
10051c30:	add    esp,0xc
10051c33:	mov    DWORD PTR [edi+0x18],eax
10051c36:	xor    ebx,ebx
10051c38:	xor    esi,esi
10051c3a:	mov    DWORD PTR [edi],0x3
10051c40:	jmp    0x10051c47
10051c42:	cmp    esi,0x10
10051c45:	jae    0x10051c6b
10051c47:	test   edx,edx
10051c49:	je     0x10052d7c
10051c4f:	movzx  eax,BYTE PTR [ebp+0x0]
10051c53:	mov    ecx,esi
10051c55:	shl    eax,cl
10051c57:	sub    edx,0x1
10051c5a:	add    esi,0x8
10051c5d:	add    ebp,0x1
10051c60:	add    ebx,eax
10051c62:	cmp    esi,0x10
10051c65:	mov    DWORD PTR [esp+0x10],edx
10051c69:	jb     0x10051c47
10051c6b:	mov    eax,DWORD PTR [edi+0x20]
10051c6e:	test   eax,eax
10051c70:	je     0x10051c88
10051c72:	mov    ecx,ebx
10051c74:	and    ecx,0xff
10051c7a:	mov    DWORD PTR [eax+0x8],ecx
10051c7d:	mov    ecx,DWORD PTR [edi+0x20]
10051c80:	mov    eax,ebx
10051c82:	shr    eax,0x8
10051c85:	mov    DWORD PTR [ecx+0xc],eax
10051c88:	test   DWORD PTR [edi+0x10],0x200
10051c8f:	je     0x10051cb6
10051c91:	mov    BYTE PTR [esp+0x20],bl
10051c95:	shr    ebx,0x8
10051c98:	push   0x2
10051c9a:	lea    edx,[esp+0x24]
10051c9e:	mov    BYTE PTR [esp+0x25],bl
10051ca2:	mov    eax,DWORD PTR [edi+0x18]
10051ca5:	push   edx
10051ca6:	push   eax
10051ca7:	call   0x10054f40
10051cac:	mov    edx,DWORD PTR [esp+0x1c]
10051cb0:	add    esp,0xc
10051cb3:	mov    DWORD PTR [edi+0x18],eax
10051cb6:	xor    ebx,ebx
10051cb8:	mov    DWORD PTR [esp+0x18],ebx
10051cbc:	xor    esi,esi
10051cbe:	mov    DWORD PTR [edi],0x4
10051cc4:	test   DWORD PTR [edi+0x10],0x400
10051ccb:	je     0x10051d3b
10051ccd:	cmp    esi,0x10
10051cd0:	jae    0x10051cf6
10051cd2:	test   edx,edx
10051cd4:	je     0x10052d7c
10051cda:	movzx  eax,BYTE PTR [ebp+0x0]
10051cde:	mov    ecx,esi
10051ce0:	shl    eax,cl
10051ce2:	sub    edx,0x1
10051ce5:	add    esi,0x8
10051ce8:	add    ebp,0x1
10051ceb:	add    ebx,eax
10051ced:	cmp    esi,0x10
10051cf0:	mov    DWORD PTR [esp+0x10],edx
10051cf4:	jb     0x10051cd2
10051cf6:	mov    eax,DWORD PTR [edi+0x20]
10051cf9:	test   eax,eax
10051cfb:	mov    DWORD PTR [edi+0x40],ebx
10051cfe:	je     0x10051d03
10051d00:	mov    DWORD PTR [eax+0x14],ebx
10051d03:	test   DWORD PTR [edi+0x10],0x200
10051d0a:	je     0x10051d31
10051d0c:	mov    BYTE PTR [esp+0x20],bl
10051d10:	shr    ebx,0x8
10051d13:	push   0x2
10051d15:	lea    ecx,[esp+0x24]
10051d19:	mov    BYTE PTR [esp+0x25],bl
10051d1d:	mov    edx,DWORD PTR [edi+0x18]
10051d20:	push   ecx
10051d21:	push   edx
10051d22:	call   0x10054f40
10051d27:	mov    edx,DWORD PTR [esp+0x1c]
10051d2b:	add    esp,0xc
10051d2e:	mov    DWORD PTR [edi+0x18],eax
10051d31:	xor    ebx,ebx
10051d33:	mov    DWORD PTR [esp+0x18],ebx
10051d37:	xor    esi,esi
10051d39:	jmp    0x10051d49
10051d3b:	mov    eax,DWORD PTR [edi+0x20]
10051d3e:	test   eax,eax
10051d40:	je     0x10051d49
10051d42:	mov    DWORD PTR [eax+0x10],0x0
10051d49:	mov    DWORD PTR [edi],0x5
10051d4f:	test   DWORD PTR [edi+0x10],0x400
10051d56:	je     0x10051dfe
10051d5c:	mov    eax,DWORD PTR [edi+0x40]
10051d5f:	cmp    eax,edx
10051d61:	mov    DWORD PTR [esp+0x14],eax
10051d65:	jbe    0x10051d6d
10051d67:	mov    eax,edx
10051d69:	mov    DWORD PTR [esp+0x14],edx
10051d6d:	test   eax,eax
10051d6f:	je     0x10051df4
10051d75:	mov    ecx,DWORD PTR [edi+0x20]
10051d78:	test   ecx,ecx
10051d7a:	je     0x10051dc3
10051d7c:	mov    ecx,DWORD PTR [ecx+0x10]
10051d7f:	test   ecx,ecx
10051d81:	mov    DWORD PTR [esp+0x34],ecx
10051d85:	je     0x10051dc3
10051d87:	mov    ecx,DWORD PTR [edi+0x20]
10051d8a:	mov    ecx,DWORD PTR [ecx+0x14]
10051d8d:	sub    ecx,DWORD PTR [edi+0x40]
10051d90:	mov    edx,DWORD PTR [edi+0x20]
10051d93:	mov    edx,DWORD PTR [edx+0x18]
10051d96:	mov    DWORD PTR [esp+0x24],ecx
10051d9a:	add    ecx,eax
10051d9c:	cmp    ecx,edx
10051d9e:	jbe    0x10051da6
10051da0:	sub    edx,DWORD PTR [esp+0x24]
10051da4:	mov    eax,edx
10051da6:	mov    edx,DWORD PTR [esp+0x34]
10051daa:	push   eax
10051dab:	mov    eax,DWORD PTR [esp+0x28]
10051daf:	add    edx,eax
10051db1:	push   ebp
10051db2:	push   edx
10051db3:	call   0x10043ed0
10051db8:	mov    eax,DWORD PTR [esp+0x20]
10051dbc:	mov    edx,DWORD PTR [esp+0x1c]
10051dc0:	add    esp,0xc
10051dc3:	test   DWORD PTR [edi+0x10],0x200
10051dca:	je     0x10051de9
10051dcc:	mov    ecx,DWORD PTR [esp+0x14]
10051dd0:	mov    edx,DWORD PTR [edi+0x18]
10051dd3:	push   ecx
10051dd4:	push   ebp
10051dd5:	push   edx
10051dd6:	call   0x10054f40
10051ddb:	mov    edx,DWORD PTR [esp+0x1c]
10051ddf:	mov    DWORD PTR [edi+0x18],eax
10051de2:	mov    eax,DWORD PTR [esp+0x20]
10051de6:	add    esp,0xc
10051de9:	sub    edx,eax
10051deb:	add    ebp,eax
10051ded:	sub    DWORD PTR [edi+0x40],eax
10051df0:	mov    DWORD PTR [esp+0x10],edx
10051df4:	cmp    DWORD PTR [edi+0x40],0x0
10051df8:	jne    0x10052d7c
10051dfe:	mov    DWORD PTR [edi+0x40],0x0
10051e05:	mov    DWORD PTR [edi],0x6
10051e0b:	test   DWORD PTR [edi+0x10],0x800
10051e12:	je     0x10051ea8
10051e18:	test   edx,edx
10051e1a:	je     0x10052d7c
10051e20:	xor    eax,eax
10051e22:	movzx  ecx,BYTE PTR [eax+ebp*1]
10051e26:	add    eax,0x1
10051e29:	mov    DWORD PTR [esp+0x14],eax
10051e2d:	mov    eax,DWORD PTR [edi+0x20]
10051e30:	test   eax,eax
10051e32:	mov    DWORD PTR [esp+0x24],ecx
10051e36:	je     0x10051e5e
10051e38:	mov    ecx,DWORD PTR [eax+0x1c]
10051e3b:	test   ecx,ecx
10051e3d:	mov    DWORD PTR [esp+0x34],ecx
10051e41:	je     0x10051e5e
10051e43:	mov    ecx,DWORD PTR [edi+0x40]
10051e46:	cmp    ecx,DWORD PTR [eax+0x20]
10051e49:	jae    0x10051e5e
10051e4b:	mov    edx,DWORD PTR [esp+0x34]
10051e4f:	mov    al,BYTE PTR [esp+0x24]
10051e53:	mov    BYTE PTR [edx+ecx*1],al
10051e56:	add    DWORD PTR [edi+0x40],0x1
10051e5a:	mov    edx,DWORD PTR [esp+0x10]
10051e5e:	cmp    DWORD PTR [esp+0x24],0x0
10051e63:	je     0x10051e6d
10051e65:	mov    eax,DWORD PTR [esp+0x14]
10051e69:	cmp    eax,edx
10051e6b:	jb     0x10051e22
10051e6d:	test   DWORD PTR [edi+0x10],0x200
10051e74:	je     0x10051e8f
10051e76:	mov    ecx,DWORD PTR [esp+0x14]
10051e7a:	mov    edx,DWORD PTR [edi+0x18]
10051e7d:	push   ecx
10051e7e:	push   ebp
10051e7f:	push   edx
10051e80:	call   0x10054f40
10051e85:	mov    edx,DWORD PTR [esp+0x1c]
10051e89:	add    esp,0xc
10051e8c:	mov    DWORD PTR [edi+0x18],eax
10051e8f:	mov    eax,DWORD PTR [esp+0x14]
10051e93:	sub    edx,eax
10051e95:	add    ebp,eax
10051e97:	cmp    DWORD PTR [esp+0x24],0x0
10051e9c:	mov    DWORD PTR [esp+0x10],edx
10051ea0:	jne    0x10052d7c
10051ea6:	jmp    0x10051eb6
10051ea8:	mov    eax,DWORD PTR [edi+0x20]
10051eab:	test   eax,eax
10051ead:	je     0x10051eb6
10051eaf:	mov    DWORD PTR [eax+0x1c],0x0
10051eb6:	mov    DWORD PTR [edi+0x40],0x0
10051ebd:	mov    DWORD PTR [edi],0x7
10051ec3:	test   DWORD PTR [edi+0x10],0x1000
10051eca:	je     0x10051f66
10051ed0:	test   edx,edx
10051ed2:	je     0x10052d7c
10051ed8:	xor    eax,eax
10051eda:	lea    ebx,[ebx+0x0]
10051ee0:	movzx  ecx,BYTE PTR [eax+ebp*1]
10051ee4:	add    eax,0x1
10051ee7:	mov    DWORD PTR [esp+0x14],eax
10051eeb:	mov    eax,DWORD PTR [edi+0x20]
10051eee:	test   eax,eax
10051ef0:	mov    DWORD PTR [esp+0x24],ecx
10051ef4:	je     0x10051f1c
10051ef6:	mov    ecx,DWORD PTR [eax+0x24]
10051ef9:	test   ecx,ecx
10051efb:	mov    DWORD PTR [esp+0x34],ecx
10051eff:	je     0x10051f1c
10051f01:	mov    ecx,DWORD PTR [edi+0x40]
10051f04:	cmp    ecx,DWORD PTR [eax+0x28]
10051f07:	jae    0x10051f1c
10051f09:	mov    edx,DWORD PTR [esp+0x34]
10051f0d:	mov    al,BYTE PTR [esp+0x24]
10051f11:	mov    BYTE PTR [edx+ecx*1],al
10051f14:	add    DWORD PTR [edi+0x40],0x1
10051f18:	mov    edx,DWORD PTR [esp+0x10]
10051f1c:	cmp    DWORD PTR [esp+0x24],0x0
10051f21:	je     0x10051f2b
10051f23:	mov    eax,DWORD PTR [esp+0x14]
10051f27:	cmp    eax,edx
10051f29:	jb     0x10051ee0
10051f2b:	test   DWORD PTR [edi+0x10],0x200
10051f32:	je     0x10051f4d
10051f34:	mov    ecx,DWORD PTR [esp+0x14]
10051f38:	mov    edx,DWORD PTR [edi+0x18]
10051f3b:	push   ecx
10051f3c:	push   ebp
10051f3d:	push   edx
10051f3e:	call   0x10054f40
10051f43:	mov    edx,DWORD PTR [esp+0x1c]
10051f47:	add    esp,0xc
10051f4a:	mov    DWORD PTR [edi+0x18],eax
10051f4d:	mov    eax,DWORD PTR [esp+0x14]
10051f51:	sub    edx,eax
10051f53:	add    ebp,eax
10051f55:	cmp    DWORD PTR [esp+0x24],0x0
10051f5a:	mov    DWORD PTR [esp+0x10],edx
10051f5e:	jne    0x10052d7c
10051f64:	jmp    0x10051f74
10051f66:	mov    eax,DWORD PTR [edi+0x20]
10051f69:	test   eax,eax
10051f6b:	je     0x10051f74
10051f6d:	mov    DWORD PTR [eax+0x24],0x0
10051f74:	mov    DWORD PTR [edi],0x8
10051f7a:	test   DWORD PTR [edi+0x10],0x200
10051f81:	je     0x10051fd0
10051f83:	cmp    esi,0x10
10051f86:	jae    0x10051fb0
10051f88:	test   edx,edx
10051f8a:	je     0x10052d7c
10051f90:	movzx  eax,BYTE PTR [ebp+0x0]
10051f94:	mov    ecx,esi
10051f96:	shl    eax,cl
10051f98:	sub    edx,0x1
10051f9b:	add    esi,0x8
10051f9e:	add    ebp,0x1
10051fa1:	add    ebx,eax
10051fa3:	cmp    esi,0x10
10051fa6:	mov    DWORD PTR [esp+0x10],edx
10051faa:	mov    DWORD PTR [esp+0x18],ebx
10051fae:	jb     0x10051f88
10051fb0:	movzx  ecx,WORD PTR [edi+0x18]
10051fb4:	cmp    ebx,ecx
10051fb6:	je     0x10051fc8
10051fb8:	mov    eax,DWORD PTR [esp+0x40]
10051fbc:	mov    DWORD PTR [eax+0x18],0x100679c0
10051fc3:	jmp    0x10052d18
10051fc8:	xor    ebx,ebx
10051fca:	mov    DWORD PTR [esp+0x18],ebx
10051fce:	xor    esi,esi
10051fd0:	mov    eax,DWORD PTR [edi+0x20]
10051fd3:	test   eax,eax
10051fd5:	je     0x10051fed
10051fd7:	mov    ecx,DWORD PTR [edi+0x10]
10051fda:	sar    ecx,0x9
10051fdd:	and    ecx,0x1
10051fe0:	mov    DWORD PTR [eax+0x2c],ecx
10051fe3:	mov    edx,DWORD PTR [edi+0x20]
10051fe6:	mov    DWORD PTR [edx+0x30],0x1
10051fed:	push   0x0
10051fef:	push   0x0
10051ff1:	push   0x0
10051ff3:	call   0x10054f40
10051ff8:	mov    ecx,DWORD PTR [esp+0x4c]
10051ffc:	mov    edx,DWORD PTR [esp+0x1c]
10052000:	mov    DWORD PTR [edi+0x18],eax
10052003:	mov    DWORD PTR [ecx+0x30],eax
10052006:	add    esp,0xc
10052009:	mov    DWORD PTR [edi],0xb
1005200f:	jmp    0x10052d1e
10052014:	cmp    esi,0x20
10052017:	jae    0x10052048
10052019:	lea    esp,[esp+0x0]
10052020:	test   edx,edx
10052022:	je     0x10052d7c
10052028:	movzx  eax,BYTE PTR [ebp+0x0]
1005202c:	mov    ecx,esi
1005202e:	shl    eax,cl
10052030:	sub    edx,0x1
10052033:	add    esi,0x8
10052036:	add    ebp,0x1
10052039:	add    ebx,eax
1005203b:	cmp    esi,0x20
1005203e:	mov    DWORD PTR [esp+0x10],edx
10052042:	mov    DWORD PTR [esp+0x18],ebx
10052046:	jb     0x10052020
10052048:	mov    ecx,ebx
1005204a:	and    ecx,0xff00
10052050:	mov    eax,ebx
10052052:	shl    eax,0x10
10052055:	add    ecx,eax
10052057:	xor    eax,eax
10052059:	mov    ah,BYTE PTR [esp+0x1a]
1005205d:	shl    ecx,0x8
10052060:	shr    ebx,0x18
10052063:	add    ecx,eax
10052065:	lea    eax,[ecx+ebx*1]
10052068:	mov    ecx,DWORD PTR [esp+0x40]
1005206c:	mov    DWORD PTR [edi+0x18],eax
1005206f:	mov    DWORD PTR [ecx+0x30],eax
10052072:	xor    ebx,ebx
10052074:	xor    esi,esi
10052076:	mov    DWORD PTR [edi],0xa
1005207c:	cmp    DWORD PTR [edi+0xc],0x0
10052080:	je     0x10052d36
10052086:	push   0x0
10052088:	push   0x0
1005208a:	push   0x0
1005208c:	call   0x10052f60
10052091:	mov    edx,DWORD PTR [esp+0x4c]
10052095:	mov    DWORD PTR [edi+0x18],eax
10052098:	mov    DWORD PTR [edx+0x30],eax
1005209b:	mov    edx,DWORD PTR [esp+0x1c]
1005209f:	add    esp,0xc
100520a2:	mov    DWORD PTR [edi],0xb
100520a8:	cmp    DWORD PTR [esp+0x44],0x5
100520ad:	je     0x10052d7c
100520b3:	cmp    DWORD PTR [edi+0x4],0x0
100520b7:	je     0x100520d1
100520b9:	mov    ecx,esi
100520bb:	and    ecx,0x7
100520be:	shr    ebx,cl
100520c0:	sub    esi,ecx
100520c2:	mov    DWORD PTR [edi],0x18
100520c8:	mov    DWORD PTR [esp+0x18],ebx
100520cc:	jmp    0x10052d1e
100520d1:	cmp    esi,0x3
100520d4:	jae    0x100520fa
100520d6:	test   edx,edx
100520d8:	je     0x10052d7c
100520de:	movzx  eax,BYTE PTR [ebp+0x0]
100520e2:	mov    ecx,esi
100520e4:	shl    eax,cl
100520e6:	sub    edx,0x1
100520e9:	add    esi,0x8
100520ec:	add    ebp,0x1
100520ef:	add    ebx,eax
100520f1:	cmp    esi,0x3
100520f4:	mov    DWORD PTR [esp+0x10],edx
100520f8:	jb     0x100520d6
100520fa:	mov    ecx,ebx
100520fc:	shr    ebx,1
100520fe:	mov    eax,ebx
10052100:	and    ecx,0x1
10052103:	and    eax,0x3
10052106:	sub    esi,0x1
10052109:	cmp    eax,0x3
1005210c:	mov    DWORD PTR [edi+0x4],ecx
1005210f:	ja     0x1005216f
10052111:	jmp    DWORD PTR [eax*4+0x10052efc]
10052118:	shr    ebx,0x2
1005211b:	mov    DWORD PTR [edi],0xd
10052121:	mov    DWORD PTR [esp+0x18],ebx
10052125:	sub    esi,0x2
10052128:	jmp    0x10052d1e
1005212d:	mov    eax,edi
1005212f:	call   0x10051810
10052134:	shr    ebx,0x2
10052137:	mov    DWORD PTR [edi],0x12
1005213d:	mov    DWORD PTR [esp+0x18],ebx
10052141:	sub    esi,0x2
10052144:	jmp    0x10052d1e
10052149:	shr    ebx,0x2
1005214c:	mov    DWORD PTR [edi],0xf
10052152:	mov    DWORD PTR [esp+0x18],ebx
10052156:	sub    esi,0x2
10052159:	jmp    0x10052d1e
1005215e:	mov    eax,DWORD PTR [esp+0x40]
10052162:	mov    DWORD PTR [eax+0x18],0x100679ac
10052169:	mov    DWORD PTR [edi],0x1b
1005216f:	shr    ebx,0x2
10052172:	mov    DWORD PTR [esp+0x18],ebx
10052176:	sub    esi,0x2
10052179:	jmp    0x10052d1e
1005217e:	mov    ecx,esi
10052180:	and    ecx,0x7
10052183:	shr    ebx,cl
10052185:	sub    esi,ecx
10052187:	cmp    esi,0x20
1005218a:	mov    DWORD PTR [esp+0x18],ebx
1005218e:	jae    0x100521b8
10052190:	test   edx,edx
10052192:	je     0x10052d7c
10052198:	movzx  eax,BYTE PTR [ebp+0x0]
1005219c:	mov    ecx,esi
1005219e:	shl    eax,cl
100521a0:	sub    edx,0x1
100521a3:	add    esi,0x8
100521a6:	add    ebp,0x1
100521a9:	add    ebx,eax
100521ab:	cmp    esi,0x20
100521ae:	mov    DWORD PTR [esp+0x10],edx
100521b2:	mov    DWORD PTR [esp+0x18],ebx
100521b6:	jb     0x10052190
100521b8:	mov    ecx,ebx
100521ba:	mov    eax,ebx
100521bc:	not    ecx
100521be:	and    eax,0xffff
100521c3:	shr    ecx,0x10
100521c6:	cmp    eax,ecx
100521c8:	je     0x100521da
100521ca:	mov    eax,DWORD PTR [esp+0x40]
100521ce:	mov    DWORD PTR [eax+0x18],0x1006798c
100521d5:	jmp    0x10052d18
100521da:	xor    ebx,ebx
100521dc:	mov    DWORD PTR [edi+0x40],eax
100521df:	mov    DWORD PTR [esp+0x18],ebx
100521e3:	xor    esi,esi
100521e5:	mov    DWORD PTR [edi],0xe
100521eb:	mov    eax,DWORD PTR [edi+0x40]
100521ee:	test   eax,eax
100521f0:	mov    DWORD PTR [esp+0x14],eax
100521f4:	je     0x100528ac
100521fa:	cmp    eax,edx
100521fc:	jbe    0x10052204
100521fe:	mov    eax,edx
10052200:	mov    DWORD PTR [esp+0x14],edx
10052204:	mov    ecx,DWORD PTR [esp+0x1c]
10052208:	cmp    eax,ecx
1005220a:	jbe    0x10052212
1005220c:	mov    eax,ecx
1005220e:	mov    DWORD PTR [esp+0x14],eax
10052212:	test   eax,eax
10052214:	je     0x10052d7c
1005221a:	mov    ecx,DWORD PTR [esp+0x14]
1005221e:	mov    edx,DWORD PTR [esp+0x28]
10052222:	push   ecx
10052223:	push   ebp
10052224:	push   edx
10052225:	call   0x10043ed0
1005222a:	mov    eax,DWORD PTR [esp+0x20]
1005222e:	sub    DWORD PTR [esp+0x1c],eax
10052232:	sub    DWORD PTR [esp+0x28],eax
10052236:	add    DWORD PTR [esp+0x34],eax
1005223a:	mov    edx,DWORD PTR [esp+0x1c]
1005223e:	add    esp,0xc
10052241:	add    ebp,eax
10052243:	sub    DWORD PTR [edi+0x40],eax
10052246:	jmp    0x10052d1e
1005224b:	cmp    esi,0xe
1005224e:	jae    0x10052274
10052250:	test   edx,edx
10052252:	je     0x10052d7c
10052258:	movzx  eax,BYTE PTR [ebp+0x0]
1005225c:	mov    ecx,esi
1005225e:	shl    eax,cl
10052260:	sub    edx,0x1
10052263:	add    esi,0x8
10052266:	add    ebp,0x1
10052269:	add    ebx,eax
1005226b:	cmp    esi,0xe
1005226e:	mov    DWORD PTR [esp+0x10],edx
10052272:	jb     0x10052250
10052274:	mov    ecx,ebx
10052276:	and    ecx,0x1f
10052279:	shr    ebx,0x5
1005227c:	add    ecx,0x101
10052282:	mov    eax,ebx
10052284:	mov    DWORD PTR [edi+0x60],ecx
10052287:	shr    ebx,0x5
1005228a:	mov    ecx,ebx
1005228c:	and    eax,0x1f
1005228f:	and    ecx,0xf
10052292:	add    eax,0x1
10052295:	add    ecx,0x4
10052298:	shr    ebx,0x4
1005229b:	sub    esi,0xe
1005229e:	cmp    DWORD PTR [edi+0x60],0x11e
100522a5:	mov    DWORD PTR [edi+0x64],eax
100522a8:	mov    DWORD PTR [edi+0x5c],ecx
100522ab:	mov    DWORD PTR [esp+0x18],ebx
100522af:	ja     0x100523a5
100522b5:	cmp    eax,0x1e
100522b8:	ja     0x100523a5
100522be:	mov    DWORD PTR [edi+0x68],0x0
100522c5:	mov    DWORD PTR [edi],0x10
100522cb:	mov    ecx,DWORD PTR [edi+0x68]
100522ce:	cmp    ecx,DWORD PTR [edi+0x5c]
100522d1:	jae    0x10052328
100522d3:	cmp    esi,0x3
100522d6:	jae    0x100522fc
100522d8:	test   edx,edx
100522da:	je     0x10052d7c
100522e0:	movzx  eax,BYTE PTR [ebp+0x0]
100522e4:	mov    ecx,esi
100522e6:	shl    eax,cl
100522e8:	sub    edx,0x1
100522eb:	add    esi,0x8
100522ee:	add    ebp,0x1
100522f1:	add    ebx,eax
100522f3:	cmp    esi,0x3
100522f6:	mov    DWORD PTR [esp+0x10],edx
100522fa:	jb     0x100522d8
100522fc:	mov    eax,DWORD PTR [edi+0x68]
100522ff:	movzx  eax,WORD PTR [eax*2+0x10067850]
10052307:	movzx  ecx,bl
1005230a:	and    ecx,0x7
1005230d:	mov    WORD PTR [edi+eax*2+0x70],cx
10052312:	add    DWORD PTR [edi+0x68],0x1
10052316:	mov    ecx,DWORD PTR [edi+0x68]
10052319:	shr    ebx,0x3
1005231c:	sub    esi,0x3
1005231f:	cmp    ecx,DWORD PTR [edi+0x5c]
10052322:	mov    DWORD PTR [esp+0x18],ebx
10052326:	jb     0x100522d3
10052328:	cmp    DWORD PTR [edi+0x68],0x13
1005232c:	jae    0x10052359
1005232e:	mov    ecx,0x1
10052333:	xor    eax,eax
10052335:	jmp    0x10052340
10052337:	lea    esp,[esp+0x0]
1005233e:	mov    edi,edi
10052340:	mov    edx,DWORD PTR [edi+0x68]
10052343:	movzx  edx,WORD PTR [edx*2+0x10067850]
1005234b:	mov    WORD PTR [edi+edx*2+0x70],ax
10052350:	add    DWORD PTR [edi+0x68],ecx
10052353:	cmp    DWORD PTR [edi+0x68],0x13
10052357:	jb     0x10052340
10052359:	lea    eax,[edi+0x530]
1005235f:	lea    ecx,[edi+0x6c]
10052362:	mov    DWORD PTR [ecx],eax
10052364:	mov    DWORD PTR [edi+0x4c],eax
10052367:	lea    edx,[edi+0x2f0]
1005236d:	push   edx
1005236e:	lea    eax,[edi+0x54]
10052371:	push   eax
10052372:	push   ecx
10052373:	mov    DWORD PTR [eax],0x7
10052379:	push   0x13
1005237b:	lea    eax,[edi+0x70]
1005237e:	push   eax
1005237f:	push   0x0
10052381:	call   0x10055450
10052386:	mov    edx,DWORD PTR [esp+0x28]
1005238a:	add    esp,0x18
1005238d:	test   eax,eax
1005238f:	mov    DWORD PTR [esp+0x30],eax
10052393:	je     0x100523b5
10052395:	mov    ecx,DWORD PTR [esp+0x40]
10052399:	mov    DWORD PTR [ecx+0x18],0x10067970
100523a0:	jmp    0x10052d18
100523a5:	mov    eax,DWORD PTR [esp+0x40]
100523a9:	mov    DWORD PTR [eax+0x18],0x1006794c
100523b0:	jmp    0x10052d18
100523b5:	mov    DWORD PTR [edi+0x68],0x0
100523bc:	mov    DWORD PTR [edi],0x11
100523c2:	mov    eax,DWORD PTR [edi+0x64]
100523c5:	add    eax,DWORD PTR [edi+0x60]
100523c8:	cmp    DWORD PTR [edi+0x68],eax
100523cb:	jae    0x10052609
100523d1:	mov    ecx,DWORD PTR [edi+0x54]
100523d4:	mov    eax,0x1
100523d9:	shl    eax,cl
100523db:	mov    ecx,DWORD PTR [edi+0x4c]
100523de:	sub    eax,0x1
100523e1:	and    eax,ebx
100523e3:	mov    eax,DWORD PTR [ecx+eax*4]
100523e6:	mov    ecx,eax
100523e8:	shr    ecx,0x8
100523eb:	movzx  ecx,cl
100523ee:	cmp    ecx,esi
100523f0:	mov    DWORD PTR [esp+0x14],eax
100523f4:	jbe    0x1005243a
100523f6:	test   edx,edx
100523f8:	je     0x10052d7c
100523fe:	movzx  eax,BYTE PTR [ebp+0x0]
10052402:	mov    ecx,esi
10052404:	shl    eax,cl
10052406:	mov    ecx,DWORD PTR [edi+0x54]
10052409:	sub    edx,0x1
1005240c:	add    esi,0x8
1005240f:	add    ebx,eax
10052411:	mov    eax,0x1
10052416:	shl    eax,cl
10052418:	mov    ecx,DWORD PTR [edi+0x4c]
1005241b:	add    ebp,0x1
1005241e:	mov    DWORD PTR [esp+0x10],edx
10052422:	sub    eax,0x1
10052425:	and    eax,ebx
10052427:	mov    eax,DWORD PTR [ecx+eax*4]
1005242a:	mov    ecx,eax
1005242c:	shr    ecx,0x8
1005242f:	movzx  ecx,cl
10052432:	cmp    ecx,esi
10052434:	mov    DWORD PTR [esp+0x14],eax
10052438:	ja     0x100523f6
1005243a:	mov    ecx,eax
1005243c:	shr    ecx,0x10
1005243f:	cmp    ecx,0x10
10052442:	jae    0x1005249b
10052444:	mov    ecx,eax
10052446:	shr    ecx,0x8
10052449:	movzx  ecx,cl
1005244c:	cmp    esi,ecx
1005244e:	jae    0x1005247a
10052450:	test   edx,edx
10052452:	je     0x10052d7c
10052458:	movzx  eax,BYTE PTR [ebp+0x0]
1005245c:	mov    ecx,esi
1005245e:	shl    eax,cl
10052460:	sub    edx,0x1
10052463:	add    esi,0x8
10052466:	add    ebp,0x1
10052469:	add    ebx,eax
1005246b:	mov    eax,DWORD PTR [esp+0x14]
1005246f:	movzx  ecx,ah
10052472:	cmp    esi,ecx
10052474:	mov    DWORD PTR [esp+0x10],edx
10052478:	jb     0x10052450
1005247a:	movzx  ecx,ah
1005247d:	mov    eax,DWORD PTR [edi+0x68]
10052480:	shr    ebx,cl
10052482:	sub    esi,ecx
10052484:	mov    cx,WORD PTR [esp+0x16]
10052489:	mov    WORD PTR [edi+eax*2+0x70],cx
1005248e:	add    DWORD PTR [edi+0x68],0x1
10052492:	mov    DWORD PTR [esp+0x18],ebx
10052496:	jmp    0x100525fa
1005249b:	mov    cx,WORD PTR [esp+0x16]
100524a0:	cmp    cx,0x10
100524a4:	jne    0x10052511
100524a6:	movzx  ecx,ah
100524a9:	lea    eax,[ecx+0x2]
100524ac:	cmp    esi,eax
100524ae:	mov    DWORD PTR [esp+0x24],ecx
100524b2:	jae    0x100524de
100524b4:	test   edx,edx
100524b6:	je     0x10052d7c
100524bc:	movzx  eax,BYTE PTR [ebp+0x0]
100524c0:	mov    ecx,esi
100524c2:	shl    eax,cl
100524c4:	mov    ecx,DWORD PTR [esp+0x24]
100524c8:	sub    edx,0x1
100524cb:	add    esi,0x8
100524ce:	add    ebx,eax
100524d0:	lea    eax,[ecx+0x2]
100524d3:	add    ebp,0x1
100524d6:	cmp    esi,eax
100524d8:	mov    DWORD PTR [esp+0x10],edx
100524dc:	jb     0x100524b4
100524de:	mov    eax,DWORD PTR [edi+0x68]
100524e1:	shr    ebx,cl
100524e3:	sub    esi,ecx
100524e5:	test   eax,eax
100524e7:	mov    DWORD PTR [esp+0x18],ebx
100524eb:	je     0x10052660
100524f1:	movzx  ecx,WORD PTR [edi+eax*2+0x6e]
100524f6:	mov    eax,ebx
100524f8:	and    eax,0x3
100524fb:	add    eax,0x3
100524fe:	shr    ebx,0x2
10052501:	mov    DWORD PTR [esp+0x24],ecx
10052505:	mov    DWORD PTR [esp+0x14],eax
10052509:	sub    esi,0x2
1005250c:	jmp    0x100525c0
10052511:	cmp    cx,0x11
10052515:	movzx  ecx,ah
10052518:	mov    DWORD PTR [esp+0x24],ecx
1005251c:	jne    0x10052567
1005251e:	lea    eax,[ecx+0x3]
10052521:	cmp    esi,eax
10052523:	jae    0x1005254f
10052525:	test   edx,edx
10052527:	je     0x10052d7c
1005252d:	movzx  eax,BYTE PTR [ebp+0x0]
10052531:	mov    ecx,esi
10052533:	shl    eax,cl
10052535:	mov    ecx,DWORD PTR [esp+0x24]
10052539:	sub    edx,0x1
1005253c:	add    esi,0x8
1005253f:	add    ebx,eax
10052541:	lea    eax,[ecx+0x3]
10052544:	add    ebp,0x1
10052547:	cmp    esi,eax
10052549:	mov    DWORD PTR [esp+0x10],edx
1005254d:	jb     0x10052525
1005254f:	shr    ebx,cl
10052551:	mov    eax,ebx
10052553:	and    eax,0x7
10052556:	add    eax,0x3
10052559:	mov    DWORD PTR [esp+0x14],eax
1005255d:	shr    ebx,0x3
10052560:	mov    eax,0xfffffffd
10052565:	jmp    0x100525b0
10052567:	lea    eax,[ecx+0x7]
1005256a:	cmp    esi,eax
1005256c:	jae    0x1005259a
1005256e:	mov    edi,edi
10052570:	test   edx,edx
10052572:	je     0x10052d7c
10052578:	movzx  eax,BYTE PTR [ebp+0x0]
1005257c:	mov    ecx,esi
1005257e:	shl    eax,cl
10052580:	mov    ecx,DWORD PTR [esp+0x24]
10052584:	sub    edx,0x1
10052587:	add    esi,0x8
1005258a:	add    ebx,eax
1005258c:	lea    eax,[ecx+0x7]
1005258f:	add    ebp,0x1
10052592:	cmp    esi,eax
10052594:	mov    DWORD PTR [esp+0x10],edx
10052598:	jb     0x10052570
1005259a:	shr    ebx,cl
1005259c:	mov    eax,ebx
1005259e:	and    eax,0x7f
100525a1:	add    eax,0xb
100525a4:	mov    DWORD PTR [esp+0x14],eax
100525a8:	shr    ebx,0x7
100525ab:	mov    eax,0xfffffff9
100525b0:	sub    eax,ecx
100525b2:	add    esi,eax
100525b4:	mov    eax,DWORD PTR [esp+0x14]
100525b8:	mov    DWORD PTR [esp+0x24],0x0
100525c0:	mov    ecx,DWORD PTR [edi+0x68]
100525c3:	add    ecx,eax
100525c5:	mov    eax,DWORD PTR [edi+0x64]
100525c8:	add    eax,DWORD PTR [edi+0x60]
100525cb:	mov    DWORD PTR [esp+0x18],ebx
100525cf:	cmp    ecx,eax
100525d1:	ja     0x10052670
100525d7:	cmp    DWORD PTR [esp+0x14],0x0
100525dc:	je     0x100525fa
100525de:	mov    eax,DWORD PTR [esp+0x24]
100525e2:	mov    ecx,DWORD PTR [edi+0x68]
100525e5:	sub    DWORD PTR [esp+0x14],0x1
100525ea:	mov    WORD PTR [edi+ecx*2+0x70],ax
100525ef:	add    DWORD PTR [edi+0x68],0x1
100525f3:	cmp    DWORD PTR [esp+0x14],0x0
100525f8:	jne    0x100525e2
100525fa:	mov    eax,DWORD PTR [edi+0x64]
100525fd:	add    eax,DWORD PTR [edi+0x60]
10052600:	cmp    DWORD PTR [edi+0x68],eax
10052603:	jb     0x100523d1
10052609:	cmp    DWORD PTR [edi],0x1b
1005260c:	je     0x10052d1e
10052612:	lea    eax,[edi+0x530]
10052618:	lea    ecx,[edi+0x6c]
1005261b:	mov    DWORD PTR [ecx],eax
1005261d:	lea    edx,[edi+0x2f0]
10052623:	push   edx
10052624:	mov    DWORD PTR [edi+0x4c],eax
10052627:	lea    eax,[edi+0x54]
1005262a:	push   eax
1005262b:	push   ecx
1005262c:	mov    ecx,DWORD PTR [edi+0x60]
1005262f:	push   ecx
10052630:	lea    edx,[edi+0x70]
10052633:	push   edx
10052634:	push   0x1
10052636:	mov    DWORD PTR [eax],0x9
1005263c:	call   0x10055450
10052641:	add    esp,0x18
10052644:	test   eax,eax
10052646:	mov    DWORD PTR [esp+0x30],eax
1005264a:	je     0x10052680
1005264c:	mov    eax,DWORD PTR [esp+0x40]
10052650:	mov    edx,DWORD PTR [esp+0x10]
10052654:	mov    DWORD PTR [eax+0x18],0x10067930
1005265b:	jmp    0x10052d18
10052660:	mov    ecx,DWORD PTR [esp+0x40]
10052664:	mov    DWORD PTR [ecx+0x18],0x10067914
1005266b:	jmp    0x10052d18
10052670:	mov    eax,DWORD PTR [esp+0x40]
10052674:	mov    DWORD PTR [eax+0x18],0x10067914
1005267b:	jmp    0x10052d18
10052680:	mov    edx,DWORD PTR [edi+0x6c]
10052683:	lea    ecx,[edi+0x6c]
10052686:	mov    DWORD PTR [edi+0x50],edx
10052689:	lea    edx,[edi+0x2f0]
1005268f:	push   edx
10052690:	lea    eax,[edi+0x58]
10052693:	push   eax
10052694:	push   ecx
10052695:	mov    ecx,DWORD PTR [edi+0x60]
10052698:	mov    DWORD PTR [eax],0x6
1005269e:	mov    eax,DWORD PTR [edi+0x64]
100526a1:	push   eax
100526a2:	lea    edx,[edi+ecx*2+0x70]
100526a6:	push   edx
100526a7:	push   0x2
100526a9:	call   0x10055450
100526ae:	mov    edx,DWORD PTR [esp+0x28]
100526b2:	add    esp,0x18
100526b5:	test   eax,eax
100526b7:	mov    DWORD PTR [esp+0x30],eax
100526bb:	je     0x100526cd
100526bd:	mov    eax,DWORD PTR [esp+0x40]
100526c1:	mov    DWORD PTR [eax+0x18],0x100678fc
100526c8:	jmp    0x10052d18
100526cd:	mov    DWORD PTR [edi],0x12
100526d3:	cmp    edx,0x6
100526d6:	jb     0x10052741
100526dc:	cmp    DWORD PTR [esp+0x1c],0x102
100526e4:	jb     0x10052741
100526e6:	mov    eax,DWORD PTR [esp+0x40]
100526ea:	mov    edx,DWORD PTR [esp+0x1c]
100526ee:	mov    ecx,DWORD PTR [esp+0x28]
100526f2:	mov    DWORD PTR [eax+0x10],edx
100526f5:	mov    edx,DWORD PTR [esp+0x2c]
100526f9:	mov    DWORD PTR [eax+0xc],ecx
100526fc:	mov    ecx,DWORD PTR [esp+0x10]
10052700:	push   edx
10052701:	mov    DWORD PTR [eax],ebp
10052703:	mov    DWORD PTR [eax+0x4],ecx
10052706:	push   eax
10052707:	mov    DWORD PTR [edi+0x38],ebx
1005270a:	mov    DWORD PTR [edi+0x3c],esi
1005270d:	call   0x10054f90
10052712:	mov    eax,DWORD PTR [esp+0x48]
10052716:	mov    edx,DWORD PTR [eax+0x10]
10052719:	mov    ecx,DWORD PTR [eax+0xc]
1005271c:	mov    ebp,DWORD PTR [eax]
1005271e:	mov    eax,DWORD PTR [eax+0x4]
10052721:	mov    ebx,DWORD PTR [edi+0x38]
10052724:	mov    esi,DWORD PTR [edi+0x3c]
10052727:	mov    DWORD PTR [esp+0x24],edx
1005272b:	add    esp,0x8
1005272e:	mov    DWORD PTR [esp+0x28],ecx
10052732:	mov    DWORD PTR [esp+0x10],eax
10052736:	mov    DWORD PTR [esp+0x18],ebx
1005273a:	mov    edx,eax
1005273c:	jmp    0x10052d1e
10052741:	mov    ecx,DWORD PTR [edi+0x54]
10052744:	mov    eax,0x1
10052749:	shl    eax,cl
1005274b:	sub    eax,0x1
1005274e:	and    eax,ebx
10052750:	mov    ecx,eax
10052752:	mov    eax,DWORD PTR [edi+0x4c]
10052755:	mov    eax,DWORD PTR [eax+ecx*4]
10052758:	mov    ecx,eax
1005275a:	shr    ecx,0x8
1005275d:	movzx  ecx,cl
10052760:	cmp    ecx,esi
10052762:	mov    DWORD PTR [esp+0x14],eax
10052766:	jbe    0x100527ac
10052768:	test   edx,edx
1005276a:	je     0x10052d7c
10052770:	movzx  eax,BYTE PTR [ebp+0x0]
10052774:	mov    ecx,esi
10052776:	shl    eax,cl
10052778:	mov    ecx,DWORD PTR [edi+0x54]
1005277b:	sub    edx,0x1
1005277e:	add    esi,0x8
10052781:	add    ebx,eax
10052783:	mov    eax,0x1
10052788:	shl    eax,cl
1005278a:	mov    ecx,DWORD PTR [edi+0x4c]
1005278d:	add    ebp,0x1
10052790:	mov    DWORD PTR [esp+0x10],edx
10052794:	sub    eax,0x1
10052797:	and    eax,ebx
10052799:	mov    eax,DWORD PTR [ecx+eax*4]
1005279c:	mov    ecx,eax
1005279e:	shr    ecx,0x8
100527a1:	movzx  ecx,cl
100527a4:	cmp    ecx,esi
100527a6:	mov    DWORD PTR [esp+0x14],eax
100527aa:	ja     0x10052768
100527ac:	test   al,al
100527ae:	je     0x1005287d
100527b4:	test   al,0xf0
100527b6:	jne    0x1005287d
100527bc:	mov    ecx,eax
100527be:	shr    ecx,0x8
100527c1:	mov    DWORD PTR [esp+0x34],ecx
100527c5:	movzx  ecx,cl
100527c8:	mov    DWORD PTR [esp+0x24],ecx
100527cc:	movzx  ecx,al
100527cf:	add    ecx,DWORD PTR [esp+0x24]
100527d3:	mov    DWORD PTR [esp+0x18],eax
100527d7:	mov    eax,0x1
100527dc:	shl    eax,cl
100527de:	mov    ecx,DWORD PTR [esp+0x24]
100527e2:	sub    eax,0x1
100527e5:	and    eax,ebx
100527e7:	shr    eax,cl
100527e9:	mov    ecx,DWORD PTR [esp+0x14]
100527ed:	shr    ecx,0x10
100527f0:	add    eax,ecx
100527f2:	mov    ecx,eax
100527f4:	mov    eax,DWORD PTR [edi+0x4c]
100527f7:	mov    eax,DWORD PTR [eax+ecx*4]
100527fa:	movzx  ecx,BYTE PTR [esp+0x34]
100527ff:	mov    DWORD PTR [esp+0x14],eax
10052803:	shr    eax,0x8
10052806:	movzx  eax,al
10052809:	add    eax,ecx
1005280b:	cmp    eax,esi
1005280d:	jbe    0x10052870
10052813:	test   edx,edx
10052815:	je     0x10052d7c
1005281b:	movzx  eax,BYTE PTR [ebp+0x0]
1005281f:	mov    ecx,esi
10052821:	shl    eax,cl
10052823:	mov    ecx,DWORD PTR [esp+0x18]
10052827:	sub    edx,0x1
1005282a:	add    esi,0x8
1005282d:	add    ebx,eax
1005282f:	movzx  eax,ch
10052832:	add    ecx,eax
10052834:	mov    DWORD PTR [esp+0x24],eax
10052838:	mov    eax,0x1
1005283d:	shl    eax,cl
1005283f:	mov    ecx,DWORD PTR [esp+0x24]
10052843:	add    ebp,0x1
10052846:	mov    DWORD PTR [esp+0x10],edx
1005284a:	sub    eax,0x1
1005284d:	and    eax,ebx
1005284f:	shr    eax,cl
10052851:	movzx  ecx,WORD PTR [esp+0x1a]
10052856:	add    eax,ecx
10052858:	mov    ecx,DWORD PTR [edi+0x4c]
1005285b:	mov    eax,DWORD PTR [ecx+eax*4]
1005285e:	mov    DWORD PTR [esp+0x14],eax
10052862:	shr    eax,0x8
10052865:	movzx  eax,al
10052868:	add    eax,DWORD PTR [esp+0x24]
1005286c:	cmp    eax,esi
1005286e:	ja     0x10052813
10052870:	movzx  ecx,BYTE PTR [esp+0x19]
10052875:	mov    eax,DWORD PTR [esp+0x14]
10052879:	shr    ebx,cl
1005287b:	sub    esi,ecx
1005287d:	mov    ecx,eax
1005287f:	shr    ecx,0x8
10052882:	movzx  ecx,cl
10052885:	shr    ebx,cl
10052887:	sub    esi,ecx
10052889:	mov    DWORD PTR [esp+0x24],ecx
1005288d:	mov    ecx,eax
1005288f:	shr    ecx,0x10
10052892:	test   al,al
10052894:	mov    DWORD PTR [esp+0x18],ebx
10052898:	mov    DWORD PTR [edi+0x40],ecx
1005289b:	jne    0x100528a8
1005289d:	mov    DWORD PTR [edi],0x17
100528a3:	jmp    0x10052d1e
100528a8:	test   al,0x20
100528aa:	je     0x100528b7
100528ac:	mov    DWORD PTR [edi],0xb
100528b2:	jmp    0x10052d1e
100528b7:	test   al,0x40
100528b9:	je     0x100528cb
100528bb:	mov    eax,DWORD PTR [esp+0x40]
100528bf:	mov    DWORD PTR [eax+0x18],0x100678e0
100528c6:	jmp    0x10052d18
100528cb:	and    eax,0xf
100528ce:	mov    DWORD PTR [edi+0x48],eax
100528d1:	mov    DWORD PTR [edi],0x13
100528d7:	mov    eax,DWORD PTR [edi+0x48]
100528da:	test   eax,eax
100528dc:	je     0x1005291c
100528de:	cmp    esi,eax
100528e0:	jae    0x10052906
100528e2:	test   edx,edx
100528e4:	je     0x10052d7c
100528ea:	movzx  eax,BYTE PTR [ebp+0x0]
100528ee:	mov    ecx,esi
100528f0:	shl    eax,cl
100528f2:	sub    edx,0x1
100528f5:	add    esi,0x8
100528f8:	add    ebp,0x1
100528fb:	add    ebx,eax
100528fd:	cmp    esi,DWORD PTR [edi+0x48]
10052900:	mov    DWORD PTR [esp+0x10],edx
10052904:	jb     0x100528e2
10052906:	mov    ecx,DWORD PTR [edi+0x48]
10052909:	mov    eax,0x1
1005290e:	shl    eax,cl
10052910:	sub    eax,0x1
10052913:	and    eax,ebx
10052915:	add    DWORD PTR [edi+0x40],eax
10052918:	shr    ebx,cl
1005291a:	sub    esi,ecx
1005291c:	mov    DWORD PTR [edi],0x14
10052922:	mov    ecx,DWORD PTR [edi+0x58]
10052925:	mov    eax,0x1
1005292a:	shl    eax,cl
1005292c:	sub    eax,0x1
1005292f:	and    eax,ebx
10052931:	mov    ecx,eax
10052933:	mov    eax,DWORD PTR [edi+0x50]
10052936:	mov    eax,DWORD PTR [eax+ecx*4]
10052939:	mov    ecx,eax
1005293b:	shr    ecx,0x8
1005293e:	movzx  ecx,cl
10052941:	cmp    ecx,esi
10052943:	mov    DWORD PTR [esp+0x14],eax
10052947:	jbe    0x10052994
10052949:	lea    esp,[esp+0x0]
10052950:	test   edx,edx
10052952:	je     0x10052d7c
10052958:	movzx  eax,BYTE PTR [ebp+0x0]
1005295c:	mov    ecx,esi
1005295e:	shl    eax,cl
10052960:	mov    ecx,DWORD PTR [edi+0x58]
10052963:	sub    edx,0x1
10052966:	add    esi,0x8
10052969:	add    ebx,eax
1005296b:	mov    eax,0x1
10052970:	shl    eax,cl
10052972:	mov    ecx,DWORD PTR [edi+0x50]
10052975:	add    ebp,0x1
10052978:	mov    DWORD PTR [esp+0x10],edx
1005297c:	sub    eax,0x1
1005297f:	and    eax,ebx
10052981:	mov    eax,DWORD PTR [ecx+eax*4]
10052984:	mov    ecx,eax
10052986:	shr    ecx,0x8
10052989:	movzx  ecx,cl
1005298c:	cmp    ecx,esi
1005298e:	mov    DWORD PTR [esp+0x14],eax
10052992:	ja     0x10052950
10052994:	test   al,0xf0
10052996:	jne    0x10052a5d
1005299c:	mov    ecx,eax
1005299e:	shr    ecx,0x8
100529a1:	mov    DWORD PTR [esp+0x34],ecx
100529a5:	movzx  ecx,cl
100529a8:	mov    DWORD PTR [esp+0x24],ecx
100529ac:	movzx  ecx,al
100529af:	add    ecx,DWORD PTR [esp+0x24]
100529b3:	mov    DWORD PTR [esp+0x18],eax
100529b7:	mov    eax,0x1
100529bc:	shl    eax,cl
100529be:	mov    ecx,DWORD PTR [esp+0x24]
100529c2:	sub    eax,0x1
100529c5:	and    eax,ebx
100529c7:	shr    eax,cl
100529c9:	mov    ecx,DWORD PTR [esp+0x14]
100529cd:	shr    ecx,0x10
100529d0:	add    eax,ecx
100529d2:	mov    ecx,eax
100529d4:	mov    eax,DWORD PTR [edi+0x50]
100529d7:	mov    eax,DWORD PTR [eax+ecx*4]
100529da:	movzx  ecx,BYTE PTR [esp+0x34]
100529df:	mov    DWORD PTR [esp+0x14],eax
100529e3:	shr    eax,0x8
100529e6:	movzx  eax,al
100529e9:	add    eax,ecx
100529eb:	cmp    eax,esi
100529ed:	jbe    0x10052a50
100529f3:	test   edx,edx
100529f5:	je     0x10052d7c
100529fb:	movzx  eax,BYTE PTR [ebp+0x0]
100529ff:	mov    ecx,esi
10052a01:	shl    eax,cl
10052a03:	mov    ecx,DWORD PTR [esp+0x18]
10052a07:	sub    edx,0x1
10052a0a:	add    esi,0x8
10052a0d:	add    ebx,eax
10052a0f:	movzx  eax,ch
10052a12:	add    ecx,eax
10052a14:	mov    DWORD PTR [esp+0x24],eax
10052a18:	mov    eax,0x1
10052a1d:	shl    eax,cl
10052a1f:	mov    ecx,DWORD PTR [esp+0x24]
10052a23:	add    ebp,0x1
10052a26:	mov    DWORD PTR [esp+0x10],edx
10052a2a:	sub    eax,0x1
10052a2d:	and    eax,ebx
10052a2f:	shr    eax,cl
10052a31:	movzx  ecx,WORD PTR [esp+0x1a]
10052a36:	add    eax,ecx
10052a38:	mov    ecx,DWORD PTR [edi+0x50]
10052a3b:	mov    eax,DWORD PTR [ecx+eax*4]
10052a3e:	mov    DWORD PTR [esp+0x14],eax
10052a42:	shr    eax,0x8
10052a45:	movzx  eax,al
10052a48:	add    eax,DWORD PTR [esp+0x24]
10052a4c:	cmp    eax,esi
10052a4e:	ja     0x100529f3
10052a50:	movzx  ecx,BYTE PTR [esp+0x19]
10052a55:	mov    eax,DWORD PTR [esp+0x14]
10052a59:	shr    ebx,cl
10052a5b:	sub    esi,ecx
10052a5d:	mov    ecx,eax
10052a5f:	shr    ecx,0x8
10052a62:	movzx  ecx,cl
10052a65:	shr    ebx,cl
10052a67:	sub    esi,ecx
10052a69:	test   al,0x40
10052a6b:	mov    DWORD PTR [esp+0x24],ecx
10052a6f:	mov    DWORD PTR [esp+0x18],ebx
10052a73:	je     0x10052a85
10052a75:	mov    eax,DWORD PTR [esp+0x40]
10052a79:	mov    DWORD PTR [eax+0x18],0x100678c8
10052a80:	jmp    0x10052d18
10052a85:	mov    ecx,eax
10052a87:	shr    ecx,0x10
10052a8a:	and    eax,0xf
10052a8d:	mov    DWORD PTR [edi+0x44],ecx
10052a90:	mov    DWORD PTR [edi+0x48],eax
10052a93:	mov    DWORD PTR [edi],0x15
10052a99:	mov    eax,DWORD PTR [edi+0x48]
10052a9c:	test   eax,eax
10052a9e:	je     0x10052ae2
10052aa0:	cmp    esi,eax
10052aa2:	jae    0x10052ac8
10052aa4:	test   edx,edx
10052aa6:	je     0x10052d7c
10052aac:	movzx  eax,BYTE PTR [ebp+0x0]
10052ab0:	mov    ecx,esi
10052ab2:	shl    eax,cl
10052ab4:	sub    edx,0x1
10052ab7:	add    esi,0x8
10052aba:	add    ebp,0x1
10052abd:	add    ebx,eax
10052abf:	cmp    esi,DWORD PTR [edi+0x48]
10052ac2:	mov    DWORD PTR [esp+0x10],edx
10052ac6:	jb     0x10052aa4
10052ac8:	mov    ecx,DWORD PTR [edi+0x48]
10052acb:	mov    eax,0x1
10052ad0:	shl    eax,cl
10052ad2:	sub    eax,0x1
10052ad5:	and    eax,ebx
10052ad7:	add    DWORD PTR [edi+0x44],eax
10052ada:	shr    ebx,cl
10052adc:	sub    esi,ecx
10052ade:	mov    DWORD PTR [esp+0x18],ebx
10052ae2:	mov    ecx,DWORD PTR [edi+0x2c]
10052ae5:	sub    ecx,DWORD PTR [esp+0x1c]
10052ae9:	add    ecx,DWORD PTR [esp+0x2c]
10052aed:	cmp    DWORD PTR [edi+0x44],ecx
10052af0:	jbe    0x10052b02
10052af2:	mov    eax,DWORD PTR [esp+0x40]
10052af6:	mov    DWORD PTR [eax+0x18],0x100678a8
10052afd:	jmp    0x10052d18
10052b02:	mov    DWORD PTR [edi],0x16
10052b08:	cmp    DWORD PTR [esp+0x1c],0x0
10052b0d:	je     0x10052d7c
10052b13:	mov    ecx,DWORD PTR [esp+0x2c]
10052b17:	sub    ecx,DWORD PTR [esp+0x1c]
10052b1b:	mov    eax,DWORD PTR [edi+0x44]
10052b1e:	cmp    eax,ecx
10052b20:	jbe    0x10052b5e
10052b22:	sub    eax,ecx
10052b24:	mov    ecx,DWORD PTR [edi+0x30]
10052b27:	cmp    eax,ecx
10052b29:	mov    DWORD PTR [esp+0x14],eax
10052b2d:	jbe    0x10052b3f
10052b2f:	sub    eax,ecx
10052b31:	mov    ecx,DWORD PTR [edi+0x34]
10052b34:	add    ecx,DWORD PTR [edi+0x28]
10052b37:	mov    DWORD PTR [esp+0x14],eax
10052b3b:	sub    ecx,eax
10052b3d:	jmp    0x10052b4b
10052b3f:	mov    ecx,DWORD PTR [edi+0x34]
10052b42:	sub    ecx,eax
10052b44:	add    ecx,DWORD PTR [edi+0x30]
10052b47:	mov    eax,DWORD PTR [esp+0x14]
10052b4b:	mov    DWORD PTR [esp+0x24],ecx
10052b4f:	mov    ecx,DWORD PTR [edi+0x40]
10052b52:	cmp    eax,ecx
10052b54:	mov    DWORD PTR [esp+0x34],ecx
10052b58:	jbe    0x10052b73
10052b5a:	mov    eax,ecx
10052b5c:	jmp    0x10052b6f
10052b5e:	mov    ecx,DWORD PTR [esp+0x28]
10052b62:	sub    ecx,eax
10052b64:	mov    eax,DWORD PTR [edi+0x40]
10052b67:	mov    DWORD PTR [esp+0x24],ecx
10052b6b:	mov    DWORD PTR [esp+0x34],eax
10052b6f:	mov    DWORD PTR [esp+0x14],eax
10052b73:	mov    ecx,DWORD PTR [esp+0x1c]
10052b77:	cmp    eax,ecx
10052b79:	jbe    0x10052b81
10052b7b:	mov    eax,ecx
10052b7d:	mov    DWORD PTR [esp+0x14],eax
10052b81:	sub    ecx,eax
10052b83:	mov    DWORD PTR [esp+0x1c],ecx
10052b87:	mov    ecx,DWORD PTR [esp+0x34]
10052b8b:	sub    ecx,eax
10052b8d:	mov    eax,DWORD PTR [esp+0x28]
10052b91:	mov    DWORD PTR [edi+0x40],ecx
10052b94:	mov    ecx,DWORD PTR [esp+0x24]
10052b98:	mov    cl,BYTE PTR [ecx]
10052b9a:	add    DWORD PTR [esp+0x24],0x1
10052b9f:	mov    BYTE PTR [eax],cl
10052ba1:	add    eax,0x1
10052ba4:	sub    DWORD PTR [esp+0x14],0x1
10052ba9:	jne    0x10052b94
10052bab:	cmp    DWORD PTR [edi+0x40],0x0
10052baf:	mov    DWORD PTR [esp+0x28],eax
10052bb3:	jne    0x10052d1e
10052bb9:	mov    DWORD PTR [edi],0x12
10052bbf:	jmp    0x10052d1e
10052bc4:	cmp    DWORD PTR [esp+0x1c],0x0
10052bc9:	je     0x10052d7c
10052bcf:	mov    eax,DWORD PTR [esp+0x28]
10052bd3:	mov    cl,BYTE PTR [edi+0x40]
10052bd6:	mov    BYTE PTR [eax],cl
10052bd8:	add    eax,0x1
10052bdb:	sub    DWORD PTR [esp+0x1c],0x1
10052be0:	mov    DWORD PTR [esp+0x28],eax
10052be4:	mov    DWORD PTR [edi],0x12
10052bea:	jmp    0x10052d1e
10052bef:	cmp    DWORD PTR [edi+0x8],0x0
10052bf3:	je     0x10052cbc
10052bf9:	cmp    esi,0x20
10052bfc:	jae    0x10052c28
10052bfe:	mov    edi,edi
10052c00:	test   edx,edx
10052c02:	je     0x10052d7c
10052c08:	movzx  eax,BYTE PTR [ebp+0x0]
10052c0c:	mov    ecx,esi
10052c0e:	shl    eax,cl
10052c10:	sub    edx,0x1
10052c13:	add    esi,0x8
10052c16:	add    ebp,0x1
10052c19:	add    ebx,eax
10052c1b:	cmp    esi,0x20
10052c1e:	mov    DWORD PTR [esp+0x10],edx
10052c22:	mov    DWORD PTR [esp+0x18],ebx
10052c26:	jb     0x10052c00
10052c28:	mov    eax,DWORD PTR [esp+0x2c]
10052c2c:	sub    eax,DWORD PTR [esp+0x1c]
10052c30:	mov    ecx,DWORD PTR [esp+0x40]
10052c34:	add    DWORD PTR [ecx+0x14],eax
10052c37:	add    DWORD PTR [edi+0x1c],eax
10052c3a:	test   eax,eax
10052c3c:	mov    DWORD PTR [esp+0x2c],eax
10052c40:	je     0x10052c71
10052c42:	mov    ecx,DWORD PTR [esp+0x28]
10052c46:	mov    edx,DWORD PTR [edi+0x18]
10052c49:	push   eax
10052c4a:	sub    ecx,eax
10052c4c:	cmp    DWORD PTR [edi+0x10],0x0
10052c50:	push   ecx
10052c51:	push   edx
10052c52:	je     0x10052c5b
10052c54:	call   0x10054f40
10052c59:	jmp    0x10052c60
10052c5b:	call   0x10052f60
10052c60:	mov    ecx,DWORD PTR [esp+0x4c]
10052c64:	mov    edx,DWORD PTR [esp+0x1c]
10052c68:	mov    DWORD PTR [edi+0x18],eax
10052c6b:	add    esp,0xc
10052c6e:	mov    DWORD PTR [ecx+0x30],eax
10052c71:	cmp    DWORD PTR [edi+0x10],0x0
10052c75:	mov    eax,DWORD PTR [esp+0x1c]
10052c79:	mov    DWORD PTR [esp+0x2c],eax
10052c7d:	mov    eax,ebx
10052c7f:	jne    0x10052c9f
10052c81:	and    eax,0xff00
10052c86:	mov    ecx,ebx
10052c88:	shl    ecx,0x10
10052c8b:	add    eax,ecx
10052c8d:	xor    ecx,ecx
10052c8f:	mov    ch,BYTE PTR [esp+0x1a]
10052c93:	shl    eax,0x8
10052c96:	add    eax,ecx
10052c98:	mov    ecx,ebx
10052c9a:	shr    ecx,0x18
10052c9d:	add    eax,ecx
10052c9f:	cmp    eax,DWORD PTR [edi+0x18]
10052ca2:	je     0x10052cb4
10052ca4:	mov    eax,DWORD PTR [esp+0x40]
10052ca8:	mov    DWORD PTR [eax+0x18],0x10067890
10052caf:	jmp    0x10052d18
10052cb4:	xor    ebx,ebx
10052cb6:	mov    DWORD PTR [esp+0x18],ebx
10052cba:	xor    esi,esi
10052cbc:	mov    DWORD PTR [edi],0x19
10052cc2:	cmp    DWORD PTR [edi+0x8],0x0
10052cc6:	je     0x10052d64
10052ccc:	cmp    DWORD PTR [edi+0x10],0x0
10052cd0:	je     0x10052d64
10052cd6:	cmp    esi,0x20
10052cd9:	jae    0x10052d08
10052cdb:	jmp    0x10052ce0
10052cdd:	lea    ecx,[ecx+0x0]
10052ce0:	test   edx,edx
10052ce2:	je     0x10052d7c
10052ce8:	movzx  eax,BYTE PTR [ebp+0x0]
10052cec:	mov    ecx,esi
10052cee:	shl    eax,cl
10052cf0:	sub    edx,0x1
10052cf3:	add    esi,0x8
10052cf6:	add    ebp,0x1
10052cf9:	add    ebx,eax
10052cfb:	cmp    esi,0x20
10052cfe:	mov    DWORD PTR [esp+0x10],edx
10052d02:	mov    DWORD PTR [esp+0x18],ebx
10052d06:	jb     0x10052ce0
10052d08:	cmp    ebx,DWORD PTR [edi+0x1c]
10052d0b:	je     0x10052d60
10052d0d:	mov    ecx,DWORD PTR [esp+0x40]
10052d11:	mov    DWORD PTR [ecx+0x18],0x10067878
10052d18:	mov    DWORD PTR [edi],0x1b
10052d1e:	mov    eax,DWORD PTR [edi]
10052d20:	cmp    eax,0x1c
10052d23:	jbe    0x100519a0
10052d29:	mov    eax,0xfffffffe
10052d2e:	pop    esi
10052d2f:	pop    ebp
10052d30:	pop    ebx
10052d31:	pop    edi
10052d32:	add    esp,0x2c
10052d35:	ret    
10052d36:	mov    eax,DWORD PTR [esp+0x40]
10052d3a:	mov    ecx,DWORD PTR [esp+0x28]
10052d3e:	mov    DWORD PTR [eax+0xc],ecx
10052d41:	mov    ecx,DWORD PTR [esp+0x1c]
10052d45:	mov    DWORD PTR [eax],ebp
10052d47:	mov    DWORD PTR [eax+0x10],ecx
10052d4a:	mov    DWORD PTR [eax+0x4],edx
10052d4d:	mov    DWORD PTR [edi+0x3c],esi
10052d50:	pop    esi
10052d51:	pop    ebp
10052d52:	mov    DWORD PTR [edi+0x38],ebx
10052d55:	pop    ebx
10052d56:	mov    eax,0x2
10052d5b:	pop    edi
10052d5c:	add    esp,0x2c
10052d5f:	ret    
10052d60:	xor    ebx,ebx
10052d62:	xor    esi,esi
10052d64:	mov    DWORD PTR [edi],0x1a
10052d6a:	mov    DWORD PTR [esp+0x30],0x1
10052d72:	jmp    0x10052d7c
10052d74:	mov    DWORD PTR [esp+0x30],0xfffffffd
10052d7c:	mov    eax,DWORD PTR [esp+0x40]
10052d80:	mov    ecx,DWORD PTR [esp+0x28]
10052d84:	mov    DWORD PTR [eax+0xc],ecx
10052d87:	mov    ecx,DWORD PTR [esp+0x1c]
10052d8b:	mov    DWORD PTR [eax+0x10],ecx
10052d8e:	mov    DWORD PTR [eax],ebp
10052d90:	mov    DWORD PTR [eax+0x4],edx
10052d93:	cmp    DWORD PTR [edi+0x28],0x0
10052d97:	mov    DWORD PTR [edi+0x38],ebx
10052d9a:	mov    DWORD PTR [edi+0x3c],esi
10052d9d:	jne    0x10052dad
10052d9f:	cmp    DWORD PTR [edi],0x18
10052da2:	jge    0x10052dd1
10052da4:	mov    edx,DWORD PTR [esp+0x2c]
10052da8:	cmp    edx,DWORD PTR [eax+0x10]
10052dab:	je     0x10052dd1
10052dad:	mov    eax,DWORD PTR [esp+0x2c]
10052db1:	mov    ebx,DWORD PTR [esp+0x40]
10052db5:	call   0x10051830
10052dba:	test   eax,eax
10052dbc:	je     0x10052dd1
10052dbe:	mov    DWORD PTR [edi],0x1c
10052dc4:	pop    esi
10052dc5:	pop    ebp
10052dc6:	pop    ebx
10052dc7:	mov    eax,0xfffffffc
10052dcc:	pop    edi
10052dcd:	add    esp,0x2c
10052dd0:	ret    
10052dd1:	mov    esi,DWORD PTR [esp+0x40]
10052dd5:	mov    ebp,DWORD PTR [esp+0x38]
10052dd9:	sub    ebp,DWORD PTR [esi+0x4]
10052ddc:	mov    ebx,DWORD PTR [esp+0x2c]
10052de0:	sub    ebx,DWORD PTR [esi+0x10]
10052de3:	add    DWORD PTR [esi+0x8],ebp
10052de6:	add    DWORD PTR [esi+0x14],ebx
10052de9:	add    DWORD PTR [edi+0x1c],ebx
10052dec:	cmp    DWORD PTR [edi+0x8],0x0
10052df0:	je     0x10052e26
10052df2:	test   ebx,ebx
10052df4:	je     0x10052e26
10052df6:	cmp    DWORD PTR [edi+0x10],0x0
10052dfa:	push   ebx
10052dfb:	je     0x10052e0e
10052dfd:	mov    ecx,DWORD PTR [esi+0xc]
10052e00:	mov    edx,DWORD PTR [edi+0x18]
10052e03:	sub    ecx,ebx
10052e05:	push   ecx
10052e06:	push   edx
10052e07:	call   0x10054f40
10052e0c:	jmp    0x10052e1d
10052e0e:	mov    eax,DWORD PTR [esi+0xc]
10052e11:	mov    ecx,DWORD PTR [edi+0x18]
10052e14:	sub    eax,ebx
10052e16:	push   eax
10052e17:	push   ecx
10052e18:	call   0x10052f60
10052e1d:	mov    DWORD PTR [edi+0x18],eax
10052e20:	add    esp,0xc
10052e23:	mov    DWORD PTR [esi+0x30],eax
10052e26:	mov    edx,DWORD PTR [edi+0x4]
10052e29:	neg    edx
10052e2b:	sbb    edx,edx
10052e2d:	and    edx,0x40
10052e30:	xor    eax,eax
10052e32:	cmp    DWORD PTR [edi],0xb
10052e35:	setne  al
10052e38:	sub    eax,0x1
10052e3b:	and    eax,0x80
10052e40:	add    edx,eax
10052e42:	add    edx,DWORD PTR [edi+0x3c]
10052e45:	test   ebp,ebp
10052e47:	mov    DWORD PTR [esi+0x2c],edx
10052e4a:	jne    0x10052e50
10052e4c:	test   ebx,ebx
10052e4e:	je     0x10052e57
10052e50:	cmp    DWORD PTR [esp+0x44],0x4
10052e55:	jne    0x10052e70
10052e57:	mov    eax,DWORD PTR [esp+0x30]
10052e5b:	test   eax,eax
10052e5d:	jne    0x10052d2e
10052e63:	pop    esi
10052e64:	pop    ebp
10052e65:	pop    ebx
10052e66:	mov    eax,0xfffffffb
10052e6b:	pop    edi
10052e6c:	add    esp,0x2c
10052e6f:	ret    
10052e70:	mov    eax,DWORD PTR [esp+0x30]
10052e74:	pop    esi
10052e75:	pop    ebp
10052e76:	pop    ebx
10052e77:	pop    edi
10052e78:	add    esp,0x2c
10052e7b:	ret    
10052e7c:	mov    eax,0xfffffffe
10052e81:	pop    edi
10052e82:	add    esp,0x2c
10052e85:	ret    
10052e86:	mov    edi,edi
10052e88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
10052e89:	sbb    DWORD PTR ds:0x51b1510,eax
10052e8f:	adc    bl,al
10052e91:	sbb    eax,DWORD PTR ds:0x51c4210
10052e97:	adc    ah,al
10052e99:	sbb    al,0x5
10052e9b:	adc    BYTE PTR [edi+0x1d],cl
10052e9e:	add    eax,0x51e0b10
10052ea3:	adc    bl,al
10052ea5:	push   ds
10052ea6:	add    eax,0x51f7a10
10052eab:	adc    BYTE PTR [eax+eiz*1],dl
10052eae:	add    eax,0x5207c10
10052eb3:	adc    BYTE PTR [eax-0x4ceffae0],ch
10052eb9:	and    BYTE PTR ds:0x5217e10,al
10052ebf:	adc    bl,ch
10052ec1:	and    DWORD PTR ds:0x5224b10,eax
10052ec7:	adc    bl,cl
10052ec9:	and    al,BYTE PTR ds:0x523c210
10052ecf:	adc    bl,dl
10052ed1:	es add eax,0x528d710
10052ed7:	adc    BYTE PTR [edx],ah
10052ed9:	sub    DWORD PTR ds:0x52a9910,eax
10052edf:	adc    BYTE PTR [eax],cl
10052ee1:	sub    eax,DWORD PTR ds:0x52bc410
10052ee7:	adc    bh,ch
10052ee9:	sub    eax,DWORD PTR ds:0x52cc210
10052eef:	adc    BYTE PTR [edx+0x2d],ch
10052ef2:	add    eax,0x52d7410
10052ef7:	adc    ah,al
10052ef9:	sub    eax,0x21181005
10052efe:	add    eax,0x5212d10
10052f03:	adc    BYTE PTR [ecx+0x21],cl
10052f06:	add    eax,0x5215e10
10052f0b:	adc    ah,cl
10052f0d:	int3   
10052f0e:	int3   
10052f0f:	int3   
10052f10:	push   esi
10052f11:	mov    esi,DWORD PTR [esp+0x8]
10052f15:	test   esi,esi
10052f17:	je     0x10052f53
10052f19:	mov    eax,DWORD PTR [esi+0x1c]
10052f1c:	test   eax,eax
10052f1e:	je     0x10052f53
10052f20:	mov    ecx,DWORD PTR [esi+0x24]
10052f23:	test   ecx,ecx
10052f25:	je     0x10052f53
10052f27:	mov    eax,DWORD PTR [eax+0x34]
10052f2a:	test   eax,eax
10052f2c:	je     0x10052f38
10052f2e:	push   eax
10052f2f:	mov    eax,DWORD PTR [esi+0x28]
10052f32:	push   eax
10052f33:	call   ecx
10052f35:	add    esp,0x8
10052f38:	mov    ecx,DWORD PTR [esi+0x1c]
10052f3b:	mov    edx,DWORD PTR [esi+0x28]
10052f3e:	mov    eax,DWORD PTR [esi+0x24]
10052f41:	push   ecx
10052f42:	push   edx
10052f43:	call   eax
10052f45:	add    esp,0x8
10052f48:	mov    DWORD PTR [esi+0x1c],0x0
10052f4f:	xor    eax,eax
10052f51:	pop    esi
10052f52:	ret    
10052f53:	mov    eax,0xfffffffe
10052f58:	pop    esi
10052f59:	ret    
10052f5a:	int3   
10052f5b:	int3   
10052f5c:	int3   
10052f5d:	int3   
10052f5e:	int3   
10052f5f:	int3   
10052f60:	mov    ecx,DWORD PTR [esp+0x4]
10052f64:	push   ebx
10052f65:	mov    ebx,DWORD PTR [esp+0x10]
10052f69:	push   edi
10052f6a:	mov    edi,ecx
10052f6c:	shr    edi,0x10
10052f6f:	and    ecx,0xffff
10052f75:	cmp    ebx,0x1
10052f78:	jne    0x10052fab
10052f7a:	mov    eax,DWORD PTR [esp+0x10]
10052f7e:	movzx  edx,BYTE PTR [eax]
10052f81:	add    ecx,edx
10052f83:	cmp    ecx,0xfff1
10052f89:	jb     0x10052f91
10052f8b:	sub    ecx,0xfff1
10052f91:	add    edi,ecx
10052f93:	cmp    edi,0xfff1
10052f99:	jb     0x10052fa1
10052f9b:	sub    edi,0xfff1
10052fa1:	mov    eax,edi
10052fa3:	shl    eax,0x10
10052fa6:	pop    edi
10052fa7:	or     eax,ecx
10052fa9:	pop    ebx
10052faa:	ret    
10052fab:	push   esi
10052fac:	mov    esi,DWORD PTR [esp+0x14]
10052fb0:	test   esi,esi
10052fb2:	jne    0x10052fbd
10052fb4:	pop    esi
10052fb5:	pop    edi
10052fb6:	mov    eax,0x1
10052fbb:	pop    ebx
10052fbc:	ret    
10052fbd:	cmp    ebx,0x10
10052fc0:	jae    0x10053001
10052fc2:	test   ebx,ebx
10052fc4:	je     0x10052fd7
10052fc6:	movzx  eax,BYTE PTR [esi]
10052fc9:	add    ecx,eax
10052fcb:	sub    ebx,0x1
10052fce:	add    esi,0x1
10052fd1:	add    edi,ecx
10052fd3:	test   ebx,ebx
10052fd5:	jne    0x10052fc6
10052fd7:	cmp    ecx,0xfff1
10052fdd:	jb     0x10052fe5
10052fdf:	sub    ecx,0xfff1
10052fe5:	mov    eax,0x80078071
10052fea:	mul    edi
10052fec:	shr    edx,0xf
10052fef:	mov    eax,edx
10052ff1:	shl    eax,0x4
10052ff4:	sub    eax,edx
10052ff6:	add    eax,edi
10052ff8:	pop    esi
10052ff9:	shl    eax,0x10
10052ffc:	pop    edi
10052ffd:	or     eax,ecx
10052fff:	pop    ebx
10053000:	ret    
10053001:	cmp    ebx,0x15b0
10053007:	jb     0x100530e9
1005300d:	mov    eax,0x5e6ea9af
10053012:	mul    ebx
10053014:	push   ebp
10053015:	mov    ebp,edx
10053017:	shr    ebp,0xb
1005301a:	lea    ebx,[ebx+0x0]
10053020:	sub    ebx,0x15b0
10053026:	mov    eax,0x15b
1005302b:	jmp    0x10053030
1005302d:	lea    ecx,[ecx+0x0]
10053030:	movzx  edx,BYTE PTR [esi]
10053033:	add    ecx,edx
10053035:	movzx  edx,BYTE PTR [esi+0x1]
10053039:	add    edi,ecx
1005303b:	add    ecx,edx
1005303d:	movzx  edx,BYTE PTR [esi+0x2]
10053041:	add    edi,ecx
10053043:	add    ecx,edx
10053045:	movzx  edx,BYTE PTR [esi+0x3]
10053049:	add    edi,ecx
1005304b:	add    ecx,edx
1005304d:	movzx  edx,BYTE PTR [esi+0x4]
10053051:	add    edi,ecx
10053053:	add    ecx,edx
10053055:	movzx  edx,BYTE PTR [esi+0x5]
10053059:	add    edi,ecx
1005305b:	add    ecx,edx
1005305d:	movzx  edx,BYTE PTR [esi+0x6]
10053061:	add    edi,ecx
10053063:	add    ecx,edx
10053065:	movzx  edx,BYTE PTR [esi+0x7]
10053069:	add    edi,ecx
1005306b:	add    ecx,edx
1005306d:	movzx  edx,BYTE PTR [esi+0x8]
10053071:	add    edi,ecx
10053073:	add    ecx,edx
10053075:	movzx  edx,BYTE PTR [esi+0x9]
10053079:	add    edi,ecx
1005307b:	add    ecx,edx
1005307d:	movzx  edx,BYTE PTR [esi+0xa]
10053081:	add    edi,ecx
10053083:	add    ecx,edx
10053085:	movzx  edx,BYTE PTR [esi+0xb]
10053089:	add    edi,ecx
1005308b:	add    ecx,edx
1005308d:	movzx  edx,BYTE PTR [esi+0xc]
10053091:	add    edi,ecx
10053093:	add    ecx,edx
10053095:	movzx  edx,BYTE PTR [esi+0xd]
10053099:	add    edi,ecx
1005309b:	add    ecx,edx
1005309d:	movzx  edx,BYTE PTR [esi+0xe]
100530a1:	add    edi,ecx
100530a3:	add    ecx,edx
100530a5:	movzx  edx,BYTE PTR [esi+0xf]
100530a9:	add    edi,ecx
100530ab:	add    ecx,edx
100530ad:	add    edi,ecx
100530af:	add    esi,0x10
100530b2:	sub    eax,0x1
100530b5:	jne    0x10053030
100530bb:	mov    eax,0x80078071
100530c0:	mul    ecx
100530c2:	shr    edx,0xf
100530c5:	imul   edx,edx,0xffff000f
100530cb:	add    ecx,edx
100530cd:	mov    eax,0x80078071
100530d2:	mul    edi
100530d4:	shr    edx,0xf
100530d7:	imul   edx,edx,0xffff000f
100530dd:	add    edi,edx
100530df:	sub    ebp,0x1
100530e2:	jne    0x10053020
100530e8:	pop    ebp
100530e9:	test   ebx,ebx
100530eb:	je     0x100531c7
100530f1:	cmp    ebx,0x10
100530f4:	jb     0x1005318e
100530fa:	mov    eax,ebx
100530fc:	shr    eax,0x4
100530ff:	nop
10053100:	movzx  edx,BYTE PTR [esi]
10053103:	add    ecx,edx
10053105:	movzx  edx,BYTE PTR [esi+0x1]
10053109:	add    edi,ecx
1005310b:	add    ecx,edx
1005310d:	movzx  edx,BYTE PTR [esi+0x2]
10053111:	add    edi,ecx
10053113:	add    ecx,edx
10053115:	movzx  edx,BYTE PTR [esi+0x3]
10053119:	add    edi,ecx
1005311b:	add    ecx,edx
1005311d:	movzx  edx,BYTE PTR [esi+0x4]
10053121:	add    edi,ecx
10053123:	add    ecx,edx
10053125:	movzx  edx,BYTE PTR [esi+0x5]
10053129:	add    edi,ecx
1005312b:	add    ecx,edx
1005312d:	movzx  edx,BYTE PTR [esi+0x6]
10053131:	add    edi,ecx
10053133:	add    ecx,edx
10053135:	movzx  edx,BYTE PTR [esi+0x7]
10053139:	add    edi,ecx
1005313b:	add    ecx,edx
1005313d:	movzx  edx,BYTE PTR [esi+0x8]
10053141:	add    edi,ecx
10053143:	add    ecx,edx
10053145:	movzx  edx,BYTE PTR [esi+0x9]
10053149:	add    edi,ecx
1005314b:	add    ecx,edx
1005314d:	movzx  edx,BYTE PTR [esi+0xa]
10053151:	add    edi,ecx
10053153:	add    ecx,edx
10053155:	movzx  edx,BYTE PTR [esi+0xb]
10053159:	add    edi,ecx
1005315b:	add    ecx,edx
1005315d:	movzx  edx,BYTE PTR [esi+0xc]
10053161:	add    edi,ecx
10053163:	add    ecx,edx
10053165:	movzx  edx,BYTE PTR [esi+0xd]
10053169:	add    edi,ecx
1005316b:	add    ecx,edx
1005316d:	movzx  edx,BYTE PTR [esi+0xe]
10053171:	add    edi,ecx
10053173:	add    ecx,edx
10053175:	movzx  edx,BYTE PTR [esi+0xf]
10053179:	add    edi,ecx
1005317b:	add    ecx,edx
1005317d:	sub    ebx,0x10
10053180:	add    edi,ecx
10053182:	add    esi,0x10
10053185:	sub    eax,0x1
10053188:	jne    0x10053100
1005318e:	test   ebx,ebx
10053190:	je     0x100531a3
10053192:	movzx  eax,BYTE PTR [esi]
10053195:	add    ecx,eax
10053197:	sub    ebx,0x1
1005319a:	add    esi,0x1
1005319d:	add    edi,ecx
1005319f:	test   ebx,ebx
100531a1:	jne    0x10053192
100531a3:	mov    eax,0x80078071
100531a8:	mul    ecx
100531aa:	shr    edx,0xf
100531ad:	imul   edx,edx,0xffff000f
100531b3:	add    ecx,edx
100531b5:	mov    eax,0x80078071
100531ba:	mul    edi
100531bc:	shr    edx,0xf
100531bf:	imul   edx,edx,0xffff000f
100531c5:	add    edi,edx
100531c7:	mov    eax,edi
100531c9:	pop    esi
100531ca:	shl    eax,0x10
100531cd:	pop    edi
100531ce:	or     eax,ecx
100531d0:	pop    ebx
100531d1:	ret    
100531d2:	int3   
100531d3:	int3   
100531d4:	int3   
100531d5:	int3   
100531d6:	int3   
100531d7:	int3   
100531d8:	int3   
100531d9:	int3   
100531da:	int3   
100531db:	int3   
100531dc:	int3   
100531dd:	int3   
100531de:	int3   
100531df:	int3   
100531e0:	push   esi
100531e1:	lea    eax,[edx+0x94]
100531e7:	mov    ecx,0x11e
100531ec:	xor    esi,esi
100531ee:	mov    edi,edi
100531f0:	mov    WORD PTR [eax],si
100531f3:	add    eax,0x4
100531f6:	sub    ecx,0x1
100531f9:	jne    0x100531f0
100531fb:	lea    eax,[edx+0x988]
10053201:	mov    ecx,0x1e
10053206:	mov    WORD PTR [eax],si
10053209:	add    eax,0x4
1005320c:	sub    ecx,0x1
1005320f:	jne    0x10053206
10053211:	lea    eax,[edx+0xa7c]
10053217:	mov    ecx,0x13
1005321c:	lea    esp,[esp+0x0]
10053220:	mov    WORD PTR [eax],si
10053223:	add    eax,0x4
10053226:	sub    ecx,0x1
10053229:	jne    0x10053220
1005322b:	mov    DWORD PTR [edx+0x16ac],esi
10053231:	mov    DWORD PTR [edx+0x16a8],esi
10053237:	mov    DWORD PTR [edx+0x16b0],esi
1005323d:	mov    DWORD PTR [edx+0x16a0],esi
10053243:	mov    WORD PTR [edx+0x494],0x1
1005324c:	pop    esi
1005324d:	ret    
1005324e:	int3   
1005324f:	int3   
10053250:	push   ecx
10053251:	mov    edx,DWORD PTR [eax+0x1450]
10053257:	push   ebp
10053258:	push   esi
10053259:	mov    esi,DWORD PTR [esp+0x10]
1005325d:	mov    ebp,DWORD PTR [eax+esi*4+0xb5c]
10053264:	lea    ecx,[esi+esi*1]
10053267:	cmp    ecx,edx
10053269:	mov    DWORD PTR [esp+0x8],ebp
1005326d:	jg     0x1005330b
10053273:	push   ebx
10053274:	jge    0x100532aa
10053276:	mov    esi,DWORD PTR [eax+ecx*4+0xb60]
1005327d:	mov    ebp,DWORD PTR [eax+ecx*4+0xb5c]
10053284:	movzx  edx,WORD PTR [edi+esi*4]
10053288:	movzx  ebx,WORD PTR [edi+ebp*4]
1005328c:	cmp    dx,bx
1005328f:	jb     0x100532a3
10053291:	jne    0x100532a6
10053293:	mov    dl,BYTE PTR [esi+eax*1+0x1458]
1005329a:	cmp    dl,BYTE PTR [eax+ebp*1+0x1458]
100532a1:	ja     0x100532a6
100532a3:	add    ecx,0x1
100532a6:	mov    ebp,DWORD PTR [esp+0xc]
100532aa:	mov    esi,DWORD PTR [eax+ecx*4+0xb5c]
100532b1:	movzx  edx,WORD PTR [edi+ebp*4]
100532b5:	movzx  ebx,WORD PTR [edi+esi*4]
100532b9:	cmp    dx,bx
100532bc:	jb     0x100532eb
100532be:	jne    0x100532d0
100532c0:	mov    dl,BYTE PTR [eax+ebp*1+0x1458]
100532c7:	cmp    dl,BYTE PTR [esi+eax*1+0x1458]
100532ce:	jbe    0x100532fb
100532d0:	mov    edx,DWORD PTR [esp+0x14]
100532d4:	mov    DWORD PTR [eax+edx*4+0xb5c],esi
100532db:	mov    edx,DWORD PTR [eax+0x1450]
100532e1:	mov    DWORD PTR [esp+0x14],ecx
100532e5:	add    ecx,ecx
100532e7:	cmp    ecx,edx
100532e9:	jle    0x10053274
100532eb:	mov    ecx,DWORD PTR [esp+0x14]
100532ef:	pop    ebx
100532f0:	pop    esi
100532f1:	mov    DWORD PTR [eax+ecx*4+0xb5c],ebp
100532f8:	pop    ebp
100532f9:	pop    ecx
100532fa:	ret    
100532fb:	mov    edx,DWORD PTR [esp+0x14]
100532ff:	pop    ebx
10053300:	pop    esi
10053301:	mov    DWORD PTR [eax+edx*4+0xb5c],ebp
10053308:	pop    ebp
10053309:	pop    ecx
1005330a:	ret    
1005330b:	mov    DWORD PTR [eax+esi*4+0xb5c],ebp
10053312:	pop    esi
10053313:	pop    ebp
10053314:	pop    ecx
10053315:	ret    
10053316:	int3   
10053317:	int3   
10053318:	int3   
10053319:	int3   
1005331a:	int3   
1005331b:	int3   
1005331c:	int3   
1005331d:	int3   
1005331e:	int3   
1005331f:	int3   
10053320:	sub    esp,0x20
10053323:	mov    edx,DWORD PTR [ecx+0x4]
10053326:	push   ebx
10053327:	mov    ebx,DWORD PTR [ecx]
10053329:	mov    ecx,DWORD PTR [ecx+0x8]
1005332c:	mov    DWORD PTR [esp+0x18],edx
10053330:	mov    edx,DWORD PTR [ecx+0x4]
10053333:	push   ebp
10053334:	mov    ebp,DWORD PTR [ecx]
10053336:	mov    DWORD PTR [esp+0x24],edx
1005333a:	mov    edx,DWORD PTR [ecx+0x8]
1005333d:	push   esi
1005333e:	mov    esi,DWORD PTR [ecx+0x10]
10053341:	xor    ecx,ecx
10053343:	mov    DWORD PTR [eax+0xb3c],ecx
10053349:	mov    DWORD PTR [eax+0xb40],ecx
1005334f:	mov    DWORD PTR [eax+0xb44],ecx
10053355:	mov    DWORD PTR [eax+0xb48],ecx
1005335b:	mov    DWORD PTR [eax+0xb4c],ecx
10053361:	mov    DWORD PTR [eax+0xb50],ecx
10053367:	mov    DWORD PTR [eax+0xb54],ecx
1005336d:	mov    DWORD PTR [eax+0xb58],ecx
10053373:	mov    DWORD PTR [esp+0x24],edx
10053377:	mov    edx,DWORD PTR [eax+0x1454]
1005337d:	mov    edx,DWORD PTR [eax+edx*4+0xb5c]
10053384:	push   edi
10053385:	mov    WORD PTR [ebx+edx*4+0x2],cx
1005338a:	mov    edi,DWORD PTR [eax+0x1454]
10053390:	add    edi,0x1
10053393:	cmp    edi,0x23d
10053399:	mov    DWORD PTR [esp+0x1c],esi
1005339d:	mov    DWORD PTR [esp+0x18],ecx
100533a1:	jge    0x1005352f
100533a7:	lea    ecx,[eax+edi*4+0xb5c]
100533ae:	mov    DWORD PTR [esp+0x14],ecx
100533b2:	mov    ecx,0x23d
100533b7:	sub    ecx,edi
100533b9:	add    edi,ecx
100533bb:	mov    DWORD PTR [esp+0x20],ecx
100533bf:	mov    DWORD PTR [esp+0x10],edi
100533c3:	jmp    0x100533c9
100533c5:	mov    esi,DWORD PTR [esp+0x1c]
100533c9:	mov    edx,DWORD PTR [esp+0x14]
100533cd:	mov    edx,DWORD PTR [edx]
100533cf:	movzx  ecx,WORD PTR [ebx+edx*4+0x2]
100533d4:	movzx  ecx,WORD PTR [ebx+ecx*4+0x2]
100533d9:	add    ecx,0x1
100533dc:	cmp    ecx,esi
100533de:	jle    0x100533e7
100533e0:	add    DWORD PTR [esp+0x18],0x1
100533e5:	mov    ecx,esi
100533e7:	cmp    edx,DWORD PTR [esp+0x24]
100533eb:	mov    WORD PTR [ebx+edx*4+0x2],cx
100533f0:	jg     0x1005343a
100533f2:	mov    edi,DWORD PTR [esp+0x28]
100533f6:	add    WORD PTR [eax+ecx*2+0xb3c],0x1
100533ff:	xor    esi,esi
10053401:	cmp    edx,edi
10053403:	jl     0x10053410
10053405:	mov    esi,edx
10053407:	sub    esi,edi
10053409:	mov    edi,DWORD PTR [esp+0x2c]
1005340d:	mov    esi,DWORD PTR [edi+esi*4]
10053410:	movzx  edi,WORD PTR [ebx+edx*4]
10053414:	movzx  edi,di
10053417:	add    ecx,esi
10053419:	imul   ecx,edi
1005341c:	add    DWORD PTR [eax+0x16a8],ecx
10053422:	test   ebp,ebp
10053424:	je     0x10053436
10053426:	movzx  edx,WORD PTR [ebp+edx*4+0x2]
1005342b:	add    edx,esi
1005342d:	imul   edx,edi
10053430:	add    DWORD PTR [eax+0x16ac],edx
10053436:	mov    edi,DWORD PTR [esp+0x10]
1005343a:	add    DWORD PTR [esp+0x14],0x4
1005343f:	sub    DWORD PTR [esp+0x20],0x1
10053444:	jne    0x100533c5
1005344a:	mov    ebp,DWORD PTR [esp+0x18]
1005344e:	test   ebp,ebp
10053450:	je     0x1005352f
10053456:	mov    ecx,DWORD PTR [esp+0x1c]
1005345a:	lea    edx,[ecx-0x1]
1005345d:	mov    DWORD PTR [esp+0x2c],edx
10053461:	lea    esi,[eax+ecx*2+0xb3c]
10053468:	jmp    0x10053470
1005346a:	lea    ebx,[ebx+0x0]
10053470:	mov    ecx,DWORD PTR [esp+0x2c]
10053474:	cmp    WORD PTR [eax+ecx*2+0xb3c],0x0
1005347d:	lea    edx,[eax+ecx*2+0xb3c]
10053484:	jne    0x10053492
10053486:	sub    edx,0x2
10053489:	sub    ecx,0x1
1005348c:	cmp    WORD PTR [edx],0x0
10053490:	je     0x10053486
10053492:	add    WORD PTR [eax+ecx*2+0xb3c],0xffff
1005349c:	add    WORD PTR [eax+ecx*2+0xb3e],0x2
100534a5:	add    WORD PTR [esi],0xffff
100534aa:	sub    ebp,0x2
100534ad:	test   ebp,ebp
100534af:	jg     0x10053470
100534b1:	mov    edx,DWORD PTR [esp+0x1c]
100534b5:	test   edx,edx
100534b7:	je     0x1005352f
100534b9:	mov    DWORD PTR [esp+0x20],esi
100534bd:	lea    ecx,[ecx+0x0]
100534c0:	movzx  esi,WORD PTR [esi]
100534c3:	test   esi,esi
100534c5:	mov    DWORD PTR [esp+0x1c],esi
100534c9:	je     0x1005351d
100534cb:	lea    ebp,[eax+edi*4+0xb5c]
100534d2:	mov    ecx,DWORD PTR [ebp-0x4]
100534d5:	sub    DWORD PTR [esp+0x10],0x1
100534da:	sub    ebp,0x4
100534dd:	cmp    ecx,DWORD PTR [esp+0x24]
100534e1:	mov    DWORD PTR [esp+0x2c],ebp
100534e5:	jg     0x10053515
100534e7:	movzx  edi,WORD PTR [ebx+ecx*4+0x2]
100534ec:	cmp    edi,edx
100534ee:	lea    esi,[ebx+ecx*4+0x2]
100534f2:	je     0x1005350c
100534f4:	movzx  ecx,WORD PTR [ebx+ecx*4]
100534f8:	mov    ebp,edx
100534fa:	sub    ebp,edi
100534fc:	imul   ebp,ecx
100534ff:	add    DWORD PTR [eax+0x16a8],ebp
10053505:	mov    ebp,DWORD PTR [esp+0x2c]
10053509:	mov    WORD PTR [esi],dx
1005350c:	sub    DWORD PTR [esp+0x1c],0x1
10053511:	mov    esi,DWORD PTR [esp+0x1c]
10053515:	test   esi,esi
10053517:	jne    0x100534d2
10053519:	mov    edi,DWORD PTR [esp+0x10]
1005351d:	mov    esi,DWORD PTR [esp+0x20]
10053521:	sub    edx,0x1
10053524:	sub    esi,0x2
10053527:	test   edx,edx
10053529:	mov    DWORD PTR [esp+0x20],esi
1005352d:	jne    0x100534c0
1005352f:	pop    edi
10053530:	pop    esi
10053531:	pop    ebp
10053532:	pop    ebx
10053533:	add    esp,0x20
10053536:	ret    
10053537:	int3   
10053538:	int3   
10053539:	int3   
1005353a:	int3   
1005353b:	int3   
1005353c:	int3   
1005353d:	int3   
1005353e:	int3   
1005353f:	int3   
10053540:	sub    esp,0xc
10053543:	push   ebx
10053544:	push   ebp
10053545:	mov    ebp,DWORD PTR [esp+0x18]
10053549:	push   esi
1005354a:	push   edi
1005354b:	movzx  edi,WORD PTR [eax+0x2]
1005354f:	xor    edx,edx
10053551:	test   edi,edi
10053553:	mov    ebx,ecx
10053555:	mov    DWORD PTR [esp+0x14],0xffffffff
1005355d:	mov    ecx,0x7
10053562:	mov    esi,0x4
10053567:	jne    0x10053573
10053569:	mov    ecx,0x8a
1005356e:	mov    esi,0x3
10053573:	test   ebx,ebx
10053575:	mov    WORD PTR [eax+ebx*4+0x6],0xffff
1005357c:	jl     0x10053625
10053582:	add    eax,0x6
10053585:	add    ebx,0x1
10053588:	mov    DWORD PTR [esp+0x18],ebx
1005358c:	mov    DWORD PTR [esp+0x10],eax
10053590:	mov    ebx,0x1
10053595:	mov    eax,edi
10053597:	mov    edi,DWORD PTR [esp+0x10]
1005359b:	movzx  edi,WORD PTR [edi]
1005359e:	add    edx,ebx
100535a0:	cmp    edx,ecx
100535a2:	jge    0x100535a8
100535a4:	cmp    eax,edi
100535a6:	je     0x10053616
100535a8:	cmp    edx,esi
100535aa:	jge    0x100535b6
100535ac:	add    WORD PTR [ebp+eax*4+0xa7c],dx
100535b4:	jmp    0x100535e6
100535b6:	test   eax,eax
100535b8:	je     0x100535d1
100535ba:	cmp    eax,DWORD PTR [esp+0x14]
100535be:	je     0x100535c8
100535c0:	add    WORD PTR [ebp+eax*4+0xa7c],bx
100535c8:	add    WORD PTR [ebp+0xabc],bx
100535cf:	jmp    0x100535e6
100535d1:	cmp    edx,0xa
100535d4:	jg     0x100535df
100535d6:	add    WORD PTR [ebp+0xac0],bx
100535dd:	jmp    0x100535e6
100535df:	add    WORD PTR [ebp+0xac4],bx
100535e6:	xor    edx,edx
100535e8:	test   edi,edi
100535ea:	mov    DWORD PTR [esp+0x14],eax
100535ee:	jne    0x100535fc
100535f0:	mov    ecx,0x8a
100535f5:	mov    esi,0x3
100535fa:	jmp    0x10053616
100535fc:	cmp    eax,edi
100535fe:	jne    0x1005360c
10053600:	mov    ecx,0x6
10053605:	mov    esi,0x3
1005360a:	jmp    0x10053616
1005360c:	mov    ecx,0x7
10053611:	mov    esi,0x4
10053616:	add    DWORD PTR [esp+0x10],0x4
1005361b:	sub    DWORD PTR [esp+0x18],ebx
1005361f:	jne    0x10053595
10053625:	pop    edi
10053626:	pop    esi
10053627:	pop    ebp
10053628:	pop    ebx
10053629:	add    esp,0xc
1005362c:	ret    
1005362d:	int3   
1005362e:	int3   
1005362f:	int3   
10053630:	sub    esp,0x18
10053633:	push   ebx
10053634:	push   ebp
10053635:	movzx  ebp,WORD PTR [edx+0x2]
10053639:	push   esi
1005363a:	xor    esi,esi
1005363c:	test   ebp,ebp
1005363e:	push   edi
1005363f:	mov    ebx,ecx
10053641:	mov    DWORD PTR [esp+0x1c],0xffffffff
10053649:	mov    DWORD PTR [esp+0x14],ebp
1005364d:	mov    ecx,0x7
10053652:	mov    edi,0x4
10053657:	jne    0x10053663
10053659:	mov    ecx,0x8a
1005365e:	mov    edi,0x3
10053663:	test   ebx,ebx
10053665:	jl     0x10053b39
1005366b:	add    edx,0x6
1005366e:	add    ebx,0x1
10053671:	mov    DWORD PTR [esp+0x18],edx
10053675:	mov    DWORD PTR [esp+0x20],ebx
10053679:	mov    ebp,0x1
1005367e:	mov    edi,edi
10053680:	mov    ebx,DWORD PTR [esp+0x18]
10053684:	movzx  ebx,WORD PTR [ebx]
10053687:	mov    edx,DWORD PTR [esp+0x14]
1005368b:	add    esi,ebp
1005368d:	cmp    esi,ecx
1005368f:	mov    DWORD PTR [esp+0x24],edx
10053693:	mov    DWORD PTR [esp+0x14],ebx
10053697:	mov    DWORD PTR [esp+0x10],esi
1005369b:	jge    0x100536a5
1005369d:	cmp    edx,ebx
1005369f:	je     0x10053b2a
100536a5:	cmp    esi,edi
100536a7:	jge    0x1005374f
100536ad:	lea    ecx,[ecx+0x0]
100536b0:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
100536b8:	mov    ecx,DWORD PTR [eax+0x16bc]
100536be:	mov    ebx,0x10
100536c3:	sub    ebx,edi
100536c5:	cmp    ecx,ebx
100536c7:	jle    0x10053724
100536c9:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
100536d1:	mov    edx,esi
100536d3:	shl    edx,cl
100536d5:	mov    ecx,DWORD PTR [eax+0x8]
100536d8:	or     WORD PTR [eax+0x16b8],dx
100536df:	movzx  ebx,BYTE PTR [eax+0x16b8]
100536e6:	mov    edx,DWORD PTR [eax+0x14]
100536e9:	mov    BYTE PTR [ecx+edx*1],bl
100536ec:	add    DWORD PTR [eax+0x14],ebp
100536ef:	mov    ecx,DWORD PTR [eax+0x14]
100536f2:	movzx  ebx,BYTE PTR [eax+0x16b9]
100536f9:	mov    edx,DWORD PTR [eax+0x8]
100536fc:	mov    BYTE PTR [ecx+edx*1],bl
100536ff:	mov    edx,DWORD PTR [eax+0x16bc]
10053705:	add    DWORD PTR [eax+0x14],ebp
10053708:	mov    cl,0x10
1005370a:	sub    cl,dl
1005370c:	shr    si,cl
1005370f:	lea    ecx,[edx+edi*1-0x10]
10053713:	mov    edx,DWORD PTR [esp+0x24]
10053717:	mov    WORD PTR [eax+0x16b8],si
1005371e:	mov    esi,DWORD PTR [esp+0x10]
10053722:	jmp    0x10053738
10053724:	mov    bx,WORD PTR [eax+edx*4+0xa7c]
1005372c:	shl    bx,cl
1005372f:	or     WORD PTR [eax+0x16b8],bx
10053736:	add    ecx,edi
10053738:	sub    esi,ebp
1005373a:	mov    DWORD PTR [eax+0x16bc],ecx
10053740:	mov    DWORD PTR [esp+0x10],esi
10053744:	jne    0x100536b0
1005374a:	jmp    0x10053af6
1005374f:	test   edx,edx
10053751:	je     0x100538fc
10053757:	cmp    edx,DWORD PTR [esp+0x1c]
1005375b:	je     0x100537fd
10053761:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
10053769:	mov    ecx,DWORD PTR [eax+0x16bc]
1005376f:	mov    ebx,0x10
10053774:	sub    ebx,edi
10053776:	cmp    ecx,ebx
10053778:	mov    DWORD PTR [esp+0x1c],edi
1005377c:	jle    0x100537d9
1005377e:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
10053786:	mov    edi,esi
10053788:	shl    edi,cl
1005378a:	mov    ecx,DWORD PTR [eax+0x8]
1005378d:	or     WORD PTR [eax+0x16b8],di
10053794:	movzx  ebx,BYTE PTR [eax+0x16b8]
1005379b:	mov    edi,DWORD PTR [eax+0x14]
1005379e:	mov    BYTE PTR [ecx+edi*1],bl
100537a1:	add    DWORD PTR [eax+0x14],ebp
100537a4:	movzx  ebx,BYTE PTR [eax+0x16b9]
100537ab:	mov    ecx,DWORD PTR [eax+0x8]
100537ae:	mov    edi,DWORD PTR [eax+0x14]
100537b1:	mov    BYTE PTR [edi+ecx*1],bl
100537b4:	mov    ebx,DWORD PTR [eax+0x16bc]
100537ba:	add    DWORD PTR [eax+0x14],ebp
100537bd:	mov    cl,0x10
100537bf:	sub    cl,bl
100537c1:	shr    si,cl
100537c4:	mov    ecx,DWORD PTR [esp+0x1c]
100537c8:	lea    ecx,[ebx+ecx*1-0x10]
100537cc:	mov    WORD PTR [eax+0x16b8],si
100537d3:	mov    esi,DWORD PTR [esp+0x10]
100537d7:	jmp    0x100537f1
100537d9:	mov    di,WORD PTR [eax+edx*4+0xa7c]
100537e1:	shl    di,cl
100537e4:	or     WORD PTR [eax+0x16b8],di
100537eb:	mov    edi,DWORD PTR [esp+0x1c]
100537ef:	add    ecx,edi
100537f1:	sub    esi,ebp
100537f3:	mov    DWORD PTR [eax+0x16bc],ecx
100537f9:	mov    DWORD PTR [esp+0x10],esi
100537fd:	movzx  edi,WORD PTR [eax+0xabe]
10053804:	mov    ecx,DWORD PTR [eax+0x16bc]
1005380a:	mov    ebx,0x10
1005380f:	sub    ebx,edi
10053811:	cmp    ecx,ebx
10053813:	mov    DWORD PTR [esp+0x1c],edi
10053817:	jle    0x10053873
10053819:	movzx  esi,WORD PTR [eax+0xabc]
10053820:	mov    edi,esi
10053822:	shl    edi,cl
10053824:	mov    ecx,DWORD PTR [eax+0x8]
10053827:	or     WORD PTR [eax+0x16b8],di
1005382e:	movzx  ebx,BYTE PTR [eax+0x16b8]
10053835:	mov    edi,DWORD PTR [eax+0x14]
10053838:	mov    BYTE PTR [ecx+edi*1],bl
1005383b:	add    DWORD PTR [eax+0x14],ebp
1005383e:	movzx  ebx,BYTE PTR [eax+0x16b9]
10053845:	mov    ecx,DWORD PTR [eax+0x8]
10053848:	mov    edi,DWORD PTR [eax+0x14]
1005384b:	mov    BYTE PTR [edi+ecx*1],bl
1005384e:	mov    ebx,DWORD PTR [eax+0x16bc]
10053854:	add    DWORD PTR [eax+0x14],ebp
10053857:	mov    cl,0x10
10053859:	sub    cl,bl
1005385b:	shr    si,cl
1005385e:	mov    ecx,DWORD PTR [esp+0x1c]
10053862:	lea    ecx,[ebx+ecx*1-0x10]
10053866:	mov    WORD PTR [eax+0x16b8],si
1005386d:	mov    esi,DWORD PTR [esp+0x10]
10053871:	jmp    0x1005388a
10053873:	mov    di,WORD PTR [eax+0xabc]
1005387a:	shl    di,cl
1005387d:	or     WORD PTR [eax+0x16b8],di
10053884:	mov    edi,DWORD PTR [esp+0x1c]
10053888:	add    ecx,edi
1005388a:	add    esi,0xfffffffd
1005388d:	cmp    ecx,0xe
10053890:	mov    DWORD PTR [eax+0x16bc],ecx
10053896:	jle    0x100538eb
10053898:	mov    edi,esi
1005389a:	shl    edi,cl
1005389c:	mov    ecx,DWORD PTR [eax+0x8]
1005389f:	or     WORD PTR [eax+0x16b8],di
100538a6:	movzx  ebx,BYTE PTR [eax+0x16b8]
100538ad:	mov    edi,DWORD PTR [eax+0x14]
100538b0:	mov    BYTE PTR [ecx+edi*1],bl
100538b3:	add    DWORD PTR [eax+0x14],ebp
100538b6:	movzx  ebx,BYTE PTR [eax+0x16b9]
100538bd:	mov    edi,DWORD PTR [eax+0x14]
100538c0:	mov    ecx,DWORD PTR [eax+0x8]
100538c3:	mov    BYTE PTR [edi+ecx*1],bl
100538c6:	mov    ebx,DWORD PTR [eax+0x16bc]
100538cc:	add    DWORD PTR [eax+0x14],ebp
100538cf:	mov    cl,0x10
100538d1:	sub    cl,bl
100538d3:	shr    si,cl
100538d6:	add    ebx,0xfffffff2
100538d9:	mov    DWORD PTR [eax+0x16bc],ebx
100538df:	mov    WORD PTR [eax+0x16b8],si
100538e6:	jmp    0x10053af6
100538eb:	shl    esi,cl
100538ed:	or     WORD PTR [eax+0x16b8],si
100538f4:	add    ecx,0x2
100538f7:	jmp    0x10053af0
100538fc:	cmp    esi,0xa
100538ff:	mov    ecx,DWORD PTR [eax+0x16bc]
10053905:	mov    ebx,0x10
1005390a:	jg     0x10053a04
10053910:	movzx  edi,WORD PTR [eax+0xac2]
10053917:	sub    ebx,edi
10053919:	cmp    ecx,ebx
1005391b:	mov    DWORD PTR [esp+0x1c],edi
1005391f:	jle    0x1005397b
10053921:	movzx  esi,WORD PTR [eax+0xac0]
10053928:	mov    edi,esi
1005392a:	shl    edi,cl
1005392c:	mov    ecx,DWORD PTR [eax+0x8]
1005392f:	or     WORD PTR [eax+0x16b8],di
10053936:	movzx  ebx,BYTE PTR [eax+0x16b8]
1005393d:	mov    edi,DWORD PTR [eax+0x14]
10053940:	mov    BYTE PTR [ecx+edi*1],bl
10053943:	add    DWORD PTR [eax+0x14],ebp
10053946:	movzx  ebx,BYTE PTR [eax+0x16b9]
1005394d:	mov    ecx,DWORD PTR [eax+0x8]
10053950:	mov    edi,DWORD PTR [eax+0x14]
10053953:	mov    BYTE PTR [edi+ecx*1],bl
10053956:	mov    ebx,DWORD PTR [eax+0x16bc]
1005395c:	add    DWORD PTR [eax+0x14],ebp
1005395f:	mov    cl,0x10
10053961:	sub    cl,bl
10053963:	shr    si,cl
10053966:	mov    ecx,DWORD PTR [esp+0x1c]
1005396a:	lea    ecx,[ebx+ecx*1-0x10]
1005396e:	mov    WORD PTR [eax+0x16b8],si
10053975:	mov    esi,DWORD PTR [esp+0x10]
10053979:	jmp    0x10053992
1005397b:	mov    di,WORD PTR [eax+0xac0]
10053982:	shl    di,cl
10053985:	or     WORD PTR [eax+0x16b8],di
1005398c:	mov    edi,DWORD PTR [esp+0x1c]
10053990:	add    ecx,edi
10053992:	add    esi,0xfffffffd
10053995:	cmp    ecx,0xd
10053998:	mov    DWORD PTR [eax+0x16bc],ecx
1005399e:	jle    0x100539f3
100539a0:	mov    edi,esi
100539a2:	shl    edi,cl
100539a4:	mov    ecx,DWORD PTR [eax+0x8]
100539a7:	or     WORD PTR [eax+0x16b8],di
100539ae:	movzx  ebx,BYTE PTR [eax+0x16b8]
100539b5:	mov    edi,DWORD PTR [eax+0x14]
100539b8:	mov    BYTE PTR [ecx+edi*1],bl
100539bb:	add    DWORD PTR [eax+0x14],ebp
100539be:	movzx  ebx,BYTE PTR [eax+0x16b9]
100539c5:	mov    edi,DWORD PTR [eax+0x14]
100539c8:	mov    ecx,DWORD PTR [eax+0x8]
100539cb:	mov    BYTE PTR [edi+ecx*1],bl
100539ce:	mov    ebx,DWORD PTR [eax+0x16bc]
100539d4:	add    DWORD PTR [eax+0x14],ebp
100539d7:	mov    cl,0x10
100539d9:	sub    cl,bl
100539db:	shr    si,cl
100539de:	add    ebx,0xfffffff3
100539e1:	mov    DWORD PTR [eax+0x16bc],ebx
100539e7:	mov    WORD PTR [eax+0x16b8],si
100539ee:	jmp    0x10053af6
100539f3:	shl    esi,cl
100539f5:	or     WORD PTR [eax+0x16b8],si
100539fc:	add    ecx,0x3
100539ff:	jmp    0x10053af0
10053a04:	movzx  edi,WORD PTR [eax+0xac6]
10053a0b:	sub    ebx,edi
10053a0d:	cmp    ecx,ebx
10053a0f:	mov    DWORD PTR [esp+0x1c],edi
10053a13:	jle    0x10053a6f
10053a15:	movzx  esi,WORD PTR [eax+0xac4]
10053a1c:	mov    edi,esi
10053a1e:	shl    edi,cl
10053a20:	mov    ecx,DWORD PTR [eax+0x8]
10053a23:	or     WORD PTR [eax+0x16b8],di
10053a2a:	movzx  ebx,BYTE PTR [eax+0x16b8]
10053a31:	mov    edi,DWORD PTR [eax+0x14]
10053a34:	mov    BYTE PTR [ecx+edi*1],bl
10053a37:	add    DWORD PTR [eax+0x14],ebp
10053a3a:	movzx  ebx,BYTE PTR [eax+0x16b9]
10053a41:	mov    ecx,DWORD PTR [eax+0x8]
10053a44:	mov    edi,DWORD PTR [eax+0x14]
10053a47:	mov    BYTE PTR [edi+ecx*1],bl
10053a4a:	mov    ebx,DWORD PTR [eax+0x16bc]
10053a50:	add    DWORD PTR [eax+0x14],ebp
10053a53:	mov    cl,0x10
10053a55:	sub    cl,bl
10053a57:	shr    si,cl
10053a5a:	mov    ecx,DWORD PTR [esp+0x1c]
10053a5e:	lea    ecx,[ebx+ecx*1-0x10]
10053a62:	mov    WORD PTR [eax+0x16b8],si
10053a69:	mov    esi,DWORD PTR [esp+0x10]
10053a6d:	jmp    0x10053a86
10053a6f:	mov    di,WORD PTR [eax+0xac4]
10053a76:	shl    di,cl
10053a79:	or     WORD PTR [eax+0x16b8],di
10053a80:	mov    edi,DWORD PTR [esp+0x1c]
10053a84:	add    ecx,edi
10053a86:	add    esi,0xfffffff5
10053a89:	cmp    ecx,0x9
10053a8c:	mov    DWORD PTR [eax+0x16bc],ecx
10053a92:	jle    0x10053ae4
10053a94:	mov    edi,esi
10053a96:	shl    edi,cl
10053a98:	mov    ecx,DWORD PTR [eax+0x8]
10053a9b:	or     WORD PTR [eax+0x16b8],di
10053aa2:	movzx  ebx,BYTE PTR [eax+0x16b8]
10053aa9:	mov    edi,DWORD PTR [eax+0x14]
10053aac:	mov    BYTE PTR [ecx+edi*1],bl
10053aaf:	add    DWORD PTR [eax+0x14],ebp
10053ab2:	movzx  ebx,BYTE PTR [eax+0x16b9]
10053ab9:	mov    edi,DWORD PTR [eax+0x14]
10053abc:	mov    ecx,DWORD PTR [eax+0x8]
10053abf:	mov    BYTE PTR [edi+ecx*1],bl
10053ac2:	mov    ebx,DWORD PTR [eax+0x16bc]
10053ac8:	add    DWORD PTR [eax+0x14],ebp
10053acb:	mov    cl,0x10
10053acd:	sub    cl,bl
10053acf:	shr    si,cl
10053ad2:	add    ebx,0xfffffff7
10053ad5:	mov    DWORD PTR [eax+0x16bc],ebx
10053adb:	mov    WORD PTR [eax+0x16b8],si
10053ae2:	jmp    0x10053af6
10053ae4:	shl    esi,cl
10053ae6:	or     WORD PTR [eax+0x16b8],si
10053aed:	add    ecx,0x7
10053af0:	mov    DWORD PTR [eax+0x16bc],ecx
10053af6:	mov    ecx,DWORD PTR [esp+0x14]
10053afa:	xor    esi,esi
10053afc:	test   ecx,ecx
10053afe:	mov    DWORD PTR [esp+0x1c],edx
10053b02:	jne    0x10053b10
10053b04:	mov    ecx,0x8a
10053b09:	mov    edi,0x3
10053b0e:	jmp    0x10053b2a
10053b10:	cmp    edx,ecx
10053b12:	jne    0x10053b20
10053b14:	mov    ecx,0x6
10053b19:	mov    edi,0x3
10053b1e:	jmp    0x10053b2a
10053b20:	mov    ecx,0x7
10053b25:	mov    edi,0x4
10053b2a:	add    DWORD PTR [esp+0x18],0x4
10053b2f:	sub    DWORD PTR [esp+0x20],ebp
10053b33:	jne    0x10053680
10053b39:	pop    edi
10053b3a:	pop    esi
10053b3b:	pop    ebp
10053b3c:	pop    ebx
10053b3d:	add    esp,0x18
10053b40:	ret    
10053b41:	int3   
10053b42:	int3   
10053b43:	int3   
10053b44:	int3   
10053b45:	int3   
10053b46:	int3   
10053b47:	int3   
10053b48:	int3   
10053b49:	int3   
10053b4a:	int3   
10053b4b:	int3   
10053b4c:	int3   
10053b4d:	int3   
10053b4e:	int3   
10053b4f:	int3   
10053b50:	push   ecx
10053b51:	mov    ecx,DWORD PTR [eax+0x16bc]
10053b57:	cmp    ecx,0xb
10053b5a:	push   ebx
10053b5b:	mov    ebx,DWORD PTR [esp+0x14]
10053b5f:	push   ebp
10053b60:	push   esi
10053b61:	push   edi
10053b62:	mov    ebp,0x1
10053b67:	jle    0x10053bc7
10053b69:	mov    esi,DWORD PTR [esp+0x18]
10053b6d:	add    esi,0xfffffeff
10053b73:	mov    edx,esi
10053b75:	shl    edx,cl
10053b77:	mov    ecx,DWORD PTR [eax+0x14]
10053b7a:	or     WORD PTR [eax+0x16b8],dx
10053b81:	movzx  ebx,BYTE PTR [eax+0x16b8]
10053b88:	mov    edx,DWORD PTR [eax+0x8]
10053b8b:	mov    BYTE PTR [ecx+edx*1],bl
10053b8e:	add    DWORD PTR [eax+0x14],ebp
10053b91:	movzx  ebx,BYTE PTR [eax+0x16b9]
10053b98:	mov    ecx,DWORD PTR [eax+0x14]
10053b9b:	mov    edx,DWORD PTR [eax+0x8]
10053b9e:	mov    BYTE PTR [ecx+edx*1],bl
10053ba1:	mov    edx,DWORD PTR [eax+0x16bc]
10053ba7:	add    DWORD PTR [eax+0x14],ebp
10053baa:	mov    ebx,DWORD PTR [esp+0x20]
10053bae:	mov    cl,0x10
10053bb0:	sub    cl,dl
10053bb2:	shr    si,cl
10053bb5:	add    edx,0xfffffff5
10053bb8:	mov    DWORD PTR [eax+0x16bc],edx
10053bbe:	mov    WORD PTR [eax+0x16b8],si
10053bc5:	jmp    0x10053be3
10053bc7:	mov    edx,DWORD PTR [esp+0x18]
10053bcb:	add    edx,0xfffffeff
10053bd1:	shl    edx,cl
10053bd3:	or     WORD PTR [eax+0x16b8],dx
10053bda:	add    ecx,0x5
10053bdd:	mov    DWORD PTR [eax+0x16bc],ecx
10053be3:	mov    ecx,DWORD PTR [eax+0x16bc]
10053be9:	cmp    ecx,0xb
10053bec:	jle    0x10053c4d
10053bee:	mov    esi,DWORD PTR [esp+0x1c]
10053bf2:	add    esi,0xffffffff
10053bf5:	mov    edx,esi
10053bf7:	shl    edx,cl
10053bf9:	mov    ecx,DWORD PTR [eax+0x14]
10053bfc:	mov    DWORD PTR [esp+0x10],ebx
10053c00:	or     WORD PTR [eax+0x16b8],dx
10053c07:	movzx  ebx,BYTE PTR [eax+0x16b8]
10053c0e:	mov    edx,DWORD PTR [eax+0x8]
10053c11:	mov    BYTE PTR [ecx+edx*1],bl
10053c14:	add    DWORD PTR [eax+0x14],ebp
10053c17:	movzx  ebx,BYTE PTR [eax+0x16b9]
10053c1e:	mov    ecx,DWORD PTR [eax+0x14]
10053c21:	mov    edx,DWORD PTR [eax+0x8]
10053c24:	mov    BYTE PTR [ecx+edx*1],bl
10053c27:	mov    edx,DWORD PTR [eax+0x16bc]
10053c2d:	add    DWORD PTR [eax+0x14],ebp
10053c30:	mov    ebx,DWORD PTR [esp+0x10]
10053c34:	mov    cl,0x10
10053c36:	sub    cl,dl
10053c38:	shr    si,cl
10053c3b:	add    edx,0xfffffff5
10053c3e:	mov    DWORD PTR [eax+0x16bc],edx
10053c44:	mov    WORD PTR [eax+0x16b8],si
10053c4b:	jmp    0x10053c66
10053c4d:	mov    edx,DWORD PTR [esp+0x1c]
10053c51:	add    edx,0xffffffff
10053c54:	shl    edx,cl
10053c56:	or     WORD PTR [eax+0x16b8],dx
10053c5d:	add    ecx,0x5
10053c60:	mov    DWORD PTR [eax+0x16bc],ecx
10053c66:	mov    ecx,DWORD PTR [eax+0x16bc]
10053c6c:	cmp    ecx,0xc
10053c6f:	jle    0x10053ccc
10053c71:	lea    esi,[ebx-0x4]
10053c74:	mov    edx,esi
10053c76:	shl    edx,cl
10053c78:	mov    ecx,DWORD PTR [eax+0x14]
10053c7b:	mov    DWORD PTR [esp+0x10],ebx
10053c7f:	or     WORD PTR [eax+0x16b8],dx
10053c86:	movzx  ebx,BYTE PTR [eax+0x16b8]
10053c8d:	mov    edx,DWORD PTR [eax+0x8]
10053c90:	mov    BYTE PTR [ecx+edx*1],bl
10053c93:	add    DWORD PTR [eax+0x14],ebp
10053c96:	movzx  ebx,BYTE PTR [eax+0x16b9]
10053c9d:	mov    ecx,DWORD PTR [eax+0x14]
10053ca0:	mov    edx,DWORD PTR [eax+0x8]
10053ca3:	mov    BYTE PTR [ecx+edx*1],bl
10053ca6:	mov    edx,DWORD PTR [eax+0x16bc]
10053cac:	add    DWORD PTR [eax+0x14],ebp
10053caf:	mov    ebx,DWORD PTR [esp+0x10]
10053cb3:	mov    cl,0x10
10053cb5:	sub    cl,dl
10053cb7:	shr    si,cl
10053cba:	add    edx,0xfffffff4
10053cbd:	mov    DWORD PTR [eax+0x16bc],edx
10053cc3:	mov    WORD PTR [eax+0x16b8],si
10053cca:	jmp    0x10053ce1
10053ccc:	lea    edx,[ebx-0x4]
10053ccf:	shl    edx,cl
10053cd1:	or     WORD PTR [eax+0x16b8],dx
10053cd8:	add    ecx,0x4
10053cdb:	mov    DWORD PTR [eax+0x16bc],ecx
10053ce1:	xor    edi,edi
10053ce3:	test   ebx,ebx
10053ce5:	jle    0x10053d83
10053ceb:	jmp    0x10053cf0
10053ced:	lea    ecx,[ecx+0x0]
10053cf0:	mov    ecx,DWORD PTR [eax+0x16bc]
10053cf6:	cmp    ecx,0xd
10053cf9:	movzx  edx,BYTE PTR [edi+0x10067aac]
10053d00:	jle    0x10053d5e
10053d02:	movzx  esi,WORD PTR [eax+edx*4+0xa7e]
10053d0a:	mov    edx,esi
10053d0c:	shl    edx,cl
10053d0e:	mov    ecx,DWORD PTR [eax+0x14]
10053d11:	or     WORD PTR [eax+0x16b8],dx
10053d18:	movzx  ebx,BYTE PTR [eax+0x16b8]
10053d1f:	mov    edx,DWORD PTR [eax+0x8]
10053d22:	mov    BYTE PTR [ecx+edx*1],bl
10053d25:	add    DWORD PTR [eax+0x14],ebp
10053d28:	movzx  ebx,BYTE PTR [eax+0x16b9]
10053d2f:	mov    ecx,DWORD PTR [eax+0x14]
10053d32:	mov    edx,DWORD PTR [eax+0x8]
10053d35:	mov    BYTE PTR [ecx+edx*1],bl
10053d38:	mov    edx,DWORD PTR [eax+0x16bc]
10053d3e:	add    DWORD PTR [eax+0x14],ebp
10053d41:	mov    ebx,DWORD PTR [esp+0x20]
10053d45:	mov    cl,0x10
10053d47:	sub    cl,dl
10053d49:	shr    si,cl
10053d4c:	add    edx,0xfffffff3
10053d4f:	mov    DWORD PTR [eax+0x16bc],edx
10053d55:	mov    WORD PTR [eax+0x16b8],si
10053d5c:	jmp    0x10053d79
10053d5e:	mov    dx,WORD PTR [eax+edx*4+0xa7e]
10053d66:	shl    dx,cl
10053d69:	or     WORD PTR [eax+0x16b8],dx
10053d70:	add    ecx,0x3
10053d73:	mov    DWORD PTR [eax+0x16bc],ecx
10053d79:	add    edi,ebp
10053d7b:	cmp    edi,ebx
10053d7d:	jl     0x10053cf0
10053d83:	mov    ecx,DWORD PTR [esp+0x18]
10053d87:	add    ecx,0xffffffff
10053d8a:	lea    edx,[eax+0x94]
10053d90:	call   0x10053630
10053d95:	mov    ecx,DWORD PTR [esp+0x1c]
10053d99:	pop    edi
10053d9a:	pop    esi
10053d9b:	pop    ebp
10053d9c:	add    ecx,0xffffffff
10053d9f:	lea    edx,[eax+0x988]
10053da5:	pop    ebx
10053da6:	add    esp,0x4
10053da9:	jmp    0x10053630
10053dae:	int3   
10053daf:	int3   
10053db0:	sub    esp,0xc
10053db3:	push   ebx
10053db4:	mov    ebx,DWORD PTR [esp+0x14]
10053db8:	push   ebp
10053db9:	xor    ecx,ecx
10053dbb:	cmp    DWORD PTR [eax+0x16a0],ecx
10053dc1:	push   esi
10053dc2:	push   edi
10053dc3:	je     0x10054102
10053dc9:	lea    esp,[esp+0x0]
10053dd0:	mov    edx,DWORD PTR [eax+0x16a4]
10053dd6:	movzx  ebp,WORD PTR [edx+ecx*2]
10053dda:	mov    edx,DWORD PTR [eax+0x1698]
10053de0:	movzx  esi,BYTE PTR [ecx+edx*1]
10053de4:	add    ecx,0x1
10053de7:	test   ebp,ebp
10053de9:	mov    DWORD PTR [esp+0x18],ecx
10053ded:	mov    ecx,DWORD PTR [eax+0x16bc]
10053df3:	jne    0x10053e7a
10053df9:	movzx  edi,WORD PTR [ebx+esi*4+0x2]
10053dfe:	mov    edx,0x10
10053e03:	sub    edx,edi
10053e05:	cmp    ecx,edx
10053e07:	jle    0x10053e65
10053e09:	movzx  esi,WORD PTR [ebx+esi*4]
10053e0d:	mov    edx,esi
10053e0f:	shl    edx,cl
10053e11:	mov    ecx,DWORD PTR [eax+0x8]
10053e14:	mov    DWORD PTR [esp+0x10],ebx
10053e18:	or     WORD PTR [eax+0x16b8],dx
10053e1f:	movzx  ebx,BYTE PTR [eax+0x16b8]
10053e26:	mov    edx,DWORD PTR [eax+0x14]
10053e29:	mov    BYTE PTR [ecx+edx*1],bl
10053e2c:	add    DWORD PTR [eax+0x14],0x1
10053e30:	movzx  ebx,BYTE PTR [eax+0x16b9]
10053e37:	mov    ecx,DWORD PTR [eax+0x14]
10053e3a:	mov    edx,DWORD PTR [eax+0x8]
10053e3d:	mov    BYTE PTR [ecx+edx*1],bl
10053e40:	mov    edx,DWORD PTR [eax+0x16bc]
10053e46:	add    DWORD PTR [eax+0x14],0x1
10053e4a:	mov    ebx,DWORD PTR [esp+0x10]
10053e4e:	mov    cl,0x10
10053e50:	sub    cl,dl
10053e52:	shr    si,cl
10053e55:	lea    ecx,[edx+edi*1-0x10]
10053e59:	mov    WORD PTR [eax+0x16b8],si
10053e60:	jmp    0x100540ec
10053e65:	mov    dx,WORD PTR [ebx+esi*4]
10053e69:	shl    dx,cl
10053e6c:	or     WORD PTR [eax+0x16b8],dx
10053e73:	add    ecx,edi
10053e75:	jmp    0x100540ec
10053e7a:	movzx  edx,BYTE PTR [esi+0x10068280]
10053e81:	movzx  edi,WORD PTR [ebx+edx*4+0x406]
10053e89:	mov    ebx,0x10
10053e8e:	sub    ebx,edi
10053e90:	cmp    ecx,ebx
10053e92:	mov    DWORD PTR [esp+0x10],edi
10053e96:	mov    edi,DWORD PTR [esp+0x20]
10053e9a:	mov    DWORD PTR [esp+0x14],edx
10053e9e:	jle    0x10053f03
10053ea0:	movzx  edi,WORD PTR [edi+edx*4+0x404]
10053ea8:	mov    edx,edi
10053eaa:	shl    edx,cl
10053eac:	mov    ecx,DWORD PTR [eax+0x8]
10053eaf:	or     WORD PTR [eax+0x16b8],dx
10053eb6:	movzx  ebx,BYTE PTR [eax+0x16b8]
10053ebd:	mov    edx,DWORD PTR [eax+0x14]
10053ec0:	mov    BYTE PTR [ecx+edx*1],bl
10053ec3:	add    DWORD PTR [eax+0x14],0x1
10053ec7:	mov    ecx,DWORD PTR [eax+0x14]
10053eca:	movzx  ebx,BYTE PTR [eax+0x16b9]
10053ed1:	mov    edx,DWORD PTR [eax+0x8]
10053ed4:	mov    BYTE PTR [ecx+edx*1],bl
10053ed7:	mov    edx,DWORD PTR [eax+0x16bc]
10053edd:	add    DWORD PTR [eax+0x14],0x1
10053ee1:	mov    cl,0x10
10053ee3:	sub    cl,dl
10053ee5:	shr    di,cl
10053ee8:	mov    ecx,DWORD PTR [esp+0x10]
10053eec:	lea    edx,[edx+ecx*1-0x10]
10053ef0:	mov    DWORD PTR [eax+0x16bc],edx
10053ef6:	mov    edx,DWORD PTR [esp+0x14]
10053efa:	mov    WORD PTR [eax+0x16b8],di
10053f01:	jmp    0x10053f21
10053f03:	mov    di,WORD PTR [edi+edx*4+0x404]
10053f0b:	shl    di,cl
10053f0e:	or     WORD PTR [eax+0x16b8],di
10053f15:	mov    edi,DWORD PTR [esp+0x10]
10053f19:	add    ecx,edi
10053f1b:	mov    DWORD PTR [eax+0x16bc],ecx
10053f21:	mov    edi,DWORD PTR [edx*4+0x10067a38]
10053f28:	test   edi,edi
10053f2a:	mov    ebx,DWORD PTR [esp+0x20]
10053f2e:	je     0x10053faa
10053f30:	sub    esi,DWORD PTR [edx*4+0x10068380]
10053f37:	mov    ecx,DWORD PTR [eax+0x16bc]
10053f3d:	mov    edx,0x10
10053f42:	sub    edx,edi
10053f44:	cmp    ecx,edx
10053f46:	jle    0x10053f99
10053f48:	mov    edx,esi
10053f4a:	shl    edx,cl
10053f4c:	mov    ecx,DWORD PTR [eax+0x8]
10053f4f:	or     WORD PTR [eax+0x16b8],dx
10053f56:	movzx  ebx,BYTE PTR [eax+0x16b8]
10053f5d:	mov    edx,DWORD PTR [eax+0x14]
10053f60:	mov    BYTE PTR [ecx+edx*1],bl
10053f63:	add    DWORD PTR [eax+0x14],0x1
10053f67:	movzx  ebx,BYTE PTR [eax+0x16b9]
10053f6e:	mov    ecx,DWORD PTR [eax+0x14]
10053f71:	mov    edx,DWORD PTR [eax+0x8]
10053f74:	mov    BYTE PTR [ecx+edx*1],bl
10053f77:	mov    edx,DWORD PTR [eax+0x16bc]
10053f7d:	add    DWORD PTR [eax+0x14],0x1
10053f81:	mov    ebx,DWORD PTR [esp+0x20]
10053f85:	mov    cl,0x10
10053f87:	sub    cl,dl
10053f89:	shr    si,cl
10053f8c:	lea    ecx,[edx+edi*1-0x10]
10053f90:	mov    WORD PTR [eax+0x16b8],si
10053f97:	jmp    0x10053fa4
10053f99:	shl    esi,cl
10053f9b:	or     WORD PTR [eax+0x16b8],si
10053fa2:	add    ecx,edi
10053fa4:	mov    DWORD PTR [eax+0x16bc],ecx
10053faa:	sub    ebp,0x1
10053fad:	cmp    ebp,0x100
10053fb3:	jae    0x10053fbe
10053fb5:	movzx  edi,BYTE PTR [ebp+0x10068080]
10053fbc:	jmp    0x10053fca
10053fbe:	mov    edx,ebp
10053fc0:	shr    edx,0x7
10053fc3:	movzx  edi,BYTE PTR [edx+0x10068180]
10053fca:	mov    ecx,DWORD PTR [esp+0x24]
10053fce:	movzx  edx,WORD PTR [ecx+edi*4+0x2]
10053fd3:	mov    ecx,DWORD PTR [eax+0x16bc]
10053fd9:	mov    esi,0x10
10053fde:	sub    esi,edx
10053fe0:	cmp    ecx,esi
10053fe2:	mov    DWORD PTR [esp+0x14],edx
10053fe6:	jle    0x1005404b
10053fe8:	mov    edx,DWORD PTR [esp+0x24]
10053fec:	movzx  esi,WORD PTR [edx+edi*4]
10053ff0:	mov    edx,esi
10053ff2:	shl    edx,cl
10053ff4:	mov    ecx,DWORD PTR [eax+0x8]
10053ff7:	or     WORD PTR [eax+0x16b8],dx
10053ffe:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054005:	mov    edx,DWORD PTR [eax+0x14]
10054008:	mov    BYTE PTR [ecx+edx*1],bl
1005400b:	add    DWORD PTR [eax+0x14],0x1
1005400f:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054016:	mov    ecx,DWORD PTR [eax+0x14]
10054019:	mov    edx,DWORD PTR [eax+0x8]
1005401c:	mov    BYTE PTR [ecx+edx*1],bl
1005401f:	mov    edx,DWORD PTR [eax+0x16bc]
10054025:	add    DWORD PTR [eax+0x14],0x1
10054029:	mov    ebx,DWORD PTR [esp+0x20]
1005402d:	mov    cl,0x10
1005402f:	sub    cl,dl
10054031:	shr    si,cl
10054034:	mov    ecx,DWORD PTR [esp+0x14]
10054038:	lea    edx,[edx+ecx*1-0x10]
1005403c:	mov    DWORD PTR [eax+0x16bc],edx
10054042:	mov    WORD PTR [eax+0x16b8],si
10054049:	jmp    0x10054065
1005404b:	mov    esi,DWORD PTR [esp+0x24]
1005404f:	mov    si,WORD PTR [esi+edi*4]
10054053:	shl    si,cl
10054056:	or     WORD PTR [eax+0x16b8],si
1005405d:	add    ecx,edx
1005405f:	mov    DWORD PTR [eax+0x16bc],ecx
10054065:	mov    esi,DWORD PTR [edi*4+0x10067ac0]
1005406c:	test   esi,esi
1005406e:	je     0x100540f2
10054074:	mov    ecx,DWORD PTR [eax+0x16bc]
1005407a:	sub    ebp,DWORD PTR [edi*4+0x100683f8]
10054081:	mov    edx,0x10
10054086:	sub    edx,esi
10054088:	cmp    ecx,edx
1005408a:	jle    0x100540e1
1005408c:	mov    edx,ebp
1005408e:	shl    edx,cl
10054090:	mov    ecx,DWORD PTR [eax+0x8]
10054093:	mov    DWORD PTR [esp+0x14],ebx
10054097:	or     WORD PTR [eax+0x16b8],dx
1005409e:	movzx  ebx,BYTE PTR [eax+0x16b8]
100540a5:	mov    edx,DWORD PTR [eax+0x14]
100540a8:	mov    BYTE PTR [ecx+edx*1],bl
100540ab:	add    DWORD PTR [eax+0x14],0x1
100540af:	movzx  ebx,BYTE PTR [eax+0x16b9]
100540b6:	mov    ecx,DWORD PTR [eax+0x14]
100540b9:	mov    edx,DWORD PTR [eax+0x8]
100540bc:	mov    BYTE PTR [ecx+edx*1],bl
100540bf:	mov    edx,DWORD PTR [eax+0x16bc]
100540c5:	add    DWORD PTR [eax+0x14],0x1
100540c9:	mov    ebx,DWORD PTR [esp+0x14]
100540cd:	mov    cl,0x10
100540cf:	sub    cl,dl
100540d1:	shr    bp,cl
100540d4:	lea    ecx,[edx+esi*1-0x10]
100540d8:	mov    WORD PTR [eax+0x16b8],bp
100540df:	jmp    0x100540ec
100540e1:	shl    ebp,cl
100540e3:	or     WORD PTR [eax+0x16b8],bp
100540ea:	add    ecx,esi
100540ec:	mov    DWORD PTR [eax+0x16bc],ecx
100540f2:	mov    ecx,DWORD PTR [esp+0x18]
100540f6:	cmp    ecx,DWORD PTR [eax+0x16a0]
100540fc:	jb     0x10053dd0
10054102:	movzx  edi,WORD PTR [ebx+0x402]
10054109:	mov    ecx,DWORD PTR [eax+0x16bc]
1005410f:	mov    edx,0x10
10054114:	sub    edx,edi
10054116:	cmp    ecx,edx
10054118:	jle    0x1005418d
1005411a:	movzx  esi,WORD PTR [ebx+0x400]
10054121:	mov    edx,esi
10054123:	shl    edx,cl
10054125:	mov    ecx,DWORD PTR [eax+0x8]
10054128:	mov    DWORD PTR [esp+0x20],ebx
1005412c:	or     WORD PTR [eax+0x16b8],dx
10054133:	mov    edx,DWORD PTR [eax+0x14]
10054136:	mov    bl,BYTE PTR [eax+0x16b8]
1005413c:	mov    BYTE PTR [ecx+edx*1],bl
1005413f:	add    DWORD PTR [eax+0x14],0x1
10054143:	mov    ebp,DWORD PTR [eax+0x14]
10054146:	mov    ecx,DWORD PTR [eax+0x8]
10054149:	mov    dl,BYTE PTR [eax+0x16b9]
1005414f:	mov    ebx,DWORD PTR [esp+0x20]
10054153:	mov    BYTE PTR [ecx+ebp*1],dl
10054156:	mov    edx,DWORD PTR [eax+0x16bc]
1005415c:	add    DWORD PTR [eax+0x14],0x1
10054160:	mov    cl,0x10
10054162:	sub    cl,dl
10054164:	shr    si,cl
10054167:	lea    ecx,[edx+edi*1-0x10]
1005416b:	pop    edi
1005416c:	mov    DWORD PTR [eax+0x16bc],ecx
10054172:	mov    WORD PTR [eax+0x16b8],si
10054179:	movzx  edx,WORD PTR [ebx+0x402]
10054180:	pop    esi
10054181:	pop    ebp
10054182:	mov    DWORD PTR [eax+0x16b4],edx
10054188:	pop    ebx
10054189:	add    esp,0xc
1005418c:	ret    
1005418d:	mov    dx,WORD PTR [ebx+0x400]
10054194:	shl    dx,cl
10054197:	or     WORD PTR [eax+0x16b8],dx
1005419e:	add    ecx,edi
100541a0:	pop    edi
100541a1:	mov    DWORD PTR [eax+0x16bc],ecx
100541a7:	movzx  ecx,WORD PTR [ebx+0x402]
100541ae:	pop    esi
100541af:	pop    ebp
100541b0:	mov    DWORD PTR [eax+0x16b4],ecx
100541b6:	pop    ebx
100541b7:	add    esp,0xc
100541ba:	ret    
100541bb:	int3   
100541bc:	int3   
100541bd:	int3   
100541be:	int3   
100541bf:	int3   
100541c0:	xor    eax,eax
100541c2:	lea    ecx,[edx+0x94]
100541c8:	cmp    WORD PTR [ecx],0x0
100541cc:	jne    0x100541d9
100541ce:	add    eax,0x1
100541d1:	add    ecx,0x4
100541d4:	cmp    eax,0x9
100541d7:	jl     0x100541c8
100541d9:	cmp    eax,0x9
100541dc:	jne    0x1005427d
100541e2:	mov    eax,0xe
100541e7:	lea    ecx,[edx+0xd0]
100541ed:	lea    ecx,[ecx+0x0]
100541f0:	cmp    WORD PTR [ecx-0x4],0x0
100541f5:	jne    0x1005427d
100541fb:	cmp    WORD PTR [ecx],0x0
100541ff:	jne    0x10054236
10054201:	cmp    WORD PTR [ecx+0x4],0x0
10054206:	jne    0x10054247
10054208:	cmp    WORD PTR [ecx+0x8],0x0
1005420d:	jne    0x10054258
1005420f:	cmp    WORD PTR [ecx+0xc],0x0
10054214:	jne    0x10054269
10054216:	cmp    WORD PTR [ecx+0x10],0x0
1005421b:	jne    0x1005427a
1005421d:	add    eax,0x6
10054220:	add    ecx,0x18
10054223:	cmp    eax,0x20
10054226:	jl     0x100541f0
10054228:	mov    edx,DWORD PTR [edx]
1005422a:	xor    ecx,ecx
1005422c:	cmp    eax,0x20
1005422f:	sete   cl
10054232:	mov    DWORD PTR [edx+0x2c],ecx
10054235:	ret    
10054236:	mov    edx,DWORD PTR [edx]
10054238:	xor    ecx,ecx
1005423a:	add    eax,0x1
1005423d:	cmp    eax,0x20
10054240:	sete   cl
10054243:	mov    DWORD PTR [edx+0x2c],ecx
10054246:	ret    
10054247:	mov    edx,DWORD PTR [edx]
10054249:	xor    ecx,ecx
1005424b:	add    eax,0x2
1005424e:	cmp    eax,0x20
10054251:	sete   cl
10054254:	mov    DWORD PTR [edx+0x2c],ecx
10054257:	ret    
10054258:	mov    edx,DWORD PTR [edx]
1005425a:	xor    ecx,ecx
1005425c:	add    eax,0x3
1005425f:	cmp    eax,0x20
10054262:	sete   cl
10054265:	mov    DWORD PTR [edx+0x2c],ecx
10054268:	ret    
10054269:	mov    edx,DWORD PTR [edx]
1005426b:	xor    ecx,ecx
1005426d:	add    eax,0x4
10054270:	cmp    eax,0x20
10054273:	sete   cl
10054276:	mov    DWORD PTR [edx+0x2c],ecx
10054279:	ret    
1005427a:	add    eax,0x5
1005427d:	mov    edx,DWORD PTR [edx]
1005427f:	xor    ecx,ecx
10054281:	cmp    eax,0x20
10054284:	sete   cl
10054287:	mov    DWORD PTR [edx+0x2c],ecx
1005428a:	ret    
1005428b:	int3   
1005428c:	int3   
1005428d:	int3   
1005428e:	int3   
1005428f:	int3   
10054290:	xor    eax,eax
10054292:	push   esi
10054293:	mov    esi,ecx
10054295:	and    esi,0x1
10054298:	or     eax,esi
1005429a:	sub    edx,0x1
1005429d:	shr    ecx,1
1005429f:	add    eax,eax
100542a1:	test   edx,edx
100542a3:	jg     0x10054293
100542a5:	shr    eax,1
100542a7:	pop    esi
100542a8:	ret    
100542a9:	int3   
100542aa:	int3   
100542ab:	int3   
100542ac:	int3   
100542ad:	int3   
100542ae:	int3   
100542af:	int3   
100542b0:	mov    ecx,DWORD PTR [eax+0x16bc]
100542b6:	cmp    ecx,0x10
100542b9:	push   ebx
100542ba:	jne    0x100542f5
100542bc:	movzx  ebx,BYTE PTR [eax+0x16b8]
100542c3:	mov    edx,DWORD PTR [eax+0x14]
100542c6:	mov    ecx,DWORD PTR [eax+0x8]
100542c9:	mov    BYTE PTR [ecx+edx*1],bl
100542cc:	add    DWORD PTR [eax+0x14],0x1
100542d0:	movzx  ebx,BYTE PTR [eax+0x16b9]
100542d7:	mov    ecx,DWORD PTR [eax+0x14]
100542da:	mov    edx,DWORD PTR [eax+0x8]
100542dd:	mov    BYTE PTR [ecx+edx*1],bl
100542e0:	add    DWORD PTR [eax+0x14],0x1
100542e4:	xor    ecx,ecx
100542e6:	mov    DWORD PTR [eax+0x16bc],ecx
100542ec:	mov    WORD PTR [eax+0x16b8],cx
100542f3:	pop    ebx
100542f4:	ret    
100542f5:	cmp    ecx,0x8
100542f8:	jl     0x10054323
100542fa:	mov    ecx,DWORD PTR [eax+0x8]
100542fd:	mov    edx,DWORD PTR [eax+0x14]
10054300:	mov    bl,BYTE PTR [eax+0x16b8]
10054306:	mov    BYTE PTR [ecx+edx*1],bl
10054309:	movzx  cx,BYTE PTR [eax+0x16b9]
10054311:	add    DWORD PTR [eax+0x14],0x1
10054315:	add    DWORD PTR [eax+0x16bc],0xfffffff8
1005431c:	mov    WORD PTR [eax+0x16b8],cx
10054323:	pop    ebx
10054324:	ret    
10054325:	int3   
10054326:	int3   
10054327:	int3   
10054328:	int3   
10054329:	int3   
1005432a:	int3   
1005432b:	int3   
1005432c:	int3   
1005432d:	int3   
1005432e:	int3   
1005432f:	int3   
10054330:	mov    edx,DWORD PTR [eax+0x16bc]
10054336:	cmp    edx,0x8
10054339:	push   ebx
1005433a:	push   esi
1005433b:	jle    0x1005437a
1005433d:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054344:	mov    edx,DWORD PTR [eax+0x14]
10054347:	mov    ecx,DWORD PTR [eax+0x8]
1005434a:	mov    BYTE PTR [ecx+edx*1],bl
1005434d:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054354:	mov    edx,DWORD PTR [eax+0x8]
10054357:	mov    esi,0x1
1005435c:	add    DWORD PTR [eax+0x14],esi
1005435f:	mov    ecx,DWORD PTR [eax+0x14]
10054362:	mov    BYTE PTR [ecx+edx*1],bl
10054365:	add    DWORD PTR [eax+0x14],esi
10054368:	xor    ecx,ecx
1005436a:	pop    esi
1005436b:	mov    WORD PTR [eax+0x16b8],cx
10054372:	mov    DWORD PTR [eax+0x16bc],ecx
10054378:	pop    ebx
10054379:	ret    
1005437a:	xor    ecx,ecx
1005437c:	cmp    edx,ecx
1005437e:	jle    0x10054393
10054380:	mov    esi,DWORD PTR [eax+0x14]
10054383:	mov    edx,DWORD PTR [eax+0x8]
10054386:	mov    bl,BYTE PTR [eax+0x16b8]
1005438c:	mov    BYTE PTR [edx+esi*1],bl
1005438f:	add    DWORD PTR [eax+0x14],0x1
10054393:	pop    esi
10054394:	mov    WORD PTR [eax+0x16b8],cx
1005439b:	mov    DWORD PTR [eax+0x16bc],ecx
100543a1:	pop    ebx
100543a2:	ret    
100543a3:	int3   
100543a4:	int3   
100543a5:	int3   
100543a6:	int3   
100543a7:	int3   
100543a8:	int3   
100543a9:	int3   
100543aa:	int3   
100543ab:	int3   
100543ac:	int3   
100543ad:	int3   
100543ae:	int3   
100543af:	int3   
100543b0:	push   ebx
100543b1:	push   esi
100543b2:	push   edi
100543b3:	mov    ebx,ecx
100543b5:	mov    esi,edx
100543b7:	call   0x10054330
100543bc:	cmp    DWORD PTR [esp+0x10],0x0
100543c1:	mov    DWORD PTR [eax+0x16b4],0x8
100543cb:	mov    edi,0x1
100543d0:	je     0x1005440c
100543d2:	mov    ecx,DWORD PTR [eax+0x14]
100543d5:	mov    edx,DWORD PTR [eax+0x8]
100543d8:	mov    BYTE PTR [ecx+edx*1],bl
100543db:	add    DWORD PTR [eax+0x14],edi
100543de:	mov    ecx,DWORD PTR [eax+0x14]
100543e1:	mov    edx,DWORD PTR [eax+0x8]
100543e4:	mov    BYTE PTR [ecx+edx*1],bh
100543e7:	add    DWORD PTR [eax+0x14],edi
100543ea:	mov    edx,DWORD PTR [eax+0x8]
100543ed:	push   ebp
100543ee:	mov    ebp,DWORD PTR [eax+0x14]
100543f1:	mov    cl,bl
100543f3:	not    cl
100543f5:	mov    BYTE PTR [edx+ebp*1],cl
100543f8:	add    DWORD PTR [eax+0x14],edi
100543fb:	mov    ebp,DWORD PTR [eax+0x14]
100543fe:	mov    edx,DWORD PTR [eax+0x8]
10054401:	mov    ecx,ebx
10054403:	not    ecx
10054405:	mov    BYTE PTR [edx+ebp*1],ch
10054408:	add    DWORD PTR [eax+0x14],edi
1005440b:	pop    ebp
1005440c:	test   ebx,ebx
1005440e:	je     0x1005442e
10054410:	mov    ecx,DWORD PTR [eax+0x14]
10054413:	mov    edx,DWORD PTR [eax+0x8]
10054416:	sub    ebx,edi
10054418:	mov    DWORD PTR [esp+0x10],ebx
1005441c:	mov    bl,BYTE PTR [esi]
1005441e:	mov    BYTE PTR [ecx+edx*1],bl
10054421:	mov    ebx,DWORD PTR [esp+0x10]
10054425:	add    DWORD PTR [eax+0x14],edi
10054428:	add    esi,edi
1005442a:	test   ebx,ebx
1005442c:	jne    0x10054410
1005442e:	pop    edi
1005442f:	pop    esi
10054430:	pop    ebx
10054431:	ret    
10054432:	int3   
10054433:	int3   
10054434:	int3   
10054435:	int3   
10054436:	int3   
10054437:	int3   
10054438:	int3   
10054439:	int3   
1005443a:	int3   
1005443b:	int3   
1005443c:	int3   
1005443d:	int3   
1005443e:	int3   
1005443f:	int3   
10054440:	mov    edx,DWORD PTR [esp+0x4]
10054444:	lea    eax,[edx+0x94]
1005444a:	mov    DWORD PTR [edx+0xb18],eax
10054450:	lea    eax,[edx+0xa7c]
10054456:	mov    DWORD PTR [edx+0xb30],eax
1005445c:	xor    eax,eax
1005445e:	lea    ecx,[edx+0x988]
10054464:	mov    DWORD PTR [edx+0xb20],0x1007dfa8
1005446e:	mov    DWORD PTR [edx+0xb24],ecx
10054474:	mov    DWORD PTR [edx+0xb2c],0x1007dfbc
1005447e:	mov    DWORD PTR [edx+0xb38],0x1007dfd0
10054488:	mov    WORD PTR [edx+0x16b8],ax
1005448f:	mov    DWORD PTR [edx+0x16bc],eax
10054495:	mov    DWORD PTR [edx+0x16b4],0x8
1005449f:	jmp    0x100531e0
100544a4:	int3   
100544a5:	int3   
100544a6:	int3   
100544a7:	int3   
100544a8:	int3   
100544a9:	int3   
100544aa:	int3   
100544ab:	int3   
100544ac:	int3   
100544ad:	int3   
100544ae:	int3   
100544af:	int3   
100544b0:	sub    esp,0x24
100544b3:	mov    eax,ds:0x1007d030
100544b8:	xor    eax,esp
100544ba:	mov    DWORD PTR [esp+0x20],eax
100544be:	push   esi
100544bf:	lea    esi,[esp+0x6]
100544c3:	xor    ecx,ecx
100544c5:	mov    eax,0x1
100544ca:	sub    edx,esi
100544cc:	lea    esp,[esp+0x0]
100544d0:	lea    esi,[edx+eax*2]
100544d3:	mov    si,WORD PTR [esp+esi*1+0x4]
100544d8:	add    si,cx
100544db:	add    si,si
100544de:	movzx  ecx,si
100544e1:	mov    WORD PTR [esp+eax*2+0x4],cx
100544e6:	add    eax,0x1
100544e9:	cmp    eax,0xf
100544ec:	jle    0x100544d0
100544ee:	xor    esi,esi
100544f0:	test   ebx,ebx
100544f2:	jl     0x1005451d
100544f4:	movzx  edx,WORD PTR [edi+esi*4+0x2]
100544f9:	test   edx,edx
100544fb:	je     0x10054516
100544fd:	movzx  eax,WORD PTR [esp+edx*2+0x4]
10054502:	movzx  ecx,ax
10054505:	add    eax,0x1
10054508:	mov    WORD PTR [esp+edx*2+0x4],ax
1005450d:	call   0x10054290
10054512:	mov    WORD PTR [edi+esi*4],ax
10054516:	add    esi,0x1
10054519:	cmp    esi,ebx
1005451b:	jle    0x100544f4
1005451d:	mov    ecx,DWORD PTR [esp+0x24]
10054521:	pop    esi
10054522:	xor    ecx,esp
10054524:	call   0x10041d97
10054529:	add    esp,0x24
1005452c:	ret    
1005452d:	int3   
1005452e:	int3   
1005452f:	int3   
10054530:	sub    esp,0x8
10054533:	mov    eax,DWORD PTR [esp+0xc]
10054537:	push   ebx
10054538:	push   ebp
10054539:	push   edi
1005453a:	mov    edi,DWORD PTR [eax]
1005453c:	mov    eax,DWORD PTR [eax+0x8]
1005453f:	mov    ecx,DWORD PTR [eax+0xc]
10054542:	mov    ebp,DWORD PTR [eax]
10054544:	xor    edx,edx
10054546:	or     ebx,0xffffffff
10054549:	xor    eax,eax
1005454b:	cmp    ecx,edx
1005454d:	mov    DWORD PTR [esp+0x10],ecx
10054551:	mov    DWORD PTR [esp+0xc],ebx
10054555:	mov    DWORD PTR [esi+0x1450],edx
1005455b:	mov    DWORD PTR [esi+0x1454],0x23d
10054565:	jle    0x1005459e
10054567:	cmp    WORD PTR [edi+eax*4],dx
1005456b:	je     0x10054590
1005456d:	add    DWORD PTR [esi+0x1450],0x1
10054574:	mov    ecx,DWORD PTR [esi+0x1450]
1005457a:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
10054581:	mov    DWORD PTR [esp+0xc],eax
10054585:	mov    BYTE PTR [eax+esi*1+0x1458],dl
1005458c:	mov    ebx,eax
1005458e:	jmp    0x10054595
10054590:	mov    WORD PTR [edi+eax*4+0x2],dx
10054595:	add    eax,0x1
10054598:	cmp    eax,DWORD PTR [esp+0x10]
1005459c:	jl     0x10054567
1005459e:	cmp    DWORD PTR [esi+0x1450],0x2
100545a5:	jge    0x100545f9
100545a7:	cmp    ebx,0x2
100545aa:	jge    0x100545b3
100545ac:	add    ebx,0x1
100545af:	mov    eax,ebx
100545b1:	jmp    0x100545b5
100545b3:	xor    eax,eax
100545b5:	add    DWORD PTR [esi+0x1450],0x1
100545bc:	mov    ecx,DWORD PTR [esi+0x1450]
100545c2:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
100545c9:	mov    WORD PTR [edi+eax*4],0x1
100545cf:	mov    BYTE PTR [esi+eax*1+0x1458],dl
100545d6:	add    DWORD PTR [esi+0x16a8],0xffffffff
100545dd:	cmp    ebp,edx
100545df:	je     0x100545ec
100545e1:	movzx  eax,WORD PTR [ebp+eax*4+0x2]
100545e6:	sub    DWORD PTR [esi+0x16ac],eax
100545ec:	cmp    DWORD PTR [esi+0x1450],0x2
100545f3:	jl     0x100545a7
100545f5:	mov    DWORD PTR [esp+0xc],ebx
100545f9:	mov    ecx,DWORD PTR [esp+0x18]
100545fd:	mov    DWORD PTR [ecx+0x4],ebx
10054600:	mov    eax,DWORD PTR [esi+0x1450]
10054606:	cdq    
10054607:	sub    eax,edx
10054609:	mov    ebp,eax
1005460b:	sar    ebp,1
1005460d:	cmp    ebp,0x1
10054610:	jl     0x10054625
10054612:	push   ebp
10054613:	mov    eax,esi
10054615:	call   0x10053250
1005461a:	sub    ebp,0x1
1005461d:	add    esp,0x4
10054620:	cmp    ebp,0x1
10054623:	jge    0x10054612
10054625:	mov    ebx,DWORD PTR [esp+0x10]
10054629:	lea    esp,[esp+0x0]
10054630:	mov    eax,DWORD PTR [esi+0x1450]
10054636:	mov    edx,DWORD PTR [esi+eax*4+0xb5c]
1005463d:	mov    ebp,DWORD PTR [esi+0xb60]
10054643:	add    eax,0xffffffff
10054646:	mov    DWORD PTR [esi+0x1450],eax
1005464c:	push   0x1
1005464e:	mov    eax,esi
10054650:	mov    DWORD PTR [esi+0xb60],edx
10054656:	call   0x10053250
1005465b:	mov    eax,DWORD PTR [esi+0xb60]
10054661:	or     edx,0xffffffff
10054664:	add    DWORD PTR [esi+0x1454],edx
1005466a:	mov    ecx,DWORD PTR [esi+0x1454]
10054670:	mov    DWORD PTR [esi+ecx*4+0xb5c],ebp
10054677:	add    DWORD PTR [esi+0x1454],edx
1005467d:	mov    ecx,DWORD PTR [esi+0x1454]
10054683:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
1005468a:	mov    cx,WORD PTR [edi+eax*4]
1005468e:	add    cx,WORD PTR [edi+ebp*4]
10054692:	add    esp,0x4
10054695:	mov    WORD PTR [edi+ebx*4],cx
10054699:	mov    cl,BYTE PTR [esi+eax*1+0x1458]
100546a0:	mov    dl,BYTE PTR [esi+ebp*1+0x1458]
100546a7:	cmp    dl,cl
100546a9:	jb     0x100546b0
100546ab:	movzx  ecx,dl
100546ae:	jmp    0x100546b3
100546b0:	movzx  ecx,cl
100546b3:	add    cl,0x1
100546b6:	mov    BYTE PTR [esi+ebx*1+0x1458],cl
100546bd:	movzx  ecx,bx
100546c0:	mov    WORD PTR [edi+eax*4+0x2],cx
100546c5:	mov    WORD PTR [edi+ebp*4+0x2],cx
100546ca:	mov    DWORD PTR [esi+0xb60],ebx
100546d0:	push   0x1
100546d2:	mov    eax,esi
100546d4:	add    ebx,0x1
100546d7:	call   0x10053250
100546dc:	add    esp,0x4
100546df:	cmp    DWORD PTR [esi+0x1450],0x2
100546e6:	jge    0x10054630
100546ec:	add    DWORD PTR [esi+0x1454],0xffffffff
100546f3:	mov    eax,DWORD PTR [esi+0x1454]
100546f9:	mov    edx,DWORD PTR [esi+0xb60]
100546ff:	mov    ecx,DWORD PTR [esp+0x18]
10054703:	mov    DWORD PTR [esi+eax*4+0xb5c],edx
1005470a:	mov    eax,esi
1005470c:	call   0x10053320
10054711:	mov    ebx,DWORD PTR [esp+0xc]
10054715:	lea    edx,[esi+0xb3c]
1005471b:	call   0x100544b0
10054720:	pop    edi
10054721:	pop    ebp
10054722:	pop    ebx
10054723:	add    esp,0x8
10054726:	ret    
10054727:	int3   
10054728:	int3   
10054729:	int3   
1005472a:	int3   
1005472b:	int3   
1005472c:	int3   
1005472d:	int3   
1005472e:	int3   
1005472f:	int3   
10054730:	push   esi
10054731:	mov    esi,eax
10054733:	mov    ecx,DWORD PTR [esi+0xb1c]
10054739:	lea    eax,[esi+0x94]
1005473f:	push   esi
10054740:	call   0x10053540
10054745:	mov    ecx,DWORD PTR [esi+0xb28]
1005474b:	lea    eax,[esi+0x988]
10054751:	push   esi
10054752:	call   0x10053540
10054757:	lea    eax,[esi+0xb30]
1005475d:	push   eax
1005475e:	call   0x10054530
10054763:	add    esp,0xc
10054766:	mov    eax,0x12
1005476b:	jmp    0x10054770
1005476d:	lea    ecx,[ecx+0x0]
10054770:	movzx  ecx,BYTE PTR [eax+0x10067aac]
10054777:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
10054780:	jne    0x100547ed
10054782:	movzx  edx,BYTE PTR [eax+0x10067aab]
10054789:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
10054792:	jne    0x100547cc
10054794:	movzx  ecx,BYTE PTR [eax+0x10067aaa]
1005479b:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
100547a4:	jne    0x100547db
100547a6:	movzx  edx,BYTE PTR [eax+0x10067aa9]
100547ad:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
100547b6:	jne    0x100547ea
100547b8:	sub    eax,0x4
100547bb:	cmp    eax,0x3
100547be:	jge    0x10054770
100547c0:	lea    ecx,[eax+eax*2+0x11]
100547c4:	add    DWORD PTR [esi+0x16a8],ecx
100547ca:	pop    esi
100547cb:	ret    
100547cc:	sub    eax,0x1
100547cf:	lea    ecx,[eax+eax*2+0x11]
100547d3:	add    DWORD PTR [esi+0x16a8],ecx
100547d9:	pop    esi
100547da:	ret    
100547db:	sub    eax,0x2
100547de:	lea    ecx,[eax+eax*2+0x11]
100547e2:	add    DWORD PTR [esi+0x16a8],ecx
100547e8:	pop    esi
100547e9:	ret    
100547ea:	sub    eax,0x3
100547ed:	lea    ecx,[eax+eax*2+0x11]
100547f1:	add    DWORD PTR [esi+0x16a8],ecx
100547f7:	pop    esi
100547f8:	ret    
100547f9:	int3   
100547fa:	int3   
100547fb:	int3   
100547fc:	int3   
100547fd:	int3   
100547fe:	int3   
100547ff:	int3   
10054800:	mov    eax,DWORD PTR [esp+0x4]
10054804:	mov    ecx,DWORD PTR [eax+0x16bc]
1005480a:	cmp    ecx,0xd
1005480d:	jle    0x10054878
1005480f:	push   ebx
10054810:	push   esi
10054811:	mov    esi,DWORD PTR [esp+0x18]
10054815:	mov    edx,esi
10054817:	shl    edx,cl
10054819:	mov    ecx,DWORD PTR [eax+0x8]
1005481c:	or     WORD PTR [eax+0x16b8],dx
10054823:	movzx  ebx,BYTE PTR [eax+0x16b8]
1005482a:	mov    edx,DWORD PTR [eax+0x14]
1005482d:	mov    BYTE PTR [ecx+edx*1],bl
10054830:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054837:	add    DWORD PTR [eax+0x14],0x1
1005483b:	mov    ecx,DWORD PTR [eax+0x14]
1005483e:	mov    edx,DWORD PTR [eax+0x8]
10054841:	mov    BYTE PTR [ecx+edx*1],bl
10054844:	mov    edx,DWORD PTR [eax+0x16bc]
1005484a:	add    DWORD PTR [eax+0x14],0x1
1005484e:	mov    cl,0x10
10054850:	sub    cl,dl
10054852:	shr    si,cl
10054855:	mov    ecx,DWORD PTR [esp+0x14]
10054859:	add    edx,0xfffffff3
1005485c:	mov    DWORD PTR [eax+0x16bc],edx
10054862:	mov    edx,DWORD PTR [esp+0x10]
10054866:	mov    WORD PTR [eax+0x16b8],si
1005486d:	pop    esi
1005486e:	pop    ebx
1005486f:	push   0x1
10054871:	call   0x100543b0
10054876:	pop    ecx
10054877:	ret    
10054878:	mov    edx,DWORD PTR [esp+0x10]
1005487c:	shl    edx,cl
1005487e:	add    ecx,0x3
10054881:	mov    DWORD PTR [eax+0x16bc],ecx
10054887:	mov    ecx,DWORD PTR [esp+0xc]
1005488b:	or     WORD PTR [eax+0x16b8],dx
10054892:	mov    edx,DWORD PTR [esp+0x8]
10054896:	push   0x1
10054898:	call   0x100543b0
1005489d:	pop    ecx
1005489e:	ret    
1005489f:	int3   
100548a0:	mov    eax,DWORD PTR [esp+0x4]
100548a4:	mov    ecx,DWORD PTR [eax+0x16bc]
100548aa:	mov    edx,0x2
100548af:	shl    edx,cl
100548b1:	push   ebx
100548b2:	push   esi
100548b3:	push   edi
100548b4:	or     WORD PTR [eax+0x16b8],dx
100548bb:	cmp    ecx,0xd
100548be:	mov    esi,0x1
100548c3:	jle    0x1005490f
100548c5:	movzx  ebx,BYTE PTR [eax+0x16b8]
100548cc:	mov    edx,DWORD PTR [eax+0x14]
100548cf:	mov    ecx,DWORD PTR [eax+0x8]
100548d2:	mov    BYTE PTR [ecx+edx*1],bl
100548d5:	add    DWORD PTR [eax+0x14],esi
100548d8:	movzx  ebx,BYTE PTR [eax+0x16b9]
100548df:	mov    ecx,DWORD PTR [eax+0x14]
100548e2:	mov    edx,DWORD PTR [eax+0x8]
100548e5:	mov    BYTE PTR [ecx+edx*1],bl
100548e8:	mov    edx,DWORD PTR [eax+0x16bc]
100548ee:	add    DWORD PTR [eax+0x14],esi
100548f1:	mov    cl,0x10
100548f3:	sub    cl,dl
100548f5:	mov    edi,0x2
100548fa:	shr    di,cl
100548fd:	add    edx,0xfffffff3
10054900:	mov    DWORD PTR [eax+0x16bc],edx
10054906:	mov    WORD PTR [eax+0x16b8],di
1005490d:	jmp    0x10054918
1005490f:	add    ecx,0x3
10054912:	mov    DWORD PTR [eax+0x16bc],ecx
10054918:	mov    ecx,DWORD PTR [eax+0x16bc]
1005491e:	xor    edx,edx
10054920:	shl    edx,cl
10054922:	or     WORD PTR [eax+0x16b8],dx
10054929:	cmp    ecx,0x9
1005492c:	jle    0x10054975
1005492e:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054935:	mov    edx,DWORD PTR [eax+0x14]
10054938:	mov    ecx,DWORD PTR [eax+0x8]
1005493b:	mov    BYTE PTR [ecx+edx*1],bl
1005493e:	add    DWORD PTR [eax+0x14],esi
10054941:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054948:	mov    ecx,DWORD PTR [eax+0x14]
1005494b:	mov    edx,DWORD PTR [eax+0x8]
1005494e:	mov    BYTE PTR [ecx+edx*1],bl
10054951:	mov    edx,DWORD PTR [eax+0x16bc]
10054957:	add    DWORD PTR [eax+0x14],esi
1005495a:	mov    cl,0x10
1005495c:	sub    cl,dl
1005495e:	xor    edi,edi
10054960:	shr    di,cl
10054963:	add    edx,0xfffffff7
10054966:	mov    DWORD PTR [eax+0x16bc],edx
1005496c:	mov    WORD PTR [eax+0x16b8],di
10054973:	jmp    0x1005497e
10054975:	add    ecx,0x7
10054978:	mov    DWORD PTR [eax+0x16bc],ecx
1005497e:	call   0x100542b0
10054983:	mov    ecx,DWORD PTR [eax+0x16bc]
10054989:	mov    edx,DWORD PTR [eax+0x16b4]
1005498f:	sub    edx,ecx
10054991:	add    edx,0xb
10054994:	cmp    edx,0x9
10054997:	jge    0x10054a7f
1005499d:	mov    edx,0x2
100549a2:	shl    edx,cl
100549a4:	or     WORD PTR [eax+0x16b8],dx
100549ab:	cmp    ecx,0xd
100549ae:	jle    0x100549fa
100549b0:	movzx  ebx,BYTE PTR [eax+0x16b8]
100549b7:	mov    edx,DWORD PTR [eax+0x14]
100549ba:	mov    ecx,DWORD PTR [eax+0x8]
100549bd:	mov    BYTE PTR [ecx+edx*1],bl
100549c0:	add    DWORD PTR [eax+0x14],esi
100549c3:	movzx  ebx,BYTE PTR [eax+0x16b9]
100549ca:	mov    ecx,DWORD PTR [eax+0x14]
100549cd:	mov    edx,DWORD PTR [eax+0x8]
100549d0:	mov    BYTE PTR [ecx+edx*1],bl
100549d3:	mov    edx,DWORD PTR [eax+0x16bc]
100549d9:	add    DWORD PTR [eax+0x14],esi
100549dc:	mov    cl,0x10
100549de:	sub    cl,dl
100549e0:	mov    edi,0x2
100549e5:	shr    di,cl
100549e8:	add    edx,0xfffffff3
100549eb:	mov    DWORD PTR [eax+0x16bc],edx
100549f1:	mov    WORD PTR [eax+0x16b8],di
100549f8:	jmp    0x10054a03
100549fa:	add    ecx,0x3
100549fd:	mov    DWORD PTR [eax+0x16bc],ecx
10054a03:	mov    ecx,DWORD PTR [eax+0x16bc]
10054a09:	xor    edx,edx
10054a0b:	shl    edx,cl
10054a0d:	or     WORD PTR [eax+0x16b8],dx
10054a14:	cmp    ecx,0x9
10054a17:	jle    0x10054a71
10054a19:	movzx  ebx,BYTE PTR [eax+0x16b8]
10054a20:	mov    edx,DWORD PTR [eax+0x14]
10054a23:	mov    ecx,DWORD PTR [eax+0x8]
10054a26:	mov    BYTE PTR [ecx+edx*1],bl
10054a29:	add    DWORD PTR [eax+0x14],esi
10054a2c:	movzx  ebx,BYTE PTR [eax+0x16b9]
10054a33:	mov    ecx,DWORD PTR [eax+0x14]
10054a36:	mov    edx,DWORD PTR [eax+0x8]
10054a39:	mov    BYTE PTR [ecx+edx*1],bl
10054a3c:	mov    edx,DWORD PTR [eax+0x16bc]
10054a42:	add    DWORD PTR [eax+0x14],esi
10054a45:	mov    cl,0x10
10054a47:	sub    cl,dl
10054a49:	xor    esi,esi
10054a4b:	shr    si,cl
10054a4e:	add    edx,0xfffffff7
10054a51:	mov    DWORD PTR [eax+0x16bc],edx
10054a57:	mov    WORD PTR [eax+0x16b8],si
10054a5e:	call   0x100542b0
10054a63:	pop    edi
10054a64:	pop    esi
10054a65:	mov    DWORD PTR [eax+0x16b4],0x7
10054a6f:	pop    ebx
10054a70:	ret    
10054a71:	add    ecx,0x7
10054a74:	mov    DWORD PTR [eax+0x16bc],ecx
10054a7a:	call   0x100542b0
10054a7f:	pop    edi
10054a80:	pop    esi
10054a81:	mov    DWORD PTR [eax+0x16b4],0x7
10054a8b:	pop    ebx
10054a8c:	ret    
10054a8d:	int3   
10054a8e:	int3   
10054a8f:	int3   
10054a90:	push   ecx
10054a91:	push   ebx
10054a92:	mov    ebx,DWORD PTR [esp+0x14]
10054a96:	push   esi
10054a97:	mov    esi,DWORD PTR [esp+0x10]
10054a9b:	cmp    DWORD PTR [esi+0x84],0x0
10054aa2:	push   edi
10054aa3:	mov    DWORD PTR [esp+0xc],0x0
10054aab:	jle    0x10054b04
10054aad:	test   ebx,ebx
10054aaf:	jbe    0x10054ac0
10054ab1:	mov    eax,DWORD PTR [esi]
10054ab3:	cmp    DWORD PTR [eax+0x2c],0x2
10054ab7:	jne    0x10054ac0
10054ab9:	mov    edx,esi
10054abb:	call   0x100541c0
10054ac0:	lea    ecx,[esi+0xb18]
10054ac6:	push   ecx
10054ac7:	call   0x10054530
10054acc:	lea    edx,[esi+0xb24]
10054ad2:	push   edx
10054ad3:	call   0x10054530
10054ad8:	add    esp,0x8
10054adb:	mov    eax,esi
10054add:	call   0x10054730
10054ae2:	mov    edx,DWORD PTR [esi+0x16a8]
10054ae8:	mov    ecx,DWORD PTR [esi+0x16ac]
10054aee:	add    edx,0xa
10054af1:	add    ecx,0xa
10054af4:	shr    edx,0x3
10054af7:	shr    ecx,0x3
10054afa:	cmp    ecx,edx
10054afc:	mov    DWORD PTR [esp+0xc],eax
10054b00:	ja     0x10054b09
10054b02:	jmp    0x10054b07
10054b04:	lea    ecx,[ebx+0x5]
10054b07:	mov    edx,ecx
10054b09:	lea    eax,[ebx+0x4]
10054b0c:	cmp    eax,edx
10054b0e:	ja     0x10054b2d
10054b10:	mov    eax,DWORD PTR [esp+0x18]
10054b14:	test   eax,eax
10054b16:	je     0x10054b2d
10054b18:	mov    edi,DWORD PTR [esp+0x20]
10054b1c:	push   edi
10054b1d:	push   ebx
10054b1e:	push   eax
10054b1f:	push   esi
10054b20:	call   0x10054800
10054b25:	add    esp,0x10
10054b28:	jmp    0x10054c82
10054b2d:	cmp    DWORD PTR [esi+0x88],0x4
10054b34:	je     0x10054bf8
10054b3a:	cmp    ecx,edx
10054b3c:	je     0x10054bf8
10054b42:	mov    ecx,DWORD PTR [esi+0x16bc]
10054b48:	cmp    ecx,0xd
10054b4b:	mov    edi,DWORD PTR [esp+0x20]
10054b4f:	lea    edx,[edi+0x4]
10054b52:	jle    0x10054ba6
10054b54:	mov    eax,edx
10054b56:	shl    eax,cl
10054b58:	mov    ecx,DWORD PTR [esi+0x8]
10054b5b:	or     WORD PTR [esi+0x16b8],ax
10054b62:	movzx  ebx,BYTE PTR [esi+0x16b8]
10054b69:	mov    eax,DWORD PTR [esi+0x14]
10054b6c:	mov    BYTE PTR [ecx+eax*1],bl
10054b6f:	add    DWORD PTR [esi+0x14],0x1
10054b73:	movzx  ebx,BYTE PTR [esi+0x16b9]
10054b7a:	mov    ecx,DWORD PTR [esi+0x14]
10054b7d:	mov    eax,DWORD PTR [esi+0x8]
10054b80:	mov    BYTE PTR [ecx+eax*1],bl
10054b83:	mov    ebx,DWORD PTR [esi+0x16bc]
10054b89:	add    DWORD PTR [esi+0x14],0x1
10054b8d:	mov    cl,0x10
10054b8f:	sub    cl,bl
10054b91:	shr    dx,cl
10054b94:	add    ebx,0xfffffff3
10054b97:	mov    DWORD PTR [esi+0x16bc],ebx
10054b9d:	mov    WORD PTR [esi+0x16b8],dx
10054ba4:	jmp    0x10054bb8
10054ba6:	shl    edx,cl
10054ba8:	or     WORD PTR [esi+0x16b8],dx
10054baf:	add    ecx,0x3
10054bb2:	mov    DWORD PTR [esi+0x16bc],ecx
10054bb8:	mov    eax,DWORD PTR [esp+0xc]
10054bbc:	mov    ecx,DWORD PTR [esi+0xb28]
10054bc2:	mov    edx,DWORD PTR [esi+0xb1c]
10054bc8:	add    eax,0x1
10054bcb:	push   eax
10054bcc:	add    ecx,0x1
10054bcf:	push   ecx
10054bd0:	add    edx,0x1
10054bd3:	push   edx
10054bd4:	mov    eax,esi
10054bd6:	call   0x10053b50
10054bdb:	lea    eax,[esi+0x988]
10054be1:	push   eax
10054be2:	lea    ecx,[esi+0x94]
10054be8:	push   ecx
10054be9:	mov    eax,esi
10054beb:	call   0x10053db0
10054bf0:	add    esp,0x14
10054bf3:	jmp    0x10054c82
10054bf8:	mov    ecx,DWORD PTR [esi+0x16bc]
10054bfe:	cmp    ecx,0xd
10054c01:	mov    edi,DWORD PTR [esp+0x20]
10054c05:	lea    eax,[edi+0x2]
10054c08:	jle    0x10054c5c
10054c0a:	mov    edx,eax
10054c0c:	shl    edx,cl
10054c0e:	mov    ecx,DWORD PTR [esi+0x8]
10054c11:	or     WORD PTR [esi+0x16b8],dx
10054c18:	movzx  ebx,BYTE PTR [esi+0x16b8]
10054c1f:	mov    edx,DWORD PTR [esi+0x14]
10054c22:	mov    BYTE PTR [ecx+edx*1],bl
10054c25:	add    DWORD PTR [esi+0x14],0x1
10054c29:	movzx  ebx,BYTE PTR [esi+0x16b9]
10054c30:	mov    ecx,DWORD PTR [esi+0x14]
10054c33:	mov    edx,DWORD PTR [esi+0x8]
10054c36:	mov    BYTE PTR [ecx+edx*1],bl
10054c39:	mov    edx,DWORD PTR [esi+0x16bc]
10054c3f:	add    DWORD PTR [esi+0x14],0x1
10054c43:	mov    cl,0x10
10054c45:	sub    cl,dl
10054c47:	shr    ax,cl
10054c4a:	add    edx,0xfffffff3
10054c4d:	mov    DWORD PTR [esi+0x16bc],edx
10054c53:	mov    WORD PTR [esi+0x16b8],ax
10054c5a:	jmp    0x10054c6e
10054c5c:	shl    eax,cl
10054c5e:	or     WORD PTR [esi+0x16b8],ax
10054c65:	add    ecx,0x3
10054c68:	mov    DWORD PTR [esi+0x16bc],ecx
10054c6e:	push   0x10068008
10054c73:	push   0x10067b88
10054c78:	mov    eax,esi
10054c7a:	call   0x10053db0
10054c7f:	add    esp,0x8
10054c82:	mov    edx,esi
10054c84:	call   0x100531e0
10054c89:	test   edi,edi
10054c8b:	pop    edi
10054c8c:	je     0x10054c9a
10054c8e:	mov    eax,esi
10054c90:	pop    esi
10054c91:	pop    ebx
10054c92:	add    esp,0x4
10054c95:	jmp    0x10054330
10054c9a:	pop    esi
10054c9b:	pop    ebx
10054c9c:	pop    ecx
10054c9d:	ret    
10054c9e:	int3   
10054c9f:	int3   
10054ca0:	push   esi
10054ca1:	mov    esi,edx
10054ca3:	test   esi,esi
10054ca5:	not    eax
10054ca7:	je     0x10054cd2
10054ca9:	lea    esp,[esp+0x0]
10054cb0:	test   cl,0x3
10054cb3:	je     0x10054cd2
10054cb5:	movzx  edx,BYTE PTR [ecx]
10054cb8:	xor    edx,eax
10054cba:	and    edx,0xff
10054cc0:	shr    eax,0x8
10054cc3:	xor    eax,DWORD PTR [edx*4+0x10068470]
10054cca:	add    ecx,0x1
10054ccd:	sub    esi,0x1
10054cd0:	jne    0x10054cb0
10054cd2:	cmp    esi,0x20
10054cd5:	push   ebx
10054cd6:	push   edi
10054cd7:	jb     0x10054ebc
10054cdd:	mov    edi,esi
10054cdf:	shr    edi,0x5
10054ce2:	xor    eax,DWORD PTR [ecx]
10054ce4:	add    ecx,0x4
10054ce7:	mov    edx,eax
10054ce9:	shr    edx,0x10
10054cec:	movzx  ebx,ah
10054cef:	and    edx,0xff
10054cf5:	mov    edx,DWORD PTR [edx*4+0x10068870]
10054cfc:	xor    edx,DWORD PTR [ebx*4+0x10068c70]
10054d03:	mov    ebx,eax
10054d05:	and    eax,0xff
10054d0a:	shr    ebx,0x18
10054d0d:	xor    edx,DWORD PTR [ebx*4+0x10068470]
10054d14:	add    ecx,0x4
10054d17:	xor    edx,DWORD PTR [eax*4+0x10069070]
10054d1e:	add    ecx,0x4
10054d21:	xor    edx,DWORD PTR [ecx-0x8]
10054d24:	add    ecx,0x4
10054d27:	mov    eax,edx
10054d29:	shr    eax,0x10
10054d2c:	and    eax,0xff
10054d31:	mov    eax,DWORD PTR [eax*4+0x10068870]
10054d38:	movzx  ebx,dh
10054d3b:	xor    eax,DWORD PTR [ebx*4+0x10068c70]
10054d42:	mov    ebx,edx
10054d44:	and    edx,0xff
10054d4a:	shr    ebx,0x18
10054d4d:	xor    eax,DWORD PTR [ebx*4+0x10068470]
10054d54:	add    ecx,0x4
10054d57:	xor    eax,DWORD PTR [edx*4+0x10069070]
10054d5e:	add    ecx,0x4
10054d61:	xor    eax,DWORD PTR [ecx-0x10]
10054d64:	mov    edx,eax
10054d66:	shr    edx,0x10
10054d69:	movzx  ebx,ah
10054d6c:	and    edx,0xff
10054d72:	mov    edx,DWORD PTR [edx*4+0x10068870]
10054d79:	xor    edx,DWORD PTR [ebx*4+0x10068c70]
10054d80:	mov    ebx,eax
10054d82:	and    eax,0xff
10054d87:	shr    ebx,0x18
10054d8a:	xor    edx,DWORD PTR [ebx*4+0x10068470]
10054d91:	xor    edx,DWORD PTR [eax*4+0x10069070]
10054d98:	xor    edx,DWORD PTR [ecx-0xc]
10054d9b:	mov    eax,edx
10054d9d:	shr    eax,0x10
10054da0:	and    eax,0xff
10054da5:	mov    eax,DWORD PTR [eax*4+0x10068870]
10054dac:	movzx  ebx,dh
10054daf:	xor    eax,DWORD PTR [ebx*4+0x10068c70]
10054db6:	mov    ebx,edx
10054db8:	and    edx,0xff
10054dbe:	shr    ebx,0x18
10054dc1:	xor    eax,DWORD PTR [ebx*4+0x10068470]
10054dc8:	xor    eax,DWORD PTR [edx*4+0x10069070]
10054dcf:	xor    eax,DWORD PTR [ecx-0x8]
10054dd2:	mov    edx,eax
10054dd4:	shr    edx,0x10
10054dd7:	movzx  ebx,ah
10054dda:	and    edx,0xff
10054de0:	mov    edx,DWORD PTR [edx*4+0x10068870]
10054de7:	xor    edx,DWORD PTR [ebx*4+0x10068c70]
10054dee:	mov    ebx,eax
10054df0:	and    eax,0xff
10054df5:	shr    ebx,0x18
10054df8:	xor    edx,DWORD PTR [ebx*4+0x10068470]
10054dff:	xor    edx,DWORD PTR [eax*4+0x10069070]
10054e06:	xor    edx,DWORD PTR [ecx-0x4]
10054e09:	mov    eax,edx
10054e0b:	shr    eax,0x10
10054e0e:	and    eax,0xff
10054e13:	mov    eax,DWORD PTR [eax*4+0x10068870]
10054e1a:	movzx  ebx,dh
10054e1d:	xor    eax,DWORD PTR [ebx*4+0x10068c70]
10054e24:	mov    ebx,edx
10054e26:	shr    ebx,0x18
10054e29:	xor    eax,DWORD PTR [ebx*4+0x10068470]
10054e30:	and    edx,0xff
10054e36:	xor    eax,DWORD PTR [edx*4+0x10069070]
10054e3d:	xor    eax,DWORD PTR [ecx]
10054e3f:	add    ecx,0x4
10054e42:	mov    edx,eax
10054e44:	shr    edx,0x10
10054e47:	movzx  ebx,ah
10054e4a:	and    edx,0xff
10054e50:	mov    edx,DWORD PTR [edx*4+0x10068870]
10054e57:	xor    edx,DWORD PTR [ebx*4+0x10068c70]
10054e5e:	mov    ebx,eax
10054e60:	and    eax,0xff
10054e65:	shr    ebx,0x18
10054e68:	xor    edx,DWORD PTR [ebx*4+0x10068470]
10054e6f:	add    ecx,0x4
10054e72:	xor    edx,DWORD PTR [eax*4+0x10069070]
10054e79:	sub    esi,0x20
10054e7c:	xor    edx,DWORD PTR [ecx-0x4]
10054e7f:	mov    eax,edx
10054e81:	shr    eax,0x10
10054e84:	and    eax,0xff
10054e89:	mov    eax,DWORD PTR [eax*4+0x10068870]
10054e90:	movzx  ebx,dh
10054e93:	xor    eax,DWORD PTR [ebx*4+0x10068c70]
10054e9a:	mov    ebx,edx
10054e9c:	shr    ebx,0x18
10054e9f:	xor    eax,DWORD PTR [ebx*4+0x10068470]
10054ea6:	and    edx,0xff
10054eac:	xor    eax,DWORD PTR [edx*4+0x10069070]
10054eb3:	sub    edi,0x1
10054eb6:	jne    0x10054ce2
10054ebc:	cmp    esi,0x4
10054ebf:	jb     0x10054f09
10054ec1:	mov    edx,esi
10054ec3:	shr    edx,0x2
10054ec6:	xor    eax,DWORD PTR [ecx]
10054ec8:	add    ecx,0x4
10054ecb:	mov    edi,eax
10054ecd:	shr    edi,0x10
10054ed0:	and    edi,0xff
10054ed6:	mov    edi,DWORD PTR [edi*4+0x10068870]
10054edd:	movzx  ebx,ah
10054ee0:	xor    edi,DWORD PTR [ebx*4+0x10068c70]
10054ee7:	mov    ebx,eax
10054ee9:	shr    ebx,0x18
10054eec:	xor    edi,DWORD PTR [ebx*4+0x10068470]
10054ef3:	and    eax,0xff
10054ef8:	xor    edi,DWORD PTR [eax*4+0x10069070]
10054eff:	sub    esi,0x4
10054f02:	sub    edx,0x1
10054f05:	mov    eax,edi
10054f07:	jne    0x10054ec6
10054f09:	test   esi,esi
10054f0b:	pop    edi
10054f0c:	pop    ebx
10054f0d:	je     0x10054f2d
10054f0f:	nop
10054f10:	movzx  edx,BYTE PTR [ecx]
10054f13:	xor    edx,eax
10054f15:	and    edx,0xff
10054f1b:	shr    eax,0x8
10054f1e:	xor    eax,DWORD PTR [edx*4+0x10068470]
10054f25:	add    ecx,0x1
10054f28:	sub    esi,0x1
10054f2b:	jne    0x10054f10
10054f2d:	not    eax
10054f2f:	pop    esi
10054f30:	ret    
10054f31:	int3   
10054f32:	int3   
10054f33:	int3   
10054f34:	int3   
10054f35:	int3   
10054f36:	int3   
10054f37:	int3   
10054f38:	int3   
10054f39:	int3   
10054f3a:	int3   
10054f3b:	int3   
10054f3c:	int3   
10054f3d:	int3   
10054f3e:	int3   
10054f3f:	int3   
10054f40:	mov    ecx,DWORD PTR [esp+0x8]
10054f44:	test   ecx,ecx
10054f46:	jne    0x10054f4b
10054f48:	xor    eax,eax
10054f4a:	ret    
10054f4b:	mov    edx,DWORD PTR [esp+0xc]
10054f4f:	mov    eax,DWORD PTR [esp+0x4]
10054f53:	jmp    0x10054ca0
10054f58:	int3   
10054f59:	int3   
10054f5a:	int3   
10054f5b:	int3   
10054f5c:	int3   
10054f5d:	int3   
10054f5e:	int3   
10054f5f:	int3   
10054f60:	mov    eax,DWORD PTR [esp+0x8]
10054f64:	imul   eax,DWORD PTR [esp+0xc]
10054f69:	push   eax
10054f6a:	call   0x10043cdd
10054f6f:	add    esp,0x4
10054f72:	ret    
10054f73:	int3   
10054f74:	int3   
10054f75:	int3   
10054f76:	int3   
10054f77:	int3   
10054f78:	int3   
10054f79:	int3   
10054f7a:	int3   
10054f7b:	int3   
10054f7c:	int3   
10054f7d:	int3   
10054f7e:	int3   
10054f7f:	int3   
10054f80:	mov    eax,DWORD PTR [esp+0x8]
10054f84:	push   eax
10054f85:	call   0x10042408
10054f8a:	pop    ecx
10054f8b:	ret    
10054f8c:	int3   
10054f8d:	int3   
10054f8e:	int3   
10054f8f:	int3   
10054f90:	sub    esp,0x3c
10054f93:	push   ebx
10054f94:	push   ebp
10054f95:	push   esi
10054f96:	push   edi
10054f97:	mov    ecx,DWORD PTR [esp+0x50]
10054f9b:	mov    eax,DWORD PTR [ecx+0x1c]
10054f9e:	mov    edx,DWORD PTR [ecx+0x4]
10054fa1:	mov    ebx,DWORD PTR [eax+0x38]
10054fa4:	mov    ebp,DWORD PTR [ecx]
10054fa6:	sub    ebp,0x1
10054fa9:	lea    edx,[edx+ebp*1-0x5]
10054fad:	mov    DWORD PTR [esp+0x14],edx
10054fb1:	mov    esi,DWORD PTR [ecx+0xc]
10054fb4:	mov    ecx,DWORD PTR [ecx+0x10]
10054fb7:	mov    edx,ecx
10054fb9:	sub    edx,DWORD PTR [esp+0x54]
10054fbd:	sub    esi,0x1
10054fc0:	add    edx,esi
10054fc2:	lea    ecx,[ecx+esi*1-0x101]
10054fc9:	mov    DWORD PTR [esp+0x38],edx
10054fcd:	mov    edx,DWORD PTR [eax+0x28]
10054fd0:	mov    DWORD PTR [esp+0x2c],ecx
10054fd4:	mov    ecx,DWORD PTR [eax+0x2c]
10054fd7:	mov    DWORD PTR [esp+0x28],edx
10054fdb:	mov    edx,DWORD PTR [eax+0x30]
10054fde:	mov    DWORD PTR [esp+0x3c],ecx
10054fe2:	mov    ecx,DWORD PTR [eax+0x34]
10054fe5:	mov    DWORD PTR [esp+0x44],edx
10054fe9:	mov    edx,DWORD PTR [eax+0x4c]
10054fec:	mov    DWORD PTR [esp+0x40],ecx
10054ff0:	mov    ecx,DWORD PTR [eax+0x50]
10054ff3:	mov    DWORD PTR [esp+0x20],edx
10054ff7:	mov    DWORD PTR [esp+0x24],ecx
10054ffb:	mov    ecx,DWORD PTR [eax+0x54]
10054ffe:	mov    edx,0x1
10055003:	shl    edx,cl
10055005:	mov    ecx,DWORD PTR [eax+0x58]
10055008:	mov    DWORD PTR [esp+0x18],eax
1005500c:	mov    edi,DWORD PTR [eax+0x3c]
1005500f:	mov    DWORD PTR [esp+0x54],0x1
10055017:	mov    eax,DWORD PTR [esp+0x54]
1005501b:	shl    eax,cl
1005501d:	sub    edx,0x1
10055020:	mov    DWORD PTR [esp+0x10],ebp
10055024:	mov    DWORD PTR [esp+0x48],edx
10055028:	sub    eax,0x1
1005502b:	mov    DWORD PTR [esp+0x30],eax
1005502f:	nop
10055030:	cmp    edi,0xf
10055033:	jae    0x10055059
10055035:	movzx  eax,BYTE PTR [ebp+0x1]
10055039:	add    ebp,0x1
1005503c:	mov    ecx,edi
1005503e:	shl    eax,cl
10055040:	add    ebp,0x1
10055043:	add    edi,0x8
10055046:	mov    ecx,edi
10055048:	add    ebx,eax
1005504a:	movzx  eax,BYTE PTR [ebp+0x0]
1005504e:	shl    eax,cl
10055050:	mov    DWORD PTR [esp+0x10],ebp
10055054:	add    ebx,eax
10055056:	add    edi,0x8
10055059:	mov    ecx,DWORD PTR [esp+0x20]
1005505d:	and    edx,ebx
1005505f:	mov    eax,DWORD PTR [ecx+edx*4]
10055062:	mov    edx,eax
10055064:	shr    edx,0x8
10055067:	movzx  ecx,dl
1005506a:	movzx  edx,al
1005506d:	shr    ebx,cl
1005506f:	sub    edi,ecx
10055071:	test   edx,edx
10055073:	je     0x100550b8
10055075:	test   dl,0x10
10055078:	jne    0x100550c5
1005507a:	test   dl,0x40
1005507d:	jne    0x100553ca
10055083:	mov    ecx,0x1
10055088:	mov    DWORD PTR [esp+0x54],ecx
1005508c:	mov    ecx,edx
1005508e:	mov    edx,DWORD PTR [esp+0x54]
10055092:	shl    edx,cl
10055094:	shr    eax,0x10
10055097:	sub    edx,0x1
1005509a:	and    edx,ebx
1005509c:	add    edx,eax
1005509e:	mov    eax,DWORD PTR [esp+0x20]
100550a2:	mov    eax,DWORD PTR [eax+edx*4]
100550a5:	mov    ecx,eax
100550a7:	shr    ecx,0x8
100550aa:	movzx  ecx,cl
100550ad:	movzx  edx,al
100550b0:	shr    ebx,cl
100550b2:	sub    edi,ecx
100550b4:	test   edx,edx
100550b6:	jne    0x10055075
100550b8:	add    esi,0x1
100550bb:	shr    eax,0x10
100550be:	mov    BYTE PTR [esi],al
100550c0:	jmp    0x10055325
100550c5:	shr    eax,0x10
100550c8:	and    edx,0xf
100550cb:	mov    DWORD PTR [esp+0x54],eax
100550cf:	je     0x100550ff
100550d1:	cmp    edi,edx
100550d3:	jae    0x100550e9
100550d5:	movzx  eax,BYTE PTR [ebp+0x1]
100550d9:	add    ebp,0x1
100550dc:	mov    ecx,edi
100550de:	shl    eax,cl
100550e0:	mov    DWORD PTR [esp+0x10],ebp
100550e4:	add    ebx,eax
100550e6:	add    edi,0x8
100550e9:	mov    ecx,edx
100550eb:	mov    eax,0x1
100550f0:	shl    eax,cl
100550f2:	sub    eax,0x1
100550f5:	and    eax,ebx
100550f7:	add    DWORD PTR [esp+0x54],eax
100550fb:	shr    ebx,cl
100550fd:	sub    edi,edx
100550ff:	cmp    edi,0xf
10055102:	jae    0x10055128
10055104:	movzx  edx,BYTE PTR [ebp+0x1]
10055108:	add    ebp,0x1
1005510b:	movzx  eax,BYTE PTR [ebp+0x1]
1005510f:	mov    ecx,edi
10055111:	add    ebp,0x1
10055114:	shl    edx,cl
10055116:	add    edi,0x8
10055119:	mov    ecx,edi
1005511b:	shl    eax,cl
1005511d:	add    ebx,edx
1005511f:	mov    DWORD PTR [esp+0x10],ebp
10055123:	add    ebx,eax
10055125:	add    edi,0x8
10055128:	mov    ecx,DWORD PTR [esp+0x30]
1005512c:	mov    edx,DWORD PTR [esp+0x24]
10055130:	and    ecx,ebx
10055132:	mov    edx,DWORD PTR [edx+ecx*4]
10055135:	mov    eax,edx
10055137:	shr    eax,0x8
1005513a:	movzx  ecx,al
1005513d:	movzx  eax,dl
10055140:	shr    ebx,cl
10055142:	sub    edi,ecx
10055144:	test   al,0x10
10055146:	mov    DWORD PTR [esp+0x1c],edx
1005514a:	jne    0x1005518b
1005514c:	lea    esp,[esp+0x0]
10055150:	test   al,0x40
10055152:	jne    0x100553bd
10055158:	mov    ecx,eax
1005515a:	movzx  eax,WORD PTR [esp+0x1e]
1005515f:	mov    edx,0x1
10055164:	shl    edx,cl
10055166:	mov    ecx,DWORD PTR [esp+0x24]
1005516a:	sub    edx,0x1
1005516d:	and    edx,ebx
1005516f:	add    edx,eax
10055171:	mov    edx,DWORD PTR [ecx+edx*4]
10055174:	mov    eax,edx
10055176:	shr    eax,0x8
10055179:	movzx  ecx,al
1005517c:	movzx  eax,dl
1005517f:	shr    ebx,cl
10055181:	sub    edi,ecx
10055183:	test   al,0x10
10055185:	mov    DWORD PTR [esp+0x1c],edx
10055189:	je     0x10055150
1005518b:	shr    edx,0x10
1005518e:	and    eax,0xf
10055191:	cmp    edi,eax
10055193:	mov    DWORD PTR [esp+0x1c],edx
10055197:	jae    0x100551c5
10055199:	movzx  edx,BYTE PTR [ebp+0x1]
1005519d:	add    ebp,0x1
100551a0:	mov    ecx,edi
100551a2:	shl    edx,cl
100551a4:	add    edi,0x8
100551a7:	mov    DWORD PTR [esp+0x10],ebp
100551ab:	add    ebx,edx
100551ad:	cmp    edi,eax
100551af:	jae    0x100551c5
100551b1:	movzx  edx,BYTE PTR [ebp+0x1]
100551b5:	add    ebp,0x1
100551b8:	mov    ecx,edi
100551ba:	shl    edx,cl
100551bc:	mov    DWORD PTR [esp+0x10],ebp
100551c0:	add    ebx,edx
100551c2:	add    edi,0x8
100551c5:	mov    ecx,0x1
100551ca:	mov    edx,ecx
100551cc:	mov    ecx,eax
100551ce:	shl    edx,cl
100551d0:	sub    edi,eax
100551d2:	sub    edx,0x1
100551d5:	and    edx,ebx
100551d7:	mov    ecx,edx
100551d9:	mov    edx,DWORD PTR [esp+0x1c]
100551dd:	add    edx,ecx
100551df:	mov    ecx,eax
100551e1:	mov    eax,esi
100551e3:	sub    eax,DWORD PTR [esp+0x38]
100551e7:	shr    ebx,cl
100551e9:	cmp    edx,eax
100551eb:	mov    DWORD PTR [esp+0x1c],edx
100551ef:	jbe    0x10055344
100551f5:	mov    ebp,edx
100551f7:	sub    ebp,eax
100551f9:	cmp    ebp,DWORD PTR [esp+0x3c]
100551fd:	ja     0x100553a2
10055203:	mov    ecx,DWORD PTR [esp+0x40]
10055207:	mov    eax,DWORD PTR [esp+0x44]
1005520b:	add    ecx,0xffffffff
1005520e:	test   eax,eax
10055210:	mov    DWORD PTR [esp+0x34],ecx
10055214:	jne    0x10055242
10055216:	mov    eax,DWORD PTR [esp+0x28]
1005521a:	sub    eax,ebp
1005521c:	add    ecx,eax
1005521e:	cmp    ebp,DWORD PTR [esp+0x54]
10055222:	jae    0x100552ba
10055228:	sub    DWORD PTR [esp+0x54],ebp
1005522c:	lea    esp,[esp+0x0]
10055230:	mov    al,BYTE PTR [ecx+0x1]
10055233:	add    ecx,0x1
10055236:	add    esi,0x1
10055239:	sub    ebp,0x1
1005523c:	mov    BYTE PTR [esi],al
1005523e:	jne    0x10055230
10055240:	jmp    0x100552b6
10055242:	cmp    eax,ebp
10055244:	jae    0x10055298
10055246:	mov    edx,eax
10055248:	sub    edx,ebp
1005524a:	add    edx,DWORD PTR [esp+0x28]
1005524e:	sub    ebp,eax
10055250:	add    ecx,edx
10055252:	cmp    ebp,DWORD PTR [esp+0x54]
10055256:	jae    0x100552ba
10055258:	sub    DWORD PTR [esp+0x54],ebp
1005525c:	lea    esp,[esp+0x0]
10055260:	mov    dl,BYTE PTR [ecx+0x1]
10055263:	add    ecx,0x1
10055266:	add    esi,0x1
10055269:	sub    ebp,0x1
1005526c:	mov    BYTE PTR [esi],dl
1005526e:	jne    0x10055260
10055270:	cmp    eax,DWORD PTR [esp+0x54]
10055274:	mov    ecx,DWORD PTR [esp+0x34]
10055278:	jae    0x100552ba
1005527a:	sub    DWORD PTR [esp+0x54],eax
1005527e:	mov    ebp,eax
10055280:	mov    al,BYTE PTR [ecx+0x1]
10055283:	add    ecx,0x1
10055286:	add    esi,0x1
10055289:	sub    ebp,0x1
1005528c:	mov    BYTE PTR [esi],al
1005528e:	jne    0x10055280
10055290:	mov    ecx,esi
10055292:	sub    ecx,DWORD PTR [esp+0x1c]
10055296:	jmp    0x100552ba
10055298:	sub    eax,ebp
1005529a:	add    ecx,eax
1005529c:	cmp    ebp,DWORD PTR [esp+0x54]
100552a0:	jae    0x100552ba
100552a2:	sub    DWORD PTR [esp+0x54],ebp
100552a6:	mov    al,BYTE PTR [ecx+0x1]
100552a9:	add    ecx,0x1
100552ac:	add    esi,0x1
100552af:	sub    ebp,0x1
100552b2:	mov    BYTE PTR [esi],al
100552b4:	jne    0x100552a6
100552b6:	mov    ecx,esi
100552b8:	sub    ecx,edx
100552ba:	mov    eax,DWORD PTR [esp+0x54]
100552be:	cmp    eax,0x2
100552c1:	jbe    0x10055301
100552c3:	lea    edx,[eax-0x3]
100552c6:	mov    eax,0xaaaaaaab
100552cb:	mul    edx
100552cd:	mov    ebp,edx
100552cf:	shr    ebp,1
100552d1:	add    ebp,0x1
100552d4:	movzx  eax,BYTE PTR [ecx+0x1]
100552d8:	sub    DWORD PTR [esp+0x54],0x3
100552dd:	add    ecx,0x1
100552e0:	add    esi,0x1
100552e3:	mov    BYTE PTR [esi],al
100552e5:	mov    dl,BYTE PTR [ecx+0x1]
100552e8:	add    ecx,0x1
100552eb:	add    esi,0x1
100552ee:	mov    BYTE PTR [esi],dl
100552f0:	movzx  eax,BYTE PTR [ecx+0x1]
100552f4:	add    ecx,0x1
100552f7:	add    esi,0x1
100552fa:	sub    ebp,0x1
100552fd:	mov    BYTE PTR [esi],al
100552ff:	jne    0x100552d4
10055301:	mov    ebp,DWORD PTR [esp+0x54]
10055305:	test   ebp,ebp
10055307:	je     0x10055321
10055309:	mov    dl,BYTE PTR [ecx+0x1]
1005530c:	add    ecx,0x1
1005530f:	add    esi,0x1
10055312:	cmp    ebp,0x1
10055315:	mov    BYTE PTR [esi],dl
10055317:	jbe    0x10055321
10055319:	mov    al,BYTE PTR [ecx+0x1]
1005531c:	add    esi,0x1
1005531f:	mov    BYTE PTR [esi],al
10055321:	mov    ebp,DWORD PTR [esp+0x10]
10055325:	mov    edx,DWORD PTR [esp+0x14]
10055329:	cmp    ebp,edx
1005532b:	jae    0x100553f4
10055331:	cmp    esi,DWORD PTR [esp+0x2c]
10055335:	jae    0x100553f4
1005533b:	mov    edx,DWORD PTR [esp+0x48]
1005533f:	jmp    0x10055030
10055344:	mov    eax,esi
10055346:	sub    eax,edx
10055348:	jmp    0x10055350
1005534a:	lea    ebx,[ebx+0x0]
10055350:	movzx  ecx,BYTE PTR [eax+0x1]
10055354:	add    eax,0x1
10055357:	mov    BYTE PTR [esi+0x1],cl
1005535a:	mov    dl,BYTE PTR [eax+0x1]
1005535d:	add    esi,0x1
10055360:	add    eax,0x1
10055363:	add    esi,0x1
10055366:	mov    BYTE PTR [esi],dl
10055368:	movzx  ecx,BYTE PTR [eax+0x1]
1005536c:	add    eax,0x1
1005536f:	add    esi,0x1
10055372:	mov    BYTE PTR [esi],cl
10055374:	mov    ecx,DWORD PTR [esp+0x54]
10055378:	sub    ecx,0x3
1005537b:	cmp    ecx,0x2
1005537e:	mov    DWORD PTR [esp+0x54],ecx
10055382:	ja     0x10055350
10055384:	test   ecx,ecx
10055386:	je     0x10055325
10055388:	mov    dl,BYTE PTR [eax+0x1]
1005538b:	add    eax,0x1
1005538e:	add    esi,0x1
10055391:	cmp    ecx,0x1
10055394:	mov    BYTE PTR [esi],dl
10055396:	jbe    0x10055325
10055398:	mov    al,BYTE PTR [eax+0x1]
1005539b:	add    esi,0x1
1005539e:	mov    BYTE PTR [esi],al
100553a0:	jmp    0x10055325
100553a2:	mov    ecx,DWORD PTR [esp+0x50]
100553a6:	mov    edx,DWORD PTR [esp+0x18]
100553aa:	mov    ebp,DWORD PTR [esp+0x10]
100553ae:	mov    DWORD PTR [ecx+0x18],0x100678a8
100553b5:	mov    DWORD PTR [edx],0x1b
100553bb:	jmp    0x100553f0
100553bd:	mov    eax,DWORD PTR [esp+0x50]
100553c1:	mov    DWORD PTR [eax+0x18],0x100678c8
100553c8:	jmp    0x100553e6
100553ca:	test   dl,0x20
100553cd:	je     0x100553db
100553cf:	mov    edx,DWORD PTR [esp+0x18]
100553d3:	mov    DWORD PTR [edx],0xb
100553d9:	jmp    0x100553f0
100553db:	mov    eax,DWORD PTR [esp+0x50]
100553df:	mov    DWORD PTR [eax+0x18],0x100678e0
100553e6:	mov    ecx,DWORD PTR [esp+0x18]
100553ea:	mov    DWORD PTR [ecx],0x1b
100553f0:	mov    edx,DWORD PTR [esp+0x14]
100553f4:	mov    eax,edi
100553f6:	shr    eax,0x3
100553f9:	sub    ebp,eax
100553fb:	add    eax,eax
100553fd:	add    eax,eax
100553ff:	add    eax,eax
10055401:	sub    edi,eax
10055403:	mov    ecx,edi
10055405:	mov    eax,0x1
1005540a:	shl    eax,cl
1005540c:	mov    ecx,DWORD PTR [esp+0x50]
10055410:	sub    edx,ebp
10055412:	add    edx,0x5
10055415:	sub    eax,0x1
10055418:	and    ebx,eax
1005541a:	lea    eax,[ebp+0x1]
1005541d:	mov    DWORD PTR [ecx],eax
1005541f:	lea    eax,[esi+0x1]
10055422:	mov    DWORD PTR [ecx+0xc],eax
10055425:	mov    eax,DWORD PTR [esp+0x2c]
10055429:	sub    eax,esi
1005542b:	add    eax,0x101
10055430:	mov    DWORD PTR [ecx+0x10],eax
10055433:	mov    eax,DWORD PTR [esp+0x18]
10055437:	mov    DWORD PTR [ecx+0x4],edx
1005543a:	mov    DWORD PTR [eax+0x3c],edi
1005543d:	pop    edi
1005543e:	pop    esi
1005543f:	pop    ebp
10055440:	mov    DWORD PTR [eax+0x38],ebx
10055443:	pop    ebx
10055444:	add    esp,0x3c
10055447:	ret    
10055448:	int3   
10055449:	int3   
1005544a:	int3   
1005544b:	int3   
1005544c:	int3   
1005544d:	int3   
1005544e:	int3   
1005544f:	int3   
10055450:	sub    esp,0x8c
10055456:	mov    eax,ds:0x1007d030
1005545b:	xor    eax,esp
1005545d:	mov    DWORD PTR [esp+0x88],eax
10055464:	mov    eax,DWORD PTR [esp+0xa4]
1005546b:	mov    edx,DWORD PTR [esp+0xa0]
10055472:	push   ebx
10055473:	mov    ebx,DWORD PTR [esp+0xa0]
1005547a:	push   ebp
1005547b:	mov    ebp,DWORD PTR [esp+0x9c]
10055482:	push   esi
10055483:	mov    esi,DWORD PTR [esp+0xa4]
1005548a:	mov    DWORD PTR [esp+0x18],eax
1005548e:	xor    eax,eax
10055490:	test   esi,esi
10055492:	mov    DWORD PTR [esp+0x50],ebp
10055496:	mov    DWORD PTR [esp+0x38],ebx
1005549a:	mov    DWORD PTR [esp+0x48],edx
1005549e:	mov    DWORD PTR [esp+0x54],eax
100554a2:	mov    DWORD PTR [esp+0x58],eax
100554a6:	mov    DWORD PTR [esp+0x5c],eax
100554aa:	mov    DWORD PTR [esp+0x60],eax
100554ae:	mov    DWORD PTR [esp+0x64],eax
100554b2:	mov    DWORD PTR [esp+0x68],eax
100554b6:	mov    DWORD PTR [esp+0x6c],eax
100554ba:	mov    DWORD PTR [esp+0x70],eax
100554be:	jbe    0x100554d6
100554c0:	movzx  ecx,WORD PTR [ebp+eax*2+0x0]
100554c5:	add    WORD PTR [esp+ecx*2+0x54],0x1
100554cb:	lea    ecx,[esp+ecx*2+0x54]
100554cf:	add    eax,0x1
100554d2:	cmp    eax,esi
100554d4:	jb     0x100554c0
100554d6:	mov    eax,DWORD PTR [edx]
100554d8:	mov    DWORD PTR [esp+0x10],eax
100554dc:	mov    ecx,0xf
100554e1:	cmp    WORD PTR [esp+ecx*2+0x54],0x0
100554e7:	jne    0x100554f1
100554e9:	sub    ecx,0x1
100554ec:	cmp    ecx,0x1
100554ef:	jae    0x100554e1
100554f1:	cmp    eax,ecx
100554f3:	mov    DWORD PTR [esp+0x1c],ecx
100554f7:	jbe    0x100554ff
100554f9:	mov    DWORD PTR [esp+0x10],ecx
100554fd:	mov    eax,ecx
100554ff:	test   ecx,ecx
10055501:	jne    0x10055544
10055503:	mov    WORD PTR [esp+0xe],cx
10055508:	mov    ecx,DWORD PTR [ebx]
1005550a:	mov    BYTE PTR [esp+0xc],0x40
1005550f:	mov    BYTE PTR [esp+0xd],0x1
10055514:	mov    eax,DWORD PTR [esp+0xc]
10055518:	mov    DWORD PTR [ecx],eax
1005551a:	add    DWORD PTR [ebx],0x4
1005551d:	mov    ecx,DWORD PTR [ebx]
1005551f:	pop    esi
10055520:	mov    DWORD PTR [ecx],eax
10055522:	add    DWORD PTR [ebx],0x4
10055525:	pop    ebp
10055526:	mov    DWORD PTR [edx],0x1
1005552c:	xor    eax,eax
1005552e:	pop    ebx
1005552f:	mov    ecx,DWORD PTR [esp+0x88]
10055536:	xor    ecx,esp
10055538:	call   0x10041d97
1005553d:	add    esp,0x8c
10055543:	ret    
10055544:	mov    esi,0x1
10055549:	lea    esp,[esp+0x0]
10055550:	cmp    WORD PTR [esp+esi*2+0x54],0x0
10055556:	jne    0x10055594
10055558:	cmp    WORD PTR [esp+esi*2+0x56],0x0
1005555e:	jne    0x10055582
10055560:	cmp    WORD PTR [esp+esi*2+0x58],0x0
10055566:	jne    0x10055587
10055568:	cmp    WORD PTR [esp+esi*2+0x5a],0x0
1005556e:	jne    0x1005558c
10055570:	cmp    WORD PTR [esp+esi*2+0x5c],0x0
10055576:	jne    0x10055591
10055578:	add    esi,0x5
1005557b:	cmp    esi,0xf
1005557e:	jbe    0x10055550
10055580:	jmp    0x10055594
10055582:	add    esi,0x1
10055585:	jmp    0x10055594
10055587:	add    esi,0x2
1005558a:	jmp    0x10055594
1005558c:	add    esi,0x3
1005558f:	jmp    0x10055594
10055591:	add    esi,0x4
10055594:	cmp    eax,esi
10055596:	jae    0x1005559c
10055598:	mov    DWORD PTR [esp+0x10],esi
1005559c:	mov    edx,0x1
100555a1:	mov    eax,edx
100555a3:	push   edi
100555a4:	movzx  edi,WORD PTR [esp+eax*2+0x58]
100555a9:	add    edx,edx
100555ab:	sub    edx,edi
100555ad:	js     0x100555cb
100555af:	add    eax,0x1
100555b2:	cmp    eax,0xf
100555b5:	jbe    0x100555a4
100555b7:	test   edx,edx
100555b9:	mov    edi,DWORD PTR [esp+0xa0]
100555c0:	jle    0x100555d3
100555c2:	test   edi,edi
100555c4:	je     0x100555cb
100555c6:	cmp    ecx,0x1
100555c9:	je     0x100555d3
100555cb:	or     eax,0xffffffff
100555ce:	jmp    0x10055925
100555d3:	mov    WORD PTR [esp+0x7a],0x0
100555da:	mov    eax,0x2
100555df:	nop
100555e0:	mov    cx,WORD PTR [esp+eax*1+0x78]
100555e5:	add    cx,WORD PTR [esp+eax*1+0x58]
100555ea:	add    eax,0x2
100555ed:	cmp    eax,0x1e
100555f0:	mov    WORD PTR [esp+eax*1+0x78],cx
100555f5:	jb     0x100555e0
100555f7:	mov    ecx,DWORD PTR [esp+0x1c]
100555fb:	xor    eax,eax
100555fd:	cmp    DWORD PTR [esp+0xa8],eax
10055604:	jbe    0x10055637
10055606:	cmp    WORD PTR [ebp+eax*2+0x0],0x0
1005560c:	je     0x1005562b
1005560e:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
10055613:	movzx  edx,WORD PTR [esp+edx*2+0x78]
10055618:	mov    WORD PTR [ecx+edx*2],ax
1005561c:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
10055621:	add    WORD PTR [esp+edx*2+0x78],0x1
10055627:	lea    edx,[esp+edx*2+0x78]
1005562b:	add    eax,0x1
1005562e:	cmp    eax,DWORD PTR [esp+0xa8]
10055635:	jb     0x10055606
10055637:	mov    eax,edi
10055639:	sub    eax,0x0
1005563c:	mov    edx,0xffffffff
10055641:	je     0x10055684
10055643:	sub    eax,0x1
10055646:	je     0x1005565e
10055648:	mov    DWORD PTR [esp+0x2c],0x1006a5c8
10055650:	mov    DWORD PTR [esp+0x38],0x1006a608
10055658:	mov    DWORD PTR [esp+0x30],edx
1005565c:	jmp    0x10055694
1005565e:	mov    eax,0x1006a548
10055663:	sub    eax,0x202
10055668:	mov    DWORD PTR [esp+0x2c],eax
1005566c:	mov    eax,0x1006a588
10055671:	sub    eax,0x202
10055676:	mov    DWORD PTR [esp+0x38],eax
1005567a:	mov    DWORD PTR [esp+0x30],0x100
10055682:	jmp    0x10055694
10055684:	mov    DWORD PTR [esp+0x38],ecx
10055688:	mov    DWORD PTR [esp+0x2c],ecx
1005568c:	mov    DWORD PTR [esp+0x30],0x13
10055694:	mov    eax,DWORD PTR [ebx]
10055696:	mov    ecx,DWORD PTR [esp+0x14]
1005569a:	mov    DWORD PTR [esp+0x24],eax
1005569e:	mov    eax,0x1
100556a3:	shl    eax,cl
100556a5:	xor    ebp,ebp
100556a7:	xor    ebx,ebx
100556a9:	cmp    edi,0x1
100556ac:	lea    ecx,[eax-0x1]
100556af:	mov    DWORD PTR [esp+0x18],esi
100556b3:	mov    DWORD PTR [esp+0x34],edx
100556b7:	mov    DWORD PTR [esp+0x44],eax
100556bb:	mov    DWORD PTR [esp+0x28],eax
100556bf:	mov    DWORD PTR [esp+0x40],ecx
100556c3:	jne    0x100556d0
100556c5:	cmp    eax,0x5b0
100556ca:	jae    0x10055920
100556d0:	mov    edx,DWORD PTR [esp+0x1c]
100556d4:	mov    DWORD PTR [esp+0x1c],edx
100556d8:	jmp    0x100556e0
100556da:	lea    ebx,[ebx+0x0]
100556e0:	mov    al,BYTE PTR [esp+0x18]
100556e4:	mov    esi,DWORD PTR [esp+0x1c]
100556e8:	mov    edx,DWORD PTR [esp+0x30]
100556ec:	sub    al,bl
100556ee:	mov    BYTE PTR [esp+0x11],al
100556f2:	movzx  eax,WORD PTR [esi]
100556f5:	movzx  ecx,ax
100556f8:	cmp    ecx,edx
100556fa:	jge    0x10055708
100556fc:	mov    BYTE PTR [esp+0x10],0x0
10055701:	mov    WORD PTR [esp+0x12],ax
10055706:	jmp    0x10055735
10055708:	jle    0x10055729
1005570a:	movzx  eax,WORD PTR [esi]
1005570d:	mov    ecx,DWORD PTR [esp+0x38]
10055711:	add    eax,eax
10055713:	mov    dl,BYTE PTR [eax+ecx*1]
10055716:	mov    ecx,DWORD PTR [esp+0x2c]
1005571a:	mov    BYTE PTR [esp+0x10],dl
1005571e:	mov    dx,WORD PTR [eax+ecx*1]
10055722:	mov    WORD PTR [esp+0x12],dx
10055727:	jmp    0x10055735
10055729:	mov    BYTE PTR [esp+0x10],0x60
1005572e:	mov    WORD PTR [esp+0x12],0x0
10055735:	mov    ecx,DWORD PTR [esp+0x18]
10055739:	mov    eax,DWORD PTR [esp+0x44]
1005573d:	sub    ecx,ebx
1005573f:	mov    edx,0x1
10055744:	shl    edx,cl
10055746:	mov    ecx,ebx
10055748:	mov    edi,ebp
1005574a:	shr    edi,cl
1005574c:	mov    ecx,DWORD PTR [esp+0x24]
10055750:	mov    DWORD PTR [esp+0x50],eax
10055754:	lea    esi,[edx*4+0x0]
1005575b:	add    edi,eax
1005575d:	lea    ecx,[ecx+edi*4]
10055760:	mov    edi,DWORD PTR [esp+0x10]
10055764:	sub    eax,edx
10055766:	sub    ecx,esi
10055768:	test   eax,eax
1005576a:	mov    DWORD PTR [ecx],edi
1005576c:	jne    0x10055764
1005576e:	mov    edx,DWORD PTR [esp+0x18]
10055772:	lea    ecx,[edx-0x1]
10055775:	mov    eax,0x1
1005577a:	shl    eax,cl
1005577c:	test   ebp,eax
1005577e:	je     0x10055786
10055780:	shr    eax,1
10055782:	test   ebp,eax
10055784:	jne    0x10055780
10055786:	test   eax,eax
10055788:	je     0x10055795
1005578a:	lea    ecx,[eax-0x1]
1005578d:	and    ecx,ebp
1005578f:	add    ecx,eax
10055791:	mov    ebp,ecx
10055793:	jmp    0x10055797
10055795:	xor    ebp,ebp
10055797:	add    WORD PTR [esp+edx*2+0x58],0xffff
1005579e:	movzx  eax,WORD PTR [esp+edx*2+0x58]
100557a3:	add    DWORD PTR [esp+0x1c],0x2
100557a8:	test   ax,ax
100557ab:	jne    0x100557ca
100557ad:	cmp    edx,DWORD PTR [esp+0x20]
100557b1:	je     0x10055893
100557b7:	mov    edx,DWORD PTR [esp+0x1c]
100557bb:	movzx  eax,WORD PTR [edx]
100557be:	mov    ecx,DWORD PTR [esp+0x54]
100557c2:	movzx  edx,WORD PTR [ecx+eax*2]
100557c6:	mov    DWORD PTR [esp+0x18],edx
100557ca:	cmp    edx,DWORD PTR [esp+0x14]
100557ce:	jbe    0x100556e0
100557d4:	mov    esi,DWORD PTR [esp+0x40]
100557d8:	and    esi,ebp
100557da:	cmp    esi,DWORD PTR [esp+0x34]
100557de:	mov    DWORD PTR [esp+0x48],esi
100557e2:	je     0x100556e0
100557e8:	test   ebx,ebx
100557ea:	jne    0x100557f0
100557ec:	mov    ebx,DWORD PTR [esp+0x14]
100557f0:	mov    eax,DWORD PTR [esp+0x24]
100557f4:	mov    ecx,DWORD PTR [esp+0x50]
100557f8:	lea    edx,[eax+ecx*4]
100557fb:	mov    ecx,DWORD PTR [esp+0x18]
100557ff:	sub    ecx,ebx
10055801:	mov    DWORD PTR [esp+0x24],edx
10055805:	mov    eax,0x1
1005580a:	lea    edx,[ebx+ecx*1]
1005580d:	shl    eax,cl
1005580f:	cmp    edx,DWORD PTR [esp+0x20]
10055813:	jae    0x1005583e
10055815:	lea    esi,[esp+edx*2+0x58]
10055819:	lea    esp,[esp+0x0]
10055820:	movzx  edi,WORD PTR [esi]
10055823:	sub    eax,edi
10055825:	test   eax,eax
10055827:	jle    0x1005583a
10055829:	add    edx,0x1
1005582c:	add    ecx,0x1
1005582f:	add    esi,0x2
10055832:	add    eax,eax
10055834:	cmp    edx,DWORD PTR [esp+0x20]
10055838:	jb     0x10055820
1005583a:	mov    esi,DWORD PTR [esp+0x48]
1005583e:	mov    eax,0x1
10055843:	shl    eax,cl
10055845:	add    DWORD PTR [esp+0x28],eax
10055849:	cmp    DWORD PTR [esp+0xa0],0x1
10055851:	mov    DWORD PTR [esp+0x44],eax
10055855:	jne    0x10055865
10055857:	cmp    DWORD PTR [esp+0x28],0x5b0
1005585f:	jae    0x10055920
10055865:	mov    edx,esi
10055867:	mov    esi,DWORD PTR [esp+0x3c]
1005586b:	mov    eax,DWORD PTR [esi]
1005586d:	mov    BYTE PTR [eax+edx*4],cl
10055870:	mov    ecx,DWORD PTR [esi]
10055872:	mov    al,BYTE PTR [esp+0x14]
10055876:	mov    BYTE PTR [ecx+edx*4+0x1],al
1005587a:	mov    eax,DWORD PTR [esi]
1005587c:	mov    ecx,DWORD PTR [esp+0x24]
10055880:	sub    ecx,eax
10055882:	sar    ecx,0x2
10055885:	mov    DWORD PTR [esp+0x34],edx
10055889:	mov    WORD PTR [eax+edx*4+0x2],cx
1005588e:	jmp    0x100556e0
10055893:	mov    edi,DWORD PTR [esp+0x3c]
10055897:	mov    al,dl
10055899:	sub    al,bl
1005589b:	test   ebp,ebp
1005589d:	mov    BYTE PTR [esp+0x10],0x40
100558a2:	mov    BYTE PTR [esp+0x11],al
100558a6:	mov    WORD PTR [esp+0x12],0x0
100558ad:	je     0x10055905
100558af:	mov    esi,DWORD PTR [esp+0x24]
100558b3:	test   ebx,ebx
100558b5:	je     0x100558d5
100558b7:	mov    ecx,DWORD PTR [esp+0x40]
100558bb:	and    ecx,ebp
100558bd:	cmp    ecx,DWORD PTR [esp+0x34]
100558c1:	je     0x100558d5
100558c3:	mov    eax,DWORD PTR [esp+0x14]
100558c7:	mov    esi,DWORD PTR [edi]
100558c9:	xor    ebx,ebx
100558cb:	mov    DWORD PTR [esp+0x18],eax
100558cf:	mov    BYTE PTR [esp+0x11],al
100558d3:	mov    edx,eax
100558d5:	mov    ecx,ebx
100558d7:	mov    eax,ebp
100558d9:	shr    eax,cl
100558db:	mov    ecx,DWORD PTR [esp+0x10]
100558df:	mov    DWORD PTR [esi+eax*4],ecx
100558e2:	lea    ecx,[edx-0x1]
100558e5:	mov    eax,0x1
100558ea:	shl    eax,cl
100558ec:	test   ebp,eax
100558ee:	je     0x100558f6
100558f0:	shr    eax,1
100558f2:	test   ebp,eax
100558f4:	jne    0x100558f0
100558f6:	test   eax,eax
100558f8:	je     0x10055905
100558fa:	lea    ecx,[eax-0x1]
100558fd:	and    ecx,ebp
100558ff:	add    ecx,eax
10055901:	mov    ebp,ecx
10055903:	jne    0x100558b3
10055905:	mov    edx,DWORD PTR [esp+0x28]
10055909:	mov    ecx,DWORD PTR [esp+0x4c]
1005590d:	lea    eax,[edx*4+0x0]
10055914:	add    DWORD PTR [edi],eax
10055916:	mov    edx,DWORD PTR [esp+0x14]
1005591a:	mov    DWORD PTR [ecx],edx
1005591c:	xor    eax,eax
1005591e:	jmp    0x10055925
10055920:	mov    eax,0x1
10055925:	mov    ecx,DWORD PTR [esp+0x98]
1005592c:	pop    edi
1005592d:	pop    esi
1005592e:	pop    ebp
1005592f:	pop    ebx
10055930:	xor    ecx,esp
10055932:	call   0x10041d97
10055937:	add    esp,0x8c
1005593d:	ret    
1005593e:	jmp    DWORD PTR ds:0x10065218
10055944:	jmp    DWORD PTR ds:0x10065278
1005594a:	push   ebp
1005594b:	mov    ebp,esp
1005594d:	sub    esp,0xc
10055950:	mov    eax,ds:0x1007d030
10055955:	xor    eax,ebp
10055957:	mov    DWORD PTR [ebp-0x4],eax
1005595a:	push   esi
1005595b:	xor    esi,esi
1005595d:	call   DWORD PTR ds:0x1006506c
10055963:	push   0x7
10055965:	lea    ecx,[ebp-0xc]
10055968:	push   ecx
10055969:	push   0x1004
1005596e:	push   eax
1005596f:	call   DWORD PTR ds:0x10065230
10055975:	test   eax,eax
10055977:	je     0x10055998
10055979:	mov    cl,BYTE PTR [ebp-0xc]
1005597c:	test   cl,cl
1005597e:	lea    eax,[ebp-0xc]
10055981:	je     0x10055998
10055983:	imul   esi,esi,0xa
10055986:	movsx  ecx,cl
10055989:	inc    eax
1005598a:	lea    esi,[esi+ecx*1-0x30]
1005598e:	mov    cl,BYTE PTR [eax]
10055990:	test   cl,cl
10055992:	jne    0x10055983
10055994:	test   esi,esi
10055996:	jne    0x100559a0
10055998:	call   DWORD PTR ds:0x100651e0
1005599e:	mov    esi,eax
100559a0:	mov    ecx,DWORD PTR [ebp-0x4]
100559a3:	mov    eax,esi
100559a5:	xor    ecx,ebp
100559a7:	pop    esi
100559a8:	call   0x10041d97
100559ad:	leave  
100559ae:	ret    
100559af:	push   0x3
100559b1:	pop    eax
100559b2:	ret    
100559b3:	push   ebp
100559b4:	mov    ebp,esp
100559b6:	sub    esp,0x98
100559bc:	mov    eax,ds:0x1007d030
100559c1:	xor    eax,ebp
100559c3:	mov    DWORD PTR [ebp-0x4],eax
100559c6:	lea    eax,[ebp-0x98]
100559cc:	push   eax
100559cd:	mov    DWORD PTR [ebp-0x98],0x94
100559d7:	call   DWORD PTR ds:0x100651a8
100559dd:	cmp    DWORD PTR [ebp-0x88],0x2
100559e4:	jne    0x100559f4
100559e6:	cmp    DWORD PTR [ebp-0x94],0x5
100559ed:	mov    eax,0x100559af
100559f2:	jae    0x100559f9
100559f4:	mov    eax,0x1005594a
100559f9:	push   eax
100559fa:	push   0x1007dfe4
100559ff:	call   DWORD PTR ds:0x1006521c
10055a05:	call   DWORD PTR ds:0x1007dfe4
10055a0b:	mov    ecx,DWORD PTR [ebp-0x4]
10055a0e:	xor    ecx,ebp
10055a10:	call   0x10041d97
10055a15:	leave  
10055a16:	ret    
10055a17:	push   esi
10055a18:	mov    esi,ecx
10055a1a:	mov    eax,DWORD PTR [esi]
10055a1c:	test   eax,eax
10055a1e:	je     0x10055a2a
10055a20:	push   eax
10055a21:	call   0x10042408
10055a26:	and    DWORD PTR [esi],0x0
10055a29:	pop    ecx
10055a2a:	and    DWORD PTR [esi+0x4],0x0
10055a2e:	and    DWORD PTR [esi+0x8],0x0
10055a32:	pop    esi
10055a33:	ret    
10055a34:	mov    eax,DWORD PTR [esp+0x4]
10055a38:	test   eax,eax
10055a3a:	jne    0x10055a43
10055a3c:	mov    eax,0x80070057
10055a41:	jmp    0x10055a54
10055a43:	cmp    DWORD PTR [eax],0x2c
10055a46:	jne    0x10055a3c
10055a48:	and    DWORD PTR [eax+0x1c],0x0
10055a4c:	lea    ecx,[eax+0x4]
10055a4f:	call   0x10014057
10055a54:	ret    0x4
10055a57:	mov    eax,DWORD PTR [esp+0x4]
10055a5b:	test   eax,eax
10055a5d:	jl     0x10055a6c
10055a5f:	cmp    eax,DWORD PTR [ecx+0x4]
10055a62:	jge    0x10055a6c
10055a64:	mov    ecx,DWORD PTR [ecx]
10055a66:	lea    eax,[ecx+eax*2]
10055a69:	ret    0x4
10055a6c:	push   0x0
10055a6e:	push   0x0
10055a70:	push   0x1
10055a72:	push   0xc000008c
10055a77:	call   DWORD PTR ds:0x10065128
10055a7d:	int3   
10055a7e:	mov    eax,DWORD PTR [esp+0x4]
10055a82:	test   eax,eax
10055a84:	jl     0x10055a93
10055a86:	cmp    eax,DWORD PTR [ecx+0x4]
10055a89:	jge    0x10055a93
10055a8b:	mov    ecx,DWORD PTR [ecx]
10055a8d:	lea    eax,[ecx+eax*4]
10055a90:	ret    0x4
10055a93:	push   0x0
10055a95:	push   0x0
10055a97:	push   0x1
10055a99:	push   0xc000008c
10055a9e:	call   DWORD PTR ds:0x10065128
10055aa4:	int3   
10055aa5:	push   esi
10055aa6:	mov    esi,ecx
10055aa8:	lea    ecx,[esi+0x4]
10055aab:	call   0x10014043
10055ab0:	xor    eax,eax
10055ab2:	mov    DWORD PTR [esi+0x20],eax
10055ab5:	mov    DWORD PTR [esi+0x24],eax
10055ab8:	mov    DWORD PTR [esi+0x28],eax
10055abb:	mov    eax,esi
10055abd:	pop    esi
10055abe:	ret    
10055abf:	push   esi
10055ac0:	mov    esi,DWORD PTR [esp+0x8]
10055ac4:	test   esi,esi
10055ac6:	jne    0x10055acf
10055ac8:	mov    eax,0x80070057
10055acd:	jmp    0x10055b1b
10055acf:	mov    eax,DWORD PTR [esi]
10055ad1:	test   eax,eax
10055ad3:	je     0x10055b19
10055ad5:	cmp    eax,0x2c
10055ad8:	jne    0x10055ac8
10055ada:	push   edi
10055adb:	xor    edi,edi
10055add:	cmp    DWORD PTR [esi+0x24],edi
10055ae0:	jle    0x10055b03
10055ae2:	push   ebx
10055ae3:	lea    ebx,[esi+0x20]
10055ae6:	push   edi
10055ae7:	mov    ecx,ebx
10055ae9:	call   0x10055a57
10055aee:	movzx  eax,WORD PTR [eax]
10055af1:	push   DWORD PTR [esp+0x14]
10055af5:	push   eax
10055af6:	call   DWORD PTR ds:0x10065368
10055afc:	inc    edi
10055afd:	cmp    edi,DWORD PTR [esi+0x24]
10055b00:	jl     0x10055ae6
10055b02:	pop    ebx
10055b03:	lea    ecx,[esi+0x20]
10055b06:	call   0x10055a17
10055b0b:	lea    eax,[esi+0x4]
10055b0e:	push   eax
10055b0f:	call   DWORD PTR ds:0x10065138
10055b15:	and    DWORD PTR [esi],0x0
10055b18:	pop    edi
10055b19:	xor    eax,eax
10055b1b:	pop    esi
10055b1c:	ret    0x8
10055b1f:	push   esi
10055b20:	mov    esi,ecx
10055b22:	lea    ecx,[esi+0x18]
10055b25:	call   0x10014043
10055b2a:	xor    eax,eax
10055b2c:	mov    DWORD PTR [esi+0x30],eax
10055b2f:	mov    DWORD PTR [esi+0x34],eax
10055b32:	mov    DWORD PTR [esi+0x38],eax
10055b35:	mov    eax,esi
10055b37:	pop    esi
10055b38:	ret    
10055b39:	push   esi
10055b3a:	mov    esi,ecx
10055b3c:	lea    eax,[esi+0x18]
10055b3f:	push   eax
10055b40:	call   DWORD PTR ds:0x10065138
10055b46:	lea    ecx,[esi+0x30]
10055b49:	pop    esi
10055b4a:	jmp    0x10055a17
10055b4f:	push   ebp
10055b50:	mov    ebp,esp
10055b52:	push   ecx
10055b53:	push   ecx
10055b54:	push   esi
10055b55:	mov    esi,ecx
10055b57:	lea    eax,[esi+0x18]
10055b5a:	push   eax
10055b5b:	mov    DWORD PTR [ebp-0x8],eax
10055b5e:	call   DWORD PTR ds:0x100650f0
10055b64:	mov    eax,DWORD PTR [esi+0x34]
10055b67:	mov    ecx,DWORD PTR [ebp+0x8]
10055b6a:	cmp    ecx,eax
10055b6c:	mov    BYTE PTR [ebp-0x4],0x1
10055b70:	jg     0x10055b96
10055b72:	test   ecx,ecx
10055b74:	jl     0x10055b96
10055b76:	cmp    ecx,eax
10055b78:	jne    0x10055b89
10055b7a:	mov    esi,DWORD PTR [esi+0x8]
10055b7d:	lea    ecx,[ebp-0x8]
10055b80:	call   0x10010991
10055b85:	mov    eax,esi
10055b87:	jmp    0x10055ba0
10055b89:	push   ecx
10055b8a:	lea    ecx,[esi+0x30]
10055b8d:	call   0x10055a7e
10055b92:	mov    esi,DWORD PTR [eax]
10055b94:	jmp    0x10055b7d
10055b96:	lea    ecx,[ebp-0x8]
10055b99:	call   0x10010991
10055b9e:	xor    eax,eax
10055ba0:	pop    esi
10055ba1:	leave  
10055ba2:	ret    0x4
10055ba5:	push   esi
10055ba6:	mov    esi,ecx
10055ba8:	call   0x10055aa5
10055bad:	push   esi
10055bae:	mov    DWORD PTR [esi],0x2c
10055bb4:	call   0x10055a34
10055bb9:	test   eax,eax
10055bbb:	jge    0x10055bc7
10055bbd:	mov    BYTE PTR ds:0x1007fbe0,0x1
10055bc4:	and    DWORD PTR [esi],0x0
10055bc7:	mov    eax,esi
10055bc9:	pop    esi
10055bca:	ret    
10055bcb:	push   ebp
10055bcc:	lea    ebp,[esp-0x78]
10055bd0:	sub    esp,0x98
10055bd6:	mov    eax,ds:0x1007d030
10055bdb:	xor    eax,ebp
10055bdd:	mov    DWORD PTR [ebp+0x74],eax
10055be0:	push   esi
10055be1:	mov    esi,ecx
10055be3:	call   0x10055b1f
10055be8:	mov    eax,0x10000000
10055bed:	push   0x94
10055bf2:	mov    DWORD PTR [esi+0x8],eax
10055bf5:	mov    DWORD PTR [esi+0x4],eax
10055bf8:	lea    eax,[ebp-0x20]
10055bfb:	push   0x0
10055bfd:	push   eax
10055bfe:	mov    DWORD PTR [esi],0x3c
10055c04:	mov    BYTE PTR [esi+0xc],0x0
10055c08:	call   0x10044950
10055c0d:	add    esp,0xc
10055c10:	lea    eax,[ebp-0x20]
10055c13:	push   eax
10055c14:	mov    DWORD PTR [ebp-0x20],0x94
10055c1b:	call   DWORD PTR ds:0x100651a8
10055c21:	cmp    DWORD PTR [ebp-0x10],0x2
10055c25:	jne    0x10055c2f
10055c27:	cmp    DWORD PTR [ebp-0x1c],0x5
10055c2b:	jb     0x10055c47
10055c2d:	jmp    0x10055c43
10055c2f:	cmp    DWORD PTR [ebp-0x10],0x1
10055c33:	jne    0x10055c47
10055c35:	cmp    DWORD PTR [ebp-0x1c],0x4
10055c39:	ja     0x10055c43
10055c3b:	jne    0x10055c47
10055c3d:	cmp    DWORD PTR [ebp-0x18],0x0
10055c41:	jbe    0x10055c47
10055c43:	mov    BYTE PTR [esi+0xc],0x1
10055c47:	lea    ecx,[esi+0x18]
10055c4a:	mov    DWORD PTR [esi+0x10],0x800
10055c51:	mov    DWORD PTR [esi+0x14],0x1006a6f8
10055c58:	call   0x10014057
10055c5d:	test   eax,eax
10055c5f:	jge    0x10055c68
10055c61:	mov    BYTE PTR ds:0x1007fbe0,0x1
10055c68:	mov    ecx,DWORD PTR [ebp+0x74]
10055c6b:	mov    eax,esi
10055c6d:	xor    ecx,ebp
10055c6f:	pop    esi
10055c70:	call   0x10041d97
10055c75:	add    ebp,0x78
10055c78:	leave  
10055c79:	ret    
10055c7a:	push   esi
10055c7b:	push   DWORD PTR ds:0x1007f9e4
10055c81:	mov    esi,ecx
10055c83:	push   esi
10055c84:	call   0x10055abf
10055c89:	lea    ecx,[esi+0x20]
10055c8c:	pop    esi
10055c8d:	jmp    0x10055a17
10055c92:	cmp    BYTE PTR [ecx+0x8],0x0
10055c96:	mov    DWORD PTR [ecx],0x1006a708
10055c9c:	je     0x10055cac
10055c9e:	mov    ecx,DWORD PTR [ecx+0x4]
10055ca1:	test   ecx,ecx
10055ca3:	je     0x10055cac
10055ca5:	push   ecx
10055ca6:	call   DWORD PTR ds:0x100651c8
10055cac:	ret    
10055cad:	push   DWORD PTR [esp+0x4]
10055cb1:	push   0x0
10055cb3:	push   DWORD PTR [ecx+0x4]
10055cb6:	call   DWORD PTR ds:0x1006518c
10055cbc:	ret    0x4
10055cbf:	cmp    DWORD PTR [esp+0x4],0x0
10055cc4:	je     0x10055cd5
10055cc6:	push   DWORD PTR [esp+0x4]
10055cca:	push   0x0
10055ccc:	push   DWORD PTR [ecx+0x4]
10055ccf:	call   DWORD PTR ds:0x10065188
10055cd5:	ret    0x4
10055cd8:	push   ebp
10055cd9:	mov    ebp,esp
10055cdb:	xor    eax,eax
10055cdd:	cmp    DWORD PTR [ebp+0x8],eax
10055ce0:	jne    0x10055ceb
10055ce2:	push   DWORD PTR [ebp+0xc]
10055ce5:	mov    eax,DWORD PTR [ecx]
10055ce7:	call   DWORD PTR [eax]
10055ce9:	jmp    0x10055d0c
10055ceb:	cmp    DWORD PTR [ebp+0xc],eax
10055cee:	jne    0x10055cfc
10055cf0:	push   DWORD PTR [ebp+0x8]
10055cf3:	mov    eax,DWORD PTR [ecx]
10055cf5:	call   DWORD PTR [eax+0x4]
10055cf8:	xor    eax,eax
10055cfa:	jmp    0x10055d0c
10055cfc:	push   DWORD PTR [ebp+0xc]
10055cff:	push   DWORD PTR [ebp+0x8]
10055d02:	push   eax
10055d03:	push   DWORD PTR [ecx+0x4]
10055d06:	call   DWORD PTR ds:0x100651a0
10055d0c:	pop    ebp
10055d0d:	ret    0x8
10055d10:	push   DWORD PTR [esp+0x4]
10055d14:	push   0x0
10055d16:	push   DWORD PTR [ecx+0x4]
10055d19:	call   DWORD PTR ds:0x100651c0
10055d1f:	ret    0x4
10055d22:	push   esi
10055d23:	mov    esi,ecx
10055d25:	call   0x10055c92
10055d2a:	test   BYTE PTR [esp+0x8],0x1
10055d2f:	je     0x10055d38
10055d31:	push   esi
10055d32:	call   0x10041d92
10055d37:	pop    ecx
10055d38:	mov    eax,esi
10055d3a:	pop    esi
10055d3b:	ret    0x4
10055d3e:	mov    eax,ecx
10055d40:	mov    ecx,DWORD PTR [esp+0x4]
10055d44:	mov    DWORD PTR [eax+0x4],ecx
10055d47:	mov    DWORD PTR [eax],0x1006a71c
10055d4d:	xor    ecx,ecx
10055d4f:	mov    DWORD PTR [eax+0x14],0x2
10055d56:	mov    DWORD PTR [eax+0xc],ecx
10055d59:	mov    DWORD PTR [eax+0x10],ecx
10055d5c:	mov    WORD PTR [eax+0x18],cx
10055d60:	mov    WORD PTR [eax+0x1a],cx
10055d64:	mov    DWORD PTR [eax+0x8],eax
10055d67:	ret    0x4
10055d6a:	mov    ecx,DWORD PTR [ecx+0x4]
10055d6d:	mov    eax,DWORD PTR [ecx]
10055d6f:	jmp    DWORD PTR [eax+0x4]
10055d72:	xor    edx,edx
10055d74:	lea    eax,[ecx+0x14]
10055d77:	inc    edx
10055d78:	lock xadd DWORD PTR [eax],edx
10055d7c:	lea    eax,[ecx+0x8]
10055d7f:	ret    
10055d80:	mov    eax,ecx
10055d82:	ret    
10055d83:	test   BYTE PTR [esp+0x4],0x1
10055d88:	push   esi
10055d89:	mov    esi,ecx
10055d8b:	mov    DWORD PTR [esi],0x1006a71c
10055d91:	je     0x10055d9a
10055d93:	push   esi
10055d94:	call   0x10041d92
10055d99:	pop    ecx
10055d9a:	mov    eax,esi
10055d9c:	pop    esi
10055d9d:	ret    0x4
10055da0:	mov    eax,DWORD PTR [esp+0x8]
10055da4:	mov    ecx,DWORD PTR [esp+0xc]
10055da8:	or     edx,0xffffffff
10055dab:	sub    edx,eax
10055dad:	cmp    edx,ecx
10055daf:	jae    0x10055db7
10055db1:	mov    eax,0x80070057
10055db6:	ret    
10055db7:	add    eax,ecx
10055db9:	mov    ecx,DWORD PTR [esp+0x4]
10055dbd:	mov    DWORD PTR [ecx],eax
10055dbf:	xor    eax,eax
10055dc1:	ret    
10055dc2:	push   ebp
10055dc3:	mov    ebp,esp
10055dc5:	push   esi
10055dc6:	mov    esi,DWORD PTR [ebp+0x8]
10055dc9:	push   edi
10055dca:	push   DWORD PTR [ebp+0xc]
10055dcd:	add    esi,0x8
10055dd0:	and    esi,0xfffffff8
10055dd3:	lea    eax,[ebp+0x8]
10055dd6:	push   esi
10055dd7:	push   eax
10055dd8:	mov    edi,ecx
10055dda:	call   0x10013fd8
10055ddf:	add    esp,0xc
10055de2:	test   eax,eax
10055de4:	jl     0x10055e1c
10055de6:	push   DWORD PTR [ebp+0x8]
10055de9:	lea    eax,[ebp+0x8]
10055dec:	push   0x10
10055dee:	push   eax
10055def:	call   0x10055da0
10055df4:	add    esp,0xc
10055df7:	test   eax,eax
10055df9:	jl     0x10055e1c
10055dfb:	mov    ecx,DWORD PTR [edi+0x4]
10055dfe:	push   DWORD PTR [ebp+0x8]
10055e01:	mov    eax,DWORD PTR [ecx]
10055e03:	call   DWORD PTR [eax]
10055e05:	test   eax,eax
10055e07:	je     0x10055e1c
10055e09:	dec    esi
10055e0a:	and    DWORD PTR [eax+0x4],0x0
10055e0e:	mov    DWORD PTR [eax],edi
10055e10:	mov    DWORD PTR [eax+0xc],0x1
10055e17:	mov    DWORD PTR [eax+0x8],esi
10055e1a:	jmp    0x10055e1e
10055e1c:	xor    eax,eax
10055e1e:	pop    edi
10055e1f:	pop    esi
10055e20:	pop    ebp
10055e21:	ret    0x8
10055e24:	push   ebp
10055e25:	mov    ebp,esp
10055e27:	push   esi
10055e28:	mov    esi,DWORD PTR [ebp+0xc]
10055e2b:	push   edi
10055e2c:	push   DWORD PTR [ebp+0x10]
10055e2f:	add    esi,0x8
10055e32:	and    esi,0xfffffff8
10055e35:	lea    eax,[ebp+0xc]
10055e38:	push   esi
10055e39:	push   eax
10055e3a:	mov    edi,ecx
10055e3c:	call   0x10013fd8
10055e41:	add    esp,0xc
10055e44:	test   eax,eax
10055e46:	jl     0x10055e75
10055e48:	push   DWORD PTR [ebp+0xc]
10055e4b:	lea    eax,[ebp+0xc]
10055e4e:	push   0x10
10055e50:	push   eax
10055e51:	call   0x10007166
10055e56:	add    esp,0xc
10055e59:	test   eax,eax
10055e5b:	jl     0x10055e75
10055e5d:	push   DWORD PTR [ebp+0xc]
10055e60:	mov    ecx,DWORD PTR [edi+0x4]
10055e63:	push   DWORD PTR [ebp+0x8]
10055e66:	mov    eax,DWORD PTR [ecx]
10055e68:	call   DWORD PTR [eax+0x8]
10055e6b:	test   eax,eax
10055e6d:	je     0x10055e75
10055e6f:	dec    esi
10055e70:	mov    DWORD PTR [eax+0x8],esi
10055e73:	jmp    0x10055e77
10055e75:	xor    eax,eax
10055e77:	pop    edi
10055e78:	pop    esi
10055e79:	pop    ebp
10055e7a:	ret    0xc
10055e7d:	mov    eax,ds:0x1007fa70
10055e82:	cmp    eax,0x1
10055e85:	push   DWORD PTR [esp+0x4]
10055e89:	jne    0x10055e9b
10055e8b:	push   0x0
10055e8d:	call   DWORD PTR ds:0x100651ac
10055e93:	push   eax
10055e94:	call   DWORD PTR ds:0x10065188
10055e9a:	ret    
10055e9b:	push   eax
10055e9c:	call   DWORD PTR ds:0x1007fa74
10055ea2:	ret    
10055ea3:	push   ebx
10055ea4:	push   0xc
10055ea6:	call   DWORD PTR ds:0x10065060
10055eac:	test   eax,eax
10055eae:	jne    0x10055eb8
10055eb0:	inc    eax
10055eb1:	mov    ds:0x1007fa70,eax
10055eb6:	pop    ebx
10055eb7:	ret    
10055eb8:	push   ebp
10055eb9:	push   esi
10055eba:	push   edi
10055ebb:	push   0x1006e494
10055ec0:	call   DWORD PTR ds:0x10065220
10055ec6:	mov    edi,eax
10055ec8:	xor    ebp,ebp
10055eca:	cmp    edi,ebp
10055ecc:	je     0x10055eee
10055ece:	mov    esi,DWORD PTR ds:0x1006512c
10055ed4:	push   0x1006a750
10055ed9:	push   edi
10055eda:	call   esi
10055edc:	push   0x1006a734
10055ee1:	push   edi
10055ee2:	mov    ds:0x1007fa74,eax
10055ee7:	call   esi
10055ee9:	mov    ds:0x1007fa78,eax
10055eee:	cmp    DWORD PTR ds:0x1007fa74,ebp
10055ef4:	je     0x10055f51
10055ef6:	cmp    DWORD PTR ds:0x1007fa78,ebp
10055efc:	je     0x10055f51
10055efe:	mov    eax,fs:0x18
10055f04:	mov    esi,DWORD PTR [eax+0x30]
10055f07:	add    esi,0x34
10055f0a:	mov    eax,DWORD PTR [esi]
10055f0c:	cmp    eax,ebp
10055f0e:	jne    0x10055f47
10055f10:	mov    ebx,DWORD PTR ds:0x100651ac
10055f16:	push   0x8
10055f18:	push   ebp
10055f19:	call   ebx
10055f1b:	push   eax
10055f1c:	call   DWORD PTR ds:0x1006518c
10055f22:	mov    edi,eax
10055f24:	cmp    edi,ebp
10055f26:	je     0x10055f51
10055f28:	push   ebp
10055f29:	push   edi
10055f2a:	push   esi
10055f2b:	mov    DWORD PTR [edi],ebp
10055f2d:	mov    DWORD PTR [edi+0x4],ebp
10055f30:	call   DWORD PTR ds:0x100650d8
10055f36:	test   eax,eax
10055f38:	je     0x10055f45
10055f3a:	push   edi
10055f3b:	push   ebp
10055f3c:	call   ebx
10055f3e:	push   eax
10055f3f:	call   DWORD PTR ds:0x10065188
10055f45:	mov    eax,DWORD PTR [esi]
10055f47:	mov    ds:0x1007fa70,eax
10055f4c:	xor    eax,eax
10055f4e:	inc    eax
10055f4f:	jmp    0x10055f53
10055f51:	xor    eax,eax
10055f53:	pop    edi
10055f54:	pop    esi
10055f55:	pop    ebp
10055f56:	pop    ebx
10055f57:	ret    
10055f58:	push   DWORD PTR [esp+0x4]
10055f5c:	call   0x10055e7d
10055f61:	pop    ecx
10055f62:	ret    0x4
10055f65:	cmp    DWORD PTR ds:0x1007fa70,0x0
10055f6c:	push   esi
10055f6d:	jne    0x10055f78
10055f6f:	call   0x10055ea3
10055f74:	test   eax,eax
10055f76:	je     0x10055fbb
10055f78:	mov    eax,ds:0x1007fa70
10055f7d:	cmp    eax,0x1
10055f80:	jne    0x10055f99
10055f82:	push   0xd
10055f84:	push   0x0
10055f86:	call   DWORD PTR ds:0x100651ac
10055f8c:	push   eax
10055f8d:	call   DWORD PTR ds:0x1006518c
10055f93:	test   eax,eax
10055f95:	je     0x10055fbb
10055f97:	pop    esi
10055f98:	ret    
10055f99:	push   eax
10055f9a:	call   DWORD PTR ds:0x1007fa78
10055fa0:	test   eax,eax
10055fa2:	jne    0x10056003
10055fa4:	push   0x40
10055fa6:	mov    eax,0x1000
10055fab:	push   eax
10055fac:	push   eax
10055fad:	push   0x0
10055faf:	call   DWORD PTR ds:0x10065194
10055fb5:	mov    esi,eax
10055fb7:	test   esi,esi
10055fb9:	jne    0x10055fbf
10055fbb:	xor    eax,eax
10055fbd:	pop    esi
10055fbe:	ret    
10055fbf:	mov    eax,DWORD PTR [esi]
10055fc1:	push   edi
10055fc2:	push   DWORD PTR ds:0x1007fa70
10055fc8:	call   DWORD PTR ds:0x1007fa78
10055fce:	mov    edi,eax
10055fd0:	test   edi,edi
10055fd2:	je     0x10055fe6
10055fd4:	push   0x8000
10055fd9:	push   0x0
10055fdb:	push   esi
10055fdc:	call   DWORD PTR ds:0x100651d0
10055fe2:	mov    eax,edi
10055fe4:	jmp    0x10056002
10055fe6:	lea    edi,[esi+0xff0]
10055fec:	push   esi
10055fed:	push   DWORD PTR ds:0x1007fa70
10055ff3:	call   DWORD PTR ds:0x1007fa74
10055ff9:	add    esi,0x10
10055ffc:	cmp    esi,edi
10055ffe:	jb     0x10055fec
10056000:	mov    eax,esi
10056002:	pop    edi
10056003:	pop    esi
10056004:	ret    
10056005:	jmp    0x10055f65
1005600a:	push   0x44
1005600c:	mov    eax,0x1005ef45
10056011:	call   0x10058845
10056016:	push   0x1006a790
1005601b:	lea    ecx,[ebp-0x28]
1005601e:	call   0x100011d6
10056023:	and    DWORD PTR [ebp-0x4],0x0
10056027:	lea    eax,[ebp-0x28]
1005602a:	push   eax
1005602b:	lea    ecx,[ebp-0x50]
1005602e:	call   0x10001065
10056033:	push   0x10073960
10056038:	lea    eax,[ebp-0x50]
1005603b:	push   eax
1005603c:	mov    DWORD PTR [ebp-0x50],0x1006a77c
10056043:	call   0x10046704
10056048:	int3   
10056049:	push   0x44
1005604b:	mov    eax,0x1005ef45
10056050:	call   0x10058845
10056055:	push   0x1006a7a0
1005605a:	lea    ecx,[ebp-0x28]
1005605d:	call   0x100011d6
10056062:	and    DWORD PTR [ebp-0x4],0x0
10056066:	lea    eax,[ebp-0x28]
10056069:	push   eax
1005606a:	lea    ecx,[ebp-0x50]
1005606d:	call   0x10001065
10056072:	push   0x10073880
10056077:	lea    eax,[ebp-0x50]
1005607a:	push   eax
1005607b:	mov    DWORD PTR [ebp-0x50],0x1006a788
10056082:	call   0x10046704
10056087:	int3   
10056088:	int3   
10056089:	int3   
1005608a:	int3   
1005608b:	int3   
1005608c:	int3   
1005608d:	int3   
1005608e:	int3   
1005608f:	int3   
10056090:	push   ebp
10056091:	mov    ebp,esp
10056093:	sub    esp,0x34
10056096:	push   0x1
10056098:	mov    eax,DWORD PTR [ebp+0x8]
1005609b:	push   eax
1005609c:	call   0x100568d0
100560a1:	mov    DWORD PTR [ebp+0x8],eax
100560a4:	push   0x0
100560a6:	mov    ecx,DWORD PTR [ebp+0xc]
100560a9:	push   ecx
100560aa:	call   0x100568d0
100560af:	mov    DWORD PTR [ebp+0xc],eax
100560b2:	mov    edx,DWORD PTR [ebp+0x8]
100560b5:	movzx  eax,BYTE PTR [edx+0x1f]
100560b9:	mov    DWORD PTR [ebp-0xc],eax
100560bc:	cmp    DWORD PTR [ebp-0xc],0x0
100560c0:	je     0x100560c8
100560c2:	cmp    DWORD PTR [ebp-0xc],0x1f
100560c6:	jl     0x100560d7
100560c8:	push   0x6
100560ca:	call   DWORD PTR ds:0x1006515c
100560d0:	xor    eax,eax
100560d2:	jmp    0x100561e8
100560d7:	mov    ecx,DWORD PTR [ebp+0x8]
100560da:	add    ecx,DWORD PTR [ebp-0xc]
100560dd:	movzx  edx,BYTE PTR [ecx]
100560e0:	cmp    edx,0xe9
100560e6:	je     0x100560f7
100560e8:	push   0x6
100560ea:	call   DWORD PTR ds:0x1006515c
100560f0:	xor    eax,eax
100560f2:	jmp    0x100561e8
100560f7:	mov    eax,DWORD PTR [ebp+0x8]
100560fa:	add    eax,DWORD PTR [ebp-0xc]
100560fd:	mov    ecx,DWORD PTR [eax+0x1]
10056100:	mov    DWORD PTR [ebp-0x20],ecx
10056103:	mov    edx,DWORD PTR [ebp+0x8]
10056106:	add    edx,DWORD PTR [ebp-0xc]
10056109:	mov    eax,DWORD PTR [ebp-0x20]
1005610c:	lea    ecx,[edx+eax*1+0x5]
10056110:	sub    ecx,DWORD PTR [ebp-0xc]
10056113:	mov    DWORD PTR [ebp-0x8],ecx
10056116:	mov    edx,DWORD PTR [ebp-0x8]
10056119:	movzx  eax,BYTE PTR [edx]
1005611c:	cmp    eax,0xe9
10056121:	je     0x10056132
10056123:	push   0x9
10056125:	call   DWORD PTR ds:0x1006515c
1005612b:	xor    eax,eax
1005612d:	jmp    0x100561e8
10056132:	mov    ecx,DWORD PTR [ebp-0x8]
10056135:	mov    edx,DWORD PTR [ecx+0x1]
10056138:	mov    DWORD PTR [ebp-0x20],edx
1005613b:	mov    eax,DWORD PTR [ebp-0x20]
1005613e:	mov    ecx,DWORD PTR [ebp-0x8]
10056141:	lea    edx,[ecx+eax*1+0x5]
10056145:	mov    DWORD PTR [ebp-0x28],edx
10056148:	mov    eax,DWORD PTR [ebp-0x28]
1005614b:	cmp    eax,DWORD PTR [ebp+0xc]
1005614e:	je     0x1005615f
10056150:	push   0xc
10056152:	call   DWORD PTR ds:0x1006515c
10056158:	xor    eax,eax
1005615a:	jmp    0x100561e8
1005615f:	mov    ecx,DWORD PTR [ebp-0xc]
10056162:	push   ecx
10056163:	mov    edx,DWORD PTR [ebp-0x8]
10056166:	push   edx
10056167:	lea    ecx,[ebp-0x1c]
1005616a:	call   0x100561f0
1005616f:	mov    eax,DWORD PTR [ebp+0x8]
10056172:	mov    DWORD PTR [ebp-0x4],eax
10056175:	mov    ecx,DWORD PTR [ebp-0x8]
10056178:	mov    DWORD PTR [ebp-0x24],ecx
1005617b:	mov    DWORD PTR [ebp-0x2c],0x0
10056182:	jmp    0x1005618d
10056184:	mov    edx,DWORD PTR [ebp-0x8]
10056187:	add    edx,DWORD PTR [ebp-0x2c]
1005618a:	mov    DWORD PTR [ebp-0x24],edx
1005618d:	mov    eax,DWORD PTR [ebp-0x2c]
10056190:	cmp    eax,DWORD PTR [ebp-0xc]
10056193:	jge    0x100561b2
10056195:	push   0x0
10056197:	mov    ecx,DWORD PTR [ebp-0x4]
1005619a:	push   ecx
1005619b:	mov    edx,DWORD PTR [ebp-0x24]
1005619e:	push   edx
1005619f:	call   0x10056ae0
100561a4:	mov    DWORD PTR [ebp-0x4],eax
100561a7:	mov    eax,DWORD PTR [ebp-0x4]
100561aa:	sub    eax,DWORD PTR [ebp+0x8]
100561ad:	mov    DWORD PTR [ebp-0x2c],eax
100561b0:	jmp    0x10056184
100561b2:	mov    ecx,DWORD PTR [ebp-0x2c]
100561b5:	cmp    ecx,DWORD PTR [ebp-0xc]
100561b8:	je     0x100561d6
100561ba:	push   0xd
100561bc:	call   DWORD PTR ds:0x1006515c
100561c2:	mov    DWORD PTR [ebp-0x30],0x0
100561c9:	lea    ecx,[ebp-0x1c]
100561cc:	call   0x10056270
100561d1:	mov    eax,DWORD PTR [ebp-0x30]
100561d4:	jmp    0x100561e8
100561d6:	mov    DWORD PTR [ebp-0x34],0x1
100561dd:	lea    ecx,[ebp-0x1c]
100561e0:	call   0x10056270
100561e5:	mov    eax,DWORD PTR [ebp-0x34]
100561e8:	mov    esp,ebp
100561ea:	pop    ebp
100561eb:	ret    0x8
100561ee:	int3   
100561ef:	int3   
100561f0:	push   ebp
100561f1:	mov    ebp,esp
100561f3:	push   ecx
100561f4:	mov    DWORD PTR [ebp-0x4],ecx
100561f7:	mov    eax,DWORD PTR [ebp-0x4]
100561fa:	mov    ecx,DWORD PTR [ebp+0x8]
100561fd:	mov    DWORD PTR [eax+0x4],ecx
10056200:	mov    edx,DWORD PTR [ebp-0x4]
10056203:	mov    eax,DWORD PTR [ebp+0xc]
10056206:	mov    DWORD PTR [edx+0x8],eax
10056209:	mov    ecx,DWORD PTR [ebp-0x4]
1005620c:	mov    DWORD PTR [ecx+0xc],0x0
10056213:	call   DWORD PTR ds:0x10065108
10056219:	mov    edx,DWORD PTR [ebp-0x4]
1005621c:	mov    DWORD PTR [edx],eax
1005621e:	mov    eax,DWORD PTR [ebp-0x4]
10056221:	cmp    DWORD PTR [eax+0x4],0x0
10056225:	je     0x10056261
10056227:	mov    ecx,DWORD PTR [ebp-0x4]
1005622a:	cmp    DWORD PTR [ecx+0x8],0x0
1005622e:	je     0x10056261
10056230:	mov    edx,DWORD PTR [ebp+0xc]
10056233:	push   edx
10056234:	mov    eax,DWORD PTR [ebp+0x8]
10056237:	push   eax
10056238:	mov    ecx,DWORD PTR [ebp-0x4]
1005623b:	mov    edx,DWORD PTR [ecx]
1005623d:	push   edx
1005623e:	call   DWORD PTR ds:0x10065158
10056244:	test   eax,eax
10056246:	jne    0x1005624a
10056248:	jmp    0x10056261
1005624a:	mov    eax,DWORD PTR [ebp-0x4]
1005624d:	add    eax,0xc
10056250:	push   eax
10056251:	push   0x40
10056253:	mov    ecx,DWORD PTR [ebp+0xc]
10056256:	push   ecx
10056257:	mov    edx,DWORD PTR [ebp+0x8]
1005625a:	push   edx
1005625b:	call   DWORD PTR ds:0x10065190
10056261:	mov    eax,DWORD PTR [ebp-0x4]
10056264:	mov    esp,ebp
10056266:	pop    ebp
10056267:	ret    0x8
1005626a:	int3   
1005626b:	int3   
1005626c:	int3   
1005626d:	int3   
1005626e:	int3   
1005626f:	int3   
10056270:	push   ebp
10056271:	mov    ebp,esp
10056273:	sub    esp,0x8
10056276:	mov    DWORD PTR [ebp-0x8],ecx
10056279:	mov    eax,DWORD PTR [ebp-0x8]
1005627c:	cmp    DWORD PTR [eax+0xc],0x0
10056280:	je     0x100562da
10056282:	mov    ecx,DWORD PTR [ebp-0x8]
10056285:	cmp    DWORD PTR [ecx+0x4],0x0
10056289:	je     0x100562da
1005628b:	mov    edx,DWORD PTR [ebp-0x8]
1005628e:	cmp    DWORD PTR [edx+0x8],0x0
10056292:	je     0x100562da
10056294:	mov    DWORD PTR [ebp-0x4],0x0
1005629b:	mov    eax,DWORD PTR [ebp-0x8]
1005629e:	mov    ecx,DWORD PTR [eax+0x8]
100562a1:	push   ecx
100562a2:	mov    edx,DWORD PTR [ebp-0x8]
100562a5:	mov    eax,DWORD PTR [edx+0x4]
100562a8:	push   eax
100562a9:	mov    ecx,DWORD PTR [ebp-0x8]
100562ac:	mov    edx,DWORD PTR [ecx]
100562ae:	push   edx
100562af:	call   DWORD PTR ds:0x10065158
100562b5:	test   eax,eax
100562b7:	jne    0x100562bb
100562b9:	jmp    0x100562da
100562bb:	lea    eax,[ebp-0x4]
100562be:	push   eax
100562bf:	mov    ecx,DWORD PTR [ebp-0x8]
100562c2:	mov    edx,DWORD PTR [ecx+0xc]
100562c5:	push   edx
100562c6:	mov    eax,DWORD PTR [ebp-0x8]
100562c9:	mov    ecx,DWORD PTR [eax+0x8]
100562cc:	push   ecx
100562cd:	mov    edx,DWORD PTR [ebp-0x8]
100562d0:	mov    eax,DWORD PTR [edx+0x4]
100562d3:	push   eax
100562d4:	call   DWORD PTR ds:0x10065190
100562da:	mov    esp,ebp
100562dc:	pop    ebp
100562dd:	ret    
100562de:	int3   
100562df:	int3   
100562e0:	push   ebp
100562e1:	mov    ebp,esp
100562e3:	sub    esp,0xc
100562e6:	push   0x20
100562e8:	call   0x1004239e
100562ed:	add    esp,0x4
100562f0:	mov    DWORD PTR [ebp-0x8],eax
100562f3:	mov    eax,DWORD PTR [ebp-0x8]
100562f6:	mov    DWORD PTR [ebp-0x4],eax
100562f9:	cmp    DWORD PTR [ebp-0x4],0x0
100562fd:	jne    0x10056303
100562ff:	xor    eax,eax
10056301:	jmp    0x10056350
10056303:	push   0x0
10056305:	mov    ecx,DWORD PTR [ebp+0x8]
10056308:	push   ecx
10056309:	call   0x100568d0
1005630e:	mov    DWORD PTR [ebp+0x8],eax
10056311:	push   0x0
10056313:	mov    edx,DWORD PTR [ebp+0xc]
10056316:	push   edx
10056317:	call   0x100568d0
1005631c:	mov    DWORD PTR [ebp+0xc],eax
1005631f:	mov    eax,DWORD PTR [ebp+0xc]
10056322:	push   eax
10056323:	mov    ecx,DWORD PTR [ebp-0x4]
10056326:	push   ecx
10056327:	mov    edx,DWORD PTR [ebp+0x8]
1005632a:	push   edx
1005632b:	call   0x10056360
10056330:	add    esp,0xc
10056333:	test   eax,eax
10056335:	je     0x1005633c
10056337:	mov    eax,DWORD PTR [ebp-0x4]
1005633a:	jmp    0x10056350
1005633c:	mov    eax,DWORD PTR [ebp-0x4]
1005633f:	mov    DWORD PTR [ebp-0xc],eax
10056342:	mov    ecx,DWORD PTR [ebp-0xc]
10056345:	push   ecx
10056346:	call   0x10041d92
1005634b:	add    esp,0x4
1005634e:	xor    eax,eax
10056350:	mov    esp,ebp
10056352:	pop    ebp
10056353:	ret    0x8
10056356:	int3   
10056357:	int3   
10056358:	int3   
10056359:	int3   
1005635a:	int3   
1005635b:	int3   
1005635c:	int3   
1005635d:	int3   
1005635e:	int3   
1005635f:	int3   
10056360:	push   ebp
10056361:	mov    ebp,esp
10056363:	sub    esp,0x54
10056366:	mov    eax,DWORD PTR [ebp+0x8]
10056369:	mov    DWORD PTR [ebp-0x18],eax
1005636c:	mov    DWORD PTR [ebp-0x30],0x0
10056373:	cmp    DWORD PTR [ebp-0x30],0x5
10056377:	jge    0x10056446
1005637d:	mov    ecx,DWORD PTR [ebp-0x18]
10056380:	mov    DWORD PTR [ebp-0x38],ecx
10056383:	mov    edx,DWORD PTR [ebp-0x38]
10056386:	mov    al,BYTE PTR [edx]
10056388:	mov    BYTE PTR [ebp-0x31],al
1005638b:	push   0x0
1005638d:	mov    ecx,DWORD PTR [ebp-0x18]
10056390:	push   ecx
10056391:	push   0x0
10056393:	call   0x10056ae0
10056398:	mov    DWORD PTR [ebp-0x18],eax
1005639b:	mov    edx,DWORD PTR [ebp-0x18]
1005639e:	sub    edx,DWORD PTR [ebp+0x8]
100563a1:	mov    DWORD PTR [ebp-0x30],edx
100563a4:	movzx  eax,BYTE PTR [ebp-0x31]
100563a8:	cmp    eax,0xe9
100563ad:	je     0x100563d2
100563af:	movzx  ecx,BYTE PTR [ebp-0x31]
100563b3:	cmp    ecx,0xe0
100563b9:	je     0x100563d2
100563bb:	movzx  edx,BYTE PTR [ebp-0x31]
100563bf:	cmp    edx,0xc2
100563c5:	je     0x100563d2
100563c7:	movzx  eax,BYTE PTR [ebp-0x31]
100563cb:	cmp    eax,0xc3
100563d0:	jne    0x100563d4
100563d2:	jmp    0x10056446
100563d4:	movzx  ecx,BYTE PTR [ebp-0x31]
100563d8:	cmp    ecx,0xff
100563de:	jne    0x100563ee
100563e0:	mov    edx,DWORD PTR [ebp-0x38]
100563e3:	movzx  eax,BYTE PTR [edx+0x1]
100563e7:	cmp    eax,0x25
100563ea:	jne    0x100563ee
100563ec:	jmp    0x10056446
100563ee:	movzx  ecx,BYTE PTR [ebp-0x31]
100563f2:	cmp    ecx,0x26
100563f5:	je     0x10056424
100563f7:	movzx  edx,BYTE PTR [ebp-0x31]
100563fb:	cmp    edx,0x2e
100563fe:	je     0x10056424
10056400:	movzx  eax,BYTE PTR [ebp-0x31]
10056404:	cmp    eax,0x36
10056407:	je     0x10056424
10056409:	movzx  ecx,BYTE PTR [ebp-0x31]
1005640d:	cmp    ecx,0x3e
10056410:	je     0x10056424
10056412:	movzx  edx,BYTE PTR [ebp-0x31]
10056416:	cmp    edx,0x64
10056419:	je     0x10056424
1005641b:	movzx  eax,BYTE PTR [ebp-0x31]
1005641f:	cmp    eax,0x65
10056422:	jne    0x10056441
10056424:	mov    ecx,DWORD PTR [ebp-0x38]
10056427:	movzx  edx,BYTE PTR [ecx+0x1]
1005642b:	cmp    edx,0xff
10056431:	jne    0x10056441
10056433:	mov    eax,DWORD PTR [ebp-0x38]
10056436:	movzx  ecx,BYTE PTR [eax+0x2]
1005643a:	cmp    ecx,0x25
1005643d:	jne    0x10056441
1005643f:	jmp    0x10056446
10056441:	jmp    0x10056373
10056446:	cmp    DWORD PTR [ebp-0x30],0x5
1005644a:	jge    0x10056453
1005644c:	xor    eax,eax
1005644e:	jmp    0x100565ca
10056453:	cmp    DWORD PTR [ebp-0x30],0x1a
10056457:	jle    0x10056460
10056459:	xor    eax,eax
1005645b:	jmp    0x100565ca
10056460:	push   0x20
10056462:	mov    edx,DWORD PTR [ebp+0xc]
10056465:	push   edx
10056466:	lea    ecx,[ebp-0x28]
10056469:	call   0x100561f0
1005646e:	mov    eax,DWORD PTR [ebp-0x30]
10056471:	push   eax
10056472:	mov    ecx,DWORD PTR [ebp+0x8]
10056475:	push   ecx
10056476:	lea    ecx,[ebp-0x14]
10056479:	call   0x100561f0
1005647e:	push   0x40
10056480:	lea    ecx,[ebp-0x28]
10056483:	call   0x100565d0
10056488:	test   eax,eax
1005648a:	jne    0x100564ab
1005648c:	mov    DWORD PTR [ebp-0x40],0x0
10056493:	lea    ecx,[ebp-0x14]
10056496:	call   0x10056270
1005649b:	lea    ecx,[ebp-0x28]
1005649e:	call   0x10056270
100564a3:	mov    eax,DWORD PTR [ebp-0x40]
100564a6:	jmp    0x100565ca
100564ab:	lea    ecx,[ebp-0x14]
100564ae:	call   0x10056610
100564b3:	test   eax,eax
100564b5:	jne    0x100564d6
100564b7:	mov    DWORD PTR [ebp-0x44],0x0
100564be:	lea    ecx,[ebp-0x14]
100564c1:	call   0x10056270
100564c6:	lea    ecx,[ebp-0x28]
100564c9:	call   0x10056270
100564ce:	mov    eax,DWORD PTR [ebp-0x44]
100564d1:	jmp    0x100565ca
100564d6:	mov    edx,DWORD PTR [ebp+0x8]
100564d9:	mov    DWORD PTR [ebp-0x4],edx
100564dc:	mov    eax,DWORD PTR [ebp+0xc]
100564df:	mov    DWORD PTR [ebp-0x2c],eax
100564e2:	mov    DWORD PTR [ebp-0x3c],0x0
100564e9:	mov    ecx,DWORD PTR [ebp-0x3c]
100564ec:	cmp    ecx,DWORD PTR [ebp-0x30]
100564ef:	jge    0x10056517
100564f1:	push   0x0
100564f3:	mov    edx,DWORD PTR [ebp-0x4]
100564f6:	push   edx
100564f7:	mov    eax,DWORD PTR [ebp-0x2c]
100564fa:	push   eax
100564fb:	call   0x10056ae0
10056500:	mov    DWORD PTR [ebp-0x4],eax
10056503:	mov    ecx,DWORD PTR [ebp-0x4]
10056506:	sub    ecx,DWORD PTR [ebp+0x8]
10056509:	mov    DWORD PTR [ebp-0x3c],ecx
1005650c:	mov    edx,DWORD PTR [ebp+0xc]
1005650f:	add    edx,DWORD PTR [ebp-0x3c]
10056512:	mov    DWORD PTR [ebp-0x2c],edx
10056515:	jmp    0x100564e9
10056517:	mov    eax,DWORD PTR [ebp-0x3c]
1005651a:	cmp    eax,DWORD PTR [ebp-0x30]
1005651d:	je     0x1005653e
1005651f:	mov    DWORD PTR [ebp-0x48],0x0
10056526:	lea    ecx,[ebp-0x14]
10056529:	call   0x10056270
1005652e:	lea    ecx,[ebp-0x28]
10056531:	call   0x10056270
10056536:	mov    eax,DWORD PTR [ebp-0x48]
10056539:	jmp    0x100565ca
1005653e:	push   0x5
10056540:	mov    ecx,DWORD PTR [ebp+0x8]
10056543:	add    ecx,DWORD PTR [ebp-0x30]
10056546:	push   ecx
10056547:	mov    edx,DWORD PTR [ebp-0x2c]
1005654a:	push   edx
1005654b:	call   0x10056650
10056550:	add    esp,0xc
10056553:	test   eax,eax
10056555:	jne    0x10056573
10056557:	mov    DWORD PTR [ebp-0x4c],0x0
1005655e:	lea    ecx,[ebp-0x14]
10056561:	call   0x10056270
10056566:	lea    ecx,[ebp-0x28]
10056569:	call   0x10056270
1005656e:	mov    eax,DWORD PTR [ebp-0x4c]
10056571:	jmp    0x100565ca
10056573:	mov    eax,DWORD PTR [ebp+0xc]
10056576:	mov    cl,BYTE PTR [ebp-0x30]
10056579:	mov    BYTE PTR [eax+0x1f],cl
1005657c:	mov    edx,DWORD PTR [ebp-0x30]
1005657f:	push   edx
10056580:	mov    eax,DWORD PTR [ebp+0x10]
10056583:	push   eax
10056584:	mov    ecx,DWORD PTR [ebp+0x8]
10056587:	push   ecx
10056588:	call   0x10056650
1005658d:	add    esp,0xc
10056590:	test   eax,eax
10056592:	jne    0x100565b0
10056594:	mov    DWORD PTR [ebp-0x50],0x0
1005659b:	lea    ecx,[ebp-0x14]
1005659e:	call   0x10056270
100565a3:	lea    ecx,[ebp-0x28]
100565a6:	call   0x10056270
100565ab:	mov    eax,DWORD PTR [ebp-0x50]
100565ae:	jmp    0x100565ca
100565b0:	mov    DWORD PTR [ebp-0x54],0x1
100565b7:	lea    ecx,[ebp-0x14]
100565ba:	call   0x10056270
100565bf:	lea    ecx,[ebp-0x28]
100565c2:	call   0x10056270
100565c7:	mov    eax,DWORD PTR [ebp-0x54]
100565ca:	mov    esp,ebp
100565cc:	pop    ebp
100565cd:	ret    
100565ce:	int3   
100565cf:	int3   
100565d0:	push   ebp
100565d1:	mov    ebp,esp
100565d3:	push   ecx
100565d4:	mov    DWORD PTR [ebp-0x4],ecx
100565d7:	mov    eax,DWORD PTR [ebp-0x4]
100565da:	cmp    DWORD PTR [eax+0xc],0x0
100565de:	je     0x10056602
100565e0:	mov    ecx,DWORD PTR [ebp-0x4]
100565e3:	cmp    DWORD PTR [ecx+0x4],0x0
100565e7:	je     0x10056602
100565e9:	mov    edx,DWORD PTR [ebp-0x4]
100565ec:	cmp    DWORD PTR [edx+0x8],0x0
100565f0:	je     0x10056602
100565f2:	mov    eax,DWORD PTR [ebp-0x4]
100565f5:	mov    ecx,DWORD PTR [ebp+0x8]
100565f8:	mov    DWORD PTR [eax+0xc],ecx
100565fb:	mov    eax,0x1
10056600:	jmp    0x10056604
10056602:	xor    eax,eax
10056604:	mov    esp,ebp
10056606:	pop    ebp
10056607:	ret    0x4
1005660a:	int3   
1005660b:	int3   
1005660c:	int3   
1005660d:	int3   
1005660e:	int3   
1005660f:	int3   
10056610:	push   ebp
10056611:	mov    ebp,esp
10056613:	sub    esp,0x8
10056616:	mov    DWORD PTR [ebp-0x4],ecx
10056619:	mov    eax,DWORD PTR [ebp-0x4]
1005661c:	cmp    DWORD PTR [eax+0x4],0x0
10056620:	je     0x1005663d
10056622:	mov    ecx,DWORD PTR [ebp-0x4]
10056625:	cmp    DWORD PTR [ecx+0x8],0x0
10056629:	je     0x1005663d
1005662b:	mov    edx,DWORD PTR [ebp-0x4]
1005662e:	cmp    DWORD PTR [edx+0xc],0x0
10056632:	je     0x1005663d
10056634:	mov    DWORD PTR [ebp-0x8],0x1
1005663b:	jmp    0x10056644
1005663d:	mov    DWORD PTR [ebp-0x8],0x0
10056644:	mov    eax,DWORD PTR [ebp-0x8]
10056647:	mov    esp,ebp
10056649:	pop    ebp
1005664a:	ret    
1005664b:	int3   
1005664c:	int3   
1005664d:	int3   
1005664e:	int3   
1005664f:	int3   
10056650:	push   ebp
10056651:	mov    ebp,esp
10056653:	cmp    DWORD PTR [ebp+0x10],0x5
10056657:	jge    0x1005665d
10056659:	xor    eax,eax
1005665b:	jmp    0x100566a2
1005665d:	push   0x0
1005665f:	mov    eax,DWORD PTR [ebp+0xc]
10056662:	push   eax
10056663:	mov    ecx,DWORD PTR [ebp+0x8]
10056666:	push   ecx
10056667:	call   0x100566b0
1005666c:	add    esp,0xc
1005666f:	mov    DWORD PTR [ebp+0x8],eax
10056672:	mov    edx,DWORD PTR [ebp+0x10]
10056675:	sub    edx,0x5
10056678:	mov    DWORD PTR [ebp+0x10],edx
1005667b:	jmp    0x10056686
1005667d:	mov    eax,DWORD PTR [ebp+0x10]
10056680:	sub    eax,0x1
10056683:	mov    DWORD PTR [ebp+0x10],eax
10056686:	cmp    DWORD PTR [ebp+0x10],0x0
1005668a:	jle    0x1005669d
1005668c:	mov    ecx,DWORD PTR [ebp+0x8]
1005668f:	push   ecx
10056690:	call   0x100566f0
10056695:	add    esp,0x4
10056698:	mov    DWORD PTR [ebp+0x8],eax
1005669b:	jmp    0x1005667d
1005669d:	mov    eax,0x1
100566a2:	pop    ebp
100566a3:	ret    
100566a4:	int3   
100566a5:	int3   
100566a6:	int3   
100566a7:	int3   
100566a8:	int3   
100566a9:	int3   
100566aa:	int3   
100566ab:	int3   
100566ac:	int3   
100566ad:	int3   
100566ae:	int3   
100566af:	int3   
100566b0:	push   ebp
100566b1:	mov    ebp,esp
100566b3:	cmp    DWORD PTR [ebp+0x10],0x0
100566b7:	jne    0x100566bf
100566b9:	mov    eax,DWORD PTR [ebp+0x8]
100566bc:	mov    DWORD PTR [ebp+0x10],eax
100566bf:	mov    ecx,DWORD PTR [ebp+0x8]
100566c2:	mov    BYTE PTR [ecx],0xe9
100566c5:	mov    edx,DWORD PTR [ebp+0x8]
100566c8:	add    edx,0x1
100566cb:	mov    DWORD PTR [ebp+0x8],edx
100566ce:	mov    eax,DWORD PTR [ebp+0x10]
100566d1:	add    eax,0x5
100566d4:	mov    ecx,DWORD PTR [ebp+0xc]
100566d7:	sub    ecx,eax
100566d9:	mov    edx,DWORD PTR [ebp+0x8]
100566dc:	mov    DWORD PTR [edx],ecx
100566de:	mov    eax,DWORD PTR [ebp+0x8]
100566e1:	add    eax,0x4
100566e4:	mov    DWORD PTR [ebp+0x8],eax
100566e7:	mov    eax,DWORD PTR [ebp+0x8]
100566ea:	pop    ebp
100566eb:	ret    
100566ec:	int3   
100566ed:	int3   
100566ee:	int3   
100566ef:	int3   
100566f0:	push   ebp
100566f1:	mov    ebp,esp
100566f3:	mov    eax,DWORD PTR [ebp+0x8]
100566f6:	mov    BYTE PTR [eax],0xcc
100566f9:	mov    ecx,DWORD PTR [ebp+0x8]
100566fc:	add    ecx,0x1
100566ff:	mov    DWORD PTR [ebp+0x8],ecx
10056702:	mov    eax,DWORD PTR [ebp+0x8]
10056705:	pop    ebp
10056706:	ret    
10056707:	int3   
10056708:	int3   
10056709:	int3   
1005670a:	int3   
1005670b:	int3   
1005670c:	int3   
1005670d:	int3   
1005670e:	int3   
1005670f:	int3   
10056710:	push   ebp
10056711:	mov    ebp,esp
10056713:	sub    esp,0xc
10056716:	cmp    DWORD PTR ds:0x1007faa4,0x0
1005671d:	je     0x10056729
1005671f:	mov    eax,ds:0x1007faa4
10056724:	jmp    0x100568c6
10056729:	mov    DWORD PTR ds:0x1007faa4,0x1007fa7c
10056733:	push   0x28
10056735:	push   0x0
10056737:	push   0x1007fa7c
1005673c:	call   0x10044950
10056741:	add    esp,0xc
10056744:	call   DWORD PTR ds:0x10065108
1005674a:	mov    ds:0x1007fa7c,eax
1005674f:	push   0x1007dfec
10056754:	call   DWORD PTR ds:0x10065220
1005675a:	mov    ds:0x1007fa80,eax
1005675f:	cmp    DWORD PTR ds:0x1007fa80,0x0
10056766:	jne    0x1005676f
10056768:	xor    eax,eax
1005676a:	jmp    0x100568c6
1005676f:	push   0x1007dffc
10056774:	mov    eax,ds:0x1007fa80
10056779:	push   eax
1005677a:	call   DWORD PTR ds:0x1006512c
10056780:	mov    ds:0x1007fa84,eax
10056785:	push   0x1007e014
1005678a:	mov    ecx,DWORD PTR ds:0x1007fa80
10056790:	push   ecx
10056791:	call   DWORD PTR ds:0x1006512c
10056797:	mov    ds:0x1007fa88,eax
1005679c:	push   0x1007e024
100567a1:	mov    edx,DWORD PTR ds:0x1007fa80
100567a7:	push   edx
100567a8:	call   DWORD PTR ds:0x1006512c
100567ae:	mov    ds:0x1007fa8c,eax
100567b3:	push   0x1007e034
100567b8:	mov    eax,ds:0x1007fa80
100567bd:	push   eax
100567be:	call   DWORD PTR ds:0x1006512c
100567c4:	mov    ds:0x1007fa90,eax
100567c9:	push   0x1007e044
100567ce:	mov    ecx,DWORD PTR ds:0x1007fa80
100567d4:	push   ecx
100567d5:	call   DWORD PTR ds:0x1006512c
100567db:	mov    ds:0x1007fa94,eax
100567e0:	push   0x1007e054
100567e5:	mov    edx,DWORD PTR ds:0x1007fa80
100567eb:	push   edx
100567ec:	call   DWORD PTR ds:0x1006512c
100567f2:	mov    ds:0x1007fa98,eax
100567f7:	push   0x1007e068
100567fc:	mov    eax,ds:0x1007fa80
10056801:	push   eax
10056802:	call   DWORD PTR ds:0x1006512c
10056808:	mov    ds:0x1007fa9c,eax
1005680d:	push   0x1007e07c
10056812:	mov    ecx,DWORD PTR ds:0x1007fa80
10056818:	push   ecx
10056819:	call   DWORD PTR ds:0x1006512c
1005681f:	mov    ds:0x1007faa0,eax
10056824:	push   0x8
10056826:	push   0x0
10056828:	lea    edx,[ebp-0x8]
1005682b:	push   edx
1005682c:	call   0x10044950
10056831:	add    esp,0xc
10056834:	mov    WORD PTR [ebp-0x8],0x9
1005683a:	cmp    DWORD PTR ds:0x1007fa84,0x0
10056841:	je     0x1005684d
10056843:	lea    eax,[ebp-0x8]
10056846:	push   eax
10056847:	call   DWORD PTR ds:0x1007fa84
1005684d:	cmp    DWORD PTR ds:0x1007fa84,0x0
10056854:	je     0x1005685f
10056856:	movzx  ecx,WORD PTR [ebp-0x8]
1005685a:	cmp    ecx,0x9
1005685d:	jge    0x1005687a
1005685f:	mov    edx,DWORD PTR ds:0x1007fa80
10056865:	push   edx
10056866:	call   DWORD PTR ds:0x100650fc
1005686c:	mov    DWORD PTR ds:0x1007fa80,0x0
10056876:	xor    eax,eax
10056878:	jmp    0x100568c6
1005687a:	cmp    DWORD PTR ds:0x1007fa88,0x0
10056881:	je     0x10056893
10056883:	push   0x0
10056885:	push   0x0
10056887:	mov    eax,ds:0x1007fa7c
1005688c:	push   eax
1005688d:	call   DWORD PTR ds:0x1007fa88
10056893:	cmp    DWORD PTR ds:0x1007fa90,0x0
1005689a:	je     0x100568c1
1005689c:	cmp    DWORD PTR ds:0x1007fa8c,0x0
100568a3:	je     0x100568c1
100568a5:	call   DWORD PTR ds:0x1007fa90
100568ab:	mov    DWORD PTR [ebp-0xc],eax
100568ae:	mov    ecx,DWORD PTR [ebp-0xc]
100568b1:	and    ecx,0x7
100568b4:	mov    DWORD PTR [ebp-0xc],ecx
100568b7:	mov    edx,DWORD PTR [ebp-0xc]
100568ba:	push   edx
100568bb:	call   DWORD PTR ds:0x1007fa8c
100568c1:	mov    eax,ds:0x1007faa4
100568c6:	mov    esp,ebp
100568c8:	pop    ebp
100568c9:	ret    
100568ca:	int3   
100568cb:	int3   
100568cc:	int3   
100568cd:	int3   
100568ce:	int3   
100568cf:	int3   
100568d0:	push   ebp
100568d1:	mov    ebp,esp
100568d3:	cmp    DWORD PTR [ebp+0x8],0x0
100568d7:	jne    0x100568dd
100568d9:	xor    eax,eax
100568db:	jmp    0x10056930
100568dd:	mov    eax,DWORD PTR [ebp+0x8]
100568e0:	movzx  ecx,BYTE PTR [eax]
100568e3:	cmp    ecx,0xff
100568e9:	jne    0x1005690a
100568eb:	mov    edx,DWORD PTR [ebp+0x8]
100568ee:	movzx  eax,BYTE PTR [edx+0x1]
100568f2:	cmp    eax,0x25
100568f5:	jne    0x1005690a
100568f7:	mov    ecx,DWORD PTR [ebp+0x8]
100568fa:	mov    edx,DWORD PTR [ecx+0x2]
100568fd:	mov    DWORD PTR [ebp+0x8],edx
10056900:	mov    eax,DWORD PTR [ebp+0x8]
10056903:	mov    ecx,DWORD PTR [eax]
10056905:	mov    DWORD PTR [ebp+0x8],ecx
10056908:	jmp    0x1005692d
1005690a:	mov    edx,DWORD PTR [ebp+0x8]
1005690d:	movzx  eax,BYTE PTR [edx]
10056910:	cmp    eax,0xe9
10056915:	jne    0x1005692d
10056917:	cmp    DWORD PTR [ebp+0xc],0x0
1005691b:	je     0x1005692d
1005691d:	mov    ecx,DWORD PTR [ebp+0x8]
10056920:	mov    edx,DWORD PTR [ecx+0x1]
10056923:	mov    eax,DWORD PTR [ebp+0x8]
10056926:	lea    ecx,[eax+edx*1+0x5]
1005692a:	mov    DWORD PTR [ebp+0x8],ecx
1005692d:	mov    eax,DWORD PTR [ebp+0x8]
10056930:	pop    ebp
10056931:	ret    0x8
10056934:	int3   
10056935:	int3   
10056936:	int3   
10056937:	int3   
10056938:	int3   
10056939:	int3   
1005693a:	int3   
1005693b:	int3   
1005693c:	int3   
1005693d:	int3   
1005693e:	int3   
1005693f:	int3   
10056940:	push   ebp
10056941:	mov    ebp,esp
10056943:	sub    esp,0x668
10056949:	mov    eax,DWORD PTR [ebp+0x8]
1005694c:	push   eax
1005694d:	call   DWORD PTR ds:0x10065220
10056953:	mov    DWORD PTR [ebp-0x668],eax
10056959:	cmp    DWORD PTR [ebp-0x668],0x0
10056960:	jne    0x10056969
10056962:	xor    eax,eax
10056964:	jmp    0x10056acc
10056969:	mov    ecx,DWORD PTR [ebp+0xc]
1005696c:	push   ecx
1005696d:	mov    edx,DWORD PTR [ebp-0x668]
10056973:	push   edx
10056974:	call   DWORD PTR ds:0x1006512c
1005697a:	mov    DWORD PTR [ebp-0x664],eax
10056980:	cmp    DWORD PTR [ebp-0x664],0x0
10056987:	je     0x10056994
10056989:	mov    eax,DWORD PTR [ebp-0x664]
1005698f:	jmp    0x10056acc
10056994:	call   0x10056710
10056999:	mov    DWORD PTR [ebp-0x21c],eax
1005699f:	cmp    DWORD PTR [ebp-0x21c],0x0
100569a6:	je     0x100569cc
100569a8:	mov    eax,DWORD PTR [ebp-0x21c]
100569ae:	cmp    DWORD PTR [eax+0x18],0x0
100569b2:	je     0x100569cc
100569b4:	mov    ecx,DWORD PTR [ebp-0x21c]
100569ba:	cmp    DWORD PTR [ecx+0x1c],0x0
100569be:	je     0x100569cc
100569c0:	mov    edx,DWORD PTR [ebp-0x21c]
100569c6:	cmp    DWORD PTR [edx+0x20],0x0
100569ca:	jne    0x100569d3
100569cc:	xor    eax,eax
100569ce:	jmp    0x10056acc
100569d3:	push   0x0
100569d5:	mov    eax,DWORD PTR [ebp-0x668]
100569db:	push   eax
100569dc:	push   0x0
100569de:	mov    ecx,DWORD PTR [ebp+0x8]
100569e1:	push   ecx
100569e2:	push   0x0
100569e4:	mov    edx,DWORD PTR [ebp-0x21c]
100569ea:	mov    eax,DWORD PTR [edx]
100569ec:	push   eax
100569ed:	mov    ecx,DWORD PTR [ebp-0x21c]
100569f3:	call   DWORD PTR [ecx+0x18]
100569f6:	push   0x23c
100569fb:	push   0x0
100569fd:	lea    edx,[ebp-0x460]
10056a03:	push   edx
10056a04:	call   0x10044950
10056a09:	add    esp,0xc
10056a0c:	lea    eax,[ebp-0x460]
10056a12:	push   eax
10056a13:	mov    ecx,DWORD PTR [ebp-0x668]
10056a19:	push   ecx
10056a1a:	mov    edx,DWORD PTR [ebp-0x21c]
10056a20:	mov    eax,DWORD PTR [edx]
10056a22:	push   eax
10056a23:	mov    ecx,DWORD PTR [ebp-0x21c]
10056a29:	call   DWORD PTR [ecx+0x1c]
10056a2c:	test   eax,eax
10056a2e:	jne    0x10056a37
10056a30:	xor    eax,eax
10056a32:	jmp    0x10056acc
10056a37:	lea    edx,[ebp-0x444]
10056a3d:	push   edx
10056a3e:	lea    eax,[ebp-0x660]
10056a44:	push   eax
10056a45:	call   0x10045190
10056a4a:	add    esp,0x8
10056a4d:	push   0x1007e088
10056a52:	lea    ecx,[ebp-0x660]
10056a58:	push   ecx
10056a59:	call   0x100451a0
10056a5e:	add    esp,0x8
10056a61:	mov    edx,DWORD PTR [ebp+0xc]
10056a64:	push   edx
10056a65:	lea    eax,[ebp-0x660]
10056a6b:	push   eax
10056a6c:	call   0x100451a0
10056a71:	add    esp,0x8
10056a74:	push   0x218
10056a79:	push   0x0
10056a7b:	lea    ecx,[ebp-0x218]
10056a81:	push   ecx
10056a82:	call   0x10044950
10056a87:	add    esp,0xc
10056a8a:	mov    DWORD PTR [ebp-0x218],0x18
10056a94:	mov    DWORD PTR [ebp-0x208],0x80
10056a9e:	lea    edx,[ebp-0x218]
10056aa4:	push   edx
10056aa5:	lea    eax,[ebp-0x660]
10056aab:	push   eax
10056aac:	mov    ecx,DWORD PTR [ebp-0x21c]
10056ab2:	mov    edx,DWORD PTR [ecx]
10056ab4:	push   edx
10056ab5:	mov    eax,DWORD PTR [ebp-0x21c]
10056abb:	call   DWORD PTR [eax+0x20]
10056abe:	test   eax,eax
10056ac0:	jne    0x10056ac6
10056ac2:	xor    eax,eax
10056ac4:	jmp    0x10056acc
10056ac6:	mov    eax,DWORD PTR [ebp-0x214]
10056acc:	mov    esp,ebp
10056ace:	pop    ebp
10056acf:	ret    0x8
10056ad2:	int3   
10056ad3:	int3   
10056ad4:	int3   
10056ad5:	int3   
10056ad6:	int3   
10056ad7:	int3   
10056ad8:	int3   
10056ad9:	int3   
10056ada:	int3   
10056adb:	int3   
10056adc:	int3   
10056add:	int3   
10056ade:	int3   
10056adf:	int3   
10056ae0:	push   ebp
10056ae1:	mov    ebp,esp
10056ae3:	sub    esp,0x58
10056ae6:	push   0x0
10056ae8:	mov    eax,DWORD PTR [ebp+0x10]
10056aeb:	push   eax
10056aec:	lea    ecx,[ebp-0x58]
10056aef:	call   0x10056b10
10056af4:	mov    ecx,DWORD PTR [ebp+0xc]
10056af7:	push   ecx
10056af8:	mov    edx,DWORD PTR [ebp+0x8]
10056afb:	push   edx
10056afc:	lea    ecx,[ebp-0x58]
10056aff:	call   0x10056c10
10056b04:	mov    esp,ebp
10056b06:	pop    ebp
10056b07:	ret    0xc
10056b0a:	int3   
10056b0b:	int3   
10056b0c:	int3   
10056b0d:	int3   
10056b0e:	int3   
10056b0f:	int3   
10056b10:	push   ebp
10056b11:	mov    ebp,esp
10056b13:	sub    esp,0xc
10056b16:	mov    DWORD PTR [ebp-0x4],ecx
10056b19:	mov    ecx,DWORD PTR [ebp-0x4]
10056b1c:	call   0x10056bb0
10056b21:	mov    ecx,DWORD PTR [ebp-0x4]
10056b24:	call   0x10056bf0
10056b29:	cmp    DWORD PTR [ebp+0x8],0x0
10056b2d:	je     0x10056b37
10056b2f:	mov    eax,DWORD PTR [ebp+0x8]
10056b32:	mov    DWORD PTR [ebp-0x8],eax
10056b35:	jmp    0x10056b40
10056b37:	mov    ecx,DWORD PTR [ebp-0x4]
10056b3a:	add    ecx,0x14
10056b3d:	mov    DWORD PTR [ebp-0x8],ecx
10056b40:	mov    edx,DWORD PTR [ebp-0x4]
10056b43:	mov    eax,DWORD PTR [ebp-0x8]
10056b46:	mov    DWORD PTR [edx+0x8],eax
10056b49:	cmp    DWORD PTR [ebp+0xc],0x0
10056b4d:	je     0x10056b57
10056b4f:	mov    ecx,DWORD PTR [ebp+0xc]
10056b52:	mov    DWORD PTR [ebp-0xc],ecx
10056b55:	jmp    0x10056b60
10056b57:	mov    edx,DWORD PTR [ebp-0x4]
10056b5a:	add    edx,0x10
10056b5d:	mov    DWORD PTR [ebp-0xc],edx
10056b60:	mov    eax,DWORD PTR [ebp-0x4]
10056b63:	mov    ecx,DWORD PTR [ebp-0xc]
10056b66:	mov    DWORD PTR [eax+0xc],ecx
10056b69:	mov    edx,DWORD PTR [ebp-0x4]
10056b6c:	mov    eax,DWORD PTR [edx+0x8]
10056b6f:	mov    DWORD PTR [eax],0x0
10056b75:	mov    ecx,DWORD PTR [ebp-0x4]
10056b78:	mov    edx,DWORD PTR [ecx+0xc]
10056b7b:	mov    DWORD PTR [edx],0x0
10056b81:	mov    eax,DWORD PTR [ebp-0x4]
10056b84:	mov    esp,ebp
10056b86:	pop    ebp
10056b87:	ret    0x8
10056b8a:	int3   
10056b8b:	int3   
10056b8c:	int3   
10056b8d:	int3   
10056b8e:	int3   
10056b8f:	int3   
10056b90:	push   ebp
10056b91:	mov    ebp,esp
10056b93:	push   ecx
10056b94:	mov    DWORD PTR [ebp-0x4],ecx
10056b97:	mov    eax,DWORD PTR [ebp-0x4]
10056b9a:	mov    DWORD PTR [eax],0x1
10056ba0:	mov    esp,ebp
10056ba2:	pop    ebp
10056ba3:	ret    
10056ba4:	int3   
10056ba5:	int3   
10056ba6:	int3   
10056ba7:	int3   
10056ba8:	int3   
10056ba9:	int3   
10056baa:	int3   
10056bab:	int3   
10056bac:	int3   
10056bad:	int3   
10056bae:	int3   
10056baf:	int3   
10056bb0:	push   ebp
10056bb1:	mov    ebp,esp
10056bb3:	push   ecx
10056bb4:	mov    DWORD PTR [ebp-0x4],ecx
10056bb7:	mov    eax,DWORD PTR [ebp-0x4]
10056bba:	mov    DWORD PTR [eax],0x0
10056bc0:	mov    esp,ebp
10056bc2:	pop    ebp
10056bc3:	ret    
10056bc4:	int3   
10056bc5:	int3   
10056bc6:	int3   
10056bc7:	int3   
10056bc8:	int3   
10056bc9:	int3   
10056bca:	int3   
10056bcb:	int3   
10056bcc:	int3   
10056bcd:	int3   
10056bce:	int3   
10056bcf:	int3   
10056bd0:	push   ebp
10056bd1:	mov    ebp,esp
10056bd3:	push   ecx
10056bd4:	mov    DWORD PTR [ebp-0x4],ecx
10056bd7:	mov    eax,DWORD PTR [ebp-0x4]
10056bda:	mov    DWORD PTR [eax+0x4],0x1
10056be1:	mov    esp,ebp
10056be3:	pop    ebp
10056be4:	ret    
10056be5:	int3   
10056be6:	int3   
10056be7:	int3   
10056be8:	int3   
10056be9:	int3   
10056bea:	int3   
10056beb:	int3   
10056bec:	int3   
10056bed:	int3   
10056bee:	int3   
10056bef:	int3   
10056bf0:	push   ebp
10056bf1:	mov    ebp,esp
10056bf3:	push   ecx
10056bf4:	mov    DWORD PTR [ebp-0x4],ecx
10056bf7:	mov    eax,DWORD PTR [ebp-0x4]
10056bfa:	mov    DWORD PTR [eax+0x4],0x0
10056c01:	mov    esp,ebp
10056c03:	pop    ebp
10056c04:	ret    
10056c05:	int3   
10056c06:	int3   
10056c07:	int3   
10056c08:	int3   
10056c09:	int3   
10056c0a:	int3   
10056c0b:	int3   
10056c0c:	int3   
10056c0d:	int3   
10056c0e:	int3   
10056c0f:	int3   
10056c10:	push   ebp
10056c11:	mov    ebp,esp
10056c13:	sub    esp,0x8
10056c16:	mov    DWORD PTR [ebp-0x8],ecx
10056c19:	cmp    DWORD PTR [ebp+0x8],0x0
10056c1d:	jne    0x10056c28
10056c1f:	mov    eax,DWORD PTR [ebp-0x8]
10056c22:	add    eax,0x18
10056c25:	mov    DWORD PTR [ebp+0x8],eax
10056c28:	cmp    DWORD PTR [ebp+0xc],0x0
10056c2c:	jne    0x10056c3a
10056c2e:	push   0xd
10056c30:	call   DWORD PTR ds:0x1006515c
10056c36:	xor    eax,eax
10056c38:	jmp    0x10056c5f
10056c3a:	mov    ecx,DWORD PTR [ebp+0xc]
10056c3d:	movzx  edx,BYTE PTR [ecx]
10056c40:	lea    eax,[edx*8+0x1006a8b8]
10056c47:	mov    DWORD PTR [ebp-0x4],eax
10056c4a:	mov    ecx,DWORD PTR [ebp+0xc]
10056c4d:	push   ecx
10056c4e:	mov    edx,DWORD PTR [ebp+0x8]
10056c51:	push   edx
10056c52:	mov    eax,DWORD PTR [ebp-0x4]
10056c55:	push   eax
10056c56:	mov    edx,DWORD PTR [ebp-0x4]
10056c59:	mov    ecx,DWORD PTR [ebp-0x8]
10056c5c:	call   DWORD PTR [edx+0x4]
10056c5f:	mov    esp,ebp
10056c61:	pop    ebp
10056c62:	ret    0x8
10056c65:	int3   
10056c66:	int3   
10056c67:	int3   
10056c68:	int3   
10056c69:	int3   
10056c6a:	int3   
10056c6b:	int3   
10056c6c:	int3   
10056c6d:	int3   
10056c6e:	int3   
10056c6f:	int3   
10056c70:	push   ebp
10056c71:	mov    ebp,esp
10056c73:	sub    esp,0x1c
10056c76:	mov    DWORD PTR [ebp-0x10],ecx
10056c79:	mov    eax,DWORD PTR [ebp+0x8]
10056c7c:	mov    ecx,DWORD PTR [eax]
10056c7e:	shr    ecx,0x14
10056c81:	and    ecx,0xf
10056c84:	and    ecx,0x2
10056c87:	test   ecx,ecx
10056c89:	je     0x10056cba
10056c8b:	mov    edx,DWORD PTR [ebp-0x10]
10056c8e:	cmp    DWORD PTR [edx+0x4],0x0
10056c92:	je     0x10056ca4
10056c94:	mov    eax,DWORD PTR [ebp+0x8]
10056c97:	mov    ecx,DWORD PTR [eax]
10056c99:	shr    ecx,0xb
10056c9c:	and    ecx,0x7
10056c9f:	mov    DWORD PTR [ebp-0x14],ecx
10056ca2:	jmp    0x10056cb2
10056ca4:	mov    edx,DWORD PTR [ebp+0x8]
10056ca7:	mov    eax,DWORD PTR [edx]
10056ca9:	shr    eax,0x8
10056cac:	and    eax,0x7
10056caf:	mov    DWORD PTR [ebp-0x14],eax
10056cb2:	mov    ecx,DWORD PTR [ebp-0x14]
10056cb5:	mov    DWORD PTR [ebp-0x18],ecx
10056cb8:	jmp    0x10056ce6
10056cba:	mov    edx,DWORD PTR [ebp-0x10]
10056cbd:	cmp    DWORD PTR [edx],0x0
10056cc0:	je     0x10056cd2
10056cc2:	mov    eax,DWORD PTR [ebp+0x8]
10056cc5:	mov    ecx,DWORD PTR [eax]
10056cc7:	shr    ecx,0xb
10056cca:	and    ecx,0x7
10056ccd:	mov    DWORD PTR [ebp-0x1c],ecx
10056cd0:	jmp    0x10056ce0
10056cd2:	mov    edx,DWORD PTR [ebp+0x8]
10056cd5:	mov    eax,DWORD PTR [edx]
10056cd7:	shr    eax,0x8
10056cda:	and    eax,0x7
10056cdd:	mov    DWORD PTR [ebp-0x1c],eax
10056ce0:	mov    ecx,DWORD PTR [ebp-0x1c]
10056ce3:	mov    DWORD PTR [ebp-0x18],ecx
10056ce6:	mov    edx,DWORD PTR [ebp-0x18]
10056ce9:	mov    DWORD PTR [ebp-0x8],edx
10056cec:	mov    eax,DWORD PTR [ebp-0x8]
10056cef:	mov    DWORD PTR [ebp-0x4],eax
10056cf2:	mov    ecx,DWORD PTR [ebp+0x8]
10056cf5:	mov    edx,DWORD PTR [ecx]
10056cf7:	shr    edx,0xe
10056cfa:	and    edx,0x7
10056cfd:	test   edx,edx
10056cff:	jbe    0x10056dae
10056d05:	mov    eax,DWORD PTR [ebp+0x8]
10056d08:	mov    ecx,DWORD PTR [eax]
10056d0a:	shr    ecx,0xe
10056d0d:	and    ecx,0x7
10056d10:	mov    edx,DWORD PTR [ebp+0x10]
10056d13:	mov    al,BYTE PTR [edx+ecx*1]
10056d16:	mov    BYTE PTR [ebp-0x9],al
10056d19:	movzx  ecx,BYTE PTR [ebp-0x9]
10056d1d:	mov    dl,BYTE PTR [ecx+0x1006a7b8]
10056d23:	mov    BYTE PTR [ebp-0xa],dl
10056d26:	movzx  eax,BYTE PTR [ebp-0xa]
10056d2a:	and    eax,0x10
10056d2d:	test   eax,eax
10056d2f:	je     0x10056d9f
10056d31:	mov    ecx,DWORD PTR [ebp+0x8]
10056d34:	mov    edx,DWORD PTR [ecx]
10056d36:	shr    edx,0xe
10056d39:	and    edx,0x7
10056d3c:	mov    eax,DWORD PTR [ebp+0x10]
10056d3f:	mov    cl,BYTE PTR [eax+edx*1+0x1]
10056d43:	mov    BYTE PTR [ebp-0xb],cl
10056d46:	movzx  edx,BYTE PTR [ebp-0xb]
10056d4a:	and    edx,0x7
10056d4d:	cmp    edx,0x5
10056d50:	jne    0x10056d9f
10056d52:	movzx  eax,BYTE PTR [ebp-0x9]
10056d56:	and    eax,0xc0
10056d5b:	test   eax,eax
10056d5d:	jne    0x10056d6a
10056d5f:	mov    ecx,DWORD PTR [ebp-0x4]
10056d62:	add    ecx,0x4
10056d65:	mov    DWORD PTR [ebp-0x4],ecx
10056d68:	jmp    0x10056d9f
10056d6a:	movzx  edx,BYTE PTR [ebp-0x9]
10056d6e:	and    edx,0xc0
10056d74:	cmp    edx,0x40
10056d77:	jne    0x10056d84
10056d79:	mov    eax,DWORD PTR [ebp-0x4]
10056d7c:	add    eax,0x1
10056d7f:	mov    DWORD PTR [ebp-0x4],eax
10056d82:	jmp    0x10056d9f
10056d84:	movzx  ecx,BYTE PTR [ebp-0x9]
10056d88:	and    ecx,0xc0
10056d8e:	cmp    ecx,0x80
10056d94:	jne    0x10056d9f
10056d96:	mov    edx,DWORD PTR [ebp-0x4]
10056d99:	add    edx,0x4
10056d9c:	mov    DWORD PTR [ebp-0x4],edx
10056d9f:	movzx  eax,BYTE PTR [ebp-0xa]
10056da3:	and    eax,0xf
10056da6:	mov    ecx,DWORD PTR [ebp-0x4]
10056da9:	add    ecx,eax
10056dab:	mov    DWORD PTR [ebp-0x4],ecx
10056dae:	mov    edx,DWORD PTR [ebp-0x4]
10056db1:	push   edx
10056db2:	mov    eax,DWORD PTR [ebp+0x10]
10056db5:	push   eax
10056db6:	mov    ecx,DWORD PTR [ebp+0xc]
10056db9:	push   ecx
10056dba:	call   0x10043ed0
10056dbf:	add    esp,0xc
10056dc2:	mov    edx,DWORD PTR [ebp+0x8]
10056dc5:	mov    eax,DWORD PTR [edx]
10056dc7:	shl    eax,0xc
10056dca:	sar    eax,0x1d
10056dcd:	test   eax,eax
10056dcf:	je     0x10056df9
10056dd1:	mov    ecx,DWORD PTR [ebp+0x8]
10056dd4:	mov    edx,DWORD PTR [ecx]
10056dd6:	shl    edx,0xc
10056dd9:	sar    edx,0x1d
10056ddc:	push   edx
10056ddd:	mov    eax,DWORD PTR [ebp-0x8]
10056de0:	push   eax
10056de1:	mov    ecx,DWORD PTR [ebp+0x10]
10056de4:	push   ecx
10056de5:	mov    edx,DWORD PTR [ebp+0xc]
10056de8:	push   edx
10056de9:	mov    ecx,DWORD PTR [ebp-0x10]
10056dec:	call   0x10056ea0
10056df1:	mov    ecx,DWORD PTR [ebp-0x10]
10056df4:	mov    edx,DWORD PTR [ecx+0x8]
10056df7:	mov    DWORD PTR [edx],eax
10056df9:	mov    eax,DWORD PTR [ebp+0x8]
10056dfc:	mov    ecx,DWORD PTR [eax]
10056dfe:	shr    ecx,0x14
10056e01:	and    ecx,0xf
10056e04:	and    ecx,0x4
10056e07:	test   ecx,ecx
10056e09:	je     0x10056e1d
10056e0b:	mov    edx,DWORD PTR [ebp-0x10]
10056e0e:	mov    eax,DWORD PTR [edx+0xc]
10056e11:	mov    ecx,DWORD PTR [eax]
10056e13:	neg    ecx
10056e15:	mov    edx,DWORD PTR [ebp-0x10]
10056e18:	mov    eax,DWORD PTR [edx+0xc]
10056e1b:	mov    DWORD PTR [eax],ecx
10056e1d:	mov    ecx,DWORD PTR [ebp+0x8]
10056e20:	mov    edx,DWORD PTR [ecx]
10056e22:	shr    edx,0x14
10056e25:	and    edx,0xf
10056e28:	and    edx,0x1
10056e2b:	test   edx,edx
10056e2d:	je     0x10056e3b
10056e2f:	mov    eax,DWORD PTR [ebp-0x10]
10056e32:	mov    ecx,DWORD PTR [eax+0x8]
10056e35:	mov    DWORD PTR [ecx],0xffffffff
10056e3b:	mov    eax,DWORD PTR [ebp+0x10]
10056e3e:	add    eax,DWORD PTR [ebp-0x4]
10056e41:	mov    esp,ebp
10056e43:	pop    ebp
10056e44:	ret    0xc
10056e47:	int3   
10056e48:	int3   
10056e49:	int3   
10056e4a:	int3   
10056e4b:	int3   
10056e4c:	int3   
10056e4d:	int3   
10056e4e:	int3   
10056e4f:	int3   
10056e50:	push   ebp
10056e51:	mov    ebp,esp
10056e53:	push   ecx
10056e54:	mov    DWORD PTR [ebp-0x4],ecx
10056e57:	mov    eax,DWORD PTR [ebp+0x10]
10056e5a:	push   eax
10056e5b:	mov    ecx,DWORD PTR [ebp+0xc]
10056e5e:	push   ecx
10056e5f:	mov    edx,DWORD PTR [ebp+0x8]
10056e62:	push   edx
10056e63:	mov    ecx,DWORD PTR [ebp-0x4]
10056e66:	call   0x10056c70
10056e6b:	mov    eax,DWORD PTR [ebp+0x10]
10056e6e:	movzx  ecx,BYTE PTR [eax+0x1]
10056e72:	lea    edx,[ecx*8+0x1006a8b8]
10056e79:	mov    DWORD PTR [ebp+0x8],edx
10056e7c:	mov    eax,DWORD PTR [ebp+0x10]
10056e7f:	add    eax,0x1
10056e82:	push   eax
10056e83:	mov    ecx,DWORD PTR [ebp+0xc]
10056e86:	add    ecx,0x1
10056e89:	push   ecx
10056e8a:	mov    edx,DWORD PTR [ebp+0x8]
10056e8d:	push   edx
10056e8e:	mov    eax,DWORD PTR [ebp+0x8]
10056e91:	mov    ecx,DWORD PTR [ebp-0x4]
10056e94:	call   DWORD PTR [eax+0x4]
10056e97:	mov    esp,ebp
10056e99:	pop    ebp
10056e9a:	ret    0xc
10056e9d:	int3   
10056e9e:	int3   
10056e9f:	int3   
10056ea0:	push   ebp
10056ea1:	mov    ebp,esp
10056ea3:	sub    esp,0x20
10056ea6:	mov    DWORD PTR [ebp-0x18],ecx
10056ea9:	mov    eax,DWORD PTR [ebp+0x10]
10056eac:	sub    eax,DWORD PTR [ebp+0x14]
10056eaf:	mov    DWORD PTR [ebp-0x10],eax
10056eb2:	mov    DWORD PTR [ebp-0x4],0x0
10056eb9:	mov    ecx,DWORD PTR [ebp+0x8]
10056ebc:	add    ecx,DWORD PTR [ebp+0x14]
10056ebf:	mov    DWORD PTR [ebp-0x14],ecx
10056ec2:	mov    DWORD PTR [ebp-0xc],0x0
10056ec9:	mov    edx,DWORD PTR [ebp-0x10]
10056ecc:	mov    DWORD PTR [ebp-0x1c],edx
10056ecf:	cmp    DWORD PTR [ebp-0x1c],0x1
10056ed3:	je     0x10056ee3
10056ed5:	cmp    DWORD PTR [ebp-0x1c],0x2
10056ed9:	je     0x10056efa
10056edb:	cmp    DWORD PTR [ebp-0x1c],0x4
10056edf:	je     0x10056f11
10056ee1:	jmp    0x10056f25
10056ee3:	mov    eax,DWORD PTR [ebp-0x14]
10056ee6:	movsx  ecx,BYTE PTR [eax]
10056ee9:	mov    DWORD PTR [ebp-0xc],ecx
10056eec:	mov    edx,DWORD PTR [ebp-0x18]
10056eef:	mov    eax,DWORD PTR [edx+0xc]
10056ef2:	mov    DWORD PTR [eax],0x3
10056ef8:	jmp    0x10056f25
10056efa:	mov    ecx,DWORD PTR [ebp-0x14]
10056efd:	movsx  edx,WORD PTR [ecx]
10056f00:	mov    DWORD PTR [ebp-0xc],edx
10056f03:	mov    eax,DWORD PTR [ebp-0x18]
10056f06:	mov    ecx,DWORD PTR [eax+0xc]
10056f09:	mov    DWORD PTR [ecx],0x2
10056f0f:	jmp    0x10056f25
10056f11:	mov    edx,DWORD PTR [ebp-0x14]
10056f14:	mov    eax,DWORD PTR [edx]
10056f16:	mov    DWORD PTR [ebp-0xc],eax
10056f19:	mov    ecx,DWORD PTR [ebp-0x18]
10056f1c:	mov    edx,DWORD PTR [ecx+0xc]
10056f1f:	mov    DWORD PTR [edx],0x0
10056f25:	mov    eax,DWORD PTR [ebp+0xc]
10056f28:	add    eax,DWORD PTR [ebp+0x10]
10056f2b:	add    eax,DWORD PTR [ebp-0xc]
10056f2e:	mov    DWORD PTR [ebp-0x4],eax
10056f31:	mov    ecx,DWORD PTR [ebp+0x8]
10056f34:	sub    ecx,DWORD PTR [ebp+0xc]
10056f37:	mov    edx,DWORD PTR [ebp-0xc]
10056f3a:	sub    edx,ecx
10056f3c:	mov    DWORD PTR [ebp-0x8],edx
10056f3f:	mov    eax,DWORD PTR [ebp-0x10]
10056f42:	mov    DWORD PTR [ebp-0x20],eax
10056f45:	cmp    DWORD PTR [ebp-0x20],0x1
10056f49:	je     0x10056f59
10056f4b:	cmp    DWORD PTR [ebp-0x20],0x2
10056f4f:	je     0x10056f63
10056f51:	cmp    DWORD PTR [ebp-0x20],0x4
10056f55:	je     0x10056f6f
10056f57:	jmp    0x10056f77
10056f59:	mov    ecx,DWORD PTR [ebp-0x14]
10056f5c:	mov    dl,BYTE PTR [ebp-0x8]
10056f5f:	mov    BYTE PTR [ecx],dl
10056f61:	jmp    0x10056f77
10056f63:	mov    eax,DWORD PTR [ebp-0x14]
10056f66:	mov    cx,WORD PTR [ebp-0x8]
10056f6a:	mov    WORD PTR [eax],cx
10056f6d:	jmp    0x10056f77
10056f6f:	mov    edx,DWORD PTR [ebp-0x14]
10056f72:	mov    eax,DWORD PTR [ebp-0x8]
10056f75:	mov    DWORD PTR [edx],eax
10056f77:	mov    eax,DWORD PTR [ebp-0x4]
10056f7a:	mov    esp,ebp
10056f7c:	pop    ebp
10056f7d:	ret    0x10
10056f80:	push   ebp
10056f81:	mov    ebp,esp
10056f83:	push   ecx
10056f84:	mov    DWORD PTR [ebp-0x4],ecx
10056f87:	mov    eax,DWORD PTR [ebp+0x10]
10056f8a:	add    eax,0x1
10056f8d:	mov    esp,ebp
10056f8f:	pop    ebp
10056f90:	ret    0xc
10056f93:	int3   
10056f94:	int3   
10056f95:	int3   
10056f96:	int3   
10056f97:	int3   
10056f98:	int3   
10056f99:	int3   
10056f9a:	int3   
10056f9b:	int3   
10056f9c:	int3   
10056f9d:	int3   
10056f9e:	int3   
10056f9f:	int3   
10056fa0:	push   ebp
10056fa1:	mov    ebp,esp
10056fa3:	push   ecx
10056fa4:	mov    DWORD PTR [ebp-0x4],ecx
10056fa7:	mov    eax,DWORD PTR [ebp+0x10]
10056faa:	push   eax
10056fab:	mov    ecx,DWORD PTR [ebp+0xc]
10056fae:	push   ecx
10056faf:	mov    edx,DWORD PTR [ebp+0x8]
10056fb2:	push   edx
10056fb3:	mov    ecx,DWORD PTR [ebp-0x4]
10056fb6:	call   0x10056c70
10056fbb:	mov    eax,DWORD PTR [ebp+0x10]
10056fbe:	movzx  ecx,BYTE PTR [eax+0x1]
10056fc2:	lea    edx,[ecx*8+0x1006b0c0]
10056fc9:	mov    DWORD PTR [ebp+0x8],edx
10056fcc:	mov    eax,DWORD PTR [ebp+0x10]
10056fcf:	add    eax,0x1
10056fd2:	push   eax
10056fd3:	mov    ecx,DWORD PTR [ebp+0xc]
10056fd6:	add    ecx,0x1
10056fd9:	push   ecx
10056fda:	mov    edx,DWORD PTR [ebp+0x8]
10056fdd:	push   edx
10056fde:	mov    eax,DWORD PTR [ebp+0x8]
10056fe1:	mov    ecx,DWORD PTR [ebp-0x4]
10056fe4:	call   DWORD PTR [eax+0x4]
10056fe7:	mov    esp,ebp
10056fe9:	pop    ebp
10056fea:	ret    0xc
10056fed:	int3   
10056fee:	int3   
10056fef:	int3   
10056ff0:	push   ebp
10056ff1:	mov    ebp,esp
10056ff3:	push   ecx
10056ff4:	mov    DWORD PTR [ebp-0x4],ecx
10056ff7:	mov    ecx,DWORD PTR [ebp-0x4]
10056ffa:	call   0x10056b90
10056fff:	mov    eax,DWORD PTR [ebp+0x10]
10057002:	push   eax
10057003:	mov    ecx,DWORD PTR [ebp+0xc]
10057006:	push   ecx
10057007:	mov    edx,DWORD PTR [ebp+0x8]
1005700a:	push   edx
1005700b:	mov    ecx,DWORD PTR [ebp-0x4]
1005700e:	call   0x10056e50
10057013:	mov    esp,ebp
10057015:	pop    ebp
10057016:	ret    0xc
10057019:	int3   
1005701a:	int3   
1005701b:	int3   
1005701c:	int3   
1005701d:	int3   
1005701e:	int3   
1005701f:	int3   
10057020:	push   ebp
10057021:	mov    ebp,esp
10057023:	push   ecx
10057024:	mov    DWORD PTR [ebp-0x4],ecx
10057027:	mov    ecx,DWORD PTR [ebp-0x4]
1005702a:	call   0x10056bd0
1005702f:	mov    eax,DWORD PTR [ebp+0x10]
10057032:	push   eax
10057033:	mov    ecx,DWORD PTR [ebp+0xc]
10057036:	push   ecx
10057037:	mov    edx,DWORD PTR [ebp+0x8]
1005703a:	push   edx
1005703b:	mov    ecx,DWORD PTR [ebp-0x4]
1005703e:	call   0x10056e50
10057043:	mov    esp,ebp
10057045:	pop    ebp
10057046:	ret    0xc
10057049:	int3   
1005704a:	int3   
1005704b:	int3   
1005704c:	int3   
1005704d:	int3   
1005704e:	int3   
1005704f:	int3   
10057050:	push   ebp
10057051:	mov    ebp,esp
10057053:	sub    esp,0x14
10057056:	mov    DWORD PTR [ebp-0x14],ecx
10057059:	mov    eax,DWORD PTR [ebp+0x10]
1005705c:	movzx  ecx,BYTE PTR [eax+0x1]
10057060:	and    ecx,0x38
10057063:	test   ecx,ecx
10057065:	jne    0x10057089
10057067:	mov    DWORD PTR [ebp-0x10],0x5bf6
1005706e:	mov    DWORD PTR [ebp-0xc],0x10056c70
10057075:	mov    edx,DWORD PTR [ebp+0x10]
10057078:	push   edx
10057079:	mov    eax,DWORD PTR [ebp+0xc]
1005707c:	push   eax
1005707d:	lea    ecx,[ebp-0x10]
10057080:	push   ecx
10057081:	mov    ecx,DWORD PTR [ebp-0x14]
10057084:	call   DWORD PTR [ebp-0xc]
10057087:	jmp    0x100570a9
10057089:	mov    DWORD PTR [ebp-0x8],0x52f6
10057090:	mov    DWORD PTR [ebp-0x4],0x10056c70
10057097:	mov    edx,DWORD PTR [ebp+0x10]
1005709a:	push   edx
1005709b:	mov    eax,DWORD PTR [ebp+0xc]
1005709e:	push   eax
1005709f:	lea    ecx,[ebp-0x8]
100570a2:	push   ecx
100570a3:	mov    ecx,DWORD PTR [ebp-0x14]
100570a6:	call   DWORD PTR [ebp-0x4]
100570a9:	mov    esp,ebp
100570ab:	pop    ebp
100570ac:	ret    0xc
100570af:	int3   
100570b0:	push   ebp
100570b1:	mov    ebp,esp
100570b3:	sub    esp,0x14
100570b6:	mov    DWORD PTR [ebp-0x14],ecx
100570b9:	mov    eax,DWORD PTR [ebp+0x10]
100570bc:	movzx  ecx,BYTE PTR [eax+0x1]
100570c0:	and    ecx,0x38
100570c3:	test   ecx,ecx
100570c5:	jne    0x100570e9
100570c7:	mov    DWORD PTR [ebp-0x10],0x66f7
100570ce:	mov    DWORD PTR [ebp-0xc],0x10056c70
100570d5:	mov    edx,DWORD PTR [ebp+0x10]
100570d8:	push   edx
100570d9:	mov    eax,DWORD PTR [ebp+0xc]
100570dc:	push   eax
100570dd:	lea    ecx,[ebp-0x10]
100570e0:	push   ecx
100570e1:	mov    ecx,DWORD PTR [ebp-0x14]
100570e4:	call   DWORD PTR [ebp-0xc]
100570e7:	jmp    0x10057109
100570e9:	mov    DWORD PTR [ebp-0x8],0x52f7
100570f0:	mov    DWORD PTR [ebp-0x4],0x10056c70
100570f7:	mov    edx,DWORD PTR [ebp+0x10]
100570fa:	push   edx
100570fb:	mov    eax,DWORD PTR [ebp+0xc]
100570fe:	push   eax
100570ff:	lea    ecx,[ebp-0x8]
10057102:	push   ecx
10057103:	mov    ecx,DWORD PTR [ebp-0x14]
10057106:	call   DWORD PTR [ebp-0x4]
10057109:	mov    esp,ebp
1005710b:	pop    ebp
1005710c:	ret    0xc
1005710f:	int3   
10057110:	push   ebp
10057111:	mov    ebp,esp
10057113:	sub    esp,0x10
10057116:	mov    DWORD PTR [ebp-0x10],ecx
10057119:	mov    eax,DWORD PTR [ebp+0x10]
1005711c:	movzx  ecx,BYTE PTR [eax+0x1]
10057120:	cmp    ecx,0x15
10057123:	je     0x10057131
10057125:	mov    edx,DWORD PTR [ebp+0x10]
10057128:	movzx  eax,BYTE PTR [edx+0x1]
1005712c:	cmp    eax,0x25
1005712f:	jne    0x10057149
10057131:	mov    ecx,DWORD PTR [ebp+0x10]
10057134:	mov    edx,DWORD PTR [ecx+0x2]
10057137:	mov    DWORD PTR [ebp-0xc],edx
1005713a:	mov    eax,DWORD PTR [ebp-0x10]
1005713d:	mov    ecx,DWORD PTR [eax+0x8]
10057140:	mov    edx,DWORD PTR [ebp-0xc]
10057143:	mov    eax,DWORD PTR [edx]
10057145:	mov    DWORD PTR [ecx],eax
10057147:	jmp    0x10057191
10057149:	mov    ecx,DWORD PTR [ebp+0x10]
1005714c:	movzx  edx,BYTE PTR [ecx+0x1]
10057150:	and    edx,0x38
10057153:	cmp    edx,0x10
10057156:	je     0x10057185
10057158:	mov    eax,DWORD PTR [ebp+0x10]
1005715b:	movzx  ecx,BYTE PTR [eax+0x1]
1005715f:	and    ecx,0x38
10057162:	cmp    ecx,0x18
10057165:	je     0x10057185
10057167:	mov    edx,DWORD PTR [ebp+0x10]
1005716a:	movzx  eax,BYTE PTR [edx+0x1]
1005716e:	and    eax,0x38
10057171:	cmp    eax,0x20
10057174:	je     0x10057185
10057176:	mov    ecx,DWORD PTR [ebp+0x10]
10057179:	movzx  edx,BYTE PTR [ecx+0x1]
1005717d:	and    edx,0x38
10057180:	cmp    edx,0x28
10057183:	jne    0x10057191
10057185:	mov    eax,DWORD PTR [ebp-0x10]
10057188:	mov    ecx,DWORD PTR [eax+0x8]
1005718b:	mov    DWORD PTR [ecx],0xffffffff
10057191:	mov    DWORD PTR [ebp-0x8],0x52ff
10057198:	mov    DWORD PTR [ebp-0x4],0x10056c70
1005719f:	mov    edx,DWORD PTR [ebp+0x10]
100571a2:	push   edx
100571a3:	mov    eax,DWORD PTR [ebp+0xc]
100571a6:	push   eax
100571a7:	lea    ecx,[ebp-0x8]
100571aa:	push   ecx
100571ab:	mov    ecx,DWORD PTR [ebp-0x10]
100571ae:	call   DWORD PTR [ebp-0x4]
100571b1:	mov    esp,ebp
100571b3:	pop    ebp
100571b4:	ret    0xc
100571b7:	mov    eax,DWORD PTR [esp+0x4]
100571bb:	mov    dx,WORD PTR [esp+0x8]
100571c0:	jmp    0x100571c9
100571c2:	cmp    cx,dx
100571c5:	je     0x100571d8
100571c7:	inc    eax
100571c8:	inc    eax
100571c9:	movzx  ecx,WORD PTR [eax]
100571cc:	test   cx,cx
100571cf:	jne    0x100571c2
100571d1:	cmp    WORD PTR [eax],dx
100571d4:	je     0x100571d8
100571d6:	xor    eax,eax
100571d8:	ret    
100571d9:	push   ebp
100571da:	mov    ebp,esp
100571dc:	sub    esp,0x14
100571df:	push   ebx
100571e0:	push   esi
100571e1:	push   edi
100571e2:	mov    edi,DWORD PTR [ebp+0x8]
100571e5:	xor    ebx,ebx
100571e7:	cmp    edi,ebx
100571e9:	je     0x1005720c
100571eb:	cmp    DWORD PTR [ebp+0xc],ebx
100571ee:	jbe    0x10057211
100571f0:	cmp    edi,ebx
100571f2:	je     0x100572b0
100571f8:	push   DWORD PTR [ebp+0xc]
100571fb:	push   edi
100571fc:	call   0x1004f55d
10057201:	cmp    eax,DWORD PTR [ebp+0xc]
10057204:	pop    ecx
10057205:	pop    ecx
10057206:	jb     0x1005722f
10057208:	mov    BYTE PTR [edi],bl
1005720a:	jmp    0x10057211
1005720c:	cmp    DWORD PTR [ebp+0xc],ebx
1005720f:	je     0x100571f0
10057211:	call   0x100458a5
10057216:	push   0x16
10057218:	pop    esi
10057219:	push   ebx
1005721a:	push   ebx
1005721b:	push   ebx
1005721c:	push   ebx
1005721d:	push   ebx
1005721e:	mov    DWORD PTR [eax],esi
10057220:	call   0x1004228c
10057225:	add    esp,0x14
10057228:	mov    eax,esi
1005722a:	jmp    0x100572b2
1005722f:	push   DWORD PTR [ebp+0x10]
10057232:	lea    ecx,[ebp-0x14]
10057235:	call   0x10044235
1005723a:	mov    esi,edi
1005723c:	cmp    BYTE PTR [esi],bl
1005723e:	je     0x100572a2
10057240:	mov    cl,BYTE PTR [edi]
10057242:	mov    edx,DWORD PTR [ebp-0x10]
10057245:	movzx  eax,cl
10057248:	add    eax,edx
1005724a:	mov    dl,BYTE PTR [eax+0x1d]
1005724d:	test   dl,0x4
10057250:	je     0x1005728b
10057252:	mov    eax,DWORD PTR [ebp-0x10]
10057255:	push   0x1
10057257:	push   DWORD PTR [eax+0x4]
1005725a:	lea    ecx,[ebp-0x4]
1005725d:	push   0x2
1005725f:	push   ecx
10057260:	push   0x2
10057262:	push   edi
10057263:	push   0x100
10057268:	push   DWORD PTR [eax+0xc]
1005726b:	lea    eax,[ebp-0x14]
1005726e:	push   eax
1005726f:	call   0x10048b9c
10057274:	add    esp,0x24
10057277:	cmp    eax,ebx
10057279:	je     0x100572b7
1005727b:	mov    ecx,DWORD PTR [ebp-0x4]
1005727e:	mov    BYTE PTR [esi],cl
10057280:	inc    esi
10057281:	inc    edi
10057282:	cmp    eax,0x1
10057285:	jle    0x1005729d
10057287:	mov    BYTE PTR [esi],ch
10057289:	jmp    0x1005729c
1005728b:	test   dl,0x10
1005728e:	je     0x10057298
10057290:	mov    al,BYTE PTR [eax+0x11d]
10057296:	jmp    0x1005729a
10057298:	mov    al,cl
1005729a:	mov    BYTE PTR [esi],al
1005729c:	inc    esi
1005729d:	inc    edi
1005729e:	cmp    BYTE PTR [edi],bl
100572a0:	jne    0x10057240
100572a2:	cmp    BYTE PTR [ebp-0x8],bl
100572a5:	mov    BYTE PTR [esi],bl
100572a7:	je     0x100572b0
100572a9:	mov    eax,DWORD PTR [ebp-0xc]
100572ac:	and    DWORD PTR [eax+0x70],0xfffffffd
100572b0:	xor    eax,eax
100572b2:	pop    edi
100572b3:	pop    esi
100572b4:	pop    ebx
100572b5:	leave  
100572b6:	ret    
100572b7:	call   0x100458a5
100572bc:	mov    DWORD PTR [eax],0x2a
100572c2:	mov    eax,DWORD PTR [ebp+0x8]
100572c5:	mov    BYTE PTR [eax],bl
100572c7:	call   0x100458a5
100572cc:	cmp    BYTE PTR [ebp-0x8],bl
100572cf:	mov    eax,DWORD PTR [eax]
100572d1:	je     0x100572b2
100572d3:	mov    ecx,DWORD PTR [ebp-0xc]
100572d6:	and    DWORD PTR [ecx+0x70],0xfffffffd
100572da:	jmp    0x100572b2
100572dc:	push   0x0
100572de:	push   DWORD PTR [esp+0xc]
100572e2:	push   DWORD PTR [esp+0xc]
100572e6:	call   0x100571d9
100572eb:	add    esp,0xc
100572ee:	ret    
100572ef:	push   ebp
100572f0:	mov    ebp,esp
100572f2:	sub    esp,0x20
100572f5:	push   ebx
100572f6:	xor    ebx,ebx
100572f8:	cmp    DWORD PTR [ebp+0xc],ebx
100572fb:	jne    0x1005731a
100572fd:	call   0x100458a5
10057302:	push   ebx
10057303:	push   ebx
10057304:	push   ebx
10057305:	push   ebx
10057306:	push   ebx
10057307:	mov    DWORD PTR [eax],0x16
1005730d:	call   0x1004228c
10057312:	add    esp,0x14
10057315:	or     eax,0xffffffff
10057318:	jmp    0x10057367
1005731a:	mov    eax,DWORD PTR [ebp+0x8]
1005731d:	cmp    eax,ebx
1005731f:	je     0x100572fd
10057321:	push   esi
10057322:	mov    DWORD PTR [ebp-0x18],eax
10057325:	mov    DWORD PTR [ebp-0x20],eax
10057328:	lea    eax,[ebp+0x10]
1005732b:	push   eax
1005732c:	push   ebx
1005732d:	push   DWORD PTR [ebp+0xc]
10057330:	lea    eax,[ebp-0x20]
10057333:	push   eax
10057334:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
1005733b:	mov    DWORD PTR [ebp-0x14],0x42
10057342:	call   0x1004c72c
10057347:	add    esp,0x10
1005734a:	dec    DWORD PTR [ebp-0x1c]
1005734d:	mov    esi,eax
1005734f:	js     0x10057358
10057351:	mov    eax,DWORD PTR [ebp-0x20]
10057354:	mov    BYTE PTR [eax],bl
10057356:	jmp    0x10057364
10057358:	lea    eax,[ebp-0x20]
1005735b:	push   eax
1005735c:	push   ebx
1005735d:	call   0x1004903c
10057362:	pop    ecx
10057363:	pop    ecx
10057364:	mov    eax,esi
10057366:	pop    esi
10057367:	pop    ebx
10057368:	leave  
10057369:	ret    
1005736a:	push   ebp
1005736b:	mov    ebp,esp
1005736d:	sub    esp,0x1c
10057370:	mov    edx,DWORD PTR [ebp+0x10]
10057373:	push   esi
10057374:	mov    esi,DWORD PTR [ebp+0x8]
10057377:	push   0xfffffffe
10057379:	pop    eax
1005737a:	cmp    esi,eax
1005737c:	mov    DWORD PTR [ebp-0x14],eax
1005737f:	mov    DWORD PTR [ebp-0x1c],edx
10057382:	jne    0x1005739f
10057384:	call   0x100458b8
10057389:	and    DWORD PTR [eax],0x0
1005738c:	call   0x100458a5
10057391:	mov    DWORD PTR [eax],0x9
10057397:	or     eax,0xffffffff
1005739a:	jmp    0x10057909
1005739f:	push   edi
100573a0:	xor    edi,edi
100573a2:	cmp    esi,edi
100573a4:	jl     0x100573ae
100573a6:	cmp    esi,DWORD PTR ds:0x10081444
100573ac:	jb     0x100573d5
100573ae:	call   0x100458b8
100573b3:	mov    DWORD PTR [eax],edi
100573b5:	call   0x100458a5
100573ba:	push   edi
100573bb:	push   edi
100573bc:	push   edi
100573bd:	push   edi
100573be:	push   edi
100573bf:	mov    DWORD PTR [eax],0x9
100573c5:	call   0x1004228c
100573ca:	add    esp,0x14
100573cd:	or     eax,0xffffffff
100573d0:	jmp    0x10057908
100573d5:	mov    eax,esi
100573d7:	and    esi,0x1f
100573da:	imul   esi,esi,0x28
100573dd:	sar    eax,0x5
100573e0:	push   ebx
100573e1:	lea    ebx,[eax*4+0x10081460]
100573e8:	mov    eax,DWORD PTR [ebx]
100573ea:	add    eax,esi
100573ec:	mov    cl,BYTE PTR [eax+0x4]
100573ef:	test   cl,0x1
100573f2:	jne    0x1005740b
100573f4:	call   0x100458b8
100573f9:	mov    DWORD PTR [eax],edi
100573fb:	call   0x100458a5
10057400:	mov    DWORD PTR [eax],0x9
10057406:	jmp    0x10057552
1005740b:	cmp    edx,edi
1005740d:	mov    DWORD PTR [ebp-0x10],edi
10057410:	je     0x10057905
10057416:	test   cl,0x2
10057419:	jne    0x10057905
1005741f:	mov    ecx,DWORD PTR [ebp+0xc]
10057422:	cmp    ecx,edi
10057424:	je     0x10057540
1005742a:	mov    al,BYTE PTR [eax+0x24]
1005742d:	add    al,al
1005742f:	sar    al,1
10057431:	mov    BYTE PTR [ebp-0x2],al
10057434:	movsx  eax,al
10057437:	dec    eax
10057438:	je     0x10057538
1005743e:	dec    eax
1005743f:	jne    0x10057453
10057441:	mov    eax,edx
10057443:	not    eax
10057445:	test   al,0x1
10057447:	je     0x10057540
1005744d:	and    edx,0xfffffffe
10057450:	mov    DWORD PTR [ebp+0x10],edx
10057453:	mov    DWORD PTR [ebp-0xc],ecx
10057456:	mov    ecx,DWORD PTR [ebx]
10057458:	mov    eax,DWORD PTR [ebp-0xc]
1005745b:	lea    edi,[esi+ecx*1]
1005745e:	test   BYTE PTR [edi+0x4],0x48
10057462:	je     0x100574da
10057464:	mov    cl,BYTE PTR [edi+0x5]
10057467:	cmp    cl,0xa
1005746a:	je     0x100574da
1005746c:	xor    edx,edx
1005746e:	cmp    DWORD PTR [ebp+0x10],edx
10057471:	je     0x100574da
10057473:	mov    BYTE PTR [eax],cl
10057475:	mov    ecx,DWORD PTR [ebx]
10057477:	inc    eax
10057478:	dec    DWORD PTR [ebp+0x10]
1005747b:	cmp    BYTE PTR [ebp-0x2],dl
1005747e:	mov    DWORD PTR [ebp-0x10],0x1
10057485:	mov    BYTE PTR [esi+ecx*1+0x5],0xa
1005748a:	je     0x100574da
1005748c:	mov    ecx,DWORD PTR [ebx]
1005748e:	mov    cl,BYTE PTR [esi+ecx*1+0x25]
10057492:	cmp    cl,0xa
10057495:	je     0x100574da
10057497:	cmp    DWORD PTR [ebp+0x10],edx
1005749a:	je     0x100574da
1005749c:	mov    BYTE PTR [eax],cl
1005749e:	mov    ecx,DWORD PTR [ebx]
100574a0:	inc    eax
100574a1:	dec    DWORD PTR [ebp+0x10]
100574a4:	cmp    BYTE PTR [ebp-0x2],0x1
100574a8:	mov    DWORD PTR [ebp-0x10],0x2
100574af:	mov    BYTE PTR [esi+ecx*1+0x25],0xa
100574b4:	jne    0x100574da
100574b6:	mov    ecx,DWORD PTR [ebx]
100574b8:	mov    cl,BYTE PTR [esi+ecx*1+0x26]
100574bc:	cmp    cl,0xa
100574bf:	je     0x100574da
100574c1:	cmp    DWORD PTR [ebp+0x10],edx
100574c4:	je     0x100574da
100574c6:	mov    BYTE PTR [eax],cl
100574c8:	mov    ecx,DWORD PTR [ebx]
100574ca:	inc    eax
100574cb:	dec    DWORD PTR [ebp+0x10]
100574ce:	mov    DWORD PTR [ebp-0x10],0x3
100574d5:	mov    BYTE PTR [esi+ecx*1+0x26],0xa
100574da:	push   0x0
100574dc:	lea    ecx,[ebp-0x18]
100574df:	push   ecx
100574e0:	push   DWORD PTR [ebp+0x10]
100574e3:	push   eax
100574e4:	mov    eax,DWORD PTR [ebx]
100574e6:	push   DWORD PTR [esi+eax*1]
100574e9:	call   DWORD PTR ds:0x100650cc
100574ef:	test   eax,eax
100574f1:	je     0x100578cf
100574f7:	mov    edi,DWORD PTR [ebp-0x18]
100574fa:	test   edi,edi
100574fc:	jl     0x100578cf
10057502:	cmp    edi,DWORD PTR [ebp+0x10]
10057505:	ja     0x100578cf
1005750b:	mov    eax,DWORD PTR [ebx]
1005750d:	add    DWORD PTR [ebp-0x10],edi
10057510:	lea    eax,[esi+eax*1+0x4]
10057514:	test   BYTE PTR [eax],0x80
10057517:	je     0x1005776f
1005751d:	cmp    BYTE PTR [ebp-0x2],0x2
10057521:	je     0x10057799
10057527:	test   edi,edi
10057529:	je     0x100575a4
1005752b:	mov    ecx,DWORD PTR [ebp-0xc]
1005752e:	cmp    BYTE PTR [ecx],0xa
10057531:	jne    0x100575a4
10057533:	or     BYTE PTR [eax],0x4
10057536:	jmp    0x100575a7
10057538:	mov    eax,edx
1005753a:	not    eax
1005753c:	test   al,0x1
1005753e:	jne    0x10057561
10057540:	call   0x100458b8
10057545:	mov    DWORD PTR [eax],edi
10057547:	call   0x100458a5
1005754c:	mov    DWORD PTR [eax],0x16
10057552:	push   edi
10057553:	push   edi
10057554:	push   edi
10057555:	push   edi
10057556:	push   edi
10057557:	call   0x1004228c
1005755c:	add    esp,0x14
1005755f:	jmp    0x1005759c
10057561:	mov    eax,edx
10057563:	push   0x4
10057565:	pop    ecx
10057566:	shr    eax,1
10057568:	cmp    eax,ecx
1005756a:	mov    DWORD PTR [ebp+0x10],ecx
1005756d:	jb     0x10057572
1005756f:	mov    DWORD PTR [ebp+0x10],eax
10057572:	push   DWORD PTR [ebp+0x10]
10057575:	call   0x10046172
1005757a:	cmp    eax,edi
1005757c:	pop    ecx
1005757d:	mov    DWORD PTR [ebp-0xc],eax
10057580:	jne    0x10057456
10057586:	call   0x100458a5
1005758b:	mov    DWORD PTR [eax],0xc
10057591:	call   0x100458b8
10057596:	mov    DWORD PTR [eax],0x8
1005759c:	or     eax,0xffffffff
1005759f:	jmp    0x10057907
100575a4:	and    BYTE PTR [eax],0xfb
100575a7:	mov    edi,DWORD PTR [ebp-0xc]
100575aa:	mov    eax,DWORD PTR [ebp-0x10]
100575ad:	add    eax,edi
100575af:	cmp    edi,eax
100575b1:	mov    DWORD PTR [ebp+0x10],edi
100575b4:	mov    DWORD PTR [ebp-0x10],eax
100575b7:	jae    0x1005768d
100575bd:	mov    ecx,DWORD PTR [ebp+0x10]
100575c0:	mov    al,BYTE PTR [ecx]
100575c2:	cmp    al,0x1a
100575c4:	je     0x10057678
100575ca:	cmp    al,0xd
100575cc:	je     0x100575da
100575ce:	mov    BYTE PTR [edi],al
100575d0:	inc    edi
100575d1:	inc    ecx
100575d2:	mov    DWORD PTR [ebp+0x10],ecx
100575d5:	jmp    0x1005766a
100575da:	mov    eax,DWORD PTR [ebp-0x10]
100575dd:	dec    eax
100575de:	cmp    ecx,eax
100575e0:	jae    0x100575f9
100575e2:	lea    eax,[ecx+0x1]
100575e5:	cmp    BYTE PTR [eax],0xa
100575e8:	jne    0x100575f4
100575ea:	inc    ecx
100575eb:	inc    ecx
100575ec:	mov    DWORD PTR [ebp+0x10],ecx
100575ef:	mov    BYTE PTR [edi],0xa
100575f2:	jmp    0x10057669
100575f4:	mov    DWORD PTR [ebp+0x10],eax
100575f7:	jmp    0x10057666
100575f9:	inc    DWORD PTR [ebp+0x10]
100575fc:	push   0x0
100575fe:	lea    eax,[ebp-0x18]
10057601:	push   eax
10057602:	push   0x1
10057604:	lea    eax,[ebp-0x1]
10057607:	push   eax
10057608:	mov    eax,DWORD PTR [ebx]
1005760a:	push   DWORD PTR [esi+eax*1]
1005760d:	call   DWORD PTR ds:0x100650cc
10057613:	test   eax,eax
10057615:	jne    0x10057621
10057617:	call   DWORD PTR ds:0x100650c4
1005761d:	test   eax,eax
1005761f:	jne    0x10057666
10057621:	cmp    DWORD PTR [ebp-0x18],0x0
10057625:	je     0x10057666
10057627:	mov    eax,DWORD PTR [ebx]
10057629:	test   BYTE PTR [esi+eax*1+0x4],0x48
1005762e:	je     0x10057644
10057630:	cmp    BYTE PTR [ebp-0x1],0xa
10057634:	je     0x100575ef
10057636:	mov    BYTE PTR [edi],0xd
10057639:	mov    eax,DWORD PTR [ebx]
1005763b:	mov    cl,BYTE PTR [ebp-0x1]
1005763e:	mov    BYTE PTR [esi+eax*1+0x5],cl
10057642:	jmp    0x10057669
10057644:	cmp    edi,DWORD PTR [ebp-0xc]
10057647:	jne    0x1005764f
10057649:	cmp    BYTE PTR [ebp-0x1],0xa
1005764d:	je     0x100575ef
1005764f:	push   0x1
10057651:	push   0xffffffff
10057653:	push   0xffffffff
10057655:	push   DWORD PTR [ebp+0x8]
10057658:	call   0x1004ba6f
1005765d:	add    esp,0x10
10057660:	cmp    BYTE PTR [ebp-0x1],0xa
10057664:	je     0x1005766a
10057666:	mov    BYTE PTR [edi],0xd
10057669:	inc    edi
1005766a:	mov    eax,DWORD PTR [ebp-0x10]
1005766d:	cmp    DWORD PTR [ebp+0x10],eax
10057670:	jb     0x100575bd
10057676:	jmp    0x1005768d
10057678:	mov    eax,DWORD PTR [ebx]
1005767a:	lea    eax,[esi+eax*1+0x4]
1005767e:	test   BYTE PTR [eax],0x40
10057681:	jne    0x10057688
10057683:	or     BYTE PTR [eax],0x2
10057686:	jmp    0x1005768d
10057688:	mov    al,BYTE PTR [ecx]
1005768a:	mov    BYTE PTR [edi],al
1005768c:	inc    edi
1005768d:	mov    eax,edi
1005768f:	sub    eax,DWORD PTR [ebp-0xc]
10057692:	cmp    BYTE PTR [ebp-0x2],0x1
10057696:	mov    DWORD PTR [ebp-0x10],eax
10057699:	jne    0x1005776f
1005769f:	test   eax,eax
100576a1:	je     0x1005776f
100576a7:	dec    edi
100576a8:	mov    cl,BYTE PTR [edi]
100576aa:	test   cl,cl
100576ac:	js     0x100576b4
100576ae:	inc    edi
100576af:	jmp    0x1005773a
100576b4:	xor    eax,eax
100576b6:	inc    eax
100576b7:	movzx  ecx,cl
100576ba:	jmp    0x100576cb
100576bc:	cmp    eax,0x4
100576bf:	jg     0x100576d4
100576c1:	cmp    edi,DWORD PTR [ebp-0xc]
100576c4:	jb     0x100576d4
100576c6:	dec    edi
100576c7:	movzx  ecx,BYTE PTR [edi]
100576ca:	inc    eax
100576cb:	cmp    BYTE PTR [ecx+0x1007e098],0x0
100576d2:	je     0x100576bc
100576d4:	mov    dl,BYTE PTR [edi]
100576d6:	movzx  ecx,dl
100576d9:	movsx  ecx,BYTE PTR [ecx+0x1007e098]
100576e0:	test   ecx,ecx
100576e2:	jne    0x100576f1
100576e4:	call   0x100458a5
100576e9:	mov    DWORD PTR [eax],0x2a
100576ef:	jmp    0x1005776b
100576f1:	inc    ecx
100576f2:	cmp    ecx,eax
100576f4:	jne    0x100576fa
100576f6:	add    edi,eax
100576f8:	jmp    0x1005773a
100576fa:	mov    ecx,DWORD PTR [ebx]
100576fc:	add    ecx,esi
100576fe:	test   BYTE PTR [ecx+0x4],0x48
10057702:	je     0x10057728
10057704:	inc    edi
10057705:	cmp    eax,0x2
10057708:	mov    BYTE PTR [ecx+0x5],dl
1005770b:	jl     0x10057716
1005770d:	mov    dl,BYTE PTR [edi]
1005770f:	mov    ecx,DWORD PTR [ebx]
10057711:	mov    BYTE PTR [esi+ecx*1+0x25],dl
10057715:	inc    edi
10057716:	cmp    eax,0x3
10057719:	jne    0x10057724
1005771b:	mov    dl,BYTE PTR [edi]
1005771d:	mov    ecx,DWORD PTR [ebx]
1005771f:	mov    BYTE PTR [esi+ecx*1+0x26],dl
10057723:	inc    edi
10057724:	sub    edi,eax
10057726:	jmp    0x1005773a
10057728:	neg    eax
1005772a:	cdq    
1005772b:	push   0x1
1005772d:	push   edx
1005772e:	push   eax
1005772f:	push   DWORD PTR [ebp+0x8]
10057732:	call   0x1004ba6f
10057737:	add    esp,0x10
1005773a:	mov    eax,DWORD PTR [ebp-0x1c]
1005773d:	sub    edi,DWORD PTR [ebp-0xc]
10057740:	shr    eax,1
10057742:	push   eax
10057743:	push   DWORD PTR [ebp+0xc]
10057746:	push   edi
10057747:	push   DWORD PTR [ebp-0xc]
1005774a:	push   0x0
1005774c:	push   0xfde9
10057751:	call   DWORD PTR ds:0x1006508c
10057757:	test   eax,eax
10057759:	mov    DWORD PTR [ebp-0x10],eax
1005775c:	jne    0x10057792
1005775e:	call   DWORD PTR ds:0x100650c4
10057764:	push   eax
10057765:	call   0x100458cb
1005776a:	pop    ecx
1005776b:	or     DWORD PTR [ebp-0x14],0xffffffff
1005776f:	mov    eax,DWORD PTR [ebp-0xc]
10057772:	cmp    eax,DWORD PTR [ebp+0xc]
10057775:	je     0x1005777e
10057777:	push   eax
10057778:	call   0x10042408
1005777d:	pop    ecx
1005777e:	mov    eax,DWORD PTR [ebp-0x14]
10057781:	cmp    eax,0xfffffffe
10057784:	jne    0x10057907
1005778a:	mov    eax,DWORD PTR [ebp-0x10]
1005778d:	jmp    0x10057907
10057792:	add    eax,eax
10057794:	mov    DWORD PTR [ebp-0x10],eax
10057797:	jmp    0x1005776f
10057799:	test   edi,edi
1005779b:	je     0x100577ab
1005779d:	mov    ecx,DWORD PTR [ebp-0xc]
100577a0:	cmp    WORD PTR [ecx],0xa
100577a4:	jne    0x100577ab
100577a6:	or     BYTE PTR [eax],0x4
100577a9:	jmp    0x100577ae
100577ab:	and    BYTE PTR [eax],0xfb
100577ae:	mov    edi,DWORD PTR [ebp-0xc]
100577b1:	mov    eax,DWORD PTR [ebp-0x10]
100577b4:	add    eax,edi
100577b6:	cmp    edi,eax
100577b8:	mov    DWORD PTR [ebp+0x10],edi
100577bb:	mov    DWORD PTR [ebp-0x10],eax
100577be:	jae    0x100578c4
100577c4:	mov    eax,DWORD PTR [ebp+0x10]
100577c7:	movzx  ecx,WORD PTR [eax]
100577ca:	cmp    cx,0x1a
100577ce:	je     0x100578ac
100577d4:	cmp    cx,0xd
100577d8:	je     0x100577e9
100577da:	mov    WORD PTR [edi],cx
100577dd:	inc    edi
100577de:	inc    edi
100577df:	inc    eax
100577e0:	inc    eax
100577e1:	mov    DWORD PTR [ebp+0x10],eax
100577e4:	jmp    0x1005789e
100577e9:	mov    ecx,DWORD PTR [ebp-0x10]
100577ec:	add    ecx,0xfffffffe
100577ef:	cmp    eax,ecx
100577f1:	jae    0x10057814
100577f3:	lea    ecx,[eax+0x2]
100577f6:	cmp    WORD PTR [ecx],0xa
100577fa:	jne    0x1005780c
100577fc:	add    eax,0x4
100577ff:	mov    DWORD PTR [ebp+0x10],eax
10057802:	mov    WORD PTR [edi],0xa
10057807:	jmp    0x1005789c
1005780c:	mov    DWORD PTR [ebp+0x10],ecx
1005780f:	jmp    0x10057897
10057814:	add    DWORD PTR [ebp+0x10],0x2
10057818:	push   0x0
1005781a:	lea    eax,[ebp-0x18]
1005781d:	push   eax
1005781e:	push   0x2
10057820:	lea    eax,[ebp-0x8]
10057823:	push   eax
10057824:	mov    eax,DWORD PTR [ebx]
10057826:	push   DWORD PTR [esi+eax*1]
10057829:	call   DWORD PTR ds:0x100650cc
1005782f:	test   eax,eax
10057831:	jne    0x1005783d
10057833:	call   DWORD PTR ds:0x100650c4
10057839:	test   eax,eax
1005783b:	jne    0x10057897
1005783d:	cmp    DWORD PTR [ebp-0x18],0x0
10057841:	je     0x10057897
10057843:	mov    eax,DWORD PTR [ebx]
10057845:	test   BYTE PTR [esi+eax*1+0x4],0x48
1005784a:	je     0x10057873
1005784c:	cmp    WORD PTR [ebp-0x8],0xa
10057851:	je     0x10057802
10057853:	mov    WORD PTR [edi],0xd
10057858:	mov    eax,DWORD PTR [ebx]
1005785a:	mov    cl,BYTE PTR [ebp-0x8]
1005785d:	mov    BYTE PTR [esi+eax*1+0x5],cl
10057861:	mov    eax,DWORD PTR [ebx]
10057863:	mov    cl,BYTE PTR [ebp-0x7]
10057866:	mov    BYTE PTR [esi+eax*1+0x25],cl
1005786a:	mov    eax,DWORD PTR [ebx]
1005786c:	mov    BYTE PTR [esi+eax*1+0x26],0xa
10057871:	jmp    0x1005789c
10057873:	cmp    edi,DWORD PTR [ebp-0xc]
10057876:	jne    0x1005787f
10057878:	cmp    WORD PTR [ebp-0x8],0xa
1005787d:	je     0x10057802
1005787f:	push   0x1
10057881:	push   0xffffffff
10057883:	push   0xfffffffe
10057885:	push   DWORD PTR [ebp+0x8]
10057888:	call   0x1004ba6f
1005788d:	add    esp,0x10
10057890:	cmp    WORD PTR [ebp-0x8],0xa
10057895:	je     0x1005789e
10057897:	mov    WORD PTR [edi],0xd
1005789c:	inc    edi
1005789d:	inc    edi
1005789e:	mov    eax,DWORD PTR [ebp-0x10]
100578a1:	cmp    DWORD PTR [ebp+0x10],eax
100578a4:	jb     0x100577c4
100578aa:	jmp    0x100578c4
100578ac:	mov    ecx,DWORD PTR [ebx]
100578ae:	lea    esi,[esi+ecx*1+0x4]
100578b2:	test   BYTE PTR [esi],0x40
100578b5:	jne    0x100578bc
100578b7:	or     BYTE PTR [esi],0x2
100578ba:	jmp    0x100578c4
100578bc:	mov    ax,WORD PTR [eax]
100578bf:	mov    WORD PTR [edi],ax
100578c2:	inc    edi
100578c3:	inc    edi
100578c4:	sub    edi,DWORD PTR [ebp-0xc]
100578c7:	mov    DWORD PTR [ebp-0x10],edi
100578ca:	jmp    0x1005776f
100578cf:	call   DWORD PTR ds:0x100650c4
100578d5:	push   0x5
100578d7:	pop    esi
100578d8:	cmp    eax,esi
100578da:	jne    0x100578f3
100578dc:	call   0x100458a5
100578e1:	mov    DWORD PTR [eax],0x9
100578e7:	call   0x100458b8
100578ec:	mov    DWORD PTR [eax],esi
100578ee:	jmp    0x1005776b
100578f3:	cmp    eax,0x6d
100578f6:	jne    0x10057764
100578fc:	and    DWORD PTR [ebp-0x14],0x0
10057900:	jmp    0x1005776f
10057905:	xor    eax,eax
10057907:	pop    ebx
10057908:	pop    edi
10057909:	pop    esi
1005790a:	leave  
1005790b:	ret    
1005790c:	push   0x10
1005790e:	push   0x100735e0
10057913:	call   0x100459e4
10057918:	mov    eax,DWORD PTR [ebp+0x8]
1005791b:	cmp    eax,0xfffffffe
1005791e:	jne    0x1005793b
10057920:	call   0x100458b8
10057925:	and    DWORD PTR [eax],0x0
10057928:	call   0x100458a5
1005792d:	mov    DWORD PTR [eax],0x9
10057933:	or     eax,0xffffffff
10057936:	jmp    0x100579d8
1005793b:	xor    edi,edi
1005793d:	cmp    eax,edi
1005793f:	jl     0x10057949
10057941:	cmp    eax,DWORD PTR ds:0x10081444
10057947:	jb     0x1005796a
10057949:	call   0x100458b8
1005794e:	mov    DWORD PTR [eax],edi
10057950:	call   0x100458a5
10057955:	mov    DWORD PTR [eax],0x9
1005795b:	push   edi
1005795c:	push   edi
1005795d:	push   edi
1005795e:	push   edi
1005795f:	push   edi
10057960:	call   0x1004228c
10057965:	add    esp,0x14
10057968:	jmp    0x10057933
1005796a:	mov    ecx,eax
1005796c:	sar    ecx,0x5
1005796f:	lea    ebx,[ecx*4+0x10081460]
10057976:	mov    esi,eax
10057978:	and    esi,0x1f
1005797b:	imul   esi,esi,0x28
1005797e:	mov    ecx,DWORD PTR [ebx]
10057980:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
10057985:	and    ecx,0x1
10057988:	je     0x10057949
1005798a:	push   eax
1005798b:	call   0x1004e0a6
10057990:	pop    ecx
10057991:	mov    DWORD PTR [ebp-0x4],edi
10057994:	mov    eax,DWORD PTR [ebx]
10057996:	test   BYTE PTR [eax+esi*1+0x4],0x1
1005799b:	je     0x100579b3
1005799d:	push   DWORD PTR [ebp+0x10]
100579a0:	push   DWORD PTR [ebp+0xc]
100579a3:	push   DWORD PTR [ebp+0x8]
100579a6:	call   0x1005736a
100579ab:	add    esp,0xc
100579ae:	mov    DWORD PTR [ebp-0x1c],eax
100579b1:	jmp    0x100579c9
100579b3:	call   0x100458a5
100579b8:	mov    DWORD PTR [eax],0x9
100579be:	call   0x100458b8
100579c3:	mov    DWORD PTR [eax],edi
100579c5:	or     DWORD PTR [ebp-0x1c],0xffffffff
100579c9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100579d0:	call   0x100579de
100579d5:	mov    eax,DWORD PTR [ebp-0x1c]
100579d8:	call   0x10045a29
100579dd:	ret    
100579de:	push   DWORD PTR [ebp+0x8]
100579e1:	call   0x1004e146
100579e6:	pop    ecx
100579e7:	ret    
100579e8:	push   0xc
100579ea:	push   0x10073600
100579ef:	call   0x100459e4
100579f4:	xor    ebx,ebx
100579f6:	mov    DWORD PTR [ebp-0x1c],ebx
100579f9:	xor    eax,eax
100579fb:	mov    edi,DWORD PTR [ebp+0x8]
100579fe:	cmp    edi,ebx
10057a00:	setne  al
10057a03:	cmp    eax,ebx
10057a05:	jne    0x10057a23
10057a07:	call   0x100458a5
10057a0c:	mov    DWORD PTR [eax],0x16
10057a12:	push   ebx
10057a13:	push   ebx
10057a14:	push   ebx
10057a15:	push   ebx
10057a16:	push   ebx
10057a17:	call   0x1004228c
10057a1c:	add    esp,0x14
10057a1f:	xor    eax,eax
10057a21:	jmp    0x10057a9c
10057a23:	xor    eax,eax
10057a25:	mov    esi,DWORD PTR [ebp+0xc]
10057a28:	cmp    esi,ebx
10057a2a:	setne  al
10057a2d:	cmp    eax,ebx
10057a2f:	je     0x10057a07
10057a31:	xor    eax,eax
10057a33:	cmp    BYTE PTR [esi],bl
10057a35:	setne  al
10057a38:	cmp    eax,ebx
10057a3a:	je     0x10057a07
10057a3c:	call   0x1005943b
10057a41:	mov    DWORD PTR [ebp+0x8],eax
10057a44:	cmp    eax,ebx
10057a46:	jne    0x10057a55
10057a48:	call   0x100458a5
10057a4d:	mov    DWORD PTR [eax],0x18
10057a53:	jmp    0x10057a1f
10057a55:	mov    DWORD PTR [ebp-0x4],ebx
10057a58:	cmp    BYTE PTR [edi],bl
10057a5a:	jne    0x10057a7c
10057a5c:	call   0x100458a5
10057a61:	mov    DWORD PTR [eax],0x16
10057a67:	push   0xfffffffe
10057a69:	lea    eax,[ebp-0x10]
10057a6c:	push   eax
10057a6d:	push   0x1007d030
10057a72:	call   0x1004a750
10057a77:	add    esp,0xc
10057a7a:	jmp    0x10057a1f
10057a7c:	push   eax
10057a7d:	push   DWORD PTR [ebp+0x10]
10057a80:	push   esi
10057a81:	push   edi
10057a82:	call   0x10059199
10057a87:	add    esp,0x10
10057a8a:	mov    DWORD PTR [ebp-0x1c],eax
10057a8d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10057a94:	call   0x10057aa2
10057a99:	mov    eax,DWORD PTR [ebp-0x1c]
10057a9c:	call   0x10045a29
10057aa1:	ret    
10057aa2:	push   DWORD PTR [ebp+0x8]
10057aa5:	call   0x1004c478
10057aaa:	pop    ecx
10057aab:	ret    
10057aac:	push   0x40
10057aae:	push   DWORD PTR [esp+0xc]
10057ab2:	push   DWORD PTR [esp+0xc]
10057ab6:	call   0x100579e8
10057abb:	add    esp,0xc
10057abe:	ret    
10057abf:	push   ebp
10057ac0:	mov    ebp,esp
10057ac2:	sub    esp,0x18
10057ac5:	push   ebx
10057ac6:	push   DWORD PTR [ebp+0xc]
10057ac9:	lea    ecx,[ebp-0x18]
10057acc:	call   0x10044235
10057ad1:	mov    ebx,DWORD PTR [ebp+0x8]
10057ad4:	cmp    ebx,0x100
10057ada:	jae    0x10057b30
10057adc:	mov    ecx,DWORD PTR [ebp-0x18]
10057adf:	cmp    DWORD PTR [ecx+0xac],0x1
10057ae6:	jle    0x10057afc
10057ae8:	lea    eax,[ebp-0x18]
10057aeb:	push   eax
10057aec:	push   0x2
10057aee:	push   ebx
10057aef:	call   0x10048c23
10057af4:	mov    ecx,DWORD PTR [ebp-0x18]
10057af7:	add    esp,0xc
10057afa:	jmp    0x10057b09
10057afc:	mov    eax,DWORD PTR [ecx+0xc8]
10057b02:	movzx  eax,BYTE PTR [eax+ebx*2]
10057b06:	and    eax,0x2
10057b09:	test   eax,eax
10057b0b:	je     0x10057b1c
10057b0d:	mov    eax,DWORD PTR [ecx+0xd0]
10057b13:	movzx  eax,BYTE PTR [eax+ebx*1]
10057b17:	jmp    0x10057bc7
10057b1c:	cmp    BYTE PTR [ebp-0xc],0x0
10057b20:	je     0x10057b29
10057b22:	mov    eax,DWORD PTR [ebp-0x10]
10057b25:	and    DWORD PTR [eax+0x70],0xfffffffd
10057b29:	mov    eax,ebx
10057b2b:	jmp    0x10057bd4
10057b30:	mov    eax,DWORD PTR [ebp-0x18]
10057b33:	cmp    DWORD PTR [eax+0xac],0x1
10057b3a:	jle    0x10057b6d
10057b3c:	mov    DWORD PTR [ebp+0x8],ebx
10057b3f:	sar    DWORD PTR [ebp+0x8],0x8
10057b43:	lea    eax,[ebp-0x18]
10057b46:	push   eax
10057b47:	mov    eax,DWORD PTR [ebp+0x8]
10057b4a:	and    eax,0xff
10057b4f:	push   eax
10057b50:	call   0x10048bdf
10057b55:	test   eax,eax
10057b57:	pop    ecx
10057b58:	pop    ecx
10057b59:	je     0x10057b6d
10057b5b:	mov    al,BYTE PTR [ebp+0x8]
10057b5e:	push   0x2
10057b60:	mov    BYTE PTR [ebp-0x4],al
10057b63:	mov    BYTE PTR [ebp-0x3],bl
10057b66:	mov    BYTE PTR [ebp-0x2],0x0
10057b6a:	pop    ecx
10057b6b:	jmp    0x10057b82
10057b6d:	call   0x100458a5
10057b72:	mov    DWORD PTR [eax],0x2a
10057b78:	xor    ecx,ecx
10057b7a:	mov    BYTE PTR [ebp-0x4],bl
10057b7d:	mov    BYTE PTR [ebp-0x3],0x0
10057b81:	inc    ecx
10057b82:	mov    eax,DWORD PTR [ebp-0x18]
10057b85:	push   0x1
10057b87:	push   DWORD PTR [eax+0x4]
10057b8a:	lea    edx,[ebp-0x8]
10057b8d:	push   0x3
10057b8f:	push   edx
10057b90:	push   ecx
10057b91:	lea    ecx,[ebp-0x4]
10057b94:	push   ecx
10057b95:	push   0x200
10057b9a:	push   DWORD PTR [eax+0x14]
10057b9d:	lea    eax,[ebp-0x18]
10057ba0:	push   eax
10057ba1:	call   0x10048b9c
10057ba6:	add    esp,0x24
10057ba9:	test   eax,eax
10057bab:	je     0x10057b1c
10057bb1:	cmp    eax,0x1
10057bb4:	jne    0x10057bbc
10057bb6:	movzx  eax,BYTE PTR [ebp-0x8]
10057bba:	jmp    0x10057bc7
10057bbc:	movzx  ecx,BYTE PTR [ebp-0x7]
10057bc0:	xor    eax,eax
10057bc2:	mov    ah,BYTE PTR [ebp-0x8]
10057bc5:	or     eax,ecx
10057bc7:	cmp    BYTE PTR [ebp-0xc],0x0
10057bcb:	je     0x10057bd4
10057bcd:	mov    ecx,DWORD PTR [ebp-0x10]
10057bd0:	and    DWORD PTR [ecx+0x70],0xfffffffd
10057bd4:	pop    ebx
10057bd5:	leave  
10057bd6:	ret    
10057bd7:	cmp    DWORD PTR ds:0x1007f2a8,0x0
10057bde:	jne    0x10057bf0
10057be0:	mov    eax,DWORD PTR [esp+0x4]
10057be4:	lea    ecx,[eax-0x61]
10057be7:	cmp    ecx,0x19
10057bea:	ja     0x10057bfd
10057bec:	add    eax,0xffffffe0
10057bef:	ret    
10057bf0:	push   0x0
10057bf2:	push   DWORD PTR [esp+0x8]
10057bf6:	call   0x10057abf
10057bfb:	pop    ecx
10057bfc:	pop    ecx
10057bfd:	ret    
10057bfe:	push   esi
10057bff:	mov    esi,DWORD PTR [esp+0x8]
10057c03:	push   esi
10057c04:	call   0x1004e035
10057c09:	cmp    eax,0xffffffff
10057c0c:	pop    ecx
10057c0d:	jne    0x10057c1f
10057c0f:	call   0x100458a5
10057c14:	mov    DWORD PTR [eax],0x9
10057c1a:	or     eax,0xffffffff
10057c1d:	pop    esi
10057c1e:	ret    
10057c1f:	push   edi
10057c20:	push   DWORD PTR [esp+0x14]
10057c24:	push   0x0
10057c26:	push   DWORD PTR [esp+0x18]
10057c2a:	push   eax
10057c2b:	call   DWORD PTR ds:0x10065238
10057c31:	mov    edi,eax
10057c33:	cmp    edi,0xffffffff
10057c36:	jne    0x10057c40
10057c38:	call   DWORD PTR ds:0x100650c4
10057c3e:	jmp    0x10057c42
10057c40:	xor    eax,eax
10057c42:	test   eax,eax
10057c44:	je     0x10057c52
10057c46:	push   eax
10057c47:	call   0x100458cb
10057c4c:	pop    ecx
10057c4d:	or     eax,0xffffffff
10057c50:	jmp    0x10057c6d
10057c52:	mov    eax,esi
10057c54:	and    esi,0x1f
10057c57:	imul   esi,esi,0x28
10057c5a:	sar    eax,0x5
10057c5d:	mov    eax,DWORD PTR [eax*4+0x10081460]
10057c64:	lea    eax,[eax+esi*1+0x4]
10057c68:	and    BYTE PTR [eax],0xfd
10057c6b:	mov    eax,edi
10057c6d:	pop    edi
10057c6e:	pop    esi
10057c6f:	ret    
10057c70:	push   ebp
10057c71:	mov    ebp,esp
10057c73:	sub    esp,0x14
10057c76:	push   ebx
10057c77:	push   DWORD PTR [ebp+0x10]
10057c7a:	lea    ecx,[ebp-0x14]
10057c7d:	call   0x10044235
10057c82:	xor    ebx,ebx
10057c84:	cmp    DWORD PTR [ebp+0x8],ebx
10057c87:	jne    0x10057cb7
10057c89:	call   0x100458a5
10057c8e:	push   ebx
10057c8f:	push   ebx
10057c90:	push   ebx
10057c91:	push   ebx
10057c92:	push   ebx
10057c93:	mov    DWORD PTR [eax],0x16
10057c99:	call   0x1004228c
10057c9e:	add    esp,0x14
10057ca1:	cmp    BYTE PTR [ebp-0x8],bl
10057ca4:	je     0x10057cad
10057ca6:	mov    eax,DWORD PTR [ebp-0xc]
10057ca9:	and    DWORD PTR [eax+0x70],0xfffffffd
10057cad:	mov    eax,0x7fffffff
10057cb2:	jmp    0x10057d75
10057cb7:	push   esi
10057cb8:	mov    esi,DWORD PTR [ebp+0xc]
10057cbb:	cmp    esi,ebx
10057cbd:	jne    0x10057ced
10057cbf:	call   0x100458a5
10057cc4:	push   ebx
10057cc5:	push   ebx
10057cc6:	push   ebx
10057cc7:	push   ebx
10057cc8:	push   ebx
10057cc9:	mov    DWORD PTR [eax],0x16
10057ccf:	call   0x1004228c
10057cd4:	add    esp,0x14
10057cd7:	cmp    BYTE PTR [ebp-0x8],bl
10057cda:	je     0x10057ce3
10057cdc:	mov    eax,DWORD PTR [ebp-0xc]
10057cdf:	and    DWORD PTR [eax+0x70],0xfffffffd
10057ce3:	mov    eax,0x7fffffff
10057ce8:	jmp    0x10057d74
10057ced:	push   edi
10057cee:	mov    edi,DWORD PTR [ebp-0x10]
10057cf1:	cmp    DWORD PTR [edi+0x8],ebx
10057cf4:	jne    0x10057d03
10057cf6:	push   esi
10057cf7:	push   DWORD PTR [ebp+0x8]
10057cfa:	call   0x10046650
10057cff:	pop    ecx
10057d00:	pop    ecx
10057d01:	jmp    0x10057d7e
10057d03:	mov    eax,DWORD PTR [ebp+0x8]
10057d06:	movzx  cx,BYTE PTR [eax]
10057d0a:	movzx  ecx,cx
10057d0d:	movzx  edx,cl
10057d10:	inc    eax
10057d11:	test   BYTE PTR [edx+edi*1+0x1d],0x4
10057d16:	mov    DWORD PTR [ebp+0x8],eax
10057d19:	je     0x10057d31
10057d1b:	mov    al,BYTE PTR [eax]
10057d1d:	cmp    al,bl
10057d1f:	jne    0x10057d25
10057d21:	xor    ecx,ecx
10057d23:	jmp    0x10057d31
10057d25:	xor    edx,edx
10057d27:	inc    DWORD PTR [ebp+0x8]
10057d2a:	mov    dh,cl
10057d2c:	mov    dl,al
10057d2e:	movzx  ecx,dx
10057d31:	movzx  ax,BYTE PTR [esi]
10057d35:	movzx  eax,ax
10057d38:	movzx  edx,al
10057d3b:	inc    esi
10057d3c:	test   BYTE PTR [edx+edi*1+0x1d],0x4
10057d41:	je     0x10057d5b
10057d43:	mov    dl,BYTE PTR [esi]
10057d45:	cmp    dl,bl
10057d47:	mov    BYTE PTR [ebp-0x1],dl
10057d4a:	jne    0x10057d50
10057d4c:	xor    eax,eax
10057d4e:	jmp    0x10057d5b
10057d50:	xor    edx,edx
10057d52:	mov    dh,al
10057d54:	inc    esi
10057d55:	mov    dl,BYTE PTR [ebp-0x1]
10057d58:	movzx  eax,dx
10057d5b:	cmp    ax,cx
10057d5e:	jne    0x10057d78
10057d60:	cmp    cx,bx
10057d63:	jne    0x10057d03
10057d65:	cmp    BYTE PTR [ebp-0x8],bl
10057d68:	je     0x10057d71
10057d6a:	mov    eax,DWORD PTR [ebp-0xc]
10057d6d:	and    DWORD PTR [eax+0x70],0xfffffffd
10057d71:	xor    eax,eax
10057d73:	pop    edi
10057d74:	pop    esi
10057d75:	pop    ebx
10057d76:	leave  
10057d77:	ret    
10057d78:	sbb    eax,eax
10057d7a:	and    eax,0x2
10057d7d:	dec    eax
10057d7e:	cmp    BYTE PTR [ebp-0x8],bl
10057d81:	je     0x10057d73
10057d83:	mov    ecx,DWORD PTR [ebp-0xc]
10057d86:	and    DWORD PTR [ecx+0x70],0xfffffffd
10057d8a:	jmp    0x10057d73
10057d8c:	push   0x0
10057d8e:	push   DWORD PTR [esp+0xc]
10057d92:	push   DWORD PTR [esp+0xc]
10057d96:	call   0x10057c70
10057d9b:	add    esp,0xc
10057d9e:	ret    
10057d9f:	push   ebp
10057da0:	mov    ebp,esp
10057da2:	sub    esp,0x20
10057da5:	push   ebx
10057da6:	xor    ebx,ebx
10057da8:	cmp    DWORD PTR [ebp+0x14],ebx
10057dab:	jne    0x10057dcd
10057dad:	call   0x100458a5
10057db2:	push   ebx
10057db3:	push   ebx
10057db4:	push   ebx
10057db5:	push   ebx
10057db6:	push   ebx
10057db7:	mov    DWORD PTR [eax],0x16
10057dbd:	call   0x1004228c
10057dc2:	add    esp,0x14
10057dc5:	or     eax,0xffffffff
10057dc8:	jmp    0x10057e66
10057dcd:	push   esi
10057dce:	mov    esi,DWORD PTR [ebp+0xc]
10057dd1:	push   edi
10057dd2:	mov    edi,DWORD PTR [ebp+0x10]
10057dd5:	cmp    edi,ebx
10057dd7:	je     0x10057dfa
10057dd9:	cmp    esi,ebx
10057ddb:	jne    0x10057dfa
10057ddd:	call   0x100458a5
10057de2:	push   ebx
10057de3:	push   ebx
10057de4:	push   ebx
10057de5:	push   ebx
10057de6:	push   ebx
10057de7:	mov    DWORD PTR [eax],0x16
10057ded:	call   0x1004228c
10057df2:	add    esp,0x14
10057df5:	or     eax,0xffffffff
10057df8:	jmp    0x10057e64
10057dfa:	mov    eax,0x7fffffff
10057dff:	cmp    edi,eax
10057e01:	mov    DWORD PTR [ebp-0x1c],eax
10057e04:	ja     0x10057e09
10057e06:	mov    DWORD PTR [ebp-0x1c],edi
10057e09:	push   DWORD PTR [ebp+0x1c]
10057e0c:	lea    eax,[ebp-0x20]
10057e0f:	push   DWORD PTR [ebp+0x18]
10057e12:	mov    DWORD PTR [ebp-0x14],0x42
10057e19:	push   DWORD PTR [ebp+0x14]
10057e1c:	mov    DWORD PTR [ebp-0x18],esi
10057e1f:	push   eax
10057e20:	mov    DWORD PTR [ebp-0x20],esi
10057e23:	call   DWORD PTR [ebp+0x8]
10057e26:	add    esp,0x10
10057e29:	cmp    esi,ebx
10057e2b:	mov    DWORD PTR [ebp+0x14],eax
10057e2e:	je     0x10057e64
10057e30:	cmp    eax,ebx
10057e32:	jl     0x10057e56
10057e34:	dec    DWORD PTR [ebp-0x1c]
10057e37:	js     0x10057e40
10057e39:	mov    eax,DWORD PTR [ebp-0x20]
10057e3c:	mov    BYTE PTR [eax],bl
10057e3e:	jmp    0x10057e51
10057e40:	lea    eax,[ebp-0x20]
10057e43:	push   eax
10057e44:	push   ebx
10057e45:	call   0x1004903c
10057e4a:	cmp    eax,0xffffffff
10057e4d:	pop    ecx
10057e4e:	pop    ecx
10057e4f:	je     0x10057e56
10057e51:	mov    eax,DWORD PTR [ebp+0x14]
10057e54:	jmp    0x10057e64
10057e56:	xor    eax,eax
10057e58:	cmp    DWORD PTR [ebp-0x1c],ebx
10057e5b:	mov    BYTE PTR [esi+edi*1-0x1],bl
10057e5f:	setge  al
10057e62:	dec    eax
10057e63:	dec    eax
10057e64:	pop    edi
10057e65:	pop    esi
10057e66:	pop    ebx
10057e67:	leave  
10057e68:	ret    
10057e69:	push   ebp
10057e6a:	mov    ebp,esp
10057e6c:	push   ebx
10057e6d:	xor    ebx,ebx
10057e6f:	cmp    DWORD PTR [ebp+0x10],ebx
10057e72:	jne    0x10057e91
10057e74:	call   0x100458a5
10057e79:	push   ebx
10057e7a:	push   ebx
10057e7b:	push   ebx
10057e7c:	push   ebx
10057e7d:	push   ebx
10057e7e:	mov    DWORD PTR [eax],0x16
10057e84:	call   0x1004228c
10057e89:	add    esp,0x14
10057e8c:	or     eax,0xffffffff
10057e8f:	jmp    0x10057eec
10057e91:	push   esi
10057e92:	mov    esi,DWORD PTR [ebp+0x8]
10057e95:	cmp    esi,ebx
10057e97:	je     0x10057e9e
10057e99:	cmp    DWORD PTR [ebp+0xc],ebx
10057e9c:	ja     0x10057eab
10057e9e:	call   0x100458a5
10057ea3:	mov    DWORD PTR [eax],0x16
10057ea9:	jmp    0x10057edb
10057eab:	push   DWORD PTR [ebp+0x18]
10057eae:	push   DWORD PTR [ebp+0x14]
10057eb1:	push   DWORD PTR [ebp+0x10]
10057eb4:	push   DWORD PTR [ebp+0xc]
10057eb7:	push   esi
10057eb8:	push   0x1004e923
10057ebd:	call   0x10057d9f
10057ec2:	add    esp,0x18
10057ec5:	cmp    eax,ebx
10057ec7:	jge    0x10057ecb
10057ec9:	mov    BYTE PTR [esi],bl
10057ecb:	cmp    eax,0xfffffffe
10057ece:	jne    0x10057eeb
10057ed0:	call   0x100458a5
10057ed5:	mov    DWORD PTR [eax],0x22
10057edb:	push   ebx
10057edc:	push   ebx
10057edd:	push   ebx
10057ede:	push   ebx
10057edf:	push   ebx
10057ee0:	call   0x1004228c
10057ee5:	add    esp,0x14
10057ee8:	or     eax,0xffffffff
10057eeb:	pop    esi
10057eec:	pop    ebx
10057eed:	pop    ebp
10057eee:	ret    
10057eef:	push   DWORD PTR [esp+0x10]
10057ef3:	push   0x0
10057ef5:	push   DWORD PTR [esp+0x14]
10057ef9:	push   DWORD PTR [esp+0x14]
10057efd:	push   DWORD PTR [esp+0x14]
10057f01:	call   0x10057e69
10057f06:	add    esp,0x14
10057f09:	ret    
10057f0a:	push   ebx
10057f0b:	push   esi
10057f0c:	mov    esi,DWORD PTR [esp+0xc]
10057f10:	xor    ebx,ebx
10057f12:	cmp    esi,ebx
10057f14:	jne    0x10057f32
10057f16:	call   0x100458a5
10057f1b:	push   ebx
10057f1c:	push   ebx
10057f1d:	push   ebx
10057f1e:	push   ebx
10057f1f:	push   ebx
10057f20:	mov    DWORD PTR [eax],0x16
10057f26:	call   0x1004228c
10057f2b:	add    esp,0x14
10057f2e:	xor    eax,eax
10057f30:	jmp    0x10057f48
10057f32:	movzx  eax,BYTE PTR [esi]
10057f35:	push   eax
10057f36:	call   0x1004db75
10057f3b:	inc    esi
10057f3c:	test   eax,eax
10057f3e:	pop    ecx
10057f3f:	je     0x10057f46
10057f41:	cmp    BYTE PTR [esi],bl
10057f43:	je     0x10057f46
10057f45:	inc    esi
10057f46:	mov    eax,esi
10057f48:	pop    esi
10057f49:	pop    ebx
10057f4a:	ret    
10057f4b:	push   DWORD PTR [esp+0x8]
10057f4f:	push   0x0
10057f51:	push   DWORD PTR [esp+0xc]
10057f55:	push   0x1004c72c
10057f5a:	call   0x10049b49
10057f5f:	add    esp,0x10
10057f62:	ret    
10057f63:	push   ebp
10057f64:	mov    ebp,esp
10057f66:	push   ecx
10057f67:	push   ebx
10057f68:	mov    eax,DWORD PTR [ebp+0xc]
10057f6b:	add    eax,0xc
10057f6e:	mov    DWORD PTR [ebp-0x4],eax
10057f71:	mov    ebx,DWORD PTR fs:0x0
10057f78:	mov    eax,DWORD PTR [ebx]
10057f7a:	mov    fs:0x0,eax
10057f80:	mov    eax,DWORD PTR [ebp+0x8]
10057f83:	mov    ebx,DWORD PTR [ebp+0xc]
10057f86:	mov    ebp,DWORD PTR [ebp-0x4]
10057f89:	mov    esp,DWORD PTR [ebx-0x4]
10057f8c:	jmp    eax
10057f8e:	pop    ebx
10057f8f:	leave  
10057f90:	ret    0x8
10057f93:	pop    eax
10057f94:	pop    ecx
10057f95:	xchg   DWORD PTR [esp],eax
10057f98:	jmp    eax
10057f9a:	push   ebp
10057f9b:	mov    ebp,esp
10057f9d:	push   ecx
10057f9e:	push   ecx
10057f9f:	push   ebx
10057fa0:	push   esi
10057fa1:	push   edi
10057fa2:	mov    esi,DWORD PTR fs:0x0
10057fa9:	mov    DWORD PTR [ebp-0x4],esi
10057fac:	mov    DWORD PTR [ebp-0x8],0x10057fc3
10057fb3:	push   0x0
10057fb5:	push   DWORD PTR [ebp+0xc]
10057fb8:	push   DWORD PTR [ebp-0x8]
10057fbb:	push   DWORD PTR [ebp+0x8]
10057fbe:	call   0x1005593e
10057fc3:	mov    eax,DWORD PTR [ebp+0xc]
10057fc6:	mov    eax,DWORD PTR [eax+0x4]
10057fc9:	and    eax,0xfffffffd
10057fcc:	mov    ecx,DWORD PTR [ebp+0xc]
10057fcf:	mov    DWORD PTR [ecx+0x4],eax
10057fd2:	mov    edi,DWORD PTR fs:0x0
10057fd9:	mov    ebx,DWORD PTR [ebp-0x4]
10057fdc:	mov    DWORD PTR [ebx],edi
10057fde:	mov    DWORD PTR fs:0x0,ebx
10057fe5:	pop    edi
10057fe6:	pop    esi
10057fe7:	pop    ebx
10057fe8:	leave  
10057fe9:	ret    0x8
10057fec:	push   ebp
10057fed:	mov    ebp,esp
10057fef:	sub    esp,0x8
10057ff2:	push   ebx
10057ff3:	push   esi
10057ff4:	push   edi
10057ff5:	cld    
10057ff6:	mov    DWORD PTR [ebp-0x4],eax
10057ff9:	xor    eax,eax
10057ffb:	push   eax
10057ffc:	push   eax
10057ffd:	push   eax
10057ffe:	push   DWORD PTR [ebp-0x4]
10058001:	push   DWORD PTR [ebp+0x14]
10058004:	push   DWORD PTR [ebp+0x10]
10058007:	push   DWORD PTR [ebp+0xc]
1005800a:	push   DWORD PTR [ebp+0x8]
1005800d:	call   0x1005a107
10058012:	add    esp,0x20
10058015:	mov    DWORD PTR [ebp-0x8],eax
10058018:	pop    edi
10058019:	pop    esi
1005801a:	pop    ebx
1005801b:	mov    eax,DWORD PTR [ebp-0x8]
1005801e:	mov    esp,ebp
10058020:	pop    ebp
10058021:	ret    
10058022:	push   esi
10058023:	cld    
10058024:	mov    esi,DWORD PTR [esp+0xc]
10058028:	mov    ecx,DWORD PTR [esi+0x8]
1005802b:	xor    ecx,esi
1005802d:	call   0x10041d97
10058032:	push   0x0
10058034:	push   esi
10058035:	push   DWORD PTR [esi+0x14]
10058038:	push   DWORD PTR [esi+0xc]
1005803b:	push   0x0
1005803d:	push   DWORD PTR [esp+0x24]
10058041:	push   DWORD PTR [esi+0x10]
10058044:	push   DWORD PTR [esp+0x24]
10058048:	call   0x1005a107
1005804d:	add    esp,0x20
10058050:	pop    esi
10058051:	ret    
10058052:	push   ebp
10058053:	mov    ebp,esp
10058055:	sub    esp,0x38
10058058:	push   ebx
10058059:	cmp    DWORD PTR [ebp+0x8],0x123
10058060:	jne    0x10058074
10058062:	mov    eax,0x100580fb
10058067:	mov    ecx,DWORD PTR [ebp+0xc]
1005806a:	mov    DWORD PTR [ecx],eax
1005806c:	xor    eax,eax
1005806e:	inc    eax
1005806f:	jmp    0x10058124
10058074:	and    DWORD PTR [ebp-0x28],0x0
10058078:	mov    DWORD PTR [ebp-0x24],0x10058127
1005807f:	mov    eax,ds:0x1007d030
10058084:	lea    ecx,[ebp-0x28]
10058087:	xor    eax,ecx
10058089:	mov    DWORD PTR [ebp-0x20],eax
1005808c:	mov    eax,DWORD PTR [ebp+0x18]
1005808f:	mov    DWORD PTR [ebp-0x1c],eax
10058092:	mov    eax,DWORD PTR [ebp+0xc]
10058095:	mov    DWORD PTR [ebp-0x18],eax
10058098:	mov    eax,DWORD PTR [ebp+0x1c]
1005809b:	mov    DWORD PTR [ebp-0x14],eax
1005809e:	mov    eax,DWORD PTR [ebp+0x20]
100580a1:	mov    DWORD PTR [ebp-0x10],eax
100580a4:	and    DWORD PTR [ebp-0xc],0x0
100580a8:	and    DWORD PTR [ebp-0x8],0x0
100580ac:	and    DWORD PTR [ebp-0x4],0x0
100580b0:	mov    DWORD PTR [ebp-0xc],esp
100580b3:	mov    DWORD PTR [ebp-0x8],ebp
100580b6:	mov    eax,fs:0x0
100580bc:	mov    DWORD PTR [ebp-0x28],eax
100580bf:	lea    eax,[ebp-0x28]
100580c2:	mov    fs:0x0,eax
100580c8:	mov    DWORD PTR [ebp-0x38],0x1
100580cf:	mov    eax,DWORD PTR [ebp+0x8]
100580d2:	mov    DWORD PTR [ebp-0x34],eax
100580d5:	mov    eax,DWORD PTR [ebp+0x10]
100580d8:	mov    DWORD PTR [ebp-0x30],eax
100580db:	call   0x10045e4c
100580e0:	mov    eax,DWORD PTR [eax+0x80]
100580e6:	mov    DWORD PTR [ebp-0x2c],eax
100580e9:	lea    eax,[ebp-0x34]
100580ec:	push   eax
100580ed:	mov    eax,DWORD PTR [ebp+0x8]
100580f0:	push   DWORD PTR [eax]
100580f2:	call   DWORD PTR [ebp-0x2c]
100580f5:	pop    ecx
100580f6:	pop    ecx
100580f7:	and    DWORD PTR [ebp-0x38],0x0
100580fb:	cmp    DWORD PTR [ebp-0x4],0x0
100580ff:	je     0x10058118
10058101:	mov    ebx,DWORD PTR fs:0x0
10058108:	mov    eax,DWORD PTR [ebx]
1005810a:	mov    ebx,DWORD PTR [ebp-0x28]
1005810d:	mov    DWORD PTR [ebx],eax
1005810f:	mov    DWORD PTR fs:0x0,ebx
10058116:	jmp    0x10058121
10058118:	mov    eax,DWORD PTR [ebp-0x28]
1005811b:	mov    fs:0x0,eax
10058121:	mov    eax,DWORD PTR [ebp-0x38]
10058124:	pop    ebx
10058125:	leave  
10058126:	ret    
10058127:	push   ebp
10058128:	mov    ebp,esp
1005812a:	push   ecx
1005812b:	push   ebx
1005812c:	cld    
1005812d:	mov    eax,DWORD PTR [ebp+0xc]
10058130:	mov    ecx,DWORD PTR [eax+0x8]
10058133:	xor    ecx,DWORD PTR [ebp+0xc]
10058136:	call   0x10041d97
1005813b:	mov    eax,DWORD PTR [ebp+0x8]
1005813e:	mov    eax,DWORD PTR [eax+0x4]
10058141:	and    eax,0x66
10058144:	je     0x10058157
10058146:	mov    eax,DWORD PTR [ebp+0xc]
10058149:	mov    DWORD PTR [eax+0x24],0x1
10058150:	xor    eax,eax
10058152:	inc    eax
10058153:	jmp    0x100581c1
10058155:	jmp    0x100581c1
10058157:	push   0x1
10058159:	mov    eax,DWORD PTR [ebp+0xc]
1005815c:	push   DWORD PTR [eax+0x18]
1005815f:	mov    eax,DWORD PTR [ebp+0xc]
10058162:	push   DWORD PTR [eax+0x14]
10058165:	mov    eax,DWORD PTR [ebp+0xc]
10058168:	push   DWORD PTR [eax+0xc]
1005816b:	push   0x0
1005816d:	push   DWORD PTR [ebp+0x10]
10058170:	mov    eax,DWORD PTR [ebp+0xc]
10058173:	push   DWORD PTR [eax+0x10]
10058176:	push   DWORD PTR [ebp+0x8]
10058179:	call   0x1005a107
1005817e:	add    esp,0x20
10058181:	mov    eax,DWORD PTR [ebp+0xc]
10058184:	cmp    DWORD PTR [eax+0x24],0x0
10058188:	jne    0x10058195
1005818a:	push   DWORD PTR [ebp+0x8]
1005818d:	push   DWORD PTR [ebp+0xc]
10058190:	call   0x10057f9a
10058195:	push   0x0
10058197:	push   0x0
10058199:	push   0x0
1005819b:	push   0x0
1005819d:	push   0x0
1005819f:	lea    eax,[ebp-0x4]
100581a2:	push   eax
100581a3:	push   0x123
100581a8:	call   0x10058052
100581ad:	add    esp,0x1c
100581b0:	mov    eax,DWORD PTR [ebp-0x4]
100581b3:	mov    ebx,DWORD PTR [ebp+0xc]
100581b6:	mov    esp,DWORD PTR [ebx+0x1c]
100581b9:	mov    ebp,DWORD PTR [ebx+0x20]
100581bc:	jmp    eax
100581be:	xor    eax,eax
100581c0:	inc    eax
100581c1:	pop    ebx
100581c2:	leave  
100581c3:	ret    
100581c4:	push   ebp
100581c5:	mov    ebp,esp
100581c7:	push   ecx
100581c8:	push   ebx
100581c9:	push   esi
100581ca:	push   edi
100581cb:	mov    edi,DWORD PTR [ebp+0x8]
100581ce:	mov    eax,DWORD PTR [edi+0x10]
100581d1:	mov    esi,DWORD PTR [edi+0xc]
100581d4:	mov    DWORD PTR [ebp-0x4],eax
100581d7:	mov    ebx,esi
100581d9:	jmp    0x10058208
100581db:	cmp    esi,0xffffffff
100581de:	jne    0x100581e5
100581e0:	call   0x1004599a
100581e5:	mov    ecx,DWORD PTR [ebp-0x4]
100581e8:	dec    esi
100581e9:	mov    eax,esi
100581eb:	imul   eax,eax,0x14
100581ee:	add    eax,ecx
100581f0:	mov    ecx,DWORD PTR [ebp+0x10]
100581f3:	cmp    DWORD PTR [eax+0x4],ecx
100581f6:	jge    0x100581fd
100581f8:	cmp    ecx,DWORD PTR [eax+0x8]
100581fb:	jle    0x10058202
100581fd:	cmp    esi,0xffffffff
10058200:	jne    0x1005820b
10058202:	dec    DWORD PTR [ebp+0xc]
10058205:	mov    ebx,DWORD PTR [ebp+0x8]
10058208:	mov    DWORD PTR [ebp+0x8],esi
1005820b:	cmp    DWORD PTR [ebp+0xc],0x0
1005820f:	jge    0x100581db
10058211:	mov    eax,DWORD PTR [ebp+0x14]
10058214:	inc    esi
10058215:	mov    DWORD PTR [eax],esi
10058217:	mov    eax,DWORD PTR [ebp+0x18]
1005821a:	mov    DWORD PTR [eax],ebx
1005821c:	cmp    ebx,DWORD PTR [edi+0xc]
1005821f:	ja     0x10058225
10058221:	cmp    esi,ebx
10058223:	jbe    0x1005822a
10058225:	call   0x1004599a
1005822a:	mov    eax,esi
1005822c:	imul   eax,eax,0x14
1005822f:	add    eax,DWORD PTR [ebp-0x4]
10058232:	pop    edi
10058233:	pop    esi
10058234:	pop    ebx
10058235:	leave  
10058236:	ret    
10058237:	mov    eax,DWORD PTR [esp+0x8]
1005823b:	push   esi
1005823c:	mov    esi,DWORD PTR [esp+0x8]
10058240:	mov    DWORD PTR [esi],eax
10058242:	call   0x10045e4c
10058247:	mov    eax,DWORD PTR [eax+0x98]
1005824d:	mov    DWORD PTR [esi+0x4],eax
10058250:	call   0x10045e4c
10058255:	mov    DWORD PTR [eax+0x98],esi
1005825b:	mov    eax,esi
1005825d:	pop    esi
1005825e:	ret    
1005825f:	call   0x10045e4c
10058264:	mov    eax,DWORD PTR [eax+0x98]
1005826a:	jmp    0x10058277
1005826c:	mov    ecx,DWORD PTR [eax]
1005826e:	cmp    ecx,DWORD PTR [esp+0x4]
10058272:	je     0x1005827d
10058274:	mov    eax,DWORD PTR [eax+0x4]
10058277:	test   eax,eax
10058279:	jne    0x1005826c
1005827b:	inc    eax
1005827c:	ret    
1005827d:	xor    eax,eax
1005827f:	ret    
10058280:	push   esi
10058281:	call   0x10045e4c
10058286:	mov    esi,DWORD PTR [esp+0x8]
1005828a:	cmp    esi,DWORD PTR [eax+0x98]
10058290:	jne    0x100582a2
10058292:	call   0x10045e4c
10058297:	mov    ecx,DWORD PTR [esi+0x4]
1005829a:	mov    DWORD PTR [eax+0x98],ecx
100582a0:	pop    esi
100582a1:	ret    
100582a2:	call   0x10045e4c
100582a7:	mov    eax,DWORD PTR [eax+0x98]
100582ad:	jmp    0x100582b8
100582af:	mov    ecx,DWORD PTR [eax+0x4]
100582b2:	cmp    esi,ecx
100582b4:	je     0x100582c4
100582b6:	mov    eax,ecx
100582b8:	cmp    DWORD PTR [eax+0x4],0x0
100582bc:	jne    0x100582af
100582be:	pop    esi
100582bf:	jmp    0x1004599a
100582c4:	mov    ecx,DWORD PTR [esi+0x4]
100582c7:	mov    DWORD PTR [eax+0x4],ecx
100582ca:	pop    esi
100582cb:	ret    
100582cc:	push   ebp
100582cd:	mov    ebp,esp
100582cf:	sub    esp,0x18
100582d2:	mov    eax,ds:0x1007d030
100582d7:	and    DWORD PTR [ebp-0x18],0x0
100582db:	lea    ecx,[ebp-0x18]
100582de:	xor    eax,ecx
100582e0:	mov    ecx,DWORD PTR [ebp+0x8]
100582e3:	mov    DWORD PTR [ebp-0x10],eax
100582e6:	mov    eax,DWORD PTR [ebp+0xc]
100582e9:	mov    DWORD PTR [ebp-0xc],eax
100582ec:	mov    eax,DWORD PTR [ebp+0x14]
100582ef:	inc    eax
100582f0:	mov    DWORD PTR [ebp-0x14],0x10058022
100582f7:	mov    DWORD PTR [ebp-0x8],ecx
100582fa:	mov    DWORD PTR [ebp-0x4],eax
100582fd:	mov    eax,fs:0x0
10058303:	mov    DWORD PTR [ebp-0x18],eax
10058306:	lea    eax,[ebp-0x18]
10058309:	mov    fs:0x0,eax
1005830f:	push   DWORD PTR [ebp+0x18]
10058312:	push   ecx
10058313:	push   DWORD PTR [ebp+0x10]
10058316:	call   0x1005a1f0
1005831b:	mov    ecx,eax
1005831d:	mov    eax,DWORD PTR [ebp-0x18]
10058320:	mov    fs:0x0,eax
10058326:	mov    eax,ecx
10058328:	leave  
10058329:	ret    
1005832a:	mov    eax,0x1005acc9
1005832f:	mov    ds:0x1007da80,eax
10058334:	mov    DWORD PTR ds:0x1007da84,0x1005a3c5
1005833e:	mov    DWORD PTR ds:0x1007da88,0x1005a383
10058348:	mov    DWORD PTR ds:0x1007da8c,0x1005a3b7
10058352:	mov    DWORD PTR ds:0x1007da90,0x1005a32d
1005835c:	mov    ds:0x1007da94,eax
10058361:	mov    DWORD PTR ds:0x1007da98,0x1005ac43
1005836b:	mov    DWORD PTR ds:0x1007da9c,0x1005a343
10058375:	mov    DWORD PTR ds:0x1007daa0,0x1005a2ad
1005837f:	mov    DWORD PTR ds:0x1007daa4,0x1005a23c
10058389:	ret    
1005838a:	call   0x1005832a
1005838f:	call   0x1005ad4f
10058394:	cmp    DWORD PTR [esp+0x4],0x0
10058399:	mov    ds:0x1007faac,eax
1005839e:	je     0x100583a5
100583a0:	call   0x1005acea
100583a5:	fnclex 
100583a7:	ret    
100583a8:	push   0x18
100583aa:	push   0x10073620
100583af:	call   0x100459e4
100583b4:	mov    eax,DWORD PTR [ebp+0x8]
100583b7:	mov    DWORD PTR [ebp-0x1c],eax
100583ba:	mov    DWORD PTR [ebp-0x20],eax
100583bd:	xor    ebx,ebx
100583bf:	cmp    eax,ebx
100583c1:	jne    0x100583e7
100583c3:	cmp    DWORD PTR [ebp+0xc],ebx
100583c6:	je     0x100583e7
100583c8:	call   0x100458a5
100583cd:	mov    DWORD PTR [eax],0x16
100583d3:	push   ebx
100583d4:	push   ebx
100583d5:	push   ebx
100583d6:	push   ebx
100583d7:	push   ebx
100583d8:	call   0x1004228c
100583dd:	add    esp,0x14
100583e0:	xor    eax,eax
100583e2:	jmp    0x1005851e
100583e7:	xor    eax,eax
100583e9:	cmp    DWORD PTR [ebp+0xc],ebx
100583ec:	setge  al
100583ef:	cmp    eax,ebx
100583f1:	je     0x100583c8
100583f3:	xor    eax,eax
100583f5:	mov    esi,DWORD PTR [ebp+0x10]
100583f8:	cmp    esi,ebx
100583fa:	setne  al
100583fd:	cmp    eax,ebx
100583ff:	je     0x100583c8
10058401:	cmp    DWORD PTR [ebp+0xc],ebx
10058404:	je     0x100583e0
10058406:	mov    edi,esi
10058408:	mov    DWORD PTR [ebp-0x24],edi
1005840b:	push   esi
1005840c:	call   0x1004c426
10058411:	pop    ecx
10058412:	mov    DWORD PTR [ebp-0x4],ebx
10058415:	test   BYTE PTR [esi+0xc],0x40
10058419:	jne    0x100584c9
1005841f:	push   esi
10058420:	call   0x1004c4ca
10058425:	pop    ecx
10058426:	cmp    eax,0xffffffff
10058429:	je     0x1005845b
1005842b:	push   esi
1005842c:	call   0x1004c4ca
10058431:	pop    ecx
10058432:	cmp    eax,0xfffffffe
10058435:	je     0x1005845b
10058437:	push   esi
10058438:	call   0x1004c4ca
1005843d:	sar    eax,0x5
10058440:	lea    edi,[eax*4+0x10081460]
10058447:	push   esi
10058448:	call   0x1004c4ca
1005844d:	pop    ecx
1005844e:	pop    ecx
1005844f:	and    eax,0x1f
10058452:	imul   eax,eax,0x28
10058455:	add    eax,DWORD PTR [edi]
10058457:	mov    edi,esi
10058459:	jmp    0x10058460
1005845b:	mov    eax,0x1007d9d0
10058460:	test   BYTE PTR [eax+0x24],0x7f
10058464:	jne    0x100584ae
10058466:	push   esi
10058467:	call   0x1004c4ca
1005846c:	pop    ecx
1005846d:	cmp    eax,0xffffffff
10058470:	je     0x100584a3
10058472:	push   esi
10058473:	call   0x1004c4ca
10058478:	pop    ecx
10058479:	cmp    eax,0xfffffffe
1005847c:	je     0x100584a3
1005847e:	push   esi
1005847f:	call   0x1004c4ca
10058484:	sar    eax,0x5
10058487:	lea    edi,[eax*4+0x10081460]
1005848e:	push   esi
1005848f:	call   0x1004c4ca
10058494:	pop    ecx
10058495:	pop    ecx
10058496:	and    eax,0x1f
10058499:	imul   eax,eax,0x28
1005849c:	add    eax,DWORD PTR [edi]
1005849e:	mov    edi,DWORD PTR [ebp-0x24]
100584a1:	jmp    0x100584a8
100584a3:	mov    eax,0x1007d9d0
100584a8:	test   BYTE PTR [eax+0x24],0x80
100584ac:	je     0x100584c9
100584ae:	call   0x100458a5
100584b3:	mov    DWORD PTR [eax],0x16
100584b9:	push   ebx
100584ba:	push   ebx
100584bb:	push   ebx
100584bc:	push   ebx
100584bd:	push   ebx
100584be:	call   0x1004228c
100584c3:	add    esp,0x14
100584c6:	mov    DWORD PTR [ebp-0x20],ebx
100584c9:	cmp    DWORD PTR [ebp-0x20],ebx
100584cc:	je     0x1005850f
100584ce:	dec    DWORD PTR [ebp+0xc]
100584d1:	je     0x1005850a
100584d3:	dec    DWORD PTR [edi+0x4]
100584d6:	js     0x100584e2
100584d8:	mov    ecx,DWORD PTR [edi]
100584da:	movzx  eax,BYTE PTR [ecx]
100584dd:	inc    ecx
100584de:	mov    DWORD PTR [edi],ecx
100584e0:	jmp    0x100584e9
100584e2:	push   edi
100584e3:	call   0x1005ad78
100584e8:	pop    ecx
100584e9:	mov    DWORD PTR [ebp-0x28],eax
100584ec:	cmp    eax,0xffffffff
100584ef:	jne    0x100584fe
100584f1:	mov    eax,DWORD PTR [ebp-0x1c]
100584f4:	cmp    eax,DWORD PTR [ebp+0x8]
100584f7:	jne    0x1005850d
100584f9:	mov    DWORD PTR [ebp-0x20],ebx
100584fc:	jmp    0x1005850f
100584fe:	mov    ecx,DWORD PTR [ebp-0x1c]
10058501:	mov    BYTE PTR [ecx],al
10058503:	inc    DWORD PTR [ebp-0x1c]
10058506:	cmp    al,0xa
10058508:	jne    0x100584ce
1005850a:	mov    eax,DWORD PTR [ebp-0x1c]
1005850d:	mov    BYTE PTR [eax],bl
1005850f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10058516:	call   0x10058527
1005851b:	mov    eax,DWORD PTR [ebp-0x20]
1005851e:	call   0x10045a29
10058523:	ret    
10058524:	mov    edi,DWORD PTR [ebp-0x24]
10058527:	push   edi
10058528:	call   0x1004c478
1005852d:	pop    ecx
1005852e:	ret    
1005852f:	push   ebp
10058530:	mov    ebp,esp
10058532:	sub    esp,0x20
10058535:	push   ebx
10058536:	xor    ebx,ebx
10058538:	cmp    DWORD PTR [ebp+0x10],ebx
1005853b:	jne    0x1005855a
1005853d:	call   0x100458a5
10058542:	push   ebx
10058543:	push   ebx
10058544:	push   ebx
10058545:	push   ebx
10058546:	push   ebx
10058547:	mov    DWORD PTR [eax],0x16
1005854d:	call   0x1004228c
10058552:	add    esp,0x14
10058555:	or     eax,0xffffffff
10058558:	jmp    0x100585d9
1005855a:	mov    ecx,DWORD PTR [ebp+0xc]
1005855d:	cmp    ecx,ebx
1005855f:	push   esi
10058560:	mov    esi,DWORD PTR [ebp+0x8]
10058563:	je     0x10058586
10058565:	cmp    esi,ebx
10058567:	jne    0x10058586
10058569:	call   0x100458a5
1005856e:	push   ebx
1005856f:	push   ebx
10058570:	push   ebx
10058571:	push   ebx
10058572:	push   ebx
10058573:	mov    DWORD PTR [eax],0x16
10058579:	call   0x1004228c
1005857e:	add    esp,0x14
10058581:	or     eax,0xffffffff
10058584:	jmp    0x100585d8
10058586:	mov    eax,0x7fffffff
1005858b:	cmp    ecx,eax
1005858d:	mov    DWORD PTR [ebp-0x1c],eax
10058590:	ja     0x10058595
10058592:	mov    DWORD PTR [ebp-0x1c],ecx
10058595:	push   edi
10058596:	lea    eax,[ebp+0x14]
10058599:	push   eax
1005859a:	push   ebx
1005859b:	push   DWORD PTR [ebp+0x10]
1005859e:	lea    eax,[ebp-0x20]
100585a1:	push   eax
100585a2:	mov    DWORD PTR [ebp-0x14],0x42
100585a9:	mov    DWORD PTR [ebp-0x18],esi
100585ac:	mov    DWORD PTR [ebp-0x20],esi
100585af:	call   0x1004c72c
100585b4:	add    esp,0x10
100585b7:	cmp    esi,ebx
100585b9:	mov    edi,eax
100585bb:	je     0x100585d7
100585bd:	dec    DWORD PTR [ebp-0x1c]
100585c0:	js     0x100585c9
100585c2:	mov    eax,DWORD PTR [ebp-0x20]
100585c5:	mov    BYTE PTR [eax],bl
100585c7:	jmp    0x100585d5
100585c9:	lea    eax,[ebp-0x20]
100585cc:	push   eax
100585cd:	push   ebx
100585ce:	call   0x1004903c
100585d3:	pop    ecx
100585d4:	pop    ecx
100585d5:	mov    eax,edi
100585d7:	pop    edi
100585d8:	pop    esi
100585d9:	pop    ebx
100585da:	leave  
100585db:	ret    
100585dc:	int3   
100585dd:	int3   
100585de:	int3   
100585df:	int3   
100585e0:	mov    ecx,DWORD PTR [esp+0xc]
100585e4:	push   edi
100585e5:	test   ecx,ecx
100585e7:	je     0x1005867f
100585ed:	push   esi
100585ee:	push   ebx
100585ef:	mov    ebx,ecx
100585f1:	mov    esi,DWORD PTR [esp+0x14]
100585f5:	test   esi,0x3
100585fb:	mov    edi,DWORD PTR [esp+0x10]
100585ff:	jne    0x1005860c
10058601:	shr    ecx,0x2
10058604:	jne    0x1005868f
1005860a:	jmp    0x10058633
1005860c:	mov    al,BYTE PTR [esi]
1005860e:	add    esi,0x1
10058611:	mov    BYTE PTR [edi],al
10058613:	add    edi,0x1
10058616:	sub    ecx,0x1
10058619:	je     0x10058646
1005861b:	test   al,al
1005861d:	je     0x1005864e
1005861f:	test   esi,0x3
10058625:	jne    0x1005860c
10058627:	mov    ebx,ecx
10058629:	shr    ecx,0x2
1005862c:	jne    0x1005868f
1005862e:	and    ebx,0x3
10058631:	je     0x10058646
10058633:	mov    al,BYTE PTR [esi]
10058635:	add    esi,0x1
10058638:	mov    BYTE PTR [edi],al
1005863a:	add    edi,0x1
1005863d:	test   al,al
1005863f:	je     0x10058678
10058641:	sub    ebx,0x1
10058644:	jne    0x10058633
10058646:	mov    eax,DWORD PTR [esp+0x10]
1005864a:	pop    ebx
1005864b:	pop    esi
1005864c:	pop    edi
1005864d:	ret    
1005864e:	test   edi,0x3
10058654:	je     0x1005866c
10058656:	mov    BYTE PTR [edi],al
10058658:	add    edi,0x1
1005865b:	sub    ecx,0x1
1005865e:	je     0x100586fc
10058664:	test   edi,0x3
1005866a:	jne    0x10058656
1005866c:	mov    ebx,ecx
1005866e:	shr    ecx,0x2
10058671:	jne    0x100586e7
10058673:	mov    BYTE PTR [edi],al
10058675:	add    edi,0x1
10058678:	sub    ebx,0x1
1005867b:	jne    0x10058673
1005867d:	pop    ebx
1005867e:	pop    esi
1005867f:	mov    eax,DWORD PTR [esp+0x8]
10058683:	pop    edi
10058684:	ret    
10058685:	mov    DWORD PTR [edi],edx
10058687:	add    edi,0x4
1005868a:	sub    ecx,0x1
1005868d:	je     0x1005862e
1005868f:	mov    edx,0x7efefeff
10058694:	mov    eax,DWORD PTR [esi]
10058696:	add    edx,eax
10058698:	xor    eax,0xffffffff
1005869b:	xor    eax,edx
1005869d:	mov    edx,DWORD PTR [esi]
1005869f:	add    esi,0x4
100586a2:	test   eax,0x81010100
100586a7:	je     0x10058685
100586a9:	test   dl,dl
100586ab:	je     0x100586d9
100586ad:	test   dh,dh
100586af:	je     0x100586cf
100586b1:	test   edx,0xff0000
100586b7:	je     0x100586c5
100586b9:	test   edx,0xff000000
100586bf:	jne    0x10058685
100586c1:	mov    DWORD PTR [edi],edx
100586c3:	jmp    0x100586dd
100586c5:	and    edx,0xffff
100586cb:	mov    DWORD PTR [edi],edx
100586cd:	jmp    0x100586dd
100586cf:	and    edx,0xff
100586d5:	mov    DWORD PTR [edi],edx
100586d7:	jmp    0x100586dd
100586d9:	xor    edx,edx
100586db:	mov    DWORD PTR [edi],edx
100586dd:	add    edi,0x4
100586e0:	xor    eax,eax
100586e2:	sub    ecx,0x1
100586e5:	je     0x100586f3
100586e7:	xor    eax,eax
100586e9:	mov    DWORD PTR [edi],eax
100586eb:	add    edi,0x4
100586ee:	sub    ecx,0x1
100586f1:	jne    0x100586e9
100586f3:	and    ebx,0x3
100586f6:	jne    0x10058673
100586fc:	mov    eax,DWORD PTR [esp+0x10]
10058700:	pop    ebx
10058701:	pop    esi
10058702:	pop    edi
10058703:	ret    
10058704:	int3   
10058705:	int3   
10058706:	int3   
10058707:	int3   
10058708:	int3   
10058709:	int3   
1005870a:	int3   
1005870b:	int3   
1005870c:	int3   
1005870d:	int3   
1005870e:	int3   
1005870f:	int3   
10058710:	push   ebp
10058711:	mov    ebp,esp
10058713:	push   edi
10058714:	mov    edi,DWORD PTR [ebp+0x8]
10058717:	xor    eax,eax
10058719:	or     ecx,0xffffffff
1005871c:	repnz scas al,BYTE PTR es:[edi]
1005871e:	add    ecx,0x1
10058721:	neg    ecx
10058723:	sub    edi,0x1
10058726:	mov    al,BYTE PTR [ebp+0xc]
10058729:	std    
1005872a:	repnz scas al,BYTE PTR es:[edi]
1005872c:	add    edi,0x1
1005872f:	cmp    BYTE PTR [edi],al
10058731:	je     0x10058737
10058733:	xor    eax,eax
10058735:	jmp    0x10058739
10058737:	mov    eax,edi
10058739:	cld    
1005873a:	pop    edi
1005873b:	leave  
1005873c:	ret    
1005873d:	push   ebp
1005873e:	mov    ebp,esp
10058740:	push   ecx
10058741:	push   ecx
10058742:	mov    eax,DWORD PTR [ebp+0xc]
10058745:	push   ebx
10058746:	xor    ebx,ebx
10058748:	cmp    eax,ebx
1005874a:	push   esi
1005874b:	push   edi
1005874c:	je     0x10058833
10058752:	cmp    BYTE PTR [eax],bl
10058754:	je     0x10058833
1005875a:	cmp    DWORD PTR [ebp+0x8],ebx
1005875d:	mov    esi,DWORD PTR ds:0x1006505c
10058763:	jne    0x100587c0
10058765:	push   ebx
10058766:	push   ebx
10058767:	push   ebx
10058768:	push   eax
10058769:	call   esi
1005876b:	cmp    eax,ebx
1005876d:	jne    0x10058782
1005876f:	call   DWORD PTR ds:0x100650c4
10058775:	push   eax
10058776:	call   0x100458cb
1005877b:	xor    eax,eax
1005877d:	jmp    0x1005883f
10058782:	mov    edi,DWORD PTR [ebp+0x10]
10058785:	cmp    edi,eax
10058787:	ja     0x1005878b
10058789:	mov    edi,eax
1005878b:	cmp    edi,0xffffffff
1005878e:	jbe    0x100587a2
10058790:	call   0x100458a5
10058795:	mov    DWORD PTR [eax],0x16
1005879b:	xor    eax,eax
1005879d:	jmp    0x10058840
100587a2:	push   0x1
100587a4:	push   edi
100587a5:	call   0x100425b4
100587aa:	cmp    eax,ebx
100587ac:	pop    ecx
100587ad:	pop    ecx
100587ae:	mov    DWORD PTR [ebp-0x4],eax
100587b1:	jne    0x100587e7
100587b3:	call   0x100458a5
100587b8:	mov    DWORD PTR [eax],0xc
100587be:	jmp    0x1005879b
100587c0:	mov    edi,DWORD PTR [ebp+0x10]
100587c3:	cmp    edi,ebx
100587c5:	ja     0x100587e1
100587c7:	call   0x100458a5
100587cc:	push   ebx
100587cd:	push   ebx
100587ce:	push   ebx
100587cf:	push   ebx
100587d0:	push   ebx
100587d1:	mov    DWORD PTR [eax],0x16
100587d7:	call   0x1004228c
100587dc:	add    esp,0x14
100587df:	jmp    0x1005879b
100587e1:	mov    eax,DWORD PTR [ebp+0x8]
100587e4:	mov    DWORD PTR [ebp-0x4],eax
100587e7:	lea    eax,[ebp-0x8]
100587ea:	push   eax
100587eb:	push   DWORD PTR [ebp-0x4]
100587ee:	push   edi
100587ef:	push   DWORD PTR [ebp+0xc]
100587f2:	call   esi
100587f4:	cmp    eax,edi
100587f6:	jb     0x10058813
100587f8:	cmp    DWORD PTR [ebp+0x8],ebx
100587fb:	jne    0x10058806
100587fd:	push   DWORD PTR [ebp-0x4]
10058800:	call   0x10042408
10058805:	pop    ecx
10058806:	call   0x100458a5
1005880b:	mov    DWORD PTR [eax],0x22
10058811:	jmp    0x1005879b
10058813:	cmp    eax,ebx
10058815:	jne    0x1005882e
10058817:	cmp    DWORD PTR [ebp+0x8],ebx
1005881a:	jne    0x1005876f
10058820:	push   DWORD PTR [ebp-0x4]
10058823:	call   0x10042408
10058828:	pop    ecx
10058829:	jmp    0x1005876f
1005882e:	mov    eax,DWORD PTR [ebp-0x4]
10058831:	jmp    0x10058840
10058833:	push   DWORD PTR [ebp+0x10]
10058836:	push   DWORD PTR [ebp+0x8]
10058839:	call   0x1005b004
1005883e:	pop    ecx
1005883f:	pop    ecx
10058840:	pop    edi
10058841:	pop    esi
10058842:	pop    ebx
10058843:	leave  
10058844:	ret    
10058845:	push   eax
10058846:	push   DWORD PTR fs:0x0
1005884d:	lea    eax,[esp+0xc]
10058851:	sub    esp,DWORD PTR [esp+0xc]
10058855:	push   ebx
10058856:	push   esi
10058857:	push   edi
10058858:	mov    DWORD PTR [eax],ebp
1005885a:	mov    ebp,eax
1005885c:	mov    eax,ds:0x1007d030
10058861:	xor    eax,ebp
10058863:	push   eax
10058864:	push   DWORD PTR [ebp-0x4]
10058867:	mov    DWORD PTR [ebp-0x4],0xffffffff
1005886e:	lea    eax,[ebp-0xc]
10058871:	mov    fs:0x0,eax
10058877:	ret    
10058878:	push   eax
10058879:	push   DWORD PTR fs:0x0
10058880:	lea    eax,[esp+0xc]
10058884:	sub    esp,DWORD PTR [esp+0xc]
10058888:	push   ebx
10058889:	push   esi
1005888a:	push   edi
1005888b:	mov    DWORD PTR [eax],ebp
1005888d:	mov    ebp,eax
1005888f:	mov    eax,ds:0x1007d030
10058894:	xor    eax,ebp
10058896:	push   eax
10058897:	mov    DWORD PTR [ebp-0x10],esp
1005889a:	push   DWORD PTR [ebp-0x4]
1005889d:	mov    DWORD PTR [ebp-0x4],0xffffffff
100588a4:	lea    eax,[ebp-0xc]
100588a7:	mov    fs:0x0,eax
100588ad:	ret    
100588ae:	push   eax
100588af:	push   DWORD PTR fs:0x0
100588b6:	lea    eax,[esp+0xc]
100588ba:	sub    esp,DWORD PTR [esp+0xc]
100588be:	push   ebx
100588bf:	push   esi
100588c0:	push   edi
100588c1:	mov    DWORD PTR [eax],ebp
100588c3:	mov    ebp,eax
100588c5:	mov    eax,ds:0x1007d030
100588ca:	xor    eax,ebp
100588cc:	push   eax
100588cd:	mov    DWORD PTR [ebp-0x10],eax
100588d0:	push   DWORD PTR [ebp-0x4]
100588d3:	mov    DWORD PTR [ebp-0x4],0xffffffff
100588da:	lea    eax,[ebp-0xc]
100588dd:	mov    fs:0x0,eax
100588e3:	ret    
100588e4:	push   eax
100588e5:	push   DWORD PTR fs:0x0
100588ec:	lea    eax,[esp+0xc]
100588f0:	sub    esp,DWORD PTR [esp+0xc]
100588f4:	push   ebx
100588f5:	push   esi
100588f6:	push   edi
100588f7:	mov    DWORD PTR [eax],ebp
100588f9:	mov    ebp,eax
100588fb:	mov    eax,ds:0x1007d030
10058900:	xor    eax,ebp
10058902:	push   eax
10058903:	mov    DWORD PTR [ebp-0x14],eax
10058906:	mov    DWORD PTR [ebp-0x10],esp
10058909:	push   DWORD PTR [ebp-0x4]
1005890c:	mov    DWORD PTR [ebp-0x4],0xffffffff
10058913:	lea    eax,[ebp-0xc]
10058916:	mov    fs:0x0,eax
1005891c:	ret    
1005891d:	mov    ecx,DWORD PTR [ebp-0xc]
10058920:	mov    DWORD PTR fs:0x0,ecx
10058927:	pop    ecx
10058928:	pop    edi
10058929:	pop    edi
1005892a:	pop    esi
1005892b:	pop    ebx
1005892c:	mov    esp,ebp
1005892e:	pop    ebp
1005892f:	push   ecx
10058930:	ret    
10058931:	mov    ecx,DWORD PTR [ebp-0x10]
10058934:	xor    ecx,ebp
10058936:	call   0x10041d97
1005893b:	jmp    0x1005891d
10058940:	mov    ecx,DWORD PTR [ebp-0x14]
10058943:	xor    ecx,ebp
10058945:	call   0x10041d97
1005894a:	jmp    0x1005891d
1005894f:	int3   
10058950:	push   esi
10058951:	inc    ebx
10058952:	xor    dh,BYTE PTR [eax]
10058954:	pop    eax
10058955:	inc    ebx
10058956:	xor    BYTE PTR [eax],dh
10058958:	push   ebp
10058959:	mov    ebp,esp
1005895b:	sub    esp,0x8
1005895e:	push   ebx
1005895f:	push   esi
10058960:	push   edi
10058961:	push   ebp
10058962:	cld    
10058963:	mov    ebx,DWORD PTR [ebp+0xc]
10058966:	mov    eax,DWORD PTR [ebp+0x8]
10058969:	test   DWORD PTR [eax+0x4],0x6
10058970:	jne    0x10058a39
10058976:	mov    DWORD PTR [ebp-0x8],eax
10058979:	mov    eax,DWORD PTR [ebp+0x10]
1005897c:	mov    DWORD PTR [ebp-0x4],eax
1005897f:	lea    eax,[ebp-0x8]
10058982:	mov    DWORD PTR [ebx-0x4],eax
10058985:	mov    esi,DWORD PTR [ebx+0xc]
10058988:	mov    edi,DWORD PTR [ebx+0x8]
1005898b:	push   ebx
1005898c:	call   0x1005b440
10058991:	add    esp,0x4
10058994:	or     eax,eax
10058996:	jle    0x10058a2b
1005899c:	cmp    esi,0xffffffff
1005899f:	je     0x10058a32
100589a5:	lea    ecx,[esi+esi*2]
100589a8:	mov    eax,DWORD PTR [edi+ecx*4+0x4]
100589ac:	or     eax,eax
100589ae:	je     0x10058a16
100589b0:	push   esi
100589b1:	push   ebp
100589b2:	lea    ebp,[ebx+0x10]
100589b5:	xor    ebx,ebx
100589b7:	xor    ecx,ecx
100589b9:	xor    edx,edx
100589bb:	xor    esi,esi
100589bd:	xor    edi,edi
100589bf:	call   eax
100589c1:	pop    ebp
100589c2:	pop    esi
100589c3:	mov    ebx,DWORD PTR [ebp+0xc]
100589c6:	or     eax,eax
100589c8:	je     0x10058a16
100589ca:	js     0x10058a24
100589cc:	push   0x1
100589ce:	push   DWORD PTR [ebp+0x8]
100589d1:	call   0x1005b343
100589d6:	add    esp,0x8
100589d9:	mov    edi,DWORD PTR [ebx+0x8]
100589dc:	push   ebx
100589dd:	call   0x1004db88
100589e2:	add    esp,0x4
100589e5:	lea    ebp,[ebx+0x10]
100589e8:	push   esi
100589e9:	push   ebx
100589ea:	call   0x1004dbed
100589ef:	add    esp,0x8
100589f2:	lea    ecx,[esi+esi*2]
100589f5:	push   0x1
100589f7:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
100589fb:	call   0x1004dc9d
10058a00:	mov    eax,DWORD PTR [edi+ecx*4]
10058a03:	mov    DWORD PTR [ebx+0xc],eax
10058a06:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
10058a0a:	xor    ebx,ebx
10058a0c:	xor    ecx,ecx
10058a0e:	xor    edx,edx
10058a10:	xor    esi,esi
10058a12:	xor    edi,edi
10058a14:	call   eax
10058a16:	mov    edi,DWORD PTR [ebx+0x8]
10058a19:	lea    ecx,[esi+esi*2]
10058a1c:	mov    esi,DWORD PTR [edi+ecx*4]
10058a1f:	jmp    0x1005899c
10058a24:	mov    eax,0x0
10058a29:	jmp    0x10058a4e
10058a2b:	mov    eax,DWORD PTR [ebp+0x8]
10058a2e:	or     DWORD PTR [eax+0x4],0x8
10058a32:	mov    eax,0x1
10058a37:	jmp    0x10058a4e
10058a39:	push   ebp
10058a3a:	lea    ebp,[ebx+0x10]
10058a3d:	push   0xffffffff
10058a3f:	push   ebx
10058a40:	call   0x1004dbed
10058a45:	add    esp,0x8
10058a48:	pop    ebp
10058a49:	mov    eax,0x1
10058a4e:	pop    ebp
10058a4f:	pop    edi
10058a50:	pop    esi
10058a51:	pop    ebx
10058a52:	mov    esp,ebp
10058a54:	pop    ebp
10058a55:	ret    
10058a56:	push   ebp
10058a57:	mov    ecx,DWORD PTR [esp+0x8]
10058a5b:	mov    ebp,DWORD PTR [ecx]
10058a5d:	mov    eax,DWORD PTR [ecx+0x1c]
10058a60:	push   eax
10058a61:	mov    eax,DWORD PTR [ecx+0x18]
10058a64:	push   eax
10058a65:	call   0x1004dbed
10058a6a:	add    esp,0x8
10058a6d:	pop    ebp
10058a6e:	ret    0x4
10058a71:	push   ebp
10058a72:	mov    ebp,esp
10058a74:	sub    esp,0x28
10058a77:	push   ebx
10058a78:	push   esi
10058a79:	xor    ebx,ebx
10058a7b:	test   BYTE PTR [ebp+0x10],0x80
10058a7f:	push   edi
10058a80:	push   0x10
10058a82:	mov    esi,eax
10058a84:	mov    DWORD PTR [ebp-0x14],ebx
10058a87:	mov    DWORD PTR [ebp-0x18],ebx
10058a8a:	mov    BYTE PTR [ebp-0x2],bl
10058a8d:	mov    DWORD PTR [ebp-0x28],0xc
10058a94:	mov    DWORD PTR [ebp-0x24],ebx
10058a97:	pop    edi
10058a98:	je     0x10058aa3
10058a9a:	mov    DWORD PTR [ebp-0x20],ebx
10058a9d:	mov    BYTE PTR [ebp-0x1],0x10
10058aa1:	jmp    0x10058aad
10058aa3:	mov    DWORD PTR [ebp-0x20],0x1
10058aaa:	mov    BYTE PTR [ebp-0x1],bl
10058aad:	lea    eax,[ebp-0x14]
10058ab0:	push   eax
10058ab1:	call   0x1005ba52
10058ab6:	test   eax,eax
10058ab8:	pop    ecx
10058ab9:	je     0x10058ac8
10058abb:	push   ebx
10058abc:	push   ebx
10058abd:	push   ebx
10058abe:	push   ebx
10058abf:	push   ebx
10058ac0:	call   0x10042190
10058ac5:	add    esp,0x14
10058ac8:	lea    eax,[ebp-0x18]
10058acb:	push   eax
10058acc:	call   0x10046391
10058ad1:	test   eax,eax
10058ad3:	pop    ecx
10058ad4:	je     0x10058ae3
10058ad6:	push   ebx
10058ad7:	push   ebx
10058ad8:	push   ebx
10058ad9:	push   ebx
10058ada:	push   ebx
10058adb:	call   0x10042190
10058ae0:	add    esp,0x14
10058ae3:	mov    eax,0x8000
10058ae8:	test   DWORD PTR [ebp+0x10],eax
10058aeb:	jne    0x10058aff
10058aed:	test   DWORD PTR [ebp+0x10],0x74000
10058af4:	jne    0x10058afb
10058af6:	cmp    DWORD PTR [ebp-0x14],eax
10058af9:	je     0x10058aff
10058afb:	or     BYTE PTR [ebp-0x1],0x80
10058aff:	mov    eax,DWORD PTR [ebp+0x10]
10058b02:	push   0x3
10058b04:	pop    edx
10058b05:	and    eax,edx
10058b07:	sub    eax,ebx
10058b09:	mov    ecx,0x80000000
10058b0e:	je     0x10058b4e
10058b10:	dec    eax
10058b11:	je     0x10058b45
10058b13:	dec    eax
10058b14:	je     0x10058b3c
10058b16:	call   0x100458b8
10058b1b:	mov    DWORD PTR [eax],ebx
10058b1d:	or     DWORD PTR [esi],0xffffffff
10058b20:	call   0x100458a5
10058b25:	push   0x16
10058b27:	pop    esi
10058b28:	push   ebx
10058b29:	push   ebx
10058b2a:	push   ebx
10058b2b:	push   ebx
10058b2c:	push   ebx
10058b2d:	mov    DWORD PTR [eax],esi
10058b2f:	call   0x1004228c
10058b34:	add    esp,0x14
10058b37:	jmp    0x10058fcb
10058b3c:	mov    DWORD PTR [ebp-0xc],0xc0000000
10058b43:	jmp    0x10058b51
10058b45:	mov    DWORD PTR [ebp-0xc],0x40000000
10058b4c:	jmp    0x10058b51
10058b4e:	mov    DWORD PTR [ebp-0xc],ecx
10058b51:	mov    eax,DWORD PTR [ebp+0x14]
10058b54:	sub    eax,edi
10058b56:	je     0x10058b8d
10058b58:	sub    eax,edi
10058b5a:	je     0x10058b84
10058b5c:	sub    eax,edi
10058b5e:	je     0x10058b7b
10058b60:	sub    eax,edi
10058b62:	je     0x10058b76
10058b64:	sub    eax,0x40
10058b67:	jne    0x10058b16
10058b69:	xor    eax,eax
10058b6b:	cmp    DWORD PTR [ebp-0xc],ecx
10058b6e:	sete   al
10058b71:	mov    DWORD PTR [ebp-0x8],eax
10058b74:	jmp    0x10058b90
10058b76:	mov    DWORD PTR [ebp-0x8],edx
10058b79:	jmp    0x10058b90
10058b7b:	mov    DWORD PTR [ebp-0x8],0x2
10058b82:	jmp    0x10058b90
10058b84:	mov    DWORD PTR [ebp-0x8],0x1
10058b8b:	jmp    0x10058b90
10058b8d:	mov    DWORD PTR [ebp-0x8],ebx
10058b90:	mov    eax,DWORD PTR [ebp+0x10]
10058b93:	mov    edx,0x700
10058b98:	and    eax,edx
10058b9a:	mov    ecx,0x400
10058b9f:	cmp    eax,ecx
10058ba1:	jg     0x10058be1
10058ba3:	je     0x10058bd8
10058ba5:	cmp    eax,ebx
10058ba7:	je     0x10058bd8
10058ba9:	cmp    eax,0x100
10058bae:	je     0x10058bcf
10058bb0:	cmp    eax,0x200
10058bb5:	je     0x10058c53
10058bbb:	cmp    eax,0x300
10058bc0:	jne    0x10058b16
10058bc6:	mov    DWORD PTR [ebp-0x10],0x2
10058bcd:	jmp    0x10058bfe
10058bcf:	mov    DWORD PTR [ebp-0x10],0x4
10058bd6:	jmp    0x10058bfe
10058bd8:	mov    DWORD PTR [ebp-0x10],0x3
10058bdf:	jmp    0x10058bfe
10058be1:	cmp    eax,0x500
10058be6:	je     0x10058bf7
10058be8:	cmp    eax,0x600
10058bed:	je     0x10058c53
10058bef:	cmp    eax,edx
10058bf1:	jne    0x10058b16
10058bf7:	mov    DWORD PTR [ebp-0x10],0x1
10058bfe:	mov    ecx,DWORD PTR [ebp+0x10]
10058c01:	mov    eax,0x100
10058c06:	test   eax,ecx
10058c08:	mov    edi,0x80
10058c0d:	je     0x10058c21
10058c0f:	mov    edx,DWORD PTR ds:0x1007edc4
10058c15:	not    edx
10058c17:	and    edx,DWORD PTR [ebp+0x18]
10058c1a:	test   dl,dl
10058c1c:	js     0x10058c21
10058c1e:	xor    edi,edi
10058c20:	inc    edi
10058c21:	test   cl,0x40
10058c24:	je     0x10058c3d
10058c26:	or     DWORD PTR [ebp-0xc],0x10000
10058c2d:	or     edi,0x4000000
10058c33:	cmp    DWORD PTR [ebp-0x18],0x2
10058c37:	jne    0x10058c3d
10058c39:	or     DWORD PTR [ebp-0x8],0x4
10058c3d:	test   cx,0x1000
10058c42:	je     0x10058c46
10058c44:	or     edi,eax
10058c46:	test   cl,0x20
10058c49:	je     0x10058c5c
10058c4b:	or     edi,0x8000000
10058c51:	jmp    0x10058c67
10058c53:	mov    DWORD PTR [ebp-0x10],0x5
10058c5a:	jmp    0x10058bfe
10058c5c:	test   cl,0x10
10058c5f:	je     0x10058c67
10058c61:	or     edi,0x10000000
10058c67:	call   0x1004e168
10058c6c:	cmp    eax,0xffffffff
10058c6f:	mov    DWORD PTR [esi],eax
10058c71:	jne    0x10058c8a
10058c73:	call   0x100458b8
10058c78:	mov    DWORD PTR [eax],ebx
10058c7a:	or     DWORD PTR [esi],0xffffffff
10058c7d:	call   0x100458a5
10058c82:	mov    DWORD PTR [eax],0x18
10058c88:	jmp    0x10058cda
10058c8a:	mov    eax,DWORD PTR [ebp+0x8]
10058c8d:	push   ebx
10058c8e:	push   edi
10058c8f:	push   DWORD PTR [ebp-0x10]
10058c92:	mov    DWORD PTR [eax],0x1
10058c98:	lea    eax,[ebp-0x28]
10058c9b:	push   eax
10058c9c:	push   DWORD PTR [ebp-0x8]
10058c9f:	push   DWORD PTR [ebp-0xc]
10058ca2:	push   DWORD PTR [ebp+0xc]
10058ca5:	call   DWORD PTR ds:0x10065254
10058cab:	mov    edi,eax
10058cad:	cmp    edi,0xffffffff
10058cb0:	jne    0x10058ce6
10058cb2:	mov    esi,DWORD PTR [esi]
10058cb4:	mov    eax,esi
10058cb6:	and    esi,0x1f
10058cb9:	imul   esi,esi,0x28
10058cbc:	sar    eax,0x5
10058cbf:	mov    eax,DWORD PTR [eax*4+0x10081460]
10058cc6:	lea    eax,[eax+esi*1+0x4]
10058cca:	and    BYTE PTR [eax],0xfe
10058ccd:	call   DWORD PTR ds:0x100650c4
10058cd3:	push   eax
10058cd4:	call   0x100458cb
10058cd9:	pop    ecx
10058cda:	call   0x100458a5
10058cdf:	mov    eax,DWORD PTR [eax]
10058ce1:	jmp    0x100590aa
10058ce6:	push   edi
10058ce7:	call   DWORD PTR ds:0x100651f4
10058ced:	cmp    eax,ebx
10058cef:	jne    0x10058d15
10058cf1:	mov    esi,DWORD PTR [esi]
10058cf3:	mov    eax,esi
10058cf5:	and    esi,0x1f
10058cf8:	imul   esi,esi,0x28
10058cfb:	sar    eax,0x5
10058cfe:	mov    eax,DWORD PTR [eax*4+0x10081460]
10058d05:	lea    eax,[eax+esi*1+0x4]
10058d09:	and    BYTE PTR [eax],0xfe
10058d0c:	push   edi
10058d0d:	call   DWORD PTR ds:0x10065070
10058d13:	jmp    0x10058ccd
10058d15:	cmp    eax,0x2
10058d18:	jne    0x10058d20
10058d1a:	or     BYTE PTR [ebp-0x1],0x40
10058d1e:	jmp    0x10058d29
10058d20:	cmp    eax,0x3
10058d23:	jne    0x10058d29
10058d25:	or     BYTE PTR [ebp-0x1],0x8
10058d29:	push   edi
10058d2a:	push   DWORD PTR [esi]
10058d2c:	call   0x1004df37
10058d31:	mov    eax,DWORD PTR [esi]
10058d33:	mov    edx,eax
10058d35:	and    eax,0x1f
10058d38:	imul   eax,eax,0x28
10058d3b:	sar    edx,0x5
10058d3e:	mov    edx,DWORD PTR [edx*4+0x10081460]
10058d45:	pop    ecx
10058d46:	pop    ecx
10058d47:	mov    cl,BYTE PTR [ebp-0x1]
10058d4a:	or     cl,0x1
10058d4d:	mov    BYTE PTR [edx+eax*1+0x4],cl
10058d51:	mov    eax,DWORD PTR [esi]
10058d53:	mov    edx,eax
10058d55:	and    eax,0x1f
10058d58:	imul   eax,eax,0x28
10058d5b:	sar    edx,0x5
10058d5e:	mov    edx,DWORD PTR [edx*4+0x10081460]
10058d65:	lea    eax,[edx+eax*1+0x24]
10058d69:	and    BYTE PTR [eax],0x80
10058d6c:	mov    BYTE PTR [ebp-0x3],cl
10058d6f:	and    BYTE PTR [ebp-0x3],0x48
10058d73:	mov    BYTE PTR [ebp-0x1],cl
10058d76:	jne    0x10058dfc
10058d7c:	test   cl,0x80
10058d7f:	je     0x10059036
10058d85:	test   BYTE PTR [ebp+0x10],0x2
10058d89:	je     0x10058dfc
10058d8b:	push   0x2
10058d8d:	or     edi,0xffffffff
10058d90:	push   edi
10058d91:	push   DWORD PTR [esi]
10058d93:	call   0x10057bfe
10058d98:	add    esp,0xc
10058d9b:	cmp    eax,edi
10058d9d:	mov    DWORD PTR [ebp-0x8],eax
10058da0:	jne    0x10058dbb
10058da2:	call   0x100458b8
10058da7:	cmp    DWORD PTR [eax],0x83
10058dad:	je     0x10058dfc
10058daf:	push   DWORD PTR [esi]
10058db1:	call   0x1004f577
10058db6:	jmp    0x10058cd9
10058dbb:	push   0x1
10058dbd:	lea    eax,[ebp-0x4]
10058dc0:	push   eax
10058dc1:	push   DWORD PTR [esi]
10058dc3:	mov    BYTE PTR [ebp-0x4],bl
10058dc6:	call   0x1005736a
10058dcb:	add    esp,0xc
10058dce:	test   eax,eax
10058dd0:	jne    0x10058dec
10058dd2:	cmp    BYTE PTR [ebp-0x4],0x1a
10058dd6:	jne    0x10058dec
10058dd8:	mov    eax,DWORD PTR [ebp-0x8]
10058ddb:	cdq    
10058ddc:	push   edx
10058ddd:	push   eax
10058dde:	push   DWORD PTR [esi]
10058de0:	call   0x1005b7e2
10058de5:	add    esp,0xc
10058de8:	cmp    eax,edi
10058dea:	je     0x10058daf
10058dec:	push   ebx
10058ded:	push   ebx
10058dee:	push   DWORD PTR [esi]
10058df0:	call   0x10057bfe
10058df5:	add    esp,0xc
10058df8:	cmp    eax,edi
10058dfa:	je     0x10058daf
10058dfc:	test   BYTE PTR [ebp-0x1],0x80
10058e00:	je     0x10059036
10058e06:	mov    ecx,0x74000
10058e0b:	test   DWORD PTR [ebp+0x10],ecx
10058e0e:	mov    edi,0x4000
10058e13:	jne    0x10058e24
10058e15:	mov    eax,DWORD PTR [ebp-0x14]
10058e18:	and    eax,ecx
10058e1a:	jne    0x10058e21
10058e1c:	or     DWORD PTR [ebp+0x10],edi
10058e1f:	jmp    0x10058e24
10058e21:	or     DWORD PTR [ebp+0x10],eax
10058e24:	mov    eax,DWORD PTR [ebp+0x10]
10058e27:	and    eax,ecx
10058e29:	cmp    eax,edi
10058e2b:	je     0x10058e71
10058e2d:	cmp    eax,0x10000
10058e32:	je     0x10058e5d
10058e34:	cmp    eax,0x14000
10058e39:	je     0x10058e5d
10058e3b:	cmp    eax,0x20000
10058e40:	je     0x10058e6b
10058e42:	cmp    eax,0x24000
10058e47:	je     0x10058e6b
10058e49:	cmp    eax,0x40000
10058e4e:	je     0x10058e57
10058e50:	cmp    eax,0x44000
10058e55:	jne    0x10058e74
10058e57:	mov    BYTE PTR [ebp-0x2],0x1
10058e5b:	jmp    0x10058e74
10058e5d:	mov    ecx,DWORD PTR [ebp+0x10]
10058e60:	mov    eax,0x301
10058e65:	and    ecx,eax
10058e67:	cmp    ecx,eax
10058e69:	jne    0x10058e74
10058e6b:	mov    BYTE PTR [ebp-0x2],0x2
10058e6f:	jmp    0x10058e74
10058e71:	mov    BYTE PTR [ebp-0x2],bl
10058e74:	test   DWORD PTR [ebp+0x10],0x70000
10058e7b:	je     0x10059036
10058e81:	test   BYTE PTR [ebp-0x1],0x40
10058e85:	mov    DWORD PTR [ebp-0x8],ebx
10058e88:	jne    0x10059036
10058e8e:	mov    eax,DWORD PTR [ebp-0xc]
10058e91:	mov    ecx,0xc0000000
10058e96:	and    eax,ecx
10058e98:	cmp    eax,0x40000000
10058e9d:	je     0x10058f5a
10058ea3:	cmp    eax,0x80000000
10058ea8:	je     0x10058f21
10058eaa:	cmp    eax,ecx
10058eac:	jne    0x10059036
10058eb2:	mov    eax,DWORD PTR [ebp-0x10]
10058eb5:	cmp    eax,ebx
10058eb7:	jbe    0x10059036
10058ebd:	cmp    eax,0x2
10058ec0:	jbe    0x10058ed0
10058ec2:	cmp    eax,0x4
10058ec5:	jbe    0x10058ef7
10058ec7:	cmp    eax,0x5
10058eca:	jne    0x10059036
10058ed0:	movsx  eax,BYTE PTR [ebp-0x2]
10058ed4:	xor    edi,edi
10058ed6:	dec    eax
10058ed7:	je     0x10059003
10058edd:	dec    eax
10058ede:	jne    0x10059036
10058ee4:	mov    DWORD PTR [ebp-0x8],0xfeff
10058eeb:	mov    DWORD PTR [ebp-0x10],0x2
10058ef2:	jmp    0x10059011
10058ef7:	push   0x2
10058ef9:	push   ebx
10058efa:	push   ebx
10058efb:	push   DWORD PTR [esi]
10058efd:	call   0x1004ba6f
10058f02:	add    esp,0x10
10058f05:	or     eax,edx
10058f07:	je     0x10058ed0
10058f09:	push   ebx
10058f0a:	push   ebx
10058f0b:	push   ebx
10058f0c:	push   DWORD PTR [esi]
10058f0e:	call   0x1004ba6f
10058f13:	and    eax,edx
10058f15:	add    esp,0x10
10058f18:	cmp    eax,0xffffffff
10058f1b:	je     0x10058daf
10058f21:	push   0x3
10058f23:	lea    eax,[ebp-0x8]
10058f26:	push   eax
10058f27:	push   DWORD PTR [esi]
10058f29:	call   0x1005736a
10058f2e:	add    esp,0xc
10058f31:	cmp    eax,0xffffffff
10058f34:	je     0x10058daf
10058f3a:	cmp    eax,0x2
10058f3d:	je     0x10058faa
10058f3f:	cmp    eax,0x3
10058f42:	jne    0x10058ff5
10058f48:	cmp    DWORD PTR [ebp-0x8],0xbfbbef
10058f4f:	jne    0x10058faa
10058f51:	mov    BYTE PTR [ebp-0x2],0x1
10058f55:	jmp    0x10059036
10058f5a:	mov    eax,DWORD PTR [ebp-0x10]
10058f5d:	cmp    eax,ebx
10058f5f:	jbe    0x10059036
10058f65:	cmp    eax,0x2
10058f68:	jbe    0x10058ed0
10058f6e:	cmp    eax,0x4
10058f71:	ja     0x10058ec7
10058f77:	push   0x2
10058f79:	push   ebx
10058f7a:	push   ebx
10058f7b:	push   DWORD PTR [esi]
10058f7d:	call   0x1004ba6f
10058f82:	add    esp,0x10
10058f85:	or     eax,edx
10058f87:	je     0x10058ed0
10058f8d:	push   ebx
10058f8e:	push   ebx
10058f8f:	push   ebx
10058f90:	push   DWORD PTR [esi]
10058f92:	call   0x1004ba6f
10058f97:	add    esp,0x10
10058f9a:	and    eax,edx
10058f9c:	cmp    eax,0xffffffff
10058f9f:	jne    0x10059036
10058fa5:	jmp    0x10058daf
10058faa:	mov    eax,DWORD PTR [ebp-0x8]
10058fad:	and    eax,0xffff
10058fb2:	cmp    eax,0xfffe
10058fb7:	jne    0x10058fd2
10058fb9:	push   DWORD PTR [esi]
10058fbb:	call   0x1004f577
10058fc0:	pop    ecx
10058fc1:	call   0x100458a5
10058fc6:	push   0x16
10058fc8:	pop    esi
10058fc9:	mov    DWORD PTR [eax],esi
10058fcb:	mov    eax,esi
10058fcd:	jmp    0x100590aa
10058fd2:	cmp    eax,0xfeff
10058fd7:	jne    0x10058ff5
10058fd9:	push   ebx
10058fda:	push   0x2
10058fdc:	push   DWORD PTR [esi]
10058fde:	call   0x10057bfe
10058fe3:	add    esp,0xc
10058fe6:	cmp    eax,0xffffffff
10058fe9:	je     0x10058daf
10058fef:	mov    BYTE PTR [ebp-0x2],0x2
10058ff3:	jmp    0x10059036
10058ff5:	push   ebx
10058ff6:	push   ebx
10058ff7:	push   DWORD PTR [esi]
10058ff9:	call   0x10057bfe
10058ffe:	add    esp,0xc
10059001:	jmp    0x10058f9c
10059003:	mov    DWORD PTR [ebp-0x8],0xbfbbef
1005900a:	mov    DWORD PTR [ebp-0x10],0x3
10059011:	mov    eax,DWORD PTR [ebp-0x10]
10059014:	sub    eax,edi
10059016:	push   eax
10059017:	lea    eax,[ebp+edi*1-0x8]
1005901b:	push   eax
1005901c:	push   DWORD PTR [esi]
1005901e:	call   0x1004c1d1
10059023:	add    esp,0xc
10059026:	cmp    eax,0xffffffff
10059029:	je     0x10058daf
1005902f:	add    edi,eax
10059031:	cmp    DWORD PTR [ebp-0x10],edi
10059034:	jg     0x10059011
10059036:	mov    eax,DWORD PTR [esi]
10059038:	mov    ecx,eax
1005903a:	and    eax,0x1f
1005903d:	imul   eax,eax,0x28
10059040:	sar    ecx,0x5
10059043:	mov    ecx,DWORD PTR [ecx*4+0x10081460]
1005904a:	lea    eax,[ecx+eax*1+0x24]
1005904e:	mov    cl,BYTE PTR [eax]
10059050:	xor    cl,BYTE PTR [ebp-0x2]
10059053:	and    cl,0x7f
10059056:	xor    BYTE PTR [eax],cl
10059058:	mov    eax,DWORD PTR [esi]
1005905a:	mov    ecx,eax
1005905c:	and    eax,0x1f
1005905f:	imul   eax,eax,0x28
10059062:	sar    ecx,0x5
10059065:	mov    ecx,DWORD PTR [ecx*4+0x10081460]
1005906c:	lea    eax,[ecx+eax*1+0x24]
10059070:	mov    ecx,DWORD PTR [ebp+0x10]
10059073:	mov    dl,BYTE PTR [eax]
10059075:	shr    ecx,0x10
10059078:	shl    cl,0x7
1005907b:	and    dl,0x7f
1005907e:	or     cl,dl
10059080:	cmp    BYTE PTR [ebp-0x3],bl
10059083:	mov    BYTE PTR [eax],cl
10059085:	jne    0x100590a8
10059087:	test   BYTE PTR [ebp+0x10],0x8
1005908b:	je     0x100590a8
1005908d:	mov    esi,DWORD PTR [esi]
1005908f:	mov    eax,esi
10059091:	and    esi,0x1f
10059094:	imul   esi,esi,0x28
10059097:	sar    eax,0x5
1005909a:	mov    eax,DWORD PTR [eax*4+0x10081460]
100590a1:	lea    eax,[eax+esi*1+0x4]
100590a5:	or     BYTE PTR [eax],0x20
100590a8:	mov    eax,ebx
100590aa:	pop    edi
100590ab:	pop    esi
100590ac:	pop    ebx
100590ad:	leave  
100590ae:	ret    
100590af:	push   0x14
100590b1:	push   0x10073640
100590b6:	call   0x100459e4
100590bb:	xor    esi,esi
100590bd:	mov    DWORD PTR [ebp-0x1c],esi
100590c0:	xor    eax,eax
100590c2:	mov    edi,DWORD PTR [ebp+0x18]
100590c5:	cmp    edi,esi
100590c7:	setne  al
100590ca:	cmp    eax,esi
100590cc:	jne    0x100590e9
100590ce:	call   0x100458a5
100590d3:	push   0x16
100590d5:	pop    edi
100590d6:	mov    DWORD PTR [eax],edi
100590d8:	push   esi
100590d9:	push   esi
100590da:	push   esi
100590db:	push   esi
100590dc:	push   esi
100590dd:	call   0x1004228c
100590e2:	add    esp,0x14
100590e5:	mov    eax,edi
100590e7:	jmp    0x10059142
100590e9:	or     DWORD PTR [edi],0xffffffff
100590ec:	xor    eax,eax
100590ee:	cmp    DWORD PTR [ebp+0x8],esi
100590f1:	setne  al
100590f4:	cmp    eax,esi
100590f6:	je     0x100590ce
100590f8:	cmp    DWORD PTR [ebp+0x1c],esi
100590fb:	je     0x1005910c
100590fd:	mov    eax,DWORD PTR [ebp+0x14]
10059100:	and    eax,0xfffffe7f
10059105:	neg    eax
10059107:	sbb    eax,eax
10059109:	inc    eax
1005910a:	je     0x100590ce
1005910c:	mov    DWORD PTR [ebp-0x4],esi
1005910f:	push   DWORD PTR [ebp+0x14]
10059112:	push   DWORD PTR [ebp+0x10]
10059115:	push   DWORD PTR [ebp+0xc]
10059118:	push   DWORD PTR [ebp+0x8]
1005911b:	lea    eax,[ebp-0x1c]
1005911e:	push   eax
1005911f:	mov    eax,edi
10059121:	call   0x10058a71
10059126:	add    esp,0x14
10059129:	mov    DWORD PTR [ebp-0x20],eax
1005912c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10059133:	call   0x1005914d
10059138:	mov    eax,DWORD PTR [ebp-0x20]
1005913b:	cmp    eax,esi
1005913d:	je     0x10059142
1005913f:	or     DWORD PTR [edi],0xffffffff
10059142:	call   0x10045a29
10059147:	ret    
10059148:	xor    esi,esi
1005914a:	mov    edi,DWORD PTR [ebp+0x18]
1005914d:	cmp    DWORD PTR [ebp-0x1c],esi
10059150:	je     0x1005917a
10059152:	cmp    DWORD PTR [ebp-0x20],esi
10059155:	je     0x10059172
10059157:	mov    eax,DWORD PTR [edi]
10059159:	mov    ecx,eax
1005915b:	sar    ecx,0x5
1005915e:	and    eax,0x1f
10059161:	imul   eax,eax,0x28
10059164:	mov    ecx,DWORD PTR [ecx*4+0x10081460]
1005916b:	lea    eax,[ecx+eax*1+0x4]
1005916f:	and    BYTE PTR [eax],0xfe
10059172:	push   DWORD PTR [edi]
10059174:	call   0x1004e146
10059179:	pop    ecx
1005917a:	ret    
1005917b:	push   ebp
1005917c:	mov    ebp,esp
1005917e:	push   0x1
10059180:	push   DWORD PTR [ebp+0x8]
10059183:	push   DWORD PTR [ebp+0x18]
10059186:	push   DWORD PTR [ebp+0x14]
10059189:	push   DWORD PTR [ebp+0x10]
1005918c:	push   DWORD PTR [ebp+0xc]
1005918f:	call   0x100590af
10059194:	add    esp,0x18
10059197:	pop    ebp
10059198:	ret    
10059199:	push   ebp
1005919a:	mov    ebp,esp
1005919c:	sub    esp,0x10
1005919f:	mov    eax,ds:0x1007fbd4
100591a4:	push   ebx
100591a5:	xor    ebx,ebx
100591a7:	push   esi
100591a8:	mov    esi,DWORD PTR [ebp+0xc]
100591ab:	mov    DWORD PTR [ebp-0x4],eax
100591ae:	mov    DWORD PTR [ebp-0xc],ebx
100591b1:	mov    DWORD PTR [ebp-0x8],ebx
100591b4:	mov    DWORD PTR [ebp-0x10],ebx
100591b7:	jmp    0x100591ba
100591b9:	inc    esi
100591ba:	cmp    BYTE PTR [esi],0x20
100591bd:	je     0x100591b9
100591bf:	mov    al,BYTE PTR [esi]
100591c1:	cmp    al,0x61
100591c3:	je     0x100591fe
100591c5:	cmp    al,0x72
100591c7:	je     0x100591f5
100591c9:	cmp    al,0x77
100591cb:	je     0x100591ec
100591cd:	call   0x100458a5
100591d2:	push   ebx
100591d3:	push   ebx
100591d4:	push   ebx
100591d5:	push   ebx
100591d6:	push   ebx
100591d7:	mov    DWORD PTR [eax],0x16
100591dd:	call   0x1004228c
100591e2:	add    esp,0x14
100591e5:	xor    eax,eax
100591e7:	jmp    0x10059437
100591ec:	mov    DWORD PTR [ebp+0xc],0x301
100591f3:	jmp    0x10059205
100591f5:	or     DWORD PTR [ebp-0x4],0x1
100591f9:	mov    DWORD PTR [ebp+0xc],ebx
100591fc:	jmp    0x10059209
100591fe:	mov    DWORD PTR [ebp+0xc],0x109
10059205:	or     DWORD PTR [ebp-0x4],0x2
10059209:	xor    ecx,ecx
1005920b:	inc    ecx
1005920c:	inc    esi
1005920d:	mov    al,BYTE PTR [esi]
1005920f:	cmp    al,bl
10059211:	push   edi
10059212:	je     0x100593d1
10059218:	mov    edx,0x80
1005921d:	mov    edi,0x4000
10059222:	cmp    ecx,ebx
10059224:	je     0x10059355
1005922a:	movsx  eax,al
1005922d:	cmp    eax,0x53
10059230:	jg     0x100592d8
10059236:	je     0x100592c6
1005923c:	sub    eax,0x20
1005923f:	je     0x1005934a
10059245:	sub    eax,0xb
10059248:	je     0x100592a0
1005924a:	dec    eax
1005924b:	je     0x10059294
1005924d:	sub    eax,0x18
10059250:	je     0x10059281
10059252:	sub    eax,0xa
10059255:	je     0x10059279
10059257:	sub    eax,0x4
1005925a:	jne    0x100593da
10059260:	cmp    DWORD PTR [ebp-0x8],ebx
10059263:	jne    0x1005933f
10059269:	or     DWORD PTR [ebp+0xc],0x10
1005926d:	mov    DWORD PTR [ebp-0x8],0x1
10059274:	jmp    0x1005934a
10059279:	or     DWORD PTR [ebp+0xc],edx
1005927c:	jmp    0x1005934a
10059281:	test   BYTE PTR [ebp+0xc],0x40
10059285:	jne    0x1005933f
1005928b:	or     DWORD PTR [ebp+0xc],0x40
1005928f:	jmp    0x1005934a
10059294:	mov    DWORD PTR [ebp-0x10],0x1
1005929b:	jmp    0x1005933f
100592a0:	test   BYTE PTR [ebp+0xc],0x2
100592a4:	jne    0x1005933f
100592aa:	mov    eax,DWORD PTR [ebp+0xc]
100592ad:	and    eax,0xfffffffe
100592b0:	or     eax,0x2
100592b3:	mov    DWORD PTR [ebp+0xc],eax
100592b6:	mov    eax,DWORD PTR [ebp-0x4]
100592b9:	and    eax,0xfffffffc
100592bc:	or     eax,edx
100592be:	mov    DWORD PTR [ebp-0x4],eax
100592c1:	jmp    0x1005934a
100592c6:	cmp    DWORD PTR [ebp-0x8],ebx
100592c9:	jne    0x1005933f
100592cb:	or     DWORD PTR [ebp+0xc],0x20
100592cf:	mov    DWORD PTR [ebp-0x8],0x1
100592d6:	jmp    0x1005934a
100592d8:	sub    eax,0x54
100592db:	je     0x10059337
100592dd:	sub    eax,0xe
100592e0:	je     0x10059326
100592e2:	dec    eax
100592e3:	je     0x10059315
100592e5:	sub    eax,0xb
100592e8:	je     0x10059300
100592ea:	sub    eax,0x6
100592ed:	jne    0x100593da
100592f3:	test   WORD PTR [ebp+0xc],0xc000
100592f9:	jne    0x1005933f
100592fb:	or     DWORD PTR [ebp+0xc],edi
100592fe:	jmp    0x1005934a
10059300:	cmp    DWORD PTR [ebp-0xc],ebx
10059303:	jne    0x1005933f
10059305:	and    DWORD PTR [ebp-0x4],0xffffbfff
1005930c:	mov    DWORD PTR [ebp-0xc],0x1
10059313:	jmp    0x1005934a
10059315:	cmp    DWORD PTR [ebp-0xc],ebx
10059318:	jne    0x1005933f
1005931a:	or     DWORD PTR [ebp-0x4],edi
1005931d:	mov    DWORD PTR [ebp-0xc],0x1
10059324:	jmp    0x1005934a
10059326:	test   WORD PTR [ebp+0xc],0xc000
1005932c:	jne    0x1005933f
1005932e:	or     DWORD PTR [ebp+0xc],0x8000
10059335:	jmp    0x1005934a
10059337:	test   WORD PTR [ebp+0xc],0x1000
1005933d:	je     0x10059343
1005933f:	xor    ecx,ecx
10059341:	jmp    0x1005934a
10059343:	or     DWORD PTR [ebp+0xc],0x1000
1005934a:	inc    esi
1005934b:	mov    al,BYTE PTR [esi]
1005934d:	cmp    al,bl
1005934f:	jne    0x10059222
10059355:	cmp    DWORD PTR [ebp-0x10],ebx
10059358:	je     0x100593d1
1005935a:	jmp    0x1005935d
1005935c:	inc    esi
1005935d:	cmp    BYTE PTR [esi],0x20
10059360:	je     0x1005935c
10059362:	push   0x4
10059364:	push   esi
10059365:	push   0x1006b8d4
1005936a:	call   0x1005bbef
1005936f:	add    esp,0xc
10059372:	test   eax,eax
10059374:	jne    0x100593da
10059376:	add    esi,0x4
10059379:	push   0x1006b8dc
1005937e:	push   esi
1005937f:	call   0x1005b26a
10059384:	test   eax,eax
10059386:	pop    ecx
10059387:	pop    ecx
10059388:	jne    0x10059396
1005938a:	add    esi,0x5
1005938d:	or     DWORD PTR [ebp+0xc],0x40000
10059394:	jmp    0x100593d1
10059396:	push   0x1006b8e4
1005939b:	push   esi
1005939c:	call   0x1005b26a
100593a1:	test   eax,eax
100593a3:	pop    ecx
100593a4:	pop    ecx
100593a5:	jne    0x100593b3
100593a7:	add    esi,0x8
100593aa:	or     DWORD PTR [ebp+0xc],0x20000
100593b1:	jmp    0x100593d1
100593b3:	push   0x1006b8f0
100593b8:	push   esi
100593b9:	call   0x1005b26a
100593be:	test   eax,eax
100593c0:	pop    ecx
100593c1:	pop    ecx
100593c2:	jne    0x100593da
100593c4:	add    esi,0x7
100593c7:	or     DWORD PTR [ebp+0xc],0x10000
100593ce:	jmp    0x100593d1
100593d0:	inc    esi
100593d1:	cmp    BYTE PTR [esi],0x20
100593d4:	je     0x100593d0
100593d6:	cmp    BYTE PTR [esi],bl
100593d8:	je     0x100593f4
100593da:	call   0x100458a5
100593df:	push   ebx
100593e0:	push   ebx
100593e1:	push   ebx
100593e2:	push   ebx
100593e3:	push   ebx
100593e4:	mov    DWORD PTR [eax],0x16
100593ea:	call   0x1004228c
100593ef:	add    esp,0x14
100593f2:	jmp    0x10059412
100593f4:	push   0x180
100593f9:	push   DWORD PTR [ebp+0x10]
100593fc:	lea    eax,[ebp-0x10]
100593ff:	push   DWORD PTR [ebp+0xc]
10059402:	push   DWORD PTR [ebp+0x8]
10059405:	push   eax
10059406:	call   0x1005917b
1005940b:	add    esp,0x14
1005940e:	test   eax,eax
10059410:	je     0x10059416
10059412:	xor    eax,eax
10059414:	jmp    0x10059436
10059416:	mov    eax,DWORD PTR [ebp+0x14]
10059419:	inc    DWORD PTR ds:0x1007f468
1005941f:	mov    ecx,DWORD PTR [ebp-0x4]
10059422:	mov    DWORD PTR [eax+0xc],ecx
10059425:	mov    ecx,DWORD PTR [ebp-0x10]
10059428:	mov    DWORD PTR [eax+0x4],ebx
1005942b:	mov    DWORD PTR [eax],ebx
1005942d:	mov    DWORD PTR [eax+0x8],ebx
10059430:	mov    DWORD PTR [eax+0x1c],ebx
10059433:	mov    DWORD PTR [eax+0x10],ecx
10059436:	pop    edi
10059437:	pop    esi
10059438:	pop    ebx
10059439:	leave  
1005943a:	ret    
1005943b:	push   0x10
1005943d:	push   0x10073660
10059442:	call   0x100459e4
10059447:	xor    ebx,ebx
10059449:	xor    edi,edi
1005944b:	mov    DWORD PTR [ebp-0x1c],edi
1005944e:	push   0x1
10059450:	call   0x100469ed
10059455:	pop    ecx
10059456:	mov    DWORD PTR [ebp-0x4],ebx
10059459:	xor    esi,esi
1005945b:	mov    DWORD PTR [ebp-0x20],esi
1005945e:	cmp    esi,DWORD PTR ds:0x10081440
10059464:	jge    0x1005952b
1005946a:	mov    eax,ds:0x10080420
1005946f:	lea    eax,[eax+esi*4]
10059472:	cmp    DWORD PTR [eax],ebx
10059474:	je     0x100594c6
10059476:	mov    eax,DWORD PTR [eax]
10059478:	test   BYTE PTR [eax+0xc],0x83
1005947c:	jne    0x100594bf
1005947e:	lea    eax,[esi-0x3]
10059481:	cmp    eax,0x10
10059484:	ja     0x10059498
10059486:	lea    eax,[esi+0x10]
10059489:	push   eax
1005948a:	call   0x1004692a
1005948f:	pop    ecx
10059490:	test   eax,eax
10059492:	je     0x1005952b
10059498:	mov    eax,ds:0x10080420
1005949d:	push   DWORD PTR [eax+esi*4]
100594a0:	push   esi
100594a1:	call   0x1004c455
100594a6:	pop    ecx
100594a7:	pop    ecx
100594a8:	mov    eax,ds:0x10080420
100594ad:	mov    eax,DWORD PTR [eax+esi*4]
100594b0:	test   BYTE PTR [eax+0xc],0x83
100594b4:	je     0x100594c2
100594b6:	push   eax
100594b7:	push   esi
100594b8:	call   0x1004c4a7
100594bd:	pop    ecx
100594be:	pop    ecx
100594bf:	inc    esi
100594c0:	jmp    0x1005945b
100594c2:	mov    edi,eax
100594c4:	jmp    0x10059528
100594c6:	shl    esi,0x2
100594c9:	push   0x38
100594cb:	call   0x10046172
100594d0:	pop    ecx
100594d1:	mov    ecx,DWORD PTR ds:0x10080420
100594d7:	mov    DWORD PTR [esi+ecx*1],eax
100594da:	mov    eax,ds:0x10080420
100594df:	add    eax,esi
100594e1:	cmp    DWORD PTR [eax],ebx
100594e3:	je     0x1005952b
100594e5:	push   0xfa0
100594ea:	mov    eax,DWORD PTR [eax]
100594ec:	add    eax,0x20
100594ef:	push   eax
100594f0:	call   0x1004abdb
100594f5:	pop    ecx
100594f6:	pop    ecx
100594f7:	test   eax,eax
100594f9:	mov    eax,ds:0x10080420
100594fe:	jne    0x10059513
10059500:	push   DWORD PTR [esi+eax*1]
10059503:	call   0x10042408
10059508:	pop    ecx
10059509:	mov    eax,ds:0x10080420
1005950e:	mov    DWORD PTR [esi+eax*1],ebx
10059511:	jmp    0x1005952b
10059513:	mov    eax,DWORD PTR [esi+eax*1]
10059516:	add    eax,0x20
10059519:	push   eax
1005951a:	call   DWORD PTR ds:0x100650f0
10059520:	mov    eax,ds:0x10080420
10059525:	mov    edi,DWORD PTR [esi+eax*1]
10059528:	mov    DWORD PTR [ebp-0x1c],edi
1005952b:	cmp    edi,ebx
1005952d:	je     0x10059541
1005952f:	mov    DWORD PTR [edi+0x4],ebx
10059532:	mov    DWORD PTR [edi+0xc],ebx
10059535:	mov    DWORD PTR [edi+0x8],ebx
10059538:	mov    DWORD PTR [edi],ebx
1005953a:	mov    DWORD PTR [edi+0x1c],ebx
1005953d:	or     DWORD PTR [edi+0x10],0xffffffff
10059541:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10059548:	call   0x10059558
1005954d:	mov    eax,edi
1005954f:	call   0x10045a29
10059554:	ret    
10059555:	mov    edi,DWORD PTR [ebp-0x1c]
10059558:	push   0x1
1005955a:	call   0x10046915
1005955f:	pop    ecx
10059560:	ret    
10059561:	mov    DWORD PTR [ecx],0x1006b900
10059567:	jmp    0x10041ed0
1005956c:	push   esi
1005956d:	mov    esi,ecx
1005956f:	mov    DWORD PTR [esi],0x1006b900
10059575:	call   0x10041ed0
1005957a:	test   BYTE PTR [esp+0x8],0x1
1005957f:	je     0x10059588
10059581:	push   esi
10059582:	call   0x10041d92
10059587:	pop    ecx
10059588:	mov    eax,esi
1005958a:	pop    esi
1005958b:	ret    0x4
1005958e:	push   esi
1005958f:	push   edi
10059590:	mov    edi,DWORD PTR [esp+0xc]
10059594:	mov    eax,DWORD PTR [edi+0x4]
10059597:	test   eax,eax
10059599:	je     0x100595e4
1005959b:	lea    edx,[eax+0x8]
1005959e:	cmp    BYTE PTR [edx],0x0
100595a1:	je     0x100595e4
100595a3:	mov    esi,DWORD PTR [esp+0x10]
100595a7:	mov    ecx,DWORD PTR [esi+0x4]
100595aa:	cmp    eax,ecx
100595ac:	je     0x100595c2
100595ae:	add    ecx,0x8
100595b1:	push   ecx
100595b2:	push   edx
100595b3:	call   0x10046650
100595b8:	test   eax,eax
100595ba:	pop    ecx
100595bb:	pop    ecx
100595bc:	je     0x100595c2
100595be:	xor    eax,eax
100595c0:	jmp    0x100595e7
100595c2:	test   BYTE PTR [esi],0x2
100595c5:	je     0x100595cc
100595c7:	test   BYTE PTR [edi],0x8
100595ca:	je     0x100595be
100595cc:	mov    eax,DWORD PTR [esp+0x14]
100595d0:	mov    eax,DWORD PTR [eax]
100595d2:	test   al,0x1
100595d4:	je     0x100595db
100595d6:	test   BYTE PTR [edi],0x1
100595d9:	je     0x100595be
100595db:	test   al,0x2
100595dd:	je     0x100595e4
100595df:	test   BYTE PTR [edi],0x2
100595e2:	je     0x100595be
100595e4:	xor    eax,eax
100595e6:	inc    eax
100595e7:	pop    edi
100595e8:	pop    esi
100595e9:	ret    
100595ea:	mov    eax,DWORD PTR [esp+0x4]
100595ee:	mov    eax,DWORD PTR [eax]
100595f0:	mov    eax,DWORD PTR [eax]
100595f2:	cmp    eax,0xe0434f4d
100595f7:	je     0x10059611
100595f9:	cmp    eax,0xe06d7363
100595fe:	jne    0x1005962b
10059600:	call   0x10045e4c
10059605:	and    DWORD PTR [eax+0x90],0x0
1005960c:	jmp    0x1004594e
10059611:	call   0x10045e4c
10059616:	cmp    DWORD PTR [eax+0x90],0x0
1005961d:	jle    0x1005962b
1005961f:	call   0x10045e4c
10059624:	add    eax,0x90
10059629:	dec    DWORD PTR [eax]
1005962b:	xor    eax,eax
1005962d:	ret    
1005962e:	push   0x10
10059630:	push   0x10073680
10059635:	call   0x100459e4
1005963a:	mov    edi,DWORD PTR [ebp+0x10]
1005963d:	mov    ebx,DWORD PTR [ebp+0x8]
10059640:	cmp    DWORD PTR [edi+0x4],0x80
10059647:	jg     0x1005964f
10059649:	movsx  esi,BYTE PTR [ebx+0x8]
1005964d:	jmp    0x10059652
1005964f:	mov    esi,DWORD PTR [ebx+0x8]
10059652:	mov    DWORD PTR [ebp-0x1c],esi
10059655:	call   0x10045e4c
1005965a:	add    eax,0x90
1005965f:	inc    DWORD PTR [eax]
10059661:	and    DWORD PTR [ebp-0x4],0x0
10059665:	cmp    esi,DWORD PTR [ebp+0x14]
10059668:	je     0x100596cf
1005966a:	cmp    esi,0xffffffff
1005966d:	jle    0x10059674
1005966f:	cmp    esi,DWORD PTR [edi+0x4]
10059672:	jl     0x10059679
10059674:	call   0x1004599a
10059679:	mov    eax,esi
1005967b:	shl    eax,0x3
1005967e:	mov    ecx,DWORD PTR [edi+0x8]
10059681:	add    ecx,eax
10059683:	mov    esi,DWORD PTR [ecx]
10059685:	mov    DWORD PTR [ebp-0x20],esi
10059688:	mov    DWORD PTR [ebp-0x4],0x1
1005968f:	cmp    DWORD PTR [ecx+0x4],0x0
10059693:	je     0x100596aa
10059695:	mov    DWORD PTR [ebx+0x8],esi
10059698:	push   0x103
1005969d:	push   ebx
1005969e:	mov    ecx,DWORD PTR [edi+0x8]
100596a1:	push   DWORD PTR [ecx+eax*1+0x4]
100596a5:	call   0x1005a1f0
100596aa:	and    DWORD PTR [ebp-0x4],0x0
100596ae:	jmp    0x100596ca
100596b0:	push   DWORD PTR [ebp-0x14]
100596b3:	call   0x100595ea
100596b8:	pop    ecx
100596b9:	ret    
100596ba:	mov    esp,DWORD PTR [ebp-0x18]
100596bd:	and    DWORD PTR [ebp-0x4],0x0
100596c1:	mov    edi,DWORD PTR [ebp+0x10]
100596c4:	mov    ebx,DWORD PTR [ebp+0x8]
100596c7:	mov    esi,DWORD PTR [ebp-0x20]
100596ca:	mov    DWORD PTR [ebp-0x1c],esi
100596cd:	jmp    0x10059665
100596cf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100596d6:	call   0x100596f4
100596db:	cmp    esi,DWORD PTR [ebp+0x14]
100596de:	je     0x100596e5
100596e0:	call   0x1004599a
100596e5:	mov    DWORD PTR [ebx+0x8],esi
100596e8:	call   0x10045a29
100596ed:	ret    
100596ee:	mov    ebx,DWORD PTR [ebp+0x8]
100596f1:	mov    esi,DWORD PTR [ebp-0x1c]
100596f4:	call   0x10045e4c
100596f9:	cmp    DWORD PTR [eax+0x90],0x0
10059700:	jle    0x1005970e
10059702:	call   0x10045e4c
10059707:	add    eax,0x90
1005970c:	dec    DWORD PTR [eax]
1005970e:	ret    
1005970f:	mov    eax,DWORD PTR [eax]
10059711:	cmp    DWORD PTR [eax],0xe06d7363
10059717:	jne    0x10059751
10059719:	cmp    DWORD PTR [eax+0x10],0x3
1005971d:	jne    0x10059751
1005971f:	mov    ecx,DWORD PTR [eax+0x14]
10059722:	cmp    ecx,0x19930520
10059728:	je     0x1005973a
1005972a:	cmp    ecx,0x19930521
10059730:	je     0x1005973a
10059732:	cmp    ecx,0x19930522
10059738:	jne    0x10059751
1005973a:	cmp    DWORD PTR [eax+0x1c],0x0
1005973e:	jne    0x10059751
10059740:	call   0x10045e4c
10059745:	xor    ecx,ecx
10059747:	inc    ecx
10059748:	mov    DWORD PTR [eax+0x20c],ecx
1005974e:	mov    eax,ecx
10059750:	ret    
10059751:	xor    eax,eax
10059753:	ret    
10059754:	push   0x8
10059756:	push   0x100736a8
1005975b:	call   0x100459e4
10059760:	mov    ecx,DWORD PTR [ebp+0x8]
10059763:	test   ecx,ecx
10059765:	je     0x10059791
10059767:	cmp    DWORD PTR [ecx],0xe06d7363
1005976d:	jne    0x10059791
1005976f:	mov    eax,DWORD PTR [ecx+0x1c]
10059772:	test   eax,eax
10059774:	je     0x10059791
10059776:	mov    eax,DWORD PTR [eax+0x4]
10059779:	test   eax,eax
1005977b:	je     0x10059791
1005977d:	and    DWORD PTR [ebp-0x4],0x0
10059781:	push   eax
10059782:	push   DWORD PTR [ecx+0x18]
10059785:	call   0x10057f93
1005978a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10059791:	call   0x10045a29
10059796:	ret    
10059797:	xor    eax,eax
10059799:	cmp    BYTE PTR [ebp+0xc],al
1005979c:	setne  al
1005979f:	ret    
100597a0:	mov    esp,DWORD PTR [ebp-0x18]
100597a3:	jmp    0x1004594e
100597a8:	mov    ecx,DWORD PTR [esp+0x8]
100597ac:	mov    eax,DWORD PTR [ecx]
100597ae:	push   esi
100597af:	mov    esi,DWORD PTR [esp+0x8]
100597b3:	add    eax,esi
100597b5:	cmp    DWORD PTR [ecx+0x4],0x0
100597b9:	jl     0x100597cb
100597bb:	mov    edx,DWORD PTR [ecx+0x4]
100597be:	mov    ecx,DWORD PTR [ecx+0x8]
100597c1:	mov    esi,DWORD PTR [edx+esi*1]
100597c4:	mov    ecx,DWORD PTR [esi+ecx*1]
100597c7:	add    ecx,edx
100597c9:	add    eax,ecx
100597cb:	pop    esi
100597cc:	ret    
100597cd:	push   ebp
100597ce:	mov    ebp,esp
100597d0:	sub    esp,0xc
100597d3:	test   edi,edi
100597d5:	jne    0x100597e1
100597d7:	call   0x1004599a
100597dc:	jmp    0x1004594e
100597e1:	and    DWORD PTR [ebp-0x8],0x0
100597e5:	cmp    DWORD PTR [edi],0x0
100597e8:	mov    BYTE PTR [ebp-0x1],0x0
100597ec:	jle    0x10059841
100597ee:	push   ebx
100597ef:	push   esi
100597f0:	mov    eax,DWORD PTR [ebp+0x8]
100597f3:	mov    eax,DWORD PTR [eax+0x1c]
100597f6:	mov    eax,DWORD PTR [eax+0xc]
100597f9:	mov    ebx,DWORD PTR [eax]
100597fb:	test   ebx,ebx
100597fd:	lea    esi,[eax+0x4]
10059800:	jle    0x10059835
10059802:	mov    eax,DWORD PTR [ebp-0x8]
10059805:	shl    eax,0x4
10059808:	mov    DWORD PTR [ebp-0xc],eax
1005980b:	mov    ecx,DWORD PTR [ebp+0x8]
1005980e:	push   DWORD PTR [ecx+0x1c]
10059811:	mov    eax,DWORD PTR [esi]
10059813:	push   eax
10059814:	mov    eax,DWORD PTR [edi+0x4]
10059817:	add    eax,DWORD PTR [ebp-0xc]
1005981a:	push   eax
1005981b:	call   0x1005958e
10059820:	add    esp,0xc
10059823:	test   eax,eax
10059825:	jne    0x10059831
10059827:	dec    ebx
10059828:	add    esi,0x4
1005982b:	test   ebx,ebx
1005982d:	jg     0x1005980b
1005982f:	jmp    0x10059835
10059831:	mov    BYTE PTR [ebp-0x1],0x1
10059835:	inc    DWORD PTR [ebp-0x8]
10059838:	mov    eax,DWORD PTR [ebp-0x8]
1005983b:	cmp    eax,DWORD PTR [edi]
1005983d:	jl     0x100597f0
1005983f:	pop    esi
10059840:	pop    ebx
10059841:	mov    al,BYTE PTR [ebp-0x1]
10059844:	leave  
10059845:	ret    
10059846:	push   0x4
10059848:	mov    eax,0x1005e39b
1005984d:	call   0x10058878
10059852:	call   0x10045e4c
10059857:	cmp    DWORD PTR [eax+0x94],0x0
1005985e:	je     0x10059865
10059860:	call   0x1004599a
10059865:	and    DWORD PTR [ebp-0x4],0x0
10059869:	call   0x10045987
1005986e:	or     DWORD PTR [ebp-0x4],0xffffffff
10059872:	jmp    0x1004594e
10059877:	call   0x10045e4c
1005987c:	mov    ecx,DWORD PTR [ebp+0x8]
1005987f:	push   0x0
10059881:	push   0x0
10059883:	mov    DWORD PTR [eax+0x94],ecx
10059889:	call   0x10046704
1005988e:	int3   
1005988f:	push   0x2c
10059891:	push   0x10073720
10059896:	call   0x100459e4
1005989b:	mov    ebx,ecx
1005989d:	mov    edi,DWORD PTR [ebp+0xc]
100598a0:	mov    esi,DWORD PTR [ebp+0x8]
100598a3:	mov    DWORD PTR [ebp-0x1c],ebx
100598a6:	and    DWORD PTR [ebp-0x34],0x0
100598aa:	mov    eax,DWORD PTR [edi-0x4]
100598ad:	mov    DWORD PTR [ebp-0x24],eax
100598b0:	push   DWORD PTR [esi+0x18]
100598b3:	lea    eax,[ebp-0x3c]
100598b6:	push   eax
100598b7:	call   0x10058237
100598bc:	pop    ecx
100598bd:	pop    ecx
100598be:	mov    DWORD PTR [ebp-0x28],eax
100598c1:	call   0x10045e4c
100598c6:	mov    eax,DWORD PTR [eax+0x88]
100598cc:	mov    DWORD PTR [ebp-0x2c],eax
100598cf:	call   0x10045e4c
100598d4:	mov    eax,DWORD PTR [eax+0x8c]
100598da:	mov    DWORD PTR [ebp-0x30],eax
100598dd:	call   0x10045e4c
100598e2:	mov    DWORD PTR [eax+0x88],esi
100598e8:	call   0x10045e4c
100598ed:	mov    ecx,DWORD PTR [ebp+0x10]
100598f0:	mov    DWORD PTR [eax+0x8c],ecx
100598f6:	and    DWORD PTR [ebp-0x4],0x0
100598fa:	xor    eax,eax
100598fc:	inc    eax
100598fd:	mov    DWORD PTR [ebp+0x10],eax
10059900:	mov    DWORD PTR [ebp-0x4],eax
10059903:	push   DWORD PTR [ebp+0x1c]
10059906:	push   DWORD PTR [ebp+0x18]
10059909:	push   ebx
1005990a:	push   DWORD PTR [ebp+0x14]
1005990d:	push   edi
1005990e:	call   0x100582cc
10059913:	add    esp,0x14
10059916:	mov    DWORD PTR [ebp-0x1c],eax
10059919:	and    DWORD PTR [ebp-0x4],0x0
1005991d:	jmp    0x1005998e
1005991f:	mov    eax,DWORD PTR [ebp-0x14]
10059922:	call   0x1005970f
10059927:	ret    
10059928:	mov    esp,DWORD PTR [ebp-0x18]
1005992b:	call   0x10045e4c
10059930:	and    DWORD PTR [eax+0x20c],0x0
10059937:	mov    esi,DWORD PTR [ebp+0x14]
1005993a:	mov    edi,DWORD PTR [ebp+0xc]
1005993d:	cmp    DWORD PTR [esi+0x4],0x80
10059944:	jg     0x1005994c
10059946:	movsx  ecx,BYTE PTR [edi+0x8]
1005994a:	jmp    0x1005994f
1005994c:	mov    ecx,DWORD PTR [edi+0x8]
1005994f:	mov    ebx,DWORD PTR [esi+0x10]
10059952:	and    DWORD PTR [ebp-0x20],0x0
10059956:	mov    eax,DWORD PTR [ebp-0x20]
10059959:	cmp    eax,DWORD PTR [esi+0xc]
1005995c:	jae    0x10059976
1005995e:	imul   eax,eax,0x14
10059961:	add    eax,ebx
10059963:	mov    edx,DWORD PTR [eax+0x4]
10059966:	cmp    ecx,edx
10059968:	jle    0x100599aa
1005996a:	cmp    ecx,DWORD PTR [eax+0x8]
1005996d:	jg     0x100599aa
1005996f:	mov    eax,DWORD PTR [esi+0x8]
10059972:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
10059976:	push   ecx
10059977:	push   esi
10059978:	push   0x0
1005997a:	push   edi
1005997b:	call   0x1005962e
10059980:	add    esp,0x10
10059983:	and    DWORD PTR [ebp-0x1c],0x0
10059987:	and    DWORD PTR [ebp-0x4],0x0
1005998b:	mov    esi,DWORD PTR [ebp+0x8]
1005998e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10059995:	mov    DWORD PTR [ebp+0x10],0x0
1005999c:	call   0x100599b5
100599a1:	mov    eax,DWORD PTR [ebp-0x1c]
100599a4:	call   0x10045a29
100599a9:	ret    
100599aa:	inc    DWORD PTR [ebp-0x20]
100599ad:	jmp    0x10059956
100599af:	mov    edi,DWORD PTR [ebp+0xc]
100599b2:	mov    esi,DWORD PTR [ebp+0x8]
100599b5:	mov    eax,DWORD PTR [ebp-0x24]
100599b8:	mov    DWORD PTR [edi-0x4],eax
100599bb:	push   DWORD PTR [ebp-0x28]
100599be:	call   0x10058280
100599c3:	pop    ecx
100599c4:	call   0x10045e4c
100599c9:	mov    ecx,DWORD PTR [ebp-0x2c]
100599cc:	mov    DWORD PTR [eax+0x88],ecx
100599d2:	call   0x10045e4c
100599d7:	mov    ecx,DWORD PTR [ebp-0x30]
100599da:	mov    DWORD PTR [eax+0x8c],ecx
100599e0:	cmp    DWORD PTR [esi],0xe06d7363
100599e6:	jne    0x10059a2a
100599e8:	cmp    DWORD PTR [esi+0x10],0x3
100599ec:	jne    0x10059a2a
100599ee:	mov    eax,DWORD PTR [esi+0x14]
100599f1:	cmp    eax,0x19930520
100599f6:	je     0x10059a06
100599f8:	cmp    eax,0x19930521
100599fd:	je     0x10059a06
100599ff:	cmp    eax,0x19930522
10059a04:	jne    0x10059a2a
10059a06:	cmp    DWORD PTR [ebp-0x34],0x0
10059a0a:	jne    0x10059a2a
10059a0c:	cmp    DWORD PTR [ebp-0x1c],0x0
10059a10:	je     0x10059a2a
10059a12:	push   DWORD PTR [esi+0x18]
10059a15:	call   0x1005825f
10059a1a:	pop    ecx
10059a1b:	test   eax,eax
10059a1d:	je     0x10059a2a
10059a1f:	push   DWORD PTR [ebp+0x10]
10059a22:	push   esi
10059a23:	call   0x10059754
10059a28:	pop    ecx
10059a29:	pop    ecx
10059a2a:	ret    
10059a2b:	push   0xc
10059a2d:	push   0x10073748
10059a32:	call   0x100459e4
10059a37:	xor    edx,edx
10059a39:	mov    DWORD PTR [ebp-0x1c],edx
10059a3c:	mov    eax,DWORD PTR [ebp+0x10]
10059a3f:	mov    ecx,DWORD PTR [eax+0x4]
10059a42:	cmp    ecx,edx
10059a44:	je     0x10059ba2
10059a4a:	cmp    BYTE PTR [ecx+0x8],dl
10059a4d:	je     0x10059ba2
10059a53:	mov    ecx,DWORD PTR [eax+0x8]
10059a56:	cmp    ecx,edx
10059a58:	jne    0x10059a66
10059a5a:	test   DWORD PTR [eax],0x80000000
10059a60:	je     0x10059ba2
10059a66:	mov    eax,DWORD PTR [eax]
10059a68:	mov    esi,DWORD PTR [ebp+0xc]
10059a6b:	test   eax,eax
10059a6d:	js     0x10059a73
10059a6f:	lea    esi,[ecx+esi*1+0xc]
10059a73:	mov    DWORD PTR [ebp-0x4],edx
10059a76:	xor    ebx,ebx
10059a78:	inc    ebx
10059a79:	push   ebx
10059a7a:	test   al,0x8
10059a7c:	je     0x10059abf
10059a7e:	mov    edi,DWORD PTR [ebp+0x8]
10059a81:	push   DWORD PTR [edi+0x18]
10059a84:	call   0x1004dcc8
10059a89:	pop    ecx
10059a8a:	pop    ecx
10059a8b:	test   eax,eax
10059a8d:	je     0x10059b85
10059a93:	push   ebx
10059a94:	push   esi
10059a95:	call   0x1004dcc8
10059a9a:	pop    ecx
10059a9b:	pop    ecx
10059a9c:	test   eax,eax
10059a9e:	je     0x10059b85
10059aa4:	mov    eax,DWORD PTR [edi+0x18]
10059aa7:	mov    DWORD PTR [esi],eax
10059aa9:	mov    ecx,DWORD PTR [ebp+0x14]
10059aac:	add    ecx,0x8
10059aaf:	push   ecx
10059ab0:	push   eax
10059ab1:	call   0x100597a8
10059ab6:	pop    ecx
10059ab7:	pop    ecx
10059ab8:	mov    DWORD PTR [esi],eax
10059aba:	jmp    0x10059b8a
10059abf:	mov    edi,DWORD PTR [ebp+0x14]
10059ac2:	mov    eax,DWORD PTR [ebp+0x8]
10059ac5:	push   DWORD PTR [eax+0x18]
10059ac8:	test   BYTE PTR [edi],bl
10059aca:	je     0x10059b14
10059acc:	call   0x1004dcc8
10059ad1:	pop    ecx
10059ad2:	pop    ecx
10059ad3:	test   eax,eax
10059ad5:	je     0x10059b85
10059adb:	push   ebx
10059adc:	push   esi
10059add:	call   0x1004dcc8
10059ae2:	pop    ecx
10059ae3:	pop    ecx
10059ae4:	test   eax,eax
10059ae6:	je     0x10059b85
10059aec:	push   DWORD PTR [edi+0x14]
10059aef:	mov    eax,DWORD PTR [ebp+0x8]
10059af2:	push   DWORD PTR [eax+0x18]
10059af5:	push   esi
10059af6:	call   0x10044410
10059afb:	add    esp,0xc
10059afe:	cmp    DWORD PTR [edi+0x14],0x4
10059b02:	jne    0x10059b8a
10059b08:	mov    eax,DWORD PTR [esi]
10059b0a:	test   eax,eax
10059b0c:	je     0x10059b8a
10059b0e:	add    edi,0x8
10059b11:	push   edi
10059b12:	jmp    0x10059ab0
10059b14:	cmp    DWORD PTR [edi+0x18],edx
10059b17:	jne    0x10059b51
10059b19:	call   0x1004dcc8
10059b1e:	pop    ecx
10059b1f:	pop    ecx
10059b20:	test   eax,eax
10059b22:	je     0x10059b85
10059b24:	push   ebx
10059b25:	push   esi
10059b26:	call   0x1004dcc8
10059b2b:	pop    ecx
10059b2c:	pop    ecx
10059b2d:	test   eax,eax
10059b2f:	je     0x10059b85
10059b31:	push   DWORD PTR [edi+0x14]
10059b34:	add    edi,0x8
10059b37:	push   edi
10059b38:	mov    eax,DWORD PTR [ebp+0x8]
10059b3b:	push   DWORD PTR [eax+0x18]
10059b3e:	call   0x100597a8
10059b43:	pop    ecx
10059b44:	pop    ecx
10059b45:	push   eax
10059b46:	push   esi
10059b47:	call   0x10044410
10059b4c:	add    esp,0xc
10059b4f:	jmp    0x10059b8a
10059b51:	call   0x1004dcc8
10059b56:	pop    ecx
10059b57:	pop    ecx
10059b58:	test   eax,eax
10059b5a:	je     0x10059b85
10059b5c:	push   ebx
10059b5d:	push   esi
10059b5e:	call   0x1004dcc8
10059b63:	pop    ecx
10059b64:	pop    ecx
10059b65:	test   eax,eax
10059b67:	je     0x10059b85
10059b69:	push   DWORD PTR [edi+0x18]
10059b6c:	call   0x1004dcc8
10059b71:	pop    ecx
10059b72:	test   eax,eax
10059b74:	je     0x10059b85
10059b76:	test   BYTE PTR [edi],0x4
10059b79:	push   0x0
10059b7b:	pop    eax
10059b7c:	setne  al
10059b7f:	inc    eax
10059b80:	mov    DWORD PTR [ebp-0x1c],eax
10059b83:	jmp    0x10059b8a
10059b85:	call   0x1004599a
10059b8a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10059b91:	mov    eax,DWORD PTR [ebp-0x1c]
10059b94:	jmp    0x10059ba4
10059b96:	xor    eax,eax
10059b98:	inc    eax
10059b99:	ret    
10059b9a:	mov    esp,DWORD PTR [ebp-0x18]
10059b9d:	jmp    0x1004594e
10059ba2:	xor    eax,eax
10059ba4:	call   0x10045a29
10059ba9:	ret    
10059baa:	push   0x8
10059bac:	push   0x10073768
10059bb1:	call   0x100459e4
10059bb6:	mov    eax,DWORD PTR [ebp+0x10]
10059bb9:	test   DWORD PTR [eax],0x80000000
10059bbf:	je     0x10059bc6
10059bc1:	mov    ebx,DWORD PTR [ebp+0xc]
10059bc4:	jmp    0x10059bd0
10059bc6:	mov    ecx,DWORD PTR [eax+0x8]
10059bc9:	mov    edx,DWORD PTR [ebp+0xc]
10059bcc:	lea    ebx,[ecx+edx*1+0xc]
10059bd0:	and    DWORD PTR [ebp-0x4],0x0
10059bd4:	mov    esi,DWORD PTR [ebp+0x14]
10059bd7:	push   esi
10059bd8:	push   eax
10059bd9:	push   DWORD PTR [ebp+0xc]
10059bdc:	mov    edi,DWORD PTR [ebp+0x8]
10059bdf:	push   edi
10059be0:	call   0x10059a2b
10059be5:	add    esp,0x10
10059be8:	dec    eax
10059be9:	je     0x10059c0a
10059beb:	dec    eax
10059bec:	jne    0x10059c22
10059bee:	push   0x1
10059bf0:	lea    eax,[esi+0x8]
10059bf3:	push   eax
10059bf4:	push   DWORD PTR [edi+0x18]
10059bf7:	call   0x100597a8
10059bfc:	pop    ecx
10059bfd:	pop    ecx
10059bfe:	push   eax
10059bff:	push   DWORD PTR [esi+0x18]
10059c02:	push   ebx
10059c03:	call   0x10057f93
10059c08:	jmp    0x10059c22
10059c0a:	lea    eax,[esi+0x8]
10059c0d:	push   eax
10059c0e:	push   DWORD PTR [edi+0x18]
10059c11:	call   0x100597a8
10059c16:	pop    ecx
10059c17:	pop    ecx
10059c18:	push   eax
10059c19:	push   DWORD PTR [esi+0x18]
10059c1c:	push   ebx
10059c1d:	call   0x10057f93
10059c22:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10059c29:	call   0x10045a29
10059c2e:	ret    
10059c2f:	xor    eax,eax
10059c31:	inc    eax
10059c32:	ret    
10059c33:	mov    esp,DWORD PTR [ebp-0x18]
10059c36:	jmp    0x1004594e
10059c3b:	push   ebp
10059c3c:	mov    ebp,esp
10059c3e:	cmp    DWORD PTR [ebp+0x18],0x0
10059c42:	je     0x10059c54
10059c44:	push   DWORD PTR [ebp+0x18]
10059c47:	push   ebx
10059c48:	push   esi
10059c49:	push   DWORD PTR [ebp+0x8]
10059c4c:	call   0x10059baa
10059c51:	add    esp,0x10
10059c54:	cmp    DWORD PTR [ebp+0x20],0x0
10059c58:	push   DWORD PTR [ebp+0x8]
10059c5b:	jne    0x10059c60
10059c5d:	push   esi
10059c5e:	jmp    0x10059c63
10059c60:	push   DWORD PTR [ebp+0x20]
10059c63:	call   0x10057f9a
10059c68:	push   DWORD PTR [edi]
10059c6a:	push   DWORD PTR [ebp+0x14]
10059c6d:	push   DWORD PTR [ebp+0x10]
10059c70:	push   esi
10059c71:	call   0x1005962e
10059c76:	mov    eax,DWORD PTR [edi+0x4]
10059c79:	push   0x100
10059c7e:	push   DWORD PTR [ebp+0x1c]
10059c81:	inc    eax
10059c82:	push   DWORD PTR [ebp+0x14]
10059c85:	mov    DWORD PTR [esi+0x8],eax
10059c88:	push   DWORD PTR [ebp+0xc]
10059c8b:	mov    ecx,DWORD PTR [ebx+0xc]
10059c8e:	push   esi
10059c8f:	push   DWORD PTR [ebp+0x8]
10059c92:	call   0x1005988f
10059c97:	add    esp,0x28
10059c9a:	test   eax,eax
10059c9c:	je     0x10059ca5
10059c9e:	push   esi
10059c9f:	push   eax
10059ca0:	call   0x10057f63
10059ca5:	pop    ebp
10059ca6:	ret    
10059ca7:	push   ebp
10059ca8:	mov    ebp,esp
10059caa:	push   ecx
10059cab:	push   ecx
10059cac:	push   esi
10059cad:	mov    esi,DWORD PTR [ebp+0x8]
10059cb0:	cmp    DWORD PTR [esi],0x80000003
10059cb6:	je     0x10059d96
10059cbc:	push   edi
10059cbd:	call   0x10045e4c
10059cc2:	cmp    DWORD PTR [eax+0x80],0x0
10059cc9:	je     0x10059d0a
10059ccb:	call   0x10045e4c
10059cd0:	lea    edi,[eax+0x80]
10059cd6:	call   0x10045c39
10059cdb:	cmp    DWORD PTR [edi],eax
10059cdd:	je     0x10059d0a
10059cdf:	cmp    DWORD PTR [esi],0xe0434f4d
10059ce5:	je     0x10059d0a
10059ce7:	push   DWORD PTR [ebp+0x24]
10059cea:	push   DWORD PTR [ebp+0x20]
10059ced:	push   DWORD PTR [ebp+0x18]
10059cf0:	push   DWORD PTR [ebp+0x14]
10059cf3:	push   DWORD PTR [ebp+0x10]
10059cf6:	push   DWORD PTR [ebp+0xc]
10059cf9:	push   esi
10059cfa:	call   0x10058052
10059cff:	add    esp,0x1c
10059d02:	test   eax,eax
10059d04:	jne    0x10059d95
10059d0a:	mov    edi,DWORD PTR [ebp+0x18]
10059d0d:	cmp    DWORD PTR [edi+0xc],0x0
10059d11:	jne    0x10059d18
10059d13:	call   0x1004599a
10059d18:	mov    esi,DWORD PTR [ebp+0x1c]
10059d1b:	lea    eax,[ebp-0x8]
10059d1e:	push   eax
10059d1f:	lea    eax,[ebp-0x4]
10059d22:	push   eax
10059d23:	push   esi
10059d24:	push   DWORD PTR [ebp+0x20]
10059d27:	push   edi
10059d28:	call   0x100581c4
10059d2d:	mov    edi,eax
10059d2f:	mov    eax,DWORD PTR [ebp-0x4]
10059d32:	add    esp,0x14
10059d35:	cmp    eax,DWORD PTR [ebp-0x8]
10059d38:	jae    0x10059d95
10059d3a:	push   ebx
10059d3b:	cmp    esi,DWORD PTR [edi]
10059d3d:	jl     0x10059d86
10059d3f:	cmp    esi,DWORD PTR [edi+0x4]
10059d42:	jg     0x10059d86
10059d44:	mov    eax,DWORD PTR [edi+0xc]
10059d47:	mov    ecx,DWORD PTR [edi+0x10]
10059d4a:	shl    eax,0x4
10059d4d:	add    eax,ecx
10059d4f:	mov    ecx,DWORD PTR [eax-0xc]
10059d52:	test   ecx,ecx
10059d54:	je     0x10059d5c
10059d56:	cmp    BYTE PTR [ecx+0x8],0x0
10059d5a:	jne    0x10059d86
10059d5c:	lea    ebx,[eax-0x10]
10059d5f:	test   BYTE PTR [ebx],0x40
10059d62:	jne    0x10059d86
10059d64:	push   DWORD PTR [ebp+0x24]
10059d67:	mov    esi,DWORD PTR [ebp+0xc]
10059d6a:	push   DWORD PTR [ebp+0x20]
10059d6d:	push   0x0
10059d6f:	push   DWORD PTR [ebp+0x18]
10059d72:	push   DWORD PTR [ebp+0x14]
10059d75:	push   DWORD PTR [ebp+0x10]
10059d78:	push   DWORD PTR [ebp+0x8]
10059d7b:	call   0x10059c3b
10059d80:	mov    esi,DWORD PTR [ebp+0x1c]
10059d83:	add    esp,0x1c
10059d86:	inc    DWORD PTR [ebp-0x4]
10059d89:	mov    eax,DWORD PTR [ebp-0x4]
10059d8c:	add    edi,0x14
10059d8f:	cmp    eax,DWORD PTR [ebp-0x8]
10059d92:	jb     0x10059d3b
10059d94:	pop    ebx
10059d95:	pop    edi
10059d96:	pop    esi
10059d97:	leave  
10059d98:	ret    
10059d99:	push   ebp
10059d9a:	mov    ebp,esp
10059d9c:	sub    esp,0x2c
10059d9f:	mov    ecx,DWORD PTR [ebp+0xc]
10059da2:	push   ebx
10059da3:	mov    ebx,DWORD PTR [ebp+0x18]
10059da6:	mov    eax,DWORD PTR [ebx+0x4]
10059da9:	cmp    eax,0x80
10059dae:	push   esi
10059daf:	push   edi
10059db0:	mov    BYTE PTR [ebp-0x1],0x0
10059db4:	jg     0x10059dbc
10059db6:	movsx  ecx,BYTE PTR [ecx+0x8]
10059dba:	jmp    0x10059dbf
10059dbc:	mov    ecx,DWORD PTR [ecx+0x8]
10059dbf:	cmp    ecx,0xffffffff
10059dc2:	mov    DWORD PTR [ebp-0x8],ecx
10059dc5:	jl     0x10059dcb
10059dc7:	cmp    ecx,eax
10059dc9:	jl     0x10059dd0
10059dcb:	call   0x1004599a
10059dd0:	mov    esi,DWORD PTR [ebp+0x8]
10059dd3:	mov    edi,0xe06d7363
10059dd8:	cmp    DWORD PTR [esi],edi
10059dda:	jne    0x1005a0ab
10059de0:	cmp    DWORD PTR [esi+0x10],0x3
10059de4:	mov    ebx,0x19930520
10059de9:	jne    0x10059f18
10059def:	mov    eax,DWORD PTR [esi+0x14]
10059df2:	cmp    eax,ebx
10059df4:	je     0x10059e08
10059df6:	cmp    eax,0x19930521
10059dfb:	je     0x10059e08
10059dfd:	cmp    eax,0x19930522
10059e02:	jne    0x10059f18
10059e08:	cmp    DWORD PTR [esi+0x1c],0x0
10059e0c:	jne    0x10059f18
10059e12:	call   0x10045e4c
10059e17:	cmp    DWORD PTR [eax+0x88],0x0
10059e1e:	je     0x1005a0ea
10059e24:	call   0x10045e4c
10059e29:	mov    esi,DWORD PTR [eax+0x88]
10059e2f:	mov    DWORD PTR [ebp+0x8],esi
10059e32:	call   0x10045e4c
10059e37:	mov    eax,DWORD PTR [eax+0x8c]
10059e3d:	push   0x1
10059e3f:	push   esi
10059e40:	mov    DWORD PTR [ebp+0x10],eax
10059e43:	call   0x1004dcc8
10059e48:	test   eax,eax
10059e4a:	pop    ecx
10059e4b:	pop    ecx
10059e4c:	jne    0x10059e53
10059e4e:	call   0x1004599a
10059e53:	cmp    DWORD PTR [esi],edi
10059e55:	jne    0x10059e7d
10059e57:	cmp    DWORD PTR [esi+0x10],0x3
10059e5b:	jne    0x10059e7d
10059e5d:	mov    eax,DWORD PTR [esi+0x14]
10059e60:	cmp    eax,ebx
10059e62:	je     0x10059e72
10059e64:	cmp    eax,0x19930521
10059e69:	je     0x10059e72
10059e6b:	cmp    eax,0x19930522
10059e70:	jne    0x10059e7d
10059e72:	cmp    DWORD PTR [esi+0x1c],0x0
10059e76:	jne    0x10059e7d
10059e78:	call   0x1004599a
10059e7d:	call   0x10045e4c
10059e82:	cmp    DWORD PTR [eax+0x94],0x0
10059e89:	je     0x10059f18
10059e8f:	call   0x10045e4c
10059e94:	mov    edi,DWORD PTR [eax+0x94]
10059e9a:	call   0x10045e4c
10059e9f:	push   DWORD PTR [ebp+0x8]
10059ea2:	xor    esi,esi
10059ea4:	mov    DWORD PTR [eax+0x94],esi
10059eaa:	call   0x100597cd
10059eaf:	test   al,al
10059eb1:	pop    ecx
10059eb2:	jne    0x10059f10
10059eb4:	xor    ebx,ebx
10059eb6:	cmp    DWORD PTR [edi],ebx
10059eb8:	jle    0x10059ed7
10059eba:	mov    eax,DWORD PTR [edi+0x4]
10059ebd:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
10059ec1:	push   0x1007e1a8
10059ec6:	call   0x1004236a
10059ecb:	test   al,al
10059ecd:	jne    0x10059edc
10059ecf:	inc    esi
10059ed0:	add    ebx,0x10
10059ed3:	cmp    esi,DWORD PTR [edi]
10059ed5:	jl     0x10059eba
10059ed7:	jmp    0x1004594e
10059edc:	push   0x1
10059ede:	push   DWORD PTR [ebp+0x8]
10059ee1:	call   0x10059754
10059ee6:	pop    ecx
10059ee7:	pop    ecx
10059ee8:	lea    eax,[ebp+0x8]
10059eeb:	push   eax
10059eec:	lea    ecx,[ebp-0x2c]
10059eef:	mov    DWORD PTR [ebp+0x8],0x1006b908
10059ef6:	call   0x10041e12
10059efb:	push   0x10073784
10059f00:	lea    eax,[ebp-0x2c]
10059f03:	push   eax
10059f04:	mov    DWORD PTR [ebp-0x2c],0x1006b900
10059f0b:	call   0x10046704
10059f10:	mov    esi,DWORD PTR [ebp+0x8]
10059f13:	mov    edi,0xe06d7363
10059f18:	cmp    DWORD PTR [esi],edi
10059f1a:	jne    0x1005a0a8
10059f20:	cmp    DWORD PTR [esi+0x10],0x3
10059f24:	jne    0x1005a0a8
10059f2a:	mov    eax,DWORD PTR [esi+0x14]
10059f2d:	cmp    eax,ebx
10059f2f:	je     0x10059f43
10059f31:	cmp    eax,0x19930521
10059f36:	je     0x10059f43
10059f38:	cmp    eax,0x19930522
10059f3d:	jne    0x1005a0a8
10059f43:	mov    edi,DWORD PTR [ebp+0x18]
10059f46:	cmp    DWORD PTR [edi+0xc],0x0
10059f4a:	jbe    0x1005a00f
10059f50:	lea    eax,[ebp-0x1c]
10059f53:	push   eax
10059f54:	lea    eax,[ebp-0x10]
10059f57:	push   eax
10059f58:	push   DWORD PTR [ebp-0x8]
10059f5b:	push   DWORD PTR [ebp+0x20]
10059f5e:	push   edi
10059f5f:	call   0x100581c4
10059f64:	add    esp,0x14
10059f67:	mov    edi,eax
10059f69:	mov    eax,DWORD PTR [ebp-0x10]
10059f6c:	cmp    eax,DWORD PTR [ebp-0x1c]
10059f6f:	jae    0x1005a00c
10059f75:	mov    eax,DWORD PTR [ebp-0x8]
10059f78:	cmp    DWORD PTR [edi],eax
10059f7a:	jg     0x1005a001
10059f80:	cmp    eax,DWORD PTR [edi+0x4]
10059f83:	jg     0x1005a001
10059f85:	mov    eax,DWORD PTR [edi+0x10]
10059f88:	mov    DWORD PTR [ebp-0xc],eax
10059f8b:	mov    eax,DWORD PTR [edi+0xc]
10059f8e:	test   eax,eax
10059f90:	mov    DWORD PTR [ebp-0x18],eax
10059f93:	jle    0x1005a001
10059f95:	mov    eax,DWORD PTR [esi+0x1c]
10059f98:	mov    eax,DWORD PTR [eax+0xc]
10059f9b:	lea    ebx,[eax+0x4]
10059f9e:	mov    eax,DWORD PTR [eax]
10059fa0:	test   eax,eax
10059fa2:	mov    DWORD PTR [ebp-0x14],eax
10059fa5:	jle    0x10059fca
10059fa7:	push   DWORD PTR [esi+0x1c]
10059faa:	mov    eax,DWORD PTR [ebx]
10059fac:	push   eax
10059fad:	push   DWORD PTR [ebp-0xc]
10059fb0:	mov    DWORD PTR [ebp-0x20],eax
10059fb3:	call   0x1005958e
10059fb8:	add    esp,0xc
10059fbb:	test   eax,eax
10059fbd:	jne    0x10059fd9
10059fbf:	dec    DWORD PTR [ebp-0x14]
10059fc2:	add    ebx,0x4
10059fc5:	cmp    DWORD PTR [ebp-0x14],eax
10059fc8:	jg     0x10059fa7
10059fca:	dec    DWORD PTR [ebp-0x18]
10059fcd:	add    DWORD PTR [ebp-0xc],0x10
10059fd1:	cmp    DWORD PTR [ebp-0x18],0x0
10059fd5:	jg     0x10059f95
10059fd7:	jmp    0x1005a001
10059fd9:	push   DWORD PTR [ebp+0x24]
10059fdc:	mov    ebx,DWORD PTR [ebp-0xc]
10059fdf:	push   DWORD PTR [ebp+0x20]
10059fe2:	mov    BYTE PTR [ebp-0x1],0x1
10059fe6:	push   DWORD PTR [ebp-0x20]
10059fe9:	push   DWORD PTR [ebp+0x18]
10059fec:	push   DWORD PTR [ebp+0x14]
10059fef:	push   DWORD PTR [ebp+0x10]
10059ff2:	push   esi
10059ff3:	mov    esi,DWORD PTR [ebp+0xc]
10059ff6:	call   0x10059c3b
10059ffb:	mov    esi,DWORD PTR [ebp+0x8]
10059ffe:	add    esp,0x1c
1005a001:	inc    DWORD PTR [ebp-0x10]
1005a004:	add    edi,0x14
1005a007:	jmp    0x10059f69
1005a00c:	mov    edi,DWORD PTR [ebp+0x18]
1005a00f:	cmp    BYTE PTR [ebp+0x1c],0x0
1005a013:	je     0x1005a01f
1005a015:	push   0x1
1005a017:	push   esi
1005a018:	call   0x10059754
1005a01d:	pop    ecx
1005a01e:	pop    ecx
1005a01f:	cmp    BYTE PTR [ebp-0x1],0x0
1005a023:	jne    0x1005a0d7
1005a029:	mov    eax,DWORD PTR [edi]
1005a02b:	and    eax,0x1fffffff
1005a030:	cmp    eax,0x19930521
1005a035:	jb     0x1005a0d7
1005a03b:	mov    edi,DWORD PTR [edi+0x1c]
1005a03e:	test   edi,edi
1005a040:	je     0x1005a0d7
1005a046:	push   esi
1005a047:	call   0x100597cd
1005a04c:	test   al,al
1005a04e:	pop    ecx
1005a04f:	jne    0x1005a0d7
1005a055:	call   0x10045e4c
1005a05a:	call   0x10045e4c
1005a05f:	call   0x10045e4c
1005a064:	mov    DWORD PTR [eax+0x88],esi
1005a06a:	call   0x10045e4c
1005a06f:	cmp    DWORD PTR [ebp+0x24],0x0
1005a073:	mov    ecx,DWORD PTR [ebp+0x10]
1005a076:	mov    DWORD PTR [eax+0x8c],ecx
1005a07c:	push   esi
1005a07d:	jne    0x1005a084
1005a07f:	push   DWORD PTR [ebp+0xc]
1005a082:	jmp    0x1005a087
1005a084:	push   DWORD PTR [ebp+0x24]
1005a087:	call   0x10057f9a
1005a08c:	mov    esi,DWORD PTR [ebp+0x18]
1005a08f:	push   0xffffffff
1005a091:	push   esi
1005a092:	push   DWORD PTR [ebp+0x14]
1005a095:	push   DWORD PTR [ebp+0xc]
1005a098:	call   0x1005962e
1005a09d:	add    esp,0x10
1005a0a0:	push   DWORD PTR [esi+0x1c]
1005a0a3:	call   0x10059846
1005a0a8:	mov    ebx,DWORD PTR [ebp+0x18]
1005a0ab:	cmp    DWORD PTR [ebx+0xc],0x0
1005a0af:	jbe    0x1005a0d7
1005a0b1:	cmp    BYTE PTR [ebp+0x1c],0x0
1005a0b5:	jne    0x10059ed7
1005a0bb:	push   DWORD PTR [ebp+0x24]
1005a0be:	push   DWORD PTR [ebp+0x20]
1005a0c1:	push   DWORD PTR [ebp-0x8]
1005a0c4:	push   ebx
1005a0c5:	push   DWORD PTR [ebp+0x14]
1005a0c8:	push   DWORD PTR [ebp+0x10]
1005a0cb:	push   DWORD PTR [ebp+0xc]
1005a0ce:	push   esi
1005a0cf:	call   0x10059ca7
1005a0d4:	add    esp,0x20
1005a0d7:	call   0x10045e4c
1005a0dc:	cmp    DWORD PTR [eax+0x94],0x0
1005a0e3:	je     0x1005a0ea
1005a0e5:	call   0x1004599a
1005a0ea:	pop    edi
1005a0eb:	pop    esi
1005a0ec:	pop    ebx
1005a0ed:	leave  
1005a0ee:	ret    
1005a0ef:	push   esi
1005a0f0:	push   DWORD PTR [esp+0x8]
1005a0f4:	mov    esi,ecx
1005a0f6:	call   0x10041e78
1005a0fb:	mov    DWORD PTR [esi],0x1006b900
1005a101:	mov    eax,esi
1005a103:	pop    esi
1005a104:	ret    0x4
1005a107:	push   ebp
1005a108:	mov    ebp,esp
1005a10a:	push   ebx
1005a10b:	push   esi
1005a10c:	push   edi
1005a10d:	call   0x10045e4c
1005a112:	cmp    DWORD PTR [eax+0x20c],0x0
1005a119:	mov    eax,DWORD PTR [ebp+0x18]
1005a11c:	mov    ecx,DWORD PTR [ebp+0x8]
1005a11f:	mov    edi,0xe06d7363
1005a124:	mov    esi,0x1fffffff
1005a129:	mov    ebx,0x19930522
1005a12e:	jne    0x1005a150
1005a130:	mov    edx,DWORD PTR [ecx]
1005a132:	cmp    edx,edi
1005a134:	je     0x1005a150
1005a136:	cmp    edx,0x80000026
1005a13c:	je     0x1005a150
1005a13e:	mov    edx,DWORD PTR [eax]
1005a140:	and    edx,esi
1005a142:	cmp    edx,ebx
1005a144:	jb     0x1005a150
1005a146:	test   BYTE PTR [eax+0x20],0x1
1005a14a:	jne    0x1005a1e3
1005a150:	test   BYTE PTR [ecx+0x4],0x66
1005a154:	je     0x1005a179
1005a156:	cmp    DWORD PTR [eax+0x4],0x0
1005a15a:	je     0x1005a1e3
1005a160:	cmp    DWORD PTR [ebp+0x1c],0x0
1005a164:	jne    0x1005a1e3
1005a166:	push   0xffffffff
1005a168:	push   eax
1005a169:	push   DWORD PTR [ebp+0x14]
1005a16c:	push   DWORD PTR [ebp+0xc]
1005a16f:	call   0x1005962e
1005a174:	add    esp,0x10
1005a177:	jmp    0x1005a1e3
1005a179:	cmp    DWORD PTR [eax+0xc],0x0
1005a17d:	jne    0x1005a191
1005a17f:	mov    edx,DWORD PTR [eax]
1005a181:	and    edx,esi
1005a183:	cmp    edx,0x19930521
1005a189:	jb     0x1005a1e3
1005a18b:	cmp    DWORD PTR [eax+0x1c],0x0
1005a18f:	je     0x1005a1e3
1005a191:	cmp    DWORD PTR [ecx],edi
1005a193:	jne    0x1005a1c7
1005a195:	cmp    DWORD PTR [ecx+0x10],0x3
1005a199:	jb     0x1005a1c7
1005a19b:	cmp    DWORD PTR [ecx+0x14],ebx
1005a19e:	jbe    0x1005a1c7
1005a1a0:	mov    edx,DWORD PTR [ecx+0x1c]
1005a1a3:	mov    edx,DWORD PTR [edx+0x8]
1005a1a6:	test   edx,edx
1005a1a8:	je     0x1005a1c7
1005a1aa:	movzx  esi,BYTE PTR [ebp+0x24]
1005a1ae:	push   esi
1005a1af:	push   DWORD PTR [ebp+0x20]
1005a1b2:	push   DWORD PTR [ebp+0x1c]
1005a1b5:	push   eax
1005a1b6:	push   DWORD PTR [ebp+0x14]
1005a1b9:	push   DWORD PTR [ebp+0x10]
1005a1bc:	push   DWORD PTR [ebp+0xc]
1005a1bf:	push   ecx
1005a1c0:	call   edx
1005a1c2:	add    esp,0x20
1005a1c5:	jmp    0x1005a1e6
1005a1c7:	push   DWORD PTR [ebp+0x20]
1005a1ca:	push   DWORD PTR [ebp+0x1c]
1005a1cd:	push   DWORD PTR [ebp+0x24]
1005a1d0:	push   eax
1005a1d1:	push   DWORD PTR [ebp+0x14]
1005a1d4:	push   DWORD PTR [ebp+0x10]
1005a1d7:	push   DWORD PTR [ebp+0xc]
1005a1da:	push   ecx
1005a1db:	call   0x10059d99
1005a1e0:	add    esp,0x20
1005a1e3:	xor    eax,eax
1005a1e5:	inc    eax
1005a1e6:	pop    edi
1005a1e7:	pop    esi
1005a1e8:	pop    ebx
1005a1e9:	pop    ebp
1005a1ea:	ret    
1005a1eb:	int3   
1005a1ec:	int3   
1005a1ed:	int3   
1005a1ee:	int3   
1005a1ef:	int3   
1005a1f0:	push   ebp
1005a1f1:	mov    ebp,esp
1005a1f3:	sub    esp,0x4
1005a1f6:	push   ebx
1005a1f7:	push   ecx
1005a1f8:	mov    eax,DWORD PTR [ebp+0xc]
1005a1fb:	add    eax,0xc
1005a1fe:	mov    DWORD PTR [ebp-0x4],eax
1005a201:	mov    eax,DWORD PTR [ebp+0x8]
1005a204:	push   ebp
1005a205:	push   DWORD PTR [ebp+0x10]
1005a208:	mov    ecx,DWORD PTR [ebp+0x10]
1005a20b:	mov    ebp,DWORD PTR [ebp-0x4]
1005a20e:	call   0x1004dc94
1005a213:	push   esi
1005a214:	push   edi
1005a215:	call   eax
1005a217:	pop    edi
1005a218:	pop    esi
1005a219:	mov    ebx,ebp
1005a21b:	pop    ebp
1005a21c:	mov    ecx,DWORD PTR [ebp+0x10]
1005a21f:	push   ebp
1005a220:	mov    ebp,ebx
1005a222:	cmp    ecx,0x100
1005a228:	jne    0x1005a22f
1005a22a:	mov    ecx,0x2
1005a22f:	push   ecx
1005a230:	call   0x1004dc94
1005a235:	pop    ebp
1005a236:	pop    ecx
1005a237:	pop    ebx
1005a238:	leave  
1005a239:	ret    0xc
1005a23c:	push   ebp
1005a23d:	mov    ebp,esp
1005a23f:	sub    esp,0x10
1005a242:	push   esi
1005a243:	push   DWORD PTR [ebp+0xc]
1005a246:	lea    ecx,[ebp-0x10]
1005a249:	call   0x10044235
1005a24e:	mov    esi,DWORD PTR [ebp+0x8]
1005a251:	movsx  eax,BYTE PTR [esi]
1005a254:	push   eax
1005a255:	call   0x10044b21
1005a25a:	cmp    eax,0x65
1005a25d:	jmp    0x1005a26b
1005a25f:	inc    esi
1005a260:	movzx  eax,BYTE PTR [esi]
1005a263:	push   eax
1005a264:	call   0x1004b70f
1005a269:	test   eax,eax
1005a26b:	pop    ecx
1005a26c:	jne    0x1005a25f
1005a26e:	movsx  eax,BYTE PTR [esi]
1005a271:	push   eax
1005a272:	call   0x10044b21
1005a277:	cmp    eax,0x78
1005a27a:	pop    ecx
1005a27b:	jne    0x1005a27f
1005a27d:	inc    esi
1005a27e:	inc    esi
1005a27f:	mov    ecx,DWORD PTR [ebp-0x10]
1005a282:	mov    ecx,DWORD PTR [ecx+0xbc]
1005a288:	mov    ecx,DWORD PTR [ecx]
1005a28a:	mov    al,BYTE PTR [esi]
1005a28c:	mov    cl,BYTE PTR [ecx]
1005a28e:	mov    BYTE PTR [esi],cl
1005a290:	inc    esi
1005a291:	mov    cl,BYTE PTR [esi]
1005a293:	mov    BYTE PTR [esi],al
1005a295:	mov    al,cl
1005a297:	mov    cl,BYTE PTR [esi]
1005a299:	inc    esi
1005a29a:	test   cl,cl
1005a29c:	jne    0x1005a291
1005a29e:	cmp    BYTE PTR [ebp-0x4],cl
1005a2a1:	pop    esi
1005a2a2:	je     0x1005a2ab
1005a2a4:	mov    eax,DWORD PTR [ebp-0x8]
1005a2a7:	and    DWORD PTR [eax+0x70],0xfffffffd
1005a2ab:	leave  
1005a2ac:	ret    
1005a2ad:	push   ebp
1005a2ae:	mov    ebp,esp
1005a2b0:	sub    esp,0x10
1005a2b3:	push   esi
1005a2b4:	push   DWORD PTR [ebp+0xc]
1005a2b7:	lea    ecx,[ebp-0x10]
1005a2ba:	call   0x10044235
1005a2bf:	mov    eax,DWORD PTR [ebp+0x8]
1005a2c2:	mov    cl,BYTE PTR [eax]
1005a2c4:	test   cl,cl
1005a2c6:	mov    esi,DWORD PTR [ebp-0x10]
1005a2c9:	je     0x1005a2e0
1005a2cb:	mov    edx,DWORD PTR [esi+0xbc]
1005a2d1:	mov    edx,DWORD PTR [edx]
1005a2d3:	mov    dl,BYTE PTR [edx]
1005a2d5:	cmp    cl,dl
1005a2d7:	je     0x1005a2e0
1005a2d9:	inc    eax
1005a2da:	mov    cl,BYTE PTR [eax]
1005a2dc:	test   cl,cl
1005a2de:	jne    0x1005a2d5
1005a2e0:	mov    cl,BYTE PTR [eax]
1005a2e2:	inc    eax
1005a2e3:	test   cl,cl
1005a2e5:	je     0x1005a31d
1005a2e7:	jmp    0x1005a2f4
1005a2e9:	cmp    cl,0x65
1005a2ec:	je     0x1005a2fa
1005a2ee:	cmp    cl,0x45
1005a2f1:	je     0x1005a2fa
1005a2f3:	inc    eax
1005a2f4:	mov    cl,BYTE PTR [eax]
1005a2f6:	test   cl,cl
1005a2f8:	jne    0x1005a2e9
1005a2fa:	mov    edx,eax
1005a2fc:	dec    eax
1005a2fd:	cmp    BYTE PTR [eax],0x30
1005a300:	je     0x1005a2fc
1005a302:	mov    ecx,DWORD PTR [esi+0xbc]
1005a308:	mov    ecx,DWORD PTR [ecx]
1005a30a:	push   ebx
1005a30b:	mov    bl,BYTE PTR [eax]
1005a30d:	cmp    bl,BYTE PTR [ecx]
1005a30f:	pop    ebx
1005a310:	jne    0x1005a313
1005a312:	dec    eax
1005a313:	mov    cl,BYTE PTR [edx]
1005a315:	inc    eax
1005a316:	inc    edx
1005a317:	test   cl,cl
1005a319:	mov    BYTE PTR [eax],cl
1005a31b:	jne    0x1005a313
1005a31d:	cmp    BYTE PTR [ebp-0x4],0x0
1005a321:	pop    esi
1005a322:	je     0x1005a32b
1005a324:	mov    eax,DWORD PTR [ebp-0x8]
1005a327:	and    DWORD PTR [eax+0x70],0xfffffffd
1005a32b:	leave  
1005a32c:	ret    
1005a32d:	fldz   
1005a32f:	mov    eax,DWORD PTR [esp+0x4]
1005a333:	fcomp  QWORD PTR [eax]
1005a335:	fnstsw ax
1005a337:	test   ah,0x41
1005a33a:	jp     0x1005a340
1005a33c:	xor    eax,eax
1005a33e:	inc    eax
1005a33f:	ret    
1005a340:	xor    eax,eax
1005a342:	ret    
1005a343:	push   ebp
1005a344:	mov    ebp,esp
1005a346:	push   ecx
1005a347:	push   ecx
1005a348:	cmp    DWORD PTR [ebp+0x8],0x0
1005a34c:	push   DWORD PTR [ebp+0x14]
1005a34f:	push   DWORD PTR [ebp+0x10]
1005a352:	je     0x1005a36d
1005a354:	lea    eax,[ebp-0x8]
1005a357:	push   eax
1005a358:	call   0x1005bc06
1005a35d:	mov    ecx,DWORD PTR [ebp-0x8]
1005a360:	mov    eax,DWORD PTR [ebp+0xc]
1005a363:	mov    DWORD PTR [eax],ecx
1005a365:	mov    ecx,DWORD PTR [ebp-0x4]
1005a368:	mov    DWORD PTR [eax+0x4],ecx
1005a36b:	jmp    0x1005a37e
1005a36d:	lea    eax,[ebp+0x8]
1005a370:	push   eax
1005a371:	call   0x1005bcac
1005a376:	mov    eax,DWORD PTR [ebp+0xc]
1005a379:	mov    ecx,DWORD PTR [ebp+0x8]
1005a37c:	mov    DWORD PTR [eax],ecx
1005a37e:	add    esp,0xc
1005a381:	leave  
1005a382:	ret    
1005a383:	push   0x0
1005a385:	push   DWORD PTR [esp+0x10]
1005a389:	push   DWORD PTR [esp+0x10]
1005a38d:	push   DWORD PTR [esp+0x10]
1005a391:	call   0x1005a343
1005a396:	add    esp,0x10
1005a399:	ret    
1005a39a:	test   edi,edi
1005a39c:	push   esi
1005a39d:	mov    esi,eax
1005a39f:	je     0x1005a3b5
1005a3a1:	push   esi
1005a3a2:	call   0x10041f10
1005a3a7:	inc    eax
1005a3a8:	push   eax
1005a3a9:	push   esi
1005a3aa:	add    esi,edi
1005a3ac:	push   esi
1005a3ad:	call   0x10044410
1005a3b2:	add    esp,0x10
1005a3b5:	pop    esi
1005a3b6:	ret    
1005a3b7:	push   0x0
1005a3b9:	push   DWORD PTR [esp+0x8]
1005a3bd:	call   0x1005a23c
1005a3c2:	pop    ecx
1005a3c3:	pop    ecx
1005a3c4:	ret    
1005a3c5:	push   0x0
1005a3c7:	push   DWORD PTR [esp+0x8]
1005a3cb:	call   0x1005a2ad
1005a3d0:	pop    ecx
1005a3d1:	pop    ecx
1005a3d2:	ret    
1005a3d3:	push   ebp
1005a3d4:	mov    ebp,esp
1005a3d6:	sub    esp,0x10
1005a3d9:	push   ebx
1005a3da:	push   esi
1005a3db:	push   edi
1005a3dc:	push   DWORD PTR [ebp+0x1c]
1005a3df:	lea    ecx,[ebp-0x10]
1005a3e2:	mov    ebx,eax
1005a3e4:	call   0x10044235
1005a3e9:	xor    esi,esi
1005a3eb:	cmp    ebx,esi
1005a3ed:	jne    0x1005a41a
1005a3ef:	call   0x100458a5
1005a3f4:	push   0x16
1005a3f6:	pop    edi
1005a3f7:	push   esi
1005a3f8:	push   esi
1005a3f9:	push   esi
1005a3fa:	push   esi
1005a3fb:	push   esi
1005a3fc:	mov    DWORD PTR [eax],edi
1005a3fe:	call   0x1004228c
1005a403:	add    esp,0x14
1005a406:	cmp    BYTE PTR [ebp-0x4],0x0
1005a40a:	je     0x1005a413
1005a40c:	mov    eax,DWORD PTR [ebp-0x8]
1005a40f:	and    DWORD PTR [eax+0x70],0xfffffffd
1005a413:	mov    eax,edi
1005a415:	jmp    0x1005a53b
1005a41a:	cmp    DWORD PTR [ebp+0x8],esi
1005a41d:	jbe    0x1005a3ef
1005a41f:	cmp    DWORD PTR [ebp+0xc],esi
1005a422:	jle    0x1005a429
1005a424:	mov    eax,DWORD PTR [ebp+0xc]
1005a427:	jmp    0x1005a42b
1005a429:	xor    eax,eax
1005a42b:	add    eax,0x9
1005a42e:	cmp    DWORD PTR [ebp+0x8],eax
1005a431:	ja     0x1005a43c
1005a433:	call   0x100458a5
1005a438:	push   0x22
1005a43a:	jmp    0x1005a3f6
1005a43c:	cmp    BYTE PTR [ebp+0x18],0x0
1005a440:	je     0x1005a460
1005a442:	mov    edx,DWORD PTR [ebp+0x14]
1005a445:	xor    eax,eax
1005a447:	cmp    DWORD PTR [ebp+0xc],esi
1005a44a:	setg   al
1005a44d:	xor    ecx,ecx
1005a44f:	cmp    DWORD PTR [edx],0x2d
1005a452:	sete   cl
1005a455:	mov    edi,eax
1005a457:	add    ecx,ebx
1005a459:	mov    eax,ecx
1005a45b:	call   0x1005a39a
1005a460:	mov    edi,DWORD PTR [ebp+0x14]
1005a463:	cmp    DWORD PTR [edi],0x2d
1005a466:	mov    esi,ebx
1005a468:	jne    0x1005a470
1005a46a:	mov    BYTE PTR [ebx],0x2d
1005a46d:	lea    esi,[ebx+0x1]
1005a470:	cmp    DWORD PTR [ebp+0xc],0x0
1005a474:	jle    0x1005a48e
1005a476:	lea    eax,[esi+0x1]
1005a479:	mov    cl,BYTE PTR [eax]
1005a47b:	mov    BYTE PTR [esi],cl
1005a47d:	mov    esi,eax
1005a47f:	mov    eax,DWORD PTR [ebp-0x10]
1005a482:	mov    eax,DWORD PTR [eax+0xbc]
1005a488:	mov    eax,DWORD PTR [eax]
1005a48a:	mov    al,BYTE PTR [eax]
1005a48c:	mov    BYTE PTR [esi],al
1005a48e:	xor    eax,eax
1005a490:	cmp    BYTE PTR [ebp+0x18],al
1005a493:	sete   al
1005a496:	add    eax,DWORD PTR [ebp+0xc]
1005a499:	add    esi,eax
1005a49b:	cmp    DWORD PTR [ebp+0x8],0xffffffff
1005a49f:	jne    0x1005a4a6
1005a4a1:	or     ebx,0xffffffff
1005a4a4:	jmp    0x1005a4ab
1005a4a6:	sub    ebx,esi
1005a4a8:	add    ebx,DWORD PTR [ebp+0x8]
1005a4ab:	push   0x1006b918
1005a4b0:	push   ebx
1005a4b1:	push   esi
1005a4b2:	call   0x100458e9
1005a4b7:	add    esp,0xc
1005a4ba:	xor    ebx,ebx
1005a4bc:	test   eax,eax
1005a4be:	je     0x1005a4cd
1005a4c0:	push   ebx
1005a4c1:	push   ebx
1005a4c2:	push   ebx
1005a4c3:	push   ebx
1005a4c4:	push   ebx
1005a4c5:	call   0x10042190
1005a4ca:	add    esp,0x14
1005a4cd:	cmp    DWORD PTR [ebp+0x10],ebx
1005a4d0:	lea    ecx,[esi+0x2]
1005a4d3:	je     0x1005a4d8
1005a4d5:	mov    BYTE PTR [esi],0x45
1005a4d8:	mov    eax,DWORD PTR [edi+0xc]
1005a4db:	inc    esi
1005a4dc:	cmp    BYTE PTR [eax],0x30
1005a4df:	je     0x1005a50f
1005a4e1:	mov    eax,DWORD PTR [edi+0x4]
1005a4e4:	dec    eax
1005a4e5:	jns    0x1005a4ec
1005a4e7:	neg    eax
1005a4e9:	mov    BYTE PTR [esi],0x2d
1005a4ec:	inc    esi
1005a4ed:	cmp    eax,0x64
1005a4f0:	jl     0x1005a4fc
1005a4f2:	cdq    
1005a4f3:	push   0x64
1005a4f5:	pop    edi
1005a4f6:	idiv   edi
1005a4f8:	add    BYTE PTR [esi],al
1005a4fa:	mov    eax,edx
1005a4fc:	inc    esi
1005a4fd:	cmp    eax,0xa
1005a500:	jl     0x1005a50c
1005a502:	cdq    
1005a503:	push   0xa
1005a505:	pop    edi
1005a506:	idiv   edi
1005a508:	add    BYTE PTR [esi],al
1005a50a:	mov    eax,edx
1005a50c:	add    BYTE PTR [esi+0x1],al
1005a50f:	test   BYTE PTR ds:0x1007fbd8,0x1
1005a516:	je     0x1005a52c
1005a518:	cmp    BYTE PTR [ecx],0x30
1005a51b:	jne    0x1005a52c
1005a51d:	push   0x3
1005a51f:	lea    eax,[ecx+0x1]
1005a522:	push   eax
1005a523:	push   ecx
1005a524:	call   0x10044410
1005a529:	add    esp,0xc
1005a52c:	cmp    BYTE PTR [ebp-0x4],0x0
1005a530:	je     0x1005a539
1005a532:	mov    eax,DWORD PTR [ebp-0x8]
1005a535:	and    DWORD PTR [eax+0x70],0xfffffffd
1005a539:	xor    eax,eax
1005a53b:	pop    edi
1005a53c:	pop    esi
1005a53d:	pop    ebx
1005a53e:	leave  
1005a53f:	ret    
1005a540:	push   ebp
1005a541:	mov    ebp,esp
1005a543:	sub    esp,0x2c
1005a546:	mov    eax,ds:0x1007d030
1005a54b:	xor    eax,ebp
1005a54d:	mov    DWORD PTR [ebp-0x4],eax
1005a550:	mov    eax,DWORD PTR [ebp+0x8]
1005a553:	push   ebx
1005a554:	push   esi
1005a555:	push   edi
1005a556:	mov    edi,DWORD PTR [ebp+0xc]
1005a559:	push   0x16
1005a55b:	pop    esi
1005a55c:	push   esi
1005a55d:	lea    ecx,[ebp-0x1c]
1005a560:	push   ecx
1005a561:	lea    ecx,[ebp-0x2c]
1005a564:	push   ecx
1005a565:	push   DWORD PTR [eax+0x4]
1005a568:	push   DWORD PTR [eax]
1005a56a:	call   0x1005beca
1005a56f:	xor    ebx,ebx
1005a571:	add    esp,0x14
1005a574:	cmp    edi,ebx
1005a576:	jne    0x1005a590
1005a578:	call   0x100458a5
1005a57d:	push   ebx
1005a57e:	push   ebx
1005a57f:	push   ebx
1005a580:	push   ebx
1005a581:	push   ebx
1005a582:	mov    DWORD PTR [eax],esi
1005a584:	call   0x1004228c
1005a589:	add    esp,0x14
1005a58c:	mov    eax,esi
1005a58e:	jmp    0x1005a5ff
1005a590:	mov    eax,DWORD PTR [ebp+0x10]
1005a593:	cmp    eax,ebx
1005a595:	jbe    0x1005a578
1005a597:	cmp    eax,0xffffffff
1005a59a:	mov    esi,DWORD PTR [ebp+0x14]
1005a59d:	jne    0x1005a5a4
1005a59f:	or     eax,0xffffffff
1005a5a2:	jmp    0x1005a5b8
1005a5a4:	xor    ecx,ecx
1005a5a6:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005a5aa:	sete   cl
1005a5ad:	sub    eax,ecx
1005a5af:	xor    ecx,ecx
1005a5b1:	cmp    esi,ebx
1005a5b3:	setg   cl
1005a5b6:	sub    eax,ecx
1005a5b8:	lea    ecx,[ebp-0x2c]
1005a5bb:	push   ecx
1005a5bc:	lea    ecx,[esi+0x1]
1005a5bf:	push   ecx
1005a5c0:	push   eax
1005a5c1:	xor    eax,eax
1005a5c3:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005a5c7:	sete   al
1005a5ca:	xor    ecx,ecx
1005a5cc:	cmp    esi,ebx
1005a5ce:	setg   cl
1005a5d1:	add    eax,edi
1005a5d3:	add    ecx,eax
1005a5d5:	push   ecx
1005a5d6:	call   0x1005bd52
1005a5db:	add    esp,0x10
1005a5de:	cmp    eax,ebx
1005a5e0:	je     0x1005a5e6
1005a5e2:	mov    BYTE PTR [edi],bl
1005a5e4:	jmp    0x1005a5ff
1005a5e6:	push   DWORD PTR [ebp+0x1c]
1005a5e9:	lea    eax,[ebp-0x2c]
1005a5ec:	push   ebx
1005a5ed:	push   eax
1005a5ee:	push   DWORD PTR [ebp+0x18]
1005a5f1:	mov    eax,edi
1005a5f3:	push   esi
1005a5f4:	push   DWORD PTR [ebp+0x10]
1005a5f7:	call   0x1005a3d3
1005a5fc:	add    esp,0x18
1005a5ff:	mov    ecx,DWORD PTR [ebp-0x4]
1005a602:	pop    edi
1005a603:	pop    esi
1005a604:	xor    ecx,ebp
1005a606:	pop    ebx
1005a607:	call   0x10041d97
1005a60c:	leave  
1005a60d:	ret    
1005a60e:	push   ebp
1005a60f:	mov    ebp,esp
1005a611:	push   0x0
1005a613:	push   DWORD PTR [ebp+0x18]
1005a616:	push   DWORD PTR [ebp+0x14]
1005a619:	push   DWORD PTR [ebp+0x10]
1005a61c:	push   DWORD PTR [ebp+0xc]
1005a61f:	push   DWORD PTR [ebp+0x8]
1005a622:	call   0x1005a540
1005a627:	add    esp,0x18
1005a62a:	pop    ebp
1005a62b:	ret    
1005a62c:	push   ebp
1005a62d:	mov    ebp,esp
1005a62f:	sub    esp,0x24
1005a632:	push   esi
1005a633:	push   edi
1005a634:	push   DWORD PTR [ebp+0x1c]
1005a637:	lea    ecx,[ebp-0x24]
1005a63a:	mov    DWORD PTR [ebp-0x14],0x3ff
1005a641:	xor    edi,edi
1005a643:	mov    DWORD PTR [ebp-0x4],0x30
1005a64a:	call   0x10044235
1005a64f:	cmp    DWORD PTR [ebp+0x14],edi
1005a652:	jge    0x1005a657
1005a654:	mov    DWORD PTR [ebp+0x14],edi
1005a657:	mov    esi,DWORD PTR [ebp+0xc]
1005a65a:	cmp    esi,edi
1005a65c:	jne    0x1005a689
1005a65e:	call   0x100458a5
1005a663:	push   0x16
1005a665:	pop    esi
1005a666:	push   edi
1005a667:	push   edi
1005a668:	push   edi
1005a669:	push   edi
1005a66a:	push   edi
1005a66b:	mov    DWORD PTR [eax],esi
1005a66d:	call   0x1004228c
1005a672:	add    esp,0x14
1005a675:	cmp    BYTE PTR [ebp-0x18],0x0
1005a679:	je     0x1005a682
1005a67b:	mov    eax,DWORD PTR [ebp-0x1c]
1005a67e:	and    DWORD PTR [eax+0x70],0xfffffffd
1005a682:	mov    eax,esi
1005a684:	jmp    0x1005a999
1005a689:	cmp    DWORD PTR [ebp+0x10],edi
1005a68c:	jbe    0x1005a65e
1005a68e:	mov    eax,DWORD PTR [ebp+0x14]
1005a691:	add    eax,0xb
1005a694:	cmp    DWORD PTR [ebp+0x10],eax
1005a697:	mov    BYTE PTR [esi],0x0
1005a69a:	ja     0x1005a6a5
1005a69c:	call   0x100458a5
1005a6a1:	push   0x22
1005a6a3:	jmp    0x1005a665
1005a6a5:	mov    edi,DWORD PTR [ebp+0x8]
1005a6a8:	mov    eax,DWORD PTR [edi]
1005a6aa:	mov    DWORD PTR [ebp-0xc],eax
1005a6ad:	mov    eax,DWORD PTR [edi+0x4]
1005a6b0:	mov    ecx,eax
1005a6b2:	shr    ecx,0x14
1005a6b5:	mov    edx,0x7ff
1005a6ba:	push   ebx
1005a6bb:	and    ecx,edx
1005a6bd:	xor    ebx,ebx
1005a6bf:	cmp    ecx,edx
1005a6c1:	jne    0x1005a757
1005a6c7:	test   ebx,ebx
1005a6c9:	jne    0x1005a757
1005a6cf:	mov    eax,DWORD PTR [ebp+0x10]
1005a6d2:	cmp    eax,0xffffffff
1005a6d5:	jne    0x1005a6db
1005a6d7:	or     eax,eax
1005a6d9:	jmp    0x1005a6de
1005a6db:	add    eax,0xfffffffe
1005a6de:	push   0x0
1005a6e0:	push   DWORD PTR [ebp+0x14]
1005a6e3:	lea    ebx,[esi+0x2]
1005a6e6:	push   eax
1005a6e7:	push   ebx
1005a6e8:	push   edi
1005a6e9:	call   0x1005a60e
1005a6ee:	add    esp,0x14
1005a6f1:	test   eax,eax
1005a6f3:	je     0x1005a70e
1005a6f5:	cmp    BYTE PTR [ebp-0x18],0x0
1005a6f9:	mov    BYTE PTR [esi],0x0
1005a6fc:	je     0x1005a998
1005a702:	mov    ecx,DWORD PTR [ebp-0x1c]
1005a705:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005a709:	jmp    0x1005a998
1005a70e:	cmp    BYTE PTR [ebx],0x2d
1005a711:	jne    0x1005a717
1005a713:	mov    BYTE PTR [esi],0x2d
1005a716:	inc    esi
1005a717:	mov    BYTE PTR [esi],0x30
1005a71a:	inc    esi
1005a71b:	cmp    DWORD PTR [ebp+0x18],0x0
1005a71f:	push   0x65
1005a721:	sete   al
1005a724:	dec    al
1005a726:	and    al,0xe0
1005a728:	add    al,0x78
1005a72a:	mov    BYTE PTR [esi],al
1005a72c:	inc    esi
1005a72d:	push   esi
1005a72e:	call   0x10058710
1005a733:	test   eax,eax
1005a735:	pop    ecx
1005a736:	pop    ecx
1005a737:	je     0x1005a989
1005a73d:	cmp    DWORD PTR [ebp+0x18],0x0
1005a741:	sete   cl
1005a744:	dec    cl
1005a746:	and    cl,0xe0
1005a749:	add    cl,0x70
1005a74c:	mov    BYTE PTR [eax],cl
1005a74e:	mov    BYTE PTR [eax+0x3],0x0
1005a752:	jmp    0x1005a989
1005a757:	and    eax,0x80000000
1005a75c:	xor    ecx,ecx
1005a75e:	or     ecx,eax
1005a760:	je     0x1005a766
1005a762:	mov    BYTE PTR [esi],0x2d
1005a765:	inc    esi
1005a766:	mov    ebx,DWORD PTR [ebp+0x18]
1005a769:	mov    BYTE PTR [esi],0x30
1005a76c:	inc    esi
1005a76d:	test   ebx,ebx
1005a76f:	sete   al
1005a772:	dec    al
1005a774:	and    al,0xe0
1005a776:	add    al,0x78
1005a778:	mov    BYTE PTR [esi],al
1005a77a:	mov    ecx,DWORD PTR [edi+0x4]
1005a77d:	inc    esi
1005a77e:	neg    ebx
1005a780:	sbb    ebx,ebx
1005a782:	and    ebx,0xffffffe0
1005a785:	and    ecx,0x7ff00000
1005a78b:	xor    eax,eax
1005a78d:	add    ebx,0x27
1005a790:	xor    edx,edx
1005a792:	or     eax,ecx
1005a794:	jne    0x1005a7b7
1005a796:	mov    BYTE PTR [esi],0x30
1005a799:	mov    ecx,DWORD PTR [edi+0x4]
1005a79c:	mov    eax,DWORD PTR [edi]
1005a79e:	and    ecx,0xfffff
1005a7a4:	inc    esi
1005a7a5:	or     eax,ecx
1005a7a7:	jne    0x1005a7ae
1005a7a9:	mov    DWORD PTR [ebp-0x14],edx
1005a7ac:	jmp    0x1005a7bb
1005a7ae:	mov    DWORD PTR [ebp-0x14],0x3fe
1005a7b5:	jmp    0x1005a7bb
1005a7b7:	mov    BYTE PTR [esi],0x31
1005a7ba:	inc    esi
1005a7bb:	mov    eax,esi
1005a7bd:	inc    esi
1005a7be:	cmp    DWORD PTR [ebp+0x14],edx
1005a7c1:	mov    DWORD PTR [ebp+0xc],eax
1005a7c4:	jne    0x1005a7ca
1005a7c6:	mov    BYTE PTR [eax],dl
1005a7c8:	jmp    0x1005a7d9
1005a7ca:	mov    ecx,DWORD PTR [ebp-0x24]
1005a7cd:	mov    ecx,DWORD PTR [ecx+0xbc]
1005a7d3:	mov    ecx,DWORD PTR [ecx]
1005a7d5:	mov    cl,BYTE PTR [ecx]
1005a7d7:	mov    BYTE PTR [eax],cl
1005a7d9:	mov    ecx,DWORD PTR [edi+0x4]
1005a7dc:	mov    eax,DWORD PTR [edi]
1005a7de:	and    ecx,0xfffff
1005a7e4:	mov    DWORD PTR [ebp-0x8],ecx
1005a7e7:	ja     0x1005a7f1
1005a7e9:	cmp    eax,edx
1005a7eb:	jbe    0x1005a8a6
1005a7f1:	mov    DWORD PTR [ebp-0xc],edx
1005a7f4:	mov    DWORD PTR [ebp-0x8],0xf0000
1005a7fb:	cmp    DWORD PTR [ebp+0x14],0x0
1005a7ff:	jle    0x1005a84e
1005a801:	mov    edx,DWORD PTR [edi+0x4]
1005a804:	and    edx,DWORD PTR [ebp-0x8]
1005a807:	mov    eax,DWORD PTR [edi]
1005a809:	movsx  ecx,WORD PTR [ebp-0x4]
1005a80d:	and    eax,DWORD PTR [ebp-0xc]
1005a810:	and    edx,0xfffff
1005a816:	call   0x1005c040
1005a81b:	add    ax,0x30
1005a81f:	movzx  eax,ax
1005a822:	cmp    ax,0x39
1005a826:	jbe    0x1005a82a
1005a828:	add    eax,ebx
1005a82a:	mov    ecx,DWORD PTR [ebp-0x8]
1005a82d:	sub    DWORD PTR [ebp-0x4],0x4
1005a831:	mov    BYTE PTR [esi],al
1005a833:	mov    eax,DWORD PTR [ebp-0xc]
1005a836:	shrd   eax,ecx,0x4
1005a83a:	shr    ecx,0x4
1005a83d:	inc    esi
1005a83e:	dec    DWORD PTR [ebp+0x14]
1005a841:	cmp    WORD PTR [ebp-0x4],0x0
1005a846:	mov    DWORD PTR [ebp-0xc],eax
1005a849:	mov    DWORD PTR [ebp-0x8],ecx
1005a84c:	jge    0x1005a7fb
1005a84e:	cmp    WORD PTR [ebp-0x4],0x0
1005a853:	jl     0x1005a8a6
1005a855:	mov    edx,DWORD PTR [edi+0x4]
1005a858:	and    edx,DWORD PTR [ebp-0x8]
1005a85b:	mov    eax,DWORD PTR [edi]
1005a85d:	movsx  ecx,WORD PTR [ebp-0x4]
1005a861:	and    eax,DWORD PTR [ebp-0xc]
1005a864:	and    edx,0xfffff
1005a86a:	call   0x1005c040
1005a86f:	cmp    ax,0x8
1005a873:	jbe    0x1005a8a6
1005a875:	lea    eax,[esi-0x1]
1005a878:	mov    cl,BYTE PTR [eax]
1005a87a:	cmp    cl,0x66
1005a87d:	je     0x1005a884
1005a87f:	cmp    cl,0x46
1005a882:	jne    0x1005a88a
1005a884:	mov    BYTE PTR [eax],0x30
1005a887:	dec    eax
1005a888:	jmp    0x1005a878
1005a88a:	cmp    eax,DWORD PTR [ebp+0xc]
1005a88d:	je     0x1005a8a3
1005a88f:	mov    cl,BYTE PTR [eax]
1005a891:	cmp    cl,0x39
1005a894:	jne    0x1005a89d
1005a896:	add    bl,0x3a
1005a899:	mov    BYTE PTR [eax],bl
1005a89b:	jmp    0x1005a8a6
1005a89d:	inc    cl
1005a89f:	mov    BYTE PTR [eax],cl
1005a8a1:	jmp    0x1005a8a6
1005a8a3:	inc    BYTE PTR [eax-0x1]
1005a8a6:	cmp    DWORD PTR [ebp+0x14],0x0
1005a8aa:	jle    0x1005a8bd
1005a8ac:	push   DWORD PTR [ebp+0x14]
1005a8af:	push   0x30
1005a8b1:	push   esi
1005a8b2:	call   0x10044950
1005a8b7:	add    esp,0xc
1005a8ba:	add    esi,DWORD PTR [ebp+0x14]
1005a8bd:	mov    eax,DWORD PTR [ebp+0xc]
1005a8c0:	cmp    BYTE PTR [eax],0x0
1005a8c3:	jne    0x1005a8c7
1005a8c5:	mov    esi,eax
1005a8c7:	cmp    DWORD PTR [ebp+0x18],0x0
1005a8cb:	mov    cl,0x34
1005a8cd:	sete   al
1005a8d0:	dec    al
1005a8d2:	and    al,0xe0
1005a8d4:	add    al,0x70
1005a8d6:	mov    BYTE PTR [esi],al
1005a8d8:	mov    eax,DWORD PTR [edi]
1005a8da:	mov    edx,DWORD PTR [edi+0x4]
1005a8dd:	inc    esi
1005a8de:	call   0x1005c040
1005a8e3:	xor    ebx,ebx
1005a8e5:	and    eax,0x7ff
1005a8ea:	and    edx,ebx
1005a8ec:	sub    eax,DWORD PTR [ebp-0x14]
1005a8ef:	push   ebx
1005a8f0:	pop    ecx
1005a8f1:	sbb    edx,ecx
1005a8f3:	js     0x1005a901
1005a8f5:	jg     0x1005a8fb
1005a8f7:	cmp    eax,ebx
1005a8f9:	jb     0x1005a901
1005a8fb:	mov    BYTE PTR [esi],0x2b
1005a8fe:	inc    esi
1005a8ff:	jmp    0x1005a90b
1005a901:	mov    BYTE PTR [esi],0x2d
1005a904:	inc    esi
1005a905:	neg    eax
1005a907:	adc    edx,ebx
1005a909:	neg    edx
1005a90b:	cmp    edx,ebx
1005a90d:	mov    edi,esi
1005a90f:	mov    BYTE PTR [esi],0x30
1005a912:	jl     0x1005a938
1005a914:	mov    ecx,0x3e8
1005a919:	jg     0x1005a91f
1005a91b:	cmp    eax,ecx
1005a91d:	jb     0x1005a938
1005a91f:	push   ebx
1005a920:	push   ecx
1005a921:	push   edx
1005a922:	push   eax
1005a923:	call   0x1005bf60
1005a928:	add    al,0x30
1005a92a:	mov    BYTE PTR [esi],al
1005a92c:	inc    esi
1005a92d:	cmp    esi,edi
1005a92f:	mov    DWORD PTR [ebp-0x10],edx
1005a932:	mov    eax,ecx
1005a934:	mov    edx,ebx
1005a936:	jne    0x1005a943
1005a938:	test   edx,edx
1005a93a:	jl     0x1005a95a
1005a93c:	jg     0x1005a943
1005a93e:	cmp    eax,0x64
1005a941:	jb     0x1005a95a
1005a943:	push   0x0
1005a945:	push   0x64
1005a947:	push   edx
1005a948:	push   eax
1005a949:	call   0x1005bf60
1005a94e:	add    al,0x30
1005a950:	mov    BYTE PTR [esi],al
1005a952:	mov    DWORD PTR [ebp-0x10],edx
1005a955:	inc    esi
1005a956:	mov    eax,ecx
1005a958:	mov    edx,ebx
1005a95a:	cmp    esi,edi
1005a95c:	jne    0x1005a969
1005a95e:	test   edx,edx
1005a960:	jl     0x1005a981
1005a962:	jg     0x1005a969
1005a964:	cmp    eax,0xa
1005a967:	jb     0x1005a981
1005a969:	push   0x0
1005a96b:	push   0xa
1005a96d:	push   edx
1005a96e:	push   eax
1005a96f:	call   0x1005bf60
1005a974:	add    al,0x30
1005a976:	mov    BYTE PTR [esi],al
1005a978:	mov    DWORD PTR [ebp-0x10],edx
1005a97b:	inc    esi
1005a97c:	mov    eax,ecx
1005a97e:	mov    DWORD PTR [ebp-0x10],ebx
1005a981:	add    al,0x30
1005a983:	mov    BYTE PTR [esi],al
1005a985:	mov    BYTE PTR [esi+0x1],0x0
1005a989:	cmp    BYTE PTR [ebp-0x18],0x0
1005a98d:	je     0x1005a996
1005a98f:	mov    eax,DWORD PTR [ebp-0x1c]
1005a992:	and    DWORD PTR [eax+0x70],0xfffffffd
1005a996:	xor    eax,eax
1005a998:	pop    ebx
1005a999:	pop    edi
1005a99a:	pop    esi
1005a99b:	leave  
1005a99c:	ret    
1005a99d:	push   ebp
1005a99e:	mov    ebp,esp
1005a9a0:	sub    esp,0x10
1005a9a3:	push   ebx
1005a9a4:	push   esi
1005a9a5:	push   edi
1005a9a6:	push   DWORD PTR [ebp+0x14]
1005a9a9:	mov    ebx,eax
1005a9ab:	mov    esi,DWORD PTR [ebx+0x4]
1005a9ae:	mov    edi,ecx
1005a9b0:	lea    ecx,[ebp-0x10]
1005a9b3:	dec    esi
1005a9b4:	call   0x10044235
1005a9b9:	test   edi,edi
1005a9bb:	jne    0x1005a9ea
1005a9bd:	call   0x100458a5
1005a9c2:	push   0x16
1005a9c4:	pop    esi
1005a9c5:	mov    DWORD PTR [eax],esi
1005a9c7:	xor    eax,eax
1005a9c9:	push   eax
1005a9ca:	push   eax
1005a9cb:	push   eax
1005a9cc:	push   eax
1005a9cd:	push   eax
1005a9ce:	call   0x1004228c
1005a9d3:	add    esp,0x14
1005a9d6:	cmp    BYTE PTR [ebp-0x4],0x0
1005a9da:	je     0x1005a9e3
1005a9dc:	mov    eax,DWORD PTR [ebp-0x8]
1005a9df:	and    DWORD PTR [eax+0x70],0xfffffffd
1005a9e3:	mov    eax,esi
1005a9e5:	jmp    0x1005aa8d
1005a9ea:	cmp    DWORD PTR [ebp+0x8],0x0
1005a9ee:	jbe    0x1005a9bd
1005a9f0:	cmp    BYTE PTR [ebp+0x10],0x0
1005a9f4:	je     0x1005aa0e
1005a9f6:	cmp    esi,DWORD PTR [ebp+0xc]
1005a9f9:	jne    0x1005aa0e
1005a9fb:	xor    eax,eax
1005a9fd:	cmp    DWORD PTR [ebx],0x2d
1005aa00:	sete   al
1005aa03:	add    eax,esi
1005aa05:	add    eax,edi
1005aa07:	mov    BYTE PTR [eax],0x30
1005aa0a:	mov    BYTE PTR [eax+0x1],0x0
1005aa0e:	cmp    DWORD PTR [ebx],0x2d
1005aa11:	mov    esi,edi
1005aa13:	jne    0x1005aa1b
1005aa15:	mov    BYTE PTR [edi],0x2d
1005aa18:	lea    esi,[edi+0x1]
1005aa1b:	mov    eax,DWORD PTR [ebx+0x4]
1005aa1e:	xor    edi,edi
1005aa20:	inc    edi
1005aa21:	test   eax,eax
1005aa23:	jg     0x1005aa32
1005aa25:	mov    eax,esi
1005aa27:	call   0x1005a39a
1005aa2c:	mov    BYTE PTR [esi],0x30
1005aa2f:	inc    esi
1005aa30:	jmp    0x1005aa34
1005aa32:	add    esi,eax
1005aa34:	cmp    DWORD PTR [ebp+0xc],0x0
1005aa38:	jle    0x1005aa7e
1005aa3a:	mov    eax,esi
1005aa3c:	call   0x1005a39a
1005aa41:	mov    eax,DWORD PTR [ebp-0x10]
1005aa44:	mov    eax,DWORD PTR [eax+0xbc]
1005aa4a:	mov    eax,DWORD PTR [eax]
1005aa4c:	mov    al,BYTE PTR [eax]
1005aa4e:	mov    BYTE PTR [esi],al
1005aa50:	mov    ebx,DWORD PTR [ebx+0x4]
1005aa53:	inc    esi
1005aa54:	test   ebx,ebx
1005aa56:	jge    0x1005aa7e
1005aa58:	neg    ebx
1005aa5a:	cmp    BYTE PTR [ebp+0x10],0x0
1005aa5e:	jne    0x1005aa65
1005aa60:	cmp    DWORD PTR [ebp+0xc],ebx
1005aa63:	jl     0x1005aa68
1005aa65:	mov    DWORD PTR [ebp+0xc],ebx
1005aa68:	mov    edi,DWORD PTR [ebp+0xc]
1005aa6b:	mov    eax,esi
1005aa6d:	call   0x1005a39a
1005aa72:	push   edi
1005aa73:	push   0x30
1005aa75:	push   esi
1005aa76:	call   0x10044950
1005aa7b:	add    esp,0xc
1005aa7e:	cmp    BYTE PTR [ebp-0x4],0x0
1005aa82:	je     0x1005aa8b
1005aa84:	mov    eax,DWORD PTR [ebp-0x8]
1005aa87:	and    DWORD PTR [eax+0x70],0xfffffffd
1005aa8b:	xor    eax,eax
1005aa8d:	pop    edi
1005aa8e:	pop    esi
1005aa8f:	pop    ebx
1005aa90:	leave  
1005aa91:	ret    
1005aa92:	push   ebp
1005aa93:	mov    ebp,esp
1005aa95:	sub    esp,0x2c
1005aa98:	mov    eax,ds:0x1007d030
1005aa9d:	xor    eax,ebp
1005aa9f:	mov    DWORD PTR [ebp-0x4],eax
1005aaa2:	mov    eax,DWORD PTR [ebp+0x8]
1005aaa5:	push   ebx
1005aaa6:	push   esi
1005aaa7:	push   edi
1005aaa8:	mov    edi,DWORD PTR [ebp+0xc]
1005aaab:	push   0x16
1005aaad:	pop    esi
1005aaae:	push   esi
1005aaaf:	lea    ecx,[ebp-0x1c]
1005aab2:	push   ecx
1005aab3:	lea    ecx,[ebp-0x2c]
1005aab6:	push   ecx
1005aab7:	push   DWORD PTR [eax+0x4]
1005aaba:	push   DWORD PTR [eax]
1005aabc:	call   0x1005beca
1005aac1:	xor    ebx,ebx
1005aac3:	add    esp,0x14
1005aac6:	cmp    edi,ebx
1005aac8:	jne    0x1005aae2
1005aaca:	call   0x100458a5
1005aacf:	push   ebx
1005aad0:	push   ebx
1005aad1:	push   ebx
1005aad2:	push   ebx
1005aad3:	push   ebx
1005aad4:	mov    DWORD PTR [eax],esi
1005aad6:	call   0x1004228c
1005aadb:	add    esp,0x14
1005aade:	mov    eax,esi
1005aae0:	jmp    0x1005ab3c
1005aae2:	mov    eax,DWORD PTR [ebp+0x10]
1005aae5:	cmp    eax,ebx
1005aae7:	jbe    0x1005aaca
1005aae9:	cmp    eax,0xffffffff
1005aaec:	jne    0x1005aaf2
1005aaee:	or     eax,eax
1005aaf0:	jmp    0x1005aafd
1005aaf2:	xor    ecx,ecx
1005aaf4:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005aaf8:	sete   cl
1005aafb:	sub    eax,ecx
1005aafd:	mov    esi,DWORD PTR [ebp+0x14]
1005ab00:	lea    ecx,[ebp-0x2c]
1005ab03:	push   ecx
1005ab04:	mov    ecx,DWORD PTR [ebp-0x28]
1005ab07:	add    ecx,esi
1005ab09:	push   ecx
1005ab0a:	push   eax
1005ab0b:	xor    eax,eax
1005ab0d:	cmp    DWORD PTR [ebp-0x2c],0x2d
1005ab11:	sete   al
1005ab14:	add    eax,edi
1005ab16:	push   eax
1005ab17:	call   0x1005bd52
1005ab1c:	add    esp,0x10
1005ab1f:	cmp    eax,ebx
1005ab21:	je     0x1005ab27
1005ab23:	mov    BYTE PTR [edi],bl
1005ab25:	jmp    0x1005ab3c
1005ab27:	push   DWORD PTR [ebp+0x18]
1005ab2a:	lea    eax,[ebp-0x2c]
1005ab2d:	push   ebx
1005ab2e:	push   esi
1005ab2f:	push   DWORD PTR [ebp+0x10]
1005ab32:	mov    ecx,edi
1005ab34:	call   0x1005a99d
1005ab39:	add    esp,0x10
1005ab3c:	mov    ecx,DWORD PTR [ebp-0x4]
1005ab3f:	pop    edi
1005ab40:	pop    esi
1005ab41:	xor    ecx,ebp
1005ab43:	pop    ebx
1005ab44:	call   0x10041d97
1005ab49:	leave  
1005ab4a:	ret    
1005ab4b:	push   ebp
1005ab4c:	mov    ebp,esp
1005ab4e:	sub    esp,0x30
1005ab51:	mov    eax,ds:0x1007d030
1005ab56:	xor    eax,ebp
1005ab58:	mov    DWORD PTR [ebp-0x4],eax
1005ab5b:	mov    eax,DWORD PTR [ebp+0x8]
1005ab5e:	push   ebx
1005ab5f:	push   esi
1005ab60:	mov    esi,DWORD PTR [ebp+0xc]
1005ab63:	push   edi
1005ab64:	push   0x16
1005ab66:	pop    edi
1005ab67:	push   edi
1005ab68:	lea    ecx,[ebp-0x1c]
1005ab6b:	push   ecx
1005ab6c:	lea    ecx,[ebp-0x30]
1005ab6f:	push   ecx
1005ab70:	push   DWORD PTR [eax+0x4]
1005ab73:	push   DWORD PTR [eax]
1005ab75:	call   0x1005beca
1005ab7a:	xor    ebx,ebx
1005ab7c:	add    esp,0x14
1005ab7f:	cmp    esi,ebx
1005ab81:	jne    0x1005ab9e
1005ab83:	call   0x100458a5
1005ab88:	push   ebx
1005ab89:	push   ebx
1005ab8a:	push   ebx
1005ab8b:	push   ebx
1005ab8c:	push   ebx
1005ab8d:	mov    DWORD PTR [eax],edi
1005ab8f:	call   0x1004228c
1005ab94:	add    esp,0x14
1005ab97:	mov    eax,edi
1005ab99:	jmp    0x1005ac34
1005ab9e:	mov    ecx,DWORD PTR [ebp+0x10]
1005aba1:	cmp    ecx,ebx
1005aba3:	jbe    0x1005ab83
1005aba5:	mov    eax,DWORD PTR [ebp-0x2c]
1005aba8:	dec    eax
1005aba9:	mov    DWORD PTR [ebp-0x20],eax
1005abac:	xor    eax,eax
1005abae:	cmp    DWORD PTR [ebp-0x30],0x2d
1005abb2:	sete   al
1005abb5:	cmp    ecx,0xffffffff
1005abb8:	lea    edi,[eax+esi*1]
1005abbb:	jne    0x1005abc1
1005abbd:	or     ecx,ecx
1005abbf:	jmp    0x1005abc3
1005abc1:	sub    ecx,eax
1005abc3:	lea    eax,[ebp-0x30]
1005abc6:	push   eax
1005abc7:	push   DWORD PTR [ebp+0x14]
1005abca:	push   ecx
1005abcb:	push   edi
1005abcc:	call   0x1005bd52
1005abd1:	add    esp,0x10
1005abd4:	cmp    eax,ebx
1005abd6:	je     0x1005abdc
1005abd8:	mov    BYTE PTR [esi],bl
1005abda:	jmp    0x1005ac34
1005abdc:	mov    eax,DWORD PTR [ebp-0x2c]
1005abdf:	dec    eax
1005abe0:	cmp    DWORD PTR [ebp-0x20],eax
1005abe3:	setl   cl
1005abe6:	cmp    eax,0xfffffffc
1005abe9:	jl     0x1005ac18
1005abeb:	cmp    eax,DWORD PTR [ebp+0x14]
1005abee:	jge    0x1005ac18
1005abf0:	cmp    cl,bl
1005abf2:	je     0x1005abfe
1005abf4:	mov    al,BYTE PTR [edi]
1005abf6:	inc    edi
1005abf7:	test   al,al
1005abf9:	jne    0x1005abf4
1005abfb:	mov    BYTE PTR [edi-0x2],bl
1005abfe:	push   DWORD PTR [ebp+0x1c]
1005ac01:	lea    eax,[ebp-0x30]
1005ac04:	push   0x1
1005ac06:	push   DWORD PTR [ebp+0x14]
1005ac09:	mov    ecx,esi
1005ac0b:	push   DWORD PTR [ebp+0x10]
1005ac0e:	call   0x1005a99d
1005ac13:	add    esp,0x10
1005ac16:	jmp    0x1005ac34
1005ac18:	push   DWORD PTR [ebp+0x1c]
1005ac1b:	lea    eax,[ebp-0x30]
1005ac1e:	push   0x1
1005ac20:	push   eax
1005ac21:	push   DWORD PTR [ebp+0x18]
1005ac24:	mov    eax,esi
1005ac26:	push   DWORD PTR [ebp+0x14]
1005ac29:	push   DWORD PTR [ebp+0x10]
1005ac2c:	call   0x1005a3d3
1005ac31:	add    esp,0x18
1005ac34:	mov    ecx,DWORD PTR [ebp-0x4]
1005ac37:	pop    edi
1005ac38:	pop    esi
1005ac39:	xor    ecx,ebp
1005ac3b:	pop    ebx
1005ac3c:	call   0x10041d97
1005ac41:	leave  
1005ac42:	ret    
1005ac43:	push   ebp
1005ac44:	mov    ebp,esp
1005ac46:	mov    eax,DWORD PTR [ebp+0x14]
1005ac49:	cmp    eax,0x65
1005ac4c:	je     0x1005acad
1005ac4e:	cmp    eax,0x45
1005ac51:	je     0x1005acad
1005ac53:	cmp    eax,0x66
1005ac56:	jne    0x1005ac71
1005ac58:	push   DWORD PTR [ebp+0x20]
1005ac5b:	push   DWORD PTR [ebp+0x18]
1005ac5e:	push   DWORD PTR [ebp+0x10]
1005ac61:	push   DWORD PTR [ebp+0xc]
1005ac64:	push   DWORD PTR [ebp+0x8]
1005ac67:	call   0x1005aa92
1005ac6c:	add    esp,0x14
1005ac6f:	pop    ebp
1005ac70:	ret    
1005ac71:	cmp    eax,0x61
1005ac74:	je     0x1005ac94
1005ac76:	cmp    eax,0x41
1005ac79:	je     0x1005ac94
1005ac7b:	push   DWORD PTR [ebp+0x20]
1005ac7e:	push   DWORD PTR [ebp+0x1c]
1005ac81:	push   DWORD PTR [ebp+0x18]
1005ac84:	push   DWORD PTR [ebp+0x10]
1005ac87:	push   DWORD PTR [ebp+0xc]
1005ac8a:	push   DWORD PTR [ebp+0x8]
1005ac8d:	call   0x1005ab4b
1005ac92:	jmp    0x1005acc4
1005ac94:	push   DWORD PTR [ebp+0x20]
1005ac97:	push   DWORD PTR [ebp+0x1c]
1005ac9a:	push   DWORD PTR [ebp+0x18]
1005ac9d:	push   DWORD PTR [ebp+0x10]
1005aca0:	push   DWORD PTR [ebp+0xc]
1005aca3:	push   DWORD PTR [ebp+0x8]
1005aca6:	call   0x1005a62c
1005acab:	jmp    0x1005acc4
1005acad:	push   DWORD PTR [ebp+0x20]
1005acb0:	push   DWORD PTR [ebp+0x1c]
1005acb3:	push   DWORD PTR [ebp+0x18]
1005acb6:	push   DWORD PTR [ebp+0x10]
1005acb9:	push   DWORD PTR [ebp+0xc]
1005acbc:	push   DWORD PTR [ebp+0x8]
1005acbf:	call   0x1005a540
1005acc4:	add    esp,0x18
1005acc7:	pop    ebp
1005acc8:	ret    
1005acc9:	push   ebp
1005acca:	mov    ebp,esp
1005accc:	push   0x0
1005acce:	push   DWORD PTR [ebp+0x1c]
1005acd1:	push   DWORD PTR [ebp+0x18]
1005acd4:	push   DWORD PTR [ebp+0x14]
1005acd7:	push   DWORD PTR [ebp+0x10]
1005acda:	push   DWORD PTR [ebp+0xc]
1005acdd:	push   DWORD PTR [ebp+0x8]
1005ace0:	call   0x1005ac43
1005ace5:	add    esp,0x1c
1005ace8:	pop    ebp
1005ace9:	ret    
1005acea:	push   esi
1005aceb:	push   0x30000
1005acf0:	push   0x10000
1005acf5:	xor    esi,esi
1005acf7:	push   esi
1005acf8:	call   0x1005c05f
1005acfd:	add    esp,0xc
1005ad00:	test   eax,eax
1005ad02:	je     0x1005ad11
1005ad04:	push   esi
1005ad05:	push   esi
1005ad06:	push   esi
1005ad07:	push   esi
1005ad08:	push   esi
1005ad09:	call   0x10042190
1005ad0e:	add    esp,0x14
1005ad11:	pop    esi
1005ad12:	ret    
1005ad13:	push   ebp
1005ad14:	mov    ebp,esp
1005ad16:	sub    esp,0x18
1005ad19:	fld    QWORD PTR ds:0x1006b928
1005ad1f:	fstp   QWORD PTR [ebp-0x10]
1005ad22:	fld    QWORD PTR ds:0x1006b920
1005ad28:	fstp   QWORD PTR [ebp-0x18]
1005ad2b:	fld    QWORD PTR [ebp-0x18]
1005ad2e:	fdiv   QWORD PTR [ebp-0x10]
1005ad31:	fmul   QWORD PTR [ebp-0x10]
1005ad34:	fsubr  QWORD PTR [ebp-0x18]
1005ad37:	fstp   QWORD PTR [ebp-0x8]
1005ad3a:	fld1   
1005ad3c:	fcomp  QWORD PTR [ebp-0x8]
1005ad3f:	fnstsw ax
1005ad41:	test   ah,0x5
1005ad44:	jp     0x1005ad4b
1005ad46:	xor    eax,eax
1005ad48:	inc    eax
1005ad49:	leave  
1005ad4a:	ret    
1005ad4b:	xor    eax,eax
1005ad4d:	leave  
1005ad4e:	ret    
1005ad4f:	push   0x1006b94c
1005ad54:	call   DWORD PTR ds:0x10065198
1005ad5a:	test   eax,eax
1005ad5c:	je     0x1005ad73
1005ad5e:	push   0x1006b930
1005ad63:	push   eax
1005ad64:	call   DWORD PTR ds:0x1006512c
1005ad6a:	test   eax,eax
1005ad6c:	je     0x1005ad73
1005ad6e:	push   0x0
1005ad70:	call   eax
1005ad72:	ret    
1005ad73:	jmp    0x1005ad13
1005ad78:	push   esi
1005ad79:	mov    esi,DWORD PTR [esp+0x8]
1005ad7d:	push   edi
1005ad7e:	xor    edi,edi
1005ad80:	cmp    esi,edi
1005ad82:	jne    0x1005ada1
1005ad84:	call   0x100458a5
1005ad89:	push   edi
1005ad8a:	push   edi
1005ad8b:	push   edi
1005ad8c:	push   edi
1005ad8d:	push   edi
1005ad8e:	mov    DWORD PTR [eax],0x16
1005ad94:	call   0x1004228c
1005ad99:	add    esp,0x14
1005ad9c:	jmp    0x1005ae92
1005ada1:	mov    eax,DWORD PTR [esi+0xc]
1005ada4:	test   al,0x83
1005ada6:	je     0x1005ae92
1005adac:	test   al,0x40
1005adae:	jne    0x1005ae92
1005adb4:	test   al,0x2
1005adb6:	je     0x1005adc3
1005adb8:	or     eax,0x20
1005adbb:	mov    DWORD PTR [esi+0xc],eax
1005adbe:	jmp    0x1005ae92
1005adc3:	or     eax,0x1
1005adc6:	test   ax,0x10c
1005adca:	mov    DWORD PTR [esi+0xc],eax
1005adcd:	jne    0x1005add8
1005adcf:	push   esi
1005add0:	call   0x1004c2ad
1005add5:	pop    ecx
1005add6:	jmp    0x1005addd
1005add8:	mov    eax,DWORD PTR [esi+0x8]
1005addb:	mov    DWORD PTR [esi],eax
1005addd:	push   DWORD PTR [esi+0x18]
1005ade0:	push   DWORD PTR [esi+0x8]
1005ade3:	push   esi
1005ade4:	call   0x1004c4ca
1005ade9:	pop    ecx
1005adea:	push   eax
1005adeb:	call   0x1005790c
1005adf0:	add    esp,0xc
1005adf3:	cmp    eax,edi
1005adf5:	mov    DWORD PTR [esi+0x4],eax
1005adf8:	je     0x1005ae82
1005adfe:	cmp    eax,0xffffffff
1005ae01:	je     0x1005ae82
1005ae03:	test   BYTE PTR [esi+0xc],0x82
1005ae07:	jne    0x1005ae58
1005ae09:	push   esi
1005ae0a:	call   0x1004c4ca
1005ae0f:	cmp    eax,0xffffffff
1005ae12:	pop    ecx
1005ae13:	je     0x1005ae43
1005ae15:	push   esi
1005ae16:	call   0x1004c4ca
1005ae1b:	cmp    eax,0xfffffffe
1005ae1e:	pop    ecx
1005ae1f:	je     0x1005ae43
1005ae21:	push   esi
1005ae22:	call   0x1004c4ca
1005ae27:	sar    eax,0x5
1005ae2a:	push   esi
1005ae2b:	lea    edi,[eax*4+0x10081460]
1005ae32:	call   0x1004c4ca
1005ae37:	and    eax,0x1f
1005ae3a:	imul   eax,eax,0x28
1005ae3d:	add    eax,DWORD PTR [edi]
1005ae3f:	pop    ecx
1005ae40:	pop    ecx
1005ae41:	jmp    0x1005ae48
1005ae43:	mov    eax,0x1007d9d0
1005ae48:	mov    al,BYTE PTR [eax+0x4]
1005ae4b:	and    al,0x82
1005ae4d:	cmp    al,0x82
1005ae4f:	jne    0x1005ae58
1005ae51:	or     DWORD PTR [esi+0xc],0x2000
1005ae58:	cmp    DWORD PTR [esi+0x18],0x200
1005ae5f:	jne    0x1005ae75
1005ae61:	mov    eax,DWORD PTR [esi+0xc]
1005ae64:	test   al,0x8
1005ae66:	je     0x1005ae75
1005ae68:	test   ax,0x400
1005ae6c:	jne    0x1005ae75
1005ae6e:	mov    DWORD PTR [esi+0x18],0x1000
1005ae75:	mov    ecx,DWORD PTR [esi]
1005ae77:	dec    DWORD PTR [esi+0x4]
1005ae7a:	movzx  eax,BYTE PTR [ecx]
1005ae7d:	inc    ecx
1005ae7e:	mov    DWORD PTR [esi],ecx
1005ae80:	jmp    0x1005ae95
1005ae82:	neg    eax
1005ae84:	sbb    eax,eax
1005ae86:	and    eax,0x10
1005ae89:	add    eax,0x10
1005ae8c:	or     DWORD PTR [esi+0xc],eax
1005ae8f:	mov    DWORD PTR [esi+0x4],edi
1005ae92:	or     eax,0xffffffff
1005ae95:	pop    edi
1005ae96:	pop    esi
1005ae97:	ret    
1005ae98:	push   ebp
1005ae99:	mov    ebp,esp
1005ae9b:	mov    eax,DWORD PTR [ebp+0x8]
1005ae9e:	test   eax,eax
1005aea0:	jne    0x1005aea7
1005aea2:	xor    eax,eax
1005aea4:	inc    eax
1005aea5:	pop    ebp
1005aea6:	ret    
1005aea7:	add    al,0x40
1005aea9:	mov    BYTE PTR [ebp+0x8],al
1005aeac:	lea    eax,[ebp+0x8]
1005aeaf:	push   eax
1005aeb0:	mov    BYTE PTR [ebp+0x9],0x3a
1005aeb4:	mov    BYTE PTR [ebp+0xa],0x5c
1005aeb8:	mov    BYTE PTR [ebp+0xb],0x0
1005aebc:	call   DWORD PTR ds:0x10065054
1005aec2:	test   eax,eax
1005aec4:	je     0x1005aecb
1005aec6:	cmp    eax,0x1
1005aec9:	jne    0x1005aea2
1005aecb:	xor    eax,eax
1005aecd:	pop    ebp
1005aece:	ret    
1005aecf:	push   ebp
1005aed0:	mov    ebp,esp
1005aed2:	push   ecx
1005aed3:	push   ecx
1005aed4:	push   ebx
1005aed5:	xor    ebx,ebx
1005aed7:	cmp    DWORD PTR [ebp+0x8],ebx
1005aeda:	je     0x1005af13
1005aedc:	push   DWORD PTR [ebp+0x8]
1005aedf:	call   0x1005ae98
1005aee4:	test   eax,eax
1005aee6:	pop    ecx
1005aee7:	jne    0x1005af1a
1005aee9:	call   0x100458b8
1005aeee:	mov    DWORD PTR [eax],0xf
1005aef4:	call   0x100458a5
1005aef9:	push   ebx
1005aefa:	push   ebx
1005aefb:	push   ebx
1005aefc:	push   ebx
1005aefd:	push   ebx
1005aefe:	mov    DWORD PTR [eax],0xd
1005af04:	call   0x1004228c
1005af09:	add    esp,0x14
1005af0c:	xor    eax,eax
1005af0e:	jmp    0x1005b001
1005af13:	call   0x1005b27d
1005af18:	jmp    0x1005af1d
1005af1a:	mov    eax,DWORD PTR [ebp+0x8]
1005af1d:	push   edi
1005af1e:	mov    edi,DWORD PTR [ebp+0xc]
1005af21:	cmp    edi,ebx
1005af23:	je     0x1005af52
1005af25:	mov    ecx,DWORD PTR [ebp+0x10]
1005af28:	cmp    ecx,ebx
1005af2a:	jg     0x1005af4b
1005af2c:	call   0x100458a5
1005af31:	push   ebx
1005af32:	push   ebx
1005af33:	push   ebx
1005af34:	push   ebx
1005af35:	push   ebx
1005af36:	mov    DWORD PTR [eax],0x16
1005af3c:	call   0x1004228c
1005af41:	add    esp,0x14
1005af44:	xor    eax,eax
1005af46:	jmp    0x1005b000
1005af4b:	mov    DWORD PTR [ebp+0x8],ecx
1005af4e:	mov    BYTE PTR [edi],bl
1005af50:	jmp    0x1005af55
1005af52:	mov    DWORD PTR [ebp+0x8],ebx
1005af55:	cmp    eax,ebx
1005af57:	je     0x1005af6b
1005af59:	add    al,0x40
1005af5b:	mov    BYTE PTR [ebp-0x4],al
1005af5e:	mov    BYTE PTR [ebp-0x3],0x3a
1005af62:	mov    BYTE PTR [ebp-0x2],0x2e
1005af66:	mov    BYTE PTR [ebp-0x1],bl
1005af69:	jmp    0x1005af72
1005af6b:	mov    BYTE PTR [ebp-0x4],0x2e
1005af6f:	mov    BYTE PTR [ebp-0x3],bl
1005af72:	push   esi
1005af73:	mov    esi,DWORD PTR ds:0x1006505c
1005af79:	lea    eax,[ebp-0x8]
1005af7c:	push   eax
1005af7d:	push   edi
1005af7e:	push   DWORD PTR [ebp+0x8]
1005af81:	lea    eax,[ebp-0x4]
1005af84:	push   eax
1005af85:	call   esi
1005af87:	cmp    eax,ebx
1005af89:	je     0x1005aff0
1005af8b:	cmp    edi,ebx
1005af8d:	je     0x1005afa3
1005af8f:	cmp    eax,DWORD PTR [ebp+0x8]
1005af92:	jl     0x1005afec
1005af94:	call   0x100458a5
1005af99:	mov    DWORD PTR [eax],0x22
1005af9f:	mov    BYTE PTR [edi],bl
1005afa1:	jmp    0x1005affd
1005afa3:	cmp    eax,DWORD PTR [ebp+0x10]
1005afa6:	jle    0x1005afab
1005afa8:	mov    DWORD PTR [ebp+0x10],eax
1005afab:	push   0x1
1005afad:	push   DWORD PTR [ebp+0x10]
1005afb0:	call   0x100425b4
1005afb5:	mov    edi,eax
1005afb7:	cmp    edi,ebx
1005afb9:	pop    ecx
1005afba:	pop    ecx
1005afbb:	jne    0x1005afd5
1005afbd:	call   0x100458a5
1005afc2:	mov    DWORD PTR [eax],0xc
1005afc8:	call   0x100458b8
1005afcd:	mov    DWORD PTR [eax],0x8
1005afd3:	jmp    0x1005affd
1005afd5:	lea    eax,[ebp-0x8]
1005afd8:	push   eax
1005afd9:	push   edi
1005afda:	push   DWORD PTR [ebp+0x10]
1005afdd:	lea    eax,[ebp-0x4]
1005afe0:	push   eax
1005afe1:	call   esi
1005afe3:	cmp    eax,ebx
1005afe5:	je     0x1005aff0
1005afe7:	cmp    eax,DWORD PTR [ebp+0x10]
1005afea:	jge    0x1005aff0
1005afec:	mov    eax,edi
1005afee:	jmp    0x1005afff
1005aff0:	call   DWORD PTR ds:0x100650c4
1005aff6:	push   eax
1005aff7:	call   0x100458cb
1005affc:	pop    ecx
1005affd:	xor    eax,eax
1005afff:	pop    esi
1005b000:	pop    edi
1005b001:	pop    ebx
1005b002:	leave  
1005b003:	ret    
1005b004:	push   0xc
1005b006:	push   0x100737c0
1005b00b:	call   0x100459e4
1005b010:	push   0x7
1005b012:	call   0x100469ed
1005b017:	pop    ecx
1005b018:	and    DWORD PTR [ebp-0x4],0x0
1005b01c:	push   DWORD PTR [ebp+0xc]
1005b01f:	push   DWORD PTR [ebp+0x8]
1005b022:	push   0x0
1005b024:	call   0x1005aecf
1005b029:	add    esp,0xc
1005b02c:	mov    DWORD PTR [ebp-0x1c],eax
1005b02f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005b036:	call   0x1005b044
1005b03b:	mov    eax,DWORD PTR [ebp-0x1c]
1005b03e:	call   0x10045a29
1005b043:	ret    
1005b044:	push   0x7
1005b046:	call   0x10046915
1005b04b:	pop    ecx
1005b04c:	ret    
1005b04d:	int3   
1005b04e:	int3   
1005b04f:	int3   
1005b050:	push   ebp
1005b051:	mov    ebp,esp
1005b053:	sub    esp,0x14
1005b056:	push   esi
1005b057:	push   DWORD PTR [ebp+0x10]
1005b05a:	lea    ecx,[ebp-0x14]
1005b05d:	call   0x10044235
1005b062:	mov    edx,DWORD PTR [ebp+0x8]
1005b065:	xor    esi,esi
1005b067:	cmp    edx,esi
1005b069:	jne    0x1005b09a
1005b06b:	call   0x100458a5
1005b070:	push   esi
1005b071:	push   esi
1005b072:	push   esi
1005b073:	push   esi
1005b074:	push   esi
1005b075:	mov    DWORD PTR [eax],0x16
1005b07b:	call   0x1004228c
1005b080:	add    esp,0x14
1005b083:	cmp    BYTE PTR [ebp-0x8],0x0
1005b087:	je     0x1005b090
1005b089:	mov    eax,DWORD PTR [ebp-0xc]
1005b08c:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b090:	mov    eax,0x7fffffff
1005b095:	jmp    0x1005b267
1005b09a:	push   ebx
1005b09b:	mov    ebx,DWORD PTR [ebp+0xc]
1005b09e:	cmp    ebx,esi
1005b0a0:	jne    0x1005b0d1
1005b0a2:	call   0x100458a5
1005b0a7:	push   esi
1005b0a8:	push   esi
1005b0a9:	push   esi
1005b0aa:	push   esi
1005b0ab:	push   esi
1005b0ac:	mov    DWORD PTR [eax],0x16
1005b0b2:	call   0x1004228c
1005b0b7:	add    esp,0x14
1005b0ba:	cmp    BYTE PTR [ebp-0x8],0x0
1005b0be:	je     0x1005b0c7
1005b0c0:	mov    eax,DWORD PTR [ebp-0xc]
1005b0c3:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b0c7:	mov    eax,0x7fffffff
1005b0cc:	jmp    0x1005b266
1005b0d1:	mov    eax,DWORD PTR [ebp-0x10]
1005b0d4:	cmp    DWORD PTR [eax+0x8],esi
1005b0d7:	jne    0x1005b0fd
1005b0d9:	lea    eax,[ebp-0x14]
1005b0dc:	push   eax
1005b0dd:	push   ebx
1005b0de:	push   edx
1005b0df:	call   0x100442ec
1005b0e4:	add    esp,0xc
1005b0e7:	cmp    BYTE PTR [ebp-0x8],0x0
1005b0eb:	je     0x1005b266
1005b0f1:	mov    ecx,DWORD PTR [ebp-0xc]
1005b0f4:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005b0f8:	jmp    0x1005b266
1005b0fd:	push   edi
1005b0fe:	mov    edi,0x200
1005b103:	movzx  cx,BYTE PTR [edx]
1005b107:	movzx  ecx,cx
1005b10a:	movzx  esi,cl
1005b10d:	inc    edx
1005b10e:	test   BYTE PTR [esi+eax*1+0x1d],0x4
1005b113:	mov    DWORD PTR [ebp+0x8],edx
1005b116:	je     0x1005b171
1005b118:	cmp    BYTE PTR [edx],0x0
1005b11b:	jne    0x1005b121
1005b11d:	xor    esi,esi
1005b11f:	jmp    0x1005b18d
1005b121:	push   0x1
1005b123:	push   DWORD PTR [eax+0x4]
1005b126:	lea    ecx,[ebp-0x4]
1005b129:	push   0x2
1005b12b:	push   ecx
1005b12c:	push   0x2
1005b12e:	dec    edx
1005b12f:	push   edx
1005b130:	push   edi
1005b131:	push   DWORD PTR [eax+0xc]
1005b134:	lea    eax,[ebp-0x14]
1005b137:	push   eax
1005b138:	call   0x10048b9c
1005b13d:	add    esp,0x24
1005b140:	cmp    eax,0x1
1005b143:	jne    0x1005b14c
1005b145:	movzx  ax,BYTE PTR [ebp-0x4]
1005b14a:	jmp    0x1005b166
1005b14c:	cmp    eax,0x2
1005b14f:	jne    0x1005b222
1005b155:	movzx  ax,BYTE PTR [ebp-0x4]
1005b15a:	movzx  cx,BYTE PTR [ebp-0x3]
1005b15f:	shl    ax,0x8
1005b163:	add    ax,cx
1005b166:	inc    DWORD PTR [ebp+0x8]
1005b169:	movzx  esi,ax
1005b16c:	mov    eax,DWORD PTR [ebp-0x10]
1005b16f:	jmp    0x1005b18d
1005b171:	movzx  edx,cx
1005b174:	lea    ecx,[edx+eax*1]
1005b177:	test   BYTE PTR [ecx+0x1d],0x10
1005b17b:	je     0x1005b18a
1005b17d:	movzx  cx,BYTE PTR [ecx+0x11d]
1005b185:	movzx  esi,cx
1005b188:	jmp    0x1005b18d
1005b18a:	movzx  esi,dx
1005b18d:	movzx  cx,BYTE PTR [ebx]
1005b191:	movzx  ecx,cx
1005b194:	movzx  edx,cl
1005b197:	inc    ebx
1005b198:	test   BYTE PTR [edx+eax*1+0x1d],0x4
1005b19d:	je     0x1005b1f4
1005b19f:	cmp    BYTE PTR [ebx],0x0
1005b1a2:	jne    0x1005b1a8
1005b1a4:	xor    ecx,ecx
1005b1a6:	jmp    0x1005b210
1005b1a8:	push   0x1
1005b1aa:	push   DWORD PTR [eax+0x4]
1005b1ad:	lea    ecx,[ebp-0x4]
1005b1b0:	push   0x2
1005b1b2:	push   ecx
1005b1b3:	push   0x2
1005b1b5:	lea    ecx,[ebx-0x1]
1005b1b8:	push   ecx
1005b1b9:	push   edi
1005b1ba:	push   DWORD PTR [eax+0xc]
1005b1bd:	lea    eax,[ebp-0x14]
1005b1c0:	push   eax
1005b1c1:	call   0x10048b9c
1005b1c6:	add    esp,0x24
1005b1c9:	cmp    eax,0x1
1005b1cc:	jne    0x1005b1d5
1005b1ce:	movzx  ax,BYTE PTR [ebp-0x4]
1005b1d3:	jmp    0x1005b1eb
1005b1d5:	cmp    eax,0x2
1005b1d8:	jne    0x1005b222
1005b1da:	movzx  ax,BYTE PTR [ebp-0x4]
1005b1df:	movzx  cx,BYTE PTR [ebp-0x3]
1005b1e4:	shl    ax,0x8
1005b1e8:	add    ax,cx
1005b1eb:	movzx  ecx,ax
1005b1ee:	mov    eax,DWORD PTR [ebp-0x10]
1005b1f1:	inc    ebx
1005b1f2:	jmp    0x1005b210
1005b1f4:	movzx  edx,cx
1005b1f7:	lea    ecx,[edx+eax*1]
1005b1fa:	test   BYTE PTR [ecx+0x1d],0x10
1005b1fe:	je     0x1005b20d
1005b200:	movzx  cx,BYTE PTR [ecx+0x11d]
1005b208:	movzx  ecx,cx
1005b20b:	jmp    0x1005b210
1005b20d:	movzx  ecx,dx
1005b210:	cmp    cx,si
1005b213:	jne    0x1005b241
1005b215:	test   si,si
1005b218:	je     0x1005b256
1005b21a:	mov    edx,DWORD PTR [ebp+0x8]
1005b21d:	jmp    0x1005b103
1005b222:	call   0x100458a5
1005b227:	mov    DWORD PTR [eax],0x16
1005b22d:	cmp    BYTE PTR [ebp-0x8],0x0
1005b231:	je     0x1005b23a
1005b233:	mov    eax,DWORD PTR [ebp-0xc]
1005b236:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b23a:	mov    eax,0x7fffffff
1005b23f:	jmp    0x1005b265
1005b241:	sbb    eax,eax
1005b243:	and    eax,0x2
1005b246:	dec    eax
1005b247:	cmp    BYTE PTR [ebp-0x8],0x0
1005b24b:	je     0x1005b265
1005b24d:	mov    ecx,DWORD PTR [ebp-0xc]
1005b250:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005b254:	jmp    0x1005b265
1005b256:	cmp    BYTE PTR [ebp-0x8],0x0
1005b25a:	je     0x1005b263
1005b25c:	mov    eax,DWORD PTR [ebp-0xc]
1005b25f:	and    DWORD PTR [eax+0x70],0xfffffffd
1005b263:	xor    eax,eax
1005b265:	pop    edi
1005b266:	pop    ebx
1005b267:	pop    esi
1005b268:	leave  
1005b269:	ret    
1005b26a:	push   0x0
1005b26c:	push   DWORD PTR [esp+0xc]
1005b270:	push   DWORD PTR [esp+0xc]
1005b274:	call   0x1005b050
1005b279:	add    esp,0xc
1005b27c:	ret    
1005b27d:	push   ebp
1005b27e:	lea    ebp,[esp-0x94]
1005b285:	sub    esp,0x114
1005b28b:	mov    eax,ds:0x1007d030
1005b290:	xor    eax,ebp
1005b292:	mov    DWORD PTR [ebp+0x90],eax
1005b298:	and    DWORD PTR [ebp-0x7c],0x0
1005b29c:	push   ebx
1005b29d:	push   esi
1005b29e:	push   edi
1005b29f:	mov    edi,DWORD PTR ds:0x10065058
1005b2a5:	lea    ebx,[ebp-0x78]
1005b2a8:	mov    eax,ebx
1005b2aa:	push   eax
1005b2ab:	push   0x105
1005b2b0:	call   edi
1005b2b2:	mov    esi,eax
1005b2b4:	cmp    esi,0x104
1005b2ba:	jle    0x1005b2f4
1005b2bc:	lea    eax,[esi+0x1]
1005b2bf:	push   0x1
1005b2c1:	push   eax
1005b2c2:	mov    DWORD PTR [ebp-0x80],eax
1005b2c5:	call   0x100461b2
1005b2ca:	mov    ebx,eax
1005b2cc:	test   ebx,ebx
1005b2ce:	pop    ecx
1005b2cf:	pop    ecx
1005b2d0:	jne    0x1005b2e1
1005b2d2:	call   0x100458a5
1005b2d7:	mov    DWORD PTR [eax],0xc
1005b2dd:	xor    esi,esi
1005b2df:	jmp    0x1005b2f4
1005b2e1:	test   esi,esi
1005b2e3:	mov    DWORD PTR [ebp-0x7c],0x1
1005b2ea:	je     0x1005b2f4
1005b2ec:	push   ebx
1005b2ed:	push   DWORD PTR [ebp-0x80]
1005b2f0:	call   edi
1005b2f2:	mov    esi,eax
1005b2f4:	xor    edi,edi
1005b2f6:	test   esi,esi
1005b2f8:	je     0x1005b311
1005b2fa:	cmp    BYTE PTR [ebx+0x1],0x3a
1005b2fe:	jne    0x1005b31c
1005b300:	movzx  eax,BYTE PTR [ebx]
1005b303:	push   eax
1005b304:	call   0x10057bd7
1005b309:	mov    edi,eax
1005b30b:	pop    ecx
1005b30c:	sub    edi,0x40
1005b30f:	jmp    0x1005b31c
1005b311:	call   0x100458a5
1005b316:	mov    DWORD PTR [eax],0xc
1005b31c:	cmp    DWORD PTR [ebp-0x7c],0x0
1005b320:	je     0x1005b329
1005b322:	push   ebx
1005b323:	call   0x10042408
1005b328:	pop    ecx
1005b329:	mov    ecx,DWORD PTR [ebp+0x90]
1005b32f:	mov    eax,edi
1005b331:	pop    edi
1005b332:	pop    esi
1005b333:	xor    ecx,ebp
1005b335:	pop    ebx
1005b336:	call   0x10041d97
1005b33b:	add    ebp,0x94
1005b341:	leave  
1005b342:	ret    
1005b343:	push   esi
1005b344:	mov    esi,DWORD PTR [esp+0x8]
1005b348:	cmp    DWORD PTR [esi],0xe06d7363
1005b34e:	jne    0x1005b375
1005b350:	cmp    DWORD PTR ds:0x1006b8f8,0x0
1005b357:	je     0x1005b375
1005b359:	push   0x1006b8f8
1005b35e:	call   0x1004a922
1005b363:	test   eax,eax
1005b365:	pop    ecx
1005b366:	je     0x1005b375
1005b368:	push   DWORD PTR [esp+0xc]
1005b36c:	push   esi
1005b36d:	call   DWORD PTR ds:0x1006b8f8
1005b373:	pop    ecx
1005b374:	pop    ecx
1005b375:	pop    esi
1005b376:	ret    
1005b377:	int3   
1005b378:	int3   
1005b379:	int3   
1005b37a:	int3   
1005b37b:	int3   
1005b37c:	int3   
1005b37d:	int3   
1005b37e:	int3   
1005b37f:	int3   
1005b380:	push   ebx
1005b381:	push   ebp
1005b382:	mov    ebp,DWORD PTR [esp+0xc]
1005b386:	xor    eax,eax
1005b388:	or     edx,0xffffffff
1005b38b:	cmp    ecx,0xffffffff
1005b38e:	push   esi
1005b38f:	je     0x1005b422
1005b395:	lea    ecx,[ecx+ecx*2]
1005b398:	mov    esi,DWORD PTR [ebp+ecx*4+0x8]
1005b39c:	lea    ebx,[ebp+ecx*4+0x0]
1005b3a0:	sub    esi,edi
1005b3a2:	and    esi,0xfffff000
1005b3a8:	cmp    esi,edx
1005b3aa:	je     0x1005b3d9
1005b3ac:	test   eax,eax
1005b3ae:	je     0x1005b3c0
1005b3b0:	mov    ecx,DWORD PTR [eax+0xc]
1005b3b3:	cmp    esi,ecx
1005b3b5:	jb     0x1005b3c0
1005b3b7:	mov    edx,DWORD PTR [eax+0x8]
1005b3ba:	add    edx,ecx
1005b3bc:	cmp    esi,edx
1005b3be:	jb     0x1005b3d7
1005b3c0:	push   esi
1005b3c1:	push   edi
1005b3c2:	call   0x1004a8e0
1005b3c7:	add    esp,0x8
1005b3ca:	test   eax,eax
1005b3cc:	je     0x1005b42b
1005b3ce:	test   DWORD PTR [eax+0x24],0x20000000
1005b3d5:	je     0x1005b42b
1005b3d7:	mov    edx,esi
1005b3d9:	mov    ecx,DWORD PTR [ebx+0x4]
1005b3dc:	test   ecx,ecx
1005b3de:	je     0x1005b417
1005b3e0:	sub    ecx,edi
1005b3e2:	and    ecx,0xfffff000
1005b3e8:	mov    esi,ecx
1005b3ea:	cmp    esi,edx
1005b3ec:	je     0x1005b417
1005b3ee:	mov    ecx,DWORD PTR [eax+0xc]
1005b3f1:	cmp    esi,ecx
1005b3f3:	jb     0x1005b3fe
1005b3f5:	mov    edx,DWORD PTR [eax+0x8]
1005b3f8:	add    edx,ecx
1005b3fa:	cmp    esi,edx
1005b3fc:	jb     0x1005b415
1005b3fe:	push   esi
1005b3ff:	push   edi
1005b400:	call   0x1004a8e0
1005b405:	add    esp,0x8
1005b408:	test   eax,eax
1005b40a:	je     0x1005b42b
1005b40c:	test   DWORD PTR [eax+0x24],0x20000000
1005b413:	je     0x1005b42b
1005b415:	mov    edx,esi
1005b417:	mov    ecx,DWORD PTR [ebx]
1005b419:	cmp    ecx,0xffffffff
1005b41c:	jne    0x1005b395
1005b422:	pop    esi
1005b423:	pop    ebp
1005b424:	mov    eax,0x1
1005b429:	pop    ebx
1005b42a:	ret    
1005b42b:	pop    esi
1005b42c:	pop    ebp
1005b42d:	xor    eax,eax
1005b42f:	pop    ebx
1005b430:	ret    
1005b431:	int3   
1005b432:	int3   
1005b433:	int3   
1005b434:	int3   
1005b435:	int3   
1005b436:	int3   
1005b437:	int3   
1005b438:	int3   
1005b439:	int3   
1005b43a:	int3   
1005b43b:	int3   
1005b43c:	int3   
1005b43d:	int3   
1005b43e:	int3   
1005b43f:	int3   
1005b440:	push   ebp
1005b441:	mov    ebp,esp
1005b443:	push   0xfffffffe
1005b445:	push   0x100737e0
1005b44a:	push   0x10045a40
1005b44f:	mov    eax,fs:0x0
1005b455:	push   eax
1005b456:	sub    esp,0x30
1005b459:	push   ebx
1005b45a:	push   esi
1005b45b:	push   edi
1005b45c:	mov    eax,ds:0x1007d030
1005b461:	xor    DWORD PTR [ebp-0x8],eax
1005b464:	xor    eax,ebp
1005b466:	push   eax
1005b467:	lea    eax,[ebp-0x10]
1005b46a:	mov    fs:0x0,eax
1005b470:	mov    DWORD PTR [ebp-0x18],esp
1005b473:	mov    esi,DWORD PTR [ebp+0x8]
1005b476:	mov    edx,DWORD PTR [esi+0x8]
1005b479:	mov    DWORD PTR [ebp-0x1c],edx
1005b47c:	test   dl,0x3
1005b47f:	je     0x1005b495
1005b481:	xor    eax,eax
1005b483:	mov    ecx,DWORD PTR [ebp-0x10]
1005b486:	mov    DWORD PTR fs:0x0,ecx
1005b48d:	pop    ecx
1005b48e:	pop    edi
1005b48f:	pop    esi
1005b490:	pop    ebx
1005b491:	mov    esp,ebp
1005b493:	pop    ebp
1005b494:	ret    
1005b495:	mov    eax,fs:0x18
1005b49b:	mov    ecx,DWORD PTR [eax+0x8]
1005b49e:	mov    DWORD PTR [ebp-0x20],ecx
1005b4a1:	cmp    edx,ecx
1005b4a3:	jb     0x1005b4aa
1005b4a5:	cmp    edx,DWORD PTR [eax+0x4]
1005b4a8:	jb     0x1005b481
1005b4aa:	mov    edi,DWORD PTR [esi+0xc]
1005b4ad:	mov    DWORD PTR [ebp-0x24],edi
1005b4b0:	cmp    edi,0xffffffff
1005b4b3:	je     0x1005b7cb
1005b4b9:	xor    ebx,ebx
1005b4bb:	xor    eax,eax
1005b4bd:	mov    ecx,edx
1005b4bf:	nop
1005b4c0:	mov    esi,DWORD PTR [ecx]
1005b4c2:	cmp    esi,0xffffffff
1005b4c5:	je     0x1005b4cb
1005b4c7:	cmp    esi,eax
1005b4c9:	jae    0x1005b481
1005b4cb:	cmp    DWORD PTR [ecx+0x4],0x0
1005b4cf:	je     0x1005b4d6
1005b4d1:	mov    ebx,0x1
1005b4d6:	add    eax,0x1
1005b4d9:	add    ecx,0xc
1005b4dc:	cmp    eax,edi
1005b4de:	jbe    0x1005b4c0
1005b4e0:	test   ebx,ebx
1005b4e2:	je     0x1005b4f3
1005b4e4:	mov    ecx,DWORD PTR [ebp+0x8]
1005b4e7:	mov    eax,DWORD PTR [ecx-0x8]
1005b4ea:	cmp    eax,DWORD PTR [ebp-0x20]
1005b4ed:	jb     0x1005b481
1005b4ef:	cmp    eax,ecx
1005b4f1:	jae    0x1005b481
1005b4f3:	mov    eax,edx
1005b4f5:	and    eax,0xfffff000
1005b4fa:	mov    DWORD PTR [ebp-0x20],eax
1005b4fd:	xor    esi,esi
1005b4ff:	mov    eax,ds:0x1007fab0
1005b504:	cmp    esi,eax
1005b506:	jge    0x1005b64d
1005b50c:	mov    ebx,DWORD PTR [esi*8+0x1007fab8]
1005b513:	mov    edi,DWORD PTR [esi*8+0x1007fabc]
1005b51a:	cmp    ebx,DWORD PTR [ebp-0x20]
1005b51d:	jne    0x1005b6a1
1005b523:	mov    DWORD PTR [ebp-0x4],0x0
1005b52a:	push   edi
1005b52b:	call   0x1004a8b0
1005b530:	add    esp,0x4
1005b533:	test   eax,eax
1005b535:	je     0x1005b643
1005b53b:	mov    eax,DWORD PTR [ebp-0x1c]
1005b53e:	push   eax
1005b53f:	mov    ecx,DWORD PTR [ebp-0x24]
1005b542:	call   0x1005b380
1005b547:	add    esp,0x4
1005b54a:	test   eax,eax
1005b54c:	je     0x1005b643
1005b552:	mov    ecx,DWORD PTR [ebp+0x8]
1005b555:	mov    edx,DWORD PTR [ecx+0x4]
1005b558:	sub    edx,edi
1005b55a:	push   edx
1005b55b:	push   edi
1005b55c:	call   0x1004a8e0
1005b561:	add    esp,0x8
1005b564:	test   eax,eax
1005b566:	je     0x1005b643
1005b56c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005b573:	test   esi,esi
1005b575:	jle    0x1005b7cb
1005b57b:	mov    eax,0x1
1005b580:	mov    ecx,0x1007fb38
1005b585:	xchg   DWORD PTR [ecx],eax
1005b587:	test   eax,eax
1005b589:	jne    0x1005b7cb
1005b58f:	mov    eax,DWORD PTR [ebp-0x20]
1005b592:	cmp    DWORD PTR [esi*8+0x1007fab8],eax
1005b599:	je     0x1005b5e3
1005b59b:	mov    ecx,DWORD PTR ds:0x1007fab0
1005b5a1:	lea    esi,[ecx-0x1]
1005b5a4:	test   esi,esi
1005b5a6:	jl     0x1005b5d2
1005b5a8:	jmp    0x1005b5b0
1005b5aa:	lea    ebx,[ebx+0x0]
1005b5b0:	cmp    DWORD PTR [esi*8+0x1007fab8],eax
1005b5b7:	je     0x1005b5c0
1005b5b9:	sub    esi,0x1
1005b5bc:	jns    0x1005b5b0
1005b5be:	jmp    0x1005b5ce
1005b5c0:	mov    ebx,DWORD PTR [esi*8+0x1007fab8]
1005b5c7:	mov    edi,DWORD PTR [esi*8+0x1007fabc]
1005b5ce:	test   esi,esi
1005b5d0:	jge    0x1005b5e5
1005b5d2:	cmp    ecx,0x10
1005b5d5:	jge    0x1005b5e0
1005b5d7:	add    ecx,0x1
1005b5da:	mov    DWORD PTR ds:0x1007fab0,ecx
1005b5e0:	lea    esi,[ecx-0x1]
1005b5e3:	test   esi,esi
1005b5e5:	jle    0x1005b7c2
1005b5eb:	xor    eax,eax
1005b5ed:	test   esi,esi
1005b5ef:	jl     0x1005b7c2
1005b5f5:	jmp    0x1005b600
1005b5f7:	lea    esp,[esp+0x0]
1005b5fe:	mov    edi,edi
1005b600:	mov    ecx,DWORD PTR [eax*8+0x1007fab8]
1005b607:	mov    edx,DWORD PTR [eax*8+0x1007fabc]
1005b60e:	mov    DWORD PTR [eax*8+0x1007fab8],ebx
1005b615:	mov    DWORD PTR [eax*8+0x1007fabc],edi
1005b61c:	mov    ebx,ecx
1005b61e:	mov    edi,edx
1005b620:	add    eax,0x1
1005b623:	cmp    eax,esi
1005b625:	jle    0x1005b600
1005b627:	jmp    0x1005b7c2
1005b62c:	mov    ecx,DWORD PTR [ebp-0x14]
1005b62f:	mov    edx,DWORD PTR [ecx]
1005b631:	mov    eax,DWORD PTR [edx]
1005b633:	xor    ecx,ecx
1005b635:	cmp    eax,0xc0000005
1005b63a:	sete   cl
1005b63d:	mov    eax,ecx
1005b63f:	ret    
1005b640:	mov    esp,DWORD PTR [ebp-0x18]
1005b643:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005b64a:	mov    edx,DWORD PTR [ebp-0x1c]
1005b64d:	push   0x1c
1005b64f:	lea    eax,[ebp-0x40]
1005b652:	push   eax
1005b653:	push   edx
1005b654:	call   DWORD PTR ds:0x100650f4
1005b65a:	test   eax,eax
1005b65c:	je     0x1005b7cb
1005b662:	mov    eax,DWORD PTR [ebp-0x28]
1005b665:	cmp    eax,0x1000000
1005b66a:	je     0x1005b6d0
1005b66c:	cmp    eax,0x20000
1005b671:	jne    0x1005b6bb
1005b673:	cmp    DWORD PTR ds:0x1007fab4,0x0
1005b67a:	jne    0x1005b6b2
1005b67c:	mov    DWORD PTR ds:0x1007fb40,0x94
1005b686:	push   0x1007fb40
1005b68b:	call   DWORD PTR ds:0x100651a8
1005b691:	test   eax,eax
1005b693:	je     0x1005b6a9
1005b695:	mov    DWORD PTR ds:0x1007fab4,0x1
1005b69f:	jmp    0x1005b6b2
1005b6a1:	add    esi,0x1
1005b6a4:	jmp    0x1005b504
1005b6a9:	cmp    DWORD PTR ds:0x1007fab4,0x0
1005b6b0:	je     0x1005b6d0
1005b6b2:	cmp    DWORD PTR ds:0x1007fb50,0x1
1005b6b9:	je     0x1005b6d0
1005b6bb:	or     eax,0xffffffff
1005b6be:	mov    ecx,DWORD PTR [ebp-0x10]
1005b6c1:	mov    DWORD PTR fs:0x0,ecx
1005b6c8:	pop    ecx
1005b6c9:	pop    edi
1005b6ca:	pop    esi
1005b6cb:	pop    ebx
1005b6cc:	mov    esp,ebp
1005b6ce:	pop    ebp
1005b6cf:	ret    
1005b6d0:	mov    edi,DWORD PTR [ebp-0x3c]
1005b6d3:	push   edi
1005b6d4:	call   0x1004a8b0
1005b6d9:	add    esp,0x4
1005b6dc:	test   eax,eax
1005b6de:	je     0x1005b6bb
1005b6e0:	test   BYTE PTR [ebp-0x2c],0xcc
1005b6e4:	je     0x1005b70a
1005b6e6:	mov    ecx,DWORD PTR [ebp-0x1c]
1005b6e9:	sub    ecx,edi
1005b6eb:	push   ecx
1005b6ec:	push   edi
1005b6ed:	call   0x1004a8e0
1005b6f2:	add    esp,0x8
1005b6f5:	test   eax,eax
1005b6f7:	je     0x1005b481
1005b6fd:	test   DWORD PTR [eax+0x24],0x80000000
1005b704:	jne    0x1005b481
1005b70a:	mov    edx,DWORD PTR [ebp-0x1c]
1005b70d:	push   edx
1005b70e:	mov    ecx,DWORD PTR [ebp-0x24]
1005b711:	call   0x1005b380
1005b716:	add    esp,0x4
1005b719:	test   eax,eax
1005b71b:	je     0x1005b481
1005b721:	mov    eax,DWORD PTR [ebp+0x8]
1005b724:	mov    ecx,DWORD PTR [eax+0x4]
1005b727:	sub    ecx,edi
1005b729:	push   ecx
1005b72a:	push   edi
1005b72b:	call   0x1004a8e0
1005b730:	add    esp,0x8
1005b733:	test   eax,eax
1005b735:	je     0x1005b481
1005b73b:	mov    edx,0x1
1005b740:	mov    eax,0x1007fb38
1005b745:	xchg   DWORD PTR [eax],edx
1005b747:	test   edx,edx
1005b749:	jne    0x1005b7cb
1005b74f:	mov    esi,DWORD PTR ds:0x1007fab0
1005b755:	mov    eax,esi
1005b757:	mov    ecx,DWORD PTR [ebp-0x20]
1005b75a:	test   esi,esi
1005b75c:	jle    0x1005b773
1005b75e:	lea    edx,[esi*8+0x1007fab0]
1005b765:	cmp    DWORD PTR [edx],ecx
1005b767:	je     0x1005b773
1005b769:	sub    eax,0x1
1005b76c:	sub    edx,0x8
1005b76f:	test   eax,eax
1005b771:	jg     0x1005b765
1005b773:	test   eax,eax
1005b775:	jne    0x1005b7b8
1005b777:	cmp    esi,0xf
1005b77a:	jle    0x1005b781
1005b77c:	mov    esi,0xf
1005b781:	mov    edx,DWORD PTR [ebp-0x3c]
1005b784:	test   esi,esi
1005b786:	jl     0x1005b7a6
1005b788:	mov    eax,0x1007fab8
1005b78d:	lea    ebx,[esi+0x1]
1005b790:	mov    esi,DWORD PTR [eax]
1005b792:	mov    edi,DWORD PTR [eax+0x4]
1005b795:	mov    DWORD PTR [eax],ecx
1005b797:	mov    DWORD PTR [eax+0x4],edx
1005b79a:	mov    ecx,esi
1005b79c:	mov    edx,edi
1005b79e:	add    eax,0x8
1005b7a1:	sub    ebx,0x1
1005b7a4:	jne    0x1005b790
1005b7a6:	cmp    DWORD PTR ds:0x1007fab0,0x10
1005b7ad:	jge    0x1005b7c2
1005b7af:	add    DWORD PTR ds:0x1007fab0,0x1
1005b7b6:	jmp    0x1005b7c2
1005b7b8:	mov    ecx,DWORD PTR [ebp-0x3c]
1005b7bb:	mov    DWORD PTR [eax*8+0x1007fab4],ecx
1005b7c2:	mov    eax,0x1007fb38
1005b7c7:	xor    edx,edx
1005b7c9:	xchg   DWORD PTR [eax],edx
1005b7cb:	mov    eax,0x1
1005b7d0:	mov    ecx,DWORD PTR [ebp-0x10]
1005b7d3:	mov    DWORD PTR fs:0x0,ecx
1005b7da:	pop    ecx
1005b7db:	pop    edi
1005b7dc:	pop    esi
1005b7dd:	pop    ebx
1005b7de:	mov    esp,ebp
1005b7e0:	pop    ebp
1005b7e1:	ret    
1005b7e2:	push   ebp
1005b7e3:	mov    ebp,esp
1005b7e5:	sub    esp,0x18
1005b7e8:	push   ebx
1005b7e9:	push   esi
1005b7ea:	push   edi
1005b7eb:	xor    ebx,ebx
1005b7ed:	push   0x1
1005b7ef:	push   ebx
1005b7f0:	push   ebx
1005b7f1:	push   DWORD PTR [ebp+0x8]
1005b7f4:	mov    DWORD PTR [ebp-0x10],ebx
1005b7f7:	mov    DWORD PTR [ebp-0xc],ebx
1005b7fa:	call   0x1004ba6f
1005b7ff:	mov    DWORD PTR [ebp-0x18],eax
1005b802:	and    eax,edx
1005b804:	add    esp,0x10
1005b807:	cmp    eax,0xffffffff
1005b80a:	mov    DWORD PTR [ebp-0x14],edx
1005b80d:	je     0x1005b868
1005b80f:	push   0x2
1005b811:	push   ebx
1005b812:	push   ebx
1005b813:	push   DWORD PTR [ebp+0x8]
1005b816:	call   0x1004ba6f
1005b81b:	mov    ecx,eax
1005b81d:	and    ecx,edx
1005b81f:	add    esp,0x10
1005b822:	cmp    ecx,0xffffffff
1005b825:	je     0x1005b868
1005b827:	mov    esi,DWORD PTR [ebp+0xc]
1005b82a:	mov    edi,DWORD PTR [ebp+0x10]
1005b82d:	sub    esi,eax
1005b82f:	sbb    edi,edx
1005b831:	js     0x1005b8fd
1005b837:	jg     0x1005b841
1005b839:	cmp    esi,ebx
1005b83b:	jbe    0x1005b8fd
1005b841:	mov    ebx,0x1000
1005b846:	push   ebx
1005b847:	push   0x8
1005b849:	call   DWORD PTR ds:0x100651ac
1005b84f:	push   eax
1005b850:	call   DWORD PTR ds:0x1006518c
1005b856:	test   eax,eax
1005b858:	mov    DWORD PTR [ebp-0x4],eax
1005b85b:	jne    0x1005b874
1005b85d:	call   0x100458a5
1005b862:	mov    DWORD PTR [eax],0xc
1005b868:	call   0x100458a5
1005b86d:	mov    eax,DWORD PTR [eax]
1005b86f:	pop    edi
1005b870:	pop    esi
1005b871:	pop    ebx
1005b872:	leave  
1005b873:	ret    
1005b874:	push   0x8000
1005b879:	push   DWORD PTR [ebp+0x8]
1005b87c:	call   0x1005b996
1005b881:	pop    ecx
1005b882:	pop    ecx
1005b883:	mov    DWORD PTR [ebp-0x8],eax
1005b886:	test   edi,edi
1005b888:	jl     0x1005b894
1005b88a:	jg     0x1005b890
1005b88c:	cmp    esi,ebx
1005b88e:	jb     0x1005b894
1005b890:	mov    eax,ebx
1005b892:	jmp    0x1005b896
1005b894:	mov    eax,esi
1005b896:	push   eax
1005b897:	push   DWORD PTR [ebp-0x4]
1005b89a:	push   DWORD PTR [ebp+0x8]
1005b89d:	call   0x1004bc0b
1005b8a2:	add    esp,0xc
1005b8a5:	cmp    eax,0xffffffff
1005b8a8:	je     0x1005b8e0
1005b8aa:	cdq    
1005b8ab:	sub    esi,eax
1005b8ad:	sbb    edi,edx
1005b8af:	js     0x1005b8b7
1005b8b1:	jg     0x1005b886
1005b8b3:	test   esi,esi
1005b8b5:	ja     0x1005b886
1005b8b7:	mov    esi,DWORD PTR [ebp-0x10]
1005b8ba:	push   DWORD PTR [ebp-0x8]
1005b8bd:	push   DWORD PTR [ebp+0x8]
1005b8c0:	call   0x1005b996
1005b8c5:	pop    ecx
1005b8c6:	pop    ecx
1005b8c7:	push   DWORD PTR [ebp-0x4]
1005b8ca:	push   0x0
1005b8cc:	call   DWORD PTR ds:0x100651ac
1005b8d2:	push   eax
1005b8d3:	call   DWORD PTR ds:0x10065188
1005b8d9:	xor    ebx,ebx
1005b8db:	jmp    0x1005b966
1005b8e0:	call   0x100458b8
1005b8e5:	cmp    DWORD PTR [eax],0x5
1005b8e8:	jne    0x1005b8f5
1005b8ea:	call   0x100458a5
1005b8ef:	mov    DWORD PTR [eax],0xd
1005b8f5:	or     esi,0xffffffff
1005b8f8:	mov    DWORD PTR [ebp-0xc],esi
1005b8fb:	jmp    0x1005b8ba
1005b8fd:	cmp    edi,ebx
1005b8ff:	jg     0x1005b972
1005b901:	jl     0x1005b907
1005b903:	cmp    esi,ebx
1005b905:	jae    0x1005b972
1005b907:	push   ebx
1005b908:	push   DWORD PTR [ebp+0x10]
1005b90b:	push   DWORD PTR [ebp+0xc]
1005b90e:	push   DWORD PTR [ebp+0x8]
1005b911:	call   0x1004ba6f
1005b916:	and    eax,edx
1005b918:	add    esp,0x10
1005b91b:	cmp    eax,0xffffffff
1005b91e:	je     0x1005b868
1005b924:	push   DWORD PTR [ebp+0x8]
1005b927:	call   0x1004e035
1005b92c:	pop    ecx
1005b92d:	push   eax
1005b92e:	call   DWORD PTR ds:0x10065068
1005b934:	neg    eax
1005b936:	sbb    eax,eax
1005b938:	neg    eax
1005b93a:	dec    eax
1005b93b:	cdq    
1005b93c:	mov    DWORD PTR [ebp-0x10],eax
1005b93f:	and    eax,edx
1005b941:	cmp    eax,0xffffffff
1005b944:	mov    DWORD PTR [ebp-0xc],edx
1005b947:	jne    0x1005b972
1005b949:	call   0x100458a5
1005b94e:	mov    DWORD PTR [eax],0xd
1005b954:	call   0x100458b8
1005b959:	mov    esi,eax
1005b95b:	call   DWORD PTR ds:0x100650c4
1005b961:	mov    DWORD PTR [esi],eax
1005b963:	mov    esi,DWORD PTR [ebp-0x10]
1005b966:	and    esi,DWORD PTR [ebp-0xc]
1005b969:	cmp    esi,0xffffffff
1005b96c:	je     0x1005b868
1005b972:	push   ebx
1005b973:	push   DWORD PTR [ebp-0x14]
1005b976:	push   DWORD PTR [ebp-0x18]
1005b979:	push   DWORD PTR [ebp+0x8]
1005b97c:	call   0x1004ba6f
1005b981:	and    eax,edx
1005b983:	add    esp,0x10
1005b986:	cmp    eax,0xffffffff
1005b989:	je     0x1005b868
1005b98f:	xor    eax,eax
1005b991:	jmp    0x1005b86f
1005b996:	push   ebp
1005b997:	mov    ebp,esp
1005b999:	mov    edx,DWORD PTR [ebp+0x8]
1005b99c:	mov    eax,edx
1005b99e:	sar    eax,0x5
1005b9a1:	and    edx,0x1f
1005b9a4:	imul   edx,edx,0x28
1005b9a7:	push   ebx
1005b9a8:	mov    ebx,DWORD PTR [ebp+0xc]
1005b9ab:	push   esi
1005b9ac:	lea    esi,[eax*4+0x10081460]
1005b9b3:	mov    eax,DWORD PTR [esi]
1005b9b5:	lea    ecx,[eax+edx*1]
1005b9b8:	movzx  eax,BYTE PTR [ecx+0x4]
1005b9bc:	and    eax,0x80
1005b9c1:	mov    DWORD PTR [ebp+0x8],eax
1005b9c4:	mov    al,BYTE PTR [ecx+0x24]
1005b9c7:	add    al,al
1005b9c9:	movsx  eax,al
1005b9cc:	push   edi
1005b9cd:	mov    edi,0x4000
1005b9d2:	sar    eax,1
1005b9d4:	cmp    ebx,edi
1005b9d6:	je     0x1005ba28
1005b9d8:	cmp    ebx,0x8000
1005b9de:	je     0x1005ba22
1005b9e0:	cmp    ebx,0x10000
1005b9e6:	je     0x1005ba0e
1005b9e8:	cmp    ebx,0x20000
1005b9ee:	je     0x1005ba0e
1005b9f0:	cmp    ebx,0x40000
1005b9f6:	jne    0x1005ba35
1005b9f8:	or     BYTE PTR [ecx+0x4],0x80
1005b9fc:	mov    ecx,DWORD PTR [esi]
1005b9fe:	lea    ecx,[ecx+edx*1+0x24]
1005ba02:	mov    dl,BYTE PTR [ecx]
1005ba04:	and    dl,0x81
1005ba07:	or     dl,0x1
1005ba0a:	mov    BYTE PTR [ecx],dl
1005ba0c:	jmp    0x1005ba35
1005ba0e:	or     BYTE PTR [ecx+0x4],0x80
1005ba12:	mov    ecx,DWORD PTR [esi]
1005ba14:	lea    ecx,[ecx+edx*1+0x24]
1005ba18:	mov    dl,BYTE PTR [ecx]
1005ba1a:	and    dl,0x82
1005ba1d:	or     dl,0x2
1005ba20:	jmp    0x1005ba0a
1005ba22:	and    BYTE PTR [ecx+0x4],0x7f
1005ba26:	jmp    0x1005ba35
1005ba28:	or     BYTE PTR [ecx+0x4],0x80
1005ba2c:	mov    ecx,DWORD PTR [esi]
1005ba2e:	lea    ecx,[ecx+edx*1+0x24]
1005ba32:	and    BYTE PTR [ecx],0x80
1005ba35:	cmp    DWORD PTR [ebp+0x8],0x0
1005ba39:	jne    0x1005ba42
1005ba3b:	mov    eax,0x8000
1005ba40:	jmp    0x1005ba4d
1005ba42:	neg    eax
1005ba44:	sbb    eax,eax
1005ba46:	and    eax,0xc000
1005ba4b:	add    eax,edi
1005ba4d:	pop    edi
1005ba4e:	pop    esi
1005ba4f:	pop    ebx
1005ba50:	pop    ebp
1005ba51:	ret    
1005ba52:	mov    eax,DWORD PTR [esp+0x4]
1005ba56:	push   esi
1005ba57:	xor    esi,esi
1005ba59:	cmp    eax,esi
1005ba5b:	jne    0x1005ba7a
1005ba5d:	call   0x100458a5
1005ba62:	push   esi
1005ba63:	push   esi
1005ba64:	push   esi
1005ba65:	push   esi
1005ba66:	push   esi
1005ba67:	mov    DWORD PTR [eax],0x16
1005ba6d:	call   0x1004228c
1005ba72:	add    esp,0x14
1005ba75:	push   0x16
1005ba77:	pop    eax
1005ba78:	pop    esi
1005ba79:	ret    
1005ba7a:	mov    ecx,DWORD PTR ds:0x1007fbdc
1005ba80:	mov    DWORD PTR [eax],ecx
1005ba82:	xor    eax,eax
1005ba84:	pop    esi
1005ba85:	ret    
1005ba86:	push   ebp
1005ba87:	mov    ebp,esp
1005ba89:	sub    esp,0x10
1005ba8c:	push   ebx
1005ba8d:	xor    ebx,ebx
1005ba8f:	cmp    DWORD PTR [ebp+0x10],ebx
1005ba92:	jne    0x1005ba9b
1005ba94:	xor    eax,eax
1005ba96:	jmp    0x1005bbd8
1005ba9b:	push   edi
1005ba9c:	push   DWORD PTR [ebp+0x14]
1005ba9f:	lea    ecx,[ebp-0x10]
1005baa2:	call   0x10044235
1005baa7:	mov    edi,DWORD PTR [ebp-0xc]
1005baaa:	cmp    DWORD PTR [edi+0x8],ebx
1005baad:	jne    0x1005bad5
1005baaf:	push   DWORD PTR [ebp+0x10]
1005bab2:	push   DWORD PTR [ebp+0xc]
1005bab5:	push   DWORD PTR [ebp+0x8]
1005bab8:	call   0x1004b5b6
1005babd:	add    esp,0xc
1005bac0:	cmp    BYTE PTR [ebp-0x4],bl
1005bac3:	je     0x1005bbd7
1005bac9:	mov    ecx,DWORD PTR [ebp-0x8]
1005bacc:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005bad0:	jmp    0x1005bbd7
1005bad5:	cmp    DWORD PTR [ebp+0x8],ebx
1005bad8:	jne    0x1005bb08
1005bada:	call   0x100458a5
1005badf:	push   ebx
1005bae0:	push   ebx
1005bae1:	push   ebx
1005bae2:	push   ebx
1005bae3:	push   ebx
1005bae4:	mov    DWORD PTR [eax],0x16
1005baea:	call   0x1004228c
1005baef:	add    esp,0x14
1005baf2:	cmp    BYTE PTR [ebp-0x4],bl
1005baf5:	je     0x1005bafe
1005baf7:	mov    eax,DWORD PTR [ebp-0x8]
1005bafa:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bafe:	mov    eax,0x7fffffff
1005bb03:	jmp    0x1005bbd7
1005bb08:	push   esi
1005bb09:	mov    esi,DWORD PTR [ebp+0xc]
1005bb0c:	cmp    esi,ebx
1005bb0e:	jne    0x1005bb3e
1005bb10:	call   0x100458a5
1005bb15:	push   ebx
1005bb16:	push   ebx
1005bb17:	push   ebx
1005bb18:	push   ebx
1005bb19:	push   ebx
1005bb1a:	mov    DWORD PTR [eax],0x16
1005bb20:	call   0x1004228c
1005bb25:	add    esp,0x14
1005bb28:	cmp    BYTE PTR [ebp-0x4],bl
1005bb2b:	je     0x1005bb34
1005bb2d:	mov    eax,DWORD PTR [ebp-0x8]
1005bb30:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bb34:	mov    eax,0x7fffffff
1005bb39:	jmp    0x1005bbd6
1005bb3e:	mov    eax,DWORD PTR [ebp+0x8]
1005bb41:	movzx  cx,BYTE PTR [eax]
1005bb45:	dec    DWORD PTR [ebp+0x10]
1005bb48:	movzx  ecx,cx
1005bb4b:	movzx  edx,cl
1005bb4e:	inc    eax
1005bb4f:	test   BYTE PTR [edx+edi*1+0x1d],0x4
1005bb54:	mov    DWORD PTR [ebp+0x8],eax
1005bb57:	je     0x1005bb85
1005bb59:	cmp    DWORD PTR [ebp+0x10],ebx
1005bb5c:	jne    0x1005bb6f
1005bb5e:	movzx  eax,BYTE PTR [esi]
1005bb61:	xor    ecx,ecx
1005bb63:	test   BYTE PTR [eax+edi*1+0x1d],0x4
1005bb68:	jne    0x1005bbc8
1005bb6a:	movzx  eax,ax
1005bb6d:	jmp    0x1005bbb5
1005bb6f:	mov    al,BYTE PTR [eax]
1005bb71:	cmp    al,bl
1005bb73:	jne    0x1005bb79
1005bb75:	xor    ecx,ecx
1005bb77:	jmp    0x1005bb85
1005bb79:	xor    edx,edx
1005bb7b:	inc    DWORD PTR [ebp+0x8]
1005bb7e:	mov    dh,cl
1005bb80:	mov    dl,al
1005bb82:	movzx  ecx,dx
1005bb85:	movzx  ax,BYTE PTR [esi]
1005bb89:	movzx  eax,ax
1005bb8c:	movzx  edx,al
1005bb8f:	inc    esi
1005bb90:	test   BYTE PTR [edx+edi*1+0x1d],0x4
1005bb95:	je     0x1005bbb5
1005bb97:	cmp    DWORD PTR [ebp+0x10],ebx
1005bb9a:	jne    0x1005bba0
1005bb9c:	xor    eax,eax
1005bb9e:	jmp    0x1005bbb5
1005bba0:	mov    dl,BYTE PTR [esi]
1005bba2:	dec    DWORD PTR [ebp+0x10]
1005bba5:	cmp    dl,bl
1005bba7:	je     0x1005bb9c
1005bba9:	xor    ebx,ebx
1005bbab:	mov    bh,al
1005bbad:	inc    esi
1005bbae:	mov    bl,dl
1005bbb0:	movzx  eax,bx
1005bbb3:	xor    ebx,ebx
1005bbb5:	cmp    ax,cx
1005bbb8:	jne    0x1005bbdb
1005bbba:	cmp    cx,bx
1005bbbd:	je     0x1005bbc8
1005bbbf:	cmp    DWORD PTR [ebp+0x10],ebx
1005bbc2:	jne    0x1005bb3e
1005bbc8:	cmp    BYTE PTR [ebp-0x4],bl
1005bbcb:	je     0x1005bbd4
1005bbcd:	mov    eax,DWORD PTR [ebp-0x8]
1005bbd0:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bbd4:	xor    eax,eax
1005bbd6:	pop    esi
1005bbd7:	pop    edi
1005bbd8:	pop    ebx
1005bbd9:	leave  
1005bbda:	ret    
1005bbdb:	sbb    eax,eax
1005bbdd:	and    eax,0x2
1005bbe0:	dec    eax
1005bbe1:	cmp    BYTE PTR [ebp-0x4],bl
1005bbe4:	je     0x1005bbd6
1005bbe6:	mov    ecx,DWORD PTR [ebp-0x8]
1005bbe9:	and    DWORD PTR [ecx+0x70],0xfffffffd
1005bbed:	jmp    0x1005bbd6
1005bbef:	push   0x0
1005bbf1:	push   DWORD PTR [esp+0x10]
1005bbf5:	push   DWORD PTR [esp+0x10]
1005bbf9:	push   DWORD PTR [esp+0x10]
1005bbfd:	call   0x1005ba86
1005bc02:	add    esp,0x10
1005bc05:	ret    
1005bc06:	push   ebp
1005bc07:	mov    ebp,esp
1005bc09:	sub    esp,0x28
1005bc0c:	mov    eax,ds:0x1007d030
1005bc11:	xor    eax,ebp
1005bc13:	mov    DWORD PTR [ebp-0x4],eax
1005bc16:	push   ebx
1005bc17:	push   esi
1005bc18:	mov    esi,DWORD PTR [ebp+0x8]
1005bc1b:	push   edi
1005bc1c:	push   DWORD PTR [ebp+0x10]
1005bc1f:	mov    edi,DWORD PTR [ebp+0xc]
1005bc22:	lea    ecx,[ebp-0x24]
1005bc25:	call   0x10044235
1005bc2a:	lea    eax,[ebp-0x24]
1005bc2d:	push   eax
1005bc2e:	xor    ebx,ebx
1005bc30:	push   ebx
1005bc31:	push   ebx
1005bc32:	push   ebx
1005bc33:	push   ebx
1005bc34:	push   edi
1005bc35:	lea    eax,[ebp-0x28]
1005bc38:	push   eax
1005bc39:	lea    eax,[ebp-0x10]
1005bc3c:	push   eax
1005bc3d:	call   0x1005cb4d
1005bc42:	mov    DWORD PTR [ebp-0x14],eax
1005bc45:	lea    eax,[ebp-0x10]
1005bc48:	push   esi
1005bc49:	push   eax
1005bc4a:	call   0x1005c0c9
1005bc4f:	add    esp,0x28
1005bc52:	test   BYTE PTR [ebp-0x14],0x3
1005bc56:	jne    0x1005bc83
1005bc58:	cmp    eax,0x1
1005bc5b:	jne    0x1005bc6e
1005bc5d:	cmp    BYTE PTR [ebp-0x18],bl
1005bc60:	je     0x1005bc69
1005bc62:	mov    eax,DWORD PTR [ebp-0x1c]
1005bc65:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bc69:	push   0x3
1005bc6b:	pop    eax
1005bc6c:	jmp    0x1005bc9d
1005bc6e:	cmp    eax,0x2
1005bc71:	jne    0x1005bc8f
1005bc73:	cmp    BYTE PTR [ebp-0x18],bl
1005bc76:	je     0x1005bc7f
1005bc78:	mov    eax,DWORD PTR [ebp-0x1c]
1005bc7b:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bc7f:	push   0x4
1005bc81:	jmp    0x1005bc6b
1005bc83:	test   BYTE PTR [ebp-0x14],0x1
1005bc87:	jne    0x1005bc73
1005bc89:	test   BYTE PTR [ebp-0x14],0x2
1005bc8d:	jne    0x1005bc5d
1005bc8f:	cmp    BYTE PTR [ebp-0x18],bl
1005bc92:	je     0x1005bc9b
1005bc94:	mov    eax,DWORD PTR [ebp-0x1c]
1005bc97:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bc9b:	xor    eax,eax
1005bc9d:	mov    ecx,DWORD PTR [ebp-0x4]
1005bca0:	pop    edi
1005bca1:	pop    esi
1005bca2:	xor    ecx,ebp
1005bca4:	pop    ebx
1005bca5:	call   0x10041d97
1005bcaa:	leave  
1005bcab:	ret    
1005bcac:	push   ebp
1005bcad:	mov    ebp,esp
1005bcaf:	sub    esp,0x28
1005bcb2:	mov    eax,ds:0x1007d030
1005bcb7:	xor    eax,ebp
1005bcb9:	mov    DWORD PTR [ebp-0x4],eax
1005bcbc:	push   ebx
1005bcbd:	push   esi
1005bcbe:	mov    esi,DWORD PTR [ebp+0x8]
1005bcc1:	push   edi
1005bcc2:	push   DWORD PTR [ebp+0x10]
1005bcc5:	mov    edi,DWORD PTR [ebp+0xc]
1005bcc8:	lea    ecx,[ebp-0x24]
1005bccb:	call   0x10044235
1005bcd0:	lea    eax,[ebp-0x24]
1005bcd3:	push   eax
1005bcd4:	xor    ebx,ebx
1005bcd6:	push   ebx
1005bcd7:	push   ebx
1005bcd8:	push   ebx
1005bcd9:	push   ebx
1005bcda:	push   edi
1005bcdb:	lea    eax,[ebp-0x28]
1005bcde:	push   eax
1005bcdf:	lea    eax,[ebp-0x10]
1005bce2:	push   eax
1005bce3:	call   0x1005cb4d
1005bce8:	mov    DWORD PTR [ebp-0x14],eax
1005bceb:	lea    eax,[ebp-0x10]
1005bcee:	push   esi
1005bcef:	push   eax
1005bcf0:	call   0x1005c60b
1005bcf5:	add    esp,0x28
1005bcf8:	test   BYTE PTR [ebp-0x14],0x3
1005bcfc:	jne    0x1005bd29
1005bcfe:	cmp    eax,0x1
1005bd01:	jne    0x1005bd14
1005bd03:	cmp    BYTE PTR [ebp-0x18],bl
1005bd06:	je     0x1005bd0f
1005bd08:	mov    eax,DWORD PTR [ebp-0x1c]
1005bd0b:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bd0f:	push   0x3
1005bd11:	pop    eax
1005bd12:	jmp    0x1005bd43
1005bd14:	cmp    eax,0x2
1005bd17:	jne    0x1005bd35
1005bd19:	cmp    BYTE PTR [ebp-0x18],bl
1005bd1c:	je     0x1005bd25
1005bd1e:	mov    eax,DWORD PTR [ebp-0x1c]
1005bd21:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bd25:	push   0x4
1005bd27:	jmp    0x1005bd11
1005bd29:	test   BYTE PTR [ebp-0x14],0x1
1005bd2d:	jne    0x1005bd19
1005bd2f:	test   BYTE PTR [ebp-0x14],0x2
1005bd33:	jne    0x1005bd03
1005bd35:	cmp    BYTE PTR [ebp-0x18],bl
1005bd38:	je     0x1005bd41
1005bd3a:	mov    eax,DWORD PTR [ebp-0x1c]
1005bd3d:	and    DWORD PTR [eax+0x70],0xfffffffd
1005bd41:	xor    eax,eax
1005bd43:	mov    ecx,DWORD PTR [ebp-0x4]
1005bd46:	pop    edi
1005bd47:	pop    esi
1005bd48:	xor    ecx,ebp
1005bd4a:	pop    ebx
1005bd4b:	call   0x10041d97
1005bd50:	leave  
1005bd51:	ret    
1005bd52:	push   ebp
1005bd53:	mov    ebp,esp
1005bd55:	mov    ecx,DWORD PTR [ebp+0x14]
1005bd58:	push   ebx
1005bd59:	push   esi
1005bd5a:	mov    esi,DWORD PTR [ebp+0x8]
1005bd5d:	xor    ebx,ebx
1005bd5f:	cmp    esi,ebx
1005bd61:	push   edi
1005bd62:	mov    edi,DWORD PTR [ecx+0xc]
1005bd65:	jne    0x1005bd85
1005bd67:	call   0x100458a5
1005bd6c:	push   0x16
1005bd6e:	pop    esi
1005bd6f:	mov    DWORD PTR [eax],esi
1005bd71:	push   ebx
1005bd72:	push   ebx
1005bd73:	push   ebx
1005bd74:	push   ebx
1005bd75:	push   ebx
1005bd76:	call   0x1004228c
1005bd7b:	add    esp,0x14
1005bd7e:	mov    eax,esi
1005bd80:	jmp    0x1005be0a
1005bd85:	cmp    DWORD PTR [ebp+0xc],ebx
1005bd88:	jbe    0x1005bd67
1005bd8a:	mov    edx,DWORD PTR [ebp+0x10]
1005bd8d:	cmp    edx,ebx
1005bd8f:	mov    BYTE PTR [esi],bl
1005bd91:	jle    0x1005bd97
1005bd93:	mov    eax,edx
1005bd95:	jmp    0x1005bd99
1005bd97:	xor    eax,eax
1005bd99:	inc    eax
1005bd9a:	cmp    DWORD PTR [ebp+0xc],eax
1005bd9d:	ja     0x1005bdad
1005bd9f:	call   0x100458a5
1005bda4:	push   0x22
1005bda6:	pop    ecx
1005bda7:	mov    DWORD PTR [eax],ecx
1005bda9:	mov    esi,ecx
1005bdab:	jmp    0x1005bd71
1005bdad:	cmp    edx,ebx
1005bdaf:	mov    BYTE PTR [esi],0x30
1005bdb2:	lea    eax,[esi+0x1]
1005bdb5:	jle    0x1005bdd1
1005bdb7:	mov    cl,BYTE PTR [edi]
1005bdb9:	cmp    cl,bl
1005bdbb:	je     0x1005bdc3
1005bdbd:	movsx  ecx,cl
1005bdc0:	inc    edi
1005bdc1:	jmp    0x1005bdc6
1005bdc3:	push   0x30
1005bdc5:	pop    ecx
1005bdc6:	mov    BYTE PTR [eax],cl
1005bdc8:	inc    eax
1005bdc9:	dec    edx
1005bdca:	cmp    edx,ebx
1005bdcc:	jg     0x1005bdb7
1005bdce:	mov    ecx,DWORD PTR [ebp+0x14]
1005bdd1:	cmp    edx,ebx
1005bdd3:	mov    BYTE PTR [eax],bl
1005bdd5:	jl     0x1005bde9
1005bdd7:	cmp    BYTE PTR [edi],0x35
1005bdda:	jl     0x1005bde9
1005bddc:	jmp    0x1005bde1
1005bdde:	mov    BYTE PTR [eax],0x30
1005bde1:	dec    eax
1005bde2:	cmp    BYTE PTR [eax],0x39
1005bde5:	je     0x1005bdde
1005bde7:	inc    BYTE PTR [eax]
1005bde9:	cmp    BYTE PTR [esi],0x31
1005bdec:	jne    0x1005bdf3
1005bdee:	inc    DWORD PTR [ecx+0x4]
1005bdf1:	jmp    0x1005be08
1005bdf3:	lea    edi,[esi+0x1]
1005bdf6:	push   edi
1005bdf7:	call   0x10041f10
1005bdfc:	inc    eax
1005bdfd:	push   eax
1005bdfe:	push   edi
1005bdff:	push   esi
1005be00:	call   0x10044410
1005be05:	add    esp,0x10
1005be08:	xor    eax,eax
1005be0a:	pop    edi
1005be0b:	pop    esi
1005be0c:	pop    ebx
1005be0d:	pop    ebp
1005be0e:	ret    
1005be0f:	push   ebp
1005be10:	mov    ebp,esp
1005be12:	push   ecx
1005be13:	mov    edx,DWORD PTR [ebp+0xc]
1005be16:	movzx  eax,WORD PTR [edx+0x6]
1005be1a:	push   ebx
1005be1b:	mov    ecx,eax
1005be1d:	push   esi
1005be1e:	push   edi
1005be1f:	shr    ecx,0x4
1005be22:	and    eax,0x8000
1005be27:	mov    edi,0x7ff
1005be2c:	and    ecx,edi
1005be2e:	mov    DWORD PTR [ebp+0xc],eax
1005be31:	mov    eax,DWORD PTR [edx+0x4]
1005be34:	mov    edx,DWORD PTR [edx]
1005be36:	movzx  ebx,cx
1005be39:	mov    esi,0x80000000
1005be3e:	and    eax,0xfffff
1005be43:	test   ebx,ebx
1005be45:	mov    DWORD PTR [ebp-0x4],esi
1005be48:	je     0x1005be5d
1005be4a:	cmp    ebx,edi
1005be4c:	je     0x1005be56
1005be4e:	add    ecx,0x3c00
1005be54:	jmp    0x1005be7e
1005be56:	mov    edi,0x7fff
1005be5b:	jmp    0x1005be81
1005be5d:	xor    ebx,ebx
1005be5f:	cmp    eax,ebx
1005be61:	jne    0x1005be75
1005be63:	cmp    edx,ebx
1005be65:	jne    0x1005be75
1005be67:	mov    eax,DWORD PTR [ebp+0x8]
1005be6a:	mov    cx,WORD PTR [ebp+0xc]
1005be6e:	mov    DWORD PTR [eax+0x4],ebx
1005be71:	mov    DWORD PTR [eax],ebx
1005be73:	jmp    0x1005bec1
1005be75:	add    ecx,0x3c01
1005be7b:	mov    DWORD PTR [ebp-0x4],ebx
1005be7e:	movzx  edi,cx
1005be81:	mov    ecx,edx
1005be83:	shr    ecx,0x15
1005be86:	shl    eax,0xb
1005be89:	or     ecx,eax
1005be8b:	or     ecx,DWORD PTR [ebp-0x4]
1005be8e:	mov    eax,DWORD PTR [ebp+0x8]
1005be91:	shl    edx,0xb
1005be94:	test   esi,ecx
1005be96:	mov    DWORD PTR [eax+0x4],ecx
1005be99:	mov    DWORD PTR [eax],edx
1005be9b:	jne    0x1005bebc
1005be9d:	mov    ecx,DWORD PTR [eax]
1005be9f:	mov    edx,DWORD PTR [eax+0x4]
1005bea2:	mov    ebx,ecx
1005bea4:	add    edx,edx
1005bea6:	shr    ebx,0x1f
1005bea9:	or     edx,ebx
1005beab:	add    ecx,ecx
1005bead:	add    edi,0xffff
1005beb3:	test   esi,edx
1005beb5:	mov    DWORD PTR [eax+0x4],edx
1005beb8:	mov    DWORD PTR [eax],ecx
1005beba:	je     0x1005be9d
1005bebc:	mov    ecx,DWORD PTR [ebp+0xc]
1005bebf:	or     ecx,edi
1005bec1:	pop    edi
1005bec2:	pop    esi
1005bec3:	mov    WORD PTR [eax+0x8],cx
1005bec7:	pop    ebx
1005bec8:	leave  
1005bec9:	ret    
1005beca:	push   ebp
1005becb:	mov    ebp,esp
1005becd:	sub    esp,0x30
1005bed0:	mov    eax,ds:0x1007d030
1005bed5:	xor    eax,ebp
1005bed7:	mov    DWORD PTR [ebp-0x4],eax
1005beda:	mov    eax,DWORD PTR [ebp+0x14]
1005bedd:	push   ebx
1005bede:	mov    ebx,DWORD PTR [ebp+0x10]
1005bee1:	push   esi
1005bee2:	mov    DWORD PTR [ebp-0x30],eax
1005bee5:	push   edi
1005bee6:	lea    eax,[ebp+0x8]
1005bee9:	push   eax
1005beea:	lea    eax,[ebp-0x10]
1005beed:	push   eax
1005beee:	call   0x1005be0f
1005bef3:	pop    ecx
1005bef4:	pop    ecx
1005bef5:	lea    eax,[ebp-0x2c]
1005bef8:	push   eax
1005bef9:	push   0x0
1005befb:	push   0x11
1005befd:	sub    esp,0xc
1005bf00:	lea    esi,[ebp-0x10]
1005bf03:	mov    edi,esp
1005bf05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005bf06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005bf07:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
1005bf09:	call   0x1005d211
1005bf0e:	mov    esi,DWORD PTR [ebp-0x30]
1005bf11:	mov    DWORD PTR [ebx+0x8],eax
1005bf14:	movsx  eax,BYTE PTR [ebp-0x2a]
1005bf18:	mov    DWORD PTR [ebx],eax
1005bf1a:	movsx  eax,WORD PTR [ebp-0x2c]
1005bf1e:	mov    DWORD PTR [ebx+0x4],eax
1005bf21:	lea    eax,[ebp-0x28]
1005bf24:	push   eax
1005bf25:	push   DWORD PTR [ebp+0x18]
1005bf28:	push   esi
1005bf29:	call   0x100458e9
1005bf2e:	add    esp,0x24
1005bf31:	test   eax,eax
1005bf33:	je     0x1005bf44
1005bf35:	xor    eax,eax
1005bf37:	push   eax
1005bf38:	push   eax
1005bf39:	push   eax
1005bf3a:	push   eax
1005bf3b:	push   eax
1005bf3c:	call   0x10042190
1005bf41:	add    esp,0x14
1005bf44:	mov    ecx,DWORD PTR [ebp-0x4]
1005bf47:	pop    edi
1005bf48:	mov    DWORD PTR [ebx+0xc],esi
1005bf4b:	pop    esi
1005bf4c:	mov    eax,ebx
1005bf4e:	xor    ecx,ebp
1005bf50:	pop    ebx
1005bf51:	call   0x10041d97
1005bf56:	leave  
1005bf57:	ret    
1005bf58:	int3   
1005bf59:	int3   
1005bf5a:	int3   
1005bf5b:	int3   
1005bf5c:	int3   
1005bf5d:	int3   
1005bf5e:	int3   
1005bf5f:	int3   
1005bf60:	push   edi
1005bf61:	push   esi
1005bf62:	push   ebp
1005bf63:	xor    edi,edi
1005bf65:	xor    ebp,ebp
1005bf67:	mov    eax,DWORD PTR [esp+0x14]
1005bf6b:	or     eax,eax
1005bf6d:	jge    0x1005bf84
1005bf6f:	inc    edi
1005bf70:	inc    ebp
1005bf71:	mov    edx,DWORD PTR [esp+0x10]
1005bf75:	neg    eax
1005bf77:	neg    edx
1005bf79:	sbb    eax,0x0
1005bf7c:	mov    DWORD PTR [esp+0x14],eax
1005bf80:	mov    DWORD PTR [esp+0x10],edx
1005bf84:	mov    eax,DWORD PTR [esp+0x1c]
1005bf88:	or     eax,eax
1005bf8a:	jge    0x1005bfa0
1005bf8c:	inc    edi
1005bf8d:	mov    edx,DWORD PTR [esp+0x18]
1005bf91:	neg    eax
1005bf93:	neg    edx
1005bf95:	sbb    eax,0x0
1005bf98:	mov    DWORD PTR [esp+0x1c],eax
1005bf9c:	mov    DWORD PTR [esp+0x18],edx
1005bfa0:	or     eax,eax
1005bfa2:	jne    0x1005bfcc
1005bfa4:	mov    ecx,DWORD PTR [esp+0x18]
1005bfa8:	mov    eax,DWORD PTR [esp+0x14]
1005bfac:	xor    edx,edx
1005bfae:	div    ecx
1005bfb0:	mov    ebx,eax
1005bfb2:	mov    eax,DWORD PTR [esp+0x10]
1005bfb6:	div    ecx
1005bfb8:	mov    esi,eax
1005bfba:	mov    eax,ebx
1005bfbc:	mul    DWORD PTR [esp+0x18]
1005bfc0:	mov    ecx,eax
1005bfc2:	mov    eax,esi
1005bfc4:	mul    DWORD PTR [esp+0x18]
1005bfc8:	add    edx,ecx
1005bfca:	jmp    0x1005c013
1005bfcc:	mov    ebx,eax
1005bfce:	mov    ecx,DWORD PTR [esp+0x18]
1005bfd2:	mov    edx,DWORD PTR [esp+0x14]
1005bfd6:	mov    eax,DWORD PTR [esp+0x10]
1005bfda:	shr    ebx,1
1005bfdc:	rcr    ecx,1
1005bfde:	shr    edx,1
1005bfe0:	rcr    eax,1
1005bfe2:	or     ebx,ebx
1005bfe4:	jne    0x1005bfda
1005bfe6:	div    ecx
1005bfe8:	mov    esi,eax
1005bfea:	mul    DWORD PTR [esp+0x1c]
1005bfee:	mov    ecx,eax
1005bff0:	mov    eax,DWORD PTR [esp+0x18]
1005bff4:	mul    esi
1005bff6:	add    edx,ecx
1005bff8:	jb     0x1005c008
1005bffa:	cmp    edx,DWORD PTR [esp+0x14]
1005bffe:	ja     0x1005c008
1005c000:	jb     0x1005c011
1005c002:	cmp    eax,DWORD PTR [esp+0x10]
1005c006:	jbe    0x1005c011
1005c008:	dec    esi
1005c009:	sub    eax,DWORD PTR [esp+0x18]
1005c00d:	sbb    edx,DWORD PTR [esp+0x1c]
1005c011:	xor    ebx,ebx
1005c013:	sub    eax,DWORD PTR [esp+0x10]
1005c017:	sbb    edx,DWORD PTR [esp+0x14]
1005c01b:	dec    ebp
1005c01c:	jns    0x1005c025
1005c01e:	neg    edx
1005c020:	neg    eax
1005c022:	sbb    edx,0x0
1005c025:	mov    ecx,edx
1005c027:	mov    edx,ebx
1005c029:	mov    ebx,ecx
1005c02b:	mov    ecx,eax
1005c02d:	mov    eax,esi
1005c02f:	dec    edi
1005c030:	jne    0x1005c039
1005c032:	neg    edx
1005c034:	neg    eax
1005c036:	sbb    edx,0x0
1005c039:	pop    ebp
1005c03a:	pop    esi
1005c03b:	pop    edi
1005c03c:	ret    0x10
1005c03f:	int3   
1005c040:	cmp    cl,0x40
1005c043:	jae    0x1005c05a
1005c045:	cmp    cl,0x20
1005c048:	jae    0x1005c050
1005c04a:	shrd   eax,edx,cl
1005c04d:	shr    edx,cl
1005c04f:	ret    
1005c050:	mov    eax,edx
1005c052:	xor    edx,edx
1005c054:	and    cl,0x1f
1005c057:	shr    eax,cl
1005c059:	ret    
1005c05a:	xor    eax,eax
1005c05c:	xor    edx,edx
1005c05e:	ret    
1005c05f:	push   ebp
1005c060:	mov    ebp,esp
1005c062:	mov    eax,DWORD PTR [ebp+0x10]
1005c065:	mov    ecx,DWORD PTR [ebp+0xc]
1005c068:	and    eax,0xfff7ffff
1005c06d:	and    ecx,eax
1005c06f:	test   ecx,0xfcf0fce0
1005c075:	push   esi
1005c076:	je     0x1005c0a9
1005c078:	push   edi
1005c079:	mov    edi,DWORD PTR [ebp+0x8]
1005c07c:	xor    esi,esi
1005c07e:	cmp    edi,esi
1005c080:	je     0x1005c08d
1005c082:	push   esi
1005c083:	push   esi
1005c084:	call   0x1005dc07
1005c089:	pop    ecx
1005c08a:	pop    ecx
1005c08b:	mov    DWORD PTR [edi],eax
1005c08d:	call   0x100458a5
1005c092:	push   0x16
1005c094:	pop    edi
1005c095:	push   esi
1005c096:	push   esi
1005c097:	push   esi
1005c098:	push   esi
1005c099:	push   esi
1005c09a:	mov    DWORD PTR [eax],edi
1005c09c:	call   0x1004228c
1005c0a1:	add    esp,0x14
1005c0a4:	mov    eax,edi
1005c0a6:	pop    edi
1005c0a7:	jmp    0x1005c0c6
1005c0a9:	mov    esi,DWORD PTR [ebp+0x8]
1005c0ac:	test   esi,esi
1005c0ae:	push   eax
1005c0af:	push   DWORD PTR [ebp+0xc]
1005c0b2:	je     0x1005c0bd
1005c0b4:	call   0x1005dc07
1005c0b9:	mov    DWORD PTR [esi],eax
1005c0bb:	jmp    0x1005c0c2
1005c0bd:	call   0x1005dc07
1005c0c2:	pop    ecx
1005c0c3:	pop    ecx
1005c0c4:	xor    eax,eax
1005c0c6:	pop    esi
1005c0c7:	pop    ebp
1005c0c8:	ret    
1005c0c9:	push   ebp
1005c0ca:	mov    ebp,esp
1005c0cc:	sub    esp,0x2c
1005c0cf:	mov    eax,DWORD PTR [ebp+0x8]
1005c0d2:	movzx  ecx,WORD PTR [eax+0xa]
1005c0d6:	push   ebx
1005c0d7:	mov    ebx,ecx
1005c0d9:	and    ecx,0x8000
1005c0df:	mov    DWORD PTR [ebp-0x14],ecx
1005c0e2:	mov    ecx,DWORD PTR [eax+0x6]
1005c0e5:	mov    DWORD PTR [ebp-0x20],ecx
1005c0e8:	mov    ecx,DWORD PTR [eax+0x2]
1005c0eb:	movzx  eax,WORD PTR [eax]
1005c0ee:	and    ebx,0x7fff
1005c0f4:	sub    ebx,0x3fff
1005c0fa:	shl    eax,0x10
1005c0fd:	cmp    ebx,0xffffc001
1005c103:	push   edi
1005c104:	mov    DWORD PTR [ebp-0x1c],ecx
1005c107:	mov    DWORD PTR [ebp-0x18],eax
1005c10a:	jne    0x1005c133
1005c10c:	xor    ebx,ebx
1005c10e:	xor    eax,eax
1005c110:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
1005c114:	jne    0x1005c123
1005c116:	inc    eax
1005c117:	cmp    eax,0x3
1005c11a:	jl     0x1005c110
1005c11c:	xor    eax,eax
1005c11e:	jmp    0x1005c5c8
1005c123:	xor    eax,eax
1005c125:	lea    edi,[ebp-0x20]
1005c128:	stos   DWORD PTR es:[edi],eax
1005c129:	stos   DWORD PTR es:[edi],eax
1005c12a:	push   0x2
1005c12c:	stos   DWORD PTR es:[edi],eax
1005c12d:	pop    eax
1005c12e:	jmp    0x1005c5c8
1005c133:	and    DWORD PTR [ebp+0x8],0x0
1005c137:	push   esi
1005c138:	lea    esi,[ebp-0x20]
1005c13b:	lea    edi,[ebp-0x2c]
1005c13e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005c13f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005c140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005c141:	mov    esi,DWORD PTR ds:0x1007e1e8
1005c147:	dec    esi
1005c148:	lea    ecx,[esi+0x1]
1005c14b:	mov    eax,ecx
1005c14d:	cdq    
1005c14e:	and    edx,0x1f
1005c151:	add    eax,edx
1005c153:	sar    eax,0x5
1005c156:	mov    edx,ecx
1005c158:	and    edx,0x8000001f
1005c15e:	mov    DWORD PTR [ebp-0x10],ebx
1005c161:	mov    DWORD PTR [ebp-0xc],eax
1005c164:	jns    0x1005c16b
1005c166:	dec    edx
1005c167:	or     edx,0xffffffe0
1005c16a:	inc    edx
1005c16b:	lea    edi,[ebp+eax*4-0x20]
1005c16f:	push   0x1f
1005c171:	xor    eax,eax
1005c173:	pop    ecx
1005c174:	sub    ecx,edx
1005c176:	inc    eax
1005c177:	shl    eax,cl
1005c179:	mov    DWORD PTR [ebp-0x8],ecx
1005c17c:	test   DWORD PTR [edi],eax
1005c17e:	je     0x1005c211
1005c184:	mov    eax,DWORD PTR [ebp-0xc]
1005c187:	or     edx,0xffffffff
1005c18a:	shl    edx,cl
1005c18c:	not    edx
1005c18e:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005c192:	jmp    0x1005c199
1005c194:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005c199:	jne    0x1005c1a3
1005c19b:	inc    eax
1005c19c:	cmp    eax,0x3
1005c19f:	jl     0x1005c194
1005c1a1:	jmp    0x1005c211
1005c1a3:	mov    eax,esi
1005c1a5:	cdq    
1005c1a6:	push   0x1f
1005c1a8:	pop    ecx
1005c1a9:	and    edx,ecx
1005c1ab:	add    eax,edx
1005c1ad:	sar    eax,0x5
1005c1b0:	and    esi,0x8000001f
1005c1b6:	jns    0x1005c1bd
1005c1b8:	dec    esi
1005c1b9:	or     esi,0xffffffe0
1005c1bc:	inc    esi
1005c1bd:	and    DWORD PTR [ebp-0x4],0x0
1005c1c1:	sub    ecx,esi
1005c1c3:	xor    edx,edx
1005c1c5:	inc    edx
1005c1c6:	shl    edx,cl
1005c1c8:	lea    ecx,[ebp+eax*4-0x20]
1005c1cc:	mov    esi,DWORD PTR [ecx]
1005c1ce:	add    esi,edx
1005c1d0:	mov    DWORD PTR [ebp+0x8],esi
1005c1d3:	mov    esi,DWORD PTR [ecx]
1005c1d5:	cmp    DWORD PTR [ebp+0x8],esi
1005c1d8:	jb     0x1005c1fc
1005c1da:	cmp    DWORD PTR [ebp+0x8],edx
1005c1dd:	jmp    0x1005c1fa
1005c1df:	test   ecx,ecx
1005c1e1:	je     0x1005c20e
1005c1e3:	and    DWORD PTR [ebp-0x4],0x0
1005c1e7:	lea    ecx,[ebp+eax*4-0x20]
1005c1eb:	mov    edx,DWORD PTR [ecx]
1005c1ed:	lea    esi,[edx+0x1]
1005c1f0:	cmp    esi,edx
1005c1f2:	mov    DWORD PTR [ebp+0x8],esi
1005c1f5:	jb     0x1005c1fc
1005c1f7:	cmp    esi,0x1
1005c1fa:	jae    0x1005c203
1005c1fc:	mov    DWORD PTR [ebp-0x4],0x1
1005c203:	dec    eax
1005c204:	mov    edx,DWORD PTR [ebp+0x8]
1005c207:	mov    DWORD PTR [ecx],edx
1005c209:	mov    ecx,DWORD PTR [ebp-0x4]
1005c20c:	jns    0x1005c1df
1005c20e:	mov    DWORD PTR [ebp+0x8],ecx
1005c211:	mov    ecx,DWORD PTR [ebp-0x8]
1005c214:	or     eax,0xffffffff
1005c217:	shl    eax,cl
1005c219:	and    DWORD PTR [edi],eax
1005c21b:	mov    eax,DWORD PTR [ebp-0xc]
1005c21e:	inc    eax
1005c21f:	cmp    eax,0x3
1005c222:	jge    0x1005c231
1005c224:	push   0x3
1005c226:	pop    ecx
1005c227:	lea    edi,[ebp+eax*4-0x20]
1005c22b:	sub    ecx,eax
1005c22d:	xor    eax,eax
1005c22f:	rep stos DWORD PTR es:[edi],eax
1005c231:	cmp    DWORD PTR [ebp+0x8],0x0
1005c235:	je     0x1005c238
1005c237:	inc    ebx
1005c238:	mov    eax,ds:0x1007e1e4
1005c23d:	mov    ecx,eax
1005c23f:	sub    ecx,DWORD PTR ds:0x1007e1e8
1005c245:	cmp    ebx,ecx
1005c247:	jge    0x1005c256
1005c249:	xor    eax,eax
1005c24b:	lea    edi,[ebp-0x20]
1005c24e:	stos   DWORD PTR es:[edi],eax
1005c24f:	stos   DWORD PTR es:[edi],eax
1005c250:	stos   DWORD PTR es:[edi],eax
1005c251:	jmp    0x1005c463
1005c256:	cmp    ebx,eax
1005c258:	jg     0x1005c46d
1005c25e:	sub    eax,DWORD PTR [ebp-0x10]
1005c261:	lea    esi,[ebp-0x2c]
1005c264:	mov    ecx,eax
1005c266:	lea    edi,[ebp-0x20]
1005c269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005c26a:	cdq    
1005c26b:	and    edx,0x1f
1005c26e:	add    eax,edx
1005c270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005c271:	mov    edx,ecx
1005c273:	sar    eax,0x5
1005c276:	and    edx,0x8000001f
1005c27c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005c27d:	jns    0x1005c284
1005c27f:	dec    edx
1005c280:	or     edx,0xffffffe0
1005c283:	inc    edx
1005c284:	and    DWORD PTR [ebp-0xc],0x0
1005c288:	and    DWORD PTR [ebp+0x8],0x0
1005c28c:	or     edi,0xffffffff
1005c28f:	mov    ecx,edx
1005c291:	shl    edi,cl
1005c293:	mov    DWORD PTR [ebp-0x4],0x20
1005c29a:	sub    DWORD PTR [ebp-0x4],edx
1005c29d:	not    edi
1005c29f:	mov    ebx,DWORD PTR [ebp+0x8]
1005c2a2:	lea    ebx,[ebp+ebx*4-0x20]
1005c2a6:	mov    esi,DWORD PTR [ebx]
1005c2a8:	mov    ecx,esi
1005c2aa:	and    ecx,edi
1005c2ac:	mov    DWORD PTR [ebp-0x10],ecx
1005c2af:	mov    ecx,edx
1005c2b1:	shr    esi,cl
1005c2b3:	mov    ecx,DWORD PTR [ebp-0x4]
1005c2b6:	or     esi,DWORD PTR [ebp-0xc]
1005c2b9:	mov    DWORD PTR [ebx],esi
1005c2bb:	mov    esi,DWORD PTR [ebp-0x10]
1005c2be:	shl    esi,cl
1005c2c0:	inc    DWORD PTR [ebp+0x8]
1005c2c3:	cmp    DWORD PTR [ebp+0x8],0x3
1005c2c7:	mov    DWORD PTR [ebp-0xc],esi
1005c2ca:	jl     0x1005c29f
1005c2cc:	mov    esi,eax
1005c2ce:	push   0x2
1005c2d0:	shl    esi,0x2
1005c2d3:	lea    ecx,[ebp-0x18]
1005c2d6:	pop    edx
1005c2d7:	sub    ecx,esi
1005c2d9:	cmp    edx,eax
1005c2db:	jl     0x1005c2e5
1005c2dd:	mov    esi,DWORD PTR [ecx]
1005c2df:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005c2e3:	jmp    0x1005c2ea
1005c2e5:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005c2ea:	dec    edx
1005c2eb:	sub    ecx,0x4
1005c2ee:	test   edx,edx
1005c2f0:	jge    0x1005c2d9
1005c2f2:	mov    esi,DWORD PTR ds:0x1007e1e8
1005c2f8:	dec    esi
1005c2f9:	lea    ecx,[esi+0x1]
1005c2fc:	mov    eax,ecx
1005c2fe:	cdq    
1005c2ff:	and    edx,0x1f
1005c302:	add    eax,edx
1005c304:	sar    eax,0x5
1005c307:	mov    edx,ecx
1005c309:	and    edx,0x8000001f
1005c30f:	mov    DWORD PTR [ebp-0xc],eax
1005c312:	jns    0x1005c319
1005c314:	dec    edx
1005c315:	or     edx,0xffffffe0
1005c318:	inc    edx
1005c319:	push   0x1f
1005c31b:	pop    ecx
1005c31c:	sub    ecx,edx
1005c31e:	xor    edx,edx
1005c320:	inc    edx
1005c321:	shl    edx,cl
1005c323:	lea    ebx,[ebp+eax*4-0x20]
1005c327:	mov    DWORD PTR [ebp-0x10],ecx
1005c32a:	test   DWORD PTR [ebx],edx
1005c32c:	je     0x1005c3b4
1005c332:	or     edx,0xffffffff
1005c335:	shl    edx,cl
1005c337:	not    edx
1005c339:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005c33d:	jmp    0x1005c344
1005c33f:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005c344:	jne    0x1005c34e
1005c346:	inc    eax
1005c347:	cmp    eax,0x3
1005c34a:	jl     0x1005c33f
1005c34c:	jmp    0x1005c3b4
1005c34e:	mov    eax,esi
1005c350:	cdq    
1005c351:	push   0x1f
1005c353:	pop    ecx
1005c354:	and    edx,ecx
1005c356:	add    eax,edx
1005c358:	sar    eax,0x5
1005c35b:	and    esi,0x8000001f
1005c361:	jns    0x1005c368
1005c363:	dec    esi
1005c364:	or     esi,0xffffffe0
1005c367:	inc    esi
1005c368:	and    DWORD PTR [ebp+0x8],0x0
1005c36c:	xor    edx,edx
1005c36e:	sub    ecx,esi
1005c370:	inc    edx
1005c371:	shl    edx,cl
1005c373:	lea    ecx,[ebp+eax*4-0x20]
1005c377:	mov    esi,DWORD PTR [ecx]
1005c379:	lea    edi,[esi+edx*1]
1005c37c:	cmp    edi,esi
1005c37e:	jb     0x1005c384
1005c380:	cmp    edi,edx
1005c382:	jae    0x1005c38b
1005c384:	mov    DWORD PTR [ebp+0x8],0x1
1005c38b:	mov    DWORD PTR [ecx],edi
1005c38d:	mov    ecx,DWORD PTR [ebp+0x8]
1005c390:	jmp    0x1005c3b1
1005c392:	test   ecx,ecx
1005c394:	je     0x1005c3b4
1005c396:	lea    ecx,[ebp+eax*4-0x20]
1005c39a:	mov    edx,DWORD PTR [ecx]
1005c39c:	lea    esi,[edx+0x1]
1005c39f:	xor    edi,edi
1005c3a1:	cmp    esi,edx
1005c3a3:	jb     0x1005c3aa
1005c3a5:	cmp    esi,0x1
1005c3a8:	jae    0x1005c3ad
1005c3aa:	xor    edi,edi
1005c3ac:	inc    edi
1005c3ad:	mov    DWORD PTR [ecx],esi
1005c3af:	mov    ecx,edi
1005c3b1:	dec    eax
1005c3b2:	jns    0x1005c392
1005c3b4:	mov    ecx,DWORD PTR [ebp-0x10]
1005c3b7:	or     eax,0xffffffff
1005c3ba:	shl    eax,cl
1005c3bc:	and    DWORD PTR [ebx],eax
1005c3be:	mov    eax,DWORD PTR [ebp-0xc]
1005c3c1:	inc    eax
1005c3c2:	cmp    eax,0x3
1005c3c5:	jge    0x1005c3d4
1005c3c7:	push   0x3
1005c3c9:	pop    ecx
1005c3ca:	lea    edi,[ebp+eax*4-0x20]
1005c3ce:	sub    ecx,eax
1005c3d0:	xor    eax,eax
1005c3d2:	rep stos DWORD PTR es:[edi],eax
1005c3d4:	mov    ecx,DWORD PTR ds:0x1007e1ec
1005c3da:	inc    ecx
1005c3db:	mov    eax,ecx
1005c3dd:	cdq    
1005c3de:	and    edx,0x1f
1005c3e1:	add    eax,edx
1005c3e3:	mov    edx,ecx
1005c3e5:	sar    eax,0x5
1005c3e8:	and    edx,0x8000001f
1005c3ee:	jns    0x1005c3f5
1005c3f0:	dec    edx
1005c3f1:	or     edx,0xffffffe0
1005c3f4:	inc    edx
1005c3f5:	and    DWORD PTR [ebp-0xc],0x0
1005c3f9:	and    DWORD PTR [ebp+0x8],0x0
1005c3fd:	or     edi,0xffffffff
1005c400:	mov    ecx,edx
1005c402:	shl    edi,cl
1005c404:	mov    DWORD PTR [ebp-0x4],0x20
1005c40b:	sub    DWORD PTR [ebp-0x4],edx
1005c40e:	not    edi
1005c410:	mov    ebx,DWORD PTR [ebp+0x8]
1005c413:	lea    ebx,[ebp+ebx*4-0x20]
1005c417:	mov    esi,DWORD PTR [ebx]
1005c419:	mov    ecx,esi
1005c41b:	and    ecx,edi
1005c41d:	mov    DWORD PTR [ebp-0x10],ecx
1005c420:	mov    ecx,edx
1005c422:	shr    esi,cl
1005c424:	mov    ecx,DWORD PTR [ebp-0x4]
1005c427:	or     esi,DWORD PTR [ebp-0xc]
1005c42a:	mov    DWORD PTR [ebx],esi
1005c42c:	mov    esi,DWORD PTR [ebp-0x10]
1005c42f:	shl    esi,cl
1005c431:	inc    DWORD PTR [ebp+0x8]
1005c434:	cmp    DWORD PTR [ebp+0x8],0x3
1005c438:	mov    DWORD PTR [ebp-0xc],esi
1005c43b:	jl     0x1005c410
1005c43d:	mov    esi,eax
1005c43f:	push   0x2
1005c441:	shl    esi,0x2
1005c444:	lea    ecx,[ebp-0x18]
1005c447:	pop    edx
1005c448:	sub    ecx,esi
1005c44a:	cmp    edx,eax
1005c44c:	jl     0x1005c456
1005c44e:	mov    esi,DWORD PTR [ecx]
1005c450:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005c454:	jmp    0x1005c45b
1005c456:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005c45b:	dec    edx
1005c45c:	sub    ecx,0x4
1005c45f:	test   edx,edx
1005c461:	jge    0x1005c44a
1005c463:	push   0x2
1005c465:	xor    ebx,ebx
1005c467:	pop    eax
1005c468:	jmp    0x1005c5c7
1005c46d:	cmp    ebx,DWORD PTR ds:0x1007e1e0
1005c473:	mov    ecx,DWORD PTR ds:0x1007e1ec
1005c479:	jl     0x1005c52c
1005c47f:	xor    eax,eax
1005c481:	lea    edi,[ebp-0x20]
1005c484:	stos   DWORD PTR es:[edi],eax
1005c485:	stos   DWORD PTR es:[edi],eax
1005c486:	stos   DWORD PTR es:[edi],eax
1005c487:	or     DWORD PTR [ebp-0x20],0x80000000
1005c48e:	mov    eax,ecx
1005c490:	cdq    
1005c491:	and    edx,0x1f
1005c494:	add    eax,edx
1005c496:	mov    edx,ecx
1005c498:	sar    eax,0x5
1005c49b:	and    edx,0x8000001f
1005c4a1:	jns    0x1005c4a8
1005c4a3:	dec    edx
1005c4a4:	or     edx,0xffffffe0
1005c4a7:	inc    edx
1005c4a8:	and    DWORD PTR [ebp-0xc],0x0
1005c4ac:	and    DWORD PTR [ebp+0x8],0x0
1005c4b0:	or     edi,0xffffffff
1005c4b3:	mov    ecx,edx
1005c4b5:	shl    edi,cl
1005c4b7:	mov    DWORD PTR [ebp-0x4],0x20
1005c4be:	sub    DWORD PTR [ebp-0x4],edx
1005c4c1:	not    edi
1005c4c3:	mov    ebx,DWORD PTR [ebp+0x8]
1005c4c6:	lea    ebx,[ebp+ebx*4-0x20]
1005c4ca:	mov    esi,DWORD PTR [ebx]
1005c4cc:	mov    ecx,esi
1005c4ce:	and    ecx,edi
1005c4d0:	mov    DWORD PTR [ebp-0x10],ecx
1005c4d3:	mov    ecx,edx
1005c4d5:	shr    esi,cl
1005c4d7:	mov    ecx,DWORD PTR [ebp-0x4]
1005c4da:	or     esi,DWORD PTR [ebp-0xc]
1005c4dd:	mov    DWORD PTR [ebx],esi
1005c4df:	mov    esi,DWORD PTR [ebp-0x10]
1005c4e2:	shl    esi,cl
1005c4e4:	inc    DWORD PTR [ebp+0x8]
1005c4e7:	cmp    DWORD PTR [ebp+0x8],0x3
1005c4eb:	mov    DWORD PTR [ebp-0xc],esi
1005c4ee:	jl     0x1005c4c3
1005c4f0:	mov    esi,eax
1005c4f2:	push   0x2
1005c4f4:	shl    esi,0x2
1005c4f7:	lea    ecx,[ebp-0x18]
1005c4fa:	pop    edx
1005c4fb:	sub    ecx,esi
1005c4fd:	cmp    edx,eax
1005c4ff:	jl     0x1005c509
1005c501:	mov    esi,DWORD PTR [ecx]
1005c503:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005c507:	jmp    0x1005c50e
1005c509:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005c50e:	dec    edx
1005c50f:	sub    ecx,0x4
1005c512:	test   edx,edx
1005c514:	jge    0x1005c4fd
1005c516:	mov    eax,ds:0x1007e1e0
1005c51b:	mov    ecx,DWORD PTR ds:0x1007e1f4
1005c521:	lea    ebx,[ecx+eax*1]
1005c524:	xor    eax,eax
1005c526:	inc    eax
1005c527:	jmp    0x1005c5c7
1005c52c:	mov    eax,ds:0x1007e1f4
1005c531:	and    DWORD PTR [ebp-0x20],0x7fffffff
1005c538:	add    ebx,eax
1005c53a:	mov    eax,ecx
1005c53c:	cdq    
1005c53d:	and    edx,0x1f
1005c540:	add    eax,edx
1005c542:	mov    edx,ecx
1005c544:	sar    eax,0x5
1005c547:	and    edx,0x8000001f
1005c54d:	jns    0x1005c554
1005c54f:	dec    edx
1005c550:	or     edx,0xffffffe0
1005c553:	inc    edx
1005c554:	and    DWORD PTR [ebp-0xc],0x0
1005c558:	and    DWORD PTR [ebp+0x8],0x0
1005c55c:	or     esi,0xffffffff
1005c55f:	mov    ecx,edx
1005c561:	shl    esi,cl
1005c563:	mov    DWORD PTR [ebp-0x4],0x20
1005c56a:	sub    DWORD PTR [ebp-0x4],edx
1005c56d:	not    esi
1005c56f:	mov    ecx,DWORD PTR [ebp+0x8]
1005c572:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
1005c576:	mov    ecx,edi
1005c578:	and    ecx,esi
1005c57a:	mov    DWORD PTR [ebp-0x10],ecx
1005c57d:	mov    ecx,edx
1005c57f:	shr    edi,cl
1005c581:	mov    ecx,DWORD PTR [ebp+0x8]
1005c584:	or     edi,DWORD PTR [ebp-0xc]
1005c587:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
1005c58b:	mov    edi,DWORD PTR [ebp-0x10]
1005c58e:	mov    ecx,DWORD PTR [ebp-0x4]
1005c591:	shl    edi,cl
1005c593:	inc    DWORD PTR [ebp+0x8]
1005c596:	cmp    DWORD PTR [ebp+0x8],0x3
1005c59a:	mov    DWORD PTR [ebp-0xc],edi
1005c59d:	jl     0x1005c56f
1005c59f:	mov    esi,eax
1005c5a1:	push   0x2
1005c5a3:	shl    esi,0x2
1005c5a6:	lea    ecx,[ebp-0x18]
1005c5a9:	pop    edx
1005c5aa:	sub    ecx,esi
1005c5ac:	cmp    edx,eax
1005c5ae:	jl     0x1005c5b8
1005c5b0:	mov    esi,DWORD PTR [ecx]
1005c5b2:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005c5b6:	jmp    0x1005c5bd
1005c5b8:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005c5bd:	dec    edx
1005c5be:	sub    ecx,0x4
1005c5c1:	test   edx,edx
1005c5c3:	jge    0x1005c5ac
1005c5c5:	xor    eax,eax
1005c5c7:	pop    esi
1005c5c8:	push   0x1f
1005c5ca:	pop    ecx
1005c5cb:	sub    ecx,DWORD PTR ds:0x1007e1ec
1005c5d1:	shl    ebx,cl
1005c5d3:	mov    ecx,DWORD PTR [ebp-0x14]
1005c5d6:	neg    ecx
1005c5d8:	sbb    ecx,ecx
1005c5da:	and    ecx,0x80000000
1005c5e0:	or     ebx,ecx
1005c5e2:	mov    ecx,DWORD PTR ds:0x1007e1f0
1005c5e8:	or     ebx,DWORD PTR [ebp-0x20]
1005c5eb:	cmp    ecx,0x40
1005c5ee:	jne    0x1005c5fd
1005c5f0:	mov    ecx,DWORD PTR [ebp+0xc]
1005c5f3:	mov    edx,DWORD PTR [ebp-0x1c]
1005c5f6:	mov    DWORD PTR [ecx+0x4],ebx
1005c5f9:	mov    DWORD PTR [ecx],edx
1005c5fb:	jmp    0x1005c607
1005c5fd:	cmp    ecx,0x20
1005c600:	jne    0x1005c607
1005c602:	mov    ecx,DWORD PTR [ebp+0xc]
1005c605:	mov    DWORD PTR [ecx],ebx
1005c607:	pop    edi
1005c608:	pop    ebx
1005c609:	leave  
1005c60a:	ret    
1005c60b:	push   ebp
1005c60c:	mov    ebp,esp
1005c60e:	sub    esp,0x2c
1005c611:	mov    eax,DWORD PTR [ebp+0x8]
1005c614:	movzx  ecx,WORD PTR [eax+0xa]
1005c618:	push   ebx
1005c619:	mov    ebx,ecx
1005c61b:	and    ecx,0x8000
1005c621:	mov    DWORD PTR [ebp-0x14],ecx
1005c624:	mov    ecx,DWORD PTR [eax+0x6]
1005c627:	mov    DWORD PTR [ebp-0x20],ecx
1005c62a:	mov    ecx,DWORD PTR [eax+0x2]
1005c62d:	movzx  eax,WORD PTR [eax]
1005c630:	and    ebx,0x7fff
1005c636:	sub    ebx,0x3fff
1005c63c:	shl    eax,0x10
1005c63f:	cmp    ebx,0xffffc001
1005c645:	push   edi
1005c646:	mov    DWORD PTR [ebp-0x1c],ecx
1005c649:	mov    DWORD PTR [ebp-0x18],eax
1005c64c:	jne    0x1005c675
1005c64e:	xor    ebx,ebx
1005c650:	xor    eax,eax
1005c652:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
1005c656:	jne    0x1005c665
1005c658:	inc    eax
1005c659:	cmp    eax,0x3
1005c65c:	jl     0x1005c652
1005c65e:	xor    eax,eax
1005c660:	jmp    0x1005cb0a
1005c665:	xor    eax,eax
1005c667:	lea    edi,[ebp-0x20]
1005c66a:	stos   DWORD PTR es:[edi],eax
1005c66b:	stos   DWORD PTR es:[edi],eax
1005c66c:	push   0x2
1005c66e:	stos   DWORD PTR es:[edi],eax
1005c66f:	pop    eax
1005c670:	jmp    0x1005cb0a
1005c675:	and    DWORD PTR [ebp+0x8],0x0
1005c679:	push   esi
1005c67a:	lea    esi,[ebp-0x20]
1005c67d:	lea    edi,[ebp-0x2c]
1005c680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005c681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005c682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005c683:	mov    esi,DWORD PTR ds:0x1007e200
1005c689:	dec    esi
1005c68a:	lea    ecx,[esi+0x1]
1005c68d:	mov    eax,ecx
1005c68f:	cdq    
1005c690:	and    edx,0x1f
1005c693:	add    eax,edx
1005c695:	sar    eax,0x5
1005c698:	mov    edx,ecx
1005c69a:	and    edx,0x8000001f
1005c6a0:	mov    DWORD PTR [ebp-0x10],ebx
1005c6a3:	mov    DWORD PTR [ebp-0xc],eax
1005c6a6:	jns    0x1005c6ad
1005c6a8:	dec    edx
1005c6a9:	or     edx,0xffffffe0
1005c6ac:	inc    edx
1005c6ad:	lea    edi,[ebp+eax*4-0x20]
1005c6b1:	push   0x1f
1005c6b3:	xor    eax,eax
1005c6b5:	pop    ecx
1005c6b6:	sub    ecx,edx
1005c6b8:	inc    eax
1005c6b9:	shl    eax,cl
1005c6bb:	mov    DWORD PTR [ebp-0x8],ecx
1005c6be:	test   DWORD PTR [edi],eax
1005c6c0:	je     0x1005c753
1005c6c6:	mov    eax,DWORD PTR [ebp-0xc]
1005c6c9:	or     edx,0xffffffff
1005c6cc:	shl    edx,cl
1005c6ce:	not    edx
1005c6d0:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005c6d4:	jmp    0x1005c6db
1005c6d6:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005c6db:	jne    0x1005c6e5
1005c6dd:	inc    eax
1005c6de:	cmp    eax,0x3
1005c6e1:	jl     0x1005c6d6
1005c6e3:	jmp    0x1005c753
1005c6e5:	mov    eax,esi
1005c6e7:	cdq    
1005c6e8:	push   0x1f
1005c6ea:	pop    ecx
1005c6eb:	and    edx,ecx
1005c6ed:	add    eax,edx
1005c6ef:	sar    eax,0x5
1005c6f2:	and    esi,0x8000001f
1005c6f8:	jns    0x1005c6ff
1005c6fa:	dec    esi
1005c6fb:	or     esi,0xffffffe0
1005c6fe:	inc    esi
1005c6ff:	and    DWORD PTR [ebp-0x4],0x0
1005c703:	sub    ecx,esi
1005c705:	xor    edx,edx
1005c707:	inc    edx
1005c708:	shl    edx,cl
1005c70a:	lea    ecx,[ebp+eax*4-0x20]
1005c70e:	mov    esi,DWORD PTR [ecx]
1005c710:	add    esi,edx
1005c712:	mov    DWORD PTR [ebp+0x8],esi
1005c715:	mov    esi,DWORD PTR [ecx]
1005c717:	cmp    DWORD PTR [ebp+0x8],esi
1005c71a:	jb     0x1005c73e
1005c71c:	cmp    DWORD PTR [ebp+0x8],edx
1005c71f:	jmp    0x1005c73c
1005c721:	test   ecx,ecx
1005c723:	je     0x1005c750
1005c725:	and    DWORD PTR [ebp-0x4],0x0
1005c729:	lea    ecx,[ebp+eax*4-0x20]
1005c72d:	mov    edx,DWORD PTR [ecx]
1005c72f:	lea    esi,[edx+0x1]
1005c732:	cmp    esi,edx
1005c734:	mov    DWORD PTR [ebp+0x8],esi
1005c737:	jb     0x1005c73e
1005c739:	cmp    esi,0x1
1005c73c:	jae    0x1005c745
1005c73e:	mov    DWORD PTR [ebp-0x4],0x1
1005c745:	dec    eax
1005c746:	mov    edx,DWORD PTR [ebp+0x8]
1005c749:	mov    DWORD PTR [ecx],edx
1005c74b:	mov    ecx,DWORD PTR [ebp-0x4]
1005c74e:	jns    0x1005c721
1005c750:	mov    DWORD PTR [ebp+0x8],ecx
1005c753:	mov    ecx,DWORD PTR [ebp-0x8]
1005c756:	or     eax,0xffffffff
1005c759:	shl    eax,cl
1005c75b:	and    DWORD PTR [edi],eax
1005c75d:	mov    eax,DWORD PTR [ebp-0xc]
1005c760:	inc    eax
1005c761:	cmp    eax,0x3
1005c764:	jge    0x1005c773
1005c766:	push   0x3
1005c768:	pop    ecx
1005c769:	lea    edi,[ebp+eax*4-0x20]
1005c76d:	sub    ecx,eax
1005c76f:	xor    eax,eax
1005c771:	rep stos DWORD PTR es:[edi],eax
1005c773:	cmp    DWORD PTR [ebp+0x8],0x0
1005c777:	je     0x1005c77a
1005c779:	inc    ebx
1005c77a:	mov    eax,ds:0x1007e1fc
1005c77f:	mov    ecx,eax
1005c781:	sub    ecx,DWORD PTR ds:0x1007e200
1005c787:	cmp    ebx,ecx
1005c789:	jge    0x1005c798
1005c78b:	xor    eax,eax
1005c78d:	lea    edi,[ebp-0x20]
1005c790:	stos   DWORD PTR es:[edi],eax
1005c791:	stos   DWORD PTR es:[edi],eax
1005c792:	stos   DWORD PTR es:[edi],eax
1005c793:	jmp    0x1005c9a5
1005c798:	cmp    ebx,eax
1005c79a:	jg     0x1005c9af
1005c7a0:	sub    eax,DWORD PTR [ebp-0x10]
1005c7a3:	lea    esi,[ebp-0x2c]
1005c7a6:	mov    ecx,eax
1005c7a8:	lea    edi,[ebp-0x20]
1005c7ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005c7ac:	cdq    
1005c7ad:	and    edx,0x1f
1005c7b0:	add    eax,edx
1005c7b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005c7b3:	mov    edx,ecx
1005c7b5:	sar    eax,0x5
1005c7b8:	and    edx,0x8000001f
1005c7be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005c7bf:	jns    0x1005c7c6
1005c7c1:	dec    edx
1005c7c2:	or     edx,0xffffffe0
1005c7c5:	inc    edx
1005c7c6:	and    DWORD PTR [ebp-0xc],0x0
1005c7ca:	and    DWORD PTR [ebp+0x8],0x0
1005c7ce:	or     edi,0xffffffff
1005c7d1:	mov    ecx,edx
1005c7d3:	shl    edi,cl
1005c7d5:	mov    DWORD PTR [ebp-0x4],0x20
1005c7dc:	sub    DWORD PTR [ebp-0x4],edx
1005c7df:	not    edi
1005c7e1:	mov    ebx,DWORD PTR [ebp+0x8]
1005c7e4:	lea    ebx,[ebp+ebx*4-0x20]
1005c7e8:	mov    esi,DWORD PTR [ebx]
1005c7ea:	mov    ecx,esi
1005c7ec:	and    ecx,edi
1005c7ee:	mov    DWORD PTR [ebp-0x10],ecx
1005c7f1:	mov    ecx,edx
1005c7f3:	shr    esi,cl
1005c7f5:	mov    ecx,DWORD PTR [ebp-0x4]
1005c7f8:	or     esi,DWORD PTR [ebp-0xc]
1005c7fb:	mov    DWORD PTR [ebx],esi
1005c7fd:	mov    esi,DWORD PTR [ebp-0x10]
1005c800:	shl    esi,cl
1005c802:	inc    DWORD PTR [ebp+0x8]
1005c805:	cmp    DWORD PTR [ebp+0x8],0x3
1005c809:	mov    DWORD PTR [ebp-0xc],esi
1005c80c:	jl     0x1005c7e1
1005c80e:	mov    esi,eax
1005c810:	push   0x2
1005c812:	shl    esi,0x2
1005c815:	lea    ecx,[ebp-0x18]
1005c818:	pop    edx
1005c819:	sub    ecx,esi
1005c81b:	cmp    edx,eax
1005c81d:	jl     0x1005c827
1005c81f:	mov    esi,DWORD PTR [ecx]
1005c821:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005c825:	jmp    0x1005c82c
1005c827:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005c82c:	dec    edx
1005c82d:	sub    ecx,0x4
1005c830:	test   edx,edx
1005c832:	jge    0x1005c81b
1005c834:	mov    esi,DWORD PTR ds:0x1007e200
1005c83a:	dec    esi
1005c83b:	lea    ecx,[esi+0x1]
1005c83e:	mov    eax,ecx
1005c840:	cdq    
1005c841:	and    edx,0x1f
1005c844:	add    eax,edx
1005c846:	sar    eax,0x5
1005c849:	mov    edx,ecx
1005c84b:	and    edx,0x8000001f
1005c851:	mov    DWORD PTR [ebp-0xc],eax
1005c854:	jns    0x1005c85b
1005c856:	dec    edx
1005c857:	or     edx,0xffffffe0
1005c85a:	inc    edx
1005c85b:	push   0x1f
1005c85d:	pop    ecx
1005c85e:	sub    ecx,edx
1005c860:	xor    edx,edx
1005c862:	inc    edx
1005c863:	shl    edx,cl
1005c865:	lea    ebx,[ebp+eax*4-0x20]
1005c869:	mov    DWORD PTR [ebp-0x10],ecx
1005c86c:	test   DWORD PTR [ebx],edx
1005c86e:	je     0x1005c8f6
1005c874:	or     edx,0xffffffff
1005c877:	shl    edx,cl
1005c879:	not    edx
1005c87b:	test   DWORD PTR [ebp+eax*4-0x20],edx
1005c87f:	jmp    0x1005c886
1005c881:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
1005c886:	jne    0x1005c890
1005c888:	inc    eax
1005c889:	cmp    eax,0x3
1005c88c:	jl     0x1005c881
1005c88e:	jmp    0x1005c8f6
1005c890:	mov    eax,esi
1005c892:	cdq    
1005c893:	push   0x1f
1005c895:	pop    ecx
1005c896:	and    edx,ecx
1005c898:	add    eax,edx
1005c89a:	sar    eax,0x5
1005c89d:	and    esi,0x8000001f
1005c8a3:	jns    0x1005c8aa
1005c8a5:	dec    esi
1005c8a6:	or     esi,0xffffffe0
1005c8a9:	inc    esi
1005c8aa:	and    DWORD PTR [ebp+0x8],0x0
1005c8ae:	xor    edx,edx
1005c8b0:	sub    ecx,esi
1005c8b2:	inc    edx
1005c8b3:	shl    edx,cl
1005c8b5:	lea    ecx,[ebp+eax*4-0x20]
1005c8b9:	mov    esi,DWORD PTR [ecx]
1005c8bb:	lea    edi,[esi+edx*1]
1005c8be:	cmp    edi,esi
1005c8c0:	jb     0x1005c8c6
1005c8c2:	cmp    edi,edx
1005c8c4:	jae    0x1005c8cd
1005c8c6:	mov    DWORD PTR [ebp+0x8],0x1
1005c8cd:	mov    DWORD PTR [ecx],edi
1005c8cf:	mov    ecx,DWORD PTR [ebp+0x8]
1005c8d2:	jmp    0x1005c8f3
1005c8d4:	test   ecx,ecx
1005c8d6:	je     0x1005c8f6
1005c8d8:	lea    ecx,[ebp+eax*4-0x20]
1005c8dc:	mov    edx,DWORD PTR [ecx]
1005c8de:	lea    esi,[edx+0x1]
1005c8e1:	xor    edi,edi
1005c8e3:	cmp    esi,edx
1005c8e5:	jb     0x1005c8ec
1005c8e7:	cmp    esi,0x1
1005c8ea:	jae    0x1005c8ef
1005c8ec:	xor    edi,edi
1005c8ee:	inc    edi
1005c8ef:	mov    DWORD PTR [ecx],esi
1005c8f1:	mov    ecx,edi
1005c8f3:	dec    eax
1005c8f4:	jns    0x1005c8d4
1005c8f6:	mov    ecx,DWORD PTR [ebp-0x10]
1005c8f9:	or     eax,0xffffffff
1005c8fc:	shl    eax,cl
1005c8fe:	and    DWORD PTR [ebx],eax
1005c900:	mov    eax,DWORD PTR [ebp-0xc]
1005c903:	inc    eax
1005c904:	cmp    eax,0x3
1005c907:	jge    0x1005c916
1005c909:	push   0x3
1005c90b:	pop    ecx
1005c90c:	lea    edi,[ebp+eax*4-0x20]
1005c910:	sub    ecx,eax
1005c912:	xor    eax,eax
1005c914:	rep stos DWORD PTR es:[edi],eax
1005c916:	mov    ecx,DWORD PTR ds:0x1007e204
1005c91c:	inc    ecx
1005c91d:	mov    eax,ecx
1005c91f:	cdq    
1005c920:	and    edx,0x1f
1005c923:	add    eax,edx
1005c925:	mov    edx,ecx
1005c927:	sar    eax,0x5
1005c92a:	and    edx,0x8000001f
1005c930:	jns    0x1005c937
1005c932:	dec    edx
1005c933:	or     edx,0xffffffe0
1005c936:	inc    edx
1005c937:	and    DWORD PTR [ebp-0xc],0x0
1005c93b:	and    DWORD PTR [ebp+0x8],0x0
1005c93f:	or     edi,0xffffffff
1005c942:	mov    ecx,edx
1005c944:	shl    edi,cl
1005c946:	mov    DWORD PTR [ebp-0x4],0x20
1005c94d:	sub    DWORD PTR [ebp-0x4],edx
1005c950:	not    edi
1005c952:	mov    ebx,DWORD PTR [ebp+0x8]
1005c955:	lea    ebx,[ebp+ebx*4-0x20]
1005c959:	mov    esi,DWORD PTR [ebx]
1005c95b:	mov    ecx,esi
1005c95d:	and    ecx,edi
1005c95f:	mov    DWORD PTR [ebp-0x10],ecx
1005c962:	mov    ecx,edx
1005c964:	shr    esi,cl
1005c966:	mov    ecx,DWORD PTR [ebp-0x4]
1005c969:	or     esi,DWORD PTR [ebp-0xc]
1005c96c:	mov    DWORD PTR [ebx],esi
1005c96e:	mov    esi,DWORD PTR [ebp-0x10]
1005c971:	shl    esi,cl
1005c973:	inc    DWORD PTR [ebp+0x8]
1005c976:	cmp    DWORD PTR [ebp+0x8],0x3
1005c97a:	mov    DWORD PTR [ebp-0xc],esi
1005c97d:	jl     0x1005c952
1005c97f:	mov    esi,eax
1005c981:	push   0x2
1005c983:	shl    esi,0x2
1005c986:	lea    ecx,[ebp-0x18]
1005c989:	pop    edx
1005c98a:	sub    ecx,esi
1005c98c:	cmp    edx,eax
1005c98e:	jl     0x1005c998
1005c990:	mov    esi,DWORD PTR [ecx]
1005c992:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005c996:	jmp    0x1005c99d
1005c998:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005c99d:	dec    edx
1005c99e:	sub    ecx,0x4
1005c9a1:	test   edx,edx
1005c9a3:	jge    0x1005c98c
1005c9a5:	push   0x2
1005c9a7:	xor    ebx,ebx
1005c9a9:	pop    eax
1005c9aa:	jmp    0x1005cb09
1005c9af:	cmp    ebx,DWORD PTR ds:0x1007e1f8
1005c9b5:	mov    ecx,DWORD PTR ds:0x1007e204
1005c9bb:	jl     0x1005ca6e
1005c9c1:	xor    eax,eax
1005c9c3:	lea    edi,[ebp-0x20]
1005c9c6:	stos   DWORD PTR es:[edi],eax
1005c9c7:	stos   DWORD PTR es:[edi],eax
1005c9c8:	stos   DWORD PTR es:[edi],eax
1005c9c9:	or     DWORD PTR [ebp-0x20],0x80000000
1005c9d0:	mov    eax,ecx
1005c9d2:	cdq    
1005c9d3:	and    edx,0x1f
1005c9d6:	add    eax,edx
1005c9d8:	mov    edx,ecx
1005c9da:	sar    eax,0x5
1005c9dd:	and    edx,0x8000001f
1005c9e3:	jns    0x1005c9ea
1005c9e5:	dec    edx
1005c9e6:	or     edx,0xffffffe0
1005c9e9:	inc    edx
1005c9ea:	and    DWORD PTR [ebp-0xc],0x0
1005c9ee:	and    DWORD PTR [ebp+0x8],0x0
1005c9f2:	or     edi,0xffffffff
1005c9f5:	mov    ecx,edx
1005c9f7:	shl    edi,cl
1005c9f9:	mov    DWORD PTR [ebp-0x4],0x20
1005ca00:	sub    DWORD PTR [ebp-0x4],edx
1005ca03:	not    edi
1005ca05:	mov    ebx,DWORD PTR [ebp+0x8]
1005ca08:	lea    ebx,[ebp+ebx*4-0x20]
1005ca0c:	mov    esi,DWORD PTR [ebx]
1005ca0e:	mov    ecx,esi
1005ca10:	and    ecx,edi
1005ca12:	mov    DWORD PTR [ebp-0x10],ecx
1005ca15:	mov    ecx,edx
1005ca17:	shr    esi,cl
1005ca19:	mov    ecx,DWORD PTR [ebp-0x4]
1005ca1c:	or     esi,DWORD PTR [ebp-0xc]
1005ca1f:	mov    DWORD PTR [ebx],esi
1005ca21:	mov    esi,DWORD PTR [ebp-0x10]
1005ca24:	shl    esi,cl
1005ca26:	inc    DWORD PTR [ebp+0x8]
1005ca29:	cmp    DWORD PTR [ebp+0x8],0x3
1005ca2d:	mov    DWORD PTR [ebp-0xc],esi
1005ca30:	jl     0x1005ca05
1005ca32:	mov    esi,eax
1005ca34:	push   0x2
1005ca36:	shl    esi,0x2
1005ca39:	lea    ecx,[ebp-0x18]
1005ca3c:	pop    edx
1005ca3d:	sub    ecx,esi
1005ca3f:	cmp    edx,eax
1005ca41:	jl     0x1005ca4b
1005ca43:	mov    esi,DWORD PTR [ecx]
1005ca45:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005ca49:	jmp    0x1005ca50
1005ca4b:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005ca50:	dec    edx
1005ca51:	sub    ecx,0x4
1005ca54:	test   edx,edx
1005ca56:	jge    0x1005ca3f
1005ca58:	mov    eax,ds:0x1007e1f8
1005ca5d:	mov    ecx,DWORD PTR ds:0x1007e20c
1005ca63:	lea    ebx,[ecx+eax*1]
1005ca66:	xor    eax,eax
1005ca68:	inc    eax
1005ca69:	jmp    0x1005cb09
1005ca6e:	mov    eax,ds:0x1007e20c
1005ca73:	and    DWORD PTR [ebp-0x20],0x7fffffff
1005ca7a:	add    ebx,eax
1005ca7c:	mov    eax,ecx
1005ca7e:	cdq    
1005ca7f:	and    edx,0x1f
1005ca82:	add    eax,edx
1005ca84:	mov    edx,ecx
1005ca86:	sar    eax,0x5
1005ca89:	and    edx,0x8000001f
1005ca8f:	jns    0x1005ca96
1005ca91:	dec    edx
1005ca92:	or     edx,0xffffffe0
1005ca95:	inc    edx
1005ca96:	and    DWORD PTR [ebp-0xc],0x0
1005ca9a:	and    DWORD PTR [ebp+0x8],0x0
1005ca9e:	or     esi,0xffffffff
1005caa1:	mov    ecx,edx
1005caa3:	shl    esi,cl
1005caa5:	mov    DWORD PTR [ebp-0x4],0x20
1005caac:	sub    DWORD PTR [ebp-0x4],edx
1005caaf:	not    esi
1005cab1:	mov    ecx,DWORD PTR [ebp+0x8]
1005cab4:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
1005cab8:	mov    ecx,edi
1005caba:	and    ecx,esi
1005cabc:	mov    DWORD PTR [ebp-0x10],ecx
1005cabf:	mov    ecx,edx
1005cac1:	shr    edi,cl
1005cac3:	mov    ecx,DWORD PTR [ebp+0x8]
1005cac6:	or     edi,DWORD PTR [ebp-0xc]
1005cac9:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
1005cacd:	mov    edi,DWORD PTR [ebp-0x10]
1005cad0:	mov    ecx,DWORD PTR [ebp-0x4]
1005cad3:	shl    edi,cl
1005cad5:	inc    DWORD PTR [ebp+0x8]
1005cad8:	cmp    DWORD PTR [ebp+0x8],0x3
1005cadc:	mov    DWORD PTR [ebp-0xc],edi
1005cadf:	jl     0x1005cab1
1005cae1:	mov    esi,eax
1005cae3:	push   0x2
1005cae5:	shl    esi,0x2
1005cae8:	lea    ecx,[ebp-0x18]
1005caeb:	pop    edx
1005caec:	sub    ecx,esi
1005caee:	cmp    edx,eax
1005caf0:	jl     0x1005cafa
1005caf2:	mov    esi,DWORD PTR [ecx]
1005caf4:	mov    DWORD PTR [ebp+edx*4-0x20],esi
1005caf8:	jmp    0x1005caff
1005cafa:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1005caff:	dec    edx
1005cb00:	sub    ecx,0x4
1005cb03:	test   edx,edx
1005cb05:	jge    0x1005caee
1005cb07:	xor    eax,eax
1005cb09:	pop    esi
1005cb0a:	push   0x1f
1005cb0c:	pop    ecx
1005cb0d:	sub    ecx,DWORD PTR ds:0x1007e204
1005cb13:	shl    ebx,cl
1005cb15:	mov    ecx,DWORD PTR [ebp-0x14]
1005cb18:	neg    ecx
1005cb1a:	sbb    ecx,ecx
1005cb1c:	and    ecx,0x80000000
1005cb22:	or     ebx,ecx
1005cb24:	mov    ecx,DWORD PTR ds:0x1007e208
1005cb2a:	or     ebx,DWORD PTR [ebp-0x20]
1005cb2d:	cmp    ecx,0x40
1005cb30:	jne    0x1005cb3f
1005cb32:	mov    ecx,DWORD PTR [ebp+0xc]
1005cb35:	mov    edx,DWORD PTR [ebp-0x1c]
1005cb38:	mov    DWORD PTR [ecx+0x4],ebx
1005cb3b:	mov    DWORD PTR [ecx],edx
1005cb3d:	jmp    0x1005cb49
1005cb3f:	cmp    ecx,0x20
1005cb42:	jne    0x1005cb49
1005cb44:	mov    ecx,DWORD PTR [ebp+0xc]
1005cb47:	mov    DWORD PTR [ecx],ebx
1005cb49:	pop    edi
1005cb4a:	pop    ebx
1005cb4b:	leave  
1005cb4c:	ret    
1005cb4d:	push   ebp
1005cb4e:	mov    ebp,esp
1005cb50:	sub    esp,0x7c
1005cb53:	mov    eax,ds:0x1007d030
1005cb58:	xor    eax,ebp
1005cb5a:	mov    DWORD PTR [ebp-0x4],eax
1005cb5d:	mov    eax,DWORD PTR [ebp+0x8]
1005cb60:	push   ebx
1005cb61:	xor    ebx,ebx
1005cb63:	push   esi
1005cb64:	xor    esi,esi
1005cb66:	mov    DWORD PTR [ebp-0x7c],eax
1005cb69:	mov    eax,DWORD PTR [ebp+0xc]
1005cb6c:	inc    esi
1005cb6d:	xor    ecx,ecx
1005cb6f:	cmp    DWORD PTR [ebp+0x24],ebx
1005cb72:	push   edi
1005cb73:	mov    DWORD PTR [ebp-0x70],eax
1005cb76:	lea    edi,[ebp-0x20]
1005cb79:	mov    DWORD PTR [ebp-0x74],ebx
1005cb7c:	mov    DWORD PTR [ebp-0x68],esi
1005cb7f:	mov    DWORD PTR [ebp-0x4c],ebx
1005cb82:	mov    DWORD PTR [ebp-0x58],ebx
1005cb85:	mov    DWORD PTR [ebp-0x5c],ebx
1005cb88:	mov    DWORD PTR [ebp-0x60],ebx
1005cb8b:	mov    DWORD PTR [ebp-0x64],ebx
1005cb8e:	mov    DWORD PTR [ebp-0x50],ebx
1005cb91:	mov    DWORD PTR [ebp-0x6c],ebx
1005cb94:	jne    0x1005cbb5
1005cb96:	call   0x100458a5
1005cb9b:	push   ebx
1005cb9c:	push   ebx
1005cb9d:	push   ebx
1005cb9e:	push   ebx
1005cb9f:	push   ebx
1005cba0:	mov    DWORD PTR [eax],0x16
1005cba6:	call   0x1004228c
1005cbab:	add    esp,0x14
1005cbae:	xor    eax,eax
1005cbb0:	jmp    0x1005d1cf
1005cbb5:	mov    edx,DWORD PTR [ebp+0x10]
1005cbb8:	mov    DWORD PTR [ebp-0x54],edx
1005cbbb:	mov    al,BYTE PTR [edx]
1005cbbd:	cmp    al,0x20
1005cbbf:	je     0x1005cbcd
1005cbc1:	cmp    al,0x9
1005cbc3:	je     0x1005cbcd
1005cbc5:	cmp    al,0xa
1005cbc7:	je     0x1005cbcd
1005cbc9:	cmp    al,0xd
1005cbcb:	jne    0x1005cbd0
1005cbcd:	inc    edx
1005cbce:	jmp    0x1005cbbb
1005cbd0:	mov    bl,0x30
1005cbd2:	mov    al,BYTE PTR [edx]
1005cbd4:	inc    edx
1005cbd5:	cmp    ecx,0xb
1005cbd8:	ja     0x1005ce0d
1005cbde:	jmp    DWORD PTR [ecx*4+0x1005d1e1]
1005cbe5:	mov    cl,al
1005cbe7:	sub    cl,0x31
1005cbea:	cmp    cl,0x8
1005cbed:	ja     0x1005cbf5
1005cbef:	push   0x3
1005cbf1:	pop    ecx
1005cbf2:	dec    edx
1005cbf3:	jmp    0x1005cbd2
1005cbf5:	mov    ecx,DWORD PTR [ebp+0x24]
1005cbf8:	mov    ecx,DWORD PTR [ecx]
1005cbfa:	mov    ecx,DWORD PTR [ecx+0xbc]
1005cc00:	mov    ecx,DWORD PTR [ecx]
1005cc02:	cmp    al,BYTE PTR [ecx]
1005cc04:	jne    0x1005cc0b
1005cc06:	push   0x5
1005cc08:	pop    ecx
1005cc09:	jmp    0x1005cbd2
1005cc0b:	movsx  eax,al
1005cc0e:	sub    eax,0x2b
1005cc11:	je     0x1005cc30
1005cc13:	dec    eax
1005cc14:	dec    eax
1005cc15:	je     0x1005cc24
1005cc17:	sub    eax,0x3
1005cc1a:	jne    0x1005cdab
1005cc20:	mov    ecx,esi
1005cc22:	jmp    0x1005cbd2
1005cc24:	push   0x2
1005cc26:	pop    ecx
1005cc27:	mov    DWORD PTR [ebp-0x74],0x8000
1005cc2e:	jmp    0x1005cbd2
1005cc30:	and    DWORD PTR [ebp-0x74],0x0
1005cc34:	push   0x2
1005cc36:	pop    ecx
1005cc37:	jmp    0x1005cbd2
1005cc39:	mov    cl,al
1005cc3b:	sub    cl,0x31
1005cc3e:	cmp    cl,0x8
1005cc41:	mov    DWORD PTR [ebp-0x58],esi
1005cc44:	jbe    0x1005cbef
1005cc46:	mov    ecx,DWORD PTR [ebp+0x24]
1005cc49:	mov    ecx,DWORD PTR [ecx]
1005cc4b:	mov    ecx,DWORD PTR [ecx+0xbc]
1005cc51:	mov    ecx,DWORD PTR [ecx]
1005cc53:	cmp    al,BYTE PTR [ecx]
1005cc55:	jne    0x1005cc5b
1005cc57:	push   0x4
1005cc59:	jmp    0x1005cc08
1005cc5b:	cmp    al,0x2b
1005cc5d:	je     0x1005cc87
1005cc5f:	cmp    al,0x2d
1005cc61:	je     0x1005cc87
1005cc63:	cmp    al,bl
1005cc65:	je     0x1005cc20
1005cc67:	cmp    al,0x43
1005cc69:	jle    0x1005cdab
1005cc6f:	cmp    al,0x45
1005cc71:	jle    0x1005cc83
1005cc73:	cmp    al,0x63
1005cc75:	jle    0x1005cdab
1005cc7b:	cmp    al,0x65
1005cc7d:	jg     0x1005cdab
1005cc83:	push   0x6
1005cc85:	jmp    0x1005cc08
1005cc87:	dec    edx
1005cc88:	push   0xb
1005cc8a:	jmp    0x1005cc08
1005cc8f:	mov    cl,al
1005cc91:	sub    cl,0x31
1005cc94:	cmp    cl,0x8
1005cc97:	jbe    0x1005cbef
1005cc9d:	mov    ecx,DWORD PTR [ebp+0x24]
1005cca0:	mov    ecx,DWORD PTR [ecx]
1005cca2:	mov    ecx,DWORD PTR [ecx+0xbc]
1005cca8:	mov    ecx,DWORD PTR [ecx]
1005ccaa:	cmp    al,BYTE PTR [ecx]
1005ccac:	je     0x1005cc06
1005ccb2:	cmp    al,bl
1005ccb4:	je     0x1005cc20
1005ccba:	mov    edx,DWORD PTR [ebp-0x54]
1005ccbd:	jmp    0x1005cdd6
1005ccc2:	mov    DWORD PTR [ebp-0x58],esi
1005ccc5:	jmp    0x1005cce1
1005ccc7:	cmp    al,0x39
1005ccc9:	jg     0x1005cce5
1005cccb:	cmp    DWORD PTR [ebp-0x4c],0x19
1005cccf:	jae    0x1005ccdb
1005ccd1:	inc    DWORD PTR [ebp-0x4c]
1005ccd4:	sub    al,bl
1005ccd6:	mov    BYTE PTR [edi],al
1005ccd8:	inc    edi
1005ccd9:	jmp    0x1005ccde
1005ccdb:	inc    DWORD PTR [ebp-0x50]
1005ccde:	mov    al,BYTE PTR [edx]
1005cce0:	inc    edx
1005cce1:	cmp    al,bl
1005cce3:	jge    0x1005ccc7
1005cce5:	mov    ecx,DWORD PTR [ebp+0x24]
1005cce8:	mov    ecx,DWORD PTR [ecx]
1005ccea:	mov    ecx,DWORD PTR [ecx+0xbc]
1005ccf0:	mov    ecx,DWORD PTR [ecx]
1005ccf2:	cmp    al,BYTE PTR [ecx]
1005ccf4:	je     0x1005cc57
1005ccfa:	cmp    al,0x2b
1005ccfc:	je     0x1005cc87
1005ccfe:	cmp    al,0x2d
1005cd00:	je     0x1005cc87
1005cd02:	jmp    0x1005cc67
1005cd07:	cmp    DWORD PTR [ebp-0x4c],0x0
1005cd0b:	mov    DWORD PTR [ebp-0x58],esi
1005cd0e:	mov    DWORD PTR [ebp-0x5c],esi
1005cd11:	jne    0x1005cd39
1005cd13:	jmp    0x1005cd1b
1005cd15:	dec    DWORD PTR [ebp-0x50]
1005cd18:	mov    al,BYTE PTR [edx]
1005cd1a:	inc    edx
1005cd1b:	cmp    al,bl
1005cd1d:	je     0x1005cd15
1005cd1f:	jmp    0x1005cd39
1005cd21:	cmp    al,0x39
1005cd23:	jg     0x1005ccfa
1005cd25:	cmp    DWORD PTR [ebp-0x4c],0x19
1005cd29:	jae    0x1005cd36
1005cd2b:	inc    DWORD PTR [ebp-0x4c]
1005cd2e:	sub    al,bl
1005cd30:	mov    BYTE PTR [edi],al
1005cd32:	inc    edi
1005cd33:	dec    DWORD PTR [ebp-0x50]
1005cd36:	mov    al,BYTE PTR [edx]
1005cd38:	inc    edx
1005cd39:	cmp    al,bl
1005cd3b:	jge    0x1005cd21
1005cd3d:	jmp    0x1005ccfa
1005cd3f:	sub    al,bl
1005cd41:	cmp    al,0x9
1005cd43:	mov    DWORD PTR [ebp-0x5c],esi
1005cd46:	ja     0x1005ccba
1005cd4c:	push   0x4
1005cd4e:	jmp    0x1005cbf1
1005cd53:	lea    ecx,[edx-0x2]
1005cd56:	mov    DWORD PTR [ebp-0x54],ecx
1005cd59:	mov    cl,al
1005cd5b:	sub    cl,0x31
1005cd5e:	cmp    cl,0x8
1005cd61:	ja     0x1005cd6a
1005cd63:	push   0x9
1005cd65:	jmp    0x1005cbf1
1005cd6a:	movsx  eax,al
1005cd6d:	sub    eax,0x2b
1005cd70:	je     0x1005cd92
1005cd72:	dec    eax
1005cd73:	dec    eax
1005cd74:	je     0x1005cd86
1005cd76:	sub    eax,0x3
1005cd79:	jne    0x1005ccba
1005cd7f:	push   0x8
1005cd81:	jmp    0x1005cc08
1005cd86:	or     DWORD PTR [ebp-0x68],0xffffffff
1005cd8a:	push   0x7
1005cd8c:	pop    ecx
1005cd8d:	jmp    0x1005cbd2
1005cd92:	push   0x7
1005cd94:	jmp    0x1005cc08
1005cd99:	mov    DWORD PTR [ebp-0x60],esi
1005cd9c:	jmp    0x1005cda1
1005cd9e:	mov    al,BYTE PTR [edx]
1005cda0:	inc    edx
1005cda1:	cmp    al,bl
1005cda3:	je     0x1005cd9e
1005cda5:	sub    al,0x31
1005cda7:	cmp    al,0x8
1005cda9:	jbe    0x1005cd63
1005cdab:	dec    edx
1005cdac:	jmp    0x1005cdd6
1005cdae:	mov    cl,al
1005cdb0:	sub    cl,0x31
1005cdb3:	cmp    cl,0x8
1005cdb6:	jbe    0x1005cd63
1005cdb8:	cmp    al,bl
1005cdba:	jmp    0x1005cd79
1005cdbc:	cmp    DWORD PTR [ebp+0x20],0x0
1005cdc0:	je     0x1005ce09
1005cdc2:	movsx  eax,al
1005cdc5:	sub    eax,0x2b
1005cdc8:	lea    ecx,[edx-0x1]
1005cdcb:	mov    DWORD PTR [ebp-0x54],ecx
1005cdce:	je     0x1005cd92
1005cdd0:	dec    eax
1005cdd1:	dec    eax
1005cdd2:	je     0x1005cd86
1005cdd4:	mov    edx,ecx
1005cdd6:	cmp    DWORD PTR [ebp-0x58],0x0
1005cdda:	mov    eax,DWORD PTR [ebp-0x70]
1005cddd:	mov    DWORD PTR [eax],edx
1005cddf:	je     0x1005d18a
1005cde5:	push   0x18
1005cde7:	pop    eax
1005cde8:	cmp    DWORD PTR [ebp-0x4c],eax
1005cdeb:	jbe    0x1005cdfd
1005cded:	cmp    BYTE PTR [ebp-0x9],0x5
1005cdf1:	jl     0x1005cdf6
1005cdf3:	inc    BYTE PTR [ebp-0x9]
1005cdf6:	dec    edi
1005cdf7:	inc    DWORD PTR [ebp-0x50]
1005cdfa:	mov    DWORD PTR [ebp-0x4c],eax
1005cdfd:	cmp    DWORD PTR [ebp-0x4c],0x0
1005ce01:	jbe    0x1005d1b1
1005ce07:	jmp    0x1005ce62
1005ce09:	push   0xa
1005ce0b:	pop    ecx
1005ce0c:	dec    edx
1005ce0d:	cmp    ecx,0xa
1005ce10:	jne    0x1005cbd2
1005ce16:	jmp    0x1005cdd6
1005ce18:	mov    DWORD PTR [ebp-0x60],esi
1005ce1b:	xor    ecx,ecx
1005ce1d:	jmp    0x1005ce38
1005ce1f:	cmp    al,0x39
1005ce21:	jg     0x1005ce43
1005ce23:	imul   ecx,ecx,0xa
1005ce26:	movsx  esi,al
1005ce29:	lea    ecx,[ecx+esi*1-0x30]
1005ce2d:	cmp    ecx,0x1450
1005ce33:	jg     0x1005ce3e
1005ce35:	mov    al,BYTE PTR [edx]
1005ce37:	inc    edx
1005ce38:	cmp    al,bl
1005ce3a:	jge    0x1005ce1f
1005ce3c:	jmp    0x1005ce43
1005ce3e:	mov    ecx,0x1451
1005ce43:	mov    DWORD PTR [ebp-0x64],ecx
1005ce46:	jmp    0x1005ce53
1005ce48:	cmp    al,0x39
1005ce4a:	jg     0x1005cdab
1005ce50:	mov    al,BYTE PTR [edx]
1005ce52:	inc    edx
1005ce53:	cmp    al,bl
1005ce55:	jge    0x1005ce48
1005ce57:	jmp    0x1005cdab
1005ce5c:	dec    DWORD PTR [ebp-0x4c]
1005ce5f:	inc    DWORD PTR [ebp-0x50]
1005ce62:	dec    edi
1005ce63:	cmp    BYTE PTR [edi],0x0
1005ce66:	je     0x1005ce5c
1005ce68:	lea    eax,[ebp-0x3c]
1005ce6b:	push   eax
1005ce6c:	push   DWORD PTR [ebp-0x4c]
1005ce6f:	lea    eax,[ebp-0x20]
1005ce72:	push   eax
1005ce73:	call   0x1005df0a
1005ce78:	mov    eax,DWORD PTR [ebp-0x64]
1005ce7b:	xor    ecx,ecx
1005ce7d:	add    esp,0xc
1005ce80:	cmp    DWORD PTR [ebp-0x68],ecx
1005ce83:	jge    0x1005ce87
1005ce85:	neg    eax
1005ce87:	add    eax,DWORD PTR [ebp-0x50]
1005ce8a:	cmp    DWORD PTR [ebp-0x60],ecx
1005ce8d:	jne    0x1005ce92
1005ce8f:	add    eax,DWORD PTR [ebp+0x18]
1005ce92:	cmp    DWORD PTR [ebp-0x5c],ecx
1005ce95:	jne    0x1005ce9a
1005ce97:	sub    eax,DWORD PTR [ebp+0x1c]
1005ce9a:	cmp    eax,0x1450
1005ce9f:	jg     0x1005d193
1005cea5:	cmp    eax,0xffffebb0
1005ceaa:	jl     0x1005d1aa
1005ceb0:	mov    esi,0x1007e210
1005ceb5:	sub    esi,0x60
1005ceb8:	cmp    eax,ecx
1005ceba:	mov    DWORD PTR [ebp-0x54],eax
1005cebd:	je     0x1005d178
1005cec3:	jge    0x1005ced2
1005cec5:	neg    eax
1005cec7:	mov    esi,0x1007e370
1005cecc:	mov    DWORD PTR [ebp-0x54],eax
1005cecf:	sub    esi,0x60
1005ced2:	cmp    DWORD PTR [ebp+0x14],ecx
1005ced5:	jne    0x1005cedb
1005ced7:	mov    WORD PTR [ebp-0x3c],cx
1005cedb:	cmp    DWORD PTR [ebp-0x54],ecx
1005cede:	je     0x1005d178
1005cee4:	mov    eax,DWORD PTR [ebp-0x54]
1005cee7:	sar    DWORD PTR [ebp-0x54],0x3
1005ceeb:	add    esi,0x54
1005ceee:	and    eax,0x7
1005cef1:	test   eax,eax
1005cef3:	mov    DWORD PTR [ebp-0x4c],esi
1005cef6:	je     0x1005d16e
1005cefc:	imul   eax,eax,0xc
1005ceff:	add    eax,esi
1005cf01:	mov    ebx,eax
1005cf03:	cmp    WORD PTR [ebx],0x8000
1005cf08:	mov    DWORD PTR [ebp-0x70],ebx
1005cf0b:	jb     0x1005cf21
1005cf0d:	mov    esi,ebx
1005cf0f:	lea    edi,[ebp-0x48]
1005cf12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005cf13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005cf14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005cf15:	dec    DWORD PTR [ebp-0x46]
1005cf18:	mov    esi,DWORD PTR [ebp-0x4c]
1005cf1b:	lea    ebx,[ebp-0x48]
1005cf1e:	mov    DWORD PTR [ebp-0x70],ebx
1005cf21:	movzx  edx,WORD PTR [ebx+0xa]
1005cf25:	mov    ecx,DWORD PTR [ebp-0x32]
1005cf28:	xor    eax,eax
1005cf2a:	mov    DWORD PTR [ebp-0x50],eax
1005cf2d:	mov    DWORD PTR [ebp-0x2c],eax
1005cf30:	mov    DWORD PTR [ebp-0x28],eax
1005cf33:	mov    DWORD PTR [ebp-0x24],eax
1005cf36:	mov    eax,edx
1005cf38:	mov    edi,0x7fff
1005cf3d:	xor    eax,ecx
1005cf3f:	and    ecx,edi
1005cf41:	and    edx,edi
1005cf43:	and    eax,0x8000
1005cf48:	cmp    cx,0x7fff
1005cf4d:	lea    edi,[edx+ecx*1]
1005cf50:	movzx  edi,di
1005cf53:	jae    0x1005d154
1005cf59:	cmp    dx,0x7fff
1005cf5e:	jae    0x1005d154
1005cf64:	cmp    di,0xbffd
1005cf69:	ja     0x1005d154
1005cf6f:	cmp    di,0x3fbf
1005cf74:	ja     0x1005cf83
1005cf76:	xor    eax,eax
1005cf78:	mov    DWORD PTR [ebp-0x38],eax
1005cf7b:	mov    DWORD PTR [ebp-0x3c],eax
1005cf7e:	jmp    0x1005d16b
1005cf83:	test   cx,cx
1005cf86:	jne    0x1005cfa7
1005cf88:	inc    edi
1005cf89:	test   DWORD PTR [ebp-0x34],0x7fffffff
1005cf90:	jne    0x1005cfa7
1005cf92:	cmp    DWORD PTR [ebp-0x38],0x0
1005cf96:	jne    0x1005cfa7
1005cf98:	cmp    DWORD PTR [ebp-0x3c],0x0
1005cf9c:	jne    0x1005cfa7
1005cf9e:	and    WORD PTR [ebp-0x32],cx
1005cfa2:	jmp    0x1005d16e
1005cfa7:	xor    ecx,ecx
1005cfa9:	cmp    dx,cx
1005cfac:	jne    0x1005cfcf
1005cfae:	inc    edi
1005cfaf:	test   DWORD PTR [ebx+0x8],0x7fffffff
1005cfb6:	jne    0x1005cfcf
1005cfb8:	cmp    DWORD PTR [ebx+0x4],ecx
1005cfbb:	jne    0x1005cfcf
1005cfbd:	cmp    DWORD PTR [ebx],ecx
1005cfbf:	jne    0x1005cfcf
1005cfc1:	mov    DWORD PTR [ebp-0x34],ecx
1005cfc4:	mov    DWORD PTR [ebp-0x38],ecx
1005cfc7:	mov    DWORD PTR [ebp-0x3c],ecx
1005cfca:	jmp    0x1005d16e
1005cfcf:	and    DWORD PTR [ebp-0x68],ecx
1005cfd2:	lea    esi,[ebp-0x28]
1005cfd5:	mov    DWORD PTR [ebp-0x58],0x5
1005cfdc:	mov    ecx,DWORD PTR [ebp-0x68]
1005cfdf:	mov    edx,DWORD PTR [ebp-0x58]
1005cfe2:	add    ecx,ecx
1005cfe4:	test   edx,edx
1005cfe6:	mov    DWORD PTR [ebp-0x64],edx
1005cfe9:	jle    0x1005d040
1005cfeb:	lea    ecx,[ebp+ecx*1-0x3c]
1005cfef:	add    ebx,0x8
1005cff2:	mov    DWORD PTR [ebp-0x5c],ecx
1005cff5:	mov    DWORD PTR [ebp-0x60],ebx
1005cff8:	mov    ecx,DWORD PTR [ebp-0x60]
1005cffb:	mov    edx,DWORD PTR [ebp-0x5c]
1005cffe:	movzx  edx,WORD PTR [edx]
1005d001:	movzx  ecx,WORD PTR [ecx]
1005d004:	and    DWORD PTR [ebp-0x78],0x0
1005d008:	imul   ecx,edx
1005d00b:	mov    edx,DWORD PTR [esi-0x4]
1005d00e:	lea    ebx,[edx+ecx*1]
1005d011:	cmp    ebx,edx
1005d013:	jb     0x1005d019
1005d015:	cmp    ebx,ecx
1005d017:	jae    0x1005d020
1005d019:	mov    DWORD PTR [ebp-0x78],0x1
1005d020:	cmp    DWORD PTR [ebp-0x78],0x0
1005d024:	mov    DWORD PTR [esi-0x4],ebx
1005d027:	je     0x1005d02c
1005d029:	inc    WORD PTR [esi]
1005d02c:	add    DWORD PTR [ebp-0x5c],0x2
1005d030:	sub    DWORD PTR [ebp-0x60],0x2
1005d034:	dec    DWORD PTR [ebp-0x64]
1005d037:	cmp    DWORD PTR [ebp-0x64],0x0
1005d03b:	jg     0x1005cff8
1005d03d:	mov    ebx,DWORD PTR [ebp-0x70]
1005d040:	inc    esi
1005d041:	inc    esi
1005d042:	inc    DWORD PTR [ebp-0x68]
1005d045:	dec    DWORD PTR [ebp-0x58]
1005d048:	cmp    DWORD PTR [ebp-0x58],0x0
1005d04c:	jg     0x1005cfdc
1005d04e:	add    edi,0xc002
1005d054:	test   di,di
1005d057:	jle    0x1005d094
1005d059:	test   DWORD PTR [ebp-0x24],0x80000000
1005d060:	jne    0x1005d08f
1005d062:	mov    esi,DWORD PTR [ebp-0x28]
1005d065:	mov    ecx,DWORD PTR [ebp-0x2c]
1005d068:	shl    DWORD PTR [ebp-0x2c],1
1005d06b:	shr    ecx,0x1f
1005d06e:	mov    edx,esi
1005d070:	add    esi,esi
1005d072:	or     esi,ecx
1005d074:	mov    ecx,DWORD PTR [ebp-0x24]
1005d077:	shr    edx,0x1f
1005d07a:	add    ecx,ecx
1005d07c:	or     ecx,edx
1005d07e:	add    edi,0xffff
1005d084:	test   di,di
1005d087:	mov    DWORD PTR [ebp-0x28],esi
1005d08a:	mov    DWORD PTR [ebp-0x24],ecx
1005d08d:	jg     0x1005d059
1005d08f:	test   di,di
1005d092:	jg     0x1005d0e2
1005d094:	add    edi,0xffff
1005d09a:	test   di,di
1005d09d:	jge    0x1005d0e2
1005d09f:	mov    ecx,edi
1005d0a1:	neg    ecx
1005d0a3:	movzx  esi,cx
1005d0a6:	add    edi,esi
1005d0a8:	test   BYTE PTR [ebp-0x2c],0x1
1005d0ac:	je     0x1005d0b1
1005d0ae:	inc    DWORD PTR [ebp-0x50]
1005d0b1:	mov    ecx,DWORD PTR [ebp-0x24]
1005d0b4:	mov    ebx,DWORD PTR [ebp-0x28]
1005d0b7:	mov    edx,DWORD PTR [ebp-0x28]
1005d0ba:	shr    DWORD PTR [ebp-0x24],1
1005d0bd:	shl    ecx,0x1f
1005d0c0:	shr    ebx,1
1005d0c2:	or     ebx,ecx
1005d0c4:	mov    ecx,DWORD PTR [ebp-0x2c]
1005d0c7:	shl    edx,0x1f
1005d0ca:	shr    ecx,1
1005d0cc:	or     ecx,edx
1005d0ce:	dec    esi
1005d0cf:	mov    DWORD PTR [ebp-0x28],ebx
1005d0d2:	mov    DWORD PTR [ebp-0x2c],ecx
1005d0d5:	jne    0x1005d0a8
1005d0d7:	cmp    DWORD PTR [ebp-0x50],0x0
1005d0db:	je     0x1005d0e2
1005d0dd:	or     WORD PTR [ebp-0x2c],0x1
1005d0e2:	cmp    WORD PTR [ebp-0x2c],0x8000
1005d0e8:	ja     0x1005d0fb
1005d0ea:	mov    ecx,DWORD PTR [ebp-0x2c]
1005d0ed:	and    ecx,0x1ffff
1005d0f3:	cmp    ecx,0x18000
1005d0f9:	jne    0x1005d12e
1005d0fb:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
1005d0ff:	jne    0x1005d12b
1005d101:	and    DWORD PTR [ebp-0x2a],0x0
1005d105:	cmp    DWORD PTR [ebp-0x26],0xffffffff
1005d109:	jne    0x1005d126
1005d10b:	and    DWORD PTR [ebp-0x26],0x0
1005d10f:	cmp    WORD PTR [ebp-0x22],0xffff
1005d115:	jne    0x1005d120
1005d117:	mov    WORD PTR [ebp-0x22],0x8000
1005d11d:	inc    edi
1005d11e:	jmp    0x1005d12e
1005d120:	inc    WORD PTR [ebp-0x22]
1005d124:	jmp    0x1005d12e
1005d126:	inc    DWORD PTR [ebp-0x26]
1005d129:	jmp    0x1005d12e
1005d12b:	inc    DWORD PTR [ebp-0x2a]
1005d12e:	cmp    di,0x7fff
1005d133:	mov    esi,DWORD PTR [ebp-0x4c]
1005d136:	jae    0x1005d154
1005d138:	mov    cx,WORD PTR [ebp-0x2a]
1005d13c:	mov    WORD PTR [ebp-0x3c],cx
1005d140:	mov    ecx,DWORD PTR [ebp-0x28]
1005d143:	mov    DWORD PTR [ebp-0x3a],ecx
1005d146:	mov    ecx,DWORD PTR [ebp-0x24]
1005d149:	or     edi,eax
1005d14b:	mov    DWORD PTR [ebp-0x36],ecx
1005d14e:	mov    WORD PTR [ebp-0x32],di
1005d152:	jmp    0x1005d16e
1005d154:	neg    ax
1005d157:	sbb    eax,eax
1005d159:	and    DWORD PTR [ebp-0x38],0x0
1005d15d:	and    eax,0x80000000
1005d162:	add    eax,0x7fff8000
1005d167:	and    DWORD PTR [ebp-0x3c],0x0
1005d16b:	mov    DWORD PTR [ebp-0x34],eax
1005d16e:	cmp    DWORD PTR [ebp-0x54],0x0
1005d172:	jne    0x1005cee4
1005d178:	mov    eax,DWORD PTR [ebp-0x34]
1005d17b:	movzx  ecx,WORD PTR [ebp-0x3c]
1005d17f:	mov    esi,DWORD PTR [ebp-0x3a]
1005d182:	mov    edx,DWORD PTR [ebp-0x36]
1005d185:	shr    eax,0x10
1005d188:	jmp    0x1005d1b9
1005d18a:	mov    DWORD PTR [ebp-0x6c],0x4
1005d191:	jmp    0x1005d1b1
1005d193:	xor    esi,esi
1005d195:	mov    eax,0x7fff
1005d19a:	mov    edx,0x80000000
1005d19f:	xor    ecx,ecx
1005d1a1:	mov    DWORD PTR [ebp-0x6c],0x2
1005d1a8:	jmp    0x1005d1b9
1005d1aa:	mov    DWORD PTR [ebp-0x6c],0x1
1005d1b1:	xor    ecx,ecx
1005d1b3:	xor    eax,eax
1005d1b5:	xor    edx,edx
1005d1b7:	xor    esi,esi
1005d1b9:	mov    edi,DWORD PTR [ebp-0x7c]
1005d1bc:	or     eax,DWORD PTR [ebp-0x74]
1005d1bf:	mov    WORD PTR [edi],cx
1005d1c2:	mov    WORD PTR [edi+0xa],ax
1005d1c6:	mov    eax,DWORD PTR [ebp-0x6c]
1005d1c9:	mov    DWORD PTR [edi+0x2],esi
1005d1cc:	mov    DWORD PTR [edi+0x6],edx
1005d1cf:	mov    ecx,DWORD PTR [ebp-0x4]
1005d1d2:	pop    edi
1005d1d3:	pop    esi
1005d1d4:	xor    ecx,ebp
1005d1d6:	pop    ebx
1005d1d7:	call   0x10041d97
1005d1dc:	leave  
1005d1dd:	ret    
1005d1de:	lea    ecx,[ecx+0x0]
1005d1e1:	in     eax,0xcb
1005d1e3:	add    eax,0x5cc3910
1005d1e8:	adc    BYTE PTR [edi-0x3deffa34],cl
1005d1ee:	int3   
1005d1ef:	add    eax,0x5cd0710
1005d1f4:	adc    BYTE PTR [edi],bh
1005d1f6:	int    0x5
1005d1f8:	adc    BYTE PTR [ebx-0x33],dl
1005d1fb:	add    eax,0x5cdae10
1005d200:	adc    BYTE PTR [ecx+0x181005cd],bl
1005d206:	into   
1005d207:	add    eax,0x5ce0d10
1005d20c:	adc    BYTE PTR [ebp+ecx*8-0x74aaeffb],bh
1005d213:	in     al,dx
1005d214:	sub    esp,0x74
1005d217:	mov    eax,ds:0x1007d030
1005d21c:	xor    eax,ebp
1005d21e:	mov    DWORD PTR [ebp-0x4],eax
1005d221:	push   ebx
1005d222:	mov    ebx,DWORD PTR [ebp+0x1c]
1005d225:	push   esi
1005d226:	push   edi
1005d227:	lea    esi,[ebp+0x8]
1005d22a:	lea    edi,[ebp-0x10]
1005d22d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d22e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d22f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
1005d231:	mov    edx,DWORD PTR [ebp-0x8]
1005d234:	mov    ecx,edx
1005d236:	mov    eax,0x8000
1005d23b:	and    ecx,eax
1005d23d:	and    edx,0x7fff
1005d243:	test   cx,cx
1005d246:	mov    DWORD PTR [ebp-0x60],ebx
1005d249:	mov    BYTE PTR [ebp-0x30],0xcc
1005d24d:	mov    BYTE PTR [ebp-0x2f],0xcc
1005d251:	mov    BYTE PTR [ebp-0x2e],0xcc
1005d255:	mov    BYTE PTR [ebp-0x2d],0xcc
1005d259:	mov    BYTE PTR [ebp-0x2c],0xcc
1005d25d:	mov    BYTE PTR [ebp-0x2b],0xcc
1005d261:	mov    BYTE PTR [ebp-0x2a],0xcc
1005d265:	mov    BYTE PTR [ebp-0x29],0xcc
1005d269:	mov    BYTE PTR [ebp-0x28],0xcc
1005d26d:	mov    BYTE PTR [ebp-0x27],0xcc
1005d271:	mov    BYTE PTR [ebp-0x26],0xfb
1005d275:	mov    BYTE PTR [ebp-0x25],0x3f
1005d279:	mov    DWORD PTR [ebp-0x74],0x1
1005d280:	mov    DWORD PTR [ebp-0x6c],ecx
1005d283:	je     0x1005d28b
1005d285:	mov    BYTE PTR [ebx+0x2],0x2d
1005d289:	jmp    0x1005d28f
1005d28b:	mov    BYTE PTR [ebx+0x2],0x20
1005d28f:	test   dx,dx
1005d292:	mov    esi,DWORD PTR [ebp-0xc]
1005d295:	mov    edi,DWORD PTR [ebp-0x10]
1005d298:	jne    0x1005d2c8
1005d29a:	test   esi,esi
1005d29c:	jne    0x1005d2c8
1005d29e:	test   edi,edi
1005d2a0:	jne    0x1005d2c8
1005d2a2:	and    WORD PTR [ebx],di
1005d2a5:	cmp    cx,ax
1005d2a8:	setne  al
1005d2ab:	dec    al
1005d2ad:	and    al,0xd
1005d2af:	add    al,0x20
1005d2b1:	mov    BYTE PTR [ebx+0x2],al
1005d2b4:	mov    BYTE PTR [ebx+0x3],0x1
1005d2b8:	mov    BYTE PTR [ebx+0x4],0x30
1005d2bc:	mov    BYTE PTR [ebx+0x5],0x0
1005d2c0:	xor    eax,eax
1005d2c2:	inc    eax
1005d2c3:	jmp    0x1005da91
1005d2c8:	cmp    dx,0x7fff
1005d2cd:	jne    0x1005d371
1005d2d3:	mov    eax,0x80000000
1005d2d8:	cmp    esi,eax
1005d2da:	mov    WORD PTR [ebx],0x1
1005d2df:	jne    0x1005d2e5
1005d2e1:	test   edi,edi
1005d2e3:	je     0x1005d2f4
1005d2e5:	test   esi,0x40000000
1005d2eb:	jne    0x1005d2f4
1005d2ed:	push   0x1006b970
1005d2f2:	jmp    0x1005d345
1005d2f4:	test   cx,cx
1005d2f7:	je     0x1005d30c
1005d2f9:	cmp    esi,0xc0000000
1005d2ff:	jne    0x1005d30c
1005d301:	test   edi,edi
1005d303:	jne    0x1005d340
1005d305:	push   0x1006b968
1005d30a:	jmp    0x1005d319
1005d30c:	cmp    esi,eax
1005d30e:	jne    0x1005d340
1005d310:	test   edi,edi
1005d312:	jne    0x1005d340
1005d314:	push   0x1006b960
1005d319:	lea    eax,[ebx+0x4]
1005d31c:	push   0x16
1005d31e:	push   eax
1005d31f:	call   0x100458e9
1005d324:	add    esp,0xc
1005d327:	xor    esi,esi
1005d329:	test   eax,eax
1005d32b:	je     0x1005d33a
1005d32d:	push   esi
1005d32e:	push   esi
1005d32f:	push   esi
1005d330:	push   esi
1005d331:	push   esi
1005d332:	call   0x10042190
1005d337:	add    esp,0x14
1005d33a:	mov    BYTE PTR [ebx+0x3],0x5
1005d33e:	jmp    0x1005d36a
1005d340:	push   0x1006b958
1005d345:	lea    eax,[ebx+0x4]
1005d348:	push   0x16
1005d34a:	push   eax
1005d34b:	call   0x100458e9
1005d350:	add    esp,0xc
1005d353:	xor    esi,esi
1005d355:	test   eax,eax
1005d357:	je     0x1005d366
1005d359:	push   esi
1005d35a:	push   esi
1005d35b:	push   esi
1005d35c:	push   esi
1005d35d:	push   esi
1005d35e:	call   0x10042190
1005d363:	add    esp,0x14
1005d366:	mov    BYTE PTR [ebx+0x3],0x6
1005d36a:	xor    eax,eax
1005d36c:	jmp    0x1005da91
1005d371:	movzx  ecx,dx
1005d374:	mov    ebx,ecx
1005d376:	imul   ecx,ecx,0x4d10
1005d37c:	shr    ebx,0x8
1005d37f:	mov    eax,esi
1005d381:	shr    eax,0x18
1005d384:	lea    eax,[ebx+eax*2]
1005d387:	imul   eax,eax,0x4d
1005d38a:	lea    eax,[eax+ecx*1-0x134312f4]
1005d391:	sar    eax,0x10
1005d394:	movzx  ecx,ax
1005d397:	movsx  ebx,cx
1005d39a:	mov    DWORD PTR [ebp-0x4c],ecx
1005d39d:	xor    eax,eax
1005d39f:	mov    ecx,0x1007e210
1005d3a4:	neg    ebx
1005d3a6:	sub    ecx,0x60
1005d3a9:	cmp    ebx,eax
1005d3ab:	mov    WORD PTR [ebp-0x16],dx
1005d3af:	mov    DWORD PTR [ebp-0x1a],esi
1005d3b2:	mov    DWORD PTR [ebp-0x1e],edi
1005d3b5:	mov    WORD PTR [ebp-0x20],ax
1005d3b9:	mov    DWORD PTR [ebp-0x68],ecx
1005d3bc:	je     0x1005d670
1005d3c2:	jge    0x1005d3d1
1005d3c4:	mov    ecx,0x1007e370
1005d3c9:	neg    ebx
1005d3cb:	sub    ecx,0x60
1005d3ce:	mov    DWORD PTR [ebp-0x68],ecx
1005d3d1:	cmp    ebx,eax
1005d3d3:	je     0x1005d670
1005d3d9:	add    DWORD PTR [ebp-0x68],0x54
1005d3dd:	mov    ecx,ebx
1005d3df:	and    ecx,0x7
1005d3e2:	sar    ebx,0x3
1005d3e5:	test   ecx,ecx
1005d3e7:	je     0x1005d666
1005d3ed:	imul   ecx,ecx,0xc
1005d3f0:	add    ecx,DWORD PTR [ebp-0x68]
1005d3f3:	cmp    WORD PTR [ecx],0x8000
1005d3f8:	mov    DWORD PTR [ebp-0x64],ecx
1005d3fb:	jb     0x1005d410
1005d3fd:	mov    esi,ecx
1005d3ff:	lea    edi,[ebp-0x3c]
1005d402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d404:	lea    eax,[ebp-0x3c]
1005d407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d408:	dec    DWORD PTR [ebp-0x3a]
1005d40b:	mov    DWORD PTR [ebp-0x64],eax
1005d40e:	mov    ecx,eax
1005d410:	movzx  edi,WORD PTR [ecx+0xa]
1005d414:	mov    edx,DWORD PTR [ebp-0x16]
1005d417:	xor    eax,eax
1005d419:	mov    ecx,edi
1005d41b:	mov    esi,0x7fff
1005d420:	xor    ecx,edx
1005d422:	and    edx,esi
1005d424:	and    edi,esi
1005d426:	mov    DWORD PTR [ebp-0x48],eax
1005d429:	mov    DWORD PTR [ebp-0x10],eax
1005d42c:	mov    DWORD PTR [ebp-0xc],eax
1005d42f:	mov    DWORD PTR [ebp-0x8],eax
1005d432:	and    ecx,0x8000
1005d438:	cmp    dx,si
1005d43b:	lea    eax,[edi+edx*1]
1005d43e:	movzx  eax,ax
1005d441:	jae    0x1005d64a
1005d447:	cmp    di,si
1005d44a:	jae    0x1005d64a
1005d450:	cmp    ax,0xbffd
1005d454:	ja     0x1005d64a
1005d45a:	cmp    ax,0x3fbf
1005d45e:	ja     0x1005d470
1005d460:	xor    eax,eax
1005d462:	mov    DWORD PTR [ebp-0x18],eax
1005d465:	mov    DWORD PTR [ebp-0x1c],eax
1005d468:	mov    DWORD PTR [ebp-0x20],eax
1005d46b:	jmp    0x1005d666
1005d470:	xor    esi,esi
1005d472:	cmp    dx,si
1005d475:	jne    0x1005d494
1005d477:	inc    eax
1005d478:	test   DWORD PTR [ebp-0x18],0x7fffffff
1005d47f:	jne    0x1005d494
1005d481:	cmp    DWORD PTR [ebp-0x1c],esi
1005d484:	jne    0x1005d494
1005d486:	cmp    DWORD PTR [ebp-0x20],esi
1005d489:	jne    0x1005d494
1005d48b:	mov    WORD PTR [ebp-0x16],si
1005d48f:	jmp    0x1005d666
1005d494:	cmp    di,si
1005d497:	jne    0x1005d4bd
1005d499:	mov    edx,DWORD PTR [ebp-0x64]
1005d49c:	inc    eax
1005d49d:	test   DWORD PTR [edx+0x8],0x7fffffff
1005d4a4:	jne    0x1005d4bd
1005d4a6:	cmp    DWORD PTR [edx+0x4],esi
1005d4a9:	jne    0x1005d4bd
1005d4ab:	cmp    DWORD PTR [edx],esi
1005d4ad:	jne    0x1005d4bd
1005d4af:	mov    DWORD PTR [ebp-0x18],esi
1005d4b2:	mov    DWORD PTR [ebp-0x1c],esi
1005d4b5:	mov    DWORD PTR [ebp-0x20],esi
1005d4b8:	jmp    0x1005d666
1005d4bd:	lea    edi,[ebp-0xc]
1005d4c0:	mov    DWORD PTR [ebp-0x5c],esi
1005d4c3:	mov    DWORD PTR [ebp-0x44],edi
1005d4c6:	mov    DWORD PTR [ebp-0x40],0x5
1005d4cd:	mov    edx,DWORD PTR [ebp-0x5c]
1005d4d0:	mov    esi,DWORD PTR [ebp-0x40]
1005d4d3:	add    edx,edx
1005d4d5:	test   esi,esi
1005d4d7:	mov    DWORD PTR [ebp-0x50],esi
1005d4da:	jle    0x1005d534
1005d4dc:	lea    edx,[ebp+edx*1-0x20]
1005d4e0:	mov    DWORD PTR [ebp-0x58],edx
1005d4e3:	mov    edx,DWORD PTR [ebp-0x64]
1005d4e6:	add    edx,0x8
1005d4e9:	mov    DWORD PTR [ebp-0x54],edx
1005d4ec:	mov    edx,DWORD PTR [ebp-0x58]
1005d4ef:	mov    esi,DWORD PTR [ebp-0x54]
1005d4f2:	movzx  esi,WORD PTR [esi]
1005d4f5:	movzx  edx,WORD PTR [edx]
1005d4f8:	mov    edi,DWORD PTR [edi-0x4]
1005d4fb:	imul   edx,esi
1005d4fe:	and    DWORD PTR [ebp-0x70],0x0
1005d502:	lea    esi,[edi+edx*1]
1005d505:	cmp    esi,edi
1005d507:	jb     0x1005d50d
1005d509:	cmp    esi,edx
1005d50b:	jae    0x1005d514
1005d50d:	mov    DWORD PTR [ebp-0x70],0x1
1005d514:	cmp    DWORD PTR [ebp-0x70],0x0
1005d518:	mov    edi,DWORD PTR [ebp-0x44]
1005d51b:	mov    DWORD PTR [edi-0x4],esi
1005d51e:	je     0x1005d523
1005d520:	inc    WORD PTR [edi]
1005d523:	add    DWORD PTR [ebp-0x58],0x2
1005d527:	sub    DWORD PTR [ebp-0x54],0x2
1005d52b:	dec    DWORD PTR [ebp-0x50]
1005d52e:	cmp    DWORD PTR [ebp-0x50],0x0
1005d532:	jg     0x1005d4ec
1005d534:	inc    edi
1005d535:	inc    edi
1005d536:	inc    DWORD PTR [ebp-0x5c]
1005d539:	dec    DWORD PTR [ebp-0x40]
1005d53c:	cmp    DWORD PTR [ebp-0x40],0x0
1005d540:	mov    DWORD PTR [ebp-0x44],edi
1005d543:	jg     0x1005d4cd
1005d545:	add    eax,0xc002
1005d54a:	test   ax,ax
1005d54d:	jle    0x1005d58a
1005d54f:	test   DWORD PTR [ebp-0x8],0x80000000
1005d556:	jne    0x1005d585
1005d558:	mov    edx,DWORD PTR [ebp-0x10]
1005d55b:	mov    edi,DWORD PTR [ebp-0xc]
1005d55e:	mov    esi,DWORD PTR [ebp-0xc]
1005d561:	shl    DWORD PTR [ebp-0x10],1
1005d564:	shr    edx,0x1f
1005d567:	add    edi,edi
1005d569:	or     edi,edx
1005d56b:	mov    edx,DWORD PTR [ebp-0x8]
1005d56e:	shr    esi,0x1f
1005d571:	add    edx,edx
1005d573:	or     edx,esi
1005d575:	add    eax,0xffff
1005d57a:	test   ax,ax
1005d57d:	mov    DWORD PTR [ebp-0xc],edi
1005d580:	mov    DWORD PTR [ebp-0x8],edx
1005d583:	jg     0x1005d54f
1005d585:	test   ax,ax
1005d588:	jg     0x1005d5dc
1005d58a:	add    eax,0xffff
1005d58f:	test   ax,ax
1005d592:	jge    0x1005d5dc
1005d594:	mov    edx,eax
1005d596:	neg    edx
1005d598:	movzx  edx,dx
1005d59b:	mov    DWORD PTR [ebp-0x44],edx
1005d59e:	add    eax,edx
1005d5a0:	test   BYTE PTR [ebp-0x10],0x1
1005d5a4:	je     0x1005d5a9
1005d5a6:	inc    DWORD PTR [ebp-0x48]
1005d5a9:	mov    edx,DWORD PTR [ebp-0x8]
1005d5ac:	mov    edi,DWORD PTR [ebp-0xc]
1005d5af:	mov    esi,DWORD PTR [ebp-0xc]
1005d5b2:	shr    DWORD PTR [ebp-0x8],1
1005d5b5:	shl    edx,0x1f
1005d5b8:	shr    edi,1
1005d5ba:	or     edi,edx
1005d5bc:	mov    edx,DWORD PTR [ebp-0x10]
1005d5bf:	shl    esi,0x1f
1005d5c2:	shr    edx,1
1005d5c4:	or     edx,esi
1005d5c6:	dec    DWORD PTR [ebp-0x44]
1005d5c9:	mov    DWORD PTR [ebp-0xc],edi
1005d5cc:	mov    DWORD PTR [ebp-0x10],edx
1005d5cf:	jne    0x1005d5a0
1005d5d1:	cmp    DWORD PTR [ebp-0x48],0x0
1005d5d5:	je     0x1005d5dc
1005d5d7:	or     WORD PTR [ebp-0x10],0x1
1005d5dc:	cmp    WORD PTR [ebp-0x10],0x8000
1005d5e2:	ja     0x1005d5f5
1005d5e4:	mov    edx,DWORD PTR [ebp-0x10]
1005d5e7:	and    edx,0x1ffff
1005d5ed:	cmp    edx,0x18000
1005d5f3:	jne    0x1005d628
1005d5f5:	cmp    DWORD PTR [ebp-0xe],0xffffffff
1005d5f9:	jne    0x1005d625
1005d5fb:	and    DWORD PTR [ebp-0xe],0x0
1005d5ff:	cmp    DWORD PTR [ebp-0xa],0xffffffff
1005d603:	jne    0x1005d620
1005d605:	and    DWORD PTR [ebp-0xa],0x0
1005d609:	cmp    WORD PTR [ebp-0x6],0xffff
1005d60f:	jne    0x1005d61a
1005d611:	mov    WORD PTR [ebp-0x6],0x8000
1005d617:	inc    eax
1005d618:	jmp    0x1005d628
1005d61a:	inc    WORD PTR [ebp-0x6]
1005d61e:	jmp    0x1005d628
1005d620:	inc    DWORD PTR [ebp-0xa]
1005d623:	jmp    0x1005d628
1005d625:	inc    DWORD PTR [ebp-0xe]
1005d628:	cmp    ax,0x7fff
1005d62c:	jae    0x1005d64a
1005d62e:	mov    dx,WORD PTR [ebp-0xe]
1005d632:	mov    WORD PTR [ebp-0x20],dx
1005d636:	mov    edx,DWORD PTR [ebp-0xc]
1005d639:	mov    DWORD PTR [ebp-0x1e],edx
1005d63c:	mov    edx,DWORD PTR [ebp-0x8]
1005d63f:	or     eax,ecx
1005d641:	mov    DWORD PTR [ebp-0x1a],edx
1005d644:	mov    WORD PTR [ebp-0x16],ax
1005d648:	jmp    0x1005d666
1005d64a:	neg    cx
1005d64d:	sbb    ecx,ecx
1005d64f:	and    DWORD PTR [ebp-0x1c],0x0
1005d653:	and    ecx,0x80000000
1005d659:	add    ecx,0x7fff8000
1005d65f:	and    DWORD PTR [ebp-0x20],0x0
1005d663:	mov    DWORD PTR [ebp-0x18],ecx
1005d666:	test   ebx,ebx
1005d668:	jne    0x1005d3d9
1005d66e:	xor    eax,eax
1005d670:	mov    ecx,DWORD PTR [ebp-0x18]
1005d673:	shr    ecx,0x10
1005d676:	cmp    cx,0x3fff
1005d67b:	mov    ebx,0x7fff
1005d680:	jb     0x1005d8d0
1005d686:	mov    esi,DWORD PTR [ebp-0x26]
1005d689:	inc    DWORD PTR [ebp-0x4c]
1005d68c:	movzx  edx,cx
1005d68f:	mov    ecx,esi
1005d691:	xor    ecx,edx
1005d693:	and    edx,ebx
1005d695:	and    esi,ebx
1005d697:	and    ecx,0x8000
1005d69d:	cmp    dx,bx
1005d6a0:	lea    edi,[esi+edx*1]
1005d6a3:	mov    DWORD PTR [ebp-0x58],eax
1005d6a6:	mov    DWORD PTR [ebp-0x10],eax
1005d6a9:	mov    DWORD PTR [ebp-0xc],eax
1005d6ac:	mov    DWORD PTR [ebp-0x8],eax
1005d6af:	movzx  edi,di
1005d6b2:	jae    0x1005d8b6
1005d6b8:	cmp    si,bx
1005d6bb:	jae    0x1005d8b6
1005d6c1:	cmp    di,0xbffd
1005d6c6:	ja     0x1005d8b6
1005d6cc:	cmp    di,0x3fbf
1005d6d1:	ja     0x1005d6db
1005d6d3:	mov    DWORD PTR [ebp-0x18],eax
1005d6d6:	jmp    0x1005d8ca
1005d6db:	cmp    dx,ax
1005d6de:	jne    0x1005d6fd
1005d6e0:	inc    edi
1005d6e1:	test   DWORD PTR [ebp-0x18],0x7fffffff
1005d6e8:	jne    0x1005d6fd
1005d6ea:	cmp    DWORD PTR [ebp-0x1c],eax
1005d6ed:	jne    0x1005d6fd
1005d6ef:	cmp    DWORD PTR [ebp-0x20],eax
1005d6f2:	jne    0x1005d6fd
1005d6f4:	mov    WORD PTR [ebp-0x16],ax
1005d6f8:	jmp    0x1005d8d0
1005d6fd:	cmp    si,ax
1005d700:	jne    0x1005d716
1005d702:	inc    edi
1005d703:	test   DWORD PTR [ebp-0x28],0x7fffffff
1005d70a:	jne    0x1005d716
1005d70c:	cmp    DWORD PTR [ebp-0x2c],eax
1005d70f:	jne    0x1005d716
1005d711:	cmp    DWORD PTR [ebp-0x30],eax
1005d714:	je     0x1005d6d3
1005d716:	and    DWORD PTR [ebp-0x54],0x0
1005d71a:	lea    eax,[ebp-0xc]
1005d71d:	mov    DWORD PTR [ebp-0x40],0x5
1005d724:	mov    edx,DWORD PTR [ebp-0x54]
1005d727:	mov    esi,DWORD PTR [ebp-0x40]
1005d72a:	add    edx,edx
1005d72c:	test   esi,esi
1005d72e:	mov    DWORD PTR [ebp-0x50],esi
1005d731:	jle    0x1005d785
1005d733:	lea    esi,[ebp-0x28]
1005d736:	lea    edx,[ebp+edx*1-0x20]
1005d73a:	mov    DWORD PTR [ebp-0x5c],esi
1005d73d:	mov    DWORD PTR [ebp-0x48],edx
1005d740:	mov    edx,DWORD PTR [ebp-0x5c]
1005d743:	mov    esi,DWORD PTR [ebp-0x48]
1005d746:	movzx  esi,WORD PTR [esi]
1005d749:	movzx  edx,WORD PTR [edx]
1005d74c:	and    DWORD PTR [ebp-0x44],0x0
1005d750:	imul   edx,esi
1005d753:	mov    esi,DWORD PTR [eax-0x4]
1005d756:	lea    ebx,[esi+edx*1]
1005d759:	cmp    ebx,esi
1005d75b:	jb     0x1005d761
1005d75d:	cmp    ebx,edx
1005d75f:	jae    0x1005d768
1005d761:	mov    DWORD PTR [ebp-0x44],0x1
1005d768:	cmp    DWORD PTR [ebp-0x44],0x0
1005d76c:	mov    DWORD PTR [eax-0x4],ebx
1005d76f:	je     0x1005d774
1005d771:	inc    WORD PTR [eax]
1005d774:	add    DWORD PTR [ebp-0x48],0x2
1005d778:	sub    DWORD PTR [ebp-0x5c],0x2
1005d77c:	dec    DWORD PTR [ebp-0x50]
1005d77f:	cmp    DWORD PTR [ebp-0x50],0x0
1005d783:	jg     0x1005d740
1005d785:	inc    eax
1005d786:	inc    eax
1005d787:	inc    DWORD PTR [ebp-0x54]
1005d78a:	dec    DWORD PTR [ebp-0x40]
1005d78d:	cmp    DWORD PTR [ebp-0x40],0x0
1005d791:	jg     0x1005d724
1005d793:	add    edi,0xc002
1005d799:	xor    eax,eax
1005d79b:	cmp    di,ax
1005d79e:	jle    0x1005d7dc
1005d7a0:	test   DWORD PTR [ebp-0x8],0x80000000
1005d7a7:	jne    0x1005d7d7
1005d7a9:	mov    edx,DWORD PTR [ebp-0x10]
1005d7ac:	mov    ebx,DWORD PTR [ebp-0xc]
1005d7af:	mov    esi,DWORD PTR [ebp-0xc]
1005d7b2:	shl    DWORD PTR [ebp-0x10],1
1005d7b5:	shr    edx,0x1f
1005d7b8:	add    ebx,ebx
1005d7ba:	or     ebx,edx
1005d7bc:	mov    edx,DWORD PTR [ebp-0x8]
1005d7bf:	shr    esi,0x1f
1005d7c2:	add    edx,edx
1005d7c4:	or     edx,esi
1005d7c6:	add    edi,0xffff
1005d7cc:	cmp    di,ax
1005d7cf:	mov    DWORD PTR [ebp-0xc],ebx
1005d7d2:	mov    DWORD PTR [ebp-0x8],edx
1005d7d5:	jg     0x1005d7a0
1005d7d7:	cmp    di,ax
1005d7da:	jg     0x1005d82b
1005d7dc:	add    edi,0xffff
1005d7e2:	cmp    di,ax
1005d7e5:	jge    0x1005d82b
1005d7e7:	mov    eax,edi
1005d7e9:	neg    eax
1005d7eb:	movzx  eax,ax
1005d7ee:	add    edi,eax
1005d7f0:	test   BYTE PTR [ebp-0x10],0x1
1005d7f4:	je     0x1005d7f9
1005d7f6:	inc    DWORD PTR [ebp-0x58]
1005d7f9:	mov    edx,DWORD PTR [ebp-0x8]
1005d7fc:	mov    ebx,DWORD PTR [ebp-0xc]
1005d7ff:	mov    esi,DWORD PTR [ebp-0xc]
1005d802:	shr    DWORD PTR [ebp-0x8],1
1005d805:	shl    edx,0x1f
1005d808:	shr    ebx,1
1005d80a:	or     ebx,edx
1005d80c:	mov    edx,DWORD PTR [ebp-0x10]
1005d80f:	shl    esi,0x1f
1005d812:	shr    edx,1
1005d814:	or     edx,esi
1005d816:	dec    eax
1005d817:	mov    DWORD PTR [ebp-0xc],ebx
1005d81a:	mov    DWORD PTR [ebp-0x10],edx
1005d81d:	jne    0x1005d7f0
1005d81f:	xor    eax,eax
1005d821:	cmp    DWORD PTR [ebp-0x58],eax
1005d824:	je     0x1005d82b
1005d826:	or     WORD PTR [ebp-0x10],0x1
1005d82b:	cmp    WORD PTR [ebp-0x10],0x8000
1005d831:	ja     0x1005d844
1005d833:	mov    edx,DWORD PTR [ebp-0x10]
1005d836:	and    edx,0x1ffff
1005d83c:	cmp    edx,0x18000
1005d842:	jne    0x1005d875
1005d844:	cmp    DWORD PTR [ebp-0xe],0xffffffff
1005d848:	jne    0x1005d872
1005d84a:	cmp    DWORD PTR [ebp-0xa],0xffffffff
1005d84e:	mov    DWORD PTR [ebp-0xe],eax
1005d851:	jne    0x1005d86d
1005d853:	cmp    WORD PTR [ebp-0x6],0xffff
1005d859:	mov    DWORD PTR [ebp-0xa],eax
1005d85c:	jne    0x1005d867
1005d85e:	mov    WORD PTR [ebp-0x6],0x8000
1005d864:	inc    edi
1005d865:	jmp    0x1005d875
1005d867:	inc    WORD PTR [ebp-0x6]
1005d86b:	jmp    0x1005d875
1005d86d:	inc    DWORD PTR [ebp-0xa]
1005d870:	jmp    0x1005d875
1005d872:	inc    DWORD PTR [ebp-0xe]
1005d875:	cmp    di,0x7fff
1005d87a:	jb     0x1005d89a
1005d87c:	neg    cx
1005d87f:	mov    DWORD PTR [ebp-0x1c],eax
1005d882:	mov    DWORD PTR [ebp-0x20],eax
1005d885:	sbb    ecx,ecx
1005d887:	and    ecx,0x80000000
1005d88d:	add    ecx,0x7fff8000
1005d893:	mov    DWORD PTR [ebp-0x18],ecx
1005d896:	xor    eax,eax
1005d898:	jmp    0x1005d8d0
1005d89a:	mov    ax,WORD PTR [ebp-0xe]
1005d89e:	mov    WORD PTR [ebp-0x20],ax
1005d8a2:	mov    eax,DWORD PTR [ebp-0xc]
1005d8a5:	mov    DWORD PTR [ebp-0x1e],eax
1005d8a8:	mov    eax,DWORD PTR [ebp-0x8]
1005d8ab:	or     edi,ecx
1005d8ad:	mov    DWORD PTR [ebp-0x1a],eax
1005d8b0:	mov    WORD PTR [ebp-0x16],di
1005d8b4:	jmp    0x1005d896
1005d8b6:	neg    cx
1005d8b9:	sbb    ecx,ecx
1005d8bb:	and    ecx,0x80000000
1005d8c1:	add    ecx,0x7fff8000
1005d8c7:	mov    DWORD PTR [ebp-0x18],ecx
1005d8ca:	mov    DWORD PTR [ebp-0x1c],eax
1005d8cd:	mov    DWORD PTR [ebp-0x20],eax
1005d8d0:	test   BYTE PTR [ebp+0x18],0x1
1005d8d4:	mov    edx,DWORD PTR [ebp-0x60]
1005d8d7:	mov    ecx,DWORD PTR [ebp-0x4c]
1005d8da:	mov    WORD PTR [edx],cx
1005d8dd:	je     0x1005d911
1005d8df:	movsx  ecx,cx
1005d8e2:	add    DWORD PTR [ebp+0x14],ecx
1005d8e5:	cmp    DWORD PTR [ebp+0x14],eax
1005d8e8:	jg     0x1005d911
1005d8ea:	and    WORD PTR [edx],0x0
1005d8ee:	cmp    WORD PTR [ebp-0x6c],0x8000
1005d8f4:	mov    BYTE PTR [edx+0x3],0x1
1005d8f8:	setne  al
1005d8fb:	dec    al
1005d8fd:	and    al,0xd
1005d8ff:	add    al,0x20
1005d901:	mov    BYTE PTR [edx+0x2],al
1005d904:	mov    BYTE PTR [edx+0x4],0x30
1005d908:	mov    BYTE PTR [edx+0x5],0x0
1005d90c:	jmp    0x1005d2c0
1005d911:	push   0x15
1005d913:	pop    ecx
1005d914:	cmp    DWORD PTR [ebp+0x14],ecx
1005d917:	jle    0x1005d91c
1005d919:	mov    DWORD PTR [ebp+0x14],ecx
1005d91c:	mov    esi,DWORD PTR [ebp-0x18]
1005d91f:	shr    esi,0x10
1005d922:	push   0x8
1005d924:	sub    esi,0x3ffe
1005d92a:	mov    WORD PTR [ebp-0x16],ax
1005d92e:	pop    ebx
1005d92f:	mov    eax,DWORD PTR [ebp-0x20]
1005d932:	mov    edi,DWORD PTR [ebp-0x1c]
1005d935:	mov    ecx,DWORD PTR [ebp-0x1c]
1005d938:	shl    DWORD PTR [ebp-0x20],1
1005d93b:	shr    eax,0x1f
1005d93e:	add    edi,edi
1005d940:	or     edi,eax
1005d942:	mov    eax,DWORD PTR [ebp-0x18]
1005d945:	shr    ecx,0x1f
1005d948:	add    eax,eax
1005d94a:	or     eax,ecx
1005d94c:	dec    ebx
1005d94d:	mov    DWORD PTR [ebp-0x1c],edi
1005d950:	mov    DWORD PTR [ebp-0x18],eax
1005d953:	jne    0x1005d92f
1005d955:	test   esi,esi
1005d957:	jge    0x1005d98b
1005d959:	neg    esi
1005d95b:	and    esi,0xff
1005d961:	jle    0x1005d98b
1005d963:	mov    eax,DWORD PTR [ebp-0x18]
1005d966:	mov    edi,DWORD PTR [ebp-0x1c]
1005d969:	mov    ecx,DWORD PTR [ebp-0x1c]
1005d96c:	shr    DWORD PTR [ebp-0x18],1
1005d96f:	shl    eax,0x1f
1005d972:	shr    edi,1
1005d974:	or     edi,eax
1005d976:	mov    eax,DWORD PTR [ebp-0x20]
1005d979:	shl    ecx,0x1f
1005d97c:	shr    eax,1
1005d97e:	or     eax,ecx
1005d980:	dec    esi
1005d981:	test   esi,esi
1005d983:	mov    DWORD PTR [ebp-0x1c],edi
1005d986:	mov    DWORD PTR [ebp-0x20],eax
1005d989:	jg     0x1005d963
1005d98b:	mov    eax,DWORD PTR [ebp+0x14]
1005d98e:	inc    eax
1005d98f:	test   eax,eax
1005d991:	lea    ebx,[edx+0x4]
1005d994:	mov    DWORD PTR [ebp-0x40],ebx
1005d997:	mov    DWORD PTR [ebp-0x4c],eax
1005d99a:	jle    0x1005da55
1005d9a0:	mov    edx,DWORD PTR [ebp-0x20]
1005d9a3:	mov    eax,DWORD PTR [ebp-0x1c]
1005d9a6:	lea    esi,[ebp-0x20]
1005d9a9:	lea    edi,[ebp-0x3c]
1005d9ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d9ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d9ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005d9af:	shl    DWORD PTR [ebp-0x20],1
1005d9b2:	mov    edi,DWORD PTR [ebp-0x20]
1005d9b5:	shl    DWORD PTR [ebp-0x20],1
1005d9b8:	shr    edx,0x1f
1005d9bb:	lea    ecx,[eax+eax*1]
1005d9be:	or     ecx,edx
1005d9c0:	mov    edx,DWORD PTR [ebp-0x18]
1005d9c3:	mov    esi,eax
1005d9c5:	shr    esi,0x1f
1005d9c8:	add    edx,edx
1005d9ca:	or     edx,esi
1005d9cc:	mov    eax,ecx
1005d9ce:	lea    esi,[ecx+ecx*1]
1005d9d1:	shr    eax,0x1f
1005d9d4:	lea    ecx,[edx+edx*1]
1005d9d7:	mov    edx,DWORD PTR [ebp-0x3c]
1005d9da:	shr    edi,0x1f
1005d9dd:	or     ecx,eax
1005d9df:	mov    eax,DWORD PTR [ebp-0x20]
1005d9e2:	or     esi,edi
1005d9e4:	lea    edi,[edx+eax*1]
1005d9e7:	cmp    edi,eax
1005d9e9:	jb     0x1005d9ef
1005d9eb:	cmp    edi,edx
1005d9ed:	jae    0x1005da07
1005d9ef:	lea    eax,[esi+0x1]
1005d9f2:	xor    edx,edx
1005d9f4:	cmp    eax,esi
1005d9f6:	jb     0x1005d9fd
1005d9f8:	cmp    eax,0x1
1005d9fb:	jae    0x1005da00
1005d9fd:	xor    edx,edx
1005d9ff:	inc    edx
1005da00:	test   edx,edx
1005da02:	mov    esi,eax
1005da04:	je     0x1005da07
1005da06:	inc    ecx
1005da07:	mov    eax,DWORD PTR [ebp-0x38]
1005da0a:	lea    edx,[eax+esi*1]
1005da0d:	cmp    edx,esi
1005da0f:	mov    DWORD PTR [ebp-0x44],edx
1005da12:	jb     0x1005da18
1005da14:	cmp    edx,eax
1005da16:	jae    0x1005da19
1005da18:	inc    ecx
1005da19:	add    ecx,DWORD PTR [ebp-0x34]
1005da1c:	shr    edx,0x1f
1005da1f:	add    ecx,ecx
1005da21:	or     ecx,edx
1005da23:	lea    esi,[edi+edi*1]
1005da26:	mov    DWORD PTR [ebp-0x20],esi
1005da29:	mov    esi,DWORD PTR [ebp-0x44]
1005da2c:	mov    DWORD PTR [ebp-0x18],ecx
1005da2f:	shr    ecx,0x18
1005da32:	add    esi,esi
1005da34:	add    cl,0x30
1005da37:	mov    eax,edi
1005da39:	shr    eax,0x1f
1005da3c:	or     esi,eax
1005da3e:	mov    BYTE PTR [ebx],cl
1005da40:	inc    ebx
1005da41:	dec    DWORD PTR [ebp-0x4c]
1005da44:	cmp    DWORD PTR [ebp-0x4c],0x0
1005da48:	mov    DWORD PTR [ebp-0x1c],esi
1005da4b:	mov    BYTE PTR [ebp-0x15],0x0
1005da4f:	jg     0x1005d9a0
1005da55:	dec    ebx
1005da56:	mov    al,BYTE PTR [ebx]
1005da58:	dec    ebx
1005da59:	cmp    al,0x35
1005da5b:	jge    0x1005da6b
1005da5d:	mov    ecx,DWORD PTR [ebp-0x40]
1005da60:	jmp    0x1005daa6
1005da62:	cmp    BYTE PTR [ebx],0x39
1005da65:	jne    0x1005da70
1005da67:	mov    BYTE PTR [ebx],0x30
1005da6a:	dec    ebx
1005da6b:	cmp    ebx,DWORD PTR [ebp-0x40]
1005da6e:	jae    0x1005da62
1005da70:	cmp    ebx,DWORD PTR [ebp-0x40]
1005da73:	mov    eax,DWORD PTR [ebp-0x60]
1005da76:	jae    0x1005da7c
1005da78:	inc    ebx
1005da79:	inc    WORD PTR [eax]
1005da7c:	inc    BYTE PTR [ebx]
1005da7e:	sub    bl,al
1005da80:	sub    bl,0x3
1005da83:	movsx  ecx,bl
1005da86:	mov    BYTE PTR [eax+0x3],bl
1005da89:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
1005da8e:	mov    eax,DWORD PTR [ebp-0x74]
1005da91:	mov    ecx,DWORD PTR [ebp-0x4]
1005da94:	pop    edi
1005da95:	pop    esi
1005da96:	xor    ecx,ebp
1005da98:	pop    ebx
1005da99:	call   0x10041d97
1005da9e:	leave  
1005da9f:	ret    
1005daa0:	cmp    BYTE PTR [ebx],0x30
1005daa3:	jne    0x1005daaa
1005daa5:	dec    ebx
1005daa6:	cmp    ebx,ecx
1005daa8:	jae    0x1005daa0
1005daaa:	cmp    ebx,ecx
1005daac:	mov    eax,DWORD PTR [ebp-0x60]
1005daaf:	jae    0x1005da7e
1005dab1:	and    WORD PTR [eax],0x0
1005dab5:	cmp    WORD PTR [ebp-0x6c],0x8000
1005dabb:	mov    BYTE PTR [eax+0x3],0x1
1005dabf:	setne  dl
1005dac2:	dec    dl
1005dac4:	and    dl,0xd
1005dac7:	add    dl,0x20
1005daca:	mov    BYTE PTR [eax+0x2],dl
1005dacd:	mov    BYTE PTR [ecx],0x30
1005dad0:	mov    BYTE PTR [eax+0x5],0x0
1005dad4:	jmp    0x1005d2c0
1005dad9:	xor    eax,eax
1005dadb:	test   bl,0x10
1005dade:	je     0x1005dae1
1005dae0:	inc    eax
1005dae1:	test   bl,0x8
1005dae4:	je     0x1005dae9
1005dae6:	or     eax,0x4
1005dae9:	test   bl,0x4
1005daec:	je     0x1005daf1
1005daee:	or     eax,0x8
1005daf1:	test   bl,0x2
1005daf4:	je     0x1005daf9
1005daf6:	or     eax,0x10
1005daf9:	test   bl,0x1
1005dafc:	je     0x1005db01
1005dafe:	or     eax,0x20
1005db01:	test   ebx,0x80000
1005db07:	je     0x1005db0c
1005db09:	or     eax,0x2
1005db0c:	mov    ecx,ebx
1005db0e:	mov    edx,0x300
1005db13:	and    ecx,edx
1005db15:	push   esi
1005db16:	mov    esi,0x200
1005db1b:	je     0x1005db40
1005db1d:	cmp    ecx,0x100
1005db23:	je     0x1005db3b
1005db25:	cmp    ecx,esi
1005db27:	je     0x1005db34
1005db29:	cmp    ecx,edx
1005db2b:	jne    0x1005db40
1005db2d:	or     eax,0xc00
1005db32:	jmp    0x1005db40
1005db34:	or     eax,0x800
1005db39:	jmp    0x1005db40
1005db3b:	or     eax,0x400
1005db40:	mov    ecx,ebx
1005db42:	and    ecx,0x30000
1005db48:	je     0x1005db56
1005db4a:	cmp    ecx,0x10000
1005db50:	jne    0x1005db58
1005db52:	or     eax,esi
1005db54:	jmp    0x1005db58
1005db56:	or     eax,edx
1005db58:	test   ebx,0x40000
1005db5e:	pop    esi
1005db5f:	je     0x1005db66
1005db61:	or     eax,0x1000
1005db66:	ret    
1005db67:	xor    eax,eax
1005db69:	test   dl,0x10
1005db6c:	je     0x1005db73
1005db6e:	mov    eax,0x80
1005db73:	test   dl,0x8
1005db76:	push   ebx
1005db77:	push   esi
1005db78:	push   edi
1005db79:	mov    ebx,0x200
1005db7e:	je     0x1005db82
1005db80:	or     eax,ebx
1005db82:	test   dl,0x4
1005db85:	je     0x1005db8c
1005db87:	or     eax,0x400
1005db8c:	test   dl,0x2
1005db8f:	je     0x1005db96
1005db91:	or     eax,0x800
1005db96:	test   dl,0x1
1005db99:	je     0x1005dba0
1005db9b:	or     eax,0x1000
1005dba0:	test   edx,0x80000
1005dba6:	mov    edi,0x100
1005dbab:	je     0x1005dbaf
1005dbad:	or     eax,edi
1005dbaf:	mov    ecx,edx
1005dbb1:	mov    esi,0x300
1005dbb6:	and    ecx,esi
1005dbb8:	je     0x1005dbd9
1005dbba:	cmp    ecx,edi
1005dbbc:	je     0x1005dbd4
1005dbbe:	cmp    ecx,ebx
1005dbc0:	je     0x1005dbcd
1005dbc2:	cmp    ecx,esi
1005dbc4:	jne    0x1005dbd9
1005dbc6:	or     eax,0x6000
1005dbcb:	jmp    0x1005dbd9
1005dbcd:	or     eax,0x4000
1005dbd2:	jmp    0x1005dbd9
1005dbd4:	or     eax,0x2000
1005dbd9:	mov    ecx,0x3000000
1005dbde:	pop    edi
1005dbdf:	and    edx,ecx
1005dbe1:	cmp    edx,0x1000000
1005dbe7:	pop    esi
1005dbe8:	pop    ebx
1005dbe9:	je     0x1005dc01
1005dbeb:	cmp    edx,0x2000000
1005dbf1:	je     0x1005dbfd
1005dbf3:	cmp    edx,ecx
1005dbf5:	jne    0x1005dc06
1005dbf7:	or     eax,0x8000
1005dbfc:	ret    
1005dbfd:	or     eax,0x40
1005dc00:	ret    
1005dc01:	or     eax,0x8040
1005dc06:	ret    
1005dc07:	sub    esp,0x10
1005dc0a:	push   ebx
1005dc0b:	push   ebp
1005dc0c:	push   esi
1005dc0d:	push   edi
1005dc0e:	fstcw  WORD PTR [esp+0x14]
1005dc13:	mov    ebx,DWORD PTR [esp+0x14]
1005dc17:	xor    edx,edx
1005dc19:	test   bl,0x1
1005dc1c:	je     0x1005dc21
1005dc1e:	push   0x10
1005dc20:	pop    edx
1005dc21:	test   bl,0x4
1005dc24:	je     0x1005dc29
1005dc26:	or     edx,0x8
1005dc29:	test   bl,0x8
1005dc2c:	je     0x1005dc31
1005dc2e:	or     edx,0x4
1005dc31:	test   bl,0x10
1005dc34:	je     0x1005dc39
1005dc36:	or     edx,0x2
1005dc39:	test   bl,0x20
1005dc3c:	je     0x1005dc41
1005dc3e:	or     edx,0x1
1005dc41:	test   bl,0x2
1005dc44:	je     0x1005dc4c
1005dc46:	or     edx,0x80000
1005dc4c:	movzx  ecx,bx
1005dc4f:	mov    eax,ecx
1005dc51:	mov    edi,0xc00
1005dc56:	and    eax,edi
1005dc58:	mov    ebp,0x300
1005dc5d:	mov    esi,0x200
1005dc62:	je     0x1005dc84
1005dc64:	cmp    eax,0x400
1005dc69:	je     0x1005dc7e
1005dc6b:	cmp    eax,0x800
1005dc70:	je     0x1005dc7a
1005dc72:	cmp    eax,edi
1005dc74:	jne    0x1005dc84
1005dc76:	or     edx,ebp
1005dc78:	jmp    0x1005dc84
1005dc7a:	or     edx,esi
1005dc7c:	jmp    0x1005dc84
1005dc7e:	or     edx,0x100
1005dc84:	and    ecx,ebp
1005dc86:	je     0x1005dc94
1005dc88:	cmp    ecx,esi
1005dc8a:	jne    0x1005dc9a
1005dc8c:	or     edx,0x10000
1005dc92:	jmp    0x1005dc9a
1005dc94:	or     edx,0x20000
1005dc9a:	test   bx,0x1000
1005dc9f:	je     0x1005dca7
1005dca1:	or     edx,0x40000
1005dca7:	mov    esi,DWORD PTR [esp+0x28]
1005dcab:	mov    ecx,DWORD PTR [esp+0x24]
1005dcaf:	mov    eax,esi
1005dcb1:	not    eax
1005dcb3:	and    eax,edx
1005dcb5:	and    ecx,esi
1005dcb7:	or     eax,ecx
1005dcb9:	cmp    eax,edx
1005dcbb:	mov    DWORD PTR [esp+0x1c],eax
1005dcbf:	je     0x1005dd6f
1005dcc5:	mov    ebx,eax
1005dcc7:	call   0x1005dad9
1005dccc:	movzx  eax,ax
1005dccf:	mov    DWORD PTR [esp+0x10],eax
1005dcd3:	fldcw  WORD PTR [esp+0x10]
1005dcd7:	fstcw  WORD PTR [esp+0x10]
1005dcdc:	mov    ebx,DWORD PTR [esp+0x10]
1005dce0:	xor    edx,edx
1005dce2:	test   bl,0x1
1005dce5:	je     0x1005dcea
1005dce7:	push   0x10
1005dce9:	pop    edx
1005dcea:	test   bl,0x4
1005dced:	je     0x1005dcf2
1005dcef:	or     edx,0x8
1005dcf2:	test   bl,0x8
1005dcf5:	je     0x1005dcfa
1005dcf7:	or     edx,0x4
1005dcfa:	test   bl,0x10
1005dcfd:	je     0x1005dd02
1005dcff:	or     edx,0x2
1005dd02:	test   bl,0x20
1005dd05:	je     0x1005dd0a
1005dd07:	or     edx,0x1
1005dd0a:	test   bl,0x2
1005dd0d:	je     0x1005dd15
1005dd0f:	or     edx,0x80000
1005dd15:	movzx  ecx,bx
1005dd18:	mov    eax,ecx
1005dd1a:	and    eax,edi
1005dd1c:	je     0x1005dd42
1005dd1e:	cmp    eax,0x400
1005dd23:	je     0x1005dd3c
1005dd25:	cmp    eax,0x800
1005dd2a:	je     0x1005dd34
1005dd2c:	cmp    eax,edi
1005dd2e:	jne    0x1005dd42
1005dd30:	or     edx,ebp
1005dd32:	jmp    0x1005dd42
1005dd34:	or     edx,0x200
1005dd3a:	jmp    0x1005dd42
1005dd3c:	or     edx,0x100
1005dd42:	and    ecx,ebp
1005dd44:	je     0x1005dd56
1005dd46:	cmp    ecx,0x200
1005dd4c:	jne    0x1005dd5c
1005dd4e:	or     edx,0x10000
1005dd54:	jmp    0x1005dd5c
1005dd56:	or     edx,0x20000
1005dd5c:	test   bx,0x1000
1005dd61:	je     0x1005dd69
1005dd63:	or     edx,0x40000
1005dd69:	mov    eax,edx
1005dd6b:	mov    DWORD PTR [esp+0x1c],edx
1005dd6f:	cmp    DWORD PTR ds:0x10081564,0x0
1005dd76:	je     0x1005df02
1005dd7c:	and    esi,0x308031f
1005dd82:	mov    edi,esi
1005dd84:	stmxcsr DWORD PTR [esp+0x18]
1005dd89:	mov    eax,DWORD PTR [esp+0x18]
1005dd8d:	xor    esi,esi
1005dd8f:	test   al,al
1005dd91:	jns    0x1005dd96
1005dd93:	push   0x10
1005dd95:	pop    esi
1005dd96:	test   ax,0x200
1005dd9a:	je     0x1005dd9f
1005dd9c:	or     esi,0x8
1005dd9f:	test   ax,0x400
1005dda3:	je     0x1005dda8
1005dda5:	or     esi,0x4
1005dda8:	test   ax,0x800
1005ddac:	je     0x1005ddb1
1005ddae:	or     esi,0x2
1005ddb1:	test   ax,0x1000
1005ddb5:	je     0x1005ddba
1005ddb7:	or     esi,0x1
1005ddba:	test   ax,0x100
1005ddbe:	je     0x1005ddc6
1005ddc0:	or     esi,0x80000
1005ddc6:	mov    ecx,eax
1005ddc8:	mov    ebp,0x6000
1005ddcd:	and    ecx,ebp
1005ddcf:	je     0x1005ddfb
1005ddd1:	cmp    ecx,0x2000
1005ddd7:	je     0x1005ddf5
1005ddd9:	cmp    ecx,0x4000
1005dddf:	je     0x1005dded
1005dde1:	cmp    ecx,ebp
1005dde3:	jne    0x1005ddfb
1005dde5:	or     esi,0x300
1005ddeb:	jmp    0x1005ddfb
1005dded:	or     esi,0x200
1005ddf3:	jmp    0x1005ddfb
1005ddf5:	or     esi,0x100
1005ddfb:	mov    ebx,0x8040
1005de00:	and    eax,ebx
1005de02:	sub    eax,0x40
1005de05:	je     0x1005de23
1005de07:	sub    eax,0x7fc0
1005de0c:	je     0x1005de1b
1005de0e:	sub    eax,0x40
1005de11:	jne    0x1005de29
1005de13:	or     esi,0x1000000
1005de19:	jmp    0x1005de29
1005de1b:	or     esi,0x3000000
1005de21:	jmp    0x1005de29
1005de23:	or     esi,0x2000000
1005de29:	mov    edx,edi
1005de2b:	and    edi,DWORD PTR [esp+0x24]
1005de2f:	not    edx
1005de31:	and    edx,esi
1005de33:	or     edx,edi
1005de35:	cmp    edx,esi
1005de37:	jne    0x1005de40
1005de39:	mov    eax,esi
1005de3b:	jmp    0x1005deeb
1005de40:	call   0x1005db67
1005de45:	push   eax
1005de46:	mov    DWORD PTR [esp+0x2c],eax
1005de4a:	call   0x1005e0d6
1005de4f:	pop    ecx
1005de50:	stmxcsr DWORD PTR [esp+0x28]
1005de55:	mov    eax,DWORD PTR [esp+0x28]
1005de59:	xor    edx,edx
1005de5b:	test   al,al
1005de5d:	jns    0x1005de62
1005de5f:	push   0x10
1005de61:	pop    edx
1005de62:	mov    edi,0x200
1005de67:	test   edi,eax
1005de69:	je     0x1005de6e
1005de6b:	or     edx,0x8
1005de6e:	test   ax,0x400
1005de72:	je     0x1005de77
1005de74:	or     edx,0x4
1005de77:	test   ax,0x800
1005de7b:	je     0x1005de80
1005de7d:	or     edx,0x2
1005de80:	test   ax,0x1000
1005de84:	je     0x1005de89
1005de86:	or     edx,0x1
1005de89:	mov    esi,0x100
1005de8e:	test   esi,eax
1005de90:	je     0x1005de98
1005de92:	or     edx,0x80000
1005de98:	mov    ecx,eax
1005de9a:	and    ecx,ebp
1005de9c:	je     0x1005dec0
1005de9e:	cmp    ecx,0x2000
1005dea4:	je     0x1005debe
1005dea6:	cmp    ecx,0x4000
1005deac:	je     0x1005deba
1005deae:	cmp    ecx,ebp
1005deb0:	jne    0x1005dec0
1005deb2:	or     edx,0x300
1005deb8:	jmp    0x1005dec0
1005deba:	or     edx,edi
1005debc:	jmp    0x1005dec0
1005debe:	or     edx,esi
1005dec0:	and    eax,ebx
1005dec2:	sub    eax,0x40
1005dec5:	je     0x1005dee3
1005dec7:	sub    eax,0x7fc0
1005decc:	je     0x1005dedb
1005dece:	sub    eax,0x40
1005ded1:	jne    0x1005dee9
1005ded3:	or     edx,0x1000000
1005ded9:	jmp    0x1005dee9
1005dedb:	or     edx,0x3000000
1005dee1:	jmp    0x1005dee9
1005dee3:	or     edx,0x2000000
1005dee9:	mov    eax,edx
1005deeb:	mov    ecx,DWORD PTR [esp+0x1c]
1005deef:	mov    edx,eax
1005def1:	xor    edx,ecx
1005def3:	or     eax,ecx
1005def5:	test   edx,0x8031f
1005defb:	je     0x1005df02
1005defd:	or     eax,0x80000000
1005df02:	pop    edi
1005df03:	pop    esi
1005df04:	pop    ebp
1005df05:	pop    ebx
1005df06:	add    esp,0x10
1005df09:	ret    
1005df0a:	push   ebp
1005df0b:	mov    ebp,esp
1005df0d:	sub    esp,0x18
1005df10:	mov    eax,ds:0x1007d030
1005df15:	xor    eax,ebp
1005df17:	mov    DWORD PTR [ebp-0x4],eax
1005df1a:	mov    eax,DWORD PTR [ebp+0x10]
1005df1d:	push   ebx
1005df1e:	push   esi
1005df1f:	xor    esi,esi
1005df21:	cmp    DWORD PTR [ebp+0xc],esi
1005df24:	push   edi
1005df25:	mov    DWORD PTR [ebp-0x18],0x404e
1005df2c:	mov    DWORD PTR [eax],esi
1005df2e:	mov    DWORD PTR [eax+0x4],esi
1005df31:	mov    DWORD PTR [eax+0x8],esi
1005df34:	jbe    0x1005e080
1005df3a:	mov    edx,DWORD PTR [eax]
1005df3c:	mov    ebx,DWORD PTR [eax+0x4]
1005df3f:	mov    esi,eax
1005df41:	lea    edi,[ebp-0x10]
1005df44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005df45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005df46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1005df47:	mov    ecx,edx
1005df49:	shr    ecx,0x1f
1005df4c:	lea    edi,[edx+edx*1]
1005df4f:	lea    edx,[ebx+ebx*1]
1005df52:	or     edx,ecx
1005df54:	mov    ecx,DWORD PTR [eax+0x8]
1005df57:	mov    esi,ebx
1005df59:	shr    esi,0x1f
1005df5c:	add    ecx,ecx
1005df5e:	or     ecx,esi
1005df60:	mov    DWORD PTR [ebp-0x14],edi
1005df63:	mov    esi,edi
1005df65:	and    DWORD PTR [ebp-0x14],0x0
1005df69:	mov    ebx,edx
1005df6b:	shr    ebx,0x1f
1005df6e:	add    ecx,ecx
1005df70:	shr    edi,0x1f
1005df73:	or     ecx,ebx
1005df75:	mov    ebx,DWORD PTR [ebp-0x10]
1005df78:	add    esi,esi
1005df7a:	add    edx,edx
1005df7c:	or     edx,edi
1005df7e:	lea    edi,[esi+ebx*1]
1005df81:	cmp    edi,esi
1005df83:	mov    DWORD PTR [eax],esi
1005df85:	mov    DWORD PTR [eax+0x4],edx
1005df88:	mov    DWORD PTR [eax+0x8],ecx
1005df8b:	jb     0x1005df91
1005df8d:	cmp    edi,ebx
1005df8f:	jae    0x1005df98
1005df91:	mov    DWORD PTR [ebp-0x14],0x1
1005df98:	xor    ebx,ebx
1005df9a:	cmp    DWORD PTR [ebp-0x14],ebx
1005df9d:	mov    DWORD PTR [eax],edi
1005df9f:	je     0x1005dfbb
1005dfa1:	lea    esi,[edx+0x1]
1005dfa4:	cmp    esi,edx
1005dfa6:	jb     0x1005dfad
1005dfa8:	cmp    esi,0x1
1005dfab:	jae    0x1005dfb0
1005dfad:	xor    ebx,ebx
1005dfaf:	inc    ebx
1005dfb0:	test   ebx,ebx
1005dfb2:	mov    DWORD PTR [eax+0x4],esi
1005dfb5:	je     0x1005dfbb
1005dfb7:	inc    ecx
1005dfb8:	mov    DWORD PTR [eax+0x8],ecx
1005dfbb:	mov    ecx,DWORD PTR [eax+0x4]
1005dfbe:	mov    edx,DWORD PTR [ebp-0xc]
1005dfc1:	lea    ebx,[ecx+edx*1]
1005dfc4:	xor    esi,esi
1005dfc6:	cmp    ebx,ecx
1005dfc8:	jb     0x1005dfce
1005dfca:	cmp    ebx,edx
1005dfcc:	jae    0x1005dfd1
1005dfce:	xor    esi,esi
1005dfd0:	inc    esi
1005dfd1:	test   esi,esi
1005dfd3:	mov    DWORD PTR [eax+0x4],ebx
1005dfd6:	je     0x1005dfdb
1005dfd8:	inc    DWORD PTR [eax+0x8]
1005dfdb:	mov    ecx,DWORD PTR [ebp-0x8]
1005dfde:	add    DWORD PTR [eax+0x8],ecx
1005dfe1:	and    DWORD PTR [ebp-0x14],0x0
1005dfe5:	lea    ecx,[edi+edi*1]
1005dfe8:	mov    edx,edi
1005dfea:	shr    edx,0x1f
1005dfed:	lea    edi,[ebx+ebx*1]
1005dff0:	or     edi,edx
1005dff2:	mov    edx,DWORD PTR [eax+0x8]
1005dff5:	mov    esi,ebx
1005dff7:	shr    esi,0x1f
1005dffa:	lea    ebx,[edx+edx*1]
1005dffd:	mov    edx,DWORD PTR [ebp+0x8]
1005e000:	or     ebx,esi
1005e002:	mov    DWORD PTR [eax],ecx
1005e004:	mov    DWORD PTR [eax+0x4],edi
1005e007:	mov    DWORD PTR [eax+0x8],ebx
1005e00a:	movsx  edx,BYTE PTR [edx]
1005e00d:	lea    esi,[ecx+edx*1]
1005e010:	cmp    esi,ecx
1005e012:	mov    DWORD PTR [ebp-0x10],edx
1005e015:	jb     0x1005e01b
1005e017:	cmp    esi,edx
1005e019:	jae    0x1005e022
1005e01b:	mov    DWORD PTR [ebp-0x14],0x1
1005e022:	cmp    DWORD PTR [ebp-0x14],0x0
1005e026:	mov    DWORD PTR [eax],esi
1005e028:	je     0x1005e046
1005e02a:	lea    ecx,[edi+0x1]
1005e02d:	xor    edx,edx
1005e02f:	cmp    ecx,edi
1005e031:	jb     0x1005e038
1005e033:	cmp    ecx,0x1
1005e036:	jae    0x1005e03b
1005e038:	xor    edx,edx
1005e03a:	inc    edx
1005e03b:	test   edx,edx
1005e03d:	mov    DWORD PTR [eax+0x4],ecx
1005e040:	je     0x1005e046
1005e042:	inc    ebx
1005e043:	mov    DWORD PTR [eax+0x8],ebx
1005e046:	dec    DWORD PTR [ebp+0xc]
1005e049:	inc    DWORD PTR [ebp+0x8]
1005e04c:	cmp    DWORD PTR [ebp+0xc],0x0
1005e050:	ja     0x1005df3a
1005e056:	xor    esi,esi
1005e058:	jmp    0x1005e080
1005e05a:	mov    ecx,DWORD PTR [eax+0x4]
1005e05d:	mov    edx,ecx
1005e05f:	shr    edx,0x10
1005e062:	mov    DWORD PTR [eax+0x8],edx
1005e065:	mov    edx,DWORD PTR [eax]
1005e067:	mov    edi,edx
1005e069:	shl    ecx,0x10
1005e06c:	shr    edi,0x10
1005e06f:	or     ecx,edi
1005e071:	shl    edx,0x10
1005e074:	add    DWORD PTR [ebp-0x18],0xfff0
1005e07b:	mov    DWORD PTR [eax+0x4],ecx
1005e07e:	mov    DWORD PTR [eax],edx
1005e080:	cmp    DWORD PTR [eax+0x8],esi
1005e083:	je     0x1005e05a
1005e085:	mov    ebx,0x8000
1005e08a:	test   DWORD PTR [eax+0x8],ebx
1005e08d:	jne    0x1005e0bf
1005e08f:	mov    esi,DWORD PTR [eax]
1005e091:	mov    edi,DWORD PTR [eax+0x4]
1005e094:	add    DWORD PTR [ebp-0x18],0xffff
1005e09b:	mov    ecx,esi
1005e09d:	add    esi,esi
1005e09f:	shr    ecx,0x1f
1005e0a2:	mov    DWORD PTR [eax],esi
1005e0a4:	lea    esi,[edi+edi*1]
1005e0a7:	or     esi,ecx
1005e0a9:	mov    ecx,DWORD PTR [eax+0x8]
1005e0ac:	mov    edx,edi
1005e0ae:	shr    edx,0x1f
1005e0b1:	add    ecx,ecx
1005e0b3:	or     ecx,edx
1005e0b5:	test   ebx,ecx
1005e0b7:	mov    DWORD PTR [eax+0x4],esi
1005e0ba:	mov    DWORD PTR [eax+0x8],ecx
1005e0bd:	je     0x1005e08f
1005e0bf:	mov    cx,WORD PTR [ebp-0x18]
1005e0c3:	mov    WORD PTR [eax+0xa],cx
1005e0c7:	mov    ecx,DWORD PTR [ebp-0x4]
1005e0ca:	pop    edi
1005e0cb:	pop    esi
1005e0cc:	xor    ecx,ebp
1005e0ce:	pop    ebx
1005e0cf:	call   0x10041d97
1005e0d4:	leave  
1005e0d5:	ret    
1005e0d6:	push   0x8
1005e0d8:	push   0x10073800
1005e0dd:	call   0x100459e4
1005e0e2:	xor    eax,eax
1005e0e4:	cmp    DWORD PTR ds:0x10081564,eax
1005e0ea:	je     0x1005e142
1005e0ec:	test   BYTE PTR [ebp+0x8],0x40
1005e0f0:	je     0x1005e13a
1005e0f2:	cmp    DWORD PTR ds:0x1007e4e4,eax
1005e0f8:	je     0x1005e13a
1005e0fa:	mov    DWORD PTR [ebp-0x4],eax
1005e0fd:	ldmxcsr DWORD PTR [ebp+0x8]
1005e101:	jmp    0x1005e131
1005e103:	mov    eax,DWORD PTR [ebp-0x14]
1005e106:	mov    eax,DWORD PTR [eax]
1005e108:	mov    eax,DWORD PTR [eax]
1005e10a:	cmp    eax,0xc0000005
1005e10f:	je     0x1005e11b
1005e111:	cmp    eax,0xc000001d
1005e116:	je     0x1005e11b
1005e118:	xor    eax,eax
1005e11a:	ret    
1005e11b:	xor    eax,eax
1005e11d:	inc    eax
1005e11e:	ret    
1005e11f:	mov    esp,DWORD PTR [ebp-0x18]
1005e122:	and    DWORD PTR ds:0x1007e4e4,0x0
1005e129:	and    DWORD PTR [ebp+0x8],0xffffffbf
1005e12d:	ldmxcsr DWORD PTR [ebp+0x8]
1005e131:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005e138:	jmp    0x1005e142
1005e13a:	and    DWORD PTR [ebp+0x8],0xffffffbf
1005e13e:	ldmxcsr DWORD PTR [ebp+0x8]
1005e142:	call   0x10045a29
1005e147:	ret    
1005e148:	int3   
1005e149:	int3   
1005e14a:	int3   
1005e14b:	int3   
1005e14c:	int3   
1005e14d:	int3   
1005e14e:	int3   
1005e14f:	int3   
1005e150:	push   edi
1005e151:	push   esi
1005e152:	push   ebx
1005e153:	xor    edi,edi
1005e155:	mov    eax,DWORD PTR [esp+0x14]
1005e159:	or     eax,eax
1005e15b:	jge    0x1005e171
1005e15d:	inc    edi
1005e15e:	mov    edx,DWORD PTR [esp+0x10]
1005e162:	neg    eax
1005e164:	neg    edx
1005e166:	sbb    eax,0x0
1005e169:	mov    DWORD PTR [esp+0x14],eax
1005e16d:	mov    DWORD PTR [esp+0x10],edx
1005e171:	mov    eax,DWORD PTR [esp+0x1c]
1005e175:	or     eax,eax
1005e177:	jge    0x1005e18d
1005e179:	inc    edi
1005e17a:	mov    edx,DWORD PTR [esp+0x18]
1005e17e:	neg    eax
1005e180:	neg    edx
1005e182:	sbb    eax,0x0
1005e185:	mov    DWORD PTR [esp+0x1c],eax
1005e189:	mov    DWORD PTR [esp+0x18],edx
1005e18d:	or     eax,eax
1005e18f:	jne    0x1005e1a9
1005e191:	mov    ecx,DWORD PTR [esp+0x18]
1005e195:	mov    eax,DWORD PTR [esp+0x14]
1005e199:	xor    edx,edx
1005e19b:	div    ecx
1005e19d:	mov    ebx,eax
1005e19f:	mov    eax,DWORD PTR [esp+0x10]
1005e1a3:	div    ecx
1005e1a5:	mov    edx,ebx
1005e1a7:	jmp    0x1005e1ea
1005e1a9:	mov    ebx,eax
1005e1ab:	mov    ecx,DWORD PTR [esp+0x18]
1005e1af:	mov    edx,DWORD PTR [esp+0x14]
1005e1b3:	mov    eax,DWORD PTR [esp+0x10]
1005e1b7:	shr    ebx,1
1005e1b9:	rcr    ecx,1
1005e1bb:	shr    edx,1
1005e1bd:	rcr    eax,1
1005e1bf:	or     ebx,ebx
1005e1c1:	jne    0x1005e1b7
1005e1c3:	div    ecx
1005e1c5:	mov    esi,eax
1005e1c7:	mul    DWORD PTR [esp+0x1c]
1005e1cb:	mov    ecx,eax
1005e1cd:	mov    eax,DWORD PTR [esp+0x18]
1005e1d1:	mul    esi
1005e1d3:	add    edx,ecx
1005e1d5:	jb     0x1005e1e5
1005e1d7:	cmp    edx,DWORD PTR [esp+0x14]
1005e1db:	ja     0x1005e1e5
1005e1dd:	jb     0x1005e1e6
1005e1df:	cmp    eax,DWORD PTR [esp+0x10]
1005e1e3:	jbe    0x1005e1e6
1005e1e5:	dec    esi
1005e1e6:	xor    edx,edx
1005e1e8:	mov    eax,esi
1005e1ea:	dec    edi
1005e1eb:	jne    0x1005e1f4
1005e1ed:	neg    edx
1005e1ef:	neg    eax
1005e1f1:	sbb    edx,0x0
1005e1f4:	pop    ebx
1005e1f5:	pop    esi
1005e1f6:	pop    edi
1005e1f7:	ret    0x10
1005e1fa:	int3   
1005e1fb:	int3   
1005e1fc:	push   0x10045a40
1005e201:	push   DWORD PTR fs:0x0
1005e208:	mov    eax,DWORD PTR [esp+0x10]
1005e20c:	mov    DWORD PTR [esp+0x10],ebp
1005e210:	lea    ebp,[esp+0x10]
1005e214:	sub    esp,eax
1005e216:	push   ebx
1005e217:	push   esi
1005e218:	push   edi
1005e219:	mov    eax,ds:0x1007d030
1005e21e:	xor    DWORD PTR [ebp-0x4],eax
1005e221:	xor    eax,ebp
1005e223:	mov    DWORD PTR [ebp-0x1c],eax
1005e226:	push   eax
1005e227:	mov    DWORD PTR [ebp-0x18],esp
1005e22a:	push   DWORD PTR [ebp-0x8]
1005e22d:	mov    eax,DWORD PTR [ebp-0x4]
1005e230:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1005e237:	mov    DWORD PTR [ebp-0x8],eax
1005e23a:	lea    eax,[ebp-0x10]
1005e23d:	mov    fs:0x0,eax
1005e243:	ret    
1005e244:	mov    ecx,DWORD PTR [ebp-0x1c]
1005e247:	xor    ecx,ebp
1005e249:	call   0x10041d97
1005e24e:	jmp    0x10045a29
1005e253:	int3   
1005e254:	int3   
1005e255:	int3   
1005e256:	int3   
1005e257:	int3   
1005e258:	int3   
1005e259:	int3   
1005e25a:	int3   
1005e25b:	int3   
1005e25c:	int3   
1005e25d:	int3   
1005e25e:	int3   
1005e25f:	int3   
1005e260:	cmp    DWORD PTR ds:0x10081564,0x0
1005e267:	je     0x1005e296
1005e269:	push   ebp
1005e26a:	mov    ebp,esp
1005e26c:	sub    esp,0x8
1005e26f:	and    esp,0xfffffff8
1005e272:	fstp   QWORD PTR [esp]
1005e275:	cvttsd2si eax,QWORD PTR [esp]
1005e27a:	leave  
1005e27b:	ret    
1005e27c:	cmp    DWORD PTR ds:0x10081564,0x0
1005e283:	je     0x1005e296
1005e285:	sub    esp,0x4
1005e288:	fnstcw WORD PTR [esp]
1005e28b:	pop    eax
1005e28c:	and    ax,0x7f
1005e290:	cmp    ax,0x7f
1005e294:	je     0x1005e269
1005e296:	push   ebp
1005e297:	mov    ebp,esp
1005e299:	sub    esp,0x20
1005e29c:	and    esp,0xfffffff0
1005e29f:	fld    st(0)
1005e2a1:	fst    DWORD PTR [esp+0x18]
1005e2a5:	fistp  QWORD PTR [esp+0x10]
1005e2a9:	fild   QWORD PTR [esp+0x10]
1005e2ad:	mov    edx,DWORD PTR [esp+0x18]
1005e2b1:	mov    eax,DWORD PTR [esp+0x10]
1005e2b5:	test   eax,eax
1005e2b7:	je     0x1005e2f5
1005e2b9:	fsubp  st(1),st
1005e2bb:	test   edx,edx
1005e2bd:	jns    0x1005e2dd
1005e2bf:	fstp   DWORD PTR [esp]
1005e2c2:	mov    ecx,DWORD PTR [esp]
1005e2c5:	xor    ecx,0x80000000
1005e2cb:	add    ecx,0x7fffffff
1005e2d1:	adc    eax,0x0
1005e2d4:	mov    edx,DWORD PTR [esp+0x14]
1005e2d8:	adc    edx,0x0
1005e2db:	jmp    0x1005e309
1005e2dd:	fstp   DWORD PTR [esp]
1005e2e0:	mov    ecx,DWORD PTR [esp]
1005e2e3:	add    ecx,0x7fffffff
1005e2e9:	sbb    eax,0x0
1005e2ec:	mov    edx,DWORD PTR [esp+0x14]
1005e2f0:	sbb    edx,0x0
1005e2f3:	jmp    0x1005e309
1005e2f5:	mov    edx,DWORD PTR [esp+0x14]
1005e2f9:	test   edx,0x7fffffff
1005e2ff:	jne    0x1005e2b9
1005e301:	fstp   DWORD PTR [esp+0x18]
1005e305:	fstp   DWORD PTR [esp+0x18]
1005e309:	leave  
1005e30a:	ret    
1005e30b:	int3   
1005e30c:	int3   
1005e30d:	int3   
1005e30e:	int3   
1005e30f:	int3   
1005e310:	push   ebx
1005e311:	push   esi
1005e312:	mov    eax,DWORD PTR [esp+0x18]
1005e316:	or     eax,eax
1005e318:	jne    0x1005e332
1005e31a:	mov    ecx,DWORD PTR [esp+0x14]
1005e31e:	mov    eax,DWORD PTR [esp+0x10]
1005e322:	xor    edx,edx
1005e324:	div    ecx
1005e326:	mov    ebx,eax
1005e328:	mov    eax,DWORD PTR [esp+0xc]
1005e32c:	div    ecx
1005e32e:	mov    edx,ebx
1005e330:	jmp    0x1005e373
1005e332:	mov    ecx,eax
1005e334:	mov    ebx,DWORD PTR [esp+0x14]
1005e338:	mov    edx,DWORD PTR [esp+0x10]
1005e33c:	mov    eax,DWORD PTR [esp+0xc]
1005e340:	shr    ecx,1
1005e342:	rcr    ebx,1
1005e344:	shr    edx,1
1005e346:	rcr    eax,1
1005e348:	or     ecx,ecx
1005e34a:	jne    0x1005e340
1005e34c:	div    ebx
1005e34e:	mov    esi,eax
1005e350:	mul    DWORD PTR [esp+0x18]
1005e354:	mov    ecx,eax
1005e356:	mov    eax,DWORD PTR [esp+0x14]
1005e35a:	mul    esi
1005e35c:	add    edx,ecx
1005e35e:	jb     0x1005e36e
1005e360:	cmp    edx,DWORD PTR [esp+0x10]
1005e364:	ja     0x1005e36e
1005e366:	jb     0x1005e36f
1005e368:	cmp    eax,DWORD PTR [esp+0xc]
1005e36c:	jbe    0x1005e36f
1005e36e:	dec    esi
1005e36f:	xor    edx,edx
1005e371:	mov    eax,esi
1005e373:	pop    esi
1005e374:	pop    ebx
1005e375:	ret    0x10
1005e378:	int3   
1005e379:	int3   
1005e37a:	int3   
1005e37b:	int3   
1005e37c:	int3   
1005e37d:	int3   
1005e37e:	int3   
1005e37f:	int3   
1005e380:	mov    edx,DWORD PTR [esp+0x8]
1005e384:	lea    eax,[edx+0xc]
1005e387:	mov    ecx,DWORD PTR [edx-0x14]
1005e38a:	xor    ecx,eax
1005e38c:	call   0x10041d97
1005e391:	mov    eax,0x10073588
1005e396:	jmp    0x10057fec
1005e39b:	mov    edx,DWORD PTR [esp+0x8]
1005e39f:	lea    eax,[edx+0xc]
1005e3a2:	mov    ecx,DWORD PTR [edx-0x14]
1005e3a5:	xor    ecx,eax
1005e3a7:	call   0x10041d97
1005e3ac:	mov    eax,0x100736f8
1005e3b1:	jmp    0x10057fec
1005e3b6:	mov    ecx,DWORD PTR [ebp-0x10]
1005e3b9:	jmp    0x1002ac67
1005e3be:	mov    edx,DWORD PTR [esp+0x8]
1005e3c2:	lea    eax,[edx+0xc]
1005e3c5:	mov    ecx,DWORD PTR [edx-0x14]
1005e3c8:	xor    ecx,eax
1005e3ca:	call   0x10041d97
1005e3cf:	mov    eax,0x10073a04
1005e3d4:	jmp    0x10057fec
1005e3d9:	mov    eax,DWORD PTR [ebp-0x10]
1005e3dc:	add    eax,0x4
1005e3df:	jmp    0x1001e534
1005e3e4:	mov    edx,DWORD PTR [esp+0x8]
1005e3e8:	lea    eax,[edx+0xc]
1005e3eb:	mov    ecx,DWORD PTR [edx-0x14]
1005e3ee:	xor    ecx,eax
1005e3f0:	call   0x10041d97
1005e3f5:	mov    eax,0x10073a30
1005e3fa:	jmp    0x10057fec
1005e3ff:	lea    eax,[ebp+0x8]
1005e402:	jmp    0x1001e534
1005e407:	mov    edx,DWORD PTR [esp+0x8]
1005e40b:	lea    eax,[edx+0xc]
1005e40e:	mov    ecx,DWORD PTR [edx-0x10]
1005e411:	xor    ecx,eax
1005e413:	call   0x10041d97
1005e418:	mov    eax,0x10073a5c
1005e41d:	jmp    0x10057fec
1005e422:	lea    eax,[ebp+0x10]
1005e425:	jmp    0x1001e534
1005e42a:	mov    edx,DWORD PTR [esp+0x8]
1005e42e:	lea    eax,[edx+0xc]
1005e431:	mov    ecx,DWORD PTR [edx-0x10]
1005e434:	xor    ecx,eax
1005e436:	call   0x10041d97
1005e43b:	mov    eax,0x10073a88
1005e440:	jmp    0x10057fec
1005e445:	lea    eax,[ebp-0x10]
1005e448:	jmp    0x1001e534
1005e44d:	mov    edx,DWORD PTR [esp+0x8]
1005e451:	lea    eax,[edx+0xc]
1005e454:	mov    ecx,DWORD PTR [edx-0x14]
1005e457:	xor    ecx,eax
1005e459:	call   0x10041d97
1005e45e:	mov    eax,0x10073ab4
1005e463:	jmp    0x10057fec
1005e468:	lea    eax,[ebp-0x28]
1005e46b:	jmp    0x1001e534
1005e470:	mov    edx,DWORD PTR [esp+0x8]
1005e474:	lea    eax,[edx+0xc]
1005e477:	mov    ecx,DWORD PTR [edx-0x30]
1005e47a:	xor    ecx,eax
1005e47c:	call   0x10041d97
1005e481:	mov    ecx,DWORD PTR [edx-0x4]
1005e484:	xor    ecx,eax
1005e486:	call   0x10041d97
1005e48b:	mov    eax,0x10073ae0
1005e490:	jmp    0x10057fec
1005e495:	int3   
1005e496:	int3   
1005e497:	int3   
1005e498:	int3   
1005e499:	int3   
1005e49a:	int3   
1005e49b:	int3   
1005e49c:	int3   
1005e49d:	int3   
1005e49e:	int3   
1005e49f:	int3   
1005e4a0:	lea    eax,[ebp-0x10]
1005e4a3:	jmp    0x100020be
1005e4a8:	mov    edx,DWORD PTR [esp+0x8]
1005e4ac:	lea    eax,[edx-0x1c]
1005e4af:	mov    ecx,DWORD PTR [edx-0x20]
1005e4b2:	xor    ecx,eax
1005e4b4:	call   0x10041d97
1005e4b9:	mov    eax,0x10073b0c
1005e4be:	jmp    0x10057fec
1005e4c3:	int3   
1005e4c4:	int3   
1005e4c5:	int3   
1005e4c6:	int3   
1005e4c7:	int3   
1005e4c8:	int3   
1005e4c9:	int3   
1005e4ca:	int3   
1005e4cb:	int3   
1005e4cc:	int3   
1005e4cd:	int3   
1005e4ce:	int3   
1005e4cf:	int3   
1005e4d0:	lea    eax,[ebp-0x54]
1005e4d3:	jmp    0x100020be
1005e4d8:	lea    eax,[ebp-0x4c]
1005e4db:	jmp    0x100020be
1005e4e0:	mov    edx,DWORD PTR [esp+0x8]
1005e4e4:	lea    eax,[edx-0x58]
1005e4e7:	mov    ecx,DWORD PTR [edx-0x5c]
1005e4ea:	xor    ecx,eax
1005e4ec:	call   0x10041d97
1005e4f1:	mov    eax,0x10073b40
1005e4f6:	jmp    0x10057fec
1005e4fb:	int3   
1005e4fc:	int3   
1005e4fd:	int3   
1005e4fe:	int3   
1005e4ff:	int3   
1005e500:	lea    eax,[ebp-0x50]
1005e503:	jmp    0x100020be
1005e508:	lea    eax,[ebp-0x4c]
1005e50b:	jmp    0x100020be
1005e510:	mov    edx,DWORD PTR [esp+0x8]
1005e514:	lea    eax,[edx-0x5c]
1005e517:	mov    ecx,DWORD PTR [edx-0x60]
1005e51a:	xor    ecx,eax
1005e51c:	call   0x10041d97
1005e521:	mov    eax,0x10073b74
1005e526:	jmp    0x10057fec
1005e52b:	mov    ecx,DWORD PTR [ebp+0x8]
1005e52e:	jmp    0x1002ac67
1005e533:	mov    eax,DWORD PTR [ebp+0x8]
1005e536:	add    eax,0x4
1005e539:	jmp    0x1002ce41
1005e53e:	mov    edx,DWORD PTR [esp+0x8]
1005e542:	lea    eax,[edx+0xc]
1005e545:	mov    ecx,DWORD PTR [edx-0x10]
1005e548:	xor    ecx,eax
1005e54a:	call   0x10041d97
1005e54f:	mov    eax,0x10073ba8
1005e554:	jmp    0x10057fec
1005e559:	lea    ecx,[ebp-0x20]
1005e55c:	jmp    0x10022074
1005e561:	mov    edx,DWORD PTR [esp+0x8]
1005e565:	lea    eax,[edx+0xc]
1005e568:	mov    ecx,DWORD PTR [edx-0x24]
1005e56b:	xor    ecx,eax
1005e56d:	call   0x10041d97
1005e572:	mov    eax,0x10073bd4
1005e577:	jmp    0x10057fec
1005e57c:	mov    edx,DWORD PTR [esp+0x8]
1005e580:	lea    eax,[edx+0xc]
1005e583:	mov    ecx,DWORD PTR [edx-0x14]
1005e586:	xor    ecx,eax
1005e588:	call   0x10041d97
1005e58d:	mov    eax,0x10073c2c
1005e592:	jmp    0x10057fec
1005e597:	mov    edx,DWORD PTR [esp+0x8]
1005e59b:	lea    eax,[edx+0xc]
1005e59e:	mov    ecx,DWORD PTR [edx-0x1c]
1005e5a1:	xor    ecx,eax
1005e5a3:	call   0x10041d97
1005e5a8:	mov    eax,0x10073c84
1005e5ad:	jmp    0x10057fec
1005e5b2:	push   DWORD PTR [ebp-0x20]
1005e5b5:	call   0x100422c0
1005e5ba:	pop    ecx
1005e5bb:	ret    
1005e5bc:	lea    eax,[ebp-0x14]
1005e5bf:	jmp    0x1002af99
1005e5c4:	mov    edx,DWORD PTR [esp+0x8]
1005e5c8:	lea    eax,[edx+0xc]
1005e5cb:	mov    ecx,DWORD PTR [edx-0x28]
1005e5ce:	xor    ecx,eax
1005e5d0:	call   0x10041d97
1005e5d5:	mov    eax,0x10073cec
1005e5da:	jmp    0x10057fec
1005e5df:	lea    eax,[ebp-0x10]
1005e5e2:	jmp    0x100020be
1005e5e7:	mov    edx,DWORD PTR [esp+0x8]
1005e5eb:	lea    eax,[edx+0xc]
1005e5ee:	mov    ecx,DWORD PTR [edx-0x18]
1005e5f1:	xor    ecx,eax
1005e5f3:	call   0x10041d97
1005e5f8:	mov    eax,0x10073d34
1005e5fd:	jmp    0x10057fec
1005e602:	push   DWORD PTR [ebp-0x14]
1005e605:	call   0x100422c0
1005e60a:	pop    ecx
1005e60b:	ret    
1005e60c:	lea    eax,[ebp+0x8]
1005e60f:	jmp    0x1002af99
1005e614:	mov    edx,DWORD PTR [esp+0x8]
1005e618:	lea    eax,[edx+0xc]
1005e61b:	mov    ecx,DWORD PTR [edx-0x24]
1005e61e:	xor    ecx,eax
1005e620:	call   0x10041d97
1005e625:	mov    eax,0x10073d9c
1005e62a:	jmp    0x10057fec
1005e62f:	mov    edx,DWORD PTR [esp+0x8]
1005e633:	lea    eax,[edx+0xc]
1005e636:	mov    ecx,DWORD PTR [edx-0x1c]
1005e639:	xor    ecx,eax
1005e63b:	call   0x10041d97
1005e640:	mov    eax,0x10073df4
1005e645:	jmp    0x10057fec
1005e64a:	mov    eax,DWORD PTR [ebp-0x10]
1005e64d:	and    eax,0x1
1005e650:	je     0x1005e662
1005e656:	and    DWORD PTR [ebp-0x10],0xfffffffe
1005e65a:	mov    edi,DWORD PTR [ebp+0x8]
1005e65d:	jmp    0x100024dc
1005e662:	ret    
1005e663:	push   DWORD PTR [ebp-0x14]
1005e666:	call   0x10041d92
1005e66b:	pop    ecx
1005e66c:	ret    
1005e66d:	mov    edx,DWORD PTR [esp+0x8]
1005e671:	lea    eax,[edx+0xc]
1005e674:	mov    ecx,DWORD PTR [edx-0x18]
1005e677:	xor    ecx,eax
1005e679:	call   0x10041d97
1005e67e:	mov    eax,0x10073e28
1005e683:	jmp    0x10057fec
1005e688:	mov    edx,DWORD PTR [esp+0x8]
1005e68c:	lea    eax,[edx+0xc]
1005e68f:	mov    ecx,DWORD PTR [edx-0x1c]
1005e692:	xor    ecx,eax
1005e694:	call   0x10041d97
1005e699:	mov    eax,0x10073eb4
1005e69e:	jmp    0x10057fec
1005e6a3:	mov    ecx,DWORD PTR [ebp-0x10]
1005e6a6:	jmp    0x10041ed0
1005e6ab:	mov    edx,DWORD PTR [esp+0x8]
1005e6af:	lea    eax,[edx+0xc]
1005e6b2:	mov    ecx,DWORD PTR [edx-0x14]
1005e6b5:	xor    ecx,eax
1005e6b7:	call   0x10041d97
1005e6bc:	mov    eax,0x10073ee0
1005e6c1:	jmp    0x10057fec
1005e6c6:	mov    edx,DWORD PTR [esp+0x8]
1005e6ca:	lea    eax,[edx+0xc]
1005e6cd:	mov    ecx,DWORD PTR [edx-0x18]
1005e6d0:	xor    ecx,eax
1005e6d2:	call   0x10041d97
1005e6d7:	mov    eax,0x10073f38
1005e6dc:	jmp    0x10057fec
1005e6e1:	mov    edx,DWORD PTR [esp+0x8]
1005e6e5:	lea    eax,[edx+0xc]
1005e6e8:	mov    ecx,DWORD PTR [edx-0x1c]
1005e6eb:	xor    ecx,eax
1005e6ed:	call   0x10041d97
1005e6f2:	mov    eax,0x10073f90
1005e6f7:	jmp    0x10057fec
1005e6fc:	mov    edx,DWORD PTR [esp+0x8]
1005e700:	lea    eax,[edx+0xc]
1005e703:	mov    ecx,DWORD PTR [edx-0x1c]
1005e706:	xor    ecx,eax
1005e708:	call   0x10041d97
1005e70d:	mov    eax,0x10073fe8
1005e712:	jmp    0x10057fec
1005e717:	mov    edx,DWORD PTR [esp+0x8]
1005e71b:	lea    eax,[edx+0xc]
1005e71e:	mov    ecx,DWORD PTR [edx-0x1c]
1005e721:	xor    ecx,eax
1005e723:	call   0x10041d97
1005e728:	mov    eax,0x10074040
1005e72d:	jmp    0x10057fec
1005e732:	mov    edx,DWORD PTR [esp+0x8]
1005e736:	lea    eax,[edx+0xc]
1005e739:	mov    ecx,DWORD PTR [edx-0x1c]
1005e73c:	xor    ecx,eax
1005e73e:	call   0x10041d97
1005e743:	mov    eax,0x10074098
1005e748:	jmp    0x10057fec
1005e74d:	mov    edx,DWORD PTR [esp+0x8]
1005e751:	lea    eax,[edx+0xc]
1005e754:	mov    ecx,DWORD PTR [edx-0x1c]
1005e757:	xor    ecx,eax
1005e759:	call   0x10041d97
1005e75e:	mov    eax,0x100740f0
1005e763:	jmp    0x10057fec
1005e768:	lea    esi,[ebp-0x18]
1005e76b:	jmp    0x1000713b
1005e770:	mov    edx,DWORD PTR [esp+0x8]
1005e774:	lea    eax,[edx+0xc]
1005e777:	mov    ecx,DWORD PTR [edx-0x20]
1005e77a:	xor    ecx,eax
1005e77c:	call   0x10041d97
1005e781:	mov    ecx,DWORD PTR [edx-0x8]
1005e784:	xor    ecx,eax
1005e786:	call   0x10041d97
1005e78b:	mov    eax,0x10074150
1005e790:	jmp    0x10057fec
1005e795:	mov    edx,DWORD PTR [esp+0x8]
1005e799:	lea    eax,[edx+0xc]
1005e79c:	mov    ecx,DWORD PTR [edx-0x1c]
1005e79f:	xor    ecx,eax
1005e7a1:	call   0x10041d97
1005e7a6:	mov    eax,0x100741a8
1005e7ab:	jmp    0x10057fec
1005e7b0:	mov    edx,DWORD PTR [esp+0x8]
1005e7b4:	lea    eax,[edx+0xc]
1005e7b7:	mov    ecx,DWORD PTR [edx-0x1c]
1005e7ba:	xor    ecx,eax
1005e7bc:	call   0x10041d97
1005e7c1:	mov    eax,0x10074200
1005e7c6:	jmp    0x10057fec
1005e7cb:	lea    eax,[ebp-0x18]
1005e7ce:	jmp    0x1001e534
1005e7d3:	lea    eax,[ebp+0xc]
1005e7d6:	jmp    0x1001e534
1005e7db:	lea    eax,[ebp-0x18]
1005e7de:	jmp    0x1001e534
1005e7e3:	lea    eax,[ebp+0xc]
1005e7e6:	jmp    0x1001e534
1005e7eb:	lea    eax,[ebp-0x14]
1005e7ee:	jmp    0x1001e534
1005e7f3:	lea    eax,[ebp+0x10]
1005e7f6:	jmp    0x1001e534
1005e7fb:	lea    eax,[ebp-0x1c]
1005e7fe:	jmp    0x1001e534
1005e803:	mov    edx,DWORD PTR [esp+0x8]
1005e807:	lea    eax,[edx+0xc]
1005e80a:	mov    ecx,DWORD PTR [edx-0x28]
1005e80d:	xor    ecx,eax
1005e80f:	call   0x10041d97
1005e814:	mov    eax,0x1007425c
1005e819:	jmp    0x10057fec
1005e81e:	lea    eax,[ebp+0x8]
1005e821:	jmp    0x1002af99
1005e826:	mov    edx,DWORD PTR [esp+0x8]
1005e82a:	lea    eax,[edx+0xc]
1005e82d:	mov    ecx,DWORD PTR [edx-0x14]
1005e830:	xor    ecx,eax
1005e832:	call   0x10041d97
1005e837:	mov    eax,0x10074288
1005e83c:	jmp    0x10057fec
1005e841:	lea    eax,[ebp-0x10]
1005e844:	jmp    0x1002af99
1005e849:	mov    edx,DWORD PTR [esp+0x8]
1005e84d:	lea    eax,[edx+0xc]
1005e850:	mov    ecx,DWORD PTR [edx-0x28]
1005e853:	xor    ecx,eax
1005e855:	call   0x10041d97
1005e85a:	mov    ecx,DWORD PTR [edx+0x3f4]
1005e860:	xor    ecx,eax
1005e862:	call   0x10041d97
1005e867:	mov    eax,0x100742b4
1005e86c:	jmp    0x10057fec
1005e871:	lea    ecx,[ebp-0x24]
1005e874:	jmp    0x10010991
1005e879:	lea    eax,[ebp-0x10]
1005e87c:	jmp    0x1001e534
1005e881:	lea    eax,[ebp-0x18]
1005e884:	jmp    0x1001e534
1005e889:	lea    eax,[ebp-0x1c]
1005e88c:	jmp    0x1001e534
1005e891:	mov    edx,DWORD PTR [esp+0x8]
1005e895:	lea    eax,[edx+0xc]
1005e898:	mov    ecx,DWORD PTR [edx-0x28]
1005e89b:	xor    ecx,eax
1005e89d:	call   0x10041d97
1005e8a2:	mov    ecx,DWORD PTR [edx+0x214]
1005e8a8:	xor    ecx,eax
1005e8aa:	call   0x10041d97
1005e8af:	mov    eax,0x100742f8
1005e8b4:	jmp    0x10057fec
1005e8b9:	mov    ecx,DWORD PTR [ebp+0x8]
1005e8bc:	jmp    0x1000312b
1005e8c1:	mov    ecx,DWORD PTR [ebp+0x8]
1005e8c4:	add    ecx,0x1c
1005e8c7:	jmp    0x1000312b
1005e8cc:	mov    edx,DWORD PTR [esp+0x8]
1005e8d0:	lea    eax,[edx+0xc]
1005e8d3:	mov    ecx,DWORD PTR [edx-0x10]
1005e8d6:	xor    ecx,eax
1005e8d8:	call   0x10041d97
1005e8dd:	mov    eax,0x1007432c
1005e8e2:	jmp    0x10057fec
1005e8e7:	jmp    0x1000207c
1005e8ec:	mov    edx,DWORD PTR [esp+0x8]
1005e8f0:	lea    eax,[edx+0xc]
1005e8f3:	mov    ecx,DWORD PTR [edx-0x18]
1005e8f6:	xor    ecx,eax
1005e8f8:	call   0x10041d97
1005e8fd:	mov    eax,0x1007438c
1005e902:	jmp    0x10057fec
1005e907:	jmp    0x1000207c
1005e90c:	mov    edx,DWORD PTR [esp+0x8]
1005e910:	lea    eax,[edx+0xc]
1005e913:	mov    ecx,DWORD PTR [edx-0x18]
1005e916:	xor    ecx,eax
1005e918:	call   0x10041d97
1005e91d:	mov    eax,0x100743ec
1005e922:	jmp    0x10057fec
1005e927:	lea    ecx,[ebp-0x10]
1005e92a:	jmp    0x10015ad1
1005e92f:	mov    edx,DWORD PTR [esp+0x8]
1005e933:	lea    eax,[edx+0xc]
1005e936:	mov    ecx,DWORD PTR [edx-0x14]
1005e939:	xor    ecx,eax
1005e93b:	call   0x10041d97
1005e940:	mov    eax,0x10074418
1005e945:	jmp    0x10057fec
1005e94a:	lea    eax,[ebp+0x0]
1005e94d:	jmp    0x10017570
1005e952:	lea    eax,[ebp+0x0]
1005e955:	jmp    0x10017570
1005e95a:	mov    edx,DWORD PTR [esp+0x8]
1005e95e:	lea    eax,[edx+0xc]
1005e961:	mov    ecx,DWORD PTR [edx-0x2c]
1005e964:	xor    ecx,eax
1005e966:	call   0x10041d97
1005e96b:	mov    ecx,DWORD PTR [edx+0x2110]
1005e971:	xor    ecx,eax
1005e973:	call   0x10041d97
1005e978:	mov    eax,0x100744b4
1005e97d:	jmp    0x10057fec
1005e982:	mov    ecx,DWORD PTR [ebp+0x8]
1005e985:	jmp    0x1000312b
1005e98a:	mov    ecx,DWORD PTR [ebp+0x8]
1005e98d:	add    ecx,0x1c
1005e990:	jmp    0x1000312b
1005e995:	mov    ecx,DWORD PTR [ebp+0x8]
1005e998:	add    ecx,0x38
1005e99b:	jmp    0x1000312b
1005e9a0:	mov    edx,DWORD PTR [esp+0x8]
1005e9a4:	lea    eax,[edx+0xc]
1005e9a7:	mov    ecx,DWORD PTR [edx-0x10]
1005e9aa:	xor    ecx,eax
1005e9ac:	call   0x10041d97
1005e9b1:	mov    eax,0x100744f0
1005e9b6:	jmp    0x10057fec
1005e9bb:	mov    ecx,DWORD PTR [ebp+0x8]
1005e9be:	jmp    0x1000312b
1005e9c3:	mov    ecx,DWORD PTR [ebp+0x8]
1005e9c6:	add    ecx,0x1c
1005e9c9:	jmp    0x1000312b
1005e9ce:	mov    ecx,DWORD PTR [ebp+0x8]
1005e9d1:	add    ecx,0x38
1005e9d4:	jmp    0x1000312b
1005e9d9:	mov    ecx,DWORD PTR [ebp+0x8]
1005e9dc:	add    ecx,0x54
1005e9df:	jmp    0x1000312b
1005e9e4:	mov    edx,DWORD PTR [esp+0x8]
1005e9e8:	lea    eax,[edx+0xc]
1005e9eb:	mov    ecx,DWORD PTR [edx-0x10]
1005e9ee:	xor    ecx,eax
1005e9f0:	call   0x10041d97
1005e9f5:	mov    eax,0x10074534
1005e9fa:	jmp    0x10057fec
1005e9ff:	mov    edx,DWORD PTR [esp+0x8]
1005ea03:	lea    eax,[edx+0xc]
1005ea06:	mov    ecx,DWORD PTR [edx-0x1c]
1005ea09:	xor    ecx,eax
1005ea0b:	call   0x10041d97
1005ea10:	mov    eax,0x1007458c
1005ea15:	jmp    0x10057fec
1005ea1a:	jmp    0x1000207c
1005ea1f:	mov    edx,DWORD PTR [esp+0x8]
1005ea23:	lea    eax,[edx+0xc]
1005ea26:	mov    ecx,DWORD PTR [edx-0x10]
1005ea29:	xor    ecx,eax
1005ea2b:	call   0x10041d97
1005ea30:	mov    eax,0x100745b8
1005ea35:	jmp    0x10057fec
1005ea3a:	mov    edx,DWORD PTR [esp+0x8]
1005ea3e:	lea    eax,[edx+0xc]
1005ea41:	mov    ecx,DWORD PTR [edx-0x18]
1005ea44:	xor    ecx,eax
1005ea46:	call   0x10041d97
1005ea4b:	mov    eax,0x10074610
1005ea50:	jmp    0x10057fec
1005ea55:	mov    eax,DWORD PTR [ebp+0x8]
1005ea58:	jmp    0x100020be
1005ea5d:	mov    edx,DWORD PTR [esp+0x8]
1005ea61:	lea    eax,[edx+0xc]
1005ea64:	mov    ecx,DWORD PTR [edx-0x10]
1005ea67:	xor    ecx,eax
1005ea69:	call   0x10041d97
1005ea6e:	mov    eax,0x1007463c
1005ea73:	jmp    0x10057fec
1005ea78:	mov    edx,DWORD PTR [esp+0x8]
1005ea7c:	lea    eax,[edx+0xc]
1005ea7f:	mov    ecx,DWORD PTR [edx-0x18]
1005ea82:	xor    ecx,eax
1005ea84:	call   0x10041d97
1005ea89:	mov    eax,0x100746c8
1005ea8e:	jmp    0x10057fec
1005ea93:	jmp    0x1000207c
1005ea98:	mov    edx,DWORD PTR [esp+0x8]
1005ea9c:	lea    eax,[edx+0xc]
1005ea9f:	mov    ecx,DWORD PTR [edx-0x18]
1005eaa2:	xor    ecx,eax
1005eaa4:	call   0x10041d97
1005eaa9:	mov    eax,0x10074728
1005eaae:	jmp    0x10057fec
1005eab3:	lea    esi,[ebp+0x8]
1005eab6:	jmp    0x1002079b
1005eabb:	mov    edx,DWORD PTR [esp+0x8]
1005eabf:	lea    eax,[edx+0xc]
1005eac2:	mov    ecx,DWORD PTR [edx-0x14]
1005eac5:	xor    ecx,eax
1005eac7:	call   0x10041d97
1005eacc:	mov    eax,0x10074754
1005ead1:	jmp    0x10057fec
1005ead6:	mov    eax,DWORD PTR [ebp-0x10]
1005ead9:	and    eax,0x1
1005eadc:	je     0x1005eaee
1005eae2:	and    DWORD PTR [ebp-0x10],0xfffffffe
1005eae6:	mov    eax,DWORD PTR [ebp+0x8]
1005eae9:	jmp    0x10002095
1005eaee:	ret    
1005eaef:	mov    edx,DWORD PTR [esp+0x8]
1005eaf3:	lea    eax,[edx+0xc]
1005eaf6:	mov    ecx,DWORD PTR [edx-0x1c]
1005eaf9:	xor    ecx,eax
1005eafb:	call   0x10041d97
1005eb00:	mov    eax,0x10074780
1005eb05:	jmp    0x10057fec
1005eb0a:	lea    ecx,[ebp+0x8]
1005eb0d:	jmp    0x1000312b
1005eb12:	mov    ecx,DWORD PTR [ebp-0x10]
1005eb15:	jmp    0x1000312b
1005eb1a:	mov    edx,DWORD PTR [esp+0x8]
1005eb1e:	lea    eax,[edx+0xc]
1005eb21:	mov    ecx,DWORD PTR [edx-0x14]
1005eb24:	xor    ecx,eax
1005eb26:	call   0x10041d97
1005eb2b:	mov    eax,0x100747b4
1005eb30:	jmp    0x10057fec
1005eb35:	mov    ecx,DWORD PTR [ebp+0x8]
1005eb38:	jmp    0x10041ed0
1005eb3d:	mov    edx,DWORD PTR [esp+0x8]
1005eb41:	lea    eax,[edx+0xc]
1005eb44:	mov    ecx,DWORD PTR [edx-0x10]
1005eb47:	xor    ecx,eax
1005eb49:	call   0x10041d97
1005eb4e:	mov    eax,0x100747e0
1005eb53:	jmp    0x10057fec
1005eb58:	int3   
1005eb59:	int3   
1005eb5a:	int3   
1005eb5b:	int3   
1005eb5c:	int3   
1005eb5d:	int3   
1005eb5e:	int3   
1005eb5f:	int3   
1005eb60:	mov    ecx,DWORD PTR [ebp+0x4]
1005eb63:	jmp    0x1000312b
1005eb68:	mov    edx,DWORD PTR [esp+0x8]
1005eb6c:	lea    eax,[edx-0x4]
1005eb6f:	mov    ecx,DWORD PTR [edx-0x8]
1005eb72:	xor    ecx,eax
1005eb74:	call   0x10041d97
1005eb79:	mov    eax,0x1007480c
1005eb7e:	jmp    0x10057fec
1005eb83:	int3   
1005eb84:	int3   
1005eb85:	int3   
1005eb86:	int3   
1005eb87:	int3   
1005eb88:	int3   
1005eb89:	int3   
1005eb8a:	int3   
1005eb8b:	int3   
1005eb8c:	int3   
1005eb8d:	int3   
1005eb8e:	int3   
1005eb8f:	int3   
1005eb90:	lea    eax,[ebp-0x34]
1005eb93:	jmp    0x100020be
1005eb98:	mov    edx,DWORD PTR [esp+0x8]
1005eb9c:	lea    eax,[edx-0x38]
1005eb9f:	mov    ecx,DWORD PTR [edx-0x3c]
1005eba2:	xor    ecx,eax
1005eba4:	call   0x10041d97
1005eba9:	add    eax,0xc
1005ebac:	mov    ecx,DWORD PTR [edx-0x8]
1005ebaf:	xor    ecx,eax
1005ebb1:	call   0x10041d97
1005ebb6:	mov    eax,0x10074838
1005ebbb:	jmp    0x10057fec
1005ebc0:	mov    ecx,DWORD PTR [ebp-0x10]
1005ebc3:	jmp    0x10041ed0
1005ebc8:	mov    edx,DWORD PTR [esp+0x8]
1005ebcc:	lea    eax,[edx-0xc]
1005ebcf:	mov    ecx,DWORD PTR [edx-0x10]
1005ebd2:	xor    ecx,eax
1005ebd4:	call   0x10041d97
1005ebd9:	mov    eax,0x10074864
1005ebde:	jmp    0x10057fec
1005ebe3:	int3   
1005ebe4:	int3   
1005ebe5:	int3   
1005ebe6:	int3   
1005ebe7:	int3   
1005ebe8:	int3   
1005ebe9:	int3   
1005ebea:	int3   
1005ebeb:	int3   
1005ebec:	int3   
1005ebed:	int3   
1005ebee:	int3   
1005ebef:	int3   
1005ebf0:	lea    ecx,[ebp-0x28]
1005ebf3:	jmp    0x1000312b
1005ebf8:	mov    edx,DWORD PTR [esp+0x8]
1005ebfc:	lea    eax,[edx-0x28]
1005ebff:	mov    ecx,DWORD PTR [edx-0x2c]
1005ec02:	xor    ecx,eax
1005ec04:	call   0x10041d97
1005ec09:	mov    eax,0x10074890
1005ec0e:	jmp    0x10057fec
1005ec13:	int3   
1005ec14:	int3   
1005ec15:	int3   
1005ec16:	int3   
1005ec17:	int3   
1005ec18:	int3   
1005ec19:	int3   
1005ec1a:	int3   
1005ec1b:	int3   
1005ec1c:	int3   
1005ec1d:	int3   
1005ec1e:	int3   
1005ec1f:	int3   
1005ec20:	lea    eax,[ebp-0x4c]
1005ec23:	jmp    0x10034050
1005ec28:	mov    edx,DWORD PTR [esp+0x8]
1005ec2c:	lea    eax,[edx-0x50]
1005ec2f:	mov    ecx,DWORD PTR [edx-0x54]
1005ec32:	xor    ecx,eax
1005ec34:	call   0x10041d97
1005ec39:	mov    eax,0x100748bc
1005ec3e:	jmp    0x10057fec
1005ec43:	int3   
1005ec44:	int3   
1005ec45:	int3   
1005ec46:	int3   
1005ec47:	int3   
1005ec48:	int3   
1005ec49:	int3   
1005ec4a:	int3   
1005ec4b:	int3   
1005ec4c:	int3   
1005ec4d:	int3   
1005ec4e:	int3   
1005ec4f:	int3   
1005ec50:	mov    eax,DWORD PTR [ebp-0x14]
1005ec53:	and    eax,0x1
1005ec56:	je     0x1005ec68
1005ec5c:	and    DWORD PTR [ebp-0x14],0xfffffffe
1005ec60:	mov    ecx,DWORD PTR [ebp-0x10]
1005ec63:	jmp    0x1000312b
1005ec68:	ret    
1005ec69:	mov    edx,DWORD PTR [esp+0x8]
1005ec6d:	lea    eax,[edx-0x18]
1005ec70:	mov    ecx,DWORD PTR [edx-0x1c]
1005ec73:	xor    ecx,eax
1005ec75:	call   0x10041d97
1005ec7a:	mov    eax,0x100748e8
1005ec7f:	jmp    0x10057fec
1005ec84:	int3   
1005ec85:	int3   
1005ec86:	int3   
1005ec87:	int3   
1005ec88:	int3   
1005ec89:	int3   
1005ec8a:	int3   
1005ec8b:	int3   
1005ec8c:	int3   
1005ec8d:	int3   
1005ec8e:	int3   
1005ec8f:	int3   
1005ec90:	lea    eax,[ebp-0xa0]
1005ec96:	jmp    0x10034050
1005ec9b:	lea    eax,[ebp-0x98]
1005eca1:	jmp    0x10034050
1005eca6:	lea    ecx,[ebp-0x4c]
1005eca9:	jmp    0x1000312b
1005ecae:	lea    eax,[ebp-0x9c]
1005ecb4:	jmp    0x10034050
1005ecb9:	lea    eax,[ebp-0x94]
1005ecbf:	jmp    0x10034050
1005ecc4:	lea    eax,[ebp-0xa4]
1005ecca:	jmp    0x10034050
1005eccf:	lea    eax,[ebp-0x90]
1005ecd5:	jmp    0x10034050
1005ecda:	lea    eax,[ebp-0x90]
1005ece0:	jmp    0x10034050
1005ece5:	mov    edx,DWORD PTR [esp+0x8]
1005ece9:	lea    eax,[edx-0xb0]
1005ecef:	mov    ecx,DWORD PTR [edx-0xb4]
1005ecf5:	xor    ecx,eax
1005ecf7:	call   0x10041d97
1005ecfc:	add    eax,0x10
1005ecff:	mov    ecx,DWORD PTR [edx-0x4]
1005ed02:	xor    ecx,eax
1005ed04:	call   0x10041d97
1005ed09:	mov    eax,0x10074950
1005ed0e:	jmp    0x10057fec
1005ed13:	mov    edx,DWORD PTR [esp+0x8]
1005ed17:	lea    eax,[edx+0xc]
1005ed1a:	mov    ecx,DWORD PTR [edx-0x18]
1005ed1d:	xor    ecx,eax
1005ed1f:	call   0x10041d97
1005ed24:	mov    eax,0x100749a8
1005ed29:	jmp    0x10057fec
1005ed2e:	mov    eax,DWORD PTR [ebp+0x8]
1005ed31:	jmp    0x1002af99
1005ed36:	mov    edx,DWORD PTR [esp+0x8]
1005ed3a:	lea    eax,[edx+0xc]
1005ed3d:	mov    ecx,DWORD PTR [edx-0x10]
1005ed40:	xor    ecx,eax
1005ed42:	call   0x10041d97
1005ed47:	mov    eax,0x100749d4
1005ed4c:	jmp    0x10057fec
1005ed51:	jmp    0x1000207c
1005ed56:	mov    edx,DWORD PTR [esp+0x8]
1005ed5a:	lea    eax,[edx+0xc]
1005ed5d:	mov    ecx,DWORD PTR [edx-0x18]
1005ed60:	xor    ecx,eax
1005ed62:	call   0x10041d97
1005ed67:	mov    eax,0x10074a34
1005ed6c:	jmp    0x10057fec
1005ed71:	lea    ecx,[ebp-0x20]
1005ed74:	jmp    0x10022074
1005ed79:	mov    edx,DWORD PTR [esp+0x8]
1005ed7d:	lea    eax,[edx+0xc]
1005ed80:	mov    ecx,DWORD PTR [edx-0x24]
1005ed83:	xor    ecx,eax
1005ed85:	call   0x10041d97
1005ed8a:	mov    eax,0x10074ac8
1005ed8f:	jmp    0x10057fec
1005ed94:	lea    ecx,[ebp-0x38]
1005ed97:	jmp    0x10022074
1005ed9c:	lea    eax,[ebp-0x28]
1005ed9f:	jmp    0x1002af99
1005eda4:	lea    esi,[ebp-0x28]
1005eda7:	jmp    0x1002d6b6
1005edac:	mov    edx,DWORD PTR [esp+0x8]
1005edb0:	lea    eax,[edx-0x4c]
1005edb3:	mov    ecx,DWORD PTR [edx-0x50]
1005edb6:	xor    ecx,eax
1005edb8:	call   0x10041d97
1005edbd:	mov    eax,0x10074b04
1005edc2:	jmp    0x10057fec
1005edc7:	mov    eax,DWORD PTR [ebp-0x30]
1005edca:	and    eax,0x1
1005edcd:	je     0x1005eddf
1005edd3:	and    DWORD PTR [ebp-0x30],0xfffffffe
1005edd7:	mov    ecx,DWORD PTR [ebp-0x28]
1005edda:	jmp    0x1000312b
1005eddf:	ret    
1005ede0:	lea    ecx,[ebp-0x40]
1005ede3:	jmp    0x10022074
1005ede8:	lea    ecx,[ebp-0x50]
1005edeb:	jmp    0x10022074
1005edf0:	lea    eax,[ebp-0x18]
1005edf3:	jmp    0x1001e534
1005edf8:	lea    edi,[ebp-0x20]
1005edfb:	jmp    0x100024dc
1005ee00:	mov    edx,DWORD PTR [esp+0x8]
1005ee04:	lea    eax,[edx+0xc]
1005ee07:	mov    ecx,DWORD PTR [edx-0x54]
1005ee0a:	xor    ecx,eax
1005ee0c:	call   0x10041d97
1005ee11:	mov    ecx,DWORD PTR [edx+0x40c]
1005ee17:	xor    ecx,eax
1005ee19:	call   0x10041d97
1005ee1e:	mov    eax,0x10074b50
1005ee23:	jmp    0x10057fec
1005ee28:	mov    eax,DWORD PTR [ebp+0x8]
1005ee2b:	jmp    0x1001e534
1005ee30:	mov    edx,DWORD PTR [esp+0x8]
1005ee34:	lea    eax,[edx+0xc]
1005ee37:	mov    ecx,DWORD PTR [edx-0x10]
1005ee3a:	xor    ecx,eax
1005ee3c:	call   0x10041d97
1005ee41:	mov    eax,0x10074b7c
1005ee46:	jmp    0x10057fec
1005ee4b:	lea    ecx,[ebp+0xc]
1005ee4e:	jmp    0x10022074
1005ee53:	lea    eax,[ebp-0x18]
1005ee56:	jmp    0x1002af99
1005ee5b:	lea    eax,[ebp-0x14]
1005ee5e:	jmp    0x1002af99
1005ee63:	mov    edx,DWORD PTR [esp+0x8]
1005ee67:	lea    eax,[edx+0xc]
1005ee6a:	mov    ecx,DWORD PTR [edx-0x1c]
1005ee6d:	xor    ecx,eax
1005ee6f:	call   0x10041d97
1005ee74:	mov    ecx,DWORD PTR [edx-0x4]
1005ee77:	xor    ecx,eax
1005ee79:	call   0x10041d97
1005ee7e:	mov    eax,0x10074bb8
1005ee83:	jmp    0x10057fec
1005ee88:	lea    eax,[ebp-0x18]
1005ee8b:	jmp    0x10009745
1005ee90:	lea    eax,[ebp-0x14]
1005ee93:	jmp    0x10038d40
1005ee98:	mov    edx,DWORD PTR [esp+0x8]
1005ee9c:	lea    eax,[edx+0xc]
1005ee9f:	mov    ecx,DWORD PTR [edx-0x1c]
1005eea2:	xor    ecx,eax
1005eea4:	call   0x10041d97
1005eea9:	mov    eax,0x10074bec
1005eeae:	jmp    0x10057fec
1005eeb3:	mov    edx,DWORD PTR [esp+0x8]
1005eeb7:	lea    eax,[edx+0xc]
1005eeba:	mov    ecx,DWORD PTR [edx-0x1c]
1005eebd:	xor    ecx,eax
1005eebf:	call   0x10041d97
1005eec4:	mov    eax,0x10074c44
1005eec9:	jmp    0x10057fec
1005eece:	mov    eax,DWORD PTR [ebp-0x10]
1005eed1:	and    eax,0x1
1005eed4:	je     0x1005eee6
1005eeda:	and    DWORD PTR [ebp-0x10],0xfffffffe
1005eede:	lea    eax,[ebp+0x8]
1005eee1:	jmp    0x1001e534
1005eee6:	ret    
1005eee7:	mov    edx,DWORD PTR [esp+0x8]
1005eeeb:	lea    eax,[edx+0xc]
1005eeee:	mov    ecx,DWORD PTR [edx-0x18]
1005eef1:	xor    ecx,eax
1005eef3:	call   0x10041d97
1005eef8:	mov    eax,0x10074c70
1005eefd:	jmp    0x10057fec
1005ef02:	mov    edx,DWORD PTR [esp+0x8]
1005ef06:	lea    eax,[edx+0xc]
1005ef09:	mov    ecx,DWORD PTR [edx-0x1c]
1005ef0c:	xor    ecx,eax
1005ef0e:	call   0x10041d97
1005ef13:	mov    eax,0x10074cc8
1005ef18:	jmp    0x10057fec
1005ef1d:	jmp    0x1000207c
1005ef22:	mov    edx,DWORD PTR [esp+0x8]
1005ef26:	lea    eax,[edx+0xc]
1005ef29:	mov    ecx,DWORD PTR [edx-0x18]
1005ef2c:	xor    ecx,eax
1005ef2e:	call   0x10041d97
1005ef33:	mov    eax,0x10074d28
1005ef38:	jmp    0x10057fec
1005ef3d:	lea    ecx,[ebp-0x28]
1005ef40:	jmp    0x1000312b
1005ef45:	mov    edx,DWORD PTR [esp+0x8]
1005ef49:	lea    eax,[edx+0xc]
1005ef4c:	mov    ecx,DWORD PTR [edx-0x54]
1005ef4f:	xor    ecx,eax
1005ef51:	call   0x10041d97
1005ef56:	mov    eax,0x10074d54
1005ef5b:	jmp    0x10057fec
1005ef60:	mov    eax,DWORD PTR [ebp-0x10]
1005ef63:	add    eax,0x8
1005ef66:	jmp    0x10020d41
1005ef6b:	mov    edx,DWORD PTR [esp+0x8]
1005ef6f:	lea    eax,[edx+0xc]
1005ef72:	mov    ecx,DWORD PTR [edx-0x14]
1005ef75:	xor    ecx,eax
1005ef77:	call   0x10041d97
1005ef7c:	mov    eax,0x10074d80
1005ef81:	jmp    0x10057fec
1005ef86:	mov    eax,DWORD PTR [ebp+0x8]
1005ef89:	add    eax,0x8
1005ef8c:	jmp    0x10020d41
1005ef91:	mov    edx,DWORD PTR [esp+0x8]
1005ef95:	lea    eax,[edx+0xc]
1005ef98:	mov    ecx,DWORD PTR [edx-0x10]
1005ef9b:	xor    ecx,eax
1005ef9d:	call   0x10041d97
1005efa2:	mov    eax,0x10074dac
1005efa7:	jmp    0x10057fec
1005efac:	push   DWORD PTR [ebp-0x18]
1005efaf:	call   0x10041d92
1005efb4:	pop    ecx
1005efb5:	ret    
1005efb6:	mov    edx,DWORD PTR [esp+0x8]
1005efba:	lea    eax,[edx+0xc]
1005efbd:	mov    ecx,DWORD PTR [edx-0x20]
1005efc0:	xor    ecx,eax
1005efc2:	call   0x10041d97
1005efc7:	mov    eax,0x10074e0c
1005efcc:	jmp    0x10057fec
1005efd1:	lea    esi,[ebp-0x28]
1005efd4:	jmp    0x1001fee0
1005efd9:	lea    eax,[ebp-0x14]
1005efdc:	jmp    0x1001e534
1005efe1:	lea    eax,[ebp-0x20]
1005efe4:	jmp    0x1002af99
1005efe9:	lea    esi,[ebp-0x2c]
1005efec:	jmp    0x1000713b
1005eff1:	lea    eax,[ebp-0x1c]
1005eff4:	jmp    0x1001e534
1005eff9:	mov    edx,DWORD PTR [esp+0x8]
1005effd:	lea    eax,[edx+0xc]
1005f000:	mov    ecx,DWORD PTR [edx-0x30]
1005f003:	xor    ecx,eax
1005f005:	call   0x10041d97
1005f00a:	mov    ecx,DWORD PTR [edx-0x4]
1005f00d:	xor    ecx,eax
1005f00f:	call   0x10041d97
1005f014:	mov    eax,0x10074e58
1005f019:	jmp    0x10057fec
1005f01e:	lea    esi,[ebp-0x24]
1005f021:	jmp    0x1001fee0
1005f026:	lea    eax,[ebp-0x14]
1005f029:	jmp    0x1001e534
1005f02e:	lea    esi,[ebp-0x28]
1005f031:	jmp    0x1000713b
1005f036:	lea    eax,[ebp-0x18]
1005f039:	jmp    0x1001e534
1005f03e:	mov    edx,DWORD PTR [esp+0x8]
1005f042:	lea    eax,[edx+0xc]
1005f045:	mov    ecx,DWORD PTR [edx-0x2c]
1005f048:	xor    ecx,eax
1005f04a:	call   0x10041d97
1005f04f:	mov    ecx,DWORD PTR [edx-0x4]
1005f052:	xor    ecx,eax
1005f054:	call   0x10041d97
1005f059:	mov    eax,0x10074e9c
1005f05e:	jmp    0x10057fec
1005f063:	lea    eax,[ebp+0x8]
1005f066:	jmp    0x1002af99
1005f06b:	lea    eax,[ebp+0x10]
1005f06e:	jmp    0x1002af99
1005f073:	mov    edx,DWORD PTR [esp+0x8]
1005f077:	lea    eax,[edx+0xc]
1005f07a:	mov    ecx,DWORD PTR [edx-0x14]
1005f07d:	xor    ecx,eax
1005f07f:	call   0x10041d97
1005f084:	mov    eax,0x10074ed0
1005f089:	jmp    0x10057fec
1005f08e:	lea    eax,[ebp-0x40]
1005f091:	jmp    0x1001e534
1005f096:	lea    eax,[ebp-0x3c]
1005f099:	jmp    0x1001e534
1005f09e:	lea    eax,[ebp-0x44]
1005f0a1:	jmp    0x1001e534
1005f0a6:	lea    eax,[ebp-0x44]
1005f0a9:	jmp    0x1001e534
1005f0ae:	lea    ecx,[ebp-0x20]
1005f0b1:	jmp    0x10022074
1005f0b6:	lea    ecx,[ebp-0x30]
1005f0b9:	jmp    0x10022074
1005f0be:	mov    edx,DWORD PTR [esp+0x8]
1005f0c2:	lea    eax,[edx-0x4c]
1005f0c5:	mov    ecx,DWORD PTR [edx-0x50]
1005f0c8:	xor    ecx,eax
1005f0ca:	call   0x10041d97
1005f0cf:	mov    eax,0x10074f24
1005f0d4:	jmp    0x10057fec
1005f0d9:	lea    esi,[ebp-0x78]
1005f0dc:	jmp    0x1001a2a3
1005f0e1:	mov    edx,DWORD PTR [esp+0x8]
1005f0e5:	lea    eax,[edx+0xc]
1005f0e8:	mov    ecx,DWORD PTR [edx-0x8c]
1005f0ee:	xor    ecx,eax
1005f0f0:	call   0x10041d97
1005f0f5:	mov    ecx,DWORD PTR [edx-0x4]
1005f0f8:	xor    ecx,eax
1005f0fa:	call   0x10041d97
1005f0ff:	mov    eax,0x10074f50
1005f104:	jmp    0x10057fec
1005f109:	mov    edx,DWORD PTR [esp+0x8]
1005f10d:	lea    eax,[edx+0xc]
1005f110:	mov    ecx,DWORD PTR [edx-0x20]
1005f113:	xor    ecx,eax
1005f115:	call   0x10041d97
1005f11a:	mov    eax,0x10074fa8
1005f11f:	jmp    0x10057fec
1005f124:	mov    edx,DWORD PTR [esp+0x8]
1005f128:	lea    eax,[edx+0xc]
1005f12b:	mov    ecx,DWORD PTR [edx-0x18]
1005f12e:	xor    ecx,eax
1005f130:	call   0x10041d97
1005f135:	mov    eax,0x10075000
1005f13a:	jmp    0x10057fec
1005f13f:	lea    ecx,[ebp-0x2c]
1005f142:	jmp    0x1000312b
1005f147:	mov    edx,DWORD PTR [esp+0x8]
1005f14b:	lea    eax,[edx+0xc]
1005f14e:	mov    ecx,DWORD PTR [edx-0x58]
1005f151:	xor    ecx,eax
1005f153:	call   0x10041d97
1005f158:	mov    eax,0x1007502c
1005f15d:	jmp    0x10057fec
1005f162:	lea    esi,[ebp-0x444]
1005f168:	jmp    0x1001420b
1005f16d:	lea    esi,[ebp-0x440]
1005f173:	jmp    0x1001420b
1005f178:	mov    edx,DWORD PTR [esp+0x8]
1005f17c:	lea    eax,[edx-0x444]
1005f182:	mov    ecx,DWORD PTR [edx-0x448]
1005f188:	xor    ecx,eax
1005f18a:	call   0x10041d97
1005f18f:	add    eax,0xc
1005f192:	mov    ecx,DWORD PTR [edx-0x8]
1005f195:	xor    ecx,eax
1005f197:	call   0x10041d97
1005f19c:	mov    eax,0x10075060
1005f1a1:	jmp    0x10057fec
1005f1a6:	lea    esi,[ebp-0x2c]
1005f1a9:	jmp    0x10017564
1005f1ae:	lea    esi,[ebp-0x28]
1005f1b1:	jmp    0x10017564
1005f1b6:	mov    edx,DWORD PTR [esp+0x8]
1005f1ba:	lea    eax,[edx+0xc]
1005f1bd:	mov    ecx,DWORD PTR [edx-0x30]
1005f1c0:	xor    ecx,eax
1005f1c2:	call   0x10041d97
1005f1c7:	mov    eax,0x100750fc
1005f1cc:	jmp    0x10057fec
1005f1d1:	lea    esi,[ebp-0x9c]
1005f1d7:	jmp    0x1000b749
1005f1dc:	mov    edx,DWORD PTR [esp+0x8]
1005f1e0:	lea    eax,[edx+0xc]
1005f1e3:	mov    ecx,DWORD PTR [edx-0xa4]
1005f1e9:	xor    ecx,eax
1005f1eb:	call   0x10041d97
1005f1f0:	mov    ecx,DWORD PTR [edx-0x4]
1005f1f3:	xor    ecx,eax
1005f1f5:	call   0x10041d97
1005f1fa:	mov    eax,0x10075128
1005f1ff:	jmp    0x10057fec
1005f204:	mov    ecx,DWORD PTR [ebp+0x8]
1005f207:	jmp    0x1000312b
1005f20c:	mov    ecx,DWORD PTR [ebp+0x8]
1005f20f:	add    ecx,0x1c
1005f212:	jmp    0x1000312b
1005f217:	mov    ecx,DWORD PTR [ebp+0x8]
1005f21a:	add    ecx,0x38
1005f21d:	jmp    0x1000312b
1005f222:	mov    ecx,DWORD PTR [ebp+0x8]
1005f225:	add    ecx,0x54
1005f228:	jmp    0x1000312b
1005f22d:	mov    ecx,DWORD PTR [ebp+0x8]
1005f230:	add    ecx,0x70
1005f233:	jmp    0x1000312b
1005f238:	mov    edx,DWORD PTR [esp+0x8]
1005f23c:	lea    eax,[edx+0xc]
1005f23f:	mov    ecx,DWORD PTR [edx-0x10]
1005f242:	xor    ecx,eax
1005f244:	call   0x10041d97
1005f249:	mov    eax,0x10075174
1005f24e:	jmp    0x10057fec
1005f253:	lea    esi,[ebp-0x20]
1005f256:	jmp    0x1000c958
1005f25b:	mov    edx,DWORD PTR [esp+0x8]
1005f25f:	lea    eax,[edx+0xc]
1005f262:	mov    ecx,DWORD PTR [edx-0x24]
1005f265:	xor    ecx,eax
1005f267:	call   0x10041d97
1005f26c:	mov    eax,0x100751a0
1005f271:	jmp    0x10057fec
1005f276:	lea    ecx,[ebp-0x28]
1005f279:	jmp    0x1000312b
1005f27e:	mov    edx,DWORD PTR [esp+0x8]
1005f282:	lea    eax,[edx+0xc]
1005f285:	mov    ecx,DWORD PTR [edx-0x2c]
1005f288:	xor    ecx,eax
1005f28a:	call   0x10041d97
1005f28f:	mov    eax,0x100751cc
1005f294:	jmp    0x10057fec
1005f299:	lea    ecx,[ebp-0x30]
1005f29c:	jmp    0x1000312b
1005f2a1:	mov    edx,DWORD PTR [esp+0x8]
1005f2a5:	lea    eax,[edx+0xc]
1005f2a8:	mov    ecx,DWORD PTR [edx-0x3c]
1005f2ab:	xor    ecx,eax
1005f2ad:	call   0x10041d97
1005f2b2:	mov    ecx,DWORD PTR [edx-0x8]
1005f2b5:	xor    ecx,eax
1005f2b7:	call   0x10041d97
1005f2bc:	mov    eax,0x1007522c
1005f2c1:	jmp    0x10057fec
1005f2c6:	mov    edx,DWORD PTR [esp+0x8]
1005f2ca:	lea    eax,[edx+0xc]
1005f2cd:	mov    ecx,DWORD PTR [edx-0x18]
1005f2d0:	xor    ecx,eax
1005f2d2:	call   0x10041d97
1005f2d7:	mov    eax,0x10075284
1005f2dc:	jmp    0x10057fec
1005f2e1:	lea    ecx,[ebp-0x30]
1005f2e4:	jmp    0x1000312b
1005f2e9:	mov    edx,DWORD PTR [esp+0x8]
1005f2ed:	lea    eax,[edx+0xc]
1005f2f0:	mov    ecx,DWORD PTR [edx-0x40]
1005f2f3:	xor    ecx,eax
1005f2f5:	call   0x10041d97
1005f2fa:	mov    ecx,DWORD PTR [edx-0x8]
1005f2fd:	xor    ecx,eax
1005f2ff:	call   0x10041d97
1005f304:	mov    eax,0x10075318
1005f309:	jmp    0x10057fec
1005f30e:	mov    edx,DWORD PTR [esp+0x8]
1005f312:	lea    eax,[edx+0xc]
1005f315:	mov    ecx,DWORD PTR [edx-0x20]
1005f318:	xor    ecx,eax
1005f31a:	call   0x10041d97
1005f31f:	mov    eax,0x10075370
1005f324:	jmp    0x10057fec
1005f329:	mov    edx,DWORD PTR [esp+0x8]
1005f32d:	lea    eax,[edx+0xc]
1005f330:	mov    ecx,DWORD PTR [edx-0x34]
1005f333:	xor    ecx,eax
1005f335:	call   0x10041d97
1005f33a:	mov    eax,0x100753fc
1005f33f:	jmp    0x10057fec
1005f344:	mov    edx,DWORD PTR [esp+0x8]
1005f348:	lea    eax,[edx+0xc]
1005f34b:	mov    ecx,DWORD PTR [edx-0x20]
1005f34e:	xor    ecx,eax
1005f350:	call   0x10041d97
1005f355:	mov    eax,0x10075454
1005f35a:	jmp    0x10057fec
1005f35f:	mov    eax,DWORD PTR [ebp-0x58]
1005f362:	and    eax,0x1
1005f365:	je     0x1005f377
1005f36b:	and    DWORD PTR [ebp-0x58],0xfffffffe
1005f36f:	mov    ecx,DWORD PTR [ebp-0x5c]
1005f372:	jmp    0x1000312b
1005f377:	ret    
1005f378:	mov    edx,DWORD PTR [esp+0x8]
1005f37c:	lea    eax,[edx+0xc]
1005f37f:	mov    ecx,DWORD PTR [edx-0x60]
1005f382:	xor    ecx,eax
1005f384:	call   0x10041d97
1005f389:	mov    ecx,DWORD PTR [edx-0x4]
1005f38c:	xor    ecx,eax
1005f38e:	call   0x10041d97
1005f393:	mov    eax,0x10075480
1005f398:	jmp    0x10057fec
1005f39d:	lea    ecx,[ebp-0x44]
1005f3a0:	jmp    0x1000312b
1005f3a5:	lea    ecx,[ebp-0x28]
1005f3a8:	jmp    0x1000312b
1005f3ad:	lea    ecx,[ebp-0x28]
1005f3b0:	jmp    0x1000312b
1005f3b5:	lea    ecx,[ebp-0x44]
1005f3b8:	jmp    0x1000312b
1005f3bd:	lea    ecx,[ebp-0x7c]
1005f3c0:	jmp    0x1000312b
1005f3c5:	lea    ecx,[ebp-0x60]
1005f3c8:	jmp    0x1000312b
1005f3cd:	mov    edx,DWORD PTR [esp+0x8]
1005f3d1:	lea    eax,[edx+0xc]
1005f3d4:	mov    ecx,DWORD PTR [edx-0x84]
1005f3da:	xor    ecx,eax
1005f3dc:	call   0x10041d97
1005f3e1:	mov    eax,0x100754d4
1005f3e6:	jmp    0x10057fec
1005f3eb:	push   DWORD PTR [ebp-0x10]
1005f3ee:	call   0x10041d92
1005f3f3:	pop    ecx
1005f3f4:	ret    
1005f3f5:	mov    edx,DWORD PTR [esp+0x8]
1005f3f9:	lea    eax,[edx+0xc]
1005f3fc:	mov    ecx,DWORD PTR [edx-0x14]
1005f3ff:	xor    ecx,eax
1005f401:	call   0x10041d97
1005f406:	mov    eax,0x10075500
1005f40b:	jmp    0x10057fec
1005f410:	mov    eax,DWORD PTR [ebp+0x8]
1005f413:	jmp    0x1000931a
1005f418:	mov    esi,DWORD PTR [ebp+0x8]
1005f41b:	add    esi,0x4
1005f41e:	jmp    0x1000c958
1005f423:	mov    edx,DWORD PTR [esp+0x8]
1005f427:	lea    eax,[edx+0xc]
1005f42a:	mov    ecx,DWORD PTR [edx-0x10]
1005f42d:	xor    ecx,eax
1005f42f:	call   0x10041d97
1005f434:	mov    eax,0x10075534
1005f439:	jmp    0x10057fec
1005f43e:	lea    esi,[ebp-0x14]
1005f441:	jmp    0x1000713b
1005f446:	mov    edx,DWORD PTR [esp+0x8]
1005f44a:	lea    eax,[edx+0xc]
1005f44d:	mov    ecx,DWORD PTR [edx-0x30]
1005f450:	xor    ecx,eax
1005f452:	call   0x10041d97
1005f457:	mov    ecx,DWORD PTR [edx-0x4]
1005f45a:	xor    ecx,eax
1005f45c:	call   0x10041d97
1005f461:	mov    eax,0x10075560
1005f466:	jmp    0x10057fec
1005f46b:	mov    edx,DWORD PTR [esp+0x8]
1005f46f:	lea    eax,[edx+0xc]
1005f472:	mov    ecx,DWORD PTR [edx-0x18]
1005f475:	xor    ecx,eax
1005f477:	call   0x10041d97
1005f47c:	mov    eax,0x100755b8
1005f481:	jmp    0x10057fec
1005f486:	mov    esi,DWORD PTR [ebp+0x8]
1005f489:	jmp    0x1002079b
1005f48e:	mov    edx,DWORD PTR [esp+0x8]
1005f492:	lea    eax,[edx+0xc]
1005f495:	mov    ecx,DWORD PTR [edx-0x10]
1005f498:	xor    ecx,eax
1005f49a:	call   0x10041d97
1005f49f:	mov    eax,0x100755e4
1005f4a4:	jmp    0x10057fec
1005f4a9:	jmp    0x1000207c
1005f4ae:	mov    edx,DWORD PTR [esp+0x8]
1005f4b2:	lea    eax,[edx+0xc]
1005f4b5:	mov    ecx,DWORD PTR [edx-0x18]
1005f4b8:	xor    ecx,eax
1005f4ba:	call   0x10041d97
1005f4bf:	mov    eax,0x10075644
1005f4c4:	jmp    0x10057fec
1005f4c9:	lea    esi,[ebp-0x38]
1005f4cc:	jmp    0x1002079b
1005f4d1:	lea    esi,[ebp-0x70]
1005f4d4:	jmp    0x1002079b
1005f4d9:	lea    edi,[ebp-0x70]
1005f4dc:	jmp    0x10004724
1005f4e1:	mov    edx,DWORD PTR [esp+0x8]
1005f4e5:	lea    eax,[edx+0xc]
1005f4e8:	mov    ecx,DWORD PTR [edx-0x74]
1005f4eb:	xor    ecx,eax
1005f4ed:	call   0x10041d97
1005f4f2:	mov    eax,0x10075680
1005f4f7:	jmp    0x10057fec
1005f4fc:	lea    ecx,[ebp-0x38]
1005f4ff:	jmp    0x1000312b
1005f504:	lea    ecx,[ebp-0x70]
1005f507:	jmp    0x1000312b
1005f50c:	lea    esi,[ebp-0x70]
1005f50f:	jmp    0x1000470c
1005f514:	mov    edx,DWORD PTR [esp+0x8]
1005f518:	lea    eax,[edx+0xc]
1005f51b:	mov    ecx,DWORD PTR [edx-0x74]
1005f51e:	xor    ecx,eax
1005f520:	call   0x10041d97
1005f525:	mov    eax,0x100756bc
1005f52a:	jmp    0x10057fec
1005f52f:	mov    eax,ds:0x1007fbfc
1005f534:	and    eax,0xfffffffe
1005f537:	mov    ds:0x1007fbfc,eax
1005f53c:	ret    
1005f53d:	mov    edx,DWORD PTR [esp+0x8]
1005f541:	lea    eax,[edx+0xc]
1005f544:	mov    ecx,DWORD PTR [edx-0x10]
1005f547:	xor    ecx,eax
1005f549:	call   0x10041d97
1005f54e:	mov    eax,0x100756e8
1005f553:	jmp    0x10057fec
1005f558:	mov    eax,ds:0x1007fc18
1005f55d:	and    eax,0xfffffffe
1005f560:	mov    ds:0x1007fc18,eax
1005f565:	ret    
1005f566:	mov    edx,DWORD PTR [esp+0x8]
1005f56a:	lea    eax,[edx+0xc]
1005f56d:	mov    ecx,DWORD PTR [edx-0x10]
1005f570:	xor    ecx,eax
1005f572:	call   0x10041d97
1005f577:	mov    eax,0x10075714
1005f57c:	jmp    0x10057fec
1005f581:	lea    esi,[ebp-0x4c]
1005f584:	jmp    0x1002079b
1005f589:	lea    esi,[ebp-0x30]
1005f58c:	jmp    0x1002079b
1005f591:	lea    ecx,[ebp-0x30]
1005f594:	jmp    0x1000312b
1005f599:	mov    edx,DWORD PTR [esp+0x8]
1005f59d:	lea    eax,[edx-0x84]
1005f5a3:	mov    ecx,DWORD PTR [edx-0x88]
1005f5a9:	xor    ecx,eax
1005f5ab:	call   0x10041d97
1005f5b0:	add    eax,0xc
1005f5b3:	mov    ecx,DWORD PTR [edx-0x8]
1005f5b6:	xor    ecx,eax
1005f5b8:	call   0x10041d97
1005f5bd:	mov    eax,0x10075750
1005f5c2:	jmp    0x10057fec
1005f5c7:	lea    eax,[ebp-0x10]
1005f5ca:	jmp    0x10002095
1005f5cf:	lea    eax,[ebp-0x14]
1005f5d2:	jmp    0x10002095
1005f5d7:	lea    edi,[ebp-0x1c]
1005f5da:	jmp    0x100024dc
1005f5df:	lea    edi,[ebp-0x20]
1005f5e2:	jmp    0x100024dc
1005f5e7:	lea    eax,[ebp-0x18]
1005f5ea:	jmp    0x10002095
1005f5ef:	lea    esi,[ebp-0x1c]
1005f5f2:	jmp    0x10003f4a
1005f5f7:	mov    edx,DWORD PTR [esp+0x8]
1005f5fb:	lea    eax,[edx+0xc]
1005f5fe:	mov    ecx,DWORD PTR [edx-0x28]
1005f601:	xor    ecx,eax
1005f603:	call   0x10041d97
1005f608:	mov    eax,0x100757b8
1005f60d:	jmp    0x10057fec
1005f612:	mov    eax,DWORD PTR [ebp+0x8]
1005f615:	jmp    0x1000123d
1005f61a:	mov    edx,DWORD PTR [esp+0x8]
1005f61e:	lea    eax,[edx+0xc]
1005f621:	mov    ecx,DWORD PTR [edx-0x10]
1005f624:	xor    ecx,eax
1005f626:	call   0x10041d97
1005f62b:	mov    eax,0x100757e4
1005f630:	jmp    0x10057fec
1005f635:	int3   
1005f636:	int3   
1005f637:	int3   
1005f638:	int3   
1005f639:	int3   
1005f63a:	int3   
1005f63b:	int3   
1005f63c:	int3   
1005f63d:	int3   
1005f63e:	int3   
1005f63f:	int3   
1005f640:	lea    ecx,[ebp-0x2c]
1005f643:	jmp    0x1000312b
1005f648:	mov    eax,DWORD PTR [ebp-0x34]
1005f64b:	push   eax
1005f64c:	call   0x10041d92
1005f651:	pop    ecx
1005f652:	ret    
1005f653:	mov    edx,DWORD PTR [esp+0x8]
1005f657:	lea    eax,[edx-0x38]
1005f65a:	mov    ecx,DWORD PTR [edx-0x3c]
1005f65d:	xor    ecx,eax
1005f65f:	call   0x10041d97
1005f664:	add    eax,0xc
1005f667:	mov    ecx,DWORD PTR [edx-0x4]
1005f66a:	xor    ecx,eax
1005f66c:	call   0x10041d97
1005f671:	mov    eax,0x10075818
1005f676:	jmp    0x10057fec
1005f67b:	int3   
1005f67c:	int3   
1005f67d:	int3   
1005f67e:	int3   
1005f67f:	int3   
1005f680:	lea    eax,[ebp+0xc]
1005f683:	jmp    0x10036ee0
1005f688:	mov    edx,DWORD PTR [esp+0x8]
1005f68c:	lea    eax,[edx-0x14]
1005f68f:	mov    ecx,DWORD PTR [edx-0x18]
1005f692:	xor    ecx,eax
1005f694:	call   0x10041d97
1005f699:	mov    eax,0x10075844
1005f69e:	jmp    0x10057fec
1005f6a3:	int3   
1005f6a4:	int3   
1005f6a5:	int3   
1005f6a6:	int3   
1005f6a7:	int3   
1005f6a8:	int3   
1005f6a9:	int3   
1005f6aa:	int3   
1005f6ab:	int3   
1005f6ac:	int3   
1005f6ad:	int3   
1005f6ae:	int3   
1005f6af:	int3   
1005f6b0:	lea    esi,[ebp-0x14]
1005f6b3:	jmp    0x1000713b
1005f6b8:	mov    eax,DWORD PTR [ebp-0x1c]
1005f6bb:	and    eax,0x1
1005f6be:	je     0x1005f6d0
1005f6c4:	and    DWORD PTR [ebp-0x1c],0xfffffffe
1005f6c8:	lea    ecx,[ebp-0x58]
1005f6cb:	jmp    0x1000312b
1005f6d0:	ret    
1005f6d1:	mov    eax,DWORD PTR [ebp-0x1c]
1005f6d4:	and    eax,0x2
1005f6d7:	je     0x1005f6e9
1005f6dd:	and    DWORD PTR [ebp-0x1c],0xfffffffd
1005f6e1:	lea    ecx,[ebp-0x3c]
1005f6e4:	jmp    0x1000312b
1005f6e9:	ret    
1005f6ea:	mov    edx,DWORD PTR [esp+0x8]
1005f6ee:	lea    eax,[edx+0xc]
1005f6f1:	mov    ecx,DWORD PTR [edx-0x5c]
1005f6f4:	xor    ecx,eax
1005f6f6:	call   0x10041d97
1005f6fb:	mov    ecx,DWORD PTR [edx-0x4]
1005f6fe:	xor    ecx,eax
1005f700:	call   0x10041d97
1005f705:	mov    eax,0x10075880
1005f70a:	jmp    0x10057fec
1005f70f:	int3   
1005f710:	lea    esi,[ebp+0x0]
1005f713:	jmp    0x1000b7b1
1005f718:	lea    eax,[ebp-0x10]
1005f71b:	jmp    0x100020be
1005f720:	mov    edx,DWORD PTR [esp+0x8]
1005f724:	lea    eax,[edx+0xc]
1005f727:	mov    ecx,DWORD PTR [edx-0x60]
1005f72a:	xor    ecx,eax
1005f72c:	call   0x10041d97
1005f731:	mov    ecx,DWORD PTR [edx+0xa0]
1005f737:	xor    ecx,eax
1005f739:	call   0x10041d97
1005f73e:	mov    eax,0x100758b4
1005f743:	jmp    0x10057fec
1005f748:	int3   
1005f749:	int3   
1005f74a:	int3   
1005f74b:	int3   
1005f74c:	int3   
1005f74d:	int3   
1005f74e:	int3   
1005f74f:	int3   
1005f750:	lea    eax,[ebp-0x64]
1005f753:	jmp    0x100020be
1005f758:	lea    esi,[ebp-0x4c]
1005f75b:	jmp    0x100341c0
1005f760:	lea    esi,[ebp-0x3c]
1005f763:	jmp    0x100341c0
1005f768:	lea    esi,[ebp-0x38]
1005f76b:	jmp    0x100341c0
1005f770:	lea    eax,[ebp-0x44]
1005f773:	jmp    0x100020be
1005f778:	mov    edx,DWORD PTR [esp+0x8]
1005f77c:	lea    eax,[edx+0xc]
1005f77f:	mov    ecx,DWORD PTR [edx-0x68]
1005f782:	xor    ecx,eax
1005f784:	call   0x10041d97
1005f789:	mov    ecx,DWORD PTR [edx-0x4]
1005f78c:	xor    ecx,eax
1005f78e:	call   0x10041d97
1005f793:	mov    eax,0x10075900
1005f798:	jmp    0x10057fec
1005f79d:	mov    edx,DWORD PTR [esp+0x8]
1005f7a1:	lea    eax,[edx+0xc]
1005f7a4:	mov    ecx,DWORD PTR [edx-0x1c]
1005f7a7:	xor    ecx,eax
1005f7a9:	call   0x10041d97
1005f7ae:	mov    eax,0x10075958
1005f7b3:	jmp    0x10057fec
1005f7b8:	mov    edx,DWORD PTR [esp+0x8]
1005f7bc:	lea    eax,[edx+0xc]
1005f7bf:	mov    ecx,DWORD PTR [edx-0x1c]
1005f7c2:	xor    ecx,eax
1005f7c4:	call   0x10041d97
1005f7c9:	mov    eax,0x100759b0
1005f7ce:	jmp    0x10057fec
1005f7d3:	lea    ecx,[ebp-0x20]
1005f7d6:	jmp    0x10022074
1005f7db:	lea    eax,[ebp-0x38]
1005f7de:	jmp    0x1002af99
1005f7e3:	lea    ecx,[ebp-0x38]
1005f7e6:	jmp    0x10022074
1005f7eb:	mov    edx,DWORD PTR [esp+0x8]
1005f7ef:	lea    eax,[edx-0x3c]
1005f7f2:	mov    ecx,DWORD PTR [edx-0x40]
1005f7f5:	xor    ecx,eax
1005f7f7:	call   0x10041d97
1005f7fc:	mov    eax,0x100759ec
1005f801:	jmp    0x10057fec
1005f806:	mov    ecx,DWORD PTR [ebp+0x8]
1005f809:	jmp    0x1000312b
1005f80e:	lea    ecx,[ebp-0x28]
1005f811:	jmp    0x1000312b
1005f816:	mov    edx,DWORD PTR [esp+0x8]
1005f81a:	lea    eax,[edx+0xc]
1005f81d:	mov    ecx,DWORD PTR [edx-0x30]
1005f820:	xor    ecx,eax
1005f822:	call   0x10041d97
1005f827:	mov    eax,0x10075a20
1005f82c:	jmp    0x10057fec
1005f831:	mov    edx,DWORD PTR [esp+0x8]
1005f835:	lea    eax,[edx+0xc]
1005f838:	mov    ecx,DWORD PTR [edx-0x28]
1005f83b:	xor    ecx,eax
1005f83d:	call   0x10041d97
1005f842:	mov    eax,0x10075a78
1005f847:	jmp    0x10057fec
1005f84c:	mov    edx,DWORD PTR [esp+0x8]
1005f850:	lea    eax,[edx+0xc]
1005f853:	mov    ecx,DWORD PTR [edx-0x28]
1005f856:	xor    ecx,eax
1005f858:	call   0x10041d97
1005f85d:	mov    eax,0x10075ad0
1005f862:	jmp    0x10057fec
1005f867:	mov    edx,DWORD PTR [esp+0x8]
1005f86b:	lea    eax,[edx+0xc]
1005f86e:	mov    ecx,DWORD PTR [edx-0x28]
1005f871:	xor    ecx,eax
1005f873:	call   0x10041d97
1005f878:	mov    eax,0x10075b28
1005f87d:	jmp    0x10057fec
1005f882:	mov    edx,DWORD PTR [esp+0x8]
1005f886:	lea    eax,[edx+0xc]
1005f889:	mov    ecx,DWORD PTR [edx-0x28]
1005f88c:	xor    ecx,eax
1005f88e:	call   0x10041d97
1005f893:	mov    eax,0x10075b80
1005f898:	jmp    0x10057fec
1005f89d:	lea    eax,[ebp-0x28]
1005f8a0:	jmp    0x100268b7
1005f8a5:	lea    eax,[ebp-0x28]
1005f8a8:	jmp    0x100268b7
1005f8ad:	lea    eax,[ebp-0x28]
1005f8b0:	jmp    0x100268b7
1005f8b5:	push   DWORD PTR [ebp-0x30]
1005f8b8:	call   0x10041d92
1005f8bd:	pop    ecx
1005f8be:	ret    
1005f8bf:	lea    eax,[ebp-0x1c]
1005f8c2:	jmp    0x100268b7
1005f8c7:	mov    edx,DWORD PTR [esp+0x8]
1005f8cb:	lea    eax,[edx-0x34]
1005f8ce:	mov    ecx,DWORD PTR [edx-0x38]
1005f8d1:	xor    ecx,eax
1005f8d3:	call   0x10041d97
1005f8d8:	mov    eax,0x10075bcc
1005f8dd:	jmp    0x10057fec
1005f8e2:	mov    eax,DWORD PTR [ebp-0x10]
1005f8e5:	add    eax,0x8
1005f8e8:	jmp    0x1001e534
1005f8ed:	mov    eax,DWORD PTR [ebp-0x10]
1005f8f0:	add    eax,0xc
1005f8f3:	jmp    0x1001e534
1005f8f8:	mov    eax,DWORD PTR [ebp-0x10]
1005f8fb:	add    eax,0x10
1005f8fe:	jmp    0x10023f66
1005f903:	mov    edx,DWORD PTR [esp+0x8]
1005f907:	lea    eax,[edx+0xc]
1005f90a:	mov    ecx,DWORD PTR [edx-0x14]
1005f90d:	xor    ecx,eax
1005f90f:	call   0x10041d97
1005f914:	mov    eax,0x10075c08
1005f919:	jmp    0x10057fec
1005f91e:	lea    eax,[ebp-0x4c]
1005f921:	jmp    0x10023e04
1005f926:	lea    eax,[ebp-0x54]
1005f929:	jmp    0x1001e534
1005f92e:	lea    edi,[ebp-0x50]
1005f931:	jmp    0x100024dc
1005f936:	mov    edx,DWORD PTR [esp+0x8]
1005f93a:	lea    eax,[edx-0x54]
1005f93d:	mov    ecx,DWORD PTR [edx-0x58]
1005f940:	xor    ecx,eax
1005f942:	call   0x10041d97
1005f947:	mov    eax,0x10075c44
1005f94c:	jmp    0x10057fec
1005f951:	mov    eax,DWORD PTR [ebp-0x10]
1005f954:	add    eax,0x8
1005f957:	jmp    0x1001e534
1005f95c:	mov    eax,DWORD PTR [ebp-0x10]
1005f95f:	add    eax,0xc
1005f962:	jmp    0x1001e534
1005f967:	mov    edx,DWORD PTR [esp+0x8]
1005f96b:	lea    eax,[edx+0xc]
1005f96e:	mov    ecx,DWORD PTR [edx-0x14]
1005f971:	xor    ecx,eax
1005f973:	call   0x10041d97
1005f978:	mov    eax,0x10075c78
1005f97d:	jmp    0x10057fec
1005f982:	mov    edx,DWORD PTR [esp+0x8]
1005f986:	lea    eax,[edx+0xc]
1005f989:	mov    ecx,DWORD PTR [edx-0x1c]
1005f98c:	xor    ecx,eax
1005f98e:	call   0x10041d97
1005f993:	mov    eax,0x10075cd0
1005f998:	jmp    0x10057fec
1005f99d:	lea    esi,[ebp-0x30]
1005f9a0:	jmp    0x1002079b
1005f9a5:	lea    esi,[ebp-0x5c]
1005f9a8:	jmp    0x1002079b
1005f9ad:	mov    edx,DWORD PTR [esp+0x8]
1005f9b1:	lea    eax,[edx-0x6c]
1005f9b4:	mov    ecx,DWORD PTR [edx-0x70]
1005f9b7:	xor    ecx,eax
1005f9b9:	call   0x10041d97
1005f9be:	add    eax,0xc
1005f9c1:	mov    ecx,DWORD PTR [edx-0x8]
1005f9c4:	xor    ecx,eax
1005f9c6:	call   0x10041d97
1005f9cb:	mov    eax,0x10075d04
1005f9d0:	jmp    0x10057fec
1005f9d5:	lea    esi,[ebp-0x40]
1005f9d8:	jmp    0x1002079b
1005f9dd:	lea    esi,[ebp-0x6c]
1005f9e0:	jmp    0x1002079b
1005f9e5:	mov    edx,DWORD PTR [esp+0x8]
1005f9e9:	lea    eax,[edx-0x7c]
1005f9ec:	mov    ecx,DWORD PTR [edx-0x80]
1005f9ef:	xor    ecx,eax
1005f9f1:	call   0x10041d97
1005f9f6:	add    eax,0xc
1005f9f9:	mov    ecx,DWORD PTR [edx-0x8]
1005f9fc:	xor    ecx,eax
1005f9fe:	call   0x10041d97
1005fa03:	mov    eax,0x10075d38
1005fa08:	jmp    0x10057fec
1005fa0d:	mov    edx,DWORD PTR [esp+0x8]
1005fa11:	lea    eax,[edx+0xc]
1005fa14:	mov    ecx,DWORD PTR [edx-0x24]
1005fa17:	xor    ecx,eax
1005fa19:	call   0x10041d97
1005fa1e:	mov    eax,0x10075d90
1005fa23:	jmp    0x10057fec
1005fa28:	mov    edx,DWORD PTR [esp+0x8]
1005fa2c:	lea    eax,[edx+0xc]
1005fa2f:	mov    ecx,DWORD PTR [edx-0x14]
1005fa32:	xor    ecx,eax
1005fa34:	call   0x10041d97
1005fa39:	mov    eax,0x10075de8
1005fa3e:	jmp    0x10057fec
1005fa43:	lea    eax,[ebp-0x1c]
1005fa46:	jmp    0x1001ac8c
1005fa4b:	mov    edx,DWORD PTR [esp+0x8]
1005fa4f:	lea    eax,[edx+0xc]
1005fa52:	mov    ecx,DWORD PTR [edx-0x24]
1005fa55:	xor    ecx,eax
1005fa57:	call   0x10041d97
1005fa5c:	mov    eax,0x10075e14
1005fa61:	jmp    0x10057fec
1005fa66:	lea    ecx,[ebp+0x24]
1005fa69:	jmp    0x100011a3
1005fa6e:	lea    ecx,[ebp+0x8]
1005fa71:	jmp    0x1000312b
1005fa76:	mov    ecx,DWORD PTR [ebp-0x10]
1005fa79:	jmp    0x1000312b
1005fa7e:	mov    edx,DWORD PTR [esp+0x8]
1005fa82:	lea    eax,[edx+0xc]
1005fa85:	mov    ecx,DWORD PTR [edx-0x18]
1005fa88:	xor    ecx,eax
1005fa8a:	call   0x10041d97
1005fa8f:	mov    eax,0x10075e50
1005fa94:	jmp    0x10057fec
1005fa99:	jmp    0x1000207c
1005fa9e:	mov    edx,DWORD PTR [esp+0x8]
1005faa2:	lea    eax,[edx+0xc]
1005faa5:	mov    ecx,DWORD PTR [edx-0x18]
1005faa8:	xor    ecx,eax
1005faaa:	call   0x10041d97
1005faaf:	mov    eax,0x10075eb0
1005fab4:	jmp    0x10057fec
1005fab9:	mov    edx,DWORD PTR [esp+0x8]
1005fabd:	lea    eax,[edx+0xc]
1005fac0:	mov    ecx,DWORD PTR [edx-0x24]
1005fac3:	xor    ecx,eax
1005fac5:	call   0x10041d97
1005faca:	mov    eax,0x10075f08
1005facf:	jmp    0x10057fec
1005fad4:	mov    edx,DWORD PTR [esp+0x8]
1005fad8:	lea    eax,[edx+0xc]
1005fadb:	mov    ecx,DWORD PTR [edx-0x18]
1005fade:	xor    ecx,eax
1005fae0:	call   0x10041d97
1005fae5:	mov    eax,0x10075f60
1005faea:	jmp    0x10057fec
1005faef:	lea    eax,[ebp-0x1c]
1005faf2:	jmp    0x10019250
1005faf7:	mov    edx,DWORD PTR [esp+0x8]
1005fafb:	lea    eax,[edx-0x1c]
1005fafe:	mov    ecx,DWORD PTR [edx-0x20]
1005fb01:	xor    ecx,eax
1005fb03:	call   0x10041d97
1005fb08:	mov    eax,0x10075f8c
1005fb0d:	jmp    0x10057fec
1005fb12:	lea    esi,[ebp-0x10]
1005fb15:	jmp    0x1000713b
1005fb1a:	mov    edx,DWORD PTR [esp+0x8]
1005fb1e:	lea    eax,[edx+0xc]
1005fb21:	mov    ecx,DWORD PTR [edx-0x14]
1005fb24:	xor    ecx,eax
1005fb26:	call   0x10041d97
1005fb2b:	mov    eax,0x10075fb8
1005fb30:	jmp    0x10057fec
1005fb35:	lea    esi,[ebp+0x24]
1005fb38:	jmp    0x10012ec5
1005fb3d:	lea    ecx,[ebp+0x8]
1005fb40:	jmp    0x1000312b
1005fb45:	mov    ecx,DWORD PTR [ebp-0x10]
1005fb48:	jmp    0x1000312b
1005fb4d:	mov    edx,DWORD PTR [esp+0x8]
1005fb51:	lea    eax,[edx+0xc]
1005fb54:	mov    ecx,DWORD PTR [edx-0x18]
1005fb57:	xor    ecx,eax
1005fb59:	call   0x10041d97
1005fb5e:	mov    eax,0x10075ff4
1005fb63:	jmp    0x10057fec
1005fb68:	jmp    0x1000207c
1005fb6d:	mov    edx,DWORD PTR [esp+0x8]
1005fb71:	lea    eax,[edx+0xc]
1005fb74:	mov    ecx,DWORD PTR [edx-0x18]
1005fb77:	xor    ecx,eax
1005fb79:	call   0x10041d97
1005fb7e:	mov    eax,0x10076054
1005fb83:	jmp    0x10057fec
1005fb88:	lea    ecx,[ebp-0x30]
1005fb8b:	jmp    0x1000312b
1005fb90:	mov    edx,DWORD PTR [esp+0x8]
1005fb94:	lea    eax,[edx+0xc]
1005fb97:	mov    ecx,DWORD PTR [edx-0x5c]
1005fb9a:	xor    ecx,eax
1005fb9c:	call   0x10041d97
1005fba1:	mov    eax,0x10076080
1005fba6:	jmp    0x10057fec
1005fbab:	mov    eax,DWORD PTR [ebp-0x14]
1005fbae:	and    eax,0x1
1005fbb1:	je     0x1005fbc3
1005fbb7:	and    DWORD PTR [ebp-0x14],0xfffffffe
1005fbbb:	mov    esi,DWORD PTR [ebp+0x8]
1005fbbe:	jmp    0x1000d35a
1005fbc3:	ret    
1005fbc4:	lea    ecx,[ebp-0x50]
1005fbc7:	jmp    0x1000312b
1005fbcc:	lea    ecx,[ebp-0x34]
1005fbcf:	jmp    0x1000312b
1005fbd4:	mov    edx,DWORD PTR [esp+0x8]
1005fbd8:	lea    eax,[edx+0xc]
1005fbdb:	mov    ecx,DWORD PTR [edx-0x54]
1005fbde:	xor    ecx,eax
1005fbe0:	call   0x10041d97
1005fbe5:	mov    eax,0x100760bc
1005fbea:	jmp    0x10057fec
1005fbef:	lea    esi,[ebp-0x1c]
1005fbf2:	jmp    0x1000d35a
1005fbf7:	mov    edx,DWORD PTR [esp+0x8]
1005fbfb:	lea    eax,[edx+0xc]
1005fbfe:	mov    ecx,DWORD PTR [edx-0x20]
1005fc01:	xor    ecx,eax
1005fc03:	call   0x10041d97
1005fc08:	mov    eax,0x100760e8
1005fc0d:	jmp    0x10057fec
1005fc12:	lea    ecx,[ebp-0x34]
1005fc15:	jmp    0x1000312b
1005fc1a:	lea    esi,[ebp-0x28]
1005fc1d:	jmp    0x1000c958
1005fc22:	lea    ecx,[ebp-0x50]
1005fc25:	jmp    0x1000312b
1005fc2a:	mov    edx,DWORD PTR [esp+0x8]
1005fc2e:	lea    eax,[edx+0xc]
1005fc31:	mov    ecx,DWORD PTR [edx-0x54]
1005fc34:	xor    ecx,eax
1005fc36:	call   0x10041d97
1005fc3b:	mov    eax,0x10076124
1005fc40:	jmp    0x10057fec
1005fc45:	lea    edi,[ebp+0x8]
1005fc48:	jmp    0x100024dc
1005fc4d:	lea    ecx,[ebp-0x28]
1005fc50:	jmp    0x1000312b
1005fc55:	mov    edx,DWORD PTR [esp+0x8]
1005fc59:	lea    eax,[edx+0xc]
1005fc5c:	mov    ecx,DWORD PTR [edx-0x2c]
1005fc5f:	xor    ecx,eax
1005fc61:	call   0x10041d97
1005fc66:	mov    eax,0x10076158
1005fc6b:	jmp    0x10057fec
1005fc70:	mov    edx,DWORD PTR [esp+0x8]
1005fc74:	lea    eax,[edx+0xc]
1005fc77:	mov    ecx,DWORD PTR [edx-0x18]
1005fc7a:	xor    ecx,eax
1005fc7c:	call   0x10041d97
1005fc81:	mov    eax,0x100761b0
1005fc86:	jmp    0x10057fec
1005fc8b:	push   DWORD PTR [ebp-0x14]
1005fc8e:	call   0x10041d92
1005fc93:	pop    ecx
1005fc94:	ret    
1005fc95:	mov    eax,DWORD PTR [ebp-0x10]
1005fc98:	and    eax,0x1
1005fc9b:	je     0x1005fcad
1005fca1:	and    DWORD PTR [ebp-0x10],0xfffffffe
1005fca5:	mov    eax,DWORD PTR [ebp+0x8]
1005fca8:	jmp    0x10009745
1005fcad:	ret    
1005fcae:	push   DWORD PTR [ebp-0x14]
1005fcb1:	call   0x10041d92
1005fcb6:	pop    ecx
1005fcb7:	ret    
1005fcb8:	mov    edx,DWORD PTR [esp+0x8]
1005fcbc:	lea    eax,[edx+0xc]
1005fcbf:	mov    ecx,DWORD PTR [edx-0x18]
1005fcc2:	xor    ecx,eax
1005fcc4:	call   0x10041d97
1005fcc9:	mov    eax,0x100761ec
1005fcce:	jmp    0x10057fec
1005fcd3:	lea    eax,[ebp-0x10]
1005fcd6:	jmp    0x10009745
1005fcdb:	mov    edx,DWORD PTR [esp+0x8]
1005fcdf:	lea    eax,[edx+0xc]
1005fce2:	mov    ecx,DWORD PTR [edx-0x18]
1005fce5:	xor    ecx,eax
1005fce7:	call   0x10041d97
1005fcec:	mov    eax,0x10076218
1005fcf1:	jmp    0x10057fec
1005fcf6:	lea    edi,[ebp+0xc]
1005fcf9:	jmp    0x100024dc
1005fcfe:	lea    ecx,[ebp-0x28]
1005fd01:	jmp    0x1000312b
1005fd06:	lea    ecx,[ebp-0x44]
1005fd09:	jmp    0x1000312b
1005fd0e:	mov    edx,DWORD PTR [esp+0x8]
1005fd12:	lea    eax,[edx+0xc]
1005fd15:	mov    ecx,DWORD PTR [edx-0x48]
1005fd18:	xor    ecx,eax
1005fd1a:	call   0x10041d97
1005fd1f:	mov    eax,0x10076254
1005fd24:	jmp    0x10057fec
1005fd29:	lea    esi,[ebp+0x24]
1005fd2c:	jmp    0x1000c958
1005fd31:	lea    ecx,[ebp+0x8]
1005fd34:	jmp    0x1000312b
1005fd39:	mov    ecx,DWORD PTR [ebp-0x10]
1005fd3c:	jmp    0x1000312b
1005fd41:	mov    edx,DWORD PTR [esp+0x8]
1005fd45:	lea    eax,[edx+0xc]
1005fd48:	mov    ecx,DWORD PTR [edx-0x18]
1005fd4b:	xor    ecx,eax
1005fd4d:	call   0x10041d97
1005fd52:	mov    eax,0x10076290
1005fd57:	jmp    0x10057fec
1005fd5c:	jmp    0x1000207c
1005fd61:	mov    edx,DWORD PTR [esp+0x8]
1005fd65:	lea    eax,[edx+0xc]
1005fd68:	mov    ecx,DWORD PTR [edx-0x1c]
1005fd6b:	xor    ecx,eax
1005fd6d:	call   0x10041d97
1005fd72:	mov    eax,0x100762f0
1005fd77:	jmp    0x10057fec
1005fd7c:	mov    esi,DWORD PTR [ebp+0x8]
1005fd7f:	jmp    0x10003f4a
1005fd84:	mov    esi,DWORD PTR [ebp+0x8]
1005fd87:	add    esi,0x4
1005fd8a:	jmp    0x1000c44b
1005fd8f:	mov    esi,DWORD PTR [ebp+0x8]
1005fd92:	add    esi,0x8
1005fd95:	jmp    0x1000c45c
1005fd9a:	mov    eax,DWORD PTR [ebp+0x8]
1005fd9d:	add    eax,0xc
1005fda0:	jmp    0x1000c46d
1005fda5:	mov    edx,DWORD PTR [esp+0x8]
1005fda9:	lea    eax,[edx+0xc]
1005fdac:	mov    ecx,DWORD PTR [edx-0x10]
1005fdaf:	xor    ecx,eax
1005fdb1:	call   0x10041d97
1005fdb6:	mov    eax,0x10076334
1005fdbb:	jmp    0x10057fec
1005fdc0:	lea    ecx,[ebp-0x2c]
1005fdc3:	jmp    0x1000312b
1005fdc8:	mov    edx,DWORD PTR [esp+0x8]
1005fdcc:	lea    eax,[edx+0xc]
1005fdcf:	mov    ecx,DWORD PTR [edx-0x38]
1005fdd2:	xor    ecx,eax
1005fdd4:	call   0x10041d97
1005fdd9:	mov    ecx,DWORD PTR [edx-0x4]
1005fddc:	xor    ecx,eax
1005fdde:	call   0x10041d97
1005fde3:	mov    eax,0x10076360
1005fde8:	jmp    0x10057fec
1005fded:	lea    esi,[ebp-0x18]
1005fdf0:	jmp    0x1000a462
1005fdf5:	mov    edx,DWORD PTR [esp+0x8]
1005fdf9:	lea    eax,[edx+0xc]
1005fdfc:	mov    ecx,DWORD PTR [edx-0x15c]
1005fe02:	xor    ecx,eax
1005fe04:	call   0x10041d97
1005fe09:	mov    eax,0x1007638c
1005fe0e:	jmp    0x10057fec
1005fe13:	jmp    0x10037610
1005fe18:	mov    edx,DWORD PTR [esp+0x8]
1005fe1c:	lea    eax,[edx-0x14]
1005fe1f:	mov    ecx,DWORD PTR [edx-0x18]
1005fe22:	xor    ecx,eax
1005fe24:	call   0x10041d97
1005fe29:	mov    eax,0x100763b8
1005fe2e:	jmp    0x10057fec
1005fe33:	mov    eax,DWORD PTR [ebp-0x68]
1005fe36:	and    eax,0x1
1005fe39:	je     0x1005fe4b
1005fe3f:	and    DWORD PTR [ebp-0x68],0xfffffffe
1005fe43:	lea    ecx,[ebp-0x4c]
1005fe46:	jmp    0x1000312b
1005fe4b:	ret    
1005fe4c:	lea    esi,[ebp-0x68]
1005fe4f:	jmp    0x1000a462
1005fe54:	lea    ecx,[ebp-0x4c]
1005fe57:	jmp    0x1000312b
1005fe5c:	lea    ecx,[ebp-0x30]
1005fe5f:	jmp    0x1000312b
1005fe64:	mov    edx,DWORD PTR [esp+0x8]
1005fe68:	lea    eax,[edx-0x6c]
1005fe6b:	mov    ecx,DWORD PTR [edx-0x70]
1005fe6e:	xor    ecx,eax
1005fe70:	call   0x10041d97
1005fe75:	add    eax,0xc
1005fe78:	mov    ecx,DWORD PTR [edx-0x8]
1005fe7b:	xor    ecx,eax
1005fe7d:	call   0x10041d97
1005fe82:	mov    eax,0x10076404
1005fe87:	jmp    0x10057fec
1005fe8c:	mov    eax,DWORD PTR [ebp-0xc8]
1005fe92:	and    eax,0x1
1005fe95:	je     0x1005fead
1005fe9b:	and    DWORD PTR [ebp-0xc8],0xfffffffe
1005fea2:	lea    ecx,[ebp-0xc0]
1005fea8:	jmp    0x1000312b
1005fead:	ret    
1005feae:	lea    esi,[ebp-0xc8]
1005feb4:	jmp    0x1000a462
1005feb9:	lea    ecx,[ebp-0x88]
1005febf:	jmp    0x1000312b
1005fec4:	lea    ecx,[ebp-0x30]
1005fec7:	jmp    0x1000312b
1005fecc:	lea    esi,[ebp-0xa0]
1005fed2:	jmp    0x1000c958
1005fed7:	mov    esi,DWORD PTR [ebp-0xc4]
1005fedd:	jmp    0x1000c958
1005fee2:	lea    edi,[ebp-0x5c]
1005fee5:	jmp    0x1000c20b
1005feea:	lea    ecx,[ebp-0x88]
1005fef0:	jmp    0x1000312b
1005fef5:	lea    edi,[ebp-0x88]
1005fefb:	jmp    0x1000c20b
1005ff00:	mov    edx,DWORD PTR [esp+0x8]
1005ff04:	lea    eax,[edx-0xcc]
1005ff0a:	mov    ecx,DWORD PTR [edx-0xd0]
1005ff10:	xor    ecx,eax
1005ff12:	call   0x10041d97
1005ff17:	add    eax,0xc
1005ff1a:	mov    ecx,DWORD PTR [edx-0x8]
1005ff1d:	xor    ecx,eax
1005ff1f:	call   0x10041d97
1005ff24:	mov    eax,0x10076478
1005ff29:	jmp    0x10057fec
1005ff2e:	mov    eax,DWORD PTR [ebp-0x14]
1005ff31:	and    eax,0x1
1005ff34:	je     0x1005ff46
1005ff3a:	and    DWORD PTR [ebp-0x14],0xfffffffe
1005ff3e:	lea    ecx,[ebp-0x30]
1005ff41:	jmp    0x1000312b
1005ff46:	ret    
1005ff47:	lea    esi,[ebp-0x14]
1005ff4a:	jmp    0x1000a462
1005ff4f:	lea    ecx,[ebp-0x4c]
1005ff52:	jmp    0x1000312b
1005ff57:	mov    edx,DWORD PTR [esp+0x8]
1005ff5b:	lea    eax,[edx+0xc]
1005ff5e:	mov    ecx,DWORD PTR [edx-0x50]
1005ff61:	xor    ecx,eax
1005ff63:	call   0x10041d97
1005ff68:	mov    eax,0x100764b4
1005ff6d:	jmp    0x10057fec
1005ff72:	mov    esi,DWORD PTR [ebp-0x10]
1005ff75:	jmp    0x10003f4a
1005ff7a:	mov    esi,DWORD PTR [ebp-0x10]
1005ff7d:	add    esi,0x4
1005ff80:	jmp    0x10003f4a
1005ff85:	mov    edx,DWORD PTR [esp+0x8]
1005ff89:	lea    eax,[edx+0xc]
1005ff8c:	mov    ecx,DWORD PTR [edx-0x14]
1005ff8f:	xor    ecx,eax
1005ff91:	call   0x10041d97
1005ff96:	mov    eax,0x100764e8
1005ff9b:	jmp    0x10057fec
1005ffa0:	lea    ecx,[ebp-0x2c]
1005ffa3:	jmp    0x1000312b
1005ffa8:	mov    edx,DWORD PTR [esp+0x8]
1005ffac:	lea    eax,[edx+0xc]
1005ffaf:	mov    ecx,DWORD PTR [edx-0x30]
1005ffb2:	xor    ecx,eax
1005ffb4:	call   0x10041d97
1005ffb9:	mov    eax,0x10076514
1005ffbe:	jmp    0x10057fec
1005ffc3:	lea    ecx,[ebp-0x38]
1005ffc6:	jmp    0x1000312b
1005ffcb:	mov    edx,DWORD PTR [esp+0x8]
1005ffcf:	lea    eax,[edx+0xc]
1005ffd2:	mov    ecx,DWORD PTR [edx-0x44]
1005ffd5:	xor    ecx,eax
1005ffd7:	call   0x10041d97
1005ffdc:	mov    ecx,DWORD PTR [edx-0x8]
1005ffdf:	xor    ecx,eax
1005ffe1:	call   0x10041d97
1005ffe6:	mov    eax,0x100765a8
1005ffeb:	jmp    0x10057fec
1005fff0:	mov    edx,DWORD PTR [esp+0x8]
1005fff4:	lea    eax,[edx+0xc]
1005fff7:	mov    ecx,DWORD PTR [edx-0x20]
1005fffa:	xor    ecx,eax
1005fffc:	call   0x10041d97
10060001:	mov    eax,0x10076600
10060006:	jmp    0x10057fec
1006000b:	lea    ecx,[ebp-0x48]
1006000e:	jmp    0x1000312b
10060013:	lea    ecx,[ebp-0x2c]
10060016:	jmp    0x1000312b
1006001b:	mov    edx,DWORD PTR [esp+0x8]
1006001f:	lea    eax,[edx+0xc]
10060022:	mov    ecx,DWORD PTR [edx-0x4c]
10060025:	xor    ecx,eax
10060027:	call   0x10041d97
1006002c:	mov    eax,0x10076634
10060031:	jmp    0x10057fec
10060036:	lea    ecx,[ebp-0x30]
10060039:	jmp    0x1000312b
1006003e:	mov    edx,DWORD PTR [esp+0x8]
10060042:	lea    eax,[edx-0x44]
10060045:	mov    ecx,DWORD PTR [edx-0x48]
10060048:	xor    ecx,eax
1006004a:	call   0x10041d97
1006004f:	add    eax,0xc
10060052:	mov    ecx,DWORD PTR [edx-0x8]
10060055:	xor    ecx,eax
10060057:	call   0x10041d97
1006005c:	mov    eax,0x10076660
10060061:	jmp    0x10057fec
10060066:	lea    esi,[ebp-0x18]
10060069:	jmp    0x1000713b
1006006e:	mov    edx,DWORD PTR [esp+0x8]
10060072:	lea    eax,[edx+0xc]
10060075:	mov    ecx,DWORD PTR [edx-0x1c]
10060078:	xor    ecx,eax
1006007a:	call   0x10041d97
1006007f:	mov    eax,0x1007668c
10060084:	jmp    0x10057fec
10060089:	mov    edx,DWORD PTR [esp+0x8]
1006008d:	lea    eax,[edx+0xc]
10060090:	mov    ecx,DWORD PTR [edx-0x18]
10060093:	xor    ecx,eax
10060095:	call   0x10041d97
1006009a:	mov    eax,0x100766e4
1006009f:	jmp    0x10057fec
100600a4:	lea    ecx,[ebp-0x4c]
100600a7:	jmp    0x1000312b
100600ac:	lea    ecx,[ebp-0x30]
100600af:	jmp    0x1000312b
100600b4:	lea    ecx,[ebp-0x30]
100600b7:	jmp    0x1000312b
100600bc:	mov    edx,DWORD PTR [esp+0x8]
100600c0:	lea    eax,[edx-0x84]
100600c6:	mov    ecx,DWORD PTR [edx-0x88]
100600cc:	xor    ecx,eax
100600ce:	call   0x10041d97
100600d3:	add    eax,0xc
100600d6:	mov    ecx,DWORD PTR [edx-0x8]
100600d9:	xor    ecx,eax
100600db:	call   0x10041d97
100600e0:	mov    eax,0x10076720
100600e5:	jmp    0x10057fec
100600ea:	int3   
100600eb:	int3   
100600ec:	int3   
100600ed:	int3   
100600ee:	int3   
100600ef:	int3   
100600f0:	mov    eax,DWORD PTR [ebp-0x24]
100600f3:	and    eax,0x1
100600f6:	je     0x10060108
100600fc:	and    DWORD PTR [ebp-0x24],0xfffffffe
10060100:	mov    ecx,DWORD PTR [ebp-0x20]
10060103:	jmp    0x1000312b
10060108:	ret    
10060109:	mov    edx,DWORD PTR [esp+0x8]
1006010d:	lea    eax,[edx-0x20]
10060110:	mov    ecx,DWORD PTR [edx-0x24]
10060113:	xor    ecx,eax
10060115:	call   0x10041d97
1006011a:	add    eax,0x8
1006011d:	mov    ecx,DWORD PTR [edx-0x4]
10060120:	xor    ecx,eax
10060122:	call   0x10041d97
10060127:	mov    eax,0x1007674c
1006012c:	jmp    0x10057fec
10060131:	int3   
10060132:	int3   
10060133:	int3   
10060134:	int3   
10060135:	int3   
10060136:	int3   
10060137:	int3   
10060138:	int3   
10060139:	int3   
1006013a:	int3   
1006013b:	int3   
1006013c:	int3   
1006013d:	int3   
1006013e:	int3   
1006013f:	int3   
10060140:	lea    esi,[ebp-0x30]
10060143:	jmp    0x1001420b
10060148:	lea    eax,[ebp-0x40]
1006014b:	jmp    0x10002095
10060150:	lea    eax,[ebp-0x2c]
10060153:	jmp    0x10002095
10060158:	lea    eax,[ebp-0x3c]
1006015b:	jmp    0x10002095
10060160:	lea    esi,[ebp-0x28]
10060163:	jmp    0x1000616d
10060168:	mov    eax,DWORD PTR [ebp+0x4]
1006016b:	jmp    0x10002095
10060170:	mov    edx,DWORD PTR [esp+0x8]
10060174:	lea    eax,[edx-0x44]
10060177:	mov    ecx,DWORD PTR [edx-0x48]
1006017a:	xor    ecx,eax
1006017c:	call   0x10041d97
10060181:	mov    eax,0x100767a0
10060186:	jmp    0x10057fec
1006018b:	int3   
1006018c:	int3   
1006018d:	int3   
1006018e:	int3   
1006018f:	int3   
10060190:	lea    ecx,[ebp-0x28]
10060193:	jmp    0x1000312b
10060198:	mov    ecx,DWORD PTR [ebp+0x4]
1006019b:	jmp    0x10041ed0
100601a0:	mov    edx,DWORD PTR [esp+0x8]
100601a4:	lea    eax,[edx-0x28]
100601a7:	mov    ecx,DWORD PTR [edx-0x2c]
100601aa:	xor    ecx,eax
100601ac:	call   0x10041d97
100601b1:	mov    eax,0x100767d4
100601b6:	jmp    0x10057fec
100601bb:	int3   
100601bc:	int3   
100601bd:	int3   
100601be:	int3   
100601bf:	int3   
100601c0:	lea    ecx,[ebp-0x17c]
100601c6:	jmp    0x1000312b
100601cb:	lea    ecx,[ebp-0x160]
100601d1:	jmp    0x10041ed0
100601d6:	lea    eax,[ebp-0x1a0]
100601dc:	jmp    0x100020be
100601e1:	lea    ecx,[ebp-0x198]
100601e7:	jmp    0x1000312b
100601ec:	lea    ecx,[ebp-0x138]
100601f2:	jmp    0x10041ed0
100601f7:	mov    edx,DWORD PTR [esp+0x8]
100601fb:	lea    eax,[edx-0x1a4]
10060201:	mov    ecx,DWORD PTR [edx-0x1a8]
10060207:	xor    ecx,eax
10060209:	call   0x10041d97
1006020e:	add    eax,0xc
10060211:	mov    ecx,DWORD PTR [edx-0x4]
10060214:	xor    ecx,eax
10060216:	call   0x10041d97
1006021b:	mov    eax,0x10076820
10060220:	jmp    0x10057fec
10060225:	int3   
10060226:	int3   
10060227:	int3   
10060228:	int3   
10060229:	int3   
1006022a:	int3   
1006022b:	int3   
1006022c:	int3   
1006022d:	int3   
1006022e:	int3   
1006022f:	int3   
10060230:	lea    eax,[ebp-0x58]
10060233:	jmp    0x100020be
10060238:	lea    eax,[ebp-0x64]
1006023b:	jmp    0x10036ee0
10060240:	lea    ecx,[ebp-0x54]
10060243:	jmp    0x1000312b
10060248:	lea    ecx,[ebp-0x38]
1006024b:	jmp    0x10041ed0
10060250:	lea    ecx,[ebp-0x54]
10060253:	jmp    0x1000312b
10060258:	lea    ecx,[ebp-0x38]
1006025b:	jmp    0x10041ed0
10060260:	lea    ecx,[ebp-0x54]
10060263:	jmp    0x1000312b
10060268:	mov    edx,DWORD PTR [esp+0x8]
1006026c:	lea    eax,[edx-0x64]
1006026f:	mov    ecx,DWORD PTR [edx-0x68]
10060272:	xor    ecx,eax
10060274:	call   0x10041d97
10060279:	mov    eax,0x1007687c
1006027e:	jmp    0x10057fec
10060283:	int3   
10060284:	int3   
10060285:	int3   
10060286:	int3   
10060287:	int3   
10060288:	int3   
10060289:	int3   
1006028a:	int3   
1006028b:	int3   
1006028c:	int3   
1006028d:	int3   
1006028e:	int3   
1006028f:	int3   
10060290:	lea    eax,[ebp-0x5c]
10060293:	jmp    0x10036ee0
10060298:	lea    ecx,[ebp-0x54]
1006029b:	jmp    0x1000312b
100602a0:	lea    ecx,[ebp-0x38]
100602a3:	jmp    0x10041ed0
100602a8:	mov    edx,DWORD PTR [esp+0x8]
100602ac:	lea    eax,[edx-0x5c]
100602af:	mov    ecx,DWORD PTR [edx-0x60]
100602b2:	xor    ecx,eax
100602b4:	call   0x10041d97
100602b9:	mov    eax,0x100768b8
100602be:	jmp    0x10057fec
100602c3:	int3   
100602c4:	int3   
100602c5:	int3   
100602c6:	int3   
100602c7:	int3   
100602c8:	int3   
100602c9:	int3   
100602ca:	int3   
100602cb:	int3   
100602cc:	int3   
100602cd:	int3   
100602ce:	int3   
100602cf:	int3   
100602d0:	lea    ecx,[ebp-0x140]
100602d6:	jmp    0x1000312b
100602db:	lea    ecx,[ebp-0x194]
100602e1:	jmp    0x10041ed0
100602e6:	lea    ecx,[ebp-0x140]
100602ec:	jmp    0x1000312b
100602f1:	lea    ecx,[ebp-0x140]
100602f7:	jmp    0x1000312b
100602fc:	lea    ecx,[ebp-0x140]
10060302:	jmp    0x1000312b
10060307:	lea    ecx,[ebp-0x16c]
1006030d:	jmp    0x1000312b
10060312:	mov    edx,DWORD PTR [esp+0x8]
10060316:	lea    eax,[edx+0xc]
10060319:	mov    ecx,DWORD PTR [edx-0x19c]
1006031f:	xor    ecx,eax
10060321:	call   0x10041d97
10060326:	mov    ecx,DWORD PTR [edx-0x4]
10060329:	xor    ecx,eax
1006032b:	call   0x10041d97
10060330:	mov    eax,0x1007690c
10060335:	jmp    0x10057fec
1006033a:	int3   
1006033b:	int3   
1006033c:	int3   
1006033d:	int3   
1006033e:	int3   
1006033f:	int3   
10060340:	lea    ecx,[ebp-0x2c]
10060343:	jmp    0x1000312b
10060348:	lea    ecx,[ebp-0x64]
1006034b:	jmp    0x1000312b
10060350:	lea    ecx,[ebp-0x80]
10060353:	jmp    0x1000312b
10060358:	lea    ecx,[ebp-0x48]
1006035b:	jmp    0x1000312b
10060360:	mov    edx,DWORD PTR [esp+0x8]
10060364:	lea    eax,[edx-0x80]
10060367:	mov    ecx,DWORD PTR [edx-0x84]
1006036d:	xor    ecx,eax
1006036f:	call   0x10041d97
10060374:	add    eax,0xc
10060377:	mov    ecx,DWORD PTR [edx-0x4]
1006037a:	xor    ecx,eax
1006037c:	call   0x10041d97
10060381:	mov    eax,0x10076950
10060386:	jmp    0x10057fec
1006038b:	int3   
1006038c:	int3   
1006038d:	int3   
1006038e:	int3   
1006038f:	int3   
10060390:	lea    eax,[ebp-0x10]
10060393:	jmp    0x100020be
10060398:	mov    edx,DWORD PTR [esp+0x8]
1006039c:	lea    eax,[edx-0x10]
1006039f:	mov    ecx,DWORD PTR [edx-0x14]
100603a2:	xor    ecx,eax
100603a4:	call   0x10041d97
100603a9:	mov    eax,0x1007697c
100603ae:	jmp    0x10057fec
100603b3:	int3   
100603b4:	int3   
100603b5:	int3   
100603b6:	int3   
100603b7:	int3   
100603b8:	int3   
100603b9:	int3   
100603ba:	int3   
100603bb:	int3   
100603bc:	int3   
100603bd:	int3   
100603be:	int3   
100603bf:	int3   
100603c0:	lea    ecx,[ebp-0x54]
100603c3:	jmp    0x1000312b
100603c8:	lea    ecx,[ebp-0x38]
100603cb:	jmp    0x10041ed0
100603d0:	mov    edx,DWORD PTR [esp+0x8]
100603d4:	lea    eax,[edx-0x58]
100603d7:	mov    ecx,DWORD PTR [edx-0x5c]
100603da:	xor    ecx,eax
100603dc:	call   0x10041d97
100603e1:	mov    eax,0x100769b0
100603e6:	jmp    0x10057fec
100603eb:	int3   
100603ec:	int3   
100603ed:	int3   
100603ee:	int3   
100603ef:	int3   
100603f0:	lea    ecx,[ebp-0x54]
100603f3:	jmp    0x1000312b
100603f8:	lea    ecx,[ebp-0x38]
100603fb:	jmp    0x10041ed0
10060400:	mov    edx,DWORD PTR [esp+0x8]
10060404:	lea    eax,[edx-0x5c]
10060407:	mov    ecx,DWORD PTR [edx-0x60]
1006040a:	xor    ecx,eax
1006040c:	call   0x10041d97
10060411:	mov    eax,0x100769e4
10060416:	jmp    0x10057fec
1006041b:	int3   
1006041c:	int3   
1006041d:	int3   
1006041e:	int3   
1006041f:	int3   
10060420:	lea    ecx,[ebp-0x54]
10060423:	jmp    0x1000312b
10060428:	lea    ecx,[ebp-0x38]
1006042b:	jmp    0x10041ed0
10060430:	mov    edx,DWORD PTR [esp+0x8]
10060434:	lea    eax,[edx-0x6c]
10060437:	mov    ecx,DWORD PTR [edx-0x70]
1006043a:	xor    ecx,eax
1006043c:	call   0x10041d97
10060441:	mov    eax,0x10076a18
10060446:	jmp    0x10057fec
1006044b:	int3   
1006044c:	int3   
1006044d:	int3   
1006044e:	int3   
1006044f:	int3   
10060450:	lea    eax,[ebp-0x5c]
10060453:	jmp    0x10036ee0
10060458:	lea    ecx,[ebp-0x54]
1006045b:	jmp    0x1000312b
10060460:	lea    ecx,[ebp-0x38]
10060463:	jmp    0x10041ed0
10060468:	lea    ecx,[ebp-0x54]
1006046b:	jmp    0x1000312b
10060470:	lea    ecx,[ebp-0x38]
10060473:	jmp    0x10041ed0
10060478:	mov    edx,DWORD PTR [esp+0x8]
1006047c:	lea    eax,[edx-0x5c]
1006047f:	mov    ecx,DWORD PTR [edx-0x60]
10060482:	xor    ecx,eax
10060484:	call   0x10041d97
10060489:	mov    eax,0x10076a64
1006048e:	jmp    0x10057fec
10060493:	int3   
10060494:	int3   
10060495:	int3   
10060496:	int3   
10060497:	int3   
10060498:	int3   
10060499:	int3   
1006049a:	int3   
1006049b:	int3   
1006049c:	int3   
1006049d:	int3   
1006049e:	int3   
1006049f:	int3   
100604a0:	lea    eax,[ebp-0x5c]
100604a3:	jmp    0x10036ee0
100604a8:	lea    ecx,[ebp-0x54]
100604ab:	jmp    0x1000312b
100604b0:	lea    ecx,[ebp-0x38]
100604b3:	jmp    0x10041ed0
100604b8:	mov    edx,DWORD PTR [esp+0x8]
100604bc:	lea    eax,[edx-0x64]
100604bf:	mov    ecx,DWORD PTR [edx-0x68]
100604c2:	xor    ecx,eax
100604c4:	call   0x10041d97
100604c9:	mov    eax,0x10076aa0
100604ce:	jmp    0x10057fec
100604d3:	int3   
100604d4:	int3   
100604d5:	int3   
100604d6:	int3   
100604d7:	int3   
100604d8:	int3   
100604d9:	int3   
100604da:	int3   
100604db:	int3   
100604dc:	int3   
100604dd:	int3   
100604de:	int3   
100604df:	int3   
100604e0:	lea    eax,[ebp-0x5c]
100604e3:	jmp    0x10036ee0
100604e8:	lea    ecx,[ebp-0x54]
100604eb:	jmp    0x1000312b
100604f0:	lea    ecx,[ebp-0x38]
100604f3:	jmp    0x10041ed0
100604f8:	lea    ecx,[ebp-0x54]
100604fb:	jmp    0x1000312b
10060500:	lea    ecx,[ebp-0x38]
10060503:	jmp    0x10041ed0
10060508:	lea    ecx,[ebp-0x54]
1006050b:	jmp    0x1000312b
10060510:	lea    ecx,[ebp-0x54]
10060513:	jmp    0x1000312b
10060518:	lea    ecx,[ebp-0x54]
1006051b:	jmp    0x1000312b
10060520:	mov    edx,DWORD PTR [esp+0x8]
10060524:	lea    eax,[edx-0x60]
10060527:	mov    ecx,DWORD PTR [edx-0x64]
1006052a:	xor    ecx,eax
1006052c:	call   0x10041d97
10060531:	mov    eax,0x10076b08
10060536:	jmp    0x10057fec
1006053b:	int3   
1006053c:	int3   
1006053d:	int3   
1006053e:	int3   
1006053f:	int3   
10060540:	lea    eax,[ebp-0x58]
10060543:	jmp    0x10036ee0
10060548:	lea    ecx,[ebp-0x50]
1006054b:	jmp    0x1000312b
10060550:	lea    ecx,[ebp-0x34]
10060553:	jmp    0x10041ed0
10060558:	mov    edx,DWORD PTR [esp+0x8]
1006055c:	lea    eax,[edx-0x5c]
1006055f:	mov    ecx,DWORD PTR [edx-0x60]
10060562:	xor    ecx,eax
10060564:	call   0x10041d97
10060569:	mov    eax,0x10076b44
1006056e:	jmp    0x10057fec
10060573:	int3   
10060574:	int3   
10060575:	int3   
10060576:	int3   
10060577:	int3   
10060578:	int3   
10060579:	int3   
1006057a:	int3   
1006057b:	int3   
1006057c:	int3   
1006057d:	int3   
1006057e:	int3   
1006057f:	int3   
10060580:	lea    ecx,[ebp-0x50]
10060583:	jmp    0x1000312b
10060588:	lea    ecx,[ebp-0x34]
1006058b:	jmp    0x10041ed0
10060590:	mov    edx,DWORD PTR [esp+0x8]
10060594:	lea    eax,[edx-0x54]
10060597:	mov    ecx,DWORD PTR [edx-0x58]
1006059a:	xor    ecx,eax
1006059c:	call   0x10041d97
100605a1:	mov    eax,0x10076b78
100605a6:	jmp    0x10057fec
100605ab:	int3   
100605ac:	int3   
100605ad:	int3   
100605ae:	int3   
100605af:	int3   
100605b0:	lea    ecx,[ebp-0x864]
100605b6:	jmp    0x1000312b
100605bb:	lea    ecx,[ebp-0x848]
100605c1:	jmp    0x10041ed0
100605c6:	mov    edx,DWORD PTR [esp+0x8]
100605ca:	lea    eax,[edx-0x8a4]
100605d0:	mov    ecx,DWORD PTR [edx-0x8a8]
100605d6:	xor    ecx,eax
100605d8:	call   0x10041d97
100605dd:	add    eax,0xc
100605e0:	mov    ecx,DWORD PTR [edx-0x8]
100605e3:	xor    ecx,eax
100605e5:	call   0x10041d97
100605ea:	mov    eax,0x10076bac
100605ef:	jmp    0x10057fec
100605f4:	int3   
100605f5:	int3   
100605f6:	int3   
100605f7:	int3   
100605f8:	int3   
100605f9:	int3   
100605fa:	int3   
100605fb:	int3   
100605fc:	int3   
100605fd:	int3   
100605fe:	int3   
100605ff:	int3   
10060600:	lea    ecx,[ebp-0x4c]
10060603:	jmp    0x1000312b
10060608:	lea    ecx,[ebp-0x30]
1006060b:	jmp    0x1000312b
10060610:	mov    edx,DWORD PTR [esp+0x8]
10060614:	lea    eax,[edx+0xc]
10060617:	mov    ecx,DWORD PTR [edx-0xac]
1006061d:	xor    ecx,eax
1006061f:	call   0x10041d97
10060624:	mov    ecx,DWORD PTR [edx-0x8]
10060627:	xor    ecx,eax
10060629:	call   0x10041d97
1006062e:	mov    eax,0x10076c14
10060633:	jmp    0x10057fec
10060638:	int3   
10060639:	int3   
1006063a:	int3   
1006063b:	int3   
1006063c:	int3   
1006063d:	int3   
1006063e:	int3   
1006063f:	int3   
10060640:	mov    eax,DWORD PTR [ebp-0x14]
10060643:	and    eax,0x1
10060646:	je     0x10060658
1006064c:	and    DWORD PTR [ebp-0x14],0xfffffffe
10060650:	mov    ecx,DWORD PTR [ebp-0x10]
10060653:	jmp    0x1000312b
10060658:	ret    
10060659:	mov    edx,DWORD PTR [esp+0x8]
1006065d:	lea    eax,[edx-0x28]
10060660:	mov    ecx,DWORD PTR [edx-0x2c]
10060663:	xor    ecx,eax
10060665:	call   0x10041d97
1006066a:	mov    eax,0x10076c40
1006066f:	jmp    0x10057fec
10060674:	int3   
10060675:	int3   
10060676:	int3   
10060677:	int3   
10060678:	int3   
10060679:	int3   
1006067a:	int3   
1006067b:	int3   
1006067c:	int3   
1006067d:	int3   
1006067e:	int3   
1006067f:	int3   
10060680:	mov    eax,DWORD PTR [ebp-0x58]
10060683:	and    eax,0x1
10060686:	je     0x10060698
1006068c:	and    DWORD PTR [ebp-0x58],0xfffffffe
10060690:	mov    eax,DWORD PTR [ebp+0x4]
10060693:	jmp    0x10002095
10060698:	ret    
10060699:	lea    ecx,[ebp-0x54]
1006069c:	jmp    0x1000312b
100606a1:	lea    ecx,[ebp-0x38]
100606a4:	jmp    0x10041ed0
100606a9:	mov    edx,DWORD PTR [esp+0x8]
100606ad:	lea    eax,[edx-0x58]
100606b0:	mov    ecx,DWORD PTR [edx-0x5c]
100606b3:	xor    ecx,eax
100606b5:	call   0x10041d97
100606ba:	mov    eax,0x10076c7c
100606bf:	jmp    0x10057fec
100606c4:	int3   
100606c5:	int3   
100606c6:	int3   
100606c7:	int3   
100606c8:	int3   
100606c9:	int3   
100606ca:	int3   
100606cb:	int3   
100606cc:	int3   
100606cd:	int3   
100606ce:	int3   
100606cf:	int3   
100606d0:	mov    eax,DWORD PTR [ebp-0x54]
100606d3:	and    eax,0x1
100606d6:	je     0x100606e8
100606dc:	and    DWORD PTR [ebp-0x54],0xfffffffe
100606e0:	mov    ecx,DWORD PTR [ebp-0x5c]
100606e3:	jmp    0x1000312b
100606e8:	ret    
100606e9:	lea    esi,[ebp-0x6c]
100606ec:	jmp    0x1000d35a
100606f1:	lea    ecx,[ebp-0x48]
100606f4:	jmp    0x1000312b
100606f9:	lea    ecx,[ebp-0x2c]
100606fc:	jmp    0x1000312b
10060701:	lea    ecx,[ebp-0x2c]
10060704:	jmp    0x1000312b
10060709:	lea    ecx,[ebp-0x48]
1006070c:	jmp    0x1000312b
10060711:	mov    edx,DWORD PTR [esp+0x8]
10060715:	lea    eax,[edx-0x74]
10060718:	mov    ecx,DWORD PTR [edx-0x78]
1006071b:	xor    ecx,eax
1006071d:	call   0x10041d97
10060722:	add    eax,0x10
10060725:	mov    ecx,DWORD PTR [edx-0x4]
10060728:	xor    ecx,eax
1006072a:	call   0x10041d97
1006072f:	mov    eax,0x10076cd0
10060734:	jmp    0x10057fec
10060739:	mov    edx,DWORD PTR [esp+0x8]
1006073d:	lea    eax,[edx+0xc]
10060740:	mov    ecx,DWORD PTR [edx-0x1c]
10060743:	xor    ecx,eax
10060745:	call   0x10041d97
1006074a:	mov    eax,0x10076d28
1006074f:	jmp    0x10057fec
10060754:	mov    edx,DWORD PTR [esp+0x8]
10060758:	lea    eax,[edx+0xc]
1006075b:	mov    ecx,DWORD PTR [edx-0x1c]
1006075e:	xor    ecx,eax
10060760:	call   0x10041d97
10060765:	mov    eax,0x10076d80
1006076a:	jmp    0x10057fec
1006076f:	lea    ecx,[ebp-0x64]
10060772:	jmp    0x1000312b
10060777:	lea    ecx,[ebp-0x2c]
1006077a:	jmp    0x1000312b
1006077f:	lea    esi,[ebp-0x90]
10060785:	jmp    0x1000d35a
1006078a:	lea    ecx,[ebp-0x80]
1006078d:	jmp    0x1000312b
10060792:	lea    ecx,[ebp-0x48]
10060795:	jmp    0x1000312b
1006079a:	lea    ecx,[ebp-0x80]
1006079d:	jmp    0x1000312b
100607a2:	mov    edx,DWORD PTR [esp+0x8]
100607a6:	lea    eax,[edx-0x94]
100607ac:	mov    ecx,DWORD PTR [edx-0x98]
100607b2:	xor    ecx,eax
100607b4:	call   0x10041d97
100607b9:	mov    eax,0x10076de8
100607be:	jmp    0x10057fec
100607c3:	mov    eax,DWORD PTR [ebp+0x8]
100607c6:	add    eax,0x10
100607c9:	jmp    0x1002ba20
100607ce:	mov    eax,DWORD PTR [ebp+0x8]
100607d1:	add    eax,0x20
100607d4:	jmp    0x1002ba20
100607d9:	mov    edx,DWORD PTR [esp+0x8]
100607dd:	lea    eax,[edx+0xc]
100607e0:	mov    ecx,DWORD PTR [edx-0x10]
100607e3:	xor    ecx,eax
100607e5:	call   0x10041d97
100607ea:	mov    eax,0x10076e1c
100607ef:	jmp    0x10057fec
100607f4:	mov    eax,DWORD PTR [ebp-0x1fc]
100607fa:	and    eax,0x1
100607fd:	je     0x10060815
10060803:	and    DWORD PTR [ebp-0x1fc],0xfffffffe
1006080a:	lea    ecx,[ebp-0x198]
10060810:	jmp    0x1000312b
10060815:	ret    
10060816:	mov    eax,DWORD PTR [ebp-0x1fc]
1006081c:	and    eax,0x2
1006081f:	je     0x10060837
10060825:	and    DWORD PTR [ebp-0x1fc],0xfffffffd
1006082c:	lea    ecx,[ebp-0x160]
10060832:	jmp    0x1000312b
10060837:	ret    
10060838:	mov    eax,DWORD PTR [ebp-0x1fc]
1006083e:	and    eax,0x4
10060841:	je     0x10060859
10060847:	and    DWORD PTR [ebp-0x1fc],0xfffffffb
1006084e:	lea    ecx,[ebp-0x17c]
10060854:	jmp    0x1000312b
10060859:	ret    
1006085a:	mov    eax,DWORD PTR [ebp-0x1fc]
10060860:	and    eax,0x8
10060863:	je     0x1006087b
10060869:	and    DWORD PTR [ebp-0x1fc],0xfffffff7
10060870:	lea    ecx,[ebp-0x128]
10060876:	jmp    0x1000312b
1006087b:	ret    
1006087c:	lea    ecx,[ebp-0x1ec]
10060882:	jmp    0x1000312b
10060887:	lea    ecx,[ebp-0x1b4]
1006088d:	jmp    0x1000312b
10060892:	lea    ecx,[ebp-0x1d0]
10060898:	jmp    0x1000312b
1006089d:	lea    ecx,[ebp-0xd4]
100608a3:	jmp    0x1000312b
100608a8:	lea    ecx,[ebp-0x10c]
100608ae:	jmp    0x1000312b
100608b3:	lea    ecx,[ebp-0x144]
100608b9:	jmp    0x1000312b
100608be:	lea    ecx,[ebp-0xf0]
100608c4:	jmp    0x1000312b
100608c9:	lea    ecx,[ebp-0xb8]
100608cf:	jmp    0x1000312b
100608d4:	lea    esi,[ebp-0x9c]
100608da:	jmp    0x1000b749
100608df:	mov    edx,DWORD PTR [esp+0x8]
100608e3:	lea    eax,[edx-0x1fc]
100608e9:	mov    ecx,DWORD PTR [edx-0x200]
100608ef:	xor    ecx,eax
100608f1:	call   0x10041d97
100608f6:	mov    eax,0x10076ea8
100608fb:	jmp    0x10057fec
10060900:	lea    ecx,[ebp-0x48]
10060903:	jmp    0x1000312b
10060908:	lea    ecx,[ebp-0x2c]
1006090b:	jmp    0x1000312b
10060910:	mov    edx,DWORD PTR [esp+0x8]
10060914:	lea    eax,[edx-0x44]
10060917:	mov    ecx,DWORD PTR [edx-0x48]
1006091a:	xor    ecx,eax
1006091c:	call   0x10041d97
10060921:	mov    eax,0x10076edc
10060926:	jmp    0x10057fec
1006092b:	mov    esi,DWORD PTR [ebp+0x8]
1006092e:	add    esi,0x4
10060931:	jmp    0x10024948
10060936:	mov    esi,DWORD PTR [ebp+0x8]
10060939:	add    esi,0x18
1006093c:	jmp    0x10024948
10060941:	mov    eax,DWORD PTR [ebp+0x8]
10060944:	add    eax,0x2c
10060947:	jmp    0x1001e534
1006094c:	mov    eax,DWORD PTR [ebp+0x8]
1006094f:	add    eax,0x30
10060952:	jmp    0x1000c46d
10060957:	mov    eax,DWORD PTR [ebp+0x8]
1006095a:	add    eax,0x34
1006095d:	jmp    0x1000c47a
10060962:	mov    edx,DWORD PTR [esp+0x8]
10060966:	lea    eax,[edx+0xc]
10060969:	mov    ecx,DWORD PTR [edx-0x10]
1006096c:	xor    ecx,eax
1006096e:	call   0x10041d97
10060973:	mov    eax,0x10076f28
10060978:	jmp    0x10057fec
1006097d:	mov    edx,DWORD PTR [esp+0x8]
10060981:	lea    eax,[edx+0xc]
10060984:	mov    ecx,DWORD PTR [edx-0x1c]
10060987:	xor    ecx,eax
10060989:	call   0x10041d97
1006098e:	mov    eax,0x10076f80
10060993:	jmp    0x10057fec
10060998:	lea    esi,[ebp-0x2c]
1006099b:	jmp    0x1002079b
100609a0:	mov    edx,DWORD PTR [esp+0x8]
100609a4:	lea    eax,[edx+0xc]
100609a7:	mov    ecx,DWORD PTR [edx-0x44]
100609aa:	xor    ecx,eax
100609ac:	call   0x10041d97
100609b1:	mov    ecx,DWORD PTR [edx-0x4]
100609b4:	xor    ecx,eax
100609b6:	call   0x10041d97
100609bb:	mov    eax,0x10076fac
100609c0:	jmp    0x10057fec
100609c5:	lea    eax,[ebp-0x18]
100609c8:	jmp    0x10034a00
100609cd:	lea    ecx,[ebp-0x38]
100609d0:	jmp    0x1000312b
100609d5:	lea    ecx,[ebp-0x54]
100609d8:	jmp    0x1000312b
100609dd:	lea    edi,[ebp-0x1c]
100609e0:	jmp    0x100024dc
100609e5:	mov    edx,DWORD PTR [esp+0x8]
100609e9:	lea    eax,[edx+0xc]
100609ec:	mov    ecx,DWORD PTR [edx-0x58]
100609ef:	xor    ecx,eax
100609f1:	call   0x10041d97
100609f6:	mov    ecx,DWORD PTR [edx-0x8]
100609f9:	xor    ecx,eax
100609fb:	call   0x10041d97
10060a00:	mov    eax,0x10077024
10060a05:	jmp    0x10057fec
10060a0a:	lea    eax,[ebp-0x54]
10060a0d:	jmp    0x10034a00
10060a12:	lea    ecx,[ebp-0x4c]
10060a15:	jmp    0x1000312b
10060a1a:	lea    ecx,[ebp-0x30]
10060a1d:	jmp    0x1000312b
10060a22:	mov    edx,DWORD PTR [esp+0x8]
10060a26:	lea    eax,[edx+0xc]
10060a29:	mov    ecx,DWORD PTR [edx-0x58]
10060a2c:	xor    ecx,eax
10060a2e:	call   0x10041d97
10060a33:	mov    ecx,DWORD PTR [edx-0x8]
10060a36:	xor    ecx,eax
10060a38:	call   0x10041d97
10060a3d:	mov    eax,0x10077094
10060a42:	jmp    0x10057fec
10060a47:	lea    eax,[ebp-0x14]
10060a4a:	jmp    0x1001e534
10060a4f:	lea    eax,[ebp-0x2c]
10060a52:	jmp    0x1001e534
10060a57:	lea    eax,[ebp-0x24]
10060a5a:	jmp    0x1001e534
10060a5f:	lea    eax,[ebp-0x28]
10060a62:	jmp    0x1001e534
10060a67:	lea    eax,[ebp-0x20]
10060a6a:	jmp    0x1001e534
10060a6f:	mov    edx,DWORD PTR [esp+0x8]
10060a73:	lea    eax,[edx-0x2c]
10060a76:	mov    ecx,DWORD PTR [edx-0x30]
10060a79:	xor    ecx,eax
10060a7b:	call   0x10041d97
10060a80:	mov    eax,0x100770e0
10060a85:	jmp    0x10057fec
10060a8a:	lea    eax,[ebp-0x2c]
10060a8d:	jmp    0x10034a00
10060a92:	lea    ecx,[ebp-0x9c]
10060a98:	jmp    0x1000312b
10060a9d:	lea    ecx,[ebp-0x80]
10060aa0:	jmp    0x1000312b
10060aa5:	lea    esi,[ebp-0x9c]
10060aab:	jmp    0x1001a2a3
10060ab0:	lea    eax,[ebp-0x28]
10060ab3:	jmp    0x1001ac8c
10060ab8:	lea    esi,[ebp-0x1c]
10060abb:	jmp    0x1001acf5
10060ac0:	lea    ecx,[ebp-0xe0]
10060ac6:	jmp    0x1000312b
10060acb:	mov    edx,DWORD PTR [esp+0x8]
10060acf:	lea    eax,[edx+0xc]
10060ad2:	mov    ecx,DWORD PTR [edx-0xe4]
10060ad8:	xor    ecx,eax
10060ada:	call   0x10041d97
10060adf:	mov    eax,0x10077174
10060ae4:	jmp    0x10057fec
10060ae9:	lea    eax,[ebp-0x38]
10060aec:	jmp    0x10001242
10060af1:	mov    edx,DWORD PTR [esp+0x8]
10060af5:	lea    eax,[edx+0xc]
10060af8:	mov    ecx,DWORD PTR [edx-0x48]
10060afb:	xor    ecx,eax
10060afd:	call   0x10041d97
10060b02:	mov    eax,0x100771a8
10060b07:	jmp    0x10057fec
10060b0c:	lea    ecx,[ebp-0x7c]
10060b0f:	jmp    0x1000312b
10060b14:	lea    ecx,[ebp-0x3c]
10060b17:	jmp    0x100011a3
10060b1c:	mov    ecx,DWORD PTR [ebp-0x54]
10060b1f:	jmp    0x100011a3
10060b24:	lea    esi,[ebp-0xfc]
10060b2a:	jmp    0x10001f29
10060b2f:	lea    ecx,[ebp-0xbc]
10060b35:	jmp    0x1000312b
10060b3a:	lea    esi,[ebp-0xbc]
10060b40:	jmp    0x10001f29
10060b45:	mov    edx,DWORD PTR [esp+0x8]
10060b49:	lea    eax,[edx+0xc]
10060b4c:	mov    ecx,DWORD PTR [edx-0x100]
10060b52:	xor    ecx,eax
10060b54:	call   0x10041d97
10060b59:	mov    ecx,DWORD PTR [edx-0x8]
10060b5c:	xor    ecx,eax
10060b5e:	call   0x10041d97
10060b63:	mov    eax,0x10077234
10060b68:	jmp    0x10057fec
10060b6d:	lea    ecx,[ebp-0x4c]
10060b70:	jmp    0x1000312b
10060b75:	lea    ecx,[ebp-0x30]
10060b78:	jmp    0x1000312b
10060b7d:	lea    ecx,[ebp-0x6c]
10060b80:	jmp    0x100011a3
10060b85:	mov    edx,DWORD PTR [esp+0x8]
10060b89:	lea    eax,[edx-0x64]
10060b8c:	mov    ecx,DWORD PTR [edx-0x68]
10060b8f:	xor    ecx,eax
10060b91:	call   0x10041d97
10060b96:	add    eax,0x4
10060b99:	mov    ecx,DWORD PTR [edx-0x8]
10060b9c:	xor    ecx,eax
10060b9e:	call   0x10041d97
10060ba3:	mov    eax,0x10077278
10060ba8:	jmp    0x10057fec
10060bad:	lea    eax,[ebp-0x14]
10060bb0:	jmp    0x100020be
10060bb5:	lea    eax,[ebp-0x18]
10060bb8:	jmp    0x10034a00
10060bbd:	mov    edx,DWORD PTR [esp+0x8]
10060bc1:	lea    eax,[edx-0xc]
10060bc4:	mov    ecx,DWORD PTR [edx-0x10]
10060bc7:	xor    ecx,eax
10060bc9:	call   0x10041d97
10060bce:	mov    eax,0x100772ac
10060bd3:	jmp    0x10057fec
10060bd8:	mov    eax,DWORD PTR [ebp-0x10]
10060bdb:	and    eax,0x1
10060bde:	je     0x10060bf0
10060be4:	and    DWORD PTR [ebp-0x10],0xfffffffe
10060be8:	mov    esi,DWORD PTR [ebp+0x8]
10060beb:	jmp    0x10003cd8
10060bf0:	ret    
10060bf1:	lea    ecx,[ebp-0x34]
10060bf4:	jmp    0x1000312b
10060bf9:	lea    ecx,[ebp-0x34]
10060bfc:	jmp    0x1000312b
10060c01:	lea    ecx,[ebp-0x34]
10060c04:	jmp    0x1000312b
10060c09:	lea    ecx,[ebp-0x34]
10060c0c:	jmp    0x1000312b
10060c11:	lea    ecx,[ebp-0x34]
10060c14:	jmp    0x1000312b
10060c19:	lea    ecx,[ebp-0x34]
10060c1c:	jmp    0x1000312b
10060c21:	lea    ecx,[ebp-0x34]
10060c24:	jmp    0x1000312b
10060c29:	mov    edx,DWORD PTR [esp+0x8]
10060c2d:	lea    eax,[edx+0xc]
10060c30:	mov    ecx,DWORD PTR [edx-0x38]
10060c33:	xor    ecx,eax
10060c35:	call   0x10041d97
10060c3a:	mov    eax,0x10077310
10060c3f:	jmp    0x10057fec
10060c44:	lea    eax,[ebp-0x60]
10060c47:	jmp    0x1001457d
10060c4c:	lea    esi,[ebp-0x6c]
10060c4f:	jmp    0x1000713b
10060c54:	mov    edx,DWORD PTR [esp+0x8]
10060c58:	lea    eax,[edx+0xc]
10060c5b:	mov    ecx,DWORD PTR [edx-0x70]
10060c5e:	xor    ecx,eax
10060c60:	call   0x10041d97
10060c65:	mov    ecx,DWORD PTR [edx-0x4]
10060c68:	xor    ecx,eax
10060c6a:	call   0x10041d97
10060c6f:	mov    eax,0x10077344
10060c74:	jmp    0x10057fec
10060c79:	lea    ecx,[ebp+0x8]
10060c7c:	jmp    0x1000312b
10060c81:	mov    edx,DWORD PTR [esp+0x8]
10060c85:	lea    eax,[edx+0xc]
10060c88:	mov    ecx,DWORD PTR [edx-0x44]
10060c8b:	xor    ecx,eax
10060c8d:	call   0x10041d97
10060c92:	mov    eax,0x10077370
10060c97:	jmp    0x10057fec
10060c9c:	lea    eax,[ebp-0x28]
10060c9f:	jmp    0x10001242
10060ca4:	mov    edx,DWORD PTR [esp+0x8]
10060ca8:	lea    eax,[edx-0x4c]
10060cab:	mov    ecx,DWORD PTR [edx-0x50]
10060cae:	xor    ecx,eax
10060cb0:	call   0x10041d97
10060cb5:	mov    eax,0x100773a4
10060cba:	jmp    0x10057fec
10060cbf:	lea    esi,[ebp-0xac]
10060cc5:	jmp    0x10012ec5
10060cca:	mov    esi,DWORD PTR [ebp-0xc0]
10060cd0:	jmp    0x10012ec5
10060cd5:	lea    edi,[ebp-0x234]
10060cdb:	jmp    0x10012f4c
10060ce0:	lea    ecx,[ebp-0x184]
10060ce6:	jmp    0x1000312b
10060ceb:	lea    edi,[ebp-0x184]
10060cf1:	jmp    0x10012f4c
10060cf6:	mov    edx,DWORD PTR [esp+0x8]
10060cfa:	lea    eax,[edx+0xc]
10060cfd:	mov    ecx,DWORD PTR [edx-0x238]
10060d03:	xor    ecx,eax
10060d05:	call   0x10041d97
10060d0a:	mov    ecx,DWORD PTR [edx-0x8]
10060d0d:	xor    ecx,eax
10060d0f:	call   0x10041d97
10060d14:	mov    eax,0x10077424
10060d19:	jmp    0x10057fec
10060d1e:	jmp    0x10012ec0
10060d23:	mov    edx,DWORD PTR [esp+0x8]
10060d27:	lea    eax,[edx+0xc]
10060d2a:	mov    ecx,DWORD PTR [edx-0x10]
10060d2d:	xor    ecx,eax
10060d2f:	call   0x10041d97
10060d34:	mov    eax,0x10077450
10060d39:	jmp    0x10057fec
10060d3e:	mov    edx,DWORD PTR [esp+0x8]
10060d42:	lea    eax,[edx+0xc]
10060d45:	mov    ecx,DWORD PTR [edx-0x1c]
10060d48:	xor    ecx,eax
10060d4a:	call   0x10041d97
10060d4f:	mov    eax,0x100774a8
10060d54:	jmp    0x10057fec
10060d59:	lea    ecx,[ebp-0x2c]
10060d5c:	jmp    0x1000312b
10060d61:	lea    ecx,[ebp-0x48]
10060d64:	jmp    0x1000312b
10060d69:	lea    eax,[ebp+0x10]
10060d6c:	jmp    0x100020be
10060d71:	mov    edx,DWORD PTR [esp+0x8]
10060d75:	lea    eax,[edx+0xc]
10060d78:	mov    ecx,DWORD PTR [edx-0x4c]
10060d7b:	xor    ecx,eax
10060d7d:	call   0x10041d97
10060d82:	mov    eax,0x100774e4
10060d87:	jmp    0x10057fec
10060d8c:	lea    ecx,[ebp-0x28]
10060d8f:	jmp    0x1000312b
10060d94:	lea    ecx,[ebp-0x44]
10060d97:	jmp    0x1000312b
10060d9c:	mov    edx,DWORD PTR [esp+0x8]
10060da0:	lea    eax,[edx+0xc]
10060da3:	mov    ecx,DWORD PTR [edx-0x4c]
10060da6:	xor    ecx,eax
10060da8:	call   0x10041d97
10060dad:	mov    eax,0x10077518
10060db2:	jmp    0x10057fec
10060db7:	lea    ecx,[ebp-0x2c]
10060dba:	jmp    0x1000312b
10060dbf:	mov    edx,DWORD PTR [esp+0x8]
10060dc3:	lea    eax,[edx+0xc]
10060dc6:	mov    ecx,DWORD PTR [edx-0x44]
10060dc9:	xor    ecx,eax
10060dcb:	call   0x10041d97
10060dd0:	mov    ecx,DWORD PTR [edx-0x4]
10060dd3:	xor    ecx,eax
10060dd5:	call   0x10041d97
10060dda:	mov    eax,0x10077544
10060ddf:	jmp    0x10057fec
10060de4:	lea    esi,[ebp-0x28]
10060de7:	jmp    0x1000d35a
10060dec:	mov    edx,DWORD PTR [esp+0x8]
10060df0:	lea    eax,[edx+0xc]
10060df3:	mov    ecx,DWORD PTR [edx-0x2c]
10060df6:	xor    ecx,eax
10060df8:	call   0x10041d97
10060dfd:	mov    eax,0x100775ac
10060e02:	jmp    0x10057fec
10060e07:	lea    esi,[ebp-0x24]
10060e0a:	jmp    0x1000d35a
10060e0f:	mov    edx,DWORD PTR [esp+0x8]
10060e13:	lea    eax,[edx+0xc]
10060e16:	mov    ecx,DWORD PTR [edx-0x28]
10060e19:	xor    ecx,eax
10060e1b:	call   0x10041d97
10060e20:	mov    eax,0x10077640
10060e25:	jmp    0x10057fec
10060e2a:	lea    ecx,[ebp-0x4c]
10060e2d:	jmp    0x1000312b
10060e32:	lea    ecx,[ebp-0x2c]
10060e35:	jmp    0x1000312b
10060e3a:	mov    edx,DWORD PTR [esp+0x8]
10060e3e:	lea    eax,[edx+0xc]
10060e41:	mov    ecx,DWORD PTR [edx-0x50]
10060e44:	xor    ecx,eax
10060e46:	call   0x10041d97
10060e4b:	mov    ecx,DWORD PTR [edx-0x4]
10060e4e:	xor    ecx,eax
10060e50:	call   0x10041d97
10060e55:	mov    eax,0x10077674
10060e5a:	jmp    0x10057fec
10060e5f:	push   DWORD PTR [ebp-0x14]
10060e62:	call   0x10041d92
10060e67:	pop    ecx
10060e68:	ret    
10060e69:	mov    edx,DWORD PTR [esp+0x8]
10060e6d:	lea    eax,[edx+0xc]
10060e70:	mov    ecx,DWORD PTR [edx-0x18]
10060e73:	xor    ecx,eax
10060e75:	call   0x10041d97
10060e7a:	mov    ecx,DWORD PTR [edx+0x1000c]
10060e80:	xor    ecx,eax
10060e82:	call   0x10041d97
10060e87:	mov    eax,0x100776a0
10060e8c:	jmp    0x10057fec
10060e91:	lea    ecx,[ebp-0x80]
10060e94:	jmp    0x1000312b
10060e99:	lea    ecx,[ebp-0x80]
10060e9c:	jmp    0x1000312b
10060ea1:	lea    ecx,[ebp-0x48]
10060ea4:	jmp    0x1000312b
10060ea9:	lea    ecx,[ebp-0x64]
10060eac:	jmp    0x1000312b
10060eb1:	lea    ecx,[ebp-0x2c]
10060eb4:	jmp    0x1000312b
10060eb9:	mov    edx,DWORD PTR [esp+0x8]
10060ebd:	lea    eax,[edx-0x84]
10060ec3:	mov    ecx,DWORD PTR [edx-0x88]
10060ec9:	xor    ecx,eax
10060ecb:	call   0x10041d97
10060ed0:	mov    eax,0x100776ec
10060ed5:	jmp    0x10057fec
10060eda:	lea    esi,[ebp+0x24]
10060edd:	jmp    0x10003cd8
10060ee2:	lea    ecx,[ebp+0x8]
10060ee5:	jmp    0x1000312b
10060eea:	mov    ecx,DWORD PTR [ebp-0x10]
10060eed:	jmp    0x1000312b
10060ef2:	mov    edx,DWORD PTR [esp+0x8]
10060ef6:	lea    eax,[edx+0xc]
10060ef9:	mov    ecx,DWORD PTR [edx-0x18]
10060efc:	xor    ecx,eax
10060efe:	call   0x10041d97
10060f03:	mov    eax,0x10077728
10060f08:	jmp    0x10057fec
10060f0d:	mov    ecx,DWORD PTR [ebp+0x8]
10060f10:	jmp    0x1000312b
10060f15:	mov    edx,DWORD PTR [esp+0x8]
10060f19:	lea    eax,[edx+0xc]
10060f1c:	mov    ecx,DWORD PTR [edx-0x10]
10060f1f:	xor    ecx,eax
10060f21:	call   0x10041d97
10060f26:	mov    eax,0x10077754
10060f2b:	jmp    0x10057fec
10060f30:	jmp    0x1000207c
10060f35:	mov    edx,DWORD PTR [esp+0x8]
10060f39:	lea    eax,[edx+0xc]
10060f3c:	mov    ecx,DWORD PTR [edx-0x1c]
10060f3f:	xor    ecx,eax
10060f41:	call   0x10041d97
10060f46:	mov    eax,0x100777b4
10060f4b:	jmp    0x10057fec
10060f50:	lea    eax,[ebp-0x14]
10060f53:	jmp    0x10009745
10060f58:	mov    edx,DWORD PTR [esp+0x8]
10060f5c:	lea    eax,[edx+0xc]
10060f5f:	mov    ecx,DWORD PTR [edx-0x1c]
10060f62:	xor    ecx,eax
10060f64:	call   0x10041d97
10060f69:	mov    eax,0x100777e0
10060f6e:	jmp    0x10057fec
10060f73:	mov    eax,DWORD PTR [ebp-0xcc]
10060f79:	and    eax,0x1
10060f7c:	je     0x10060f94
10060f82:	and    DWORD PTR [ebp-0xcc],0xfffffffe
10060f89:	lea    ecx,[ebp-0xa0]
10060f8f:	jmp    0x1000312b
10060f94:	ret    
10060f95:	mov    eax,DWORD PTR [ebp-0xcc]
10060f9b:	and    eax,0x2
10060f9e:	je     0x10060fb6
10060fa4:	and    DWORD PTR [ebp-0xcc],0xfffffffd
10060fab:	lea    ecx,[ebp-0xbc]
10060fb1:	jmp    0x1000312b
10060fb6:	ret    
10060fb7:	lea    ecx,[ebp-0x30]
10060fba:	jmp    0x1000312b
10060fbf:	lea    ecx,[ebp-0x4c]
10060fc2:	jmp    0x1000312b
10060fc7:	lea    ecx,[ebp-0xbc]
10060fcd:	jmp    0x1000312b
10060fd2:	lea    ecx,[ebp-0x84]
10060fd8:	jmp    0x1000312b
10060fdd:	lea    ecx,[ebp-0xa0]
10060fe3:	jmp    0x1000312b
10060fe8:	lea    ecx,[ebp-0x68]
10060feb:	jmp    0x1000312b
10060ff0:	lea    ecx,[ebp-0x84]
10060ff6:	jmp    0x1000312b
10060ffb:	mov    edx,DWORD PTR [esp+0x8]
10060fff:	lea    eax,[edx-0xcc]
10061005:	mov    ecx,DWORD PTR [edx-0xd0]
1006100b:	xor    ecx,eax
1006100d:	call   0x10041d97
10061012:	add    eax,0xc
10061015:	mov    ecx,DWORD PTR [edx-0x8]
10061018:	xor    ecx,eax
1006101a:	call   0x10041d97
1006101f:	mov    eax,0x10077860
10061024:	jmp    0x10057fec
10061029:	lea    ecx,[ebp-0x50]
1006102c:	jmp    0x1000312b
10061031:	lea    eax,[ebp-0xd8]
10061037:	jmp    0x100020be
1006103c:	lea    ecx,[ebp-0x34]
1006103f:	jmp    0x1000312b
10061044:	lea    esi,[ebp-0xb8]
1006104a:	jmp    0x10003cd8
1006104f:	mov    esi,DWORD PTR [ebp-0xc8]
10061055:	jmp    0x10003cd8
1006105a:	lea    edi,[ebp-0x7c]
1006105d:	jmp    0x10007a8e
10061062:	lea    edi,[ebp-0xa8]
10061068:	jmp    0x10007a8e
1006106d:	mov    edx,DWORD PTR [esp+0x8]
10061071:	lea    eax,[edx-0xdc]
10061077:	mov    ecx,DWORD PTR [edx-0xe0]
1006107d:	xor    ecx,eax
1006107f:	call   0x10041d97
10061084:	add    eax,0xc
10061087:	mov    ecx,DWORD PTR [edx-0x8]
1006108a:	xor    ecx,eax
1006108c:	call   0x10041d97
10061091:	mov    eax,0x100778bc
10061096:	jmp    0x10057fec
1006109b:	lea    eax,[ebp+0xc]
1006109e:	jmp    0x100020be
100610a3:	lea    ecx,[ebp-0x30]
100610a6:	jmp    0x1000312b
100610ab:	mov    esi,DWORD PTR [ebp-0x50]
100610ae:	jmp    0x10003cd8
100610b3:	lea    edi,[ebp-0xa8]
100610b9:	jmp    0x10007a8e
100610be:	lea    edi,[ebp-0x7c]
100610c1:	jmp    0x10007a8e
100610c6:	mov    edx,DWORD PTR [esp+0x8]
100610ca:	lea    eax,[edx+0xc]
100610cd:	mov    ecx,DWORD PTR [edx-0xac]
100610d3:	xor    ecx,eax
100610d5:	call   0x10041d97
100610da:	mov    ecx,DWORD PTR [edx-0x4]
100610dd:	xor    ecx,eax
100610df:	call   0x10041d97
100610e4:	mov    eax,0x10077908
100610e9:	jmp    0x10057fec
100610ee:	lea    ecx,[ebp-0x30]
100610f1:	jmp    0x1000312b
100610f6:	mov    edx,DWORD PTR [esp+0x8]
100610fa:	lea    eax,[edx+0xc]
100610fd:	mov    ecx,DWORD PTR [edx-0x4c]
10061100:	xor    ecx,eax
10061102:	call   0x10041d97
10061107:	mov    ecx,DWORD PTR [edx-0x4]
1006110a:	xor    ecx,eax
1006110c:	call   0x10041d97
10061111:	mov    eax,0x10077934
10061116:	jmp    0x10057fec
1006111b:	lea    eax,[ebp-0x14]
1006111e:	jmp    0x100020be
10061123:	mov    edx,DWORD PTR [esp+0x8]
10061127:	lea    eax,[edx+0xc]
1006112a:	mov    ecx,DWORD PTR [edx-0x2c]
1006112d:	xor    ecx,eax
1006112f:	call   0x10041d97
10061134:	mov    eax,0x10077960
10061139:	jmp    0x10057fec
1006113e:	lea    ecx,[ebp-0x68]
10061141:	jmp    0x100067ea
10061146:	lea    ecx,[ebp-0x30]
10061149:	jmp    0x10006def
1006114e:	lea    ecx,[ebp-0x40]
10061151:	jmp    0x100067ea
10061156:	lea    ecx,[ebp-0x2c]
10061159:	jmp    0x1000312b
1006115e:	lea    ecx,[ebp-0x84]
10061164:	jmp    0x1000312b
10061169:	lea    ecx,[ebp-0x58]
1006116c:	jmp    0x100067ea
10061171:	lea    ecx,[ebp-0x84]
10061177:	jmp    0x1000312b
1006117c:	mov    edx,DWORD PTR [esp+0x8]
10061180:	lea    eax,[edx+0xc]
10061183:	mov    ecx,DWORD PTR [edx-0x88]
10061189:	xor    ecx,eax
1006118b:	call   0x10041d97
10061190:	mov    ecx,DWORD PTR [edx-0x4]
10061193:	xor    ecx,eax
10061195:	call   0x10041d97
1006119a:	mov    eax,0x100779bc
1006119f:	jmp    0x10057fec
100611a4:	lea    eax,[ebp-0x10]
100611a7:	jmp    0x10002095
100611ac:	mov    edx,DWORD PTR [esp+0x8]
100611b0:	lea    eax,[edx+0xc]
100611b3:	mov    ecx,DWORD PTR [edx-0x14]
100611b6:	xor    ecx,eax
100611b8:	call   0x10041d97
100611bd:	mov    eax,0x100779e8
100611c2:	jmp    0x10057fec
100611c7:	lea    eax,[ebp-0x1c]
100611ca:	jmp    0x10034a00
100611cf:	mov    edx,DWORD PTR [esp+0x8]
100611d3:	lea    eax,[edx-0x14]
100611d6:	mov    ecx,DWORD PTR [edx-0x18]
100611d9:	xor    ecx,eax
100611db:	call   0x10041d97
100611e0:	mov    eax,0x10077a14
100611e5:	jmp    0x10057fec
100611ea:	push   DWORD PTR [ebp-0x14]
100611ed:	call   0x10041d92
100611f2:	pop    ecx
100611f3:	ret    
100611f4:	lea    eax,[ebp-0x14]
100611f7:	jmp    0x10003cc0
100611fc:	mov    edx,DWORD PTR [esp+0x8]
10061200:	lea    eax,[edx+0xc]
10061203:	mov    ecx,DWORD PTR [edx-0x18]
10061206:	xor    ecx,eax
10061208:	call   0x10041d97
1006120d:	mov    eax,0x10077a48
10061212:	jmp    0x10057fec
10061217:	mov    eax,DWORD PTR [ebp+0x8]
1006121a:	jmp    0x10002095
1006121f:	mov    edx,DWORD PTR [esp+0x8]
10061223:	lea    eax,[edx+0xc]
10061226:	mov    ecx,DWORD PTR [edx-0x10]
10061229:	xor    ecx,eax
1006122b:	call   0x10041d97
10061230:	mov    eax,0x10077a74
10061235:	jmp    0x10057fec
1006123a:	int3   
1006123b:	int3   
1006123c:	int3   
1006123d:	int3   
1006123e:	int3   
1006123f:	int3   
10061240:	lea    eax,[ebp-0x14]
10061243:	jmp    0x100020be
10061248:	lea    eax,[ebp-0x10]
1006124b:	jmp    0x100020be
10061250:	mov    edx,DWORD PTR [esp+0x8]
10061254:	lea    eax,[edx-0x20]
10061257:	mov    ecx,DWORD PTR [edx-0x24]
1006125a:	xor    ecx,eax
1006125c:	call   0x10041d97
10061261:	mov    eax,0x10077aa8
10061266:	jmp    0x10057fec
1006126b:	int3   
1006126c:	int3   
1006126d:	int3   
1006126e:	int3   
1006126f:	int3   
10061270:	lea    eax,[ebp-0x14]
10061273:	jmp    0x10034050
10061278:	lea    eax,[ebp-0x24]
1006127b:	jmp    0x10034a00
10061280:	lea    eax,[ebp-0x1c]
10061283:	jmp    0x10034050
10061288:	mov    edx,DWORD PTR [esp+0x8]
1006128c:	lea    eax,[edx+0xc]
1006128f:	mov    ecx,DWORD PTR [edx-0x2c]
10061292:	xor    ecx,eax
10061294:	call   0x10041d97
10061299:	mov    eax,0x10077b18
1006129e:	jmp    0x10057fec
100612a3:	int3   
100612a4:	int3   
100612a5:	int3   
100612a6:	int3   
100612a7:	int3   
100612a8:	int3   
100612a9:	int3   
100612aa:	int3   
100612ab:	int3   
100612ac:	int3   
100612ad:	int3   
100612ae:	int3   
100612af:	int3   
100612b0:	mov    edx,DWORD PTR [esp+0x8]
100612b4:	lea    eax,[edx+0xc]
100612b7:	mov    ecx,DWORD PTR [edx-0x20]
100612ba:	xor    ecx,eax
100612bc:	call   0x10041d97
100612c1:	mov    eax,0x10077b70
100612c6:	jmp    0x10057fec
100612cb:	int3   
100612cc:	int3   
100612cd:	int3   
100612ce:	int3   
100612cf:	int3   
100612d0:	lea    ecx,[ebp-0x40]
100612d3:	jmp    0x100375e0
100612d8:	mov    edx,DWORD PTR [esp+0x8]
100612dc:	lea    eax,[edx-0x44]
100612df:	mov    ecx,DWORD PTR [edx-0x48]
100612e2:	xor    ecx,eax
100612e4:	call   0x10041d97
100612e9:	mov    eax,0x10077b9c
100612ee:	jmp    0x10057fec
100612f3:	int3   
100612f4:	int3   
100612f5:	int3   
100612f6:	int3   
100612f7:	int3   
100612f8:	int3   
100612f9:	int3   
100612fa:	int3   
100612fb:	int3   
100612fc:	int3   
100612fd:	int3   
100612fe:	int3   
100612ff:	int3   
10061300:	lea    ecx,[ebp-0x14]
10061303:	jmp    0x100375e0
10061308:	mov    eax,DWORD PTR [ebp-0x1c]
1006130b:	and    eax,0x1
1006130e:	je     0x10061320
10061314:	and    DWORD PTR [ebp-0x1c],0xfffffffe
10061318:	mov    ecx,DWORD PTR [ebp-0x18]
1006131b:	jmp    0x1000312b
10061320:	ret    
10061321:	mov    edx,DWORD PTR [esp+0x8]
10061325:	lea    eax,[edx-0x1c]
10061328:	mov    ecx,DWORD PTR [edx-0x20]
1006132b:	xor    ecx,eax
1006132d:	call   0x10041d97
10061332:	mov    eax,0x10077bd0
10061337:	jmp    0x10057fec
1006133c:	int3   
1006133d:	int3   
1006133e:	int3   
1006133f:	int3   
10061340:	lea    eax,[ebp-0x1c]
10061343:	jmp    0x100020be
10061348:	lea    ecx,[ebp-0x44]
1006134b:	jmp    0x1000312b
10061350:	mov    edx,DWORD PTR [esp+0x8]
10061354:	lea    eax,[edx+0xc]
10061357:	mov    ecx,DWORD PTR [edx-0x48]
1006135a:	xor    ecx,eax
1006135c:	call   0x10041d97
10061361:	mov    eax,0x10077c38
10061366:	jmp    0x10057fec
1006136b:	int3   
1006136c:	int3   
1006136d:	int3   
1006136e:	int3   
1006136f:	int3   
10061370:	lea    ecx,[ebp-0x54]
10061373:	jmp    0x1000312b
10061378:	lea    ecx,[ebp-0x38]
1006137b:	jmp    0x10041ed0
10061380:	lea    eax,[ebp-0x58]
10061383:	jmp    0x100020be
10061388:	mov    edx,DWORD PTR [esp+0x8]
1006138c:	lea    eax,[edx-0x5c]
1006138f:	mov    ecx,DWORD PTR [edx-0x60]
10061392:	xor    ecx,eax
10061394:	call   0x10041d97
10061399:	mov    eax,0x10077c74
1006139e:	jmp    0x10057fec
100613a3:	int3   
100613a4:	int3   
100613a5:	int3   
100613a6:	int3   
100613a7:	int3   
100613a8:	int3   
100613a9:	int3   
100613aa:	int3   
100613ab:	int3   
100613ac:	int3   
100613ad:	int3   
100613ae:	int3   
100613af:	int3   
100613b0:	mov    eax,DWORD PTR [ebp-0x58]
100613b3:	and    eax,0x1
100613b6:	je     0x100613c8
100613bc:	and    DWORD PTR [ebp-0x58],0xfffffffe
100613c0:	mov    eax,DWORD PTR [ebp+0x4]
100613c3:	jmp    0x10002095
100613c8:	ret    
100613c9:	lea    ecx,[ebp-0x54]
100613cc:	jmp    0x1000312b
100613d1:	lea    ecx,[ebp-0x38]
100613d4:	jmp    0x10041ed0
100613d9:	mov    edx,DWORD PTR [esp+0x8]
100613dd:	lea    eax,[edx-0x60]
100613e0:	mov    ecx,DWORD PTR [edx-0x64]
100613e3:	xor    ecx,eax
100613e5:	call   0x10041d97
100613ea:	mov    eax,0x10077cb0
100613ef:	jmp    0x10057fec
100613f4:	int3   
100613f5:	int3   
100613f6:	int3   
100613f7:	int3   
100613f8:	int3   
100613f9:	int3   
100613fa:	int3   
100613fb:	int3   
100613fc:	int3   
100613fd:	int3   
100613fe:	int3   
100613ff:	int3   
10061400:	mov    eax,DWORD PTR [ebp-0x14]
10061403:	and    eax,0x1
10061406:	je     0x10061418
1006140c:	and    DWORD PTR [ebp-0x14],0xfffffffe
10061410:	mov    ecx,DWORD PTR [ebp-0x10]
10061413:	jmp    0x1000312b
10061418:	ret    
10061419:	lea    ecx,[ebp-0x30]
1006141c:	jmp    0x1000312b
10061421:	lea    ecx,[ebp-0x30]
10061424:	jmp    0x1000312b
10061429:	lea    ecx,[ebp-0x30]
1006142c:	jmp    0x1000312b
10061431:	lea    ecx,[ebp-0x30]
10061434:	jmp    0x1000312b
10061439:	lea    ecx,[ebp-0x30]
1006143c:	jmp    0x1000312b
10061441:	lea    ecx,[ebp-0x30]
10061444:	jmp    0x1000312b
10061449:	mov    edx,DWORD PTR [esp+0x8]
1006144d:	lea    eax,[edx-0x34]
10061450:	mov    ecx,DWORD PTR [edx-0x38]
10061453:	xor    ecx,eax
10061455:	call   0x10041d97
1006145a:	mov    eax,0x10077d0c
1006145f:	jmp    0x10057fec
10061464:	lea    ecx,[ebp-0x64]
10061467:	jmp    0x1000312b
1006146c:	lea    ecx,[ebp-0x2c]
1006146f:	jmp    0x1000312b
10061474:	lea    ecx,[ebp-0x48]
10061477:	jmp    0x1000312b
1006147c:	mov    edx,DWORD PTR [esp+0x8]
10061480:	lea    eax,[edx-0x64]
10061483:	mov    ecx,DWORD PTR [edx-0x68]
10061486:	xor    ecx,eax
10061488:	call   0x10041d97
1006148d:	mov    eax,0x10077d48
10061492:	jmp    0x10057fec
10061497:	lea    eax,[ebp-0x24]
1006149a:	jmp    0x10038d40
1006149f:	push   DWORD PTR [ebp-0x1c]
100614a2:	call   0x10041d92
100614a7:	pop    ecx
100614a8:	ret    
100614a9:	mov    eax,DWORD PTR [ebp-0x10]
100614ac:	and    eax,0x1
100614af:	je     0x100614c1
100614b5:	and    DWORD PTR [ebp-0x10],0xfffffffe
100614b9:	lea    ecx,[ebp-0x44]
100614bc:	jmp    0x1000312b
100614c1:	ret    
100614c2:	mov    eax,DWORD PTR [ebp-0x10]
100614c5:	and    eax,0x2
100614c8:	je     0x100614da
100614ce:	and    DWORD PTR [ebp-0x10],0xfffffffd
100614d2:	lea    ecx,[ebp-0x7c]
100614d5:	jmp    0x1000312b
100614da:	ret    
100614db:	mov    eax,DWORD PTR [ebp-0x10]
100614de:	and    eax,0x4
100614e1:	je     0x100614f3
100614e7:	and    DWORD PTR [ebp-0x10],0xfffffffb
100614eb:	lea    ecx,[ebp-0x60]
100614ee:	jmp    0x1000312b
100614f3:	ret    
100614f4:	mov    eax,DWORD PTR [ebp-0x10]
100614f7:	and    eax,0x8
100614fa:	je     0x1006150f
10061500:	and    DWORD PTR [ebp-0x10],0xfffffff7
10061504:	lea    ecx,[ebp-0x98]
1006150a:	jmp    0x1000312b
1006150f:	ret    
10061510:	lea    ecx,[ebp-0x44]
10061513:	jmp    0x1000312b
10061518:	lea    ecx,[ebp-0x98]
1006151e:	jmp    0x1000312b
10061523:	lea    ecx,[ebp-0x60]
10061526:	jmp    0x1000312b
1006152b:	lea    ecx,[ebp-0x7c]
1006152e:	jmp    0x1000312b
10061533:	mov    edx,DWORD PTR [esp+0x8]
10061537:	lea    eax,[edx+0xc]
1006153a:	mov    ecx,DWORD PTR [edx-0xb8]
10061540:	xor    ecx,eax
10061542:	call   0x10041d97
10061547:	mov    eax,0x10077de0
1006154c:	jmp    0x10057fec
10061551:	lea    ecx,[ebp-0xbc]
10061557:	jmp    0x1000312b
1006155c:	lea    eax,[ebp-0xdc]
10061562:	jmp    0x1001e534
10061567:	lea    eax,[ebp-0xe0]
1006156d:	jmp    0x1001e534
10061572:	lea    ecx,[ebp-0xbc]
10061578:	jmp    0x1000312b
1006157d:	lea    ecx,[ebp-0xbc]
10061583:	jmp    0x1000312b
10061588:	lea    ecx,[ebp-0x30]
1006158b:	jmp    0x1000312b
10061590:	lea    eax,[ebp-0xa0]
10061596:	jmp    0x100020be
1006159b:	lea    ecx,[ebp-0xbc]
100615a1:	jmp    0x1000312b
100615a6:	lea    ecx,[ebp-0xbc]
100615ac:	jmp    0x1000312b
100615b1:	lea    ecx,[ebp-0xbc]
100615b7:	jmp    0x1000312b
100615bc:	lea    ecx,[ebp-0xbc]
100615c2:	jmp    0x1000312b
100615c7:	lea    edi,[ebp-0xe4]
100615cd:	jmp    0x100024dc
100615d2:	lea    ecx,[ebp-0x74]
100615d5:	jmp    0x1000312b
100615da:	mov    edx,DWORD PTR [esp+0x8]
100615de:	lea    eax,[edx-0xe4]
100615e4:	mov    ecx,DWORD PTR [edx-0xe8]
100615ea:	xor    ecx,eax
100615ec:	call   0x10041d97
100615f1:	add    eax,0xc
100615f4:	mov    ecx,DWORD PTR [edx-0x8]
100615f7:	xor    ecx,eax
100615f9:	call   0x10041d97
100615fe:	mov    eax,0x10077e70
10061603:	jmp    0x10057fec
10061608:	lea    ecx,[ebp-0x28]
1006160b:	jmp    0x10022074
10061610:	lea    ecx,[ebp-0x38]
10061613:	jmp    0x10022074
10061618:	mov    edx,DWORD PTR [esp+0x8]
1006161c:	lea    eax,[edx+0xc]
1006161f:	mov    ecx,DWORD PTR [edx-0x3c]
10061622:	xor    ecx,eax
10061624:	call   0x10041d97
10061629:	mov    eax,0x10077ed8
1006162e:	jmp    0x10057fec
10061633:	lea    eax,[ebp-0x18]
10061636:	jmp    0x1001e534
1006163b:	lea    ecx,[ebp-0x60]
1006163e:	jmp    0x10022074
10061643:	lea    ecx,[ebp-0x50]
10061646:	jmp    0x10022074
1006164b:	lea    ecx,[ebp-0x70]
1006164e:	jmp    0x10022074
10061653:	lea    edi,[ebp+0x10]
10061656:	jmp    0x100024dc
1006165b:	lea    ecx,[ebp-0x80]
1006165e:	jmp    0x10022074
10061663:	lea    ecx,[ebp-0x40]
10061666:	jmp    0x10022074
1006166b:	lea    ecx,[ebp-0x30]
1006166e:	jmp    0x10022074
10061673:	lea    edi,[ebp+0x10]
10061676:	jmp    0x100024dc
1006167b:	mov    edx,DWORD PTR [esp+0x8]
1006167f:	lea    eax,[edx+0xc]
10061682:	mov    ecx,DWORD PTR [edx-0xb4]
10061688:	xor    ecx,eax
1006168a:	call   0x10041d97
1006168f:	mov    eax,0x10077fb8
10061694:	jmp    0x10057fec
10061699:	lea    eax,[ebp-0x18]
1006169c:	jmp    0x1001e534
100616a1:	lea    eax,[ebp-0x28]
100616a4:	jmp    0x10003d3c
100616a9:	lea    eax,[ebp-0x28]
100616ac:	jmp    0x10023e04
100616b1:	lea    esi,[ebp-0x1c]
100616b4:	jmp    0x10003f4a
100616b9:	mov    edx,DWORD PTR [esp+0x8]
100616bd:	lea    eax,[edx+0xc]
100616c0:	mov    ecx,DWORD PTR [edx-0x60]
100616c3:	xor    ecx,eax
100616c5:	call   0x10041d97
100616ca:	mov    eax,0x10078030
100616cf:	jmp    0x10057fec
100616d4:	lea    eax,[ebp-0x30]
100616d7:	jmp    0x10003d3c
100616dc:	lea    ecx,[ebp+0x54]
100616df:	jmp    0x1000312b
100616e4:	lea    ecx,[ebp+0x1c]
100616e7:	jmp    0x1000312b
100616ec:	lea    ecx,[ebp+0x0]
100616ef:	jmp    0x1000312b
100616f4:	lea    ecx,[ebp+0x38]
100616f7:	jmp    0x1000312b
100616fc:	lea    esi,[ebp-0xf0]
10061702:	jmp    0x10002ecc
10061707:	lea    ecx,[ebp-0x68]
1006170a:	jmp    0x1000312b
1006170f:	lea    ecx,[ebp-0x4c]
10061712:	jmp    0x1000312b
10061717:	mov    edx,DWORD PTR [esp+0x8]
1006171b:	lea    eax,[edx+0xc]
1006171e:	mov    ecx,DWORD PTR [edx-0xf4]
10061724:	xor    ecx,eax
10061726:	call   0x10041d97
1006172b:	mov    ecx,DWORD PTR [edx+0x7c]
1006172e:	xor    ecx,eax
10061730:	call   0x10041d97
10061735:	mov    eax,0x100780dc
1006173a:	jmp    0x10057fec
1006173f:	mov    edx,DWORD PTR [esp+0x8]
10061743:	lea    eax,[edx+0xc]
10061746:	mov    ecx,DWORD PTR [edx-0x20]
10061749:	xor    ecx,eax
1006174b:	call   0x10041d97
10061750:	mov    eax,0x10078134
10061755:	jmp    0x10057fec
1006175a:	lea    ecx,[ebp-0x6c]
1006175d:	jmp    0x1000312b
10061762:	lea    ecx,[ebp-0x34]
10061765:	jmp    0x100011a3
1006176a:	lea    ecx,[ebp-0x50]
1006176d:	jmp    0x1000312b
10061772:	lea    ecx,[ebp-0x88]
10061778:	jmp    0x1000312b
1006177d:	lea    ecx,[ebp-0x88]
10061783:	jmp    0x1000312b
10061788:	mov    edx,DWORD PTR [esp+0x8]
1006178c:	lea    eax,[edx-0x9c]
10061792:	mov    ecx,DWORD PTR [edx-0xa0]
10061798:	xor    ecx,eax
1006179a:	call   0x10041d97
1006179f:	add    eax,0xc
100617a2:	mov    ecx,DWORD PTR [edx-0x8]
100617a5:	xor    ecx,eax
100617a7:	call   0x10041d97
100617ac:	mov    eax,0x10078188
100617b1:	jmp    0x10057fec
100617b6:	push   DWORD PTR [ebp-0x14]
100617b9:	call   0x10041d92
100617be:	pop    ecx
100617bf:	ret    
100617c0:	mov    edx,DWORD PTR [esp+0x8]
100617c4:	lea    eax,[edx+0xc]
100617c7:	mov    ecx,DWORD PTR [edx-0x18]
100617ca:	xor    ecx,eax
100617cc:	call   0x10041d97
100617d1:	mov    eax,0x100781e8
100617d6:	jmp    0x10057fec
100617db:	lea    esi,[ebp-0x28]
100617de:	jmp    0x1000713b
100617e3:	lea    eax,[ebp+0x0]
100617e6:	jmp    0x10017570
100617eb:	mov    edx,DWORD PTR [esp+0x8]
100617ef:	lea    eax,[edx+0xc]
100617f2:	mov    ecx,DWORD PTR [edx-0x2c]
100617f5:	xor    ecx,eax
100617f7:	call   0x10041d97
100617fc:	mov    ecx,DWORD PTR [edx+0x410]
10061802:	xor    ecx,eax
10061804:	call   0x10041d97
10061809:	mov    eax,0x10078250
1006180e:	jmp    0x10057fec
10061813:	mov    edx,DWORD PTR [esp+0x8]
10061817:	lea    eax,[edx+0xc]
1006181a:	mov    ecx,DWORD PTR [edx-0x20]
1006181d:	xor    ecx,eax
1006181f:	call   0x10041d97
10061824:	mov    eax,0x100782a8
10061829:	jmp    0x10057fec
1006182e:	lea    ecx,[ebp-0x110]
10061834:	jmp    0x1000312b
10061839:	lea    ecx,[ebp-0x60]
1006183c:	jmp    0x1000312b
10061841:	lea    esi,[ebp-0xec]
10061847:	jmp    0x10002ecc
1006184c:	lea    ecx,[ebp-0x44]
1006184f:	jmp    0x1000312b
10061854:	mov    edx,DWORD PTR [esp+0x8]
10061858:	lea    eax,[edx+0xc]
1006185b:	mov    ecx,DWORD PTR [edx-0x114]
10061861:	xor    ecx,eax
10061863:	call   0x10041d97
10061868:	mov    ecx,DWORD PTR [edx-0x4]
1006186b:	xor    ecx,eax
1006186d:	call   0x10041d97
10061872:	mov    eax,0x100782f4
10061877:	jmp    0x10057fec
1006187c:	lea    ecx,[ebp-0x44]
1006187f:	jmp    0x1000312b
10061884:	lea    ecx,[ebp-0x28]
10061887:	jmp    0x1000312b
1006188c:	mov    edx,DWORD PTR [esp+0x8]
10061890:	lea    eax,[edx+0xc]
10061893:	mov    ecx,DWORD PTR [edx-0x48]
10061896:	xor    ecx,eax
10061898:	call   0x10041d97
1006189d:	mov    eax,0x10078328
100618a2:	jmp    0x10057fec
100618a7:	mov    eax,DWORD PTR [ebp-0x10]
100618aa:	and    eax,0x1
100618ad:	je     0x100618bf
100618b3:	and    DWORD PTR [ebp-0x10],0xfffffffe
100618b7:	mov    esi,DWORD PTR [ebp+0x8]
100618ba:	jmp    0x1000c491
100618bf:	ret    
100618c0:	lea    ecx,[ebp-0x40]
100618c3:	jmp    0x1000312b
100618c8:	lea    esi,[ebp-0x24]
100618cb:	jmp    0x1000d35a
100618d0:	mov    edx,DWORD PTR [esp+0x8]
100618d4:	lea    eax,[edx+0xc]
100618d7:	mov    ecx,DWORD PTR [edx-0x44]
100618da:	xor    ecx,eax
100618dc:	call   0x10041d97
100618e1:	mov    eax,0x10078364
100618e6:	jmp    0x10057fec
100618eb:	lea    ecx,[ebp-0x1034]
100618f1:	jmp    0x1000312b
100618f6:	lea    esi,[ebp-0x1050]
100618fc:	jmp    0x1000c491
10061901:	lea    esi,[ebp-0x1064]
10061907:	jmp    0x1000c491
1006190c:	mov    edx,DWORD PTR [esp+0x8]
10061910:	lea    eax,[edx+0xc]
10061913:	mov    ecx,DWORD PTR [edx-0x106c]
10061919:	xor    ecx,eax
1006191b:	call   0x10041d97
10061920:	mov    ecx,DWORD PTR [edx-0x8]
10061923:	xor    ecx,eax
10061925:	call   0x10041d97
1006192a:	mov    eax,0x10078408
1006192f:	jmp    0x10057fec
10061934:	lea    eax,[ebp-0x58]
10061937:	jmp    0x1001e534
1006193c:	lea    edi,[ebp-0x5c]
1006193f:	jmp    0x100024dc
10061944:	lea    ecx,[ebp-0x30]
10061947:	jmp    0x1000312b
1006194c:	lea    ecx,[ebp-0x50]
1006194f:	jmp    0x100011a3
10061954:	lea    edi,[ebp-0x54]
10061957:	jmp    0x100024dc
1006195c:	lea    ecx,[ebp-0x98]
10061962:	jmp    0x1000312b
10061967:	lea    edi,[ebp-0x54]
1006196a:	jmp    0x100024dc
1006196f:	mov    edx,DWORD PTR [esp+0x8]
10061973:	lea    eax,[edx+0xc]
10061976:	mov    ecx,DWORD PTR [edx-0x9c]
1006197c:	xor    ecx,eax
1006197e:	call   0x10041d97
10061983:	mov    ecx,DWORD PTR [edx-0x8]
10061986:	xor    ecx,eax
10061988:	call   0x10041d97
1006198d:	mov    eax,0x100784a4
10061992:	jmp    0x10057fec
10061997:	lea    esi,[ebp-0x24]
1006199a:	jmp    0x1000c958
1006199f:	lea    ecx,[ebp-0x40]
100619a2:	jmp    0x1000312b
100619a7:	mov    edx,DWORD PTR [esp+0x8]
100619ab:	lea    eax,[edx+0xc]
100619ae:	mov    ecx,DWORD PTR [edx-0x44]
100619b1:	xor    ecx,eax
100619b3:	call   0x10041d97
100619b8:	mov    eax,0x100784d8
100619bd:	jmp    0x10057fec
100619c2:	lea    eax,[ebp-0x18]
100619c5:	jmp    0x100020be
100619ca:	mov    edx,DWORD PTR [esp+0x8]
100619ce:	lea    eax,[edx+0xc]
100619d1:	mov    ecx,DWORD PTR [edx-0x24]
100619d4:	xor    ecx,eax
100619d6:	call   0x10041d97
100619db:	mov    eax,0x10078504
100619e0:	jmp    0x10057fec
100619e5:	lea    edi,[ebp+0xc]
100619e8:	jmp    0x100024dc
100619ed:	lea    edi,[ebp+0x8]
100619f0:	jmp    0x100024dc
100619f5:	lea    ecx,[ebp-0x44]
100619f8:	jmp    0x1000312b
100619fd:	lea    ecx,[ebp-0x28]
10061a00:	jmp    0x1000312b
10061a05:	mov    edx,DWORD PTR [esp+0x8]
10061a09:	lea    eax,[edx+0xc]
10061a0c:	mov    ecx,DWORD PTR [edx-0x48]
10061a0f:	xor    ecx,eax
10061a11:	call   0x10041d97
10061a16:	mov    eax,0x10078548
10061a1b:	jmp    0x10057fec
10061a20:	lea    ecx,[ebp-0x180]
10061a26:	jmp    0x1000312b
10061a2b:	lea    esi,[ebp-0xc0]
10061a31:	jmp    0x1000b749
10061a36:	lea    ecx,[ebp-0x180]
10061a3c:	jmp    0x1000312b
10061a41:	lea    ecx,[ebp-0x180]
10061a47:	jmp    0x1000312b
10061a4c:	lea    ecx,[ebp-0x180]
10061a52:	jmp    0x1000312b
10061a57:	lea    ecx,[ebp-0x180]
10061a5d:	jmp    0x1000312b
10061a62:	lea    esi,[ebp-0x158]
10061a68:	jmp    0x1000b7b1
10061a6d:	lea    ecx,[ebp-0x2c]
10061a70:	jmp    0x1000312b
10061a75:	lea    ecx,[ebp-0x180]
10061a7b:	jmp    0x1000312b
10061a80:	lea    ecx,[ebp-0x1b8]
10061a86:	jmp    0x1000312b
10061a8b:	lea    ecx,[ebp-0x1f0]
10061a91:	jmp    0x1000312b
10061a96:	lea    ecx,[ebp-0x20c]
10061a9c:	jmp    0x1000312b
10061aa1:	lea    ecx,[ebp-0x1d4]
10061aa7:	jmp    0x1000312b
10061aac:	lea    ecx,[ebp-0x19c]
10061ab2:	jmp    0x1000312b
10061ab7:	lea    ecx,[ebp-0x180]
10061abd:	jmp    0x1000312b
10061ac2:	lea    ecx,[ebp-0x180]
10061ac8:	jmp    0x1000312b
10061acd:	lea    ecx,[ebp-0x180]
10061ad3:	jmp    0x1000312b
10061ad8:	lea    ecx,[ebp-0x2c]
10061adb:	jmp    0x1000312b
10061ae0:	lea    ecx,[ebp-0x19c]
10061ae6:	jmp    0x1000312b
10061aeb:	lea    ecx,[ebp-0x19c]
10061af1:	jmp    0x1000312b
10061af6:	lea    ecx,[ebp-0x1b8]
10061afc:	jmp    0x1000312b
10061b01:	mov    edx,DWORD PTR [esp+0x8]
10061b05:	lea    eax,[edx+0xc]
10061b08:	mov    ecx,DWORD PTR [edx-0x210]
10061b0e:	xor    ecx,eax
10061b10:	call   0x10041d97
10061b15:	mov    ecx,DWORD PTR [edx-0x4]
10061b18:	xor    ecx,eax
10061b1a:	call   0x10041d97
10061b1f:	mov    eax,0x10078620
10061b24:	jmp    0x10057fec
10061b29:	mov    eax,DWORD PTR [ebp-0x14]
10061b2c:	and    eax,0x1
10061b2f:	je     0x10061b41
10061b35:	and    DWORD PTR [ebp-0x14],0xfffffffe
10061b39:	lea    ecx,[ebp-0x30]
10061b3c:	jmp    0x1000312b
10061b41:	ret    
10061b42:	mov    eax,DWORD PTR [ebp-0x14]
10061b45:	and    eax,0x2
10061b48:	je     0x10061b5a
10061b4e:	and    DWORD PTR [ebp-0x14],0xfffffffd
10061b52:	lea    ecx,[ebp-0x30]
10061b55:	jmp    0x1000312b
10061b5a:	ret    
10061b5b:	mov    eax,DWORD PTR [ebp-0x14]
10061b5e:	and    eax,0x4
10061b61:	je     0x10061b73
10061b67:	and    DWORD PTR [ebp-0x14],0xfffffffb
10061b6b:	lea    ecx,[ebp-0x30]
10061b6e:	jmp    0x1000312b
10061b73:	ret    
10061b74:	mov    eax,DWORD PTR [ebp-0x14]
10061b77:	and    eax,0x8
10061b7a:	je     0x10061b8c
10061b80:	and    DWORD PTR [ebp-0x14],0xfffffff7
10061b84:	lea    ecx,[ebp-0x4c]
10061b87:	jmp    0x1000312b
10061b8c:	ret    
10061b8d:	mov    edx,DWORD PTR [esp+0x8]
10061b91:	lea    eax,[edx+0xc]
10061b94:	mov    ecx,DWORD PTR [edx-0x50]
10061b97:	xor    ecx,eax
10061b99:	call   0x10041d97
10061b9e:	mov    eax,0x10078664
10061ba3:	jmp    0x10057fec
10061ba8:	mov    eax,DWORD PTR [ebp-0x14]
10061bab:	and    eax,0x1
10061bae:	je     0x10061bc0
10061bb4:	and    DWORD PTR [ebp-0x14],0xfffffffe
10061bb8:	lea    ecx,[ebp-0x30]
10061bbb:	jmp    0x1000312b
10061bc0:	ret    
10061bc1:	mov    eax,DWORD PTR [ebp-0x14]
10061bc4:	and    eax,0x2
10061bc7:	je     0x10061bd9
10061bcd:	and    DWORD PTR [ebp-0x14],0xfffffffd
10061bd1:	lea    ecx,[ebp-0x30]
10061bd4:	jmp    0x1000312b
10061bd9:	ret    
10061bda:	mov    eax,DWORD PTR [ebp-0x14]
10061bdd:	and    eax,0x4
10061be0:	je     0x10061bf2
10061be6:	and    DWORD PTR [ebp-0x14],0xfffffffb
10061bea:	lea    ecx,[ebp-0x4c]
10061bed:	jmp    0x1000312b
10061bf2:	ret    
10061bf3:	mov    edx,DWORD PTR [esp+0x8]
10061bf7:	lea    eax,[edx+0xc]
10061bfa:	mov    ecx,DWORD PTR [edx-0x54]
10061bfd:	xor    ecx,eax
10061bff:	call   0x10041d97
10061c04:	mov    eax,0x100786a0
10061c09:	jmp    0x10057fec
10061c0e:	lea    eax,[ebp-0x48]
10061c11:	push   eax
10061c12:	call   0x100067dd
10061c17:	ret    
10061c18:	lea    ecx,[ebp-0x80]
10061c1b:	jmp    0x1000312b
10061c20:	lea    ecx,[ebp-0x30]
10061c23:	jmp    0x100011a3
10061c28:	mov    edx,DWORD PTR [esp+0x8]
10061c2c:	lea    eax,[edx+0xc]
10061c2f:	mov    ecx,DWORD PTR [edx-0x84]
10061c35:	xor    ecx,eax
10061c37:	call   0x10041d97
10061c3c:	mov    ecx,DWORD PTR [edx-0x4]
10061c3f:	xor    ecx,eax
10061c41:	call   0x10041d97
10061c46:	mov    eax,0x100786e4
10061c4b:	jmp    0x10057fec
10061c50:	lea    eax,[ebp-0x14]
10061c53:	jmp    0x10002095
10061c58:	lea    eax,[ebp-0x18]
10061c5b:	jmp    0x10002095
10061c60:	lea    eax,[ebp-0x1c]
10061c63:	jmp    0x10002095
10061c68:	lea    eax,[ebp-0x1c]
10061c6b:	jmp    0x10034a00
10061c70:	mov    edx,DWORD PTR [esp+0x8]
10061c74:	lea    eax,[edx-0x1c]
10061c77:	mov    ecx,DWORD PTR [edx-0x20]
10061c7a:	xor    ecx,eax
10061c7c:	call   0x10041d97
10061c81:	mov    eax,0x10078728
10061c86:	jmp    0x10057fec
10061c8b:	lea    eax,[ebp-0x78]
10061c8e:	jmp    0x10002095
10061c93:	lea    eax,[ebp-0x6c]
10061c96:	jmp    0x10002095
10061c9b:	lea    eax,[ebp-0x70]
10061c9e:	jmp    0x10002095
10061ca3:	lea    eax,[ebp-0x74]
10061ca6:	jmp    0x10034a00
10061cab:	mov    edx,DWORD PTR [esp+0x8]
10061caf:	lea    eax,[edx-0x7c]
10061cb2:	mov    ecx,DWORD PTR [edx-0x80]
10061cb5:	xor    ecx,eax
10061cb7:	call   0x10041d97
10061cbc:	mov    eax,0x1007876c
10061cc1:	jmp    0x10057fec
10061cc6:	lea    eax,[ebp-0x18]
10061cc9:	jmp    0x10002095
10061cce:	lea    eax,[ebp-0x14]
10061cd1:	jmp    0x10002095
10061cd6:	lea    eax,[ebp-0x10]
10061cd9:	jmp    0x10002095
10061cde:	lea    eax,[ebp-0x10]
10061ce1:	jmp    0x10034a00
10061ce6:	mov    edx,DWORD PTR [esp+0x8]
10061cea:	lea    eax,[edx+0xc]
10061ced:	mov    ecx,DWORD PTR [edx-0x1c]
10061cf0:	xor    ecx,eax
10061cf2:	call   0x10041d97
10061cf7:	mov    eax,0x100787b0
10061cfc:	jmp    0x10057fec
10061d01:	lea    ecx,[ebp-0x2c]
10061d04:	jmp    0x1000312b
10061d09:	push   DWORD PTR [ebp-0x30]
10061d0c:	call   0x10041d92
10061d11:	pop    ecx
10061d12:	ret    
10061d13:	lea    eax,[ebp-0x48]
10061d16:	jmp    0x10003f34
10061d1b:	lea    ecx,[ebp-0x64]
10061d1e:	jmp    0x1000312b
10061d23:	mov    edx,DWORD PTR [esp+0x8]
10061d27:	lea    eax,[edx+0xc]
10061d2a:	mov    ecx,DWORD PTR [edx-0x68]
10061d2d:	xor    ecx,eax
10061d2f:	call   0x10041d97
10061d34:	mov    ecx,DWORD PTR [edx-0x4]
10061d37:	xor    ecx,eax
10061d39:	call   0x10041d97
10061d3e:	mov    eax,0x100787f4
10061d43:	jmp    0x10057fec
10061d48:	lea    ecx,[ebp-0x3c]
10061d4b:	jmp    0x100375e0
10061d50:	lea    eax,[ebp-0x30]
10061d53:	jmp    0x100020be
10061d58:	mov    edx,DWORD PTR [esp+0x8]
10061d5c:	lea    eax,[edx+0xc]
10061d5f:	mov    ecx,DWORD PTR [edx-0x40]
10061d62:	xor    ecx,eax
10061d64:	call   0x10041d97
10061d69:	mov    ecx,DWORD PTR [edx-0x4]
10061d6c:	xor    ecx,eax
10061d6e:	call   0x10041d97
10061d73:	mov    eax,0x10078828
10061d78:	jmp    0x10057fec
10061d7d:	lea    ecx,[ebp-0x3c]
10061d80:	jmp    0x100375e0
10061d85:	lea    ecx,[ebp-0x2c]
10061d88:	jmp    0x1000312b
10061d8d:	lea    ecx,[ebp-0x58]
10061d90:	jmp    0x1000312b
10061d95:	lea    ecx,[ebp-0x58]
10061d98:	jmp    0x1000312b
10061d9d:	lea    eax,[ebp-0x30]
10061da0:	jmp    0x100020be
10061da5:	mov    edx,DWORD PTR [esp+0x8]
10061da9:	lea    eax,[edx+0xc]
10061dac:	mov    ecx,DWORD PTR [edx-0x60]
10061daf:	xor    ecx,eax
10061db1:	call   0x10041d97
10061db6:	mov    ecx,DWORD PTR [edx-0x4]
10061db9:	xor    ecx,eax
10061dbb:	call   0x10041d97
10061dc0:	mov    eax,0x10078874
10061dc5:	jmp    0x10057fec
10061dca:	lea    ecx,[ebp-0xc0]
10061dd0:	jmp    0x1000312b
10061dd5:	lea    ecx,[ebp-0x30]
10061dd8:	jmp    0x1000312b
10061ddd:	lea    ecx,[ebp-0x4c]
10061de0:	jmp    0x1000312b
10061de5:	lea    ecx,[ebp-0x68]
10061de8:	jmp    0x1000312b
10061ded:	lea    ecx,[ebp-0x84]
10061df3:	jmp    0x1000312b
10061df8:	lea    ecx,[ebp-0xc0]
10061dfe:	jmp    0x1000312b
10061e03:	lea    ecx,[ebp-0xc0]
10061e09:	jmp    0x1000312b
10061e0e:	lea    esi,[ebp-0x14c]
10061e14:	jmp    0x10002ecc
10061e19:	mov    edx,DWORD PTR [esp+0x8]
10061e1d:	lea    eax,[edx+0xc]
10061e20:	mov    ecx,DWORD PTR [edx-0x150]
10061e26:	xor    ecx,eax
10061e28:	call   0x10041d97
10061e2d:	mov    ecx,DWORD PTR [edx-0x4]
10061e30:	xor    ecx,eax
10061e32:	call   0x10041d97
10061e37:	mov    eax,0x100788e0
10061e3c:	jmp    0x10057fec
10061e41:	lea    ecx,[ebp-0x34]
10061e44:	jmp    0x100011a3
10061e49:	mov    edx,DWORD PTR [esp+0x8]
10061e4d:	lea    eax,[edx+0xc]
10061e50:	mov    ecx,DWORD PTR [edx-0x38]
10061e53:	xor    ecx,eax
10061e55:	call   0x10041d97
10061e5a:	mov    ecx,DWORD PTR [edx-0x4]
10061e5d:	xor    ecx,eax
10061e5f:	call   0x10041d97
10061e64:	mov    eax,0x1007890c
10061e69:	jmp    0x10057fec
10061e6e:	int3   
10061e6f:	int3   
10061e70:	lea    eax,[ebp-0x2c]
10061e73:	jmp    0x100020be
10061e78:	lea    eax,[ebp-0x28]
10061e7b:	jmp    0x100020be
10061e80:	mov    edx,DWORD PTR [esp+0x8]
10061e84:	lea    eax,[edx-0x40]
10061e87:	mov    ecx,DWORD PTR [edx-0x44]
10061e8a:	xor    ecx,eax
10061e8c:	call   0x10041d97
10061e91:	add    eax,0x10
10061e94:	mov    ecx,DWORD PTR [edx-0x8]
10061e97:	xor    ecx,eax
10061e99:	call   0x10041d97
10061e9e:	mov    eax,0x10078940
10061ea3:	jmp    0x10057fec
10061ea8:	int3   
10061ea9:	int3   
10061eaa:	int3   
10061eab:	int3   
10061eac:	int3   
10061ead:	int3   
10061eae:	int3   
10061eaf:	int3   
10061eb0:	lea    ecx,[ebp-0x40]
10061eb3:	jmp    0x100375e0
10061eb8:	mov    edx,DWORD PTR [esp+0x8]
10061ebc:	lea    eax,[edx-0x3c]
10061ebf:	mov    ecx,DWORD PTR [edx-0x40]
10061ec2:	xor    ecx,eax
10061ec4:	call   0x10041d97
10061ec9:	mov    eax,0x1007896c
10061ece:	jmp    0x10057fec
10061ed3:	int3   
10061ed4:	int3   
10061ed5:	int3   
10061ed6:	int3   
10061ed7:	int3   
10061ed8:	int3   
10061ed9:	int3   
10061eda:	int3   
10061edb:	int3   
10061edc:	int3   
10061edd:	int3   
10061ede:	int3   
10061edf:	int3   
10061ee0:	lea    eax,[ebp-0x7c]
10061ee3:	jmp    0x10002095
10061ee8:	lea    ecx,[ebp-0xa8]
10061eee:	jmp    0x1000312b
10061ef3:	lea    ecx,[ebp-0x140]
10061ef9:	jmp    0x1000312b
10061efe:	lea    ecx,[ebp-0x124]
10061f04:	jmp    0x1000312b
10061f09:	lea    ecx,[ebp-0x108]
10061f0f:	jmp    0x1000312b
10061f14:	lea    ecx,[ebp-0xec]
10061f1a:	jmp    0x1000312b
10061f1f:	lea    ecx,[ebp-0xd0]
10061f25:	jmp    0x10041ed0
10061f2a:	mov    edx,DWORD PTR [esp+0x8]
10061f2e:	lea    eax,[edx+0xc]
10061f31:	mov    ecx,DWORD PTR [edx-0x144]
10061f37:	xor    ecx,eax
10061f39:	call   0x10041d97
10061f3e:	mov    ecx,DWORD PTR [edx-0x4]
10061f41:	xor    ecx,eax
10061f43:	call   0x10041d97
10061f48:	mov    eax,0x100789c8
10061f4d:	jmp    0x10057fec
10061f52:	int3   
10061f53:	int3   
10061f54:	int3   
10061f55:	int3   
10061f56:	int3   
10061f57:	int3   
10061f58:	int3   
10061f59:	int3   
10061f5a:	int3   
10061f5b:	int3   
10061f5c:	int3   
10061f5d:	int3   
10061f5e:	int3   
10061f5f:	int3   
10061f60:	lea    eax,[ebp+0x4]
10061f63:	jmp    0x10002095
10061f68:	lea    eax,[ebp+0x4]
10061f6b:	jmp    0x10002095
10061f70:	mov    edx,DWORD PTR [esp+0x8]
10061f74:	lea    eax,[edx-0x8]
10061f77:	mov    ecx,DWORD PTR [edx-0xc]
10061f7a:	xor    ecx,eax
10061f7c:	call   0x10041d97
10061f81:	mov    eax,0x100789fc
10061f86:	jmp    0x10057fec
10061f8b:	lea    ecx,[ebp-0x58]
10061f8e:	jmp    0x1000312b
10061f93:	lea    ecx,[ebp+0x54]
10061f96:	jmp    0x1000312b
10061f9b:	lea    ecx,[ebp+0x1c]
10061f9e:	jmp    0x1000312b
10061fa3:	lea    eax,[ebp-0x3c]
10061fa6:	jmp    0x100020be
10061fab:	lea    eax,[ebp-0x1c]
10061fae:	jmp    0x100020be
10061fb3:	lea    ecx,[ebp+0x38]
10061fb6:	jmp    0x1000312b
10061fbb:	lea    ecx,[ebp+0x0]
10061fbe:	jmp    0x1000312b
10061fc3:	lea    ecx,[ebp-0x74]
10061fc6:	jmp    0x1000312b
10061fcb:	mov    edx,DWORD PTR [esp+0x8]
10061fcf:	lea    eax,[edx+0xc]
10061fd2:	mov    ecx,DWORD PTR [edx-0x78]
10061fd5:	xor    ecx,eax
10061fd7:	call   0x10041d97
10061fdc:	mov    ecx,DWORD PTR [edx+0x7c]
10061fdf:	xor    ecx,eax
10061fe1:	call   0x10041d97
10061fe6:	mov    eax,0x10078a9c
10061feb:	jmp    0x10057fec
10061ff0:	lea    ecx,[ebp-0x50]
10061ff3:	jmp    0x1000312b
10061ff8:	lea    ecx,[ebp-0x88]
10061ffe:	jmp    0x1000312b
10062003:	lea    ecx,[ebp-0x6c]
10062006:	jmp    0x1000312b
1006200b:	lea    ecx,[ebp-0x34]
1006200e:	jmp    0x100011a3
10062013:	lea    ecx,[ebp-0x50]
10062016:	jmp    0x1000312b
1006201b:	lea    ecx,[ebp-0xfc]
10062021:	jmp    0x1000312b
10062026:	lea    ecx,[ebp-0xfc]
1006202c:	jmp    0x1000312b
10062031:	push   DWORD PTR [ebp-0x110]
10062037:	call   0x10041d92
1006203c:	pop    ecx
1006203d:	ret    
1006203e:	lea    eax,[ebp-0xe0]
10062044:	jmp    0x10003f34
10062049:	lea    ecx,[ebp-0xfc]
1006204f:	jmp    0x1000312b
10062054:	lea    ecx,[ebp-0xdc]
1006205a:	jmp    0x1000312b
1006205f:	lea    ecx,[ebp-0xc0]
10062065:	jmp    0x1000312b
1006206a:	lea    ecx,[ebp-0xa4]
10062070:	jmp    0x1000312b
10062075:	lea    ecx,[ebp-0x50]
10062078:	jmp    0x1000312b
1006207d:	lea    ecx,[ebp-0xdc]
10062083:	jmp    0x1000312b
10062088:	mov    edx,DWORD PTR [esp+0x8]
1006208c:	lea    eax,[edx-0x114]
10062092:	mov    ecx,DWORD PTR [edx-0x118]
10062098:	xor    ecx,eax
1006209a:	call   0x10041d97
1006209f:	add    eax,0xc
100620a2:	mov    ecx,DWORD PTR [edx-0x8]
100620a5:	xor    ecx,eax
100620a7:	call   0x10041d97
100620ac:	mov    eax,0x10078b40
100620b1:	jmp    0x10057fec
100620b6:	lea    ecx,[ebp-0xc0]
100620bc:	jmp    0x1000312b
100620c1:	lea    ecx,[ebp-0x34]
100620c4:	jmp    0x100011a3
100620c9:	lea    ecx,[ebp-0x114]
100620cf:	jmp    0x1000312b
100620d4:	lea    ecx,[ebp-0xf8]
100620da:	jmp    0x1000312b
100620df:	lea    ecx,[ebp-0xdc]
100620e5:	jmp    0x1000312b
100620ea:	lea    ecx,[ebp-0x50]
100620ed:	jmp    0x1000312b
100620f2:	lea    ecx,[ebp-0x6c]
100620f5:	jmp    0x1000312b
100620fa:	mov    edx,DWORD PTR [esp+0x8]
100620fe:	lea    eax,[edx-0x11c]
10062104:	mov    ecx,DWORD PTR [edx-0x120]
1006210a:	xor    ecx,eax
1006210c:	call   0x10041d97
10062111:	add    eax,0xc
10062114:	mov    ecx,DWORD PTR [edx-0x8]
10062117:	xor    ecx,eax
10062119:	call   0x10041d97
1006211e:	mov    eax,0x10078ba8
10062123:	jmp    0x10057fec
10062128:	lea    ecx,[ebp-0x2c]
1006212b:	jmp    0x1000312b
10062130:	mov    edx,DWORD PTR [esp+0x8]
10062134:	lea    eax,[edx-0x24]
10062137:	mov    ecx,DWORD PTR [edx-0x28]
1006213a:	xor    ecx,eax
1006213c:	call   0x10041d97
10062141:	mov    eax,0x10078bd4
10062146:	jmp    0x10057fec
1006214b:	lea    ecx,[ebp-0x30]
1006214e:	jmp    0x1000312b
10062153:	mov    edx,DWORD PTR [esp+0x8]
10062157:	lea    eax,[edx-0x34]
1006215a:	mov    ecx,DWORD PTR [edx-0x38]
1006215d:	xor    ecx,eax
1006215f:	call   0x10041d97
10062164:	add    eax,0x8
10062167:	mov    ecx,DWORD PTR [edx-0x8]
1006216a:	xor    ecx,eax
1006216c:	call   0x10041d97
10062171:	mov    eax,0x10078c00
10062176:	jmp    0x10057fec
1006217b:	lea    ecx,[ebp-0x4c]
1006217e:	jmp    0x1000312b
10062183:	lea    ecx,[ebp-0x30]
10062186:	jmp    0x1000312b
1006218b:	lea    ecx,[ebp-0x68]
1006218e:	jmp    0x1000312b
10062193:	mov    edx,DWORD PTR [esp+0x8]
10062197:	lea    eax,[edx-0x6c]
1006219a:	mov    ecx,DWORD PTR [edx-0x70]
1006219d:	xor    ecx,eax
1006219f:	call   0x10041d97
100621a4:	add    eax,0xc
100621a7:	mov    ecx,DWORD PTR [edx-0x8]
100621aa:	xor    ecx,eax
100621ac:	call   0x10041d97
100621b1:	mov    eax,0x10078c44
100621b6:	jmp    0x10057fec
100621bb:	jmp    0x10037610
100621c0:	mov    edx,DWORD PTR [esp+0x8]
100621c4:	lea    eax,[edx+0xc]
100621c7:	mov    ecx,DWORD PTR [edx-0x10]
100621ca:	xor    ecx,eax
100621cc:	call   0x10041d97
100621d1:	mov    eax,0x10078c70
100621d6:	jmp    0x10057fec
100621db:	lea    ecx,[ebp-0x30]
100621de:	jmp    0x1000312b
100621e3:	mov    edx,DWORD PTR [esp+0x8]
100621e7:	lea    eax,[edx+0xc]
100621ea:	mov    ecx,DWORD PTR [edx-0x5c]
100621ed:	xor    ecx,eax
100621ef:	call   0x10041d97
100621f4:	mov    eax,0x10078cd0
100621f9:	jmp    0x10057fec
100621fe:	lea    eax,[ebp+0x8]
10062201:	jmp    0x1001ac8c
10062206:	mov    eax,DWORD PTR [ebp-0xb4]
1006220c:	and    eax,0x1
1006220f:	je     0x10062227
10062215:	and    DWORD PTR [ebp-0xb4],0xfffffffe
1006221c:	mov    ecx,DWORD PTR [ebp-0xac]
10062222:	jmp    0x1000312b
10062227:	ret    
10062228:	lea    ecx,[ebp-0x98]
1006222e:	jmp    0x1000312b
10062233:	lea    ecx,[ebp-0xd8]
10062239:	jmp    0x1000312b
1006223e:	lea    ecx,[ebp-0xd8]
10062244:	jmp    0x1000312b
10062249:	lea    ecx,[ebp-0xd8]
1006224f:	jmp    0x1000312b
10062254:	mov    edx,DWORD PTR [esp+0x8]
10062258:	lea    eax,[edx+0xc]
1006225b:	mov    ecx,DWORD PTR [edx-0xdc]
10062261:	xor    ecx,eax
10062263:	call   0x10041d97
10062268:	mov    ecx,DWORD PTR [edx-0x4]
1006226b:	xor    ecx,eax
1006226d:	call   0x10041d97
10062272:	mov    eax,0x10078d24
10062277:	jmp    0x10057fec
1006227c:	lea    ecx,[ebp-0x84]
10062282:	jmp    0x1000312b
10062287:	lea    ecx,[ebp-0x30]
1006228a:	jmp    0x1000312b
1006228f:	lea    ecx,[ebp-0x68]
10062292:	jmp    0x1000312b
10062297:	lea    ecx,[ebp-0x4c]
1006229a:	jmp    0x1000312b
1006229f:	mov    edx,DWORD PTR [esp+0x8]
100622a3:	lea    eax,[edx-0x8c]
100622a9:	mov    ecx,DWORD PTR [edx-0x90]
100622af:	xor    ecx,eax
100622b1:	call   0x10041d97
100622b6:	add    eax,0x8
100622b9:	mov    ecx,DWORD PTR [edx-0x8]
100622bc:	xor    ecx,eax
100622be:	call   0x10041d97
100622c3:	mov    eax,0x10078d70
100622c8:	jmp    0x10057fec
100622cd:	mov    eax,DWORD PTR [ebp+0x8]
100622d0:	jmp    0x100096f7
100622d5:	mov    eax,DWORD PTR [ebp+0x8]
100622d8:	add    eax,0x4
100622db:	jmp    0x100096f7
100622e0:	mov    eax,DWORD PTR [ebp+0x8]
100622e3:	add    eax,0x8
100622e6:	jmp    0x100096f7
100622eb:	mov    ebx,DWORD PTR [ebp+0x8]
100622ee:	add    ebx,0x18
100622f1:	jmp    0x1000758a
100622f6:	mov    eax,DWORD PTR [ebp+0x8]
100622f9:	add    eax,0x30
100622fc:	jmp    0x10009745
10062301:	mov    edx,DWORD PTR [esp+0x8]
10062305:	lea    eax,[edx+0xc]
10062308:	mov    ecx,DWORD PTR [edx-0x10]
1006230b:	xor    ecx,eax
1006230d:	call   0x10041d97
10062312:	mov    eax,0x10078dbc
10062317:	jmp    0x10057fec
1006231c:	mov    eax,DWORD PTR [ebp+0x8]
1006231f:	jmp    0x100096f7
10062324:	mov    eax,DWORD PTR [ebp+0x8]
10062327:	add    eax,0x4
1006232a:	jmp    0x100096f7
1006232f:	mov    eax,DWORD PTR [ebp+0x8]
10062332:	add    eax,0x8
10062335:	jmp    0x100096f7
1006233a:	mov    eax,DWORD PTR [ebp+0x8]
1006233d:	add    eax,0xc
10062340:	jmp    0x100096f7
10062345:	mov    edx,DWORD PTR [esp+0x8]
10062349:	lea    eax,[edx+0xc]
1006234c:	mov    ecx,DWORD PTR [edx-0x10]
1006234f:	xor    ecx,eax
10062351:	call   0x10041d97
10062356:	mov    eax,0x10078e00
1006235b:	jmp    0x10057fec
10062360:	mov    eax,DWORD PTR [ebp+0x8]
10062363:	jmp    0x100096f7
10062368:	mov    eax,DWORD PTR [ebp+0x8]
1006236b:	add    eax,0x4
1006236e:	jmp    0x100096f7
10062373:	mov    eax,DWORD PTR [ebp+0x8]
10062376:	add    eax,0x8
10062379:	jmp    0x100096f7
1006237e:	mov    edx,DWORD PTR [esp+0x8]
10062382:	lea    eax,[edx+0xc]
10062385:	mov    ecx,DWORD PTR [edx-0x10]
10062388:	xor    ecx,eax
1006238a:	call   0x10041d97
1006238f:	mov    eax,0x10078e3c
10062394:	jmp    0x10057fec
10062399:	lea    ecx,[ebp-0x34]
1006239c:	jmp    0x10006def
100623a1:	mov    edx,DWORD PTR [esp+0x8]
100623a5:	lea    eax,[edx+0xc]
100623a8:	mov    ecx,DWORD PTR [edx-0x40]
100623ab:	xor    ecx,eax
100623ad:	call   0x10041d97
100623b2:	mov    ecx,DWORD PTR [edx-0x4]
100623b5:	xor    ecx,eax
100623b7:	call   0x10041d97
100623bc:	mov    eax,0x10078e68
100623c1:	jmp    0x10057fec
100623c6:	lea    ecx,[ebp-0x30]
100623c9:	jmp    0x1000312b
100623ce:	mov    edx,DWORD PTR [esp+0x8]
100623d2:	lea    eax,[edx+0xc]
100623d5:	mov    ecx,DWORD PTR [edx-0x34]
100623d8:	xor    ecx,eax
100623da:	call   0x10041d97
100623df:	mov    ecx,DWORD PTR [edx-0x8]
100623e2:	xor    ecx,eax
100623e4:	call   0x10041d97
100623e9:	mov    eax,0x10078ec8
100623ee:	jmp    0x10057fec
100623f3:	int3   
100623f4:	int3   
100623f5:	int3   
100623f6:	int3   
100623f7:	int3   
100623f8:	int3   
100623f9:	int3   
100623fa:	int3   
100623fb:	int3   
100623fc:	int3   
100623fd:	int3   
100623fe:	int3   
100623ff:	int3   
10062400:	lea    ecx,[ebp-0x2c]
10062403:	jmp    0x1000312b
10062408:	mov    eax,DWORD PTR [ebp-0x30]
1006240b:	jmp    0x10002095
10062410:	mov    eax,DWORD PTR [ebp-0x34]
10062413:	and    eax,0x1
10062416:	je     0x10062428
1006241c:	and    DWORD PTR [ebp-0x34],0xfffffffe
10062420:	mov    eax,DWORD PTR [ebp-0x30]
10062423:	jmp    0x10002095
10062428:	ret    
10062429:	mov    edx,DWORD PTR [esp+0x8]
1006242d:	lea    eax,[edx-0x34]
10062430:	mov    ecx,DWORD PTR [edx-0x38]
10062433:	xor    ecx,eax
10062435:	call   0x10041d97
1006243a:	add    eax,0xc
1006243d:	mov    ecx,DWORD PTR [edx-0x4]
10062440:	xor    ecx,eax
10062442:	call   0x10041d97
10062447:	mov    eax,0x10078f04
1006244c:	jmp    0x10057fec
10062451:	int3   
10062452:	int3   
10062453:	int3   
10062454:	int3   
10062455:	int3   
10062456:	int3   
10062457:	int3   
10062458:	int3   
10062459:	int3   
1006245a:	int3   
1006245b:	int3   
1006245c:	int3   
1006245d:	int3   
1006245e:	int3   
1006245f:	int3   
10062460:	lea    ecx,[ebp-0xa4]
10062466:	jmp    0x1000312b
1006246b:	lea    ecx,[ebp-0x88]
10062471:	jmp    0x1000312b
10062476:	lea    eax,[ebp-0xb8]
1006247c:	jmp    0x10034a00
10062481:	lea    ecx,[ebp-0x34]
10062484:	jmp    0x1000312b
10062489:	lea    ecx,[ebp-0x50]
1006248c:	jmp    0x1000312b
10062491:	lea    ecx,[ebp-0x6c]
10062494:	jmp    0x1000312b
10062499:	lea    ecx,[ebp-0x50]
1006249c:	jmp    0x1000312b
100624a1:	lea    ecx,[ebp-0x34]
100624a4:	jmp    0x1000312b
100624a9:	lea    ecx,[ebp-0xd8]
100624af:	jmp    0x1000312b
100624b4:	lea    ecx,[ebp-0x50]
100624b7:	jmp    0x1000312b
100624bc:	lea    ecx,[ebp-0x34]
100624bf:	jmp    0x1000312b
100624c4:	lea    ecx,[ebp-0xd8]
100624ca:	jmp    0x1000312b
100624cf:	lea    ecx,[ebp-0x34]
100624d2:	jmp    0x1000312b
100624d7:	lea    ecx,[ebp-0xd8]
100624dd:	jmp    0x1000312b
100624e2:	lea    ecx,[ebp-0x50]
100624e5:	jmp    0x1000312b
100624ea:	lea    ecx,[ebp-0x34]
100624ed:	jmp    0x1000312b
100624f2:	lea    ecx,[ebp-0xd8]
100624f8:	jmp    0x1000312b
100624fd:	lea    ecx,[ebp-0x34]
10062500:	jmp    0x1000312b
10062505:	lea    ecx,[ebp-0xd8]
1006250b:	jmp    0x1000312b
10062510:	lea    ecx,[ebp-0x34]
10062513:	jmp    0x1000312b
10062518:	mov    edx,DWORD PTR [esp+0x8]
1006251c:	lea    eax,[edx+0xc]
1006251f:	mov    ecx,DWORD PTR [edx-0xe0]
10062525:	xor    ecx,eax
10062527:	call   0x10041d97
1006252c:	mov    ecx,DWORD PTR [edx-0xc]
1006252f:	xor    ecx,eax
10062531:	call   0x10041d97
10062536:	mov    eax,0x10078ffc
1006253b:	jmp    0x10057fec
10062540:	lea    ecx,[ebp-0x74]
10062543:	jmp    0x1000312b
10062548:	lea    ecx,[ebp-0x48]
1006254b:	jmp    0x1000312b
10062550:	lea    ecx,[ebp-0xc8]
10062556:	jmp    0x1000312b
1006255b:	lea    ecx,[ebp-0x2c]
1006255e:	jmp    0x1000312b
10062563:	lea    ecx,[ebp-0xac]
10062569:	jmp    0x1000312b
1006256e:	lea    ecx,[ebp-0x74]
10062571:	jmp    0x1000312b
10062576:	lea    ecx,[ebp-0x90]
1006257c:	jmp    0x1000312b
10062581:	lea    ecx,[ebp-0x90]
10062587:	jmp    0x1000312b
1006258c:	mov    edx,DWORD PTR [esp+0x8]
10062590:	lea    eax,[edx+0xc]
10062593:	mov    ecx,DWORD PTR [edx-0xcc]
10062599:	xor    ecx,eax
1006259b:	call   0x10041d97
100625a0:	mov    ecx,DWORD PTR [edx-0x4]
100625a3:	xor    ecx,eax
100625a5:	call   0x10041d97
100625aa:	mov    eax,0x10079070
100625af:	jmp    0x10057fec
100625b4:	lea    eax,[ebp-0x10]
100625b7:	jmp    0x10038d40
100625bc:	mov    edx,DWORD PTR [esp+0x8]
100625c0:	lea    eax,[edx+0xc]
100625c3:	mov    ecx,DWORD PTR [edx-0x14]
100625c6:	xor    ecx,eax
100625c8:	call   0x10041d97
100625cd:	mov    eax,0x1007909c
100625d2:	jmp    0x10057fec
100625d7:	lea    eax,[ebp-0x10]
100625da:	jmp    0x10009745
100625df:	mov    edx,DWORD PTR [esp+0x8]
100625e3:	lea    eax,[edx+0xc]
100625e6:	mov    ecx,DWORD PTR [edx-0x14]
100625e9:	xor    ecx,eax
100625eb:	call   0x10041d97
100625f0:	mov    eax,0x100790c8
100625f5:	jmp    0x10057fec
100625fa:	push   DWORD PTR [ebp-0x14]
100625fd:	call   0x10041d92
10062602:	pop    ecx
10062603:	ret    
10062604:	lea    eax,[ebp-0x14]
10062607:	jmp    0x10009954
1006260c:	lea    eax,[ebp-0x10]
1006260f:	jmp    0x10009745
10062614:	mov    edx,DWORD PTR [esp+0x8]
10062618:	lea    eax,[edx+0xc]
1006261b:	mov    ecx,DWORD PTR [edx-0x18]
1006261e:	xor    ecx,eax
10062620:	call   0x10041d97
10062625:	mov    eax,0x10079104
1006262a:	jmp    0x10057fec
1006262f:	lea    eax,[ebp-0x80]
10062632:	jmp    0x1001e534
10062637:	lea    eax,[ebp+0x14]
1006263a:	jmp    0x1001e534
1006263f:	lea    ecx,[ebp-0x5c]
10062642:	jmp    0x10022074
10062647:	lea    ecx,[ebp-0x3c]
1006264a:	jmp    0x10022074
1006264f:	lea    ecx,[ebp-0x6c]
10062652:	jmp    0x10022074
10062657:	lea    ecx,[ebp-0x2c]
1006265a:	jmp    0x10022074
1006265f:	lea    edi,[ebp+0x10]
10062662:	jmp    0x100024dc
10062667:	lea    ecx,[ebp-0x7c]
1006266a:	jmp    0x10022074
1006266f:	lea    ecx,[ebp-0x4c]
10062672:	jmp    0x10022074
10062677:	mov    edx,DWORD PTR [esp+0x8]
1006267b:	lea    eax,[edx+0xc]
1006267e:	mov    ecx,DWORD PTR [edx-0xe8]
10062684:	xor    ecx,eax
10062686:	call   0x10041d97
1006268b:	mov    eax,0x100791ac
10062690:	jmp    0x10057fec
10062695:	lea    eax,[ebp-0x40]
10062698:	jmp    0x10034a00
1006269d:	lea    eax,[ebp-0x64]
100626a0:	jmp    0x100020be
100626a5:	lea    eax,[ebp-0x5c]
100626a8:	jmp    0x100020be
100626ad:	lea    esi,[ebp-0x54]
100626b0:	jmp    0x10003cd8
100626b5:	mov    edx,DWORD PTR [esp+0x8]
100626b9:	lea    eax,[edx+0xc]
100626bc:	mov    ecx,DWORD PTR [edx-0x68]
100626bf:	xor    ecx,eax
100626c1:	call   0x10041d97
100626c6:	mov    ecx,DWORD PTR [edx-0x8]
100626c9:	xor    ecx,eax
100626cb:	call   0x10041d97
100626d0:	mov    eax,0x10079224
100626d5:	jmp    0x10057fec
100626da:	lea    eax,[ebp-0x54]
100626dd:	jmp    0x100020be
100626e2:	lea    eax,[ebp-0x60]
100626e5:	jmp    0x100020be
100626ea:	lea    eax,[ebp-0x58]
100626ed:	jmp    0x10034a00
100626f2:	lea    esi,[ebp-0x98]
100626f8:	jmp    0x10003cd8
100626fd:	lea    ecx,[ebp-0x50]
10062700:	jmp    0x1000312b
10062705:	lea    ecx,[ebp-0xb8]
1006270b:	jmp    0x1000312b
10062710:	lea    esi,[ebp-0x24]
10062713:	jmp    0x10003cd8
10062718:	lea    eax,[ebp-0x80]
1006271b:	jmp    0x10017dd9
10062720:	lea    ecx,[ebp-0x50]
10062723:	jmp    0x1000312b
10062728:	mov    edx,DWORD PTR [esp+0x8]
1006272c:	lea    eax,[edx+0xc]
1006272f:	mov    ecx,DWORD PTR [edx-0xbc]
10062735:	xor    ecx,eax
10062737:	call   0x10041d97
1006273c:	mov    ecx,DWORD PTR [edx-0x8]
1006273f:	xor    ecx,eax
10062741:	call   0x10041d97
10062746:	mov    eax,0x100792c4
1006274b:	jmp    0x10057fec
10062750:	lea    esi,[ebp-0x20]
10062753:	jmp    0x10003cd8
10062758:	mov    edx,DWORD PTR [esp+0x8]
1006275c:	lea    eax,[edx-0x1c]
1006275f:	mov    ecx,DWORD PTR [edx-0x20]
10062762:	xor    ecx,eax
10062764:	call   0x10041d97
10062769:	mov    eax,0x100792f0
1006276e:	jmp    0x10057fec
10062773:	lea    eax,[ebp-0x14]
10062776:	jmp    0x100020be
1006277b:	mov    eax,DWORD PTR [ebp-0x48]
1006277e:	and    eax,0x1
10062781:	je     0x10062793
10062787:	and    DWORD PTR [ebp-0x48],0xfffffffe
1006278b:	mov    ecx,DWORD PTR [ebp-0x18]
1006278e:	jmp    0x1000312b
10062793:	ret    
10062794:	lea    eax,[ebp-0x1c]
10062797:	jmp    0x10034a00
1006279c:	lea    ecx,[ebp-0x40]
1006279f:	jmp    0x1000312b
100627a4:	lea    esi,[ebp-0x34]
100627a7:	jmp    0x10003cd8
100627ac:	mov    edx,DWORD PTR [esp+0x8]
100627b0:	lea    eax,[edx+0xc]
100627b3:	mov    ecx,DWORD PTR [edx-0x4c]
100627b6:	xor    ecx,eax
100627b8:	call   0x10041d97
100627bd:	mov    eax,0x1007934c
100627c2:	jmp    0x10057fec
100627c7:	lea    eax,[ebp-0x24]
100627ca:	jmp    0x1001e534
100627cf:	mov    edx,DWORD PTR [esp+0x8]
100627d3:	lea    eax,[edx+0xc]
100627d6:	mov    ecx,DWORD PTR [edx-0x28]
100627d9:	xor    ecx,eax
100627db:	call   0x10041d97
100627e0:	mov    ecx,DWORD PTR [edx-0x4]
100627e3:	xor    ecx,eax
100627e5:	call   0x10041d97
100627ea:	mov    eax,0x10079378
100627ef:	jmp    0x10057fec
100627f4:	lea    eax,[ebp-0x18]
100627f7:	jmp    0x100020be
100627fc:	mov    edx,DWORD PTR [esp+0x8]
10062800:	lea    eax,[edx+0xc]
10062803:	mov    ecx,DWORD PTR [edx-0x1c]
10062806:	xor    ecx,eax
10062808:	call   0x10041d97
1006280d:	mov    eax,0x100793a4
10062812:	jmp    0x10057fec
10062817:	lea    ecx,[ebp+0x8]
1006281a:	jmp    0x1000312b
1006281f:	mov    edx,DWORD PTR [esp+0x8]
10062823:	lea    eax,[edx+0xc]
10062826:	mov    ecx,DWORD PTR [edx-0x14]
10062829:	xor    ecx,eax
1006282b:	call   0x10041d97
10062830:	mov    eax,0x100793d0
10062835:	jmp    0x10057fec
1006283a:	lea    ecx,[ebp-0x2c]
1006283d:	jmp    0x1000312b
10062842:	lea    ecx,[ebp-0x70]
10062845:	jmp    0x1000312b
1006284a:	mov    edx,DWORD PTR [esp+0x8]
1006284e:	lea    eax,[edx+0xc]
10062851:	mov    ecx,DWORD PTR [edx-0x90]
10062857:	xor    ecx,eax
10062859:	call   0x10041d97
1006285e:	mov    ecx,DWORD PTR [edx-0x4]
10062861:	xor    ecx,eax
10062863:	call   0x10041d97
10062868:	mov    eax,0x10079404
1006286d:	jmp    0x10057fec
10062872:	push   DWORD PTR [ebp-0x34]
10062875:	call   0x10041d92
1006287a:	pop    ecx
1006287b:	ret    
1006287c:	lea    eax,[ebp-0x34]
1006287f:	jmp    0x10009963
10062884:	lea    ecx,[ebp-0x2c]
10062887:	jmp    0x1000312b
1006288c:	push   DWORD PTR [ebp-0x40]
1006288f:	call   0x10041d92
10062894:	pop    ecx
10062895:	ret    
10062896:	push   DWORD PTR [ebp-0x40]
10062899:	call   0x10041d92
1006289e:	pop    ecx
1006289f:	ret    
100628a0:	push   DWORD PTR [ebp-0x40]
100628a3:	call   0x10041d92
100628a8:	pop    ecx
100628a9:	ret    
100628aa:	push   DWORD PTR [ebp-0x40]
100628ad:	call   0x10041d92
100628b2:	pop    ecx
100628b3:	ret    
100628b4:	lea    eax,[ebp-0x38]
100628b7:	jmp    0x10009745
100628bc:	mov    edx,DWORD PTR [esp+0x8]
100628c0:	lea    eax,[edx+0xc]
100628c3:	mov    ecx,DWORD PTR [edx-0x4c]
100628c6:	xor    ecx,eax
100628c8:	call   0x10041d97
100628cd:	mov    ecx,DWORD PTR [edx-0x4]
100628d0:	xor    ecx,eax
100628d2:	call   0x10041d97
100628d7:	mov    eax,0x10079490
100628dc:	jmp    0x10057fec
100628e1:	push   DWORD PTR [ebp-0x30]
100628e4:	call   0x10041d92
100628e9:	pop    ecx
100628ea:	ret    
100628eb:	lea    eax,[ebp-0x40]
100628ee:	jmp    0x10009954
100628f3:	lea    ecx,[ebp-0x2c]
100628f6:	jmp    0x1000312b
100628fb:	push   DWORD PTR [ebp-0x38]
100628fe:	call   0x10041d92
10062903:	pop    ecx
10062904:	ret    
10062905:	push   DWORD PTR [ebp-0x38]
10062908:	call   0x10041d92
1006290d:	pop    ecx
1006290e:	ret    
1006290f:	push   DWORD PTR [ebp-0x38]
10062912:	call   0x10041d92
10062917:	pop    ecx
10062918:	ret    
10062919:	push   DWORD PTR [ebp-0x38]
1006291c:	call   0x10041d92
10062921:	pop    ecx
10062922:	ret    
10062923:	lea    eax,[ebp-0x34]
10062926:	jmp    0x10009745
1006292b:	mov    edx,DWORD PTR [esp+0x8]
1006292f:	lea    eax,[edx+0xc]
10062932:	mov    ecx,DWORD PTR [edx-0x44]
10062935:	xor    ecx,eax
10062937:	call   0x10041d97
1006293c:	mov    ecx,DWORD PTR [edx-0x4]
1006293f:	xor    ecx,eax
10062941:	call   0x10041d97
10062946:	mov    eax,0x100794f8
1006294b:	jmp    0x10057fec
10062950:	push   DWORD PTR [ebp-0x10]
10062953:	call   0x10041d92
10062958:	pop    ecx
10062959:	ret    
1006295a:	lea    eax,[ebp-0x10]
1006295d:	jmp    0x10009963
10062962:	mov    edx,DWORD PTR [esp+0x8]
10062966:	lea    eax,[edx+0xc]
10062969:	mov    ecx,DWORD PTR [edx-0x18]
1006296c:	xor    ecx,eax
1006296e:	call   0x10041d97
10062973:	mov    eax,0x1007952c
10062978:	jmp    0x10057fec
1006297d:	push   DWORD PTR [ebp-0x10]
10062980:	call   0x10041d92
10062985:	pop    ecx
10062986:	ret    
10062987:	lea    eax,[ebp-0x14]
1006298a:	jmp    0x10009954
1006298f:	mov    edx,DWORD PTR [esp+0x8]
10062993:	lea    eax,[edx+0xc]
10062996:	mov    ecx,DWORD PTR [edx-0x18]
10062999:	xor    ecx,eax
1006299b:	call   0x10041d97
100629a0:	mov    eax,0x10079560
100629a5:	jmp    0x10057fec
100629aa:	lea    ecx,[ebp-0x10]
100629ad:	jmp    0x10006def
100629b2:	mov    edx,DWORD PTR [esp+0x8]
100629b6:	lea    eax,[edx+0xc]
100629b9:	mov    ecx,DWORD PTR [edx-0x14]
100629bc:	xor    ecx,eax
100629be:	call   0x10041d97
100629c3:	mov    eax,0x1007958c
100629c8:	jmp    0x10057fec
100629cd:	lea    eax,[ebp-0x21c]
100629d3:	jmp    0x10002095
100629d8:	lea    ecx,[ebp-0x260]
100629de:	jmp    0x1000312b
100629e3:	lea    esi,[ebp-0x220]
100629e9:	jmp    0x1000616d
100629ee:	lea    eax,[ebp-0x230]
100629f4:	jmp    0x100020be
100629f9:	mov    edx,DWORD PTR [esp+0x8]
100629fd:	lea    eax,[edx+0xc]
10062a00:	mov    ecx,DWORD PTR [edx-0x264]
10062a06:	xor    ecx,eax
10062a08:	call   0x10041d97
10062a0d:	mov    ecx,DWORD PTR [edx-0x4]
10062a10:	xor    ecx,eax
10062a12:	call   0x10041d97
10062a17:	mov    eax,0x100795d0
10062a1c:	jmp    0x10057fec
10062a21:	lea    esi,[ebp-0x64]
10062a24:	jmp    0x10003cd8
10062a29:	lea    ecx,[ebp-0x30]
10062a2c:	jmp    0x1000312b
10062a31:	lea    ecx,[ebp-0x4c]
10062a34:	jmp    0x1000312b
10062a39:	lea    ecx,[ebp-0x88]
10062a3f:	jmp    0x1000312b
10062a44:	mov    edx,DWORD PTR [esp+0x8]
10062a48:	lea    eax,[edx+0xc]
10062a4b:	mov    ecx,DWORD PTR [edx-0x8c]
10062a51:	xor    ecx,eax
10062a53:	call   0x10041d97
10062a58:	mov    ecx,DWORD PTR [edx-0x4]
10062a5b:	xor    ecx,eax
10062a5d:	call   0x10041d97
10062a62:	mov    eax,0x10079614
10062a67:	jmp    0x10057fec
10062a6c:	int3   
10062a6d:	int3   
10062a6e:	int3   
10062a6f:	int3   
10062a70:	lea    ecx,[ebp-0x1ac]
10062a76:	jmp    0x1000312b
10062a7b:	lea    ecx,[ebp-0x1c8]
10062a81:	jmp    0x1000312b
10062a86:	lea    ecx,[ebp-0x1e4]
10062a8c:	jmp    0x1000312b
10062a91:	lea    ecx,[ebp-0x158]
10062a97:	jmp    0x1000312b
10062a9c:	lea    ecx,[ebp-0x174]
10062aa2:	jmp    0x1000312b
10062aa7:	lea    ecx,[ebp-0x30]
10062aaa:	jmp    0x1000312b
10062aaf:	lea    ecx,[ebp-0x4c]
10062ab2:	jmp    0x1000312b
10062ab7:	lea    ecx,[ebp-0x104]
10062abd:	jmp    0x1000312b
10062ac2:	lea    ecx,[ebp-0x190]
10062ac8:	jmp    0x1000312b
10062acd:	lea    eax,[ebp-0x1fc]
10062ad3:	jmp    0x100020be
10062ad8:	lea    ecx,[ebp-0x190]
10062ade:	jmp    0x1000312b
10062ae3:	lea    ecx,[ebp-0x1c8]
10062ae9:	jmp    0x1000312b
10062aee:	lea    esi,[ebp-0xe8]
10062af4:	jmp    0x1000b7b1
10062af9:	lea    ecx,[ebp-0x174]
10062aff:	jmp    0x1000312b
10062b04:	lea    ecx,[ebp-0x190]
10062b0a:	jmp    0x1000312b
10062b0f:	lea    ecx,[ebp-0x13c]
10062b15:	jmp    0x1000312b
10062b1a:	lea    ecx,[ebp-0x158]
10062b20:	jmp    0x1000312b
10062b25:	lea    ecx,[ebp-0x1c8]
10062b2b:	jmp    0x1000312b
10062b30:	lea    ecx,[ebp-0x1e4]
10062b36:	jmp    0x1000312b
10062b3b:	lea    ecx,[ebp-0x1ac]
10062b41:	jmp    0x1000312b
10062b46:	lea    ecx,[ebp-0x120]
10062b4c:	jmp    0x1000312b
10062b51:	lea    ecx,[ebp-0x13c]
10062b57:	jmp    0x1000312b
10062b5c:	mov    edx,DWORD PTR [esp+0x8]
10062b60:	lea    eax,[edx-0x1fc]
10062b66:	mov    ecx,DWORD PTR [edx-0x200]
10062b6c:	xor    ecx,eax
10062b6e:	call   0x10041d97
10062b73:	add    eax,0xc
10062b76:	mov    ecx,DWORD PTR [edx-0x8]
10062b79:	xor    ecx,eax
10062b7b:	call   0x10041d97
10062b80:	mov    eax,0x10079710
10062b85:	jmp    0x10057fec
10062b8a:	int3   
10062b8b:	int3   
10062b8c:	int3   
10062b8d:	int3   
10062b8e:	int3   
10062b8f:	int3   
10062b90:	lea    eax,[ebp-0x14]
10062b93:	jmp    0x100020be
10062b98:	lea    eax,[ebp-0x10]
10062b9b:	jmp    0x100020be
10062ba0:	mov    edx,DWORD PTR [esp+0x8]
10062ba4:	lea    eax,[edx-0x28]
10062ba7:	mov    ecx,DWORD PTR [edx-0x2c]
10062baa:	xor    ecx,eax
10062bac:	call   0x10041d97
10062bb1:	mov    eax,0x10079744
10062bb6:	jmp    0x10057fec
10062bbb:	int3   
10062bbc:	int3   
10062bbd:	int3   
10062bbe:	int3   
10062bbf:	int3   
10062bc0:	lea    ecx,[ebp-0x28]
10062bc3:	jmp    0x1000312b
10062bc8:	mov    edx,DWORD PTR [esp+0x8]
10062bcc:	lea    eax,[edx-0x24]
10062bcf:	mov    ecx,DWORD PTR [edx-0x28]
10062bd2:	xor    ecx,eax
10062bd4:	call   0x10041d97
10062bd9:	mov    eax,0x10079770
10062bde:	jmp    0x10057fec
10062be3:	lea    eax,[ebp+0x4]
10062be6:	jmp    0x10009954
10062beb:	lea    eax,[ebp+0x8]
10062bee:	jmp    0x10009963
10062bf3:	lea    ecx,[ebp+0x44]
10062bf6:	jmp    0x1000312b
10062bfb:	lea    ecx,[ebp-0x44]
10062bfe:	jmp    0x1000312b
10062c03:	lea    ecx,[ebp-0x60]
10062c06:	jmp    0x1000312b
10062c0b:	lea    ecx,[ebp-0x28]
10062c0e:	jmp    0x1000312b
10062c13:	lea    ecx,[ebp+0xc]
10062c16:	jmp    0x1000312b
10062c1b:	mov    edx,DWORD PTR [esp+0x8]
10062c1f:	lea    eax,[edx+0xc]
10062c22:	mov    ecx,DWORD PTR [edx-0x64]
10062c25:	xor    ecx,eax
10062c27:	call   0x10041d97
10062c2c:	mov    ecx,DWORD PTR [edx+0x6c]
10062c2f:	xor    ecx,eax
10062c31:	call   0x10041d97
10062c36:	mov    eax,0x100797e8
10062c3b:	jmp    0x10057fec
10062c40:	lea    ecx,[ebp-0x4a4]
10062c46:	jmp    0x1000312b
10062c4b:	lea    ecx,[ebp-0x530]
10062c51:	jmp    0x1000312b
10062c56:	lea    ecx,[ebp-0x4dc]
10062c5c:	jmp    0x1000312b
10062c61:	lea    ecx,[ebp-0x4f8]
10062c67:	jmp    0x1000312b
10062c6c:	lea    ecx,[ebp-0x434]
10062c72:	jmp    0x1000312b
10062c77:	lea    ecx,[ebp-0x450]
10062c7d:	jmp    0x1000312b
10062c82:	lea    ecx,[ebp-0x488]
10062c88:	jmp    0x1000312b
10062c8d:	lea    ecx,[ebp-0x5a8]
10062c93:	jmp    0x10022074
10062c98:	lea    ecx,[ebp-0x598]
10062c9e:	jmp    0x10022074
10062ca3:	lea    eax,[ebp-0x5d4]
10062ca9:	jmp    0x1001e534
10062cae:	lea    edi,[ebp-0x5c4]
10062cb4:	jmp    0x100024dc
10062cb9:	lea    ecx,[ebp-0x46c]
10062cbf:	jmp    0x1000312b
10062cc4:	lea    ecx,[ebp-0x54c]
10062cca:	jmp    0x1000312b
10062ccf:	lea    ecx,[ebp-0x584]
10062cd5:	jmp    0x1000312b
10062cda:	lea    ecx,[ebp-0x514]
10062ce0:	jmp    0x1000312b
10062ce5:	lea    ecx,[ebp-0x568]
10062ceb:	jmp    0x1000312b
10062cf0:	lea    eax,[ebp-0x5d0]
10062cf6:	jmp    0x10009954
10062cfb:	lea    eax,[ebp-0x5c8]
10062d01:	jmp    0x10009963
10062d06:	mov    edx,DWORD PTR [esp+0x8]
10062d0a:	lea    eax,[edx-0x5e4]
10062d10:	mov    ecx,DWORD PTR [edx-0x5e8]
10062d16:	xor    ecx,eax
10062d18:	call   0x10041d97
10062d1d:	add    eax,0xc
10062d20:	mov    ecx,DWORD PTR [edx-0x8]
10062d23:	xor    ecx,eax
10062d25:	call   0x10041d97
10062d2a:	mov    eax,0x100798b8
10062d2f:	jmp    0x10057fec
10062d34:	lea    ecx,[ebp-0x220]
10062d3a:	jmp    0x1000312b
10062d3f:	lea    ecx,[ebp-0x27c]
10062d45:	jmp    0x1000312b
10062d4a:	lea    ecx,[ebp-0x27c]
10062d50:	jmp    0x1000312b
10062d55:	lea    ecx,[ebp-0x258]
10062d5b:	jmp    0x1000312b
10062d60:	lea    ecx,[ebp-0x220]
10062d66:	jmp    0x1000312b
10062d6b:	lea    ecx,[ebp-0x27c]
10062d71:	jmp    0x1000312b
10062d76:	lea    esi,[ebp-0x140]
10062d7c:	jmp    0x1000b749
10062d81:	lea    ecx,[ebp-0x27c]
10062d87:	jmp    0x1000312b
10062d8c:	lea    ecx,[ebp-0x27c]
10062d92:	jmp    0x1000312b
10062d97:	lea    ecx,[ebp-0x27c]
10062d9d:	jmp    0x1000312b
10062da2:	lea    ecx,[ebp-0x27c]
10062da8:	jmp    0x1000312b
10062dad:	lea    ecx,[ebp-0x27c]
10062db3:	jmp    0x1000312b
10062db8:	lea    ecx,[ebp-0x178]
10062dbe:	jmp    0x1000312b
10062dc3:	lea    ecx,[ebp-0x258]
10062dc9:	jmp    0x1000312b
10062dce:	lea    ecx,[ebp-0x258]
10062dd4:	jmp    0x1000312b
10062dd9:	lea    ecx,[ebp-0x23c]
10062ddf:	jmp    0x1000312b
10062de4:	lea    esi,[ebp-0xb0]
10062dea:	jmp    0x1000b7b1
10062def:	lea    ecx,[ebp-0x15c]
10062df5:	jmp    0x1000312b
10062dfa:	lea    ecx,[ebp-0x23c]
10062e00:	jmp    0x1000312b
10062e05:	lea    ecx,[ebp-0x194]
10062e0b:	jmp    0x1000312b
10062e10:	lea    ecx,[ebp-0x1cc]
10062e16:	jmp    0x1000312b
10062e1b:	lea    ecx,[ebp-0x1e8]
10062e21:	jmp    0x1000312b
10062e26:	lea    ecx,[ebp-0x204]
10062e2c:	jmp    0x1000312b
10062e31:	lea    ecx,[ebp-0x1b0]
10062e37:	jmp    0x1000312b
10062e3c:	mov    edx,DWORD PTR [esp+0x8]
10062e40:	lea    eax,[edx-0x28c]
10062e46:	mov    ecx,DWORD PTR [edx-0x290]
10062e4c:	xor    ecx,eax
10062e4e:	call   0x10041d97
10062e53:	add    eax,0xc
10062e56:	mov    ecx,DWORD PTR [edx-0x8]
10062e59:	xor    ecx,eax
10062e5b:	call   0x10041d97
10062e60:	mov    eax,0x100799a8
10062e65:	jmp    0x10057fec
10062e6a:	lea    ecx,[ebp-0x68]
10062e6d:	jmp    0x1000312b
10062e72:	lea    ecx,[ebp-0x30]
10062e75:	jmp    0x1000312b
10062e7a:	lea    ecx,[ebp-0x4c]
10062e7d:	jmp    0x1000312b
10062e82:	lea    ecx,[ebp-0xa0]
10062e88:	jmp    0x1000312b
10062e8d:	lea    ecx,[ebp-0x84]
10062e93:	jmp    0x1000312b
10062e98:	lea    ecx,[ebp-0x68]
10062e9b:	jmp    0x1000312b
10062ea0:	lea    ecx,[ebp-0xa0]
10062ea6:	jmp    0x1000312b
10062eab:	lea    ecx,[ebp-0x84]
10062eb1:	jmp    0x1000312b
10062eb6:	lea    ecx,[ebp-0xa0]
10062ebc:	jmp    0x1000312b
10062ec1:	mov    edx,DWORD PTR [esp+0x8]
10062ec5:	lea    eax,[edx-0xa4]
10062ecb:	mov    ecx,DWORD PTR [edx-0xa8]
10062ed1:	xor    ecx,eax
10062ed3:	call   0x10041d97
10062ed8:	add    eax,0xc
10062edb:	mov    ecx,DWORD PTR [edx-0x8]
10062ede:	xor    ecx,eax
10062ee0:	call   0x10041d97
10062ee5:	mov    eax,0x10079a20
10062eea:	jmp    0x10057fec
10062eef:	lea    ecx,[ebp-0x84]
10062ef5:	jmp    0x1000312b
10062efa:	lea    ecx,[ebp-0x30]
10062efd:	jmp    0x1000312b
10062f02:	lea    ecx,[ebp-0xa0]
10062f08:	jmp    0x1000312b
10062f0d:	lea    ecx,[ebp-0xa0]
10062f13:	jmp    0x1000312b
10062f18:	lea    ecx,[ebp-0x68]
10062f1b:	jmp    0x1000312b
10062f20:	lea    ecx,[ebp-0x4c]
10062f23:	jmp    0x1000312b
10062f28:	mov    edx,DWORD PTR [esp+0x8]
10062f2c:	lea    eax,[edx-0xac]
10062f32:	mov    ecx,DWORD PTR [edx-0xb0]
10062f38:	xor    ecx,eax
10062f3a:	call   0x10041d97
10062f3f:	add    eax,0xc
10062f42:	mov    ecx,DWORD PTR [edx-0x8]
10062f45:	xor    ecx,eax
10062f47:	call   0x10041d97
10062f4c:	mov    eax,0x10079a7c
10062f51:	jmp    0x10057fec
10062f56:	lea    eax,[ebp-0x1c]
10062f59:	jmp    0x10009963
10062f5e:	lea    eax,[ebp-0x18]
10062f61:	jmp    0x10009963
10062f66:	mov    edx,DWORD PTR [esp+0x8]
10062f6a:	lea    eax,[edx+0xc]
10062f6d:	mov    ecx,DWORD PTR [edx-0x44]
10062f70:	xor    ecx,eax
10062f72:	call   0x10041d97
10062f77:	mov    eax,0x10079ab0
10062f7c:	jmp    0x10057fec
10062f81:	lea    eax,[ebp-0x18]
10062f84:	jmp    0x10009963
10062f89:	lea    eax,[ebp-0x14]
10062f8c:	jmp    0x10009963
10062f91:	mov    edx,DWORD PTR [esp+0x8]
10062f95:	lea    eax,[edx+0xc]
10062f98:	mov    ecx,DWORD PTR [edx-0x40]
10062f9b:	xor    ecx,eax
10062f9d:	call   0x10041d97
10062fa2:	mov    eax,0x10079ae4
10062fa7:	jmp    0x10057fec
10062fac:	lea    eax,[ebp-0x20]
10062faf:	jmp    0x10009954
10062fb4:	lea    eax,[ebp-0x14]
10062fb7:	jmp    0x10009954
10062fbc:	lea    eax,[ebp-0x1c]
10062fbf:	jmp    0x10009963
10062fc4:	lea    eax,[ebp-0x18]
10062fc7:	jmp    0x10009745
10062fcc:	lea    esi,[ebp-0x40]
10062fcf:	jmp    0x10025ec6
10062fd4:	mov    edx,DWORD PTR [esp+0x8]
10062fd8:	lea    eax,[edx+0xc]
10062fdb:	mov    ecx,DWORD PTR [edx-0x44]
10062fde:	xor    ecx,eax
10062fe0:	call   0x10041d97
10062fe5:	mov    eax,0x10079b30
10062fea:	jmp    0x10057fec
10062fef:	lea    eax,[ebp-0x14]
10062ff2:	jmp    0x1000c46d
10062ff7:	mov    edx,DWORD PTR [esp+0x8]
10062ffb:	lea    eax,[edx+0xc]
10062ffe:	mov    ecx,DWORD PTR [edx-0x18]
10063001:	xor    ecx,eax
10063003:	call   0x10041d97
10063008:	mov    eax,0x10079b90
1006300d:	jmp    0x10057fec
10063012:	mov    eax,DWORD PTR [ebp-0x14]
10063015:	and    eax,0x1
10063018:	je     0x1006302a
1006301e:	and    DWORD PTR [ebp-0x14],0xfffffffe
10063022:	lea    eax,[ebp+0x18]
10063025:	jmp    0x10034a00
1006302a:	ret    
1006302b:	mov    edx,DWORD PTR [esp+0x8]
1006302f:	lea    eax,[edx+0xc]
10063032:	mov    ecx,DWORD PTR [edx-0x20]
10063035:	xor    ecx,eax
10063037:	call   0x10041d97
1006303c:	mov    eax,0x10079c00
10063041:	jmp    0x10057fec
10063046:	lea    ecx,[ebp-0x10]
10063049:	jmp    0x10015ad1
1006304e:	mov    edx,DWORD PTR [esp+0x8]
10063052:	lea    eax,[edx+0xc]
10063055:	mov    ecx,DWORD PTR [edx-0x24]
10063058:	xor    ecx,eax
1006305a:	call   0x10041d97
1006305f:	mov    eax,0x10079c2c
10063064:	jmp    0x10057fec
10063069:	lea    ecx,[ebp-0x18]
1006306c:	jmp    0x10010991
10063071:	lea    eax,[ebp-0x24]
10063074:	jmp    0x1001e534
10063079:	lea    eax,[ebp-0x28]
1006307c:	jmp    0x1001e534
10063081:	lea    eax,[ebp-0x20]
10063084:	jmp    0x1001e534
10063089:	mov    edx,DWORD PTR [esp+0x8]
1006308d:	lea    eax,[edx-0x2c]
10063090:	mov    ecx,DWORD PTR [edx-0x30]
10063093:	xor    ecx,eax
10063095:	call   0x10041d97
1006309a:	mov    eax,0x10079c70
1006309f:	jmp    0x10057fec
100630a4:	lea    ecx,[ebp-0x2c]
100630a7:	jmp    0x1000312b
100630ac:	mov    edx,DWORD PTR [esp+0x8]
100630b0:	lea    eax,[edx+0xc]
100630b3:	mov    ecx,DWORD PTR [edx-0x3c]
100630b6:	xor    ecx,eax
100630b8:	call   0x10041d97
100630bd:	mov    ecx,DWORD PTR [edx-0x4]
100630c0:	xor    ecx,eax
100630c2:	call   0x10041d97
100630c7:	mov    eax,0x10079c9c
100630cc:	jmp    0x10057fec
100630d1:	lea    ecx,[ebp-0x30]
100630d4:	jmp    0x1000312b
100630d9:	mov    edx,DWORD PTR [esp+0x8]
100630dd:	lea    eax,[edx+0xc]
100630e0:	mov    ecx,DWORD PTR [edx-0x34]
100630e3:	xor    ecx,eax
100630e5:	call   0x10041d97
100630ea:	mov    eax,0x10079cc8
100630ef:	jmp    0x10057fec
100630f4:	lea    ecx,[ebp-0x2c]
100630f7:	jmp    0x1000312b
100630fc:	push   DWORD PTR [ebp-0x34]
100630ff:	call   0x10041d92
10063104:	pop    ecx
10063105:	ret    
10063106:	mov    edx,DWORD PTR [esp+0x8]
1006310a:	lea    eax,[edx+0xc]
1006310d:	mov    ecx,DWORD PTR [edx-0x40]
10063110:	xor    ecx,eax
10063112:	call   0x10041d97
10063117:	mov    ecx,DWORD PTR [edx-0x4]
1006311a:	xor    ecx,eax
1006311c:	call   0x10041d97
10063121:	mov    eax,0x10079cfc
10063126:	jmp    0x10057fec
1006312b:	lea    ecx,[ebp-0x30]
1006312e:	jmp    0x1000312b
10063133:	lea    ecx,[ebp-0x4c]
10063136:	jmp    0x1000312b
1006313b:	lea    eax,[ebp-0x5c]
1006313e:	jmp    0x100020be
10063143:	mov    edx,DWORD PTR [esp+0x8]
10063147:	lea    eax,[edx-0x64]
1006314a:	mov    ecx,DWORD PTR [edx-0x68]
1006314d:	xor    ecx,eax
1006314f:	call   0x10041d97
10063154:	add    eax,0xc
10063157:	mov    ecx,DWORD PTR [edx-0x8]
1006315a:	xor    ecx,eax
1006315c:	call   0x10041d97
10063161:	mov    eax,0x10079d38
10063166:	jmp    0x10057fec
1006316b:	lea    ecx,[ebp-0x2c]
1006316e:	jmp    0x1000312b
10063173:	push   DWORD PTR [ebp-0x4c]
10063176:	call   0x10041d92
1006317b:	pop    ecx
1006317c:	ret    
1006317d:	lea    ecx,[ebp-0x48]
10063180:	jmp    0x1000312b
10063185:	push   DWORD PTR [ebp-0x54]
10063188:	call   0x10041d92
1006318d:	pop    ecx
1006318e:	ret    
1006318f:	mov    edx,DWORD PTR [esp+0x8]
10063193:	lea    eax,[edx+0xc]
10063196:	mov    ecx,DWORD PTR [edx-0x5c]
10063199:	xor    ecx,eax
1006319b:	call   0x10041d97
100631a0:	mov    ecx,DWORD PTR [edx-0x4]
100631a3:	xor    ecx,eax
100631a5:	call   0x10041d97
100631aa:	mov    eax,0x10079d7c
100631af:	jmp    0x10057fec
100631b4:	lea    ecx,[ebp-0x30]
100631b7:	jmp    0x1000312b
100631bc:	lea    ecx,[ebp-0xa0]
100631c2:	jmp    0x1000312b
100631c7:	lea    ecx,[ebp-0xbc]
100631cd:	jmp    0x1000312b
100631d2:	lea    ecx,[ebp-0xbc]
100631d8:	jmp    0x1000312b
100631dd:	mov    eax,DWORD PTR [ebp-0xcc]
100631e3:	and    eax,0x1
100631e6:	je     0x100631fe
100631ec:	and    DWORD PTR [ebp-0xcc],0xfffffffe
100631f3:	lea    ecx,[ebp-0xa0]
100631f9:	jmp    0x1000312b
100631fe:	ret    
100631ff:	mov    eax,DWORD PTR [ebp-0xcc]
10063205:	and    eax,0x2
10063208:	je     0x1006321d
1006320e:	and    DWORD PTR [ebp-0xcc],0xfffffffd
10063215:	lea    ecx,[ebp-0x68]
10063218:	jmp    0x1000312b
1006321d:	ret    
1006321e:	mov    eax,DWORD PTR [ebp-0xcc]
10063224:	and    eax,0x4
10063227:	je     0x1006323f
1006322d:	and    DWORD PTR [ebp-0xcc],0xfffffffb
10063234:	lea    ecx,[ebp-0xbc]
1006323a:	jmp    0x1000312b
1006323f:	ret    
10063240:	mov    eax,DWORD PTR [ebp-0xcc]
10063246:	and    eax,0x8
10063249:	je     0x1006325e
1006324f:	and    DWORD PTR [ebp-0xcc],0xfffffff7
10063256:	lea    ecx,[ebp-0x4c]
10063259:	jmp    0x1000312b
1006325e:	ret    
1006325f:	mov    eax,DWORD PTR [ebp-0xcc]
10063265:	and    eax,0x10
10063268:	je     0x10063280
1006326e:	and    DWORD PTR [ebp-0xcc],0xffffffef
10063275:	lea    ecx,[ebp-0x84]
1006327b:	jmp    0x1000312b
10063280:	ret    
10063281:	push   DWORD PTR [ebp-0xc4]
10063287:	call   0x10041d92
1006328c:	pop    ecx
1006328d:	ret    
1006328e:	mov    edx,DWORD PTR [esp+0x8]
10063292:	lea    eax,[edx-0xd4]
10063298:	mov    ecx,DWORD PTR [edx-0xd8]
1006329e:	xor    ecx,eax
100632a0:	call   0x10041d97
100632a5:	add    eax,0xc
100632a8:	mov    ecx,DWORD PTR [edx-0x8]
100632ab:	xor    ecx,eax
100632ad:	call   0x10041d97
100632b2:	mov    eax,0x10079df0
100632b7:	jmp    0x10057fec
100632bc:	lea    eax,[ebp-0x18]
100632bf:	jmp    0x100096f7
100632c4:	lea    eax,[ebp-0x14]
100632c7:	jmp    0x100096f7
100632cc:	lea    eax,[ebp-0x10]
100632cf:	jmp    0x100096f7
100632d4:	mov    edx,DWORD PTR [esp+0x8]
100632d8:	lea    eax,[edx+0xc]
100632db:	mov    ecx,DWORD PTR [edx-0x1c]
100632de:	xor    ecx,eax
100632e0:	call   0x10041d97
100632e5:	mov    eax,0x10079e2c
100632ea:	jmp    0x10057fec
100632ef:	lea    ecx,[ebp-0x2c]
100632f2:	jmp    0x1000312b
100632f7:	push   DWORD PTR [ebp-0x50]
100632fa:	call   0x10041d92
100632ff:	pop    ecx
10063300:	ret    
10063301:	lea    ecx,[ebp-0x48]
10063304:	jmp    0x1000312b
10063309:	push   DWORD PTR [ebp-0x50]
1006330c:	call   0x10041d92
10063311:	pop    ecx
10063312:	ret    
10063313:	mov    edx,DWORD PTR [esp+0x8]
10063317:	lea    eax,[edx+0xc]
1006331a:	mov    ecx,DWORD PTR [edx-0x60]
1006331d:	xor    ecx,eax
1006331f:	call   0x10041d97
10063324:	mov    ecx,DWORD PTR [edx-0x4]
10063327:	xor    ecx,eax
10063329:	call   0x10041d97
1006332e:	mov    eax,0x10079e70
10063333:	jmp    0x10057fec
10063338:	lea    eax,[ebp-0x10]
1006333b:	jmp    0x100096f7
10063340:	lea    eax,[ebp-0x14]
10063343:	jmp    0x100096f7
10063348:	lea    eax,[ebp-0x18]
1006334b:	jmp    0x100096f7
10063350:	mov    edx,DWORD PTR [esp+0x8]
10063354:	lea    eax,[edx+0xc]
10063357:	mov    ecx,DWORD PTR [edx-0x20]
1006335a:	xor    ecx,eax
1006335c:	call   0x10041d97
10063361:	mov    eax,0x10079eac
10063366:	jmp    0x10057fec
1006336b:	lea    eax,[ebp-0x14]
1006336e:	jmp    0x100020be
10063373:	lea    eax,[ebp-0x5c]
10063376:	push   eax
10063377:	call   0x10009a43
1006337c:	ret    
1006337d:	mov    eax,DWORD PTR [ebp-0x18]
10063380:	and    eax,0x1
10063383:	je     0x10063395
10063389:	and    DWORD PTR [ebp-0x18],0xfffffffe
1006338d:	mov    eax,DWORD PTR [ebp+0xc]
10063390:	jmp    0x100020be
10063395:	ret    
10063396:	mov    edx,DWORD PTR [esp+0x8]
1006339a:	lea    eax,[edx+0xc]
1006339d:	mov    ecx,DWORD PTR [edx-0x60]
100633a0:	xor    ecx,eax
100633a2:	call   0x10041d97
100633a7:	mov    eax,0x10079ee8
100633ac:	jmp    0x10057fec
100633b1:	lea    ecx,[ebp-0x64]
100633b4:	jmp    0x1000312b
100633b9:	lea    ecx,[ebp-0x48]
100633bc:	jmp    0x1000312b
100633c1:	lea    ecx,[ebp-0x80]
100633c4:	jmp    0x1000312b
100633c9:	lea    ecx,[ebp-0x2c]
100633cc:	jmp    0x1000312b
100633d1:	lea    esi,[ebp-0x98]
100633d7:	jmp    0x1000c491
100633dc:	mov    edx,DWORD PTR [esp+0x8]
100633e0:	lea    eax,[edx-0x9c]
100633e6:	mov    ecx,DWORD PTR [edx-0xa0]
100633ec:	xor    ecx,eax
100633ee:	call   0x10041d97
100633f3:	mov    eax,0x10079f34
100633f8:	jmp    0x10057fec
100633fd:	lea    eax,[ebp+0xc]
10063400:	jmp    0x100020be
10063405:	mov    eax,DWORD PTR [ebp-0x10]
10063408:	and    eax,0x1
1006340b:	je     0x1006341d
10063411:	and    DWORD PTR [ebp-0x10],0xfffffffe
10063415:	mov    eax,DWORD PTR [ebp+0x8]
10063418:	jmp    0x100020be
1006341d:	ret    
1006341e:	lea    eax,[ebp+0x10]
10063421:	jmp    0x10009954
10063426:	mov    edx,DWORD PTR [esp+0x8]
1006342a:	lea    eax,[edx+0xc]
1006342d:	mov    ecx,DWORD PTR [edx-0x14]
10063430:	xor    ecx,eax
10063432:	call   0x10041d97
10063437:	mov    eax,0x10079f70
1006343c:	jmp    0x10057fec
10063441:	lea    eax,[ebp-0x14]
10063444:	jmp    0x10009745
10063449:	lea    eax,[ebp-0x18]
1006344c:	jmp    0x10009745
10063451:	lea    eax,[ebp-0x14]
10063454:	jmp    0x10009745
10063459:	mov    edx,DWORD PTR [esp+0x8]
1006345d:	lea    eax,[edx+0xc]
10063460:	mov    ecx,DWORD PTR [edx-0x20]
10063463:	xor    ecx,eax
10063465:	call   0x10041d97
1006346a:	mov    eax,0x10079fac
1006346f:	jmp    0x10057fec
10063474:	lea    eax,[ebp+0x10]
10063477:	jmp    0x10009963
1006347c:	lea    eax,[ebp-0x1c]
1006347f:	jmp    0x1000c46d
10063484:	lea    eax,[ebp+0x8]
10063487:	jmp    0x10009954
1006348c:	mov    edx,DWORD PTR [esp+0x8]
10063490:	lea    eax,[edx+0xc]
10063493:	mov    ecx,DWORD PTR [edx-0x20]
10063496:	xor    ecx,eax
10063498:	call   0x10041d97
1006349d:	mov    eax,0x1007a01c
100634a2:	jmp    0x10057fec
100634a7:	lea    eax,[ebp-0x14]
100634aa:	jmp    0x1000caa2
100634af:	lea    esi,[ebp-0x10]
100634b2:	jmp    0x1000a462
100634b7:	lea    eax,[ebp-0x1c]
100634ba:	jmp    0x100020be
100634bf:	mov    eax,DWORD PTR [ebp-0x18]
100634c2:	and    eax,0x1
100634c5:	je     0x100634d7
100634cb:	and    DWORD PTR [ebp-0x18],0xfffffffe
100634cf:	mov    eax,DWORD PTR [ebp+0x8]
100634d2:	jmp    0x100020be
100634d7:	ret    
100634d8:	mov    edx,DWORD PTR [esp+0x8]
100634dc:	lea    eax,[edx+0xc]
100634df:	mov    ecx,DWORD PTR [edx-0x20]
100634e2:	xor    ecx,eax
100634e4:	call   0x10041d97
100634e9:	mov    eax,0x1007a060
100634ee:	jmp    0x10057fec
100634f3:	lea    eax,[ebp-0x10]
100634f6:	jmp    0x100020be
100634fb:	lea    ecx,[ebp-0x38]
100634fe:	jmp    0x1000312b
10063503:	mov    edx,DWORD PTR [esp+0x8]
10063507:	lea    eax,[edx+0xc]
1006350a:	mov    ecx,DWORD PTR [edx-0x3c]
1006350d:	xor    ecx,eax
1006350f:	call   0x10041d97
10063514:	mov    eax,0x1007a094
10063519:	jmp    0x10057fec
1006351e:	jmp    0x10037610
10063523:	lea    eax,[ebp+0x1c]
10063526:	jmp    0x10034a00
1006352b:	lea    ecx,[ebp+0x20]
1006352e:	jmp    0x1000312b
10063533:	lea    ecx,[ebp-0x48]
10063536:	jmp    0x1000312b
1006353b:	lea    ecx,[ebp-0x2c]
1006353e:	jmp    0x1000312b
10063543:	lea    ecx,[ebp+0x3c]
10063546:	jmp    0x1000312b
1006354b:	lea    ecx,[ebp-0x2c]
1006354e:	jmp    0x1000312b
10063553:	lea    eax,[ebp+0x14]
10063556:	jmp    0x100020be
1006355b:	lea    ecx,[ebp-0x48]
1006355e:	jmp    0x1000312b
10063563:	lea    ecx,[ebp-0x64]
10063566:	jmp    0x1000312b
1006356b:	lea    ecx,[ebp-0x80]
1006356e:	jmp    0x1000312b
10063573:	lea    eax,[ebp+0x1c]
10063576:	jmp    0x10003d3c
1006357b:	mov    edx,DWORD PTR [esp+0x8]
1006357f:	lea    eax,[edx+0xc]
10063582:	mov    ecx,DWORD PTR [edx-0x84]
10063588:	xor    ecx,eax
1006358a:	call   0x10041d97
1006358f:	mov    ecx,DWORD PTR [edx+0x64]
10063592:	xor    ecx,eax
10063594:	call   0x10041d97
10063599:	mov    eax,0x1007a164
1006359e:	jmp    0x10057fec
100635a3:	lea    esi,[ebp-0x1c]
100635a6:	jmp    0x1002b8c6
100635ab:	lea    eax,[ebp-0x20]
100635ae:	jmp    0x1001e534
100635b3:	lea    ecx,[ebp+0xa8]
100635b9:	jmp    0x1000312b
100635be:	lea    ecx,[ebp+0x8c]
100635c4:	jmp    0x1000312b
100635c9:	lea    eax,[ebp-0x74]
100635cc:	jmp    0x10019250
100635d1:	lea    ecx,[ebp-0xb0]
100635d7:	jmp    0x1000312b
100635dc:	lea    ecx,[ebp+0x70]
100635df:	jmp    0x1000312b
100635e4:	lea    ecx,[ebp+0x54]
100635e7:	jmp    0x1000312b
100635ec:	lea    ecx,[ebp+0x54]
100635ef:	jmp    0x1000312b
100635f4:	lea    eax,[ebp-0x28]
100635f7:	jmp    0x10002095
100635fc:	lea    ecx,[ebp-0xb0]
10063602:	jmp    0x1000312b
10063607:	lea    ecx,[ebp-0x120]
1006360d:	jmp    0x1000312b
10063612:	lea    ecx,[ebp-0x104]
10063618:	jmp    0x1000312b
1006361d:	lea    ecx,[ebp-0x13c]
10063623:	jmp    0x1000312b
10063628:	lea    ecx,[ebp-0x174]
1006362e:	jmp    0x1000312b
10063633:	lea    ecx,[ebp-0xe8]
10063639:	jmp    0x1000312b
1006363e:	lea    ecx,[ebp-0x190]
10063644:	jmp    0x1000312b
10063649:	lea    eax,[ebp-0x54]
1006364c:	jmp    0x100020be
10063651:	lea    ecx,[ebp+0x70]
10063654:	jmp    0x1000312b
10063659:	lea    eax,[ebp-0x24]
1006365c:	jmp    0x1001e534
10063661:	lea    ecx,[ebp-0x158]
10063667:	jmp    0x1000312b
1006366c:	lea    edi,[ebp-0x5c]
1006366f:	jmp    0x100024dc
10063674:	lea    ecx,[ebp-0xcc]
1006367a:	jmp    0x1000312b
1006367f:	lea    edi,[ebp-0x48]
10063682:	jmp    0x100024dc
10063687:	lea    ecx,[ebp+0x1c]
1006368a:	jmp    0x1000312b
1006368f:	lea    ecx,[ebp+0x54]
10063692:	jmp    0x1000312b
10063697:	lea    edi,[ebp-0x60]
1006369a:	jmp    0x100024dc
1006369f:	lea    ecx,[ebp-0xcc]
100636a5:	jmp    0x1000312b
100636aa:	lea    edi,[ebp-0x44]
100636ad:	jmp    0x100024dc
100636b2:	lea    ecx,[ebp+0x0]
100636b5:	jmp    0x1000312b
100636ba:	lea    edi,[ebp-0x4c]
100636bd:	jmp    0x100024dc
100636c2:	lea    ecx,[ebp+0x38]
100636c5:	jmp    0x1000312b
100636ca:	lea    eax,[ebp-0x2c]
100636cd:	jmp    0x1001e534
100636d2:	lea    ecx,[ebp-0x94]
100636d8:	jmp    0x10022074
100636dd:	lea    ecx,[ebp-0x78]
100636e0:	jmp    0x10022074
100636e5:	lea    eax,[ebp-0x2c]
100636e8:	jmp    0x10002095
100636ed:	mov    edx,DWORD PTR [esp+0x8]
100636f1:	lea    eax,[edx+0xc]
100636f4:	mov    ecx,DWORD PTR [edx-0x194]
100636fa:	xor    ecx,eax
100636fc:	call   0x10041d97
10063701:	mov    ecx,DWORD PTR [edx+0xd0]
10063707:	xor    ecx,eax
10063709:	call   0x10041d97
1006370e:	mov    eax,0x1007a334
10063713:	jmp    0x10057fec
10063718:	lea    ecx,[ebp-0xb8]
1006371e:	jmp    0x1000312b
10063723:	lea    ecx,[ebp-0x9c]
10063729:	jmp    0x1000312b
1006372e:	lea    ecx,[ebp-0xf0]
10063734:	jmp    0x1000312b
10063739:	lea    ecx,[ebp-0xf0]
1006373f:	jmp    0x1000312b
10063744:	lea    ecx,[ebp-0xf0]
1006374a:	jmp    0x1000312b
1006374f:	lea    ecx,[ebp-0xf0]
10063755:	jmp    0x1000312b
1006375a:	lea    ecx,[ebp-0xf0]
10063760:	jmp    0x1000312b
10063765:	lea    ecx,[ebp-0xf0]
1006376b:	jmp    0x1000312b
10063770:	lea    ecx,[ebp-0xf0]
10063776:	jmp    0x1000312b
1006377b:	lea    ecx,[ebp-0x144]
10063781:	jmp    0x1000312b
10063786:	lea    eax,[ebp-0x128]
1006378c:	jmp    0x100020be
10063791:	lea    ecx,[ebp-0x124]
10063797:	jmp    0x1000312b
1006379c:	lea    ecx,[ebp-0x124]
100637a2:	jmp    0x1000312b
100637a7:	lea    ecx,[ebp-0x124]
100637ad:	jmp    0x1000312b
100637b2:	mov    edx,DWORD PTR [esp+0x8]
100637b6:	lea    eax,[edx+0xc]
100637b9:	mov    ecx,DWORD PTR [edx-0x148]
100637bf:	xor    ecx,eax
100637c1:	call   0x10041d97
100637c6:	mov    ecx,DWORD PTR [edx-0x8]
100637c9:	xor    ecx,eax
100637cb:	call   0x10041d97
100637d0:	mov    eax,0x1007a40c
100637d5:	jmp    0x10057fec
100637da:	lea    ecx,[ebp+0xb0]
100637e0:	jmp    0x1000312b
100637e5:	lea    ecx,[ebp-0x48]
100637e8:	jmp    0x1000312b
100637ed:	lea    eax,[ebp-0x1c]
100637f0:	jmp    0x100020be
100637f5:	lea    ecx,[ebp+0x94]
100637fb:	jmp    0x1000312b
10063800:	lea    edi,[ebp-0x14]
10063803:	jmp    0x100024dc
10063808:	lea    edi,[ebp-0x14]
1006380b:	jmp    0x100024dc
10063810:	lea    esi,[ebp+0x0]
10063813:	jmp    0x1000b7b1
10063818:	lea    ecx,[ebp+0xb0]
1006381e:	jmp    0x1000312b
10063823:	lea    ecx,[ebp+0x94]
10063829:	jmp    0x1000312b
1006382e:	lea    eax,[ebp-0x1c]
10063831:	jmp    0x100020be
10063836:	lea    ecx,[ebp+0xb0]
1006383c:	jmp    0x1000312b
10063841:	lea    edi,[ebp-0x18]
10063844:	jmp    0x100024dc
10063849:	lea    edi,[ebp-0x18]
1006384c:	jmp    0x100024dc
10063851:	mov    edx,DWORD PTR [esp+0x8]
10063855:	lea    eax,[edx+0xc]
10063858:	mov    ecx,DWORD PTR [edx-0x4c]
1006385b:	xor    ecx,eax
1006385d:	call   0x10041d97
10063862:	mov    ecx,DWORD PTR [edx+0xd8]
10063868:	xor    ecx,eax
1006386a:	call   0x10041d97
1006386f:	mov    eax,0x1007a4dc
10063874:	jmp    0x10057fec
10063879:	lea    eax,[ebp-0x40]
1006387c:	jmp    0x1001ad96
10063881:	lea    ecx,[ebp-0x30]
10063884:	jmp    0x1000312b
10063889:	lea    ecx,[ebp-0x78]
1006388c:	jmp    0x1000312b
10063891:	lea    ecx,[ebp-0x5c]
10063894:	jmp    0x1000312b
10063899:	lea    eax,[ebp-0x34]
1006389c:	jmp    0x100020be
100638a1:	mov    edx,DWORD PTR [esp+0x8]
100638a5:	lea    eax,[edx+0xc]
100638a8:	mov    ecx,DWORD PTR [edx-0x80]
100638ab:	xor    ecx,eax
100638ad:	call   0x10041d97
100638b2:	mov    ecx,DWORD PTR [edx-0x8]
100638b5:	xor    ecx,eax
100638b7:	call   0x10041d97
100638bc:	mov    eax,0x1007a56c
100638c1:	jmp    0x10057fec
100638c6:	lea    eax,[ebp-0x18]
100638c9:	jmp    0x10003d3c
100638ce:	mov    edx,DWORD PTR [esp+0x8]
100638d2:	lea    eax,[edx+0xc]
100638d5:	mov    ecx,DWORD PTR [edx-0x1c]
100638d8:	xor    ecx,eax
100638da:	call   0x10041d97
100638df:	mov    eax,0x1007a5cc
100638e4:	jmp    0x10057fec
100638e9:	lea    eax,[ebp-0x14]
100638ec:	jmp    0x1001e534
100638f1:	lea    esi,[ebp-0x1c]
100638f4:	jmp    0x1002b8c6
100638f9:	mov    edx,DWORD PTR [esp+0x8]
100638fd:	lea    eax,[edx+0xc]
10063900:	mov    ecx,DWORD PTR [edx-0x20]
10063903:	xor    ecx,eax
10063905:	call   0x10041d97
1006390a:	mov    eax,0x1007a634
1006390f:	jmp    0x10057fec
10063914:	lea    eax,[ebp-0x14]
10063917:	jmp    0x1001e534
1006391c:	lea    esi,[ebp-0x1c]
1006391f:	jmp    0x1002b8c6
10063924:	mov    edx,DWORD PTR [esp+0x8]
10063928:	lea    eax,[edx+0xc]
1006392b:	mov    ecx,DWORD PTR [edx-0x20]
1006392e:	xor    ecx,eax
10063930:	call   0x10041d97
10063935:	mov    eax,0x1007a69c
1006393a:	jmp    0x10057fec
1006393f:	lea    eax,[ebp-0x34]
10063942:	jmp    0x100247b9
10063947:	lea    eax,[ebp-0x2c]
1006394a:	jmp    0x1000d763
1006394f:	push   DWORD PTR [ebp-0x40]
10063952:	call   0x10041d92
10063957:	pop    ecx
10063958:	ret    
10063959:	lea    eax,[ebp-0x40]
1006395c:	jmp    0x10009963
10063961:	lea    eax,[ebp-0x3c]
10063964:	jmp    0x10009745
10063969:	lea    eax,[ebp-0x38]
1006396c:	jmp    0x10009745
10063971:	mov    edx,DWORD PTR [esp+0x8]
10063975:	lea    eax,[edx-0x54]
10063978:	mov    ecx,DWORD PTR [edx-0x58]
1006397b:	xor    ecx,eax
1006397d:	call   0x10041d97
10063982:	mov    eax,0x1007a6f0
10063987:	jmp    0x10057fec
1006398c:	lea    eax,[ebp-0x14]
1006398f:	jmp    0x10009745
10063994:	mov    edx,DWORD PTR [esp+0x8]
10063998:	lea    eax,[edx+0xc]
1006399b:	mov    ecx,DWORD PTR [edx-0x18]
1006399e:	xor    ecx,eax
100639a0:	call   0x10041d97
100639a5:	mov    eax,0x1007a750
100639aa:	jmp    0x10057fec
100639af:	lea    eax,[ebp+0x8]
100639b2:	jmp    0x1001ac8c
100639b7:	lea    eax,[ebp-0x10]
100639ba:	jmp    0x10034a00
100639bf:	lea    ecx,[ebp-0x30]
100639c2:	jmp    0x1000312b
100639c7:	mov    edx,DWORD PTR [esp+0x8]
100639cb:	lea    eax,[edx+0xc]
100639ce:	mov    ecx,DWORD PTR [edx-0x38]
100639d1:	xor    ecx,eax
100639d3:	call   0x10041d97
100639d8:	mov    eax,0x1007a78c
100639dd:	jmp    0x10057fec
100639e2:	lea    ecx,[ebp-0x30]
100639e5:	jmp    0x1000312b
100639ea:	lea    eax,[ebp-0x54]
100639ed:	jmp    0x10003f34
100639f2:	lea    ecx,[ebp-0x4c]
100639f5:	jmp    0x1000312b
100639fa:	lea    eax,[ebp-0x50]
100639fd:	jmp    0x10034a00
10063a02:	push   DWORD PTR [ebp-0x58]
10063a05:	call   0x10041d92
10063a0a:	pop    ecx
10063a0b:	ret    
10063a0c:	lea    esi,[ebp-0x6c]
10063a0f:	jmp    0x1002afa2
10063a14:	lea    eax,[ebp-0x64]
10063a17:	jmp    0x10002095
10063a1c:	push   DWORD PTR [ebp-0x50]
10063a1f:	call   0x10041d92
10063a24:	pop    ecx
10063a25:	ret    
10063a26:	lea    eax,[ebp-0x78]
10063a29:	jmp    0x1002d68b
10063a2e:	lea    esi,[ebp-0x50]
10063a31:	jmp    0x10003f4a
10063a36:	lea    esi,[ebp-0x60]
10063a39:	jmp    0x10003f4a
10063a3e:	mov    edx,DWORD PTR [esp+0x8]
10063a42:	lea    eax,[edx+0xc]
10063a45:	mov    ecx,DWORD PTR [edx-0x7c]
10063a48:	xor    ecx,eax
10063a4a:	call   0x10041d97
10063a4f:	mov    ecx,DWORD PTR [edx-0x8]
10063a52:	xor    ecx,eax
10063a54:	call   0x10041d97
10063a59:	mov    eax,0x1007a84c
10063a5e:	jmp    0x10057fec
10063a63:	lea    ecx,[ebp-0xbc]
10063a69:	jmp    0x1000312b
10063a6e:	lea    ecx,[ebp-0x68]
10063a71:	jmp    0x1000312b
10063a76:	lea    ecx,[ebp-0x30]
10063a79:	jmp    0x1000312b
10063a7e:	lea    ecx,[ebp-0xa0]
10063a84:	jmp    0x1000312b
10063a89:	lea    ecx,[ebp-0x84]
10063a8f:	jmp    0x1000312b
10063a94:	lea    ecx,[ebp-0x4c]
10063a97:	jmp    0x1000312b
10063a9c:	lea    ecx,[ebp-0xf4]
10063aa2:	jmp    0x1000312b
10063aa7:	lea    ecx,[ebp-0x114]
10063aad:	jmp    0x1000312b
10063ab2:	lea    ecx,[ebp-0xa0]
10063ab8:	jmp    0x1000312b
10063abd:	lea    ecx,[ebp-0x4c]
10063ac0:	jmp    0x1000312b
10063ac5:	lea    ecx,[ebp-0x84]
10063acb:	jmp    0x1000312b
10063ad0:	lea    ecx,[ebp-0x114]
10063ad6:	jmp    0x1000312b
10063adb:	lea    ecx,[ebp-0xf4]
10063ae1:	jmp    0x1000312b
10063ae6:	lea    ecx,[ebp-0xd8]
10063aec:	jmp    0x1000312b
10063af1:	push   DWORD PTR [ebp-0x118]
10063af7:	call   0x10041d92
10063afc:	pop    ecx
10063afd:	ret    
10063afe:	lea    ecx,[ebp-0x114]
10063b04:	jmp    0x1000312b
10063b09:	lea    ecx,[ebp-0xa0]
10063b0f:	jmp    0x1000312b
10063b14:	lea    ecx,[ebp-0xf4]
10063b1a:	jmp    0x1000312b
10063b1f:	lea    ecx,[ebp-0x114]
10063b25:	jmp    0x1000312b
10063b2a:	lea    ecx,[ebp-0x114]
10063b30:	jmp    0x1000312b
10063b35:	lea    ecx,[ebp-0xa0]
10063b3b:	jmp    0x1000312b
10063b40:	lea    ecx,[ebp-0xf4]
10063b46:	jmp    0x1000312b
10063b4b:	lea    ecx,[ebp-0x114]
10063b51:	jmp    0x1000312b
10063b56:	lea    ecx,[ebp-0xf4]
10063b5c:	jmp    0x1000312b
10063b61:	lea    ecx,[ebp-0x114]
10063b67:	jmp    0x1000312b
10063b6c:	lea    ecx,[ebp-0x114]
10063b72:	jmp    0x1000312b
10063b77:	lea    ecx,[ebp-0x114]
10063b7d:	jmp    0x1000312b
10063b82:	mov    edx,DWORD PTR [esp+0x8]
10063b86:	lea    eax,[edx-0x12c]
10063b8c:	mov    ecx,DWORD PTR [edx-0x130]
10063b92:	xor    ecx,eax
10063b94:	call   0x10041d97
10063b99:	add    eax,0xc
10063b9c:	mov    ecx,DWORD PTR [edx-0x8]
10063b9f:	xor    ecx,eax
10063ba1:	call   0x10041d97
10063ba6:	mov    eax,0x1007a950
10063bab:	jmp    0x10057fec
10063bb0:	lea    ecx,[ebp+0x88]
10063bb6:	jmp    0x1000312b
10063bbb:	lea    eax,[ebp-0x1c]
10063bbe:	jmp    0x10003d3c
10063bc3:	lea    esi,[ebp+0x0]
10063bc6:	jmp    0x10002ecc
10063bcb:	mov    edx,DWORD PTR [esp+0x8]
10063bcf:	lea    eax,[edx+0xc]
10063bd2:	mov    ecx,DWORD PTR [edx-0x34]
10063bd5:	xor    ecx,eax
10063bd7:	call   0x10041d97
10063bdc:	mov    ecx,DWORD PTR [edx+0xb0]
10063be2:	xor    ecx,eax
10063be4:	call   0x10041d97
10063be9:	mov    eax,0x1007a9c0
10063bee:	jmp    0x10057fec
10063bf3:	jmp    0x10037610
10063bf8:	lea    ecx,[ebp-0x14]
10063bfb:	jmp    0x10015ad1
10063c00:	mov    edx,DWORD PTR [esp+0x8]
10063c04:	lea    eax,[edx+0xc]
10063c07:	mov    ecx,DWORD PTR [edx-0x18]
10063c0a:	xor    ecx,eax
10063c0c:	call   0x10041d97
10063c11:	mov    eax,0x1007aa28
10063c16:	jmp    0x10057fec
10063c1b:	lea    eax,[ebp-0x2c]
10063c1e:	jmp    0x1000d763
10063c23:	push   DWORD PTR [ebp-0x38]
10063c26:	call   0x10041d92
10063c2b:	pop    ecx
10063c2c:	ret    
10063c2d:	lea    eax,[ebp-0x34]
10063c30:	jmp    0x10009954
10063c35:	lea    eax,[ebp-0x40]
10063c38:	jmp    0x10009745
10063c3d:	lea    eax,[ebp-0x30]
10063c40:	jmp    0x10038d40
10063c45:	mov    edx,DWORD PTR [esp+0x8]
10063c49:	lea    eax,[edx-0x4c]
10063c4c:	mov    ecx,DWORD PTR [edx-0x50]
10063c4f:	xor    ecx,eax
10063c51:	call   0x10041d97
10063c56:	mov    eax,0x1007aa74
10063c5b:	jmp    0x10057fec
10063c60:	jmp    0x10037610
10063c65:	lea    ecx,[ebp-0x14]
10063c68:	jmp    0x10015ad1
10063c6d:	mov    edx,DWORD PTR [esp+0x8]
10063c71:	lea    eax,[edx+0xc]
10063c74:	mov    ecx,DWORD PTR [edx-0x18]
10063c77:	xor    ecx,eax
10063c79:	call   0x10041d97
10063c7e:	mov    eax,0x1007aadc
10063c83:	jmp    0x10057fec
10063c88:	lea    ecx,[ebp-0xa88]
10063c8e:	jmp    0x10015ad1
10063c93:	push   0x10015ad1
10063c98:	push   0x40
10063c9a:	push   0x4
10063c9c:	lea    eax,[ebp-0x210]
10063ca2:	push   eax
10063ca3:	call   0x10041ff9
10063ca8:	ret    
10063ca9:	push   0x10015ad1
10063cae:	push   0x40
10063cb0:	push   0x4
10063cb2:	lea    eax,[ebp-0x310]
10063cb8:	push   eax
10063cb9:	call   0x10041ff9
10063cbe:	ret    
10063cbf:	push   0x10015ad1
10063cc4:	push   0x40
10063cc6:	push   0x4
10063cc8:	lea    eax,[ebp-0x110]
10063cce:	push   eax
10063ccf:	call   0x10041ff9
10063cd4:	ret    
10063cd5:	lea    ecx,[ebp-0xa8c]
10063cdb:	jmp    0x10015ad1
10063ce0:	mov    edx,DWORD PTR [esp+0x8]
10063ce4:	lea    eax,[edx-0xa94]
10063cea:	mov    ecx,DWORD PTR [edx-0xa98]
10063cf0:	xor    ecx,eax
10063cf2:	call   0x10041d97
10063cf7:	mov    eax,0x1007ab28
10063cfc:	jmp    0x10057fec
10063d01:	lea    ecx,[ebp+0xc]
10063d04:	jmp    0x10015ad1
10063d09:	mov    edx,DWORD PTR [esp+0x8]
10063d0d:	lea    eax,[edx+0xc]
10063d10:	mov    ecx,DWORD PTR [edx-0x14]
10063d13:	xor    ecx,eax
10063d15:	call   0x10041d97
10063d1a:	mov    eax,0x1007ab54
10063d1f:	jmp    0x10057fec
10063d24:	mov    eax,0x1007ff10
10063d29:	jmp    0x1001ac8c
10063d2e:	mov    edx,DWORD PTR [esp+0x8]
10063d32:	lea    eax,[edx+0xc]
10063d35:	mov    ecx,DWORD PTR [edx-0x10]
10063d38:	xor    ecx,eax
10063d3a:	call   0x10041d97
10063d3f:	mov    eax,0x1007ab9c
10063d44:	jmp    0x10057fec
10063d49:	mov    esi,0x1007fd84
10063d4e:	jmp    0x10003f4a
10063d53:	mov    esi,0x1007fd88
10063d58:	jmp    0x10003f4a
10063d5d:	mov    edx,DWORD PTR [esp+0x8]
10063d61:	lea    eax,[edx+0xc]
10063d64:	mov    ecx,DWORD PTR [edx-0x10]
10063d67:	xor    ecx,eax
10063d69:	call   0x10041d97
10063d6e:	mov    eax,0x1007abd0
10063d73:	jmp    0x10057fec
10063d78:	int3   
10063d79:	int3   
10063d7a:	int3   
10063d7b:	int3   
10063d7c:	int3   
10063d7d:	int3   
10063d7e:	int3   
10063d7f:	int3   
10063d80:	push   0x32
10063d82:	push   0xa
10063d84:	push   0x1007fd34
10063d89:	call   0x100194da
10063d8e:	push   0x100642f0
10063d93:	call   0x10042174
10063d98:	pop    ecx
10063d99:	ret    
10063d9a:	xor    eax,eax
10063d9c:	push   eax
10063d9d:	push   eax
10063d9e:	push   eax
10063d9f:	call   DWORD PTR ds:0x10065074
10063da5:	mov    ds:0x1007fd58,eax
10063daa:	ret    
10063dab:	push   0x100642fb
10063db0:	call   0x10042174
10063db5:	pop    ecx
10063db6:	ret    
10063db7:	push   0x64507918
10063dbc:	push   0x1006bcc8
10063dc1:	call   0x10003d63
10063dc6:	push   eax
10063dc7:	push   0xd
10063dc9:	push   0x1006bcf4
10063dce:	call   0x10003d75
10063dd3:	add    esp,0x14
10063dd6:	mov    ds:0x1007fd6c,eax
10063ddb:	ret    
10063ddc:	push   0x1006bd04
10063de1:	push   0x10
10063de3:	push   0x1006bd2c
10063de8:	call   0x10003d75
10063ded:	add    esp,0xc
10063df0:	mov    ds:0x1007fd70,eax
10063df5:	ret    
10063df6:	push   0x494f527e
10063dfb:	push   0x3a43379a
10063e00:	push   0x1006bd40
10063e05:	call   0x10003d63
10063e0a:	pop    ecx
10063e0b:	pop    ecx
10063e0c:	push   eax
10063e0d:	call   0x10003d63
10063e12:	push   eax
10063e13:	push   0x11
10063e15:	push   0x1006bd6c
10063e1a:	call   0x10003d75
10063e1f:	add    esp,0x14
10063e22:	mov    ds:0x1007fd68,eax
10063e27:	ret    
10063e28:	push   0x1006bd80
10063e2d:	push   0x11
10063e2f:	push   0x1006bdb4
10063e34:	call   0x10003d75
10063e39:	add    esp,0xc
10063e3c:	mov    ds:0x1007fd64,eax
10063e41:	ret    
10063e42:	call   0x1000b7ed
10063e47:	push   0x10064316
10063e4c:	call   0x10042174
10063e51:	pop    ecx
10063e52:	ret    
10063e53:	push   0x36bf82de
10063e58:	push   0x2f202306
10063e5d:	push   0x1624df86
10063e62:	push   0x1006c904
10063e67:	call   0x10003d63
10063e6c:	pop    ecx
10063e6d:	pop    ecx
10063e6e:	push   eax
10063e6f:	call   0x10003d63
10063e74:	pop    ecx
10063e75:	pop    ecx
10063e76:	push   eax
10063e77:	call   0x10003d63
10063e7c:	push   eax
10063e7d:	push   0x2
10063e7f:	push   0x1006c938
10063e84:	call   0x10003d75
10063e89:	add    esp,0x14
10063e8c:	mov    ds:0x10080418,eax
10063e91:	ret    
10063e92:	push   0xc06b816
10063e97:	push   0xf61a424
10063e9c:	push   0x7c169ad2
10063ea1:	push   0x635b0ad2
10063ea6:	push   0x1006cdec
10063eab:	call   0x10003d63
10063eb0:	pop    ecx
10063eb1:	pop    ecx
10063eb2:	push   eax
10063eb3:	call   0x10003d63
10063eb8:	pop    ecx
10063eb9:	pop    ecx
10063eba:	push   eax
10063ebb:	call   0x10003d63
10063ec0:	pop    ecx
10063ec1:	pop    ecx
10063ec2:	push   eax
10063ec3:	call   0x10003d63
10063ec8:	push   eax
10063ec9:	push   0x1
10063ecb:	push   0x1006c0d4
10063ed0:	call   0x10003d75
10063ed5:	add    esp,0x14
10063ed8:	mov    ds:0x1008041c,eax
10063edd:	ret    
10063ede:	push   0x1006ce64
10063ee3:	push   0x10
10063ee5:	push   0x1006ce90
10063eea:	call   0x10003d75
10063eef:	add    esp,0xc
10063ef2:	mov    ds:0x1007fda0,eax
10063ef7:	ret    
10063ef8:	push   0x63c47546
10063efd:	push   0x6c48ff88
10063f02:	push   0x1006cea4
10063f07:	call   0x10003d63
10063f0c:	pop    ecx
10063f0d:	pop    ecx
10063f0e:	push   eax
10063f0f:	call   0x10003d63
10063f14:	push   eax
10063f15:	push   0x10
10063f17:	push   0x1006ced4
10063f1c:	call   0x10003d75
10063f21:	add    esp,0x14
10063f24:	mov    ds:0x1007fd9c,eax
10063f29:	ret    
10063f2a:	push   0x57386706
10063f2f:	push   0x1006cee8
10063f34:	call   0x10003d63
10063f39:	push   eax
10063f3a:	push   0x10
10063f3c:	push   0x1006cf18
10063f41:	call   0x10003d75
10063f46:	add    esp,0x14
10063f49:	mov    ds:0x1007fd98,eax
10063f4e:	ret    
10063f4f:	push   edi
10063f50:	mov    edi,0x1007fda8
10063f55:	call   0x10012720
10063f5a:	push   0x10064374
10063f5f:	call   0x10042174
10063f64:	pop    ecx
10063f65:	pop    edi
10063f66:	ret    
10063f67:	xor    eax,eax
10063f69:	push   eax
10063f6a:	push   eax
10063f6b:	push   eax
10063f6c:	call   DWORD PTR ds:0x10065074
10063f72:	mov    ds:0x1007fda4,eax
10063f77:	ret    
10063f78:	call   0x10012ae7
10063f7d:	push   0x10064381
10063f82:	call   0x10042174
10063f87:	pop    ecx
10063f88:	ret    
10063f89:	call   0x10017d3d
10063f8e:	mov    ds:0x1007fe5c,eax
10063f93:	mov    BYTE PTR [eax+0x15],0x1
10063f97:	mov    eax,ds:0x1007fe5c
10063f9c:	mov    DWORD PTR [eax+0x4],eax
10063f9f:	mov    eax,ds:0x1007fe5c
10063fa4:	mov    DWORD PTR [eax],eax
10063fa6:	mov    eax,ds:0x1007fe5c
10063fab:	mov    DWORD PTR [eax+0x8],eax
10063fae:	and    DWORD PTR ds:0x1007fe60,0x0
10063fb5:	push   0x10064386
10063fba:	call   0x10042174
10063fbf:	pop    ecx
10063fc0:	ret    
10063fc1:	push   esi
10063fc2:	mov    esi,0x1007fe78
10063fc7:	push   edi
10063fc8:	mov    ecx,esi
10063fca:	call   0x10014043
10063fcf:	xor    eax,eax
10063fd1:	mov    edi,0x1007fe68
10063fd6:	mov    ecx,esi
10063fd8:	mov    ds:0x1007fe6c,eax
10063fdd:	mov    ds:0x1007fe74,eax
10063fe2:	mov    ds:0x1007fe70,eax
10063fe7:	mov    DWORD PTR ds:0x1007fbe4,edi
10063fed:	mov    ds:0x1007fe90,eax
10063ff2:	call   0x10014057
10063ff7:	test   eax,eax
10063ff9:	jge    0x10064004
10063ffb:	mov    BYTE PTR ds:0x1007fbe0,0x1
10064002:	jmp    0x1006400e
10064004:	mov    DWORD PTR ds:0x1007fe6c,0x24
1006400e:	push   0x1006438b
10064013:	mov    DWORD PTR ds:0x1007fe68,0x1006e8dc
1006401d:	mov    DWORD PTR ds:0x1007fbf8,edi
10064023:	call   0x10042174
10064028:	pop    ecx
10064029:	pop    edi
1006402a:	pop    esi
1006402b:	ret    
1006402c:	xor    eax,eax
1006402e:	push   eax
1006402f:	push   eax
10064030:	push   eax
10064031:	call   DWORD PTR ds:0x10065074
10064037:	mov    ds:0x1007fea8,eax
1006403c:	ret    
1006403d:	push   0x1006439f
10064042:	call   0x10042174
10064047:	pop    ecx
10064048:	ret    
10064049:	call   0x100190ae
1006404e:	mov    ds:0x1007feb0,eax
10064053:	mov    BYTE PTR [eax+0x29],0x1
10064057:	mov    eax,ds:0x1007feb0
1006405c:	mov    DWORD PTR [eax+0x4],eax
1006405f:	mov    eax,ds:0x1007feb0
10064064:	mov    DWORD PTR [eax],eax
10064066:	mov    eax,ds:0x1007feb0
1006406b:	mov    DWORD PTR [eax+0x8],eax
1006406e:	and    DWORD PTR ds:0x1007feb4,0x0
10064075:	push   0x100643ac
1006407a:	call   0x10042174
1006407f:	pop    ecx
10064080:	ret    
10064081:	call   0x1001930e
10064086:	mov    ds:0x1007febc,eax
1006408b:	xor    eax,eax
1006408d:	push   eax
1006408e:	push   eax
1006408f:	push   eax
10064090:	mov    ds:0x1007fec0,eax
10064095:	call   DWORD PTR ds:0x10065074
1006409b:	push   0x100643b6
100640a0:	mov    ds:0x1007fec4,eax
100640a5:	call   0x10042174
100640aa:	pop    ecx
100640ab:	ret    
100640ac:	push   0x32
100640ae:	push   0xa
100640b0:	push   0x1007fec8
100640b5:	call   0x100194da
100640ba:	push   0x100643d6
100640bf:	call   0x10042174
100640c4:	pop    ecx
100640c5:	ret    
100640c6:	push   0xfa
100640cb:	push   0x32
100640cd:	push   0x1007feec
100640d2:	call   0x100194da
100640d7:	push   0x100643e1
100640dc:	call   0x10042174
100640e1:	pop    ecx
100640e2:	ret    
100640e3:	push   0x0
100640e5:	mov    eax,0x10063d2e
100640ea:	call   0x10058845
100640ef:	call   0x1001ae15
100640f4:	xor    esi,esi
100640f6:	mov    ds:0x1007ff14,eax
100640fb:	mov    DWORD PTR ds:0x1007ff18,esi
10064101:	mov    DWORD PTR [esp+0x18],esi
10064105:	call   0x1001ae2d
1006410a:	push   esi
1006410b:	push   esi
1006410c:	push   esi
1006410d:	mov    ds:0x1007ff20,eax
10064112:	mov    DWORD PTR ds:0x1007ff24,esi
10064118:	mov    DWORD PTR ds:0x1007ff2c,esi
1006411e:	call   DWORD PTR ds:0x10065074
10064124:	push   0x100643ec
10064129:	mov    ds:0x1007ff28,eax
1006412e:	call   0x10042174
10064133:	pop    ecx
10064134:	call   0x1005891d
10064139:	ret    
1006413a:	call   0x100216b7
1006413f:	mov    ds:0x1007ff38,eax
10064144:	mov    BYTE PTR [eax+0x21],0x1
10064148:	mov    eax,ds:0x1007ff38
1006414d:	mov    DWORD PTR [eax+0x4],eax
10064150:	mov    eax,ds:0x1007ff38
10064155:	mov    DWORD PTR [eax],eax
10064157:	mov    eax,ds:0x1007ff38
1006415c:	mov    DWORD PTR [eax+0x8],eax
1006415f:	and    DWORD PTR ds:0x1007ff3c,0x0
10064166:	push   0x10064402
1006416b:	call   0x10042174
10064170:	pop    ecx
10064171:	ret    
10064172:	xor    eax,eax
10064174:	push   eax
10064175:	push   eax
10064176:	push   eax
10064177:	call   DWORD PTR ds:0x10065074
1006417d:	mov    ds:0x1007ff30,eax
10064182:	ret    
10064183:	xor    eax,eax
10064185:	push   eax
10064186:	push   eax
10064187:	push   eax
10064188:	call   DWORD PTR ds:0x10065074
1006418e:	mov    ds:0x1007ff40,eax
10064193:	ret    
10064194:	xor    eax,eax
10064196:	push   eax
10064197:	push   eax
10064198:	push   eax
10064199:	push   eax
1006419a:	call   DWORD PTR ds:0x10065130
100641a0:	mov    ds:0x1007ff4c,eax
100641a5:	ret    
100641a6:	xor    eax,eax
100641a8:	push   eax
100641a9:	push   eax
100641aa:	push   eax
100641ab:	push   eax
100641ac:	call   DWORD PTR ds:0x10065130
100641b2:	mov    ds:0x1007ff44,eax
100641b7:	ret    
100641b8:	xor    eax,eax
100641ba:	push   eax
100641bb:	push   eax
100641bc:	push   eax
100641bd:	push   eax
100641be:	call   DWORD PTR ds:0x10065130
100641c4:	mov    ds:0x1007ff48,eax
100641c9:	ret    
100641ca:	call   0x1002693e
100641cf:	and    DWORD PTR ds:0x1007ff70,0x0
100641d6:	push   0x1006442e
100641db:	mov    ds:0x1007ff6c,eax
100641e0:	call   0x10042174
100641e5:	pop    ecx
100641e6:	ret    
100641e7:	call   0x1002693e
100641ec:	and    DWORD PTR ds:0x1007ff64,0x0
100641f3:	push   0x1006444e
100641f8:	mov    ds:0x1007ff60,eax
100641fd:	call   0x10042174
10064202:	pop    ecx
10064203:	ret    
10064204:	call   0x1002693e
10064209:	and    DWORD PTR ds:0x1007ff7c,0x0
10064210:	push   0x1006446e
10064215:	mov    ds:0x1007ff78,eax
1006421a:	call   0x10042174
1006421f:	pop    ecx
10064220:	ret    
10064221:	call   0x1002693e
10064226:	and    DWORD PTR ds:0x1007ff58,0x0
1006422d:	push   0x1006448e
10064232:	mov    ds:0x1007ff54,eax
10064237:	call   0x10042174
1006423c:	pop    ecx
1006423d:	ret    
1006423e:	int3   
1006423f:	int3   
10064240:	push   0x0
10064242:	push   0x0
10064244:	push   0x1
10064246:	push   0x0
10064248:	call   DWORD PTR ds:0x10065130
1006424e:	mov    ds:0x1007ff80,eax
10064253:	ret    
10064254:	int3   
10064255:	int3   
10064256:	int3   
10064257:	int3   
10064258:	int3   
10064259:	int3   
1006425a:	int3   
1006425b:	int3   
1006425c:	int3   
1006425d:	int3   
1006425e:	int3   
1006425f:	int3   
10064260:	push   0x100644b0
10064265:	call   0x10042174
1006426a:	pop    ecx
1006426b:	ret    
1006426c:	int3   
1006426d:	int3   
1006426e:	int3   
1006426f:	int3   
10064270:	push   0x10064500
10064275:	call   0x10042174
1006427a:	pop    ecx
1006427b:	ret    
1006427c:	mov    ecx,0x1007f9e0
10064281:	call   0x10055bcb
10064286:	push   0x1006450c
1006428b:	call   0x10042174
10064290:	pop    ecx
10064291:	ret    
10064292:	mov    ecx,0x1007fa1c
10064297:	call   0x10055ba5
1006429c:	push   0x10064516
100642a1:	call   0x10042174
100642a6:	pop    ecx
100642a7:	ret    
100642a8:	call   DWORD PTR ds:0x100651ac
100642ae:	push   0x10064520
100642b3:	mov    DWORD PTR ds:0x1007fa48,0x1006a708
100642bd:	mov    ds:0x1007fa4c,eax
100642c2:	mov    BYTE PTR ds:0x1007fa50,0x0
100642c9:	call   0x10042174
100642ce:	pop    ecx
100642cf:	ret    
100642d0:	push   0x1007fa48
100642d5:	mov    ecx,0x1007fa54
100642da:	call   0x10055d3e
100642df:	push   0x1006452a
100642e4:	call   0x10042174
100642e9:	pop    ecx
100642ea:	ret    
100642eb:	int3   
100642ec:	int3   
100642ed:	int3   
100642ee:	int3   
100642ef:	int3   
100642f0:	push   0x1007fd34
100642f5:	call   0x10001206
100642fa:	ret    
100642fb:	ret    
100642fc:	jmp    0x10004b96
10064301:	jmp    0x10004843
10064306:	mov    eax,ds:0x10080408
1006430b:	test   eax,eax
1006430d:	je     0x10064315
1006430f:	mov    ecx,DWORD PTR [eax]
10064311:	push   eax
10064312:	call   DWORD PTR [ecx+0x8]
10064315:	ret    
10064316:	push   0x0
10064318:	mov    eax,0x10063d5d
1006431d:	call   0x10058845
10064322:	push   0xffffffff
10064324:	mov    DWORD PTR [esp+0x1c],0x1
1006432c:	push   DWORD PTR ds:0x1007fd88
10064332:	call   DWORD PTR ds:0x10065084
10064338:	mov    eax,0x1007fd8c
1006433d:	call   0x1000cd60
10064342:	mov    eax,ds:0x1007fd88
10064347:	test   eax,eax
10064349:	mov    esi,DWORD PTR ds:0x10065070
1006434f:	je     0x10064354
10064351:	push   eax
10064352:	call   esi
10064354:	mov    eax,ds:0x1007fd84
10064359:	and    DWORD PTR ds:0x1007fd88,0x0
10064360:	test   eax,eax
10064362:	je     0x10064367
10064364:	push   eax
10064365:	call   esi
10064367:	and    DWORD PTR ds:0x1007fd84,0x0
1006436e:	call   0x1005891d
10064373:	ret    
10064374:	push   esi
10064375:	mov    esi,0x1007fda8
1006437a:	call   0x1000b749
1006437f:	pop    esi
10064380:	ret    
10064381:	jmp    0x10012b5e
10064386:	jmp    0x1001757d
1006438b:	mov    DWORD PTR ds:0x1007fe68,0x1006e8dc
10064395:	mov    ecx,0x1007fe68
1006439a:	jmp    0x100140b1
1006439f:	push   esi
100643a0:	mov    esi,0x1007fe98
100643a5:	call   0x1000424f
100643aa:	pop    esi
100643ab:	ret    
100643ac:	mov    eax,0x1007feac
100643b1:	jmp    0x10018c2d
100643b6:	push   esi
100643b7:	mov    esi,0x1007feb8
100643bc:	call   0x10019267
100643c1:	push   DWORD PTR ds:0x1007febc
100643c7:	call   0x10041d92
100643cc:	and    DWORD PTR ds:0x1007febc,0x0
100643d3:	pop    ecx
100643d4:	pop    esi
100643d5:	ret    
100643d6:	push   0x1007fec8
100643db:	call   0x10001206
100643e0:	ret    
100643e1:	push   0x1007feec
100643e6:	call   0x10001206
100643eb:	ret    
100643ec:	push   esi
100643ed:	mov    esi,0x1007ff1c
100643f2:	call   0x1001acf5
100643f7:	mov    eax,0x1007ff10
100643fc:	pop    esi
100643fd:	jmp    0x1001ac8c
10064402:	jmp    0x1002037b
10064407:	mov    eax,ds:0x1008040c
1006440c:	test   eax,eax
1006440e:	push   esi
1006440f:	mov    esi,eax
10064411:	je     0x1006442c
10064413:	push   0x1002252b
10064418:	push   0x2
1006441a:	push   0x14
1006441c:	add    eax,0x4
1006441f:	push   eax
10064420:	call   0x10041ff9
10064425:	push   esi
10064426:	call   0x10041d92
1006442b:	pop    ecx
1006442c:	pop    esi
1006442d:	ret    
1006442e:	push   esi
1006442f:	mov    esi,0x1007ff68
10064434:	call   0x10026956
10064439:	push   DWORD PTR ds:0x1007ff6c
1006443f:	call   0x10041d92
10064444:	and    DWORD PTR ds:0x1007ff6c,0x0
1006444b:	pop    ecx
1006444c:	pop    esi
1006444d:	ret    
1006444e:	push   esi
1006444f:	mov    esi,0x1007ff5c
10064454:	call   0x10026956
10064459:	push   DWORD PTR ds:0x1007ff60
1006445f:	call   0x10041d92
10064464:	and    DWORD PTR ds:0x1007ff60,0x0
1006446b:	pop    ecx
1006446c:	pop    esi
1006446d:	ret    
1006446e:	push   esi
1006446f:	mov    esi,0x1007ff74
10064474:	call   0x10026956
10064479:	push   DWORD PTR ds:0x1007ff78
1006447f:	call   0x10041d92
10064484:	and    DWORD PTR ds:0x1007ff78,0x0
1006448b:	pop    ecx
1006448c:	pop    esi
1006448d:	ret    
1006448e:	push   esi
1006448f:	mov    esi,0x1007ff50
10064494:	call   0x10026956
10064499:	push   DWORD PTR ds:0x1007ff54
1006449f:	call   0x10041d92
100644a4:	and    DWORD PTR ds:0x1007ff54,0x0
100644ab:	pop    ecx
100644ac:	pop    esi
100644ad:	ret    
100644ae:	int3   
100644af:	int3   
100644b0:	cmp    DWORD PTR ds:0x1007e708,0x10
100644b7:	jb     0x100644c7
100644b9:	mov    eax,ds:0x1007e6f4
100644be:	push   eax
100644bf:	call   0x10041d92
100644c4:	add    esp,0x4
100644c7:	xor    eax,eax
100644c9:	mov    DWORD PTR ds:0x1007e708,0xf
100644d3:	mov    ds:0x1007e704,eax
100644d8:	mov    ds:0x1007e6f4,al
100644dd:	ret    
100644de:	mov    DWORD PTR ds:0x1007ea64,0x100655b8
100644e8:	mov    ecx,0x1007ea64
100644ed:	jmp    0x10041ed0
100644f2:	int3   
100644f3:	int3   
100644f4:	int3   
100644f5:	int3   
100644f6:	int3   
100644f7:	int3   
100644f8:	int3   
100644f9:	int3   
100644fa:	int3   
100644fb:	int3   
100644fc:	int3   
100644fd:	int3   
100644fe:	int3   
100644ff:	int3   
10064500:	push   0x1007df78
10064505:	call   DWORD PTR ds:0x10065294
1006450b:	ret    
1006450c:	mov    ecx,0x1007f9e0
10064511:	jmp    0x10055b39
10064516:	mov    ecx,0x1007fa1c
1006451b:	jmp    0x10055c7a
10064520:	mov    ecx,0x1007fa48
10064525:	jmp    0x10055c92
1006452a:	mov    DWORD PTR ds:0x1007fa54,0x1006a71c
10064534:	ret    
